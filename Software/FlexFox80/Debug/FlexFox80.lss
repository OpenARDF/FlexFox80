
FlexFox80.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000006f2  00804000  0000f1a0  0000f254  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000f1a0  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000411  008046f2  008046f2  0000f946  2**0
                  ALLOC
  3 .eeprom       00000035  00810000  00810000  0000f946  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .comment      0000005c  00000000  00000000  0000f97b  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000f9d8  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 00000bd0  00000000  00000000  0000fa18  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000e7d7  00000000  00000000  000105e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000534e  00000000  00000000  0001edbf  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000098bc  00000000  00000000  0002410d  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00002be8  00000000  00000000  0002d9cc  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00006058  00000000  00000000  000305b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00005c2a  00000000  00000000  0003660c  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000b10  00000000  00000000  0003c236  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b0 01 	jmp	0x360	; 0x360 <__dtors_end>
       4:	0c 94 da 01 	jmp	0x3b4	; 0x3b4 <__bad_interrupt>
       8:	0c 94 da 01 	jmp	0x3b4	; 0x3b4 <__bad_interrupt>
       c:	0c 94 da 01 	jmp	0x3b4	; 0x3b4 <__bad_interrupt>
      10:	0c 94 da 01 	jmp	0x3b4	; 0x3b4 <__bad_interrupt>
      14:	0c 94 da 01 	jmp	0x3b4	; 0x3b4 <__bad_interrupt>
      18:	0c 94 fd 10 	jmp	0x21fa	; 0x21fa <__vector_6>
      1c:	0c 94 da 01 	jmp	0x3b4	; 0x3b4 <__bad_interrupt>
      20:	0c 94 da 01 	jmp	0x3b4	; 0x3b4 <__bad_interrupt>
      24:	0c 94 da 01 	jmp	0x3b4	; 0x3b4 <__bad_interrupt>
      28:	0c 94 da 01 	jmp	0x3b4	; 0x3b4 <__bad_interrupt>
      2c:	0c 94 da 01 	jmp	0x3b4	; 0x3b4 <__bad_interrupt>
      30:	0c 94 99 15 	jmp	0x2b32	; 0x2b32 <__vector_12>
      34:	0c 94 d9 66 	jmp	0xcdb2	; 0xcdb2 <__vector_13>
      38:	0c 94 da 01 	jmp	0x3b4	; 0x3b4 <__bad_interrupt>
      3c:	0c 94 da 01 	jmp	0x3b4	; 0x3b4 <__bad_interrupt>
      40:	0c 94 da 01 	jmp	0x3b4	; 0x3b4 <__bad_interrupt>
      44:	0c 94 da 01 	jmp	0x3b4	; 0x3b4 <__bad_interrupt>
      48:	0c 94 da 01 	jmp	0x3b4	; 0x3b4 <__bad_interrupt>
      4c:	0c 94 21 08 	jmp	0x1042	; 0x1042 <__vector_19>
      50:	0c 94 29 0b 	jmp	0x1652	; 0x1652 <__vector_20>
      54:	0c 94 da 01 	jmp	0x3b4	; 0x3b4 <__bad_interrupt>
      58:	0c 94 3d 15 	jmp	0x2a7a	; 0x2a7a <__vector_22>
      5c:	0c 94 da 01 	jmp	0x3b4	; 0x3b4 <__bad_interrupt>
      60:	0c 94 e8 33 	jmp	0x67d0	; 0x67d0 <__vector_24>
      64:	0c 94 da 01 	jmp	0x3b4	; 0x3b4 <__bad_interrupt>
      68:	0c 94 da 01 	jmp	0x3b4	; 0x3b4 <__bad_interrupt>
      6c:	0c 94 da 01 	jmp	0x3b4	; 0x3b4 <__bad_interrupt>
      70:	0c 94 da 01 	jmp	0x3b4	; 0x3b4 <__bad_interrupt>
      74:	0c 94 e3 16 	jmp	0x2dc6	; 0x2dc6 <__vector_29>
      78:	0c 94 eb 07 	jmp	0xfd6	; 0xfd6 <__vector_30>
      7c:	0c 94 b3 0c 	jmp	0x1966	; 0x1966 <__vector_31>
      80:	0c 94 58 0e 	jmp	0x1cb0	; 0x1cb0 <__vector_32>
      84:	0c 94 da 01 	jmp	0x3b4	; 0x3b4 <__bad_interrupt>
      88:	0c 94 da 01 	jmp	0x3b4	; 0x3b4 <__bad_interrupt>
      8c:	0c 94 da 01 	jmp	0x3b4	; 0x3b4 <__bad_interrupt>
      90:	0c 94 da 01 	jmp	0x3b4	; 0x3b4 <__bad_interrupt>
      94:	0c 94 da 01 	jmp	0x3b4	; 0x3b4 <__bad_interrupt>
      98:	0c 94 da 01 	jmp	0x3b4	; 0x3b4 <__bad_interrupt>
      9c:	0c 94 da 01 	jmp	0x3b4	; 0x3b4 <__bad_interrupt>
      a0:	0c 94 da 01 	jmp	0x3b4	; 0x3b4 <__bad_interrupt>
      a4:	0c 94 c7 10 	jmp	0x218e	; 0x218e <__vector_41>
      a8:	0c 94 da 01 	jmp	0x3b4	; 0x3b4 <__bad_interrupt>
      ac:	0c 94 da 01 	jmp	0x3b4	; 0x3b4 <__bad_interrupt>
      b0:	0c 94 da 01 	jmp	0x3b4	; 0x3b4 <__bad_interrupt>
      b4:	0c 94 da 01 	jmp	0x3b4	; 0x3b4 <__bad_interrupt>
      b8:	0c 94 da 01 	jmp	0x3b4	; 0x3b4 <__bad_interrupt>
      bc:	0c 94 da 01 	jmp	0x3b4	; 0x3b4 <__bad_interrupt>
      c0:	0c 94 da 01 	jmp	0x3b4	; 0x3b4 <__bad_interrupt>
      c4:	0c 94 da 01 	jmp	0x3b4	; 0x3b4 <__bad_interrupt>
      c8:	0c 94 da 01 	jmp	0x3b4	; 0x3b4 <__bad_interrupt>
      cc:	0c 94 da 01 	jmp	0x3b4	; 0x3b4 <__bad_interrupt>
      d0:	0c 94 da 01 	jmp	0x3b4	; 0x3b4 <__bad_interrupt>
      d4:	0c 94 da 01 	jmp	0x3b4	; 0x3b4 <__bad_interrupt>
      d8:	0c 94 da 01 	jmp	0x3b4	; 0x3b4 <__bad_interrupt>
      dc:	0c 94 65 08 	jmp	0x10ca	; 0x10ca <__vector_55>
      e0:	0c 94 ee 0b 	jmp	0x17dc	; 0x17dc <__vector_56>
      e4:	0c 94 da 01 	jmp	0x3b4	; 0x3b4 <__bad_interrupt>
      e8:	d0 2b       	or	r29, r16
      ea:	e4 2b       	or	r30, r20
      ec:	fa 2b       	or	r31, r26
      ee:	10 2c       	mov	r1, r0
      f0:	26 2c       	mov	r2, r6
      f2:	6c 2d       	mov	r22, r12
      f4:	61 2d       	mov	r22, r1
      f6:	61 2c       	mov	r6, r1
      f8:	71 2c       	mov	r7, r1
      fa:	83 2c       	mov	r8, r3
      fc:	95 2c       	mov	r9, r5
      fe:	a7 2c       	mov	r10, r7
     100:	e1 2c       	mov	r14, r1
     102:	f1 2c       	mov	r15, r1
     104:	03 2d       	mov	r16, r3
     106:	15 2d       	mov	r17, r5
     108:	27 2d       	mov	r18, r7
     10a:	f8 44       	sbci	r31, 0x48	; 72
     10c:	05 45       	sbci	r16, 0x55	; 85
     10e:	d2 44       	sbci	r29, 0x42	; 66
     110:	05 45       	sbci	r16, 0x55	; 85
     112:	05 45       	sbci	r16, 0x55	; 85
     114:	05 45       	sbci	r16, 0x55	; 85
     116:	e0 44       	sbci	r30, 0x40	; 64
     118:	05 45       	sbci	r16, 0x55	; 85
     11a:	05 45       	sbci	r16, 0x55	; 85
     11c:	05 45       	sbci	r16, 0x55	; 85
     11e:	5a 44       	sbci	r21, 0x4A	; 74
     120:	05 45       	sbci	r16, 0x55	; 85
     122:	05 45       	sbci	r16, 0x55	; 85
     124:	05 45       	sbci	r16, 0x55	; 85
     126:	05 45       	sbci	r16, 0x55	; 85
     128:	05 45       	sbci	r16, 0x55	; 85
     12a:	05 45       	sbci	r16, 0x55	; 85
     12c:	05 45       	sbci	r16, 0x55	; 85
     12e:	05 45       	sbci	r16, 0x55	; 85
     130:	05 45       	sbci	r16, 0x55	; 85
     132:	05 45       	sbci	r16, 0x55	; 85
     134:	05 45       	sbci	r16, 0x55	; 85
     136:	05 45       	sbci	r16, 0x55	; 85
     138:	05 45       	sbci	r16, 0x55	; 85
     13a:	05 45       	sbci	r16, 0x55	; 85
     13c:	05 45       	sbci	r16, 0x55	; 85
     13e:	05 45       	sbci	r16, 0x55	; 85
     140:	05 45       	sbci	r16, 0x55	; 85
     142:	05 45       	sbci	r16, 0x55	; 85
     144:	05 45       	sbci	r16, 0x55	; 85
     146:	05 45       	sbci	r16, 0x55	; 85
     148:	8a 44       	sbci	r24, 0x4A	; 74
     14a:	05 45       	sbci	r16, 0x55	; 85
     14c:	05 45       	sbci	r16, 0x55	; 85
     14e:	05 45       	sbci	r16, 0x55	; 85
     150:	05 45       	sbci	r16, 0x55	; 85
     152:	05 45       	sbci	r16, 0x55	; 85
     154:	05 45       	sbci	r16, 0x55	; 85
     156:	05 45       	sbci	r16, 0x55	; 85
     158:	05 45       	sbci	r16, 0x55	; 85
     15a:	be 44       	sbci	r27, 0x4E	; 78
     15c:	c8 44       	sbci	r28, 0x48	; 72
     15e:	ee 44       	sbci	r30, 0x4E	; 78
     160:	31 44       	sbci	r19, 0x41	; 65
     162:	05 45       	sbci	r16, 0x55	; 85
     164:	05 45       	sbci	r16, 0x55	; 85
     166:	05 45       	sbci	r16, 0x55	; 85
     168:	3f 44       	sbci	r19, 0x4F	; 79
     16a:	05 45       	sbci	r16, 0x55	; 85
     16c:	05 45       	sbci	r16, 0x55	; 85
     16e:	05 45       	sbci	r16, 0x55	; 85
     170:	4d 44       	sbci	r20, 0x4D	; 77
     172:	34 56       	subi	r19, 0x64	; 100
     174:	cb 55       	subi	r28, 0x5B	; 91
     176:	18 56       	subi	r17, 0x68	; 104
     178:	42 56       	subi	r20, 0x62	; 98
     17a:	1f 56       	subi	r17, 0x6F	; 111
     17c:	42 56       	subi	r20, 0x62	; 98
     17e:	e7 55       	subi	r30, 0x57	; 87
     180:	c4 55       	subi	r28, 0x54	; 84
     182:	d9 55       	subi	r29, 0x59	; 89
     184:	e0 55       	subi	r30, 0x50	; 80
     186:	42 56       	subi	r20, 0x62	; 98
     188:	03 56       	subi	r16, 0x63	; 99
     18a:	b6 55       	subi	r27, 0x56	; 86
     18c:	0a 56       	subi	r16, 0x6A	; 106
     18e:	af 55       	subi	r26, 0x5F	; 95
     190:	d2 55       	subi	r29, 0x52	; 82
     192:	6a 55       	subi	r22, 0x5A	; 90
     194:	71 55       	subi	r23, 0x51	; 81
     196:	78 55       	subi	r23, 0x58	; 88
     198:	7f 55       	subi	r23, 0x5F	; 95
     19a:	86 55       	subi	r24, 0x56	; 86
     19c:	8d 55       	subi	r24, 0x5D	; 93
     19e:	93 55       	subi	r25, 0x53	; 83
     1a0:	9a 55       	subi	r25, 0x5A	; 90
     1a2:	a1 55       	subi	r26, 0x51	; 81
     1a4:	a8 55       	subi	r26, 0x58	; 88
     1a6:	ee 55       	subi	r30, 0x5E	; 94
     1a8:	f5 55       	subi	r31, 0x55	; 85
     1aa:	3b 56       	subi	r19, 0x6B	; 107
     1ac:	fc 55       	subi	r31, 0x5C	; 92
     1ae:	42 56       	subi	r20, 0x62	; 98
     1b0:	bd 55       	subi	r27, 0x5D	; 93
     1b2:	26 56       	subi	r18, 0x66	; 102
     1b4:	b8 54       	subi	r27, 0x48	; 72
     1b6:	bf 54       	subi	r27, 0x4F	; 79
     1b8:	c6 54       	subi	r28, 0x46	; 70
     1ba:	cd 54       	subi	r28, 0x4D	; 77
     1bc:	d4 54       	subi	r29, 0x44	; 68
     1be:	da 54       	subi	r29, 0x4A	; 74
     1c0:	e1 54       	subi	r30, 0x41	; 65
     1c2:	e8 54       	subi	r30, 0x48	; 72
     1c4:	ee 54       	subi	r30, 0x4E	; 78
     1c6:	f4 54       	subi	r31, 0x44	; 68
     1c8:	fb 54       	subi	r31, 0x4B	; 75
     1ca:	02 55       	subi	r16, 0x52	; 82
     1cc:	09 55       	subi	r16, 0x59	; 89
     1ce:	10 55       	subi	r17, 0x50	; 80
     1d0:	17 55       	subi	r17, 0x57	; 87
     1d2:	1e 55       	subi	r17, 0x5E	; 94
     1d4:	25 55       	subi	r18, 0x55	; 85
     1d6:	2c 55       	subi	r18, 0x5C	; 92
     1d8:	33 55       	subi	r19, 0x53	; 83
     1da:	39 55       	subi	r19, 0x59	; 89
     1dc:	40 55       	subi	r20, 0x50	; 80
     1de:	47 55       	subi	r20, 0x57	; 87
     1e0:	4e 55       	subi	r20, 0x5E	; 94
     1e2:	55 55       	subi	r21, 0x55	; 85
     1e4:	5c 55       	subi	r21, 0x5C	; 92
     1e6:	63 55       	subi	r22, 0x53	; 83
     1e8:	42 56       	subi	r20, 0x62	; 98
     1ea:	42 56       	subi	r20, 0x62	; 98
     1ec:	42 56       	subi	r20, 0x62	; 98
     1ee:	42 56       	subi	r20, 0x62	; 98
     1f0:	11 56       	subi	r17, 0x61	; 97
     1f2:	42 56       	subi	r20, 0x62	; 98
     1f4:	42 56       	subi	r20, 0x62	; 98
     1f6:	42 56       	subi	r20, 0x62	; 98
     1f8:	42 56       	subi	r20, 0x62	; 98
     1fa:	42 56       	subi	r20, 0x62	; 98
     1fc:	42 56       	subi	r20, 0x62	; 98
     1fe:	42 56       	subi	r20, 0x62	; 98
     200:	42 56       	subi	r20, 0x62	; 98
     202:	42 56       	subi	r20, 0x62	; 98
     204:	42 56       	subi	r20, 0x62	; 98
     206:	42 56       	subi	r20, 0x62	; 98
     208:	42 56       	subi	r20, 0x62	; 98
     20a:	42 56       	subi	r20, 0x62	; 98
     20c:	42 56       	subi	r20, 0x62	; 98
     20e:	42 56       	subi	r20, 0x62	; 98
     210:	42 56       	subi	r20, 0x62	; 98
     212:	42 56       	subi	r20, 0x62	; 98
     214:	42 56       	subi	r20, 0x62	; 98
     216:	42 56       	subi	r20, 0x62	; 98
     218:	42 56       	subi	r20, 0x62	; 98
     21a:	42 56       	subi	r20, 0x62	; 98
     21c:	42 56       	subi	r20, 0x62	; 98
     21e:	42 56       	subi	r20, 0x62	; 98
     220:	42 56       	subi	r20, 0x62	; 98
     222:	42 56       	subi	r20, 0x62	; 98
     224:	42 56       	subi	r20, 0x62	; 98
     226:	42 56       	subi	r20, 0x62	; 98
     228:	42 56       	subi	r20, 0x62	; 98
     22a:	2d 56       	subi	r18, 0x6D	; 109
     22c:	64 6e       	ori	r22, 0xE4	; 228
     22e:	6f 6e       	ori	r22, 0xEF	; 239
     230:	7a 6e       	ori	r23, 0xEA	; 234
     232:	85 6e       	ori	r24, 0xE5	; 229
     234:	90 6e       	ori	r25, 0xE0	; 224
     236:	9b 6e       	ori	r25, 0xEB	; 235
     238:	a6 6e       	ori	r26, 0xE6	; 230
     23a:	b1 6e       	ori	r27, 0xE1	; 225
     23c:	bc 6e       	ori	r27, 0xEC	; 236
     23e:	c7 6e       	ori	r28, 0xE7	; 231
     240:	d2 6e       	ori	r29, 0xE2	; 226
     242:	dd 6e       	ori	r29, 0xED	; 237
     244:	e8 6e       	ori	r30, 0xE8	; 232
     246:	f3 6e       	ori	r31, 0xE3	; 227
     248:	fe 6e       	ori	r31, 0xEE	; 238
     24a:	09 6f       	ori	r16, 0xF9	; 249
     24c:	14 6f       	ori	r17, 0xF4	; 244
     24e:	1f 6f       	ori	r17, 0xFF	; 255

00000250 <__trampolines_end>:
     250:	4e 41       	sbci	r20, 0x1E	; 30
     252:	4e 49       	Address 0x00000252 is out of bounds.
.word	0xffff	; ????

00000253 <pstr_inity>:
     253:	49 4e 49 54 59                                      INITY

00000258 <pstr_inf>:
     258:	49 4e 46                                            INF

0000025b <pwr_m10>:
     25b:	cd cc cc 3d 0a d7 23 3c 17 b7 d1 38 77 cc 2b 32     ...=..#<...8w.+2
     26b:	95 95 e6 24 1f b1 4f 0a                             ...$..O.

00000273 <pwr_p10>:
     273:	00 00 20 41 00 00 c8 42 00 40 1c 46 20 bc be 4c     .. A...B.@.F ..L
     283:	ca 1b 0e 5a ae c5 9d 74                             ...Z...t

0000028b <strfmonths>:
     28b:	4a 61 6e 75 61 72 79 20 46 65 62 72 75 61 72 79     January February
     29b:	20 4d 61 72 63 68 20 41 70 72 69 6c 20 4d 61 79      March April May
     2ab:	20 4a 75 6e 65 20 4a 75 6c 79 20 41 75 67 75 73      June July Augus
     2bb:	74 20 53 65 70 74 65 6d 62 65 72 20 4f 63 74 6f     t September Octo
     2cb:	62 65 72 20 4e 6f 76 65 6d 62 65 72 20 44 65 63     ber November Dec
     2db:	65 6d 62 65 72 20 00                                ember .

000002e2 <strfwkdays>:
     2e2:	53 75 6e 64 61 79 20 4d 6f 6e 64 61 79 20 54 75     Sunday Monday Tu
     2f2:	65 73 64 61 79 20 57 65 64 6e 65 73 64 61 79 20     esday Wednesday 
     302:	54 68 75 72 73 64 61 79 20 46 72 69 64 61 79 20     Thursday Friday 
     312:	53 61 74 75 72 64 61 79 20 00                       Saturday .

0000031c <ascdays>:
     31c:	53 75 6e 4d 6f 6e 54 75 65 57 65 64 54 68 75 46     SunMonTueWedThuF
     32c:	72 69 53 61 74 00                                   riSat.

00000332 <ascmonths>:
     332:	4a 61 6e 46 65 62 4d 61 72 41 70 72 4d 61 79 4a     JanFebMarAprMayJ
     342:	75 6e 4a 75 6c 41 75 67 53 65 70 4f 63 74 4e 6f     unJulAugSepOctNo
     352:	76 44 65 63 00 00                                   vDec..

00000358 <__ctors_start>:
     358:	9e 32       	cpi	r25, 0x2E	; 46
     35a:	64 34       	cpi	r22, 0x44	; 68

0000035c <__ctors_end>:
     35c:	ab 32       	cpi	r26, 0x2B	; 43
     35e:	71 34       	cpi	r23, 0x41	; 65

00000360 <__dtors_end>:
     360:	11 24       	eor	r1, r1
     362:	1f be       	out	0x3f, r1	; 63
     364:	cf ef       	ldi	r28, 0xFF	; 255
     366:	cd bf       	out	0x3d, r28	; 61
     368:	df e7       	ldi	r29, 0x7F	; 127
     36a:	de bf       	out	0x3e, r29	; 62

0000036c <__do_copy_data>:
     36c:	16 e4       	ldi	r17, 0x46	; 70
     36e:	a0 e0       	ldi	r26, 0x00	; 0
     370:	b0 e4       	ldi	r27, 0x40	; 64
     372:	e0 ea       	ldi	r30, 0xA0	; 160
     374:	f1 ef       	ldi	r31, 0xF1	; 241
     376:	00 e0       	ldi	r16, 0x00	; 0
     378:	0b bf       	out	0x3b, r16	; 59
     37a:	02 c0       	rjmp	.+4      	; 0x380 <__do_copy_data+0x14>
     37c:	07 90       	elpm	r0, Z+
     37e:	0d 92       	st	X+, r0
     380:	a2 3f       	cpi	r26, 0xF2	; 242
     382:	b1 07       	cpc	r27, r17
     384:	d9 f7       	brne	.-10     	; 0x37c <__do_copy_data+0x10>

00000386 <__do_clear_bss>:
     386:	2b e4       	ldi	r18, 0x4B	; 75
     388:	a2 ef       	ldi	r26, 0xF2	; 242
     38a:	b6 e4       	ldi	r27, 0x46	; 70
     38c:	01 c0       	rjmp	.+2      	; 0x390 <.do_clear_bss_start>

0000038e <.do_clear_bss_loop>:
     38e:	1d 92       	st	X+, r1

00000390 <.do_clear_bss_start>:
     390:	a3 30       	cpi	r26, 0x03	; 3
     392:	b2 07       	cpc	r27, r18
     394:	e1 f7       	brne	.-8      	; 0x38e <.do_clear_bss_loop>

00000396 <__do_global_ctors>:
     396:	11 e0       	ldi	r17, 0x01	; 1
     398:	ce ea       	ldi	r28, 0xAE	; 174
     39a:	d1 e0       	ldi	r29, 0x01	; 1
     39c:	04 c0       	rjmp	.+8      	; 0x3a6 <__do_global_ctors+0x10>
     39e:	21 97       	sbiw	r28, 0x01	; 1
     3a0:	fe 01       	movw	r30, r28
     3a2:	0e 94 43 72 	call	0xe486	; 0xe486 <__tablejump2__>
     3a6:	cc 3a       	cpi	r28, 0xAC	; 172
     3a8:	d1 07       	cpc	r29, r17
     3aa:	c9 f7       	brne	.-14     	; 0x39e <__do_global_ctors+0x8>
     3ac:	0e 94 6b 17 	call	0x2ed6	; 0x2ed6 <main>
     3b0:	0c 94 c3 78 	jmp	0xf186	; 0xf186 <__do_global_dtors>

000003b4 <__bad_interrupt>:
     3b4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000003b8 <is_leap_year>:
     3b8:	9c 01       	movw	r18, r24
     3ba:	23 70       	andi	r18, 0x03	; 3
     3bc:	33 27       	eor	r19, r19
     3be:	23 2b       	or	r18, r19
     3c0:	59 f4       	brne	.+22     	; 0x3d8 <is_leap_year+0x20>
     3c2:	64 e6       	ldi	r22, 0x64	; 100
     3c4:	70 e0       	ldi	r23, 0x00	; 0
     3c6:	0e 94 ee 71 	call	0xe3dc	; 0xe3dc <__divmodhi4>
     3ca:	89 2b       	or	r24, r25
     3cc:	39 f4       	brne	.+14     	; 0x3dc <is_leap_year+0x24>
     3ce:	63 70       	andi	r22, 0x03	; 3
     3d0:	77 27       	eor	r23, r23
     3d2:	81 e0       	ldi	r24, 0x01	; 1
     3d4:	67 2b       	or	r22, r23
     3d6:	19 f0       	breq	.+6      	; 0x3de <is_leap_year+0x26>
     3d8:	80 e0       	ldi	r24, 0x00	; 0
     3da:	08 95       	ret
     3dc:	81 e0       	ldi	r24, 0x01	; 1
     3de:	08 95       	ret

000003e0 <localtime>:
     3e0:	6f ee       	ldi	r22, 0xEF	; 239
     3e2:	7a e4       	ldi	r23, 0x4A	; 74
     3e4:	0e 94 f7 01 	call	0x3ee	; 0x3ee <localtime_r>
     3e8:	8f ee       	ldi	r24, 0xEF	; 239
     3ea:	9a e4       	ldi	r25, 0x4A	; 74
     3ec:	08 95       	ret

000003ee <localtime_r>:
     3ee:	cf 92       	push	r12
     3f0:	df 92       	push	r13
     3f2:	ef 92       	push	r14
     3f4:	ff 92       	push	r15
     3f6:	0f 93       	push	r16
     3f8:	1f 93       	push	r17
     3fa:	cf 93       	push	r28
     3fc:	df 93       	push	r29
     3fe:	00 d0       	rcall	.+0      	; 0x400 <__LOCK_REGION_LENGTH__>
     400:	00 d0       	rcall	.+0      	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
     402:	cd b7       	in	r28, 0x3d	; 61
     404:	de b7       	in	r29, 0x3e	; 62
     406:	6c 01       	movw	r12, r24
     408:	7b 01       	movw	r14, r22
     40a:	e0 91 ff 4a 	lds	r30, 0x4AFF	; 0x804aff <__dst_ptr>
     40e:	f0 91 00 4b 	lds	r31, 0x4B00	; 0x804b00 <__dst_ptr+0x1>
     412:	30 97       	sbiw	r30, 0x00	; 0
     414:	29 f0       	breq	.+10     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
     416:	6b ef       	ldi	r22, 0xFB	; 251
     418:	7a e4       	ldi	r23, 0x4A	; 74
     41a:	09 95       	icall
     41c:	8c 01       	movw	r16, r24
     41e:	02 c0       	rjmp	.+4      	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
     420:	0f ef       	ldi	r16, 0xFF	; 255
     422:	1f ef       	ldi	r17, 0xFF	; 255
     424:	f6 01       	movw	r30, r12
     426:	40 81       	ld	r20, Z
     428:	51 81       	ldd	r21, Z+1	; 0x01
     42a:	62 81       	ldd	r22, Z+2	; 0x02
     42c:	73 81       	ldd	r23, Z+3	; 0x03
     42e:	80 91 fb 4a 	lds	r24, 0x4AFB	; 0x804afb <__utc_offset>
     432:	90 91 fc 4a 	lds	r25, 0x4AFC	; 0x804afc <__utc_offset+0x1>
     436:	a0 91 fd 4a 	lds	r26, 0x4AFD	; 0x804afd <__utc_offset+0x2>
     43a:	b0 91 fe 4a 	lds	r27, 0x4AFE	; 0x804afe <__utc_offset+0x3>
     43e:	84 0f       	add	r24, r20
     440:	95 1f       	adc	r25, r21
     442:	a6 1f       	adc	r26, r22
     444:	b7 1f       	adc	r27, r23
     446:	10 16       	cp	r1, r16
     448:	11 06       	cpc	r1, r17
     44a:	4c f4       	brge	.+18     	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
     44c:	a8 01       	movw	r20, r16
     44e:	01 2e       	mov	r0, r17
     450:	00 0c       	add	r0, r0
     452:	66 0b       	sbc	r22, r22
     454:	77 0b       	sbc	r23, r23
     456:	84 0f       	add	r24, r20
     458:	95 1f       	adc	r25, r21
     45a:	a6 1f       	adc	r26, r22
     45c:	b7 1f       	adc	r27, r23
     45e:	89 83       	std	Y+1, r24	; 0x01
     460:	9a 83       	std	Y+2, r25	; 0x02
     462:	ab 83       	std	Y+3, r26	; 0x03
     464:	bc 83       	std	Y+4, r27	; 0x04
     466:	b7 01       	movw	r22, r14
     468:	ce 01       	movw	r24, r28
     46a:	01 96       	adiw	r24, 0x01	; 1
     46c:	0e 94 7f 06 	call	0xcfe	; 0xcfe <gmtime_r>
     470:	f7 01       	movw	r30, r14
     472:	02 87       	std	Z+10, r16	; 0x0a
     474:	13 87       	std	Z+11, r17	; 0x0b
     476:	24 96       	adiw	r28, 0x04	; 4
     478:	cd bf       	out	0x3d, r28	; 61
     47a:	de bf       	out	0x3e, r29	; 62
     47c:	df 91       	pop	r29
     47e:	cf 91       	pop	r28
     480:	1f 91       	pop	r17
     482:	0f 91       	pop	r16
     484:	ff 90       	pop	r15
     486:	ef 90       	pop	r14
     488:	df 90       	pop	r13
     48a:	cf 90       	pop	r12
     48c:	08 95       	ret

0000048e <month_length>:
     48e:	62 30       	cpi	r22, 0x02	; 2
     490:	21 f4       	brne	.+8      	; 0x49a <month_length+0xc>
     492:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <is_leap_year>
     496:	84 5e       	subi	r24, 0xE4	; 228
     498:	08 95       	ret
     49a:	68 30       	cpi	r22, 0x08	; 8
     49c:	08 f0       	brcs	.+2      	; 0x4a0 <month_length+0x12>
     49e:	6f 5f       	subi	r22, 0xFF	; 255
     4a0:	61 70       	andi	r22, 0x01	; 1
     4a2:	8e e1       	ldi	r24, 0x1E	; 30
     4a4:	86 0f       	add	r24, r22
     4a6:	08 95       	ret

000004a8 <set_system_time>:
     4a8:	0f b6       	in	r0, 0x3f	; 63
     4aa:	f8 94       	cli
     4ac:	60 93 eb 4a 	sts	0x4AEB, r22	; 0x804aeb <__system_time>
     4b0:	70 93 ec 4a 	sts	0x4AEC, r23	; 0x804aec <__system_time+0x1>
     4b4:	80 93 ed 4a 	sts	0x4AED, r24	; 0x804aed <__system_time+0x2>
     4b8:	90 93 ee 4a 	sts	0x4AEE, r25	; 0x804aee <__system_time+0x3>
     4bc:	0f be       	out	0x3f, r0	; 63
     4be:	08 95       	ret

000004c0 <pgm_copystring>:
     4c0:	cf 92       	push	r12
     4c2:	df 92       	push	r13
     4c4:	ef 92       	push	r14
     4c6:	0f 93       	push	r16
     4c8:	6b 01       	movw	r12, r22
     4ca:	e8 2e       	mov	r14, r24
     4cc:	7c 2d       	mov	r23, r12
     4ce:	6d 2d       	mov	r22, r13
     4d0:	5e 2d       	mov	r21, r14
     4d2:	ae 2d       	mov	r26, r14
     4d4:	c6 01       	movw	r24, r12
     4d6:	01 96       	adiw	r24, 0x01	; 1
     4d8:	a1 1d       	adc	r26, r1
     4da:	44 23       	and	r20, r20
     4dc:	51 f0       	breq	.+20     	; 0x4f2 <pgm_copystring+0x32>
     4de:	6c 01       	movw	r12, r24
     4e0:	ea 2e       	mov	r14, r26
     4e2:	e7 2f       	mov	r30, r23
     4e4:	f6 2f       	mov	r31, r22
     4e6:	0e 94 b0 78 	call	0xf160	; 0xf160 <__xload_1>
     4ea:	60 32       	cpi	r22, 0x20	; 32
     4ec:	79 f7       	brne	.-34     	; 0x4cc <pgm_copystring+0xc>
     4ee:	41 50       	subi	r20, 0x01	; 1
     4f0:	ed cf       	rjmp	.-38     	; 0x4cc <pgm_copystring+0xc>
     4f2:	f6 01       	movw	r30, r12
     4f4:	0e 94 b0 78 	call	0xf160	; 0xf160 <__xload_1>
     4f8:	6c 01       	movw	r12, r24
     4fa:	ea 2e       	mov	r14, r26
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	60 32       	cpi	r22, 0x20	; 32
     500:	39 f4       	brne	.+14     	; 0x510 <pgm_copystring+0x50>
     502:	f9 01       	movw	r30, r18
     504:	10 82       	st	Z, r1
     506:	0f 91       	pop	r16
     508:	ef 90       	pop	r14
     50a:	df 90       	pop	r13
     50c:	cf 90       	pop	r12
     50e:	08 95       	ret
     510:	80 17       	cp	r24, r16
     512:	b9 f3       	breq	.-18     	; 0x502 <pgm_copystring+0x42>
     514:	2f 5f       	subi	r18, 0xFF	; 255
     516:	3f 4f       	sbci	r19, 0xFF	; 255
     518:	f9 01       	movw	r30, r18
     51a:	31 97       	sbiw	r30, 0x01	; 1
     51c:	60 83       	st	Z, r22
     51e:	8f 5f       	subi	r24, 0xFF	; 255
     520:	f6 01       	movw	r30, r12
     522:	5e 2d       	mov	r21, r14
     524:	0e 94 b0 78 	call	0xf160	; 0xf160 <__xload_1>
     528:	9f ef       	ldi	r25, 0xFF	; 255
     52a:	c9 1a       	sub	r12, r25
     52c:	d9 0a       	sbc	r13, r25
     52e:	e9 0a       	sbc	r14, r25
     530:	e6 cf       	rjmp	.-52     	; 0x4fe <pgm_copystring+0x3e>

00000532 <strftime>:
     532:	2f 92       	push	r2
     534:	3f 92       	push	r3
     536:	4f 92       	push	r4
     538:	5f 92       	push	r5
     53a:	6f 92       	push	r6
     53c:	7f 92       	push	r7
     53e:	8f 92       	push	r8
     540:	9f 92       	push	r9
     542:	af 92       	push	r10
     544:	bf 92       	push	r11
     546:	cf 92       	push	r12
     548:	df 92       	push	r13
     54a:	ef 92       	push	r14
     54c:	ff 92       	push	r15
     54e:	0f 93       	push	r16
     550:	1f 93       	push	r17
     552:	cf 93       	push	r28
     554:	df 93       	push	r29
     556:	cd b7       	in	r28, 0x3d	; 61
     558:	de b7       	in	r29, 0x3e	; 62
     55a:	a2 97       	sbiw	r28, 0x22	; 34
     55c:	cd bf       	out	0x3d, r28	; 61
     55e:	de bf       	out	0x3e, r29	; 62
     560:	2c 01       	movw	r4, r24
     562:	69 a3       	std	Y+33, r22	; 0x21
     564:	7a a3       	std	Y+34, r23	; 0x22
     566:	4a 01       	movw	r8, r20
     568:	79 01       	movw	r14, r18
     56a:	61 2c       	mov	r6, r1
     56c:	71 2c       	mov	r7, r1
     56e:	9e 01       	movw	r18, r28
     570:	2f 5f       	subi	r18, 0xFF	; 255
     572:	3f 4f       	sbci	r19, 0xFF	; 255
     574:	69 01       	movw	r12, r18
     576:	84 e6       	ldi	r24, 0x64	; 100
     578:	28 2e       	mov	r2, r24
     57a:	31 2c       	mov	r3, r1
     57c:	90 e9       	ldi	r25, 0x90	; 144
     57e:	a9 2e       	mov	r10, r25
     580:	96 e4       	ldi	r25, 0x46	; 70
     582:	b9 2e       	mov	r11, r25
     584:	29 a1       	ldd	r18, Y+33	; 0x21
     586:	3a a1       	ldd	r19, Y+34	; 0x22
     588:	62 16       	cp	r6, r18
     58a:	73 06       	cpc	r7, r19
     58c:	08 f0       	brcs	.+2      	; 0x590 <strftime+0x5e>
     58e:	cd c2       	rjmp	.+1434   	; 0xb2a <strftime+0x5f8>
     590:	d4 01       	movw	r26, r8
     592:	8c 91       	ld	r24, X
     594:	85 32       	cpi	r24, 0x25	; 37
     596:	09 f0       	breq	.+2      	; 0x59a <strftime+0x68>
     598:	bc c2       	rjmp	.+1400   	; 0xb12 <strftime+0x5e0>
     59a:	11 96       	adiw	r26, 0x01	; 1
     59c:	1c 91       	ld	r17, X
     59e:	15 34       	cpi	r17, 0x45	; 69
     5a0:	31 f0       	breq	.+12     	; 0x5ae <strftime+0x7c>
     5a2:	1f 34       	cpi	r17, 0x4F	; 79
     5a4:	21 f0       	breq	.+8      	; 0x5ae <strftime+0x7c>
     5a6:	b2 e0       	ldi	r27, 0x02	; 2
     5a8:	8b 0e       	add	r8, r27
     5aa:	91 1c       	adc	r9, r1
     5ac:	06 c0       	rjmp	.+12     	; 0x5ba <strftime+0x88>
     5ae:	f4 01       	movw	r30, r8
     5b0:	12 81       	ldd	r17, Z+2	; 0x02
     5b2:	94 01       	movw	r18, r8
     5b4:	2d 5f       	subi	r18, 0xFD	; 253
     5b6:	3f 4f       	sbci	r19, 0xFF	; 255
     5b8:	49 01       	movw	r8, r18
     5ba:	19 35       	cpi	r17, 0x59	; 89
     5bc:	09 f4       	brne	.+2      	; 0x5c0 <strftime+0x8e>
     5be:	32 c2       	rjmp	.+1124   	; 0xa24 <strftime+0x4f2>
     5c0:	0c f0       	brlt	.+2      	; 0x5c4 <strftime+0x92>
     5c2:	60 c0       	rjmp	.+192    	; 0x684 <strftime+0x152>
     5c4:	19 34       	cpi	r17, 0x49	; 73
     5c6:	09 f4       	brne	.+2      	; 0x5ca <strftime+0x98>
     5c8:	3f c1       	rjmp	.+638    	; 0x848 <strftime+0x316>
     5ca:	44 f5       	brge	.+80     	; 0x61c <strftime+0xea>
     5cc:	13 34       	cpi	r17, 0x43	; 67
     5ce:	09 f4       	brne	.+2      	; 0x5d2 <strftime+0xa0>
     5d0:	e7 c0       	rjmp	.+462    	; 0x7a0 <strftime+0x26e>
     5d2:	54 f4       	brge	.+20     	; 0x5e8 <strftime+0xb6>
     5d4:	11 34       	cpi	r17, 0x41	; 65
     5d6:	09 f4       	brne	.+2      	; 0x5da <strftime+0xa8>
     5d8:	be c0       	rjmp	.+380    	; 0x756 <strftime+0x224>
     5da:	0c f0       	brlt	.+2      	; 0x5de <strftime+0xac>
     5dc:	ca c0       	rjmp	.+404    	; 0x772 <strftime+0x240>
     5de:	15 32       	cpi	r17, 0x25	; 37
     5e0:	09 f0       	breq	.+2      	; 0x5e4 <strftime+0xb2>
     5e2:	74 c2       	rjmp	.+1256   	; 0xacc <strftime+0x59a>
     5e4:	19 83       	std	Y+1, r17	; 0x01
     5e6:	75 c2       	rjmp	.+1258   	; 0xad2 <strftime+0x5a0>
     5e8:	16 34       	cpi	r17, 0x46	; 70
     5ea:	09 f4       	brne	.+2      	; 0x5ee <strftime+0xbc>
     5ec:	ea c0       	rjmp	.+468    	; 0x7c2 <strftime+0x290>
     5ee:	64 f4       	brge	.+24     	; 0x608 <strftime+0xd6>
     5f0:	14 34       	cpi	r17, 0x44	; 68
     5f2:	09 f0       	breq	.+2      	; 0x5f6 <strftime+0xc4>
     5f4:	6b c2       	rjmp	.+1238   	; 0xacc <strftime+0x59a>
     5f6:	f7 01       	movw	r30, r14
     5f8:	86 81       	ldd	r24, Z+6	; 0x06
     5fa:	97 81       	ldd	r25, Z+7	; 0x07
     5fc:	b1 01       	movw	r22, r2
     5fe:	0e 94 ee 71 	call	0xe3dc	; 0xe3dc <__divmodhi4>
     602:	9f 93       	push	r25
     604:	8f 93       	push	r24
     606:	e7 c1       	rjmp	.+974    	; 0x9d6 <strftime+0x4a4>
     608:	17 34       	cpi	r17, 0x47	; 71
     60a:	09 f4       	brne	.+2      	; 0x60e <strftime+0xdc>
     60c:	f8 c0       	rjmp	.+496    	; 0x7fe <strftime+0x2cc>
     60e:	18 34       	cpi	r17, 0x48	; 72
     610:	09 f0       	breq	.+2      	; 0x614 <strftime+0xe2>
     612:	5c c2       	rjmp	.+1208   	; 0xacc <strftime+0x59a>
     614:	d7 01       	movw	r26, r14
     616:	12 96       	adiw	r26, 0x02	; 2
     618:	8c 91       	ld	r24, X
     61a:	30 c1       	rjmp	.+608    	; 0x87c <strftime+0x34a>
     61c:	14 35       	cpi	r17, 0x54	; 84
     61e:	09 f4       	brne	.+2      	; 0x622 <strftime+0xf0>
     620:	89 c1       	rjmp	.+786    	; 0x934 <strftime+0x402>
     622:	64 f4       	brge	.+24     	; 0x63c <strftime+0x10a>
     624:	12 35       	cpi	r17, 0x52	; 82
     626:	09 f4       	brne	.+2      	; 0x62a <strftime+0xf8>
     628:	6e c1       	rjmp	.+732    	; 0x906 <strftime+0x3d4>
     62a:	0c f0       	brlt	.+2      	; 0x62e <strftime+0xfc>
     62c:	25 c1       	rjmp	.+586    	; 0x878 <strftime+0x346>
     62e:	1d 34       	cpi	r17, 0x4D	; 77
     630:	09 f0       	breq	.+2      	; 0x634 <strftime+0x102>
     632:	4c c2       	rjmp	.+1176   	; 0xacc <strftime+0x59a>
     634:	d7 01       	movw	r26, r14
     636:	11 96       	adiw	r26, 0x01	; 1
     638:	8c 91       	ld	r24, X
     63a:	20 c1       	rjmp	.+576    	; 0x87c <strftime+0x34a>
     63c:	16 35       	cpi	r17, 0x56	; 86
     63e:	09 f4       	brne	.+2      	; 0x642 <strftime+0x110>
     640:	a5 c1       	rjmp	.+842    	; 0x98c <strftime+0x45a>
     642:	0c f4       	brge	.+2      	; 0x646 <strftime+0x114>
     644:	a1 c1       	rjmp	.+834    	; 0x988 <strftime+0x456>
     646:	17 35       	cpi	r17, 0x57	; 87
     648:	09 f4       	brne	.+2      	; 0x64c <strftime+0x11a>
     64a:	b4 c1       	rjmp	.+872    	; 0x9b4 <strftime+0x482>
     64c:	18 35       	cpi	r17, 0x58	; 88
     64e:	09 f0       	breq	.+2      	; 0x652 <strftime+0x120>
     650:	3d c2       	rjmp	.+1146   	; 0xacc <strftime+0x59a>
     652:	f7 01       	movw	r30, r14
     654:	80 81       	ld	r24, Z
     656:	28 2f       	mov	r18, r24
     658:	08 2e       	mov	r0, r24
     65a:	00 0c       	add	r0, r0
     65c:	33 0b       	sbc	r19, r19
     65e:	3f 93       	push	r19
     660:	8f 93       	push	r24
     662:	81 81       	ldd	r24, Z+1	; 0x01
     664:	28 2f       	mov	r18, r24
     666:	08 2e       	mov	r0, r24
     668:	00 0c       	add	r0, r0
     66a:	33 0b       	sbc	r19, r19
     66c:	3f 93       	push	r19
     66e:	8f 93       	push	r24
     670:	82 81       	ldd	r24, Z+2	; 0x02
     672:	28 2f       	mov	r18, r24
     674:	08 2e       	mov	r0, r24
     676:	00 0c       	add	r0, r0
     678:	33 0b       	sbc	r19, r19
     67a:	3f 93       	push	r19
     67c:	8f 93       	push	r24
     67e:	88 ed       	ldi	r24, 0xD8	; 216
     680:	96 e4       	ldi	r25, 0x46	; 70
     682:	c0 c1       	rjmp	.+896    	; 0xa04 <strftime+0x4d2>
     684:	1d 36       	cpi	r17, 0x6D	; 109
     686:	09 f4       	brne	.+2      	; 0x68a <strftime+0x158>
     688:	f0 c0       	rjmp	.+480    	; 0x86a <strftime+0x338>
     68a:	ac f5       	brge	.+106    	; 0x6f6 <strftime+0x1c4>
     68c:	14 36       	cpi	r17, 0x64	; 100
     68e:	09 f4       	brne	.+2      	; 0x692 <strftime+0x160>
     690:	94 c0       	rjmp	.+296    	; 0x7ba <strftime+0x288>
     692:	74 f4       	brge	.+28     	; 0x6b0 <strftime+0x17e>
     694:	12 36       	cpi	r17, 0x62	; 98
     696:	09 f4       	brne	.+2      	; 0x69a <strftime+0x168>
     698:	66 c0       	rjmp	.+204    	; 0x766 <strftime+0x234>
     69a:	0c f0       	brlt	.+2      	; 0x69e <strftime+0x16c>
     69c:	75 c0       	rjmp	.+234    	; 0x788 <strftime+0x256>
     69e:	11 36       	cpi	r17, 0x61	; 97
     6a0:	09 f0       	breq	.+2      	; 0x6a4 <strftime+0x172>
     6a2:	14 c2       	rjmp	.+1064   	; 0xacc <strftime+0x59a>
     6a4:	03 e0       	ldi	r16, 0x03	; 3
     6a6:	96 01       	movw	r18, r12
     6a8:	d7 01       	movw	r26, r14
     6aa:	14 96       	adiw	r26, 0x04	; 4
     6ac:	4c 91       	ld	r20, X
     6ae:	57 c0       	rjmp	.+174    	; 0x75e <strftime+0x22c>
     6b0:	17 36       	cpi	r17, 0x67	; 103
     6b2:	09 f4       	brne	.+2      	; 0x6b6 <strftime+0x184>
     6b4:	a4 c0       	rjmp	.+328    	; 0x7fe <strftime+0x2cc>
     6b6:	74 f4       	brge	.+28     	; 0x6d4 <strftime+0x1a2>
     6b8:	15 36       	cpi	r17, 0x65	; 101
     6ba:	09 f0       	breq	.+2      	; 0x6be <strftime+0x18c>
     6bc:	07 c2       	rjmp	.+1038   	; 0xacc <strftime+0x59a>
     6be:	f7 01       	movw	r30, r14
     6c0:	83 81       	ldd	r24, Z+3	; 0x03
     6c2:	28 2f       	mov	r18, r24
     6c4:	08 2e       	mov	r0, r24
     6c6:	00 0c       	add	r0, r0
     6c8:	33 0b       	sbc	r19, r19
     6ca:	3f 93       	push	r19
     6cc:	8f 93       	push	r24
     6ce:	85 e9       	ldi	r24, 0x95	; 149
     6d0:	96 e4       	ldi	r25, 0x46	; 70
     6d2:	c8 c0       	rjmp	.+400    	; 0x864 <strftime+0x332>
     6d4:	18 36       	cpi	r17, 0x68	; 104
     6d6:	09 f4       	brne	.+2      	; 0x6da <strftime+0x1a8>
     6d8:	46 c0       	rjmp	.+140    	; 0x766 <strftime+0x234>
     6da:	1a 36       	cpi	r17, 0x6A	; 106
     6dc:	09 f0       	breq	.+2      	; 0x6e0 <strftime+0x1ae>
     6de:	f6 c1       	rjmp	.+1004   	; 0xacc <strftime+0x59a>
     6e0:	d7 01       	movw	r26, r14
     6e2:	18 96       	adiw	r26, 0x08	; 8
     6e4:	8d 91       	ld	r24, X+
     6e6:	9c 91       	ld	r25, X
     6e8:	19 97       	sbiw	r26, 0x09	; 9
     6ea:	01 96       	adiw	r24, 0x01	; 1
     6ec:	9f 93       	push	r25
     6ee:	8f 93       	push	r24
     6f0:	8b ea       	ldi	r24, 0xAB	; 171
     6f2:	96 e4       	ldi	r25, 0x46	; 70
     6f4:	b7 c0       	rjmp	.+366    	; 0x864 <strftime+0x332>
     6f6:	15 37       	cpi	r17, 0x75	; 117
     6f8:	09 f4       	brne	.+2      	; 0x6fc <strftime+0x1ca>
     6fa:	35 c1       	rjmp	.+618    	; 0x966 <strftime+0x434>
     6fc:	b4 f4       	brge	.+44     	; 0x72a <strftime+0x1f8>
     6fe:	10 37       	cpi	r17, 0x70	; 112
     700:	09 f4       	brne	.+2      	; 0x704 <strftime+0x1d2>
     702:	c2 c0       	rjmp	.+388    	; 0x888 <strftime+0x356>
     704:	34 f4       	brge	.+12     	; 0x712 <strftime+0x1e0>
     706:	1e 36       	cpi	r17, 0x6E	; 110
     708:	09 f0       	breq	.+2      	; 0x70c <strftime+0x1da>
     70a:	e0 c1       	rjmp	.+960    	; 0xacc <strftime+0x59a>
     70c:	8a e0       	ldi	r24, 0x0A	; 10
     70e:	89 83       	std	Y+1, r24	; 0x01
     710:	e0 c1       	rjmp	.+960    	; 0xad2 <strftime+0x5a0>
     712:	12 37       	cpi	r17, 0x72	; 114
     714:	09 f4       	brne	.+2      	; 0x718 <strftime+0x1e6>
     716:	c6 c0       	rjmp	.+396    	; 0x8a4 <strftime+0x372>
     718:	14 37       	cpi	r17, 0x74	; 116
     71a:	09 f0       	breq	.+2      	; 0x71e <strftime+0x1ec>
     71c:	d7 c1       	rjmp	.+942    	; 0xacc <strftime+0x59a>
     71e:	61 ec       	ldi	r22, 0xC1	; 193
     720:	76 e4       	ldi	r23, 0x46	; 70
     722:	c6 01       	movw	r24, r12
     724:	0e 94 f5 73 	call	0xe7ea	; 0xe7ea <strcpy>
     728:	d4 c1       	rjmp	.+936    	; 0xad2 <strftime+0x5a0>
     72a:	18 37       	cpi	r17, 0x78	; 120
     72c:	09 f4       	brne	.+2      	; 0x730 <strftime+0x1fe>
     72e:	48 c1       	rjmp	.+656    	; 0x9c0 <strftime+0x48e>
     730:	5c f4       	brge	.+22     	; 0x748 <strftime+0x216>
     732:	17 37       	cpi	r17, 0x77	; 119
     734:	09 f0       	breq	.+2      	; 0x738 <strftime+0x206>
     736:	ca c1       	rjmp	.+916    	; 0xacc <strftime+0x59a>
     738:	f7 01       	movw	r30, r14
     73a:	84 81       	ldd	r24, Z+4	; 0x04
     73c:	28 2f       	mov	r18, r24
     73e:	08 2e       	mov	r0, r24
     740:	00 0c       	add	r0, r0
     742:	33 0b       	sbc	r19, r19
     744:	3f 93       	push	r19
     746:	74 c1       	rjmp	.+744    	; 0xa30 <strftime+0x4fe>
     748:	19 37       	cpi	r17, 0x79	; 121
     74a:	09 f4       	brne	.+2      	; 0x74e <strftime+0x21c>
     74c:	5e c1       	rjmp	.+700    	; 0xa0a <strftime+0x4d8>
     74e:	1a 37       	cpi	r17, 0x7A	; 122
     750:	09 f4       	brne	.+2      	; 0x754 <strftime+0x222>
     752:	7e c1       	rjmp	.+764    	; 0xa50 <strftime+0x51e>
     754:	bb c1       	rjmp	.+886    	; 0xacc <strftime+0x59a>
     756:	0f ef       	ldi	r16, 0xFF	; 255
     758:	96 01       	movw	r18, r12
     75a:	f7 01       	movw	r30, r14
     75c:	44 81       	ldd	r20, Z+4	; 0x04
     75e:	62 ee       	ldi	r22, 0xE2	; 226
     760:	72 e0       	ldi	r23, 0x02	; 2
     762:	80 e0       	ldi	r24, 0x00	; 0
     764:	0d c0       	rjmp	.+26     	; 0x780 <strftime+0x24e>
     766:	03 e0       	ldi	r16, 0x03	; 3
     768:	96 01       	movw	r18, r12
     76a:	d7 01       	movw	r26, r14
     76c:	15 96       	adiw	r26, 0x05	; 5
     76e:	4c 91       	ld	r20, X
     770:	04 c0       	rjmp	.+8      	; 0x77a <strftime+0x248>
     772:	0f ef       	ldi	r16, 0xFF	; 255
     774:	96 01       	movw	r18, r12
     776:	f7 01       	movw	r30, r14
     778:	45 81       	ldd	r20, Z+5	; 0x05
     77a:	6b e8       	ldi	r22, 0x8B	; 139
     77c:	72 e0       	ldi	r23, 0x02	; 2
     77e:	80 e0       	ldi	r24, 0x00	; 0
     780:	0e 94 60 02 	call	0x4c0	; 0x4c0 <pgm_copystring>
     784:	90 e0       	ldi	r25, 0x00	; 0
     786:	a7 c1       	rjmp	.+846    	; 0xad6 <strftime+0x5a4>
     788:	b6 01       	movw	r22, r12
     78a:	c7 01       	movw	r24, r14
     78c:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <asctime_r>
     790:	f6 01       	movw	r30, r12
     792:	cf 01       	movw	r24, r30
     794:	8c 19       	sub	r24, r12
     796:	9d 09       	sbc	r25, r13
     798:	21 91       	ld	r18, Z+
     79a:	21 11       	cpse	r18, r1
     79c:	fa cf       	rjmp	.-12     	; 0x792 <strftime+0x260>
     79e:	9b c1       	rjmp	.+822    	; 0xad6 <strftime+0x5a4>
     7a0:	d7 01       	movw	r26, r14
     7a2:	16 96       	adiw	r26, 0x06	; 6
     7a4:	8d 91       	ld	r24, X+
     7a6:	9c 91       	ld	r25, X
     7a8:	17 97       	sbiw	r26, 0x07	; 7
     7aa:	84 59       	subi	r24, 0x94	; 148
     7ac:	98 4f       	sbci	r25, 0xF8	; 248
     7ae:	b1 01       	movw	r22, r2
     7b0:	0e 94 ee 71 	call	0xe3dc	; 0xe3dc <__divmodhi4>
     7b4:	7f 93       	push	r23
     7b6:	6f 93       	push	r22
     7b8:	3b c0       	rjmp	.+118    	; 0x830 <strftime+0x2fe>
     7ba:	d7 01       	movw	r26, r14
     7bc:	13 96       	adiw	r26, 0x03	; 3
     7be:	8c 91       	ld	r24, X
     7c0:	5d c0       	rjmp	.+186    	; 0x87c <strftime+0x34a>
     7c2:	d7 01       	movw	r26, r14
     7c4:	13 96       	adiw	r26, 0x03	; 3
     7c6:	8c 91       	ld	r24, X
     7c8:	13 97       	sbiw	r26, 0x03	; 3
     7ca:	28 2f       	mov	r18, r24
     7cc:	08 2e       	mov	r0, r24
     7ce:	00 0c       	add	r0, r0
     7d0:	33 0b       	sbc	r19, r19
     7d2:	3f 93       	push	r19
     7d4:	8f 93       	push	r24
     7d6:	15 96       	adiw	r26, 0x05	; 5
     7d8:	8c 91       	ld	r24, X
     7da:	15 97       	sbiw	r26, 0x05	; 5
     7dc:	08 2e       	mov	r0, r24
     7de:	00 0c       	add	r0, r0
     7e0:	99 0b       	sbc	r25, r25
     7e2:	01 96       	adiw	r24, 0x01	; 1
     7e4:	9f 93       	push	r25
     7e6:	8f 93       	push	r24
     7e8:	16 96       	adiw	r26, 0x06	; 6
     7ea:	8d 91       	ld	r24, X+
     7ec:	9c 91       	ld	r25, X
     7ee:	17 97       	sbiw	r26, 0x07	; 7
     7f0:	84 59       	subi	r24, 0x94	; 148
     7f2:	98 4f       	sbci	r25, 0xF8	; 248
     7f4:	9f 93       	push	r25
     7f6:	8f 93       	push	r24
     7f8:	89 e9       	ldi	r24, 0x99	; 153
     7fa:	96 e4       	ldi	r25, 0x46	; 70
     7fc:	03 c1       	rjmp	.+518    	; 0xa04 <strftime+0x4d2>
     7fe:	d7 01       	movw	r26, r14
     800:	18 96       	adiw	r26, 0x08	; 8
     802:	6d 91       	ld	r22, X+
     804:	7c 91       	ld	r23, X
     806:	19 97       	sbiw	r26, 0x09	; 9
     808:	16 96       	adiw	r26, 0x06	; 6
     80a:	8d 91       	ld	r24, X+
     80c:	9c 91       	ld	r25, X
     80e:	17 97       	sbiw	r26, 0x07	; 7
     810:	ae 01       	movw	r20, r28
     812:	45 5e       	subi	r20, 0xE5	; 229
     814:	5f 4f       	sbci	r21, 0xFF	; 255
     816:	84 59       	subi	r24, 0x94	; 148
     818:	98 4f       	sbci	r25, 0xF8	; 248
     81a:	0e 94 55 07 	call	0xeaa	; 0xeaa <iso_week_date_r>
     81e:	17 36       	cpi	r17, 0x67	; 103
     820:	51 f4       	brne	.+20     	; 0x836 <strftime+0x304>
     822:	8b 8d       	ldd	r24, Y+27	; 0x1b
     824:	9c 8d       	ldd	r25, Y+28	; 0x1c
     826:	b1 01       	movw	r22, r2
     828:	0e 94 ee 71 	call	0xe3dc	; 0xe3dc <__divmodhi4>
     82c:	9f 93       	push	r25
     82e:	8f 93       	push	r24
     830:	e1 ea       	ldi	r30, 0xA1	; 161
     832:	f6 e4       	ldi	r31, 0x46	; 70
     834:	a6 c0       	rjmp	.+332    	; 0x982 <strftime+0x450>
     836:	8c 8d       	ldd	r24, Y+28	; 0x1c
     838:	8f 93       	push	r24
     83a:	8b 8d       	ldd	r24, Y+27	; 0x1b
     83c:	8f 93       	push	r24
     83e:	46 ea       	ldi	r20, 0xA6	; 166
     840:	56 e4       	ldi	r21, 0x46	; 70
     842:	5f 93       	push	r21
     844:	4f 93       	push	r20
     846:	f9 c0       	rjmp	.+498    	; 0xa3a <strftime+0x508>
     848:	f7 01       	movw	r30, r14
     84a:	82 81       	ldd	r24, Z+2	; 0x02
     84c:	6c e0       	ldi	r22, 0x0C	; 12
     84e:	0e 94 a2 78 	call	0xf144	; 0xf144 <__divmodqi4>
     852:	99 23       	and	r25, r25
     854:	21 f0       	breq	.+8      	; 0x85e <strftime+0x32c>
     856:	89 2f       	mov	r24, r25
     858:	99 0f       	add	r25, r25
     85a:	99 0b       	sbc	r25, r25
     85c:	de c0       	rjmp	.+444    	; 0xa1a <strftime+0x4e8>
     85e:	8c e0       	ldi	r24, 0x0C	; 12
     860:	90 e0       	ldi	r25, 0x00	; 0
     862:	db c0       	rjmp	.+438    	; 0xa1a <strftime+0x4e8>
     864:	9f 93       	push	r25
     866:	8f 93       	push	r24
     868:	e8 c0       	rjmp	.+464    	; 0xa3a <strftime+0x508>
     86a:	f7 01       	movw	r30, r14
     86c:	85 81       	ldd	r24, Z+5	; 0x05
     86e:	08 2e       	mov	r0, r24
     870:	00 0c       	add	r0, r0
     872:	99 0b       	sbc	r25, r25
     874:	01 96       	adiw	r24, 0x01	; 1
     876:	d1 c0       	rjmp	.+418    	; 0xa1a <strftime+0x4e8>
     878:	d7 01       	movw	r26, r14
     87a:	8c 91       	ld	r24, X
     87c:	28 2f       	mov	r18, r24
     87e:	08 2e       	mov	r0, r24
     880:	00 0c       	add	r0, r0
     882:	33 0b       	sbc	r19, r19
     884:	3f 93       	push	r19
     886:	ca c0       	rjmp	.+404    	; 0xa1c <strftime+0x4ea>
     888:	81 e4       	ldi	r24, 0x41	; 65
     88a:	89 83       	std	Y+1, r24	; 0x01
     88c:	f7 01       	movw	r30, r14
     88e:	82 81       	ldd	r24, Z+2	; 0x02
     890:	8c 30       	cpi	r24, 0x0C	; 12
     892:	14 f0       	brlt	.+4      	; 0x898 <strftime+0x366>
     894:	80 e5       	ldi	r24, 0x50	; 80
     896:	89 83       	std	Y+1, r24	; 0x01
     898:	8d e4       	ldi	r24, 0x4D	; 77
     89a:	8a 83       	std	Y+2, r24	; 0x02
     89c:	1b 82       	std	Y+3, r1	; 0x03
     89e:	82 e0       	ldi	r24, 0x02	; 2
     8a0:	90 e0       	ldi	r25, 0x00	; 0
     8a2:	19 c1       	rjmp	.+562    	; 0xad6 <strftime+0x5a4>
     8a4:	d7 01       	movw	r26, r14
     8a6:	12 96       	adiw	r26, 0x02	; 2
     8a8:	8c 91       	ld	r24, X
     8aa:	6c e0       	ldi	r22, 0x0C	; 12
     8ac:	0e 94 a2 78 	call	0xf144	; 0xf144 <__divmodqi4>
     8b0:	99 23       	and	r25, r25
     8b2:	21 f0       	breq	.+8      	; 0x8bc <strftime+0x38a>
     8b4:	89 2f       	mov	r24, r25
     8b6:	99 0f       	add	r25, r25
     8b8:	99 0b       	sbc	r25, r25
     8ba:	02 c0       	rjmp	.+4      	; 0x8c0 <strftime+0x38e>
     8bc:	8c e0       	ldi	r24, 0x0C	; 12
     8be:	90 e0       	ldi	r25, 0x00	; 0
     8c0:	f7 01       	movw	r30, r14
     8c2:	20 81       	ld	r18, Z
     8c4:	42 2f       	mov	r20, r18
     8c6:	02 2e       	mov	r0, r18
     8c8:	00 0c       	add	r0, r0
     8ca:	55 0b       	sbc	r21, r21
     8cc:	5f 93       	push	r21
     8ce:	2f 93       	push	r18
     8d0:	21 81       	ldd	r18, Z+1	; 0x01
     8d2:	42 2f       	mov	r20, r18
     8d4:	02 2e       	mov	r0, r18
     8d6:	00 0c       	add	r0, r0
     8d8:	55 0b       	sbc	r21, r21
     8da:	5f 93       	push	r21
     8dc:	2f 93       	push	r18
     8de:	9f 93       	push	r25
     8e0:	8f 93       	push	r24
     8e2:	20 eb       	ldi	r18, 0xB0	; 176
     8e4:	36 e4       	ldi	r19, 0x46	; 70
     8e6:	3f 93       	push	r19
     8e8:	2f 93       	push	r18
     8ea:	df 92       	push	r13
     8ec:	cf 92       	push	r12
     8ee:	0e 94 31 74 	call	0xe862	; 0xe862 <sprintf>
     8f2:	cd bf       	out	0x3d, r28	; 61
     8f4:	de bf       	out	0x3e, r29	; 62
     8f6:	f7 01       	movw	r30, r14
     8f8:	22 81       	ldd	r18, Z+2	; 0x02
     8fa:	2c 30       	cpi	r18, 0x0C	; 12
     8fc:	0c f4       	brge	.+2      	; 0x900 <strftime+0x3ce>
     8fe:	eb c0       	rjmp	.+470    	; 0xad6 <strftime+0x5a4>
     900:	20 e5       	ldi	r18, 0x50	; 80
     902:	2b 87       	std	Y+11, r18	; 0x0b
     904:	e8 c0       	rjmp	.+464    	; 0xad6 <strftime+0x5a4>
     906:	d7 01       	movw	r26, r14
     908:	11 96       	adiw	r26, 0x01	; 1
     90a:	8c 91       	ld	r24, X
     90c:	11 97       	sbiw	r26, 0x01	; 1
     90e:	28 2f       	mov	r18, r24
     910:	08 2e       	mov	r0, r24
     912:	00 0c       	add	r0, r0
     914:	33 0b       	sbc	r19, r19
     916:	3f 93       	push	r19
     918:	8f 93       	push	r24
     91a:	12 96       	adiw	r26, 0x02	; 2
     91c:	8c 91       	ld	r24, X
     91e:	28 2f       	mov	r18, r24
     920:	08 2e       	mov	r0, r24
     922:	00 0c       	add	r0, r0
     924:	33 0b       	sbc	r19, r19
     926:	3f 93       	push	r19
     928:	8f 93       	push	r24
     92a:	88 ec       	ldi	r24, 0xC8	; 200
     92c:	96 e4       	ldi	r25, 0x46	; 70
     92e:	9f 93       	push	r25
     930:	8f 93       	push	r24
     932:	c5 c0       	rjmp	.+394    	; 0xabe <strftime+0x58c>
     934:	f7 01       	movw	r30, r14
     936:	80 81       	ld	r24, Z
     938:	28 2f       	mov	r18, r24
     93a:	08 2e       	mov	r0, r24
     93c:	00 0c       	add	r0, r0
     93e:	33 0b       	sbc	r19, r19
     940:	3f 93       	push	r19
     942:	8f 93       	push	r24
     944:	81 81       	ldd	r24, Z+1	; 0x01
     946:	28 2f       	mov	r18, r24
     948:	08 2e       	mov	r0, r24
     94a:	00 0c       	add	r0, r0
     94c:	33 0b       	sbc	r19, r19
     94e:	3f 93       	push	r19
     950:	8f 93       	push	r24
     952:	82 81       	ldd	r24, Z+2	; 0x02
     954:	28 2f       	mov	r18, r24
     956:	08 2e       	mov	r0, r24
     958:	00 0c       	add	r0, r0
     95a:	33 0b       	sbc	r19, r19
     95c:	3f 93       	push	r19
     95e:	8f 93       	push	r24
     960:	83 ec       	ldi	r24, 0xC3	; 195
     962:	96 e4       	ldi	r25, 0x46	; 70
     964:	4f c0       	rjmp	.+158    	; 0xa04 <strftime+0x4d2>
     966:	d7 01       	movw	r26, r14
     968:	14 96       	adiw	r26, 0x04	; 4
     96a:	8c 91       	ld	r24, X
     96c:	08 2e       	mov	r0, r24
     96e:	00 0c       	add	r0, r0
     970:	99 0b       	sbc	r25, r25
     972:	00 97       	sbiw	r24, 0x00	; 0
     974:	11 f4       	brne	.+4      	; 0x97a <strftime+0x448>
     976:	87 e0       	ldi	r24, 0x07	; 7
     978:	90 e0       	ldi	r25, 0x00	; 0
     97a:	9f 93       	push	r25
     97c:	8f 93       	push	r24
     97e:	e2 ed       	ldi	r30, 0xD2	; 210
     980:	f6 e4       	ldi	r31, 0x46	; 70
     982:	ff 93       	push	r31
     984:	ef 93       	push	r30
     986:	59 c0       	rjmp	.+178    	; 0xa3a <strftime+0x508>
     988:	60 e0       	ldi	r22, 0x00	; 0
     98a:	15 c0       	rjmp	.+42     	; 0x9b6 <strftime+0x484>
     98c:	d7 01       	movw	r26, r14
     98e:	18 96       	adiw	r26, 0x08	; 8
     990:	6d 91       	ld	r22, X+
     992:	7c 91       	ld	r23, X
     994:	19 97       	sbiw	r26, 0x09	; 9
     996:	16 96       	adiw	r26, 0x06	; 6
     998:	8d 91       	ld	r24, X+
     99a:	9c 91       	ld	r25, X
     99c:	17 97       	sbiw	r26, 0x07	; 7
     99e:	ae 01       	movw	r20, r28
     9a0:	45 5e       	subi	r20, 0xE5	; 229
     9a2:	5f 4f       	sbci	r21, 0xFF	; 255
     9a4:	84 59       	subi	r24, 0x94	; 148
     9a6:	98 4f       	sbci	r25, 0xF8	; 248
     9a8:	0e 94 55 07 	call	0xeaa	; 0xeaa <iso_week_date_r>
     9ac:	8e 8d       	ldd	r24, Y+30	; 0x1e
     9ae:	8f 93       	push	r24
     9b0:	8d 8d       	ldd	r24, Y+29	; 0x1d
     9b2:	34 c0       	rjmp	.+104    	; 0xa1c <strftime+0x4ea>
     9b4:	61 e0       	ldi	r22, 0x01	; 1
     9b6:	c7 01       	movw	r24, r14
     9b8:	0e 94 c1 05 	call	0xb82	; 0xb82 <week_of_year>
     9bc:	1f 92       	push	r1
     9be:	2e c0       	rjmp	.+92     	; 0xa1c <strftime+0x4ea>
     9c0:	d7 01       	movw	r26, r14
     9c2:	16 96       	adiw	r26, 0x06	; 6
     9c4:	8d 91       	ld	r24, X+
     9c6:	9c 91       	ld	r25, X
     9c8:	17 97       	sbiw	r26, 0x07	; 7
     9ca:	b1 01       	movw	r22, r2
     9cc:	0e 94 ee 71 	call	0xe3dc	; 0xe3dc <__divmodhi4>
     9d0:	9f 93       	push	r25
     9d2:	8f 93       	push	r24
     9d4:	f7 01       	movw	r30, r14
     9d6:	83 81       	ldd	r24, Z+3	; 0x03
     9d8:	28 2f       	mov	r18, r24
     9da:	08 2e       	mov	r0, r24
     9dc:	00 0c       	add	r0, r0
     9de:	33 0b       	sbc	r19, r19
     9e0:	3f 93       	push	r19
     9e2:	8f 93       	push	r24
     9e4:	85 81       	ldd	r24, Z+5	; 0x05
     9e6:	08 2e       	mov	r0, r24
     9e8:	00 0c       	add	r0, r0
     9ea:	99 0b       	sbc	r25, r25
     9ec:	01 96       	adiw	r24, 0x01	; 1
     9ee:	9f 93       	push	r25
     9f0:	8f 93       	push	r24
     9f2:	26 e8       	ldi	r18, 0x86	; 134
     9f4:	36 e4       	ldi	r19, 0x46	; 70
     9f6:	3f 93       	push	r19
     9f8:	2f 93       	push	r18
     9fa:	df 92       	push	r13
     9fc:	cf 92       	push	r12
     9fe:	0e 94 31 74 	call	0xe862	; 0xe862 <sprintf>
     a02:	61 c0       	rjmp	.+194    	; 0xac6 <strftime+0x594>
     a04:	9f 93       	push	r25
     a06:	8f 93       	push	r24
     a08:	f8 cf       	rjmp	.-16     	; 0x9fa <strftime+0x4c8>
     a0a:	d7 01       	movw	r26, r14
     a0c:	16 96       	adiw	r26, 0x06	; 6
     a0e:	8d 91       	ld	r24, X+
     a10:	9c 91       	ld	r25, X
     a12:	17 97       	sbiw	r26, 0x07	; 7
     a14:	b1 01       	movw	r22, r2
     a16:	0e 94 ee 71 	call	0xe3dc	; 0xe3dc <__divmodhi4>
     a1a:	9f 93       	push	r25
     a1c:	8f 93       	push	r24
     a1e:	bf 92       	push	r11
     a20:	af 92       	push	r10
     a22:	0b c0       	rjmp	.+22     	; 0xa3a <strftime+0x508>
     a24:	f7 01       	movw	r30, r14
     a26:	86 81       	ldd	r24, Z+6	; 0x06
     a28:	97 81       	ldd	r25, Z+7	; 0x07
     a2a:	84 59       	subi	r24, 0x94	; 148
     a2c:	98 4f       	sbci	r25, 0xF8	; 248
     a2e:	9f 93       	push	r25
     a30:	8f 93       	push	r24
     a32:	25 ed       	ldi	r18, 0xD5	; 213
     a34:	36 e4       	ldi	r19, 0x46	; 70
     a36:	3f 93       	push	r19
     a38:	2f 93       	push	r18
     a3a:	df 92       	push	r13
     a3c:	cf 92       	push	r12
     a3e:	0e 94 31 74 	call	0xe862	; 0xe862 <sprintf>
     a42:	0f 90       	pop	r0
     a44:	0f 90       	pop	r0
     a46:	0f 90       	pop	r0
     a48:	0f 90       	pop	r0
     a4a:	0f 90       	pop	r0
     a4c:	0f 90       	pop	r0
     a4e:	43 c0       	rjmp	.+134    	; 0xad6 <strftime+0x5a4>
     a50:	60 91 fb 4a 	lds	r22, 0x4AFB	; 0x804afb <__utc_offset>
     a54:	70 91 fc 4a 	lds	r23, 0x4AFC	; 0x804afc <__utc_offset+0x1>
     a58:	80 91 fd 4a 	lds	r24, 0x4AFD	; 0x804afd <__utc_offset+0x2>
     a5c:	90 91 fe 4a 	lds	r25, 0x4AFE	; 0x804afe <__utc_offset+0x3>
     a60:	2c e3       	ldi	r18, 0x3C	; 60
     a62:	30 e0       	ldi	r19, 0x00	; 0
     a64:	40 e0       	ldi	r20, 0x00	; 0
     a66:	50 e0       	ldi	r21, 0x00	; 0
     a68:	0e 94 24 72 	call	0xe448	; 0xe448 <__divmodsi4>
     a6c:	89 01       	movw	r16, r18
     a6e:	9a 01       	movw	r18, r20
     a70:	f8 01       	movw	r30, r16
     a72:	d7 01       	movw	r26, r14
     a74:	1a 96       	adiw	r26, 0x0a	; 10
     a76:	8d 91       	ld	r24, X+
     a78:	9c 91       	ld	r25, X
     a7a:	1b 97       	sbiw	r26, 0x0b	; 11
     a7c:	6c e3       	ldi	r22, 0x3C	; 60
     a7e:	70 e0       	ldi	r23, 0x00	; 0
     a80:	0e 94 ee 71 	call	0xe3dc	; 0xe3dc <__divmodhi4>
     a84:	16 16       	cp	r1, r22
     a86:	17 06       	cpc	r1, r23
     a88:	1c f4       	brge	.+6      	; 0xa90 <strftime+0x55e>
     a8a:	fb 01       	movw	r30, r22
     a8c:	e0 0f       	add	r30, r16
     a8e:	f1 1f       	adc	r31, r17
     a90:	cf 01       	movw	r24, r30
     a92:	6c e3       	ldi	r22, 0x3C	; 60
     a94:	70 e0       	ldi	r23, 0x00	; 0
     a96:	0e 94 ee 71 	call	0xe3dc	; 0xe3dc <__divmodhi4>
     a9a:	97 ff       	sbrs	r25, 7
     a9c:	03 c0       	rjmp	.+6      	; 0xaa4 <strftime+0x572>
     a9e:	91 95       	neg	r25
     aa0:	81 95       	neg	r24
     aa2:	91 09       	sbc	r25, r1
     aa4:	9f 93       	push	r25
     aa6:	8f 93       	push	r24
     aa8:	cf 01       	movw	r24, r30
     aaa:	6c e3       	ldi	r22, 0x3C	; 60
     aac:	70 e0       	ldi	r23, 0x00	; 0
     aae:	0e 94 ee 71 	call	0xe3dc	; 0xe3dc <__divmodhi4>
     ab2:	7f 93       	push	r23
     ab4:	6f 93       	push	r22
     ab6:	e7 ee       	ldi	r30, 0xE7	; 231
     ab8:	f6 e4       	ldi	r31, 0x46	; 70
     aba:	ff 93       	push	r31
     abc:	ef 93       	push	r30
     abe:	df 92       	push	r13
     ac0:	cf 92       	push	r12
     ac2:	0e 94 31 74 	call	0xe862	; 0xe862 <sprintf>
     ac6:	cd bf       	out	0x3d, r28	; 61
     ac8:	de bf       	out	0x3e, r29	; 62
     aca:	05 c0       	rjmp	.+10     	; 0xad6 <strftime+0x5a4>
     acc:	8f e3       	ldi	r24, 0x3F	; 63
     ace:	89 83       	std	Y+1, r24	; 0x01
     ad0:	1a 82       	std	Y+2, r1	; 0x02
     ad2:	81 e0       	ldi	r24, 0x01	; 1
     ad4:	90 e0       	ldi	r25, 0x00	; 0
     ad6:	93 01       	movw	r18, r6
     ad8:	28 0f       	add	r18, r24
     ada:	39 1f       	adc	r19, r25
     adc:	a9 a1       	ldd	r26, Y+33	; 0x21
     ade:	ba a1       	ldd	r27, Y+34	; 0x22
     ae0:	2a 17       	cp	r18, r26
     ae2:	3b 07       	cpc	r19, r27
     ae4:	98 f4       	brcc	.+38     	; 0xb0c <strftime+0x5da>
     ae6:	d2 01       	movw	r26, r4
     ae8:	f6 01       	movw	r30, r12
     aea:	af 01       	movw	r20, r30
     aec:	4c 19       	sub	r20, r12
     aee:	5d 09       	sbc	r21, r13
     af0:	48 17       	cp	r20, r24
     af2:	59 07       	cpc	r21, r25
     af4:	1c f4       	brge	.+6      	; 0xafc <strftime+0x5ca>
     af6:	41 91       	ld	r20, Z+
     af8:	4d 93       	st	X+, r20
     afa:	f7 cf       	rjmp	.-18     	; 0xaea <strftime+0x5b8>
     afc:	97 ff       	sbrs	r25, 7
     afe:	02 c0       	rjmp	.+4      	; 0xb04 <strftime+0x5d2>
     b00:	80 e0       	ldi	r24, 0x00	; 0
     b02:	90 e0       	ldi	r25, 0x00	; 0
     b04:	48 0e       	add	r4, r24
     b06:	59 1e       	adc	r5, r25
     b08:	39 01       	movw	r6, r18
     b0a:	3c cd       	rjmp	.-1416   	; 0x584 <strftime+0x52>
     b0c:	f2 01       	movw	r30, r4
     b0e:	10 82       	st	Z, r1
     b10:	0e c0       	rjmp	.+28     	; 0xb2e <strftime+0x5fc>
     b12:	d2 01       	movw	r26, r4
     b14:	8d 93       	st	X+, r24
     b16:	2d 01       	movw	r4, r26
     b18:	bf ef       	ldi	r27, 0xFF	; 255
     b1a:	6b 1a       	sub	r6, r27
     b1c:	7b 0a       	sbc	r7, r27
     b1e:	88 23       	and	r24, r24
     b20:	31 f0       	breq	.+12     	; 0xb2e <strftime+0x5fc>
     b22:	ef ef       	ldi	r30, 0xFF	; 255
     b24:	8e 1a       	sub	r8, r30
     b26:	9e 0a       	sbc	r9, r30
     b28:	2d cd       	rjmp	.-1446   	; 0x584 <strftime+0x52>
     b2a:	d2 01       	movw	r26, r4
     b2c:	1c 92       	st	X, r1
     b2e:	c3 01       	movw	r24, r6
     b30:	a2 96       	adiw	r28, 0x22	; 34
     b32:	cd bf       	out	0x3d, r28	; 61
     b34:	de bf       	out	0x3e, r29	; 62
     b36:	df 91       	pop	r29
     b38:	cf 91       	pop	r28
     b3a:	1f 91       	pop	r17
     b3c:	0f 91       	pop	r16
     b3e:	ff 90       	pop	r15
     b40:	ef 90       	pop	r14
     b42:	df 90       	pop	r13
     b44:	cf 90       	pop	r12
     b46:	bf 90       	pop	r11
     b48:	af 90       	pop	r10
     b4a:	9f 90       	pop	r9
     b4c:	8f 90       	pop	r8
     b4e:	7f 90       	pop	r7
     b50:	6f 90       	pop	r6
     b52:	5f 90       	pop	r5
     b54:	4f 90       	pop	r4
     b56:	3f 90       	pop	r3
     b58:	2f 90       	pop	r2
     b5a:	08 95       	ret

00000b5c <time>:
     b5c:	fc 01       	movw	r30, r24
     b5e:	0f b6       	in	r0, 0x3f	; 63
     b60:	f8 94       	cli
     b62:	60 91 eb 4a 	lds	r22, 0x4AEB	; 0x804aeb <__system_time>
     b66:	70 91 ec 4a 	lds	r23, 0x4AEC	; 0x804aec <__system_time+0x1>
     b6a:	80 91 ed 4a 	lds	r24, 0x4AED	; 0x804aed <__system_time+0x2>
     b6e:	90 91 ee 4a 	lds	r25, 0x4AEE	; 0x804aee <__system_time+0x3>
     b72:	0f be       	out	0x3f, r0	; 63
     b74:	30 97       	sbiw	r30, 0x00	; 0
     b76:	21 f0       	breq	.+8      	; 0xb80 <time+0x24>
     b78:	60 83       	st	Z, r22
     b7a:	71 83       	std	Z+1, r23	; 0x01
     b7c:	82 83       	std	Z+2, r24	; 0x02
     b7e:	93 83       	std	Z+3, r25	; 0x03
     b80:	08 95       	ret

00000b82 <week_of_year>:
     b82:	fc 01       	movw	r30, r24
     b84:	20 85       	ldd	r18, Z+8	; 0x08
     b86:	31 85       	ldd	r19, Z+9	; 0x09
     b88:	c9 01       	movw	r24, r18
     b8a:	07 96       	adiw	r24, 0x07	; 7
     b8c:	44 81       	ldd	r20, Z+4	; 0x04
     b8e:	84 1b       	sub	r24, r20
     b90:	91 09       	sbc	r25, r1
     b92:	47 fd       	sbrc	r20, 7
     b94:	93 95       	inc	r25
     b96:	86 0f       	add	r24, r22
     b98:	91 1d       	adc	r25, r1
     b9a:	e7 e0       	ldi	r30, 0x07	; 7
     b9c:	f0 e0       	ldi	r31, 0x00	; 0
     b9e:	bf 01       	movw	r22, r30
     ba0:	0e 94 ee 71 	call	0xe3dc	; 0xe3dc <__divmodhi4>
     ba4:	a9 01       	movw	r20, r18
     ba6:	48 1b       	sub	r20, r24
     ba8:	59 0b       	sbc	r21, r25
     baa:	ca 01       	movw	r24, r20
     bac:	57 fd       	sbrc	r21, 7
     bae:	06 c0       	rjmp	.+12     	; 0xbbc <week_of_year+0x3a>
     bb0:	bf 01       	movw	r22, r30
     bb2:	0e 94 ee 71 	call	0xe3dc	; 0xe3dc <__divmodhi4>
     bb6:	81 e0       	ldi	r24, 0x01	; 1
     bb8:	86 0f       	add	r24, r22
     bba:	08 95       	ret
     bbc:	80 e0       	ldi	r24, 0x00	; 0
     bbe:	08 95       	ret

00000bc0 <system_tick>:
     bc0:	8f 93       	push	r24
     bc2:	8f b7       	in	r24, 0x3f	; 63
     bc4:	8f 93       	push	r24
     bc6:	f8 94       	cli
     bc8:	80 91 eb 4a 	lds	r24, 0x4AEB	; 0x804aeb <__system_time>
     bcc:	8f 5f       	subi	r24, 0xFF	; 255
     bce:	80 93 eb 4a 	sts	0x4AEB, r24	; 0x804aeb <__system_time>
     bd2:	80 91 ec 4a 	lds	r24, 0x4AEC	; 0x804aec <__system_time+0x1>
     bd6:	8f 4f       	sbci	r24, 0xFF	; 255
     bd8:	80 93 ec 4a 	sts	0x4AEC, r24	; 0x804aec <__system_time+0x1>
     bdc:	80 91 ed 4a 	lds	r24, 0x4AED	; 0x804aed <__system_time+0x2>
     be0:	8f 4f       	sbci	r24, 0xFF	; 255
     be2:	80 93 ed 4a 	sts	0x4AED, r24	; 0x804aed <__system_time+0x2>
     be6:	80 91 ee 4a 	lds	r24, 0x4AEE	; 0x804aee <__system_time+0x3>
     bea:	8f 4f       	sbci	r24, 0xFF	; 255
     bec:	80 93 ee 4a 	sts	0x4AEE, r24	; 0x804aee <__system_time+0x3>
     bf0:	8f 91       	pop	r24
     bf2:	8f bf       	out	0x3f, r24	; 63
     bf4:	8f 91       	pop	r24
     bf6:	08 95       	ret

00000bf8 <asctime_r>:
     bf8:	cf 92       	push	r12
     bfa:	df 92       	push	r13
     bfc:	ef 92       	push	r14
     bfe:	ff 92       	push	r15
     c00:	0f 93       	push	r16
     c02:	1f 93       	push	r17
     c04:	cf 93       	push	r28
     c06:	df 93       	push	r29
     c08:	8c 01       	movw	r16, r24
     c0a:	eb 01       	movw	r28, r22
     c0c:	fc 01       	movw	r30, r24
     c0e:	84 81       	ldd	r24, Z+4	; 0x04
     c10:	b8 2f       	mov	r27, r24
     c12:	bb 0f       	add	r27, r27
     c14:	b8 0f       	add	r27, r24
     c16:	85 81       	ldd	r24, Z+5	; 0x05
     c18:	78 2f       	mov	r23, r24
     c1a:	77 0f       	add	r23, r23
     c1c:	78 0f       	add	r23, r24
     c1e:	9e 01       	movw	r18, r28
     c20:	40 e0       	ldi	r20, 0x00	; 0
     c22:	8b 2f       	mov	r24, r27
     c24:	84 0f       	add	r24, r20
     c26:	90 e0       	ldi	r25, 0x00	; 0
     c28:	a0 e0       	ldi	r26, 0x00	; 0
     c2a:	84 5e       	subi	r24, 0xE4	; 228
     c2c:	9c 4f       	sbci	r25, 0xFC	; 252
     c2e:	af 4f       	sbci	r26, 0xFF	; 255
     c30:	fc 01       	movw	r30, r24
     c32:	5a 2f       	mov	r21, r26
     c34:	0e 94 b0 78 	call	0xf160	; 0xf160 <__xload_1>
     c38:	f9 01       	movw	r30, r18
     c3a:	61 93       	st	Z+, r22
     c3c:	9f 01       	movw	r18, r30
     c3e:	87 2f       	mov	r24, r23
     c40:	84 0f       	add	r24, r20
     c42:	90 e0       	ldi	r25, 0x00	; 0
     c44:	a0 e0       	ldi	r26, 0x00	; 0
     c46:	8e 5c       	subi	r24, 0xCE	; 206
     c48:	9c 4f       	sbci	r25, 0xFC	; 252
     c4a:	af 4f       	sbci	r26, 0xFF	; 255
     c4c:	fc 01       	movw	r30, r24
     c4e:	5a 2f       	mov	r21, r26
     c50:	0e 94 b0 78 	call	0xf160	; 0xf160 <__xload_1>
     c54:	f9 01       	movw	r30, r18
     c56:	63 83       	std	Z+3, r22	; 0x03
     c58:	4f 5f       	subi	r20, 0xFF	; 255
     c5a:	43 30       	cpi	r20, 0x03	; 3
     c5c:	11 f7       	brne	.-60     	; 0xc22 <asctime_r+0x2a>
     c5e:	80 e2       	ldi	r24, 0x20	; 32
     c60:	8f 83       	std	Y+7, r24	; 0x07
     c62:	8b 83       	std	Y+3, r24	; 0x03
     c64:	be 01       	movw	r22, r28
     c66:	68 5f       	subi	r22, 0xF8	; 248
     c68:	7f 4f       	sbci	r23, 0xFF	; 255
     c6a:	f8 01       	movw	r30, r16
     c6c:	83 81       	ldd	r24, Z+3	; 0x03
     c6e:	40 e2       	ldi	r20, 0x20	; 32
     c70:	08 2e       	mov	r0, r24
     c72:	00 0c       	add	r0, r0
     c74:	99 0b       	sbc	r25, r25
     c76:	0e 94 cf 07 	call	0xf9e	; 0xf9e <__print_lz>
     c7a:	be 01       	movw	r22, r28
     c7c:	65 5f       	subi	r22, 0xF5	; 245
     c7e:	7f 4f       	sbci	r23, 0xFF	; 255
     c80:	f8 01       	movw	r30, r16
     c82:	82 81       	ldd	r24, Z+2	; 0x02
     c84:	4a e3       	ldi	r20, 0x3A	; 58
     c86:	08 2e       	mov	r0, r24
     c88:	00 0c       	add	r0, r0
     c8a:	99 0b       	sbc	r25, r25
     c8c:	0e 94 cf 07 	call	0xf9e	; 0xf9e <__print_lz>
     c90:	be 01       	movw	r22, r28
     c92:	62 5f       	subi	r22, 0xF2	; 242
     c94:	7f 4f       	sbci	r23, 0xFF	; 255
     c96:	f8 01       	movw	r30, r16
     c98:	81 81       	ldd	r24, Z+1	; 0x01
     c9a:	4a e3       	ldi	r20, 0x3A	; 58
     c9c:	08 2e       	mov	r0, r24
     c9e:	00 0c       	add	r0, r0
     ca0:	99 0b       	sbc	r25, r25
     ca2:	0e 94 cf 07 	call	0xf9e	; 0xf9e <__print_lz>
     ca6:	be 01       	movw	r22, r28
     ca8:	6f 5e       	subi	r22, 0xEF	; 239
     caa:	7f 4f       	sbci	r23, 0xFF	; 255
     cac:	f8 01       	movw	r30, r16
     cae:	80 81       	ld	r24, Z
     cb0:	40 e2       	ldi	r20, 0x20	; 32
     cb2:	08 2e       	mov	r0, r24
     cb4:	00 0c       	add	r0, r0
     cb6:	99 0b       	sbc	r25, r25
     cb8:	0e 94 cf 07 	call	0xf9e	; 0xf9e <__print_lz>
     cbc:	f8 01       	movw	r30, r16
     cbe:	86 81       	ldd	r24, Z+6	; 0x06
     cc0:	97 81       	ldd	r25, Z+7	; 0x07
     cc2:	64 e6       	ldi	r22, 0x64	; 100
     cc4:	70 e0       	ldi	r23, 0x00	; 0
     cc6:	84 59       	subi	r24, 0x94	; 148
     cc8:	98 4f       	sbci	r25, 0xF8	; 248
     cca:	0e 94 ee 71 	call	0xe3dc	; 0xe3dc <__divmodhi4>
     cce:	6b 01       	movw	r12, r22
     cd0:	7c 01       	movw	r14, r24
     cd2:	be 01       	movw	r22, r28
     cd4:	6c 5e       	subi	r22, 0xEC	; 236
     cd6:	7f 4f       	sbci	r23, 0xFF	; 255
     cd8:	40 e2       	ldi	r20, 0x20	; 32
     cda:	c6 01       	movw	r24, r12
     cdc:	0e 94 cf 07 	call	0xf9e	; 0xf9e <__print_lz>
     ce0:	be 01       	movw	r22, r28
     ce2:	6a 5e       	subi	r22, 0xEA	; 234
     ce4:	7f 4f       	sbci	r23, 0xFF	; 255
     ce6:	40 e0       	ldi	r20, 0x00	; 0
     ce8:	c7 01       	movw	r24, r14
     cea:	df 91       	pop	r29
     cec:	cf 91       	pop	r28
     cee:	1f 91       	pop	r17
     cf0:	0f 91       	pop	r16
     cf2:	ff 90       	pop	r15
     cf4:	ef 90       	pop	r14
     cf6:	df 90       	pop	r13
     cf8:	cf 90       	pop	r12
     cfa:	0c 94 cf 07 	jmp	0xf9e	; 0xf9e <__print_lz>

00000cfe <gmtime_r>:
     cfe:	cf 92       	push	r12
     d00:	df 92       	push	r13
     d02:	ef 92       	push	r14
     d04:	ff 92       	push	r15
     d06:	0f 93       	push	r16
     d08:	1f 93       	push	r17
     d0a:	cf 93       	push	r28
     d0c:	df 93       	push	r29
     d0e:	cd b7       	in	r28, 0x3d	; 61
     d10:	de b7       	in	r29, 0x3e	; 62
     d12:	28 97       	sbiw	r28, 0x08	; 8
     d14:	cd bf       	out	0x3d, r28	; 61
     d16:	de bf       	out	0x3e, r29	; 62
     d18:	8b 01       	movw	r16, r22
     d1a:	fc 01       	movw	r30, r24
     d1c:	60 81       	ld	r22, Z
     d1e:	71 81       	ldd	r23, Z+1	; 0x01
     d20:	82 81       	ldd	r24, Z+2	; 0x02
     d22:	93 81       	ldd	r25, Z+3	; 0x03
     d24:	20 e8       	ldi	r18, 0x80	; 128
     d26:	31 e5       	ldi	r19, 0x51	; 81
     d28:	41 e0       	ldi	r20, 0x01	; 1
     d2a:	50 e0       	ldi	r21, 0x00	; 0
     d2c:	0e 94 02 72 	call	0xe404	; 0xe404 <__udivmodsi4>
     d30:	69 01       	movw	r12, r18
     d32:	7a 01       	movw	r14, r20
     d34:	2c e3       	ldi	r18, 0x3C	; 60
     d36:	30 e0       	ldi	r19, 0x00	; 0
     d38:	40 e0       	ldi	r20, 0x00	; 0
     d3a:	50 e0       	ldi	r21, 0x00	; 0
     d3c:	0e 94 24 72 	call	0xe448	; 0xe448 <__divmodsi4>
     d40:	29 83       	std	Y+1, r18	; 0x01
     d42:	3a 83       	std	Y+2, r19	; 0x02
     d44:	4b 83       	std	Y+3, r20	; 0x03
     d46:	5c 83       	std	Y+4, r21	; 0x04
     d48:	89 81       	ldd	r24, Y+1	; 0x01
     d4a:	9a 81       	ldd	r25, Y+2	; 0x02
     d4c:	ab 81       	ldd	r26, Y+3	; 0x03
     d4e:	bc 81       	ldd	r27, Y+4	; 0x04
     d50:	f8 01       	movw	r30, r16
     d52:	60 83       	st	Z, r22
     d54:	6c e3       	ldi	r22, 0x3C	; 60
     d56:	70 e0       	ldi	r23, 0x00	; 0
     d58:	0e 94 ee 71 	call	0xe3dc	; 0xe3dc <__divmodhi4>
     d5c:	dc 01       	movw	r26, r24
     d5e:	cb 01       	movw	r24, r22
     d60:	f8 01       	movw	r30, r16
     d62:	a1 83       	std	Z+1, r26	; 0x01
     d64:	82 83       	std	Z+2, r24	; 0x02
     d66:	c6 01       	movw	r24, r12
     d68:	06 96       	adiw	r24, 0x06	; 6
     d6a:	67 e0       	ldi	r22, 0x07	; 7
     d6c:	70 e0       	ldi	r23, 0x00	; 0
     d6e:	0e 94 da 71 	call	0xe3b4	; 0xe3b4 <__udivmodhi4>
     d72:	84 83       	std	Z+4, r24	; 0x04
     d74:	2d ea       	ldi	r18, 0xAD	; 173
     d76:	3e e8       	ldi	r19, 0x8E	; 142
     d78:	40 e0       	ldi	r20, 0x00	; 0
     d7a:	50 e0       	ldi	r21, 0x00	; 0
     d7c:	c7 01       	movw	r24, r14
     d7e:	b6 01       	movw	r22, r12
     d80:	0e 94 24 72 	call	0xe448	; 0xe448 <__divmodsi4>
     d84:	29 83       	std	Y+1, r18	; 0x01
     d86:	3a 83       	std	Y+2, r19	; 0x02
     d88:	6d 83       	std	Y+5, r22	; 0x05
     d8a:	7e 83       	std	Y+6, r23	; 0x06
     d8c:	8f 83       	std	Y+7, r24	; 0x07
     d8e:	98 87       	std	Y+8, r25	; 0x08
     d90:	89 81       	ldd	r24, Y+1	; 0x01
     d92:	9a 81       	ldd	r25, Y+2	; 0x02
     d94:	24 e6       	ldi	r18, 0x64	; 100
     d96:	28 9f       	mul	r18, r24
     d98:	60 01       	movw	r12, r0
     d9a:	29 9f       	mul	r18, r25
     d9c:	d0 0c       	add	r13, r0
     d9e:	11 24       	eor	r1, r1
     da0:	6d 81       	ldd	r22, Y+5	; 0x05
     da2:	7e 81       	ldd	r23, Y+6	; 0x06
     da4:	8f 81       	ldd	r24, Y+7	; 0x07
     da6:	98 85       	ldd	r25, Y+8	; 0x08
     da8:	25 eb       	ldi	r18, 0xB5	; 181
     daa:	35 e0       	ldi	r19, 0x05	; 5
     dac:	40 e0       	ldi	r20, 0x00	; 0
     dae:	50 e0       	ldi	r21, 0x00	; 0
     db0:	0e 94 24 72 	call	0xe448	; 0xe448 <__divmodsi4>
     db4:	29 83       	std	Y+1, r18	; 0x01
     db6:	3a 83       	std	Y+2, r19	; 0x02
     db8:	6d 83       	std	Y+5, r22	; 0x05
     dba:	7e 83       	std	Y+6, r23	; 0x06
     dbc:	e9 80       	ldd	r14, Y+1	; 0x01
     dbe:	fa 80       	ldd	r15, Y+2	; 0x02
     dc0:	ee 0c       	add	r14, r14
     dc2:	ff 1c       	adc	r15, r15
     dc4:	ee 0c       	add	r14, r14
     dc6:	ff 1c       	adc	r15, r15
     dc8:	ec 0c       	add	r14, r12
     dca:	fd 1c       	adc	r15, r13
     dcc:	8d 81       	ldd	r24, Y+5	; 0x05
     dce:	9e 81       	ldd	r25, Y+6	; 0x06
     dd0:	f5 e6       	ldi	r31, 0x65	; 101
     dd2:	ef 16       	cp	r14, r31
     dd4:	f1 04       	cpc	r15, r1
     dd6:	10 f0       	brcs	.+4      	; 0xddc <gmtime_r+0xde>
     dd8:	01 96       	adiw	r24, 0x01	; 1
     dda:	04 c0       	rjmp	.+8      	; 0xde4 <gmtime_r+0xe6>
     ddc:	24 e6       	ldi	r18, 0x64	; 100
     dde:	e2 16       	cp	r14, r18
     de0:	f1 04       	cpc	r15, r1
     de2:	19 f0       	breq	.+6      	; 0xdea <gmtime_r+0xec>
     de4:	21 e0       	ldi	r18, 0x01	; 1
     de6:	30 e0       	ldi	r19, 0x00	; 0
     de8:	02 c0       	rjmp	.+4      	; 0xdee <gmtime_r+0xf0>
     dea:	20 e0       	ldi	r18, 0x00	; 0
     dec:	30 e0       	ldi	r19, 0x00	; 0
     dee:	a9 01       	movw	r20, r18
     df0:	44 59       	subi	r20, 0x94	; 148
     df2:	5e 4f       	sbci	r21, 0xFE	; 254
     df4:	48 17       	cp	r20, r24
     df6:	59 07       	cpc	r21, r25
     df8:	68 f4       	brcc	.+26     	; 0xe14 <gmtime_r+0x116>
     dfa:	6d e6       	ldi	r22, 0x6D	; 109
     dfc:	71 e0       	ldi	r23, 0x01	; 1
     dfe:	82 1b       	sub	r24, r18
     e00:	93 0b       	sbc	r25, r19
     e02:	0e 94 ee 71 	call	0xe3dc	; 0xe3dc <__divmodhi4>
     e06:	dc 01       	movw	r26, r24
     e08:	cb 01       	movw	r24, r22
     e0a:	e8 0e       	add	r14, r24
     e0c:	f9 1e       	adc	r15, r25
     e0e:	cd 01       	movw	r24, r26
     e10:	20 e0       	ldi	r18, 0x00	; 0
     e12:	30 e0       	ldi	r19, 0x00	; 0
     e14:	44 e6       	ldi	r20, 0x64	; 100
     e16:	e4 0e       	add	r14, r20
     e18:	f1 1c       	adc	r15, r1
     e1a:	f8 01       	movw	r30, r16
     e1c:	e6 82       	std	Z+6, r14	; 0x06
     e1e:	f7 82       	std	Z+7, r15	; 0x07
     e20:	80 87       	std	Z+8, r24	; 0x08
     e22:	91 87       	std	Z+9, r25	; 0x09
     e24:	25 5c       	subi	r18, 0xC5	; 197
     e26:	3f 4f       	sbci	r19, 0xFF	; 255
     e28:	82 17       	cp	r24, r18
     e2a:	93 07       	cpc	r25, r19
     e2c:	48 f4       	brcc	.+18     	; 0xe40 <gmtime_r+0x142>
     e2e:	6f e1       	ldi	r22, 0x1F	; 31
     e30:	70 e0       	ldi	r23, 0x00	; 0
     e32:	0e 94 ee 71 	call	0xe3dc	; 0xe3dc <__divmodhi4>
     e36:	dc 01       	movw	r26, r24
     e38:	cb 01       	movw	r24, r22
     e3a:	f8 01       	movw	r30, r16
     e3c:	85 83       	std	Z+5, r24	; 0x05
     e3e:	22 c0       	rjmp	.+68     	; 0xe84 <gmtime_r+0x186>
     e40:	69 e9       	ldi	r22, 0x99	; 153
     e42:	70 e0       	ldi	r23, 0x00	; 0
     e44:	82 1b       	sub	r24, r18
     e46:	93 0b       	sbc	r25, r19
     e48:	0e 94 ee 71 	call	0xe3dc	; 0xe3dc <__divmodhi4>
     e4c:	dc 01       	movw	r26, r24
     e4e:	cb 01       	movw	r24, r22
     e50:	f8 2e       	mov	r15, r24
     e52:	ff 0c       	add	r15, r15
     e54:	ff 0c       	add	r15, r15
     e56:	f8 0e       	add	r15, r24
     e58:	6d e3       	ldi	r22, 0x3D	; 61
     e5a:	70 e0       	ldi	r23, 0x00	; 0
     e5c:	cd 01       	movw	r24, r26
     e5e:	0e 94 ee 71 	call	0xe3dc	; 0xe3dc <__divmodhi4>
     e62:	dc 01       	movw	r26, r24
     e64:	cb 01       	movw	r24, r22
     e66:	e8 2e       	mov	r14, r24
     e68:	ee 0c       	add	r14, r14
     e6a:	6f e1       	ldi	r22, 0x1F	; 31
     e6c:	70 e0       	ldi	r23, 0x00	; 0
     e6e:	cd 01       	movw	r24, r26
     e70:	0e 94 ee 71 	call	0xe3dc	; 0xe3dc <__divmodhi4>
     e74:	dc 01       	movw	r26, r24
     e76:	cb 01       	movw	r24, r22
     e78:	22 e0       	ldi	r18, 0x02	; 2
     e7a:	28 0f       	add	r18, r24
     e7c:	f2 0e       	add	r15, r18
     e7e:	fe 0c       	add	r15, r14
     e80:	f8 01       	movw	r30, r16
     e82:	f5 82       	std	Z+5, r15	; 0x05
     e84:	a3 83       	std	Z+3, r26	; 0x03
     e86:	f8 01       	movw	r30, r16
     e88:	12 86       	std	Z+10, r1	; 0x0a
     e8a:	13 86       	std	Z+11, r1	; 0x0b
     e8c:	83 81       	ldd	r24, Z+3	; 0x03
     e8e:	8f 5f       	subi	r24, 0xFF	; 255
     e90:	83 83       	std	Z+3, r24	; 0x03
     e92:	28 96       	adiw	r28, 0x08	; 8
     e94:	cd bf       	out	0x3d, r28	; 61
     e96:	de bf       	out	0x3e, r29	; 62
     e98:	df 91       	pop	r29
     e9a:	cf 91       	pop	r28
     e9c:	1f 91       	pop	r17
     e9e:	0f 91       	pop	r16
     ea0:	ff 90       	pop	r15
     ea2:	ef 90       	pop	r14
     ea4:	df 90       	pop	r13
     ea6:	cf 90       	pop	r12
     ea8:	08 95       	ret

00000eaa <iso_week_date_r>:
     eaa:	cf 92       	push	r12
     eac:	df 92       	push	r13
     eae:	ef 92       	push	r14
     eb0:	ff 92       	push	r15
     eb2:	0f 93       	push	r16
     eb4:	1f 93       	push	r17
     eb6:	cf 93       	push	r28
     eb8:	df 93       	push	r29
     eba:	8c 01       	movw	r16, r24
     ebc:	7b 01       	movw	r14, r22
     ebe:	ea 01       	movw	r28, r20
     ec0:	88 83       	st	Y, r24
     ec2:	99 83       	std	Y+1, r25	; 0x01
     ec4:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <is_leap_year>
     ec8:	28 2f       	mov	r18, r24
     eca:	a8 01       	movw	r20, r16
     ecc:	40 5d       	subi	r20, 0xD0	; 208
     ece:	57 40       	sbci	r21, 0x07	; 7
     ed0:	6d e6       	ldi	r22, 0x6D	; 109
     ed2:	71 e0       	ldi	r23, 0x01	; 1
     ed4:	46 9f       	mul	r20, r22
     ed6:	c0 01       	movw	r24, r0
     ed8:	47 9f       	mul	r20, r23
     eda:	90 0d       	add	r25, r0
     edc:	56 9f       	mul	r21, r22
     ede:	90 0d       	add	r25, r0
     ee0:	11 24       	eor	r1, r1
     ee2:	8e 0d       	add	r24, r14
     ee4:	9f 1d       	adc	r25, r15
     ee6:	41 15       	cp	r20, r1
     ee8:	51 05       	cpc	r21, r1
     eea:	79 f0       	breq	.+30     	; 0xf0a <iso_week_date_r+0x60>
     eec:	ba 01       	movw	r22, r20
     eee:	76 95       	lsr	r23
     ef0:	67 95       	ror	r22
     ef2:	76 95       	lsr	r23
     ef4:	67 95       	ror	r22
     ef6:	6f 5f       	subi	r22, 0xFF	; 255
     ef8:	7f 4f       	sbci	r23, 0xFF	; 255
     efa:	86 0f       	add	r24, r22
     efc:	97 1f       	adc	r25, r23
     efe:	82 1b       	sub	r24, r18
     f00:	91 09       	sbc	r25, r1
     f02:	45 36       	cpi	r20, 0x65	; 101
     f04:	51 05       	cpc	r21, r1
     f06:	08 f0       	brcs	.+2      	; 0xf0a <iso_week_date_r+0x60>
     f08:	01 97       	sbiw	r24, 0x01	; 1
     f0a:	06 96       	adiw	r24, 0x06	; 6
     f0c:	67 e0       	ldi	r22, 0x07	; 7
     f0e:	70 e0       	ldi	r23, 0x00	; 0
     f10:	0e 94 da 71 	call	0xe3b4	; 0xe3b4 <__udivmodhi4>
     f14:	6c 01       	movw	r12, r24
     f16:	89 2b       	or	r24, r25
     f18:	19 f4       	brne	.+6      	; 0xf20 <iso_week_date_r+0x76>
     f1a:	87 e0       	ldi	r24, 0x07	; 7
     f1c:	c8 2e       	mov	r12, r24
     f1e:	d1 2c       	mov	r13, r1
     f20:	cc 82       	std	Y+4, r12	; 0x04
     f22:	dd 82       	std	Y+5, r13	; 0x05
     f24:	c7 01       	movw	r24, r14
     f26:	0b 96       	adiw	r24, 0x0b	; 11
     f28:	8c 19       	sub	r24, r12
     f2a:	9d 09       	sbc	r25, r13
     f2c:	67 e0       	ldi	r22, 0x07	; 7
     f2e:	70 e0       	ldi	r23, 0x00	; 0
     f30:	0e 94 ee 71 	call	0xe3dc	; 0xe3dc <__divmodhi4>
     f34:	65 33       	cpi	r22, 0x35	; 53
     f36:	71 05       	cpc	r23, r1
     f38:	b1 f4       	brne	.+44     	; 0xf66 <iso_week_date_r+0xbc>
     f3a:	81 e0       	ldi	r24, 0x01	; 1
     f3c:	c8 1a       	sub	r12, r24
     f3e:	d1 08       	sbc	r13, r1
     f40:	ec 18       	sub	r14, r12
     f42:	fd 08       	sbc	r15, r13
     f44:	82 2f       	mov	r24, r18
     f46:	90 e0       	ldi	r25, 0x00	; 0
     f48:	84 59       	subi	r24, 0x94	; 148
     f4a:	9e 4f       	sbci	r25, 0xFE	; 254
     f4c:	23 e0       	ldi	r18, 0x03	; 3
     f4e:	e2 0e       	add	r14, r18
     f50:	f1 1c       	adc	r15, r1
     f52:	8e 15       	cp	r24, r14
     f54:	9f 05       	cpc	r25, r15
     f56:	3c f4       	brge	.+14     	; 0xf66 <iso_week_date_r+0xbc>
     f58:	88 81       	ld	r24, Y
     f5a:	99 81       	ldd	r25, Y+1	; 0x01
     f5c:	01 96       	adiw	r24, 0x01	; 1
     f5e:	88 83       	st	Y, r24
     f60:	99 83       	std	Y+1, r25	; 0x01
     f62:	61 e0       	ldi	r22, 0x01	; 1
     f64:	70 e0       	ldi	r23, 0x00	; 0
     f66:	6a 83       	std	Y+2, r22	; 0x02
     f68:	7b 83       	std	Y+3, r23	; 0x03
     f6a:	67 2b       	or	r22, r23
     f6c:	79 f4       	brne	.+30     	; 0xf8c <iso_week_date_r+0xe2>
     f6e:	01 50       	subi	r16, 0x01	; 1
     f70:	11 09       	sbc	r17, r1
     f72:	c8 01       	movw	r24, r16
     f74:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <is_leap_year>
     f78:	68 2f       	mov	r22, r24
     f7a:	70 e0       	ldi	r23, 0x00	; 0
     f7c:	64 59       	subi	r22, 0x94	; 148
     f7e:	7e 4f       	sbci	r23, 0xFE	; 254
     f80:	ae 01       	movw	r20, r28
     f82:	c8 01       	movw	r24, r16
     f84:	0e 94 55 07 	call	0xeaa	; 0xeaa <iso_week_date_r>
     f88:	cc 82       	std	Y+4, r12	; 0x04
     f8a:	dd 82       	std	Y+5, r13	; 0x05
     f8c:	df 91       	pop	r29
     f8e:	cf 91       	pop	r28
     f90:	1f 91       	pop	r17
     f92:	0f 91       	pop	r16
     f94:	ff 90       	pop	r15
     f96:	ef 90       	pop	r14
     f98:	df 90       	pop	r13
     f9a:	cf 90       	pop	r12
     f9c:	08 95       	ret

00000f9e <__print_lz>:
     f9e:	1f 93       	push	r17
     fa0:	cf 93       	push	r28
     fa2:	df 93       	push	r29
     fa4:	eb 01       	movw	r28, r22
     fa6:	14 2f       	mov	r17, r20
     fa8:	6a e0       	ldi	r22, 0x0A	; 10
     faa:	70 e0       	ldi	r23, 0x00	; 0
     fac:	0e 94 ee 71 	call	0xe3dc	; 0xe3dc <__divmodhi4>
     fb0:	60 5d       	subi	r22, 0xD0	; 208
     fb2:	68 83       	st	Y, r22
     fb4:	80 5d       	subi	r24, 0xD0	; 208
     fb6:	89 83       	std	Y+1, r24	; 0x01
     fb8:	1a 83       	std	Y+2, r17	; 0x02
     fba:	df 91       	pop	r29
     fbc:	cf 91       	pop	r28
     fbe:	1f 91       	pop	r17
     fc0:	08 95       	ret

00000fc2 <atmel_start_init>:

/**
 * Initializes MCU, drivers and middleware in the project
 **/
void atmel_start_init(void)
{
     fc2:	cf 93       	push	r28
     fc4:	df 93       	push	r29
     fc6:	cd b7       	in	r28, 0x3d	; 61
     fc8:	de b7       	in	r29, 0x3e	; 62
	system_init();
     fca:	0e 94 51 3b 	call	0x76a2	; 0x76a2 <system_init>
}
     fce:	00 00       	nop
     fd0:	df 91       	pop	r29
     fd2:	cf 91       	pop	r28
     fd4:	08 95       	ret

00000fd6 <__vector_30>:

extern USART_Number_t g_serialbus_usart_number;
extern USART_Number_t g_linkbus_usart_number;

ISR(TCB2_INT_vect)
{
     fd6:	1f 92       	push	r1
     fd8:	0f 92       	push	r0
     fda:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
     fde:	0f 92       	push	r0
     fe0:	11 24       	eor	r1, r1
     fe2:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
     fe6:	0f 92       	push	r0
     fe8:	2f 93       	push	r18
     fea:	8f 93       	push	r24
     fec:	9f 93       	push	r25
     fee:	ef 93       	push	r30
     ff0:	ff 93       	push	r31
     ff2:	cf 93       	push	r28
     ff4:	df 93       	push	r29
     ff6:	cd b7       	in	r28, 0x3d	; 61
     ff8:	de b7       	in	r29, 0x3e	; 62
	if(TCB2.INTFLAGS & TCB_CAPT_bm)
     ffa:	80 e2       	ldi	r24, 0x20	; 32
     ffc:	9b e0       	ldi	r25, 0x0B	; 11
     ffe:	fc 01       	movw	r30, r24
    1000:	86 81       	ldd	r24, Z+6	; 0x06
    1002:	88 2f       	mov	r24, r24
    1004:	90 e0       	ldi	r25, 0x00	; 0
    1006:	81 70       	andi	r24, 0x01	; 1
    1008:	99 27       	eor	r25, r25
    100a:	21 e0       	ldi	r18, 0x01	; 1
    100c:	89 2b       	or	r24, r25
    100e:	09 f4       	brne	.+2      	; 0x1012 <__vector_30+0x3c>
    1010:	20 e0       	ldi	r18, 0x00	; 0
    1012:	22 23       	and	r18, r18
    1014:	29 f0       	breq	.+10     	; 0x1020 <__vector_30+0x4a>
    {
        TCB2.INTFLAGS = TCB_CAPT_bm;
    1016:	80 e2       	ldi	r24, 0x20	; 32
    1018:	9b e0       	ldi	r25, 0x0B	; 11
    101a:	21 e0       	ldi	r18, 0x01	; 1
    101c:	fc 01       	movw	r30, r24
    101e:	26 83       	std	Z+6, r18	; 0x06
    }
}
    1020:	00 00       	nop
    1022:	df 91       	pop	r29
    1024:	cf 91       	pop	r28
    1026:	ff 91       	pop	r31
    1028:	ef 91       	pop	r30
    102a:	9f 91       	pop	r25
    102c:	8f 91       	pop	r24
    102e:	2f 91       	pop	r18
    1030:	0f 90       	pop	r0
    1032:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    1036:	0f 90       	pop	r0
    1038:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    103c:	0f 90       	pop	r0
    103e:	1f 90       	pop	r1
    1040:	18 95       	reti

00001042 <__vector_19>:

ISR(USART0_RXC_vect)
{
    1042:	1f 92       	push	r1
    1044:	0f 92       	push	r0
    1046:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    104a:	0f 92       	push	r0
    104c:	11 24       	eor	r1, r1
    104e:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    1052:	0f 92       	push	r0
    1054:	2f 93       	push	r18
    1056:	3f 93       	push	r19
    1058:	4f 93       	push	r20
    105a:	5f 93       	push	r21
    105c:	6f 93       	push	r22
    105e:	7f 93       	push	r23
    1060:	8f 93       	push	r24
    1062:	9f 93       	push	r25
    1064:	af 93       	push	r26
    1066:	bf 93       	push	r27
    1068:	ef 93       	push	r30
    106a:	ff 93       	push	r31
    106c:	cf 93       	push	r28
    106e:	df 93       	push	r29
    1070:	1f 92       	push	r1
    1072:	cd b7       	in	r28, 0x3d	; 61
    1074:	de b7       	in	r29, 0x3e	; 62
	uint8_t rx_char = USART0_get_data();
    1076:	0e 94 6c 6a 	call	0xd4d8	; 0xd4d8 <USART0_get_data>
    107a:	89 83       	std	Y+1, r24	; 0x01
	
	if(g_linkbus_usart_number == USART_0)
    107c:	80 91 22 40 	lds	r24, 0x4022	; 0x804022 <g_linkbus_usart_number>
    1080:	88 23       	and	r24, r24
    1082:	19 f4       	brne	.+6      	; 0x108a <__vector_19+0x48>
	{
		linkbus_Rx(rx_char);
    1084:	89 81       	ldd	r24, Y+1	; 0x01
    1086:	0e 94 f7 0c 	call	0x19ee	; 0x19ee <_Z10linkbus_Rxh>
	}
	
	if(g_serialbus_usart_number == USART_0)
    108a:	80 91 25 40 	lds	r24, 0x4025	; 0x804025 <g_serialbus_usart_number>
    108e:	88 23       	and	r24, r24
    1090:	19 f4       	brne	.+6      	; 0x1098 <__vector_19+0x56>
	{
		serial_Rx(rx_char);
    1092:	89 81       	ldd	r24, Y+1	; 0x01
    1094:	0e 94 a9 08 	call	0x1152	; 0x1152 <_Z9serial_Rxh>
	}
}
    1098:	00 00       	nop
    109a:	0f 90       	pop	r0
    109c:	df 91       	pop	r29
    109e:	cf 91       	pop	r28
    10a0:	ff 91       	pop	r31
    10a2:	ef 91       	pop	r30
    10a4:	bf 91       	pop	r27
    10a6:	af 91       	pop	r26
    10a8:	9f 91       	pop	r25
    10aa:	8f 91       	pop	r24
    10ac:	7f 91       	pop	r23
    10ae:	6f 91       	pop	r22
    10b0:	5f 91       	pop	r21
    10b2:	4f 91       	pop	r20
    10b4:	3f 91       	pop	r19
    10b6:	2f 91       	pop	r18
    10b8:	0f 90       	pop	r0
    10ba:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    10be:	0f 90       	pop	r0
    10c0:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    10c4:	0f 90       	pop	r0
    10c6:	1f 90       	pop	r1
    10c8:	18 95       	reti

000010ca <__vector_55>:

ISR(USART4_RXC_vect)
{
    10ca:	1f 92       	push	r1
    10cc:	0f 92       	push	r0
    10ce:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    10d2:	0f 92       	push	r0
    10d4:	11 24       	eor	r1, r1
    10d6:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    10da:	0f 92       	push	r0
    10dc:	2f 93       	push	r18
    10de:	3f 93       	push	r19
    10e0:	4f 93       	push	r20
    10e2:	5f 93       	push	r21
    10e4:	6f 93       	push	r22
    10e6:	7f 93       	push	r23
    10e8:	8f 93       	push	r24
    10ea:	9f 93       	push	r25
    10ec:	af 93       	push	r26
    10ee:	bf 93       	push	r27
    10f0:	ef 93       	push	r30
    10f2:	ff 93       	push	r31
    10f4:	cf 93       	push	r28
    10f6:	df 93       	push	r29
    10f8:	1f 92       	push	r1
    10fa:	cd b7       	in	r28, 0x3d	; 61
    10fc:	de b7       	in	r29, 0x3e	; 62
	uint8_t rx_char = USART4_get_data();
    10fe:	0e 94 78 6b 	call	0xd6f0	; 0xd6f0 <USART4_get_data>
    1102:	89 83       	std	Y+1, r24	; 0x01
	
	if(g_linkbus_usart_number == USART_4)
    1104:	80 91 22 40 	lds	r24, 0x4022	; 0x804022 <g_linkbus_usart_number>
    1108:	84 30       	cpi	r24, 0x04	; 4
    110a:	19 f4       	brne	.+6      	; 0x1112 <__vector_55+0x48>
	{
		linkbus_Rx(rx_char);
    110c:	89 81       	ldd	r24, Y+1	; 0x01
    110e:	0e 94 f7 0c 	call	0x19ee	; 0x19ee <_Z10linkbus_Rxh>
	}
	
	if(g_serialbus_usart_number == USART_4)
    1112:	80 91 25 40 	lds	r24, 0x4025	; 0x804025 <g_serialbus_usart_number>
    1116:	84 30       	cpi	r24, 0x04	; 4
    1118:	19 f4       	brne	.+6      	; 0x1120 <__vector_55+0x56>
	{
		serial_Rx(rx_char);
    111a:	89 81       	ldd	r24, Y+1	; 0x01
    111c:	0e 94 a9 08 	call	0x1152	; 0x1152 <_Z9serial_Rxh>
	}
}
    1120:	00 00       	nop
    1122:	0f 90       	pop	r0
    1124:	df 91       	pop	r29
    1126:	cf 91       	pop	r28
    1128:	ff 91       	pop	r31
    112a:	ef 91       	pop	r30
    112c:	bf 91       	pop	r27
    112e:	af 91       	pop	r26
    1130:	9f 91       	pop	r25
    1132:	8f 91       	pop	r24
    1134:	7f 91       	pop	r23
    1136:	6f 91       	pop	r22
    1138:	5f 91       	pop	r21
    113a:	4f 91       	pop	r20
    113c:	3f 91       	pop	r19
    113e:	2f 91       	pop	r18
    1140:	0f 90       	pop	r0
    1142:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    1146:	0f 90       	pop	r0
    1148:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    114c:	0f 90       	pop	r0
    114e:	1f 90       	pop	r1
    1150:	18 95       	reti

00001152 <_Z9serial_Rxh>:

void serial_Rx(uint8_t rx_char)
{
    1152:	cf 93       	push	r28
    1154:	df 93       	push	r29
    1156:	cd b7       	in	r28, 0x3d	; 61
    1158:	de b7       	in	r29, 0x3e	; 62
    115a:	2a 97       	sbiw	r28, 0x0a	; 10
    115c:	cd bf       	out	0x3d, r28	; 61
    115e:	de bf       	out	0x3e, r29	; 62
    1160:	8a 87       	std	Y+10, r24	; 0x0a
	static uint8_t field_index = 0;
	static uint8_t field_len = 0;
	static int msg_ID = 0;
	static bool receiving_msg = false;

	if(!buff)
    1162:	80 91 f2 46 	lds	r24, 0x46F2	; 0x8046f2 <__data_end>
    1166:	90 91 f3 46 	lds	r25, 0x46F3	; 0x8046f3 <__data_end+0x1>
    116a:	89 2b       	or	r24, r25
    116c:	31 f4       	brne	.+12     	; 0x117a <_Z9serial_Rxh+0x28>
	{
		buff = nextEmptySBRxBuffer();
    116e:	0e 94 e2 58 	call	0xb1c4	; 0xb1c4 <nextEmptySBRxBuffer>
    1172:	80 93 f2 46 	sts	0x46F2, r24	; 0x8046f2 <__data_end>
    1176:	90 93 f3 46 	sts	0x46F3, r25	; 0x8046f3 <__data_end+0x1>
	}

	if(buff)
    117a:	80 91 f2 46 	lds	r24, 0x46F2	; 0x8046f2 <__data_end>
    117e:	90 91 f3 46 	lds	r25, 0x46F3	; 0x8046f3 <__data_end+0x1>
    1182:	89 2b       	or	r24, r25
    1184:	09 f4       	brne	.+2      	; 0x1188 <_Z9serial_Rxh+0x36>
    1186:	5e c2       	rjmp	.+1212   	; 0x1644 <_Z9serial_Rxh+0x4f2>
	{
		static uint8_t ignoreCount = 0;
		rx_char = toupper(rx_char);
    1188:	8a 85       	ldd	r24, Y+10	; 0x0a
    118a:	88 2f       	mov	r24, r24
    118c:	90 e0       	ldi	r25, 0x00	; 0
    118e:	0e 94 d0 73 	call	0xe7a0	; 0xe7a0 <toupper>
    1192:	8a 87       	std	Y+10, r24	; 0x0a

		if(ignoreCount)
    1194:	80 91 f4 46 	lds	r24, 0x46F4	; 0x8046f4 <_ZZ9serial_RxhE11ignoreCount>
    1198:	88 23       	and	r24, r24
    119a:	39 f0       	breq	.+14     	; 0x11aa <_Z9serial_Rxh+0x58>
		{
			rx_char = '\0';
    119c:	1a 86       	std	Y+10, r1	; 0x0a
			ignoreCount--;
    119e:	80 91 f4 46 	lds	r24, 0x46F4	; 0x8046f4 <_ZZ9serial_RxhE11ignoreCount>
    11a2:	81 50       	subi	r24, 0x01	; 1
    11a4:	80 93 f4 46 	sts	0x46F4, r24	; 0x8046f4 <_ZZ9serial_RxhE11ignoreCount>
			{
				sb_echo_char(rx_char);
			}
		}
	}	
}
    11a8:	4d c2       	rjmp	.+1178   	; 0x1644 <_Z9serial_Rxh+0x4f2>
		if(ignoreCount)
		{
			rx_char = '\0';
			ignoreCount--;
		}
		else if(rx_char == 0x1B)    /* Ignore ESC sequences */
    11aa:	8a 85       	ldd	r24, Y+10	; 0x0a
    11ac:	8b 31       	cpi	r24, 0x1B	; 27
    11ae:	91 f4       	brne	.+36     	; 0x11d4 <_Z9serial_Rxh+0x82>
		{
			rx_char = '\0';
    11b0:	1a 86       	std	Y+10, r1	; 0x0a

			if(charIndex < SERIALBUS_MAX_MSG_FIELD_LENGTH)
    11b2:	80 91 f5 46 	lds	r24, 0x46F5	; 0x8046f5 <_ZZ9serial_RxhE9charIndex>
    11b6:	84 31       	cpi	r24, 0x14	; 20
    11b8:	48 f4       	brcc	.+18     	; 0x11cc <_Z9serial_Rxh+0x7a>
			{
				rx_char = textBuff[charIndex];
    11ba:	80 91 f5 46 	lds	r24, 0x46F5	; 0x8046f5 <_ZZ9serial_RxhE9charIndex>
    11be:	88 2f       	mov	r24, r24
    11c0:	90 e0       	ldi	r25, 0x00	; 0
    11c2:	8a 50       	subi	r24, 0x0A	; 10
    11c4:	99 4b       	sbci	r25, 0xB9	; 185
    11c6:	fc 01       	movw	r30, r24
    11c8:	80 81       	ld	r24, Z
    11ca:	8a 87       	std	Y+10, r24	; 0x0a
			}

			ignoreCount = 2;        /* throw out the next two characters */
    11cc:	82 e0       	ldi	r24, 0x02	; 2
    11ce:	80 93 f4 46 	sts	0x46F4, r24	; 0x8046f4 <_ZZ9serial_RxhE11ignoreCount>
			{
				sb_echo_char(rx_char);
			}
		}
	}	
}
    11d2:	38 c2       	rjmp	.+1136   	; 0x1644 <_Z9serial_Rxh+0x4f2>
				rx_char = textBuff[charIndex];
			}

			ignoreCount = 2;        /* throw out the next two characters */
		}
		else if(rx_char == 0x0D)    /* Handle carriage return */
    11d4:	8a 85       	ldd	r24, Y+10	; 0x0a
    11d6:	8d 30       	cpi	r24, 0x0D	; 13
    11d8:	09 f0       	breq	.+2      	; 0x11dc <_Z9serial_Rxh+0x8a>
    11da:	60 c0       	rjmp	.+192    	; 0x129c <_Z9serial_Rxh+0x14a>
		{
			if(receiving_msg)
    11dc:	80 91 28 47 	lds	r24, 0x4728	; 0x804728 <_ZZ9serial_RxhE13receiving_msg>
    11e0:	88 23       	and	r24, r24
    11e2:	09 f4       	brne	.+2      	; 0x11e6 <_Z9serial_Rxh+0x94>
    11e4:	41 c0       	rjmp	.+130    	; 0x1268 <_Z9serial_Rxh+0x116>
			{
				if(charIndex > 0)
    11e6:	80 91 f5 46 	lds	r24, 0x46F5	; 0x8046f5 <_ZZ9serial_RxhE9charIndex>
    11ea:	88 23       	and	r24, r24
    11ec:	d1 f1       	breq	.+116    	; 0x1262 <_Z9serial_Rxh+0x110>
				{
					buff->type = SERIALBUS_MSG_QUERY;
    11ee:	80 91 f2 46 	lds	r24, 0x46F2	; 0x8046f2 <__data_end>
    11f2:	90 91 f3 46 	lds	r25, 0x46F3	; 0x8046f3 <__data_end+0x1>
    11f6:	22 e0       	ldi	r18, 0x02	; 2
    11f8:	fc 01       	movw	r30, r24
    11fa:	20 83       	st	Z, r18
					buff->id = (SBMessageID)msg_ID;
    11fc:	80 91 f2 46 	lds	r24, 0x46F2	; 0x8046f2 <__data_end>
    1200:	90 91 f3 46 	lds	r25, 0x46F3	; 0x8046f3 <__data_end+0x1>
    1204:	20 91 29 47 	lds	r18, 0x4729	; 0x804729 <_ZZ9serial_RxhE6msg_ID>
    1208:	30 91 2a 47 	lds	r19, 0x472A	; 0x80472a <_ZZ9serial_RxhE6msg_ID+0x1>
    120c:	fc 01       	movw	r30, r24
    120e:	21 83       	std	Z+1, r18	; 0x01
    1210:	32 83       	std	Z+2, r19	; 0x02

					if(field_index > 0) /* terminate the last field */
    1212:	80 91 2b 47 	lds	r24, 0x472B	; 0x80472b <_ZZ9serial_RxhE11field_index>
    1216:	88 23       	and	r24, r24
    1218:	e1 f0       	breq	.+56     	; 0x1252 <_Z9serial_Rxh+0x100>
					{
						buff->fields[field_index - 1][field_len] = 0;
    121a:	40 91 f2 46 	lds	r20, 0x46F2	; 0x8046f2 <__data_end>
    121e:	50 91 f3 46 	lds	r21, 0x46F3	; 0x8046f3 <__data_end+0x1>
    1222:	80 91 2b 47 	lds	r24, 0x472B	; 0x80472b <_ZZ9serial_RxhE11field_index>
    1226:	88 2f       	mov	r24, r24
    1228:	90 e0       	ldi	r25, 0x00	; 0
    122a:	bc 01       	movw	r22, r24
    122c:	61 50       	subi	r22, 0x01	; 1
    122e:	71 09       	sbc	r23, r1
    1230:	80 91 2c 47 	lds	r24, 0x472C	; 0x80472c <_ZZ9serial_RxhE9field_len>
    1234:	88 2f       	mov	r24, r24
    1236:	90 e0       	ldi	r25, 0x00	; 0
    1238:	e4 e1       	ldi	r30, 0x14	; 20
    123a:	e6 9f       	mul	r30, r22
    123c:	90 01       	movw	r18, r0
    123e:	e7 9f       	mul	r30, r23
    1240:	30 0d       	add	r19, r0
    1242:	11 24       	eor	r1, r1
    1244:	24 0f       	add	r18, r20
    1246:	35 1f       	adc	r19, r21
    1248:	82 0f       	add	r24, r18
    124a:	93 1f       	adc	r25, r19
    124c:	03 96       	adiw	r24, 0x03	; 3
    124e:	fc 01       	movw	r30, r24
    1250:	10 82       	st	Z, r1
					}

					textBuff[charIndex] = '\0'; /* terminate last-message buffer */
    1252:	80 91 f5 46 	lds	r24, 0x46F5	; 0x8046f5 <_ZZ9serial_RxhE9charIndex>
    1256:	88 2f       	mov	r24, r24
    1258:	90 e0       	ldi	r25, 0x00	; 0
    125a:	8a 50       	subi	r24, 0x0A	; 10
    125c:	99 4b       	sbci	r25, 0xB9	; 185
    125e:	fc 01       	movw	r30, r24
    1260:	10 82       	st	Z, r1
				}

				sb_send_NewLine();
    1262:	0e 94 d3 5a 	call	0xb5a6	; 0xb5a6 <sb_send_NewLine>
    1266:	09 c0       	rjmp	.+18     	; 0x127a <_Z9serial_Rxh+0x128>
			}
			else
			{
				buff->id = SB_INVALID_MESSAGE; /* print help message */
    1268:	80 91 f2 46 	lds	r24, 0x46F2	; 0x8046f2 <__data_end>
    126c:	90 91 f3 46 	lds	r25, 0x46F3	; 0x8046f3 <__data_end+0x1>
    1270:	2f ef       	ldi	r18, 0xFF	; 255
    1272:	3f ef       	ldi	r19, 0xFF	; 255
    1274:	fc 01       	movw	r30, r24
    1276:	21 83       	std	Z+1, r18	; 0x01
    1278:	32 83       	std	Z+2, r19	; 0x02
			}

			charIndex = 0;
    127a:	10 92 f5 46 	sts	0x46F5, r1	; 0x8046f5 <_ZZ9serial_RxhE9charIndex>
			field_len = 0;
    127e:	10 92 2c 47 	sts	0x472C, r1	; 0x80472c <_ZZ9serial_RxhE9field_len>
			msg_ID = LB_MESSAGE_EMPTY;
    1282:	10 92 29 47 	sts	0x4729, r1	; 0x804729 <_ZZ9serial_RxhE6msg_ID>
    1286:	10 92 2a 47 	sts	0x472A, r1	; 0x80472a <_ZZ9serial_RxhE6msg_ID+0x1>

			field_index = 0;
    128a:	10 92 2b 47 	sts	0x472B, r1	; 0x80472b <_ZZ9serial_RxhE11field_index>
			buff = NULL;
    128e:	10 92 f2 46 	sts	0x46F2, r1	; 0x8046f2 <__data_end>
    1292:	10 92 f3 46 	sts	0x46F3, r1	; 0x8046f3 <__data_end+0x1>

			receiving_msg = false;
    1296:	10 92 28 47 	sts	0x4728, r1	; 0x804728 <_ZZ9serial_RxhE13receiving_msg>
			{
				sb_echo_char(rx_char);
			}
		}
	}	
}
    129a:	d4 c1       	rjmp	.+936    	; 0x1644 <_Z9serial_Rxh+0x4f2>
			field_index = 0;
			buff = NULL;

			receiving_msg = false;
		}
		else if(rx_char)
    129c:	8a 85       	ldd	r24, Y+10	; 0x0a
    129e:	88 23       	and	r24, r24
    12a0:	09 f4       	brne	.+2      	; 0x12a4 <_Z9serial_Rxh+0x152>
    12a2:	d0 c1       	rjmp	.+928    	; 0x1644 <_Z9serial_Rxh+0x4f2>
		{
			textBuff[charIndex] = rx_char;  /* hold the characters for re-use */
    12a4:	80 91 f5 46 	lds	r24, 0x46F5	; 0x8046f5 <_ZZ9serial_RxhE9charIndex>
    12a8:	88 2f       	mov	r24, r24
    12aa:	90 e0       	ldi	r25, 0x00	; 0
    12ac:	8a 50       	subi	r24, 0x0A	; 10
    12ae:	99 4b       	sbci	r25, 0xB9	; 185
    12b0:	2a 85       	ldd	r18, Y+10	; 0x0a
    12b2:	fc 01       	movw	r30, r24
    12b4:	20 83       	st	Z, r18

			if(charIndex)
    12b6:	80 91 f5 46 	lds	r24, 0x46F5	; 0x8046f5 <_ZZ9serial_RxhE9charIndex>
    12ba:	88 23       	and	r24, r24
    12bc:	09 f4       	brne	.+2      	; 0x12c0 <_Z9serial_Rxh+0x16e>
    12be:	7c c1       	rjmp	.+760    	; 0x15b8 <_Z9serial_Rxh+0x466>
			{
				if(rx_char == 0x7F)         /* Handle backspace */
    12c0:	8a 85       	ldd	r24, Y+10	; 0x0a
    12c2:	8f 37       	cpi	r24, 0x7F	; 127
    12c4:	09 f0       	breq	.+2      	; 0x12c8 <_Z9serial_Rxh+0x176>
    12c6:	a1 c0       	rjmp	.+322    	; 0x140a <_Z9serial_Rxh+0x2b8>
				{
					charIndex--;
    12c8:	80 91 f5 46 	lds	r24, 0x46F5	; 0x8046f5 <_ZZ9serial_RxhE9charIndex>
    12cc:	81 50       	subi	r24, 0x01	; 1
    12ce:	80 93 f5 46 	sts	0x46F5, r24	; 0x8046f5 <_ZZ9serial_RxhE9charIndex>
					if(field_index == 0)
    12d2:	80 91 2b 47 	lds	r24, 0x472B	; 0x80472b <_ZZ9serial_RxhE11field_index>
    12d6:	88 23       	and	r24, r24
    12d8:	29 f5       	brne	.+74     	; 0x1324 <_Z9serial_Rxh+0x1d2>
					{
						msg_ID -= textBuff[charIndex];
    12da:	20 91 29 47 	lds	r18, 0x4729	; 0x804729 <_ZZ9serial_RxhE6msg_ID>
    12de:	30 91 2a 47 	lds	r19, 0x472A	; 0x80472a <_ZZ9serial_RxhE6msg_ID+0x1>
    12e2:	80 91 f5 46 	lds	r24, 0x46F5	; 0x8046f5 <_ZZ9serial_RxhE9charIndex>
    12e6:	88 2f       	mov	r24, r24
    12e8:	90 e0       	ldi	r25, 0x00	; 0
    12ea:	8a 50       	subi	r24, 0x0A	; 10
    12ec:	99 4b       	sbci	r25, 0xB9	; 185
    12ee:	fc 01       	movw	r30, r24
    12f0:	80 81       	ld	r24, Z
    12f2:	88 2f       	mov	r24, r24
    12f4:	90 e0       	ldi	r25, 0x00	; 0
    12f6:	a9 01       	movw	r20, r18
    12f8:	48 1b       	sub	r20, r24
    12fa:	59 0b       	sbc	r21, r25
    12fc:	ca 01       	movw	r24, r20
    12fe:	80 93 29 47 	sts	0x4729, r24	; 0x804729 <_ZZ9serial_RxhE6msg_ID>
    1302:	90 93 2a 47 	sts	0x472A, r25	; 0x80472a <_ZZ9serial_RxhE6msg_ID+0x1>
						msg_ID /= 10;
    1306:	80 91 29 47 	lds	r24, 0x4729	; 0x804729 <_ZZ9serial_RxhE6msg_ID>
    130a:	90 91 2a 47 	lds	r25, 0x472A	; 0x80472a <_ZZ9serial_RxhE6msg_ID+0x1>
    130e:	2a e0       	ldi	r18, 0x0A	; 10
    1310:	30 e0       	ldi	r19, 0x00	; 0
    1312:	b9 01       	movw	r22, r18
    1314:	0e 94 ee 71 	call	0xe3dc	; 0xe3dc <__divmodhi4>
    1318:	cb 01       	movw	r24, r22
    131a:	80 93 29 47 	sts	0x4729, r24	; 0x804729 <_ZZ9serial_RxhE6msg_ID>
    131e:	90 93 2a 47 	sts	0x472A, r25	; 0x80472a <_ZZ9serial_RxhE6msg_ID+0x1>
    1322:	63 c0       	rjmp	.+198    	; 0x13ea <_Z9serial_Rxh+0x298>
					}
					else if(field_len)
    1324:	80 91 2c 47 	lds	r24, 0x472C	; 0x80472c <_ZZ9serial_RxhE9field_len>
    1328:	88 23       	and	r24, r24
    132a:	11 f1       	breq	.+68     	; 0x1370 <_Z9serial_Rxh+0x21e>
					{
						field_len--;
    132c:	80 91 2c 47 	lds	r24, 0x472C	; 0x80472c <_ZZ9serial_RxhE9field_len>
    1330:	81 50       	subi	r24, 0x01	; 1
    1332:	80 93 2c 47 	sts	0x472C, r24	; 0x80472c <_ZZ9serial_RxhE9field_len>
						buff->fields[field_index - 1][field_len] = '\0';
    1336:	40 91 f2 46 	lds	r20, 0x46F2	; 0x8046f2 <__data_end>
    133a:	50 91 f3 46 	lds	r21, 0x46F3	; 0x8046f3 <__data_end+0x1>
    133e:	80 91 2b 47 	lds	r24, 0x472B	; 0x80472b <_ZZ9serial_RxhE11field_index>
    1342:	88 2f       	mov	r24, r24
    1344:	90 e0       	ldi	r25, 0x00	; 0
    1346:	bc 01       	movw	r22, r24
    1348:	61 50       	subi	r22, 0x01	; 1
    134a:	71 09       	sbc	r23, r1
    134c:	80 91 2c 47 	lds	r24, 0x472C	; 0x80472c <_ZZ9serial_RxhE9field_len>
    1350:	88 2f       	mov	r24, r24
    1352:	90 e0       	ldi	r25, 0x00	; 0
    1354:	e4 e1       	ldi	r30, 0x14	; 20
    1356:	e6 9f       	mul	r30, r22
    1358:	90 01       	movw	r18, r0
    135a:	e7 9f       	mul	r30, r23
    135c:	30 0d       	add	r19, r0
    135e:	11 24       	eor	r1, r1
    1360:	24 0f       	add	r18, r20
    1362:	35 1f       	adc	r19, r21
    1364:	82 0f       	add	r24, r18
    1366:	93 1f       	adc	r25, r19
    1368:	03 96       	adiw	r24, 0x03	; 3
    136a:	fc 01       	movw	r30, r24
    136c:	10 82       	st	Z, r1
    136e:	3d c0       	rjmp	.+122    	; 0x13ea <_Z9serial_Rxh+0x298>
					}
					else if(textBuff[charIndex] == ' ')
    1370:	80 91 f5 46 	lds	r24, 0x46F5	; 0x8046f5 <_ZZ9serial_RxhE9charIndex>
    1374:	88 2f       	mov	r24, r24
    1376:	90 e0       	ldi	r25, 0x00	; 0
    1378:	8a 50       	subi	r24, 0x0A	; 10
    137a:	99 4b       	sbci	r25, 0xB9	; 185
    137c:	fc 01       	movw	r30, r24
    137e:	80 81       	ld	r24, Z
    1380:	80 32       	cpi	r24, 0x20	; 32
    1382:	d9 f4       	brne	.+54     	; 0x13ba <_Z9serial_Rxh+0x268>
					{
						field_index--;
    1384:	80 91 2b 47 	lds	r24, 0x472B	; 0x80472b <_ZZ9serial_RxhE11field_index>
    1388:	81 50       	subi	r24, 0x01	; 1
    138a:	80 93 2b 47 	sts	0x472B, r24	; 0x80472b <_ZZ9serial_RxhE11field_index>
						field_len = strlen(buff->fields[field_index]);
    138e:	20 91 f2 46 	lds	r18, 0x46F2	; 0x8046f2 <__data_end>
    1392:	30 91 f3 46 	lds	r19, 0x46F3	; 0x8046f3 <__data_end+0x1>
    1396:	80 91 2b 47 	lds	r24, 0x472B	; 0x80472b <_ZZ9serial_RxhE11field_index>
    139a:	48 2f       	mov	r20, r24
    139c:	50 e0       	ldi	r21, 0x00	; 0
    139e:	64 e1       	ldi	r22, 0x14	; 20
    13a0:	64 9f       	mul	r22, r20
    13a2:	c0 01       	movw	r24, r0
    13a4:	65 9f       	mul	r22, r21
    13a6:	90 0d       	add	r25, r0
    13a8:	11 24       	eor	r1, r1
    13aa:	03 96       	adiw	r24, 0x03	; 3
    13ac:	82 0f       	add	r24, r18
    13ae:	93 1f       	adc	r25, r19
    13b0:	0e 94 fc 73 	call	0xe7f8	; 0xe7f8 <strlen>
    13b4:	80 93 2c 47 	sts	0x472C, r24	; 0x80472c <_ZZ9serial_RxhE9field_len>
    13b8:	18 c0       	rjmp	.+48     	; 0x13ea <_Z9serial_Rxh+0x298>
					}
					else
					{
						buff->fields[field_index][0] = '\0';
    13ba:	20 91 f2 46 	lds	r18, 0x46F2	; 0x8046f2 <__data_end>
    13be:	30 91 f3 46 	lds	r19, 0x46F3	; 0x8046f3 <__data_end+0x1>
    13c2:	80 91 2b 47 	lds	r24, 0x472B	; 0x80472b <_ZZ9serial_RxhE11field_index>
    13c6:	48 2f       	mov	r20, r24
    13c8:	50 e0       	ldi	r21, 0x00	; 0
    13ca:	64 e1       	ldi	r22, 0x14	; 20
    13cc:	64 9f       	mul	r22, r20
    13ce:	c0 01       	movw	r24, r0
    13d0:	65 9f       	mul	r22, r21
    13d2:	90 0d       	add	r25, r0
    13d4:	11 24       	eor	r1, r1
    13d6:	82 0f       	add	r24, r18
    13d8:	93 1f       	adc	r25, r19
    13da:	03 96       	adiw	r24, 0x03	; 3
    13dc:	fc 01       	movw	r30, r24
    13de:	10 82       	st	Z, r1
						field_index--;
    13e0:	80 91 2b 47 	lds	r24, 0x472B	; 0x80472b <_ZZ9serial_RxhE11field_index>
    13e4:	81 50       	subi	r24, 0x01	; 1
    13e6:	80 93 2b 47 	sts	0x472B, r24	; 0x80472b <_ZZ9serial_RxhE11field_index>
					}

					textBuff[charIndex] = '\0'; /* replace deleted char with null */
    13ea:	80 91 f5 46 	lds	r24, 0x46F5	; 0x8046f5 <_ZZ9serial_RxhE9charIndex>
    13ee:	88 2f       	mov	r24, r24
    13f0:	90 e0       	ldi	r25, 0x00	; 0
    13f2:	8a 50       	subi	r24, 0x0A	; 10
    13f4:	99 4b       	sbci	r25, 0xB9	; 185
    13f6:	fc 01       	movw	r30, r24
    13f8:	10 82       	st	Z, r1

					if(charIndex == 0)
    13fa:	80 91 f5 46 	lds	r24, 0x46F5	; 0x8046f5 <_ZZ9serial_RxhE9charIndex>
    13fe:	88 23       	and	r24, r24
    1400:	09 f0       	breq	.+2      	; 0x1404 <_Z9serial_Rxh+0x2b2>
    1402:	1a c1       	rjmp	.+564    	; 0x1638 <_Z9serial_Rxh+0x4e6>
					{
						receiving_msg = false;
    1404:	10 92 28 47 	sts	0x4728, r1	; 0x804728 <_ZZ9serial_RxhE13receiving_msg>
    1408:	17 c1       	rjmp	.+558    	; 0x1638 <_Z9serial_Rxh+0x4e6>
					}
				}
				else
				{
					if(rx_char == ' ')
    140a:	8a 85       	ldd	r24, Y+10	; 0x0a
    140c:	80 32       	cpi	r24, 0x20	; 32
    140e:	09 f0       	breq	.+2      	; 0x1412 <_Z9serial_Rxh+0x2c0>
    1410:	55 c0       	rjmp	.+170    	; 0x14bc <_Z9serial_Rxh+0x36a>
					{
						if((textBuff[charIndex - 1] == ' ') || ((field_index + 1) >= LINKBUS_MAX_MSG_NUMBER_OF_FIELDS))
    1412:	80 91 f5 46 	lds	r24, 0x46F5	; 0x8046f5 <_ZZ9serial_RxhE9charIndex>
    1416:	88 2f       	mov	r24, r24
    1418:	90 e0       	ldi	r25, 0x00	; 0
    141a:	01 97       	sbiw	r24, 0x01	; 1
    141c:	8a 50       	subi	r24, 0x0A	; 10
    141e:	99 4b       	sbci	r25, 0xB9	; 185
    1420:	fc 01       	movw	r30, r24
    1422:	80 81       	ld	r24, Z
    1424:	80 32       	cpi	r24, 0x20	; 32
    1426:	39 f0       	breq	.+14     	; 0x1436 <_Z9serial_Rxh+0x2e4>
    1428:	80 91 2b 47 	lds	r24, 0x472B	; 0x80472b <_ZZ9serial_RxhE11field_index>
    142c:	88 2f       	mov	r24, r24
    142e:	90 e0       	ldi	r25, 0x00	; 0
    1430:	01 96       	adiw	r24, 0x01	; 1
    1432:	03 97       	sbiw	r24, 0x03	; 3
    1434:	14 f0       	brlt	.+4      	; 0x143a <_Z9serial_Rxh+0x2e8>
						{
							rx_char = '\0';
    1436:	1a 86       	std	Y+10, r1	; 0x0a
    1438:	ff c0       	rjmp	.+510    	; 0x1638 <_Z9serial_Rxh+0x4e6>
						}
						else
						{
							if(field_index > 0)
    143a:	80 91 2b 47 	lds	r24, 0x472B	; 0x80472b <_ZZ9serial_RxhE11field_index>
    143e:	88 23       	and	r24, r24
    1440:	e1 f0       	breq	.+56     	; 0x147a <_Z9serial_Rxh+0x328>
							{
								buff->fields[field_index - 1][field_len] = '\0';
    1442:	40 91 f2 46 	lds	r20, 0x46F2	; 0x8046f2 <__data_end>
    1446:	50 91 f3 46 	lds	r21, 0x46F3	; 0x8046f3 <__data_end+0x1>
    144a:	80 91 2b 47 	lds	r24, 0x472B	; 0x80472b <_ZZ9serial_RxhE11field_index>
    144e:	88 2f       	mov	r24, r24
    1450:	90 e0       	ldi	r25, 0x00	; 0
    1452:	bc 01       	movw	r22, r24
    1454:	61 50       	subi	r22, 0x01	; 1
    1456:	71 09       	sbc	r23, r1
    1458:	80 91 2c 47 	lds	r24, 0x472C	; 0x80472c <_ZZ9serial_RxhE9field_len>
    145c:	88 2f       	mov	r24, r24
    145e:	90 e0       	ldi	r25, 0x00	; 0
    1460:	e4 e1       	ldi	r30, 0x14	; 20
    1462:	e6 9f       	mul	r30, r22
    1464:	90 01       	movw	r18, r0
    1466:	e7 9f       	mul	r30, r23
    1468:	30 0d       	add	r19, r0
    146a:	11 24       	eor	r1, r1
    146c:	24 0f       	add	r18, r20
    146e:	35 1f       	adc	r19, r21
    1470:	82 0f       	add	r24, r18
    1472:	93 1f       	adc	r25, r19
    1474:	03 96       	adiw	r24, 0x03	; 3
    1476:	fc 01       	movw	r30, r24
    1478:	10 82       	st	Z, r1
							}

							field_index++;
    147a:	80 91 2b 47 	lds	r24, 0x472B	; 0x80472b <_ZZ9serial_RxhE11field_index>
    147e:	8f 5f       	subi	r24, 0xFF	; 255
    1480:	80 93 2b 47 	sts	0x472B, r24	; 0x80472b <_ZZ9serial_RxhE11field_index>
							field_len = 0;
    1484:	10 92 2c 47 	sts	0x472C, r1	; 0x80472c <_ZZ9serial_RxhE9field_len>
							charIndex = MIN(charIndex + 1, (LINKBUS_MAX_MSG_LENGTH - 1));
    1488:	80 91 f5 46 	lds	r24, 0x46F5	; 0x8046f5 <_ZZ9serial_RxhE9charIndex>
    148c:	88 2f       	mov	r24, r24
    148e:	90 e0       	ldi	r25, 0x00	; 0
    1490:	01 96       	adiw	r24, 0x01	; 1
    1492:	8a 83       	std	Y+2, r24	; 0x02
    1494:	9b 83       	std	Y+3, r25	; 0x03
    1496:	81 e3       	ldi	r24, 0x31	; 49
    1498:	90 e0       	ldi	r25, 0x00	; 0
    149a:	8c 83       	std	Y+4, r24	; 0x04
    149c:	9d 83       	std	Y+5, r25	; 0x05
    149e:	2a 81       	ldd	r18, Y+2	; 0x02
    14a0:	3b 81       	ldd	r19, Y+3	; 0x03
    14a2:	8c 81       	ldd	r24, Y+4	; 0x04
    14a4:	9d 81       	ldd	r25, Y+5	; 0x05
    14a6:	28 17       	cp	r18, r24
    14a8:	39 07       	cpc	r19, r25
    14aa:	1c f4       	brge	.+6      	; 0x14b2 <_Z9serial_Rxh+0x360>
    14ac:	8a 81       	ldd	r24, Y+2	; 0x02
    14ae:	9b 81       	ldd	r25, Y+3	; 0x03
    14b0:	02 c0       	rjmp	.+4      	; 0x14b6 <_Z9serial_Rxh+0x364>
    14b2:	8c 81       	ldd	r24, Y+4	; 0x04
    14b4:	9d 81       	ldd	r25, Y+5	; 0x05
    14b6:	80 93 f5 46 	sts	0x46F5, r24	; 0x8046f5 <_ZZ9serial_RxhE9charIndex>
    14ba:	be c0       	rjmp	.+380    	; 0x1638 <_Z9serial_Rxh+0x4e6>
						}
					}
					else if(field_len < LINKBUS_MAX_MSG_FIELD_LENGTH)
    14bc:	80 91 2c 47 	lds	r24, 0x472C	; 0x80472c <_ZZ9serial_RxhE9field_len>
    14c0:	85 31       	cpi	r24, 0x15	; 21
    14c2:	08 f0       	brcs	.+2      	; 0x14c6 <_Z9serial_Rxh+0x374>
    14c4:	77 c0       	rjmp	.+238    	; 0x15b4 <_Z9serial_Rxh+0x462>
					{
						if(field_index == 0)    /* message ID received */
    14c6:	80 91 2b 47 	lds	r24, 0x472B	; 0x80472b <_ZZ9serial_RxhE11field_index>
    14ca:	88 23       	and	r24, r24
    14cc:	e1 f4       	brne	.+56     	; 0x1506 <_Z9serial_Rxh+0x3b4>
						{
							msg_ID = msg_ID * 10 + rx_char;
    14ce:	80 91 29 47 	lds	r24, 0x4729	; 0x804729 <_ZZ9serial_RxhE6msg_ID>
    14d2:	90 91 2a 47 	lds	r25, 0x472A	; 0x80472a <_ZZ9serial_RxhE6msg_ID+0x1>
    14d6:	88 0f       	add	r24, r24
    14d8:	99 1f       	adc	r25, r25
    14da:	9c 01       	movw	r18, r24
    14dc:	22 0f       	add	r18, r18
    14de:	33 1f       	adc	r19, r19
    14e0:	22 0f       	add	r18, r18
    14e2:	33 1f       	adc	r19, r19
    14e4:	28 0f       	add	r18, r24
    14e6:	39 1f       	adc	r19, r25
    14e8:	8a 85       	ldd	r24, Y+10	; 0x0a
    14ea:	88 2f       	mov	r24, r24
    14ec:	90 e0       	ldi	r25, 0x00	; 0
    14ee:	82 0f       	add	r24, r18
    14f0:	93 1f       	adc	r25, r19
    14f2:	80 93 29 47 	sts	0x4729, r24	; 0x804729 <_ZZ9serial_RxhE6msg_ID>
    14f6:	90 93 2a 47 	sts	0x472A, r25	; 0x80472a <_ZZ9serial_RxhE6msg_ID+0x1>
							field_len++;
    14fa:	80 91 2c 47 	lds	r24, 0x472C	; 0x80472c <_ZZ9serial_RxhE9field_len>
    14fe:	8f 5f       	subi	r24, 0xFF	; 255
    1500:	80 93 2c 47 	sts	0x472C, r24	; 0x80472c <_ZZ9serial_RxhE9field_len>
    1504:	3d c0       	rjmp	.+122    	; 0x1580 <_Z9serial_Rxh+0x42e>
						}
						else
						{
							buff->fields[field_index - 1][field_len++] = rx_char;
    1506:	40 91 f2 46 	lds	r20, 0x46F2	; 0x8046f2 <__data_end>
    150a:	50 91 f3 46 	lds	r21, 0x46F3	; 0x8046f3 <__data_end+0x1>
    150e:	80 91 2b 47 	lds	r24, 0x472B	; 0x80472b <_ZZ9serial_RxhE11field_index>
    1512:	88 2f       	mov	r24, r24
    1514:	90 e0       	ldi	r25, 0x00	; 0
    1516:	bc 01       	movw	r22, r24
    1518:	61 50       	subi	r22, 0x01	; 1
    151a:	71 09       	sbc	r23, r1
    151c:	80 91 2c 47 	lds	r24, 0x472C	; 0x80472c <_ZZ9serial_RxhE9field_len>
    1520:	91 e0       	ldi	r25, 0x01	; 1
    1522:	98 0f       	add	r25, r24
    1524:	90 93 2c 47 	sts	0x472C, r25	; 0x80472c <_ZZ9serial_RxhE9field_len>
    1528:	88 2f       	mov	r24, r24
    152a:	90 e0       	ldi	r25, 0x00	; 0
    152c:	e4 e1       	ldi	r30, 0x14	; 20
    152e:	e6 9f       	mul	r30, r22
    1530:	90 01       	movw	r18, r0
    1532:	e7 9f       	mul	r30, r23
    1534:	30 0d       	add	r19, r0
    1536:	11 24       	eor	r1, r1
    1538:	24 0f       	add	r18, r20
    153a:	35 1f       	adc	r19, r21
    153c:	82 0f       	add	r24, r18
    153e:	93 1f       	adc	r25, r19
    1540:	03 96       	adiw	r24, 0x03	; 3
    1542:	2a 85       	ldd	r18, Y+10	; 0x0a
    1544:	fc 01       	movw	r30, r24
    1546:	20 83       	st	Z, r18
							buff->fields[field_index - 1][field_len] = '\0';
    1548:	40 91 f2 46 	lds	r20, 0x46F2	; 0x8046f2 <__data_end>
    154c:	50 91 f3 46 	lds	r21, 0x46F3	; 0x8046f3 <__data_end+0x1>
    1550:	80 91 2b 47 	lds	r24, 0x472B	; 0x80472b <_ZZ9serial_RxhE11field_index>
    1554:	88 2f       	mov	r24, r24
    1556:	90 e0       	ldi	r25, 0x00	; 0
    1558:	bc 01       	movw	r22, r24
    155a:	61 50       	subi	r22, 0x01	; 1
    155c:	71 09       	sbc	r23, r1
    155e:	80 91 2c 47 	lds	r24, 0x472C	; 0x80472c <_ZZ9serial_RxhE9field_len>
    1562:	88 2f       	mov	r24, r24
    1564:	90 e0       	ldi	r25, 0x00	; 0
    1566:	e4 e1       	ldi	r30, 0x14	; 20
    1568:	e6 9f       	mul	r30, r22
    156a:	90 01       	movw	r18, r0
    156c:	e7 9f       	mul	r30, r23
    156e:	30 0d       	add	r19, r0
    1570:	11 24       	eor	r1, r1
    1572:	24 0f       	add	r18, r20
    1574:	35 1f       	adc	r19, r21
    1576:	82 0f       	add	r24, r18
    1578:	93 1f       	adc	r25, r19
    157a:	03 96       	adiw	r24, 0x03	; 3
    157c:	fc 01       	movw	r30, r24
    157e:	10 82       	st	Z, r1
						}

						charIndex = MIN(charIndex + 1, (LINKBUS_MAX_MSG_LENGTH - 1));
    1580:	80 91 f5 46 	lds	r24, 0x46F5	; 0x8046f5 <_ZZ9serial_RxhE9charIndex>
    1584:	88 2f       	mov	r24, r24
    1586:	90 e0       	ldi	r25, 0x00	; 0
    1588:	01 96       	adiw	r24, 0x01	; 1
    158a:	8e 83       	std	Y+6, r24	; 0x06
    158c:	9f 83       	std	Y+7, r25	; 0x07
    158e:	81 e3       	ldi	r24, 0x31	; 49
    1590:	90 e0       	ldi	r25, 0x00	; 0
    1592:	88 87       	std	Y+8, r24	; 0x08
    1594:	99 87       	std	Y+9, r25	; 0x09
    1596:	2e 81       	ldd	r18, Y+6	; 0x06
    1598:	3f 81       	ldd	r19, Y+7	; 0x07
    159a:	88 85       	ldd	r24, Y+8	; 0x08
    159c:	99 85       	ldd	r25, Y+9	; 0x09
    159e:	28 17       	cp	r18, r24
    15a0:	39 07       	cpc	r19, r25
    15a2:	1c f4       	brge	.+6      	; 0x15aa <_Z9serial_Rxh+0x458>
    15a4:	8e 81       	ldd	r24, Y+6	; 0x06
    15a6:	9f 81       	ldd	r25, Y+7	; 0x07
    15a8:	02 c0       	rjmp	.+4      	; 0x15ae <_Z9serial_Rxh+0x45c>
    15aa:	88 85       	ldd	r24, Y+8	; 0x08
    15ac:	99 85       	ldd	r25, Y+9	; 0x09
    15ae:	80 93 f5 46 	sts	0x46F5, r24	; 0x8046f5 <_ZZ9serial_RxhE9charIndex>
    15b2:	42 c0       	rjmp	.+132    	; 0x1638 <_Z9serial_Rxh+0x4e6>
					}
					else
					{
						rx_char = '\0';
    15b4:	1a 86       	std	Y+10, r1	; 0x0a
    15b6:	40 c0       	rjmp	.+128    	; 0x1638 <_Z9serial_Rxh+0x4e6>
					}
				}
			}
			else
			{
				if(rx_char == 0x7F) /* Handle Backspace */
    15b8:	8a 85       	ldd	r24, Y+10	; 0x0a
    15ba:	8f 37       	cpi	r24, 0x7F	; 127
    15bc:	69 f4       	brne	.+26     	; 0x15d8 <_Z9serial_Rxh+0x486>
				{
					if(msg_ID <= 0)
    15be:	80 91 29 47 	lds	r24, 0x4729	; 0x804729 <_ZZ9serial_RxhE6msg_ID>
    15c2:	90 91 2a 47 	lds	r25, 0x472A	; 0x80472a <_ZZ9serial_RxhE6msg_ID+0x1>
    15c6:	18 16       	cp	r1, r24
    15c8:	19 06       	cpc	r1, r25
    15ca:	0c f0       	brlt	.+2      	; 0x15ce <_Z9serial_Rxh+0x47c>
					{
						rx_char = '\0';
    15cc:	1a 86       	std	Y+10, r1	; 0x0a
					}

					msg_ID = 0;
    15ce:	10 92 29 47 	sts	0x4729, r1	; 0x804729 <_ZZ9serial_RxhE6msg_ID>
    15d2:	10 92 2a 47 	sts	0x472A, r1	; 0x80472a <_ZZ9serial_RxhE6msg_ID+0x1>
    15d6:	30 c0       	rjmp	.+96     	; 0x1638 <_Z9serial_Rxh+0x4e6>
				}
				else if(rx_char == ' ') /* Handle Space */
    15d8:	8a 85       	ldd	r24, Y+10	; 0x0a
    15da:	80 32       	cpi	r24, 0x20	; 32
    15dc:	11 f4       	brne	.+4      	; 0x15e2 <_Z9serial_Rxh+0x490>
				{
					rx_char = '\0';
    15de:	1a 86       	std	Y+10, r1	; 0x0a
    15e0:	2b c0       	rjmp	.+86     	; 0x1638 <_Z9serial_Rxh+0x4e6>
				}
				else                    /* start of new message */
				{
					uint8_t i;
					field_index = 0;
    15e2:	10 92 2b 47 	sts	0x472B, r1	; 0x80472b <_ZZ9serial_RxhE11field_index>
					msg_ID = rx_char;
    15e6:	8a 85       	ldd	r24, Y+10	; 0x0a
    15e8:	88 2f       	mov	r24, r24
    15ea:	90 e0       	ldi	r25, 0x00	; 0
    15ec:	80 93 29 47 	sts	0x4729, r24	; 0x804729 <_ZZ9serial_RxhE6msg_ID>
    15f0:	90 93 2a 47 	sts	0x472A, r25	; 0x80472a <_ZZ9serial_RxhE6msg_ID+0x1>

					/* Empty the field buffers */
					for(i = 0; i < LINKBUS_MAX_MSG_NUMBER_OF_FIELDS; i++)
    15f4:	19 82       	std	Y+1, r1	; 0x01
    15f6:	89 81       	ldd	r24, Y+1	; 0x01
    15f8:	83 30       	cpi	r24, 0x03	; 3
    15fa:	b0 f4       	brcc	.+44     	; 0x1628 <_Z9serial_Rxh+0x4d6>
					{
						buff->fields[i][0] = '\0';
    15fc:	20 91 f2 46 	lds	r18, 0x46F2	; 0x8046f2 <__data_end>
    1600:	30 91 f3 46 	lds	r19, 0x46F3	; 0x8046f3 <__data_end+0x1>
    1604:	89 81       	ldd	r24, Y+1	; 0x01
    1606:	48 2f       	mov	r20, r24
    1608:	50 e0       	ldi	r21, 0x00	; 0
    160a:	64 e1       	ldi	r22, 0x14	; 20
    160c:	64 9f       	mul	r22, r20
    160e:	c0 01       	movw	r24, r0
    1610:	65 9f       	mul	r22, r21
    1612:	90 0d       	add	r25, r0
    1614:	11 24       	eor	r1, r1
    1616:	82 0f       	add	r24, r18
    1618:	93 1f       	adc	r25, r19
    161a:	03 96       	adiw	r24, 0x03	; 3
    161c:	fc 01       	movw	r30, r24
    161e:	10 82       	st	Z, r1
					uint8_t i;
					field_index = 0;
					msg_ID = rx_char;

					/* Empty the field buffers */
					for(i = 0; i < LINKBUS_MAX_MSG_NUMBER_OF_FIELDS; i++)
    1620:	89 81       	ldd	r24, Y+1	; 0x01
    1622:	8f 5f       	subi	r24, 0xFF	; 255
    1624:	89 83       	std	Y+1, r24	; 0x01
    1626:	e7 cf       	rjmp	.-50     	; 0x15f6 <_Z9serial_Rxh+0x4a4>
					{
						buff->fields[i][0] = '\0';
					}

					receiving_msg = true;
    1628:	81 e0       	ldi	r24, 0x01	; 1
    162a:	80 93 28 47 	sts	0x4728, r24	; 0x804728 <_ZZ9serial_RxhE13receiving_msg>
					charIndex++;
    162e:	80 91 f5 46 	lds	r24, 0x46F5	; 0x8046f5 <_ZZ9serial_RxhE9charIndex>
    1632:	8f 5f       	subi	r24, 0xFF	; 255
    1634:	80 93 f5 46 	sts	0x46F5, r24	; 0x8046f5 <_ZZ9serial_RxhE9charIndex>
				}
			}

			if(rx_char)
    1638:	8a 85       	ldd	r24, Y+10	; 0x0a
    163a:	88 23       	and	r24, r24
    163c:	19 f0       	breq	.+6      	; 0x1644 <_Z9serial_Rxh+0x4f2>
			{
				sb_echo_char(rx_char);
    163e:	8a 85       	ldd	r24, Y+10	; 0x0a
    1640:	0e 94 e4 5a 	call	0xb5c8	; 0xb5c8 <sb_echo_char>
			}
		}
	}	
}
    1644:	00 00       	nop
    1646:	2a 96       	adiw	r28, 0x0a	; 10
    1648:	cd bf       	out	0x3d, r28	; 61
    164a:	de bf       	out	0x3e, r29	; 62
    164c:	df 91       	pop	r29
    164e:	cf 91       	pop	r28
    1650:	08 95       	ret

00001652 <__vector_20>:

/**

*/
ISR(USART0_DRE_vect)
{
    1652:	1f 92       	push	r1
    1654:	0f 92       	push	r0
    1656:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    165a:	0f 92       	push	r0
    165c:	11 24       	eor	r1, r1
    165e:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    1662:	0f 92       	push	r0
    1664:	2f 93       	push	r18
    1666:	3f 93       	push	r19
    1668:	4f 93       	push	r20
    166a:	5f 93       	push	r21
    166c:	6f 93       	push	r22
    166e:	7f 93       	push	r23
    1670:	8f 93       	push	r24
    1672:	9f 93       	push	r25
    1674:	af 93       	push	r26
    1676:	bf 93       	push	r27
    1678:	ef 93       	push	r30
    167a:	ff 93       	push	r31
    167c:	cf 93       	push	r28
    167e:	df 93       	push	r29
    1680:	cd b7       	in	r28, 0x3d	; 61
    1682:	de b7       	in	r29, 0x3e	; 62
	if(g_linkbus_usart_number == USART_0)
    1684:	80 91 22 40 	lds	r24, 0x4022	; 0x804022 <g_linkbus_usart_number>
    1688:	88 23       	and	r24, r24
    168a:	09 f0       	breq	.+2      	; 0x168e <__vector_20+0x3c>
    168c:	45 c0       	rjmp	.+138    	; 0x1718 <__vector_20+0xc6>
	{
		static LinkbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
    168e:	80 91 2d 47 	lds	r24, 0x472D	; 0x80472d <_ZZ11__vector_20E4buff>
    1692:	90 91 2e 47 	lds	r25, 0x472E	; 0x80472e <_ZZ11__vector_20E4buff+0x1>
    1696:	89 2b       	or	r24, r25
    1698:	31 f4       	brne	.+12     	; 0x16a6 <__vector_20+0x54>
		{
			buff = nextFullLBTxBuffer();
    169a:	0e 94 55 4f 	call	0x9eaa	; 0x9eaa <_Z18nextFullLBTxBufferv>
    169e:	80 93 2d 47 	sts	0x472D, r24	; 0x80472d <_ZZ11__vector_20E4buff>
    16a2:	90 93 2e 47 	sts	0x472E, r25	; 0x80472e <_ZZ11__vector_20E4buff+0x1>
		}

		if((*buff)[charIndex])
    16a6:	20 91 2d 47 	lds	r18, 0x472D	; 0x80472d <_ZZ11__vector_20E4buff>
    16aa:	30 91 2e 47 	lds	r19, 0x472E	; 0x80472e <_ZZ11__vector_20E4buff+0x1>
    16ae:	80 91 2f 47 	lds	r24, 0x472F	; 0x80472f <_ZZ11__vector_20E9charIndex>
    16b2:	88 2f       	mov	r24, r24
    16b4:	90 e0       	ldi	r25, 0x00	; 0
    16b6:	82 0f       	add	r24, r18
    16b8:	93 1f       	adc	r25, r19
    16ba:	fc 01       	movw	r30, r24
    16bc:	80 81       	ld	r24, Z
    16be:	88 23       	and	r24, r24
    16c0:	a9 f0       	breq	.+42     	; 0x16ec <__vector_20+0x9a>
		{
			/* Put data into buffer, sends the data */
			USART0.TXDATAL = (*buff)[charIndex++];
    16c2:	80 e0       	ldi	r24, 0x00	; 0
    16c4:	98 e0       	ldi	r25, 0x08	; 8
    16c6:	40 91 2d 47 	lds	r20, 0x472D	; 0x80472d <_ZZ11__vector_20E4buff>
    16ca:	50 91 2e 47 	lds	r21, 0x472E	; 0x80472e <_ZZ11__vector_20E4buff+0x1>
    16ce:	20 91 2f 47 	lds	r18, 0x472F	; 0x80472f <_ZZ11__vector_20E9charIndex>
    16d2:	31 e0       	ldi	r19, 0x01	; 1
    16d4:	32 0f       	add	r19, r18
    16d6:	30 93 2f 47 	sts	0x472F, r19	; 0x80472f <_ZZ11__vector_20E9charIndex>
    16da:	22 2f       	mov	r18, r18
    16dc:	30 e0       	ldi	r19, 0x00	; 0
    16de:	24 0f       	add	r18, r20
    16e0:	35 1f       	adc	r19, r21
    16e2:	f9 01       	movw	r30, r18
    16e4:	20 81       	ld	r18, Z
    16e6:	fc 01       	movw	r30, r24
    16e8:	22 83       	std	Z+2, r18	; 0x02
    16ea:	16 c0       	rjmp	.+44     	; 0x1718 <__vector_20+0xc6>
		}
		else
		{
			charIndex = 0;
    16ec:	10 92 2f 47 	sts	0x472F, r1	; 0x80472f <_ZZ11__vector_20E9charIndex>
			(*buff)[0] = '\0';
    16f0:	80 91 2d 47 	lds	r24, 0x472D	; 0x80472d <_ZZ11__vector_20E4buff>
    16f4:	90 91 2e 47 	lds	r25, 0x472E	; 0x80472e <_ZZ11__vector_20E4buff+0x1>
    16f8:	fc 01       	movw	r30, r24
    16fa:	10 82       	st	Z, r1
			buff = nextFullLBTxBuffer();
    16fc:	0e 94 55 4f 	call	0x9eaa	; 0x9eaa <_Z18nextFullLBTxBufferv>
    1700:	80 93 2d 47 	sts	0x472D, r24	; 0x80472d <_ZZ11__vector_20E4buff>
    1704:	90 93 2e 47 	sts	0x472E, r25	; 0x80472e <_ZZ11__vector_20E4buff+0x1>
			if(!buff)
    1708:	80 91 2d 47 	lds	r24, 0x472D	; 0x80472d <_ZZ11__vector_20E4buff>
    170c:	90 91 2e 47 	lds	r25, 0x472E	; 0x80472e <_ZZ11__vector_20E4buff+0x1>
    1710:	89 2b       	or	r24, r25
    1712:	11 f4       	brne	.+4      	; 0x1718 <__vector_20+0xc6>
			{
				linkbus_end_tx();
    1714:	0e 94 9a 50 	call	0xa134	; 0xa134 <_Z14linkbus_end_txv>
			}
		}
	}
	
	if(g_serialbus_usart_number == USART_0)
    1718:	80 91 25 40 	lds	r24, 0x4025	; 0x804025 <g_serialbus_usart_number>
    171c:	88 23       	and	r24, r24
    171e:	09 f0       	breq	.+2      	; 0x1722 <__vector_20+0xd0>
    1720:	45 c0       	rjmp	.+138    	; 0x17ac <__vector_20+0x15a>
	{
		static SerialbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
    1722:	80 91 30 47 	lds	r24, 0x4730	; 0x804730 <_ZZ11__vector_20E4buff_0>
    1726:	90 91 31 47 	lds	r25, 0x4731	; 0x804731 <_ZZ11__vector_20E4buff_0+0x1>
    172a:	89 2b       	or	r24, r25
    172c:	31 f4       	brne	.+12     	; 0x173a <__vector_20+0xe8>
		{
			buff = nextFullSBTxBuffer();
    172e:	0e 94 4c 58 	call	0xb098	; 0xb098 <nextFullSBTxBuffer>
    1732:	80 93 30 47 	sts	0x4730, r24	; 0x804730 <_ZZ11__vector_20E4buff_0>
    1736:	90 93 31 47 	sts	0x4731, r25	; 0x804731 <_ZZ11__vector_20E4buff_0+0x1>
		}

		if((*buff)[charIndex])
    173a:	20 91 30 47 	lds	r18, 0x4730	; 0x804730 <_ZZ11__vector_20E4buff_0>
    173e:	30 91 31 47 	lds	r19, 0x4731	; 0x804731 <_ZZ11__vector_20E4buff_0+0x1>
    1742:	80 91 32 47 	lds	r24, 0x4732	; 0x804732 <_ZZ11__vector_20E9charIndex_0>
    1746:	88 2f       	mov	r24, r24
    1748:	90 e0       	ldi	r25, 0x00	; 0
    174a:	82 0f       	add	r24, r18
    174c:	93 1f       	adc	r25, r19
    174e:	fc 01       	movw	r30, r24
    1750:	80 81       	ld	r24, Z
    1752:	88 23       	and	r24, r24
    1754:	a9 f0       	breq	.+42     	; 0x1780 <__vector_20+0x12e>
		{
			/* Put data into buffer, sends the data */
			USART0.TXDATAL = (*buff)[charIndex++];
    1756:	80 e0       	ldi	r24, 0x00	; 0
    1758:	98 e0       	ldi	r25, 0x08	; 8
    175a:	40 91 30 47 	lds	r20, 0x4730	; 0x804730 <_ZZ11__vector_20E4buff_0>
    175e:	50 91 31 47 	lds	r21, 0x4731	; 0x804731 <_ZZ11__vector_20E4buff_0+0x1>
    1762:	20 91 32 47 	lds	r18, 0x4732	; 0x804732 <_ZZ11__vector_20E9charIndex_0>
    1766:	31 e0       	ldi	r19, 0x01	; 1
    1768:	32 0f       	add	r19, r18
    176a:	30 93 32 47 	sts	0x4732, r19	; 0x804732 <_ZZ11__vector_20E9charIndex_0>
    176e:	22 2f       	mov	r18, r18
    1770:	30 e0       	ldi	r19, 0x00	; 0
    1772:	24 0f       	add	r18, r20
    1774:	35 1f       	adc	r19, r21
    1776:	f9 01       	movw	r30, r18
    1778:	20 81       	ld	r18, Z
    177a:	fc 01       	movw	r30, r24
    177c:	22 83       	std	Z+2, r18	; 0x02
			{
				serialbus_end_tx();
			}
		}
	}
}
    177e:	16 c0       	rjmp	.+44     	; 0x17ac <__vector_20+0x15a>
			/* Put data into buffer, sends the data */
			USART0.TXDATAL = (*buff)[charIndex++];
		}
		else
		{
			charIndex = 0;
    1780:	10 92 32 47 	sts	0x4732, r1	; 0x804732 <_ZZ11__vector_20E9charIndex_0>
			(*buff)[0] = '\0';
    1784:	80 91 30 47 	lds	r24, 0x4730	; 0x804730 <_ZZ11__vector_20E4buff_0>
    1788:	90 91 31 47 	lds	r25, 0x4731	; 0x804731 <_ZZ11__vector_20E4buff_0+0x1>
    178c:	fc 01       	movw	r30, r24
    178e:	10 82       	st	Z, r1
			buff = nextFullSBTxBuffer();
    1790:	0e 94 4c 58 	call	0xb098	; 0xb098 <nextFullSBTxBuffer>
    1794:	80 93 30 47 	sts	0x4730, r24	; 0x804730 <_ZZ11__vector_20E4buff_0>
    1798:	90 93 31 47 	sts	0x4731, r25	; 0x804731 <_ZZ11__vector_20E4buff_0+0x1>
			if(!buff)
    179c:	80 91 30 47 	lds	r24, 0x4730	; 0x804730 <_ZZ11__vector_20E4buff_0>
    17a0:	90 91 31 47 	lds	r25, 0x4731	; 0x804731 <_ZZ11__vector_20E4buff_0+0x1>
    17a4:	89 2b       	or	r24, r25
    17a6:	11 f4       	brne	.+4      	; 0x17ac <__vector_20+0x15a>
			{
				serialbus_end_tx();
    17a8:	0e 94 a1 59 	call	0xb342	; 0xb342 <serialbus_end_tx>
			}
		}
	}
}
    17ac:	00 00       	nop
    17ae:	df 91       	pop	r29
    17b0:	cf 91       	pop	r28
    17b2:	ff 91       	pop	r31
    17b4:	ef 91       	pop	r30
    17b6:	bf 91       	pop	r27
    17b8:	af 91       	pop	r26
    17ba:	9f 91       	pop	r25
    17bc:	8f 91       	pop	r24
    17be:	7f 91       	pop	r23
    17c0:	6f 91       	pop	r22
    17c2:	5f 91       	pop	r21
    17c4:	4f 91       	pop	r20
    17c6:	3f 91       	pop	r19
    17c8:	2f 91       	pop	r18
    17ca:	0f 90       	pop	r0
    17cc:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    17d0:	0f 90       	pop	r0
    17d2:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    17d6:	0f 90       	pop	r0
    17d8:	1f 90       	pop	r1
    17da:	18 95       	reti

000017dc <__vector_56>:

/**

*/
ISR(USART4_DRE_vect)
{
    17dc:	1f 92       	push	r1
    17de:	0f 92       	push	r0
    17e0:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    17e4:	0f 92       	push	r0
    17e6:	11 24       	eor	r1, r1
    17e8:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    17ec:	0f 92       	push	r0
    17ee:	2f 93       	push	r18
    17f0:	3f 93       	push	r19
    17f2:	4f 93       	push	r20
    17f4:	5f 93       	push	r21
    17f6:	6f 93       	push	r22
    17f8:	7f 93       	push	r23
    17fa:	8f 93       	push	r24
    17fc:	9f 93       	push	r25
    17fe:	af 93       	push	r26
    1800:	bf 93       	push	r27
    1802:	ef 93       	push	r30
    1804:	ff 93       	push	r31
    1806:	cf 93       	push	r28
    1808:	df 93       	push	r29
    180a:	cd b7       	in	r28, 0x3d	; 61
    180c:	de b7       	in	r29, 0x3e	; 62
	if(g_linkbus_usart_number == USART_4)
    180e:	80 91 22 40 	lds	r24, 0x4022	; 0x804022 <g_linkbus_usart_number>
    1812:	84 30       	cpi	r24, 0x04	; 4
    1814:	09 f0       	breq	.+2      	; 0x1818 <__vector_56+0x3c>
    1816:	45 c0       	rjmp	.+138    	; 0x18a2 <__vector_56+0xc6>
	{
		static LinkbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
    1818:	80 91 33 47 	lds	r24, 0x4733	; 0x804733 <_ZZ11__vector_56E4buff>
    181c:	90 91 34 47 	lds	r25, 0x4734	; 0x804734 <_ZZ11__vector_56E4buff+0x1>
    1820:	89 2b       	or	r24, r25
    1822:	31 f4       	brne	.+12     	; 0x1830 <__vector_56+0x54>
		{
			buff = nextFullLBTxBuffer();
    1824:	0e 94 55 4f 	call	0x9eaa	; 0x9eaa <_Z18nextFullLBTxBufferv>
    1828:	80 93 33 47 	sts	0x4733, r24	; 0x804733 <_ZZ11__vector_56E4buff>
    182c:	90 93 34 47 	sts	0x4734, r25	; 0x804734 <_ZZ11__vector_56E4buff+0x1>
		}

		if((*buff)[charIndex])
    1830:	20 91 33 47 	lds	r18, 0x4733	; 0x804733 <_ZZ11__vector_56E4buff>
    1834:	30 91 34 47 	lds	r19, 0x4734	; 0x804734 <_ZZ11__vector_56E4buff+0x1>
    1838:	80 91 35 47 	lds	r24, 0x4735	; 0x804735 <_ZZ11__vector_56E9charIndex>
    183c:	88 2f       	mov	r24, r24
    183e:	90 e0       	ldi	r25, 0x00	; 0
    1840:	82 0f       	add	r24, r18
    1842:	93 1f       	adc	r25, r19
    1844:	fc 01       	movw	r30, r24
    1846:	80 81       	ld	r24, Z
    1848:	88 23       	and	r24, r24
    184a:	a9 f0       	breq	.+42     	; 0x1876 <__vector_56+0x9a>
		{
			/* Put data into buffer, sends the data */
			USART4.TXDATAL = (*buff)[charIndex++];
    184c:	80 e8       	ldi	r24, 0x80	; 128
    184e:	98 e0       	ldi	r25, 0x08	; 8
    1850:	40 91 33 47 	lds	r20, 0x4733	; 0x804733 <_ZZ11__vector_56E4buff>
    1854:	50 91 34 47 	lds	r21, 0x4734	; 0x804734 <_ZZ11__vector_56E4buff+0x1>
    1858:	20 91 35 47 	lds	r18, 0x4735	; 0x804735 <_ZZ11__vector_56E9charIndex>
    185c:	31 e0       	ldi	r19, 0x01	; 1
    185e:	32 0f       	add	r19, r18
    1860:	30 93 35 47 	sts	0x4735, r19	; 0x804735 <_ZZ11__vector_56E9charIndex>
    1864:	22 2f       	mov	r18, r18
    1866:	30 e0       	ldi	r19, 0x00	; 0
    1868:	24 0f       	add	r18, r20
    186a:	35 1f       	adc	r19, r21
    186c:	f9 01       	movw	r30, r18
    186e:	20 81       	ld	r18, Z
    1870:	fc 01       	movw	r30, r24
    1872:	22 83       	std	Z+2, r18	; 0x02
    1874:	16 c0       	rjmp	.+44     	; 0x18a2 <__vector_56+0xc6>
		}
		else
		{
			charIndex = 0;
    1876:	10 92 35 47 	sts	0x4735, r1	; 0x804735 <_ZZ11__vector_56E9charIndex>
			(*buff)[0] = '\0';
    187a:	80 91 33 47 	lds	r24, 0x4733	; 0x804733 <_ZZ11__vector_56E4buff>
    187e:	90 91 34 47 	lds	r25, 0x4734	; 0x804734 <_ZZ11__vector_56E4buff+0x1>
    1882:	fc 01       	movw	r30, r24
    1884:	10 82       	st	Z, r1
			buff = nextFullLBTxBuffer();
    1886:	0e 94 55 4f 	call	0x9eaa	; 0x9eaa <_Z18nextFullLBTxBufferv>
    188a:	80 93 33 47 	sts	0x4733, r24	; 0x804733 <_ZZ11__vector_56E4buff>
    188e:	90 93 34 47 	sts	0x4734, r25	; 0x804734 <_ZZ11__vector_56E4buff+0x1>
			if(!buff)
    1892:	80 91 33 47 	lds	r24, 0x4733	; 0x804733 <_ZZ11__vector_56E4buff>
    1896:	90 91 34 47 	lds	r25, 0x4734	; 0x804734 <_ZZ11__vector_56E4buff+0x1>
    189a:	89 2b       	or	r24, r25
    189c:	11 f4       	brne	.+4      	; 0x18a2 <__vector_56+0xc6>
			{
				linkbus_end_tx();
    189e:	0e 94 9a 50 	call	0xa134	; 0xa134 <_Z14linkbus_end_txv>
			}
		}
	}
	
	if(g_serialbus_usart_number == USART_4)
    18a2:	80 91 25 40 	lds	r24, 0x4025	; 0x804025 <g_serialbus_usart_number>
    18a6:	84 30       	cpi	r24, 0x04	; 4
    18a8:	09 f0       	breq	.+2      	; 0x18ac <__vector_56+0xd0>
    18aa:	45 c0       	rjmp	.+138    	; 0x1936 <__vector_56+0x15a>
	{
		static SerialbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
    18ac:	80 91 36 47 	lds	r24, 0x4736	; 0x804736 <_ZZ11__vector_56E4buff_0>
    18b0:	90 91 37 47 	lds	r25, 0x4737	; 0x804737 <_ZZ11__vector_56E4buff_0+0x1>
    18b4:	89 2b       	or	r24, r25
    18b6:	31 f4       	brne	.+12     	; 0x18c4 <__vector_56+0xe8>
		{
			buff = nextFullSBTxBuffer();
    18b8:	0e 94 4c 58 	call	0xb098	; 0xb098 <nextFullSBTxBuffer>
    18bc:	80 93 36 47 	sts	0x4736, r24	; 0x804736 <_ZZ11__vector_56E4buff_0>
    18c0:	90 93 37 47 	sts	0x4737, r25	; 0x804737 <_ZZ11__vector_56E4buff_0+0x1>
		}

		if((*buff)[charIndex])
    18c4:	20 91 36 47 	lds	r18, 0x4736	; 0x804736 <_ZZ11__vector_56E4buff_0>
    18c8:	30 91 37 47 	lds	r19, 0x4737	; 0x804737 <_ZZ11__vector_56E4buff_0+0x1>
    18cc:	80 91 38 47 	lds	r24, 0x4738	; 0x804738 <_ZZ11__vector_56E9charIndex_0>
    18d0:	88 2f       	mov	r24, r24
    18d2:	90 e0       	ldi	r25, 0x00	; 0
    18d4:	82 0f       	add	r24, r18
    18d6:	93 1f       	adc	r25, r19
    18d8:	fc 01       	movw	r30, r24
    18da:	80 81       	ld	r24, Z
    18dc:	88 23       	and	r24, r24
    18de:	a9 f0       	breq	.+42     	; 0x190a <__vector_56+0x12e>
		{
			/* Put data into buffer, sends the data */
			USART4.TXDATAL = (*buff)[charIndex++];
    18e0:	80 e8       	ldi	r24, 0x80	; 128
    18e2:	98 e0       	ldi	r25, 0x08	; 8
    18e4:	40 91 36 47 	lds	r20, 0x4736	; 0x804736 <_ZZ11__vector_56E4buff_0>
    18e8:	50 91 37 47 	lds	r21, 0x4737	; 0x804737 <_ZZ11__vector_56E4buff_0+0x1>
    18ec:	20 91 38 47 	lds	r18, 0x4738	; 0x804738 <_ZZ11__vector_56E9charIndex_0>
    18f0:	31 e0       	ldi	r19, 0x01	; 1
    18f2:	32 0f       	add	r19, r18
    18f4:	30 93 38 47 	sts	0x4738, r19	; 0x804738 <_ZZ11__vector_56E9charIndex_0>
    18f8:	22 2f       	mov	r18, r18
    18fa:	30 e0       	ldi	r19, 0x00	; 0
    18fc:	24 0f       	add	r18, r20
    18fe:	35 1f       	adc	r19, r21
    1900:	f9 01       	movw	r30, r18
    1902:	20 81       	ld	r18, Z
    1904:	fc 01       	movw	r30, r24
    1906:	22 83       	std	Z+2, r18	; 0x02
			{
				serialbus_end_tx();
			}
		}
	}
}
    1908:	16 c0       	rjmp	.+44     	; 0x1936 <__vector_56+0x15a>
			/* Put data into buffer, sends the data */
			USART4.TXDATAL = (*buff)[charIndex++];
		}
		else
		{
			charIndex = 0;
    190a:	10 92 38 47 	sts	0x4738, r1	; 0x804738 <_ZZ11__vector_56E9charIndex_0>
			(*buff)[0] = '\0';
    190e:	80 91 36 47 	lds	r24, 0x4736	; 0x804736 <_ZZ11__vector_56E4buff_0>
    1912:	90 91 37 47 	lds	r25, 0x4737	; 0x804737 <_ZZ11__vector_56E4buff_0+0x1>
    1916:	fc 01       	movw	r30, r24
    1918:	10 82       	st	Z, r1
			buff = nextFullSBTxBuffer();
    191a:	0e 94 4c 58 	call	0xb098	; 0xb098 <nextFullSBTxBuffer>
    191e:	80 93 36 47 	sts	0x4736, r24	; 0x804736 <_ZZ11__vector_56E4buff_0>
    1922:	90 93 37 47 	sts	0x4737, r25	; 0x804737 <_ZZ11__vector_56E4buff_0+0x1>
			if(!buff)
    1926:	80 91 36 47 	lds	r24, 0x4736	; 0x804736 <_ZZ11__vector_56E4buff_0>
    192a:	90 91 37 47 	lds	r25, 0x4737	; 0x804737 <_ZZ11__vector_56E4buff_0+0x1>
    192e:	89 2b       	or	r24, r25
    1930:	11 f4       	brne	.+4      	; 0x1936 <__vector_56+0x15a>
			{
				serialbus_end_tx();
    1932:	0e 94 a1 59 	call	0xb342	; 0xb342 <serialbus_end_tx>
			}
		}
	}
}
    1936:	00 00       	nop
    1938:	df 91       	pop	r29
    193a:	cf 91       	pop	r28
    193c:	ff 91       	pop	r31
    193e:	ef 91       	pop	r30
    1940:	bf 91       	pop	r27
    1942:	af 91       	pop	r26
    1944:	9f 91       	pop	r25
    1946:	8f 91       	pop	r24
    1948:	7f 91       	pop	r23
    194a:	6f 91       	pop	r22
    194c:	5f 91       	pop	r21
    194e:	4f 91       	pop	r20
    1950:	3f 91       	pop	r19
    1952:	2f 91       	pop	r18
    1954:	0f 90       	pop	r0
    1956:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    195a:	0f 90       	pop	r0
    195c:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    1960:	0f 90       	pop	r0
    1962:	1f 90       	pop	r1
    1964:	18 95       	reti

00001966 <__vector_31>:

/**

*/
ISR(USART1_RXC_vect)
{
    1966:	1f 92       	push	r1
    1968:	0f 92       	push	r0
    196a:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    196e:	0f 92       	push	r0
    1970:	11 24       	eor	r1, r1
    1972:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    1976:	0f 92       	push	r0
    1978:	2f 93       	push	r18
    197a:	3f 93       	push	r19
    197c:	4f 93       	push	r20
    197e:	5f 93       	push	r21
    1980:	6f 93       	push	r22
    1982:	7f 93       	push	r23
    1984:	8f 93       	push	r24
    1986:	9f 93       	push	r25
    1988:	af 93       	push	r26
    198a:	bf 93       	push	r27
    198c:	ef 93       	push	r30
    198e:	ff 93       	push	r31
    1990:	cf 93       	push	r28
    1992:	df 93       	push	r29
    1994:	1f 92       	push	r1
    1996:	cd b7       	in	r28, 0x3d	; 61
    1998:	de b7       	in	r29, 0x3e	; 62
	uint8_t rx_char = USART1_get_data();	
    199a:	0e 94 f2 6a 	call	0xd5e4	; 0xd5e4 <USART1_get_data>
    199e:	89 83       	std	Y+1, r24	; 0x01
	
	if(g_linkbus_usart_number == USART_1)
    19a0:	80 91 22 40 	lds	r24, 0x4022	; 0x804022 <g_linkbus_usart_number>
    19a4:	81 30       	cpi	r24, 0x01	; 1
    19a6:	19 f4       	brne	.+6      	; 0x19ae <__vector_31+0x48>
	{
		linkbus_Rx(rx_char);
    19a8:	89 81       	ldd	r24, Y+1	; 0x01
    19aa:	0e 94 f7 0c 	call	0x19ee	; 0x19ee <_Z10linkbus_Rxh>
	}
	
	if(g_serialbus_usart_number == USART_1)
    19ae:	80 91 25 40 	lds	r24, 0x4025	; 0x804025 <g_serialbus_usart_number>
    19b2:	81 30       	cpi	r24, 0x01	; 1
    19b4:	19 f4       	brne	.+6      	; 0x19bc <__vector_31+0x56>
	{
		serial_Rx(rx_char);
    19b6:	89 81       	ldd	r24, Y+1	; 0x01
    19b8:	0e 94 a9 08 	call	0x1152	; 0x1152 <_Z9serial_Rxh>
	}
}
    19bc:	00 00       	nop
    19be:	0f 90       	pop	r0
    19c0:	df 91       	pop	r29
    19c2:	cf 91       	pop	r28
    19c4:	ff 91       	pop	r31
    19c6:	ef 91       	pop	r30
    19c8:	bf 91       	pop	r27
    19ca:	af 91       	pop	r26
    19cc:	9f 91       	pop	r25
    19ce:	8f 91       	pop	r24
    19d0:	7f 91       	pop	r23
    19d2:	6f 91       	pop	r22
    19d4:	5f 91       	pop	r21
    19d6:	4f 91       	pop	r20
    19d8:	3f 91       	pop	r19
    19da:	2f 91       	pop	r18
    19dc:	0f 90       	pop	r0
    19de:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    19e2:	0f 90       	pop	r0
    19e4:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    19e8:	0f 90       	pop	r0
    19ea:	1f 90       	pop	r1
    19ec:	18 95       	reti

000019ee <_Z10linkbus_Rxh>:

void linkbus_Rx(uint8_t rx_char)
{
    19ee:	cf 93       	push	r28
    19f0:	df 93       	push	r29
    19f2:	1f 92       	push	r1
    19f4:	cd b7       	in	r28, 0x3d	; 61
    19f6:	de b7       	in	r29, 0x3e	; 62
    19f8:	89 83       	std	Y+1, r24	; 0x01
	static uint8_t field_index = 0;
	static uint8_t field_len = 0;
	static uint32_t tempMsg_ID = 0;
	static bool receiving_msg = false;

	if(!buff)
    19fa:	80 91 39 47 	lds	r24, 0x4739	; 0x804739 <_ZZ10linkbus_RxhE4buff>
    19fe:	90 91 3a 47 	lds	r25, 0x473A	; 0x80473a <_ZZ10linkbus_RxhE4buff+0x1>
    1a02:	89 2b       	or	r24, r25
    1a04:	31 f4       	brne	.+12     	; 0x1a12 <_Z10linkbus_Rxh+0x24>
	{
		buff = nextEmptyLBRxBuffer();
    1a06:	0e 94 e3 4f 	call	0x9fc6	; 0x9fc6 <_Z19nextEmptyLBRxBufferv>
    1a0a:	80 93 39 47 	sts	0x4739, r24	; 0x804739 <_ZZ10linkbus_RxhE4buff>
    1a0e:	90 93 3a 47 	sts	0x473A, r25	; 0x80473a <_ZZ10linkbus_RxhE4buff+0x1>
	}

	if(buff)
    1a12:	80 91 39 47 	lds	r24, 0x4739	; 0x804739 <_ZZ10linkbus_RxhE4buff>
    1a16:	90 91 3a 47 	lds	r25, 0x473A	; 0x80473a <_ZZ10linkbus_RxhE4buff+0x1>
    1a1a:	89 2b       	or	r24, r25
    1a1c:	09 f4       	brne	.+2      	; 0x1a20 <_Z10linkbus_Rxh+0x32>
    1a1e:	43 c1       	rjmp	.+646    	; 0x1ca6 <_Z10linkbus_Rxh+0x2b8>
	{
		rx_char = toupper(rx_char);
    1a20:	89 81       	ldd	r24, Y+1	; 0x01
    1a22:	88 2f       	mov	r24, r24
    1a24:	90 e0       	ldi	r25, 0x00	; 0
    1a26:	0e 94 d0 73 	call	0xe7a0	; 0xe7a0 <toupper>
    1a2a:	89 83       	std	Y+1, r24	; 0x01

		if((rx_char == '$') || (rx_char == '!'))    /* start of new message = $ */
    1a2c:	89 81       	ldd	r24, Y+1	; 0x01
    1a2e:	84 32       	cpi	r24, 0x24	; 36
    1a30:	19 f0       	breq	.+6      	; 0x1a38 <_Z10linkbus_Rxh+0x4a>
    1a32:	89 81       	ldd	r24, Y+1	; 0x01
    1a34:	81 32       	cpi	r24, 0x21	; 33
    1a36:	e9 f5       	brne	.+122    	; 0x1ab2 <_Z10linkbus_Rxh+0xc4>
		{
			charIndex = 0;
    1a38:	10 92 3b 47 	sts	0x473B, r1	; 0x80473b <_ZZ10linkbus_RxhE9charIndex>
			buff->type = (rx_char == '!') ? LINKBUS_MSG_REPLY : LINKBUS_MSG_COMMAND;
    1a3c:	80 91 39 47 	lds	r24, 0x4739	; 0x804739 <_ZZ10linkbus_RxhE4buff>
    1a40:	90 91 3a 47 	lds	r25, 0x473A	; 0x80473a <_ZZ10linkbus_RxhE4buff+0x1>
    1a44:	29 81       	ldd	r18, Y+1	; 0x01
    1a46:	21 32       	cpi	r18, 0x21	; 33
    1a48:	11 f4       	brne	.+4      	; 0x1a4e <_Z10linkbus_Rxh+0x60>
    1a4a:	23 e0       	ldi	r18, 0x03	; 3
    1a4c:	01 c0       	rjmp	.+2      	; 0x1a50 <_Z10linkbus_Rxh+0x62>
    1a4e:	21 e0       	ldi	r18, 0x01	; 1
    1a50:	fc 01       	movw	r30, r24
    1a52:	20 83       	st	Z, r18
			field_len = 0;
    1a54:	10 92 3c 47 	sts	0x473C, r1	; 0x80473c <_ZZ10linkbus_RxhE9field_len>
			tempMsg_ID = 0;
    1a58:	10 92 3d 47 	sts	0x473D, r1	; 0x80473d <_ZZ10linkbus_RxhE10tempMsg_ID>
    1a5c:	10 92 3e 47 	sts	0x473E, r1	; 0x80473e <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
    1a60:	10 92 3f 47 	sts	0x473F, r1	; 0x80473f <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
    1a64:	10 92 40 47 	sts	0x4740, r1	; 0x804740 <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
			receiving_msg = true;
    1a68:	81 e0       	ldi	r24, 0x01	; 1
    1a6a:	80 93 41 47 	sts	0x4741, r24	; 0x804741 <_ZZ10linkbus_RxhE13receiving_msg>

			/* Empty the field buffers */
			for(field_index = 0; field_index < LINKBUS_MAX_MSG_NUMBER_OF_FIELDS; field_index++)
    1a6e:	10 92 42 47 	sts	0x4742, r1	; 0x804742 <_ZZ10linkbus_RxhE11field_index>
    1a72:	80 91 42 47 	lds	r24, 0x4742	; 0x804742 <_ZZ10linkbus_RxhE11field_index>
    1a76:	83 30       	cpi	r24, 0x03	; 3
    1a78:	c8 f4       	brcc	.+50     	; 0x1aac <_Z10linkbus_Rxh+0xbe>
			{
				buff->fields[field_index][0] = '\0';
    1a7a:	20 91 39 47 	lds	r18, 0x4739	; 0x804739 <_ZZ10linkbus_RxhE4buff>
    1a7e:	30 91 3a 47 	lds	r19, 0x473A	; 0x80473a <_ZZ10linkbus_RxhE4buff+0x1>
    1a82:	80 91 42 47 	lds	r24, 0x4742	; 0x804742 <_ZZ10linkbus_RxhE11field_index>
    1a86:	48 2f       	mov	r20, r24
    1a88:	50 e0       	ldi	r21, 0x00	; 0
    1a8a:	65 e1       	ldi	r22, 0x15	; 21
    1a8c:	64 9f       	mul	r22, r20
    1a8e:	c0 01       	movw	r24, r0
    1a90:	65 9f       	mul	r22, r21
    1a92:	90 0d       	add	r25, r0
    1a94:	11 24       	eor	r1, r1
    1a96:	82 0f       	add	r24, r18
    1a98:	93 1f       	adc	r25, r19
    1a9a:	03 96       	adiw	r24, 0x03	; 3
    1a9c:	fc 01       	movw	r30, r24
    1a9e:	10 82       	st	Z, r1
			field_len = 0;
			tempMsg_ID = 0;
			receiving_msg = true;

			/* Empty the field buffers */
			for(field_index = 0; field_index < LINKBUS_MAX_MSG_NUMBER_OF_FIELDS; field_index++)
    1aa0:	80 91 42 47 	lds	r24, 0x4742	; 0x804742 <_ZZ10linkbus_RxhE11field_index>
    1aa4:	8f 5f       	subi	r24, 0xFF	; 255
    1aa6:	80 93 42 47 	sts	0x4742, r24	; 0x804742 <_ZZ10linkbus_RxhE11field_index>
    1aaa:	e3 cf       	rjmp	.-58     	; 0x1a72 <_Z10linkbus_Rxh+0x84>
			{
				buff->fields[field_index][0] = '\0';
			}

			field_index = 0;
    1aac:	10 92 42 47 	sts	0x4742, r1	; 0x804742 <_ZZ10linkbus_RxhE11field_index>
    1ab0:	e9 c0       	rjmp	.+466    	; 0x1c84 <_Z10linkbus_Rxh+0x296>
		}
		else if(receiving_msg)
    1ab2:	80 91 41 47 	lds	r24, 0x4741	; 0x804741 <_ZZ10linkbus_RxhE13receiving_msg>
    1ab6:	88 23       	and	r24, r24
    1ab8:	09 f4       	brne	.+2      	; 0x1abc <_Z10linkbus_Rxh+0xce>
    1aba:	c7 c0       	rjmp	.+398    	; 0x1c4a <_Z10linkbus_Rxh+0x25c>
		{
			if((rx_char == ',') || (rx_char == ';') || (rx_char == '?'))    /* new field = ,; end of message = ; */
    1abc:	89 81       	ldd	r24, Y+1	; 0x01
    1abe:	8c 32       	cpi	r24, 0x2C	; 44
    1ac0:	39 f0       	breq	.+14     	; 0x1ad0 <_Z10linkbus_Rxh+0xe2>
    1ac2:	89 81       	ldd	r24, Y+1	; 0x01
    1ac4:	8b 33       	cpi	r24, 0x3B	; 59
    1ac6:	21 f0       	breq	.+8      	; 0x1ad0 <_Z10linkbus_Rxh+0xe2>
    1ac8:	89 81       	ldd	r24, Y+1	; 0x01
    1aca:	8f 33       	cpi	r24, 0x3F	; 63
    1acc:	09 f0       	breq	.+2      	; 0x1ad0 <_Z10linkbus_Rxh+0xe2>
    1ace:	6b c0       	rjmp	.+214    	; 0x1ba6 <_Z10linkbus_Rxh+0x1b8>
			{
				/* if(field_index == 0) // message ID received */
				if(field_index > 0)
    1ad0:	80 91 42 47 	lds	r24, 0x4742	; 0x804742 <_ZZ10linkbus_RxhE11field_index>
    1ad4:	88 23       	and	r24, r24
    1ad6:	e1 f0       	breq	.+56     	; 0x1b10 <_Z10linkbus_Rxh+0x122>
				{
					buff->fields[field_index - 1][field_len] = 0;
    1ad8:	40 91 39 47 	lds	r20, 0x4739	; 0x804739 <_ZZ10linkbus_RxhE4buff>
    1adc:	50 91 3a 47 	lds	r21, 0x473A	; 0x80473a <_ZZ10linkbus_RxhE4buff+0x1>
    1ae0:	80 91 42 47 	lds	r24, 0x4742	; 0x804742 <_ZZ10linkbus_RxhE11field_index>
    1ae4:	88 2f       	mov	r24, r24
    1ae6:	90 e0       	ldi	r25, 0x00	; 0
    1ae8:	bc 01       	movw	r22, r24
    1aea:	61 50       	subi	r22, 0x01	; 1
    1aec:	71 09       	sbc	r23, r1
    1aee:	80 91 3c 47 	lds	r24, 0x473C	; 0x80473c <_ZZ10linkbus_RxhE9field_len>
    1af2:	88 2f       	mov	r24, r24
    1af4:	90 e0       	ldi	r25, 0x00	; 0
    1af6:	e5 e1       	ldi	r30, 0x15	; 21
    1af8:	e6 9f       	mul	r30, r22
    1afa:	90 01       	movw	r18, r0
    1afc:	e7 9f       	mul	r30, r23
    1afe:	30 0d       	add	r19, r0
    1b00:	11 24       	eor	r1, r1
    1b02:	24 0f       	add	r18, r20
    1b04:	35 1f       	adc	r19, r21
    1b06:	82 0f       	add	r24, r18
    1b08:	93 1f       	adc	r25, r19
    1b0a:	03 96       	adiw	r24, 0x03	; 3
    1b0c:	fc 01       	movw	r30, r24
    1b0e:	10 82       	st	Z, r1
				}

				field_index++;
    1b10:	80 91 42 47 	lds	r24, 0x4742	; 0x804742 <_ZZ10linkbus_RxhE11field_index>
    1b14:	8f 5f       	subi	r24, 0xFF	; 255
    1b16:	80 93 42 47 	sts	0x4742, r24	; 0x804742 <_ZZ10linkbus_RxhE11field_index>
				field_len = 0;
    1b1a:	10 92 3c 47 	sts	0x473C, r1	; 0x80473c <_ZZ10linkbus_RxhE9field_len>

				if(rx_char == ';')
    1b1e:	89 81       	ldd	r24, Y+1	; 0x01
    1b20:	8b 33       	cpi	r24, 0x3B	; 59
    1b22:	b1 f4       	brne	.+44     	; 0x1b50 <_Z10linkbus_Rxh+0x162>
				{
					if(charIndex > LINKBUS_MIN_MSG_LENGTH)
    1b24:	80 91 3b 47 	lds	r24, 0x473B	; 0x80473b <_ZZ10linkbus_RxhE9charIndex>
    1b28:	84 30       	cpi	r24, 0x04	; 4
    1b2a:	78 f0       	brcs	.+30     	; 0x1b4a <_Z10linkbus_Rxh+0x15c>
					{
						buff->id = (LBMessageID)tempMsg_ID;
    1b2c:	20 91 39 47 	lds	r18, 0x4739	; 0x804739 <_ZZ10linkbus_RxhE4buff>
    1b30:	30 91 3a 47 	lds	r19, 0x473A	; 0x80473a <_ZZ10linkbus_RxhE4buff+0x1>
    1b34:	80 91 3d 47 	lds	r24, 0x473D	; 0x80473d <_ZZ10linkbus_RxhE10tempMsg_ID>
    1b38:	90 91 3e 47 	lds	r25, 0x473E	; 0x80473e <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
    1b3c:	a0 91 3f 47 	lds	r26, 0x473F	; 0x80473f <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
    1b40:	b0 91 40 47 	lds	r27, 0x4740	; 0x804740 <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
    1b44:	f9 01       	movw	r30, r18
    1b46:	81 83       	std	Z+1, r24	; 0x01
    1b48:	92 83       	std	Z+2, r25	; 0x02
					}
					receiving_msg = false;
    1b4a:	10 92 41 47 	sts	0x4741, r1	; 0x804741 <_ZZ10linkbus_RxhE13receiving_msg>
    1b4e:	1f c0       	rjmp	.+62     	; 0x1b8e <_Z10linkbus_Rxh+0x1a0>
				}
				else if(rx_char == '?')
    1b50:	89 81       	ldd	r24, Y+1	; 0x01
    1b52:	8f 33       	cpi	r24, 0x3F	; 63
    1b54:	e1 f4       	brne	.+56     	; 0x1b8e <_Z10linkbus_Rxh+0x1a0>
				{
					buff->type = LINKBUS_MSG_QUERY;
    1b56:	80 91 39 47 	lds	r24, 0x4739	; 0x804739 <_ZZ10linkbus_RxhE4buff>
    1b5a:	90 91 3a 47 	lds	r25, 0x473A	; 0x80473a <_ZZ10linkbus_RxhE4buff+0x1>
    1b5e:	22 e0       	ldi	r18, 0x02	; 2
    1b60:	fc 01       	movw	r30, r24
    1b62:	20 83       	st	Z, r18
					if(charIndex >= LINKBUS_MIN_MSG_LENGTH)
    1b64:	80 91 3b 47 	lds	r24, 0x473B	; 0x80473b <_ZZ10linkbus_RxhE9charIndex>
    1b68:	83 30       	cpi	r24, 0x03	; 3
    1b6a:	78 f0       	brcs	.+30     	; 0x1b8a <_Z10linkbus_Rxh+0x19c>
					{
						buff->id = (LBMessageID)tempMsg_ID;
    1b6c:	20 91 39 47 	lds	r18, 0x4739	; 0x804739 <_ZZ10linkbus_RxhE4buff>
    1b70:	30 91 3a 47 	lds	r19, 0x473A	; 0x80473a <_ZZ10linkbus_RxhE4buff+0x1>
    1b74:	80 91 3d 47 	lds	r24, 0x473D	; 0x80473d <_ZZ10linkbus_RxhE10tempMsg_ID>
    1b78:	90 91 3e 47 	lds	r25, 0x473E	; 0x80473e <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
    1b7c:	a0 91 3f 47 	lds	r26, 0x473F	; 0x80473f <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
    1b80:	b0 91 40 47 	lds	r27, 0x4740	; 0x804740 <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
    1b84:	f9 01       	movw	r30, r18
    1b86:	81 83       	std	Z+1, r24	; 0x01
    1b88:	92 83       	std	Z+2, r25	; 0x02
					}
					receiving_msg = false;
    1b8a:	10 92 41 47 	sts	0x4741, r1	; 0x804741 <_ZZ10linkbus_RxhE13receiving_msg>
				}

				if(!receiving_msg)
    1b8e:	90 91 41 47 	lds	r25, 0x4741	; 0x804741 <_ZZ10linkbus_RxhE13receiving_msg>
    1b92:	81 e0       	ldi	r24, 0x01	; 1
    1b94:	89 27       	eor	r24, r25
    1b96:	88 23       	and	r24, r24
    1b98:	09 f4       	brne	.+2      	; 0x1b9c <_Z10linkbus_Rxh+0x1ae>
    1b9a:	74 c0       	rjmp	.+232    	; 0x1c84 <_Z10linkbus_Rxh+0x296>
				{
					buff = 0;
    1b9c:	10 92 39 47 	sts	0x4739, r1	; 0x804739 <_ZZ10linkbus_RxhE4buff>
    1ba0:	10 92 3a 47 	sts	0x473A, r1	; 0x80473a <_ZZ10linkbus_RxhE4buff+0x1>
						buff->id = (LBMessageID)tempMsg_ID;
					}
					receiving_msg = false;
				}

				if(!receiving_msg)
    1ba4:	6f c0       	rjmp	.+222    	; 0x1c84 <_Z10linkbus_Rxh+0x296>
					buff = 0;
				}
			}
			else
			{
				if(field_index == 0)    /* message ID received */
    1ba6:	80 91 42 47 	lds	r24, 0x4742	; 0x804742 <_ZZ10linkbus_RxhE11field_index>
    1baa:	88 23       	and	r24, r24
    1bac:	61 f5       	brne	.+88     	; 0x1c06 <_Z10linkbus_Rxh+0x218>
				{
					tempMsg_ID = tempMsg_ID * 10 + rx_char;
    1bae:	80 91 3d 47 	lds	r24, 0x473D	; 0x80473d <_ZZ10linkbus_RxhE10tempMsg_ID>
    1bb2:	90 91 3e 47 	lds	r25, 0x473E	; 0x80473e <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
    1bb6:	a0 91 3f 47 	lds	r26, 0x473F	; 0x80473f <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
    1bba:	b0 91 40 47 	lds	r27, 0x4740	; 0x804740 <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
    1bbe:	88 0f       	add	r24, r24
    1bc0:	99 1f       	adc	r25, r25
    1bc2:	aa 1f       	adc	r26, r26
    1bc4:	bb 1f       	adc	r27, r27
    1bc6:	9c 01       	movw	r18, r24
    1bc8:	ad 01       	movw	r20, r26
    1bca:	22 0f       	add	r18, r18
    1bcc:	33 1f       	adc	r19, r19
    1bce:	44 1f       	adc	r20, r20
    1bd0:	55 1f       	adc	r21, r21
    1bd2:	22 0f       	add	r18, r18
    1bd4:	33 1f       	adc	r19, r19
    1bd6:	44 1f       	adc	r20, r20
    1bd8:	55 1f       	adc	r21, r21
    1bda:	28 0f       	add	r18, r24
    1bdc:	39 1f       	adc	r19, r25
    1bde:	4a 1f       	adc	r20, r26
    1be0:	5b 1f       	adc	r21, r27
    1be2:	89 81       	ldd	r24, Y+1	; 0x01
    1be4:	88 2f       	mov	r24, r24
    1be6:	90 e0       	ldi	r25, 0x00	; 0
    1be8:	a0 e0       	ldi	r26, 0x00	; 0
    1bea:	b0 e0       	ldi	r27, 0x00	; 0
    1bec:	82 0f       	add	r24, r18
    1bee:	93 1f       	adc	r25, r19
    1bf0:	a4 1f       	adc	r26, r20
    1bf2:	b5 1f       	adc	r27, r21
    1bf4:	80 93 3d 47 	sts	0x473D, r24	; 0x80473d <_ZZ10linkbus_RxhE10tempMsg_ID>
    1bf8:	90 93 3e 47 	sts	0x473E, r25	; 0x80473e <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
    1bfc:	a0 93 3f 47 	sts	0x473F, r26	; 0x80473f <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
    1c00:	b0 93 40 47 	sts	0x4740, r27	; 0x804740 <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
    1c04:	3f c0       	rjmp	.+126    	; 0x1c84 <_Z10linkbus_Rxh+0x296>
				}
				else
				{
					buff->fields[field_index - 1][field_len++] = rx_char;
    1c06:	40 91 39 47 	lds	r20, 0x4739	; 0x804739 <_ZZ10linkbus_RxhE4buff>
    1c0a:	50 91 3a 47 	lds	r21, 0x473A	; 0x80473a <_ZZ10linkbus_RxhE4buff+0x1>
    1c0e:	80 91 42 47 	lds	r24, 0x4742	; 0x804742 <_ZZ10linkbus_RxhE11field_index>
    1c12:	88 2f       	mov	r24, r24
    1c14:	90 e0       	ldi	r25, 0x00	; 0
    1c16:	bc 01       	movw	r22, r24
    1c18:	61 50       	subi	r22, 0x01	; 1
    1c1a:	71 09       	sbc	r23, r1
    1c1c:	80 91 3c 47 	lds	r24, 0x473C	; 0x80473c <_ZZ10linkbus_RxhE9field_len>
    1c20:	91 e0       	ldi	r25, 0x01	; 1
    1c22:	98 0f       	add	r25, r24
    1c24:	90 93 3c 47 	sts	0x473C, r25	; 0x80473c <_ZZ10linkbus_RxhE9field_len>
    1c28:	88 2f       	mov	r24, r24
    1c2a:	90 e0       	ldi	r25, 0x00	; 0
    1c2c:	e5 e1       	ldi	r30, 0x15	; 21
    1c2e:	e6 9f       	mul	r30, r22
    1c30:	90 01       	movw	r18, r0
    1c32:	e7 9f       	mul	r30, r23
    1c34:	30 0d       	add	r19, r0
    1c36:	11 24       	eor	r1, r1
    1c38:	24 0f       	add	r18, r20
    1c3a:	35 1f       	adc	r19, r21
    1c3c:	82 0f       	add	r24, r18
    1c3e:	93 1f       	adc	r25, r19
    1c40:	03 96       	adiw	r24, 0x03	; 3
    1c42:	29 81       	ldd	r18, Y+1	; 0x01
    1c44:	fc 01       	movw	r30, r24
    1c46:	20 83       	st	Z, r18
    1c48:	1d c0       	rjmp	.+58     	; 0x1c84 <_Z10linkbus_Rxh+0x296>
				}
			}
		}
		else if(rx_char == 0x0D)    /* Carriage return resets any message in progress */
    1c4a:	89 81       	ldd	r24, Y+1	; 0x01
    1c4c:	8d 30       	cpi	r24, 0x0D	; 13
    1c4e:	d1 f4       	brne	.+52     	; 0x1c84 <_Z10linkbus_Rxh+0x296>
		{
			buff->id = LB_MESSAGE_EMPTY;
    1c50:	80 91 39 47 	lds	r24, 0x4739	; 0x804739 <_ZZ10linkbus_RxhE4buff>
    1c54:	90 91 3a 47 	lds	r25, 0x473A	; 0x80473a <_ZZ10linkbus_RxhE4buff+0x1>
    1c58:	fc 01       	movw	r30, r24
    1c5a:	11 82       	std	Z+1, r1	; 0x01
    1c5c:	12 82       	std	Z+2, r1	; 0x02
			charIndex = LINKBUS_MAX_MSG_LENGTH;
    1c5e:	82 e3       	ldi	r24, 0x32	; 50
    1c60:	80 93 3b 47 	sts	0x473B, r24	; 0x80473b <_ZZ10linkbus_RxhE9charIndex>
			field_len = 0;
    1c64:	10 92 3c 47 	sts	0x473C, r1	; 0x80473c <_ZZ10linkbus_RxhE9field_len>
			tempMsg_ID = 0;
    1c68:	10 92 3d 47 	sts	0x473D, r1	; 0x80473d <_ZZ10linkbus_RxhE10tempMsg_ID>
    1c6c:	10 92 3e 47 	sts	0x473E, r1	; 0x80473e <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
    1c70:	10 92 3f 47 	sts	0x473F, r1	; 0x80473f <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
    1c74:	10 92 40 47 	sts	0x4740, r1	; 0x804740 <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
			field_index = 0;
    1c78:	10 92 42 47 	sts	0x4742, r1	; 0x804742 <_ZZ10linkbus_RxhE11field_index>
			buff = NULL;
    1c7c:	10 92 39 47 	sts	0x4739, r1	; 0x804739 <_ZZ10linkbus_RxhE4buff>
    1c80:	10 92 3a 47 	sts	0x473A, r1	; 0x80473a <_ZZ10linkbus_RxhE4buff+0x1>
		}

		if(++charIndex >= LINKBUS_MAX_MSG_LENGTH)
    1c84:	80 91 3b 47 	lds	r24, 0x473B	; 0x80473b <_ZZ10linkbus_RxhE9charIndex>
    1c88:	8f 5f       	subi	r24, 0xFF	; 255
    1c8a:	80 93 3b 47 	sts	0x473B, r24	; 0x80473b <_ZZ10linkbus_RxhE9charIndex>
    1c8e:	90 91 3b 47 	lds	r25, 0x473B	; 0x80473b <_ZZ10linkbus_RxhE9charIndex>
    1c92:	81 e0       	ldi	r24, 0x01	; 1
    1c94:	92 33       	cpi	r25, 0x32	; 50
    1c96:	08 f4       	brcc	.+2      	; 0x1c9a <_Z10linkbus_Rxh+0x2ac>
    1c98:	80 e0       	ldi	r24, 0x00	; 0
    1c9a:	88 23       	and	r24, r24
    1c9c:	21 f0       	breq	.+8      	; 0x1ca6 <_Z10linkbus_Rxh+0x2b8>
		{
			receiving_msg = false;
    1c9e:	10 92 41 47 	sts	0x4741, r1	; 0x804741 <_ZZ10linkbus_RxhE13receiving_msg>
			charIndex = 0;
    1ca2:	10 92 3b 47 	sts	0x473B, r1	; 0x80473b <_ZZ10linkbus_RxhE9charIndex>
		}
	}
}
    1ca6:	00 00       	nop
    1ca8:	0f 90       	pop	r0
    1caa:	df 91       	pop	r29
    1cac:	cf 91       	pop	r28
    1cae:	08 95       	ret

00001cb0 <__vector_32>:

/**

*/
ISR(USART1_DRE_vect)
{
    1cb0:	1f 92       	push	r1
    1cb2:	0f 92       	push	r0
    1cb4:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    1cb8:	0f 92       	push	r0
    1cba:	11 24       	eor	r1, r1
    1cbc:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    1cc0:	0f 92       	push	r0
    1cc2:	2f 93       	push	r18
    1cc4:	3f 93       	push	r19
    1cc6:	4f 93       	push	r20
    1cc8:	5f 93       	push	r21
    1cca:	6f 93       	push	r22
    1ccc:	7f 93       	push	r23
    1cce:	8f 93       	push	r24
    1cd0:	9f 93       	push	r25
    1cd2:	af 93       	push	r26
    1cd4:	bf 93       	push	r27
    1cd6:	ef 93       	push	r30
    1cd8:	ff 93       	push	r31
    1cda:	cf 93       	push	r28
    1cdc:	df 93       	push	r29
    1cde:	cd b7       	in	r28, 0x3d	; 61
    1ce0:	de b7       	in	r29, 0x3e	; 62
	if(g_serialbus_usart_number == USART_1)
    1ce2:	80 91 25 40 	lds	r24, 0x4025	; 0x804025 <g_serialbus_usart_number>
    1ce6:	81 30       	cpi	r24, 0x01	; 1
    1ce8:	09 f0       	breq	.+2      	; 0x1cec <__vector_32+0x3c>
    1cea:	45 c0       	rjmp	.+138    	; 0x1d76 <__vector_32+0xc6>
	{
		static SerialbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
    1cec:	80 91 43 47 	lds	r24, 0x4743	; 0x804743 <_ZZ11__vector_32E4buff>
    1cf0:	90 91 44 47 	lds	r25, 0x4744	; 0x804744 <_ZZ11__vector_32E4buff+0x1>
    1cf4:	89 2b       	or	r24, r25
    1cf6:	31 f4       	brne	.+12     	; 0x1d04 <__vector_32+0x54>
		{
			buff = nextFullSBTxBuffer();
    1cf8:	0e 94 4c 58 	call	0xb098	; 0xb098 <nextFullSBTxBuffer>
    1cfc:	80 93 43 47 	sts	0x4743, r24	; 0x804743 <_ZZ11__vector_32E4buff>
    1d00:	90 93 44 47 	sts	0x4744, r25	; 0x804744 <_ZZ11__vector_32E4buff+0x1>
		}

		if((*buff)[charIndex])
    1d04:	20 91 43 47 	lds	r18, 0x4743	; 0x804743 <_ZZ11__vector_32E4buff>
    1d08:	30 91 44 47 	lds	r19, 0x4744	; 0x804744 <_ZZ11__vector_32E4buff+0x1>
    1d0c:	80 91 45 47 	lds	r24, 0x4745	; 0x804745 <_ZZ11__vector_32E9charIndex>
    1d10:	88 2f       	mov	r24, r24
    1d12:	90 e0       	ldi	r25, 0x00	; 0
    1d14:	82 0f       	add	r24, r18
    1d16:	93 1f       	adc	r25, r19
    1d18:	fc 01       	movw	r30, r24
    1d1a:	80 81       	ld	r24, Z
    1d1c:	88 23       	and	r24, r24
    1d1e:	a9 f0       	breq	.+42     	; 0x1d4a <__vector_32+0x9a>
		{
			/* Put data into buffer, sends the data */
			USART1.TXDATAL = (*buff)[charIndex++];
    1d20:	80 e2       	ldi	r24, 0x20	; 32
    1d22:	98 e0       	ldi	r25, 0x08	; 8
    1d24:	40 91 43 47 	lds	r20, 0x4743	; 0x804743 <_ZZ11__vector_32E4buff>
    1d28:	50 91 44 47 	lds	r21, 0x4744	; 0x804744 <_ZZ11__vector_32E4buff+0x1>
    1d2c:	20 91 45 47 	lds	r18, 0x4745	; 0x804745 <_ZZ11__vector_32E9charIndex>
    1d30:	31 e0       	ldi	r19, 0x01	; 1
    1d32:	32 0f       	add	r19, r18
    1d34:	30 93 45 47 	sts	0x4745, r19	; 0x804745 <_ZZ11__vector_32E9charIndex>
    1d38:	22 2f       	mov	r18, r18
    1d3a:	30 e0       	ldi	r19, 0x00	; 0
    1d3c:	24 0f       	add	r18, r20
    1d3e:	35 1f       	adc	r19, r21
    1d40:	f9 01       	movw	r30, r18
    1d42:	20 81       	ld	r18, Z
    1d44:	fc 01       	movw	r30, r24
    1d46:	22 83       	std	Z+2, r18	; 0x02
    1d48:	16 c0       	rjmp	.+44     	; 0x1d76 <__vector_32+0xc6>
		}
		else
		{
			charIndex = 0;
    1d4a:	10 92 45 47 	sts	0x4745, r1	; 0x804745 <_ZZ11__vector_32E9charIndex>
			(*buff)[0] = '\0';
    1d4e:	80 91 43 47 	lds	r24, 0x4743	; 0x804743 <_ZZ11__vector_32E4buff>
    1d52:	90 91 44 47 	lds	r25, 0x4744	; 0x804744 <_ZZ11__vector_32E4buff+0x1>
    1d56:	fc 01       	movw	r30, r24
    1d58:	10 82       	st	Z, r1
			buff = nextFullSBTxBuffer();
    1d5a:	0e 94 4c 58 	call	0xb098	; 0xb098 <nextFullSBTxBuffer>
    1d5e:	80 93 43 47 	sts	0x4743, r24	; 0x804743 <_ZZ11__vector_32E4buff>
    1d62:	90 93 44 47 	sts	0x4744, r25	; 0x804744 <_ZZ11__vector_32E4buff+0x1>
			if(!buff)
    1d66:	80 91 43 47 	lds	r24, 0x4743	; 0x804743 <_ZZ11__vector_32E4buff>
    1d6a:	90 91 44 47 	lds	r25, 0x4744	; 0x804744 <_ZZ11__vector_32E4buff+0x1>
    1d6e:	89 2b       	or	r24, r25
    1d70:	11 f4       	brne	.+4      	; 0x1d76 <__vector_32+0xc6>
			{
				serialbus_end_tx();
    1d72:	0e 94 a1 59 	call	0xb342	; 0xb342 <serialbus_end_tx>
			}
		}
	}
	
	if(g_linkbus_usart_number == USART_1)
    1d76:	80 91 22 40 	lds	r24, 0x4022	; 0x804022 <g_linkbus_usart_number>
    1d7a:	81 30       	cpi	r24, 0x01	; 1
    1d7c:	09 f0       	breq	.+2      	; 0x1d80 <__vector_32+0xd0>
    1d7e:	45 c0       	rjmp	.+138    	; 0x1e0a <__vector_32+0x15a>
	{
		static LinkbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
    1d80:	80 91 46 47 	lds	r24, 0x4746	; 0x804746 <_ZZ11__vector_32E4buff_0>
    1d84:	90 91 47 47 	lds	r25, 0x4747	; 0x804747 <_ZZ11__vector_32E4buff_0+0x1>
    1d88:	89 2b       	or	r24, r25
    1d8a:	31 f4       	brne	.+12     	; 0x1d98 <__vector_32+0xe8>
		{
			buff = nextFullLBTxBuffer();
    1d8c:	0e 94 55 4f 	call	0x9eaa	; 0x9eaa <_Z18nextFullLBTxBufferv>
    1d90:	80 93 46 47 	sts	0x4746, r24	; 0x804746 <_ZZ11__vector_32E4buff_0>
    1d94:	90 93 47 47 	sts	0x4747, r25	; 0x804747 <_ZZ11__vector_32E4buff_0+0x1>
		}

		if((*buff)[charIndex])
    1d98:	20 91 46 47 	lds	r18, 0x4746	; 0x804746 <_ZZ11__vector_32E4buff_0>
    1d9c:	30 91 47 47 	lds	r19, 0x4747	; 0x804747 <_ZZ11__vector_32E4buff_0+0x1>
    1da0:	80 91 48 47 	lds	r24, 0x4748	; 0x804748 <_ZZ11__vector_32E9charIndex_0>
    1da4:	88 2f       	mov	r24, r24
    1da6:	90 e0       	ldi	r25, 0x00	; 0
    1da8:	82 0f       	add	r24, r18
    1daa:	93 1f       	adc	r25, r19
    1dac:	fc 01       	movw	r30, r24
    1dae:	80 81       	ld	r24, Z
    1db0:	88 23       	and	r24, r24
    1db2:	a9 f0       	breq	.+42     	; 0x1dde <__vector_32+0x12e>
		{
			/* Put data into buffer, sends the data */
			USART1.TXDATAL = (*buff)[charIndex++];
    1db4:	80 e2       	ldi	r24, 0x20	; 32
    1db6:	98 e0       	ldi	r25, 0x08	; 8
    1db8:	40 91 46 47 	lds	r20, 0x4746	; 0x804746 <_ZZ11__vector_32E4buff_0>
    1dbc:	50 91 47 47 	lds	r21, 0x4747	; 0x804747 <_ZZ11__vector_32E4buff_0+0x1>
    1dc0:	20 91 48 47 	lds	r18, 0x4748	; 0x804748 <_ZZ11__vector_32E9charIndex_0>
    1dc4:	31 e0       	ldi	r19, 0x01	; 1
    1dc6:	32 0f       	add	r19, r18
    1dc8:	30 93 48 47 	sts	0x4748, r19	; 0x804748 <_ZZ11__vector_32E9charIndex_0>
    1dcc:	22 2f       	mov	r18, r18
    1dce:	30 e0       	ldi	r19, 0x00	; 0
    1dd0:	24 0f       	add	r18, r20
    1dd2:	35 1f       	adc	r19, r21
    1dd4:	f9 01       	movw	r30, r18
    1dd6:	20 81       	ld	r18, Z
    1dd8:	fc 01       	movw	r30, r24
    1dda:	22 83       	std	Z+2, r18	; 0x02
			{
				linkbus_end_tx();
			}
		}
	}
}
    1ddc:	16 c0       	rjmp	.+44     	; 0x1e0a <__vector_32+0x15a>
			/* Put data into buffer, sends the data */
			USART1.TXDATAL = (*buff)[charIndex++];
		}
		else
		{
			charIndex = 0;
    1dde:	10 92 48 47 	sts	0x4748, r1	; 0x804748 <_ZZ11__vector_32E9charIndex_0>
			(*buff)[0] = '\0';
    1de2:	80 91 46 47 	lds	r24, 0x4746	; 0x804746 <_ZZ11__vector_32E4buff_0>
    1de6:	90 91 47 47 	lds	r25, 0x4747	; 0x804747 <_ZZ11__vector_32E4buff_0+0x1>
    1dea:	fc 01       	movw	r30, r24
    1dec:	10 82       	st	Z, r1
			buff = nextFullLBTxBuffer();
    1dee:	0e 94 55 4f 	call	0x9eaa	; 0x9eaa <_Z18nextFullLBTxBufferv>
    1df2:	80 93 46 47 	sts	0x4746, r24	; 0x804746 <_ZZ11__vector_32E4buff_0>
    1df6:	90 93 47 47 	sts	0x4747, r25	; 0x804747 <_ZZ11__vector_32E4buff_0+0x1>
			if(!buff)
    1dfa:	80 91 46 47 	lds	r24, 0x4746	; 0x804746 <_ZZ11__vector_32E4buff_0>
    1dfe:	90 91 47 47 	lds	r25, 0x4747	; 0x804747 <_ZZ11__vector_32E4buff_0+0x1>
    1e02:	89 2b       	or	r24, r25
    1e04:	11 f4       	brne	.+4      	; 0x1e0a <__vector_32+0x15a>
			{
				linkbus_end_tx();
    1e06:	0e 94 9a 50 	call	0xa134	; 0xa134 <_Z14linkbus_end_txv>
			}
		}
	}
}
    1e0a:	00 00       	nop
    1e0c:	df 91       	pop	r29
    1e0e:	cf 91       	pop	r28
    1e10:	ff 91       	pop	r31
    1e12:	ef 91       	pop	r30
    1e14:	bf 91       	pop	r27
    1e16:	af 91       	pop	r26
    1e18:	9f 91       	pop	r25
    1e1a:	8f 91       	pop	r24
    1e1c:	7f 91       	pop	r23
    1e1e:	6f 91       	pop	r22
    1e20:	5f 91       	pop	r21
    1e22:	4f 91       	pop	r20
    1e24:	3f 91       	pop	r19
    1e26:	2f 91       	pop	r18
    1e28:	0f 90       	pop	r0
    1e2a:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    1e2e:	0f 90       	pop	r0
    1e30:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    1e34:	0f 90       	pop	r0
    1e36:	1f 90       	pop	r1
    1e38:	18 95       	reti

00001e3a <PORTA_set_pin_level>:
}

void initializeAllEventSettings(bool disableEvent)
{
	
}
    1e3a:	cf 93       	push	r28
    1e3c:	df 93       	push	r29
    1e3e:	00 d0       	rcall	.+0      	; 0x1e40 <PORTA_set_pin_level+0x6>
    1e40:	cd b7       	in	r28, 0x3d	; 61
    1e42:	de b7       	in	r29, 0x3e	; 62
    1e44:	89 83       	std	Y+1, r24	; 0x01
    1e46:	6a 83       	std	Y+2, r22	; 0x02
    1e48:	8a 81       	ldd	r24, Y+2	; 0x02
    1e4a:	88 23       	and	r24, r24
    1e4c:	a9 f0       	breq	.+42     	; 0x1e78 <PORTA_set_pin_level+0x3e>
    1e4e:	20 e0       	ldi	r18, 0x00	; 0
    1e50:	30 e0       	ldi	r19, 0x00	; 0
    1e52:	80 e0       	ldi	r24, 0x00	; 0
    1e54:	90 e0       	ldi	r25, 0x00	; 0
    1e56:	fc 01       	movw	r30, r24
    1e58:	81 81       	ldd	r24, Z+1	; 0x01
    1e5a:	68 2f       	mov	r22, r24
    1e5c:	89 81       	ldd	r24, Y+1	; 0x01
    1e5e:	48 2f       	mov	r20, r24
    1e60:	50 e0       	ldi	r21, 0x00	; 0
    1e62:	81 e0       	ldi	r24, 0x01	; 1
    1e64:	90 e0       	ldi	r25, 0x00	; 0
    1e66:	02 c0       	rjmp	.+4      	; 0x1e6c <PORTA_set_pin_level+0x32>
    1e68:	88 0f       	add	r24, r24
    1e6a:	99 1f       	adc	r25, r25
    1e6c:	4a 95       	dec	r20
    1e6e:	e2 f7       	brpl	.-8      	; 0x1e68 <PORTA_set_pin_level+0x2e>
    1e70:	86 2b       	or	r24, r22
    1e72:	f9 01       	movw	r30, r18
    1e74:	81 83       	std	Z+1, r24	; 0x01
    1e76:	15 c0       	rjmp	.+42     	; 0x1ea2 <PORTA_set_pin_level+0x68>
    1e78:	20 e0       	ldi	r18, 0x00	; 0
    1e7a:	30 e0       	ldi	r19, 0x00	; 0
    1e7c:	80 e0       	ldi	r24, 0x00	; 0
    1e7e:	90 e0       	ldi	r25, 0x00	; 0
    1e80:	fc 01       	movw	r30, r24
    1e82:	81 81       	ldd	r24, Z+1	; 0x01
    1e84:	68 2f       	mov	r22, r24
    1e86:	89 81       	ldd	r24, Y+1	; 0x01
    1e88:	48 2f       	mov	r20, r24
    1e8a:	50 e0       	ldi	r21, 0x00	; 0
    1e8c:	81 e0       	ldi	r24, 0x01	; 1
    1e8e:	90 e0       	ldi	r25, 0x00	; 0
    1e90:	02 c0       	rjmp	.+4      	; 0x1e96 <PORTA_set_pin_level+0x5c>
    1e92:	88 0f       	add	r24, r24
    1e94:	99 1f       	adc	r25, r25
    1e96:	4a 95       	dec	r20
    1e98:	e2 f7       	brpl	.-8      	; 0x1e92 <PORTA_set_pin_level+0x58>
    1e9a:	80 95       	com	r24
    1e9c:	86 23       	and	r24, r22
    1e9e:	f9 01       	movw	r30, r18
    1ea0:	81 83       	std	Z+1, r24	; 0x01
    1ea2:	00 00       	nop
    1ea4:	0f 90       	pop	r0
    1ea6:	0f 90       	pop	r0
    1ea8:	df 91       	pop	r29
    1eaa:	cf 91       	pop	r28
    1eac:	08 95       	ret

00001eae <PORTB_set_pin_level>:
    1eae:	cf 93       	push	r28
    1eb0:	df 93       	push	r29
    1eb2:	00 d0       	rcall	.+0      	; 0x1eb4 <PORTB_set_pin_level+0x6>
    1eb4:	cd b7       	in	r28, 0x3d	; 61
    1eb6:	de b7       	in	r29, 0x3e	; 62
    1eb8:	89 83       	std	Y+1, r24	; 0x01
    1eba:	6a 83       	std	Y+2, r22	; 0x02
    1ebc:	8a 81       	ldd	r24, Y+2	; 0x02
    1ebe:	88 23       	and	r24, r24
    1ec0:	a9 f0       	breq	.+42     	; 0x1eec <PORTB_set_pin_level+0x3e>
    1ec2:	84 e0       	ldi	r24, 0x04	; 4
    1ec4:	90 e0       	ldi	r25, 0x00	; 0
    1ec6:	24 e0       	ldi	r18, 0x04	; 4
    1ec8:	30 e0       	ldi	r19, 0x00	; 0
    1eca:	f9 01       	movw	r30, r18
    1ecc:	21 81       	ldd	r18, Z+1	; 0x01
    1ece:	62 2f       	mov	r22, r18
    1ed0:	29 81       	ldd	r18, Y+1	; 0x01
    1ed2:	42 2f       	mov	r20, r18
    1ed4:	50 e0       	ldi	r21, 0x00	; 0
    1ed6:	21 e0       	ldi	r18, 0x01	; 1
    1ed8:	30 e0       	ldi	r19, 0x00	; 0
    1eda:	02 c0       	rjmp	.+4      	; 0x1ee0 <PORTB_set_pin_level+0x32>
    1edc:	22 0f       	add	r18, r18
    1ede:	33 1f       	adc	r19, r19
    1ee0:	4a 95       	dec	r20
    1ee2:	e2 f7       	brpl	.-8      	; 0x1edc <PORTB_set_pin_level+0x2e>
    1ee4:	26 2b       	or	r18, r22
    1ee6:	fc 01       	movw	r30, r24
    1ee8:	21 83       	std	Z+1, r18	; 0x01
    1eea:	15 c0       	rjmp	.+42     	; 0x1f16 <PORTB_set_pin_level+0x68>
    1eec:	84 e0       	ldi	r24, 0x04	; 4
    1eee:	90 e0       	ldi	r25, 0x00	; 0
    1ef0:	24 e0       	ldi	r18, 0x04	; 4
    1ef2:	30 e0       	ldi	r19, 0x00	; 0
    1ef4:	f9 01       	movw	r30, r18
    1ef6:	21 81       	ldd	r18, Z+1	; 0x01
    1ef8:	62 2f       	mov	r22, r18
    1efa:	29 81       	ldd	r18, Y+1	; 0x01
    1efc:	42 2f       	mov	r20, r18
    1efe:	50 e0       	ldi	r21, 0x00	; 0
    1f00:	21 e0       	ldi	r18, 0x01	; 1
    1f02:	30 e0       	ldi	r19, 0x00	; 0
    1f04:	02 c0       	rjmp	.+4      	; 0x1f0a <PORTB_set_pin_level+0x5c>
    1f06:	22 0f       	add	r18, r18
    1f08:	33 1f       	adc	r19, r19
    1f0a:	4a 95       	dec	r20
    1f0c:	e2 f7       	brpl	.-8      	; 0x1f06 <PORTB_set_pin_level+0x58>
    1f0e:	20 95       	com	r18
    1f10:	26 23       	and	r18, r22
    1f12:	fc 01       	movw	r30, r24
    1f14:	21 83       	std	Z+1, r18	; 0x01
    1f16:	00 00       	nop
    1f18:	0f 90       	pop	r0
    1f1a:	0f 90       	pop	r0
    1f1c:	df 91       	pop	r29
    1f1e:	cf 91       	pop	r28
    1f20:	08 95       	ret

00001f22 <PORTC_set_pin_pull_mode>:
    1f22:	cf 93       	push	r28
    1f24:	df 93       	push	r29
    1f26:	00 d0       	rcall	.+0      	; 0x1f28 <PORTC_set_pin_pull_mode+0x6>
    1f28:	00 d0       	rcall	.+0      	; 0x1f2a <PORTC_set_pin_pull_mode+0x8>
    1f2a:	cd b7       	in	r28, 0x3d	; 61
    1f2c:	de b7       	in	r29, 0x3e	; 62
    1f2e:	8b 83       	std	Y+3, r24	; 0x03
    1f30:	6c 83       	std	Y+4, r22	; 0x04
    1f32:	8b 81       	ldd	r24, Y+3	; 0x03
    1f34:	88 2f       	mov	r24, r24
    1f36:	90 e0       	ldi	r25, 0x00	; 0
    1f38:	80 5b       	subi	r24, 0xB0	; 176
    1f3a:	9b 4f       	sbci	r25, 0xFB	; 251
    1f3c:	89 83       	std	Y+1, r24	; 0x01
    1f3e:	9a 83       	std	Y+2, r25	; 0x02
    1f40:	8c 81       	ldd	r24, Y+4	; 0x04
    1f42:	81 30       	cpi	r24, 0x01	; 1
    1f44:	59 f4       	brne	.+22     	; 0x1f5c <PORTC_set_pin_pull_mode+0x3a>
    1f46:	89 81       	ldd	r24, Y+1	; 0x01
    1f48:	9a 81       	ldd	r25, Y+2	; 0x02
    1f4a:	fc 01       	movw	r30, r24
    1f4c:	80 81       	ld	r24, Z
    1f4e:	28 2f       	mov	r18, r24
    1f50:	28 60       	ori	r18, 0x08	; 8
    1f52:	89 81       	ldd	r24, Y+1	; 0x01
    1f54:	9a 81       	ldd	r25, Y+2	; 0x02
    1f56:	fc 01       	movw	r30, r24
    1f58:	20 83       	st	Z, r18
    1f5a:	0d c0       	rjmp	.+26     	; 0x1f76 <PORTC_set_pin_pull_mode+0x54>
    1f5c:	8c 81       	ldd	r24, Y+4	; 0x04
    1f5e:	88 23       	and	r24, r24
    1f60:	51 f4       	brne	.+20     	; 0x1f76 <PORTC_set_pin_pull_mode+0x54>
    1f62:	89 81       	ldd	r24, Y+1	; 0x01
    1f64:	9a 81       	ldd	r25, Y+2	; 0x02
    1f66:	fc 01       	movw	r30, r24
    1f68:	80 81       	ld	r24, Z
    1f6a:	28 2f       	mov	r18, r24
    1f6c:	27 7f       	andi	r18, 0xF7	; 247
    1f6e:	89 81       	ldd	r24, Y+1	; 0x01
    1f70:	9a 81       	ldd	r25, Y+2	; 0x02
    1f72:	fc 01       	movw	r30, r24
    1f74:	20 83       	st	Z, r18
    1f76:	00 00       	nop
    1f78:	24 96       	adiw	r28, 0x04	; 4
    1f7a:	cd bf       	out	0x3d, r28	; 61
    1f7c:	de bf       	out	0x3e, r29	; 62
    1f7e:	df 91       	pop	r29
    1f80:	cf 91       	pop	r28
    1f82:	08 95       	ret

00001f84 <PORTC_set_pin_dir>:
    1f84:	cf 93       	push	r28
    1f86:	df 93       	push	r29
    1f88:	00 d0       	rcall	.+0      	; 0x1f8a <PORTC_set_pin_dir+0x6>
    1f8a:	cd b7       	in	r28, 0x3d	; 61
    1f8c:	de b7       	in	r29, 0x3e	; 62
    1f8e:	89 83       	std	Y+1, r24	; 0x01
    1f90:	6a 83       	std	Y+2, r22	; 0x02
    1f92:	8a 81       	ldd	r24, Y+2	; 0x02
    1f94:	88 2f       	mov	r24, r24
    1f96:	90 e0       	ldi	r25, 0x00	; 0
    1f98:	81 30       	cpi	r24, 0x01	; 1
    1f9a:	91 05       	cpc	r25, r1
    1f9c:	e1 f0       	breq	.+56     	; 0x1fd6 <PORTC_set_pin_dir+0x52>
    1f9e:	82 30       	cpi	r24, 0x02	; 2
    1fa0:	91 05       	cpc	r25, r1
    1fa2:	71 f1       	breq	.+92     	; 0x2000 <PORTC_set_pin_dir+0x7c>
    1fa4:	89 2b       	or	r24, r25
    1fa6:	09 f0       	breq	.+2      	; 0x1faa <PORTC_set_pin_dir+0x26>
    1fa8:	3b c0       	rjmp	.+118    	; 0x2020 <PORTC_set_pin_dir+0x9c>
    1faa:	88 e0       	ldi	r24, 0x08	; 8
    1fac:	90 e0       	ldi	r25, 0x00	; 0
    1fae:	28 e0       	ldi	r18, 0x08	; 8
    1fb0:	30 e0       	ldi	r19, 0x00	; 0
    1fb2:	f9 01       	movw	r30, r18
    1fb4:	20 81       	ld	r18, Z
    1fb6:	62 2f       	mov	r22, r18
    1fb8:	29 81       	ldd	r18, Y+1	; 0x01
    1fba:	42 2f       	mov	r20, r18
    1fbc:	50 e0       	ldi	r21, 0x00	; 0
    1fbe:	21 e0       	ldi	r18, 0x01	; 1
    1fc0:	30 e0       	ldi	r19, 0x00	; 0
    1fc2:	02 c0       	rjmp	.+4      	; 0x1fc8 <PORTC_set_pin_dir+0x44>
    1fc4:	22 0f       	add	r18, r18
    1fc6:	33 1f       	adc	r19, r19
    1fc8:	4a 95       	dec	r20
    1fca:	e2 f7       	brpl	.-8      	; 0x1fc4 <PORTC_set_pin_dir+0x40>
    1fcc:	20 95       	com	r18
    1fce:	26 23       	and	r18, r22
    1fd0:	fc 01       	movw	r30, r24
    1fd2:	20 83       	st	Z, r18
    1fd4:	25 c0       	rjmp	.+74     	; 0x2020 <PORTC_set_pin_dir+0x9c>
    1fd6:	88 e0       	ldi	r24, 0x08	; 8
    1fd8:	90 e0       	ldi	r25, 0x00	; 0
    1fda:	28 e0       	ldi	r18, 0x08	; 8
    1fdc:	30 e0       	ldi	r19, 0x00	; 0
    1fde:	f9 01       	movw	r30, r18
    1fe0:	20 81       	ld	r18, Z
    1fe2:	62 2f       	mov	r22, r18
    1fe4:	29 81       	ldd	r18, Y+1	; 0x01
    1fe6:	42 2f       	mov	r20, r18
    1fe8:	50 e0       	ldi	r21, 0x00	; 0
    1fea:	21 e0       	ldi	r18, 0x01	; 1
    1fec:	30 e0       	ldi	r19, 0x00	; 0
    1fee:	02 c0       	rjmp	.+4      	; 0x1ff4 <PORTC_set_pin_dir+0x70>
    1ff0:	22 0f       	add	r18, r18
    1ff2:	33 1f       	adc	r19, r19
    1ff4:	4a 95       	dec	r20
    1ff6:	e2 f7       	brpl	.-8      	; 0x1ff0 <PORTC_set_pin_dir+0x6c>
    1ff8:	26 2b       	or	r18, r22
    1ffa:	fc 01       	movw	r30, r24
    1ffc:	20 83       	st	Z, r18
    1ffe:	10 c0       	rjmp	.+32     	; 0x2020 <PORTC_set_pin_dir+0x9c>
    2000:	89 81       	ldd	r24, Y+1	; 0x01
    2002:	88 2f       	mov	r24, r24
    2004:	90 e0       	ldi	r25, 0x00	; 0
    2006:	80 5b       	subi	r24, 0xB0	; 176
    2008:	9b 4f       	sbci	r25, 0xFB	; 251
    200a:	29 81       	ldd	r18, Y+1	; 0x01
    200c:	22 2f       	mov	r18, r18
    200e:	30 e0       	ldi	r19, 0x00	; 0
    2010:	20 5b       	subi	r18, 0xB0	; 176
    2012:	3b 4f       	sbci	r19, 0xFB	; 251
    2014:	f9 01       	movw	r30, r18
    2016:	20 81       	ld	r18, Z
    2018:	28 60       	ori	r18, 0x08	; 8
    201a:	fc 01       	movw	r30, r24
    201c:	20 83       	st	Z, r18
    201e:	00 00       	nop
    2020:	00 00       	nop
    2022:	0f 90       	pop	r0
    2024:	0f 90       	pop	r0
    2026:	df 91       	pop	r29
    2028:	cf 91       	pop	r28
    202a:	08 95       	ret

0000202c <PORTC_set_pin_level>:
    202c:	cf 93       	push	r28
    202e:	df 93       	push	r29
    2030:	00 d0       	rcall	.+0      	; 0x2032 <PORTC_set_pin_level+0x6>
    2032:	cd b7       	in	r28, 0x3d	; 61
    2034:	de b7       	in	r29, 0x3e	; 62
    2036:	89 83       	std	Y+1, r24	; 0x01
    2038:	6a 83       	std	Y+2, r22	; 0x02
    203a:	8a 81       	ldd	r24, Y+2	; 0x02
    203c:	88 23       	and	r24, r24
    203e:	a9 f0       	breq	.+42     	; 0x206a <PORTC_set_pin_level+0x3e>
    2040:	88 e0       	ldi	r24, 0x08	; 8
    2042:	90 e0       	ldi	r25, 0x00	; 0
    2044:	28 e0       	ldi	r18, 0x08	; 8
    2046:	30 e0       	ldi	r19, 0x00	; 0
    2048:	f9 01       	movw	r30, r18
    204a:	21 81       	ldd	r18, Z+1	; 0x01
    204c:	62 2f       	mov	r22, r18
    204e:	29 81       	ldd	r18, Y+1	; 0x01
    2050:	42 2f       	mov	r20, r18
    2052:	50 e0       	ldi	r21, 0x00	; 0
    2054:	21 e0       	ldi	r18, 0x01	; 1
    2056:	30 e0       	ldi	r19, 0x00	; 0
    2058:	02 c0       	rjmp	.+4      	; 0x205e <PORTC_set_pin_level+0x32>
    205a:	22 0f       	add	r18, r18
    205c:	33 1f       	adc	r19, r19
    205e:	4a 95       	dec	r20
    2060:	e2 f7       	brpl	.-8      	; 0x205a <PORTC_set_pin_level+0x2e>
    2062:	26 2b       	or	r18, r22
    2064:	fc 01       	movw	r30, r24
    2066:	21 83       	std	Z+1, r18	; 0x01
    2068:	15 c0       	rjmp	.+42     	; 0x2094 <PORTC_set_pin_level+0x68>
    206a:	88 e0       	ldi	r24, 0x08	; 8
    206c:	90 e0       	ldi	r25, 0x00	; 0
    206e:	28 e0       	ldi	r18, 0x08	; 8
    2070:	30 e0       	ldi	r19, 0x00	; 0
    2072:	f9 01       	movw	r30, r18
    2074:	21 81       	ldd	r18, Z+1	; 0x01
    2076:	62 2f       	mov	r22, r18
    2078:	29 81       	ldd	r18, Y+1	; 0x01
    207a:	42 2f       	mov	r20, r18
    207c:	50 e0       	ldi	r21, 0x00	; 0
    207e:	21 e0       	ldi	r18, 0x01	; 1
    2080:	30 e0       	ldi	r19, 0x00	; 0
    2082:	02 c0       	rjmp	.+4      	; 0x2088 <PORTC_set_pin_level+0x5c>
    2084:	22 0f       	add	r18, r18
    2086:	33 1f       	adc	r19, r19
    2088:	4a 95       	dec	r20
    208a:	e2 f7       	brpl	.-8      	; 0x2084 <PORTC_set_pin_level+0x58>
    208c:	20 95       	com	r18
    208e:	26 23       	and	r18, r22
    2090:	fc 01       	movw	r30, r24
    2092:	21 83       	std	Z+1, r18	; 0x01
    2094:	00 00       	nop
    2096:	0f 90       	pop	r0
    2098:	0f 90       	pop	r0
    209a:	df 91       	pop	r29
    209c:	cf 91       	pop	r28
    209e:	08 95       	ret

000020a0 <PORTC_toggle_pin_level>:
    20a0:	cf 93       	push	r28
    20a2:	df 93       	push	r29
    20a4:	1f 92       	push	r1
    20a6:	cd b7       	in	r28, 0x3d	; 61
    20a8:	de b7       	in	r29, 0x3e	; 62
    20aa:	89 83       	std	Y+1, r24	; 0x01
    20ac:	88 e0       	ldi	r24, 0x08	; 8
    20ae:	90 e0       	ldi	r25, 0x00	; 0
    20b0:	28 e0       	ldi	r18, 0x08	; 8
    20b2:	30 e0       	ldi	r19, 0x00	; 0
    20b4:	f9 01       	movw	r30, r18
    20b6:	22 81       	ldd	r18, Z+2	; 0x02
    20b8:	62 2f       	mov	r22, r18
    20ba:	29 81       	ldd	r18, Y+1	; 0x01
    20bc:	42 2f       	mov	r20, r18
    20be:	50 e0       	ldi	r21, 0x00	; 0
    20c0:	21 e0       	ldi	r18, 0x01	; 1
    20c2:	30 e0       	ldi	r19, 0x00	; 0
    20c4:	02 c0       	rjmp	.+4      	; 0x20ca <PORTC_toggle_pin_level+0x2a>
    20c6:	22 0f       	add	r18, r18
    20c8:	33 1f       	adc	r19, r19
    20ca:	4a 95       	dec	r20
    20cc:	e2 f7       	brpl	.-8      	; 0x20c6 <PORTC_toggle_pin_level+0x26>
    20ce:	26 2b       	or	r18, r22
    20d0:	fc 01       	movw	r30, r24
    20d2:	22 83       	std	Z+2, r18	; 0x02
    20d4:	00 00       	nop
    20d6:	0f 90       	pop	r0
    20d8:	df 91       	pop	r29
    20da:	cf 91       	pop	r28
    20dc:	08 95       	ret

000020de <PORTC_get_pin_level>:
    20de:	cf 93       	push	r28
    20e0:	df 93       	push	r29
    20e2:	1f 92       	push	r1
    20e4:	cd b7       	in	r28, 0x3d	; 61
    20e6:	de b7       	in	r29, 0x3e	; 62
    20e8:	89 83       	std	Y+1, r24	; 0x01
    20ea:	88 e0       	ldi	r24, 0x08	; 8
    20ec:	90 e0       	ldi	r25, 0x00	; 0
    20ee:	fc 01       	movw	r30, r24
    20f0:	82 81       	ldd	r24, Z+2	; 0x02
    20f2:	88 2f       	mov	r24, r24
    20f4:	90 e0       	ldi	r25, 0x00	; 0
    20f6:	29 81       	ldd	r18, Y+1	; 0x01
    20f8:	22 2f       	mov	r18, r18
    20fa:	30 e0       	ldi	r19, 0x00	; 0
    20fc:	02 c0       	rjmp	.+4      	; 0x2102 <PORTC_get_pin_level+0x24>
    20fe:	95 95       	asr	r25
    2100:	87 95       	ror	r24
    2102:	2a 95       	dec	r18
    2104:	e2 f7       	brpl	.-8      	; 0x20fe <PORTC_get_pin_level+0x20>
    2106:	81 70       	andi	r24, 0x01	; 1
    2108:	99 27       	eor	r25, r25
    210a:	21 e0       	ldi	r18, 0x01	; 1
    210c:	89 2b       	or	r24, r25
    210e:	09 f4       	brne	.+2      	; 0x2112 <PORTC_get_pin_level+0x34>
    2110:	20 e0       	ldi	r18, 0x00	; 0
    2112:	82 2f       	mov	r24, r18
    2114:	0f 90       	pop	r0
    2116:	df 91       	pop	r29
    2118:	cf 91       	pop	r28
    211a:	08 95       	ret

0000211c <PORTD_get_pin_level>:
    211c:	cf 93       	push	r28
    211e:	df 93       	push	r29
    2120:	1f 92       	push	r1
    2122:	cd b7       	in	r28, 0x3d	; 61
    2124:	de b7       	in	r29, 0x3e	; 62
    2126:	89 83       	std	Y+1, r24	; 0x01
    2128:	8c e0       	ldi	r24, 0x0C	; 12
    212a:	90 e0       	ldi	r25, 0x00	; 0
    212c:	fc 01       	movw	r30, r24
    212e:	82 81       	ldd	r24, Z+2	; 0x02
    2130:	88 2f       	mov	r24, r24
    2132:	90 e0       	ldi	r25, 0x00	; 0
    2134:	29 81       	ldd	r18, Y+1	; 0x01
    2136:	22 2f       	mov	r18, r18
    2138:	30 e0       	ldi	r19, 0x00	; 0
    213a:	02 c0       	rjmp	.+4      	; 0x2140 <PORTD_get_pin_level+0x24>
    213c:	95 95       	asr	r25
    213e:	87 95       	ror	r24
    2140:	2a 95       	dec	r18
    2142:	e2 f7       	brpl	.-8      	; 0x213c <PORTD_get_pin_level+0x20>
    2144:	81 70       	andi	r24, 0x01	; 1
    2146:	99 27       	eor	r25, r25
    2148:	21 e0       	ldi	r18, 0x01	; 1
    214a:	89 2b       	or	r24, r25
    214c:	09 f4       	brne	.+2      	; 0x2150 <PORTD_get_pin_level+0x34>
    214e:	20 e0       	ldi	r18, 0x00	; 0
    2150:	82 2f       	mov	r24, r18
    2152:	0f 90       	pop	r0
    2154:	df 91       	pop	r29
    2156:	cf 91       	pop	r28
    2158:	08 95       	ret

0000215a <LED_set_RED_level>:
    215a:	cf 93       	push	r28
    215c:	df 93       	push	r29
    215e:	1f 92       	push	r1
    2160:	cd b7       	in	r28, 0x3d	; 61
    2162:	de b7       	in	r29, 0x3e	; 62
    2164:	89 83       	std	Y+1, r24	; 0x01
    2166:	69 81       	ldd	r22, Y+1	; 0x01
    2168:	86 e0       	ldi	r24, 0x06	; 6
    216a:	0e 94 16 10 	call	0x202c	; 0x202c <PORTC_set_pin_level>
    216e:	00 00       	nop
    2170:	0f 90       	pop	r0
    2172:	df 91       	pop	r29
    2174:	cf 91       	pop	r28
    2176:	08 95       	ret

00002178 <LED_toggle_GREEN_level>:
    2178:	cf 93       	push	r28
    217a:	df 93       	push	r29
    217c:	cd b7       	in	r28, 0x3d	; 61
    217e:	de b7       	in	r29, 0x3e	; 62
    2180:	85 e0       	ldi	r24, 0x05	; 5
    2182:	0e 94 50 10 	call	0x20a0	; 0x20a0 <PORTC_toggle_pin_level>
    2186:	00 00       	nop
    2188:	df 91       	pop	r29
    218a:	cf 91       	pop	r28
    218c:	08 95       	ret

0000218e <__vector_41>:
    218e:	1f 92       	push	r1
    2190:	0f 92       	push	r0
    2192:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    2196:	0f 92       	push	r0
    2198:	11 24       	eor	r1, r1
    219a:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    219e:	0f 92       	push	r0
    21a0:	2f 93       	push	r18
    21a2:	8f 93       	push	r24
    21a4:	9f 93       	push	r25
    21a6:	ef 93       	push	r30
    21a8:	ff 93       	push	r31
    21aa:	cf 93       	push	r28
    21ac:	df 93       	push	r29
    21ae:	cd b7       	in	r28, 0x3d	; 61
    21b0:	de b7       	in	r29, 0x3e	; 62
    21b2:	80 e3       	ldi	r24, 0x30	; 48
    21b4:	9b e0       	ldi	r25, 0x0B	; 11
    21b6:	fc 01       	movw	r30, r24
    21b8:	86 81       	ldd	r24, Z+6	; 0x06
    21ba:	88 2f       	mov	r24, r24
    21bc:	90 e0       	ldi	r25, 0x00	; 0
    21be:	81 70       	andi	r24, 0x01	; 1
    21c0:	99 27       	eor	r25, r25
    21c2:	21 e0       	ldi	r18, 0x01	; 1
    21c4:	89 2b       	or	r24, r25
    21c6:	09 f4       	brne	.+2      	; 0x21ca <__vector_41+0x3c>
    21c8:	20 e0       	ldi	r18, 0x00	; 0
    21ca:	22 23       	and	r18, r18
    21cc:	29 f0       	breq	.+10     	; 0x21d8 <__vector_41+0x4a>
    21ce:	80 e3       	ldi	r24, 0x30	; 48
    21d0:	9b e0       	ldi	r25, 0x0B	; 11
    21d2:	21 e0       	ldi	r18, 0x01	; 1
    21d4:	fc 01       	movw	r30, r24
    21d6:	26 83       	std	Z+6, r18	; 0x06
    21d8:	00 00       	nop
    21da:	df 91       	pop	r29
    21dc:	cf 91       	pop	r28
    21de:	ff 91       	pop	r31
    21e0:	ef 91       	pop	r30
    21e2:	9f 91       	pop	r25
    21e4:	8f 91       	pop	r24
    21e6:	2f 91       	pop	r18
    21e8:	0f 90       	pop	r0
    21ea:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    21ee:	0f 90       	pop	r0
    21f0:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    21f4:	0f 90       	pop	r0
    21f6:	1f 90       	pop	r1
    21f8:	18 95       	reti

000021fa <__vector_6>:
    21fa:	1f 92       	push	r1
    21fc:	0f 92       	push	r0
    21fe:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    2202:	0f 92       	push	r0
    2204:	11 24       	eor	r1, r1
    2206:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    220a:	0f 92       	push	r0
    220c:	ef 92       	push	r14
    220e:	ff 92       	push	r15
    2210:	0f 93       	push	r16
    2212:	1f 93       	push	r17
    2214:	2f 93       	push	r18
    2216:	3f 93       	push	r19
    2218:	4f 93       	push	r20
    221a:	5f 93       	push	r21
    221c:	6f 93       	push	r22
    221e:	7f 93       	push	r23
    2220:	8f 93       	push	r24
    2222:	9f 93       	push	r25
    2224:	af 93       	push	r26
    2226:	bf 93       	push	r27
    2228:	ef 93       	push	r30
    222a:	ff 93       	push	r31
    222c:	cf 93       	push	r28
    222e:	df 93       	push	r29
    2230:	cd b7       	in	r28, 0x3d	; 61
    2232:	de b7       	in	r29, 0x3e	; 62
    2234:	2f 97       	sbiw	r28, 0x0f	; 15
    2236:	cd bf       	out	0x3d, r28	; 61
    2238:	de bf       	out	0x3e, r29	; 62
    223a:	80 e0       	ldi	r24, 0x00	; 0
    223c:	94 e0       	ldi	r25, 0x04	; 4
    223e:	fc 01       	movw	r30, r24
    2240:	81 85       	ldd	r24, Z+9	; 0x09
    2242:	88 2f       	mov	r24, r24
    2244:	90 e0       	ldi	r25, 0x00	; 0
    2246:	84 70       	andi	r24, 0x04	; 4
    2248:	99 27       	eor	r25, r25
    224a:	21 e0       	ldi	r18, 0x01	; 1
    224c:	89 2b       	or	r24, r25
    224e:	09 f4       	brne	.+2      	; 0x2252 <__vector_6+0x58>
    2250:	20 e0       	ldi	r18, 0x00	; 0
    2252:	22 23       	and	r18, r18
    2254:	09 f4       	brne	.+2      	; 0x2258 <__vector_6+0x5e>
    2256:	ed c3       	rjmp	.+2010   	; 0x2a32 <__vector_6+0x838>
    2258:	90 91 c4 47 	lds	r25, 0x47C4	; 0x8047c4 <g_event_enabled>
    225c:	81 e0       	ldi	r24, 0x01	; 1
    225e:	89 27       	eor	r24, r25
    2260:	88 23       	and	r24, r24
    2262:	11 f0       	breq	.+4      	; 0x2268 <__vector_6+0x6e>
    2264:	0e 94 bc 10 	call	0x2178	; 0x2178 <LED_toggle_GREEN_level>
    2268:	0e 94 e0 05 	call	0xbc0	; 0xbc0 <system_tick>
    226c:	80 91 c9 47 	lds	r24, 0x47C9	; 0x8047c9 <_ZL10g_sleeping>
    2270:	88 23       	and	r24, r24
    2272:	09 f4       	brne	.+2      	; 0x2276 <__vector_6+0x7c>
    2274:	3e c0       	rjmp	.+124    	; 0x22f2 <__vector_6+0xf8>
    2276:	80 91 ca 47 	lds	r24, 0x47CA	; 0x8047ca <_ZL23g_seconds_left_to_sleep>
    227a:	90 91 cb 47 	lds	r25, 0x47CB	; 0x8047cb <_ZL23g_seconds_left_to_sleep+0x1>
    227e:	a0 91 cc 47 	lds	r26, 0x47CC	; 0x8047cc <_ZL23g_seconds_left_to_sleep+0x2>
    2282:	b0 91 cd 47 	lds	r27, 0x47CD	; 0x8047cd <_ZL23g_seconds_left_to_sleep+0x3>
    2286:	21 e0       	ldi	r18, 0x01	; 1
    2288:	89 2b       	or	r24, r25
    228a:	8a 2b       	or	r24, r26
    228c:	8b 2b       	or	r24, r27
    228e:	09 f4       	brne	.+2      	; 0x2292 <__vector_6+0x98>
    2290:	20 e0       	ldi	r18, 0x00	; 0
    2292:	22 23       	and	r18, r18
    2294:	99 f0       	breq	.+38     	; 0x22bc <__vector_6+0xc2>
    2296:	80 91 ca 47 	lds	r24, 0x47CA	; 0x8047ca <_ZL23g_seconds_left_to_sleep>
    229a:	90 91 cb 47 	lds	r25, 0x47CB	; 0x8047cb <_ZL23g_seconds_left_to_sleep+0x1>
    229e:	a0 91 cc 47 	lds	r26, 0x47CC	; 0x8047cc <_ZL23g_seconds_left_to_sleep+0x2>
    22a2:	b0 91 cd 47 	lds	r27, 0x47CD	; 0x8047cd <_ZL23g_seconds_left_to_sleep+0x3>
    22a6:	01 97       	sbiw	r24, 0x01	; 1
    22a8:	a1 09       	sbc	r26, r1
    22aa:	b1 09       	sbc	r27, r1
    22ac:	80 93 ca 47 	sts	0x47CA, r24	; 0x8047ca <_ZL23g_seconds_left_to_sleep>
    22b0:	90 93 cb 47 	sts	0x47CB, r25	; 0x8047cb <_ZL23g_seconds_left_to_sleep+0x1>
    22b4:	a0 93 cc 47 	sts	0x47CC, r26	; 0x8047cc <_ZL23g_seconds_left_to_sleep+0x2>
    22b8:	b0 93 cd 47 	sts	0x47CD, r27	; 0x8047cd <_ZL23g_seconds_left_to_sleep+0x3>
    22bc:	80 91 ca 47 	lds	r24, 0x47CA	; 0x8047ca <_ZL23g_seconds_left_to_sleep>
    22c0:	90 91 cb 47 	lds	r25, 0x47CB	; 0x8047cb <_ZL23g_seconds_left_to_sleep+0x1>
    22c4:	a0 91 cc 47 	lds	r26, 0x47CC	; 0x8047cc <_ZL23g_seconds_left_to_sleep+0x2>
    22c8:	b0 91 cd 47 	lds	r27, 0x47CD	; 0x8047cd <_ZL23g_seconds_left_to_sleep+0x3>
    22cc:	89 2b       	or	r24, r25
    22ce:	8a 2b       	or	r24, r26
    22d0:	8b 2b       	or	r24, r27
    22d2:	21 f0       	breq	.+8      	; 0x22dc <__vector_6+0xe2>
    22d4:	80 91 06 40 	lds	r24, 0x4006	; 0x804006 <_ZL28g_antenna_connection_changed>
    22d8:	88 23       	and	r24, r24
    22da:	11 f0       	breq	.+4      	; 0x22e0 <__vector_6+0xe6>
    22dc:	81 e0       	ldi	r24, 0x01	; 1
    22de:	01 c0       	rjmp	.+2      	; 0x22e2 <__vector_6+0xe8>
    22e0:	80 e0       	ldi	r24, 0x00	; 0
    22e2:	88 23       	and	r24, r24
    22e4:	09 f4       	brne	.+2      	; 0x22e8 <__vector_6+0xee>
    22e6:	a5 c3       	rjmp	.+1866   	; 0x2a32 <__vector_6+0x838>
    22e8:	10 92 c8 47 	sts	0x47C8, r1	; 0x8047c8 <_ZL13g_go_to_sleep>
    22ec:	10 92 c9 47 	sts	0x47C9, r1	; 0x8047c9 <_ZL10g_sleeping>
    22f0:	a0 c3       	rjmp	.+1856   	; 0x2a32 <__vector_6+0x838>
    22f2:	19 86       	std	Y+9, r1	; 0x09
    22f4:	1a 86       	std	Y+10, r1	; 0x0a
    22f6:	1b 86       	std	Y+11, r1	; 0x0b
    22f8:	1c 86       	std	Y+12, r1	; 0x0c
    22fa:	80 91 13 40 	lds	r24, 0x4013	; 0x804013 <g_update_timeout_seconds>
    22fe:	90 91 14 40 	lds	r25, 0x4014	; 0x804014 <g_update_timeout_seconds+0x1>
    2302:	21 e0       	ldi	r18, 0x01	; 1
    2304:	89 2b       	or	r24, r25
    2306:	09 f4       	brne	.+2      	; 0x230a <__vector_6+0x110>
    2308:	20 e0       	ldi	r18, 0x00	; 0
    230a:	22 23       	and	r18, r18
    230c:	49 f0       	breq	.+18     	; 0x2320 <__vector_6+0x126>
    230e:	80 91 13 40 	lds	r24, 0x4013	; 0x804013 <g_update_timeout_seconds>
    2312:	90 91 14 40 	lds	r25, 0x4014	; 0x804014 <g_update_timeout_seconds+0x1>
    2316:	01 97       	sbiw	r24, 0x01	; 1
    2318:	80 93 13 40 	sts	0x4013, r24	; 0x804013 <g_update_timeout_seconds>
    231c:	90 93 14 40 	sts	0x4014, r25	; 0x804014 <g_update_timeout_seconds+0x1>
    2320:	80 91 c5 47 	lds	r24, 0x47C5	; 0x8047c5 <g_event_commenced>
    2324:	88 23       	and	r24, r24
    2326:	09 f4       	brne	.+2      	; 0x232a <__vector_6+0x130>
    2328:	5c c0       	rjmp	.+184    	; 0x23e2 <__vector_6+0x1e8>
    232a:	80 91 c0 47 	lds	r24, 0x47C0	; 0x8047c0 <g_event_finish_epoch>
    232e:	90 91 c1 47 	lds	r25, 0x47C1	; 0x8047c1 <g_event_finish_epoch+0x1>
    2332:	a0 91 c2 47 	lds	r26, 0x47C2	; 0x8047c2 <g_event_finish_epoch+0x2>
    2336:	b0 91 c3 47 	lds	r27, 0x47C3	; 0x8047c3 <g_event_finish_epoch+0x3>
    233a:	89 2b       	or	r24, r25
    233c:	8a 2b       	or	r24, r26
    233e:	8b 2b       	or	r24, r27
    2340:	71 f0       	breq	.+28     	; 0x235e <__vector_6+0x164>
    2342:	90 91 c6 47 	lds	r25, 0x47C6	; 0x8047c6 <g_check_for_next_event>
    2346:	81 e0       	ldi	r24, 0x01	; 1
    2348:	89 27       	eor	r24, r25
    234a:	88 23       	and	r24, r24
    234c:	41 f0       	breq	.+16     	; 0x235e <__vector_6+0x164>
    234e:	90 91 8c 47 	lds	r25, 0x478C	; 0x80478c <_ZL20g_shutting_down_wifi>
    2352:	81 e0       	ldi	r24, 0x01	; 1
    2354:	89 27       	eor	r24, r25
    2356:	88 23       	and	r24, r24
    2358:	11 f0       	breq	.+4      	; 0x235e <__vector_6+0x164>
    235a:	81 e0       	ldi	r24, 0x01	; 1
    235c:	01 c0       	rjmp	.+2      	; 0x2360 <__vector_6+0x166>
    235e:	80 e0       	ldi	r24, 0x00	; 0
    2360:	88 23       	and	r24, r24
    2362:	09 f4       	brne	.+2      	; 0x2366 <__vector_6+0x16c>
    2364:	3e c0       	rjmp	.+124    	; 0x23e2 <__vector_6+0x1e8>
    2366:	ce 01       	movw	r24, r28
    2368:	09 96       	adiw	r24, 0x09	; 9
    236a:	0e 94 ae 05 	call	0xb5c	; 0xb5c <time>
    236e:	29 85       	ldd	r18, Y+9	; 0x09
    2370:	3a 85       	ldd	r19, Y+10	; 0x0a
    2372:	4b 85       	ldd	r20, Y+11	; 0x0b
    2374:	5c 85       	ldd	r21, Y+12	; 0x0c
    2376:	80 91 c0 47 	lds	r24, 0x47C0	; 0x8047c0 <g_event_finish_epoch>
    237a:	90 91 c1 47 	lds	r25, 0x47C1	; 0x8047c1 <g_event_finish_epoch+0x1>
    237e:	a0 91 c2 47 	lds	r26, 0x47C2	; 0x8047c2 <g_event_finish_epoch+0x2>
    2382:	b0 91 c3 47 	lds	r27, 0x47C3	; 0x8047c3 <g_event_finish_epoch+0x3>
    2386:	61 e0       	ldi	r22, 0x01	; 1
    2388:	28 17       	cp	r18, r24
    238a:	39 07       	cpc	r19, r25
    238c:	4a 07       	cpc	r20, r26
    238e:	5b 07       	cpc	r21, r27
    2390:	08 f4       	brcc	.+2      	; 0x2394 <__vector_6+0x19a>
    2392:	60 e0       	ldi	r22, 0x00	; 0
    2394:	66 23       	and	r22, r22
    2396:	29 f1       	breq	.+74     	; 0x23e2 <__vector_6+0x1e8>
    2398:	8c ef       	ldi	r24, 0xFC	; 252
    239a:	80 93 7c 47 	sts	0x477C, r24	; 0x80477c <_ZL18g_last_status_code>
    239e:	10 92 84 47 	sts	0x4784, r1	; 0x804784 <_ZL12g_on_the_air>
    23a2:	10 92 85 47 	sts	0x4785, r1	; 0x804785 <_ZL12g_on_the_air+0x1>
    23a6:	10 92 86 47 	sts	0x4786, r1	; 0x804786 <_ZL12g_on_the_air+0x2>
    23aa:	10 92 87 47 	sts	0x4787, r1	; 0x804787 <_ZL12g_on_the_air+0x3>
    23ae:	80 e0       	ldi	r24, 0x00	; 0
    23b0:	0e 94 a0 67 	call	0xcf40	; 0xcf40 <_Z14keyTransmitterb>
    23b4:	10 92 c4 47 	sts	0x47C4, r1	; 0x8047c4 <g_event_enabled>
    23b8:	10 92 c5 47 	sts	0x47C5, r1	; 0x8047c5 <g_event_commenced>
    23bc:	81 e0       	ldi	r24, 0x01	; 1
    23be:	80 93 c6 47 	sts	0x47C6, r24	; 0x8047c6 <g_check_for_next_event>
    23c2:	8a e5       	ldi	r24, 0x5A	; 90
    23c4:	90 e0       	ldi	r25, 0x00	; 0
    23c6:	80 93 13 40 	sts	0x4013, r24	; 0x804013 <g_update_timeout_seconds>
    23ca:	90 93 14 40 	sts	0x4014, r25	; 0x804014 <g_update_timeout_seconds+0x1>
    23ce:	80 91 0a 40 	lds	r24, 0x400A	; 0x80400a <_ZL13g_wifi_active>
    23d2:	88 23       	and	r24, r24
    23d4:	19 f0       	breq	.+6      	; 0x23dc <__vector_6+0x1e2>
    23d6:	8c e3       	ldi	r24, 0x3C	; 60
    23d8:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    23dc:	80 e0       	ldi	r24, 0x00	; 0
    23de:	0e 94 ad 10 	call	0x215a	; 0x215a <LED_set_RED_level>
    23e2:	80 91 c4 47 	lds	r24, 0x47C4	; 0x8047c4 <g_event_enabled>
    23e6:	88 23       	and	r24, r24
    23e8:	09 f4       	brne	.+2      	; 0x23ec <__vector_6+0x1f2>
    23ea:	92 c2       	rjmp	.+1316   	; 0x2910 <__vector_6+0x716>
    23ec:	80 91 c5 47 	lds	r24, 0x47C5	; 0x8047c5 <g_event_commenced>
    23f0:	88 23       	and	r24, r24
    23f2:	09 f4       	brne	.+2      	; 0x23f6 <__vector_6+0x1fc>
    23f4:	f0 c1       	rjmp	.+992    	; 0x27d6 <__vector_6+0x5dc>
    23f6:	80 91 88 47 	lds	r24, 0x4788	; 0x804788 <_ZL26g_sendID_seconds_countdown>
    23fa:	90 91 89 47 	lds	r25, 0x4789	; 0x804789 <_ZL26g_sendID_seconds_countdown+0x1>
    23fe:	21 e0       	ldi	r18, 0x01	; 1
    2400:	89 2b       	or	r24, r25
    2402:	09 f4       	brne	.+2      	; 0x2406 <__vector_6+0x20c>
    2404:	20 e0       	ldi	r18, 0x00	; 0
    2406:	22 23       	and	r18, r18
    2408:	49 f0       	breq	.+18     	; 0x241c <__vector_6+0x222>
    240a:	80 91 88 47 	lds	r24, 0x4788	; 0x804788 <_ZL26g_sendID_seconds_countdown>
    240e:	90 91 89 47 	lds	r25, 0x4789	; 0x804789 <_ZL26g_sendID_seconds_countdown+0x1>
    2412:	01 97       	sbiw	r24, 0x01	; 1
    2414:	80 93 88 47 	sts	0x4788, r24	; 0x804788 <_ZL26g_sendID_seconds_countdown>
    2418:	90 93 89 47 	sts	0x4789, r25	; 0x804789 <_ZL26g_sendID_seconds_countdown+0x1>
    241c:	80 91 84 47 	lds	r24, 0x4784	; 0x804784 <_ZL12g_on_the_air>
    2420:	90 91 85 47 	lds	r25, 0x4785	; 0x804785 <_ZL12g_on_the_air+0x1>
    2424:	a0 91 86 47 	lds	r26, 0x4786	; 0x804786 <_ZL12g_on_the_air+0x2>
    2428:	b0 91 87 47 	lds	r27, 0x4787	; 0x804787 <_ZL12g_on_the_air+0x3>
    242c:	21 e0       	ldi	r18, 0x01	; 1
    242e:	89 2b       	or	r24, r25
    2430:	8a 2b       	or	r24, r26
    2432:	8b 2b       	or	r24, r27
    2434:	09 f4       	brne	.+2      	; 0x2438 <__vector_6+0x23e>
    2436:	20 e0       	ldi	r18, 0x00	; 0
    2438:	22 23       	and	r18, r18
    243a:	09 f4       	brne	.+2      	; 0x243e <__vector_6+0x244>
    243c:	69 c2       	rjmp	.+1234   	; 0x2910 <__vector_6+0x716>
    243e:	80 91 84 47 	lds	r24, 0x4784	; 0x804784 <_ZL12g_on_the_air>
    2442:	90 91 85 47 	lds	r25, 0x4785	; 0x804785 <_ZL12g_on_the_air+0x1>
    2446:	a0 91 86 47 	lds	r26, 0x4786	; 0x804786 <_ZL12g_on_the_air+0x2>
    244a:	b0 91 87 47 	lds	r27, 0x4787	; 0x804787 <_ZL12g_on_the_air+0x3>
    244e:	21 e0       	ldi	r18, 0x01	; 1
    2450:	18 16       	cp	r1, r24
    2452:	19 06       	cpc	r1, r25
    2454:	1a 06       	cpc	r1, r26
    2456:	1b 06       	cpc	r1, r27
    2458:	0c f0       	brlt	.+2      	; 0x245c <__vector_6+0x262>
    245a:	20 e0       	ldi	r18, 0x00	; 0
    245c:	22 23       	and	r18, r18
    245e:	09 f4       	brne	.+2      	; 0x2462 <__vector_6+0x268>
    2460:	5e c1       	rjmp	.+700    	; 0x271e <__vector_6+0x524>
    2462:	80 91 84 47 	lds	r24, 0x4784	; 0x804784 <_ZL12g_on_the_air>
    2466:	90 91 85 47 	lds	r25, 0x4785	; 0x804785 <_ZL12g_on_the_air+0x1>
    246a:	a0 91 86 47 	lds	r26, 0x4786	; 0x804786 <_ZL12g_on_the_air+0x2>
    246e:	b0 91 87 47 	lds	r27, 0x4787	; 0x804787 <_ZL12g_on_the_air+0x3>
    2472:	01 97       	sbiw	r24, 0x01	; 1
    2474:	a1 09       	sbc	r26, r1
    2476:	b1 09       	sbc	r27, r1
    2478:	80 93 84 47 	sts	0x4784, r24	; 0x804784 <_ZL12g_on_the_air>
    247c:	90 93 85 47 	sts	0x4785, r25	; 0x804785 <_ZL12g_on_the_air+0x1>
    2480:	a0 93 86 47 	sts	0x4786, r26	; 0x804786 <_ZL12g_on_the_air+0x2>
    2484:	b0 93 87 47 	sts	0x4787, r27	; 0x804787 <_ZL12g_on_the_air+0x3>
    2488:	80 91 88 47 	lds	r24, 0x4788	; 0x804788 <_ZL26g_sendID_seconds_countdown>
    248c:	90 91 89 47 	lds	r25, 0x4789	; 0x804789 <_ZL26g_sendID_seconds_countdown+0x1>
    2490:	89 2b       	or	r24, r25
    2492:	41 f4       	brne	.+16     	; 0x24a4 <__vector_6+0x2aa>
    2494:	80 91 b8 47 	lds	r24, 0x47B8	; 0x8047b8 <g_time_needed_for_ID>
    2498:	90 91 b9 47 	lds	r25, 0x47B9	; 0x8047b9 <g_time_needed_for_ID+0x1>
    249c:	89 2b       	or	r24, r25
    249e:	11 f0       	breq	.+4      	; 0x24a4 <__vector_6+0x2aa>
    24a0:	81 e0       	ldi	r24, 0x01	; 1
    24a2:	01 c0       	rjmp	.+2      	; 0x24a6 <__vector_6+0x2ac>
    24a4:	80 e0       	ldi	r24, 0x00	; 0
    24a6:	88 23       	and	r24, r24
    24a8:	a9 f1       	breq	.+106    	; 0x2514 <__vector_6+0x31a>
    24aa:	80 91 b8 47 	lds	r24, 0x47B8	; 0x8047b8 <g_time_needed_for_ID>
    24ae:	90 91 b9 47 	lds	r25, 0x47B9	; 0x8047b9 <g_time_needed_for_ID+0x1>
    24b2:	9c 01       	movw	r18, r24
    24b4:	40 e0       	ldi	r20, 0x00	; 0
    24b6:	50 e0       	ldi	r21, 0x00	; 0
    24b8:	80 91 84 47 	lds	r24, 0x4784	; 0x804784 <_ZL12g_on_the_air>
    24bc:	90 91 85 47 	lds	r25, 0x4785	; 0x804785 <_ZL12g_on_the_air+0x1>
    24c0:	a0 91 86 47 	lds	r26, 0x4786	; 0x804786 <_ZL12g_on_the_air+0x2>
    24c4:	b0 91 87 47 	lds	r27, 0x4787	; 0x804787 <_ZL12g_on_the_air+0x3>
    24c8:	61 e0       	ldi	r22, 0x01	; 1
    24ca:	28 17       	cp	r18, r24
    24cc:	39 07       	cpc	r19, r25
    24ce:	4a 07       	cpc	r20, r26
    24d0:	5b 07       	cpc	r21, r27
    24d2:	09 f0       	breq	.+2      	; 0x24d6 <__vector_6+0x2dc>
    24d4:	60 e0       	ldi	r22, 0x00	; 0
    24d6:	66 23       	and	r22, r22
    24d8:	e9 f0       	breq	.+58     	; 0x2514 <__vector_6+0x31a>
    24da:	8f ee       	ldi	r24, 0xEF	; 239
    24dc:	80 93 7c 47 	sts	0x477C, r24	; 0x80477c <_ZL18g_last_status_code>
    24e0:	80 91 11 40 	lds	r24, 0x4011	; 0x804011 <g_ID_period_seconds>
    24e4:	90 91 12 40 	lds	r25, 0x4012	; 0x804012 <g_ID_period_seconds+0x1>
    24e8:	80 93 88 47 	sts	0x4788, r24	; 0x804788 <_ZL26g_sendID_seconds_countdown>
    24ec:	90 93 89 47 	sts	0x4789, r25	; 0x804789 <_ZL26g_sendID_seconds_countdown+0x1>
    24f0:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    24f4:	0e 94 4f 27 	call	0x4e9e	; 0x4e9e <_Z13throttleValueh>
    24f8:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    24fc:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    2500:	1d 86       	std	Y+13, r1	; 0x0d
    2502:	ce 01       	movw	r24, r28
    2504:	0d 96       	adiw	r24, 0x0d	; 13
    2506:	40 e0       	ldi	r20, 0x00	; 0
    2508:	50 e0       	ldi	r21, 0x00	; 0
    250a:	bc 01       	movw	r22, r24
    250c:	83 ea       	ldi	r24, 0xA3	; 163
    250e:	97 e4       	ldi	r25, 0x47	; 71
    2510:	0e 94 f3 52 	call	0xa5e6	; 0xa5e6 <_Z9makeMorsePcPbS0_>
    2514:	80 91 84 47 	lds	r24, 0x4784	; 0x804784 <_ZL12g_on_the_air>
    2518:	90 91 85 47 	lds	r25, 0x4785	; 0x804785 <_ZL12g_on_the_air+0x1>
    251c:	a0 91 86 47 	lds	r26, 0x4786	; 0x804786 <_ZL12g_on_the_air+0x2>
    2520:	b0 91 87 47 	lds	r27, 0x4787	; 0x804787 <_ZL12g_on_the_air+0x3>
    2524:	21 e0       	ldi	r18, 0x01	; 1
    2526:	89 2b       	or	r24, r25
    2528:	8a 2b       	or	r24, r26
    252a:	8b 2b       	or	r24, r27
    252c:	09 f0       	breq	.+2      	; 0x2530 <__vector_6+0x336>
    252e:	20 e0       	ldi	r18, 0x00	; 0
    2530:	22 23       	and	r18, r18
    2532:	09 f4       	brne	.+2      	; 0x2536 <__vector_6+0x33c>
    2534:	ed c1       	rjmp	.+986    	; 0x2910 <__vector_6+0x716>
    2536:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_off_air_seconds>
    253a:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    253e:	21 e0       	ldi	r18, 0x01	; 1
    2540:	89 2b       	or	r24, r25
    2542:	09 f4       	brne	.+2      	; 0x2546 <__vector_6+0x34c>
    2544:	20 e0       	ldi	r18, 0x00	; 0
    2546:	22 23       	and	r18, r18
    2548:	09 f4       	brne	.+2      	; 0x254c <__vector_6+0x352>
    254a:	d0 c0       	rjmp	.+416    	; 0x26ec <__vector_6+0x4f2>
    254c:	80 e0       	ldi	r24, 0x00	; 0
    254e:	0e 94 a0 67 	call	0xcf40	; 0xcf40 <_Z14keyTransmitterb>
    2552:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_off_air_seconds>
    2556:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    255a:	20 91 84 47 	lds	r18, 0x4784	; 0x804784 <_ZL12g_on_the_air>
    255e:	30 91 85 47 	lds	r19, 0x4785	; 0x804785 <_ZL12g_on_the_air+0x1>
    2562:	40 91 86 47 	lds	r20, 0x4786	; 0x804786 <_ZL12g_on_the_air+0x2>
    2566:	50 91 87 47 	lds	r21, 0x4787	; 0x804787 <_ZL12g_on_the_air+0x3>
    256a:	09 2e       	mov	r0, r25
    256c:	00 0c       	add	r0, r0
    256e:	aa 0b       	sbc	r26, r26
    2570:	bb 0b       	sbc	r27, r27
    2572:	79 01       	movw	r14, r18
    2574:	8a 01       	movw	r16, r20
    2576:	e8 1a       	sub	r14, r24
    2578:	f9 0a       	sbc	r15, r25
    257a:	0a 0b       	sbc	r16, r26
    257c:	1b 0b       	sbc	r17, r27
    257e:	d8 01       	movw	r26, r16
    2580:	c7 01       	movw	r24, r14
    2582:	80 93 84 47 	sts	0x4784, r24	; 0x804784 <_ZL12g_on_the_air>
    2586:	90 93 85 47 	sts	0x4785, r25	; 0x804785 <_ZL12g_on_the_air+0x1>
    258a:	a0 93 86 47 	sts	0x4786, r26	; 0x804786 <_ZL12g_on_the_air+0x2>
    258e:	b0 93 87 47 	sts	0x4787, r27	; 0x804787 <_ZL12g_on_the_air+0x3>
    2592:	81 e0       	ldi	r24, 0x01	; 1
    2594:	8d 87       	std	Y+13, r24	; 0x0d
    2596:	ce 01       	movw	r24, r28
    2598:	0d 96       	adiw	r24, 0x0d	; 13
    259a:	40 e0       	ldi	r20, 0x00	; 0
    259c:	50 e0       	ldi	r21, 0x00	; 0
    259e:	bc 01       	movw	r22, r24
    25a0:	8e e8       	ldi	r24, 0x8E	; 142
    25a2:	97 e4       	ldi	r25, 0x47	; 71
    25a4:	0e 94 f3 52 	call	0xa5e6	; 0xa5e6 <_Z9makeMorsePcPbS0_>
    25a8:	8e ef       	ldi	r24, 0xFE	; 254
    25aa:	80 93 7c 47 	sts	0x477C, r24	; 0x80477c <_ZL18g_last_status_code>
    25ae:	80 e0       	ldi	r24, 0x00	; 0
    25b0:	0e 94 ad 10 	call	0x215a	; 0x215a <LED_set_RED_level>
    25b4:	19 82       	std	Y+1, r1	; 0x01
    25b6:	1a 82       	std	Y+2, r1	; 0x02
    25b8:	1b 82       	std	Y+3, r1	; 0x03
    25ba:	1c 82       	std	Y+4, r1	; 0x04
    25bc:	ce 01       	movw	r24, r28
    25be:	09 96       	adiw	r24, 0x09	; 9
    25c0:	0e 94 ae 05 	call	0xb5c	; 0xb5c <time>
    25c4:	29 85       	ldd	r18, Y+9	; 0x09
    25c6:	3a 85       	ldd	r19, Y+10	; 0x0a
    25c8:	4b 85       	ldd	r20, Y+11	; 0x0b
    25ca:	5c 85       	ldd	r21, Y+12	; 0x0c
    25cc:	80 91 c0 47 	lds	r24, 0x47C0	; 0x8047c0 <g_event_finish_epoch>
    25d0:	90 91 c1 47 	lds	r25, 0x47C1	; 0x8047c1 <g_event_finish_epoch+0x1>
    25d4:	a0 91 c2 47 	lds	r26, 0x47C2	; 0x8047c2 <g_event_finish_epoch+0x2>
    25d8:	b0 91 c3 47 	lds	r27, 0x47C3	; 0x8047c3 <g_event_finish_epoch+0x3>
    25dc:	61 e0       	ldi	r22, 0x01	; 1
    25de:	28 17       	cp	r18, r24
    25e0:	39 07       	cpc	r19, r25
    25e2:	4a 07       	cpc	r20, r26
    25e4:	5b 07       	cpc	r21, r27
    25e6:	08 f0       	brcs	.+2      	; 0x25ea <__vector_6+0x3f0>
    25e8:	60 e0       	ldi	r22, 0x00	; 0
    25ea:	66 23       	and	r22, r22
    25ec:	b1 f0       	breq	.+44     	; 0x261a <__vector_6+0x420>
    25ee:	29 85       	ldd	r18, Y+9	; 0x09
    25f0:	3a 85       	ldd	r19, Y+10	; 0x0a
    25f2:	4b 85       	ldd	r20, Y+11	; 0x0b
    25f4:	5c 85       	ldd	r21, Y+12	; 0x0c
    25f6:	80 91 c0 47 	lds	r24, 0x47C0	; 0x8047c0 <g_event_finish_epoch>
    25fa:	90 91 c1 47 	lds	r25, 0x47C1	; 0x8047c1 <g_event_finish_epoch+0x1>
    25fe:	a0 91 c2 47 	lds	r26, 0x47C2	; 0x8047c2 <g_event_finish_epoch+0x2>
    2602:	b0 91 c3 47 	lds	r27, 0x47C3	; 0x8047c3 <g_event_finish_epoch+0x3>
    2606:	bc 01       	movw	r22, r24
    2608:	cd 01       	movw	r24, r26
    260a:	0e 94 83 6b 	call	0xd706	; 0xd706 <_Z7timeDifmm>
    260e:	dc 01       	movw	r26, r24
    2610:	cb 01       	movw	r24, r22
    2612:	89 83       	std	Y+1, r24	; 0x01
    2614:	9a 83       	std	Y+2, r25	; 0x02
    2616:	ab 83       	std	Y+3, r26	; 0x03
    2618:	bc 83       	std	Y+4, r27	; 0x04
    261a:	20 91 0f 40 	lds	r18, 0x400F	; 0x80400f <g_off_air_seconds>
    261e:	30 91 10 40 	lds	r19, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    2622:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    2626:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    262a:	82 0f       	add	r24, r18
    262c:	93 1f       	adc	r25, r19
    262e:	0f 96       	adiw	r24, 0x0f	; 15
    2630:	9c 01       	movw	r18, r24
    2632:	99 0f       	add	r25, r25
    2634:	44 0b       	sbc	r20, r20
    2636:	55 0b       	sbc	r21, r21
    2638:	61 e0       	ldi	r22, 0x01	; 1
    263a:	89 81       	ldd	r24, Y+1	; 0x01
    263c:	9a 81       	ldd	r25, Y+2	; 0x02
    263e:	ab 81       	ldd	r26, Y+3	; 0x03
    2640:	bc 81       	ldd	r27, Y+4	; 0x04
    2642:	28 17       	cp	r18, r24
    2644:	39 07       	cpc	r19, r25
    2646:	4a 07       	cpc	r20, r26
    2648:	5b 07       	cpc	r21, r27
    264a:	0c f0       	brlt	.+2      	; 0x264e <__vector_6+0x454>
    264c:	60 e0       	ldi	r22, 0x00	; 0
    264e:	66 23       	and	r22, r22
    2650:	09 f4       	brne	.+2      	; 0x2654 <__vector_6+0x45a>
    2652:	5e c1       	rjmp	.+700    	; 0x2910 <__vector_6+0x716>
    2654:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_off_air_seconds>
    2658:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    265c:	40 97       	sbiw	r24, 0x10	; 16
    265e:	34 f0       	brlt	.+12     	; 0x266c <__vector_6+0x472>
    2660:	80 91 09 40 	lds	r24, 0x4009	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    2664:	88 23       	and	r24, r24
    2666:	11 f4       	brne	.+4      	; 0x266c <__vector_6+0x472>
    2668:	81 e0       	ldi	r24, 0x01	; 1
    266a:	01 c0       	rjmp	.+2      	; 0x266e <__vector_6+0x474>
    266c:	80 e0       	ldi	r24, 0x00	; 0
    266e:	88 23       	and	r24, r24
    2670:	09 f4       	brne	.+2      	; 0x2674 <__vector_6+0x47a>
    2672:	4e c1       	rjmp	.+668    	; 0x2910 <__vector_6+0x716>
    2674:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_off_air_seconds>
    2678:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    267c:	0a 97       	sbiw	r24, 0x0a	; 10
    267e:	09 2e       	mov	r0, r25
    2680:	00 0c       	add	r0, r0
    2682:	aa 0b       	sbc	r26, r26
    2684:	bb 0b       	sbc	r27, r27
    2686:	80 93 17 40 	sts	0x4017, r24	; 0x804017 <_ZL18g_seconds_to_sleep>
    268a:	90 93 18 40 	sts	0x4018, r25	; 0x804018 <_ZL18g_seconds_to_sleep+0x1>
    268e:	a0 93 19 40 	sts	0x4019, r26	; 0x804019 <_ZL18g_seconds_to_sleep+0x2>
    2692:	b0 93 1a 40 	sts	0x401A, r27	; 0x80401a <_ZL18g_seconds_to_sleep+0x3>
    2696:	82 e0       	ldi	r24, 0x02	; 2
    2698:	80 93 8d 47 	sts	0x478D, r24	; 0x80478d <_ZL11g_sleepType>
    269c:	81 e0       	ldi	r24, 0x01	; 1
    269e:	80 93 c8 47 	sts	0x47C8, r24	; 0x8047c8 <_ZL13g_go_to_sleep>
    26a2:	1d 82       	std	Y+5, r1	; 0x05
    26a4:	1e 82       	std	Y+6, r1	; 0x06
    26a6:	20 91 88 47 	lds	r18, 0x4788	; 0x804788 <_ZL26g_sendID_seconds_countdown>
    26aa:	30 91 89 47 	lds	r19, 0x4789	; 0x804789 <_ZL26g_sendID_seconds_countdown+0x1>
    26ae:	80 91 17 40 	lds	r24, 0x4017	; 0x804017 <_ZL18g_seconds_to_sleep>
    26b2:	90 91 18 40 	lds	r25, 0x4018	; 0x804018 <_ZL18g_seconds_to_sleep+0x1>
    26b6:	a0 91 19 40 	lds	r26, 0x4019	; 0x804019 <_ZL18g_seconds_to_sleep+0x2>
    26ba:	b0 91 1a 40 	lds	r27, 0x401A	; 0x80401a <_ZL18g_seconds_to_sleep+0x3>
    26be:	89 01       	movw	r16, r18
    26c0:	08 1b       	sub	r16, r24
    26c2:	19 0b       	sbc	r17, r25
    26c4:	c8 01       	movw	r24, r16
    26c6:	8f 83       	std	Y+7, r24	; 0x07
    26c8:	98 87       	std	Y+8, r25	; 0x08
    26ca:	2d 81       	ldd	r18, Y+5	; 0x05
    26cc:	3e 81       	ldd	r19, Y+6	; 0x06
    26ce:	8f 81       	ldd	r24, Y+7	; 0x07
    26d0:	98 85       	ldd	r25, Y+8	; 0x08
    26d2:	28 17       	cp	r18, r24
    26d4:	39 07       	cpc	r19, r25
    26d6:	1c f4       	brge	.+6      	; 0x26de <__vector_6+0x4e4>
    26d8:	8f 81       	ldd	r24, Y+7	; 0x07
    26da:	98 85       	ldd	r25, Y+8	; 0x08
    26dc:	02 c0       	rjmp	.+4      	; 0x26e2 <__vector_6+0x4e8>
    26de:	8d 81       	ldd	r24, Y+5	; 0x05
    26e0:	9e 81       	ldd	r25, Y+6	; 0x06
    26e2:	80 93 88 47 	sts	0x4788, r24	; 0x804788 <_ZL26g_sendID_seconds_countdown>
    26e6:	90 93 89 47 	sts	0x4789, r25	; 0x804789 <_ZL26g_sendID_seconds_countdown+0x1>
    26ea:	12 c1       	rjmp	.+548    	; 0x2910 <__vector_6+0x716>
    26ec:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    26f0:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    26f4:	09 2e       	mov	r0, r25
    26f6:	00 0c       	add	r0, r0
    26f8:	aa 0b       	sbc	r26, r26
    26fa:	bb 0b       	sbc	r27, r27
    26fc:	80 93 84 47 	sts	0x4784, r24	; 0x804784 <_ZL12g_on_the_air>
    2700:	90 93 85 47 	sts	0x4785, r25	; 0x804785 <_ZL12g_on_the_air+0x1>
    2704:	a0 93 86 47 	sts	0x4786, r26	; 0x804786 <_ZL12g_on_the_air+0x2>
    2708:	b0 93 87 47 	sts	0x4787, r27	; 0x804787 <_ZL12g_on_the_air+0x3>
    270c:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    2710:	0e 94 4f 27 	call	0x4e9e	; 0x4e9e <_Z13throttleValueh>
    2714:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    2718:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    271c:	f9 c0       	rjmp	.+498    	; 0x2910 <__vector_6+0x716>
    271e:	80 91 84 47 	lds	r24, 0x4784	; 0x804784 <_ZL12g_on_the_air>
    2722:	90 91 85 47 	lds	r25, 0x4785	; 0x804785 <_ZL12g_on_the_air+0x1>
    2726:	a0 91 86 47 	lds	r26, 0x4786	; 0x804786 <_ZL12g_on_the_air+0x2>
    272a:	b0 91 87 47 	lds	r27, 0x4787	; 0x804787 <_ZL12g_on_the_air+0x3>
    272e:	88 27       	eor	r24, r24
    2730:	b7 fd       	sbrc	r27, 7
    2732:	83 95       	inc	r24
    2734:	99 27       	eor	r25, r25
    2736:	aa 27       	eor	r26, r26
    2738:	bb 27       	eor	r27, r27
    273a:	88 23       	and	r24, r24
    273c:	09 f4       	brne	.+2      	; 0x2740 <__vector_6+0x546>
    273e:	e8 c0       	rjmp	.+464    	; 0x2910 <__vector_6+0x716>
    2740:	80 91 84 47 	lds	r24, 0x4784	; 0x804784 <_ZL12g_on_the_air>
    2744:	90 91 85 47 	lds	r25, 0x4785	; 0x804785 <_ZL12g_on_the_air+0x1>
    2748:	a0 91 86 47 	lds	r26, 0x4786	; 0x804786 <_ZL12g_on_the_air+0x2>
    274c:	b0 91 87 47 	lds	r27, 0x4787	; 0x804787 <_ZL12g_on_the_air+0x3>
    2750:	01 96       	adiw	r24, 0x01	; 1
    2752:	a1 1d       	adc	r26, r1
    2754:	b1 1d       	adc	r27, r1
    2756:	80 93 84 47 	sts	0x4784, r24	; 0x804784 <_ZL12g_on_the_air>
    275a:	90 93 85 47 	sts	0x4785, r25	; 0x804785 <_ZL12g_on_the_air+0x1>
    275e:	a0 93 86 47 	sts	0x4786, r26	; 0x804786 <_ZL12g_on_the_air+0x2>
    2762:	b0 93 87 47 	sts	0x4787, r27	; 0x804787 <_ZL12g_on_the_air+0x3>
    2766:	80 91 84 47 	lds	r24, 0x4784	; 0x804784 <_ZL12g_on_the_air>
    276a:	90 91 85 47 	lds	r25, 0x4785	; 0x804785 <_ZL12g_on_the_air+0x1>
    276e:	a0 91 86 47 	lds	r26, 0x4786	; 0x804786 <_ZL12g_on_the_air+0x2>
    2772:	b0 91 87 47 	lds	r27, 0x4787	; 0x804787 <_ZL12g_on_the_air+0x3>
    2776:	21 e0       	ldi	r18, 0x01	; 1
    2778:	89 2b       	or	r24, r25
    277a:	8a 2b       	or	r24, r26
    277c:	8b 2b       	or	r24, r27
    277e:	09 f0       	breq	.+2      	; 0x2782 <__vector_6+0x588>
    2780:	20 e0       	ldi	r18, 0x00	; 0
    2782:	22 23       	and	r18, r18
    2784:	09 f4       	brne	.+2      	; 0x2788 <__vector_6+0x58e>
    2786:	c4 c0       	rjmp	.+392    	; 0x2910 <__vector_6+0x716>
    2788:	8d ef       	ldi	r24, 0xFD	; 253
    278a:	80 93 7c 47 	sts	0x477C, r24	; 0x80477c <_ZL18g_last_status_code>
    278e:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    2792:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    2796:	09 2e       	mov	r0, r25
    2798:	00 0c       	add	r0, r0
    279a:	aa 0b       	sbc	r26, r26
    279c:	bb 0b       	sbc	r27, r27
    279e:	80 93 84 47 	sts	0x4784, r24	; 0x804784 <_ZL12g_on_the_air>
    27a2:	90 93 85 47 	sts	0x4785, r25	; 0x804785 <_ZL12g_on_the_air+0x1>
    27a6:	a0 93 86 47 	sts	0x4786, r26	; 0x804786 <_ZL12g_on_the_air+0x2>
    27aa:	b0 93 87 47 	sts	0x4787, r27	; 0x804787 <_ZL12g_on_the_air+0x3>
    27ae:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    27b2:	0e 94 4f 27 	call	0x4e9e	; 0x4e9e <_Z13throttleValueh>
    27b6:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    27ba:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    27be:	81 e0       	ldi	r24, 0x01	; 1
    27c0:	8e 87       	std	Y+14, r24	; 0x0e
    27c2:	ce 01       	movw	r24, r28
    27c4:	0e 96       	adiw	r24, 0x0e	; 14
    27c6:	40 e0       	ldi	r20, 0x00	; 0
    27c8:	50 e0       	ldi	r21, 0x00	; 0
    27ca:	bc 01       	movw	r22, r24
    27cc:	8e e8       	ldi	r24, 0x8E	; 142
    27ce:	97 e4       	ldi	r25, 0x47	; 71
    27d0:	0e 94 f3 52 	call	0xa5e6	; 0xa5e6 <_Z9makeMorsePcPbS0_>
    27d4:	9d c0       	rjmp	.+314    	; 0x2910 <__vector_6+0x716>
    27d6:	80 91 bc 47 	lds	r24, 0x47BC	; 0x8047bc <g_event_start_epoch>
    27da:	90 91 bd 47 	lds	r25, 0x47BD	; 0x8047bd <g_event_start_epoch+0x1>
    27de:	a0 91 be 47 	lds	r26, 0x47BE	; 0x8047be <g_event_start_epoch+0x2>
    27e2:	b0 91 bf 47 	lds	r27, 0x47BF	; 0x8047bf <g_event_start_epoch+0x3>
    27e6:	21 e0       	ldi	r18, 0x01	; 1
    27e8:	89 2b       	or	r24, r25
    27ea:	8a 2b       	or	r24, r26
    27ec:	8b 2b       	or	r24, r27
    27ee:	09 f4       	brne	.+2      	; 0x27f2 <__vector_6+0x5f8>
    27f0:	20 e0       	ldi	r18, 0x00	; 0
    27f2:	22 23       	and	r18, r18
    27f4:	09 f4       	brne	.+2      	; 0x27f8 <__vector_6+0x5fe>
    27f6:	8c c0       	rjmp	.+280    	; 0x2910 <__vector_6+0x716>
    27f8:	ce 01       	movw	r24, r28
    27fa:	09 96       	adiw	r24, 0x09	; 9
    27fc:	0e 94 ae 05 	call	0xb5c	; 0xb5c <time>
    2800:	29 85       	ldd	r18, Y+9	; 0x09
    2802:	3a 85       	ldd	r19, Y+10	; 0x0a
    2804:	4b 85       	ldd	r20, Y+11	; 0x0b
    2806:	5c 85       	ldd	r21, Y+12	; 0x0c
    2808:	80 91 bc 47 	lds	r24, 0x47BC	; 0x8047bc <g_event_start_epoch>
    280c:	90 91 bd 47 	lds	r25, 0x47BD	; 0x8047bd <g_event_start_epoch+0x1>
    2810:	a0 91 be 47 	lds	r26, 0x47BE	; 0x8047be <g_event_start_epoch+0x2>
    2814:	b0 91 bf 47 	lds	r27, 0x47BF	; 0x8047bf <g_event_start_epoch+0x3>
    2818:	61 e0       	ldi	r22, 0x01	; 1
    281a:	28 17       	cp	r18, r24
    281c:	39 07       	cpc	r19, r25
    281e:	4a 07       	cpc	r20, r26
    2820:	5b 07       	cpc	r21, r27
    2822:	08 f4       	brcc	.+2      	; 0x2826 <__vector_6+0x62c>
    2824:	60 e0       	ldi	r22, 0x00	; 0
    2826:	66 23       	and	r22, r22
    2828:	09 f4       	brne	.+2      	; 0x282c <__vector_6+0x632>
    282a:	72 c0       	rjmp	.+228    	; 0x2910 <__vector_6+0x716>
    282c:	80 91 ba 47 	lds	r24, 0x47BA	; 0x8047ba <g_intra_cycle_delay_time>
    2830:	90 91 bb 47 	lds	r25, 0x47BB	; 0x8047bb <g_intra_cycle_delay_time+0x1>
    2834:	21 e0       	ldi	r18, 0x01	; 1
    2836:	89 2b       	or	r24, r25
    2838:	09 f4       	brne	.+2      	; 0x283c <__vector_6+0x642>
    283a:	20 e0       	ldi	r18, 0x00	; 0
    283c:	22 23       	and	r18, r18
    283e:	71 f1       	breq	.+92     	; 0x289c <__vector_6+0x6a2>
    2840:	8e ef       	ldi	r24, 0xFE	; 254
    2842:	80 93 7c 47 	sts	0x477C, r24	; 0x80477c <_ZL18g_last_status_code>
    2846:	80 91 ba 47 	lds	r24, 0x47BA	; 0x8047ba <g_intra_cycle_delay_time>
    284a:	90 91 bb 47 	lds	r25, 0x47BB	; 0x8047bb <g_intra_cycle_delay_time+0x1>
    284e:	91 95       	neg	r25
    2850:	81 95       	neg	r24
    2852:	91 09       	sbc	r25, r1
    2854:	09 2e       	mov	r0, r25
    2856:	00 0c       	add	r0, r0
    2858:	aa 0b       	sbc	r26, r26
    285a:	bb 0b       	sbc	r27, r27
    285c:	80 93 84 47 	sts	0x4784, r24	; 0x804784 <_ZL12g_on_the_air>
    2860:	90 93 85 47 	sts	0x4785, r25	; 0x804785 <_ZL12g_on_the_air+0x1>
    2864:	a0 93 86 47 	sts	0x4786, r26	; 0x804786 <_ZL12g_on_the_air+0x2>
    2868:	b0 93 87 47 	sts	0x4787, r27	; 0x804787 <_ZL12g_on_the_air+0x3>
    286c:	20 91 ba 47 	lds	r18, 0x47BA	; 0x8047ba <g_intra_cycle_delay_time>
    2870:	30 91 bb 47 	lds	r19, 0x47BB	; 0x8047bb <g_intra_cycle_delay_time+0x1>
    2874:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    2878:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    287c:	82 0f       	add	r24, r18
    287e:	93 1f       	adc	r25, r19
    2880:	9c 01       	movw	r18, r24
    2882:	80 91 b8 47 	lds	r24, 0x47B8	; 0x8047b8 <g_time_needed_for_ID>
    2886:	90 91 b9 47 	lds	r25, 0x47B9	; 0x8047b9 <g_time_needed_for_ID+0x1>
    288a:	a9 01       	movw	r20, r18
    288c:	48 1b       	sub	r20, r24
    288e:	59 0b       	sbc	r21, r25
    2890:	ca 01       	movw	r24, r20
    2892:	80 93 88 47 	sts	0x4788, r24	; 0x804788 <_ZL26g_sendID_seconds_countdown>
    2896:	90 93 89 47 	sts	0x4789, r25	; 0x804789 <_ZL26g_sendID_seconds_countdown+0x1>
    289a:	37 c0       	rjmp	.+110    	; 0x290a <__vector_6+0x710>
    289c:	8d ef       	ldi	r24, 0xFD	; 253
    289e:	80 93 7c 47 	sts	0x477C, r24	; 0x80477c <_ZL18g_last_status_code>
    28a2:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    28a6:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    28aa:	09 2e       	mov	r0, r25
    28ac:	00 0c       	add	r0, r0
    28ae:	aa 0b       	sbc	r26, r26
    28b0:	bb 0b       	sbc	r27, r27
    28b2:	80 93 84 47 	sts	0x4784, r24	; 0x804784 <_ZL12g_on_the_air>
    28b6:	90 93 85 47 	sts	0x4785, r25	; 0x804785 <_ZL12g_on_the_air+0x1>
    28ba:	a0 93 86 47 	sts	0x4786, r26	; 0x804786 <_ZL12g_on_the_air+0x2>
    28be:	b0 93 87 47 	sts	0x4787, r27	; 0x804787 <_ZL12g_on_the_air+0x3>
    28c2:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    28c6:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    28ca:	9c 01       	movw	r18, r24
    28cc:	80 91 b8 47 	lds	r24, 0x47B8	; 0x8047b8 <g_time_needed_for_ID>
    28d0:	90 91 b9 47 	lds	r25, 0x47B9	; 0x8047b9 <g_time_needed_for_ID+0x1>
    28d4:	f9 01       	movw	r30, r18
    28d6:	e8 1b       	sub	r30, r24
    28d8:	f9 0b       	sbc	r31, r25
    28da:	cf 01       	movw	r24, r30
    28dc:	80 93 88 47 	sts	0x4788, r24	; 0x804788 <_ZL26g_sendID_seconds_countdown>
    28e0:	90 93 89 47 	sts	0x4789, r25	; 0x804789 <_ZL26g_sendID_seconds_countdown+0x1>
    28e4:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    28e8:	0e 94 4f 27 	call	0x4e9e	; 0x4e9e <_Z13throttleValueh>
    28ec:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    28f0:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    28f4:	81 e0       	ldi	r24, 0x01	; 1
    28f6:	8f 87       	std	Y+15, r24	; 0x0f
    28f8:	ce 01       	movw	r24, r28
    28fa:	0f 96       	adiw	r24, 0x0f	; 15
    28fc:	40 e0       	ldi	r20, 0x00	; 0
    28fe:	50 e0       	ldi	r21, 0x00	; 0
    2900:	bc 01       	movw	r22, r24
    2902:	8e e8       	ldi	r24, 0x8E	; 142
    2904:	97 e4       	ldi	r25, 0x47	; 71
    2906:	0e 94 f3 52 	call	0xa5e6	; 0xa5e6 <_Z9makeMorsePcPbS0_>
    290a:	81 e0       	ldi	r24, 0x01	; 1
    290c:	80 93 c5 47 	sts	0x47C5, r24	; 0x8047c5 <g_event_commenced>
    2910:	90 91 8b 47 	lds	r25, 0x478B	; 0x80478b <_ZL19g_wifi_enable_delay>
    2914:	81 e0       	ldi	r24, 0x01	; 1
    2916:	99 23       	and	r25, r25
    2918:	09 f4       	brne	.+2      	; 0x291c <__vector_6+0x722>
    291a:	80 e0       	ldi	r24, 0x00	; 0
    291c:	88 23       	and	r24, r24
    291e:	29 f1       	breq	.+74     	; 0x296a <__vector_6+0x770>
    2920:	80 91 8b 47 	lds	r24, 0x478B	; 0x80478b <_ZL19g_wifi_enable_delay>
    2924:	81 50       	subi	r24, 0x01	; 1
    2926:	80 93 8b 47 	sts	0x478B, r24	; 0x80478b <_ZL19g_wifi_enable_delay>
    292a:	90 91 8b 47 	lds	r25, 0x478B	; 0x80478b <_ZL19g_wifi_enable_delay>
    292e:	81 e0       	ldi	r24, 0x01	; 1
    2930:	95 30       	cpi	r25, 0x05	; 5
    2932:	09 f0       	breq	.+2      	; 0x2936 <__vector_6+0x73c>
    2934:	80 e0       	ldi	r24, 0x00	; 0
    2936:	88 23       	and	r24, r24
    2938:	39 f0       	breq	.+14     	; 0x2948 <__vector_6+0x74e>
    293a:	81 e0       	ldi	r24, 0x01	; 1
    293c:	0e 94 56 38 	call	0x70ac	; 0x70ac <_Z10wifi_powerb>
    2940:	80 e0       	ldi	r24, 0x00	; 0
    2942:	0e 94 6d 38 	call	0x70da	; 0x70da <_Z10wifi_resetb>
    2946:	75 c0       	rjmp	.+234    	; 0x2a32 <__vector_6+0x838>
    2948:	90 91 8b 47 	lds	r25, 0x478B	; 0x80478b <_ZL19g_wifi_enable_delay>
    294c:	81 e0       	ldi	r24, 0x01	; 1
    294e:	99 23       	and	r25, r25
    2950:	09 f0       	breq	.+2      	; 0x2954 <__vector_6+0x75a>
    2952:	80 e0       	ldi	r24, 0x00	; 0
    2954:	88 23       	and	r24, r24
    2956:	09 f4       	brne	.+2      	; 0x295a <__vector_6+0x760>
    2958:	6c c0       	rjmp	.+216    	; 0x2a32 <__vector_6+0x838>
    295a:	46 e0       	ldi	r20, 0x06	; 6
    295c:	60 e8       	ldi	r22, 0x80	; 128
    295e:	75 e2       	ldi	r23, 0x25	; 37
    2960:	80 e0       	ldi	r24, 0x00	; 0
    2962:	90 e0       	ldi	r25, 0x00	; 0
    2964:	0e 94 5d 51 	call	0xa2ba	; 0xa2ba <_Z12linkbus_initm14USART_Number_t>
    2968:	64 c0       	rjmp	.+200    	; 0x2a32 <__vector_6+0x838>
    296a:	80 91 13 40 	lds	r24, 0x4013	; 0x804013 <g_update_timeout_seconds>
    296e:	90 91 14 40 	lds	r25, 0x4014	; 0x804014 <g_update_timeout_seconds+0x1>
    2972:	89 2b       	or	r24, r25
    2974:	81 f0       	breq	.+32     	; 0x2996 <__vector_6+0x79c>
    2976:	80 91 8c 47 	lds	r24, 0x478C	; 0x80478c <_ZL20g_shutting_down_wifi>
    297a:	88 23       	and	r24, r24
    297c:	61 f4       	brne	.+24     	; 0x2996 <__vector_6+0x79c>
    297e:	90 91 c6 47 	lds	r25, 0x47C6	; 0x8047c6 <g_check_for_next_event>
    2982:	81 e0       	ldi	r24, 0x01	; 1
    2984:	89 27       	eor	r24, r25
    2986:	88 23       	and	r24, r24
    2988:	41 f0       	breq	.+16     	; 0x299a <__vector_6+0x7a0>
    298a:	90 91 c7 47 	lds	r25, 0x47C7	; 0x8047c7 <g_waiting_for_next_event>
    298e:	81 e0       	ldi	r24, 0x01	; 1
    2990:	89 27       	eor	r24, r25
    2992:	88 23       	and	r24, r24
    2994:	11 f0       	breq	.+4      	; 0x299a <__vector_6+0x7a0>
    2996:	81 e0       	ldi	r24, 0x01	; 1
    2998:	01 c0       	rjmp	.+2      	; 0x299c <__vector_6+0x7a2>
    299a:	80 e0       	ldi	r24, 0x00	; 0
    299c:	88 23       	and	r24, r24
    299e:	09 f4       	brne	.+2      	; 0x29a2 <__vector_6+0x7a8>
    29a0:	41 c0       	rjmp	.+130    	; 0x2a24 <__vector_6+0x82a>
    29a2:	90 91 09 40 	lds	r25, 0x4009	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    29a6:	81 e0       	ldi	r24, 0x01	; 1
    29a8:	99 23       	and	r25, r25
    29aa:	09 f4       	brne	.+2      	; 0x29ae <__vector_6+0x7b4>
    29ac:	80 e0       	ldi	r24, 0x00	; 0
    29ae:	88 23       	and	r24, r24
    29b0:	c9 f1       	breq	.+114    	; 0x2a24 <__vector_6+0x82a>
    29b2:	80 91 09 40 	lds	r24, 0x4009	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    29b6:	81 50       	subi	r24, 0x01	; 1
    29b8:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    29bc:	90 91 09 40 	lds	r25, 0x4009	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    29c0:	81 e0       	ldi	r24, 0x01	; 1
    29c2:	99 23       	and	r25, r25
    29c4:	09 f0       	breq	.+2      	; 0x29c8 <__vector_6+0x7ce>
    29c6:	80 e0       	ldi	r24, 0x00	; 0
    29c8:	88 23       	and	r24, r24
    29ca:	61 f1       	breq	.+88     	; 0x2a24 <__vector_6+0x82a>
    29cc:	81 e0       	ldi	r24, 0x01	; 1
    29ce:	0e 94 6d 38 	call	0x70da	; 0x70da <_Z10wifi_resetb>
    29d2:	80 e0       	ldi	r24, 0x00	; 0
    29d4:	0e 94 56 38 	call	0x70ac	; 0x70ac <_Z10wifi_powerb>
    29d8:	10 92 8c 47 	sts	0x478C, r1	; 0x80478c <_ZL20g_shutting_down_wifi>
    29dc:	90 91 c4 47 	lds	r25, 0x47C4	; 0x8047c4 <g_event_enabled>
    29e0:	81 e0       	ldi	r24, 0x01	; 1
    29e2:	89 27       	eor	r24, r25
    29e4:	88 23       	and	r24, r24
    29e6:	91 f0       	breq	.+36     	; 0x2a0c <__vector_6+0x812>
    29e8:	84 e0       	ldi	r24, 0x04	; 4
    29ea:	80 93 8d 47 	sts	0x478D, r24	; 0x80478d <_ZL11g_sleepType>
    29ee:	81 e0       	ldi	r24, 0x01	; 1
    29f0:	80 93 c8 47 	sts	0x47C8, r24	; 0x8047c8 <_ZL13g_go_to_sleep>
    29f4:	8f ef       	ldi	r24, 0xFF	; 255
    29f6:	9f ef       	ldi	r25, 0xFF	; 255
    29f8:	dc 01       	movw	r26, r24
    29fa:	80 93 17 40 	sts	0x4017, r24	; 0x804017 <_ZL18g_seconds_to_sleep>
    29fe:	90 93 18 40 	sts	0x4018, r25	; 0x804018 <_ZL18g_seconds_to_sleep+0x1>
    2a02:	a0 93 19 40 	sts	0x4019, r26	; 0x804019 <_ZL18g_seconds_to_sleep+0x2>
    2a06:	b0 93 1a 40 	sts	0x401A, r27	; 0x80401a <_ZL18g_seconds_to_sleep+0x3>
    2a0a:	0a c0       	rjmp	.+20     	; 0x2a20 <__vector_6+0x826>
    2a0c:	90 91 8d 47 	lds	r25, 0x478D	; 0x80478d <_ZL11g_sleepType>
    2a10:	81 e0       	ldi	r24, 0x01	; 1
    2a12:	93 30       	cpi	r25, 0x03	; 3
    2a14:	09 f0       	breq	.+2      	; 0x2a18 <__vector_6+0x81e>
    2a16:	80 e0       	ldi	r24, 0x00	; 0
    2a18:	88 23       	and	r24, r24
    2a1a:	11 f0       	breq	.+4      	; 0x2a20 <__vector_6+0x826>
    2a1c:	0e 94 9a 26 	call	0x4d34	; 0x4d34 <_Z12eventEnabledv>
    2a20:	10 92 0a 40 	sts	0x400A, r1	; 0x80400a <_ZL13g_wifi_active>
    2a24:	80 91 0a 40 	lds	r24, 0x400A	; 0x80400a <_ZL13g_wifi_active>
    2a28:	88 23       	and	r24, r24
    2a2a:	19 f0       	breq	.+6      	; 0x2a32 <__vector_6+0x838>
    2a2c:	81 e0       	ldi	r24, 0x01	; 1
    2a2e:	80 93 8a 47 	sts	0x478A, r24	; 0x80478a <_ZL16g_report_seconds>
    2a32:	80 e0       	ldi	r24, 0x00	; 0
    2a34:	94 e0       	ldi	r25, 0x04	; 4
    2a36:	2f ef       	ldi	r18, 0xFF	; 255
    2a38:	fc 01       	movw	r30, r24
    2a3a:	21 87       	std	Z+9, r18	; 0x09
    2a3c:	00 00       	nop
    2a3e:	2f 96       	adiw	r28, 0x0f	; 15
    2a40:	cd bf       	out	0x3d, r28	; 61
    2a42:	de bf       	out	0x3e, r29	; 62
    2a44:	df 91       	pop	r29
    2a46:	cf 91       	pop	r28
    2a48:	ff 91       	pop	r31
    2a4a:	ef 91       	pop	r30
    2a4c:	bf 91       	pop	r27
    2a4e:	af 91       	pop	r26
    2a50:	9f 91       	pop	r25
    2a52:	8f 91       	pop	r24
    2a54:	7f 91       	pop	r23
    2a56:	6f 91       	pop	r22
    2a58:	5f 91       	pop	r21
    2a5a:	4f 91       	pop	r20
    2a5c:	3f 91       	pop	r19
    2a5e:	2f 91       	pop	r18
    2a60:	1f 91       	pop	r17
    2a62:	0f 91       	pop	r16
    2a64:	ff 90       	pop	r15
    2a66:	ef 90       	pop	r14
    2a68:	0f 90       	pop	r0
    2a6a:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    2a6e:	0f 90       	pop	r0
    2a70:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    2a74:	0f 90       	pop	r0
    2a76:	1f 90       	pop	r1
    2a78:	18 95       	reti

00002a7a <__vector_22>:
    2a7a:	1f 92       	push	r1
    2a7c:	0f 92       	push	r0
    2a7e:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    2a82:	0f 92       	push	r0
    2a84:	11 24       	eor	r1, r1
    2a86:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    2a8a:	0f 92       	push	r0
    2a8c:	2f 93       	push	r18
    2a8e:	3f 93       	push	r19
    2a90:	4f 93       	push	r20
    2a92:	5f 93       	push	r21
    2a94:	6f 93       	push	r22
    2a96:	7f 93       	push	r23
    2a98:	8f 93       	push	r24
    2a9a:	9f 93       	push	r25
    2a9c:	af 93       	push	r26
    2a9e:	bf 93       	push	r27
    2aa0:	ef 93       	push	r30
    2aa2:	ff 93       	push	r31
    2aa4:	cf 93       	push	r28
    2aa6:	df 93       	push	r29
    2aa8:	1f 92       	push	r1
    2aaa:	cd b7       	in	r28, 0x3d	; 61
    2aac:	de b7       	in	r29, 0x3e	; 62
    2aae:	80 e6       	ldi	r24, 0x60	; 96
    2ab0:	94 e0       	ldi	r25, 0x04	; 4
    2ab2:	fc 01       	movw	r30, r24
    2ab4:	81 85       	ldd	r24, Z+9	; 0x09
    2ab6:	88 2f       	mov	r24, r24
    2ab8:	90 e0       	ldi	r25, 0x00	; 0
    2aba:	82 70       	andi	r24, 0x02	; 2
    2abc:	99 27       	eor	r25, r25
    2abe:	21 e0       	ldi	r18, 0x01	; 1
    2ac0:	89 2b       	or	r24, r25
    2ac2:	09 f4       	brne	.+2      	; 0x2ac6 <__vector_22+0x4c>
    2ac4:	20 e0       	ldi	r18, 0x00	; 0
    2ac6:	22 23       	and	r18, r18
    2ac8:	b1 f0       	breq	.+44     	; 0x2af6 <__vector_22+0x7c>
    2aca:	0e 94 4b 2a 	call	0x5496	; 0x5496 <_Z18antennaIsConnectedv>
    2ace:	89 83       	std	Y+1, r24	; 0x01
    2ad0:	99 81       	ldd	r25, Y+1	; 0x01
    2ad2:	81 e0       	ldi	r24, 0x01	; 1
    2ad4:	89 27       	eor	r24, r25
    2ad6:	88 23       	and	r24, r24
    2ad8:	71 f0       	breq	.+28     	; 0x2af6 <__vector_22+0x7c>
    2ada:	90 91 81 47 	lds	r25, 0x4781	; 0x804781 <g_antenna_connect_state>
    2ade:	81 e0       	ldi	r24, 0x01	; 1
    2ae0:	91 30       	cpi	r25, 0x01	; 1
    2ae2:	09 f4       	brne	.+2      	; 0x2ae6 <__vector_22+0x6c>
    2ae4:	80 e0       	ldi	r24, 0x00	; 0
    2ae6:	88 23       	and	r24, r24
    2ae8:	31 f0       	breq	.+12     	; 0x2af6 <__vector_22+0x7c>
    2aea:	81 e0       	ldi	r24, 0x01	; 1
    2aec:	80 93 81 47 	sts	0x4781, r24	; 0x804781 <g_antenna_connect_state>
    2af0:	81 e0       	ldi	r24, 0x01	; 1
    2af2:	80 93 06 40 	sts	0x4006, r24	; 0x804006 <_ZL28g_antenna_connection_changed>
    2af6:	80 e6       	ldi	r24, 0x60	; 96
    2af8:	94 e0       	ldi	r25, 0x04	; 4
    2afa:	2f ef       	ldi	r18, 0xFF	; 255
    2afc:	fc 01       	movw	r30, r24
    2afe:	21 87       	std	Z+9, r18	; 0x09
    2b00:	00 00       	nop
    2b02:	0f 90       	pop	r0
    2b04:	df 91       	pop	r29
    2b06:	cf 91       	pop	r28
    2b08:	ff 91       	pop	r31
    2b0a:	ef 91       	pop	r30
    2b0c:	bf 91       	pop	r27
    2b0e:	af 91       	pop	r26
    2b10:	9f 91       	pop	r25
    2b12:	8f 91       	pop	r24
    2b14:	7f 91       	pop	r23
    2b16:	6f 91       	pop	r22
    2b18:	5f 91       	pop	r21
    2b1a:	4f 91       	pop	r20
    2b1c:	3f 91       	pop	r19
    2b1e:	2f 91       	pop	r18
    2b20:	0f 90       	pop	r0
    2b22:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    2b26:	0f 90       	pop	r0
    2b28:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    2b2c:	0f 90       	pop	r0
    2b2e:	1f 90       	pop	r1
    2b30:	18 95       	reti

00002b32 <__vector_12>:
    2b32:	1f 92       	push	r1
    2b34:	0f 92       	push	r0
    2b36:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    2b3a:	0f 92       	push	r0
    2b3c:	11 24       	eor	r1, r1
    2b3e:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    2b42:	0f 92       	push	r0
    2b44:	2f 93       	push	r18
    2b46:	3f 93       	push	r19
    2b48:	4f 93       	push	r20
    2b4a:	5f 93       	push	r21
    2b4c:	6f 93       	push	r22
    2b4e:	7f 93       	push	r23
    2b50:	8f 93       	push	r24
    2b52:	9f 93       	push	r25
    2b54:	af 93       	push	r26
    2b56:	bf 93       	push	r27
    2b58:	ef 93       	push	r30
    2b5a:	ff 93       	push	r31
    2b5c:	cf 93       	push	r28
    2b5e:	df 93       	push	r29
    2b60:	00 d0       	rcall	.+0      	; 0x2b62 <__vector_12+0x30>
    2b62:	cd b7       	in	r28, 0x3d	; 61
    2b64:	de b7       	in	r29, 0x3e	; 62
    2b66:	80 e0       	ldi	r24, 0x00	; 0
    2b68:	9b e0       	ldi	r25, 0x0B	; 11
    2b6a:	fc 01       	movw	r30, r24
    2b6c:	86 81       	ldd	r24, Z+6	; 0x06
    2b6e:	88 2f       	mov	r24, r24
    2b70:	90 e0       	ldi	r25, 0x00	; 0
    2b72:	81 70       	andi	r24, 0x01	; 1
    2b74:	99 27       	eor	r25, r25
    2b76:	21 e0       	ldi	r18, 0x01	; 1
    2b78:	89 2b       	or	r24, r25
    2b7a:	09 f4       	brne	.+2      	; 0x2b7e <__vector_12+0x4c>
    2b7c:	20 e0       	ldi	r18, 0x00	; 0
    2b7e:	22 23       	and	r18, r18
    2b80:	09 f4       	brne	.+2      	; 0x2b84 <__vector_12+0x52>
    2b82:	02 c1       	rjmp	.+516    	; 0x2d88 <__vector_12+0x256>
    2b84:	80 91 1d 40 	lds	r24, 0x401D	; 0x80401d <g_i2c0_timeout_ticks>
    2b88:	90 91 1e 40 	lds	r25, 0x401E	; 0x80401e <g_i2c0_timeout_ticks+0x1>
    2b8c:	21 e0       	ldi	r18, 0x01	; 1
    2b8e:	89 2b       	or	r24, r25
    2b90:	09 f4       	brne	.+2      	; 0x2b94 <__vector_12+0x62>
    2b92:	20 e0       	ldi	r18, 0x00	; 0
    2b94:	22 23       	and	r18, r18
    2b96:	49 f0       	breq	.+18     	; 0x2baa <__vector_12+0x78>
    2b98:	80 91 1d 40 	lds	r24, 0x401D	; 0x80401d <g_i2c0_timeout_ticks>
    2b9c:	90 91 1e 40 	lds	r25, 0x401E	; 0x80401e <g_i2c0_timeout_ticks+0x1>
    2ba0:	01 97       	sbiw	r24, 0x01	; 1
    2ba2:	80 93 1d 40 	sts	0x401D, r24	; 0x80401d <g_i2c0_timeout_ticks>
    2ba6:	90 93 1e 40 	sts	0x401E, r25	; 0x80401e <g_i2c0_timeout_ticks+0x1>
    2baa:	80 91 1f 40 	lds	r24, 0x401F	; 0x80401f <g_i2c1_timeout_ticks>
    2bae:	90 91 20 40 	lds	r25, 0x4020	; 0x804020 <g_i2c1_timeout_ticks+0x1>
    2bb2:	21 e0       	ldi	r18, 0x01	; 1
    2bb4:	89 2b       	or	r24, r25
    2bb6:	09 f4       	brne	.+2      	; 0x2bba <__vector_12+0x88>
    2bb8:	20 e0       	ldi	r18, 0x00	; 0
    2bba:	22 23       	and	r18, r18
    2bbc:	49 f0       	breq	.+18     	; 0x2bd0 <__vector_12+0x9e>
    2bbe:	80 91 1f 40 	lds	r24, 0x401F	; 0x80401f <g_i2c1_timeout_ticks>
    2bc2:	90 91 20 40 	lds	r25, 0x4020	; 0x804020 <g_i2c1_timeout_ticks+0x1>
    2bc6:	01 97       	sbiw	r24, 0x01	; 1
    2bc8:	80 93 1f 40 	sts	0x401F, r24	; 0x80401f <g_i2c1_timeout_ticks>
    2bcc:	90 93 20 40 	sts	0x4020, r25	; 0x804020 <g_i2c1_timeout_ticks+0x1>
    2bd0:	80 91 7f 47 	lds	r24, 0x477F	; 0x80477f <_ZL21g_util_tick_countdown>
    2bd4:	90 91 80 47 	lds	r25, 0x4780	; 0x804780 <_ZL21g_util_tick_countdown+0x1>
    2bd8:	21 e0       	ldi	r18, 0x01	; 1
    2bda:	89 2b       	or	r24, r25
    2bdc:	09 f4       	brne	.+2      	; 0x2be0 <__vector_12+0xae>
    2bde:	20 e0       	ldi	r18, 0x00	; 0
    2be0:	22 23       	and	r18, r18
    2be2:	49 f0       	breq	.+18     	; 0x2bf6 <__vector_12+0xc4>
    2be4:	80 91 7f 47 	lds	r24, 0x477F	; 0x80477f <_ZL21g_util_tick_countdown>
    2be8:	90 91 80 47 	lds	r25, 0x4780	; 0x804780 <_ZL21g_util_tick_countdown+0x1>
    2bec:	01 97       	sbiw	r24, 0x01	; 1
    2bee:	80 93 7f 47 	sts	0x477F, r24	; 0x80477f <_ZL21g_util_tick_countdown>
    2bf2:	90 93 80 47 	sts	0x4780, r25	; 0x804780 <_ZL21g_util_tick_countdown+0x1>
    2bf6:	87 e0       	ldi	r24, 0x07	; 7
    2bf8:	0e 94 6f 10 	call	0x20de	; 0x20de <PORTC_get_pin_level>
    2bfc:	98 2f       	mov	r25, r24
    2bfe:	81 e0       	ldi	r24, 0x01	; 1
    2c00:	89 27       	eor	r24, r25
    2c02:	88 23       	and	r24, r24
    2c04:	a1 f0       	breq	.+40     	; 0x2c2e <__vector_12+0xfc>
    2c06:	80 91 d8 47 	lds	r24, 0x47D8	; 0x8047d8 <g_switch_closed_count>
    2c0a:	90 91 d9 47 	lds	r25, 0x47D9	; 0x8047d9 <g_switch_closed_count+0x1>
    2c0e:	21 e0       	ldi	r18, 0x01	; 1
    2c10:	88 3e       	cpi	r24, 0xE8	; 232
    2c12:	93 40       	sbci	r25, 0x03	; 3
    2c14:	08 f0       	brcs	.+2      	; 0x2c18 <__vector_12+0xe6>
    2c16:	20 e0       	ldi	r18, 0x00	; 0
    2c18:	22 23       	and	r18, r18
    2c1a:	49 f0       	breq	.+18     	; 0x2c2e <__vector_12+0xfc>
    2c1c:	80 91 d8 47 	lds	r24, 0x47D8	; 0x8047d8 <g_switch_closed_count>
    2c20:	90 91 d9 47 	lds	r25, 0x47D9	; 0x8047d9 <g_switch_closed_count+0x1>
    2c24:	01 96       	adiw	r24, 0x01	; 1
    2c26:	80 93 d8 47 	sts	0x47D8, r24	; 0x8047d8 <g_switch_closed_count>
    2c2a:	90 93 d9 47 	sts	0x47D9, r25	; 0x8047d9 <g_switch_closed_count+0x1>
    2c2e:	0e 94 4c 26 	call	0x4c98	; 0x4c98 <_Z19updateAntennaStatusv>
    2c32:	80 91 c4 47 	lds	r24, 0x47C4	; 0x8047c4 <g_event_enabled>
    2c36:	88 23       	and	r24, r24
    2c38:	31 f0       	breq	.+12     	; 0x2c46 <__vector_12+0x114>
    2c3a:	80 91 c5 47 	lds	r24, 0x47C5	; 0x8047c5 <g_event_commenced>
    2c3e:	88 23       	and	r24, r24
    2c40:	11 f0       	breq	.+4      	; 0x2c46 <__vector_12+0x114>
    2c42:	81 e0       	ldi	r24, 0x01	; 1
    2c44:	01 c0       	rjmp	.+2      	; 0x2c48 <__vector_12+0x116>
    2c46:	80 e0       	ldi	r24, 0x00	; 0
    2c48:	88 23       	and	r24, r24
    2c4a:	09 f4       	brne	.+2      	; 0x2c4e <__vector_12+0x11c>
    2c4c:	9d c0       	rjmp	.+314    	; 0x2d88 <__vector_12+0x256>
    2c4e:	80 91 84 47 	lds	r24, 0x4784	; 0x804784 <_ZL12g_on_the_air>
    2c52:	90 91 85 47 	lds	r25, 0x4785	; 0x804785 <_ZL12g_on_the_air+0x1>
    2c56:	a0 91 86 47 	lds	r26, 0x4786	; 0x804786 <_ZL12g_on_the_air+0x2>
    2c5a:	b0 91 87 47 	lds	r27, 0x4787	; 0x804787 <_ZL12g_on_the_air+0x3>
    2c5e:	21 e0       	ldi	r18, 0x01	; 1
    2c60:	18 16       	cp	r1, r24
    2c62:	19 06       	cpc	r1, r25
    2c64:	1a 06       	cpc	r1, r26
    2c66:	1b 06       	cpc	r1, r27
    2c68:	0c f0       	brlt	.+2      	; 0x2c6c <__vector_12+0x13a>
    2c6a:	20 e0       	ldi	r18, 0x00	; 0
    2c6c:	22 23       	and	r18, r18
    2c6e:	09 f4       	brne	.+2      	; 0x2c72 <__vector_12+0x140>
    2c70:	69 c0       	rjmp	.+210    	; 0x2d44 <__vector_12+0x212>
    2c72:	80 91 e9 47 	lds	r24, 0x47E9	; 0x8047e9 <_ZZ11__vector_12E7codeInc>
    2c76:	90 91 ea 47 	lds	r25, 0x47EA	; 0x8047ea <_ZZ11__vector_12E7codeInc+0x1>
    2c7a:	89 2b       	or	r24, r25
    2c7c:	09 f4       	brne	.+2      	; 0x2c80 <__vector_12+0x14e>
    2c7e:	51 c0       	rjmp	.+162    	; 0x2d22 <__vector_12+0x1f0>
    2c80:	80 91 e9 47 	lds	r24, 0x47E9	; 0x8047e9 <_ZZ11__vector_12E7codeInc>
    2c84:	90 91 ea 47 	lds	r25, 0x47EA	; 0x8047ea <_ZZ11__vector_12E7codeInc+0x1>
    2c88:	01 97       	sbiw	r24, 0x01	; 1
    2c8a:	80 93 e9 47 	sts	0x47E9, r24	; 0x8047e9 <_ZZ11__vector_12E7codeInc>
    2c8e:	90 93 ea 47 	sts	0x47EA, r25	; 0x8047ea <_ZZ11__vector_12E7codeInc+0x1>
    2c92:	80 91 e9 47 	lds	r24, 0x47E9	; 0x8047e9 <_ZZ11__vector_12E7codeInc>
    2c96:	90 91 ea 47 	lds	r25, 0x47EA	; 0x8047ea <_ZZ11__vector_12E7codeInc+0x1>
    2c9a:	89 2b       	or	r24, r25
    2c9c:	09 f0       	breq	.+2      	; 0x2ca0 <__vector_12+0x16e>
    2c9e:	74 c0       	rjmp	.+232    	; 0x2d88 <__vector_12+0x256>
    2ca0:	ce 01       	movw	r24, r28
    2ca2:	02 96       	adiw	r24, 0x02	; 2
    2ca4:	ac 01       	movw	r20, r24
    2ca6:	ce 01       	movw	r24, r28
    2ca8:	01 96       	adiw	r24, 0x01	; 1
    2caa:	bc 01       	movw	r22, r24
    2cac:	80 e0       	ldi	r24, 0x00	; 0
    2cae:	90 e0       	ldi	r25, 0x00	; 0
    2cb0:	0e 94 f3 52 	call	0xa5e6	; 0xa5e6 <_Z9makeMorsePcPbS0_>
    2cb4:	80 93 eb 47 	sts	0x47EB, r24	; 0x8047eb <_ZZ11__vector_12E3key>
    2cb8:	99 81       	ldd	r25, Y+1	; 0x01
    2cba:	81 e0       	ldi	r24, 0x01	; 1
    2cbc:	89 27       	eor	r24, r25
    2cbe:	88 23       	and	r24, r24
    2cc0:	29 f1       	breq	.+74     	; 0x2d0c <__vector_12+0x1da>
    2cc2:	8a 81       	ldd	r24, Y+2	; 0x02
    2cc4:	88 23       	and	r24, r24
    2cc6:	11 f1       	breq	.+68     	; 0x2d0c <__vector_12+0x1da>
    2cc8:	8d ef       	ldi	r24, 0xFD	; 253
    2cca:	80 93 7c 47 	sts	0x477C, r24	; 0x80477c <_ZL18g_last_status_code>
    2cce:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    2cd2:	0e 94 4f 27 	call	0x4e9e	; 0x4e9e <_Z13throttleValueh>
    2cd6:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    2cda:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    2cde:	81 e0       	ldi	r24, 0x01	; 1
    2ce0:	89 83       	std	Y+1, r24	; 0x01
    2ce2:	40 e0       	ldi	r20, 0x00	; 0
    2ce4:	50 e0       	ldi	r21, 0x00	; 0
    2ce6:	ce 01       	movw	r24, r28
    2ce8:	01 96       	adiw	r24, 0x01	; 1
    2cea:	bc 01       	movw	r22, r24
    2cec:	8e e8       	ldi	r24, 0x8E	; 142
    2cee:	97 e4       	ldi	r25, 0x47	; 71
    2cf0:	0e 94 f3 52 	call	0xa5e6	; 0xa5e6 <_Z9makeMorsePcPbS0_>
    2cf4:	ce 01       	movw	r24, r28
    2cf6:	02 96       	adiw	r24, 0x02	; 2
    2cf8:	ac 01       	movw	r20, r24
    2cfa:	ce 01       	movw	r24, r28
    2cfc:	01 96       	adiw	r24, 0x01	; 1
    2cfe:	bc 01       	movw	r22, r24
    2d00:	80 e0       	ldi	r24, 0x00	; 0
    2d02:	90 e0       	ldi	r25, 0x00	; 0
    2d04:	0e 94 f3 52 	call	0xa5e6	; 0xa5e6 <_Z9makeMorsePcPbS0_>
    2d08:	80 93 eb 47 	sts	0x47EB, r24	; 0x8047eb <_ZZ11__vector_12E3key>
    2d0c:	80 91 eb 47 	lds	r24, 0x47EB	; 0x8047eb <_ZZ11__vector_12E3key>
    2d10:	88 23       	and	r24, r24
    2d12:	d1 f1       	breq	.+116    	; 0x2d88 <__vector_12+0x256>
    2d14:	81 e0       	ldi	r24, 0x01	; 1
    2d16:	0e 94 92 67 	call	0xcf24	; 0xcf24 <_Z18powerToTransmitterb>
    2d1a:	81 e0       	ldi	r24, 0x01	; 1
    2d1c:	0e 94 ad 10 	call	0x215a	; 0x215a <LED_set_RED_level>
    2d20:	33 c0       	rjmp	.+102    	; 0x2d88 <__vector_12+0x256>
    2d22:	80 91 eb 47 	lds	r24, 0x47EB	; 0x8047eb <_ZZ11__vector_12E3key>
    2d26:	0e 94 a0 67 	call	0xcf40	; 0xcf40 <_Z14keyTransmitterb>
    2d2a:	80 91 eb 47 	lds	r24, 0x47EB	; 0x8047eb <_ZZ11__vector_12E3key>
    2d2e:	0e 94 ad 10 	call	0x215a	; 0x215a <LED_set_RED_level>
    2d32:	80 91 07 40 	lds	r24, 0x4007	; 0x804007 <_ZL15g_code_throttle>
    2d36:	90 91 08 40 	lds	r25, 0x4008	; 0x804008 <_ZL15g_code_throttle+0x1>
    2d3a:	80 93 e9 47 	sts	0x47E9, r24	; 0x8047e9 <_ZZ11__vector_12E7codeInc>
    2d3e:	90 93 ea 47 	sts	0x47EA, r25	; 0x8047ea <_ZZ11__vector_12E7codeInc+0x1>
    2d42:	22 c0       	rjmp	.+68     	; 0x2d88 <__vector_12+0x256>
    2d44:	80 91 84 47 	lds	r24, 0x4784	; 0x804784 <_ZL12g_on_the_air>
    2d48:	90 91 85 47 	lds	r25, 0x4785	; 0x804785 <_ZL12g_on_the_air+0x1>
    2d4c:	a0 91 86 47 	lds	r26, 0x4786	; 0x804786 <_ZL12g_on_the_air+0x2>
    2d50:	b0 91 87 47 	lds	r27, 0x4787	; 0x804787 <_ZL12g_on_the_air+0x3>
    2d54:	21 e0       	ldi	r18, 0x01	; 1
    2d56:	89 2b       	or	r24, r25
    2d58:	8a 2b       	or	r24, r26
    2d5a:	8b 2b       	or	r24, r27
    2d5c:	09 f0       	breq	.+2      	; 0x2d60 <__vector_12+0x22e>
    2d5e:	20 e0       	ldi	r18, 0x00	; 0
    2d60:	22 23       	and	r18, r18
    2d62:	91 f0       	breq	.+36     	; 0x2d88 <__vector_12+0x256>
    2d64:	80 91 eb 47 	lds	r24, 0x47EB	; 0x8047eb <_ZZ11__vector_12E3key>
    2d68:	88 23       	and	r24, r24
    2d6a:	71 f0       	breq	.+28     	; 0x2d88 <__vector_12+0x256>
    2d6c:	10 92 eb 47 	sts	0x47EB, r1	; 0x8047eb <_ZZ11__vector_12E3key>
    2d70:	80 e0       	ldi	r24, 0x00	; 0
    2d72:	0e 94 a0 67 	call	0xcf40	; 0xcf40 <_Z14keyTransmitterb>
    2d76:	80 e0       	ldi	r24, 0x00	; 0
    2d78:	0e 94 ad 10 	call	0x215a	; 0x215a <LED_set_RED_level>
    2d7c:	80 e0       	ldi	r24, 0x00	; 0
    2d7e:	0e 94 92 67 	call	0xcf24	; 0xcf24 <_Z18powerToTransmitterb>
    2d82:	8e ef       	ldi	r24, 0xFE	; 254
    2d84:	80 93 7c 47 	sts	0x477C, r24	; 0x80477c <_ZL18g_last_status_code>
    2d88:	80 e0       	ldi	r24, 0x00	; 0
    2d8a:	9b e0       	ldi	r25, 0x0B	; 11
    2d8c:	21 e0       	ldi	r18, 0x01	; 1
    2d8e:	fc 01       	movw	r30, r24
    2d90:	26 83       	std	Z+6, r18	; 0x06
    2d92:	00 00       	nop
    2d94:	0f 90       	pop	r0
    2d96:	0f 90       	pop	r0
    2d98:	df 91       	pop	r29
    2d9a:	cf 91       	pop	r28
    2d9c:	ff 91       	pop	r31
    2d9e:	ef 91       	pop	r30
    2da0:	bf 91       	pop	r27
    2da2:	af 91       	pop	r26
    2da4:	9f 91       	pop	r25
    2da6:	8f 91       	pop	r24
    2da8:	7f 91       	pop	r23
    2daa:	6f 91       	pop	r22
    2dac:	5f 91       	pop	r21
    2dae:	4f 91       	pop	r20
    2db0:	3f 91       	pop	r19
    2db2:	2f 91       	pop	r18
    2db4:	0f 90       	pop	r0
    2db6:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    2dba:	0f 90       	pop	r0
    2dbc:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    2dc0:	0f 90       	pop	r0
    2dc2:	1f 90       	pop	r1
    2dc4:	18 95       	reti

00002dc6 <__vector_29>:
    2dc6:	1f 92       	push	r1
    2dc8:	0f 92       	push	r0
    2dca:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    2dce:	0f 92       	push	r0
    2dd0:	11 24       	eor	r1, r1
    2dd2:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    2dd6:	0f 92       	push	r0
    2dd8:	2f 93       	push	r18
    2dda:	3f 93       	push	r19
    2ddc:	4f 93       	push	r20
    2dde:	5f 93       	push	r21
    2de0:	6f 93       	push	r22
    2de2:	7f 93       	push	r23
    2de4:	8f 93       	push	r24
    2de6:	9f 93       	push	r25
    2de8:	af 93       	push	r26
    2dea:	bf 93       	push	r27
    2dec:	ef 93       	push	r30
    2dee:	ff 93       	push	r31
    2df0:	cf 93       	push	r28
    2df2:	df 93       	push	r29
    2df4:	cd b7       	in	r28, 0x3d	; 61
    2df6:	de b7       	in	r29, 0x3e	; 62
    2df8:	80 e4       	ldi	r24, 0x40	; 64
    2dfa:	94 e0       	ldi	r25, 0x04	; 4
    2dfc:	fc 01       	movw	r30, r24
    2dfe:	81 85       	ldd	r24, Z+9	; 0x09
    2e00:	88 1f       	adc	r24, r24
    2e02:	88 27       	eor	r24, r24
    2e04:	88 1f       	adc	r24, r24
    2e06:	88 23       	and	r24, r24
    2e08:	b1 f1       	breq	.+108    	; 0x2e76 <__vector_29+0xb0>
    2e0a:	80 91 d8 47 	lds	r24, 0x47D8	; 0x8047d8 <g_switch_closed_count>
    2e0e:	90 91 d9 47 	lds	r25, 0x47D9	; 0x8047d9 <g_switch_closed_count+0x1>
    2e12:	21 e0       	ldi	r18, 0x01	; 1
    2e14:	0b 97       	sbiw	r24, 0x0b	; 11
    2e16:	08 f4       	brcc	.+2      	; 0x2e1a <__vector_29+0x54>
    2e18:	20 e0       	ldi	r18, 0x00	; 0
    2e1a:	22 23       	and	r18, r18
    2e1c:	41 f1       	breq	.+80     	; 0x2e6e <__vector_29+0xa8>
    2e1e:	80 91 ec 47 	lds	r24, 0x47EC	; 0x8047ec <_ZZ11__vector_29E5count>
    2e22:	90 91 ed 47 	lds	r25, 0x47ED	; 0x8047ed <_ZZ11__vector_29E5count+0x1>
    2e26:	01 96       	adiw	r24, 0x01	; 1
    2e28:	80 93 ec 47 	sts	0x47EC, r24	; 0x8047ec <_ZZ11__vector_29E5count>
    2e2c:	90 93 ed 47 	sts	0x47ED, r25	; 0x8047ed <_ZZ11__vector_29E5count+0x1>
    2e30:	80 91 ec 47 	lds	r24, 0x47EC	; 0x8047ec <_ZZ11__vector_29E5count>
    2e34:	90 91 ed 47 	lds	r25, 0x47ED	; 0x8047ed <_ZZ11__vector_29E5count+0x1>
    2e38:	81 70       	andi	r24, 0x01	; 1
    2e3a:	99 27       	eor	r25, r25
    2e3c:	89 2b       	or	r24, r25
    2e3e:	a1 f0       	breq	.+40     	; 0x2e68 <__vector_29+0xa2>
    2e40:	61 e0       	ldi	r22, 0x01	; 1
    2e42:	83 e0       	ldi	r24, 0x03	; 3
    2e44:	0e 94 1d 0f 	call	0x1e3a	; 0x1e3a <PORTA_set_pin_level>
    2e48:	61 e0       	ldi	r22, 0x01	; 1
    2e4a:	81 e0       	ldi	r24, 0x01	; 1
    2e4c:	0e 94 1d 0f 	call	0x1e3a	; 0x1e3a <PORTA_set_pin_level>
    2e50:	61 e0       	ldi	r22, 0x01	; 1
    2e52:	85 e0       	ldi	r24, 0x05	; 5
    2e54:	0e 94 1d 0f 	call	0x1e3a	; 0x1e3a <PORTA_set_pin_level>
    2e58:	61 e0       	ldi	r22, 0x01	; 1
    2e5a:	86 e0       	ldi	r24, 0x06	; 6
    2e5c:	0e 94 1d 0f 	call	0x1e3a	; 0x1e3a <PORTA_set_pin_level>
    2e60:	81 e0       	ldi	r24, 0x01	; 1
    2e62:	80 93 82 47 	sts	0x4782, r24	; 0x804782 <_ZL13g_start_event>
    2e66:	03 c0       	rjmp	.+6      	; 0x2e6e <__vector_29+0xa8>
    2e68:	81 e0       	ldi	r24, 0x01	; 1
    2e6a:	80 93 83 47 	sts	0x4783, r24	; 0x804783 <_ZL11g_end_event>
    2e6e:	10 92 d8 47 	sts	0x47D8, r1	; 0x8047d8 <g_switch_closed_count>
    2e72:	10 92 d9 47 	sts	0x47D9, r1	; 0x8047d9 <g_switch_closed_count+0x1>
    2e76:	80 e4       	ldi	r24, 0x40	; 64
    2e78:	94 e0       	ldi	r25, 0x04	; 4
    2e7a:	2f ef       	ldi	r18, 0xFF	; 255
    2e7c:	fc 01       	movw	r30, r24
    2e7e:	21 87       	std	Z+9, r18	; 0x09
    2e80:	00 00       	nop
    2e82:	df 91       	pop	r29
    2e84:	cf 91       	pop	r28
    2e86:	ff 91       	pop	r31
    2e88:	ef 91       	pop	r30
    2e8a:	bf 91       	pop	r27
    2e8c:	af 91       	pop	r26
    2e8e:	9f 91       	pop	r25
    2e90:	8f 91       	pop	r24
    2e92:	7f 91       	pop	r23
    2e94:	6f 91       	pop	r22
    2e96:	5f 91       	pop	r21
    2e98:	4f 91       	pop	r20
    2e9a:	3f 91       	pop	r19
    2e9c:	2f 91       	pop	r18
    2e9e:	0f 90       	pop	r0
    2ea0:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    2ea4:	0f 90       	pop	r0
    2ea6:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    2eaa:	0f 90       	pop	r0
    2eac:	1f 90       	pop	r1
    2eae:	18 95       	reti

00002eb0 <_Z10powerUp3V3v>:
    2eb0:	cf 93       	push	r28
    2eb2:	df 93       	push	r29
    2eb4:	cd b7       	in	r28, 0x3d	; 61
    2eb6:	de b7       	in	r29, 0x3e	; 62
    2eb8:	61 e0       	ldi	r22, 0x01	; 1
    2eba:	84 e0       	ldi	r24, 0x04	; 4
    2ebc:	0e 94 57 0f 	call	0x1eae	; 0x1eae <PORTB_set_pin_level>
    2ec0:	61 e0       	ldi	r22, 0x01	; 1
    2ec2:	87 e0       	ldi	r24, 0x07	; 7
    2ec4:	0e 94 1d 0f 	call	0x1e3a	; 0x1e3a <PORTA_set_pin_level>
    2ec8:	81 e0       	ldi	r24, 0x01	; 1
    2eca:	80 93 7e 47 	sts	0x477E, r24	; 0x80477e <_ZL18g_perform_3V3_init>
    2ece:	00 00       	nop
    2ed0:	df 91       	pop	r29
    2ed2:	cf 91       	pop	r28
    2ed4:	08 95       	ret

00002ed6 <main>:
    2ed6:	cf 93       	push	r28
    2ed8:	df 93       	push	r29
    2eda:	00 d0       	rcall	.+0      	; 0x2edc <main+0x6>
    2edc:	cd b7       	in	r28, 0x3d	; 61
    2ede:	de b7       	in	r29, 0x3e	; 62
    2ee0:	0e 94 e1 07 	call	0xfc2	; 0xfc2 <atmel_start_init>
    2ee4:	80 e0       	ldi	r24, 0x00	; 0
    2ee6:	0e 94 ad 10 	call	0x215a	; 0x215a <LED_set_RED_level>
    2eea:	61 e0       	ldi	r22, 0x01	; 1
    2eec:	84 e0       	ldi	r24, 0x04	; 4
    2eee:	0e 94 57 0f 	call	0x1eae	; 0x1eae <PORTB_set_pin_level>
    2ef2:	81 e0       	ldi	r24, 0x01	; 1
    2ef4:	0e 94 56 38 	call	0x70ac	; 0x70ac <_Z10wifi_powerb>
    2ef8:	0e 94 58 17 	call	0x2eb0	; 0x2eb0 <_Z10powerUp3V3v>
    2efc:	8a ed       	ldi	r24, 0xDA	; 218
    2efe:	97 e4       	ldi	r25, 0x47	; 71
    2f00:	0e 94 97 47 	call	0x8f2e	; 0x8f2e <_ZN13EepromManager20initializeEEPROMVarsEv>
    2f04:	8a ed       	ldi	r24, 0xDA	; 218
    2f06:	97 e4       	ldi	r25, 0x47	; 71
    2f08:	0e 94 29 46 	call	0x8c52	; 0x8c52 <_ZN13EepromManager11readNonVolsEv>
    2f0c:	81 e0       	ldi	r24, 0x01	; 1
    2f0e:	0e 94 b8 32 	call	0x6570	; 0x6570 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t>
    2f12:	0e 94 d3 5a 	call	0xb5a6	; 0xb5a6 <sb_send_NewLine>
    2f16:	86 e4       	ldi	r24, 0x46	; 70
    2f18:	90 e4       	ldi	r25, 0x40	; 64
    2f1a:	0e 94 fd 5a 	call	0xb5fa	; 0xb5fa <sb_send_string>
    2f1e:	83 e6       	ldi	r24, 0x63	; 99
    2f20:	90 e4       	ldi	r25, 0x40	; 64
    2f22:	89 2f       	mov	r24, r25
    2f24:	8f 93       	push	r24
    2f26:	83 e6       	ldi	r24, 0x63	; 99
    2f28:	90 e4       	ldi	r25, 0x40	; 64
    2f2a:	8f 93       	push	r24
    2f2c:	87 e6       	ldi	r24, 0x67	; 103
    2f2e:	90 e4       	ldi	r25, 0x40	; 64
    2f30:	89 2f       	mov	r24, r25
    2f32:	8f 93       	push	r24
    2f34:	87 e6       	ldi	r24, 0x67	; 103
    2f36:	90 e4       	ldi	r25, 0x40	; 64
    2f38:	8f 93       	push	r24
    2f3a:	89 e4       	ldi	r24, 0x49	; 73
    2f3c:	97 e4       	ldi	r25, 0x47	; 71
    2f3e:	89 2f       	mov	r24, r25
    2f40:	8f 93       	push	r24
    2f42:	89 e4       	ldi	r24, 0x49	; 73
    2f44:	97 e4       	ldi	r25, 0x47	; 71
    2f46:	8f 93       	push	r24
    2f48:	0e 94 31 74 	call	0xe862	; 0xe862 <sprintf>
    2f4c:	0f 90       	pop	r0
    2f4e:	0f 90       	pop	r0
    2f50:	0f 90       	pop	r0
    2f52:	0f 90       	pop	r0
    2f54:	0f 90       	pop	r0
    2f56:	0f 90       	pop	r0
    2f58:	89 e4       	ldi	r24, 0x49	; 73
    2f5a:	97 e4       	ldi	r25, 0x47	; 71
    2f5c:	0e 94 fd 5a 	call	0xb5fa	; 0xb5fa <sb_send_string>
    2f60:	84 e7       	ldi	r24, 0x74	; 116
    2f62:	90 e4       	ldi	r25, 0x40	; 64
    2f64:	0e 94 fd 5a 	call	0xb5fa	; 0xb5fa <sb_send_string>
    2f68:	0e 94 05 2a 	call	0x540a	; 0x540a <_Z8rtc_initv>
    2f6c:	98 2f       	mov	r25, r24
    2f6e:	81 e0       	ldi	r24, 0x01	; 1
    2f70:	9c 3f       	cpi	r25, 0xFC	; 252
    2f72:	09 f0       	breq	.+2      	; 0x2f76 <main+0xa0>
    2f74:	80 e0       	ldi	r24, 0x00	; 0
    2f76:	88 23       	and	r24, r24
    2f78:	39 f0       	breq	.+14     	; 0x2f88 <main+0xb2>
    2f7a:	0e 94 d3 5a 	call	0xb5a6	; 0xb5a6 <sb_send_NewLine>
    2f7e:	8b eb       	ldi	r24, 0xBB	; 187
    2f80:	91 e4       	ldi	r25, 0x41	; 65
    2f82:	0e 94 fd 5a 	call	0xb5fa	; 0xb5fa <sb_send_string>
    2f86:	1d c0       	rjmp	.+58     	; 0x2fc2 <main+0xec>
    2f88:	ce 01       	movw	r24, r28
    2f8a:	01 96       	adiw	r24, 0x01	; 1
    2f8c:	0e 94 b2 3d 	call	0x7b64	; 0x7b64 <ds3231_get_epoch>
    2f90:	dc 01       	movw	r26, r24
    2f92:	cb 01       	movw	r24, r22
    2f94:	80 93 e4 47 	sts	0x47E4, r24	; 0x8047e4 <g_current_epoch>
    2f98:	90 93 e5 47 	sts	0x47E5, r25	; 0x8047e5 <g_current_epoch+0x1>
    2f9c:	a0 93 e6 47 	sts	0x47E6, r26	; 0x8047e6 <g_current_epoch+0x2>
    2fa0:	b0 93 e7 47 	sts	0x47E7, r27	; 0x8047e7 <g_current_epoch+0x3>
    2fa4:	89 81       	ldd	r24, Y+1	; 0x01
    2fa6:	88 23       	and	r24, r24
    2fa8:	61 f4       	brne	.+24     	; 0x2fc2 <main+0xec>
    2faa:	80 91 e4 47 	lds	r24, 0x47E4	; 0x8047e4 <g_current_epoch>
    2fae:	90 91 e5 47 	lds	r25, 0x47E5	; 0x8047e5 <g_current_epoch+0x1>
    2fb2:	a0 91 e6 47 	lds	r26, 0x47E6	; 0x8047e6 <g_current_epoch+0x2>
    2fb6:	b0 91 e7 47 	lds	r27, 0x47E7	; 0x8047e7 <g_current_epoch+0x3>
    2fba:	bc 01       	movw	r22, r24
    2fbc:	cd 01       	movw	r24, r26
    2fbe:	0e 94 54 02 	call	0x4a8	; 0x4a8 <set_system_time>
    2fc2:	0e 94 84 38 	call	0x7108	; 0x7108 <_Z11wifiPresentv>
    2fc6:	98 2f       	mov	r25, r24
    2fc8:	81 e0       	ldi	r24, 0x01	; 1
    2fca:	89 27       	eor	r24, r25
    2fcc:	88 23       	and	r24, r24
    2fce:	31 f0       	breq	.+12     	; 0x2fdc <main+0x106>
    2fd0:	0e 94 d3 5a 	call	0xb5a6	; 0xb5a6 <sb_send_NewLine>
    2fd4:	83 ee       	ldi	r24, 0xE3	; 227
    2fd6:	91 e4       	ldi	r25, 0x41	; 65
    2fd8:	0e 94 fd 5a 	call	0xb5fa	; 0xb5fa <sb_send_string>
    2fdc:	0e 94 d3 5a 	call	0xb5a6	; 0xb5a6 <sb_send_NewLine>
    2fe0:	0e 94 c0 5a 	call	0xb580	; 0xb580 <sb_send_NewPrompt>
    2fe4:	6a ef       	ldi	r22, 0xFA	; 250
    2fe6:	70 e0       	ldi	r23, 0x00	; 0
    2fe8:	80 e0       	ldi	r24, 0x00	; 0
    2fea:	90 e0       	ldi	r25, 0x00	; 0
    2fec:	0e 94 1e 66 	call	0xcc3c	; 0xcc3c <util_delay_ms>
    2ff0:	88 23       	and	r24, r24
    2ff2:	29 f0       	breq	.+10     	; 0x2ffe <main+0x128>
    2ff4:	0e 94 9c 1f 	call	0x3f38	; 0x3f38 <_Z17handleLinkBusMsgsv>
    2ff8:	0e 94 2c 18 	call	0x3058	; 0x3058 <_Z19handleSerialBusMsgsv>
    2ffc:	f3 cf       	rjmp	.-26     	; 0x2fe4 <main+0x10e>
    2ffe:	80 91 7e 47 	lds	r24, 0x477E	; 0x80477e <_ZL18g_perform_3V3_init>
    3002:	88 23       	and	r24, r24
    3004:	71 f0       	breq	.+28     	; 0x3022 <main+0x14c>
    3006:	0e 94 71 68 	call	0xd0e2	; 0xd0e2 <_Z16init_transmitterv>
    300a:	98 2f       	mov	r25, r24
    300c:	81 e0       	ldi	r24, 0x01	; 1
    300e:	92 3d       	cpi	r25, 0xD2	; 210
    3010:	09 f4       	brne	.+2      	; 0x3014 <main+0x13e>
    3012:	80 e0       	ldi	r24, 0x00	; 0
    3014:	88 23       	and	r24, r24
    3016:	29 f0       	breq	.+10     	; 0x3022 <main+0x14c>
    3018:	81 e0       	ldi	r24, 0x01	; 1
    301a:	80 93 7d 47 	sts	0x477D, r24	; 0x80477d <_ZL33g_powerUp_initialization_complete>
    301e:	10 92 7e 47 	sts	0x477E, r1	; 0x80477e <_ZL18g_perform_3V3_init>
    3022:	80 91 82 47 	lds	r24, 0x4782	; 0x804782 <_ZL13g_start_event>
    3026:	88 23       	and	r24, r24
    3028:	69 f0       	breq	.+26     	; 0x3044 <main+0x16e>
    302a:	10 92 82 47 	sts	0x4782, r1	; 0x804782 <_ZL13g_start_event>
    302e:	80 91 7d 47 	lds	r24, 0x477D	; 0x80477d <_ZL33g_powerUp_initialization_complete>
    3032:	88 23       	and	r24, r24
    3034:	39 f0       	breq	.+14     	; 0x3044 <main+0x16e>
    3036:	81 e0       	ldi	r24, 0x01	; 1
    3038:	8a 83       	std	Y+2, r24	; 0x02
    303a:	ce 01       	movw	r24, r28
    303c:	02 96       	adiw	r24, 0x02	; 2
    303e:	61 e0       	ldi	r22, 0x01	; 1
    3040:	0e 94 88 2b 	call	0x5710	; 0x5710 <_Z11setupForFoxP5Fox_t13EventAction_t>
    3044:	80 91 83 47 	lds	r24, 0x4783	; 0x804783 <_ZL11g_end_event>
    3048:	88 23       	and	r24, r24
    304a:	61 f2       	breq	.-104    	; 0x2fe4 <main+0x10e>
    304c:	10 92 83 47 	sts	0x4783, r1	; 0x804783 <_ZL11g_end_event>
    3050:	82 e0       	ldi	r24, 0x02	; 2
    3052:	0e 94 c5 2a 	call	0x558a	; 0x558a <_Z12stopEventNow19EventActionSource_t>
    3056:	c6 cf       	rjmp	.-116    	; 0x2fe4 <main+0x10e>

00003058 <_Z19handleSerialBusMsgsv>:
    3058:	ef 92       	push	r14
    305a:	ff 92       	push	r15
    305c:	0f 93       	push	r16
    305e:	1f 93       	push	r17
    3060:	cf 93       	push	r28
    3062:	df 93       	push	r29
    3064:	cd b7       	in	r28, 0x3d	; 61
    3066:	de b7       	in	r29, 0x3e	; 62
    3068:	c6 59       	subi	r28, 0x96	; 150
    306a:	d1 09       	sbc	r29, r1
    306c:	cd bf       	out	0x3d, r28	; 61
    306e:	de bf       	out	0x3e, r29	; 62
    3070:	0e 94 2e 59 	call	0xb25c	; 0xb25c <nextFullSBRxBuffer>
    3074:	8e 83       	std	Y+6, r24	; 0x06
    3076:	9f 83       	std	Y+7, r25	; 0x07
    3078:	21 e0       	ldi	r18, 0x01	; 1
    307a:	8e 81       	ldd	r24, Y+6	; 0x06
    307c:	9f 81       	ldd	r25, Y+7	; 0x07
    307e:	89 2b       	or	r24, r25
    3080:	09 f4       	brne	.+2      	; 0x3084 <_Z19handleSerialBusMsgsv+0x2c>
    3082:	20 e0       	ldi	r18, 0x00	; 0
    3084:	22 23       	and	r18, r18
    3086:	09 f4       	brne	.+2      	; 0x308a <_Z19handleSerialBusMsgsv+0x32>
    3088:	4b c7       	rjmp	.+3734   	; 0x3f20 <_Z19handleSerialBusMsgsv+0xec8>
    308a:	8e 81       	ldd	r24, Y+6	; 0x06
    308c:	9f 81       	ldd	r25, Y+7	; 0x07
    308e:	fc 01       	movw	r30, r24
    3090:	81 81       	ldd	r24, Z+1	; 0x01
    3092:	92 81       	ldd	r25, Z+2	; 0x02
    3094:	88 87       	std	Y+8, r24	; 0x08
    3096:	99 87       	std	Y+9, r25	; 0x09
    3098:	88 85       	ldd	r24, Y+8	; 0x08
    309a:	99 85       	ldd	r25, Y+9	; 0x09
    309c:	8a 3e       	cpi	r24, 0xEA	; 234
    309e:	f2 e2       	ldi	r31, 0x22	; 34
    30a0:	9f 07       	cpc	r25, r31
    30a2:	09 f4       	brne	.+2      	; 0x30a6 <_Z19handleSerialBusMsgsv+0x4e>
    30a4:	a4 c3       	rjmp	.+1864   	; 0x37ee <_Z19handleSerialBusMsgsv+0x796>
    30a6:	8b 3e       	cpi	r24, 0xEB	; 235
    30a8:	22 e2       	ldi	r18, 0x22	; 34
    30aa:	92 07       	cpc	r25, r18
    30ac:	b8 f4       	brcc	.+46     	; 0x30dc <_Z19handleSerialBusMsgsv+0x84>
    30ae:	8f 36       	cpi	r24, 0x6F	; 111
    30b0:	ed e1       	ldi	r30, 0x1D	; 29
    30b2:	9e 07       	cpc	r25, r30
    30b4:	09 f4       	brne	.+2      	; 0x30b8 <_Z19handleSerialBusMsgsv+0x60>
    30b6:	ed c3       	rjmp	.+2010   	; 0x3892 <_Z19handleSerialBusMsgsv+0x83a>
    30b8:	80 37       	cpi	r24, 0x70	; 112
    30ba:	fd e1       	ldi	r31, 0x1D	; 29
    30bc:	9f 07       	cpc	r25, r31
    30be:	28 f4       	brcc	.+10     	; 0x30ca <_Z19handleSerialBusMsgsv+0x72>
    30c0:	8e 31       	cpi	r24, 0x1E	; 30
    30c2:	93 40       	sbci	r25, 0x03	; 3
    30c4:	09 f4       	brne	.+2      	; 0x30c8 <_Z19handleSerialBusMsgsv+0x70>
    30c6:	81 c2       	rjmp	.+1282   	; 0x35ca <_Z19handleSerialBusMsgsv+0x572>
    30c8:	19 c7       	rjmp	.+3634   	; 0x3efc <_Z19handleSerialBusMsgsv+0xea4>
    30ca:	86 3c       	cpi	r24, 0xC6	; 198
    30cc:	ee e1       	ldi	r30, 0x1E	; 30
    30ce:	9e 07       	cpc	r25, r30
    30d0:	e9 f0       	breq	.+58     	; 0x310c <_Z19handleSerialBusMsgsv+0xb4>
    30d2:	81 3d       	cpi	r24, 0xD1	; 209
    30d4:	9e 41       	sbci	r25, 0x1E	; 30
    30d6:	09 f4       	brne	.+2      	; 0x30da <_Z19handleSerialBusMsgsv+0x82>
    30d8:	a9 c1       	rjmp	.+850    	; 0x342c <_Z19handleSerialBusMsgsv+0x3d4>
    30da:	10 c7       	rjmp	.+3616   	; 0x3efc <_Z19handleSerialBusMsgsv+0xea4>
    30dc:	82 37       	cpi	r24, 0x72	; 114
    30de:	23 e2       	ldi	r18, 0x23	; 35
    30e0:	92 07       	cpc	r25, r18
    30e2:	09 f4       	brne	.+2      	; 0x30e6 <_Z19handleSerialBusMsgsv+0x8e>
    30e4:	00 c3       	rjmp	.+1536   	; 0x36e6 <_Z19handleSerialBusMsgsv+0x68e>
    30e6:	83 37       	cpi	r24, 0x73	; 115
    30e8:	e3 e2       	ldi	r30, 0x23	; 35
    30ea:	9e 07       	cpc	r25, r30
    30ec:	28 f4       	brcc	.+10     	; 0x30f8 <_Z19handleSerialBusMsgsv+0xa0>
    30ee:	88 3f       	cpi	r24, 0xF8	; 248
    30f0:	92 42       	sbci	r25, 0x22	; 34
    30f2:	09 f4       	brne	.+2      	; 0x30f6 <_Z19handleSerialBusMsgsv+0x9e>
    30f4:	38 c1       	rjmp	.+624    	; 0x3366 <_Z19handleSerialBusMsgsv+0x30e>
    30f6:	02 c7       	rjmp	.+3588   	; 0x3efc <_Z19handleSerialBusMsgsv+0xea4>
    30f8:	84 33       	cpi	r24, 0x34	; 52
    30fa:	24 e2       	ldi	r18, 0x24	; 36
    30fc:	92 07       	cpc	r25, r18
    30fe:	09 f4       	brne	.+2      	; 0x3102 <_Z19handleSerialBusMsgsv+0xaa>
    3100:	29 c2       	rjmp	.+1106   	; 0x3554 <_Z19handleSerialBusMsgsv+0x4fc>
    3102:	85 3c       	cpi	r24, 0xC5	; 197
    3104:	94 42       	sbci	r25, 0x24	; 36
    3106:	09 f4       	brne	.+2      	; 0x310a <_Z19handleSerialBusMsgsv+0xb2>
    3108:	e5 c6       	rjmp	.+3530   	; 0x3ed4 <_Z19handleSerialBusMsgsv+0xe7c>
    310a:	f8 c6       	rjmp	.+3568   	; 0x3efc <_Z19handleSerialBusMsgsv+0xea4>
    310c:	8e 81       	ldd	r24, Y+6	; 0x06
    310e:	9f 81       	ldd	r25, Y+7	; 0x07
    3110:	fc 01       	movw	r30, r24
    3112:	83 81       	ldd	r24, Z+3	; 0x03
    3114:	88 2f       	mov	r24, r24
    3116:	90 e0       	ldi	r25, 0x00	; 0
    3118:	89 83       	std	Y+1, r24	; 0x01
    311a:	9a 83       	std	Y+2, r25	; 0x02
    311c:	89 81       	ldd	r24, Y+1	; 0x01
    311e:	9a 81       	ldd	r25, Y+2	; 0x02
    3120:	89 2b       	or	r24, r25
    3122:	09 f4       	brne	.+2      	; 0x3126 <_Z19handleSerialBusMsgsv+0xce>
    3124:	d0 c0       	rjmp	.+416    	; 0x32c6 <_Z19handleSerialBusMsgsv+0x26e>
    3126:	89 81       	ldd	r24, Y+1	; 0x01
    3128:	9a 81       	ldd	r25, Y+2	; 0x02
    312a:	82 34       	cpi	r24, 0x42	; 66
    312c:	91 05       	cpc	r25, r1
    312e:	19 f4       	brne	.+6      	; 0x3136 <_Z19handleSerialBusMsgsv+0xde>
    3130:	19 82       	std	Y+1, r1	; 0x01
    3132:	1a 82       	std	Y+2, r1	; 0x02
    3134:	ac c0       	rjmp	.+344    	; 0x328e <_Z19handleSerialBusMsgsv+0x236>
    3136:	89 81       	ldd	r24, Y+1	; 0x01
    3138:	9a 81       	ldd	r25, Y+2	; 0x02
    313a:	86 34       	cpi	r24, 0x46	; 70
    313c:	91 05       	cpc	r25, r1
    313e:	29 f4       	brne	.+10     	; 0x314a <_Z19handleSerialBusMsgsv+0xf2>
    3140:	86 e0       	ldi	r24, 0x06	; 6
    3142:	90 e0       	ldi	r25, 0x00	; 0
    3144:	89 83       	std	Y+1, r24	; 0x01
    3146:	9a 83       	std	Y+2, r25	; 0x02
    3148:	a2 c0       	rjmp	.+324    	; 0x328e <_Z19handleSerialBusMsgsv+0x236>
    314a:	89 81       	ldd	r24, Y+1	; 0x01
    314c:	9a 81       	ldd	r25, Y+2	; 0x02
    314e:	83 34       	cpi	r24, 0x43	; 67
    3150:	91 05       	cpc	r25, r1
    3152:	b9 f5       	brne	.+110    	; 0x31c2 <_Z19handleSerialBusMsgsv+0x16a>
    3154:	8e 81       	ldd	r24, Y+6	; 0x06
    3156:	9f 81       	ldd	r25, Y+7	; 0x07
    3158:	fc 01       	movw	r30, r24
    315a:	87 89       	ldd	r24, Z+23	; 0x17
    315c:	8b 83       	std	Y+3, r24	; 0x03
    315e:	8e 81       	ldd	r24, Y+6	; 0x06
    3160:	9f 81       	ldd	r25, Y+7	; 0x07
    3162:	fc 01       	movw	r30, r24
    3164:	10 8e       	std	Z+24, r1	; 0x18
    3166:	8b 81       	ldd	r24, Y+3	; 0x03
    3168:	82 34       	cpi	r24, 0x42	; 66
    316a:	11 f4       	brne	.+4      	; 0x3170 <_Z19handleSerialBusMsgsv+0x118>
    316c:	80 e3       	ldi	r24, 0x30	; 48
    316e:	8b 83       	std	Y+3, r24	; 0x03
    3170:	8b 81       	ldd	r24, Y+3	; 0x03
    3172:	88 2f       	mov	r24, r24
    3174:	90 e0       	ldi	r25, 0x00	; 0
    3176:	c0 97       	sbiw	r24, 0x30	; 48
    3178:	0a 97       	sbiw	r24, 0x0a	; 10
    317a:	08 f0       	brcs	.+2      	; 0x317e <_Z19handleSerialBusMsgsv+0x126>
    317c:	88 c0       	rjmp	.+272    	; 0x328e <_Z19handleSerialBusMsgsv+0x236>
    317e:	8e 81       	ldd	r24, Y+6	; 0x06
    3180:	9f 81       	ldd	r25, Y+7	; 0x07
    3182:	47 96       	adiw	r24, 0x17	; 23
    3184:	0e 94 8b 73 	call	0xe716	; 0xe716 <atoi>
    3188:	8a 87       	std	Y+10, r24	; 0x0a
    318a:	9b 87       	std	Y+11, r25	; 0x0b
    318c:	1c 86       	std	Y+12, r1	; 0x0c
    318e:	85 e0       	ldi	r24, 0x05	; 5
    3190:	8d 87       	std	Y+13, r24	; 0x0d
    3192:	8d 85       	ldd	r24, Y+13	; 0x0d
    3194:	28 2f       	mov	r18, r24
    3196:	30 e0       	ldi	r19, 0x00	; 0
    3198:	8a 85       	ldd	r24, Y+10	; 0x0a
    319a:	9b 85       	ldd	r25, Y+11	; 0x0b
    319c:	28 17       	cp	r18, r24
    319e:	39 07       	cpc	r19, r25
    31a0:	24 f4       	brge	.+8      	; 0x31aa <_Z19handleSerialBusMsgsv+0x152>
    31a2:	8d 85       	ldd	r24, Y+13	; 0x0d
    31a4:	88 2f       	mov	r24, r24
    31a6:	90 e0       	ldi	r25, 0x00	; 0
    31a8:	09 c0       	rjmp	.+18     	; 0x31bc <_Z19handleSerialBusMsgsv+0x164>
    31aa:	8c 85       	ldd	r24, Y+12	; 0x0c
    31ac:	88 2f       	mov	r24, r24
    31ae:	90 e0       	ldi	r25, 0x00	; 0
    31b0:	2a 85       	ldd	r18, Y+10	; 0x0a
    31b2:	3b 85       	ldd	r19, Y+11	; 0x0b
    31b4:	82 17       	cp	r24, r18
    31b6:	93 07       	cpc	r25, r19
    31b8:	0c f4       	brge	.+2      	; 0x31bc <_Z19handleSerialBusMsgsv+0x164>
    31ba:	c9 01       	movw	r24, r18
    31bc:	89 83       	std	Y+1, r24	; 0x01
    31be:	9a 83       	std	Y+2, r25	; 0x02
    31c0:	66 c0       	rjmp	.+204    	; 0x328e <_Z19handleSerialBusMsgsv+0x236>
    31c2:	89 81       	ldd	r24, Y+1	; 0x01
    31c4:	9a 81       	ldd	r25, Y+2	; 0x02
    31c6:	83 35       	cpi	r24, 0x53	; 83
    31c8:	91 05       	cpc	r25, r1
    31ca:	09 f0       	breq	.+2      	; 0x31ce <_Z19handleSerialBusMsgsv+0x176>
    31cc:	59 c0       	rjmp	.+178    	; 0x3280 <_Z19handleSerialBusMsgsv+0x228>
    31ce:	1c 82       	std	Y+4, r1	; 0x04
    31d0:	8e 81       	ldd	r24, Y+6	; 0x06
    31d2:	9f 81       	ldd	r25, Y+7	; 0x07
    31d4:	fc 01       	movw	r30, r24
    31d6:	87 89       	ldd	r24, Z+23	; 0x17
    31d8:	8e 87       	std	Y+14, r24	; 0x0e
    31da:	8e 81       	ldd	r24, Y+6	; 0x06
    31dc:	9f 81       	ldd	r25, Y+7	; 0x07
    31de:	fc 01       	movw	r30, r24
    31e0:	80 8d       	ldd	r24, Z+24	; 0x18
    31e2:	8f 87       	std	Y+15, r24	; 0x0f
    31e4:	8e 81       	ldd	r24, Y+6	; 0x06
    31e6:	9f 81       	ldd	r25, Y+7	; 0x07
    31e8:	fc 01       	movw	r30, r24
    31ea:	11 8e       	std	Z+25, r1	; 0x19
    31ec:	8e 85       	ldd	r24, Y+14	; 0x0e
    31ee:	82 34       	cpi	r24, 0x42	; 66
    31f0:	11 f4       	brne	.+4      	; 0x31f6 <_Z19handleSerialBusMsgsv+0x19e>
    31f2:	1c 82       	std	Y+4, r1	; 0x04
    31f4:	36 c0       	rjmp	.+108    	; 0x3262 <_Z19handleSerialBusMsgsv+0x20a>
    31f6:	8e 85       	ldd	r24, Y+14	; 0x0e
    31f8:	86 34       	cpi	r24, 0x46	; 70
    31fa:	51 f4       	brne	.+20     	; 0x3210 <_Z19handleSerialBusMsgsv+0x1b8>
    31fc:	8f 85       	ldd	r24, Y+15	; 0x0f
    31fe:	81 33       	cpi	r24, 0x31	; 49
    3200:	80 f1       	brcs	.+96     	; 0x3262 <_Z19handleSerialBusMsgsv+0x20a>
    3202:	8f 85       	ldd	r24, Y+15	; 0x0f
    3204:	86 33       	cpi	r24, 0x36	; 54
    3206:	68 f5       	brcc	.+90     	; 0x3262 <_Z19handleSerialBusMsgsv+0x20a>
    3208:	8f 85       	ldd	r24, Y+15	; 0x0f
    320a:	84 52       	subi	r24, 0x24	; 36
    320c:	8c 83       	std	Y+4, r24	; 0x04
    320e:	29 c0       	rjmp	.+82     	; 0x3262 <_Z19handleSerialBusMsgsv+0x20a>
    3210:	8e 85       	ldd	r24, Y+14	; 0x0e
    3212:	83 35       	cpi	r24, 0x53	; 83
    3214:	69 f4       	brne	.+26     	; 0x3230 <_Z19handleSerialBusMsgsv+0x1d8>
    3216:	8f 85       	ldd	r24, Y+15	; 0x0f
    3218:	81 33       	cpi	r24, 0x31	; 49
    321a:	38 f0       	brcs	.+14     	; 0x322a <_Z19handleSerialBusMsgsv+0x1d2>
    321c:	8f 85       	ldd	r24, Y+15	; 0x0f
    321e:	86 33       	cpi	r24, 0x36	; 54
    3220:	20 f4       	brcc	.+8      	; 0x322a <_Z19handleSerialBusMsgsv+0x1d2>
    3222:	8f 85       	ldd	r24, Y+15	; 0x0f
    3224:	89 52       	subi	r24, 0x29	; 41
    3226:	8c 83       	std	Y+4, r24	; 0x04
    3228:	1c c0       	rjmp	.+56     	; 0x3262 <_Z19handleSerialBusMsgsv+0x20a>
    322a:	87 e0       	ldi	r24, 0x07	; 7
    322c:	8c 83       	std	Y+4, r24	; 0x04
    322e:	19 c0       	rjmp	.+50     	; 0x3262 <_Z19handleSerialBusMsgsv+0x20a>
    3230:	8f 85       	ldd	r24, Y+15	; 0x0f
    3232:	86 34       	cpi	r24, 0x46	; 70
    3234:	51 f4       	brne	.+20     	; 0x324a <_Z19handleSerialBusMsgsv+0x1f2>
    3236:	8e 85       	ldd	r24, Y+14	; 0x0e
    3238:	81 33       	cpi	r24, 0x31	; 49
    323a:	98 f0       	brcs	.+38     	; 0x3262 <_Z19handleSerialBusMsgsv+0x20a>
    323c:	8e 85       	ldd	r24, Y+14	; 0x0e
    323e:	86 33       	cpi	r24, 0x36	; 54
    3240:	80 f4       	brcc	.+32     	; 0x3262 <_Z19handleSerialBusMsgsv+0x20a>
    3242:	8e 85       	ldd	r24, Y+14	; 0x0e
    3244:	84 52       	subi	r24, 0x24	; 36
    3246:	8c 83       	std	Y+4, r24	; 0x04
    3248:	0c c0       	rjmp	.+24     	; 0x3262 <_Z19handleSerialBusMsgsv+0x20a>
    324a:	8f 85       	ldd	r24, Y+15	; 0x0f
    324c:	83 35       	cpi	r24, 0x53	; 83
    324e:	49 f4       	brne	.+18     	; 0x3262 <_Z19handleSerialBusMsgsv+0x20a>
    3250:	8e 85       	ldd	r24, Y+14	; 0x0e
    3252:	81 33       	cpi	r24, 0x31	; 49
    3254:	30 f0       	brcs	.+12     	; 0x3262 <_Z19handleSerialBusMsgsv+0x20a>
    3256:	8e 85       	ldd	r24, Y+14	; 0x0e
    3258:	86 33       	cpi	r24, 0x36	; 54
    325a:	18 f4       	brcc	.+6      	; 0x3262 <_Z19handleSerialBusMsgsv+0x20a>
    325c:	8e 85       	ldd	r24, Y+14	; 0x0e
    325e:	89 52       	subi	r24, 0x29	; 41
    3260:	8c 83       	std	Y+4, r24	; 0x04
    3262:	8c 81       	ldd	r24, Y+4	; 0x04
    3264:	87 30       	cpi	r24, 0x07	; 7
    3266:	48 f0       	brcs	.+18     	; 0x327a <_Z19handleSerialBusMsgsv+0x222>
    3268:	8c 81       	ldd	r24, Y+4	; 0x04
    326a:	82 31       	cpi	r24, 0x12	; 18
    326c:	30 f4       	brcc	.+12     	; 0x327a <_Z19handleSerialBusMsgsv+0x222>
    326e:	8c 81       	ldd	r24, Y+4	; 0x04
    3270:	88 2f       	mov	r24, r24
    3272:	90 e0       	ldi	r25, 0x00	; 0
    3274:	89 83       	std	Y+1, r24	; 0x01
    3276:	9a 83       	std	Y+2, r25	; 0x02
    3278:	0a c0       	rjmp	.+20     	; 0x328e <_Z19handleSerialBusMsgsv+0x236>
    327a:	19 82       	std	Y+1, r1	; 0x01
    327c:	1a 82       	std	Y+2, r1	; 0x02
    327e:	07 c0       	rjmp	.+14     	; 0x328e <_Z19handleSerialBusMsgsv+0x236>
    3280:	8e 81       	ldd	r24, Y+6	; 0x06
    3282:	9f 81       	ldd	r25, Y+7	; 0x07
    3284:	03 96       	adiw	r24, 0x03	; 3
    3286:	0e 94 8b 73 	call	0xe716	; 0xe716 <atoi>
    328a:	89 83       	std	Y+1, r24	; 0x01
    328c:	9a 83       	std	Y+2, r25	; 0x02
    328e:	89 81       	ldd	r24, Y+1	; 0x01
    3290:	9a 81       	ldd	r25, Y+2	; 0x02
    3292:	99 23       	and	r25, r25
    3294:	c4 f0       	brlt	.+48     	; 0x32c6 <_Z19handleSerialBusMsgsv+0x26e>
    3296:	89 81       	ldd	r24, Y+1	; 0x01
    3298:	9a 81       	ldd	r25, Y+2	; 0x02
    329a:	42 97       	sbiw	r24, 0x12	; 18
    329c:	a4 f4       	brge	.+40     	; 0x32c6 <_Z19handleSerialBusMsgsv+0x26e>
    329e:	89 81       	ldd	r24, Y+1	; 0x01
    32a0:	8a a7       	std	Y+42, r24	; 0x2a
    32a2:	ce 01       	movw	r24, r28
    32a4:	8a 96       	adiw	r24, 0x2a	; 42
    32a6:	ac 01       	movw	r20, r24
    32a8:	69 e2       	ldi	r22, 0x29	; 41
    32aa:	8a ed       	ldi	r24, 0xDA	; 218
    32ac:	97 e4       	ldi	r25, 0x47	; 71
    32ae:	0e 94 0a 44 	call	0x8814	; 0x8814 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
    32b2:	9a a5       	ldd	r25, Y+42	; 0x2a
    32b4:	80 91 1b 40 	lds	r24, 0x401B	; 0x80401b <g_fox>
    32b8:	98 17       	cp	r25, r24
    32ba:	29 f0       	breq	.+10     	; 0x32c6 <_Z19handleSerialBusMsgsv+0x26e>
    32bc:	ce 01       	movw	r24, r28
    32be:	8a 96       	adiw	r24, 0x2a	; 42
    32c0:	60 e0       	ldi	r22, 0x00	; 0
    32c2:	0e 94 88 2b 	call	0x5710	; 0x5710 <_Z11setupForFoxP5Fox_t13EventAction_t>
    32c6:	80 91 1b 40 	lds	r24, 0x401B	; 0x80401b <g_fox>
    32ca:	68 2f       	mov	r22, r24
    32cc:	89 e4       	ldi	r24, 0x49	; 73
    32ce:	97 e4       	ldi	r25, 0x47	; 71
    32d0:	0e 94 44 6e 	call	0xdc88	; 0xdc88 <_Z8fox2TextPc5Fox_t>
    32d4:	98 2f       	mov	r25, r24
    32d6:	81 e0       	ldi	r24, 0x01	; 1
    32d8:	89 27       	eor	r24, r25
    32da:	88 23       	and	r24, r24
    32dc:	11 f1       	breq	.+68     	; 0x3322 <_Z19handleSerialBusMsgsv+0x2ca>
    32de:	ce 01       	movw	r24, r28
    32e0:	8b 96       	adiw	r24, 0x2b	; 43
    32e2:	69 e4       	ldi	r22, 0x49	; 73
    32e4:	77 e4       	ldi	r23, 0x47	; 71
    32e6:	0e 94 f5 73 	call	0xe7ea	; 0xe7ea <strcpy>
    32ea:	ce 01       	movw	r24, r28
    32ec:	8b 96       	adiw	r24, 0x2b	; 43
    32ee:	29 2f       	mov	r18, r25
    32f0:	2f 93       	push	r18
    32f2:	8f 93       	push	r24
    32f4:	88 e0       	ldi	r24, 0x08	; 8
    32f6:	92 e4       	ldi	r25, 0x42	; 66
    32f8:	89 2f       	mov	r24, r25
    32fa:	8f 93       	push	r24
    32fc:	88 e0       	ldi	r24, 0x08	; 8
    32fe:	92 e4       	ldi	r25, 0x42	; 66
    3300:	8f 93       	push	r24
    3302:	89 e4       	ldi	r24, 0x49	; 73
    3304:	97 e4       	ldi	r25, 0x47	; 71
    3306:	89 2f       	mov	r24, r25
    3308:	8f 93       	push	r24
    330a:	89 e4       	ldi	r24, 0x49	; 73
    330c:	97 e4       	ldi	r25, 0x47	; 71
    330e:	8f 93       	push	r24
    3310:	0e 94 31 74 	call	0xe862	; 0xe862 <sprintf>
    3314:	0f 90       	pop	r0
    3316:	0f 90       	pop	r0
    3318:	0f 90       	pop	r0
    331a:	0f 90       	pop	r0
    331c:	0f 90       	pop	r0
    331e:	0f 90       	pop	r0
    3320:	1d c0       	rjmp	.+58     	; 0x335c <_Z19handleSerialBusMsgsv+0x304>
    3322:	80 91 1b 40 	lds	r24, 0x401B	; 0x80401b <g_fox>
    3326:	88 2f       	mov	r24, r24
    3328:	90 e0       	ldi	r25, 0x00	; 0
    332a:	29 2f       	mov	r18, r25
    332c:	2f 93       	push	r18
    332e:	8f 93       	push	r24
    3330:	80 e1       	ldi	r24, 0x10	; 16
    3332:	92 e4       	ldi	r25, 0x42	; 66
    3334:	89 2f       	mov	r24, r25
    3336:	8f 93       	push	r24
    3338:	80 e1       	ldi	r24, 0x10	; 16
    333a:	92 e4       	ldi	r25, 0x42	; 66
    333c:	8f 93       	push	r24
    333e:	89 e4       	ldi	r24, 0x49	; 73
    3340:	97 e4       	ldi	r25, 0x47	; 71
    3342:	89 2f       	mov	r24, r25
    3344:	8f 93       	push	r24
    3346:	89 e4       	ldi	r24, 0x49	; 73
    3348:	97 e4       	ldi	r25, 0x47	; 71
    334a:	8f 93       	push	r24
    334c:	0e 94 31 74 	call	0xe862	; 0xe862 <sprintf>
    3350:	0f 90       	pop	r0
    3352:	0f 90       	pop	r0
    3354:	0f 90       	pop	r0
    3356:	0f 90       	pop	r0
    3358:	0f 90       	pop	r0
    335a:	0f 90       	pop	r0
    335c:	89 e4       	ldi	r24, 0x49	; 73
    335e:	97 e4       	ldi	r25, 0x47	; 71
    3360:	0e 94 fd 5a 	call	0xb5fa	; 0xb5fa <sb_send_string>
    3364:	d5 c5       	rjmp	.+2986   	; 0x3f10 <_Z19handleSerialBusMsgsv+0xeb8>
    3366:	8e 81       	ldd	r24, Y+6	; 0x06
    3368:	9f 81       	ldd	r25, Y+7	; 0x07
    336a:	fc 01       	movw	r30, r24
    336c:	83 81       	ldd	r24, Z+3	; 0x03
    336e:	88 23       	and	r24, r24
    3370:	e9 f1       	breq	.+122    	; 0x33ec <_Z19handleSerialBusMsgsv+0x394>
    3372:	8e 81       	ldd	r24, Y+6	; 0x06
    3374:	9f 81       	ldd	r25, Y+7	; 0x07
    3376:	03 96       	adiw	r24, 0x03	; 3
    3378:	0e 94 8b 73 	call	0xe716	; 0xe716 <atoi>
    337c:	80 93 ee 47 	sts	0x47EE, r24	; 0x8047ee <_ZZ19handleSerialBusMsgsvE6pwr_mW>
    3380:	90 93 ef 47 	sts	0x47EF, r25	; 0x8047ef <_ZZ19handleSerialBusMsgsvE6pwr_mW+0x1>
    3384:	80 91 ee 47 	lds	r24, 0x47EE	; 0x8047ee <_ZZ19handleSerialBusMsgsvE6pwr_mW>
    3388:	90 91 ef 47 	lds	r25, 0x47EF	; 0x8047ef <_ZZ19handleSerialBusMsgsvE6pwr_mW+0x1>
    338c:	89 38       	cpi	r24, 0x89	; 137
    338e:	93 41       	sbci	r25, 0x13	; 19
    3390:	68 f4       	brcc	.+26     	; 0x33ac <_Z19handleSerialBusMsgsv+0x354>
    3392:	60 e0       	ldi	r22, 0x00	; 0
    3394:	70 e0       	ldi	r23, 0x00	; 0
    3396:	8e ee       	ldi	r24, 0xEE	; 238
    3398:	97 e4       	ldi	r25, 0x47	; 71
    339a:	0e 94 df 67 	call	0xcfbe	; 0xcfbe <_Z15txSetParametersPjPb>
    339e:	88 8b       	std	Y+16, r24	; 0x10
    33a0:	88 89       	ldd	r24, Y+16	; 0x10
    33a2:	88 23       	and	r24, r24
    33a4:	19 f0       	breq	.+6      	; 0x33ac <_Z19handleSerialBusMsgsv+0x354>
    33a6:	88 89       	ldd	r24, Y+16	; 0x10
    33a8:	80 93 7b 47 	sts	0x477B, r24	; 0x80477b <_ZL17g_last_error_code>
    33ac:	0e 94 d4 67 	call	0xcfa8	; 0xcfa8 <_Z12txGetPowerMwv>
    33b0:	29 2f       	mov	r18, r25
    33b2:	2f 93       	push	r18
    33b4:	8f 93       	push	r24
    33b6:	88 e1       	ldi	r24, 0x18	; 24
    33b8:	92 e4       	ldi	r25, 0x42	; 66
    33ba:	89 2f       	mov	r24, r25
    33bc:	8f 93       	push	r24
    33be:	88 e1       	ldi	r24, 0x18	; 24
    33c0:	92 e4       	ldi	r25, 0x42	; 66
    33c2:	8f 93       	push	r24
    33c4:	89 e4       	ldi	r24, 0x49	; 73
    33c6:	97 e4       	ldi	r25, 0x47	; 71
    33c8:	89 2f       	mov	r24, r25
    33ca:	8f 93       	push	r24
    33cc:	89 e4       	ldi	r24, 0x49	; 73
    33ce:	97 e4       	ldi	r25, 0x47	; 71
    33d0:	8f 93       	push	r24
    33d2:	0e 94 31 74 	call	0xe862	; 0xe862 <sprintf>
    33d6:	0f 90       	pop	r0
    33d8:	0f 90       	pop	r0
    33da:	0f 90       	pop	r0
    33dc:	0f 90       	pop	r0
    33de:	0f 90       	pop	r0
    33e0:	0f 90       	pop	r0
    33e2:	89 e4       	ldi	r24, 0x49	; 73
    33e4:	97 e4       	ldi	r25, 0x47	; 71
    33e6:	0e 94 fd 5a 	call	0xb5fa	; 0xb5fa <sb_send_string>
    33ea:	92 c5       	rjmp	.+2852   	; 0x3f10 <_Z19handleSerialBusMsgsv+0xeb8>
    33ec:	0e 94 d4 67 	call	0xcfa8	; 0xcfa8 <_Z12txGetPowerMwv>
    33f0:	29 2f       	mov	r18, r25
    33f2:	2f 93       	push	r18
    33f4:	8f 93       	push	r24
    33f6:	88 e1       	ldi	r24, 0x18	; 24
    33f8:	92 e4       	ldi	r25, 0x42	; 66
    33fa:	89 2f       	mov	r24, r25
    33fc:	8f 93       	push	r24
    33fe:	88 e1       	ldi	r24, 0x18	; 24
    3400:	92 e4       	ldi	r25, 0x42	; 66
    3402:	8f 93       	push	r24
    3404:	89 e4       	ldi	r24, 0x49	; 73
    3406:	97 e4       	ldi	r25, 0x47	; 71
    3408:	89 2f       	mov	r24, r25
    340a:	8f 93       	push	r24
    340c:	89 e4       	ldi	r24, 0x49	; 73
    340e:	97 e4       	ldi	r25, 0x47	; 71
    3410:	8f 93       	push	r24
    3412:	0e 94 31 74 	call	0xe862	; 0xe862 <sprintf>
    3416:	0f 90       	pop	r0
    3418:	0f 90       	pop	r0
    341a:	0f 90       	pop	r0
    341c:	0f 90       	pop	r0
    341e:	0f 90       	pop	r0
    3420:	0f 90       	pop	r0
    3422:	89 e4       	ldi	r24, 0x49	; 73
    3424:	97 e4       	ldi	r25, 0x47	; 71
    3426:	0e 94 fd 5a 	call	0xb5fa	; 0xb5fa <sb_send_string>
    342a:	72 c5       	rjmp	.+2788   	; 0x3f10 <_Z19handleSerialBusMsgsv+0xeb8>
    342c:	19 8a       	std	Y+17, r1	; 0x11
    342e:	1a 8a       	std	Y+18, r1	; 0x12
    3430:	1b 8a       	std	Y+19, r1	; 0x13
    3432:	1c 8a       	std	Y+20, r1	; 0x14
    3434:	8e 81       	ldd	r24, Y+6	; 0x06
    3436:	9f 81       	ldd	r25, Y+7	; 0x07
    3438:	fc 01       	movw	r30, r24
    343a:	83 81       	ldd	r24, Z+3	; 0x03
    343c:	88 23       	and	r24, r24
    343e:	49 f1       	breq	.+82     	; 0x3492 <_Z19handleSerialBusMsgsv+0x43a>
    3440:	8e 81       	ldd	r24, Y+6	; 0x06
    3442:	9f 81       	ldd	r25, Y+7	; 0x07
    3444:	03 96       	adiw	r24, 0x03	; 3
    3446:	9e 01       	movw	r18, r28
    3448:	2c 5b       	subi	r18, 0xBC	; 188
    344a:	3f 4f       	sbci	r19, 0xFF	; 255
    344c:	b9 01       	movw	r22, r18
    344e:	0e 94 7f 6c 	call	0xd8fe	; 0xd8fe <_Z12frequencyValPcPm>
    3452:	ce 01       	movw	r24, r28
    3454:	8c 5b       	subi	r24, 0xBC	; 188
    3456:	9f 4f       	sbci	r25, 0xFF	; 255
    3458:	61 e0       	ldi	r22, 0x01	; 1
    345a:	0e 94 37 67 	call	0xce6e	; 0xce6e <_Z14txSetFrequencyPmb>
    345e:	98 2f       	mov	r25, r24
    3460:	81 e0       	ldi	r24, 0x01	; 1
    3462:	89 27       	eor	r24, r25
    3464:	88 23       	and	r24, r24
    3466:	89 f0       	breq	.+34     	; 0x348a <_Z19handleSerialBusMsgsv+0x432>
    3468:	ce 01       	movw	r24, r28
    346a:	8c 5b       	subi	r24, 0xBC	; 188
    346c:	9f 4f       	sbci	r25, 0xFF	; 255
    346e:	fc 01       	movw	r30, r24
    3470:	80 81       	ld	r24, Z
    3472:	91 81       	ldd	r25, Z+1	; 0x01
    3474:	a2 81       	ldd	r26, Z+2	; 0x02
    3476:	b3 81       	ldd	r27, Z+3	; 0x03
    3478:	89 8b       	std	Y+17, r24	; 0x11
    347a:	9a 8b       	std	Y+18, r25	; 0x12
    347c:	ab 8b       	std	Y+19, r26	; 0x13
    347e:	bc 8b       	std	Y+20, r27	; 0x14
    3480:	8a ed       	ldi	r24, 0xDA	; 218
    3482:	97 e4       	ldi	r25, 0x47	; 71
    3484:	0e 94 0c 45 	call	0x8a18	; 0x8a18 <_ZN13EepromManager13saveAllEEPROMEv>
    3488:	04 c0       	rjmp	.+8      	; 0x3492 <_Z19handleSerialBusMsgsv+0x43a>
    348a:	83 e2       	ldi	r24, 0x23	; 35
    348c:	92 e4       	ldi	r25, 0x42	; 66
    348e:	0e 94 fd 5a 	call	0xb5fa	; 0xb5fa <sb_send_string>
    3492:	0e 94 81 67 	call	0xcf02	; 0xcf02 <_Z14txGetFrequencyv>
    3496:	dc 01       	movw	r26, r24
    3498:	cb 01       	movw	r24, r22
    349a:	89 8b       	std	Y+17, r24	; 0x11
    349c:	9a 8b       	std	Y+18, r25	; 0x12
    349e:	ab 8b       	std	Y+19, r26	; 0x13
    34a0:	bc 8b       	std	Y+20, r27	; 0x14
    34a2:	89 89       	ldd	r24, Y+17	; 0x11
    34a4:	9a 89       	ldd	r25, Y+18	; 0x12
    34a6:	ab 89       	ldd	r26, Y+19	; 0x13
    34a8:	bc 89       	ldd	r27, Y+20	; 0x14
    34aa:	89 2b       	or	r24, r25
    34ac:	8a 2b       	or	r24, r26
    34ae:	8b 2b       	or	r24, r27
    34b0:	09 f4       	brne	.+2      	; 0x34b4 <_Z19handleSerialBusMsgsv+0x45c>
    34b2:	29 c5       	rjmp	.+2642   	; 0x3f06 <_Z19handleSerialBusMsgsv+0xeae>
    34b4:	89 89       	ldd	r24, Y+17	; 0x11
    34b6:	9a 89       	ldd	r25, Y+18	; 0x12
    34b8:	ab 89       	ldd	r26, Y+19	; 0x13
    34ba:	bc 89       	ldd	r27, Y+20	; 0x14
    34bc:	9e 01       	movw	r18, r28
    34be:	28 5b       	subi	r18, 0xB8	; 184
    34c0:	3f 4f       	sbci	r19, 0xFF	; 255
    34c2:	ac 01       	movw	r20, r24
    34c4:	bd 01       	movw	r22, r26
    34c6:	c9 01       	movw	r24, r18
    34c8:	0e 94 03 6c 	call	0xd806	; 0xd806 <_Z15frequencyStringPcm>
    34cc:	98 2f       	mov	r25, r24
    34ce:	81 e0       	ldi	r24, 0x01	; 1
    34d0:	89 27       	eor	r24, r25
    34d2:	88 23       	and	r24, r24
    34d4:	e9 f0       	breq	.+58     	; 0x3510 <_Z19handleSerialBusMsgsv+0x4b8>
    34d6:	ce 01       	movw	r24, r28
    34d8:	88 5b       	subi	r24, 0xB8	; 184
    34da:	9f 4f       	sbci	r25, 0xFF	; 255
    34dc:	29 2f       	mov	r18, r25
    34de:	2f 93       	push	r18
    34e0:	8f 93       	push	r24
    34e2:	8e e4       	ldi	r24, 0x4E	; 78
    34e4:	92 e4       	ldi	r25, 0x42	; 66
    34e6:	89 2f       	mov	r24, r25
    34e8:	8f 93       	push	r24
    34ea:	8e e4       	ldi	r24, 0x4E	; 78
    34ec:	92 e4       	ldi	r25, 0x42	; 66
    34ee:	8f 93       	push	r24
    34f0:	89 e4       	ldi	r24, 0x49	; 73
    34f2:	97 e4       	ldi	r25, 0x47	; 71
    34f4:	89 2f       	mov	r24, r25
    34f6:	8f 93       	push	r24
    34f8:	89 e4       	ldi	r24, 0x49	; 73
    34fa:	97 e4       	ldi	r25, 0x47	; 71
    34fc:	8f 93       	push	r24
    34fe:	0e 94 31 74 	call	0xe862	; 0xe862 <sprintf>
    3502:	0f 90       	pop	r0
    3504:	0f 90       	pop	r0
    3506:	0f 90       	pop	r0
    3508:	0f 90       	pop	r0
    350a:	0f 90       	pop	r0
    350c:	0f 90       	pop	r0
    350e:	1d c0       	rjmp	.+58     	; 0x354a <_Z19handleSerialBusMsgsv+0x4f2>
    3510:	8c 89       	ldd	r24, Y+20	; 0x14
    3512:	8f 93       	push	r24
    3514:	8b 89       	ldd	r24, Y+19	; 0x13
    3516:	8f 93       	push	r24
    3518:	8a 89       	ldd	r24, Y+18	; 0x12
    351a:	8f 93       	push	r24
    351c:	89 89       	ldd	r24, Y+17	; 0x11
    351e:	8f 93       	push	r24
    3520:	86 e5       	ldi	r24, 0x56	; 86
    3522:	92 e4       	ldi	r25, 0x42	; 66
    3524:	89 2f       	mov	r24, r25
    3526:	8f 93       	push	r24
    3528:	86 e5       	ldi	r24, 0x56	; 86
    352a:	92 e4       	ldi	r25, 0x42	; 66
    352c:	8f 93       	push	r24
    352e:	89 e4       	ldi	r24, 0x49	; 73
    3530:	97 e4       	ldi	r25, 0x47	; 71
    3532:	89 2f       	mov	r24, r25
    3534:	8f 93       	push	r24
    3536:	89 e4       	ldi	r24, 0x49	; 73
    3538:	97 e4       	ldi	r25, 0x47	; 71
    353a:	8f 93       	push	r24
    353c:	0e 94 31 74 	call	0xe862	; 0xe862 <sprintf>
    3540:	8d b7       	in	r24, 0x3d	; 61
    3542:	9e b7       	in	r25, 0x3e	; 62
    3544:	08 96       	adiw	r24, 0x08	; 8
    3546:	cd bf       	out	0x3d, r28	; 61
    3548:	de bf       	out	0x3e, r29	; 62
    354a:	89 e4       	ldi	r24, 0x49	; 73
    354c:	97 e4       	ldi	r25, 0x47	; 71
    354e:	0e 94 fd 5a 	call	0xb5fa	; 0xb5fa <sb_send_string>
    3552:	d9 c4       	rjmp	.+2482   	; 0x3f06 <_Z19handleSerialBusMsgsv+0xeae>
    3554:	8e 81       	ldd	r24, Y+6	; 0x06
    3556:	9f 81       	ldd	r25, Y+7	; 0x07
    3558:	fc 01       	movw	r30, r24
    355a:	83 81       	ldd	r24, Z+3	; 0x03
    355c:	88 23       	and	r24, r24
    355e:	81 f1       	breq	.+96     	; 0x35c0 <_Z19handleSerialBusMsgsv+0x568>
    3560:	8e 81       	ldd	r24, Y+6	; 0x06
    3562:	9f 81       	ldd	r25, Y+7	; 0x07
    3564:	fc 01       	movw	r30, r24
    3566:	83 81       	ldd	r24, Z+3	; 0x03
    3568:	80 33       	cpi	r24, 0x30	; 48
    356a:	21 f4       	brne	.+8      	; 0x3574 <_Z19handleSerialBusMsgsv+0x51c>
    356c:	82 e0       	ldi	r24, 0x02	; 2
    356e:	0e 94 c5 2a 	call	0x558a	; 0x558a <_Z12stopEventNow19EventActionSource_t>
    3572:	ce c4       	rjmp	.+2460   	; 0x3f10 <_Z19handleSerialBusMsgsv+0xeb8>
    3574:	8e 81       	ldd	r24, Y+6	; 0x06
    3576:	9f 81       	ldd	r25, Y+7	; 0x07
    3578:	fc 01       	movw	r30, r24
    357a:	83 81       	ldd	r24, Z+3	; 0x03
    357c:	81 33       	cpi	r24, 0x31	; 49
    357e:	21 f4       	brne	.+8      	; 0x3588 <_Z19handleSerialBusMsgsv+0x530>
    3580:	82 e0       	ldi	r24, 0x02	; 2
    3582:	0e 94 63 2a 	call	0x54c6	; 0x54c6 <_Z13startEventNow19EventActionSource_t>
    3586:	c4 c4       	rjmp	.+2440   	; 0x3f10 <_Z19handleSerialBusMsgsv+0xeb8>
    3588:	8e 81       	ldd	r24, Y+6	; 0x06
    358a:	9f 81       	ldd	r25, Y+7	; 0x07
    358c:	fc 01       	movw	r30, r24
    358e:	83 81       	ldd	r24, Z+3	; 0x03
    3590:	82 33       	cpi	r24, 0x32	; 50
    3592:	29 f4       	brne	.+10     	; 0x359e <_Z19handleSerialBusMsgsv+0x546>
    3594:	10 92 c4 47 	sts	0x47C4, r1	; 0x8047c4 <g_event_enabled>
    3598:	0e 94 f3 2a 	call	0x55e6	; 0x55e6 <_Z18startEventUsingRTCv>
    359c:	b9 c4       	rjmp	.+2418   	; 0x3f10 <_Z19handleSerialBusMsgsv+0xeb8>
    359e:	8e 81       	ldd	r24, Y+6	; 0x06
    35a0:	9f 81       	ldd	r25, Y+7	; 0x07
    35a2:	fc 01       	movw	r30, r24
    35a4:	83 81       	ldd	r24, Z+3	; 0x03
    35a6:	83 33       	cpi	r24, 0x33	; 51
    35a8:	31 f4       	brne	.+12     	; 0x35b6 <_Z19handleSerialBusMsgsv+0x55e>
    35aa:	62 e0       	ldi	r22, 0x02	; 2
    35ac:	80 e0       	ldi	r24, 0x00	; 0
    35ae:	90 e0       	ldi	r25, 0x00	; 0
    35b0:	0e 94 88 2b 	call	0x5710	; 0x5710 <_Z11setupForFoxP5Fox_t13EventAction_t>
    35b4:	ad c4       	rjmp	.+2394   	; 0x3f10 <_Z19handleSerialBusMsgsv+0xeb8>
    35b6:	8f e5       	ldi	r24, 0x5F	; 95
    35b8:	92 e4       	ldi	r25, 0x42	; 66
    35ba:	0e 94 fd 5a 	call	0xb5fa	; 0xb5fa <sb_send_string>
    35be:	a8 c4       	rjmp	.+2384   	; 0x3f10 <_Z19handleSerialBusMsgsv+0xeb8>
    35c0:	8f e5       	ldi	r24, 0x5F	; 95
    35c2:	92 e4       	ldi	r25, 0x42	; 66
    35c4:	0e 94 fd 5a 	call	0xb5fa	; 0xb5fa <sb_send_string>
    35c8:	a3 c4       	rjmp	.+2374   	; 0x3f10 <_Z19handleSerialBusMsgsv+0xeb8>
    35ca:	8e 81       	ldd	r24, Y+6	; 0x06
    35cc:	9f 81       	ldd	r25, Y+7	; 0x07
    35ce:	fc 01       	movw	r30, r24
    35d0:	83 81       	ldd	r24, Z+3	; 0x03
    35d2:	88 23       	and	r24, r24
    35d4:	09 f4       	brne	.+2      	; 0x35d8 <_Z19handleSerialBusMsgsv+0x580>
    35d6:	41 c0       	rjmp	.+130    	; 0x365a <_Z19handleSerialBusMsgsv+0x602>
    35d8:	80 e2       	ldi	r24, 0x20	; 32
    35da:	90 e0       	ldi	r25, 0x00	; 0
    35dc:	80 93 49 47 	sts	0x4749, r24	; 0x804749 <_ZL9g_tempStr>
    35e0:	90 93 4a 47 	sts	0x474A, r25	; 0x80474a <_ZL9g_tempStr+0x1>
    35e4:	8e 81       	ldd	r24, Y+6	; 0x06
    35e6:	9f 81       	ldd	r25, Y+7	; 0x07
    35e8:	03 96       	adiw	r24, 0x03	; 3
    35ea:	bc 01       	movw	r22, r24
    35ec:	89 e4       	ldi	r24, 0x49	; 73
    35ee:	97 e4       	ldi	r25, 0x47	; 71
    35f0:	0e 94 df 73 	call	0xe7be	; 0xe7be <strcat>
    35f4:	8e 81       	ldd	r24, Y+6	; 0x06
    35f6:	9f 81       	ldd	r25, Y+7	; 0x07
    35f8:	fc 01       	movw	r30, r24
    35fa:	87 89       	ldd	r24, Z+23	; 0x17
    35fc:	88 23       	and	r24, r24
    35fe:	d1 f0       	breq	.+52     	; 0x3634 <_Z19handleSerialBusMsgsv+0x5dc>
    3600:	89 e4       	ldi	r24, 0x49	; 73
    3602:	97 e4       	ldi	r25, 0x47	; 71
    3604:	9c 01       	movw	r18, r24
    3606:	f9 01       	movw	r30, r18
    3608:	01 90       	ld	r0, Z+
    360a:	00 20       	and	r0, r0
    360c:	e9 f7       	brne	.-6      	; 0x3608 <_Z19handleSerialBusMsgsv+0x5b0>
    360e:	cf 01       	movw	r24, r30
    3610:	01 97       	sbiw	r24, 0x01	; 1
    3612:	82 1b       	sub	r24, r18
    3614:	93 0b       	sbc	r25, r19
    3616:	87 5b       	subi	r24, 0xB7	; 183
    3618:	98 4b       	sbci	r25, 0xB8	; 184
    361a:	20 e2       	ldi	r18, 0x20	; 32
    361c:	30 e0       	ldi	r19, 0x00	; 0
    361e:	fc 01       	movw	r30, r24
    3620:	20 83       	st	Z, r18
    3622:	31 83       	std	Z+1, r19	; 0x01
    3624:	8e 81       	ldd	r24, Y+6	; 0x06
    3626:	9f 81       	ldd	r25, Y+7	; 0x07
    3628:	47 96       	adiw	r24, 0x17	; 23
    362a:	bc 01       	movw	r22, r24
    362c:	89 e4       	ldi	r24, 0x49	; 73
    362e:	97 e4       	ldi	r25, 0x47	; 71
    3630:	0e 94 df 73 	call	0xe7be	; 0xe7be <strcat>
    3634:	89 e4       	ldi	r24, 0x49	; 73
    3636:	97 e4       	ldi	r25, 0x47	; 71
    3638:	0e 94 fc 73 	call	0xe7f8	; 0xe7f8 <strlen>
    363c:	45 97       	sbiw	r24, 0x15	; 21
    363e:	68 f4       	brcc	.+26     	; 0x365a <_Z19handleSerialBusMsgsv+0x602>
    3640:	69 e4       	ldi	r22, 0x49	; 73
    3642:	77 e4       	ldi	r23, 0x47	; 71
    3644:	83 ea       	ldi	r24, 0xA3	; 163
    3646:	97 e4       	ldi	r25, 0x47	; 71
    3648:	0e 94 f5 73 	call	0xe7ea	; 0xe7ea <strcpy>
    364c:	49 e4       	ldi	r20, 0x49	; 73
    364e:	57 e4       	ldi	r21, 0x47	; 71
    3650:	6a e0       	ldi	r22, 0x0A	; 10
    3652:	8a ed       	ldi	r24, 0xDA	; 218
    3654:	97 e4       	ldi	r25, 0x47	; 71
    3656:	0e 94 0a 44 	call	0x8814	; 0x8814 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
    365a:	80 91 a3 47 	lds	r24, 0x47A3	; 0x8047a3 <g_messages_text+0x15>
    365e:	88 23       	and	r24, r24
    3660:	01 f1       	breq	.+64     	; 0x36a2 <_Z19handleSerialBusMsgsv+0x64a>
    3662:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    3666:	88 2f       	mov	r24, r24
    3668:	90 e0       	ldi	r25, 0x00	; 0
    366a:	bc 01       	movw	r22, r24
    366c:	83 ea       	ldi	r24, 0xA3	; 163
    366e:	97 e4       	ldi	r25, 0x47	; 71
    3670:	0e 94 4b 54 	call	0xa896	; 0xa896 <_Z26timeRequiredToSendStrAtWPMPcj>
    3674:	88 5a       	subi	r24, 0xA8	; 168
    3676:	9d 4f       	sbci	r25, 0xFD	; 253
    3678:	96 95       	lsr	r25
    367a:	87 95       	ror	r24
    367c:	96 95       	lsr	r25
    367e:	87 95       	ror	r24
    3680:	96 95       	lsr	r25
    3682:	87 95       	ror	r24
    3684:	9c 01       	movw	r18, r24
    3686:	a5 ec       	ldi	r26, 0xC5	; 197
    3688:	b0 e2       	ldi	r27, 0x20	; 32
    368a:	0e 94 4c 72 	call	0xe498	; 0xe498 <__umulhisi3>
    368e:	92 95       	swap	r25
    3690:	82 95       	swap	r24
    3692:	8f 70       	andi	r24, 0x0F	; 15
    3694:	89 27       	eor	r24, r25
    3696:	9f 70       	andi	r25, 0x0F	; 15
    3698:	89 27       	eor	r24, r25
    369a:	80 93 b8 47 	sts	0x47B8, r24	; 0x8047b8 <g_time_needed_for_ID>
    369e:	90 93 b9 47 	sts	0x47B9, r25	; 0x8047b9 <g_time_needed_for_ID+0x1>
    36a2:	83 ea       	ldi	r24, 0xA3	; 163
    36a4:	97 e4       	ldi	r25, 0x47	; 71
    36a6:	89 2f       	mov	r24, r25
    36a8:	8f 93       	push	r24
    36aa:	83 ea       	ldi	r24, 0xA3	; 163
    36ac:	97 e4       	ldi	r25, 0x47	; 71
    36ae:	8f 93       	push	r24
    36b0:	84 e6       	ldi	r24, 0x64	; 100
    36b2:	92 e4       	ldi	r25, 0x42	; 66
    36b4:	89 2f       	mov	r24, r25
    36b6:	8f 93       	push	r24
    36b8:	84 e6       	ldi	r24, 0x64	; 100
    36ba:	92 e4       	ldi	r25, 0x42	; 66
    36bc:	8f 93       	push	r24
    36be:	89 e4       	ldi	r24, 0x49	; 73
    36c0:	97 e4       	ldi	r25, 0x47	; 71
    36c2:	89 2f       	mov	r24, r25
    36c4:	8f 93       	push	r24
    36c6:	89 e4       	ldi	r24, 0x49	; 73
    36c8:	97 e4       	ldi	r25, 0x47	; 71
    36ca:	8f 93       	push	r24
    36cc:	0e 94 31 74 	call	0xe862	; 0xe862 <sprintf>
    36d0:	0f 90       	pop	r0
    36d2:	0f 90       	pop	r0
    36d4:	0f 90       	pop	r0
    36d6:	0f 90       	pop	r0
    36d8:	0f 90       	pop	r0
    36da:	0f 90       	pop	r0
    36dc:	89 e4       	ldi	r24, 0x49	; 73
    36de:	97 e4       	ldi	r25, 0x47	; 71
    36e0:	0e 94 fd 5a 	call	0xb5fa	; 0xb5fa <sb_send_string>
    36e4:	15 c4       	rjmp	.+2090   	; 0x3f10 <_Z19handleSerialBusMsgsv+0xeb8>
    36e6:	8e 81       	ldd	r24, Y+6	; 0x06
    36e8:	9f 81       	ldd	r25, Y+7	; 0x07
    36ea:	fc 01       	movw	r30, r24
    36ec:	83 81       	ldd	r24, Z+3	; 0x03
    36ee:	83 35       	cpi	r24, 0x53	; 83
    36f0:	09 f0       	breq	.+2      	; 0x36f4 <_Z19handleSerialBusMsgsv+0x69c>
    36f2:	6f c0       	rjmp	.+222    	; 0x37d2 <_Z19handleSerialBusMsgsv+0x77a>
    36f4:	8e 81       	ldd	r24, Y+6	; 0x06
    36f6:	9f 81       	ldd	r25, Y+7	; 0x07
    36f8:	fc 01       	movw	r30, r24
    36fa:	87 89       	ldd	r24, Z+23	; 0x17
    36fc:	8d 8b       	std	Y+21, r24	; 0x15
    36fe:	8d 89       	ldd	r24, Y+21	; 0x15
    3700:	88 23       	and	r24, r24
    3702:	09 f4       	brne	.+2      	; 0x3706 <_Z19handleSerialBusMsgsv+0x6ae>
    3704:	48 c0       	rjmp	.+144    	; 0x3796 <_Z19handleSerialBusMsgsv+0x73e>
    3706:	8e 81       	ldd	r24, Y+6	; 0x06
    3708:	9f 81       	ldd	r25, Y+7	; 0x07
    370a:	47 96       	adiw	r24, 0x17	; 23
    370c:	0e 94 a9 73 	call	0xe752	; 0xe752 <atol>
    3710:	dc 01       	movw	r26, r24
    3712:	cb 01       	movw	r24, r22
    3714:	8e 8b       	std	Y+22, r24	; 0x16
    3716:	8e 89       	ldd	r24, Y+22	; 0x16
    3718:	8f 8b       	std	Y+23, r24	; 0x17
    371a:	85 e0       	ldi	r24, 0x05	; 5
    371c:	88 8f       	std	Y+24, r24	; 0x18
    371e:	84 e1       	ldi	r24, 0x14	; 20
    3720:	89 8f       	std	Y+25, r24	; 0x19
    3722:	9f 89       	ldd	r25, Y+23	; 0x17
    3724:	89 8d       	ldd	r24, Y+25	; 0x19
    3726:	89 17       	cp	r24, r25
    3728:	40 f0       	brcs	.+16     	; 0x373a <_Z19handleSerialBusMsgsv+0x6e2>
    372a:	9f 89       	ldd	r25, Y+23	; 0x17
    372c:	88 8d       	ldd	r24, Y+24	; 0x18
    372e:	98 17       	cp	r25, r24
    3730:	10 f4       	brcc	.+4      	; 0x3736 <_Z19handleSerialBusMsgsv+0x6de>
    3732:	88 8d       	ldd	r24, Y+24	; 0x18
    3734:	03 c0       	rjmp	.+6      	; 0x373c <_Z19handleSerialBusMsgsv+0x6e4>
    3736:	8f 89       	ldd	r24, Y+23	; 0x17
    3738:	01 c0       	rjmp	.+2      	; 0x373c <_Z19handleSerialBusMsgsv+0x6e4>
    373a:	89 8d       	ldd	r24, Y+25	; 0x19
    373c:	80 93 0b 40 	sts	0x400B, r24	; 0x80400b <g_id_codespeed>
    3740:	4b e0       	ldi	r20, 0x0B	; 11
    3742:	50 e4       	ldi	r21, 0x40	; 64
    3744:	68 e2       	ldi	r22, 0x28	; 40
    3746:	8a ed       	ldi	r24, 0xDA	; 218
    3748:	97 e4       	ldi	r25, 0x47	; 71
    374a:	0e 94 0a 44 	call	0x8814	; 0x8814 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
    374e:	80 91 a3 47 	lds	r24, 0x47A3	; 0x8047a3 <g_messages_text+0x15>
    3752:	88 23       	and	r24, r24
    3754:	01 f1       	breq	.+64     	; 0x3796 <_Z19handleSerialBusMsgsv+0x73e>
    3756:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    375a:	88 2f       	mov	r24, r24
    375c:	90 e0       	ldi	r25, 0x00	; 0
    375e:	bc 01       	movw	r22, r24
    3760:	83 ea       	ldi	r24, 0xA3	; 163
    3762:	97 e4       	ldi	r25, 0x47	; 71
    3764:	0e 94 4b 54 	call	0xa896	; 0xa896 <_Z26timeRequiredToSendStrAtWPMPcj>
    3768:	88 5a       	subi	r24, 0xA8	; 168
    376a:	9d 4f       	sbci	r25, 0xFD	; 253
    376c:	96 95       	lsr	r25
    376e:	87 95       	ror	r24
    3770:	96 95       	lsr	r25
    3772:	87 95       	ror	r24
    3774:	96 95       	lsr	r25
    3776:	87 95       	ror	r24
    3778:	9c 01       	movw	r18, r24
    377a:	a5 ec       	ldi	r26, 0xC5	; 197
    377c:	b0 e2       	ldi	r27, 0x20	; 32
    377e:	0e 94 4c 72 	call	0xe498	; 0xe498 <__umulhisi3>
    3782:	92 95       	swap	r25
    3784:	82 95       	swap	r24
    3786:	8f 70       	andi	r24, 0x0F	; 15
    3788:	89 27       	eor	r24, r25
    378a:	9f 70       	andi	r25, 0x0F	; 15
    378c:	89 27       	eor	r24, r25
    378e:	80 93 b8 47 	sts	0x47B8, r24	; 0x8047b8 <g_time_needed_for_ID>
    3792:	90 93 b9 47 	sts	0x47B9, r25	; 0x8047b9 <g_time_needed_for_ID+0x1>
    3796:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    379a:	88 2f       	mov	r24, r24
    379c:	90 e0       	ldi	r25, 0x00	; 0
    379e:	29 2f       	mov	r18, r25
    37a0:	2f 93       	push	r18
    37a2:	8f 93       	push	r24
    37a4:	8b e6       	ldi	r24, 0x6B	; 107
    37a6:	92 e4       	ldi	r25, 0x42	; 66
    37a8:	89 2f       	mov	r24, r25
    37aa:	8f 93       	push	r24
    37ac:	8b e6       	ldi	r24, 0x6B	; 107
    37ae:	92 e4       	ldi	r25, 0x42	; 66
    37b0:	8f 93       	push	r24
    37b2:	89 e4       	ldi	r24, 0x49	; 73
    37b4:	97 e4       	ldi	r25, 0x47	; 71
    37b6:	89 2f       	mov	r24, r25
    37b8:	8f 93       	push	r24
    37ba:	89 e4       	ldi	r24, 0x49	; 73
    37bc:	97 e4       	ldi	r25, 0x47	; 71
    37be:	8f 93       	push	r24
    37c0:	0e 94 31 74 	call	0xe862	; 0xe862 <sprintf>
    37c4:	0f 90       	pop	r0
    37c6:	0f 90       	pop	r0
    37c8:	0f 90       	pop	r0
    37ca:	0f 90       	pop	r0
    37cc:	0f 90       	pop	r0
    37ce:	0f 90       	pop	r0
    37d0:	09 c0       	rjmp	.+18     	; 0x37e4 <_Z19handleSerialBusMsgsv+0x78c>
    37d2:	85 e0       	ldi	r24, 0x05	; 5
    37d4:	ef e5       	ldi	r30, 0x5F	; 95
    37d6:	f2 e4       	ldi	r31, 0x42	; 66
    37d8:	a9 e4       	ldi	r26, 0x49	; 73
    37da:	b7 e4       	ldi	r27, 0x47	; 71
    37dc:	01 90       	ld	r0, Z+
    37de:	0d 92       	st	X+, r0
    37e0:	8a 95       	dec	r24
    37e2:	e1 f7       	brne	.-8      	; 0x37dc <_Z19handleSerialBusMsgsv+0x784>
    37e4:	89 e4       	ldi	r24, 0x49	; 73
    37e6:	97 e4       	ldi	r25, 0x47	; 71
    37e8:	0e 94 fd 5a 	call	0xb5fa	; 0xb5fa <sb_send_string>
    37ec:	91 c3       	rjmp	.+1826   	; 0x3f10 <_Z19handleSerialBusMsgsv+0xeb8>
    37ee:	8e 81       	ldd	r24, Y+6	; 0x06
    37f0:	9f 81       	ldd	r25, Y+7	; 0x07
    37f2:	fc 01       	movw	r30, r24
    37f4:	83 81       	ldd	r24, Z+3	; 0x03
    37f6:	88 23       	and	r24, r24
    37f8:	51 f1       	breq	.+84     	; 0x384e <_Z19handleSerialBusMsgsv+0x7f6>
    37fa:	8e 81       	ldd	r24, Y+6	; 0x06
    37fc:	9f 81       	ldd	r25, Y+7	; 0x07
    37fe:	03 96       	adiw	r24, 0x03	; 3
    3800:	48 e0       	ldi	r20, 0x08	; 8
    3802:	50 e0       	ldi	r21, 0x00	; 0
    3804:	bc 01       	movw	r22, r24
    3806:	89 e4       	ldi	r24, 0x49	; 73
    3808:	97 e4       	ldi	r25, 0x47	; 71
    380a:	0e 94 05 74 	call	0xe80a	; 0xe80a <strncpy>
    380e:	10 92 51 47 	sts	0x4751, r1	; 0x804751 <_ZL9g_tempStr+0x8>
    3812:	89 e4       	ldi	r24, 0x49	; 73
    3814:	97 e4       	ldi	r25, 0x47	; 71
    3816:	0e 94 dc 6b 	call	0xd7b8	; 0xd7b8 <_Z11only_digitsPc>
    381a:	88 23       	and	r24, r24
    381c:	41 f0       	breq	.+16     	; 0x382e <_Z19handleSerialBusMsgsv+0x7d6>
    381e:	89 e4       	ldi	r24, 0x49	; 73
    3820:	97 e4       	ldi	r25, 0x47	; 71
    3822:	0e 94 fc 73 	call	0xe7f8	; 0xe7f8 <strlen>
    3826:	04 97       	sbiw	r24, 0x04	; 4
    3828:	10 f0       	brcs	.+4      	; 0x382e <_Z19handleSerialBusMsgsv+0x7d6>
    382a:	81 e0       	ldi	r24, 0x01	; 1
    382c:	01 c0       	rjmp	.+2      	; 0x3830 <_Z19handleSerialBusMsgsv+0x7d8>
    382e:	80 e0       	ldi	r24, 0x00	; 0
    3830:	88 23       	and	r24, r24
    3832:	69 f0       	breq	.+26     	; 0x384e <_Z19handleSerialBusMsgsv+0x7f6>
    3834:	69 e4       	ldi	r22, 0x49	; 73
    3836:	77 e4       	ldi	r23, 0x47	; 71
    3838:	8c ed       	ldi	r24, 0xDC	; 220
    383a:	97 e4       	ldi	r25, 0x47	; 71
    383c:	0e 94 f5 73 	call	0xe7ea	; 0xe7ea <strcpy>
    3840:	4c ed       	ldi	r20, 0xDC	; 220
    3842:	57 e4       	ldi	r21, 0x47	; 71
    3844:	6f e1       	ldi	r22, 0x1F	; 31
    3846:	8a ed       	ldi	r24, 0xDA	; 218
    3848:	97 e4       	ldi	r25, 0x47	; 71
    384a:	0e 94 0a 44 	call	0x8814	; 0x8814 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
    384e:	8c ed       	ldi	r24, 0xDC	; 220
    3850:	97 e4       	ldi	r25, 0x47	; 71
    3852:	89 2f       	mov	r24, r25
    3854:	8f 93       	push	r24
    3856:	8c ed       	ldi	r24, 0xDC	; 220
    3858:	97 e4       	ldi	r25, 0x47	; 71
    385a:	8f 93       	push	r24
    385c:	8d e7       	ldi	r24, 0x7D	; 125
    385e:	92 e4       	ldi	r25, 0x42	; 66
    3860:	89 2f       	mov	r24, r25
    3862:	8f 93       	push	r24
    3864:	8d e7       	ldi	r24, 0x7D	; 125
    3866:	92 e4       	ldi	r25, 0x42	; 66
    3868:	8f 93       	push	r24
    386a:	89 e4       	ldi	r24, 0x49	; 73
    386c:	97 e4       	ldi	r25, 0x47	; 71
    386e:	89 2f       	mov	r24, r25
    3870:	8f 93       	push	r24
    3872:	89 e4       	ldi	r24, 0x49	; 73
    3874:	97 e4       	ldi	r25, 0x47	; 71
    3876:	8f 93       	push	r24
    3878:	0e 94 31 74 	call	0xe862	; 0xe862 <sprintf>
    387c:	0f 90       	pop	r0
    387e:	0f 90       	pop	r0
    3880:	0f 90       	pop	r0
    3882:	0f 90       	pop	r0
    3884:	0f 90       	pop	r0
    3886:	0f 90       	pop	r0
    3888:	89 e4       	ldi	r24, 0x49	; 73
    388a:	97 e4       	ldi	r25, 0x47	; 71
    388c:	0e 94 fd 5a 	call	0xb5fa	; 0xb5fa <sb_send_string>
    3890:	3f c3       	rjmp	.+1662   	; 0x3f10 <_Z19handleSerialBusMsgsv+0xeb8>
    3892:	1d 82       	std	Y+5, r1	; 0x05
    3894:	8e 81       	ldd	r24, Y+6	; 0x06
    3896:	9f 81       	ldd	r25, Y+7	; 0x07
    3898:	fc 01       	movw	r30, r24
    389a:	83 81       	ldd	r24, Z+3	; 0x03
    389c:	88 23       	and	r24, r24
    389e:	39 f0       	breq	.+14     	; 0x38ae <_Z19handleSerialBusMsgsv+0x856>
    38a0:	8e 81       	ldd	r24, Y+6	; 0x06
    38a2:	9f 81       	ldd	r25, Y+7	; 0x07
    38a4:	fc 01       	movw	r30, r24
    38a6:	83 81       	ldd	r24, Z+3	; 0x03
    38a8:	84 35       	cpi	r24, 0x54	; 84
    38aa:	09 f0       	breq	.+2      	; 0x38ae <_Z19handleSerialBusMsgsv+0x856>
    38ac:	9b c1       	rjmp	.+822    	; 0x3be4 <_Z19handleSerialBusMsgsv+0xb8c>
    38ae:	8e 81       	ldd	r24, Y+6	; 0x06
    38b0:	9f 81       	ldd	r25, Y+7	; 0x07
    38b2:	fc 01       	movw	r30, r24
    38b4:	87 89       	ldd	r24, Z+23	; 0x17
    38b6:	88 23       	and	r24, r24
    38b8:	09 f4       	brne	.+2      	; 0x38bc <_Z19handleSerialBusMsgsv+0x864>
    38ba:	76 c0       	rjmp	.+236    	; 0x39a8 <_Z19handleSerialBusMsgsv+0x950>
    38bc:	8e 81       	ldd	r24, Y+6	; 0x06
    38be:	9f 81       	ldd	r25, Y+7	; 0x07
    38c0:	47 96       	adiw	r24, 0x17	; 23
    38c2:	4c e0       	ldi	r20, 0x0C	; 12
    38c4:	50 e0       	ldi	r21, 0x00	; 0
    38c6:	bc 01       	movw	r22, r24
    38c8:	89 e4       	ldi	r24, 0x49	; 73
    38ca:	97 e4       	ldi	r25, 0x47	; 71
    38cc:	0e 94 05 74 	call	0xe80a	; 0xe80a <strncpy>
    38d0:	10 92 55 47 	sts	0x4755, r1	; 0x804755 <_ZL9g_tempStr+0xc>
    38d4:	80 91 db 47 	lds	r24, 0x47DB	; 0x8047db <g_utc_offset>
    38d8:	81 95       	neg	r24
    38da:	48 2f       	mov	r20, r24
    38dc:	64 ee       	ldi	r22, 0xE4	; 228
    38de:	77 e4       	ldi	r23, 0x47	; 71
    38e0:	89 e4       	ldi	r24, 0x49	; 73
    38e2:	97 e4       	ldi	r25, 0x47	; 71
    38e4:	0e 94 6d 2e 	call	0x5cda	; 0x5cda <_Z18validateTimeStringPcPma>
    38e8:	dc 01       	movw	r26, r24
    38ea:	cb 01       	movw	r24, r22
    38ec:	8a a3       	std	Y+34, r24	; 0x22
    38ee:	9b a3       	std	Y+35, r25	; 0x23
    38f0:	ac a3       	std	Y+36, r26	; 0x24
    38f2:	bd a3       	std	Y+37, r27	; 0x25
    38f4:	8a a1       	ldd	r24, Y+34	; 0x22
    38f6:	9b a1       	ldd	r25, Y+35	; 0x23
    38f8:	ac a1       	ldd	r26, Y+36	; 0x24
    38fa:	bd a1       	ldd	r27, Y+37	; 0x25
    38fc:	89 2b       	or	r24, r25
    38fe:	8a 2b       	or	r24, r26
    3900:	8b 2b       	or	r24, r27
    3902:	09 f4       	brne	.+2      	; 0x3906 <_Z19handleSerialBusMsgsv+0x8ae>
    3904:	6c c1       	rjmp	.+728    	; 0x3bde <_Z19handleSerialBusMsgsv+0xb86>
    3906:	60 e0       	ldi	r22, 0x00	; 0
    3908:	89 e4       	ldi	r24, 0x49	; 73
    390a:	97 e4       	ldi	r25, 0x47	; 71
    390c:	0e 94 e5 3f 	call	0x7fca	; 0x7fca <ds3231_set_date_time_arducon>
    3910:	8e a3       	std	Y+38, r24	; 0x26
    3912:	8e a1       	ldd	r24, Y+38	; 0x26
    3914:	88 23       	and	r24, r24
    3916:	51 f0       	breq	.+20     	; 0x392c <_Z19handleSerialBusMsgsv+0x8d4>
    3918:	88 e2       	ldi	r24, 0x28	; 40
    391a:	eb eb       	ldi	r30, 0xBB	; 187
    391c:	f1 e4       	ldi	r31, 0x41	; 65
    391e:	a9 e4       	ldi	r26, 0x49	; 73
    3920:	b7 e4       	ldi	r27, 0x47	; 71
    3922:	01 90       	ld	r0, Z+
    3924:	0d 92       	st	X+, r0
    3926:	8a 95       	dec	r24
    3928:	e1 f7       	brne	.-8      	; 0x3922 <_Z19handleSerialBusMsgsv+0x8ca>
    392a:	59 c1       	rjmp	.+690    	; 0x3bde <_Z19handleSerialBusMsgsv+0xb86>
    392c:	80 e0       	ldi	r24, 0x00	; 0
    392e:	90 e0       	ldi	r25, 0x00	; 0
    3930:	0e 94 b2 3d 	call	0x7b64	; 0x7b64 <ds3231_get_epoch>
    3934:	dc 01       	movw	r26, r24
    3936:	cb 01       	movw	r24, r22
    3938:	80 93 e4 47 	sts	0x47E4, r24	; 0x8047e4 <g_current_epoch>
    393c:	90 93 e5 47 	sts	0x47E5, r25	; 0x8047e5 <g_current_epoch+0x1>
    3940:	a0 93 e6 47 	sts	0x47E6, r26	; 0x8047e6 <g_current_epoch+0x2>
    3944:	b0 93 e7 47 	sts	0x47E7, r27	; 0x8047e7 <g_current_epoch+0x3>
    3948:	80 91 e4 47 	lds	r24, 0x47E4	; 0x8047e4 <g_current_epoch>
    394c:	90 91 e5 47 	lds	r25, 0x47E5	; 0x8047e5 <g_current_epoch+0x1>
    3950:	a0 91 e6 47 	lds	r26, 0x47E6	; 0x8047e6 <g_current_epoch+0x2>
    3954:	b0 91 e7 47 	lds	r27, 0x47E7	; 0x8047e7 <g_current_epoch+0x3>
    3958:	ae 01       	movw	r20, r28
    395a:	4b 59       	subi	r20, 0x9B	; 155
    395c:	5f 4f       	sbci	r21, 0xFF	; 255
    395e:	22 e3       	ldi	r18, 0x32	; 50
    3960:	30 e0       	ldi	r19, 0x00	; 0
    3962:	bc 01       	movw	r22, r24
    3964:	cd 01       	movw	r24, r26
    3966:	0e 94 19 43 	call	0x8632	; 0x8632 <convertEpochToTimeString>
    396a:	29 2f       	mov	r18, r25
    396c:	2f 93       	push	r18
    396e:	8f 93       	push	r24
    3970:	85 e8       	ldi	r24, 0x85	; 133
    3972:	92 e4       	ldi	r25, 0x42	; 66
    3974:	89 2f       	mov	r24, r25
    3976:	8f 93       	push	r24
    3978:	85 e8       	ldi	r24, 0x85	; 133
    397a:	92 e4       	ldi	r25, 0x42	; 66
    397c:	8f 93       	push	r24
    397e:	89 e4       	ldi	r24, 0x49	; 73
    3980:	97 e4       	ldi	r25, 0x47	; 71
    3982:	89 2f       	mov	r24, r25
    3984:	8f 93       	push	r24
    3986:	89 e4       	ldi	r24, 0x49	; 73
    3988:	97 e4       	ldi	r25, 0x47	; 71
    398a:	8f 93       	push	r24
    398c:	0e 94 31 74 	call	0xe862	; 0xe862 <sprintf>
    3990:	0f 90       	pop	r0
    3992:	0f 90       	pop	r0
    3994:	0f 90       	pop	r0
    3996:	0f 90       	pop	r0
    3998:	0f 90       	pop	r0
    399a:	0f 90       	pop	r0
    399c:	60 e0       	ldi	r22, 0x00	; 0
    399e:	80 e0       	ldi	r24, 0x00	; 0
    39a0:	90 e0       	ldi	r25, 0x00	; 0
    39a2:	0e 94 88 2b 	call	0x5710	; 0x5710 <_Z11setupForFoxP5Fox_t13EventAction_t>
    39a6:	1b c1       	rjmp	.+566    	; 0x3bde <_Z19handleSerialBusMsgsv+0xb86>
    39a8:	ce 01       	movw	r24, r28
    39aa:	84 5a       	subi	r24, 0xA4	; 164
    39ac:	9f 4f       	sbci	r25, 0xFF	; 255
    39ae:	0e 94 b2 3d 	call	0x7b64	; 0x7b64 <ds3231_get_epoch>
    39b2:	dc 01       	movw	r26, r24
    39b4:	cb 01       	movw	r24, r22
    39b6:	80 93 e4 47 	sts	0x47E4, r24	; 0x8047e4 <g_current_epoch>
    39ba:	90 93 e5 47 	sts	0x47E5, r25	; 0x8047e5 <g_current_epoch+0x1>
    39be:	a0 93 e6 47 	sts	0x47E6, r26	; 0x8047e6 <g_current_epoch+0x2>
    39c2:	b0 93 e7 47 	sts	0x47E7, r27	; 0x8047e7 <g_current_epoch+0x3>
    39c6:	ce 01       	movw	r24, r28
    39c8:	84 5a       	subi	r24, 0xA4	; 164
    39ca:	9f 4f       	sbci	r25, 0xFF	; 255
    39cc:	fc 01       	movw	r30, r24
    39ce:	80 81       	ld	r24, Z
    39d0:	88 23       	and	r24, r24
    39d2:	51 f0       	breq	.+20     	; 0x39e8 <_Z19handleSerialBusMsgsv+0x990>
    39d4:	88 e2       	ldi	r24, 0x28	; 40
    39d6:	eb eb       	ldi	r30, 0xBB	; 187
    39d8:	f1 e4       	ldi	r31, 0x41	; 65
    39da:	a9 e4       	ldi	r26, 0x49	; 73
    39dc:	b7 e4       	ldi	r27, 0x47	; 71
    39de:	01 90       	ld	r0, Z+
    39e0:	0d 92       	st	X+, r0
    39e2:	8a 95       	dec	r24
    39e4:	e1 f7       	brne	.-8      	; 0x39de <_Z19handleSerialBusMsgsv+0x986>
    39e6:	fb c0       	rjmp	.+502    	; 0x3bde <_Z19handleSerialBusMsgsv+0xb86>
    39e8:	80 91 e4 47 	lds	r24, 0x47E4	; 0x8047e4 <g_current_epoch>
    39ec:	90 91 e5 47 	lds	r25, 0x47E5	; 0x8047e5 <g_current_epoch+0x1>
    39f0:	a0 91 e6 47 	lds	r26, 0x47E6	; 0x8047e6 <g_current_epoch+0x2>
    39f4:	b0 91 e7 47 	lds	r27, 0x47E7	; 0x8047e7 <g_current_epoch+0x3>
    39f8:	ae 01       	movw	r20, r28
    39fa:	4b 59       	subi	r20, 0x9B	; 155
    39fc:	5f 4f       	sbci	r21, 0xFF	; 255
    39fe:	22 e3       	ldi	r18, 0x32	; 50
    3a00:	30 e0       	ldi	r19, 0x00	; 0
    3a02:	bc 01       	movw	r22, r24
    3a04:	cd 01       	movw	r24, r26
    3a06:	0e 94 19 43 	call	0x8632	; 0x8632 <convertEpochToTimeString>
    3a0a:	29 2f       	mov	r18, r25
    3a0c:	2f 93       	push	r18
    3a0e:	8f 93       	push	r24
    3a10:	8f e8       	ldi	r24, 0x8F	; 143
    3a12:	92 e4       	ldi	r25, 0x42	; 66
    3a14:	89 2f       	mov	r24, r25
    3a16:	8f 93       	push	r24
    3a18:	8f e8       	ldi	r24, 0x8F	; 143
    3a1a:	92 e4       	ldi	r25, 0x42	; 66
    3a1c:	8f 93       	push	r24
    3a1e:	89 e4       	ldi	r24, 0x49	; 73
    3a20:	97 e4       	ldi	r25, 0x47	; 71
    3a22:	89 2f       	mov	r24, r25
    3a24:	8f 93       	push	r24
    3a26:	89 e4       	ldi	r24, 0x49	; 73
    3a28:	97 e4       	ldi	r25, 0x47	; 71
    3a2a:	8f 93       	push	r24
    3a2c:	0e 94 31 74 	call	0xe862	; 0xe862 <sprintf>
    3a30:	0f 90       	pop	r0
    3a32:	0f 90       	pop	r0
    3a34:	0f 90       	pop	r0
    3a36:	0f 90       	pop	r0
    3a38:	0f 90       	pop	r0
    3a3a:	0f 90       	pop	r0
    3a3c:	89 e4       	ldi	r24, 0x49	; 73
    3a3e:	97 e4       	ldi	r25, 0x47	; 71
    3a40:	0e 94 fd 5a 	call	0xb5fa	; 0xb5fa <sb_send_string>
    3a44:	80 91 bc 47 	lds	r24, 0x47BC	; 0x8047bc <g_event_start_epoch>
    3a48:	90 91 bd 47 	lds	r25, 0x47BD	; 0x8047bd <g_event_start_epoch+0x1>
    3a4c:	a0 91 be 47 	lds	r26, 0x47BE	; 0x8047be <g_event_start_epoch+0x2>
    3a50:	b0 91 bf 47 	lds	r27, 0x47BF	; 0x8047bf <g_event_start_epoch+0x3>
    3a54:	ae 01       	movw	r20, r28
    3a56:	4b 59       	subi	r20, 0x9B	; 155
    3a58:	5f 4f       	sbci	r21, 0xFF	; 255
    3a5a:	22 e3       	ldi	r18, 0x32	; 50
    3a5c:	30 e0       	ldi	r19, 0x00	; 0
    3a5e:	bc 01       	movw	r22, r24
    3a60:	cd 01       	movw	r24, r26
    3a62:	0e 94 19 43 	call	0x8632	; 0x8632 <convertEpochToTimeString>
    3a66:	29 2f       	mov	r18, r25
    3a68:	2f 93       	push	r18
    3a6a:	8f 93       	push	r24
    3a6c:	8b e9       	ldi	r24, 0x9B	; 155
    3a6e:	92 e4       	ldi	r25, 0x42	; 66
    3a70:	89 2f       	mov	r24, r25
    3a72:	8f 93       	push	r24
    3a74:	8b e9       	ldi	r24, 0x9B	; 155
    3a76:	92 e4       	ldi	r25, 0x42	; 66
    3a78:	8f 93       	push	r24
    3a7a:	89 e4       	ldi	r24, 0x49	; 73
    3a7c:	97 e4       	ldi	r25, 0x47	; 71
    3a7e:	89 2f       	mov	r24, r25
    3a80:	8f 93       	push	r24
    3a82:	89 e4       	ldi	r24, 0x49	; 73
    3a84:	97 e4       	ldi	r25, 0x47	; 71
    3a86:	8f 93       	push	r24
    3a88:	0e 94 31 74 	call	0xe862	; 0xe862 <sprintf>
    3a8c:	0f 90       	pop	r0
    3a8e:	0f 90       	pop	r0
    3a90:	0f 90       	pop	r0
    3a92:	0f 90       	pop	r0
    3a94:	0f 90       	pop	r0
    3a96:	0f 90       	pop	r0
    3a98:	89 e4       	ldi	r24, 0x49	; 73
    3a9a:	97 e4       	ldi	r25, 0x47	; 71
    3a9c:	0e 94 fd 5a 	call	0xb5fa	; 0xb5fa <sb_send_string>
    3aa0:	80 91 c0 47 	lds	r24, 0x47C0	; 0x8047c0 <g_event_finish_epoch>
    3aa4:	90 91 c1 47 	lds	r25, 0x47C1	; 0x8047c1 <g_event_finish_epoch+0x1>
    3aa8:	a0 91 c2 47 	lds	r26, 0x47C2	; 0x8047c2 <g_event_finish_epoch+0x2>
    3aac:	b0 91 c3 47 	lds	r27, 0x47C3	; 0x8047c3 <g_event_finish_epoch+0x3>
    3ab0:	ae 01       	movw	r20, r28
    3ab2:	4b 59       	subi	r20, 0x9B	; 155
    3ab4:	5f 4f       	sbci	r21, 0xFF	; 255
    3ab6:	22 e3       	ldi	r18, 0x32	; 50
    3ab8:	30 e0       	ldi	r19, 0x00	; 0
    3aba:	bc 01       	movw	r22, r24
    3abc:	cd 01       	movw	r24, r26
    3abe:	0e 94 19 43 	call	0x8632	; 0x8632 <convertEpochToTimeString>
    3ac2:	29 2f       	mov	r18, r25
    3ac4:	2f 93       	push	r18
    3ac6:	8f 93       	push	r24
    3ac8:	87 ea       	ldi	r24, 0xA7	; 167
    3aca:	92 e4       	ldi	r25, 0x42	; 66
    3acc:	89 2f       	mov	r24, r25
    3ace:	8f 93       	push	r24
    3ad0:	87 ea       	ldi	r24, 0xA7	; 167
    3ad2:	92 e4       	ldi	r25, 0x42	; 66
    3ad4:	8f 93       	push	r24
    3ad6:	89 e4       	ldi	r24, 0x49	; 73
    3ad8:	97 e4       	ldi	r25, 0x47	; 71
    3ada:	89 2f       	mov	r24, r25
    3adc:	8f 93       	push	r24
    3ade:	89 e4       	ldi	r24, 0x49	; 73
    3ae0:	97 e4       	ldi	r25, 0x47	; 71
    3ae2:	8f 93       	push	r24
    3ae4:	0e 94 31 74 	call	0xe862	; 0xe862 <sprintf>
    3ae8:	0f 90       	pop	r0
    3aea:	0f 90       	pop	r0
    3aec:	0f 90       	pop	r0
    3aee:	0f 90       	pop	r0
    3af0:	0f 90       	pop	r0
    3af2:	0f 90       	pop	r0
    3af4:	89 e4       	ldi	r24, 0x49	; 73
    3af6:	97 e4       	ldi	r25, 0x47	; 71
    3af8:	0e 94 fd 5a 	call	0xb5fa	; 0xb5fa <sb_send_string>
    3afc:	0e 94 41 31 	call	0x6282	; 0x6282 <_Z23clockConfigurationCheckv>
    3b00:	8f a3       	std	Y+39, r24	; 0x27
    3b02:	8f a1       	ldd	r24, Y+39	; 0x27
    3b04:	81 30       	cpi	r24, 0x01	; 1
    3b06:	31 f0       	breq	.+12     	; 0x3b14 <_Z19handleSerialBusMsgsv+0xabc>
    3b08:	8f a1       	ldd	r24, Y+39	; 0x27
    3b0a:	85 30       	cpi	r24, 0x05	; 5
    3b0c:	19 f0       	breq	.+6      	; 0x3b14 <_Z19handleSerialBusMsgsv+0xabc>
    3b0e:	0e 94 d8 31 	call	0x63b0	; 0x63b0 <_Z18reportConfigErrorsv>
    3b12:	65 c0       	rjmp	.+202    	; 0x3bde <_Z19handleSerialBusMsgsv+0xb86>
    3b14:	20 91 bc 47 	lds	r18, 0x47BC	; 0x8047bc <g_event_start_epoch>
    3b18:	30 91 bd 47 	lds	r19, 0x47BD	; 0x8047bd <g_event_start_epoch+0x1>
    3b1c:	40 91 be 47 	lds	r20, 0x47BE	; 0x8047be <g_event_start_epoch+0x2>
    3b20:	50 91 bf 47 	lds	r21, 0x47BF	; 0x8047bf <g_event_start_epoch+0x3>
    3b24:	80 91 e4 47 	lds	r24, 0x47E4	; 0x8047e4 <g_current_epoch>
    3b28:	90 91 e5 47 	lds	r25, 0x47E5	; 0x8047e5 <g_current_epoch+0x1>
    3b2c:	a0 91 e6 47 	lds	r26, 0x47E6	; 0x8047e6 <g_current_epoch+0x2>
    3b30:	b0 91 e7 47 	lds	r27, 0x47E7	; 0x8047e7 <g_current_epoch+0x3>
    3b34:	0f 2e       	mov	r0, r31
    3b36:	f3 eb       	ldi	r31, 0xB3	; 179
    3b38:	ef 2e       	mov	r14, r31
    3b3a:	f2 e4       	ldi	r31, 0x42	; 66
    3b3c:	ff 2e       	mov	r15, r31
    3b3e:	f0 2d       	mov	r31, r0
    3b40:	00 ec       	ldi	r16, 0xC0	; 192
    3b42:	12 e4       	ldi	r17, 0x42	; 66
    3b44:	bc 01       	movw	r22, r24
    3b46:	cd 01       	movw	r24, r26
    3b48:	0e 94 9f 2f 	call	0x5f3e	; 0x5f3e <_Z14reportTimeTillmmPKcS0_>
    3b4c:	20 91 c0 47 	lds	r18, 0x47C0	; 0x8047c0 <g_event_finish_epoch>
    3b50:	30 91 c1 47 	lds	r19, 0x47C1	; 0x8047c1 <g_event_finish_epoch+0x1>
    3b54:	40 91 c2 47 	lds	r20, 0x47C2	; 0x8047c2 <g_event_finish_epoch+0x2>
    3b58:	50 91 c3 47 	lds	r21, 0x47C3	; 0x8047c3 <g_event_finish_epoch+0x3>
    3b5c:	80 91 bc 47 	lds	r24, 0x47BC	; 0x8047bc <g_event_start_epoch>
    3b60:	90 91 bd 47 	lds	r25, 0x47BD	; 0x8047bd <g_event_start_epoch+0x1>
    3b64:	a0 91 be 47 	lds	r26, 0x47BE	; 0x8047be <g_event_start_epoch+0x2>
    3b68:	b0 91 bf 47 	lds	r27, 0x47BF	; 0x8047bf <g_event_start_epoch+0x3>
    3b6c:	e1 2c       	mov	r14, r1
    3b6e:	f1 2c       	mov	r15, r1
    3b70:	0c ec       	ldi	r16, 0xCC	; 204
    3b72:	12 e4       	ldi	r17, 0x42	; 66
    3b74:	bc 01       	movw	r22, r24
    3b76:	cd 01       	movw	r24, r26
    3b78:	0e 94 9f 2f 	call	0x5f3e	; 0x5f3e <_Z14reportTimeTillmmPKcS0_>
    3b7c:	20 91 bc 47 	lds	r18, 0x47BC	; 0x8047bc <g_event_start_epoch>
    3b80:	30 91 bd 47 	lds	r19, 0x47BD	; 0x8047bd <g_event_start_epoch+0x1>
    3b84:	40 91 be 47 	lds	r20, 0x47BE	; 0x8047be <g_event_start_epoch+0x2>
    3b88:	50 91 bf 47 	lds	r21, 0x47BF	; 0x8047bf <g_event_start_epoch+0x3>
    3b8c:	80 91 e4 47 	lds	r24, 0x47E4	; 0x8047e4 <g_current_epoch>
    3b90:	90 91 e5 47 	lds	r25, 0x47E5	; 0x8047e5 <g_current_epoch+0x1>
    3b94:	a0 91 e6 47 	lds	r26, 0x47E6	; 0x8047e6 <g_current_epoch+0x2>
    3b98:	b0 91 e7 47 	lds	r27, 0x47E7	; 0x8047e7 <g_current_epoch+0x3>
    3b9c:	61 e0       	ldi	r22, 0x01	; 1
    3b9e:	28 17       	cp	r18, r24
    3ba0:	39 07       	cpc	r19, r25
    3ba2:	4a 07       	cpc	r20, r26
    3ba4:	5b 07       	cpc	r21, r27
    3ba6:	08 f0       	brcs	.+2      	; 0x3baa <_Z19handleSerialBusMsgsv+0xb52>
    3ba8:	60 e0       	ldi	r22, 0x00	; 0
    3baa:	66 23       	and	r22, r22
    3bac:	c1 f0       	breq	.+48     	; 0x3bde <_Z19handleSerialBusMsgsv+0xb86>
    3bae:	20 91 c0 47 	lds	r18, 0x47C0	; 0x8047c0 <g_event_finish_epoch>
    3bb2:	30 91 c1 47 	lds	r19, 0x47C1	; 0x8047c1 <g_event_finish_epoch+0x1>
    3bb6:	40 91 c2 47 	lds	r20, 0x47C2	; 0x8047c2 <g_event_finish_epoch+0x2>
    3bba:	50 91 c3 47 	lds	r21, 0x47C3	; 0x8047c3 <g_event_finish_epoch+0x3>
    3bbe:	80 91 e4 47 	lds	r24, 0x47E4	; 0x8047e4 <g_current_epoch>
    3bc2:	90 91 e5 47 	lds	r25, 0x47E5	; 0x8047e5 <g_current_epoch+0x1>
    3bc6:	a0 91 e6 47 	lds	r26, 0x47E6	; 0x8047e6 <g_current_epoch+0x2>
    3bca:	b0 91 e7 47 	lds	r27, 0x47E7	; 0x8047e7 <g_current_epoch+0x3>
    3bce:	e1 2c       	mov	r14, r1
    3bd0:	f1 2c       	mov	r15, r1
    3bd2:	04 ed       	ldi	r16, 0xD4	; 212
    3bd4:	12 e4       	ldi	r17, 0x42	; 66
    3bd6:	bc 01       	movw	r22, r24
    3bd8:	cd 01       	movw	r24, r26
    3bda:	0e 94 9f 2f 	call	0x5f3e	; 0x5f3e <_Z14reportTimeTillmmPKcS0_>
    3bde:	81 e0       	ldi	r24, 0x01	; 1
    3be0:	8d 83       	std	Y+5, r24	; 0x05
    3be2:	70 c1       	rjmp	.+736    	; 0x3ec4 <_Z19handleSerialBusMsgsv+0xe6c>
    3be4:	8e 81       	ldd	r24, Y+6	; 0x06
    3be6:	9f 81       	ldd	r25, Y+7	; 0x07
    3be8:	fc 01       	movw	r30, r24
    3bea:	83 81       	ldd	r24, Z+3	; 0x03
    3bec:	83 35       	cpi	r24, 0x53	; 83
    3bee:	09 f0       	breq	.+2      	; 0x3bf2 <_Z19handleSerialBusMsgsv+0xb9a>
    3bf0:	da c0       	rjmp	.+436    	; 0x3da6 <_Z19handleSerialBusMsgsv+0xd4e>
    3bf2:	8e 81       	ldd	r24, Y+6	; 0x06
    3bf4:	9f 81       	ldd	r25, Y+7	; 0x07
    3bf6:	47 96       	adiw	r24, 0x17	; 23
    3bf8:	bc 01       	movw	r22, r24
    3bfa:	89 e4       	ldi	r24, 0x49	; 73
    3bfc:	97 e4       	ldi	r25, 0x47	; 71
    3bfe:	0e 94 f5 73 	call	0xe7ea	; 0xe7ea <strcpy>
    3c02:	80 91 db 47 	lds	r24, 0x47DB	; 0x8047db <g_utc_offset>
    3c06:	81 95       	neg	r24
    3c08:	48 2f       	mov	r20, r24
    3c0a:	6c eb       	ldi	r22, 0xBC	; 188
    3c0c:	77 e4       	ldi	r23, 0x47	; 71
    3c0e:	89 e4       	ldi	r24, 0x49	; 73
    3c10:	97 e4       	ldi	r25, 0x47	; 71
    3c12:	0e 94 6d 2e 	call	0x5cda	; 0x5cda <_Z18validateTimeStringPcPma>
    3c16:	dc 01       	movw	r26, r24
    3c18:	cb 01       	movw	r24, r22
    3c1a:	8a 8f       	std	Y+26, r24	; 0x1a
    3c1c:	9b 8f       	std	Y+27, r25	; 0x1b
    3c1e:	ac 8f       	std	Y+28, r26	; 0x1c
    3c20:	bd 8f       	std	Y+29, r27	; 0x1d
    3c22:	8a 8d       	ldd	r24, Y+26	; 0x1a
    3c24:	9b 8d       	ldd	r25, Y+27	; 0x1b
    3c26:	ac 8d       	ldd	r26, Y+28	; 0x1c
    3c28:	bd 8d       	ldd	r27, Y+29	; 0x1d
    3c2a:	89 2b       	or	r24, r25
    3c2c:	8a 2b       	or	r24, r26
    3c2e:	8b 2b       	or	r24, r27
    3c30:	09 f4       	brne	.+2      	; 0x3c34 <_Z19handleSerialBusMsgsv+0xbdc>
    3c32:	8c c0       	rjmp	.+280    	; 0x3d4c <_Z19handleSerialBusMsgsv+0xcf4>
    3c34:	8a 8d       	ldd	r24, Y+26	; 0x1a
    3c36:	9b 8d       	ldd	r25, Y+27	; 0x1b
    3c38:	ac 8d       	ldd	r26, Y+28	; 0x1c
    3c3a:	bd 8d       	ldd	r27, Y+29	; 0x1d
    3c3c:	80 93 bc 47 	sts	0x47BC, r24	; 0x8047bc <g_event_start_epoch>
    3c40:	90 93 bd 47 	sts	0x47BD, r25	; 0x8047bd <g_event_start_epoch+0x1>
    3c44:	a0 93 be 47 	sts	0x47BE, r26	; 0x8047be <g_event_start_epoch+0x2>
    3c48:	b0 93 bf 47 	sts	0x47BF, r27	; 0x8047bf <g_event_start_epoch+0x3>
    3c4c:	4c eb       	ldi	r20, 0xBC	; 188
    3c4e:	57 e4       	ldi	r21, 0x47	; 71
    3c50:	62 e0       	ldi	r22, 0x02	; 2
    3c52:	8a ed       	ldi	r24, 0xDA	; 218
    3c54:	97 e4       	ldi	r25, 0x47	; 71
    3c56:	0e 94 0a 44 	call	0x8814	; 0x8814 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
    3c5a:	80 91 c0 47 	lds	r24, 0x47C0	; 0x8047c0 <g_event_finish_epoch>
    3c5e:	90 91 c1 47 	lds	r25, 0x47C1	; 0x8047c1 <g_event_finish_epoch+0x1>
    3c62:	a0 91 c2 47 	lds	r26, 0x47C2	; 0x8047c2 <g_event_finish_epoch+0x2>
    3c66:	b0 91 c3 47 	lds	r27, 0x47C3	; 0x8047c3 <g_event_finish_epoch+0x3>
    3c6a:	9e 01       	movw	r18, r28
    3c6c:	23 5a       	subi	r18, 0xA3	; 163
    3c6e:	3f 4f       	sbci	r19, 0xFF	; 255
    3c70:	f9 01       	movw	r30, r18
    3c72:	80 83       	st	Z, r24
    3c74:	91 83       	std	Z+1, r25	; 0x01
    3c76:	a2 83       	std	Z+2, r26	; 0x02
    3c78:	b3 83       	std	Z+3, r27	; 0x03
    3c7a:	80 91 bc 47 	lds	r24, 0x47BC	; 0x8047bc <g_event_start_epoch>
    3c7e:	90 91 bd 47 	lds	r25, 0x47BD	; 0x8047bd <g_event_start_epoch+0x1>
    3c82:	a0 91 be 47 	lds	r26, 0x47BE	; 0x8047be <g_event_start_epoch+0x2>
    3c86:	b0 91 bf 47 	lds	r27, 0x47BF	; 0x8047bf <g_event_start_epoch+0x3>
    3c8a:	80 58       	subi	r24, 0x80	; 128
    3c8c:	9e 4a       	sbci	r25, 0xAE	; 174
    3c8e:	ae 4f       	sbci	r26, 0xFE	; 254
    3c90:	bf 4f       	sbci	r27, 0xFF	; 255
    3c92:	9e 01       	movw	r18, r28
    3c94:	2f 59       	subi	r18, 0x9F	; 159
    3c96:	3f 4f       	sbci	r19, 0xFF	; 255
    3c98:	f9 01       	movw	r30, r18
    3c9a:	80 83       	st	Z, r24
    3c9c:	91 83       	std	Z+1, r25	; 0x01
    3c9e:	a2 83       	std	Z+2, r26	; 0x02
    3ca0:	b3 83       	std	Z+3, r27	; 0x03
    3ca2:	ce 01       	movw	r24, r28
    3ca4:	83 5a       	subi	r24, 0xA3	; 163
    3ca6:	9f 4f       	sbci	r25, 0xFF	; 255
    3ca8:	fc 01       	movw	r30, r24
    3caa:	20 81       	ld	r18, Z
    3cac:	31 81       	ldd	r19, Z+1	; 0x01
    3cae:	42 81       	ldd	r20, Z+2	; 0x02
    3cb0:	53 81       	ldd	r21, Z+3	; 0x03
    3cb2:	ce 01       	movw	r24, r28
    3cb4:	8f 59       	subi	r24, 0x9F	; 159
    3cb6:	9f 4f       	sbci	r25, 0xFF	; 255
    3cb8:	fc 01       	movw	r30, r24
    3cba:	80 81       	ld	r24, Z
    3cbc:	91 81       	ldd	r25, Z+1	; 0x01
    3cbe:	a2 81       	ldd	r26, Z+2	; 0x02
    3cc0:	b3 81       	ldd	r27, Z+3	; 0x03
    3cc2:	28 17       	cp	r18, r24
    3cc4:	39 07       	cpc	r19, r25
    3cc6:	4a 07       	cpc	r20, r26
    3cc8:	5b 07       	cpc	r21, r27
    3cca:	48 f4       	brcc	.+18     	; 0x3cde <_Z19handleSerialBusMsgsv+0xc86>
    3ccc:	ce 01       	movw	r24, r28
    3cce:	8f 59       	subi	r24, 0x9F	; 159
    3cd0:	9f 4f       	sbci	r25, 0xFF	; 255
    3cd2:	fc 01       	movw	r30, r24
    3cd4:	80 81       	ld	r24, Z
    3cd6:	91 81       	ldd	r25, Z+1	; 0x01
    3cd8:	a2 81       	ldd	r26, Z+2	; 0x02
    3cda:	b3 81       	ldd	r27, Z+3	; 0x03
    3cdc:	08 c0       	rjmp	.+16     	; 0x3cee <_Z19handleSerialBusMsgsv+0xc96>
    3cde:	ce 01       	movw	r24, r28
    3ce0:	83 5a       	subi	r24, 0xA3	; 163
    3ce2:	9f 4f       	sbci	r25, 0xFF	; 255
    3ce4:	fc 01       	movw	r30, r24
    3ce6:	80 81       	ld	r24, Z
    3ce8:	91 81       	ldd	r25, Z+1	; 0x01
    3cea:	a2 81       	ldd	r26, Z+2	; 0x02
    3cec:	b3 81       	ldd	r27, Z+3	; 0x03
    3cee:	80 93 c0 47 	sts	0x47C0, r24	; 0x8047c0 <g_event_finish_epoch>
    3cf2:	90 93 c1 47 	sts	0x47C1, r25	; 0x8047c1 <g_event_finish_epoch+0x1>
    3cf6:	a0 93 c2 47 	sts	0x47C2, r26	; 0x8047c2 <g_event_finish_epoch+0x2>
    3cfa:	b0 93 c3 47 	sts	0x47C3, r27	; 0x8047c3 <g_event_finish_epoch+0x3>
    3cfe:	40 ec       	ldi	r20, 0xC0	; 192
    3d00:	57 e4       	ldi	r21, 0x47	; 71
    3d02:	66 e0       	ldi	r22, 0x06	; 6
    3d04:	8a ed       	ldi	r24, 0xDA	; 218
    3d06:	97 e4       	ldi	r25, 0x47	; 71
    3d08:	0e 94 0a 44 	call	0x8814	; 0x8814 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
    3d0c:	63 e0       	ldi	r22, 0x03	; 3
    3d0e:	80 e0       	ldi	r24, 0x00	; 0
    3d10:	90 e0       	ldi	r25, 0x00	; 0
    3d12:	0e 94 88 2b 	call	0x5710	; 0x5710 <_Z11setupForFoxP5Fox_t13EventAction_t>
    3d16:	20 91 bc 47 	lds	r18, 0x47BC	; 0x8047bc <g_event_start_epoch>
    3d1a:	30 91 bd 47 	lds	r19, 0x47BD	; 0x8047bd <g_event_start_epoch+0x1>
    3d1e:	40 91 be 47 	lds	r20, 0x47BE	; 0x8047be <g_event_start_epoch+0x2>
    3d22:	50 91 bf 47 	lds	r21, 0x47BF	; 0x8047bf <g_event_start_epoch+0x3>
    3d26:	80 91 e4 47 	lds	r24, 0x47E4	; 0x8047e4 <g_current_epoch>
    3d2a:	90 91 e5 47 	lds	r25, 0x47E5	; 0x8047e5 <g_current_epoch+0x1>
    3d2e:	a0 91 e6 47 	lds	r26, 0x47E6	; 0x8047e6 <g_current_epoch+0x2>
    3d32:	b0 91 e7 47 	lds	r27, 0x47E7	; 0x8047e7 <g_current_epoch+0x3>
    3d36:	61 e0       	ldi	r22, 0x01	; 1
    3d38:	82 17       	cp	r24, r18
    3d3a:	93 07       	cpc	r25, r19
    3d3c:	a4 07       	cpc	r26, r20
    3d3e:	b5 07       	cpc	r27, r21
    3d40:	08 f0       	brcs	.+2      	; 0x3d44 <_Z19handleSerialBusMsgsv+0xcec>
    3d42:	60 e0       	ldi	r22, 0x00	; 0
    3d44:	66 23       	and	r22, r22
    3d46:	11 f0       	breq	.+4      	; 0x3d4c <_Z19handleSerialBusMsgsv+0xcf4>
    3d48:	0e 94 f3 2a 	call	0x55e6	; 0x55e6 <_Z18startEventUsingRTCv>
    3d4c:	80 91 bc 47 	lds	r24, 0x47BC	; 0x8047bc <g_event_start_epoch>
    3d50:	90 91 bd 47 	lds	r25, 0x47BD	; 0x8047bd <g_event_start_epoch+0x1>
    3d54:	a0 91 be 47 	lds	r26, 0x47BE	; 0x8047be <g_event_start_epoch+0x2>
    3d58:	b0 91 bf 47 	lds	r27, 0x47BF	; 0x8047bf <g_event_start_epoch+0x3>
    3d5c:	ae 01       	movw	r20, r28
    3d5e:	4b 59       	subi	r20, 0x9B	; 155
    3d60:	5f 4f       	sbci	r21, 0xFF	; 255
    3d62:	22 e3       	ldi	r18, 0x32	; 50
    3d64:	30 e0       	ldi	r19, 0x00	; 0
    3d66:	bc 01       	movw	r22, r24
    3d68:	cd 01       	movw	r24, r26
    3d6a:	0e 94 19 43 	call	0x8632	; 0x8632 <convertEpochToTimeString>
    3d6e:	29 2f       	mov	r18, r25
    3d70:	2f 93       	push	r18
    3d72:	8f 93       	push	r24
    3d74:	85 ee       	ldi	r24, 0xE5	; 229
    3d76:	92 e4       	ldi	r25, 0x42	; 66
    3d78:	89 2f       	mov	r24, r25
    3d7a:	8f 93       	push	r24
    3d7c:	85 ee       	ldi	r24, 0xE5	; 229
    3d7e:	92 e4       	ldi	r25, 0x42	; 66
    3d80:	8f 93       	push	r24
    3d82:	89 e4       	ldi	r24, 0x49	; 73
    3d84:	97 e4       	ldi	r25, 0x47	; 71
    3d86:	89 2f       	mov	r24, r25
    3d88:	8f 93       	push	r24
    3d8a:	89 e4       	ldi	r24, 0x49	; 73
    3d8c:	97 e4       	ldi	r25, 0x47	; 71
    3d8e:	8f 93       	push	r24
    3d90:	0e 94 31 74 	call	0xe862	; 0xe862 <sprintf>
    3d94:	0f 90       	pop	r0
    3d96:	0f 90       	pop	r0
    3d98:	0f 90       	pop	r0
    3d9a:	0f 90       	pop	r0
    3d9c:	0f 90       	pop	r0
    3d9e:	0f 90       	pop	r0
    3da0:	81 e0       	ldi	r24, 0x01	; 1
    3da2:	8d 83       	std	Y+5, r24	; 0x05
    3da4:	8f c0       	rjmp	.+286    	; 0x3ec4 <_Z19handleSerialBusMsgsv+0xe6c>
    3da6:	8e 81       	ldd	r24, Y+6	; 0x06
    3da8:	9f 81       	ldd	r25, Y+7	; 0x07
    3daa:	fc 01       	movw	r30, r24
    3dac:	83 81       	ldd	r24, Z+3	; 0x03
    3dae:	86 34       	cpi	r24, 0x46	; 70
    3db0:	09 f0       	breq	.+2      	; 0x3db4 <_Z19handleSerialBusMsgsv+0xd5c>
    3db2:	80 c0       	rjmp	.+256    	; 0x3eb4 <_Z19handleSerialBusMsgsv+0xe5c>
    3db4:	8e 81       	ldd	r24, Y+6	; 0x06
    3db6:	9f 81       	ldd	r25, Y+7	; 0x07
    3db8:	47 96       	adiw	r24, 0x17	; 23
    3dba:	bc 01       	movw	r22, r24
    3dbc:	89 e4       	ldi	r24, 0x49	; 73
    3dbe:	97 e4       	ldi	r25, 0x47	; 71
    3dc0:	0e 94 f5 73 	call	0xe7ea	; 0xe7ea <strcpy>
    3dc4:	80 91 db 47 	lds	r24, 0x47DB	; 0x8047db <g_utc_offset>
    3dc8:	81 95       	neg	r24
    3dca:	48 2f       	mov	r20, r24
    3dcc:	60 ec       	ldi	r22, 0xC0	; 192
    3dce:	77 e4       	ldi	r23, 0x47	; 71
    3dd0:	89 e4       	ldi	r24, 0x49	; 73
    3dd2:	97 e4       	ldi	r25, 0x47	; 71
    3dd4:	0e 94 6d 2e 	call	0x5cda	; 0x5cda <_Z18validateTimeStringPcPma>
    3dd8:	dc 01       	movw	r26, r24
    3dda:	cb 01       	movw	r24, r22
    3ddc:	8e 8f       	std	Y+30, r24	; 0x1e
    3dde:	9f 8f       	std	Y+31, r25	; 0x1f
    3de0:	a8 a3       	std	Y+32, r26	; 0x20
    3de2:	b9 a3       	std	Y+33, r27	; 0x21
    3de4:	8e 8d       	ldd	r24, Y+30	; 0x1e
    3de6:	9f 8d       	ldd	r25, Y+31	; 0x1f
    3de8:	a8 a1       	ldd	r26, Y+32	; 0x20
    3dea:	b9 a1       	ldd	r27, Y+33	; 0x21
    3dec:	89 2b       	or	r24, r25
    3dee:	8a 2b       	or	r24, r26
    3df0:	8b 2b       	or	r24, r27
    3df2:	99 f1       	breq	.+102    	; 0x3e5a <_Z19handleSerialBusMsgsv+0xe02>
    3df4:	8e 8d       	ldd	r24, Y+30	; 0x1e
    3df6:	9f 8d       	ldd	r25, Y+31	; 0x1f
    3df8:	a8 a1       	ldd	r26, Y+32	; 0x20
    3dfa:	b9 a1       	ldd	r27, Y+33	; 0x21
    3dfc:	80 93 c0 47 	sts	0x47C0, r24	; 0x8047c0 <g_event_finish_epoch>
    3e00:	90 93 c1 47 	sts	0x47C1, r25	; 0x8047c1 <g_event_finish_epoch+0x1>
    3e04:	a0 93 c2 47 	sts	0x47C2, r26	; 0x8047c2 <g_event_finish_epoch+0x2>
    3e08:	b0 93 c3 47 	sts	0x47C3, r27	; 0x8047c3 <g_event_finish_epoch+0x3>
    3e0c:	40 ec       	ldi	r20, 0xC0	; 192
    3e0e:	57 e4       	ldi	r21, 0x47	; 71
    3e10:	66 e0       	ldi	r22, 0x06	; 6
    3e12:	8a ed       	ldi	r24, 0xDA	; 218
    3e14:	97 e4       	ldi	r25, 0x47	; 71
    3e16:	0e 94 0a 44 	call	0x8814	; 0x8814 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
    3e1a:	63 e0       	ldi	r22, 0x03	; 3
    3e1c:	80 e0       	ldi	r24, 0x00	; 0
    3e1e:	90 e0       	ldi	r25, 0x00	; 0
    3e20:	0e 94 88 2b 	call	0x5710	; 0x5710 <_Z11setupForFoxP5Fox_t13EventAction_t>
    3e24:	20 91 bc 47 	lds	r18, 0x47BC	; 0x8047bc <g_event_start_epoch>
    3e28:	30 91 bd 47 	lds	r19, 0x47BD	; 0x8047bd <g_event_start_epoch+0x1>
    3e2c:	40 91 be 47 	lds	r20, 0x47BE	; 0x8047be <g_event_start_epoch+0x2>
    3e30:	50 91 bf 47 	lds	r21, 0x47BF	; 0x8047bf <g_event_start_epoch+0x3>
    3e34:	80 91 e4 47 	lds	r24, 0x47E4	; 0x8047e4 <g_current_epoch>
    3e38:	90 91 e5 47 	lds	r25, 0x47E5	; 0x8047e5 <g_current_epoch+0x1>
    3e3c:	a0 91 e6 47 	lds	r26, 0x47E6	; 0x8047e6 <g_current_epoch+0x2>
    3e40:	b0 91 e7 47 	lds	r27, 0x47E7	; 0x8047e7 <g_current_epoch+0x3>
    3e44:	61 e0       	ldi	r22, 0x01	; 1
    3e46:	82 17       	cp	r24, r18
    3e48:	93 07       	cpc	r25, r19
    3e4a:	a4 07       	cpc	r26, r20
    3e4c:	b5 07       	cpc	r27, r21
    3e4e:	08 f0       	brcs	.+2      	; 0x3e52 <_Z19handleSerialBusMsgsv+0xdfa>
    3e50:	60 e0       	ldi	r22, 0x00	; 0
    3e52:	66 23       	and	r22, r22
    3e54:	11 f0       	breq	.+4      	; 0x3e5a <_Z19handleSerialBusMsgsv+0xe02>
    3e56:	0e 94 f3 2a 	call	0x55e6	; 0x55e6 <_Z18startEventUsingRTCv>
    3e5a:	80 91 c0 47 	lds	r24, 0x47C0	; 0x8047c0 <g_event_finish_epoch>
    3e5e:	90 91 c1 47 	lds	r25, 0x47C1	; 0x8047c1 <g_event_finish_epoch+0x1>
    3e62:	a0 91 c2 47 	lds	r26, 0x47C2	; 0x8047c2 <g_event_finish_epoch+0x2>
    3e66:	b0 91 c3 47 	lds	r27, 0x47C3	; 0x8047c3 <g_event_finish_epoch+0x3>
    3e6a:	ae 01       	movw	r20, r28
    3e6c:	4b 59       	subi	r20, 0x9B	; 155
    3e6e:	5f 4f       	sbci	r21, 0xFF	; 255
    3e70:	22 e3       	ldi	r18, 0x32	; 50
    3e72:	30 e0       	ldi	r19, 0x00	; 0
    3e74:	bc 01       	movw	r22, r24
    3e76:	cd 01       	movw	r24, r26
    3e78:	0e 94 19 43 	call	0x8632	; 0x8632 <convertEpochToTimeString>
    3e7c:	29 2f       	mov	r18, r25
    3e7e:	2f 93       	push	r18
    3e80:	8f 93       	push	r24
    3e82:	87 ea       	ldi	r24, 0xA7	; 167
    3e84:	92 e4       	ldi	r25, 0x42	; 66
    3e86:	89 2f       	mov	r24, r25
    3e88:	8f 93       	push	r24
    3e8a:	87 ea       	ldi	r24, 0xA7	; 167
    3e8c:	92 e4       	ldi	r25, 0x42	; 66
    3e8e:	8f 93       	push	r24
    3e90:	89 e4       	ldi	r24, 0x49	; 73
    3e92:	97 e4       	ldi	r25, 0x47	; 71
    3e94:	89 2f       	mov	r24, r25
    3e96:	8f 93       	push	r24
    3e98:	89 e4       	ldi	r24, 0x49	; 73
    3e9a:	97 e4       	ldi	r25, 0x47	; 71
    3e9c:	8f 93       	push	r24
    3e9e:	0e 94 31 74 	call	0xe862	; 0xe862 <sprintf>
    3ea2:	0f 90       	pop	r0
    3ea4:	0f 90       	pop	r0
    3ea6:	0f 90       	pop	r0
    3ea8:	0f 90       	pop	r0
    3eaa:	0f 90       	pop	r0
    3eac:	0f 90       	pop	r0
    3eae:	81 e0       	ldi	r24, 0x01	; 1
    3eb0:	8d 83       	std	Y+5, r24	; 0x05
    3eb2:	08 c0       	rjmp	.+16     	; 0x3ec4 <_Z19handleSerialBusMsgsv+0xe6c>
    3eb4:	8e 81       	ldd	r24, Y+6	; 0x06
    3eb6:	9f 81       	ldd	r25, Y+7	; 0x07
    3eb8:	fc 01       	movw	r30, r24
    3eba:	83 81       	ldd	r24, Z+3	; 0x03
    3ebc:	8a 32       	cpi	r24, 0x2A	; 42
    3ebe:	11 f4       	brne	.+4      	; 0x3ec4 <_Z19handleSerialBusMsgsv+0xe6c>
    3ec0:	0e 94 30 42 	call	0x8460	; 0x8460 <ds3231_sync2nearestMinute>
    3ec4:	8d 81       	ldd	r24, Y+5	; 0x05
    3ec6:	88 23       	and	r24, r24
    3ec8:	01 f1       	breq	.+64     	; 0x3f0a <_Z19handleSerialBusMsgsv+0xeb2>
    3eca:	89 e4       	ldi	r24, 0x49	; 73
    3ecc:	97 e4       	ldi	r25, 0x47	; 71
    3ece:	0e 94 fd 5a 	call	0xb5fa	; 0xb5fa <sb_send_string>
    3ed2:	1b c0       	rjmp	.+54     	; 0x3f0a <_Z19handleSerialBusMsgsv+0xeb2>
    3ed4:	8e 81       	ldd	r24, Y+6	; 0x06
    3ed6:	9f 81       	ldd	r25, Y+7	; 0x07
    3ed8:	fc 01       	movw	r30, r24
    3eda:	83 81       	ldd	r24, Z+3	; 0x03
    3edc:	83 34       	cpi	r24, 0x43	; 67
    3ede:	b9 f4       	brne	.+46     	; 0x3f0e <_Z19handleSerialBusMsgsv+0xeb6>
    3ee0:	8e 81       	ldd	r24, Y+6	; 0x06
    3ee2:	9f 81       	ldd	r25, Y+7	; 0x07
    3ee4:	fc 01       	movw	r30, r24
    3ee6:	87 89       	ldd	r24, Z+23	; 0x17
    3ee8:	88 23       	and	r24, r24
    3eea:	89 f0       	breq	.+34     	; 0x3f0e <_Z19handleSerialBusMsgsv+0xeb6>
    3eec:	8e 81       	ldd	r24, Y+6	; 0x06
    3eee:	9f 81       	ldd	r25, Y+7	; 0x07
    3ef0:	47 96       	adiw	r24, 0x17	; 23
    3ef2:	0e 94 8b 73 	call	0xe716	; 0xe716 <atoi>
    3ef6:	88 a7       	std	Y+40, r24	; 0x28
    3ef8:	99 a7       	std	Y+41, r25	; 0x29
    3efa:	09 c0       	rjmp	.+18     	; 0x3f0e <_Z19handleSerialBusMsgsv+0xeb6>
    3efc:	84 e7       	ldi	r24, 0x74	; 116
    3efe:	90 e4       	ldi	r25, 0x40	; 64
    3f00:	0e 94 fd 5a 	call	0xb5fa	; 0xb5fa <sb_send_string>
    3f04:	05 c0       	rjmp	.+10     	; 0x3f10 <_Z19handleSerialBusMsgsv+0xeb8>
    3f06:	00 00       	nop
    3f08:	03 c0       	rjmp	.+6      	; 0x3f10 <_Z19handleSerialBusMsgsv+0xeb8>
    3f0a:	00 00       	nop
    3f0c:	01 c0       	rjmp	.+2      	; 0x3f10 <_Z19handleSerialBusMsgsv+0xeb8>
    3f0e:	00 00       	nop
    3f10:	8e 81       	ldd	r24, Y+6	; 0x06
    3f12:	9f 81       	ldd	r25, Y+7	; 0x07
    3f14:	fc 01       	movw	r30, r24
    3f16:	11 82       	std	Z+1, r1	; 0x01
    3f18:	12 82       	std	Z+2, r1	; 0x02
    3f1a:	0e 94 c0 5a 	call	0xb580	; 0xb580 <sb_send_NewPrompt>
    3f1e:	a8 c8       	rjmp	.-3760   	; 0x3070 <_Z19handleSerialBusMsgsv+0x18>
    3f20:	00 00       	nop
    3f22:	ca 56       	subi	r28, 0x6A	; 106
    3f24:	df 4f       	sbci	r29, 0xFF	; 255
    3f26:	cd bf       	out	0x3d, r28	; 61
    3f28:	de bf       	out	0x3e, r29	; 62
    3f2a:	df 91       	pop	r29
    3f2c:	cf 91       	pop	r28
    3f2e:	1f 91       	pop	r17
    3f30:	0f 91       	pop	r16
    3f32:	ff 90       	pop	r15
    3f34:	ef 90       	pop	r14
    3f36:	08 95       	ret

00003f38 <_Z17handleLinkBusMsgsv>:
    3f38:	ef 92       	push	r14
    3f3a:	ff 92       	push	r15
    3f3c:	0f 93       	push	r16
    3f3e:	1f 93       	push	r17
    3f40:	cf 93       	push	r28
    3f42:	df 93       	push	r29
    3f44:	cd b7       	in	r28, 0x3d	; 61
    3f46:	de b7       	in	r29, 0x3e	; 62
    3f48:	e3 97       	sbiw	r28, 0x33	; 51
    3f4a:	cd bf       	out	0x3d, r28	; 61
    3f4c:	de bf       	out	0x3e, r29	; 62
    3f4e:	81 e0       	ldi	r24, 0x01	; 1
    3f50:	89 83       	std	Y+1, r24	; 0x01
    3f52:	0e 94 2b 50 	call	0xa056	; 0xa056 <_Z18nextFullLBRxBufferv>
    3f56:	8c 87       	std	Y+12, r24	; 0x0c
    3f58:	9d 87       	std	Y+13, r25	; 0x0d
    3f5a:	21 e0       	ldi	r18, 0x01	; 1
    3f5c:	8c 85       	ldd	r24, Y+12	; 0x0c
    3f5e:	9d 85       	ldd	r25, Y+13	; 0x0d
    3f60:	89 2b       	or	r24, r25
    3f62:	09 f4       	brne	.+2      	; 0x3f66 <_Z17handleLinkBusMsgsv+0x2e>
    3f64:	20 e0       	ldi	r18, 0x00	; 0
    3f66:	22 23       	and	r18, r18
    3f68:	09 f4       	brne	.+2      	; 0x3f6c <_Z17handleLinkBusMsgsv+0x34>
    3f6a:	8b c6       	rjmp	.+3350   	; 0x4c82 <__DATA_REGION_LENGTH__+0xc82>
    3f6c:	8c 85       	ldd	r24, Y+12	; 0x0c
    3f6e:	9d 85       	ldd	r25, Y+13	; 0x0d
    3f70:	fc 01       	movw	r30, r24
    3f72:	81 81       	ldd	r24, Z+1	; 0x01
    3f74:	92 81       	ldd	r25, Z+2	; 0x02
    3f76:	8e 87       	std	Y+14, r24	; 0x0e
    3f78:	9f 87       	std	Y+15, r25	; 0x0f
    3f7a:	8e 85       	ldd	r24, Y+14	; 0x0e
    3f7c:	9f 85       	ldd	r25, Y+15	; 0x0f
    3f7e:	82 38       	cpi	r24, 0x82	; 130
    3f80:	fe e1       	ldi	r31, 0x1E	; 30
    3f82:	9f 07       	cpc	r25, r31
    3f84:	09 f4       	brne	.+2      	; 0x3f88 <_Z17handleLinkBusMsgsv+0x50>
    3f86:	76 c0       	rjmp	.+236    	; 0x4074 <__DATA_REGION_LENGTH__+0x74>
    3f88:	83 38       	cpi	r24, 0x83	; 131
    3f8a:	2e e1       	ldi	r18, 0x1E	; 30
    3f8c:	92 07       	cpc	r25, r18
    3f8e:	30 f5       	brcc	.+76     	; 0x3fdc <_Z17handleLinkBusMsgsv+0xa4>
    3f90:	81 36       	cpi	r24, 0x61	; 97
    3f92:	33 e0       	ldi	r19, 0x03	; 3
    3f94:	93 07       	cpc	r25, r19
    3f96:	09 f4       	brne	.+2      	; 0x3f9a <_Z17handleLinkBusMsgsv+0x62>
    3f98:	de c4       	rjmp	.+2492   	; 0x4956 <__DATA_REGION_LENGTH__+0x956>
    3f9a:	82 36       	cpi	r24, 0x62	; 98
    3f9c:	e3 e0       	ldi	r30, 0x03	; 3
    3f9e:	9e 07       	cpc	r25, r30
    3fa0:	78 f4       	brcc	.+30     	; 0x3fc0 <_Z17handleLinkBusMsgsv+0x88>
    3fa2:	85 31       	cpi	r24, 0x15	; 21
    3fa4:	f3 e0       	ldi	r31, 0x03	; 3
    3fa6:	9f 07       	cpc	r25, r31
    3fa8:	09 f4       	brne	.+2      	; 0x3fac <_Z17handleLinkBusMsgsv+0x74>
    3faa:	21 c1       	rjmp	.+578    	; 0x41ee <__DATA_REGION_LENGTH__+0x1ee>
    3fac:	8e 31       	cpi	r24, 0x1E	; 30
    3fae:	23 e0       	ldi	r18, 0x03	; 3
    3fb0:	92 07       	cpc	r25, r18
    3fb2:	09 f4       	brne	.+2      	; 0x3fb6 <_Z17handleLinkBusMsgsv+0x7e>
    3fb4:	45 c3       	rjmp	.+1674   	; 0x4640 <__DATA_REGION_LENGTH__+0x640>
    3fb6:	84 35       	cpi	r24, 0x54	; 84
    3fb8:	91 05       	cpc	r25, r1
    3fba:	09 f4       	brne	.+2      	; 0x3fbe <_Z17handleLinkBusMsgsv+0x86>
    3fbc:	41 c4       	rjmp	.+2178   	; 0x4840 <__DATA_REGION_LENGTH__+0x840>
    3fbe:	36 c6       	rjmp	.+3180   	; 0x4c2c <__DATA_REGION_LENGTH__+0xc2c>
    3fc0:	8f 3a       	cpi	r24, 0xAF	; 175
    3fc2:	33 e0       	ldi	r19, 0x03	; 3
    3fc4:	93 07       	cpc	r25, r19
    3fc6:	d1 f1       	breq	.+116    	; 0x403c <__DATA_REGION_LENGTH__+0x3c>
    3fc8:	86 3a       	cpi	r24, 0xA6	; 166
    3fca:	ec e1       	ldi	r30, 0x1C	; 28
    3fcc:	9e 07       	cpc	r25, r30
    3fce:	09 f4       	brne	.+2      	; 0x3fd2 <_Z17handleLinkBusMsgsv+0x9a>
    3fd0:	4d c5       	rjmp	.+2714   	; 0x4a6c <__DATA_REGION_LENGTH__+0xa6c>
    3fd2:	84 38       	cpi	r24, 0x84	; 132
    3fd4:	93 40       	sbci	r25, 0x03	; 3
    3fd6:	09 f4       	brne	.+2      	; 0x3fda <_Z17handleLinkBusMsgsv+0xa2>
    3fd8:	cf c1       	rjmp	.+926    	; 0x4378 <__DATA_REGION_LENGTH__+0x378>
    3fda:	28 c6       	rjmp	.+3152   	; 0x4c2c <__DATA_REGION_LENGTH__+0xc2c>
    3fdc:	8a 39       	cpi	r24, 0x9A	; 154
    3fde:	23 e2       	ldi	r18, 0x23	; 35
    3fe0:	92 07       	cpc	r25, r18
    3fe2:	09 f4       	brne	.+2      	; 0x3fe6 <_Z17handleLinkBusMsgsv+0xae>
    3fe4:	43 c0       	rjmp	.+134    	; 0x406c <__DATA_REGION_LENGTH__+0x6c>
    3fe6:	8b 39       	cpi	r24, 0x9B	; 155
    3fe8:	33 e2       	ldi	r19, 0x23	; 35
    3fea:	93 07       	cpc	r25, r19
    3fec:	78 f4       	brcc	.+30     	; 0x400c <__DATA_REGION_LENGTH__+0xc>
    3fee:	8d 3a       	cpi	r24, 0xAD	; 173
    3ff0:	e2 e2       	ldi	r30, 0x22	; 34
    3ff2:	9e 07       	cpc	r25, r30
    3ff4:	09 f4       	brne	.+2      	; 0x3ff8 <_Z17handleLinkBusMsgsv+0xc0>
    3ff6:	99 c0       	rjmp	.+306    	; 0x412a <__DATA_REGION_LENGTH__+0x12a>
    3ff8:	81 3c       	cpi	r24, 0xC1	; 193
    3ffa:	f2 e2       	ldi	r31, 0x22	; 34
    3ffc:	9f 07       	cpc	r25, r31
    3ffe:	09 f4       	brne	.+2      	; 0x4002 <__DATA_REGION_LENGTH__+0x2>
    4000:	f1 c0       	rjmp	.+482    	; 0x41e4 <__DATA_REGION_LENGTH__+0x1e4>
    4002:	81 3d       	cpi	r24, 0xD1	; 209
    4004:	9e 41       	sbci	r25, 0x1E	; 30
    4006:	09 f4       	brne	.+2      	; 0x400a <__DATA_REGION_LENGTH__+0xa>
    4008:	bd c4       	rjmp	.+2426   	; 0x4984 <__DATA_REGION_LENGTH__+0x984>
    400a:	10 c6       	rjmp	.+3104   	; 0x4c2c <__DATA_REGION_LENGTH__+0xc2c>
    400c:	80 3d       	cpi	r24, 0xD0	; 208
    400e:	33 e2       	ldi	r19, 0x23	; 35
    4010:	93 07       	cpc	r25, r19
    4012:	09 f4       	brne	.+2      	; 0x4016 <__DATA_REGION_LENGTH__+0x16>
    4014:	78 c3       	rjmp	.+1776   	; 0x4706 <__DATA_REGION_LENGTH__+0x706>
    4016:	81 3d       	cpi	r24, 0xD1	; 209
    4018:	e3 e2       	ldi	r30, 0x23	; 35
    401a:	9e 07       	cpc	r25, r30
    401c:	28 f4       	brcc	.+10     	; 0x4028 <__DATA_REGION_LENGTH__+0x28>
    401e:	8f 3c       	cpi	r24, 0xCF	; 207
    4020:	93 42       	sbci	r25, 0x23	; 35
    4022:	09 f4       	brne	.+2      	; 0x4026 <__DATA_REGION_LENGTH__+0x26>
    4024:	eb c5       	rjmp	.+3030   	; 0x4bfc <__DATA_REGION_LENGTH__+0xbfc>
    4026:	02 c6       	rjmp	.+3076   	; 0x4c2c <__DATA_REGION_LENGTH__+0xc2c>
    4028:	87 3f       	cpi	r24, 0xF7	; 247
    402a:	23 e2       	ldi	r18, 0x23	; 35
    402c:	92 07       	cpc	r25, r18
    402e:	09 f4       	brne	.+2      	; 0x4032 <__DATA_REGION_LENGTH__+0x32>
    4030:	16 c2       	rjmp	.+1068   	; 0x445e <__DATA_REGION_LENGTH__+0x45e>
    4032:	8c 39       	cpi	r24, 0x9C	; 156
    4034:	94 42       	sbci	r25, 0x24	; 36
    4036:	09 f4       	brne	.+2      	; 0x403a <__DATA_REGION_LENGTH__+0x3a>
    4038:	f1 c5       	rjmp	.+3042   	; 0x4c1c <__DATA_REGION_LENGTH__+0xc1c>
    403a:	f8 c5       	rjmp	.+3056   	; 0x4c2c <__DATA_REGION_LENGTH__+0xc2c>
    403c:	8c 85       	ldd	r24, Y+12	; 0x0c
    403e:	9d 85       	ldd	r25, Y+13	; 0x0d
    4040:	fc 01       	movw	r30, r24
    4042:	83 81       	ldd	r24, Z+3	; 0x03
    4044:	88 23       	and	r24, r24
    4046:	09 f4       	brne	.+2      	; 0x404a <__DATA_REGION_LENGTH__+0x4a>
    4048:	f7 c5       	rjmp	.+3054   	; 0x4c38 <__DATA_REGION_LENGTH__+0xc38>
    404a:	8c 85       	ldd	r24, Y+12	; 0x0c
    404c:	9d 85       	ldd	r25, Y+13	; 0x0d
    404e:	03 96       	adiw	r24, 0x03	; 3
    4050:	0e 94 8b 73 	call	0xe716	; 0xe716 <atoi>
    4054:	21 e0       	ldi	r18, 0x01	; 1
    4056:	89 2b       	or	r24, r25
    4058:	09 f4       	brne	.+2      	; 0x405c <__DATA_REGION_LENGTH__+0x5c>
    405a:	20 e0       	ldi	r18, 0x00	; 0
    405c:	28 8b       	std	Y+16, r18	; 0x10
    405e:	0e 94 5b 2a 	call	0x54b6	; 0x54b6 <_Z12suspendEventv>
    4062:	0e 94 b0 51 	call	0xa360	; 0xa360 <_Z15linkbus_disablev>
    4066:	10 92 09 40 	sts	0x4009, r1	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    406a:	e6 c5       	rjmp	.+3020   	; 0x4c38 <__DATA_REGION_LENGTH__+0xc38>
    406c:	82 e0       	ldi	r24, 0x02	; 2
    406e:	0e 94 44 27 	call	0x4e88	; 0x4e88 <_Z8wdt_init7WDReset>
    4072:	ff cf       	rjmp	.-2      	; 0x4072 <__DATA_REGION_LENGTH__+0x72>
    4074:	8c 85       	ldd	r24, Y+12	; 0x0c
    4076:	9d 85       	ldd	r25, Y+13	; 0x0d
    4078:	fc 01       	movw	r30, r24
    407a:	83 81       	ldd	r24, Z+3	; 0x03
    407c:	89 8b       	std	Y+17, r24	; 0x11
    407e:	81 e0       	ldi	r24, 0x01	; 1
    4080:	80 93 0a 40 	sts	0x400A, r24	; 0x80400a <_ZL13g_wifi_active>
    4084:	89 89       	ldd	r24, Y+17	; 0x11
    4086:	8a 35       	cpi	r24, 0x5A	; 90
    4088:	21 f4       	brne	.+8      	; 0x4092 <__DATA_REGION_LENGTH__+0x92>
    408a:	88 e7       	ldi	r24, 0x78	; 120
    408c:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    4090:	d5 c5       	rjmp	.+2986   	; 0x4c3c <__DATA_REGION_LENGTH__+0xc3c>
    4092:	89 89       	ldd	r24, Y+17	; 0x11
    4094:	80 33       	cpi	r24, 0x30	; 48
    4096:	b1 f5       	brne	.+108    	; 0x4104 <__DATA_REGION_LENGTH__+0x104>
    4098:	80 91 c7 47 	lds	r24, 0x47C7	; 0x8047c7 <g_waiting_for_next_event>
    409c:	88 23       	and	r24, r24
    409e:	39 f0       	breq	.+14     	; 0x40ae <__DATA_REGION_LENGTH__+0xae>
    40a0:	40 ef       	ldi	r20, 0xF0	; 240
    40a2:	52 e4       	ldi	r21, 0x42	; 66
    40a4:	62 ef       	ldi	r22, 0xF2	; 242
    40a6:	72 e4       	ldi	r23, 0x42	; 66
    40a8:	83 e0       	ldi	r24, 0x03	; 3
    40aa:	0e 94 42 52 	call	0xa484	; 0xa484 <_Z11lb_send_msg13LBMessageTypePKcPc>
    40ae:	80 e0       	ldi	r24, 0x00	; 0
    40b0:	90 e0       	ldi	r25, 0x00	; 0
    40b2:	0e 94 ae 05 	call	0xb5c	; 0xb5c <time>
    40b6:	dc 01       	movw	r26, r24
    40b8:	cb 01       	movw	r24, r22
    40ba:	2b 2f       	mov	r18, r27
    40bc:	2f 93       	push	r18
    40be:	2a 2f       	mov	r18, r26
    40c0:	2f 93       	push	r18
    40c2:	29 2f       	mov	r18, r25
    40c4:	2f 93       	push	r18
    40c6:	8f 93       	push	r24
    40c8:	86 ef       	ldi	r24, 0xF6	; 246
    40ca:	92 e4       	ldi	r25, 0x42	; 66
    40cc:	89 2f       	mov	r24, r25
    40ce:	8f 93       	push	r24
    40d0:	86 ef       	ldi	r24, 0xF6	; 246
    40d2:	92 e4       	ldi	r25, 0x42	; 66
    40d4:	8f 93       	push	r24
    40d6:	89 e4       	ldi	r24, 0x49	; 73
    40d8:	97 e4       	ldi	r25, 0x47	; 71
    40da:	89 2f       	mov	r24, r25
    40dc:	8f 93       	push	r24
    40de:	89 e4       	ldi	r24, 0x49	; 73
    40e0:	97 e4       	ldi	r25, 0x47	; 71
    40e2:	8f 93       	push	r24
    40e4:	0e 94 31 74 	call	0xe862	; 0xe862 <sprintf>
    40e8:	2d b7       	in	r18, 0x3d	; 61
    40ea:	3e b7       	in	r19, 0x3e	; 62
    40ec:	28 5f       	subi	r18, 0xF8	; 248
    40ee:	3f 4f       	sbci	r19, 0xFF	; 255
    40f0:	cd bf       	out	0x3d, r28	; 61
    40f2:	de bf       	out	0x3e, r29	; 62
    40f4:	49 e4       	ldi	r20, 0x49	; 73
    40f6:	57 e4       	ldi	r21, 0x47	; 71
    40f8:	6a ef       	ldi	r22, 0xFA	; 250
    40fa:	72 e4       	ldi	r23, 0x42	; 66
    40fc:	83 e0       	ldi	r24, 0x03	; 3
    40fe:	0e 94 42 52 	call	0xa484	; 0xa484 <_Z11lb_send_msg13LBMessageTypePKcPc>
    4102:	9c c5       	rjmp	.+2872   	; 0x4c3c <__DATA_REGION_LENGTH__+0xc3c>
    4104:	89 89       	ldd	r24, Y+17	; 0x11
    4106:	83 33       	cpi	r24, 0x33	; 51
    4108:	09 f0       	breq	.+2      	; 0x410c <__DATA_REGION_LENGTH__+0x10c>
    410a:	98 c5       	rjmp	.+2864   	; 0x4c3c <__DATA_REGION_LENGTH__+0xc3c>
    410c:	10 92 8b 47 	sts	0x478B, r1	; 0x80478b <_ZL19g_wifi_enable_delay>
    4110:	81 e0       	ldi	r24, 0x01	; 1
    4112:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    4116:	10 92 c7 47 	sts	0x47C7, r1	; 0x8047c7 <g_waiting_for_next_event>
    411a:	10 92 c6 47 	sts	0x47C6, r1	; 0x8047c6 <g_check_for_next_event>
    411e:	10 92 0a 40 	sts	0x400A, r1	; 0x80400a <_ZL13g_wifi_active>
    4122:	81 e0       	ldi	r24, 0x01	; 1
    4124:	80 93 8c 47 	sts	0x478C, r24	; 0x80478c <_ZL20g_shutting_down_wifi>
    4128:	89 c5       	rjmp	.+2834   	; 0x4c3c <__DATA_REGION_LENGTH__+0xc3c>
    412a:	8c 85       	ldd	r24, Y+12	; 0x0c
    412c:	9d 85       	ldd	r25, Y+13	; 0x0d
    412e:	fc 01       	movw	r30, r24
    4130:	83 81       	ldd	r24, Z+3	; 0x03
    4132:	88 23       	and	r24, r24
    4134:	09 f4       	brne	.+2      	; 0x4138 <__DATA_REGION_LENGTH__+0x138>
    4136:	84 c5       	rjmp	.+2824   	; 0x4c40 <__DATA_REGION_LENGTH__+0xc40>
    4138:	8c 85       	ldd	r24, Y+12	; 0x0c
    413a:	9d 85       	ldd	r25, Y+13	; 0x0d
    413c:	fc 01       	movw	r30, r24
    413e:	83 81       	ldd	r24, Z+3	; 0x03
    4140:	8d 34       	cpi	r24, 0x4D	; 77
    4142:	a9 f4       	brne	.+42     	; 0x416e <__DATA_REGION_LENGTH__+0x16e>
    4144:	8c 85       	ldd	r24, Y+12	; 0x0c
    4146:	9d 85       	ldd	r25, Y+13	; 0x0d
    4148:	fc 01       	movw	r30, r24
    414a:	80 8d       	ldd	r24, Z+24	; 0x18
    414c:	88 23       	and	r24, r24
    414e:	79 f0       	breq	.+30     	; 0x416e <__DATA_REGION_LENGTH__+0x16e>
    4150:	8c 85       	ldd	r24, Y+12	; 0x0c
    4152:	9d 85       	ldd	r25, Y+13	; 0x0d
    4154:	48 96       	adiw	r24, 0x18	; 24
    4156:	0e 94 8b 73 	call	0xe716	; 0xe716 <atoi>
    415a:	80 93 f0 47 	sts	0x47F0, r24	; 0x8047f0 <_ZZ17handleLinkBusMsgsvE6pwr_mW>
    415e:	90 93 f1 47 	sts	0x47F1, r25	; 0x8047f1 <_ZZ17handleLinkBusMsgsvE6pwr_mW+0x1>
    4162:	80 91 f2 47 	lds	r24, 0x47F2	; 0x8047f2 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    4166:	8f 5f       	subi	r24, 0xFF	; 255
    4168:	80 93 f2 47 	sts	0x47F2, r24	; 0x8047f2 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    416c:	09 c0       	rjmp	.+18     	; 0x4180 <__DATA_REGION_LENGTH__+0x180>
    416e:	8c 85       	ldd	r24, Y+12	; 0x0c
    4170:	9d 85       	ldd	r25, Y+13	; 0x0d
    4172:	03 96       	adiw	r24, 0x03	; 3
    4174:	0e 94 8b 73 	call	0xe716	; 0xe716 <atoi>
    4178:	80 93 f0 47 	sts	0x47F0, r24	; 0x8047f0 <_ZZ17handleLinkBusMsgsvE6pwr_mW>
    417c:	90 93 f1 47 	sts	0x47F1, r25	; 0x8047f1 <_ZZ17handleLinkBusMsgsvE6pwr_mW+0x1>
    4180:	60 e0       	ldi	r22, 0x00	; 0
    4182:	70 e0       	ldi	r23, 0x00	; 0
    4184:	80 ef       	ldi	r24, 0xF0	; 240
    4186:	97 e4       	ldi	r25, 0x47	; 71
    4188:	0e 94 df 67 	call	0xcfbe	; 0xcfbe <_Z15txSetParametersPjPb>
    418c:	8a 8b       	std	Y+18, r24	; 0x12
    418e:	8a 89       	ldd	r24, Y+18	; 0x12
    4190:	88 23       	and	r24, r24
    4192:	19 f0       	breq	.+6      	; 0x419a <__DATA_REGION_LENGTH__+0x19a>
    4194:	8a 89       	ldd	r24, Y+18	; 0x12
    4196:	80 93 7b 47 	sts	0x477B, r24	; 0x80477b <_ZL17g_last_error_code>
    419a:	80 91 f0 47 	lds	r24, 0x47F0	; 0x8047f0 <_ZZ17handleLinkBusMsgsvE6pwr_mW>
    419e:	90 91 f1 47 	lds	r25, 0x47F1	; 0x8047f1 <_ZZ17handleLinkBusMsgsvE6pwr_mW+0x1>
    41a2:	29 2f       	mov	r18, r25
    41a4:	2f 93       	push	r18
    41a6:	8f 93       	push	r24
    41a8:	8e ef       	ldi	r24, 0xFE	; 254
    41aa:	92 e4       	ldi	r25, 0x42	; 66
    41ac:	89 2f       	mov	r24, r25
    41ae:	8f 93       	push	r24
    41b0:	8e ef       	ldi	r24, 0xFE	; 254
    41b2:	92 e4       	ldi	r25, 0x42	; 66
    41b4:	8f 93       	push	r24
    41b6:	89 e4       	ldi	r24, 0x49	; 73
    41b8:	97 e4       	ldi	r25, 0x47	; 71
    41ba:	89 2f       	mov	r24, r25
    41bc:	8f 93       	push	r24
    41be:	89 e4       	ldi	r24, 0x49	; 73
    41c0:	97 e4       	ldi	r25, 0x47	; 71
    41c2:	8f 93       	push	r24
    41c4:	0e 94 31 74 	call	0xe862	; 0xe862 <sprintf>
    41c8:	0f 90       	pop	r0
    41ca:	0f 90       	pop	r0
    41cc:	0f 90       	pop	r0
    41ce:	0f 90       	pop	r0
    41d0:	0f 90       	pop	r0
    41d2:	0f 90       	pop	r0
    41d4:	49 e4       	ldi	r20, 0x49	; 73
    41d6:	57 e4       	ldi	r21, 0x47	; 71
    41d8:	63 e0       	ldi	r22, 0x03	; 3
    41da:	73 e4       	ldi	r23, 0x43	; 67
    41dc:	83 e0       	ldi	r24, 0x03	; 3
    41de:	0e 94 42 52 	call	0xa484	; 0xa484 <_Z11lb_send_msg13LBMessageTypePKcPc>
    41e2:	2e c5       	rjmp	.+2652   	; 0x4c40 <__DATA_REGION_LENGTH__+0xc40>
    41e4:	8a ed       	ldi	r24, 0xDA	; 218
    41e6:	97 e4       	ldi	r25, 0x47	; 71
    41e8:	0e 94 0c 45 	call	0x8a18	; 0x8a18 <_ZN13EepromManager13saveAllEEPROMEv>
    41ec:	3c c5       	rjmp	.+2680   	; 0x4c66 <__DATA_REGION_LENGTH__+0xc66>
    41ee:	8c 85       	ldd	r24, Y+12	; 0x0c
    41f0:	9d 85       	ldd	r25, Y+13	; 0x0d
    41f2:	fc 01       	movw	r30, r24
    41f4:	83 81       	ldd	r24, Z+3	; 0x03
    41f6:	8b 8b       	std	Y+19, r24	; 0x13
    41f8:	8b 89       	ldd	r24, Y+19	; 0x13
    41fa:	81 33       	cpi	r24, 0x31	; 49
    41fc:	21 f0       	breq	.+8      	; 0x4206 <__DATA_REGION_LENGTH__+0x206>
    41fe:	8b 89       	ldd	r24, Y+19	; 0x13
    4200:	82 33       	cpi	r24, 0x32	; 50
    4202:	09 f0       	breq	.+2      	; 0x4206 <__DATA_REGION_LENGTH__+0x206>
    4204:	ab c0       	rjmp	.+342    	; 0x435c <__DATA_REGION_LENGTH__+0x35c>
    4206:	80 91 81 47 	lds	r24, 0x4781	; 0x804781 <g_antenna_connect_state>
    420a:	82 30       	cpi	r24, 0x02	; 2
    420c:	41 f0       	breq	.+16     	; 0x421e <__DATA_REGION_LENGTH__+0x21e>
    420e:	90 91 35 40 	lds	r25, 0x4035	; 0x804035 <g_tx_power_is_zero>
    4212:	81 e0       	ldi	r24, 0x01	; 1
    4214:	89 27       	eor	r24, r25
    4216:	88 23       	and	r24, r24
    4218:	11 f0       	breq	.+4      	; 0x421e <__DATA_REGION_LENGTH__+0x21e>
    421a:	81 e0       	ldi	r24, 0x01	; 1
    421c:	01 c0       	rjmp	.+2      	; 0x4220 <__DATA_REGION_LENGTH__+0x220>
    421e:	80 e0       	ldi	r24, 0x00	; 0
    4220:	88 23       	and	r24, r24
    4222:	21 f0       	breq	.+8      	; 0x422c <__DATA_REGION_LENGTH__+0x22c>
    4224:	87 ef       	ldi	r24, 0xF7	; 247
    4226:	80 93 7b 47 	sts	0x477B, r24	; 0x80477b <_ZL17g_last_error_code>
    422a:	a4 c0       	rjmp	.+328    	; 0x4374 <__DATA_REGION_LENGTH__+0x374>
    422c:	8b 89       	ldd	r24, Y+19	; 0x13
    422e:	81 33       	cpi	r24, 0x31	; 49
    4230:	09 f0       	breq	.+2      	; 0x4234 <__DATA_REGION_LENGTH__+0x234>
    4232:	64 c0       	rjmp	.+200    	; 0x42fc <__DATA_REGION_LENGTH__+0x2fc>
    4234:	80 91 81 47 	lds	r24, 0x4781	; 0x804781 <g_antenna_connect_state>
    4238:	82 30       	cpi	r24, 0x02	; 2
    423a:	21 f0       	breq	.+8      	; 0x4244 <__DATA_REGION_LENGTH__+0x244>
    423c:	80 91 35 40 	lds	r24, 0x4035	; 0x804035 <g_tx_power_is_zero>
    4240:	88 23       	and	r24, r24
    4242:	11 f0       	breq	.+4      	; 0x4248 <__DATA_REGION_LENGTH__+0x248>
    4244:	81 e0       	ldi	r24, 0x01	; 1
    4246:	01 c0       	rjmp	.+2      	; 0x424a <__DATA_REGION_LENGTH__+0x24a>
    4248:	80 e0       	ldi	r24, 0x00	; 0
    424a:	88 23       	and	r24, r24
    424c:	09 f4       	brne	.+2      	; 0x4250 <__DATA_REGION_LENGTH__+0x250>
    424e:	52 c0       	rjmp	.+164    	; 0x42f4 <__DATA_REGION_LENGTH__+0x2f4>
    4250:	10 92 c4 47 	sts	0x47C4, r1	; 0x8047c4 <g_event_enabled>
    4254:	81 e0       	ldi	r24, 0x01	; 1
    4256:	8c a7       	std	Y+44, r24	; 0x2c
    4258:	ce 01       	movw	r24, r28
    425a:	8c 96       	adiw	r24, 0x2c	; 44
    425c:	40 e0       	ldi	r20, 0x00	; 0
    425e:	50 e0       	ldi	r21, 0x00	; 0
    4260:	bc 01       	movw	r22, r24
    4262:	8e e8       	ldi	r24, 0x8E	; 142
    4264:	97 e4       	ldi	r25, 0x47	; 71
    4266:	0e 94 f3 52 	call	0xa5e6	; 0xa5e6 <_Z9makeMorsePcPbS0_>
    426a:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    426e:	0e 94 4f 27 	call	0x4e9e	; 0x4e9e <_Z13throttleValueh>
    4272:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    4276:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    427a:	81 e0       	ldi	r24, 0x01	; 1
    427c:	90 e0       	ldi	r25, 0x00	; 0
    427e:	a0 e0       	ldi	r26, 0x00	; 0
    4280:	b0 e0       	ldi	r27, 0x00	; 0
    4282:	80 93 bc 47 	sts	0x47BC, r24	; 0x8047bc <g_event_start_epoch>
    4286:	90 93 bd 47 	sts	0x47BD, r25	; 0x8047bd <g_event_start_epoch+0x1>
    428a:	a0 93 be 47 	sts	0x47BE, r26	; 0x8047be <g_event_start_epoch+0x2>
    428e:	b0 93 bf 47 	sts	0x47BF, r27	; 0x8047bf <g_event_start_epoch+0x3>
    4292:	8f ef       	ldi	r24, 0xFF	; 255
    4294:	9f ef       	ldi	r25, 0xFF	; 255
    4296:	dc 01       	movw	r26, r24
    4298:	80 93 c0 47 	sts	0x47C0, r24	; 0x8047c0 <g_event_finish_epoch>
    429c:	90 93 c1 47 	sts	0x47C1, r25	; 0x8047c1 <g_event_finish_epoch+0x1>
    42a0:	a0 93 c2 47 	sts	0x47C2, r26	; 0x8047c2 <g_event_finish_epoch+0x2>
    42a4:	b0 93 c3 47 	sts	0x47C3, r27	; 0x8047c3 <g_event_finish_epoch+0x3>
    42a8:	8f e0       	ldi	r24, 0x0F	; 15
    42aa:	97 e2       	ldi	r25, 0x27	; 39
    42ac:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_on_air_seconds>
    42b0:	90 93 0e 40 	sts	0x400E, r25	; 0x80400e <g_on_air_seconds+0x1>
    42b4:	10 92 0f 40 	sts	0x400F, r1	; 0x80400f <g_off_air_seconds>
    42b8:	10 92 10 40 	sts	0x4010, r1	; 0x804010 <g_off_air_seconds+0x1>
    42bc:	8f e0       	ldi	r24, 0x0F	; 15
    42be:	97 e2       	ldi	r25, 0x27	; 39
    42c0:	a0 e0       	ldi	r26, 0x00	; 0
    42c2:	b0 e0       	ldi	r27, 0x00	; 0
    42c4:	80 93 84 47 	sts	0x4784, r24	; 0x804784 <_ZL12g_on_the_air>
    42c8:	90 93 85 47 	sts	0x4785, r25	; 0x804785 <_ZL12g_on_the_air+0x1>
    42cc:	a0 93 86 47 	sts	0x4786, r26	; 0x804786 <_ZL12g_on_the_air+0x2>
    42d0:	b0 93 87 47 	sts	0x4787, r27	; 0x804787 <_ZL12g_on_the_air+0x3>
    42d4:	8f ef       	ldi	r24, 0xFF	; 255
    42d6:	9f ef       	ldi	r25, 0xFF	; 255
    42d8:	80 93 88 47 	sts	0x4788, r24	; 0x804788 <_ZL26g_sendID_seconds_countdown>
    42dc:	90 93 89 47 	sts	0x4789, r25	; 0x804789 <_ZL26g_sendID_seconds_countdown+0x1>
    42e0:	81 e0       	ldi	r24, 0x01	; 1
    42e2:	80 93 c5 47 	sts	0x47C5, r24	; 0x8047c5 <g_event_commenced>
    42e6:	81 e0       	ldi	r24, 0x01	; 1
    42e8:	80 93 c4 47 	sts	0x47C4, r24	; 0x8047c4 <g_event_enabled>
    42ec:	8d ef       	ldi	r24, 0xFD	; 253
    42ee:	80 93 7c 47 	sts	0x477C, r24	; 0x80477c <_ZL18g_last_status_code>
    42f2:	40 c0       	rjmp	.+128    	; 0x4374 <__DATA_REGION_LENGTH__+0x374>
    42f4:	87 ef       	ldi	r24, 0xF7	; 247
    42f6:	80 93 7b 47 	sts	0x477B, r24	; 0x80477b <_ZL17g_last_error_code>
    42fa:	3c c0       	rjmp	.+120    	; 0x4374 <__DATA_REGION_LENGTH__+0x374>
    42fc:	8b 89       	ldd	r24, Y+19	; 0x13
    42fe:	82 33       	cpi	r24, 0x32	; 50
    4300:	c9 f5       	brne	.+114    	; 0x4374 <__DATA_REGION_LENGTH__+0x374>
    4302:	80 91 f2 47 	lds	r24, 0x47F2	; 0x8047f2 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    4306:	8e 30       	cpi	r24, 0x0E	; 14
    4308:	20 f4       	brcc	.+8      	; 0x4312 <__DATA_REGION_LENGTH__+0x312>
    430a:	8d ec       	ldi	r24, 0xCD	; 205
    430c:	80 93 7b 47 	sts	0x477B, r24	; 0x80477b <_ZL17g_last_error_code>
    4310:	31 c0       	rjmp	.+98     	; 0x4374 <__DATA_REGION_LENGTH__+0x374>
    4312:	1d a6       	std	Y+45, r1	; 0x2d
    4314:	ce 01       	movw	r24, r28
    4316:	8d 96       	adiw	r24, 0x2d	; 45
    4318:	0e 94 9f 27 	call	0x4f3e	; 0x4f3e <_Z11launchEventP2SC>
    431c:	80 93 f3 47 	sts	0x47F3, r24	; 0x8047f3 <_ZZ17handleLinkBusMsgsvE2ec>
    4320:	80 91 c8 47 	lds	r24, 0x47C8	; 0x8047c8 <_ZL13g_go_to_sleep>
    4324:	88 23       	and	r24, r24
    4326:	31 f0       	breq	.+12     	; 0x4334 <__DATA_REGION_LENGTH__+0x334>
    4328:	80 91 8d 47 	lds	r24, 0x478D	; 0x80478d <_ZL11g_sleepType>
    432c:	88 23       	and	r24, r24
    432e:	11 f0       	breq	.+4      	; 0x4334 <__DATA_REGION_LENGTH__+0x334>
    4330:	81 e0       	ldi	r24, 0x01	; 1
    4332:	01 c0       	rjmp	.+2      	; 0x4336 <__DATA_REGION_LENGTH__+0x336>
    4334:	80 e0       	ldi	r24, 0x00	; 0
    4336:	88 23       	and	r24, r24
    4338:	29 f0       	breq	.+10     	; 0x4344 <__DATA_REGION_LENGTH__+0x344>
    433a:	83 e0       	ldi	r24, 0x03	; 3
    433c:	80 93 8d 47 	sts	0x478D, r24	; 0x80478d <_ZL11g_sleepType>
    4340:	10 92 c8 47 	sts	0x47C8, r1	; 0x8047c8 <_ZL13g_go_to_sleep>
    4344:	8c e3       	ldi	r24, 0x3C	; 60
    4346:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    434a:	80 91 f3 47 	lds	r24, 0x47F3	; 0x8047f3 <_ZZ17handleLinkBusMsgsvE2ec>
    434e:	88 23       	and	r24, r24
    4350:	89 f4       	brne	.+34     	; 0x4374 <__DATA_REGION_LENGTH__+0x374>
    4352:	8a ed       	ldi	r24, 0xDA	; 218
    4354:	97 e4       	ldi	r25, 0x47	; 71
    4356:	0e 94 0c 45 	call	0x8a18	; 0x8a18 <_ZN13EepromManager13saveAllEEPROMEv>
    435a:	0c c0       	rjmp	.+24     	; 0x4374 <__DATA_REGION_LENGTH__+0x374>
    435c:	8b 89       	ldd	r24, Y+19	; 0x13
    435e:	80 33       	cpi	r24, 0x30	; 48
    4360:	09 f0       	breq	.+2      	; 0x4364 <__DATA_REGION_LENGTH__+0x364>
    4362:	70 c4       	rjmp	.+2272   	; 0x4c44 <__DATA_REGION_LENGTH__+0xc44>
    4364:	0e 94 5b 2a 	call	0x54b6	; 0x54b6 <_Z12suspendEventv>
    4368:	10 92 f2 47 	sts	0x47F2, r1	; 0x8047f2 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    436c:	8c ee       	ldi	r24, 0xEC	; 236
    436e:	80 93 7c 47 	sts	0x477C, r24	; 0x80477c <_ZL18g_last_status_code>
    4372:	68 c4       	rjmp	.+2256   	; 0x4c44 <__DATA_REGION_LENGTH__+0xc44>
    4374:	00 00       	nop
    4376:	66 c4       	rjmp	.+2252   	; 0x4c44 <__DATA_REGION_LENGTH__+0xc44>
    4378:	1a 82       	std	Y+2, r1	; 0x02
    437a:	1b 82       	std	Y+3, r1	; 0x03
    437c:	1c 82       	std	Y+4, r1	; 0x04
    437e:	1d 82       	std	Y+5, r1	; 0x05
    4380:	8c 85       	ldd	r24, Y+12	; 0x0c
    4382:	9d 85       	ldd	r25, Y+13	; 0x0d
    4384:	fc 01       	movw	r30, r24
    4386:	83 81       	ldd	r24, Z+3	; 0x03
    4388:	83 35       	cpi	r24, 0x53	; 83
    438a:	b1 f5       	brne	.+108    	; 0x43f8 <__DATA_REGION_LENGTH__+0x3f8>
    438c:	8c 85       	ldd	r24, Y+12	; 0x0c
    438e:	9d 85       	ldd	r25, Y+13	; 0x0d
    4390:	fc 01       	movw	r30, r24
    4392:	80 8d       	ldd	r24, Z+24	; 0x18
    4394:	88 23       	and	r24, r24
    4396:	59 f0       	breq	.+22     	; 0x43ae <__DATA_REGION_LENGTH__+0x3ae>
    4398:	8c 85       	ldd	r24, Y+12	; 0x0c
    439a:	9d 85       	ldd	r25, Y+13	; 0x0d
    439c:	48 96       	adiw	r24, 0x18	; 24
    439e:	0e 94 a9 73 	call	0xe752	; 0xe752 <atol>
    43a2:	dc 01       	movw	r26, r24
    43a4:	cb 01       	movw	r24, r22
    43a6:	8a 83       	std	Y+2, r24	; 0x02
    43a8:	9b 83       	std	Y+3, r25	; 0x03
    43aa:	ac 83       	std	Y+4, r26	; 0x04
    43ac:	bd 83       	std	Y+5, r27	; 0x05
    43ae:	8a 81       	ldd	r24, Y+2	; 0x02
    43b0:	9b 81       	ldd	r25, Y+3	; 0x03
    43b2:	ac 81       	ldd	r26, Y+4	; 0x04
    43b4:	bd 81       	ldd	r27, Y+5	; 0x05
    43b6:	89 2b       	or	r24, r25
    43b8:	8a 2b       	or	r24, r26
    43ba:	8b 2b       	or	r24, r27
    43bc:	09 f4       	brne	.+2      	; 0x43c0 <__DATA_REGION_LENGTH__+0x3c0>
    43be:	44 c4       	rjmp	.+2184   	; 0x4c48 <__DATA_REGION_LENGTH__+0xc48>
    43c0:	8a 81       	ldd	r24, Y+2	; 0x02
    43c2:	9b 81       	ldd	r25, Y+3	; 0x03
    43c4:	ac 81       	ldd	r26, Y+4	; 0x04
    43c6:	bd 81       	ldd	r27, Y+5	; 0x05
    43c8:	80 93 bc 47 	sts	0x47BC, r24	; 0x8047bc <g_event_start_epoch>
    43cc:	90 93 bd 47 	sts	0x47BD, r25	; 0x8047bd <g_event_start_epoch+0x1>
    43d0:	a0 93 be 47 	sts	0x47BE, r26	; 0x8047be <g_event_start_epoch+0x2>
    43d4:	b0 93 bf 47 	sts	0x47BF, r27	; 0x8047bf <g_event_start_epoch+0x3>
    43d8:	80 e0       	ldi	r24, 0x00	; 0
    43da:	90 e0       	ldi	r25, 0x00	; 0
    43dc:	0e 94 b2 3d 	call	0x7b64	; 0x7b64 <ds3231_get_epoch>
    43e0:	dc 01       	movw	r26, r24
    43e2:	cb 01       	movw	r24, r22
    43e4:	bc 01       	movw	r22, r24
    43e6:	cd 01       	movw	r24, r26
    43e8:	0e 94 54 02 	call	0x4a8	; 0x4a8 <set_system_time>
    43ec:	80 91 f2 47 	lds	r24, 0x47F2	; 0x8047f2 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    43f0:	8f 5f       	subi	r24, 0xFF	; 255
    43f2:	80 93 f2 47 	sts	0x47F2, r24	; 0x8047f2 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    43f6:	28 c4       	rjmp	.+2128   	; 0x4c48 <__DATA_REGION_LENGTH__+0xc48>
    43f8:	8c 85       	ldd	r24, Y+12	; 0x0c
    43fa:	9d 85       	ldd	r25, Y+13	; 0x0d
    43fc:	fc 01       	movw	r30, r24
    43fe:	83 81       	ldd	r24, Z+3	; 0x03
    4400:	86 34       	cpi	r24, 0x46	; 70
    4402:	09 f0       	breq	.+2      	; 0x4406 <__DATA_REGION_LENGTH__+0x406>
    4404:	21 c4       	rjmp	.+2114   	; 0x4c48 <__DATA_REGION_LENGTH__+0xc48>
    4406:	8c 85       	ldd	r24, Y+12	; 0x0c
    4408:	9d 85       	ldd	r25, Y+13	; 0x0d
    440a:	fc 01       	movw	r30, r24
    440c:	80 8d       	ldd	r24, Z+24	; 0x18
    440e:	88 23       	and	r24, r24
    4410:	59 f0       	breq	.+22     	; 0x4428 <__DATA_REGION_LENGTH__+0x428>
    4412:	8c 85       	ldd	r24, Y+12	; 0x0c
    4414:	9d 85       	ldd	r25, Y+13	; 0x0d
    4416:	48 96       	adiw	r24, 0x18	; 24
    4418:	0e 94 a9 73 	call	0xe752	; 0xe752 <atol>
    441c:	dc 01       	movw	r26, r24
    441e:	cb 01       	movw	r24, r22
    4420:	8a 83       	std	Y+2, r24	; 0x02
    4422:	9b 83       	std	Y+3, r25	; 0x03
    4424:	ac 83       	std	Y+4, r26	; 0x04
    4426:	bd 83       	std	Y+5, r27	; 0x05
    4428:	8a 81       	ldd	r24, Y+2	; 0x02
    442a:	9b 81       	ldd	r25, Y+3	; 0x03
    442c:	ac 81       	ldd	r26, Y+4	; 0x04
    442e:	bd 81       	ldd	r27, Y+5	; 0x05
    4430:	89 2b       	or	r24, r25
    4432:	8a 2b       	or	r24, r26
    4434:	8b 2b       	or	r24, r27
    4436:	09 f4       	brne	.+2      	; 0x443a <__DATA_REGION_LENGTH__+0x43a>
    4438:	07 c4       	rjmp	.+2062   	; 0x4c48 <__DATA_REGION_LENGTH__+0xc48>
    443a:	8a 81       	ldd	r24, Y+2	; 0x02
    443c:	9b 81       	ldd	r25, Y+3	; 0x03
    443e:	ac 81       	ldd	r26, Y+4	; 0x04
    4440:	bd 81       	ldd	r27, Y+5	; 0x05
    4442:	80 93 c0 47 	sts	0x47C0, r24	; 0x8047c0 <g_event_finish_epoch>
    4446:	90 93 c1 47 	sts	0x47C1, r25	; 0x8047c1 <g_event_finish_epoch+0x1>
    444a:	a0 93 c2 47 	sts	0x47C2, r26	; 0x8047c2 <g_event_finish_epoch+0x2>
    444e:	b0 93 c3 47 	sts	0x47C3, r27	; 0x8047c3 <g_event_finish_epoch+0x3>
    4452:	80 91 f2 47 	lds	r24, 0x47F2	; 0x8047f2 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    4456:	8f 5f       	subi	r24, 0xFF	; 255
    4458:	80 93 f2 47 	sts	0x47F2, r24	; 0x8047f2 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    445c:	f5 c3       	rjmp	.+2026   	; 0x4c48 <__DATA_REGION_LENGTH__+0xc48>
    445e:	81 e0       	ldi	r24, 0x01	; 1
    4460:	80 93 0a 40 	sts	0x400A, r24	; 0x80400a <_ZL13g_wifi_active>
    4464:	8c 85       	ldd	r24, Y+12	; 0x0c
    4466:	9d 85       	ldd	r25, Y+13	; 0x0d
    4468:	fc 01       	movw	r30, r24
    446a:	80 81       	ld	r24, Z
    446c:	81 30       	cpi	r24, 0x01	; 1
    446e:	09 f0       	breq	.+2      	; 0x4472 <__DATA_REGION_LENGTH__+0x472>
    4470:	4b c0       	rjmp	.+150    	; 0x4508 <__DATA_REGION_LENGTH__+0x508>
    4472:	8c 85       	ldd	r24, Y+12	; 0x0c
    4474:	9d 85       	ldd	r25, Y+13	; 0x0d
    4476:	fc 01       	movw	r30, r24
    4478:	83 81       	ldd	r24, Z+3	; 0x03
    447a:	88 23       	and	r24, r24
    447c:	d1 f0       	breq	.+52     	; 0x44b2 <__DATA_REGION_LENGTH__+0x4b2>
    447e:	8c 85       	ldd	r24, Y+12	; 0x0c
    4480:	9d 85       	ldd	r25, Y+13	; 0x0d
    4482:	03 96       	adiw	r24, 0x03	; 3
    4484:	44 e1       	ldi	r20, 0x14	; 20
    4486:	50 e0       	ldi	r21, 0x00	; 0
    4488:	bc 01       	movw	r22, r24
    448a:	89 e4       	ldi	r24, 0x49	; 73
    448c:	97 e4       	ldi	r25, 0x47	; 71
    448e:	0e 94 05 74 	call	0xe80a	; 0xe80a <strncpy>
    4492:	60 e0       	ldi	r22, 0x00	; 0
    4494:	89 e4       	ldi	r24, 0x49	; 73
    4496:	97 e4       	ldi	r25, 0x47	; 71
    4498:	0e 94 4e 40 	call	0x809c	; 0x809c <ds3231_set_date_time>
    449c:	80 e0       	ldi	r24, 0x00	; 0
    449e:	90 e0       	ldi	r25, 0x00	; 0
    44a0:	0e 94 b2 3d 	call	0x7b64	; 0x7b64 <ds3231_get_epoch>
    44a4:	dc 01       	movw	r26, r24
    44a6:	cb 01       	movw	r24, r22
    44a8:	bc 01       	movw	r22, r24
    44aa:	cd 01       	movw	r24, r26
    44ac:	0e 94 54 02 	call	0x4a8	; 0x4a8 <set_system_time>
    44b0:	cd c3       	rjmp	.+1946   	; 0x4c4c <__DATA_REGION_LENGTH__+0xc4c>
    44b2:	80 e0       	ldi	r24, 0x00	; 0
    44b4:	90 e0       	ldi	r25, 0x00	; 0
    44b6:	0e 94 ae 05 	call	0xb5c	; 0xb5c <time>
    44ba:	dc 01       	movw	r26, r24
    44bc:	cb 01       	movw	r24, r22
    44be:	2b 2f       	mov	r18, r27
    44c0:	2f 93       	push	r18
    44c2:	2a 2f       	mov	r18, r26
    44c4:	2f 93       	push	r18
    44c6:	29 2f       	mov	r18, r25
    44c8:	2f 93       	push	r18
    44ca:	8f 93       	push	r24
    44cc:	86 ef       	ldi	r24, 0xF6	; 246
    44ce:	92 e4       	ldi	r25, 0x42	; 66
    44d0:	89 2f       	mov	r24, r25
    44d2:	8f 93       	push	r24
    44d4:	86 ef       	ldi	r24, 0xF6	; 246
    44d6:	92 e4       	ldi	r25, 0x42	; 66
    44d8:	8f 93       	push	r24
    44da:	89 e4       	ldi	r24, 0x49	; 73
    44dc:	97 e4       	ldi	r25, 0x47	; 71
    44de:	89 2f       	mov	r24, r25
    44e0:	8f 93       	push	r24
    44e2:	89 e4       	ldi	r24, 0x49	; 73
    44e4:	97 e4       	ldi	r25, 0x47	; 71
    44e6:	8f 93       	push	r24
    44e8:	0e 94 31 74 	call	0xe862	; 0xe862 <sprintf>
    44ec:	2d b7       	in	r18, 0x3d	; 61
    44ee:	3e b7       	in	r19, 0x3e	; 62
    44f0:	28 5f       	subi	r18, 0xF8	; 248
    44f2:	3f 4f       	sbci	r19, 0xFF	; 255
    44f4:	cd bf       	out	0x3d, r28	; 61
    44f6:	de bf       	out	0x3e, r29	; 62
    44f8:	49 e4       	ldi	r20, 0x49	; 73
    44fa:	57 e4       	ldi	r21, 0x47	; 71
    44fc:	6a ef       	ldi	r22, 0xFA	; 250
    44fe:	72 e4       	ldi	r23, 0x42	; 66
    4500:	83 e0       	ldi	r24, 0x03	; 3
    4502:	0e 94 42 52 	call	0xa484	; 0xa484 <_Z11lb_send_msg13LBMessageTypePKcPc>
    4506:	a2 c3       	rjmp	.+1860   	; 0x4c4c <__DATA_REGION_LENGTH__+0xc4c>
    4508:	8c 85       	ldd	r24, Y+12	; 0x0c
    450a:	9d 85       	ldd	r25, Y+13	; 0x0d
    450c:	fc 01       	movw	r30, r24
    450e:	80 81       	ld	r24, Z
    4510:	82 30       	cpi	r24, 0x02	; 2
    4512:	09 f0       	breq	.+2      	; 0x4516 <__DATA_REGION_LENGTH__+0x516>
    4514:	9b c3       	rjmp	.+1846   	; 0x4c4c <__DATA_REGION_LENGTH__+0xc4c>
    4516:	8c 85       	ldd	r24, Y+12	; 0x0c
    4518:	9d 85       	ldd	r25, Y+13	; 0x0d
    451a:	fc 01       	movw	r30, r24
    451c:	83 81       	ldd	r24, Z+3	; 0x03
    451e:	88 35       	cpi	r24, 0x58	; 88
    4520:	c9 f5       	brne	.+114    	; 0x4594 <__DATA_REGION_LENGTH__+0x594>
    4522:	1c 8a       	std	Y+20, r1	; 0x14
    4524:	8c 85       	ldd	r24, Y+12	; 0x0c
    4526:	9d 85       	ldd	r25, Y+13	; 0x0d
    4528:	fc 01       	movw	r30, r24
    452a:	80 8d       	ldd	r24, Z+24	; 0x18
    452c:	88 23       	and	r24, r24
    452e:	51 f0       	breq	.+20     	; 0x4544 <__DATA_REGION_LENGTH__+0x544>
    4530:	8c 85       	ldd	r24, Y+12	; 0x0c
    4532:	9d 85       	ldd	r25, Y+13	; 0x0d
    4534:	48 96       	adiw	r24, 0x18	; 24
    4536:	0e 94 8b 73 	call	0xe716	; 0xe716 <atoi>
    453a:	8c 8b       	std	Y+20, r24	; 0x14
    453c:	8c 89       	ldd	r24, Y+20	; 0x14
    453e:	0e 94 a6 41 	call	0x834c	; 0x834c <ds3231_set_aging>
    4542:	84 c3       	rjmp	.+1800   	; 0x4c4c <__DATA_REGION_LENGTH__+0xc4c>
    4544:	0e 94 d5 41 	call	0x83aa	; 0x83aa <ds3231_get_aging>
    4548:	8c 8b       	std	Y+20, r24	; 0x14
    454a:	8c 89       	ldd	r24, Y+20	; 0x14
    454c:	08 2e       	mov	r0, r24
    454e:	00 0c       	add	r0, r0
    4550:	99 0b       	sbc	r25, r25
    4552:	29 2f       	mov	r18, r25
    4554:	2f 93       	push	r18
    4556:	8f 93       	push	r24
    4558:	87 e0       	ldi	r24, 0x07	; 7
    455a:	93 e4       	ldi	r25, 0x43	; 67
    455c:	89 2f       	mov	r24, r25
    455e:	8f 93       	push	r24
    4560:	87 e0       	ldi	r24, 0x07	; 7
    4562:	93 e4       	ldi	r25, 0x43	; 67
    4564:	8f 93       	push	r24
    4566:	89 e4       	ldi	r24, 0x49	; 73
    4568:	97 e4       	ldi	r25, 0x47	; 71
    456a:	89 2f       	mov	r24, r25
    456c:	8f 93       	push	r24
    456e:	89 e4       	ldi	r24, 0x49	; 73
    4570:	97 e4       	ldi	r25, 0x47	; 71
    4572:	8f 93       	push	r24
    4574:	0e 94 31 74 	call	0xe862	; 0xe862 <sprintf>
    4578:	0f 90       	pop	r0
    457a:	0f 90       	pop	r0
    457c:	0f 90       	pop	r0
    457e:	0f 90       	pop	r0
    4580:	0f 90       	pop	r0
    4582:	0f 90       	pop	r0
    4584:	49 e4       	ldi	r20, 0x49	; 73
    4586:	57 e4       	ldi	r21, 0x47	; 71
    4588:	6a ef       	ldi	r22, 0xFA	; 250
    458a:	72 e4       	ldi	r23, 0x42	; 66
    458c:	83 e0       	ldi	r24, 0x03	; 3
    458e:	0e 94 42 52 	call	0xa484	; 0xa484 <_Z11lb_send_msg13LBMessageTypePKcPc>
    4592:	5c c3       	rjmp	.+1720   	; 0x4c4c <__DATA_REGION_LENGTH__+0xc4c>
    4594:	80 e0       	ldi	r24, 0x00	; 0
    4596:	90 e0       	ldi	r25, 0x00	; 0
    4598:	0e 94 b2 3d 	call	0x7b64	; 0x7b64 <ds3231_get_epoch>
    459c:	dc 01       	movw	r26, r24
    459e:	cb 01       	movw	r24, r22
    45a0:	8d 8b       	std	Y+21, r24	; 0x15
    45a2:	9e 8b       	std	Y+22, r25	; 0x16
    45a4:	af 8b       	std	Y+23, r26	; 0x17
    45a6:	b8 8f       	std	Y+24, r27	; 0x18
    45a8:	8d 89       	ldd	r24, Y+21	; 0x15
    45aa:	9e 89       	ldd	r25, Y+22	; 0x16
    45ac:	af 89       	ldd	r26, Y+23	; 0x17
    45ae:	b8 8d       	ldd	r27, Y+24	; 0x18
    45b0:	bc 01       	movw	r22, r24
    45b2:	cd 01       	movw	r24, r26
    45b4:	0e 94 54 02 	call	0x4a8	; 0x4a8 <set_system_time>
    45b8:	80 91 f4 47 	lds	r24, 0x47F4	; 0x8047f4 <_ZZ17handleLinkBusMsgsvE8lastTime>
    45bc:	90 91 f5 47 	lds	r25, 0x47F5	; 0x8047f5 <_ZZ17handleLinkBusMsgsvE8lastTime+0x1>
    45c0:	a0 91 f6 47 	lds	r26, 0x47F6	; 0x8047f6 <_ZZ17handleLinkBusMsgsvE8lastTime+0x2>
    45c4:	b0 91 f7 47 	lds	r27, 0x47F7	; 0x8047f7 <_ZZ17handleLinkBusMsgsvE8lastTime+0x3>
    45c8:	2d 89       	ldd	r18, Y+21	; 0x15
    45ca:	3e 89       	ldd	r19, Y+22	; 0x16
    45cc:	4f 89       	ldd	r20, Y+23	; 0x17
    45ce:	58 8d       	ldd	r21, Y+24	; 0x18
    45d0:	28 17       	cp	r18, r24
    45d2:	39 07       	cpc	r19, r25
    45d4:	4a 07       	cpc	r20, r26
    45d6:	5b 07       	cpc	r21, r27
    45d8:	09 f4       	brne	.+2      	; 0x45dc <__DATA_REGION_LENGTH__+0x5dc>
    45da:	38 c3       	rjmp	.+1648   	; 0x4c4c <__DATA_REGION_LENGTH__+0xc4c>
    45dc:	88 8d       	ldd	r24, Y+24	; 0x18
    45de:	8f 93       	push	r24
    45e0:	8f 89       	ldd	r24, Y+23	; 0x17
    45e2:	8f 93       	push	r24
    45e4:	8e 89       	ldd	r24, Y+22	; 0x16
    45e6:	8f 93       	push	r24
    45e8:	8d 89       	ldd	r24, Y+21	; 0x15
    45ea:	8f 93       	push	r24
    45ec:	86 ef       	ldi	r24, 0xF6	; 246
    45ee:	92 e4       	ldi	r25, 0x42	; 66
    45f0:	89 2f       	mov	r24, r25
    45f2:	8f 93       	push	r24
    45f4:	86 ef       	ldi	r24, 0xF6	; 246
    45f6:	92 e4       	ldi	r25, 0x42	; 66
    45f8:	8f 93       	push	r24
    45fa:	89 e4       	ldi	r24, 0x49	; 73
    45fc:	97 e4       	ldi	r25, 0x47	; 71
    45fe:	89 2f       	mov	r24, r25
    4600:	8f 93       	push	r24
    4602:	89 e4       	ldi	r24, 0x49	; 73
    4604:	97 e4       	ldi	r25, 0x47	; 71
    4606:	8f 93       	push	r24
    4608:	0e 94 31 74 	call	0xe862	; 0xe862 <sprintf>
    460c:	2d b7       	in	r18, 0x3d	; 61
    460e:	3e b7       	in	r19, 0x3e	; 62
    4610:	28 5f       	subi	r18, 0xF8	; 248
    4612:	3f 4f       	sbci	r19, 0xFF	; 255
    4614:	cd bf       	out	0x3d, r28	; 61
    4616:	de bf       	out	0x3e, r29	; 62
    4618:	49 e4       	ldi	r20, 0x49	; 73
    461a:	57 e4       	ldi	r21, 0x47	; 71
    461c:	6a ef       	ldi	r22, 0xFA	; 250
    461e:	72 e4       	ldi	r23, 0x42	; 66
    4620:	83 e0       	ldi	r24, 0x03	; 3
    4622:	0e 94 42 52 	call	0xa484	; 0xa484 <_Z11lb_send_msg13LBMessageTypePKcPc>
    4626:	8d 89       	ldd	r24, Y+21	; 0x15
    4628:	9e 89       	ldd	r25, Y+22	; 0x16
    462a:	af 89       	ldd	r26, Y+23	; 0x17
    462c:	b8 8d       	ldd	r27, Y+24	; 0x18
    462e:	80 93 f4 47 	sts	0x47F4, r24	; 0x8047f4 <_ZZ17handleLinkBusMsgsvE8lastTime>
    4632:	90 93 f5 47 	sts	0x47F5, r25	; 0x8047f5 <_ZZ17handleLinkBusMsgsvE8lastTime+0x1>
    4636:	a0 93 f6 47 	sts	0x47F6, r26	; 0x8047f6 <_ZZ17handleLinkBusMsgsvE8lastTime+0x2>
    463a:	b0 93 f7 47 	sts	0x47F7, r27	; 0x8047f7 <_ZZ17handleLinkBusMsgsvE8lastTime+0x3>
    463e:	06 c3       	rjmp	.+1548   	; 0x4c4c <__DATA_REGION_LENGTH__+0xc4c>
    4640:	80 91 f2 47 	lds	r24, 0x47F2	; 0x8047f2 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    4644:	8f 5f       	subi	r24, 0xFF	; 255
    4646:	80 93 f2 47 	sts	0x47F2, r24	; 0x8047f2 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    464a:	8c 85       	ldd	r24, Y+12	; 0x0c
    464c:	9d 85       	ldd	r25, Y+13	; 0x0d
    464e:	fc 01       	movw	r30, r24
    4650:	83 81       	ldd	r24, Z+3	; 0x03
    4652:	88 23       	and	r24, r24
    4654:	81 f1       	breq	.+96     	; 0x46b6 <__DATA_REGION_LENGTH__+0x6b6>
    4656:	8c 85       	ldd	r24, Y+12	; 0x0c
    4658:	9d 85       	ldd	r25, Y+13	; 0x0d
    465a:	03 96       	adiw	r24, 0x03	; 3
    465c:	44 e1       	ldi	r20, 0x14	; 20
    465e:	50 e0       	ldi	r21, 0x00	; 0
    4660:	bc 01       	movw	r22, r24
    4662:	83 ea       	ldi	r24, 0xA3	; 163
    4664:	97 e4       	ldi	r25, 0x47	; 71
    4666:	0e 94 05 74 	call	0xe80a	; 0xe80a <strncpy>
    466a:	80 91 a3 47 	lds	r24, 0x47A3	; 0x8047a3 <g_messages_text+0x15>
    466e:	88 23       	and	r24, r24
    4670:	09 f4       	brne	.+2      	; 0x4674 <__DATA_REGION_LENGTH__+0x674>
    4672:	ee c2       	rjmp	.+1500   	; 0x4c50 <__DATA_REGION_LENGTH__+0xc50>
    4674:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    4678:	88 2f       	mov	r24, r24
    467a:	90 e0       	ldi	r25, 0x00	; 0
    467c:	bc 01       	movw	r22, r24
    467e:	83 ea       	ldi	r24, 0xA3	; 163
    4680:	97 e4       	ldi	r25, 0x47	; 71
    4682:	0e 94 4b 54 	call	0xa896	; 0xa896 <_Z26timeRequiredToSendStrAtWPMPcj>
    4686:	8c 50       	subi	r24, 0x0C	; 12
    4688:	9e 4f       	sbci	r25, 0xFE	; 254
    468a:	96 95       	lsr	r25
    468c:	87 95       	ror	r24
    468e:	96 95       	lsr	r25
    4690:	87 95       	ror	r24
    4692:	96 95       	lsr	r25
    4694:	87 95       	ror	r24
    4696:	9c 01       	movw	r18, r24
    4698:	a5 ec       	ldi	r26, 0xC5	; 197
    469a:	b0 e2       	ldi	r27, 0x20	; 32
    469c:	0e 94 4c 72 	call	0xe498	; 0xe498 <__umulhisi3>
    46a0:	92 95       	swap	r25
    46a2:	82 95       	swap	r24
    46a4:	8f 70       	andi	r24, 0x0F	; 15
    46a6:	89 27       	eor	r24, r25
    46a8:	9f 70       	andi	r25, 0x0F	; 15
    46aa:	89 27       	eor	r24, r25
    46ac:	80 93 b8 47 	sts	0x47B8, r24	; 0x8047b8 <g_time_needed_for_ID>
    46b0:	90 93 b9 47 	sts	0x47B9, r25	; 0x8047b9 <g_time_needed_for_ID+0x1>
    46b4:	cd c2       	rjmp	.+1434   	; 0x4c50 <__DATA_REGION_LENGTH__+0xc50>
    46b6:	80 91 a3 47 	lds	r24, 0x47A3	; 0x8047a3 <g_messages_text+0x15>
    46ba:	88 23       	and	r24, r24
    46bc:	09 f4       	brne	.+2      	; 0x46c0 <__DATA_REGION_LENGTH__+0x6c0>
    46be:	c8 c2       	rjmp	.+1424   	; 0x4c50 <__DATA_REGION_LENGTH__+0xc50>
    46c0:	83 ea       	ldi	r24, 0xA3	; 163
    46c2:	97 e4       	ldi	r25, 0x47	; 71
    46c4:	89 2f       	mov	r24, r25
    46c6:	8f 93       	push	r24
    46c8:	83 ea       	ldi	r24, 0xA3	; 163
    46ca:	97 e4       	ldi	r25, 0x47	; 71
    46cc:	8f 93       	push	r24
    46ce:	8c e0       	ldi	r24, 0x0C	; 12
    46d0:	93 e4       	ldi	r25, 0x43	; 67
    46d2:	89 2f       	mov	r24, r25
    46d4:	8f 93       	push	r24
    46d6:	8c e0       	ldi	r24, 0x0C	; 12
    46d8:	93 e4       	ldi	r25, 0x43	; 67
    46da:	8f 93       	push	r24
    46dc:	89 e4       	ldi	r24, 0x49	; 73
    46de:	97 e4       	ldi	r25, 0x47	; 71
    46e0:	89 2f       	mov	r24, r25
    46e2:	8f 93       	push	r24
    46e4:	89 e4       	ldi	r24, 0x49	; 73
    46e6:	97 e4       	ldi	r25, 0x47	; 71
    46e8:	8f 93       	push	r24
    46ea:	0e 94 31 74 	call	0xe862	; 0xe862 <sprintf>
    46ee:	0f 90       	pop	r0
    46f0:	0f 90       	pop	r0
    46f2:	0f 90       	pop	r0
    46f4:	0f 90       	pop	r0
    46f6:	0f 90       	pop	r0
    46f8:	0f 90       	pop	r0
    46fa:	89 e4       	ldi	r24, 0x49	; 73
    46fc:	97 e4       	ldi	r25, 0x47	; 71
    46fe:	0e 94 e5 51 	call	0xa3ca	; 0xa3ca <_Z12lb_send_textPc>
    4702:	19 82       	std	Y+1, r1	; 0x01
    4704:	a5 c2       	rjmp	.+1354   	; 0x4c50 <__DATA_REGION_LENGTH__+0xc50>
    4706:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    470a:	89 8f       	std	Y+25, r24	; 0x19
    470c:	8c 85       	ldd	r24, Y+12	; 0x0c
    470e:	9d 85       	ldd	r25, Y+13	; 0x0d
    4710:	fc 01       	movw	r30, r24
    4712:	83 81       	ldd	r24, Z+3	; 0x03
    4714:	89 34       	cpi	r24, 0x49	; 73
    4716:	09 f0       	breq	.+2      	; 0x471a <__DATA_REGION_LENGTH__+0x71a>
    4718:	4f c0       	rjmp	.+158    	; 0x47b8 <__DATA_REGION_LENGTH__+0x7b8>
    471a:	8c 85       	ldd	r24, Y+12	; 0x0c
    471c:	9d 85       	ldd	r25, Y+13	; 0x0d
    471e:	fc 01       	movw	r30, r24
    4720:	80 8d       	ldd	r24, Z+24	; 0x18
    4722:	88 23       	and	r24, r24
    4724:	09 f4       	brne	.+2      	; 0x4728 <__DATA_REGION_LENGTH__+0x728>
    4726:	96 c2       	rjmp	.+1324   	; 0x4c54 <__DATA_REGION_LENGTH__+0xc54>
    4728:	8c 85       	ldd	r24, Y+12	; 0x0c
    472a:	9d 85       	ldd	r25, Y+13	; 0x0d
    472c:	48 96       	adiw	r24, 0x18	; 24
    472e:	0e 94 a9 73 	call	0xe752	; 0xe752 <atol>
    4732:	dc 01       	movw	r26, r24
    4734:	cb 01       	movw	r24, r22
    4736:	89 8f       	std	Y+25, r24	; 0x19
    4738:	89 8d       	ldd	r24, Y+25	; 0x19
    473a:	8a 8f       	std	Y+26, r24	; 0x1a
    473c:	85 e0       	ldi	r24, 0x05	; 5
    473e:	8b 8f       	std	Y+27, r24	; 0x1b
    4740:	84 e1       	ldi	r24, 0x14	; 20
    4742:	8c 8f       	std	Y+28, r24	; 0x1c
    4744:	9a 8d       	ldd	r25, Y+26	; 0x1a
    4746:	8c 8d       	ldd	r24, Y+28	; 0x1c
    4748:	89 17       	cp	r24, r25
    474a:	40 f0       	brcs	.+16     	; 0x475c <__DATA_REGION_LENGTH__+0x75c>
    474c:	9a 8d       	ldd	r25, Y+26	; 0x1a
    474e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4750:	98 17       	cp	r25, r24
    4752:	10 f4       	brcc	.+4      	; 0x4758 <__DATA_REGION_LENGTH__+0x758>
    4754:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4756:	03 c0       	rjmp	.+6      	; 0x475e <__DATA_REGION_LENGTH__+0x75e>
    4758:	8a 8d       	ldd	r24, Y+26	; 0x1a
    475a:	01 c0       	rjmp	.+2      	; 0x475e <__DATA_REGION_LENGTH__+0x75e>
    475c:	8c 8d       	ldd	r24, Y+28	; 0x1c
    475e:	80 93 0b 40 	sts	0x400B, r24	; 0x80400b <g_id_codespeed>
    4762:	80 91 f2 47 	lds	r24, 0x47F2	; 0x8047f2 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    4766:	8f 5f       	subi	r24, 0xFF	; 255
    4768:	80 93 f2 47 	sts	0x47F2, r24	; 0x8047f2 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    476c:	80 91 a3 47 	lds	r24, 0x47A3	; 0x8047a3 <g_messages_text+0x15>
    4770:	88 23       	and	r24, r24
    4772:	09 f4       	brne	.+2      	; 0x4776 <__DATA_REGION_LENGTH__+0x776>
    4774:	6f c2       	rjmp	.+1246   	; 0x4c54 <__DATA_REGION_LENGTH__+0xc54>
    4776:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    477a:	88 2f       	mov	r24, r24
    477c:	90 e0       	ldi	r25, 0x00	; 0
    477e:	bc 01       	movw	r22, r24
    4780:	83 ea       	ldi	r24, 0xA3	; 163
    4782:	97 e4       	ldi	r25, 0x47	; 71
    4784:	0e 94 4b 54 	call	0xa896	; 0xa896 <_Z26timeRequiredToSendStrAtWPMPcj>
    4788:	8c 50       	subi	r24, 0x0C	; 12
    478a:	9e 4f       	sbci	r25, 0xFE	; 254
    478c:	96 95       	lsr	r25
    478e:	87 95       	ror	r24
    4790:	96 95       	lsr	r25
    4792:	87 95       	ror	r24
    4794:	96 95       	lsr	r25
    4796:	87 95       	ror	r24
    4798:	9c 01       	movw	r18, r24
    479a:	a5 ec       	ldi	r26, 0xC5	; 197
    479c:	b0 e2       	ldi	r27, 0x20	; 32
    479e:	0e 94 4c 72 	call	0xe498	; 0xe498 <__umulhisi3>
    47a2:	92 95       	swap	r25
    47a4:	82 95       	swap	r24
    47a6:	8f 70       	andi	r24, 0x0F	; 15
    47a8:	89 27       	eor	r24, r25
    47aa:	9f 70       	andi	r25, 0x0F	; 15
    47ac:	89 27       	eor	r24, r25
    47ae:	80 93 b8 47 	sts	0x47B8, r24	; 0x8047b8 <g_time_needed_for_ID>
    47b2:	90 93 b9 47 	sts	0x47B9, r25	; 0x8047b9 <g_time_needed_for_ID+0x1>
    47b6:	4e c2       	rjmp	.+1180   	; 0x4c54 <__DATA_REGION_LENGTH__+0xc54>
    47b8:	8c 85       	ldd	r24, Y+12	; 0x0c
    47ba:	9d 85       	ldd	r25, Y+13	; 0x0d
    47bc:	fc 01       	movw	r30, r24
    47be:	83 81       	ldd	r24, Z+3	; 0x03
    47c0:	80 35       	cpi	r24, 0x50	; 80
    47c2:	09 f0       	breq	.+2      	; 0x47c6 <__DATA_REGION_LENGTH__+0x7c6>
    47c4:	47 c2       	rjmp	.+1166   	; 0x4c54 <__DATA_REGION_LENGTH__+0xc54>
    47c6:	8c 85       	ldd	r24, Y+12	; 0x0c
    47c8:	9d 85       	ldd	r25, Y+13	; 0x0d
    47ca:	fc 01       	movw	r30, r24
    47cc:	80 8d       	ldd	r24, Z+24	; 0x18
    47ce:	88 23       	and	r24, r24
    47d0:	09 f4       	brne	.+2      	; 0x47d4 <__DATA_REGION_LENGTH__+0x7d4>
    47d2:	40 c2       	rjmp	.+1152   	; 0x4c54 <__DATA_REGION_LENGTH__+0xc54>
    47d4:	8c 85       	ldd	r24, Y+12	; 0x0c
    47d6:	9d 85       	ldd	r25, Y+13	; 0x0d
    47d8:	48 96       	adiw	r24, 0x18	; 24
    47da:	0e 94 a9 73 	call	0xe752	; 0xe752 <atol>
    47de:	dc 01       	movw	r26, r24
    47e0:	cb 01       	movw	r24, r22
    47e2:	89 8f       	std	Y+25, r24	; 0x19
    47e4:	89 8d       	ldd	r24, Y+25	; 0x19
    47e6:	8d 8f       	std	Y+29, r24	; 0x1d
    47e8:	85 e0       	ldi	r24, 0x05	; 5
    47ea:	90 e0       	ldi	r25, 0x00	; 0
    47ec:	8e 8f       	std	Y+30, r24	; 0x1e
    47ee:	9f 8f       	std	Y+31, r25	; 0x1f
    47f0:	84 e1       	ldi	r24, 0x14	; 20
    47f2:	90 e0       	ldi	r25, 0x00	; 0
    47f4:	88 a3       	std	Y+32, r24	; 0x20
    47f6:	99 a3       	std	Y+33, r25	; 0x21
    47f8:	8d 8d       	ldd	r24, Y+29	; 0x1d
    47fa:	28 2f       	mov	r18, r24
    47fc:	30 e0       	ldi	r19, 0x00	; 0
    47fe:	88 a1       	ldd	r24, Y+32	; 0x20
    4800:	99 a1       	ldd	r25, Y+33	; 0x21
    4802:	82 17       	cp	r24, r18
    4804:	93 07       	cpc	r25, r19
    4806:	54 f0       	brlt	.+20     	; 0x481c <__DATA_REGION_LENGTH__+0x81c>
    4808:	8d 8d       	ldd	r24, Y+29	; 0x1d
    480a:	88 2f       	mov	r24, r24
    480c:	90 e0       	ldi	r25, 0x00	; 0
    480e:	2e 8d       	ldd	r18, Y+30	; 0x1e
    4810:	3f 8d       	ldd	r19, Y+31	; 0x1f
    4812:	82 17       	cp	r24, r18
    4814:	93 07       	cpc	r25, r19
    4816:	24 f4       	brge	.+8      	; 0x4820 <__DATA_REGION_LENGTH__+0x820>
    4818:	c9 01       	movw	r24, r18
    481a:	02 c0       	rjmp	.+4      	; 0x4820 <__DATA_REGION_LENGTH__+0x820>
    481c:	88 a1       	ldd	r24, Y+32	; 0x20
    481e:	99 a1       	ldd	r25, Y+33	; 0x21
    4820:	80 93 0c 40 	sts	0x400C, r24	; 0x80400c <g_pattern_codespeed>
    4824:	80 91 f2 47 	lds	r24, 0x47F2	; 0x8047f2 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    4828:	8f 5f       	subi	r24, 0xFF	; 255
    482a:	80 93 f2 47 	sts	0x47F2, r24	; 0x8047f2 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    482e:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    4832:	0e 94 4f 27 	call	0x4e9e	; 0x4e9e <_Z13throttleValueh>
    4836:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    483a:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    483e:	0a c2       	rjmp	.+1044   	; 0x4c54 <__DATA_REGION_LENGTH__+0xc54>
    4840:	1a a2       	std	Y+34, r1	; 0x22
    4842:	1b a2       	std	Y+35, r1	; 0x23
    4844:	8c 85       	ldd	r24, Y+12	; 0x0c
    4846:	9d 85       	ldd	r25, Y+13	; 0x0d
    4848:	fc 01       	movw	r30, r24
    484a:	83 81       	ldd	r24, Z+3	; 0x03
    484c:	80 33       	cpi	r24, 0x30	; 48
    484e:	e1 f4       	brne	.+56     	; 0x4888 <__DATA_REGION_LENGTH__+0x888>
    4850:	8c 85       	ldd	r24, Y+12	; 0x0c
    4852:	9d 85       	ldd	r25, Y+13	; 0x0d
    4854:	fc 01       	movw	r30, r24
    4856:	80 8d       	ldd	r24, Z+24	; 0x18
    4858:	88 23       	and	r24, r24
    485a:	09 f4       	brne	.+2      	; 0x485e <__DATA_REGION_LENGTH__+0x85e>
    485c:	fd c1       	rjmp	.+1018   	; 0x4c58 <__DATA_REGION_LENGTH__+0xc58>
    485e:	8c 85       	ldd	r24, Y+12	; 0x0c
    4860:	9d 85       	ldd	r25, Y+13	; 0x0d
    4862:	48 96       	adiw	r24, 0x18	; 24
    4864:	0e 94 a9 73 	call	0xe752	; 0xe752 <atol>
    4868:	dc 01       	movw	r26, r24
    486a:	cb 01       	movw	r24, r22
    486c:	8a a3       	std	Y+34, r24	; 0x22
    486e:	9b a3       	std	Y+35, r25	; 0x23
    4870:	8a a1       	ldd	r24, Y+34	; 0x22
    4872:	9b a1       	ldd	r25, Y+35	; 0x23
    4874:	80 93 0f 40 	sts	0x400F, r24	; 0x80400f <g_off_air_seconds>
    4878:	90 93 10 40 	sts	0x4010, r25	; 0x804010 <g_off_air_seconds+0x1>
    487c:	80 91 f2 47 	lds	r24, 0x47F2	; 0x8047f2 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    4880:	8f 5f       	subi	r24, 0xFF	; 255
    4882:	80 93 f2 47 	sts	0x47F2, r24	; 0x8047f2 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    4886:	e8 c1       	rjmp	.+976    	; 0x4c58 <__DATA_REGION_LENGTH__+0xc58>
    4888:	8c 85       	ldd	r24, Y+12	; 0x0c
    488a:	9d 85       	ldd	r25, Y+13	; 0x0d
    488c:	fc 01       	movw	r30, r24
    488e:	83 81       	ldd	r24, Z+3	; 0x03
    4890:	81 33       	cpi	r24, 0x31	; 49
    4892:	e1 f4       	brne	.+56     	; 0x48cc <__DATA_REGION_LENGTH__+0x8cc>
    4894:	8c 85       	ldd	r24, Y+12	; 0x0c
    4896:	9d 85       	ldd	r25, Y+13	; 0x0d
    4898:	fc 01       	movw	r30, r24
    489a:	80 8d       	ldd	r24, Z+24	; 0x18
    489c:	88 23       	and	r24, r24
    489e:	09 f4       	brne	.+2      	; 0x48a2 <__DATA_REGION_LENGTH__+0x8a2>
    48a0:	db c1       	rjmp	.+950    	; 0x4c58 <__DATA_REGION_LENGTH__+0xc58>
    48a2:	8c 85       	ldd	r24, Y+12	; 0x0c
    48a4:	9d 85       	ldd	r25, Y+13	; 0x0d
    48a6:	48 96       	adiw	r24, 0x18	; 24
    48a8:	0e 94 a9 73 	call	0xe752	; 0xe752 <atol>
    48ac:	dc 01       	movw	r26, r24
    48ae:	cb 01       	movw	r24, r22
    48b0:	8a a3       	std	Y+34, r24	; 0x22
    48b2:	9b a3       	std	Y+35, r25	; 0x23
    48b4:	8a a1       	ldd	r24, Y+34	; 0x22
    48b6:	9b a1       	ldd	r25, Y+35	; 0x23
    48b8:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_on_air_seconds>
    48bc:	90 93 0e 40 	sts	0x400E, r25	; 0x80400e <g_on_air_seconds+0x1>
    48c0:	80 91 f2 47 	lds	r24, 0x47F2	; 0x8047f2 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    48c4:	8f 5f       	subi	r24, 0xFF	; 255
    48c6:	80 93 f2 47 	sts	0x47F2, r24	; 0x8047f2 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    48ca:	c6 c1       	rjmp	.+908    	; 0x4c58 <__DATA_REGION_LENGTH__+0xc58>
    48cc:	8c 85       	ldd	r24, Y+12	; 0x0c
    48ce:	9d 85       	ldd	r25, Y+13	; 0x0d
    48d0:	fc 01       	movw	r30, r24
    48d2:	83 81       	ldd	r24, Z+3	; 0x03
    48d4:	89 34       	cpi	r24, 0x49	; 73
    48d6:	e1 f4       	brne	.+56     	; 0x4910 <__DATA_REGION_LENGTH__+0x910>
    48d8:	8c 85       	ldd	r24, Y+12	; 0x0c
    48da:	9d 85       	ldd	r25, Y+13	; 0x0d
    48dc:	fc 01       	movw	r30, r24
    48de:	80 8d       	ldd	r24, Z+24	; 0x18
    48e0:	88 23       	and	r24, r24
    48e2:	09 f4       	brne	.+2      	; 0x48e6 <__DATA_REGION_LENGTH__+0x8e6>
    48e4:	b9 c1       	rjmp	.+882    	; 0x4c58 <__DATA_REGION_LENGTH__+0xc58>
    48e6:	8c 85       	ldd	r24, Y+12	; 0x0c
    48e8:	9d 85       	ldd	r25, Y+13	; 0x0d
    48ea:	48 96       	adiw	r24, 0x18	; 24
    48ec:	0e 94 a9 73 	call	0xe752	; 0xe752 <atol>
    48f0:	dc 01       	movw	r26, r24
    48f2:	cb 01       	movw	r24, r22
    48f4:	8a a3       	std	Y+34, r24	; 0x22
    48f6:	9b a3       	std	Y+35, r25	; 0x23
    48f8:	8a a1       	ldd	r24, Y+34	; 0x22
    48fa:	9b a1       	ldd	r25, Y+35	; 0x23
    48fc:	80 93 11 40 	sts	0x4011, r24	; 0x804011 <g_ID_period_seconds>
    4900:	90 93 12 40 	sts	0x4012, r25	; 0x804012 <g_ID_period_seconds+0x1>
    4904:	80 91 f2 47 	lds	r24, 0x47F2	; 0x8047f2 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    4908:	8f 5f       	subi	r24, 0xFF	; 255
    490a:	80 93 f2 47 	sts	0x47F2, r24	; 0x8047f2 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    490e:	a4 c1       	rjmp	.+840    	; 0x4c58 <__DATA_REGION_LENGTH__+0xc58>
    4910:	8c 85       	ldd	r24, Y+12	; 0x0c
    4912:	9d 85       	ldd	r25, Y+13	; 0x0d
    4914:	fc 01       	movw	r30, r24
    4916:	83 81       	ldd	r24, Z+3	; 0x03
    4918:	84 34       	cpi	r24, 0x44	; 68
    491a:	09 f0       	breq	.+2      	; 0x491e <__DATA_REGION_LENGTH__+0x91e>
    491c:	9d c1       	rjmp	.+826    	; 0x4c58 <__DATA_REGION_LENGTH__+0xc58>
    491e:	8c 85       	ldd	r24, Y+12	; 0x0c
    4920:	9d 85       	ldd	r25, Y+13	; 0x0d
    4922:	fc 01       	movw	r30, r24
    4924:	80 8d       	ldd	r24, Z+24	; 0x18
    4926:	88 23       	and	r24, r24
    4928:	09 f4       	brne	.+2      	; 0x492c <__DATA_REGION_LENGTH__+0x92c>
    492a:	96 c1       	rjmp	.+812    	; 0x4c58 <__DATA_REGION_LENGTH__+0xc58>
    492c:	8c 85       	ldd	r24, Y+12	; 0x0c
    492e:	9d 85       	ldd	r25, Y+13	; 0x0d
    4930:	48 96       	adiw	r24, 0x18	; 24
    4932:	0e 94 a9 73 	call	0xe752	; 0xe752 <atol>
    4936:	dc 01       	movw	r26, r24
    4938:	cb 01       	movw	r24, r22
    493a:	8a a3       	std	Y+34, r24	; 0x22
    493c:	9b a3       	std	Y+35, r25	; 0x23
    493e:	8a a1       	ldd	r24, Y+34	; 0x22
    4940:	9b a1       	ldd	r25, Y+35	; 0x23
    4942:	80 93 ba 47 	sts	0x47BA, r24	; 0x8047ba <g_intra_cycle_delay_time>
    4946:	90 93 bb 47 	sts	0x47BB, r25	; 0x8047bb <g_intra_cycle_delay_time+0x1>
    494a:	80 91 f2 47 	lds	r24, 0x47F2	; 0x8047f2 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    494e:	8f 5f       	subi	r24, 0xFF	; 255
    4950:	80 93 f2 47 	sts	0x47F2, r24	; 0x8047f2 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    4954:	81 c1       	rjmp	.+770    	; 0x4c58 <__DATA_REGION_LENGTH__+0xc58>
    4956:	8c 85       	ldd	r24, Y+12	; 0x0c
    4958:	9d 85       	ldd	r25, Y+13	; 0x0d
    495a:	fc 01       	movw	r30, r24
    495c:	83 81       	ldd	r24, Z+3	; 0x03
    495e:	88 23       	and	r24, r24
    4960:	09 f4       	brne	.+2      	; 0x4964 <__DATA_REGION_LENGTH__+0x964>
    4962:	7c c1       	rjmp	.+760    	; 0x4c5c <__DATA_REGION_LENGTH__+0xc5c>
    4964:	8c 85       	ldd	r24, Y+12	; 0x0c
    4966:	9d 85       	ldd	r25, Y+13	; 0x0d
    4968:	03 96       	adiw	r24, 0x03	; 3
    496a:	44 e1       	ldi	r20, 0x14	; 20
    496c:	50 e0       	ldi	r21, 0x00	; 0
    496e:	bc 01       	movw	r22, r24
    4970:	8e e8       	ldi	r24, 0x8E	; 142
    4972:	97 e4       	ldi	r25, 0x47	; 71
    4974:	0e 94 05 74 	call	0xe80a	; 0xe80a <strncpy>
    4978:	80 91 f2 47 	lds	r24, 0x47F2	; 0x8047f2 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    497c:	8f 5f       	subi	r24, 0xFF	; 255
    497e:	80 93 f2 47 	sts	0x47F2, r24	; 0x8047f2 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    4982:	6c c1       	rjmp	.+728    	; 0x4c5c <__DATA_REGION_LENGTH__+0xc5c>
    4984:	1e 82       	std	Y+6, r1	; 0x06
    4986:	1f 82       	std	Y+7, r1	; 0x07
    4988:	18 86       	std	Y+8, r1	; 0x08
    498a:	19 86       	std	Y+9, r1	; 0x09
    498c:	8c 85       	ldd	r24, Y+12	; 0x0c
    498e:	9d 85       	ldd	r25, Y+13	; 0x0d
    4990:	fc 01       	movw	r30, r24
    4992:	83 81       	ldd	r24, Z+3	; 0x03
    4994:	88 23       	and	r24, r24
    4996:	99 f1       	breq	.+102    	; 0x49fe <__DATA_REGION_LENGTH__+0x9fe>
    4998:	8c 85       	ldd	r24, Y+12	; 0x0c
    499a:	9d 85       	ldd	r25, Y+13	; 0x0d
    499c:	03 96       	adiw	r24, 0x03	; 3
    499e:	0e 94 a9 73 	call	0xe752	; 0xe752 <atol>
    49a2:	dc 01       	movw	r26, r24
    49a4:	cb 01       	movw	r24, r22
    49a6:	80 93 f8 47 	sts	0x47F8, r24	; 0x8047f8 <_ZZ17handleLinkBusMsgsvE1f>
    49aa:	90 93 f9 47 	sts	0x47F9, r25	; 0x8047f9 <_ZZ17handleLinkBusMsgsvE1f+0x1>
    49ae:	a0 93 fa 47 	sts	0x47FA, r26	; 0x8047fa <_ZZ17handleLinkBusMsgsvE1f+0x2>
    49b2:	b0 93 fb 47 	sts	0x47FB, r27	; 0x8047fb <_ZZ17handleLinkBusMsgsvE1f+0x3>
    49b6:	80 91 f8 47 	lds	r24, 0x47F8	; 0x8047f8 <_ZZ17handleLinkBusMsgsvE1f>
    49ba:	90 91 f9 47 	lds	r25, 0x47F9	; 0x8047f9 <_ZZ17handleLinkBusMsgsvE1f+0x1>
    49be:	a0 91 fa 47 	lds	r26, 0x47FA	; 0x8047fa <_ZZ17handleLinkBusMsgsvE1f+0x2>
    49c2:	b0 91 fb 47 	lds	r27, 0x47FB	; 0x8047fb <_ZZ17handleLinkBusMsgsvE1f+0x3>
    49c6:	8e a7       	std	Y+46, r24	; 0x2e
    49c8:	9f a7       	std	Y+47, r25	; 0x2f
    49ca:	a8 ab       	std	Y+48, r26	; 0x30
    49cc:	b9 ab       	std	Y+49, r27	; 0x31
    49ce:	ce 01       	movw	r24, r28
    49d0:	8e 96       	adiw	r24, 0x2e	; 46
    49d2:	61 e0       	ldi	r22, 0x01	; 1
    49d4:	0e 94 37 67 	call	0xce6e	; 0xce6e <_Z14txSetFrequencyPmb>
    49d8:	98 2f       	mov	r25, r24
    49da:	81 e0       	ldi	r24, 0x01	; 1
    49dc:	89 27       	eor	r24, r25
    49de:	88 23       	and	r24, r24
    49e0:	b1 f0       	breq	.+44     	; 0x4a0e <__DATA_REGION_LENGTH__+0xa0e>
    49e2:	8e a5       	ldd	r24, Y+46	; 0x2e
    49e4:	9f a5       	ldd	r25, Y+47	; 0x2f
    49e6:	a8 a9       	ldd	r26, Y+48	; 0x30
    49e8:	b9 a9       	ldd	r27, Y+49	; 0x31
    49ea:	8e 83       	std	Y+6, r24	; 0x06
    49ec:	9f 83       	std	Y+7, r25	; 0x07
    49ee:	a8 87       	std	Y+8, r26	; 0x08
    49f0:	b9 87       	std	Y+9, r27	; 0x09
    49f2:	80 91 f2 47 	lds	r24, 0x47F2	; 0x8047f2 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    49f6:	8f 5f       	subi	r24, 0xFF	; 255
    49f8:	80 93 f2 47 	sts	0x47F2, r24	; 0x8047f2 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    49fc:	08 c0       	rjmp	.+16     	; 0x4a0e <__DATA_REGION_LENGTH__+0xa0e>
    49fe:	0e 94 81 67 	call	0xcf02	; 0xcf02 <_Z14txGetFrequencyv>
    4a02:	dc 01       	movw	r26, r24
    4a04:	cb 01       	movw	r24, r22
    4a06:	8e 83       	std	Y+6, r24	; 0x06
    4a08:	9f 83       	std	Y+7, r25	; 0x07
    4a0a:	a8 87       	std	Y+8, r26	; 0x08
    4a0c:	b9 87       	std	Y+9, r27	; 0x09
    4a0e:	8e 81       	ldd	r24, Y+6	; 0x06
    4a10:	9f 81       	ldd	r25, Y+7	; 0x07
    4a12:	a8 85       	ldd	r26, Y+8	; 0x08
    4a14:	b9 85       	ldd	r27, Y+9	; 0x09
    4a16:	89 2b       	or	r24, r25
    4a18:	8a 2b       	or	r24, r26
    4a1a:	8b 2b       	or	r24, r27
    4a1c:	09 f4       	brne	.+2      	; 0x4a20 <__DATA_REGION_LENGTH__+0xa20>
    4a1e:	20 c1       	rjmp	.+576    	; 0x4c60 <__DATA_REGION_LENGTH__+0xc60>
    4a20:	89 85       	ldd	r24, Y+9	; 0x09
    4a22:	8f 93       	push	r24
    4a24:	88 85       	ldd	r24, Y+8	; 0x08
    4a26:	8f 93       	push	r24
    4a28:	8f 81       	ldd	r24, Y+7	; 0x07
    4a2a:	8f 93       	push	r24
    4a2c:	8e 81       	ldd	r24, Y+6	; 0x06
    4a2e:	8f 93       	push	r24
    4a30:	85 e1       	ldi	r24, 0x15	; 21
    4a32:	93 e4       	ldi	r25, 0x43	; 67
    4a34:	89 2f       	mov	r24, r25
    4a36:	8f 93       	push	r24
    4a38:	85 e1       	ldi	r24, 0x15	; 21
    4a3a:	93 e4       	ldi	r25, 0x43	; 67
    4a3c:	8f 93       	push	r24
    4a3e:	89 e4       	ldi	r24, 0x49	; 73
    4a40:	97 e4       	ldi	r25, 0x47	; 71
    4a42:	89 2f       	mov	r24, r25
    4a44:	8f 93       	push	r24
    4a46:	89 e4       	ldi	r24, 0x49	; 73
    4a48:	97 e4       	ldi	r25, 0x47	; 71
    4a4a:	8f 93       	push	r24
    4a4c:	0e 94 31 74 	call	0xe862	; 0xe862 <sprintf>
    4a50:	2d b7       	in	r18, 0x3d	; 61
    4a52:	3e b7       	in	r19, 0x3e	; 62
    4a54:	28 5f       	subi	r18, 0xF8	; 248
    4a56:	3f 4f       	sbci	r19, 0xFF	; 255
    4a58:	cd bf       	out	0x3d, r28	; 61
    4a5a:	de bf       	out	0x3e, r29	; 62
    4a5c:	49 e4       	ldi	r20, 0x49	; 73
    4a5e:	57 e4       	ldi	r21, 0x47	; 71
    4a60:	6a e1       	ldi	r22, 0x1A	; 26
    4a62:	73 e4       	ldi	r23, 0x43	; 67
    4a64:	83 e0       	ldi	r24, 0x03	; 3
    4a66:	0e 94 42 52 	call	0xa484	; 0xa484 <_Z11lb_send_msg13LBMessageTypePKcPc>
    4a6a:	fa c0       	rjmp	.+500    	; 0x4c60 <__DATA_REGION_LENGTH__+0xc60>
    4a6c:	80 91 ce 47 	lds	r24, 0x47CE	; 0x8047ce <_ZL22g_lastConversionResult>
    4a70:	90 91 cf 47 	lds	r25, 0x47CF	; 0x8047cf <_ZL22g_lastConversionResult+0x1>
    4a74:	21 e0       	ldi	r18, 0x01	; 1
    4a76:	8d 38       	cpi	r24, 0x8D	; 141
    4a78:	92 40       	sbci	r25, 0x02	; 2
    4a7a:	08 f4       	brcc	.+2      	; 0x4a7e <__DATA_REGION_LENGTH__+0xa7e>
    4a7c:	20 e0       	ldi	r18, 0x00	; 0
    4a7e:	22 23       	and	r18, r18
    4a80:	09 f4       	brne	.+2      	; 0x4a84 <__DATA_REGION_LENGTH__+0xa84>
    4a82:	7c c0       	rjmp	.+248    	; 0x4b7c <__DATA_REGION_LENGTH__+0xb7c>
    4a84:	80 91 ce 47 	lds	r24, 0x47CE	; 0x8047ce <_ZL22g_lastConversionResult>
    4a88:	90 91 cf 47 	lds	r25, 0x47CF	; 0x8047cf <_ZL22g_lastConversionResult+0x1>
    4a8c:	cc 01       	movw	r24, r24
    4a8e:	a0 e0       	ldi	r26, 0x00	; 0
    4a90:	b0 e0       	ldi	r27, 0x00	; 0
    4a92:	9c 01       	movw	r18, r24
    4a94:	ad 01       	movw	r20, r26
    4a96:	60 ea       	ldi	r22, 0xA0	; 160
    4a98:	78 e6       	ldi	r23, 0x68	; 104
    4a9a:	86 e0       	ldi	r24, 0x06	; 6
    4a9c:	90 e0       	ldi	r25, 0x00	; 0
    4a9e:	0e 94 ca 71 	call	0xe394	; 0xe394 <__mulsi3>
    4aa2:	dc 01       	movw	r26, r24
    4aa4:	cb 01       	movw	r24, r22
    4aa6:	7c 01       	movw	r14, r24
    4aa8:	8d 01       	movw	r16, r26
    4aaa:	ed e7       	ldi	r30, 0x7D	; 125
    4aac:	fe 1a       	sub	r15, r30
    4aae:	0c 40       	sbci	r16, 0x0C	; 12
    4ab0:	1e 4f       	sbci	r17, 0xFE	; 254
    4ab2:	80 91 15 40 	lds	r24, 0x4015	; 0x804015 <g_battery_empty_mV>
    4ab6:	90 91 16 40 	lds	r25, 0x4016	; 0x804016 <g_battery_empty_mV+0x1>
    4aba:	cc 01       	movw	r24, r24
    4abc:	a0 e0       	ldi	r26, 0x00	; 0
    4abe:	b0 e0       	ldi	r27, 0x00	; 0
    4ac0:	9c 01       	movw	r18, r24
    4ac2:	ad 01       	movw	r20, r26
    4ac4:	64 e6       	ldi	r22, 0x64	; 100
    4ac6:	70 e7       	ldi	r23, 0x70	; 112
    4ac8:	8e ef       	ldi	r24, 0xFE	; 254
    4aca:	9f ef       	ldi	r25, 0xFF	; 255
    4acc:	0e 94 ca 71 	call	0xe394	; 0xe394 <__mulsi3>
    4ad0:	dc 01       	movw	r26, r24
    4ad2:	cb 01       	movw	r24, r22
    4ad4:	e8 0e       	add	r14, r24
    4ad6:	f9 1e       	adc	r15, r25
    4ad8:	0a 1f       	adc	r16, r26
    4ada:	1b 1f       	adc	r17, r27
    4adc:	80 91 15 40 	lds	r24, 0x4015	; 0x804015 <g_battery_empty_mV>
    4ae0:	90 91 16 40 	lds	r25, 0x4016	; 0x804016 <g_battery_empty_mV+0x1>
    4ae4:	cc 01       	movw	r24, r24
    4ae6:	a0 e0       	ldi	r26, 0x00	; 0
    4ae8:	b0 e0       	ldi	r27, 0x00	; 0
    4aea:	28 e6       	ldi	r18, 0x68	; 104
    4aec:	30 e1       	ldi	r19, 0x10	; 16
    4aee:	40 e0       	ldi	r20, 0x00	; 0
    4af0:	50 e0       	ldi	r21, 0x00	; 0
    4af2:	28 1b       	sub	r18, r24
    4af4:	39 0b       	sbc	r19, r25
    4af6:	4a 0b       	sbc	r20, r26
    4af8:	5b 0b       	sbc	r21, r27
    4afa:	8f ef       	ldi	r24, 0xFF	; 255
    4afc:	93 e0       	ldi	r25, 0x03	; 3
    4afe:	dc 01       	movw	r26, r24
    4b00:	0e 94 5b 72 	call	0xe4b6	; 0xe4b6 <__muluhisi3>
    4b04:	9b 01       	movw	r18, r22
    4b06:	ac 01       	movw	r20, r24
    4b08:	c8 01       	movw	r24, r16
    4b0a:	b7 01       	movw	r22, r14
    4b0c:	0e 94 24 72 	call	0xe448	; 0xe448 <__divmodsi4>
    4b10:	da 01       	movw	r26, r20
    4b12:	c9 01       	movw	r24, r18
    4b14:	8c a3       	std	Y+36, r24	; 0x24
    4b16:	9d a3       	std	Y+37, r25	; 0x25
    4b18:	ae a3       	std	Y+38, r26	; 0x26
    4b1a:	bf a3       	std	Y+39, r27	; 0x27
    4b1c:	18 a6       	std	Y+40, r1	; 0x28
    4b1e:	19 a6       	std	Y+41, r1	; 0x29
    4b20:	84 e6       	ldi	r24, 0x64	; 100
    4b22:	90 e0       	ldi	r25, 0x00	; 0
    4b24:	8a a7       	std	Y+42, r24	; 0x2a
    4b26:	9b a7       	std	Y+43, r25	; 0x2b
    4b28:	8a a5       	ldd	r24, Y+42	; 0x2a
    4b2a:	9b a5       	ldd	r25, Y+43	; 0x2b
    4b2c:	9c 01       	movw	r18, r24
    4b2e:	99 0f       	add	r25, r25
    4b30:	44 0b       	sbc	r20, r20
    4b32:	55 0b       	sbc	r21, r21
    4b34:	8c a1       	ldd	r24, Y+36	; 0x24
    4b36:	9d a1       	ldd	r25, Y+37	; 0x25
    4b38:	ae a1       	ldd	r26, Y+38	; 0x26
    4b3a:	bf a1       	ldd	r27, Y+39	; 0x27
    4b3c:	28 17       	cp	r18, r24
    4b3e:	39 07       	cpc	r19, r25
    4b40:	4a 07       	cpc	r20, r26
    4b42:	5b 07       	cpc	r21, r27
    4b44:	3c f4       	brge	.+14     	; 0x4b54 <__DATA_REGION_LENGTH__+0xb54>
    4b46:	8a a5       	ldd	r24, Y+42	; 0x2a
    4b48:	9b a5       	ldd	r25, Y+43	; 0x2b
    4b4a:	09 2e       	mov	r0, r25
    4b4c:	00 0c       	add	r0, r0
    4b4e:	aa 0b       	sbc	r26, r26
    4b50:	bb 0b       	sbc	r27, r27
    4b52:	11 c0       	rjmp	.+34     	; 0x4b76 <__DATA_REGION_LENGTH__+0xb76>
    4b54:	88 a5       	ldd	r24, Y+40	; 0x28
    4b56:	99 a5       	ldd	r25, Y+41	; 0x29
    4b58:	09 2e       	mov	r0, r25
    4b5a:	00 0c       	add	r0, r0
    4b5c:	aa 0b       	sbc	r26, r26
    4b5e:	bb 0b       	sbc	r27, r27
    4b60:	2c a1       	ldd	r18, Y+36	; 0x24
    4b62:	3d a1       	ldd	r19, Y+37	; 0x25
    4b64:	4e a1       	ldd	r20, Y+38	; 0x26
    4b66:	5f a1       	ldd	r21, Y+39	; 0x27
    4b68:	82 17       	cp	r24, r18
    4b6a:	93 07       	cpc	r25, r19
    4b6c:	a4 07       	cpc	r26, r20
    4b6e:	b5 07       	cpc	r27, r21
    4b70:	14 f4       	brge	.+4      	; 0x4b76 <__DATA_REGION_LENGTH__+0xb76>
    4b72:	da 01       	movw	r26, r20
    4b74:	c9 01       	movw	r24, r18
    4b76:	8a 87       	std	Y+10, r24	; 0x0a
    4b78:	9b 87       	std	Y+11, r25	; 0x0b
    4b7a:	2f c0       	rjmp	.+94     	; 0x4bda <__DATA_REGION_LENGTH__+0xbda>
    4b7c:	80 91 d2 47 	lds	r24, 0x47D2	; 0x8047d2 <_ZL22g_lastConversionResult+0x4>
    4b80:	90 91 d3 47 	lds	r25, 0x47D3	; 0x8047d3 <_ZL22g_lastConversionResult+0x5>
    4b84:	9c 01       	movw	r18, r24
    4b86:	40 e0       	ldi	r20, 0x00	; 0
    4b88:	50 e0       	ldi	r21, 0x00	; 0
    4b8a:	da 01       	movw	r26, r20
    4b8c:	c9 01       	movw	r24, r18
    4b8e:	88 0f       	add	r24, r24
    4b90:	99 1f       	adc	r25, r25
    4b92:	aa 1f       	adc	r26, r26
    4b94:	bb 1f       	adc	r27, r27
    4b96:	88 0f       	add	r24, r24
    4b98:	99 1f       	adc	r25, r25
    4b9a:	aa 1f       	adc	r26, r26
    4b9c:	bb 1f       	adc	r27, r27
    4b9e:	88 0f       	add	r24, r24
    4ba0:	99 1f       	adc	r25, r25
    4ba2:	aa 1f       	adc	r26, r26
    4ba4:	bb 1f       	adc	r27, r27
    4ba6:	82 1b       	sub	r24, r18
    4ba8:	93 0b       	sbc	r25, r19
    4baa:	a4 0b       	sbc	r26, r20
    4bac:	b5 0b       	sbc	r27, r21
    4bae:	88 0f       	add	r24, r24
    4bb0:	99 1f       	adc	r25, r25
    4bb2:	aa 1f       	adc	r26, r26
    4bb4:	bb 1f       	adc	r27, r27
    4bb6:	8a 5c       	subi	r24, 0xCA	; 202
    4bb8:	9e 4f       	sbci	r25, 0xFE	; 254
    4bba:	af 4f       	sbci	r26, 0xFF	; 255
    4bbc:	bf 4f       	sbci	r27, 0xFF	; 255
    4bbe:	24 e6       	ldi	r18, 0x64	; 100
    4bc0:	30 e0       	ldi	r19, 0x00	; 0
    4bc2:	40 e0       	ldi	r20, 0x00	; 0
    4bc4:	50 e0       	ldi	r21, 0x00	; 0
    4bc6:	bc 01       	movw	r22, r24
    4bc8:	cd 01       	movw	r24, r26
    4bca:	0e 94 24 72 	call	0xe448	; 0xe448 <__divmodsi4>
    4bce:	da 01       	movw	r26, r20
    4bd0:	c9 01       	movw	r24, r18
    4bd2:	80 5f       	subi	r24, 0xF0	; 240
    4bd4:	98 4d       	sbci	r25, 0xD8	; 216
    4bd6:	8a 87       	std	Y+10, r24	; 0x0a
    4bd8:	9b 87       	std	Y+11, r25	; 0x0b
    4bda:	8a 85       	ldd	r24, Y+10	; 0x0a
    4bdc:	9b 85       	ldd	r25, Y+11	; 0x0b
    4bde:	6e e1       	ldi	r22, 0x1E	; 30
    4be0:	73 e4       	ldi	r23, 0x43	; 67
    4be2:	0e 94 91 52 	call	0xa522	; 0xa522 <_Z16lb_broadcast_numjPKc>
    4be6:	80 e0       	ldi	r24, 0x00	; 0
    4be8:	90 e0       	ldi	r25, 0x00	; 0
    4bea:	0e 94 b2 3d 	call	0x7b64	; 0x7b64 <ds3231_get_epoch>
    4bee:	dc 01       	movw	r26, r24
    4bf0:	cb 01       	movw	r24, r22
    4bf2:	bc 01       	movw	r22, r24
    4bf4:	cd 01       	movw	r24, r26
    4bf6:	0e 94 54 02 	call	0x4a8	; 0x4a8 <set_system_time>
    4bfa:	35 c0       	rjmp	.+106    	; 0x4c66 <__DATA_REGION_LENGTH__+0xc66>
    4bfc:	ce 01       	movw	r24, r28
    4bfe:	c2 96       	adiw	r24, 0x32	; 50
    4c00:	0e 94 8c 3f 	call	0x7f18	; 0x7f18 <ds3231_get_temp>
    4c04:	98 2f       	mov	r25, r24
    4c06:	81 e0       	ldi	r24, 0x01	; 1
    4c08:	89 27       	eor	r24, r25
    4c0a:	88 23       	and	r24, r24
    4c0c:	59 f1       	breq	.+86     	; 0x4c64 <__DATA_REGION_LENGTH__+0xc64>
    4c0e:	8a a9       	ldd	r24, Y+50	; 0x32
    4c10:	9b a9       	ldd	r25, Y+51	; 0x33
    4c12:	63 e2       	ldi	r22, 0x23	; 35
    4c14:	73 e4       	ldi	r23, 0x43	; 67
    4c16:	0e 94 91 52 	call	0xa522	; 0xa522 <_Z16lb_broadcast_numjPKc>
    4c1a:	24 c0       	rjmp	.+72     	; 0x4c64 <__DATA_REGION_LENGTH__+0xc64>
    4c1c:	43 e6       	ldi	r20, 0x63	; 99
    4c1e:	50 e4       	ldi	r21, 0x40	; 64
    4c20:	68 e2       	ldi	r22, 0x28	; 40
    4c22:	73 e4       	ldi	r23, 0x43	; 67
    4c24:	83 e0       	ldi	r24, 0x03	; 3
    4c26:	0e 94 42 52 	call	0xa484	; 0xa484 <_Z11lb_send_msg13LBMessageTypePKcPc>
    4c2a:	1d c0       	rjmp	.+58     	; 0x4c66 <__DATA_REGION_LENGTH__+0xc66>
    4c2c:	0e 94 bf 50 	call	0xa17e	; 0xa17e <_Z16linkbus_reset_rxv>
    4c30:	8e ec       	ldi	r24, 0xCE	; 206
    4c32:	80 93 7b 47 	sts	0x477B, r24	; 0x80477b <_ZL17g_last_error_code>
    4c36:	17 c0       	rjmp	.+46     	; 0x4c66 <__DATA_REGION_LENGTH__+0xc66>
    4c38:	00 00       	nop
    4c3a:	15 c0       	rjmp	.+42     	; 0x4c66 <__DATA_REGION_LENGTH__+0xc66>
    4c3c:	00 00       	nop
    4c3e:	13 c0       	rjmp	.+38     	; 0x4c66 <__DATA_REGION_LENGTH__+0xc66>
    4c40:	00 00       	nop
    4c42:	11 c0       	rjmp	.+34     	; 0x4c66 <__DATA_REGION_LENGTH__+0xc66>
    4c44:	00 00       	nop
    4c46:	0f c0       	rjmp	.+30     	; 0x4c66 <__DATA_REGION_LENGTH__+0xc66>
    4c48:	00 00       	nop
    4c4a:	0d c0       	rjmp	.+26     	; 0x4c66 <__DATA_REGION_LENGTH__+0xc66>
    4c4c:	00 00       	nop
    4c4e:	0b c0       	rjmp	.+22     	; 0x4c66 <__DATA_REGION_LENGTH__+0xc66>
    4c50:	00 00       	nop
    4c52:	09 c0       	rjmp	.+18     	; 0x4c66 <__DATA_REGION_LENGTH__+0xc66>
    4c54:	00 00       	nop
    4c56:	07 c0       	rjmp	.+14     	; 0x4c66 <__DATA_REGION_LENGTH__+0xc66>
    4c58:	00 00       	nop
    4c5a:	05 c0       	rjmp	.+10     	; 0x4c66 <__DATA_REGION_LENGTH__+0xc66>
    4c5c:	00 00       	nop
    4c5e:	03 c0       	rjmp	.+6      	; 0x4c66 <__DATA_REGION_LENGTH__+0xc66>
    4c60:	00 00       	nop
    4c62:	01 c0       	rjmp	.+2      	; 0x4c66 <__DATA_REGION_LENGTH__+0xc66>
    4c64:	00 00       	nop
    4c66:	8c 85       	ldd	r24, Y+12	; 0x0c
    4c68:	9d 85       	ldd	r25, Y+13	; 0x0d
    4c6a:	fc 01       	movw	r30, r24
    4c6c:	11 82       	std	Z+1, r1	; 0x01
    4c6e:	12 82       	std	Z+2, r1	; 0x02
    4c70:	89 81       	ldd	r24, Y+1	; 0x01
    4c72:	88 23       	and	r24, r24
    4c74:	09 f4       	brne	.+2      	; 0x4c78 <__DATA_REGION_LENGTH__+0xc78>
    4c76:	6d c9       	rjmp	.-3366   	; 0x3f52 <_Z17handleLinkBusMsgsv+0x1a>
    4c78:	8c e2       	ldi	r24, 0x2C	; 44
    4c7a:	93 e4       	ldi	r25, 0x43	; 67
    4c7c:	0e 94 e5 51 	call	0xa3ca	; 0xa3ca <_Z12lb_send_textPc>
    4c80:	68 c9       	rjmp	.-3376   	; 0x3f52 <_Z17handleLinkBusMsgsv+0x1a>
    4c82:	00 00       	nop
    4c84:	e3 96       	adiw	r28, 0x33	; 51
    4c86:	cd bf       	out	0x3d, r28	; 61
    4c88:	de bf       	out	0x3e, r29	; 62
    4c8a:	df 91       	pop	r29
    4c8c:	cf 91       	pop	r28
    4c8e:	1f 91       	pop	r17
    4c90:	0f 91       	pop	r16
    4c92:	ff 90       	pop	r15
    4c94:	ef 90       	pop	r14
    4c96:	08 95       	ret

00004c98 <_Z19updateAntennaStatusv>:
    4c98:	cf 93       	push	r28
    4c9a:	df 93       	push	r29
    4c9c:	1f 92       	push	r1
    4c9e:	cd b7       	in	r28, 0x3d	; 61
    4ca0:	de b7       	in	r29, 0x3e	; 62
    4ca2:	0e 94 4b 2a 	call	0x5496	; 0x5496 <_Z18antennaIsConnectedv>
    4ca6:	89 83       	std	Y+1, r24	; 0x01
    4ca8:	99 81       	ldd	r25, Y+1	; 0x01
    4caa:	81 e0       	ldi	r24, 0x01	; 1
    4cac:	89 27       	eor	r24, r25
    4cae:	88 23       	and	r24, r24
    4cb0:	91 f0       	breq	.+36     	; 0x4cd6 <_Z19updateAntennaStatusv+0x3e>
    4cb2:	90 91 81 47 	lds	r25, 0x4781	; 0x804781 <g_antenna_connect_state>
    4cb6:	81 e0       	ldi	r24, 0x01	; 1
    4cb8:	91 30       	cpi	r25, 0x01	; 1
    4cba:	09 f4       	brne	.+2      	; 0x4cbe <_Z19updateAntennaStatusv+0x26>
    4cbc:	80 e0       	ldi	r24, 0x00	; 0
    4cbe:	88 23       	and	r24, r24
    4cc0:	31 f0       	breq	.+12     	; 0x4cce <_Z19updateAntennaStatusv+0x36>
    4cc2:	81 e0       	ldi	r24, 0x01	; 1
    4cc4:	80 93 81 47 	sts	0x4781, r24	; 0x804781 <g_antenna_connect_state>
    4cc8:	81 e0       	ldi	r24, 0x01	; 1
    4cca:	80 93 06 40 	sts	0x4006, r24	; 0x804006 <_ZL28g_antenna_connection_changed>
    4cce:	83 e0       	ldi	r24, 0x03	; 3
    4cd0:	80 93 1c 40 	sts	0x401C, r24	; 0x80401c <_ZZ19updateAntennaStatusvE16antennaReadCount>
    4cd4:	27 c0       	rjmp	.+78     	; 0x4d24 <_Z19updateAntennaStatusv+0x8c>
    4cd6:	90 91 81 47 	lds	r25, 0x4781	; 0x804781 <g_antenna_connect_state>
    4cda:	81 e0       	ldi	r24, 0x01	; 1
    4cdc:	92 30       	cpi	r25, 0x02	; 2
    4cde:	09 f4       	brne	.+2      	; 0x4ce2 <_Z19updateAntennaStatusv+0x4a>
    4ce0:	80 e0       	ldi	r24, 0x00	; 0
    4ce2:	88 23       	and	r24, r24
    4ce4:	f9 f0       	breq	.+62     	; 0x4d24 <_Z19updateAntennaStatusv+0x8c>
    4ce6:	80 91 fc 47 	lds	r24, 0x47FC	; 0x8047fc <_ZZ19updateAntennaStatusvE26lastAntennaConnectionState>
    4cea:	99 81       	ldd	r25, Y+1	; 0x01
    4cec:	98 17       	cp	r25, r24
    4cee:	b9 f4       	brne	.+46     	; 0x4d1e <_Z19updateAntennaStatusv+0x86>
    4cf0:	80 91 1c 40 	lds	r24, 0x401C	; 0x80401c <_ZZ19updateAntennaStatusvE16antennaReadCount>
    4cf4:	88 23       	and	r24, r24
    4cf6:	b1 f0       	breq	.+44     	; 0x4d24 <_Z19updateAntennaStatusv+0x8c>
    4cf8:	80 91 1c 40 	lds	r24, 0x401C	; 0x80401c <_ZZ19updateAntennaStatusvE16antennaReadCount>
    4cfc:	81 50       	subi	r24, 0x01	; 1
    4cfe:	80 93 1c 40 	sts	0x401C, r24	; 0x80401c <_ZZ19updateAntennaStatusvE16antennaReadCount>
    4d02:	80 91 1c 40 	lds	r24, 0x401C	; 0x80401c <_ZZ19updateAntennaStatusvE16antennaReadCount>
    4d06:	88 23       	and	r24, r24
    4d08:	69 f4       	brne	.+26     	; 0x4d24 <_Z19updateAntennaStatusv+0x8c>
    4d0a:	82 e0       	ldi	r24, 0x02	; 2
    4d0c:	80 93 81 47 	sts	0x4781, r24	; 0x804781 <g_antenna_connect_state>
    4d10:	81 e0       	ldi	r24, 0x01	; 1
    4d12:	80 93 06 40 	sts	0x4006, r24	; 0x804006 <_ZL28g_antenna_connection_changed>
    4d16:	83 e0       	ldi	r24, 0x03	; 3
    4d18:	80 93 1c 40 	sts	0x401C, r24	; 0x80401c <_ZZ19updateAntennaStatusvE16antennaReadCount>
    4d1c:	03 c0       	rjmp	.+6      	; 0x4d24 <_Z19updateAntennaStatusv+0x8c>
    4d1e:	83 e0       	ldi	r24, 0x03	; 3
    4d20:	80 93 1c 40 	sts	0x401C, r24	; 0x80401c <_ZZ19updateAntennaStatusvE16antennaReadCount>
    4d24:	89 81       	ldd	r24, Y+1	; 0x01
    4d26:	80 93 fc 47 	sts	0x47FC, r24	; 0x8047fc <_ZZ19updateAntennaStatusvE26lastAntennaConnectionState>
    4d2a:	00 00       	nop
    4d2c:	0f 90       	pop	r0
    4d2e:	df 91       	pop	r29
    4d30:	cf 91       	pop	r28
    4d32:	08 95       	ret

00004d34 <_Z12eventEnabledv>:
    4d34:	ef 92       	push	r14
    4d36:	ff 92       	push	r15
    4d38:	0f 93       	push	r16
    4d3a:	1f 93       	push	r17
    4d3c:	cf 93       	push	r28
    4d3e:	df 93       	push	r29
    4d40:	cd b7       	in	r28, 0x3d	; 61
    4d42:	de b7       	in	r29, 0x3e	; 62
    4d44:	29 97       	sbiw	r28, 0x09	; 9
    4d46:	cd bf       	out	0x3d, r28	; 61
    4d48:	de bf       	out	0x3e, r29	; 62
    4d4a:	20 91 bc 47 	lds	r18, 0x47BC	; 0x8047bc <g_event_start_epoch>
    4d4e:	30 91 bd 47 	lds	r19, 0x47BD	; 0x8047bd <g_event_start_epoch+0x1>
    4d52:	40 91 be 47 	lds	r20, 0x47BE	; 0x8047be <g_event_start_epoch+0x2>
    4d56:	50 91 bf 47 	lds	r21, 0x47BF	; 0x8047bf <g_event_start_epoch+0x3>
    4d5a:	80 91 c0 47 	lds	r24, 0x47C0	; 0x8047c0 <g_event_finish_epoch>
    4d5e:	90 91 c1 47 	lds	r25, 0x47C1	; 0x8047c1 <g_event_finish_epoch+0x1>
    4d62:	a0 91 c2 47 	lds	r26, 0x47C2	; 0x8047c2 <g_event_finish_epoch+0x2>
    4d66:	b0 91 c3 47 	lds	r27, 0x47C3	; 0x8047c3 <g_event_finish_epoch+0x3>
    4d6a:	bc 01       	movw	r22, r24
    4d6c:	cd 01       	movw	r24, r26
    4d6e:	0e 94 83 6b 	call	0xd706	; 0xd706 <_Z7timeDifmm>
    4d72:	dc 01       	movw	r26, r24
    4d74:	cb 01       	movw	r24, r22
    4d76:	89 83       	std	Y+1, r24	; 0x01
    4d78:	9a 83       	std	Y+2, r25	; 0x02
    4d7a:	ab 83       	std	Y+3, r26	; 0x03
    4d7c:	bc 83       	std	Y+4, r27	; 0x04
    4d7e:	21 e0       	ldi	r18, 0x01	; 1
    4d80:	89 81       	ldd	r24, Y+1	; 0x01
    4d82:	9a 81       	ldd	r25, Y+2	; 0x02
    4d84:	ab 81       	ldd	r26, Y+3	; 0x03
    4d86:	bc 81       	ldd	r27, Y+4	; 0x04
    4d88:	18 16       	cp	r1, r24
    4d8a:	19 06       	cpc	r1, r25
    4d8c:	1a 06       	cpc	r1, r26
    4d8e:	1b 06       	cpc	r1, r27
    4d90:	0c f0       	brlt	.+2      	; 0x4d94 <_Z12eventEnabledv+0x60>
    4d92:	20 e0       	ldi	r18, 0x00	; 0
    4d94:	2d 83       	std	Y+5, r18	; 0x05
    4d96:	ce 01       	movw	r24, r28
    4d98:	06 96       	adiw	r24, 0x06	; 6
    4d9a:	0e 94 ae 05 	call	0xb5c	; 0xb5c <time>
    4d9e:	20 91 c0 47 	lds	r18, 0x47C0	; 0x8047c0 <g_event_finish_epoch>
    4da2:	30 91 c1 47 	lds	r19, 0x47C1	; 0x8047c1 <g_event_finish_epoch+0x1>
    4da6:	40 91 c2 47 	lds	r20, 0x47C2	; 0x8047c2 <g_event_finish_epoch+0x2>
    4daa:	50 91 c3 47 	lds	r21, 0x47C3	; 0x8047c3 <g_event_finish_epoch+0x3>
    4dae:	8e 81       	ldd	r24, Y+6	; 0x06
    4db0:	9f 81       	ldd	r25, Y+7	; 0x07
    4db2:	a8 85       	ldd	r26, Y+8	; 0x08
    4db4:	b9 85       	ldd	r27, Y+9	; 0x09
    4db6:	bc 01       	movw	r22, r24
    4db8:	cd 01       	movw	r24, r26
    4dba:	0e 94 83 6b 	call	0xd706	; 0xd706 <_Z7timeDifmm>
    4dbe:	dc 01       	movw	r26, r24
    4dc0:	cb 01       	movw	r24, r22
    4dc2:	89 83       	std	Y+1, r24	; 0x01
    4dc4:	9a 83       	std	Y+2, r25	; 0x02
    4dc6:	ab 83       	std	Y+3, r26	; 0x03
    4dc8:	bc 83       	std	Y+4, r27	; 0x04
    4dca:	89 81       	ldd	r24, Y+1	; 0x01
    4dcc:	9a 81       	ldd	r25, Y+2	; 0x02
    4dce:	ab 81       	ldd	r26, Y+3	; 0x03
    4dd0:	bc 81       	ldd	r27, Y+4	; 0x04
    4dd2:	bb 23       	and	r27, r27
    4dd4:	2c f0       	brlt	.+10     	; 0x4de0 <_Z12eventEnabledv+0xac>
    4dd6:	8d 81       	ldd	r24, Y+5	; 0x05
    4dd8:	88 23       	and	r24, r24
    4dda:	11 f0       	breq	.+4      	; 0x4de0 <_Z12eventEnabledv+0xac>
    4ddc:	80 e0       	ldi	r24, 0x00	; 0
    4dde:	4a c0       	rjmp	.+148    	; 0x4e74 <_Z12eventEnabledv+0x140>
    4de0:	20 91 bc 47 	lds	r18, 0x47BC	; 0x8047bc <g_event_start_epoch>
    4de4:	30 91 bd 47 	lds	r19, 0x47BD	; 0x8047bd <g_event_start_epoch+0x1>
    4de8:	40 91 be 47 	lds	r20, 0x47BE	; 0x8047be <g_event_start_epoch+0x2>
    4dec:	50 91 bf 47 	lds	r21, 0x47BF	; 0x8047bf <g_event_start_epoch+0x3>
    4df0:	8e 81       	ldd	r24, Y+6	; 0x06
    4df2:	9f 81       	ldd	r25, Y+7	; 0x07
    4df4:	a8 85       	ldd	r26, Y+8	; 0x08
    4df6:	b9 85       	ldd	r27, Y+9	; 0x09
    4df8:	bc 01       	movw	r22, r24
    4dfa:	cd 01       	movw	r24, r26
    4dfc:	0e 94 83 6b 	call	0xd706	; 0xd706 <_Z7timeDifmm>
    4e00:	dc 01       	movw	r26, r24
    4e02:	cb 01       	movw	r24, r22
    4e04:	89 83       	std	Y+1, r24	; 0x01
    4e06:	9a 83       	std	Y+2, r25	; 0x02
    4e08:	ab 83       	std	Y+3, r26	; 0x03
    4e0a:	bc 83       	std	Y+4, r27	; 0x04
    4e0c:	89 81       	ldd	r24, Y+1	; 0x01
    4e0e:	9a 81       	ldd	r25, Y+2	; 0x02
    4e10:	ab 81       	ldd	r26, Y+3	; 0x03
    4e12:	bc 81       	ldd	r27, Y+4	; 0x04
    4e14:	84 3c       	cpi	r24, 0xC4	; 196
    4e16:	9f 4f       	sbci	r25, 0xFF	; 255
    4e18:	af 4f       	sbci	r26, 0xFF	; 255
    4e1a:	bf 4f       	sbci	r27, 0xFF	; 255
    4e1c:	64 f0       	brlt	.+24     	; 0x4e36 <_Z12eventEnabledv+0x102>
    4e1e:	10 92 8d 47 	sts	0x478D, r1	; 0x80478d <_ZL11g_sleepType>
    4e22:	10 92 17 40 	sts	0x4017, r1	; 0x804017 <_ZL18g_seconds_to_sleep>
    4e26:	10 92 18 40 	sts	0x4018, r1	; 0x804018 <_ZL18g_seconds_to_sleep+0x1>
    4e2a:	10 92 19 40 	sts	0x4019, r1	; 0x804019 <_ZL18g_seconds_to_sleep+0x2>
    4e2e:	10 92 1a 40 	sts	0x401A, r1	; 0x80401a <_ZL18g_seconds_to_sleep+0x3>
    4e32:	81 e0       	ldi	r24, 0x01	; 1
    4e34:	1f c0       	rjmp	.+62     	; 0x4e74 <_Z12eventEnabledv+0x140>
    4e36:	24 ec       	ldi	r18, 0xC4	; 196
    4e38:	3f ef       	ldi	r19, 0xFF	; 255
    4e3a:	4f ef       	ldi	r20, 0xFF	; 255
    4e3c:	5f ef       	ldi	r21, 0xFF	; 255
    4e3e:	89 81       	ldd	r24, Y+1	; 0x01
    4e40:	9a 81       	ldd	r25, Y+2	; 0x02
    4e42:	ab 81       	ldd	r26, Y+3	; 0x03
    4e44:	bc 81       	ldd	r27, Y+4	; 0x04
    4e46:	79 01       	movw	r14, r18
    4e48:	8a 01       	movw	r16, r20
    4e4a:	e8 1a       	sub	r14, r24
    4e4c:	f9 0a       	sbc	r15, r25
    4e4e:	0a 0b       	sbc	r16, r26
    4e50:	1b 0b       	sbc	r17, r27
    4e52:	d8 01       	movw	r26, r16
    4e54:	c7 01       	movw	r24, r14
    4e56:	80 93 17 40 	sts	0x4017, r24	; 0x804017 <_ZL18g_seconds_to_sleep>
    4e5a:	90 93 18 40 	sts	0x4018, r25	; 0x804018 <_ZL18g_seconds_to_sleep+0x1>
    4e5e:	a0 93 19 40 	sts	0x4019, r26	; 0x804019 <_ZL18g_seconds_to_sleep+0x2>
    4e62:	b0 93 1a 40 	sts	0x401A, r27	; 0x80401a <_ZL18g_seconds_to_sleep+0x3>
    4e66:	81 e0       	ldi	r24, 0x01	; 1
    4e68:	80 93 8d 47 	sts	0x478D, r24	; 0x80478d <_ZL11g_sleepType>
    4e6c:	81 e0       	ldi	r24, 0x01	; 1
    4e6e:	80 93 c8 47 	sts	0x47C8, r24	; 0x8047c8 <_ZL13g_go_to_sleep>
    4e72:	81 e0       	ldi	r24, 0x01	; 1
    4e74:	29 96       	adiw	r28, 0x09	; 9
    4e76:	cd bf       	out	0x3d, r28	; 61
    4e78:	de bf       	out	0x3e, r29	; 62
    4e7a:	df 91       	pop	r29
    4e7c:	cf 91       	pop	r28
    4e7e:	1f 91       	pop	r17
    4e80:	0f 91       	pop	r16
    4e82:	ff 90       	pop	r15
    4e84:	ef 90       	pop	r14
    4e86:	08 95       	ret

00004e88 <_Z8wdt_init7WDReset>:
    4e88:	cf 93       	push	r28
    4e8a:	df 93       	push	r29
    4e8c:	1f 92       	push	r1
    4e8e:	cd b7       	in	r28, 0x3d	; 61
    4e90:	de b7       	in	r29, 0x3e	; 62
    4e92:	89 83       	std	Y+1, r24	; 0x01
    4e94:	00 00       	nop
    4e96:	0f 90       	pop	r0
    4e98:	df 91       	pop	r29
    4e9a:	cf 91       	pop	r28
    4e9c:	08 95       	ret

00004e9e <_Z13throttleValueh>:
    4e9e:	cf 93       	push	r28
    4ea0:	df 93       	push	r29
    4ea2:	cd b7       	in	r28, 0x3d	; 61
    4ea4:	de b7       	in	r29, 0x3e	; 62
    4ea6:	2a 97       	sbiw	r28, 0x0a	; 10
    4ea8:	cd bf       	out	0x3d, r28	; 61
    4eaa:	de bf       	out	0x3e, r29	; 62
    4eac:	8a 87       	std	Y+10, r24	; 0x0a
    4eae:	8a 85       	ldd	r24, Y+10	; 0x0a
    4eb0:	89 83       	std	Y+1, r24	; 0x01
    4eb2:	85 e0       	ldi	r24, 0x05	; 5
    4eb4:	90 e0       	ldi	r25, 0x00	; 0
    4eb6:	8a 83       	std	Y+2, r24	; 0x02
    4eb8:	9b 83       	std	Y+3, r25	; 0x03
    4eba:	84 e1       	ldi	r24, 0x14	; 20
    4ebc:	90 e0       	ldi	r25, 0x00	; 0
    4ebe:	8c 83       	std	Y+4, r24	; 0x04
    4ec0:	9d 83       	std	Y+5, r25	; 0x05
    4ec2:	89 81       	ldd	r24, Y+1	; 0x01
    4ec4:	28 2f       	mov	r18, r24
    4ec6:	88 0f       	add	r24, r24
    4ec8:	33 0b       	sbc	r19, r19
    4eca:	8c 81       	ldd	r24, Y+4	; 0x04
    4ecc:	9d 81       	ldd	r25, Y+5	; 0x05
    4ece:	82 17       	cp	r24, r18
    4ed0:	93 07       	cpc	r25, r19
    4ed2:	5c f0       	brlt	.+22     	; 0x4eea <_Z13throttleValueh+0x4c>
    4ed4:	89 81       	ldd	r24, Y+1	; 0x01
    4ed6:	08 2e       	mov	r0, r24
    4ed8:	00 0c       	add	r0, r0
    4eda:	99 0b       	sbc	r25, r25
    4edc:	2a 81       	ldd	r18, Y+2	; 0x02
    4ede:	3b 81       	ldd	r19, Y+3	; 0x03
    4ee0:	82 17       	cp	r24, r18
    4ee2:	93 07       	cpc	r25, r19
    4ee4:	24 f4       	brge	.+8      	; 0x4eee <_Z13throttleValueh+0x50>
    4ee6:	c9 01       	movw	r24, r18
    4ee8:	02 c0       	rjmp	.+4      	; 0x4eee <_Z13throttleValueh+0x50>
    4eea:	8c 81       	ldd	r24, Y+4	; 0x04
    4eec:	9d 81       	ldd	r25, Y+5	; 0x05
    4eee:	8a 87       	std	Y+10, r24	; 0x0a
    4ef0:	8a 85       	ldd	r24, Y+10	; 0x0a
    4ef2:	28 2f       	mov	r18, r24
    4ef4:	30 e0       	ldi	r19, 0x00	; 0
    4ef6:	40 e0       	ldi	r20, 0x00	; 0
    4ef8:	50 e0       	ldi	r21, 0x00	; 0
    4efa:	82 ec       	ldi	r24, 0xC2	; 194
    4efc:	91 e0       	ldi	r25, 0x01	; 1
    4efe:	a0 e0       	ldi	r26, 0x00	; 0
    4f00:	b0 e0       	ldi	r27, 0x00	; 0
    4f02:	bc 01       	movw	r22, r24
    4f04:	cd 01       	movw	r24, r26
    4f06:	0e 94 24 72 	call	0xe448	; 0xe448 <__divmodsi4>
    4f0a:	da 01       	movw	r26, r20
    4f0c:	c9 01       	movw	r24, r18
    4f0e:	bc 01       	movw	r22, r24
    4f10:	cd 01       	movw	r24, r26
    4f12:	0e 94 67 70 	call	0xe0ce	; 0xe0ce <__floatsisf>
    4f16:	dc 01       	movw	r26, r24
    4f18:	cb 01       	movw	r24, r22
    4f1a:	8e 83       	std	Y+6, r24	; 0x06
    4f1c:	9f 83       	std	Y+7, r25	; 0x07
    4f1e:	a8 87       	std	Y+8, r26	; 0x08
    4f20:	b9 87       	std	Y+9, r27	; 0x09
    4f22:	6e 81       	ldd	r22, Y+6	; 0x06
    4f24:	7f 81       	ldd	r23, Y+7	; 0x07
    4f26:	88 85       	ldd	r24, Y+8	; 0x08
    4f28:	99 85       	ldd	r25, Y+9	; 0x09
    4f2a:	0e 94 36 70 	call	0xe06c	; 0xe06c <__fixunssfsi>
    4f2e:	dc 01       	movw	r26, r24
    4f30:	cb 01       	movw	r24, r22
    4f32:	2a 96       	adiw	r28, 0x0a	; 10
    4f34:	cd bf       	out	0x3d, r28	; 61
    4f36:	de bf       	out	0x3e, r29	; 62
    4f38:	df 91       	pop	r29
    4f3a:	cf 91       	pop	r28
    4f3c:	08 95       	ret

00004f3e <_Z11launchEventP2SC>:
    4f3e:	cf 93       	push	r28
    4f40:	df 93       	push	r29
    4f42:	00 d0       	rcall	.+0      	; 0x4f44 <_Z11launchEventP2SC+0x6>
    4f44:	1f 92       	push	r1
    4f46:	cd b7       	in	r28, 0x3d	; 61
    4f48:	de b7       	in	r29, 0x3e	; 62
    4f4a:	8a 83       	std	Y+2, r24	; 0x02
    4f4c:	9b 83       	std	Y+3, r25	; 0x03
    4f4e:	8a 81       	ldd	r24, Y+2	; 0x02
    4f50:	9b 81       	ldd	r25, Y+3	; 0x03
    4f52:	0e 94 ca 27 	call	0x4f94	; 0x4f94 <_Z33activateEventUsingCurrentSettingsP2SC>
    4f56:	89 83       	std	Y+1, r24	; 0x01
    4f58:	8a 81       	ldd	r24, Y+2	; 0x02
    4f5a:	9b 81       	ldd	r25, Y+3	; 0x03
    4f5c:	fc 01       	movw	r30, r24
    4f5e:	80 81       	ld	r24, Z
    4f60:	88 23       	and	r24, r24
    4f62:	31 f0       	breq	.+12     	; 0x4f70 <_Z11launchEventP2SC+0x32>
    4f64:	8a 81       	ldd	r24, Y+2	; 0x02
    4f66:	9b 81       	ldd	r25, Y+3	; 0x03
    4f68:	fc 01       	movw	r30, r24
    4f6a:	80 81       	ld	r24, Z
    4f6c:	80 93 7c 47 	sts	0x477C, r24	; 0x80477c <_ZL18g_last_status_code>
    4f70:	89 81       	ldd	r24, Y+1	; 0x01
    4f72:	88 23       	and	r24, r24
    4f74:	21 f0       	breq	.+8      	; 0x4f7e <_Z11launchEventP2SC+0x40>
    4f76:	89 81       	ldd	r24, Y+1	; 0x01
    4f78:	80 93 7b 47 	sts	0x477B, r24	; 0x80477b <_ZL17g_last_error_code>
    4f7c:	04 c0       	rjmp	.+8      	; 0x4f86 <_Z11launchEventP2SC+0x48>
    4f7e:	0e 94 9a 26 	call	0x4d34	; 0x4d34 <_Z12eventEnabledv>
    4f82:	80 93 c4 47 	sts	0x47C4, r24	; 0x8047c4 <g_event_enabled>
    4f86:	89 81       	ldd	r24, Y+1	; 0x01
    4f88:	23 96       	adiw	r28, 0x03	; 3
    4f8a:	cd bf       	out	0x3d, r28	; 61
    4f8c:	de bf       	out	0x3e, r29	; 62
    4f8e:	df 91       	pop	r29
    4f90:	cf 91       	pop	r28
    4f92:	08 95       	ret

00004f94 <_Z33activateEventUsingCurrentSettingsP2SC>:
    4f94:	cf 93       	push	r28
    4f96:	df 93       	push	r29
    4f98:	cd b7       	in	r28, 0x3d	; 61
    4f9a:	de b7       	in	r29, 0x3e	; 62
    4f9c:	63 97       	sbiw	r28, 0x13	; 19
    4f9e:	cd bf       	out	0x3d, r28	; 61
    4fa0:	de bf       	out	0x3e, r29	; 62
    4fa2:	8a 8b       	std	Y+18, r24	; 0x12
    4fa4:	9b 8b       	std	Y+19, r25	; 0x13
    4fa6:	80 91 bc 47 	lds	r24, 0x47BC	; 0x8047bc <g_event_start_epoch>
    4faa:	90 91 bd 47 	lds	r25, 0x47BD	; 0x8047bd <g_event_start_epoch+0x1>
    4fae:	a0 91 be 47 	lds	r26, 0x47BE	; 0x8047be <g_event_start_epoch+0x2>
    4fb2:	b0 91 bf 47 	lds	r27, 0x47BF	; 0x8047bf <g_event_start_epoch+0x3>
    4fb6:	21 e0       	ldi	r18, 0x01	; 1
    4fb8:	89 2b       	or	r24, r25
    4fba:	8a 2b       	or	r24, r26
    4fbc:	8b 2b       	or	r24, r27
    4fbe:	09 f0       	breq	.+2      	; 0x4fc2 <_Z33activateEventUsingCurrentSettingsP2SC+0x2e>
    4fc0:	20 e0       	ldi	r18, 0x00	; 0
    4fc2:	22 23       	and	r18, r18
    4fc4:	11 f0       	breq	.+4      	; 0x4fca <_Z33activateEventUsingCurrentSettingsP2SC+0x36>
    4fc6:	8c ec       	ldi	r24, 0xCC	; 204
    4fc8:	1a c2       	rjmp	.+1076   	; 0x53fe <_Z33activateEventUsingCurrentSettingsP2SC+0x46a>
    4fca:	20 91 bc 47 	lds	r18, 0x47BC	; 0x8047bc <g_event_start_epoch>
    4fce:	30 91 bd 47 	lds	r19, 0x47BD	; 0x8047bd <g_event_start_epoch+0x1>
    4fd2:	40 91 be 47 	lds	r20, 0x47BE	; 0x8047be <g_event_start_epoch+0x2>
    4fd6:	50 91 bf 47 	lds	r21, 0x47BF	; 0x8047bf <g_event_start_epoch+0x3>
    4fda:	80 91 c0 47 	lds	r24, 0x47C0	; 0x8047c0 <g_event_finish_epoch>
    4fde:	90 91 c1 47 	lds	r25, 0x47C1	; 0x8047c1 <g_event_finish_epoch+0x1>
    4fe2:	a0 91 c2 47 	lds	r26, 0x47C2	; 0x8047c2 <g_event_finish_epoch+0x2>
    4fe6:	b0 91 c3 47 	lds	r27, 0x47C3	; 0x8047c3 <g_event_finish_epoch+0x3>
    4fea:	61 e0       	ldi	r22, 0x01	; 1
    4fec:	28 17       	cp	r18, r24
    4fee:	39 07       	cpc	r19, r25
    4ff0:	4a 07       	cpc	r20, r26
    4ff2:	5b 07       	cpc	r21, r27
    4ff4:	08 f4       	brcc	.+2      	; 0x4ff8 <_Z33activateEventUsingCurrentSettingsP2SC+0x64>
    4ff6:	60 e0       	ldi	r22, 0x00	; 0
    4ff8:	66 23       	and	r22, r22
    4ffa:	11 f0       	breq	.+4      	; 0x5000 <_Z33activateEventUsingCurrentSettingsP2SC+0x6c>
    4ffc:	8d ec       	ldi	r24, 0xCD	; 205
    4ffe:	ff c1       	rjmp	.+1022   	; 0x53fe <_Z33activateEventUsingCurrentSettingsP2SC+0x46a>
    5000:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    5004:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    5008:	21 e0       	ldi	r18, 0x01	; 1
    500a:	89 2b       	or	r24, r25
    500c:	09 f0       	breq	.+2      	; 0x5010 <_Z33activateEventUsingCurrentSettingsP2SC+0x7c>
    500e:	20 e0       	ldi	r18, 0x00	; 0
    5010:	22 23       	and	r18, r18
    5012:	11 f0       	breq	.+4      	; 0x5018 <_Z33activateEventUsingCurrentSettingsP2SC+0x84>
    5014:	8b ec       	ldi	r24, 0xCB	; 203
    5016:	f3 c1       	rjmp	.+998    	; 0x53fe <_Z33activateEventUsingCurrentSettingsP2SC+0x46a>
    5018:	20 91 0f 40 	lds	r18, 0x400F	; 0x80400f <g_off_air_seconds>
    501c:	30 91 10 40 	lds	r19, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    5020:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    5024:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    5028:	28 0f       	add	r18, r24
    502a:	39 1f       	adc	r19, r25
    502c:	80 91 ba 47 	lds	r24, 0x47BA	; 0x8047ba <g_intra_cycle_delay_time>
    5030:	90 91 bb 47 	lds	r25, 0x47BB	; 0x8047bb <g_intra_cycle_delay_time+0x1>
    5034:	41 e0       	ldi	r20, 0x01	; 1
    5036:	28 17       	cp	r18, r24
    5038:	39 07       	cpc	r19, r25
    503a:	0c f0       	brlt	.+2      	; 0x503e <_Z33activateEventUsingCurrentSettingsP2SC+0xaa>
    503c:	40 e0       	ldi	r20, 0x00	; 0
    503e:	44 23       	and	r20, r20
    5040:	11 f0       	breq	.+4      	; 0x5046 <_Z33activateEventUsingCurrentSettingsP2SC+0xb2>
    5042:	8a ec       	ldi	r24, 0xCA	; 202
    5044:	dc c1       	rjmp	.+952    	; 0x53fe <_Z33activateEventUsingCurrentSettingsP2SC+0x46a>
    5046:	80 91 8e 47 	lds	r24, 0x478E	; 0x80478e <g_messages_text>
    504a:	88 23       	and	r24, r24
    504c:	11 f4       	brne	.+4      	; 0x5052 <_Z33activateEventUsingCurrentSettingsP2SC+0xbe>
    504e:	89 ec       	ldi	r24, 0xC9	; 201
    5050:	d6 c1       	rjmp	.+940    	; 0x53fe <_Z33activateEventUsingCurrentSettingsP2SC+0x46a>
    5052:	90 91 0c 40 	lds	r25, 0x400C	; 0x80400c <g_pattern_codespeed>
    5056:	81 e0       	ldi	r24, 0x01	; 1
    5058:	99 23       	and	r25, r25
    505a:	09 f0       	breq	.+2      	; 0x505e <_Z33activateEventUsingCurrentSettingsP2SC+0xca>
    505c:	80 e0       	ldi	r24, 0x00	; 0
    505e:	88 23       	and	r24, r24
    5060:	11 f0       	breq	.+4      	; 0x5066 <_Z33activateEventUsingCurrentSettingsP2SC+0xd2>
    5062:	88 ec       	ldi	r24, 0xC8	; 200
    5064:	cc c1       	rjmp	.+920    	; 0x53fe <_Z33activateEventUsingCurrentSettingsP2SC+0x46a>
    5066:	80 91 a3 47 	lds	r24, 0x47A3	; 0x8047a3 <g_messages_text+0x15>
    506a:	88 23       	and	r24, r24
    506c:	91 f1       	breq	.+100    	; 0x50d2 <_Z33activateEventUsingCurrentSettingsP2SC+0x13e>
    506e:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    5072:	88 23       	and	r24, r24
    5074:	31 f0       	breq	.+12     	; 0x5082 <_Z33activateEventUsingCurrentSettingsP2SC+0xee>
    5076:	80 91 11 40 	lds	r24, 0x4011	; 0x804011 <g_ID_period_seconds>
    507a:	90 91 12 40 	lds	r25, 0x4012	; 0x804012 <g_ID_period_seconds+0x1>
    507e:	89 2b       	or	r24, r25
    5080:	11 f4       	brne	.+4      	; 0x5086 <_Z33activateEventUsingCurrentSettingsP2SC+0xf2>
    5082:	81 e0       	ldi	r24, 0x01	; 1
    5084:	01 c0       	rjmp	.+2      	; 0x5088 <_Z33activateEventUsingCurrentSettingsP2SC+0xf4>
    5086:	80 e0       	ldi	r24, 0x00	; 0
    5088:	88 23       	and	r24, r24
    508a:	11 f0       	breq	.+4      	; 0x5090 <_Z33activateEventUsingCurrentSettingsP2SC+0xfc>
    508c:	87 ec       	ldi	r24, 0xC7	; 199
    508e:	b7 c1       	rjmp	.+878    	; 0x53fe <_Z33activateEventUsingCurrentSettingsP2SC+0x46a>
    5090:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    5094:	88 2f       	mov	r24, r24
    5096:	90 e0       	ldi	r25, 0x00	; 0
    5098:	bc 01       	movw	r22, r24
    509a:	83 ea       	ldi	r24, 0xA3	; 163
    509c:	97 e4       	ldi	r25, 0x47	; 71
    509e:	0e 94 4b 54 	call	0xa896	; 0xa896 <_Z26timeRequiredToSendStrAtWPMPcj>
    50a2:	8c 50       	subi	r24, 0x0C	; 12
    50a4:	9e 4f       	sbci	r25, 0xFE	; 254
    50a6:	96 95       	lsr	r25
    50a8:	87 95       	ror	r24
    50aa:	96 95       	lsr	r25
    50ac:	87 95       	ror	r24
    50ae:	96 95       	lsr	r25
    50b0:	87 95       	ror	r24
    50b2:	9c 01       	movw	r18, r24
    50b4:	a5 ec       	ldi	r26, 0xC5	; 197
    50b6:	b0 e2       	ldi	r27, 0x20	; 32
    50b8:	0e 94 4c 72 	call	0xe498	; 0xe498 <__umulhisi3>
    50bc:	92 95       	swap	r25
    50be:	82 95       	swap	r24
    50c0:	8f 70       	andi	r24, 0x0F	; 15
    50c2:	89 27       	eor	r24, r25
    50c4:	9f 70       	andi	r25, 0x0F	; 15
    50c6:	89 27       	eor	r24, r25
    50c8:	80 93 b8 47 	sts	0x47B8, r24	; 0x8047b8 <g_time_needed_for_ID>
    50cc:	90 93 b9 47 	sts	0x47B9, r25	; 0x8047b9 <g_time_needed_for_ID+0x1>
    50d0:	04 c0       	rjmp	.+8      	; 0x50da <_Z33activateEventUsingCurrentSettingsP2SC+0x146>
    50d2:	10 92 b8 47 	sts	0x47B8, r1	; 0x8047b8 <g_time_needed_for_ID>
    50d6:	10 92 b9 47 	sts	0x47B9, r1	; 0x8047b9 <g_time_needed_for_ID+0x1>
    50da:	80 91 e4 47 	lds	r24, 0x47E4	; 0x8047e4 <g_current_epoch>
    50de:	90 91 e5 47 	lds	r25, 0x47E5	; 0x8047e5 <g_current_epoch+0x1>
    50e2:	a0 91 e6 47 	lds	r26, 0x47E6	; 0x8047e6 <g_current_epoch+0x2>
    50e6:	b0 91 e7 47 	lds	r27, 0x47E7	; 0x8047e7 <g_current_epoch+0x3>
    50ea:	8a 83       	std	Y+2, r24	; 0x02
    50ec:	9b 83       	std	Y+3, r25	; 0x03
    50ee:	ac 83       	std	Y+4, r26	; 0x04
    50f0:	bd 83       	std	Y+5, r27	; 0x05
    50f2:	20 91 c0 47 	lds	r18, 0x47C0	; 0x8047c0 <g_event_finish_epoch>
    50f6:	30 91 c1 47 	lds	r19, 0x47C1	; 0x8047c1 <g_event_finish_epoch+0x1>
    50fa:	40 91 c2 47 	lds	r20, 0x47C2	; 0x8047c2 <g_event_finish_epoch+0x2>
    50fe:	50 91 c3 47 	lds	r21, 0x47C3	; 0x8047c3 <g_event_finish_epoch+0x3>
    5102:	61 e0       	ldi	r22, 0x01	; 1
    5104:	8a 81       	ldd	r24, Y+2	; 0x02
    5106:	9b 81       	ldd	r25, Y+3	; 0x03
    5108:	ac 81       	ldd	r26, Y+4	; 0x04
    510a:	bd 81       	ldd	r27, Y+5	; 0x05
    510c:	28 17       	cp	r18, r24
    510e:	39 07       	cpc	r19, r25
    5110:	4a 07       	cpc	r20, r26
    5112:	5b 07       	cpc	r21, r27
    5114:	08 f0       	brcs	.+2      	; 0x5118 <_Z33activateEventUsingCurrentSettingsP2SC+0x184>
    5116:	60 e0       	ldi	r22, 0x00	; 0
    5118:	66 23       	and	r22, r22
    511a:	59 f0       	breq	.+22     	; 0x5132 <_Z33activateEventUsingCurrentSettingsP2SC+0x19e>
    511c:	8a 89       	ldd	r24, Y+18	; 0x12
    511e:	9b 89       	ldd	r25, Y+19	; 0x13
    5120:	89 2b       	or	r24, r25
    5122:	09 f4       	brne	.+2      	; 0x5126 <_Z33activateEventUsingCurrentSettingsP2SC+0x192>
    5124:	6b c1       	rjmp	.+726    	; 0x53fc <_Z33activateEventUsingCurrentSettingsP2SC+0x468>
    5126:	8a 89       	ldd	r24, Y+18	; 0x12
    5128:	9b 89       	ldd	r25, Y+19	; 0x13
    512a:	2a ef       	ldi	r18, 0xFA	; 250
    512c:	fc 01       	movw	r30, r24
    512e:	20 83       	st	Z, r18
    5130:	65 c1       	rjmp	.+714    	; 0x53fc <_Z33activateEventUsingCurrentSettingsP2SC+0x468>
    5132:	20 91 bc 47 	lds	r18, 0x47BC	; 0x8047bc <g_event_start_epoch>
    5136:	30 91 bd 47 	lds	r19, 0x47BD	; 0x8047bd <g_event_start_epoch+0x1>
    513a:	40 91 be 47 	lds	r20, 0x47BE	; 0x8047be <g_event_start_epoch+0x2>
    513e:	50 91 bf 47 	lds	r21, 0x47BF	; 0x8047bf <g_event_start_epoch+0x3>
    5142:	8a 81       	ldd	r24, Y+2	; 0x02
    5144:	9b 81       	ldd	r25, Y+3	; 0x03
    5146:	ac 81       	ldd	r26, Y+4	; 0x04
    5148:	bd 81       	ldd	r27, Y+5	; 0x05
    514a:	bc 01       	movw	r22, r24
    514c:	cd 01       	movw	r24, r26
    514e:	0e 94 83 6b 	call	0xd706	; 0xd706 <_Z7timeDifmm>
    5152:	dc 01       	movw	r26, r24
    5154:	cb 01       	movw	r24, r22
    5156:	8e 83       	std	Y+6, r24	; 0x06
    5158:	9f 83       	std	Y+7, r25	; 0x07
    515a:	a8 87       	std	Y+8, r26	; 0x08
    515c:	b9 87       	std	Y+9, r27	; 0x09
    515e:	8e 81       	ldd	r24, Y+6	; 0x06
    5160:	9f 81       	ldd	r25, Y+7	; 0x07
    5162:	a8 85       	ldd	r26, Y+8	; 0x08
    5164:	b9 85       	ldd	r27, Y+9	; 0x09
    5166:	bb 23       	and	r27, r27
    5168:	0c f4       	brge	.+2      	; 0x516c <_Z33activateEventUsingCurrentSettingsP2SC+0x1d8>
    516a:	34 c1       	rjmp	.+616    	; 0x53d4 <_Z33activateEventUsingCurrentSettingsP2SC+0x440>
    516c:	19 82       	std	Y+1, r1	; 0x01
    516e:	20 91 0d 40 	lds	r18, 0x400D	; 0x80400d <g_on_air_seconds>
    5172:	30 91 0e 40 	lds	r19, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    5176:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_off_air_seconds>
    517a:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    517e:	82 0f       	add	r24, r18
    5180:	93 1f       	adc	r25, r19
    5182:	8a 87       	std	Y+10, r24	; 0x0a
    5184:	9b 87       	std	Y+11, r25	; 0x0b
    5186:	8a 85       	ldd	r24, Y+10	; 0x0a
    5188:	9b 85       	ldd	r25, Y+11	; 0x0b
    518a:	9c 01       	movw	r18, r24
    518c:	99 0f       	add	r25, r25
    518e:	44 0b       	sbc	r20, r20
    5190:	55 0b       	sbc	r21, r21
    5192:	8e 81       	ldd	r24, Y+6	; 0x06
    5194:	9f 81       	ldd	r25, Y+7	; 0x07
    5196:	a8 85       	ldd	r26, Y+8	; 0x08
    5198:	b9 85       	ldd	r27, Y+9	; 0x09
    519a:	bc 01       	movw	r22, r24
    519c:	cd 01       	movw	r24, r26
    519e:	0e 94 24 72 	call	0xe448	; 0xe448 <__divmodsi4>
    51a2:	dc 01       	movw	r26, r24
    51a4:	cb 01       	movw	r24, r22
    51a6:	8c 87       	std	Y+12, r24	; 0x0c
    51a8:	9d 87       	std	Y+13, r25	; 0x0d
    51aa:	20 91 ba 47 	lds	r18, 0x47BA	; 0x8047ba <g_intra_cycle_delay_time>
    51ae:	30 91 bb 47 	lds	r19, 0x47BB	; 0x8047bb <g_intra_cycle_delay_time+0x1>
    51b2:	8c 85       	ldd	r24, Y+12	; 0x0c
    51b4:	9d 85       	ldd	r25, Y+13	; 0x0d
    51b6:	a9 01       	movw	r20, r18
    51b8:	48 1b       	sub	r20, r24
    51ba:	59 0b       	sbc	r21, r25
    51bc:	ca 01       	movw	r24, r20
    51be:	8e 87       	std	Y+14, r24	; 0x0e
    51c0:	9f 87       	std	Y+15, r25	; 0x0f
    51c2:	8e 85       	ldd	r24, Y+14	; 0x0e
    51c4:	9f 85       	ldd	r25, Y+15	; 0x0f
    51c6:	18 16       	cp	r1, r24
    51c8:	19 06       	cpc	r1, r25
    51ca:	0c f4       	brge	.+2      	; 0x51ce <_Z33activateEventUsingCurrentSettingsP2SC+0x23a>
    51cc:	a8 c0       	rjmp	.+336    	; 0x531e <_Z33activateEventUsingCurrentSettingsP2SC+0x38a>
    51ce:	8e 85       	ldd	r24, Y+14	; 0x0e
    51d0:	9f 85       	ldd	r25, Y+15	; 0x0f
    51d2:	22 27       	eor	r18, r18
    51d4:	33 27       	eor	r19, r19
    51d6:	28 1b       	sub	r18, r24
    51d8:	39 0b       	sbc	r19, r25
    51da:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    51de:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    51e2:	41 e0       	ldi	r20, 0x01	; 1
    51e4:	28 17       	cp	r18, r24
    51e6:	39 07       	cpc	r19, r25
    51e8:	0c f4       	brge	.+2      	; 0x51ec <_Z33activateEventUsingCurrentSettingsP2SC+0x258>
    51ea:	40 e0       	ldi	r20, 0x00	; 0
    51ec:	44 23       	and	r20, r20
    51ee:	09 f4       	brne	.+2      	; 0x51f2 <_Z33activateEventUsingCurrentSettingsP2SC+0x25e>
    51f0:	41 c0       	rjmp	.+130    	; 0x5274 <_Z33activateEventUsingCurrentSettingsP2SC+0x2e0>
    51f2:	2a 85       	ldd	r18, Y+10	; 0x0a
    51f4:	3b 85       	ldd	r19, Y+11	; 0x0b
    51f6:	8e 85       	ldd	r24, Y+14	; 0x0e
    51f8:	9f 85       	ldd	r25, Y+15	; 0x0f
    51fa:	82 0f       	add	r24, r18
    51fc:	93 1f       	adc	r25, r19
    51fe:	91 95       	neg	r25
    5200:	81 95       	neg	r24
    5202:	91 09       	sbc	r25, r1
    5204:	09 2e       	mov	r0, r25
    5206:	00 0c       	add	r0, r0
    5208:	aa 0b       	sbc	r26, r26
    520a:	bb 0b       	sbc	r27, r27
    520c:	80 93 84 47 	sts	0x4784, r24	; 0x804784 <_ZL12g_on_the_air>
    5210:	90 93 85 47 	sts	0x4785, r25	; 0x804785 <_ZL12g_on_the_air+0x1>
    5214:	a0 93 86 47 	sts	0x4786, r26	; 0x804786 <_ZL12g_on_the_air+0x2>
    5218:	b0 93 87 47 	sts	0x4787, r27	; 0x804787 <_ZL12g_on_the_air+0x3>
    521c:	8a 89       	ldd	r24, Y+18	; 0x12
    521e:	9b 89       	ldd	r25, Y+19	; 0x13
    5220:	89 2b       	or	r24, r25
    5222:	29 f0       	breq	.+10     	; 0x522e <_Z33activateEventUsingCurrentSettingsP2SC+0x29a>
    5224:	8a 89       	ldd	r24, Y+18	; 0x12
    5226:	9b 89       	ldd	r25, Y+19	; 0x13
    5228:	2e ef       	ldi	r18, 0xFE	; 254
    522a:	fc 01       	movw	r30, r24
    522c:	20 83       	st	Z, r18
    522e:	90 91 c4 47 	lds	r25, 0x47C4	; 0x8047c4 <g_event_enabled>
    5232:	81 e0       	ldi	r24, 0x01	; 1
    5234:	89 27       	eor	r24, r25
    5236:	88 23       	and	r24, r24
    5238:	09 f4       	brne	.+2      	; 0x523c <_Z33activateEventUsingCurrentSettingsP2SC+0x2a8>
    523a:	a6 c0       	rjmp	.+332    	; 0x5388 <_Z33activateEventUsingCurrentSettingsP2SC+0x3f4>
    523c:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    5240:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    5244:	9c 01       	movw	r18, r24
    5246:	80 91 84 47 	lds	r24, 0x4784	; 0x804784 <_ZL12g_on_the_air>
    524a:	90 91 85 47 	lds	r25, 0x4785	; 0x804785 <_ZL12g_on_the_air+0x1>
    524e:	a0 91 86 47 	lds	r26, 0x4786	; 0x804786 <_ZL12g_on_the_air+0x2>
    5252:	b0 91 87 47 	lds	r27, 0x4787	; 0x804787 <_ZL12g_on_the_air+0x3>
    5256:	28 1b       	sub	r18, r24
    5258:	39 0b       	sbc	r19, r25
    525a:	80 91 b8 47 	lds	r24, 0x47B8	; 0x8047b8 <g_time_needed_for_ID>
    525e:	90 91 b9 47 	lds	r25, 0x47B9	; 0x8047b9 <g_time_needed_for_ID+0x1>
    5262:	a9 01       	movw	r20, r18
    5264:	48 1b       	sub	r20, r24
    5266:	59 0b       	sbc	r21, r25
    5268:	ca 01       	movw	r24, r20
    526a:	80 93 88 47 	sts	0x4788, r24	; 0x804788 <_ZL26g_sendID_seconds_countdown>
    526e:	90 93 89 47 	sts	0x4789, r25	; 0x804789 <_ZL26g_sendID_seconds_countdown+0x1>
    5272:	8a c0       	rjmp	.+276    	; 0x5388 <_Z33activateEventUsingCurrentSettingsP2SC+0x3f4>
    5274:	20 91 0d 40 	lds	r18, 0x400D	; 0x80400d <g_on_air_seconds>
    5278:	30 91 0e 40 	lds	r19, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    527c:	8e 85       	ldd	r24, Y+14	; 0x0e
    527e:	9f 85       	ldd	r25, Y+15	; 0x0f
    5280:	82 0f       	add	r24, r18
    5282:	93 1f       	adc	r25, r19
    5284:	09 2e       	mov	r0, r25
    5286:	00 0c       	add	r0, r0
    5288:	aa 0b       	sbc	r26, r26
    528a:	bb 0b       	sbc	r27, r27
    528c:	80 93 84 47 	sts	0x4784, r24	; 0x804784 <_ZL12g_on_the_air>
    5290:	90 93 85 47 	sts	0x4785, r25	; 0x804785 <_ZL12g_on_the_air+0x1>
    5294:	a0 93 86 47 	sts	0x4786, r26	; 0x804786 <_ZL12g_on_the_air+0x2>
    5298:	b0 93 87 47 	sts	0x4787, r27	; 0x804787 <_ZL12g_on_the_air+0x3>
    529c:	81 e0       	ldi	r24, 0x01	; 1
    529e:	89 83       	std	Y+1, r24	; 0x01
    52a0:	8a 89       	ldd	r24, Y+18	; 0x12
    52a2:	9b 89       	ldd	r25, Y+19	; 0x13
    52a4:	89 2b       	or	r24, r25
    52a6:	29 f0       	breq	.+10     	; 0x52b2 <_Z33activateEventUsingCurrentSettingsP2SC+0x31e>
    52a8:	8a 89       	ldd	r24, Y+18	; 0x12
    52aa:	9b 89       	ldd	r25, Y+19	; 0x13
    52ac:	2d ef       	ldi	r18, 0xFD	; 253
    52ae:	fc 01       	movw	r30, r24
    52b0:	20 83       	st	Z, r18
    52b2:	90 91 c4 47 	lds	r25, 0x47C4	; 0x8047c4 <g_event_enabled>
    52b6:	81 e0       	ldi	r24, 0x01	; 1
    52b8:	89 27       	eor	r24, r25
    52ba:	88 23       	and	r24, r24
    52bc:	09 f4       	brne	.+2      	; 0x52c0 <_Z33activateEventUsingCurrentSettingsP2SC+0x32c>
    52be:	64 c0       	rjmp	.+200    	; 0x5388 <_Z33activateEventUsingCurrentSettingsP2SC+0x3f4>
    52c0:	80 91 b8 47 	lds	r24, 0x47B8	; 0x8047b8 <g_time_needed_for_ID>
    52c4:	90 91 b9 47 	lds	r25, 0x47B9	; 0x8047b9 <g_time_needed_for_ID+0x1>
    52c8:	9c 01       	movw	r18, r24
    52ca:	40 e0       	ldi	r20, 0x00	; 0
    52cc:	50 e0       	ldi	r21, 0x00	; 0
    52ce:	80 91 84 47 	lds	r24, 0x4784	; 0x804784 <_ZL12g_on_the_air>
    52d2:	90 91 85 47 	lds	r25, 0x4785	; 0x804785 <_ZL12g_on_the_air+0x1>
    52d6:	a0 91 86 47 	lds	r26, 0x4786	; 0x804786 <_ZL12g_on_the_air+0x2>
    52da:	b0 91 87 47 	lds	r27, 0x4787	; 0x804787 <_ZL12g_on_the_air+0x3>
    52de:	61 e0       	ldi	r22, 0x01	; 1
    52e0:	28 17       	cp	r18, r24
    52e2:	39 07       	cpc	r19, r25
    52e4:	4a 07       	cpc	r20, r26
    52e6:	5b 07       	cpc	r21, r27
    52e8:	0c f0       	brlt	.+2      	; 0x52ec <_Z33activateEventUsingCurrentSettingsP2SC+0x358>
    52ea:	60 e0       	ldi	r22, 0x00	; 0
    52ec:	66 23       	and	r22, r22
    52ee:	09 f4       	brne	.+2      	; 0x52f2 <_Z33activateEventUsingCurrentSettingsP2SC+0x35e>
    52f0:	4b c0       	rjmp	.+150    	; 0x5388 <_Z33activateEventUsingCurrentSettingsP2SC+0x3f4>
    52f2:	80 91 84 47 	lds	r24, 0x4784	; 0x804784 <_ZL12g_on_the_air>
    52f6:	90 91 85 47 	lds	r25, 0x4785	; 0x804785 <_ZL12g_on_the_air+0x1>
    52fa:	a0 91 86 47 	lds	r26, 0x4786	; 0x804786 <_ZL12g_on_the_air+0x2>
    52fe:	b0 91 87 47 	lds	r27, 0x4787	; 0x804787 <_ZL12g_on_the_air+0x3>
    5302:	9c 01       	movw	r18, r24
    5304:	80 91 b8 47 	lds	r24, 0x47B8	; 0x8047b8 <g_time_needed_for_ID>
    5308:	90 91 b9 47 	lds	r25, 0x47B9	; 0x8047b9 <g_time_needed_for_ID+0x1>
    530c:	a9 01       	movw	r20, r18
    530e:	48 1b       	sub	r20, r24
    5310:	59 0b       	sbc	r21, r25
    5312:	ca 01       	movw	r24, r20
    5314:	80 93 88 47 	sts	0x4788, r24	; 0x804788 <_ZL26g_sendID_seconds_countdown>
    5318:	90 93 89 47 	sts	0x4789, r25	; 0x804789 <_ZL26g_sendID_seconds_countdown+0x1>
    531c:	35 c0       	rjmp	.+106    	; 0x5388 <_Z33activateEventUsingCurrentSettingsP2SC+0x3f4>
    531e:	8e 85       	ldd	r24, Y+14	; 0x0e
    5320:	9f 85       	ldd	r25, Y+15	; 0x0f
    5322:	91 95       	neg	r25
    5324:	81 95       	neg	r24
    5326:	91 09       	sbc	r25, r1
    5328:	09 2e       	mov	r0, r25
    532a:	00 0c       	add	r0, r0
    532c:	aa 0b       	sbc	r26, r26
    532e:	bb 0b       	sbc	r27, r27
    5330:	80 93 84 47 	sts	0x4784, r24	; 0x804784 <_ZL12g_on_the_air>
    5334:	90 93 85 47 	sts	0x4785, r25	; 0x804785 <_ZL12g_on_the_air+0x1>
    5338:	a0 93 86 47 	sts	0x4786, r26	; 0x804786 <_ZL12g_on_the_air+0x2>
    533c:	b0 93 87 47 	sts	0x4787, r27	; 0x804787 <_ZL12g_on_the_air+0x3>
    5340:	8a 89       	ldd	r24, Y+18	; 0x12
    5342:	9b 89       	ldd	r25, Y+19	; 0x13
    5344:	89 2b       	or	r24, r25
    5346:	29 f0       	breq	.+10     	; 0x5352 <_Z33activateEventUsingCurrentSettingsP2SC+0x3be>
    5348:	8a 89       	ldd	r24, Y+18	; 0x12
    534a:	9b 89       	ldd	r25, Y+19	; 0x13
    534c:	2e ef       	ldi	r18, 0xFE	; 254
    534e:	fc 01       	movw	r30, r24
    5350:	20 83       	st	Z, r18
    5352:	90 91 c4 47 	lds	r25, 0x47C4	; 0x8047c4 <g_event_enabled>
    5356:	81 e0       	ldi	r24, 0x01	; 1
    5358:	89 27       	eor	r24, r25
    535a:	88 23       	and	r24, r24
    535c:	a9 f0       	breq	.+42     	; 0x5388 <_Z33activateEventUsingCurrentSettingsP2SC+0x3f4>
    535e:	20 91 0d 40 	lds	r18, 0x400D	; 0x80400d <g_on_air_seconds>
    5362:	30 91 0e 40 	lds	r19, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    5366:	8e 85       	ldd	r24, Y+14	; 0x0e
    5368:	9f 85       	ldd	r25, Y+15	; 0x0f
    536a:	82 0f       	add	r24, r18
    536c:	93 1f       	adc	r25, r19
    536e:	9c 01       	movw	r18, r24
    5370:	80 91 b8 47 	lds	r24, 0x47B8	; 0x8047b8 <g_time_needed_for_ID>
    5374:	90 91 b9 47 	lds	r25, 0x47B9	; 0x8047b9 <g_time_needed_for_ID+0x1>
    5378:	a9 01       	movw	r20, r18
    537a:	48 1b       	sub	r20, r24
    537c:	59 0b       	sbc	r21, r25
    537e:	ca 01       	movw	r24, r20
    5380:	80 93 88 47 	sts	0x4788, r24	; 0x804788 <_ZL26g_sendID_seconds_countdown>
    5384:	90 93 89 47 	sts	0x4789, r25	; 0x804789 <_ZL26g_sendID_seconds_countdown+0x1>
    5388:	89 81       	ldd	r24, Y+1	; 0x01
    538a:	88 23       	and	r24, r24
    538c:	e1 f0       	breq	.+56     	; 0x53c6 <_Z33activateEventUsingCurrentSettingsP2SC+0x432>
    538e:	80 91 c4 47 	lds	r24, 0x47C4	; 0x8047c4 <g_event_enabled>
    5392:	88 8b       	std	Y+16, r24	; 0x10
    5394:	10 92 c4 47 	sts	0x47C4, r1	; 0x8047c4 <g_event_enabled>
    5398:	81 e0       	ldi	r24, 0x01	; 1
    539a:	89 8b       	std	Y+17, r24	; 0x11
    539c:	ce 01       	movw	r24, r28
    539e:	41 96       	adiw	r24, 0x11	; 17
    53a0:	40 e0       	ldi	r20, 0x00	; 0
    53a2:	50 e0       	ldi	r21, 0x00	; 0
    53a4:	bc 01       	movw	r22, r24
    53a6:	8e e8       	ldi	r24, 0x8E	; 142
    53a8:	97 e4       	ldi	r25, 0x47	; 71
    53aa:	0e 94 f3 52 	call	0xa5e6	; 0xa5e6 <_Z9makeMorsePcPbS0_>
    53ae:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    53b2:	0e 94 4f 27 	call	0x4e9e	; 0x4e9e <_Z13throttleValueh>
    53b6:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    53ba:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    53be:	88 89       	ldd	r24, Y+16	; 0x10
    53c0:	80 93 c4 47 	sts	0x47C4, r24	; 0x8047c4 <g_event_enabled>
    53c4:	03 c0       	rjmp	.+6      	; 0x53cc <_Z33activateEventUsingCurrentSettingsP2SC+0x438>
    53c6:	80 e0       	ldi	r24, 0x00	; 0
    53c8:	0e 94 a0 67 	call	0xcf40	; 0xcf40 <_Z14keyTransmitterb>
    53cc:	81 e0       	ldi	r24, 0x01	; 1
    53ce:	80 93 c5 47 	sts	0x47C5, r24	; 0x8047c5 <g_event_commenced>
    53d2:	0c c0       	rjmp	.+24     	; 0x53ec <_Z33activateEventUsingCurrentSettingsP2SC+0x458>
    53d4:	8a 89       	ldd	r24, Y+18	; 0x12
    53d6:	9b 89       	ldd	r25, Y+19	; 0x13
    53d8:	89 2b       	or	r24, r25
    53da:	29 f0       	breq	.+10     	; 0x53e6 <_Z33activateEventUsingCurrentSettingsP2SC+0x452>
    53dc:	8a 89       	ldd	r24, Y+18	; 0x12
    53de:	9b 89       	ldd	r25, Y+19	; 0x13
    53e0:	2f ef       	ldi	r18, 0xFF	; 255
    53e2:	fc 01       	movw	r30, r24
    53e4:	20 83       	st	Z, r18
    53e6:	80 e0       	ldi	r24, 0x00	; 0
    53e8:	0e 94 a0 67 	call	0xcf40	; 0xcf40 <_Z14keyTransmitterb>
    53ec:	10 92 c7 47 	sts	0x47C7, r1	; 0x8047c7 <g_waiting_for_next_event>
    53f0:	8a e5       	ldi	r24, 0x5A	; 90
    53f2:	90 e0       	ldi	r25, 0x00	; 0
    53f4:	80 93 13 40 	sts	0x4013, r24	; 0x804013 <g_update_timeout_seconds>
    53f8:	90 93 14 40 	sts	0x4014, r25	; 0x804014 <g_update_timeout_seconds+0x1>
    53fc:	80 e0       	ldi	r24, 0x00	; 0
    53fe:	63 96       	adiw	r28, 0x13	; 19
    5400:	cd bf       	out	0x3d, r28	; 61
    5402:	de bf       	out	0x3e, r29	; 62
    5404:	df 91       	pop	r29
    5406:	cf 91       	pop	r28
    5408:	08 95       	ret

0000540a <_Z8rtc_initv>:
    540a:	cf 93       	push	r28
    540c:	df 93       	push	r29
    540e:	00 d0       	rcall	.+0      	; 0x5410 <_Z8rtc_initv+0x6>
    5410:	cd b7       	in	r28, 0x3d	; 61
    5412:	de b7       	in	r29, 0x3e	; 62
    5414:	61 e0       	ldi	r22, 0x01	; 1
    5416:	83 e0       	ldi	r24, 0x03	; 3
    5418:	0e 94 c2 0f 	call	0x1f84	; 0x1f84 <PORTC_set_pin_dir>
    541c:	19 82       	std	Y+1, r1	; 0x01
    541e:	1a 82       	std	Y+2, r1	; 0x02
    5420:	89 81       	ldd	r24, Y+1	; 0x01
    5422:	9a 81       	ldd	r25, Y+2	; 0x02
    5424:	c2 97       	sbiw	r24, 0x32	; 50
    5426:	04 f5       	brge	.+64     	; 0x5468 <_Z8rtc_initv+0x5e>
    5428:	60 e0       	ldi	r22, 0x00	; 0
    542a:	83 e0       	ldi	r24, 0x03	; 3
    542c:	0e 94 16 10 	call	0x202c	; 0x202c <PORTC_set_pin_level>
    5430:	64 e1       	ldi	r22, 0x14	; 20
    5432:	70 e0       	ldi	r23, 0x00	; 0
    5434:	80 e0       	ldi	r24, 0x00	; 0
    5436:	90 e0       	ldi	r25, 0x00	; 0
    5438:	0e 94 1e 66 	call	0xcc3c	; 0xcc3c <util_delay_ms>
    543c:	88 23       	and	r24, r24
    543e:	09 f0       	breq	.+2      	; 0x5442 <_Z8rtc_initv+0x38>
    5440:	f7 cf       	rjmp	.-18     	; 0x5430 <_Z8rtc_initv+0x26>
    5442:	61 e0       	ldi	r22, 0x01	; 1
    5444:	83 e0       	ldi	r24, 0x03	; 3
    5446:	0e 94 16 10 	call	0x202c	; 0x202c <PORTC_set_pin_level>
    544a:	64 e1       	ldi	r22, 0x14	; 20
    544c:	70 e0       	ldi	r23, 0x00	; 0
    544e:	80 e0       	ldi	r24, 0x00	; 0
    5450:	90 e0       	ldi	r25, 0x00	; 0
    5452:	0e 94 1e 66 	call	0xcc3c	; 0xcc3c <util_delay_ms>
    5456:	88 23       	and	r24, r24
    5458:	09 f0       	breq	.+2      	; 0x545c <_Z8rtc_initv+0x52>
    545a:	f7 cf       	rjmp	.-18     	; 0x544a <_Z8rtc_initv+0x40>
    545c:	89 81       	ldd	r24, Y+1	; 0x01
    545e:	9a 81       	ldd	r25, Y+2	; 0x02
    5460:	01 96       	adiw	r24, 0x01	; 1
    5462:	89 83       	std	Y+1, r24	; 0x01
    5464:	9a 83       	std	Y+2, r25	; 0x02
    5466:	dc cf       	rjmp	.-72     	; 0x5420 <_Z8rtc_initv+0x16>
    5468:	61 e0       	ldi	r22, 0x01	; 1
    546a:	83 e0       	ldi	r24, 0x03	; 3
    546c:	0e 94 91 0f 	call	0x1f22	; 0x1f22 <PORTC_set_pin_pull_mode>
    5470:	61 e0       	ldi	r22, 0x01	; 1
    5472:	82 e0       	ldi	r24, 0x02	; 2
    5474:	0e 94 91 0f 	call	0x1f22	; 0x1f22 <PORTC_set_pin_pull_mode>
    5478:	0e 94 83 3b 	call	0x7706	; 0x7706 <ds3231_init>
    547c:	81 e0       	ldi	r24, 0x01	; 1
    547e:	0e 94 72 41 	call	0x82e4	; 0x82e4 <ds3231_1s_sqw>
    5482:	88 23       	and	r24, r24
    5484:	11 f0       	breq	.+4      	; 0x548a <_Z8rtc_initv+0x80>
    5486:	8c ef       	ldi	r24, 0xFC	; 252
    5488:	01 c0       	rjmp	.+2      	; 0x548c <_Z8rtc_initv+0x82>
    548a:	80 e0       	ldi	r24, 0x00	; 0
    548c:	0f 90       	pop	r0
    548e:	0f 90       	pop	r0
    5490:	df 91       	pop	r29
    5492:	cf 91       	pop	r28
    5494:	08 95       	ret

00005496 <_Z18antennaIsConnectedv>:
    5496:	cf 93       	push	r28
    5498:	df 93       	push	r29
    549a:	1f 92       	push	r1
    549c:	cd b7       	in	r28, 0x3d	; 61
    549e:	de b7       	in	r29, 0x3e	; 62
    54a0:	81 e0       	ldi	r24, 0x01	; 1
    54a2:	0e 94 8e 10 	call	0x211c	; 0x211c <PORTD_get_pin_level>
    54a6:	89 83       	std	Y+1, r24	; 0x01
    54a8:	99 81       	ldd	r25, Y+1	; 0x01
    54aa:	81 e0       	ldi	r24, 0x01	; 1
    54ac:	89 27       	eor	r24, r25
    54ae:	0f 90       	pop	r0
    54b0:	df 91       	pop	r29
    54b2:	cf 91       	pop	r28
    54b4:	08 95       	ret

000054b6 <_Z12suspendEventv>:

void suspendEvent()
{
    54b6:	cf 93       	push	r28
    54b8:	df 93       	push	r29
    54ba:	cd b7       	in	r28, 0x3d	; 61
    54bc:	de b7       	in	r29, 0x3e	; 62
	
}
    54be:	00 00       	nop
    54c0:	df 91       	pop	r29
    54c2:	cf 91       	pop	r28
    54c4:	08 95       	ret

000054c6 <_Z13startEventNow19EventActionSource_t>:


void startEventNow(EventActionSource_t activationSource)
{
    54c6:	cf 93       	push	r28
    54c8:	df 93       	push	r29
    54ca:	00 d0       	rcall	.+0      	; 0x54cc <_Z13startEventNow19EventActionSource_t+0x6>
    54cc:	cd b7       	in	r28, 0x3d	; 61
    54ce:	de b7       	in	r29, 0x3e	; 62
    54d0:	8a 83       	std	Y+2, r24	; 0x02
	ConfigurationState_t conf = clockConfigurationCheck();
    54d2:	0e 94 41 31 	call	0x6282	; 0x6282 <_Z23clockConfigurationCheckv>
    54d6:	89 83       	std	Y+1, r24	; 0x01

	if(activationSource == POWER_UP)
    54d8:	8a 81       	ldd	r24, Y+2	; 0x02
    54da:	88 23       	and	r24, r24
    54dc:	79 f4       	brne	.+30     	; 0x54fc <_Z13startEventNow19EventActionSource_t+0x36>
	{
		if(conf == CONFIGURATION_ERROR)
    54de:	89 81       	ldd	r24, Y+1	; 0x01
    54e0:	82 30       	cpi	r24, 0x02	; 2
    54e2:	31 f4       	brne	.+12     	; 0x54f0 <_Z13startEventNow19EventActionSource_t+0x2a>
		{
			setupForFox(NULL, START_NOTHING);
    54e4:	60 e0       	ldi	r22, 0x00	; 0
    54e6:	80 e0       	ldi	r24, 0x00	; 0
    54e8:	90 e0       	ldi	r25, 0x00	; 0
    54ea:	0e 94 88 2b 	call	0x5710	; 0x5710 <_Z11setupForFoxP5Fox_t13EventAction_t>
			}
		}
	}

// 	g_LED_enunciating = false;
}
    54ee:	47 c0       	rjmp	.+142    	; 0x557e <_Z13startEventNow19EventActionSource_t+0xb8>
		{
			setupForFox(NULL, START_NOTHING);
		}
		else
		{
			setupForFox(NULL, START_EVENT_WITH_STARTFINISH_TIMES);
    54f0:	63 e0       	ldi	r22, 0x03	; 3
    54f2:	80 e0       	ldi	r24, 0x00	; 0
    54f4:	90 e0       	ldi	r25, 0x00	; 0
    54f6:	0e 94 88 2b 	call	0x5710	; 0x5710 <_Z11setupForFoxP5Fox_t13EventAction_t>
			}
		}
	}

// 	g_LED_enunciating = false;
}
    54fa:	41 c0       	rjmp	.+130    	; 0x557e <_Z13startEventNow19EventActionSource_t+0xb8>
		else
		{
			setupForFox(NULL, START_EVENT_WITH_STARTFINISH_TIMES);
		}
	}
	else if(activationSource == PROGRAMMATIC)
    54fc:	8a 81       	ldd	r24, Y+2	; 0x02
    54fe:	82 30       	cpi	r24, 0x02	; 2
    5500:	f1 f4       	brne	.+60     	; 0x553e <_Z13startEventNow19EventActionSource_t+0x78>
	{
		if(conf == CONFIGURATION_ERROR)                                                                                             /* Start immediately */
    5502:	89 81       	ldd	r24, Y+1	; 0x01
    5504:	82 30       	cpi	r24, 0x02	; 2
    5506:	31 f4       	brne	.+12     	; 0x5514 <_Z13startEventNow19EventActionSource_t+0x4e>
		{
			setupForFox(NULL, START_EVENT_NOW);
    5508:	61 e0       	ldi	r22, 0x01	; 1
    550a:	80 e0       	ldi	r24, 0x00	; 0
    550c:	90 e0       	ldi	r25, 0x00	; 0
    550e:	0e 94 88 2b 	call	0x5710	; 0x5710 <_Z11setupForFoxP5Fox_t13EventAction_t>
			}
		}
	}

// 	g_LED_enunciating = false;
}
    5512:	35 c0       	rjmp	.+106    	; 0x557e <_Z13startEventNow19EventActionSource_t+0xb8>
	{
		if(conf == CONFIGURATION_ERROR)                                                                                             /* Start immediately */
		{
			setupForFox(NULL, START_EVENT_NOW);
		}
		else if((conf == WAITING_FOR_START) || (conf == SCHEDULED_EVENT_WILL_NEVER_RUN) || (conf == SCHEDULED_EVENT_DID_NOT_START)) /* Start immediately */
    5514:	89 81       	ldd	r24, Y+1	; 0x01
    5516:	81 30       	cpi	r24, 0x01	; 1
    5518:	31 f0       	breq	.+12     	; 0x5526 <_Z13startEventNow19EventActionSource_t+0x60>
    551a:	89 81       	ldd	r24, Y+1	; 0x01
    551c:	84 30       	cpi	r24, 0x04	; 4
    551e:	19 f0       	breq	.+6      	; 0x5526 <_Z13startEventNow19EventActionSource_t+0x60>
    5520:	89 81       	ldd	r24, Y+1	; 0x01
    5522:	83 30       	cpi	r24, 0x03	; 3
    5524:	31 f4       	brne	.+12     	; 0x5532 <_Z13startEventNow19EventActionSource_t+0x6c>
		{
			setupForFox(NULL, START_EVENT_NOW);
    5526:	61 e0       	ldi	r22, 0x01	; 1
    5528:	80 e0       	ldi	r24, 0x00	; 0
    552a:	90 e0       	ldi	r25, 0x00	; 0
    552c:	0e 94 88 2b 	call	0x5710	; 0x5710 <_Z11setupForFoxP5Fox_t13EventAction_t>
			}
		}
	}

// 	g_LED_enunciating = false;
}
    5530:	26 c0       	rjmp	.+76     	; 0x557e <_Z13startEventNow19EventActionSource_t+0xb8>
		{
			setupForFox(NULL, START_EVENT_NOW);
		}
		else                                                                                                                        /*if((conf == EVENT_IN_PROGRESS) */
		{
			setupForFox(NULL, START_EVENT_WITH_STARTFINISH_TIMES);                                                                  /* Let the RTC start the event */
    5532:	63 e0       	ldi	r22, 0x03	; 3
    5534:	80 e0       	ldi	r24, 0x00	; 0
    5536:	90 e0       	ldi	r25, 0x00	; 0
    5538:	0e 94 88 2b 	call	0x5710	; 0x5710 <_Z11setupForFoxP5Fox_t13EventAction_t>
			}
		}
	}

// 	g_LED_enunciating = false;
}
    553c:	20 c0       	rjmp	.+64     	; 0x557e <_Z13startEventNow19EventActionSource_t+0xb8>
			setupForFox(NULL, START_EVENT_WITH_STARTFINISH_TIMES);                                                                  /* Let the RTC start the event */
		}
	}
	else                                                                                                                            /* PUSHBUTTON */
	{
		if(conf == CONFIGURATION_ERROR)                                                                                             /* No scheduled event */
    553e:	89 81       	ldd	r24, Y+1	; 0x01
    5540:	82 30       	cpi	r24, 0x02	; 2
    5542:	31 f4       	brne	.+12     	; 0x5550 <_Z13startEventNow19EventActionSource_t+0x8a>
		{
			setupForFox(NULL, START_EVENT_NOW);
    5544:	61 e0       	ldi	r22, 0x01	; 1
    5546:	80 e0       	ldi	r24, 0x00	; 0
    5548:	90 e0       	ldi	r25, 0x00	; 0
    554a:	0e 94 88 2b 	call	0x5710	; 0x5710 <_Z11setupForFoxP5Fox_t13EventAction_t>
			}
		}
	}

// 	g_LED_enunciating = false;
}
    554e:	17 c0       	rjmp	.+46     	; 0x557e <_Z13startEventNow19EventActionSource_t+0xb8>
		{
			setupForFox(NULL, START_EVENT_NOW);
		}
		else                                                                                                                        /* if(buttonActivated) */
		{
			if(conf == WAITING_FOR_START)
    5550:	89 81       	ldd	r24, Y+1	; 0x01
    5552:	81 30       	cpi	r24, 0x01	; 1
    5554:	31 f4       	brne	.+12     	; 0x5562 <_Z13startEventNow19EventActionSource_t+0x9c>
			{
				setupForFox(NULL, START_TRANSMISSIONS_NOW);                                                                         /* Start transmitting! */
    5556:	62 e0       	ldi	r22, 0x02	; 2
    5558:	80 e0       	ldi	r24, 0x00	; 0
    555a:	90 e0       	ldi	r25, 0x00	; 0
    555c:	0e 94 88 2b 	call	0x5710	; 0x5710 <_Z11setupForFoxP5Fox_t13EventAction_t>
			}
		}
	}

// 	g_LED_enunciating = false;
}
    5560:	0e c0       	rjmp	.+28     	; 0x557e <_Z13startEventNow19EventActionSource_t+0xb8>
		{
			if(conf == WAITING_FOR_START)
			{
				setupForFox(NULL, START_TRANSMISSIONS_NOW);                                                                         /* Start transmitting! */
			}
			else if(conf == SCHEDULED_EVENT_WILL_NEVER_RUN)
    5562:	89 81       	ldd	r24, Y+1	; 0x01
    5564:	84 30       	cpi	r24, 0x04	; 4
    5566:	31 f4       	brne	.+12     	; 0x5574 <_Z13startEventNow19EventActionSource_t+0xae>
			{
				setupForFox(NULL, START_EVENT_WITH_STARTFINISH_TIMES);                                                              /* rtc starts the event */
    5568:	63 e0       	ldi	r22, 0x03	; 3
    556a:	80 e0       	ldi	r24, 0x00	; 0
    556c:	90 e0       	ldi	r25, 0x00	; 0
    556e:	0e 94 88 2b 	call	0x5710	; 0x5710 <_Z11setupForFoxP5Fox_t13EventAction_t>
			}
		}
	}

// 	g_LED_enunciating = false;
}
    5572:	05 c0       	rjmp	.+10     	; 0x557e <_Z13startEventNow19EventActionSource_t+0xb8>
			{
				setupForFox(NULL, START_EVENT_WITH_STARTFINISH_TIMES);                                                              /* rtc starts the event */
			}
			else                                                                                                                    /* Event should be running now */
			{
				setupForFox(NULL, START_EVENT_WITH_STARTFINISH_TIMES);                                                              /* start the running event */
    5574:	63 e0       	ldi	r22, 0x03	; 3
    5576:	80 e0       	ldi	r24, 0x00	; 0
    5578:	90 e0       	ldi	r25, 0x00	; 0
    557a:	0e 94 88 2b 	call	0x5710	; 0x5710 <_Z11setupForFoxP5Fox_t13EventAction_t>
			}
		}
	}

// 	g_LED_enunciating = false;
}
    557e:	00 00       	nop
    5580:	0f 90       	pop	r0
    5582:	0f 90       	pop	r0
    5584:	df 91       	pop	r29
    5586:	cf 91       	pop	r28
    5588:	08 95       	ret

0000558a <_Z12stopEventNow19EventActionSource_t>:

void stopEventNow(EventActionSource_t activationSource)
{
    558a:	cf 93       	push	r28
    558c:	df 93       	push	r29
    558e:	00 d0       	rcall	.+0      	; 0x5590 <_Z12stopEventNow19EventActionSource_t+0x6>
    5590:	cd b7       	in	r28, 0x3d	; 61
    5592:	de b7       	in	r29, 0x3e	; 62
    5594:	8a 83       	std	Y+2, r24	; 0x02
	ConfigurationState_t conf = clockConfigurationCheck();
    5596:	0e 94 41 31 	call	0x6282	; 0x6282 <_Z23clockConfigurationCheckv>
    559a:	89 83       	std	Y+1, r24	; 0x01

	if(activationSource == PROGRAMMATIC)
    559c:	8a 81       	ldd	r24, Y+2	; 0x02
    559e:	82 30       	cpi	r24, 0x02	; 2
    55a0:	31 f4       	brne	.+12     	; 0x55ae <_Z12stopEventNow19EventActionSource_t+0x24>
	{
		setupForFox(NULL, START_NOTHING);
    55a2:	60 e0       	ldi	r22, 0x00	; 0
    55a4:	80 e0       	ldi	r24, 0x00	; 0
    55a6:	90 e0       	ldi	r25, 0x00	; 0
    55a8:	0e 94 88 2b 	call	0x5710	; 0x5710 <_Z11setupForFoxP5Fox_t13EventAction_t>

// 	if(g_sync_pin_stable == STABLE_LOW)
// 	{
// 		digitalWrite(PIN_LED, OFF); /*  LED Off */
// 	}
}
    55ac:	16 c0       	rjmp	.+44     	; 0x55da <_Z12stopEventNow19EventActionSource_t+0x50>
	{
		setupForFox(NULL, START_NOTHING);
	}
	else    /* if(activationSource == PUSHBUTTON) */
	{
		if(conf == WAITING_FOR_START)
    55ae:	89 81       	ldd	r24, Y+1	; 0x01
    55b0:	81 30       	cpi	r24, 0x01	; 1
    55b2:	29 f4       	brne	.+10     	; 0x55be <_Z12stopEventNow19EventActionSource_t+0x34>
		{
			setupForFox(NULL, START_TRANSMISSIONS_NOW);
    55b4:	62 e0       	ldi	r22, 0x02	; 2
    55b6:	80 e0       	ldi	r24, 0x00	; 0
    55b8:	90 e0       	ldi	r25, 0x00	; 0
    55ba:	0e 94 88 2b 	call	0x5710	; 0x5710 <_Z11setupForFoxP5Fox_t13EventAction_t>
		}
		if(conf == SCHEDULED_EVENT_WILL_NEVER_RUN)
    55be:	89 81       	ldd	r24, Y+1	; 0x01
    55c0:	84 30       	cpi	r24, 0x04	; 4
    55c2:	31 f4       	brne	.+12     	; 0x55d0 <_Z12stopEventNow19EventActionSource_t+0x46>
		{
			setupForFox(NULL, START_NOTHING);
    55c4:	60 e0       	ldi	r22, 0x00	; 0
    55c6:	80 e0       	ldi	r24, 0x00	; 0
    55c8:	90 e0       	ldi	r25, 0x00	; 0
    55ca:	0e 94 88 2b 	call	0x5710	; 0x5710 <_Z11setupForFoxP5Fox_t13EventAction_t>

// 	if(g_sync_pin_stable == STABLE_LOW)
// 	{
// 		digitalWrite(PIN_LED, OFF); /*  LED Off */
// 	}
}
    55ce:	05 c0       	rjmp	.+10     	; 0x55da <_Z12stopEventNow19EventActionSource_t+0x50>
		{
			setupForFox(NULL, START_NOTHING);
		}
		else    /*if(conf == CONFIGURATION_ERROR) */
		{
			setupForFox(NULL, START_NOTHING);
    55d0:	60 e0       	ldi	r22, 0x00	; 0
    55d2:	80 e0       	ldi	r24, 0x00	; 0
    55d4:	90 e0       	ldi	r25, 0x00	; 0
    55d6:	0e 94 88 2b 	call	0x5710	; 0x5710 <_Z11setupForFoxP5Fox_t13EventAction_t>

// 	if(g_sync_pin_stable == STABLE_LOW)
// 	{
// 		digitalWrite(PIN_LED, OFF); /*  LED Off */
// 	}
}
    55da:	00 00       	nop
    55dc:	0f 90       	pop	r0
    55de:	0f 90       	pop	r0
    55e0:	df 91       	pop	r29
    55e2:	cf 91       	pop	r28
    55e4:	08 95       	ret

000055e6 <_Z18startEventUsingRTCv>:

void startEventUsingRTC(void)
{
    55e6:	ef 92       	push	r14
    55e8:	ff 92       	push	r15
    55ea:	0f 93       	push	r16
    55ec:	1f 93       	push	r17
    55ee:	cf 93       	push	r28
    55f0:	df 93       	push	r29
    55f2:	1f 92       	push	r1
    55f4:	cd b7       	in	r28, 0x3d	; 61
    55f6:	de b7       	in	r29, 0x3e	; 62
	g_current_epoch = ds3231_get_epoch(null);
    55f8:	80 e0       	ldi	r24, 0x00	; 0
    55fa:	90 e0       	ldi	r25, 0x00	; 0
    55fc:	0e 94 b2 3d 	call	0x7b64	; 0x7b64 <ds3231_get_epoch>
    5600:	dc 01       	movw	r26, r24
    5602:	cb 01       	movw	r24, r22
    5604:	80 93 e4 47 	sts	0x47E4, r24	; 0x8047e4 <g_current_epoch>
    5608:	90 93 e5 47 	sts	0x47E5, r25	; 0x8047e5 <g_current_epoch+0x1>
    560c:	a0 93 e6 47 	sts	0x47E6, r26	; 0x8047e6 <g_current_epoch+0x2>
    5610:	b0 93 e7 47 	sts	0x47E7, r27	; 0x8047e7 <g_current_epoch+0x3>
	ConfigurationState_t state = clockConfigurationCheck();
    5614:	0e 94 41 31 	call	0x6282	; 0x6282 <_Z23clockConfigurationCheckv>
    5618:	89 83       	std	Y+1, r24	; 0x01

	if(state != CONFIGURATION_ERROR)
    561a:	89 81       	ldd	r24, Y+1	; 0x01
    561c:	82 30       	cpi	r24, 0x02	; 2
    561e:	09 f4       	brne	.+2      	; 0x5622 <_Z18startEventUsingRTCv+0x3c>
    5620:	6c c0       	rjmp	.+216    	; 0x56fa <_Z18startEventUsingRTCv+0x114>
	{
		setupForFox(NULL, START_EVENT_WITH_STARTFINISH_TIMES);
    5622:	63 e0       	ldi	r22, 0x03	; 3
    5624:	80 e0       	ldi	r24, 0x00	; 0
    5626:	90 e0       	ldi	r25, 0x00	; 0
    5628:	0e 94 88 2b 	call	0x5710	; 0x5710 <_Z11setupForFoxP5Fox_t13EventAction_t>
		reportTimeTill(g_current_epoch, g_event_start_epoch, "Starts in: ", "In progress\n");
    562c:	20 91 bc 47 	lds	r18, 0x47BC	; 0x8047bc <g_event_start_epoch>
    5630:	30 91 bd 47 	lds	r19, 0x47BD	; 0x8047bd <g_event_start_epoch+0x1>
    5634:	40 91 be 47 	lds	r20, 0x47BE	; 0x8047be <g_event_start_epoch+0x2>
    5638:	50 91 bf 47 	lds	r21, 0x47BF	; 0x8047bf <g_event_start_epoch+0x3>
    563c:	80 91 e4 47 	lds	r24, 0x47E4	; 0x8047e4 <g_current_epoch>
    5640:	90 91 e5 47 	lds	r25, 0x47E5	; 0x8047e5 <g_current_epoch+0x1>
    5644:	a0 91 e6 47 	lds	r26, 0x47E6	; 0x8047e6 <g_current_epoch+0x2>
    5648:	b0 91 e7 47 	lds	r27, 0x47E7	; 0x8047e7 <g_current_epoch+0x3>
    564c:	0f 2e       	mov	r0, r31
    564e:	f3 eb       	ldi	r31, 0xB3	; 179
    5650:	ef 2e       	mov	r14, r31
    5652:	f2 e4       	ldi	r31, 0x42	; 66
    5654:	ff 2e       	mov	r15, r31
    5656:	f0 2d       	mov	r31, r0
    5658:	00 ec       	ldi	r16, 0xC0	; 192
    565a:	12 e4       	ldi	r17, 0x42	; 66
    565c:	bc 01       	movw	r22, r24
    565e:	cd 01       	movw	r24, r26
    5660:	0e 94 9f 2f 	call	0x5f3e	; 0x5f3e <_Z14reportTimeTillmmPKcS0_>

		if(g_event_start_epoch < g_current_epoch)
    5664:	20 91 bc 47 	lds	r18, 0x47BC	; 0x8047bc <g_event_start_epoch>
    5668:	30 91 bd 47 	lds	r19, 0x47BD	; 0x8047bd <g_event_start_epoch+0x1>
    566c:	40 91 be 47 	lds	r20, 0x47BE	; 0x8047be <g_event_start_epoch+0x2>
    5670:	50 91 bf 47 	lds	r21, 0x47BF	; 0x8047bf <g_event_start_epoch+0x3>
    5674:	80 91 e4 47 	lds	r24, 0x47E4	; 0x8047e4 <g_current_epoch>
    5678:	90 91 e5 47 	lds	r25, 0x47E5	; 0x8047e5 <g_current_epoch+0x1>
    567c:	a0 91 e6 47 	lds	r26, 0x47E6	; 0x8047e6 <g_current_epoch+0x2>
    5680:	b0 91 e7 47 	lds	r27, 0x47E7	; 0x8047e7 <g_current_epoch+0x3>
    5684:	61 e0       	ldi	r22, 0x01	; 1
    5686:	28 17       	cp	r18, r24
    5688:	39 07       	cpc	r19, r25
    568a:	4a 07       	cpc	r20, r26
    568c:	5b 07       	cpc	r21, r27
    568e:	08 f0       	brcs	.+2      	; 0x5692 <_Z18startEventUsingRTCv+0xac>
    5690:	60 e0       	ldi	r22, 0x00	; 0
    5692:	66 23       	and	r22, r22
    5694:	c9 f0       	breq	.+50     	; 0x56c8 <_Z18startEventUsingRTCv+0xe2>
		{
			reportTimeTill(g_current_epoch, g_event_finish_epoch, "Time Remaining: ", NULL);
    5696:	20 91 c0 47 	lds	r18, 0x47C0	; 0x8047c0 <g_event_finish_epoch>
    569a:	30 91 c1 47 	lds	r19, 0x47C1	; 0x8047c1 <g_event_finish_epoch+0x1>
    569e:	40 91 c2 47 	lds	r20, 0x47C2	; 0x8047c2 <g_event_finish_epoch+0x2>
    56a2:	50 91 c3 47 	lds	r21, 0x47C3	; 0x8047c3 <g_event_finish_epoch+0x3>
    56a6:	80 91 e4 47 	lds	r24, 0x47E4	; 0x8047e4 <g_current_epoch>
    56aa:	90 91 e5 47 	lds	r25, 0x47E5	; 0x8047e5 <g_current_epoch+0x1>
    56ae:	a0 91 e6 47 	lds	r26, 0x47E6	; 0x8047e6 <g_current_epoch+0x2>
    56b2:	b0 91 e7 47 	lds	r27, 0x47E7	; 0x8047e7 <g_current_epoch+0x3>
    56b6:	e1 2c       	mov	r14, r1
    56b8:	f1 2c       	mov	r15, r1
    56ba:	04 ed       	ldi	r16, 0xD4	; 212
    56bc:	12 e4       	ldi	r17, 0x42	; 66
    56be:	bc 01       	movw	r22, r24
    56c0:	cd 01       	movw	r24, r26
    56c2:	0e 94 9f 2f 	call	0x5f3e	; 0x5f3e <_Z14reportTimeTillmmPKcS0_>
	}
	else
	{
		reportConfigErrors();
	}
}
    56c6:	1b c0       	rjmp	.+54     	; 0x56fe <_Z18startEventUsingRTCv+0x118>
		{
			reportTimeTill(g_current_epoch, g_event_finish_epoch, "Time Remaining: ", NULL);
		}
		else
		{
			reportTimeTill(g_event_start_epoch, g_event_finish_epoch, "Lasts: ", NULL);
    56c8:	20 91 c0 47 	lds	r18, 0x47C0	; 0x8047c0 <g_event_finish_epoch>
    56cc:	30 91 c1 47 	lds	r19, 0x47C1	; 0x8047c1 <g_event_finish_epoch+0x1>
    56d0:	40 91 c2 47 	lds	r20, 0x47C2	; 0x8047c2 <g_event_finish_epoch+0x2>
    56d4:	50 91 c3 47 	lds	r21, 0x47C3	; 0x8047c3 <g_event_finish_epoch+0x3>
    56d8:	80 91 bc 47 	lds	r24, 0x47BC	; 0x8047bc <g_event_start_epoch>
    56dc:	90 91 bd 47 	lds	r25, 0x47BD	; 0x8047bd <g_event_start_epoch+0x1>
    56e0:	a0 91 be 47 	lds	r26, 0x47BE	; 0x8047be <g_event_start_epoch+0x2>
    56e4:	b0 91 bf 47 	lds	r27, 0x47BF	; 0x8047bf <g_event_start_epoch+0x3>
    56e8:	e1 2c       	mov	r14, r1
    56ea:	f1 2c       	mov	r15, r1
    56ec:	0c ec       	ldi	r16, 0xCC	; 204
    56ee:	12 e4       	ldi	r17, 0x42	; 66
    56f0:	bc 01       	movw	r22, r24
    56f2:	cd 01       	movw	r24, r26
    56f4:	0e 94 9f 2f 	call	0x5f3e	; 0x5f3e <_Z14reportTimeTillmmPKcS0_>
	}
	else
	{
		reportConfigErrors();
	}
}
    56f8:	02 c0       	rjmp	.+4      	; 0x56fe <_Z18startEventUsingRTCv+0x118>
			reportTimeTill(g_event_start_epoch, g_event_finish_epoch, "Lasts: ", NULL);
		}
	}
	else
	{
		reportConfigErrors();
    56fa:	0e 94 d8 31 	call	0x63b0	; 0x63b0 <_Z18reportConfigErrorsv>
	}
}
    56fe:	00 00       	nop
    5700:	0f 90       	pop	r0
    5702:	df 91       	pop	r29
    5704:	cf 91       	pop	r28
    5706:	1f 91       	pop	r17
    5708:	0f 91       	pop	r16
    570a:	ff 90       	pop	r15
    570c:	ef 90       	pop	r14
    570e:	08 95       	ret

00005710 <_Z11setupForFoxP5Fox_t13EventAction_t>:



void setupForFox(Fox_t* fox, EventAction_t action)
{
    5710:	cf 93       	push	r28
    5712:	df 93       	push	r29
    5714:	cd b7       	in	r28, 0x3d	; 61
    5716:	de b7       	in	r29, 0x3e	; 62
    5718:	2c 97       	sbiw	r28, 0x0c	; 12
    571a:	cd bf       	out	0x3d, r28	; 61
    571c:	de bf       	out	0x3e, r29	; 62
    571e:	8a 87       	std	Y+10, r24	; 0x0a
    5720:	9b 87       	std	Y+11, r25	; 0x0b
    5722:	6c 87       	std	Y+12, r22	; 0x0c
	bool patternNotSet = true;
    5724:	81 e0       	ldi	r24, 0x01	; 1
    5726:	89 83       	std	Y+1, r24	; 0x01
	
	if(fox)
    5728:	8a 85       	ldd	r24, Y+10	; 0x0a
    572a:	9b 85       	ldd	r25, Y+11	; 0x0b
    572c:	89 2b       	or	r24, r25
    572e:	61 f0       	breq	.+24     	; 0x5748 <_Z11setupForFoxP5Fox_t13EventAction_t+0x38>
	{
		if(*fox != INVALID_FOX)
    5730:	8a 85       	ldd	r24, Y+10	; 0x0a
    5732:	9b 85       	ldd	r25, Y+11	; 0x0b
    5734:	fc 01       	movw	r30, r24
    5736:	80 81       	ld	r24, Z
    5738:	82 31       	cpi	r24, 0x12	; 18
    573a:	31 f0       	breq	.+12     	; 0x5748 <_Z11setupForFoxP5Fox_t13EventAction_t+0x38>
		{
			g_fox = *fox;
    573c:	8a 85       	ldd	r24, Y+10	; 0x0a
    573e:	9b 85       	ldd	r25, Y+11	; 0x0b
    5740:	fc 01       	movw	r30, r24
    5742:	80 81       	ld	r24, Z
    5744:	80 93 1b 40 	sts	0x401B, r24	; 0x80401b <g_fox>
		}
	}

	g_event_enabled = false;
    5748:	10 92 c4 47 	sts	0x47C4, r1	; 0x8047c4 <g_event_enabled>
	g_event_commenced = false;
    574c:	10 92 c5 47 	sts	0x47C5, r1	; 0x8047c5 <g_event_commenced>
	LED_set_RED_level(OFF);
    5750:	80 e0       	ldi	r24, 0x00	; 0
    5752:	0e 94 ad 10 	call	0x215a	; 0x215a <LED_set_RED_level>
 	g_current_epoch = ds3231_get_epoch(null);
    5756:	80 e0       	ldi	r24, 0x00	; 0
    5758:	90 e0       	ldi	r25, 0x00	; 0
    575a:	0e 94 b2 3d 	call	0x7b64	; 0x7b64 <ds3231_get_epoch>
    575e:	dc 01       	movw	r26, r24
    5760:	cb 01       	movw	r24, r22
    5762:	80 93 e4 47 	sts	0x47E4, r24	; 0x8047e4 <g_current_epoch>
    5766:	90 93 e5 47 	sts	0x47E5, r25	; 0x8047e5 <g_current_epoch+0x1>
    576a:	a0 93 e6 47 	sts	0x47E6, r26	; 0x8047e6 <g_current_epoch+0x2>
    576e:	b0 93 e7 47 	sts	0x47E7, r27	; 0x8047e7 <g_current_epoch+0x3>

	switch(g_fox)
    5772:	80 91 1b 40 	lds	r24, 0x401B	; 0x80401b <g_fox>
    5776:	88 2f       	mov	r24, r24
    5778:	90 e0       	ldi	r25, 0x00	; 0
    577a:	09 2e       	mov	r0, r25
    577c:	00 0c       	add	r0, r0
    577e:	aa 0b       	sbc	r26, r26
    5780:	bb 0b       	sbc	r27, r27
    5782:	41 e0       	ldi	r20, 0x01	; 1
    5784:	50 e0       	ldi	r21, 0x00	; 0
    5786:	20 e1       	ldi	r18, 0x10	; 16
    5788:	30 e0       	ldi	r19, 0x00	; 0
    578a:	84 1b       	sub	r24, r20
    578c:	95 0b       	sbc	r25, r21
    578e:	28 17       	cp	r18, r24
    5790:	39 07       	cpc	r19, r25
    5792:	08 f4       	brcc	.+2      	; 0x5796 <_Z11setupForFoxP5Fox_t13EventAction_t+0x86>
    5794:	a1 c1       	rjmp	.+834    	; 0x5ad8 <_Z11setupForFoxP5Fox_t13EventAction_t+0x3c8>
    5796:	8c 58       	subi	r24, 0x8C	; 140
    5798:	9f 4f       	sbci	r25, 0xFF	; 255
    579a:	fc 01       	movw	r30, r24
    579c:	0c 94 43 72 	jmp	0xe486	; 0xe486 <__tablejump2__>
	{
		case FOX_1:
		{
			if(patternNotSet)
    57a0:	89 81       	ldd	r24, Y+1	; 0x01
    57a2:	88 23       	and	r24, r24
    57a4:	89 f0       	breq	.+34     	; 0x57c8 <_Z11setupForFoxP5Fox_t13EventAction_t+0xb8>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "MOE");
    57a6:	8d e4       	ldi	r24, 0x4D	; 77
    57a8:	9f e4       	ldi	r25, 0x4F	; 79
    57aa:	80 93 8e 47 	sts	0x478E, r24	; 0x80478e <g_messages_text>
    57ae:	90 93 8f 47 	sts	0x478F, r25	; 0x80478f <g_messages_text+0x1>
    57b2:	85 e4       	ldi	r24, 0x45	; 69
    57b4:	90 e0       	ldi	r25, 0x00	; 0
    57b6:	80 93 90 47 	sts	0x4790, r24	; 0x804790 <g_messages_text+0x2>
    57ba:	90 93 91 47 	sts	0x4791, r25	; 0x804791 <g_messages_text+0x3>
				patternNotSet = false;
    57be:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 0;
    57c0:	10 92 ba 47 	sts	0x47BA, r1	; 0x8047ba <g_intra_cycle_delay_time>
    57c4:	10 92 bb 47 	sts	0x47BB, r1	; 0x8047bb <g_intra_cycle_delay_time+0x1>
			}
		}
		case FOX_2:
		{
			if(patternNotSet)
    57c8:	89 81       	ldd	r24, Y+1	; 0x01
    57ca:	88 23       	and	r24, r24
    57cc:	99 f0       	breq	.+38     	; 0x57f4 <_Z11setupForFoxP5Fox_t13EventAction_t+0xe4>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "MOI");
    57ce:	8d e4       	ldi	r24, 0x4D	; 77
    57d0:	9f e4       	ldi	r25, 0x4F	; 79
    57d2:	80 93 8e 47 	sts	0x478E, r24	; 0x80478e <g_messages_text>
    57d6:	90 93 8f 47 	sts	0x478F, r25	; 0x80478f <g_messages_text+0x1>
    57da:	89 e4       	ldi	r24, 0x49	; 73
    57dc:	90 e0       	ldi	r25, 0x00	; 0
    57de:	80 93 90 47 	sts	0x4790, r24	; 0x804790 <g_messages_text+0x2>
    57e2:	90 93 91 47 	sts	0x4791, r25	; 0x804791 <g_messages_text+0x3>
				patternNotSet = false;
    57e6:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 60;
    57e8:	8c e3       	ldi	r24, 0x3C	; 60
    57ea:	90 e0       	ldi	r25, 0x00	; 0
    57ec:	80 93 ba 47 	sts	0x47BA, r24	; 0x8047ba <g_intra_cycle_delay_time>
    57f0:	90 93 bb 47 	sts	0x47BB, r25	; 0x8047bb <g_intra_cycle_delay_time+0x1>
			}
		}
		case FOX_3:
		{
			if(patternNotSet)
    57f4:	89 81       	ldd	r24, Y+1	; 0x01
    57f6:	88 23       	and	r24, r24
    57f8:	99 f0       	breq	.+38     	; 0x5820 <_Z11setupForFoxP5Fox_t13EventAction_t+0x110>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "MOS");
    57fa:	8d e4       	ldi	r24, 0x4D	; 77
    57fc:	9f e4       	ldi	r25, 0x4F	; 79
    57fe:	80 93 8e 47 	sts	0x478E, r24	; 0x80478e <g_messages_text>
    5802:	90 93 8f 47 	sts	0x478F, r25	; 0x80478f <g_messages_text+0x1>
    5806:	83 e5       	ldi	r24, 0x53	; 83
    5808:	90 e0       	ldi	r25, 0x00	; 0
    580a:	80 93 90 47 	sts	0x4790, r24	; 0x804790 <g_messages_text+0x2>
    580e:	90 93 91 47 	sts	0x4791, r25	; 0x804791 <g_messages_text+0x3>
				patternNotSet = false;
    5812:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 120;
    5814:	88 e7       	ldi	r24, 0x78	; 120
    5816:	90 e0       	ldi	r25, 0x00	; 0
    5818:	80 93 ba 47 	sts	0x47BA, r24	; 0x8047ba <g_intra_cycle_delay_time>
    581c:	90 93 bb 47 	sts	0x47BB, r25	; 0x8047bb <g_intra_cycle_delay_time+0x1>
			}
		}
		case FOX_4:
		{
			if(patternNotSet)
    5820:	89 81       	ldd	r24, Y+1	; 0x01
    5822:	88 23       	and	r24, r24
    5824:	99 f0       	breq	.+38     	; 0x584c <_Z11setupForFoxP5Fox_t13EventAction_t+0x13c>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "MOH");
    5826:	8d e4       	ldi	r24, 0x4D	; 77
    5828:	9f e4       	ldi	r25, 0x4F	; 79
    582a:	80 93 8e 47 	sts	0x478E, r24	; 0x80478e <g_messages_text>
    582e:	90 93 8f 47 	sts	0x478F, r25	; 0x80478f <g_messages_text+0x1>
    5832:	88 e4       	ldi	r24, 0x48	; 72
    5834:	90 e0       	ldi	r25, 0x00	; 0
    5836:	80 93 90 47 	sts	0x4790, r24	; 0x804790 <g_messages_text+0x2>
    583a:	90 93 91 47 	sts	0x4791, r25	; 0x804791 <g_messages_text+0x3>
				patternNotSet = false;
    583e:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 180;
    5840:	84 eb       	ldi	r24, 0xB4	; 180
    5842:	90 e0       	ldi	r25, 0x00	; 0
    5844:	80 93 ba 47 	sts	0x47BA, r24	; 0x8047ba <g_intra_cycle_delay_time>
    5848:	90 93 bb 47 	sts	0x47BB, r25	; 0x8047bb <g_intra_cycle_delay_time+0x1>
			}
		}
		case FOX_5:
		{
			/* Set the Morse code pattern and speed */
			if(patternNotSet)
    584c:	89 81       	ldd	r24, Y+1	; 0x01
    584e:	88 23       	and	r24, r24
    5850:	91 f0       	breq	.+36     	; 0x5876 <_Z11setupForFoxP5Fox_t13EventAction_t+0x166>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "MO5");
    5852:	8d e4       	ldi	r24, 0x4D	; 77
    5854:	9f e4       	ldi	r25, 0x4F	; 79
    5856:	80 93 8e 47 	sts	0x478E, r24	; 0x80478e <g_messages_text>
    585a:	90 93 8f 47 	sts	0x478F, r25	; 0x80478f <g_messages_text+0x1>
    585e:	85 e3       	ldi	r24, 0x35	; 53
    5860:	90 e0       	ldi	r25, 0x00	; 0
    5862:	80 93 90 47 	sts	0x4790, r24	; 0x804790 <g_messages_text+0x2>
    5866:	90 93 91 47 	sts	0x4791, r25	; 0x804791 <g_messages_text+0x3>
				g_intra_cycle_delay_time = 240;
    586a:	80 ef       	ldi	r24, 0xF0	; 240
    586c:	90 e0       	ldi	r25, 0x00	; 0
    586e:	80 93 ba 47 	sts	0x47BA, r24	; 0x8047ba <g_intra_cycle_delay_time>
    5872:	90 93 bb 47 	sts	0x47BB, r25	; 0x8047bb <g_intra_cycle_delay_time+0x1>
			}
			
			bool repeat = true;
    5876:	81 e0       	ldi	r24, 0x01	; 1
    5878:	8a 83       	std	Y+2, r24	; 0x02
			makeMorse(g_messages_text[PATTERN_TEXT], &repeat, NULL);
    587a:	ce 01       	movw	r24, r28
    587c:	02 96       	adiw	r24, 0x02	; 2
    587e:	40 e0       	ldi	r20, 0x00	; 0
    5880:	50 e0       	ldi	r21, 0x00	; 0
    5882:	bc 01       	movw	r22, r24
    5884:	8e e8       	ldi	r24, 0x8E	; 142
    5886:	97 e4       	ldi	r25, 0x47	; 71
    5888:	0e 94 f3 52 	call	0xa5e6	; 0xa5e6 <_Z9makeMorsePcPbS0_>
			g_code_throttle = throttleValue(g_pattern_codespeed);
    588c:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    5890:	0e 94 4f 27 	call	0x4e9e	; 0x4e9e <_Z13throttleValueh>
    5894:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    5898:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>

			g_sendID_seconds_countdown = 60;			/* wait 1 minute to send the ID */
    589c:	8c e3       	ldi	r24, 0x3C	; 60
    589e:	90 e0       	ldi	r25, 0x00	; 0
    58a0:	80 93 88 47 	sts	0x4788, r24	; 0x804788 <_ZL26g_sendID_seconds_countdown>
    58a4:	90 93 89 47 	sts	0x4789, r25	; 0x804789 <_ZL26g_sendID_seconds_countdown+0x1>
			g_on_air_seconds = 60;						/* on period is very long */
    58a8:	8c e3       	ldi	r24, 0x3C	; 60
    58aa:	90 e0       	ldi	r25, 0x00	; 0
    58ac:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_on_air_seconds>
    58b0:	90 93 0e 40 	sts	0x400E, r25	; 0x80400e <g_on_air_seconds+0x1>
			g_off_air_seconds = 240;                    /* off period is very short */
    58b4:	80 ef       	ldi	r24, 0xF0	; 240
    58b6:	90 e0       	ldi	r25, 0x00	; 0
    58b8:	80 93 0f 40 	sts	0x400F, r24	; 0x80400f <g_off_air_seconds>
    58bc:	90 93 10 40 	sts	0x4010, r25	; 0x804010 <g_off_air_seconds+0x1>
		}
		break;
    58c0:	41 c1       	rjmp	.+642    	; 0x5b44 <_Z11setupForFoxP5Fox_t13EventAction_t+0x434>

		case SPRINT_S1:
		{
			if(patternNotSet)
    58c2:	89 81       	ldd	r24, Y+1	; 0x01
    58c4:	88 23       	and	r24, r24
    58c6:	69 f0       	breq	.+26     	; 0x58e2 <_Z11setupForFoxP5Fox_t13EventAction_t+0x1d2>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "ME");
    58c8:	8d e4       	ldi	r24, 0x4D	; 77
    58ca:	95 e4       	ldi	r25, 0x45	; 69
    58cc:	80 93 8e 47 	sts	0x478E, r24	; 0x80478e <g_messages_text>
    58d0:	90 93 8f 47 	sts	0x478F, r25	; 0x80478f <g_messages_text+0x1>
    58d4:	10 92 90 47 	sts	0x4790, r1	; 0x804790 <g_messages_text+0x2>
				patternNotSet = false;
    58d8:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 0;
    58da:	10 92 ba 47 	sts	0x47BA, r1	; 0x8047ba <g_intra_cycle_delay_time>
    58de:	10 92 bb 47 	sts	0x47BB, r1	; 0x8047bb <g_intra_cycle_delay_time+0x1>
			}
		}
		case SPRINT_S2:
		{
			if(patternNotSet)
    58e2:	89 81       	ldd	r24, Y+1	; 0x01
    58e4:	88 23       	and	r24, r24
    58e6:	79 f0       	breq	.+30     	; 0x5906 <_Z11setupForFoxP5Fox_t13EventAction_t+0x1f6>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "MI");
    58e8:	8d e4       	ldi	r24, 0x4D	; 77
    58ea:	99 e4       	ldi	r25, 0x49	; 73
    58ec:	80 93 8e 47 	sts	0x478E, r24	; 0x80478e <g_messages_text>
    58f0:	90 93 8f 47 	sts	0x478F, r25	; 0x80478f <g_messages_text+0x1>
    58f4:	10 92 90 47 	sts	0x4790, r1	; 0x804790 <g_messages_text+0x2>
				patternNotSet = false;
    58f8:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 12;
    58fa:	8c e0       	ldi	r24, 0x0C	; 12
    58fc:	90 e0       	ldi	r25, 0x00	; 0
    58fe:	80 93 ba 47 	sts	0x47BA, r24	; 0x8047ba <g_intra_cycle_delay_time>
    5902:	90 93 bb 47 	sts	0x47BB, r25	; 0x8047bb <g_intra_cycle_delay_time+0x1>
			}
		}
		case SPRINT_S3:
		{
			if(patternNotSet)
    5906:	89 81       	ldd	r24, Y+1	; 0x01
    5908:	88 23       	and	r24, r24
    590a:	79 f0       	breq	.+30     	; 0x592a <_Z11setupForFoxP5Fox_t13EventAction_t+0x21a>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "MS");
    590c:	8d e4       	ldi	r24, 0x4D	; 77
    590e:	93 e5       	ldi	r25, 0x53	; 83
    5910:	80 93 8e 47 	sts	0x478E, r24	; 0x80478e <g_messages_text>
    5914:	90 93 8f 47 	sts	0x478F, r25	; 0x80478f <g_messages_text+0x1>
    5918:	10 92 90 47 	sts	0x4790, r1	; 0x804790 <g_messages_text+0x2>
				patternNotSet = false;
    591c:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 24;
    591e:	88 e1       	ldi	r24, 0x18	; 24
    5920:	90 e0       	ldi	r25, 0x00	; 0
    5922:	80 93 ba 47 	sts	0x47BA, r24	; 0x8047ba <g_intra_cycle_delay_time>
    5926:	90 93 bb 47 	sts	0x47BB, r25	; 0x8047bb <g_intra_cycle_delay_time+0x1>
			}
		}
		case SPRINT_S4:
		{
			if(patternNotSet)
    592a:	89 81       	ldd	r24, Y+1	; 0x01
    592c:	88 23       	and	r24, r24
    592e:	79 f0       	breq	.+30     	; 0x594e <_Z11setupForFoxP5Fox_t13EventAction_t+0x23e>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "MH");
    5930:	8d e4       	ldi	r24, 0x4D	; 77
    5932:	98 e4       	ldi	r25, 0x48	; 72
    5934:	80 93 8e 47 	sts	0x478E, r24	; 0x80478e <g_messages_text>
    5938:	90 93 8f 47 	sts	0x478F, r25	; 0x80478f <g_messages_text+0x1>
    593c:	10 92 90 47 	sts	0x4790, r1	; 0x804790 <g_messages_text+0x2>
				patternNotSet = false;
    5940:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 36;
    5942:	84 e2       	ldi	r24, 0x24	; 36
    5944:	90 e0       	ldi	r25, 0x00	; 0
    5946:	80 93 ba 47 	sts	0x47BA, r24	; 0x8047ba <g_intra_cycle_delay_time>
    594a:	90 93 bb 47 	sts	0x47BB, r25	; 0x8047bb <g_intra_cycle_delay_time+0x1>
			}
		}
		case SPRINT_S5:
		{
			{
				if(patternNotSet)
    594e:	89 81       	ldd	r24, Y+1	; 0x01
    5950:	88 23       	and	r24, r24
    5952:	71 f0       	breq	.+28     	; 0x5970 <_Z11setupForFoxP5Fox_t13EventAction_t+0x260>
				{
					sprintf(g_messages_text[PATTERN_TEXT], "M5");
    5954:	8d e4       	ldi	r24, 0x4D	; 77
    5956:	95 e3       	ldi	r25, 0x35	; 53
    5958:	80 93 8e 47 	sts	0x478E, r24	; 0x80478e <g_messages_text>
    595c:	90 93 8f 47 	sts	0x478F, r25	; 0x80478f <g_messages_text+0x1>
    5960:	10 92 90 47 	sts	0x4790, r1	; 0x804790 <g_messages_text+0x2>
					g_intra_cycle_delay_time = 48;
    5964:	80 e3       	ldi	r24, 0x30	; 48
    5966:	90 e0       	ldi	r25, 0x00	; 0
    5968:	80 93 ba 47 	sts	0x47BA, r24	; 0x8047ba <g_intra_cycle_delay_time>
    596c:	90 93 bb 47 	sts	0x47BB, r25	; 0x8047bb <g_intra_cycle_delay_time+0x1>
				}
			}
			
			bool repeat = true;
    5970:	81 e0       	ldi	r24, 0x01	; 1
    5972:	8b 83       	std	Y+3, r24	; 0x03
			makeMorse(g_messages_text[PATTERN_TEXT], &repeat, NULL);
    5974:	ce 01       	movw	r24, r28
    5976:	03 96       	adiw	r24, 0x03	; 3
    5978:	40 e0       	ldi	r20, 0x00	; 0
    597a:	50 e0       	ldi	r21, 0x00	; 0
    597c:	bc 01       	movw	r22, r24
    597e:	8e e8       	ldi	r24, 0x8E	; 142
    5980:	97 e4       	ldi	r25, 0x47	; 71
    5982:	0e 94 f3 52 	call	0xa5e6	; 0xa5e6 <_Z9makeMorsePcPbS0_>
			g_pattern_codespeed = 8;
    5986:	88 e0       	ldi	r24, 0x08	; 8
    5988:	80 93 0c 40 	sts	0x400C, r24	; 0x80400c <g_pattern_codespeed>
			g_code_throttle = throttleValue(g_pattern_codespeed);
    598c:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    5990:	0e 94 4f 27 	call	0x4e9e	; 0x4e9e <_Z13throttleValueh>
    5994:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    5998:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>

			g_sendID_seconds_countdown = 600;			/* wait 10 minutes send the ID */
    599c:	88 e5       	ldi	r24, 0x58	; 88
    599e:	92 e0       	ldi	r25, 0x02	; 2
    59a0:	80 93 88 47 	sts	0x4788, r24	; 0x804788 <_ZL26g_sendID_seconds_countdown>
    59a4:	90 93 89 47 	sts	0x4789, r25	; 0x804789 <_ZL26g_sendID_seconds_countdown+0x1>
			g_on_air_seconds = 12;						/* on period is very long */
    59a8:	8c e0       	ldi	r24, 0x0C	; 12
    59aa:	90 e0       	ldi	r25, 0x00	; 0
    59ac:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_on_air_seconds>
    59b0:	90 93 0e 40 	sts	0x400E, r25	; 0x80400e <g_on_air_seconds+0x1>
			g_off_air_seconds = 48;						/* off period is very short */
    59b4:	80 e3       	ldi	r24, 0x30	; 48
    59b6:	90 e0       	ldi	r25, 0x00	; 0
    59b8:	80 93 0f 40 	sts	0x400F, r24	; 0x80400f <g_off_air_seconds>
    59bc:	90 93 10 40 	sts	0x4010, r25	; 0x804010 <g_off_air_seconds+0x1>
		}
		break;
    59c0:	c1 c0       	rjmp	.+386    	; 0x5b44 <_Z11setupForFoxP5Fox_t13EventAction_t+0x434>

		case SPRINT_F1:
		{
			if(patternNotSet)
    59c2:	89 81       	ldd	r24, Y+1	; 0x01
    59c4:	88 23       	and	r24, r24
    59c6:	69 f0       	breq	.+26     	; 0x59e2 <_Z11setupForFoxP5Fox_t13EventAction_t+0x2d2>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "OE");
    59c8:	8f e4       	ldi	r24, 0x4F	; 79
    59ca:	95 e4       	ldi	r25, 0x45	; 69
    59cc:	80 93 8e 47 	sts	0x478E, r24	; 0x80478e <g_messages_text>
    59d0:	90 93 8f 47 	sts	0x478F, r25	; 0x80478f <g_messages_text+0x1>
    59d4:	10 92 90 47 	sts	0x4790, r1	; 0x804790 <g_messages_text+0x2>
				patternNotSet = false;
    59d8:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 0;
    59da:	10 92 ba 47 	sts	0x47BA, r1	; 0x8047ba <g_intra_cycle_delay_time>
    59de:	10 92 bb 47 	sts	0x47BB, r1	; 0x8047bb <g_intra_cycle_delay_time+0x1>
			}
		}
		case SPRINT_F2:
		{
			if(patternNotSet)
    59e2:	89 81       	ldd	r24, Y+1	; 0x01
    59e4:	88 23       	and	r24, r24
    59e6:	79 f0       	breq	.+30     	; 0x5a06 <_Z11setupForFoxP5Fox_t13EventAction_t+0x2f6>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "OI");
    59e8:	8f e4       	ldi	r24, 0x4F	; 79
    59ea:	99 e4       	ldi	r25, 0x49	; 73
    59ec:	80 93 8e 47 	sts	0x478E, r24	; 0x80478e <g_messages_text>
    59f0:	90 93 8f 47 	sts	0x478F, r25	; 0x80478f <g_messages_text+0x1>
    59f4:	10 92 90 47 	sts	0x4790, r1	; 0x804790 <g_messages_text+0x2>
				patternNotSet = false;
    59f8:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 12;
    59fa:	8c e0       	ldi	r24, 0x0C	; 12
    59fc:	90 e0       	ldi	r25, 0x00	; 0
    59fe:	80 93 ba 47 	sts	0x47BA, r24	; 0x8047ba <g_intra_cycle_delay_time>
    5a02:	90 93 bb 47 	sts	0x47BB, r25	; 0x8047bb <g_intra_cycle_delay_time+0x1>
			}
		}
		case SPRINT_F3:
		{
			if(patternNotSet)
    5a06:	89 81       	ldd	r24, Y+1	; 0x01
    5a08:	88 23       	and	r24, r24
    5a0a:	79 f0       	breq	.+30     	; 0x5a2a <_Z11setupForFoxP5Fox_t13EventAction_t+0x31a>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "OS");
    5a0c:	8f e4       	ldi	r24, 0x4F	; 79
    5a0e:	93 e5       	ldi	r25, 0x53	; 83
    5a10:	80 93 8e 47 	sts	0x478E, r24	; 0x80478e <g_messages_text>
    5a14:	90 93 8f 47 	sts	0x478F, r25	; 0x80478f <g_messages_text+0x1>
    5a18:	10 92 90 47 	sts	0x4790, r1	; 0x804790 <g_messages_text+0x2>
				patternNotSet = false;
    5a1c:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 24;
    5a1e:	88 e1       	ldi	r24, 0x18	; 24
    5a20:	90 e0       	ldi	r25, 0x00	; 0
    5a22:	80 93 ba 47 	sts	0x47BA, r24	; 0x8047ba <g_intra_cycle_delay_time>
    5a26:	90 93 bb 47 	sts	0x47BB, r25	; 0x8047bb <g_intra_cycle_delay_time+0x1>
			}
		}
		case SPRINT_F4:
		{
			if(patternNotSet)
    5a2a:	89 81       	ldd	r24, Y+1	; 0x01
    5a2c:	88 23       	and	r24, r24
    5a2e:	79 f0       	breq	.+30     	; 0x5a4e <_Z11setupForFoxP5Fox_t13EventAction_t+0x33e>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "OH");
    5a30:	8f e4       	ldi	r24, 0x4F	; 79
    5a32:	98 e4       	ldi	r25, 0x48	; 72
    5a34:	80 93 8e 47 	sts	0x478E, r24	; 0x80478e <g_messages_text>
    5a38:	90 93 8f 47 	sts	0x478F, r25	; 0x80478f <g_messages_text+0x1>
    5a3c:	10 92 90 47 	sts	0x4790, r1	; 0x804790 <g_messages_text+0x2>
				patternNotSet = false;
    5a40:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 36;
    5a42:	84 e2       	ldi	r24, 0x24	; 36
    5a44:	90 e0       	ldi	r25, 0x00	; 0
    5a46:	80 93 ba 47 	sts	0x47BA, r24	; 0x8047ba <g_intra_cycle_delay_time>
    5a4a:	90 93 bb 47 	sts	0x47BB, r25	; 0x8047bb <g_intra_cycle_delay_time+0x1>
			}
		}
		case SPRINT_F5:
		{
			if(patternNotSet)
    5a4e:	89 81       	ldd	r24, Y+1	; 0x01
    5a50:	88 23       	and	r24, r24
    5a52:	71 f0       	breq	.+28     	; 0x5a70 <_Z11setupForFoxP5Fox_t13EventAction_t+0x360>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "O5");
    5a54:	8f e4       	ldi	r24, 0x4F	; 79
    5a56:	95 e3       	ldi	r25, 0x35	; 53
    5a58:	80 93 8e 47 	sts	0x478E, r24	; 0x80478e <g_messages_text>
    5a5c:	90 93 8f 47 	sts	0x478F, r25	; 0x80478f <g_messages_text+0x1>
    5a60:	10 92 90 47 	sts	0x4790, r1	; 0x804790 <g_messages_text+0x2>
				g_intra_cycle_delay_time = 48;
    5a64:	80 e3       	ldi	r24, 0x30	; 48
    5a66:	90 e0       	ldi	r25, 0x00	; 0
    5a68:	80 93 ba 47 	sts	0x47BA, r24	; 0x8047ba <g_intra_cycle_delay_time>
    5a6c:	90 93 bb 47 	sts	0x47BB, r25	; 0x8047bb <g_intra_cycle_delay_time+0x1>
			}
			
			bool repeat = true;
    5a70:	81 e0       	ldi	r24, 0x01	; 1
    5a72:	8c 83       	std	Y+4, r24	; 0x04
			makeMorse(g_messages_text[PATTERN_TEXT], &repeat, NULL);
    5a74:	ce 01       	movw	r24, r28
    5a76:	04 96       	adiw	r24, 0x04	; 4
    5a78:	40 e0       	ldi	r20, 0x00	; 0
    5a7a:	50 e0       	ldi	r21, 0x00	; 0
    5a7c:	bc 01       	movw	r22, r24
    5a7e:	8e e8       	ldi	r24, 0x8E	; 142
    5a80:	97 e4       	ldi	r25, 0x47	; 71
    5a82:	0e 94 f3 52 	call	0xa5e6	; 0xa5e6 <_Z9makeMorsePcPbS0_>
			g_pattern_codespeed = 15;
    5a86:	8f e0       	ldi	r24, 0x0F	; 15
    5a88:	80 93 0c 40 	sts	0x400C, r24	; 0x80400c <g_pattern_codespeed>
			g_code_throttle = throttleValue(g_pattern_codespeed);
    5a8c:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    5a90:	0e 94 4f 27 	call	0x4e9e	; 0x4e9e <_Z13throttleValueh>
    5a94:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    5a98:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>

			g_sendID_seconds_countdown = 600;			/* wait 10 minutes send the ID */
    5a9c:	88 e5       	ldi	r24, 0x58	; 88
    5a9e:	92 e0       	ldi	r25, 0x02	; 2
    5aa0:	80 93 88 47 	sts	0x4788, r24	; 0x804788 <_ZL26g_sendID_seconds_countdown>
    5aa4:	90 93 89 47 	sts	0x4789, r25	; 0x804789 <_ZL26g_sendID_seconds_countdown+0x1>
			g_on_air_seconds = 12;						/* on period is very long */
    5aa8:	8c e0       	ldi	r24, 0x0C	; 12
    5aaa:	90 e0       	ldi	r25, 0x00	; 0
    5aac:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_on_air_seconds>
    5ab0:	90 93 0e 40 	sts	0x400E, r25	; 0x80400e <g_on_air_seconds+0x1>
			g_off_air_seconds = 48;						/* off period is very short */
    5ab4:	80 e3       	ldi	r24, 0x30	; 48
    5ab6:	90 e0       	ldi	r25, 0x00	; 0
    5ab8:	80 93 0f 40 	sts	0x400F, r24	; 0x80400f <g_off_air_seconds>
    5abc:	90 93 10 40 	sts	0x4010, r25	; 0x804010 <g_off_air_seconds+0x1>
		}
		break;
    5ac0:	41 c0       	rjmp	.+130    	; 0x5b44 <_Z11setupForFoxP5Fox_t13EventAction_t+0x434>
#endif // SUPPORT_TEMP_AND_VOLTAGE_REPORTING


		case SPECTATOR:
		{
			sprintf(g_messages_text[PATTERN_TEXT], "S");
    5ac2:	83 e5       	ldi	r24, 0x53	; 83
    5ac4:	90 e0       	ldi	r25, 0x00	; 0
    5ac6:	80 93 8e 47 	sts	0x478E, r24	; 0x80478e <g_messages_text>
    5aca:	90 93 8f 47 	sts	0x478F, r25	; 0x80478f <g_messages_text+0x1>
			patternNotSet = false;
    5ace:	19 82       	std	Y+1, r1	; 0x01
			g_intra_cycle_delay_time = 0;
    5ad0:	10 92 ba 47 	sts	0x47BA, r1	; 0x8047ba <g_intra_cycle_delay_time>
    5ad4:	10 92 bb 47 	sts	0x47BB, r1	; 0x8047bb <g_intra_cycle_delay_time+0x1>
		}
		case BEACON:
		default:
		{
			if(patternNotSet)
    5ad8:	89 81       	ldd	r24, Y+1	; 0x01
    5ada:	88 23       	and	r24, r24
    5adc:	41 f0       	breq	.+16     	; 0x5aee <_Z11setupForFoxP5Fox_t13EventAction_t+0x3de>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "MO");
    5ade:	8d e4       	ldi	r24, 0x4D	; 77
    5ae0:	9f e4       	ldi	r25, 0x4F	; 79
    5ae2:	80 93 8e 47 	sts	0x478E, r24	; 0x80478e <g_messages_text>
    5ae6:	90 93 8f 47 	sts	0x478F, r25	; 0x80478f <g_messages_text+0x1>
    5aea:	10 92 90 47 	sts	0x4790, r1	; 0x804790 <g_messages_text+0x2>
			}
			
			g_intra_cycle_delay_time = 0;
    5aee:	10 92 ba 47 	sts	0x47BA, r1	; 0x8047ba <g_intra_cycle_delay_time>
    5af2:	10 92 bb 47 	sts	0x47BB, r1	; 0x8047bb <g_intra_cycle_delay_time+0x1>
			bool repeat = true;
    5af6:	81 e0       	ldi	r24, 0x01	; 1
    5af8:	8d 83       	std	Y+5, r24	; 0x05
			makeMorse(g_messages_text[PATTERN_TEXT], &repeat, NULL);
    5afa:	ce 01       	movw	r24, r28
    5afc:	05 96       	adiw	r24, 0x05	; 5
    5afe:	40 e0       	ldi	r20, 0x00	; 0
    5b00:	50 e0       	ldi	r21, 0x00	; 0
    5b02:	bc 01       	movw	r22, r24
    5b04:	8e e8       	ldi	r24, 0x8E	; 142
    5b06:	97 e4       	ldi	r25, 0x47	; 71
    5b08:	0e 94 f3 52 	call	0xa5e6	; 0xa5e6 <_Z9makeMorsePcPbS0_>
			g_pattern_codespeed = 8;
    5b0c:	88 e0       	ldi	r24, 0x08	; 8
    5b0e:	80 93 0c 40 	sts	0x400C, r24	; 0x80400c <g_pattern_codespeed>
			g_code_throttle = throttleValue(g_pattern_codespeed);
    5b12:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    5b16:	0e 94 4f 27 	call	0x4e9e	; 0x4e9e <_Z13throttleValueh>
    5b1a:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    5b1e:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>

			g_sendID_seconds_countdown = 600;			/* wait 10 minutes send the ID */
    5b22:	88 e5       	ldi	r24, 0x58	; 88
    5b24:	92 e0       	ldi	r25, 0x02	; 2
    5b26:	80 93 88 47 	sts	0x4788, r24	; 0x804788 <_ZL26g_sendID_seconds_countdown>
    5b2a:	90 93 89 47 	sts	0x4789, r25	; 0x804789 <_ZL26g_sendID_seconds_countdown+0x1>
			g_on_air_seconds = 60;						/* on period is very long */
    5b2e:	8c e3       	ldi	r24, 0x3C	; 60
    5b30:	90 e0       	ldi	r25, 0x00	; 0
    5b32:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_on_air_seconds>
    5b36:	90 93 0e 40 	sts	0x400E, r25	; 0x80400e <g_on_air_seconds+0x1>
			g_off_air_seconds = 0;						/* off period is very short */
    5b3a:	10 92 0f 40 	sts	0x400F, r1	; 0x80400f <g_off_air_seconds>
    5b3e:	10 92 10 40 	sts	0x4010, r1	; 0x804010 <g_off_air_seconds+0x1>
		}
		break;
    5b42:	00 00       	nop
	}

	if(action == START_NOTHING)
    5b44:	8c 85       	ldd	r24, Y+12	; 0x0c
    5b46:	88 23       	and	r24, r24
    5b48:	91 f4       	brne	.+36     	; 0x5b6e <_Z11setupForFoxP5Fox_t13EventAction_t+0x45e>
	{
		g_event_commenced = false;                   /* get things running immediately */
    5b4a:	10 92 c5 47 	sts	0x47C5, r1	; 0x8047c5 <g_event_commenced>
		g_event_enabled = false;                     /* get things running immediately */
    5b4e:	10 92 c4 47 	sts	0x47C4, r1	; 0x8047c4 <g_event_enabled>

 		g_use_rtc_for_startstop = false;
    5b52:	10 92 e8 47 	sts	0x47E8, r1	; 0x8047e8 <g_use_rtc_for_startstop>
 		g_event_enabled = false;
    5b56:	10 92 c4 47 	sts	0x47C4, r1	; 0x8047c4 <g_event_enabled>
		keyTransmitter(OFF);
    5b5a:	80 e0       	ldi	r24, 0x00	; 0
    5b5c:	0e 94 a0 67 	call	0xcf40	; 0xcf40 <_Z14keyTransmitterb>
		LED_set_RED_level(OFF);
    5b60:	80 e0       	ldi	r24, 0x00	; 0
    5b62:	0e 94 ad 10 	call	0x215a	; 0x215a <LED_set_RED_level>
		powerToTransmitter(OFF);
    5b66:	80 e0       	ldi	r24, 0x00	; 0
    5b68:	0e 94 92 67 	call	0xcf24	; 0xcf24 <_Z18powerToTransmitterb>
// 
// 	digitalWrite(PIN_CW_KEY_LOGIC, OFF);    /* TX key line */
// 	g_sendAMmodulation = false;
// 	g_LED_enunciating = false;
// 	g_config_error = NULL_CONFIG;           /* Trigger a new configuration enunciation */
}
    5b6c:	af c0       	rjmp	.+350    	; 0x5ccc <_Z11setupForFoxP5Fox_t13EventAction_t+0x5bc>
 		g_event_enabled = false;
		keyTransmitter(OFF);
		LED_set_RED_level(OFF);
		powerToTransmitter(OFF);
	}
	else if(action == START_EVENT_NOW)
    5b6e:	8c 85       	ldd	r24, Y+12	; 0x0c
    5b70:	81 30       	cpi	r24, 0x01	; 1
    5b72:	09 f0       	breq	.+2      	; 0x5b76 <_Z11setupForFoxP5Fox_t13EventAction_t+0x466>
    5b74:	72 c0       	rjmp	.+228    	; 0x5c5a <_Z11setupForFoxP5Fox_t13EventAction_t+0x54a>
//  		g_event_enabled = true;
// 		g_event_commenced = true;					/* get things running immediately */
// 		g_event_enabled = true;						/* get things running immediately */

		EC result;
		g_current_epoch = ds3231_get_epoch(&result);
    5b76:	ce 01       	movw	r24, r28
    5b78:	06 96       	adiw	r24, 0x06	; 6
    5b7a:	0e 94 b2 3d 	call	0x7b64	; 0x7b64 <ds3231_get_epoch>
    5b7e:	dc 01       	movw	r26, r24
    5b80:	cb 01       	movw	r24, r22
    5b82:	80 93 e4 47 	sts	0x47E4, r24	; 0x8047e4 <g_current_epoch>
    5b86:	90 93 e5 47 	sts	0x47E5, r25	; 0x8047e5 <g_current_epoch+0x1>
    5b8a:	a0 93 e6 47 	sts	0x47E6, r26	; 0x8047e6 <g_current_epoch+0x2>
    5b8e:	b0 93 e7 47 	sts	0x47E7, r27	; 0x8047e7 <g_current_epoch+0x3>
		
		if(result == ERROR_CODE_NO_ERROR)
    5b92:	8e 81       	ldd	r24, Y+6	; 0x06
    5b94:	88 23       	and	r24, r24
    5b96:	e9 f5       	brne	.+122    	; 0x5c12 <_Z11setupForFoxP5Fox_t13EventAction_t+0x502>
		{
			g_event_start_epoch = g_current_epoch;
    5b98:	80 91 e4 47 	lds	r24, 0x47E4	; 0x8047e4 <g_current_epoch>
    5b9c:	90 91 e5 47 	lds	r25, 0x47E5	; 0x8047e5 <g_current_epoch+0x1>
    5ba0:	a0 91 e6 47 	lds	r26, 0x47E6	; 0x8047e6 <g_current_epoch+0x2>
    5ba4:	b0 91 e7 47 	lds	r27, 0x47E7	; 0x8047e7 <g_current_epoch+0x3>
    5ba8:	80 93 bc 47 	sts	0x47BC, r24	; 0x8047bc <g_event_start_epoch>
    5bac:	90 93 bd 47 	sts	0x47BD, r25	; 0x8047bd <g_event_start_epoch+0x1>
    5bb0:	a0 93 be 47 	sts	0x47BE, r26	; 0x8047be <g_event_start_epoch+0x2>
    5bb4:	b0 93 bf 47 	sts	0x47BF, r27	; 0x8047bf <g_event_start_epoch+0x3>
			if(g_event_start_epoch > g_event_finish_epoch)
    5bb8:	20 91 bc 47 	lds	r18, 0x47BC	; 0x8047bc <g_event_start_epoch>
    5bbc:	30 91 bd 47 	lds	r19, 0x47BD	; 0x8047bd <g_event_start_epoch+0x1>
    5bc0:	40 91 be 47 	lds	r20, 0x47BE	; 0x8047be <g_event_start_epoch+0x2>
    5bc4:	50 91 bf 47 	lds	r21, 0x47BF	; 0x8047bf <g_event_start_epoch+0x3>
    5bc8:	80 91 c0 47 	lds	r24, 0x47C0	; 0x8047c0 <g_event_finish_epoch>
    5bcc:	90 91 c1 47 	lds	r25, 0x47C1	; 0x8047c1 <g_event_finish_epoch+0x1>
    5bd0:	a0 91 c2 47 	lds	r26, 0x47C2	; 0x8047c2 <g_event_finish_epoch+0x2>
    5bd4:	b0 91 c3 47 	lds	r27, 0x47C3	; 0x8047c3 <g_event_finish_epoch+0x3>
    5bd8:	61 e0       	ldi	r22, 0x01	; 1
    5bda:	82 17       	cp	r24, r18
    5bdc:	93 07       	cpc	r25, r19
    5bde:	a4 07       	cpc	r26, r20
    5be0:	b5 07       	cpc	r27, r21
    5be2:	08 f0       	brcs	.+2      	; 0x5be6 <_Z11setupForFoxP5Fox_t13EventAction_t+0x4d6>
    5be4:	60 e0       	ldi	r22, 0x00	; 0
    5be6:	66 23       	and	r22, r22
    5be8:	a1 f0       	breq	.+40     	; 0x5c12 <_Z11setupForFoxP5Fox_t13EventAction_t+0x502>
			{
				g_event_finish_epoch = g_event_start_epoch + DAY;
    5bea:	80 91 bc 47 	lds	r24, 0x47BC	; 0x8047bc <g_event_start_epoch>
    5bee:	90 91 bd 47 	lds	r25, 0x47BD	; 0x8047bd <g_event_start_epoch+0x1>
    5bf2:	a0 91 be 47 	lds	r26, 0x47BE	; 0x8047be <g_event_start_epoch+0x2>
    5bf6:	b0 91 bf 47 	lds	r27, 0x47BF	; 0x8047bf <g_event_start_epoch+0x3>
    5bfa:	80 58       	subi	r24, 0x80	; 128
    5bfc:	9e 4a       	sbci	r25, 0xAE	; 174
    5bfe:	ae 4f       	sbci	r26, 0xFE	; 254
    5c00:	bf 4f       	sbci	r27, 0xFF	; 255
    5c02:	80 93 c0 47 	sts	0x47C0, r24	; 0x8047c0 <g_event_finish_epoch>
    5c06:	90 93 c1 47 	sts	0x47C1, r25	; 0x8047c1 <g_event_finish_epoch+0x1>
    5c0a:	a0 93 c2 47 	sts	0x47C2, r26	; 0x8047c2 <g_event_finish_epoch+0x2>
    5c0e:	b0 93 c3 47 	sts	0x47C3, r27	; 0x8047c3 <g_event_finish_epoch+0x3>
			}
		}
		
		SC status = STATUS_CODE_IDLE;
    5c12:	1f 82       	std	Y+7, r1	; 0x07
		result = launchEvent(&status);
    5c14:	ce 01       	movw	r24, r28
    5c16:	07 96       	adiw	r24, 0x07	; 7
    5c18:	0e 94 9f 27 	call	0x4f3e	; 0x4f3e <_Z11launchEventP2SC>
    5c1c:	8e 83       	std	Y+6, r24	; 0x06
		
		if(g_go_to_sleep && g_sleepType)
    5c1e:	80 91 c8 47 	lds	r24, 0x47C8	; 0x8047c8 <_ZL13g_go_to_sleep>
    5c22:	88 23       	and	r24, r24
    5c24:	31 f0       	breq	.+12     	; 0x5c32 <_Z11setupForFoxP5Fox_t13EventAction_t+0x522>
    5c26:	80 91 8d 47 	lds	r24, 0x478D	; 0x80478d <_ZL11g_sleepType>
    5c2a:	88 23       	and	r24, r24
    5c2c:	11 f0       	breq	.+4      	; 0x5c32 <_Z11setupForFoxP5Fox_t13EventAction_t+0x522>
    5c2e:	81 e0       	ldi	r24, 0x01	; 1
    5c30:	01 c0       	rjmp	.+2      	; 0x5c34 <_Z11setupForFoxP5Fox_t13EventAction_t+0x524>
    5c32:	80 e0       	ldi	r24, 0x00	; 0
    5c34:	88 23       	and	r24, r24
    5c36:	29 f0       	breq	.+10     	; 0x5c42 <_Z11setupForFoxP5Fox_t13EventAction_t+0x532>
		{
			g_sleepType = SLEEP_AFTER_WIFI_GOES_OFF;
    5c38:	83 e0       	ldi	r24, 0x03	; 3
    5c3a:	80 93 8d 47 	sts	0x478D, r24	; 0x80478d <_ZL11g_sleepType>
			g_go_to_sleep = false;
    5c3e:	10 92 c8 47 	sts	0x47C8, r1	; 0x8047c8 <_ZL13g_go_to_sleep>
		}

		g_WiFi_shutdown_seconds = 60;
    5c42:	8c e3       	ldi	r24, 0x3C	; 60
    5c44:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>

		if(!result)
    5c48:	8e 81       	ldd	r24, Y+6	; 0x06
    5c4a:	88 23       	and	r24, r24
    5c4c:	09 f0       	breq	.+2      	; 0x5c50 <_Z11setupForFoxP5Fox_t13EventAction_t+0x540>
    5c4e:	3e c0       	rjmp	.+124    	; 0x5ccc <_Z11setupForFoxP5Fox_t13EventAction_t+0x5bc>
		{
			g_ee_mgr.saveAllEEPROM();
    5c50:	8a ed       	ldi	r24, 0xDA	; 218
    5c52:	97 e4       	ldi	r25, 0x47	; 71
    5c54:	0e 94 0c 45 	call	0x8a18	; 0x8a18 <_ZN13EepromManager13saveAllEEPROMEv>
// 
// 	digitalWrite(PIN_CW_KEY_LOGIC, OFF);    /* TX key line */
// 	g_sendAMmodulation = false;
// 	g_LED_enunciating = false;
// 	g_config_error = NULL_CONFIG;           /* Trigger a new configuration enunciation */
}
    5c58:	39 c0       	rjmp	.+114    	; 0x5ccc <_Z11setupForFoxP5Fox_t13EventAction_t+0x5bc>
		if(!result)
		{
			g_ee_mgr.saveAllEEPROM();
		}
	}
	else if(action == START_TRANSMISSIONS_NOW)                                  /* Immediately start transmitting, regardless RTC or time slot */
    5c5a:	8c 85       	ldd	r24, Y+12	; 0x0c
    5c5c:	82 30       	cpi	r24, 0x02	; 2
    5c5e:	91 f5       	brne	.+100    	; 0x5cc4 <_Z11setupForFoxP5Fox_t13EventAction_t+0x5b4>
	{
		bool repeat = true;
    5c60:	81 e0       	ldi	r24, 0x01	; 1
    5c62:	88 87       	std	Y+8, r24	; 0x08
		makeMorse(g_messages_text[PATTERN_TEXT], &repeat, NULL);
    5c64:	ce 01       	movw	r24, r28
    5c66:	08 96       	adiw	r24, 0x08	; 8
    5c68:	40 e0       	ldi	r20, 0x00	; 0
    5c6a:	50 e0       	ldi	r21, 0x00	; 0
    5c6c:	bc 01       	movw	r22, r24
    5c6e:	8e e8       	ldi	r24, 0x8E	; 142
    5c70:	97 e4       	ldi	r25, 0x47	; 71
    5c72:	0e 94 f3 52 	call	0xa5e6	; 0xa5e6 <_Z9makeMorsePcPbS0_>
		g_code_throttle = throttleValue(g_pattern_codespeed);
    5c76:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    5c7a:	0e 94 4f 27 	call	0x4e9e	; 0x4e9e <_Z13throttleValueh>
    5c7e:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    5c82:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>

// 		g_event_start_epoch = 1;                     /* have it start a long time ago */
// 		g_event_finish_epoch = MAX_TIME;             /* run for a long long time */
		g_on_the_air = g_on_air_seconds;			/* start out transmitting */
    5c86:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    5c8a:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    5c8e:	09 2e       	mov	r0, r25
    5c90:	00 0c       	add	r0, r0
    5c92:	aa 0b       	sbc	r26, r26
    5c94:	bb 0b       	sbc	r27, r27
    5c96:	80 93 84 47 	sts	0x4784, r24	; 0x804784 <_ZL12g_on_the_air>
    5c9a:	90 93 85 47 	sts	0x4785, r25	; 0x804785 <_ZL12g_on_the_air+0x1>
    5c9e:	a0 93 86 47 	sts	0x4786, r26	; 0x804786 <_ZL12g_on_the_air+0x2>
    5ca2:	b0 93 87 47 	sts	0x4787, r27	; 0x804787 <_ZL12g_on_the_air+0x3>
		g_event_commenced = true;                   /* get things running immediately */
    5ca6:	81 e0       	ldi	r24, 0x01	; 1
    5ca8:	80 93 c5 47 	sts	0x47C5, r24	; 0x8047c5 <g_event_commenced>
		g_event_enabled = true;                     /* get things running immediately */
    5cac:	81 e0       	ldi	r24, 0x01	; 1
    5cae:	80 93 c4 47 	sts	0x47C4, r24	; 0x8047c4 <g_event_enabled>
		g_last_status_code = STATUS_CODE_EVENT_STARTED_NOW_TRANSMITTING;
    5cb2:	8d ef       	ldi	r24, 0xFD	; 253
    5cb4:	80 93 7c 47 	sts	0x477C, r24	; 0x80477c <_ZL18g_last_status_code>
		
// 		g_seconds_since_sync = (g_fox_counter - 1) * g_on_air_interval_seconds; /* Total elapsed time since start of event */
 		g_use_rtc_for_startstop = false;
    5cb8:	10 92 e8 47 	sts	0x47E8, r1	; 0x8047e8 <g_use_rtc_for_startstop>
 		g_event_enabled = true;
    5cbc:	81 e0       	ldi	r24, 0x01	; 1
    5cbe:	80 93 c4 47 	sts	0x47C4, r24	; 0x8047c4 <g_event_enabled>
// 
// 	digitalWrite(PIN_CW_KEY_LOGIC, OFF);    /* TX key line */
// 	g_sendAMmodulation = false;
// 	g_LED_enunciating = false;
// 	g_config_error = NULL_CONFIG;           /* Trigger a new configuration enunciation */
}
    5cc2:	04 c0       	rjmp	.+8      	; 0x5ccc <_Z11setupForFoxP5Fox_t13EventAction_t+0x5bc>
	}
	else         /* if(action == START_EVENT_WITH_STARTFINISH_TIMES) */
	{
		SC sc;
 //		EC ec = 
		launchEvent(&sc);
    5cc4:	ce 01       	movw	r24, r28
    5cc6:	09 96       	adiw	r24, 0x09	; 9
    5cc8:	0e 94 9f 27 	call	0x4f3e	; 0x4f3e <_Z11launchEventP2SC>
// 
// 	digitalWrite(PIN_CW_KEY_LOGIC, OFF);    /* TX key line */
// 	g_sendAMmodulation = false;
// 	g_LED_enunciating = false;
// 	g_config_error = NULL_CONFIG;           /* Trigger a new configuration enunciation */
}
    5ccc:	00 00       	nop
    5cce:	2c 96       	adiw	r28, 0x0c	; 12
    5cd0:	cd bf       	out	0x3d, r28	; 61
    5cd2:	de bf       	out	0x3e, r29	; 62
    5cd4:	df 91       	pop	r29
    5cd6:	cf 91       	pop	r28
    5cd8:	08 95       	ret

00005cda <_Z18validateTimeStringPcPma>:

time_t validateTimeString(char* str, time_t* epochVar, int8_t offsetHours)
{
    5cda:	cf 93       	push	r28
    5cdc:	df 93       	push	r29
    5cde:	cd b7       	in	r28, 0x3d	; 61
    5ce0:	de b7       	in	r29, 0x3e	; 62
    5ce2:	a4 97       	sbiw	r28, 0x24	; 36
    5ce4:	cd bf       	out	0x3d, r28	; 61
    5ce6:	de bf       	out	0x3e, r29	; 62
    5ce8:	88 a3       	std	Y+32, r24	; 0x20
    5cea:	99 a3       	std	Y+33, r25	; 0x21
    5cec:	6a a3       	std	Y+34, r22	; 0x22
    5cee:	7b a3       	std	Y+35, r23	; 0x23
    5cf0:	4c a3       	std	Y+36, r20	; 0x24
	time_t valid = 0;
    5cf2:	19 82       	std	Y+1, r1	; 0x01
    5cf4:	1a 82       	std	Y+2, r1	; 0x02
    5cf6:	1b 82       	std	Y+3, r1	; 0x03
    5cf8:	1c 82       	std	Y+4, r1	; 0x04
	int len = strlen(str);
    5cfa:	88 a1       	ldd	r24, Y+32	; 0x20
    5cfc:	99 a1       	ldd	r25, Y+33	; 0x21
    5cfe:	0e 94 fc 73 	call	0xe7f8	; 0xe7f8 <strlen>
    5d02:	8d 83       	std	Y+5, r24	; 0x05
    5d04:	9e 83       	std	Y+6, r25	; 0x06
	time_t minimumEpoch = MINIMUM_EPOCH;
    5d06:	80 e0       	ldi	r24, 0x00	; 0
    5d08:	96 e6       	ldi	r25, 0x66	; 102
    5d0a:	ae ee       	ldi	r26, 0xEE	; 238
    5d0c:	bf e5       	ldi	r27, 0x5F	; 95
    5d0e:	8f 83       	std	Y+7, r24	; 0x07
    5d10:	98 87       	std	Y+8, r25	; 0x08
    5d12:	a9 87       	std	Y+9, r26	; 0x09
    5d14:	ba 87       	std	Y+10, r27	; 0x0a
	uint8_t validationType = 0;
    5d16:	1b 86       	std	Y+11, r1	; 0x0b

	if(epochVar == &g_event_start_epoch)
    5d18:	8a a1       	ldd	r24, Y+34	; 0x22
    5d1a:	9b a1       	ldd	r25, Y+35	; 0x23
    5d1c:	8c 5b       	subi	r24, 0xBC	; 188
    5d1e:	97 44       	sbci	r25, 0x47	; 71
    5d20:	89 f5       	brne	.+98     	; 0x5d84 <_Z18validateTimeStringPcPma+0xaa>
	{
		minimumEpoch = MAX(g_current_epoch, MINIMUM_EPOCH);
    5d22:	80 91 e4 47 	lds	r24, 0x47E4	; 0x8047e4 <g_current_epoch>
    5d26:	90 91 e5 47 	lds	r25, 0x47E5	; 0x8047e5 <g_current_epoch+0x1>
    5d2a:	a0 91 e6 47 	lds	r26, 0x47E6	; 0x8047e6 <g_current_epoch+0x2>
    5d2e:	b0 91 e7 47 	lds	r27, 0x47E7	; 0x8047e7 <g_current_epoch+0x3>
    5d32:	8c 87       	std	Y+12, r24	; 0x0c
    5d34:	9d 87       	std	Y+13, r25	; 0x0d
    5d36:	ae 87       	std	Y+14, r26	; 0x0e
    5d38:	bf 87       	std	Y+15, r27	; 0x0f
    5d3a:	80 e0       	ldi	r24, 0x00	; 0
    5d3c:	96 e6       	ldi	r25, 0x66	; 102
    5d3e:	ae ee       	ldi	r26, 0xEE	; 238
    5d40:	bf e5       	ldi	r27, 0x5F	; 95
    5d42:	88 8b       	std	Y+16, r24	; 0x10
    5d44:	99 8b       	std	Y+17, r25	; 0x11
    5d46:	aa 8b       	std	Y+18, r26	; 0x12
    5d48:	bb 8b       	std	Y+19, r27	; 0x13
    5d4a:	2c 85       	ldd	r18, Y+12	; 0x0c
    5d4c:	3d 85       	ldd	r19, Y+13	; 0x0d
    5d4e:	4e 85       	ldd	r20, Y+14	; 0x0e
    5d50:	5f 85       	ldd	r21, Y+15	; 0x0f
    5d52:	88 89       	ldd	r24, Y+16	; 0x10
    5d54:	99 89       	ldd	r25, Y+17	; 0x11
    5d56:	aa 89       	ldd	r26, Y+18	; 0x12
    5d58:	bb 89       	ldd	r27, Y+19	; 0x13
    5d5a:	28 17       	cp	r18, r24
    5d5c:	39 07       	cpc	r19, r25
    5d5e:	4a 07       	cpc	r20, r26
    5d60:	5b 07       	cpc	r21, r27
    5d62:	28 f4       	brcc	.+10     	; 0x5d6e <_Z18validateTimeStringPcPma+0x94>
    5d64:	88 89       	ldd	r24, Y+16	; 0x10
    5d66:	99 89       	ldd	r25, Y+17	; 0x11
    5d68:	aa 89       	ldd	r26, Y+18	; 0x12
    5d6a:	bb 89       	ldd	r27, Y+19	; 0x13
    5d6c:	04 c0       	rjmp	.+8      	; 0x5d76 <_Z18validateTimeStringPcPma+0x9c>
    5d6e:	8c 85       	ldd	r24, Y+12	; 0x0c
    5d70:	9d 85       	ldd	r25, Y+13	; 0x0d
    5d72:	ae 85       	ldd	r26, Y+14	; 0x0e
    5d74:	bf 85       	ldd	r27, Y+15	; 0x0f
    5d76:	8f 83       	std	Y+7, r24	; 0x07
    5d78:	98 87       	std	Y+8, r25	; 0x08
    5d7a:	a9 87       	std	Y+9, r26	; 0x09
    5d7c:	ba 87       	std	Y+10, r27	; 0x0a
		validationType = 1;
    5d7e:	81 e0       	ldi	r24, 0x01	; 1
    5d80:	8b 87       	std	Y+11, r24	; 0x0b
    5d82:	39 c0       	rjmp	.+114    	; 0x5df6 <_Z18validateTimeStringPcPma+0x11c>
	}
	else if(epochVar == &g_event_finish_epoch)
    5d84:	8a a1       	ldd	r24, Y+34	; 0x22
    5d86:	9b a1       	ldd	r25, Y+35	; 0x23
    5d88:	80 5c       	subi	r24, 0xC0	; 192
    5d8a:	97 44       	sbci	r25, 0x47	; 71
    5d8c:	a1 f5       	brne	.+104    	; 0x5df6 <_Z18validateTimeStringPcPma+0x11c>
	{
		minimumEpoch = MAX(g_event_start_epoch, g_current_epoch);
    5d8e:	80 91 bc 47 	lds	r24, 0x47BC	; 0x8047bc <g_event_start_epoch>
    5d92:	90 91 bd 47 	lds	r25, 0x47BD	; 0x8047bd <g_event_start_epoch+0x1>
    5d96:	a0 91 be 47 	lds	r26, 0x47BE	; 0x8047be <g_event_start_epoch+0x2>
    5d9a:	b0 91 bf 47 	lds	r27, 0x47BF	; 0x8047bf <g_event_start_epoch+0x3>
    5d9e:	88 8f       	std	Y+24, r24	; 0x18
    5da0:	99 8f       	std	Y+25, r25	; 0x19
    5da2:	aa 8f       	std	Y+26, r26	; 0x1a
    5da4:	bb 8f       	std	Y+27, r27	; 0x1b
    5da6:	80 91 e4 47 	lds	r24, 0x47E4	; 0x8047e4 <g_current_epoch>
    5daa:	90 91 e5 47 	lds	r25, 0x47E5	; 0x8047e5 <g_current_epoch+0x1>
    5dae:	a0 91 e6 47 	lds	r26, 0x47E6	; 0x8047e6 <g_current_epoch+0x2>
    5db2:	b0 91 e7 47 	lds	r27, 0x47E7	; 0x8047e7 <g_current_epoch+0x3>
    5db6:	8c 8f       	std	Y+28, r24	; 0x1c
    5db8:	9d 8f       	std	Y+29, r25	; 0x1d
    5dba:	ae 8f       	std	Y+30, r26	; 0x1e
    5dbc:	bf 8f       	std	Y+31, r27	; 0x1f
    5dbe:	28 8d       	ldd	r18, Y+24	; 0x18
    5dc0:	39 8d       	ldd	r19, Y+25	; 0x19
    5dc2:	4a 8d       	ldd	r20, Y+26	; 0x1a
    5dc4:	5b 8d       	ldd	r21, Y+27	; 0x1b
    5dc6:	8c 8d       	ldd	r24, Y+28	; 0x1c
    5dc8:	9d 8d       	ldd	r25, Y+29	; 0x1d
    5dca:	ae 8d       	ldd	r26, Y+30	; 0x1e
    5dcc:	bf 8d       	ldd	r27, Y+31	; 0x1f
    5dce:	28 17       	cp	r18, r24
    5dd0:	39 07       	cpc	r19, r25
    5dd2:	4a 07       	cpc	r20, r26
    5dd4:	5b 07       	cpc	r21, r27
    5dd6:	28 f4       	brcc	.+10     	; 0x5de2 <_Z18validateTimeStringPcPma+0x108>
    5dd8:	8c 8d       	ldd	r24, Y+28	; 0x1c
    5dda:	9d 8d       	ldd	r25, Y+29	; 0x1d
    5ddc:	ae 8d       	ldd	r26, Y+30	; 0x1e
    5dde:	bf 8d       	ldd	r27, Y+31	; 0x1f
    5de0:	04 c0       	rjmp	.+8      	; 0x5dea <_Z18validateTimeStringPcPma+0x110>
    5de2:	88 8d       	ldd	r24, Y+24	; 0x18
    5de4:	99 8d       	ldd	r25, Y+25	; 0x19
    5de6:	aa 8d       	ldd	r26, Y+26	; 0x1a
    5de8:	bb 8d       	ldd	r27, Y+27	; 0x1b
    5dea:	8f 83       	std	Y+7, r24	; 0x07
    5dec:	98 87       	std	Y+8, r25	; 0x08
    5dee:	a9 87       	std	Y+9, r26	; 0x09
    5df0:	ba 87       	std	Y+10, r27	; 0x0a
		validationType = 2;
    5df2:	82 e0       	ldi	r24, 0x02	; 2
    5df4:	8b 87       	std	Y+11, r24	; 0x0b
	}
	
	if(len == 10)
    5df6:	8d 81       	ldd	r24, Y+5	; 0x05
    5df8:	9e 81       	ldd	r25, Y+6	; 0x06
    5dfa:	0a 97       	sbiw	r24, 0x0a	; 10
    5dfc:	a9 f4       	brne	.+42     	; 0x5e28 <_Z18validateTimeStringPcPma+0x14e>
	{
		str[10] = '0';
    5dfe:	88 a1       	ldd	r24, Y+32	; 0x20
    5e00:	99 a1       	ldd	r25, Y+33	; 0x21
    5e02:	0a 96       	adiw	r24, 0x0a	; 10
    5e04:	20 e3       	ldi	r18, 0x30	; 48
    5e06:	fc 01       	movw	r30, r24
    5e08:	20 83       	st	Z, r18
		str[11] = '0';
    5e0a:	88 a1       	ldd	r24, Y+32	; 0x20
    5e0c:	99 a1       	ldd	r25, Y+33	; 0x21
    5e0e:	0b 96       	adiw	r24, 0x0b	; 11
    5e10:	20 e3       	ldi	r18, 0x30	; 48
    5e12:	fc 01       	movw	r30, r24
    5e14:	20 83       	st	Z, r18
		str[12] = '\0';
    5e16:	88 a1       	ldd	r24, Y+32	; 0x20
    5e18:	99 a1       	ldd	r25, Y+33	; 0x21
    5e1a:	0c 96       	adiw	r24, 0x0c	; 12
    5e1c:	fc 01       	movw	r30, r24
    5e1e:	10 82       	st	Z, r1
		len = 12;
    5e20:	8c e0       	ldi	r24, 0x0C	; 12
    5e22:	90 e0       	ldi	r25, 0x00	; 0
    5e24:	8d 83       	std	Y+5, r24	; 0x05
    5e26:	9e 83       	std	Y+6, r25	; 0x06
	}

	if((len == 12) && (only_digits(str)))
    5e28:	8d 81       	ldd	r24, Y+5	; 0x05
    5e2a:	9e 81       	ldd	r25, Y+6	; 0x06
    5e2c:	0c 97       	sbiw	r24, 0x0c	; 12
    5e2e:	41 f4       	brne	.+16     	; 0x5e40 <_Z18validateTimeStringPcPma+0x166>
    5e30:	88 a1       	ldd	r24, Y+32	; 0x20
    5e32:	99 a1       	ldd	r25, Y+33	; 0x21
    5e34:	0e 94 dc 6b 	call	0xd7b8	; 0xd7b8 <_Z11only_digitsPc>
    5e38:	88 23       	and	r24, r24
    5e3a:	11 f0       	breq	.+4      	; 0x5e40 <_Z18validateTimeStringPcPma+0x166>
    5e3c:	81 e0       	ldi	r24, 0x01	; 1
    5e3e:	01 c0       	rjmp	.+2      	; 0x5e42 <_Z18validateTimeStringPcPma+0x168>
    5e40:	80 e0       	ldi	r24, 0x00	; 0
    5e42:	88 23       	and	r24, r24
    5e44:	09 f4       	brne	.+2      	; 0x5e48 <_Z18validateTimeStringPcPma+0x16e>
    5e46:	67 c0       	rjmp	.+206    	; 0x5f16 <_Z18validateTimeStringPcPma+0x23c>
	{
		time_t ep = RTC_String2Epoch(NULL, str);    /* String format "YYMMDDhhmmss" */
    5e48:	88 a1       	ldd	r24, Y+32	; 0x20
    5e4a:	99 a1       	ldd	r25, Y+33	; 0x21
    5e4c:	bc 01       	movw	r22, r24
    5e4e:	80 e0       	ldi	r24, 0x00	; 0
    5e50:	90 e0       	ldi	r25, 0x00	; 0
    5e52:	0e 94 00 3c 	call	0x7800	; 0x7800 <RTC_String2Epoch>
    5e56:	dc 01       	movw	r26, r24
    5e58:	cb 01       	movw	r24, r22
    5e5a:	8c 8b       	std	Y+20, r24	; 0x14
    5e5c:	9d 8b       	std	Y+21, r25	; 0x15
    5e5e:	ae 8b       	std	Y+22, r26	; 0x16
    5e60:	bf 8b       	std	Y+23, r27	; 0x17

		ep += (HOUR * offsetHours);
    5e62:	8c a1       	ldd	r24, Y+36	; 0x24
    5e64:	28 2f       	mov	r18, r24
    5e66:	88 0f       	add	r24, r24
    5e68:	33 0b       	sbc	r19, r19
    5e6a:	44 0b       	sbc	r20, r20
    5e6c:	55 0b       	sbc	r21, r21
    5e6e:	80 e1       	ldi	r24, 0x10	; 16
    5e70:	9e e0       	ldi	r25, 0x0E	; 14
    5e72:	dc 01       	movw	r26, r24
    5e74:	0e 94 5b 72 	call	0xe4b6	; 0xe4b6 <__muluhisi3>
    5e78:	9b 01       	movw	r18, r22
    5e7a:	ac 01       	movw	r20, r24
    5e7c:	8c 89       	ldd	r24, Y+20	; 0x14
    5e7e:	9d 89       	ldd	r25, Y+21	; 0x15
    5e80:	ae 89       	ldd	r26, Y+22	; 0x16
    5e82:	bf 89       	ldd	r27, Y+23	; 0x17
    5e84:	82 0f       	add	r24, r18
    5e86:	93 1f       	adc	r25, r19
    5e88:	a4 1f       	adc	r26, r20
    5e8a:	b5 1f       	adc	r27, r21
    5e8c:	8c 8b       	std	Y+20, r24	; 0x14
    5e8e:	9d 8b       	std	Y+21, r25	; 0x15
    5e90:	ae 8b       	std	Y+22, r26	; 0x16
    5e92:	bf 8b       	std	Y+23, r27	; 0x17

		if(ep > minimumEpoch)
    5e94:	2c 89       	ldd	r18, Y+20	; 0x14
    5e96:	3d 89       	ldd	r19, Y+21	; 0x15
    5e98:	4e 89       	ldd	r20, Y+22	; 0x16
    5e9a:	5f 89       	ldd	r21, Y+23	; 0x17
    5e9c:	8f 81       	ldd	r24, Y+7	; 0x07
    5e9e:	98 85       	ldd	r25, Y+8	; 0x08
    5ea0:	a9 85       	ldd	r26, Y+9	; 0x09
    5ea2:	ba 85       	ldd	r27, Y+10	; 0x0a
    5ea4:	82 17       	cp	r24, r18
    5ea6:	93 07       	cpc	r25, r19
    5ea8:	a4 07       	cpc	r26, r20
    5eaa:	b5 07       	cpc	r27, r21
    5eac:	48 f4       	brcc	.+18     	; 0x5ec0 <_Z18validateTimeStringPcPma+0x1e6>
		{
			valid = ep;
    5eae:	8c 89       	ldd	r24, Y+20	; 0x14
    5eb0:	9d 89       	ldd	r25, Y+21	; 0x15
    5eb2:	ae 89       	ldd	r26, Y+22	; 0x16
    5eb4:	bf 89       	ldd	r27, Y+23	; 0x17
    5eb6:	89 83       	std	Y+1, r24	; 0x01
    5eb8:	9a 83       	std	Y+2, r25	; 0x02
    5eba:	ab 83       	std	Y+3, r26	; 0x03
    5ebc:	bc 83       	std	Y+4, r27	; 0x04
    5ebe:	33 c0       	rjmp	.+102    	; 0x5f26 <_Z18validateTimeStringPcPma+0x24c>
		}
		else
		{
			if(validationType == 1)         /* start time validation */
    5ec0:	8b 85       	ldd	r24, Y+11	; 0x0b
    5ec2:	81 30       	cpi	r24, 0x01	; 1
    5ec4:	29 f4       	brne	.+10     	; 0x5ed0 <_Z18validateTimeStringPcPma+0x1f6>
			{
				sb_send_string(TEXT_ERR_START_IN_PAST_TXT);
    5ec6:	82 e3       	ldi	r24, 0x32	; 50
    5ec8:	93 e4       	ldi	r25, 0x43	; 67
    5eca:	0e 94 fd 5a 	call	0xb5fa	; 0xb5fa <sb_send_string>
    5ece:	2b c0       	rjmp	.+86     	; 0x5f26 <_Z18validateTimeStringPcPma+0x24c>
			}
			else if(validationType == 2)    /* finish time validation */
    5ed0:	8b 85       	ldd	r24, Y+11	; 0x0b
    5ed2:	82 30       	cpi	r24, 0x02	; 2
    5ed4:	d9 f4       	brne	.+54     	; 0x5f0c <_Z18validateTimeStringPcPma+0x232>
			{
				if(ep < g_current_epoch)
    5ed6:	80 91 e4 47 	lds	r24, 0x47E4	; 0x8047e4 <g_current_epoch>
    5eda:	90 91 e5 47 	lds	r25, 0x47E5	; 0x8047e5 <g_current_epoch+0x1>
    5ede:	a0 91 e6 47 	lds	r26, 0x47E6	; 0x8047e6 <g_current_epoch+0x2>
    5ee2:	b0 91 e7 47 	lds	r27, 0x47E7	; 0x8047e7 <g_current_epoch+0x3>
    5ee6:	2c 89       	ldd	r18, Y+20	; 0x14
    5ee8:	3d 89       	ldd	r19, Y+21	; 0x15
    5eea:	4e 89       	ldd	r20, Y+22	; 0x16
    5eec:	5f 89       	ldd	r21, Y+23	; 0x17
    5eee:	28 17       	cp	r18, r24
    5ef0:	39 07       	cpc	r19, r25
    5ef2:	4a 07       	cpc	r20, r26
    5ef4:	5b 07       	cpc	r21, r27
    5ef6:	28 f4       	brcc	.+10     	; 0x5f02 <_Z18validateTimeStringPcPma+0x228>
				{
					sb_send_string(TEXT_ERR_FINISH_IN_PAST_TXT);
    5ef8:	87 e4       	ldi	r24, 0x47	; 71
    5efa:	93 e4       	ldi	r25, 0x43	; 67
    5efc:	0e 94 fd 5a 	call	0xb5fa	; 0xb5fa <sb_send_string>
    5f00:	12 c0       	rjmp	.+36     	; 0x5f26 <_Z18validateTimeStringPcPma+0x24c>
				}
				else
				{
					sb_send_string(TEXT_ERR_FINISH_BEFORE_START_TXT);
    5f02:	8d e5       	ldi	r24, 0x5D	; 93
    5f04:	93 e4       	ldi	r25, 0x43	; 67
    5f06:	0e 94 fd 5a 	call	0xb5fa	; 0xb5fa <sb_send_string>
    5f0a:	0d c0       	rjmp	.+26     	; 0x5f26 <_Z18validateTimeStringPcPma+0x24c>
				}
			}
			else    /* current time validation */
			{
				sb_send_string(TEXT_ERR_TIME_IN_PAST_TXT);
    5f0c:	88 e7       	ldi	r24, 0x78	; 120
    5f0e:	93 e4       	ldi	r25, 0x43	; 67
    5f10:	0e 94 fd 5a 	call	0xb5fa	; 0xb5fa <sb_send_string>
    5f14:	08 c0       	rjmp	.+16     	; 0x5f26 <_Z18validateTimeStringPcPma+0x24c>
			}
		}
	}
	else if(len)
    5f16:	8d 81       	ldd	r24, Y+5	; 0x05
    5f18:	9e 81       	ldd	r25, Y+6	; 0x06
    5f1a:	89 2b       	or	r24, r25
    5f1c:	21 f0       	breq	.+8      	; 0x5f26 <_Z18validateTimeStringPcPma+0x24c>
	{
		sb_send_string(TEXT_ERR_INVALID_TIME_TXT);
    5f1e:	8c e8       	ldi	r24, 0x8C	; 140
    5f20:	93 e4       	ldi	r25, 0x43	; 67
    5f22:	0e 94 fd 5a 	call	0xb5fa	; 0xb5fa <sb_send_string>
	}

	return(valid);
    5f26:	89 81       	ldd	r24, Y+1	; 0x01
    5f28:	9a 81       	ldd	r25, Y+2	; 0x02
    5f2a:	ab 81       	ldd	r26, Y+3	; 0x03
    5f2c:	bc 81       	ldd	r27, Y+4	; 0x04
}
    5f2e:	bc 01       	movw	r22, r24
    5f30:	cd 01       	movw	r24, r26
    5f32:	a4 96       	adiw	r28, 0x24	; 36
    5f34:	cd bf       	out	0x3d, r28	; 61
    5f36:	de bf       	out	0x3e, r29	; 62
    5f38:	df 91       	pop	r29
    5f3a:	cf 91       	pop	r28
    5f3c:	08 95       	ret

00005f3e <_Z14reportTimeTillmmPKcS0_>:


bool reportTimeTill(time_t from, time_t until, const char* prefix, const char* failMsg)
{
    5f3e:	ef 92       	push	r14
    5f40:	ff 92       	push	r15
    5f42:	0f 93       	push	r16
    5f44:	1f 93       	push	r17
    5f46:	cf 93       	push	r28
    5f48:	df 93       	push	r29
    5f4a:	cd b7       	in	r28, 0x3d	; 61
    5f4c:	de b7       	in	r29, 0x3e	; 62
    5f4e:	6f 97       	sbiw	r28, 0x1f	; 31
    5f50:	cd bf       	out	0x3d, r28	; 61
    5f52:	de bf       	out	0x3e, r29	; 62
    5f54:	6c 8b       	std	Y+20, r22	; 0x14
    5f56:	7d 8b       	std	Y+21, r23	; 0x15
    5f58:	8e 8b       	std	Y+22, r24	; 0x16
    5f5a:	9f 8b       	std	Y+23, r25	; 0x17
    5f5c:	28 8f       	std	Y+24, r18	; 0x18
    5f5e:	39 8f       	std	Y+25, r19	; 0x19
    5f60:	4a 8f       	std	Y+26, r20	; 0x1a
    5f62:	5b 8f       	std	Y+27, r21	; 0x1b
    5f64:	0c 8f       	std	Y+28, r16	; 0x1c
    5f66:	1d 8f       	std	Y+29, r17	; 0x1d
    5f68:	ee 8e       	std	Y+30, r14	; 0x1e
    5f6a:	ff 8e       	std	Y+31, r15	; 0x1f
	bool failure = false;
    5f6c:	19 82       	std	Y+1, r1	; 0x01

	if(from >= until)   /* Negative time */
    5f6e:	2c 89       	ldd	r18, Y+20	; 0x14
    5f70:	3d 89       	ldd	r19, Y+21	; 0x15
    5f72:	4e 89       	ldd	r20, Y+22	; 0x16
    5f74:	5f 89       	ldd	r21, Y+23	; 0x17
    5f76:	88 8d       	ldd	r24, Y+24	; 0x18
    5f78:	99 8d       	ldd	r25, Y+25	; 0x19
    5f7a:	aa 8d       	ldd	r26, Y+26	; 0x1a
    5f7c:	bb 8d       	ldd	r27, Y+27	; 0x1b
    5f7e:	28 17       	cp	r18, r24
    5f80:	39 07       	cpc	r19, r25
    5f82:	4a 07       	cpc	r20, r26
    5f84:	5b 07       	cpc	r21, r27
    5f86:	60 f0       	brcs	.+24     	; 0x5fa0 <_Z14reportTimeTillmmPKcS0_+0x62>
	{
		failure = true;
    5f88:	81 e0       	ldi	r24, 0x01	; 1
    5f8a:	89 83       	std	Y+1, r24	; 0x01
		if(failMsg)
    5f8c:	8e 8d       	ldd	r24, Y+30	; 0x1e
    5f8e:	9f 8d       	ldd	r25, Y+31	; 0x1f
    5f90:	89 2b       	or	r24, r25
    5f92:	09 f4       	brne	.+2      	; 0x5f96 <_Z14reportTimeTillmmPKcS0_+0x58>
    5f94:	6b c1       	rjmp	.+726    	; 0x626c <_Z14reportTimeTillmmPKcS0_+0x32e>
		{
			sb_send_string((char*)failMsg);
    5f96:	8e 8d       	ldd	r24, Y+30	; 0x1e
    5f98:	9f 8d       	ldd	r25, Y+31	; 0x1f
    5f9a:	0e 94 fd 5a 	call	0xb5fa	; 0xb5fa <sb_send_string>
    5f9e:	66 c1       	rjmp	.+716    	; 0x626c <_Z14reportTimeTillmmPKcS0_+0x32e>
		}
	}
	else
	{
		if(prefix)
    5fa0:	8c 8d       	ldd	r24, Y+28	; 0x1c
    5fa2:	9d 8d       	ldd	r25, Y+29	; 0x1d
    5fa4:	89 2b       	or	r24, r25
    5fa6:	21 f0       	breq	.+8      	; 0x5fb0 <_Z14reportTimeTillmmPKcS0_+0x72>
		{
			sb_send_string((char*)prefix);
    5fa8:	8c 8d       	ldd	r24, Y+28	; 0x1c
    5faa:	9d 8d       	ldd	r25, Y+29	; 0x1d
    5fac:	0e 94 fd 5a 	call	0xb5fa	; 0xb5fa <sb_send_string>
		}
		time_t dif = until - from;
    5fb0:	28 8d       	ldd	r18, Y+24	; 0x18
    5fb2:	39 8d       	ldd	r19, Y+25	; 0x19
    5fb4:	4a 8d       	ldd	r20, Y+26	; 0x1a
    5fb6:	5b 8d       	ldd	r21, Y+27	; 0x1b
    5fb8:	8c 89       	ldd	r24, Y+20	; 0x14
    5fba:	9d 89       	ldd	r25, Y+21	; 0x15
    5fbc:	ae 89       	ldd	r26, Y+22	; 0x16
    5fbe:	bf 89       	ldd	r27, Y+23	; 0x17
    5fc0:	79 01       	movw	r14, r18
    5fc2:	8a 01       	movw	r16, r20
    5fc4:	e8 1a       	sub	r14, r24
    5fc6:	f9 0a       	sbc	r15, r25
    5fc8:	0a 0b       	sbc	r16, r26
    5fca:	1b 0b       	sbc	r17, r27
    5fcc:	d8 01       	movw	r26, r16
    5fce:	c7 01       	movw	r24, r14
    5fd0:	8a 83       	std	Y+2, r24	; 0x02
    5fd2:	9b 83       	std	Y+3, r25	; 0x03
    5fd4:	ac 83       	std	Y+4, r26	; 0x04
    5fd6:	bd 83       	std	Y+5, r27	; 0x05
		uint16_t years = dif / YEAR;
    5fd8:	8a 81       	ldd	r24, Y+2	; 0x02
    5fda:	9b 81       	ldd	r25, Y+3	; 0x03
    5fdc:	ac 81       	ldd	r26, Y+4	; 0x04
    5fde:	bd 81       	ldd	r27, Y+5	; 0x05
    5fe0:	20 e8       	ldi	r18, 0x80	; 128
    5fe2:	33 e3       	ldi	r19, 0x33	; 51
    5fe4:	41 ee       	ldi	r20, 0xE1	; 225
    5fe6:	51 e0       	ldi	r21, 0x01	; 1
    5fe8:	bc 01       	movw	r22, r24
    5fea:	cd 01       	movw	r24, r26
    5fec:	0e 94 02 72 	call	0xe404	; 0xe404 <__udivmodsi4>
    5ff0:	da 01       	movw	r26, r20
    5ff2:	c9 01       	movw	r24, r18
    5ff4:	8e 83       	std	Y+6, r24	; 0x06
    5ff6:	9f 83       	std	Y+7, r25	; 0x07
		time_t hold = dif - (years * YEAR);
    5ff8:	8e 81       	ldd	r24, Y+6	; 0x06
    5ffa:	9f 81       	ldd	r25, Y+7	; 0x07
    5ffc:	cc 01       	movw	r24, r24
    5ffe:	a0 e0       	ldi	r26, 0x00	; 0
    6000:	b0 e0       	ldi	r27, 0x00	; 0
    6002:	9c 01       	movw	r18, r24
    6004:	ad 01       	movw	r20, r26
    6006:	60 e8       	ldi	r22, 0x80	; 128
    6008:	73 e3       	ldi	r23, 0x33	; 51
    600a:	81 ee       	ldi	r24, 0xE1	; 225
    600c:	91 e0       	ldi	r25, 0x01	; 1
    600e:	0e 94 ca 71 	call	0xe394	; 0xe394 <__mulsi3>
    6012:	9b 01       	movw	r18, r22
    6014:	ac 01       	movw	r20, r24
    6016:	8a 81       	ldd	r24, Y+2	; 0x02
    6018:	9b 81       	ldd	r25, Y+3	; 0x03
    601a:	ac 81       	ldd	r26, Y+4	; 0x04
    601c:	bd 81       	ldd	r27, Y+5	; 0x05
    601e:	82 1b       	sub	r24, r18
    6020:	93 0b       	sbc	r25, r19
    6022:	a4 0b       	sbc	r26, r20
    6024:	b5 0b       	sbc	r27, r21
    6026:	88 87       	std	Y+8, r24	; 0x08
    6028:	99 87       	std	Y+9, r25	; 0x09
    602a:	aa 87       	std	Y+10, r26	; 0x0a
    602c:	bb 87       	std	Y+11, r27	; 0x0b
		uint16_t days = hold / DAY;
    602e:	88 85       	ldd	r24, Y+8	; 0x08
    6030:	99 85       	ldd	r25, Y+9	; 0x09
    6032:	aa 85       	ldd	r26, Y+10	; 0x0a
    6034:	bb 85       	ldd	r27, Y+11	; 0x0b
    6036:	20 e8       	ldi	r18, 0x80	; 128
    6038:	31 e5       	ldi	r19, 0x51	; 81
    603a:	41 e0       	ldi	r20, 0x01	; 1
    603c:	50 e0       	ldi	r21, 0x00	; 0
    603e:	bc 01       	movw	r22, r24
    6040:	cd 01       	movw	r24, r26
    6042:	0e 94 02 72 	call	0xe404	; 0xe404 <__udivmodsi4>
    6046:	da 01       	movw	r26, r20
    6048:	c9 01       	movw	r24, r18
    604a:	8c 87       	std	Y+12, r24	; 0x0c
    604c:	9d 87       	std	Y+13, r25	; 0x0d
		hold -= (days * DAY);
    604e:	8c 85       	ldd	r24, Y+12	; 0x0c
    6050:	9d 85       	ldd	r25, Y+13	; 0x0d
    6052:	cc 01       	movw	r24, r24
    6054:	a0 e0       	ldi	r26, 0x00	; 0
    6056:	b0 e0       	ldi	r27, 0x00	; 0
    6058:	9c 01       	movw	r18, r24
    605a:	ad 01       	movw	r20, r26
    605c:	60 e8       	ldi	r22, 0x80	; 128
    605e:	71 e5       	ldi	r23, 0x51	; 81
    6060:	81 e0       	ldi	r24, 0x01	; 1
    6062:	90 e0       	ldi	r25, 0x00	; 0
    6064:	0e 94 ca 71 	call	0xe394	; 0xe394 <__mulsi3>
    6068:	9b 01       	movw	r18, r22
    606a:	ac 01       	movw	r20, r24
    606c:	88 85       	ldd	r24, Y+8	; 0x08
    606e:	99 85       	ldd	r25, Y+9	; 0x09
    6070:	aa 85       	ldd	r26, Y+10	; 0x0a
    6072:	bb 85       	ldd	r27, Y+11	; 0x0b
    6074:	82 1b       	sub	r24, r18
    6076:	93 0b       	sbc	r25, r19
    6078:	a4 0b       	sbc	r26, r20
    607a:	b5 0b       	sbc	r27, r21
    607c:	88 87       	std	Y+8, r24	; 0x08
    607e:	99 87       	std	Y+9, r25	; 0x09
    6080:	aa 87       	std	Y+10, r26	; 0x0a
    6082:	bb 87       	std	Y+11, r27	; 0x0b
		uint16_t hours = hold / HOUR;
    6084:	88 85       	ldd	r24, Y+8	; 0x08
    6086:	99 85       	ldd	r25, Y+9	; 0x09
    6088:	aa 85       	ldd	r26, Y+10	; 0x0a
    608a:	bb 85       	ldd	r27, Y+11	; 0x0b
    608c:	20 e1       	ldi	r18, 0x10	; 16
    608e:	3e e0       	ldi	r19, 0x0E	; 14
    6090:	40 e0       	ldi	r20, 0x00	; 0
    6092:	50 e0       	ldi	r21, 0x00	; 0
    6094:	bc 01       	movw	r22, r24
    6096:	cd 01       	movw	r24, r26
    6098:	0e 94 02 72 	call	0xe404	; 0xe404 <__udivmodsi4>
    609c:	da 01       	movw	r26, r20
    609e:	c9 01       	movw	r24, r18
    60a0:	8e 87       	std	Y+14, r24	; 0x0e
    60a2:	9f 87       	std	Y+15, r25	; 0x0f
		hold -= (hours * HOUR);
    60a4:	8e 85       	ldd	r24, Y+14	; 0x0e
    60a6:	9f 85       	ldd	r25, Y+15	; 0x0f
    60a8:	9c 01       	movw	r18, r24
    60aa:	40 e0       	ldi	r20, 0x00	; 0
    60ac:	50 e0       	ldi	r21, 0x00	; 0
    60ae:	80 e1       	ldi	r24, 0x10	; 16
    60b0:	9e e0       	ldi	r25, 0x0E	; 14
    60b2:	dc 01       	movw	r26, r24
    60b4:	0e 94 5b 72 	call	0xe4b6	; 0xe4b6 <__muluhisi3>
    60b8:	9b 01       	movw	r18, r22
    60ba:	ac 01       	movw	r20, r24
    60bc:	88 85       	ldd	r24, Y+8	; 0x08
    60be:	99 85       	ldd	r25, Y+9	; 0x09
    60c0:	aa 85       	ldd	r26, Y+10	; 0x0a
    60c2:	bb 85       	ldd	r27, Y+11	; 0x0b
    60c4:	82 1b       	sub	r24, r18
    60c6:	93 0b       	sbc	r25, r19
    60c8:	a4 0b       	sbc	r26, r20
    60ca:	b5 0b       	sbc	r27, r21
    60cc:	88 87       	std	Y+8, r24	; 0x08
    60ce:	99 87       	std	Y+9, r25	; 0x09
    60d0:	aa 87       	std	Y+10, r26	; 0x0a
    60d2:	bb 87       	std	Y+11, r27	; 0x0b
		uint16_t minutes = hold / MINUTE;
    60d4:	88 85       	ldd	r24, Y+8	; 0x08
    60d6:	99 85       	ldd	r25, Y+9	; 0x09
    60d8:	aa 85       	ldd	r26, Y+10	; 0x0a
    60da:	bb 85       	ldd	r27, Y+11	; 0x0b
    60dc:	2c e3       	ldi	r18, 0x3C	; 60
    60de:	30 e0       	ldi	r19, 0x00	; 0
    60e0:	40 e0       	ldi	r20, 0x00	; 0
    60e2:	50 e0       	ldi	r21, 0x00	; 0
    60e4:	bc 01       	movw	r22, r24
    60e6:	cd 01       	movw	r24, r26
    60e8:	0e 94 02 72 	call	0xe404	; 0xe404 <__udivmodsi4>
    60ec:	da 01       	movw	r26, r20
    60ee:	c9 01       	movw	r24, r18
    60f0:	88 8b       	std	Y+16, r24	; 0x10
    60f2:	99 8b       	std	Y+17, r25	; 0x11
		uint16_t seconds = hold - (minutes * MINUTE);
    60f4:	28 85       	ldd	r18, Y+8	; 0x08
    60f6:	39 85       	ldd	r19, Y+9	; 0x09
    60f8:	48 89       	ldd	r20, Y+16	; 0x10
    60fa:	59 89       	ldd	r21, Y+17	; 0x11
    60fc:	6c e3       	ldi	r22, 0x3C	; 60
    60fe:	64 9f       	mul	r22, r20
    6100:	c0 01       	movw	r24, r0
    6102:	65 9f       	mul	r22, r21
    6104:	90 0d       	add	r25, r0
    6106:	11 24       	eor	r1, r1
    6108:	89 01       	movw	r16, r18
    610a:	08 1b       	sub	r16, r24
    610c:	19 0b       	sbc	r17, r25
    610e:	c8 01       	movw	r24, r16
    6110:	8a 8b       	std	Y+18, r24	; 0x12
    6112:	9b 8b       	std	Y+19, r25	; 0x13

		g_tempStr[0] = '\0';
    6114:	10 92 49 47 	sts	0x4749, r1	; 0x804749 <_ZL9g_tempStr>

		if(years)
    6118:	8e 81       	ldd	r24, Y+6	; 0x06
    611a:	9f 81       	ldd	r25, Y+7	; 0x07
    611c:	89 2b       	or	r24, r25
    611e:	f1 f0       	breq	.+60     	; 0x615c <_Z14reportTimeTillmmPKcS0_+0x21e>
		{
			sprintf(g_tempStr, "%d yrs ", years);
    6120:	8f 81       	ldd	r24, Y+7	; 0x07
    6122:	8f 93       	push	r24
    6124:	8e 81       	ldd	r24, Y+6	; 0x06
    6126:	8f 93       	push	r24
    6128:	80 ea       	ldi	r24, 0xA0	; 160
    612a:	93 e4       	ldi	r25, 0x43	; 67
    612c:	89 2f       	mov	r24, r25
    612e:	8f 93       	push	r24
    6130:	80 ea       	ldi	r24, 0xA0	; 160
    6132:	93 e4       	ldi	r25, 0x43	; 67
    6134:	8f 93       	push	r24
    6136:	89 e4       	ldi	r24, 0x49	; 73
    6138:	97 e4       	ldi	r25, 0x47	; 71
    613a:	89 2f       	mov	r24, r25
    613c:	8f 93       	push	r24
    613e:	89 e4       	ldi	r24, 0x49	; 73
    6140:	97 e4       	ldi	r25, 0x47	; 71
    6142:	8f 93       	push	r24
    6144:	0e 94 31 74 	call	0xe862	; 0xe862 <sprintf>
    6148:	0f 90       	pop	r0
    614a:	0f 90       	pop	r0
    614c:	0f 90       	pop	r0
    614e:	0f 90       	pop	r0
    6150:	0f 90       	pop	r0
    6152:	0f 90       	pop	r0
			sb_send_string(g_tempStr);
    6154:	89 e4       	ldi	r24, 0x49	; 73
    6156:	97 e4       	ldi	r25, 0x47	; 71
    6158:	0e 94 fd 5a 	call	0xb5fa	; 0xb5fa <sb_send_string>
		}

		if(days)
    615c:	8c 85       	ldd	r24, Y+12	; 0x0c
    615e:	9d 85       	ldd	r25, Y+13	; 0x0d
    6160:	89 2b       	or	r24, r25
    6162:	f1 f0       	breq	.+60     	; 0x61a0 <_Z14reportTimeTillmmPKcS0_+0x262>
		{
			sprintf(g_tempStr, "%d days ", days);
    6164:	8d 85       	ldd	r24, Y+13	; 0x0d
    6166:	8f 93       	push	r24
    6168:	8c 85       	ldd	r24, Y+12	; 0x0c
    616a:	8f 93       	push	r24
    616c:	88 ea       	ldi	r24, 0xA8	; 168
    616e:	93 e4       	ldi	r25, 0x43	; 67
    6170:	89 2f       	mov	r24, r25
    6172:	8f 93       	push	r24
    6174:	88 ea       	ldi	r24, 0xA8	; 168
    6176:	93 e4       	ldi	r25, 0x43	; 67
    6178:	8f 93       	push	r24
    617a:	89 e4       	ldi	r24, 0x49	; 73
    617c:	97 e4       	ldi	r25, 0x47	; 71
    617e:	89 2f       	mov	r24, r25
    6180:	8f 93       	push	r24
    6182:	89 e4       	ldi	r24, 0x49	; 73
    6184:	97 e4       	ldi	r25, 0x47	; 71
    6186:	8f 93       	push	r24
    6188:	0e 94 31 74 	call	0xe862	; 0xe862 <sprintf>
    618c:	0f 90       	pop	r0
    618e:	0f 90       	pop	r0
    6190:	0f 90       	pop	r0
    6192:	0f 90       	pop	r0
    6194:	0f 90       	pop	r0
    6196:	0f 90       	pop	r0
			sb_send_string(g_tempStr);
    6198:	89 e4       	ldi	r24, 0x49	; 73
    619a:	97 e4       	ldi	r25, 0x47	; 71
    619c:	0e 94 fd 5a 	call	0xb5fa	; 0xb5fa <sb_send_string>
		}

		if(hours)
    61a0:	8e 85       	ldd	r24, Y+14	; 0x0e
    61a2:	9f 85       	ldd	r25, Y+15	; 0x0f
    61a4:	89 2b       	or	r24, r25
    61a6:	f1 f0       	breq	.+60     	; 0x61e4 <_Z14reportTimeTillmmPKcS0_+0x2a6>
		{
			sprintf(g_tempStr, "%d hrs ", hours);
    61a8:	8f 85       	ldd	r24, Y+15	; 0x0f
    61aa:	8f 93       	push	r24
    61ac:	8e 85       	ldd	r24, Y+14	; 0x0e
    61ae:	8f 93       	push	r24
    61b0:	81 eb       	ldi	r24, 0xB1	; 177
    61b2:	93 e4       	ldi	r25, 0x43	; 67
    61b4:	89 2f       	mov	r24, r25
    61b6:	8f 93       	push	r24
    61b8:	81 eb       	ldi	r24, 0xB1	; 177
    61ba:	93 e4       	ldi	r25, 0x43	; 67
    61bc:	8f 93       	push	r24
    61be:	89 e4       	ldi	r24, 0x49	; 73
    61c0:	97 e4       	ldi	r25, 0x47	; 71
    61c2:	89 2f       	mov	r24, r25
    61c4:	8f 93       	push	r24
    61c6:	89 e4       	ldi	r24, 0x49	; 73
    61c8:	97 e4       	ldi	r25, 0x47	; 71
    61ca:	8f 93       	push	r24
    61cc:	0e 94 31 74 	call	0xe862	; 0xe862 <sprintf>
    61d0:	0f 90       	pop	r0
    61d2:	0f 90       	pop	r0
    61d4:	0f 90       	pop	r0
    61d6:	0f 90       	pop	r0
    61d8:	0f 90       	pop	r0
    61da:	0f 90       	pop	r0
			sb_send_string(g_tempStr);
    61dc:	89 e4       	ldi	r24, 0x49	; 73
    61de:	97 e4       	ldi	r25, 0x47	; 71
    61e0:	0e 94 fd 5a 	call	0xb5fa	; 0xb5fa <sb_send_string>
		}

		if(minutes)
    61e4:	88 89       	ldd	r24, Y+16	; 0x10
    61e6:	99 89       	ldd	r25, Y+17	; 0x11
    61e8:	89 2b       	or	r24, r25
    61ea:	f1 f0       	breq	.+60     	; 0x6228 <_Z14reportTimeTillmmPKcS0_+0x2ea>
		{
			sprintf(g_tempStr, "%d min ", minutes);
    61ec:	89 89       	ldd	r24, Y+17	; 0x11
    61ee:	8f 93       	push	r24
    61f0:	88 89       	ldd	r24, Y+16	; 0x10
    61f2:	8f 93       	push	r24
    61f4:	89 eb       	ldi	r24, 0xB9	; 185
    61f6:	93 e4       	ldi	r25, 0x43	; 67
    61f8:	89 2f       	mov	r24, r25
    61fa:	8f 93       	push	r24
    61fc:	89 eb       	ldi	r24, 0xB9	; 185
    61fe:	93 e4       	ldi	r25, 0x43	; 67
    6200:	8f 93       	push	r24
    6202:	89 e4       	ldi	r24, 0x49	; 73
    6204:	97 e4       	ldi	r25, 0x47	; 71
    6206:	89 2f       	mov	r24, r25
    6208:	8f 93       	push	r24
    620a:	89 e4       	ldi	r24, 0x49	; 73
    620c:	97 e4       	ldi	r25, 0x47	; 71
    620e:	8f 93       	push	r24
    6210:	0e 94 31 74 	call	0xe862	; 0xe862 <sprintf>
    6214:	0f 90       	pop	r0
    6216:	0f 90       	pop	r0
    6218:	0f 90       	pop	r0
    621a:	0f 90       	pop	r0
    621c:	0f 90       	pop	r0
    621e:	0f 90       	pop	r0
			sb_send_string(g_tempStr);
    6220:	89 e4       	ldi	r24, 0x49	; 73
    6222:	97 e4       	ldi	r25, 0x47	; 71
    6224:	0e 94 fd 5a 	call	0xb5fa	; 0xb5fa <sb_send_string>
		}

		sprintf(g_tempStr, "%d sec", seconds);
    6228:	8b 89       	ldd	r24, Y+19	; 0x13
    622a:	8f 93       	push	r24
    622c:	8a 89       	ldd	r24, Y+18	; 0x12
    622e:	8f 93       	push	r24
    6230:	81 ec       	ldi	r24, 0xC1	; 193
    6232:	93 e4       	ldi	r25, 0x43	; 67
    6234:	89 2f       	mov	r24, r25
    6236:	8f 93       	push	r24
    6238:	81 ec       	ldi	r24, 0xC1	; 193
    623a:	93 e4       	ldi	r25, 0x43	; 67
    623c:	8f 93       	push	r24
    623e:	89 e4       	ldi	r24, 0x49	; 73
    6240:	97 e4       	ldi	r25, 0x47	; 71
    6242:	89 2f       	mov	r24, r25
    6244:	8f 93       	push	r24
    6246:	89 e4       	ldi	r24, 0x49	; 73
    6248:	97 e4       	ldi	r25, 0x47	; 71
    624a:	8f 93       	push	r24
    624c:	0e 94 31 74 	call	0xe862	; 0xe862 <sprintf>
    6250:	0f 90       	pop	r0
    6252:	0f 90       	pop	r0
    6254:	0f 90       	pop	r0
    6256:	0f 90       	pop	r0
    6258:	0f 90       	pop	r0
    625a:	0f 90       	pop	r0
		sb_send_string(g_tempStr);
    625c:	89 e4       	ldi	r24, 0x49	; 73
    625e:	97 e4       	ldi	r25, 0x47	; 71
    6260:	0e 94 fd 5a 	call	0xb5fa	; 0xb5fa <sb_send_string>

		sb_send_NewLine();
    6264:	0e 94 d3 5a 	call	0xb5a6	; 0xb5a6 <sb_send_NewLine>
		g_tempStr[0] = '\0';
    6268:	10 92 49 47 	sts	0x4749, r1	; 0x804749 <_ZL9g_tempStr>
	}

	return( failure);
    626c:	89 81       	ldd	r24, Y+1	; 0x01
}
    626e:	6f 96       	adiw	r28, 0x1f	; 31
    6270:	cd bf       	out	0x3d, r28	; 61
    6272:	de bf       	out	0x3e, r29	; 62
    6274:	df 91       	pop	r29
    6276:	cf 91       	pop	r28
    6278:	1f 91       	pop	r17
    627a:	0f 91       	pop	r16
    627c:	ff 90       	pop	r15
    627e:	ef 90       	pop	r14
    6280:	08 95       	ret

00006282 <_Z23clockConfigurationCheckv>:



ConfigurationState_t clockConfigurationCheck(void)
{
    6282:	cf 93       	push	r28
    6284:	df 93       	push	r29
    6286:	cd b7       	in	r28, 0x3d	; 61
    6288:	de b7       	in	r29, 0x3e	; 62
	if((g_event_finish_epoch < MINIMUM_EPOCH) || (g_event_start_epoch < MINIMUM_EPOCH) || (g_current_epoch < MINIMUM_EPOCH))
    628a:	80 91 c0 47 	lds	r24, 0x47C0	; 0x8047c0 <g_event_finish_epoch>
    628e:	90 91 c1 47 	lds	r25, 0x47C1	; 0x8047c1 <g_event_finish_epoch+0x1>
    6292:	a0 91 c2 47 	lds	r26, 0x47C2	; 0x8047c2 <g_event_finish_epoch+0x2>
    6296:	b0 91 c3 47 	lds	r27, 0x47C3	; 0x8047c3 <g_event_finish_epoch+0x3>
    629a:	81 15       	cp	r24, r1
    629c:	96 46       	sbci	r25, 0x66	; 102
    629e:	ae 4e       	sbci	r26, 0xEE	; 238
    62a0:	bf 45       	sbci	r27, 0x5F	; 95
    62a2:	d0 f0       	brcs	.+52     	; 0x62d8 <_Z23clockConfigurationCheckv+0x56>
    62a4:	80 91 bc 47 	lds	r24, 0x47BC	; 0x8047bc <g_event_start_epoch>
    62a8:	90 91 bd 47 	lds	r25, 0x47BD	; 0x8047bd <g_event_start_epoch+0x1>
    62ac:	a0 91 be 47 	lds	r26, 0x47BE	; 0x8047be <g_event_start_epoch+0x2>
    62b0:	b0 91 bf 47 	lds	r27, 0x47BF	; 0x8047bf <g_event_start_epoch+0x3>
    62b4:	81 15       	cp	r24, r1
    62b6:	96 46       	sbci	r25, 0x66	; 102
    62b8:	ae 4e       	sbci	r26, 0xEE	; 238
    62ba:	bf 45       	sbci	r27, 0x5F	; 95
    62bc:	68 f0       	brcs	.+26     	; 0x62d8 <_Z23clockConfigurationCheckv+0x56>
    62be:	80 91 e4 47 	lds	r24, 0x47E4	; 0x8047e4 <g_current_epoch>
    62c2:	90 91 e5 47 	lds	r25, 0x47E5	; 0x8047e5 <g_current_epoch+0x1>
    62c6:	a0 91 e6 47 	lds	r26, 0x47E6	; 0x8047e6 <g_current_epoch+0x2>
    62ca:	b0 91 e7 47 	lds	r27, 0x47E7	; 0x8047e7 <g_current_epoch+0x3>
    62ce:	81 15       	cp	r24, r1
    62d0:	96 46       	sbci	r25, 0x66	; 102
    62d2:	ae 4e       	sbci	r26, 0xEE	; 238
    62d4:	bf 45       	sbci	r27, 0x5F	; 95
    62d6:	10 f4       	brcc	.+4      	; 0x62dc <_Z23clockConfigurationCheckv+0x5a>
    62d8:	81 e0       	ldi	r24, 0x01	; 1
    62da:	01 c0       	rjmp	.+2      	; 0x62de <_Z23clockConfigurationCheckv+0x5c>
    62dc:	80 e0       	ldi	r24, 0x00	; 0
    62de:	88 23       	and	r24, r24
    62e0:	11 f0       	breq	.+4      	; 0x62e6 <_Z23clockConfigurationCheckv+0x64>
	{
		return(CONFIGURATION_ERROR);
    62e2:	82 e0       	ldi	r24, 0x02	; 2
    62e4:	62 c0       	rjmp	.+196    	; 0x63aa <_Z23clockConfigurationCheckv+0x128>
	}

	if(g_event_finish_epoch <= g_event_start_epoch) /* Event configured to finish before it started */
    62e6:	20 91 c0 47 	lds	r18, 0x47C0	; 0x8047c0 <g_event_finish_epoch>
    62ea:	30 91 c1 47 	lds	r19, 0x47C1	; 0x8047c1 <g_event_finish_epoch+0x1>
    62ee:	40 91 c2 47 	lds	r20, 0x47C2	; 0x8047c2 <g_event_finish_epoch+0x2>
    62f2:	50 91 c3 47 	lds	r21, 0x47C3	; 0x8047c3 <g_event_finish_epoch+0x3>
    62f6:	80 91 bc 47 	lds	r24, 0x47BC	; 0x8047bc <g_event_start_epoch>
    62fa:	90 91 bd 47 	lds	r25, 0x47BD	; 0x8047bd <g_event_start_epoch+0x1>
    62fe:	a0 91 be 47 	lds	r26, 0x47BE	; 0x8047be <g_event_start_epoch+0x2>
    6302:	b0 91 bf 47 	lds	r27, 0x47BF	; 0x8047bf <g_event_start_epoch+0x3>
    6306:	61 e0       	ldi	r22, 0x01	; 1
    6308:	82 17       	cp	r24, r18
    630a:	93 07       	cpc	r25, r19
    630c:	a4 07       	cpc	r26, r20
    630e:	b5 07       	cpc	r27, r21
    6310:	08 f4       	brcc	.+2      	; 0x6314 <_Z23clockConfigurationCheckv+0x92>
    6312:	60 e0       	ldi	r22, 0x00	; 0
    6314:	66 23       	and	r22, r22
    6316:	11 f0       	breq	.+4      	; 0x631c <_Z23clockConfigurationCheckv+0x9a>
	{
		return(CONFIGURATION_ERROR);
    6318:	82 e0       	ldi	r24, 0x02	; 2
    631a:	47 c0       	rjmp	.+142    	; 0x63aa <_Z23clockConfigurationCheckv+0x128>
	}

	if(g_current_epoch > g_event_finish_epoch)  /* The scheduled event is over */
    631c:	20 91 e4 47 	lds	r18, 0x47E4	; 0x8047e4 <g_current_epoch>
    6320:	30 91 e5 47 	lds	r19, 0x47E5	; 0x8047e5 <g_current_epoch+0x1>
    6324:	40 91 e6 47 	lds	r20, 0x47E6	; 0x8047e6 <g_current_epoch+0x2>
    6328:	50 91 e7 47 	lds	r21, 0x47E7	; 0x8047e7 <g_current_epoch+0x3>
    632c:	80 91 c0 47 	lds	r24, 0x47C0	; 0x8047c0 <g_event_finish_epoch>
    6330:	90 91 c1 47 	lds	r25, 0x47C1	; 0x8047c1 <g_event_finish_epoch+0x1>
    6334:	a0 91 c2 47 	lds	r26, 0x47C2	; 0x8047c2 <g_event_finish_epoch+0x2>
    6338:	b0 91 c3 47 	lds	r27, 0x47C3	; 0x8047c3 <g_event_finish_epoch+0x3>
    633c:	61 e0       	ldi	r22, 0x01	; 1
    633e:	82 17       	cp	r24, r18
    6340:	93 07       	cpc	r25, r19
    6342:	a4 07       	cpc	r26, r20
    6344:	b5 07       	cpc	r27, r21
    6346:	08 f0       	brcs	.+2      	; 0x634a <_Z23clockConfigurationCheckv+0xc8>
    6348:	60 e0       	ldi	r22, 0x00	; 0
    634a:	66 23       	and	r22, r22
    634c:	11 f0       	breq	.+4      	; 0x6352 <_Z23clockConfigurationCheckv+0xd0>
	{
		return(CONFIGURATION_ERROR);
    634e:	82 e0       	ldi	r24, 0x02	; 2
    6350:	2c c0       	rjmp	.+88     	; 0x63aa <_Z23clockConfigurationCheckv+0x128>
	}

	if(g_current_epoch > g_event_start_epoch)       /* Event should be running */
    6352:	20 91 e4 47 	lds	r18, 0x47E4	; 0x8047e4 <g_current_epoch>
    6356:	30 91 e5 47 	lds	r19, 0x47E5	; 0x8047e5 <g_current_epoch+0x1>
    635a:	40 91 e6 47 	lds	r20, 0x47E6	; 0x8047e6 <g_current_epoch+0x2>
    635e:	50 91 e7 47 	lds	r21, 0x47E7	; 0x8047e7 <g_current_epoch+0x3>
    6362:	80 91 bc 47 	lds	r24, 0x47BC	; 0x8047bc <g_event_start_epoch>
    6366:	90 91 bd 47 	lds	r25, 0x47BD	; 0x8047bd <g_event_start_epoch+0x1>
    636a:	a0 91 be 47 	lds	r26, 0x47BE	; 0x8047be <g_event_start_epoch+0x2>
    636e:	b0 91 bf 47 	lds	r27, 0x47BF	; 0x8047bf <g_event_start_epoch+0x3>
    6372:	61 e0       	ldi	r22, 0x01	; 1
    6374:	82 17       	cp	r24, r18
    6376:	93 07       	cpc	r25, r19
    6378:	a4 07       	cpc	r26, r20
    637a:	b5 07       	cpc	r27, r21
    637c:	08 f0       	brcs	.+2      	; 0x6380 <_Z23clockConfigurationCheckv+0xfe>
    637e:	60 e0       	ldi	r22, 0x00	; 0
    6380:	66 23       	and	r22, r22
    6382:	51 f0       	breq	.+20     	; 0x6398 <_Z23clockConfigurationCheckv+0x116>
	{
		if(!g_event_enabled)
    6384:	90 91 c4 47 	lds	r25, 0x47C4	; 0x8047c4 <g_event_enabled>
    6388:	81 e0       	ldi	r24, 0x01	; 1
    638a:	89 27       	eor	r24, r25
    638c:	88 23       	and	r24, r24
    638e:	11 f0       	breq	.+4      	; 0x6394 <_Z23clockConfigurationCheckv+0x112>
		{
			return(SCHEDULED_EVENT_DID_NOT_START);  /* Event scheduled to be running isn't */
    6390:	83 e0       	ldi	r24, 0x03	; 3
    6392:	0b c0       	rjmp	.+22     	; 0x63aa <_Z23clockConfigurationCheckv+0x128>
		}
		else
		{
			return(EVENT_IN_PROGRESS);              /* Event is running, so clock settings don't matter */
    6394:	85 e0       	ldi	r24, 0x05	; 5
    6396:	09 c0       	rjmp	.+18     	; 0x63aa <_Z23clockConfigurationCheckv+0x128>
		}
	}
	else if(!g_use_rtc_for_startstop)
    6398:	90 91 e8 47 	lds	r25, 0x47E8	; 0x8047e8 <g_use_rtc_for_startstop>
    639c:	81 e0       	ldi	r24, 0x01	; 1
    639e:	89 27       	eor	r24, r25
    63a0:	88 23       	and	r24, r24
    63a2:	11 f0       	breq	.+4      	; 0x63a8 <_Z23clockConfigurationCheckv+0x126>
	{
		return(SCHEDULED_EVENT_WILL_NEVER_RUN);
    63a4:	84 e0       	ldi	r24, 0x04	; 4
    63a6:	01 c0       	rjmp	.+2      	; 0x63aa <_Z23clockConfigurationCheckv+0x128>
	}

	return(WAITING_FOR_START);  /* Future event hasn't started yet */
    63a8:	81 e0       	ldi	r24, 0x01	; 1
}
    63aa:	df 91       	pop	r29
    63ac:	cf 91       	pop	r28
    63ae:	08 95       	ret

000063b0 <_Z18reportConfigErrorsv>:

void reportConfigErrors(void)
{
    63b0:	cf 93       	push	r28
    63b2:	df 93       	push	r29
    63b4:	cd b7       	in	r28, 0x3d	; 61
    63b6:	de b7       	in	r29, 0x3e	; 62
	g_current_epoch = ds3231_get_epoch(null);
    63b8:	80 e0       	ldi	r24, 0x00	; 0
    63ba:	90 e0       	ldi	r25, 0x00	; 0
    63bc:	0e 94 b2 3d 	call	0x7b64	; 0x7b64 <ds3231_get_epoch>
    63c0:	dc 01       	movw	r26, r24
    63c2:	cb 01       	movw	r24, r22
    63c4:	80 93 e4 47 	sts	0x47E4, r24	; 0x8047e4 <g_current_epoch>
    63c8:	90 93 e5 47 	sts	0x47E5, r25	; 0x8047e5 <g_current_epoch+0x1>
    63cc:	a0 93 e6 47 	sts	0x47E6, r26	; 0x8047e6 <g_current_epoch+0x2>
    63d0:	b0 93 e7 47 	sts	0x47E7, r27	; 0x8047e7 <g_current_epoch+0x3>

	if(g_messages_text[STATION_ID][0] == '\0')
    63d4:	80 91 a3 47 	lds	r24, 0x47A3	; 0x8047a3 <g_messages_text+0x15>
    63d8:	88 23       	and	r24, r24
    63da:	21 f4       	brne	.+8      	; 0x63e4 <_Z18reportConfigErrorsv+0x34>
	{
		sb_send_string(TEXT_SET_ID_TXT);
    63dc:	88 ec       	ldi	r24, 0xC8	; 200
    63de:	93 e4       	ldi	r25, 0x43	; 67
    63e0:	0e 94 fd 5a 	call	0xb5fa	; 0xb5fa <sb_send_string>
	}

	if(g_current_epoch < MINIMUM_EPOCH) /* Current time is invalid */
    63e4:	80 91 e4 47 	lds	r24, 0x47E4	; 0x8047e4 <g_current_epoch>
    63e8:	90 91 e5 47 	lds	r25, 0x47E5	; 0x8047e5 <g_current_epoch+0x1>
    63ec:	a0 91 e6 47 	lds	r26, 0x47E6	; 0x8047e6 <g_current_epoch+0x2>
    63f0:	b0 91 e7 47 	lds	r27, 0x47E7	; 0x8047e7 <g_current_epoch+0x3>
    63f4:	81 15       	cp	r24, r1
    63f6:	96 46       	sbci	r25, 0x66	; 102
    63f8:	ae 4e       	sbci	r26, 0xEE	; 238
    63fa:	bf 45       	sbci	r27, 0x5F	; 95
    63fc:	20 f4       	brcc	.+8      	; 0x6406 <_Z18reportConfigErrorsv+0x56>
	{
		sb_send_string(TEXT_SET_TIME_TXT);
    63fe:	89 ee       	ldi	r24, 0xE9	; 233
    6400:	93 e4       	ldi	r25, 0x43	; 67
    6402:	0e 94 fd 5a 	call	0xb5fa	; 0xb5fa <sb_send_string>
	}

	if(g_event_finish_epoch < g_current_epoch)      /* Event has already finished */
    6406:	20 91 c0 47 	lds	r18, 0x47C0	; 0x8047c0 <g_event_finish_epoch>
    640a:	30 91 c1 47 	lds	r19, 0x47C1	; 0x8047c1 <g_event_finish_epoch+0x1>
    640e:	40 91 c2 47 	lds	r20, 0x47C2	; 0x8047c2 <g_event_finish_epoch+0x2>
    6412:	50 91 c3 47 	lds	r21, 0x47C3	; 0x8047c3 <g_event_finish_epoch+0x3>
    6416:	80 91 e4 47 	lds	r24, 0x47E4	; 0x8047e4 <g_current_epoch>
    641a:	90 91 e5 47 	lds	r25, 0x47E5	; 0x8047e5 <g_current_epoch+0x1>
    641e:	a0 91 e6 47 	lds	r26, 0x47E6	; 0x8047e6 <g_current_epoch+0x2>
    6422:	b0 91 e7 47 	lds	r27, 0x47E7	; 0x8047e7 <g_current_epoch+0x3>
    6426:	61 e0       	ldi	r22, 0x01	; 1
    6428:	28 17       	cp	r18, r24
    642a:	39 07       	cpc	r19, r25
    642c:	4a 07       	cpc	r20, r26
    642e:	5b 07       	cpc	r21, r27
    6430:	08 f0       	brcs	.+2      	; 0x6434 <_Z18reportConfigErrorsv+0x84>
    6432:	60 e0       	ldi	r22, 0x00	; 0
    6434:	66 23       	and	r22, r22
    6436:	11 f1       	breq	.+68     	; 0x647c <_Z18reportConfigErrorsv+0xcc>
	{
		if(g_event_start_epoch < g_current_epoch)   /* Event has already started */
    6438:	20 91 bc 47 	lds	r18, 0x47BC	; 0x8047bc <g_event_start_epoch>
    643c:	30 91 bd 47 	lds	r19, 0x47BD	; 0x8047bd <g_event_start_epoch+0x1>
    6440:	40 91 be 47 	lds	r20, 0x47BE	; 0x8047be <g_event_start_epoch+0x2>
    6444:	50 91 bf 47 	lds	r21, 0x47BF	; 0x8047bf <g_event_start_epoch+0x3>
    6448:	80 91 e4 47 	lds	r24, 0x47E4	; 0x8047e4 <g_current_epoch>
    644c:	90 91 e5 47 	lds	r25, 0x47E5	; 0x8047e5 <g_current_epoch+0x1>
    6450:	a0 91 e6 47 	lds	r26, 0x47E6	; 0x8047e6 <g_current_epoch+0x2>
    6454:	b0 91 e7 47 	lds	r27, 0x47E7	; 0x8047e7 <g_current_epoch+0x3>
    6458:	61 e0       	ldi	r22, 0x01	; 1
    645a:	28 17       	cp	r18, r24
    645c:	39 07       	cpc	r19, r25
    645e:	4a 07       	cpc	r20, r26
    6460:	5b 07       	cpc	r21, r27
    6462:	08 f0       	brcs	.+2      	; 0x6466 <_Z18reportConfigErrorsv+0xb6>
    6464:	60 e0       	ldi	r22, 0x00	; 0
    6466:	66 23       	and	r22, r22
    6468:	21 f0       	breq	.+8      	; 0x6472 <_Z18reportConfigErrorsv+0xc2>
		{
			sb_send_string(TEXT_SET_START_TXT);
    646a:	81 e1       	ldi	r24, 0x11	; 17
    646c:	94 e4       	ldi	r25, 0x44	; 68
    646e:	0e 94 fd 5a 	call	0xb5fa	; 0xb5fa <sb_send_string>
		}

		sb_send_string(TEXT_SET_FINISH_TXT);
    6472:	87 e3       	ldi	r24, 0x37	; 55
    6474:	94 e4       	ldi	r25, 0x44	; 68
    6476:	0e 94 fd 5a 	call	0xb5fa	; 0xb5fa <sb_send_string>
		else
		{
			sb_send_string((char*)"Event running...\n");
		}
	}
}
    647a:	33 c0       	rjmp	.+102    	; 0x64e2 <_Z18reportConfigErrorsv+0x132>
			sb_send_string(TEXT_SET_START_TXT);
		}

		sb_send_string(TEXT_SET_FINISH_TXT);
	}
	else if(g_event_start_epoch < g_current_epoch)  /* Event has already started */
    647c:	20 91 bc 47 	lds	r18, 0x47BC	; 0x8047bc <g_event_start_epoch>
    6480:	30 91 bd 47 	lds	r19, 0x47BD	; 0x8047bd <g_event_start_epoch+0x1>
    6484:	40 91 be 47 	lds	r20, 0x47BE	; 0x8047be <g_event_start_epoch+0x2>
    6488:	50 91 bf 47 	lds	r21, 0x47BF	; 0x8047bf <g_event_start_epoch+0x3>
    648c:	80 91 e4 47 	lds	r24, 0x47E4	; 0x8047e4 <g_current_epoch>
    6490:	90 91 e5 47 	lds	r25, 0x47E5	; 0x8047e5 <g_current_epoch+0x1>
    6494:	a0 91 e6 47 	lds	r26, 0x47E6	; 0x8047e6 <g_current_epoch+0x2>
    6498:	b0 91 e7 47 	lds	r27, 0x47E7	; 0x8047e7 <g_current_epoch+0x3>
    649c:	61 e0       	ldi	r22, 0x01	; 1
    649e:	28 17       	cp	r18, r24
    64a0:	39 07       	cpc	r19, r25
    64a2:	4a 07       	cpc	r20, r26
    64a4:	5b 07       	cpc	r21, r27
    64a6:	08 f0       	brcs	.+2      	; 0x64aa <_Z18reportConfigErrorsv+0xfa>
    64a8:	60 e0       	ldi	r22, 0x00	; 0
    64aa:	66 23       	and	r22, r22
    64ac:	d1 f0       	breq	.+52     	; 0x64e2 <_Z18reportConfigErrorsv+0x132>
	{
		if(g_event_start_epoch < MINIMUM_EPOCH)     /* Start in invalid */
    64ae:	80 91 bc 47 	lds	r24, 0x47BC	; 0x8047bc <g_event_start_epoch>
    64b2:	90 91 bd 47 	lds	r25, 0x47BD	; 0x8047bd <g_event_start_epoch+0x1>
    64b6:	a0 91 be 47 	lds	r26, 0x47BE	; 0x8047be <g_event_start_epoch+0x2>
    64ba:	b0 91 bf 47 	lds	r27, 0x47BF	; 0x8047bf <g_event_start_epoch+0x3>
    64be:	21 e0       	ldi	r18, 0x01	; 1
    64c0:	81 15       	cp	r24, r1
    64c2:	96 46       	sbci	r25, 0x66	; 102
    64c4:	ae 4e       	sbci	r26, 0xEE	; 238
    64c6:	bf 45       	sbci	r27, 0x5F	; 95
    64c8:	08 f0       	brcs	.+2      	; 0x64cc <_Z18reportConfigErrorsv+0x11c>
    64ca:	20 e0       	ldi	r18, 0x00	; 0
    64cc:	22 23       	and	r18, r18
    64ce:	29 f0       	breq	.+10     	; 0x64da <_Z18reportConfigErrorsv+0x12a>
		{
			sb_send_string(TEXT_SET_START_TXT);
    64d0:	81 e1       	ldi	r24, 0x11	; 17
    64d2:	94 e4       	ldi	r25, 0x44	; 68
    64d4:	0e 94 fd 5a 	call	0xb5fa	; 0xb5fa <sb_send_string>
		else
		{
			sb_send_string((char*)"Event running...\n");
		}
	}
}
    64d8:	04 c0       	rjmp	.+8      	; 0x64e2 <_Z18reportConfigErrorsv+0x132>
		{
			sb_send_string(TEXT_SET_START_TXT);
		}
		else
		{
			sb_send_string((char*)"Event running...\n");
    64da:	8e e5       	ldi	r24, 0x5E	; 94
    64dc:	94 e4       	ldi	r25, 0x44	; 68
    64de:	0e 94 fd 5a 	call	0xb5fa	; 0xb5fa <sb_send_string>
		}
	}
}
    64e2:	00 00       	nop
    64e4:	df 91       	pop	r29
    64e6:	cf 91       	pop	r28
    64e8:	08 95       	ret

000064ea <_Z41__static_initialization_and_destruction_0ii>:
    64ea:	cf 93       	push	r28
    64ec:	df 93       	push	r29
    64ee:	00 d0       	rcall	.+0      	; 0x64f0 <_Z41__static_initialization_and_destruction_0ii+0x6>
    64f0:	00 d0       	rcall	.+0      	; 0x64f2 <_Z41__static_initialization_and_destruction_0ii+0x8>
    64f2:	cd b7       	in	r28, 0x3d	; 61
    64f4:	de b7       	in	r29, 0x3e	; 62
    64f6:	89 83       	std	Y+1, r24	; 0x01
    64f8:	9a 83       	std	Y+2, r25	; 0x02
    64fa:	6b 83       	std	Y+3, r22	; 0x03
    64fc:	7c 83       	std	Y+4, r23	; 0x04
    64fe:	89 81       	ldd	r24, Y+1	; 0x01
    6500:	9a 81       	ldd	r25, Y+2	; 0x02
    6502:	01 97       	sbiw	r24, 0x01	; 1
    6504:	41 f4       	brne	.+16     	; 0x6516 <_Z41__static_initialization_and_destruction_0ii+0x2c>
    6506:	8b 81       	ldd	r24, Y+3	; 0x03
    6508:	9c 81       	ldd	r25, Y+4	; 0x04
    650a:	01 96       	adiw	r24, 0x01	; 1
    650c:	21 f4       	brne	.+8      	; 0x6516 <_Z41__static_initialization_and_destruction_0ii+0x2c>
static volatile uint16_t g_lastConversionResult[NUMBER_OF_POLLED_ADC_CHANNELS];

extern Goertzel g_goertzel;
volatile uint16_t g_switch_closed_count = 0;

EepromManager g_ee_mgr;
    650e:	8a ed       	ldi	r24, 0xDA	; 218
    6510:	97 e4       	ldi	r25, 0x47	; 71
    6512:	0e 94 54 43 	call	0x86a8	; 0x86a8 <_ZN13EepromManagerC1Ev>
    6516:	89 81       	ldd	r24, Y+1	; 0x01
    6518:	9a 81       	ldd	r25, Y+2	; 0x02
    651a:	89 2b       	or	r24, r25
    651c:	41 f4       	brne	.+16     	; 0x652e <_Z41__static_initialization_and_destruction_0ii+0x44>
    651e:	8b 81       	ldd	r24, Y+3	; 0x03
    6520:	9c 81       	ldd	r25, Y+4	; 0x04
    6522:	01 96       	adiw	r24, 0x01	; 1
    6524:	21 f4       	brne	.+8      	; 0x652e <_Z41__static_initialization_and_destruction_0ii+0x44>
    6526:	8a ed       	ldi	r24, 0xDA	; 218
    6528:	97 e4       	ldi	r25, 0x47	; 71
    652a:	0e 94 61 43 	call	0x86c2	; 0x86c2 <_ZN13EepromManagerD1Ev>
		else
		{
			sb_send_string((char*)"Event running...\n");
		}
	}
}
    652e:	00 00       	nop
    6530:	24 96       	adiw	r28, 0x04	; 4
    6532:	cd bf       	out	0x3d, r28	; 61
    6534:	de bf       	out	0x3e, r29	; 62
    6536:	df 91       	pop	r29
    6538:	cf 91       	pop	r28
    653a:	08 95       	ret

0000653c <_GLOBAL__sub_I_g_battery_type>:
    653c:	cf 93       	push	r28
    653e:	df 93       	push	r29
    6540:	cd b7       	in	r28, 0x3d	; 61
    6542:	de b7       	in	r29, 0x3e	; 62
    6544:	6f ef       	ldi	r22, 0xFF	; 255
    6546:	7f ef       	ldi	r23, 0xFF	; 255
    6548:	81 e0       	ldi	r24, 0x01	; 1
    654a:	90 e0       	ldi	r25, 0x00	; 0
    654c:	0e 94 75 32 	call	0x64ea	; 0x64ea <_Z41__static_initialization_and_destruction_0ii>
    6550:	df 91       	pop	r29
    6552:	cf 91       	pop	r28
    6554:	08 95       	ret

00006556 <_GLOBAL__sub_D_g_battery_type>:
    6556:	cf 93       	push	r28
    6558:	df 93       	push	r29
    655a:	cd b7       	in	r28, 0x3d	; 61
    655c:	de b7       	in	r29, 0x3e	; 62
    655e:	6f ef       	ldi	r22, 0xFF	; 255
    6560:	7f ef       	ldi	r23, 0xFF	; 255
    6562:	80 e0       	ldi	r24, 0x00	; 0
    6564:	90 e0       	ldi	r25, 0x00	; 0
    6566:	0e 94 75 32 	call	0x64ea	; 0x64ea <_Z41__static_initialization_and_destruction_0ii>
    656a:	df 91       	pop	r29
    656c:	cf 91       	pop	r28
    656e:	08 95       	ret

00006570 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t>:
	}
	
	ADC0.MUXPOS = holdMux; /* Restore ADC registers */
	
	return(temperature_in_C);
}
    6570:	cf 93       	push	r28
    6572:	df 93       	push	r29
    6574:	1f 92       	push	r1
    6576:	cd b7       	in	r28, 0x3d	; 61
    6578:	de b7       	in	r29, 0x3e	; 62
    657a:	89 83       	std	Y+1, r24	; 0x01
    657c:	89 81       	ldd	r24, Y+1	; 0x01
    657e:	88 2f       	mov	r24, r24
    6580:	90 e0       	ldi	r25, 0x00	; 0
    6582:	83 30       	cpi	r24, 0x03	; 3
    6584:	91 05       	cpc	r25, r1
    6586:	09 f1       	breq	.+66     	; 0x65ca <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x5a>
    6588:	84 30       	cpi	r24, 0x04	; 4
    658a:	91 05       	cpc	r25, r1
    658c:	34 f4       	brge	.+12     	; 0x659a <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x2a>
    658e:	81 30       	cpi	r24, 0x01	; 1
    6590:	91 05       	cpc	r25, r1
    6592:	49 f0       	breq	.+18     	; 0x65a6 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x36>
    6594:	02 97       	sbiw	r24, 0x02	; 2
    6596:	81 f0       	breq	.+32     	; 0x65b8 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x48>
    6598:	33 c0       	rjmp	.+102    	; 0x6600 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x90>
    659a:	84 30       	cpi	r24, 0x04	; 4
    659c:	91 05       	cpc	r25, r1
    659e:	f1 f0       	breq	.+60     	; 0x65dc <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x6c>
    65a0:	05 97       	sbiw	r24, 0x05	; 5
    65a2:	29 f1       	breq	.+74     	; 0x65ee <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x7e>
    65a4:	2d c0       	rjmp	.+90     	; 0x6600 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x90>
    65a6:	81 e0       	ldi	r24, 0x01	; 1
    65a8:	0e 94 c1 33 	call	0x6782	; 0x6782 <_ZL16ADC0_SYSTEM_initb>
    65ac:	80 e0       	ldi	r24, 0x00	; 0
    65ae:	96 e0       	ldi	r25, 0x06	; 6
    65b0:	22 e0       	ldi	r18, 0x02	; 2
    65b2:	fc 01       	movw	r30, r24
    65b4:	20 87       	std	Z+8, r18	; 0x08
    65b6:	27 c0       	rjmp	.+78     	; 0x6606 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x96>
    65b8:	80 e0       	ldi	r24, 0x00	; 0
    65ba:	0e 94 c1 33 	call	0x6782	; 0x6782 <_ZL16ADC0_SYSTEM_initb>
    65be:	80 e0       	ldi	r24, 0x00	; 0
    65c0:	96 e0       	ldi	r25, 0x06	; 6
    65c2:	23 e0       	ldi	r18, 0x03	; 3
    65c4:	fc 01       	movw	r30, r24
    65c6:	20 87       	std	Z+8, r18	; 0x08
    65c8:	1e c0       	rjmp	.+60     	; 0x6606 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x96>
    65ca:	80 e0       	ldi	r24, 0x00	; 0
    65cc:	0e 94 c1 33 	call	0x6782	; 0x6782 <_ZL16ADC0_SYSTEM_initb>
    65d0:	80 e0       	ldi	r24, 0x00	; 0
    65d2:	96 e0       	ldi	r25, 0x06	; 6
    65d4:	24 e0       	ldi	r18, 0x04	; 4
    65d6:	fc 01       	movw	r30, r24
    65d8:	20 87       	std	Z+8, r18	; 0x08
    65da:	15 c0       	rjmp	.+42     	; 0x6606 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x96>
    65dc:	80 e0       	ldi	r24, 0x00	; 0
    65de:	0e 94 c1 33 	call	0x6782	; 0x6782 <_ZL16ADC0_SYSTEM_initb>
    65e2:	80 e0       	ldi	r24, 0x00	; 0
    65e4:	96 e0       	ldi	r25, 0x06	; 6
    65e6:	25 e0       	ldi	r18, 0x05	; 5
    65e8:	fc 01       	movw	r30, r24
    65ea:	20 87       	std	Z+8, r18	; 0x08
    65ec:	0c c0       	rjmp	.+24     	; 0x6606 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x96>
    65ee:	80 e0       	ldi	r24, 0x00	; 0
    65f0:	0e 94 c1 33 	call	0x6782	; 0x6782 <_ZL16ADC0_SYSTEM_initb>
    65f4:	80 e0       	ldi	r24, 0x00	; 0
    65f6:	96 e0       	ldi	r25, 0x06	; 6
    65f8:	22 e4       	ldi	r18, 0x42	; 66
    65fa:	fc 01       	movw	r30, r24
    65fc:	20 87       	std	Z+8, r18	; 0x08
    65fe:	03 c0       	rjmp	.+6      	; 0x6606 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x96>
    6600:	0e 94 d6 33 	call	0x67ac	; 0x67ac <_ZL20ADC0_SYSTEM_shutdownv>
    6604:	00 00       	nop
    6606:	00 00       	nop
    6608:	0f 90       	pop	r0
    660a:	df 91       	pop	r29
    660c:	cf 91       	pop	r28
    660e:	08 95       	ret

00006610 <_Z9ADC0_readv>:
    6610:	cf 93       	push	r28
    6612:	df 93       	push	r29
    6614:	cd b7       	in	r28, 0x3d	; 61
    6616:	de b7       	in	r29, 0x3e	; 62
    6618:	80 e0       	ldi	r24, 0x00	; 0
    661a:	96 e0       	ldi	r25, 0x06	; 6
    661c:	fc 01       	movw	r30, r24
    661e:	80 89       	ldd	r24, Z+16	; 0x10
    6620:	91 89       	ldd	r25, Z+17	; 0x11
    6622:	df 91       	pop	r29
    6624:	cf 91       	pop	r28
    6626:	08 95       	ret

00006628 <_ZL9PORT_initv>:


static void PORT_init(void)
{
    6628:	cf 93       	push	r28
    662a:	df 93       	push	r29
    662c:	cd b7       	in	r28, 0x3d	; 61
    662e:	de b7       	in	r29, 0x3e	; 62
	/* Disable interrupt and digital input buffer on PD2 */
	PORTD.PIN2CTRL &= ~PORT_ISC_gm;
    6630:	80 e6       	ldi	r24, 0x60	; 96
    6632:	94 e0       	ldi	r25, 0x04	; 4
    6634:	20 e6       	ldi	r18, 0x60	; 96
    6636:	34 e0       	ldi	r19, 0x04	; 4
    6638:	f9 01       	movw	r30, r18
    663a:	22 89       	ldd	r18, Z+18	; 0x12
    663c:	28 7f       	andi	r18, 0xF8	; 248
    663e:	fc 01       	movw	r30, r24
    6640:	22 8b       	std	Z+18, r18	; 0x12
	PORTD.PIN2CTRL |= PORT_ISC_INPUT_DISABLE_gc;
    6642:	80 e6       	ldi	r24, 0x60	; 96
    6644:	94 e0       	ldi	r25, 0x04	; 4
    6646:	20 e6       	ldi	r18, 0x60	; 96
    6648:	34 e0       	ldi	r19, 0x04	; 4
    664a:	f9 01       	movw	r30, r18
    664c:	22 89       	ldd	r18, Z+18	; 0x12
    664e:	24 60       	ori	r18, 0x04	; 4
    6650:	fc 01       	movw	r30, r24
    6652:	22 8b       	std	Z+18, r18	; 0x12
	/* Disable interrupt and digital input buffer on PD3 */
	PORTD.PIN3CTRL &= ~PORT_ISC_gm;
    6654:	80 e6       	ldi	r24, 0x60	; 96
    6656:	94 e0       	ldi	r25, 0x04	; 4
    6658:	20 e6       	ldi	r18, 0x60	; 96
    665a:	34 e0       	ldi	r19, 0x04	; 4
    665c:	f9 01       	movw	r30, r18
    665e:	23 89       	ldd	r18, Z+19	; 0x13
    6660:	28 7f       	andi	r18, 0xF8	; 248
    6662:	fc 01       	movw	r30, r24
    6664:	23 8b       	std	Z+19, r18	; 0x13
	PORTD.PIN3CTRL |= PORT_ISC_INPUT_DISABLE_gc;
    6666:	80 e6       	ldi	r24, 0x60	; 96
    6668:	94 e0       	ldi	r25, 0x04	; 4
    666a:	20 e6       	ldi	r18, 0x60	; 96
    666c:	34 e0       	ldi	r19, 0x04	; 4
    666e:	f9 01       	movw	r30, r18
    6670:	23 89       	ldd	r18, Z+19	; 0x13
    6672:	24 60       	ori	r18, 0x04	; 4
    6674:	fc 01       	movw	r30, r24
    6676:	23 8b       	std	Z+19, r18	; 0x13
	/* Disable interrupt and digital input buffer on PD4 */
	PORTD.PIN4CTRL &= ~PORT_ISC_gm;
    6678:	80 e6       	ldi	r24, 0x60	; 96
    667a:	94 e0       	ldi	r25, 0x04	; 4
    667c:	20 e6       	ldi	r18, 0x60	; 96
    667e:	34 e0       	ldi	r19, 0x04	; 4
    6680:	f9 01       	movw	r30, r18
    6682:	24 89       	ldd	r18, Z+20	; 0x14
    6684:	28 7f       	andi	r18, 0xF8	; 248
    6686:	fc 01       	movw	r30, r24
    6688:	24 8b       	std	Z+20, r18	; 0x14
	PORTD.PIN4CTRL |= PORT_ISC_INPUT_DISABLE_gc;
    668a:	80 e6       	ldi	r24, 0x60	; 96
    668c:	94 e0       	ldi	r25, 0x04	; 4
    668e:	20 e6       	ldi	r18, 0x60	; 96
    6690:	34 e0       	ldi	r19, 0x04	; 4
    6692:	f9 01       	movw	r30, r18
    6694:	24 89       	ldd	r18, Z+20	; 0x14
    6696:	24 60       	ori	r18, 0x04	; 4
    6698:	fc 01       	movw	r30, r24
    669a:	24 8b       	std	Z+20, r18	; 0x14
	/* Disable interrupt and digital input buffer on PD5 */
	PORTD.PIN5CTRL &= ~PORT_ISC_gm;
    669c:	80 e6       	ldi	r24, 0x60	; 96
    669e:	94 e0       	ldi	r25, 0x04	; 4
    66a0:	20 e6       	ldi	r18, 0x60	; 96
    66a2:	34 e0       	ldi	r19, 0x04	; 4
    66a4:	f9 01       	movw	r30, r18
    66a6:	25 89       	ldd	r18, Z+21	; 0x15
    66a8:	28 7f       	andi	r18, 0xF8	; 248
    66aa:	fc 01       	movw	r30, r24
    66ac:	25 8b       	std	Z+21, r18	; 0x15
	PORTD.PIN5CTRL |= PORT_ISC_INPUT_DISABLE_gc;
    66ae:	80 e6       	ldi	r24, 0x60	; 96
    66b0:	94 e0       	ldi	r25, 0x04	; 4
    66b2:	20 e6       	ldi	r18, 0x60	; 96
    66b4:	34 e0       	ldi	r19, 0x04	; 4
    66b6:	f9 01       	movw	r30, r18
    66b8:	25 89       	ldd	r18, Z+21	; 0x15
    66ba:	24 60       	ori	r18, 0x04	; 4
    66bc:	fc 01       	movw	r30, r24
    66be:	25 8b       	std	Z+21, r18	; 0x15
	
	/* Disable pull-up resistor */
	PORTD.PIN2CTRL &= ~PORT_PULLUPEN_bm;
    66c0:	80 e6       	ldi	r24, 0x60	; 96
    66c2:	94 e0       	ldi	r25, 0x04	; 4
    66c4:	20 e6       	ldi	r18, 0x60	; 96
    66c6:	34 e0       	ldi	r19, 0x04	; 4
    66c8:	f9 01       	movw	r30, r18
    66ca:	22 89       	ldd	r18, Z+18	; 0x12
    66cc:	27 7f       	andi	r18, 0xF7	; 247
    66ce:	fc 01       	movw	r30, r24
    66d0:	22 8b       	std	Z+18, r18	; 0x12
	PORTD.PIN3CTRL &= ~PORT_PULLUPEN_bm;
    66d2:	80 e6       	ldi	r24, 0x60	; 96
    66d4:	94 e0       	ldi	r25, 0x04	; 4
    66d6:	20 e6       	ldi	r18, 0x60	; 96
    66d8:	34 e0       	ldi	r19, 0x04	; 4
    66da:	f9 01       	movw	r30, r18
    66dc:	23 89       	ldd	r18, Z+19	; 0x13
    66de:	27 7f       	andi	r18, 0xF7	; 247
    66e0:	fc 01       	movw	r30, r24
    66e2:	23 8b       	std	Z+19, r18	; 0x13
	PORTD.PIN4CTRL &= ~PORT_PULLUPEN_bm;
    66e4:	80 e6       	ldi	r24, 0x60	; 96
    66e6:	94 e0       	ldi	r25, 0x04	; 4
    66e8:	20 e6       	ldi	r18, 0x60	; 96
    66ea:	34 e0       	ldi	r19, 0x04	; 4
    66ec:	f9 01       	movw	r30, r18
    66ee:	24 89       	ldd	r18, Z+20	; 0x14
    66f0:	27 7f       	andi	r18, 0xF7	; 247
    66f2:	fc 01       	movw	r30, r24
    66f4:	24 8b       	std	Z+20, r18	; 0x14
	PORTD.PIN5CTRL &= ~PORT_PULLUPEN_bm;
    66f6:	80 e6       	ldi	r24, 0x60	; 96
    66f8:	94 e0       	ldi	r25, 0x04	; 4
    66fa:	20 e6       	ldi	r18, 0x60	; 96
    66fc:	34 e0       	ldi	r19, 0x04	; 4
    66fe:	f9 01       	movw	r30, r18
    6700:	25 89       	ldd	r18, Z+21	; 0x15
    6702:	27 7f       	andi	r18, 0xF7	; 247
    6704:	fc 01       	movw	r30, r24
    6706:	25 8b       	std	Z+21, r18	; 0x15
}
    6708:	00 00       	nop
    670a:	df 91       	pop	r29
    670c:	cf 91       	pop	r28
    670e:	08 95       	ret

00006710 <_ZL10VREF0_initv>:

static void VREF0_init(void)
{
    6710:	cf 93       	push	r28
    6712:	df 93       	push	r29
    6714:	cd b7       	in	r28, 0x3d	; 61
    6716:	de b7       	in	r29, 0x3e	; 62
	VREF.ADC0REF = VREF_REFSEL_2V048_gc;  /* Internal 2.048V reference */
    6718:	80 ea       	ldi	r24, 0xA0	; 160
    671a:	90 e0       	ldi	r25, 0x00	; 0
    671c:	21 e0       	ldi	r18, 0x01	; 1
    671e:	fc 01       	movw	r30, r24
    6720:	20 83       	st	Z, r18
}
    6722:	00 00       	nop
    6724:	df 91       	pop	r29
    6726:	cf 91       	pop	r28
    6728:	08 95       	ret

0000672a <_ZL9ADC0_initb>:

static void ADC0_init(bool freerun)
{
    672a:	cf 93       	push	r28
    672c:	df 93       	push	r29
    672e:	1f 92       	push	r1
    6730:	cd b7       	in	r28, 0x3d	; 61
    6732:	de b7       	in	r29, 0x3e	; 62
    6734:	89 83       	std	Y+1, r24	; 0x01
	ADC0.CTRLC = ADC_PRESC_DIV64_gc;   /* CLK_PER divided by 4 => 24096 sps */
    6736:	80 e0       	ldi	r24, 0x00	; 0
    6738:	96 e0       	ldi	r25, 0x06	; 6
    673a:	2a e0       	ldi	r18, 0x0A	; 10
    673c:	fc 01       	movw	r30, r24
    673e:	22 83       	std	Z+2, r18	; 0x02
	
	if(freerun)
    6740:	89 81       	ldd	r24, Y+1	; 0x01
    6742:	88 23       	and	r24, r24
    6744:	81 f0       	breq	.+32     	; 0x6766 <_ZL9ADC0_initb+0x3c>
	{
		ADC0.CTRLA = ADC_ENABLE_bm /* ADC Enable: enabled */
    6746:	80 e0       	ldi	r24, 0x00	; 0
    6748:	96 e0       	ldi	r25, 0x06	; 6
		| ADC_RESSEL_12BIT_gc      /* 12-bit mode */
		| ADC_FREERUN_bm;          /* Enable Free-Run mode */
    674a:	23 e0       	ldi	r18, 0x03	; 3
    674c:	fc 01       	movw	r30, r24
    674e:	20 83       	st	Z, r18
		
		ADC0.INTCTRL = 0x01; /* Enable interrupt */
    6750:	80 e0       	ldi	r24, 0x00	; 0
    6752:	96 e0       	ldi	r25, 0x06	; 6
    6754:	21 e0       	ldi	r18, 0x01	; 1
    6756:	fc 01       	movw	r30, r24
    6758:	24 87       	std	Z+12, r18	; 0x0c
		
		ADC0.COMMAND = ADC_STCONV_bm; /* Start conversion */
    675a:	80 e0       	ldi	r24, 0x00	; 0
    675c:	96 e0       	ldi	r25, 0x06	; 6
    675e:	21 e0       	ldi	r18, 0x01	; 1
    6760:	fc 01       	movw	r30, r24
    6762:	22 87       	std	Z+10, r18	; 0x0a
		ADC0.CTRLA = ADC_ENABLE_bm  /* ADC Enable: enabled */
		| ADC_RESSEL_12BIT_gc;      /* 12-bit mode */

		ADC0.INTCTRL = 0x00; /* Disable interrupt */
	}
}
    6764:	09 c0       	rjmp	.+18     	; 0x6778 <_ZL9ADC0_initb+0x4e>
		
		ADC0.COMMAND = ADC_STCONV_bm; /* Start conversion */
	}
	else
	{
		ADC0.CTRLA = ADC_ENABLE_bm  /* ADC Enable: enabled */
    6766:	80 e0       	ldi	r24, 0x00	; 0
    6768:	96 e0       	ldi	r25, 0x06	; 6
		| ADC_RESSEL_12BIT_gc;      /* 12-bit mode */
    676a:	21 e0       	ldi	r18, 0x01	; 1
    676c:	fc 01       	movw	r30, r24
    676e:	20 83       	st	Z, r18

		ADC0.INTCTRL = 0x00; /* Disable interrupt */
    6770:	80 e0       	ldi	r24, 0x00	; 0
    6772:	96 e0       	ldi	r25, 0x06	; 6
    6774:	fc 01       	movw	r30, r24
    6776:	14 86       	std	Z+12, r1	; 0x0c
	}
}
    6778:	00 00       	nop
    677a:	0f 90       	pop	r0
    677c:	df 91       	pop	r29
    677e:	cf 91       	pop	r28
    6780:	08 95       	ret

00006782 <_ZL16ADC0_SYSTEM_initb>:

static void ADC0_SYSTEM_init(bool freerun)
{
    6782:	cf 93       	push	r28
    6784:	df 93       	push	r29
    6786:	1f 92       	push	r1
    6788:	cd b7       	in	r28, 0x3d	; 61
    678a:	de b7       	in	r29, 0x3e	; 62
    678c:	89 83       	std	Y+1, r24	; 0x01
	PORT_init();
    678e:	0e 94 14 33 	call	0x6628	; 0x6628 <_ZL9PORT_initv>
	VREF0_init();
    6792:	0e 94 88 33 	call	0x6710	; 0x6710 <_ZL10VREF0_initv>
	ADC0_init(freerun);
    6796:	89 81       	ldd	r24, Y+1	; 0x01
    6798:	0e 94 95 33 	call	0x672a	; 0x672a <_ZL9ADC0_initb>
	g_adc_initialized = true;
    679c:	81 e0       	ldi	r24, 0x01	; 1
    679e:	80 93 fd 47 	sts	0x47FD, r24	; 0x8047fd <_ZL17g_adc_initialized>
}
    67a2:	00 00       	nop
    67a4:	0f 90       	pop	r0
    67a6:	df 91       	pop	r29
    67a8:	cf 91       	pop	r28
    67aa:	08 95       	ret

000067ac <_ZL20ADC0_SYSTEM_shutdownv>:

static void ADC0_SYSTEM_shutdown(void)
{
    67ac:	cf 93       	push	r28
    67ae:	df 93       	push	r29
    67b0:	cd b7       	in	r28, 0x3d	; 61
    67b2:	de b7       	in	r29, 0x3e	; 62
	ADC0.INTCTRL = 0x00; /* Disable interrupt */
    67b4:	80 e0       	ldi	r24, 0x00	; 0
    67b6:	96 e0       	ldi	r25, 0x06	; 6
    67b8:	fc 01       	movw	r30, r24
    67ba:	14 86       	std	Z+12, r1	; 0x0c
	ADC0.CTRLA = ADC_RESSEL_12BIT_gc; /* Turn off ADC leaving 12-bit resolution set */
    67bc:	80 e0       	ldi	r24, 0x00	; 0
    67be:	96 e0       	ldi	r25, 0x06	; 6
    67c0:	fc 01       	movw	r30, r24
    67c2:	10 82       	st	Z, r1
	g_adc_initialized = false;
    67c4:	10 92 fd 47 	sts	0x47FD, r1	; 0x8047fd <_ZL17g_adc_initialized>
}
    67c8:	00 00       	nop
    67ca:	df 91       	pop	r29
    67cc:	cf 91       	pop	r28
    67ce:	08 95       	ret

000067d0 <__vector_24>:

ISR(ADC0_RESRDY_vect)
{
    67d0:	1f 92       	push	r1
    67d2:	0f 92       	push	r0
    67d4:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    67d8:	0f 92       	push	r0
    67da:	11 24       	eor	r1, r1
    67dc:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    67e0:	0f 92       	push	r0
    67e2:	2f 93       	push	r18
    67e4:	3f 93       	push	r19
    67e6:	4f 93       	push	r20
    67e8:	5f 93       	push	r21
    67ea:	6f 93       	push	r22
    67ec:	7f 93       	push	r23
    67ee:	8f 93       	push	r24
    67f0:	9f 93       	push	r25
    67f2:	af 93       	push	r26
    67f4:	bf 93       	push	r27
    67f6:	ef 93       	push	r30
    67f8:	ff 93       	push	r31
    67fa:	cf 93       	push	r28
    67fc:	df 93       	push	r29
    67fe:	00 d0       	rcall	.+0      	; 0x6800 <__vector_24+0x30>
    6800:	cd b7       	in	r28, 0x3d	; 61
    6802:	de b7       	in	r29, 0x3e	; 62
	/* Clear the interrupt flag by reading the result */
	int val = ADC0_read();
    6804:	0e 94 08 33 	call	0x6610	; 0x6610 <_Z9ADC0_readv>
    6808:	89 83       	std	Y+1, r24	; 0x01
    680a:	9a 83       	std	Y+2, r25	; 0x02
//	LED_toggle_level();
	if(g_goertzel.DataPoint(val))
    680c:	89 81       	ldd	r24, Y+1	; 0x01
    680e:	9a 81       	ldd	r25, Y+2	; 0x02
    6810:	bc 01       	movw	r22, r24
    6812:	8e ef       	ldi	r24, 0xFE	; 254
    6814:	97 e4       	ldi	r25, 0x47	; 71
    6816:	0e 94 38 49 	call	0x9270	; 0x9270 <_ZN8Goertzel9DataPointEi>
    681a:	88 23       	and	r24, r24
    681c:	21 f0       	breq	.+8      	; 0x6826 <__vector_24+0x56>
	{
		ADC0.INTCTRL = 0x00; /* disable ADC interrupt */
    681e:	80 e0       	ldi	r24, 0x00	; 0
    6820:	96 e0       	ldi	r25, 0x06	; 6
    6822:	fc 01       	movw	r30, r24
    6824:	14 86       	std	Z+12, r1	; 0x0c
	}
    6826:	00 00       	nop
    6828:	0f 90       	pop	r0
    682a:	0f 90       	pop	r0
    682c:	df 91       	pop	r29
    682e:	cf 91       	pop	r28
    6830:	ff 91       	pop	r31
    6832:	ef 91       	pop	r30
    6834:	bf 91       	pop	r27
    6836:	af 91       	pop	r26
    6838:	9f 91       	pop	r25
    683a:	8f 91       	pop	r24
    683c:	7f 91       	pop	r23
    683e:	6f 91       	pop	r22
    6840:	5f 91       	pop	r21
    6842:	4f 91       	pop	r20
    6844:	3f 91       	pop	r19
    6846:	2f 91       	pop	r18
    6848:	0f 90       	pop	r0
    684a:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    684e:	0f 90       	pop	r0
    6850:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    6854:	0f 90       	pop	r0
    6856:	1f 90       	pop	r1
    6858:	18 95       	reti

0000685a <_Z41__static_initialization_and_destruction_0ii>:
    685a:	0f 93       	push	r16
    685c:	1f 93       	push	r17
    685e:	cf 93       	push	r28
    6860:	df 93       	push	r29
    6862:	00 d0       	rcall	.+0      	; 0x6864 <_Z41__static_initialization_and_destruction_0ii+0xa>
    6864:	00 d0       	rcall	.+0      	; 0x6866 <_Z41__static_initialization_and_destruction_0ii+0xc>
    6866:	cd b7       	in	r28, 0x3d	; 61
    6868:	de b7       	in	r29, 0x3e	; 62
    686a:	89 83       	std	Y+1, r24	; 0x01
    686c:	9a 83       	std	Y+2, r25	; 0x02
    686e:	6b 83       	std	Y+3, r22	; 0x03
    6870:	7c 83       	std	Y+4, r23	; 0x04
    6872:	89 81       	ldd	r24, Y+1	; 0x01
    6874:	9a 81       	ldd	r25, Y+2	; 0x02
    6876:	01 97       	sbiw	r24, 0x01	; 1
    6878:	91 f4       	brne	.+36     	; 0x689e <_Z41__static_initialization_and_destruction_0ii+0x44>
    687a:	8b 81       	ldd	r24, Y+3	; 0x03
    687c:	9c 81       	ldd	r25, Y+4	; 0x04
    687e:	01 96       	adiw	r24, 0x01	; 1
    6880:	71 f4       	brne	.+28     	; 0x689e <_Z41__static_initialization_and_destruction_0ii+0x44>
#define FREE_RUNNING true
#define SINGLE_CONVERSION false
	
volatile ADC_Active_Channel_t g_activeADCChannel = ADCDisable;
volatile int16_t g_adcVal;
Goertzel g_goertzel(N, sampling_freq);
    6882:	80 e0       	ldi	r24, 0x00	; 0
    6884:	90 e4       	ldi	r25, 0x40	; 64
    6886:	ac eb       	ldi	r26, 0xBC	; 188
    6888:	b6 e4       	ldi	r27, 0x46	; 70
    688a:	8c 01       	movw	r16, r24
    688c:	9d 01       	movw	r18, r26
    688e:	40 e0       	ldi	r20, 0x00	; 0
    6890:	50 e0       	ldi	r21, 0x00	; 0
    6892:	69 e4       	ldi	r22, 0x49	; 73
    6894:	73 e4       	ldi	r23, 0x43	; 67
    6896:	8e ef       	ldi	r24, 0xFE	; 254
    6898:	97 e4       	ldi	r25, 0x47	; 71
    689a:	0e 94 8d 48 	call	0x911a	; 0x911a <_ZN8GoertzelC1Eff>
    689e:	89 81       	ldd	r24, Y+1	; 0x01
    68a0:	9a 81       	ldd	r25, Y+2	; 0x02
    68a2:	89 2b       	or	r24, r25
    68a4:	41 f4       	brne	.+16     	; 0x68b6 <_Z41__static_initialization_and_destruction_0ii+0x5c>
    68a6:	8b 81       	ldd	r24, Y+3	; 0x03
    68a8:	9c 81       	ldd	r25, Y+4	; 0x04
    68aa:	01 96       	adiw	r24, 0x01	; 1
    68ac:	21 f4       	brne	.+8      	; 0x68b6 <_Z41__static_initialization_and_destruction_0ii+0x5c>
    68ae:	8e ef       	ldi	r24, 0xFE	; 254
    68b0:	97 e4       	ldi	r25, 0x47	; 71
    68b2:	0e 94 25 49 	call	0x924a	; 0x924a <_ZN8GoertzelD1Ev>
//	LED_toggle_level();
	if(g_goertzel.DataPoint(val))
	{
		ADC0.INTCTRL = 0x00; /* disable ADC interrupt */
	}
    68b6:	00 00       	nop
    68b8:	24 96       	adiw	r28, 0x04	; 4
    68ba:	cd bf       	out	0x3d, r28	; 61
    68bc:	de bf       	out	0x3e, r29	; 62
    68be:	df 91       	pop	r29
    68c0:	cf 91       	pop	r28
    68c2:	1f 91       	pop	r17
    68c4:	0f 91       	pop	r16
    68c6:	08 95       	ret

000068c8 <_GLOBAL__sub_I_g_activeADCChannel>:
    68c8:	cf 93       	push	r28
    68ca:	df 93       	push	r29
    68cc:	cd b7       	in	r28, 0x3d	; 61
    68ce:	de b7       	in	r29, 0x3e	; 62
    68d0:	6f ef       	ldi	r22, 0xFF	; 255
    68d2:	7f ef       	ldi	r23, 0xFF	; 255
    68d4:	81 e0       	ldi	r24, 0x01	; 1
    68d6:	90 e0       	ldi	r25, 0x00	; 0
    68d8:	0e 94 2d 34 	call	0x685a	; 0x685a <_Z41__static_initialization_and_destruction_0ii>
    68dc:	df 91       	pop	r29
    68de:	cf 91       	pop	r28
    68e0:	08 95       	ret

000068e2 <_GLOBAL__sub_D_g_activeADCChannel>:
    68e2:	cf 93       	push	r28
    68e4:	df 93       	push	r29
    68e6:	cd b7       	in	r28, 0x3d	; 61
    68e8:	de b7       	in	r29, 0x3e	; 62
    68ea:	6f ef       	ldi	r22, 0xFF	; 255
    68ec:	7f ef       	ldi	r23, 0xFF	; 255
    68ee:	80 e0       	ldi	r24, 0x00	; 0
    68f0:	90 e0       	ldi	r25, 0x00	; 0
    68f2:	0e 94 2d 34 	call	0x685a	; 0x685a <_Z41__static_initialization_and_destruction_0ii>
    68f6:	df 91       	pop	r29
    68f8:	cf 91       	pop	r28
    68fa:	08 95       	ret

000068fc <PORTA_set_pin_pull_mode>:
} //binio

// default destructor
binio::~binio()
{
} //~binio
    68fc:	cf 93       	push	r28
    68fe:	df 93       	push	r29
    6900:	00 d0       	rcall	.+0      	; 0x6902 <PORTA_set_pin_pull_mode+0x6>
    6902:	00 d0       	rcall	.+0      	; 0x6904 <PORTA_set_pin_pull_mode+0x8>
    6904:	cd b7       	in	r28, 0x3d	; 61
    6906:	de b7       	in	r29, 0x3e	; 62
    6908:	8b 83       	std	Y+3, r24	; 0x03
    690a:	6c 83       	std	Y+4, r22	; 0x04
    690c:	8b 81       	ldd	r24, Y+3	; 0x03
    690e:	88 2f       	mov	r24, r24
    6910:	90 e0       	ldi	r25, 0x00	; 0
    6912:	80 5f       	subi	r24, 0xF0	; 240
    6914:	9b 4f       	sbci	r25, 0xFB	; 251
    6916:	89 83       	std	Y+1, r24	; 0x01
    6918:	9a 83       	std	Y+2, r25	; 0x02
    691a:	8c 81       	ldd	r24, Y+4	; 0x04
    691c:	81 30       	cpi	r24, 0x01	; 1
    691e:	59 f4       	brne	.+22     	; 0x6936 <PORTA_set_pin_pull_mode+0x3a>
    6920:	89 81       	ldd	r24, Y+1	; 0x01
    6922:	9a 81       	ldd	r25, Y+2	; 0x02
    6924:	fc 01       	movw	r30, r24
    6926:	80 81       	ld	r24, Z
    6928:	28 2f       	mov	r18, r24
    692a:	28 60       	ori	r18, 0x08	; 8
    692c:	89 81       	ldd	r24, Y+1	; 0x01
    692e:	9a 81       	ldd	r25, Y+2	; 0x02
    6930:	fc 01       	movw	r30, r24
    6932:	20 83       	st	Z, r18
    6934:	0d c0       	rjmp	.+26     	; 0x6950 <PORTA_set_pin_pull_mode+0x54>
    6936:	8c 81       	ldd	r24, Y+4	; 0x04
    6938:	88 23       	and	r24, r24
    693a:	51 f4       	brne	.+20     	; 0x6950 <PORTA_set_pin_pull_mode+0x54>
    693c:	89 81       	ldd	r24, Y+1	; 0x01
    693e:	9a 81       	ldd	r25, Y+2	; 0x02
    6940:	fc 01       	movw	r30, r24
    6942:	80 81       	ld	r24, Z
    6944:	28 2f       	mov	r18, r24
    6946:	27 7f       	andi	r18, 0xF7	; 247
    6948:	89 81       	ldd	r24, Y+1	; 0x01
    694a:	9a 81       	ldd	r25, Y+2	; 0x02
    694c:	fc 01       	movw	r30, r24
    694e:	20 83       	st	Z, r18
    6950:	00 00       	nop
    6952:	24 96       	adiw	r28, 0x04	; 4
    6954:	cd bf       	out	0x3d, r28	; 61
    6956:	de bf       	out	0x3e, r29	; 62
    6958:	df 91       	pop	r29
    695a:	cf 91       	pop	r28
    695c:	08 95       	ret

0000695e <PORTA_pin_set_isc>:
    695e:	cf 93       	push	r28
    6960:	df 93       	push	r29
    6962:	00 d0       	rcall	.+0      	; 0x6964 <PORTA_pin_set_isc+0x6>
    6964:	00 d0       	rcall	.+0      	; 0x6966 <PORTA_pin_set_isc+0x8>
    6966:	cd b7       	in	r28, 0x3d	; 61
    6968:	de b7       	in	r29, 0x3e	; 62
    696a:	8b 83       	std	Y+3, r24	; 0x03
    696c:	6c 83       	std	Y+4, r22	; 0x04
    696e:	8b 81       	ldd	r24, Y+3	; 0x03
    6970:	88 2f       	mov	r24, r24
    6972:	90 e0       	ldi	r25, 0x00	; 0
    6974:	80 5f       	subi	r24, 0xF0	; 240
    6976:	9b 4f       	sbci	r25, 0xFB	; 251
    6978:	89 83       	std	Y+1, r24	; 0x01
    697a:	9a 83       	std	Y+2, r25	; 0x02
    697c:	89 81       	ldd	r24, Y+1	; 0x01
    697e:	9a 81       	ldd	r25, Y+2	; 0x02
    6980:	fc 01       	movw	r30, r24
    6982:	80 81       	ld	r24, Z
    6984:	98 2f       	mov	r25, r24
    6986:	98 7f       	andi	r25, 0xF8	; 248
    6988:	8c 81       	ldd	r24, Y+4	; 0x04
    698a:	89 2b       	or	r24, r25
    698c:	28 2f       	mov	r18, r24
    698e:	89 81       	ldd	r24, Y+1	; 0x01
    6990:	9a 81       	ldd	r25, Y+2	; 0x02
    6992:	fc 01       	movw	r30, r24
    6994:	20 83       	st	Z, r18
    6996:	00 00       	nop
    6998:	24 96       	adiw	r28, 0x04	; 4
    699a:	cd bf       	out	0x3d, r28	; 61
    699c:	de bf       	out	0x3e, r29	; 62
    699e:	df 91       	pop	r29
    69a0:	cf 91       	pop	r28
    69a2:	08 95       	ret

000069a4 <PORTA_set_pin_dir>:
    69a4:	cf 93       	push	r28
    69a6:	df 93       	push	r29
    69a8:	00 d0       	rcall	.+0      	; 0x69aa <PORTA_set_pin_dir+0x6>
    69aa:	cd b7       	in	r28, 0x3d	; 61
    69ac:	de b7       	in	r29, 0x3e	; 62
    69ae:	89 83       	std	Y+1, r24	; 0x01
    69b0:	6a 83       	std	Y+2, r22	; 0x02
    69b2:	8a 81       	ldd	r24, Y+2	; 0x02
    69b4:	88 2f       	mov	r24, r24
    69b6:	90 e0       	ldi	r25, 0x00	; 0
    69b8:	81 30       	cpi	r24, 0x01	; 1
    69ba:	91 05       	cpc	r25, r1
    69bc:	e1 f0       	breq	.+56     	; 0x69f6 <PORTA_set_pin_dir+0x52>
    69be:	82 30       	cpi	r24, 0x02	; 2
    69c0:	91 05       	cpc	r25, r1
    69c2:	71 f1       	breq	.+92     	; 0x6a20 <PORTA_set_pin_dir+0x7c>
    69c4:	89 2b       	or	r24, r25
    69c6:	09 f0       	breq	.+2      	; 0x69ca <PORTA_set_pin_dir+0x26>
    69c8:	3b c0       	rjmp	.+118    	; 0x6a40 <PORTA_set_pin_dir+0x9c>
    69ca:	20 e0       	ldi	r18, 0x00	; 0
    69cc:	30 e0       	ldi	r19, 0x00	; 0
    69ce:	80 e0       	ldi	r24, 0x00	; 0
    69d0:	90 e0       	ldi	r25, 0x00	; 0
    69d2:	fc 01       	movw	r30, r24
    69d4:	80 81       	ld	r24, Z
    69d6:	68 2f       	mov	r22, r24
    69d8:	89 81       	ldd	r24, Y+1	; 0x01
    69da:	48 2f       	mov	r20, r24
    69dc:	50 e0       	ldi	r21, 0x00	; 0
    69de:	81 e0       	ldi	r24, 0x01	; 1
    69e0:	90 e0       	ldi	r25, 0x00	; 0
    69e2:	02 c0       	rjmp	.+4      	; 0x69e8 <PORTA_set_pin_dir+0x44>
    69e4:	88 0f       	add	r24, r24
    69e6:	99 1f       	adc	r25, r25
    69e8:	4a 95       	dec	r20
    69ea:	e2 f7       	brpl	.-8      	; 0x69e4 <PORTA_set_pin_dir+0x40>
    69ec:	80 95       	com	r24
    69ee:	86 23       	and	r24, r22
    69f0:	f9 01       	movw	r30, r18
    69f2:	80 83       	st	Z, r24
    69f4:	25 c0       	rjmp	.+74     	; 0x6a40 <PORTA_set_pin_dir+0x9c>
    69f6:	20 e0       	ldi	r18, 0x00	; 0
    69f8:	30 e0       	ldi	r19, 0x00	; 0
    69fa:	80 e0       	ldi	r24, 0x00	; 0
    69fc:	90 e0       	ldi	r25, 0x00	; 0
    69fe:	fc 01       	movw	r30, r24
    6a00:	80 81       	ld	r24, Z
    6a02:	68 2f       	mov	r22, r24
    6a04:	89 81       	ldd	r24, Y+1	; 0x01
    6a06:	48 2f       	mov	r20, r24
    6a08:	50 e0       	ldi	r21, 0x00	; 0
    6a0a:	81 e0       	ldi	r24, 0x01	; 1
    6a0c:	90 e0       	ldi	r25, 0x00	; 0
    6a0e:	02 c0       	rjmp	.+4      	; 0x6a14 <PORTA_set_pin_dir+0x70>
    6a10:	88 0f       	add	r24, r24
    6a12:	99 1f       	adc	r25, r25
    6a14:	4a 95       	dec	r20
    6a16:	e2 f7       	brpl	.-8      	; 0x6a10 <PORTA_set_pin_dir+0x6c>
    6a18:	86 2b       	or	r24, r22
    6a1a:	f9 01       	movw	r30, r18
    6a1c:	80 83       	st	Z, r24
    6a1e:	10 c0       	rjmp	.+32     	; 0x6a40 <PORTA_set_pin_dir+0x9c>
    6a20:	89 81       	ldd	r24, Y+1	; 0x01
    6a22:	88 2f       	mov	r24, r24
    6a24:	90 e0       	ldi	r25, 0x00	; 0
    6a26:	80 5f       	subi	r24, 0xF0	; 240
    6a28:	9b 4f       	sbci	r25, 0xFB	; 251
    6a2a:	29 81       	ldd	r18, Y+1	; 0x01
    6a2c:	22 2f       	mov	r18, r18
    6a2e:	30 e0       	ldi	r19, 0x00	; 0
    6a30:	20 5f       	subi	r18, 0xF0	; 240
    6a32:	3b 4f       	sbci	r19, 0xFB	; 251
    6a34:	f9 01       	movw	r30, r18
    6a36:	20 81       	ld	r18, Z
    6a38:	28 60       	ori	r18, 0x08	; 8
    6a3a:	fc 01       	movw	r30, r24
    6a3c:	20 83       	st	Z, r18
    6a3e:	00 00       	nop
    6a40:	00 00       	nop
    6a42:	0f 90       	pop	r0
    6a44:	0f 90       	pop	r0
    6a46:	df 91       	pop	r29
    6a48:	cf 91       	pop	r28
    6a4a:	08 95       	ret

00006a4c <PORTA_set_pin_level>:
    6a4c:	cf 93       	push	r28
    6a4e:	df 93       	push	r29
    6a50:	00 d0       	rcall	.+0      	; 0x6a52 <PORTA_set_pin_level+0x6>
    6a52:	cd b7       	in	r28, 0x3d	; 61
    6a54:	de b7       	in	r29, 0x3e	; 62
    6a56:	89 83       	std	Y+1, r24	; 0x01
    6a58:	6a 83       	std	Y+2, r22	; 0x02
    6a5a:	8a 81       	ldd	r24, Y+2	; 0x02
    6a5c:	88 23       	and	r24, r24
    6a5e:	a9 f0       	breq	.+42     	; 0x6a8a <PORTA_set_pin_level+0x3e>
    6a60:	20 e0       	ldi	r18, 0x00	; 0
    6a62:	30 e0       	ldi	r19, 0x00	; 0
    6a64:	80 e0       	ldi	r24, 0x00	; 0
    6a66:	90 e0       	ldi	r25, 0x00	; 0
    6a68:	fc 01       	movw	r30, r24
    6a6a:	81 81       	ldd	r24, Z+1	; 0x01
    6a6c:	68 2f       	mov	r22, r24
    6a6e:	89 81       	ldd	r24, Y+1	; 0x01
    6a70:	48 2f       	mov	r20, r24
    6a72:	50 e0       	ldi	r21, 0x00	; 0
    6a74:	81 e0       	ldi	r24, 0x01	; 1
    6a76:	90 e0       	ldi	r25, 0x00	; 0
    6a78:	02 c0       	rjmp	.+4      	; 0x6a7e <PORTA_set_pin_level+0x32>
    6a7a:	88 0f       	add	r24, r24
    6a7c:	99 1f       	adc	r25, r25
    6a7e:	4a 95       	dec	r20
    6a80:	e2 f7       	brpl	.-8      	; 0x6a7a <PORTA_set_pin_level+0x2e>
    6a82:	86 2b       	or	r24, r22
    6a84:	f9 01       	movw	r30, r18
    6a86:	81 83       	std	Z+1, r24	; 0x01
    6a88:	15 c0       	rjmp	.+42     	; 0x6ab4 <PORTA_set_pin_level+0x68>
    6a8a:	20 e0       	ldi	r18, 0x00	; 0
    6a8c:	30 e0       	ldi	r19, 0x00	; 0
    6a8e:	80 e0       	ldi	r24, 0x00	; 0
    6a90:	90 e0       	ldi	r25, 0x00	; 0
    6a92:	fc 01       	movw	r30, r24
    6a94:	81 81       	ldd	r24, Z+1	; 0x01
    6a96:	68 2f       	mov	r22, r24
    6a98:	89 81       	ldd	r24, Y+1	; 0x01
    6a9a:	48 2f       	mov	r20, r24
    6a9c:	50 e0       	ldi	r21, 0x00	; 0
    6a9e:	81 e0       	ldi	r24, 0x01	; 1
    6aa0:	90 e0       	ldi	r25, 0x00	; 0
    6aa2:	02 c0       	rjmp	.+4      	; 0x6aa8 <PORTA_set_pin_level+0x5c>
    6aa4:	88 0f       	add	r24, r24
    6aa6:	99 1f       	adc	r25, r25
    6aa8:	4a 95       	dec	r20
    6aaa:	e2 f7       	brpl	.-8      	; 0x6aa4 <PORTA_set_pin_level+0x58>
    6aac:	80 95       	com	r24
    6aae:	86 23       	and	r24, r22
    6ab0:	f9 01       	movw	r30, r18
    6ab2:	81 83       	std	Z+1, r24	; 0x01
    6ab4:	00 00       	nop
    6ab6:	0f 90       	pop	r0
    6ab8:	0f 90       	pop	r0
    6aba:	df 91       	pop	r29
    6abc:	cf 91       	pop	r28
    6abe:	08 95       	ret

00006ac0 <PORTB_set_pin_dir>:
    6ac0:	cf 93       	push	r28
    6ac2:	df 93       	push	r29
    6ac4:	00 d0       	rcall	.+0      	; 0x6ac6 <PORTB_set_pin_dir+0x6>
    6ac6:	cd b7       	in	r28, 0x3d	; 61
    6ac8:	de b7       	in	r29, 0x3e	; 62
    6aca:	89 83       	std	Y+1, r24	; 0x01
    6acc:	6a 83       	std	Y+2, r22	; 0x02
    6ace:	8a 81       	ldd	r24, Y+2	; 0x02
    6ad0:	88 2f       	mov	r24, r24
    6ad2:	90 e0       	ldi	r25, 0x00	; 0
    6ad4:	81 30       	cpi	r24, 0x01	; 1
    6ad6:	91 05       	cpc	r25, r1
    6ad8:	e1 f0       	breq	.+56     	; 0x6b12 <PORTB_set_pin_dir+0x52>
    6ada:	82 30       	cpi	r24, 0x02	; 2
    6adc:	91 05       	cpc	r25, r1
    6ade:	71 f1       	breq	.+92     	; 0x6b3c <PORTB_set_pin_dir+0x7c>
    6ae0:	89 2b       	or	r24, r25
    6ae2:	09 f0       	breq	.+2      	; 0x6ae6 <PORTB_set_pin_dir+0x26>
    6ae4:	3b c0       	rjmp	.+118    	; 0x6b5c <PORTB_set_pin_dir+0x9c>
    6ae6:	84 e0       	ldi	r24, 0x04	; 4
    6ae8:	90 e0       	ldi	r25, 0x00	; 0
    6aea:	24 e0       	ldi	r18, 0x04	; 4
    6aec:	30 e0       	ldi	r19, 0x00	; 0
    6aee:	f9 01       	movw	r30, r18
    6af0:	20 81       	ld	r18, Z
    6af2:	62 2f       	mov	r22, r18
    6af4:	29 81       	ldd	r18, Y+1	; 0x01
    6af6:	42 2f       	mov	r20, r18
    6af8:	50 e0       	ldi	r21, 0x00	; 0
    6afa:	21 e0       	ldi	r18, 0x01	; 1
    6afc:	30 e0       	ldi	r19, 0x00	; 0
    6afe:	02 c0       	rjmp	.+4      	; 0x6b04 <PORTB_set_pin_dir+0x44>
    6b00:	22 0f       	add	r18, r18
    6b02:	33 1f       	adc	r19, r19
    6b04:	4a 95       	dec	r20
    6b06:	e2 f7       	brpl	.-8      	; 0x6b00 <PORTB_set_pin_dir+0x40>
    6b08:	20 95       	com	r18
    6b0a:	26 23       	and	r18, r22
    6b0c:	fc 01       	movw	r30, r24
    6b0e:	20 83       	st	Z, r18
    6b10:	25 c0       	rjmp	.+74     	; 0x6b5c <PORTB_set_pin_dir+0x9c>
    6b12:	84 e0       	ldi	r24, 0x04	; 4
    6b14:	90 e0       	ldi	r25, 0x00	; 0
    6b16:	24 e0       	ldi	r18, 0x04	; 4
    6b18:	30 e0       	ldi	r19, 0x00	; 0
    6b1a:	f9 01       	movw	r30, r18
    6b1c:	20 81       	ld	r18, Z
    6b1e:	62 2f       	mov	r22, r18
    6b20:	29 81       	ldd	r18, Y+1	; 0x01
    6b22:	42 2f       	mov	r20, r18
    6b24:	50 e0       	ldi	r21, 0x00	; 0
    6b26:	21 e0       	ldi	r18, 0x01	; 1
    6b28:	30 e0       	ldi	r19, 0x00	; 0
    6b2a:	02 c0       	rjmp	.+4      	; 0x6b30 <PORTB_set_pin_dir+0x70>
    6b2c:	22 0f       	add	r18, r18
    6b2e:	33 1f       	adc	r19, r19
    6b30:	4a 95       	dec	r20
    6b32:	e2 f7       	brpl	.-8      	; 0x6b2c <PORTB_set_pin_dir+0x6c>
    6b34:	26 2b       	or	r18, r22
    6b36:	fc 01       	movw	r30, r24
    6b38:	20 83       	st	Z, r18
    6b3a:	10 c0       	rjmp	.+32     	; 0x6b5c <PORTB_set_pin_dir+0x9c>
    6b3c:	89 81       	ldd	r24, Y+1	; 0x01
    6b3e:	88 2f       	mov	r24, r24
    6b40:	90 e0       	ldi	r25, 0x00	; 0
    6b42:	80 5d       	subi	r24, 0xD0	; 208
    6b44:	9b 4f       	sbci	r25, 0xFB	; 251
    6b46:	29 81       	ldd	r18, Y+1	; 0x01
    6b48:	22 2f       	mov	r18, r18
    6b4a:	30 e0       	ldi	r19, 0x00	; 0
    6b4c:	20 5d       	subi	r18, 0xD0	; 208
    6b4e:	3b 4f       	sbci	r19, 0xFB	; 251
    6b50:	f9 01       	movw	r30, r18
    6b52:	20 81       	ld	r18, Z
    6b54:	28 60       	ori	r18, 0x08	; 8
    6b56:	fc 01       	movw	r30, r24
    6b58:	20 83       	st	Z, r18
    6b5a:	00 00       	nop
    6b5c:	00 00       	nop
    6b5e:	0f 90       	pop	r0
    6b60:	0f 90       	pop	r0
    6b62:	df 91       	pop	r29
    6b64:	cf 91       	pop	r28
    6b66:	08 95       	ret

00006b68 <PORTB_set_pin_level>:
    6b68:	cf 93       	push	r28
    6b6a:	df 93       	push	r29
    6b6c:	00 d0       	rcall	.+0      	; 0x6b6e <PORTB_set_pin_level+0x6>
    6b6e:	cd b7       	in	r28, 0x3d	; 61
    6b70:	de b7       	in	r29, 0x3e	; 62
    6b72:	89 83       	std	Y+1, r24	; 0x01
    6b74:	6a 83       	std	Y+2, r22	; 0x02
    6b76:	8a 81       	ldd	r24, Y+2	; 0x02
    6b78:	88 23       	and	r24, r24
    6b7a:	a9 f0       	breq	.+42     	; 0x6ba6 <PORTB_set_pin_level+0x3e>
    6b7c:	84 e0       	ldi	r24, 0x04	; 4
    6b7e:	90 e0       	ldi	r25, 0x00	; 0
    6b80:	24 e0       	ldi	r18, 0x04	; 4
    6b82:	30 e0       	ldi	r19, 0x00	; 0
    6b84:	f9 01       	movw	r30, r18
    6b86:	21 81       	ldd	r18, Z+1	; 0x01
    6b88:	62 2f       	mov	r22, r18
    6b8a:	29 81       	ldd	r18, Y+1	; 0x01
    6b8c:	42 2f       	mov	r20, r18
    6b8e:	50 e0       	ldi	r21, 0x00	; 0
    6b90:	21 e0       	ldi	r18, 0x01	; 1
    6b92:	30 e0       	ldi	r19, 0x00	; 0
    6b94:	02 c0       	rjmp	.+4      	; 0x6b9a <PORTB_set_pin_level+0x32>
    6b96:	22 0f       	add	r18, r18
    6b98:	33 1f       	adc	r19, r19
    6b9a:	4a 95       	dec	r20
    6b9c:	e2 f7       	brpl	.-8      	; 0x6b96 <PORTB_set_pin_level+0x2e>
    6b9e:	26 2b       	or	r18, r22
    6ba0:	fc 01       	movw	r30, r24
    6ba2:	21 83       	std	Z+1, r18	; 0x01
    6ba4:	15 c0       	rjmp	.+42     	; 0x6bd0 <PORTB_set_pin_level+0x68>
    6ba6:	84 e0       	ldi	r24, 0x04	; 4
    6ba8:	90 e0       	ldi	r25, 0x00	; 0
    6baa:	24 e0       	ldi	r18, 0x04	; 4
    6bac:	30 e0       	ldi	r19, 0x00	; 0
    6bae:	f9 01       	movw	r30, r18
    6bb0:	21 81       	ldd	r18, Z+1	; 0x01
    6bb2:	62 2f       	mov	r22, r18
    6bb4:	29 81       	ldd	r18, Y+1	; 0x01
    6bb6:	42 2f       	mov	r20, r18
    6bb8:	50 e0       	ldi	r21, 0x00	; 0
    6bba:	21 e0       	ldi	r18, 0x01	; 1
    6bbc:	30 e0       	ldi	r19, 0x00	; 0
    6bbe:	02 c0       	rjmp	.+4      	; 0x6bc4 <PORTB_set_pin_level+0x5c>
    6bc0:	22 0f       	add	r18, r18
    6bc2:	33 1f       	adc	r19, r19
    6bc4:	4a 95       	dec	r20
    6bc6:	e2 f7       	brpl	.-8      	; 0x6bc0 <PORTB_set_pin_level+0x58>
    6bc8:	20 95       	com	r18
    6bca:	26 23       	and	r18, r22
    6bcc:	fc 01       	movw	r30, r24
    6bce:	21 83       	std	Z+1, r18	; 0x01
    6bd0:	00 00       	nop
    6bd2:	0f 90       	pop	r0
    6bd4:	0f 90       	pop	r0
    6bd6:	df 91       	pop	r29
    6bd8:	cf 91       	pop	r28
    6bda:	08 95       	ret

00006bdc <PORTC_set_pin_pull_mode>:
    6bdc:	cf 93       	push	r28
    6bde:	df 93       	push	r29
    6be0:	00 d0       	rcall	.+0      	; 0x6be2 <PORTC_set_pin_pull_mode+0x6>
    6be2:	00 d0       	rcall	.+0      	; 0x6be4 <PORTC_set_pin_pull_mode+0x8>
    6be4:	cd b7       	in	r28, 0x3d	; 61
    6be6:	de b7       	in	r29, 0x3e	; 62
    6be8:	8b 83       	std	Y+3, r24	; 0x03
    6bea:	6c 83       	std	Y+4, r22	; 0x04
    6bec:	8b 81       	ldd	r24, Y+3	; 0x03
    6bee:	88 2f       	mov	r24, r24
    6bf0:	90 e0       	ldi	r25, 0x00	; 0
    6bf2:	80 5b       	subi	r24, 0xB0	; 176
    6bf4:	9b 4f       	sbci	r25, 0xFB	; 251
    6bf6:	89 83       	std	Y+1, r24	; 0x01
    6bf8:	9a 83       	std	Y+2, r25	; 0x02
    6bfa:	8c 81       	ldd	r24, Y+4	; 0x04
    6bfc:	81 30       	cpi	r24, 0x01	; 1
    6bfe:	59 f4       	brne	.+22     	; 0x6c16 <PORTC_set_pin_pull_mode+0x3a>
    6c00:	89 81       	ldd	r24, Y+1	; 0x01
    6c02:	9a 81       	ldd	r25, Y+2	; 0x02
    6c04:	fc 01       	movw	r30, r24
    6c06:	80 81       	ld	r24, Z
    6c08:	28 2f       	mov	r18, r24
    6c0a:	28 60       	ori	r18, 0x08	; 8
    6c0c:	89 81       	ldd	r24, Y+1	; 0x01
    6c0e:	9a 81       	ldd	r25, Y+2	; 0x02
    6c10:	fc 01       	movw	r30, r24
    6c12:	20 83       	st	Z, r18
    6c14:	0d c0       	rjmp	.+26     	; 0x6c30 <PORTC_set_pin_pull_mode+0x54>
    6c16:	8c 81       	ldd	r24, Y+4	; 0x04
    6c18:	88 23       	and	r24, r24
    6c1a:	51 f4       	brne	.+20     	; 0x6c30 <PORTC_set_pin_pull_mode+0x54>
    6c1c:	89 81       	ldd	r24, Y+1	; 0x01
    6c1e:	9a 81       	ldd	r25, Y+2	; 0x02
    6c20:	fc 01       	movw	r30, r24
    6c22:	80 81       	ld	r24, Z
    6c24:	28 2f       	mov	r18, r24
    6c26:	27 7f       	andi	r18, 0xF7	; 247
    6c28:	89 81       	ldd	r24, Y+1	; 0x01
    6c2a:	9a 81       	ldd	r25, Y+2	; 0x02
    6c2c:	fc 01       	movw	r30, r24
    6c2e:	20 83       	st	Z, r18
    6c30:	00 00       	nop
    6c32:	24 96       	adiw	r28, 0x04	; 4
    6c34:	cd bf       	out	0x3d, r28	; 61
    6c36:	de bf       	out	0x3e, r29	; 62
    6c38:	df 91       	pop	r29
    6c3a:	cf 91       	pop	r28
    6c3c:	08 95       	ret

00006c3e <PORTC_pin_set_isc>:
    6c3e:	cf 93       	push	r28
    6c40:	df 93       	push	r29
    6c42:	00 d0       	rcall	.+0      	; 0x6c44 <PORTC_pin_set_isc+0x6>
    6c44:	00 d0       	rcall	.+0      	; 0x6c46 <PORTC_pin_set_isc+0x8>
    6c46:	cd b7       	in	r28, 0x3d	; 61
    6c48:	de b7       	in	r29, 0x3e	; 62
    6c4a:	8b 83       	std	Y+3, r24	; 0x03
    6c4c:	6c 83       	std	Y+4, r22	; 0x04
    6c4e:	8b 81       	ldd	r24, Y+3	; 0x03
    6c50:	88 2f       	mov	r24, r24
    6c52:	90 e0       	ldi	r25, 0x00	; 0
    6c54:	80 5b       	subi	r24, 0xB0	; 176
    6c56:	9b 4f       	sbci	r25, 0xFB	; 251
    6c58:	89 83       	std	Y+1, r24	; 0x01
    6c5a:	9a 83       	std	Y+2, r25	; 0x02
    6c5c:	89 81       	ldd	r24, Y+1	; 0x01
    6c5e:	9a 81       	ldd	r25, Y+2	; 0x02
    6c60:	fc 01       	movw	r30, r24
    6c62:	80 81       	ld	r24, Z
    6c64:	98 2f       	mov	r25, r24
    6c66:	98 7f       	andi	r25, 0xF8	; 248
    6c68:	8c 81       	ldd	r24, Y+4	; 0x04
    6c6a:	89 2b       	or	r24, r25
    6c6c:	28 2f       	mov	r18, r24
    6c6e:	89 81       	ldd	r24, Y+1	; 0x01
    6c70:	9a 81       	ldd	r25, Y+2	; 0x02
    6c72:	fc 01       	movw	r30, r24
    6c74:	20 83       	st	Z, r18
    6c76:	00 00       	nop
    6c78:	24 96       	adiw	r28, 0x04	; 4
    6c7a:	cd bf       	out	0x3d, r28	; 61
    6c7c:	de bf       	out	0x3e, r29	; 62
    6c7e:	df 91       	pop	r29
    6c80:	cf 91       	pop	r28
    6c82:	08 95       	ret

00006c84 <PORTC_set_pin_dir>:
    6c84:	cf 93       	push	r28
    6c86:	df 93       	push	r29
    6c88:	00 d0       	rcall	.+0      	; 0x6c8a <PORTC_set_pin_dir+0x6>
    6c8a:	cd b7       	in	r28, 0x3d	; 61
    6c8c:	de b7       	in	r29, 0x3e	; 62
    6c8e:	89 83       	std	Y+1, r24	; 0x01
    6c90:	6a 83       	std	Y+2, r22	; 0x02
    6c92:	8a 81       	ldd	r24, Y+2	; 0x02
    6c94:	88 2f       	mov	r24, r24
    6c96:	90 e0       	ldi	r25, 0x00	; 0
    6c98:	81 30       	cpi	r24, 0x01	; 1
    6c9a:	91 05       	cpc	r25, r1
    6c9c:	e1 f0       	breq	.+56     	; 0x6cd6 <PORTC_set_pin_dir+0x52>
    6c9e:	82 30       	cpi	r24, 0x02	; 2
    6ca0:	91 05       	cpc	r25, r1
    6ca2:	71 f1       	breq	.+92     	; 0x6d00 <PORTC_set_pin_dir+0x7c>
    6ca4:	89 2b       	or	r24, r25
    6ca6:	09 f0       	breq	.+2      	; 0x6caa <PORTC_set_pin_dir+0x26>
    6ca8:	3b c0       	rjmp	.+118    	; 0x6d20 <PORTC_set_pin_dir+0x9c>
    6caa:	88 e0       	ldi	r24, 0x08	; 8
    6cac:	90 e0       	ldi	r25, 0x00	; 0
    6cae:	28 e0       	ldi	r18, 0x08	; 8
    6cb0:	30 e0       	ldi	r19, 0x00	; 0
    6cb2:	f9 01       	movw	r30, r18
    6cb4:	20 81       	ld	r18, Z
    6cb6:	62 2f       	mov	r22, r18
    6cb8:	29 81       	ldd	r18, Y+1	; 0x01
    6cba:	42 2f       	mov	r20, r18
    6cbc:	50 e0       	ldi	r21, 0x00	; 0
    6cbe:	21 e0       	ldi	r18, 0x01	; 1
    6cc0:	30 e0       	ldi	r19, 0x00	; 0
    6cc2:	02 c0       	rjmp	.+4      	; 0x6cc8 <PORTC_set_pin_dir+0x44>
    6cc4:	22 0f       	add	r18, r18
    6cc6:	33 1f       	adc	r19, r19
    6cc8:	4a 95       	dec	r20
    6cca:	e2 f7       	brpl	.-8      	; 0x6cc4 <PORTC_set_pin_dir+0x40>
    6ccc:	20 95       	com	r18
    6cce:	26 23       	and	r18, r22
    6cd0:	fc 01       	movw	r30, r24
    6cd2:	20 83       	st	Z, r18
    6cd4:	25 c0       	rjmp	.+74     	; 0x6d20 <PORTC_set_pin_dir+0x9c>
    6cd6:	88 e0       	ldi	r24, 0x08	; 8
    6cd8:	90 e0       	ldi	r25, 0x00	; 0
    6cda:	28 e0       	ldi	r18, 0x08	; 8
    6cdc:	30 e0       	ldi	r19, 0x00	; 0
    6cde:	f9 01       	movw	r30, r18
    6ce0:	20 81       	ld	r18, Z
    6ce2:	62 2f       	mov	r22, r18
    6ce4:	29 81       	ldd	r18, Y+1	; 0x01
    6ce6:	42 2f       	mov	r20, r18
    6ce8:	50 e0       	ldi	r21, 0x00	; 0
    6cea:	21 e0       	ldi	r18, 0x01	; 1
    6cec:	30 e0       	ldi	r19, 0x00	; 0
    6cee:	02 c0       	rjmp	.+4      	; 0x6cf4 <PORTC_set_pin_dir+0x70>
    6cf0:	22 0f       	add	r18, r18
    6cf2:	33 1f       	adc	r19, r19
    6cf4:	4a 95       	dec	r20
    6cf6:	e2 f7       	brpl	.-8      	; 0x6cf0 <PORTC_set_pin_dir+0x6c>
    6cf8:	26 2b       	or	r18, r22
    6cfa:	fc 01       	movw	r30, r24
    6cfc:	20 83       	st	Z, r18
    6cfe:	10 c0       	rjmp	.+32     	; 0x6d20 <PORTC_set_pin_dir+0x9c>
    6d00:	89 81       	ldd	r24, Y+1	; 0x01
    6d02:	88 2f       	mov	r24, r24
    6d04:	90 e0       	ldi	r25, 0x00	; 0
    6d06:	80 5b       	subi	r24, 0xB0	; 176
    6d08:	9b 4f       	sbci	r25, 0xFB	; 251
    6d0a:	29 81       	ldd	r18, Y+1	; 0x01
    6d0c:	22 2f       	mov	r18, r18
    6d0e:	30 e0       	ldi	r19, 0x00	; 0
    6d10:	20 5b       	subi	r18, 0xB0	; 176
    6d12:	3b 4f       	sbci	r19, 0xFB	; 251
    6d14:	f9 01       	movw	r30, r18
    6d16:	20 81       	ld	r18, Z
    6d18:	28 60       	ori	r18, 0x08	; 8
    6d1a:	fc 01       	movw	r30, r24
    6d1c:	20 83       	st	Z, r18
    6d1e:	00 00       	nop
    6d20:	00 00       	nop
    6d22:	0f 90       	pop	r0
    6d24:	0f 90       	pop	r0
    6d26:	df 91       	pop	r29
    6d28:	cf 91       	pop	r28
    6d2a:	08 95       	ret

00006d2c <PORTC_set_pin_level>:
    6d2c:	cf 93       	push	r28
    6d2e:	df 93       	push	r29
    6d30:	00 d0       	rcall	.+0      	; 0x6d32 <PORTC_set_pin_level+0x6>
    6d32:	cd b7       	in	r28, 0x3d	; 61
    6d34:	de b7       	in	r29, 0x3e	; 62
    6d36:	89 83       	std	Y+1, r24	; 0x01
    6d38:	6a 83       	std	Y+2, r22	; 0x02
    6d3a:	8a 81       	ldd	r24, Y+2	; 0x02
    6d3c:	88 23       	and	r24, r24
    6d3e:	a9 f0       	breq	.+42     	; 0x6d6a <PORTC_set_pin_level+0x3e>
    6d40:	88 e0       	ldi	r24, 0x08	; 8
    6d42:	90 e0       	ldi	r25, 0x00	; 0
    6d44:	28 e0       	ldi	r18, 0x08	; 8
    6d46:	30 e0       	ldi	r19, 0x00	; 0
    6d48:	f9 01       	movw	r30, r18
    6d4a:	21 81       	ldd	r18, Z+1	; 0x01
    6d4c:	62 2f       	mov	r22, r18
    6d4e:	29 81       	ldd	r18, Y+1	; 0x01
    6d50:	42 2f       	mov	r20, r18
    6d52:	50 e0       	ldi	r21, 0x00	; 0
    6d54:	21 e0       	ldi	r18, 0x01	; 1
    6d56:	30 e0       	ldi	r19, 0x00	; 0
    6d58:	02 c0       	rjmp	.+4      	; 0x6d5e <PORTC_set_pin_level+0x32>
    6d5a:	22 0f       	add	r18, r18
    6d5c:	33 1f       	adc	r19, r19
    6d5e:	4a 95       	dec	r20
    6d60:	e2 f7       	brpl	.-8      	; 0x6d5a <PORTC_set_pin_level+0x2e>
    6d62:	26 2b       	or	r18, r22
    6d64:	fc 01       	movw	r30, r24
    6d66:	21 83       	std	Z+1, r18	; 0x01
    6d68:	15 c0       	rjmp	.+42     	; 0x6d94 <PORTC_set_pin_level+0x68>
    6d6a:	88 e0       	ldi	r24, 0x08	; 8
    6d6c:	90 e0       	ldi	r25, 0x00	; 0
    6d6e:	28 e0       	ldi	r18, 0x08	; 8
    6d70:	30 e0       	ldi	r19, 0x00	; 0
    6d72:	f9 01       	movw	r30, r18
    6d74:	21 81       	ldd	r18, Z+1	; 0x01
    6d76:	62 2f       	mov	r22, r18
    6d78:	29 81       	ldd	r18, Y+1	; 0x01
    6d7a:	42 2f       	mov	r20, r18
    6d7c:	50 e0       	ldi	r21, 0x00	; 0
    6d7e:	21 e0       	ldi	r18, 0x01	; 1
    6d80:	30 e0       	ldi	r19, 0x00	; 0
    6d82:	02 c0       	rjmp	.+4      	; 0x6d88 <PORTC_set_pin_level+0x5c>
    6d84:	22 0f       	add	r18, r18
    6d86:	33 1f       	adc	r19, r19
    6d88:	4a 95       	dec	r20
    6d8a:	e2 f7       	brpl	.-8      	; 0x6d84 <PORTC_set_pin_level+0x58>
    6d8c:	20 95       	com	r18
    6d8e:	26 23       	and	r18, r22
    6d90:	fc 01       	movw	r30, r24
    6d92:	21 83       	std	Z+1, r18	; 0x01
    6d94:	00 00       	nop
    6d96:	0f 90       	pop	r0
    6d98:	0f 90       	pop	r0
    6d9a:	df 91       	pop	r29
    6d9c:	cf 91       	pop	r28
    6d9e:	08 95       	ret

00006da0 <PORTD_set_pin_pull_mode>:
    6da0:	cf 93       	push	r28
    6da2:	df 93       	push	r29
    6da4:	00 d0       	rcall	.+0      	; 0x6da6 <PORTD_set_pin_pull_mode+0x6>
    6da6:	00 d0       	rcall	.+0      	; 0x6da8 <PORTD_set_pin_pull_mode+0x8>
    6da8:	cd b7       	in	r28, 0x3d	; 61
    6daa:	de b7       	in	r29, 0x3e	; 62
    6dac:	8b 83       	std	Y+3, r24	; 0x03
    6dae:	6c 83       	std	Y+4, r22	; 0x04
    6db0:	8b 81       	ldd	r24, Y+3	; 0x03
    6db2:	88 2f       	mov	r24, r24
    6db4:	90 e0       	ldi	r25, 0x00	; 0
    6db6:	80 59       	subi	r24, 0x90	; 144
    6db8:	9b 4f       	sbci	r25, 0xFB	; 251
    6dba:	89 83       	std	Y+1, r24	; 0x01
    6dbc:	9a 83       	std	Y+2, r25	; 0x02
    6dbe:	8c 81       	ldd	r24, Y+4	; 0x04
    6dc0:	81 30       	cpi	r24, 0x01	; 1
    6dc2:	59 f4       	brne	.+22     	; 0x6dda <PORTD_set_pin_pull_mode+0x3a>
    6dc4:	89 81       	ldd	r24, Y+1	; 0x01
    6dc6:	9a 81       	ldd	r25, Y+2	; 0x02
    6dc8:	fc 01       	movw	r30, r24
    6dca:	80 81       	ld	r24, Z
    6dcc:	28 2f       	mov	r18, r24
    6dce:	28 60       	ori	r18, 0x08	; 8
    6dd0:	89 81       	ldd	r24, Y+1	; 0x01
    6dd2:	9a 81       	ldd	r25, Y+2	; 0x02
    6dd4:	fc 01       	movw	r30, r24
    6dd6:	20 83       	st	Z, r18
    6dd8:	0d c0       	rjmp	.+26     	; 0x6df4 <PORTD_set_pin_pull_mode+0x54>
    6dda:	8c 81       	ldd	r24, Y+4	; 0x04
    6ddc:	88 23       	and	r24, r24
    6dde:	51 f4       	brne	.+20     	; 0x6df4 <PORTD_set_pin_pull_mode+0x54>
    6de0:	89 81       	ldd	r24, Y+1	; 0x01
    6de2:	9a 81       	ldd	r25, Y+2	; 0x02
    6de4:	fc 01       	movw	r30, r24
    6de6:	80 81       	ld	r24, Z
    6de8:	28 2f       	mov	r18, r24
    6dea:	27 7f       	andi	r18, 0xF7	; 247
    6dec:	89 81       	ldd	r24, Y+1	; 0x01
    6dee:	9a 81       	ldd	r25, Y+2	; 0x02
    6df0:	fc 01       	movw	r30, r24
    6df2:	20 83       	st	Z, r18
    6df4:	00 00       	nop
    6df6:	24 96       	adiw	r28, 0x04	; 4
    6df8:	cd bf       	out	0x3d, r28	; 61
    6dfa:	de bf       	out	0x3e, r29	; 62
    6dfc:	df 91       	pop	r29
    6dfe:	cf 91       	pop	r28
    6e00:	08 95       	ret

00006e02 <PORTD_pin_set_isc>:
    6e02:	cf 93       	push	r28
    6e04:	df 93       	push	r29
    6e06:	00 d0       	rcall	.+0      	; 0x6e08 <PORTD_pin_set_isc+0x6>
    6e08:	00 d0       	rcall	.+0      	; 0x6e0a <PORTD_pin_set_isc+0x8>
    6e0a:	cd b7       	in	r28, 0x3d	; 61
    6e0c:	de b7       	in	r29, 0x3e	; 62
    6e0e:	8b 83       	std	Y+3, r24	; 0x03
    6e10:	6c 83       	std	Y+4, r22	; 0x04
    6e12:	8b 81       	ldd	r24, Y+3	; 0x03
    6e14:	88 2f       	mov	r24, r24
    6e16:	90 e0       	ldi	r25, 0x00	; 0
    6e18:	80 59       	subi	r24, 0x90	; 144
    6e1a:	9b 4f       	sbci	r25, 0xFB	; 251
    6e1c:	89 83       	std	Y+1, r24	; 0x01
    6e1e:	9a 83       	std	Y+2, r25	; 0x02
    6e20:	89 81       	ldd	r24, Y+1	; 0x01
    6e22:	9a 81       	ldd	r25, Y+2	; 0x02
    6e24:	fc 01       	movw	r30, r24
    6e26:	80 81       	ld	r24, Z
    6e28:	98 2f       	mov	r25, r24
    6e2a:	98 7f       	andi	r25, 0xF8	; 248
    6e2c:	8c 81       	ldd	r24, Y+4	; 0x04
    6e2e:	89 2b       	or	r24, r25
    6e30:	28 2f       	mov	r18, r24
    6e32:	89 81       	ldd	r24, Y+1	; 0x01
    6e34:	9a 81       	ldd	r25, Y+2	; 0x02
    6e36:	fc 01       	movw	r30, r24
    6e38:	20 83       	st	Z, r18
    6e3a:	00 00       	nop
    6e3c:	24 96       	adiw	r28, 0x04	; 4
    6e3e:	cd bf       	out	0x3d, r28	; 61
    6e40:	de bf       	out	0x3e, r29	; 62
    6e42:	df 91       	pop	r29
    6e44:	cf 91       	pop	r28
    6e46:	08 95       	ret

00006e48 <PORTD_set_pin_dir>:
    6e48:	cf 93       	push	r28
    6e4a:	df 93       	push	r29
    6e4c:	00 d0       	rcall	.+0      	; 0x6e4e <PORTD_set_pin_dir+0x6>
    6e4e:	cd b7       	in	r28, 0x3d	; 61
    6e50:	de b7       	in	r29, 0x3e	; 62
    6e52:	89 83       	std	Y+1, r24	; 0x01
    6e54:	6a 83       	std	Y+2, r22	; 0x02
    6e56:	8a 81       	ldd	r24, Y+2	; 0x02
    6e58:	88 2f       	mov	r24, r24
    6e5a:	90 e0       	ldi	r25, 0x00	; 0
    6e5c:	81 30       	cpi	r24, 0x01	; 1
    6e5e:	91 05       	cpc	r25, r1
    6e60:	e1 f0       	breq	.+56     	; 0x6e9a <PORTD_set_pin_dir+0x52>
    6e62:	82 30       	cpi	r24, 0x02	; 2
    6e64:	91 05       	cpc	r25, r1
    6e66:	71 f1       	breq	.+92     	; 0x6ec4 <PORTD_set_pin_dir+0x7c>
    6e68:	89 2b       	or	r24, r25
    6e6a:	09 f0       	breq	.+2      	; 0x6e6e <PORTD_set_pin_dir+0x26>
    6e6c:	3b c0       	rjmp	.+118    	; 0x6ee4 <PORTD_set_pin_dir+0x9c>
    6e6e:	8c e0       	ldi	r24, 0x0C	; 12
    6e70:	90 e0       	ldi	r25, 0x00	; 0
    6e72:	2c e0       	ldi	r18, 0x0C	; 12
    6e74:	30 e0       	ldi	r19, 0x00	; 0
    6e76:	f9 01       	movw	r30, r18
    6e78:	20 81       	ld	r18, Z
    6e7a:	62 2f       	mov	r22, r18
    6e7c:	29 81       	ldd	r18, Y+1	; 0x01
    6e7e:	42 2f       	mov	r20, r18
    6e80:	50 e0       	ldi	r21, 0x00	; 0
    6e82:	21 e0       	ldi	r18, 0x01	; 1
    6e84:	30 e0       	ldi	r19, 0x00	; 0
    6e86:	02 c0       	rjmp	.+4      	; 0x6e8c <PORTD_set_pin_dir+0x44>
    6e88:	22 0f       	add	r18, r18
    6e8a:	33 1f       	adc	r19, r19
    6e8c:	4a 95       	dec	r20
    6e8e:	e2 f7       	brpl	.-8      	; 0x6e88 <PORTD_set_pin_dir+0x40>
    6e90:	20 95       	com	r18
    6e92:	26 23       	and	r18, r22
    6e94:	fc 01       	movw	r30, r24
    6e96:	20 83       	st	Z, r18
    6e98:	25 c0       	rjmp	.+74     	; 0x6ee4 <PORTD_set_pin_dir+0x9c>
    6e9a:	8c e0       	ldi	r24, 0x0C	; 12
    6e9c:	90 e0       	ldi	r25, 0x00	; 0
    6e9e:	2c e0       	ldi	r18, 0x0C	; 12
    6ea0:	30 e0       	ldi	r19, 0x00	; 0
    6ea2:	f9 01       	movw	r30, r18
    6ea4:	20 81       	ld	r18, Z
    6ea6:	62 2f       	mov	r22, r18
    6ea8:	29 81       	ldd	r18, Y+1	; 0x01
    6eaa:	42 2f       	mov	r20, r18
    6eac:	50 e0       	ldi	r21, 0x00	; 0
    6eae:	21 e0       	ldi	r18, 0x01	; 1
    6eb0:	30 e0       	ldi	r19, 0x00	; 0
    6eb2:	02 c0       	rjmp	.+4      	; 0x6eb8 <PORTD_set_pin_dir+0x70>
    6eb4:	22 0f       	add	r18, r18
    6eb6:	33 1f       	adc	r19, r19
    6eb8:	4a 95       	dec	r20
    6eba:	e2 f7       	brpl	.-8      	; 0x6eb4 <PORTD_set_pin_dir+0x6c>
    6ebc:	26 2b       	or	r18, r22
    6ebe:	fc 01       	movw	r30, r24
    6ec0:	20 83       	st	Z, r18
    6ec2:	10 c0       	rjmp	.+32     	; 0x6ee4 <PORTD_set_pin_dir+0x9c>
    6ec4:	89 81       	ldd	r24, Y+1	; 0x01
    6ec6:	88 2f       	mov	r24, r24
    6ec8:	90 e0       	ldi	r25, 0x00	; 0
    6eca:	80 59       	subi	r24, 0x90	; 144
    6ecc:	9b 4f       	sbci	r25, 0xFB	; 251
    6ece:	29 81       	ldd	r18, Y+1	; 0x01
    6ed0:	22 2f       	mov	r18, r18
    6ed2:	30 e0       	ldi	r19, 0x00	; 0
    6ed4:	20 59       	subi	r18, 0x90	; 144
    6ed6:	3b 4f       	sbci	r19, 0xFB	; 251
    6ed8:	f9 01       	movw	r30, r18
    6eda:	20 81       	ld	r18, Z
    6edc:	28 60       	ori	r18, 0x08	; 8
    6ede:	fc 01       	movw	r30, r24
    6ee0:	20 83       	st	Z, r18
    6ee2:	00 00       	nop
    6ee4:	00 00       	nop
    6ee6:	0f 90       	pop	r0
    6ee8:	0f 90       	pop	r0
    6eea:	df 91       	pop	r29
    6eec:	cf 91       	pop	r28
    6eee:	08 95       	ret

00006ef0 <PORTD_get_pin_level>:
    6ef0:	cf 93       	push	r28
    6ef2:	df 93       	push	r29
    6ef4:	1f 92       	push	r1
    6ef6:	cd b7       	in	r28, 0x3d	; 61
    6ef8:	de b7       	in	r29, 0x3e	; 62
    6efa:	89 83       	std	Y+1, r24	; 0x01
    6efc:	8c e0       	ldi	r24, 0x0C	; 12
    6efe:	90 e0       	ldi	r25, 0x00	; 0
    6f00:	fc 01       	movw	r30, r24
    6f02:	82 81       	ldd	r24, Z+2	; 0x02
    6f04:	88 2f       	mov	r24, r24
    6f06:	90 e0       	ldi	r25, 0x00	; 0
    6f08:	29 81       	ldd	r18, Y+1	; 0x01
    6f0a:	22 2f       	mov	r18, r18
    6f0c:	30 e0       	ldi	r19, 0x00	; 0
    6f0e:	02 c0       	rjmp	.+4      	; 0x6f14 <PORTD_get_pin_level+0x24>
    6f10:	95 95       	asr	r25
    6f12:	87 95       	ror	r24
    6f14:	2a 95       	dec	r18
    6f16:	e2 f7       	brpl	.-8      	; 0x6f10 <PORTD_get_pin_level+0x20>
    6f18:	81 70       	andi	r24, 0x01	; 1
    6f1a:	99 27       	eor	r25, r25
    6f1c:	21 e0       	ldi	r18, 0x01	; 1
    6f1e:	89 2b       	or	r24, r25
    6f20:	09 f4       	brne	.+2      	; 0x6f24 <PORTD_get_pin_level+0x34>
    6f22:	20 e0       	ldi	r18, 0x00	; 0
    6f24:	82 2f       	mov	r24, r18
    6f26:	0f 90       	pop	r0
    6f28:	df 91       	pop	r29
    6f2a:	cf 91       	pop	r28
    6f2c:	08 95       	ret

00006f2e <PORTE_set_pin_dir>:
    6f2e:	cf 93       	push	r28
    6f30:	df 93       	push	r29
    6f32:	00 d0       	rcall	.+0      	; 0x6f34 <PORTE_set_pin_dir+0x6>
    6f34:	cd b7       	in	r28, 0x3d	; 61
    6f36:	de b7       	in	r29, 0x3e	; 62
    6f38:	89 83       	std	Y+1, r24	; 0x01
    6f3a:	6a 83       	std	Y+2, r22	; 0x02
    6f3c:	8a 81       	ldd	r24, Y+2	; 0x02
    6f3e:	88 2f       	mov	r24, r24
    6f40:	90 e0       	ldi	r25, 0x00	; 0
    6f42:	81 30       	cpi	r24, 0x01	; 1
    6f44:	91 05       	cpc	r25, r1
    6f46:	e1 f0       	breq	.+56     	; 0x6f80 <PORTE_set_pin_dir+0x52>
    6f48:	82 30       	cpi	r24, 0x02	; 2
    6f4a:	91 05       	cpc	r25, r1
    6f4c:	71 f1       	breq	.+92     	; 0x6faa <PORTE_set_pin_dir+0x7c>
    6f4e:	89 2b       	or	r24, r25
    6f50:	09 f0       	breq	.+2      	; 0x6f54 <PORTE_set_pin_dir+0x26>
    6f52:	3b c0       	rjmp	.+118    	; 0x6fca <PORTE_set_pin_dir+0x9c>
    6f54:	80 e1       	ldi	r24, 0x10	; 16
    6f56:	90 e0       	ldi	r25, 0x00	; 0
    6f58:	20 e1       	ldi	r18, 0x10	; 16
    6f5a:	30 e0       	ldi	r19, 0x00	; 0
    6f5c:	f9 01       	movw	r30, r18
    6f5e:	20 81       	ld	r18, Z
    6f60:	62 2f       	mov	r22, r18
    6f62:	29 81       	ldd	r18, Y+1	; 0x01
    6f64:	42 2f       	mov	r20, r18
    6f66:	50 e0       	ldi	r21, 0x00	; 0
    6f68:	21 e0       	ldi	r18, 0x01	; 1
    6f6a:	30 e0       	ldi	r19, 0x00	; 0
    6f6c:	02 c0       	rjmp	.+4      	; 0x6f72 <PORTE_set_pin_dir+0x44>
    6f6e:	22 0f       	add	r18, r18
    6f70:	33 1f       	adc	r19, r19
    6f72:	4a 95       	dec	r20
    6f74:	e2 f7       	brpl	.-8      	; 0x6f6e <PORTE_set_pin_dir+0x40>
    6f76:	20 95       	com	r18
    6f78:	26 23       	and	r18, r22
    6f7a:	fc 01       	movw	r30, r24
    6f7c:	20 83       	st	Z, r18
    6f7e:	25 c0       	rjmp	.+74     	; 0x6fca <PORTE_set_pin_dir+0x9c>
    6f80:	80 e1       	ldi	r24, 0x10	; 16
    6f82:	90 e0       	ldi	r25, 0x00	; 0
    6f84:	20 e1       	ldi	r18, 0x10	; 16
    6f86:	30 e0       	ldi	r19, 0x00	; 0
    6f88:	f9 01       	movw	r30, r18
    6f8a:	20 81       	ld	r18, Z
    6f8c:	62 2f       	mov	r22, r18
    6f8e:	29 81       	ldd	r18, Y+1	; 0x01
    6f90:	42 2f       	mov	r20, r18
    6f92:	50 e0       	ldi	r21, 0x00	; 0
    6f94:	21 e0       	ldi	r18, 0x01	; 1
    6f96:	30 e0       	ldi	r19, 0x00	; 0
    6f98:	02 c0       	rjmp	.+4      	; 0x6f9e <PORTE_set_pin_dir+0x70>
    6f9a:	22 0f       	add	r18, r18
    6f9c:	33 1f       	adc	r19, r19
    6f9e:	4a 95       	dec	r20
    6fa0:	e2 f7       	brpl	.-8      	; 0x6f9a <PORTE_set_pin_dir+0x6c>
    6fa2:	26 2b       	or	r18, r22
    6fa4:	fc 01       	movw	r30, r24
    6fa6:	20 83       	st	Z, r18
    6fa8:	10 c0       	rjmp	.+32     	; 0x6fca <PORTE_set_pin_dir+0x9c>
    6faa:	89 81       	ldd	r24, Y+1	; 0x01
    6fac:	88 2f       	mov	r24, r24
    6fae:	90 e0       	ldi	r25, 0x00	; 0
    6fb0:	80 57       	subi	r24, 0x70	; 112
    6fb2:	9b 4f       	sbci	r25, 0xFB	; 251
    6fb4:	29 81       	ldd	r18, Y+1	; 0x01
    6fb6:	22 2f       	mov	r18, r18
    6fb8:	30 e0       	ldi	r19, 0x00	; 0
    6fba:	20 57       	subi	r18, 0x70	; 112
    6fbc:	3b 4f       	sbci	r19, 0xFB	; 251
    6fbe:	f9 01       	movw	r30, r18
    6fc0:	20 81       	ld	r18, Z
    6fc2:	28 60       	ori	r18, 0x08	; 8
    6fc4:	fc 01       	movw	r30, r24
    6fc6:	20 83       	st	Z, r18
    6fc8:	00 00       	nop
    6fca:	00 00       	nop
    6fcc:	0f 90       	pop	r0
    6fce:	0f 90       	pop	r0
    6fd0:	df 91       	pop	r29
    6fd2:	cf 91       	pop	r28
    6fd4:	08 95       	ret

00006fd6 <PORTF_set_pin_dir>:
    6fd6:	cf 93       	push	r28
    6fd8:	df 93       	push	r29
    6fda:	00 d0       	rcall	.+0      	; 0x6fdc <PORTF_set_pin_dir+0x6>
    6fdc:	cd b7       	in	r28, 0x3d	; 61
    6fde:	de b7       	in	r29, 0x3e	; 62
    6fe0:	89 83       	std	Y+1, r24	; 0x01
    6fe2:	6a 83       	std	Y+2, r22	; 0x02
    6fe4:	8a 81       	ldd	r24, Y+2	; 0x02
    6fe6:	88 2f       	mov	r24, r24
    6fe8:	90 e0       	ldi	r25, 0x00	; 0
    6fea:	81 30       	cpi	r24, 0x01	; 1
    6fec:	91 05       	cpc	r25, r1
    6fee:	e1 f0       	breq	.+56     	; 0x7028 <PORTF_set_pin_dir+0x52>
    6ff0:	82 30       	cpi	r24, 0x02	; 2
    6ff2:	91 05       	cpc	r25, r1
    6ff4:	71 f1       	breq	.+92     	; 0x7052 <PORTF_set_pin_dir+0x7c>
    6ff6:	89 2b       	or	r24, r25
    6ff8:	09 f0       	breq	.+2      	; 0x6ffc <PORTF_set_pin_dir+0x26>
    6ffa:	3b c0       	rjmp	.+118    	; 0x7072 <PORTF_set_pin_dir+0x9c>
    6ffc:	84 e1       	ldi	r24, 0x14	; 20
    6ffe:	90 e0       	ldi	r25, 0x00	; 0
    7000:	24 e1       	ldi	r18, 0x14	; 20
    7002:	30 e0       	ldi	r19, 0x00	; 0
    7004:	f9 01       	movw	r30, r18
    7006:	20 81       	ld	r18, Z
    7008:	62 2f       	mov	r22, r18
    700a:	29 81       	ldd	r18, Y+1	; 0x01
    700c:	42 2f       	mov	r20, r18
    700e:	50 e0       	ldi	r21, 0x00	; 0
    7010:	21 e0       	ldi	r18, 0x01	; 1
    7012:	30 e0       	ldi	r19, 0x00	; 0
    7014:	02 c0       	rjmp	.+4      	; 0x701a <PORTF_set_pin_dir+0x44>
    7016:	22 0f       	add	r18, r18
    7018:	33 1f       	adc	r19, r19
    701a:	4a 95       	dec	r20
    701c:	e2 f7       	brpl	.-8      	; 0x7016 <PORTF_set_pin_dir+0x40>
    701e:	20 95       	com	r18
    7020:	26 23       	and	r18, r22
    7022:	fc 01       	movw	r30, r24
    7024:	20 83       	st	Z, r18
    7026:	25 c0       	rjmp	.+74     	; 0x7072 <PORTF_set_pin_dir+0x9c>
    7028:	84 e1       	ldi	r24, 0x14	; 20
    702a:	90 e0       	ldi	r25, 0x00	; 0
    702c:	24 e1       	ldi	r18, 0x14	; 20
    702e:	30 e0       	ldi	r19, 0x00	; 0
    7030:	f9 01       	movw	r30, r18
    7032:	20 81       	ld	r18, Z
    7034:	62 2f       	mov	r22, r18
    7036:	29 81       	ldd	r18, Y+1	; 0x01
    7038:	42 2f       	mov	r20, r18
    703a:	50 e0       	ldi	r21, 0x00	; 0
    703c:	21 e0       	ldi	r18, 0x01	; 1
    703e:	30 e0       	ldi	r19, 0x00	; 0
    7040:	02 c0       	rjmp	.+4      	; 0x7046 <PORTF_set_pin_dir+0x70>
    7042:	22 0f       	add	r18, r18
    7044:	33 1f       	adc	r19, r19
    7046:	4a 95       	dec	r20
    7048:	e2 f7       	brpl	.-8      	; 0x7042 <PORTF_set_pin_dir+0x6c>
    704a:	26 2b       	or	r18, r22
    704c:	fc 01       	movw	r30, r24
    704e:	20 83       	st	Z, r18
    7050:	10 c0       	rjmp	.+32     	; 0x7072 <PORTF_set_pin_dir+0x9c>
    7052:	89 81       	ldd	r24, Y+1	; 0x01
    7054:	88 2f       	mov	r24, r24
    7056:	90 e0       	ldi	r25, 0x00	; 0
    7058:	80 55       	subi	r24, 0x50	; 80
    705a:	9b 4f       	sbci	r25, 0xFB	; 251
    705c:	29 81       	ldd	r18, Y+1	; 0x01
    705e:	22 2f       	mov	r18, r18
    7060:	30 e0       	ldi	r19, 0x00	; 0
    7062:	20 55       	subi	r18, 0x50	; 80
    7064:	3b 4f       	sbci	r19, 0xFB	; 251
    7066:	f9 01       	movw	r30, r18
    7068:	20 81       	ld	r18, Z
    706a:	28 60       	ori	r18, 0x08	; 8
    706c:	fc 01       	movw	r30, r24
    706e:	20 83       	st	Z, r18
    7070:	00 00       	nop
    7072:	00 00       	nop
    7074:	0f 90       	pop	r0
    7076:	0f 90       	pop	r0
    7078:	df 91       	pop	r29
    707a:	cf 91       	pop	r28
    707c:	08 95       	ret

0000707e <_Z10fet_driverb>:

void fet_driver(bool state)
{
    707e:	cf 93       	push	r28
    7080:	df 93       	push	r29
    7082:	1f 92       	push	r1
    7084:	cd b7       	in	r28, 0x3d	; 61
    7086:	de b7       	in	r29, 0x3e	; 62
    7088:	89 83       	std	Y+1, r24	; 0x01
	if(state == ON)
    708a:	89 81       	ldd	r24, Y+1	; 0x01
    708c:	88 23       	and	r24, r24
    708e:	29 f0       	breq	.+10     	; 0x709a <_Z10fet_driverb+0x1c>
	{
		PORTA_set_pin_level(FET_DRIVER_ENABLE, HIGH);
    7090:	61 e0       	ldi	r22, 0x01	; 1
    7092:	83 e0       	ldi	r24, 0x03	; 3
    7094:	0e 94 26 35 	call	0x6a4c	; 0x6a4c <PORTA_set_pin_level>
	}
	else
	{
		PORTA_set_pin_level(FET_DRIVER_ENABLE, LOW);
	}
}
    7098:	04 c0       	rjmp	.+8      	; 0x70a2 <_Z10fet_driverb+0x24>
	{
		PORTA_set_pin_level(FET_DRIVER_ENABLE, HIGH);
	}
	else
	{
		PORTA_set_pin_level(FET_DRIVER_ENABLE, LOW);
    709a:	60 e0       	ldi	r22, 0x00	; 0
    709c:	83 e0       	ldi	r24, 0x03	; 3
    709e:	0e 94 26 35 	call	0x6a4c	; 0x6a4c <PORTA_set_pin_level>
	}
}
    70a2:	00 00       	nop
    70a4:	0f 90       	pop	r0
    70a6:	df 91       	pop	r29
    70a8:	cf 91       	pop	r28
    70aa:	08 95       	ret

000070ac <_Z10wifi_powerb>:


void wifi_power(bool state)
{
    70ac:	cf 93       	push	r28
    70ae:	df 93       	push	r29
    70b0:	1f 92       	push	r1
    70b2:	cd b7       	in	r28, 0x3d	; 61
    70b4:	de b7       	in	r29, 0x3e	; 62
    70b6:	89 83       	std	Y+1, r24	; 0x01
	if(state == ON)
    70b8:	89 81       	ldd	r24, Y+1	; 0x01
    70ba:	88 23       	and	r24, r24
    70bc:	29 f0       	breq	.+10     	; 0x70c8 <_Z10wifi_powerb+0x1c>
	{
		PORTA_set_pin_level(WIFI_ENABLE, HIGH);
    70be:	61 e0       	ldi	r22, 0x01	; 1
    70c0:	85 e0       	ldi	r24, 0x05	; 5
    70c2:	0e 94 26 35 	call	0x6a4c	; 0x6a4c <PORTA_set_pin_level>
	}
	else
	{
		PORTA_set_pin_level(WIFI_ENABLE, LOW);
	}
}
    70c6:	04 c0       	rjmp	.+8      	; 0x70d0 <_Z10wifi_powerb+0x24>
	{
		PORTA_set_pin_level(WIFI_ENABLE, HIGH);
	}
	else
	{
		PORTA_set_pin_level(WIFI_ENABLE, LOW);
    70c8:	60 e0       	ldi	r22, 0x00	; 0
    70ca:	85 e0       	ldi	r24, 0x05	; 5
    70cc:	0e 94 26 35 	call	0x6a4c	; 0x6a4c <PORTA_set_pin_level>
	}
}
    70d0:	00 00       	nop
    70d2:	0f 90       	pop	r0
    70d4:	df 91       	pop	r29
    70d6:	cf 91       	pop	r28
    70d8:	08 95       	ret

000070da <_Z10wifi_resetb>:

void wifi_reset(bool state)
{
    70da:	cf 93       	push	r28
    70dc:	df 93       	push	r29
    70de:	1f 92       	push	r1
    70e0:	cd b7       	in	r28, 0x3d	; 61
    70e2:	de b7       	in	r29, 0x3e	; 62
    70e4:	89 83       	std	Y+1, r24	; 0x01
	if(state == ON)
    70e6:	89 81       	ldd	r24, Y+1	; 0x01
    70e8:	88 23       	and	r24, r24
    70ea:	29 f0       	breq	.+10     	; 0x70f6 <_Z10wifi_resetb+0x1c>
	{
		PORTA_set_pin_level(WIFI_RESET, LOW);
    70ec:	60 e0       	ldi	r22, 0x00	; 0
    70ee:	86 e0       	ldi	r24, 0x06	; 6
    70f0:	0e 94 26 35 	call	0x6a4c	; 0x6a4c <PORTA_set_pin_level>
	}
	else
	{
		PORTA_set_pin_level(WIFI_RESET, HIGH);
	}
}
    70f4:	04 c0       	rjmp	.+8      	; 0x70fe <_Z10wifi_resetb+0x24>
	{
		PORTA_set_pin_level(WIFI_RESET, LOW);
	}
	else
	{
		PORTA_set_pin_level(WIFI_RESET, HIGH);
    70f6:	61 e0       	ldi	r22, 0x01	; 1
    70f8:	86 e0       	ldi	r24, 0x06	; 6
    70fa:	0e 94 26 35 	call	0x6a4c	; 0x6a4c <PORTA_set_pin_level>
	}
}
    70fe:	00 00       	nop
    7100:	0f 90       	pop	r0
    7102:	df 91       	pop	r29
    7104:	cf 91       	pop	r28
    7106:	08 95       	ret

00007108 <_Z11wifiPresentv>:

bool wifiPresent(void)
{
    7108:	cf 93       	push	r28
    710a:	df 93       	push	r29
    710c:	cd b7       	in	r28, 0x3d	; 61
    710e:	de b7       	in	r29, 0x3e	; 62
	return(!PORTD_get_pin_level(WIFI_MODULE_DETECT));
    7110:	87 e0       	ldi	r24, 0x07	; 7
    7112:	0e 94 78 37 	call	0x6ef0	; 0x6ef0 <PORTD_get_pin_level>
    7116:	98 2f       	mov	r25, r24
    7118:	81 e0       	ldi	r24, 0x01	; 1
    711a:	89 27       	eor	r24, r25
}
    711c:	df 91       	pop	r29
    711e:	cf 91       	pop	r28
    7120:	08 95       	ret

00007122 <_Z10BINIO_initv>:
// 	
// 	PORTA.INTFLAGS = 0xFF; /* Clear all flags */
// }

void BINIO_init(void)
{
    7122:	cf 93       	push	r28
    7124:	df 93       	push	r29
    7126:	cd b7       	in	r28, 0x3d	; 61
    7128:	de b7       	in	r29, 0x3e	; 62
	/* PORTA *************************************************************************************/
	
	/* PORTA.PIN0 = TXDO USART */
	/* PORTA.PIN1 = RXD0 USART */
	
	PORTA_set_pin_dir(FAN_ENABLE, PORT_DIR_OUT);
    712a:	61 e0       	ldi	r22, 0x01	; 1
    712c:	81 e0       	ldi	r24, 0x01	; 1
    712e:	0e 94 d2 34 	call	0x69a4	; 0x69a4 <PORTA_set_pin_dir>
	PORTA_set_pin_level(FAN_ENABLE, LOW);
    7132:	60 e0       	ldi	r22, 0x00	; 0
    7134:	81 e0       	ldi	r24, 0x01	; 1
    7136:	0e 94 26 35 	call	0x6a4c	; 0x6a4c <PORTA_set_pin_level>
	
	PORTA_set_pin_dir(RTC_SQW, PORT_DIR_IN);
    713a:	60 e0       	ldi	r22, 0x00	; 0
    713c:	82 e0       	ldi	r24, 0x02	; 2
    713e:	0e 94 d2 34 	call	0x69a4	; 0x69a4 <PORTA_set_pin_dir>
	PORTA_set_pin_pull_mode(RTC_SQW, PORT_PULL_UP);
    7142:	61 e0       	ldi	r22, 0x01	; 1
    7144:	82 e0       	ldi	r24, 0x02	; 2
    7146:	0e 94 7e 34 	call	0x68fc	; 0x68fc <PORTA_set_pin_pull_mode>
	PORTA_pin_set_isc(RTC_SQW, PORT_ISC_RISING_gc);
    714a:	62 e0       	ldi	r22, 0x02	; 2
    714c:	82 e0       	ldi	r24, 0x02	; 2
    714e:	0e 94 af 34 	call	0x695e	; 0x695e <PORTA_pin_set_isc>
	
	PORTA_set_pin_dir(FET_DRIVER_ENABLE, PORT_DIR_OUT);
    7152:	61 e0       	ldi	r22, 0x01	; 1
    7154:	83 e0       	ldi	r24, 0x03	; 3
    7156:	0e 94 d2 34 	call	0x69a4	; 0x69a4 <PORTA_set_pin_dir>
	PORTA_set_pin_level(FET_DRIVER_ENABLE, LOW);
    715a:	60 e0       	ldi	r22, 0x00	; 0
    715c:	83 e0       	ldi	r24, 0x03	; 3
    715e:	0e 94 26 35 	call	0x6a4c	; 0x6a4c <PORTA_set_pin_level>
	
// 	PORTA_set_pin_dir(ANT_CONNECT_INT, PORT_DIR_IN);
// 	PORTA_set_pin_pull_mode(ANT_CONNECT_INT, PORT_PULL_UP);
// 	PORTA_pin_set_isc(ANT_CONNECT_INT, PORT_ISC_FALLING_gc);

	PORTA_set_pin_dir(WIFI_ENABLE, PORT_DIR_OUT);
    7162:	61 e0       	ldi	r22, 0x01	; 1
    7164:	85 e0       	ldi	r24, 0x05	; 5
    7166:	0e 94 d2 34 	call	0x69a4	; 0x69a4 <PORTA_set_pin_dir>
	PORTA_set_pin_level(WIFI_ENABLE, LOW);
    716a:	60 e0       	ldi	r22, 0x00	; 0
    716c:	85 e0       	ldi	r24, 0x05	; 5
    716e:	0e 94 26 35 	call	0x6a4c	; 0x6a4c <PORTA_set_pin_level>
	
	PORTA_set_pin_dir(WIFI_RESET, PORT_DIR_OUT);
    7172:	61 e0       	ldi	r22, 0x01	; 1
    7174:	86 e0       	ldi	r24, 0x06	; 6
    7176:	0e 94 d2 34 	call	0x69a4	; 0x69a4 <PORTA_set_pin_dir>
	PORTA_set_pin_level(WIFI_RESET, LOW);
    717a:	60 e0       	ldi	r22, 0x00	; 0
    717c:	86 e0       	ldi	r24, 0x06	; 6
    717e:	0e 94 26 35 	call	0x6a4c	; 0x6a4c <PORTA_set_pin_level>
	
	PORTA_set_pin_dir(V3V3_PWR_ENABLE, PORT_DIR_OUT);
    7182:	61 e0       	ldi	r22, 0x01	; 1
    7184:	87 e0       	ldi	r24, 0x07	; 7
    7186:	0e 94 d2 34 	call	0x69a4	; 0x69a4 <PORTA_set_pin_dir>
	PORTA_set_pin_level(V3V3_PWR_ENABLE, LOW);
    718a:	60 e0       	ldi	r22, 0x00	; 0
    718c:	87 e0       	ldi	r24, 0x07	; 7
    718e:	0e 94 26 35 	call	0x6a4c	; 0x6a4c <PORTA_set_pin_level>
	
	/* PORTB *************************************************************************************/

	PORTB_set_pin_dir(PROC_PTT_OUT, PORT_DIR_OUT);
    7192:	61 e0       	ldi	r22, 0x01	; 1
    7194:	80 e0       	ldi	r24, 0x00	; 0
    7196:	0e 94 60 35 	call	0x6ac0	; 0x6ac0 <PORTB_set_pin_dir>
	PORTB_set_pin_level(PROC_PTT_OUT, LOW);
    719a:	60 e0       	ldi	r22, 0x00	; 0
    719c:	80 e0       	ldi	r24, 0x00	; 0
    719e:	0e 94 b4 35 	call	0x6b68	; 0x6b68 <PORTB_set_pin_level>
	
	PORTB_set_pin_dir(PROC_TONE_OUT, PORT_DIR_OUT);
    71a2:	61 e0       	ldi	r22, 0x01	; 1
    71a4:	81 e0       	ldi	r24, 0x01	; 1
    71a6:	0e 94 60 35 	call	0x6ac0	; 0x6ac0 <PORTB_set_pin_dir>
	PORTB_set_pin_level(PROC_TONE_OUT, LOW);
    71aa:	60 e0       	ldi	r22, 0x00	; 0
    71ac:	81 e0       	ldi	r24, 0x01	; 1
    71ae:	0e 94 b4 35 	call	0x6b68	; 0x6b68 <PORTB_set_pin_level>
	
	/* PORTB.PIN2 = SDA1 I2C */
	/* PORTB.PIN3 = SCL1 I2C */
	PORTB_set_pin_dir(MAIN_PWR_ENABLE, PORT_DIR_OUT);
    71b2:	61 e0       	ldi	r22, 0x01	; 1
    71b4:	84 e0       	ldi	r24, 0x04	; 4
    71b6:	0e 94 60 35 	call	0x6ac0	; 0x6ac0 <PORTB_set_pin_dir>
	PORTB_set_pin_level(MAIN_PWR_ENABLE, LOW);
    71ba:	60 e0       	ldi	r22, 0x00	; 0
    71bc:	84 e0       	ldi	r24, 0x04	; 4
    71be:	0e 94 b4 35 	call	0x6b68	; 0x6b68 <PORTB_set_pin_level>
	
	PORTB_set_pin_dir(TX_FINAL_VOLTAGE_ENABLE, PORT_DIR_OUT);
    71c2:	61 e0       	ldi	r22, 0x01	; 1
    71c4:	85 e0       	ldi	r24, 0x05	; 5
    71c6:	0e 94 60 35 	call	0x6ac0	; 0x6ac0 <PORTB_set_pin_dir>
	PORTB_set_pin_level(TX_FINAL_VOLTAGE_ENABLE, LOW);
    71ca:	60 e0       	ldi	r22, 0x00	; 0
    71cc:	85 e0       	ldi	r24, 0x05	; 5
    71ce:	0e 94 b4 35 	call	0x6b68	; 0x6b68 <PORTB_set_pin_level>
	/* PORTC.PIN0 = TXD1 USART TO_WIFI_RX */
	/* PORTC.PIN1 = RXD1 USART FROM_WIFI_TX */
	/* PORTC.PIN2 = SDA0 I2C */
	/* PORTC.PIN3 = SCL0 I2C */

	PORTC_set_pin_dir(LED_GREEN, PORT_DIR_OUT);
    71d2:	61 e0       	ldi	r22, 0x01	; 1
    71d4:	85 e0       	ldi	r24, 0x05	; 5
    71d6:	0e 94 42 36 	call	0x6c84	; 0x6c84 <PORTC_set_pin_dir>
	PORTC_set_pin_level(LED_GREEN, LOW);
    71da:	60 e0       	ldi	r22, 0x00	; 0
    71dc:	85 e0       	ldi	r24, 0x05	; 5
    71de:	0e 94 96 36 	call	0x6d2c	; 0x6d2c <PORTC_set_pin_level>
	
	PORTC_set_pin_dir(LED_RED, PORT_DIR_OUT);
    71e2:	61 e0       	ldi	r22, 0x01	; 1
    71e4:	86 e0       	ldi	r24, 0x06	; 6
    71e6:	0e 94 42 36 	call	0x6c84	; 0x6c84 <PORTC_set_pin_dir>
	PORTC_set_pin_level(LED_RED, LOW);
    71ea:	60 e0       	ldi	r22, 0x00	; 0
    71ec:	86 e0       	ldi	r24, 0x06	; 6
    71ee:	0e 94 96 36 	call	0x6d2c	; 0x6d2c <PORTC_set_pin_level>
	
	PORTC_set_pin_dir(SWITCH, PORT_DIR_IN);
    71f2:	60 e0       	ldi	r22, 0x00	; 0
    71f4:	87 e0       	ldi	r24, 0x07	; 7
    71f6:	0e 94 42 36 	call	0x6c84	; 0x6c84 <PORTC_set_pin_dir>
	PORTC_set_pin_pull_mode(SWITCH, PORT_PULL_UP);
    71fa:	61 e0       	ldi	r22, 0x01	; 1
    71fc:	87 e0       	ldi	r24, 0x07	; 7
    71fe:	0e 94 ee 35 	call	0x6bdc	; 0x6bdc <PORTC_set_pin_pull_mode>
	PORTC_pin_set_isc(SWITCH, PORT_ISC_RISING_gc);
    7202:	62 e0       	ldi	r22, 0x02	; 2
    7204:	87 e0       	ldi	r24, 0x07	; 7
    7206:	0e 94 1f 36 	call	0x6c3e	; 0x6c3e <PORTC_pin_set_isc>
	
	/* PORTD *************************************************************************************/
	PORTD_set_pin_dir(X80M_ANTENNA_DETECT_V, PORT_DIR_IN); /* use ADC for reading voltage at antenna detect pin */
    720a:	60 e0       	ldi	r22, 0x00	; 0
    720c:	80 e0       	ldi	r24, 0x00	; 0
    720e:	0e 94 24 37 	call	0x6e48	; 0x6e48 <PORTD_set_pin_dir>
	
	PORTD_set_pin_dir(X80M_ANTENNA_DETECT, PORT_DIR_IN);
    7212:	60 e0       	ldi	r22, 0x00	; 0
    7214:	81 e0       	ldi	r24, 0x01	; 1
    7216:	0e 94 24 37 	call	0x6e48	; 0x6e48 <PORTD_set_pin_dir>
	PORTD_set_pin_pull_mode(X80M_ANTENNA_DETECT, PORT_PULL_UP);
    721a:	61 e0       	ldi	r22, 0x01	; 1
    721c:	81 e0       	ldi	r24, 0x01	; 1
    721e:	0e 94 d0 36 	call	0x6da0	; 0x6da0 <PORTD_set_pin_pull_mode>
	PORTD_pin_set_isc(X80M_ANTENNA_DETECT, PORT_ISC_BOTHEDGES_gc);
    7222:	61 e0       	ldi	r22, 0x01	; 1
    7224:	81 e0       	ldi	r24, 0x01	; 1
    7226:	0e 94 01 37 	call	0x6e02	; 0x6e02 <PORTD_pin_set_isc>
	/* PORTD.PIN3 = ACD3 Audio in TX_BATTERY_VOLTAGE */
	/* PORTD.PIN4 = ACD4 Audio in TX_12_VOLTAGE */
	/* PORTD.PIN5 = ACD5 Audio in TX_PA_VOLTAGE */
	/* PORTD.PIN6 = DAC0 voltage out DAC_OUTPUT */
	
	PORTD_set_pin_dir(WIFI_MODULE_DETECT, PORT_DIR_IN); /* Detect presence of Huzzah module */
    722a:	60 e0       	ldi	r22, 0x00	; 0
    722c:	87 e0       	ldi	r24, 0x07	; 7
    722e:	0e 94 24 37 	call	0x6e48	; 0x6e48 <PORTD_set_pin_dir>
	PORTD_set_pin_pull_mode(WIFI_MODULE_DETECT, PORT_PULL_OFF);
    7232:	60 e0       	ldi	r22, 0x00	; 0
    7234:	87 e0       	ldi	r24, 0x07	; 7
    7236:	0e 94 d0 36 	call	0x6da0	; 0x6da0 <PORTD_set_pin_pull_mode>

	/* PORTE *************************************************************************************/
	PORTE_set_pin_dir(0, PORT_DIR_OFF); /* Unused */
    723a:	62 e0       	ldi	r22, 0x02	; 2
    723c:	80 e0       	ldi	r24, 0x00	; 0
    723e:	0e 94 97 37 	call	0x6f2e	; 0x6f2e <PORTE_set_pin_dir>
	PORTE_set_pin_dir(1, PORT_DIR_OFF); /* Unused */
    7242:	62 e0       	ldi	r22, 0x02	; 2
    7244:	81 e0       	ldi	r24, 0x01	; 1
    7246:	0e 94 97 37 	call	0x6f2e	; 0x6f2e <PORTE_set_pin_dir>
	PORTE_set_pin_dir(2, PORT_DIR_OFF); /* Unused */
    724a:	62 e0       	ldi	r22, 0x02	; 2
    724c:	82 e0       	ldi	r24, 0x02	; 2
    724e:	0e 94 97 37 	call	0x6f2e	; 0x6f2e <PORTE_set_pin_dir>
	PORTE_set_pin_dir(3, PORT_DIR_OFF); /* Unused */
    7252:	62 e0       	ldi	r22, 0x02	; 2
    7254:	83 e0       	ldi	r24, 0x03	; 3
    7256:	0e 94 97 37 	call	0x6f2e	; 0x6f2e <PORTE_set_pin_dir>

	/* PORTF *************************************************************************************/
	PORTF_set_pin_dir(X32KHZ_SQUAREWAVE, PORT_DIR_OFF);	
    725a:	62 e0       	ldi	r22, 0x02	; 2
    725c:	80 e0       	ldi	r24, 0x00	; 0
    725e:	0e 94 eb 37 	call	0x6fd6	; 0x6fd6 <PORTF_set_pin_dir>
	PORTF_set_pin_dir(1, PORT_DIR_OFF);	/* Unused */
    7262:	62 e0       	ldi	r22, 0x02	; 2
    7264:	81 e0       	ldi	r24, 0x01	; 1
    7266:	0e 94 eb 37 	call	0x6fd6	; 0x6fd6 <PORTF_set_pin_dir>
	PORTF_set_pin_dir(2, PORT_DIR_OFF); /* Unused */
    726a:	62 e0       	ldi	r22, 0x02	; 2
    726c:	82 e0       	ldi	r24, 0x02	; 2
    726e:	0e 94 eb 37 	call	0x6fd6	; 0x6fd6 <PORTF_set_pin_dir>
	PORTF_set_pin_dir(3, PORT_DIR_OFF); /* Unused */
    7272:	62 e0       	ldi	r22, 0x02	; 2
    7274:	83 e0       	ldi	r24, 0x03	; 3
    7276:	0e 94 eb 37 	call	0x6fd6	; 0x6fd6 <PORTF_set_pin_dir>
	PORTF_set_pin_dir(4, PORT_DIR_OFF); /* Unused */
    727a:	62 e0       	ldi	r22, 0x02	; 2
    727c:	84 e0       	ldi	r24, 0x04	; 4
    727e:	0e 94 eb 37 	call	0x6fd6	; 0x6fd6 <PORTF_set_pin_dir>
	PORTF_set_pin_dir(5, PORT_DIR_OFF); /* Unused */
    7282:	62 e0       	ldi	r22, 0x02	; 2
    7284:	85 e0       	ldi	r24, 0x05	; 5
    7286:	0e 94 eb 37 	call	0x6fd6	; 0x6fd6 <PORTF_set_pin_dir>
	/* PORTF.PIN6 = Reset */
	
	/* PORT Pin Interrupts */
	PORTA.PIN2CTRL = 0x0A; /* Enable RTC SQW 1-sec interrupts */
    728a:	80 e0       	ldi	r24, 0x00	; 0
    728c:	94 e0       	ldi	r25, 0x04	; 4
    728e:	2a e0       	ldi	r18, 0x0A	; 10
    7290:	fc 01       	movw	r30, r24
    7292:	22 8b       	std	Z+18, r18	; 0x12
	PORTD.PIN1CTRL = 0x09; /* Enable antenna change interrupts */
    7294:	80 e6       	ldi	r24, 0x60	; 96
    7296:	94 e0       	ldi	r25, 0x04	; 4
    7298:	29 e0       	ldi	r18, 0x09	; 9
    729a:	fc 01       	movw	r30, r24
    729c:	21 8b       	std	Z+17, r18	; 0x11
}
    729e:	00 00       	nop
    72a0:	df 91       	pop	r29
    72a2:	cf 91       	pop	r28
    72a4:	08 95       	ret

000072a6 <BOD_init>:
 * \brief Initialize Brownout Detector
 *
 * \return Initialization status.
 */
int8_t BOD_init()
{
    72a6:	cf 93       	push	r28
    72a8:	df 93       	push	r29
    72aa:	cd b7       	in	r28, 0x3d	; 61
    72ac:	de b7       	in	r29, 0x3e	; 62

	// ccp_write_io((void*)&(BOD.CTRLA),BOD_SLEEP_DIS_gc /* Disabled */);

	BOD.INTCTRL = 0 << BOD_VLMIE_bp        /* voltage level monitor interrrupt enable: disabled */
    72ae:	80 e8       	ldi	r24, 0x80	; 128
    72b0:	90 e0       	ldi	r25, 0x00	; 0
	              | BOD_VLMCFG_FALLING_gc; /* Interrupt when supply goes below VLM level */
    72b2:	fc 01       	movw	r30, r24
    72b4:	11 86       	std	Z+9, r1	; 0x09

	// BOD.VLMCTRLA = BOD_VLMLVL_5ABOVE_gc; /* VLM threshold 5% above BOD level */

	return 0;
    72b6:	80 e0       	ldi	r24, 0x00	; 0
}
    72b8:	df 91       	pop	r29
    72ba:	cf 91       	pop	r28
    72bc:	08 95       	ret

000072be <ccp_write_io>:
 * \note Using IAR Embedded workbench, the choice of memory model has an impact
 *       on calling convention. The memory model is not visible to the
 *       preprocessor, so it must be defined in the Assembler preprocessor directives.
 */
static inline void ccp_write_io(void *addr, uint8_t value)
{
    72be:	cf 93       	push	r28
    72c0:	df 93       	push	r29
    72c2:	00 d0       	rcall	.+0      	; 0x72c4 <ccp_write_io+0x6>
    72c4:	1f 92       	push	r1
    72c6:	cd b7       	in	r28, 0x3d	; 61
    72c8:	de b7       	in	r29, 0x3e	; 62
    72ca:	89 83       	std	Y+1, r24	; 0x01
    72cc:	9a 83       	std	Y+2, r25	; 0x02
    72ce:	6b 83       	std	Y+3, r22	; 0x03
	protected_write_io(addr, CCP_IOREG_gc, value);
    72d0:	89 81       	ldd	r24, Y+1	; 0x01
    72d2:	9a 81       	ldd	r25, Y+2	; 0x02
    72d4:	4b 81       	ldd	r20, Y+3	; 0x03
    72d6:	68 ed       	ldi	r22, 0xD8	; 216
    72d8:	0e 94 51 56 	call	0xaca2	; 0xaca2 <protected_write_io>
}
    72dc:	00 00       	nop
    72de:	23 96       	adiw	r28, 0x03	; 3
    72e0:	cd bf       	out	0x3d, r28	; 61
    72e2:	de bf       	out	0x3e, r29	; 62
    72e4:	df 91       	pop	r29
    72e6:	cf 91       	pop	r28
    72e8:	08 95       	ret

000072ea <CLKCTRL_init>:
 * \brief Initialize clkctrl interface
 *
 * \return Initialization status.
 */
int8_t CLKCTRL_init()
{
    72ea:	cf 93       	push	r28
    72ec:	df 93       	push	r29
    72ee:	cd b7       	in	r28, 0x3d	; 61
    72f0:	de b7       	in	r29, 0x3e	; 62
	//		 | CLKCTRL_MULFAC_DISABLE_gc /* 1 */
	//		 | 0 << CLKCTRL_SOURCE_bp /* Select Source for PLL: disabled */);

	ccp_write_io((void*)&(CLKCTRL.OSCHFCTRLA),CLKCTRL_FRQSEL_24M_gc /* 4 */
			 | 0 << CLKCTRL_AUTOTUNE_bp /* Auto-Tune enable: disabled */
			 | 0 << CLKCTRL_RUNSTDBY_bp /* Run standby: disabled */);
    72f2:	64 e2       	ldi	r22, 0x24	; 36
    72f4:	88 e6       	ldi	r24, 0x68	; 104
    72f6:	90 e0       	ldi	r25, 0x00	; 0
    72f8:	0e 94 5f 39 	call	0x72be	; 0x72be <ccp_write_io>
	// ccp_write_io((void*)&(CLKCTRL.MCLKCTRLA),CLKCTRL_CLKSEL_OSCHF_gc /* Internal high-frequency oscillator */
	//		 | 0 << CLKCTRL_CLKOUT_bp /* System clock out: disabled */);

	// ccp_write_io((void*)&(CLKCTRL.MCLKLOCK),0 << CLKCTRL_LOCKEN_bp /* lock enable: disabled */);

	return 0;
    72fc:	80 e0       	ldi	r24, 0x00	; 0
}
    72fe:	df 91       	pop	r29
    7300:	cf 91       	pop	r28
    7302:	08 95       	ret

00007304 <CPUINT_init>:
 * \brief Initialize cpuint interface
 *
 * \return Initialization status
 */
int8_t CPUINT_init()
{
    7304:	cf 93       	push	r28
    7306:	df 93       	push	r29
    7308:	cd b7       	in	r28, 0x3d	; 61
    730a:	de b7       	in	r29, 0x3e	; 62

	// CPUINT.LVL0PRI = 0x0 << CPUINT_LVL0PRI_gp; /* Interrupt Level Priority: 0x0 */

	// CPUINT.LVL1VEC = 0x0 << CPUINT_LVL1VEC_gp; /* Interrupt Vector with High Priority: 0x0 */

	ENABLE_INTERRUPTS();
    730c:	78 94       	sei

	return 0;
    730e:	80 e0       	ldi	r24, 0x00	; 0
}
    7310:	df 91       	pop	r29
    7312:	cf 91       	pop	r28
    7314:	08 95       	ret

00007316 <_ZL9VREF_initv>:
#define LSB_MASK                 (0x03)



static void VREF_init(void)
{
    7316:	cf 93       	push	r28
    7318:	df 93       	push	r29
    731a:	cd b7       	in	r28, 0x3d	; 61
    731c:	de b7       	in	r29, 0x3e	; 62
//	VREF.DAC0REF = VREF_REFSEL_2V048_gc /* Select the 2.048V Internal Voltage Reference for DAC */
//	VREF.DAC0REF = VREF_REFSEL_2V500_gc /* Select the 2.048V Internal Voltage Reference for DAC */
//	| VREF_ALWAYSON_bm;    /* Set the Voltage Reference in Always On mode */
	VREF.DAC0REF = VREF_REFSEL_2V500_gc; /* Select the 2.048V Internal Voltage Reference for DAC */
    731e:	80 ea       	ldi	r24, 0xA0	; 160
    7320:	90 e0       	ldi	r25, 0x00	; 0
    7322:	23 e0       	ldi	r18, 0x03	; 3
    7324:	fc 01       	movw	r30, r24
    7326:	22 83       	std	Z+2, r18	; 0x02
	/* Wait VREF start-up time */
	while(util_delay_ms(VREF_STARTUP_TIME_MS));
    7328:	6a e0       	ldi	r22, 0x0A	; 10
    732a:	70 e0       	ldi	r23, 0x00	; 0
    732c:	80 e0       	ldi	r24, 0x00	; 0
    732e:	90 e0       	ldi	r25, 0x00	; 0
    7330:	0e 94 1e 66 	call	0xcc3c	; 0xcc3c <util_delay_ms>
    7334:	88 23       	and	r24, r24
    7336:	09 f0       	breq	.+2      	; 0x733a <_ZL9VREF_initv+0x24>
    7338:	f7 cf       	rjmp	.-18     	; 0x7328 <_ZL9VREF_initv+0x12>
}
    733a:	00 00       	nop
    733c:	df 91       	pop	r29
    733e:	cf 91       	pop	r28
    7340:	08 95       	ret

00007342 <_Z9DAC0_initv>:

void DAC0_init(void)
{
    7342:	cf 93       	push	r28
    7344:	df 93       	push	r29
    7346:	cd b7       	in	r28, 0x3d	; 61
    7348:	de b7       	in	r29, 0x3e	; 62
	VREF_init();
    734a:	0e 94 8b 39 	call	0x7316	; 0x7316 <_ZL9VREF_initv>
	/* Disable digital input buffer */
	PORTD.PIN6CTRL &= ~PORT_ISC_gm;
    734e:	80 e6       	ldi	r24, 0x60	; 96
    7350:	94 e0       	ldi	r25, 0x04	; 4
    7352:	20 e6       	ldi	r18, 0x60	; 96
    7354:	34 e0       	ldi	r19, 0x04	; 4
    7356:	f9 01       	movw	r30, r18
    7358:	26 89       	ldd	r18, Z+22	; 0x16
    735a:	28 7f       	andi	r18, 0xF8	; 248
    735c:	fc 01       	movw	r30, r24
    735e:	26 8b       	std	Z+22, r18	; 0x16
	PORTD.PIN6CTRL |= PORT_ISC_INPUT_DISABLE_gc;
    7360:	80 e6       	ldi	r24, 0x60	; 96
    7362:	94 e0       	ldi	r25, 0x04	; 4
    7364:	20 e6       	ldi	r18, 0x60	; 96
    7366:	34 e0       	ldi	r19, 0x04	; 4
    7368:	f9 01       	movw	r30, r18
    736a:	26 89       	ldd	r18, Z+22	; 0x16
    736c:	24 60       	ori	r18, 0x04	; 4
    736e:	fc 01       	movw	r30, r24
    7370:	26 8b       	std	Z+22, r18	; 0x16
	/* Disable pull-up resistor */
	PORTD.PIN6CTRL &= ~PORT_PULLUPEN_bm;
    7372:	80 e6       	ldi	r24, 0x60	; 96
    7374:	94 e0       	ldi	r25, 0x04	; 4
    7376:	20 e6       	ldi	r18, 0x60	; 96
    7378:	34 e0       	ldi	r19, 0x04	; 4
    737a:	f9 01       	movw	r30, r18
    737c:	26 89       	ldd	r18, Z+22	; 0x16
    737e:	27 7f       	andi	r18, 0xF7	; 247
    7380:	fc 01       	movw	r30, r24
    7382:	26 8b       	std	Z+22, r18	; 0x16
	DAC0.CTRLA = DAC_ENABLE_bm          /* Enable DAC */
    7384:	80 ea       	ldi	r24, 0xA0	; 160
    7386:	96 e0       	ldi	r25, 0x06	; 6
	| DAC_OUTEN_bm           /* Enable output buffer */
	| DAC_RUNSTDBY_bm;       /* Enable Run in Standby mode */
    7388:	21 ec       	ldi	r18, 0xC1	; 193
    738a:	fc 01       	movw	r30, r24
    738c:	20 83       	st	Z, r18
	
	DAC0_setVal(DAC_DEFAULT_VALUE);
    738e:	80 e0       	ldi	r24, 0x00	; 0
    7390:	90 e0       	ldi	r25, 0x00	; 0
    7392:	0e 94 cf 39 	call	0x739e	; 0x739e <_Z11DAC0_setValj>
}
    7396:	00 00       	nop
    7398:	df 91       	pop	r29
    739a:	cf 91       	pop	r28
    739c:	08 95       	ret

0000739e <_Z11DAC0_setValj>:

void DAC0_setVal(uint16_t value)
{
    739e:	cf 93       	push	r28
    73a0:	df 93       	push	r29
    73a2:	00 d0       	rcall	.+0      	; 0x73a4 <_Z11DAC0_setValj+0x6>
    73a4:	cd b7       	in	r28, 0x3d	; 61
    73a6:	de b7       	in	r29, 0x3e	; 62
    73a8:	89 83       	std	Y+1, r24	; 0x01
    73aa:	9a 83       	std	Y+2, r25	; 0x02
	/* Store the two LSbs in DAC0.DATAL */
	DAC0.DATAL = (value & LSB_MASK) << 6;
    73ac:	80 ea       	ldi	r24, 0xA0	; 160
    73ae:	96 e0       	ldi	r25, 0x06	; 6
    73b0:	29 81       	ldd	r18, Y+1	; 0x01
    73b2:	22 95       	swap	r18
    73b4:	22 0f       	add	r18, r18
    73b6:	22 0f       	add	r18, r18
    73b8:	20 7c       	andi	r18, 0xC0	; 192
    73ba:	fc 01       	movw	r30, r24
    73bc:	22 83       	std	Z+2, r18	; 0x02
	/* Store the eight MSbs in DAC0.DATAH */
	DAC0.DATAH = value >> 2;
    73be:	80 ea       	ldi	r24, 0xA0	; 160
    73c0:	96 e0       	ldi	r25, 0x06	; 6
    73c2:	29 81       	ldd	r18, Y+1	; 0x01
    73c4:	3a 81       	ldd	r19, Y+2	; 0x02
    73c6:	36 95       	lsr	r19
    73c8:	27 95       	ror	r18
    73ca:	36 95       	lsr	r19
    73cc:	27 95       	ror	r18
    73ce:	fc 01       	movw	r30, r24
    73d0:	23 83       	std	Z+3, r18	; 0x03
}
    73d2:	00 00       	nop
    73d4:	0f 90       	pop	r0
    73d6:	0f 90       	pop	r0
    73d8:	df 91       	pop	r29
    73da:	cf 91       	pop	r28
    73dc:	08 95       	ret

000073de <PORTC_set_pin_dir>:
 *                      PORT_DIR_OUT = Data direction out
 *                      PORT_DIR_OFF = Disables the pin
 *                      (low power state)
 */
static inline void PORTC_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
    73de:	cf 93       	push	r28
    73e0:	df 93       	push	r29
    73e2:	00 d0       	rcall	.+0      	; 0x73e4 <PORTC_set_pin_dir+0x6>
    73e4:	cd b7       	in	r28, 0x3d	; 61
    73e6:	de b7       	in	r29, 0x3e	; 62
    73e8:	89 83       	std	Y+1, r24	; 0x01
    73ea:	6a 83       	std	Y+2, r22	; 0x02
	switch (dir) {
    73ec:	8a 81       	ldd	r24, Y+2	; 0x02
    73ee:	88 2f       	mov	r24, r24
    73f0:	90 e0       	ldi	r25, 0x00	; 0
    73f2:	81 30       	cpi	r24, 0x01	; 1
    73f4:	91 05       	cpc	r25, r1
    73f6:	e1 f0       	breq	.+56     	; 0x7430 <PORTC_set_pin_dir+0x52>
    73f8:	82 30       	cpi	r24, 0x02	; 2
    73fa:	91 05       	cpc	r25, r1
    73fc:	71 f1       	breq	.+92     	; 0x745a <PORTC_set_pin_dir+0x7c>
    73fe:	89 2b       	or	r24, r25
    7400:	09 f0       	breq	.+2      	; 0x7404 <PORTC_set_pin_dir+0x26>
		break;
	case PORT_DIR_OFF:
		*((uint8_t *)&PORTC + 0x10 + pin) |= 1 << PORT_PULLUPEN_bp;
		break;
	default:
		break;
    7402:	3b c0       	rjmp	.+118    	; 0x747a <PORTC_set_pin_dir+0x9c>
 */
static inline void PORTC_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTC.DIR &= ~(1 << pin);
    7404:	88 e0       	ldi	r24, 0x08	; 8
    7406:	90 e0       	ldi	r25, 0x00	; 0
    7408:	28 e0       	ldi	r18, 0x08	; 8
    740a:	30 e0       	ldi	r19, 0x00	; 0
    740c:	f9 01       	movw	r30, r18
    740e:	20 81       	ld	r18, Z
    7410:	62 2f       	mov	r22, r18
    7412:	29 81       	ldd	r18, Y+1	; 0x01
    7414:	42 2f       	mov	r20, r18
    7416:	50 e0       	ldi	r21, 0x00	; 0
    7418:	21 e0       	ldi	r18, 0x01	; 1
    741a:	30 e0       	ldi	r19, 0x00	; 0
    741c:	02 c0       	rjmp	.+4      	; 0x7422 <PORTC_set_pin_dir+0x44>
    741e:	22 0f       	add	r18, r18
    7420:	33 1f       	adc	r19, r19
    7422:	4a 95       	dec	r20
    7424:	e2 f7       	brpl	.-8      	; 0x741e <PORTC_set_pin_dir+0x40>
    7426:	20 95       	com	r18
    7428:	26 23       	and	r18, r22
    742a:	fc 01       	movw	r30, r24
    742c:	20 83       	st	Z, r18
		break;
    742e:	25 c0       	rjmp	.+74     	; 0x747a <PORTC_set_pin_dir+0x9c>
	case PORT_DIR_OUT:
		VPORTC.DIR |= (1 << pin);
    7430:	88 e0       	ldi	r24, 0x08	; 8
    7432:	90 e0       	ldi	r25, 0x00	; 0
    7434:	28 e0       	ldi	r18, 0x08	; 8
    7436:	30 e0       	ldi	r19, 0x00	; 0
    7438:	f9 01       	movw	r30, r18
    743a:	20 81       	ld	r18, Z
    743c:	62 2f       	mov	r22, r18
    743e:	29 81       	ldd	r18, Y+1	; 0x01
    7440:	42 2f       	mov	r20, r18
    7442:	50 e0       	ldi	r21, 0x00	; 0
    7444:	21 e0       	ldi	r18, 0x01	; 1
    7446:	30 e0       	ldi	r19, 0x00	; 0
    7448:	02 c0       	rjmp	.+4      	; 0x744e <PORTC_set_pin_dir+0x70>
    744a:	22 0f       	add	r18, r18
    744c:	33 1f       	adc	r19, r19
    744e:	4a 95       	dec	r20
    7450:	e2 f7       	brpl	.-8      	; 0x744a <PORTC_set_pin_dir+0x6c>
    7452:	26 2b       	or	r18, r22
    7454:	fc 01       	movw	r30, r24
    7456:	20 83       	st	Z, r18
		break;
    7458:	10 c0       	rjmp	.+32     	; 0x747a <PORTC_set_pin_dir+0x9c>
	case PORT_DIR_OFF:
		*((uint8_t *)&PORTC + 0x10 + pin) |= 1 << PORT_PULLUPEN_bp;
    745a:	89 81       	ldd	r24, Y+1	; 0x01
    745c:	88 2f       	mov	r24, r24
    745e:	90 e0       	ldi	r25, 0x00	; 0
    7460:	80 5b       	subi	r24, 0xB0	; 176
    7462:	9b 4f       	sbci	r25, 0xFB	; 251
    7464:	29 81       	ldd	r18, Y+1	; 0x01
    7466:	22 2f       	mov	r18, r18
    7468:	30 e0       	ldi	r19, 0x00	; 0
    746a:	20 5b       	subi	r18, 0xB0	; 176
    746c:	3b 4f       	sbci	r19, 0xFB	; 251
    746e:	f9 01       	movw	r30, r18
    7470:	20 81       	ld	r18, Z
    7472:	28 60       	ori	r18, 0x08	; 8
    7474:	fc 01       	movw	r30, r24
    7476:	20 83       	st	Z, r18
		break;
    7478:	00 00       	nop
	default:
		break;
	}
}
    747a:	00 00       	nop
    747c:	0f 90       	pop	r0
    747e:	0f 90       	pop	r0
    7480:	df 91       	pop	r29
    7482:	cf 91       	pop	r28
    7484:	08 95       	ret

00007486 <PORTC_set_pin_level>:
 * \param[in] pin       The pin number within port
 * \param[in] level true  = Pin level set to "high" state
 *                  false = Pin level set to "low" state
 */
static inline void PORTC_set_pin_level(const uint8_t pin, const bool level)
{
    7486:	cf 93       	push	r28
    7488:	df 93       	push	r29
    748a:	00 d0       	rcall	.+0      	; 0x748c <PORTC_set_pin_level+0x6>
    748c:	cd b7       	in	r28, 0x3d	; 61
    748e:	de b7       	in	r29, 0x3e	; 62
    7490:	89 83       	std	Y+1, r24	; 0x01
    7492:	6a 83       	std	Y+2, r22	; 0x02
	if (level == true) {
    7494:	8a 81       	ldd	r24, Y+2	; 0x02
    7496:	88 23       	and	r24, r24
    7498:	a9 f0       	breq	.+42     	; 0x74c4 <PORTC_set_pin_level+0x3e>
		VPORTC.OUT |= (1 << pin);
    749a:	88 e0       	ldi	r24, 0x08	; 8
    749c:	90 e0       	ldi	r25, 0x00	; 0
    749e:	28 e0       	ldi	r18, 0x08	; 8
    74a0:	30 e0       	ldi	r19, 0x00	; 0
    74a2:	f9 01       	movw	r30, r18
    74a4:	21 81       	ldd	r18, Z+1	; 0x01
    74a6:	62 2f       	mov	r22, r18
    74a8:	29 81       	ldd	r18, Y+1	; 0x01
    74aa:	42 2f       	mov	r20, r18
    74ac:	50 e0       	ldi	r21, 0x00	; 0
    74ae:	21 e0       	ldi	r18, 0x01	; 1
    74b0:	30 e0       	ldi	r19, 0x00	; 0
    74b2:	02 c0       	rjmp	.+4      	; 0x74b8 <PORTC_set_pin_level+0x32>
    74b4:	22 0f       	add	r18, r18
    74b6:	33 1f       	adc	r19, r19
    74b8:	4a 95       	dec	r20
    74ba:	e2 f7       	brpl	.-8      	; 0x74b4 <PORTC_set_pin_level+0x2e>
    74bc:	26 2b       	or	r18, r22
    74be:	fc 01       	movw	r30, r24
    74c0:	21 83       	std	Z+1, r18	; 0x01
	} else {
		VPORTC.OUT &= ~(1 << pin);
	}
}
    74c2:	15 c0       	rjmp	.+42     	; 0x74ee <PORTC_set_pin_level+0x68>
static inline void PORTC_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTC.OUT |= (1 << pin);
	} else {
		VPORTC.OUT &= ~(1 << pin);
    74c4:	88 e0       	ldi	r24, 0x08	; 8
    74c6:	90 e0       	ldi	r25, 0x00	; 0
    74c8:	28 e0       	ldi	r18, 0x08	; 8
    74ca:	30 e0       	ldi	r19, 0x00	; 0
    74cc:	f9 01       	movw	r30, r18
    74ce:	21 81       	ldd	r18, Z+1	; 0x01
    74d0:	62 2f       	mov	r22, r18
    74d2:	29 81       	ldd	r18, Y+1	; 0x01
    74d4:	42 2f       	mov	r20, r18
    74d6:	50 e0       	ldi	r21, 0x00	; 0
    74d8:	21 e0       	ldi	r18, 0x01	; 1
    74da:	30 e0       	ldi	r19, 0x00	; 0
    74dc:	02 c0       	rjmp	.+4      	; 0x74e2 <PORTC_set_pin_level+0x5c>
    74de:	22 0f       	add	r18, r18
    74e0:	33 1f       	adc	r19, r19
    74e2:	4a 95       	dec	r20
    74e4:	e2 f7       	brpl	.-8      	; 0x74de <PORTC_set_pin_level+0x58>
    74e6:	20 95       	com	r18
    74e8:	26 23       	and	r18, r22
    74ea:	fc 01       	movw	r30, r24
    74ec:	21 83       	std	Z+1, r18	; 0x01
	}
}
    74ee:	00 00       	nop
    74f0:	0f 90       	pop	r0
    74f2:	0f 90       	pop	r0
    74f4:	df 91       	pop	r29
    74f6:	cf 91       	pop	r28
    74f8:	08 95       	ret

000074fa <_ZL15LED_set_RED_dir8port_dir>:
 *                      PORT_DIR_OUT = Data direction out
 *                      PORT_DIR_OFF = Disables the pin
 *                      (low power state)
 */
static inline void LED_set_RED_dir(const enum port_dir dir)
{
    74fa:	cf 93       	push	r28
    74fc:	df 93       	push	r29
    74fe:	1f 92       	push	r1
    7500:	cd b7       	in	r28, 0x3d	; 61
    7502:	de b7       	in	r29, 0x3e	; 62
    7504:	89 83       	std	Y+1, r24	; 0x01
	PORTC_set_pin_dir(6, dir);
    7506:	69 81       	ldd	r22, Y+1	; 0x01
    7508:	86 e0       	ldi	r24, 0x06	; 6
    750a:	0e 94 ef 39 	call	0x73de	; 0x73de <PORTC_set_pin_dir>
}
    750e:	00 00       	nop
    7510:	0f 90       	pop	r0
    7512:	df 91       	pop	r29
    7514:	cf 91       	pop	r28
    7516:	08 95       	ret

00007518 <_ZL17LED_set_GREEN_dir8port_dir>:
 *                      PORT_DIR_OUT = Data direction out
 *                      PORT_DIR_OFF = Disables the pin
 *                      (low power state)
 */
static inline void LED_set_GREEN_dir(const enum port_dir dir)
{
    7518:	cf 93       	push	r28
    751a:	df 93       	push	r29
    751c:	1f 92       	push	r1
    751e:	cd b7       	in	r28, 0x3d	; 61
    7520:	de b7       	in	r29, 0x3e	; 62
    7522:	89 83       	std	Y+1, r24	; 0x01
	PORTC_set_pin_dir(5, dir);
    7524:	69 81       	ldd	r22, Y+1	; 0x01
    7526:	85 e0       	ldi	r24, 0x05	; 5
    7528:	0e 94 ef 39 	call	0x73de	; 0x73de <PORTC_set_pin_dir>
}
    752c:	00 00       	nop
    752e:	0f 90       	pop	r0
    7530:	df 91       	pop	r29
    7532:	cf 91       	pop	r28
    7534:	08 95       	ret

00007536 <_ZL17LED_set_RED_levelb>:
 *
 * \param[in] level true  = Pin level set to "high" state
 *                  false = Pin level set to "low" state
 */
static inline void LED_set_RED_level(const bool level)
{
    7536:	cf 93       	push	r28
    7538:	df 93       	push	r29
    753a:	1f 92       	push	r1
    753c:	cd b7       	in	r28, 0x3d	; 61
    753e:	de b7       	in	r29, 0x3e	; 62
    7540:	89 83       	std	Y+1, r24	; 0x01
	PORTC_set_pin_level(6, level); /* Low == LED off */
    7542:	69 81       	ldd	r22, Y+1	; 0x01
    7544:	86 e0       	ldi	r24, 0x06	; 6
    7546:	0e 94 43 3a 	call	0x7486	; 0x7486 <PORTC_set_pin_level>
}
    754a:	00 00       	nop
    754c:	0f 90       	pop	r0
    754e:	df 91       	pop	r29
    7550:	cf 91       	pop	r28
    7552:	08 95       	ret

00007554 <_ZL19LED_set_GREEN_levelb>:
 *
 * \param[in] level true  = Pin level set to "high" state
 *                  false = Pin level set to "low" state
 */
static inline void LED_set_GREEN_level(const bool level)
{
    7554:	cf 93       	push	r28
    7556:	df 93       	push	r29
    7558:	1f 92       	push	r1
    755a:	cd b7       	in	r28, 0x3d	; 61
    755c:	de b7       	in	r29, 0x3e	; 62
    755e:	89 83       	std	Y+1, r24	; 0x01
	PORTC_set_pin_level(5, level); /* Low == LED off */
    7560:	69 81       	ldd	r22, Y+1	; 0x01
    7562:	85 e0       	ldi	r24, 0x05	; 5
    7564:	0e 94 43 3a 	call	0x7486	; 0x7486 <PORTC_set_pin_level>
}
    7568:	00 00       	nop
    756a:	0f 90       	pop	r0
    756c:	df 91       	pop	r29
    756e:	cf 91       	pop	r28
    7570:	08 95       	ret

00007572 <mcu_init>:
#ifdef __cplusplus
extern "C" {
#endif

void mcu_init(void)
{
    7572:	cf 93       	push	r28
    7574:	df 93       	push	r29
    7576:	cd b7       	in	r28, 0x3d	; 61
    7578:	de b7       	in	r29, 0x3e	; 62
    757a:	26 97       	sbiw	r28, 0x06	; 6
    757c:	cd bf       	out	0x3d, r28	; 61
    757e:	de bf       	out	0x3e, r29	; 62
	 * disables all peripherals to save power. Driver shall enable
	 * peripheral if used */

	/* Set all pins to low power mode */

	for (uint8_t i = 0; i < 8; i++) {
    7580:	19 82       	std	Y+1, r1	; 0x01
    7582:	89 81       	ldd	r24, Y+1	; 0x01
    7584:	88 30       	cpi	r24, 0x08	; 8
    7586:	98 f4       	brcc	.+38     	; 0x75ae <mcu_init+0x3c>
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    7588:	89 81       	ldd	r24, Y+1	; 0x01
    758a:	88 2f       	mov	r24, r24
    758c:	90 e0       	ldi	r25, 0x00	; 0
    758e:	80 5f       	subi	r24, 0xF0	; 240
    7590:	9b 4f       	sbci	r25, 0xFB	; 251
    7592:	29 81       	ldd	r18, Y+1	; 0x01
    7594:	22 2f       	mov	r18, r18
    7596:	30 e0       	ldi	r19, 0x00	; 0
    7598:	20 5f       	subi	r18, 0xF0	; 240
    759a:	3b 4f       	sbci	r19, 0xFB	; 251
    759c:	f9 01       	movw	r30, r18
    759e:	20 81       	ld	r18, Z
    75a0:	28 60       	ori	r18, 0x08	; 8
    75a2:	fc 01       	movw	r30, r24
    75a4:	20 83       	st	Z, r18
	 * disables all peripherals to save power. Driver shall enable
	 * peripheral if used */

	/* Set all pins to low power mode */

	for (uint8_t i = 0; i < 8; i++) {
    75a6:	89 81       	ldd	r24, Y+1	; 0x01
    75a8:	8f 5f       	subi	r24, 0xFF	; 255
    75aa:	89 83       	std	Y+1, r24	; 0x01
    75ac:	ea cf       	rjmp	.-44     	; 0x7582 <mcu_init+0x10>
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    75ae:	1a 82       	std	Y+2, r1	; 0x02
    75b0:	8a 81       	ldd	r24, Y+2	; 0x02
    75b2:	88 30       	cpi	r24, 0x08	; 8
    75b4:	98 f4       	brcc	.+38     	; 0x75dc <mcu_init+0x6a>
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    75b6:	8a 81       	ldd	r24, Y+2	; 0x02
    75b8:	88 2f       	mov	r24, r24
    75ba:	90 e0       	ldi	r25, 0x00	; 0
    75bc:	80 5d       	subi	r24, 0xD0	; 208
    75be:	9b 4f       	sbci	r25, 0xFB	; 251
    75c0:	2a 81       	ldd	r18, Y+2	; 0x02
    75c2:	22 2f       	mov	r18, r18
    75c4:	30 e0       	ldi	r19, 0x00	; 0
    75c6:	20 5d       	subi	r18, 0xD0	; 208
    75c8:	3b 4f       	sbci	r19, 0xFB	; 251
    75ca:	f9 01       	movw	r30, r18
    75cc:	20 81       	ld	r18, Z
    75ce:	28 60       	ori	r18, 0x08	; 8
    75d0:	fc 01       	movw	r30, r24
    75d2:	20 83       	st	Z, r18

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    75d4:	8a 81       	ldd	r24, Y+2	; 0x02
    75d6:	8f 5f       	subi	r24, 0xFF	; 255
    75d8:	8a 83       	std	Y+2, r24	; 0x02
    75da:	ea cf       	rjmp	.-44     	; 0x75b0 <mcu_init+0x3e>
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    75dc:	1b 82       	std	Y+3, r1	; 0x03
    75de:	8b 81       	ldd	r24, Y+3	; 0x03
    75e0:	88 30       	cpi	r24, 0x08	; 8
    75e2:	98 f4       	brcc	.+38     	; 0x760a <mcu_init+0x98>
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    75e4:	8b 81       	ldd	r24, Y+3	; 0x03
    75e6:	88 2f       	mov	r24, r24
    75e8:	90 e0       	ldi	r25, 0x00	; 0
    75ea:	80 5b       	subi	r24, 0xB0	; 176
    75ec:	9b 4f       	sbci	r25, 0xFB	; 251
    75ee:	2b 81       	ldd	r18, Y+3	; 0x03
    75f0:	22 2f       	mov	r18, r18
    75f2:	30 e0       	ldi	r19, 0x00	; 0
    75f4:	20 5b       	subi	r18, 0xB0	; 176
    75f6:	3b 4f       	sbci	r19, 0xFB	; 251
    75f8:	f9 01       	movw	r30, r18
    75fa:	20 81       	ld	r18, Z
    75fc:	28 60       	ori	r18, 0x08	; 8
    75fe:	fc 01       	movw	r30, r24
    7600:	20 83       	st	Z, r18

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    7602:	8b 81       	ldd	r24, Y+3	; 0x03
    7604:	8f 5f       	subi	r24, 0xFF	; 255
    7606:	8b 83       	std	Y+3, r24	; 0x03
    7608:	ea cf       	rjmp	.-44     	; 0x75de <mcu_init+0x6c>
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    760a:	1c 82       	std	Y+4, r1	; 0x04
    760c:	8c 81       	ldd	r24, Y+4	; 0x04
    760e:	88 30       	cpi	r24, 0x08	; 8
    7610:	98 f4       	brcc	.+38     	; 0x7638 <mcu_init+0xc6>
		*((uint8_t *)&PORTD + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    7612:	8c 81       	ldd	r24, Y+4	; 0x04
    7614:	88 2f       	mov	r24, r24
    7616:	90 e0       	ldi	r25, 0x00	; 0
    7618:	80 59       	subi	r24, 0x90	; 144
    761a:	9b 4f       	sbci	r25, 0xFB	; 251
    761c:	2c 81       	ldd	r18, Y+4	; 0x04
    761e:	22 2f       	mov	r18, r18
    7620:	30 e0       	ldi	r19, 0x00	; 0
    7622:	20 59       	subi	r18, 0x90	; 144
    7624:	3b 4f       	sbci	r19, 0xFB	; 251
    7626:	f9 01       	movw	r30, r18
    7628:	20 81       	ld	r18, Z
    762a:	28 60       	ori	r18, 0x08	; 8
    762c:	fc 01       	movw	r30, r24
    762e:	20 83       	st	Z, r18

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    7630:	8c 81       	ldd	r24, Y+4	; 0x04
    7632:	8f 5f       	subi	r24, 0xFF	; 255
    7634:	8c 83       	std	Y+4, r24	; 0x04
    7636:	ea cf       	rjmp	.-44     	; 0x760c <mcu_init+0x9a>
		*((uint8_t *)&PORTD + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    7638:	1d 82       	std	Y+5, r1	; 0x05
    763a:	8d 81       	ldd	r24, Y+5	; 0x05
    763c:	88 30       	cpi	r24, 0x08	; 8
    763e:	98 f4       	brcc	.+38     	; 0x7666 <mcu_init+0xf4>
		*((uint8_t *)&PORTE + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    7640:	8d 81       	ldd	r24, Y+5	; 0x05
    7642:	88 2f       	mov	r24, r24
    7644:	90 e0       	ldi	r25, 0x00	; 0
    7646:	80 57       	subi	r24, 0x70	; 112
    7648:	9b 4f       	sbci	r25, 0xFB	; 251
    764a:	2d 81       	ldd	r18, Y+5	; 0x05
    764c:	22 2f       	mov	r18, r18
    764e:	30 e0       	ldi	r19, 0x00	; 0
    7650:	20 57       	subi	r18, 0x70	; 112
    7652:	3b 4f       	sbci	r19, 0xFB	; 251
    7654:	f9 01       	movw	r30, r18
    7656:	20 81       	ld	r18, Z
    7658:	28 60       	ori	r18, 0x08	; 8
    765a:	fc 01       	movw	r30, r24
    765c:	20 83       	st	Z, r18

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTD + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    765e:	8d 81       	ldd	r24, Y+5	; 0x05
    7660:	8f 5f       	subi	r24, 0xFF	; 255
    7662:	8d 83       	std	Y+5, r24	; 0x05
    7664:	ea cf       	rjmp	.-44     	; 0x763a <mcu_init+0xc8>
		*((uint8_t *)&PORTE + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    7666:	1e 82       	std	Y+6, r1	; 0x06
    7668:	8e 81       	ldd	r24, Y+6	; 0x06
    766a:	88 30       	cpi	r24, 0x08	; 8
    766c:	98 f4       	brcc	.+38     	; 0x7694 <mcu_init+0x122>
		*((uint8_t *)&PORTF + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    766e:	8e 81       	ldd	r24, Y+6	; 0x06
    7670:	88 2f       	mov	r24, r24
    7672:	90 e0       	ldi	r25, 0x00	; 0
    7674:	80 55       	subi	r24, 0x50	; 80
    7676:	9b 4f       	sbci	r25, 0xFB	; 251
    7678:	2e 81       	ldd	r18, Y+6	; 0x06
    767a:	22 2f       	mov	r18, r18
    767c:	30 e0       	ldi	r19, 0x00	; 0
    767e:	20 55       	subi	r18, 0x50	; 80
    7680:	3b 4f       	sbci	r19, 0xFB	; 251
    7682:	f9 01       	movw	r30, r18
    7684:	20 81       	ld	r18, Z
    7686:	28 60       	ori	r18, 0x08	; 8
    7688:	fc 01       	movw	r30, r24
    768a:	20 83       	st	Z, r18

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTE + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    768c:	8e 81       	ldd	r24, Y+6	; 0x06
    768e:	8f 5f       	subi	r24, 0xFF	; 255
    7690:	8e 83       	std	Y+6, r24	; 0x06
    7692:	ea cf       	rjmp	.-44     	; 0x7668 <mcu_init+0xf6>
		*((uint8_t *)&PORTF + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}
}
    7694:	00 00       	nop
    7696:	26 96       	adiw	r28, 0x06	; 6
    7698:	cd bf       	out	0x3d, r28	; 61
    769a:	de bf       	out	0x3e, r29	; 62
    769c:	df 91       	pop	r29
    769e:	cf 91       	pop	r28
    76a0:	08 95       	ret

000076a2 <system_init>:

/**
 * \brief System initialization
 */
void system_init()
{
    76a2:	cf 93       	push	r28
    76a4:	df 93       	push	r29
    76a6:	cd b7       	in	r28, 0x3d	; 61
    76a8:	de b7       	in	r29, 0x3e	; 62
	mcu_init();
    76aa:	0e 94 b9 3a 	call	0x7572	; 0x7572 <mcu_init>

	CLKCTRL_init(); /* Set CPU clock speed appropriately */
    76ae:	0e 94 75 39 	call	0x72ea	; 0x72ea <CLKCTRL_init>
	TIMERB_init(); /* Timers must be initialized before utility_delay functions will work */
    76b2:	0e 94 d4 65 	call	0xcba8	; 0xcba8 <TIMERB_init>
	CPUINT_init(); /* Interrupts must also be enabled before timer interrupts will function */
    76b6:	0e 94 82 39 	call	0x7304	; 0x7304 <CPUINT_init>
	BINIO_init();
    76ba:	0e 94 91 38 	call	0x7122	; 0x7122 <_Z10BINIO_initv>

	LED_set_RED_dir(PORT_DIR_OUT);
    76be:	81 e0       	ldi	r24, 0x01	; 1
    76c0:	0e 94 7d 3a 	call	0x74fa	; 0x74fa <_ZL15LED_set_RED_dir8port_dir>
	LED_set_RED_level(OFF);
    76c4:	80 e0       	ldi	r24, 0x00	; 0
    76c6:	0e 94 9b 3a 	call	0x7536	; 0x7536 <_ZL17LED_set_RED_levelb>
	LED_set_GREEN_dir(PORT_DIR_OUT);
    76ca:	81 e0       	ldi	r24, 0x01	; 1
    76cc:	0e 94 8c 3a 	call	0x7518	; 0x7518 <_ZL17LED_set_GREEN_dir8port_dir>
	LED_set_GREEN_level(OFF);
    76d0:	80 e0       	ldi	r24, 0x00	; 0
    76d2:	0e 94 aa 3a 	call	0x7554	; 0x7554 <_ZL19LED_set_GREEN_levelb>

	SLPCTRL_init();
    76d6:	0e 94 cc 65 	call	0xcb98	; 0xcb98 <SLPCTRL_init>
	
	DAC0_init();
    76da:	0e 94 a1 39 	call	0x7342	; 0x7342 <_Z9DAC0_initv>

	linkbus_init(LB_BAUD, LINKBUS_USART);
    76de:	44 e0       	ldi	r20, 0x04	; 4
    76e0:	60 e8       	ldi	r22, 0x80	; 128
    76e2:	75 e2       	ldi	r23, 0x25	; 37
    76e4:	80 e0       	ldi	r24, 0x00	; 0
    76e6:	90 e0       	ldi	r25, 0x00	; 0
    76e8:	0e 94 5d 51 	call	0xa2ba	; 0xa2ba <_Z12linkbus_initm14USART_Number_t>
	serialbus_init(SB_BAUD, SERIALBUS_USART);
    76ec:	41 e0       	ldi	r20, 0x01	; 1
    76ee:	60 e8       	ldi	r22, 0x80	; 128
    76f0:	75 e2       	ldi	r23, 0x25	; 37
    76f2:	80 e0       	ldi	r24, 0x00	; 0
    76f4:	90 e0       	ldi	r25, 0x00	; 0
    76f6:	0e 94 10 5a 	call	0xb420	; 0xb420 <serialbus_init>

	BOD_init();
    76fa:	0e 94 53 39 	call	0x72a6	; 0x72a6 <BOD_init>
}
    76fe:	00 00       	nop
    7700:	df 91       	pop	r29
    7702:	cf 91       	pop	r28
    7704:	08 95       	ret

00007706 <ds3231_init>:
				*val = second + 10 * second10 + 60 * (int32_t)minute + 600 * (int32_t)minute10 +  3600 * (int32_t)hour + 36000 * (int32_t)hour10;
			}
		}
		
		return(failure);
	}
    7706:	cf 93       	push	r28
    7708:	df 93       	push	r29
    770a:	cd b7       	in	r28, 0x3d	; 61
    770c:	de b7       	in	r29, 0x3e	; 62
    770e:	0e 94 e3 49 	call	0x93c6	; 0x93c6 <I2C_0_Init>
    7712:	0e 94 01 42 	call	0x8402	; 0x8402 <ds3231_responding>
    7716:	98 2f       	mov	r25, r24
    7718:	81 e0       	ldi	r24, 0x01	; 1
    771a:	89 27       	eor	r24, r25
    771c:	df 91       	pop	r29
    771e:	cf 91       	pop	r28
    7720:	08 95       	ret

00007722 <_Z7bcd2dech>:
    7722:	cf 93       	push	r28
    7724:	df 93       	push	r29
    7726:	00 d0       	rcall	.+0      	; 0x7728 <_Z7bcd2dech+0x6>
    7728:	cd b7       	in	r28, 0x3d	; 61
    772a:	de b7       	in	r29, 0x3e	; 62
    772c:	8a 83       	std	Y+2, r24	; 0x02
    772e:	8a 81       	ldd	r24, Y+2	; 0x02
    7730:	88 2f       	mov	r24, r24
    7732:	90 e0       	ldi	r25, 0x00	; 0
    7734:	95 95       	asr	r25
    7736:	87 95       	ror	r24
    7738:	95 95       	asr	r25
    773a:	87 95       	ror	r24
    773c:	95 95       	asr	r25
    773e:	87 95       	ror	r24
    7740:	95 95       	asr	r25
    7742:	87 95       	ror	r24
    7744:	88 0f       	add	r24, r24
    7746:	98 2f       	mov	r25, r24
    7748:	99 0f       	add	r25, r25
    774a:	99 0f       	add	r25, r25
    774c:	98 0f       	add	r25, r24
    774e:	8a 81       	ldd	r24, Y+2	; 0x02
    7750:	8f 70       	andi	r24, 0x0F	; 15
    7752:	89 0f       	add	r24, r25
    7754:	89 83       	std	Y+1, r24	; 0x01
    7756:	89 81       	ldd	r24, Y+1	; 0x01
    7758:	0f 90       	pop	r0
    775a:	0f 90       	pop	r0
    775c:	df 91       	pop	r29
    775e:	cf 91       	pop	r28
    7760:	08 95       	ret

00007762 <_Z7dec2bcdh>:
    7762:	cf 93       	push	r28
    7764:	df 93       	push	r29
    7766:	00 d0       	rcall	.+0      	; 0x7768 <_Z7dec2bcdh+0x6>
    7768:	cd b7       	in	r28, 0x3d	; 61
    776a:	de b7       	in	r29, 0x3e	; 62
    776c:	8a 83       	std	Y+2, r24	; 0x02
    776e:	9a 81       	ldd	r25, Y+2	; 0x02
    7770:	8d ec       	ldi	r24, 0xCD	; 205
    7772:	98 9f       	mul	r25, r24
    7774:	81 2d       	mov	r24, r1
    7776:	11 24       	eor	r1, r1
    7778:	86 95       	lsr	r24
    777a:	86 95       	lsr	r24
    777c:	86 95       	lsr	r24
    777e:	88 0f       	add	r24, r24
    7780:	28 2f       	mov	r18, r24
    7782:	22 0f       	add	r18, r18
    7784:	22 0f       	add	r18, r18
    7786:	82 0f       	add	r24, r18
    7788:	29 2f       	mov	r18, r25
    778a:	28 1b       	sub	r18, r24
    778c:	82 2f       	mov	r24, r18
    778e:	89 83       	std	Y+1, r24	; 0x01
    7790:	9a 81       	ldd	r25, Y+2	; 0x02
    7792:	8d ec       	ldi	r24, 0xCD	; 205
    7794:	98 9f       	mul	r25, r24
    7796:	81 2d       	mov	r24, r1
    7798:	11 24       	eor	r1, r1
    779a:	86 95       	lsr	r24
    779c:	86 95       	lsr	r24
    779e:	86 95       	lsr	r24
    77a0:	88 2f       	mov	r24, r24
    77a2:	90 e0       	ldi	r25, 0x00	; 0
    77a4:	82 95       	swap	r24
    77a6:	92 95       	swap	r25
    77a8:	90 7f       	andi	r25, 0xF0	; 240
    77aa:	98 27       	eor	r25, r24
    77ac:	80 7f       	andi	r24, 0xF0	; 240
    77ae:	98 27       	eor	r25, r24
    77b0:	98 2f       	mov	r25, r24
    77b2:	89 81       	ldd	r24, Y+1	; 0x01
    77b4:	89 2b       	or	r24, r25
    77b6:	89 83       	std	Y+1, r24	; 0x01
    77b8:	89 81       	ldd	r24, Y+1	; 0x01
    77ba:	0f 90       	pop	r0
    77bc:	0f 90       	pop	r0
    77be:	df 91       	pop	r29
    77c0:	cf 91       	pop	r28
    77c2:	08 95       	ret

000077c4 <_Z8char2bcdPc>:
    77c4:	cf 93       	push	r28
    77c6:	df 93       	push	r29
    77c8:	00 d0       	rcall	.+0      	; 0x77ca <_Z8char2bcdPc+0x6>
    77ca:	1f 92       	push	r1
    77cc:	cd b7       	in	r28, 0x3d	; 61
    77ce:	de b7       	in	r29, 0x3e	; 62
    77d0:	8a 83       	std	Y+2, r24	; 0x02
    77d2:	9b 83       	std	Y+3, r25	; 0x03
    77d4:	8a 81       	ldd	r24, Y+2	; 0x02
    77d6:	9b 81       	ldd	r25, Y+3	; 0x03
    77d8:	01 96       	adiw	r24, 0x01	; 1
    77da:	fc 01       	movw	r30, r24
    77dc:	20 81       	ld	r18, Z
    77de:	8a 81       	ldd	r24, Y+2	; 0x02
    77e0:	9b 81       	ldd	r25, Y+3	; 0x03
    77e2:	fc 01       	movw	r30, r24
    77e4:	80 81       	ld	r24, Z
    77e6:	80 53       	subi	r24, 0x30	; 48
    77e8:	82 95       	swap	r24
    77ea:	80 7f       	andi	r24, 0xF0	; 240
    77ec:	82 0f       	add	r24, r18
    77ee:	80 53       	subi	r24, 0x30	; 48
    77f0:	89 83       	std	Y+1, r24	; 0x01
    77f2:	89 81       	ldd	r24, Y+1	; 0x01
    77f4:	23 96       	adiw	r28, 0x03	; 3
    77f6:	cd bf       	out	0x3d, r28	; 61
    77f8:	de bf       	out	0x3e, r29	; 62
    77fa:	df 91       	pop	r29
    77fc:	cf 91       	pop	r28
    77fe:	08 95       	ret

00007800 <RTC_String2Epoch>:
    7800:	cf 93       	push	r28
    7802:	df 93       	push	r29
    7804:	cd b7       	in	r28, 0x3d	; 61
    7806:	de b7       	in	r29, 0x3e	; 62
    7808:	a3 97       	sbiw	r28, 0x23	; 35
    780a:	cd bf       	out	0x3d, r28	; 61
    780c:	de bf       	out	0x3e, r29	; 62
    780e:	88 a3       	std	Y+32, r24	; 0x20
    7810:	99 a3       	std	Y+33, r25	; 0x21
    7812:	6a a3       	std	Y+34, r22	; 0x22
    7814:	7b a3       	std	Y+35, r23	; 0x23
    7816:	19 82       	std	Y+1, r1	; 0x01
    7818:	1a 82       	std	Y+2, r1	; 0x02
    781a:	1b 82       	std	Y+3, r1	; 0x03
    781c:	1c 82       	std	Y+4, r1	; 0x04
    781e:	27 e0       	ldi	r18, 0x07	; 7
    7820:	ce 01       	movw	r24, r28
    7822:	0d 96       	adiw	r24, 0x0d	; 13
    7824:	fc 01       	movw	r30, r24
    7826:	32 2f       	mov	r19, r18
    7828:	11 92       	st	Z+, r1
    782a:	3a 95       	dec	r19
    782c:	e9 f7       	brne	.-6      	; 0x7828 <RTC_String2Epoch+0x28>
    782e:	2c e0       	ldi	r18, 0x0C	; 12
    7830:	ce 01       	movw	r24, r28
    7832:	44 96       	adiw	r24, 0x14	; 20
    7834:	fc 01       	movw	r30, r24
    7836:	32 2f       	mov	r19, r18
    7838:	11 92       	st	Z+, r1
    783a:	3a 95       	dec	r19
    783c:	e9 f7       	brne	.-6      	; 0x7838 <RTC_String2Epoch+0x38>
    783e:	84 e6       	ldi	r24, 0x64	; 100
    7840:	90 e0       	ldi	r25, 0x00	; 0
    7842:	8e 83       	std	Y+6, r24	; 0x06
    7844:	9f 83       	std	Y+7, r25	; 0x07
    7846:	8a a1       	ldd	r24, Y+34	; 0x22
    7848:	9b a1       	ldd	r25, Y+35	; 0x23
    784a:	89 2b       	or	r24, r25
    784c:	09 f4       	brne	.+2      	; 0x7850 <RTC_String2Epoch+0x50>
    784e:	86 c0       	rjmp	.+268    	; 0x795c <RTC_String2Epoch+0x15c>
    7850:	8a a1       	ldd	r24, Y+34	; 0x22
    7852:	9b a1       	ldd	r25, Y+35	; 0x23
    7854:	0a 96       	adiw	r24, 0x0a	; 10
    7856:	0e 94 e2 3b 	call	0x77c4	; 0x77c4 <_Z8char2bcdPc>
    785a:	8d 87       	std	Y+13, r24	; 0x0d
    785c:	8a a1       	ldd	r24, Y+34	; 0x22
    785e:	9b a1       	ldd	r25, Y+35	; 0x23
    7860:	08 96       	adiw	r24, 0x08	; 8
    7862:	0e 94 e2 3b 	call	0x77c4	; 0x77c4 <_Z8char2bcdPc>
    7866:	8e 87       	std	Y+14, r24	; 0x0e
    7868:	8a a1       	ldd	r24, Y+34	; 0x22
    786a:	9b a1       	ldd	r25, Y+35	; 0x23
    786c:	06 96       	adiw	r24, 0x06	; 6
    786e:	0e 94 e2 3b 	call	0x77c4	; 0x77c4 <_Z8char2bcdPc>
    7872:	8f 87       	std	Y+15, r24	; 0x0f
    7874:	8a a1       	ldd	r24, Y+34	; 0x22
    7876:	9b a1       	ldd	r25, Y+35	; 0x23
    7878:	04 96       	adiw	r24, 0x04	; 4
    787a:	0e 94 e2 3b 	call	0x77c4	; 0x77c4 <_Z8char2bcdPc>
    787e:	89 8b       	std	Y+17, r24	; 0x11
    7880:	8a a1       	ldd	r24, Y+34	; 0x22
    7882:	9b a1       	ldd	r25, Y+35	; 0x23
    7884:	02 96       	adiw	r24, 0x02	; 2
    7886:	0e 94 e2 3b 	call	0x77c4	; 0x77c4 <_Z8char2bcdPc>
    788a:	8a 8b       	std	Y+18, r24	; 0x12
    788c:	8a a1       	ldd	r24, Y+34	; 0x22
    788e:	9b a1       	ldd	r25, Y+35	; 0x23
    7890:	0e 94 e2 3b 	call	0x77c4	; 0x77c4 <_Z8char2bcdPc>
    7894:	8b 8b       	std	Y+19, r24	; 0x13
    7896:	8f 85       	ldd	r24, Y+15	; 0x0f
    7898:	0e 94 91 3b 	call	0x7722	; 0x7722 <_Z7bcd2dech>
    789c:	88 87       	std	Y+8, r24	; 0x08
    789e:	8b 89       	ldd	r24, Y+19	; 0x13
    78a0:	0e 94 91 3b 	call	0x7722	; 0x7722 <_Z7bcd2dech>
    78a4:	88 2f       	mov	r24, r24
    78a6:	90 e0       	ldi	r25, 0x00	; 0
    78a8:	2e 81       	ldd	r18, Y+6	; 0x06
    78aa:	3f 81       	ldd	r19, Y+7	; 0x07
    78ac:	82 0f       	add	r24, r18
    78ae:	93 1f       	adc	r25, r19
    78b0:	8e 83       	std	Y+6, r24	; 0x06
    78b2:	9f 83       	std	Y+7, r25	; 0x07
    78b4:	8e 81       	ldd	r24, Y+6	; 0x06
    78b6:	9f 81       	ldd	r25, Y+7	; 0x07
    78b8:	8a 8f       	std	Y+26, r24	; 0x1a
    78ba:	9b 8f       	std	Y+27, r25	; 0x1b
    78bc:	8e 81       	ldd	r24, Y+6	; 0x06
    78be:	9f 81       	ldd	r25, Y+7	; 0x07
    78c0:	84 59       	subi	r24, 0x94	; 148
    78c2:	98 4f       	sbci	r25, 0xF8	; 248
    78c4:	8e 83       	std	Y+6, r24	; 0x06
    78c6:	9f 83       	std	Y+7, r25	; 0x07
    78c8:	8a 89       	ldd	r24, Y+18	; 0x12
    78ca:	0e 94 91 3b 	call	0x7722	; 0x7722 <_Z7bcd2dech>
    78ce:	89 87       	std	Y+9, r24	; 0x09
    78d0:	89 85       	ldd	r24, Y+9	; 0x09
    78d2:	81 50       	subi	r24, 0x01	; 1
    78d4:	89 8f       	std	Y+25, r24	; 0x19
    78d6:	89 89       	ldd	r24, Y+17	; 0x11
    78d8:	0e 94 91 3b 	call	0x7722	; 0x7722 <_Z7bcd2dech>
    78dc:	8a 87       	std	Y+10, r24	; 0x0a
    78de:	8a 85       	ldd	r24, Y+10	; 0x0a
    78e0:	8f 8b       	std	Y+23, r24	; 0x17
    78e2:	1c 8e       	std	Y+28, r1	; 0x1c
    78e4:	1d 8e       	std	Y+29, r1	; 0x1d
    78e6:	81 e0       	ldi	r24, 0x01	; 1
    78e8:	8d 83       	std	Y+5, r24	; 0x05
    78ea:	9d 81       	ldd	r25, Y+5	; 0x05
    78ec:	89 85       	ldd	r24, Y+9	; 0x09
    78ee:	98 17       	cp	r25, r24
    78f0:	88 f4       	brcc	.+34     	; 0x7914 <RTC_String2Epoch+0x114>
    78f2:	8e 81       	ldd	r24, Y+6	; 0x06
    78f4:	9f 81       	ldd	r25, Y+7	; 0x07
    78f6:	6d 81       	ldd	r22, Y+5	; 0x05
    78f8:	0e 94 47 02 	call	0x48e	; 0x48e <month_length>
    78fc:	2c 8d       	ldd	r18, Y+28	; 0x1c
    78fe:	3d 8d       	ldd	r19, Y+29	; 0x1d
    7900:	88 2f       	mov	r24, r24
    7902:	90 e0       	ldi	r25, 0x00	; 0
    7904:	82 0f       	add	r24, r18
    7906:	93 1f       	adc	r25, r19
    7908:	8c 8f       	std	Y+28, r24	; 0x1c
    790a:	9d 8f       	std	Y+29, r25	; 0x1d
    790c:	8d 81       	ldd	r24, Y+5	; 0x05
    790e:	8f 5f       	subi	r24, 0xFF	; 255
    7910:	8d 83       	std	Y+5, r24	; 0x05
    7912:	eb cf       	rjmp	.-42     	; 0x78ea <RTC_String2Epoch+0xea>
    7914:	2c 8d       	ldd	r18, Y+28	; 0x1c
    7916:	3d 8d       	ldd	r19, Y+29	; 0x1d
    7918:	8f 89       	ldd	r24, Y+23	; 0x17
    791a:	08 2e       	mov	r0, r24
    791c:	00 0c       	add	r0, r0
    791e:	99 0b       	sbc	r25, r25
    7920:	01 97       	sbiw	r24, 0x01	; 1
    7922:	82 0f       	add	r24, r18
    7924:	93 1f       	adc	r25, r19
    7926:	8c 8f       	std	Y+28, r24	; 0x1c
    7928:	9d 8f       	std	Y+29, r25	; 0x1d
    792a:	8d 85       	ldd	r24, Y+13	; 0x0d
    792c:	0e 94 91 3b 	call	0x7722	; 0x7722 <_Z7bcd2dech>
    7930:	8b 87       	std	Y+11, r24	; 0x0b
    7932:	8e 85       	ldd	r24, Y+14	; 0x0e
    7934:	0e 94 91 3b 	call	0x7722	; 0x7722 <_Z7bcd2dech>
    7938:	8c 87       	std	Y+12, r24	; 0x0c
    793a:	88 85       	ldd	r24, Y+8	; 0x08
    793c:	8e 8b       	std	Y+22, r24	; 0x16
    793e:	8c 85       	ldd	r24, Y+12	; 0x0c
    7940:	8d 8b       	std	Y+21, r24	; 0x15
    7942:	8b 85       	ldd	r24, Y+11	; 0x0b
    7944:	8c 8b       	std	Y+20, r24	; 0x14
    7946:	ce 01       	movw	r24, r28
    7948:	44 96       	adiw	r24, 0x14	; 20
    794a:	0e 94 d6 3c 	call	0x79ac	; 0x79ac <_Z14epoch_from_ltmP2tm>
    794e:	dc 01       	movw	r26, r24
    7950:	cb 01       	movw	r24, r22
    7952:	89 83       	std	Y+1, r24	; 0x01
    7954:	9a 83       	std	Y+2, r25	; 0x02
    7956:	ab 83       	std	Y+3, r26	; 0x03
    7958:	bc 83       	std	Y+4, r27	; 0x04
    795a:	0a c0       	rjmp	.+20     	; 0x7970 <RTC_String2Epoch+0x170>
    795c:	80 e0       	ldi	r24, 0x00	; 0
    795e:	90 e0       	ldi	r25, 0x00	; 0
    7960:	0e 94 b2 3d 	call	0x7b64	; 0x7b64 <ds3231_get_epoch>
    7964:	dc 01       	movw	r26, r24
    7966:	cb 01       	movw	r24, r22
    7968:	89 83       	std	Y+1, r24	; 0x01
    796a:	9a 83       	std	Y+2, r25	; 0x02
    796c:	ab 83       	std	Y+3, r26	; 0x03
    796e:	bc 83       	std	Y+4, r27	; 0x04
    7970:	88 a1       	ldd	r24, Y+32	; 0x20
    7972:	99 a1       	ldd	r25, Y+33	; 0x21
    7974:	89 2b       	or	r24, r25
    7976:	71 f0       	breq	.+28     	; 0x7994 <RTC_String2Epoch+0x194>
    7978:	21 e0       	ldi	r18, 0x01	; 1
    797a:	89 81       	ldd	r24, Y+1	; 0x01
    797c:	9a 81       	ldd	r25, Y+2	; 0x02
    797e:	ab 81       	ldd	r26, Y+3	; 0x03
    7980:	bc 81       	ldd	r27, Y+4	; 0x04
    7982:	89 2b       	or	r24, r25
    7984:	8a 2b       	or	r24, r26
    7986:	8b 2b       	or	r24, r27
    7988:	09 f0       	breq	.+2      	; 0x798c <RTC_String2Epoch+0x18c>
    798a:	20 e0       	ldi	r18, 0x00	; 0
    798c:	88 a1       	ldd	r24, Y+32	; 0x20
    798e:	99 a1       	ldd	r25, Y+33	; 0x21
    7990:	fc 01       	movw	r30, r24
    7992:	20 83       	st	Z, r18
    7994:	89 81       	ldd	r24, Y+1	; 0x01
    7996:	9a 81       	ldd	r25, Y+2	; 0x02
    7998:	ab 81       	ldd	r26, Y+3	; 0x03
    799a:	bc 81       	ldd	r27, Y+4	; 0x04
    799c:	bc 01       	movw	r22, r24
    799e:	cd 01       	movw	r24, r26
    79a0:	a3 96       	adiw	r28, 0x23	; 35
    79a2:	cd bf       	out	0x3d, r28	; 61
    79a4:	de bf       	out	0x3e, r29	; 62
    79a6:	df 91       	pop	r29
    79a8:	cf 91       	pop	r28
    79aa:	08 95       	ret

000079ac <_Z14epoch_from_ltmP2tm>:
    79ac:	ef 92       	push	r14
    79ae:	ff 92       	push	r15
    79b0:	0f 93       	push	r16
    79b2:	1f 93       	push	r17
    79b4:	cf 93       	push	r28
    79b6:	df 93       	push	r29
    79b8:	cd b7       	in	r28, 0x3d	; 61
    79ba:	de b7       	in	r29, 0x3e	; 62
    79bc:	26 97       	sbiw	r28, 0x06	; 6
    79be:	cd bf       	out	0x3d, r28	; 61
    79c0:	de bf       	out	0x3e, r29	; 62
    79c2:	8d 83       	std	Y+5, r24	; 0x05
    79c4:	9e 83       	std	Y+6, r25	; 0x06
    79c6:	8d 81       	ldd	r24, Y+5	; 0x05
    79c8:	9e 81       	ldd	r25, Y+6	; 0x06
    79ca:	fc 01       	movw	r30, r24
    79cc:	80 81       	ld	r24, Z
    79ce:	28 2f       	mov	r18, r24
    79d0:	88 0f       	add	r24, r24
    79d2:	33 0b       	sbc	r19, r19
    79d4:	8d 81       	ldd	r24, Y+5	; 0x05
    79d6:	9e 81       	ldd	r25, Y+6	; 0x06
    79d8:	fc 01       	movw	r30, r24
    79da:	81 81       	ldd	r24, Z+1	; 0x01
    79dc:	48 2f       	mov	r20, r24
    79de:	88 0f       	add	r24, r24
    79e0:	55 0b       	sbc	r21, r21
    79e2:	6c e3       	ldi	r22, 0x3C	; 60
    79e4:	64 9f       	mul	r22, r20
    79e6:	c0 01       	movw	r24, r0
    79e8:	65 9f       	mul	r22, r21
    79ea:	90 0d       	add	r25, r0
    79ec:	11 24       	eor	r1, r1
    79ee:	82 0f       	add	r24, r18
    79f0:	93 1f       	adc	r25, r19
    79f2:	7c 01       	movw	r14, r24
    79f4:	99 0f       	add	r25, r25
    79f6:	00 0b       	sbc	r16, r16
    79f8:	11 0b       	sbc	r17, r17
    79fa:	8d 81       	ldd	r24, Y+5	; 0x05
    79fc:	9e 81       	ldd	r25, Y+6	; 0x06
    79fe:	fc 01       	movw	r30, r24
    7a00:	82 81       	ldd	r24, Z+2	; 0x02
    7a02:	28 2f       	mov	r18, r24
    7a04:	88 0f       	add	r24, r24
    7a06:	33 0b       	sbc	r19, r19
    7a08:	44 0b       	sbc	r20, r20
    7a0a:	55 0b       	sbc	r21, r21
    7a0c:	80 e1       	ldi	r24, 0x10	; 16
    7a0e:	9e e0       	ldi	r25, 0x0E	; 14
    7a10:	dc 01       	movw	r26, r24
    7a12:	0e 94 5b 72 	call	0xe4b6	; 0xe4b6 <__muluhisi3>
    7a16:	dc 01       	movw	r26, r24
    7a18:	cb 01       	movw	r24, r22
    7a1a:	e8 0e       	add	r14, r24
    7a1c:	f9 1e       	adc	r15, r25
    7a1e:	0a 1f       	adc	r16, r26
    7a20:	1b 1f       	adc	r17, r27
    7a22:	8d 81       	ldd	r24, Y+5	; 0x05
    7a24:	9e 81       	ldd	r25, Y+6	; 0x06
    7a26:	fc 01       	movw	r30, r24
    7a28:	80 85       	ldd	r24, Z+8	; 0x08
    7a2a:	91 85       	ldd	r25, Z+9	; 0x09
    7a2c:	09 2e       	mov	r0, r25
    7a2e:	00 0c       	add	r0, r0
    7a30:	aa 0b       	sbc	r26, r26
    7a32:	bb 0b       	sbc	r27, r27
    7a34:	9c 01       	movw	r18, r24
    7a36:	ad 01       	movw	r20, r26
    7a38:	60 e8       	ldi	r22, 0x80	; 128
    7a3a:	71 e5       	ldi	r23, 0x51	; 81
    7a3c:	81 e0       	ldi	r24, 0x01	; 1
    7a3e:	90 e0       	ldi	r25, 0x00	; 0
    7a40:	0e 94 ca 71 	call	0xe394	; 0xe394 <__mulsi3>
    7a44:	dc 01       	movw	r26, r24
    7a46:	cb 01       	movw	r24, r22
    7a48:	e8 0e       	add	r14, r24
    7a4a:	f9 1e       	adc	r15, r25
    7a4c:	0a 1f       	adc	r16, r26
    7a4e:	1b 1f       	adc	r17, r27
    7a50:	8d 81       	ldd	r24, Y+5	; 0x05
    7a52:	9e 81       	ldd	r25, Y+6	; 0x06
    7a54:	fc 01       	movw	r30, r24
    7a56:	86 81       	ldd	r24, Z+6	; 0x06
    7a58:	97 81       	ldd	r25, Z+7	; 0x07
    7a5a:	86 54       	subi	r24, 0x46	; 70
    7a5c:	91 09       	sbc	r25, r1
    7a5e:	09 2e       	mov	r0, r25
    7a60:	00 0c       	add	r0, r0
    7a62:	aa 0b       	sbc	r26, r26
    7a64:	bb 0b       	sbc	r27, r27
    7a66:	9c 01       	movw	r18, r24
    7a68:	ad 01       	movw	r20, r26
    7a6a:	60 e8       	ldi	r22, 0x80	; 128
    7a6c:	73 e3       	ldi	r23, 0x33	; 51
    7a6e:	81 ee       	ldi	r24, 0xE1	; 225
    7a70:	91 e0       	ldi	r25, 0x01	; 1
    7a72:	0e 94 ca 71 	call	0xe394	; 0xe394 <__mulsi3>
    7a76:	dc 01       	movw	r26, r24
    7a78:	cb 01       	movw	r24, r22
    7a7a:	e8 0e       	add	r14, r24
    7a7c:	f9 1e       	adc	r15, r25
    7a7e:	0a 1f       	adc	r16, r26
    7a80:	1b 1f       	adc	r17, r27
    7a82:	8d 81       	ldd	r24, Y+5	; 0x05
    7a84:	9e 81       	ldd	r25, Y+6	; 0x06
    7a86:	fc 01       	movw	r30, r24
    7a88:	86 81       	ldd	r24, Z+6	; 0x06
    7a8a:	97 81       	ldd	r25, Z+7	; 0x07
    7a8c:	85 54       	subi	r24, 0x45	; 69
    7a8e:	91 09       	sbc	r25, r1
    7a90:	99 23       	and	r25, r25
    7a92:	0c f4       	brge	.+2      	; 0x7a96 <_Z14epoch_from_ltmP2tm+0xea>
    7a94:	03 96       	adiw	r24, 0x03	; 3
    7a96:	95 95       	asr	r25
    7a98:	87 95       	ror	r24
    7a9a:	95 95       	asr	r25
    7a9c:	87 95       	ror	r24
    7a9e:	09 2e       	mov	r0, r25
    7aa0:	00 0c       	add	r0, r0
    7aa2:	aa 0b       	sbc	r26, r26
    7aa4:	bb 0b       	sbc	r27, r27
    7aa6:	9c 01       	movw	r18, r24
    7aa8:	ad 01       	movw	r20, r26
    7aaa:	60 e8       	ldi	r22, 0x80	; 128
    7aac:	71 e5       	ldi	r23, 0x51	; 81
    7aae:	81 e0       	ldi	r24, 0x01	; 1
    7ab0:	90 e0       	ldi	r25, 0x00	; 0
    7ab2:	0e 94 ca 71 	call	0xe394	; 0xe394 <__mulsi3>
    7ab6:	dc 01       	movw	r26, r24
    7ab8:	cb 01       	movw	r24, r22
    7aba:	e8 0e       	add	r14, r24
    7abc:	f9 1e       	adc	r15, r25
    7abe:	0a 1f       	adc	r16, r26
    7ac0:	1b 1f       	adc	r17, r27
    7ac2:	8d 81       	ldd	r24, Y+5	; 0x05
    7ac4:	9e 81       	ldd	r25, Y+6	; 0x06
    7ac6:	fc 01       	movw	r30, r24
    7ac8:	86 81       	ldd	r24, Z+6	; 0x06
    7aca:	97 81       	ldd	r25, Z+7	; 0x07
    7acc:	01 97       	sbiw	r24, 0x01	; 1
    7ace:	24 e6       	ldi	r18, 0x64	; 100
    7ad0:	30 e0       	ldi	r19, 0x00	; 0
    7ad2:	b9 01       	movw	r22, r18
    7ad4:	0e 94 ee 71 	call	0xe3dc	; 0xe3dc <__divmodhi4>
    7ad8:	cb 01       	movw	r24, r22
    7ada:	09 2e       	mov	r0, r25
    7adc:	00 0c       	add	r0, r0
    7ade:	aa 0b       	sbc	r26, r26
    7ae0:	bb 0b       	sbc	r27, r27
    7ae2:	9c 01       	movw	r18, r24
    7ae4:	ad 01       	movw	r20, r26
    7ae6:	60 e8       	ldi	r22, 0x80	; 128
    7ae8:	7e ea       	ldi	r23, 0xAE	; 174
    7aea:	8e ef       	ldi	r24, 0xFE	; 254
    7aec:	9f ef       	ldi	r25, 0xFF	; 255
    7aee:	0e 94 ca 71 	call	0xe394	; 0xe394 <__mulsi3>
    7af2:	dc 01       	movw	r26, r24
    7af4:	cb 01       	movw	r24, r22
    7af6:	e8 0e       	add	r14, r24
    7af8:	f9 1e       	adc	r15, r25
    7afa:	0a 1f       	adc	r16, r26
    7afc:	1b 1f       	adc	r17, r27
    7afe:	8d 81       	ldd	r24, Y+5	; 0x05
    7b00:	9e 81       	ldd	r25, Y+6	; 0x06
    7b02:	fc 01       	movw	r30, r24
    7b04:	86 81       	ldd	r24, Z+6	; 0x06
    7b06:	97 81       	ldd	r25, Z+7	; 0x07
    7b08:	85 5d       	subi	r24, 0xD5	; 213
    7b0a:	9e 4f       	sbci	r25, 0xFE	; 254
    7b0c:	20 e9       	ldi	r18, 0x90	; 144
    7b0e:	31 e0       	ldi	r19, 0x01	; 1
    7b10:	b9 01       	movw	r22, r18
    7b12:	0e 94 ee 71 	call	0xe3dc	; 0xe3dc <__divmodhi4>
    7b16:	cb 01       	movw	r24, r22
    7b18:	09 2e       	mov	r0, r25
    7b1a:	00 0c       	add	r0, r0
    7b1c:	aa 0b       	sbc	r26, r26
    7b1e:	bb 0b       	sbc	r27, r27
    7b20:	9c 01       	movw	r18, r24
    7b22:	ad 01       	movw	r20, r26
    7b24:	60 e8       	ldi	r22, 0x80	; 128
    7b26:	71 e5       	ldi	r23, 0x51	; 81
    7b28:	81 e0       	ldi	r24, 0x01	; 1
    7b2a:	90 e0       	ldi	r25, 0x00	; 0
    7b2c:	0e 94 ca 71 	call	0xe394	; 0xe394 <__mulsi3>
    7b30:	dc 01       	movw	r26, r24
    7b32:	cb 01       	movw	r24, r22
    7b34:	8e 0d       	add	r24, r14
    7b36:	9f 1d       	adc	r25, r15
    7b38:	a0 1f       	adc	r26, r16
    7b3a:	b1 1f       	adc	r27, r17
    7b3c:	89 83       	std	Y+1, r24	; 0x01
    7b3e:	9a 83       	std	Y+2, r25	; 0x02
    7b40:	ab 83       	std	Y+3, r26	; 0x03
    7b42:	bc 83       	std	Y+4, r27	; 0x04
    7b44:	89 81       	ldd	r24, Y+1	; 0x01
    7b46:	9a 81       	ldd	r25, Y+2	; 0x02
    7b48:	ab 81       	ldd	r26, Y+3	; 0x03
    7b4a:	bc 81       	ldd	r27, Y+4	; 0x04
    7b4c:	bc 01       	movw	r22, r24
    7b4e:	cd 01       	movw	r24, r26
    7b50:	26 96       	adiw	r28, 0x06	; 6
    7b52:	cd bf       	out	0x3d, r28	; 61
    7b54:	de bf       	out	0x3e, r29	; 62
    7b56:	df 91       	pop	r29
    7b58:	cf 91       	pop	r28
    7b5a:	1f 91       	pop	r17
    7b5c:	0f 91       	pop	r16
    7b5e:	ff 90       	pop	r15
    7b60:	ef 90       	pop	r14
    7b62:	08 95       	ret

00007b64 <ds3231_get_epoch>:
    7b64:	ef 92       	push	r14
    7b66:	ff 92       	push	r15
    7b68:	0f 93       	push	r16
    7b6a:	1f 93       	push	r17
    7b6c:	cf 93       	push	r28
    7b6e:	df 93       	push	r29
    7b70:	cd b7       	in	r28, 0x3d	; 61
    7b72:	de b7       	in	r29, 0x3e	; 62
    7b74:	a5 97       	sbiw	r28, 0x25	; 37
    7b76:	cd bf       	out	0x3d, r28	; 61
    7b78:	de bf       	out	0x3e, r29	; 62
    7b7a:	8c a3       	std	Y+36, r24	; 0x24
    7b7c:	9d a3       	std	Y+37, r25	; 0x25
    7b7e:	8a e0       	ldi	r24, 0x0A	; 10
    7b80:	89 83       	std	Y+1, r24	; 0x01
    7b82:	1a 82       	std	Y+2, r1	; 0x02
    7b84:	1b 82       	std	Y+3, r1	; 0x03
    7b86:	1c 82       	std	Y+4, r1	; 0x04
    7b88:	1d 82       	std	Y+5, r1	; 0x05
    7b8a:	27 e0       	ldi	r18, 0x07	; 7
    7b8c:	ce 01       	movw	r24, r28
    7b8e:	41 96       	adiw	r24, 0x11	; 17
    7b90:	fc 01       	movw	r30, r24
    7b92:	32 2f       	mov	r19, r18
    7b94:	11 92       	st	Z+, r1
    7b96:	3a 95       	dec	r19
    7b98:	e9 f7       	brne	.-6      	; 0x7b94 <ds3231_get_epoch+0x30>
    7b9a:	89 81       	ldd	r24, Y+1	; 0x01
    7b9c:	9f ef       	ldi	r25, 0xFF	; 255
    7b9e:	98 0f       	add	r25, r24
    7ba0:	99 83       	std	Y+1, r25	; 0x01
    7ba2:	88 23       	and	r24, r24
    7ba4:	99 f0       	breq	.+38     	; 0x7bcc <ds3231_get_epoch+0x68>
    7ba6:	ce 01       	movw	r24, r28
    7ba8:	41 96       	adiw	r24, 0x11	; 17
    7baa:	27 e0       	ldi	r18, 0x07	; 7
    7bac:	ac 01       	movw	r20, r24
    7bae:	60 e0       	ldi	r22, 0x00	; 0
    7bb0:	80 ed       	ldi	r24, 0xD0	; 208
    7bb2:	0e 94 23 4b 	call	0x9646	; 0x9646 <I2C_0_GetData>
    7bb6:	98 2f       	mov	r25, r24
    7bb8:	81 e0       	ldi	r24, 0x01	; 1
    7bba:	97 30       	cpi	r25, 0x07	; 7
    7bbc:	09 f4       	brne	.+2      	; 0x7bc0 <ds3231_get_epoch+0x5c>
    7bbe:	80 e0       	ldi	r24, 0x00	; 0
    7bc0:	8e 83       	std	Y+6, r24	; 0x06
    7bc2:	8e 81       	ldd	r24, Y+6	; 0x06
    7bc4:	88 23       	and	r24, r24
    7bc6:	11 f0       	breq	.+4      	; 0x7bcc <ds3231_get_epoch+0x68>
    7bc8:	81 e0       	ldi	r24, 0x01	; 1
    7bca:	01 c0       	rjmp	.+2      	; 0x7bce <ds3231_get_epoch+0x6a>
    7bcc:	80 e0       	ldi	r24, 0x00	; 0
    7bce:	88 23       	and	r24, r24
    7bd0:	09 f0       	breq	.+2      	; 0x7bd4 <ds3231_get_epoch+0x70>
    7bd2:	e3 cf       	rjmp	.-58     	; 0x7b9a <ds3231_get_epoch+0x36>
    7bd4:	9e 81       	ldd	r25, Y+6	; 0x06
    7bd6:	81 e0       	ldi	r24, 0x01	; 1
    7bd8:	89 27       	eor	r24, r25
    7bda:	88 23       	and	r24, r24
    7bdc:	09 f4       	brne	.+2      	; 0x7be0 <ds3231_get_epoch+0x7c>
    7bde:	7e c1       	rjmp	.+764    	; 0x7edc <ds3231_get_epoch+0x378>
    7be0:	2c e0       	ldi	r18, 0x0C	; 12
    7be2:	ce 01       	movw	r24, r28
    7be4:	48 96       	adiw	r24, 0x18	; 24
    7be6:	fc 01       	movw	r30, r24
    7be8:	32 2f       	mov	r19, r18
    7bea:	11 92       	st	Z+, r1
    7bec:	3a 95       	dec	r19
    7bee:	e9 f7       	brne	.-6      	; 0x7bea <ds3231_get_epoch+0x86>
    7bf0:	84 e6       	ldi	r24, 0x64	; 100
    7bf2:	90 e0       	ldi	r25, 0x00	; 0
    7bf4:	89 87       	std	Y+9, r24	; 0x09
    7bf6:	9a 87       	std	Y+10, r25	; 0x0a
    7bf8:	8f 89       	ldd	r24, Y+23	; 0x17
    7bfa:	88 2f       	mov	r24, r24
    7bfc:	90 e0       	ldi	r25, 0x00	; 0
    7bfe:	8f 70       	andi	r24, 0x0F	; 15
    7c00:	99 27       	eor	r25, r25
    7c02:	29 85       	ldd	r18, Y+9	; 0x09
    7c04:	3a 85       	ldd	r19, Y+10	; 0x0a
    7c06:	82 0f       	add	r24, r18
    7c08:	93 1f       	adc	r25, r19
    7c0a:	89 87       	std	Y+9, r24	; 0x09
    7c0c:	9a 87       	std	Y+10, r25	; 0x0a
    7c0e:	8f 89       	ldd	r24, Y+23	; 0x17
    7c10:	82 95       	swap	r24
    7c12:	8f 70       	andi	r24, 0x0F	; 15
    7c14:	88 2f       	mov	r24, r24
    7c16:	90 e0       	ldi	r25, 0x00	; 0
    7c18:	88 0f       	add	r24, r24
    7c1a:	99 1f       	adc	r25, r25
    7c1c:	9c 01       	movw	r18, r24
    7c1e:	22 0f       	add	r18, r18
    7c20:	33 1f       	adc	r19, r19
    7c22:	22 0f       	add	r18, r18
    7c24:	33 1f       	adc	r19, r19
    7c26:	82 0f       	add	r24, r18
    7c28:	93 1f       	adc	r25, r19
    7c2a:	29 85       	ldd	r18, Y+9	; 0x09
    7c2c:	3a 85       	ldd	r19, Y+10	; 0x0a
    7c2e:	82 0f       	add	r24, r18
    7c30:	93 1f       	adc	r25, r19
    7c32:	89 87       	std	Y+9, r24	; 0x09
    7c34:	9a 87       	std	Y+10, r25	; 0x0a
    7c36:	89 85       	ldd	r24, Y+9	; 0x09
    7c38:	9a 85       	ldd	r25, Y+10	; 0x0a
    7c3a:	8e 8f       	std	Y+30, r24	; 0x1e
    7c3c:	9f 8f       	std	Y+31, r25	; 0x1f
    7c3e:	89 85       	ldd	r24, Y+9	; 0x09
    7c40:	9a 85       	ldd	r25, Y+10	; 0x0a
    7c42:	84 59       	subi	r24, 0x94	; 148
    7c44:	98 4f       	sbci	r25, 0xF8	; 248
    7c46:	89 87       	std	Y+9, r24	; 0x09
    7c48:	9a 87       	std	Y+10, r25	; 0x0a
    7c4a:	8e 89       	ldd	r24, Y+22	; 0x16
    7c4c:	8f 70       	andi	r24, 0x0F	; 15
    7c4e:	8b 87       	std	Y+11, r24	; 0x0b
    7c50:	8e 89       	ldd	r24, Y+22	; 0x16
    7c52:	82 95       	swap	r24
    7c54:	8f 70       	andi	r24, 0x0F	; 15
    7c56:	88 0f       	add	r24, r24
    7c58:	98 2f       	mov	r25, r24
    7c5a:	99 0f       	add	r25, r25
    7c5c:	99 0f       	add	r25, r25
    7c5e:	89 0f       	add	r24, r25
    7c60:	9b 85       	ldd	r25, Y+11	; 0x0b
    7c62:	89 0f       	add	r24, r25
    7c64:	8b 87       	std	Y+11, r24	; 0x0b
    7c66:	8b 85       	ldd	r24, Y+11	; 0x0b
    7c68:	81 50       	subi	r24, 0x01	; 1
    7c6a:	8d 8f       	std	Y+29, r24	; 0x1d
    7c6c:	8d 89       	ldd	r24, Y+21	; 0x15
    7c6e:	8f 70       	andi	r24, 0x0F	; 15
    7c70:	8c 87       	std	Y+12, r24	; 0x0c
    7c72:	8d 89       	ldd	r24, Y+21	; 0x15
    7c74:	82 95       	swap	r24
    7c76:	8f 70       	andi	r24, 0x0F	; 15
    7c78:	88 0f       	add	r24, r24
    7c7a:	98 2f       	mov	r25, r24
    7c7c:	99 0f       	add	r25, r25
    7c7e:	99 0f       	add	r25, r25
    7c80:	89 0f       	add	r24, r25
    7c82:	9c 85       	ldd	r25, Y+12	; 0x0c
    7c84:	89 0f       	add	r24, r25
    7c86:	8c 87       	std	Y+12, r24	; 0x0c
    7c88:	8c 85       	ldd	r24, Y+12	; 0x0c
    7c8a:	8b 8f       	std	Y+27, r24	; 0x1b
    7c8c:	18 a2       	std	Y+32, r1	; 0x20
    7c8e:	19 a2       	std	Y+33, r1	; 0x21
    7c90:	81 e0       	ldi	r24, 0x01	; 1
    7c92:	88 87       	std	Y+8, r24	; 0x08
    7c94:	98 85       	ldd	r25, Y+8	; 0x08
    7c96:	8b 85       	ldd	r24, Y+11	; 0x0b
    7c98:	98 17       	cp	r25, r24
    7c9a:	88 f4       	brcc	.+34     	; 0x7cbe <ds3231_get_epoch+0x15a>
    7c9c:	89 85       	ldd	r24, Y+9	; 0x09
    7c9e:	9a 85       	ldd	r25, Y+10	; 0x0a
    7ca0:	68 85       	ldd	r22, Y+8	; 0x08
    7ca2:	0e 94 47 02 	call	0x48e	; 0x48e <month_length>
    7ca6:	28 a1       	ldd	r18, Y+32	; 0x20
    7ca8:	39 a1       	ldd	r19, Y+33	; 0x21
    7caa:	88 2f       	mov	r24, r24
    7cac:	90 e0       	ldi	r25, 0x00	; 0
    7cae:	82 0f       	add	r24, r18
    7cb0:	93 1f       	adc	r25, r19
    7cb2:	88 a3       	std	Y+32, r24	; 0x20
    7cb4:	99 a3       	std	Y+33, r25	; 0x21
    7cb6:	88 85       	ldd	r24, Y+8	; 0x08
    7cb8:	8f 5f       	subi	r24, 0xFF	; 255
    7cba:	88 87       	std	Y+8, r24	; 0x08
    7cbc:	eb cf       	rjmp	.-42     	; 0x7c94 <ds3231_get_epoch+0x130>
    7cbe:	28 a1       	ldd	r18, Y+32	; 0x20
    7cc0:	39 a1       	ldd	r19, Y+33	; 0x21
    7cc2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    7cc4:	08 2e       	mov	r0, r24
    7cc6:	00 0c       	add	r0, r0
    7cc8:	99 0b       	sbc	r25, r25
    7cca:	01 97       	sbiw	r24, 0x01	; 1
    7ccc:	82 0f       	add	r24, r18
    7cce:	93 1f       	adc	r25, r19
    7cd0:	88 a3       	std	Y+32, r24	; 0x20
    7cd2:	99 a3       	std	Y+33, r25	; 0x21
    7cd4:	89 89       	ldd	r24, Y+17	; 0x11
    7cd6:	82 95       	swap	r24
    7cd8:	8f 70       	andi	r24, 0x0F	; 15
    7cda:	88 0f       	add	r24, r24
    7cdc:	98 2f       	mov	r25, r24
    7cde:	99 0f       	add	r25, r25
    7ce0:	99 0f       	add	r25, r25
    7ce2:	89 0f       	add	r24, r25
    7ce4:	8d 87       	std	Y+13, r24	; 0x0d
    7ce6:	89 89       	ldd	r24, Y+17	; 0x11
    7ce8:	8f 70       	andi	r24, 0x0F	; 15
    7cea:	9d 85       	ldd	r25, Y+13	; 0x0d
    7cec:	89 0f       	add	r24, r25
    7cee:	8d 87       	std	Y+13, r24	; 0x0d
    7cf0:	8a 89       	ldd	r24, Y+18	; 0x12
    7cf2:	82 95       	swap	r24
    7cf4:	8f 70       	andi	r24, 0x0F	; 15
    7cf6:	88 0f       	add	r24, r24
    7cf8:	98 2f       	mov	r25, r24
    7cfa:	99 0f       	add	r25, r25
    7cfc:	99 0f       	add	r25, r25
    7cfe:	89 0f       	add	r24, r25
    7d00:	8e 87       	std	Y+14, r24	; 0x0e
    7d02:	8a 89       	ldd	r24, Y+18	; 0x12
    7d04:	8f 70       	andi	r24, 0x0F	; 15
    7d06:	9e 85       	ldd	r25, Y+14	; 0x0e
    7d08:	89 0f       	add	r24, r25
    7d0a:	8e 87       	std	Y+14, r24	; 0x0e
    7d0c:	8b 89       	ldd	r24, Y+19	; 0x13
    7d0e:	88 2f       	mov	r24, r24
    7d10:	90 e0       	ldi	r25, 0x00	; 0
    7d12:	80 72       	andi	r24, 0x20	; 32
    7d14:	99 27       	eor	r25, r25
    7d16:	21 e0       	ldi	r18, 0x01	; 1
    7d18:	89 2b       	or	r24, r25
    7d1a:	09 f4       	brne	.+2      	; 0x7d1e <ds3231_get_epoch+0x1ba>
    7d1c:	20 e0       	ldi	r18, 0x00	; 0
    7d1e:	2f 87       	std	Y+15, r18	; 0x0f
    7d20:	8b 89       	ldd	r24, Y+19	; 0x13
    7d22:	88 2f       	mov	r24, r24
    7d24:	90 e0       	ldi	r25, 0x00	; 0
    7d26:	95 95       	asr	r25
    7d28:	87 95       	ror	r24
    7d2a:	95 95       	asr	r25
    7d2c:	87 95       	ror	r24
    7d2e:	95 95       	asr	r25
    7d30:	87 95       	ror	r24
    7d32:	95 95       	asr	r25
    7d34:	87 95       	ror	r24
    7d36:	81 70       	andi	r24, 0x01	; 1
    7d38:	88 0f       	add	r24, r24
    7d3a:	98 2f       	mov	r25, r24
    7d3c:	99 0f       	add	r25, r25
    7d3e:	99 0f       	add	r25, r25
    7d40:	89 0f       	add	r24, r25
    7d42:	8f 83       	std	Y+7, r24	; 0x07
    7d44:	8b 89       	ldd	r24, Y+19	; 0x13
    7d46:	8f 70       	andi	r24, 0x0F	; 15
    7d48:	9f 81       	ldd	r25, Y+7	; 0x07
    7d4a:	89 0f       	add	r24, r25
    7d4c:	8f 83       	std	Y+7, r24	; 0x07
    7d4e:	8b 89       	ldd	r24, Y+19	; 0x13
    7d50:	88 2f       	mov	r24, r24
    7d52:	90 e0       	ldi	r25, 0x00	; 0
    7d54:	80 74       	andi	r24, 0x40	; 64
    7d56:	99 27       	eor	r25, r25
    7d58:	21 e0       	ldi	r18, 0x01	; 1
    7d5a:	89 2b       	or	r24, r25
    7d5c:	09 f4       	brne	.+2      	; 0x7d60 <ds3231_get_epoch+0x1fc>
    7d5e:	20 e0       	ldi	r18, 0x00	; 0
    7d60:	28 8b       	std	Y+16, r18	; 0x10
    7d62:	88 89       	ldd	r24, Y+16	; 0x10
    7d64:	88 23       	and	r24, r24
    7d66:	39 f0       	breq	.+14     	; 0x7d76 <ds3231_get_epoch+0x212>
    7d68:	8f 85       	ldd	r24, Y+15	; 0x0f
    7d6a:	88 23       	and	r24, r24
    7d6c:	51 f0       	breq	.+20     	; 0x7d82 <ds3231_get_epoch+0x21e>
    7d6e:	8f 81       	ldd	r24, Y+7	; 0x07
    7d70:	84 5f       	subi	r24, 0xF4	; 244
    7d72:	8f 83       	std	Y+7, r24	; 0x07
    7d74:	06 c0       	rjmp	.+12     	; 0x7d82 <ds3231_get_epoch+0x21e>
    7d76:	8f 85       	ldd	r24, Y+15	; 0x0f
    7d78:	88 23       	and	r24, r24
    7d7a:	19 f0       	breq	.+6      	; 0x7d82 <ds3231_get_epoch+0x21e>
    7d7c:	8f 81       	ldd	r24, Y+7	; 0x07
    7d7e:	8c 5e       	subi	r24, 0xEC	; 236
    7d80:	8f 83       	std	Y+7, r24	; 0x07
    7d82:	8f 81       	ldd	r24, Y+7	; 0x07
    7d84:	8a 8f       	std	Y+26, r24	; 0x1a
    7d86:	8e 85       	ldd	r24, Y+14	; 0x0e
    7d88:	89 8f       	std	Y+25, r24	; 0x19
    7d8a:	8d 85       	ldd	r24, Y+13	; 0x0d
    7d8c:	88 8f       	std	Y+24, r24	; 0x18
    7d8e:	88 8d       	ldd	r24, Y+24	; 0x18
    7d90:	28 2f       	mov	r18, r24
    7d92:	88 0f       	add	r24, r24
    7d94:	33 0b       	sbc	r19, r19
    7d96:	89 8d       	ldd	r24, Y+25	; 0x19
    7d98:	48 2f       	mov	r20, r24
    7d9a:	88 0f       	add	r24, r24
    7d9c:	55 0b       	sbc	r21, r21
    7d9e:	6c e3       	ldi	r22, 0x3C	; 60
    7da0:	64 9f       	mul	r22, r20
    7da2:	c0 01       	movw	r24, r0
    7da4:	65 9f       	mul	r22, r21
    7da6:	90 0d       	add	r25, r0
    7da8:	11 24       	eor	r1, r1
    7daa:	82 0f       	add	r24, r18
    7dac:	93 1f       	adc	r25, r19
    7dae:	7c 01       	movw	r14, r24
    7db0:	99 0f       	add	r25, r25
    7db2:	00 0b       	sbc	r16, r16
    7db4:	11 0b       	sbc	r17, r17
    7db6:	8a 8d       	ldd	r24, Y+26	; 0x1a
    7db8:	28 2f       	mov	r18, r24
    7dba:	88 0f       	add	r24, r24
    7dbc:	33 0b       	sbc	r19, r19
    7dbe:	44 0b       	sbc	r20, r20
    7dc0:	55 0b       	sbc	r21, r21
    7dc2:	80 e1       	ldi	r24, 0x10	; 16
    7dc4:	9e e0       	ldi	r25, 0x0E	; 14
    7dc6:	dc 01       	movw	r26, r24
    7dc8:	0e 94 5b 72 	call	0xe4b6	; 0xe4b6 <__muluhisi3>
    7dcc:	dc 01       	movw	r26, r24
    7dce:	cb 01       	movw	r24, r22
    7dd0:	e8 0e       	add	r14, r24
    7dd2:	f9 1e       	adc	r15, r25
    7dd4:	0a 1f       	adc	r16, r26
    7dd6:	1b 1f       	adc	r17, r27
    7dd8:	88 a1       	ldd	r24, Y+32	; 0x20
    7dda:	99 a1       	ldd	r25, Y+33	; 0x21
    7ddc:	09 2e       	mov	r0, r25
    7dde:	00 0c       	add	r0, r0
    7de0:	aa 0b       	sbc	r26, r26
    7de2:	bb 0b       	sbc	r27, r27
    7de4:	9c 01       	movw	r18, r24
    7de6:	ad 01       	movw	r20, r26
    7de8:	60 e8       	ldi	r22, 0x80	; 128
    7dea:	71 e5       	ldi	r23, 0x51	; 81
    7dec:	81 e0       	ldi	r24, 0x01	; 1
    7dee:	90 e0       	ldi	r25, 0x00	; 0
    7df0:	0e 94 ca 71 	call	0xe394	; 0xe394 <__mulsi3>
    7df4:	dc 01       	movw	r26, r24
    7df6:	cb 01       	movw	r24, r22
    7df8:	e8 0e       	add	r14, r24
    7dfa:	f9 1e       	adc	r15, r25
    7dfc:	0a 1f       	adc	r16, r26
    7dfe:	1b 1f       	adc	r17, r27
    7e00:	8e 8d       	ldd	r24, Y+30	; 0x1e
    7e02:	9f 8d       	ldd	r25, Y+31	; 0x1f
    7e04:	86 54       	subi	r24, 0x46	; 70
    7e06:	91 09       	sbc	r25, r1
    7e08:	09 2e       	mov	r0, r25
    7e0a:	00 0c       	add	r0, r0
    7e0c:	aa 0b       	sbc	r26, r26
    7e0e:	bb 0b       	sbc	r27, r27
    7e10:	9c 01       	movw	r18, r24
    7e12:	ad 01       	movw	r20, r26
    7e14:	60 e8       	ldi	r22, 0x80	; 128
    7e16:	73 e3       	ldi	r23, 0x33	; 51
    7e18:	81 ee       	ldi	r24, 0xE1	; 225
    7e1a:	91 e0       	ldi	r25, 0x01	; 1
    7e1c:	0e 94 ca 71 	call	0xe394	; 0xe394 <__mulsi3>
    7e20:	dc 01       	movw	r26, r24
    7e22:	cb 01       	movw	r24, r22
    7e24:	e8 0e       	add	r14, r24
    7e26:	f9 1e       	adc	r15, r25
    7e28:	0a 1f       	adc	r16, r26
    7e2a:	1b 1f       	adc	r17, r27
    7e2c:	8e 8d       	ldd	r24, Y+30	; 0x1e
    7e2e:	9f 8d       	ldd	r25, Y+31	; 0x1f
    7e30:	85 54       	subi	r24, 0x45	; 69
    7e32:	91 09       	sbc	r25, r1
    7e34:	99 23       	and	r25, r25
    7e36:	0c f4       	brge	.+2      	; 0x7e3a <ds3231_get_epoch+0x2d6>
    7e38:	03 96       	adiw	r24, 0x03	; 3
    7e3a:	95 95       	asr	r25
    7e3c:	87 95       	ror	r24
    7e3e:	95 95       	asr	r25
    7e40:	87 95       	ror	r24
    7e42:	09 2e       	mov	r0, r25
    7e44:	00 0c       	add	r0, r0
    7e46:	aa 0b       	sbc	r26, r26
    7e48:	bb 0b       	sbc	r27, r27
    7e4a:	9c 01       	movw	r18, r24
    7e4c:	ad 01       	movw	r20, r26
    7e4e:	60 e8       	ldi	r22, 0x80	; 128
    7e50:	71 e5       	ldi	r23, 0x51	; 81
    7e52:	81 e0       	ldi	r24, 0x01	; 1
    7e54:	90 e0       	ldi	r25, 0x00	; 0
    7e56:	0e 94 ca 71 	call	0xe394	; 0xe394 <__mulsi3>
    7e5a:	dc 01       	movw	r26, r24
    7e5c:	cb 01       	movw	r24, r22
    7e5e:	e8 0e       	add	r14, r24
    7e60:	f9 1e       	adc	r15, r25
    7e62:	0a 1f       	adc	r16, r26
    7e64:	1b 1f       	adc	r17, r27
    7e66:	8e 8d       	ldd	r24, Y+30	; 0x1e
    7e68:	9f 8d       	ldd	r25, Y+31	; 0x1f
    7e6a:	01 97       	sbiw	r24, 0x01	; 1
    7e6c:	24 e6       	ldi	r18, 0x64	; 100
    7e6e:	30 e0       	ldi	r19, 0x00	; 0
    7e70:	b9 01       	movw	r22, r18
    7e72:	0e 94 ee 71 	call	0xe3dc	; 0xe3dc <__divmodhi4>
    7e76:	cb 01       	movw	r24, r22
    7e78:	09 2e       	mov	r0, r25
    7e7a:	00 0c       	add	r0, r0
    7e7c:	aa 0b       	sbc	r26, r26
    7e7e:	bb 0b       	sbc	r27, r27
    7e80:	9c 01       	movw	r18, r24
    7e82:	ad 01       	movw	r20, r26
    7e84:	60 e8       	ldi	r22, 0x80	; 128
    7e86:	7e ea       	ldi	r23, 0xAE	; 174
    7e88:	8e ef       	ldi	r24, 0xFE	; 254
    7e8a:	9f ef       	ldi	r25, 0xFF	; 255
    7e8c:	0e 94 ca 71 	call	0xe394	; 0xe394 <__mulsi3>
    7e90:	dc 01       	movw	r26, r24
    7e92:	cb 01       	movw	r24, r22
    7e94:	e8 0e       	add	r14, r24
    7e96:	f9 1e       	adc	r15, r25
    7e98:	0a 1f       	adc	r16, r26
    7e9a:	1b 1f       	adc	r17, r27
    7e9c:	8e 8d       	ldd	r24, Y+30	; 0x1e
    7e9e:	9f 8d       	ldd	r25, Y+31	; 0x1f
    7ea0:	85 5d       	subi	r24, 0xD5	; 213
    7ea2:	9e 4f       	sbci	r25, 0xFE	; 254
    7ea4:	20 e9       	ldi	r18, 0x90	; 144
    7ea6:	31 e0       	ldi	r19, 0x01	; 1
    7ea8:	b9 01       	movw	r22, r18
    7eaa:	0e 94 ee 71 	call	0xe3dc	; 0xe3dc <__divmodhi4>
    7eae:	cb 01       	movw	r24, r22
    7eb0:	09 2e       	mov	r0, r25
    7eb2:	00 0c       	add	r0, r0
    7eb4:	aa 0b       	sbc	r26, r26
    7eb6:	bb 0b       	sbc	r27, r27
    7eb8:	9c 01       	movw	r18, r24
    7eba:	ad 01       	movw	r20, r26
    7ebc:	60 e8       	ldi	r22, 0x80	; 128
    7ebe:	71 e5       	ldi	r23, 0x51	; 81
    7ec0:	81 e0       	ldi	r24, 0x01	; 1
    7ec2:	90 e0       	ldi	r25, 0x00	; 0
    7ec4:	0e 94 ca 71 	call	0xe394	; 0xe394 <__mulsi3>
    7ec8:	dc 01       	movw	r26, r24
    7eca:	cb 01       	movw	r24, r22
    7ecc:	8e 0d       	add	r24, r14
    7ece:	9f 1d       	adc	r25, r15
    7ed0:	a0 1f       	adc	r26, r16
    7ed2:	b1 1f       	adc	r27, r17
    7ed4:	8a 83       	std	Y+2, r24	; 0x02
    7ed6:	9b 83       	std	Y+3, r25	; 0x03
    7ed8:	ac 83       	std	Y+4, r26	; 0x04
    7eda:	bd 83       	std	Y+5, r27	; 0x05
    7edc:	8c a1       	ldd	r24, Y+36	; 0x24
    7ede:	9d a1       	ldd	r25, Y+37	; 0x25
    7ee0:	89 2b       	or	r24, r25
    7ee2:	51 f0       	breq	.+20     	; 0x7ef8 <ds3231_get_epoch+0x394>
    7ee4:	8e 81       	ldd	r24, Y+6	; 0x06
    7ee6:	88 23       	and	r24, r24
    7ee8:	11 f0       	breq	.+4      	; 0x7eee <ds3231_get_epoch+0x38a>
    7eea:	2c ef       	ldi	r18, 0xFC	; 252
    7eec:	01 c0       	rjmp	.+2      	; 0x7ef0 <ds3231_get_epoch+0x38c>
    7eee:	20 e0       	ldi	r18, 0x00	; 0
    7ef0:	8c a1       	ldd	r24, Y+36	; 0x24
    7ef2:	9d a1       	ldd	r25, Y+37	; 0x25
    7ef4:	fc 01       	movw	r30, r24
    7ef6:	20 83       	st	Z, r18
    7ef8:	8a 81       	ldd	r24, Y+2	; 0x02
    7efa:	9b 81       	ldd	r25, Y+3	; 0x03
    7efc:	ac 81       	ldd	r26, Y+4	; 0x04
    7efe:	bd 81       	ldd	r27, Y+5	; 0x05
    7f00:	bc 01       	movw	r22, r24
    7f02:	cd 01       	movw	r24, r26
    7f04:	a5 96       	adiw	r28, 0x25	; 37
    7f06:	cd bf       	out	0x3d, r28	; 61
    7f08:	de bf       	out	0x3e, r29	; 62
    7f0a:	df 91       	pop	r29
    7f0c:	cf 91       	pop	r28
    7f0e:	1f 91       	pop	r17
    7f10:	0f 91       	pop	r16
    7f12:	ff 90       	pop	r15
    7f14:	ef 90       	pop	r14
    7f16:	08 95       	ret

00007f18 <ds3231_get_temp>:
    7f18:	cf 93       	push	r28
    7f1a:	df 93       	push	r29
    7f1c:	cd b7       	in	r28, 0x3d	; 61
    7f1e:	de b7       	in	r29, 0x3e	; 62
    7f20:	26 97       	sbiw	r28, 0x06	; 6
    7f22:	cd bf       	out	0x3d, r28	; 61
    7f24:	de bf       	out	0x3e, r29	; 62
    7f26:	8d 83       	std	Y+5, r24	; 0x05
    7f28:	9e 83       	std	Y+6, r25	; 0x06
    7f2a:	8a e0       	ldi	r24, 0x0A	; 10
    7f2c:	89 83       	std	Y+1, r24	; 0x01
    7f2e:	1b 82       	std	Y+3, r1	; 0x03
    7f30:	1c 82       	std	Y+4, r1	; 0x04
    7f32:	89 81       	ldd	r24, Y+1	; 0x01
    7f34:	9f ef       	ldi	r25, 0xFF	; 255
    7f36:	98 0f       	add	r25, r24
    7f38:	99 83       	std	Y+1, r25	; 0x01
    7f3a:	88 23       	and	r24, r24
    7f3c:	99 f0       	breq	.+38     	; 0x7f64 <ds3231_get_temp+0x4c>
    7f3e:	ce 01       	movw	r24, r28
    7f40:	03 96       	adiw	r24, 0x03	; 3
    7f42:	22 e0       	ldi	r18, 0x02	; 2
    7f44:	ac 01       	movw	r20, r24
    7f46:	61 e1       	ldi	r22, 0x11	; 17
    7f48:	80 ed       	ldi	r24, 0xD0	; 208
    7f4a:	0e 94 23 4b 	call	0x9646	; 0x9646 <I2C_0_GetData>
    7f4e:	98 2f       	mov	r25, r24
    7f50:	81 e0       	ldi	r24, 0x01	; 1
    7f52:	92 30       	cpi	r25, 0x02	; 2
    7f54:	09 f4       	brne	.+2      	; 0x7f58 <ds3231_get_temp+0x40>
    7f56:	80 e0       	ldi	r24, 0x00	; 0
    7f58:	8a 83       	std	Y+2, r24	; 0x02
    7f5a:	8a 81       	ldd	r24, Y+2	; 0x02
    7f5c:	88 23       	and	r24, r24
    7f5e:	11 f0       	breq	.+4      	; 0x7f64 <ds3231_get_temp+0x4c>
    7f60:	81 e0       	ldi	r24, 0x01	; 1
    7f62:	01 c0       	rjmp	.+2      	; 0x7f66 <ds3231_get_temp+0x4e>
    7f64:	80 e0       	ldi	r24, 0x00	; 0
    7f66:	88 23       	and	r24, r24
    7f68:	09 f0       	breq	.+2      	; 0x7f6c <ds3231_get_temp+0x54>
    7f6a:	e3 cf       	rjmp	.-58     	; 0x7f32 <ds3231_get_temp+0x1a>
    7f6c:	9a 81       	ldd	r25, Y+2	; 0x02
    7f6e:	81 e0       	ldi	r24, 0x01	; 1
    7f70:	89 27       	eor	r24, r25
    7f72:	88 23       	and	r24, r24
    7f74:	19 f1       	breq	.+70     	; 0x7fbc <ds3231_get_temp+0xa4>
    7f76:	8b 81       	ldd	r24, Y+3	; 0x03
    7f78:	28 2f       	mov	r18, r24
    7f7a:	30 e0       	ldi	r19, 0x00	; 0
    7f7c:	8d 81       	ldd	r24, Y+5	; 0x05
    7f7e:	9e 81       	ldd	r25, Y+6	; 0x06
    7f80:	fc 01       	movw	r30, r24
    7f82:	20 83       	st	Z, r18
    7f84:	31 83       	std	Z+1, r19	; 0x01
    7f86:	8d 81       	ldd	r24, Y+5	; 0x05
    7f88:	9e 81       	ldd	r25, Y+6	; 0x06
    7f8a:	fc 01       	movw	r30, r24
    7f8c:	80 81       	ld	r24, Z
    7f8e:	91 81       	ldd	r25, Z+1	; 0x01
    7f90:	38 2f       	mov	r19, r24
    7f92:	22 27       	eor	r18, r18
    7f94:	8d 81       	ldd	r24, Y+5	; 0x05
    7f96:	9e 81       	ldd	r25, Y+6	; 0x06
    7f98:	fc 01       	movw	r30, r24
    7f9a:	20 83       	st	Z, r18
    7f9c:	31 83       	std	Z+1, r19	; 0x01
    7f9e:	8d 81       	ldd	r24, Y+5	; 0x05
    7fa0:	9e 81       	ldd	r25, Y+6	; 0x06
    7fa2:	fc 01       	movw	r30, r24
    7fa4:	20 81       	ld	r18, Z
    7fa6:	31 81       	ldd	r19, Z+1	; 0x01
    7fa8:	8c 81       	ldd	r24, Y+4	; 0x04
    7faa:	88 2f       	mov	r24, r24
    7fac:	90 e0       	ldi	r25, 0x00	; 0
    7fae:	28 2b       	or	r18, r24
    7fb0:	39 2b       	or	r19, r25
    7fb2:	8d 81       	ldd	r24, Y+5	; 0x05
    7fb4:	9e 81       	ldd	r25, Y+6	; 0x06
    7fb6:	fc 01       	movw	r30, r24
    7fb8:	20 83       	st	Z, r18
    7fba:	31 83       	std	Z+1, r19	; 0x01
    7fbc:	8a 81       	ldd	r24, Y+2	; 0x02
    7fbe:	26 96       	adiw	r28, 0x06	; 6
    7fc0:	cd bf       	out	0x3d, r28	; 61
    7fc2:	de bf       	out	0x3e, r29	; 62
    7fc4:	df 91       	pop	r29
    7fc6:	cf 91       	pop	r28
    7fc8:	08 95       	ret

00007fca <ds3231_set_date_time_arducon>:
    7fca:	cf 93       	push	r28
    7fcc:	df 93       	push	r29
    7fce:	cd b7       	in	r28, 0x3d	; 61
    7fd0:	de b7       	in	r29, 0x3e	; 62
    7fd2:	2c 97       	sbiw	r28, 0x0c	; 12
    7fd4:	cd bf       	out	0x3d, r28	; 61
    7fd6:	de bf       	out	0x3e, r29	; 62
    7fd8:	8a 87       	std	Y+10, r24	; 0x0a
    7fda:	9b 87       	std	Y+11, r25	; 0x0b
    7fdc:	6c 87       	std	Y+12, r22	; 0x0c
    7fde:	8a e0       	ldi	r24, 0x0A	; 10
    7fe0:	89 83       	std	Y+1, r24	; 0x01
    7fe2:	81 e0       	ldi	r24, 0x01	; 1
    7fe4:	8a 83       	std	Y+2, r24	; 0x02
    7fe6:	27 e0       	ldi	r18, 0x07	; 7
    7fe8:	ce 01       	movw	r24, r28
    7fea:	03 96       	adiw	r24, 0x03	; 3
    7fec:	fc 01       	movw	r30, r24
    7fee:	32 2f       	mov	r19, r18
    7ff0:	11 92       	st	Z+, r1
    7ff2:	3a 95       	dec	r19
    7ff4:	e9 f7       	brne	.-6      	; 0x7ff0 <ds3231_set_date_time_arducon+0x26>
    7ff6:	8a 85       	ldd	r24, Y+10	; 0x0a
    7ff8:	9b 85       	ldd	r25, Y+11	; 0x0b
    7ffa:	89 2b       	or	r24, r25
    7ffc:	09 f4       	brne	.+2      	; 0x8000 <__RODATA_PM_OFFSET__>
    7ffe:	47 c0       	rjmp	.+142    	; 0x808e <__RODATA_PM_OFFSET__+0x8e>
    8000:	8a 85       	ldd	r24, Y+10	; 0x0a
    8002:	9b 85       	ldd	r25, Y+11	; 0x0b
    8004:	0a 96       	adiw	r24, 0x0a	; 10
    8006:	0e 94 e2 3b 	call	0x77c4	; 0x77c4 <_Z8char2bcdPc>
    800a:	8b 83       	std	Y+3, r24	; 0x03
    800c:	8a 85       	ldd	r24, Y+10	; 0x0a
    800e:	9b 85       	ldd	r25, Y+11	; 0x0b
    8010:	08 96       	adiw	r24, 0x08	; 8
    8012:	0e 94 e2 3b 	call	0x77c4	; 0x77c4 <_Z8char2bcdPc>
    8016:	8c 83       	std	Y+4, r24	; 0x04
    8018:	8a 85       	ldd	r24, Y+10	; 0x0a
    801a:	9b 85       	ldd	r25, Y+11	; 0x0b
    801c:	06 96       	adiw	r24, 0x06	; 6
    801e:	0e 94 e2 3b 	call	0x77c4	; 0x77c4 <_Z8char2bcdPc>
    8022:	8d 83       	std	Y+5, r24	; 0x05
    8024:	8a 85       	ldd	r24, Y+10	; 0x0a
    8026:	9b 85       	ldd	r25, Y+11	; 0x0b
    8028:	04 96       	adiw	r24, 0x04	; 4
    802a:	0e 94 e2 3b 	call	0x77c4	; 0x77c4 <_Z8char2bcdPc>
    802e:	8f 83       	std	Y+7, r24	; 0x07
    8030:	8a 85       	ldd	r24, Y+10	; 0x0a
    8032:	9b 85       	ldd	r25, Y+11	; 0x0b
    8034:	02 96       	adiw	r24, 0x02	; 2
    8036:	0e 94 e2 3b 	call	0x77c4	; 0x77c4 <_Z8char2bcdPc>
    803a:	88 87       	std	Y+8, r24	; 0x08
    803c:	8a 85       	ldd	r24, Y+10	; 0x0a
    803e:	9b 85       	ldd	r25, Y+11	; 0x0b
    8040:	0e 94 e2 3b 	call	0x77c4	; 0x77c4 <_Z8char2bcdPc>
    8044:	89 87       	std	Y+9, r24	; 0x09
    8046:	89 81       	ldd	r24, Y+1	; 0x01
    8048:	9f ef       	ldi	r25, 0xFF	; 255
    804a:	98 0f       	add	r25, r24
    804c:	99 83       	std	Y+1, r25	; 0x01
    804e:	88 23       	and	r24, r24
    8050:	d1 f0       	breq	.+52     	; 0x8086 <__RODATA_PM_OFFSET__+0x86>
    8052:	9c 85       	ldd	r25, Y+12	; 0x0c
    8054:	89 2f       	mov	r24, r25
    8056:	88 0f       	add	r24, r24
    8058:	88 0f       	add	r24, r24
    805a:	88 0f       	add	r24, r24
    805c:	38 2f       	mov	r19, r24
    805e:	39 1b       	sub	r19, r25
    8060:	ce 01       	movw	r24, r28
    8062:	03 96       	adiw	r24, 0x03	; 3
    8064:	27 e0       	ldi	r18, 0x07	; 7
    8066:	ac 01       	movw	r20, r24
    8068:	63 2f       	mov	r22, r19
    806a:	80 ed       	ldi	r24, 0xD0	; 208
    806c:	0e 94 bb 4a 	call	0x9576	; 0x9576 <I2C_0_SendData>
    8070:	98 2f       	mov	r25, r24
    8072:	81 e0       	ldi	r24, 0x01	; 1
    8074:	97 30       	cpi	r25, 0x07	; 7
    8076:	09 f4       	brne	.+2      	; 0x807a <__RODATA_PM_OFFSET__+0x7a>
    8078:	80 e0       	ldi	r24, 0x00	; 0
    807a:	8a 83       	std	Y+2, r24	; 0x02
    807c:	8a 81       	ldd	r24, Y+2	; 0x02
    807e:	88 23       	and	r24, r24
    8080:	11 f0       	breq	.+4      	; 0x8086 <__RODATA_PM_OFFSET__+0x86>
    8082:	81 e0       	ldi	r24, 0x01	; 1
    8084:	01 c0       	rjmp	.+2      	; 0x8088 <__RODATA_PM_OFFSET__+0x88>
    8086:	80 e0       	ldi	r24, 0x00	; 0
    8088:	88 23       	and	r24, r24
    808a:	09 f0       	breq	.+2      	; 0x808e <__RODATA_PM_OFFSET__+0x8e>
    808c:	dc cf       	rjmp	.-72     	; 0x8046 <__RODATA_PM_OFFSET__+0x46>
    808e:	8a 81       	ldd	r24, Y+2	; 0x02
    8090:	2c 96       	adiw	r28, 0x0c	; 12
    8092:	cd bf       	out	0x3d, r28	; 61
    8094:	de bf       	out	0x3e, r29	; 62
    8096:	df 91       	pop	r29
    8098:	cf 91       	pop	r28
    809a:	08 95       	ret

0000809c <ds3231_set_date_time>:
    809c:	cf 93       	push	r28
    809e:	df 93       	push	r29
    80a0:	cd b7       	in	r28, 0x3d	; 61
    80a2:	de b7       	in	r29, 0x3e	; 62
    80a4:	63 97       	sbiw	r28, 0x13	; 19
    80a6:	cd bf       	out	0x3d, r28	; 61
    80a8:	de bf       	out	0x3e, r29	; 62
    80aa:	89 8b       	std	Y+17, r24	; 0x11
    80ac:	9a 8b       	std	Y+18, r25	; 0x12
    80ae:	6b 8b       	std	Y+19, r22	; 0x13
    80b0:	8a e0       	ldi	r24, 0x0A	; 10
    80b2:	89 83       	std	Y+1, r24	; 0x01
    80b4:	1a 86       	std	Y+10, r1	; 0x0a
    80b6:	1b 86       	std	Y+11, r1	; 0x0b
    80b8:	1c 86       	std	Y+12, r1	; 0x0c
    80ba:	81 e0       	ldi	r24, 0x01	; 1
    80bc:	8d 87       	std	Y+13, r24	; 0x0d
    80be:	1e 86       	std	Y+14, r1	; 0x0e
    80c0:	1f 86       	std	Y+15, r1	; 0x0f
    80c2:	18 8a       	std	Y+16, r1	; 0x10
    80c4:	80 ed       	ldi	r24, 0xD0	; 208
    80c6:	97 e0       	ldi	r25, 0x07	; 7
    80c8:	8a 83       	std	Y+2, r24	; 0x02
    80ca:	9b 83       	std	Y+3, r25	; 0x03
    80cc:	89 89       	ldd	r24, Y+17	; 0x11
    80ce:	9a 89       	ldd	r25, Y+18	; 0x12
    80d0:	42 96       	adiw	r24, 0x12	; 18
    80d2:	fc 01       	movw	r30, r24
    80d4:	80 81       	ld	r24, Z
    80d6:	80 53       	subi	r24, 0x30	; 48
    80d8:	8a 87       	std	Y+10, r24	; 0x0a
    80da:	8a 85       	ldd	r24, Y+10	; 0x0a
    80dc:	28 2f       	mov	r18, r24
    80de:	89 89       	ldd	r24, Y+17	; 0x11
    80e0:	9a 89       	ldd	r25, Y+18	; 0x12
    80e2:	41 96       	adiw	r24, 0x11	; 17
    80e4:	fc 01       	movw	r30, r24
    80e6:	80 81       	ld	r24, Z
    80e8:	88 2f       	mov	r24, r24
    80ea:	90 e0       	ldi	r25, 0x00	; 0
    80ec:	c0 97       	sbiw	r24, 0x30	; 48
    80ee:	82 95       	swap	r24
    80f0:	92 95       	swap	r25
    80f2:	90 7f       	andi	r25, 0xF0	; 240
    80f4:	98 27       	eor	r25, r24
    80f6:	80 7f       	andi	r24, 0xF0	; 240
    80f8:	98 27       	eor	r25, r24
    80fa:	82 2b       	or	r24, r18
    80fc:	8a 87       	std	Y+10, r24	; 0x0a
    80fe:	89 89       	ldd	r24, Y+17	; 0x11
    8100:	9a 89       	ldd	r25, Y+18	; 0x12
    8102:	0f 96       	adiw	r24, 0x0f	; 15
    8104:	fc 01       	movw	r30, r24
    8106:	80 81       	ld	r24, Z
    8108:	80 53       	subi	r24, 0x30	; 48
    810a:	8b 87       	std	Y+11, r24	; 0x0b
    810c:	8b 85       	ldd	r24, Y+11	; 0x0b
    810e:	28 2f       	mov	r18, r24
    8110:	89 89       	ldd	r24, Y+17	; 0x11
    8112:	9a 89       	ldd	r25, Y+18	; 0x12
    8114:	0e 96       	adiw	r24, 0x0e	; 14
    8116:	fc 01       	movw	r30, r24
    8118:	80 81       	ld	r24, Z
    811a:	88 2f       	mov	r24, r24
    811c:	90 e0       	ldi	r25, 0x00	; 0
    811e:	c0 97       	sbiw	r24, 0x30	; 48
    8120:	82 95       	swap	r24
    8122:	92 95       	swap	r25
    8124:	90 7f       	andi	r25, 0xF0	; 240
    8126:	98 27       	eor	r25, r24
    8128:	80 7f       	andi	r24, 0xF0	; 240
    812a:	98 27       	eor	r25, r24
    812c:	82 2b       	or	r24, r18
    812e:	8b 87       	std	Y+11, r24	; 0x0b
    8130:	89 89       	ldd	r24, Y+17	; 0x11
    8132:	9a 89       	ldd	r25, Y+18	; 0x12
    8134:	0c 96       	adiw	r24, 0x0c	; 12
    8136:	fc 01       	movw	r30, r24
    8138:	80 81       	ld	r24, Z
    813a:	80 53       	subi	r24, 0x30	; 48
    813c:	8c 87       	std	Y+12, r24	; 0x0c
    813e:	8c 85       	ldd	r24, Y+12	; 0x0c
    8140:	28 2f       	mov	r18, r24
    8142:	89 89       	ldd	r24, Y+17	; 0x11
    8144:	9a 89       	ldd	r25, Y+18	; 0x12
    8146:	0b 96       	adiw	r24, 0x0b	; 11
    8148:	fc 01       	movw	r30, r24
    814a:	80 81       	ld	r24, Z
    814c:	88 2f       	mov	r24, r24
    814e:	90 e0       	ldi	r25, 0x00	; 0
    8150:	c0 97       	sbiw	r24, 0x30	; 48
    8152:	82 95       	swap	r24
    8154:	92 95       	swap	r25
    8156:	90 7f       	andi	r25, 0xF0	; 240
    8158:	98 27       	eor	r25, r24
    815a:	80 7f       	andi	r24, 0xF0	; 240
    815c:	98 27       	eor	r25, r24
    815e:	82 2b       	or	r24, r18
    8160:	8c 87       	std	Y+12, r24	; 0x0c
    8162:	89 89       	ldd	r24, Y+17	; 0x11
    8164:	9a 89       	ldd	r25, Y+18	; 0x12
    8166:	09 96       	adiw	r24, 0x09	; 9
    8168:	fc 01       	movw	r30, r24
    816a:	80 81       	ld	r24, Z
    816c:	80 53       	subi	r24, 0x30	; 48
    816e:	8e 87       	std	Y+14, r24	; 0x0e
    8170:	8f 85       	ldd	r24, Y+15	; 0x0f
    8172:	88 2f       	mov	r24, r24
    8174:	90 e0       	ldi	r25, 0x00	; 0
    8176:	8c 83       	std	Y+4, r24	; 0x04
    8178:	9d 83       	std	Y+5, r25	; 0x05
    817a:	89 89       	ldd	r24, Y+17	; 0x11
    817c:	9a 89       	ldd	r25, Y+18	; 0x12
    817e:	08 96       	adiw	r24, 0x08	; 8
    8180:	fc 01       	movw	r30, r24
    8182:	80 81       	ld	r24, Z
    8184:	88 2f       	mov	r24, r24
    8186:	90 e0       	ldi	r25, 0x00	; 0
    8188:	c0 97       	sbiw	r24, 0x30	; 48
    818a:	8e 83       	std	Y+6, r24	; 0x06
    818c:	9f 83       	std	Y+7, r25	; 0x07
    818e:	8e 81       	ldd	r24, Y+6	; 0x06
    8190:	9f 81       	ldd	r25, Y+7	; 0x07
    8192:	88 0f       	add	r24, r24
    8194:	99 1f       	adc	r25, r25
    8196:	9c 01       	movw	r18, r24
    8198:	22 0f       	add	r18, r18
    819a:	33 1f       	adc	r19, r19
    819c:	22 0f       	add	r18, r18
    819e:	33 1f       	adc	r19, r19
    81a0:	82 0f       	add	r24, r18
    81a2:	93 1f       	adc	r25, r19
    81a4:	2c 81       	ldd	r18, Y+4	; 0x04
    81a6:	3d 81       	ldd	r19, Y+5	; 0x05
    81a8:	82 0f       	add	r24, r18
    81aa:	93 1f       	adc	r25, r19
    81ac:	8c 83       	std	Y+4, r24	; 0x04
    81ae:	9d 83       	std	Y+5, r25	; 0x05
    81b0:	8e 85       	ldd	r24, Y+14	; 0x0e
    81b2:	28 2f       	mov	r18, r24
    81b4:	8e 81       	ldd	r24, Y+6	; 0x06
    81b6:	9f 81       	ldd	r25, Y+7	; 0x07
    81b8:	82 95       	swap	r24
    81ba:	92 95       	swap	r25
    81bc:	90 7f       	andi	r25, 0xF0	; 240
    81be:	98 27       	eor	r25, r24
    81c0:	80 7f       	andi	r24, 0xF0	; 240
    81c2:	98 27       	eor	r25, r24
    81c4:	82 2b       	or	r24, r18
    81c6:	8e 87       	std	Y+14, r24	; 0x0e
    81c8:	89 89       	ldd	r24, Y+17	; 0x11
    81ca:	9a 89       	ldd	r25, Y+18	; 0x12
    81cc:	06 96       	adiw	r24, 0x06	; 6
    81ce:	fc 01       	movw	r30, r24
    81d0:	80 81       	ld	r24, Z
    81d2:	80 53       	subi	r24, 0x30	; 48
    81d4:	8f 87       	std	Y+15, r24	; 0x0f
    81d6:	88 89       	ldd	r24, Y+16	; 0x10
    81d8:	88 2f       	mov	r24, r24
    81da:	90 e0       	ldi	r25, 0x00	; 0
    81dc:	88 87       	std	Y+8, r24	; 0x08
    81de:	99 87       	std	Y+9, r25	; 0x09
    81e0:	89 89       	ldd	r24, Y+17	; 0x11
    81e2:	9a 89       	ldd	r25, Y+18	; 0x12
    81e4:	05 96       	adiw	r24, 0x05	; 5
    81e6:	fc 01       	movw	r30, r24
    81e8:	80 81       	ld	r24, Z
    81ea:	88 2f       	mov	r24, r24
    81ec:	90 e0       	ldi	r25, 0x00	; 0
    81ee:	c0 97       	sbiw	r24, 0x30	; 48
    81f0:	8e 83       	std	Y+6, r24	; 0x06
    81f2:	9f 83       	std	Y+7, r25	; 0x07
    81f4:	8e 81       	ldd	r24, Y+6	; 0x06
    81f6:	9f 81       	ldd	r25, Y+7	; 0x07
    81f8:	88 0f       	add	r24, r24
    81fa:	99 1f       	adc	r25, r25
    81fc:	9c 01       	movw	r18, r24
    81fe:	22 0f       	add	r18, r18
    8200:	33 1f       	adc	r19, r19
    8202:	22 0f       	add	r18, r18
    8204:	33 1f       	adc	r19, r19
    8206:	82 0f       	add	r24, r18
    8208:	93 1f       	adc	r25, r19
    820a:	28 85       	ldd	r18, Y+8	; 0x08
    820c:	39 85       	ldd	r19, Y+9	; 0x09
    820e:	82 0f       	add	r24, r18
    8210:	93 1f       	adc	r25, r19
    8212:	88 87       	std	Y+8, r24	; 0x08
    8214:	99 87       	std	Y+9, r25	; 0x09
    8216:	8f 85       	ldd	r24, Y+15	; 0x0f
    8218:	28 2f       	mov	r18, r24
    821a:	8e 81       	ldd	r24, Y+6	; 0x06
    821c:	9f 81       	ldd	r25, Y+7	; 0x07
    821e:	82 95       	swap	r24
    8220:	92 95       	swap	r25
    8222:	90 7f       	andi	r25, 0xF0	; 240
    8224:	98 27       	eor	r25, r24
    8226:	80 7f       	andi	r24, 0xF0	; 240
    8228:	98 27       	eor	r25, r24
    822a:	82 2b       	or	r24, r18
    822c:	8f 87       	std	Y+15, r24	; 0x0f
    822e:	89 89       	ldd	r24, Y+17	; 0x11
    8230:	9a 89       	ldd	r25, Y+18	; 0x12
    8232:	03 96       	adiw	r24, 0x03	; 3
    8234:	fc 01       	movw	r30, r24
    8236:	80 81       	ld	r24, Z
    8238:	80 53       	subi	r24, 0x30	; 48
    823a:	88 8b       	std	Y+16, r24	; 0x10
    823c:	89 89       	ldd	r24, Y+17	; 0x11
    823e:	88 2f       	mov	r24, r24
    8240:	90 e0       	ldi	r25, 0x00	; 0
    8242:	2a 81       	ldd	r18, Y+2	; 0x02
    8244:	3b 81       	ldd	r19, Y+3	; 0x03
    8246:	82 0f       	add	r24, r18
    8248:	93 1f       	adc	r25, r19
    824a:	8a 83       	std	Y+2, r24	; 0x02
    824c:	9b 83       	std	Y+3, r25	; 0x03
    824e:	89 89       	ldd	r24, Y+17	; 0x11
    8250:	9a 89       	ldd	r25, Y+18	; 0x12
    8252:	02 96       	adiw	r24, 0x02	; 2
    8254:	fc 01       	movw	r30, r24
    8256:	80 81       	ld	r24, Z
    8258:	88 2f       	mov	r24, r24
    825a:	90 e0       	ldi	r25, 0x00	; 0
    825c:	c0 97       	sbiw	r24, 0x30	; 48
    825e:	8e 83       	std	Y+6, r24	; 0x06
    8260:	9f 83       	std	Y+7, r25	; 0x07
    8262:	8e 81       	ldd	r24, Y+6	; 0x06
    8264:	9f 81       	ldd	r25, Y+7	; 0x07
    8266:	88 0f       	add	r24, r24
    8268:	99 1f       	adc	r25, r25
    826a:	9c 01       	movw	r18, r24
    826c:	22 0f       	add	r18, r18
    826e:	33 1f       	adc	r19, r19
    8270:	22 0f       	add	r18, r18
    8272:	33 1f       	adc	r19, r19
    8274:	82 0f       	add	r24, r18
    8276:	93 1f       	adc	r25, r19
    8278:	2a 81       	ldd	r18, Y+2	; 0x02
    827a:	3b 81       	ldd	r19, Y+3	; 0x03
    827c:	82 0f       	add	r24, r18
    827e:	93 1f       	adc	r25, r19
    8280:	8a 83       	std	Y+2, r24	; 0x02
    8282:	9b 83       	std	Y+3, r25	; 0x03
    8284:	88 89       	ldd	r24, Y+16	; 0x10
    8286:	28 2f       	mov	r18, r24
    8288:	8e 81       	ldd	r24, Y+6	; 0x06
    828a:	9f 81       	ldd	r25, Y+7	; 0x07
    828c:	82 95       	swap	r24
    828e:	92 95       	swap	r25
    8290:	90 7f       	andi	r25, 0xF0	; 240
    8292:	98 27       	eor	r25, r24
    8294:	80 7f       	andi	r24, 0xF0	; 240
    8296:	98 27       	eor	r25, r24
    8298:	82 2b       	or	r24, r18
    829a:	88 8b       	std	Y+16, r24	; 0x10
    829c:	89 81       	ldd	r24, Y+1	; 0x01
    829e:	9f ef       	ldi	r25, 0xFF	; 255
    82a0:	98 0f       	add	r25, r24
    82a2:	99 83       	std	Y+1, r25	; 0x01
    82a4:	88 23       	and	r24, r24
    82a6:	99 f0       	breq	.+38     	; 0x82ce <ds3231_set_date_time+0x232>
    82a8:	9b 89       	ldd	r25, Y+19	; 0x13
    82aa:	89 2f       	mov	r24, r25
    82ac:	88 0f       	add	r24, r24
    82ae:	88 0f       	add	r24, r24
    82b0:	88 0f       	add	r24, r24
    82b2:	38 2f       	mov	r19, r24
    82b4:	39 1b       	sub	r19, r25
    82b6:	ce 01       	movw	r24, r28
    82b8:	0a 96       	adiw	r24, 0x0a	; 10
    82ba:	27 e0       	ldi	r18, 0x07	; 7
    82bc:	ac 01       	movw	r20, r24
    82be:	63 2f       	mov	r22, r19
    82c0:	80 ed       	ldi	r24, 0xD0	; 208
    82c2:	0e 94 bb 4a 	call	0x9576	; 0x9576 <I2C_0_SendData>
    82c6:	88 23       	and	r24, r24
    82c8:	11 f0       	breq	.+4      	; 0x82ce <ds3231_set_date_time+0x232>
    82ca:	81 e0       	ldi	r24, 0x01	; 1
    82cc:	01 c0       	rjmp	.+2      	; 0x82d0 <ds3231_set_date_time+0x234>
    82ce:	80 e0       	ldi	r24, 0x00	; 0
    82d0:	88 23       	and	r24, r24
    82d2:	09 f0       	breq	.+2      	; 0x82d6 <ds3231_set_date_time+0x23a>
    82d4:	e3 cf       	rjmp	.-58     	; 0x829c <ds3231_set_date_time+0x200>
    82d6:	00 00       	nop
    82d8:	63 96       	adiw	r28, 0x13	; 19
    82da:	cd bf       	out	0x3d, r28	; 61
    82dc:	de bf       	out	0x3e, r29	; 62
    82de:	df 91       	pop	r29
    82e0:	cf 91       	pop	r28
    82e2:	08 95       	ret

000082e4 <ds3231_1s_sqw>:
#endif // DATE_STRING_SUPPORT_ENABLED
	
	bool ds3231_1s_sqw(bool enable)
	{
    82e4:	cf 93       	push	r28
    82e6:	df 93       	push	r29
    82e8:	00 d0       	rcall	.+0      	; 0x82ea <ds3231_1s_sqw+0x6>
    82ea:	00 d0       	rcall	.+0      	; 0x82ec <ds3231_1s_sqw+0x8>
    82ec:	cd b7       	in	r28, 0x3d	; 61
    82ee:	de b7       	in	r29, 0x3e	; 62
    82f0:	8c 83       	std	Y+4, r24	; 0x04
		uint8_t tries = 10; /* try several times in case of transient bus issues */
    82f2:	8a e0       	ldi	r24, 0x0A	; 10
    82f4:	89 83       	std	Y+1, r24	; 0x01
		bool failure;
		uint8_t data[1];
		
		data[0] = enable ? 0x00:0x04;	
    82f6:	8c 81       	ldd	r24, Y+4	; 0x04
    82f8:	88 23       	and	r24, r24
    82fa:	11 f0       	breq	.+4      	; 0x8300 <ds3231_1s_sqw+0x1c>
    82fc:	80 e0       	ldi	r24, 0x00	; 0
    82fe:	01 c0       	rjmp	.+2      	; 0x8302 <ds3231_1s_sqw+0x1e>
    8300:	84 e0       	ldi	r24, 0x04	; 4
    8302:	8b 83       	std	Y+3, r24	; 0x03
		while(tries-- && (failure = (I2C_0_SendData(DS3231_I2C_SLAVE_ADDR, RTC_CONTROL, data, 1) != 1)));
    8304:	89 81       	ldd	r24, Y+1	; 0x01
    8306:	9f ef       	ldi	r25, 0xFF	; 255
    8308:	98 0f       	add	r25, r24
    830a:	99 83       	std	Y+1, r25	; 0x01
    830c:	88 23       	and	r24, r24
    830e:	99 f0       	breq	.+38     	; 0x8336 <ds3231_1s_sqw+0x52>
    8310:	ce 01       	movw	r24, r28
    8312:	03 96       	adiw	r24, 0x03	; 3
    8314:	21 e0       	ldi	r18, 0x01	; 1
    8316:	ac 01       	movw	r20, r24
    8318:	6e e0       	ldi	r22, 0x0E	; 14
    831a:	80 ed       	ldi	r24, 0xD0	; 208
    831c:	0e 94 bb 4a 	call	0x9576	; 0x9576 <I2C_0_SendData>
    8320:	98 2f       	mov	r25, r24
    8322:	81 e0       	ldi	r24, 0x01	; 1
    8324:	91 30       	cpi	r25, 0x01	; 1
    8326:	09 f4       	brne	.+2      	; 0x832a <ds3231_1s_sqw+0x46>
    8328:	80 e0       	ldi	r24, 0x00	; 0
    832a:	8a 83       	std	Y+2, r24	; 0x02
    832c:	8a 81       	ldd	r24, Y+2	; 0x02
    832e:	88 23       	and	r24, r24
    8330:	11 f0       	breq	.+4      	; 0x8336 <ds3231_1s_sqw+0x52>
    8332:	81 e0       	ldi	r24, 0x01	; 1
    8334:	01 c0       	rjmp	.+2      	; 0x8338 <ds3231_1s_sqw+0x54>
    8336:	80 e0       	ldi	r24, 0x00	; 0
    8338:	88 23       	and	r24, r24
    833a:	09 f0       	breq	.+2      	; 0x833e <ds3231_1s_sqw+0x5a>
    833c:	e3 cf       	rjmp	.-58     	; 0x8304 <ds3231_1s_sqw+0x20>
		
		return(failure);
    833e:	8a 81       	ldd	r24, Y+2	; 0x02
	}
    8340:	24 96       	adiw	r28, 0x04	; 4
    8342:	cd bf       	out	0x3d, r28	; 61
    8344:	de bf       	out	0x3e, r29	; 62
    8346:	df 91       	pop	r29
    8348:	cf 91       	pop	r28
    834a:	08 95       	ret

0000834c <ds3231_set_aging>:


	bool ds3231_set_aging(int8_t data_in)
	{
    834c:	cf 93       	push	r28
    834e:	df 93       	push	r29
    8350:	00 d0       	rcall	.+0      	; 0x8352 <ds3231_set_aging+0x6>
    8352:	00 d0       	rcall	.+0      	; 0x8354 <ds3231_set_aging+0x8>
    8354:	cd b7       	in	r28, 0x3d	; 61
    8356:	de b7       	in	r29, 0x3e	; 62
    8358:	8c 83       	std	Y+4, r24	; 0x04
		uint8_t tries = 10; /* try several times in case of transient bus issues */
    835a:	8a e0       	ldi	r24, 0x0A	; 10
    835c:	89 83       	std	Y+1, r24	; 0x01
		bool failure;
		int8_t data[1];
		
		data[0] = data_in;
    835e:	8c 81       	ldd	r24, Y+4	; 0x04
    8360:	8b 83       	std	Y+3, r24	; 0x03
		while(tries-- && (failure = (I2C_0_SendData(DS3231_I2C_SLAVE_ADDR, RTC_AGING, (uint8_t *)data, 1) != 1)));
    8362:	89 81       	ldd	r24, Y+1	; 0x01
    8364:	9f ef       	ldi	r25, 0xFF	; 255
    8366:	98 0f       	add	r25, r24
    8368:	99 83       	std	Y+1, r25	; 0x01
    836a:	88 23       	and	r24, r24
    836c:	99 f0       	breq	.+38     	; 0x8394 <ds3231_set_aging+0x48>
    836e:	ce 01       	movw	r24, r28
    8370:	03 96       	adiw	r24, 0x03	; 3
    8372:	21 e0       	ldi	r18, 0x01	; 1
    8374:	ac 01       	movw	r20, r24
    8376:	60 e1       	ldi	r22, 0x10	; 16
    8378:	80 ed       	ldi	r24, 0xD0	; 208
    837a:	0e 94 bb 4a 	call	0x9576	; 0x9576 <I2C_0_SendData>
    837e:	98 2f       	mov	r25, r24
    8380:	81 e0       	ldi	r24, 0x01	; 1
    8382:	91 30       	cpi	r25, 0x01	; 1
    8384:	09 f4       	brne	.+2      	; 0x8388 <ds3231_set_aging+0x3c>
    8386:	80 e0       	ldi	r24, 0x00	; 0
    8388:	8a 83       	std	Y+2, r24	; 0x02
    838a:	8a 81       	ldd	r24, Y+2	; 0x02
    838c:	88 23       	and	r24, r24
    838e:	11 f0       	breq	.+4      	; 0x8394 <ds3231_set_aging+0x48>
    8390:	81 e0       	ldi	r24, 0x01	; 1
    8392:	01 c0       	rjmp	.+2      	; 0x8396 <ds3231_set_aging+0x4a>
    8394:	80 e0       	ldi	r24, 0x00	; 0
    8396:	88 23       	and	r24, r24
    8398:	09 f0       	breq	.+2      	; 0x839c <ds3231_set_aging+0x50>
    839a:	e3 cf       	rjmp	.-58     	; 0x8362 <ds3231_set_aging+0x16>
		return(failure);
    839c:	8a 81       	ldd	r24, Y+2	; 0x02
	}
    839e:	24 96       	adiw	r28, 0x04	; 4
    83a0:	cd bf       	out	0x3d, r28	; 61
    83a2:	de bf       	out	0x3e, r29	; 62
    83a4:	df 91       	pop	r29
    83a6:	cf 91       	pop	r28
    83a8:	08 95       	ret

000083aa <ds3231_get_aging>:


	int8_t ds3231_get_aging()
	{
    83aa:	cf 93       	push	r28
    83ac:	df 93       	push	r29
    83ae:	00 d0       	rcall	.+0      	; 0x83b0 <ds3231_get_aging+0x6>
    83b0:	1f 92       	push	r1
    83b2:	cd b7       	in	r28, 0x3d	; 61
    83b4:	de b7       	in	r29, 0x3e	; 62
		uint8_t tries = 10; /* try several times in case of transient bus issues */
    83b6:	8a e0       	ldi	r24, 0x0A	; 10
    83b8:	89 83       	std	Y+1, r24	; 0x01
		bool failure;
		int8_t data[1];
		
		while(tries-- && (failure = (I2C_0_GetData(DS3231_I2C_SLAVE_ADDR, RTC_AGING, (uint8_t *)data, 1) != 1)));
    83ba:	89 81       	ldd	r24, Y+1	; 0x01
    83bc:	9f ef       	ldi	r25, 0xFF	; 255
    83be:	98 0f       	add	r25, r24
    83c0:	99 83       	std	Y+1, r25	; 0x01
    83c2:	88 23       	and	r24, r24
    83c4:	99 f0       	breq	.+38     	; 0x83ec <ds3231_get_aging+0x42>
    83c6:	ce 01       	movw	r24, r28
    83c8:	03 96       	adiw	r24, 0x03	; 3
    83ca:	21 e0       	ldi	r18, 0x01	; 1
    83cc:	ac 01       	movw	r20, r24
    83ce:	60 e1       	ldi	r22, 0x10	; 16
    83d0:	80 ed       	ldi	r24, 0xD0	; 208
    83d2:	0e 94 23 4b 	call	0x9646	; 0x9646 <I2C_0_GetData>
    83d6:	98 2f       	mov	r25, r24
    83d8:	81 e0       	ldi	r24, 0x01	; 1
    83da:	91 30       	cpi	r25, 0x01	; 1
    83dc:	09 f4       	brne	.+2      	; 0x83e0 <ds3231_get_aging+0x36>
    83de:	80 e0       	ldi	r24, 0x00	; 0
    83e0:	8a 83       	std	Y+2, r24	; 0x02
    83e2:	8a 81       	ldd	r24, Y+2	; 0x02
    83e4:	88 23       	and	r24, r24
    83e6:	11 f0       	breq	.+4      	; 0x83ec <ds3231_get_aging+0x42>
    83e8:	81 e0       	ldi	r24, 0x01	; 1
    83ea:	01 c0       	rjmp	.+2      	; 0x83ee <ds3231_get_aging+0x44>
    83ec:	80 e0       	ldi	r24, 0x00	; 0
    83ee:	88 23       	and	r24, r24
    83f0:	09 f0       	breq	.+2      	; 0x83f4 <ds3231_get_aging+0x4a>
    83f2:	e3 cf       	rjmp	.-58     	; 0x83ba <ds3231_get_aging+0x10>
		return(data[0]);
    83f4:	8b 81       	ldd	r24, Y+3	; 0x03
	}
    83f6:	23 96       	adiw	r28, 0x03	; 3
    83f8:	cd bf       	out	0x3d, r28	; 61
    83fa:	de bf       	out	0x3e, r29	; 62
    83fc:	df 91       	pop	r29
    83fe:	cf 91       	pop	r28
    8400:	08 95       	ret

00008402 <ds3231_responding>:

	bool ds3231_responding()
	{
    8402:	cf 93       	push	r28
    8404:	df 93       	push	r29
    8406:	00 d0       	rcall	.+0      	; 0x8408 <ds3231_responding+0x6>
    8408:	1f 92       	push	r1
    840a:	cd b7       	in	r28, 0x3d	; 61
    840c:	de b7       	in	r29, 0x3e	; 62
		bool responseReceived = false;
    840e:	19 82       	std	Y+1, r1	; 0x01
		uint8_t tries = 10;
    8410:	8a e0       	ldi	r24, 0x0A	; 10
    8412:	8a 83       	std	Y+2, r24	; 0x02
		int8_t data[1];		
		while(tries-- && !(responseReceived = (I2C_0_GetData(DS3231_I2C_SLAVE_ADDR, RTC_AGING, (uint8_t *)data, 1) == 1)));
    8414:	8a 81       	ldd	r24, Y+2	; 0x02
    8416:	9f ef       	ldi	r25, 0xFF	; 255
    8418:	98 0f       	add	r25, r24
    841a:	9a 83       	std	Y+2, r25	; 0x02
    841c:	88 23       	and	r24, r24
    841e:	a9 f0       	breq	.+42     	; 0x844a <ds3231_responding+0x48>
    8420:	ce 01       	movw	r24, r28
    8422:	03 96       	adiw	r24, 0x03	; 3
    8424:	21 e0       	ldi	r18, 0x01	; 1
    8426:	ac 01       	movw	r20, r24
    8428:	60 e1       	ldi	r22, 0x10	; 16
    842a:	80 ed       	ldi	r24, 0xD0	; 208
    842c:	0e 94 23 4b 	call	0x9646	; 0x9646 <I2C_0_GetData>
    8430:	98 2f       	mov	r25, r24
    8432:	81 e0       	ldi	r24, 0x01	; 1
    8434:	91 30       	cpi	r25, 0x01	; 1
    8436:	09 f0       	breq	.+2      	; 0x843a <ds3231_responding+0x38>
    8438:	80 e0       	ldi	r24, 0x00	; 0
    843a:	89 83       	std	Y+1, r24	; 0x01
    843c:	99 81       	ldd	r25, Y+1	; 0x01
    843e:	81 e0       	ldi	r24, 0x01	; 1
    8440:	89 27       	eor	r24, r25
    8442:	88 23       	and	r24, r24
    8444:	11 f0       	breq	.+4      	; 0x844a <ds3231_responding+0x48>
    8446:	81 e0       	ldi	r24, 0x01	; 1
    8448:	01 c0       	rjmp	.+2      	; 0x844c <ds3231_responding+0x4a>
    844a:	80 e0       	ldi	r24, 0x00	; 0
    844c:	88 23       	and	r24, r24
    844e:	09 f0       	breq	.+2      	; 0x8452 <ds3231_responding+0x50>
    8450:	e1 cf       	rjmp	.-62     	; 0x8414 <ds3231_responding+0x12>
		return(responseReceived);
    8452:	89 81       	ldd	r24, Y+1	; 0x01
	}
    8454:	23 96       	adiw	r28, 0x03	; 3
    8456:	cd bf       	out	0x3d, r28	; 61
    8458:	de bf       	out	0x3e, r29	; 62
    845a:	df 91       	pop	r29
    845c:	cf 91       	pop	r28
    845e:	08 95       	ret

00008460 <ds3231_sync2nearestMinute>:

/* This simple synchronization approach works for all times except 12 midnight. If synchronization
results in the advancement to the next day, then one day would be lost. Instead of introducing that
error, this function merely fails to synchronize at midnight. */
bool ds3231_sync2nearestMinute()
{
    8460:	cf 93       	push	r28
    8462:	df 93       	push	r29
    8464:	cd b7       	in	r28, 0x3d	; 61
    8466:	de b7       	in	r29, 0x3e	; 62
    8468:	61 97       	sbiw	r28, 0x11	; 17
    846a:	cd bf       	out	0x3d, r28	; 61
    846c:	de bf       	out	0x3e, r29	; 62
	uint8_t tries = 10; /* try several times in case of transient bus issues */
    846e:	8a e0       	ldi	r24, 0x0A	; 10
    8470:	89 83       	std	Y+1, r24	; 0x01
	bool err = false;
    8472:	1a 82       	std	Y+2, r1	; 0x02
	uint8_t data[8] = { 0, 0, 0 };
    8474:	28 e0       	ldi	r18, 0x08	; 8
    8476:	ce 01       	movw	r24, r28
    8478:	0a 96       	adiw	r24, 0x0a	; 10
    847a:	fc 01       	movw	r30, r24
    847c:	32 2f       	mov	r19, r18
    847e:	11 92       	st	Z+, r1
    8480:	3a 95       	dec	r19
    8482:	e9 f7       	brne	.-6      	; 0x847e <ds3231_sync2nearestMinute+0x1e>
		
	while(tries-- && (err = (I2C_0_GetData(DS3231_I2C_SLAVE_ADDR, RTC_SECONDS, (uint8_t *)data, 3) != 3)));
    8484:	89 81       	ldd	r24, Y+1	; 0x01
    8486:	9f ef       	ldi	r25, 0xFF	; 255
    8488:	98 0f       	add	r25, r24
    848a:	99 83       	std	Y+1, r25	; 0x01
    848c:	88 23       	and	r24, r24
    848e:	99 f0       	breq	.+38     	; 0x84b6 <ds3231_sync2nearestMinute+0x56>
    8490:	ce 01       	movw	r24, r28
    8492:	0a 96       	adiw	r24, 0x0a	; 10
    8494:	23 e0       	ldi	r18, 0x03	; 3
    8496:	ac 01       	movw	r20, r24
    8498:	60 e0       	ldi	r22, 0x00	; 0
    849a:	80 ed       	ldi	r24, 0xD0	; 208
    849c:	0e 94 23 4b 	call	0x9646	; 0x9646 <I2C_0_GetData>
    84a0:	98 2f       	mov	r25, r24
    84a2:	81 e0       	ldi	r24, 0x01	; 1
    84a4:	93 30       	cpi	r25, 0x03	; 3
    84a6:	09 f4       	brne	.+2      	; 0x84aa <ds3231_sync2nearestMinute+0x4a>
    84a8:	80 e0       	ldi	r24, 0x00	; 0
    84aa:	8a 83       	std	Y+2, r24	; 0x02
    84ac:	8a 81       	ldd	r24, Y+2	; 0x02
    84ae:	88 23       	and	r24, r24
    84b0:	11 f0       	breq	.+4      	; 0x84b6 <ds3231_sync2nearestMinute+0x56>
    84b2:	81 e0       	ldi	r24, 0x01	; 1
    84b4:	01 c0       	rjmp	.+2      	; 0x84b8 <ds3231_sync2nearestMinute+0x58>
    84b6:	80 e0       	ldi	r24, 0x00	; 0
    84b8:	88 23       	and	r24, r24
    84ba:	09 f0       	breq	.+2      	; 0x84be <ds3231_sync2nearestMinute+0x5e>
    84bc:	e3 cf       	rjmp	.-58     	; 0x8484 <ds3231_sync2nearestMinute+0x24>

	if(!err)
    84be:	9a 81       	ldd	r25, Y+2	; 0x02
    84c0:	81 e0       	ldi	r24, 0x01	; 1
    84c2:	89 27       	eor	r24, r25
    84c4:	88 23       	and	r24, r24
    84c6:	09 f4       	brne	.+2      	; 0x84ca <ds3231_sync2nearestMinute+0x6a>
    84c8:	ad c0       	rjmp	.+346    	; 0x8624 <ds3231_sync2nearestMinute+0x1c4>
		uint8_t hour10;
		uint8_t hour;
		bool am_pm;
		bool twelvehour;

		seconds = bcd2dec(data[0]);
    84ca:	8a 85       	ldd	r24, Y+10	; 0x0a
    84cc:	0e 94 91 3b 	call	0x7722	; 0x7722 <_Z7bcd2dech>
    84d0:	8e 83       	std	Y+6, r24	; 0x06
		minutes = bcd2dec(data[1]);
    84d2:	8b 85       	ldd	r24, Y+11	; 0x0b
    84d4:	0e 94 91 3b 	call	0x7722	; 0x7722 <_Z7bcd2dech>
    84d8:	8c 83       	std	Y+4, r24	; 0x04
		am_pm = ((data[2] >> 5) & 0x01);
    84da:	8c 85       	ldd	r24, Y+12	; 0x0c
    84dc:	88 2f       	mov	r24, r24
    84de:	90 e0       	ldi	r25, 0x00	; 0
    84e0:	80 72       	andi	r24, 0x20	; 32
    84e2:	99 27       	eor	r25, r25
    84e4:	21 e0       	ldi	r18, 0x01	; 1
    84e6:	89 2b       	or	r24, r25
    84e8:	09 f4       	brne	.+2      	; 0x84ec <ds3231_sync2nearestMinute+0x8c>
    84ea:	20 e0       	ldi	r18, 0x00	; 0
    84ec:	2f 83       	std	Y+7, r18	; 0x07
		hour10 = ((data[2] >> 4) & 0x01);
    84ee:	8c 85       	ldd	r24, Y+12	; 0x0c
    84f0:	88 2f       	mov	r24, r24
    84f2:	90 e0       	ldi	r25, 0x00	; 0
    84f4:	95 95       	asr	r25
    84f6:	87 95       	ror	r24
    84f8:	95 95       	asr	r25
    84fa:	87 95       	ror	r24
    84fc:	95 95       	asr	r25
    84fe:	87 95       	ror	r24
    8500:	95 95       	asr	r25
    8502:	87 95       	ror	r24
    8504:	81 70       	andi	r24, 0x01	; 1
    8506:	8d 83       	std	Y+5, r24	; 0x05
		hour = (data[2] & 0x0f);
    8508:	8c 85       	ldd	r24, Y+12	; 0x0c
    850a:	8f 70       	andi	r24, 0x0F	; 15
    850c:	88 87       	std	Y+8, r24	; 0x08

		twelvehour = ((data[2] >> 6) & 0x01);
    850e:	8c 85       	ldd	r24, Y+12	; 0x0c
    8510:	88 2f       	mov	r24, r24
    8512:	90 e0       	ldi	r25, 0x00	; 0
    8514:	80 74       	andi	r24, 0x40	; 64
    8516:	99 27       	eor	r25, r25
    8518:	21 e0       	ldi	r18, 0x01	; 1
    851a:	89 2b       	or	r24, r25
    851c:	09 f4       	brne	.+2      	; 0x8520 <ds3231_sync2nearestMinute+0xc0>
    851e:	20 e0       	ldi	r18, 0x00	; 0
    8520:	29 87       	std	Y+9, r18	; 0x09

		if(!twelvehour && am_pm)
    8522:	99 85       	ldd	r25, Y+9	; 0x09
    8524:	81 e0       	ldi	r24, 0x01	; 1
    8526:	89 27       	eor	r24, r25
    8528:	88 23       	and	r24, r24
    852a:	29 f0       	breq	.+10     	; 0x8536 <ds3231_sync2nearestMinute+0xd6>
    852c:	8f 81       	ldd	r24, Y+7	; 0x07
    852e:	88 23       	and	r24, r24
    8530:	11 f0       	breq	.+4      	; 0x8536 <ds3231_sync2nearestMinute+0xd6>
		{
			hour10 = 2;
    8532:	82 e0       	ldi	r24, 0x02	; 2
    8534:	8d 83       	std	Y+5, r24	; 0x05
		}

		hours = 10 * hour10 + hour;
    8536:	8d 81       	ldd	r24, Y+5	; 0x05
    8538:	88 0f       	add	r24, r24
    853a:	98 2f       	mov	r25, r24
    853c:	99 0f       	add	r25, r25
    853e:	99 0f       	add	r25, r25
    8540:	98 0f       	add	r25, r24
    8542:	88 85       	ldd	r24, Y+8	; 0x08
    8544:	89 0f       	add	r24, r25
    8546:	8b 83       	std	Y+3, r24	; 0x03

		if(seconds > 30)
    8548:	8e 81       	ldd	r24, Y+6	; 0x06
    854a:	8f 31       	cpi	r24, 0x1F	; 31
    854c:	78 f0       	brcs	.+30     	; 0x856c <ds3231_sync2nearestMinute+0x10c>
		{
			minutes++;
    854e:	8c 81       	ldd	r24, Y+4	; 0x04
    8550:	8f 5f       	subi	r24, 0xFF	; 255
    8552:	8c 83       	std	Y+4, r24	; 0x04

			if(minutes > 59)
    8554:	8c 81       	ldd	r24, Y+4	; 0x04
    8556:	8c 33       	cpi	r24, 0x3C	; 60
    8558:	48 f0       	brcs	.+18     	; 0x856c <ds3231_sync2nearestMinute+0x10c>
			{
				minutes = 0;
    855a:	1c 82       	std	Y+4, r1	; 0x04
				hours++;
    855c:	8b 81       	ldd	r24, Y+3	; 0x03
    855e:	8f 5f       	subi	r24, 0xFF	; 255
    8560:	8b 83       	std	Y+3, r24	; 0x03

				if(hours > 23) /* Don't attempt to synchronize at midnight */
    8562:	8b 81       	ldd	r24, Y+3	; 0x03
    8564:	88 31       	cpi	r24, 0x18	; 24
    8566:	10 f0       	brcs	.+4      	; 0x856c <ds3231_sync2nearestMinute+0x10c>
				{
					err = true;
    8568:	81 e0       	ldi	r24, 0x01	; 1
    856a:	8a 83       	std	Y+2, r24	; 0x02
				}
			}
		}

		if(!err)
    856c:	9a 81       	ldd	r25, Y+2	; 0x02
    856e:	81 e0       	ldi	r24, 0x01	; 1
    8570:	89 27       	eor	r24, r25
    8572:	88 23       	and	r24, r24
    8574:	09 f4       	brne	.+2      	; 0x8578 <ds3231_sync2nearestMinute+0x118>
    8576:	56 c0       	rjmp	.+172    	; 0x8624 <ds3231_sync2nearestMinute+0x1c4>
		{
			data[0] = 0; /* seconds = 00 */
    8578:	1a 86       	std	Y+10, r1	; 0x0a
			data[1] = dec2bcd(minutes);
    857a:	8c 81       	ldd	r24, Y+4	; 0x04
    857c:	0e 94 b1 3b 	call	0x7762	; 0x7762 <_Z7dec2bcdh>
    8580:	8b 87       	std	Y+11, r24	; 0x0b
			data[2] = 0;
    8582:	1c 86       	std	Y+12, r1	; 0x0c

			if(twelvehour)
    8584:	89 85       	ldd	r24, Y+9	; 0x09
    8586:	88 23       	and	r24, r24
    8588:	81 f0       	breq	.+32     	; 0x85aa <ds3231_sync2nearestMinute+0x14a>
			{
				data[2] |= 0x40; /* set  12-hour bit */
    858a:	8c 85       	ldd	r24, Y+12	; 0x0c
    858c:	80 64       	ori	r24, 0x40	; 64
    858e:	8c 87       	std	Y+12, r24	; 0x0c

				if(hours >= 12)
    8590:	8b 81       	ldd	r24, Y+3	; 0x03
    8592:	8c 30       	cpi	r24, 0x0C	; 12
    8594:	18 f0       	brcs	.+6      	; 0x859c <ds3231_sync2nearestMinute+0x13c>
				{
					data[2] |= 0x20; /* set pm bit */
    8596:	8c 85       	ldd	r24, Y+12	; 0x0c
    8598:	80 62       	ori	r24, 0x20	; 32
    859a:	8c 87       	std	Y+12, r24	; 0x0c
				}

				if(hours >= 10)
    859c:	8b 81       	ldd	r24, Y+3	; 0x03
    859e:	8a 30       	cpi	r24, 0x0A	; 10
    85a0:	88 f0       	brcs	.+34     	; 0x85c4 <ds3231_sync2nearestMinute+0x164>
				{
					data[2] |= 0x10;
    85a2:	8c 85       	ldd	r24, Y+12	; 0x0c
    85a4:	80 61       	ori	r24, 0x10	; 16
    85a6:	8c 87       	std	Y+12, r24	; 0x0c
    85a8:	0d c0       	rjmp	.+26     	; 0x85c4 <ds3231_sync2nearestMinute+0x164>
				}
			}
			else
			{
				if(hours >= 20)
    85aa:	8b 81       	ldd	r24, Y+3	; 0x03
    85ac:	84 31       	cpi	r24, 0x14	; 20
    85ae:	20 f0       	brcs	.+8      	; 0x85b8 <ds3231_sync2nearestMinute+0x158>
				{
					data[2] |= 0x20; /* set 20 bit */
    85b0:	8c 85       	ldd	r24, Y+12	; 0x0c
    85b2:	80 62       	ori	r24, 0x20	; 32
    85b4:	8c 87       	std	Y+12, r24	; 0x0c
    85b6:	06 c0       	rjmp	.+12     	; 0x85c4 <ds3231_sync2nearestMinute+0x164>
				}
				else if(hours >= 10)
    85b8:	8b 81       	ldd	r24, Y+3	; 0x03
    85ba:	8a 30       	cpi	r24, 0x0A	; 10
    85bc:	18 f0       	brcs	.+6      	; 0x85c4 <ds3231_sync2nearestMinute+0x164>
				{
					data[2] |= 0x10; /* set 10 bit */
    85be:	8c 85       	ldd	r24, Y+12	; 0x0c
    85c0:	80 61       	ori	r24, 0x10	; 16
    85c2:	8c 87       	std	Y+12, r24	; 0x0c
				}
			}

			data[2] |= hours % 10;
    85c4:	2c 85       	ldd	r18, Y+12	; 0x0c
    85c6:	9b 81       	ldd	r25, Y+3	; 0x03
    85c8:	8d ec       	ldi	r24, 0xCD	; 205
    85ca:	98 9f       	mul	r25, r24
    85cc:	81 2d       	mov	r24, r1
    85ce:	11 24       	eor	r1, r1
    85d0:	86 95       	lsr	r24
    85d2:	86 95       	lsr	r24
    85d4:	86 95       	lsr	r24
    85d6:	88 0f       	add	r24, r24
    85d8:	38 2f       	mov	r19, r24
    85da:	33 0f       	add	r19, r19
    85dc:	33 0f       	add	r19, r19
    85de:	83 0f       	add	r24, r19
    85e0:	e9 2f       	mov	r30, r25
    85e2:	e8 1b       	sub	r30, r24
    85e4:	8e 2f       	mov	r24, r30
    85e6:	82 2b       	or	r24, r18
    85e8:	8c 87       	std	Y+12, r24	; 0x0c
			
			while(tries-- && (err = (I2C_0_SendData(DS3231_I2C_SLAVE_ADDR, RTC_SECONDS, (uint8_t *)data, 4) != 4)));
    85ea:	89 81       	ldd	r24, Y+1	; 0x01
    85ec:	9f ef       	ldi	r25, 0xFF	; 255
    85ee:	98 0f       	add	r25, r24
    85f0:	99 83       	std	Y+1, r25	; 0x01
    85f2:	88 23       	and	r24, r24
    85f4:	99 f0       	breq	.+38     	; 0x861c <ds3231_sync2nearestMinute+0x1bc>
    85f6:	ce 01       	movw	r24, r28
    85f8:	0a 96       	adiw	r24, 0x0a	; 10
    85fa:	24 e0       	ldi	r18, 0x04	; 4
    85fc:	ac 01       	movw	r20, r24
    85fe:	60 e0       	ldi	r22, 0x00	; 0
    8600:	80 ed       	ldi	r24, 0xD0	; 208
    8602:	0e 94 bb 4a 	call	0x9576	; 0x9576 <I2C_0_SendData>
    8606:	98 2f       	mov	r25, r24
    8608:	81 e0       	ldi	r24, 0x01	; 1
    860a:	94 30       	cpi	r25, 0x04	; 4
    860c:	09 f4       	brne	.+2      	; 0x8610 <ds3231_sync2nearestMinute+0x1b0>
    860e:	80 e0       	ldi	r24, 0x00	; 0
    8610:	8a 83       	std	Y+2, r24	; 0x02
    8612:	8a 81       	ldd	r24, Y+2	; 0x02
    8614:	88 23       	and	r24, r24
    8616:	11 f0       	breq	.+4      	; 0x861c <ds3231_sync2nearestMinute+0x1bc>
    8618:	81 e0       	ldi	r24, 0x01	; 1
    861a:	01 c0       	rjmp	.+2      	; 0x861e <ds3231_sync2nearestMinute+0x1be>
    861c:	80 e0       	ldi	r24, 0x00	; 0
    861e:	88 23       	and	r24, r24
    8620:	09 f0       	breq	.+2      	; 0x8624 <ds3231_sync2nearestMinute+0x1c4>
    8622:	e3 cf       	rjmp	.-58     	; 0x85ea <ds3231_sync2nearestMinute+0x18a>
		}
	}

	return err;
    8624:	8a 81       	ldd	r24, Y+2	; 0x02
}
    8626:	61 96       	adiw	r28, 0x11	; 17
    8628:	cd bf       	out	0x3d, r28	; 61
    862a:	de bf       	out	0x3e, r29	; 62
    862c:	df 91       	pop	r29
    862e:	cf 91       	pop	r28
    8630:	08 95       	ret

00008632 <convertEpochToTimeString>:
/**
 *   Converts an epoch (seconds since 1900)  into a string with format "ddd dd-mon-yyyy hh:mm:ss zzz"
 */
#define THIRTY_YEARS 946684800
char* convertEpochToTimeString(time_t epoch, char* buf, size_t size)
 {
    8632:	cf 93       	push	r28
    8634:	df 93       	push	r29
    8636:	cd b7       	in	r28, 0x3d	; 61
    8638:	de b7       	in	r29, 0x3e	; 62
    863a:	68 97       	sbiw	r28, 0x18	; 24
    863c:	cd bf       	out	0x3d, r28	; 61
    863e:	de bf       	out	0x3e, r29	; 62
    8640:	69 8b       	std	Y+17, r22	; 0x11
    8642:	7a 8b       	std	Y+18, r23	; 0x12
    8644:	8b 8b       	std	Y+19, r24	; 0x13
    8646:	9c 8b       	std	Y+20, r25	; 0x14
    8648:	4d 8b       	std	Y+21, r20	; 0x15
    864a:	5e 8b       	std	Y+22, r21	; 0x16
    864c:	2f 8b       	std	Y+23, r18	; 0x17
    864e:	38 8f       	std	Y+24, r19	; 0x18
   struct tm  ts;
	time_t t = epoch - THIRTY_YEARS;
    8650:	89 89       	ldd	r24, Y+17	; 0x11
    8652:	9a 89       	ldd	r25, Y+18	; 0x12
    8654:	ab 89       	ldd	r26, Y+19	; 0x13
    8656:	bc 89       	ldd	r27, Y+20	; 0x14
    8658:	80 58       	subi	r24, 0x80	; 128
    865a:	93 44       	sbci	r25, 0x43	; 67
    865c:	ad 46       	sbci	r26, 0x6D	; 109
    865e:	b8 43       	sbci	r27, 0x38	; 56
    8660:	8d 87       	std	Y+13, r24	; 0x0d
    8662:	9e 87       	std	Y+14, r25	; 0x0e
    8664:	af 87       	std	Y+15, r26	; 0x0f
    8666:	b8 8b       	std	Y+16, r27	; 0x10

    // Format time, "ddd dd-mon-yyyy hh:mm:ss zzz"
    ts = *localtime(&t);
    8668:	ce 01       	movw	r24, r28
    866a:	0d 96       	adiw	r24, 0x0d	; 13
    866c:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <localtime>
    8670:	2c e0       	ldi	r18, 0x0C	; 12
    8672:	fc 01       	movw	r30, r24
    8674:	ce 01       	movw	r24, r28
    8676:	01 96       	adiw	r24, 0x01	; 1
    8678:	dc 01       	movw	r26, r24
    867a:	01 90       	ld	r0, Z+
    867c:	0d 92       	st	X+, r0
    867e:	2a 95       	dec	r18
    8680:	e1 f7       	brne	.-8      	; 0x867a <convertEpochToTimeString+0x48>
    strftime(buf, size, "%a %d-%b-%Y %H:%M:%S", &ts);
    8682:	6f 89       	ldd	r22, Y+23	; 0x17
    8684:	78 8d       	ldd	r23, Y+24	; 0x18
    8686:	8d 89       	ldd	r24, Y+21	; 0x15
    8688:	9e 89       	ldd	r25, Y+22	; 0x16
    868a:	9e 01       	movw	r18, r28
    868c:	2f 5f       	subi	r18, 0xFF	; 255
    868e:	3f 4f       	sbci	r19, 0xFF	; 255
    8690:	43 ed       	ldi	r20, 0xD3	; 211
    8692:	54 e4       	ldi	r21, 0x44	; 68
    8694:	0e 94 99 02 	call	0x532	; 0x532 <strftime>
   return buf;
    8698:	8d 89       	ldd	r24, Y+21	; 0x15
    869a:	9e 89       	ldd	r25, Y+22	; 0x16
 }
    869c:	68 96       	adiw	r28, 0x18	; 24
    869e:	cd bf       	out	0x3d, r28	; 61
    86a0:	de bf       	out	0x3e, r29	; 62
    86a2:	df 91       	pop	r29
    86a4:	cf 91       	pop	r28
    86a6:	08 95       	ret

000086a8 <_ZN13EepromManagerC1Ev>:
extern uint16_t g_80m_power_level_mW;

extern char g_tempStr[];

/* default constructor */
EepromManager::EepromManager()
    86a8:	cf 93       	push	r28
    86aa:	df 93       	push	r29
    86ac:	00 d0       	rcall	.+0      	; 0x86ae <_ZN13EepromManagerC1Ev+0x6>
    86ae:	cd b7       	in	r28, 0x3d	; 61
    86b0:	de b7       	in	r29, 0x3e	; 62
    86b2:	89 83       	std	Y+1, r24	; 0x01
    86b4:	9a 83       	std	Y+2, r25	; 0x02
{
}   /*EepromManager */
    86b6:	00 00       	nop
    86b8:	0f 90       	pop	r0
    86ba:	0f 90       	pop	r0
    86bc:	df 91       	pop	r29
    86be:	cf 91       	pop	r28
    86c0:	08 95       	ret

000086c2 <_ZN13EepromManagerD1Ev>:

/* default destructor */
EepromManager::~EepromManager()
    86c2:	cf 93       	push	r28
    86c4:	df 93       	push	r29
    86c6:	00 d0       	rcall	.+0      	; 0x86c8 <_ZN13EepromManagerD1Ev+0x6>
    86c8:	cd b7       	in	r28, 0x3d	; 61
    86ca:	de b7       	in	r29, 0x3e	; 62
    86cc:	89 83       	std	Y+1, r24	; 0x01
    86ce:	9a 83       	std	Y+2, r25	; 0x02
{
}   /*~EepromManager */
    86d0:	00 00       	nop
    86d2:	0f 90       	pop	r0
    86d4:	0f 90       	pop	r0
    86d6:	df 91       	pop	r29
    86d8:	cf 91       	pop	r28
    86da:	08 95       	ret

000086dc <_Z21avr_eeprom_write_bytejh>:
#include <avr/io.h>

typedef uint16_t eeprom_addr_t;

// to write
void avr_eeprom_write_byte(eeprom_addr_t index, uint8_t in) {
    86dc:	cf 93       	push	r28
    86de:	df 93       	push	r29
    86e0:	00 d0       	rcall	.+0      	; 0x86e2 <_Z21avr_eeprom_write_bytejh+0x6>
    86e2:	1f 92       	push	r1
    86e4:	cd b7       	in	r28, 0x3d	; 61
    86e6:	de b7       	in	r29, 0x3e	; 62
    86e8:	89 83       	std	Y+1, r24	; 0x01
    86ea:	9a 83       	std	Y+2, r25	; 0x02
    86ec:	6b 83       	std	Y+3, r22	; 0x03
	while (NVMCTRL.STATUS & NVMCTRL_EEBUSY_bm);
    86ee:	80 e0       	ldi	r24, 0x00	; 0
    86f0:	90 e1       	ldi	r25, 0x10	; 16
    86f2:	fc 01       	movw	r30, r24
    86f4:	82 81       	ldd	r24, Z+2	; 0x02
    86f6:	88 2f       	mov	r24, r24
    86f8:	90 e0       	ldi	r25, 0x00	; 0
    86fa:	82 70       	andi	r24, 0x02	; 2
    86fc:	99 27       	eor	r25, r25
    86fe:	21 e0       	ldi	r18, 0x01	; 1
    8700:	89 2b       	or	r24, r25
    8702:	09 f4       	brne	.+2      	; 0x8706 <_Z21avr_eeprom_write_bytejh+0x2a>
    8704:	20 e0       	ldi	r18, 0x00	; 0
    8706:	22 23       	and	r18, r18
    8708:	09 f0       	breq	.+2      	; 0x870c <_Z21avr_eeprom_write_bytejh+0x30>
    870a:	f1 cf       	rjmp	.-30     	; 0x86ee <_Z21avr_eeprom_write_bytejh+0x12>
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_EEERWR_gc);
    870c:	8d e9       	ldi	r24, 0x9D	; 157
    870e:	93 e1       	ldi	r25, 0x13	; 19
    8710:	84 bf       	out	0x34, r24	; 52
    8712:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
	*(uint8_t*)(eeprom_addr_t)(MAPPED_EEPROM_START+index) = in;
    8716:	89 81       	ldd	r24, Y+1	; 0x01
    8718:	9a 81       	ldd	r25, Y+2	; 0x02
    871a:	9c 5e       	subi	r25, 0xEC	; 236
    871c:	2b 81       	ldd	r18, Y+3	; 0x03
    871e:	fc 01       	movw	r30, r24
    8720:	20 83       	st	Z, r18
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_NONE_gc);
    8722:	8d e9       	ldi	r24, 0x9D	; 157
    8724:	90 e0       	ldi	r25, 0x00	; 0
    8726:	84 bf       	out	0x34, r24	; 52
    8728:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
}
    872c:	00 00       	nop
    872e:	23 96       	adiw	r28, 0x03	; 3
    8730:	cd bf       	out	0x3d, r28	; 61
    8732:	de bf       	out	0x3e, r29	; 62
    8734:	df 91       	pop	r29
    8736:	cf 91       	pop	r28
    8738:	08 95       	ret

0000873a <_Z21avr_eeprom_write_wordjj>:

void avr_eeprom_write_word(eeprom_addr_t index, uint16_t in) {
    873a:	cf 93       	push	r28
    873c:	df 93       	push	r29
    873e:	00 d0       	rcall	.+0      	; 0x8740 <_Z21avr_eeprom_write_wordjj+0x6>
    8740:	00 d0       	rcall	.+0      	; 0x8742 <_Z21avr_eeprom_write_wordjj+0x8>
    8742:	cd b7       	in	r28, 0x3d	; 61
    8744:	de b7       	in	r29, 0x3e	; 62
    8746:	89 83       	std	Y+1, r24	; 0x01
    8748:	9a 83       	std	Y+2, r25	; 0x02
    874a:	6b 83       	std	Y+3, r22	; 0x03
    874c:	7c 83       	std	Y+4, r23	; 0x04
	while (NVMCTRL.STATUS & NVMCTRL_EEBUSY_bm);
    874e:	80 e0       	ldi	r24, 0x00	; 0
    8750:	90 e1       	ldi	r25, 0x10	; 16
    8752:	fc 01       	movw	r30, r24
    8754:	82 81       	ldd	r24, Z+2	; 0x02
    8756:	88 2f       	mov	r24, r24
    8758:	90 e0       	ldi	r25, 0x00	; 0
    875a:	82 70       	andi	r24, 0x02	; 2
    875c:	99 27       	eor	r25, r25
    875e:	21 e0       	ldi	r18, 0x01	; 1
    8760:	89 2b       	or	r24, r25
    8762:	09 f4       	brne	.+2      	; 0x8766 <_Z21avr_eeprom_write_wordjj+0x2c>
    8764:	20 e0       	ldi	r18, 0x00	; 0
    8766:	22 23       	and	r18, r18
    8768:	09 f0       	breq	.+2      	; 0x876c <_Z21avr_eeprom_write_wordjj+0x32>
    876a:	f1 cf       	rjmp	.-30     	; 0x874e <_Z21avr_eeprom_write_wordjj+0x14>
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_EEERWR_gc);
    876c:	8d e9       	ldi	r24, 0x9D	; 157
    876e:	93 e1       	ldi	r25, 0x13	; 19
    8770:	84 bf       	out	0x34, r24	; 52
    8772:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
	*(uint16_t*)(eeprom_addr_t)(MAPPED_EEPROM_START+index) = in;
    8776:	89 81       	ldd	r24, Y+1	; 0x01
    8778:	9a 81       	ldd	r25, Y+2	; 0x02
    877a:	9c 5e       	subi	r25, 0xEC	; 236
    877c:	9c 01       	movw	r18, r24
    877e:	8b 81       	ldd	r24, Y+3	; 0x03
    8780:	9c 81       	ldd	r25, Y+4	; 0x04
    8782:	f9 01       	movw	r30, r18
    8784:	80 83       	st	Z, r24
    8786:	91 83       	std	Z+1, r25	; 0x01
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_NONE_gc);
    8788:	8d e9       	ldi	r24, 0x9D	; 157
    878a:	90 e0       	ldi	r25, 0x00	; 0
    878c:	84 bf       	out	0x34, r24	; 52
    878e:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
}
    8792:	00 00       	nop
    8794:	24 96       	adiw	r28, 0x04	; 4
    8796:	cd bf       	out	0x3d, r28	; 61
    8798:	de bf       	out	0x3e, r29	; 62
    879a:	df 91       	pop	r29
    879c:	cf 91       	pop	r28
    879e:	08 95       	ret

000087a0 <_Z22avr_eeprom_write_dwordjm>:

void avr_eeprom_write_dword(eeprom_addr_t index, uint32_t in) {
    87a0:	cf 93       	push	r28
    87a2:	df 93       	push	r29
    87a4:	cd b7       	in	r28, 0x3d	; 61
    87a6:	de b7       	in	r29, 0x3e	; 62
    87a8:	26 97       	sbiw	r28, 0x06	; 6
    87aa:	cd bf       	out	0x3d, r28	; 61
    87ac:	de bf       	out	0x3e, r29	; 62
    87ae:	89 83       	std	Y+1, r24	; 0x01
    87b0:	9a 83       	std	Y+2, r25	; 0x02
    87b2:	4b 83       	std	Y+3, r20	; 0x03
    87b4:	5c 83       	std	Y+4, r21	; 0x04
    87b6:	6d 83       	std	Y+5, r22	; 0x05
    87b8:	7e 83       	std	Y+6, r23	; 0x06
	while (NVMCTRL.STATUS & NVMCTRL_EEBUSY_bm);
    87ba:	80 e0       	ldi	r24, 0x00	; 0
    87bc:	90 e1       	ldi	r25, 0x10	; 16
    87be:	fc 01       	movw	r30, r24
    87c0:	82 81       	ldd	r24, Z+2	; 0x02
    87c2:	88 2f       	mov	r24, r24
    87c4:	90 e0       	ldi	r25, 0x00	; 0
    87c6:	82 70       	andi	r24, 0x02	; 2
    87c8:	99 27       	eor	r25, r25
    87ca:	21 e0       	ldi	r18, 0x01	; 1
    87cc:	89 2b       	or	r24, r25
    87ce:	09 f4       	brne	.+2      	; 0x87d2 <_Z22avr_eeprom_write_dwordjm+0x32>
    87d0:	20 e0       	ldi	r18, 0x00	; 0
    87d2:	22 23       	and	r18, r18
    87d4:	09 f0       	breq	.+2      	; 0x87d8 <_Z22avr_eeprom_write_dwordjm+0x38>
    87d6:	f1 cf       	rjmp	.-30     	; 0x87ba <_Z22avr_eeprom_write_dwordjm+0x1a>
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_EEERWR_gc);
    87d8:	8d e9       	ldi	r24, 0x9D	; 157
    87da:	93 e1       	ldi	r25, 0x13	; 19
    87dc:	84 bf       	out	0x34, r24	; 52
    87de:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
	*(uint32_t*)(eeprom_addr_t)(MAPPED_EEPROM_START+index) = in;
    87e2:	89 81       	ldd	r24, Y+1	; 0x01
    87e4:	9a 81       	ldd	r25, Y+2	; 0x02
    87e6:	9c 5e       	subi	r25, 0xEC	; 236
    87e8:	9c 01       	movw	r18, r24
    87ea:	8b 81       	ldd	r24, Y+3	; 0x03
    87ec:	9c 81       	ldd	r25, Y+4	; 0x04
    87ee:	ad 81       	ldd	r26, Y+5	; 0x05
    87f0:	be 81       	ldd	r27, Y+6	; 0x06
    87f2:	f9 01       	movw	r30, r18
    87f4:	80 83       	st	Z, r24
    87f6:	91 83       	std	Z+1, r25	; 0x01
    87f8:	a2 83       	std	Z+2, r26	; 0x02
    87fa:	b3 83       	std	Z+3, r27	; 0x03
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_NONE_gc);
    87fc:	8d e9       	ldi	r24, 0x9D	; 157
    87fe:	90 e0       	ldi	r25, 0x00	; 0
    8800:	84 bf       	out	0x34, r24	; 52
    8802:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
}
    8806:	00 00       	nop
    8808:	26 96       	adiw	r28, 0x06	; 6
    880a:	cd bf       	out	0x3d, r28	; 61
    880c:	de bf       	out	0x3e, r29	; 62
    880e:	df 91       	pop	r29
    8810:	cf 91       	pop	r28
    8812:	08 95       	ret

00008814 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>:

void EepromManager::updateEEPROMVar(EE_var_t v, void* val)
{
    8814:	cf 93       	push	r28
    8816:	df 93       	push	r29
    8818:	cd b7       	in	r28, 0x3d	; 61
    881a:	de b7       	in	r29, 0x3e	; 62
    881c:	60 97       	sbiw	r28, 0x10	; 16
    881e:	cd bf       	out	0x3d, r28	; 61
    8820:	de bf       	out	0x3e, r29	; 62
    8822:	8c 87       	std	Y+12, r24	; 0x0c
    8824:	9d 87       	std	Y+13, r25	; 0x0d
    8826:	6e 87       	std	Y+14, r22	; 0x0e
    8828:	4f 87       	std	Y+15, r20	; 0x0f
    882a:	58 8b       	std	Y+16, r21	; 0x10
	if(!val)
    882c:	8f 85       	ldd	r24, Y+15	; 0x0f
    882e:	98 89       	ldd	r25, Y+16	; 0x10
    8830:	89 2b       	or	r24, r25
    8832:	09 f4       	brne	.+2      	; 0x8836 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x22>
    8834:	e8 c0       	rjmp	.+464    	; 0x8a06 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x1f2>
	{
		return;
	}

	switch(v)
    8836:	8e 85       	ldd	r24, Y+14	; 0x0e
    8838:	88 2f       	mov	r24, r24
    883a:	90 e0       	ldi	r25, 0x00	; 0
    883c:	09 2e       	mov	r0, r25
    883e:	00 0c       	add	r0, r0
    8840:	aa 0b       	sbc	r26, r26
    8842:	bb 0b       	sbc	r27, r27
    8844:	40 e0       	ldi	r20, 0x00	; 0
    8846:	50 e0       	ldi	r21, 0x00	; 0
    8848:	23 e3       	ldi	r18, 0x33	; 51
    884a:	30 e0       	ldi	r19, 0x00	; 0
    884c:	84 1b       	sub	r24, r20
    884e:	95 0b       	sbc	r25, r21
    8850:	28 17       	cp	r18, r24
    8852:	39 07       	cpc	r19, r25
    8854:	08 f4       	brcc	.+2      	; 0x8858 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x44>
    8856:	d9 c0       	rjmp	.+434    	; 0x8a0a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x1f6>
    8858:	8b 57       	subi	r24, 0x7B	; 123
    885a:	9f 4f       	sbci	r25, 0xFF	; 255
    885c:	fc 01       	movw	r30, r24
    885e:	0c 94 43 72 	jmp	0xe486	; 0xe486 <__tablejump2__>
	{
		case Frequency:
		{
			avr_eeprom_write_dword(Frequency, *(uint32_t*)val);
    8862:	8f 85       	ldd	r24, Y+15	; 0x0f
    8864:	98 89       	ldd	r25, Y+16	; 0x10
    8866:	fc 01       	movw	r30, r24
    8868:	80 81       	ld	r24, Z
    886a:	91 81       	ldd	r25, Z+1	; 0x01
    886c:	a2 81       	ldd	r26, Z+2	; 0x02
    886e:	b3 81       	ldd	r27, Z+3	; 0x03
    8870:	ac 01       	movw	r20, r24
    8872:	bd 01       	movw	r22, r26
    8874:	8b e2       	ldi	r24, 0x2B	; 43
    8876:	90 e0       	ldi	r25, 0x00	; 0
    8878:	0e 94 d0 43 	call	0x87a0	; 0x87a0 <_Z22avr_eeprom_write_dwordjm>
		}
		break;
    887c:	c7 c0       	rjmp	.+398    	; 0x8a0c <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x1f8>
		
		case RTTY_offset:
		{
			avr_eeprom_write_dword(RTTY_offset, *(uint32_t*)val);
    887e:	8f 85       	ldd	r24, Y+15	; 0x0f
    8880:	98 89       	ldd	r25, Y+16	; 0x10
    8882:	fc 01       	movw	r30, r24
    8884:	80 81       	ld	r24, Z
    8886:	91 81       	ldd	r25, Z+1	; 0x01
    8888:	a2 81       	ldd	r26, Z+2	; 0x02
    888a:	b3 81       	ldd	r27, Z+3	; 0x03
    888c:	ac 01       	movw	r20, r24
    888e:	bd 01       	movw	r22, r26
    8890:	8f e2       	ldi	r24, 0x2F	; 47
    8892:	90 e0       	ldi	r25, 0x00	; 0
    8894:	0e 94 d0 43 	call	0x87a0	; 0x87a0 <_Z22avr_eeprom_write_dwordjm>
		}
		break;
    8898:	b9 c0       	rjmp	.+370    	; 0x8a0c <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x1f8>
		
		case RF_Power:
		{
			avr_eeprom_write_word(RF_Power, *(uint32_t*)val);			
    889a:	8f 85       	ldd	r24, Y+15	; 0x0f
    889c:	98 89       	ldd	r25, Y+16	; 0x10
    889e:	fc 01       	movw	r30, r24
    88a0:	80 81       	ld	r24, Z
    88a2:	91 81       	ldd	r25, Z+1	; 0x01
    88a4:	a2 81       	ldd	r26, Z+2	; 0x02
    88a6:	b3 81       	ldd	r27, Z+3	; 0x03
    88a8:	bc 01       	movw	r22, r24
    88aa:	83 e3       	ldi	r24, 0x33	; 51
    88ac:	90 e0       	ldi	r25, 0x00	; 0
    88ae:	0e 94 9d 43 	call	0x873a	; 0x873a <_Z21avr_eeprom_write_wordjj>
		}
		break;
    88b2:	ac c0       	rjmp	.+344    	; 0x8a0c <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x1f8>
		
		case StationID_text:
		{
			char* char_addr = (char*)val;
    88b4:	8f 85       	ldd	r24, Y+15	; 0x0f
    88b6:	98 89       	ldd	r25, Y+16	; 0x10
    88b8:	89 83       	std	Y+1, r24	; 0x01
    88ba:	9a 83       	std	Y+2, r25	; 0x02
			char c = *char_addr++;
    88bc:	89 81       	ldd	r24, Y+1	; 0x01
    88be:	9a 81       	ldd	r25, Y+2	; 0x02
    88c0:	9c 01       	movw	r18, r24
    88c2:	2f 5f       	subi	r18, 0xFF	; 255
    88c4:	3f 4f       	sbci	r19, 0xFF	; 255
    88c6:	29 83       	std	Y+1, r18	; 0x01
    88c8:	3a 83       	std	Y+2, r19	; 0x02
    88ca:	fc 01       	movw	r30, r24
    88cc:	80 81       	ld	r24, Z
    88ce:	8b 83       	std	Y+3, r24	; 0x03
			
			eeprom_addr_t j = (eeprom_addr_t)StationID_text;
    88d0:	8a e0       	ldi	r24, 0x0A	; 10
    88d2:	90 e0       	ldi	r25, 0x00	; 0
    88d4:	8c 83       	std	Y+4, r24	; 0x04
    88d6:	9d 83       	std	Y+5, r25	; 0x05

			while(c)
    88d8:	8b 81       	ldd	r24, Y+3	; 0x03
    88da:	88 23       	and	r24, r24
    88dc:	a9 f0       	breq	.+42     	; 0x8908 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0xf4>
			{
				avr_eeprom_write_byte(j++, c);
    88de:	8c 81       	ldd	r24, Y+4	; 0x04
    88e0:	9d 81       	ldd	r25, Y+5	; 0x05
    88e2:	9c 01       	movw	r18, r24
    88e4:	2f 5f       	subi	r18, 0xFF	; 255
    88e6:	3f 4f       	sbci	r19, 0xFF	; 255
    88e8:	2c 83       	std	Y+4, r18	; 0x04
    88ea:	3d 83       	std	Y+5, r19	; 0x05
    88ec:	6b 81       	ldd	r22, Y+3	; 0x03
    88ee:	0e 94 6e 43 	call	0x86dc	; 0x86dc <_Z21avr_eeprom_write_bytejh>
				c = *char_addr++;
    88f2:	89 81       	ldd	r24, Y+1	; 0x01
    88f4:	9a 81       	ldd	r25, Y+2	; 0x02
    88f6:	9c 01       	movw	r18, r24
    88f8:	2f 5f       	subi	r18, 0xFF	; 255
    88fa:	3f 4f       	sbci	r19, 0xFF	; 255
    88fc:	29 83       	std	Y+1, r18	; 0x01
    88fe:	3a 83       	std	Y+2, r19	; 0x02
    8900:	fc 01       	movw	r30, r24
    8902:	80 81       	ld	r24, Z
    8904:	8b 83       	std	Y+3, r24	; 0x03
			char* char_addr = (char*)val;
			char c = *char_addr++;
			
			eeprom_addr_t j = (eeprom_addr_t)StationID_text;

			while(c)
    8906:	e8 cf       	rjmp	.-48     	; 0x88d8 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0xc4>
			{
				avr_eeprom_write_byte(j++, c);
				c = *char_addr++;
			}

			avr_eeprom_write_byte(j, 0);
    8908:	8c 81       	ldd	r24, Y+4	; 0x04
    890a:	9d 81       	ldd	r25, Y+5	; 0x05
    890c:	60 e0       	ldi	r22, 0x00	; 0
    890e:	0e 94 6e 43 	call	0x86dc	; 0x86dc <_Z21avr_eeprom_write_bytejh>
		}
		break;
    8912:	7c c0       	rjmp	.+248    	; 0x8a0c <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x1f8>

		case UnlockCode:
		{
			uint8_t* uint8_addr = (uint8_t*)val;
    8914:	8f 85       	ldd	r24, Y+15	; 0x0f
    8916:	98 89       	ldd	r25, Y+16	; 0x10
    8918:	8e 83       	std	Y+6, r24	; 0x06
    891a:	9f 83       	std	Y+7, r25	; 0x07
			uint8_t c = *uint8_addr++;
    891c:	8e 81       	ldd	r24, Y+6	; 0x06
    891e:	9f 81       	ldd	r25, Y+7	; 0x07
    8920:	9c 01       	movw	r18, r24
    8922:	2f 5f       	subi	r18, 0xFF	; 255
    8924:	3f 4f       	sbci	r19, 0xFF	; 255
    8926:	2e 83       	std	Y+6, r18	; 0x06
    8928:	3f 83       	std	Y+7, r19	; 0x07
    892a:	fc 01       	movw	r30, r24
    892c:	80 81       	ld	r24, Z
    892e:	88 87       	std	Y+8, r24	; 0x08
			int i = 0;
    8930:	1a 86       	std	Y+10, r1	; 0x0a
    8932:	1b 86       	std	Y+11, r1	; 0x0b
			uint8_t j = (uint8_t)UnlockCode;
    8934:	8f e1       	ldi	r24, 0x1F	; 31
    8936:	89 87       	std	Y+9, r24	; 0x09
			
			while(c && (i < MAX_UNLOCK_CODE_LENGTH))
    8938:	88 85       	ldd	r24, Y+8	; 0x08
    893a:	88 23       	and	r24, r24
    893c:	c1 f0       	breq	.+48     	; 0x896e <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x15a>
    893e:	8a 85       	ldd	r24, Y+10	; 0x0a
    8940:	9b 85       	ldd	r25, Y+11	; 0x0b
    8942:	08 97       	sbiw	r24, 0x08	; 8
    8944:	a4 f4       	brge	.+40     	; 0x896e <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x15a>
			{
				avr_eeprom_write_byte(j++, c);
    8946:	89 85       	ldd	r24, Y+9	; 0x09
    8948:	91 e0       	ldi	r25, 0x01	; 1
    894a:	98 0f       	add	r25, r24
    894c:	99 87       	std	Y+9, r25	; 0x09
    894e:	88 2f       	mov	r24, r24
    8950:	90 e0       	ldi	r25, 0x00	; 0
    8952:	68 85       	ldd	r22, Y+8	; 0x08
    8954:	0e 94 6e 43 	call	0x86dc	; 0x86dc <_Z21avr_eeprom_write_bytejh>
				c = *uint8_addr++;
    8958:	8e 81       	ldd	r24, Y+6	; 0x06
    895a:	9f 81       	ldd	r25, Y+7	; 0x07
    895c:	9c 01       	movw	r18, r24
    895e:	2f 5f       	subi	r18, 0xFF	; 255
    8960:	3f 4f       	sbci	r19, 0xFF	; 255
    8962:	2e 83       	std	Y+6, r18	; 0x06
    8964:	3f 83       	std	Y+7, r19	; 0x07
    8966:	fc 01       	movw	r30, r24
    8968:	80 81       	ld	r24, Z
    896a:	88 87       	std	Y+8, r24	; 0x08
			uint8_t* uint8_addr = (uint8_t*)val;
			uint8_t c = *uint8_addr++;
			int i = 0;
			uint8_t j = (uint8_t)UnlockCode;
			
			while(c && (i < MAX_UNLOCK_CODE_LENGTH))
    896c:	e5 cf       	rjmp	.-54     	; 0x8938 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x124>
			{
				avr_eeprom_write_byte(j++, c);
				c = *uint8_addr++;
			}

			avr_eeprom_write_byte(j, 0);
    896e:	89 85       	ldd	r24, Y+9	; 0x09
    8970:	88 2f       	mov	r24, r24
    8972:	90 e0       	ldi	r25, 0x00	; 0
    8974:	60 e0       	ldi	r22, 0x00	; 0
    8976:	0e 94 6e 43 	call	0x86dc	; 0x86dc <_Z21avr_eeprom_write_bytejh>
		}
		break;
    897a:	48 c0       	rjmp	.+144    	; 0x8a0c <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x1f8>

		case Id_codespeed:
		{
			avr_eeprom_write_byte(Id_codespeed, *(uint8_t*)val);
    897c:	8f 85       	ldd	r24, Y+15	; 0x0f
    897e:	98 89       	ldd	r25, Y+16	; 0x10
    8980:	fc 01       	movw	r30, r24
    8982:	80 81       	ld	r24, Z
    8984:	68 2f       	mov	r22, r24
    8986:	88 e2       	ldi	r24, 0x28	; 40
    8988:	90 e0       	ldi	r25, 0x00	; 0
    898a:	0e 94 6e 43 	call	0x86dc	; 0x86dc <_Z21avr_eeprom_write_bytejh>
		}
		break;
    898e:	3e c0       	rjmp	.+124    	; 0x8a0c <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x1f8>

		case Fox_setting:
		{
			avr_eeprom_write_byte(Fox_setting, *(uint8_t*)val);
    8990:	8f 85       	ldd	r24, Y+15	; 0x0f
    8992:	98 89       	ldd	r25, Y+16	; 0x10
    8994:	fc 01       	movw	r30, r24
    8996:	80 81       	ld	r24, Z
    8998:	68 2f       	mov	r22, r24
    899a:	89 e2       	ldi	r24, 0x29	; 41
    899c:	90 e0       	ldi	r25, 0x00	; 0
    899e:	0e 94 6e 43 	call	0x86dc	; 0x86dc <_Z21avr_eeprom_write_bytejh>
		}
		break;
    89a2:	34 c0       	rjmp	.+104    	; 0x8a0c <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x1f8>

		case Event_start_epoch:
		{
			avr_eeprom_write_dword(Event_start_epoch, *(uint32_t*)val);
    89a4:	8f 85       	ldd	r24, Y+15	; 0x0f
    89a6:	98 89       	ldd	r25, Y+16	; 0x10
    89a8:	fc 01       	movw	r30, r24
    89aa:	80 81       	ld	r24, Z
    89ac:	91 81       	ldd	r25, Z+1	; 0x01
    89ae:	a2 81       	ldd	r26, Z+2	; 0x02
    89b0:	b3 81       	ldd	r27, Z+3	; 0x03
    89b2:	ac 01       	movw	r20, r24
    89b4:	bd 01       	movw	r22, r26
    89b6:	82 e0       	ldi	r24, 0x02	; 2
    89b8:	90 e0       	ldi	r25, 0x00	; 0
    89ba:	0e 94 d0 43 	call	0x87a0	; 0x87a0 <_Z22avr_eeprom_write_dwordjm>
		}
		break;
    89be:	26 c0       	rjmp	.+76     	; 0x8a0c <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x1f8>

		case Event_finish_epoch:
		{
			avr_eeprom_write_dword(Event_finish_epoch, *(uint32_t*)val);
    89c0:	8f 85       	ldd	r24, Y+15	; 0x0f
    89c2:	98 89       	ldd	r25, Y+16	; 0x10
    89c4:	fc 01       	movw	r30, r24
    89c6:	80 81       	ld	r24, Z
    89c8:	91 81       	ldd	r25, Z+1	; 0x01
    89ca:	a2 81       	ldd	r26, Z+2	; 0x02
    89cc:	b3 81       	ldd	r27, Z+3	; 0x03
    89ce:	ac 01       	movw	r20, r24
    89d0:	bd 01       	movw	r22, r26
    89d2:	86 e0       	ldi	r24, 0x06	; 6
    89d4:	90 e0       	ldi	r25, 0x00	; 0
    89d6:	0e 94 d0 43 	call	0x87a0	; 0x87a0 <_Z22avr_eeprom_write_dwordjm>
		}
		break;
    89da:	18 c0       	rjmp	.+48     	; 0x8a0c <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x1f8>

		case Utc_offset:
		{
			avr_eeprom_write_byte(Utc_offset, *(uint8_t*)val);
    89dc:	8f 85       	ldd	r24, Y+15	; 0x0f
    89de:	98 89       	ldd	r25, Y+16	; 0x10
    89e0:	fc 01       	movw	r30, r24
    89e2:	80 81       	ld	r24, Z
    89e4:	68 2f       	mov	r22, r24
    89e6:	8a e2       	ldi	r24, 0x2A	; 42
    89e8:	90 e0       	ldi	r25, 0x00	; 0
    89ea:	0e 94 6e 43 	call	0x86dc	; 0x86dc <_Z21avr_eeprom_write_bytejh>
		}
		break;
    89ee:	0e c0       	rjmp	.+28     	; 0x8a0c <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x1f8>

		case Eeprom_initialization_flag:
		{
			avr_eeprom_write_word(Eeprom_initialization_flag, *(uint16_t*)val);
    89f0:	8f 85       	ldd	r24, Y+15	; 0x0f
    89f2:	98 89       	ldd	r25, Y+16	; 0x10
    89f4:	fc 01       	movw	r30, r24
    89f6:	80 81       	ld	r24, Z
    89f8:	91 81       	ldd	r25, Z+1	; 0x01
    89fa:	bc 01       	movw	r22, r24
    89fc:	80 e0       	ldi	r24, 0x00	; 0
    89fe:	90 e0       	ldi	r25, 0x00	; 0
    8a00:	0e 94 9d 43 	call	0x873a	; 0x873a <_Z21avr_eeprom_write_wordjj>
		}
		break;
    8a04:	03 c0       	rjmp	.+6      	; 0x8a0c <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x1f8>

void EepromManager::updateEEPROMVar(EE_var_t v, void* val)
{
	if(!val)
	{
		return;
    8a06:	00 00       	nop
    8a08:	01 c0       	rjmp	.+2      	; 0x8a0c <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x1f8>

		default:
		{

		}
		break;
    8a0a:	00 00       	nop
	}
}
    8a0c:	60 96       	adiw	r28, 0x10	; 16
    8a0e:	cd bf       	out	0x3d, r28	; 61
    8a10:	de bf       	out	0x3e, r29	; 62
    8a12:	df 91       	pop	r29
    8a14:	cf 91       	pop	r28
    8a16:	08 95       	ret

00008a18 <_ZN13EepromManager13saveAllEEPROMEv>:

/** 
 * Store any changed EEPROM variables
 */
void EepromManager::saveAllEEPROM(void)
{
    8a18:	0f 93       	push	r16
    8a1a:	1f 93       	push	r17
    8a1c:	cf 93       	push	r28
    8a1e:	df 93       	push	r29
    8a20:	00 d0       	rcall	.+0      	; 0x8a22 <_ZN13EepromManager13saveAllEEPROMEv+0xa>
    8a22:	00 d0       	rcall	.+0      	; 0x8a24 <_ZN13EepromManager13saveAllEEPROMEv+0xc>
    8a24:	cd b7       	in	r28, 0x3d	; 61
    8a26:	de b7       	in	r29, 0x3e	; 62
    8a28:	8b 83       	std	Y+3, r24	; 0x03
    8a2a:	9c 83       	std	Y+4, r25	; 0x04
	uint16_t i;
	
	if(g_id_codespeed != eeprom_read_byte(&(EepromManager::ee_vars.id_codespeed)))
    8a2c:	88 e2       	ldi	r24, 0x28	; 40
    8a2e:	90 e0       	ldi	r25, 0x00	; 0
    8a30:	0e 94 8e 78 	call	0xf11c	; 0xf11c <eeprom_read_byte>
    8a34:	28 2f       	mov	r18, r24
    8a36:	90 91 0b 40 	lds	r25, 0x400B	; 0x80400b <g_id_codespeed>
    8a3a:	81 e0       	ldi	r24, 0x01	; 1
    8a3c:	29 17       	cp	r18, r25
    8a3e:	09 f4       	brne	.+2      	; 0x8a42 <_ZN13EepromManager13saveAllEEPROMEv+0x2a>
    8a40:	80 e0       	ldi	r24, 0x00	; 0
    8a42:	88 23       	and	r24, r24
    8a44:	39 f0       	breq	.+14     	; 0x8a54 <_ZN13EepromManager13saveAllEEPROMEv+0x3c>
	{
		updateEEPROMVar(Id_codespeed, (void*)&g_id_codespeed);
    8a46:	8b 81       	ldd	r24, Y+3	; 0x03
    8a48:	9c 81       	ldd	r25, Y+4	; 0x04
    8a4a:	4b e0       	ldi	r20, 0x0B	; 11
    8a4c:	50 e4       	ldi	r21, 0x40	; 64
    8a4e:	68 e2       	ldi	r22, 0x28	; 40
    8a50:	0e 94 0a 44 	call	0x8814	; 0x8814 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
	
	if(g_fox != eeprom_read_byte(&(EepromManager::ee_vars.fox_setting)))
    8a54:	89 e2       	ldi	r24, 0x29	; 41
    8a56:	90 e0       	ldi	r25, 0x00	; 0
    8a58:	0e 94 8e 78 	call	0xf11c	; 0xf11c <eeprom_read_byte>
    8a5c:	28 2f       	mov	r18, r24
    8a5e:	90 91 1b 40 	lds	r25, 0x401B	; 0x80401b <g_fox>
    8a62:	81 e0       	ldi	r24, 0x01	; 1
    8a64:	29 17       	cp	r18, r25
    8a66:	09 f4       	brne	.+2      	; 0x8a6a <_ZN13EepromManager13saveAllEEPROMEv+0x52>
    8a68:	80 e0       	ldi	r24, 0x00	; 0
    8a6a:	88 23       	and	r24, r24
    8a6c:	39 f0       	breq	.+14     	; 0x8a7c <_ZN13EepromManager13saveAllEEPROMEv+0x64>
	{
		updateEEPROMVar(Fox_setting, (void*)&g_fox);
    8a6e:	8b 81       	ldd	r24, Y+3	; 0x03
    8a70:	9c 81       	ldd	r25, Y+4	; 0x04
    8a72:	4b e1       	ldi	r20, 0x1B	; 27
    8a74:	50 e4       	ldi	r21, 0x40	; 64
    8a76:	69 e2       	ldi	r22, 0x29	; 41
    8a78:	0e 94 0a 44 	call	0x8814	; 0x8814 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
	
	if(g_event_start_epoch != eeprom_read_dword(&(EepromManager::ee_vars.event_start_epoch)))
    8a7c:	82 e0       	ldi	r24, 0x02	; 2
    8a7e:	90 e0       	ldi	r25, 0x00	; 0
    8a80:	0e 94 96 78 	call	0xf12c	; 0xf12c <eeprom_read_dword>
    8a84:	9b 01       	movw	r18, r22
    8a86:	ac 01       	movw	r20, r24
    8a88:	80 91 bc 47 	lds	r24, 0x47BC	; 0x8047bc <g_event_start_epoch>
    8a8c:	90 91 bd 47 	lds	r25, 0x47BD	; 0x8047bd <g_event_start_epoch+0x1>
    8a90:	a0 91 be 47 	lds	r26, 0x47BE	; 0x8047be <g_event_start_epoch+0x2>
    8a94:	b0 91 bf 47 	lds	r27, 0x47BF	; 0x8047bf <g_event_start_epoch+0x3>
    8a98:	61 e0       	ldi	r22, 0x01	; 1
    8a9a:	28 17       	cp	r18, r24
    8a9c:	39 07       	cpc	r19, r25
    8a9e:	4a 07       	cpc	r20, r26
    8aa0:	5b 07       	cpc	r21, r27
    8aa2:	09 f4       	brne	.+2      	; 0x8aa6 <_ZN13EepromManager13saveAllEEPROMEv+0x8e>
    8aa4:	60 e0       	ldi	r22, 0x00	; 0
    8aa6:	66 23       	and	r22, r22
    8aa8:	39 f0       	breq	.+14     	; 0x8ab8 <_ZN13EepromManager13saveAllEEPROMEv+0xa0>
	{
		updateEEPROMVar(Event_start_epoch, (void*)&g_event_start_epoch);
    8aaa:	8b 81       	ldd	r24, Y+3	; 0x03
    8aac:	9c 81       	ldd	r25, Y+4	; 0x04
    8aae:	4c eb       	ldi	r20, 0xBC	; 188
    8ab0:	57 e4       	ldi	r21, 0x47	; 71
    8ab2:	62 e0       	ldi	r22, 0x02	; 2
    8ab4:	0e 94 0a 44 	call	0x8814	; 0x8814 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
	
	if(g_event_finish_epoch != eeprom_read_dword(&(EepromManager::ee_vars.event_finish_epoch)))
    8ab8:	86 e0       	ldi	r24, 0x06	; 6
    8aba:	90 e0       	ldi	r25, 0x00	; 0
    8abc:	0e 94 96 78 	call	0xf12c	; 0xf12c <eeprom_read_dword>
    8ac0:	9b 01       	movw	r18, r22
    8ac2:	ac 01       	movw	r20, r24
    8ac4:	80 91 c0 47 	lds	r24, 0x47C0	; 0x8047c0 <g_event_finish_epoch>
    8ac8:	90 91 c1 47 	lds	r25, 0x47C1	; 0x8047c1 <g_event_finish_epoch+0x1>
    8acc:	a0 91 c2 47 	lds	r26, 0x47C2	; 0x8047c2 <g_event_finish_epoch+0x2>
    8ad0:	b0 91 c3 47 	lds	r27, 0x47C3	; 0x8047c3 <g_event_finish_epoch+0x3>
    8ad4:	61 e0       	ldi	r22, 0x01	; 1
    8ad6:	28 17       	cp	r18, r24
    8ad8:	39 07       	cpc	r19, r25
    8ada:	4a 07       	cpc	r20, r26
    8adc:	5b 07       	cpc	r21, r27
    8ade:	09 f4       	brne	.+2      	; 0x8ae2 <_ZN13EepromManager13saveAllEEPROMEv+0xca>
    8ae0:	60 e0       	ldi	r22, 0x00	; 0
    8ae2:	66 23       	and	r22, r22
    8ae4:	39 f0       	breq	.+14     	; 0x8af4 <_ZN13EepromManager13saveAllEEPROMEv+0xdc>
	{
		updateEEPROMVar(Event_finish_epoch, (void*)&g_event_finish_epoch);
    8ae6:	8b 81       	ldd	r24, Y+3	; 0x03
    8ae8:	9c 81       	ldd	r25, Y+4	; 0x04
    8aea:	40 ec       	ldi	r20, 0xC0	; 192
    8aec:	57 e4       	ldi	r21, 0x47	; 71
    8aee:	66 e0       	ldi	r22, 0x06	; 6
    8af0:	0e 94 0a 44 	call	0x8814	; 0x8814 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
	
	if(g_utc_offset != eeprom_read_byte(&(EepromManager::ee_vars.utc_offset)))
    8af4:	80 91 db 47 	lds	r24, 0x47DB	; 0x8047db <g_utc_offset>
    8af8:	08 2f       	mov	r16, r24
    8afa:	88 0f       	add	r24, r24
    8afc:	11 0b       	sbc	r17, r17
    8afe:	8a e2       	ldi	r24, 0x2A	; 42
    8b00:	90 e0       	ldi	r25, 0x00	; 0
    8b02:	0e 94 8e 78 	call	0xf11c	; 0xf11c <eeprom_read_byte>
    8b06:	88 2f       	mov	r24, r24
    8b08:	90 e0       	ldi	r25, 0x00	; 0
    8b0a:	21 e0       	ldi	r18, 0x01	; 1
    8b0c:	08 17       	cp	r16, r24
    8b0e:	19 07       	cpc	r17, r25
    8b10:	09 f4       	brne	.+2      	; 0x8b14 <_ZN13EepromManager13saveAllEEPROMEv+0xfc>
    8b12:	20 e0       	ldi	r18, 0x00	; 0
    8b14:	22 23       	and	r18, r18
    8b16:	39 f0       	breq	.+14     	; 0x8b26 <_ZN13EepromManager13saveAllEEPROMEv+0x10e>
	{
		updateEEPROMVar(Utc_offset, (void*)&g_utc_offset);
    8b18:	8b 81       	ldd	r24, Y+3	; 0x03
    8b1a:	9c 81       	ldd	r25, Y+4	; 0x04
    8b1c:	4b ed       	ldi	r20, 0xDB	; 219
    8b1e:	57 e4       	ldi	r21, 0x47	; 71
    8b20:	6a e2       	ldi	r22, 0x2A	; 42
    8b22:	0e 94 0a 44 	call	0x8814	; 0x8814 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
	
	for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    8b26:	19 82       	std	Y+1, r1	; 0x01
    8b28:	1a 82       	std	Y+2, r1	; 0x02
    8b2a:	89 81       	ldd	r24, Y+1	; 0x01
    8b2c:	9a 81       	ldd	r25, Y+2	; 0x02
    8b2e:	44 97       	sbiw	r24, 0x14	; 20
    8b30:	e8 f4       	brcc	.+58     	; 0x8b6c <_ZN13EepromManager13saveAllEEPROMEv+0x154>
	{
		if(g_messages_text[STATION_ID][i] != (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.stationID_text[i]))))
    8b32:	89 81       	ldd	r24, Y+1	; 0x01
    8b34:	9a 81       	ldd	r25, Y+2	; 0x02
    8b36:	8d 55       	subi	r24, 0x5D	; 93
    8b38:	98 4b       	sbci	r25, 0xB8	; 184
    8b3a:	fc 01       	movw	r30, r24
    8b3c:	10 81       	ld	r17, Z
    8b3e:	89 81       	ldd	r24, Y+1	; 0x01
    8b40:	9a 81       	ldd	r25, Y+2	; 0x02
    8b42:	0a 96       	adiw	r24, 0x0a	; 10
    8b44:	80 50       	subi	r24, 0x00	; 0
    8b46:	90 40       	sbci	r25, 0x00	; 0
    8b48:	0e 94 8e 78 	call	0xf11c	; 0xf11c <eeprom_read_byte>
    8b4c:	18 17       	cp	r17, r24
    8b4e:	41 f0       	breq	.+16     	; 0x8b60 <_ZN13EepromManager13saveAllEEPROMEv+0x148>
		{
			updateEEPROMVar(StationID_text, (void*)g_messages_text[STATION_ID]);
    8b50:	8b 81       	ldd	r24, Y+3	; 0x03
    8b52:	9c 81       	ldd	r25, Y+4	; 0x04
    8b54:	43 ea       	ldi	r20, 0xA3	; 163
    8b56:	57 e4       	ldi	r21, 0x47	; 71
    8b58:	6a e0       	ldi	r22, 0x0A	; 10
    8b5a:	0e 94 0a 44 	call	0x8814	; 0x8814 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
			break;
    8b5e:	06 c0       	rjmp	.+12     	; 0x8b6c <_ZN13EepromManager13saveAllEEPROMEv+0x154>
	if(g_utc_offset != eeprom_read_byte(&(EepromManager::ee_vars.utc_offset)))
	{
		updateEEPROMVar(Utc_offset, (void*)&g_utc_offset);
	}
	
	for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    8b60:	89 81       	ldd	r24, Y+1	; 0x01
    8b62:	9a 81       	ldd	r25, Y+2	; 0x02
    8b64:	01 96       	adiw	r24, 0x01	; 1
    8b66:	89 83       	std	Y+1, r24	; 0x01
    8b68:	9a 83       	std	Y+2, r25	; 0x02
    8b6a:	df cf       	rjmp	.-66     	; 0x8b2a <_ZN13EepromManager13saveAllEEPROMEv+0x112>
			updateEEPROMVar(StationID_text, (void*)g_messages_text[STATION_ID]);
			break;
		}
	}

	for(i = 0; i < MAX_UNLOCK_CODE_LENGTH; i++)
    8b6c:	19 82       	std	Y+1, r1	; 0x01
    8b6e:	1a 82       	std	Y+2, r1	; 0x02
    8b70:	89 81       	ldd	r24, Y+1	; 0x01
    8b72:	9a 81       	ldd	r25, Y+2	; 0x02
    8b74:	08 97       	sbiw	r24, 0x08	; 8
    8b76:	e8 f4       	brcc	.+58     	; 0x8bb2 <_ZN13EepromManager13saveAllEEPROMEv+0x19a>
	{
		if(g_unlockCode[i] != (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.unlockCode[i]))))
    8b78:	89 81       	ldd	r24, Y+1	; 0x01
    8b7a:	9a 81       	ldd	r25, Y+2	; 0x02
    8b7c:	84 52       	subi	r24, 0x24	; 36
    8b7e:	98 4b       	sbci	r25, 0xB8	; 184
    8b80:	fc 01       	movw	r30, r24
    8b82:	10 81       	ld	r17, Z
    8b84:	89 81       	ldd	r24, Y+1	; 0x01
    8b86:	9a 81       	ldd	r25, Y+2	; 0x02
    8b88:	4f 96       	adiw	r24, 0x1f	; 31
    8b8a:	80 50       	subi	r24, 0x00	; 0
    8b8c:	90 40       	sbci	r25, 0x00	; 0
    8b8e:	0e 94 8e 78 	call	0xf11c	; 0xf11c <eeprom_read_byte>
    8b92:	18 17       	cp	r17, r24
    8b94:	41 f0       	breq	.+16     	; 0x8ba6 <_ZN13EepromManager13saveAllEEPROMEv+0x18e>
		{
			updateEEPROMVar(UnlockCode, (void*)g_unlockCode);
    8b96:	8b 81       	ldd	r24, Y+3	; 0x03
    8b98:	9c 81       	ldd	r25, Y+4	; 0x04
    8b9a:	4c ed       	ldi	r20, 0xDC	; 220
    8b9c:	57 e4       	ldi	r21, 0x47	; 71
    8b9e:	6f e1       	ldi	r22, 0x1F	; 31
    8ba0:	0e 94 0a 44 	call	0x8814	; 0x8814 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
			break;
    8ba4:	06 c0       	rjmp	.+12     	; 0x8bb2 <_ZN13EepromManager13saveAllEEPROMEv+0x19a>
			updateEEPROMVar(StationID_text, (void*)g_messages_text[STATION_ID]);
			break;
		}
	}

	for(i = 0; i < MAX_UNLOCK_CODE_LENGTH; i++)
    8ba6:	89 81       	ldd	r24, Y+1	; 0x01
    8ba8:	9a 81       	ldd	r25, Y+2	; 0x02
    8baa:	01 96       	adiw	r24, 0x01	; 1
    8bac:	89 83       	std	Y+1, r24	; 0x01
    8bae:	9a 83       	std	Y+2, r25	; 0x02
    8bb0:	df cf       	rjmp	.-66     	; 0x8b70 <_ZN13EepromManager13saveAllEEPROMEv+0x158>
			updateEEPROMVar(UnlockCode, (void*)g_unlockCode);
			break;
		}
	}
	
	if(g_80m_frequency != eeprom_read_dword(&(EepromManager::ee_vars.frequency)))
    8bb2:	8b e2       	ldi	r24, 0x2B	; 43
    8bb4:	90 e0       	ldi	r25, 0x00	; 0
    8bb6:	0e 94 96 78 	call	0xf12c	; 0xf12c <eeprom_read_dword>
    8bba:	9b 01       	movw	r18, r22
    8bbc:	ac 01       	movw	r20, r24
    8bbe:	80 91 2b 40 	lds	r24, 0x402B	; 0x80402b <g_80m_frequency>
    8bc2:	90 91 2c 40 	lds	r25, 0x402C	; 0x80402c <g_80m_frequency+0x1>
    8bc6:	a0 91 2d 40 	lds	r26, 0x402D	; 0x80402d <g_80m_frequency+0x2>
    8bca:	b0 91 2e 40 	lds	r27, 0x402E	; 0x80402e <g_80m_frequency+0x3>
    8bce:	28 17       	cp	r18, r24
    8bd0:	39 07       	cpc	r19, r25
    8bd2:	4a 07       	cpc	r20, r26
    8bd4:	5b 07       	cpc	r21, r27
    8bd6:	39 f0       	breq	.+14     	; 0x8be6 <_ZN13EepromManager13saveAllEEPROMEv+0x1ce>
	{
		updateEEPROMVar(Frequency, (void*)&g_80m_frequency);
    8bd8:	8b 81       	ldd	r24, Y+3	; 0x03
    8bda:	9c 81       	ldd	r25, Y+4	; 0x04
    8bdc:	4b e2       	ldi	r20, 0x2B	; 43
    8bde:	50 e4       	ldi	r21, 0x40	; 64
    8be0:	6b e2       	ldi	r22, 0x2B	; 43
    8be2:	0e 94 0a 44 	call	0x8814	; 0x8814 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
	
	if(g_rtty_offset != eeprom_read_dword(&(EepromManager::ee_vars.rtty_offset)))
    8be6:	8f e2       	ldi	r24, 0x2F	; 47
    8be8:	90 e0       	ldi	r25, 0x00	; 0
    8bea:	0e 94 96 78 	call	0xf12c	; 0xf12c <eeprom_read_dword>
    8bee:	9b 01       	movw	r18, r22
    8bf0:	ac 01       	movw	r20, r24
    8bf2:	80 91 31 40 	lds	r24, 0x4031	; 0x804031 <g_rtty_offset>
    8bf6:	90 91 32 40 	lds	r25, 0x4032	; 0x804032 <g_rtty_offset+0x1>
    8bfa:	a0 91 33 40 	lds	r26, 0x4033	; 0x804033 <g_rtty_offset+0x2>
    8bfe:	b0 91 34 40 	lds	r27, 0x4034	; 0x804034 <g_rtty_offset+0x3>
    8c02:	28 17       	cp	r18, r24
    8c04:	39 07       	cpc	r19, r25
    8c06:	4a 07       	cpc	r20, r26
    8c08:	5b 07       	cpc	r21, r27
    8c0a:	39 f0       	breq	.+14     	; 0x8c1a <_ZN13EepromManager13saveAllEEPROMEv+0x202>
	{
		updateEEPROMVar(RTTY_offset, (void*)&g_rtty_offset);
    8c0c:	8b 81       	ldd	r24, Y+3	; 0x03
    8c0e:	9c 81       	ldd	r25, Y+4	; 0x04
    8c10:	41 e3       	ldi	r20, 0x31	; 49
    8c12:	50 e4       	ldi	r21, 0x40	; 64
    8c14:	6f e2       	ldi	r22, 0x2F	; 47
    8c16:	0e 94 0a 44 	call	0x8814	; 0x8814 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
	
	if(g_80m_power_level_mW != eeprom_read_word(&(EepromManager::ee_vars.rf_power)))
    8c1a:	83 e3       	ldi	r24, 0x33	; 51
    8c1c:	90 e0       	ldi	r25, 0x00	; 0
    8c1e:	0e 94 9d 78 	call	0xf13a	; 0xf13a <eeprom_read_word>
    8c22:	9c 01       	movw	r18, r24
    8c24:	80 91 2f 40 	lds	r24, 0x402F	; 0x80402f <g_80m_power_level_mW>
    8c28:	90 91 30 40 	lds	r25, 0x4030	; 0x804030 <g_80m_power_level_mW+0x1>
    8c2c:	28 17       	cp	r18, r24
    8c2e:	39 07       	cpc	r19, r25
    8c30:	39 f0       	breq	.+14     	; 0x8c40 <_ZN13EepromManager13saveAllEEPROMEv+0x228>
	{
		updateEEPROMVar(RF_Power, (void*)&g_80m_power_level_mW);
    8c32:	8b 81       	ldd	r24, Y+3	; 0x03
    8c34:	9c 81       	ldd	r25, Y+4	; 0x04
    8c36:	4f e2       	ldi	r20, 0x2F	; 47
    8c38:	50 e4       	ldi	r21, 0x40	; 64
    8c3a:	63 e3       	ldi	r22, 0x33	; 51
    8c3c:	0e 94 0a 44 	call	0x8814	; 0x8814 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
}
    8c40:	00 00       	nop
    8c42:	24 96       	adiw	r28, 0x04	; 4
    8c44:	cd bf       	out	0x3d, r28	; 61
    8c46:	de bf       	out	0x3e, r29	; 62
    8c48:	df 91       	pop	r29
    8c4a:	cf 91       	pop	r28
    8c4c:	1f 91       	pop	r17
    8c4e:	0f 91       	pop	r16
    8c50:	08 95       	ret

00008c52 <_ZN13EepromManager11readNonVolsEv>:


bool EepromManager::readNonVols(void)
{
    8c52:	cf 93       	push	r28
    8c54:	df 93       	push	r29
    8c56:	cd b7       	in	r28, 0x3d	; 61
    8c58:	de b7       	in	r29, 0x3e	; 62
    8c5a:	6f 97       	sbiw	r28, 0x1f	; 31
    8c5c:	cd bf       	out	0x3d, r28	; 61
    8c5e:	de bf       	out	0x3e, r29	; 62
    8c60:	8e 8f       	std	Y+30, r24	; 0x1e
    8c62:	9f 8f       	std	Y+31, r25	; 0x1f
	bool failure = true;
    8c64:	81 e0       	ldi	r24, 0x01	; 1
    8c66:	89 83       	std	Y+1, r24	; 0x01
	uint16_t i;
	uint16_t initialization_flag = eeprom_read_word(0);
    8c68:	80 e0       	ldi	r24, 0x00	; 0
    8c6a:	90 e0       	ldi	r25, 0x00	; 0
    8c6c:	0e 94 9d 78 	call	0xf13a	; 0xf13a <eeprom_read_word>
    8c70:	8c 83       	std	Y+4, r24	; 0x04
    8c72:	9d 83       	std	Y+5, r25	; 0x05

	if(initialization_flag == EEPROM_INITIALIZED_FLAG)  /* EEPROM is up to date */
    8c74:	8c 81       	ldd	r24, Y+4	; 0x04
    8c76:	9d 81       	ldd	r25, Y+5	; 0x05
    8c78:	8e 3c       	cpi	r24, 0xCE	; 206
    8c7a:	91 05       	cpc	r25, r1
    8c7c:	09 f0       	breq	.+2      	; 0x8c80 <_ZN13EepromManager11readNonVolsEv+0x2e>
    8c7e:	50 c1       	rjmp	.+672    	; 0x8f20 <_ZN13EepromManager11readNonVolsEv+0x2ce>
	{
		g_id_codespeed = CLAMP(MIN_CODE_SPEED_WPM, eeprom_read_byte(&(EepromManager::ee_vars.id_codespeed)), MAX_CODE_SPEED_WPM);
    8c80:	88 e2       	ldi	r24, 0x28	; 40
    8c82:	90 e0       	ldi	r25, 0x00	; 0
    8c84:	0e 94 8e 78 	call	0xf11c	; 0xf11c <eeprom_read_byte>
    8c88:	8e 83       	std	Y+6, r24	; 0x06
    8c8a:	85 e0       	ldi	r24, 0x05	; 5
    8c8c:	8f 83       	std	Y+7, r24	; 0x07
    8c8e:	84 e1       	ldi	r24, 0x14	; 20
    8c90:	88 87       	std	Y+8, r24	; 0x08
    8c92:	9e 81       	ldd	r25, Y+6	; 0x06
    8c94:	88 85       	ldd	r24, Y+8	; 0x08
    8c96:	89 17       	cp	r24, r25
    8c98:	40 f0       	brcs	.+16     	; 0x8caa <_ZN13EepromManager11readNonVolsEv+0x58>
    8c9a:	9e 81       	ldd	r25, Y+6	; 0x06
    8c9c:	8f 81       	ldd	r24, Y+7	; 0x07
    8c9e:	98 17       	cp	r25, r24
    8ca0:	10 f4       	brcc	.+4      	; 0x8ca6 <_ZN13EepromManager11readNonVolsEv+0x54>
    8ca2:	8f 81       	ldd	r24, Y+7	; 0x07
    8ca4:	03 c0       	rjmp	.+6      	; 0x8cac <_ZN13EepromManager11readNonVolsEv+0x5a>
    8ca6:	8e 81       	ldd	r24, Y+6	; 0x06
    8ca8:	01 c0       	rjmp	.+2      	; 0x8cac <_ZN13EepromManager11readNonVolsEv+0x5a>
    8caa:	88 85       	ldd	r24, Y+8	; 0x08
    8cac:	80 93 0b 40 	sts	0x400B, r24	; 0x80400b <g_id_codespeed>
		g_fox = CLAMP(BEACON, (Fox_t)eeprom_read_byte(&(EepromManager::ee_vars.fox_setting)), SPRINT_F5);
    8cb0:	89 e2       	ldi	r24, 0x29	; 41
    8cb2:	90 e0       	ldi	r25, 0x00	; 0
    8cb4:	0e 94 8e 78 	call	0xf11c	; 0xf11c <eeprom_read_byte>
    8cb8:	89 87       	std	Y+9, r24	; 0x09
    8cba:	1a 86       	std	Y+10, r1	; 0x0a
    8cbc:	81 e1       	ldi	r24, 0x11	; 17
    8cbe:	8b 87       	std	Y+11, r24	; 0x0b
    8cc0:	99 85       	ldd	r25, Y+9	; 0x09
    8cc2:	8b 85       	ldd	r24, Y+11	; 0x0b
    8cc4:	89 17       	cp	r24, r25
    8cc6:	40 f0       	brcs	.+16     	; 0x8cd8 <_ZN13EepromManager11readNonVolsEv+0x86>
    8cc8:	99 85       	ldd	r25, Y+9	; 0x09
    8cca:	8a 85       	ldd	r24, Y+10	; 0x0a
    8ccc:	98 17       	cp	r25, r24
    8cce:	10 f4       	brcc	.+4      	; 0x8cd4 <_ZN13EepromManager11readNonVolsEv+0x82>
    8cd0:	8a 85       	ldd	r24, Y+10	; 0x0a
    8cd2:	03 c0       	rjmp	.+6      	; 0x8cda <_ZN13EepromManager11readNonVolsEv+0x88>
    8cd4:	89 85       	ldd	r24, Y+9	; 0x09
    8cd6:	01 c0       	rjmp	.+2      	; 0x8cda <_ZN13EepromManager11readNonVolsEv+0x88>
    8cd8:	8b 85       	ldd	r24, Y+11	; 0x0b
    8cda:	80 93 1b 40 	sts	0x401B, r24	; 0x80401b <g_fox>
		g_event_start_epoch = eeprom_read_dword(&(EepromManager::ee_vars.event_start_epoch));
    8cde:	82 e0       	ldi	r24, 0x02	; 2
    8ce0:	90 e0       	ldi	r25, 0x00	; 0
    8ce2:	0e 94 96 78 	call	0xf12c	; 0xf12c <eeprom_read_dword>
    8ce6:	dc 01       	movw	r26, r24
    8ce8:	cb 01       	movw	r24, r22
    8cea:	80 93 bc 47 	sts	0x47BC, r24	; 0x8047bc <g_event_start_epoch>
    8cee:	90 93 bd 47 	sts	0x47BD, r25	; 0x8047bd <g_event_start_epoch+0x1>
    8cf2:	a0 93 be 47 	sts	0x47BE, r26	; 0x8047be <g_event_start_epoch+0x2>
    8cf6:	b0 93 bf 47 	sts	0x47BF, r27	; 0x8047bf <g_event_start_epoch+0x3>
		g_event_finish_epoch = eeprom_read_dword(&(EepromManager::ee_vars.event_finish_epoch));
    8cfa:	86 e0       	ldi	r24, 0x06	; 6
    8cfc:	90 e0       	ldi	r25, 0x00	; 0
    8cfe:	0e 94 96 78 	call	0xf12c	; 0xf12c <eeprom_read_dword>
    8d02:	dc 01       	movw	r26, r24
    8d04:	cb 01       	movw	r24, r22
    8d06:	80 93 c0 47 	sts	0x47C0, r24	; 0x8047c0 <g_event_finish_epoch>
    8d0a:	90 93 c1 47 	sts	0x47C1, r25	; 0x8047c1 <g_event_finish_epoch+0x1>
    8d0e:	a0 93 c2 47 	sts	0x47C2, r26	; 0x8047c2 <g_event_finish_epoch+0x2>
    8d12:	b0 93 c3 47 	sts	0x47C3, r27	; 0x8047c3 <g_event_finish_epoch+0x3>
		g_utc_offset = (int8_t)eeprom_read_byte(&(EepromManager::ee_vars.utc_offset));
    8d16:	8a e2       	ldi	r24, 0x2A	; 42
    8d18:	90 e0       	ldi	r25, 0x00	; 0
    8d1a:	0e 94 8e 78 	call	0xf11c	; 0xf11c <eeprom_read_byte>
    8d1e:	80 93 db 47 	sts	0x47DB, r24	; 0x8047db <g_utc_offset>

		for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    8d22:	1a 82       	std	Y+2, r1	; 0x02
    8d24:	1b 82       	std	Y+3, r1	; 0x03
    8d26:	8a 81       	ldd	r24, Y+2	; 0x02
    8d28:	9b 81       	ldd	r25, Y+3	; 0x03
    8d2a:	44 97       	sbiw	r24, 0x14	; 20
    8d2c:	e8 f4       	brcc	.+58     	; 0x8d68 <_ZN13EepromManager11readNonVolsEv+0x116>
		{
			g_messages_text[STATION_ID][i] = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.stationID_text[i])));
    8d2e:	8a 81       	ldd	r24, Y+2	; 0x02
    8d30:	9b 81       	ldd	r25, Y+3	; 0x03
    8d32:	0a 96       	adiw	r24, 0x0a	; 10
    8d34:	80 50       	subi	r24, 0x00	; 0
    8d36:	90 40       	sbci	r25, 0x00	; 0
    8d38:	0e 94 8e 78 	call	0xf11c	; 0xf11c <eeprom_read_byte>
    8d3c:	28 2f       	mov	r18, r24
    8d3e:	8a 81       	ldd	r24, Y+2	; 0x02
    8d40:	9b 81       	ldd	r25, Y+3	; 0x03
    8d42:	8d 55       	subi	r24, 0x5D	; 93
    8d44:	98 4b       	sbci	r25, 0xB8	; 184
    8d46:	fc 01       	movw	r30, r24
    8d48:	20 83       	st	Z, r18
			if(!g_messages_text[STATION_ID][i])
    8d4a:	8a 81       	ldd	r24, Y+2	; 0x02
    8d4c:	9b 81       	ldd	r25, Y+3	; 0x03
    8d4e:	8d 55       	subi	r24, 0x5D	; 93
    8d50:	98 4b       	sbci	r25, 0xB8	; 184
    8d52:	fc 01       	movw	r30, r24
    8d54:	80 81       	ld	r24, Z
    8d56:	88 23       	and	r24, r24
    8d58:	31 f0       	breq	.+12     	; 0x8d66 <_ZN13EepromManager11readNonVolsEv+0x114>
		g_fox = CLAMP(BEACON, (Fox_t)eeprom_read_byte(&(EepromManager::ee_vars.fox_setting)), SPRINT_F5);
		g_event_start_epoch = eeprom_read_dword(&(EepromManager::ee_vars.event_start_epoch));
		g_event_finish_epoch = eeprom_read_dword(&(EepromManager::ee_vars.event_finish_epoch));
		g_utc_offset = (int8_t)eeprom_read_byte(&(EepromManager::ee_vars.utc_offset));

		for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    8d5a:	8a 81       	ldd	r24, Y+2	; 0x02
    8d5c:	9b 81       	ldd	r25, Y+3	; 0x03
    8d5e:	01 96       	adiw	r24, 0x01	; 1
    8d60:	8a 83       	std	Y+2, r24	; 0x02
    8d62:	9b 83       	std	Y+3, r25	; 0x03
    8d64:	e0 cf       	rjmp	.-64     	; 0x8d26 <_ZN13EepromManager11readNonVolsEv+0xd4>
		{
			g_messages_text[STATION_ID][i] = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.stationID_text[i])));
			if(!g_messages_text[STATION_ID][i])
			{
				break;
    8d66:	00 00       	nop
			}
		}

		for(i = 0; i < MAX_UNLOCK_CODE_LENGTH; i++)
    8d68:	1a 82       	std	Y+2, r1	; 0x02
    8d6a:	1b 82       	std	Y+3, r1	; 0x03
    8d6c:	8a 81       	ldd	r24, Y+2	; 0x02
    8d6e:	9b 81       	ldd	r25, Y+3	; 0x03
    8d70:	08 97       	sbiw	r24, 0x08	; 8
    8d72:	e8 f4       	brcc	.+58     	; 0x8dae <_ZN13EepromManager11readNonVolsEv+0x15c>
		{
			g_unlockCode[i] = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.unlockCode[i])));
    8d74:	8a 81       	ldd	r24, Y+2	; 0x02
    8d76:	9b 81       	ldd	r25, Y+3	; 0x03
    8d78:	4f 96       	adiw	r24, 0x1f	; 31
    8d7a:	80 50       	subi	r24, 0x00	; 0
    8d7c:	90 40       	sbci	r25, 0x00	; 0
    8d7e:	0e 94 8e 78 	call	0xf11c	; 0xf11c <eeprom_read_byte>
    8d82:	28 2f       	mov	r18, r24
    8d84:	8a 81       	ldd	r24, Y+2	; 0x02
    8d86:	9b 81       	ldd	r25, Y+3	; 0x03
    8d88:	84 52       	subi	r24, 0x24	; 36
    8d8a:	98 4b       	sbci	r25, 0xB8	; 184
    8d8c:	fc 01       	movw	r30, r24
    8d8e:	20 83       	st	Z, r18
			if(!g_unlockCode[i])
    8d90:	8a 81       	ldd	r24, Y+2	; 0x02
    8d92:	9b 81       	ldd	r25, Y+3	; 0x03
    8d94:	84 52       	subi	r24, 0x24	; 36
    8d96:	98 4b       	sbci	r25, 0xB8	; 184
    8d98:	fc 01       	movw	r30, r24
    8d9a:	80 81       	ld	r24, Z
    8d9c:	88 23       	and	r24, r24
    8d9e:	31 f0       	breq	.+12     	; 0x8dac <_ZN13EepromManager11readNonVolsEv+0x15a>
			{
				break;
			}
		}

		for(i = 0; i < MAX_UNLOCK_CODE_LENGTH; i++)
    8da0:	8a 81       	ldd	r24, Y+2	; 0x02
    8da2:	9b 81       	ldd	r25, Y+3	; 0x03
    8da4:	01 96       	adiw	r24, 0x01	; 1
    8da6:	8a 83       	std	Y+2, r24	; 0x02
    8da8:	9b 83       	std	Y+3, r25	; 0x03
    8daa:	e0 cf       	rjmp	.-64     	; 0x8d6c <_ZN13EepromManager11readNonVolsEv+0x11a>
		{
			g_unlockCode[i] = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.unlockCode[i])));
			if(!g_unlockCode[i])
			{
				break;
    8dac:	00 00       	nop
			}
		}
		
		g_80m_frequency = CLAMP(TX_MINIMUM_80M_FREQUENCY, eeprom_read_dword(&(EepromManager::ee_vars.frequency)), TX_MAXIMUM_80M_FREQUENCY);
    8dae:	8b e2       	ldi	r24, 0x2B	; 43
    8db0:	90 e0       	ldi	r25, 0x00	; 0
    8db2:	0e 94 96 78 	call	0xf12c	; 0xf12c <eeprom_read_dword>
    8db6:	dc 01       	movw	r26, r24
    8db8:	cb 01       	movw	r24, r22
    8dba:	8c 87       	std	Y+12, r24	; 0x0c
    8dbc:	9d 87       	std	Y+13, r25	; 0x0d
    8dbe:	ae 87       	std	Y+14, r26	; 0x0e
    8dc0:	bf 87       	std	Y+15, r27	; 0x0f
    8dc2:	80 ee       	ldi	r24, 0xE0	; 224
    8dc4:	97 e6       	ldi	r25, 0x67	; 103
    8dc6:	a5 e3       	ldi	r26, 0x35	; 53
    8dc8:	b0 e0       	ldi	r27, 0x00	; 0
    8dca:	88 8b       	std	Y+16, r24	; 0x10
    8dcc:	99 8b       	std	Y+17, r25	; 0x11
    8dce:	aa 8b       	std	Y+18, r26	; 0x12
    8dd0:	bb 8b       	std	Y+19, r27	; 0x13
    8dd2:	80 e0       	ldi	r24, 0x00	; 0
    8dd4:	99 e0       	ldi	r25, 0x09	; 9
    8dd6:	ad e3       	ldi	r26, 0x3D	; 61
    8dd8:	b0 e0       	ldi	r27, 0x00	; 0
    8dda:	8c 8b       	std	Y+20, r24	; 0x14
    8ddc:	9d 8b       	std	Y+21, r25	; 0x15
    8dde:	ae 8b       	std	Y+22, r26	; 0x16
    8de0:	bf 8b       	std	Y+23, r27	; 0x17
    8de2:	2c 85       	ldd	r18, Y+12	; 0x0c
    8de4:	3d 85       	ldd	r19, Y+13	; 0x0d
    8de6:	4e 85       	ldd	r20, Y+14	; 0x0e
    8de8:	5f 85       	ldd	r21, Y+15	; 0x0f
    8dea:	8c 89       	ldd	r24, Y+20	; 0x14
    8dec:	9d 89       	ldd	r25, Y+21	; 0x15
    8dee:	ae 89       	ldd	r26, Y+22	; 0x16
    8df0:	bf 89       	ldd	r27, Y+23	; 0x17
    8df2:	82 17       	cp	r24, r18
    8df4:	93 07       	cpc	r25, r19
    8df6:	a4 07       	cpc	r26, r20
    8df8:	b5 07       	cpc	r27, r21
    8dfa:	b8 f0       	brcs	.+46     	; 0x8e2a <_ZN13EepromManager11readNonVolsEv+0x1d8>
    8dfc:	2c 85       	ldd	r18, Y+12	; 0x0c
    8dfe:	3d 85       	ldd	r19, Y+13	; 0x0d
    8e00:	4e 85       	ldd	r20, Y+14	; 0x0e
    8e02:	5f 85       	ldd	r21, Y+15	; 0x0f
    8e04:	88 89       	ldd	r24, Y+16	; 0x10
    8e06:	99 89       	ldd	r25, Y+17	; 0x11
    8e08:	aa 89       	ldd	r26, Y+18	; 0x12
    8e0a:	bb 89       	ldd	r27, Y+19	; 0x13
    8e0c:	28 17       	cp	r18, r24
    8e0e:	39 07       	cpc	r19, r25
    8e10:	4a 07       	cpc	r20, r26
    8e12:	5b 07       	cpc	r21, r27
    8e14:	28 f4       	brcc	.+10     	; 0x8e20 <_ZN13EepromManager11readNonVolsEv+0x1ce>
    8e16:	88 89       	ldd	r24, Y+16	; 0x10
    8e18:	99 89       	ldd	r25, Y+17	; 0x11
    8e1a:	aa 89       	ldd	r26, Y+18	; 0x12
    8e1c:	bb 89       	ldd	r27, Y+19	; 0x13
    8e1e:	09 c0       	rjmp	.+18     	; 0x8e32 <_ZN13EepromManager11readNonVolsEv+0x1e0>
    8e20:	8c 85       	ldd	r24, Y+12	; 0x0c
    8e22:	9d 85       	ldd	r25, Y+13	; 0x0d
    8e24:	ae 85       	ldd	r26, Y+14	; 0x0e
    8e26:	bf 85       	ldd	r27, Y+15	; 0x0f
    8e28:	04 c0       	rjmp	.+8      	; 0x8e32 <_ZN13EepromManager11readNonVolsEv+0x1e0>
    8e2a:	8c 89       	ldd	r24, Y+20	; 0x14
    8e2c:	9d 89       	ldd	r25, Y+21	; 0x15
    8e2e:	ae 89       	ldd	r26, Y+22	; 0x16
    8e30:	bf 89       	ldd	r27, Y+23	; 0x17
    8e32:	80 93 2b 40 	sts	0x402B, r24	; 0x80402b <g_80m_frequency>
    8e36:	90 93 2c 40 	sts	0x402C, r25	; 0x80402c <g_80m_frequency+0x1>
    8e3a:	a0 93 2d 40 	sts	0x402D, r26	; 0x80402d <g_80m_frequency+0x2>
    8e3e:	b0 93 2e 40 	sts	0x402E, r27	; 0x80402e <g_80m_frequency+0x3>
		g_rtty_offset =eeprom_read_dword(&(EepromManager::ee_vars.rtty_offset));
    8e42:	8f e2       	ldi	r24, 0x2F	; 47
    8e44:	90 e0       	ldi	r25, 0x00	; 0
    8e46:	0e 94 96 78 	call	0xf12c	; 0xf12c <eeprom_read_dword>
    8e4a:	dc 01       	movw	r26, r24
    8e4c:	cb 01       	movw	r24, r22
    8e4e:	80 93 31 40 	sts	0x4031, r24	; 0x804031 <g_rtty_offset>
    8e52:	90 93 32 40 	sts	0x4032, r25	; 0x804032 <g_rtty_offset+0x1>
    8e56:	a0 93 33 40 	sts	0x4033, r26	; 0x804033 <g_rtty_offset+0x2>
    8e5a:	b0 93 34 40 	sts	0x4034, r27	; 0x804034 <g_rtty_offset+0x3>
		g_80m_power_level_mW = CLAMP(MIN_RF_POWER_MW, eeprom_read_word(&(EepromManager::ee_vars.rf_power)), MAX_TX_POWER_80M_MW);
    8e5e:	83 e3       	ldi	r24, 0x33	; 51
    8e60:	90 e0       	ldi	r25, 0x00	; 0
    8e62:	0e 94 9d 78 	call	0xf13a	; 0xf13a <eeprom_read_word>
    8e66:	88 8f       	std	Y+24, r24	; 0x18
    8e68:	99 8f       	std	Y+25, r25	; 0x19
    8e6a:	1a 8e       	std	Y+26, r1	; 0x1a
    8e6c:	1b 8e       	std	Y+27, r1	; 0x1b
    8e6e:	88 e8       	ldi	r24, 0x88	; 136
    8e70:	93 e1       	ldi	r25, 0x13	; 19
    8e72:	8c 8f       	std	Y+28, r24	; 0x1c
    8e74:	9d 8f       	std	Y+29, r25	; 0x1d
    8e76:	28 8d       	ldd	r18, Y+24	; 0x18
    8e78:	39 8d       	ldd	r19, Y+25	; 0x19
    8e7a:	8c 8d       	ldd	r24, Y+28	; 0x1c
    8e7c:	9d 8d       	ldd	r25, Y+29	; 0x1d
    8e7e:	82 17       	cp	r24, r18
    8e80:	93 07       	cpc	r25, r19
    8e82:	68 f0       	brcs	.+26     	; 0x8e9e <_ZN13EepromManager11readNonVolsEv+0x24c>
    8e84:	28 8d       	ldd	r18, Y+24	; 0x18
    8e86:	39 8d       	ldd	r19, Y+25	; 0x19
    8e88:	8a 8d       	ldd	r24, Y+26	; 0x1a
    8e8a:	9b 8d       	ldd	r25, Y+27	; 0x1b
    8e8c:	28 17       	cp	r18, r24
    8e8e:	39 07       	cpc	r19, r25
    8e90:	18 f4       	brcc	.+6      	; 0x8e98 <_ZN13EepromManager11readNonVolsEv+0x246>
    8e92:	8a 8d       	ldd	r24, Y+26	; 0x1a
    8e94:	9b 8d       	ldd	r25, Y+27	; 0x1b
    8e96:	05 c0       	rjmp	.+10     	; 0x8ea2 <_ZN13EepromManager11readNonVolsEv+0x250>
    8e98:	88 8d       	ldd	r24, Y+24	; 0x18
    8e9a:	99 8d       	ldd	r25, Y+25	; 0x19
    8e9c:	02 c0       	rjmp	.+4      	; 0x8ea2 <_ZN13EepromManager11readNonVolsEv+0x250>
    8e9e:	8c 8d       	ldd	r24, Y+28	; 0x1c
    8ea0:	9d 8d       	ldd	r25, Y+29	; 0x1d
    8ea2:	80 93 2f 40 	sts	0x402F, r24	; 0x80402f <g_80m_power_level_mW>
    8ea6:	90 93 30 40 	sts	0x4030, r25	; 0x804030 <g_80m_power_level_mW+0x1>

		/* Perform sanity checks */
		if(g_event_start_epoch && (g_event_finish_epoch <= g_event_start_epoch))
    8eaa:	80 91 bc 47 	lds	r24, 0x47BC	; 0x8047bc <g_event_start_epoch>
    8eae:	90 91 bd 47 	lds	r25, 0x47BD	; 0x8047bd <g_event_start_epoch+0x1>
    8eb2:	a0 91 be 47 	lds	r26, 0x47BE	; 0x8047be <g_event_start_epoch+0x2>
    8eb6:	b0 91 bf 47 	lds	r27, 0x47BF	; 0x8047bf <g_event_start_epoch+0x3>
    8eba:	89 2b       	or	r24, r25
    8ebc:	8a 2b       	or	r24, r26
    8ebe:	8b 2b       	or	r24, r27
    8ec0:	b9 f0       	breq	.+46     	; 0x8ef0 <_ZN13EepromManager11readNonVolsEv+0x29e>
    8ec2:	20 91 c0 47 	lds	r18, 0x47C0	; 0x8047c0 <g_event_finish_epoch>
    8ec6:	30 91 c1 47 	lds	r19, 0x47C1	; 0x8047c1 <g_event_finish_epoch+0x1>
    8eca:	40 91 c2 47 	lds	r20, 0x47C2	; 0x8047c2 <g_event_finish_epoch+0x2>
    8ece:	50 91 c3 47 	lds	r21, 0x47C3	; 0x8047c3 <g_event_finish_epoch+0x3>
    8ed2:	80 91 bc 47 	lds	r24, 0x47BC	; 0x8047bc <g_event_start_epoch>
    8ed6:	90 91 bd 47 	lds	r25, 0x47BD	; 0x8047bd <g_event_start_epoch+0x1>
    8eda:	a0 91 be 47 	lds	r26, 0x47BE	; 0x8047be <g_event_start_epoch+0x2>
    8ede:	b0 91 bf 47 	lds	r27, 0x47BF	; 0x8047bf <g_event_start_epoch+0x3>
    8ee2:	82 17       	cp	r24, r18
    8ee4:	93 07       	cpc	r25, r19
    8ee6:	a4 07       	cpc	r26, r20
    8ee8:	b5 07       	cpc	r27, r21
    8eea:	10 f0       	brcs	.+4      	; 0x8ef0 <_ZN13EepromManager11readNonVolsEv+0x29e>
    8eec:	81 e0       	ldi	r24, 0x01	; 1
    8eee:	01 c0       	rjmp	.+2      	; 0x8ef2 <_ZN13EepromManager11readNonVolsEv+0x2a0>
    8ef0:	80 e0       	ldi	r24, 0x00	; 0
    8ef2:	88 23       	and	r24, r24
    8ef4:	a1 f0       	breq	.+40     	; 0x8f1e <_ZN13EepromManager11readNonVolsEv+0x2cc>
		{
			g_event_finish_epoch = g_event_start_epoch + SECONDS_24H;
    8ef6:	80 91 bc 47 	lds	r24, 0x47BC	; 0x8047bc <g_event_start_epoch>
    8efa:	90 91 bd 47 	lds	r25, 0x47BD	; 0x8047bd <g_event_start_epoch+0x1>
    8efe:	a0 91 be 47 	lds	r26, 0x47BE	; 0x8047be <g_event_start_epoch+0x2>
    8f02:	b0 91 bf 47 	lds	r27, 0x47BF	; 0x8047bf <g_event_start_epoch+0x3>
    8f06:	80 58       	subi	r24, 0x80	; 128
    8f08:	9e 4a       	sbci	r25, 0xAE	; 174
    8f0a:	ae 4f       	sbci	r26, 0xFE	; 254
    8f0c:	bf 4f       	sbci	r27, 0xFF	; 255
    8f0e:	80 93 c0 47 	sts	0x47C0, r24	; 0x8047c0 <g_event_finish_epoch>
    8f12:	90 93 c1 47 	sts	0x47C1, r25	; 0x8047c1 <g_event_finish_epoch+0x1>
    8f16:	a0 93 c2 47 	sts	0x47C2, r26	; 0x8047c2 <g_event_finish_epoch+0x2>
    8f1a:	b0 93 c3 47 	sts	0x47C3, r27	; 0x8047c3 <g_event_finish_epoch+0x3>
		}

		failure = false;
    8f1e:	19 82       	std	Y+1, r1	; 0x01
	}

	return( failure);
    8f20:	89 81       	ldd	r24, Y+1	; 0x01
}
    8f22:	6f 96       	adiw	r28, 0x1f	; 31
    8f24:	cd bf       	out	0x3d, r28	; 61
    8f26:	de bf       	out	0x3e, r29	; 62
    8f28:	df 91       	pop	r29
    8f2a:	cf 91       	pop	r28
    8f2c:	08 95       	ret

00008f2e <_ZN13EepromManager20initializeEEPROMVarsEv>:

/*
 * Set volatile variables to their values stored in EEPROM
 */
	bool EepromManager::initializeEEPROMVars(void)
	{
    8f2e:	cf 93       	push	r28
    8f30:	df 93       	push	r29
    8f32:	cd b7       	in	r28, 0x3d	; 61
    8f34:	de b7       	in	r29, 0x3e	; 62
    8f36:	2b 97       	sbiw	r28, 0x0b	; 11
    8f38:	cd bf       	out	0x3d, r28	; 61
    8f3a:	de bf       	out	0x3e, r29	; 62
    8f3c:	8a 87       	std	Y+10, r24	; 0x0a
    8f3e:	9b 87       	std	Y+11, r25	; 0x0b
		bool err = false;
    8f40:	1f 82       	std	Y+7, r1	; 0x07
		uint16_t i, j;

		uint16_t initialization_flag = eeprom_read_word(0);
    8f42:	80 e0       	ldi	r24, 0x00	; 0
    8f44:	90 e0       	ldi	r25, 0x00	; 0
    8f46:	0e 94 9d 78 	call	0xf13a	; 0xf13a <eeprom_read_word>
    8f4a:	88 87       	std	Y+8, r24	; 0x08
    8f4c:	99 87       	std	Y+9, r25	; 0x09

		if(initialization_flag != EEPROM_INITIALIZED_FLAG)
    8f4e:	88 85       	ldd	r24, Y+8	; 0x08
    8f50:	99 85       	ldd	r25, Y+9	; 0x09
    8f52:	8e 3c       	cpi	r24, 0xCE	; 206
    8f54:	91 05       	cpc	r25, r1
    8f56:	09 f4       	brne	.+2      	; 0x8f5a <_ZN13EepromManager20initializeEEPROMVarsEv+0x2c>
    8f58:	d9 c0       	rjmp	.+434    	; 0x910c <_ZN13EepromManager20initializeEEPROMVarsEv+0x1de>
		{
			g_id_codespeed = EEPROM_ID_CODE_SPEED_DEFAULT;
    8f5a:	84 e1       	ldi	r24, 0x14	; 20
    8f5c:	80 93 0b 40 	sts	0x400B, r24	; 0x80400b <g_id_codespeed>
			avr_eeprom_write_byte(Id_codespeed, g_id_codespeed);
    8f60:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    8f64:	68 2f       	mov	r22, r24
    8f66:	88 e2       	ldi	r24, 0x28	; 40
    8f68:	90 e0       	ldi	r25, 0x00	; 0
    8f6a:	0e 94 6e 43 	call	0x86dc	; 0x86dc <_Z21avr_eeprom_write_bytejh>

			g_fox = EEPROM_FOX_SETTING_DEFAULT;
    8f6e:	81 e0       	ldi	r24, 0x01	; 1
    8f70:	80 93 1b 40 	sts	0x401B, r24	; 0x80401b <g_fox>
			avr_eeprom_write_byte(Fox_setting, g_fox);
    8f74:	80 91 1b 40 	lds	r24, 0x401B	; 0x80401b <g_fox>
    8f78:	68 2f       	mov	r22, r24
    8f7a:	89 e2       	ldi	r24, 0x29	; 41
    8f7c:	90 e0       	ldi	r25, 0x00	; 0
    8f7e:	0e 94 6e 43 	call	0x86dc	; 0x86dc <_Z21avr_eeprom_write_bytejh>

			g_event_start_epoch = EEPROM_START_EPOCH_DEFAULT;
    8f82:	10 92 bc 47 	sts	0x47BC, r1	; 0x8047bc <g_event_start_epoch>
    8f86:	10 92 bd 47 	sts	0x47BD, r1	; 0x8047bd <g_event_start_epoch+0x1>
    8f8a:	10 92 be 47 	sts	0x47BE, r1	; 0x8047be <g_event_start_epoch+0x2>
    8f8e:	10 92 bf 47 	sts	0x47BF, r1	; 0x8047bf <g_event_start_epoch+0x3>
			avr_eeprom_write_dword(Event_start_epoch, g_event_start_epoch);
    8f92:	80 91 bc 47 	lds	r24, 0x47BC	; 0x8047bc <g_event_start_epoch>
    8f96:	90 91 bd 47 	lds	r25, 0x47BD	; 0x8047bd <g_event_start_epoch+0x1>
    8f9a:	a0 91 be 47 	lds	r26, 0x47BE	; 0x8047be <g_event_start_epoch+0x2>
    8f9e:	b0 91 bf 47 	lds	r27, 0x47BF	; 0x8047bf <g_event_start_epoch+0x3>
    8fa2:	ac 01       	movw	r20, r24
    8fa4:	bd 01       	movw	r22, r26
    8fa6:	82 e0       	ldi	r24, 0x02	; 2
    8fa8:	90 e0       	ldi	r25, 0x00	; 0
    8faa:	0e 94 d0 43 	call	0x87a0	; 0x87a0 <_Z22avr_eeprom_write_dwordjm>

			g_event_finish_epoch = EEPROM_FINISH_EPOCH_DEFAULT;
    8fae:	10 92 c0 47 	sts	0x47C0, r1	; 0x8047c0 <g_event_finish_epoch>
    8fb2:	10 92 c1 47 	sts	0x47C1, r1	; 0x8047c1 <g_event_finish_epoch+0x1>
    8fb6:	10 92 c2 47 	sts	0x47C2, r1	; 0x8047c2 <g_event_finish_epoch+0x2>
    8fba:	10 92 c3 47 	sts	0x47C3, r1	; 0x8047c3 <g_event_finish_epoch+0x3>
			avr_eeprom_write_dword(Event_finish_epoch, g_event_finish_epoch);
    8fbe:	80 91 c0 47 	lds	r24, 0x47C0	; 0x8047c0 <g_event_finish_epoch>
    8fc2:	90 91 c1 47 	lds	r25, 0x47C1	; 0x8047c1 <g_event_finish_epoch+0x1>
    8fc6:	a0 91 c2 47 	lds	r26, 0x47C2	; 0x8047c2 <g_event_finish_epoch+0x2>
    8fca:	b0 91 c3 47 	lds	r27, 0x47C3	; 0x8047c3 <g_event_finish_epoch+0x3>
    8fce:	ac 01       	movw	r20, r24
    8fd0:	bd 01       	movw	r22, r26
    8fd2:	86 e0       	ldi	r24, 0x06	; 6
    8fd4:	90 e0       	ldi	r25, 0x00	; 0
    8fd6:	0e 94 d0 43 	call	0x87a0	; 0x87a0 <_Z22avr_eeprom_write_dwordjm>

			g_utc_offset = EEPROM_UTC_OFFSET_DEFAULT;
    8fda:	10 92 db 47 	sts	0x47DB, r1	; 0x8047db <g_utc_offset>
			avr_eeprom_write_byte(Utc_offset, (uint8_t)g_utc_offset);
    8fde:	80 91 db 47 	lds	r24, 0x47DB	; 0x8047db <g_utc_offset>
    8fe2:	68 2f       	mov	r22, r24
    8fe4:	8a e2       	ldi	r24, 0x2A	; 42
    8fe6:	90 e0       	ldi	r25, 0x00	; 0
    8fe8:	0e 94 6e 43 	call	0x86dc	; 0x86dc <_Z21avr_eeprom_write_bytejh>

			g_messages_text[STATION_ID][0] = '\0';
    8fec:	10 92 a3 47 	sts	0x47A3, r1	; 0x8047a3 <g_messages_text+0x15>
			avr_eeprom_write_byte(StationID_text, 0);
    8ff0:	60 e0       	ldi	r22, 0x00	; 0
    8ff2:	8a e0       	ldi	r24, 0x0A	; 10
    8ff4:	90 e0       	ldi	r25, 0x00	; 0
    8ff6:	0e 94 6e 43 	call	0x86dc	; 0x86dc <_Z21avr_eeprom_write_bytejh>

			uint8_t *v = (uint8_t*)EEPROM_DTMF_UNLOCK_CODE_DEFAULT;
    8ffa:	88 ee       	ldi	r24, 0xE8	; 232
    8ffc:	94 e4       	ldi	r25, 0x44	; 68
    8ffe:	8d 83       	std	Y+5, r24	; 0x05
    9000:	9e 83       	std	Y+6, r25	; 0x06
			i = UnlockCode;
    9002:	8f e1       	ldi	r24, 0x1F	; 31
    9004:	90 e0       	ldi	r25, 0x00	; 0
    9006:	89 83       	std	Y+1, r24	; 0x01
    9008:	9a 83       	std	Y+2, r25	; 0x02
			for(j = 0; j < strlen(EEPROM_DTMF_UNLOCK_CODE_DEFAULT); j++)
    900a:	1b 82       	std	Y+3, r1	; 0x03
    900c:	1c 82       	std	Y+4, r1	; 0x04
    900e:	8b 81       	ldd	r24, Y+3	; 0x03
    9010:	9c 81       	ldd	r25, Y+4	; 0x04
    9012:	04 97       	sbiw	r24, 0x04	; 4
    9014:	18 f5       	brcc	.+70     	; 0x905c <_ZN13EepromManager20initializeEEPROMVarsEv+0x12e>
			{
				g_unlockCode[j] = *v;
    9016:	8d 81       	ldd	r24, Y+5	; 0x05
    9018:	9e 81       	ldd	r25, Y+6	; 0x06
    901a:	fc 01       	movw	r30, r24
    901c:	20 81       	ld	r18, Z
    901e:	8b 81       	ldd	r24, Y+3	; 0x03
    9020:	9c 81       	ldd	r25, Y+4	; 0x04
    9022:	84 52       	subi	r24, 0x24	; 36
    9024:	98 4b       	sbci	r25, 0xB8	; 184
    9026:	fc 01       	movw	r30, r24
    9028:	20 83       	st	Z, r18
				avr_eeprom_write_byte(i++, *v++);
    902a:	8d 81       	ldd	r24, Y+5	; 0x05
    902c:	9e 81       	ldd	r25, Y+6	; 0x06
    902e:	9c 01       	movw	r18, r24
    9030:	2f 5f       	subi	r18, 0xFF	; 255
    9032:	3f 4f       	sbci	r19, 0xFF	; 255
    9034:	2d 83       	std	Y+5, r18	; 0x05
    9036:	3e 83       	std	Y+6, r19	; 0x06
    9038:	fc 01       	movw	r30, r24
    903a:	40 81       	ld	r20, Z
    903c:	89 81       	ldd	r24, Y+1	; 0x01
    903e:	9a 81       	ldd	r25, Y+2	; 0x02
    9040:	9c 01       	movw	r18, r24
    9042:	2f 5f       	subi	r18, 0xFF	; 255
    9044:	3f 4f       	sbci	r19, 0xFF	; 255
    9046:	29 83       	std	Y+1, r18	; 0x01
    9048:	3a 83       	std	Y+2, r19	; 0x02
    904a:	64 2f       	mov	r22, r20
    904c:	0e 94 6e 43 	call	0x86dc	; 0x86dc <_Z21avr_eeprom_write_bytejh>
			g_messages_text[STATION_ID][0] = '\0';
			avr_eeprom_write_byte(StationID_text, 0);

			uint8_t *v = (uint8_t*)EEPROM_DTMF_UNLOCK_CODE_DEFAULT;
			i = UnlockCode;
			for(j = 0; j < strlen(EEPROM_DTMF_UNLOCK_CODE_DEFAULT); j++)
    9050:	8b 81       	ldd	r24, Y+3	; 0x03
    9052:	9c 81       	ldd	r25, Y+4	; 0x04
    9054:	01 96       	adiw	r24, 0x01	; 1
    9056:	8b 83       	std	Y+3, r24	; 0x03
    9058:	9c 83       	std	Y+4, r25	; 0x04
    905a:	d9 cf       	rjmp	.-78     	; 0x900e <_ZN13EepromManager20initializeEEPROMVarsEv+0xe0>
			{
				g_unlockCode[j] = *v;
				avr_eeprom_write_byte(i++, *v++);
			}

			avr_eeprom_write_byte(i, 0);
    905c:	89 81       	ldd	r24, Y+1	; 0x01
    905e:	9a 81       	ldd	r25, Y+2	; 0x02
    9060:	60 e0       	ldi	r22, 0x00	; 0
    9062:	0e 94 6e 43 	call	0x86dc	; 0x86dc <_Z21avr_eeprom_write_bytejh>
			g_unlockCode[j] = '\0';
    9066:	8b 81       	ldd	r24, Y+3	; 0x03
    9068:	9c 81       	ldd	r25, Y+4	; 0x04
    906a:	84 52       	subi	r24, 0x24	; 36
    906c:	98 4b       	sbci	r25, 0xB8	; 184
    906e:	fc 01       	movw	r30, r24
    9070:	10 82       	st	Z, r1
			
			g_80m_frequency = EEPROM_TX_80M_FREQUENCY_DEFAULT;
    9072:	80 e2       	ldi	r24, 0x20	; 32
    9074:	94 e0       	ldi	r25, 0x04	; 4
    9076:	a6 e3       	ldi	r26, 0x36	; 54
    9078:	b0 e0       	ldi	r27, 0x00	; 0
    907a:	80 93 2b 40 	sts	0x402B, r24	; 0x80402b <g_80m_frequency>
    907e:	90 93 2c 40 	sts	0x402C, r25	; 0x80402c <g_80m_frequency+0x1>
    9082:	a0 93 2d 40 	sts	0x402D, r26	; 0x80402d <g_80m_frequency+0x2>
    9086:	b0 93 2e 40 	sts	0x402E, r27	; 0x80402e <g_80m_frequency+0x3>
			avr_eeprom_write_dword(Frequency, g_80m_frequency);
    908a:	80 91 2b 40 	lds	r24, 0x402B	; 0x80402b <g_80m_frequency>
    908e:	90 91 2c 40 	lds	r25, 0x402C	; 0x80402c <g_80m_frequency+0x1>
    9092:	a0 91 2d 40 	lds	r26, 0x402D	; 0x80402d <g_80m_frequency+0x2>
    9096:	b0 91 2e 40 	lds	r27, 0x402E	; 0x80402e <g_80m_frequency+0x3>
    909a:	ac 01       	movw	r20, r24
    909c:	bd 01       	movw	r22, r26
    909e:	8b e2       	ldi	r24, 0x2B	; 43
    90a0:	90 e0       	ldi	r25, 0x00	; 0
    90a2:	0e 94 d0 43 	call	0x87a0	; 0x87a0 <_Z22avr_eeprom_write_dwordjm>

			g_rtty_offset = EEPROM_RTTY_OFFSET_FREQUENCY_DEFAULT;
    90a6:	8a ea       	ldi	r24, 0xAA	; 170
    90a8:	90 e0       	ldi	r25, 0x00	; 0
    90aa:	a0 e0       	ldi	r26, 0x00	; 0
    90ac:	b0 e0       	ldi	r27, 0x00	; 0
    90ae:	80 93 31 40 	sts	0x4031, r24	; 0x804031 <g_rtty_offset>
    90b2:	90 93 32 40 	sts	0x4032, r25	; 0x804032 <g_rtty_offset+0x1>
    90b6:	a0 93 33 40 	sts	0x4033, r26	; 0x804033 <g_rtty_offset+0x2>
    90ba:	b0 93 34 40 	sts	0x4034, r27	; 0x804034 <g_rtty_offset+0x3>
			avr_eeprom_write_dword(Frequency, g_80m_frequency);
    90be:	80 91 2b 40 	lds	r24, 0x402B	; 0x80402b <g_80m_frequency>
    90c2:	90 91 2c 40 	lds	r25, 0x402C	; 0x80402c <g_80m_frequency+0x1>
    90c6:	a0 91 2d 40 	lds	r26, 0x402D	; 0x80402d <g_80m_frequency+0x2>
    90ca:	b0 91 2e 40 	lds	r27, 0x402E	; 0x80402e <g_80m_frequency+0x3>
    90ce:	ac 01       	movw	r20, r24
    90d0:	bd 01       	movw	r22, r26
    90d2:	8b e2       	ldi	r24, 0x2B	; 43
    90d4:	90 e0       	ldi	r25, 0x00	; 0
    90d6:	0e 94 d0 43 	call	0x87a0	; 0x87a0 <_Z22avr_eeprom_write_dwordjm>

			g_80m_power_level_mW = EEPROM_TX_80M_POWER_MW_DEFAULT;
    90da:	84 ef       	ldi	r24, 0xF4	; 244
    90dc:	91 e0       	ldi	r25, 0x01	; 1
    90de:	80 93 2f 40 	sts	0x402F, r24	; 0x80402f <g_80m_power_level_mW>
    90e2:	90 93 30 40 	sts	0x4030, r25	; 0x804030 <g_80m_power_level_mW+0x1>
			avr_eeprom_write_dword(RF_Power, g_80m_power_level_mW);
    90e6:	80 91 2f 40 	lds	r24, 0x402F	; 0x80402f <g_80m_power_level_mW>
    90ea:	90 91 30 40 	lds	r25, 0x4030	; 0x804030 <g_80m_power_level_mW+0x1>
    90ee:	cc 01       	movw	r24, r24
    90f0:	a0 e0       	ldi	r26, 0x00	; 0
    90f2:	b0 e0       	ldi	r27, 0x00	; 0
    90f4:	ac 01       	movw	r20, r24
    90f6:	bd 01       	movw	r22, r26
    90f8:	83 e3       	ldi	r24, 0x33	; 51
    90fa:	90 e0       	ldi	r25, 0x00	; 0
    90fc:	0e 94 d0 43 	call	0x87a0	; 0x87a0 <_Z22avr_eeprom_write_dwordjm>

			/* Done */

			avr_eeprom_write_word(0, EEPROM_INITIALIZED_FLAG);
    9100:	6e ec       	ldi	r22, 0xCE	; 206
    9102:	70 e0       	ldi	r23, 0x00	; 0
    9104:	80 e0       	ldi	r24, 0x00	; 0
    9106:	90 e0       	ldi	r25, 0x00	; 0
    9108:	0e 94 9d 43 	call	0x873a	; 0x873a <_Z21avr_eeprom_write_wordjj>
		}
		
		return(err);
    910c:	8f 81       	ldd	r24, Y+7	; 0x07
	}
    910e:	2b 96       	adiw	r28, 0x0b	; 11
    9110:	cd bf       	out	0x3d, r28	; 61
    9112:	de bf       	out	0x3e, r29	; 62
    9114:	df 91       	pop	r29
    9116:	cf 91       	pop	r28
    9118:	08 95       	ret

0000911a <_ZN8GoertzelC1Eff>:
		highValueCount++;
	}

	Q2 = Q1;
	Q1 = Q0;
}
    911a:	0f 93       	push	r16
    911c:	1f 93       	push	r17
    911e:	cf 93       	push	r28
    9120:	df 93       	push	r29
    9122:	cd b7       	in	r28, 0x3d	; 61
    9124:	de b7       	in	r29, 0x3e	; 62
    9126:	62 97       	sbiw	r28, 0x12	; 18
    9128:	cd bf       	out	0x3d, r28	; 61
    912a:	de bf       	out	0x3e, r29	; 62
    912c:	89 87       	std	Y+9, r24	; 0x09
    912e:	9a 87       	std	Y+10, r25	; 0x0a
    9130:	4b 87       	std	Y+11, r20	; 0x0b
    9132:	5c 87       	std	Y+12, r21	; 0x0c
    9134:	6d 87       	std	Y+13, r22	; 0x0d
    9136:	7e 87       	std	Y+14, r23	; 0x0e
    9138:	0f 87       	std	Y+15, r16	; 0x0f
    913a:	18 8b       	std	Y+16, r17	; 0x10
    913c:	29 8b       	std	Y+17, r18	; 0x11
    913e:	3a 8b       	std	Y+18, r19	; 0x12
    9140:	8f 85       	ldd	r24, Y+15	; 0x0f
    9142:	98 89       	ldd	r25, Y+16	; 0x10
    9144:	a9 89       	ldd	r26, Y+17	; 0x11
    9146:	ba 89       	ldd	r27, Y+18	; 0x12
    9148:	80 93 ff 47 	sts	0x47FF, r24	; 0x8047ff <_SAMPLING_FREQUENCY>
    914c:	90 93 00 48 	sts	0x4800, r25	; 0x804800 <_SAMPLING_FREQUENCY+0x1>
    9150:	a0 93 01 48 	sts	0x4801, r26	; 0x804801 <_SAMPLING_FREQUENCY+0x2>
    9154:	b0 93 02 48 	sts	0x4802, r27	; 0x804802 <_SAMPLING_FREQUENCY+0x3>
    9158:	8b 85       	ldd	r24, Y+11	; 0x0b
    915a:	9c 85       	ldd	r25, Y+12	; 0x0c
    915c:	ad 85       	ldd	r26, Y+13	; 0x0d
    915e:	be 85       	ldd	r27, Y+14	; 0x0e
    9160:	89 83       	std	Y+1, r24	; 0x01
    9162:	9a 83       	std	Y+2, r25	; 0x02
    9164:	ab 83       	std	Y+3, r26	; 0x03
    9166:	bc 83       	std	Y+4, r27	; 0x04
    9168:	84 e6       	ldi	r24, 0x64	; 100
    916a:	90 e0       	ldi	r25, 0x00	; 0
    916c:	8d 83       	std	Y+5, r24	; 0x05
    916e:	9e 83       	std	Y+6, r25	; 0x06
    9170:	81 ed       	ldi	r24, 0xD1	; 209
    9172:	90 e0       	ldi	r25, 0x00	; 0
    9174:	8f 83       	std	Y+7, r24	; 0x07
    9176:	98 87       	std	Y+8, r25	; 0x08
    9178:	8f 81       	ldd	r24, Y+7	; 0x07
    917a:	98 85       	ldd	r25, Y+8	; 0x08
    917c:	09 2e       	mov	r0, r25
    917e:	00 0c       	add	r0, r0
    9180:	aa 0b       	sbc	r26, r26
    9182:	bb 0b       	sbc	r27, r27
    9184:	bc 01       	movw	r22, r24
    9186:	cd 01       	movw	r24, r26
    9188:	0e 94 67 70 	call	0xe0ce	; 0xe0ce <__floatsisf>
    918c:	dc 01       	movw	r26, r24
    918e:	cb 01       	movw	r24, r22
    9190:	29 81       	ldd	r18, Y+1	; 0x01
    9192:	3a 81       	ldd	r19, Y+2	; 0x02
    9194:	4b 81       	ldd	r20, Y+3	; 0x03
    9196:	5c 81       	ldd	r21, Y+4	; 0x04
    9198:	bc 01       	movw	r22, r24
    919a:	cd 01       	movw	r24, r26
    919c:	0e 94 b8 6f 	call	0xdf70	; 0xdf70 <__cmpsf2>
    91a0:	88 23       	and	r24, r24
    91a2:	6c f4       	brge	.+26     	; 0x91be <_ZN8GoertzelC1Eff+0xa4>
    91a4:	8f 81       	ldd	r24, Y+7	; 0x07
    91a6:	98 85       	ldd	r25, Y+8	; 0x08
    91a8:	09 2e       	mov	r0, r25
    91aa:	00 0c       	add	r0, r0
    91ac:	aa 0b       	sbc	r26, r26
    91ae:	bb 0b       	sbc	r27, r27
    91b0:	bc 01       	movw	r22, r24
    91b2:	cd 01       	movw	r24, r26
    91b4:	0e 94 67 70 	call	0xe0ce	; 0xe0ce <__floatsisf>
    91b8:	dc 01       	movw	r26, r24
    91ba:	cb 01       	movw	r24, r22
    91bc:	27 c0       	rjmp	.+78     	; 0x920c <_ZN8GoertzelC1Eff+0xf2>
    91be:	8d 81       	ldd	r24, Y+5	; 0x05
    91c0:	9e 81       	ldd	r25, Y+6	; 0x06
    91c2:	09 2e       	mov	r0, r25
    91c4:	00 0c       	add	r0, r0
    91c6:	aa 0b       	sbc	r26, r26
    91c8:	bb 0b       	sbc	r27, r27
    91ca:	bc 01       	movw	r22, r24
    91cc:	cd 01       	movw	r24, r26
    91ce:	0e 94 67 70 	call	0xe0ce	; 0xe0ce <__floatsisf>
    91d2:	dc 01       	movw	r26, r24
    91d4:	cb 01       	movw	r24, r22
    91d6:	29 81       	ldd	r18, Y+1	; 0x01
    91d8:	3a 81       	ldd	r19, Y+2	; 0x02
    91da:	4b 81       	ldd	r20, Y+3	; 0x03
    91dc:	5c 81       	ldd	r21, Y+4	; 0x04
    91de:	bc 01       	movw	r22, r24
    91e0:	cd 01       	movw	r24, r26
    91e2:	0e 94 58 71 	call	0xe2b0	; 0xe2b0 <__gesf2>
    91e6:	18 16       	cp	r1, r24
    91e8:	6c f4       	brge	.+26     	; 0x9204 <_ZN8GoertzelC1Eff+0xea>
    91ea:	8d 81       	ldd	r24, Y+5	; 0x05
    91ec:	9e 81       	ldd	r25, Y+6	; 0x06
    91ee:	09 2e       	mov	r0, r25
    91f0:	00 0c       	add	r0, r0
    91f2:	aa 0b       	sbc	r26, r26
    91f4:	bb 0b       	sbc	r27, r27
    91f6:	bc 01       	movw	r22, r24
    91f8:	cd 01       	movw	r24, r26
    91fa:	0e 94 67 70 	call	0xe0ce	; 0xe0ce <__floatsisf>
    91fe:	dc 01       	movw	r26, r24
    9200:	cb 01       	movw	r24, r22
    9202:	04 c0       	rjmp	.+8      	; 0x920c <_ZN8GoertzelC1Eff+0xf2>
    9204:	89 81       	ldd	r24, Y+1	; 0x01
    9206:	9a 81       	ldd	r25, Y+2	; 0x02
    9208:	ab 81       	ldd	r26, Y+3	; 0x03
    920a:	bc 81       	ldd	r27, Y+4	; 0x04
    920c:	bc 01       	movw	r22, r24
    920e:	cd 01       	movw	r24, r26
    9210:	0e 94 2f 70 	call	0xe05e	; 0xe05e <__fixsfsi>
    9214:	dc 01       	movw	r26, r24
    9216:	cb 01       	movw	r24, r22
    9218:	80 93 03 48 	sts	0x4803, r24	; 0x804803 <_N>
    921c:	90 93 04 48 	sts	0x4804, r25	; 0x804804 <_N+0x1>
    9220:	80 91 03 48 	lds	r24, 0x4803	; 0x804803 <_N>
    9224:	90 91 04 48 	lds	r25, 0x4804	; 0x804804 <_N+0x1>
    9228:	88 0f       	add	r24, r24
    922a:	99 1f       	adc	r25, r25
    922c:	0e 94 66 72 	call	0xe4cc	; 0xe4cc <malloc>
    9230:	80 93 08 48 	sts	0x4808, r24	; 0x804808 <testData>
    9234:	90 93 09 48 	sts	0x4809, r25	; 0x804809 <testData+0x1>
    9238:	00 00       	nop
    923a:	62 96       	adiw	r28, 0x12	; 18
    923c:	cd bf       	out	0x3d, r28	; 61
    923e:	de bf       	out	0x3e, r29	; 62
    9240:	df 91       	pop	r29
    9242:	cf 91       	pop	r28
    9244:	1f 91       	pop	r17
    9246:	0f 91       	pop	r16
    9248:	08 95       	ret

0000924a <_ZN8GoertzelD1Ev>:
    924a:	cf 93       	push	r28
    924c:	df 93       	push	r29
    924e:	00 d0       	rcall	.+0      	; 0x9250 <_ZN8GoertzelD1Ev+0x6>
    9250:	cd b7       	in	r28, 0x3d	; 61
    9252:	de b7       	in	r29, 0x3e	; 62
    9254:	89 83       	std	Y+1, r24	; 0x01
    9256:	9a 83       	std	Y+2, r25	; 0x02
    9258:	80 91 08 48 	lds	r24, 0x4808	; 0x804808 <testData>
    925c:	90 91 09 48 	lds	r25, 0x4809	; 0x804809 <testData+0x1>
    9260:	0e 94 fe 72 	call	0xe5fc	; 0xe5fc <free>
    9264:	00 00       	nop
    9266:	0f 90       	pop	r0
    9268:	0f 90       	pop	r0
    926a:	df 91       	pop	r29
    926c:	cf 91       	pop	r28
    926e:	08 95       	ret

00009270 <_ZN8Goertzel9DataPointEi>:

bool Goertzel::DataPoint(int data)
{
    9270:	cf 93       	push	r28
    9272:	df 93       	push	r29
    9274:	00 d0       	rcall	.+0      	; 0x9276 <_ZN8Goertzel9DataPointEi+0x6>
    9276:	00 d0       	rcall	.+0      	; 0x9278 <_ZN8Goertzel9DataPointEi+0x8>
    9278:	cd b7       	in	r28, 0x3d	; 61
    927a:	de b7       	in	r29, 0x3e	; 62
    927c:	89 83       	std	Y+1, r24	; 0x01
    927e:	9a 83       	std	Y+2, r25	; 0x02
    9280:	6b 83       	std	Y+3, r22	; 0x03
    9282:	7c 83       	std	Y+4, r23	; 0x04
	if(_samplesReady)
    9284:	80 91 07 48 	lds	r24, 0x4807	; 0x804807 <_samplesReady>
    9288:	88 23       	and	r24, r24
    928a:	19 f0       	breq	.+6      	; 0x9292 <_ZN8Goertzel9DataPointEi+0x22>
	{
		return(_samplesReady);
    928c:	80 91 07 48 	lds	r24, 0x4807	; 0x804807 <_samplesReady>
    9290:	32 c0       	rjmp	.+100    	; 0x92f6 <_ZN8Goertzel9DataPointEi+0x86>
	}

	testData[_index] = data;
    9292:	20 91 08 48 	lds	r18, 0x4808	; 0x804808 <testData>
    9296:	30 91 09 48 	lds	r19, 0x4809	; 0x804809 <testData+0x1>
    929a:	80 91 05 48 	lds	r24, 0x4805	; 0x804805 <_index>
    929e:	90 91 06 48 	lds	r25, 0x4806	; 0x804806 <_index+0x1>
    92a2:	88 0f       	add	r24, r24
    92a4:	99 1f       	adc	r25, r25
    92a6:	82 0f       	add	r24, r18
    92a8:	93 1f       	adc	r25, r19
    92aa:	2b 81       	ldd	r18, Y+3	; 0x03
    92ac:	3c 81       	ldd	r19, Y+4	; 0x04
    92ae:	fc 01       	movw	r30, r24
    92b0:	20 83       	st	Z, r18
    92b2:	31 83       	std	Z+1, r19	; 0x01
	_index++;
    92b4:	80 91 05 48 	lds	r24, 0x4805	; 0x804805 <_index>
    92b8:	90 91 06 48 	lds	r25, 0x4806	; 0x804806 <_index+0x1>
    92bc:	01 96       	adiw	r24, 0x01	; 1
    92be:	80 93 05 48 	sts	0x4805, r24	; 0x804805 <_index>
    92c2:	90 93 06 48 	sts	0x4806, r25	; 0x804806 <_index+0x1>
	if(_index >= _N)
    92c6:	20 91 05 48 	lds	r18, 0x4805	; 0x804805 <_index>
    92ca:	30 91 06 48 	lds	r19, 0x4806	; 0x804806 <_index+0x1>
    92ce:	80 91 03 48 	lds	r24, 0x4803	; 0x804803 <_N>
    92d2:	90 91 04 48 	lds	r25, 0x4804	; 0x804804 <_N+0x1>
    92d6:	41 e0       	ldi	r20, 0x01	; 1
    92d8:	28 17       	cp	r18, r24
    92da:	39 07       	cpc	r19, r25
    92dc:	0c f4       	brge	.+2      	; 0x92e0 <_ZN8Goertzel9DataPointEi+0x70>
    92de:	40 e0       	ldi	r20, 0x00	; 0
    92e0:	44 23       	and	r20, r20
    92e2:	39 f0       	breq	.+14     	; 0x92f2 <_ZN8Goertzel9DataPointEi+0x82>
	{
		_index = 0;
    92e4:	10 92 05 48 	sts	0x4805, r1	; 0x804805 <_index>
    92e8:	10 92 06 48 	sts	0x4806, r1	; 0x804806 <_index+0x1>
		_samplesReady = true;
    92ec:	81 e0       	ldi	r24, 0x01	; 1
    92ee:	80 93 07 48 	sts	0x4807, r24	; 0x804807 <_samplesReady>
	}

	return(_samplesReady);
    92f2:	80 91 07 48 	lds	r24, 0x4807	; 0x804807 <_samplesReady>
}
    92f6:	24 96       	adiw	r28, 0x04	; 4
    92f8:	cd bf       	out	0x3d, r28	; 61
    92fa:	de bf       	out	0x3e, r29	; 62
    92fc:	df 91       	pop	r29
    92fe:	cf 91       	pop	r28
    9300:	08 95       	ret

00009302 <PORTB_set_pin_pull_mode>:
 *
 * \param[in] pin       The pin number within port
 * \param[in] pull_mode Pin pull mode
 */
static inline void PORTB_set_pin_pull_mode(const uint8_t pin, const enum port_pull_mode pull_mode)
{
    9302:	cf 93       	push	r28
    9304:	df 93       	push	r29
    9306:	00 d0       	rcall	.+0      	; 0x9308 <PORTB_set_pin_pull_mode+0x6>
    9308:	00 d0       	rcall	.+0      	; 0x930a <PORTB_set_pin_pull_mode+0x8>
    930a:	cd b7       	in	r28, 0x3d	; 61
    930c:	de b7       	in	r29, 0x3e	; 62
    930e:	8b 83       	std	Y+3, r24	; 0x03
    9310:	6c 83       	std	Y+4, r22	; 0x04
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTB + 0x10 + pin);
    9312:	8b 81       	ldd	r24, Y+3	; 0x03
    9314:	88 2f       	mov	r24, r24
    9316:	90 e0       	ldi	r25, 0x00	; 0
    9318:	80 5d       	subi	r24, 0xD0	; 208
    931a:	9b 4f       	sbci	r25, 0xFB	; 251
    931c:	89 83       	std	Y+1, r24	; 0x01
    931e:	9a 83       	std	Y+2, r25	; 0x02

	if (pull_mode == PORT_PULL_UP) {
    9320:	8c 81       	ldd	r24, Y+4	; 0x04
    9322:	81 30       	cpi	r24, 0x01	; 1
    9324:	59 f4       	brne	.+22     	; 0x933c <PORTB_set_pin_pull_mode+0x3a>
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
    9326:	89 81       	ldd	r24, Y+1	; 0x01
    9328:	9a 81       	ldd	r25, Y+2	; 0x02
    932a:	fc 01       	movw	r30, r24
    932c:	80 81       	ld	r24, Z
    932e:	28 2f       	mov	r18, r24
    9330:	28 60       	ori	r18, 0x08	; 8
    9332:	89 81       	ldd	r24, Y+1	; 0x01
    9334:	9a 81       	ldd	r25, Y+2	; 0x02
    9336:	fc 01       	movw	r30, r24
    9338:	20 83       	st	Z, r18
	} else if (pull_mode == PORT_PULL_OFF) {
		*port_pin_ctrl &= ~PORT_PULLUPEN_bm;
	}
}
    933a:	0d c0       	rjmp	.+26     	; 0x9356 <PORTB_set_pin_pull_mode+0x54>
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTB + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
	} else if (pull_mode == PORT_PULL_OFF) {
    933c:	8c 81       	ldd	r24, Y+4	; 0x04
    933e:	88 23       	and	r24, r24
    9340:	51 f4       	brne	.+20     	; 0x9356 <PORTB_set_pin_pull_mode+0x54>
		*port_pin_ctrl &= ~PORT_PULLUPEN_bm;
    9342:	89 81       	ldd	r24, Y+1	; 0x01
    9344:	9a 81       	ldd	r25, Y+2	; 0x02
    9346:	fc 01       	movw	r30, r24
    9348:	80 81       	ld	r24, Z
    934a:	28 2f       	mov	r18, r24
    934c:	27 7f       	andi	r18, 0xF7	; 247
    934e:	89 81       	ldd	r24, Y+1	; 0x01
    9350:	9a 81       	ldd	r25, Y+2	; 0x02
    9352:	fc 01       	movw	r30, r24
    9354:	20 83       	st	Z, r18
	}
}
    9356:	00 00       	nop
    9358:	24 96       	adiw	r28, 0x04	; 4
    935a:	cd bf       	out	0x3d, r28	; 61
    935c:	de bf       	out	0x3e, r29	; 62
    935e:	df 91       	pop	r29
    9360:	cf 91       	pop	r28
    9362:	08 95       	ret

00009364 <PORTC_set_pin_pull_mode>:
 *
 * \param[in] pin       The pin number within port
 * \param[in] pull_mode Pin pull mode
 */
static inline void PORTC_set_pin_pull_mode(const uint8_t pin, const enum port_pull_mode pull_mode)
{
    9364:	cf 93       	push	r28
    9366:	df 93       	push	r29
    9368:	00 d0       	rcall	.+0      	; 0x936a <PORTC_set_pin_pull_mode+0x6>
    936a:	00 d0       	rcall	.+0      	; 0x936c <PORTC_set_pin_pull_mode+0x8>
    936c:	cd b7       	in	r28, 0x3d	; 61
    936e:	de b7       	in	r29, 0x3e	; 62
    9370:	8b 83       	std	Y+3, r24	; 0x03
    9372:	6c 83       	std	Y+4, r22	; 0x04
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTC + 0x10 + pin);
    9374:	8b 81       	ldd	r24, Y+3	; 0x03
    9376:	88 2f       	mov	r24, r24
    9378:	90 e0       	ldi	r25, 0x00	; 0
    937a:	80 5b       	subi	r24, 0xB0	; 176
    937c:	9b 4f       	sbci	r25, 0xFB	; 251
    937e:	89 83       	std	Y+1, r24	; 0x01
    9380:	9a 83       	std	Y+2, r25	; 0x02

	if (pull_mode == PORT_PULL_UP) {
    9382:	8c 81       	ldd	r24, Y+4	; 0x04
    9384:	81 30       	cpi	r24, 0x01	; 1
    9386:	59 f4       	brne	.+22     	; 0x939e <PORTC_set_pin_pull_mode+0x3a>
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
    9388:	89 81       	ldd	r24, Y+1	; 0x01
    938a:	9a 81       	ldd	r25, Y+2	; 0x02
    938c:	fc 01       	movw	r30, r24
    938e:	80 81       	ld	r24, Z
    9390:	28 2f       	mov	r18, r24
    9392:	28 60       	ori	r18, 0x08	; 8
    9394:	89 81       	ldd	r24, Y+1	; 0x01
    9396:	9a 81       	ldd	r25, Y+2	; 0x02
    9398:	fc 01       	movw	r30, r24
    939a:	20 83       	st	Z, r18
	} else if (pull_mode == PORT_PULL_OFF) {
		*port_pin_ctrl &= ~PORT_PULLUPEN_bm;
	}
}
    939c:	0d c0       	rjmp	.+26     	; 0x93b8 <PORTC_set_pin_pull_mode+0x54>
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTC + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
	} else if (pull_mode == PORT_PULL_OFF) {
    939e:	8c 81       	ldd	r24, Y+4	; 0x04
    93a0:	88 23       	and	r24, r24
    93a2:	51 f4       	brne	.+20     	; 0x93b8 <PORTC_set_pin_pull_mode+0x54>
		*port_pin_ctrl &= ~PORT_PULLUPEN_bm;
    93a4:	89 81       	ldd	r24, Y+1	; 0x01
    93a6:	9a 81       	ldd	r25, Y+2	; 0x02
    93a8:	fc 01       	movw	r30, r24
    93aa:	80 81       	ld	r24, Z
    93ac:	28 2f       	mov	r18, r24
    93ae:	27 7f       	andi	r18, 0xF7	; 247
    93b0:	89 81       	ldd	r24, Y+1	; 0x01
    93b2:	9a 81       	ldd	r25, Y+2	; 0x02
    93b4:	fc 01       	movw	r30, r24
    93b6:	20 83       	st	Z, r18
	}
}
    93b8:	00 00       	nop
    93ba:	24 96       	adiw	r28, 0x04	; 4
    93bc:	cd bf       	out	0x3d, r28	; 61
    93be:	de bf       	out	0x3e, r29	; 62
    93c0:	df 91       	pop	r29
    93c2:	cf 91       	pop	r28
    93c4:	08 95       	ret

000093c6 <I2C_0_Init>:
/************************************************************************/
/* I2C_0                                                               */
/************************************************************************/

void I2C_0_Init(void)
{
    93c6:	cf 93       	push	r28
    93c8:	df 93       	push	r29
    93ca:	cd b7       	in	r28, 0x3d	; 61
    93cc:	de b7       	in	r29, 0x3e	; 62
	/* Select I2C pins PC2/PC3 */
	PORTMUX.TWIROUTEA &= 0x0A;
    93ce:	80 ee       	ldi	r24, 0xE0	; 224
    93d0:	95 e0       	ldi	r25, 0x05	; 5
    93d2:	20 ee       	ldi	r18, 0xE0	; 224
    93d4:	35 e0       	ldi	r19, 0x05	; 5
    93d6:	f9 01       	movw	r30, r18
    93d8:	25 81       	ldd	r18, Z+5	; 0x05
    93da:	2a 70       	andi	r18, 0x0A	; 10
    93dc:	fc 01       	movw	r30, r24
    93de:	25 83       	std	Z+5, r18	; 0x05
	PORTMUX.TWIROUTEA |= 0x02;
    93e0:	80 ee       	ldi	r24, 0xE0	; 224
    93e2:	95 e0       	ldi	r25, 0x05	; 5
    93e4:	20 ee       	ldi	r18, 0xE0	; 224
    93e6:	35 e0       	ldi	r19, 0x05	; 5
    93e8:	f9 01       	movw	r30, r18
    93ea:	25 81       	ldd	r18, Z+5	; 0x05
    93ec:	22 60       	ori	r18, 0x02	; 2
    93ee:	fc 01       	movw	r30, r24
    93f0:	25 83       	std	Z+5, r18	; 0x05
	
	/* Host Baud Rate Control */
	TWI0.MBAUD = TWI_BAUD((I2C_SCL_FREQ), 0.3);
    93f2:	80 e0       	ldi	r24, 0x00	; 0
    93f4:	99 e0       	ldi	r25, 0x09	; 9
    93f6:	2f e6       	ldi	r18, 0x6F	; 111
    93f8:	fc 01       	movw	r30, r24
    93fa:	26 83       	std	Z+6, r18	; 0x06
	
	/* Enable TWI */
	TWI0.MCTRLA = TWI_ENABLE_bm;
    93fc:	80 e0       	ldi	r24, 0x00	; 0
    93fe:	99 e0       	ldi	r25, 0x09	; 9
    9400:	21 e0       	ldi	r18, 0x01	; 1
    9402:	fc 01       	movw	r30, r24
    9404:	23 83       	std	Z+3, r18	; 0x03
	
	/* Initialize the address register */
	TWI0.MADDR = 0x00;
    9406:	80 e0       	ldi	r24, 0x00	; 0
    9408:	99 e0       	ldi	r25, 0x09	; 9
    940a:	fc 01       	movw	r30, r24
    940c:	17 82       	std	Z+7, r1	; 0x07
	
	/* Initialize the data register */
	TWI0.MDATA = 0x00;
    940e:	80 e0       	ldi	r24, 0x00	; 0
    9410:	99 e0       	ldi	r25, 0x09	; 9
    9412:	fc 01       	movw	r30, r24
    9414:	10 86       	std	Z+8, r1	; 0x08
	
	/* Set bus state idle */
	TWI0.MSTATUS = TWI_BUSSTATE_IDLE_gc;
    9416:	80 e0       	ldi	r24, 0x00	; 0
    9418:	99 e0       	ldi	r25, 0x09	; 9
    941a:	21 e0       	ldi	r18, 0x01	; 1
    941c:	fc 01       	movw	r30, r24
    941e:	25 83       	std	Z+5, r18	; 0x05
	/* Select I2C pins PC2/PC3 */
	
	PORTC_set_pin_pull_mode(2, PORT_PULL_UP);
    9420:	61 e0       	ldi	r22, 0x01	; 1
    9422:	82 e0       	ldi	r24, 0x02	; 2
    9424:	0e 94 b2 49 	call	0x9364	; 0x9364 <PORTC_set_pin_pull_mode>
	PORTC_set_pin_pull_mode(3, PORT_PULL_UP);
    9428:	61 e0       	ldi	r22, 0x01	; 1
    942a:	83 e0       	ldi	r24, 0x03	; 3
    942c:	0e 94 b2 49 	call	0x9364	; 0x9364 <PORTC_set_pin_pull_mode>
}
    9430:	00 00       	nop
    9432:	df 91       	pop	r29
    9434:	cf 91       	pop	r28
    9436:	08 95       	ret

00009438 <_ZL11i2c_0_WaitWv>:

static uint8_t i2c_0_WaitW(void)
{
    9438:	cf 93       	push	r28
    943a:	df 93       	push	r29
    943c:	1f 92       	push	r1
    943e:	cd b7       	in	r28, 0x3d	; 61
    9440:	de b7       	in	r29, 0x3e	; 62
	uint8_t state = I2C_INIT;
    9442:	19 82       	std	Y+1, r1	; 0x01
	
	g_i2c0_timeout_ticks = 1000;
    9444:	88 ee       	ldi	r24, 0xE8	; 232
    9446:	93 e0       	ldi	r25, 0x03	; 3
    9448:	80 93 1d 40 	sts	0x401D, r24	; 0x80401d <g_i2c0_timeout_ticks>
    944c:	90 93 1e 40 	sts	0x401E, r25	; 0x80401e <g_i2c0_timeout_ticks+0x1>
	
	do
	{
		if(TWI0.MSTATUS & (TWI_WIF_bm | TWI_RIF_bm))
    9450:	80 e0       	ldi	r24, 0x00	; 0
    9452:	99 e0       	ldi	r25, 0x09	; 9
    9454:	fc 01       	movw	r30, r24
    9456:	85 81       	ldd	r24, Z+5	; 0x05
    9458:	88 2f       	mov	r24, r24
    945a:	90 e0       	ldi	r25, 0x00	; 0
    945c:	80 7c       	andi	r24, 0xC0	; 192
    945e:	99 27       	eor	r25, r25
    9460:	21 e0       	ldi	r18, 0x01	; 1
    9462:	89 2b       	or	r24, r25
    9464:	09 f4       	brne	.+2      	; 0x9468 <_ZL11i2c_0_WaitWv+0x30>
    9466:	20 e0       	ldi	r18, 0x00	; 0
    9468:	22 23       	and	r18, r18
    946a:	a1 f0       	breq	.+40     	; 0x9494 <_ZL11i2c_0_WaitWv+0x5c>
		{
			if(!(TWI0.MSTATUS & TWI_RXACK_bm))
    946c:	80 e0       	ldi	r24, 0x00	; 0
    946e:	99 e0       	ldi	r25, 0x09	; 9
    9470:	fc 01       	movw	r30, r24
    9472:	85 81       	ldd	r24, Z+5	; 0x05
    9474:	88 2f       	mov	r24, r24
    9476:	90 e0       	ldi	r25, 0x00	; 0
    9478:	80 71       	andi	r24, 0x10	; 16
    947a:	99 27       	eor	r25, r25
    947c:	21 e0       	ldi	r18, 0x01	; 1
    947e:	89 2b       	or	r24, r25
    9480:	09 f0       	breq	.+2      	; 0x9484 <_ZL11i2c_0_WaitWv+0x4c>
    9482:	20 e0       	ldi	r18, 0x00	; 0
    9484:	22 23       	and	r18, r18
    9486:	19 f0       	breq	.+6      	; 0x948e <_ZL11i2c_0_WaitWv+0x56>
			{
				/* client responded with ack - TWI goes to M1 state */
				state = I2C_ACKED;
    9488:	81 e0       	ldi	r24, 0x01	; 1
    948a:	89 83       	std	Y+1, r24	; 0x01
    948c:	13 c0       	rjmp	.+38     	; 0x94b4 <_ZL11i2c_0_WaitWv+0x7c>
			}
			else
			{
				/* address sent but no ack received - TWI goes to M3 state */
				state = I2C_NACKED;
    948e:	82 e0       	ldi	r24, 0x02	; 2
    9490:	89 83       	std	Y+1, r24	; 0x01
    9492:	10 c0       	rjmp	.+32     	; 0x94b4 <_ZL11i2c_0_WaitWv+0x7c>
			}
		}
		else if(TWI0.MSTATUS & (TWI_BUSERR_bm | TWI_ARBLOST_bm))
    9494:	80 e0       	ldi	r24, 0x00	; 0
    9496:	99 e0       	ldi	r25, 0x09	; 9
    9498:	fc 01       	movw	r30, r24
    949a:	85 81       	ldd	r24, Z+5	; 0x05
    949c:	88 2f       	mov	r24, r24
    949e:	90 e0       	ldi	r25, 0x00	; 0
    94a0:	8c 70       	andi	r24, 0x0C	; 12
    94a2:	99 27       	eor	r25, r25
    94a4:	21 e0       	ldi	r18, 0x01	; 1
    94a6:	89 2b       	or	r24, r25
    94a8:	09 f4       	brne	.+2      	; 0x94ac <_ZL11i2c_0_WaitWv+0x74>
    94aa:	20 e0       	ldi	r18, 0x00	; 0
    94ac:	22 23       	and	r18, r18
    94ae:	11 f0       	breq	.+4      	; 0x94b4 <_ZL11i2c_0_WaitWv+0x7c>
		{
			/* get here only in case of bus error or arbitration lost - M4 state */
			state = I2C_ERROR;
    94b0:	84 e0       	ldi	r24, 0x04	; 4
    94b2:	89 83       	std	Y+1, r24	; 0x01
		}
	} while(!state && g_i2c0_timeout_ticks);
    94b4:	89 81       	ldd	r24, Y+1	; 0x01
    94b6:	88 23       	and	r24, r24
    94b8:	41 f4       	brne	.+16     	; 0x94ca <_ZL11i2c_0_WaitWv+0x92>
    94ba:	80 91 1d 40 	lds	r24, 0x401D	; 0x80401d <g_i2c0_timeout_ticks>
    94be:	90 91 1e 40 	lds	r25, 0x401E	; 0x80401e <g_i2c0_timeout_ticks+0x1>
    94c2:	89 2b       	or	r24, r25
    94c4:	11 f0       	breq	.+4      	; 0x94ca <_ZL11i2c_0_WaitWv+0x92>
    94c6:	81 e0       	ldi	r24, 0x01	; 1
    94c8:	01 c0       	rjmp	.+2      	; 0x94cc <_ZL11i2c_0_WaitWv+0x94>
    94ca:	80 e0       	ldi	r24, 0x00	; 0
{
	uint8_t state = I2C_INIT;
	
	g_i2c0_timeout_ticks = 1000;
	
	do
    94cc:	88 23       	and	r24, r24
    94ce:	09 f0       	breq	.+2      	; 0x94d2 <_ZL11i2c_0_WaitWv+0x9a>
    94d0:	bf cf       	rjmp	.-130    	; 0x9450 <_ZL11i2c_0_WaitWv+0x18>
			/* get here only in case of bus error or arbitration lost - M4 state */
			state = I2C_ERROR;
		}
	} while(!state && g_i2c0_timeout_ticks);
	
	if(!g_i2c0_timeout_ticks) 
    94d2:	80 91 1d 40 	lds	r24, 0x401D	; 0x80401d <g_i2c0_timeout_ticks>
    94d6:	90 91 1e 40 	lds	r25, 0x401E	; 0x80401e <g_i2c0_timeout_ticks+0x1>
    94da:	21 e0       	ldi	r18, 0x01	; 1
    94dc:	89 2b       	or	r24, r25
    94de:	09 f0       	breq	.+2      	; 0x94e2 <_ZL11i2c_0_WaitWv+0xaa>
    94e0:	20 e0       	ldi	r18, 0x00	; 0
    94e2:	22 23       	and	r18, r18
    94e4:	11 f0       	breq	.+4      	; 0x94ea <_ZL11i2c_0_WaitWv+0xb2>
	{
		state = I2C_ERROR;
    94e6:	84 e0       	ldi	r24, 0x04	; 4
    94e8:	89 83       	std	Y+1, r24	; 0x01
	}
	
	return state;
    94ea:	89 81       	ldd	r24, Y+1	; 0x01
}
    94ec:	0f 90       	pop	r0
    94ee:	df 91       	pop	r29
    94f0:	cf 91       	pop	r28
    94f2:	08 95       	ret

000094f4 <_ZL11i2c_0_WaitRv>:

static uint8_t i2c_0_WaitR(void)
{
    94f4:	cf 93       	push	r28
    94f6:	df 93       	push	r29
    94f8:	1f 92       	push	r1
    94fa:	cd b7       	in	r28, 0x3d	; 61
    94fc:	de b7       	in	r29, 0x3e	; 62
	uint8_t state = I2C_INIT;
    94fe:	19 82       	std	Y+1, r1	; 0x01
	
	g_i2c0_timeout_ticks = 200;
    9500:	88 ec       	ldi	r24, 0xC8	; 200
    9502:	90 e0       	ldi	r25, 0x00	; 0
    9504:	80 93 1d 40 	sts	0x401D, r24	; 0x80401d <g_i2c0_timeout_ticks>
    9508:	90 93 1e 40 	sts	0x401E, r25	; 0x80401e <g_i2c0_timeout_ticks+0x1>
	
	do
	{
		if(TWI0.MSTATUS & (TWI_WIF_bm | TWI_RIF_bm))
    950c:	80 e0       	ldi	r24, 0x00	; 0
    950e:	99 e0       	ldi	r25, 0x09	; 9
    9510:	fc 01       	movw	r30, r24
    9512:	85 81       	ldd	r24, Z+5	; 0x05
    9514:	88 2f       	mov	r24, r24
    9516:	90 e0       	ldi	r25, 0x00	; 0
    9518:	80 7c       	andi	r24, 0xC0	; 192
    951a:	99 27       	eor	r25, r25
    951c:	21 e0       	ldi	r18, 0x01	; 1
    951e:	89 2b       	or	r24, r25
    9520:	09 f4       	brne	.+2      	; 0x9524 <_ZL11i2c_0_WaitRv+0x30>
    9522:	20 e0       	ldi	r18, 0x00	; 0
    9524:	22 23       	and	r18, r18
    9526:	19 f0       	breq	.+6      	; 0x952e <_ZL11i2c_0_WaitRv+0x3a>
		{
			state = I2C_READY;
    9528:	83 e0       	ldi	r24, 0x03	; 3
    952a:	89 83       	std	Y+1, r24	; 0x01
    952c:	10 c0       	rjmp	.+32     	; 0x954e <_ZL11i2c_0_WaitRv+0x5a>
		}
		else if(TWI0.MSTATUS & (TWI_BUSERR_bm | TWI_ARBLOST_bm))
    952e:	80 e0       	ldi	r24, 0x00	; 0
    9530:	99 e0       	ldi	r25, 0x09	; 9
    9532:	fc 01       	movw	r30, r24
    9534:	85 81       	ldd	r24, Z+5	; 0x05
    9536:	88 2f       	mov	r24, r24
    9538:	90 e0       	ldi	r25, 0x00	; 0
    953a:	8c 70       	andi	r24, 0x0C	; 12
    953c:	99 27       	eor	r25, r25
    953e:	21 e0       	ldi	r18, 0x01	; 1
    9540:	89 2b       	or	r24, r25
    9542:	09 f4       	brne	.+2      	; 0x9546 <_ZL11i2c_0_WaitRv+0x52>
    9544:	20 e0       	ldi	r18, 0x00	; 0
    9546:	22 23       	and	r18, r18
    9548:	11 f0       	breq	.+4      	; 0x954e <_ZL11i2c_0_WaitRv+0x5a>
		{
			/* get here only in case of bus error or arbitration lost - M4 state */
			state = I2C_ERROR;
    954a:	84 e0       	ldi	r24, 0x04	; 4
    954c:	89 83       	std	Y+1, r24	; 0x01
		}
	} while(!state && g_i2c0_timeout_ticks);
    954e:	89 81       	ldd	r24, Y+1	; 0x01
    9550:	88 23       	and	r24, r24
    9552:	41 f4       	brne	.+16     	; 0x9564 <_ZL11i2c_0_WaitRv+0x70>
    9554:	80 91 1d 40 	lds	r24, 0x401D	; 0x80401d <g_i2c0_timeout_ticks>
    9558:	90 91 1e 40 	lds	r25, 0x401E	; 0x80401e <g_i2c0_timeout_ticks+0x1>
    955c:	89 2b       	or	r24, r25
    955e:	11 f0       	breq	.+4      	; 0x9564 <_ZL11i2c_0_WaitRv+0x70>
    9560:	81 e0       	ldi	r24, 0x01	; 1
    9562:	01 c0       	rjmp	.+2      	; 0x9566 <_ZL11i2c_0_WaitRv+0x72>
    9564:	80 e0       	ldi	r24, 0x00	; 0
{
	uint8_t state = I2C_INIT;
	
	g_i2c0_timeout_ticks = 200;
	
	do
    9566:	88 23       	and	r24, r24
    9568:	09 f0       	breq	.+2      	; 0x956c <_ZL11i2c_0_WaitRv+0x78>
    956a:	d0 cf       	rjmp	.-96     	; 0x950c <_ZL11i2c_0_WaitRv+0x18>
			/* get here only in case of bus error or arbitration lost - M4 state */
			state = I2C_ERROR;
		}
	} while(!state && g_i2c0_timeout_ticks);
	
	return state;
    956c:	89 81       	ldd	r24, Y+1	; 0x01
}
    956e:	0f 90       	pop	r0
    9570:	df 91       	pop	r29
    9572:	cf 91       	pop	r28
    9574:	08 95       	ret

00009576 <I2C_0_SendData>:

/* Returns how many bytes have been sent, -1 means NACK at address, 0 means client ACKed to client address */
uint8_t I2C_0_SendData(uint8_t slaveAddr, uint8_t regAddr, uint8_t *pData, uint8_t len)
{
    9576:	cf 93       	push	r28
    9578:	df 93       	push	r29
    957a:	cd b7       	in	r28, 0x3d	; 61
    957c:	de b7       	in	r29, 0x3e	; 62
    957e:	26 97       	sbiw	r28, 0x06	; 6
    9580:	cd bf       	out	0x3d, r28	; 61
    9582:	de bf       	out	0x3e, r29	; 62
    9584:	8a 83       	std	Y+2, r24	; 0x02
    9586:	6b 83       	std	Y+3, r22	; 0x03
    9588:	4c 83       	std	Y+4, r20	; 0x04
    958a:	5d 83       	std	Y+5, r21	; 0x05
    958c:	2e 83       	std	Y+6, r18	; 0x06
	uint8_t retVal = (uint8_t) - 1;
    958e:	8f ef       	ldi	r24, 0xFF	; 255
    9590:	89 83       	std	Y+1, r24	; 0x01
	
	/* Send slave address */
	TWI0.MADDR = slaveAddr;
    9592:	80 e0       	ldi	r24, 0x00	; 0
    9594:	99 e0       	ldi	r25, 0x09	; 9
    9596:	2a 81       	ldd	r18, Y+2	; 0x02
    9598:	fc 01       	movw	r30, r24
    959a:	27 83       	std	Z+7, r18	; 0x07
	if(i2c_0_WaitW() != I2C_ACKED)
    959c:	0e 94 1c 4a 	call	0x9438	; 0x9438 <_ZL11i2c_0_WaitWv>
    95a0:	98 2f       	mov	r25, r24
    95a2:	81 e0       	ldi	r24, 0x01	; 1
    95a4:	91 30       	cpi	r25, 0x01	; 1
    95a6:	09 f4       	brne	.+2      	; 0x95aa <I2C_0_SendData+0x34>
    95a8:	80 e0       	ldi	r24, 0x00	; 0
    95aa:	88 23       	and	r24, r24
    95ac:	11 f0       	breq	.+4      	; 0x95b2 <I2C_0_SendData+0x3c>
	{
		return retVal;
    95ae:	89 81       	ldd	r24, Y+1	; 0x01
    95b0:	44 c0       	rjmp	.+136    	; 0x963a <I2C_0_SendData+0xc4>
	}
	
	/* Send the register address */
	TWI0.MDATA = regAddr;
    95b2:	80 e0       	ldi	r24, 0x00	; 0
    95b4:	99 e0       	ldi	r25, 0x09	; 9
    95b6:	2b 81       	ldd	r18, Y+3	; 0x03
    95b8:	fc 01       	movw	r30, r24
    95ba:	20 87       	std	Z+8, r18	; 0x08
	if(i2c_0_WaitW() != I2C_ACKED)
    95bc:	0e 94 1c 4a 	call	0x9438	; 0x9438 <_ZL11i2c_0_WaitWv>
    95c0:	98 2f       	mov	r25, r24
    95c2:	81 e0       	ldi	r24, 0x01	; 1
    95c4:	91 30       	cpi	r25, 0x01	; 1
    95c6:	09 f4       	brne	.+2      	; 0x95ca <I2C_0_SendData+0x54>
    95c8:	80 e0       	ldi	r24, 0x00	; 0
    95ca:	88 23       	and	r24, r24
    95cc:	11 f0       	breq	.+4      	; 0x95d2 <I2C_0_SendData+0x5c>
	{
		return retVal;
    95ce:	89 81       	ldd	r24, Y+1	; 0x01
    95d0:	34 c0       	rjmp	.+104    	; 0x963a <I2C_0_SendData+0xc4>
	}

	retVal = 0;
    95d2:	19 82       	std	Y+1, r1	; 0x01
	if((len != 0) && (pData != null))
    95d4:	8e 81       	ldd	r24, Y+6	; 0x06
    95d6:	88 23       	and	r24, r24
    95d8:	79 f1       	breq	.+94     	; 0x9638 <I2C_0_SendData+0xc2>
    95da:	8c 81       	ldd	r24, Y+4	; 0x04
    95dc:	9d 81       	ldd	r25, Y+5	; 0x05
    95de:	89 2b       	or	r24, r25
    95e0:	59 f1       	breq	.+86     	; 0x9638 <I2C_0_SendData+0xc2>
	{
		while(len--)
    95e2:	8e 81       	ldd	r24, Y+6	; 0x06
    95e4:	9f ef       	ldi	r25, 0xFF	; 255
    95e6:	98 0f       	add	r25, r24
    95e8:	9e 83       	std	Y+6, r25	; 0x06
    95ea:	91 e0       	ldi	r25, 0x01	; 1
    95ec:	88 23       	and	r24, r24
    95ee:	09 f4       	brne	.+2      	; 0x95f2 <I2C_0_SendData+0x7c>
    95f0:	90 e0       	ldi	r25, 0x00	; 0
    95f2:	99 23       	and	r25, r25
    95f4:	09 f1       	breq	.+66     	; 0x9638 <I2C_0_SendData+0xc2>
		{
			TWI0.MDATA = *pData;
    95f6:	80 e0       	ldi	r24, 0x00	; 0
    95f8:	99 e0       	ldi	r25, 0x09	; 9
    95fa:	2c 81       	ldd	r18, Y+4	; 0x04
    95fc:	3d 81       	ldd	r19, Y+5	; 0x05
    95fe:	f9 01       	movw	r30, r18
    9600:	20 81       	ld	r18, Z
    9602:	fc 01       	movw	r30, r24
    9604:	20 87       	std	Z+8, r18	; 0x08
			if(i2c_0_WaitW() == I2C_ACKED)
    9606:	0e 94 1c 4a 	call	0x9438	; 0x9438 <_ZL11i2c_0_WaitWv>
    960a:	98 2f       	mov	r25, r24
    960c:	81 e0       	ldi	r24, 0x01	; 1
    960e:	91 30       	cpi	r25, 0x01	; 1
    9610:	09 f0       	breq	.+2      	; 0x9614 <I2C_0_SendData+0x9e>
    9612:	80 e0       	ldi	r24, 0x00	; 0
    9614:	88 23       	and	r24, r24
    9616:	79 f0       	breq	.+30     	; 0x9636 <I2C_0_SendData+0xc0>
			{
				retVal++;
    9618:	89 81       	ldd	r24, Y+1	; 0x01
    961a:	8f 5f       	subi	r24, 0xFF	; 255
    961c:	89 83       	std	Y+1, r24	; 0x01
				pData++;
    961e:	8c 81       	ldd	r24, Y+4	; 0x04
    9620:	9d 81       	ldd	r25, Y+5	; 0x05
    9622:	01 96       	adiw	r24, 0x01	; 1
    9624:	8c 83       	std	Y+4, r24	; 0x04
    9626:	9d 83       	std	Y+5, r25	; 0x05
				if(!len) I2C_0_EndSession();
    9628:	8e 81       	ldd	r24, Y+6	; 0x06
    962a:	88 23       	and	r24, r24
    962c:	11 f4       	brne	.+4      	; 0x9632 <I2C_0_SendData+0xbc>
    962e:	0e 94 a1 4b 	call	0x9742	; 0x9742 <I2C_0_EndSession>
				continue;
    9632:	00 00       	nop
	}

	retVal = 0;
	if((len != 0) && (pData != null))
	{
		while(len--)
    9634:	d6 cf       	rjmp	.-84     	; 0x95e2 <I2C_0_SendData+0x6c>
				if(!len) I2C_0_EndSession();
				continue;
			}
			else // did not get ACK after client address
			{
				break;
    9636:	00 00       	nop
			}
		}
	}
	
	return retVal;
    9638:	89 81       	ldd	r24, Y+1	; 0x01
}
    963a:	26 96       	adiw	r28, 0x06	; 6
    963c:	cd bf       	out	0x3d, r28	; 61
    963e:	de bf       	out	0x3e, r29	; 62
    9640:	df 91       	pop	r29
    9642:	cf 91       	pop	r28
    9644:	08 95       	ret

00009646 <I2C_0_GetData>:

/* Returns how many bytes have been received, -1 means NACK at address */
uint8_t I2C_0_GetData(uint8_t slaveAddr, uint8_t regAddr, uint8_t *pData, uint8_t len)
{
    9646:	cf 93       	push	r28
    9648:	df 93       	push	r29
    964a:	cd b7       	in	r28, 0x3d	; 61
    964c:	de b7       	in	r29, 0x3e	; 62
    964e:	26 97       	sbiw	r28, 0x06	; 6
    9650:	cd bf       	out	0x3d, r28	; 61
    9652:	de bf       	out	0x3e, r29	; 62
    9654:	8a 83       	std	Y+2, r24	; 0x02
    9656:	6b 83       	std	Y+3, r22	; 0x03
    9658:	4c 83       	std	Y+4, r20	; 0x04
    965a:	5d 83       	std	Y+5, r21	; 0x05
    965c:	2e 83       	std	Y+6, r18	; 0x06
	uint8_t retVal = (uint8_t) -1;
    965e:	8f ef       	ldi	r24, 0xFF	; 255
    9660:	89 83       	std	Y+1, r24	; 0x01
	
	/* Send the client address for write */
	TWI0.MADDR = slaveAddr;
    9662:	80 e0       	ldi	r24, 0x00	; 0
    9664:	99 e0       	ldi	r25, 0x09	; 9
    9666:	2a 81       	ldd	r18, Y+2	; 0x02
    9668:	fc 01       	movw	r30, r24
    966a:	27 83       	std	Z+7, r18	; 0x07
	if(i2c_0_WaitW() != I2C_ACKED)
    966c:	0e 94 1c 4a 	call	0x9438	; 0x9438 <_ZL11i2c_0_WaitWv>
    9670:	98 2f       	mov	r25, r24
    9672:	81 e0       	ldi	r24, 0x01	; 1
    9674:	91 30       	cpi	r25, 0x01	; 1
    9676:	09 f4       	brne	.+2      	; 0x967a <I2C_0_GetData+0x34>
    9678:	80 e0       	ldi	r24, 0x00	; 0
    967a:	88 23       	and	r24, r24
    967c:	11 f0       	breq	.+4      	; 0x9682 <I2C_0_GetData+0x3c>
	{
		return retVal;
    967e:	89 81       	ldd	r24, Y+1	; 0x01
    9680:	5a c0       	rjmp	.+180    	; 0x9736 <I2C_0_GetData+0xf0>
	}
	
	/* Send the register address */
	TWI0.MDATA = regAddr;
    9682:	80 e0       	ldi	r24, 0x00	; 0
    9684:	99 e0       	ldi	r25, 0x09	; 9
    9686:	2b 81       	ldd	r18, Y+3	; 0x03
    9688:	fc 01       	movw	r30, r24
    968a:	20 87       	std	Z+8, r18	; 0x08
	if(i2c_0_WaitW() != I2C_ACKED)
    968c:	0e 94 1c 4a 	call	0x9438	; 0x9438 <_ZL11i2c_0_WaitWv>
    9690:	98 2f       	mov	r25, r24
    9692:	81 e0       	ldi	r24, 0x01	; 1
    9694:	91 30       	cpi	r25, 0x01	; 1
    9696:	09 f4       	brne	.+2      	; 0x969a <I2C_0_GetData+0x54>
    9698:	80 e0       	ldi	r24, 0x00	; 0
    969a:	88 23       	and	r24, r24
    969c:	11 f0       	breq	.+4      	; 0x96a2 <I2C_0_GetData+0x5c>
	{
		return retVal;
    969e:	89 81       	ldd	r24, Y+1	; 0x01
    96a0:	4a c0       	rjmp	.+148    	; 0x9736 <I2C_0_GetData+0xf0>
	}
	
	/* Send the client address for read */
	TWI0.MADDR = slaveAddr | 0x01;
    96a2:	80 e0       	ldi	r24, 0x00	; 0
    96a4:	99 e0       	ldi	r25, 0x09	; 9
    96a6:	2a 81       	ldd	r18, Y+2	; 0x02
    96a8:	21 60       	ori	r18, 0x01	; 1
    96aa:	fc 01       	movw	r30, r24
    96ac:	27 83       	std	Z+7, r18	; 0x07
	if(i2c_0_WaitW() != I2C_ACKED)
    96ae:	0e 94 1c 4a 	call	0x9438	; 0x9438 <_ZL11i2c_0_WaitWv>
    96b2:	98 2f       	mov	r25, r24
    96b4:	81 e0       	ldi	r24, 0x01	; 1
    96b6:	91 30       	cpi	r25, 0x01	; 1
    96b8:	09 f4       	brne	.+2      	; 0x96bc <I2C_0_GetData+0x76>
    96ba:	80 e0       	ldi	r24, 0x00	; 0
    96bc:	88 23       	and	r24, r24
    96be:	11 f0       	breq	.+4      	; 0x96c4 <I2C_0_GetData+0x7e>
	{
		return retVal;
    96c0:	89 81       	ldd	r24, Y+1	; 0x01
    96c2:	39 c0       	rjmp	.+114    	; 0x9736 <I2C_0_GetData+0xf0>
	}
	
	retVal = 0;
    96c4:	19 82       	std	Y+1, r1	; 0x01
	if((len != 0) && (pData !=null ))
    96c6:	8e 81       	ldd	r24, Y+6	; 0x06
    96c8:	88 23       	and	r24, r24
    96ca:	a1 f1       	breq	.+104    	; 0x9734 <I2C_0_GetData+0xee>
    96cc:	8c 81       	ldd	r24, Y+4	; 0x04
    96ce:	9d 81       	ldd	r25, Y+5	; 0x05
    96d0:	89 2b       	or	r24, r25
    96d2:	81 f1       	breq	.+96     	; 0x9734 <I2C_0_GetData+0xee>
	{
		while(len--)
    96d4:	8e 81       	ldd	r24, Y+6	; 0x06
    96d6:	9f ef       	ldi	r25, 0xFF	; 255
    96d8:	98 0f       	add	r25, r24
    96da:	9e 83       	std	Y+6, r25	; 0x06
    96dc:	91 e0       	ldi	r25, 0x01	; 1
    96de:	88 23       	and	r24, r24
    96e0:	09 f4       	brne	.+2      	; 0x96e4 <I2C_0_GetData+0x9e>
    96e2:	90 e0       	ldi	r25, 0x00	; 0
    96e4:	99 23       	and	r25, r25
    96e6:	31 f1       	breq	.+76     	; 0x9734 <I2C_0_GetData+0xee>
		{
			if(i2c_0_WaitR() == I2C_READY)
    96e8:	0e 94 7a 4a 	call	0x94f4	; 0x94f4 <_ZL11i2c_0_WaitRv>
    96ec:	98 2f       	mov	r25, r24
    96ee:	81 e0       	ldi	r24, 0x01	; 1
    96f0:	93 30       	cpi	r25, 0x03	; 3
    96f2:	09 f0       	breq	.+2      	; 0x96f6 <I2C_0_GetData+0xb0>
    96f4:	80 e0       	ldi	r24, 0x00	; 0
    96f6:	88 23       	and	r24, r24
    96f8:	e1 f0       	breq	.+56     	; 0x9732 <I2C_0_GetData+0xec>
			{
				*pData = TWI0.MDATA;
    96fa:	80 e0       	ldi	r24, 0x00	; 0
    96fc:	99 e0       	ldi	r25, 0x09	; 9
    96fe:	fc 01       	movw	r30, r24
    9700:	20 85       	ldd	r18, Z+8	; 0x08
    9702:	8c 81       	ldd	r24, Y+4	; 0x04
    9704:	9d 81       	ldd	r25, Y+5	; 0x05
    9706:	fc 01       	movw	r30, r24
    9708:	20 83       	st	Z, r18
				TWI0.MCTRLB = (len == 0)? TWI_ACKACT_bm | TWI_MCMD_STOP_gc : TWI_MCMD_RECVTRANS_gc;
    970a:	80 e0       	ldi	r24, 0x00	; 0
    970c:	99 e0       	ldi	r25, 0x09	; 9
    970e:	2e 81       	ldd	r18, Y+6	; 0x06
    9710:	22 23       	and	r18, r18
    9712:	11 f4       	brne	.+4      	; 0x9718 <I2C_0_GetData+0xd2>
    9714:	27 e0       	ldi	r18, 0x07	; 7
    9716:	01 c0       	rjmp	.+2      	; 0x971a <I2C_0_GetData+0xd4>
    9718:	22 e0       	ldi	r18, 0x02	; 2
    971a:	fc 01       	movw	r30, r24
    971c:	24 83       	std	Z+4, r18	; 0x04
				retVal++;
    971e:	89 81       	ldd	r24, Y+1	; 0x01
    9720:	8f 5f       	subi	r24, 0xFF	; 255
    9722:	89 83       	std	Y+1, r24	; 0x01
				pData++;
    9724:	8c 81       	ldd	r24, Y+4	; 0x04
    9726:	9d 81       	ldd	r25, Y+5	; 0x05
    9728:	01 96       	adiw	r24, 0x01	; 1
    972a:	8c 83       	std	Y+4, r24	; 0x04
    972c:	9d 83       	std	Y+5, r25	; 0x05
				continue;
    972e:	00 00       	nop
	}
	
	retVal = 0;
	if((len != 0) && (pData !=null ))
	{
		while(len--)
    9730:	d1 cf       	rjmp	.-94     	; 0x96d4 <I2C_0_GetData+0x8e>
				retVal++;
				pData++;
				continue;
			}
			else
			break;
    9732:	00 00       	nop
		}
	}
	
	return retVal;
    9734:	89 81       	ldd	r24, Y+1	; 0x01
}
    9736:	26 96       	adiw	r28, 0x06	; 6
    9738:	cd bf       	out	0x3d, r28	; 61
    973a:	de bf       	out	0x3e, r29	; 62
    973c:	df 91       	pop	r29
    973e:	cf 91       	pop	r28
    9740:	08 95       	ret

00009742 <I2C_0_EndSession>:

void I2C_0_EndSession(void)
{
    9742:	cf 93       	push	r28
    9744:	df 93       	push	r29
    9746:	cd b7       	in	r28, 0x3d	; 61
    9748:	de b7       	in	r29, 0x3e	; 62
	TWI0.MCTRLB = TWI_MCMD_STOP_gc;
    974a:	80 e0       	ldi	r24, 0x00	; 0
    974c:	99 e0       	ldi	r25, 0x09	; 9
    974e:	23 e0       	ldi	r18, 0x03	; 3
    9750:	fc 01       	movw	r30, r24
    9752:	24 83       	std	Z+4, r18	; 0x04
}
    9754:	00 00       	nop
    9756:	df 91       	pop	r29
    9758:	cf 91       	pop	r28
    975a:	08 95       	ret

0000975c <I2C_1_Init>:
/* I2C_1                                                               */
/************************************************************************/


void I2C_1_Init(void)
{
    975c:	cf 93       	push	r28
    975e:	df 93       	push	r29
    9760:	cd b7       	in	r28, 0x3d	; 61
    9762:	de b7       	in	r29, 0x3e	; 62
	/* Select I2C pins PB2/PB3 */
	PORTMUX.TWIROUTEA &= 0x03;
    9764:	80 ee       	ldi	r24, 0xE0	; 224
    9766:	95 e0       	ldi	r25, 0x05	; 5
    9768:	20 ee       	ldi	r18, 0xE0	; 224
    976a:	35 e0       	ldi	r19, 0x05	; 5
    976c:	f9 01       	movw	r30, r18
    976e:	25 81       	ldd	r18, Z+5	; 0x05
    9770:	23 70       	andi	r18, 0x03	; 3
    9772:	fc 01       	movw	r30, r24
    9774:	25 83       	std	Z+5, r18	; 0x05
	PORTMUX.TWIROUTEA |= 0x08;
    9776:	80 ee       	ldi	r24, 0xE0	; 224
    9778:	95 e0       	ldi	r25, 0x05	; 5
    977a:	20 ee       	ldi	r18, 0xE0	; 224
    977c:	35 e0       	ldi	r19, 0x05	; 5
    977e:	f9 01       	movw	r30, r18
    9780:	25 81       	ldd	r18, Z+5	; 0x05
    9782:	28 60       	ori	r18, 0x08	; 8
    9784:	fc 01       	movw	r30, r24
    9786:	25 83       	std	Z+5, r18	; 0x05
	
	/* Host Baud Rate Control */
	TWI1.MBAUD = TWI_BAUD((I2C_SCL_FREQ), 0.3);
    9788:	80 e2       	ldi	r24, 0x20	; 32
    978a:	99 e0       	ldi	r25, 0x09	; 9
    978c:	2f e6       	ldi	r18, 0x6F	; 111
    978e:	fc 01       	movw	r30, r24
    9790:	26 83       	std	Z+6, r18	; 0x06
	
	/* Enable TWI */
	TWI1.MCTRLA = TWI_ENABLE_bm;
    9792:	80 e2       	ldi	r24, 0x20	; 32
    9794:	99 e0       	ldi	r25, 0x09	; 9
    9796:	21 e0       	ldi	r18, 0x01	; 1
    9798:	fc 01       	movw	r30, r24
    979a:	23 83       	std	Z+3, r18	; 0x03
	
	/* Initialize the address register */
	TWI1.MADDR = 0x00;
    979c:	80 e2       	ldi	r24, 0x20	; 32
    979e:	99 e0       	ldi	r25, 0x09	; 9
    97a0:	fc 01       	movw	r30, r24
    97a2:	17 82       	std	Z+7, r1	; 0x07
	
	/* Initialize the data register */
	TWI1.MDATA = 0x00;
    97a4:	80 e2       	ldi	r24, 0x20	; 32
    97a6:	99 e0       	ldi	r25, 0x09	; 9
    97a8:	fc 01       	movw	r30, r24
    97aa:	10 86       	std	Z+8, r1	; 0x08
	
	/* Set bus state idle */
	TWI1.MSTATUS = TWI_BUSSTATE_IDLE_gc;
    97ac:	80 e2       	ldi	r24, 0x20	; 32
    97ae:	99 e0       	ldi	r25, 0x09	; 9
    97b0:	21 e0       	ldi	r18, 0x01	; 1
    97b2:	fc 01       	movw	r30, r24
    97b4:	25 83       	std	Z+5, r18	; 0x05
	
	PORTB_set_pin_pull_mode(2, PORT_PULL_UP);
    97b6:	61 e0       	ldi	r22, 0x01	; 1
    97b8:	82 e0       	ldi	r24, 0x02	; 2
    97ba:	0e 94 81 49 	call	0x9302	; 0x9302 <PORTB_set_pin_pull_mode>
	PORTB_set_pin_pull_mode(3, PORT_PULL_UP);
    97be:	61 e0       	ldi	r22, 0x01	; 1
    97c0:	83 e0       	ldi	r24, 0x03	; 3
    97c2:	0e 94 81 49 	call	0x9302	; 0x9302 <PORTB_set_pin_pull_mode>
}
    97c6:	00 00       	nop
    97c8:	df 91       	pop	r29
    97ca:	cf 91       	pop	r28
    97cc:	08 95       	ret

000097ce <_ZL11i2c_1_WaitWv>:

static uint8_t i2c_1_WaitW(void)
{
    97ce:	cf 93       	push	r28
    97d0:	df 93       	push	r29
    97d2:	00 d0       	rcall	.+0      	; 0x97d4 <_ZL11i2c_1_WaitWv+0x6>
    97d4:	cd b7       	in	r28, 0x3d	; 61
    97d6:	de b7       	in	r29, 0x3e	; 62
	uint8_t state = I2C_INIT;
    97d8:	19 82       	std	Y+1, r1	; 0x01
	
	g_i2c1_timeout_ticks = 200;
    97da:	88 ec       	ldi	r24, 0xC8	; 200
    97dc:	90 e0       	ldi	r25, 0x00	; 0
    97de:	80 93 1f 40 	sts	0x401F, r24	; 0x80401f <g_i2c1_timeout_ticks>
    97e2:	90 93 20 40 	sts	0x4020, r25	; 0x804020 <g_i2c1_timeout_ticks+0x1>
	
	do
	{
		uint8_t stat = TWI1.MSTATUS;
    97e6:	80 e2       	ldi	r24, 0x20	; 32
    97e8:	99 e0       	ldi	r25, 0x09	; 9
    97ea:	fc 01       	movw	r30, r24
    97ec:	85 81       	ldd	r24, Z+5	; 0x05
    97ee:	8a 83       	std	Y+2, r24	; 0x02
		if(stat & (TWI_WIF_bm | TWI_RIF_bm))
    97f0:	8a 81       	ldd	r24, Y+2	; 0x02
    97f2:	88 2f       	mov	r24, r24
    97f4:	90 e0       	ldi	r25, 0x00	; 0
    97f6:	80 7c       	andi	r24, 0xC0	; 192
    97f8:	99 27       	eor	r25, r25
    97fa:	89 2b       	or	r24, r25
    97fc:	69 f0       	breq	.+26     	; 0x9818 <_ZL11i2c_1_WaitWv+0x4a>
		{
			if(!(stat & TWI_RXACK_bm))
    97fe:	8a 81       	ldd	r24, Y+2	; 0x02
    9800:	88 2f       	mov	r24, r24
    9802:	90 e0       	ldi	r25, 0x00	; 0
    9804:	80 71       	andi	r24, 0x10	; 16
    9806:	99 27       	eor	r25, r25
    9808:	89 2b       	or	r24, r25
    980a:	19 f4       	brne	.+6      	; 0x9812 <_ZL11i2c_1_WaitWv+0x44>
			{
				/* client responded with ack - TWI goes to M1 state */
				state = I2C_ACKED;
    980c:	81 e0       	ldi	r24, 0x01	; 1
    980e:	89 83       	std	Y+1, r24	; 0x01
    9810:	0c c0       	rjmp	.+24     	; 0x982a <_ZL11i2c_1_WaitWv+0x5c>
			}
			else
			{
				/* address sent but no ack received - TWI goes to M3 state */
				state = I2C_NACKED;
    9812:	82 e0       	ldi	r24, 0x02	; 2
    9814:	89 83       	std	Y+1, r24	; 0x01
    9816:	09 c0       	rjmp	.+18     	; 0x982a <_ZL11i2c_1_WaitWv+0x5c>
			}
		}
		else if(stat & (TWI_BUSERR_bm | TWI_ARBLOST_bm))
    9818:	8a 81       	ldd	r24, Y+2	; 0x02
    981a:	88 2f       	mov	r24, r24
    981c:	90 e0       	ldi	r25, 0x00	; 0
    981e:	8c 70       	andi	r24, 0x0C	; 12
    9820:	99 27       	eor	r25, r25
    9822:	89 2b       	or	r24, r25
    9824:	11 f0       	breq	.+4      	; 0x982a <_ZL11i2c_1_WaitWv+0x5c>
		{
			/* get here only in case of bus error or arbitration lost - M4 state */
			state = I2C_ERROR;
    9826:	84 e0       	ldi	r24, 0x04	; 4
    9828:	89 83       	std	Y+1, r24	; 0x01
		}
	} while(!state && g_i2c1_timeout_ticks);
    982a:	89 81       	ldd	r24, Y+1	; 0x01
    982c:	88 23       	and	r24, r24
    982e:	41 f4       	brne	.+16     	; 0x9840 <_ZL11i2c_1_WaitWv+0x72>
    9830:	80 91 1f 40 	lds	r24, 0x401F	; 0x80401f <g_i2c1_timeout_ticks>
    9834:	90 91 20 40 	lds	r25, 0x4020	; 0x804020 <g_i2c1_timeout_ticks+0x1>
    9838:	89 2b       	or	r24, r25
    983a:	11 f0       	breq	.+4      	; 0x9840 <_ZL11i2c_1_WaitWv+0x72>
    983c:	81 e0       	ldi	r24, 0x01	; 1
    983e:	01 c0       	rjmp	.+2      	; 0x9842 <_ZL11i2c_1_WaitWv+0x74>
    9840:	80 e0       	ldi	r24, 0x00	; 0
{
	uint8_t state = I2C_INIT;
	
	g_i2c1_timeout_ticks = 200;
	
	do
    9842:	88 23       	and	r24, r24
    9844:	09 f0       	breq	.+2      	; 0x9848 <_ZL11i2c_1_WaitWv+0x7a>
    9846:	cf cf       	rjmp	.-98     	; 0x97e6 <_ZL11i2c_1_WaitWv+0x18>
			/* get here only in case of bus error or arbitration lost - M4 state */
			state = I2C_ERROR;
		}
	} while(!state && g_i2c1_timeout_ticks);
	
	return state;
    9848:	89 81       	ldd	r24, Y+1	; 0x01
}
    984a:	0f 90       	pop	r0
    984c:	0f 90       	pop	r0
    984e:	df 91       	pop	r29
    9850:	cf 91       	pop	r28
    9852:	08 95       	ret

00009854 <_ZL11I2C_1_WaitRv>:

static uint8_t I2C_1_WaitR(void)
{
    9854:	cf 93       	push	r28
    9856:	df 93       	push	r29
    9858:	1f 92       	push	r1
    985a:	cd b7       	in	r28, 0x3d	; 61
    985c:	de b7       	in	r29, 0x3e	; 62
	uint8_t state = I2C_INIT;
    985e:	19 82       	std	Y+1, r1	; 0x01
	
	g_i2c0_timeout_ticks = 200;
    9860:	88 ec       	ldi	r24, 0xC8	; 200
    9862:	90 e0       	ldi	r25, 0x00	; 0
    9864:	80 93 1d 40 	sts	0x401D, r24	; 0x80401d <g_i2c0_timeout_ticks>
    9868:	90 93 1e 40 	sts	0x401E, r25	; 0x80401e <g_i2c0_timeout_ticks+0x1>
	
	do
	{
		if(TWI1.MSTATUS & (TWI_WIF_bm | TWI_RIF_bm))
    986c:	80 e2       	ldi	r24, 0x20	; 32
    986e:	99 e0       	ldi	r25, 0x09	; 9
    9870:	fc 01       	movw	r30, r24
    9872:	85 81       	ldd	r24, Z+5	; 0x05
    9874:	88 2f       	mov	r24, r24
    9876:	90 e0       	ldi	r25, 0x00	; 0
    9878:	80 7c       	andi	r24, 0xC0	; 192
    987a:	99 27       	eor	r25, r25
    987c:	21 e0       	ldi	r18, 0x01	; 1
    987e:	89 2b       	or	r24, r25
    9880:	09 f4       	brne	.+2      	; 0x9884 <_ZL11I2C_1_WaitRv+0x30>
    9882:	20 e0       	ldi	r18, 0x00	; 0
    9884:	22 23       	and	r18, r18
    9886:	19 f0       	breq	.+6      	; 0x988e <_ZL11I2C_1_WaitRv+0x3a>
		{
			state = I2C_READY;
    9888:	83 e0       	ldi	r24, 0x03	; 3
    988a:	89 83       	std	Y+1, r24	; 0x01
    988c:	10 c0       	rjmp	.+32     	; 0x98ae <_ZL11I2C_1_WaitRv+0x5a>
		}
		else if(TWI1.MSTATUS & (TWI_BUSERR_bm | TWI_ARBLOST_bm))
    988e:	80 e2       	ldi	r24, 0x20	; 32
    9890:	99 e0       	ldi	r25, 0x09	; 9
    9892:	fc 01       	movw	r30, r24
    9894:	85 81       	ldd	r24, Z+5	; 0x05
    9896:	88 2f       	mov	r24, r24
    9898:	90 e0       	ldi	r25, 0x00	; 0
    989a:	8c 70       	andi	r24, 0x0C	; 12
    989c:	99 27       	eor	r25, r25
    989e:	21 e0       	ldi	r18, 0x01	; 1
    98a0:	89 2b       	or	r24, r25
    98a2:	09 f4       	brne	.+2      	; 0x98a6 <_ZL11I2C_1_WaitRv+0x52>
    98a4:	20 e0       	ldi	r18, 0x00	; 0
    98a6:	22 23       	and	r18, r18
    98a8:	11 f0       	breq	.+4      	; 0x98ae <_ZL11I2C_1_WaitRv+0x5a>
		{
			/* get here only in case of bus error or arbitration lost - M4 state */
			state = I2C_ERROR;
    98aa:	84 e0       	ldi	r24, 0x04	; 4
    98ac:	89 83       	std	Y+1, r24	; 0x01
		}
	} while(!state && g_i2c0_timeout_ticks);
    98ae:	89 81       	ldd	r24, Y+1	; 0x01
    98b0:	88 23       	and	r24, r24
    98b2:	41 f4       	brne	.+16     	; 0x98c4 <_ZL11I2C_1_WaitRv+0x70>
    98b4:	80 91 1d 40 	lds	r24, 0x401D	; 0x80401d <g_i2c0_timeout_ticks>
    98b8:	90 91 1e 40 	lds	r25, 0x401E	; 0x80401e <g_i2c0_timeout_ticks+0x1>
    98bc:	89 2b       	or	r24, r25
    98be:	11 f0       	breq	.+4      	; 0x98c4 <_ZL11I2C_1_WaitRv+0x70>
    98c0:	81 e0       	ldi	r24, 0x01	; 1
    98c2:	01 c0       	rjmp	.+2      	; 0x98c6 <_ZL11I2C_1_WaitRv+0x72>
    98c4:	80 e0       	ldi	r24, 0x00	; 0
{
	uint8_t state = I2C_INIT;
	
	g_i2c0_timeout_ticks = 200;
	
	do
    98c6:	88 23       	and	r24, r24
    98c8:	09 f0       	breq	.+2      	; 0x98cc <_ZL11I2C_1_WaitRv+0x78>
    98ca:	d0 cf       	rjmp	.-96     	; 0x986c <_ZL11I2C_1_WaitRv+0x18>
			/* get here only in case of bus error or arbitration lost - M4 state */
			state = I2C_ERROR;
		}
	} while(!state && g_i2c0_timeout_ticks);
	
	return state;
    98cc:	89 81       	ldd	r24, Y+1	; 0x01
}
    98ce:	0f 90       	pop	r0
    98d0:	df 91       	pop	r29
    98d2:	cf 91       	pop	r28
    98d4:	08 95       	ret

000098d6 <I2C_1_SendData>:

/* Returns how many bytes have been sent, -1 means NACK at address, 0 means client ACKed to client address */
uint8_t I2C_1_SendData(uint8_t slaveAddr, uint8_t regAddr, uint8_t *pData, uint8_t len)
{
    98d6:	cf 93       	push	r28
    98d8:	df 93       	push	r29
    98da:	cd b7       	in	r28, 0x3d	; 61
    98dc:	de b7       	in	r29, 0x3e	; 62
    98de:	26 97       	sbiw	r28, 0x06	; 6
    98e0:	cd bf       	out	0x3d, r28	; 61
    98e2:	de bf       	out	0x3e, r29	; 62
    98e4:	8a 83       	std	Y+2, r24	; 0x02
    98e6:	6b 83       	std	Y+3, r22	; 0x03
    98e8:	4c 83       	std	Y+4, r20	; 0x04
    98ea:	5d 83       	std	Y+5, r21	; 0x05
    98ec:	2e 83       	std	Y+6, r18	; 0x06
	uint8_t retVal = (uint8_t) - 1;
    98ee:	8f ef       	ldi	r24, 0xFF	; 255
    98f0:	89 83       	std	Y+1, r24	; 0x01
	
	/* Send the slave address */
	TWI1.MADDR = slaveAddr & ~0x01;
    98f2:	80 e2       	ldi	r24, 0x20	; 32
    98f4:	99 e0       	ldi	r25, 0x09	; 9
    98f6:	2a 81       	ldd	r18, Y+2	; 0x02
    98f8:	2e 7f       	andi	r18, 0xFE	; 254
    98fa:	fc 01       	movw	r30, r24
    98fc:	27 83       	std	Z+7, r18	; 0x07
	if(i2c_1_WaitW() != I2C_ACKED)
    98fe:	0e 94 e7 4b 	call	0x97ce	; 0x97ce <_ZL11i2c_1_WaitWv>
    9902:	98 2f       	mov	r25, r24
    9904:	81 e0       	ldi	r24, 0x01	; 1
    9906:	91 30       	cpi	r25, 0x01	; 1
    9908:	09 f4       	brne	.+2      	; 0x990c <I2C_1_SendData+0x36>
    990a:	80 e0       	ldi	r24, 0x00	; 0
    990c:	88 23       	and	r24, r24
    990e:	11 f0       	breq	.+4      	; 0x9914 <I2C_1_SendData+0x3e>
	{
		return retVal;
    9910:	89 81       	ldd	r24, Y+1	; 0x01
    9912:	44 c0       	rjmp	.+136    	; 0x999c <I2C_1_SendData+0xc6>
	}
	
	/* Send the register address */
	TWI1.MDATA = regAddr;	
    9914:	80 e2       	ldi	r24, 0x20	; 32
    9916:	99 e0       	ldi	r25, 0x09	; 9
    9918:	2b 81       	ldd	r18, Y+3	; 0x03
    991a:	fc 01       	movw	r30, r24
    991c:	20 87       	std	Z+8, r18	; 0x08
	if(i2c_1_WaitW() != I2C_ACKED)
    991e:	0e 94 e7 4b 	call	0x97ce	; 0x97ce <_ZL11i2c_1_WaitWv>
    9922:	98 2f       	mov	r25, r24
    9924:	81 e0       	ldi	r24, 0x01	; 1
    9926:	91 30       	cpi	r25, 0x01	; 1
    9928:	09 f4       	brne	.+2      	; 0x992c <I2C_1_SendData+0x56>
    992a:	80 e0       	ldi	r24, 0x00	; 0
    992c:	88 23       	and	r24, r24
    992e:	11 f0       	breq	.+4      	; 0x9934 <I2C_1_SendData+0x5e>
	{
		return retVal;
    9930:	89 81       	ldd	r24, Y+1	; 0x01
    9932:	34 c0       	rjmp	.+104    	; 0x999c <I2C_1_SendData+0xc6>
	}	

	retVal = 0;
    9934:	19 82       	std	Y+1, r1	; 0x01
	if((len != 0) && (pData != null))
    9936:	8e 81       	ldd	r24, Y+6	; 0x06
    9938:	88 23       	and	r24, r24
    993a:	79 f1       	breq	.+94     	; 0x999a <I2C_1_SendData+0xc4>
    993c:	8c 81       	ldd	r24, Y+4	; 0x04
    993e:	9d 81       	ldd	r25, Y+5	; 0x05
    9940:	89 2b       	or	r24, r25
    9942:	59 f1       	breq	.+86     	; 0x999a <I2C_1_SendData+0xc4>
	{
		while(len--)
    9944:	8e 81       	ldd	r24, Y+6	; 0x06
    9946:	9f ef       	ldi	r25, 0xFF	; 255
    9948:	98 0f       	add	r25, r24
    994a:	9e 83       	std	Y+6, r25	; 0x06
    994c:	91 e0       	ldi	r25, 0x01	; 1
    994e:	88 23       	and	r24, r24
    9950:	09 f4       	brne	.+2      	; 0x9954 <I2C_1_SendData+0x7e>
    9952:	90 e0       	ldi	r25, 0x00	; 0
    9954:	99 23       	and	r25, r25
    9956:	09 f1       	breq	.+66     	; 0x999a <I2C_1_SendData+0xc4>
		{
			TWI1.MDATA = *pData;
    9958:	80 e2       	ldi	r24, 0x20	; 32
    995a:	99 e0       	ldi	r25, 0x09	; 9
    995c:	2c 81       	ldd	r18, Y+4	; 0x04
    995e:	3d 81       	ldd	r19, Y+5	; 0x05
    9960:	f9 01       	movw	r30, r18
    9962:	20 81       	ld	r18, Z
    9964:	fc 01       	movw	r30, r24
    9966:	20 87       	std	Z+8, r18	; 0x08
			if(i2c_1_WaitW() == I2C_ACKED)
    9968:	0e 94 e7 4b 	call	0x97ce	; 0x97ce <_ZL11i2c_1_WaitWv>
    996c:	98 2f       	mov	r25, r24
    996e:	81 e0       	ldi	r24, 0x01	; 1
    9970:	91 30       	cpi	r25, 0x01	; 1
    9972:	09 f0       	breq	.+2      	; 0x9976 <I2C_1_SendData+0xa0>
    9974:	80 e0       	ldi	r24, 0x00	; 0
    9976:	88 23       	and	r24, r24
    9978:	79 f0       	breq	.+30     	; 0x9998 <I2C_1_SendData+0xc2>
			{
				retVal++;
    997a:	89 81       	ldd	r24, Y+1	; 0x01
    997c:	8f 5f       	subi	r24, 0xFF	; 255
    997e:	89 83       	std	Y+1, r24	; 0x01
				pData++;
    9980:	8c 81       	ldd	r24, Y+4	; 0x04
    9982:	9d 81       	ldd	r25, Y+5	; 0x05
    9984:	01 96       	adiw	r24, 0x01	; 1
    9986:	8c 83       	std	Y+4, r24	; 0x04
    9988:	9d 83       	std	Y+5, r25	; 0x05
				if(!len) I2C_1_EndSession();
    998a:	8e 81       	ldd	r24, Y+6	; 0x06
    998c:	88 23       	and	r24, r24
    998e:	11 f4       	brne	.+4      	; 0x9994 <I2C_1_SendData+0xbe>
    9990:	0e 94 52 4d 	call	0x9aa4	; 0x9aa4 <I2C_1_EndSession>
				continue;
    9994:	00 00       	nop
	}	

	retVal = 0;
	if((len != 0) && (pData != null))
	{
		while(len--)
    9996:	d6 cf       	rjmp	.-84     	; 0x9944 <I2C_1_SendData+0x6e>
				if(!len) I2C_1_EndSession();
				continue;
			}
			else // did not get ACK after client address
			{
				break;
    9998:	00 00       	nop
			}
		}
	}
	
	return retVal;
    999a:	89 81       	ldd	r24, Y+1	; 0x01
}
    999c:	26 96       	adiw	r28, 0x06	; 6
    999e:	cd bf       	out	0x3d, r28	; 61
    99a0:	de bf       	out	0x3e, r29	; 62
    99a2:	df 91       	pop	r29
    99a4:	cf 91       	pop	r28
    99a6:	08 95       	ret

000099a8 <I2C_1_GetData>:


/* Returns how many bytes have been received, -1 means NACK at address */
uint8_t I2C_1_GetData(uint8_t slaveAddr, uint8_t regAddr, uint8_t *pData, uint8_t len)
{
    99a8:	cf 93       	push	r28
    99aa:	df 93       	push	r29
    99ac:	cd b7       	in	r28, 0x3d	; 61
    99ae:	de b7       	in	r29, 0x3e	; 62
    99b0:	26 97       	sbiw	r28, 0x06	; 6
    99b2:	cd bf       	out	0x3d, r28	; 61
    99b4:	de bf       	out	0x3e, r29	; 62
    99b6:	8a 83       	std	Y+2, r24	; 0x02
    99b8:	6b 83       	std	Y+3, r22	; 0x03
    99ba:	4c 83       	std	Y+4, r20	; 0x04
    99bc:	5d 83       	std	Y+5, r21	; 0x05
    99be:	2e 83       	std	Y+6, r18	; 0x06
	uint8_t retVal = (uint8_t) -1;
    99c0:	8f ef       	ldi	r24, 0xFF	; 255
    99c2:	89 83       	std	Y+1, r24	; 0x01
	
	/* Send the client address for write */
	TWI1.MADDR = slaveAddr;
    99c4:	80 e2       	ldi	r24, 0x20	; 32
    99c6:	99 e0       	ldi	r25, 0x09	; 9
    99c8:	2a 81       	ldd	r18, Y+2	; 0x02
    99ca:	fc 01       	movw	r30, r24
    99cc:	27 83       	std	Z+7, r18	; 0x07
	if(i2c_1_WaitW() != I2C_ACKED)
    99ce:	0e 94 e7 4b 	call	0x97ce	; 0x97ce <_ZL11i2c_1_WaitWv>
    99d2:	98 2f       	mov	r25, r24
    99d4:	81 e0       	ldi	r24, 0x01	; 1
    99d6:	91 30       	cpi	r25, 0x01	; 1
    99d8:	09 f4       	brne	.+2      	; 0x99dc <I2C_1_GetData+0x34>
    99da:	80 e0       	ldi	r24, 0x00	; 0
    99dc:	88 23       	and	r24, r24
    99de:	11 f0       	breq	.+4      	; 0x99e4 <I2C_1_GetData+0x3c>
	{
		return retVal;
    99e0:	89 81       	ldd	r24, Y+1	; 0x01
    99e2:	5a c0       	rjmp	.+180    	; 0x9a98 <I2C_1_GetData+0xf0>
	}
	
	/* Send the register address */
	TWI1.MDATA = regAddr;	
    99e4:	80 e2       	ldi	r24, 0x20	; 32
    99e6:	99 e0       	ldi	r25, 0x09	; 9
    99e8:	2b 81       	ldd	r18, Y+3	; 0x03
    99ea:	fc 01       	movw	r30, r24
    99ec:	20 87       	std	Z+8, r18	; 0x08
	if(i2c_1_WaitW() != I2C_ACKED)
    99ee:	0e 94 e7 4b 	call	0x97ce	; 0x97ce <_ZL11i2c_1_WaitWv>
    99f2:	98 2f       	mov	r25, r24
    99f4:	81 e0       	ldi	r24, 0x01	; 1
    99f6:	91 30       	cpi	r25, 0x01	; 1
    99f8:	09 f4       	brne	.+2      	; 0x99fc <I2C_1_GetData+0x54>
    99fa:	80 e0       	ldi	r24, 0x00	; 0
    99fc:	88 23       	and	r24, r24
    99fe:	11 f0       	breq	.+4      	; 0x9a04 <I2C_1_GetData+0x5c>
	{
		return retVal;
    9a00:	89 81       	ldd	r24, Y+1	; 0x01
    9a02:	4a c0       	rjmp	.+148    	; 0x9a98 <I2C_1_GetData+0xf0>
	}
	
	/* Send the client address for read */
	TWI1.MADDR = slaveAddr | 0x01;
    9a04:	80 e2       	ldi	r24, 0x20	; 32
    9a06:	99 e0       	ldi	r25, 0x09	; 9
    9a08:	2a 81       	ldd	r18, Y+2	; 0x02
    9a0a:	21 60       	ori	r18, 0x01	; 1
    9a0c:	fc 01       	movw	r30, r24
    9a0e:	27 83       	std	Z+7, r18	; 0x07
	if(i2c_1_WaitW() != I2C_ACKED)
    9a10:	0e 94 e7 4b 	call	0x97ce	; 0x97ce <_ZL11i2c_1_WaitWv>
    9a14:	98 2f       	mov	r25, r24
    9a16:	81 e0       	ldi	r24, 0x01	; 1
    9a18:	91 30       	cpi	r25, 0x01	; 1
    9a1a:	09 f4       	brne	.+2      	; 0x9a1e <I2C_1_GetData+0x76>
    9a1c:	80 e0       	ldi	r24, 0x00	; 0
    9a1e:	88 23       	and	r24, r24
    9a20:	11 f0       	breq	.+4      	; 0x9a26 <I2C_1_GetData+0x7e>
	{
		return retVal;	
    9a22:	89 81       	ldd	r24, Y+1	; 0x01
    9a24:	39 c0       	rjmp	.+114    	; 0x9a98 <I2C_1_GetData+0xf0>
	}
	
	retVal = 0;
    9a26:	19 82       	std	Y+1, r1	; 0x01
	if((len != 0) && (pData !=null ))
    9a28:	8e 81       	ldd	r24, Y+6	; 0x06
    9a2a:	88 23       	and	r24, r24
    9a2c:	a1 f1       	breq	.+104    	; 0x9a96 <I2C_1_GetData+0xee>
    9a2e:	8c 81       	ldd	r24, Y+4	; 0x04
    9a30:	9d 81       	ldd	r25, Y+5	; 0x05
    9a32:	89 2b       	or	r24, r25
    9a34:	81 f1       	breq	.+96     	; 0x9a96 <I2C_1_GetData+0xee>
	{
		while(len--)
    9a36:	8e 81       	ldd	r24, Y+6	; 0x06
    9a38:	9f ef       	ldi	r25, 0xFF	; 255
    9a3a:	98 0f       	add	r25, r24
    9a3c:	9e 83       	std	Y+6, r25	; 0x06
    9a3e:	91 e0       	ldi	r25, 0x01	; 1
    9a40:	88 23       	and	r24, r24
    9a42:	09 f4       	brne	.+2      	; 0x9a46 <I2C_1_GetData+0x9e>
    9a44:	90 e0       	ldi	r25, 0x00	; 0
    9a46:	99 23       	and	r25, r25
    9a48:	31 f1       	breq	.+76     	; 0x9a96 <I2C_1_GetData+0xee>
		{
			if(I2C_1_WaitR() == I2C_READY)
    9a4a:	0e 94 2a 4c 	call	0x9854	; 0x9854 <_ZL11I2C_1_WaitRv>
    9a4e:	98 2f       	mov	r25, r24
    9a50:	81 e0       	ldi	r24, 0x01	; 1
    9a52:	93 30       	cpi	r25, 0x03	; 3
    9a54:	09 f0       	breq	.+2      	; 0x9a58 <I2C_1_GetData+0xb0>
    9a56:	80 e0       	ldi	r24, 0x00	; 0
    9a58:	88 23       	and	r24, r24
    9a5a:	e1 f0       	breq	.+56     	; 0x9a94 <I2C_1_GetData+0xec>
			{
				*pData = TWI1.MDATA;
    9a5c:	80 e2       	ldi	r24, 0x20	; 32
    9a5e:	99 e0       	ldi	r25, 0x09	; 9
    9a60:	fc 01       	movw	r30, r24
    9a62:	20 85       	ldd	r18, Z+8	; 0x08
    9a64:	8c 81       	ldd	r24, Y+4	; 0x04
    9a66:	9d 81       	ldd	r25, Y+5	; 0x05
    9a68:	fc 01       	movw	r30, r24
    9a6a:	20 83       	st	Z, r18
				TWI1.MCTRLB = (len == 0)? TWI_ACKACT_bm | TWI_MCMD_STOP_gc : TWI_MCMD_RECVTRANS_gc;
    9a6c:	80 e2       	ldi	r24, 0x20	; 32
    9a6e:	99 e0       	ldi	r25, 0x09	; 9
    9a70:	2e 81       	ldd	r18, Y+6	; 0x06
    9a72:	22 23       	and	r18, r18
    9a74:	11 f4       	brne	.+4      	; 0x9a7a <I2C_1_GetData+0xd2>
    9a76:	27 e0       	ldi	r18, 0x07	; 7
    9a78:	01 c0       	rjmp	.+2      	; 0x9a7c <I2C_1_GetData+0xd4>
    9a7a:	22 e0       	ldi	r18, 0x02	; 2
    9a7c:	fc 01       	movw	r30, r24
    9a7e:	24 83       	std	Z+4, r18	; 0x04
				retVal++;
    9a80:	89 81       	ldd	r24, Y+1	; 0x01
    9a82:	8f 5f       	subi	r24, 0xFF	; 255
    9a84:	89 83       	std	Y+1, r24	; 0x01
				pData++;
    9a86:	8c 81       	ldd	r24, Y+4	; 0x04
    9a88:	9d 81       	ldd	r25, Y+5	; 0x05
    9a8a:	01 96       	adiw	r24, 0x01	; 1
    9a8c:	8c 83       	std	Y+4, r24	; 0x04
    9a8e:	9d 83       	std	Y+5, r25	; 0x05
				continue;
    9a90:	00 00       	nop
	}
	
	retVal = 0;
	if((len != 0) && (pData !=null ))
	{
		while(len--)
    9a92:	d1 cf       	rjmp	.-94     	; 0x9a36 <I2C_1_GetData+0x8e>
				retVal++;
				pData++;
				continue;
			}
			else
			break;
    9a94:	00 00       	nop
		}
	}
	
	return retVal;
    9a96:	89 81       	ldd	r24, Y+1	; 0x01
}
    9a98:	26 96       	adiw	r28, 0x06	; 6
    9a9a:	cd bf       	out	0x3d, r28	; 61
    9a9c:	de bf       	out	0x3e, r29	; 62
    9a9e:	df 91       	pop	r29
    9aa0:	cf 91       	pop	r28
    9aa2:	08 95       	ret

00009aa4 <I2C_1_EndSession>:

void I2C_1_EndSession(void)
{
    9aa4:	cf 93       	push	r28
    9aa6:	df 93       	push	r29
    9aa8:	cd b7       	in	r28, 0x3d	; 61
    9aaa:	de b7       	in	r29, 0x3e	; 62
	TWI1.MCTRLB = TWI_MCMD_STOP_gc;
    9aac:	80 e2       	ldi	r24, 0x20	; 32
    9aae:	99 e0       	ldi	r25, 0x09	; 9
    9ab0:	23 e0       	ldi	r18, 0x03	; 3
    9ab2:	fc 01       	movw	r30, r24
    9ab4:	24 83       	std	Z+4, r18	; 0x04
}
    9ab6:	00 00       	nop
    9ab8:	df 91       	pop	r29
    9aba:	cf 91       	pop	r28
    9abc:	08 95       	ret

00009abe <PORTC_set_pin_pull_mode>:

void lb_send_sync(void)
{
	sprintf(g_tempMsgBuff, ".....");
	lb_send_text(g_tempMsgBuff);
}
    9abe:	cf 93       	push	r28
    9ac0:	df 93       	push	r29
    9ac2:	00 d0       	rcall	.+0      	; 0x9ac4 <PORTC_set_pin_pull_mode+0x6>
    9ac4:	00 d0       	rcall	.+0      	; 0x9ac6 <PORTC_set_pin_pull_mode+0x8>
    9ac6:	cd b7       	in	r28, 0x3d	; 61
    9ac8:	de b7       	in	r29, 0x3e	; 62
    9aca:	8b 83       	std	Y+3, r24	; 0x03
    9acc:	6c 83       	std	Y+4, r22	; 0x04
    9ace:	8b 81       	ldd	r24, Y+3	; 0x03
    9ad0:	88 2f       	mov	r24, r24
    9ad2:	90 e0       	ldi	r25, 0x00	; 0
    9ad4:	80 5b       	subi	r24, 0xB0	; 176
    9ad6:	9b 4f       	sbci	r25, 0xFB	; 251
    9ad8:	89 83       	std	Y+1, r24	; 0x01
    9ada:	9a 83       	std	Y+2, r25	; 0x02
    9adc:	8c 81       	ldd	r24, Y+4	; 0x04
    9ade:	81 30       	cpi	r24, 0x01	; 1
    9ae0:	59 f4       	brne	.+22     	; 0x9af8 <PORTC_set_pin_pull_mode+0x3a>
    9ae2:	89 81       	ldd	r24, Y+1	; 0x01
    9ae4:	9a 81       	ldd	r25, Y+2	; 0x02
    9ae6:	fc 01       	movw	r30, r24
    9ae8:	80 81       	ld	r24, Z
    9aea:	28 2f       	mov	r18, r24
    9aec:	28 60       	ori	r18, 0x08	; 8
    9aee:	89 81       	ldd	r24, Y+1	; 0x01
    9af0:	9a 81       	ldd	r25, Y+2	; 0x02
    9af2:	fc 01       	movw	r30, r24
    9af4:	20 83       	st	Z, r18
    9af6:	0d c0       	rjmp	.+26     	; 0x9b12 <PORTC_set_pin_pull_mode+0x54>
    9af8:	8c 81       	ldd	r24, Y+4	; 0x04
    9afa:	88 23       	and	r24, r24
    9afc:	51 f4       	brne	.+20     	; 0x9b12 <PORTC_set_pin_pull_mode+0x54>
    9afe:	89 81       	ldd	r24, Y+1	; 0x01
    9b00:	9a 81       	ldd	r25, Y+2	; 0x02
    9b02:	fc 01       	movw	r30, r24
    9b04:	80 81       	ld	r24, Z
    9b06:	28 2f       	mov	r18, r24
    9b08:	27 7f       	andi	r18, 0xF7	; 247
    9b0a:	89 81       	ldd	r24, Y+1	; 0x01
    9b0c:	9a 81       	ldd	r25, Y+2	; 0x02
    9b0e:	fc 01       	movw	r30, r24
    9b10:	20 83       	st	Z, r18
    9b12:	00 00       	nop
    9b14:	24 96       	adiw	r28, 0x04	; 4
    9b16:	cd bf       	out	0x3d, r28	; 61
    9b18:	de bf       	out	0x3e, r29	; 62
    9b1a:	df 91       	pop	r29
    9b1c:	cf 91       	pop	r28
    9b1e:	08 95       	ret

00009b20 <PORTC_set_pin_dir>:
    9b20:	cf 93       	push	r28
    9b22:	df 93       	push	r29
    9b24:	00 d0       	rcall	.+0      	; 0x9b26 <PORTC_set_pin_dir+0x6>
    9b26:	cd b7       	in	r28, 0x3d	; 61
    9b28:	de b7       	in	r29, 0x3e	; 62
    9b2a:	89 83       	std	Y+1, r24	; 0x01
    9b2c:	6a 83       	std	Y+2, r22	; 0x02
    9b2e:	8a 81       	ldd	r24, Y+2	; 0x02
    9b30:	88 2f       	mov	r24, r24
    9b32:	90 e0       	ldi	r25, 0x00	; 0
    9b34:	81 30       	cpi	r24, 0x01	; 1
    9b36:	91 05       	cpc	r25, r1
    9b38:	e1 f0       	breq	.+56     	; 0x9b72 <PORTC_set_pin_dir+0x52>
    9b3a:	82 30       	cpi	r24, 0x02	; 2
    9b3c:	91 05       	cpc	r25, r1
    9b3e:	71 f1       	breq	.+92     	; 0x9b9c <PORTC_set_pin_dir+0x7c>
    9b40:	89 2b       	or	r24, r25
    9b42:	09 f0       	breq	.+2      	; 0x9b46 <PORTC_set_pin_dir+0x26>
    9b44:	3b c0       	rjmp	.+118    	; 0x9bbc <PORTC_set_pin_dir+0x9c>
    9b46:	88 e0       	ldi	r24, 0x08	; 8
    9b48:	90 e0       	ldi	r25, 0x00	; 0
    9b4a:	28 e0       	ldi	r18, 0x08	; 8
    9b4c:	30 e0       	ldi	r19, 0x00	; 0
    9b4e:	f9 01       	movw	r30, r18
    9b50:	20 81       	ld	r18, Z
    9b52:	62 2f       	mov	r22, r18
    9b54:	29 81       	ldd	r18, Y+1	; 0x01
    9b56:	42 2f       	mov	r20, r18
    9b58:	50 e0       	ldi	r21, 0x00	; 0
    9b5a:	21 e0       	ldi	r18, 0x01	; 1
    9b5c:	30 e0       	ldi	r19, 0x00	; 0
    9b5e:	02 c0       	rjmp	.+4      	; 0x9b64 <PORTC_set_pin_dir+0x44>
    9b60:	22 0f       	add	r18, r18
    9b62:	33 1f       	adc	r19, r19
    9b64:	4a 95       	dec	r20
    9b66:	e2 f7       	brpl	.-8      	; 0x9b60 <PORTC_set_pin_dir+0x40>
    9b68:	20 95       	com	r18
    9b6a:	26 23       	and	r18, r22
    9b6c:	fc 01       	movw	r30, r24
    9b6e:	20 83       	st	Z, r18
    9b70:	25 c0       	rjmp	.+74     	; 0x9bbc <PORTC_set_pin_dir+0x9c>
    9b72:	88 e0       	ldi	r24, 0x08	; 8
    9b74:	90 e0       	ldi	r25, 0x00	; 0
    9b76:	28 e0       	ldi	r18, 0x08	; 8
    9b78:	30 e0       	ldi	r19, 0x00	; 0
    9b7a:	f9 01       	movw	r30, r18
    9b7c:	20 81       	ld	r18, Z
    9b7e:	62 2f       	mov	r22, r18
    9b80:	29 81       	ldd	r18, Y+1	; 0x01
    9b82:	42 2f       	mov	r20, r18
    9b84:	50 e0       	ldi	r21, 0x00	; 0
    9b86:	21 e0       	ldi	r18, 0x01	; 1
    9b88:	30 e0       	ldi	r19, 0x00	; 0
    9b8a:	02 c0       	rjmp	.+4      	; 0x9b90 <PORTC_set_pin_dir+0x70>
    9b8c:	22 0f       	add	r18, r18
    9b8e:	33 1f       	adc	r19, r19
    9b90:	4a 95       	dec	r20
    9b92:	e2 f7       	brpl	.-8      	; 0x9b8c <PORTC_set_pin_dir+0x6c>
    9b94:	26 2b       	or	r18, r22
    9b96:	fc 01       	movw	r30, r24
    9b98:	20 83       	st	Z, r18
    9b9a:	10 c0       	rjmp	.+32     	; 0x9bbc <PORTC_set_pin_dir+0x9c>
    9b9c:	89 81       	ldd	r24, Y+1	; 0x01
    9b9e:	88 2f       	mov	r24, r24
    9ba0:	90 e0       	ldi	r25, 0x00	; 0
    9ba2:	80 5b       	subi	r24, 0xB0	; 176
    9ba4:	9b 4f       	sbci	r25, 0xFB	; 251
    9ba6:	29 81       	ldd	r18, Y+1	; 0x01
    9ba8:	22 2f       	mov	r18, r18
    9baa:	30 e0       	ldi	r19, 0x00	; 0
    9bac:	20 5b       	subi	r18, 0xB0	; 176
    9bae:	3b 4f       	sbci	r19, 0xFB	; 251
    9bb0:	f9 01       	movw	r30, r18
    9bb2:	20 81       	ld	r18, Z
    9bb4:	28 60       	ori	r18, 0x08	; 8
    9bb6:	fc 01       	movw	r30, r24
    9bb8:	20 83       	st	Z, r18
    9bba:	00 00       	nop
    9bbc:	00 00       	nop
    9bbe:	0f 90       	pop	r0
    9bc0:	0f 90       	pop	r0
    9bc2:	df 91       	pop	r29
    9bc4:	cf 91       	pop	r28
    9bc6:	08 95       	ret

00009bc8 <PORTC_set_pin_level>:
    9bc8:	cf 93       	push	r28
    9bca:	df 93       	push	r29
    9bcc:	00 d0       	rcall	.+0      	; 0x9bce <PORTC_set_pin_level+0x6>
    9bce:	cd b7       	in	r28, 0x3d	; 61
    9bd0:	de b7       	in	r29, 0x3e	; 62
    9bd2:	89 83       	std	Y+1, r24	; 0x01
    9bd4:	6a 83       	std	Y+2, r22	; 0x02
    9bd6:	8a 81       	ldd	r24, Y+2	; 0x02
    9bd8:	88 23       	and	r24, r24
    9bda:	a9 f0       	breq	.+42     	; 0x9c06 <PORTC_set_pin_level+0x3e>
    9bdc:	88 e0       	ldi	r24, 0x08	; 8
    9bde:	90 e0       	ldi	r25, 0x00	; 0
    9be0:	28 e0       	ldi	r18, 0x08	; 8
    9be2:	30 e0       	ldi	r19, 0x00	; 0
    9be4:	f9 01       	movw	r30, r18
    9be6:	21 81       	ldd	r18, Z+1	; 0x01
    9be8:	62 2f       	mov	r22, r18
    9bea:	29 81       	ldd	r18, Y+1	; 0x01
    9bec:	42 2f       	mov	r20, r18
    9bee:	50 e0       	ldi	r21, 0x00	; 0
    9bf0:	21 e0       	ldi	r18, 0x01	; 1
    9bf2:	30 e0       	ldi	r19, 0x00	; 0
    9bf4:	02 c0       	rjmp	.+4      	; 0x9bfa <PORTC_set_pin_level+0x32>
    9bf6:	22 0f       	add	r18, r18
    9bf8:	33 1f       	adc	r19, r19
    9bfa:	4a 95       	dec	r20
    9bfc:	e2 f7       	brpl	.-8      	; 0x9bf6 <PORTC_set_pin_level+0x2e>
    9bfe:	26 2b       	or	r18, r22
    9c00:	fc 01       	movw	r30, r24
    9c02:	21 83       	std	Z+1, r18	; 0x01
    9c04:	15 c0       	rjmp	.+42     	; 0x9c30 <PORTC_set_pin_level+0x68>
    9c06:	88 e0       	ldi	r24, 0x08	; 8
    9c08:	90 e0       	ldi	r25, 0x00	; 0
    9c0a:	28 e0       	ldi	r18, 0x08	; 8
    9c0c:	30 e0       	ldi	r19, 0x00	; 0
    9c0e:	f9 01       	movw	r30, r18
    9c10:	21 81       	ldd	r18, Z+1	; 0x01
    9c12:	62 2f       	mov	r22, r18
    9c14:	29 81       	ldd	r18, Y+1	; 0x01
    9c16:	42 2f       	mov	r20, r18
    9c18:	50 e0       	ldi	r21, 0x00	; 0
    9c1a:	21 e0       	ldi	r18, 0x01	; 1
    9c1c:	30 e0       	ldi	r19, 0x00	; 0
    9c1e:	02 c0       	rjmp	.+4      	; 0x9c24 <PORTC_set_pin_level+0x5c>
    9c20:	22 0f       	add	r18, r18
    9c22:	33 1f       	adc	r19, r19
    9c24:	4a 95       	dec	r20
    9c26:	e2 f7       	brpl	.-8      	; 0x9c20 <PORTC_set_pin_level+0x58>
    9c28:	20 95       	com	r18
    9c2a:	26 23       	and	r18, r22
    9c2c:	fc 01       	movw	r30, r24
    9c2e:	21 83       	std	Z+1, r18	; 0x01
    9c30:	00 00       	nop
    9c32:	0f 90       	pop	r0
    9c34:	0f 90       	pop	r0
    9c36:	df 91       	pop	r29
    9c38:	cf 91       	pop	r28
    9c3a:	08 95       	ret

00009c3c <PORTE_set_pin_pull_mode>:
    9c3c:	cf 93       	push	r28
    9c3e:	df 93       	push	r29
    9c40:	00 d0       	rcall	.+0      	; 0x9c42 <PORTE_set_pin_pull_mode+0x6>
    9c42:	00 d0       	rcall	.+0      	; 0x9c44 <PORTE_set_pin_pull_mode+0x8>
    9c44:	cd b7       	in	r28, 0x3d	; 61
    9c46:	de b7       	in	r29, 0x3e	; 62
    9c48:	8b 83       	std	Y+3, r24	; 0x03
    9c4a:	6c 83       	std	Y+4, r22	; 0x04
    9c4c:	8b 81       	ldd	r24, Y+3	; 0x03
    9c4e:	88 2f       	mov	r24, r24
    9c50:	90 e0       	ldi	r25, 0x00	; 0
    9c52:	80 57       	subi	r24, 0x70	; 112
    9c54:	9b 4f       	sbci	r25, 0xFB	; 251
    9c56:	89 83       	std	Y+1, r24	; 0x01
    9c58:	9a 83       	std	Y+2, r25	; 0x02
    9c5a:	8c 81       	ldd	r24, Y+4	; 0x04
    9c5c:	81 30       	cpi	r24, 0x01	; 1
    9c5e:	59 f4       	brne	.+22     	; 0x9c76 <PORTE_set_pin_pull_mode+0x3a>
    9c60:	89 81       	ldd	r24, Y+1	; 0x01
    9c62:	9a 81       	ldd	r25, Y+2	; 0x02
    9c64:	fc 01       	movw	r30, r24
    9c66:	80 81       	ld	r24, Z
    9c68:	28 2f       	mov	r18, r24
    9c6a:	28 60       	ori	r18, 0x08	; 8
    9c6c:	89 81       	ldd	r24, Y+1	; 0x01
    9c6e:	9a 81       	ldd	r25, Y+2	; 0x02
    9c70:	fc 01       	movw	r30, r24
    9c72:	20 83       	st	Z, r18
    9c74:	0d c0       	rjmp	.+26     	; 0x9c90 <PORTE_set_pin_pull_mode+0x54>
    9c76:	8c 81       	ldd	r24, Y+4	; 0x04
    9c78:	88 23       	and	r24, r24
    9c7a:	51 f4       	brne	.+20     	; 0x9c90 <PORTE_set_pin_pull_mode+0x54>
    9c7c:	89 81       	ldd	r24, Y+1	; 0x01
    9c7e:	9a 81       	ldd	r25, Y+2	; 0x02
    9c80:	fc 01       	movw	r30, r24
    9c82:	80 81       	ld	r24, Z
    9c84:	28 2f       	mov	r18, r24
    9c86:	27 7f       	andi	r18, 0xF7	; 247
    9c88:	89 81       	ldd	r24, Y+1	; 0x01
    9c8a:	9a 81       	ldd	r25, Y+2	; 0x02
    9c8c:	fc 01       	movw	r30, r24
    9c8e:	20 83       	st	Z, r18
    9c90:	00 00       	nop
    9c92:	24 96       	adiw	r28, 0x04	; 4
    9c94:	cd bf       	out	0x3d, r28	; 61
    9c96:	de bf       	out	0x3e, r29	; 62
    9c98:	df 91       	pop	r29
    9c9a:	cf 91       	pop	r28
    9c9c:	08 95       	ret

00009c9e <PORTE_set_pin_dir>:
    9c9e:	cf 93       	push	r28
    9ca0:	df 93       	push	r29
    9ca2:	00 d0       	rcall	.+0      	; 0x9ca4 <PORTE_set_pin_dir+0x6>
    9ca4:	cd b7       	in	r28, 0x3d	; 61
    9ca6:	de b7       	in	r29, 0x3e	; 62
    9ca8:	89 83       	std	Y+1, r24	; 0x01
    9caa:	6a 83       	std	Y+2, r22	; 0x02
    9cac:	8a 81       	ldd	r24, Y+2	; 0x02
    9cae:	88 2f       	mov	r24, r24
    9cb0:	90 e0       	ldi	r25, 0x00	; 0
    9cb2:	81 30       	cpi	r24, 0x01	; 1
    9cb4:	91 05       	cpc	r25, r1
    9cb6:	e1 f0       	breq	.+56     	; 0x9cf0 <PORTE_set_pin_dir+0x52>
    9cb8:	82 30       	cpi	r24, 0x02	; 2
    9cba:	91 05       	cpc	r25, r1
    9cbc:	71 f1       	breq	.+92     	; 0x9d1a <PORTE_set_pin_dir+0x7c>
    9cbe:	89 2b       	or	r24, r25
    9cc0:	09 f0       	breq	.+2      	; 0x9cc4 <PORTE_set_pin_dir+0x26>
    9cc2:	3b c0       	rjmp	.+118    	; 0x9d3a <PORTE_set_pin_dir+0x9c>
    9cc4:	80 e1       	ldi	r24, 0x10	; 16
    9cc6:	90 e0       	ldi	r25, 0x00	; 0
    9cc8:	20 e1       	ldi	r18, 0x10	; 16
    9cca:	30 e0       	ldi	r19, 0x00	; 0
    9ccc:	f9 01       	movw	r30, r18
    9cce:	20 81       	ld	r18, Z
    9cd0:	62 2f       	mov	r22, r18
    9cd2:	29 81       	ldd	r18, Y+1	; 0x01
    9cd4:	42 2f       	mov	r20, r18
    9cd6:	50 e0       	ldi	r21, 0x00	; 0
    9cd8:	21 e0       	ldi	r18, 0x01	; 1
    9cda:	30 e0       	ldi	r19, 0x00	; 0
    9cdc:	02 c0       	rjmp	.+4      	; 0x9ce2 <PORTE_set_pin_dir+0x44>
    9cde:	22 0f       	add	r18, r18
    9ce0:	33 1f       	adc	r19, r19
    9ce2:	4a 95       	dec	r20
    9ce4:	e2 f7       	brpl	.-8      	; 0x9cde <PORTE_set_pin_dir+0x40>
    9ce6:	20 95       	com	r18
    9ce8:	26 23       	and	r18, r22
    9cea:	fc 01       	movw	r30, r24
    9cec:	20 83       	st	Z, r18
    9cee:	25 c0       	rjmp	.+74     	; 0x9d3a <PORTE_set_pin_dir+0x9c>
    9cf0:	80 e1       	ldi	r24, 0x10	; 16
    9cf2:	90 e0       	ldi	r25, 0x00	; 0
    9cf4:	20 e1       	ldi	r18, 0x10	; 16
    9cf6:	30 e0       	ldi	r19, 0x00	; 0
    9cf8:	f9 01       	movw	r30, r18
    9cfa:	20 81       	ld	r18, Z
    9cfc:	62 2f       	mov	r22, r18
    9cfe:	29 81       	ldd	r18, Y+1	; 0x01
    9d00:	42 2f       	mov	r20, r18
    9d02:	50 e0       	ldi	r21, 0x00	; 0
    9d04:	21 e0       	ldi	r18, 0x01	; 1
    9d06:	30 e0       	ldi	r19, 0x00	; 0
    9d08:	02 c0       	rjmp	.+4      	; 0x9d0e <PORTE_set_pin_dir+0x70>
    9d0a:	22 0f       	add	r18, r18
    9d0c:	33 1f       	adc	r19, r19
    9d0e:	4a 95       	dec	r20
    9d10:	e2 f7       	brpl	.-8      	; 0x9d0a <PORTE_set_pin_dir+0x6c>
    9d12:	26 2b       	or	r18, r22
    9d14:	fc 01       	movw	r30, r24
    9d16:	20 83       	st	Z, r18
    9d18:	10 c0       	rjmp	.+32     	; 0x9d3a <PORTE_set_pin_dir+0x9c>
    9d1a:	89 81       	ldd	r24, Y+1	; 0x01
    9d1c:	88 2f       	mov	r24, r24
    9d1e:	90 e0       	ldi	r25, 0x00	; 0
    9d20:	80 57       	subi	r24, 0x70	; 112
    9d22:	9b 4f       	sbci	r25, 0xFB	; 251
    9d24:	29 81       	ldd	r18, Y+1	; 0x01
    9d26:	22 2f       	mov	r18, r18
    9d28:	30 e0       	ldi	r19, 0x00	; 0
    9d2a:	20 57       	subi	r18, 0x70	; 112
    9d2c:	3b 4f       	sbci	r19, 0xFB	; 251
    9d2e:	f9 01       	movw	r30, r18
    9d30:	20 81       	ld	r18, Z
    9d32:	28 60       	ori	r18, 0x08	; 8
    9d34:	fc 01       	movw	r30, r24
    9d36:	20 83       	st	Z, r18
    9d38:	00 00       	nop
    9d3a:	00 00       	nop
    9d3c:	0f 90       	pop	r0
    9d3e:	0f 90       	pop	r0
    9d40:	df 91       	pop	r29
    9d42:	cf 91       	pop	r28
    9d44:	08 95       	ret

00009d46 <PORTE_set_pin_level>:
    9d46:	cf 93       	push	r28
    9d48:	df 93       	push	r29
    9d4a:	00 d0       	rcall	.+0      	; 0x9d4c <PORTE_set_pin_level+0x6>
    9d4c:	cd b7       	in	r28, 0x3d	; 61
    9d4e:	de b7       	in	r29, 0x3e	; 62
    9d50:	89 83       	std	Y+1, r24	; 0x01
    9d52:	6a 83       	std	Y+2, r22	; 0x02
    9d54:	8a 81       	ldd	r24, Y+2	; 0x02
    9d56:	88 23       	and	r24, r24
    9d58:	a9 f0       	breq	.+42     	; 0x9d84 <PORTE_set_pin_level+0x3e>
    9d5a:	80 e1       	ldi	r24, 0x10	; 16
    9d5c:	90 e0       	ldi	r25, 0x00	; 0
    9d5e:	20 e1       	ldi	r18, 0x10	; 16
    9d60:	30 e0       	ldi	r19, 0x00	; 0
    9d62:	f9 01       	movw	r30, r18
    9d64:	21 81       	ldd	r18, Z+1	; 0x01
    9d66:	62 2f       	mov	r22, r18
    9d68:	29 81       	ldd	r18, Y+1	; 0x01
    9d6a:	42 2f       	mov	r20, r18
    9d6c:	50 e0       	ldi	r21, 0x00	; 0
    9d6e:	21 e0       	ldi	r18, 0x01	; 1
    9d70:	30 e0       	ldi	r19, 0x00	; 0
    9d72:	02 c0       	rjmp	.+4      	; 0x9d78 <PORTE_set_pin_level+0x32>
    9d74:	22 0f       	add	r18, r18
    9d76:	33 1f       	adc	r19, r19
    9d78:	4a 95       	dec	r20
    9d7a:	e2 f7       	brpl	.-8      	; 0x9d74 <PORTE_set_pin_level+0x2e>
    9d7c:	26 2b       	or	r18, r22
    9d7e:	fc 01       	movw	r30, r24
    9d80:	21 83       	std	Z+1, r18	; 0x01
    9d82:	15 c0       	rjmp	.+42     	; 0x9dae <PORTE_set_pin_level+0x68>
    9d84:	80 e1       	ldi	r24, 0x10	; 16
    9d86:	90 e0       	ldi	r25, 0x00	; 0
    9d88:	20 e1       	ldi	r18, 0x10	; 16
    9d8a:	30 e0       	ldi	r19, 0x00	; 0
    9d8c:	f9 01       	movw	r30, r18
    9d8e:	21 81       	ldd	r18, Z+1	; 0x01
    9d90:	62 2f       	mov	r22, r18
    9d92:	29 81       	ldd	r18, Y+1	; 0x01
    9d94:	42 2f       	mov	r20, r18
    9d96:	50 e0       	ldi	r21, 0x00	; 0
    9d98:	21 e0       	ldi	r18, 0x01	; 1
    9d9a:	30 e0       	ldi	r19, 0x00	; 0
    9d9c:	02 c0       	rjmp	.+4      	; 0x9da2 <PORTE_set_pin_level+0x5c>
    9d9e:	22 0f       	add	r18, r18
    9da0:	33 1f       	adc	r19, r19
    9da2:	4a 95       	dec	r20
    9da4:	e2 f7       	brpl	.-8      	; 0x9d9e <PORTE_set_pin_level+0x58>
    9da6:	20 95       	com	r18
    9da8:	26 23       	and	r18, r22
    9daa:	fc 01       	movw	r30, r24
    9dac:	21 83       	std	Z+1, r18	; 0x01
    9dae:	00 00       	nop
    9db0:	0f 90       	pop	r0
    9db2:	0f 90       	pop	r0
    9db4:	df 91       	pop	r29
    9db6:	cf 91       	pop	r28
    9db8:	08 95       	ret

00009dba <PC0_set_dir>:
    9dba:	cf 93       	push	r28
    9dbc:	df 93       	push	r29
    9dbe:	1f 92       	push	r1
    9dc0:	cd b7       	in	r28, 0x3d	; 61
    9dc2:	de b7       	in	r29, 0x3e	; 62
    9dc4:	89 83       	std	Y+1, r24	; 0x01
    9dc6:	69 81       	ldd	r22, Y+1	; 0x01
    9dc8:	80 e0       	ldi	r24, 0x00	; 0
    9dca:	0e 94 90 4d 	call	0x9b20	; 0x9b20 <PORTC_set_pin_dir>
    9dce:	00 00       	nop
    9dd0:	0f 90       	pop	r0
    9dd2:	df 91       	pop	r29
    9dd4:	cf 91       	pop	r28
    9dd6:	08 95       	ret

00009dd8 <PC0_set_level>:
    9dd8:	cf 93       	push	r28
    9dda:	df 93       	push	r29
    9ddc:	1f 92       	push	r1
    9dde:	cd b7       	in	r28, 0x3d	; 61
    9de0:	de b7       	in	r29, 0x3e	; 62
    9de2:	89 83       	std	Y+1, r24	; 0x01
    9de4:	69 81       	ldd	r22, Y+1	; 0x01
    9de6:	80 e0       	ldi	r24, 0x00	; 0
    9de8:	0e 94 e4 4d 	call	0x9bc8	; 0x9bc8 <PORTC_set_pin_level>
    9dec:	00 00       	nop
    9dee:	0f 90       	pop	r0
    9df0:	df 91       	pop	r29
    9df2:	cf 91       	pop	r28
    9df4:	08 95       	ret

00009df6 <PC1_set_pull_mode>:
    9df6:	cf 93       	push	r28
    9df8:	df 93       	push	r29
    9dfa:	1f 92       	push	r1
    9dfc:	cd b7       	in	r28, 0x3d	; 61
    9dfe:	de b7       	in	r29, 0x3e	; 62
    9e00:	89 83       	std	Y+1, r24	; 0x01
    9e02:	69 81       	ldd	r22, Y+1	; 0x01
    9e04:	81 e0       	ldi	r24, 0x01	; 1
    9e06:	0e 94 5f 4d 	call	0x9abe	; 0x9abe <PORTC_set_pin_pull_mode>
    9e0a:	00 00       	nop
    9e0c:	0f 90       	pop	r0
    9e0e:	df 91       	pop	r29
    9e10:	cf 91       	pop	r28
    9e12:	08 95       	ret

00009e14 <PC1_set_dir>:
    9e14:	cf 93       	push	r28
    9e16:	df 93       	push	r29
    9e18:	1f 92       	push	r1
    9e1a:	cd b7       	in	r28, 0x3d	; 61
    9e1c:	de b7       	in	r29, 0x3e	; 62
    9e1e:	89 83       	std	Y+1, r24	; 0x01
    9e20:	69 81       	ldd	r22, Y+1	; 0x01
    9e22:	81 e0       	ldi	r24, 0x01	; 1
    9e24:	0e 94 90 4d 	call	0x9b20	; 0x9b20 <PORTC_set_pin_dir>
    9e28:	00 00       	nop
    9e2a:	0f 90       	pop	r0
    9e2c:	df 91       	pop	r29
    9e2e:	cf 91       	pop	r28
    9e30:	08 95       	ret

00009e32 <PE0_set_dir>:
    9e32:	cf 93       	push	r28
    9e34:	df 93       	push	r29
    9e36:	1f 92       	push	r1
    9e38:	cd b7       	in	r28, 0x3d	; 61
    9e3a:	de b7       	in	r29, 0x3e	; 62
    9e3c:	89 83       	std	Y+1, r24	; 0x01
    9e3e:	69 81       	ldd	r22, Y+1	; 0x01
    9e40:	80 e0       	ldi	r24, 0x00	; 0
    9e42:	0e 94 4f 4e 	call	0x9c9e	; 0x9c9e <PORTE_set_pin_dir>
    9e46:	00 00       	nop
    9e48:	0f 90       	pop	r0
    9e4a:	df 91       	pop	r29
    9e4c:	cf 91       	pop	r28
    9e4e:	08 95       	ret

00009e50 <PE0_set_level>:
    9e50:	cf 93       	push	r28
    9e52:	df 93       	push	r29
    9e54:	1f 92       	push	r1
    9e56:	cd b7       	in	r28, 0x3d	; 61
    9e58:	de b7       	in	r29, 0x3e	; 62
    9e5a:	89 83       	std	Y+1, r24	; 0x01
    9e5c:	69 81       	ldd	r22, Y+1	; 0x01
    9e5e:	80 e0       	ldi	r24, 0x00	; 0
    9e60:	0e 94 a3 4e 	call	0x9d46	; 0x9d46 <PORTE_set_pin_level>
    9e64:	00 00       	nop
    9e66:	0f 90       	pop	r0
    9e68:	df 91       	pop	r29
    9e6a:	cf 91       	pop	r28
    9e6c:	08 95       	ret

00009e6e <PE1_set_pull_mode>:
    9e6e:	cf 93       	push	r28
    9e70:	df 93       	push	r29
    9e72:	1f 92       	push	r1
    9e74:	cd b7       	in	r28, 0x3d	; 61
    9e76:	de b7       	in	r29, 0x3e	; 62
    9e78:	89 83       	std	Y+1, r24	; 0x01
    9e7a:	69 81       	ldd	r22, Y+1	; 0x01
    9e7c:	81 e0       	ldi	r24, 0x01	; 1
    9e7e:	0e 94 1e 4e 	call	0x9c3c	; 0x9c3c <PORTE_set_pin_pull_mode>
    9e82:	00 00       	nop
    9e84:	0f 90       	pop	r0
    9e86:	df 91       	pop	r29
    9e88:	cf 91       	pop	r28
    9e8a:	08 95       	ret

00009e8c <PE1_set_dir>:
    9e8c:	cf 93       	push	r28
    9e8e:	df 93       	push	r29
    9e90:	1f 92       	push	r1
    9e92:	cd b7       	in	r28, 0x3d	; 61
    9e94:	de b7       	in	r29, 0x3e	; 62
    9e96:	89 83       	std	Y+1, r24	; 0x01
    9e98:	69 81       	ldd	r22, Y+1	; 0x01
    9e9a:	81 e0       	ldi	r24, 0x01	; 1
    9e9c:	0e 94 4f 4e 	call	0x9c9e	; 0x9c9e <PORTE_set_pin_dir>
    9ea0:	00 00       	nop
    9ea2:	0f 90       	pop	r0
    9ea4:	df 91       	pop	r29
    9ea6:	cf 91       	pop	r28
    9ea8:	08 95       	ret

00009eaa <_Z18nextFullLBTxBufferv>:
    9eaa:	cf 93       	push	r28
    9eac:	df 93       	push	r29
    9eae:	00 d0       	rcall	.+0      	; 0x9eb0 <_Z18nextFullLBTxBufferv+0x6>
    9eb0:	cd b7       	in	r28, 0x3d	; 61
    9eb2:	de b7       	in	r29, 0x3e	; 62
    9eb4:	81 e0       	ldi	r24, 0x01	; 1
    9eb6:	89 83       	std	Y+1, r24	; 0x01
    9eb8:	1a 82       	std	Y+2, r1	; 0x02
    9eba:	80 91 89 49 	lds	r24, 0x4989	; 0x804989 <_ZZ18nextFullLBTxBuffervE11bufferIndex>
    9ebe:	28 2f       	mov	r18, r24
    9ec0:	30 e0       	ldi	r19, 0x00	; 0
    9ec2:	42 e3       	ldi	r20, 0x32	; 50
    9ec4:	42 9f       	mul	r20, r18
    9ec6:	c0 01       	movw	r24, r0
    9ec8:	43 9f       	mul	r20, r19
    9eca:	90 0d       	add	r25, r0
    9ecc:	11 24       	eor	r1, r1
    9ece:	83 5c       	subi	r24, 0xC3	; 195
    9ed0:	97 4b       	sbci	r25, 0xB7	; 183
    9ed2:	fc 01       	movw	r30, r24
    9ed4:	80 81       	ld	r24, Z
    9ed6:	88 23       	and	r24, r24
    9ed8:	c1 f4       	brne	.+48     	; 0x9f0a <_Z18nextFullLBTxBufferv+0x60>
    9eda:	8a 81       	ldd	r24, Y+2	; 0x02
    9edc:	8f 5f       	subi	r24, 0xFF	; 255
    9ede:	8a 83       	std	Y+2, r24	; 0x02
    9ee0:	81 e0       	ldi	r24, 0x01	; 1
    9ee2:	9a 81       	ldd	r25, Y+2	; 0x02
    9ee4:	94 30       	cpi	r25, 0x04	; 4
    9ee6:	08 f4       	brcc	.+2      	; 0x9eea <_Z18nextFullLBTxBufferv+0x40>
    9ee8:	80 e0       	ldi	r24, 0x00	; 0
    9eea:	88 23       	and	r24, r24
    9eec:	11 f0       	breq	.+4      	; 0x9ef2 <_Z18nextFullLBTxBufferv+0x48>
    9eee:	19 82       	std	Y+1, r1	; 0x01
    9ef0:	0c c0       	rjmp	.+24     	; 0x9f0a <_Z18nextFullLBTxBufferv+0x60>
    9ef2:	80 91 89 49 	lds	r24, 0x4989	; 0x804989 <_ZZ18nextFullLBTxBuffervE11bufferIndex>
    9ef6:	8f 5f       	subi	r24, 0xFF	; 255
    9ef8:	80 93 89 49 	sts	0x4989, r24	; 0x804989 <_ZZ18nextFullLBTxBuffervE11bufferIndex>
    9efc:	80 91 89 49 	lds	r24, 0x4989	; 0x804989 <_ZZ18nextFullLBTxBuffervE11bufferIndex>
    9f00:	84 30       	cpi	r24, 0x04	; 4
    9f02:	d8 f2       	brcs	.-74     	; 0x9eba <_Z18nextFullLBTxBufferv+0x10>
    9f04:	10 92 89 49 	sts	0x4989, r1	; 0x804989 <_ZZ18nextFullLBTxBuffervE11bufferIndex>
    9f08:	d8 cf       	rjmp	.-80     	; 0x9eba <_Z18nextFullLBTxBufferv+0x10>
    9f0a:	89 81       	ldd	r24, Y+1	; 0x01
    9f0c:	88 23       	and	r24, r24
    9f0e:	69 f0       	breq	.+26     	; 0x9f2a <_Z18nextFullLBTxBufferv+0x80>
    9f10:	80 91 89 49 	lds	r24, 0x4989	; 0x804989 <_ZZ18nextFullLBTxBuffervE11bufferIndex>
    9f14:	28 2f       	mov	r18, r24
    9f16:	30 e0       	ldi	r19, 0x00	; 0
    9f18:	42 e3       	ldi	r20, 0x32	; 50
    9f1a:	42 9f       	mul	r20, r18
    9f1c:	c0 01       	movw	r24, r0
    9f1e:	43 9f       	mul	r20, r19
    9f20:	90 0d       	add	r25, r0
    9f22:	11 24       	eor	r1, r1
    9f24:	83 5c       	subi	r24, 0xC3	; 195
    9f26:	97 4b       	sbci	r25, 0xB7	; 183
    9f28:	02 c0       	rjmp	.+4      	; 0x9f2e <_Z18nextFullLBTxBufferv+0x84>
    9f2a:	80 e0       	ldi	r24, 0x00	; 0
    9f2c:	90 e0       	ldi	r25, 0x00	; 0
    9f2e:	0f 90       	pop	r0
    9f30:	0f 90       	pop	r0
    9f32:	df 91       	pop	r29
    9f34:	cf 91       	pop	r28
    9f36:	08 95       	ret

00009f38 <_Z19nextEmptyLBTxBufferv>:
    9f38:	cf 93       	push	r28
    9f3a:	df 93       	push	r29
    9f3c:	00 d0       	rcall	.+0      	; 0x9f3e <_Z19nextEmptyLBTxBufferv+0x6>
    9f3e:	cd b7       	in	r28, 0x3d	; 61
    9f40:	de b7       	in	r29, 0x3e	; 62
    9f42:	81 e0       	ldi	r24, 0x01	; 1
    9f44:	89 83       	std	Y+1, r24	; 0x01
    9f46:	1a 82       	std	Y+2, r1	; 0x02
    9f48:	80 91 8a 49 	lds	r24, 0x498A	; 0x80498a <_ZZ19nextEmptyLBTxBuffervE11bufferIndex>
    9f4c:	28 2f       	mov	r18, r24
    9f4e:	30 e0       	ldi	r19, 0x00	; 0
    9f50:	42 e3       	ldi	r20, 0x32	; 50
    9f52:	42 9f       	mul	r20, r18
    9f54:	c0 01       	movw	r24, r0
    9f56:	43 9f       	mul	r20, r19
    9f58:	90 0d       	add	r25, r0
    9f5a:	11 24       	eor	r1, r1
    9f5c:	83 5c       	subi	r24, 0xC3	; 195
    9f5e:	97 4b       	sbci	r25, 0xB7	; 183
    9f60:	fc 01       	movw	r30, r24
    9f62:	80 81       	ld	r24, Z
    9f64:	88 23       	and	r24, r24
    9f66:	c1 f0       	breq	.+48     	; 0x9f98 <_Z19nextEmptyLBTxBufferv+0x60>
    9f68:	8a 81       	ldd	r24, Y+2	; 0x02
    9f6a:	8f 5f       	subi	r24, 0xFF	; 255
    9f6c:	8a 83       	std	Y+2, r24	; 0x02
    9f6e:	81 e0       	ldi	r24, 0x01	; 1
    9f70:	9a 81       	ldd	r25, Y+2	; 0x02
    9f72:	94 30       	cpi	r25, 0x04	; 4
    9f74:	08 f4       	brcc	.+2      	; 0x9f78 <_Z19nextEmptyLBTxBufferv+0x40>
    9f76:	80 e0       	ldi	r24, 0x00	; 0
    9f78:	88 23       	and	r24, r24
    9f7a:	11 f0       	breq	.+4      	; 0x9f80 <_Z19nextEmptyLBTxBufferv+0x48>
    9f7c:	19 82       	std	Y+1, r1	; 0x01
    9f7e:	0c c0       	rjmp	.+24     	; 0x9f98 <_Z19nextEmptyLBTxBufferv+0x60>
    9f80:	80 91 8a 49 	lds	r24, 0x498A	; 0x80498a <_ZZ19nextEmptyLBTxBuffervE11bufferIndex>
    9f84:	8f 5f       	subi	r24, 0xFF	; 255
    9f86:	80 93 8a 49 	sts	0x498A, r24	; 0x80498a <_ZZ19nextEmptyLBTxBuffervE11bufferIndex>
    9f8a:	80 91 8a 49 	lds	r24, 0x498A	; 0x80498a <_ZZ19nextEmptyLBTxBuffervE11bufferIndex>
    9f8e:	84 30       	cpi	r24, 0x04	; 4
    9f90:	d8 f2       	brcs	.-74     	; 0x9f48 <_Z19nextEmptyLBTxBufferv+0x10>
    9f92:	10 92 8a 49 	sts	0x498A, r1	; 0x80498a <_ZZ19nextEmptyLBTxBuffervE11bufferIndex>
    9f96:	d8 cf       	rjmp	.-80     	; 0x9f48 <_Z19nextEmptyLBTxBufferv+0x10>
    9f98:	89 81       	ldd	r24, Y+1	; 0x01
    9f9a:	88 23       	and	r24, r24
    9f9c:	69 f0       	breq	.+26     	; 0x9fb8 <_Z19nextEmptyLBTxBufferv+0x80>
    9f9e:	80 91 8a 49 	lds	r24, 0x498A	; 0x80498a <_ZZ19nextEmptyLBTxBuffervE11bufferIndex>
    9fa2:	28 2f       	mov	r18, r24
    9fa4:	30 e0       	ldi	r19, 0x00	; 0
    9fa6:	42 e3       	ldi	r20, 0x32	; 50
    9fa8:	42 9f       	mul	r20, r18
    9faa:	c0 01       	movw	r24, r0
    9fac:	43 9f       	mul	r20, r19
    9fae:	90 0d       	add	r25, r0
    9fb0:	11 24       	eor	r1, r1
    9fb2:	83 5c       	subi	r24, 0xC3	; 195
    9fb4:	97 4b       	sbci	r25, 0xB7	; 183
    9fb6:	02 c0       	rjmp	.+4      	; 0x9fbc <_Z19nextEmptyLBTxBufferv+0x84>
    9fb8:	80 e0       	ldi	r24, 0x00	; 0
    9fba:	90 e0       	ldi	r25, 0x00	; 0
    9fbc:	0f 90       	pop	r0
    9fbe:	0f 90       	pop	r0
    9fc0:	df 91       	pop	r29
    9fc2:	cf 91       	pop	r28
    9fc4:	08 95       	ret

00009fc6 <_Z19nextEmptyLBRxBufferv>:
    9fc6:	cf 93       	push	r28
    9fc8:	df 93       	push	r29
    9fca:	00 d0       	rcall	.+0      	; 0x9fcc <_Z19nextEmptyLBRxBufferv+0x6>
    9fcc:	cd b7       	in	r28, 0x3d	; 61
    9fce:	de b7       	in	r29, 0x3e	; 62
    9fd0:	81 e0       	ldi	r24, 0x01	; 1
    9fd2:	89 83       	std	Y+1, r24	; 0x01
    9fd4:	1a 82       	std	Y+2, r1	; 0x02
    9fd6:	80 91 8b 49 	lds	r24, 0x498B	; 0x80498b <_ZZ19nextEmptyLBRxBuffervE11bufferIndex>
    9fda:	28 2f       	mov	r18, r24
    9fdc:	30 e0       	ldi	r19, 0x00	; 0
    9fde:	42 e4       	ldi	r20, 0x42	; 66
    9fe0:	42 9f       	mul	r20, r18
    9fe2:	c0 01       	movw	r24, r0
    9fe4:	43 9f       	mul	r20, r19
    9fe6:	90 0d       	add	r25, r0
    9fe8:	11 24       	eor	r1, r1
    9fea:	8a 5f       	subi	r24, 0xFA	; 250
    9fec:	96 4b       	sbci	r25, 0xB6	; 182
    9fee:	fc 01       	movw	r30, r24
    9ff0:	80 81       	ld	r24, Z
    9ff2:	91 81       	ldd	r25, Z+1	; 0x01
    9ff4:	89 2b       	or	r24, r25
    9ff6:	c1 f0       	breq	.+48     	; 0xa028 <_Z19nextEmptyLBRxBufferv+0x62>
    9ff8:	8a 81       	ldd	r24, Y+2	; 0x02
    9ffa:	8f 5f       	subi	r24, 0xFF	; 255
    9ffc:	8a 83       	std	Y+2, r24	; 0x02
    9ffe:	81 e0       	ldi	r24, 0x01	; 1
    a000:	9a 81       	ldd	r25, Y+2	; 0x02
    a002:	92 30       	cpi	r25, 0x02	; 2
    a004:	08 f4       	brcc	.+2      	; 0xa008 <_Z19nextEmptyLBRxBufferv+0x42>
    a006:	80 e0       	ldi	r24, 0x00	; 0
    a008:	88 23       	and	r24, r24
    a00a:	11 f0       	breq	.+4      	; 0xa010 <_Z19nextEmptyLBRxBufferv+0x4a>
    a00c:	19 82       	std	Y+1, r1	; 0x01
    a00e:	0c c0       	rjmp	.+24     	; 0xa028 <_Z19nextEmptyLBRxBufferv+0x62>
    a010:	80 91 8b 49 	lds	r24, 0x498B	; 0x80498b <_ZZ19nextEmptyLBRxBuffervE11bufferIndex>
    a014:	8f 5f       	subi	r24, 0xFF	; 255
    a016:	80 93 8b 49 	sts	0x498B, r24	; 0x80498b <_ZZ19nextEmptyLBRxBuffervE11bufferIndex>
    a01a:	80 91 8b 49 	lds	r24, 0x498B	; 0x80498b <_ZZ19nextEmptyLBRxBuffervE11bufferIndex>
    a01e:	82 30       	cpi	r24, 0x02	; 2
    a020:	d0 f2       	brcs	.-76     	; 0x9fd6 <_Z19nextEmptyLBRxBufferv+0x10>
    a022:	10 92 8b 49 	sts	0x498B, r1	; 0x80498b <_ZZ19nextEmptyLBRxBuffervE11bufferIndex>
    a026:	d7 cf       	rjmp	.-82     	; 0x9fd6 <_Z19nextEmptyLBRxBufferv+0x10>
    a028:	89 81       	ldd	r24, Y+1	; 0x01
    a02a:	88 23       	and	r24, r24
    a02c:	69 f0       	breq	.+26     	; 0xa048 <_Z19nextEmptyLBRxBufferv+0x82>
    a02e:	80 91 8b 49 	lds	r24, 0x498B	; 0x80498b <_ZZ19nextEmptyLBRxBuffervE11bufferIndex>
    a032:	28 2f       	mov	r18, r24
    a034:	30 e0       	ldi	r19, 0x00	; 0
    a036:	42 e4       	ldi	r20, 0x42	; 66
    a038:	42 9f       	mul	r20, r18
    a03a:	c0 01       	movw	r24, r0
    a03c:	43 9f       	mul	r20, r19
    a03e:	90 0d       	add	r25, r0
    a040:	11 24       	eor	r1, r1
    a042:	8b 5f       	subi	r24, 0xFB	; 251
    a044:	96 4b       	sbci	r25, 0xB6	; 182
    a046:	02 c0       	rjmp	.+4      	; 0xa04c <_Z19nextEmptyLBRxBufferv+0x86>
    a048:	80 e0       	ldi	r24, 0x00	; 0
    a04a:	90 e0       	ldi	r25, 0x00	; 0
    a04c:	0f 90       	pop	r0
    a04e:	0f 90       	pop	r0
    a050:	df 91       	pop	r29
    a052:	cf 91       	pop	r28
    a054:	08 95       	ret

0000a056 <_Z18nextFullLBRxBufferv>:
    a056:	cf 93       	push	r28
    a058:	df 93       	push	r29
    a05a:	00 d0       	rcall	.+0      	; 0xa05c <_Z18nextFullLBRxBufferv+0x6>
    a05c:	cd b7       	in	r28, 0x3d	; 61
    a05e:	de b7       	in	r29, 0x3e	; 62
    a060:	81 e0       	ldi	r24, 0x01	; 1
    a062:	89 83       	std	Y+1, r24	; 0x01
    a064:	1a 82       	std	Y+2, r1	; 0x02
    a066:	80 91 8c 49 	lds	r24, 0x498C	; 0x80498c <_ZZ18nextFullLBRxBuffervE11bufferIndex>
    a06a:	28 2f       	mov	r18, r24
    a06c:	30 e0       	ldi	r19, 0x00	; 0
    a06e:	42 e4       	ldi	r20, 0x42	; 66
    a070:	42 9f       	mul	r20, r18
    a072:	c0 01       	movw	r24, r0
    a074:	43 9f       	mul	r20, r19
    a076:	90 0d       	add	r25, r0
    a078:	11 24       	eor	r1, r1
    a07a:	8a 5f       	subi	r24, 0xFA	; 250
    a07c:	96 4b       	sbci	r25, 0xB6	; 182
    a07e:	fc 01       	movw	r30, r24
    a080:	80 81       	ld	r24, Z
    a082:	91 81       	ldd	r25, Z+1	; 0x01
    a084:	89 2b       	or	r24, r25
    a086:	c1 f4       	brne	.+48     	; 0xa0b8 <_Z18nextFullLBRxBufferv+0x62>
    a088:	8a 81       	ldd	r24, Y+2	; 0x02
    a08a:	8f 5f       	subi	r24, 0xFF	; 255
    a08c:	8a 83       	std	Y+2, r24	; 0x02
    a08e:	81 e0       	ldi	r24, 0x01	; 1
    a090:	9a 81       	ldd	r25, Y+2	; 0x02
    a092:	92 30       	cpi	r25, 0x02	; 2
    a094:	08 f4       	brcc	.+2      	; 0xa098 <_Z18nextFullLBRxBufferv+0x42>
    a096:	80 e0       	ldi	r24, 0x00	; 0
    a098:	88 23       	and	r24, r24
    a09a:	11 f0       	breq	.+4      	; 0xa0a0 <_Z18nextFullLBRxBufferv+0x4a>
    a09c:	19 82       	std	Y+1, r1	; 0x01
    a09e:	0c c0       	rjmp	.+24     	; 0xa0b8 <_Z18nextFullLBRxBufferv+0x62>
    a0a0:	80 91 8c 49 	lds	r24, 0x498C	; 0x80498c <_ZZ18nextFullLBRxBuffervE11bufferIndex>
    a0a4:	8f 5f       	subi	r24, 0xFF	; 255
    a0a6:	80 93 8c 49 	sts	0x498C, r24	; 0x80498c <_ZZ18nextFullLBRxBuffervE11bufferIndex>
    a0aa:	80 91 8c 49 	lds	r24, 0x498C	; 0x80498c <_ZZ18nextFullLBRxBuffervE11bufferIndex>
    a0ae:	82 30       	cpi	r24, 0x02	; 2
    a0b0:	d0 f2       	brcs	.-76     	; 0xa066 <_Z18nextFullLBRxBufferv+0x10>
    a0b2:	10 92 8c 49 	sts	0x498C, r1	; 0x80498c <_ZZ18nextFullLBRxBuffervE11bufferIndex>
    a0b6:	d7 cf       	rjmp	.-82     	; 0xa066 <_Z18nextFullLBRxBufferv+0x10>
    a0b8:	89 81       	ldd	r24, Y+1	; 0x01
    a0ba:	88 23       	and	r24, r24
    a0bc:	69 f0       	breq	.+26     	; 0xa0d8 <_Z18nextFullLBRxBufferv+0x82>
    a0be:	80 91 8c 49 	lds	r24, 0x498C	; 0x80498c <_ZZ18nextFullLBRxBuffervE11bufferIndex>
    a0c2:	28 2f       	mov	r18, r24
    a0c4:	30 e0       	ldi	r19, 0x00	; 0
    a0c6:	42 e4       	ldi	r20, 0x42	; 66
    a0c8:	42 9f       	mul	r20, r18
    a0ca:	c0 01       	movw	r24, r0
    a0cc:	43 9f       	mul	r20, r19
    a0ce:	90 0d       	add	r25, r0
    a0d0:	11 24       	eor	r1, r1
    a0d2:	8b 5f       	subi	r24, 0xFB	; 251
    a0d4:	96 4b       	sbci	r25, 0xB6	; 182
    a0d6:	02 c0       	rjmp	.+4      	; 0xa0dc <_Z18nextFullLBRxBufferv+0x86>
    a0d8:	80 e0       	ldi	r24, 0x00	; 0
    a0da:	90 e0       	ldi	r25, 0x00	; 0
    a0dc:	0f 90       	pop	r0
    a0de:	0f 90       	pop	r0
    a0e0:	df 91       	pop	r29
    a0e2:	cf 91       	pop	r28
    a0e4:	08 95       	ret

0000a0e6 <_Z19linkbusTxInProgressv>:
    a0e6:	cf 93       	push	r28
    a0e8:	df 93       	push	r29
    a0ea:	cd b7       	in	r28, 0x3d	; 61
    a0ec:	de b7       	in	r29, 0x3e	; 62
    a0ee:	80 91 3c 48 	lds	r24, 0x483C	; 0x80483c <_ZL17linkbus_tx_active>
    a0f2:	df 91       	pop	r29
    a0f4:	cf 91       	pop	r28
    a0f6:	08 95       	ret

0000a0f8 <_ZL16linkbus_start_txv>:
    a0f8:	cf 93       	push	r28
    a0fa:	df 93       	push	r29
    a0fc:	1f 92       	push	r1
    a0fe:	cd b7       	in	r28, 0x3d	; 61
    a100:	de b7       	in	r29, 0x3e	; 62
    a102:	90 91 3c 48 	lds	r25, 0x483C	; 0x80483c <_ZL17linkbus_tx_active>
    a106:	81 e0       	ldi	r24, 0x01	; 1
    a108:	89 27       	eor	r24, r25
    a10a:	89 83       	std	Y+1, r24	; 0x01
    a10c:	89 81       	ldd	r24, Y+1	; 0x01
    a10e:	88 23       	and	r24, r24
    a110:	61 f0       	breq	.+24     	; 0xa12a <_ZL16linkbus_start_txv+0x32>
    a112:	81 e0       	ldi	r24, 0x01	; 1
    a114:	80 93 3c 48 	sts	0x483C, r24	; 0x80483c <_ZL17linkbus_tx_active>
    a118:	80 91 22 40 	lds	r24, 0x4022	; 0x804022 <g_linkbus_usart_number>
    a11c:	88 23       	and	r24, r24
    a11e:	19 f4       	brne	.+6      	; 0xa126 <_ZL16linkbus_start_txv+0x2e>
    a120:	0e 94 4d 6b 	call	0xd69a	; 0xd69a <USART4_enable_tx>
    a124:	02 c0       	rjmp	.+4      	; 0xa12a <_ZL16linkbus_start_txv+0x32>
    a126:	0e 94 c7 6a 	call	0xd58e	; 0xd58e <USART1_enable_tx>
    a12a:	89 81       	ldd	r24, Y+1	; 0x01
    a12c:	0f 90       	pop	r0
    a12e:	df 91       	pop	r29
    a130:	cf 91       	pop	r28
    a132:	08 95       	ret

0000a134 <_Z14linkbus_end_txv>:
    a134:	cf 93       	push	r28
    a136:	df 93       	push	r29
    a138:	cd b7       	in	r28, 0x3d	; 61
    a13a:	de b7       	in	r29, 0x3e	; 62
    a13c:	80 91 3c 48 	lds	r24, 0x483C	; 0x80483c <_ZL17linkbus_tx_active>
    a140:	88 23       	and	r24, r24
    a142:	c9 f0       	breq	.+50     	; 0xa176 <_Z14linkbus_end_txv+0x42>
    a144:	80 91 22 40 	lds	r24, 0x4022	; 0x804022 <g_linkbus_usart_number>
    a148:	88 23       	and	r24, r24
    a14a:	51 f4       	brne	.+20     	; 0xa160 <_Z14linkbus_end_txv+0x2c>
    a14c:	80 e8       	ldi	r24, 0x80	; 128
    a14e:	98 e0       	ldi	r25, 0x08	; 8
    a150:	20 e8       	ldi	r18, 0x80	; 128
    a152:	38 e0       	ldi	r19, 0x08	; 8
    a154:	f9 01       	movw	r30, r18
    a156:	25 81       	ldd	r18, Z+5	; 0x05
    a158:	2f 7d       	andi	r18, 0xDF	; 223
    a15a:	fc 01       	movw	r30, r24
    a15c:	25 83       	std	Z+5, r18	; 0x05
    a15e:	09 c0       	rjmp	.+18     	; 0xa172 <_Z14linkbus_end_txv+0x3e>
    a160:	80 e2       	ldi	r24, 0x20	; 32
    a162:	98 e0       	ldi	r25, 0x08	; 8
    a164:	20 e2       	ldi	r18, 0x20	; 32
    a166:	38 e0       	ldi	r19, 0x08	; 8
    a168:	f9 01       	movw	r30, r18
    a16a:	25 81       	ldd	r18, Z+5	; 0x05
    a16c:	2f 7d       	andi	r18, 0xDF	; 223
    a16e:	fc 01       	movw	r30, r24
    a170:	25 83       	std	Z+5, r18	; 0x05
    a172:	10 92 3c 48 	sts	0x483C, r1	; 0x80483c <_ZL17linkbus_tx_active>
    a176:	00 00       	nop
    a178:	df 91       	pop	r29
    a17a:	cf 91       	pop	r28
    a17c:	08 95       	ret

0000a17e <_Z16linkbus_reset_rxv>:
    a17e:	cf 93       	push	r28
    a180:	df 93       	push	r29
    a182:	cd b7       	in	r28, 0x3d	; 61
    a184:	de b7       	in	r29, 0x3e	; 62
    a186:	80 91 22 40 	lds	r24, 0x4022	; 0x804022 <g_linkbus_usart_number>
    a18a:	88 23       	and	r24, r24
    a18c:	29 f5       	brne	.+74     	; 0xa1d8 <_Z16linkbus_reset_rxv+0x5a>
    a18e:	80 e8       	ldi	r24, 0x80	; 128
    a190:	98 e0       	ldi	r25, 0x08	; 8
    a192:	fc 01       	movw	r30, r24
    a194:	86 81       	ldd	r24, Z+6	; 0x06
    a196:	88 1f       	adc	r24, r24
    a198:	88 27       	eor	r24, r24
    a19a:	88 1f       	adc	r24, r24
    a19c:	88 23       	and	r24, r24
    a19e:	09 f4       	brne	.+2      	; 0xa1a2 <_Z16linkbus_reset_rxv+0x24>
    a1a0:	3e c0       	rjmp	.+124    	; 0xa21e <_Z16linkbus_reset_rxv+0xa0>
    a1a2:	80 e8       	ldi	r24, 0x80	; 128
    a1a4:	98 e0       	ldi	r25, 0x08	; 8
    a1a6:	20 e8       	ldi	r18, 0x80	; 128
    a1a8:	38 e0       	ldi	r19, 0x08	; 8
    a1aa:	f9 01       	movw	r30, r18
    a1ac:	26 81       	ldd	r18, Z+6	; 0x06
    a1ae:	2f 77       	andi	r18, 0x7F	; 127
    a1b0:	fc 01       	movw	r30, r24
    a1b2:	26 83       	std	Z+6, r18	; 0x06
    a1b4:	44 e8       	ldi	r20, 0x84	; 132
    a1b6:	50 e0       	ldi	r21, 0x00	; 0
    a1b8:	60 e0       	ldi	r22, 0x00	; 0
    a1ba:	70 e0       	ldi	r23, 0x00	; 0
    a1bc:	85 e0       	ldi	r24, 0x05	; 5
    a1be:	99 e4       	ldi	r25, 0x49	; 73
    a1c0:	0e 94 d8 73 	call	0xe7b0	; 0xe7b0 <memset>
    a1c4:	80 e8       	ldi	r24, 0x80	; 128
    a1c6:	98 e0       	ldi	r25, 0x08	; 8
    a1c8:	20 e8       	ldi	r18, 0x80	; 128
    a1ca:	38 e0       	ldi	r19, 0x08	; 8
    a1cc:	f9 01       	movw	r30, r18
    a1ce:	26 81       	ldd	r18, Z+6	; 0x06
    a1d0:	20 68       	ori	r18, 0x80	; 128
    a1d2:	fc 01       	movw	r30, r24
    a1d4:	26 83       	std	Z+6, r18	; 0x06
    a1d6:	23 c0       	rjmp	.+70     	; 0xa21e <_Z16linkbus_reset_rxv+0xa0>
    a1d8:	80 e2       	ldi	r24, 0x20	; 32
    a1da:	98 e0       	ldi	r25, 0x08	; 8
    a1dc:	fc 01       	movw	r30, r24
    a1de:	86 81       	ldd	r24, Z+6	; 0x06
    a1e0:	88 1f       	adc	r24, r24
    a1e2:	88 27       	eor	r24, r24
    a1e4:	88 1f       	adc	r24, r24
    a1e6:	88 23       	and	r24, r24
    a1e8:	d1 f0       	breq	.+52     	; 0xa21e <_Z16linkbus_reset_rxv+0xa0>
    a1ea:	80 e2       	ldi	r24, 0x20	; 32
    a1ec:	98 e0       	ldi	r25, 0x08	; 8
    a1ee:	20 e2       	ldi	r18, 0x20	; 32
    a1f0:	38 e0       	ldi	r19, 0x08	; 8
    a1f2:	f9 01       	movw	r30, r18
    a1f4:	26 81       	ldd	r18, Z+6	; 0x06
    a1f6:	2f 77       	andi	r18, 0x7F	; 127
    a1f8:	fc 01       	movw	r30, r24
    a1fa:	26 83       	std	Z+6, r18	; 0x06
    a1fc:	44 e8       	ldi	r20, 0x84	; 132
    a1fe:	50 e0       	ldi	r21, 0x00	; 0
    a200:	60 e0       	ldi	r22, 0x00	; 0
    a202:	70 e0       	ldi	r23, 0x00	; 0
    a204:	85 e0       	ldi	r24, 0x05	; 5
    a206:	99 e4       	ldi	r25, 0x49	; 73
    a208:	0e 94 d8 73 	call	0xe7b0	; 0xe7b0 <memset>
    a20c:	80 e2       	ldi	r24, 0x20	; 32
    a20e:	98 e0       	ldi	r25, 0x08	; 8
    a210:	20 e2       	ldi	r18, 0x20	; 32
    a212:	38 e0       	ldi	r19, 0x08	; 8
    a214:	f9 01       	movw	r30, r18
    a216:	26 81       	ldd	r18, Z+6	; 0x06
    a218:	20 68       	ori	r18, 0x80	; 128
    a21a:	fc 01       	movw	r30, r24
    a21c:	26 83       	std	Z+6, r18	; 0x06
    a21e:	00 00       	nop
    a220:	df 91       	pop	r29
    a222:	cf 91       	pop	r28
    a224:	08 95       	ret

0000a226 <_ZL21USART1_initializationm>:
    a226:	cf 93       	push	r28
    a228:	df 93       	push	r29
    a22a:	00 d0       	rcall	.+0      	; 0xa22c <_ZL21USART1_initializationm+0x6>
    a22c:	00 d0       	rcall	.+0      	; 0xa22e <_ZL21USART1_initializationm+0x8>
    a22e:	cd b7       	in	r28, 0x3d	; 61
    a230:	de b7       	in	r29, 0x3e	; 62
    a232:	69 83       	std	Y+1, r22	; 0x01
    a234:	7a 83       	std	Y+2, r23	; 0x02
    a236:	8b 83       	std	Y+3, r24	; 0x03
    a238:	9c 83       	std	Y+4, r25	; 0x04
    a23a:	80 e0       	ldi	r24, 0x00	; 0
    a23c:	0e 94 0a 4f 	call	0x9e14	; 0x9e14 <PC1_set_dir>
    a240:	80 e0       	ldi	r24, 0x00	; 0
    a242:	0e 94 fb 4e 	call	0x9df6	; 0x9df6 <PC1_set_pull_mode>
    a246:	81 e0       	ldi	r24, 0x01	; 1
    a248:	0e 94 dd 4e 	call	0x9dba	; 0x9dba <PC0_set_dir>
    a24c:	81 e0       	ldi	r24, 0x01	; 1
    a24e:	0e 94 ec 4e 	call	0x9dd8	; 0x9dd8 <PC0_set_level>
    a252:	89 81       	ldd	r24, Y+1	; 0x01
    a254:	9a 81       	ldd	r25, Y+2	; 0x02
    a256:	ab 81       	ldd	r26, Y+3	; 0x03
    a258:	bc 81       	ldd	r27, Y+4	; 0x04
    a25a:	bc 01       	movw	r22, r24
    a25c:	cd 01       	movw	r24, r26
    a25e:	0e 94 77 6a 	call	0xd4ee	; 0xd4ee <USART1_init>
    a262:	00 00       	nop
    a264:	24 96       	adiw	r28, 0x04	; 4
    a266:	cd bf       	out	0x3d, r28	; 61
    a268:	de bf       	out	0x3e, r29	; 62
    a26a:	df 91       	pop	r29
    a26c:	cf 91       	pop	r28
    a26e:	08 95       	ret

0000a270 <_ZL21USART4_initializationm>:
    a270:	cf 93       	push	r28
    a272:	df 93       	push	r29
    a274:	00 d0       	rcall	.+0      	; 0xa276 <_ZL21USART4_initializationm+0x6>
    a276:	00 d0       	rcall	.+0      	; 0xa278 <_ZL21USART4_initializationm+0x8>
    a278:	cd b7       	in	r28, 0x3d	; 61
    a27a:	de b7       	in	r29, 0x3e	; 62
    a27c:	69 83       	std	Y+1, r22	; 0x01
    a27e:	7a 83       	std	Y+2, r23	; 0x02
    a280:	8b 83       	std	Y+3, r24	; 0x03
    a282:	9c 83       	std	Y+4, r25	; 0x04
    a284:	80 e0       	ldi	r24, 0x00	; 0
    a286:	0e 94 46 4f 	call	0x9e8c	; 0x9e8c <PE1_set_dir>
    a28a:	80 e0       	ldi	r24, 0x00	; 0
    a28c:	0e 94 37 4f 	call	0x9e6e	; 0x9e6e <PE1_set_pull_mode>
    a290:	81 e0       	ldi	r24, 0x01	; 1
    a292:	0e 94 19 4f 	call	0x9e32	; 0x9e32 <PE0_set_dir>
    a296:	81 e0       	ldi	r24, 0x01	; 1
    a298:	0e 94 28 4f 	call	0x9e50	; 0x9e50 <PE0_set_level>
    a29c:	89 81       	ldd	r24, Y+1	; 0x01
    a29e:	9a 81       	ldd	r25, Y+2	; 0x02
    a2a0:	ab 81       	ldd	r26, Y+3	; 0x03
    a2a2:	bc 81       	ldd	r27, Y+4	; 0x04
    a2a4:	bc 01       	movw	r22, r24
    a2a6:	cd 01       	movw	r24, r26
    a2a8:	0e 94 fd 6a 	call	0xd5fa	; 0xd5fa <USART4_init>
    a2ac:	00 00       	nop
    a2ae:	24 96       	adiw	r28, 0x04	; 4
    a2b0:	cd bf       	out	0x3d, r28	; 61
    a2b2:	de bf       	out	0x3e, r29	; 62
    a2b4:	df 91       	pop	r29
    a2b6:	cf 91       	pop	r28
    a2b8:	08 95       	ret

0000a2ba <_Z12linkbus_initm14USART_Number_t>:
    a2ba:	cf 93       	push	r28
    a2bc:	df 93       	push	r29
    a2be:	cd b7       	in	r28, 0x3d	; 61
    a2c0:	de b7       	in	r29, 0x3e	; 62
    a2c2:	27 97       	sbiw	r28, 0x07	; 7
    a2c4:	cd bf       	out	0x3d, r28	; 61
    a2c6:	de bf       	out	0x3e, r29	; 62
    a2c8:	6b 83       	std	Y+3, r22	; 0x03
    a2ca:	7c 83       	std	Y+4, r23	; 0x04
    a2cc:	8d 83       	std	Y+5, r24	; 0x05
    a2ce:	9e 83       	std	Y+6, r25	; 0x06
    a2d0:	4f 83       	std	Y+7, r20	; 0x07
    a2d2:	44 e8       	ldi	r20, 0x84	; 132
    a2d4:	50 e0       	ldi	r21, 0x00	; 0
    a2d6:	60 e0       	ldi	r22, 0x00	; 0
    a2d8:	70 e0       	ldi	r23, 0x00	; 0
    a2da:	85 e0       	ldi	r24, 0x05	; 5
    a2dc:	99 e4       	ldi	r25, 0x49	; 73
    a2de:	0e 94 d8 73 	call	0xe7b0	; 0xe7b0 <memset>
    a2e2:	19 82       	std	Y+1, r1	; 0x01
    a2e4:	1a 82       	std	Y+2, r1	; 0x02
    a2e6:	89 81       	ldd	r24, Y+1	; 0x01
    a2e8:	9a 81       	ldd	r25, Y+2	; 0x02
    a2ea:	04 97       	sbiw	r24, 0x04	; 4
    a2ec:	94 f4       	brge	.+36     	; 0xa312 <_Z12linkbus_initm14USART_Number_t+0x58>
    a2ee:	29 81       	ldd	r18, Y+1	; 0x01
    a2f0:	3a 81       	ldd	r19, Y+2	; 0x02
    a2f2:	42 e3       	ldi	r20, 0x32	; 50
    a2f4:	42 9f       	mul	r20, r18
    a2f6:	c0 01       	movw	r24, r0
    a2f8:	43 9f       	mul	r20, r19
    a2fa:	90 0d       	add	r25, r0
    a2fc:	11 24       	eor	r1, r1
    a2fe:	83 5c       	subi	r24, 0xC3	; 195
    a300:	97 4b       	sbci	r25, 0xB7	; 183
    a302:	fc 01       	movw	r30, r24
    a304:	10 82       	st	Z, r1
    a306:	89 81       	ldd	r24, Y+1	; 0x01
    a308:	9a 81       	ldd	r25, Y+2	; 0x02
    a30a:	01 96       	adiw	r24, 0x01	; 1
    a30c:	89 83       	std	Y+1, r24	; 0x01
    a30e:	9a 83       	std	Y+2, r25	; 0x02
    a310:	ea cf       	rjmp	.-44     	; 0xa2e6 <_Z12linkbus_initm14USART_Number_t+0x2c>
    a312:	8f 81       	ldd	r24, Y+7	; 0x07
    a314:	86 30       	cpi	r24, 0x06	; 6
    a316:	21 f4       	brne	.+8      	; 0xa320 <_Z12linkbus_initm14USART_Number_t+0x66>
    a318:	80 91 22 40 	lds	r24, 0x4022	; 0x804022 <g_linkbus_usart_number>
    a31c:	87 30       	cpi	r24, 0x07	; 7
    a31e:	b9 f4       	brne	.+46     	; 0xa34e <_Z12linkbus_initm14USART_Number_t+0x94>
    a320:	8f 81       	ldd	r24, Y+7	; 0x07
    a322:	88 23       	and	r24, r24
    a324:	49 f4       	brne	.+18     	; 0xa338 <_Z12linkbus_initm14USART_Number_t+0x7e>
    a326:	8b 81       	ldd	r24, Y+3	; 0x03
    a328:	9c 81       	ldd	r25, Y+4	; 0x04
    a32a:	ad 81       	ldd	r26, Y+5	; 0x05
    a32c:	be 81       	ldd	r27, Y+6	; 0x06
    a32e:	bc 01       	movw	r22, r24
    a330:	cd 01       	movw	r24, r26
    a332:	0e 94 38 51 	call	0xa270	; 0xa270 <_ZL21USART4_initializationm>
    a336:	08 c0       	rjmp	.+16     	; 0xa348 <_Z12linkbus_initm14USART_Number_t+0x8e>
    a338:	8b 81       	ldd	r24, Y+3	; 0x03
    a33a:	9c 81       	ldd	r25, Y+4	; 0x04
    a33c:	ad 81       	ldd	r26, Y+5	; 0x05
    a33e:	be 81       	ldd	r27, Y+6	; 0x06
    a340:	bc 01       	movw	r22, r24
    a342:	cd 01       	movw	r24, r26
    a344:	0e 94 13 51 	call	0xa226	; 0xa226 <_ZL21USART1_initializationm>
    a348:	8f 81       	ldd	r24, Y+7	; 0x07
    a34a:	80 93 22 40 	sts	0x4022, r24	; 0x804022 <g_linkbus_usart_number>
    a34e:	10 92 21 40 	sts	0x4021, r1	; 0x804021 <_ZL14g_bus_disabled>
    a352:	00 00       	nop
    a354:	27 96       	adiw	r28, 0x07	; 7
    a356:	cd bf       	out	0x3d, r28	; 61
    a358:	de bf       	out	0x3e, r29	; 62
    a35a:	df 91       	pop	r29
    a35c:	cf 91       	pop	r28
    a35e:	08 95       	ret

0000a360 <_Z15linkbus_disablev>:
    a360:	cf 93       	push	r28
    a362:	df 93       	push	r29
    a364:	1f 92       	push	r1
    a366:	cd b7       	in	r28, 0x3d	; 61
    a368:	de b7       	in	r29, 0x3e	; 62
    a36a:	81 e0       	ldi	r24, 0x01	; 1
    a36c:	80 93 21 40 	sts	0x4021, r24	; 0x804021 <_ZL14g_bus_disabled>
    a370:	80 91 22 40 	lds	r24, 0x4022	; 0x804022 <g_linkbus_usart_number>
    a374:	84 30       	cpi	r24, 0x04	; 4
    a376:	19 f4       	brne	.+6      	; 0xa37e <_Z15linkbus_disablev+0x1e>
    a378:	0e 94 67 6b 	call	0xd6ce	; 0xd6ce <USART4_disable>
    a37c:	02 c0       	rjmp	.+4      	; 0xa382 <_Z15linkbus_disablev+0x22>
    a37e:	0e 94 e1 6a 	call	0xd5c2	; 0xd5c2 <USART1_disable>
    a382:	0e 94 9a 50 	call	0xa134	; 0xa134 <_Z14linkbus_end_txv>
    a386:	44 e8       	ldi	r20, 0x84	; 132
    a388:	50 e0       	ldi	r21, 0x00	; 0
    a38a:	60 e0       	ldi	r22, 0x00	; 0
    a38c:	70 e0       	ldi	r23, 0x00	; 0
    a38e:	85 e0       	ldi	r24, 0x05	; 5
    a390:	99 e4       	ldi	r25, 0x49	; 73
    a392:	0e 94 d8 73 	call	0xe7b0	; 0xe7b0 <memset>
    a396:	19 82       	std	Y+1, r1	; 0x01
    a398:	89 81       	ldd	r24, Y+1	; 0x01
    a39a:	84 30       	cpi	r24, 0x04	; 4
    a39c:	88 f4       	brcc	.+34     	; 0xa3c0 <_Z15linkbus_disablev+0x60>
    a39e:	89 81       	ldd	r24, Y+1	; 0x01
    a3a0:	28 2f       	mov	r18, r24
    a3a2:	30 e0       	ldi	r19, 0x00	; 0
    a3a4:	42 e3       	ldi	r20, 0x32	; 50
    a3a6:	42 9f       	mul	r20, r18
    a3a8:	c0 01       	movw	r24, r0
    a3aa:	43 9f       	mul	r20, r19
    a3ac:	90 0d       	add	r25, r0
    a3ae:	11 24       	eor	r1, r1
    a3b0:	83 5c       	subi	r24, 0xC3	; 195
    a3b2:	97 4b       	sbci	r25, 0xB7	; 183
    a3b4:	fc 01       	movw	r30, r24
    a3b6:	10 82       	st	Z, r1
    a3b8:	89 81       	ldd	r24, Y+1	; 0x01
    a3ba:	8f 5f       	subi	r24, 0xFF	; 255
    a3bc:	89 83       	std	Y+1, r24	; 0x01
    a3be:	ec cf       	rjmp	.-40     	; 0xa398 <_Z15linkbus_disablev+0x38>
    a3c0:	00 00       	nop
    a3c2:	0f 90       	pop	r0
    a3c4:	df 91       	pop	r29
    a3c6:	cf 91       	pop	r28
    a3c8:	08 95       	ret

0000a3ca <_Z12lb_send_textPc>:
    a3ca:	cf 93       	push	r28
    a3cc:	df 93       	push	r29
    a3ce:	cd b7       	in	r28, 0x3d	; 61
    a3d0:	de b7       	in	r29, 0x3e	; 62
    a3d2:	27 97       	sbiw	r28, 0x07	; 7
    a3d4:	cd bf       	out	0x3d, r28	; 61
    a3d6:	de bf       	out	0x3e, r29	; 62
    a3d8:	8e 83       	std	Y+6, r24	; 0x06
    a3da:	9f 83       	std	Y+7, r25	; 0x07
    a3dc:	81 e0       	ldi	r24, 0x01	; 1
    a3de:	89 83       	std	Y+1, r24	; 0x01
    a3e0:	88 ec       	ldi	r24, 0xC8	; 200
    a3e2:	90 e0       	ldi	r25, 0x00	; 0
    a3e4:	8a 83       	std	Y+2, r24	; 0x02
    a3e6:	9b 83       	std	Y+3, r25	; 0x03
    a3e8:	80 91 21 40 	lds	r24, 0x4021	; 0x804021 <_ZL14g_bus_disabled>
    a3ec:	88 23       	and	r24, r24
    a3ee:	11 f0       	breq	.+4      	; 0xa3f4 <_Z12lb_send_textPc+0x2a>
    a3f0:	89 81       	ldd	r24, Y+1	; 0x01
    a3f2:	42 c0       	rjmp	.+132    	; 0xa478 <_Z12lb_send_textPc+0xae>
    a3f4:	8e 81       	ldd	r24, Y+6	; 0x06
    a3f6:	9f 81       	ldd	r25, Y+7	; 0x07
    a3f8:	89 2b       	or	r24, r25
    a3fa:	e9 f1       	breq	.+122    	; 0xa476 <_Z12lb_send_textPc+0xac>
    a3fc:	0e 94 9c 4f 	call	0x9f38	; 0x9f38 <_Z19nextEmptyLBTxBufferv>
    a400:	8c 83       	std	Y+4, r24	; 0x04
    a402:	9d 83       	std	Y+5, r25	; 0x05
    a404:	8c 81       	ldd	r24, Y+4	; 0x04
    a406:	9d 81       	ldd	r25, Y+5	; 0x05
    a408:	89 2b       	or	r24, r25
    a40a:	01 f5       	brne	.+64     	; 0xa44c <_Z12lb_send_textPc+0x82>
    a40c:	8a 81       	ldd	r24, Y+2	; 0x02
    a40e:	9b 81       	ldd	r25, Y+3	; 0x03
    a410:	89 2b       	or	r24, r25
    a412:	e1 f0       	breq	.+56     	; 0xa44c <_Z12lb_send_textPc+0x82>
    a414:	0e 94 73 50 	call	0xa0e6	; 0xa0e6 <_Z19linkbusTxInProgressv>
    a418:	88 23       	and	r24, r24
    a41a:	31 f0       	breq	.+12     	; 0xa428 <_Z12lb_send_textPc+0x5e>
    a41c:	8a 81       	ldd	r24, Y+2	; 0x02
    a41e:	9b 81       	ldd	r25, Y+3	; 0x03
    a420:	89 2b       	or	r24, r25
    a422:	11 f0       	breq	.+4      	; 0xa428 <_Z12lb_send_textPc+0x5e>
    a424:	81 e0       	ldi	r24, 0x01	; 1
    a426:	01 c0       	rjmp	.+2      	; 0xa42a <_Z12lb_send_textPc+0x60>
    a428:	80 e0       	ldi	r24, 0x00	; 0
    a42a:	88 23       	and	r24, r24
    a42c:	51 f0       	breq	.+20     	; 0xa442 <_Z12lb_send_textPc+0x78>
    a42e:	8a 81       	ldd	r24, Y+2	; 0x02
    a430:	9b 81       	ldd	r25, Y+3	; 0x03
    a432:	89 2b       	or	r24, r25
    a434:	79 f3       	breq	.-34     	; 0xa414 <_Z12lb_send_textPc+0x4a>
    a436:	8a 81       	ldd	r24, Y+2	; 0x02
    a438:	9b 81       	ldd	r25, Y+3	; 0x03
    a43a:	01 97       	sbiw	r24, 0x01	; 1
    a43c:	8a 83       	std	Y+2, r24	; 0x02
    a43e:	9b 83       	std	Y+3, r25	; 0x03
    a440:	e9 cf       	rjmp	.-46     	; 0xa414 <_Z12lb_send_textPc+0x4a>
    a442:	0e 94 9c 4f 	call	0x9f38	; 0x9f38 <_Z19nextEmptyLBTxBufferv>
    a446:	8c 83       	std	Y+4, r24	; 0x04
    a448:	9d 83       	std	Y+5, r25	; 0x05
    a44a:	dc cf       	rjmp	.-72     	; 0xa404 <_Z12lb_send_textPc+0x3a>
    a44c:	8c 81       	ldd	r24, Y+4	; 0x04
    a44e:	9d 81       	ldd	r25, Y+5	; 0x05
    a450:	89 2b       	or	r24, r25
    a452:	89 f0       	breq	.+34     	; 0xa476 <_Z12lb_send_textPc+0xac>
    a454:	8f 81       	ldd	r24, Y+7	; 0x07
    a456:	8f 93       	push	r24
    a458:	8e 81       	ldd	r24, Y+6	; 0x06
    a45a:	8f 93       	push	r24
    a45c:	8d 81       	ldd	r24, Y+5	; 0x05
    a45e:	8f 93       	push	r24
    a460:	8c 81       	ldd	r24, Y+4	; 0x04
    a462:	8f 93       	push	r24
    a464:	0e 94 31 74 	call	0xe862	; 0xe862 <sprintf>
    a468:	0f 90       	pop	r0
    a46a:	0f 90       	pop	r0
    a46c:	0f 90       	pop	r0
    a46e:	0f 90       	pop	r0
    a470:	0e 94 7c 50 	call	0xa0f8	; 0xa0f8 <_ZL16linkbus_start_txv>
    a474:	19 82       	std	Y+1, r1	; 0x01
    a476:	89 81       	ldd	r24, Y+1	; 0x01
    a478:	27 96       	adiw	r28, 0x07	; 7
    a47a:	cd bf       	out	0x3d, r28	; 61
    a47c:	de bf       	out	0x3e, r29	; 62
    a47e:	df 91       	pop	r29
    a480:	cf 91       	pop	r28
    a482:	08 95       	ret

0000a484 <_Z11lb_send_msg13LBMessageTypePKcPc>:
    a484:	cf 93       	push	r28
    a486:	df 93       	push	r29
    a488:	cd b7       	in	r28, 0x3d	; 61
    a48a:	de b7       	in	r29, 0x3e	; 62
    a48c:	27 97       	sbiw	r28, 0x07	; 7
    a48e:	cd bf       	out	0x3d, r28	; 61
    a490:	de bf       	out	0x3e, r29	; 62
    a492:	8b 83       	std	Y+3, r24	; 0x03
    a494:	6c 83       	std	Y+4, r22	; 0x04
    a496:	7d 83       	std	Y+5, r23	; 0x05
    a498:	4e 83       	std	Y+6, r20	; 0x06
    a49a:	5f 83       	std	Y+7, r21	; 0x07
    a49c:	84 e2       	ldi	r24, 0x24	; 36
    a49e:	89 83       	std	Y+1, r24	; 0x01
    a4a0:	8b e3       	ldi	r24, 0x3B	; 59
    a4a2:	8a 83       	std	Y+2, r24	; 0x02
    a4a4:	8b 81       	ldd	r24, Y+3	; 0x03
    a4a6:	83 30       	cpi	r24, 0x03	; 3
    a4a8:	19 f4       	brne	.+6      	; 0xa4b0 <_Z11lb_send_msg13LBMessageTypePKcPc+0x2c>
    a4aa:	81 e2       	ldi	r24, 0x21	; 33
    a4ac:	89 83       	std	Y+1, r24	; 0x01
    a4ae:	05 c0       	rjmp	.+10     	; 0xa4ba <_Z11lb_send_msg13LBMessageTypePKcPc+0x36>
    a4b0:	8b 81       	ldd	r24, Y+3	; 0x03
    a4b2:	82 30       	cpi	r24, 0x02	; 2
    a4b4:	11 f4       	brne	.+4      	; 0xa4ba <_Z11lb_send_msg13LBMessageTypePKcPc+0x36>
    a4b6:	8f e3       	ldi	r24, 0x3F	; 63
    a4b8:	8a 83       	std	Y+2, r24	; 0x02
    a4ba:	8a 81       	ldd	r24, Y+2	; 0x02
    a4bc:	28 2f       	mov	r18, r24
    a4be:	30 e0       	ldi	r19, 0x00	; 0
    a4c0:	89 81       	ldd	r24, Y+1	; 0x01
    a4c2:	88 2f       	mov	r24, r24
    a4c4:	90 e0       	ldi	r25, 0x00	; 0
    a4c6:	43 2f       	mov	r20, r19
    a4c8:	4f 93       	push	r20
    a4ca:	2f 93       	push	r18
    a4cc:	2f 81       	ldd	r18, Y+7	; 0x07
    a4ce:	2f 93       	push	r18
    a4d0:	2e 81       	ldd	r18, Y+6	; 0x06
    a4d2:	2f 93       	push	r18
    a4d4:	2d 81       	ldd	r18, Y+5	; 0x05
    a4d6:	2f 93       	push	r18
    a4d8:	2c 81       	ldd	r18, Y+4	; 0x04
    a4da:	2f 93       	push	r18
    a4dc:	29 2f       	mov	r18, r25
    a4de:	2f 93       	push	r18
    a4e0:	8f 93       	push	r24
    a4e2:	8d ee       	ldi	r24, 0xED	; 237
    a4e4:	94 e4       	ldi	r25, 0x44	; 68
    a4e6:	89 2f       	mov	r24, r25
    a4e8:	8f 93       	push	r24
    a4ea:	8d ee       	ldi	r24, 0xED	; 237
    a4ec:	94 e4       	ldi	r25, 0x44	; 68
    a4ee:	8f 93       	push	r24
    a4f0:	8a e0       	ldi	r24, 0x0A	; 10
    a4f2:	98 e4       	ldi	r25, 0x48	; 72
    a4f4:	89 2f       	mov	r24, r25
    a4f6:	8f 93       	push	r24
    a4f8:	8a e0       	ldi	r24, 0x0A	; 10
    a4fa:	98 e4       	ldi	r25, 0x48	; 72
    a4fc:	8f 93       	push	r24
    a4fe:	0e 94 31 74 	call	0xe862	; 0xe862 <sprintf>
    a502:	8d b7       	in	r24, 0x3d	; 61
    a504:	9e b7       	in	r25, 0x3e	; 62
    a506:	0c 96       	adiw	r24, 0x0c	; 12
    a508:	cd bf       	out	0x3d, r28	; 61
    a50a:	de bf       	out	0x3e, r29	; 62
    a50c:	8a e0       	ldi	r24, 0x0A	; 10
    a50e:	98 e4       	ldi	r25, 0x48	; 72
    a510:	0e 94 e5 51 	call	0xa3ca	; 0xa3ca <_Z12lb_send_textPc>
    a514:	00 00       	nop
    a516:	27 96       	adiw	r28, 0x07	; 7
    a518:	cd bf       	out	0x3d, r28	; 61
    a51a:	de bf       	out	0x3e, r29	; 62
    a51c:	df 91       	pop	r29
    a51e:	cf 91       	pop	r28
    a520:	08 95       	ret

0000a522 <_Z16lb_broadcast_numjPKc>:


void lb_broadcast_num(uint16_t data, const char* str)
{
    a522:	cf 93       	push	r28
    a524:	df 93       	push	r29
    a526:	cd b7       	in	r28, 0x3d	; 61
    a528:	de b7       	in	r29, 0x3e	; 62
    a52a:	2a 97       	sbiw	r28, 0x0a	; 10
    a52c:	cd bf       	out	0x3d, r28	; 61
    a52e:	de bf       	out	0x3e, r29	; 62
    a530:	8f 83       	std	Y+7, r24	; 0x07
    a532:	98 87       	std	Y+8, r25	; 0x08
    a534:	69 87       	std	Y+9, r22	; 0x09
    a536:	7a 87       	std	Y+10, r23	; 0x0a
	char t[6] = "\0";
    a538:	80 91 07 45 	lds	r24, 0x4507	; 0x804507 <g_80m_power_table+0x4d1>
    a53c:	90 91 08 45 	lds	r25, 0x4508	; 0x804508 <g_80m_power_table+0x4d2>
    a540:	89 83       	std	Y+1, r24	; 0x01
    a542:	9a 83       	std	Y+2, r25	; 0x02
    a544:	24 e0       	ldi	r18, 0x04	; 4
    a546:	ce 01       	movw	r24, r28
    a548:	03 96       	adiw	r24, 0x03	; 3
    a54a:	fc 01       	movw	r30, r24
    a54c:	32 2f       	mov	r19, r18
    a54e:	11 92       	st	Z+, r1
    a550:	3a 95       	dec	r19
    a552:	e9 f7       	brne	.-6      	; 0xa54e <_Z16lb_broadcast_numjPKc+0x2c>

	sprintf(t, "%u", data);
    a554:	88 85       	ldd	r24, Y+8	; 0x08
    a556:	8f 93       	push	r24
    a558:	8f 81       	ldd	r24, Y+7	; 0x07
    a55a:	8f 93       	push	r24
    a55c:	8d ef       	ldi	r24, 0xFD	; 253
    a55e:	94 e4       	ldi	r25, 0x44	; 68
    a560:	89 2f       	mov	r24, r25
    a562:	8f 93       	push	r24
    a564:	8d ef       	ldi	r24, 0xFD	; 253
    a566:	94 e4       	ldi	r25, 0x44	; 68
    a568:	8f 93       	push	r24
    a56a:	ce 01       	movw	r24, r28
    a56c:	01 96       	adiw	r24, 0x01	; 1
    a56e:	9f 93       	push	r25
    a570:	8f 93       	push	r24
    a572:	0e 94 31 74 	call	0xe862	; 0xe862 <sprintf>
    a576:	0f 90       	pop	r0
    a578:	0f 90       	pop	r0
    a57a:	0f 90       	pop	r0
    a57c:	0f 90       	pop	r0
    a57e:	0f 90       	pop	r0
    a580:	0f 90       	pop	r0
	g_tempMsgBuff[0] = '\0';
    a582:	10 92 0a 48 	sts	0x480A, r1	; 0x80480a <_ZL13g_tempMsgBuff>

	if(str)
    a586:	89 85       	ldd	r24, Y+9	; 0x09
    a588:	9a 85       	ldd	r25, Y+10	; 0x0a
    a58a:	89 2b       	or	r24, r25
    a58c:	e9 f0       	breq	.+58     	; 0xa5c8 <_Z16lb_broadcast_numjPKc+0xa6>
	{
		sprintf(g_tempMsgBuff, "%s,%s;", str, t);
    a58e:	ce 01       	movw	r24, r28
    a590:	01 96       	adiw	r24, 0x01	; 1
    a592:	9f 93       	push	r25
    a594:	8f 93       	push	r24
    a596:	8a 85       	ldd	r24, Y+10	; 0x0a
    a598:	8f 93       	push	r24
    a59a:	89 85       	ldd	r24, Y+9	; 0x09
    a59c:	8f 93       	push	r24
    a59e:	80 e0       	ldi	r24, 0x00	; 0
    a5a0:	95 e4       	ldi	r25, 0x45	; 69
    a5a2:	89 2f       	mov	r24, r25
    a5a4:	8f 93       	push	r24
    a5a6:	80 e0       	ldi	r24, 0x00	; 0
    a5a8:	95 e4       	ldi	r25, 0x45	; 69
    a5aa:	8f 93       	push	r24
    a5ac:	8a e0       	ldi	r24, 0x0A	; 10
    a5ae:	98 e4       	ldi	r25, 0x48	; 72
    a5b0:	89 2f       	mov	r24, r25
    a5b2:	8f 93       	push	r24
    a5b4:	8a e0       	ldi	r24, 0x0A	; 10
    a5b6:	98 e4       	ldi	r25, 0x48	; 72
    a5b8:	8f 93       	push	r24
    a5ba:	0e 94 31 74 	call	0xe862	; 0xe862 <sprintf>
    a5be:	8d b7       	in	r24, 0x3d	; 61
    a5c0:	9e b7       	in	r25, 0x3e	; 62
    a5c2:	08 96       	adiw	r24, 0x08	; 8
    a5c4:	cd bf       	out	0x3d, r28	; 61
    a5c6:	de bf       	out	0x3e, r29	; 62
	}

	if(g_tempMsgBuff[0]) lb_send_text(g_tempMsgBuff);
    a5c8:	80 91 0a 48 	lds	r24, 0x480A	; 0x80480a <_ZL13g_tempMsgBuff>
    a5cc:	88 23       	and	r24, r24
    a5ce:	21 f0       	breq	.+8      	; 0xa5d8 <_Z16lb_broadcast_numjPKc+0xb6>
    a5d0:	8a e0       	ldi	r24, 0x0A	; 10
    a5d2:	98 e4       	ldi	r25, 0x48	; 72
    a5d4:	0e 94 e5 51 	call	0xa3ca	; 0xa3ca <_Z12lb_send_textPc>
}
    a5d8:	00 00       	nop
    a5da:	2a 96       	adiw	r28, 0x0a	; 10
    a5dc:	cd bf       	out	0x3d, r28	; 61
    a5de:	de bf       	out	0x3e, r29	; 62
    a5e0:	df 91       	pop	r29
    a5e2:	cf 91       	pop	r28
    a5e4:	08 95       	ret

0000a5e6 <_Z9makeMorsePcPbS0_>:
 *  Call this function with a NULL argument at intervals of 1 element of time to generate Morse code.
 *  Once loaded with a string each call to this function returns a bool indicating whether a CW carrier should be sent
 *  Pass in a pointer to a bool in the second and third arguments:
 */
bool makeMorse(char* s, bool* repeating, bool* finished)
{
    a5e6:	cf 93       	push	r28
    a5e8:	df 93       	push	r29
    a5ea:	cd b7       	in	r28, 0x3d	; 61
    a5ec:	de b7       	in	r29, 0x3e	; 62
    a5ee:	28 97       	sbiw	r28, 0x08	; 8
    a5f0:	cd bf       	out	0x3d, r28	; 61
    a5f2:	de bf       	out	0x3e, r29	; 62
    a5f4:	8b 83       	std	Y+3, r24	; 0x03
    a5f6:	9c 83       	std	Y+4, r25	; 0x04
    a5f8:	6d 83       	std	Y+5, r22	; 0x05
    a5fa:	7e 83       	std	Y+6, r23	; 0x06
    a5fc:	4f 83       	std	Y+7, r20	; 0x07
    a5fe:	58 87       	std	Y+8, r21	; 0x08
	static uint8_t addedSpace;      /* adds additional time to make an inter-character space */
	static bool completedString = false;
	static bool carrierOn = false;
	static bool holdKeyDown = false;

	if(s)   /* load a new NULL-terminated string to send */
    a600:	8b 81       	ldd	r24, Y+3	; 0x03
    a602:	9c 81       	ldd	r25, Y+4	; 0x04
    a604:	89 2b       	or	r24, r25
    a606:	09 f4       	brne	.+2      	; 0xa60a <_Z9makeMorsePcPbS0_+0x24>
    a608:	4a c0       	rjmp	.+148    	; 0xa69e <_Z9makeMorsePcPbS0_+0xb8>
	{
		holdKeyDown = false;
    a60a:	10 92 8d 49 	sts	0x498D, r1	; 0x80498d <_ZZ9makeMorsePcPbS0_E11holdKeyDown>

		if(repeating)
    a60e:	8d 81       	ldd	r24, Y+5	; 0x05
    a610:	9e 81       	ldd	r25, Y+6	; 0x06
    a612:	89 2b       	or	r24, r25
    a614:	31 f0       	breq	.+12     	; 0xa622 <_Z9makeMorsePcPbS0_+0x3c>
		{
			repeat = *repeating;
    a616:	8d 81       	ldd	r24, Y+5	; 0x05
    a618:	9e 81       	ldd	r25, Y+6	; 0x06
    a61a:	fc 01       	movw	r30, r24
    a61c:	80 81       	ld	r24, Z
    a61e:	80 93 23 40 	sts	0x4023, r24	; 0x804023 <_ZZ9makeMorsePcPbS0_E6repeat>
		}

		if(*s)
    a622:	8b 81       	ldd	r24, Y+3	; 0x03
    a624:	9c 81       	ldd	r25, Y+4	; 0x04
    a626:	fc 01       	movw	r30, r24
    a628:	80 81       	ld	r24, Z
    a62a:	88 23       	and	r24, r24
    a62c:	21 f1       	breq	.+72     	; 0xa676 <_Z9makeMorsePcPbS0_+0x90>
		{
			str = s;
    a62e:	8b 81       	ldd	r24, Y+3	; 0x03
    a630:	9c 81       	ldd	r25, Y+4	; 0x04
    a632:	80 93 8e 49 	sts	0x498E, r24	; 0x80498e <_ZZ9makeMorsePcPbS0_E3str>
    a636:	90 93 8f 49 	sts	0x498F, r25	; 0x80498f <_ZZ9makeMorsePcPbS0_E3str+0x1>
			c = ' ';
    a63a:	80 e2       	ldi	r24, 0x20	; 32
    a63c:	80 93 24 40 	sts	0x4024, r24	; 0x804024 <_ZZ9makeMorsePcPbS0_E1c>
			morseInProgress = getMorseChar(*str);
    a640:	80 91 8e 49 	lds	r24, 0x498E	; 0x80498e <_ZZ9makeMorsePcPbS0_E3str>
    a644:	90 91 8f 49 	lds	r25, 0x498F	; 0x80498f <_ZZ9makeMorsePcPbS0_E3str+0x1>
    a648:	fc 01       	movw	r30, r24
    a64a:	80 81       	ld	r24, Z
    a64c:	0e 94 9b 54 	call	0xa936	; 0xa936 <_Z12getMorseCharc>
    a650:	a8 2f       	mov	r26, r24
    a652:	cb 01       	movw	r24, r22
    a654:	80 93 90 49 	sts	0x4990, r24	; 0x804990 <_ZZ9makeMorsePcPbS0_E15morseInProgress>
    a658:	90 93 91 49 	sts	0x4991, r25	; 0x804991 <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x1>
    a65c:	a0 93 92 49 	sts	0x4992, r26	; 0x804992 <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x2>
			charIndex = 0;
    a660:	10 92 93 49 	sts	0x4993, r1	; 0x804993 <_ZZ9makeMorsePcPbS0_E9charIndex>
			symbolIndex = 0;
    a664:	10 92 94 49 	sts	0x4994, r1	; 0x804994 <_ZZ9makeMorsePcPbS0_E11symbolIndex>
			elementIndex = 0;
    a668:	10 92 95 49 	sts	0x4995, r1	; 0x804995 <_ZZ9makeMorsePcPbS0_E12elementIndex>
			addedSpace = 0;
    a66c:	10 92 96 49 	sts	0x4996, r1	; 0x804996 <_ZZ9makeMorsePcPbS0_E10addedSpace>
			completedString = false;
    a670:	10 92 97 49 	sts	0x4997, r1	; 0x804997 <_ZZ9makeMorsePcPbS0_E15completedString>
    a674:	10 c0       	rjmp	.+32     	; 0xa696 <_Z9makeMorsePcPbS0_+0xb0>
		}
		else    /* a zero-length string shuts down makeMorse */
		{
			str = NULL;
    a676:	10 92 8e 49 	sts	0x498E, r1	; 0x80498e <_ZZ9makeMorsePcPbS0_E3str>
    a67a:	10 92 8f 49 	sts	0x498F, r1	; 0x80498f <_ZZ9makeMorsePcPbS0_E3str+0x1>
			completedString = true;
    a67e:	81 e0       	ldi	r24, 0x01	; 1
    a680:	80 93 97 49 	sts	0x4997, r24	; 0x804997 <_ZZ9makeMorsePcPbS0_E15completedString>
			if(finished)
    a684:	8f 81       	ldd	r24, Y+7	; 0x07
    a686:	98 85       	ldd	r25, Y+8	; 0x08
    a688:	89 2b       	or	r24, r25
    a68a:	29 f0       	breq	.+10     	; 0xa696 <_Z9makeMorsePcPbS0_+0xb0>
			{
				*finished = true;
    a68c:	8f 81       	ldd	r24, Y+7	; 0x07
    a68e:	98 85       	ldd	r25, Y+8	; 0x08
    a690:	21 e0       	ldi	r18, 0x01	; 1
    a692:	fc 01       	movw	r30, r24
    a694:	20 83       	st	Z, r18
			}
		}

		carrierOn = OFF;
    a696:	10 92 98 49 	sts	0x4998, r1	; 0x804998 <_ZZ9makeMorsePcPbS0_E9carrierOn>
		return( OFF);
    a69a:	80 e0       	ldi	r24, 0x00	; 0
    a69c:	f6 c0       	rjmp	.+492    	; 0xa88a <_Z9makeMorsePcPbS0_+0x2a4>
	}
	else if(str)
    a69e:	80 91 8e 49 	lds	r24, 0x498E	; 0x80498e <_ZZ9makeMorsePcPbS0_E3str>
    a6a2:	90 91 8f 49 	lds	r25, 0x498F	; 0x80498f <_ZZ9makeMorsePcPbS0_E3str+0x1>
    a6a6:	89 2b       	or	r24, r25
    a6a8:	09 f4       	brne	.+2      	; 0xa6ac <_Z9makeMorsePcPbS0_+0xc6>
    a6aa:	dd c0       	rjmp	.+442    	; 0xa866 <_Z9makeMorsePcPbS0_+0x280>
	{
		if(repeating)
    a6ac:	8d 81       	ldd	r24, Y+5	; 0x05
    a6ae:	9e 81       	ldd	r25, Y+6	; 0x06
    a6b0:	89 2b       	or	r24, r25
    a6b2:	31 f0       	breq	.+12     	; 0xa6c0 <_Z9makeMorsePcPbS0_+0xda>
		{
			*repeating = repeat;
    a6b4:	20 91 23 40 	lds	r18, 0x4023	; 0x804023 <_ZZ9makeMorsePcPbS0_E6repeat>
    a6b8:	8d 81       	ldd	r24, Y+5	; 0x05
    a6ba:	9e 81       	ldd	r25, Y+6	; 0x06
    a6bc:	fc 01       	movw	r30, r24
    a6be:	20 83       	st	Z, r18
		}

		if(completedString)
    a6c0:	80 91 97 49 	lds	r24, 0x4997	; 0x804997 <_ZZ9makeMorsePcPbS0_E15completedString>
    a6c4:	88 23       	and	r24, r24
    a6c6:	69 f0       	breq	.+26     	; 0xa6e2 <_Z9makeMorsePcPbS0_+0xfc>
		{
			if(finished)
    a6c8:	8f 81       	ldd	r24, Y+7	; 0x07
    a6ca:	98 85       	ldd	r25, Y+8	; 0x08
    a6cc:	89 2b       	or	r24, r25
    a6ce:	39 f0       	breq	.+14     	; 0xa6de <_Z9makeMorsePcPbS0_+0xf8>
			{
				*finished = true;
    a6d0:	8f 81       	ldd	r24, Y+7	; 0x07
    a6d2:	98 85       	ldd	r25, Y+8	; 0x08
    a6d4:	21 e0       	ldi	r18, 0x01	; 1
    a6d6:	fc 01       	movw	r30, r24
    a6d8:	20 83       	st	Z, r18
				holdKeyDown = false;
    a6da:	10 92 8d 49 	sts	0x498D, r1	; 0x80498d <_ZZ9makeMorsePcPbS0_E11holdKeyDown>
			}
			return( OFF);
    a6de:	80 e0       	ldi	r24, 0x00	; 0
    a6e0:	d4 c0       	rjmp	.+424    	; 0xa88a <_Z9makeMorsePcPbS0_+0x2a4>
		}

		if(elementIndex)
    a6e2:	80 91 95 49 	lds	r24, 0x4995	; 0x804995 <_ZZ9makeMorsePcPbS0_E12elementIndex>
    a6e6:	88 23       	and	r24, r24
    a6e8:	31 f0       	breq	.+12     	; 0xa6f6 <_Z9makeMorsePcPbS0_+0x110>
		{
			elementIndex--;
    a6ea:	80 91 95 49 	lds	r24, 0x4995	; 0x804995 <_ZZ9makeMorsePcPbS0_E12elementIndex>
    a6ee:	81 50       	subi	r24, 0x01	; 1
    a6f0:	80 93 95 49 	sts	0x4995, r24	; 0x804995 <_ZZ9makeMorsePcPbS0_E12elementIndex>
    a6f4:	ae c0       	rjmp	.+348    	; 0xa852 <_Z9makeMorsePcPbS0_+0x26c>
		}
		else if(carrierOn && !holdKeyDown)  /* carrier is on, so turn it off and wait appropriate amount of space */
    a6f6:	80 91 98 49 	lds	r24, 0x4998	; 0x804998 <_ZZ9makeMorsePcPbS0_E9carrierOn>
    a6fa:	88 23       	and	r24, r24
    a6fc:	a1 f0       	breq	.+40     	; 0xa726 <_Z9makeMorsePcPbS0_+0x140>
    a6fe:	90 91 8d 49 	lds	r25, 0x498D	; 0x80498d <_ZZ9makeMorsePcPbS0_E11holdKeyDown>
    a702:	81 e0       	ldi	r24, 0x01	; 1
    a704:	89 27       	eor	r24, r25
    a706:	88 23       	and	r24, r24
    a708:	71 f0       	breq	.+28     	; 0xa726 <_Z9makeMorsePcPbS0_+0x140>
		{
			carrierOn = false;
    a70a:	10 92 98 49 	sts	0x4998, r1	; 0x804998 <_ZZ9makeMorsePcPbS0_E9carrierOn>
			/* wait one element = inter-symbol space */
			if(addedSpace)
    a70e:	80 91 96 49 	lds	r24, 0x4996	; 0x804996 <_ZZ9makeMorsePcPbS0_E10addedSpace>
    a712:	88 23       	and	r24, r24
    a714:	09 f4       	brne	.+2      	; 0xa718 <_Z9makeMorsePcPbS0_+0x132>
    a716:	9d c0       	rjmp	.+314    	; 0xa852 <_Z9makeMorsePcPbS0_+0x26c>
			{
				elementIndex = addedSpace;
    a718:	80 91 96 49 	lds	r24, 0x4996	; 0x804996 <_ZZ9makeMorsePcPbS0_E10addedSpace>
    a71c:	80 93 95 49 	sts	0x4995, r24	; 0x804995 <_ZZ9makeMorsePcPbS0_E12elementIndex>
				addedSpace = 0;
    a720:	10 92 96 49 	sts	0x4996, r1	; 0x804996 <_ZZ9makeMorsePcPbS0_E10addedSpace>
		}
		else if(carrierOn && !holdKeyDown)  /* carrier is on, so turn it off and wait appropriate amount of space */
		{
			carrierOn = false;
			/* wait one element = inter-symbol space */
			if(addedSpace)
    a724:	96 c0       	rjmp	.+300    	; 0xa852 <_Z9makeMorsePcPbS0_+0x26c>
			}
			/* wait inter-character space */
		}
		else    /* carrier is off, so turn it on and get next symbol */
		{
			if(symbolIndex >= morseInProgress.lengthInSymbols)
    a726:	90 91 91 49 	lds	r25, 0x4991	; 0x804991 <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x1>
    a72a:	80 91 94 49 	lds	r24, 0x4994	; 0x804994 <_ZZ9makeMorsePcPbS0_E11symbolIndex>
    a72e:	89 17       	cp	r24, r25
    a730:	08 f4       	brcc	.+2      	; 0xa734 <_Z9makeMorsePcPbS0_+0x14e>
    a732:	4a c0       	rjmp	.+148    	; 0xa7c8 <_Z9makeMorsePcPbS0_+0x1e2>
			{
				c = (*(str + ++charIndex));
    a734:	20 91 8e 49 	lds	r18, 0x498E	; 0x80498e <_ZZ9makeMorsePcPbS0_E3str>
    a738:	30 91 8f 49 	lds	r19, 0x498F	; 0x80498f <_ZZ9makeMorsePcPbS0_E3str+0x1>
    a73c:	80 91 93 49 	lds	r24, 0x4993	; 0x804993 <_ZZ9makeMorsePcPbS0_E9charIndex>
    a740:	8f 5f       	subi	r24, 0xFF	; 255
    a742:	80 93 93 49 	sts	0x4993, r24	; 0x804993 <_ZZ9makeMorsePcPbS0_E9charIndex>
    a746:	80 91 93 49 	lds	r24, 0x4993	; 0x804993 <_ZZ9makeMorsePcPbS0_E9charIndex>
    a74a:	88 2f       	mov	r24, r24
    a74c:	90 e0       	ldi	r25, 0x00	; 0
    a74e:	82 0f       	add	r24, r18
    a750:	93 1f       	adc	r25, r19
    a752:	fc 01       	movw	r30, r24
    a754:	80 81       	ld	r24, Z
    a756:	80 93 24 40 	sts	0x4024, r24	; 0x804024 <_ZZ9makeMorsePcPbS0_E1c>

				if(!c)  /* wrap to beginning of text */
    a75a:	80 91 24 40 	lds	r24, 0x4024	; 0x804024 <_ZZ9makeMorsePcPbS0_E1c>
    a75e:	88 23       	and	r24, r24
    a760:	29 f5       	brne	.+74     	; 0xa7ac <_Z9makeMorsePcPbS0_+0x1c6>
				{
					if(repeat)
    a762:	80 91 23 40 	lds	r24, 0x4023	; 0x804023 <_ZZ9makeMorsePcPbS0_E6repeat>
    a766:	88 23       	and	r24, r24
    a768:	59 f0       	breq	.+22     	; 0xa780 <_Z9makeMorsePcPbS0_+0x19a>
					{
						c = *str;
    a76a:	80 91 8e 49 	lds	r24, 0x498E	; 0x80498e <_ZZ9makeMorsePcPbS0_E3str>
    a76e:	90 91 8f 49 	lds	r25, 0x498F	; 0x80498f <_ZZ9makeMorsePcPbS0_E3str+0x1>
    a772:	fc 01       	movw	r30, r24
    a774:	80 81       	ld	r24, Z
    a776:	80 93 24 40 	sts	0x4024, r24	; 0x804024 <_ZZ9makeMorsePcPbS0_E1c>
						charIndex = 0;
    a77a:	10 92 93 49 	sts	0x4993, r1	; 0x804993 <_ZZ9makeMorsePcPbS0_E9charIndex>
    a77e:	16 c0       	rjmp	.+44     	; 0xa7ac <_Z9makeMorsePcPbS0_+0x1c6>
					}
					else
					{
						str = NULL;
    a780:	10 92 8e 49 	sts	0x498E, r1	; 0x80498e <_ZZ9makeMorsePcPbS0_E3str>
    a784:	10 92 8f 49 	sts	0x498F, r1	; 0x80498f <_ZZ9makeMorsePcPbS0_E3str+0x1>
						carrierOn = OFF;
    a788:	10 92 98 49 	sts	0x4998, r1	; 0x804998 <_ZZ9makeMorsePcPbS0_E9carrierOn>
						completedString = true;
    a78c:	81 e0       	ldi	r24, 0x01	; 1
    a78e:	80 93 97 49 	sts	0x4997, r24	; 0x804997 <_ZZ9makeMorsePcPbS0_E15completedString>
						if(finished)
    a792:	8f 81       	ldd	r24, Y+7	; 0x07
    a794:	98 85       	ldd	r25, Y+8	; 0x08
    a796:	89 2b       	or	r24, r25
    a798:	29 f0       	breq	.+10     	; 0xa7a4 <_Z9makeMorsePcPbS0_+0x1be>
						{
							*finished = true;
    a79a:	8f 81       	ldd	r24, Y+7	; 0x07
    a79c:	98 85       	ldd	r25, Y+8	; 0x08
    a79e:	21 e0       	ldi	r18, 0x01	; 1
    a7a0:	fc 01       	movw	r30, r24
    a7a2:	20 83       	st	Z, r18
						}
						holdKeyDown = false;
    a7a4:	10 92 8d 49 	sts	0x498D, r1	; 0x80498d <_ZZ9makeMorsePcPbS0_E11holdKeyDown>
						return( OFF );
    a7a8:	80 e0       	ldi	r24, 0x00	; 0
    a7aa:	6f c0       	rjmp	.+222    	; 0xa88a <_Z9makeMorsePcPbS0_+0x2a4>
					}
				}

				morseInProgress = getMorseChar(c);
    a7ac:	80 91 24 40 	lds	r24, 0x4024	; 0x804024 <_ZZ9makeMorsePcPbS0_E1c>
    a7b0:	0e 94 9b 54 	call	0xa936	; 0xa936 <_Z12getMorseCharc>
    a7b4:	a8 2f       	mov	r26, r24
    a7b6:	cb 01       	movw	r24, r22
    a7b8:	80 93 90 49 	sts	0x4990, r24	; 0x804990 <_ZZ9makeMorsePcPbS0_E15morseInProgress>
    a7bc:	90 93 91 49 	sts	0x4991, r25	; 0x804991 <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x1>
    a7c0:	a0 93 92 49 	sts	0x4992, r26	; 0x804992 <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x2>
				symbolIndex = 0;
    a7c4:	10 92 94 49 	sts	0x4994, r1	; 0x804994 <_ZZ9makeMorsePcPbS0_E11symbolIndex>
			}

			if(morseInProgress.pattern < INTER_WORD_SPACE)
    a7c8:	80 91 90 49 	lds	r24, 0x4990	; 0x804990 <_ZZ9makeMorsePcPbS0_E15morseInProgress>
    a7cc:	8d 3f       	cpi	r24, 0xFD	; 253
    a7ce:	70 f5       	brcc	.+92     	; 0xa82c <_Z9makeMorsePcPbS0_+0x246>
			{
				bool isDah = morseInProgress.pattern & (1 << symbolIndex++);
    a7d0:	80 91 90 49 	lds	r24, 0x4990	; 0x804990 <_ZZ9makeMorsePcPbS0_E15morseInProgress>
    a7d4:	88 2f       	mov	r24, r24
    a7d6:	90 e0       	ldi	r25, 0x00	; 0
    a7d8:	20 91 94 49 	lds	r18, 0x4994	; 0x804994 <_ZZ9makeMorsePcPbS0_E11symbolIndex>
    a7dc:	31 e0       	ldi	r19, 0x01	; 1
    a7de:	32 0f       	add	r19, r18
    a7e0:	30 93 94 49 	sts	0x4994, r19	; 0x804994 <_ZZ9makeMorsePcPbS0_E11symbolIndex>
    a7e4:	22 2f       	mov	r18, r18
    a7e6:	30 e0       	ldi	r19, 0x00	; 0
    a7e8:	02 c0       	rjmp	.+4      	; 0xa7ee <_Z9makeMorsePcPbS0_+0x208>
    a7ea:	95 95       	asr	r25
    a7ec:	87 95       	ror	r24
    a7ee:	2a 95       	dec	r18
    a7f0:	e2 f7       	brpl	.-8      	; 0xa7ea <_Z9makeMorsePcPbS0_+0x204>
    a7f2:	81 70       	andi	r24, 0x01	; 1
    a7f4:	99 27       	eor	r25, r25
    a7f6:	21 e0       	ldi	r18, 0x01	; 1
    a7f8:	89 2b       	or	r24, r25
    a7fa:	09 f4       	brne	.+2      	; 0xa7fe <_Z9makeMorsePcPbS0_+0x218>
    a7fc:	20 e0       	ldi	r18, 0x00	; 0
    a7fe:	29 83       	std	Y+1, r18	; 0x01

				if(isDah)
    a800:	89 81       	ldd	r24, Y+1	; 0x01
    a802:	88 23       	and	r24, r24
    a804:	21 f0       	breq	.+8      	; 0xa80e <_Z9makeMorsePcPbS0_+0x228>
				{
					elementIndex = 2;
    a806:	82 e0       	ldi	r24, 0x02	; 2
    a808:	80 93 95 49 	sts	0x4995, r24	; 0x804995 <_ZZ9makeMorsePcPbS0_E12elementIndex>
    a80c:	02 c0       	rjmp	.+4      	; 0xa812 <_Z9makeMorsePcPbS0_+0x22c>
				}
				else
				{
					elementIndex = 0;
    a80e:	10 92 95 49 	sts	0x4995, r1	; 0x804995 <_ZZ9makeMorsePcPbS0_E12elementIndex>
				}

				carrierOn = true;
    a812:	81 e0       	ldi	r24, 0x01	; 1
    a814:	80 93 98 49 	sts	0x4998, r24	; 0x804998 <_ZZ9makeMorsePcPbS0_E9carrierOn>

				if(symbolIndex >= morseInProgress.lengthInSymbols)
    a818:	90 91 91 49 	lds	r25, 0x4991	; 0x804991 <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x1>
    a81c:	80 91 94 49 	lds	r24, 0x4994	; 0x804994 <_ZZ9makeMorsePcPbS0_E11symbolIndex>
    a820:	89 17       	cp	r24, r25
    a822:	b8 f0       	brcs	.+46     	; 0xa852 <_Z9makeMorsePcPbS0_+0x26c>
				{
					addedSpace = 2;
    a824:	82 e0       	ldi	r24, 0x02	; 2
    a826:	80 93 96 49 	sts	0x4996, r24	; 0x804996 <_ZZ9makeMorsePcPbS0_E10addedSpace>
    a82a:	13 c0       	rjmp	.+38     	; 0xa852 <_Z9makeMorsePcPbS0_+0x26c>
				}
			}
			else
			{
				uint8_t sym = morseInProgress.lengthInSymbols;
    a82c:	80 91 91 49 	lds	r24, 0x4991	; 0x804991 <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x1>
    a830:	8a 83       	std	Y+2, r24	; 0x02
				symbolIndex = 255;  /* ensure the next character gets read */
    a832:	8f ef       	ldi	r24, 0xFF	; 255
    a834:	80 93 94 49 	sts	0x4994, r24	; 0x804994 <_ZZ9makeMorsePcPbS0_E11symbolIndex>
				carrierOn = false;
    a838:	10 92 98 49 	sts	0x4998, r1	; 0x804998 <_ZZ9makeMorsePcPbS0_E9carrierOn>
				if(sym >= 4 )
    a83c:	8a 81       	ldd	r24, Y+2	; 0x02
    a83e:	84 30       	cpi	r24, 0x04	; 4
    a840:	30 f0       	brcs	.+12     	; 0xa84e <_Z9makeMorsePcPbS0_+0x268>
				{
					elementIndex = morseInProgress.lengthInSymbols - 4;
    a842:	80 91 91 49 	lds	r24, 0x4991	; 0x804991 <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x1>
    a846:	84 50       	subi	r24, 0x04	; 4
    a848:	80 93 95 49 	sts	0x4995, r24	; 0x804995 <_ZZ9makeMorsePcPbS0_E12elementIndex>
    a84c:	02 c0       	rjmp	.+4      	; 0xa852 <_Z9makeMorsePcPbS0_+0x26c>
				}
				else
				{
					elementIndex = 0;
    a84e:	10 92 95 49 	sts	0x4995, r1	; 0x804995 <_ZZ9makeMorsePcPbS0_E12elementIndex>
				}
			}
		}

		/* Overrides for key on and key off special characters */
		if(c == '<')    /* constant tone */
    a852:	80 91 24 40 	lds	r24, 0x4024	; 0x804024 <_ZZ9makeMorsePcPbS0_E1c>
    a856:	8c 33       	cpi	r24, 0x3C	; 60
    a858:	21 f4       	brne	.+8      	; 0xa862 <_Z9makeMorsePcPbS0_+0x27c>
		{
			holdKeyDown = true;
    a85a:	81 e0       	ldi	r24, 0x01	; 1
    a85c:	80 93 8d 49 	sts	0x498D, r24	; 0x80498d <_ZZ9makeMorsePcPbS0_E11holdKeyDown>
    a860:	02 c0       	rjmp	.+4      	; 0xa866 <_Z9makeMorsePcPbS0_+0x280>
		}
		else
		{
			holdKeyDown = false;
    a862:	10 92 8d 49 	sts	0x498D, r1	; 0x80498d <_ZZ9makeMorsePcPbS0_E11holdKeyDown>
		}
	}

	if(finished)
    a866:	8f 81       	ldd	r24, Y+7	; 0x07
    a868:	98 85       	ldd	r25, Y+8	; 0x08
    a86a:	89 2b       	or	r24, r25
    a86c:	31 f0       	breq	.+12     	; 0xa87a <_Z9makeMorsePcPbS0_+0x294>
	{
		*finished = completedString;
    a86e:	20 91 97 49 	lds	r18, 0x4997	; 0x804997 <_ZZ9makeMorsePcPbS0_E15completedString>
    a872:	8f 81       	ldd	r24, Y+7	; 0x07
    a874:	98 85       	ldd	r25, Y+8	; 0x08
    a876:	fc 01       	movw	r30, r24
    a878:	20 83       	st	Z, r18
	}

	if(holdKeyDown)
    a87a:	80 91 8d 49 	lds	r24, 0x498D	; 0x80498d <_ZZ9makeMorsePcPbS0_E11holdKeyDown>
    a87e:	88 23       	and	r24, r24
    a880:	11 f0       	breq	.+4      	; 0xa886 <_Z9makeMorsePcPbS0_+0x2a0>
	{
		return(true);
    a882:	81 e0       	ldi	r24, 0x01	; 1
    a884:	02 c0       	rjmp	.+4      	; 0xa88a <_Z9makeMorsePcPbS0_+0x2a4>
	}
	else
	{
		return( carrierOn);
    a886:	80 91 98 49 	lds	r24, 0x4998	; 0x804998 <_ZZ9makeMorsePcPbS0_E9carrierOn>
	}
}
    a88a:	28 96       	adiw	r28, 0x08	; 8
    a88c:	cd bf       	out	0x3d, r28	; 61
    a88e:	de bf       	out	0x3e, r29	; 62
    a890:	df 91       	pop	r29
    a892:	cf 91       	pop	r28
    a894:	08 95       	ret

0000a896 <_Z26timeRequiredToSendStrAtWPMPcj>:
/**
 *  Returns the number of milliseconds required to send the string pointed to by the first argument at the WPM code speed
 *  passed in the second argument.
 */
uint16_t timeRequiredToSendStrAtWPM(char* str, uint16_t spd)
{
    a896:	cf 93       	push	r28
    a898:	df 93       	push	r29
    a89a:	cd b7       	in	r28, 0x3d	; 61
    a89c:	de b7       	in	r29, 0x3e	; 62
    a89e:	2b 97       	sbiw	r28, 0x0b	; 11
    a8a0:	cd bf       	out	0x3d, r28	; 61
    a8a2:	de bf       	out	0x3e, r29	; 62
    a8a4:	88 87       	std	Y+8, r24	; 0x08
    a8a6:	99 87       	std	Y+9, r25	; 0x09
    a8a8:	6a 87       	std	Y+10, r22	; 0x0a
    a8aa:	7b 87       	std	Y+11, r23	; 0x0b
	uint8_t elements = 0;
    a8ac:	19 82       	std	Y+1, r1	; 0x01
	MorseCharacter m;
	char c;

	for(int i = 0; i < 20; i++)
    a8ae:	1a 82       	std	Y+2, r1	; 0x02
    a8b0:	1b 82       	std	Y+3, r1	; 0x03
    a8b2:	8a 81       	ldd	r24, Y+2	; 0x02
    a8b4:	9b 81       	ldd	r25, Y+3	; 0x03
    a8b6:	44 97       	sbiw	r24, 0x14	; 20
    a8b8:	2c f5       	brge	.+74     	; 0xa904 <_Z26timeRequiredToSendStrAtWPMPcj+0x6e>
	{
		c = str[i];
    a8ba:	8a 81       	ldd	r24, Y+2	; 0x02
    a8bc:	9b 81       	ldd	r25, Y+3	; 0x03
    a8be:	28 85       	ldd	r18, Y+8	; 0x08
    a8c0:	39 85       	ldd	r19, Y+9	; 0x09
    a8c2:	82 0f       	add	r24, r18
    a8c4:	93 1f       	adc	r25, r19
    a8c6:	fc 01       	movw	r30, r24
    a8c8:	80 81       	ld	r24, Z
    a8ca:	8c 83       	std	Y+4, r24	; 0x04
		if(!c)
    a8cc:	8c 81       	ldd	r24, Y+4	; 0x04
    a8ce:	88 23       	and	r24, r24
    a8d0:	c1 f0       	breq	.+48     	; 0xa902 <_Z26timeRequiredToSendStrAtWPMPcj+0x6c>
		{
			break;
		}
		m = getMorseChar(c);
    a8d2:	8c 81       	ldd	r24, Y+4	; 0x04
    a8d4:	0e 94 9b 54 	call	0xa936	; 0xa936 <_Z12getMorseCharc>
    a8d8:	a8 2f       	mov	r26, r24
    a8da:	cb 01       	movw	r24, r22
    a8dc:	8d 83       	std	Y+5, r24	; 0x05
    a8de:	9e 83       	std	Y+6, r25	; 0x06
    a8e0:	af 83       	std	Y+7, r26	; 0x07
		if(m.pattern < INTER_WORD_SPACE)
    a8e2:	8d 81       	ldd	r24, Y+5	; 0x05
    a8e4:	8d 3f       	cpi	r24, 0xFD	; 253
    a8e6:	18 f4       	brcc	.+6      	; 0xa8ee <_Z26timeRequiredToSendStrAtWPMPcj+0x58>
		{
			elements += 3;
    a8e8:	89 81       	ldd	r24, Y+1	; 0x01
    a8ea:	8d 5f       	subi	r24, 0xFD	; 253
    a8ec:	89 83       	std	Y+1, r24	; 0x01
		}
		elements += m.lengthInElements;
    a8ee:	8f 81       	ldd	r24, Y+7	; 0x07
    a8f0:	99 81       	ldd	r25, Y+1	; 0x01
    a8f2:	89 0f       	add	r24, r25
    a8f4:	89 83       	std	Y+1, r24	; 0x01
{
	uint8_t elements = 0;
	MorseCharacter m;
	char c;

	for(int i = 0; i < 20; i++)
    a8f6:	8a 81       	ldd	r24, Y+2	; 0x02
    a8f8:	9b 81       	ldd	r25, Y+3	; 0x03
    a8fa:	01 96       	adiw	r24, 0x01	; 1
    a8fc:	8a 83       	std	Y+2, r24	; 0x02
    a8fe:	9b 83       	std	Y+3, r25	; 0x03
    a900:	d8 cf       	rjmp	.-80     	; 0xa8b2 <_Z26timeRequiredToSendStrAtWPMPcj+0x1c>
	{
		c = str[i];
		if(!c)
		{
			break;
    a902:	00 00       	nop
			elements += 3;
		}
		elements += m.lengthInElements;
	}

	return(elements * WPM_TO_MS_PER_DOT(spd));
    a904:	89 81       	ldd	r24, Y+1	; 0x01
    a906:	28 2f       	mov	r18, r24
    a908:	30 e0       	ldi	r19, 0x00	; 0
    a90a:	80 eb       	ldi	r24, 0xB0	; 176
    a90c:	94 e0       	ldi	r25, 0x04	; 4
    a90e:	4a 85       	ldd	r20, Y+10	; 0x0a
    a910:	5b 85       	ldd	r21, Y+11	; 0x0b
    a912:	ba 01       	movw	r22, r20
    a914:	0e 94 da 71 	call	0xe3b4	; 0xe3b4 <__udivmodhi4>
    a918:	cb 01       	movw	r24, r22
    a91a:	ac 01       	movw	r20, r24
    a91c:	24 9f       	mul	r18, r20
    a91e:	c0 01       	movw	r24, r0
    a920:	25 9f       	mul	r18, r21
    a922:	90 0d       	add	r25, r0
    a924:	34 9f       	mul	r19, r20
    a926:	90 0d       	add	r25, r0
    a928:	11 24       	eor	r1, r1
}
    a92a:	2b 96       	adiw	r28, 0x0b	; 11
    a92c:	cd bf       	out	0x3d, r28	; 61
    a92e:	de bf       	out	0x3e, r29	; 62
    a930:	df 91       	pop	r29
    a932:	cf 91       	pop	r28
    a934:	08 95       	ret

0000a936 <_Z12getMorseCharc>:
 *  pattern = a sequence of up to 8 dit and dah symbols contained in an unsigned byte, sequentially read from LSB to MSB (first symbol is bit 0)
 *  lengthInSymbols = how many symbols (dits and dahs) the character contains; this is how many pattern bits are used to represent the character
 *  lengthInElements = how long (measured in "dit lengths") is the total character including all inter-symbol spaces.
 */
MorseCharacter getMorseChar(char c)
{
    a936:	cf 93       	push	r28
    a938:	df 93       	push	r29
    a93a:	00 d0       	rcall	.+0      	; 0xa93c <_Z12getMorseCharc+0x6>
    a93c:	00 d0       	rcall	.+0      	; 0xa93e <_Z12getMorseCharc+0x8>
    a93e:	cd b7       	in	r28, 0x3d	; 61
    a940:	de b7       	in	r29, 0x3e	; 62
    a942:	8c 83       	std	Y+4, r24	; 0x04
	MorseCharacter morse;

	switch( c )
    a944:	8c 81       	ldd	r24, Y+4	; 0x04
    a946:	88 2f       	mov	r24, r24
    a948:	90 e0       	ldi	r25, 0x00	; 0
    a94a:	09 2e       	mov	r0, r25
    a94c:	00 0c       	add	r0, r0
    a94e:	aa 0b       	sbc	r26, r26
    a950:	bb 0b       	sbc	r27, r27
    a952:	40 e2       	ldi	r20, 0x20	; 32
    a954:	50 e0       	ldi	r21, 0x00	; 0
    a956:	2c e5       	ldi	r18, 0x5C	; 92
    a958:	30 e0       	ldi	r19, 0x00	; 0
    a95a:	84 1b       	sub	r24, r20
    a95c:	95 0b       	sbc	r25, r21
    a95e:	28 17       	cp	r18, r24
    a960:	39 07       	cpc	r19, r25
    a962:	08 f4       	brcc	.+2      	; 0xa966 <_Z12getMorseCharc+0x30>
    a964:	8f c1       	rjmp	.+798    	; 0xac84 <_Z12getMorseCharc+0x34e>
    a966:	87 54       	subi	r24, 0x47	; 71
    a968:	9f 4f       	sbci	r25, 0xFF	; 255
    a96a:	fc 01       	movw	r30, r24
    a96c:	0c 94 43 72 	jmp	0xe486	; 0xe486 <__tablejump2__>
	{
		case 'A':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
    a970:	82 e0       	ldi	r24, 0x02	; 2
    a972:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 2;
    a974:	82 e0       	ldi	r24, 0x02	; 2
    a976:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 5;
    a978:	85 e0       	ldi	r24, 0x05	; 5
    a97a:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a97c:	87 c1       	rjmp	.+782    	; 0xac8c <_Z12getMorseCharc+0x356>

		case 'B':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    a97e:	81 e0       	ldi	r24, 0x01	; 1
    a980:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    a982:	84 e0       	ldi	r24, 0x04	; 4
    a984:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    a986:	89 e0       	ldi	r24, 0x09	; 9
    a988:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a98a:	80 c1       	rjmp	.+768    	; 0xac8c <_Z12getMorseCharc+0x356>

		case 'C':
		{
			morse.pattern = 0x05;   /* 0000 0101; */
    a98c:	85 e0       	ldi	r24, 0x05	; 5
    a98e:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    a990:	84 e0       	ldi	r24, 0x04	; 4
    a992:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    a994:	8b e0       	ldi	r24, 0x0B	; 11
    a996:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a998:	79 c1       	rjmp	.+754    	; 0xac8c <_Z12getMorseCharc+0x356>

		case 'D':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    a99a:	81 e0       	ldi	r24, 0x01	; 1
    a99c:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 3;
    a99e:	83 e0       	ldi	r24, 0x03	; 3
    a9a0:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 7;
    a9a2:	87 e0       	ldi	r24, 0x07	; 7
    a9a4:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a9a6:	72 c1       	rjmp	.+740    	; 0xac8c <_Z12getMorseCharc+0x356>

		case 'E':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    a9a8:	19 82       	std	Y+1, r1	; 0x01
			morse.lengthInSymbols = 1;
    a9aa:	81 e0       	ldi	r24, 0x01	; 1
    a9ac:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 1;
    a9ae:	81 e0       	ldi	r24, 0x01	; 1
    a9b0:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a9b2:	6c c1       	rjmp	.+728    	; 0xac8c <_Z12getMorseCharc+0x356>

		case 'F':
		{
			morse.pattern = 0x04;   /* 0000 0100; */
    a9b4:	84 e0       	ldi	r24, 0x04	; 4
    a9b6:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    a9b8:	84 e0       	ldi	r24, 0x04	; 4
    a9ba:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    a9bc:	89 e0       	ldi	r24, 0x09	; 9
    a9be:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a9c0:	65 c1       	rjmp	.+714    	; 0xac8c <_Z12getMorseCharc+0x356>

		case 'G':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
    a9c2:	83 e0       	ldi	r24, 0x03	; 3
    a9c4:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 3;
    a9c6:	83 e0       	ldi	r24, 0x03	; 3
    a9c8:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    a9ca:	89 e0       	ldi	r24, 0x09	; 9
    a9cc:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a9ce:	5e c1       	rjmp	.+700    	; 0xac8c <_Z12getMorseCharc+0x356>

		case 'H':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    a9d0:	19 82       	std	Y+1, r1	; 0x01
			morse.lengthInSymbols = 4;
    a9d2:	84 e0       	ldi	r24, 0x04	; 4
    a9d4:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 7;
    a9d6:	87 e0       	ldi	r24, 0x07	; 7
    a9d8:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a9da:	58 c1       	rjmp	.+688    	; 0xac8c <_Z12getMorseCharc+0x356>

		case 'I':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    a9dc:	19 82       	std	Y+1, r1	; 0x01
			morse.lengthInSymbols = 2;
    a9de:	82 e0       	ldi	r24, 0x02	; 2
    a9e0:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 3;
    a9e2:	83 e0       	ldi	r24, 0x03	; 3
    a9e4:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a9e6:	52 c1       	rjmp	.+676    	; 0xac8c <_Z12getMorseCharc+0x356>

		case 'J':
		{
			morse.pattern = 0x0e;   /* 0000 1110; */
    a9e8:	8e e0       	ldi	r24, 0x0E	; 14
    a9ea:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    a9ec:	84 e0       	ldi	r24, 0x04	; 4
    a9ee:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    a9f0:	8d e0       	ldi	r24, 0x0D	; 13
    a9f2:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    a9f4:	4b c1       	rjmp	.+662    	; 0xac8c <_Z12getMorseCharc+0x356>

		case 'K':
		{
			morse.pattern = 0x05;   /* 0000 0101; */
    a9f6:	85 e0       	ldi	r24, 0x05	; 5
    a9f8:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 3;
    a9fa:	83 e0       	ldi	r24, 0x03	; 3
    a9fc:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    a9fe:	89 e0       	ldi	r24, 0x09	; 9
    aa00:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    aa02:	44 c1       	rjmp	.+648    	; 0xac8c <_Z12getMorseCharc+0x356>

		case 'L':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
    aa04:	82 e0       	ldi	r24, 0x02	; 2
    aa06:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    aa08:	84 e0       	ldi	r24, 0x04	; 4
    aa0a:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    aa0c:	89 e0       	ldi	r24, 0x09	; 9
    aa0e:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    aa10:	3d c1       	rjmp	.+634    	; 0xac8c <_Z12getMorseCharc+0x356>

		case 'M':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
    aa12:	83 e0       	ldi	r24, 0x03	; 3
    aa14:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 2;
    aa16:	82 e0       	ldi	r24, 0x02	; 2
    aa18:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 7;
    aa1a:	87 e0       	ldi	r24, 0x07	; 7
    aa1c:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    aa1e:	36 c1       	rjmp	.+620    	; 0xac8c <_Z12getMorseCharc+0x356>

		case 'N':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    aa20:	81 e0       	ldi	r24, 0x01	; 1
    aa22:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 2;
    aa24:	82 e0       	ldi	r24, 0x02	; 2
    aa26:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 5;
    aa28:	85 e0       	ldi	r24, 0x05	; 5
    aa2a:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    aa2c:	2f c1       	rjmp	.+606    	; 0xac8c <_Z12getMorseCharc+0x356>

		case 'O':
		{
			morse.pattern = 0x07;   /* 0000 0111; */
    aa2e:	87 e0       	ldi	r24, 0x07	; 7
    aa30:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 3;
    aa32:	83 e0       	ldi	r24, 0x03	; 3
    aa34:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    aa36:	8b e0       	ldi	r24, 0x0B	; 11
    aa38:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    aa3a:	28 c1       	rjmp	.+592    	; 0xac8c <_Z12getMorseCharc+0x356>

		case 'P':
		{
			morse.pattern = 0x06;   /* 0000 0110; */
    aa3c:	86 e0       	ldi	r24, 0x06	; 6
    aa3e:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    aa40:	84 e0       	ldi	r24, 0x04	; 4
    aa42:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    aa44:	8b e0       	ldi	r24, 0x0B	; 11
    aa46:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    aa48:	21 c1       	rjmp	.+578    	; 0xac8c <_Z12getMorseCharc+0x356>

		case 'Q':
		{
			morse.pattern = 0x0b;   /* 0000 1011; */
    aa4a:	8b e0       	ldi	r24, 0x0B	; 11
    aa4c:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    aa4e:	84 e0       	ldi	r24, 0x04	; 4
    aa50:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    aa52:	8d e0       	ldi	r24, 0x0D	; 13
    aa54:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    aa56:	1a c1       	rjmp	.+564    	; 0xac8c <_Z12getMorseCharc+0x356>

		case 'R':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
    aa58:	82 e0       	ldi	r24, 0x02	; 2
    aa5a:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 3;
    aa5c:	83 e0       	ldi	r24, 0x03	; 3
    aa5e:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 7;
    aa60:	87 e0       	ldi	r24, 0x07	; 7
    aa62:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    aa64:	13 c1       	rjmp	.+550    	; 0xac8c <_Z12getMorseCharc+0x356>

		case 'S':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    aa66:	19 82       	std	Y+1, r1	; 0x01
			morse.lengthInSymbols = 3;
    aa68:	83 e0       	ldi	r24, 0x03	; 3
    aa6a:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 5;
    aa6c:	85 e0       	ldi	r24, 0x05	; 5
    aa6e:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    aa70:	0d c1       	rjmp	.+538    	; 0xac8c <_Z12getMorseCharc+0x356>

		case 'T':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    aa72:	81 e0       	ldi	r24, 0x01	; 1
    aa74:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 1;
    aa76:	81 e0       	ldi	r24, 0x01	; 1
    aa78:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 3;
    aa7a:	83 e0       	ldi	r24, 0x03	; 3
    aa7c:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    aa7e:	06 c1       	rjmp	.+524    	; 0xac8c <_Z12getMorseCharc+0x356>

		case 'U':
		{
			morse.pattern = 0x04;   /* 0000 0100; */
    aa80:	84 e0       	ldi	r24, 0x04	; 4
    aa82:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 3;
    aa84:	83 e0       	ldi	r24, 0x03	; 3
    aa86:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 7;
    aa88:	87 e0       	ldi	r24, 0x07	; 7
    aa8a:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    aa8c:	ff c0       	rjmp	.+510    	; 0xac8c <_Z12getMorseCharc+0x356>

		case 'V':
		{
			morse.pattern = 0x08;   /* 0000 1000; */
    aa8e:	88 e0       	ldi	r24, 0x08	; 8
    aa90:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    aa92:	84 e0       	ldi	r24, 0x04	; 4
    aa94:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    aa96:	89 e0       	ldi	r24, 0x09	; 9
    aa98:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    aa9a:	f8 c0       	rjmp	.+496    	; 0xac8c <_Z12getMorseCharc+0x356>

		case 'W':
		{
			morse.pattern = 0x06;   /* 0000 0110; */
    aa9c:	86 e0       	ldi	r24, 0x06	; 6
    aa9e:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 3;
    aaa0:	83 e0       	ldi	r24, 0x03	; 3
    aaa2:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    aaa4:	89 e0       	ldi	r24, 0x09	; 9
    aaa6:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    aaa8:	f1 c0       	rjmp	.+482    	; 0xac8c <_Z12getMorseCharc+0x356>

		case 'X':
		{
			morse.pattern = 0x09;   /* 0000 1001; */
    aaaa:	89 e0       	ldi	r24, 0x09	; 9
    aaac:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    aaae:	84 e0       	ldi	r24, 0x04	; 4
    aab0:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    aab2:	8b e0       	ldi	r24, 0x0B	; 11
    aab4:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    aab6:	ea c0       	rjmp	.+468    	; 0xac8c <_Z12getMorseCharc+0x356>

		case 'Y':
		{
			morse.pattern = 0x0d;   /* 0000 1101; */
    aab8:	8d e0       	ldi	r24, 0x0D	; 13
    aaba:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    aabc:	84 e0       	ldi	r24, 0x04	; 4
    aabe:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    aac0:	8d e0       	ldi	r24, 0x0D	; 13
    aac2:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    aac4:	e3 c0       	rjmp	.+454    	; 0xac8c <_Z12getMorseCharc+0x356>

		case 'Z':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
    aac6:	83 e0       	ldi	r24, 0x03	; 3
    aac8:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    aaca:	84 e0       	ldi	r24, 0x04	; 4
    aacc:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    aace:	8b e0       	ldi	r24, 0x0B	; 11
    aad0:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    aad2:	dc c0       	rjmp	.+440    	; 0xac8c <_Z12getMorseCharc+0x356>

		case '0':
		{
			morse.pattern = 0x1f;   /* 0001 1111; */
    aad4:	8f e1       	ldi	r24, 0x1F	; 31
    aad6:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    aad8:	85 e0       	ldi	r24, 0x05	; 5
    aada:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 19;
    aadc:	83 e1       	ldi	r24, 0x13	; 19
    aade:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    aae0:	d5 c0       	rjmp	.+426    	; 0xac8c <_Z12getMorseCharc+0x356>

		case '1':
		{
			morse.pattern = 0x1e;   /* 0001 1110; */
    aae2:	8e e1       	ldi	r24, 0x1E	; 30
    aae4:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    aae6:	85 e0       	ldi	r24, 0x05	; 5
    aae8:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 17;
    aaea:	81 e1       	ldi	r24, 0x11	; 17
    aaec:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    aaee:	ce c0       	rjmp	.+412    	; 0xac8c <_Z12getMorseCharc+0x356>

		case '2':
		{
			morse.pattern = 0x1c;   /* 0001 1100; */
    aaf0:	8c e1       	ldi	r24, 0x1C	; 28
    aaf2:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    aaf4:	85 e0       	ldi	r24, 0x05	; 5
    aaf6:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 15;
    aaf8:	8f e0       	ldi	r24, 0x0F	; 15
    aafa:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    aafc:	c7 c0       	rjmp	.+398    	; 0xac8c <_Z12getMorseCharc+0x356>

		case '3':
		{
			morse.pattern = 0x18;   /* 0001 1000; */
    aafe:	88 e1       	ldi	r24, 0x18	; 24
    ab00:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    ab02:	85 e0       	ldi	r24, 0x05	; 5
    ab04:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    ab06:	8d e0       	ldi	r24, 0x0D	; 13
    ab08:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    ab0a:	c0 c0       	rjmp	.+384    	; 0xac8c <_Z12getMorseCharc+0x356>

		case '4':
		{
			morse.pattern = 0x10;   /* 0001 0000; */
    ab0c:	80 e1       	ldi	r24, 0x10	; 16
    ab0e:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    ab10:	85 e0       	ldi	r24, 0x05	; 5
    ab12:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    ab14:	8b e0       	ldi	r24, 0x0B	; 11
    ab16:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    ab18:	b9 c0       	rjmp	.+370    	; 0xac8c <_Z12getMorseCharc+0x356>

		case '5':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    ab1a:	19 82       	std	Y+1, r1	; 0x01
			morse.lengthInSymbols = 5;
    ab1c:	85 e0       	ldi	r24, 0x05	; 5
    ab1e:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    ab20:	89 e0       	ldi	r24, 0x09	; 9
    ab22:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    ab24:	b3 c0       	rjmp	.+358    	; 0xac8c <_Z12getMorseCharc+0x356>

		case '6':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    ab26:	81 e0       	ldi	r24, 0x01	; 1
    ab28:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    ab2a:	85 e0       	ldi	r24, 0x05	; 5
    ab2c:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    ab2e:	8b e0       	ldi	r24, 0x0B	; 11
    ab30:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    ab32:	ac c0       	rjmp	.+344    	; 0xac8c <_Z12getMorseCharc+0x356>

		case '7':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
    ab34:	83 e0       	ldi	r24, 0x03	; 3
    ab36:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    ab38:	85 e0       	ldi	r24, 0x05	; 5
    ab3a:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    ab3c:	8d e0       	ldi	r24, 0x0D	; 13
    ab3e:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    ab40:	a5 c0       	rjmp	.+330    	; 0xac8c <_Z12getMorseCharc+0x356>

		case '8':
		{
			morse.pattern = 0x07;   /* 0000 0111; */
    ab42:	87 e0       	ldi	r24, 0x07	; 7
    ab44:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    ab46:	85 e0       	ldi	r24, 0x05	; 5
    ab48:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 15;
    ab4a:	8f e0       	ldi	r24, 0x0F	; 15
    ab4c:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    ab4e:	9e c0       	rjmp	.+316    	; 0xac8c <_Z12getMorseCharc+0x356>

		case '9':
		{
			morse.pattern = 0x0f;   /* 0000 1111; */
    ab50:	8f e0       	ldi	r24, 0x0F	; 15
    ab52:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    ab54:	85 e0       	ldi	r24, 0x05	; 5
    ab56:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 17;
    ab58:	81 e1       	ldi	r24, 0x11	; 17
    ab5a:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    ab5c:	97 c0       	rjmp	.+302    	; 0xac8c <_Z12getMorseCharc+0x356>

		case '.':
		{
			morse.pattern = 0x2a;   /* 0010 1010; */
    ab5e:	8a e2       	ldi	r24, 0x2A	; 42
    ab60:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    ab62:	86 e0       	ldi	r24, 0x06	; 6
    ab64:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 17;
    ab66:	81 e1       	ldi	r24, 0x11	; 17
    ab68:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    ab6a:	90 c0       	rjmp	.+288    	; 0xac8c <_Z12getMorseCharc+0x356>

		case ',':
		{
			morse.pattern = 0x33;   /* 0011 0011; */
    ab6c:	83 e3       	ldi	r24, 0x33	; 51
    ab6e:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    ab70:	86 e0       	ldi	r24, 0x06	; 6
    ab72:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 19;
    ab74:	83 e1       	ldi	r24, 0x13	; 19
    ab76:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    ab78:	89 c0       	rjmp	.+274    	; 0xac8c <_Z12getMorseCharc+0x356>

		case '?':
		{
			morse.pattern = 0x0c;   /* 0000 1100; */
    ab7a:	8c e0       	ldi	r24, 0x0C	; 12
    ab7c:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    ab7e:	86 e0       	ldi	r24, 0x06	; 6
    ab80:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 15;
    ab82:	8f e0       	ldi	r24, 0x0F	; 15
    ab84:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    ab86:	82 c0       	rjmp	.+260    	; 0xac8c <_Z12getMorseCharc+0x356>

		case '\'':
		{
			morse.pattern = 0x1e;   /* 0001 1110; */
    ab88:	8e e1       	ldi	r24, 0x1E	; 30
    ab8a:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    ab8c:	86 e0       	ldi	r24, 0x06	; 6
    ab8e:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 19;
    ab90:	83 e1       	ldi	r24, 0x13	; 19
    ab92:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    ab94:	7b c0       	rjmp	.+246    	; 0xac8c <_Z12getMorseCharc+0x356>

		case '!':
		{
			morse.pattern = 0x35;   /* 0011 0101; */
    ab96:	85 e3       	ldi	r24, 0x35	; 53
    ab98:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    ab9a:	86 e0       	ldi	r24, 0x06	; 6
    ab9c:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 19;
    ab9e:	83 e1       	ldi	r24, 0x13	; 19
    aba0:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    aba2:	74 c0       	rjmp	.+232    	; 0xac8c <_Z12getMorseCharc+0x356>

		case '/':
		{
			morse.pattern = 0x09;   /* 0000 1001; */
    aba4:	89 e0       	ldi	r24, 0x09	; 9
    aba6:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    aba8:	85 e0       	ldi	r24, 0x05	; 5
    abaa:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    abac:	8d e0       	ldi	r24, 0x0D	; 13
    abae:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    abb0:	6d c0       	rjmp	.+218    	; 0xac8c <_Z12getMorseCharc+0x356>

		case '(':
		{
			morse.pattern = 0x0d;   /* 0000 1101; */
    abb2:	8d e0       	ldi	r24, 0x0D	; 13
    abb4:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    abb6:	85 e0       	ldi	r24, 0x05	; 5
    abb8:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 15;
    abba:	8f e0       	ldi	r24, 0x0F	; 15
    abbc:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    abbe:	66 c0       	rjmp	.+204    	; 0xac8c <_Z12getMorseCharc+0x356>

		case ')':
		{
			morse.pattern = 0x2d;   /* 0010 1101; */
    abc0:	8d e2       	ldi	r24, 0x2D	; 45
    abc2:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    abc4:	86 e0       	ldi	r24, 0x06	; 6
    abc6:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 19;
    abc8:	83 e1       	ldi	r24, 0x13	; 19
    abca:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    abcc:	5f c0       	rjmp	.+190    	; 0xac8c <_Z12getMorseCharc+0x356>

		case '&':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
    abce:	82 e0       	ldi	r24, 0x02	; 2
    abd0:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    abd2:	85 e0       	ldi	r24, 0x05	; 5
    abd4:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    abd6:	8b e0       	ldi	r24, 0x0B	; 11
    abd8:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    abda:	58 c0       	rjmp	.+176    	; 0xac8c <_Z12getMorseCharc+0x356>

		case ':':
		{
			morse.pattern = 0x07;   /* 0000 0111; */
    abdc:	87 e0       	ldi	r24, 0x07	; 7
    abde:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    abe0:	86 e0       	ldi	r24, 0x06	; 6
    abe2:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 17;
    abe4:	81 e1       	ldi	r24, 0x11	; 17
    abe6:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    abe8:	51 c0       	rjmp	.+162    	; 0xac8c <_Z12getMorseCharc+0x356>

		case ';':
		{
			morse.pattern = 0x15;   /* 0001 0101; */
    abea:	85 e1       	ldi	r24, 0x15	; 21
    abec:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    abee:	86 e0       	ldi	r24, 0x06	; 6
    abf0:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 12;
    abf2:	8c e0       	ldi	r24, 0x0C	; 12
    abf4:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    abf6:	4a c0       	rjmp	.+148    	; 0xac8c <_Z12getMorseCharc+0x356>

		case '=':
		{
			morse.pattern = 0x11;   /* 0001 0001; */
    abf8:	81 e1       	ldi	r24, 0x11	; 17
    abfa:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    abfc:	85 e0       	ldi	r24, 0x05	; 5
    abfe:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    ac00:	8d e0       	ldi	r24, 0x0D	; 13
    ac02:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    ac04:	43 c0       	rjmp	.+134    	; 0xac8c <_Z12getMorseCharc+0x356>

		case '+':
		{
			morse.pattern = 0x0a;   /* 0000 1010; */
    ac06:	8a e0       	ldi	r24, 0x0A	; 10
    ac08:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    ac0a:	85 e0       	ldi	r24, 0x05	; 5
    ac0c:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    ac0e:	8d e0       	ldi	r24, 0x0D	; 13
    ac10:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    ac12:	3c c0       	rjmp	.+120    	; 0xac8c <_Z12getMorseCharc+0x356>

		case '-':
		{
			morse.pattern = 0x21;   /* 0010 0001; */
    ac14:	81 e2       	ldi	r24, 0x21	; 33
    ac16:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    ac18:	86 e0       	ldi	r24, 0x06	; 6
    ac1a:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 15;
    ac1c:	8f e0       	ldi	r24, 0x0F	; 15
    ac1e:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    ac20:	35 c0       	rjmp	.+106    	; 0xac8c <_Z12getMorseCharc+0x356>

		case '_':
		{
			morse.pattern = 0x2c;   /* 0010 1100; */
    ac22:	8c e2       	ldi	r24, 0x2C	; 44
    ac24:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    ac26:	86 e0       	ldi	r24, 0x06	; 6
    ac28:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 17;
    ac2a:	81 e1       	ldi	r24, 0x11	; 17
    ac2c:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    ac2e:	2e c0       	rjmp	.+92     	; 0xac8c <_Z12getMorseCharc+0x356>

		case '"':
		{
			morse.pattern = 0x12;   /* 0001 0010; */
    ac30:	82 e1       	ldi	r24, 0x12	; 18
    ac32:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    ac34:	86 e0       	ldi	r24, 0x06	; 6
    ac36:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 15;
    ac38:	8f e0       	ldi	r24, 0x0F	; 15
    ac3a:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    ac3c:	27 c0       	rjmp	.+78     	; 0xac8c <_Z12getMorseCharc+0x356>

		case '$':
		{
			morse.pattern = 0x48;   /* 0100 1000; */
    ac3e:	88 e4       	ldi	r24, 0x48	; 72
    ac40:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 7;
    ac42:	87 e0       	ldi	r24, 0x07	; 7
    ac44:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 17;
    ac46:	81 e1       	ldi	r24, 0x11	; 17
    ac48:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    ac4a:	20 c0       	rjmp	.+64     	; 0xac8c <_Z12getMorseCharc+0x356>

		case '@':
		{
			morse.pattern = 0x16;   /* 0001 0110; */
    ac4c:	86 e1       	ldi	r24, 0x16	; 22
    ac4e:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    ac50:	86 e0       	ldi	r24, 0x06	; 6
    ac52:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 17;
    ac54:	81 e1       	ldi	r24, 0x11	; 17
    ac56:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    ac58:	19 c0       	rjmp	.+50     	; 0xac8c <_Z12getMorseCharc+0x356>

		case '|':                       /* inter-word space */
		{ morse.pattern = 0xff;         /* 1000 0000; */
    ac5a:	8f ef       	ldi	r24, 0xFF	; 255
    ac5c:	89 83       	std	Y+1, r24	; 0x01
		  morse.lengthInSymbols = 7;
    ac5e:	87 e0       	ldi	r24, 0x07	; 7
    ac60:	8a 83       	std	Y+2, r24	; 0x02
		  morse.lengthInElements = 4;   /* adjusted by -3 to account for inter-character space */
    ac62:	84 e0       	ldi	r24, 0x04	; 4
    ac64:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    ac66:	12 c0       	rjmp	.+36     	; 0xac8c <_Z12getMorseCharc+0x356>

		case ' ':                       /* inter-word space */
		{ morse.pattern = 0xfe;         /* 1000 0000; */
    ac68:	8e ef       	ldi	r24, 0xFE	; 254
    ac6a:	89 83       	std	Y+1, r24	; 0x01
		  morse.lengthInSymbols = 7;
    ac6c:	87 e0       	ldi	r24, 0x07	; 7
    ac6e:	8a 83       	std	Y+2, r24	; 0x02
		  morse.lengthInElements = 7;   /* 4 + 3 (character space) = 7 */
    ac70:	87 e0       	ldi	r24, 0x07	; 7
    ac72:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    ac74:	0b c0       	rjmp	.+22     	; 0xac8c <_Z12getMorseCharc+0x356>

		case '<':                       /* long keydown */
		{
			morse.pattern = 0x1f;       /* 0001 1111; */
    ac76:	8f e1       	ldi	r24, 0x1F	; 31
    ac78:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    ac7a:	85 e0       	ldi	r24, 0x05	; 5
    ac7c:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 19;
    ac7e:	83 e1       	ldi	r24, 0x13	; 19
    ac80:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    ac82:	04 c0       	rjmp	.+8      	; 0xac8c <_Z12getMorseCharc+0x356>

		default:
		{
			morse.pattern = 0x0000; /* 0000 0000; */
    ac84:	19 82       	std	Y+1, r1	; 0x01
			morse.lengthInSymbols = 0;
    ac86:	1a 82       	std	Y+2, r1	; 0x02
			morse.lengthInElements = 0;
    ac88:	1b 82       	std	Y+3, r1	; 0x03
		}
		break;
    ac8a:	00 00       	nop
	}

	return( morse);
    ac8c:	89 81       	ldd	r24, Y+1	; 0x01
    ac8e:	9a 81       	ldd	r25, Y+2	; 0x02
    ac90:	ab 81       	ldd	r26, Y+3	; 0x03
}
    ac92:	bc 01       	movw	r22, r24
    ac94:	8a 2f       	mov	r24, r26
    ac96:	24 96       	adiw	r28, 0x04	; 4
    ac98:	cd bf       	out	0x3d, r28	; 61
    ac9a:	de bf       	out	0x3e, r29	; 62
    ac9c:	df 91       	pop	r29
    ac9e:	cf 91       	pop	r28
    aca0:	08 95       	ret

0000aca2 <protected_write_io>:
	PUBLIC_FUNCTION(protected_write_io)

#if defined(__GNUC__)
  
#ifdef RAMPZ
	out     _SFR_IO_ADDR(RAMPZ), r1         // Clear bits 23:16 of Z
    aca2:	1b be       	out	0x3b, r1	; 59
#endif
	movw    r30, r24                // Load addr into Z
    aca4:	fc 01       	movw	r30, r24
	out     CCP, r22                // Start CCP handshake
    aca6:	64 bf       	out	0x34, r22	; 52
	st      Z, r20                  // Write value to I/O register
    aca8:	40 83       	st	Z, r20
	ret                             // Return to caller
    acaa:	08 95       	ret

0000acac <PORTC_set_pin_pull_mode>:

	for(bufferIndex=0; bufferIndex<SERIALBUS_NUMBER_OF_TX_MSG_BUFFERS; bufferIndex++)
	{
		tx_buffer[bufferIndex][0] = '\0';
	}
}
    acac:	cf 93       	push	r28
    acae:	df 93       	push	r29
    acb0:	00 d0       	rcall	.+0      	; 0xacb2 <PORTC_set_pin_pull_mode+0x6>
    acb2:	00 d0       	rcall	.+0      	; 0xacb4 <PORTC_set_pin_pull_mode+0x8>
    acb4:	cd b7       	in	r28, 0x3d	; 61
    acb6:	de b7       	in	r29, 0x3e	; 62
    acb8:	8b 83       	std	Y+3, r24	; 0x03
    acba:	6c 83       	std	Y+4, r22	; 0x04
    acbc:	8b 81       	ldd	r24, Y+3	; 0x03
    acbe:	88 2f       	mov	r24, r24
    acc0:	90 e0       	ldi	r25, 0x00	; 0
    acc2:	80 5b       	subi	r24, 0xB0	; 176
    acc4:	9b 4f       	sbci	r25, 0xFB	; 251
    acc6:	89 83       	std	Y+1, r24	; 0x01
    acc8:	9a 83       	std	Y+2, r25	; 0x02
    acca:	8c 81       	ldd	r24, Y+4	; 0x04
    accc:	81 30       	cpi	r24, 0x01	; 1
    acce:	59 f4       	brne	.+22     	; 0xace6 <PORTC_set_pin_pull_mode+0x3a>
    acd0:	89 81       	ldd	r24, Y+1	; 0x01
    acd2:	9a 81       	ldd	r25, Y+2	; 0x02
    acd4:	fc 01       	movw	r30, r24
    acd6:	80 81       	ld	r24, Z
    acd8:	28 2f       	mov	r18, r24
    acda:	28 60       	ori	r18, 0x08	; 8
    acdc:	89 81       	ldd	r24, Y+1	; 0x01
    acde:	9a 81       	ldd	r25, Y+2	; 0x02
    ace0:	fc 01       	movw	r30, r24
    ace2:	20 83       	st	Z, r18
    ace4:	0d c0       	rjmp	.+26     	; 0xad00 <PORTC_set_pin_pull_mode+0x54>
    ace6:	8c 81       	ldd	r24, Y+4	; 0x04
    ace8:	88 23       	and	r24, r24
    acea:	51 f4       	brne	.+20     	; 0xad00 <PORTC_set_pin_pull_mode+0x54>
    acec:	89 81       	ldd	r24, Y+1	; 0x01
    acee:	9a 81       	ldd	r25, Y+2	; 0x02
    acf0:	fc 01       	movw	r30, r24
    acf2:	80 81       	ld	r24, Z
    acf4:	28 2f       	mov	r18, r24
    acf6:	27 7f       	andi	r18, 0xF7	; 247
    acf8:	89 81       	ldd	r24, Y+1	; 0x01
    acfa:	9a 81       	ldd	r25, Y+2	; 0x02
    acfc:	fc 01       	movw	r30, r24
    acfe:	20 83       	st	Z, r18
    ad00:	00 00       	nop
    ad02:	24 96       	adiw	r28, 0x04	; 4
    ad04:	cd bf       	out	0x3d, r28	; 61
    ad06:	de bf       	out	0x3e, r29	; 62
    ad08:	df 91       	pop	r29
    ad0a:	cf 91       	pop	r28
    ad0c:	08 95       	ret

0000ad0e <PORTC_set_pin_dir>:
    ad0e:	cf 93       	push	r28
    ad10:	df 93       	push	r29
    ad12:	00 d0       	rcall	.+0      	; 0xad14 <PORTC_set_pin_dir+0x6>
    ad14:	cd b7       	in	r28, 0x3d	; 61
    ad16:	de b7       	in	r29, 0x3e	; 62
    ad18:	89 83       	std	Y+1, r24	; 0x01
    ad1a:	6a 83       	std	Y+2, r22	; 0x02
    ad1c:	8a 81       	ldd	r24, Y+2	; 0x02
    ad1e:	88 2f       	mov	r24, r24
    ad20:	90 e0       	ldi	r25, 0x00	; 0
    ad22:	81 30       	cpi	r24, 0x01	; 1
    ad24:	91 05       	cpc	r25, r1
    ad26:	e1 f0       	breq	.+56     	; 0xad60 <PORTC_set_pin_dir+0x52>
    ad28:	82 30       	cpi	r24, 0x02	; 2
    ad2a:	91 05       	cpc	r25, r1
    ad2c:	71 f1       	breq	.+92     	; 0xad8a <PORTC_set_pin_dir+0x7c>
    ad2e:	89 2b       	or	r24, r25
    ad30:	09 f0       	breq	.+2      	; 0xad34 <PORTC_set_pin_dir+0x26>
    ad32:	3b c0       	rjmp	.+118    	; 0xadaa <PORTC_set_pin_dir+0x9c>
    ad34:	88 e0       	ldi	r24, 0x08	; 8
    ad36:	90 e0       	ldi	r25, 0x00	; 0
    ad38:	28 e0       	ldi	r18, 0x08	; 8
    ad3a:	30 e0       	ldi	r19, 0x00	; 0
    ad3c:	f9 01       	movw	r30, r18
    ad3e:	20 81       	ld	r18, Z
    ad40:	62 2f       	mov	r22, r18
    ad42:	29 81       	ldd	r18, Y+1	; 0x01
    ad44:	42 2f       	mov	r20, r18
    ad46:	50 e0       	ldi	r21, 0x00	; 0
    ad48:	21 e0       	ldi	r18, 0x01	; 1
    ad4a:	30 e0       	ldi	r19, 0x00	; 0
    ad4c:	02 c0       	rjmp	.+4      	; 0xad52 <PORTC_set_pin_dir+0x44>
    ad4e:	22 0f       	add	r18, r18
    ad50:	33 1f       	adc	r19, r19
    ad52:	4a 95       	dec	r20
    ad54:	e2 f7       	brpl	.-8      	; 0xad4e <PORTC_set_pin_dir+0x40>
    ad56:	20 95       	com	r18
    ad58:	26 23       	and	r18, r22
    ad5a:	fc 01       	movw	r30, r24
    ad5c:	20 83       	st	Z, r18
    ad5e:	25 c0       	rjmp	.+74     	; 0xadaa <PORTC_set_pin_dir+0x9c>
    ad60:	88 e0       	ldi	r24, 0x08	; 8
    ad62:	90 e0       	ldi	r25, 0x00	; 0
    ad64:	28 e0       	ldi	r18, 0x08	; 8
    ad66:	30 e0       	ldi	r19, 0x00	; 0
    ad68:	f9 01       	movw	r30, r18
    ad6a:	20 81       	ld	r18, Z
    ad6c:	62 2f       	mov	r22, r18
    ad6e:	29 81       	ldd	r18, Y+1	; 0x01
    ad70:	42 2f       	mov	r20, r18
    ad72:	50 e0       	ldi	r21, 0x00	; 0
    ad74:	21 e0       	ldi	r18, 0x01	; 1
    ad76:	30 e0       	ldi	r19, 0x00	; 0
    ad78:	02 c0       	rjmp	.+4      	; 0xad7e <PORTC_set_pin_dir+0x70>
    ad7a:	22 0f       	add	r18, r18
    ad7c:	33 1f       	adc	r19, r19
    ad7e:	4a 95       	dec	r20
    ad80:	e2 f7       	brpl	.-8      	; 0xad7a <PORTC_set_pin_dir+0x6c>
    ad82:	26 2b       	or	r18, r22
    ad84:	fc 01       	movw	r30, r24
    ad86:	20 83       	st	Z, r18
    ad88:	10 c0       	rjmp	.+32     	; 0xadaa <PORTC_set_pin_dir+0x9c>
    ad8a:	89 81       	ldd	r24, Y+1	; 0x01
    ad8c:	88 2f       	mov	r24, r24
    ad8e:	90 e0       	ldi	r25, 0x00	; 0
    ad90:	80 5b       	subi	r24, 0xB0	; 176
    ad92:	9b 4f       	sbci	r25, 0xFB	; 251
    ad94:	29 81       	ldd	r18, Y+1	; 0x01
    ad96:	22 2f       	mov	r18, r18
    ad98:	30 e0       	ldi	r19, 0x00	; 0
    ad9a:	20 5b       	subi	r18, 0xB0	; 176
    ad9c:	3b 4f       	sbci	r19, 0xFB	; 251
    ad9e:	f9 01       	movw	r30, r18
    ada0:	20 81       	ld	r18, Z
    ada2:	28 60       	ori	r18, 0x08	; 8
    ada4:	fc 01       	movw	r30, r24
    ada6:	20 83       	st	Z, r18
    ada8:	00 00       	nop
    adaa:	00 00       	nop
    adac:	0f 90       	pop	r0
    adae:	0f 90       	pop	r0
    adb0:	df 91       	pop	r29
    adb2:	cf 91       	pop	r28
    adb4:	08 95       	ret

0000adb6 <PORTC_set_pin_level>:
    adb6:	cf 93       	push	r28
    adb8:	df 93       	push	r29
    adba:	00 d0       	rcall	.+0      	; 0xadbc <PORTC_set_pin_level+0x6>
    adbc:	cd b7       	in	r28, 0x3d	; 61
    adbe:	de b7       	in	r29, 0x3e	; 62
    adc0:	89 83       	std	Y+1, r24	; 0x01
    adc2:	6a 83       	std	Y+2, r22	; 0x02
    adc4:	8a 81       	ldd	r24, Y+2	; 0x02
    adc6:	88 23       	and	r24, r24
    adc8:	a9 f0       	breq	.+42     	; 0xadf4 <PORTC_set_pin_level+0x3e>
    adca:	88 e0       	ldi	r24, 0x08	; 8
    adcc:	90 e0       	ldi	r25, 0x00	; 0
    adce:	28 e0       	ldi	r18, 0x08	; 8
    add0:	30 e0       	ldi	r19, 0x00	; 0
    add2:	f9 01       	movw	r30, r18
    add4:	21 81       	ldd	r18, Z+1	; 0x01
    add6:	62 2f       	mov	r22, r18
    add8:	29 81       	ldd	r18, Y+1	; 0x01
    adda:	42 2f       	mov	r20, r18
    addc:	50 e0       	ldi	r21, 0x00	; 0
    adde:	21 e0       	ldi	r18, 0x01	; 1
    ade0:	30 e0       	ldi	r19, 0x00	; 0
    ade2:	02 c0       	rjmp	.+4      	; 0xade8 <PORTC_set_pin_level+0x32>
    ade4:	22 0f       	add	r18, r18
    ade6:	33 1f       	adc	r19, r19
    ade8:	4a 95       	dec	r20
    adea:	e2 f7       	brpl	.-8      	; 0xade4 <PORTC_set_pin_level+0x2e>
    adec:	26 2b       	or	r18, r22
    adee:	fc 01       	movw	r30, r24
    adf0:	21 83       	std	Z+1, r18	; 0x01
    adf2:	15 c0       	rjmp	.+42     	; 0xae1e <PORTC_set_pin_level+0x68>
    adf4:	88 e0       	ldi	r24, 0x08	; 8
    adf6:	90 e0       	ldi	r25, 0x00	; 0
    adf8:	28 e0       	ldi	r18, 0x08	; 8
    adfa:	30 e0       	ldi	r19, 0x00	; 0
    adfc:	f9 01       	movw	r30, r18
    adfe:	21 81       	ldd	r18, Z+1	; 0x01
    ae00:	62 2f       	mov	r22, r18
    ae02:	29 81       	ldd	r18, Y+1	; 0x01
    ae04:	42 2f       	mov	r20, r18
    ae06:	50 e0       	ldi	r21, 0x00	; 0
    ae08:	21 e0       	ldi	r18, 0x01	; 1
    ae0a:	30 e0       	ldi	r19, 0x00	; 0
    ae0c:	02 c0       	rjmp	.+4      	; 0xae12 <PORTC_set_pin_level+0x5c>
    ae0e:	22 0f       	add	r18, r18
    ae10:	33 1f       	adc	r19, r19
    ae12:	4a 95       	dec	r20
    ae14:	e2 f7       	brpl	.-8      	; 0xae0e <PORTC_set_pin_level+0x58>
    ae16:	20 95       	com	r18
    ae18:	26 23       	and	r18, r22
    ae1a:	fc 01       	movw	r30, r24
    ae1c:	21 83       	std	Z+1, r18	; 0x01
    ae1e:	00 00       	nop
    ae20:	0f 90       	pop	r0
    ae22:	0f 90       	pop	r0
    ae24:	df 91       	pop	r29
    ae26:	cf 91       	pop	r28
    ae28:	08 95       	ret

0000ae2a <PORTE_set_pin_pull_mode>:
    ae2a:	cf 93       	push	r28
    ae2c:	df 93       	push	r29
    ae2e:	00 d0       	rcall	.+0      	; 0xae30 <PORTE_set_pin_pull_mode+0x6>
    ae30:	00 d0       	rcall	.+0      	; 0xae32 <PORTE_set_pin_pull_mode+0x8>
    ae32:	cd b7       	in	r28, 0x3d	; 61
    ae34:	de b7       	in	r29, 0x3e	; 62
    ae36:	8b 83       	std	Y+3, r24	; 0x03
    ae38:	6c 83       	std	Y+4, r22	; 0x04
    ae3a:	8b 81       	ldd	r24, Y+3	; 0x03
    ae3c:	88 2f       	mov	r24, r24
    ae3e:	90 e0       	ldi	r25, 0x00	; 0
    ae40:	80 57       	subi	r24, 0x70	; 112
    ae42:	9b 4f       	sbci	r25, 0xFB	; 251
    ae44:	89 83       	std	Y+1, r24	; 0x01
    ae46:	9a 83       	std	Y+2, r25	; 0x02
    ae48:	8c 81       	ldd	r24, Y+4	; 0x04
    ae4a:	81 30       	cpi	r24, 0x01	; 1
    ae4c:	59 f4       	brne	.+22     	; 0xae64 <PORTE_set_pin_pull_mode+0x3a>
    ae4e:	89 81       	ldd	r24, Y+1	; 0x01
    ae50:	9a 81       	ldd	r25, Y+2	; 0x02
    ae52:	fc 01       	movw	r30, r24
    ae54:	80 81       	ld	r24, Z
    ae56:	28 2f       	mov	r18, r24
    ae58:	28 60       	ori	r18, 0x08	; 8
    ae5a:	89 81       	ldd	r24, Y+1	; 0x01
    ae5c:	9a 81       	ldd	r25, Y+2	; 0x02
    ae5e:	fc 01       	movw	r30, r24
    ae60:	20 83       	st	Z, r18
    ae62:	0d c0       	rjmp	.+26     	; 0xae7e <PORTE_set_pin_pull_mode+0x54>
    ae64:	8c 81       	ldd	r24, Y+4	; 0x04
    ae66:	88 23       	and	r24, r24
    ae68:	51 f4       	brne	.+20     	; 0xae7e <PORTE_set_pin_pull_mode+0x54>
    ae6a:	89 81       	ldd	r24, Y+1	; 0x01
    ae6c:	9a 81       	ldd	r25, Y+2	; 0x02
    ae6e:	fc 01       	movw	r30, r24
    ae70:	80 81       	ld	r24, Z
    ae72:	28 2f       	mov	r18, r24
    ae74:	27 7f       	andi	r18, 0xF7	; 247
    ae76:	89 81       	ldd	r24, Y+1	; 0x01
    ae78:	9a 81       	ldd	r25, Y+2	; 0x02
    ae7a:	fc 01       	movw	r30, r24
    ae7c:	20 83       	st	Z, r18
    ae7e:	00 00       	nop
    ae80:	24 96       	adiw	r28, 0x04	; 4
    ae82:	cd bf       	out	0x3d, r28	; 61
    ae84:	de bf       	out	0x3e, r29	; 62
    ae86:	df 91       	pop	r29
    ae88:	cf 91       	pop	r28
    ae8a:	08 95       	ret

0000ae8c <PORTE_set_pin_dir>:
    ae8c:	cf 93       	push	r28
    ae8e:	df 93       	push	r29
    ae90:	00 d0       	rcall	.+0      	; 0xae92 <PORTE_set_pin_dir+0x6>
    ae92:	cd b7       	in	r28, 0x3d	; 61
    ae94:	de b7       	in	r29, 0x3e	; 62
    ae96:	89 83       	std	Y+1, r24	; 0x01
    ae98:	6a 83       	std	Y+2, r22	; 0x02
    ae9a:	8a 81       	ldd	r24, Y+2	; 0x02
    ae9c:	88 2f       	mov	r24, r24
    ae9e:	90 e0       	ldi	r25, 0x00	; 0
    aea0:	81 30       	cpi	r24, 0x01	; 1
    aea2:	91 05       	cpc	r25, r1
    aea4:	e1 f0       	breq	.+56     	; 0xaede <PORTE_set_pin_dir+0x52>
    aea6:	82 30       	cpi	r24, 0x02	; 2
    aea8:	91 05       	cpc	r25, r1
    aeaa:	71 f1       	breq	.+92     	; 0xaf08 <PORTE_set_pin_dir+0x7c>
    aeac:	89 2b       	or	r24, r25
    aeae:	09 f0       	breq	.+2      	; 0xaeb2 <PORTE_set_pin_dir+0x26>
    aeb0:	3b c0       	rjmp	.+118    	; 0xaf28 <PORTE_set_pin_dir+0x9c>
    aeb2:	80 e1       	ldi	r24, 0x10	; 16
    aeb4:	90 e0       	ldi	r25, 0x00	; 0
    aeb6:	20 e1       	ldi	r18, 0x10	; 16
    aeb8:	30 e0       	ldi	r19, 0x00	; 0
    aeba:	f9 01       	movw	r30, r18
    aebc:	20 81       	ld	r18, Z
    aebe:	62 2f       	mov	r22, r18
    aec0:	29 81       	ldd	r18, Y+1	; 0x01
    aec2:	42 2f       	mov	r20, r18
    aec4:	50 e0       	ldi	r21, 0x00	; 0
    aec6:	21 e0       	ldi	r18, 0x01	; 1
    aec8:	30 e0       	ldi	r19, 0x00	; 0
    aeca:	02 c0       	rjmp	.+4      	; 0xaed0 <PORTE_set_pin_dir+0x44>
    aecc:	22 0f       	add	r18, r18
    aece:	33 1f       	adc	r19, r19
    aed0:	4a 95       	dec	r20
    aed2:	e2 f7       	brpl	.-8      	; 0xaecc <PORTE_set_pin_dir+0x40>
    aed4:	20 95       	com	r18
    aed6:	26 23       	and	r18, r22
    aed8:	fc 01       	movw	r30, r24
    aeda:	20 83       	st	Z, r18
    aedc:	25 c0       	rjmp	.+74     	; 0xaf28 <PORTE_set_pin_dir+0x9c>
    aede:	80 e1       	ldi	r24, 0x10	; 16
    aee0:	90 e0       	ldi	r25, 0x00	; 0
    aee2:	20 e1       	ldi	r18, 0x10	; 16
    aee4:	30 e0       	ldi	r19, 0x00	; 0
    aee6:	f9 01       	movw	r30, r18
    aee8:	20 81       	ld	r18, Z
    aeea:	62 2f       	mov	r22, r18
    aeec:	29 81       	ldd	r18, Y+1	; 0x01
    aeee:	42 2f       	mov	r20, r18
    aef0:	50 e0       	ldi	r21, 0x00	; 0
    aef2:	21 e0       	ldi	r18, 0x01	; 1
    aef4:	30 e0       	ldi	r19, 0x00	; 0
    aef6:	02 c0       	rjmp	.+4      	; 0xaefc <PORTE_set_pin_dir+0x70>
    aef8:	22 0f       	add	r18, r18
    aefa:	33 1f       	adc	r19, r19
    aefc:	4a 95       	dec	r20
    aefe:	e2 f7       	brpl	.-8      	; 0xaef8 <PORTE_set_pin_dir+0x6c>
    af00:	26 2b       	or	r18, r22
    af02:	fc 01       	movw	r30, r24
    af04:	20 83       	st	Z, r18
    af06:	10 c0       	rjmp	.+32     	; 0xaf28 <PORTE_set_pin_dir+0x9c>
    af08:	89 81       	ldd	r24, Y+1	; 0x01
    af0a:	88 2f       	mov	r24, r24
    af0c:	90 e0       	ldi	r25, 0x00	; 0
    af0e:	80 57       	subi	r24, 0x70	; 112
    af10:	9b 4f       	sbci	r25, 0xFB	; 251
    af12:	29 81       	ldd	r18, Y+1	; 0x01
    af14:	22 2f       	mov	r18, r18
    af16:	30 e0       	ldi	r19, 0x00	; 0
    af18:	20 57       	subi	r18, 0x70	; 112
    af1a:	3b 4f       	sbci	r19, 0xFB	; 251
    af1c:	f9 01       	movw	r30, r18
    af1e:	20 81       	ld	r18, Z
    af20:	28 60       	ori	r18, 0x08	; 8
    af22:	fc 01       	movw	r30, r24
    af24:	20 83       	st	Z, r18
    af26:	00 00       	nop
    af28:	00 00       	nop
    af2a:	0f 90       	pop	r0
    af2c:	0f 90       	pop	r0
    af2e:	df 91       	pop	r29
    af30:	cf 91       	pop	r28
    af32:	08 95       	ret

0000af34 <PORTE_set_pin_level>:
    af34:	cf 93       	push	r28
    af36:	df 93       	push	r29
    af38:	00 d0       	rcall	.+0      	; 0xaf3a <PORTE_set_pin_level+0x6>
    af3a:	cd b7       	in	r28, 0x3d	; 61
    af3c:	de b7       	in	r29, 0x3e	; 62
    af3e:	89 83       	std	Y+1, r24	; 0x01
    af40:	6a 83       	std	Y+2, r22	; 0x02
    af42:	8a 81       	ldd	r24, Y+2	; 0x02
    af44:	88 23       	and	r24, r24
    af46:	a9 f0       	breq	.+42     	; 0xaf72 <PORTE_set_pin_level+0x3e>
    af48:	80 e1       	ldi	r24, 0x10	; 16
    af4a:	90 e0       	ldi	r25, 0x00	; 0
    af4c:	20 e1       	ldi	r18, 0x10	; 16
    af4e:	30 e0       	ldi	r19, 0x00	; 0
    af50:	f9 01       	movw	r30, r18
    af52:	21 81       	ldd	r18, Z+1	; 0x01
    af54:	62 2f       	mov	r22, r18
    af56:	29 81       	ldd	r18, Y+1	; 0x01
    af58:	42 2f       	mov	r20, r18
    af5a:	50 e0       	ldi	r21, 0x00	; 0
    af5c:	21 e0       	ldi	r18, 0x01	; 1
    af5e:	30 e0       	ldi	r19, 0x00	; 0
    af60:	02 c0       	rjmp	.+4      	; 0xaf66 <PORTE_set_pin_level+0x32>
    af62:	22 0f       	add	r18, r18
    af64:	33 1f       	adc	r19, r19
    af66:	4a 95       	dec	r20
    af68:	e2 f7       	brpl	.-8      	; 0xaf62 <PORTE_set_pin_level+0x2e>
    af6a:	26 2b       	or	r18, r22
    af6c:	fc 01       	movw	r30, r24
    af6e:	21 83       	std	Z+1, r18	; 0x01
    af70:	15 c0       	rjmp	.+42     	; 0xaf9c <PORTE_set_pin_level+0x68>
    af72:	80 e1       	ldi	r24, 0x10	; 16
    af74:	90 e0       	ldi	r25, 0x00	; 0
    af76:	20 e1       	ldi	r18, 0x10	; 16
    af78:	30 e0       	ldi	r19, 0x00	; 0
    af7a:	f9 01       	movw	r30, r18
    af7c:	21 81       	ldd	r18, Z+1	; 0x01
    af7e:	62 2f       	mov	r22, r18
    af80:	29 81       	ldd	r18, Y+1	; 0x01
    af82:	42 2f       	mov	r20, r18
    af84:	50 e0       	ldi	r21, 0x00	; 0
    af86:	21 e0       	ldi	r18, 0x01	; 1
    af88:	30 e0       	ldi	r19, 0x00	; 0
    af8a:	02 c0       	rjmp	.+4      	; 0xaf90 <PORTE_set_pin_level+0x5c>
    af8c:	22 0f       	add	r18, r18
    af8e:	33 1f       	adc	r19, r19
    af90:	4a 95       	dec	r20
    af92:	e2 f7       	brpl	.-8      	; 0xaf8c <PORTE_set_pin_level+0x58>
    af94:	20 95       	com	r18
    af96:	26 23       	and	r18, r22
    af98:	fc 01       	movw	r30, r24
    af9a:	21 83       	std	Z+1, r18	; 0x01
    af9c:	00 00       	nop
    af9e:	0f 90       	pop	r0
    afa0:	0f 90       	pop	r0
    afa2:	df 91       	pop	r29
    afa4:	cf 91       	pop	r28
    afa6:	08 95       	ret

0000afa8 <PC0_set_dir>:
    afa8:	cf 93       	push	r28
    afaa:	df 93       	push	r29
    afac:	1f 92       	push	r1
    afae:	cd b7       	in	r28, 0x3d	; 61
    afb0:	de b7       	in	r29, 0x3e	; 62
    afb2:	89 83       	std	Y+1, r24	; 0x01
    afb4:	69 81       	ldd	r22, Y+1	; 0x01
    afb6:	80 e0       	ldi	r24, 0x00	; 0
    afb8:	0e 94 87 56 	call	0xad0e	; 0xad0e <PORTC_set_pin_dir>
    afbc:	00 00       	nop
    afbe:	0f 90       	pop	r0
    afc0:	df 91       	pop	r29
    afc2:	cf 91       	pop	r28
    afc4:	08 95       	ret

0000afc6 <PC0_set_level>:
    afc6:	cf 93       	push	r28
    afc8:	df 93       	push	r29
    afca:	1f 92       	push	r1
    afcc:	cd b7       	in	r28, 0x3d	; 61
    afce:	de b7       	in	r29, 0x3e	; 62
    afd0:	89 83       	std	Y+1, r24	; 0x01
    afd2:	69 81       	ldd	r22, Y+1	; 0x01
    afd4:	80 e0       	ldi	r24, 0x00	; 0
    afd6:	0e 94 db 56 	call	0xadb6	; 0xadb6 <PORTC_set_pin_level>
    afda:	00 00       	nop
    afdc:	0f 90       	pop	r0
    afde:	df 91       	pop	r29
    afe0:	cf 91       	pop	r28
    afe2:	08 95       	ret

0000afe4 <PC1_set_pull_mode>:
    afe4:	cf 93       	push	r28
    afe6:	df 93       	push	r29
    afe8:	1f 92       	push	r1
    afea:	cd b7       	in	r28, 0x3d	; 61
    afec:	de b7       	in	r29, 0x3e	; 62
    afee:	89 83       	std	Y+1, r24	; 0x01
    aff0:	69 81       	ldd	r22, Y+1	; 0x01
    aff2:	81 e0       	ldi	r24, 0x01	; 1
    aff4:	0e 94 56 56 	call	0xacac	; 0xacac <PORTC_set_pin_pull_mode>
    aff8:	00 00       	nop
    affa:	0f 90       	pop	r0
    affc:	df 91       	pop	r29
    affe:	cf 91       	pop	r28
    b000:	08 95       	ret

0000b002 <PC1_set_dir>:
    b002:	cf 93       	push	r28
    b004:	df 93       	push	r29
    b006:	1f 92       	push	r1
    b008:	cd b7       	in	r28, 0x3d	; 61
    b00a:	de b7       	in	r29, 0x3e	; 62
    b00c:	89 83       	std	Y+1, r24	; 0x01
    b00e:	69 81       	ldd	r22, Y+1	; 0x01
    b010:	81 e0       	ldi	r24, 0x01	; 1
    b012:	0e 94 87 56 	call	0xad0e	; 0xad0e <PORTC_set_pin_dir>
    b016:	00 00       	nop
    b018:	0f 90       	pop	r0
    b01a:	df 91       	pop	r29
    b01c:	cf 91       	pop	r28
    b01e:	08 95       	ret

0000b020 <PE0_set_dir>:
    b020:	cf 93       	push	r28
    b022:	df 93       	push	r29
    b024:	1f 92       	push	r1
    b026:	cd b7       	in	r28, 0x3d	; 61
    b028:	de b7       	in	r29, 0x3e	; 62
    b02a:	89 83       	std	Y+1, r24	; 0x01
    b02c:	69 81       	ldd	r22, Y+1	; 0x01
    b02e:	80 e0       	ldi	r24, 0x00	; 0
    b030:	0e 94 46 57 	call	0xae8c	; 0xae8c <PORTE_set_pin_dir>
    b034:	00 00       	nop
    b036:	0f 90       	pop	r0
    b038:	df 91       	pop	r29
    b03a:	cf 91       	pop	r28
    b03c:	08 95       	ret

0000b03e <PE0_set_level>:
    b03e:	cf 93       	push	r28
    b040:	df 93       	push	r29
    b042:	1f 92       	push	r1
    b044:	cd b7       	in	r28, 0x3d	; 61
    b046:	de b7       	in	r29, 0x3e	; 62
    b048:	89 83       	std	Y+1, r24	; 0x01
    b04a:	69 81       	ldd	r22, Y+1	; 0x01
    b04c:	80 e0       	ldi	r24, 0x00	; 0
    b04e:	0e 94 9a 57 	call	0xaf34	; 0xaf34 <PORTE_set_pin_level>
    b052:	00 00       	nop
    b054:	0f 90       	pop	r0
    b056:	df 91       	pop	r29
    b058:	cf 91       	pop	r28
    b05a:	08 95       	ret

0000b05c <PE1_set_pull_mode>:
    b05c:	cf 93       	push	r28
    b05e:	df 93       	push	r29
    b060:	1f 92       	push	r1
    b062:	cd b7       	in	r28, 0x3d	; 61
    b064:	de b7       	in	r29, 0x3e	; 62
    b066:	89 83       	std	Y+1, r24	; 0x01
    b068:	69 81       	ldd	r22, Y+1	; 0x01
    b06a:	81 e0       	ldi	r24, 0x01	; 1
    b06c:	0e 94 15 57 	call	0xae2a	; 0xae2a <PORTE_set_pin_pull_mode>
    b070:	00 00       	nop
    b072:	0f 90       	pop	r0
    b074:	df 91       	pop	r29
    b076:	cf 91       	pop	r28
    b078:	08 95       	ret

0000b07a <PE1_set_dir>:
    b07a:	cf 93       	push	r28
    b07c:	df 93       	push	r29
    b07e:	1f 92       	push	r1
    b080:	cd b7       	in	r28, 0x3d	; 61
    b082:	de b7       	in	r29, 0x3e	; 62
    b084:	89 83       	std	Y+1, r24	; 0x01
    b086:	69 81       	ldd	r22, Y+1	; 0x01
    b088:	81 e0       	ldi	r24, 0x01	; 1
    b08a:	0e 94 46 57 	call	0xae8c	; 0xae8c <PORTE_set_pin_dir>
    b08e:	00 00       	nop
    b090:	0f 90       	pop	r0
    b092:	df 91       	pop	r29
    b094:	cf 91       	pop	r28
    b096:	08 95       	ret

0000b098 <nextFullSBTxBuffer>:
    b098:	cf 93       	push	r28
    b09a:	df 93       	push	r29
    b09c:	00 d0       	rcall	.+0      	; 0xb09e <nextFullSBTxBuffer+0x6>
    b09e:	cd b7       	in	r28, 0x3d	; 61
    b0a0:	de b7       	in	r29, 0x3e	; 62
    b0a2:	81 e0       	ldi	r24, 0x01	; 1
    b0a4:	89 83       	std	Y+1, r24	; 0x01
    b0a6:	1a 82       	std	Y+2, r1	; 0x02
    b0a8:	80 91 c5 4a 	lds	r24, 0x4AC5	; 0x804ac5 <_ZZ18nextFullSBTxBufferE11bufferIndex>
    b0ac:	28 2f       	mov	r18, r24
    b0ae:	30 e0       	ldi	r19, 0x00	; 0
    b0b0:	49 e2       	ldi	r20, 0x29	; 41
    b0b2:	42 9f       	mul	r20, r18
    b0b4:	c0 01       	movw	r24, r0
    b0b6:	43 9f       	mul	r20, r19
    b0b8:	90 0d       	add	r25, r0
    b0ba:	11 24       	eor	r1, r1
    b0bc:	84 53       	subi	r24, 0x34	; 52
    b0be:	96 4b       	sbci	r25, 0xB6	; 182
    b0c0:	fc 01       	movw	r30, r24
    b0c2:	90 81       	ld	r25, Z
    b0c4:	81 e0       	ldi	r24, 0x01	; 1
    b0c6:	99 23       	and	r25, r25
    b0c8:	09 f0       	breq	.+2      	; 0xb0cc <nextFullSBTxBuffer+0x34>
    b0ca:	80 e0       	ldi	r24, 0x00	; 0
    b0cc:	88 23       	and	r24, r24
    b0ce:	c1 f0       	breq	.+48     	; 0xb100 <nextFullSBTxBuffer+0x68>
    b0d0:	8a 81       	ldd	r24, Y+2	; 0x02
    b0d2:	8f 5f       	subi	r24, 0xFF	; 255
    b0d4:	8a 83       	std	Y+2, r24	; 0x02
    b0d6:	81 e0       	ldi	r24, 0x01	; 1
    b0d8:	9a 81       	ldd	r25, Y+2	; 0x02
    b0da:	93 30       	cpi	r25, 0x03	; 3
    b0dc:	08 f4       	brcc	.+2      	; 0xb0e0 <nextFullSBTxBuffer+0x48>
    b0de:	80 e0       	ldi	r24, 0x00	; 0
    b0e0:	88 23       	and	r24, r24
    b0e2:	11 f0       	breq	.+4      	; 0xb0e8 <nextFullSBTxBuffer+0x50>
    b0e4:	19 82       	std	Y+1, r1	; 0x01
    b0e6:	0c c0       	rjmp	.+24     	; 0xb100 <nextFullSBTxBuffer+0x68>
    b0e8:	80 91 c5 4a 	lds	r24, 0x4AC5	; 0x804ac5 <_ZZ18nextFullSBTxBufferE11bufferIndex>
    b0ec:	8f 5f       	subi	r24, 0xFF	; 255
    b0ee:	80 93 c5 4a 	sts	0x4AC5, r24	; 0x804ac5 <_ZZ18nextFullSBTxBufferE11bufferIndex>
    b0f2:	80 91 c5 4a 	lds	r24, 0x4AC5	; 0x804ac5 <_ZZ18nextFullSBTxBufferE11bufferIndex>
    b0f6:	83 30       	cpi	r24, 0x03	; 3
    b0f8:	b8 f2       	brcs	.-82     	; 0xb0a8 <nextFullSBTxBuffer+0x10>
    b0fa:	10 92 c5 4a 	sts	0x4AC5, r1	; 0x804ac5 <_ZZ18nextFullSBTxBufferE11bufferIndex>
    b0fe:	d4 cf       	rjmp	.-88     	; 0xb0a8 <nextFullSBTxBuffer+0x10>
    b100:	89 81       	ldd	r24, Y+1	; 0x01
    b102:	88 23       	and	r24, r24
    b104:	69 f0       	breq	.+26     	; 0xb120 <nextFullSBTxBuffer+0x88>
    b106:	80 91 c5 4a 	lds	r24, 0x4AC5	; 0x804ac5 <_ZZ18nextFullSBTxBufferE11bufferIndex>
    b10a:	28 2f       	mov	r18, r24
    b10c:	30 e0       	ldi	r19, 0x00	; 0
    b10e:	49 e2       	ldi	r20, 0x29	; 41
    b110:	42 9f       	mul	r20, r18
    b112:	c0 01       	movw	r24, r0
    b114:	43 9f       	mul	r20, r19
    b116:	90 0d       	add	r25, r0
    b118:	11 24       	eor	r1, r1
    b11a:	84 53       	subi	r24, 0x34	; 52
    b11c:	96 4b       	sbci	r25, 0xB6	; 182
    b11e:	02 c0       	rjmp	.+4      	; 0xb124 <nextFullSBTxBuffer+0x8c>
    b120:	80 e0       	ldi	r24, 0x00	; 0
    b122:	90 e0       	ldi	r25, 0x00	; 0
    b124:	0f 90       	pop	r0
    b126:	0f 90       	pop	r0
    b128:	df 91       	pop	r29
    b12a:	cf 91       	pop	r28
    b12c:	08 95       	ret

0000b12e <nextEmptySBTxBuffer>:
    b12e:	cf 93       	push	r28
    b130:	df 93       	push	r29
    b132:	00 d0       	rcall	.+0      	; 0xb134 <nextEmptySBTxBuffer+0x6>
    b134:	cd b7       	in	r28, 0x3d	; 61
    b136:	de b7       	in	r29, 0x3e	; 62
    b138:	81 e0       	ldi	r24, 0x01	; 1
    b13a:	89 83       	std	Y+1, r24	; 0x01
    b13c:	1a 82       	std	Y+2, r1	; 0x02
    b13e:	80 91 c6 4a 	lds	r24, 0x4AC6	; 0x804ac6 <_ZZ19nextEmptySBTxBufferE11bufferIndex>
    b142:	28 2f       	mov	r18, r24
    b144:	30 e0       	ldi	r19, 0x00	; 0
    b146:	49 e2       	ldi	r20, 0x29	; 41
    b148:	42 9f       	mul	r20, r18
    b14a:	c0 01       	movw	r24, r0
    b14c:	43 9f       	mul	r20, r19
    b14e:	90 0d       	add	r25, r0
    b150:	11 24       	eor	r1, r1
    b152:	84 53       	subi	r24, 0x34	; 52
    b154:	96 4b       	sbci	r25, 0xB6	; 182
    b156:	fc 01       	movw	r30, r24
    b158:	90 81       	ld	r25, Z
    b15a:	81 e0       	ldi	r24, 0x01	; 1
    b15c:	99 23       	and	r25, r25
    b15e:	09 f4       	brne	.+2      	; 0xb162 <nextEmptySBTxBuffer+0x34>
    b160:	80 e0       	ldi	r24, 0x00	; 0
    b162:	88 23       	and	r24, r24
    b164:	c1 f0       	breq	.+48     	; 0xb196 <nextEmptySBTxBuffer+0x68>
    b166:	8a 81       	ldd	r24, Y+2	; 0x02
    b168:	8f 5f       	subi	r24, 0xFF	; 255
    b16a:	8a 83       	std	Y+2, r24	; 0x02
    b16c:	81 e0       	ldi	r24, 0x01	; 1
    b16e:	9a 81       	ldd	r25, Y+2	; 0x02
    b170:	93 30       	cpi	r25, 0x03	; 3
    b172:	08 f4       	brcc	.+2      	; 0xb176 <nextEmptySBTxBuffer+0x48>
    b174:	80 e0       	ldi	r24, 0x00	; 0
    b176:	88 23       	and	r24, r24
    b178:	11 f0       	breq	.+4      	; 0xb17e <nextEmptySBTxBuffer+0x50>
    b17a:	19 82       	std	Y+1, r1	; 0x01
    b17c:	0c c0       	rjmp	.+24     	; 0xb196 <nextEmptySBTxBuffer+0x68>
    b17e:	80 91 c6 4a 	lds	r24, 0x4AC6	; 0x804ac6 <_ZZ19nextEmptySBTxBufferE11bufferIndex>
    b182:	8f 5f       	subi	r24, 0xFF	; 255
    b184:	80 93 c6 4a 	sts	0x4AC6, r24	; 0x804ac6 <_ZZ19nextEmptySBTxBufferE11bufferIndex>
    b188:	80 91 c6 4a 	lds	r24, 0x4AC6	; 0x804ac6 <_ZZ19nextEmptySBTxBufferE11bufferIndex>
    b18c:	83 30       	cpi	r24, 0x03	; 3
    b18e:	b8 f2       	brcs	.-82     	; 0xb13e <nextEmptySBTxBuffer+0x10>
    b190:	10 92 c6 4a 	sts	0x4AC6, r1	; 0x804ac6 <_ZZ19nextEmptySBTxBufferE11bufferIndex>
    b194:	d4 cf       	rjmp	.-88     	; 0xb13e <nextEmptySBTxBuffer+0x10>
    b196:	89 81       	ldd	r24, Y+1	; 0x01
    b198:	88 23       	and	r24, r24
    b19a:	69 f0       	breq	.+26     	; 0xb1b6 <nextEmptySBTxBuffer+0x88>
    b19c:	80 91 c6 4a 	lds	r24, 0x4AC6	; 0x804ac6 <_ZZ19nextEmptySBTxBufferE11bufferIndex>
    b1a0:	28 2f       	mov	r18, r24
    b1a2:	30 e0       	ldi	r19, 0x00	; 0
    b1a4:	49 e2       	ldi	r20, 0x29	; 41
    b1a6:	42 9f       	mul	r20, r18
    b1a8:	c0 01       	movw	r24, r0
    b1aa:	43 9f       	mul	r20, r19
    b1ac:	90 0d       	add	r25, r0
    b1ae:	11 24       	eor	r1, r1
    b1b0:	84 53       	subi	r24, 0x34	; 52
    b1b2:	96 4b       	sbci	r25, 0xB6	; 182
    b1b4:	02 c0       	rjmp	.+4      	; 0xb1ba <nextEmptySBTxBuffer+0x8c>
    b1b6:	80 e0       	ldi	r24, 0x00	; 0
    b1b8:	90 e0       	ldi	r25, 0x00	; 0
    b1ba:	0f 90       	pop	r0
    b1bc:	0f 90       	pop	r0
    b1be:	df 91       	pop	r29
    b1c0:	cf 91       	pop	r28
    b1c2:	08 95       	ret

0000b1c4 <nextEmptySBRxBuffer>:
    b1c4:	cf 93       	push	r28
    b1c6:	df 93       	push	r29
    b1c8:	00 d0       	rcall	.+0      	; 0xb1ca <nextEmptySBRxBuffer+0x6>
    b1ca:	cd b7       	in	r28, 0x3d	; 61
    b1cc:	de b7       	in	r29, 0x3e	; 62
    b1ce:	81 e0       	ldi	r24, 0x01	; 1
    b1d0:	89 83       	std	Y+1, r24	; 0x01
    b1d2:	1a 82       	std	Y+2, r1	; 0x02
    b1d4:	80 91 c7 4a 	lds	r24, 0x4AC7	; 0x804ac7 <_ZZ19nextEmptySBRxBufferE11bufferIndex>
    b1d8:	28 2f       	mov	r18, r24
    b1da:	30 e0       	ldi	r19, 0x00	; 0
    b1dc:	4f e3       	ldi	r20, 0x3F	; 63
    b1de:	42 9f       	mul	r20, r18
    b1e0:	c0 01       	movw	r24, r0
    b1e2:	43 9f       	mul	r20, r19
    b1e4:	90 0d       	add	r25, r0
    b1e6:	11 24       	eor	r1, r1
    b1e8:	88 5b       	subi	r24, 0xB8	; 184
    b1ea:	95 4b       	sbci	r25, 0xB5	; 181
    b1ec:	fc 01       	movw	r30, r24
    b1ee:	80 81       	ld	r24, Z
    b1f0:	91 81       	ldd	r25, Z+1	; 0x01
    b1f2:	21 e0       	ldi	r18, 0x01	; 1
    b1f4:	89 2b       	or	r24, r25
    b1f6:	09 f4       	brne	.+2      	; 0xb1fa <nextEmptySBRxBuffer+0x36>
    b1f8:	20 e0       	ldi	r18, 0x00	; 0
    b1fa:	22 23       	and	r18, r18
    b1fc:	c1 f0       	breq	.+48     	; 0xb22e <nextEmptySBRxBuffer+0x6a>
    b1fe:	8a 81       	ldd	r24, Y+2	; 0x02
    b200:	8f 5f       	subi	r24, 0xFF	; 255
    b202:	8a 83       	std	Y+2, r24	; 0x02
    b204:	81 e0       	ldi	r24, 0x01	; 1
    b206:	9a 81       	ldd	r25, Y+2	; 0x02
    b208:	92 30       	cpi	r25, 0x02	; 2
    b20a:	08 f4       	brcc	.+2      	; 0xb20e <nextEmptySBRxBuffer+0x4a>
    b20c:	80 e0       	ldi	r24, 0x00	; 0
    b20e:	88 23       	and	r24, r24
    b210:	11 f0       	breq	.+4      	; 0xb216 <nextEmptySBRxBuffer+0x52>
    b212:	19 82       	std	Y+1, r1	; 0x01
    b214:	0c c0       	rjmp	.+24     	; 0xb22e <nextEmptySBRxBuffer+0x6a>
    b216:	80 91 c7 4a 	lds	r24, 0x4AC7	; 0x804ac7 <_ZZ19nextEmptySBRxBufferE11bufferIndex>
    b21a:	8f 5f       	subi	r24, 0xFF	; 255
    b21c:	80 93 c7 4a 	sts	0x4AC7, r24	; 0x804ac7 <_ZZ19nextEmptySBRxBufferE11bufferIndex>
    b220:	80 91 c7 4a 	lds	r24, 0x4AC7	; 0x804ac7 <_ZZ19nextEmptySBRxBufferE11bufferIndex>
    b224:	82 30       	cpi	r24, 0x02	; 2
    b226:	b0 f2       	brcs	.-84     	; 0xb1d4 <nextEmptySBRxBuffer+0x10>
    b228:	10 92 c7 4a 	sts	0x4AC7, r1	; 0x804ac7 <_ZZ19nextEmptySBRxBufferE11bufferIndex>
    b22c:	d3 cf       	rjmp	.-90     	; 0xb1d4 <nextEmptySBRxBuffer+0x10>
    b22e:	89 81       	ldd	r24, Y+1	; 0x01
    b230:	88 23       	and	r24, r24
    b232:	69 f0       	breq	.+26     	; 0xb24e <nextEmptySBRxBuffer+0x8a>
    b234:	80 91 c7 4a 	lds	r24, 0x4AC7	; 0x804ac7 <_ZZ19nextEmptySBRxBufferE11bufferIndex>
    b238:	28 2f       	mov	r18, r24
    b23a:	30 e0       	ldi	r19, 0x00	; 0
    b23c:	4f e3       	ldi	r20, 0x3F	; 63
    b23e:	42 9f       	mul	r20, r18
    b240:	c0 01       	movw	r24, r0
    b242:	43 9f       	mul	r20, r19
    b244:	90 0d       	add	r25, r0
    b246:	11 24       	eor	r1, r1
    b248:	89 5b       	subi	r24, 0xB9	; 185
    b24a:	95 4b       	sbci	r25, 0xB5	; 181
    b24c:	02 c0       	rjmp	.+4      	; 0xb252 <nextEmptySBRxBuffer+0x8e>
    b24e:	80 e0       	ldi	r24, 0x00	; 0
    b250:	90 e0       	ldi	r25, 0x00	; 0
    b252:	0f 90       	pop	r0
    b254:	0f 90       	pop	r0
    b256:	df 91       	pop	r29
    b258:	cf 91       	pop	r28
    b25a:	08 95       	ret

0000b25c <nextFullSBRxBuffer>:
    b25c:	cf 93       	push	r28
    b25e:	df 93       	push	r29
    b260:	00 d0       	rcall	.+0      	; 0xb262 <nextFullSBRxBuffer+0x6>
    b262:	cd b7       	in	r28, 0x3d	; 61
    b264:	de b7       	in	r29, 0x3e	; 62
    b266:	81 e0       	ldi	r24, 0x01	; 1
    b268:	89 83       	std	Y+1, r24	; 0x01
    b26a:	1a 82       	std	Y+2, r1	; 0x02
    b26c:	80 91 c8 4a 	lds	r24, 0x4AC8	; 0x804ac8 <_ZZ18nextFullSBRxBufferE11bufferIndex>
    b270:	28 2f       	mov	r18, r24
    b272:	30 e0       	ldi	r19, 0x00	; 0
    b274:	4f e3       	ldi	r20, 0x3F	; 63
    b276:	42 9f       	mul	r20, r18
    b278:	c0 01       	movw	r24, r0
    b27a:	43 9f       	mul	r20, r19
    b27c:	90 0d       	add	r25, r0
    b27e:	11 24       	eor	r1, r1
    b280:	88 5b       	subi	r24, 0xB8	; 184
    b282:	95 4b       	sbci	r25, 0xB5	; 181
    b284:	fc 01       	movw	r30, r24
    b286:	80 81       	ld	r24, Z
    b288:	91 81       	ldd	r25, Z+1	; 0x01
    b28a:	21 e0       	ldi	r18, 0x01	; 1
    b28c:	89 2b       	or	r24, r25
    b28e:	09 f0       	breq	.+2      	; 0xb292 <nextFullSBRxBuffer+0x36>
    b290:	20 e0       	ldi	r18, 0x00	; 0
    b292:	22 23       	and	r18, r18
    b294:	c1 f0       	breq	.+48     	; 0xb2c6 <nextFullSBRxBuffer+0x6a>
    b296:	8a 81       	ldd	r24, Y+2	; 0x02
    b298:	8f 5f       	subi	r24, 0xFF	; 255
    b29a:	8a 83       	std	Y+2, r24	; 0x02
    b29c:	81 e0       	ldi	r24, 0x01	; 1
    b29e:	9a 81       	ldd	r25, Y+2	; 0x02
    b2a0:	92 30       	cpi	r25, 0x02	; 2
    b2a2:	08 f4       	brcc	.+2      	; 0xb2a6 <nextFullSBRxBuffer+0x4a>
    b2a4:	80 e0       	ldi	r24, 0x00	; 0
    b2a6:	88 23       	and	r24, r24
    b2a8:	11 f0       	breq	.+4      	; 0xb2ae <nextFullSBRxBuffer+0x52>
    b2aa:	19 82       	std	Y+1, r1	; 0x01
    b2ac:	0c c0       	rjmp	.+24     	; 0xb2c6 <nextFullSBRxBuffer+0x6a>
    b2ae:	80 91 c8 4a 	lds	r24, 0x4AC8	; 0x804ac8 <_ZZ18nextFullSBRxBufferE11bufferIndex>
    b2b2:	8f 5f       	subi	r24, 0xFF	; 255
    b2b4:	80 93 c8 4a 	sts	0x4AC8, r24	; 0x804ac8 <_ZZ18nextFullSBRxBufferE11bufferIndex>
    b2b8:	80 91 c8 4a 	lds	r24, 0x4AC8	; 0x804ac8 <_ZZ18nextFullSBRxBufferE11bufferIndex>
    b2bc:	82 30       	cpi	r24, 0x02	; 2
    b2be:	b0 f2       	brcs	.-84     	; 0xb26c <nextFullSBRxBuffer+0x10>
    b2c0:	10 92 c8 4a 	sts	0x4AC8, r1	; 0x804ac8 <_ZZ18nextFullSBRxBufferE11bufferIndex>
    b2c4:	d3 cf       	rjmp	.-90     	; 0xb26c <nextFullSBRxBuffer+0x10>
    b2c6:	89 81       	ldd	r24, Y+1	; 0x01
    b2c8:	88 23       	and	r24, r24
    b2ca:	69 f0       	breq	.+26     	; 0xb2e6 <nextFullSBRxBuffer+0x8a>
    b2cc:	80 91 c8 4a 	lds	r24, 0x4AC8	; 0x804ac8 <_ZZ18nextFullSBRxBufferE11bufferIndex>
    b2d0:	28 2f       	mov	r18, r24
    b2d2:	30 e0       	ldi	r19, 0x00	; 0
    b2d4:	4f e3       	ldi	r20, 0x3F	; 63
    b2d6:	42 9f       	mul	r20, r18
    b2d8:	c0 01       	movw	r24, r0
    b2da:	43 9f       	mul	r20, r19
    b2dc:	90 0d       	add	r25, r0
    b2de:	11 24       	eor	r1, r1
    b2e0:	89 5b       	subi	r24, 0xB9	; 185
    b2e2:	95 4b       	sbci	r25, 0xB5	; 181
    b2e4:	02 c0       	rjmp	.+4      	; 0xb2ea <nextFullSBRxBuffer+0x8e>
    b2e6:	80 e0       	ldi	r24, 0x00	; 0
    b2e8:	90 e0       	ldi	r25, 0x00	; 0
    b2ea:	0f 90       	pop	r0
    b2ec:	0f 90       	pop	r0
    b2ee:	df 91       	pop	r29
    b2f0:	cf 91       	pop	r28
    b2f2:	08 95       	ret

0000b2f4 <serialbusTxInProgress>:
    b2f4:	cf 93       	push	r28
    b2f6:	df 93       	push	r29
    b2f8:	cd b7       	in	r28, 0x3d	; 61
    b2fa:	de b7       	in	r29, 0x3e	; 62
    b2fc:	80 91 cb 49 	lds	r24, 0x49CB	; 0x8049cb <_ZL19serialbus_tx_active>
    b300:	df 91       	pop	r29
    b302:	cf 91       	pop	r28
    b304:	08 95       	ret

0000b306 <_Z18serialbus_start_txv>:
    b306:	cf 93       	push	r28
    b308:	df 93       	push	r29
    b30a:	1f 92       	push	r1
    b30c:	cd b7       	in	r28, 0x3d	; 61
    b30e:	de b7       	in	r29, 0x3e	; 62
    b310:	90 91 cb 49 	lds	r25, 0x49CB	; 0x8049cb <_ZL19serialbus_tx_active>
    b314:	81 e0       	ldi	r24, 0x01	; 1
    b316:	89 27       	eor	r24, r25
    b318:	89 83       	std	Y+1, r24	; 0x01
    b31a:	89 81       	ldd	r24, Y+1	; 0x01
    b31c:	88 23       	and	r24, r24
    b31e:	61 f0       	breq	.+24     	; 0xb338 <_Z18serialbus_start_txv+0x32>
    b320:	81 e0       	ldi	r24, 0x01	; 1
    b322:	80 93 cb 49 	sts	0x49CB, r24	; 0x8049cb <_ZL19serialbus_tx_active>
    b326:	80 91 25 40 	lds	r24, 0x4025	; 0x804025 <g_serialbus_usart_number>
    b32a:	88 23       	and	r24, r24
    b32c:	19 f4       	brne	.+6      	; 0xb334 <_Z18serialbus_start_txv+0x2e>
    b32e:	0e 94 4d 6b 	call	0xd69a	; 0xd69a <USART4_enable_tx>
    b332:	02 c0       	rjmp	.+4      	; 0xb338 <_Z18serialbus_start_txv+0x32>
    b334:	0e 94 c7 6a 	call	0xd58e	; 0xd58e <USART1_enable_tx>
    b338:	89 81       	ldd	r24, Y+1	; 0x01
    b33a:	0f 90       	pop	r0
    b33c:	df 91       	pop	r29
    b33e:	cf 91       	pop	r28
    b340:	08 95       	ret

0000b342 <serialbus_end_tx>:
    b342:	cf 93       	push	r28
    b344:	df 93       	push	r29
    b346:	cd b7       	in	r28, 0x3d	; 61
    b348:	de b7       	in	r29, 0x3e	; 62
    b34a:	80 91 cb 49 	lds	r24, 0x49CB	; 0x8049cb <_ZL19serialbus_tx_active>
    b34e:	88 23       	and	r24, r24
    b350:	c9 f0       	breq	.+50     	; 0xb384 <serialbus_end_tx+0x42>
    b352:	80 91 25 40 	lds	r24, 0x4025	; 0x804025 <g_serialbus_usart_number>
    b356:	84 30       	cpi	r24, 0x04	; 4
    b358:	51 f4       	brne	.+20     	; 0xb36e <serialbus_end_tx+0x2c>
    b35a:	80 e8       	ldi	r24, 0x80	; 128
    b35c:	98 e0       	ldi	r25, 0x08	; 8
    b35e:	20 e8       	ldi	r18, 0x80	; 128
    b360:	38 e0       	ldi	r19, 0x08	; 8
    b362:	f9 01       	movw	r30, r18
    b364:	25 81       	ldd	r18, Z+5	; 0x05
    b366:	2f 7d       	andi	r18, 0xDF	; 223
    b368:	fc 01       	movw	r30, r24
    b36a:	25 83       	std	Z+5, r18	; 0x05
    b36c:	09 c0       	rjmp	.+18     	; 0xb380 <serialbus_end_tx+0x3e>
    b36e:	80 e2       	ldi	r24, 0x20	; 32
    b370:	98 e0       	ldi	r25, 0x08	; 8
    b372:	20 e2       	ldi	r18, 0x20	; 32
    b374:	38 e0       	ldi	r19, 0x08	; 8
    b376:	f9 01       	movw	r30, r18
    b378:	25 81       	ldd	r18, Z+5	; 0x05
    b37a:	2f 7d       	andi	r18, 0xDF	; 223
    b37c:	fc 01       	movw	r30, r24
    b37e:	25 83       	std	Z+5, r18	; 0x05
    b380:	10 92 cb 49 	sts	0x49CB, r1	; 0x8049cb <_ZL19serialbus_tx_active>
    b384:	00 00       	nop
    b386:	df 91       	pop	r29
    b388:	cf 91       	pop	r28
    b38a:	08 95       	ret

0000b38c <_ZL21USART1_initializationm>:
    b38c:	cf 93       	push	r28
    b38e:	df 93       	push	r29
    b390:	00 d0       	rcall	.+0      	; 0xb392 <_ZL21USART1_initializationm+0x6>
    b392:	00 d0       	rcall	.+0      	; 0xb394 <_ZL21USART1_initializationm+0x8>
    b394:	cd b7       	in	r28, 0x3d	; 61
    b396:	de b7       	in	r29, 0x3e	; 62
    b398:	69 83       	std	Y+1, r22	; 0x01
    b39a:	7a 83       	std	Y+2, r23	; 0x02
    b39c:	8b 83       	std	Y+3, r24	; 0x03
    b39e:	9c 83       	std	Y+4, r25	; 0x04
    b3a0:	80 e0       	ldi	r24, 0x00	; 0
    b3a2:	0e 94 01 58 	call	0xb002	; 0xb002 <PC1_set_dir>
    b3a6:	80 e0       	ldi	r24, 0x00	; 0
    b3a8:	0e 94 f2 57 	call	0xafe4	; 0xafe4 <PC1_set_pull_mode>
    b3ac:	81 e0       	ldi	r24, 0x01	; 1
    b3ae:	0e 94 d4 57 	call	0xafa8	; 0xafa8 <PC0_set_dir>
    b3b2:	81 e0       	ldi	r24, 0x01	; 1
    b3b4:	0e 94 e3 57 	call	0xafc6	; 0xafc6 <PC0_set_level>
    b3b8:	89 81       	ldd	r24, Y+1	; 0x01
    b3ba:	9a 81       	ldd	r25, Y+2	; 0x02
    b3bc:	ab 81       	ldd	r26, Y+3	; 0x03
    b3be:	bc 81       	ldd	r27, Y+4	; 0x04
    b3c0:	bc 01       	movw	r22, r24
    b3c2:	cd 01       	movw	r24, r26
    b3c4:	0e 94 77 6a 	call	0xd4ee	; 0xd4ee <USART1_init>
    b3c8:	00 00       	nop
    b3ca:	24 96       	adiw	r28, 0x04	; 4
    b3cc:	cd bf       	out	0x3d, r28	; 61
    b3ce:	de bf       	out	0x3e, r29	; 62
    b3d0:	df 91       	pop	r29
    b3d2:	cf 91       	pop	r28
    b3d4:	08 95       	ret

0000b3d6 <_ZL21USART4_initializationm>:
    b3d6:	cf 93       	push	r28
    b3d8:	df 93       	push	r29
    b3da:	00 d0       	rcall	.+0      	; 0xb3dc <_ZL21USART4_initializationm+0x6>
    b3dc:	00 d0       	rcall	.+0      	; 0xb3de <_ZL21USART4_initializationm+0x8>
    b3de:	cd b7       	in	r28, 0x3d	; 61
    b3e0:	de b7       	in	r29, 0x3e	; 62
    b3e2:	69 83       	std	Y+1, r22	; 0x01
    b3e4:	7a 83       	std	Y+2, r23	; 0x02
    b3e6:	8b 83       	std	Y+3, r24	; 0x03
    b3e8:	9c 83       	std	Y+4, r25	; 0x04
    b3ea:	80 e0       	ldi	r24, 0x00	; 0
    b3ec:	0e 94 3d 58 	call	0xb07a	; 0xb07a <PE1_set_dir>
    b3f0:	80 e0       	ldi	r24, 0x00	; 0
    b3f2:	0e 94 2e 58 	call	0xb05c	; 0xb05c <PE1_set_pull_mode>
    b3f6:	81 e0       	ldi	r24, 0x01	; 1
    b3f8:	0e 94 10 58 	call	0xb020	; 0xb020 <PE0_set_dir>
    b3fc:	81 e0       	ldi	r24, 0x01	; 1
    b3fe:	0e 94 1f 58 	call	0xb03e	; 0xb03e <PE0_set_level>
    b402:	89 81       	ldd	r24, Y+1	; 0x01
    b404:	9a 81       	ldd	r25, Y+2	; 0x02
    b406:	ab 81       	ldd	r26, Y+3	; 0x03
    b408:	bc 81       	ldd	r27, Y+4	; 0x04
    b40a:	bc 01       	movw	r22, r24
    b40c:	cd 01       	movw	r24, r26
    b40e:	0e 94 fd 6a 	call	0xd5fa	; 0xd5fa <USART4_init>
    b412:	00 00       	nop
    b414:	24 96       	adiw	r28, 0x04	; 4
    b416:	cd bf       	out	0x3d, r28	; 61
    b418:	de bf       	out	0x3e, r29	; 62
    b41a:	df 91       	pop	r29
    b41c:	cf 91       	pop	r28
    b41e:	08 95       	ret

0000b420 <serialbus_init>:
    b420:	cf 93       	push	r28
    b422:	df 93       	push	r29
    b424:	cd b7       	in	r28, 0x3d	; 61
    b426:	de b7       	in	r29, 0x3e	; 62
    b428:	27 97       	sbiw	r28, 0x07	; 7
    b42a:	cd bf       	out	0x3d, r28	; 61
    b42c:	de bf       	out	0x3e, r29	; 62
    b42e:	6b 83       	std	Y+3, r22	; 0x03
    b430:	7c 83       	std	Y+4, r23	; 0x04
    b432:	8d 83       	std	Y+5, r24	; 0x05
    b434:	9e 83       	std	Y+6, r25	; 0x06
    b436:	4f 83       	std	Y+7, r20	; 0x07
    b438:	4f e3       	ldi	r20, 0x3F	; 63
    b43a:	50 e0       	ldi	r21, 0x00	; 0
    b43c:	60 e0       	ldi	r22, 0x00	; 0
    b43e:	70 e0       	ldi	r23, 0x00	; 0
    b440:	87 e4       	ldi	r24, 0x47	; 71
    b442:	9a e4       	ldi	r25, 0x4A	; 74
    b444:	0e 94 d8 73 	call	0xe7b0	; 0xe7b0 <memset>
    b448:	19 82       	std	Y+1, r1	; 0x01
    b44a:	1a 82       	std	Y+2, r1	; 0x02
    b44c:	89 81       	ldd	r24, Y+1	; 0x01
    b44e:	9a 81       	ldd	r25, Y+2	; 0x02
    b450:	03 97       	sbiw	r24, 0x03	; 3
    b452:	94 f4       	brge	.+36     	; 0xb478 <serialbus_init+0x58>
    b454:	29 81       	ldd	r18, Y+1	; 0x01
    b456:	3a 81       	ldd	r19, Y+2	; 0x02
    b458:	49 e2       	ldi	r20, 0x29	; 41
    b45a:	42 9f       	mul	r20, r18
    b45c:	c0 01       	movw	r24, r0
    b45e:	43 9f       	mul	r20, r19
    b460:	90 0d       	add	r25, r0
    b462:	11 24       	eor	r1, r1
    b464:	84 53       	subi	r24, 0x34	; 52
    b466:	96 4b       	sbci	r25, 0xB6	; 182
    b468:	fc 01       	movw	r30, r24
    b46a:	10 82       	st	Z, r1
    b46c:	89 81       	ldd	r24, Y+1	; 0x01
    b46e:	9a 81       	ldd	r25, Y+2	; 0x02
    b470:	01 96       	adiw	r24, 0x01	; 1
    b472:	89 83       	std	Y+1, r24	; 0x01
    b474:	9a 83       	std	Y+2, r25	; 0x02
    b476:	ea cf       	rjmp	.-44     	; 0xb44c <serialbus_init+0x2c>
    b478:	8f 81       	ldd	r24, Y+7	; 0x07
    b47a:	86 30       	cpi	r24, 0x06	; 6
    b47c:	21 f4       	brne	.+8      	; 0xb486 <serialbus_init+0x66>
    b47e:	80 91 25 40 	lds	r24, 0x4025	; 0x804025 <g_serialbus_usart_number>
    b482:	87 30       	cpi	r24, 0x07	; 7
    b484:	b9 f4       	brne	.+46     	; 0xb4b4 <serialbus_init+0x94>
    b486:	8f 81       	ldd	r24, Y+7	; 0x07
    b488:	84 30       	cpi	r24, 0x04	; 4
    b48a:	49 f4       	brne	.+18     	; 0xb49e <serialbus_init+0x7e>
    b48c:	8b 81       	ldd	r24, Y+3	; 0x03
    b48e:	9c 81       	ldd	r25, Y+4	; 0x04
    b490:	ad 81       	ldd	r26, Y+5	; 0x05
    b492:	be 81       	ldd	r27, Y+6	; 0x06
    b494:	bc 01       	movw	r22, r24
    b496:	cd 01       	movw	r24, r26
    b498:	0e 94 eb 59 	call	0xb3d6	; 0xb3d6 <_ZL21USART4_initializationm>
    b49c:	08 c0       	rjmp	.+16     	; 0xb4ae <serialbus_init+0x8e>
    b49e:	8b 81       	ldd	r24, Y+3	; 0x03
    b4a0:	9c 81       	ldd	r25, Y+4	; 0x04
    b4a2:	ad 81       	ldd	r26, Y+5	; 0x05
    b4a4:	be 81       	ldd	r27, Y+6	; 0x06
    b4a6:	bc 01       	movw	r22, r24
    b4a8:	cd 01       	movw	r24, r26
    b4aa:	0e 94 c6 59 	call	0xb38c	; 0xb38c <_ZL21USART1_initializationm>
    b4ae:	8f 81       	ldd	r24, Y+7	; 0x07
    b4b0:	80 93 25 40 	sts	0x4025, r24	; 0x804025 <g_serialbus_usart_number>
    b4b4:	10 92 26 40 	sts	0x4026, r1	; 0x804026 <_ZL14g_bus_disabled>
    b4b8:	00 00       	nop
    b4ba:	27 96       	adiw	r28, 0x07	; 7
    b4bc:	cd bf       	out	0x3d, r28	; 61
    b4be:	de bf       	out	0x3e, r29	; 62
    b4c0:	df 91       	pop	r29
    b4c2:	cf 91       	pop	r28
    b4c4:	08 95       	ret

0000b4c6 <_Z19serialbus_send_textPc>:


bool serialbus_send_text(char* text)
{
    b4c6:	cf 93       	push	r28
    b4c8:	df 93       	push	r29
    b4ca:	cd b7       	in	r28, 0x3d	; 61
    b4cc:	de b7       	in	r29, 0x3e	; 62
    b4ce:	27 97       	sbiw	r28, 0x07	; 7
    b4d0:	cd bf       	out	0x3d, r28	; 61
    b4d2:	de bf       	out	0x3e, r29	; 62
    b4d4:	8e 83       	std	Y+6, r24	; 0x06
    b4d6:	9f 83       	std	Y+7, r25	; 0x07
	bool err = true;
    b4d8:	81 e0       	ldi	r24, 0x01	; 1
    b4da:	89 83       	std	Y+1, r24	; 0x01
	uint16_t tries = 200;
    b4dc:	88 ec       	ldi	r24, 0xC8	; 200
    b4de:	90 e0       	ldi	r25, 0x00	; 0
    b4e0:	8a 83       	std	Y+2, r24	; 0x02
    b4e2:	9b 83       	std	Y+3, r25	; 0x03

	if(g_bus_disabled)
    b4e4:	80 91 26 40 	lds	r24, 0x4026	; 0x804026 <_ZL14g_bus_disabled>
    b4e8:	88 23       	and	r24, r24
    b4ea:	11 f0       	breq	.+4      	; 0xb4f0 <_Z19serialbus_send_textPc+0x2a>
	{
		return( err);
    b4ec:	89 81       	ldd	r24, Y+1	; 0x01
    b4ee:	42 c0       	rjmp	.+132    	; 0xb574 <_Z19serialbus_send_textPc+0xae>
	}

	if(text)
    b4f0:	8e 81       	ldd	r24, Y+6	; 0x06
    b4f2:	9f 81       	ldd	r25, Y+7	; 0x07
    b4f4:	89 2b       	or	r24, r25
    b4f6:	e9 f1       	breq	.+122    	; 0xb572 <_Z19serialbus_send_textPc+0xac>
	{
		SerialbusTxBuffer* buff = nextEmptySBTxBuffer();
    b4f8:	0e 94 97 58 	call	0xb12e	; 0xb12e <nextEmptySBTxBuffer>
    b4fc:	8c 83       	std	Y+4, r24	; 0x04
    b4fe:	9d 83       	std	Y+5, r25	; 0x05

		while(!buff && tries)
    b500:	8c 81       	ldd	r24, Y+4	; 0x04
    b502:	9d 81       	ldd	r25, Y+5	; 0x05
    b504:	89 2b       	or	r24, r25
    b506:	01 f5       	brne	.+64     	; 0xb548 <_Z19serialbus_send_textPc+0x82>
    b508:	8a 81       	ldd	r24, Y+2	; 0x02
    b50a:	9b 81       	ldd	r25, Y+3	; 0x03
    b50c:	89 2b       	or	r24, r25
    b50e:	e1 f0       	breq	.+56     	; 0xb548 <_Z19serialbus_send_textPc+0x82>
		{
			while(serialbusTxInProgress() && tries)
    b510:	0e 94 7a 59 	call	0xb2f4	; 0xb2f4 <serialbusTxInProgress>
    b514:	88 23       	and	r24, r24
    b516:	31 f0       	breq	.+12     	; 0xb524 <_Z19serialbus_send_textPc+0x5e>
    b518:	8a 81       	ldd	r24, Y+2	; 0x02
    b51a:	9b 81       	ldd	r25, Y+3	; 0x03
    b51c:	89 2b       	or	r24, r25
    b51e:	11 f0       	breq	.+4      	; 0xb524 <_Z19serialbus_send_textPc+0x5e>
    b520:	81 e0       	ldi	r24, 0x01	; 1
    b522:	01 c0       	rjmp	.+2      	; 0xb526 <_Z19serialbus_send_textPc+0x60>
    b524:	80 e0       	ldi	r24, 0x00	; 0
    b526:	88 23       	and	r24, r24
    b528:	51 f0       	breq	.+20     	; 0xb53e <_Z19serialbus_send_textPc+0x78>
			{
				if(tries)
    b52a:	8a 81       	ldd	r24, Y+2	; 0x02
    b52c:	9b 81       	ldd	r25, Y+3	; 0x03
    b52e:	89 2b       	or	r24, r25
    b530:	79 f3       	breq	.-34     	; 0xb510 <_Z19serialbus_send_textPc+0x4a>
				{
					tries--;    /* wait until transmit finishes */
    b532:	8a 81       	ldd	r24, Y+2	; 0x02
    b534:	9b 81       	ldd	r25, Y+3	; 0x03
    b536:	01 97       	sbiw	r24, 0x01	; 1
    b538:	8a 83       	std	Y+2, r24	; 0x02
    b53a:	9b 83       	std	Y+3, r25	; 0x03
	{
		SerialbusTxBuffer* buff = nextEmptySBTxBuffer();

		while(!buff && tries)
		{
			while(serialbusTxInProgress() && tries)
    b53c:	e9 cf       	rjmp	.-46     	; 0xb510 <_Z19serialbus_send_textPc+0x4a>
				if(tries)
				{
					tries--;    /* wait until transmit finishes */
				}
			}
			buff = nextEmptySBTxBuffer();
    b53e:	0e 94 97 58 	call	0xb12e	; 0xb12e <nextEmptySBTxBuffer>
    b542:	8c 83       	std	Y+4, r24	; 0x04
    b544:	9d 83       	std	Y+5, r25	; 0x05

	if(text)
	{
		SerialbusTxBuffer* buff = nextEmptySBTxBuffer();

		while(!buff && tries)
    b546:	dc cf       	rjmp	.-72     	; 0xb500 <_Z19serialbus_send_textPc+0x3a>
				}
			}
			buff = nextEmptySBTxBuffer();
		}

		if(buff)
    b548:	8c 81       	ldd	r24, Y+4	; 0x04
    b54a:	9d 81       	ldd	r25, Y+5	; 0x05
    b54c:	89 2b       	or	r24, r25
    b54e:	89 f0       	breq	.+34     	; 0xb572 <_Z19serialbus_send_textPc+0xac>
		{
			sprintf(*buff, text);
    b550:	8f 81       	ldd	r24, Y+7	; 0x07
    b552:	8f 93       	push	r24
    b554:	8e 81       	ldd	r24, Y+6	; 0x06
    b556:	8f 93       	push	r24
    b558:	8d 81       	ldd	r24, Y+5	; 0x05
    b55a:	8f 93       	push	r24
    b55c:	8c 81       	ldd	r24, Y+4	; 0x04
    b55e:	8f 93       	push	r24
    b560:	0e 94 31 74 	call	0xe862	; 0xe862 <sprintf>
    b564:	0f 90       	pop	r0
    b566:	0f 90       	pop	r0
    b568:	0f 90       	pop	r0
    b56a:	0f 90       	pop	r0

			serialbus_start_tx();
    b56c:	0e 94 83 59 	call	0xb306	; 0xb306 <_Z18serialbus_start_txv>
			err = false;
    b570:	19 82       	std	Y+1, r1	; 0x01
		}
	}

	return(err);
    b572:	89 81       	ldd	r24, Y+1	; 0x01
}
    b574:	27 96       	adiw	r28, 0x07	; 7
    b576:	cd bf       	out	0x3d, r28	; 61
    b578:	de bf       	out	0x3e, r29	; 62
    b57a:	df 91       	pop	r29
    b57c:	cf 91       	pop	r28
    b57e:	08 95       	ret

0000b580 <sb_send_NewPrompt>:
/***********************************************************************************
 *  Support for creating and sending various Terminal Mode Serialbus messages is provided below.
 ************************************************************************************/

void sb_send_NewPrompt(void)
{
    b580:	cf 93       	push	r28
    b582:	df 93       	push	r29
    b584:	cd b7       	in	r28, 0x3d	; 61
    b586:	de b7       	in	r29, 0x3e	; 62
	if(g_bus_disabled)
    b588:	80 91 26 40 	lds	r24, 0x4026	; 0x804026 <_ZL14g_bus_disabled>
    b58c:	88 23       	and	r24, r24
    b58e:	39 f4       	brne	.+14     	; 0xb59e <sb_send_NewPrompt+0x1e>
	{
		return;
	}

	while(serialbus_send_text((char*)textPrompt))
    b590:	83 e8       	ldi	r24, 0x83	; 131
    b592:	96 e4       	ldi	r25, 0x46	; 70
    b594:	0e 94 63 5a 	call	0xb4c6	; 0xb4c6 <_Z19serialbus_send_textPc>
    b598:	88 23       	and	r24, r24
    b59a:	11 f0       	breq	.+4      	; 0xb5a0 <sb_send_NewPrompt+0x20>
    b59c:	f9 cf       	rjmp	.-14     	; 0xb590 <sb_send_NewPrompt+0x10>

void sb_send_NewPrompt(void)
{
	if(g_bus_disabled)
	{
		return;
    b59e:	00 00       	nop

	while(serialbus_send_text((char*)textPrompt))
	{
		;
	}
}
    b5a0:	df 91       	pop	r29
    b5a2:	cf 91       	pop	r28
    b5a4:	08 95       	ret

0000b5a6 <sb_send_NewLine>:

void sb_send_NewLine(void)
{
    b5a6:	cf 93       	push	r28
    b5a8:	df 93       	push	r29
    b5aa:	cd b7       	in	r28, 0x3d	; 61
    b5ac:	de b7       	in	r29, 0x3e	; 62
	if(g_bus_disabled)
    b5ae:	80 91 26 40 	lds	r24, 0x4026	; 0x804026 <_ZL14g_bus_disabled>
    b5b2:	88 23       	and	r24, r24
    b5b4:	29 f4       	brne	.+10     	; 0xb5c0 <sb_send_NewLine+0x1a>
	{
		return;
	}
	serialbus_send_text((char*)crlf);
    b5b6:	81 e8       	ldi	r24, 0x81	; 129
    b5b8:	96 e4       	ldi	r25, 0x46	; 70
    b5ba:	0e 94 63 5a 	call	0xb4c6	; 0xb4c6 <_Z19serialbus_send_textPc>
    b5be:	01 c0       	rjmp	.+2      	; 0xb5c2 <sb_send_NewLine+0x1c>

void sb_send_NewLine(void)
{
	if(g_bus_disabled)
	{
		return;
    b5c0:	00 00       	nop
	}
	serialbus_send_text((char*)crlf);
}
    b5c2:	df 91       	pop	r29
    b5c4:	cf 91       	pop	r28
    b5c6:	08 95       	ret

0000b5c8 <sb_echo_char>:

void sb_echo_char(uint8_t c)
{
    b5c8:	cf 93       	push	r28
    b5ca:	df 93       	push	r29
    b5cc:	1f 92       	push	r1
    b5ce:	cd b7       	in	r28, 0x3d	; 61
    b5d0:	de b7       	in	r29, 0x3e	; 62
    b5d2:	89 83       	std	Y+1, r24	; 0x01
	if(g_bus_disabled)
    b5d4:	80 91 26 40 	lds	r24, 0x4026	; 0x804026 <_ZL14g_bus_disabled>
    b5d8:	88 23       	and	r24, r24
    b5da:	51 f4       	brne	.+20     	; 0xb5f0 <sb_echo_char+0x28>
	{
		return;
	}
	g_tempMsgBuff[0] = c;
    b5dc:	89 81       	ldd	r24, Y+1	; 0x01
    b5de:	80 93 99 49 	sts	0x4999, r24	; 0x804999 <_ZL13g_tempMsgBuff>
	g_tempMsgBuff[1] = '\0';
    b5e2:	10 92 9a 49 	sts	0x499A, r1	; 0x80499a <_ZL13g_tempMsgBuff+0x1>
	serialbus_send_text(g_tempMsgBuff);
    b5e6:	89 e9       	ldi	r24, 0x99	; 153
    b5e8:	99 e4       	ldi	r25, 0x49	; 73
    b5ea:	0e 94 63 5a 	call	0xb4c6	; 0xb4c6 <_Z19serialbus_send_textPc>
    b5ee:	01 c0       	rjmp	.+2      	; 0xb5f2 <sb_echo_char+0x2a>

void sb_echo_char(uint8_t c)
{
	if(g_bus_disabled)
	{
		return;
    b5f0:	00 00       	nop
	}
	g_tempMsgBuff[0] = c;
	g_tempMsgBuff[1] = '\0';
	serialbus_send_text(g_tempMsgBuff);
}
    b5f2:	0f 90       	pop	r0
    b5f4:	df 91       	pop	r29
    b5f6:	cf 91       	pop	r28
    b5f8:	08 95       	ret

0000b5fa <sb_send_string>:

bool sb_send_string(char* str)
{
    b5fa:	cf 93       	push	r28
    b5fc:	df 93       	push	r29
    b5fe:	cd b7       	in	r28, 0x3d	; 61
    b600:	de b7       	in	r29, 0x3e	; 62
    b602:	e8 97       	sbiw	r28, 0x38	; 56
    b604:	cd bf       	out	0x3d, r28	; 61
    b606:	de bf       	out	0x3e, r29	; 62
    b608:	8f ab       	std	Y+55, r24	; 0x37
    b60a:	98 af       	std	Y+56, r25	; 0x38
	char buf[SERIALBUS_MAX_TX_MSG_LENGTH+1];
	bool err = false;
    b60c:	1b 82       	std	Y+3, r1	; 0x03
	uint16_t length, lengthToSend, lengthSent=0;
    b60e:	19 82       	std	Y+1, r1	; 0x01
    b610:	1a 82       	std	Y+2, r1	; 0x02
	bool done = false;
    b612:	1c 82       	std	Y+4, r1	; 0x04

	if(g_bus_disabled)
    b614:	80 91 26 40 	lds	r24, 0x4026	; 0x804026 <_ZL14g_bus_disabled>
    b618:	88 23       	and	r24, r24
    b61a:	11 f0       	breq	.+4      	; 0xb620 <sb_send_string+0x26>
	{
		return( true);
    b61c:	81 e0       	ldi	r24, 0x01	; 1
    b61e:	70 c0       	rjmp	.+224    	; 0xb700 <sb_send_string+0x106>
	}

	if(str == NULL)
    b620:	8f a9       	ldd	r24, Y+55	; 0x37
    b622:	98 ad       	ldd	r25, Y+56	; 0x38
    b624:	89 2b       	or	r24, r25
    b626:	11 f4       	brne	.+4      	; 0xb62c <sb_send_string+0x32>
	{
		return( true);
    b628:	81 e0       	ldi	r24, 0x01	; 1
    b62a:	6a c0       	rjmp	.+212    	; 0xb700 <sb_send_string+0x106>
	}

	if(!*str)
    b62c:	8f a9       	ldd	r24, Y+55	; 0x37
    b62e:	98 ad       	ldd	r25, Y+56	; 0x38
    b630:	fc 01       	movw	r30, r24
    b632:	80 81       	ld	r24, Z
    b634:	88 23       	and	r24, r24
    b636:	11 f4       	brne	.+4      	; 0xb63c <sb_send_string+0x42>
	{
		return(true);
    b638:	81 e0       	ldi	r24, 0x01	; 1
    b63a:	62 c0       	rjmp	.+196    	; 0xb700 <sb_send_string+0x106>
	}

	length = strlen(str);
    b63c:	8f a9       	ldd	r24, Y+55	; 0x37
    b63e:	98 ad       	ldd	r25, Y+56	; 0x38
    b640:	0e 94 fc 73 	call	0xe7f8	; 0xe7f8 <strlen>
    b644:	8d 83       	std	Y+5, r24	; 0x05
    b646:	9e 83       	std	Y+6, r25	; 0x06

	do
	{
		lengthToSend = MIN(length-lengthSent, (uint16_t)SERIALBUS_MAX_TX_MSG_LENGTH);
    b648:	2d 81       	ldd	r18, Y+5	; 0x05
    b64a:	3e 81       	ldd	r19, Y+6	; 0x06
    b64c:	89 81       	ldd	r24, Y+1	; 0x01
    b64e:	9a 81       	ldd	r25, Y+2	; 0x02
    b650:	a9 01       	movw	r20, r18
    b652:	48 1b       	sub	r20, r24
    b654:	59 0b       	sbc	r21, r25
    b656:	ca 01       	movw	r24, r20
    b658:	8f 83       	std	Y+7, r24	; 0x07
    b65a:	98 87       	std	Y+8, r25	; 0x08
    b65c:	89 e2       	ldi	r24, 0x29	; 41
    b65e:	90 e0       	ldi	r25, 0x00	; 0
    b660:	89 87       	std	Y+9, r24	; 0x09
    b662:	9a 87       	std	Y+10, r25	; 0x0a
    b664:	2f 81       	ldd	r18, Y+7	; 0x07
    b666:	38 85       	ldd	r19, Y+8	; 0x08
    b668:	89 85       	ldd	r24, Y+9	; 0x09
    b66a:	9a 85       	ldd	r25, Y+10	; 0x0a
    b66c:	28 17       	cp	r18, r24
    b66e:	39 07       	cpc	r19, r25
    b670:	18 f4       	brcc	.+6      	; 0xb678 <sb_send_string+0x7e>
    b672:	8f 81       	ldd	r24, Y+7	; 0x07
    b674:	98 85       	ldd	r25, Y+8	; 0x08
    b676:	02 c0       	rjmp	.+4      	; 0xb67c <sb_send_string+0x82>
    b678:	89 85       	ldd	r24, Y+9	; 0x09
    b67a:	9a 85       	ldd	r25, Y+10	; 0x0a
    b67c:	8b 87       	std	Y+11, r24	; 0x0b
    b67e:	9c 87       	std	Y+12, r25	; 0x0c
		strncpy(buf, &str[lengthSent], lengthToSend);
    b680:	2f a9       	ldd	r18, Y+55	; 0x37
    b682:	38 ad       	ldd	r19, Y+56	; 0x38
    b684:	89 81       	ldd	r24, Y+1	; 0x01
    b686:	9a 81       	ldd	r25, Y+2	; 0x02
    b688:	28 0f       	add	r18, r24
    b68a:	39 1f       	adc	r19, r25
    b68c:	4b 85       	ldd	r20, Y+11	; 0x0b
    b68e:	5c 85       	ldd	r21, Y+12	; 0x0c
    b690:	ce 01       	movw	r24, r28
    b692:	0d 96       	adiw	r24, 0x0d	; 13
    b694:	b9 01       	movw	r22, r18
    b696:	0e 94 05 74 	call	0xe80a	; 0xe80a <strncpy>

		buf[lengthToSend] = '\0';
    b69a:	9e 01       	movw	r18, r28
    b69c:	23 5f       	subi	r18, 0xF3	; 243
    b69e:	3f 4f       	sbci	r19, 0xFF	; 255
    b6a0:	8b 85       	ldd	r24, Y+11	; 0x0b
    b6a2:	9c 85       	ldd	r25, Y+12	; 0x0c
    b6a4:	82 0f       	add	r24, r18
    b6a6:	93 1f       	adc	r25, r19
    b6a8:	fc 01       	movw	r30, r24
    b6aa:	10 82       	st	Z, r1
		err = serialbus_send_text(buf);
    b6ac:	ce 01       	movw	r24, r28
    b6ae:	0d 96       	adiw	r24, 0x0d	; 13
    b6b0:	0e 94 63 5a 	call	0xb4c6	; 0xb4c6 <_Z19serialbus_send_textPc>
    b6b4:	8b 83       	std	Y+3, r24	; 0x03
		
		if(!err)
    b6b6:	9b 81       	ldd	r25, Y+3	; 0x03
    b6b8:	81 e0       	ldi	r24, 0x01	; 1
    b6ba:	89 27       	eor	r24, r25
    b6bc:	88 23       	and	r24, r24
    b6be:	29 f0       	breq	.+10     	; 0xb6ca <sb_send_string+0xd0>
		{
			while(serialbusTxInProgress())
    b6c0:	0e 94 7a 59 	call	0xb2f4	; 0xb2f4 <serialbusTxInProgress>
    b6c4:	88 23       	and	r24, r24
    b6c6:	09 f0       	breq	.+2      	; 0xb6ca <sb_send_string+0xd0>
    b6c8:	fb cf       	rjmp	.-10     	; 0xb6c0 <sb_send_string+0xc6>
			{
				;
			}
		}

		lengthSent += lengthToSend;
    b6ca:	29 81       	ldd	r18, Y+1	; 0x01
    b6cc:	3a 81       	ldd	r19, Y+2	; 0x02
    b6ce:	8b 85       	ldd	r24, Y+11	; 0x0b
    b6d0:	9c 85       	ldd	r25, Y+12	; 0x0c
    b6d2:	82 0f       	add	r24, r18
    b6d4:	93 1f       	adc	r25, r19
    b6d6:	89 83       	std	Y+1, r24	; 0x01
    b6d8:	9a 83       	std	Y+2, r25	; 0x02
		done = err || (lengthSent >= length);
    b6da:	8b 81       	ldd	r24, Y+3	; 0x03
    b6dc:	88 23       	and	r24, r24
    b6de:	39 f4       	brne	.+14     	; 0xb6ee <sb_send_string+0xf4>
    b6e0:	29 81       	ldd	r18, Y+1	; 0x01
    b6e2:	3a 81       	ldd	r19, Y+2	; 0x02
    b6e4:	8d 81       	ldd	r24, Y+5	; 0x05
    b6e6:	9e 81       	ldd	r25, Y+6	; 0x06
    b6e8:	28 17       	cp	r18, r24
    b6ea:	39 07       	cpc	r19, r25
    b6ec:	10 f0       	brcs	.+4      	; 0xb6f2 <sb_send_string+0xf8>
    b6ee:	81 e0       	ldi	r24, 0x01	; 1
    b6f0:	01 c0       	rjmp	.+2      	; 0xb6f4 <sb_send_string+0xfa>
    b6f2:	80 e0       	ldi	r24, 0x00	; 0
    b6f4:	8c 83       	std	Y+4, r24	; 0x04
	}while(!done);
    b6f6:	8c 81       	ldd	r24, Y+4	; 0x04
    b6f8:	88 23       	and	r24, r24
    b6fa:	09 f4       	brne	.+2      	; 0xb6fe <sb_send_string+0x104>
		return(true);
	}

	length = strlen(str);

	do
    b6fc:	a5 cf       	rjmp	.-182    	; 0xb648 <sb_send_string+0x4e>

		lengthSent += lengthToSend;
		done = err || (lengthSent >= length);
	}while(!done);

	return( err);
    b6fe:	8b 81       	ldd	r24, Y+3	; 0x03
}
    b700:	e8 96       	adiw	r28, 0x38	; 56
    b702:	cd bf       	out	0x3d, r28	; 61
    b704:	de bf       	out	0x3e, r29	; 62
    b706:	df 91       	pop	r29
    b708:	cf 91       	pop	r28
    b70a:	08 95       	ret

0000b70c <si5351_init>:
	void si5351_set_vcoB_freq(Frequency_Hz freq_VCO)
	{
		freqVCOB = freq_VCO;
		set_pll(freq_VCO, SI5351_PLLB);
		return;
	}
    b70c:	cf 93       	push	r28
    b70e:	df 93       	push	r29
    b710:	cd b7       	in	r28, 0x3d	; 61
    b712:	de b7       	in	r29, 0x3e	; 62
    b714:	28 97       	sbiw	r28, 0x08	; 8
    b716:	cd bf       	out	0x3d, r28	; 61
    b718:	de bf       	out	0x3e, r29	; 62
    b71a:	8c 83       	std	Y+4, r24	; 0x04
    b71c:	4d 83       	std	Y+5, r20	; 0x05
    b71e:	5e 83       	std	Y+6, r21	; 0x06
    b720:	6f 83       	std	Y+7, r22	; 0x07
    b722:	78 87       	std	Y+8, r23	; 0x08
    b724:	0e 94 ae 4b 	call	0x975c	; 0x975c <I2C_1_Init>
    b728:	10 92 c9 4a 	sts	0x4AC9, r1	; 0x804ac9 <_ZL8freqVCOB>
    b72c:	10 92 ca 4a 	sts	0x4ACA, r1	; 0x804aca <_ZL8freqVCOB+0x1>
    b730:	10 92 cb 4a 	sts	0x4ACB, r1	; 0x804acb <_ZL8freqVCOB+0x2>
    b734:	10 92 cc 4a 	sts	0x4ACC, r1	; 0x804acc <_ZL8freqVCOB+0x3>
    b738:	80 e4       	ldi	r24, 0x40	; 64
    b73a:	98 e7       	ldi	r25, 0x78	; 120
    b73c:	ad e7       	ldi	r26, 0x7D	; 125
    b73e:	b1 e0       	ldi	r27, 0x01	; 1
    b740:	80 93 27 40 	sts	0x4027, r24	; 0x804027 <_ZL9xtal_freq>
    b744:	90 93 28 40 	sts	0x4028, r25	; 0x804028 <_ZL9xtal_freq+0x1>
    b748:	a0 93 29 40 	sts	0x4029, r26	; 0x804029 <_ZL9xtal_freq+0x2>
    b74c:	b0 93 2a 40 	sts	0x402A, r27	; 0x80402a <_ZL9xtal_freq+0x3>
    b750:	10 92 cd 4a 	sts	0x4ACD, r1	; 0x804acd <_ZL17enabledClocksMask>
    b754:	8f ef       	ldi	r24, 0xFF	; 255
    b756:	8a 83       	std	Y+2, r24	; 0x02
    b758:	ce 01       	movw	r24, r28
    b75a:	02 96       	adiw	r24, 0x02	; 2
    b75c:	41 e0       	ldi	r20, 0x01	; 1
    b75e:	bc 01       	movw	r22, r24
    b760:	83 e0       	ldi	r24, 0x03	; 3
    b762:	0e 94 8a 63 	call	0xc714	; 0xc714 <_Z17si5351_write_bulkhPhh>
    b766:	80 93 db 4a 	sts	0x4ADB, r24	; 0x804adb <_ZZ11si5351_initE3err>
    b76a:	80 91 db 4a 	lds	r24, 0x4ADB	; 0x804adb <_ZZ11si5351_initE3err>
    b76e:	88 23       	and	r24, r24
    b770:	19 f0       	breq	.+6      	; 0xb778 <si5351_init+0x6c>
    b772:	80 91 db 4a 	lds	r24, 0x4ADB	; 0x804adb <_ZZ11si5351_initE3err>
    b776:	92 c0       	rjmp	.+292    	; 0xb89c <si5351_init+0x190>
    b778:	8c ec       	ldi	r24, 0xCC	; 204
    b77a:	8a 83       	std	Y+2, r24	; 0x02
    b77c:	ce 01       	movw	r24, r28
    b77e:	02 96       	adiw	r24, 0x02	; 2
    b780:	41 e0       	ldi	r20, 0x01	; 1
    b782:	bc 01       	movw	r22, r24
    b784:	80 e1       	ldi	r24, 0x10	; 16
    b786:	0e 94 8a 63 	call	0xc714	; 0xc714 <_Z17si5351_write_bulkhPhh>
    b78a:	98 2f       	mov	r25, r24
    b78c:	80 91 db 4a 	lds	r24, 0x4ADB	; 0x804adb <_ZZ11si5351_initE3err>
    b790:	89 2b       	or	r24, r25
    b792:	80 93 db 4a 	sts	0x4ADB, r24	; 0x804adb <_ZZ11si5351_initE3err>
    b796:	ce 01       	movw	r24, r28
    b798:	02 96       	adiw	r24, 0x02	; 2
    b79a:	41 e0       	ldi	r20, 0x01	; 1
    b79c:	bc 01       	movw	r22, r24
    b79e:	81 e1       	ldi	r24, 0x11	; 17
    b7a0:	0e 94 8a 63 	call	0xc714	; 0xc714 <_Z17si5351_write_bulkhPhh>
    b7a4:	98 2f       	mov	r25, r24
    b7a6:	80 91 db 4a 	lds	r24, 0x4ADB	; 0x804adb <_ZZ11si5351_initE3err>
    b7aa:	89 2b       	or	r24, r25
    b7ac:	80 93 db 4a 	sts	0x4ADB, r24	; 0x804adb <_ZZ11si5351_initE3err>
    b7b0:	ce 01       	movw	r24, r28
    b7b2:	02 96       	adiw	r24, 0x02	; 2
    b7b4:	41 e0       	ldi	r20, 0x01	; 1
    b7b6:	bc 01       	movw	r22, r24
    b7b8:	82 e1       	ldi	r24, 0x12	; 18
    b7ba:	0e 94 8a 63 	call	0xc714	; 0xc714 <_Z17si5351_write_bulkhPhh>
    b7be:	98 2f       	mov	r25, r24
    b7c0:	80 91 db 4a 	lds	r24, 0x4ADB	; 0x804adb <_ZZ11si5351_initE3err>
    b7c4:	89 2b       	or	r24, r25
    b7c6:	80 93 db 4a 	sts	0x4ADB, r24	; 0x804adb <_ZZ11si5351_initE3err>
    b7ca:	82 e1       	ldi	r24, 0x12	; 18
    b7cc:	89 83       	std	Y+1, r24	; 0x01
    b7ce:	99 81       	ldd	r25, Y+1	; 0x01
    b7d0:	8c 81       	ldd	r24, Y+4	; 0x04
    b7d2:	89 2b       	or	r24, r25
    b7d4:	89 83       	std	Y+1, r24	; 0x01
    b7d6:	89 81       	ldd	r24, Y+1	; 0x01
    b7d8:	8a 83       	std	Y+2, r24	; 0x02
    b7da:	ce 01       	movw	r24, r28
    b7dc:	02 96       	adiw	r24, 0x02	; 2
    b7de:	41 e0       	ldi	r20, 0x01	; 1
    b7e0:	bc 01       	movw	r22, r24
    b7e2:	87 eb       	ldi	r24, 0xB7	; 183
    b7e4:	0e 94 8a 63 	call	0xc714	; 0xc714 <_Z17si5351_write_bulkhPhh>
    b7e8:	98 2f       	mov	r25, r24
    b7ea:	80 91 db 4a 	lds	r24, 0x4ADB	; 0x804adb <_ZZ11si5351_initE3err>
    b7ee:	89 2b       	or	r24, r25
    b7f0:	80 93 db 4a 	sts	0x4ADB, r24	; 0x804adb <_ZZ11si5351_initE3err>
    b7f4:	8d 81       	ldd	r24, Y+5	; 0x05
    b7f6:	9e 81       	ldd	r25, Y+6	; 0x06
    b7f8:	af 81       	ldd	r26, Y+7	; 0x07
    b7fa:	b8 85       	ldd	r27, Y+8	; 0x08
    b7fc:	89 2b       	or	r24, r25
    b7fe:	8a 2b       	or	r24, r26
    b800:	8b 2b       	or	r24, r27
    b802:	41 f4       	brne	.+16     	; 0xb814 <si5351_init+0x108>
    b804:	80 e4       	ldi	r24, 0x40	; 64
    b806:	98 e7       	ldi	r25, 0x78	; 120
    b808:	ad e7       	ldi	r26, 0x7D	; 125
    b80a:	b1 e0       	ldi	r27, 0x01	; 1
    b80c:	8d 83       	std	Y+5, r24	; 0x05
    b80e:	9e 83       	std	Y+6, r25	; 0x06
    b810:	af 83       	std	Y+7, r26	; 0x07
    b812:	b8 87       	std	Y+8, r27	; 0x08
    b814:	80 91 27 40 	lds	r24, 0x4027	; 0x804027 <_ZL9xtal_freq>
    b818:	90 91 28 40 	lds	r25, 0x4028	; 0x804028 <_ZL9xtal_freq+0x1>
    b81c:	a0 91 29 40 	lds	r26, 0x4029	; 0x804029 <_ZL9xtal_freq+0x2>
    b820:	b0 91 2a 40 	lds	r27, 0x402A	; 0x80402a <_ZL9xtal_freq+0x3>
    b824:	2d 81       	ldd	r18, Y+5	; 0x05
    b826:	3e 81       	ldd	r19, Y+6	; 0x06
    b828:	4f 81       	ldd	r20, Y+7	; 0x07
    b82a:	58 85       	ldd	r21, Y+8	; 0x08
    b82c:	28 17       	cp	r18, r24
    b82e:	39 07       	cpc	r19, r25
    b830:	4a 07       	cpc	r20, r26
    b832:	5b 07       	cpc	r21, r27
    b834:	59 f1       	breq	.+86     	; 0xb88c <si5351_init+0x180>
    b836:	ce 01       	movw	r24, r28
    b838:	02 96       	adiw	r24, 0x02	; 2
    b83a:	41 e0       	ldi	r20, 0x01	; 1
    b83c:	bc 01       	movw	r22, r24
    b83e:	8f e0       	ldi	r24, 0x0F	; 15
    b840:	0e 94 bc 63 	call	0xc778	; 0xc778 <_Z16si5351_read_bulkhPhh>
    b844:	88 23       	and	r24, r24
    b846:	11 f0       	breq	.+4      	; 0xb84c <si5351_init+0x140>
    b848:	81 e0       	ldi	r24, 0x01	; 1
    b84a:	28 c0       	rjmp	.+80     	; 0xb89c <si5351_init+0x190>
    b84c:	8a 81       	ldd	r24, Y+2	; 0x02
    b84e:	89 83       	std	Y+1, r24	; 0x01
    b850:	89 81       	ldd	r24, Y+1	; 0x01
    b852:	8f 73       	andi	r24, 0x3F	; 63
    b854:	89 83       	std	Y+1, r24	; 0x01
    b856:	8d 81       	ldd	r24, Y+5	; 0x05
    b858:	9e 81       	ldd	r25, Y+6	; 0x06
    b85a:	af 81       	ldd	r26, Y+7	; 0x07
    b85c:	b8 85       	ldd	r27, Y+8	; 0x08
    b85e:	80 93 27 40 	sts	0x4027, r24	; 0x804027 <_ZL9xtal_freq>
    b862:	90 93 28 40 	sts	0x4028, r25	; 0x804028 <_ZL9xtal_freq+0x1>
    b866:	a0 93 29 40 	sts	0x4029, r26	; 0x804029 <_ZL9xtal_freq+0x2>
    b86a:	b0 93 2a 40 	sts	0x402A, r27	; 0x80402a <_ZL9xtal_freq+0x3>
    b86e:	89 81       	ldd	r24, Y+1	; 0x01
    b870:	8a 83       	std	Y+2, r24	; 0x02
    b872:	ce 01       	movw	r24, r28
    b874:	02 96       	adiw	r24, 0x02	; 2
    b876:	41 e0       	ldi	r20, 0x01	; 1
    b878:	bc 01       	movw	r22, r24
    b87a:	8f e0       	ldi	r24, 0x0F	; 15
    b87c:	0e 94 8a 63 	call	0xc714	; 0xc714 <_Z17si5351_write_bulkhPhh>
    b880:	98 2f       	mov	r25, r24
    b882:	80 91 db 4a 	lds	r24, 0x4ADB	; 0x804adb <_ZZ11si5351_initE3err>
    b886:	89 2b       	or	r24, r25
    b888:	80 93 db 4a 	sts	0x4ADB, r24	; 0x804adb <_ZZ11si5351_initE3err>
    b88c:	90 91 db 4a 	lds	r25, 0x4ADB	; 0x804adb <_ZZ11si5351_initE3err>
    b890:	81 e0       	ldi	r24, 0x01	; 1
    b892:	89 27       	eor	r24, r25
    b894:	80 93 da 4a 	sts	0x4ADA, r24	; 0x804ada <g_si5351_initialized>
    b898:	80 91 db 4a 	lds	r24, 0x4ADB	; 0x804adb <_ZZ11si5351_initE3err>
    b89c:	28 96       	adiw	r28, 0x08	; 8
    b89e:	cd bf       	out	0x3d, r28	; 61
    b8a0:	de bf       	out	0x3e, r29	; 62
    b8a2:	df 91       	pop	r29
    b8a4:	cf 91       	pop	r28
    b8a6:	08 95       	ret

0000b8a8 <si5351_set_freq>:
    b8a8:	8f 92       	push	r8
    b8aa:	af 92       	push	r10
    b8ac:	cf 92       	push	r12
    b8ae:	df 92       	push	r13
    b8b0:	ef 92       	push	r14
    b8b2:	ff 92       	push	r15
    b8b4:	0f 93       	push	r16
    b8b6:	1f 93       	push	r17
    b8b8:	cf 93       	push	r28
    b8ba:	df 93       	push	r29
    b8bc:	cd b7       	in	r28, 0x3d	; 61
    b8be:	de b7       	in	r29, 0x3e	; 62
    b8c0:	6d 97       	sbiw	r28, 0x1d	; 29
    b8c2:	cd bf       	out	0x3d, r28	; 61
    b8c4:	de bf       	out	0x3e, r29	; 62
    b8c6:	68 8f       	std	Y+24, r22	; 0x18
    b8c8:	79 8f       	std	Y+25, r23	; 0x19
    b8ca:	8a 8f       	std	Y+26, r24	; 0x1a
    b8cc:	9b 8f       	std	Y+27, r25	; 0x1b
    b8ce:	4c 8f       	std	Y+28, r20	; 0x1c
    b8d0:	2d 8f       	std	Y+29, r18	; 0x1d
    b8d2:	19 82       	std	Y+1, r1	; 0x01
    b8d4:	1a 82       	std	Y+2, r1	; 0x02
    b8d6:	1b 82       	std	Y+3, r1	; 0x03
    b8d8:	1c 82       	std	Y+4, r1	; 0x04
    b8da:	1f 82       	std	Y+7, r1	; 0x07
    b8dc:	1c 8a       	std	Y+20, r1	; 0x14
    b8de:	1d 8a       	std	Y+21, r1	; 0x15
    b8e0:	90 91 da 4a 	lds	r25, 0x4ADA	; 0x804ada <g_si5351_initialized>
    b8e4:	81 e0       	ldi	r24, 0x01	; 1
    b8e6:	89 27       	eor	r24, r25
    b8e8:	88 23       	and	r24, r24
    b8ea:	11 f0       	breq	.+4      	; 0xb8f0 <si5351_set_freq+0x48>
    b8ec:	81 e0       	ldi	r24, 0x01	; 1
    b8ee:	6f c1       	rjmp	.+734    	; 0xbbce <si5351_set_freq+0x326>
    b8f0:	88 8d       	ldd	r24, Y+24	; 0x18
    b8f2:	99 8d       	ldd	r25, Y+25	; 0x19
    b8f4:	aa 8d       	ldd	r26, Y+26	; 0x1a
    b8f6:	bb 8d       	ldd	r27, Y+27	; 0x1b
    b8f8:	80 34       	cpi	r24, 0x40	; 64
    b8fa:	92 44       	sbci	r25, 0x42	; 66
    b8fc:	af 40       	sbci	r26, 0x0F	; 15
    b8fe:	b1 05       	cpc	r27, r1
    b900:	08 f1       	brcs	.+66     	; 0xb944 <si5351_set_freq+0x9c>
    b902:	88 8d       	ldd	r24, Y+24	; 0x18
    b904:	99 8d       	ldd	r25, Y+25	; 0x19
    b906:	aa 8d       	ldd	r26, Y+26	; 0x1a
    b908:	bb 8d       	ldd	r27, Y+27	; 0x1b
    b90a:	24 e6       	ldi	r18, 0x64	; 100
    b90c:	30 e0       	ldi	r19, 0x00	; 0
    b90e:	40 e0       	ldi	r20, 0x00	; 0
    b910:	50 e0       	ldi	r21, 0x00	; 0
    b912:	bc 01       	movw	r22, r24
    b914:	cd 01       	movw	r24, r26
    b916:	0e 94 02 72 	call	0xe404	; 0xe404 <__udivmodsi4>
    b91a:	da 01       	movw	r26, r20
    b91c:	c9 01       	movw	r24, r18
    b91e:	88 8f       	std	Y+24, r24	; 0x18
    b920:	99 8f       	std	Y+25, r25	; 0x19
    b922:	aa 8f       	std	Y+26, r26	; 0x1a
    b924:	bb 8f       	std	Y+27, r27	; 0x1b
    b926:	28 8d       	ldd	r18, Y+24	; 0x18
    b928:	39 8d       	ldd	r19, Y+25	; 0x19
    b92a:	4a 8d       	ldd	r20, Y+26	; 0x1a
    b92c:	5b 8d       	ldd	r21, Y+27	; 0x1b
    b92e:	84 e6       	ldi	r24, 0x64	; 100
    b930:	90 e0       	ldi	r25, 0x00	; 0
    b932:	dc 01       	movw	r26, r24
    b934:	0e 94 5b 72 	call	0xe4b6	; 0xe4b6 <__muluhisi3>
    b938:	dc 01       	movw	r26, r24
    b93a:	cb 01       	movw	r24, r22
    b93c:	88 8f       	std	Y+24, r24	; 0x18
    b93e:	99 8f       	std	Y+25, r25	; 0x19
    b940:	aa 8f       	std	Y+26, r26	; 0x1a
    b942:	bb 8f       	std	Y+27, r27	; 0x1b
    b944:	8c 8d       	ldd	r24, Y+28	; 0x1c
    b946:	88 2f       	mov	r24, r24
    b948:	90 e0       	ldi	r25, 0x00	; 0
    b94a:	81 30       	cpi	r24, 0x01	; 1
    b94c:	91 05       	cpc	r25, r1
    b94e:	e9 f0       	breq	.+58     	; 0xb98a <si5351_set_freq+0xe2>
    b950:	82 30       	cpi	r24, 0x02	; 2
    b952:	91 05       	cpc	r25, r1
    b954:	09 f4       	brne	.+2      	; 0xb958 <si5351_set_freq+0xb0>
    b956:	3f c0       	rjmp	.+126    	; 0xb9d6 <si5351_set_freq+0x12e>
    b958:	89 2b       	or	r24, r25
    b95a:	09 f0       	breq	.+2      	; 0xb95e <si5351_set_freq+0xb6>
    b95c:	62 c0       	rjmp	.+196    	; 0xba22 <si5351_set_freq+0x17a>
    b95e:	80 91 cd 4a 	lds	r24, 0x4ACD	; 0x804acd <_ZL17enabledClocksMask>
    b962:	81 60       	ori	r24, 0x01	; 1
    b964:	80 93 cd 4a 	sts	0x4ACD, r24	; 0x804acd <_ZL17enabledClocksMask>
    b968:	80 e1       	ldi	r24, 0x10	; 16
    b96a:	8e 83       	std	Y+6, r24	; 0x06
    b96c:	81 e0       	ldi	r24, 0x01	; 1
    b96e:	8d 83       	std	Y+5, r24	; 0x05
    b970:	88 8d       	ldd	r24, Y+24	; 0x18
    b972:	99 8d       	ldd	r25, Y+25	; 0x19
    b974:	aa 8d       	ldd	r26, Y+26	; 0x1a
    b976:	bb 8d       	ldd	r27, Y+27	; 0x1b
    b978:	80 93 ce 4a 	sts	0x4ACE, r24	; 0x804ace <_ZL9clock_out>
    b97c:	90 93 cf 4a 	sts	0x4ACF, r25	; 0x804acf <_ZL9clock_out+0x1>
    b980:	a0 93 d0 4a 	sts	0x4AD0, r26	; 0x804ad0 <_ZL9clock_out+0x2>
    b984:	b0 93 d1 4a 	sts	0x4AD1, r27	; 0x804ad1 <_ZL9clock_out+0x3>
    b988:	4e c0       	rjmp	.+156    	; 0xba26 <si5351_set_freq+0x17e>
    b98a:	80 91 cd 4a 	lds	r24, 0x4ACD	; 0x804acd <_ZL17enabledClocksMask>
    b98e:	82 60       	ori	r24, 0x02	; 2
    b990:	80 93 cd 4a 	sts	0x4ACD, r24	; 0x804acd <_ZL17enabledClocksMask>
    b994:	81 e1       	ldi	r24, 0x11	; 17
    b996:	8e 83       	std	Y+6, r24	; 0x06
    b998:	80 91 cd 4a 	lds	r24, 0x4ACD	; 0x804acd <_ZL17enabledClocksMask>
    b99c:	80 95       	com	r24
    b99e:	8a 6f       	ori	r24, 0xFA	; 250
    b9a0:	8e 8b       	std	Y+22, r24	; 0x16
    b9a2:	ce 01       	movw	r24, r28
    b9a4:	46 96       	adiw	r24, 0x16	; 22
    b9a6:	41 e0       	ldi	r20, 0x01	; 1
    b9a8:	bc 01       	movw	r22, r24
    b9aa:	83 e0       	ldi	r24, 0x03	; 3
    b9ac:	0e 94 8a 63 	call	0xc714	; 0xc714 <_Z17si5351_write_bulkhPhh>
    b9b0:	88 23       	and	r24, r24
    b9b2:	11 f0       	breq	.+4      	; 0xb9b8 <si5351_set_freq+0x110>
    b9b4:	81 e0       	ldi	r24, 0x01	; 1
    b9b6:	0b c1       	rjmp	.+534    	; 0xbbce <si5351_set_freq+0x326>
    b9b8:	82 e0       	ldi	r24, 0x02	; 2
    b9ba:	8d 83       	std	Y+5, r24	; 0x05
    b9bc:	88 8d       	ldd	r24, Y+24	; 0x18
    b9be:	99 8d       	ldd	r25, Y+25	; 0x19
    b9c0:	aa 8d       	ldd	r26, Y+26	; 0x1a
    b9c2:	bb 8d       	ldd	r27, Y+27	; 0x1b
    b9c4:	80 93 d2 4a 	sts	0x4AD2, r24	; 0x804ad2 <_ZL9clock_out+0x4>
    b9c8:	90 93 d3 4a 	sts	0x4AD3, r25	; 0x804ad3 <_ZL9clock_out+0x5>
    b9cc:	a0 93 d4 4a 	sts	0x4AD4, r26	; 0x804ad4 <_ZL9clock_out+0x6>
    b9d0:	b0 93 d5 4a 	sts	0x4AD5, r27	; 0x804ad5 <_ZL9clock_out+0x7>
    b9d4:	28 c0       	rjmp	.+80     	; 0xba26 <si5351_set_freq+0x17e>
    b9d6:	80 91 cd 4a 	lds	r24, 0x4ACD	; 0x804acd <_ZL17enabledClocksMask>
    b9da:	84 60       	ori	r24, 0x04	; 4
    b9dc:	80 93 cd 4a 	sts	0x4ACD, r24	; 0x804acd <_ZL17enabledClocksMask>
    b9e0:	82 e1       	ldi	r24, 0x12	; 18
    b9e2:	8e 83       	std	Y+6, r24	; 0x06
    b9e4:	80 91 cd 4a 	lds	r24, 0x4ACD	; 0x804acd <_ZL17enabledClocksMask>
    b9e8:	80 95       	com	r24
    b9ea:	8c 6f       	ori	r24, 0xFC	; 252
    b9ec:	8e 8b       	std	Y+22, r24	; 0x16
    b9ee:	ce 01       	movw	r24, r28
    b9f0:	46 96       	adiw	r24, 0x16	; 22
    b9f2:	41 e0       	ldi	r20, 0x01	; 1
    b9f4:	bc 01       	movw	r22, r24
    b9f6:	83 e0       	ldi	r24, 0x03	; 3
    b9f8:	0e 94 8a 63 	call	0xc714	; 0xc714 <_Z17si5351_write_bulkhPhh>
    b9fc:	88 23       	and	r24, r24
    b9fe:	11 f0       	breq	.+4      	; 0xba04 <si5351_set_freq+0x15c>
    ba00:	81 e0       	ldi	r24, 0x01	; 1
    ba02:	e5 c0       	rjmp	.+458    	; 0xbbce <si5351_set_freq+0x326>
    ba04:	82 e0       	ldi	r24, 0x02	; 2
    ba06:	8d 83       	std	Y+5, r24	; 0x05
    ba08:	88 8d       	ldd	r24, Y+24	; 0x18
    ba0a:	99 8d       	ldd	r25, Y+25	; 0x19
    ba0c:	aa 8d       	ldd	r26, Y+26	; 0x1a
    ba0e:	bb 8d       	ldd	r27, Y+27	; 0x1b
    ba10:	80 93 d6 4a 	sts	0x4AD6, r24	; 0x804ad6 <_ZL9clock_out+0x8>
    ba14:	90 93 d7 4a 	sts	0x4AD7, r25	; 0x804ad7 <_ZL9clock_out+0x9>
    ba18:	a0 93 d8 4a 	sts	0x4AD8, r26	; 0x804ad8 <_ZL9clock_out+0xa>
    ba1c:	b0 93 d9 4a 	sts	0x4AD9, r27	; 0x804ad9 <_ZL9clock_out+0xb>
    ba20:	02 c0       	rjmp	.+4      	; 0xba26 <si5351_set_freq+0x17e>
    ba22:	81 e0       	ldi	r24, 0x01	; 1
    ba24:	d4 c0       	rjmp	.+424    	; 0xbbce <si5351_set_freq+0x326>
    ba26:	8d 81       	ldd	r24, Y+5	; 0x05
    ba28:	81 30       	cpi	r24, 0x01	; 1
    ba2a:	61 f0       	breq	.+24     	; 0xba44 <si5351_set_freq+0x19c>
    ba2c:	80 91 c9 4a 	lds	r24, 0x4AC9	; 0x804ac9 <_ZL8freqVCOB>
    ba30:	90 91 ca 4a 	lds	r25, 0x4ACA	; 0x804aca <_ZL8freqVCOB+0x1>
    ba34:	a0 91 cb 4a 	lds	r26, 0x4ACB	; 0x804acb <_ZL8freqVCOB+0x2>
    ba38:	b0 91 cc 4a 	lds	r27, 0x4ACC	; 0x804acc <_ZL8freqVCOB+0x3>
    ba3c:	89 2b       	or	r24, r25
    ba3e:	8a 2b       	or	r24, r26
    ba40:	8b 2b       	or	r24, r27
    ba42:	c9 f4       	brne	.+50     	; 0xba76 <si5351_set_freq+0x1ce>
    ba44:	be 01       	movw	r22, r28
    ba46:	6b 5e       	subi	r22, 0xEB	; 235
    ba48:	7f 4f       	sbci	r23, 0xFF	; 255
    ba4a:	9e 01       	movw	r18, r28
    ba4c:	2c 5e       	subi	r18, 0xEC	; 236
    ba4e:	3f 4f       	sbci	r19, 0xFF	; 255
    ba50:	ae 01       	movw	r20, r28
    ba52:	48 5f       	subi	r20, 0xF8	; 248
    ba54:	5f 4f       	sbci	r21, 0xFF	; 255
    ba56:	88 8d       	ldd	r24, Y+24	; 0x18
    ba58:	99 8d       	ldd	r25, Y+25	; 0x19
    ba5a:	aa 8d       	ldd	r26, Y+26	; 0x1a
    ba5c:	bb 8d       	ldd	r27, Y+27	; 0x1b
    ba5e:	8b 01       	movw	r16, r22
    ba60:	bc 01       	movw	r22, r24
    ba62:	cd 01       	movw	r24, r26
    ba64:	0e 94 ff 60 	call	0xc1fe	; 0xc1fe <_Z15multisynth_calcmP13u_si5351_regsPbS1_>
    ba68:	dc 01       	movw	r26, r24
    ba6a:	cb 01       	movw	r24, r22
    ba6c:	89 83       	std	Y+1, r24	; 0x01
    ba6e:	9a 83       	std	Y+2, r25	; 0x02
    ba70:	ab 83       	std	Y+3, r26	; 0x03
    ba72:	bc 83       	std	Y+4, r27	; 0x04
    ba74:	18 c0       	rjmp	.+48     	; 0xbaa6 <si5351_set_freq+0x1fe>
    ba76:	be 01       	movw	r22, r28
    ba78:	6b 5e       	subi	r22, 0xEB	; 235
    ba7a:	7f 4f       	sbci	r23, 0xFF	; 255
    ba7c:	9e 01       	movw	r18, r28
    ba7e:	2c 5e       	subi	r18, 0xEC	; 236
    ba80:	3f 4f       	sbci	r19, 0xFF	; 255
    ba82:	ae 01       	movw	r20, r28
    ba84:	48 5f       	subi	r20, 0xF8	; 248
    ba86:	5f 4f       	sbci	r21, 0xFF	; 255
    ba88:	88 8d       	ldd	r24, Y+24	; 0x18
    ba8a:	99 8d       	ldd	r25, Y+25	; 0x19
    ba8c:	aa 8d       	ldd	r26, Y+26	; 0x1a
    ba8e:	bb 8d       	ldd	r27, Y+27	; 0x1b
    ba90:	8b 01       	movw	r16, r22
    ba92:	bc 01       	movw	r22, r24
    ba94:	cd 01       	movw	r24, r26
    ba96:	0e 94 09 62 	call	0xc412	; 0xc412 <_Z19multisynth_estimatemP13u_si5351_regsPbS1_>
    ba9a:	dc 01       	movw	r26, r24
    ba9c:	cb 01       	movw	r24, r22
    ba9e:	88 8f       	std	Y+24, r24	; 0x18
    baa0:	99 8f       	std	Y+25, r25	; 0x19
    baa2:	aa 8f       	std	Y+26, r26	; 0x1a
    baa4:	bb 8f       	std	Y+27, r27	; 0x1b
    baa6:	6d 81       	ldd	r22, Y+5	; 0x05
    baa8:	8c 8d       	ldd	r24, Y+28	; 0x1c
    baaa:	0e 94 ee 63 	call	0xc7dc	; 0xc7dc <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll>
    baae:	88 23       	and	r24, r24
    bab0:	11 f0       	breq	.+4      	; 0xbab6 <si5351_set_freq+0x20e>
    bab2:	81 e0       	ldi	r24, 0x01	; 1
    bab4:	8c c0       	rjmp	.+280    	; 0xbbce <si5351_set_freq+0x326>
    bab6:	8d 89       	ldd	r24, Y+21	; 0x15
    bab8:	9c 89       	ldd	r25, Y+20	; 0x14
    baba:	8f 93       	push	r24
    babc:	8f 80       	ldd	r8, Y+7	; 0x07
    babe:	a9 2e       	mov	r10, r25
    bac0:	c8 84       	ldd	r12, Y+8	; 0x08
    bac2:	d9 84       	ldd	r13, Y+9	; 0x09
    bac4:	ea 84       	ldd	r14, Y+10	; 0x0a
    bac6:	fb 84       	ldd	r15, Y+11	; 0x0b
    bac8:	0c 85       	ldd	r16, Y+12	; 0x0c
    baca:	1d 85       	ldd	r17, Y+13	; 0x0d
    bacc:	2e 85       	ldd	r18, Y+14	; 0x0e
    bace:	3f 85       	ldd	r19, Y+15	; 0x0f
    bad0:	48 89       	ldd	r20, Y+16	; 0x10
    bad2:	59 89       	ldd	r21, Y+17	; 0x11
    bad4:	6a 89       	ldd	r22, Y+18	; 0x12
    bad6:	7b 89       	ldd	r23, Y+19	; 0x13
    bad8:	8c 8d       	ldd	r24, Y+28	; 0x1c
    bada:	0e 94 2b 64 	call	0xc856	; 0xc856 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb>
    bade:	0f 90       	pop	r0
    bae0:	88 23       	and	r24, r24
    bae2:	11 f0       	breq	.+4      	; 0xbae8 <si5351_set_freq+0x240>
    bae4:	81 e0       	ldi	r24, 0x01	; 1
    bae6:	73 c0       	rjmp	.+230    	; 0xbbce <si5351_set_freq+0x326>
    bae8:	89 81       	ldd	r24, Y+1	; 0x01
    baea:	9a 81       	ldd	r25, Y+2	; 0x02
    baec:	ab 81       	ldd	r26, Y+3	; 0x03
    baee:	bc 81       	ldd	r27, Y+4	; 0x04
    baf0:	89 2b       	or	r24, r25
    baf2:	8a 2b       	or	r24, r26
    baf4:	8b 2b       	or	r24, r27
    baf6:	49 f0       	breq	.+18     	; 0xbb0a <si5351_set_freq+0x262>
    baf8:	89 81       	ldd	r24, Y+1	; 0x01
    bafa:	9a 81       	ldd	r25, Y+2	; 0x02
    bafc:	ab 81       	ldd	r26, Y+3	; 0x03
    bafe:	bc 81       	ldd	r27, Y+4	; 0x04
    bb00:	4d 81       	ldd	r20, Y+5	; 0x05
    bb02:	bc 01       	movw	r22, r24
    bb04:	cd 01       	movw	r24, r26
    bb06:	0e 94 9d 5e 	call	0xbd3a	; 0xbd3a <_Z7set_pllm10si5351_pll>
    bb0a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    bb0c:	88 23       	and	r24, r24
    bb0e:	71 f0       	breq	.+28     	; 0xbb2c <si5351_set_freq+0x284>
    bb10:	80 91 cd 4a 	lds	r24, 0x4ACD	; 0x804acd <_ZL17enabledClocksMask>
    bb14:	8e 8b       	std	Y+22, r24	; 0x16
    bb16:	ce 01       	movw	r24, r28
    bb18:	46 96       	adiw	r24, 0x16	; 22
    bb1a:	41 e0       	ldi	r20, 0x01	; 1
    bb1c:	bc 01       	movw	r22, r24
    bb1e:	83 e0       	ldi	r24, 0x03	; 3
    bb20:	0e 94 8a 63 	call	0xc714	; 0xc714 <_Z17si5351_write_bulkhPhh>
    bb24:	88 23       	and	r24, r24
    bb26:	89 f0       	breq	.+34     	; 0xbb4a <si5351_set_freq+0x2a2>
    bb28:	81 e0       	ldi	r24, 0x01	; 1
    bb2a:	51 c0       	rjmp	.+162    	; 0xbbce <si5351_set_freq+0x326>
    bb2c:	80 91 cd 4a 	lds	r24, 0x4ACD	; 0x804acd <_ZL17enabledClocksMask>
    bb30:	80 95       	com	r24
    bb32:	8e 8b       	std	Y+22, r24	; 0x16
    bb34:	ce 01       	movw	r24, r28
    bb36:	46 96       	adiw	r24, 0x16	; 22
    bb38:	41 e0       	ldi	r20, 0x01	; 1
    bb3a:	bc 01       	movw	r22, r24
    bb3c:	83 e0       	ldi	r24, 0x03	; 3
    bb3e:	0e 94 8a 63 	call	0xc714	; 0xc714 <_Z17si5351_write_bulkhPhh>
    bb42:	88 23       	and	r24, r24
    bb44:	11 f0       	breq	.+4      	; 0xbb4a <si5351_set_freq+0x2a2>
    bb46:	81 e0       	ldi	r24, 0x01	; 1
    bb48:	42 c0       	rjmp	.+132    	; 0xbbce <si5351_set_freq+0x326>
    bb4a:	8d 81       	ldd	r24, Y+5	; 0x05
    bb4c:	81 30       	cpi	r24, 0x01	; 1
    bb4e:	69 f4       	brne	.+26     	; 0xbb6a <si5351_set_freq+0x2c2>
    bb50:	8c e4       	ldi	r24, 0x4C	; 76
    bb52:	8e 8b       	std	Y+22, r24	; 0x16
    bb54:	ce 01       	movw	r24, r28
    bb56:	46 96       	adiw	r24, 0x16	; 22
    bb58:	41 e0       	ldi	r20, 0x01	; 1
    bb5a:	bc 01       	movw	r22, r24
    bb5c:	8e 81       	ldd	r24, Y+6	; 0x06
    bb5e:	0e 94 8a 63 	call	0xc714	; 0xc714 <_Z17si5351_write_bulkhPhh>
    bb62:	88 23       	and	r24, r24
    bb64:	99 f1       	breq	.+102    	; 0xbbcc <si5351_set_freq+0x324>
    bb66:	81 e0       	ldi	r24, 0x01	; 1
    bb68:	32 c0       	rjmp	.+100    	; 0xbbce <si5351_set_freq+0x326>
    bb6a:	8c 89       	ldd	r24, Y+20	; 0x14
    bb6c:	88 23       	and	r24, r24
    bb6e:	69 f0       	breq	.+26     	; 0xbb8a <si5351_set_freq+0x2e2>
    bb70:	8c e6       	ldi	r24, 0x6C	; 108
    bb72:	8e 8b       	std	Y+22, r24	; 0x16
    bb74:	ce 01       	movw	r24, r28
    bb76:	46 96       	adiw	r24, 0x16	; 22
    bb78:	41 e0       	ldi	r20, 0x01	; 1
    bb7a:	bc 01       	movw	r22, r24
    bb7c:	8e 81       	ldd	r24, Y+6	; 0x06
    bb7e:	0e 94 8a 63 	call	0xc714	; 0xc714 <_Z17si5351_write_bulkhPhh>
    bb82:	88 23       	and	r24, r24
    bb84:	79 f0       	breq	.+30     	; 0xbba4 <si5351_set_freq+0x2fc>
    bb86:	81 e0       	ldi	r24, 0x01	; 1
    bb88:	22 c0       	rjmp	.+68     	; 0xbbce <si5351_set_freq+0x326>
    bb8a:	8c e2       	ldi	r24, 0x2C	; 44
    bb8c:	8e 8b       	std	Y+22, r24	; 0x16
    bb8e:	ce 01       	movw	r24, r28
    bb90:	46 96       	adiw	r24, 0x16	; 22
    bb92:	41 e0       	ldi	r20, 0x01	; 1
    bb94:	bc 01       	movw	r22, r24
    bb96:	8e 81       	ldd	r24, Y+6	; 0x06
    bb98:	0e 94 8a 63 	call	0xc714	; 0xc714 <_Z17si5351_write_bulkhPhh>
    bb9c:	88 23       	and	r24, r24
    bb9e:	11 f0       	breq	.+4      	; 0xbba4 <si5351_set_freq+0x2fc>
    bba0:	81 e0       	ldi	r24, 0x01	; 1
    bba2:	15 c0       	rjmp	.+42     	; 0xbbce <si5351_set_freq+0x326>
    bba4:	89 81       	ldd	r24, Y+1	; 0x01
    bba6:	9a 81       	ldd	r25, Y+2	; 0x02
    bba8:	ab 81       	ldd	r26, Y+3	; 0x03
    bbaa:	bc 81       	ldd	r27, Y+4	; 0x04
    bbac:	89 2b       	or	r24, r25
    bbae:	8a 2b       	or	r24, r26
    bbb0:	8b 2b       	or	r24, r27
    bbb2:	61 f0       	breq	.+24     	; 0xbbcc <si5351_set_freq+0x324>
    bbb4:	89 81       	ldd	r24, Y+1	; 0x01
    bbb6:	9a 81       	ldd	r25, Y+2	; 0x02
    bbb8:	ab 81       	ldd	r26, Y+3	; 0x03
    bbba:	bc 81       	ldd	r27, Y+4	; 0x04
    bbbc:	80 93 c9 4a 	sts	0x4AC9, r24	; 0x804ac9 <_ZL8freqVCOB>
    bbc0:	90 93 ca 4a 	sts	0x4ACA, r25	; 0x804aca <_ZL8freqVCOB+0x1>
    bbc4:	a0 93 cb 4a 	sts	0x4ACB, r26	; 0x804acb <_ZL8freqVCOB+0x2>
    bbc8:	b0 93 cc 4a 	sts	0x4ACC, r27	; 0x804acc <_ZL8freqVCOB+0x3>
    bbcc:	80 e0       	ldi	r24, 0x00	; 0
    bbce:	6d 96       	adiw	r28, 0x1d	; 29
    bbd0:	cd bf       	out	0x3d, r28	; 61
    bbd2:	de bf       	out	0x3e, r29	; 62
    bbd4:	df 91       	pop	r29
    bbd6:	cf 91       	pop	r28
    bbd8:	1f 91       	pop	r17
    bbda:	0f 91       	pop	r16
    bbdc:	ff 90       	pop	r15
    bbde:	ef 90       	pop	r14
    bbe0:	df 90       	pop	r13
    bbe2:	cf 90       	pop	r12
    bbe4:	af 90       	pop	r10
    bbe6:	8f 90       	pop	r8
    bbe8:	08 95       	ret

0000bbea <si5351_clock_enable>:
    bbea:	cf 93       	push	r28
    bbec:	df 93       	push	r29
    bbee:	cd b7       	in	r28, 0x3d	; 61
    bbf0:	de b7       	in	r29, 0x3e	; 62
    bbf2:	25 97       	sbiw	r28, 0x05	; 5
    bbf4:	cd bf       	out	0x3d, r28	; 61
    bbf6:	de bf       	out	0x3e, r29	; 62
    bbf8:	8c 83       	std	Y+4, r24	; 0x04
    bbfa:	6d 83       	std	Y+5, r22	; 0x05
    bbfc:	ce 01       	movw	r24, r28
    bbfe:	02 96       	adiw	r24, 0x02	; 2
    bc00:	41 e0       	ldi	r20, 0x01	; 1
    bc02:	bc 01       	movw	r22, r24
    bc04:	83 e0       	ldi	r24, 0x03	; 3
    bc06:	0e 94 bc 63 	call	0xc778	; 0xc778 <_Z16si5351_read_bulkhPhh>
    bc0a:	88 23       	and	r24, r24
    bc0c:	11 f0       	breq	.+4      	; 0xbc12 <si5351_clock_enable+0x28>
    bc0e:	8c ef       	ldi	r24, 0xFC	; 252
    bc10:	31 c0       	rjmp	.+98     	; 0xbc74 <si5351_clock_enable+0x8a>
    bc12:	8a 81       	ldd	r24, Y+2	; 0x02
    bc14:	89 83       	std	Y+1, r24	; 0x01
    bc16:	8d 81       	ldd	r24, Y+5	; 0x05
    bc18:	88 23       	and	r24, r24
    bc1a:	81 f0       	breq	.+32     	; 0xbc3c <si5351_clock_enable+0x52>
    bc1c:	8c 81       	ldd	r24, Y+4	; 0x04
    bc1e:	28 2f       	mov	r18, r24
    bc20:	30 e0       	ldi	r19, 0x00	; 0
    bc22:	81 e0       	ldi	r24, 0x01	; 1
    bc24:	90 e0       	ldi	r25, 0x00	; 0
    bc26:	02 c0       	rjmp	.+4      	; 0xbc2c <si5351_clock_enable+0x42>
    bc28:	88 0f       	add	r24, r24
    bc2a:	99 1f       	adc	r25, r25
    bc2c:	2a 95       	dec	r18
    bc2e:	e2 f7       	brpl	.-8      	; 0xbc28 <si5351_clock_enable+0x3e>
    bc30:	98 2f       	mov	r25, r24
    bc32:	90 95       	com	r25
    bc34:	89 81       	ldd	r24, Y+1	; 0x01
    bc36:	89 23       	and	r24, r25
    bc38:	89 83       	std	Y+1, r24	; 0x01
    bc3a:	0e c0       	rjmp	.+28     	; 0xbc58 <si5351_clock_enable+0x6e>
    bc3c:	8c 81       	ldd	r24, Y+4	; 0x04
    bc3e:	28 2f       	mov	r18, r24
    bc40:	30 e0       	ldi	r19, 0x00	; 0
    bc42:	81 e0       	ldi	r24, 0x01	; 1
    bc44:	90 e0       	ldi	r25, 0x00	; 0
    bc46:	02 c0       	rjmp	.+4      	; 0xbc4c <si5351_clock_enable+0x62>
    bc48:	88 0f       	add	r24, r24
    bc4a:	99 1f       	adc	r25, r25
    bc4c:	2a 95       	dec	r18
    bc4e:	e2 f7       	brpl	.-8      	; 0xbc48 <si5351_clock_enable+0x5e>
    bc50:	98 2f       	mov	r25, r24
    bc52:	89 81       	ldd	r24, Y+1	; 0x01
    bc54:	89 2b       	or	r24, r25
    bc56:	89 83       	std	Y+1, r24	; 0x01
    bc58:	89 81       	ldd	r24, Y+1	; 0x01
    bc5a:	8a 83       	std	Y+2, r24	; 0x02
    bc5c:	ce 01       	movw	r24, r28
    bc5e:	02 96       	adiw	r24, 0x02	; 2
    bc60:	41 e0       	ldi	r20, 0x01	; 1
    bc62:	bc 01       	movw	r22, r24
    bc64:	83 e0       	ldi	r24, 0x03	; 3
    bc66:	0e 94 8a 63 	call	0xc714	; 0xc714 <_Z17si5351_write_bulkhPhh>
    bc6a:	88 23       	and	r24, r24
    bc6c:	11 f0       	breq	.+4      	; 0xbc72 <si5351_clock_enable+0x88>
    bc6e:	8c ef       	ldi	r24, 0xFC	; 252
    bc70:	01 c0       	rjmp	.+2      	; 0xbc74 <si5351_clock_enable+0x8a>
    bc72:	80 e0       	ldi	r24, 0x00	; 0
    bc74:	25 96       	adiw	r28, 0x05	; 5
    bc76:	cd bf       	out	0x3d, r28	; 61
    bc78:	de bf       	out	0x3e, r29	; 62
    bc7a:	df 91       	pop	r29
    bc7c:	cf 91       	pop	r28
    bc7e:	08 95       	ret

0000bc80 <si5351_drive_strength>:
    bc80:	cf 93       	push	r28
    bc82:	df 93       	push	r29
    bc84:	cd b7       	in	r28, 0x3d	; 61
    bc86:	de b7       	in	r29, 0x3e	; 62
    bc88:	26 97       	sbiw	r28, 0x06	; 6
    bc8a:	cd bf       	out	0x3d, r28	; 61
    bc8c:	de bf       	out	0x3e, r29	; 62
    bc8e:	8d 83       	std	Y+5, r24	; 0x05
    bc90:	6e 83       	std	Y+6, r22	; 0x06
    bc92:	83 e0       	ldi	r24, 0x03	; 3
    bc94:	8a 83       	std	Y+2, r24	; 0x02
    bc96:	8d 81       	ldd	r24, Y+5	; 0x05
    bc98:	20 e1       	ldi	r18, 0x10	; 16
    bc9a:	28 0f       	add	r18, r24
    bc9c:	ce 01       	movw	r24, r28
    bc9e:	03 96       	adiw	r24, 0x03	; 3
    bca0:	41 e0       	ldi	r20, 0x01	; 1
    bca2:	bc 01       	movw	r22, r24
    bca4:	82 2f       	mov	r24, r18
    bca6:	0e 94 bc 63 	call	0xc778	; 0xc778 <_Z16si5351_read_bulkhPhh>
    bcaa:	88 23       	and	r24, r24
    bcac:	11 f0       	breq	.+4      	; 0xbcb2 <si5351_drive_strength+0x32>
    bcae:	8b ef       	ldi	r24, 0xFB	; 251
    bcb0:	3e c0       	rjmp	.+124    	; 0xbd2e <si5351_drive_strength+0xae>
    bcb2:	8b 81       	ldd	r24, Y+3	; 0x03
    bcb4:	89 83       	std	Y+1, r24	; 0x01
    bcb6:	8e 81       	ldd	r24, Y+6	; 0x06
    bcb8:	88 2f       	mov	r24, r24
    bcba:	90 e0       	ldi	r25, 0x00	; 0
    bcbc:	81 30       	cpi	r24, 0x01	; 1
    bcbe:	91 05       	cpc	r25, r1
    bcc0:	81 f0       	breq	.+32     	; 0xbce2 <si5351_drive_strength+0x62>
    bcc2:	82 30       	cpi	r24, 0x02	; 2
    bcc4:	91 05       	cpc	r25, r1
    bcc6:	1c f4       	brge	.+6      	; 0xbcce <si5351_drive_strength+0x4e>
    bcc8:	89 2b       	or	r24, r25
    bcca:	39 f0       	breq	.+14     	; 0xbcda <si5351_drive_strength+0x5a>
    bccc:	1f c0       	rjmp	.+62     	; 0xbd0c <si5351_drive_strength+0x8c>
    bcce:	82 30       	cpi	r24, 0x02	; 2
    bcd0:	91 05       	cpc	r25, r1
    bcd2:	71 f0       	breq	.+28     	; 0xbcf0 <si5351_drive_strength+0x70>
    bcd4:	03 97       	sbiw	r24, 0x03	; 3
    bcd6:	99 f0       	breq	.+38     	; 0xbcfe <si5351_drive_strength+0x7e>
    bcd8:	19 c0       	rjmp	.+50     	; 0xbd0c <si5351_drive_strength+0x8c>
    bcda:	89 81       	ldd	r24, Y+1	; 0x01
    bcdc:	8c 7f       	andi	r24, 0xFC	; 252
    bcde:	89 83       	std	Y+1, r24	; 0x01
    bce0:	15 c0       	rjmp	.+42     	; 0xbd0c <si5351_drive_strength+0x8c>
    bce2:	89 81       	ldd	r24, Y+1	; 0x01
    bce4:	8c 7f       	andi	r24, 0xFC	; 252
    bce6:	89 83       	std	Y+1, r24	; 0x01
    bce8:	89 81       	ldd	r24, Y+1	; 0x01
    bcea:	81 60       	ori	r24, 0x01	; 1
    bcec:	89 83       	std	Y+1, r24	; 0x01
    bcee:	0e c0       	rjmp	.+28     	; 0xbd0c <si5351_drive_strength+0x8c>
    bcf0:	89 81       	ldd	r24, Y+1	; 0x01
    bcf2:	8c 7f       	andi	r24, 0xFC	; 252
    bcf4:	89 83       	std	Y+1, r24	; 0x01
    bcf6:	89 81       	ldd	r24, Y+1	; 0x01
    bcf8:	82 60       	ori	r24, 0x02	; 2
    bcfa:	89 83       	std	Y+1, r24	; 0x01
    bcfc:	07 c0       	rjmp	.+14     	; 0xbd0c <si5351_drive_strength+0x8c>
    bcfe:	89 81       	ldd	r24, Y+1	; 0x01
    bd00:	8c 7f       	andi	r24, 0xFC	; 252
    bd02:	89 83       	std	Y+1, r24	; 0x01
    bd04:	89 81       	ldd	r24, Y+1	; 0x01
    bd06:	83 60       	ori	r24, 0x03	; 3
    bd08:	89 83       	std	Y+1, r24	; 0x01
    bd0a:	00 00       	nop
    bd0c:	89 81       	ldd	r24, Y+1	; 0x01
    bd0e:	8b 83       	std	Y+3, r24	; 0x03
    bd10:	8d 81       	ldd	r24, Y+5	; 0x05
    bd12:	20 e1       	ldi	r18, 0x10	; 16
    bd14:	28 0f       	add	r18, r24
    bd16:	ce 01       	movw	r24, r28
    bd18:	03 96       	adiw	r24, 0x03	; 3
    bd1a:	41 e0       	ldi	r20, 0x01	; 1
    bd1c:	bc 01       	movw	r22, r24
    bd1e:	82 2f       	mov	r24, r18
    bd20:	0e 94 8a 63 	call	0xc714	; 0xc714 <_Z17si5351_write_bulkhPhh>
    bd24:	88 23       	and	r24, r24
    bd26:	11 f0       	breq	.+4      	; 0xbd2c <si5351_drive_strength+0xac>
    bd28:	8b ef       	ldi	r24, 0xFB	; 251
    bd2a:	01 c0       	rjmp	.+2      	; 0xbd2e <si5351_drive_strength+0xae>
    bd2c:	80 e0       	ldi	r24, 0x00	; 0
    bd2e:	26 96       	adiw	r28, 0x06	; 6
    bd30:	cd bf       	out	0x3d, r28	; 61
    bd32:	de bf       	out	0x3e, r29	; 62
    bd34:	df 91       	pop	r29
    bd36:	cf 91       	pop	r28
    bd38:	08 95       	ret

0000bd3a <_Z7set_pllm10si5351_pll>:
    bd3a:	cf 93       	push	r28
    bd3c:	df 93       	push	r29
    bd3e:	cd b7       	in	r28, 0x3d	; 61
    bd40:	de b7       	in	r29, 0x3e	; 62
    bd42:	6c 97       	sbiw	r28, 0x1c	; 28
    bd44:	cd bf       	out	0x3d, r28	; 61
    bd46:	de bf       	out	0x3e, r29	; 62
    bd48:	68 8f       	std	Y+24, r22	; 0x18
    bd4a:	79 8f       	std	Y+25, r23	; 0x19
    bd4c:	8a 8f       	std	Y+26, r24	; 0x1a
    bd4e:	9b 8f       	std	Y+27, r25	; 0x1b
    bd50:	4c 8f       	std	Y+28, r20	; 0x1c
    bd52:	9e 01       	movw	r18, r28
    bd54:	2e 5f       	subi	r18, 0xFE	; 254
    bd56:	3f 4f       	sbci	r19, 0xFF	; 255
    bd58:	88 8d       	ldd	r24, Y+24	; 0x18
    bd5a:	99 8d       	ldd	r25, Y+25	; 0x19
    bd5c:	aa 8d       	ldd	r26, Y+26	; 0x1a
    bd5e:	bb 8d       	ldd	r27, Y+27	; 0x1b
    bd60:	a9 01       	movw	r20, r18
    bd62:	bc 01       	movw	r22, r24
    bd64:	cd 01       	movw	r24, r26
    bd66:	0e 94 66 5f 	call	0xbecc	; 0xbecc <_Z8pll_calcmP13u_si5351_regs>
    bd6a:	88 23       	and	r24, r24
    bd6c:	11 f0       	breq	.+4      	; 0xbd72 <_Z7set_pllm10si5351_pll+0x38>
    bd6e:	81 e0       	ldi	r24, 0x01	; 1
    bd70:	a7 c0       	rjmp	.+334    	; 0xbec0 <_Z7set_pllm10si5351_pll+0x186>
    bd72:	19 82       	std	Y+1, r1	; 0x01
    bd74:	89 81       	ldd	r24, Y+1	; 0x01
    bd76:	91 e0       	ldi	r25, 0x01	; 1
    bd78:	98 0f       	add	r25, r24
    bd7a:	99 83       	std	Y+1, r25	; 0x01
    bd7c:	88 2f       	mov	r24, r24
    bd7e:	90 e0       	ldi	r25, 0x00	; 0
    bd80:	4b 85       	ldd	r20, Y+11	; 0x0b
    bd82:	9e 01       	movw	r18, r28
    bd84:	22 5f       	subi	r18, 0xF2	; 242
    bd86:	3f 4f       	sbci	r19, 0xFF	; 255
    bd88:	82 0f       	add	r24, r18
    bd8a:	93 1f       	adc	r25, r19
    bd8c:	fc 01       	movw	r30, r24
    bd8e:	40 83       	st	Z, r20
    bd90:	89 81       	ldd	r24, Y+1	; 0x01
    bd92:	91 e0       	ldi	r25, 0x01	; 1
    bd94:	98 0f       	add	r25, r24
    bd96:	99 83       	std	Y+1, r25	; 0x01
    bd98:	88 2f       	mov	r24, r24
    bd9a:	90 e0       	ldi	r25, 0x00	; 0
    bd9c:	4a 85       	ldd	r20, Y+10	; 0x0a
    bd9e:	9e 01       	movw	r18, r28
    bda0:	22 5f       	subi	r18, 0xF2	; 242
    bda2:	3f 4f       	sbci	r19, 0xFF	; 255
    bda4:	82 0f       	add	r24, r18
    bda6:	93 1f       	adc	r25, r19
    bda8:	fc 01       	movw	r30, r24
    bdaa:	40 83       	st	Z, r20
    bdac:	89 81       	ldd	r24, Y+1	; 0x01
    bdae:	91 e0       	ldi	r25, 0x01	; 1
    bdb0:	98 0f       	add	r25, r24
    bdb2:	99 83       	std	Y+1, r25	; 0x01
    bdb4:	88 2f       	mov	r24, r24
    bdb6:	90 e0       	ldi	r25, 0x00	; 0
    bdb8:	2c 81       	ldd	r18, Y+4	; 0x04
    bdba:	42 2f       	mov	r20, r18
    bdbc:	43 70       	andi	r20, 0x03	; 3
    bdbe:	9e 01       	movw	r18, r28
    bdc0:	22 5f       	subi	r18, 0xF2	; 242
    bdc2:	3f 4f       	sbci	r19, 0xFF	; 255
    bdc4:	82 0f       	add	r24, r18
    bdc6:	93 1f       	adc	r25, r19
    bdc8:	fc 01       	movw	r30, r24
    bdca:	40 83       	st	Z, r20
    bdcc:	89 81       	ldd	r24, Y+1	; 0x01
    bdce:	91 e0       	ldi	r25, 0x01	; 1
    bdd0:	98 0f       	add	r25, r24
    bdd2:	99 83       	std	Y+1, r25	; 0x01
    bdd4:	88 2f       	mov	r24, r24
    bdd6:	90 e0       	ldi	r25, 0x00	; 0
    bdd8:	4b 81       	ldd	r20, Y+3	; 0x03
    bdda:	9e 01       	movw	r18, r28
    bddc:	22 5f       	subi	r18, 0xF2	; 242
    bdde:	3f 4f       	sbci	r19, 0xFF	; 255
    bde0:	82 0f       	add	r24, r18
    bde2:	93 1f       	adc	r25, r19
    bde4:	fc 01       	movw	r30, r24
    bde6:	40 83       	st	Z, r20
    bde8:	89 81       	ldd	r24, Y+1	; 0x01
    bdea:	91 e0       	ldi	r25, 0x01	; 1
    bdec:	98 0f       	add	r25, r24
    bdee:	99 83       	std	Y+1, r25	; 0x01
    bdf0:	88 2f       	mov	r24, r24
    bdf2:	90 e0       	ldi	r25, 0x00	; 0
    bdf4:	4a 81       	ldd	r20, Y+2	; 0x02
    bdf6:	9e 01       	movw	r18, r28
    bdf8:	22 5f       	subi	r18, 0xF2	; 242
    bdfa:	3f 4f       	sbci	r19, 0xFF	; 255
    bdfc:	82 0f       	add	r24, r18
    bdfe:	93 1f       	adc	r25, r19
    be00:	fc 01       	movw	r30, r24
    be02:	40 83       	st	Z, r20
    be04:	89 81       	ldd	r24, Y+1	; 0x01
    be06:	88 2f       	mov	r24, r24
    be08:	90 e0       	ldi	r25, 0x00	; 0
    be0a:	2c 85       	ldd	r18, Y+12	; 0x0c
    be0c:	42 2f       	mov	r20, r18
    be0e:	42 95       	swap	r20
    be10:	40 7f       	andi	r20, 0xF0	; 240
    be12:	9e 01       	movw	r18, r28
    be14:	22 5f       	subi	r18, 0xF2	; 242
    be16:	3f 4f       	sbci	r19, 0xFF	; 255
    be18:	82 0f       	add	r24, r18
    be1a:	93 1f       	adc	r25, r19
    be1c:	fc 01       	movw	r30, r24
    be1e:	40 83       	st	Z, r20
    be20:	29 81       	ldd	r18, Y+1	; 0x01
    be22:	81 e0       	ldi	r24, 0x01	; 1
    be24:	82 0f       	add	r24, r18
    be26:	89 83       	std	Y+1, r24	; 0x01
    be28:	82 2f       	mov	r24, r18
    be2a:	90 e0       	ldi	r25, 0x00	; 0
    be2c:	22 2f       	mov	r18, r18
    be2e:	30 e0       	ldi	r19, 0x00	; 0
    be30:	ae 01       	movw	r20, r28
    be32:	42 5f       	subi	r20, 0xF2	; 242
    be34:	5f 4f       	sbci	r21, 0xFF	; 255
    be36:	24 0f       	add	r18, r20
    be38:	35 1f       	adc	r19, r21
    be3a:	f9 01       	movw	r30, r18
    be3c:	30 81       	ld	r19, Z
    be3e:	28 85       	ldd	r18, Y+8	; 0x08
    be40:	2f 70       	andi	r18, 0x0F	; 15
    be42:	43 2f       	mov	r20, r19
    be44:	42 0f       	add	r20, r18
    be46:	9e 01       	movw	r18, r28
    be48:	22 5f       	subi	r18, 0xF2	; 242
    be4a:	3f 4f       	sbci	r19, 0xFF	; 255
    be4c:	82 0f       	add	r24, r18
    be4e:	93 1f       	adc	r25, r19
    be50:	fc 01       	movw	r30, r24
    be52:	40 83       	st	Z, r20
    be54:	89 81       	ldd	r24, Y+1	; 0x01
    be56:	91 e0       	ldi	r25, 0x01	; 1
    be58:	98 0f       	add	r25, r24
    be5a:	99 83       	std	Y+1, r25	; 0x01
    be5c:	88 2f       	mov	r24, r24
    be5e:	90 e0       	ldi	r25, 0x00	; 0
    be60:	4f 81       	ldd	r20, Y+7	; 0x07
    be62:	9e 01       	movw	r18, r28
    be64:	22 5f       	subi	r18, 0xF2	; 242
    be66:	3f 4f       	sbci	r19, 0xFF	; 255
    be68:	82 0f       	add	r24, r18
    be6a:	93 1f       	adc	r25, r19
    be6c:	fc 01       	movw	r30, r24
    be6e:	40 83       	st	Z, r20
    be70:	89 81       	ldd	r24, Y+1	; 0x01
    be72:	91 e0       	ldi	r25, 0x01	; 1
    be74:	98 0f       	add	r25, r24
    be76:	99 83       	std	Y+1, r25	; 0x01
    be78:	88 2f       	mov	r24, r24
    be7a:	90 e0       	ldi	r25, 0x00	; 0
    be7c:	4e 81       	ldd	r20, Y+6	; 0x06
    be7e:	9e 01       	movw	r18, r28
    be80:	22 5f       	subi	r18, 0xF2	; 242
    be82:	3f 4f       	sbci	r19, 0xFF	; 255
    be84:	82 0f       	add	r24, r18
    be86:	93 1f       	adc	r25, r19
    be88:	fc 01       	movw	r30, r24
    be8a:	40 83       	st	Z, r20
    be8c:	8c 8d       	ldd	r24, Y+28	; 0x1c
    be8e:	81 30       	cpi	r24, 0x01	; 1
    be90:	59 f4       	brne	.+22     	; 0xbea8 <_Z7set_pllm10si5351_pll+0x16e>
    be92:	ce 01       	movw	r24, r28
    be94:	0e 96       	adiw	r24, 0x0e	; 14
    be96:	49 81       	ldd	r20, Y+1	; 0x01
    be98:	bc 01       	movw	r22, r24
    be9a:	8a e1       	ldi	r24, 0x1A	; 26
    be9c:	0e 94 8a 63 	call	0xc714	; 0xc714 <_Z17si5351_write_bulkhPhh>
    bea0:	88 23       	and	r24, r24
    bea2:	69 f0       	breq	.+26     	; 0xbebe <_Z7set_pllm10si5351_pll+0x184>
    bea4:	81 e0       	ldi	r24, 0x01	; 1
    bea6:	0c c0       	rjmp	.+24     	; 0xbec0 <_Z7set_pllm10si5351_pll+0x186>
    bea8:	ce 01       	movw	r24, r28
    beaa:	0e 96       	adiw	r24, 0x0e	; 14
    beac:	49 81       	ldd	r20, Y+1	; 0x01
    beae:	bc 01       	movw	r22, r24
    beb0:	82 e2       	ldi	r24, 0x22	; 34
    beb2:	0e 94 8a 63 	call	0xc714	; 0xc714 <_Z17si5351_write_bulkhPhh>
    beb6:	88 23       	and	r24, r24
    beb8:	11 f0       	breq	.+4      	; 0xbebe <_Z7set_pllm10si5351_pll+0x184>
    beba:	81 e0       	ldi	r24, 0x01	; 1
    bebc:	01 c0       	rjmp	.+2      	; 0xbec0 <_Z7set_pllm10si5351_pll+0x186>
    bebe:	80 e0       	ldi	r24, 0x00	; 0
    bec0:	6c 96       	adiw	r28, 0x1c	; 28
    bec2:	cd bf       	out	0x3d, r28	; 61
    bec4:	de bf       	out	0x3e, r29	; 62
    bec6:	df 91       	pop	r29
    bec8:	cf 91       	pop	r28
    beca:	08 95       	ret

0000becc <_Z8pll_calcmP13u_si5351_regs>:
    becc:	cf 93       	push	r28
    bece:	df 93       	push	r29
    bed0:	cd b7       	in	r28, 0x3d	; 61
    bed2:	de b7       	in	r29, 0x3e	; 62
    bed4:	6e 97       	sbiw	r28, 0x1e	; 30
    bed6:	cd bf       	out	0x3d, r28	; 61
    bed8:	de bf       	out	0x3e, r29	; 62
    beda:	69 8f       	std	Y+25, r22	; 0x19
    bedc:	7a 8f       	std	Y+26, r23	; 0x1a
    bede:	8b 8f       	std	Y+27, r24	; 0x1b
    bee0:	9c 8f       	std	Y+28, r25	; 0x1c
    bee2:	4d 8f       	std	Y+29, r20	; 0x1d
    bee4:	5e 8f       	std	Y+30, r21	; 0x1e
    bee6:	80 91 27 40 	lds	r24, 0x4027	; 0x804027 <_ZL9xtal_freq>
    beea:	90 91 28 40 	lds	r25, 0x4028	; 0x804028 <_ZL9xtal_freq+0x1>
    beee:	a0 91 29 40 	lds	r26, 0x4029	; 0x804029 <_ZL9xtal_freq+0x2>
    bef2:	b0 91 2a 40 	lds	r27, 0x402A	; 0x80402a <_ZL9xtal_freq+0x3>
    bef6:	89 83       	std	Y+1, r24	; 0x01
    bef8:	9a 83       	std	Y+2, r25	; 0x02
    befa:	ab 83       	std	Y+3, r26	; 0x03
    befc:	bc 83       	std	Y+4, r27	; 0x04
    befe:	89 8d       	ldd	r24, Y+25	; 0x19
    bf00:	9a 8d       	ldd	r25, Y+26	; 0x1a
    bf02:	ab 8d       	ldd	r26, Y+27	; 0x1b
    bf04:	bc 8d       	ldd	r27, Y+28	; 0x1c
    bf06:	29 81       	ldd	r18, Y+1	; 0x01
    bf08:	3a 81       	ldd	r19, Y+2	; 0x02
    bf0a:	4b 81       	ldd	r20, Y+3	; 0x03
    bf0c:	5c 81       	ldd	r21, Y+4	; 0x04
    bf0e:	bc 01       	movw	r22, r24
    bf10:	cd 01       	movw	r24, r26
    bf12:	0e 94 02 72 	call	0xe404	; 0xe404 <__udivmodsi4>
    bf16:	da 01       	movw	r26, r20
    bf18:	c9 01       	movw	r24, r18
    bf1a:	8d 83       	std	Y+5, r24	; 0x05
    bf1c:	9e 83       	std	Y+6, r25	; 0x06
    bf1e:	af 83       	std	Y+7, r26	; 0x07
    bf20:	b8 87       	std	Y+8, r27	; 0x08
    bf22:	89 8d       	ldd	r24, Y+25	; 0x19
    bf24:	9a 8d       	ldd	r25, Y+26	; 0x1a
    bf26:	ab 8d       	ldd	r26, Y+27	; 0x1b
    bf28:	bc 8d       	ldd	r27, Y+28	; 0x1c
    bf2a:	29 81       	ldd	r18, Y+1	; 0x01
    bf2c:	3a 81       	ldd	r19, Y+2	; 0x02
    bf2e:	4b 81       	ldd	r20, Y+3	; 0x03
    bf30:	5c 81       	ldd	r21, Y+4	; 0x04
    bf32:	bc 01       	movw	r22, r24
    bf34:	cd 01       	movw	r24, r26
    bf36:	0e 94 02 72 	call	0xe404	; 0xe404 <__udivmodsi4>
    bf3a:	dc 01       	movw	r26, r24
    bf3c:	cb 01       	movw	r24, r22
    bf3e:	89 8b       	std	Y+17, r24	; 0x11
    bf40:	9a 8b       	std	Y+18, r25	; 0x12
    bf42:	ab 8b       	std	Y+19, r26	; 0x13
    bf44:	bc 8b       	std	Y+20, r27	; 0x14
    bf46:	89 81       	ldd	r24, Y+1	; 0x01
    bf48:	9a 81       	ldd	r25, Y+2	; 0x02
    bf4a:	ab 81       	ldd	r26, Y+3	; 0x03
    bf4c:	bc 81       	ldd	r27, Y+4	; 0x04
    bf4e:	8d 8b       	std	Y+21, r24	; 0x15
    bf50:	9e 8b       	std	Y+22, r25	; 0x16
    bf52:	af 8b       	std	Y+23, r26	; 0x17
    bf54:	b8 8f       	std	Y+24, r27	; 0x18
    bf56:	9e 01       	movw	r18, r28
    bf58:	2b 5e       	subi	r18, 0xEB	; 235
    bf5a:	3f 4f       	sbci	r19, 0xFF	; 255
    bf5c:	ce 01       	movw	r24, r28
    bf5e:	41 96       	adiw	r24, 0x11	; 17
    bf60:	b9 01       	movw	r22, r18
    bf62:	0e 94 4c 60 	call	0xc098	; 0xc098 <_Z13reduce_by_gcdPmS_>
    bf66:	89 89       	ldd	r24, Y+17	; 0x11
    bf68:	9a 89       	ldd	r25, Y+18	; 0x12
    bf6a:	ab 89       	ldd	r26, Y+19	; 0x13
    bf6c:	bc 89       	ldd	r27, Y+20	; 0x14
    bf6e:	88 0f       	add	r24, r24
    bf70:	99 1f       	adc	r25, r25
    bf72:	aa 1f       	adc	r26, r26
    bf74:	bb 1f       	adc	r27, r27
    bf76:	88 0f       	add	r24, r24
    bf78:	99 1f       	adc	r25, r25
    bf7a:	aa 1f       	adc	r26, r26
    bf7c:	bb 1f       	adc	r27, r27
    bf7e:	88 0f       	add	r24, r24
    bf80:	99 1f       	adc	r25, r25
    bf82:	aa 1f       	adc	r26, r26
    bf84:	bb 1f       	adc	r27, r27
    bf86:	88 0f       	add	r24, r24
    bf88:	99 1f       	adc	r25, r25
    bf8a:	aa 1f       	adc	r26, r26
    bf8c:	bb 1f       	adc	r27, r27
    bf8e:	88 0f       	add	r24, r24
    bf90:	99 1f       	adc	r25, r25
    bf92:	aa 1f       	adc	r26, r26
    bf94:	bb 1f       	adc	r27, r27
    bf96:	88 0f       	add	r24, r24
    bf98:	99 1f       	adc	r25, r25
    bf9a:	aa 1f       	adc	r26, r26
    bf9c:	bb 1f       	adc	r27, r27
    bf9e:	88 0f       	add	r24, r24
    bfa0:	99 1f       	adc	r25, r25
    bfa2:	aa 1f       	adc	r26, r26
    bfa4:	bb 1f       	adc	r27, r27
    bfa6:	89 87       	std	Y+9, r24	; 0x09
    bfa8:	9a 87       	std	Y+10, r25	; 0x0a
    bfaa:	ab 87       	std	Y+11, r26	; 0x0b
    bfac:	bc 87       	std	Y+12, r27	; 0x0c
    bfae:	2d 89       	ldd	r18, Y+21	; 0x15
    bfb0:	3e 89       	ldd	r19, Y+22	; 0x16
    bfb2:	4f 89       	ldd	r20, Y+23	; 0x17
    bfb4:	58 8d       	ldd	r21, Y+24	; 0x18
    bfb6:	89 85       	ldd	r24, Y+9	; 0x09
    bfb8:	9a 85       	ldd	r25, Y+10	; 0x0a
    bfba:	ab 85       	ldd	r26, Y+11	; 0x0b
    bfbc:	bc 85       	ldd	r27, Y+12	; 0x0c
    bfbe:	bc 01       	movw	r22, r24
    bfc0:	cd 01       	movw	r24, r26
    bfc2:	0e 94 02 72 	call	0xe404	; 0xe404 <__udivmodsi4>
    bfc6:	da 01       	movw	r26, r20
    bfc8:	c9 01       	movw	r24, r18
    bfca:	8d 87       	std	Y+13, r24	; 0x0d
    bfcc:	9e 87       	std	Y+14, r25	; 0x0e
    bfce:	af 87       	std	Y+15, r26	; 0x0f
    bfd0:	b8 8b       	std	Y+16, r27	; 0x10
    bfd2:	8d 81       	ldd	r24, Y+5	; 0x05
    bfd4:	9e 81       	ldd	r25, Y+6	; 0x06
    bfd6:	af 81       	ldd	r26, Y+7	; 0x07
    bfd8:	b8 85       	ldd	r27, Y+8	; 0x08
    bfda:	88 0f       	add	r24, r24
    bfdc:	99 1f       	adc	r25, r25
    bfde:	aa 1f       	adc	r26, r26
    bfe0:	bb 1f       	adc	r27, r27
    bfe2:	88 0f       	add	r24, r24
    bfe4:	99 1f       	adc	r25, r25
    bfe6:	aa 1f       	adc	r26, r26
    bfe8:	bb 1f       	adc	r27, r27
    bfea:	88 0f       	add	r24, r24
    bfec:	99 1f       	adc	r25, r25
    bfee:	aa 1f       	adc	r26, r26
    bff0:	bb 1f       	adc	r27, r27
    bff2:	88 0f       	add	r24, r24
    bff4:	99 1f       	adc	r25, r25
    bff6:	aa 1f       	adc	r26, r26
    bff8:	bb 1f       	adc	r27, r27
    bffa:	88 0f       	add	r24, r24
    bffc:	99 1f       	adc	r25, r25
    bffe:	aa 1f       	adc	r26, r26
    c000:	bb 1f       	adc	r27, r27
    c002:	88 0f       	add	r24, r24
    c004:	99 1f       	adc	r25, r25
    c006:	aa 1f       	adc	r26, r26
    c008:	bb 1f       	adc	r27, r27
    c00a:	88 0f       	add	r24, r24
    c00c:	99 1f       	adc	r25, r25
    c00e:	aa 1f       	adc	r26, r26
    c010:	bb 1f       	adc	r27, r27
    c012:	9c 01       	movw	r18, r24
    c014:	ad 01       	movw	r20, r26
    c016:	8d 85       	ldd	r24, Y+13	; 0x0d
    c018:	9e 85       	ldd	r25, Y+14	; 0x0e
    c01a:	af 85       	ldd	r26, Y+15	; 0x0f
    c01c:	b8 89       	ldd	r27, Y+16	; 0x10
    c01e:	82 0f       	add	r24, r18
    c020:	93 1f       	adc	r25, r19
    c022:	a4 1f       	adc	r26, r20
    c024:	b5 1f       	adc	r27, r21
    c026:	92 50       	subi	r25, 0x02	; 2
    c028:	a1 09       	sbc	r26, r1
    c02a:	b1 09       	sbc	r27, r1
    c02c:	2d 8d       	ldd	r18, Y+29	; 0x1d
    c02e:	3e 8d       	ldd	r19, Y+30	; 0x1e
    c030:	f9 01       	movw	r30, r18
    c032:	80 83       	st	Z, r24
    c034:	91 83       	std	Z+1, r25	; 0x01
    c036:	a2 83       	std	Z+2, r26	; 0x02
    c038:	b3 83       	std	Z+3, r27	; 0x03
    c03a:	2d 89       	ldd	r18, Y+21	; 0x15
    c03c:	3e 89       	ldd	r19, Y+22	; 0x16
    c03e:	4f 89       	ldd	r20, Y+23	; 0x17
    c040:	58 8d       	ldd	r21, Y+24	; 0x18
    c042:	8d 85       	ldd	r24, Y+13	; 0x0d
    c044:	9e 85       	ldd	r25, Y+14	; 0x0e
    c046:	af 85       	ldd	r26, Y+15	; 0x0f
    c048:	b8 89       	ldd	r27, Y+16	; 0x10
    c04a:	bc 01       	movw	r22, r24
    c04c:	cd 01       	movw	r24, r26
    c04e:	0e 94 ca 71 	call	0xe394	; 0xe394 <__mulsi3>
    c052:	9b 01       	movw	r18, r22
    c054:	ac 01       	movw	r20, r24
    c056:	89 85       	ldd	r24, Y+9	; 0x09
    c058:	9a 85       	ldd	r25, Y+10	; 0x0a
    c05a:	ab 85       	ldd	r26, Y+11	; 0x0b
    c05c:	bc 85       	ldd	r27, Y+12	; 0x0c
    c05e:	82 1b       	sub	r24, r18
    c060:	93 0b       	sbc	r25, r19
    c062:	a4 0b       	sbc	r26, r20
    c064:	b5 0b       	sbc	r27, r21
    c066:	2d 8d       	ldd	r18, Y+29	; 0x1d
    c068:	3e 8d       	ldd	r19, Y+30	; 0x1e
    c06a:	f9 01       	movw	r30, r18
    c06c:	84 83       	std	Z+4, r24	; 0x04
    c06e:	95 83       	std	Z+5, r25	; 0x05
    c070:	a6 83       	std	Z+6, r26	; 0x06
    c072:	b7 83       	std	Z+7, r27	; 0x07
    c074:	8d 89       	ldd	r24, Y+21	; 0x15
    c076:	9e 89       	ldd	r25, Y+22	; 0x16
    c078:	af 89       	ldd	r26, Y+23	; 0x17
    c07a:	b8 8d       	ldd	r27, Y+24	; 0x18
    c07c:	2d 8d       	ldd	r18, Y+29	; 0x1d
    c07e:	3e 8d       	ldd	r19, Y+30	; 0x1e
    c080:	f9 01       	movw	r30, r18
    c082:	80 87       	std	Z+8, r24	; 0x08
    c084:	91 87       	std	Z+9, r25	; 0x09
    c086:	a2 87       	std	Z+10, r26	; 0x0a
    c088:	b3 87       	std	Z+11, r27	; 0x0b
    c08a:	80 e0       	ldi	r24, 0x00	; 0
    c08c:	6e 96       	adiw	r28, 0x1e	; 30
    c08e:	cd bf       	out	0x3d, r28	; 61
    c090:	de bf       	out	0x3e, r29	; 62
    c092:	df 91       	pop	r29
    c094:	cf 91       	pop	r28
    c096:	08 95       	ret

0000c098 <_Z13reduce_by_gcdPmS_>:
    c098:	cf 93       	push	r28
    c09a:	df 93       	push	r29
    c09c:	cd b7       	in	r28, 0x3d	; 61
    c09e:	de b7       	in	r29, 0x3e	; 62
    c0a0:	60 97       	sbiw	r28, 0x10	; 16
    c0a2:	cd bf       	out	0x3d, r28	; 61
    c0a4:	de bf       	out	0x3e, r29	; 62
    c0a6:	8d 87       	std	Y+13, r24	; 0x0d
    c0a8:	9e 87       	std	Y+14, r25	; 0x0e
    c0aa:	6f 87       	std	Y+15, r22	; 0x0f
    c0ac:	78 8b       	std	Y+16, r23	; 0x10
    c0ae:	8d 85       	ldd	r24, Y+13	; 0x0d
    c0b0:	9e 85       	ldd	r25, Y+14	; 0x0e
    c0b2:	fc 01       	movw	r30, r24
    c0b4:	80 81       	ld	r24, Z
    c0b6:	91 81       	ldd	r25, Z+1	; 0x01
    c0b8:	a2 81       	ldd	r26, Z+2	; 0x02
    c0ba:	b3 81       	ldd	r27, Z+3	; 0x03
    c0bc:	89 87       	std	Y+9, r24	; 0x09
    c0be:	9a 87       	std	Y+10, r25	; 0x0a
    c0c0:	ab 87       	std	Y+11, r26	; 0x0b
    c0c2:	bc 87       	std	Y+12, r27	; 0x0c
    c0c4:	8f 85       	ldd	r24, Y+15	; 0x0f
    c0c6:	98 89       	ldd	r25, Y+16	; 0x10
    c0c8:	fc 01       	movw	r30, r24
    c0ca:	80 81       	ld	r24, Z
    c0cc:	91 81       	ldd	r25, Z+1	; 0x01
    c0ce:	a2 81       	ldd	r26, Z+2	; 0x02
    c0d0:	b3 81       	ldd	r27, Z+3	; 0x03
    c0d2:	8d 83       	std	Y+5, r24	; 0x05
    c0d4:	9e 83       	std	Y+6, r25	; 0x06
    c0d6:	af 83       	std	Y+7, r26	; 0x07
    c0d8:	b8 87       	std	Y+8, r27	; 0x08
    c0da:	89 85       	ldd	r24, Y+9	; 0x09
    c0dc:	9a 85       	ldd	r25, Y+10	; 0x0a
    c0de:	ab 85       	ldd	r26, Y+11	; 0x0b
    c0e0:	bc 85       	ldd	r27, Y+12	; 0x0c
    c0e2:	89 2b       	or	r24, r25
    c0e4:	8a 2b       	or	r24, r26
    c0e6:	8b 2b       	or	r24, r27
    c0e8:	09 f4       	brne	.+2      	; 0xc0ec <_Z13reduce_by_gcdPmS_+0x54>
    c0ea:	80 c0       	rjmp	.+256    	; 0xc1ec <_Z13reduce_by_gcdPmS_+0x154>
    c0ec:	8d 81       	ldd	r24, Y+5	; 0x05
    c0ee:	9e 81       	ldd	r25, Y+6	; 0x06
    c0f0:	af 81       	ldd	r26, Y+7	; 0x07
    c0f2:	b8 85       	ldd	r27, Y+8	; 0x08
    c0f4:	89 2b       	or	r24, r25
    c0f6:	8a 2b       	or	r24, r26
    c0f8:	8b 2b       	or	r24, r27
    c0fa:	09 f4       	brne	.+2      	; 0xc0fe <_Z13reduce_by_gcdPmS_+0x66>
    c0fc:	77 c0       	rjmp	.+238    	; 0xc1ec <_Z13reduce_by_gcdPmS_+0x154>
    c0fe:	89 85       	ldd	r24, Y+9	; 0x09
    c100:	9a 85       	ldd	r25, Y+10	; 0x0a
    c102:	ab 85       	ldd	r26, Y+11	; 0x0b
    c104:	bc 85       	ldd	r27, Y+12	; 0x0c
    c106:	2d 81       	ldd	r18, Y+5	; 0x05
    c108:	3e 81       	ldd	r19, Y+6	; 0x06
    c10a:	4f 81       	ldd	r20, Y+7	; 0x07
    c10c:	58 85       	ldd	r21, Y+8	; 0x08
    c10e:	bc 01       	movw	r22, r24
    c110:	cd 01       	movw	r24, r26
    c112:	0e 94 02 72 	call	0xe404	; 0xe404 <__udivmodsi4>
    c116:	dc 01       	movw	r26, r24
    c118:	cb 01       	movw	r24, r22
    c11a:	89 83       	std	Y+1, r24	; 0x01
    c11c:	9a 83       	std	Y+2, r25	; 0x02
    c11e:	ab 83       	std	Y+3, r26	; 0x03
    c120:	bc 83       	std	Y+4, r27	; 0x04
    c122:	89 81       	ldd	r24, Y+1	; 0x01
    c124:	9a 81       	ldd	r25, Y+2	; 0x02
    c126:	ab 81       	ldd	r26, Y+3	; 0x03
    c128:	bc 81       	ldd	r27, Y+4	; 0x04
    c12a:	89 2b       	or	r24, r25
    c12c:	8a 2b       	or	r24, r26
    c12e:	8b 2b       	or	r24, r27
    c130:	19 f1       	breq	.+70     	; 0xc178 <_Z13reduce_by_gcdPmS_+0xe0>
    c132:	8d 81       	ldd	r24, Y+5	; 0x05
    c134:	9e 81       	ldd	r25, Y+6	; 0x06
    c136:	af 81       	ldd	r26, Y+7	; 0x07
    c138:	b8 85       	ldd	r27, Y+8	; 0x08
    c13a:	89 87       	std	Y+9, r24	; 0x09
    c13c:	9a 87       	std	Y+10, r25	; 0x0a
    c13e:	ab 87       	std	Y+11, r26	; 0x0b
    c140:	bc 87       	std	Y+12, r27	; 0x0c
    c142:	89 81       	ldd	r24, Y+1	; 0x01
    c144:	9a 81       	ldd	r25, Y+2	; 0x02
    c146:	ab 81       	ldd	r26, Y+3	; 0x03
    c148:	bc 81       	ldd	r27, Y+4	; 0x04
    c14a:	8d 83       	std	Y+5, r24	; 0x05
    c14c:	9e 83       	std	Y+6, r25	; 0x06
    c14e:	af 83       	std	Y+7, r26	; 0x07
    c150:	b8 87       	std	Y+8, r27	; 0x08
    c152:	89 85       	ldd	r24, Y+9	; 0x09
    c154:	9a 85       	ldd	r25, Y+10	; 0x0a
    c156:	ab 85       	ldd	r26, Y+11	; 0x0b
    c158:	bc 85       	ldd	r27, Y+12	; 0x0c
    c15a:	2d 81       	ldd	r18, Y+5	; 0x05
    c15c:	3e 81       	ldd	r19, Y+6	; 0x06
    c15e:	4f 81       	ldd	r20, Y+7	; 0x07
    c160:	58 85       	ldd	r21, Y+8	; 0x08
    c162:	bc 01       	movw	r22, r24
    c164:	cd 01       	movw	r24, r26
    c166:	0e 94 02 72 	call	0xe404	; 0xe404 <__udivmodsi4>
    c16a:	dc 01       	movw	r26, r24
    c16c:	cb 01       	movw	r24, r22
    c16e:	89 83       	std	Y+1, r24	; 0x01
    c170:	9a 83       	std	Y+2, r25	; 0x02
    c172:	ab 83       	std	Y+3, r26	; 0x03
    c174:	bc 83       	std	Y+4, r27	; 0x04
    c176:	d5 cf       	rjmp	.-86     	; 0xc122 <_Z13reduce_by_gcdPmS_+0x8a>
    c178:	8d 81       	ldd	r24, Y+5	; 0x05
    c17a:	9e 81       	ldd	r25, Y+6	; 0x06
    c17c:	af 81       	ldd	r26, Y+7	; 0x07
    c17e:	b8 85       	ldd	r27, Y+8	; 0x08
    c180:	02 97       	sbiw	r24, 0x02	; 2
    c182:	a1 05       	cpc	r26, r1
    c184:	b1 05       	cpc	r27, r1
    c186:	a0 f1       	brcs	.+104    	; 0xc1f0 <_Z13reduce_by_gcdPmS_+0x158>
    c188:	8d 85       	ldd	r24, Y+13	; 0x0d
    c18a:	9e 85       	ldd	r25, Y+14	; 0x0e
    c18c:	fc 01       	movw	r30, r24
    c18e:	80 81       	ld	r24, Z
    c190:	91 81       	ldd	r25, Z+1	; 0x01
    c192:	a2 81       	ldd	r26, Z+2	; 0x02
    c194:	b3 81       	ldd	r27, Z+3	; 0x03
    c196:	2d 81       	ldd	r18, Y+5	; 0x05
    c198:	3e 81       	ldd	r19, Y+6	; 0x06
    c19a:	4f 81       	ldd	r20, Y+7	; 0x07
    c19c:	58 85       	ldd	r21, Y+8	; 0x08
    c19e:	bc 01       	movw	r22, r24
    c1a0:	cd 01       	movw	r24, r26
    c1a2:	0e 94 02 72 	call	0xe404	; 0xe404 <__udivmodsi4>
    c1a6:	da 01       	movw	r26, r20
    c1a8:	c9 01       	movw	r24, r18
    c1aa:	2d 85       	ldd	r18, Y+13	; 0x0d
    c1ac:	3e 85       	ldd	r19, Y+14	; 0x0e
    c1ae:	f9 01       	movw	r30, r18
    c1b0:	80 83       	st	Z, r24
    c1b2:	91 83       	std	Z+1, r25	; 0x01
    c1b4:	a2 83       	std	Z+2, r26	; 0x02
    c1b6:	b3 83       	std	Z+3, r27	; 0x03
    c1b8:	8f 85       	ldd	r24, Y+15	; 0x0f
    c1ba:	98 89       	ldd	r25, Y+16	; 0x10
    c1bc:	fc 01       	movw	r30, r24
    c1be:	80 81       	ld	r24, Z
    c1c0:	91 81       	ldd	r25, Z+1	; 0x01
    c1c2:	a2 81       	ldd	r26, Z+2	; 0x02
    c1c4:	b3 81       	ldd	r27, Z+3	; 0x03
    c1c6:	2d 81       	ldd	r18, Y+5	; 0x05
    c1c8:	3e 81       	ldd	r19, Y+6	; 0x06
    c1ca:	4f 81       	ldd	r20, Y+7	; 0x07
    c1cc:	58 85       	ldd	r21, Y+8	; 0x08
    c1ce:	bc 01       	movw	r22, r24
    c1d0:	cd 01       	movw	r24, r26
    c1d2:	0e 94 02 72 	call	0xe404	; 0xe404 <__udivmodsi4>
    c1d6:	da 01       	movw	r26, r20
    c1d8:	c9 01       	movw	r24, r18
    c1da:	2f 85       	ldd	r18, Y+15	; 0x0f
    c1dc:	38 89       	ldd	r19, Y+16	; 0x10
    c1de:	f9 01       	movw	r30, r18
    c1e0:	80 83       	st	Z, r24
    c1e2:	91 83       	std	Z+1, r25	; 0x01
    c1e4:	a2 83       	std	Z+2, r26	; 0x02
    c1e6:	b3 83       	std	Z+3, r27	; 0x03
    c1e8:	00 00       	nop
    c1ea:	02 c0       	rjmp	.+4      	; 0xc1f0 <_Z13reduce_by_gcdPmS_+0x158>
    c1ec:	00 00       	nop
    c1ee:	01 c0       	rjmp	.+2      	; 0xc1f2 <_Z13reduce_by_gcdPmS_+0x15a>
    c1f0:	00 00       	nop
    c1f2:	60 96       	adiw	r28, 0x10	; 16
    c1f4:	cd bf       	out	0x3d, r28	; 61
    c1f6:	de bf       	out	0x3e, r29	; 62
    c1f8:	df 91       	pop	r29
    c1fa:	cf 91       	pop	r28
    c1fc:	08 95       	ret

0000c1fe <_Z15multisynth_calcmP13u_si5351_regsPbS1_>:
    c1fe:	0f 93       	push	r16
    c200:	1f 93       	push	r17
    c202:	cf 93       	push	r28
    c204:	df 93       	push	r29
    c206:	cd b7       	in	r28, 0x3d	; 61
    c208:	de b7       	in	r29, 0x3e	; 62
    c20a:	69 97       	sbiw	r28, 0x19	; 25
    c20c:	cd bf       	out	0x3d, r28	; 61
    c20e:	de bf       	out	0x3e, r29	; 62
    c210:	68 8b       	std	Y+16, r22	; 0x10
    c212:	79 8b       	std	Y+17, r23	; 0x11
    c214:	8a 8b       	std	Y+18, r24	; 0x12
    c216:	9b 8b       	std	Y+19, r25	; 0x13
    c218:	4c 8b       	std	Y+20, r20	; 0x14
    c21a:	5d 8b       	std	Y+21, r21	; 0x15
    c21c:	2e 8b       	std	Y+22, r18	; 0x16
    c21e:	3f 8b       	std	Y+23, r19	; 0x17
    c220:	08 8f       	std	Y+24, r16	; 0x18
    c222:	19 8f       	std	Y+25, r17	; 0x19
    c224:	19 82       	std	Y+1, r1	; 0x01
    c226:	1a 82       	std	Y+2, r1	; 0x02
    c228:	1b 82       	std	Y+3, r1	; 0x03
    c22a:	1c 82       	std	Y+4, r1	; 0x04
    c22c:	1d 82       	std	Y+5, r1	; 0x05
    c22e:	1e 82       	std	Y+6, r1	; 0x06
    c230:	1f 82       	std	Y+7, r1	; 0x07
    c232:	18 86       	std	Y+8, r1	; 0x08
    c234:	8e 89       	ldd	r24, Y+22	; 0x16
    c236:	9f 89       	ldd	r25, Y+23	; 0x17
    c238:	21 e0       	ldi	r18, 0x01	; 1
    c23a:	fc 01       	movw	r30, r24
    c23c:	20 83       	st	Z, r18
    c23e:	88 89       	ldd	r24, Y+16	; 0x10
    c240:	99 89       	ldd	r25, Y+17	; 0x11
    c242:	aa 89       	ldd	r26, Y+18	; 0x12
    c244:	bb 89       	ldd	r27, Y+19	; 0x13
    c246:	80 38       	cpi	r24, 0x80	; 128
    c248:	91 4d       	sbci	r25, 0xD1	; 209
    c24a:	a0 4f       	sbci	r26, 0xF0	; 240
    c24c:	b8 40       	sbci	r27, 0x08	; 8
    c24e:	d8 f0       	brcs	.+54     	; 0xc286 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x88>
    c250:	84 e0       	ldi	r24, 0x04	; 4
    c252:	90 e0       	ldi	r25, 0x00	; 0
    c254:	a0 e0       	ldi	r26, 0x00	; 0
    c256:	b0 e0       	ldi	r27, 0x00	; 0
    c258:	89 83       	std	Y+1, r24	; 0x01
    c25a:	9a 83       	std	Y+2, r25	; 0x02
    c25c:	ab 83       	std	Y+3, r26	; 0x03
    c25e:	bc 83       	std	Y+4, r27	; 0x04
    c260:	29 81       	ldd	r18, Y+1	; 0x01
    c262:	3a 81       	ldd	r19, Y+2	; 0x02
    c264:	4b 81       	ldd	r20, Y+3	; 0x03
    c266:	5c 81       	ldd	r21, Y+4	; 0x04
    c268:	88 89       	ldd	r24, Y+16	; 0x10
    c26a:	99 89       	ldd	r25, Y+17	; 0x11
    c26c:	aa 89       	ldd	r26, Y+18	; 0x12
    c26e:	bb 89       	ldd	r27, Y+19	; 0x13
    c270:	bc 01       	movw	r22, r24
    c272:	cd 01       	movw	r24, r26
    c274:	0e 94 ca 71 	call	0xe394	; 0xe394 <__mulsi3>
    c278:	dc 01       	movw	r26, r24
    c27a:	cb 01       	movw	r24, r22
    c27c:	8d 83       	std	Y+5, r24	; 0x05
    c27e:	9e 83       	std	Y+6, r25	; 0x06
    c280:	af 83       	std	Y+7, r26	; 0x07
    c282:	b8 87       	std	Y+8, r27	; 0x08
    c284:	6e c0       	rjmp	.+220    	; 0xc362 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x164>
    c286:	19 86       	std	Y+9, r1	; 0x09
    c288:	1a 86       	std	Y+10, r1	; 0x0a
    c28a:	1b 86       	std	Y+11, r1	; 0x0b
    c28c:	89 85       	ldd	r24, Y+9	; 0x09
    c28e:	88 23       	and	r24, r24
    c290:	09 f0       	breq	.+2      	; 0xc294 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x96>
    c292:	52 c0       	rjmp	.+164    	; 0xc338 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x13a>
    c294:	8b 85       	ldd	r24, Y+11	; 0x0b
    c296:	28 2f       	mov	r18, r24
    c298:	30 e0       	ldi	r19, 0x00	; 0
    c29a:	40 e0       	ldi	r20, 0x00	; 0
    c29c:	50 e0       	ldi	r21, 0x00	; 0
    c29e:	88 89       	ldd	r24, Y+16	; 0x10
    c2a0:	99 89       	ldd	r25, Y+17	; 0x11
    c2a2:	aa 89       	ldd	r26, Y+18	; 0x12
    c2a4:	bb 89       	ldd	r27, Y+19	; 0x13
    c2a6:	bc 01       	movw	r22, r24
    c2a8:	cd 01       	movw	r24, r26
    c2aa:	0e 94 ca 71 	call	0xe394	; 0xe394 <__mulsi3>
    c2ae:	9b 01       	movw	r18, r22
    c2b0:	ac 01       	movw	r20, r24
    c2b2:	80 e0       	ldi	r24, 0x00	; 0
    c2b4:	99 ee       	ldi	r25, 0xE9	; 233
    c2b6:	a4 ea       	ldi	r26, 0xA4	; 164
    c2b8:	b5 e3       	ldi	r27, 0x35	; 53
    c2ba:	82 1b       	sub	r24, r18
    c2bc:	93 0b       	sbc	r25, r19
    c2be:	a4 0b       	sbc	r26, r20
    c2c0:	b5 0b       	sbc	r27, r21
    c2c2:	8c 87       	std	Y+12, r24	; 0x0c
    c2c4:	9d 87       	std	Y+13, r25	; 0x0d
    c2c6:	ae 87       	std	Y+14, r26	; 0x0e
    c2c8:	bf 87       	std	Y+15, r27	; 0x0f
    c2ca:	8b 85       	ldd	r24, Y+11	; 0x0b
    c2cc:	8e 5f       	subi	r24, 0xFE	; 254
    c2ce:	8b 87       	std	Y+11, r24	; 0x0b
    c2d0:	8c 85       	ldd	r24, Y+12	; 0x0c
    c2d2:	9d 85       	ldd	r25, Y+13	; 0x0d
    c2d4:	ae 85       	ldd	r26, Y+14	; 0x0e
    c2d6:	bf 85       	ldd	r27, Y+15	; 0x0f
    c2d8:	81 15       	cp	r24, r1
    c2da:	96 44       	sbci	r25, 0x46	; 70
    c2dc:	a3 4c       	sbci	r26, 0xC3	; 195
    c2de:	b3 42       	sbci	r27, 0x23	; 35
    c2e0:	40 f1       	brcs	.+80     	; 0xc332 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x134>
    c2e2:	8c 85       	ldd	r24, Y+12	; 0x0c
    c2e4:	9d 85       	ldd	r25, Y+13	; 0x0d
    c2e6:	ae 85       	ldd	r26, Y+14	; 0x0e
    c2e8:	bf 85       	ldd	r27, Y+15	; 0x0f
    c2ea:	28 89       	ldd	r18, Y+16	; 0x10
    c2ec:	39 89       	ldd	r19, Y+17	; 0x11
    c2ee:	4a 89       	ldd	r20, Y+18	; 0x12
    c2f0:	5b 89       	ldd	r21, Y+19	; 0x13
    c2f2:	bc 01       	movw	r22, r24
    c2f4:	cd 01       	movw	r24, r26
    c2f6:	0e 94 02 72 	call	0xe404	; 0xe404 <__udivmodsi4>
    c2fa:	da 01       	movw	r26, r20
    c2fc:	c9 01       	movw	r24, r18
    c2fe:	8c 87       	std	Y+12, r24	; 0x0c
    c300:	9d 87       	std	Y+13, r25	; 0x0d
    c302:	ae 87       	std	Y+14, r26	; 0x0e
    c304:	bf 87       	std	Y+15, r27	; 0x0f
    c306:	8c 85       	ldd	r24, Y+12	; 0x0c
    c308:	9d 85       	ldd	r25, Y+13	; 0x0d
    c30a:	ae 85       	ldd	r26, Y+14	; 0x0e
    c30c:	bf 85       	ldd	r27, Y+15	; 0x0f
    c30e:	04 97       	sbiw	r24, 0x04	; 4
    c310:	a1 05       	cpc	r26, r1
    c312:	b1 05       	cpc	r27, r1
    c314:	08 f4       	brcc	.+2      	; 0xc318 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x11a>
    c316:	ba cf       	rjmp	.-140    	; 0xc28c <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x8e>
    c318:	81 e0       	ldi	r24, 0x01	; 1
    c31a:	89 87       	std	Y+9, r24	; 0x09
    c31c:	81 e0       	ldi	r24, 0x01	; 1
    c31e:	8a 87       	std	Y+10, r24	; 0x0a
    c320:	8c 85       	ldd	r24, Y+12	; 0x0c
    c322:	9d 85       	ldd	r25, Y+13	; 0x0d
    c324:	ae 85       	ldd	r26, Y+14	; 0x0e
    c326:	bf 85       	ldd	r27, Y+15	; 0x0f
    c328:	89 83       	std	Y+1, r24	; 0x01
    c32a:	9a 83       	std	Y+2, r25	; 0x02
    c32c:	ab 83       	std	Y+3, r26	; 0x03
    c32e:	bc 83       	std	Y+4, r27	; 0x04
    c330:	ad cf       	rjmp	.-166    	; 0xc28c <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x8e>
    c332:	81 e0       	ldi	r24, 0x01	; 1
    c334:	89 87       	std	Y+9, r24	; 0x09
    c336:	aa cf       	rjmp	.-172    	; 0xc28c <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x8e>
    c338:	8a 85       	ldd	r24, Y+10	; 0x0a
    c33a:	88 23       	and	r24, r24
    c33c:	91 f0       	breq	.+36     	; 0xc362 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x164>
    c33e:	29 81       	ldd	r18, Y+1	; 0x01
    c340:	3a 81       	ldd	r19, Y+2	; 0x02
    c342:	4b 81       	ldd	r20, Y+3	; 0x03
    c344:	5c 81       	ldd	r21, Y+4	; 0x04
    c346:	88 89       	ldd	r24, Y+16	; 0x10
    c348:	99 89       	ldd	r25, Y+17	; 0x11
    c34a:	aa 89       	ldd	r26, Y+18	; 0x12
    c34c:	bb 89       	ldd	r27, Y+19	; 0x13
    c34e:	bc 01       	movw	r22, r24
    c350:	cd 01       	movw	r24, r26
    c352:	0e 94 ca 71 	call	0xe394	; 0xe394 <__mulsi3>
    c356:	dc 01       	movw	r26, r24
    c358:	cb 01       	movw	r24, r22
    c35a:	8d 83       	std	Y+5, r24	; 0x05
    c35c:	9e 83       	std	Y+6, r25	; 0x06
    c35e:	af 83       	std	Y+7, r26	; 0x07
    c360:	b8 87       	std	Y+8, r27	; 0x08
    c362:	21 e0       	ldi	r18, 0x01	; 1
    c364:	89 81       	ldd	r24, Y+1	; 0x01
    c366:	9a 81       	ldd	r25, Y+2	; 0x02
    c368:	ab 81       	ldd	r26, Y+3	; 0x03
    c36a:	bc 81       	ldd	r27, Y+4	; 0x04
    c36c:	04 97       	sbiw	r24, 0x04	; 4
    c36e:	a1 05       	cpc	r26, r1
    c370:	b1 05       	cpc	r27, r1
    c372:	09 f0       	breq	.+2      	; 0xc376 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x178>
    c374:	20 e0       	ldi	r18, 0x00	; 0
    c376:	88 8d       	ldd	r24, Y+24	; 0x18
    c378:	99 8d       	ldd	r25, Y+25	; 0x19
    c37a:	fc 01       	movw	r30, r24
    c37c:	20 83       	st	Z, r18
    c37e:	89 81       	ldd	r24, Y+1	; 0x01
    c380:	9a 81       	ldd	r25, Y+2	; 0x02
    c382:	ab 81       	ldd	r26, Y+3	; 0x03
    c384:	bc 81       	ldd	r27, Y+4	; 0x04
    c386:	88 0f       	add	r24, r24
    c388:	99 1f       	adc	r25, r25
    c38a:	aa 1f       	adc	r26, r26
    c38c:	bb 1f       	adc	r27, r27
    c38e:	88 0f       	add	r24, r24
    c390:	99 1f       	adc	r25, r25
    c392:	aa 1f       	adc	r26, r26
    c394:	bb 1f       	adc	r27, r27
    c396:	88 0f       	add	r24, r24
    c398:	99 1f       	adc	r25, r25
    c39a:	aa 1f       	adc	r26, r26
    c39c:	bb 1f       	adc	r27, r27
    c39e:	88 0f       	add	r24, r24
    c3a0:	99 1f       	adc	r25, r25
    c3a2:	aa 1f       	adc	r26, r26
    c3a4:	bb 1f       	adc	r27, r27
    c3a6:	88 0f       	add	r24, r24
    c3a8:	99 1f       	adc	r25, r25
    c3aa:	aa 1f       	adc	r26, r26
    c3ac:	bb 1f       	adc	r27, r27
    c3ae:	88 0f       	add	r24, r24
    c3b0:	99 1f       	adc	r25, r25
    c3b2:	aa 1f       	adc	r26, r26
    c3b4:	bb 1f       	adc	r27, r27
    c3b6:	88 0f       	add	r24, r24
    c3b8:	99 1f       	adc	r25, r25
    c3ba:	aa 1f       	adc	r26, r26
    c3bc:	bb 1f       	adc	r27, r27
    c3be:	92 50       	subi	r25, 0x02	; 2
    c3c0:	a1 09       	sbc	r26, r1
    c3c2:	b1 09       	sbc	r27, r1
    c3c4:	2c 89       	ldd	r18, Y+20	; 0x14
    c3c6:	3d 89       	ldd	r19, Y+21	; 0x15
    c3c8:	f9 01       	movw	r30, r18
    c3ca:	80 83       	st	Z, r24
    c3cc:	91 83       	std	Z+1, r25	; 0x01
    c3ce:	a2 83       	std	Z+2, r26	; 0x02
    c3d0:	b3 83       	std	Z+3, r27	; 0x03
    c3d2:	8c 89       	ldd	r24, Y+20	; 0x14
    c3d4:	9d 89       	ldd	r25, Y+21	; 0x15
    c3d6:	fc 01       	movw	r30, r24
    c3d8:	14 82       	std	Z+4, r1	; 0x04
    c3da:	15 82       	std	Z+5, r1	; 0x05
    c3dc:	16 82       	std	Z+6, r1	; 0x06
    c3de:	17 82       	std	Z+7, r1	; 0x07
    c3e0:	2c 89       	ldd	r18, Y+20	; 0x14
    c3e2:	3d 89       	ldd	r19, Y+21	; 0x15
    c3e4:	81 e0       	ldi	r24, 0x01	; 1
    c3e6:	90 e0       	ldi	r25, 0x00	; 0
    c3e8:	a0 e0       	ldi	r26, 0x00	; 0
    c3ea:	b0 e0       	ldi	r27, 0x00	; 0
    c3ec:	f9 01       	movw	r30, r18
    c3ee:	80 87       	std	Z+8, r24	; 0x08
    c3f0:	91 87       	std	Z+9, r25	; 0x09
    c3f2:	a2 87       	std	Z+10, r26	; 0x0a
    c3f4:	b3 87       	std	Z+11, r27	; 0x0b
    c3f6:	8d 81       	ldd	r24, Y+5	; 0x05
    c3f8:	9e 81       	ldd	r25, Y+6	; 0x06
    c3fa:	af 81       	ldd	r26, Y+7	; 0x07
    c3fc:	b8 85       	ldd	r27, Y+8	; 0x08
    c3fe:	bc 01       	movw	r22, r24
    c400:	cd 01       	movw	r24, r26
    c402:	69 96       	adiw	r28, 0x19	; 25
    c404:	cd bf       	out	0x3d, r28	; 61
    c406:	de bf       	out	0x3e, r29	; 62
    c408:	df 91       	pop	r29
    c40a:	cf 91       	pop	r28
    c40c:	1f 91       	pop	r17
    c40e:	0f 91       	pop	r16
    c410:	08 95       	ret

0000c412 <_Z19multisynth_estimatemP13u_si5351_regsPbS1_>:
 * Frequency_Hz multisynth_estimate(Frequency_Hz freq_Fout, Union_si5351_regs *reg, bool *int_mode, bool *divBy4)
 *
 * Note: do not call this function with global value freqVCOB == zero
 */
	Frequency_Hz multisynth_estimate(Frequency_Hz freq_Fout, Union_si5351_regs *reg, bool *int_mode, bool *divBy4)
	{
    c412:	0f 93       	push	r16
    c414:	1f 93       	push	r17
    c416:	cf 93       	push	r28
    c418:	df 93       	push	r29
    c41a:	cd b7       	in	r28, 0x3d	; 61
    c41c:	de b7       	in	r29, 0x3e	; 62
    c41e:	6e 97       	sbiw	r28, 0x1e	; 30
    c420:	cd bf       	out	0x3d, r28	; 61
    c422:	de bf       	out	0x3e, r29	; 62
    c424:	6d 8b       	std	Y+21, r22	; 0x15
    c426:	7e 8b       	std	Y+22, r23	; 0x16
    c428:	8f 8b       	std	Y+23, r24	; 0x17
    c42a:	98 8f       	std	Y+24, r25	; 0x18
    c42c:	49 8f       	std	Y+25, r20	; 0x19
    c42e:	5a 8f       	std	Y+26, r21	; 0x1a
    c430:	2b 8f       	std	Y+27, r18	; 0x1b
    c432:	3c 8f       	std	Y+28, r19	; 0x1c
    c434:	0d 8f       	std	Y+29, r16	; 0x1d
    c436:	1e 8f       	std	Y+30, r17	; 0x1e
				return(0);
			}
#endif  /* DO_BOUNDS_CHECKING */

		/* Determine integer part of feedback equation */
		a = freqVCOB / freq_Fout;
    c438:	80 91 c9 4a 	lds	r24, 0x4AC9	; 0x804ac9 <_ZL8freqVCOB>
    c43c:	90 91 ca 4a 	lds	r25, 0x4ACA	; 0x804aca <_ZL8freqVCOB+0x1>
    c440:	a0 91 cb 4a 	lds	r26, 0x4ACB	; 0x804acb <_ZL8freqVCOB+0x2>
    c444:	b0 91 cc 4a 	lds	r27, 0x4ACC	; 0x804acc <_ZL8freqVCOB+0x3>
    c448:	2d 89       	ldd	r18, Y+21	; 0x15
    c44a:	3e 89       	ldd	r19, Y+22	; 0x16
    c44c:	4f 89       	ldd	r20, Y+23	; 0x17
    c44e:	58 8d       	ldd	r21, Y+24	; 0x18
    c450:	bc 01       	movw	r22, r24
    c452:	cd 01       	movw	r24, r26
    c454:	0e 94 02 72 	call	0xe404	; 0xe404 <__udivmodsi4>
    c458:	da 01       	movw	r26, r20
    c45a:	c9 01       	movw	r24, r18
    c45c:	89 83       	std	Y+1, r24	; 0x01
    c45e:	9a 83       	std	Y+2, r25	; 0x02
    c460:	ab 83       	std	Y+3, r26	; 0x03
    c462:	bc 83       	std	Y+4, r27	; 0x04
		b = freqVCOB % freq_Fout;
    c464:	80 91 c9 4a 	lds	r24, 0x4AC9	; 0x804ac9 <_ZL8freqVCOB>
    c468:	90 91 ca 4a 	lds	r25, 0x4ACA	; 0x804aca <_ZL8freqVCOB+0x1>
    c46c:	a0 91 cb 4a 	lds	r26, 0x4ACB	; 0x804acb <_ZL8freqVCOB+0x2>
    c470:	b0 91 cc 4a 	lds	r27, 0x4ACC	; 0x804acc <_ZL8freqVCOB+0x3>
    c474:	2d 89       	ldd	r18, Y+21	; 0x15
    c476:	3e 89       	ldd	r19, Y+22	; 0x16
    c478:	4f 89       	ldd	r20, Y+23	; 0x17
    c47a:	58 8d       	ldd	r21, Y+24	; 0x18
    c47c:	bc 01       	movw	r22, r24
    c47e:	cd 01       	movw	r24, r26
    c480:	0e 94 02 72 	call	0xe404	; 0xe404 <__udivmodsi4>
    c484:	dc 01       	movw	r26, r24
    c486:	cb 01       	movw	r24, r22
    c488:	8d 87       	std	Y+13, r24	; 0x0d
    c48a:	9e 87       	std	Y+14, r25	; 0x0e
    c48c:	af 87       	std	Y+15, r26	; 0x0f
    c48e:	b8 8b       	std	Y+16, r27	; 0x10
		c = freq_Fout;
    c490:	8d 89       	ldd	r24, Y+21	; 0x15
    c492:	9e 89       	ldd	r25, Y+22	; 0x16
    c494:	af 89       	ldd	r26, Y+23	; 0x17
    c496:	b8 8d       	ldd	r27, Y+24	; 0x18
    c498:	89 8b       	std	Y+17, r24	; 0x11
    c49a:	9a 8b       	std	Y+18, r25	; 0x12
    c49c:	ab 8b       	std	Y+19, r26	; 0x13
    c49e:	bc 8b       	std	Y+20, r27	; 0x14
		reduce_by_gcd(&b, &c);  /* prevents overflow conditions and makes results agree with ClockBuilder */
    c4a0:	9e 01       	movw	r18, r28
    c4a2:	2f 5e       	subi	r18, 0xEF	; 239
    c4a4:	3f 4f       	sbci	r19, 0xFF	; 255
    c4a6:	ce 01       	movw	r24, r28
    c4a8:	0d 96       	adiw	r24, 0x0d	; 13
    c4aa:	b9 01       	movw	r22, r18
    c4ac:	0e 94 4c 60 	call	0xc098	; 0xc098 <_Z13reduce_by_gcdPmS_>

		/* Calculate the approximated output frequency given by fOUT = fvco / (a + b/c) */
		freq_Fout = freqVCOB;
    c4b0:	80 91 c9 4a 	lds	r24, 0x4AC9	; 0x804ac9 <_ZL8freqVCOB>
    c4b4:	90 91 ca 4a 	lds	r25, 0x4ACA	; 0x804aca <_ZL8freqVCOB+0x1>
    c4b8:	a0 91 cb 4a 	lds	r26, 0x4ACB	; 0x804acb <_ZL8freqVCOB+0x2>
    c4bc:	b0 91 cc 4a 	lds	r27, 0x4ACC	; 0x804acc <_ZL8freqVCOB+0x3>
    c4c0:	8d 8b       	std	Y+21, r24	; 0x15
    c4c2:	9e 8b       	std	Y+22, r25	; 0x16
    c4c4:	af 8b       	std	Y+23, r26	; 0x17
    c4c6:	b8 8f       	std	Y+24, r27	; 0x18
		freq_Fout /= (a * c + b);
    c4c8:	29 89       	ldd	r18, Y+17	; 0x11
    c4ca:	3a 89       	ldd	r19, Y+18	; 0x12
    c4cc:	4b 89       	ldd	r20, Y+19	; 0x13
    c4ce:	5c 89       	ldd	r21, Y+20	; 0x14
    c4d0:	89 81       	ldd	r24, Y+1	; 0x01
    c4d2:	9a 81       	ldd	r25, Y+2	; 0x02
    c4d4:	ab 81       	ldd	r26, Y+3	; 0x03
    c4d6:	bc 81       	ldd	r27, Y+4	; 0x04
    c4d8:	bc 01       	movw	r22, r24
    c4da:	cd 01       	movw	r24, r26
    c4dc:	0e 94 ca 71 	call	0xe394	; 0xe394 <__mulsi3>
    c4e0:	9b 01       	movw	r18, r22
    c4e2:	ac 01       	movw	r20, r24
    c4e4:	8d 85       	ldd	r24, Y+13	; 0x0d
    c4e6:	9e 85       	ldd	r25, Y+14	; 0x0e
    c4e8:	af 85       	ldd	r26, Y+15	; 0x0f
    c4ea:	b8 89       	ldd	r27, Y+16	; 0x10
    c4ec:	28 0f       	add	r18, r24
    c4ee:	39 1f       	adc	r19, r25
    c4f0:	4a 1f       	adc	r20, r26
    c4f2:	5b 1f       	adc	r21, r27
    c4f4:	8d 89       	ldd	r24, Y+21	; 0x15
    c4f6:	9e 89       	ldd	r25, Y+22	; 0x16
    c4f8:	af 89       	ldd	r26, Y+23	; 0x17
    c4fa:	b8 8d       	ldd	r27, Y+24	; 0x18
    c4fc:	bc 01       	movw	r22, r24
    c4fe:	cd 01       	movw	r24, r26
    c500:	0e 94 02 72 	call	0xe404	; 0xe404 <__udivmodsi4>
    c504:	da 01       	movw	r26, r20
    c506:	c9 01       	movw	r24, r18
    c508:	8d 8b       	std	Y+21, r24	; 0x15
    c50a:	9e 8b       	std	Y+22, r25	; 0x16
    c50c:	af 8b       	std	Y+23, r26	; 0x17
    c50e:	b8 8f       	std	Y+24, r27	; 0x18
		freq_Fout *= c;
    c510:	89 89       	ldd	r24, Y+17	; 0x11
    c512:	9a 89       	ldd	r25, Y+18	; 0x12
    c514:	ab 89       	ldd	r26, Y+19	; 0x13
    c516:	bc 89       	ldd	r27, Y+20	; 0x14
    c518:	2d 89       	ldd	r18, Y+21	; 0x15
    c51a:	3e 89       	ldd	r19, Y+22	; 0x16
    c51c:	4f 89       	ldd	r20, Y+23	; 0x17
    c51e:	58 8d       	ldd	r21, Y+24	; 0x18
    c520:	bc 01       	movw	r22, r24
    c522:	cd 01       	movw	r24, r26
    c524:	0e 94 ca 71 	call	0xe394	; 0xe394 <__mulsi3>
    c528:	dc 01       	movw	r26, r24
    c52a:	cb 01       	movw	r24, r22
    c52c:	8d 8b       	std	Y+21, r24	; 0x15
    c52e:	9e 8b       	std	Y+22, r25	; 0x16
    c530:	af 8b       	std	Y+23, r26	; 0x17
    c532:	b8 8f       	std	Y+24, r27	; 0x18

		*int_mode = (b == 0) && !(a % 2);
    c534:	8d 85       	ldd	r24, Y+13	; 0x0d
    c536:	9e 85       	ldd	r25, Y+14	; 0x0e
    c538:	af 85       	ldd	r26, Y+15	; 0x0f
    c53a:	b8 89       	ldd	r27, Y+16	; 0x10
    c53c:	89 2b       	or	r24, r25
    c53e:	8a 2b       	or	r24, r26
    c540:	8b 2b       	or	r24, r27
    c542:	71 f4       	brne	.+28     	; 0xc560 <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x14e>
    c544:	89 81       	ldd	r24, Y+1	; 0x01
    c546:	9a 81       	ldd	r25, Y+2	; 0x02
    c548:	ab 81       	ldd	r26, Y+3	; 0x03
    c54a:	bc 81       	ldd	r27, Y+4	; 0x04
    c54c:	81 70       	andi	r24, 0x01	; 1
    c54e:	99 27       	eor	r25, r25
    c550:	aa 27       	eor	r26, r26
    c552:	bb 27       	eor	r27, r27
    c554:	89 2b       	or	r24, r25
    c556:	8a 2b       	or	r24, r26
    c558:	8b 2b       	or	r24, r27
    c55a:	11 f4       	brne	.+4      	; 0xc560 <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x14e>
    c55c:	21 e0       	ldi	r18, 0x01	; 1
    c55e:	01 c0       	rjmp	.+2      	; 0xc562 <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x150>
    c560:	20 e0       	ldi	r18, 0x00	; 0
    c562:	8b 8d       	ldd	r24, Y+27	; 0x1b
    c564:	9c 8d       	ldd	r25, Y+28	; 0x1c
    c566:	fc 01       	movw	r30, r24
    c568:	20 83       	st	Z, r18
		*divBy4 = (a == 4) && *int_mode;
    c56a:	89 81       	ldd	r24, Y+1	; 0x01
    c56c:	9a 81       	ldd	r25, Y+2	; 0x02
    c56e:	ab 81       	ldd	r26, Y+3	; 0x03
    c570:	bc 81       	ldd	r27, Y+4	; 0x04
    c572:	04 97       	sbiw	r24, 0x04	; 4
    c574:	a1 05       	cpc	r26, r1
    c576:	b1 05       	cpc	r27, r1
    c578:	41 f4       	brne	.+16     	; 0xc58a <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x178>
    c57a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    c57c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    c57e:	fc 01       	movw	r30, r24
    c580:	80 81       	ld	r24, Z
    c582:	88 23       	and	r24, r24
    c584:	11 f0       	breq	.+4      	; 0xc58a <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x178>
    c586:	21 e0       	ldi	r18, 0x01	; 1
    c588:	01 c0       	rjmp	.+2      	; 0xc58c <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x17a>
    c58a:	20 e0       	ldi	r18, 0x00	; 0
    c58c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    c58e:	9e 8d       	ldd	r25, Y+30	; 0x1e
    c590:	fc 01       	movw	r30, r24
    c592:	20 83       	st	Z, r18

		/* Calculate parameters */
		if(*divBy4)
    c594:	8d 8d       	ldd	r24, Y+29	; 0x1d
    c596:	9e 8d       	ldd	r25, Y+30	; 0x1e
    c598:	fc 01       	movw	r30, r24
    c59a:	80 81       	ld	r24, Z
    c59c:	88 23       	and	r24, r24
    c59e:	d1 f0       	breq	.+52     	; 0xc5d4 <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x1c2>
		{
			reg->ms.p1 = 0;
    c5a0:	89 8d       	ldd	r24, Y+25	; 0x19
    c5a2:	9a 8d       	ldd	r25, Y+26	; 0x1a
    c5a4:	fc 01       	movw	r30, r24
    c5a6:	10 82       	st	Z, r1
    c5a8:	11 82       	std	Z+1, r1	; 0x01
    c5aa:	12 82       	std	Z+2, r1	; 0x02
    c5ac:	13 82       	std	Z+3, r1	; 0x03
			reg->ms.p2 = 0;
    c5ae:	89 8d       	ldd	r24, Y+25	; 0x19
    c5b0:	9a 8d       	ldd	r25, Y+26	; 0x1a
    c5b2:	fc 01       	movw	r30, r24
    c5b4:	14 82       	std	Z+4, r1	; 0x04
    c5b6:	15 82       	std	Z+5, r1	; 0x05
    c5b8:	16 82       	std	Z+6, r1	; 0x06
    c5ba:	17 82       	std	Z+7, r1	; 0x07
			reg->ms.p3 = 1;
    c5bc:	29 8d       	ldd	r18, Y+25	; 0x19
    c5be:	3a 8d       	ldd	r19, Y+26	; 0x1a
    c5c0:	81 e0       	ldi	r24, 0x01	; 1
    c5c2:	90 e0       	ldi	r25, 0x00	; 0
    c5c4:	a0 e0       	ldi	r26, 0x00	; 0
    c5c6:	b0 e0       	ldi	r27, 0x00	; 0
    c5c8:	f9 01       	movw	r30, r18
    c5ca:	80 87       	std	Z+8, r24	; 0x08
    c5cc:	91 87       	std	Z+9, r25	; 0x09
    c5ce:	a2 87       	std	Z+10, r26	; 0x0a
    c5d0:	b3 87       	std	Z+11, r27	; 0x0b
    c5d2:	92 c0       	rjmp	.+292    	; 0xc6f8 <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x2e6>
		}
		else
		{
			uint32_t bx128 = b << 7;
    c5d4:	8d 85       	ldd	r24, Y+13	; 0x0d
    c5d6:	9e 85       	ldd	r25, Y+14	; 0x0e
    c5d8:	af 85       	ldd	r26, Y+15	; 0x0f
    c5da:	b8 89       	ldd	r27, Y+16	; 0x10
    c5dc:	88 0f       	add	r24, r24
    c5de:	99 1f       	adc	r25, r25
    c5e0:	aa 1f       	adc	r26, r26
    c5e2:	bb 1f       	adc	r27, r27
    c5e4:	88 0f       	add	r24, r24
    c5e6:	99 1f       	adc	r25, r25
    c5e8:	aa 1f       	adc	r26, r26
    c5ea:	bb 1f       	adc	r27, r27
    c5ec:	88 0f       	add	r24, r24
    c5ee:	99 1f       	adc	r25, r25
    c5f0:	aa 1f       	adc	r26, r26
    c5f2:	bb 1f       	adc	r27, r27
    c5f4:	88 0f       	add	r24, r24
    c5f6:	99 1f       	adc	r25, r25
    c5f8:	aa 1f       	adc	r26, r26
    c5fa:	bb 1f       	adc	r27, r27
    c5fc:	88 0f       	add	r24, r24
    c5fe:	99 1f       	adc	r25, r25
    c600:	aa 1f       	adc	r26, r26
    c602:	bb 1f       	adc	r27, r27
    c604:	88 0f       	add	r24, r24
    c606:	99 1f       	adc	r25, r25
    c608:	aa 1f       	adc	r26, r26
    c60a:	bb 1f       	adc	r27, r27
    c60c:	88 0f       	add	r24, r24
    c60e:	99 1f       	adc	r25, r25
    c610:	aa 1f       	adc	r26, r26
    c612:	bb 1f       	adc	r27, r27
    c614:	8d 83       	std	Y+5, r24	; 0x05
    c616:	9e 83       	std	Y+6, r25	; 0x06
    c618:	af 83       	std	Y+7, r26	; 0x07
    c61a:	b8 87       	std	Y+8, r27	; 0x08
			uint32_t bx128overc = bx128 / c;
    c61c:	29 89       	ldd	r18, Y+17	; 0x11
    c61e:	3a 89       	ldd	r19, Y+18	; 0x12
    c620:	4b 89       	ldd	r20, Y+19	; 0x13
    c622:	5c 89       	ldd	r21, Y+20	; 0x14
    c624:	8d 81       	ldd	r24, Y+5	; 0x05
    c626:	9e 81       	ldd	r25, Y+6	; 0x06
    c628:	af 81       	ldd	r26, Y+7	; 0x07
    c62a:	b8 85       	ldd	r27, Y+8	; 0x08
    c62c:	bc 01       	movw	r22, r24
    c62e:	cd 01       	movw	r24, r26
    c630:	0e 94 02 72 	call	0xe404	; 0xe404 <__udivmodsi4>
    c634:	da 01       	movw	r26, r20
    c636:	c9 01       	movw	r24, r18
    c638:	89 87       	std	Y+9, r24	; 0x09
    c63a:	9a 87       	std	Y+10, r25	; 0x0a
    c63c:	ab 87       	std	Y+11, r26	; 0x0b
    c63e:	bc 87       	std	Y+12, r27	; 0x0c
			reg->ms.p1 = (uint32_t)((a << 7) + bx128overc) - 512;   /* 128 * a + floor((128 * b) / c) - 512 */
    c640:	89 81       	ldd	r24, Y+1	; 0x01
    c642:	9a 81       	ldd	r25, Y+2	; 0x02
    c644:	ab 81       	ldd	r26, Y+3	; 0x03
    c646:	bc 81       	ldd	r27, Y+4	; 0x04
    c648:	88 0f       	add	r24, r24
    c64a:	99 1f       	adc	r25, r25
    c64c:	aa 1f       	adc	r26, r26
    c64e:	bb 1f       	adc	r27, r27
    c650:	88 0f       	add	r24, r24
    c652:	99 1f       	adc	r25, r25
    c654:	aa 1f       	adc	r26, r26
    c656:	bb 1f       	adc	r27, r27
    c658:	88 0f       	add	r24, r24
    c65a:	99 1f       	adc	r25, r25
    c65c:	aa 1f       	adc	r26, r26
    c65e:	bb 1f       	adc	r27, r27
    c660:	88 0f       	add	r24, r24
    c662:	99 1f       	adc	r25, r25
    c664:	aa 1f       	adc	r26, r26
    c666:	bb 1f       	adc	r27, r27
    c668:	88 0f       	add	r24, r24
    c66a:	99 1f       	adc	r25, r25
    c66c:	aa 1f       	adc	r26, r26
    c66e:	bb 1f       	adc	r27, r27
    c670:	88 0f       	add	r24, r24
    c672:	99 1f       	adc	r25, r25
    c674:	aa 1f       	adc	r26, r26
    c676:	bb 1f       	adc	r27, r27
    c678:	88 0f       	add	r24, r24
    c67a:	99 1f       	adc	r25, r25
    c67c:	aa 1f       	adc	r26, r26
    c67e:	bb 1f       	adc	r27, r27
    c680:	9c 01       	movw	r18, r24
    c682:	ad 01       	movw	r20, r26
    c684:	89 85       	ldd	r24, Y+9	; 0x09
    c686:	9a 85       	ldd	r25, Y+10	; 0x0a
    c688:	ab 85       	ldd	r26, Y+11	; 0x0b
    c68a:	bc 85       	ldd	r27, Y+12	; 0x0c
    c68c:	82 0f       	add	r24, r18
    c68e:	93 1f       	adc	r25, r19
    c690:	a4 1f       	adc	r26, r20
    c692:	b5 1f       	adc	r27, r21
    c694:	92 50       	subi	r25, 0x02	; 2
    c696:	a1 09       	sbc	r26, r1
    c698:	b1 09       	sbc	r27, r1
    c69a:	29 8d       	ldd	r18, Y+25	; 0x19
    c69c:	3a 8d       	ldd	r19, Y+26	; 0x1a
    c69e:	f9 01       	movw	r30, r18
    c6a0:	80 83       	st	Z, r24
    c6a2:	91 83       	std	Z+1, r25	; 0x01
    c6a4:	a2 83       	std	Z+2, r26	; 0x02
    c6a6:	b3 83       	std	Z+3, r27	; 0x03
			reg->ms.p2 = (uint32_t)bx128 - (c * bx128overc);        /* 128 * b - c * floor((128 * b) / c) */
    c6a8:	29 89       	ldd	r18, Y+17	; 0x11
    c6aa:	3a 89       	ldd	r19, Y+18	; 0x12
    c6ac:	4b 89       	ldd	r20, Y+19	; 0x13
    c6ae:	5c 89       	ldd	r21, Y+20	; 0x14
    c6b0:	89 85       	ldd	r24, Y+9	; 0x09
    c6b2:	9a 85       	ldd	r25, Y+10	; 0x0a
    c6b4:	ab 85       	ldd	r26, Y+11	; 0x0b
    c6b6:	bc 85       	ldd	r27, Y+12	; 0x0c
    c6b8:	bc 01       	movw	r22, r24
    c6ba:	cd 01       	movw	r24, r26
    c6bc:	0e 94 ca 71 	call	0xe394	; 0xe394 <__mulsi3>
    c6c0:	9b 01       	movw	r18, r22
    c6c2:	ac 01       	movw	r20, r24
    c6c4:	8d 81       	ldd	r24, Y+5	; 0x05
    c6c6:	9e 81       	ldd	r25, Y+6	; 0x06
    c6c8:	af 81       	ldd	r26, Y+7	; 0x07
    c6ca:	b8 85       	ldd	r27, Y+8	; 0x08
    c6cc:	82 1b       	sub	r24, r18
    c6ce:	93 0b       	sbc	r25, r19
    c6d0:	a4 0b       	sbc	r26, r20
    c6d2:	b5 0b       	sbc	r27, r21
    c6d4:	29 8d       	ldd	r18, Y+25	; 0x19
    c6d6:	3a 8d       	ldd	r19, Y+26	; 0x1a
    c6d8:	f9 01       	movw	r30, r18
    c6da:	84 83       	std	Z+4, r24	; 0x04
    c6dc:	95 83       	std	Z+5, r25	; 0x05
    c6de:	a6 83       	std	Z+6, r26	; 0x06
    c6e0:	b7 83       	std	Z+7, r27	; 0x07
			reg->ms.p3 = c;
    c6e2:	89 89       	ldd	r24, Y+17	; 0x11
    c6e4:	9a 89       	ldd	r25, Y+18	; 0x12
    c6e6:	ab 89       	ldd	r26, Y+19	; 0x13
    c6e8:	bc 89       	ldd	r27, Y+20	; 0x14
    c6ea:	29 8d       	ldd	r18, Y+25	; 0x19
    c6ec:	3a 8d       	ldd	r19, Y+26	; 0x1a
    c6ee:	f9 01       	movw	r30, r18
    c6f0:	80 87       	std	Z+8, r24	; 0x08
    c6f2:	91 87       	std	Z+9, r25	; 0x09
    c6f4:	a2 87       	std	Z+10, r26	; 0x0a
    c6f6:	b3 87       	std	Z+11, r27	; 0x0b
		}

		return(freq_Fout);
    c6f8:	8d 89       	ldd	r24, Y+21	; 0x15
    c6fa:	9e 89       	ldd	r25, Y+22	; 0x16
    c6fc:	af 89       	ldd	r26, Y+23	; 0x17
    c6fe:	b8 8d       	ldd	r27, Y+24	; 0x18
	}
    c700:	bc 01       	movw	r22, r24
    c702:	cd 01       	movw	r24, r26
    c704:	6e 96       	adiw	r28, 0x1e	; 30
    c706:	cd bf       	out	0x3d, r28	; 61
    c708:	de bf       	out	0x3e, r29	; 62
    c70a:	df 91       	pop	r29
    c70c:	cf 91       	pop	r28
    c70e:	1f 91       	pop	r17
    c710:	0f 91       	pop	r16
    c712:	08 95       	ret

0000c714 <_Z17si5351_write_bulkhPhh>:


	bool si5351_write_bulk(uint8_t regAddr, uint8_t *data, uint8_t bytes)
	{
    c714:	cf 93       	push	r28
    c716:	df 93       	push	r29
    c718:	cd b7       	in	r28, 0x3d	; 61
    c71a:	de b7       	in	r29, 0x3e	; 62
    c71c:	26 97       	sbiw	r28, 0x06	; 6
    c71e:	cd bf       	out	0x3d, r28	; 61
    c720:	de bf       	out	0x3e, r29	; 62
    c722:	8b 83       	std	Y+3, r24	; 0x03
    c724:	6c 83       	std	Y+4, r22	; 0x04
    c726:	7d 83       	std	Y+5, r23	; 0x05
    c728:	4e 83       	std	Y+6, r20	; 0x06
		uint8_t tries = 10;
    c72a:	8a e0       	ldi	r24, 0x0A	; 10
    c72c:	89 83       	std	Y+1, r24	; 0x01
		bool fail;
		while(tries-- && (fail = I2C_1_SendData(SI5351_I2C_SLAVE_ADDR, regAddr, data, bytes) != bytes));
    c72e:	89 81       	ldd	r24, Y+1	; 0x01
    c730:	9f ef       	ldi	r25, 0xFF	; 255
    c732:	98 0f       	add	r25, r24
    c734:	99 83       	std	Y+1, r25	; 0x01
    c736:	88 23       	and	r24, r24
    c738:	a1 f0       	breq	.+40     	; 0xc762 <_Z17si5351_write_bulkhPhh+0x4e>
    c73a:	8c 81       	ldd	r24, Y+4	; 0x04
    c73c:	9d 81       	ldd	r25, Y+5	; 0x05
    c73e:	2e 81       	ldd	r18, Y+6	; 0x06
    c740:	ac 01       	movw	r20, r24
    c742:	6b 81       	ldd	r22, Y+3	; 0x03
    c744:	80 ec       	ldi	r24, 0xC0	; 192
    c746:	0e 94 6b 4c 	call	0x98d6	; 0x98d6 <I2C_1_SendData>
    c74a:	28 2f       	mov	r18, r24
    c74c:	81 e0       	ldi	r24, 0x01	; 1
    c74e:	9e 81       	ldd	r25, Y+6	; 0x06
    c750:	29 17       	cp	r18, r25
    c752:	09 f4       	brne	.+2      	; 0xc756 <_Z17si5351_write_bulkhPhh+0x42>
    c754:	80 e0       	ldi	r24, 0x00	; 0
    c756:	8a 83       	std	Y+2, r24	; 0x02
    c758:	8a 81       	ldd	r24, Y+2	; 0x02
    c75a:	88 23       	and	r24, r24
    c75c:	11 f0       	breq	.+4      	; 0xc762 <_Z17si5351_write_bulkhPhh+0x4e>
    c75e:	81 e0       	ldi	r24, 0x01	; 1
    c760:	01 c0       	rjmp	.+2      	; 0xc764 <_Z17si5351_write_bulkhPhh+0x50>
    c762:	80 e0       	ldi	r24, 0x00	; 0
    c764:	88 23       	and	r24, r24
    c766:	09 f0       	breq	.+2      	; 0xc76a <_Z17si5351_write_bulkhPhh+0x56>
    c768:	e2 cf       	rjmp	.-60     	; 0xc72e <_Z17si5351_write_bulkhPhh+0x1a>
		return(fail);
    c76a:	8a 81       	ldd	r24, Y+2	; 0x02
	}
    c76c:	26 96       	adiw	r28, 0x06	; 6
    c76e:	cd bf       	out	0x3d, r28	; 61
    c770:	de bf       	out	0x3e, r29	; 62
    c772:	df 91       	pop	r29
    c774:	cf 91       	pop	r28
    c776:	08 95       	ret

0000c778 <_Z16si5351_read_bulkhPhh>:

	bool si5351_read_bulk(uint8_t regAddr, uint8_t *data, uint8_t bytes)
	{
    c778:	cf 93       	push	r28
    c77a:	df 93       	push	r29
    c77c:	cd b7       	in	r28, 0x3d	; 61
    c77e:	de b7       	in	r29, 0x3e	; 62
    c780:	26 97       	sbiw	r28, 0x06	; 6
    c782:	cd bf       	out	0x3d, r28	; 61
    c784:	de bf       	out	0x3e, r29	; 62
    c786:	8b 83       	std	Y+3, r24	; 0x03
    c788:	6c 83       	std	Y+4, r22	; 0x04
    c78a:	7d 83       	std	Y+5, r23	; 0x05
    c78c:	4e 83       	std	Y+6, r20	; 0x06
		uint8_t tries = 10;
    c78e:	8a e0       	ldi	r24, 0x0A	; 10
    c790:	89 83       	std	Y+1, r24	; 0x01
		bool fail;
		while(tries-- && (fail = I2C_1_GetData(SI5351_I2C_SLAVE_ADDR, regAddr, data, bytes) != bytes));
    c792:	89 81       	ldd	r24, Y+1	; 0x01
    c794:	9f ef       	ldi	r25, 0xFF	; 255
    c796:	98 0f       	add	r25, r24
    c798:	99 83       	std	Y+1, r25	; 0x01
    c79a:	88 23       	and	r24, r24
    c79c:	a1 f0       	breq	.+40     	; 0xc7c6 <_Z16si5351_read_bulkhPhh+0x4e>
    c79e:	8c 81       	ldd	r24, Y+4	; 0x04
    c7a0:	9d 81       	ldd	r25, Y+5	; 0x05
    c7a2:	2e 81       	ldd	r18, Y+6	; 0x06
    c7a4:	ac 01       	movw	r20, r24
    c7a6:	6b 81       	ldd	r22, Y+3	; 0x03
    c7a8:	80 ec       	ldi	r24, 0xC0	; 192
    c7aa:	0e 94 d4 4c 	call	0x99a8	; 0x99a8 <I2C_1_GetData>
    c7ae:	28 2f       	mov	r18, r24
    c7b0:	81 e0       	ldi	r24, 0x01	; 1
    c7b2:	9e 81       	ldd	r25, Y+6	; 0x06
    c7b4:	29 17       	cp	r18, r25
    c7b6:	09 f4       	brne	.+2      	; 0xc7ba <_Z16si5351_read_bulkhPhh+0x42>
    c7b8:	80 e0       	ldi	r24, 0x00	; 0
    c7ba:	8a 83       	std	Y+2, r24	; 0x02
    c7bc:	8a 81       	ldd	r24, Y+2	; 0x02
    c7be:	88 23       	and	r24, r24
    c7c0:	11 f0       	breq	.+4      	; 0xc7c6 <_Z16si5351_read_bulkhPhh+0x4e>
    c7c2:	81 e0       	ldi	r24, 0x01	; 1
    c7c4:	01 c0       	rjmp	.+2      	; 0xc7c8 <_Z16si5351_read_bulkhPhh+0x50>
    c7c6:	80 e0       	ldi	r24, 0x00	; 0
    c7c8:	88 23       	and	r24, r24
    c7ca:	09 f0       	breq	.+2      	; 0xc7ce <_Z16si5351_read_bulkhPhh+0x56>
    c7cc:	e2 cf       	rjmp	.-60     	; 0xc792 <_Z16si5351_read_bulkhPhh+0x1a>
		return(fail);
    c7ce:	8a 81       	ldd	r24, Y+2	; 0x02
	}
    c7d0:	26 96       	adiw	r28, 0x06	; 6
    c7d2:	cd bf       	out	0x3d, r28	; 61
    c7d4:	de bf       	out	0x3e, r29	; 62
    c7d6:	df 91       	pop	r29
    c7d8:	cf 91       	pop	r28
    c7da:	08 95       	ret

0000c7dc <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll>:
 *
 * Set the desired PLL source for a multisynth.
 *
 */
	bool set_multisynth_registers_source(Si5351_clock clk, Si5351_pll pll)
	{
    c7dc:	cf 93       	push	r28
    c7de:	df 93       	push	r29
    c7e0:	cd b7       	in	r28, 0x3d	; 61
    c7e2:	de b7       	in	r29, 0x3e	; 62
    c7e4:	25 97       	sbiw	r28, 0x05	; 5
    c7e6:	cd bf       	out	0x3d, r28	; 61
    c7e8:	de bf       	out	0x3e, r29	; 62
    c7ea:	8c 83       	std	Y+4, r24	; 0x04
    c7ec:	6d 83       	std	Y+5, r22	; 0x05
		uint8_t reg_val;
		uint8_t data[2];
		
		if(si5351_read_bulk(SI5351_CLK0_CTRL + (uint8_t)clk, data, 1))
    c7ee:	8c 81       	ldd	r24, Y+4	; 0x04
    c7f0:	20 e1       	ldi	r18, 0x10	; 16
    c7f2:	28 0f       	add	r18, r24
    c7f4:	ce 01       	movw	r24, r28
    c7f6:	02 96       	adiw	r24, 0x02	; 2
    c7f8:	41 e0       	ldi	r20, 0x01	; 1
    c7fa:	bc 01       	movw	r22, r24
    c7fc:	82 2f       	mov	r24, r18
    c7fe:	0e 94 bc 63 	call	0xc778	; 0xc778 <_Z16si5351_read_bulkhPhh>
    c802:	88 23       	and	r24, r24
    c804:	11 f0       	breq	.+4      	; 0xc80a <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x2e>
		{
			return(true);
    c806:	81 e0       	ldi	r24, 0x01	; 1
    c808:	20 c0       	rjmp	.+64     	; 0xc84a <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x6e>
		}
		
		reg_val = data[0];
    c80a:	8a 81       	ldd	r24, Y+2	; 0x02
    c80c:	89 83       	std	Y+1, r24	; 0x01

		if(pll == SI5351_PLLA)
    c80e:	8d 81       	ldd	r24, Y+5	; 0x05
    c810:	81 30       	cpi	r24, 0x01	; 1
    c812:	21 f4       	brne	.+8      	; 0xc81c <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x40>
		{
			reg_val &= ~(SI5351_CLK_PLL_SELECT);
    c814:	89 81       	ldd	r24, Y+1	; 0x01
    c816:	8f 7d       	andi	r24, 0xDF	; 223
    c818:	89 83       	std	Y+1, r24	; 0x01
    c81a:	06 c0       	rjmp	.+12     	; 0xc828 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x4c>
		}
		else if(pll == SI5351_PLLB)
    c81c:	8d 81       	ldd	r24, Y+5	; 0x05
    c81e:	82 30       	cpi	r24, 0x02	; 2
    c820:	19 f4       	brne	.+6      	; 0xc828 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x4c>
		{
			reg_val |= SI5351_CLK_PLL_SELECT;
    c822:	89 81       	ldd	r24, Y+1	; 0x01
    c824:	80 62       	ori	r24, 0x20	; 32
    c826:	89 83       	std	Y+1, r24	; 0x01
		}

		data[0] = reg_val;
    c828:	89 81       	ldd	r24, Y+1	; 0x01
    c82a:	8a 83       	std	Y+2, r24	; 0x02
		if(si5351_write_bulk(SI5351_CLK0_CTRL + (uint8_t)clk, data, 1))
    c82c:	8c 81       	ldd	r24, Y+4	; 0x04
    c82e:	20 e1       	ldi	r18, 0x10	; 16
    c830:	28 0f       	add	r18, r24
    c832:	ce 01       	movw	r24, r28
    c834:	02 96       	adiw	r24, 0x02	; 2
    c836:	41 e0       	ldi	r20, 0x01	; 1
    c838:	bc 01       	movw	r22, r24
    c83a:	82 2f       	mov	r24, r18
    c83c:	0e 94 8a 63 	call	0xc714	; 0xc714 <_Z17si5351_write_bulkhPhh>
    c840:	88 23       	and	r24, r24
    c842:	11 f0       	breq	.+4      	; 0xc848 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x6c>
		{
			return(true);
    c844:	81 e0       	ldi	r24, 0x01	; 1
    c846:	01 c0       	rjmp	.+2      	; 0xc84a <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x6e>
		}
		
		return(false);
    c848:	80 e0       	ldi	r24, 0x00	; 0
	}
    c84a:	25 96       	adiw	r28, 0x05	; 5
    c84c:	cd bf       	out	0x3d, r28	; 61
    c84e:	de bf       	out	0x3e, r29	; 62
    c850:	df 91       	pop	r29
    c852:	cf 91       	pop	r28
    c854:	08 95       	ret

0000c856 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb>:
 * r_div - Desired r_div ratio
 * div_by_4 - 1 Divide By 4 mode: 0 to disable
 *
 */
	bool set_multisynth_registers(Si5351_clock clk, Union_si5351_regs ms_reg, bool int_mode, uint8_t r_div, bool div_by_4)
	{
    c856:	8f 92       	push	r8
    c858:	af 92       	push	r10
    c85a:	cf 92       	push	r12
    c85c:	df 92       	push	r13
    c85e:	ef 92       	push	r14
    c860:	ff 92       	push	r15
    c862:	0f 93       	push	r16
    c864:	1f 93       	push	r17
    c866:	cf 93       	push	r28
    c868:	df 93       	push	r29
    c86a:	cd b7       	in	r28, 0x3d	; 61
    c86c:	de b7       	in	r29, 0x3e	; 62
    c86e:	6e 97       	sbiw	r28, 0x1e	; 30
    c870:	cd bf       	out	0x3d, r28	; 61
    c872:	de bf       	out	0x3e, r29	; 62
    c874:	88 8b       	std	Y+16, r24	; 0x10
    c876:	c9 8a       	std	Y+17, r12	; 0x11
    c878:	da 8a       	std	Y+18, r13	; 0x12
    c87a:	eb 8a       	std	Y+19, r14	; 0x13
    c87c:	fc 8a       	std	Y+20, r15	; 0x14
    c87e:	0d 8b       	std	Y+21, r16	; 0x15
    c880:	1e 8b       	std	Y+22, r17	; 0x16
    c882:	2f 8b       	std	Y+23, r18	; 0x17
    c884:	38 8f       	std	Y+24, r19	; 0x18
    c886:	49 8f       	std	Y+25, r20	; 0x19
    c888:	5a 8f       	std	Y+26, r21	; 0x1a
    c88a:	6b 8f       	std	Y+27, r22	; 0x1b
    c88c:	7c 8f       	std	Y+28, r23	; 0x1c
    c88e:	ad 8e       	std	Y+29, r10	; 0x1d
    c890:	8e 8e       	std	Y+30, r8	; 0x1e
		uint8_t params[11];
		uint8_t i = 0;
    c892:	19 82       	std	Y+1, r1	; 0x01
		uint8_t reg_val;
		uint8_t data[2];

		/* Registers 42-43 for CLK0; 50-51 for CLK1 */
		params[i++] = ms_reg.reg.p3_1;
    c894:	89 81       	ldd	r24, Y+1	; 0x01
    c896:	91 e0       	ldi	r25, 0x01	; 1
    c898:	98 0f       	add	r25, r24
    c89a:	99 83       	std	Y+1, r25	; 0x01
    c89c:	88 2f       	mov	r24, r24
    c89e:	90 e0       	ldi	r25, 0x00	; 0
    c8a0:	4a 8d       	ldd	r20, Y+26	; 0x1a
    c8a2:	9e 01       	movw	r18, r28
    c8a4:	2d 5f       	subi	r18, 0xFD	; 253
    c8a6:	3f 4f       	sbci	r19, 0xFF	; 255
    c8a8:	82 0f       	add	r24, r18
    c8aa:	93 1f       	adc	r25, r19
    c8ac:	fc 01       	movw	r30, r24
    c8ae:	40 83       	st	Z, r20
		params[i++] = ms_reg.reg.p3_0;
    c8b0:	89 81       	ldd	r24, Y+1	; 0x01
    c8b2:	91 e0       	ldi	r25, 0x01	; 1
    c8b4:	98 0f       	add	r25, r24
    c8b6:	99 83       	std	Y+1, r25	; 0x01
    c8b8:	88 2f       	mov	r24, r24
    c8ba:	90 e0       	ldi	r25, 0x00	; 0
    c8bc:	49 8d       	ldd	r20, Y+25	; 0x19
    c8be:	9e 01       	movw	r18, r28
    c8c0:	2d 5f       	subi	r18, 0xFD	; 253
    c8c2:	3f 4f       	sbci	r19, 0xFF	; 255
    c8c4:	82 0f       	add	r24, r18
    c8c6:	93 1f       	adc	r25, r19
    c8c8:	fc 01       	movw	r30, r24
    c8ca:	40 83       	st	Z, r20

		/* Register 44 for CLK0; 52 for CLK1 */
		if(si5351_read_bulk((SI5351_CLK0_PARAMETERS + 2) + (clk * 8), data, 1))
    c8cc:	88 89       	ldd	r24, Y+16	; 0x10
    c8ce:	88 0f       	add	r24, r24
    c8d0:	88 0f       	add	r24, r24
    c8d2:	88 0f       	add	r24, r24
    c8d4:	2c e2       	ldi	r18, 0x2C	; 44
    c8d6:	28 0f       	add	r18, r24
    c8d8:	ce 01       	movw	r24, r28
    c8da:	0e 96       	adiw	r24, 0x0e	; 14
    c8dc:	41 e0       	ldi	r20, 0x01	; 1
    c8de:	bc 01       	movw	r22, r24
    c8e0:	82 2f       	mov	r24, r18
    c8e2:	0e 94 bc 63 	call	0xc778	; 0xc778 <_Z16si5351_read_bulkhPhh>
    c8e6:	88 23       	and	r24, r24
    c8e8:	11 f0       	breq	.+4      	; 0xc8ee <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x98>
		{
			return(true);
    c8ea:	81 e0       	ldi	r24, 0x01	; 1
    c8ec:	bc c0       	rjmp	.+376    	; 0xca66 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x210>
		}
		
		reg_val = data[0];
    c8ee:	8e 85       	ldd	r24, Y+14	; 0x0e
    c8f0:	8a 83       	std	Y+2, r24	; 0x02

		reg_val &= 0xFC;    /*~(0x03); */
    c8f2:	8a 81       	ldd	r24, Y+2	; 0x02
    c8f4:	8c 7f       	andi	r24, 0xFC	; 252
    c8f6:	8a 83       	std	Y+2, r24	; 0x02
		params[i++] = reg_val | (ms_reg.reg.p1_2 & 0x03);
    c8f8:	89 81       	ldd	r24, Y+1	; 0x01
    c8fa:	91 e0       	ldi	r25, 0x01	; 1
    c8fc:	98 0f       	add	r25, r24
    c8fe:	99 83       	std	Y+1, r25	; 0x01
    c900:	88 2f       	mov	r24, r24
    c902:	90 e0       	ldi	r25, 0x00	; 0
    c904:	2b 89       	ldd	r18, Y+19	; 0x13
    c906:	32 2f       	mov	r19, r18
    c908:	33 70       	andi	r19, 0x03	; 3
    c90a:	2a 81       	ldd	r18, Y+2	; 0x02
    c90c:	23 2b       	or	r18, r19
    c90e:	42 2f       	mov	r20, r18
    c910:	9e 01       	movw	r18, r28
    c912:	2d 5f       	subi	r18, 0xFD	; 253
    c914:	3f 4f       	sbci	r19, 0xFF	; 255
    c916:	82 0f       	add	r24, r18
    c918:	93 1f       	adc	r25, r19
    c91a:	fc 01       	movw	r30, r24
    c91c:	40 83       	st	Z, r20

		/* Registers 45-46 for CLK0 */
		params[i++] = ms_reg.reg.p1_1;
    c91e:	89 81       	ldd	r24, Y+1	; 0x01
    c920:	91 e0       	ldi	r25, 0x01	; 1
    c922:	98 0f       	add	r25, r24
    c924:	99 83       	std	Y+1, r25	; 0x01
    c926:	88 2f       	mov	r24, r24
    c928:	90 e0       	ldi	r25, 0x00	; 0
    c92a:	4a 89       	ldd	r20, Y+18	; 0x12
    c92c:	9e 01       	movw	r18, r28
    c92e:	2d 5f       	subi	r18, 0xFD	; 253
    c930:	3f 4f       	sbci	r19, 0xFF	; 255
    c932:	82 0f       	add	r24, r18
    c934:	93 1f       	adc	r25, r19
    c936:	fc 01       	movw	r30, r24
    c938:	40 83       	st	Z, r20
		params[i++] = ms_reg.reg.p1_0;
    c93a:	89 81       	ldd	r24, Y+1	; 0x01
    c93c:	91 e0       	ldi	r25, 0x01	; 1
    c93e:	98 0f       	add	r25, r24
    c940:	99 83       	std	Y+1, r25	; 0x01
    c942:	88 2f       	mov	r24, r24
    c944:	90 e0       	ldi	r25, 0x00	; 0
    c946:	49 89       	ldd	r20, Y+17	; 0x11
    c948:	9e 01       	movw	r18, r28
    c94a:	2d 5f       	subi	r18, 0xFD	; 253
    c94c:	3f 4f       	sbci	r19, 0xFF	; 255
    c94e:	82 0f       	add	r24, r18
    c950:	93 1f       	adc	r25, r19
    c952:	fc 01       	movw	r30, r24
    c954:	40 83       	st	Z, r20

		/* Register 47 for CLK0 */
		params[i] = (ms_reg.reg.p3_2 << 4);
    c956:	89 81       	ldd	r24, Y+1	; 0x01
    c958:	88 2f       	mov	r24, r24
    c95a:	90 e0       	ldi	r25, 0x00	; 0
    c95c:	2b 8d       	ldd	r18, Y+27	; 0x1b
    c95e:	42 2f       	mov	r20, r18
    c960:	42 95       	swap	r20
    c962:	40 7f       	andi	r20, 0xF0	; 240
    c964:	9e 01       	movw	r18, r28
    c966:	2d 5f       	subi	r18, 0xFD	; 253
    c968:	3f 4f       	sbci	r19, 0xFF	; 255
    c96a:	82 0f       	add	r24, r18
    c96c:	93 1f       	adc	r25, r19
    c96e:	fc 01       	movw	r30, r24
    c970:	40 83       	st	Z, r20
		params[i++] += (ms_reg.reg.p2_2 & 0x0F);
    c972:	29 81       	ldd	r18, Y+1	; 0x01
    c974:	81 e0       	ldi	r24, 0x01	; 1
    c976:	82 0f       	add	r24, r18
    c978:	89 83       	std	Y+1, r24	; 0x01
    c97a:	82 2f       	mov	r24, r18
    c97c:	90 e0       	ldi	r25, 0x00	; 0
    c97e:	22 2f       	mov	r18, r18
    c980:	30 e0       	ldi	r19, 0x00	; 0
    c982:	ae 01       	movw	r20, r28
    c984:	4d 5f       	subi	r20, 0xFD	; 253
    c986:	5f 4f       	sbci	r21, 0xFF	; 255
    c988:	24 0f       	add	r18, r20
    c98a:	35 1f       	adc	r19, r21
    c98c:	f9 01       	movw	r30, r18
    c98e:	30 81       	ld	r19, Z
    c990:	2f 89       	ldd	r18, Y+23	; 0x17
    c992:	2f 70       	andi	r18, 0x0F	; 15
    c994:	43 2f       	mov	r20, r19
    c996:	42 0f       	add	r20, r18
    c998:	9e 01       	movw	r18, r28
    c99a:	2d 5f       	subi	r18, 0xFD	; 253
    c99c:	3f 4f       	sbci	r19, 0xFF	; 255
    c99e:	82 0f       	add	r24, r18
    c9a0:	93 1f       	adc	r25, r19
    c9a2:	fc 01       	movw	r30, r24
    c9a4:	40 83       	st	Z, r20

		/* Registers 48-49 for CLK0 */
		params[i++] = ms_reg.reg.p2_1;
    c9a6:	89 81       	ldd	r24, Y+1	; 0x01
    c9a8:	91 e0       	ldi	r25, 0x01	; 1
    c9aa:	98 0f       	add	r25, r24
    c9ac:	99 83       	std	Y+1, r25	; 0x01
    c9ae:	88 2f       	mov	r24, r24
    c9b0:	90 e0       	ldi	r25, 0x00	; 0
    c9b2:	4e 89       	ldd	r20, Y+22	; 0x16
    c9b4:	9e 01       	movw	r18, r28
    c9b6:	2d 5f       	subi	r18, 0xFD	; 253
    c9b8:	3f 4f       	sbci	r19, 0xFF	; 255
    c9ba:	82 0f       	add	r24, r18
    c9bc:	93 1f       	adc	r25, r19
    c9be:	fc 01       	movw	r30, r24
    c9c0:	40 83       	st	Z, r20
		params[i++] = ms_reg.reg.p2_0;
    c9c2:	89 81       	ldd	r24, Y+1	; 0x01
    c9c4:	91 e0       	ldi	r25, 0x01	; 1
    c9c6:	98 0f       	add	r25, r24
    c9c8:	99 83       	std	Y+1, r25	; 0x01
    c9ca:	88 2f       	mov	r24, r24
    c9cc:	90 e0       	ldi	r25, 0x00	; 0
    c9ce:	4d 89       	ldd	r20, Y+21	; 0x15
    c9d0:	9e 01       	movw	r18, r28
    c9d2:	2d 5f       	subi	r18, 0xFD	; 253
    c9d4:	3f 4f       	sbci	r19, 0xFF	; 255
    c9d6:	82 0f       	add	r24, r18
    c9d8:	93 1f       	adc	r25, r19
    c9da:	fc 01       	movw	r30, r24
    c9dc:	40 83       	st	Z, r20

		/* Write the parameters */
		switch(clk)
    c9de:	88 89       	ldd	r24, Y+16	; 0x10
    c9e0:	88 2f       	mov	r24, r24
    c9e2:	90 e0       	ldi	r25, 0x00	; 0
    c9e4:	81 30       	cpi	r24, 0x01	; 1
    c9e6:	91 05       	cpc	r25, r1
    c9e8:	89 f0       	breq	.+34     	; 0xca0c <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1b6>
    c9ea:	82 30       	cpi	r24, 0x02	; 2
    c9ec:	91 05       	cpc	r25, r1
    c9ee:	c9 f0       	breq	.+50     	; 0xca22 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1cc>
    c9f0:	89 2b       	or	r24, r25
    c9f2:	09 f0       	breq	.+2      	; 0xc9f6 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1a0>
			break;

			default:
			{
			}
			break;
    c9f4:	26 c0       	rjmp	.+76     	; 0xca42 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1ec>
		/* Write the parameters */
		switch(clk)
		{
			case SI5351_CLK0:
			{
				if(si5351_write_bulk(SI5351_CLK0_PARAMETERS, params, i))
    c9f6:	ce 01       	movw	r24, r28
    c9f8:	03 96       	adiw	r24, 0x03	; 3
    c9fa:	49 81       	ldd	r20, Y+1	; 0x01
    c9fc:	bc 01       	movw	r22, r24
    c9fe:	8a e2       	ldi	r24, 0x2A	; 42
    ca00:	0e 94 8a 63 	call	0xc714	; 0xc714 <_Z17si5351_write_bulkhPhh>
    ca04:	88 23       	and	r24, r24
    ca06:	c1 f0       	breq	.+48     	; 0xca38 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1e2>
				{
					return(true);
    ca08:	81 e0       	ldi	r24, 0x01	; 1
    ca0a:	2d c0       	rjmp	.+90     	; 0xca66 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x210>
			}
			break;

			case SI5351_CLK1:
			{
				if(si5351_write_bulk(SI5351_CLK1_PARAMETERS, params, i))
    ca0c:	ce 01       	movw	r24, r28
    ca0e:	03 96       	adiw	r24, 0x03	; 3
    ca10:	49 81       	ldd	r20, Y+1	; 0x01
    ca12:	bc 01       	movw	r22, r24
    ca14:	82 e3       	ldi	r24, 0x32	; 50
    ca16:	0e 94 8a 63 	call	0xc714	; 0xc714 <_Z17si5351_write_bulkhPhh>
    ca1a:	88 23       	and	r24, r24
    ca1c:	79 f0       	breq	.+30     	; 0xca3c <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1e6>
				{
					return(true);
    ca1e:	81 e0       	ldi	r24, 0x01	; 1
    ca20:	22 c0       	rjmp	.+68     	; 0xca66 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x210>
			}
			break;

			case SI5351_CLK2:
			{
				if(si5351_write_bulk(SI5351_CLK2_PARAMETERS, params, i))
    ca22:	ce 01       	movw	r24, r28
    ca24:	03 96       	adiw	r24, 0x03	; 3
    ca26:	49 81       	ldd	r20, Y+1	; 0x01
    ca28:	bc 01       	movw	r22, r24
    ca2a:	8a e3       	ldi	r24, 0x3A	; 58
    ca2c:	0e 94 8a 63 	call	0xc714	; 0xc714 <_Z17si5351_write_bulkhPhh>
    ca30:	88 23       	and	r24, r24
    ca32:	31 f0       	breq	.+12     	; 0xca40 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1ea>
				{
					return(true);
    ca34:	81 e0       	ldi	r24, 0x01	; 1
    ca36:	17 c0       	rjmp	.+46     	; 0xca66 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x210>
				if(si5351_write_bulk(SI5351_CLK0_PARAMETERS, params, i))
				{
					return(true);
				}
			}
			break;
    ca38:	00 00       	nop
    ca3a:	03 c0       	rjmp	.+6      	; 0xca42 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1ec>
				if(si5351_write_bulk(SI5351_CLK1_PARAMETERS, params, i))
				{
					return(true);
				}
			}
			break;
    ca3c:	00 00       	nop
    ca3e:	01 c0       	rjmp	.+2      	; 0xca42 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1ec>
				if(si5351_write_bulk(SI5351_CLK2_PARAMETERS, params, i))
				{
					return(true);
				}
			}
			break;
    ca40:	00 00       	nop
			{
			}
			break;
		}

		if(set_integer_mode(clk, int_mode))
    ca42:	6d 8d       	ldd	r22, Y+29	; 0x1d
    ca44:	88 89       	ldd	r24, Y+16	; 0x10
    ca46:	0e 94 41 65 	call	0xca82	; 0xca82 <_Z16set_integer_mode12si5351_clockb>
    ca4a:	88 23       	and	r24, r24
    ca4c:	11 f0       	breq	.+4      	; 0xca52 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1fc>
		{
			return(true);
    ca4e:	81 e0       	ldi	r24, 0x01	; 1
    ca50:	0a c0       	rjmp	.+20     	; 0xca66 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x210>
		}
		
		if(ms_div(clk, r_div, div_by_4))
    ca52:	4b a5       	ldd	r20, Y+43	; 0x2b
    ca54:	6e 8d       	ldd	r22, Y+30	; 0x1e
    ca56:	88 89       	ldd	r24, Y+16	; 0x10
    ca58:	0e 94 76 65 	call	0xcaec	; 0xcaec <_Z6ms_div12si5351_clockhb>
    ca5c:	88 23       	and	r24, r24
    ca5e:	11 f0       	breq	.+4      	; 0xca64 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x20e>
		{
			return(true);
    ca60:	81 e0       	ldi	r24, 0x01	; 1
    ca62:	01 c0       	rjmp	.+2      	; 0xca66 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x210>
		}
		
		return(false);
    ca64:	80 e0       	ldi	r24, 0x00	; 0
	}
    ca66:	6e 96       	adiw	r28, 0x1e	; 30
    ca68:	cd bf       	out	0x3d, r28	; 61
    ca6a:	de bf       	out	0x3e, r29	; 62
    ca6c:	df 91       	pop	r29
    ca6e:	cf 91       	pop	r28
    ca70:	1f 91       	pop	r17
    ca72:	0f 91       	pop	r16
    ca74:	ff 90       	pop	r15
    ca76:	ef 90       	pop	r14
    ca78:	df 90       	pop	r13
    ca7a:	cf 90       	pop	r12
    ca7c:	af 90       	pop	r10
    ca7e:	8f 90       	pop	r8
    ca80:	08 95       	ret

0000ca82 <_Z16set_integer_mode12si5351_clockb>:
 * enable - 1 to enable, 0 to disable
 *
 * Set the indicated multisynth into integer mode.
 */
	bool set_integer_mode(Si5351_clock clk, bool enable)
	{
    ca82:	cf 93       	push	r28
    ca84:	df 93       	push	r29
    ca86:	cd b7       	in	r28, 0x3d	; 61
    ca88:	de b7       	in	r29, 0x3e	; 62
    ca8a:	25 97       	sbiw	r28, 0x05	; 5
    ca8c:	cd bf       	out	0x3d, r28	; 61
    ca8e:	de bf       	out	0x3e, r29	; 62
    ca90:	8c 83       	std	Y+4, r24	; 0x04
    ca92:	6d 83       	std	Y+5, r22	; 0x05
		uint8_t reg_val;
		uint8_t data[2];

		if(si5351_read_bulk(SI5351_CLK0_CTRL + (uint8_t)clk, data, 1))
    ca94:	8c 81       	ldd	r24, Y+4	; 0x04
    ca96:	20 e1       	ldi	r18, 0x10	; 16
    ca98:	28 0f       	add	r18, r24
    ca9a:	ce 01       	movw	r24, r28
    ca9c:	02 96       	adiw	r24, 0x02	; 2
    ca9e:	41 e0       	ldi	r20, 0x01	; 1
    caa0:	bc 01       	movw	r22, r24
    caa2:	82 2f       	mov	r24, r18
    caa4:	0e 94 bc 63 	call	0xc778	; 0xc778 <_Z16si5351_read_bulkhPhh>
    caa8:	88 23       	and	r24, r24
    caaa:	11 f0       	breq	.+4      	; 0xcab0 <_Z16set_integer_mode12si5351_clockb+0x2e>
		{
			return(true);
    caac:	81 e0       	ldi	r24, 0x01	; 1
    caae:	18 c0       	rjmp	.+48     	; 0xcae0 <_Z16set_integer_mode12si5351_clockb+0x5e>
		}
		
		reg_val = data[0];
    cab0:	8a 81       	ldd	r24, Y+2	; 0x02
    cab2:	89 83       	std	Y+1, r24	; 0x01

		if(enable)
    cab4:	8d 81       	ldd	r24, Y+5	; 0x05
    cab6:	88 23       	and	r24, r24
    cab8:	21 f0       	breq	.+8      	; 0xcac2 <_Z16set_integer_mode12si5351_clockb+0x40>
		{
			reg_val |= (SI5351_CLK_INTEGER_MODE);
    caba:	89 81       	ldd	r24, Y+1	; 0x01
    cabc:	80 64       	ori	r24, 0x40	; 64
    cabe:	89 83       	std	Y+1, r24	; 0x01
    cac0:	03 c0       	rjmp	.+6      	; 0xcac8 <_Z16set_integer_mode12si5351_clockb+0x46>
		}
		else
		{
			reg_val &= ~(SI5351_CLK_INTEGER_MODE);
    cac2:	89 81       	ldd	r24, Y+1	; 0x01
    cac4:	8f 7b       	andi	r24, 0xBF	; 191
    cac6:	89 83       	std	Y+1, r24	; 0x01
		}

		data[0] = reg_val;
    cac8:	89 81       	ldd	r24, Y+1	; 0x01
    caca:	8a 83       	std	Y+2, r24	; 0x02
		return(si5351_write_bulk(SI5351_CLK0_CTRL + (uint8_t)clk, data, 1));
    cacc:	8c 81       	ldd	r24, Y+4	; 0x04
    cace:	20 e1       	ldi	r18, 0x10	; 16
    cad0:	28 0f       	add	r18, r24
    cad2:	ce 01       	movw	r24, r28
    cad4:	02 96       	adiw	r24, 0x02	; 2
    cad6:	41 e0       	ldi	r20, 0x01	; 1
    cad8:	bc 01       	movw	r22, r24
    cada:	82 2f       	mov	r24, r18
    cadc:	0e 94 8a 63 	call	0xc714	; 0xc714 <_Z17si5351_write_bulkhPhh>
	}
    cae0:	25 96       	adiw	r28, 0x05	; 5
    cae2:	cd bf       	out	0x3d, r28	; 61
    cae4:	de bf       	out	0x3e, r29	; 62
    cae6:	df 91       	pop	r29
    cae8:	cf 91       	pop	r28
    caea:	08 95       	ret

0000caec <_Z6ms_div12si5351_clockhb>:


	bool ms_div(Si5351_clock clk, uint8_t r_div, bool div_by_4)
	{
    caec:	cf 93       	push	r28
    caee:	df 93       	push	r29
    caf0:	cd b7       	in	r28, 0x3d	; 61
    caf2:	de b7       	in	r29, 0x3e	; 62
    caf4:	27 97       	sbiw	r28, 0x07	; 7
    caf6:	cd bf       	out	0x3d, r28	; 61
    caf8:	de bf       	out	0x3e, r29	; 62
    cafa:	8d 83       	std	Y+5, r24	; 0x05
    cafc:	6e 83       	std	Y+6, r22	; 0x06
    cafe:	4f 83       	std	Y+7, r20	; 0x07
		uint8_t reg_val, reg_addr;
		uint8_t data[2];

		switch(clk)
    cb00:	8d 81       	ldd	r24, Y+5	; 0x05
    cb02:	88 2f       	mov	r24, r24
    cb04:	90 e0       	ldi	r25, 0x00	; 0
    cb06:	81 30       	cpi	r24, 0x01	; 1
    cb08:	91 05       	cpc	r25, r1
    cb0a:	41 f0       	breq	.+16     	; 0xcb1c <_Z6ms_div12si5351_clockhb+0x30>
    cb0c:	82 30       	cpi	r24, 0x02	; 2
    cb0e:	91 05       	cpc	r25, r1
    cb10:	41 f0       	breq	.+16     	; 0xcb22 <_Z6ms_div12si5351_clockhb+0x36>
    cb12:	89 2b       	or	r24, r25
    cb14:	49 f4       	brne	.+18     	; 0xcb28 <_Z6ms_div12si5351_clockhb+0x3c>
		{
			case SI5351_CLK0:
			{
				reg_addr = SI5351_CLK0_PARAMETERS + 2;
    cb16:	8c e2       	ldi	r24, 0x2C	; 44
    cb18:	8a 83       	std	Y+2, r24	; 0x02
			}
			break;
    cb1a:	08 c0       	rjmp	.+16     	; 0xcb2c <_Z6ms_div12si5351_clockhb+0x40>

			case SI5351_CLK1:
			{
				reg_addr = SI5351_CLK1_PARAMETERS + 2;
    cb1c:	84 e3       	ldi	r24, 0x34	; 52
    cb1e:	8a 83       	std	Y+2, r24	; 0x02
			}
			break;
    cb20:	05 c0       	rjmp	.+10     	; 0xcb2c <_Z6ms_div12si5351_clockhb+0x40>

			case SI5351_CLK2:
			{
				reg_addr = SI5351_CLK2_PARAMETERS + 2;
    cb22:	8c e3       	ldi	r24, 0x3C	; 60
    cb24:	8a 83       	std	Y+2, r24	; 0x02
			}
			break;
    cb26:	02 c0       	rjmp	.+4      	; 0xcb2c <_Z6ms_div12si5351_clockhb+0x40>

			default:
				return(true);
    cb28:	81 e0       	ldi	r24, 0x01	; 1
    cb2a:	30 c0       	rjmp	.+96     	; 0xcb8c <_Z6ms_div12si5351_clockhb+0xa0>
		}

		if(si5351_read_bulk(reg_addr, data, 1))
    cb2c:	ce 01       	movw	r24, r28
    cb2e:	03 96       	adiw	r24, 0x03	; 3
    cb30:	41 e0       	ldi	r20, 0x01	; 1
    cb32:	bc 01       	movw	r22, r24
    cb34:	8a 81       	ldd	r24, Y+2	; 0x02
    cb36:	0e 94 bc 63 	call	0xc778	; 0xc778 <_Z16si5351_read_bulkhPhh>
    cb3a:	88 23       	and	r24, r24
    cb3c:	11 f0       	breq	.+4      	; 0xcb42 <_Z6ms_div12si5351_clockhb+0x56>
		{
			return(true);
    cb3e:	81 e0       	ldi	r24, 0x01	; 1
    cb40:	25 c0       	rjmp	.+74     	; 0xcb8c <_Z6ms_div12si5351_clockhb+0xa0>
		}
		
		reg_val = data[0];
    cb42:	8b 81       	ldd	r24, Y+3	; 0x03
    cb44:	89 83       	std	Y+1, r24	; 0x01

		/* Clear the appropriate bits */
		reg_val &= ~(0x7c);
    cb46:	89 81       	ldd	r24, Y+1	; 0x01
    cb48:	83 78       	andi	r24, 0x83	; 131
    cb4a:	89 83       	std	Y+1, r24	; 0x01

		if(div_by_4)
    cb4c:	8f 81       	ldd	r24, Y+7	; 0x07
    cb4e:	88 23       	and	r24, r24
    cb50:	21 f0       	breq	.+8      	; 0xcb5a <_Z6ms_div12si5351_clockhb+0x6e>
		{
			reg_val |= (SI5351_OUTPUT_CLK_DIVBY4);
    cb52:	89 81       	ldd	r24, Y+1	; 0x01
    cb54:	8c 60       	ori	r24, 0x0C	; 12
    cb56:	89 83       	std	Y+1, r24	; 0x01
    cb58:	03 c0       	rjmp	.+6      	; 0xcb60 <_Z6ms_div12si5351_clockhb+0x74>
		}
		else
		{
			reg_val &= ~(SI5351_OUTPUT_CLK_DIVBY4);
    cb5a:	89 81       	ldd	r24, Y+1	; 0x01
    cb5c:	83 7f       	andi	r24, 0xF3	; 243
    cb5e:	89 83       	std	Y+1, r24	; 0x01
		}

		reg_val |= (r_div << SI5351_OUTPUT_CLK_DIV_SHIFT);
    cb60:	8e 81       	ldd	r24, Y+6	; 0x06
    cb62:	88 2f       	mov	r24, r24
    cb64:	90 e0       	ldi	r25, 0x00	; 0
    cb66:	82 95       	swap	r24
    cb68:	92 95       	swap	r25
    cb6a:	90 7f       	andi	r25, 0xF0	; 240
    cb6c:	98 27       	eor	r25, r24
    cb6e:	80 7f       	andi	r24, 0xF0	; 240
    cb70:	98 27       	eor	r25, r24
    cb72:	98 2f       	mov	r25, r24
    cb74:	89 81       	ldd	r24, Y+1	; 0x01
    cb76:	89 2b       	or	r24, r25
    cb78:	89 83       	std	Y+1, r24	; 0x01

		data[0] = reg_val;
    cb7a:	89 81       	ldd	r24, Y+1	; 0x01
    cb7c:	8b 83       	std	Y+3, r24	; 0x03
		return(si5351_write_bulk(reg_addr, data, 1));
    cb7e:	ce 01       	movw	r24, r28
    cb80:	03 96       	adiw	r24, 0x03	; 3
    cb82:	41 e0       	ldi	r20, 0x01	; 1
    cb84:	bc 01       	movw	r22, r24
    cb86:	8a 81       	ldd	r24, Y+2	; 0x02
    cb88:	0e 94 8a 63 	call	0xc714	; 0xc714 <_Z17si5351_write_bulkhPhh>
	}
    cb8c:	27 96       	adiw	r28, 0x07	; 7
    cb8e:	cd bf       	out	0x3d, r28	; 61
    cb90:	de bf       	out	0x3e, r29	; 62
    cb92:	df 91       	pop	r29
    cb94:	cf 91       	pop	r28
    cb96:	08 95       	ret

0000cb98 <SLPCTRL_init>:
 * \brief Initialize Sleep Controller
 *
 * \return Initialization status.
 */
int8_t SLPCTRL_init()
{
    cb98:	cf 93       	push	r28
    cb9a:	df 93       	push	r29
    cb9c:	cd b7       	in	r28, 0x3d	; 61
    cb9e:	de b7       	in	r29, 0x3e	; 62

	// SLPCTRL.CTRLA = 0 << SLPCTRL_SEN_bp /* Sleep enable: disabled */
	//		 | SLPCTRL_SMODE_IDLE_gc; /* Idle mode */

	return 0;
    cba0:	80 e0       	ldi	r24, 0x00	; 0
}
    cba2:	df 91       	pop	r29
    cba4:	cf 91       	pop	r28
    cba6:	08 95       	ret

0000cba8 <TIMERB_init>:
 * \brief Initialize tcb interface
 *
 * \return Initialization status.
 */
int8_t TIMERB_init()
{
    cba8:	cf 93       	push	r28
    cbaa:	df 93       	push	r29
    cbac:	cd b7       	in	r28, 0x3d	; 61
    cbae:	de b7       	in	r29, 0x3e	; 62
TCB0.INTCTRL = 1 << TCB_CAPT_bp   /* Capture or Timeout: enabled */
    cbb0:	80 e0       	ldi	r24, 0x00	; 0
    cbb2:	9b e0       	ldi	r25, 0x0B	; 11
| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    cbb4:	21 e0       	ldi	r18, 0x01	; 1
    cbb6:	fc 01       	movw	r30, r24
    cbb8:	25 83       	std	Z+5, r18	; 0x05

// Set TOP
TCB0.CCMP = 0x9C40;
    cbba:	80 e0       	ldi	r24, 0x00	; 0
    cbbc:	9b e0       	ldi	r25, 0x0B	; 11
    cbbe:	20 e4       	ldi	r18, 0x40	; 64
    cbc0:	3c e9       	ldi	r19, 0x9C	; 156
    cbc2:	fc 01       	movw	r30, r24
    cbc4:	24 87       	std	Z+12, r18	; 0x0c
    cbc6:	35 87       	std	Z+13, r19	; 0x0d

TCB0.CTRLA = TCB_CLKSEL_DIV2_gc     /* CLK_PER */
    cbc8:	80 e0       	ldi	r24, 0x00	; 0
    cbca:	9b e0       	ldi	r25, 0x0B	; 11
| 1 << TCB_ENABLE_bp   /* Enable: enabled */
| 0 << TCB_RUNSTDBY_bp /* Run Standby: disabled */
| 0 << TCB_SYNCUPD_bp  /* Synchronize Update: disabled */
| 0 << TCB_CASCADE_bp; /* Cascade Two Timer/Counters: disabled */
    cbcc:	23 e0       	ldi	r18, 0x03	; 3
    cbce:	fc 01       	movw	r30, r24
    cbd0:	20 83       	st	Z, r18

TCB0.INTFLAGS = TCB_CAPT_bm; /* Clear flag */
    cbd2:	80 e0       	ldi	r24, 0x00	; 0
    cbd4:	9b e0       	ldi	r25, 0x0B	; 11
    cbd6:	21 e0       	ldi	r18, 0x01	; 1
    cbd8:	fc 01       	movw	r30, r24
    cbda:	26 83       	std	Z+6, r18	; 0x06

/********************************************************************************/

TCB1.INTCTRL = 1 << TCB_CAPT_bp   /* Capture or Timeout: enabled */
    cbdc:	80 e1       	ldi	r24, 0x10	; 16
    cbde:	9b e0       	ldi	r25, 0x0B	; 11
| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    cbe0:	21 e0       	ldi	r18, 0x01	; 1
    cbe2:	fc 01       	movw	r30, r24
    cbe4:	25 83       	std	Z+5, r18	; 0x05

// Set TOP
TCB1.CCMP = 0x5DC0;
    cbe6:	80 e1       	ldi	r24, 0x10	; 16
    cbe8:	9b e0       	ldi	r25, 0x0B	; 11
    cbea:	20 ec       	ldi	r18, 0xC0	; 192
    cbec:	3d e5       	ldi	r19, 0x5D	; 93
    cbee:	fc 01       	movw	r30, r24
    cbf0:	24 87       	std	Z+12, r18	; 0x0c
    cbf2:	35 87       	std	Z+13, r19	; 0x0d

TCB1.CTRLA = TCB_CLKSEL_DIV1_gc     /* CLK_PER */
    cbf4:	80 e1       	ldi	r24, 0x10	; 16
    cbf6:	9b e0       	ldi	r25, 0x0B	; 11
| 1 << TCB_ENABLE_bp   /* Enable: enabled */
| 0 << TCB_RUNSTDBY_bp /* Run Standby: disabled */
| 0 << TCB_SYNCUPD_bp  /* Synchronize Update: disabled */
| 0 << TCB_CASCADE_bp; /* Cascade Two Timer/Counters: disabled */
    cbf8:	21 e0       	ldi	r18, 0x01	; 1
    cbfa:	fc 01       	movw	r30, r24
    cbfc:	20 83       	st	Z, r18

TCB1.INTFLAGS = TCB_CAPT_bm; /* Clear flag */
    cbfe:	80 e1       	ldi	r24, 0x10	; 16
    cc00:	9b e0       	ldi	r25, 0x0B	; 11
    cc02:	21 e0       	ldi	r18, 0x01	; 1
    cc04:	fc 01       	movw	r30, r24
    cc06:	26 83       	std	Z+6, r18	; 0x06


/********************************************************************************/

TCB3.INTCTRL = 1 << TCB_CAPT_bp   /* Capture or Timeout: enabled */
    cc08:	80 e3       	ldi	r24, 0x30	; 48
    cc0a:	9b e0       	ldi	r25, 0x0B	; 11
| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    cc0c:	21 e0       	ldi	r18, 0x01	; 1
    cc0e:	fc 01       	movw	r30, r24
    cc10:	25 83       	std	Z+5, r18	; 0x05

// Set TOP
TCB3.CCMP = 0x9C40;
    cc12:	80 e3       	ldi	r24, 0x30	; 48
    cc14:	9b e0       	ldi	r25, 0x0B	; 11
    cc16:	20 e4       	ldi	r18, 0x40	; 64
    cc18:	3c e9       	ldi	r19, 0x9C	; 156
    cc1a:	fc 01       	movw	r30, r24
    cc1c:	24 87       	std	Z+12, r18	; 0x0c
    cc1e:	35 87       	std	Z+13, r19	; 0x0d

TCB3.CTRLA = TCB_CLKSEL_DIV2_gc     /* CLK_PER */
    cc20:	80 e3       	ldi	r24, 0x30	; 48
    cc22:	9b e0       	ldi	r25, 0x0B	; 11
| 1 << TCB_ENABLE_bp   /* Enable: enabled */
| 0 << TCB_RUNSTDBY_bp /* Run Standby: disabled */
| 0 << TCB_SYNCUPD_bp  /* Synchronize Update: disabled */
| 0 << TCB_CASCADE_bp; /* Cascade Two Timer/Counters: disabled */
    cc24:	23 e0       	ldi	r18, 0x03	; 3
    cc26:	fc 01       	movw	r30, r24
    cc28:	20 83       	st	Z, r18

TCB3.INTFLAGS = TCB_CAPT_bm; /* Clear flag */
    cc2a:	80 e3       	ldi	r24, 0x30	; 48
    cc2c:	9b e0       	ldi	r25, 0x0B	; 11
    cc2e:	21 e0       	ldi	r18, 0x01	; 1
    cc30:	fc 01       	movw	r30, r24
    cc32:	26 83       	std	Z+6, r18	; 0x06

	return 0;
    cc34:	80 e0       	ldi	r24, 0x00	; 0
}
    cc36:	df 91       	pop	r29
    cc38:	cf 91       	pop	r28
    cc3a:	08 95       	ret

0000cc3c <util_delay_ms>:


bool util_delay_ms(uint32_t delayValue)
{
    cc3c:	cf 93       	push	r28
    cc3e:	df 93       	push	r29
    cc40:	00 d0       	rcall	.+0      	; 0xcc42 <util_delay_ms+0x6>
    cc42:	00 d0       	rcall	.+0      	; 0xcc44 <util_delay_ms+0x8>
    cc44:	cd b7       	in	r28, 0x3d	; 61
    cc46:	de b7       	in	r29, 0x3e	; 62
    cc48:	69 83       	std	Y+1, r22	; 0x01
    cc4a:	7a 83       	std	Y+2, r23	; 0x02
    cc4c:	8b 83       	std	Y+3, r24	; 0x03
    cc4e:	9c 83       	std	Y+4, r25	; 0x04
	static uint32_t countdownValue=0;
	static bool counting = false;
	
	if(delayValue)
    cc50:	89 81       	ldd	r24, Y+1	; 0x01
    cc52:	9a 81       	ldd	r25, Y+2	; 0x02
    cc54:	ab 81       	ldd	r26, Y+3	; 0x03
    cc56:	bc 81       	ldd	r27, Y+4	; 0x04
    cc58:	89 2b       	or	r24, r25
    cc5a:	8a 2b       	or	r24, r26
    cc5c:	8b 2b       	or	r24, r27
    cc5e:	09 f4       	brne	.+2      	; 0xcc62 <util_delay_ms+0x26>
    cc60:	84 c0       	rjmp	.+264    	; 0xcd6a <util_delay_ms+0x12e>
	{
		if(counting)
    cc62:	80 91 e0 4a 	lds	r24, 0x4AE0	; 0x804ae0 <_ZZ13util_delay_msE8counting>
    cc66:	88 23       	and	r24, r24
    cc68:	09 f4       	brne	.+2      	; 0xcc6c <util_delay_ms+0x30>
    cc6a:	4d c0       	rjmp	.+154    	; 0xcd06 <util_delay_ms+0xca>
		{
			if(!g_ms_counter)
    cc6c:	80 91 dc 4a 	lds	r24, 0x4ADC	; 0x804adc <_ZL12g_ms_counter>
    cc70:	90 91 dd 4a 	lds	r25, 0x4ADD	; 0x804add <_ZL12g_ms_counter+0x1>
    cc74:	a0 91 de 4a 	lds	r26, 0x4ADE	; 0x804ade <_ZL12g_ms_counter+0x2>
    cc78:	b0 91 df 4a 	lds	r27, 0x4ADF	; 0x804adf <_ZL12g_ms_counter+0x3>
    cc7c:	89 2b       	or	r24, r25
    cc7e:	8a 2b       	or	r24, r26
    cc80:	8b 2b       	or	r24, r27
    cc82:	81 f4       	brne	.+32     	; 0xcca4 <util_delay_ms+0x68>
			{
				TCB1.INTCTRL = 0 << TCB_CAPT_bp   /* Capture or Timeout: disabled */
    cc84:	80 e1       	ldi	r24, 0x10	; 16
    cc86:	9b e0       	ldi	r25, 0x0B	; 11
				| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    cc88:	fc 01       	movw	r30, r24
    cc8a:	15 82       	std	Z+5, r1	; 0x05

				counting = false;
    cc8c:	10 92 e0 4a 	sts	0x4AE0, r1	; 0x804ae0 <_ZZ13util_delay_msE8counting>
				countdownValue = 0;
    cc90:	10 92 e1 4a 	sts	0x4AE1, r1	; 0x804ae1 <_ZZ13util_delay_msE14countdownValue>
    cc94:	10 92 e2 4a 	sts	0x4AE2, r1	; 0x804ae2 <_ZZ13util_delay_msE14countdownValue+0x1>
    cc98:	10 92 e3 4a 	sts	0x4AE3, r1	; 0x804ae3 <_ZZ13util_delay_msE14countdownValue+0x2>
    cc9c:	10 92 e4 4a 	sts	0x4AE4, r1	; 0x804ae4 <_ZZ13util_delay_msE14countdownValue+0x3>
				return(false); /* time expired */
    cca0:	80 e0       	ldi	r24, 0x00	; 0
    cca2:	81 c0       	rjmp	.+258    	; 0xcda6 <util_delay_ms+0x16a>
			}
			else if(delayValue != countdownValue) /* countdown delay changed */
    cca4:	80 91 e1 4a 	lds	r24, 0x4AE1	; 0x804ae1 <_ZZ13util_delay_msE14countdownValue>
    cca8:	90 91 e2 4a 	lds	r25, 0x4AE2	; 0x804ae2 <_ZZ13util_delay_msE14countdownValue+0x1>
    ccac:	a0 91 e3 4a 	lds	r26, 0x4AE3	; 0x804ae3 <_ZZ13util_delay_msE14countdownValue+0x2>
    ccb0:	b0 91 e4 4a 	lds	r27, 0x4AE4	; 0x804ae4 <_ZZ13util_delay_msE14countdownValue+0x3>
    ccb4:	29 81       	ldd	r18, Y+1	; 0x01
    ccb6:	3a 81       	ldd	r19, Y+2	; 0x02
    ccb8:	4b 81       	ldd	r20, Y+3	; 0x03
    ccba:	5c 81       	ldd	r21, Y+4	; 0x04
    ccbc:	28 17       	cp	r18, r24
    ccbe:	39 07       	cpc	r19, r25
    ccc0:	4a 07       	cpc	r20, r26
    ccc2:	5b 07       	cpc	r21, r27
    ccc4:	09 f4       	brne	.+2      	; 0xccc8 <util_delay_ms+0x8c>
    ccc6:	69 c0       	rjmp	.+210    	; 0xcd9a <util_delay_ms+0x15e>
			{
				TCB1.CNT = 0x0000;
    ccc8:	80 e1       	ldi	r24, 0x10	; 16
    ccca:	9b e0       	ldi	r25, 0x0B	; 11
    cccc:	fc 01       	movw	r30, r24
    ccce:	12 86       	std	Z+10, r1	; 0x0a
    ccd0:	13 86       	std	Z+11, r1	; 0x0b
				countdownValue = delayValue;
    ccd2:	89 81       	ldd	r24, Y+1	; 0x01
    ccd4:	9a 81       	ldd	r25, Y+2	; 0x02
    ccd6:	ab 81       	ldd	r26, Y+3	; 0x03
    ccd8:	bc 81       	ldd	r27, Y+4	; 0x04
    ccda:	80 93 e1 4a 	sts	0x4AE1, r24	; 0x804ae1 <_ZZ13util_delay_msE14countdownValue>
    ccde:	90 93 e2 4a 	sts	0x4AE2, r25	; 0x804ae2 <_ZZ13util_delay_msE14countdownValue+0x1>
    cce2:	a0 93 e3 4a 	sts	0x4AE3, r26	; 0x804ae3 <_ZZ13util_delay_msE14countdownValue+0x2>
    cce6:	b0 93 e4 4a 	sts	0x4AE4, r27	; 0x804ae4 <_ZZ13util_delay_msE14countdownValue+0x3>
				g_ms_counter = delayValue;
    ccea:	89 81       	ldd	r24, Y+1	; 0x01
    ccec:	9a 81       	ldd	r25, Y+2	; 0x02
    ccee:	ab 81       	ldd	r26, Y+3	; 0x03
    ccf0:	bc 81       	ldd	r27, Y+4	; 0x04
    ccf2:	80 93 dc 4a 	sts	0x4ADC, r24	; 0x804adc <_ZL12g_ms_counter>
    ccf6:	90 93 dd 4a 	sts	0x4ADD, r25	; 0x804add <_ZL12g_ms_counter+0x1>
    ccfa:	a0 93 de 4a 	sts	0x4ADE, r26	; 0x804ade <_ZL12g_ms_counter+0x2>
    ccfe:	b0 93 df 4a 	sts	0x4ADF, r27	; 0x804adf <_ZL12g_ms_counter+0x3>
				return(false);
    cd02:	80 e0       	ldi	r24, 0x00	; 0
    cd04:	50 c0       	rjmp	.+160    	; 0xcda6 <util_delay_ms+0x16a>
			}
		}
		else if(delayValue != countdownValue)
    cd06:	80 91 e1 4a 	lds	r24, 0x4AE1	; 0x804ae1 <_ZZ13util_delay_msE14countdownValue>
    cd0a:	90 91 e2 4a 	lds	r25, 0x4AE2	; 0x804ae2 <_ZZ13util_delay_msE14countdownValue+0x1>
    cd0e:	a0 91 e3 4a 	lds	r26, 0x4AE3	; 0x804ae3 <_ZZ13util_delay_msE14countdownValue+0x2>
    cd12:	b0 91 e4 4a 	lds	r27, 0x4AE4	; 0x804ae4 <_ZZ13util_delay_msE14countdownValue+0x3>
    cd16:	29 81       	ldd	r18, Y+1	; 0x01
    cd18:	3a 81       	ldd	r19, Y+2	; 0x02
    cd1a:	4b 81       	ldd	r20, Y+3	; 0x03
    cd1c:	5c 81       	ldd	r21, Y+4	; 0x04
    cd1e:	28 17       	cp	r18, r24
    cd20:	39 07       	cpc	r19, r25
    cd22:	4a 07       	cpc	r20, r26
    cd24:	5b 07       	cpc	r21, r27
    cd26:	c9 f1       	breq	.+114    	; 0xcd9a <util_delay_ms+0x15e>
		{
			TCB1.CNT = 0x0000;
    cd28:	80 e1       	ldi	r24, 0x10	; 16
    cd2a:	9b e0       	ldi	r25, 0x0B	; 11
    cd2c:	fc 01       	movw	r30, r24
    cd2e:	12 86       	std	Z+10, r1	; 0x0a
    cd30:	13 86       	std	Z+11, r1	; 0x0b
			countdownValue = delayValue;
    cd32:	89 81       	ldd	r24, Y+1	; 0x01
    cd34:	9a 81       	ldd	r25, Y+2	; 0x02
    cd36:	ab 81       	ldd	r26, Y+3	; 0x03
    cd38:	bc 81       	ldd	r27, Y+4	; 0x04
    cd3a:	80 93 e1 4a 	sts	0x4AE1, r24	; 0x804ae1 <_ZZ13util_delay_msE14countdownValue>
    cd3e:	90 93 e2 4a 	sts	0x4AE2, r25	; 0x804ae2 <_ZZ13util_delay_msE14countdownValue+0x1>
    cd42:	a0 93 e3 4a 	sts	0x4AE3, r26	; 0x804ae3 <_ZZ13util_delay_msE14countdownValue+0x2>
    cd46:	b0 93 e4 4a 	sts	0x4AE4, r27	; 0x804ae4 <_ZZ13util_delay_msE14countdownValue+0x3>
			g_ms_counter = delayValue;
    cd4a:	89 81       	ldd	r24, Y+1	; 0x01
    cd4c:	9a 81       	ldd	r25, Y+2	; 0x02
    cd4e:	ab 81       	ldd	r26, Y+3	; 0x03
    cd50:	bc 81       	ldd	r27, Y+4	; 0x04
    cd52:	80 93 dc 4a 	sts	0x4ADC, r24	; 0x804adc <_ZL12g_ms_counter>
    cd56:	90 93 dd 4a 	sts	0x4ADD, r25	; 0x804add <_ZL12g_ms_counter+0x1>
    cd5a:	a0 93 de 4a 	sts	0x4ADE, r26	; 0x804ade <_ZL12g_ms_counter+0x2>
    cd5e:	b0 93 df 4a 	sts	0x4ADF, r27	; 0x804adf <_ZL12g_ms_counter+0x3>
			counting = true;
    cd62:	81 e0       	ldi	r24, 0x01	; 1
    cd64:	80 93 e0 4a 	sts	0x4AE0, r24	; 0x804ae0 <_ZZ13util_delay_msE8counting>
    cd68:	18 c0       	rjmp	.+48     	; 0xcd9a <util_delay_ms+0x15e>
		}
	}
	else
	{
		TCB1.INTCTRL = 0 << TCB_CAPT_bp   /* Capture or Timeout: disabled */
    cd6a:	80 e1       	ldi	r24, 0x10	; 16
    cd6c:	9b e0       	ldi	r25, 0x0B	; 11
		| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    cd6e:	fc 01       	movw	r30, r24
    cd70:	15 82       	std	Z+5, r1	; 0x05

		counting = false;
    cd72:	10 92 e0 4a 	sts	0x4AE0, r1	; 0x804ae0 <_ZZ13util_delay_msE8counting>
		countdownValue = 0;
    cd76:	10 92 e1 4a 	sts	0x4AE1, r1	; 0x804ae1 <_ZZ13util_delay_msE14countdownValue>
    cd7a:	10 92 e2 4a 	sts	0x4AE2, r1	; 0x804ae2 <_ZZ13util_delay_msE14countdownValue+0x1>
    cd7e:	10 92 e3 4a 	sts	0x4AE3, r1	; 0x804ae3 <_ZZ13util_delay_msE14countdownValue+0x2>
    cd82:	10 92 e4 4a 	sts	0x4AE4, r1	; 0x804ae4 <_ZZ13util_delay_msE14countdownValue+0x3>
		g_ms_counter = 0;
    cd86:	10 92 dc 4a 	sts	0x4ADC, r1	; 0x804adc <_ZL12g_ms_counter>
    cd8a:	10 92 dd 4a 	sts	0x4ADD, r1	; 0x804add <_ZL12g_ms_counter+0x1>
    cd8e:	10 92 de 4a 	sts	0x4ADE, r1	; 0x804ade <_ZL12g_ms_counter+0x2>
    cd92:	10 92 df 4a 	sts	0x4ADF, r1	; 0x804adf <_ZL12g_ms_counter+0x3>
		return(false); /* timer reset */
    cd96:	80 e0       	ldi	r24, 0x00	; 0
    cd98:	06 c0       	rjmp	.+12     	; 0xcda6 <util_delay_ms+0x16a>
	}
	
	TCB1.INTCTRL = 1 << TCB_CAPT_bp   /* Capture or Timeout: enabled */
    cd9a:	80 e1       	ldi	r24, 0x10	; 16
    cd9c:	9b e0       	ldi	r25, 0x0B	; 11
	| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    cd9e:	21 e0       	ldi	r18, 0x01	; 1
    cda0:	fc 01       	movw	r30, r24
    cda2:	25 83       	std	Z+5, r18	; 0x05
	
	return(true);
    cda4:	81 e0       	ldi	r24, 0x01	; 1
}
    cda6:	24 96       	adiw	r28, 0x04	; 4
    cda8:	cd bf       	out	0x3d, r28	; 61
    cdaa:	de bf       	out	0x3e, r29	; 62
    cdac:	df 91       	pop	r29
    cdae:	cf 91       	pop	r28
    cdb0:	08 95       	ret

0000cdb2 <__vector_13>:

/**
One millisecond utility counter based on CPU clock.
*/
ISR(TCB1_INT_vect)
{
    cdb2:	1f 92       	push	r1
    cdb4:	0f 92       	push	r0
    cdb6:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    cdba:	0f 92       	push	r0
    cdbc:	11 24       	eor	r1, r1
    cdbe:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    cdc2:	0f 92       	push	r0
    cdc4:	2f 93       	push	r18
    cdc6:	8f 93       	push	r24
    cdc8:	9f 93       	push	r25
    cdca:	af 93       	push	r26
    cdcc:	bf 93       	push	r27
    cdce:	ef 93       	push	r30
    cdd0:	ff 93       	push	r31
    cdd2:	cf 93       	push	r28
    cdd4:	df 93       	push	r29
    cdd6:	cd b7       	in	r28, 0x3d	; 61
    cdd8:	de b7       	in	r29, 0x3e	; 62
    if(TCB1.INTFLAGS & TCB_CAPT_bm)
    cdda:	80 e1       	ldi	r24, 0x10	; 16
    cddc:	9b e0       	ldi	r25, 0x0B	; 11
    cdde:	fc 01       	movw	r30, r24
    cde0:	86 81       	ldd	r24, Z+6	; 0x06
    cde2:	88 2f       	mov	r24, r24
    cde4:	90 e0       	ldi	r25, 0x00	; 0
    cde6:	81 70       	andi	r24, 0x01	; 1
    cde8:	99 27       	eor	r25, r25
    cdea:	21 e0       	ldi	r18, 0x01	; 1
    cdec:	89 2b       	or	r24, r25
    cdee:	09 f4       	brne	.+2      	; 0xcdf2 <__vector_13+0x40>
    cdf0:	20 e0       	ldi	r18, 0x00	; 0
    cdf2:	22 23       	and	r18, r18
    cdf4:	49 f1       	breq	.+82     	; 0xce48 <__vector_13+0x96>
    {
		if(g_ms_counter) /* check for 1-second interval */
    cdf6:	80 91 dc 4a 	lds	r24, 0x4ADC	; 0x804adc <_ZL12g_ms_counter>
    cdfa:	90 91 dd 4a 	lds	r25, 0x4ADD	; 0x804add <_ZL12g_ms_counter+0x1>
    cdfe:	a0 91 de 4a 	lds	r26, 0x4ADE	; 0x804ade <_ZL12g_ms_counter+0x2>
    ce02:	b0 91 df 4a 	lds	r27, 0x4ADF	; 0x804adf <_ZL12g_ms_counter+0x3>
    ce06:	89 2b       	or	r24, r25
    ce08:	8a 2b       	or	r24, r26
    ce0a:	8b 2b       	or	r24, r27
    ce0c:	a1 f0       	breq	.+40     	; 0xce36 <__vector_13+0x84>
		{
			g_ms_counter--;	
    ce0e:	80 91 dc 4a 	lds	r24, 0x4ADC	; 0x804adc <_ZL12g_ms_counter>
    ce12:	90 91 dd 4a 	lds	r25, 0x4ADD	; 0x804add <_ZL12g_ms_counter+0x1>
    ce16:	a0 91 de 4a 	lds	r26, 0x4ADE	; 0x804ade <_ZL12g_ms_counter+0x2>
    ce1a:	b0 91 df 4a 	lds	r27, 0x4ADF	; 0x804adf <_ZL12g_ms_counter+0x3>
    ce1e:	01 97       	sbiw	r24, 0x01	; 1
    ce20:	a1 09       	sbc	r26, r1
    ce22:	b1 09       	sbc	r27, r1
    ce24:	80 93 dc 4a 	sts	0x4ADC, r24	; 0x804adc <_ZL12g_ms_counter>
    ce28:	90 93 dd 4a 	sts	0x4ADD, r25	; 0x804add <_ZL12g_ms_counter+0x1>
    ce2c:	a0 93 de 4a 	sts	0x4ADE, r26	; 0x804ade <_ZL12g_ms_counter+0x2>
    ce30:	b0 93 df 4a 	sts	0x4ADF, r27	; 0x804adf <_ZL12g_ms_counter+0x3>
    ce34:	04 c0       	rjmp	.+8      	; 0xce3e <__vector_13+0x8c>
		}
		else
		{
			TCB1.INTCTRL = 0 << TCB_CAPT_bp   /* Capture or Timeout: disabled */
    ce36:	80 e1       	ldi	r24, 0x10	; 16
    ce38:	9b e0       	ldi	r25, 0x0B	; 11
			| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    ce3a:	fc 01       	movw	r30, r24
    ce3c:	15 82       	std	Z+5, r1	; 0x05
		}

        TCB1.INTFLAGS = TCB_CAPT_bm; /* clear interrupt flag */
    ce3e:	80 e1       	ldi	r24, 0x10	; 16
    ce40:	9b e0       	ldi	r25, 0x0B	; 11
    ce42:	21 e0       	ldi	r18, 0x01	; 1
    ce44:	fc 01       	movw	r30, r24
    ce46:	26 83       	std	Z+6, r18	; 0x06
    }
}
    ce48:	00 00       	nop
    ce4a:	df 91       	pop	r29
    ce4c:	cf 91       	pop	r28
    ce4e:	ff 91       	pop	r31
    ce50:	ef 91       	pop	r30
    ce52:	bf 91       	pop	r27
    ce54:	af 91       	pop	r26
    ce56:	9f 91       	pop	r25
    ce58:	8f 91       	pop	r24
    ce5a:	2f 91       	pop	r18
    ce5c:	0f 90       	pop	r0
    ce5e:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    ce62:	0f 90       	pop	r0
    ce64:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    ce68:	0f 90       	pop	r0
    ce6a:	1f 90       	pop	r1
    ce6c:	18 95       	reti

0000ce6e <_Z14txSetFrequencyPmb>:
 *       This function sets the VFO frequency (CLK0 of the Si5351) based on the intended frequency passed in by the parameter (freq),
 *       and the VFO configuration in effect. The VFO  frequency might be above or below the intended  frequency, depending on the VFO
 *       configuration setting in effect for the radio band of the frequency.
 */
	bool txSetFrequency(Frequency_Hz *freq, bool leaveClockOff)
	{
    ce6e:	cf 93       	push	r28
    ce70:	df 93       	push	r29
    ce72:	00 d0       	rcall	.+0      	; 0xce74 <_Z14txSetFrequencyPmb+0x6>
    ce74:	00 d0       	rcall	.+0      	; 0xce76 <_Z14txSetFrequencyPmb+0x8>
    ce76:	cd b7       	in	r28, 0x3d	; 61
    ce78:	de b7       	in	r29, 0x3e	; 62
    ce7a:	8a 83       	std	Y+2, r24	; 0x02
    ce7c:	9b 83       	std	Y+3, r25	; 0x03
    ce7e:	6c 83       	std	Y+4, r22	; 0x04
		bool err = false;
    ce80:	19 82       	std	Y+1, r1	; 0x01

		if((*freq < TX_MAXIMUM_80M_FREQUENCY) && (*freq > TX_MINIMUM_80M_FREQUENCY))    /* 80m */
    ce82:	8a 81       	ldd	r24, Y+2	; 0x02
    ce84:	9b 81       	ldd	r25, Y+3	; 0x03
    ce86:	fc 01       	movw	r30, r24
    ce88:	80 81       	ld	r24, Z
    ce8a:	91 81       	ldd	r25, Z+1	; 0x01
    ce8c:	a2 81       	ldd	r26, Z+2	; 0x02
    ce8e:	b3 81       	ldd	r27, Z+3	; 0x03
    ce90:	81 15       	cp	r24, r1
    ce92:	99 40       	sbci	r25, 0x09	; 9
    ce94:	ad 43       	sbci	r26, 0x3D	; 61
    ce96:	b1 05       	cpc	r27, r1
    ce98:	68 f5       	brcc	.+90     	; 0xcef4 <_Z14txSetFrequencyPmb+0x86>
    ce9a:	8a 81       	ldd	r24, Y+2	; 0x02
    ce9c:	9b 81       	ldd	r25, Y+3	; 0x03
    ce9e:	fc 01       	movw	r30, r24
    cea0:	80 81       	ld	r24, Z
    cea2:	91 81       	ldd	r25, Z+1	; 0x01
    cea4:	a2 81       	ldd	r26, Z+2	; 0x02
    cea6:	b3 81       	ldd	r27, Z+3	; 0x03
    cea8:	81 3e       	cpi	r24, 0xE1	; 225
    ceaa:	97 46       	sbci	r25, 0x67	; 103
    ceac:	a5 43       	sbci	r26, 0x35	; 53
    ceae:	b1 05       	cpc	r27, r1
    ceb0:	08 f1       	brcs	.+66     	; 0xcef4 <_Z14txSetFrequencyPmb+0x86>
		{
			if(si5351_set_freq(*freq, TX_CLOCK_HF_0, leaveClockOff))
    ceb2:	8a 81       	ldd	r24, Y+2	; 0x02
    ceb4:	9b 81       	ldd	r25, Y+3	; 0x03
    ceb6:	fc 01       	movw	r30, r24
    ceb8:	80 81       	ld	r24, Z
    ceba:	91 81       	ldd	r25, Z+1	; 0x01
    cebc:	a2 81       	ldd	r26, Z+2	; 0x02
    cebe:	b3 81       	ldd	r27, Z+3	; 0x03
    cec0:	2c 81       	ldd	r18, Y+4	; 0x04
    cec2:	41 e0       	ldi	r20, 0x01	; 1
    cec4:	bc 01       	movw	r22, r24
    cec6:	cd 01       	movw	r24, r26
    cec8:	0e 94 54 5c 	call	0xb8a8	; 0xb8a8 <si5351_set_freq>
    cecc:	88 23       	and	r24, r24
    cece:	19 f0       	breq	.+6      	; 0xced6 <_Z14txSetFrequencyPmb+0x68>
			{
				err = true; 
    ced0:	81 e0       	ldi	r24, 0x01	; 1
    ced2:	89 83       	std	Y+1, r24	; 0x01
    ced4:	0f c0       	rjmp	.+30     	; 0xcef4 <_Z14txSetFrequencyPmb+0x86>
			}
			else
			{
				g_80m_frequency = *freq;
    ced6:	8a 81       	ldd	r24, Y+2	; 0x02
    ced8:	9b 81       	ldd	r25, Y+3	; 0x03
    ceda:	fc 01       	movw	r30, r24
    cedc:	80 81       	ld	r24, Z
    cede:	91 81       	ldd	r25, Z+1	; 0x01
    cee0:	a2 81       	ldd	r26, Z+2	; 0x02
    cee2:	b3 81       	ldd	r27, Z+3	; 0x03
    cee4:	80 93 2b 40 	sts	0x402B, r24	; 0x80402b <g_80m_frequency>
    cee8:	90 93 2c 40 	sts	0x402C, r25	; 0x80402c <g_80m_frequency+0x1>
    ceec:	a0 93 2d 40 	sts	0x402D, r26	; 0x80402d <g_80m_frequency+0x2>
    cef0:	b0 93 2e 40 	sts	0x402E, r27	; 0x80402e <g_80m_frequency+0x3>
			}
		}

		return(err);
    cef4:	89 81       	ldd	r24, Y+1	; 0x01
	}
    cef6:	24 96       	adiw	r28, 0x04	; 4
    cef8:	cd bf       	out	0x3d, r28	; 61
    cefa:	de bf       	out	0x3e, r29	; 62
    cefc:	df 91       	pop	r29
    cefe:	cf 91       	pop	r28
    cf00:	08 95       	ret

0000cf02 <_Z14txGetFrequencyv>:

	Frequency_Hz txGetFrequency(void)
	{
    cf02:	cf 93       	push	r28
    cf04:	df 93       	push	r29
    cf06:	cd b7       	in	r28, 0x3d	; 61
    cf08:	de b7       	in	r29, 0x3e	; 62
		return( g_80m_frequency);
    cf0a:	80 91 2b 40 	lds	r24, 0x402B	; 0x80402b <g_80m_frequency>
    cf0e:	90 91 2c 40 	lds	r25, 0x402C	; 0x80402c <g_80m_frequency+0x1>
    cf12:	a0 91 2d 40 	lds	r26, 0x402D	; 0x80402d <g_80m_frequency+0x2>
    cf16:	b0 91 2e 40 	lds	r27, 0x402E	; 0x80402e <g_80m_frequency+0x3>
	}
    cf1a:	bc 01       	movw	r22, r24
    cf1c:	cd 01       	movw	r24, r26
    cf1e:	df 91       	pop	r29
    cf20:	cf 91       	pop	r28
    cf22:	08 95       	ret

0000cf24 <_Z18powerToTransmitterb>:

	EC powerToTransmitter(bool on)
	{
    cf24:	cf 93       	push	r28
    cf26:	df 93       	push	r29
    cf28:	1f 92       	push	r1
    cf2a:	cd b7       	in	r28, 0x3d	; 61
    cf2c:	de b7       	in	r29, 0x3e	; 62
    cf2e:	89 83       	std	Y+1, r24	; 0x01
		fet_driver(on);
    cf30:	89 81       	ldd	r24, Y+1	; 0x01
    cf32:	0e 94 3f 38 	call	0x707e	; 0x707e <_Z10fet_driverb>

		return(ERROR_CODE_NO_ERROR);
    cf36:	80 e0       	ldi	r24, 0x00	; 0
	}
    cf38:	0f 90       	pop	r0
    cf3a:	df 91       	pop	r29
    cf3c:	cf 91       	pop	r28
    cf3e:	08 95       	ret

0000cf40 <_Z14keyTransmitterb>:

	void keyTransmitter(bool on)
	{
    cf40:	cf 93       	push	r28
    cf42:	df 93       	push	r29
    cf44:	1f 92       	push	r1
    cf46:	cd b7       	in	r28, 0x3d	; 61
    cf48:	de b7       	in	r29, 0x3e	; 62
    cf4a:	89 83       	std	Y+1, r24	; 0x01
		if(g_tx_initialized)
    cf4c:	80 91 e5 4a 	lds	r24, 0x4AE5	; 0x804ae5 <_ZL16g_tx_initialized>
    cf50:	88 23       	and	r24, r24
    cf52:	29 f1       	breq	.+74     	; 0xcf9e <_Z14keyTransmitterb+0x5e>
		{			
			if(on)
    cf54:	89 81       	ldd	r24, Y+1	; 0x01
    cf56:	88 23       	and	r24, r24
    cf58:	a9 f0       	breq	.+42     	; 0xcf84 <_Z14keyTransmitterb+0x44>
			{
				if(!g_transmitter_keyed)
    cf5a:	90 91 e6 4a 	lds	r25, 0x4AE6	; 0x804ae6 <_ZL19g_transmitter_keyed>
    cf5e:	81 e0       	ldi	r24, 0x01	; 1
    cf60:	89 27       	eor	r24, r25
    cf62:	88 23       	and	r24, r24
    cf64:	e1 f0       	breq	.+56     	; 0xcf9e <_Z14keyTransmitterb+0x5e>
				{
					if(si5351_clock_enable(TX_CLOCK_HF_0, SI5351_CLK_ENABLED) == ERROR_CODE_NO_ERROR)
    cf66:	61 e0       	ldi	r22, 0x01	; 1
    cf68:	81 e0       	ldi	r24, 0x01	; 1
    cf6a:	0e 94 f5 5d 	call	0xbbea	; 0xbbea <si5351_clock_enable>
    cf6e:	98 2f       	mov	r25, r24
    cf70:	81 e0       	ldi	r24, 0x01	; 1
    cf72:	99 23       	and	r25, r25
    cf74:	09 f0       	breq	.+2      	; 0xcf78 <_Z14keyTransmitterb+0x38>
    cf76:	80 e0       	ldi	r24, 0x00	; 0
    cf78:	88 23       	and	r24, r24
    cf7a:	89 f0       	breq	.+34     	; 0xcf9e <_Z14keyTransmitterb+0x5e>
					{
						g_transmitter_keyed = true;
    cf7c:	81 e0       	ldi	r24, 0x01	; 1
    cf7e:	80 93 e6 4a 	sts	0x4AE6, r24	; 0x804ae6 <_ZL19g_transmitter_keyed>
				{
					g_transmitter_keyed = false;
				}
			}
		}
	}
    cf82:	0d c0       	rjmp	.+26     	; 0xcf9e <_Z14keyTransmitterb+0x5e>
					}
				}
			}
			else
			{
				if(si5351_clock_enable(TX_CLOCK_HF_0, SI5351_CLK_DISABLED) == ERROR_CODE_NO_ERROR)
    cf84:	60 e0       	ldi	r22, 0x00	; 0
    cf86:	81 e0       	ldi	r24, 0x01	; 1
    cf88:	0e 94 f5 5d 	call	0xbbea	; 0xbbea <si5351_clock_enable>
    cf8c:	98 2f       	mov	r25, r24
    cf8e:	81 e0       	ldi	r24, 0x01	; 1
    cf90:	99 23       	and	r25, r25
    cf92:	09 f0       	breq	.+2      	; 0xcf96 <_Z14keyTransmitterb+0x56>
    cf94:	80 e0       	ldi	r24, 0x00	; 0
    cf96:	88 23       	and	r24, r24
    cf98:	11 f0       	breq	.+4      	; 0xcf9e <_Z14keyTransmitterb+0x5e>
				{
					g_transmitter_keyed = false;
    cf9a:	10 92 e6 4a 	sts	0x4AE6, r1	; 0x804ae6 <_ZL19g_transmitter_keyed>
				}
			}
		}
	}
    cf9e:	00 00       	nop
    cfa0:	0f 90       	pop	r0
    cfa2:	df 91       	pop	r29
    cfa4:	cf 91       	pop	r28
    cfa6:	08 95       	ret

0000cfa8 <_Z12txGetPowerMwv>:

	uint16_t txGetPowerMw(void)
	{
    cfa8:	cf 93       	push	r28
    cfaa:	df 93       	push	r29
    cfac:	cd b7       	in	r28, 0x3d	; 61
    cfae:	de b7       	in	r29, 0x3e	; 62
		return( g_80m_power_level_mW);
    cfb0:	80 91 2f 40 	lds	r24, 0x402F	; 0x80402f <g_80m_power_level_mW>
    cfb4:	90 91 30 40 	lds	r25, 0x4030	; 0x804030 <g_80m_power_level_mW+0x1>
	}
    cfb8:	df 91       	pop	r29
    cfba:	cf 91       	pop	r28
    cfbc:	08 95       	ret

0000cfbe <_Z15txSetParametersPjPb>:

	EC __attribute__((optimize("O0"))) txSetParameters(uint16_t* power_mW, bool* enableDriverPwr)
/*	EC txSetParameters(uint16_t* power_mW, bool* enableDriverPwr) */
	{
    cfbe:	cf 93       	push	r28
    cfc0:	df 93       	push	r29
    cfc2:	cd b7       	in	r28, 0x3d	; 61
    cfc4:	de b7       	in	r29, 0x3e	; 62
    cfc6:	2b 97       	sbiw	r28, 0x0b	; 11
    cfc8:	cd bf       	out	0x3d, r28	; 61
    cfca:	de bf       	out	0x3e, r29	; 62
    cfcc:	88 87       	std	Y+8, r24	; 0x08
    cfce:	99 87       	std	Y+9, r25	; 0x09
    cfd0:	6a 87       	std	Y+10, r22	; 0x0a
    cfd2:	7b 87       	std	Y+11, r23	; 0x0b
		bool err = false;
    cfd4:	19 82       	std	Y+1, r1	; 0x01
		EC code = ERROR_CODE_NO_ERROR;
    cfd6:	1a 82       	std	Y+2, r1	; 0x02
		uint16_t power = 0;
    cfd8:	1b 82       	std	Y+3, r1	; 0x03
    cfda:	1c 82       	std	Y+4, r1	; 0x04

		if(power_mW != null)
    cfdc:	88 85       	ldd	r24, Y+8	; 0x08
    cfde:	99 85       	ldd	r25, Y+9	; 0x09
    cfe0:	89 2b       	or	r24, r25
    cfe2:	09 f4       	brne	.+2      	; 0xcfe6 <_Z15txSetParametersPjPb+0x28>
    cfe4:	68 c0       	rjmp	.+208    	; 0xd0b6 <_Z15txSetParametersPjPb+0xf8>
		{
			power = *power_mW;
    cfe6:	88 85       	ldd	r24, Y+8	; 0x08
    cfe8:	99 85       	ldd	r25, Y+9	; 0x09
    cfea:	fc 01       	movw	r30, r24
    cfec:	80 81       	ld	r24, Z
    cfee:	91 81       	ldd	r25, Z+1	; 0x01
    cff0:	8b 83       	std	Y+3, r24	; 0x03
    cff2:	9c 83       	std	Y+4, r25	; 0x04

			if(power <= MAX_TX_POWER_80M_MW)
    cff4:	8b 81       	ldd	r24, Y+3	; 0x03
    cff6:	9c 81       	ldd	r25, Y+4	; 0x04
    cff8:	89 38       	cpi	r24, 0x89	; 137
    cffa:	93 41       	sbci	r25, 0x13	; 19
    cffc:	08 f0       	brcs	.+2      	; 0xd000 <_Z15txSetParametersPjPb+0x42>
    cffe:	57 c0       	rjmp	.+174    	; 0xd0ae <_Z15txSetParametersPjPb+0xf0>
			{
				uint8_t drainVoltageDAC, modLevelHigh, modLevelLow;
				code = txMilliwattsToSettings(&power, &drainVoltageDAC, &modLevelHigh, &modLevelLow);
    d000:	9e 01       	movw	r18, r28
    d002:	29 5f       	subi	r18, 0xF9	; 249
    d004:	3f 4f       	sbci	r19, 0xFF	; 255
    d006:	ae 01       	movw	r20, r28
    d008:	4a 5f       	subi	r20, 0xFA	; 250
    d00a:	5f 4f       	sbci	r21, 0xFF	; 255
    d00c:	be 01       	movw	r22, r28
    d00e:	6b 5f       	subi	r22, 0xFB	; 251
    d010:	7f 4f       	sbci	r23, 0xFF	; 255
    d012:	ce 01       	movw	r24, r28
    d014:	03 96       	adiw	r24, 0x03	; 3
    d016:	0e 94 d9 68 	call	0xd1b2	; 0xd1b2 <_Z22txMilliwattsToSettingsPjPhS0_S0_>
    d01a:	8a 83       	std	Y+2, r24	; 0x02
				err = (code == ERROR_CODE_SW_LOGIC_ERROR);
    d01c:	81 e0       	ldi	r24, 0x01	; 1
    d01e:	9a 81       	ldd	r25, Y+2	; 0x02
    d020:	9f 3c       	cpi	r25, 0xCF	; 207
    d022:	09 f0       	breq	.+2      	; 0xd026 <_Z15txSetParametersPjPb+0x68>
    d024:	80 e0       	ldi	r24, 0x00	; 0
    d026:	89 83       	std	Y+1, r24	; 0x01

				g_tx_power_is_zero = (power == 0);
    d028:	8b 81       	ldd	r24, Y+3	; 0x03
    d02a:	9c 81       	ldd	r25, Y+4	; 0x04
    d02c:	21 e0       	ldi	r18, 0x01	; 1
    d02e:	89 2b       	or	r24, r25
    d030:	09 f0       	breq	.+2      	; 0xd034 <_Z15txSetParametersPjPb+0x76>
    d032:	20 e0       	ldi	r18, 0x00	; 0
    d034:	20 93 35 40 	sts	0x4035, r18	; 0x804035 <g_tx_power_is_zero>

				if(!err)
    d038:	99 81       	ldd	r25, Y+1	; 0x01
    d03a:	81 e0       	ldi	r24, 0x01	; 1
    d03c:	89 27       	eor	r24, r25
    d03e:	88 23       	and	r24, r24
    d040:	71 f1       	breq	.+92     	; 0xd09e <_Z15txSetParametersPjPb+0xe0>
				{
					g_80m_power_level_mW = power;
    d042:	8b 81       	ldd	r24, Y+3	; 0x03
    d044:	9c 81       	ldd	r25, Y+4	; 0x04
    d046:	80 93 2f 40 	sts	0x402F, r24	; 0x80402f <g_80m_power_level_mW>
    d04a:	90 93 30 40 	sts	0x4030, r25	; 0x804030 <g_80m_power_level_mW+0x1>

					if(g_antenna_connect_state == ANT_CONNECTED)
    d04e:	90 91 81 47 	lds	r25, 0x4781	; 0x804781 <g_antenna_connect_state>
    d052:	81 e0       	ldi	r24, 0x01	; 1
    d054:	92 30       	cpi	r25, 0x02	; 2
    d056:	09 f0       	breq	.+2      	; 0xd05a <_Z15txSetParametersPjPb+0x9c>
    d058:	80 e0       	ldi	r24, 0x00	; 0
    d05a:	88 23       	and	r24, r24
    d05c:	31 f0       	breq	.+12     	; 0xd06a <_Z15txSetParametersPjPb+0xac>
					{
						DAC0_setVal(drainVoltageDAC);
    d05e:	8d 81       	ldd	r24, Y+5	; 0x05
    d060:	88 2f       	mov	r24, r24
    d062:	90 e0       	ldi	r25, 0x00	; 0
    d064:	0e 94 cf 39 	call	0x739e	; 0x739e <_Z11DAC0_setValj>
    d068:	07 c0       	rjmp	.+14     	; 0xd078 <_Z15txSetParametersPjPb+0xba>
					}
					else
					{
						g_tx_power_is_zero = true;
    d06a:	81 e0       	ldi	r24, 0x01	; 1
    d06c:	80 93 35 40 	sts	0x4035, r24	; 0x804035 <g_tx_power_is_zero>
						err = true;
    d070:	81 e0       	ldi	r24, 0x01	; 1
    d072:	89 83       	std	Y+1, r24	; 0x01
						code = ERROR_CODE_NO_ANTENNA_PREVENTS_POWER_SETTING;
    d074:	86 ef       	ldi	r24, 0xF6	; 246
    d076:	8a 83       	std	Y+2, r24	; 0x02
					}

					if(g_tx_power_is_zero || (drainVoltageDAC == 0))
    d078:	80 91 35 40 	lds	r24, 0x4035	; 0x804035 <g_tx_power_is_zero>
    d07c:	88 23       	and	r24, r24
    d07e:	19 f4       	brne	.+6      	; 0xd086 <_Z15txSetParametersPjPb+0xc8>
    d080:	8d 81       	ldd	r24, Y+5	; 0x05
    d082:	88 23       	and	r24, r24
    d084:	11 f4       	brne	.+4      	; 0xd08a <_Z15txSetParametersPjPb+0xcc>
    d086:	81 e0       	ldi	r24, 0x01	; 1
    d088:	01 c0       	rjmp	.+2      	; 0xd08c <_Z15txSetParametersPjPb+0xce>
    d08a:	80 e0       	ldi	r24, 0x00	; 0
    d08c:	88 23       	and	r24, r24
    d08e:	21 f0       	breq	.+8      	; 0xd098 <_Z15txSetParametersPjPb+0xda>
					{
						powerToTransmitter(OFF); /* Turn off FET driver */
    d090:	80 e0       	ldi	r24, 0x00	; 0
    d092:	0e 94 92 67 	call	0xcf24	; 0xcf24 <_Z18powerToTransmitterb>
    d096:	03 c0       	rjmp	.+6      	; 0xd09e <_Z15txSetParametersPjPb+0xe0>
					}
					else
					{
						powerToTransmitter(ON); /* Turn on FET driver */
    d098:	81 e0       	ldi	r24, 0x01	; 1
    d09a:	0e 94 92 67 	call	0xcf24	; 0xcf24 <_Z18powerToTransmitterb>
					}
				}

				*power_mW = power;
    d09e:	2b 81       	ldd	r18, Y+3	; 0x03
    d0a0:	3c 81       	ldd	r19, Y+4	; 0x04
    d0a2:	88 85       	ldd	r24, Y+8	; 0x08
    d0a4:	99 85       	ldd	r25, Y+9	; 0x09
    d0a6:	fc 01       	movw	r30, r24
    d0a8:	20 83       	st	Z, r18
    d0aa:	31 83       	std	Z+1, r19	; 0x01
    d0ac:	04 c0       	rjmp	.+8      	; 0xd0b6 <_Z15txSetParametersPjPb+0xf8>
			}
			else
			{
				err = true;
    d0ae:	81 e0       	ldi	r24, 0x01	; 1
    d0b0:	89 83       	std	Y+1, r24	; 0x01
				code = ERROR_CODE_POWER_LEVEL_NOT_SUPPORTED;
    d0b2:	85 ef       	ldi	r24, 0xF5	; 245
    d0b4:	8a 83       	std	Y+2, r24	; 0x02
			}
		}

		if(!err)
    d0b6:	99 81       	ldd	r25, Y+1	; 0x01
    d0b8:	81 e0       	ldi	r24, 0x01	; 1
    d0ba:	89 27       	eor	r24, r25
    d0bc:	88 23       	and	r24, r24
    d0be:	51 f0       	breq	.+20     	; 0xd0d4 <_Z15txSetParametersPjPb+0x116>
		{
			if(enableDriverPwr != NULL)
    d0c0:	8a 85       	ldd	r24, Y+10	; 0x0a
    d0c2:	9b 85       	ldd	r25, Y+11	; 0x0b
    d0c4:	89 2b       	or	r24, r25
    d0c6:	31 f0       	breq	.+12     	; 0xd0d4 <_Z15txSetParametersPjPb+0x116>
			{
				powerToTransmitter(*enableDriverPwr);
    d0c8:	8a 85       	ldd	r24, Y+10	; 0x0a
    d0ca:	9b 85       	ldd	r25, Y+11	; 0x0b
    d0cc:	fc 01       	movw	r30, r24
    d0ce:	80 81       	ld	r24, Z
    d0d0:	0e 94 92 67 	call	0xcf24	; 0xcf24 <_Z18powerToTransmitterb>
			}
		}

		return(code);
    d0d4:	8a 81       	ldd	r24, Y+2	; 0x02
	}
    d0d6:	2b 96       	adiw	r28, 0x0b	; 11
    d0d8:	cd bf       	out	0x3d, r28	; 61
    d0da:	de bf       	out	0x3e, r29	; 62
    d0dc:	df 91       	pop	r29
    d0de:	cf 91       	pop	r28
    d0e0:	08 95       	ret

0000d0e2 <_Z16init_transmitterv>:


	EC init_transmitter(void)
	{
    d0e2:	cf 93       	push	r28
    d0e4:	df 93       	push	r29
    d0e6:	00 d0       	rcall	.+0      	; 0xd0e8 <_Z16init_transmitterv+0x6>
    d0e8:	00 d0       	rcall	.+0      	; 0xd0ea <_Z16init_transmitterv+0x8>
    d0ea:	cd b7       	in	r28, 0x3d	; 61
    d0ec:	de b7       	in	r29, 0x3e	; 62
		EC code;
		bool err;
		
		DAC0_init();
    d0ee:	0e 94 a1 39 	call	0x7342	; 0x7342 <_Z9DAC0_initv>

		if((err = si5351_init(SI5351_CRYSTAL_LOAD_6PF, 0)))
    d0f2:	40 e0       	ldi	r20, 0x00	; 0
    d0f4:	50 e0       	ldi	r21, 0x00	; 0
    d0f6:	ba 01       	movw	r22, r20
    d0f8:	80 e4       	ldi	r24, 0x40	; 64
    d0fa:	0e 94 86 5b 	call	0xb70c	; 0xb70c <si5351_init>
    d0fe:	8a 83       	std	Y+2, r24	; 0x02
    d100:	8a 81       	ldd	r24, Y+2	; 0x02
    d102:	88 23       	and	r24, r24
    d104:	11 f0       	breq	.+4      	; 0xd10a <_Z16init_transmitterv+0x28>
		{
			return(ERROR_CODE_RF_OSCILLATOR_ERROR);
    d106:	82 ed       	ldi	r24, 0xD2	; 210
    d108:	4e c0       	rjmp	.+156    	; 0xd1a6 <_Z16init_transmitterv+0xc4>
		}

		if((code = txSetParameters(NULL, NULL)))
    d10a:	60 e0       	ldi	r22, 0x00	; 0
    d10c:	70 e0       	ldi	r23, 0x00	; 0
    d10e:	80 e0       	ldi	r24, 0x00	; 0
    d110:	90 e0       	ldi	r25, 0x00	; 0
    d112:	0e 94 df 67 	call	0xcfbe	; 0xcfbe <_Z15txSetParametersPjPb>
    d116:	89 83       	std	Y+1, r24	; 0x01
    d118:	81 e0       	ldi	r24, 0x01	; 1
    d11a:	99 81       	ldd	r25, Y+1	; 0x01
    d11c:	99 23       	and	r25, r25
    d11e:	09 f4       	brne	.+2      	; 0xd122 <_Z16init_transmitterv+0x40>
    d120:	80 e0       	ldi	r24, 0x00	; 0
    d122:	88 23       	and	r24, r24
    d124:	11 f0       	breq	.+4      	; 0xd12a <_Z16init_transmitterv+0x48>
		{
			return( code);
    d126:	89 81       	ldd	r24, Y+1	; 0x01
    d128:	3e c0       	rjmp	.+124    	; 0xd1a6 <_Z16init_transmitterv+0xc4>
		}

		if((code = si5351_drive_strength(TX_CLOCK_HF_0, SI5351_DRIVE_8MA)))
    d12a:	63 e0       	ldi	r22, 0x03	; 3
    d12c:	81 e0       	ldi	r24, 0x01	; 1
    d12e:	0e 94 40 5e 	call	0xbc80	; 0xbc80 <si5351_drive_strength>
    d132:	89 83       	std	Y+1, r24	; 0x01
    d134:	81 e0       	ldi	r24, 0x01	; 1
    d136:	99 81       	ldd	r25, Y+1	; 0x01
    d138:	99 23       	and	r25, r25
    d13a:	09 f4       	brne	.+2      	; 0xd13e <_Z16init_transmitterv+0x5c>
    d13c:	80 e0       	ldi	r24, 0x00	; 0
    d13e:	88 23       	and	r24, r24
    d140:	11 f0       	breq	.+4      	; 0xd146 <_Z16init_transmitterv+0x64>
		{
			return( code);
    d142:	89 81       	ldd	r24, Y+1	; 0x01
    d144:	30 c0       	rjmp	.+96     	; 0xd1a6 <_Z16init_transmitterv+0xc4>
		}
		
		if((code = si5351_clock_enable(TX_CLOCK_HF_0, SI5351_CLK_DISABLED)))
    d146:	60 e0       	ldi	r22, 0x00	; 0
    d148:	81 e0       	ldi	r24, 0x01	; 1
    d14a:	0e 94 f5 5d 	call	0xbbea	; 0xbbea <si5351_clock_enable>
    d14e:	89 83       	std	Y+1, r24	; 0x01
    d150:	81 e0       	ldi	r24, 0x01	; 1
    d152:	99 81       	ldd	r25, Y+1	; 0x01
    d154:	99 23       	and	r25, r25
    d156:	09 f4       	brne	.+2      	; 0xd15a <_Z16init_transmitterv+0x78>
    d158:	80 e0       	ldi	r24, 0x00	; 0
    d15a:	88 23       	and	r24, r24
    d15c:	11 f0       	breq	.+4      	; 0xd162 <_Z16init_transmitterv+0x80>
		{
			return( code);
    d15e:	89 81       	ldd	r24, Y+1	; 0x01
    d160:	22 c0       	rjmp	.+68     	; 0xd1a6 <_Z16init_transmitterv+0xc4>
// 		if((code = si5351_clock_enable(TX_CLOCK_VHF_FM, SI5351_CLK_DISABLED)))
// 		{
// 			return( code);
// 		}

		uint16_t pwr_mW = g_80m_power_level_mW;
    d162:	80 91 2f 40 	lds	r24, 0x402F	; 0x80402f <g_80m_power_level_mW>
    d166:	90 91 30 40 	lds	r25, 0x4030	; 0x804030 <g_80m_power_level_mW+0x1>
    d16a:	8b 83       	std	Y+3, r24	; 0x03
    d16c:	9c 83       	std	Y+4, r25	; 0x04
		
		err = txSetFrequency((Frequency_Hz*)&g_80m_frequency, true);
    d16e:	61 e0       	ldi	r22, 0x01	; 1
    d170:	8b e2       	ldi	r24, 0x2B	; 43
    d172:	90 e4       	ldi	r25, 0x40	; 64
    d174:	0e 94 37 67 	call	0xce6e	; 0xce6e <_Z14txSetFrequencyPmb>
    d178:	8a 83       	std	Y+2, r24	; 0x02
		if(!err)
    d17a:	9a 81       	ldd	r25, Y+2	; 0x02
    d17c:	81 e0       	ldi	r24, 0x01	; 1
    d17e:	89 27       	eor	r24, r25
    d180:	88 23       	and	r24, r24
    d182:	81 f0       	breq	.+32     	; 0xd1a4 <_Z16init_transmitterv+0xc2>
		{
			code = txSetParameters(&pwr_mW, NULL);
    d184:	ce 01       	movw	r24, r28
    d186:	03 96       	adiw	r24, 0x03	; 3
    d188:	60 e0       	ldi	r22, 0x00	; 0
    d18a:	70 e0       	ldi	r23, 0x00	; 0
    d18c:	0e 94 df 67 	call	0xcfbe	; 0xcfbe <_Z15txSetParametersPjPb>
    d190:	89 83       	std	Y+1, r24	; 0x01
			if((code == ERROR_CODE_NO_ERROR) || (code == ERROR_CODE_NO_ANTENNA_PREVENTS_POWER_SETTING))
    d192:	89 81       	ldd	r24, Y+1	; 0x01
    d194:	88 23       	and	r24, r24
    d196:	19 f0       	breq	.+6      	; 0xd19e <_Z16init_transmitterv+0xbc>
    d198:	89 81       	ldd	r24, Y+1	; 0x01
    d19a:	86 3f       	cpi	r24, 0xF6	; 246
    d19c:	19 f4       	brne	.+6      	; 0xd1a4 <_Z16init_transmitterv+0xc2>
			{
				g_tx_initialized = true;
    d19e:	81 e0       	ldi	r24, 0x01	; 1
    d1a0:	80 93 e5 4a 	sts	0x4AE5, r24	; 0x804ae5 <_ZL16g_tx_initialized>
			}
		}

		return( code);
    d1a4:	89 81       	ldd	r24, Y+1	; 0x01
	}
    d1a6:	24 96       	adiw	r28, 0x04	; 4
    d1a8:	cd bf       	out	0x3d, r28	; 61
    d1aa:	de bf       	out	0x3e, r29	; 62
    d1ac:	df 91       	pop	r29
    d1ae:	cf 91       	pop	r28
    d1b0:	08 95       	ret

0000d1b2 <_Z22txMilliwattsToSettingsPjPhS0_S0_>:


EC txMilliwattsToSettings(uint16_t* powerMW, uint8_t* driveLevel, uint8_t* modLevelHigh, uint8_t* modLevelLow)
{
    d1b2:	cf 93       	push	r28
    d1b4:	df 93       	push	r29
    d1b6:	cd b7       	in	r28, 0x3d	; 61
    d1b8:	de b7       	in	r29, 0x3e	; 62
    d1ba:	65 97       	sbiw	r28, 0x15	; 21
    d1bc:	cd bf       	out	0x3d, r28	; 61
    d1be:	de bf       	out	0x3e, r29	; 62
    d1c0:	8e 87       	std	Y+14, r24	; 0x0e
    d1c2:	9f 87       	std	Y+15, r25	; 0x0f
    d1c4:	68 8b       	std	Y+16, r22	; 0x10
    d1c6:	79 8b       	std	Y+17, r23	; 0x11
    d1c8:	4a 8b       	std	Y+18, r20	; 0x12
    d1ca:	5b 8b       	std	Y+19, r21	; 0x13
    d1cc:	2c 8b       	std	Y+20, r18	; 0x14
    d1ce:	3d 8b       	std	Y+21, r19	; 0x15
	EC ec = ERROR_CODE_NO_ERROR;
    d1d0:	19 82       	std	Y+1, r1	; 0x01
	int16_t maxPwr;
	uint8_t index;

	if(powerMW == NULL)
    d1d2:	8e 85       	ldd	r24, Y+14	; 0x0e
    d1d4:	9f 85       	ldd	r25, Y+15	; 0x0f
    d1d6:	89 2b       	or	r24, r25
    d1d8:	11 f4       	brne	.+4      	; 0xd1de <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c>
	{
		return(ERROR_CODE_SW_LOGIC_ERROR);
    d1da:	8f ec       	ldi	r24, 0xCF	; 207
    d1dc:	77 c1       	rjmp	.+750    	; 0xd4cc <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x31a>
	}

	maxPwr = MAX_TX_POWER_80M_MW;
    d1de:	88 e8       	ldi	r24, 0x88	; 136
    d1e0:	93 e1       	ldi	r25, 0x13	; 19
    d1e2:	8b 83       	std	Y+3, r24	; 0x03
    d1e4:	9c 83       	std	Y+4, r25	; 0x04

	if((int16_t)*powerMW > maxPwr)
    d1e6:	8e 85       	ldd	r24, Y+14	; 0x0e
    d1e8:	9f 85       	ldd	r25, Y+15	; 0x0f
    d1ea:	fc 01       	movw	r30, r24
    d1ec:	80 81       	ld	r24, Z
    d1ee:	91 81       	ldd	r25, Z+1	; 0x01
    d1f0:	9c 01       	movw	r18, r24
    d1f2:	8b 81       	ldd	r24, Y+3	; 0x03
    d1f4:	9c 81       	ldd	r25, Y+4	; 0x04
    d1f6:	82 17       	cp	r24, r18
    d1f8:	93 07       	cpc	r25, r19
    d1fa:	14 f4       	brge	.+4      	; 0xd200 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x4e>
	{
		ec = ERROR_CODE_POWER_LEVEL_NOT_SUPPORTED;
    d1fc:	85 ef       	ldi	r24, 0xF5	; 245
    d1fe:	89 83       	std	Y+1, r24	; 0x01
	}

	*powerMW = CLAMP(0, (int16_t)*powerMW, maxPwr);
    d200:	8e 85       	ldd	r24, Y+14	; 0x0e
    d202:	9f 85       	ldd	r25, Y+15	; 0x0f
    d204:	fc 01       	movw	r30, r24
    d206:	80 81       	ld	r24, Z
    d208:	91 81       	ldd	r25, Z+1	; 0x01
    d20a:	8d 83       	std	Y+5, r24	; 0x05
    d20c:	9e 83       	std	Y+6, r25	; 0x06
    d20e:	1f 82       	std	Y+7, r1	; 0x07
    d210:	18 86       	std	Y+8, r1	; 0x08
    d212:	8b 81       	ldd	r24, Y+3	; 0x03
    d214:	9c 81       	ldd	r25, Y+4	; 0x04
    d216:	89 87       	std	Y+9, r24	; 0x09
    d218:	9a 87       	std	Y+10, r25	; 0x0a
    d21a:	2d 81       	ldd	r18, Y+5	; 0x05
    d21c:	3e 81       	ldd	r19, Y+6	; 0x06
    d21e:	89 85       	ldd	r24, Y+9	; 0x09
    d220:	9a 85       	ldd	r25, Y+10	; 0x0a
    d222:	82 17       	cp	r24, r18
    d224:	93 07       	cpc	r25, r19
    d226:	6c f0       	brlt	.+26     	; 0xd242 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x90>
    d228:	2d 81       	ldd	r18, Y+5	; 0x05
    d22a:	3e 81       	ldd	r19, Y+6	; 0x06
    d22c:	8f 81       	ldd	r24, Y+7	; 0x07
    d22e:	98 85       	ldd	r25, Y+8	; 0x08
    d230:	28 17       	cp	r18, r24
    d232:	39 07       	cpc	r19, r25
    d234:	1c f4       	brge	.+6      	; 0xd23c <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x8a>
    d236:	8f 81       	ldd	r24, Y+7	; 0x07
    d238:	98 85       	ldd	r25, Y+8	; 0x08
    d23a:	05 c0       	rjmp	.+10     	; 0xd246 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x94>
    d23c:	8d 81       	ldd	r24, Y+5	; 0x05
    d23e:	9e 81       	ldd	r25, Y+6	; 0x06
    d240:	02 c0       	rjmp	.+4      	; 0xd246 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x94>
    d242:	89 85       	ldd	r24, Y+9	; 0x09
    d244:	9a 85       	ldd	r25, Y+10	; 0x0a
    d246:	9c 01       	movw	r18, r24
    d248:	8e 85       	ldd	r24, Y+14	; 0x0e
    d24a:	9f 85       	ldd	r25, Y+15	; 0x0f
    d24c:	fc 01       	movw	r30, r24
    d24e:	20 83       	st	Z, r18
    d250:	31 83       	std	Z+1, r19	; 0x01

	if(*powerMW < 5)
    d252:	8e 85       	ldd	r24, Y+14	; 0x0e
    d254:	9f 85       	ldd	r25, Y+15	; 0x0f
    d256:	fc 01       	movw	r30, r24
    d258:	80 81       	ld	r24, Z
    d25a:	91 81       	ldd	r25, Z+1	; 0x01
    d25c:	05 97       	sbiw	r24, 0x05	; 5
    d25e:	38 f4       	brcc	.+14     	; 0xd26e <_Z22txMilliwattsToSettingsPjPhS0_S0_+0xbc>
	{
		index = 0;
    d260:	1a 82       	std	Y+2, r1	; 0x02
		*powerMW = 0;
    d262:	8e 85       	ldd	r24, Y+14	; 0x0e
    d264:	9f 85       	ldd	r25, Y+15	; 0x0f
    d266:	fc 01       	movw	r30, r24
    d268:	10 82       	st	Z, r1
    d26a:	11 82       	std	Z+1, r1	; 0x01
    d26c:	04 c1       	rjmp	.+520    	; 0xd476 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 50)
    d26e:	8e 85       	ldd	r24, Y+14	; 0x0e
    d270:	9f 85       	ldd	r25, Y+15	; 0x0f
    d272:	fc 01       	movw	r30, r24
    d274:	80 81       	ld	r24, Z
    d276:	91 81       	ldd	r25, Z+1	; 0x01
    d278:	c2 97       	sbiw	r24, 0x32	; 50
    d27a:	50 f4       	brcc	.+20     	; 0xd290 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0xde>
	{
		index = 1;
    d27c:	81 e0       	ldi	r24, 0x01	; 1
    d27e:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 10;
    d280:	8e 85       	ldd	r24, Y+14	; 0x0e
    d282:	9f 85       	ldd	r25, Y+15	; 0x0f
    d284:	2a e0       	ldi	r18, 0x0A	; 10
    d286:	30 e0       	ldi	r19, 0x00	; 0
    d288:	fc 01       	movw	r30, r24
    d28a:	20 83       	st	Z, r18
    d28c:	31 83       	std	Z+1, r19	; 0x01
    d28e:	f3 c0       	rjmp	.+486    	; 0xd476 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 150)
    d290:	8e 85       	ldd	r24, Y+14	; 0x0e
    d292:	9f 85       	ldd	r25, Y+15	; 0x0f
    d294:	fc 01       	movw	r30, r24
    d296:	80 81       	ld	r24, Z
    d298:	91 81       	ldd	r25, Z+1	; 0x01
    d29a:	86 39       	cpi	r24, 0x96	; 150
    d29c:	91 05       	cpc	r25, r1
    d29e:	50 f4       	brcc	.+20     	; 0xd2b4 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x102>
	{
		index = 2;
    d2a0:	82 e0       	ldi	r24, 0x02	; 2
    d2a2:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 100;
    d2a4:	8e 85       	ldd	r24, Y+14	; 0x0e
    d2a6:	9f 85       	ldd	r25, Y+15	; 0x0f
    d2a8:	24 e6       	ldi	r18, 0x64	; 100
    d2aa:	30 e0       	ldi	r19, 0x00	; 0
    d2ac:	fc 01       	movw	r30, r24
    d2ae:	20 83       	st	Z, r18
    d2b0:	31 83       	std	Z+1, r19	; 0x01
    d2b2:	e1 c0       	rjmp	.+450    	; 0xd476 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 250)
    d2b4:	8e 85       	ldd	r24, Y+14	; 0x0e
    d2b6:	9f 85       	ldd	r25, Y+15	; 0x0f
    d2b8:	fc 01       	movw	r30, r24
    d2ba:	80 81       	ld	r24, Z
    d2bc:	91 81       	ldd	r25, Z+1	; 0x01
    d2be:	8a 3f       	cpi	r24, 0xFA	; 250
    d2c0:	91 05       	cpc	r25, r1
    d2c2:	50 f4       	brcc	.+20     	; 0xd2d8 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x126>
	{
		index = 3;
    d2c4:	83 e0       	ldi	r24, 0x03	; 3
    d2c6:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 200;
    d2c8:	8e 85       	ldd	r24, Y+14	; 0x0e
    d2ca:	9f 85       	ldd	r25, Y+15	; 0x0f
    d2cc:	28 ec       	ldi	r18, 0xC8	; 200
    d2ce:	30 e0       	ldi	r19, 0x00	; 0
    d2d0:	fc 01       	movw	r30, r24
    d2d2:	20 83       	st	Z, r18
    d2d4:	31 83       	std	Z+1, r19	; 0x01
    d2d6:	cf c0       	rjmp	.+414    	; 0xd476 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 350)
    d2d8:	8e 85       	ldd	r24, Y+14	; 0x0e
    d2da:	9f 85       	ldd	r25, Y+15	; 0x0f
    d2dc:	fc 01       	movw	r30, r24
    d2de:	80 81       	ld	r24, Z
    d2e0:	91 81       	ldd	r25, Z+1	; 0x01
    d2e2:	8e 35       	cpi	r24, 0x5E	; 94
    d2e4:	91 40       	sbci	r25, 0x01	; 1
    d2e6:	50 f4       	brcc	.+20     	; 0xd2fc <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x14a>
	{
		index = 4;
    d2e8:	84 e0       	ldi	r24, 0x04	; 4
    d2ea:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 300;
    d2ec:	8e 85       	ldd	r24, Y+14	; 0x0e
    d2ee:	9f 85       	ldd	r25, Y+15	; 0x0f
    d2f0:	2c e2       	ldi	r18, 0x2C	; 44
    d2f2:	31 e0       	ldi	r19, 0x01	; 1
    d2f4:	fc 01       	movw	r30, r24
    d2f6:	20 83       	st	Z, r18
    d2f8:	31 83       	std	Z+1, r19	; 0x01
    d2fa:	bd c0       	rjmp	.+378    	; 0xd476 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 450)
    d2fc:	8e 85       	ldd	r24, Y+14	; 0x0e
    d2fe:	9f 85       	ldd	r25, Y+15	; 0x0f
    d300:	fc 01       	movw	r30, r24
    d302:	80 81       	ld	r24, Z
    d304:	91 81       	ldd	r25, Z+1	; 0x01
    d306:	82 3c       	cpi	r24, 0xC2	; 194
    d308:	91 40       	sbci	r25, 0x01	; 1
    d30a:	50 f4       	brcc	.+20     	; 0xd320 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x16e>
	{
		index = 5;
    d30c:	85 e0       	ldi	r24, 0x05	; 5
    d30e:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 400;
    d310:	8e 85       	ldd	r24, Y+14	; 0x0e
    d312:	9f 85       	ldd	r25, Y+15	; 0x0f
    d314:	20 e9       	ldi	r18, 0x90	; 144
    d316:	31 e0       	ldi	r19, 0x01	; 1
    d318:	fc 01       	movw	r30, r24
    d31a:	20 83       	st	Z, r18
    d31c:	31 83       	std	Z+1, r19	; 0x01
    d31e:	ab c0       	rjmp	.+342    	; 0xd476 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 550)
    d320:	8e 85       	ldd	r24, Y+14	; 0x0e
    d322:	9f 85       	ldd	r25, Y+15	; 0x0f
    d324:	fc 01       	movw	r30, r24
    d326:	80 81       	ld	r24, Z
    d328:	91 81       	ldd	r25, Z+1	; 0x01
    d32a:	86 32       	cpi	r24, 0x26	; 38
    d32c:	92 40       	sbci	r25, 0x02	; 2
    d32e:	50 f4       	brcc	.+20     	; 0xd344 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x192>
	{
		index = 6;
    d330:	86 e0       	ldi	r24, 0x06	; 6
    d332:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 500;
    d334:	8e 85       	ldd	r24, Y+14	; 0x0e
    d336:	9f 85       	ldd	r25, Y+15	; 0x0f
    d338:	24 ef       	ldi	r18, 0xF4	; 244
    d33a:	31 e0       	ldi	r19, 0x01	; 1
    d33c:	fc 01       	movw	r30, r24
    d33e:	20 83       	st	Z, r18
    d340:	31 83       	std	Z+1, r19	; 0x01
    d342:	99 c0       	rjmp	.+306    	; 0xd476 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 650)
    d344:	8e 85       	ldd	r24, Y+14	; 0x0e
    d346:	9f 85       	ldd	r25, Y+15	; 0x0f
    d348:	fc 01       	movw	r30, r24
    d34a:	80 81       	ld	r24, Z
    d34c:	91 81       	ldd	r25, Z+1	; 0x01
    d34e:	8a 38       	cpi	r24, 0x8A	; 138
    d350:	92 40       	sbci	r25, 0x02	; 2
    d352:	50 f4       	brcc	.+20     	; 0xd368 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x1b6>
	{
		index = 7;
    d354:	87 e0       	ldi	r24, 0x07	; 7
    d356:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 600;
    d358:	8e 85       	ldd	r24, Y+14	; 0x0e
    d35a:	9f 85       	ldd	r25, Y+15	; 0x0f
    d35c:	28 e5       	ldi	r18, 0x58	; 88
    d35e:	32 e0       	ldi	r19, 0x02	; 2
    d360:	fc 01       	movw	r30, r24
    d362:	20 83       	st	Z, r18
    d364:	31 83       	std	Z+1, r19	; 0x01
    d366:	87 c0       	rjmp	.+270    	; 0xd476 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 900)
    d368:	8e 85       	ldd	r24, Y+14	; 0x0e
    d36a:	9f 85       	ldd	r25, Y+15	; 0x0f
    d36c:	fc 01       	movw	r30, r24
    d36e:	80 81       	ld	r24, Z
    d370:	91 81       	ldd	r25, Z+1	; 0x01
    d372:	84 38       	cpi	r24, 0x84	; 132
    d374:	93 40       	sbci	r25, 0x03	; 3
    d376:	50 f4       	brcc	.+20     	; 0xd38c <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x1da>
	{
		index = 8;
    d378:	88 e0       	ldi	r24, 0x08	; 8
    d37a:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 800;
    d37c:	8e 85       	ldd	r24, Y+14	; 0x0e
    d37e:	9f 85       	ldd	r25, Y+15	; 0x0f
    d380:	20 e2       	ldi	r18, 0x20	; 32
    d382:	33 e0       	ldi	r19, 0x03	; 3
    d384:	fc 01       	movw	r30, r24
    d386:	20 83       	st	Z, r18
    d388:	31 83       	std	Z+1, r19	; 0x01
    d38a:	75 c0       	rjmp	.+234    	; 0xd476 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 1250)
    d38c:	8e 85       	ldd	r24, Y+14	; 0x0e
    d38e:	9f 85       	ldd	r25, Y+15	; 0x0f
    d390:	fc 01       	movw	r30, r24
    d392:	80 81       	ld	r24, Z
    d394:	91 81       	ldd	r25, Z+1	; 0x01
    d396:	82 3e       	cpi	r24, 0xE2	; 226
    d398:	94 40       	sbci	r25, 0x04	; 4
    d39a:	50 f4       	brcc	.+20     	; 0xd3b0 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x1fe>
	{
		index = 9;
    d39c:	89 e0       	ldi	r24, 0x09	; 9
    d39e:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 1000;
    d3a0:	8e 85       	ldd	r24, Y+14	; 0x0e
    d3a2:	9f 85       	ldd	r25, Y+15	; 0x0f
    d3a4:	28 ee       	ldi	r18, 0xE8	; 232
    d3a6:	33 e0       	ldi	r19, 0x03	; 3
    d3a8:	fc 01       	movw	r30, r24
    d3aa:	20 83       	st	Z, r18
    d3ac:	31 83       	std	Z+1, r19	; 0x01
    d3ae:	63 c0       	rjmp	.+198    	; 0xd476 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 1750)
    d3b0:	8e 85       	ldd	r24, Y+14	; 0x0e
    d3b2:	9f 85       	ldd	r25, Y+15	; 0x0f
    d3b4:	fc 01       	movw	r30, r24
    d3b6:	80 81       	ld	r24, Z
    d3b8:	91 81       	ldd	r25, Z+1	; 0x01
    d3ba:	86 3d       	cpi	r24, 0xD6	; 214
    d3bc:	96 40       	sbci	r25, 0x06	; 6
    d3be:	50 f4       	brcc	.+20     	; 0xd3d4 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x222>
	{
		index = 10;
    d3c0:	8a e0       	ldi	r24, 0x0A	; 10
    d3c2:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 1500;
    d3c4:	8e 85       	ldd	r24, Y+14	; 0x0e
    d3c6:	9f 85       	ldd	r25, Y+15	; 0x0f
    d3c8:	2c ed       	ldi	r18, 0xDC	; 220
    d3ca:	35 e0       	ldi	r19, 0x05	; 5
    d3cc:	fc 01       	movw	r30, r24
    d3ce:	20 83       	st	Z, r18
    d3d0:	31 83       	std	Z+1, r19	; 0x01
    d3d2:	51 c0       	rjmp	.+162    	; 0xd476 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 2250)
    d3d4:	8e 85       	ldd	r24, Y+14	; 0x0e
    d3d6:	9f 85       	ldd	r25, Y+15	; 0x0f
    d3d8:	fc 01       	movw	r30, r24
    d3da:	80 81       	ld	r24, Z
    d3dc:	91 81       	ldd	r25, Z+1	; 0x01
    d3de:	8a 3c       	cpi	r24, 0xCA	; 202
    d3e0:	98 40       	sbci	r25, 0x08	; 8
    d3e2:	50 f4       	brcc	.+20     	; 0xd3f8 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x246>
	{
		index = 11;
    d3e4:	8b e0       	ldi	r24, 0x0B	; 11
    d3e6:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 2000;
    d3e8:	8e 85       	ldd	r24, Y+14	; 0x0e
    d3ea:	9f 85       	ldd	r25, Y+15	; 0x0f
    d3ec:	20 ed       	ldi	r18, 0xD0	; 208
    d3ee:	37 e0       	ldi	r19, 0x07	; 7
    d3f0:	fc 01       	movw	r30, r24
    d3f2:	20 83       	st	Z, r18
    d3f4:	31 83       	std	Z+1, r19	; 0x01
    d3f6:	3f c0       	rjmp	.+126    	; 0xd476 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 2750)
    d3f8:	8e 85       	ldd	r24, Y+14	; 0x0e
    d3fa:	9f 85       	ldd	r25, Y+15	; 0x0f
    d3fc:	fc 01       	movw	r30, r24
    d3fe:	80 81       	ld	r24, Z
    d400:	91 81       	ldd	r25, Z+1	; 0x01
    d402:	8e 3b       	cpi	r24, 0xBE	; 190
    d404:	9a 40       	sbci	r25, 0x0A	; 10
    d406:	50 f4       	brcc	.+20     	; 0xd41c <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x26a>
	{
		index = 12;
    d408:	8c e0       	ldi	r24, 0x0C	; 12
    d40a:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 2500;
    d40c:	8e 85       	ldd	r24, Y+14	; 0x0e
    d40e:	9f 85       	ldd	r25, Y+15	; 0x0f
    d410:	24 ec       	ldi	r18, 0xC4	; 196
    d412:	39 e0       	ldi	r19, 0x09	; 9
    d414:	fc 01       	movw	r30, r24
    d416:	20 83       	st	Z, r18
    d418:	31 83       	std	Z+1, r19	; 0x01
    d41a:	2d c0       	rjmp	.+90     	; 0xd476 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 3500)
    d41c:	8e 85       	ldd	r24, Y+14	; 0x0e
    d41e:	9f 85       	ldd	r25, Y+15	; 0x0f
    d420:	fc 01       	movw	r30, r24
    d422:	80 81       	ld	r24, Z
    d424:	91 81       	ldd	r25, Z+1	; 0x01
    d426:	8c 3a       	cpi	r24, 0xAC	; 172
    d428:	9d 40       	sbci	r25, 0x0D	; 13
    d42a:	50 f4       	brcc	.+20     	; 0xd440 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x28e>
	{
		index = 13;
    d42c:	8d e0       	ldi	r24, 0x0D	; 13
    d42e:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 3000;
    d430:	8e 85       	ldd	r24, Y+14	; 0x0e
    d432:	9f 85       	ldd	r25, Y+15	; 0x0f
    d434:	28 eb       	ldi	r18, 0xB8	; 184
    d436:	3b e0       	ldi	r19, 0x0B	; 11
    d438:	fc 01       	movw	r30, r24
    d43a:	20 83       	st	Z, r18
    d43c:	31 83       	std	Z+1, r19	; 0x01
    d43e:	1b c0       	rjmp	.+54     	; 0xd476 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 4500)
    d440:	8e 85       	ldd	r24, Y+14	; 0x0e
    d442:	9f 85       	ldd	r25, Y+15	; 0x0f
    d444:	fc 01       	movw	r30, r24
    d446:	80 81       	ld	r24, Z
    d448:	91 81       	ldd	r25, Z+1	; 0x01
    d44a:	84 39       	cpi	r24, 0x94	; 148
    d44c:	91 41       	sbci	r25, 0x11	; 17
    d44e:	50 f4       	brcc	.+20     	; 0xd464 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2b2>
	{
		index = 14;
    d450:	8e e0       	ldi	r24, 0x0E	; 14
    d452:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 4000;
    d454:	8e 85       	ldd	r24, Y+14	; 0x0e
    d456:	9f 85       	ldd	r25, Y+15	; 0x0f
    d458:	20 ea       	ldi	r18, 0xA0	; 160
    d45a:	3f e0       	ldi	r19, 0x0F	; 15
    d45c:	fc 01       	movw	r30, r24
    d45e:	20 83       	st	Z, r18
    d460:	31 83       	std	Z+1, r19	; 0x01
    d462:	09 c0       	rjmp	.+18     	; 0xd476 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else
	{
		index = 15;
    d464:	8f e0       	ldi	r24, 0x0F	; 15
    d466:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 5000;
    d468:	8e 85       	ldd	r24, Y+14	; 0x0e
    d46a:	9f 85       	ldd	r25, Y+15	; 0x0f
    d46c:	28 e8       	ldi	r18, 0x88	; 136
    d46e:	33 e1       	ldi	r19, 0x13	; 19
    d470:	fc 01       	movw	r30, r24
    d472:	20 83       	st	Z, r18
    d474:	31 83       	std	Z+1, r19	; 0x01
	}

	*driveLevel = g_80m_power_table[index];
    d476:	8a 81       	ldd	r24, Y+2	; 0x02
    d478:	88 2f       	mov	r24, r24
    d47a:	90 e0       	ldi	r25, 0x00	; 0
    d47c:	8a 5c       	subi	r24, 0xCA	; 202
    d47e:	9f 4b       	sbci	r25, 0xBF	; 191
    d480:	fc 01       	movw	r30, r24
    d482:	20 81       	ld	r18, Z
    d484:	88 89       	ldd	r24, Y+16	; 0x10
    d486:	99 89       	ldd	r25, Y+17	; 0x11
    d488:	fc 01       	movw	r30, r24
    d48a:	20 83       	st	Z, r18
	*modLevelHigh = 0;
    d48c:	8a 89       	ldd	r24, Y+18	; 0x12
    d48e:	9b 89       	ldd	r25, Y+19	; 0x13
    d490:	fc 01       	movw	r30, r24
    d492:	10 82       	st	Z, r1
	*modLevelLow = 0;
    d494:	8c 89       	ldd	r24, Y+20	; 0x14
    d496:	9d 89       	ldd	r25, Y+21	; 0x15
    d498:	fc 01       	movw	r30, r24
    d49a:	10 82       	st	Z, r1
	*driveLevel = MIN(*driveLevel, MAX_80M_PWR_SETTING);
    d49c:	88 89       	ldd	r24, Y+16	; 0x10
    d49e:	99 89       	ldd	r25, Y+17	; 0x11
    d4a0:	fc 01       	movw	r30, r24
    d4a2:	80 81       	ld	r24, Z
    d4a4:	8b 87       	std	Y+11, r24	; 0x0b
    d4a6:	8f ef       	ldi	r24, 0xFF	; 255
    d4a8:	90 e0       	ldi	r25, 0x00	; 0
    d4aa:	8c 87       	std	Y+12, r24	; 0x0c
    d4ac:	9d 87       	std	Y+13, r25	; 0x0d
    d4ae:	8b 85       	ldd	r24, Y+11	; 0x0b
    d4b0:	88 2f       	mov	r24, r24
    d4b2:	90 e0       	ldi	r25, 0x00	; 0
    d4b4:	2c 85       	ldd	r18, Y+12	; 0x0c
    d4b6:	3d 85       	ldd	r19, Y+13	; 0x0d
    d4b8:	28 17       	cp	r18, r24
    d4ba:	39 07       	cpc	r19, r25
    d4bc:	0c f4       	brge	.+2      	; 0xd4c0 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x30e>
    d4be:	c9 01       	movw	r24, r18
    d4c0:	28 2f       	mov	r18, r24
    d4c2:	88 89       	ldd	r24, Y+16	; 0x10
    d4c4:	99 89       	ldd	r25, Y+17	; 0x11
    d4c6:	fc 01       	movw	r30, r24
    d4c8:	20 83       	st	Z, r18

	return(ec);
    d4ca:	89 81       	ldd	r24, Y+1	; 0x01
    d4cc:	65 96       	adiw	r28, 0x15	; 21
    d4ce:	cd bf       	out	0x3d, r28	; 61
    d4d0:	de bf       	out	0x3e, r29	; 62
    d4d2:	df 91       	pop	r29
    d4d4:	cf 91       	pop	r28
    d4d6:	08 95       	ret

0000d4d8 <USART0_get_data>:
 * \return Nothing
 */
void USART4_enable_rx()
{
	USART4.CTRLB |= USART_RXEN_bm;
}
    d4d8:	cf 93       	push	r28
    d4da:	df 93       	push	r29
    d4dc:	cd b7       	in	r28, 0x3d	; 61
    d4de:	de b7       	in	r29, 0x3e	; 62
    d4e0:	80 e0       	ldi	r24, 0x00	; 0
    d4e2:	98 e0       	ldi	r25, 0x08	; 8
    d4e4:	fc 01       	movw	r30, r24
    d4e6:	80 81       	ld	r24, Z
    d4e8:	df 91       	pop	r29
    d4ea:	cf 91       	pop	r28
    d4ec:	08 95       	ret

0000d4ee <USART1_init>:
    d4ee:	0f 93       	push	r16
    d4f0:	1f 93       	push	r17
    d4f2:	cf 93       	push	r28
    d4f4:	df 93       	push	r29
    d4f6:	00 d0       	rcall	.+0      	; 0xd4f8 <USART1_init+0xa>
    d4f8:	00 d0       	rcall	.+0      	; 0xd4fa <USART1_init+0xc>
    d4fa:	cd b7       	in	r28, 0x3d	; 61
    d4fc:	de b7       	in	r29, 0x3e	; 62
    d4fe:	69 83       	std	Y+1, r22	; 0x01
    d500:	7a 83       	std	Y+2, r23	; 0x02
    d502:	8b 83       	std	Y+3, r24	; 0x03
    d504:	9c 83       	std	Y+4, r25	; 0x04
    d506:	00 e2       	ldi	r16, 0x20	; 32
    d508:	18 e0       	ldi	r17, 0x08	; 8
    d50a:	69 81       	ldd	r22, Y+1	; 0x01
    d50c:	7a 81       	ldd	r23, Y+2	; 0x02
    d50e:	8b 81       	ldd	r24, Y+3	; 0x03
    d510:	9c 81       	ldd	r25, Y+4	; 0x04
    d512:	0e 94 65 70 	call	0xe0ca	; 0xe0ca <__floatunsisf>
    d516:	dc 01       	movw	r26, r24
    d518:	cb 01       	movw	r24, r22
    d51a:	20 e0       	ldi	r18, 0x00	; 0
    d51c:	30 e0       	ldi	r19, 0x00	; 0
    d51e:	40 e8       	ldi	r20, 0x80	; 128
    d520:	51 e4       	ldi	r21, 0x41	; 65
    d522:	bc 01       	movw	r22, r24
    d524:	cd 01       	movw	r24, r26
    d526:	0e 94 5d 71 	call	0xe2ba	; 0xe2ba <__mulsf3>
    d52a:	dc 01       	movw	r26, r24
    d52c:	cb 01       	movw	r24, r22
    d52e:	9c 01       	movw	r18, r24
    d530:	ad 01       	movw	r20, r26
    d532:	60 e0       	ldi	r22, 0x00	; 0
    d534:	74 e2       	ldi	r23, 0x24	; 36
    d536:	84 e7       	ldi	r24, 0x74	; 116
    d538:	9d e4       	ldi	r25, 0x4D	; 77
    d53a:	0e 94 bd 6f 	call	0xdf7a	; 0xdf7a <__divsf3>
    d53e:	dc 01       	movw	r26, r24
    d540:	cb 01       	movw	r24, r22
    d542:	20 e0       	ldi	r18, 0x00	; 0
    d544:	30 e0       	ldi	r19, 0x00	; 0
    d546:	40 e0       	ldi	r20, 0x00	; 0
    d548:	5f e3       	ldi	r21, 0x3F	; 63
    d54a:	bc 01       	movw	r22, r24
    d54c:	cd 01       	movw	r24, r26
    d54e:	0e 94 35 6f 	call	0xde6a	; 0xde6a <__addsf3>
    d552:	dc 01       	movw	r26, r24
    d554:	cb 01       	movw	r24, r22
    d556:	bc 01       	movw	r22, r24
    d558:	cd 01       	movw	r24, r26
    d55a:	0e 94 36 70 	call	0xe06c	; 0xe06c <__fixunssfsi>
    d55e:	dc 01       	movw	r26, r24
    d560:	cb 01       	movw	r24, r22
    d562:	f8 01       	movw	r30, r16
    d564:	80 87       	std	Z+8, r24	; 0x08
    d566:	91 87       	std	Z+9, r25	; 0x09
    d568:	80 e2       	ldi	r24, 0x20	; 32
    d56a:	98 e0       	ldi	r25, 0x08	; 8
    d56c:	20 e8       	ldi	r18, 0x80	; 128
    d56e:	fc 01       	movw	r30, r24
    d570:	25 83       	std	Z+5, r18	; 0x05
    d572:	80 e2       	ldi	r24, 0x20	; 32
    d574:	98 e0       	ldi	r25, 0x08	; 8
    d576:	20 ec       	ldi	r18, 0xC0	; 192
    d578:	fc 01       	movw	r30, r24
    d57a:	26 83       	std	Z+6, r18	; 0x06
    d57c:	80 e0       	ldi	r24, 0x00	; 0
    d57e:	24 96       	adiw	r28, 0x04	; 4
    d580:	cd bf       	out	0x3d, r28	; 61
    d582:	de bf       	out	0x3e, r29	; 62
    d584:	df 91       	pop	r29
    d586:	cf 91       	pop	r28
    d588:	1f 91       	pop	r17
    d58a:	0f 91       	pop	r16
    d58c:	08 95       	ret

0000d58e <USART1_enable_tx>:
    d58e:	cf 93       	push	r28
    d590:	df 93       	push	r29
    d592:	cd b7       	in	r28, 0x3d	; 61
    d594:	de b7       	in	r29, 0x3e	; 62
    d596:	80 e2       	ldi	r24, 0x20	; 32
    d598:	98 e0       	ldi	r25, 0x08	; 8
    d59a:	20 e2       	ldi	r18, 0x20	; 32
    d59c:	38 e0       	ldi	r19, 0x08	; 8
    d59e:	f9 01       	movw	r30, r18
    d5a0:	26 81       	ldd	r18, Z+6	; 0x06
    d5a2:	20 64       	ori	r18, 0x40	; 64
    d5a4:	fc 01       	movw	r30, r24
    d5a6:	26 83       	std	Z+6, r18	; 0x06
    d5a8:	80 e2       	ldi	r24, 0x20	; 32
    d5aa:	98 e0       	ldi	r25, 0x08	; 8
    d5ac:	20 e2       	ldi	r18, 0x20	; 32
    d5ae:	38 e0       	ldi	r19, 0x08	; 8
    d5b0:	f9 01       	movw	r30, r18
    d5b2:	25 81       	ldd	r18, Z+5	; 0x05
    d5b4:	20 62       	ori	r18, 0x20	; 32
    d5b6:	fc 01       	movw	r30, r24
    d5b8:	25 83       	std	Z+5, r18	; 0x05
    d5ba:	00 00       	nop
    d5bc:	df 91       	pop	r29
    d5be:	cf 91       	pop	r28
    d5c0:	08 95       	ret

0000d5c2 <USART1_disable>:
    d5c2:	cf 93       	push	r28
    d5c4:	df 93       	push	r29
    d5c6:	cd b7       	in	r28, 0x3d	; 61
    d5c8:	de b7       	in	r29, 0x3e	; 62
    d5ca:	80 e2       	ldi	r24, 0x20	; 32
    d5cc:	98 e0       	ldi	r25, 0x08	; 8
    d5ce:	20 e2       	ldi	r18, 0x20	; 32
    d5d0:	38 e0       	ldi	r19, 0x08	; 8
    d5d2:	f9 01       	movw	r30, r18
    d5d4:	26 81       	ldd	r18, Z+6	; 0x06
    d5d6:	2f 73       	andi	r18, 0x3F	; 63
    d5d8:	fc 01       	movw	r30, r24
    d5da:	26 83       	std	Z+6, r18	; 0x06
    d5dc:	00 00       	nop
    d5de:	df 91       	pop	r29
    d5e0:	cf 91       	pop	r28
    d5e2:	08 95       	ret

0000d5e4 <USART1_get_data>:
    d5e4:	cf 93       	push	r28
    d5e6:	df 93       	push	r29
    d5e8:	cd b7       	in	r28, 0x3d	; 61
    d5ea:	de b7       	in	r29, 0x3e	; 62
    d5ec:	80 e2       	ldi	r24, 0x20	; 32
    d5ee:	98 e0       	ldi	r25, 0x08	; 8
    d5f0:	fc 01       	movw	r30, r24
    d5f2:	80 81       	ld	r24, Z
    d5f4:	df 91       	pop	r29
    d5f6:	cf 91       	pop	r28
    d5f8:	08 95       	ret

0000d5fa <USART4_init>:
    d5fa:	0f 93       	push	r16
    d5fc:	1f 93       	push	r17
    d5fe:	cf 93       	push	r28
    d600:	df 93       	push	r29
    d602:	00 d0       	rcall	.+0      	; 0xd604 <USART4_init+0xa>
    d604:	00 d0       	rcall	.+0      	; 0xd606 <USART4_init+0xc>
    d606:	cd b7       	in	r28, 0x3d	; 61
    d608:	de b7       	in	r29, 0x3e	; 62
    d60a:	69 83       	std	Y+1, r22	; 0x01
    d60c:	7a 83       	std	Y+2, r23	; 0x02
    d60e:	8b 83       	std	Y+3, r24	; 0x03
    d610:	9c 83       	std	Y+4, r25	; 0x04
    d612:	00 e8       	ldi	r16, 0x80	; 128
    d614:	18 e0       	ldi	r17, 0x08	; 8
    d616:	69 81       	ldd	r22, Y+1	; 0x01
    d618:	7a 81       	ldd	r23, Y+2	; 0x02
    d61a:	8b 81       	ldd	r24, Y+3	; 0x03
    d61c:	9c 81       	ldd	r25, Y+4	; 0x04
    d61e:	0e 94 65 70 	call	0xe0ca	; 0xe0ca <__floatunsisf>
    d622:	dc 01       	movw	r26, r24
    d624:	cb 01       	movw	r24, r22
    d626:	20 e0       	ldi	r18, 0x00	; 0
    d628:	30 e0       	ldi	r19, 0x00	; 0
    d62a:	40 e8       	ldi	r20, 0x80	; 128
    d62c:	51 e4       	ldi	r21, 0x41	; 65
    d62e:	bc 01       	movw	r22, r24
    d630:	cd 01       	movw	r24, r26
    d632:	0e 94 5d 71 	call	0xe2ba	; 0xe2ba <__mulsf3>
    d636:	dc 01       	movw	r26, r24
    d638:	cb 01       	movw	r24, r22
    d63a:	9c 01       	movw	r18, r24
    d63c:	ad 01       	movw	r20, r26
    d63e:	60 e0       	ldi	r22, 0x00	; 0
    d640:	74 e2       	ldi	r23, 0x24	; 36
    d642:	84 e7       	ldi	r24, 0x74	; 116
    d644:	9d e4       	ldi	r25, 0x4D	; 77
    d646:	0e 94 bd 6f 	call	0xdf7a	; 0xdf7a <__divsf3>
    d64a:	dc 01       	movw	r26, r24
    d64c:	cb 01       	movw	r24, r22
    d64e:	20 e0       	ldi	r18, 0x00	; 0
    d650:	30 e0       	ldi	r19, 0x00	; 0
    d652:	40 e0       	ldi	r20, 0x00	; 0
    d654:	5f e3       	ldi	r21, 0x3F	; 63
    d656:	bc 01       	movw	r22, r24
    d658:	cd 01       	movw	r24, r26
    d65a:	0e 94 35 6f 	call	0xde6a	; 0xde6a <__addsf3>
    d65e:	dc 01       	movw	r26, r24
    d660:	cb 01       	movw	r24, r22
    d662:	bc 01       	movw	r22, r24
    d664:	cd 01       	movw	r24, r26
    d666:	0e 94 36 70 	call	0xe06c	; 0xe06c <__fixunssfsi>
    d66a:	dc 01       	movw	r26, r24
    d66c:	cb 01       	movw	r24, r22
    d66e:	f8 01       	movw	r30, r16
    d670:	80 87       	std	Z+8, r24	; 0x08
    d672:	91 87       	std	Z+9, r25	; 0x09
    d674:	80 e8       	ldi	r24, 0x80	; 128
    d676:	98 e0       	ldi	r25, 0x08	; 8
    d678:	20 e8       	ldi	r18, 0x80	; 128
    d67a:	fc 01       	movw	r30, r24
    d67c:	25 83       	std	Z+5, r18	; 0x05
    d67e:	80 e8       	ldi	r24, 0x80	; 128
    d680:	98 e0       	ldi	r25, 0x08	; 8
    d682:	20 ec       	ldi	r18, 0xC0	; 192
    d684:	fc 01       	movw	r30, r24
    d686:	26 83       	std	Z+6, r18	; 0x06
    d688:	80 e0       	ldi	r24, 0x00	; 0
    d68a:	24 96       	adiw	r28, 0x04	; 4
    d68c:	cd bf       	out	0x3d, r28	; 61
    d68e:	de bf       	out	0x3e, r29	; 62
    d690:	df 91       	pop	r29
    d692:	cf 91       	pop	r28
    d694:	1f 91       	pop	r17
    d696:	0f 91       	pop	r16
    d698:	08 95       	ret

0000d69a <USART4_enable_tx>:
 * 2. Enables the USART module by setting the TX enable-bit in the USART control register
 *
 * \return Nothing
 */
void USART4_enable_tx()
{
    d69a:	cf 93       	push	r28
    d69c:	df 93       	push	r29
    d69e:	cd b7       	in	r28, 0x3d	; 61
    d6a0:	de b7       	in	r29, 0x3e	; 62
	USART4.CTRLB |= USART_TXEN_bm;
    d6a2:	80 e8       	ldi	r24, 0x80	; 128
    d6a4:	98 e0       	ldi	r25, 0x08	; 8
    d6a6:	20 e8       	ldi	r18, 0x80	; 128
    d6a8:	38 e0       	ldi	r19, 0x08	; 8
    d6aa:	f9 01       	movw	r30, r18
    d6ac:	26 81       	ldd	r18, Z+6	; 0x06
    d6ae:	20 64       	ori	r18, 0x40	; 64
    d6b0:	fc 01       	movw	r30, r24
    d6b2:	26 83       	std	Z+6, r18	; 0x06
	USART4.CTRLA |= 1 << USART_DREIE_bp; /* Transmit Data Ready Interrupt Enable: enable */
    d6b4:	80 e8       	ldi	r24, 0x80	; 128
    d6b6:	98 e0       	ldi	r25, 0x08	; 8
    d6b8:	20 e8       	ldi	r18, 0x80	; 128
    d6ba:	38 e0       	ldi	r19, 0x08	; 8
    d6bc:	f9 01       	movw	r30, r18
    d6be:	25 81       	ldd	r18, Z+5	; 0x05
    d6c0:	20 62       	ori	r18, 0x20	; 32
    d6c2:	fc 01       	movw	r30, r24
    d6c4:	25 83       	std	Z+5, r18	; 0x05
//	USART4.STATUS |= 1 << USART_TXEN_bp; /* Clear any existing flag setting */
}
    d6c6:	00 00       	nop
    d6c8:	df 91       	pop	r29
    d6ca:	cf 91       	pop	r28
    d6cc:	08 95       	ret

0000d6ce <USART4_disable>:
 * 2. If supported by the clock system, disables the clock to the USART
 *
 * \return Nothing
 */
void USART4_disable()
{
    d6ce:	cf 93       	push	r28
    d6d0:	df 93       	push	r29
    d6d2:	cd b7       	in	r28, 0x3d	; 61
    d6d4:	de b7       	in	r29, 0x3e	; 62
	USART4.CTRLB &= ~(USART_RXEN_bm | USART_TXEN_bm);
    d6d6:	80 e8       	ldi	r24, 0x80	; 128
    d6d8:	98 e0       	ldi	r25, 0x08	; 8
    d6da:	20 e8       	ldi	r18, 0x80	; 128
    d6dc:	38 e0       	ldi	r19, 0x08	; 8
    d6de:	f9 01       	movw	r30, r18
    d6e0:	26 81       	ldd	r18, Z+6	; 0x06
    d6e2:	2f 73       	andi	r18, 0x3F	; 63
    d6e4:	fc 01       	movw	r30, r24
    d6e6:	26 83       	std	Z+6, r18	; 0x06
}
    d6e8:	00 00       	nop
    d6ea:	df 91       	pop	r29
    d6ec:	cf 91       	pop	r28
    d6ee:	08 95       	ret

0000d6f0 <USART4_get_data>:
 * \brief Get recieved data from USART4
 *
 * \return Data register from USART4 module
 */
uint8_t USART4_get_data()
{
    d6f0:	cf 93       	push	r28
    d6f2:	df 93       	push	r29
    d6f4:	cd b7       	in	r28, 0x3d	; 61
    d6f6:	de b7       	in	r29, 0x3e	; 62
	return USART4.RXDATAL;
    d6f8:	80 e8       	ldi	r24, 0x80	; 128
    d6fa:	98 e0       	ldi	r25, 0x08	; 8
    d6fc:	fc 01       	movw	r30, r24
    d6fe:	80 81       	ld	r24, Z
}
    d700:	df 91       	pop	r29
    d702:	cf 91       	pop	r28
    d704:	08 95       	ret

0000d706 <_Z7timeDifmm>:
    (ltm.tm_year-70)*31536000L + ((ltm.tm_year-69)/4)*86400L -
    ((ltm.tm_year-1)/100)*86400L + ((ltm.tm_year+299)/400)*86400L;
  }

  return result;
}
    d706:	ef 92       	push	r14
    d708:	ff 92       	push	r15
    d70a:	0f 93       	push	r16
    d70c:	1f 93       	push	r17
    d70e:	cf 93       	push	r28
    d710:	df 93       	push	r29
    d712:	cd b7       	in	r28, 0x3d	; 61
    d714:	de b7       	in	r29, 0x3e	; 62
    d716:	2c 97       	sbiw	r28, 0x0c	; 12
    d718:	cd bf       	out	0x3d, r28	; 61
    d71a:	de bf       	out	0x3e, r29	; 62
    d71c:	6d 83       	std	Y+5, r22	; 0x05
    d71e:	7e 83       	std	Y+6, r23	; 0x06
    d720:	8f 83       	std	Y+7, r24	; 0x07
    d722:	98 87       	std	Y+8, r25	; 0x08
    d724:	29 87       	std	Y+9, r18	; 0x09
    d726:	3a 87       	std	Y+10, r19	; 0x0a
    d728:	4b 87       	std	Y+11, r20	; 0x0b
    d72a:	5c 87       	std	Y+12, r21	; 0x0c
    d72c:	2d 81       	ldd	r18, Y+5	; 0x05
    d72e:	3e 81       	ldd	r19, Y+6	; 0x06
    d730:	4f 81       	ldd	r20, Y+7	; 0x07
    d732:	58 85       	ldd	r21, Y+8	; 0x08
    d734:	89 85       	ldd	r24, Y+9	; 0x09
    d736:	9a 85       	ldd	r25, Y+10	; 0x0a
    d738:	ab 85       	ldd	r26, Y+11	; 0x0b
    d73a:	bc 85       	ldd	r27, Y+12	; 0x0c
    d73c:	82 17       	cp	r24, r18
    d73e:	93 07       	cpc	r25, r19
    d740:	a4 07       	cpc	r26, r20
    d742:	b5 07       	cpc	r27, r21
    d744:	a8 f4       	brcc	.+42     	; 0xd770 <_Z7timeDifmm+0x6a>
    d746:	2d 81       	ldd	r18, Y+5	; 0x05
    d748:	3e 81       	ldd	r19, Y+6	; 0x06
    d74a:	4f 81       	ldd	r20, Y+7	; 0x07
    d74c:	58 85       	ldd	r21, Y+8	; 0x08
    d74e:	89 85       	ldd	r24, Y+9	; 0x09
    d750:	9a 85       	ldd	r25, Y+10	; 0x0a
    d752:	ab 85       	ldd	r26, Y+11	; 0x0b
    d754:	bc 85       	ldd	r27, Y+12	; 0x0c
    d756:	79 01       	movw	r14, r18
    d758:	8a 01       	movw	r16, r20
    d75a:	e8 1a       	sub	r14, r24
    d75c:	f9 0a       	sbc	r15, r25
    d75e:	0a 0b       	sbc	r16, r26
    d760:	1b 0b       	sbc	r17, r27
    d762:	d8 01       	movw	r26, r16
    d764:	c7 01       	movw	r24, r14
    d766:	89 83       	std	Y+1, r24	; 0x01
    d768:	9a 83       	std	Y+2, r25	; 0x02
    d76a:	ab 83       	std	Y+3, r26	; 0x03
    d76c:	bc 83       	std	Y+4, r27	; 0x04
    d76e:	14 c0       	rjmp	.+40     	; 0xd798 <_Z7timeDifmm+0x92>
    d770:	2d 81       	ldd	r18, Y+5	; 0x05
    d772:	3e 81       	ldd	r19, Y+6	; 0x06
    d774:	4f 81       	ldd	r20, Y+7	; 0x07
    d776:	58 85       	ldd	r21, Y+8	; 0x08
    d778:	89 85       	ldd	r24, Y+9	; 0x09
    d77a:	9a 85       	ldd	r25, Y+10	; 0x0a
    d77c:	ab 85       	ldd	r26, Y+11	; 0x0b
    d77e:	bc 85       	ldd	r27, Y+12	; 0x0c
    d780:	79 01       	movw	r14, r18
    d782:	8a 01       	movw	r16, r20
    d784:	e8 1a       	sub	r14, r24
    d786:	f9 0a       	sbc	r15, r25
    d788:	0a 0b       	sbc	r16, r26
    d78a:	1b 0b       	sbc	r17, r27
    d78c:	d8 01       	movw	r26, r16
    d78e:	c7 01       	movw	r24, r14
    d790:	89 83       	std	Y+1, r24	; 0x01
    d792:	9a 83       	std	Y+2, r25	; 0x02
    d794:	ab 83       	std	Y+3, r26	; 0x03
    d796:	bc 83       	std	Y+4, r27	; 0x04
    d798:	89 81       	ldd	r24, Y+1	; 0x01
    d79a:	9a 81       	ldd	r25, Y+2	; 0x02
    d79c:	ab 81       	ldd	r26, Y+3	; 0x03
    d79e:	bc 81       	ldd	r27, Y+4	; 0x04
    d7a0:	bc 01       	movw	r22, r24
    d7a2:	cd 01       	movw	r24, r26
    d7a4:	2c 96       	adiw	r28, 0x0c	; 12
    d7a6:	cd bf       	out	0x3d, r28	; 61
    d7a8:	de bf       	out	0x3e, r29	; 62
    d7aa:	df 91       	pop	r29
    d7ac:	cf 91       	pop	r28
    d7ae:	1f 91       	pop	r17
    d7b0:	0f 91       	pop	r16
    d7b2:	ff 90       	pop	r15
    d7b4:	ef 90       	pop	r14
    d7b6:	08 95       	ret

0000d7b8 <_Z11only_digitsPc>:

/** 
 * Checks a string to see if it contains only numerical characters
 */
bool only_digits(char *s)
{
    d7b8:	cf 93       	push	r28
    d7ba:	df 93       	push	r29
    d7bc:	00 d0       	rcall	.+0      	; 0xd7be <_Z11only_digitsPc+0x6>
    d7be:	cd b7       	in	r28, 0x3d	; 61
    d7c0:	de b7       	in	r29, 0x3e	; 62
    d7c2:	89 83       	std	Y+1, r24	; 0x01
    d7c4:	9a 83       	std	Y+2, r25	; 0x02
	while(*s)
    d7c6:	89 81       	ldd	r24, Y+1	; 0x01
    d7c8:	9a 81       	ldd	r25, Y+2	; 0x02
    d7ca:	fc 01       	movw	r30, r24
    d7cc:	80 81       	ld	r24, Z
    d7ce:	88 23       	and	r24, r24
    d7d0:	a1 f0       	breq	.+40     	; 0xd7fa <_Z11only_digitsPc+0x42>
	{
		if(isdigit(*s++) == 0)
    d7d2:	89 81       	ldd	r24, Y+1	; 0x01
    d7d4:	9a 81       	ldd	r25, Y+2	; 0x02
    d7d6:	9c 01       	movw	r18, r24
    d7d8:	2f 5f       	subi	r18, 0xFF	; 255
    d7da:	3f 4f       	sbci	r19, 0xFF	; 255
    d7dc:	29 83       	std	Y+1, r18	; 0x01
    d7de:	3a 83       	std	Y+2, r19	; 0x02
    d7e0:	fc 01       	movw	r30, r24
    d7e2:	80 81       	ld	r24, Z
    d7e4:	88 2f       	mov	r24, r24
    d7e6:	90 e0       	ldi	r25, 0x00	; 0
    d7e8:	c0 97       	sbiw	r24, 0x30	; 48
    d7ea:	21 e0       	ldi	r18, 0x01	; 1
    d7ec:	0a 97       	sbiw	r24, 0x0a	; 10
    d7ee:	08 f4       	brcc	.+2      	; 0xd7f2 <_Z11only_digitsPc+0x3a>
    d7f0:	20 e0       	ldi	r18, 0x00	; 0
    d7f2:	22 23       	and	r18, r18
    d7f4:	41 f3       	breq	.-48     	; 0xd7c6 <_Z11only_digitsPc+0xe>
		{
			return( false);
    d7f6:	80 e0       	ldi	r24, 0x00	; 0
    d7f8:	01 c0       	rjmp	.+2      	; 0xd7fc <_Z11only_digitsPc+0x44>
		}
	}

	return( true);
    d7fa:	81 e0       	ldi	r24, 0x01	; 1
}
    d7fc:	0f 90       	pop	r0
    d7fe:	0f 90       	pop	r0
    d800:	df 91       	pop	r29
    d802:	cf 91       	pop	r28
    d804:	08 95       	ret

0000d806 <_Z15frequencyStringPcm>:
 * result = pointer to a character sting to hold the frequency string
 * freq = the frequency value to be represented as a string
 * Returns 1 if an error is detected
 */
bool frequencyString(char* result, uint32_t freq)
{
    d806:	cf 93       	push	r28
    d808:	df 93       	push	r29
    d80a:	cd b7       	in	r28, 0x3d	; 61
    d80c:	de b7       	in	r29, 0x3e	; 62
    d80e:	2b 97       	sbiw	r28, 0x0b	; 11
    d810:	cd bf       	out	0x3d, r28	; 61
    d812:	de bf       	out	0x3e, r29	; 62
    d814:	8e 83       	std	Y+6, r24	; 0x06
    d816:	9f 83       	std	Y+7, r25	; 0x07
    d818:	48 87       	std	Y+8, r20	; 0x08
    d81a:	59 87       	std	Y+9, r21	; 0x09
    d81c:	6a 87       	std	Y+10, r22	; 0x0a
    d81e:	7b 87       	std	Y+11, r23	; 0x0b
	bool failure = true;
    d820:	81 e0       	ldi	r24, 0x01	; 1
    d822:	89 83       	std	Y+1, r24	; 0x01
	
	if(!result)
    d824:	8e 81       	ldd	r24, Y+6	; 0x06
    d826:	9f 81       	ldd	r25, Y+7	; 0x07
    d828:	89 2b       	or	r24, r25
    d82a:	11 f4       	brne	.+4      	; 0xd830 <_Z15frequencyStringPcm+0x2a>
	{
		return(failure);
    d82c:	89 81       	ldd	r24, Y+1	; 0x01
    d82e:	61 c0       	rjmp	.+194    	; 0xd8f2 <_Z15frequencyStringPcm+0xec>
	}
	
	if((freq > 3500000) && (freq < 4000000)) // Accept only a Hz value to be expressed in kHz
    d830:	88 85       	ldd	r24, Y+8	; 0x08
    d832:	99 85       	ldd	r25, Y+9	; 0x09
    d834:	aa 85       	ldd	r26, Y+10	; 0x0a
    d836:	bb 85       	ldd	r27, Y+11	; 0x0b
    d838:	81 3e       	cpi	r24, 0xE1	; 225
    d83a:	97 46       	sbci	r25, 0x67	; 103
    d83c:	a5 43       	sbci	r26, 0x35	; 53
    d83e:	b1 05       	cpc	r27, r1
    d840:	08 f4       	brcc	.+2      	; 0xd844 <_Z15frequencyStringPcm+0x3e>
    d842:	56 c0       	rjmp	.+172    	; 0xd8f0 <_Z15frequencyStringPcm+0xea>
    d844:	88 85       	ldd	r24, Y+8	; 0x08
    d846:	99 85       	ldd	r25, Y+9	; 0x09
    d848:	aa 85       	ldd	r26, Y+10	; 0x0a
    d84a:	bb 85       	ldd	r27, Y+11	; 0x0b
    d84c:	81 15       	cp	r24, r1
    d84e:	99 40       	sbci	r25, 0x09	; 9
    d850:	ad 43       	sbci	r26, 0x3D	; 61
    d852:	b1 05       	cpc	r27, r1
    d854:	08 f0       	brcs	.+2      	; 0xd858 <_Z15frequencyStringPcm+0x52>
    d856:	4c c0       	rjmp	.+152    	; 0xd8f0 <_Z15frequencyStringPcm+0xea>
	{
		uint32_t frac = (freq % 1000)/100;		
    d858:	88 85       	ldd	r24, Y+8	; 0x08
    d85a:	99 85       	ldd	r25, Y+9	; 0x09
    d85c:	aa 85       	ldd	r26, Y+10	; 0x0a
    d85e:	bb 85       	ldd	r27, Y+11	; 0x0b
    d860:	28 ee       	ldi	r18, 0xE8	; 232
    d862:	33 e0       	ldi	r19, 0x03	; 3
    d864:	40 e0       	ldi	r20, 0x00	; 0
    d866:	50 e0       	ldi	r21, 0x00	; 0
    d868:	bc 01       	movw	r22, r24
    d86a:	cd 01       	movw	r24, r26
    d86c:	0e 94 02 72 	call	0xe404	; 0xe404 <__udivmodsi4>
    d870:	dc 01       	movw	r26, r24
    d872:	cb 01       	movw	r24, r22
    d874:	24 e6       	ldi	r18, 0x64	; 100
    d876:	30 e0       	ldi	r19, 0x00	; 0
    d878:	40 e0       	ldi	r20, 0x00	; 0
    d87a:	50 e0       	ldi	r21, 0x00	; 0
    d87c:	bc 01       	movw	r22, r24
    d87e:	cd 01       	movw	r24, r26
    d880:	0e 94 02 72 	call	0xe404	; 0xe404 <__udivmodsi4>
    d884:	da 01       	movw	r26, r20
    d886:	c9 01       	movw	r24, r18
    d888:	8a 83       	std	Y+2, r24	; 0x02
    d88a:	9b 83       	std	Y+3, r25	; 0x03
    d88c:	ac 83       	std	Y+4, r26	; 0x04
    d88e:	bd 83       	std	Y+5, r27	; 0x05
		sprintf(result, "%lu.%1lu kHz", freq/1000, frac);
    d890:	88 85       	ldd	r24, Y+8	; 0x08
    d892:	99 85       	ldd	r25, Y+9	; 0x09
    d894:	aa 85       	ldd	r26, Y+10	; 0x0a
    d896:	bb 85       	ldd	r27, Y+11	; 0x0b
    d898:	28 ee       	ldi	r18, 0xE8	; 232
    d89a:	33 e0       	ldi	r19, 0x03	; 3
    d89c:	40 e0       	ldi	r20, 0x00	; 0
    d89e:	50 e0       	ldi	r21, 0x00	; 0
    d8a0:	bc 01       	movw	r22, r24
    d8a2:	cd 01       	movw	r24, r26
    d8a4:	0e 94 02 72 	call	0xe404	; 0xe404 <__udivmodsi4>
    d8a8:	da 01       	movw	r26, r20
    d8aa:	c9 01       	movw	r24, r18
    d8ac:	2d 81       	ldd	r18, Y+5	; 0x05
    d8ae:	2f 93       	push	r18
    d8b0:	2c 81       	ldd	r18, Y+4	; 0x04
    d8b2:	2f 93       	push	r18
    d8b4:	2b 81       	ldd	r18, Y+3	; 0x03
    d8b6:	2f 93       	push	r18
    d8b8:	2a 81       	ldd	r18, Y+2	; 0x02
    d8ba:	2f 93       	push	r18
    d8bc:	2b 2f       	mov	r18, r27
    d8be:	2f 93       	push	r18
    d8c0:	2a 2f       	mov	r18, r26
    d8c2:	2f 93       	push	r18
    d8c4:	29 2f       	mov	r18, r25
    d8c6:	2f 93       	push	r18
    d8c8:	8f 93       	push	r24
    d8ca:	85 e2       	ldi	r24, 0x25	; 37
    d8cc:	95 e4       	ldi	r25, 0x45	; 69
    d8ce:	89 2f       	mov	r24, r25
    d8d0:	8f 93       	push	r24
    d8d2:	85 e2       	ldi	r24, 0x25	; 37
    d8d4:	95 e4       	ldi	r25, 0x45	; 69
    d8d6:	8f 93       	push	r24
    d8d8:	8f 81       	ldd	r24, Y+7	; 0x07
    d8da:	8f 93       	push	r24
    d8dc:	8e 81       	ldd	r24, Y+6	; 0x06
    d8de:	8f 93       	push	r24
    d8e0:	0e 94 31 74 	call	0xe862	; 0xe862 <sprintf>
    d8e4:	8d b7       	in	r24, 0x3d	; 61
    d8e6:	9e b7       	in	r25, 0x3e	; 62
    d8e8:	0c 96       	adiw	r24, 0x0c	; 12
    d8ea:	cd bf       	out	0x3d, r28	; 61
    d8ec:	de bf       	out	0x3e, r29	; 62
		
		failure = false;
    d8ee:	19 82       	std	Y+1, r1	; 0x01
	}
	
	return(failure);	
    d8f0:	89 81       	ldd	r24, Y+1	; 0x01
}
    d8f2:	2b 96       	adiw	r28, 0x0b	; 11
    d8f4:	cd bf       	out	0x3d, r28	; 61
    d8f6:	de bf       	out	0x3e, r29	; 62
    d8f8:	df 91       	pop	r29
    d8fa:	cf 91       	pop	r28
    d8fc:	08 95       	ret

0000d8fe <_Z12frequencyValPcPm>:
 * str = pointer to a string containing the frequency string
 * result = pointer to a Frequency_Hz variable to hold the frequency in Hz
 * Returns 1 if an error is detected
 */
bool frequencyVal(char* str, Frequency_Hz* result)
{
    d8fe:	ef 92       	push	r14
    d900:	ff 92       	push	r15
    d902:	0f 93       	push	r16
    d904:	1f 93       	push	r17
    d906:	cf 93       	push	r28
    d908:	df 93       	push	r29
    d90a:	cd b7       	in	r28, 0x3d	; 61
    d90c:	de b7       	in	r29, 0x3e	; 62
    d90e:	65 97       	sbiw	r28, 0x15	; 21
    d910:	cd bf       	out	0x3d, r28	; 61
    d912:	de bf       	out	0x3e, r29	; 62
    d914:	8a 8b       	std	Y+18, r24	; 0x12
    d916:	9b 8b       	std	Y+19, r25	; 0x13
    d918:	6c 8b       	std	Y+20, r22	; 0x14
    d91a:	7d 8b       	std	Y+21, r23	; 0x15
	bool failure = true;
    d91c:	81 e0       	ldi	r24, 0x01	; 1
    d91e:	89 83       	std	Y+1, r24	; 0x01
	
	if(!str)
    d920:	8a 89       	ldd	r24, Y+18	; 0x12
    d922:	9b 89       	ldd	r25, Y+19	; 0x13
    d924:	89 2b       	or	r24, r25
    d926:	11 f4       	brne	.+4      	; 0xd92c <_Z12frequencyValPcPm+0x2e>
	{
		return(failure);
    d928:	89 81       	ldd	r24, Y+1	; 0x01
    d92a:	a4 c1       	rjmp	.+840    	; 0xdc74 <_Z12frequencyValPcPm+0x376>
	}
	
	int decimal = '.';
    d92c:	8e e2       	ldi	r24, 0x2E	; 46
    d92e:	90 e0       	ldi	r25, 0x00	; 0
    d930:	8a 87       	std	Y+10, r24	; 0x0a
    d932:	9b 87       	std	Y+11, r25	; 0x0b
	char* decimalLocation = strchr(str, decimal);
    d934:	2a 85       	ldd	r18, Y+10	; 0x0a
    d936:	3b 85       	ldd	r19, Y+11	; 0x0b
    d938:	8a 89       	ldd	r24, Y+18	; 0x12
    d93a:	9b 89       	ldd	r25, Y+19	; 0x13
    d93c:	b9 01       	movw	r22, r18
    d93e:	0e 94 ea 73 	call	0xe7d4	; 0xe7d4 <strchr>
    d942:	8c 87       	std	Y+12, r24	; 0x0c
    d944:	9d 87       	std	Y+13, r25	; 0x0d
	Frequency_Hz temp;
	
	if(decimalLocation) // Assume Hz or kHz
    d946:	8c 85       	ldd	r24, Y+12	; 0x0c
    d948:	9d 85       	ldd	r25, Y+13	; 0x0d
    d94a:	89 2b       	or	r24, r25
    d94c:	09 f4       	brne	.+2      	; 0xd950 <_Z12frequencyValPcPm+0x52>
    d94e:	d7 c0       	rjmp	.+430    	; 0xdafe <_Z12frequencyValPcPm+0x200>
	{
		float f = atof(str);
    d950:	8a 89       	ldd	r24, Y+18	; 0x12
    d952:	9b 89       	ldd	r25, Y+19	; 0x13
    d954:	0e 94 87 73 	call	0xe70e	; 0xe70e <atof>
    d958:	dc 01       	movw	r26, r24
    d95a:	cb 01       	movw	r24, r22
    d95c:	8a 83       	std	Y+2, r24	; 0x02
    d95e:	9b 83       	std	Y+3, r25	; 0x03
    d960:	ac 83       	std	Y+4, r26	; 0x04
    d962:	bd 83       	std	Y+5, r27	; 0x05
		
		if((f > 3.5) && (f < 4.0))
    d964:	20 e0       	ldi	r18, 0x00	; 0
    d966:	30 e0       	ldi	r19, 0x00	; 0
    d968:	40 e6       	ldi	r20, 0x60	; 96
    d96a:	50 e4       	ldi	r21, 0x40	; 64
    d96c:	6a 81       	ldd	r22, Y+2	; 0x02
    d96e:	7b 81       	ldd	r23, Y+3	; 0x03
    d970:	8c 81       	ldd	r24, Y+4	; 0x04
    d972:	9d 81       	ldd	r25, Y+5	; 0x05
    d974:	0e 94 58 71 	call	0xe2b0	; 0xe2b0 <__gesf2>
    d978:	18 16       	cp	r1, r24
    d97a:	f4 f4       	brge	.+60     	; 0xd9b8 <_Z12frequencyValPcPm+0xba>
    d97c:	20 e0       	ldi	r18, 0x00	; 0
    d97e:	30 e0       	ldi	r19, 0x00	; 0
    d980:	40 e8       	ldi	r20, 0x80	; 128
    d982:	50 e4       	ldi	r21, 0x40	; 64
    d984:	6a 81       	ldd	r22, Y+2	; 0x02
    d986:	7b 81       	ldd	r23, Y+3	; 0x03
    d988:	8c 81       	ldd	r24, Y+4	; 0x04
    d98a:	9d 81       	ldd	r25, Y+5	; 0x05
    d98c:	0e 94 b8 6f 	call	0xdf70	; 0xdf70 <__cmpsf2>
    d990:	88 23       	and	r24, r24
    d992:	94 f4       	brge	.+36     	; 0xd9b8 <_Z12frequencyValPcPm+0xba>
		{
			f *= 1000000.;
    d994:	20 e0       	ldi	r18, 0x00	; 0
    d996:	34 e2       	ldi	r19, 0x24	; 36
    d998:	44 e7       	ldi	r20, 0x74	; 116
    d99a:	59 e4       	ldi	r21, 0x49	; 73
    d99c:	6a 81       	ldd	r22, Y+2	; 0x02
    d99e:	7b 81       	ldd	r23, Y+3	; 0x03
    d9a0:	8c 81       	ldd	r24, Y+4	; 0x04
    d9a2:	9d 81       	ldd	r25, Y+5	; 0x05
    d9a4:	0e 94 5d 71 	call	0xe2ba	; 0xe2ba <__mulsf3>
    d9a8:	dc 01       	movw	r26, r24
    d9aa:	cb 01       	movw	r24, r22
    d9ac:	8a 83       	std	Y+2, r24	; 0x02
    d9ae:	9b 83       	std	Y+3, r25	; 0x03
    d9b0:	ac 83       	std	Y+4, r26	; 0x04
    d9b2:	bd 83       	std	Y+5, r27	; 0x05
			failure = false;
    d9b4:	19 82       	std	Y+1, r1	; 0x01
    d9b6:	43 c0       	rjmp	.+134    	; 0xda3e <_Z12frequencyValPcPm+0x140>
		}
		else if((f > 3500.) && (f < 4000.))
    d9b8:	20 e0       	ldi	r18, 0x00	; 0
    d9ba:	30 ec       	ldi	r19, 0xC0	; 192
    d9bc:	4a e5       	ldi	r20, 0x5A	; 90
    d9be:	55 e4       	ldi	r21, 0x45	; 69
    d9c0:	6a 81       	ldd	r22, Y+2	; 0x02
    d9c2:	7b 81       	ldd	r23, Y+3	; 0x03
    d9c4:	8c 81       	ldd	r24, Y+4	; 0x04
    d9c6:	9d 81       	ldd	r25, Y+5	; 0x05
    d9c8:	0e 94 58 71 	call	0xe2b0	; 0xe2b0 <__gesf2>
    d9cc:	18 16       	cp	r1, r24
    d9ce:	f4 f4       	brge	.+60     	; 0xda0c <_Z12frequencyValPcPm+0x10e>
    d9d0:	20 e0       	ldi	r18, 0x00	; 0
    d9d2:	30 e0       	ldi	r19, 0x00	; 0
    d9d4:	4a e7       	ldi	r20, 0x7A	; 122
    d9d6:	55 e4       	ldi	r21, 0x45	; 69
    d9d8:	6a 81       	ldd	r22, Y+2	; 0x02
    d9da:	7b 81       	ldd	r23, Y+3	; 0x03
    d9dc:	8c 81       	ldd	r24, Y+4	; 0x04
    d9de:	9d 81       	ldd	r25, Y+5	; 0x05
    d9e0:	0e 94 b8 6f 	call	0xdf70	; 0xdf70 <__cmpsf2>
    d9e4:	88 23       	and	r24, r24
    d9e6:	94 f4       	brge	.+36     	; 0xda0c <_Z12frequencyValPcPm+0x10e>
		{
			f *= 1000.;
    d9e8:	20 e0       	ldi	r18, 0x00	; 0
    d9ea:	30 e0       	ldi	r19, 0x00	; 0
    d9ec:	4a e7       	ldi	r20, 0x7A	; 122
    d9ee:	54 e4       	ldi	r21, 0x44	; 68
    d9f0:	6a 81       	ldd	r22, Y+2	; 0x02
    d9f2:	7b 81       	ldd	r23, Y+3	; 0x03
    d9f4:	8c 81       	ldd	r24, Y+4	; 0x04
    d9f6:	9d 81       	ldd	r25, Y+5	; 0x05
    d9f8:	0e 94 5d 71 	call	0xe2ba	; 0xe2ba <__mulsf3>
    d9fc:	dc 01       	movw	r26, r24
    d9fe:	cb 01       	movw	r24, r22
    da00:	8a 83       	std	Y+2, r24	; 0x02
    da02:	9b 83       	std	Y+3, r25	; 0x03
    da04:	ac 83       	std	Y+4, r26	; 0x04
    da06:	bd 83       	std	Y+5, r27	; 0x05
			failure = false;
    da08:	19 82       	std	Y+1, r1	; 0x01
    da0a:	19 c0       	rjmp	.+50     	; 0xda3e <_Z12frequencyValPcPm+0x140>
		}
		else if((f > 3500000.) && (f < 4000000.))
    da0c:	20 e8       	ldi	r18, 0x80	; 128
    da0e:	3f e9       	ldi	r19, 0x9F	; 159
    da10:	45 e5       	ldi	r20, 0x55	; 85
    da12:	5a e4       	ldi	r21, 0x4A	; 74
    da14:	6a 81       	ldd	r22, Y+2	; 0x02
    da16:	7b 81       	ldd	r23, Y+3	; 0x03
    da18:	8c 81       	ldd	r24, Y+4	; 0x04
    da1a:	9d 81       	ldd	r25, Y+5	; 0x05
    da1c:	0e 94 58 71 	call	0xe2b0	; 0xe2b0 <__gesf2>
    da20:	18 16       	cp	r1, r24
    da22:	6c f4       	brge	.+26     	; 0xda3e <_Z12frequencyValPcPm+0x140>
    da24:	20 e0       	ldi	r18, 0x00	; 0
    da26:	34 e2       	ldi	r19, 0x24	; 36
    da28:	44 e7       	ldi	r20, 0x74	; 116
    da2a:	5a e4       	ldi	r21, 0x4A	; 74
    da2c:	6a 81       	ldd	r22, Y+2	; 0x02
    da2e:	7b 81       	ldd	r23, Y+3	; 0x03
    da30:	8c 81       	ldd	r24, Y+4	; 0x04
    da32:	9d 81       	ldd	r25, Y+5	; 0x05
    da34:	0e 94 b8 6f 	call	0xdf70	; 0xdf70 <__cmpsf2>
    da38:	88 23       	and	r24, r24
    da3a:	0c f4       	brge	.+2      	; 0xda3e <_Z12frequencyValPcPm+0x140>
		{
			failure = false;
    da3c:	19 82       	std	Y+1, r1	; 0x01
		}
		
		if(!failure)
    da3e:	99 81       	ldd	r25, Y+1	; 0x01
    da40:	81 e0       	ldi	r24, 0x01	; 1
    da42:	89 27       	eor	r24, r25
    da44:	88 23       	and	r24, r24
    da46:	09 f4       	brne	.+2      	; 0xda4a <_Z12frequencyValPcPm+0x14c>
    da48:	14 c1       	rjmp	.+552    	; 0xdc72 <_Z12frequencyValPcPm+0x374>
		{
			temp = (Frequency_Hz)ceilf(f);
    da4a:	8a 81       	ldd	r24, Y+2	; 0x02
    da4c:	9b 81       	ldd	r25, Y+3	; 0x03
    da4e:	ac 81       	ldd	r26, Y+4	; 0x04
    da50:	bd 81       	ldd	r27, Y+5	; 0x05
    da52:	bc 01       	movw	r22, r24
    da54:	cd 01       	movw	r24, r26
    da56:	0e 94 a1 6f 	call	0xdf42	; 0xdf42 <ceil>
    da5a:	dc 01       	movw	r26, r24
    da5c:	cb 01       	movw	r24, r22
    da5e:	bc 01       	movw	r22, r24
    da60:	cd 01       	movw	r24, r26
    da62:	0e 94 36 70 	call	0xe06c	; 0xe06c <__fixunssfsi>
    da66:	dc 01       	movw	r26, r24
    da68:	cb 01       	movw	r24, r22
    da6a:	8e 87       	std	Y+14, r24	; 0x0e
    da6c:	9f 87       	std	Y+15, r25	; 0x0f
    da6e:	a8 8b       	std	Y+16, r26	; 0x10
    da70:	b9 8b       	std	Y+17, r27	; 0x11
			temp = temp - (temp % 100);
    da72:	8e 85       	ldd	r24, Y+14	; 0x0e
    da74:	9f 85       	ldd	r25, Y+15	; 0x0f
    da76:	a8 89       	ldd	r26, Y+16	; 0x10
    da78:	b9 89       	ldd	r27, Y+17	; 0x11
    da7a:	24 e6       	ldi	r18, 0x64	; 100
    da7c:	30 e0       	ldi	r19, 0x00	; 0
    da7e:	40 e0       	ldi	r20, 0x00	; 0
    da80:	50 e0       	ldi	r21, 0x00	; 0
    da82:	bc 01       	movw	r22, r24
    da84:	cd 01       	movw	r24, r26
    da86:	0e 94 02 72 	call	0xe404	; 0xe404 <__udivmodsi4>
    da8a:	dc 01       	movw	r26, r24
    da8c:	cb 01       	movw	r24, r22
    da8e:	9c 01       	movw	r18, r24
    da90:	ad 01       	movw	r20, r26
    da92:	8e 85       	ldd	r24, Y+14	; 0x0e
    da94:	9f 85       	ldd	r25, Y+15	; 0x0f
    da96:	a8 89       	ldd	r26, Y+16	; 0x10
    da98:	b9 89       	ldd	r27, Y+17	; 0x11
    da9a:	82 1b       	sub	r24, r18
    da9c:	93 0b       	sbc	r25, r19
    da9e:	a4 0b       	sbc	r26, r20
    daa0:	b5 0b       	sbc	r27, r21
    daa2:	8e 87       	std	Y+14, r24	; 0x0e
    daa4:	9f 87       	std	Y+15, r25	; 0x0f
    daa6:	a8 8b       	std	Y+16, r26	; 0x10
    daa8:	b9 8b       	std	Y+17, r27	; 0x11
			if(result) *result = temp;
    daaa:	8c 89       	ldd	r24, Y+20	; 0x14
    daac:	9d 89       	ldd	r25, Y+21	; 0x15
    daae:	89 2b       	or	r24, r25
    dab0:	59 f0       	breq	.+22     	; 0xdac8 <_Z12frequencyValPcPm+0x1ca>
    dab2:	2c 89       	ldd	r18, Y+20	; 0x14
    dab4:	3d 89       	ldd	r19, Y+21	; 0x15
    dab6:	8e 85       	ldd	r24, Y+14	; 0x0e
    dab8:	9f 85       	ldd	r25, Y+15	; 0x0f
    daba:	a8 89       	ldd	r26, Y+16	; 0x10
    dabc:	b9 89       	ldd	r27, Y+17	; 0x11
    dabe:	f9 01       	movw	r30, r18
    dac0:	80 83       	st	Z, r24
    dac2:	91 83       	std	Z+1, r25	; 0x01
    dac4:	a2 83       	std	Z+2, r26	; 0x02
    dac6:	b3 83       	std	Z+3, r27	; 0x03
			sprintf(str, "%4.1f kHz", (double)f);
    dac8:	8d 81       	ldd	r24, Y+5	; 0x05
    daca:	8f 93       	push	r24
    dacc:	8c 81       	ldd	r24, Y+4	; 0x04
    dace:	8f 93       	push	r24
    dad0:	8b 81       	ldd	r24, Y+3	; 0x03
    dad2:	8f 93       	push	r24
    dad4:	8a 81       	ldd	r24, Y+2	; 0x02
    dad6:	8f 93       	push	r24
    dad8:	82 e3       	ldi	r24, 0x32	; 50
    dada:	95 e4       	ldi	r25, 0x45	; 69
    dadc:	89 2f       	mov	r24, r25
    dade:	8f 93       	push	r24
    dae0:	82 e3       	ldi	r24, 0x32	; 50
    dae2:	95 e4       	ldi	r25, 0x45	; 69
    dae4:	8f 93       	push	r24
    dae6:	8b 89       	ldd	r24, Y+19	; 0x13
    dae8:	8f 93       	push	r24
    daea:	8a 89       	ldd	r24, Y+18	; 0x12
    daec:	8f 93       	push	r24
    daee:	0e 94 31 74 	call	0xe862	; 0xe862 <sprintf>
    daf2:	8d b7       	in	r24, 0x3d	; 61
    daf4:	9e b7       	in	r25, 0x3e	; 62
    daf6:	08 96       	adiw	r24, 0x08	; 8
    daf8:	cd bf       	out	0x3d, r28	; 61
    dafa:	de bf       	out	0x3e, r29	; 62
    dafc:	ba c0       	rjmp	.+372    	; 0xdc72 <_Z12frequencyValPcPm+0x374>
		}
	}
	else
	{
		Frequency_Hz f = (Frequency_Hz)atol(str);
    dafe:	8a 89       	ldd	r24, Y+18	; 0x12
    db00:	9b 89       	ldd	r25, Y+19	; 0x13
    db02:	0e 94 a9 73 	call	0xe752	; 0xe752 <atol>
    db06:	dc 01       	movw	r26, r24
    db08:	cb 01       	movw	r24, r22
    db0a:	8e 83       	std	Y+6, r24	; 0x06
    db0c:	9f 83       	std	Y+7, r25	; 0x07
    db0e:	a8 87       	std	Y+8, r26	; 0x08
    db10:	b9 87       	std	Y+9, r27	; 0x09
		
		if((f > 3500) && (f < 4000))
    db12:	8e 81       	ldd	r24, Y+6	; 0x06
    db14:	9f 81       	ldd	r25, Y+7	; 0x07
    db16:	a8 85       	ldd	r26, Y+8	; 0x08
    db18:	b9 85       	ldd	r27, Y+9	; 0x09
    db1a:	8d 3a       	cpi	r24, 0xAD	; 173
    db1c:	9d 40       	sbci	r25, 0x0D	; 13
    db1e:	a1 05       	cpc	r26, r1
    db20:	b1 05       	cpc	r27, r1
    db22:	d0 f0       	brcs	.+52     	; 0xdb58 <_Z12frequencyValPcPm+0x25a>
    db24:	8e 81       	ldd	r24, Y+6	; 0x06
    db26:	9f 81       	ldd	r25, Y+7	; 0x07
    db28:	a8 85       	ldd	r26, Y+8	; 0x08
    db2a:	b9 85       	ldd	r27, Y+9	; 0x09
    db2c:	80 3a       	cpi	r24, 0xA0	; 160
    db2e:	9f 40       	sbci	r25, 0x0F	; 15
    db30:	a1 05       	cpc	r26, r1
    db32:	b1 05       	cpc	r27, r1
    db34:	88 f4       	brcc	.+34     	; 0xdb58 <_Z12frequencyValPcPm+0x25a>
		{
			f *= 1000;
    db36:	2e 81       	ldd	r18, Y+6	; 0x06
    db38:	3f 81       	ldd	r19, Y+7	; 0x07
    db3a:	48 85       	ldd	r20, Y+8	; 0x08
    db3c:	59 85       	ldd	r21, Y+9	; 0x09
    db3e:	88 ee       	ldi	r24, 0xE8	; 232
    db40:	93 e0       	ldi	r25, 0x03	; 3
    db42:	dc 01       	movw	r26, r24
    db44:	0e 94 5b 72 	call	0xe4b6	; 0xe4b6 <__muluhisi3>
    db48:	dc 01       	movw	r26, r24
    db4a:	cb 01       	movw	r24, r22
    db4c:	8e 83       	std	Y+6, r24	; 0x06
    db4e:	9f 83       	std	Y+7, r25	; 0x07
    db50:	a8 87       	std	Y+8, r26	; 0x08
    db52:	b9 87       	std	Y+9, r27	; 0x09
			failure = false;
    db54:	19 82       	std	Y+1, r1	; 0x01
    db56:	2f c0       	rjmp	.+94     	; 0xdbb6 <_Z12frequencyValPcPm+0x2b8>
		}
		else if((f > 3500000) && (f < 4000000))
    db58:	8e 81       	ldd	r24, Y+6	; 0x06
    db5a:	9f 81       	ldd	r25, Y+7	; 0x07
    db5c:	a8 85       	ldd	r26, Y+8	; 0x08
    db5e:	b9 85       	ldd	r27, Y+9	; 0x09
    db60:	81 3e       	cpi	r24, 0xE1	; 225
    db62:	97 46       	sbci	r25, 0x67	; 103
    db64:	a5 43       	sbci	r26, 0x35	; 53
    db66:	b1 05       	cpc	r27, r1
    db68:	30 f1       	brcs	.+76     	; 0xdbb6 <_Z12frequencyValPcPm+0x2b8>
    db6a:	8e 81       	ldd	r24, Y+6	; 0x06
    db6c:	9f 81       	ldd	r25, Y+7	; 0x07
    db6e:	a8 85       	ldd	r26, Y+8	; 0x08
    db70:	b9 85       	ldd	r27, Y+9	; 0x09
    db72:	81 15       	cp	r24, r1
    db74:	99 40       	sbci	r25, 0x09	; 9
    db76:	ad 43       	sbci	r26, 0x3D	; 61
    db78:	b1 05       	cpc	r27, r1
    db7a:	e8 f4       	brcc	.+58     	; 0xdbb6 <_Z12frequencyValPcPm+0x2b8>
		{
			f = f - (f % 100);
    db7c:	8e 81       	ldd	r24, Y+6	; 0x06
    db7e:	9f 81       	ldd	r25, Y+7	; 0x07
    db80:	a8 85       	ldd	r26, Y+8	; 0x08
    db82:	b9 85       	ldd	r27, Y+9	; 0x09
    db84:	24 e6       	ldi	r18, 0x64	; 100
    db86:	30 e0       	ldi	r19, 0x00	; 0
    db88:	40 e0       	ldi	r20, 0x00	; 0
    db8a:	50 e0       	ldi	r21, 0x00	; 0
    db8c:	bc 01       	movw	r22, r24
    db8e:	cd 01       	movw	r24, r26
    db90:	0e 94 02 72 	call	0xe404	; 0xe404 <__udivmodsi4>
    db94:	dc 01       	movw	r26, r24
    db96:	cb 01       	movw	r24, r22
    db98:	9c 01       	movw	r18, r24
    db9a:	ad 01       	movw	r20, r26
    db9c:	8e 81       	ldd	r24, Y+6	; 0x06
    db9e:	9f 81       	ldd	r25, Y+7	; 0x07
    dba0:	a8 85       	ldd	r26, Y+8	; 0x08
    dba2:	b9 85       	ldd	r27, Y+9	; 0x09
    dba4:	82 1b       	sub	r24, r18
    dba6:	93 0b       	sbc	r25, r19
    dba8:	a4 0b       	sbc	r26, r20
    dbaa:	b5 0b       	sbc	r27, r21
    dbac:	8e 83       	std	Y+6, r24	; 0x06
    dbae:	9f 83       	std	Y+7, r25	; 0x07
    dbb0:	a8 87       	std	Y+8, r26	; 0x08
    dbb2:	b9 87       	std	Y+9, r27	; 0x09
			failure = false;
    dbb4:	19 82       	std	Y+1, r1	; 0x01
		}
		
		if(!failure)
    dbb6:	99 81       	ldd	r25, Y+1	; 0x01
    dbb8:	81 e0       	ldi	r24, 0x01	; 1
    dbba:	89 27       	eor	r24, r25
    dbbc:	88 23       	and	r24, r24
    dbbe:	09 f4       	brne	.+2      	; 0xdbc2 <_Z12frequencyValPcPm+0x2c4>
    dbc0:	58 c0       	rjmp	.+176    	; 0xdc72 <_Z12frequencyValPcPm+0x374>
		{
			if(result) *result = f;
    dbc2:	8c 89       	ldd	r24, Y+20	; 0x14
    dbc4:	9d 89       	ldd	r25, Y+21	; 0x15
    dbc6:	89 2b       	or	r24, r25
    dbc8:	59 f0       	breq	.+22     	; 0xdbe0 <_Z12frequencyValPcPm+0x2e2>
    dbca:	2c 89       	ldd	r18, Y+20	; 0x14
    dbcc:	3d 89       	ldd	r19, Y+21	; 0x15
    dbce:	8e 81       	ldd	r24, Y+6	; 0x06
    dbd0:	9f 81       	ldd	r25, Y+7	; 0x07
    dbd2:	a8 85       	ldd	r26, Y+8	; 0x08
    dbd4:	b9 85       	ldd	r27, Y+9	; 0x09
    dbd6:	f9 01       	movw	r30, r18
    dbd8:	80 83       	st	Z, r24
    dbda:	91 83       	std	Z+1, r25	; 0x01
    dbdc:	a2 83       	std	Z+2, r26	; 0x02
    dbde:	b3 83       	std	Z+3, r27	; 0x03
			sprintf(str, "%lu.%1lu kHz", f/1000, (f % 1000)/100);
    dbe0:	8e 81       	ldd	r24, Y+6	; 0x06
    dbe2:	9f 81       	ldd	r25, Y+7	; 0x07
    dbe4:	a8 85       	ldd	r26, Y+8	; 0x08
    dbe6:	b9 85       	ldd	r27, Y+9	; 0x09
    dbe8:	28 ee       	ldi	r18, 0xE8	; 232
    dbea:	33 e0       	ldi	r19, 0x03	; 3
    dbec:	40 e0       	ldi	r20, 0x00	; 0
    dbee:	50 e0       	ldi	r21, 0x00	; 0
    dbf0:	bc 01       	movw	r22, r24
    dbf2:	cd 01       	movw	r24, r26
    dbf4:	0e 94 02 72 	call	0xe404	; 0xe404 <__udivmodsi4>
    dbf8:	dc 01       	movw	r26, r24
    dbfa:	cb 01       	movw	r24, r22
    dbfc:	24 e6       	ldi	r18, 0x64	; 100
    dbfe:	30 e0       	ldi	r19, 0x00	; 0
    dc00:	40 e0       	ldi	r20, 0x00	; 0
    dc02:	50 e0       	ldi	r21, 0x00	; 0
    dc04:	bc 01       	movw	r22, r24
    dc06:	cd 01       	movw	r24, r26
    dc08:	0e 94 02 72 	call	0xe404	; 0xe404 <__udivmodsi4>
    dc0c:	da 01       	movw	r26, r20
    dc0e:	c9 01       	movw	r24, r18
    dc10:	7c 01       	movw	r14, r24
    dc12:	8d 01       	movw	r16, r26
    dc14:	8e 81       	ldd	r24, Y+6	; 0x06
    dc16:	9f 81       	ldd	r25, Y+7	; 0x07
    dc18:	a8 85       	ldd	r26, Y+8	; 0x08
    dc1a:	b9 85       	ldd	r27, Y+9	; 0x09
    dc1c:	28 ee       	ldi	r18, 0xE8	; 232
    dc1e:	33 e0       	ldi	r19, 0x03	; 3
    dc20:	40 e0       	ldi	r20, 0x00	; 0
    dc22:	50 e0       	ldi	r21, 0x00	; 0
    dc24:	bc 01       	movw	r22, r24
    dc26:	cd 01       	movw	r24, r26
    dc28:	0e 94 02 72 	call	0xe404	; 0xe404 <__udivmodsi4>
    dc2c:	da 01       	movw	r26, r20
    dc2e:	c9 01       	movw	r24, r18
    dc30:	21 2f       	mov	r18, r17
    dc32:	2f 93       	push	r18
    dc34:	20 2f       	mov	r18, r16
    dc36:	2f 93       	push	r18
    dc38:	2f 2d       	mov	r18, r15
    dc3a:	2f 93       	push	r18
    dc3c:	2e 2d       	mov	r18, r14
    dc3e:	2f 93       	push	r18
    dc40:	2b 2f       	mov	r18, r27
    dc42:	2f 93       	push	r18
    dc44:	2a 2f       	mov	r18, r26
    dc46:	2f 93       	push	r18
    dc48:	29 2f       	mov	r18, r25
    dc4a:	2f 93       	push	r18
    dc4c:	8f 93       	push	r24
    dc4e:	85 e2       	ldi	r24, 0x25	; 37
    dc50:	95 e4       	ldi	r25, 0x45	; 69
    dc52:	89 2f       	mov	r24, r25
    dc54:	8f 93       	push	r24
    dc56:	85 e2       	ldi	r24, 0x25	; 37
    dc58:	95 e4       	ldi	r25, 0x45	; 69
    dc5a:	8f 93       	push	r24
    dc5c:	8b 89       	ldd	r24, Y+19	; 0x13
    dc5e:	8f 93       	push	r24
    dc60:	8a 89       	ldd	r24, Y+18	; 0x12
    dc62:	8f 93       	push	r24
    dc64:	0e 94 31 74 	call	0xe862	; 0xe862 <sprintf>
    dc68:	8d b7       	in	r24, 0x3d	; 61
    dc6a:	9e b7       	in	r25, 0x3e	; 62
    dc6c:	0c 96       	adiw	r24, 0x0c	; 12
    dc6e:	cd bf       	out	0x3d, r28	; 61
    dc70:	de bf       	out	0x3e, r29	; 62
		}
	}
	
	return(failure);	
    dc72:	89 81       	ldd	r24, Y+1	; 0x01
}
    dc74:	65 96       	adiw	r28, 0x15	; 21
    dc76:	cd bf       	out	0x3d, r28	; 61
    dc78:	de bf       	out	0x3e, r29	; 62
    dc7a:	df 91       	pop	r29
    dc7c:	cf 91       	pop	r28
    dc7e:	1f 91       	pop	r17
    dc80:	0f 91       	pop	r16
    dc82:	ff 90       	pop	r15
    dc84:	ef 90       	pop	r14
    dc86:	08 95       	ret

0000dc88 <_Z8fox2TextPc5Fox_t>:

bool fox2Text(char* str, Fox_t fox)
{
    dc88:	cf 93       	push	r28
    dc8a:	df 93       	push	r29
    dc8c:	00 d0       	rcall	.+0      	; 0xdc8e <_Z8fox2TextPc5Fox_t+0x6>
    dc8e:	00 d0       	rcall	.+0      	; 0xdc90 <_Z8fox2TextPc5Fox_t+0x8>
    dc90:	cd b7       	in	r28, 0x3d	; 61
    dc92:	de b7       	in	r29, 0x3e	; 62
    dc94:	8a 83       	std	Y+2, r24	; 0x02
    dc96:	9b 83       	std	Y+3, r25	; 0x03
    dc98:	6c 83       	std	Y+4, r22	; 0x04
	bool failure = false;
    dc9a:	19 82       	std	Y+1, r1	; 0x01
	
	switch(fox)
    dc9c:	8c 81       	ldd	r24, Y+4	; 0x04
    dc9e:	88 2f       	mov	r24, r24
    dca0:	90 e0       	ldi	r25, 0x00	; 0
    dca2:	09 2e       	mov	r0, r25
    dca4:	00 0c       	add	r0, r0
    dca6:	aa 0b       	sbc	r26, r26
    dca8:	bb 0b       	sbc	r27, r27
    dcaa:	40 e0       	ldi	r20, 0x00	; 0
    dcac:	50 e0       	ldi	r21, 0x00	; 0
    dcae:	21 e1       	ldi	r18, 0x11	; 17
    dcb0:	30 e0       	ldi	r19, 0x00	; 0
    dcb2:	84 1b       	sub	r24, r20
    dcb4:	95 0b       	sbc	r25, r21
    dcb6:	28 17       	cp	r18, r24
    dcb8:	39 07       	cpc	r19, r25
    dcba:	08 f4       	brcc	.+2      	; 0xdcbe <_Z8fox2TextPc5Fox_t+0x36>
    dcbc:	cb c0       	rjmp	.+406    	; 0xde54 <_Z8fox2TextPc5Fox_t+0x1cc>
    dcbe:	8a 5e       	subi	r24, 0xEA	; 234
    dcc0:	9e 4f       	sbci	r25, 0xFE	; 254
    dcc2:	fc 01       	movw	r30, r24
    dcc4:	0c 94 43 72 	jmp	0xe486	; 0xe486 <__tablejump2__>
	{
		case BEACON:
		{
			sprintf(str, "Finish \"MO\"");
    dcc8:	8a 81       	ldd	r24, Y+2	; 0x02
    dcca:	9b 81       	ldd	r25, Y+3	; 0x03
    dccc:	2c e0       	ldi	r18, 0x0C	; 12
    dcce:	ec e3       	ldi	r30, 0x3C	; 60
    dcd0:	f5 e4       	ldi	r31, 0x45	; 69
    dcd2:	dc 01       	movw	r26, r24
    dcd4:	01 90       	ld	r0, Z+
    dcd6:	0d 92       	st	X+, r0
    dcd8:	2a 95       	dec	r18
    dcda:	e1 f7       	brne	.-8      	; 0xdcd4 <_Z8fox2TextPc5Fox_t+0x4c>
		}
		break;
    dcdc:	be c0       	rjmp	.+380    	; 0xde5a <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case FOX_1:
		{
			sprintf(str, "Classic Fox 1 \"MOE\"");
    dcde:	8a 81       	ldd	r24, Y+2	; 0x02
    dce0:	9b 81       	ldd	r25, Y+3	; 0x03
    dce2:	24 e1       	ldi	r18, 0x14	; 20
    dce4:	e8 e4       	ldi	r30, 0x48	; 72
    dce6:	f5 e4       	ldi	r31, 0x45	; 69
    dce8:	dc 01       	movw	r26, r24
    dcea:	01 90       	ld	r0, Z+
    dcec:	0d 92       	st	X+, r0
    dcee:	2a 95       	dec	r18
    dcf0:	e1 f7       	brne	.-8      	; 0xdcea <_Z8fox2TextPc5Fox_t+0x62>
		}
		break;
    dcf2:	b3 c0       	rjmp	.+358    	; 0xde5a <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case FOX_2:
		{
			sprintf(str, "Classic Fox 2 \"MOI\"");
    dcf4:	8a 81       	ldd	r24, Y+2	; 0x02
    dcf6:	9b 81       	ldd	r25, Y+3	; 0x03
    dcf8:	24 e1       	ldi	r18, 0x14	; 20
    dcfa:	ec e5       	ldi	r30, 0x5C	; 92
    dcfc:	f5 e4       	ldi	r31, 0x45	; 69
    dcfe:	dc 01       	movw	r26, r24
    dd00:	01 90       	ld	r0, Z+
    dd02:	0d 92       	st	X+, r0
    dd04:	2a 95       	dec	r18
    dd06:	e1 f7       	brne	.-8      	; 0xdd00 <_Z8fox2TextPc5Fox_t+0x78>
		}
		break;
    dd08:	a8 c0       	rjmp	.+336    	; 0xde5a <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case FOX_3:
		{
			sprintf(str, "Classic Fox 3 \"MOS\"");
    dd0a:	8a 81       	ldd	r24, Y+2	; 0x02
    dd0c:	9b 81       	ldd	r25, Y+3	; 0x03
    dd0e:	24 e1       	ldi	r18, 0x14	; 20
    dd10:	e0 e7       	ldi	r30, 0x70	; 112
    dd12:	f5 e4       	ldi	r31, 0x45	; 69
    dd14:	dc 01       	movw	r26, r24
    dd16:	01 90       	ld	r0, Z+
    dd18:	0d 92       	st	X+, r0
    dd1a:	2a 95       	dec	r18
    dd1c:	e1 f7       	brne	.-8      	; 0xdd16 <_Z8fox2TextPc5Fox_t+0x8e>
		}
		break;
    dd1e:	9d c0       	rjmp	.+314    	; 0xde5a <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case FOX_4:
		{
			sprintf(str, "Classic Fox 4 \"MOH\"");
    dd20:	8a 81       	ldd	r24, Y+2	; 0x02
    dd22:	9b 81       	ldd	r25, Y+3	; 0x03
    dd24:	24 e1       	ldi	r18, 0x14	; 20
    dd26:	e4 e8       	ldi	r30, 0x84	; 132
    dd28:	f5 e4       	ldi	r31, 0x45	; 69
    dd2a:	dc 01       	movw	r26, r24
    dd2c:	01 90       	ld	r0, Z+
    dd2e:	0d 92       	st	X+, r0
    dd30:	2a 95       	dec	r18
    dd32:	e1 f7       	brne	.-8      	; 0xdd2c <_Z8fox2TextPc5Fox_t+0xa4>
		}
		break;
    dd34:	92 c0       	rjmp	.+292    	; 0xde5a <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case FOX_5:
		{
			sprintf(str, "Classic Fox 5 \"MO5\"");
    dd36:	8a 81       	ldd	r24, Y+2	; 0x02
    dd38:	9b 81       	ldd	r25, Y+3	; 0x03
    dd3a:	24 e1       	ldi	r18, 0x14	; 20
    dd3c:	e8 e9       	ldi	r30, 0x98	; 152
    dd3e:	f5 e4       	ldi	r31, 0x45	; 69
    dd40:	dc 01       	movw	r26, r24
    dd42:	01 90       	ld	r0, Z+
    dd44:	0d 92       	st	X+, r0
    dd46:	2a 95       	dec	r18
    dd48:	e1 f7       	brne	.-8      	; 0xdd42 <_Z8fox2TextPc5Fox_t+0xba>
		}
		break;
    dd4a:	87 c0       	rjmp	.+270    	; 0xde5a <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case FOXORING:
		{
			sprintf(str, "Foxoring");
    dd4c:	8a 81       	ldd	r24, Y+2	; 0x02
    dd4e:	9b 81       	ldd	r25, Y+3	; 0x03
    dd50:	29 e0       	ldi	r18, 0x09	; 9
    dd52:	ec ea       	ldi	r30, 0xAC	; 172
    dd54:	f5 e4       	ldi	r31, 0x45	; 69
    dd56:	dc 01       	movw	r26, r24
    dd58:	01 90       	ld	r0, Z+
    dd5a:	0d 92       	st	X+, r0
    dd5c:	2a 95       	dec	r18
    dd5e:	e1 f7       	brne	.-8      	; 0xdd58 <_Z8fox2TextPc5Fox_t+0xd0>
		}
		break;
    dd60:	7c c0       	rjmp	.+248    	; 0xde5a <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPECTATOR:
		{
			sprintf(str, "Spectator \"S\"");
    dd62:	8a 81       	ldd	r24, Y+2	; 0x02
    dd64:	9b 81       	ldd	r25, Y+3	; 0x03
    dd66:	2e e0       	ldi	r18, 0x0E	; 14
    dd68:	e5 eb       	ldi	r30, 0xB5	; 181
    dd6a:	f5 e4       	ldi	r31, 0x45	; 69
    dd6c:	dc 01       	movw	r26, r24
    dd6e:	01 90       	ld	r0, Z+
    dd70:	0d 92       	st	X+, r0
    dd72:	2a 95       	dec	r18
    dd74:	e1 f7       	brne	.-8      	; 0xdd6e <_Z8fox2TextPc5Fox_t+0xe6>
		}
		break;
    dd76:	71 c0       	rjmp	.+226    	; 0xde5a <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_S1:
		{
			sprintf(str, "Sprint Slow 1 \"ME\"");
    dd78:	8a 81       	ldd	r24, Y+2	; 0x02
    dd7a:	9b 81       	ldd	r25, Y+3	; 0x03
    dd7c:	23 e1       	ldi	r18, 0x13	; 19
    dd7e:	e3 ec       	ldi	r30, 0xC3	; 195
    dd80:	f5 e4       	ldi	r31, 0x45	; 69
    dd82:	dc 01       	movw	r26, r24
    dd84:	01 90       	ld	r0, Z+
    dd86:	0d 92       	st	X+, r0
    dd88:	2a 95       	dec	r18
    dd8a:	e1 f7       	brne	.-8      	; 0xdd84 <_Z8fox2TextPc5Fox_t+0xfc>
		}
		break;
    dd8c:	66 c0       	rjmp	.+204    	; 0xde5a <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_S2:
		{
			sprintf(str, "Sprint Slow 2 \"MI\"");
    dd8e:	8a 81       	ldd	r24, Y+2	; 0x02
    dd90:	9b 81       	ldd	r25, Y+3	; 0x03
    dd92:	23 e1       	ldi	r18, 0x13	; 19
    dd94:	e6 ed       	ldi	r30, 0xD6	; 214
    dd96:	f5 e4       	ldi	r31, 0x45	; 69
    dd98:	dc 01       	movw	r26, r24
    dd9a:	01 90       	ld	r0, Z+
    dd9c:	0d 92       	st	X+, r0
    dd9e:	2a 95       	dec	r18
    dda0:	e1 f7       	brne	.-8      	; 0xdd9a <_Z8fox2TextPc5Fox_t+0x112>
		}
		break;
    dda2:	5b c0       	rjmp	.+182    	; 0xde5a <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_S3:
		{
			sprintf(str, "Sprint Slow 3 \"MS\"");
    dda4:	8a 81       	ldd	r24, Y+2	; 0x02
    dda6:	9b 81       	ldd	r25, Y+3	; 0x03
    dda8:	23 e1       	ldi	r18, 0x13	; 19
    ddaa:	e9 ee       	ldi	r30, 0xE9	; 233
    ddac:	f5 e4       	ldi	r31, 0x45	; 69
    ddae:	dc 01       	movw	r26, r24
    ddb0:	01 90       	ld	r0, Z+
    ddb2:	0d 92       	st	X+, r0
    ddb4:	2a 95       	dec	r18
    ddb6:	e1 f7       	brne	.-8      	; 0xddb0 <_Z8fox2TextPc5Fox_t+0x128>
		}
		break;
    ddb8:	50 c0       	rjmp	.+160    	; 0xde5a <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_S4:
		{
			sprintf(str, "Sprint Slow 4 \"MH\"");
    ddba:	8a 81       	ldd	r24, Y+2	; 0x02
    ddbc:	9b 81       	ldd	r25, Y+3	; 0x03
    ddbe:	23 e1       	ldi	r18, 0x13	; 19
    ddc0:	ec ef       	ldi	r30, 0xFC	; 252
    ddc2:	f5 e4       	ldi	r31, 0x45	; 69
    ddc4:	dc 01       	movw	r26, r24
    ddc6:	01 90       	ld	r0, Z+
    ddc8:	0d 92       	st	X+, r0
    ddca:	2a 95       	dec	r18
    ddcc:	e1 f7       	brne	.-8      	; 0xddc6 <_Z8fox2TextPc5Fox_t+0x13e>
		}
		break;
    ddce:	45 c0       	rjmp	.+138    	; 0xde5a <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_S5:
		{
			sprintf(str, "Sprint Slow 5 \"M5\"");
    ddd0:	8a 81       	ldd	r24, Y+2	; 0x02
    ddd2:	9b 81       	ldd	r25, Y+3	; 0x03
    ddd4:	23 e1       	ldi	r18, 0x13	; 19
    ddd6:	ef e0       	ldi	r30, 0x0F	; 15
    ddd8:	f6 e4       	ldi	r31, 0x46	; 70
    ddda:	dc 01       	movw	r26, r24
    dddc:	01 90       	ld	r0, Z+
    ddde:	0d 92       	st	X+, r0
    dde0:	2a 95       	dec	r18
    dde2:	e1 f7       	brne	.-8      	; 0xdddc <_Z8fox2TextPc5Fox_t+0x154>
		}
		break;
    dde4:	3a c0       	rjmp	.+116    	; 0xde5a <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_F1:
		{
			sprintf(str, "Sprint Fast 1 \"OE\"");
    dde6:	8a 81       	ldd	r24, Y+2	; 0x02
    dde8:	9b 81       	ldd	r25, Y+3	; 0x03
    ddea:	23 e1       	ldi	r18, 0x13	; 19
    ddec:	e2 e2       	ldi	r30, 0x22	; 34
    ddee:	f6 e4       	ldi	r31, 0x46	; 70
    ddf0:	dc 01       	movw	r26, r24
    ddf2:	01 90       	ld	r0, Z+
    ddf4:	0d 92       	st	X+, r0
    ddf6:	2a 95       	dec	r18
    ddf8:	e1 f7       	brne	.-8      	; 0xddf2 <_Z8fox2TextPc5Fox_t+0x16a>
		}
		break;
    ddfa:	2f c0       	rjmp	.+94     	; 0xde5a <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_F2:
		{
			sprintf(str, "Sprint Fast 2 \"OI\"");
    ddfc:	8a 81       	ldd	r24, Y+2	; 0x02
    ddfe:	9b 81       	ldd	r25, Y+3	; 0x03
    de00:	23 e1       	ldi	r18, 0x13	; 19
    de02:	e5 e3       	ldi	r30, 0x35	; 53
    de04:	f6 e4       	ldi	r31, 0x46	; 70
    de06:	dc 01       	movw	r26, r24
    de08:	01 90       	ld	r0, Z+
    de0a:	0d 92       	st	X+, r0
    de0c:	2a 95       	dec	r18
    de0e:	e1 f7       	brne	.-8      	; 0xde08 <_Z8fox2TextPc5Fox_t+0x180>
		}
		break;
    de10:	24 c0       	rjmp	.+72     	; 0xde5a <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_F3:
		{
			sprintf(str, "Sprint Fast 3 \"OS\"");
    de12:	8a 81       	ldd	r24, Y+2	; 0x02
    de14:	9b 81       	ldd	r25, Y+3	; 0x03
    de16:	23 e1       	ldi	r18, 0x13	; 19
    de18:	e8 e4       	ldi	r30, 0x48	; 72
    de1a:	f6 e4       	ldi	r31, 0x46	; 70
    de1c:	dc 01       	movw	r26, r24
    de1e:	01 90       	ld	r0, Z+
    de20:	0d 92       	st	X+, r0
    de22:	2a 95       	dec	r18
    de24:	e1 f7       	brne	.-8      	; 0xde1e <_Z8fox2TextPc5Fox_t+0x196>
		}
		break;
    de26:	19 c0       	rjmp	.+50     	; 0xde5a <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_F4:
		{
			sprintf(str, "Sprint Fast 4 \"OH\"");
    de28:	8a 81       	ldd	r24, Y+2	; 0x02
    de2a:	9b 81       	ldd	r25, Y+3	; 0x03
    de2c:	23 e1       	ldi	r18, 0x13	; 19
    de2e:	eb e5       	ldi	r30, 0x5B	; 91
    de30:	f6 e4       	ldi	r31, 0x46	; 70
    de32:	dc 01       	movw	r26, r24
    de34:	01 90       	ld	r0, Z+
    de36:	0d 92       	st	X+, r0
    de38:	2a 95       	dec	r18
    de3a:	e1 f7       	brne	.-8      	; 0xde34 <_Z8fox2TextPc5Fox_t+0x1ac>
		}
		break;
    de3c:	0e c0       	rjmp	.+28     	; 0xde5a <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_F5:
		{
			sprintf(str, "Sprint Fast 5 \"O5\"");
    de3e:	8a 81       	ldd	r24, Y+2	; 0x02
    de40:	9b 81       	ldd	r25, Y+3	; 0x03
    de42:	23 e1       	ldi	r18, 0x13	; 19
    de44:	ee e6       	ldi	r30, 0x6E	; 110
    de46:	f6 e4       	ldi	r31, 0x46	; 70
    de48:	dc 01       	movw	r26, r24
    de4a:	01 90       	ld	r0, Z+
    de4c:	0d 92       	st	X+, r0
    de4e:	2a 95       	dec	r18
    de50:	e1 f7       	brne	.-8      	; 0xde4a <_Z8fox2TextPc5Fox_t+0x1c2>
		}
		break;
    de52:	03 c0       	rjmp	.+6      	; 0xde5a <_Z8fox2TextPc5Fox_t+0x1d2>
		
		default:
		{
			failure = true;
    de54:	81 e0       	ldi	r24, 0x01	; 1
    de56:	89 83       	std	Y+1, r24	; 0x01
		}
		break;
    de58:	00 00       	nop
	}
	
	return(failure);
    de5a:	89 81       	ldd	r24, Y+1	; 0x01
    de5c:	24 96       	adiw	r28, 0x04	; 4
    de5e:	cd bf       	out	0x3d, r28	; 61
    de60:	de bf       	out	0x3e, r29	; 62
    de62:	df 91       	pop	r29
    de64:	cf 91       	pop	r28
    de66:	08 95       	ret

0000de68 <__subsf3>:
    de68:	50 58       	subi	r21, 0x80	; 128

0000de6a <__addsf3>:
    de6a:	bb 27       	eor	r27, r27
    de6c:	aa 27       	eor	r26, r26
    de6e:	0e 94 4c 6f 	call	0xde98	; 0xde98 <__addsf3x>
    de72:	0c 94 06 71 	jmp	0xe20c	; 0xe20c <__fp_round>
    de76:	0e 94 f8 70 	call	0xe1f0	; 0xe1f0 <__fp_pscA>
    de7a:	38 f0       	brcs	.+14     	; 0xde8a <__addsf3+0x20>
    de7c:	0e 94 ff 70 	call	0xe1fe	; 0xe1fe <__fp_pscB>
    de80:	20 f0       	brcs	.+8      	; 0xde8a <__addsf3+0x20>
    de82:	39 f4       	brne	.+14     	; 0xde92 <__addsf3+0x28>
    de84:	9f 3f       	cpi	r25, 0xFF	; 255
    de86:	19 f4       	brne	.+6      	; 0xde8e <__addsf3+0x24>
    de88:	26 f4       	brtc	.+8      	; 0xde92 <__addsf3+0x28>
    de8a:	0c 94 f5 70 	jmp	0xe1ea	; 0xe1ea <__fp_nan>
    de8e:	0e f4       	brtc	.+2      	; 0xde92 <__addsf3+0x28>
    de90:	e0 95       	com	r30
    de92:	e7 fb       	bst	r30, 7
    de94:	0c 94 c6 70 	jmp	0xe18c	; 0xe18c <__fp_inf>

0000de98 <__addsf3x>:
    de98:	e9 2f       	mov	r30, r25
    de9a:	0e 94 17 71 	call	0xe22e	; 0xe22e <__fp_split3>
    de9e:	58 f3       	brcs	.-42     	; 0xde76 <__addsf3+0xc>
    dea0:	ba 17       	cp	r27, r26
    dea2:	62 07       	cpc	r22, r18
    dea4:	73 07       	cpc	r23, r19
    dea6:	84 07       	cpc	r24, r20
    dea8:	95 07       	cpc	r25, r21
    deaa:	20 f0       	brcs	.+8      	; 0xdeb4 <__addsf3x+0x1c>
    deac:	79 f4       	brne	.+30     	; 0xdecc <__addsf3x+0x34>
    deae:	a6 f5       	brtc	.+104    	; 0xdf18 <__addsf3x+0x80>
    deb0:	0c 94 51 71 	jmp	0xe2a2	; 0xe2a2 <__fp_zero>
    deb4:	0e f4       	brtc	.+2      	; 0xdeb8 <__addsf3x+0x20>
    deb6:	e0 95       	com	r30
    deb8:	0b 2e       	mov	r0, r27
    deba:	ba 2f       	mov	r27, r26
    debc:	a0 2d       	mov	r26, r0
    debe:	0b 01       	movw	r0, r22
    dec0:	b9 01       	movw	r22, r18
    dec2:	90 01       	movw	r18, r0
    dec4:	0c 01       	movw	r0, r24
    dec6:	ca 01       	movw	r24, r20
    dec8:	a0 01       	movw	r20, r0
    deca:	11 24       	eor	r1, r1
    decc:	ff 27       	eor	r31, r31
    dece:	59 1b       	sub	r21, r25
    ded0:	99 f0       	breq	.+38     	; 0xdef8 <__addsf3x+0x60>
    ded2:	59 3f       	cpi	r21, 0xF9	; 249
    ded4:	50 f4       	brcc	.+20     	; 0xdeea <__addsf3x+0x52>
    ded6:	50 3e       	cpi	r21, 0xE0	; 224
    ded8:	68 f1       	brcs	.+90     	; 0xdf34 <__addsf3x+0x9c>
    deda:	1a 16       	cp	r1, r26
    dedc:	f0 40       	sbci	r31, 0x00	; 0
    dede:	a2 2f       	mov	r26, r18
    dee0:	23 2f       	mov	r18, r19
    dee2:	34 2f       	mov	r19, r20
    dee4:	44 27       	eor	r20, r20
    dee6:	58 5f       	subi	r21, 0xF8	; 248
    dee8:	f3 cf       	rjmp	.-26     	; 0xded0 <__addsf3x+0x38>
    deea:	46 95       	lsr	r20
    deec:	37 95       	ror	r19
    deee:	27 95       	ror	r18
    def0:	a7 95       	ror	r26
    def2:	f0 40       	sbci	r31, 0x00	; 0
    def4:	53 95       	inc	r21
    def6:	c9 f7       	brne	.-14     	; 0xdeea <__addsf3x+0x52>
    def8:	7e f4       	brtc	.+30     	; 0xdf18 <__addsf3x+0x80>
    defa:	1f 16       	cp	r1, r31
    defc:	ba 0b       	sbc	r27, r26
    defe:	62 0b       	sbc	r22, r18
    df00:	73 0b       	sbc	r23, r19
    df02:	84 0b       	sbc	r24, r20
    df04:	ba f0       	brmi	.+46     	; 0xdf34 <__addsf3x+0x9c>
    df06:	91 50       	subi	r25, 0x01	; 1
    df08:	a1 f0       	breq	.+40     	; 0xdf32 <__addsf3x+0x9a>
    df0a:	ff 0f       	add	r31, r31
    df0c:	bb 1f       	adc	r27, r27
    df0e:	66 1f       	adc	r22, r22
    df10:	77 1f       	adc	r23, r23
    df12:	88 1f       	adc	r24, r24
    df14:	c2 f7       	brpl	.-16     	; 0xdf06 <__addsf3x+0x6e>
    df16:	0e c0       	rjmp	.+28     	; 0xdf34 <__addsf3x+0x9c>
    df18:	ba 0f       	add	r27, r26
    df1a:	62 1f       	adc	r22, r18
    df1c:	73 1f       	adc	r23, r19
    df1e:	84 1f       	adc	r24, r20
    df20:	48 f4       	brcc	.+18     	; 0xdf34 <__addsf3x+0x9c>
    df22:	87 95       	ror	r24
    df24:	77 95       	ror	r23
    df26:	67 95       	ror	r22
    df28:	b7 95       	ror	r27
    df2a:	f7 95       	ror	r31
    df2c:	9e 3f       	cpi	r25, 0xFE	; 254
    df2e:	08 f0       	brcs	.+2      	; 0xdf32 <__addsf3x+0x9a>
    df30:	b0 cf       	rjmp	.-160    	; 0xde92 <__addsf3+0x28>
    df32:	93 95       	inc	r25
    df34:	88 0f       	add	r24, r24
    df36:	08 f0       	brcs	.+2      	; 0xdf3a <__addsf3x+0xa2>
    df38:	99 27       	eor	r25, r25
    df3a:	ee 0f       	add	r30, r30
    df3c:	97 95       	ror	r25
    df3e:	87 95       	ror	r24
    df40:	08 95       	ret

0000df42 <ceil>:
    df42:	0e 94 39 71 	call	0xe272	; 0xe272 <__fp_trunc>
    df46:	90 f0       	brcs	.+36     	; 0xdf6c <ceil+0x2a>
    df48:	9f 37       	cpi	r25, 0x7F	; 127
    df4a:	48 f4       	brcc	.+18     	; 0xdf5e <ceil+0x1c>
    df4c:	91 11       	cpse	r25, r1
    df4e:	16 f4       	brtc	.+4      	; 0xdf54 <ceil+0x12>
    df50:	0c 94 52 71 	jmp	0xe2a4	; 0xe2a4 <__fp_szero>
    df54:	60 e0       	ldi	r22, 0x00	; 0
    df56:	70 e0       	ldi	r23, 0x00	; 0
    df58:	80 e8       	ldi	r24, 0x80	; 128
    df5a:	9f e3       	ldi	r25, 0x3F	; 63
    df5c:	08 95       	ret
    df5e:	26 f0       	brts	.+8      	; 0xdf68 <ceil+0x26>
    df60:	1b 16       	cp	r1, r27
    df62:	61 1d       	adc	r22, r1
    df64:	71 1d       	adc	r23, r1
    df66:	81 1d       	adc	r24, r1
    df68:	0c 94 cc 70 	jmp	0xe198	; 0xe198 <__fp_mintl>
    df6c:	0c 94 e7 70 	jmp	0xe1ce	; 0xe1ce <__fp_mpack>

0000df70 <__cmpsf2>:
    df70:	0e 94 a2 70 	call	0xe144	; 0xe144 <__fp_cmp>
    df74:	08 f4       	brcc	.+2      	; 0xdf78 <__cmpsf2+0x8>
    df76:	81 e0       	ldi	r24, 0x01	; 1
    df78:	08 95       	ret

0000df7a <__divsf3>:
    df7a:	0e 94 d1 6f 	call	0xdfa2	; 0xdfa2 <__divsf3x>
    df7e:	0c 94 06 71 	jmp	0xe20c	; 0xe20c <__fp_round>
    df82:	0e 94 ff 70 	call	0xe1fe	; 0xe1fe <__fp_pscB>
    df86:	58 f0       	brcs	.+22     	; 0xdf9e <__divsf3+0x24>
    df88:	0e 94 f8 70 	call	0xe1f0	; 0xe1f0 <__fp_pscA>
    df8c:	40 f0       	brcs	.+16     	; 0xdf9e <__divsf3+0x24>
    df8e:	29 f4       	brne	.+10     	; 0xdf9a <__divsf3+0x20>
    df90:	5f 3f       	cpi	r21, 0xFF	; 255
    df92:	29 f0       	breq	.+10     	; 0xdf9e <__divsf3+0x24>
    df94:	0c 94 c6 70 	jmp	0xe18c	; 0xe18c <__fp_inf>
    df98:	51 11       	cpse	r21, r1
    df9a:	0c 94 52 71 	jmp	0xe2a4	; 0xe2a4 <__fp_szero>
    df9e:	0c 94 f5 70 	jmp	0xe1ea	; 0xe1ea <__fp_nan>

0000dfa2 <__divsf3x>:
    dfa2:	0e 94 17 71 	call	0xe22e	; 0xe22e <__fp_split3>
    dfa6:	68 f3       	brcs	.-38     	; 0xdf82 <__divsf3+0x8>

0000dfa8 <__divsf3_pse>:
    dfa8:	99 23       	and	r25, r25
    dfaa:	b1 f3       	breq	.-20     	; 0xdf98 <__divsf3+0x1e>
    dfac:	55 23       	and	r21, r21
    dfae:	91 f3       	breq	.-28     	; 0xdf94 <__divsf3+0x1a>
    dfb0:	95 1b       	sub	r25, r21
    dfb2:	55 0b       	sbc	r21, r21
    dfb4:	bb 27       	eor	r27, r27
    dfb6:	aa 27       	eor	r26, r26
    dfb8:	62 17       	cp	r22, r18
    dfba:	73 07       	cpc	r23, r19
    dfbc:	84 07       	cpc	r24, r20
    dfbe:	38 f0       	brcs	.+14     	; 0xdfce <__divsf3_pse+0x26>
    dfc0:	9f 5f       	subi	r25, 0xFF	; 255
    dfc2:	5f 4f       	sbci	r21, 0xFF	; 255
    dfc4:	22 0f       	add	r18, r18
    dfc6:	33 1f       	adc	r19, r19
    dfc8:	44 1f       	adc	r20, r20
    dfca:	aa 1f       	adc	r26, r26
    dfcc:	a9 f3       	breq	.-22     	; 0xdfb8 <__divsf3_pse+0x10>
    dfce:	35 d0       	rcall	.+106    	; 0xe03a <__divsf3_pse+0x92>
    dfd0:	0e 2e       	mov	r0, r30
    dfd2:	3a f0       	brmi	.+14     	; 0xdfe2 <__divsf3_pse+0x3a>
    dfd4:	e0 e8       	ldi	r30, 0x80	; 128
    dfd6:	32 d0       	rcall	.+100    	; 0xe03c <__divsf3_pse+0x94>
    dfd8:	91 50       	subi	r25, 0x01	; 1
    dfda:	50 40       	sbci	r21, 0x00	; 0
    dfdc:	e6 95       	lsr	r30
    dfde:	00 1c       	adc	r0, r0
    dfe0:	ca f7       	brpl	.-14     	; 0xdfd4 <__divsf3_pse+0x2c>
    dfe2:	2b d0       	rcall	.+86     	; 0xe03a <__divsf3_pse+0x92>
    dfe4:	fe 2f       	mov	r31, r30
    dfe6:	29 d0       	rcall	.+82     	; 0xe03a <__divsf3_pse+0x92>
    dfe8:	66 0f       	add	r22, r22
    dfea:	77 1f       	adc	r23, r23
    dfec:	88 1f       	adc	r24, r24
    dfee:	bb 1f       	adc	r27, r27
    dff0:	26 17       	cp	r18, r22
    dff2:	37 07       	cpc	r19, r23
    dff4:	48 07       	cpc	r20, r24
    dff6:	ab 07       	cpc	r26, r27
    dff8:	b0 e8       	ldi	r27, 0x80	; 128
    dffa:	09 f0       	breq	.+2      	; 0xdffe <__divsf3_pse+0x56>
    dffc:	bb 0b       	sbc	r27, r27
    dffe:	80 2d       	mov	r24, r0
    e000:	bf 01       	movw	r22, r30
    e002:	ff 27       	eor	r31, r31
    e004:	93 58       	subi	r25, 0x83	; 131
    e006:	5f 4f       	sbci	r21, 0xFF	; 255
    e008:	3a f0       	brmi	.+14     	; 0xe018 <__divsf3_pse+0x70>
    e00a:	9e 3f       	cpi	r25, 0xFE	; 254
    e00c:	51 05       	cpc	r21, r1
    e00e:	78 f0       	brcs	.+30     	; 0xe02e <__divsf3_pse+0x86>
    e010:	0c 94 c6 70 	jmp	0xe18c	; 0xe18c <__fp_inf>
    e014:	0c 94 52 71 	jmp	0xe2a4	; 0xe2a4 <__fp_szero>
    e018:	5f 3f       	cpi	r21, 0xFF	; 255
    e01a:	e4 f3       	brlt	.-8      	; 0xe014 <__divsf3_pse+0x6c>
    e01c:	98 3e       	cpi	r25, 0xE8	; 232
    e01e:	d4 f3       	brlt	.-12     	; 0xe014 <__divsf3_pse+0x6c>
    e020:	86 95       	lsr	r24
    e022:	77 95       	ror	r23
    e024:	67 95       	ror	r22
    e026:	b7 95       	ror	r27
    e028:	f7 95       	ror	r31
    e02a:	9f 5f       	subi	r25, 0xFF	; 255
    e02c:	c9 f7       	brne	.-14     	; 0xe020 <__divsf3_pse+0x78>
    e02e:	88 0f       	add	r24, r24
    e030:	91 1d       	adc	r25, r1
    e032:	96 95       	lsr	r25
    e034:	87 95       	ror	r24
    e036:	97 f9       	bld	r25, 7
    e038:	08 95       	ret
    e03a:	e1 e0       	ldi	r30, 0x01	; 1
    e03c:	66 0f       	add	r22, r22
    e03e:	77 1f       	adc	r23, r23
    e040:	88 1f       	adc	r24, r24
    e042:	bb 1f       	adc	r27, r27
    e044:	62 17       	cp	r22, r18
    e046:	73 07       	cpc	r23, r19
    e048:	84 07       	cpc	r24, r20
    e04a:	ba 07       	cpc	r27, r26
    e04c:	20 f0       	brcs	.+8      	; 0xe056 <__divsf3_pse+0xae>
    e04e:	62 1b       	sub	r22, r18
    e050:	73 0b       	sbc	r23, r19
    e052:	84 0b       	sbc	r24, r20
    e054:	ba 0b       	sbc	r27, r26
    e056:	ee 1f       	adc	r30, r30
    e058:	88 f7       	brcc	.-30     	; 0xe03c <__divsf3_pse+0x94>
    e05a:	e0 95       	com	r30
    e05c:	08 95       	ret

0000e05e <__fixsfsi>:
    e05e:	0e 94 36 70 	call	0xe06c	; 0xe06c <__fixunssfsi>
    e062:	68 94       	set
    e064:	b1 11       	cpse	r27, r1
    e066:	0c 94 52 71 	jmp	0xe2a4	; 0xe2a4 <__fp_szero>
    e06a:	08 95       	ret

0000e06c <__fixunssfsi>:
    e06c:	0e 94 1f 71 	call	0xe23e	; 0xe23e <__fp_splitA>
    e070:	88 f0       	brcs	.+34     	; 0xe094 <__fixunssfsi+0x28>
    e072:	9f 57       	subi	r25, 0x7F	; 127
    e074:	98 f0       	brcs	.+38     	; 0xe09c <__fixunssfsi+0x30>
    e076:	b9 2f       	mov	r27, r25
    e078:	99 27       	eor	r25, r25
    e07a:	b7 51       	subi	r27, 0x17	; 23
    e07c:	b0 f0       	brcs	.+44     	; 0xe0aa <__fixunssfsi+0x3e>
    e07e:	e1 f0       	breq	.+56     	; 0xe0b8 <__fixunssfsi+0x4c>
    e080:	66 0f       	add	r22, r22
    e082:	77 1f       	adc	r23, r23
    e084:	88 1f       	adc	r24, r24
    e086:	99 1f       	adc	r25, r25
    e088:	1a f0       	brmi	.+6      	; 0xe090 <__fixunssfsi+0x24>
    e08a:	ba 95       	dec	r27
    e08c:	c9 f7       	brne	.-14     	; 0xe080 <__fixunssfsi+0x14>
    e08e:	14 c0       	rjmp	.+40     	; 0xe0b8 <__fixunssfsi+0x4c>
    e090:	b1 30       	cpi	r27, 0x01	; 1
    e092:	91 f0       	breq	.+36     	; 0xe0b8 <__fixunssfsi+0x4c>
    e094:	0e 94 51 71 	call	0xe2a2	; 0xe2a2 <__fp_zero>
    e098:	b1 e0       	ldi	r27, 0x01	; 1
    e09a:	08 95       	ret
    e09c:	0c 94 51 71 	jmp	0xe2a2	; 0xe2a2 <__fp_zero>
    e0a0:	67 2f       	mov	r22, r23
    e0a2:	78 2f       	mov	r23, r24
    e0a4:	88 27       	eor	r24, r24
    e0a6:	b8 5f       	subi	r27, 0xF8	; 248
    e0a8:	39 f0       	breq	.+14     	; 0xe0b8 <__fixunssfsi+0x4c>
    e0aa:	b9 3f       	cpi	r27, 0xF9	; 249
    e0ac:	cc f3       	brlt	.-14     	; 0xe0a0 <__fixunssfsi+0x34>
    e0ae:	86 95       	lsr	r24
    e0b0:	77 95       	ror	r23
    e0b2:	67 95       	ror	r22
    e0b4:	b3 95       	inc	r27
    e0b6:	d9 f7       	brne	.-10     	; 0xe0ae <__fixunssfsi+0x42>
    e0b8:	3e f4       	brtc	.+14     	; 0xe0c8 <__fixunssfsi+0x5c>
    e0ba:	90 95       	com	r25
    e0bc:	80 95       	com	r24
    e0be:	70 95       	com	r23
    e0c0:	61 95       	neg	r22
    e0c2:	7f 4f       	sbci	r23, 0xFF	; 255
    e0c4:	8f 4f       	sbci	r24, 0xFF	; 255
    e0c6:	9f 4f       	sbci	r25, 0xFF	; 255
    e0c8:	08 95       	ret

0000e0ca <__floatunsisf>:
    e0ca:	e8 94       	clt
    e0cc:	09 c0       	rjmp	.+18     	; 0xe0e0 <__floatsisf+0x12>

0000e0ce <__floatsisf>:
    e0ce:	97 fb       	bst	r25, 7
    e0d0:	3e f4       	brtc	.+14     	; 0xe0e0 <__floatsisf+0x12>
    e0d2:	90 95       	com	r25
    e0d4:	80 95       	com	r24
    e0d6:	70 95       	com	r23
    e0d8:	61 95       	neg	r22
    e0da:	7f 4f       	sbci	r23, 0xFF	; 255
    e0dc:	8f 4f       	sbci	r24, 0xFF	; 255
    e0de:	9f 4f       	sbci	r25, 0xFF	; 255
    e0e0:	99 23       	and	r25, r25
    e0e2:	a9 f0       	breq	.+42     	; 0xe10e <__floatsisf+0x40>
    e0e4:	f9 2f       	mov	r31, r25
    e0e6:	96 e9       	ldi	r25, 0x96	; 150
    e0e8:	bb 27       	eor	r27, r27
    e0ea:	93 95       	inc	r25
    e0ec:	f6 95       	lsr	r31
    e0ee:	87 95       	ror	r24
    e0f0:	77 95       	ror	r23
    e0f2:	67 95       	ror	r22
    e0f4:	b7 95       	ror	r27
    e0f6:	f1 11       	cpse	r31, r1
    e0f8:	f8 cf       	rjmp	.-16     	; 0xe0ea <__floatsisf+0x1c>
    e0fa:	fa f4       	brpl	.+62     	; 0xe13a <__floatsisf+0x6c>
    e0fc:	bb 0f       	add	r27, r27
    e0fe:	11 f4       	brne	.+4      	; 0xe104 <__floatsisf+0x36>
    e100:	60 ff       	sbrs	r22, 0
    e102:	1b c0       	rjmp	.+54     	; 0xe13a <__floatsisf+0x6c>
    e104:	6f 5f       	subi	r22, 0xFF	; 255
    e106:	7f 4f       	sbci	r23, 0xFF	; 255
    e108:	8f 4f       	sbci	r24, 0xFF	; 255
    e10a:	9f 4f       	sbci	r25, 0xFF	; 255
    e10c:	16 c0       	rjmp	.+44     	; 0xe13a <__floatsisf+0x6c>
    e10e:	88 23       	and	r24, r24
    e110:	11 f0       	breq	.+4      	; 0xe116 <__floatsisf+0x48>
    e112:	96 e9       	ldi	r25, 0x96	; 150
    e114:	11 c0       	rjmp	.+34     	; 0xe138 <__floatsisf+0x6a>
    e116:	77 23       	and	r23, r23
    e118:	21 f0       	breq	.+8      	; 0xe122 <__floatsisf+0x54>
    e11a:	9e e8       	ldi	r25, 0x8E	; 142
    e11c:	87 2f       	mov	r24, r23
    e11e:	76 2f       	mov	r23, r22
    e120:	05 c0       	rjmp	.+10     	; 0xe12c <__floatsisf+0x5e>
    e122:	66 23       	and	r22, r22
    e124:	71 f0       	breq	.+28     	; 0xe142 <__floatsisf+0x74>
    e126:	96 e8       	ldi	r25, 0x86	; 134
    e128:	86 2f       	mov	r24, r22
    e12a:	70 e0       	ldi	r23, 0x00	; 0
    e12c:	60 e0       	ldi	r22, 0x00	; 0
    e12e:	2a f0       	brmi	.+10     	; 0xe13a <__floatsisf+0x6c>
    e130:	9a 95       	dec	r25
    e132:	66 0f       	add	r22, r22
    e134:	77 1f       	adc	r23, r23
    e136:	88 1f       	adc	r24, r24
    e138:	da f7       	brpl	.-10     	; 0xe130 <__floatsisf+0x62>
    e13a:	88 0f       	add	r24, r24
    e13c:	96 95       	lsr	r25
    e13e:	87 95       	ror	r24
    e140:	97 f9       	bld	r25, 7
    e142:	08 95       	ret

0000e144 <__fp_cmp>:
    e144:	99 0f       	add	r25, r25
    e146:	00 08       	sbc	r0, r0
    e148:	55 0f       	add	r21, r21
    e14a:	aa 0b       	sbc	r26, r26
    e14c:	e0 e8       	ldi	r30, 0x80	; 128
    e14e:	fe ef       	ldi	r31, 0xFE	; 254
    e150:	16 16       	cp	r1, r22
    e152:	17 06       	cpc	r1, r23
    e154:	e8 07       	cpc	r30, r24
    e156:	f9 07       	cpc	r31, r25
    e158:	c0 f0       	brcs	.+48     	; 0xe18a <__fp_cmp+0x46>
    e15a:	12 16       	cp	r1, r18
    e15c:	13 06       	cpc	r1, r19
    e15e:	e4 07       	cpc	r30, r20
    e160:	f5 07       	cpc	r31, r21
    e162:	98 f0       	brcs	.+38     	; 0xe18a <__fp_cmp+0x46>
    e164:	62 1b       	sub	r22, r18
    e166:	73 0b       	sbc	r23, r19
    e168:	84 0b       	sbc	r24, r20
    e16a:	95 0b       	sbc	r25, r21
    e16c:	39 f4       	brne	.+14     	; 0xe17c <__fp_cmp+0x38>
    e16e:	0a 26       	eor	r0, r26
    e170:	61 f0       	breq	.+24     	; 0xe18a <__fp_cmp+0x46>
    e172:	23 2b       	or	r18, r19
    e174:	24 2b       	or	r18, r20
    e176:	25 2b       	or	r18, r21
    e178:	21 f4       	brne	.+8      	; 0xe182 <__fp_cmp+0x3e>
    e17a:	08 95       	ret
    e17c:	0a 26       	eor	r0, r26
    e17e:	09 f4       	brne	.+2      	; 0xe182 <__fp_cmp+0x3e>
    e180:	a1 40       	sbci	r26, 0x01	; 1
    e182:	a6 95       	lsr	r26
    e184:	8f ef       	ldi	r24, 0xFF	; 255
    e186:	81 1d       	adc	r24, r1
    e188:	81 1d       	adc	r24, r1
    e18a:	08 95       	ret

0000e18c <__fp_inf>:
    e18c:	97 f9       	bld	r25, 7
    e18e:	9f 67       	ori	r25, 0x7F	; 127
    e190:	80 e8       	ldi	r24, 0x80	; 128
    e192:	70 e0       	ldi	r23, 0x00	; 0
    e194:	60 e0       	ldi	r22, 0x00	; 0
    e196:	08 95       	ret

0000e198 <__fp_mintl>:
    e198:	88 23       	and	r24, r24
    e19a:	71 f4       	brne	.+28     	; 0xe1b8 <__fp_mintl+0x20>
    e19c:	77 23       	and	r23, r23
    e19e:	21 f0       	breq	.+8      	; 0xe1a8 <__fp_mintl+0x10>
    e1a0:	98 50       	subi	r25, 0x08	; 8
    e1a2:	87 2b       	or	r24, r23
    e1a4:	76 2f       	mov	r23, r22
    e1a6:	07 c0       	rjmp	.+14     	; 0xe1b6 <__fp_mintl+0x1e>
    e1a8:	66 23       	and	r22, r22
    e1aa:	11 f4       	brne	.+4      	; 0xe1b0 <__fp_mintl+0x18>
    e1ac:	99 27       	eor	r25, r25
    e1ae:	0d c0       	rjmp	.+26     	; 0xe1ca <__fp_mintl+0x32>
    e1b0:	90 51       	subi	r25, 0x10	; 16
    e1b2:	86 2b       	or	r24, r22
    e1b4:	70 e0       	ldi	r23, 0x00	; 0
    e1b6:	60 e0       	ldi	r22, 0x00	; 0
    e1b8:	2a f0       	brmi	.+10     	; 0xe1c4 <__fp_mintl+0x2c>
    e1ba:	9a 95       	dec	r25
    e1bc:	66 0f       	add	r22, r22
    e1be:	77 1f       	adc	r23, r23
    e1c0:	88 1f       	adc	r24, r24
    e1c2:	da f7       	brpl	.-10     	; 0xe1ba <__fp_mintl+0x22>
    e1c4:	88 0f       	add	r24, r24
    e1c6:	96 95       	lsr	r25
    e1c8:	87 95       	ror	r24
    e1ca:	97 f9       	bld	r25, 7
    e1cc:	08 95       	ret

0000e1ce <__fp_mpack>:
    e1ce:	9f 3f       	cpi	r25, 0xFF	; 255
    e1d0:	31 f0       	breq	.+12     	; 0xe1de <__fp_mpack_finite+0xc>

0000e1d2 <__fp_mpack_finite>:
    e1d2:	91 50       	subi	r25, 0x01	; 1
    e1d4:	20 f4       	brcc	.+8      	; 0xe1de <__fp_mpack_finite+0xc>
    e1d6:	87 95       	ror	r24
    e1d8:	77 95       	ror	r23
    e1da:	67 95       	ror	r22
    e1dc:	b7 95       	ror	r27
    e1de:	88 0f       	add	r24, r24
    e1e0:	91 1d       	adc	r25, r1
    e1e2:	96 95       	lsr	r25
    e1e4:	87 95       	ror	r24
    e1e6:	97 f9       	bld	r25, 7
    e1e8:	08 95       	ret

0000e1ea <__fp_nan>:
    e1ea:	9f ef       	ldi	r25, 0xFF	; 255
    e1ec:	80 ec       	ldi	r24, 0xC0	; 192
    e1ee:	08 95       	ret

0000e1f0 <__fp_pscA>:
    e1f0:	00 24       	eor	r0, r0
    e1f2:	0a 94       	dec	r0
    e1f4:	16 16       	cp	r1, r22
    e1f6:	17 06       	cpc	r1, r23
    e1f8:	18 06       	cpc	r1, r24
    e1fa:	09 06       	cpc	r0, r25
    e1fc:	08 95       	ret

0000e1fe <__fp_pscB>:
    e1fe:	00 24       	eor	r0, r0
    e200:	0a 94       	dec	r0
    e202:	12 16       	cp	r1, r18
    e204:	13 06       	cpc	r1, r19
    e206:	14 06       	cpc	r1, r20
    e208:	05 06       	cpc	r0, r21
    e20a:	08 95       	ret

0000e20c <__fp_round>:
    e20c:	09 2e       	mov	r0, r25
    e20e:	03 94       	inc	r0
    e210:	00 0c       	add	r0, r0
    e212:	11 f4       	brne	.+4      	; 0xe218 <__fp_round+0xc>
    e214:	88 23       	and	r24, r24
    e216:	52 f0       	brmi	.+20     	; 0xe22c <__fp_round+0x20>
    e218:	bb 0f       	add	r27, r27
    e21a:	40 f4       	brcc	.+16     	; 0xe22c <__fp_round+0x20>
    e21c:	bf 2b       	or	r27, r31
    e21e:	11 f4       	brne	.+4      	; 0xe224 <__fp_round+0x18>
    e220:	60 ff       	sbrs	r22, 0
    e222:	04 c0       	rjmp	.+8      	; 0xe22c <__fp_round+0x20>
    e224:	6f 5f       	subi	r22, 0xFF	; 255
    e226:	7f 4f       	sbci	r23, 0xFF	; 255
    e228:	8f 4f       	sbci	r24, 0xFF	; 255
    e22a:	9f 4f       	sbci	r25, 0xFF	; 255
    e22c:	08 95       	ret

0000e22e <__fp_split3>:
    e22e:	57 fd       	sbrc	r21, 7
    e230:	90 58       	subi	r25, 0x80	; 128
    e232:	44 0f       	add	r20, r20
    e234:	55 1f       	adc	r21, r21
    e236:	59 f0       	breq	.+22     	; 0xe24e <__fp_splitA+0x10>
    e238:	5f 3f       	cpi	r21, 0xFF	; 255
    e23a:	71 f0       	breq	.+28     	; 0xe258 <__fp_splitA+0x1a>
    e23c:	47 95       	ror	r20

0000e23e <__fp_splitA>:
    e23e:	88 0f       	add	r24, r24
    e240:	97 fb       	bst	r25, 7
    e242:	99 1f       	adc	r25, r25
    e244:	61 f0       	breq	.+24     	; 0xe25e <__fp_splitA+0x20>
    e246:	9f 3f       	cpi	r25, 0xFF	; 255
    e248:	79 f0       	breq	.+30     	; 0xe268 <__fp_splitA+0x2a>
    e24a:	87 95       	ror	r24
    e24c:	08 95       	ret
    e24e:	12 16       	cp	r1, r18
    e250:	13 06       	cpc	r1, r19
    e252:	14 06       	cpc	r1, r20
    e254:	55 1f       	adc	r21, r21
    e256:	f2 cf       	rjmp	.-28     	; 0xe23c <__fp_split3+0xe>
    e258:	46 95       	lsr	r20
    e25a:	f1 df       	rcall	.-30     	; 0xe23e <__fp_splitA>
    e25c:	08 c0       	rjmp	.+16     	; 0xe26e <__fp_splitA+0x30>
    e25e:	16 16       	cp	r1, r22
    e260:	17 06       	cpc	r1, r23
    e262:	18 06       	cpc	r1, r24
    e264:	99 1f       	adc	r25, r25
    e266:	f1 cf       	rjmp	.-30     	; 0xe24a <__fp_splitA+0xc>
    e268:	86 95       	lsr	r24
    e26a:	71 05       	cpc	r23, r1
    e26c:	61 05       	cpc	r22, r1
    e26e:	08 94       	sec
    e270:	08 95       	ret

0000e272 <__fp_trunc>:
    e272:	0e 94 1f 71 	call	0xe23e	; 0xe23e <__fp_splitA>
    e276:	a0 f0       	brcs	.+40     	; 0xe2a0 <__fp_trunc+0x2e>
    e278:	be e7       	ldi	r27, 0x7E	; 126
    e27a:	b9 17       	cp	r27, r25
    e27c:	88 f4       	brcc	.+34     	; 0xe2a0 <__fp_trunc+0x2e>
    e27e:	bb 27       	eor	r27, r27
    e280:	9f 38       	cpi	r25, 0x8F	; 143
    e282:	60 f4       	brcc	.+24     	; 0xe29c <__fp_trunc+0x2a>
    e284:	16 16       	cp	r1, r22
    e286:	b1 1d       	adc	r27, r1
    e288:	67 2f       	mov	r22, r23
    e28a:	78 2f       	mov	r23, r24
    e28c:	88 27       	eor	r24, r24
    e28e:	98 5f       	subi	r25, 0xF8	; 248
    e290:	f7 cf       	rjmp	.-18     	; 0xe280 <__fp_trunc+0xe>
    e292:	86 95       	lsr	r24
    e294:	77 95       	ror	r23
    e296:	67 95       	ror	r22
    e298:	b1 1d       	adc	r27, r1
    e29a:	93 95       	inc	r25
    e29c:	96 39       	cpi	r25, 0x96	; 150
    e29e:	c8 f3       	brcs	.-14     	; 0xe292 <__fp_trunc+0x20>
    e2a0:	08 95       	ret

0000e2a2 <__fp_zero>:
    e2a2:	e8 94       	clt

0000e2a4 <__fp_szero>:
    e2a4:	bb 27       	eor	r27, r27
    e2a6:	66 27       	eor	r22, r22
    e2a8:	77 27       	eor	r23, r23
    e2aa:	cb 01       	movw	r24, r22
    e2ac:	97 f9       	bld	r25, 7
    e2ae:	08 95       	ret

0000e2b0 <__gesf2>:
    e2b0:	0e 94 a2 70 	call	0xe144	; 0xe144 <__fp_cmp>
    e2b4:	08 f4       	brcc	.+2      	; 0xe2b8 <__gesf2+0x8>
    e2b6:	8f ef       	ldi	r24, 0xFF	; 255
    e2b8:	08 95       	ret

0000e2ba <__mulsf3>:
    e2ba:	0e 94 70 71 	call	0xe2e0	; 0xe2e0 <__mulsf3x>
    e2be:	0c 94 06 71 	jmp	0xe20c	; 0xe20c <__fp_round>
    e2c2:	0e 94 f8 70 	call	0xe1f0	; 0xe1f0 <__fp_pscA>
    e2c6:	38 f0       	brcs	.+14     	; 0xe2d6 <__mulsf3+0x1c>
    e2c8:	0e 94 ff 70 	call	0xe1fe	; 0xe1fe <__fp_pscB>
    e2cc:	20 f0       	brcs	.+8      	; 0xe2d6 <__mulsf3+0x1c>
    e2ce:	95 23       	and	r25, r21
    e2d0:	11 f0       	breq	.+4      	; 0xe2d6 <__mulsf3+0x1c>
    e2d2:	0c 94 c6 70 	jmp	0xe18c	; 0xe18c <__fp_inf>
    e2d6:	0c 94 f5 70 	jmp	0xe1ea	; 0xe1ea <__fp_nan>
    e2da:	11 24       	eor	r1, r1
    e2dc:	0c 94 52 71 	jmp	0xe2a4	; 0xe2a4 <__fp_szero>

0000e2e0 <__mulsf3x>:
    e2e0:	0e 94 17 71 	call	0xe22e	; 0xe22e <__fp_split3>
    e2e4:	70 f3       	brcs	.-36     	; 0xe2c2 <__mulsf3+0x8>

0000e2e6 <__mulsf3_pse>:
    e2e6:	95 9f       	mul	r25, r21
    e2e8:	c1 f3       	breq	.-16     	; 0xe2da <__mulsf3+0x20>
    e2ea:	95 0f       	add	r25, r21
    e2ec:	50 e0       	ldi	r21, 0x00	; 0
    e2ee:	55 1f       	adc	r21, r21
    e2f0:	62 9f       	mul	r22, r18
    e2f2:	f0 01       	movw	r30, r0
    e2f4:	72 9f       	mul	r23, r18
    e2f6:	bb 27       	eor	r27, r27
    e2f8:	f0 0d       	add	r31, r0
    e2fa:	b1 1d       	adc	r27, r1
    e2fc:	63 9f       	mul	r22, r19
    e2fe:	aa 27       	eor	r26, r26
    e300:	f0 0d       	add	r31, r0
    e302:	b1 1d       	adc	r27, r1
    e304:	aa 1f       	adc	r26, r26
    e306:	64 9f       	mul	r22, r20
    e308:	66 27       	eor	r22, r22
    e30a:	b0 0d       	add	r27, r0
    e30c:	a1 1d       	adc	r26, r1
    e30e:	66 1f       	adc	r22, r22
    e310:	82 9f       	mul	r24, r18
    e312:	22 27       	eor	r18, r18
    e314:	b0 0d       	add	r27, r0
    e316:	a1 1d       	adc	r26, r1
    e318:	62 1f       	adc	r22, r18
    e31a:	73 9f       	mul	r23, r19
    e31c:	b0 0d       	add	r27, r0
    e31e:	a1 1d       	adc	r26, r1
    e320:	62 1f       	adc	r22, r18
    e322:	83 9f       	mul	r24, r19
    e324:	a0 0d       	add	r26, r0
    e326:	61 1d       	adc	r22, r1
    e328:	22 1f       	adc	r18, r18
    e32a:	74 9f       	mul	r23, r20
    e32c:	33 27       	eor	r19, r19
    e32e:	a0 0d       	add	r26, r0
    e330:	61 1d       	adc	r22, r1
    e332:	23 1f       	adc	r18, r19
    e334:	84 9f       	mul	r24, r20
    e336:	60 0d       	add	r22, r0
    e338:	21 1d       	adc	r18, r1
    e33a:	82 2f       	mov	r24, r18
    e33c:	76 2f       	mov	r23, r22
    e33e:	6a 2f       	mov	r22, r26
    e340:	11 24       	eor	r1, r1
    e342:	9f 57       	subi	r25, 0x7F	; 127
    e344:	50 40       	sbci	r21, 0x00	; 0
    e346:	9a f0       	brmi	.+38     	; 0xe36e <__mulsf3_pse+0x88>
    e348:	f1 f0       	breq	.+60     	; 0xe386 <__mulsf3_pse+0xa0>
    e34a:	88 23       	and	r24, r24
    e34c:	4a f0       	brmi	.+18     	; 0xe360 <__mulsf3_pse+0x7a>
    e34e:	ee 0f       	add	r30, r30
    e350:	ff 1f       	adc	r31, r31
    e352:	bb 1f       	adc	r27, r27
    e354:	66 1f       	adc	r22, r22
    e356:	77 1f       	adc	r23, r23
    e358:	88 1f       	adc	r24, r24
    e35a:	91 50       	subi	r25, 0x01	; 1
    e35c:	50 40       	sbci	r21, 0x00	; 0
    e35e:	a9 f7       	brne	.-22     	; 0xe34a <__mulsf3_pse+0x64>
    e360:	9e 3f       	cpi	r25, 0xFE	; 254
    e362:	51 05       	cpc	r21, r1
    e364:	80 f0       	brcs	.+32     	; 0xe386 <__mulsf3_pse+0xa0>
    e366:	0c 94 c6 70 	jmp	0xe18c	; 0xe18c <__fp_inf>
    e36a:	0c 94 52 71 	jmp	0xe2a4	; 0xe2a4 <__fp_szero>
    e36e:	5f 3f       	cpi	r21, 0xFF	; 255
    e370:	e4 f3       	brlt	.-8      	; 0xe36a <__mulsf3_pse+0x84>
    e372:	98 3e       	cpi	r25, 0xE8	; 232
    e374:	d4 f3       	brlt	.-12     	; 0xe36a <__mulsf3_pse+0x84>
    e376:	86 95       	lsr	r24
    e378:	77 95       	ror	r23
    e37a:	67 95       	ror	r22
    e37c:	b7 95       	ror	r27
    e37e:	f7 95       	ror	r31
    e380:	e7 95       	ror	r30
    e382:	9f 5f       	subi	r25, 0xFF	; 255
    e384:	c1 f7       	brne	.-16     	; 0xe376 <__mulsf3_pse+0x90>
    e386:	fe 2b       	or	r31, r30
    e388:	88 0f       	add	r24, r24
    e38a:	91 1d       	adc	r25, r1
    e38c:	96 95       	lsr	r25
    e38e:	87 95       	ror	r24
    e390:	97 f9       	bld	r25, 7
    e392:	08 95       	ret

0000e394 <__mulsi3>:
    e394:	db 01       	movw	r26, r22
    e396:	8f 93       	push	r24
    e398:	9f 93       	push	r25
    e39a:	0e 94 5b 72 	call	0xe4b6	; 0xe4b6 <__muluhisi3>
    e39e:	bf 91       	pop	r27
    e3a0:	af 91       	pop	r26
    e3a2:	a2 9f       	mul	r26, r18
    e3a4:	80 0d       	add	r24, r0
    e3a6:	91 1d       	adc	r25, r1
    e3a8:	a3 9f       	mul	r26, r19
    e3aa:	90 0d       	add	r25, r0
    e3ac:	b2 9f       	mul	r27, r18
    e3ae:	90 0d       	add	r25, r0
    e3b0:	11 24       	eor	r1, r1
    e3b2:	08 95       	ret

0000e3b4 <__udivmodhi4>:
    e3b4:	aa 1b       	sub	r26, r26
    e3b6:	bb 1b       	sub	r27, r27
    e3b8:	51 e1       	ldi	r21, 0x11	; 17
    e3ba:	07 c0       	rjmp	.+14     	; 0xe3ca <__udivmodhi4_ep>

0000e3bc <__udivmodhi4_loop>:
    e3bc:	aa 1f       	adc	r26, r26
    e3be:	bb 1f       	adc	r27, r27
    e3c0:	a6 17       	cp	r26, r22
    e3c2:	b7 07       	cpc	r27, r23
    e3c4:	10 f0       	brcs	.+4      	; 0xe3ca <__udivmodhi4_ep>
    e3c6:	a6 1b       	sub	r26, r22
    e3c8:	b7 0b       	sbc	r27, r23

0000e3ca <__udivmodhi4_ep>:
    e3ca:	88 1f       	adc	r24, r24
    e3cc:	99 1f       	adc	r25, r25
    e3ce:	5a 95       	dec	r21
    e3d0:	a9 f7       	brne	.-22     	; 0xe3bc <__udivmodhi4_loop>
    e3d2:	80 95       	com	r24
    e3d4:	90 95       	com	r25
    e3d6:	bc 01       	movw	r22, r24
    e3d8:	cd 01       	movw	r24, r26
    e3da:	08 95       	ret

0000e3dc <__divmodhi4>:
    e3dc:	97 fb       	bst	r25, 7
    e3de:	07 2e       	mov	r0, r23
    e3e0:	16 f4       	brtc	.+4      	; 0xe3e6 <__divmodhi4+0xa>
    e3e2:	00 94       	com	r0
    e3e4:	07 d0       	rcall	.+14     	; 0xe3f4 <__divmodhi4_neg1>
    e3e6:	77 fd       	sbrc	r23, 7
    e3e8:	09 d0       	rcall	.+18     	; 0xe3fc <__divmodhi4_neg2>
    e3ea:	0e 94 da 71 	call	0xe3b4	; 0xe3b4 <__udivmodhi4>
    e3ee:	07 fc       	sbrc	r0, 7
    e3f0:	05 d0       	rcall	.+10     	; 0xe3fc <__divmodhi4_neg2>
    e3f2:	3e f4       	brtc	.+14     	; 0xe402 <__divmodhi4_exit>

0000e3f4 <__divmodhi4_neg1>:
    e3f4:	90 95       	com	r25
    e3f6:	81 95       	neg	r24
    e3f8:	9f 4f       	sbci	r25, 0xFF	; 255
    e3fa:	08 95       	ret

0000e3fc <__divmodhi4_neg2>:
    e3fc:	70 95       	com	r23
    e3fe:	61 95       	neg	r22
    e400:	7f 4f       	sbci	r23, 0xFF	; 255

0000e402 <__divmodhi4_exit>:
    e402:	08 95       	ret

0000e404 <__udivmodsi4>:
    e404:	a1 e2       	ldi	r26, 0x21	; 33
    e406:	1a 2e       	mov	r1, r26
    e408:	aa 1b       	sub	r26, r26
    e40a:	bb 1b       	sub	r27, r27
    e40c:	fd 01       	movw	r30, r26
    e40e:	0d c0       	rjmp	.+26     	; 0xe42a <__udivmodsi4_ep>

0000e410 <__udivmodsi4_loop>:
    e410:	aa 1f       	adc	r26, r26
    e412:	bb 1f       	adc	r27, r27
    e414:	ee 1f       	adc	r30, r30
    e416:	ff 1f       	adc	r31, r31
    e418:	a2 17       	cp	r26, r18
    e41a:	b3 07       	cpc	r27, r19
    e41c:	e4 07       	cpc	r30, r20
    e41e:	f5 07       	cpc	r31, r21
    e420:	20 f0       	brcs	.+8      	; 0xe42a <__udivmodsi4_ep>
    e422:	a2 1b       	sub	r26, r18
    e424:	b3 0b       	sbc	r27, r19
    e426:	e4 0b       	sbc	r30, r20
    e428:	f5 0b       	sbc	r31, r21

0000e42a <__udivmodsi4_ep>:
    e42a:	66 1f       	adc	r22, r22
    e42c:	77 1f       	adc	r23, r23
    e42e:	88 1f       	adc	r24, r24
    e430:	99 1f       	adc	r25, r25
    e432:	1a 94       	dec	r1
    e434:	69 f7       	brne	.-38     	; 0xe410 <__udivmodsi4_loop>
    e436:	60 95       	com	r22
    e438:	70 95       	com	r23
    e43a:	80 95       	com	r24
    e43c:	90 95       	com	r25
    e43e:	9b 01       	movw	r18, r22
    e440:	ac 01       	movw	r20, r24
    e442:	bd 01       	movw	r22, r26
    e444:	cf 01       	movw	r24, r30
    e446:	08 95       	ret

0000e448 <__divmodsi4>:
    e448:	05 2e       	mov	r0, r21
    e44a:	97 fb       	bst	r25, 7
    e44c:	1e f4       	brtc	.+6      	; 0xe454 <__divmodsi4+0xc>
    e44e:	00 94       	com	r0
    e450:	0e 94 3b 72 	call	0xe476	; 0xe476 <__negsi2>
    e454:	57 fd       	sbrc	r21, 7
    e456:	07 d0       	rcall	.+14     	; 0xe466 <__divmodsi4_neg2>
    e458:	0e 94 02 72 	call	0xe404	; 0xe404 <__udivmodsi4>
    e45c:	07 fc       	sbrc	r0, 7
    e45e:	03 d0       	rcall	.+6      	; 0xe466 <__divmodsi4_neg2>
    e460:	4e f4       	brtc	.+18     	; 0xe474 <__divmodsi4_exit>
    e462:	0c 94 3b 72 	jmp	0xe476	; 0xe476 <__negsi2>

0000e466 <__divmodsi4_neg2>:
    e466:	50 95       	com	r21
    e468:	40 95       	com	r20
    e46a:	30 95       	com	r19
    e46c:	21 95       	neg	r18
    e46e:	3f 4f       	sbci	r19, 0xFF	; 255
    e470:	4f 4f       	sbci	r20, 0xFF	; 255
    e472:	5f 4f       	sbci	r21, 0xFF	; 255

0000e474 <__divmodsi4_exit>:
    e474:	08 95       	ret

0000e476 <__negsi2>:
    e476:	90 95       	com	r25
    e478:	80 95       	com	r24
    e47a:	70 95       	com	r23
    e47c:	61 95       	neg	r22
    e47e:	7f 4f       	sbci	r23, 0xFF	; 255
    e480:	8f 4f       	sbci	r24, 0xFF	; 255
    e482:	9f 4f       	sbci	r25, 0xFF	; 255
    e484:	08 95       	ret

0000e486 <__tablejump2__>:
    e486:	ee 0f       	add	r30, r30
    e488:	ff 1f       	adc	r31, r31
    e48a:	00 24       	eor	r0, r0
    e48c:	00 1c       	adc	r0, r0
    e48e:	0b be       	out	0x3b, r0	; 59
    e490:	07 90       	elpm	r0, Z+
    e492:	f6 91       	elpm	r31, Z
    e494:	e0 2d       	mov	r30, r0
    e496:	09 94       	ijmp

0000e498 <__umulhisi3>:
    e498:	a2 9f       	mul	r26, r18
    e49a:	b0 01       	movw	r22, r0
    e49c:	b3 9f       	mul	r27, r19
    e49e:	c0 01       	movw	r24, r0
    e4a0:	a3 9f       	mul	r26, r19
    e4a2:	70 0d       	add	r23, r0
    e4a4:	81 1d       	adc	r24, r1
    e4a6:	11 24       	eor	r1, r1
    e4a8:	91 1d       	adc	r25, r1
    e4aa:	b2 9f       	mul	r27, r18
    e4ac:	70 0d       	add	r23, r0
    e4ae:	81 1d       	adc	r24, r1
    e4b0:	11 24       	eor	r1, r1
    e4b2:	91 1d       	adc	r25, r1
    e4b4:	08 95       	ret

0000e4b6 <__muluhisi3>:
    e4b6:	0e 94 4c 72 	call	0xe498	; 0xe498 <__umulhisi3>
    e4ba:	a5 9f       	mul	r26, r21
    e4bc:	90 0d       	add	r25, r0
    e4be:	b4 9f       	mul	r27, r20
    e4c0:	90 0d       	add	r25, r0
    e4c2:	a4 9f       	mul	r26, r20
    e4c4:	80 0d       	add	r24, r0
    e4c6:	91 1d       	adc	r25, r1
    e4c8:	11 24       	eor	r1, r1
    e4ca:	08 95       	ret

0000e4cc <malloc>:
    e4cc:	0f 93       	push	r16
    e4ce:	1f 93       	push	r17
    e4d0:	cf 93       	push	r28
    e4d2:	df 93       	push	r29
    e4d4:	82 30       	cpi	r24, 0x02	; 2
    e4d6:	91 05       	cpc	r25, r1
    e4d8:	10 f4       	brcc	.+4      	; 0xe4de <malloc+0x12>
    e4da:	82 e0       	ldi	r24, 0x02	; 2
    e4dc:	90 e0       	ldi	r25, 0x00	; 0
    e4de:	e0 91 e9 4a 	lds	r30, 0x4AE9	; 0x804ae9 <__flp>
    e4e2:	f0 91 ea 4a 	lds	r31, 0x4AEA	; 0x804aea <__flp+0x1>
    e4e6:	20 e0       	ldi	r18, 0x00	; 0
    e4e8:	30 e0       	ldi	r19, 0x00	; 0
    e4ea:	a0 e0       	ldi	r26, 0x00	; 0
    e4ec:	b0 e0       	ldi	r27, 0x00	; 0
    e4ee:	30 97       	sbiw	r30, 0x00	; 0
    e4f0:	19 f1       	breq	.+70     	; 0xe538 <malloc+0x6c>
    e4f2:	40 81       	ld	r20, Z
    e4f4:	51 81       	ldd	r21, Z+1	; 0x01
    e4f6:	02 81       	ldd	r16, Z+2	; 0x02
    e4f8:	13 81       	ldd	r17, Z+3	; 0x03
    e4fa:	48 17       	cp	r20, r24
    e4fc:	59 07       	cpc	r21, r25
    e4fe:	c8 f0       	brcs	.+50     	; 0xe532 <malloc+0x66>
    e500:	84 17       	cp	r24, r20
    e502:	95 07       	cpc	r25, r21
    e504:	69 f4       	brne	.+26     	; 0xe520 <malloc+0x54>
    e506:	10 97       	sbiw	r26, 0x00	; 0
    e508:	31 f0       	breq	.+12     	; 0xe516 <malloc+0x4a>
    e50a:	12 96       	adiw	r26, 0x02	; 2
    e50c:	0c 93       	st	X, r16
    e50e:	12 97       	sbiw	r26, 0x02	; 2
    e510:	13 96       	adiw	r26, 0x03	; 3
    e512:	1c 93       	st	X, r17
    e514:	27 c0       	rjmp	.+78     	; 0xe564 <malloc+0x98>
    e516:	00 93 e9 4a 	sts	0x4AE9, r16	; 0x804ae9 <__flp>
    e51a:	10 93 ea 4a 	sts	0x4AEA, r17	; 0x804aea <__flp+0x1>
    e51e:	22 c0       	rjmp	.+68     	; 0xe564 <malloc+0x98>
    e520:	21 15       	cp	r18, r1
    e522:	31 05       	cpc	r19, r1
    e524:	19 f0       	breq	.+6      	; 0xe52c <malloc+0x60>
    e526:	42 17       	cp	r20, r18
    e528:	53 07       	cpc	r21, r19
    e52a:	18 f4       	brcc	.+6      	; 0xe532 <malloc+0x66>
    e52c:	9a 01       	movw	r18, r20
    e52e:	bd 01       	movw	r22, r26
    e530:	ef 01       	movw	r28, r30
    e532:	df 01       	movw	r26, r30
    e534:	f8 01       	movw	r30, r16
    e536:	db cf       	rjmp	.-74     	; 0xe4ee <malloc+0x22>
    e538:	21 15       	cp	r18, r1
    e53a:	31 05       	cpc	r19, r1
    e53c:	f9 f0       	breq	.+62     	; 0xe57c <malloc+0xb0>
    e53e:	28 1b       	sub	r18, r24
    e540:	39 0b       	sbc	r19, r25
    e542:	24 30       	cpi	r18, 0x04	; 4
    e544:	31 05       	cpc	r19, r1
    e546:	80 f4       	brcc	.+32     	; 0xe568 <malloc+0x9c>
    e548:	8a 81       	ldd	r24, Y+2	; 0x02
    e54a:	9b 81       	ldd	r25, Y+3	; 0x03
    e54c:	61 15       	cp	r22, r1
    e54e:	71 05       	cpc	r23, r1
    e550:	21 f0       	breq	.+8      	; 0xe55a <malloc+0x8e>
    e552:	fb 01       	movw	r30, r22
    e554:	82 83       	std	Z+2, r24	; 0x02
    e556:	93 83       	std	Z+3, r25	; 0x03
    e558:	04 c0       	rjmp	.+8      	; 0xe562 <malloc+0x96>
    e55a:	80 93 e9 4a 	sts	0x4AE9, r24	; 0x804ae9 <__flp>
    e55e:	90 93 ea 4a 	sts	0x4AEA, r25	; 0x804aea <__flp+0x1>
    e562:	fe 01       	movw	r30, r28
    e564:	32 96       	adiw	r30, 0x02	; 2
    e566:	44 c0       	rjmp	.+136    	; 0xe5f0 <malloc+0x124>
    e568:	fe 01       	movw	r30, r28
    e56a:	e2 0f       	add	r30, r18
    e56c:	f3 1f       	adc	r31, r19
    e56e:	81 93       	st	Z+, r24
    e570:	91 93       	st	Z+, r25
    e572:	22 50       	subi	r18, 0x02	; 2
    e574:	31 09       	sbc	r19, r1
    e576:	28 83       	st	Y, r18
    e578:	39 83       	std	Y+1, r19	; 0x01
    e57a:	3a c0       	rjmp	.+116    	; 0xe5f0 <malloc+0x124>
    e57c:	20 91 e7 4a 	lds	r18, 0x4AE7	; 0x804ae7 <__brkval>
    e580:	30 91 e8 4a 	lds	r19, 0x4AE8	; 0x804ae8 <__brkval+0x1>
    e584:	23 2b       	or	r18, r19
    e586:	41 f4       	brne	.+16     	; 0xe598 <malloc+0xcc>
    e588:	20 91 02 40 	lds	r18, 0x4002	; 0x804002 <__malloc_heap_start>
    e58c:	30 91 03 40 	lds	r19, 0x4003	; 0x804003 <__malloc_heap_start+0x1>
    e590:	20 93 e7 4a 	sts	0x4AE7, r18	; 0x804ae7 <__brkval>
    e594:	30 93 e8 4a 	sts	0x4AE8, r19	; 0x804ae8 <__brkval+0x1>
    e598:	20 91 00 40 	lds	r18, 0x4000	; 0x804000 <__DATA_REGION_ORIGIN__>
    e59c:	30 91 01 40 	lds	r19, 0x4001	; 0x804001 <__DATA_REGION_ORIGIN__+0x1>
    e5a0:	21 15       	cp	r18, r1
    e5a2:	31 05       	cpc	r19, r1
    e5a4:	41 f4       	brne	.+16     	; 0xe5b6 <malloc+0xea>
    e5a6:	2d b7       	in	r18, 0x3d	; 61
    e5a8:	3e b7       	in	r19, 0x3e	; 62
    e5aa:	40 91 04 40 	lds	r20, 0x4004	; 0x804004 <__malloc_margin>
    e5ae:	50 91 05 40 	lds	r21, 0x4005	; 0x804005 <__malloc_margin+0x1>
    e5b2:	24 1b       	sub	r18, r20
    e5b4:	35 0b       	sbc	r19, r21
    e5b6:	e0 91 e7 4a 	lds	r30, 0x4AE7	; 0x804ae7 <__brkval>
    e5ba:	f0 91 e8 4a 	lds	r31, 0x4AE8	; 0x804ae8 <__brkval+0x1>
    e5be:	e2 17       	cp	r30, r18
    e5c0:	f3 07       	cpc	r31, r19
    e5c2:	a0 f4       	brcc	.+40     	; 0xe5ec <malloc+0x120>
    e5c4:	2e 1b       	sub	r18, r30
    e5c6:	3f 0b       	sbc	r19, r31
    e5c8:	28 17       	cp	r18, r24
    e5ca:	39 07       	cpc	r19, r25
    e5cc:	78 f0       	brcs	.+30     	; 0xe5ec <malloc+0x120>
    e5ce:	ac 01       	movw	r20, r24
    e5d0:	4e 5f       	subi	r20, 0xFE	; 254
    e5d2:	5f 4f       	sbci	r21, 0xFF	; 255
    e5d4:	24 17       	cp	r18, r20
    e5d6:	35 07       	cpc	r19, r21
    e5d8:	48 f0       	brcs	.+18     	; 0xe5ec <malloc+0x120>
    e5da:	4e 0f       	add	r20, r30
    e5dc:	5f 1f       	adc	r21, r31
    e5de:	40 93 e7 4a 	sts	0x4AE7, r20	; 0x804ae7 <__brkval>
    e5e2:	50 93 e8 4a 	sts	0x4AE8, r21	; 0x804ae8 <__brkval+0x1>
    e5e6:	81 93       	st	Z+, r24
    e5e8:	91 93       	st	Z+, r25
    e5ea:	02 c0       	rjmp	.+4      	; 0xe5f0 <malloc+0x124>
    e5ec:	e0 e0       	ldi	r30, 0x00	; 0
    e5ee:	f0 e0       	ldi	r31, 0x00	; 0
    e5f0:	cf 01       	movw	r24, r30
    e5f2:	df 91       	pop	r29
    e5f4:	cf 91       	pop	r28
    e5f6:	1f 91       	pop	r17
    e5f8:	0f 91       	pop	r16
    e5fa:	08 95       	ret

0000e5fc <free>:
    e5fc:	cf 93       	push	r28
    e5fe:	df 93       	push	r29
    e600:	00 97       	sbiw	r24, 0x00	; 0
    e602:	09 f4       	brne	.+2      	; 0xe606 <free+0xa>
    e604:	81 c0       	rjmp	.+258    	; 0xe708 <free+0x10c>
    e606:	fc 01       	movw	r30, r24
    e608:	32 97       	sbiw	r30, 0x02	; 2
    e60a:	12 82       	std	Z+2, r1	; 0x02
    e60c:	13 82       	std	Z+3, r1	; 0x03
    e60e:	a0 91 e9 4a 	lds	r26, 0x4AE9	; 0x804ae9 <__flp>
    e612:	b0 91 ea 4a 	lds	r27, 0x4AEA	; 0x804aea <__flp+0x1>
    e616:	10 97       	sbiw	r26, 0x00	; 0
    e618:	81 f4       	brne	.+32     	; 0xe63a <free+0x3e>
    e61a:	20 81       	ld	r18, Z
    e61c:	31 81       	ldd	r19, Z+1	; 0x01
    e61e:	82 0f       	add	r24, r18
    e620:	93 1f       	adc	r25, r19
    e622:	20 91 e7 4a 	lds	r18, 0x4AE7	; 0x804ae7 <__brkval>
    e626:	30 91 e8 4a 	lds	r19, 0x4AE8	; 0x804ae8 <__brkval+0x1>
    e62a:	28 17       	cp	r18, r24
    e62c:	39 07       	cpc	r19, r25
    e62e:	51 f5       	brne	.+84     	; 0xe684 <free+0x88>
    e630:	e0 93 e7 4a 	sts	0x4AE7, r30	; 0x804ae7 <__brkval>
    e634:	f0 93 e8 4a 	sts	0x4AE8, r31	; 0x804ae8 <__brkval+0x1>
    e638:	67 c0       	rjmp	.+206    	; 0xe708 <free+0x10c>
    e63a:	ed 01       	movw	r28, r26
    e63c:	20 e0       	ldi	r18, 0x00	; 0
    e63e:	30 e0       	ldi	r19, 0x00	; 0
    e640:	ce 17       	cp	r28, r30
    e642:	df 07       	cpc	r29, r31
    e644:	40 f4       	brcc	.+16     	; 0xe656 <free+0x5a>
    e646:	4a 81       	ldd	r20, Y+2	; 0x02
    e648:	5b 81       	ldd	r21, Y+3	; 0x03
    e64a:	9e 01       	movw	r18, r28
    e64c:	41 15       	cp	r20, r1
    e64e:	51 05       	cpc	r21, r1
    e650:	f1 f0       	breq	.+60     	; 0xe68e <free+0x92>
    e652:	ea 01       	movw	r28, r20
    e654:	f5 cf       	rjmp	.-22     	; 0xe640 <free+0x44>
    e656:	c2 83       	std	Z+2, r28	; 0x02
    e658:	d3 83       	std	Z+3, r29	; 0x03
    e65a:	40 81       	ld	r20, Z
    e65c:	51 81       	ldd	r21, Z+1	; 0x01
    e65e:	84 0f       	add	r24, r20
    e660:	95 1f       	adc	r25, r21
    e662:	c8 17       	cp	r28, r24
    e664:	d9 07       	cpc	r29, r25
    e666:	59 f4       	brne	.+22     	; 0xe67e <free+0x82>
    e668:	88 81       	ld	r24, Y
    e66a:	99 81       	ldd	r25, Y+1	; 0x01
    e66c:	84 0f       	add	r24, r20
    e66e:	95 1f       	adc	r25, r21
    e670:	02 96       	adiw	r24, 0x02	; 2
    e672:	80 83       	st	Z, r24
    e674:	91 83       	std	Z+1, r25	; 0x01
    e676:	8a 81       	ldd	r24, Y+2	; 0x02
    e678:	9b 81       	ldd	r25, Y+3	; 0x03
    e67a:	82 83       	std	Z+2, r24	; 0x02
    e67c:	93 83       	std	Z+3, r25	; 0x03
    e67e:	21 15       	cp	r18, r1
    e680:	31 05       	cpc	r19, r1
    e682:	29 f4       	brne	.+10     	; 0xe68e <free+0x92>
    e684:	e0 93 e9 4a 	sts	0x4AE9, r30	; 0x804ae9 <__flp>
    e688:	f0 93 ea 4a 	sts	0x4AEA, r31	; 0x804aea <__flp+0x1>
    e68c:	3d c0       	rjmp	.+122    	; 0xe708 <free+0x10c>
    e68e:	e9 01       	movw	r28, r18
    e690:	ea 83       	std	Y+2, r30	; 0x02
    e692:	fb 83       	std	Y+3, r31	; 0x03
    e694:	49 91       	ld	r20, Y+
    e696:	59 91       	ld	r21, Y+
    e698:	c4 0f       	add	r28, r20
    e69a:	d5 1f       	adc	r29, r21
    e69c:	ec 17       	cp	r30, r28
    e69e:	fd 07       	cpc	r31, r29
    e6a0:	61 f4       	brne	.+24     	; 0xe6ba <free+0xbe>
    e6a2:	80 81       	ld	r24, Z
    e6a4:	91 81       	ldd	r25, Z+1	; 0x01
    e6a6:	84 0f       	add	r24, r20
    e6a8:	95 1f       	adc	r25, r21
    e6aa:	02 96       	adiw	r24, 0x02	; 2
    e6ac:	e9 01       	movw	r28, r18
    e6ae:	88 83       	st	Y, r24
    e6b0:	99 83       	std	Y+1, r25	; 0x01
    e6b2:	82 81       	ldd	r24, Z+2	; 0x02
    e6b4:	93 81       	ldd	r25, Z+3	; 0x03
    e6b6:	8a 83       	std	Y+2, r24	; 0x02
    e6b8:	9b 83       	std	Y+3, r25	; 0x03
    e6ba:	e0 e0       	ldi	r30, 0x00	; 0
    e6bc:	f0 e0       	ldi	r31, 0x00	; 0
    e6be:	12 96       	adiw	r26, 0x02	; 2
    e6c0:	8d 91       	ld	r24, X+
    e6c2:	9c 91       	ld	r25, X
    e6c4:	13 97       	sbiw	r26, 0x03	; 3
    e6c6:	00 97       	sbiw	r24, 0x00	; 0
    e6c8:	19 f0       	breq	.+6      	; 0xe6d0 <free+0xd4>
    e6ca:	fd 01       	movw	r30, r26
    e6cc:	dc 01       	movw	r26, r24
    e6ce:	f7 cf       	rjmp	.-18     	; 0xe6be <free+0xc2>
    e6d0:	8d 91       	ld	r24, X+
    e6d2:	9c 91       	ld	r25, X
    e6d4:	11 97       	sbiw	r26, 0x01	; 1
    e6d6:	9d 01       	movw	r18, r26
    e6d8:	2e 5f       	subi	r18, 0xFE	; 254
    e6da:	3f 4f       	sbci	r19, 0xFF	; 255
    e6dc:	82 0f       	add	r24, r18
    e6de:	93 1f       	adc	r25, r19
    e6e0:	20 91 e7 4a 	lds	r18, 0x4AE7	; 0x804ae7 <__brkval>
    e6e4:	30 91 e8 4a 	lds	r19, 0x4AE8	; 0x804ae8 <__brkval+0x1>
    e6e8:	28 17       	cp	r18, r24
    e6ea:	39 07       	cpc	r19, r25
    e6ec:	69 f4       	brne	.+26     	; 0xe708 <free+0x10c>
    e6ee:	30 97       	sbiw	r30, 0x00	; 0
    e6f0:	29 f4       	brne	.+10     	; 0xe6fc <free+0x100>
    e6f2:	10 92 e9 4a 	sts	0x4AE9, r1	; 0x804ae9 <__flp>
    e6f6:	10 92 ea 4a 	sts	0x4AEA, r1	; 0x804aea <__flp+0x1>
    e6fa:	02 c0       	rjmp	.+4      	; 0xe700 <free+0x104>
    e6fc:	12 82       	std	Z+2, r1	; 0x02
    e6fe:	13 82       	std	Z+3, r1	; 0x03
    e700:	a0 93 e7 4a 	sts	0x4AE7, r26	; 0x804ae7 <__brkval>
    e704:	b0 93 e8 4a 	sts	0x4AE8, r27	; 0x804ae8 <__brkval+0x1>
    e708:	df 91       	pop	r29
    e70a:	cf 91       	pop	r28
    e70c:	08 95       	ret

0000e70e <atof>:
    e70e:	66 27       	eor	r22, r22
    e710:	77 27       	eor	r23, r23
    e712:	0c 94 5e 76 	jmp	0xecbc	; 0xecbc <strtod>

0000e716 <atoi>:
    e716:	fc 01       	movw	r30, r24
    e718:	88 27       	eor	r24, r24
    e71a:	99 27       	eor	r25, r25
    e71c:	e8 94       	clt
    e71e:	21 91       	ld	r18, Z+
    e720:	20 32       	cpi	r18, 0x20	; 32
    e722:	e9 f3       	breq	.-6      	; 0xe71e <atoi+0x8>
    e724:	29 30       	cpi	r18, 0x09	; 9
    e726:	10 f0       	brcs	.+4      	; 0xe72c <atoi+0x16>
    e728:	2e 30       	cpi	r18, 0x0E	; 14
    e72a:	c8 f3       	brcs	.-14     	; 0xe71e <atoi+0x8>
    e72c:	2b 32       	cpi	r18, 0x2B	; 43
    e72e:	41 f0       	breq	.+16     	; 0xe740 <atoi+0x2a>
    e730:	2d 32       	cpi	r18, 0x2D	; 45
    e732:	39 f4       	brne	.+14     	; 0xe742 <atoi+0x2c>
    e734:	68 94       	set
    e736:	04 c0       	rjmp	.+8      	; 0xe740 <atoi+0x2a>
    e738:	0e 94 29 74 	call	0xe852	; 0xe852 <__mulhi_const_10>
    e73c:	82 0f       	add	r24, r18
    e73e:	91 1d       	adc	r25, r1
    e740:	21 91       	ld	r18, Z+
    e742:	20 53       	subi	r18, 0x30	; 48
    e744:	2a 30       	cpi	r18, 0x0A	; 10
    e746:	c0 f3       	brcs	.-16     	; 0xe738 <atoi+0x22>
    e748:	1e f4       	brtc	.+6      	; 0xe750 <atoi+0x3a>
    e74a:	90 95       	com	r25
    e74c:	81 95       	neg	r24
    e74e:	9f 4f       	sbci	r25, 0xFF	; 255
    e750:	08 95       	ret

0000e752 <atol>:
    e752:	1f 93       	push	r17
    e754:	fc 01       	movw	r30, r24
    e756:	99 27       	eor	r25, r25
    e758:	88 27       	eor	r24, r24
    e75a:	bc 01       	movw	r22, r24
    e75c:	e8 94       	clt
    e75e:	11 91       	ld	r17, Z+
    e760:	10 32       	cpi	r17, 0x20	; 32
    e762:	e9 f3       	breq	.-6      	; 0xe75e <atol+0xc>
    e764:	19 30       	cpi	r17, 0x09	; 9
    e766:	10 f0       	brcs	.+4      	; 0xe76c <atol+0x1a>
    e768:	1e 30       	cpi	r17, 0x0E	; 14
    e76a:	c8 f3       	brcs	.-14     	; 0xe75e <atol+0xc>
    e76c:	1b 32       	cpi	r17, 0x2B	; 43
    e76e:	51 f0       	breq	.+20     	; 0xe784 <atol+0x32>
    e770:	1d 32       	cpi	r17, 0x2D	; 45
    e772:	49 f4       	brne	.+18     	; 0xe786 <atol+0x34>
    e774:	68 94       	set
    e776:	06 c0       	rjmp	.+12     	; 0xe784 <atol+0x32>
    e778:	0e 94 14 74 	call	0xe828	; 0xe828 <__mulsi_const_10>
    e77c:	61 0f       	add	r22, r17
    e77e:	71 1d       	adc	r23, r1
    e780:	81 1d       	adc	r24, r1
    e782:	91 1d       	adc	r25, r1
    e784:	11 91       	ld	r17, Z+
    e786:	10 53       	subi	r17, 0x30	; 48
    e788:	1a 30       	cpi	r17, 0x0A	; 10
    e78a:	b0 f3       	brcs	.-20     	; 0xe778 <atol+0x26>
    e78c:	3e f4       	brtc	.+14     	; 0xe79c <atol+0x4a>
    e78e:	90 95       	com	r25
    e790:	80 95       	com	r24
    e792:	70 95       	com	r23
    e794:	61 95       	neg	r22
    e796:	7f 4f       	sbci	r23, 0xFF	; 255
    e798:	8f 4f       	sbci	r24, 0xFF	; 255
    e79a:	9f 4f       	sbci	r25, 0xFF	; 255
    e79c:	1f 91       	pop	r17
    e79e:	08 95       	ret

0000e7a0 <toupper>:
    e7a0:	91 11       	cpse	r25, r1
    e7a2:	08 95       	ret
    e7a4:	81 56       	subi	r24, 0x61	; 97
    e7a6:	8a 51       	subi	r24, 0x1A	; 26
    e7a8:	08 f4       	brcc	.+2      	; 0xe7ac <toupper+0xc>
    e7aa:	80 52       	subi	r24, 0x20	; 32
    e7ac:	85 58       	subi	r24, 0x85	; 133
    e7ae:	08 95       	ret

0000e7b0 <memset>:
    e7b0:	dc 01       	movw	r26, r24
    e7b2:	01 c0       	rjmp	.+2      	; 0xe7b6 <memset+0x6>
    e7b4:	6d 93       	st	X+, r22
    e7b6:	41 50       	subi	r20, 0x01	; 1
    e7b8:	50 40       	sbci	r21, 0x00	; 0
    e7ba:	e0 f7       	brcc	.-8      	; 0xe7b4 <memset+0x4>
    e7bc:	08 95       	ret

0000e7be <strcat>:
    e7be:	fb 01       	movw	r30, r22
    e7c0:	dc 01       	movw	r26, r24
    e7c2:	0d 90       	ld	r0, X+
    e7c4:	00 20       	and	r0, r0
    e7c6:	e9 f7       	brne	.-6      	; 0xe7c2 <strcat+0x4>
    e7c8:	11 97       	sbiw	r26, 0x01	; 1
    e7ca:	01 90       	ld	r0, Z+
    e7cc:	0d 92       	st	X+, r0
    e7ce:	00 20       	and	r0, r0
    e7d0:	e1 f7       	brne	.-8      	; 0xe7ca <strcat+0xc>
    e7d2:	08 95       	ret

0000e7d4 <strchr>:
    e7d4:	fc 01       	movw	r30, r24
    e7d6:	81 91       	ld	r24, Z+
    e7d8:	86 17       	cp	r24, r22
    e7da:	21 f0       	breq	.+8      	; 0xe7e4 <strchr+0x10>
    e7dc:	88 23       	and	r24, r24
    e7de:	d9 f7       	brne	.-10     	; 0xe7d6 <strchr+0x2>
    e7e0:	99 27       	eor	r25, r25
    e7e2:	08 95       	ret
    e7e4:	31 97       	sbiw	r30, 0x01	; 1
    e7e6:	cf 01       	movw	r24, r30
    e7e8:	08 95       	ret

0000e7ea <strcpy>:
    e7ea:	fb 01       	movw	r30, r22
    e7ec:	dc 01       	movw	r26, r24
    e7ee:	01 90       	ld	r0, Z+
    e7f0:	0d 92       	st	X+, r0
    e7f2:	00 20       	and	r0, r0
    e7f4:	e1 f7       	brne	.-8      	; 0xe7ee <strcpy+0x4>
    e7f6:	08 95       	ret

0000e7f8 <strlen>:
    e7f8:	fc 01       	movw	r30, r24
    e7fa:	01 90       	ld	r0, Z+
    e7fc:	00 20       	and	r0, r0
    e7fe:	e9 f7       	brne	.-6      	; 0xe7fa <strlen+0x2>
    e800:	80 95       	com	r24
    e802:	90 95       	com	r25
    e804:	8e 0f       	add	r24, r30
    e806:	9f 1f       	adc	r25, r31
    e808:	08 95       	ret

0000e80a <strncpy>:
    e80a:	fb 01       	movw	r30, r22
    e80c:	dc 01       	movw	r26, r24
    e80e:	41 50       	subi	r20, 0x01	; 1
    e810:	50 40       	sbci	r21, 0x00	; 0
    e812:	48 f0       	brcs	.+18     	; 0xe826 <strncpy+0x1c>
    e814:	01 90       	ld	r0, Z+
    e816:	0d 92       	st	X+, r0
    e818:	00 20       	and	r0, r0
    e81a:	c9 f7       	brne	.-14     	; 0xe80e <strncpy+0x4>
    e81c:	01 c0       	rjmp	.+2      	; 0xe820 <strncpy+0x16>
    e81e:	1d 92       	st	X+, r1
    e820:	41 50       	subi	r20, 0x01	; 1
    e822:	50 40       	sbci	r21, 0x00	; 0
    e824:	e0 f7       	brcc	.-8      	; 0xe81e <strncpy+0x14>
    e826:	08 95       	ret

0000e828 <__mulsi_const_10>:
    e828:	59 2f       	mov	r21, r25
    e82a:	48 2f       	mov	r20, r24
    e82c:	37 2f       	mov	r19, r23
    e82e:	26 2f       	mov	r18, r22
    e830:	66 0f       	add	r22, r22
    e832:	77 1f       	adc	r23, r23
    e834:	88 1f       	adc	r24, r24
    e836:	99 1f       	adc	r25, r25
    e838:	66 0f       	add	r22, r22
    e83a:	77 1f       	adc	r23, r23
    e83c:	88 1f       	adc	r24, r24
    e83e:	99 1f       	adc	r25, r25
    e840:	62 0f       	add	r22, r18
    e842:	73 1f       	adc	r23, r19
    e844:	84 1f       	adc	r24, r20
    e846:	95 1f       	adc	r25, r21
    e848:	66 0f       	add	r22, r22
    e84a:	77 1f       	adc	r23, r23
    e84c:	88 1f       	adc	r24, r24
    e84e:	99 1f       	adc	r25, r25
    e850:	08 95       	ret

0000e852 <__mulhi_const_10>:
    e852:	7a e0       	ldi	r23, 0x0A	; 10
    e854:	97 9f       	mul	r25, r23
    e856:	90 2d       	mov	r25, r0
    e858:	87 9f       	mul	r24, r23
    e85a:	80 2d       	mov	r24, r0
    e85c:	91 0d       	add	r25, r1
    e85e:	11 24       	eor	r1, r1
    e860:	08 95       	ret

0000e862 <sprintf>:
    e862:	0f 93       	push	r16
    e864:	1f 93       	push	r17
    e866:	cf 93       	push	r28
    e868:	df 93       	push	r29
    e86a:	cd b7       	in	r28, 0x3d	; 61
    e86c:	de b7       	in	r29, 0x3e	; 62
    e86e:	2e 97       	sbiw	r28, 0x0e	; 14
    e870:	cd bf       	out	0x3d, r28	; 61
    e872:	de bf       	out	0x3e, r29	; 62
    e874:	0d 89       	ldd	r16, Y+21	; 0x15
    e876:	1e 89       	ldd	r17, Y+22	; 0x16
    e878:	86 e0       	ldi	r24, 0x06	; 6
    e87a:	8c 83       	std	Y+4, r24	; 0x04
    e87c:	09 83       	std	Y+1, r16	; 0x01
    e87e:	1a 83       	std	Y+2, r17	; 0x02
    e880:	8f ef       	ldi	r24, 0xFF	; 255
    e882:	9f e7       	ldi	r25, 0x7F	; 127
    e884:	8d 83       	std	Y+5, r24	; 0x05
    e886:	9e 83       	std	Y+6, r25	; 0x06
    e888:	ae 01       	movw	r20, r28
    e88a:	47 5e       	subi	r20, 0xE7	; 231
    e88c:	5f 4f       	sbci	r21, 0xFF	; 255
    e88e:	6f 89       	ldd	r22, Y+23	; 0x17
    e890:	78 8d       	ldd	r23, Y+24	; 0x18
    e892:	ce 01       	movw	r24, r28
    e894:	01 96       	adiw	r24, 0x01	; 1
    e896:	0e 94 5a 74 	call	0xe8b4	; 0xe8b4 <vfprintf>
    e89a:	ef 81       	ldd	r30, Y+7	; 0x07
    e89c:	f8 85       	ldd	r31, Y+8	; 0x08
    e89e:	e0 0f       	add	r30, r16
    e8a0:	f1 1f       	adc	r31, r17
    e8a2:	10 82       	st	Z, r1
    e8a4:	2e 96       	adiw	r28, 0x0e	; 14
    e8a6:	cd bf       	out	0x3d, r28	; 61
    e8a8:	de bf       	out	0x3e, r29	; 62
    e8aa:	df 91       	pop	r29
    e8ac:	cf 91       	pop	r28
    e8ae:	1f 91       	pop	r17
    e8b0:	0f 91       	pop	r16
    e8b2:	08 95       	ret

0000e8b4 <vfprintf>:
    e8b4:	2f 92       	push	r2
    e8b6:	3f 92       	push	r3
    e8b8:	4f 92       	push	r4
    e8ba:	5f 92       	push	r5
    e8bc:	6f 92       	push	r6
    e8be:	7f 92       	push	r7
    e8c0:	8f 92       	push	r8
    e8c2:	9f 92       	push	r9
    e8c4:	af 92       	push	r10
    e8c6:	bf 92       	push	r11
    e8c8:	cf 92       	push	r12
    e8ca:	df 92       	push	r13
    e8cc:	ef 92       	push	r14
    e8ce:	ff 92       	push	r15
    e8d0:	0f 93       	push	r16
    e8d2:	1f 93       	push	r17
    e8d4:	cf 93       	push	r28
    e8d6:	df 93       	push	r29
    e8d8:	cd b7       	in	r28, 0x3d	; 61
    e8da:	de b7       	in	r29, 0x3e	; 62
    e8dc:	2b 97       	sbiw	r28, 0x0b	; 11
    e8de:	cd bf       	out	0x3d, r28	; 61
    e8e0:	de bf       	out	0x3e, r29	; 62
    e8e2:	6c 01       	movw	r12, r24
    e8e4:	7b 01       	movw	r14, r22
    e8e6:	8a 01       	movw	r16, r20
    e8e8:	fc 01       	movw	r30, r24
    e8ea:	16 82       	std	Z+6, r1	; 0x06
    e8ec:	17 82       	std	Z+7, r1	; 0x07
    e8ee:	83 81       	ldd	r24, Z+3	; 0x03
    e8f0:	81 ff       	sbrs	r24, 1
    e8f2:	cc c1       	rjmp	.+920    	; 0xec8c <vfprintf+0x3d8>
    e8f4:	ce 01       	movw	r24, r28
    e8f6:	01 96       	adiw	r24, 0x01	; 1
    e8f8:	3c 01       	movw	r6, r24
    e8fa:	f6 01       	movw	r30, r12
    e8fc:	93 81       	ldd	r25, Z+3	; 0x03
    e8fe:	f7 01       	movw	r30, r14
    e900:	93 fd       	sbrc	r25, 3
    e902:	85 91       	lpm	r24, Z+
    e904:	93 ff       	sbrs	r25, 3
    e906:	81 91       	ld	r24, Z+
    e908:	7f 01       	movw	r14, r30
    e90a:	88 23       	and	r24, r24
    e90c:	09 f4       	brne	.+2      	; 0xe910 <vfprintf+0x5c>
    e90e:	ba c1       	rjmp	.+884    	; 0xec84 <vfprintf+0x3d0>
    e910:	85 32       	cpi	r24, 0x25	; 37
    e912:	39 f4       	brne	.+14     	; 0xe922 <vfprintf+0x6e>
    e914:	93 fd       	sbrc	r25, 3
    e916:	85 91       	lpm	r24, Z+
    e918:	93 ff       	sbrs	r25, 3
    e91a:	81 91       	ld	r24, Z+
    e91c:	7f 01       	movw	r14, r30
    e91e:	85 32       	cpi	r24, 0x25	; 37
    e920:	29 f4       	brne	.+10     	; 0xe92c <vfprintf+0x78>
    e922:	b6 01       	movw	r22, r12
    e924:	90 e0       	ldi	r25, 0x00	; 0
    e926:	0e 94 f1 77 	call	0xefe2	; 0xefe2 <fputc>
    e92a:	e7 cf       	rjmp	.-50     	; 0xe8fa <vfprintf+0x46>
    e92c:	91 2c       	mov	r9, r1
    e92e:	21 2c       	mov	r2, r1
    e930:	31 2c       	mov	r3, r1
    e932:	ff e1       	ldi	r31, 0x1F	; 31
    e934:	f3 15       	cp	r31, r3
    e936:	d8 f0       	brcs	.+54     	; 0xe96e <vfprintf+0xba>
    e938:	8b 32       	cpi	r24, 0x2B	; 43
    e93a:	79 f0       	breq	.+30     	; 0xe95a <vfprintf+0xa6>
    e93c:	38 f4       	brcc	.+14     	; 0xe94c <vfprintf+0x98>
    e93e:	80 32       	cpi	r24, 0x20	; 32
    e940:	79 f0       	breq	.+30     	; 0xe960 <vfprintf+0xac>
    e942:	83 32       	cpi	r24, 0x23	; 35
    e944:	a1 f4       	brne	.+40     	; 0xe96e <vfprintf+0xba>
    e946:	23 2d       	mov	r18, r3
    e948:	20 61       	ori	r18, 0x10	; 16
    e94a:	1d c0       	rjmp	.+58     	; 0xe986 <vfprintf+0xd2>
    e94c:	8d 32       	cpi	r24, 0x2D	; 45
    e94e:	61 f0       	breq	.+24     	; 0xe968 <vfprintf+0xb4>
    e950:	80 33       	cpi	r24, 0x30	; 48
    e952:	69 f4       	brne	.+26     	; 0xe96e <vfprintf+0xba>
    e954:	23 2d       	mov	r18, r3
    e956:	21 60       	ori	r18, 0x01	; 1
    e958:	16 c0       	rjmp	.+44     	; 0xe986 <vfprintf+0xd2>
    e95a:	83 2d       	mov	r24, r3
    e95c:	82 60       	ori	r24, 0x02	; 2
    e95e:	38 2e       	mov	r3, r24
    e960:	e3 2d       	mov	r30, r3
    e962:	e4 60       	ori	r30, 0x04	; 4
    e964:	3e 2e       	mov	r3, r30
    e966:	2a c0       	rjmp	.+84     	; 0xe9bc <vfprintf+0x108>
    e968:	f3 2d       	mov	r31, r3
    e96a:	f8 60       	ori	r31, 0x08	; 8
    e96c:	1d c0       	rjmp	.+58     	; 0xe9a8 <vfprintf+0xf4>
    e96e:	37 fc       	sbrc	r3, 7
    e970:	2d c0       	rjmp	.+90     	; 0xe9cc <vfprintf+0x118>
    e972:	20 ed       	ldi	r18, 0xD0	; 208
    e974:	28 0f       	add	r18, r24
    e976:	2a 30       	cpi	r18, 0x0A	; 10
    e978:	40 f0       	brcs	.+16     	; 0xe98a <vfprintf+0xd6>
    e97a:	8e 32       	cpi	r24, 0x2E	; 46
    e97c:	b9 f4       	brne	.+46     	; 0xe9ac <vfprintf+0xf8>
    e97e:	36 fc       	sbrc	r3, 6
    e980:	81 c1       	rjmp	.+770    	; 0xec84 <vfprintf+0x3d0>
    e982:	23 2d       	mov	r18, r3
    e984:	20 64       	ori	r18, 0x40	; 64
    e986:	32 2e       	mov	r3, r18
    e988:	19 c0       	rjmp	.+50     	; 0xe9bc <vfprintf+0x108>
    e98a:	36 fe       	sbrs	r3, 6
    e98c:	06 c0       	rjmp	.+12     	; 0xe99a <vfprintf+0xe6>
    e98e:	8a e0       	ldi	r24, 0x0A	; 10
    e990:	98 9e       	mul	r9, r24
    e992:	20 0d       	add	r18, r0
    e994:	11 24       	eor	r1, r1
    e996:	92 2e       	mov	r9, r18
    e998:	11 c0       	rjmp	.+34     	; 0xe9bc <vfprintf+0x108>
    e99a:	ea e0       	ldi	r30, 0x0A	; 10
    e99c:	2e 9e       	mul	r2, r30
    e99e:	20 0d       	add	r18, r0
    e9a0:	11 24       	eor	r1, r1
    e9a2:	22 2e       	mov	r2, r18
    e9a4:	f3 2d       	mov	r31, r3
    e9a6:	f0 62       	ori	r31, 0x20	; 32
    e9a8:	3f 2e       	mov	r3, r31
    e9aa:	08 c0       	rjmp	.+16     	; 0xe9bc <vfprintf+0x108>
    e9ac:	8c 36       	cpi	r24, 0x6C	; 108
    e9ae:	21 f4       	brne	.+8      	; 0xe9b8 <vfprintf+0x104>
    e9b0:	83 2d       	mov	r24, r3
    e9b2:	80 68       	ori	r24, 0x80	; 128
    e9b4:	38 2e       	mov	r3, r24
    e9b6:	02 c0       	rjmp	.+4      	; 0xe9bc <vfprintf+0x108>
    e9b8:	88 36       	cpi	r24, 0x68	; 104
    e9ba:	41 f4       	brne	.+16     	; 0xe9cc <vfprintf+0x118>
    e9bc:	f7 01       	movw	r30, r14
    e9be:	93 fd       	sbrc	r25, 3
    e9c0:	85 91       	lpm	r24, Z+
    e9c2:	93 ff       	sbrs	r25, 3
    e9c4:	81 91       	ld	r24, Z+
    e9c6:	7f 01       	movw	r14, r30
    e9c8:	81 11       	cpse	r24, r1
    e9ca:	b3 cf       	rjmp	.-154    	; 0xe932 <vfprintf+0x7e>
    e9cc:	98 2f       	mov	r25, r24
    e9ce:	9f 7d       	andi	r25, 0xDF	; 223
    e9d0:	95 54       	subi	r25, 0x45	; 69
    e9d2:	93 30       	cpi	r25, 0x03	; 3
    e9d4:	28 f4       	brcc	.+10     	; 0xe9e0 <vfprintf+0x12c>
    e9d6:	0c 5f       	subi	r16, 0xFC	; 252
    e9d8:	1f 4f       	sbci	r17, 0xFF	; 255
    e9da:	9f e3       	ldi	r25, 0x3F	; 63
    e9dc:	99 83       	std	Y+1, r25	; 0x01
    e9de:	0d c0       	rjmp	.+26     	; 0xe9fa <vfprintf+0x146>
    e9e0:	83 36       	cpi	r24, 0x63	; 99
    e9e2:	31 f0       	breq	.+12     	; 0xe9f0 <vfprintf+0x13c>
    e9e4:	83 37       	cpi	r24, 0x73	; 115
    e9e6:	71 f0       	breq	.+28     	; 0xea04 <vfprintf+0x150>
    e9e8:	83 35       	cpi	r24, 0x53	; 83
    e9ea:	09 f0       	breq	.+2      	; 0xe9ee <vfprintf+0x13a>
    e9ec:	59 c0       	rjmp	.+178    	; 0xeaa0 <vfprintf+0x1ec>
    e9ee:	21 c0       	rjmp	.+66     	; 0xea32 <vfprintf+0x17e>
    e9f0:	f8 01       	movw	r30, r16
    e9f2:	80 81       	ld	r24, Z
    e9f4:	89 83       	std	Y+1, r24	; 0x01
    e9f6:	0e 5f       	subi	r16, 0xFE	; 254
    e9f8:	1f 4f       	sbci	r17, 0xFF	; 255
    e9fa:	88 24       	eor	r8, r8
    e9fc:	83 94       	inc	r8
    e9fe:	91 2c       	mov	r9, r1
    ea00:	53 01       	movw	r10, r6
    ea02:	13 c0       	rjmp	.+38     	; 0xea2a <vfprintf+0x176>
    ea04:	28 01       	movw	r4, r16
    ea06:	f2 e0       	ldi	r31, 0x02	; 2
    ea08:	4f 0e       	add	r4, r31
    ea0a:	51 1c       	adc	r5, r1
    ea0c:	f8 01       	movw	r30, r16
    ea0e:	a0 80       	ld	r10, Z
    ea10:	b1 80       	ldd	r11, Z+1	; 0x01
    ea12:	36 fe       	sbrs	r3, 6
    ea14:	03 c0       	rjmp	.+6      	; 0xea1c <vfprintf+0x168>
    ea16:	69 2d       	mov	r22, r9
    ea18:	70 e0       	ldi	r23, 0x00	; 0
    ea1a:	02 c0       	rjmp	.+4      	; 0xea20 <vfprintf+0x16c>
    ea1c:	6f ef       	ldi	r22, 0xFF	; 255
    ea1e:	7f ef       	ldi	r23, 0xFF	; 255
    ea20:	c5 01       	movw	r24, r10
    ea22:	0e 94 e6 77 	call	0xefcc	; 0xefcc <strnlen>
    ea26:	4c 01       	movw	r8, r24
    ea28:	82 01       	movw	r16, r4
    ea2a:	f3 2d       	mov	r31, r3
    ea2c:	ff 77       	andi	r31, 0x7F	; 127
    ea2e:	3f 2e       	mov	r3, r31
    ea30:	16 c0       	rjmp	.+44     	; 0xea5e <vfprintf+0x1aa>
    ea32:	28 01       	movw	r4, r16
    ea34:	22 e0       	ldi	r18, 0x02	; 2
    ea36:	42 0e       	add	r4, r18
    ea38:	51 1c       	adc	r5, r1
    ea3a:	f8 01       	movw	r30, r16
    ea3c:	a0 80       	ld	r10, Z
    ea3e:	b1 80       	ldd	r11, Z+1	; 0x01
    ea40:	36 fe       	sbrs	r3, 6
    ea42:	03 c0       	rjmp	.+6      	; 0xea4a <vfprintf+0x196>
    ea44:	69 2d       	mov	r22, r9
    ea46:	70 e0       	ldi	r23, 0x00	; 0
    ea48:	02 c0       	rjmp	.+4      	; 0xea4e <vfprintf+0x19a>
    ea4a:	6f ef       	ldi	r22, 0xFF	; 255
    ea4c:	7f ef       	ldi	r23, 0xFF	; 255
    ea4e:	c5 01       	movw	r24, r10
    ea50:	0e 94 db 77 	call	0xefb6	; 0xefb6 <strnlen_P>
    ea54:	4c 01       	movw	r8, r24
    ea56:	f3 2d       	mov	r31, r3
    ea58:	f0 68       	ori	r31, 0x80	; 128
    ea5a:	3f 2e       	mov	r3, r31
    ea5c:	82 01       	movw	r16, r4
    ea5e:	33 fc       	sbrc	r3, 3
    ea60:	1b c0       	rjmp	.+54     	; 0xea98 <vfprintf+0x1e4>
    ea62:	82 2d       	mov	r24, r2
    ea64:	90 e0       	ldi	r25, 0x00	; 0
    ea66:	88 16       	cp	r8, r24
    ea68:	99 06       	cpc	r9, r25
    ea6a:	b0 f4       	brcc	.+44     	; 0xea98 <vfprintf+0x1e4>
    ea6c:	b6 01       	movw	r22, r12
    ea6e:	80 e2       	ldi	r24, 0x20	; 32
    ea70:	90 e0       	ldi	r25, 0x00	; 0
    ea72:	0e 94 f1 77 	call	0xefe2	; 0xefe2 <fputc>
    ea76:	2a 94       	dec	r2
    ea78:	f4 cf       	rjmp	.-24     	; 0xea62 <vfprintf+0x1ae>
    ea7a:	f5 01       	movw	r30, r10
    ea7c:	37 fc       	sbrc	r3, 7
    ea7e:	85 91       	lpm	r24, Z+
    ea80:	37 fe       	sbrs	r3, 7
    ea82:	81 91       	ld	r24, Z+
    ea84:	5f 01       	movw	r10, r30
    ea86:	b6 01       	movw	r22, r12
    ea88:	90 e0       	ldi	r25, 0x00	; 0
    ea8a:	0e 94 f1 77 	call	0xefe2	; 0xefe2 <fputc>
    ea8e:	21 10       	cpse	r2, r1
    ea90:	2a 94       	dec	r2
    ea92:	21 e0       	ldi	r18, 0x01	; 1
    ea94:	82 1a       	sub	r8, r18
    ea96:	91 08       	sbc	r9, r1
    ea98:	81 14       	cp	r8, r1
    ea9a:	91 04       	cpc	r9, r1
    ea9c:	71 f7       	brne	.-36     	; 0xea7a <vfprintf+0x1c6>
    ea9e:	e8 c0       	rjmp	.+464    	; 0xec70 <vfprintf+0x3bc>
    eaa0:	84 36       	cpi	r24, 0x64	; 100
    eaa2:	11 f0       	breq	.+4      	; 0xeaa8 <vfprintf+0x1f4>
    eaa4:	89 36       	cpi	r24, 0x69	; 105
    eaa6:	41 f5       	brne	.+80     	; 0xeaf8 <vfprintf+0x244>
    eaa8:	f8 01       	movw	r30, r16
    eaaa:	37 fe       	sbrs	r3, 7
    eaac:	07 c0       	rjmp	.+14     	; 0xeabc <vfprintf+0x208>
    eaae:	60 81       	ld	r22, Z
    eab0:	71 81       	ldd	r23, Z+1	; 0x01
    eab2:	82 81       	ldd	r24, Z+2	; 0x02
    eab4:	93 81       	ldd	r25, Z+3	; 0x03
    eab6:	0c 5f       	subi	r16, 0xFC	; 252
    eab8:	1f 4f       	sbci	r17, 0xFF	; 255
    eaba:	08 c0       	rjmp	.+16     	; 0xeacc <vfprintf+0x218>
    eabc:	60 81       	ld	r22, Z
    eabe:	71 81       	ldd	r23, Z+1	; 0x01
    eac0:	07 2e       	mov	r0, r23
    eac2:	00 0c       	add	r0, r0
    eac4:	88 0b       	sbc	r24, r24
    eac6:	99 0b       	sbc	r25, r25
    eac8:	0e 5f       	subi	r16, 0xFE	; 254
    eaca:	1f 4f       	sbci	r17, 0xFF	; 255
    eacc:	f3 2d       	mov	r31, r3
    eace:	ff 76       	andi	r31, 0x6F	; 111
    ead0:	3f 2e       	mov	r3, r31
    ead2:	97 ff       	sbrs	r25, 7
    ead4:	09 c0       	rjmp	.+18     	; 0xeae8 <vfprintf+0x234>
    ead6:	90 95       	com	r25
    ead8:	80 95       	com	r24
    eada:	70 95       	com	r23
    eadc:	61 95       	neg	r22
    eade:	7f 4f       	sbci	r23, 0xFF	; 255
    eae0:	8f 4f       	sbci	r24, 0xFF	; 255
    eae2:	9f 4f       	sbci	r25, 0xFF	; 255
    eae4:	f0 68       	ori	r31, 0x80	; 128
    eae6:	3f 2e       	mov	r3, r31
    eae8:	2a e0       	ldi	r18, 0x0A	; 10
    eaea:	30 e0       	ldi	r19, 0x00	; 0
    eaec:	a3 01       	movw	r20, r6
    eaee:	0e 94 2d 78 	call	0xf05a	; 0xf05a <__ultoa_invert>
    eaf2:	88 2e       	mov	r8, r24
    eaf4:	86 18       	sub	r8, r6
    eaf6:	45 c0       	rjmp	.+138    	; 0xeb82 <vfprintf+0x2ce>
    eaf8:	85 37       	cpi	r24, 0x75	; 117
    eafa:	31 f4       	brne	.+12     	; 0xeb08 <vfprintf+0x254>
    eafc:	23 2d       	mov	r18, r3
    eafe:	2f 7e       	andi	r18, 0xEF	; 239
    eb00:	b2 2e       	mov	r11, r18
    eb02:	2a e0       	ldi	r18, 0x0A	; 10
    eb04:	30 e0       	ldi	r19, 0x00	; 0
    eb06:	25 c0       	rjmp	.+74     	; 0xeb52 <vfprintf+0x29e>
    eb08:	93 2d       	mov	r25, r3
    eb0a:	99 7f       	andi	r25, 0xF9	; 249
    eb0c:	b9 2e       	mov	r11, r25
    eb0e:	8f 36       	cpi	r24, 0x6F	; 111
    eb10:	c1 f0       	breq	.+48     	; 0xeb42 <vfprintf+0x28e>
    eb12:	18 f4       	brcc	.+6      	; 0xeb1a <vfprintf+0x266>
    eb14:	88 35       	cpi	r24, 0x58	; 88
    eb16:	79 f0       	breq	.+30     	; 0xeb36 <vfprintf+0x282>
    eb18:	b5 c0       	rjmp	.+362    	; 0xec84 <vfprintf+0x3d0>
    eb1a:	80 37       	cpi	r24, 0x70	; 112
    eb1c:	19 f0       	breq	.+6      	; 0xeb24 <vfprintf+0x270>
    eb1e:	88 37       	cpi	r24, 0x78	; 120
    eb20:	21 f0       	breq	.+8      	; 0xeb2a <vfprintf+0x276>
    eb22:	b0 c0       	rjmp	.+352    	; 0xec84 <vfprintf+0x3d0>
    eb24:	e9 2f       	mov	r30, r25
    eb26:	e0 61       	ori	r30, 0x10	; 16
    eb28:	be 2e       	mov	r11, r30
    eb2a:	b4 fe       	sbrs	r11, 4
    eb2c:	0d c0       	rjmp	.+26     	; 0xeb48 <vfprintf+0x294>
    eb2e:	fb 2d       	mov	r31, r11
    eb30:	f4 60       	ori	r31, 0x04	; 4
    eb32:	bf 2e       	mov	r11, r31
    eb34:	09 c0       	rjmp	.+18     	; 0xeb48 <vfprintf+0x294>
    eb36:	34 fe       	sbrs	r3, 4
    eb38:	0a c0       	rjmp	.+20     	; 0xeb4e <vfprintf+0x29a>
    eb3a:	29 2f       	mov	r18, r25
    eb3c:	26 60       	ori	r18, 0x06	; 6
    eb3e:	b2 2e       	mov	r11, r18
    eb40:	06 c0       	rjmp	.+12     	; 0xeb4e <vfprintf+0x29a>
    eb42:	28 e0       	ldi	r18, 0x08	; 8
    eb44:	30 e0       	ldi	r19, 0x00	; 0
    eb46:	05 c0       	rjmp	.+10     	; 0xeb52 <vfprintf+0x29e>
    eb48:	20 e1       	ldi	r18, 0x10	; 16
    eb4a:	30 e0       	ldi	r19, 0x00	; 0
    eb4c:	02 c0       	rjmp	.+4      	; 0xeb52 <vfprintf+0x29e>
    eb4e:	20 e1       	ldi	r18, 0x10	; 16
    eb50:	32 e0       	ldi	r19, 0x02	; 2
    eb52:	f8 01       	movw	r30, r16
    eb54:	b7 fe       	sbrs	r11, 7
    eb56:	07 c0       	rjmp	.+14     	; 0xeb66 <vfprintf+0x2b2>
    eb58:	60 81       	ld	r22, Z
    eb5a:	71 81       	ldd	r23, Z+1	; 0x01
    eb5c:	82 81       	ldd	r24, Z+2	; 0x02
    eb5e:	93 81       	ldd	r25, Z+3	; 0x03
    eb60:	0c 5f       	subi	r16, 0xFC	; 252
    eb62:	1f 4f       	sbci	r17, 0xFF	; 255
    eb64:	06 c0       	rjmp	.+12     	; 0xeb72 <vfprintf+0x2be>
    eb66:	60 81       	ld	r22, Z
    eb68:	71 81       	ldd	r23, Z+1	; 0x01
    eb6a:	80 e0       	ldi	r24, 0x00	; 0
    eb6c:	90 e0       	ldi	r25, 0x00	; 0
    eb6e:	0e 5f       	subi	r16, 0xFE	; 254
    eb70:	1f 4f       	sbci	r17, 0xFF	; 255
    eb72:	a3 01       	movw	r20, r6
    eb74:	0e 94 2d 78 	call	0xf05a	; 0xf05a <__ultoa_invert>
    eb78:	88 2e       	mov	r8, r24
    eb7a:	86 18       	sub	r8, r6
    eb7c:	fb 2d       	mov	r31, r11
    eb7e:	ff 77       	andi	r31, 0x7F	; 127
    eb80:	3f 2e       	mov	r3, r31
    eb82:	36 fe       	sbrs	r3, 6
    eb84:	0d c0       	rjmp	.+26     	; 0xeba0 <vfprintf+0x2ec>
    eb86:	23 2d       	mov	r18, r3
    eb88:	2e 7f       	andi	r18, 0xFE	; 254
    eb8a:	a2 2e       	mov	r10, r18
    eb8c:	89 14       	cp	r8, r9
    eb8e:	58 f4       	brcc	.+22     	; 0xeba6 <vfprintf+0x2f2>
    eb90:	34 fe       	sbrs	r3, 4
    eb92:	0b c0       	rjmp	.+22     	; 0xebaa <vfprintf+0x2f6>
    eb94:	32 fc       	sbrc	r3, 2
    eb96:	09 c0       	rjmp	.+18     	; 0xebaa <vfprintf+0x2f6>
    eb98:	83 2d       	mov	r24, r3
    eb9a:	8e 7e       	andi	r24, 0xEE	; 238
    eb9c:	a8 2e       	mov	r10, r24
    eb9e:	05 c0       	rjmp	.+10     	; 0xebaa <vfprintf+0x2f6>
    eba0:	b8 2c       	mov	r11, r8
    eba2:	a3 2c       	mov	r10, r3
    eba4:	03 c0       	rjmp	.+6      	; 0xebac <vfprintf+0x2f8>
    eba6:	b8 2c       	mov	r11, r8
    eba8:	01 c0       	rjmp	.+2      	; 0xebac <vfprintf+0x2f8>
    ebaa:	b9 2c       	mov	r11, r9
    ebac:	a4 fe       	sbrs	r10, 4
    ebae:	0f c0       	rjmp	.+30     	; 0xebce <vfprintf+0x31a>
    ebb0:	fe 01       	movw	r30, r28
    ebb2:	e8 0d       	add	r30, r8
    ebb4:	f1 1d       	adc	r31, r1
    ebb6:	80 81       	ld	r24, Z
    ebb8:	80 33       	cpi	r24, 0x30	; 48
    ebba:	21 f4       	brne	.+8      	; 0xebc4 <vfprintf+0x310>
    ebbc:	9a 2d       	mov	r25, r10
    ebbe:	99 7e       	andi	r25, 0xE9	; 233
    ebc0:	a9 2e       	mov	r10, r25
    ebc2:	09 c0       	rjmp	.+18     	; 0xebd6 <vfprintf+0x322>
    ebc4:	a2 fe       	sbrs	r10, 2
    ebc6:	06 c0       	rjmp	.+12     	; 0xebd4 <vfprintf+0x320>
    ebc8:	b3 94       	inc	r11
    ebca:	b3 94       	inc	r11
    ebcc:	04 c0       	rjmp	.+8      	; 0xebd6 <vfprintf+0x322>
    ebce:	8a 2d       	mov	r24, r10
    ebd0:	86 78       	andi	r24, 0x86	; 134
    ebd2:	09 f0       	breq	.+2      	; 0xebd6 <vfprintf+0x322>
    ebd4:	b3 94       	inc	r11
    ebd6:	a3 fc       	sbrc	r10, 3
    ebd8:	11 c0       	rjmp	.+34     	; 0xebfc <vfprintf+0x348>
    ebda:	a0 fe       	sbrs	r10, 0
    ebdc:	06 c0       	rjmp	.+12     	; 0xebea <vfprintf+0x336>
    ebde:	b2 14       	cp	r11, r2
    ebe0:	88 f4       	brcc	.+34     	; 0xec04 <vfprintf+0x350>
    ebe2:	28 0c       	add	r2, r8
    ebe4:	92 2c       	mov	r9, r2
    ebe6:	9b 18       	sub	r9, r11
    ebe8:	0e c0       	rjmp	.+28     	; 0xec06 <vfprintf+0x352>
    ebea:	b2 14       	cp	r11, r2
    ebec:	60 f4       	brcc	.+24     	; 0xec06 <vfprintf+0x352>
    ebee:	b6 01       	movw	r22, r12
    ebf0:	80 e2       	ldi	r24, 0x20	; 32
    ebf2:	90 e0       	ldi	r25, 0x00	; 0
    ebf4:	0e 94 f1 77 	call	0xefe2	; 0xefe2 <fputc>
    ebf8:	b3 94       	inc	r11
    ebfa:	f7 cf       	rjmp	.-18     	; 0xebea <vfprintf+0x336>
    ebfc:	b2 14       	cp	r11, r2
    ebfe:	18 f4       	brcc	.+6      	; 0xec06 <vfprintf+0x352>
    ec00:	2b 18       	sub	r2, r11
    ec02:	02 c0       	rjmp	.+4      	; 0xec08 <vfprintf+0x354>
    ec04:	98 2c       	mov	r9, r8
    ec06:	21 2c       	mov	r2, r1
    ec08:	a4 fe       	sbrs	r10, 4
    ec0a:	10 c0       	rjmp	.+32     	; 0xec2c <vfprintf+0x378>
    ec0c:	b6 01       	movw	r22, r12
    ec0e:	80 e3       	ldi	r24, 0x30	; 48
    ec10:	90 e0       	ldi	r25, 0x00	; 0
    ec12:	0e 94 f1 77 	call	0xefe2	; 0xefe2 <fputc>
    ec16:	a2 fe       	sbrs	r10, 2
    ec18:	17 c0       	rjmp	.+46     	; 0xec48 <vfprintf+0x394>
    ec1a:	a1 fc       	sbrc	r10, 1
    ec1c:	03 c0       	rjmp	.+6      	; 0xec24 <vfprintf+0x370>
    ec1e:	88 e7       	ldi	r24, 0x78	; 120
    ec20:	90 e0       	ldi	r25, 0x00	; 0
    ec22:	02 c0       	rjmp	.+4      	; 0xec28 <vfprintf+0x374>
    ec24:	88 e5       	ldi	r24, 0x58	; 88
    ec26:	90 e0       	ldi	r25, 0x00	; 0
    ec28:	b6 01       	movw	r22, r12
    ec2a:	0c c0       	rjmp	.+24     	; 0xec44 <vfprintf+0x390>
    ec2c:	8a 2d       	mov	r24, r10
    ec2e:	86 78       	andi	r24, 0x86	; 134
    ec30:	59 f0       	breq	.+22     	; 0xec48 <vfprintf+0x394>
    ec32:	a1 fe       	sbrs	r10, 1
    ec34:	02 c0       	rjmp	.+4      	; 0xec3a <vfprintf+0x386>
    ec36:	8b e2       	ldi	r24, 0x2B	; 43
    ec38:	01 c0       	rjmp	.+2      	; 0xec3c <vfprintf+0x388>
    ec3a:	80 e2       	ldi	r24, 0x20	; 32
    ec3c:	a7 fc       	sbrc	r10, 7
    ec3e:	8d e2       	ldi	r24, 0x2D	; 45
    ec40:	b6 01       	movw	r22, r12
    ec42:	90 e0       	ldi	r25, 0x00	; 0
    ec44:	0e 94 f1 77 	call	0xefe2	; 0xefe2 <fputc>
    ec48:	89 14       	cp	r8, r9
    ec4a:	38 f4       	brcc	.+14     	; 0xec5a <vfprintf+0x3a6>
    ec4c:	b6 01       	movw	r22, r12
    ec4e:	80 e3       	ldi	r24, 0x30	; 48
    ec50:	90 e0       	ldi	r25, 0x00	; 0
    ec52:	0e 94 f1 77 	call	0xefe2	; 0xefe2 <fputc>
    ec56:	9a 94       	dec	r9
    ec58:	f7 cf       	rjmp	.-18     	; 0xec48 <vfprintf+0x394>
    ec5a:	8a 94       	dec	r8
    ec5c:	f3 01       	movw	r30, r6
    ec5e:	e8 0d       	add	r30, r8
    ec60:	f1 1d       	adc	r31, r1
    ec62:	80 81       	ld	r24, Z
    ec64:	b6 01       	movw	r22, r12
    ec66:	90 e0       	ldi	r25, 0x00	; 0
    ec68:	0e 94 f1 77 	call	0xefe2	; 0xefe2 <fputc>
    ec6c:	81 10       	cpse	r8, r1
    ec6e:	f5 cf       	rjmp	.-22     	; 0xec5a <vfprintf+0x3a6>
    ec70:	22 20       	and	r2, r2
    ec72:	09 f4       	brne	.+2      	; 0xec76 <vfprintf+0x3c2>
    ec74:	42 ce       	rjmp	.-892    	; 0xe8fa <vfprintf+0x46>
    ec76:	b6 01       	movw	r22, r12
    ec78:	80 e2       	ldi	r24, 0x20	; 32
    ec7a:	90 e0       	ldi	r25, 0x00	; 0
    ec7c:	0e 94 f1 77 	call	0xefe2	; 0xefe2 <fputc>
    ec80:	2a 94       	dec	r2
    ec82:	f6 cf       	rjmp	.-20     	; 0xec70 <vfprintf+0x3bc>
    ec84:	f6 01       	movw	r30, r12
    ec86:	86 81       	ldd	r24, Z+6	; 0x06
    ec88:	97 81       	ldd	r25, Z+7	; 0x07
    ec8a:	02 c0       	rjmp	.+4      	; 0xec90 <vfprintf+0x3dc>
    ec8c:	8f ef       	ldi	r24, 0xFF	; 255
    ec8e:	9f ef       	ldi	r25, 0xFF	; 255
    ec90:	2b 96       	adiw	r28, 0x0b	; 11
    ec92:	cd bf       	out	0x3d, r28	; 61
    ec94:	de bf       	out	0x3e, r29	; 62
    ec96:	df 91       	pop	r29
    ec98:	cf 91       	pop	r28
    ec9a:	1f 91       	pop	r17
    ec9c:	0f 91       	pop	r16
    ec9e:	ff 90       	pop	r15
    eca0:	ef 90       	pop	r14
    eca2:	df 90       	pop	r13
    eca4:	cf 90       	pop	r12
    eca6:	bf 90       	pop	r11
    eca8:	af 90       	pop	r10
    ecaa:	9f 90       	pop	r9
    ecac:	8f 90       	pop	r8
    ecae:	7f 90       	pop	r7
    ecb0:	6f 90       	pop	r6
    ecb2:	5f 90       	pop	r5
    ecb4:	4f 90       	pop	r4
    ecb6:	3f 90       	pop	r3
    ecb8:	2f 90       	pop	r2
    ecba:	08 95       	ret

0000ecbc <strtod>:
    ecbc:	8f 92       	push	r8
    ecbe:	9f 92       	push	r9
    ecc0:	af 92       	push	r10
    ecc2:	bf 92       	push	r11
    ecc4:	cf 92       	push	r12
    ecc6:	df 92       	push	r13
    ecc8:	ef 92       	push	r14
    ecca:	ff 92       	push	r15
    eccc:	0f 93       	push	r16
    ecce:	1f 93       	push	r17
    ecd0:	cf 93       	push	r28
    ecd2:	df 93       	push	r29
    ecd4:	ec 01       	movw	r28, r24
    ecd6:	6b 01       	movw	r12, r22
    ecd8:	61 15       	cp	r22, r1
    ecda:	71 05       	cpc	r23, r1
    ecdc:	19 f0       	breq	.+6      	; 0xece4 <strtod+0x28>
    ecde:	fb 01       	movw	r30, r22
    ece0:	80 83       	st	Z, r24
    ece2:	91 83       	std	Z+1, r25	; 0x01
    ece4:	7e 01       	movw	r14, r28
    ece6:	ff ef       	ldi	r31, 0xFF	; 255
    ece8:	ef 1a       	sub	r14, r31
    ecea:	ff 0a       	sbc	r15, r31
    ecec:	08 81       	ld	r16, Y
    ecee:	80 2f       	mov	r24, r16
    ecf0:	90 e0       	ldi	r25, 0x00	; 0
    ecf2:	0e 94 ba 77 	call	0xef74	; 0xef74 <isspace>
    ecf6:	89 2b       	or	r24, r25
    ecf8:	11 f0       	breq	.+4      	; 0xecfe <strtod+0x42>
    ecfa:	e7 01       	movw	r28, r14
    ecfc:	f3 cf       	rjmp	.-26     	; 0xece4 <strtod+0x28>
    ecfe:	0d 32       	cpi	r16, 0x2D	; 45
    ed00:	39 f4       	brne	.+14     	; 0xed10 <strtod+0x54>
    ed02:	7e 01       	movw	r14, r28
    ed04:	82 e0       	ldi	r24, 0x02	; 2
    ed06:	e8 0e       	add	r14, r24
    ed08:	f1 1c       	adc	r15, r1
    ed0a:	09 81       	ldd	r16, Y+1	; 0x01
    ed0c:	11 e0       	ldi	r17, 0x01	; 1
    ed0e:	08 c0       	rjmp	.+16     	; 0xed20 <strtod+0x64>
    ed10:	0b 32       	cpi	r16, 0x2B	; 43
    ed12:	29 f4       	brne	.+10     	; 0xed1e <strtod+0x62>
    ed14:	7e 01       	movw	r14, r28
    ed16:	92 e0       	ldi	r25, 0x02	; 2
    ed18:	e9 0e       	add	r14, r25
    ed1a:	f1 1c       	adc	r15, r1
    ed1c:	09 81       	ldd	r16, Y+1	; 0x01
    ed1e:	10 e0       	ldi	r17, 0x00	; 0
    ed20:	e7 01       	movw	r28, r14
    ed22:	21 97       	sbiw	r28, 0x01	; 1
    ed24:	43 e0       	ldi	r20, 0x03	; 3
    ed26:	50 e0       	ldi	r21, 0x00	; 0
    ed28:	68 e5       	ldi	r22, 0x58	; 88
    ed2a:	72 e0       	ldi	r23, 0x02	; 2
    ed2c:	ce 01       	movw	r24, r28
    ed2e:	0e 94 c3 77 	call	0xef86	; 0xef86 <strncasecmp_P>
    ed32:	89 2b       	or	r24, r25
    ed34:	c1 f4       	brne	.+48     	; 0xed66 <strtod+0xaa>
    ed36:	23 96       	adiw	r28, 0x03	; 3
    ed38:	45 e0       	ldi	r20, 0x05	; 5
    ed3a:	50 e0       	ldi	r21, 0x00	; 0
    ed3c:	63 e5       	ldi	r22, 0x53	; 83
    ed3e:	72 e0       	ldi	r23, 0x02	; 2
    ed40:	ce 01       	movw	r24, r28
    ed42:	0e 94 c3 77 	call	0xef86	; 0xef86 <strncasecmp_P>
    ed46:	89 2b       	or	r24, r25
    ed48:	09 f4       	brne	.+2      	; 0xed4c <strtod+0x90>
    ed4a:	25 96       	adiw	r28, 0x05	; 5
    ed4c:	c1 14       	cp	r12, r1
    ed4e:	d1 04       	cpc	r13, r1
    ed50:	19 f0       	breq	.+6      	; 0xed58 <strtod+0x9c>
    ed52:	f6 01       	movw	r30, r12
    ed54:	c0 83       	st	Z, r28
    ed56:	d1 83       	std	Z+1, r29	; 0x01
    ed58:	11 11       	cpse	r17, r1
    ed5a:	f6 c0       	rjmp	.+492    	; 0xef48 <strtod+0x28c>
    ed5c:	60 e0       	ldi	r22, 0x00	; 0
    ed5e:	70 e0       	ldi	r23, 0x00	; 0
    ed60:	80 e8       	ldi	r24, 0x80	; 128
    ed62:	9f e7       	ldi	r25, 0x7F	; 127
    ed64:	fa c0       	rjmp	.+500    	; 0xef5a <strtod+0x29e>
    ed66:	43 e0       	ldi	r20, 0x03	; 3
    ed68:	50 e0       	ldi	r21, 0x00	; 0
    ed6a:	60 e5       	ldi	r22, 0x50	; 80
    ed6c:	72 e0       	ldi	r23, 0x02	; 2
    ed6e:	ce 01       	movw	r24, r28
    ed70:	0e 94 c3 77 	call	0xef86	; 0xef86 <strncasecmp_P>
    ed74:	89 2b       	or	r24, r25
    ed76:	59 f4       	brne	.+22     	; 0xed8e <strtod+0xd2>
    ed78:	c1 14       	cp	r12, r1
    ed7a:	d1 04       	cpc	r13, r1
    ed7c:	09 f4       	brne	.+2      	; 0xed80 <strtod+0xc4>
    ed7e:	e9 c0       	rjmp	.+466    	; 0xef52 <strtod+0x296>
    ed80:	f2 e0       	ldi	r31, 0x02	; 2
    ed82:	ef 0e       	add	r14, r31
    ed84:	f1 1c       	adc	r15, r1
    ed86:	f6 01       	movw	r30, r12
    ed88:	e0 82       	st	Z, r14
    ed8a:	f1 82       	std	Z+1, r15	; 0x01
    ed8c:	e2 c0       	rjmp	.+452    	; 0xef52 <strtod+0x296>
    ed8e:	20 e0       	ldi	r18, 0x00	; 0
    ed90:	30 e0       	ldi	r19, 0x00	; 0
    ed92:	a9 01       	movw	r20, r18
    ed94:	c0 e0       	ldi	r28, 0x00	; 0
    ed96:	d0 e0       	ldi	r29, 0x00	; 0
    ed98:	f7 01       	movw	r30, r14
    ed9a:	60 ed       	ldi	r22, 0xD0	; 208
    ed9c:	a6 2e       	mov	r10, r22
    ed9e:	a0 0e       	add	r10, r16
    eda0:	89 e0       	ldi	r24, 0x09	; 9
    eda2:	8a 15       	cp	r24, r10
    eda4:	30 f1       	brcs	.+76     	; 0xedf2 <strtod+0x136>
    eda6:	91 2f       	mov	r25, r17
    eda8:	92 60       	ori	r25, 0x02	; 2
    edaa:	b9 2e       	mov	r11, r25
    edac:	81 2f       	mov	r24, r17
    edae:	88 70       	andi	r24, 0x08	; 8
    edb0:	12 ff       	sbrs	r17, 2
    edb2:	04 c0       	rjmp	.+8      	; 0xedbc <strtod+0x100>
    edb4:	81 11       	cpse	r24, r1
    edb6:	24 c0       	rjmp	.+72     	; 0xee00 <strtod+0x144>
    edb8:	21 96       	adiw	r28, 0x01	; 1
    edba:	22 c0       	rjmp	.+68     	; 0xee00 <strtod+0x144>
    edbc:	81 11       	cpse	r24, r1
    edbe:	21 97       	sbiw	r28, 0x01	; 1
    edc0:	a5 e0       	ldi	r26, 0x05	; 5
    edc2:	b0 e0       	ldi	r27, 0x00	; 0
    edc4:	0e 94 5b 72 	call	0xe4b6	; 0xe4b6 <__muluhisi3>
    edc8:	dc 01       	movw	r26, r24
    edca:	cb 01       	movw	r24, r22
    edcc:	88 0f       	add	r24, r24
    edce:	99 1f       	adc	r25, r25
    edd0:	aa 1f       	adc	r26, r26
    edd2:	bb 1f       	adc	r27, r27
    edd4:	9c 01       	movw	r18, r24
    edd6:	ad 01       	movw	r20, r26
    edd8:	2a 0d       	add	r18, r10
    edda:	31 1d       	adc	r19, r1
    eddc:	41 1d       	adc	r20, r1
    edde:	51 1d       	adc	r21, r1
    ede0:	28 39       	cpi	r18, 0x98	; 152
    ede2:	89 e9       	ldi	r24, 0x99	; 153
    ede4:	38 07       	cpc	r19, r24
    ede6:	48 07       	cpc	r20, r24
    ede8:	89 e1       	ldi	r24, 0x19	; 25
    edea:	58 07       	cpc	r21, r24
    edec:	48 f0       	brcs	.+18     	; 0xee00 <strtod+0x144>
    edee:	16 60       	ori	r17, 0x06	; 6
    edf0:	06 c0       	rjmp	.+12     	; 0xedfe <strtod+0x142>
    edf2:	9e ef       	ldi	r25, 0xFE	; 254
    edf4:	a9 12       	cpse	r10, r25
    edf6:	0a c0       	rjmp	.+20     	; 0xee0c <strtod+0x150>
    edf8:	13 fd       	sbrc	r17, 3
    edfa:	40 c0       	rjmp	.+128    	; 0xee7c <strtod+0x1c0>
    edfc:	18 60       	ori	r17, 0x08	; 8
    edfe:	b1 2e       	mov	r11, r17
    ee00:	8f ef       	ldi	r24, 0xFF	; 255
    ee02:	e8 1a       	sub	r14, r24
    ee04:	f8 0a       	sbc	r15, r24
    ee06:	00 81       	ld	r16, Z
    ee08:	1b 2d       	mov	r17, r11
    ee0a:	c6 cf       	rjmp	.-116    	; 0xed98 <strtod+0xdc>
    ee0c:	80 2f       	mov	r24, r16
    ee0e:	8f 7d       	andi	r24, 0xDF	; 223
    ee10:	85 34       	cpi	r24, 0x45	; 69
    ee12:	a1 f5       	brne	.+104    	; 0xee7c <strtod+0x1c0>
    ee14:	80 81       	ld	r24, Z
    ee16:	8d 32       	cpi	r24, 0x2D	; 45
    ee18:	11 f4       	brne	.+4      	; 0xee1e <strtod+0x162>
    ee1a:	10 61       	ori	r17, 0x10	; 16
    ee1c:	06 c0       	rjmp	.+12     	; 0xee2a <strtod+0x16e>
    ee1e:	8b 32       	cpi	r24, 0x2B	; 43
    ee20:	21 f0       	breq	.+8      	; 0xee2a <strtod+0x16e>
    ee22:	31 96       	adiw	r30, 0x01	; 1
    ee24:	61 e0       	ldi	r22, 0x01	; 1
    ee26:	70 e0       	ldi	r23, 0x00	; 0
    ee28:	04 c0       	rjmp	.+8      	; 0xee32 <strtod+0x176>
    ee2a:	81 81       	ldd	r24, Z+1	; 0x01
    ee2c:	32 96       	adiw	r30, 0x02	; 2
    ee2e:	62 e0       	ldi	r22, 0x02	; 2
    ee30:	70 e0       	ldi	r23, 0x00	; 0
    ee32:	80 53       	subi	r24, 0x30	; 48
    ee34:	8a 30       	cpi	r24, 0x0A	; 10
    ee36:	18 f0       	brcs	.+6      	; 0xee3e <strtod+0x182>
    ee38:	e6 1b       	sub	r30, r22
    ee3a:	f7 0b       	sbc	r31, r23
    ee3c:	1f c0       	rjmp	.+62     	; 0xee7c <strtod+0x1c0>
    ee3e:	60 e0       	ldi	r22, 0x00	; 0
    ee40:	70 e0       	ldi	r23, 0x00	; 0
    ee42:	60 38       	cpi	r22, 0x80	; 128
    ee44:	9c e0       	ldi	r25, 0x0C	; 12
    ee46:	79 07       	cpc	r23, r25
    ee48:	5c f4       	brge	.+22     	; 0xee60 <strtod+0x1a4>
    ee4a:	db 01       	movw	r26, r22
    ee4c:	aa 0f       	add	r26, r26
    ee4e:	bb 1f       	adc	r27, r27
    ee50:	aa 0f       	add	r26, r26
    ee52:	bb 1f       	adc	r27, r27
    ee54:	6a 0f       	add	r22, r26
    ee56:	7b 1f       	adc	r23, r27
    ee58:	66 0f       	add	r22, r22
    ee5a:	77 1f       	adc	r23, r23
    ee5c:	68 0f       	add	r22, r24
    ee5e:	71 1d       	adc	r23, r1
    ee60:	31 96       	adiw	r30, 0x01	; 1
    ee62:	df 01       	movw	r26, r30
    ee64:	11 97       	sbiw	r26, 0x01	; 1
    ee66:	8c 91       	ld	r24, X
    ee68:	80 53       	subi	r24, 0x30	; 48
    ee6a:	8a 30       	cpi	r24, 0x0A	; 10
    ee6c:	50 f3       	brcs	.-44     	; 0xee42 <strtod+0x186>
    ee6e:	14 ff       	sbrs	r17, 4
    ee70:	03 c0       	rjmp	.+6      	; 0xee78 <strtod+0x1bc>
    ee72:	71 95       	neg	r23
    ee74:	61 95       	neg	r22
    ee76:	71 09       	sbc	r23, r1
    ee78:	c6 0f       	add	r28, r22
    ee7a:	d7 1f       	adc	r29, r23
    ee7c:	11 ff       	sbrs	r17, 1
    ee7e:	08 c0       	rjmp	.+16     	; 0xee90 <strtod+0x1d4>
    ee80:	c1 14       	cp	r12, r1
    ee82:	d1 04       	cpc	r13, r1
    ee84:	29 f0       	breq	.+10     	; 0xee90 <strtod+0x1d4>
    ee86:	cf 01       	movw	r24, r30
    ee88:	01 97       	sbiw	r24, 0x01	; 1
    ee8a:	f6 01       	movw	r30, r12
    ee8c:	80 83       	st	Z, r24
    ee8e:	91 83       	std	Z+1, r25	; 0x01
    ee90:	ca 01       	movw	r24, r20
    ee92:	b9 01       	movw	r22, r18
    ee94:	0e 94 65 70 	call	0xe0ca	; 0xe0ca <__floatunsisf>
    ee98:	21 2f       	mov	r18, r17
    ee9a:	23 70       	andi	r18, 0x03	; 3
    ee9c:	23 30       	cpi	r18, 0x03	; 3
    ee9e:	19 f0       	breq	.+6      	; 0xeea6 <strtod+0x1ea>
    eea0:	4b 01       	movw	r8, r22
    eea2:	5c 01       	movw	r10, r24
    eea4:	06 c0       	rjmp	.+12     	; 0xeeb2 <strtod+0x1f6>
    eea6:	4b 01       	movw	r8, r22
    eea8:	5c 01       	movw	r10, r24
    eeaa:	b7 fa       	bst	r11, 7
    eeac:	b0 94       	com	r11
    eeae:	b7 f8       	bld	r11, 7
    eeb0:	b0 94       	com	r11
    eeb2:	20 e0       	ldi	r18, 0x00	; 0
    eeb4:	30 e0       	ldi	r19, 0x00	; 0
    eeb6:	a9 01       	movw	r20, r18
    eeb8:	c5 01       	movw	r24, r10
    eeba:	b4 01       	movw	r22, r8
    eebc:	0e 94 b8 6f 	call	0xdf70	; 0xdf70 <__cmpsf2>
    eec0:	88 23       	and	r24, r24
    eec2:	09 f4       	brne	.+2      	; 0xeec6 <strtod+0x20a>
    eec4:	3e c0       	rjmp	.+124    	; 0xef42 <strtod+0x286>
    eec6:	d7 ff       	sbrs	r29, 7
    eec8:	06 c0       	rjmp	.+12     	; 0xeed6 <strtod+0x21a>
    eeca:	d1 95       	neg	r29
    eecc:	c1 95       	neg	r28
    eece:	d1 09       	sbc	r29, r1
    eed0:	0f e6       	ldi	r16, 0x6F	; 111
    eed2:	12 e0       	ldi	r17, 0x02	; 2
    eed4:	02 c0       	rjmp	.+4      	; 0xeeda <strtod+0x21e>
    eed6:	07 e8       	ldi	r16, 0x87	; 135
    eed8:	12 e0       	ldi	r17, 0x02	; 2
    eeda:	68 01       	movw	r12, r16
    eedc:	f8 e1       	ldi	r31, 0x18	; 24
    eede:	cf 1a       	sub	r12, r31
    eee0:	d1 08       	sbc	r13, r1
    eee2:	90 e2       	ldi	r25, 0x20	; 32
    eee4:	e9 2e       	mov	r14, r25
    eee6:	f1 2c       	mov	r15, r1
    eee8:	ce 15       	cp	r28, r14
    eeea:	df 05       	cpc	r29, r15
    eeec:	74 f0       	brlt	.+28     	; 0xef0a <strtod+0x24e>
    eeee:	f8 01       	movw	r30, r16
    eef0:	25 91       	lpm	r18, Z+
    eef2:	35 91       	lpm	r19, Z+
    eef4:	45 91       	lpm	r20, Z+
    eef6:	54 91       	lpm	r21, Z
    eef8:	c5 01       	movw	r24, r10
    eefa:	b4 01       	movw	r22, r8
    eefc:	0e 94 5d 71 	call	0xe2ba	; 0xe2ba <__mulsf3>
    ef00:	4b 01       	movw	r8, r22
    ef02:	5c 01       	movw	r10, r24
    ef04:	ce 19       	sub	r28, r14
    ef06:	df 09       	sbc	r29, r15
    ef08:	ef cf       	rjmp	.-34     	; 0xeee8 <strtod+0x22c>
    ef0a:	04 50       	subi	r16, 0x04	; 4
    ef0c:	11 09       	sbc	r17, r1
    ef0e:	f5 94       	asr	r15
    ef10:	e7 94       	ror	r14
    ef12:	0c 15       	cp	r16, r12
    ef14:	1d 05       	cpc	r17, r13
    ef16:	41 f7       	brne	.-48     	; 0xeee8 <strtod+0x22c>
    ef18:	8a 2d       	mov	r24, r10
    ef1a:	88 0f       	add	r24, r24
    ef1c:	8b 2d       	mov	r24, r11
    ef1e:	88 1f       	adc	r24, r24
    ef20:	8f 3f       	cpi	r24, 0xFF	; 255
    ef22:	49 f0       	breq	.+18     	; 0xef36 <strtod+0x27a>
    ef24:	20 e0       	ldi	r18, 0x00	; 0
    ef26:	30 e0       	ldi	r19, 0x00	; 0
    ef28:	a9 01       	movw	r20, r18
    ef2a:	c5 01       	movw	r24, r10
    ef2c:	b4 01       	movw	r22, r8
    ef2e:	0e 94 b8 6f 	call	0xdf70	; 0xdf70 <__cmpsf2>
    ef32:	81 11       	cpse	r24, r1
    ef34:	06 c0       	rjmp	.+12     	; 0xef42 <strtod+0x286>
    ef36:	82 e2       	ldi	r24, 0x22	; 34
    ef38:	90 e0       	ldi	r25, 0x00	; 0
    ef3a:	80 93 01 4b 	sts	0x4B01, r24	; 0x804b01 <errno>
    ef3e:	90 93 02 4b 	sts	0x4B02, r25	; 0x804b02 <errno+0x1>
    ef42:	c5 01       	movw	r24, r10
    ef44:	b4 01       	movw	r22, r8
    ef46:	09 c0       	rjmp	.+18     	; 0xef5a <strtod+0x29e>
    ef48:	60 e0       	ldi	r22, 0x00	; 0
    ef4a:	70 e0       	ldi	r23, 0x00	; 0
    ef4c:	80 e8       	ldi	r24, 0x80	; 128
    ef4e:	9f ef       	ldi	r25, 0xFF	; 255
    ef50:	04 c0       	rjmp	.+8      	; 0xef5a <strtod+0x29e>
    ef52:	60 e0       	ldi	r22, 0x00	; 0
    ef54:	70 e0       	ldi	r23, 0x00	; 0
    ef56:	80 ec       	ldi	r24, 0xC0	; 192
    ef58:	9f e7       	ldi	r25, 0x7F	; 127
    ef5a:	df 91       	pop	r29
    ef5c:	cf 91       	pop	r28
    ef5e:	1f 91       	pop	r17
    ef60:	0f 91       	pop	r16
    ef62:	ff 90       	pop	r15
    ef64:	ef 90       	pop	r14
    ef66:	df 90       	pop	r13
    ef68:	cf 90       	pop	r12
    ef6a:	bf 90       	pop	r11
    ef6c:	af 90       	pop	r10
    ef6e:	9f 90       	pop	r9
    ef70:	8f 90       	pop	r8
    ef72:	08 95       	ret

0000ef74 <isspace>:
    ef74:	91 11       	cpse	r25, r1
    ef76:	0c 94 8b 78 	jmp	0xf116	; 0xf116 <__ctype_isfalse>
    ef7a:	80 32       	cpi	r24, 0x20	; 32
    ef7c:	19 f0       	breq	.+6      	; 0xef84 <isspace+0x10>
    ef7e:	89 50       	subi	r24, 0x09	; 9
    ef80:	85 50       	subi	r24, 0x05	; 5
    ef82:	c8 f7       	brcc	.-14     	; 0xef76 <isspace+0x2>
    ef84:	08 95       	ret

0000ef86 <strncasecmp_P>:
    ef86:	fb 01       	movw	r30, r22
    ef88:	dc 01       	movw	r26, r24
    ef8a:	41 50       	subi	r20, 0x01	; 1
    ef8c:	50 40       	sbci	r21, 0x00	; 0
    ef8e:	88 f0       	brcs	.+34     	; 0xefb2 <strncasecmp_P+0x2c>
    ef90:	8d 91       	ld	r24, X+
    ef92:	81 34       	cpi	r24, 0x41	; 65
    ef94:	1c f0       	brlt	.+6      	; 0xef9c <strncasecmp_P+0x16>
    ef96:	8b 35       	cpi	r24, 0x5B	; 91
    ef98:	0c f4       	brge	.+2      	; 0xef9c <strncasecmp_P+0x16>
    ef9a:	80 5e       	subi	r24, 0xE0	; 224
    ef9c:	65 91       	lpm	r22, Z+
    ef9e:	61 34       	cpi	r22, 0x41	; 65
    efa0:	1c f0       	brlt	.+6      	; 0xefa8 <strncasecmp_P+0x22>
    efa2:	6b 35       	cpi	r22, 0x5B	; 91
    efa4:	0c f4       	brge	.+2      	; 0xefa8 <strncasecmp_P+0x22>
    efa6:	60 5e       	subi	r22, 0xE0	; 224
    efa8:	86 1b       	sub	r24, r22
    efaa:	61 11       	cpse	r22, r1
    efac:	71 f3       	breq	.-36     	; 0xef8a <strncasecmp_P+0x4>
    efae:	99 0b       	sbc	r25, r25
    efb0:	08 95       	ret
    efb2:	88 1b       	sub	r24, r24
    efb4:	fc cf       	rjmp	.-8      	; 0xefae <strncasecmp_P+0x28>

0000efb6 <strnlen_P>:
    efb6:	fc 01       	movw	r30, r24
    efb8:	05 90       	lpm	r0, Z+
    efba:	61 50       	subi	r22, 0x01	; 1
    efbc:	70 40       	sbci	r23, 0x00	; 0
    efbe:	01 10       	cpse	r0, r1
    efc0:	d8 f7       	brcc	.-10     	; 0xefb8 <strnlen_P+0x2>
    efc2:	80 95       	com	r24
    efc4:	90 95       	com	r25
    efc6:	8e 0f       	add	r24, r30
    efc8:	9f 1f       	adc	r25, r31
    efca:	08 95       	ret

0000efcc <strnlen>:
    efcc:	fc 01       	movw	r30, r24
    efce:	61 50       	subi	r22, 0x01	; 1
    efd0:	70 40       	sbci	r23, 0x00	; 0
    efd2:	01 90       	ld	r0, Z+
    efd4:	01 10       	cpse	r0, r1
    efd6:	d8 f7       	brcc	.-10     	; 0xefce <strnlen+0x2>
    efd8:	80 95       	com	r24
    efda:	90 95       	com	r25
    efdc:	8e 0f       	add	r24, r30
    efde:	9f 1f       	adc	r25, r31
    efe0:	08 95       	ret

0000efe2 <fputc>:
    efe2:	0f 93       	push	r16
    efe4:	1f 93       	push	r17
    efe6:	cf 93       	push	r28
    efe8:	df 93       	push	r29
    efea:	fb 01       	movw	r30, r22
    efec:	23 81       	ldd	r18, Z+3	; 0x03
    efee:	21 fd       	sbrc	r18, 1
    eff0:	03 c0       	rjmp	.+6      	; 0xeff8 <fputc+0x16>
    eff2:	8f ef       	ldi	r24, 0xFF	; 255
    eff4:	9f ef       	ldi	r25, 0xFF	; 255
    eff6:	2c c0       	rjmp	.+88     	; 0xf050 <fputc+0x6e>
    eff8:	22 ff       	sbrs	r18, 2
    effa:	16 c0       	rjmp	.+44     	; 0xf028 <fputc+0x46>
    effc:	46 81       	ldd	r20, Z+6	; 0x06
    effe:	57 81       	ldd	r21, Z+7	; 0x07
    f000:	24 81       	ldd	r18, Z+4	; 0x04
    f002:	35 81       	ldd	r19, Z+5	; 0x05
    f004:	42 17       	cp	r20, r18
    f006:	53 07       	cpc	r21, r19
    f008:	44 f4       	brge	.+16     	; 0xf01a <fputc+0x38>
    f00a:	a0 81       	ld	r26, Z
    f00c:	b1 81       	ldd	r27, Z+1	; 0x01
    f00e:	9d 01       	movw	r18, r26
    f010:	2f 5f       	subi	r18, 0xFF	; 255
    f012:	3f 4f       	sbci	r19, 0xFF	; 255
    f014:	20 83       	st	Z, r18
    f016:	31 83       	std	Z+1, r19	; 0x01
    f018:	8c 93       	st	X, r24
    f01a:	26 81       	ldd	r18, Z+6	; 0x06
    f01c:	37 81       	ldd	r19, Z+7	; 0x07
    f01e:	2f 5f       	subi	r18, 0xFF	; 255
    f020:	3f 4f       	sbci	r19, 0xFF	; 255
    f022:	26 83       	std	Z+6, r18	; 0x06
    f024:	37 83       	std	Z+7, r19	; 0x07
    f026:	14 c0       	rjmp	.+40     	; 0xf050 <fputc+0x6e>
    f028:	8b 01       	movw	r16, r22
    f02a:	ec 01       	movw	r28, r24
    f02c:	fb 01       	movw	r30, r22
    f02e:	00 84       	ldd	r0, Z+8	; 0x08
    f030:	f1 85       	ldd	r31, Z+9	; 0x09
    f032:	e0 2d       	mov	r30, r0
    f034:	09 95       	icall
    f036:	89 2b       	or	r24, r25
    f038:	e1 f6       	brne	.-72     	; 0xeff2 <fputc+0x10>
    f03a:	d8 01       	movw	r26, r16
    f03c:	16 96       	adiw	r26, 0x06	; 6
    f03e:	8d 91       	ld	r24, X+
    f040:	9c 91       	ld	r25, X
    f042:	17 97       	sbiw	r26, 0x07	; 7
    f044:	01 96       	adiw	r24, 0x01	; 1
    f046:	16 96       	adiw	r26, 0x06	; 6
    f048:	8d 93       	st	X+, r24
    f04a:	9c 93       	st	X, r25
    f04c:	17 97       	sbiw	r26, 0x07	; 7
    f04e:	ce 01       	movw	r24, r28
    f050:	df 91       	pop	r29
    f052:	cf 91       	pop	r28
    f054:	1f 91       	pop	r17
    f056:	0f 91       	pop	r16
    f058:	08 95       	ret

0000f05a <__ultoa_invert>:
    f05a:	fa 01       	movw	r30, r20
    f05c:	aa 27       	eor	r26, r26
    f05e:	28 30       	cpi	r18, 0x08	; 8
    f060:	51 f1       	breq	.+84     	; 0xf0b6 <__ultoa_invert+0x5c>
    f062:	20 31       	cpi	r18, 0x10	; 16
    f064:	81 f1       	breq	.+96     	; 0xf0c6 <__ultoa_invert+0x6c>
    f066:	e8 94       	clt
    f068:	6f 93       	push	r22
    f06a:	6e 7f       	andi	r22, 0xFE	; 254
    f06c:	6e 5f       	subi	r22, 0xFE	; 254
    f06e:	7f 4f       	sbci	r23, 0xFF	; 255
    f070:	8f 4f       	sbci	r24, 0xFF	; 255
    f072:	9f 4f       	sbci	r25, 0xFF	; 255
    f074:	af 4f       	sbci	r26, 0xFF	; 255
    f076:	b1 e0       	ldi	r27, 0x01	; 1
    f078:	3e d0       	rcall	.+124    	; 0xf0f6 <__ultoa_invert+0x9c>
    f07a:	b4 e0       	ldi	r27, 0x04	; 4
    f07c:	3c d0       	rcall	.+120    	; 0xf0f6 <__ultoa_invert+0x9c>
    f07e:	67 0f       	add	r22, r23
    f080:	78 1f       	adc	r23, r24
    f082:	89 1f       	adc	r24, r25
    f084:	9a 1f       	adc	r25, r26
    f086:	a1 1d       	adc	r26, r1
    f088:	68 0f       	add	r22, r24
    f08a:	79 1f       	adc	r23, r25
    f08c:	8a 1f       	adc	r24, r26
    f08e:	91 1d       	adc	r25, r1
    f090:	a1 1d       	adc	r26, r1
    f092:	6a 0f       	add	r22, r26
    f094:	71 1d       	adc	r23, r1
    f096:	81 1d       	adc	r24, r1
    f098:	91 1d       	adc	r25, r1
    f09a:	a1 1d       	adc	r26, r1
    f09c:	20 d0       	rcall	.+64     	; 0xf0de <__ultoa_invert+0x84>
    f09e:	09 f4       	brne	.+2      	; 0xf0a2 <__ultoa_invert+0x48>
    f0a0:	68 94       	set
    f0a2:	3f 91       	pop	r19
    f0a4:	2a e0       	ldi	r18, 0x0A	; 10
    f0a6:	26 9f       	mul	r18, r22
    f0a8:	11 24       	eor	r1, r1
    f0aa:	30 19       	sub	r19, r0
    f0ac:	30 5d       	subi	r19, 0xD0	; 208
    f0ae:	31 93       	st	Z+, r19
    f0b0:	de f6       	brtc	.-74     	; 0xf068 <__ultoa_invert+0xe>
    f0b2:	cf 01       	movw	r24, r30
    f0b4:	08 95       	ret
    f0b6:	46 2f       	mov	r20, r22
    f0b8:	47 70       	andi	r20, 0x07	; 7
    f0ba:	40 5d       	subi	r20, 0xD0	; 208
    f0bc:	41 93       	st	Z+, r20
    f0be:	b3 e0       	ldi	r27, 0x03	; 3
    f0c0:	0f d0       	rcall	.+30     	; 0xf0e0 <__ultoa_invert+0x86>
    f0c2:	c9 f7       	brne	.-14     	; 0xf0b6 <__ultoa_invert+0x5c>
    f0c4:	f6 cf       	rjmp	.-20     	; 0xf0b2 <__ultoa_invert+0x58>
    f0c6:	46 2f       	mov	r20, r22
    f0c8:	4f 70       	andi	r20, 0x0F	; 15
    f0ca:	40 5d       	subi	r20, 0xD0	; 208
    f0cc:	4a 33       	cpi	r20, 0x3A	; 58
    f0ce:	18 f0       	brcs	.+6      	; 0xf0d6 <__ultoa_invert+0x7c>
    f0d0:	49 5d       	subi	r20, 0xD9	; 217
    f0d2:	31 fd       	sbrc	r19, 1
    f0d4:	40 52       	subi	r20, 0x20	; 32
    f0d6:	41 93       	st	Z+, r20
    f0d8:	02 d0       	rcall	.+4      	; 0xf0de <__ultoa_invert+0x84>
    f0da:	a9 f7       	brne	.-22     	; 0xf0c6 <__ultoa_invert+0x6c>
    f0dc:	ea cf       	rjmp	.-44     	; 0xf0b2 <__ultoa_invert+0x58>
    f0de:	b4 e0       	ldi	r27, 0x04	; 4
    f0e0:	a6 95       	lsr	r26
    f0e2:	97 95       	ror	r25
    f0e4:	87 95       	ror	r24
    f0e6:	77 95       	ror	r23
    f0e8:	67 95       	ror	r22
    f0ea:	ba 95       	dec	r27
    f0ec:	c9 f7       	brne	.-14     	; 0xf0e0 <__ultoa_invert+0x86>
    f0ee:	00 97       	sbiw	r24, 0x00	; 0
    f0f0:	61 05       	cpc	r22, r1
    f0f2:	71 05       	cpc	r23, r1
    f0f4:	08 95       	ret
    f0f6:	9b 01       	movw	r18, r22
    f0f8:	ac 01       	movw	r20, r24
    f0fa:	0a 2e       	mov	r0, r26
    f0fc:	06 94       	lsr	r0
    f0fe:	57 95       	ror	r21
    f100:	47 95       	ror	r20
    f102:	37 95       	ror	r19
    f104:	27 95       	ror	r18
    f106:	ba 95       	dec	r27
    f108:	c9 f7       	brne	.-14     	; 0xf0fc <__ultoa_invert+0xa2>
    f10a:	62 0f       	add	r22, r18
    f10c:	73 1f       	adc	r23, r19
    f10e:	84 1f       	adc	r24, r20
    f110:	95 1f       	adc	r25, r21
    f112:	a0 1d       	adc	r26, r0
    f114:	08 95       	ret

0000f116 <__ctype_isfalse>:
    f116:	99 27       	eor	r25, r25
    f118:	88 27       	eor	r24, r24

0000f11a <__ctype_istrue>:
    f11a:	08 95       	ret

0000f11c <eeprom_read_byte>:
    f11c:	03 d0       	rcall	.+6      	; 0xf124 <eeprom_mapen>
    f11e:	80 81       	ld	r24, Z
    f120:	99 27       	eor	r25, r25
    f122:	08 95       	ret

0000f124 <eeprom_mapen>:
    f124:	fc 01       	movw	r30, r24
    f126:	e0 50       	subi	r30, 0x00	; 0
    f128:	fc 4e       	sbci	r31, 0xEC	; 236
    f12a:	08 95       	ret

0000f12c <eeprom_read_dword>:
    f12c:	0e 94 92 78 	call	0xf124	; 0xf124 <eeprom_mapen>
    f130:	60 81       	ld	r22, Z
    f132:	71 81       	ldd	r23, Z+1	; 0x01
    f134:	82 81       	ldd	r24, Z+2	; 0x02
    f136:	93 81       	ldd	r25, Z+3	; 0x03
    f138:	08 95       	ret

0000f13a <eeprom_read_word>:
    f13a:	0e 94 92 78 	call	0xf124	; 0xf124 <eeprom_mapen>
    f13e:	80 81       	ld	r24, Z
    f140:	91 81       	ldd	r25, Z+1	; 0x01
    f142:	08 95       	ret

0000f144 <__divmodqi4>:
    f144:	87 fb       	bst	r24, 7
    f146:	08 2e       	mov	r0, r24
    f148:	06 26       	eor	r0, r22
    f14a:	87 fd       	sbrc	r24, 7
    f14c:	81 95       	neg	r24
    f14e:	67 fd       	sbrc	r22, 7
    f150:	61 95       	neg	r22
    f152:	0e 94 b7 78 	call	0xf16e	; 0xf16e <__udivmodqi4>
    f156:	0e f4       	brtc	.+2      	; 0xf15a <__divmodqi4_1>
    f158:	91 95       	neg	r25

0000f15a <__divmodqi4_1>:
    f15a:	07 fc       	sbrc	r0, 7
    f15c:	81 95       	neg	r24

0000f15e <__divmodqi4_exit>:
    f15e:	08 95       	ret

0000f160 <__xload_1>:
    f160:	57 fd       	sbrc	r21, 7
    f162:	03 c0       	rjmp	.+6      	; 0xf16a <__xload_1+0xa>
    f164:	5b bf       	out	0x3b, r21	; 59
    f166:	67 91       	elpm	r22, Z+
    f168:	08 95       	ret
    f16a:	60 81       	ld	r22, Z
    f16c:	08 95       	ret

0000f16e <__udivmodqi4>:
    f16e:	99 1b       	sub	r25, r25
    f170:	79 e0       	ldi	r23, 0x09	; 9
    f172:	04 c0       	rjmp	.+8      	; 0xf17c <__udivmodqi4_ep>

0000f174 <__udivmodqi4_loop>:
    f174:	99 1f       	adc	r25, r25
    f176:	96 17       	cp	r25, r22
    f178:	08 f0       	brcs	.+2      	; 0xf17c <__udivmodqi4_ep>
    f17a:	96 1b       	sub	r25, r22

0000f17c <__udivmodqi4_ep>:
    f17c:	88 1f       	adc	r24, r24
    f17e:	7a 95       	dec	r23
    f180:	c9 f7       	brne	.-14     	; 0xf174 <__udivmodqi4_loop>
    f182:	80 95       	com	r24
    f184:	08 95       	ret

0000f186 <__do_global_dtors>:
    f186:	11 e0       	ldi	r17, 0x01	; 1
    f188:	ce ea       	ldi	r28, 0xAE	; 174
    f18a:	d1 e0       	ldi	r29, 0x01	; 1
    f18c:	04 c0       	rjmp	.+8      	; 0xf196 <__do_global_dtors+0x10>
    f18e:	fe 01       	movw	r30, r28
    f190:	0e 94 43 72 	call	0xe486	; 0xe486 <__tablejump2__>
    f194:	21 96       	adiw	r28, 0x01	; 1
    f196:	c0 3b       	cpi	r28, 0xB0	; 176
    f198:	d1 07       	cpc	r29, r17
    f19a:	c9 f7       	brne	.-14     	; 0xf18e <__do_global_dtors+0x8>
    f19c:	f8 94       	cli

0000f19e <__stop_program>:
    f19e:	ff cf       	rjmp	.-2      	; 0xf19e <__stop_program>
