
FlexFox80.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000220  00804000  00006f94  00007048  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00006f94  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000003db  00804220  00804220  00007268  2**0
                  ALLOC
  3 .eeprom       0000004a  00810000  00810000  00007268  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      0000005c  00000000  00000000  000072b2  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00007310  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 00000978  00000000  00000000  00007350  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00010910  00000000  00000000  00007cc8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00005af4  00000000  00000000  000185d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00006f8b  00000000  00000000  0001e0cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000019a4  00000000  00000000  00025058  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00005bec  00000000  00000000  000269fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000087e4  00000000  00000000  0002c5e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000808  00000000  00000000  00034dcc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 00 01 	jmp	0x200	; 0x200 <__dtors_end>
       4:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
       8:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
       c:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      10:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      14:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      18:	0c 94 91 18 	jmp	0x3122	; 0x3122 <__vector_6>
      1c:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      20:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      24:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      28:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      2c:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      30:	0c 94 82 09 	jmp	0x1304	; 0x1304 <__vector_12>
      34:	0c 94 41 2d 	jmp	0x5a82	; 0x5a82 <__vector_13>
      38:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      3c:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      40:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      44:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      48:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      4c:	0c 94 b0 04 	jmp	0x960	; 0x960 <__vector_19>
      50:	0c 94 2c 03 	jmp	0x658	; 0x658 <__vector_20>
      54:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      58:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      5c:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      60:	0c 94 14 18 	jmp	0x3028	; 0x3028 <__vector_24>
      64:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      68:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      6c:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      70:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      74:	0c 94 66 18 	jmp	0x30cc	; 0x30cc <__vector_29>
      78:	0c 94 8b 01 	jmp	0x316	; 0x316 <__vector_30>
      7c:	0c 94 e9 04 	jmp	0x9d2	; 0x9d2 <__vector_31>
      80:	0c 94 22 05 	jmp	0xa44	; 0xa44 <__vector_32>
      84:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      88:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      8c:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      90:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      94:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      98:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      9c:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      a0:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      a4:	0c 94 a6 05 	jmp	0xb4c	; 0xb4c <__vector_41>
      a8:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      ac:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      b0:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      b4:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      b8:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      bc:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      c0:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      c4:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      c8:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      cc:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      d0:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      d4:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      d8:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      dc:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      e0:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      e4:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      e8:	c1 1c       	adc	r12, r1
      ea:	c7 1c       	adc	r12, r7
      ec:	a9 1c       	adc	r10, r9
      ee:	c7 1c       	adc	r12, r7
      f0:	c7 1c       	adc	r12, r7
      f2:	c7 1c       	adc	r12, r7
      f4:	b2 1c       	adc	r11, r2
      f6:	c7 1c       	adc	r12, r7
      f8:	c7 1c       	adc	r12, r7
      fa:	c7 1c       	adc	r12, r7
      fc:	70 1c       	adc	r7, r0
      fe:	c7 1c       	adc	r12, r7
     100:	c7 1c       	adc	r12, r7
     102:	c7 1c       	adc	r12, r7
     104:	c7 1c       	adc	r12, r7
     106:	c7 1c       	adc	r12, r7
     108:	c7 1c       	adc	r12, r7
     10a:	c7 1c       	adc	r12, r7
     10c:	c7 1c       	adc	r12, r7
     10e:	c7 1c       	adc	r12, r7
     110:	c7 1c       	adc	r12, r7
     112:	c7 1c       	adc	r12, r7
     114:	c7 1c       	adc	r12, r7
     116:	c7 1c       	adc	r12, r7
     118:	c7 1c       	adc	r12, r7
     11a:	c7 1c       	adc	r12, r7
     11c:	c7 1c       	adc	r12, r7
     11e:	c7 1c       	adc	r12, r7
     120:	c7 1c       	adc	r12, r7
     122:	c7 1c       	adc	r12, r7
     124:	c7 1c       	adc	r12, r7
     126:	86 1c       	adc	r8, r6
     128:	c7 1c       	adc	r12, r7
     12a:	c7 1c       	adc	r12, r7
     12c:	c7 1c       	adc	r12, r7
     12e:	c7 1c       	adc	r12, r7
     130:	c7 1c       	adc	r12, r7
     132:	c7 1c       	adc	r12, r7
     134:	c7 1c       	adc	r12, r7
     136:	c7 1c       	adc	r12, r7
     138:	9d 1c       	adc	r9, r13
     13a:	a3 1c       	adc	r10, r3
     13c:	bb 1c       	adc	r11, r11
     13e:	7e 23       	and	r23, r30
     140:	42 23       	and	r20, r18
     142:	6e 23       	and	r22, r30
     144:	86 23       	and	r24, r22
     146:	72 23       	and	r23, r18
     148:	86 23       	and	r24, r22
     14a:	52 23       	and	r21, r18
     14c:	3e 23       	and	r19, r30
     14e:	4a 23       	and	r20, r26
     150:	4e 23       	and	r20, r30
     152:	86 23       	and	r24, r22
     154:	62 23       	and	r22, r18
     156:	36 23       	and	r19, r22
     158:	66 23       	and	r22, r22
     15a:	32 23       	and	r19, r18
     15c:	46 23       	and	r20, r22
     15e:	0a 23       	and	r16, r26
     160:	0e 23       	and	r16, r30
     162:	12 23       	and	r17, r18
     164:	16 23       	and	r17, r22
     166:	1a 23       	and	r17, r26
     168:	1e 23       	and	r17, r30
     16a:	22 23       	and	r18, r18
     16c:	26 23       	and	r18, r22
     16e:	2a 23       	and	r18, r26
     170:	2e 23       	and	r18, r30
     172:	56 23       	and	r21, r22
     174:	5a 23       	and	r21, r26
     176:	82 23       	and	r24, r18
     178:	5e 23       	and	r21, r30
     17a:	86 23       	and	r24, r22
     17c:	3a 23       	and	r19, r26
     17e:	76 23       	and	r23, r22
     180:	a2 22       	and	r10, r18
     182:	a6 22       	and	r10, r22
     184:	aa 22       	and	r10, r26
     186:	ae 22       	and	r10, r30
     188:	b2 22       	and	r11, r18
     18a:	b6 22       	and	r11, r22
     18c:	ba 22       	and	r11, r26
     18e:	be 22       	and	r11, r30
     190:	c2 22       	and	r12, r18
     192:	c6 22       	and	r12, r22
     194:	ca 22       	and	r12, r26
     196:	ce 22       	and	r12, r30
     198:	d2 22       	and	r13, r18
     19a:	d6 22       	and	r13, r22
     19c:	da 22       	and	r13, r26
     19e:	de 22       	and	r13, r30
     1a0:	e2 22       	and	r14, r18
     1a2:	e6 22       	and	r14, r22
     1a4:	ea 22       	and	r14, r26
     1a6:	ee 22       	and	r14, r30
     1a8:	f2 22       	and	r15, r18
     1aa:	f6 22       	and	r15, r22
     1ac:	fa 22       	and	r15, r26
     1ae:	fe 22       	and	r15, r30
     1b0:	02 23       	and	r16, r18
     1b2:	06 23       	and	r16, r22
     1b4:	86 23       	and	r24, r22
     1b6:	86 23       	and	r24, r22
     1b8:	86 23       	and	r24, r22
     1ba:	86 23       	and	r24, r22
     1bc:	6a 23       	and	r22, r26
     1be:	86 23       	and	r24, r22
     1c0:	86 23       	and	r24, r22
     1c2:	86 23       	and	r24, r22
     1c4:	86 23       	and	r24, r22
     1c6:	86 23       	and	r24, r22
     1c8:	86 23       	and	r24, r22
     1ca:	86 23       	and	r24, r22
     1cc:	86 23       	and	r24, r22
     1ce:	86 23       	and	r24, r22
     1d0:	86 23       	and	r24, r22
     1d2:	86 23       	and	r24, r22
     1d4:	86 23       	and	r24, r22
     1d6:	86 23       	and	r24, r22
     1d8:	86 23       	and	r24, r22
     1da:	86 23       	and	r24, r22
     1dc:	86 23       	and	r24, r22
     1de:	86 23       	and	r24, r22
     1e0:	86 23       	and	r24, r22
     1e2:	86 23       	and	r24, r22
     1e4:	86 23       	and	r24, r22
     1e6:	86 23       	and	r24, r22
     1e8:	86 23       	and	r24, r22
     1ea:	86 23       	and	r24, r22
     1ec:	86 23       	and	r24, r22
     1ee:	86 23       	and	r24, r22
     1f0:	86 23       	and	r24, r22
     1f2:	86 23       	and	r24, r22
     1f4:	86 23       	and	r24, r22
     1f6:	7a 23       	and	r23, r26

000001f8 <__ctors_start>:
     1f8:	52 17       	cp	r21, r18
     1fa:	44 18       	sub	r4, r4

000001fc <__ctors_end>:
     1fc:	59 17       	cp	r21, r25
     1fe:	4b 18       	sub	r4, r11

00000200 <__dtors_end>:
     200:	11 24       	eor	r1, r1
     202:	1f be       	out	0x3f, r1	; 63
     204:	cf ef       	ldi	r28, 0xFF	; 255
     206:	cd bf       	out	0x3d, r28	; 61
     208:	df e7       	ldi	r29, 0x7F	; 127
     20a:	de bf       	out	0x3e, r29	; 62

0000020c <__do_copy_data>:
     20c:	12 e4       	ldi	r17, 0x42	; 66
     20e:	a0 e0       	ldi	r26, 0x00	; 0
     210:	b0 e4       	ldi	r27, 0x40	; 64
     212:	e4 e9       	ldi	r30, 0x94	; 148
     214:	ff e6       	ldi	r31, 0x6F	; 111
     216:	00 e0       	ldi	r16, 0x00	; 0
     218:	0b bf       	out	0x3b, r16	; 59
     21a:	02 c0       	rjmp	.+4      	; 0x220 <__do_copy_data+0x14>
     21c:	07 90       	elpm	r0, Z+
     21e:	0d 92       	st	X+, r0
     220:	a0 32       	cpi	r26, 0x20	; 32
     222:	b1 07       	cpc	r27, r17
     224:	d9 f7       	brne	.-10     	; 0x21c <__do_copy_data+0x10>

00000226 <__do_clear_bss>:
     226:	25 e4       	ldi	r18, 0x45	; 69
     228:	a0 e2       	ldi	r26, 0x20	; 32
     22a:	b2 e4       	ldi	r27, 0x42	; 66
     22c:	01 c0       	rjmp	.+2      	; 0x230 <.do_clear_bss_start>

0000022e <.do_clear_bss_loop>:
     22e:	1d 92       	st	X+, r1

00000230 <.do_clear_bss_start>:
     230:	ab 3f       	cpi	r26, 0xFB	; 251
     232:	b2 07       	cpc	r27, r18
     234:	e1 f7       	brne	.-8      	; 0x22e <.do_clear_bss_loop>

00000236 <__do_global_ctors>:
     236:	10 e0       	ldi	r17, 0x00	; 0
     238:	ce ef       	ldi	r28, 0xFE	; 254
     23a:	d0 e0       	ldi	r29, 0x00	; 0
     23c:	04 c0       	rjmp	.+8      	; 0x246 <__do_global_ctors+0x10>
     23e:	21 97       	sbiw	r28, 0x01	; 1
     240:	fe 01       	movw	r30, r28
     242:	0e 94 aa 32 	call	0x6554	; 0x6554 <__tablejump2__>
     246:	cc 3f       	cpi	r28, 0xFC	; 252
     248:	d1 07       	cpc	r29, r17
     24a:	c9 f7       	brne	.-14     	; 0x23e <__do_global_ctors+0x8>
     24c:	0e 94 86 0a 	call	0x150c	; 0x150c <main>
     250:	0c 94 bd 37 	jmp	0x6f7a	; 0x6f7a <__do_global_dtors>

00000254 <__bad_interrupt>:
     254:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000258 <month_length>:
     258:	62 30       	cpi	r22, 0x02	; 2
     25a:	21 f4       	brne	.+8      	; 0x264 <month_length+0xc>
     25c:	0e 94 74 01 	call	0x2e8	; 0x2e8 <is_leap_year>
     260:	84 5e       	subi	r24, 0xE4	; 228
     262:	08 95       	ret
     264:	68 30       	cpi	r22, 0x08	; 8
     266:	08 f0       	brcs	.+2      	; 0x26a <month_length+0x12>
     268:	6f 5f       	subi	r22, 0xFF	; 255
     26a:	61 70       	andi	r22, 0x01	; 1
     26c:	8e e1       	ldi	r24, 0x1E	; 30
     26e:	86 0f       	add	r24, r22
     270:	08 95       	ret

00000272 <set_system_time>:
     272:	0f b6       	in	r0, 0x3f	; 63
     274:	f8 94       	cli
     276:	60 93 f7 45 	sts	0x45F7, r22	; 0x8045f7 <__system_time>
     27a:	70 93 f8 45 	sts	0x45F8, r23	; 0x8045f8 <__system_time+0x1>
     27e:	80 93 f9 45 	sts	0x45F9, r24	; 0x8045f9 <__system_time+0x2>
     282:	90 93 fa 45 	sts	0x45FA, r25	; 0x8045fa <__system_time+0x3>
     286:	0f be       	out	0x3f, r0	; 63
     288:	08 95       	ret

0000028a <time>:
     28a:	fc 01       	movw	r30, r24
     28c:	0f b6       	in	r0, 0x3f	; 63
     28e:	f8 94       	cli
     290:	60 91 f7 45 	lds	r22, 0x45F7	; 0x8045f7 <__system_time>
     294:	70 91 f8 45 	lds	r23, 0x45F8	; 0x8045f8 <__system_time+0x1>
     298:	80 91 f9 45 	lds	r24, 0x45F9	; 0x8045f9 <__system_time+0x2>
     29c:	90 91 fa 45 	lds	r25, 0x45FA	; 0x8045fa <__system_time+0x3>
     2a0:	0f be       	out	0x3f, r0	; 63
     2a2:	30 97       	sbiw	r30, 0x00	; 0
     2a4:	21 f0       	breq	.+8      	; 0x2ae <time+0x24>
     2a6:	60 83       	st	Z, r22
     2a8:	71 83       	std	Z+1, r23	; 0x01
     2aa:	82 83       	std	Z+2, r24	; 0x02
     2ac:	93 83       	std	Z+3, r25	; 0x03
     2ae:	08 95       	ret

000002b0 <system_tick>:
     2b0:	8f 93       	push	r24
     2b2:	8f b7       	in	r24, 0x3f	; 63
     2b4:	8f 93       	push	r24
     2b6:	f8 94       	cli
     2b8:	80 91 f7 45 	lds	r24, 0x45F7	; 0x8045f7 <__system_time>
     2bc:	8f 5f       	subi	r24, 0xFF	; 255
     2be:	80 93 f7 45 	sts	0x45F7, r24	; 0x8045f7 <__system_time>
     2c2:	80 91 f8 45 	lds	r24, 0x45F8	; 0x8045f8 <__system_time+0x1>
     2c6:	8f 4f       	sbci	r24, 0xFF	; 255
     2c8:	80 93 f8 45 	sts	0x45F8, r24	; 0x8045f8 <__system_time+0x1>
     2cc:	80 91 f9 45 	lds	r24, 0x45F9	; 0x8045f9 <__system_time+0x2>
     2d0:	8f 4f       	sbci	r24, 0xFF	; 255
     2d2:	80 93 f9 45 	sts	0x45F9, r24	; 0x8045f9 <__system_time+0x2>
     2d6:	80 91 fa 45 	lds	r24, 0x45FA	; 0x8045fa <__system_time+0x3>
     2da:	8f 4f       	sbci	r24, 0xFF	; 255
     2dc:	80 93 fa 45 	sts	0x45FA, r24	; 0x8045fa <__system_time+0x3>
     2e0:	8f 91       	pop	r24
     2e2:	8f bf       	out	0x3f, r24	; 63
     2e4:	8f 91       	pop	r24
     2e6:	08 95       	ret

000002e8 <is_leap_year>:
     2e8:	9c 01       	movw	r18, r24
     2ea:	23 70       	andi	r18, 0x03	; 3
     2ec:	33 27       	eor	r19, r19
     2ee:	23 2b       	or	r18, r19
     2f0:	59 f4       	brne	.+22     	; 0x308 <is_leap_year+0x20>
     2f2:	64 e6       	ldi	r22, 0x64	; 100
     2f4:	70 e0       	ldi	r23, 0x00	; 0
     2f6:	0e 94 55 32 	call	0x64aa	; 0x64aa <__divmodhi4>
     2fa:	89 2b       	or	r24, r25
     2fc:	39 f4       	brne	.+14     	; 0x30c <is_leap_year+0x24>
     2fe:	63 70       	andi	r22, 0x03	; 3
     300:	77 27       	eor	r23, r23
     302:	81 e0       	ldi	r24, 0x01	; 1
     304:	67 2b       	or	r22, r23
     306:	19 f0       	breq	.+6      	; 0x30e <is_leap_year+0x26>
     308:	80 e0       	ldi	r24, 0x00	; 0
     30a:	08 95       	ret
     30c:	81 e0       	ldi	r24, 0x01	; 1
     30e:	08 95       	ret

00000310 <atmel_start_init>:
/**
 * Initializes MCU, drivers and middleware in the project
 **/
void atmel_start_init(void)
{
	system_init();
     310:	0e 94 e0 19 	call	0x33c0	; 0x33c0 <system_init>
     314:	08 95       	ret

00000316 <__vector_30>:

extern USART_Number_t g_serialbus_usart_number;
extern USART_Number_t g_linkbus_usart_number;

ISR(TCB2_INT_vect)
{
     316:	1f 92       	push	r1
     318:	0f 92       	push	r0
     31a:	0f b6       	in	r0, 0x3f	; 63
     31c:	0f 92       	push	r0
     31e:	11 24       	eor	r1, r1
     320:	8f 93       	push	r24
	if(TCB2.INTFLAGS & TCB_CAPT_bm)
     322:	80 91 26 0b 	lds	r24, 0x0B26	; 0x800b26 <__TEXT_REGION_LENGTH__+0x7e0b26>
     326:	80 ff       	sbrs	r24, 0
     328:	03 c0       	rjmp	.+6      	; 0x330 <__vector_30+0x1a>
    {
        TCB2.INTFLAGS = TCB_CAPT_bm;
     32a:	81 e0       	ldi	r24, 0x01	; 1
     32c:	80 93 26 0b 	sts	0x0B26, r24	; 0x800b26 <__TEXT_REGION_LENGTH__+0x7e0b26>
    }
}
     330:	8f 91       	pop	r24
     332:	0f 90       	pop	r0
     334:	0f be       	out	0x3f, r0	; 63
     336:	0f 90       	pop	r0
     338:	1f 90       	pop	r1
     33a:	18 95       	reti

0000033c <_Z9serial_Rxh>:
		serial_Rx(rx_char);
	}
}

void serial_Rx(uint8_t rx_char)
{
     33c:	1f 93       	push	r17
     33e:	cf 93       	push	r28
     340:	df 93       	push	r29
     342:	18 2f       	mov	r17, r24
	static uint8_t field_index = 0;
	static uint8_t field_len = 0;
	static int msg_ID = 0;
	static BOOL receiving_msg = FALSE;

	if(!buff)
     344:	80 91 6f 42 	lds	r24, 0x426F	; 0x80426f <_ZZ9serial_RxhE4buff>
     348:	90 91 70 42 	lds	r25, 0x4270	; 0x804270 <_ZZ9serial_RxhE4buff+0x1>
     34c:	89 2b       	or	r24, r25
     34e:	31 f4       	brne	.+12     	; 0x35c <_Z9serial_Rxh+0x20>
	{
		buff = nextEmptySBRxBuffer();
     350:	0e 94 31 25 	call	0x4a62	; 0x4a62 <nextEmptySBRxBuffer>
     354:	80 93 6f 42 	sts	0x426F, r24	; 0x80426f <_ZZ9serial_RxhE4buff>
     358:	90 93 70 42 	sts	0x4270, r25	; 0x804270 <_ZZ9serial_RxhE4buff+0x1>
	}

	if(buff)
     35c:	c0 91 6f 42 	lds	r28, 0x426F	; 0x80426f <_ZZ9serial_RxhE4buff>
     360:	d0 91 70 42 	lds	r29, 0x4270	; 0x804270 <_ZZ9serial_RxhE4buff+0x1>
     364:	20 97       	sbiw	r28, 0x00	; 0
     366:	09 f4       	brne	.+2      	; 0x36a <_Z9serial_Rxh+0x2e>
     368:	73 c1       	rjmp	.+742    	; 0x650 <__LOCK_REGION_LENGTH__+0x250>
	{
		static uint8_t ignoreCount = 0;
		rx_char = toupper(rx_char);
     36a:	81 2f       	mov	r24, r17
     36c:	90 e0       	ldi	r25, 0x00	; 0
     36e:	0e 94 42 34 	call	0x6884	; 0x6884 <toupper>
     372:	ac 01       	movw	r20, r24
     374:	28 2f       	mov	r18, r24

		if(ignoreCount)
     376:	90 91 6e 42 	lds	r25, 0x426E	; 0x80426e <_ZZ9serial_RxhE11ignoreCount>
     37a:	99 23       	and	r25, r25
     37c:	21 f0       	breq	.+8      	; 0x386 <_Z9serial_Rxh+0x4a>
		{
			rx_char = '\0';
			ignoreCount--;
     37e:	91 50       	subi	r25, 0x01	; 1
     380:	90 93 6e 42 	sts	0x426E, r25	; 0x80426e <_ZZ9serial_RxhE11ignoreCount>
     384:	65 c1       	rjmp	.+714    	; 0x650 <__LOCK_REGION_LENGTH__+0x250>
		}
		else if(rx_char == 0x1B)    /* Ignore ESC sequences */
     386:	4b 31       	cpi	r20, 0x1B	; 27
     388:	21 f4       	brne	.+8      	; 0x392 <_Z9serial_Rxh+0x56>
			if(charIndex < SERIALBUS_MAX_MSG_FIELD_LENGTH)
			{
				rx_char = textBuff[charIndex];
			}

			ignoreCount = 2;        /* throw out the next two characters */
     38a:	82 e0       	ldi	r24, 0x02	; 2
     38c:	80 93 6e 42 	sts	0x426E, r24	; 0x80426e <_ZZ9serial_RxhE11ignoreCount>
     390:	5f c1       	rjmp	.+702    	; 0x650 <__LOCK_REGION_LENGTH__+0x250>
		}
		else if(rx_char == 0x0D)    /* Handle carriage return */
     392:	4d 30       	cpi	r20, 0x0D	; 13
     394:	09 f0       	breq	.+2      	; 0x398 <_Z9serial_Rxh+0x5c>
     396:	3f c0       	rjmp	.+126    	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
		{
			if(receiving_msg)
     398:	80 91 3a 42 	lds	r24, 0x423A	; 0x80423a <_ZZ9serial_RxhE13receiving_msg>
     39c:	88 23       	and	r24, r24
     39e:	31 f1       	breq	.+76     	; 0x3ec <_Z9serial_Rxh+0xb0>
			{
				if(charIndex > 0)
     3a0:	e0 91 6d 42 	lds	r30, 0x426D	; 0x80426d <_ZZ9serial_RxhE9charIndex>
     3a4:	ee 23       	and	r30, r30
     3a6:	f9 f0       	breq	.+62     	; 0x3e6 <_Z9serial_Rxh+0xaa>
				{
					buff->type = SERIALBUS_MSG_QUERY;
     3a8:	82 e0       	ldi	r24, 0x02	; 2
     3aa:	88 83       	st	Y, r24
					buff->id = (SBMessageID)msg_ID;
     3ac:	80 91 38 42 	lds	r24, 0x4238	; 0x804238 <_ZZ9serial_RxhE6msg_ID>
     3b0:	90 91 39 42 	lds	r25, 0x4239	; 0x804239 <_ZZ9serial_RxhE6msg_ID+0x1>
     3b4:	89 83       	std	Y+1, r24	; 0x01
     3b6:	9a 83       	std	Y+2, r25	; 0x02

					if(field_index > 0) /* terminate the last field */
     3b8:	80 91 37 42 	lds	r24, 0x4237	; 0x804237 <_ZZ9serial_RxhE11field_index>
     3bc:	88 23       	and	r24, r24
     3be:	79 f0       	breq	.+30     	; 0x3de <_Z9serial_Rxh+0xa2>
					{
						buff->fields[field_index - 1][field_len] = 0;
     3c0:	90 e0       	ldi	r25, 0x00	; 0
     3c2:	01 97       	sbiw	r24, 0x01	; 1
     3c4:	40 91 36 42 	lds	r20, 0x4236	; 0x804236 <_ZZ9serial_RxhE9field_len>
     3c8:	54 e1       	ldi	r21, 0x14	; 20
     3ca:	58 9f       	mul	r21, r24
     3cc:	90 01       	movw	r18, r0
     3ce:	59 9f       	mul	r21, r25
     3d0:	30 0d       	add	r19, r0
     3d2:	11 24       	eor	r1, r1
     3d4:	c2 0f       	add	r28, r18
     3d6:	d3 1f       	adc	r29, r19
     3d8:	c4 0f       	add	r28, r20
     3da:	d1 1d       	adc	r29, r1
     3dc:	1b 82       	std	Y+3, r1	; 0x03
					}

					textBuff[charIndex] = '\0'; /* terminate last-message buffer */
     3de:	f0 e0       	ldi	r31, 0x00	; 0
     3e0:	e5 5c       	subi	r30, 0xC5	; 197
     3e2:	fd 4b       	sbci	r31, 0xBD	; 189
     3e4:	10 82       	st	Z, r1
				}

				sb_send_NewLine();
     3e6:	0e 94 33 26 	call	0x4c66	; 0x4c66 <sb_send_NewLine>
     3ea:	04 c0       	rjmp	.+8      	; 0x3f4 <_Z9serial_Rxh+0xb8>
			}
			else
			{
				buff->id = SB_INVALID_MESSAGE; /* print help message */
     3ec:	8f ef       	ldi	r24, 0xFF	; 255
     3ee:	9f ef       	ldi	r25, 0xFF	; 255
     3f0:	89 83       	std	Y+1, r24	; 0x01
     3f2:	9a 83       	std	Y+2, r25	; 0x02
			}

			charIndex = 0;
     3f4:	10 92 6d 42 	sts	0x426D, r1	; 0x80426d <_ZZ9serial_RxhE9charIndex>
			field_len = 0;
     3f8:	10 92 36 42 	sts	0x4236, r1	; 0x804236 <_ZZ9serial_RxhE9field_len>
			msg_ID = LB_MESSAGE_EMPTY;
     3fc:	10 92 38 42 	sts	0x4238, r1	; 0x804238 <_ZZ9serial_RxhE6msg_ID>
     400:	10 92 39 42 	sts	0x4239, r1	; 0x804239 <_ZZ9serial_RxhE6msg_ID+0x1>

			field_index = 0;
     404:	10 92 37 42 	sts	0x4237, r1	; 0x804237 <_ZZ9serial_RxhE11field_index>
			buff = NULL;
     408:	10 92 6f 42 	sts	0x426F, r1	; 0x80426f <_ZZ9serial_RxhE4buff>
     40c:	10 92 70 42 	sts	0x4270, r1	; 0x804270 <_ZZ9serial_RxhE4buff+0x1>

			receiving_msg = FALSE;
     410:	10 92 3a 42 	sts	0x423A, r1	; 0x80423a <_ZZ9serial_RxhE13receiving_msg>
     414:	1d c1       	rjmp	.+570    	; 0x650 <__LOCK_REGION_LENGTH__+0x250>
		}
		else if(rx_char)
     416:	44 23       	and	r20, r20
     418:	09 f4       	brne	.+2      	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
     41a:	1a c1       	rjmp	.+564    	; 0x650 <__LOCK_REGION_LENGTH__+0x250>
		{
			textBuff[charIndex] = rx_char;  /* hold the characters for re-use */
     41c:	e0 91 6d 42 	lds	r30, 0x426D	; 0x80426d <_ZZ9serial_RxhE9charIndex>
     420:	8e 2f       	mov	r24, r30
     422:	90 e0       	ldi	r25, 0x00	; 0
     424:	dc 01       	movw	r26, r24
     426:	a5 5c       	subi	r26, 0xC5	; 197
     428:	bd 4b       	sbci	r27, 0xBD	; 189
     42a:	4c 93       	st	X, r20

			if(charIndex)
     42c:	ee 23       	and	r30, r30
     42e:	09 f4       	brne	.+2      	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
     430:	d7 c0       	rjmp	.+430    	; 0x5e0 <__LOCK_REGION_LENGTH__+0x1e0>
			{
				if(rx_char == 0x7F)         /* Handle backspace */
     432:	4f 37       	cpi	r20, 0x7F	; 127
     434:	09 f0       	breq	.+2      	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
     436:	5f c0       	rjmp	.+190    	; 0x4f6 <__LOCK_REGION_LENGTH__+0xf6>
				{
					charIndex--;
     438:	e1 50       	subi	r30, 0x01	; 1
     43a:	e0 93 6d 42 	sts	0x426D, r30	; 0x80426d <_ZZ9serial_RxhE9charIndex>
					if(field_index == 0)
     43e:	80 91 37 42 	lds	r24, 0x4237	; 0x804237 <_ZZ9serial_RxhE11field_index>
     442:	81 11       	cpse	r24, r1
     444:	13 c0       	rjmp	.+38     	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
					{
						msg_ID -= textBuff[charIndex];
     446:	f0 e0       	ldi	r31, 0x00	; 0
     448:	e5 5c       	subi	r30, 0xC5	; 197
     44a:	fd 4b       	sbci	r31, 0xBD	; 189
     44c:	30 81       	ld	r19, Z
     44e:	80 91 38 42 	lds	r24, 0x4238	; 0x804238 <_ZZ9serial_RxhE6msg_ID>
     452:	90 91 39 42 	lds	r25, 0x4239	; 0x804239 <_ZZ9serial_RxhE6msg_ID+0x1>
     456:	83 1b       	sub	r24, r19
     458:	91 09       	sbc	r25, r1
						msg_ID /= 10;
     45a:	6a e0       	ldi	r22, 0x0A	; 10
     45c:	70 e0       	ldi	r23, 0x00	; 0
     45e:	0e 94 55 32 	call	0x64aa	; 0x64aa <__divmodhi4>
     462:	60 93 38 42 	sts	0x4238, r22	; 0x804238 <_ZZ9serial_RxhE6msg_ID>
     466:	70 93 39 42 	sts	0x4239, r23	; 0x804239 <_ZZ9serial_RxhE6msg_ID+0x1>
     46a:	39 c0       	rjmp	.+114    	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
					}
					else if(field_len)
     46c:	90 91 36 42 	lds	r25, 0x4236	; 0x804236 <_ZZ9serial_RxhE9field_len>
     470:	99 23       	and	r25, r25
     472:	91 f0       	breq	.+36     	; 0x498 <__LOCK_REGION_LENGTH__+0x98>
					{
						field_len--;
     474:	3f ef       	ldi	r19, 0xFF	; 255
     476:	39 0f       	add	r19, r25
     478:	30 93 36 42 	sts	0x4236, r19	; 0x804236 <_ZZ9serial_RxhE9field_len>
						buff->fields[field_index - 1][field_len] = '\0';
     47c:	90 e0       	ldi	r25, 0x00	; 0
     47e:	01 97       	sbiw	r24, 0x01	; 1
     480:	64 e1       	ldi	r22, 0x14	; 20
     482:	68 9f       	mul	r22, r24
     484:	a0 01       	movw	r20, r0
     486:	69 9f       	mul	r22, r25
     488:	50 0d       	add	r21, r0
     48a:	11 24       	eor	r1, r1
     48c:	c4 0f       	add	r28, r20
     48e:	d5 1f       	adc	r29, r21
     490:	c3 0f       	add	r28, r19
     492:	d1 1d       	adc	r29, r1
     494:	1b 82       	std	Y+3, r1	; 0x03
     496:	23 c0       	rjmp	.+70     	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
					}
					else if(textBuff[charIndex] == ' ')
     498:	f0 e0       	ldi	r31, 0x00	; 0
     49a:	e5 5c       	subi	r30, 0xC5	; 197
     49c:	fd 4b       	sbci	r31, 0xBD	; 189
     49e:	90 81       	ld	r25, Z
     4a0:	90 32       	cpi	r25, 0x20	; 32
     4a2:	a1 f4       	brne	.+40     	; 0x4cc <__LOCK_REGION_LENGTH__+0xcc>
					{
						field_index--;
     4a4:	81 50       	subi	r24, 0x01	; 1
     4a6:	80 93 37 42 	sts	0x4237, r24	; 0x804237 <_ZZ9serial_RxhE11field_index>
						field_len = strlen(buff->fields[field_index]);
     4aa:	34 e1       	ldi	r19, 0x14	; 20
     4ac:	83 9f       	mul	r24, r19
     4ae:	c0 01       	movw	r24, r0
     4b0:	11 24       	eor	r1, r1
     4b2:	03 96       	adiw	r24, 0x03	; 3
     4b4:	c8 0f       	add	r28, r24
     4b6:	d9 1f       	adc	r29, r25
     4b8:	fe 01       	movw	r30, r28
     4ba:	01 90       	ld	r0, Z+
     4bc:	00 20       	and	r0, r0
     4be:	e9 f7       	brne	.-6      	; 0x4ba <__LOCK_REGION_LENGTH__+0xba>
     4c0:	31 97       	sbiw	r30, 0x01	; 1
     4c2:	ec 1b       	sub	r30, r28
     4c4:	fd 0b       	sbc	r31, r29
     4c6:	e0 93 36 42 	sts	0x4236, r30	; 0x804236 <_ZZ9serial_RxhE9field_len>
     4ca:	09 c0       	rjmp	.+18     	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
					}
					else
					{
						buff->fields[field_index][0] = '\0';
     4cc:	94 e1       	ldi	r25, 0x14	; 20
     4ce:	89 9f       	mul	r24, r25
     4d0:	c0 0d       	add	r28, r0
     4d2:	d1 1d       	adc	r29, r1
     4d4:	11 24       	eor	r1, r1
     4d6:	1b 82       	std	Y+3, r1	; 0x03
						field_index--;
     4d8:	81 50       	subi	r24, 0x01	; 1
     4da:	80 93 37 42 	sts	0x4237, r24	; 0x804237 <_ZZ9serial_RxhE11field_index>
					}

					textBuff[charIndex] = '\0'; /* replace deleted char with null */
     4de:	80 91 6d 42 	lds	r24, 0x426D	; 0x80426d <_ZZ9serial_RxhE9charIndex>
     4e2:	e8 2f       	mov	r30, r24
     4e4:	f0 e0       	ldi	r31, 0x00	; 0
     4e6:	e5 5c       	subi	r30, 0xC5	; 197
     4e8:	fd 4b       	sbci	r31, 0xBD	; 189
     4ea:	10 82       	st	Z, r1

					if(charIndex == 0)
     4ec:	81 11       	cpse	r24, r1
     4ee:	ab c0       	rjmp	.+342    	; 0x646 <__LOCK_REGION_LENGTH__+0x246>
					{
						receiving_msg = FALSE;
     4f0:	10 92 3a 42 	sts	0x423A, r1	; 0x80423a <_ZZ9serial_RxhE13receiving_msg>
     4f4:	a8 c0       	rjmp	.+336    	; 0x646 <__LOCK_REGION_LENGTH__+0x246>
					}
				}
				else
				{
					if(rx_char == ' ')
     4f6:	40 32       	cpi	r20, 0x20	; 32
     4f8:	81 f5       	brne	.+96     	; 0x55a <__LOCK_REGION_LENGTH__+0x15a>
					{
						if((textBuff[charIndex - 1] == ' ') || ((field_index + 1) >= LINKBUS_MAX_MSG_NUMBER_OF_FIELDS))
     4fa:	fc 01       	movw	r30, r24
     4fc:	e6 5c       	subi	r30, 0xC6	; 198
     4fe:	fd 4b       	sbci	r31, 0xBD	; 189
     500:	30 81       	ld	r19, Z
     502:	30 32       	cpi	r19, 0x20	; 32
     504:	09 f4       	brne	.+2      	; 0x508 <__LOCK_REGION_LENGTH__+0x108>
     506:	98 c0       	rjmp	.+304    	; 0x638 <__LOCK_REGION_LENGTH__+0x238>
     508:	30 91 37 42 	lds	r19, 0x4237	; 0x804237 <_ZZ9serial_RxhE11field_index>
     50c:	43 2f       	mov	r20, r19
     50e:	50 e0       	ldi	r21, 0x00	; 0
     510:	ba 01       	movw	r22, r20
     512:	6f 5f       	subi	r22, 0xFF	; 255
     514:	7f 4f       	sbci	r23, 0xFF	; 255
     516:	63 30       	cpi	r22, 0x03	; 3
     518:	71 05       	cpc	r23, r1
     51a:	0c f0       	brlt	.+2      	; 0x51e <__LOCK_REGION_LENGTH__+0x11e>
     51c:	8f c0       	rjmp	.+286    	; 0x63c <__LOCK_REGION_LENGTH__+0x23c>
						{
							rx_char = '\0';
						}
						else
						{
							if(field_index > 0)
     51e:	33 23       	and	r19, r19
     520:	79 f0       	breq	.+30     	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
							{
								buff->fields[field_index - 1][field_len] = '\0';
     522:	41 50       	subi	r20, 0x01	; 1
     524:	51 09       	sbc	r21, r1
     526:	e0 91 36 42 	lds	r30, 0x4236	; 0x804236 <_ZZ9serial_RxhE9field_len>
     52a:	f4 e1       	ldi	r31, 0x14	; 20
     52c:	f4 9f       	mul	r31, r20
     52e:	b0 01       	movw	r22, r0
     530:	f5 9f       	mul	r31, r21
     532:	70 0d       	add	r23, r0
     534:	11 24       	eor	r1, r1
     536:	c6 0f       	add	r28, r22
     538:	d7 1f       	adc	r29, r23
     53a:	ce 0f       	add	r28, r30
     53c:	d1 1d       	adc	r29, r1
     53e:	1b 82       	std	Y+3, r1	; 0x03
							}

							field_index++;
     540:	3f 5f       	subi	r19, 0xFF	; 255
     542:	30 93 37 42 	sts	0x4237, r19	; 0x804237 <_ZZ9serial_RxhE11field_index>
							field_len = 0;
     546:	10 92 36 42 	sts	0x4236, r1	; 0x804236 <_ZZ9serial_RxhE9field_len>
							charIndex = MIN(charIndex + 1, (LINKBUS_MAX_MSG_LENGTH - 1));
     54a:	01 96       	adiw	r24, 0x01	; 1
     54c:	81 33       	cpi	r24, 0x31	; 49
     54e:	91 05       	cpc	r25, r1
     550:	0c f0       	brlt	.+2      	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
     552:	81 e3       	ldi	r24, 0x31	; 49
     554:	80 93 6d 42 	sts	0x426D, r24	; 0x80426d <_ZZ9serial_RxhE9charIndex>
     558:	76 c0       	rjmp	.+236    	; 0x646 <__LOCK_REGION_LENGTH__+0x246>
						}
					}
					else if(field_len < LINKBUS_MAX_MSG_FIELD_LENGTH)
     55a:	80 91 36 42 	lds	r24, 0x4236	; 0x804236 <_ZZ9serial_RxhE9field_len>
     55e:	85 31       	cpi	r24, 0x15	; 21
     560:	08 f0       	brcs	.+2      	; 0x564 <__LOCK_REGION_LENGTH__+0x164>
     562:	6e c0       	rjmp	.+220    	; 0x640 <__LOCK_REGION_LENGTH__+0x240>
					{
						if(field_index == 0)    /* message ID received */
     564:	60 91 37 42 	lds	r22, 0x4237	; 0x804237 <_ZZ9serial_RxhE11field_index>
     568:	61 11       	cpse	r22, r1
     56a:	19 c0       	rjmp	.+50     	; 0x59e <__LOCK_REGION_LENGTH__+0x19e>
						{
							msg_ID = msg_ID * 10 + rx_char;
     56c:	60 91 38 42 	lds	r22, 0x4238	; 0x804238 <_ZZ9serial_RxhE6msg_ID>
     570:	70 91 39 42 	lds	r23, 0x4239	; 0x804239 <_ZZ9serial_RxhE6msg_ID+0x1>
     574:	fb 01       	movw	r30, r22
     576:	ee 0f       	add	r30, r30
     578:	ff 1f       	adc	r31, r31
     57a:	66 0f       	add	r22, r22
     57c:	77 1f       	adc	r23, r23
     57e:	66 0f       	add	r22, r22
     580:	77 1f       	adc	r23, r23
     582:	66 0f       	add	r22, r22
     584:	77 1f       	adc	r23, r23
     586:	6e 0f       	add	r22, r30
     588:	7f 1f       	adc	r23, r31
     58a:	64 0f       	add	r22, r20
     58c:	71 1d       	adc	r23, r1
     58e:	60 93 38 42 	sts	0x4238, r22	; 0x804238 <_ZZ9serial_RxhE6msg_ID>
     592:	70 93 39 42 	sts	0x4239, r23	; 0x804239 <_ZZ9serial_RxhE6msg_ID+0x1>
							field_len++;
     596:	8f 5f       	subi	r24, 0xFF	; 255
     598:	80 93 36 42 	sts	0x4236, r24	; 0x804236 <_ZZ9serial_RxhE9field_len>
     59c:	16 c0       	rjmp	.+44     	; 0x5ca <__LOCK_REGION_LENGTH__+0x1ca>
						}
						else
						{
							buff->fields[field_index - 1][field_len++] = rx_char;
     59e:	70 e0       	ldi	r23, 0x00	; 0
     5a0:	61 50       	subi	r22, 0x01	; 1
     5a2:	71 09       	sbc	r23, r1
     5a4:	91 e0       	ldi	r25, 0x01	; 1
     5a6:	98 0f       	add	r25, r24
     5a8:	90 93 36 42 	sts	0x4236, r25	; 0x804236 <_ZZ9serial_RxhE9field_len>
     5ac:	34 e1       	ldi	r19, 0x14	; 20
     5ae:	36 9f       	mul	r19, r22
     5b0:	f0 01       	movw	r30, r0
     5b2:	37 9f       	mul	r19, r23
     5b4:	f0 0d       	add	r31, r0
     5b6:	11 24       	eor	r1, r1
     5b8:	ce 0f       	add	r28, r30
     5ba:	df 1f       	adc	r29, r31
     5bc:	fe 01       	movw	r30, r28
     5be:	e8 0f       	add	r30, r24
     5c0:	f1 1d       	adc	r31, r1
     5c2:	43 83       	std	Z+3, r20	; 0x03
							buff->fields[field_index - 1][field_len] = '\0';
     5c4:	c9 0f       	add	r28, r25
     5c6:	d1 1d       	adc	r29, r1
     5c8:	1b 82       	std	Y+3, r1	; 0x03
						}

						charIndex = MIN(charIndex + 1, (LINKBUS_MAX_MSG_LENGTH - 1));
     5ca:	80 91 6d 42 	lds	r24, 0x426D	; 0x80426d <_ZZ9serial_RxhE9charIndex>
     5ce:	90 e0       	ldi	r25, 0x00	; 0
     5d0:	01 96       	adiw	r24, 0x01	; 1
     5d2:	81 33       	cpi	r24, 0x31	; 49
     5d4:	91 05       	cpc	r25, r1
     5d6:	0c f0       	brlt	.+2      	; 0x5da <__LOCK_REGION_LENGTH__+0x1da>
     5d8:	81 e3       	ldi	r24, 0x31	; 49
     5da:	80 93 6d 42 	sts	0x426D, r24	; 0x80426d <_ZZ9serial_RxhE9charIndex>
     5de:	33 c0       	rjmp	.+102    	; 0x646 <__LOCK_REGION_LENGTH__+0x246>
					}
				}
			}
			else
			{
				if(rx_char == 0x7F) /* Handle Backspace */
     5e0:	4f 37       	cpi	r20, 0x7F	; 127
     5e2:	69 f4       	brne	.+26     	; 0x5fe <__LOCK_REGION_LENGTH__+0x1fe>
				{
					if(msg_ID <= 0)
     5e4:	80 91 38 42 	lds	r24, 0x4238	; 0x804238 <_ZZ9serial_RxhE6msg_ID>
     5e8:	90 91 39 42 	lds	r25, 0x4239	; 0x804239 <_ZZ9serial_RxhE6msg_ID+0x1>
     5ec:	18 16       	cp	r1, r24
     5ee:	19 06       	cpc	r1, r25
     5f0:	0c f0       	brlt	.+2      	; 0x5f4 <__LOCK_REGION_LENGTH__+0x1f4>
					{
						rx_char = '\0';
     5f2:	20 e0       	ldi	r18, 0x00	; 0
					}

					msg_ID = 0;
     5f4:	10 92 38 42 	sts	0x4238, r1	; 0x804238 <_ZZ9serial_RxhE6msg_ID>
     5f8:	10 92 39 42 	sts	0x4239, r1	; 0x804239 <_ZZ9serial_RxhE6msg_ID+0x1>
     5fc:	24 c0       	rjmp	.+72     	; 0x646 <__LOCK_REGION_LENGTH__+0x246>
				}
				else if(rx_char == ' ') /* Handle Space */
     5fe:	40 32       	cpi	r20, 0x20	; 32
     600:	09 f1       	breq	.+66     	; 0x644 <__LOCK_REGION_LENGTH__+0x244>
					rx_char = '\0';
				}
				else                    /* start of new message */
				{
					uint8_t i;
					field_index = 0;
     602:	10 92 37 42 	sts	0x4237, r1	; 0x804237 <_ZZ9serial_RxhE11field_index>
					msg_ID = rx_char;
     606:	55 27       	eor	r21, r21
     608:	40 93 38 42 	sts	0x4238, r20	; 0x804238 <_ZZ9serial_RxhE6msg_ID>
     60c:	50 93 39 42 	sts	0x4239, r21	; 0x804239 <_ZZ9serial_RxhE6msg_ID+0x1>

					/* Empty the field buffers */
					for(i = 0; i < LINKBUS_MAX_MSG_NUMBER_OF_FIELDS; i++)
     610:	80 e0       	ldi	r24, 0x00	; 0
     612:	83 30       	cpi	r24, 0x03	; 3
     614:	50 f4       	brcc	.+20     	; 0x62a <__LOCK_REGION_LENGTH__+0x22a>
					{
						buff->fields[i][0] = '\0';
     616:	de 01       	movw	r26, r28
     618:	34 e1       	ldi	r19, 0x14	; 20
     61a:	83 9f       	mul	r24, r19
     61c:	a0 0d       	add	r26, r0
     61e:	b1 1d       	adc	r27, r1
     620:	11 24       	eor	r1, r1
     622:	13 96       	adiw	r26, 0x03	; 3
     624:	1c 92       	st	X, r1
					uint8_t i;
					field_index = 0;
					msg_ID = rx_char;

					/* Empty the field buffers */
					for(i = 0; i < LINKBUS_MAX_MSG_NUMBER_OF_FIELDS; i++)
     626:	8f 5f       	subi	r24, 0xFF	; 255
     628:	f4 cf       	rjmp	.-24     	; 0x612 <__LOCK_REGION_LENGTH__+0x212>
					{
						buff->fields[i][0] = '\0';
					}

					receiving_msg = TRUE;
     62a:	81 e0       	ldi	r24, 0x01	; 1
     62c:	80 93 3a 42 	sts	0x423A, r24	; 0x80423a <_ZZ9serial_RxhE13receiving_msg>
					charIndex++;
     630:	ef 5f       	subi	r30, 0xFF	; 255
     632:	e0 93 6d 42 	sts	0x426D, r30	; 0x80426d <_ZZ9serial_RxhE9charIndex>
     636:	07 c0       	rjmp	.+14     	; 0x646 <__LOCK_REGION_LENGTH__+0x246>
				{
					if(rx_char == ' ')
					{
						if((textBuff[charIndex - 1] == ' ') || ((field_index + 1) >= LINKBUS_MAX_MSG_NUMBER_OF_FIELDS))
						{
							rx_char = '\0';
     638:	20 e0       	ldi	r18, 0x00	; 0
     63a:	05 c0       	rjmp	.+10     	; 0x646 <__LOCK_REGION_LENGTH__+0x246>
     63c:	20 e0       	ldi	r18, 0x00	; 0
     63e:	03 c0       	rjmp	.+6      	; 0x646 <__LOCK_REGION_LENGTH__+0x246>

						charIndex = MIN(charIndex + 1, (LINKBUS_MAX_MSG_LENGTH - 1));
					}
					else
					{
						rx_char = '\0';
     640:	20 e0       	ldi	r18, 0x00	; 0
     642:	01 c0       	rjmp	.+2      	; 0x646 <__LOCK_REGION_LENGTH__+0x246>

					msg_ID = 0;
				}
				else if(rx_char == ' ') /* Handle Space */
				{
					rx_char = '\0';
     644:	20 e0       	ldi	r18, 0x00	; 0
					receiving_msg = TRUE;
					charIndex++;
				}
			}

			if(rx_char)
     646:	22 23       	and	r18, r18
     648:	19 f0       	breq	.+6      	; 0x650 <__LOCK_REGION_LENGTH__+0x250>
			{
				sb_echo_char(rx_char);
     64a:	82 2f       	mov	r24, r18
     64c:	0e 94 3c 26 	call	0x4c78	; 0x4c78 <sb_echo_char>
			}
		}
	}	
}
     650:	df 91       	pop	r29
     652:	cf 91       	pop	r28
     654:	1f 91       	pop	r17
     656:	08 95       	ret

00000658 <__vector_20>:

/**

*/
ISR(USART0_DRE_vect)
{
     658:	1f 92       	push	r1
     65a:	0f 92       	push	r0
     65c:	0f b6       	in	r0, 0x3f	; 63
     65e:	0f 92       	push	r0
     660:	11 24       	eor	r1, r1
     662:	0b b6       	in	r0, 0x3b	; 59
     664:	0f 92       	push	r0
     666:	2f 93       	push	r18
     668:	3f 93       	push	r19
     66a:	4f 93       	push	r20
     66c:	5f 93       	push	r21
     66e:	6f 93       	push	r22
     670:	7f 93       	push	r23
     672:	8f 93       	push	r24
     674:	9f 93       	push	r25
     676:	af 93       	push	r26
     678:	bf 93       	push	r27
     67a:	ef 93       	push	r30
     67c:	ff 93       	push	r31
	if(g_linkbus_usart_number == USART_0)
     67e:	80 91 22 40 	lds	r24, 0x4022	; 0x804022 <g_linkbus_usart_number>
     682:	81 11       	cpse	r24, r1
     684:	2b c0       	rjmp	.+86     	; 0x6dc <__vector_20+0x84>
	{
		static LinkbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
     686:	80 91 34 42 	lds	r24, 0x4234	; 0x804234 <_ZZ11__vector_20E4buff>
     68a:	90 91 35 42 	lds	r25, 0x4235	; 0x804235 <_ZZ11__vector_20E4buff+0x1>
     68e:	89 2b       	or	r24, r25
     690:	31 f4       	brne	.+12     	; 0x69e <__vector_20+0x46>
		{
			buff = nextFullLBTxBuffer();
     692:	0e 94 89 20 	call	0x4112	; 0x4112 <_Z18nextFullLBTxBufferv>
     696:	80 93 34 42 	sts	0x4234, r24	; 0x804234 <_ZZ11__vector_20E4buff>
     69a:	90 93 35 42 	sts	0x4235, r25	; 0x804235 <_ZZ11__vector_20E4buff+0x1>
		}

		if((*buff)[charIndex])
     69e:	e0 91 34 42 	lds	r30, 0x4234	; 0x804234 <_ZZ11__vector_20E4buff>
     6a2:	f0 91 35 42 	lds	r31, 0x4235	; 0x804235 <_ZZ11__vector_20E4buff+0x1>
     6a6:	80 91 33 42 	lds	r24, 0x4233	; 0x804233 <_ZZ11__vector_20E9charIndex>
     6aa:	df 01       	movw	r26, r30
     6ac:	a8 0f       	add	r26, r24
     6ae:	b1 1d       	adc	r27, r1
     6b0:	9c 91       	ld	r25, X
     6b2:	99 23       	and	r25, r25
     6b4:	31 f0       	breq	.+12     	; 0x6c2 <__vector_20+0x6a>
		{
			/* Put data into buffer, sends the data */
			USART0.TXDATAL = (*buff)[charIndex++];
     6b6:	8f 5f       	subi	r24, 0xFF	; 255
     6b8:	80 93 33 42 	sts	0x4233, r24	; 0x804233 <_ZZ11__vector_20E9charIndex>
     6bc:	90 93 02 08 	sts	0x0802, r25	; 0x800802 <__TEXT_REGION_LENGTH__+0x7e0802>
     6c0:	0d c0       	rjmp	.+26     	; 0x6dc <__vector_20+0x84>
		}
		else
		{
			charIndex = 0;
     6c2:	10 92 33 42 	sts	0x4233, r1	; 0x804233 <_ZZ11__vector_20E9charIndex>
			(*buff)[0] = '\0';
     6c6:	10 82       	st	Z, r1
			buff = nextFullLBTxBuffer();
     6c8:	0e 94 89 20 	call	0x4112	; 0x4112 <_Z18nextFullLBTxBufferv>
     6cc:	80 93 34 42 	sts	0x4234, r24	; 0x804234 <_ZZ11__vector_20E4buff>
     6d0:	90 93 35 42 	sts	0x4235, r25	; 0x804235 <_ZZ11__vector_20E4buff+0x1>
			if(!buff)
     6d4:	89 2b       	or	r24, r25
     6d6:	11 f4       	brne	.+4      	; 0x6dc <__vector_20+0x84>
			{
				linkbus_end_tx();
     6d8:	0e 94 3e 21 	call	0x427c	; 0x427c <_Z14linkbus_end_txv>
			}
		}
	}
	
	if(g_serialbus_usart_number == USART_0)
     6dc:	80 91 27 40 	lds	r24, 0x4027	; 0x804027 <g_serialbus_usart_number>
     6e0:	81 11       	cpse	r24, r1
     6e2:	2b c0       	rjmp	.+86     	; 0x73a <__vector_20+0xe2>
	{
		static SerialbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
     6e4:	80 91 31 42 	lds	r24, 0x4231	; 0x804231 <_ZZ11__vector_20E4buff_0>
     6e8:	90 91 32 42 	lds	r25, 0x4232	; 0x804232 <_ZZ11__vector_20E4buff_0+0x1>
     6ec:	89 2b       	or	r24, r25
     6ee:	31 f4       	brne	.+12     	; 0x6fc <__vector_20+0xa4>
		{
			buff = nextFullSBTxBuffer();
     6f0:	0e 94 d9 24 	call	0x49b2	; 0x49b2 <nextFullSBTxBuffer>
     6f4:	80 93 31 42 	sts	0x4231, r24	; 0x804231 <_ZZ11__vector_20E4buff_0>
     6f8:	90 93 32 42 	sts	0x4232, r25	; 0x804232 <_ZZ11__vector_20E4buff_0+0x1>
		}

		if((*buff)[charIndex])
     6fc:	e0 91 31 42 	lds	r30, 0x4231	; 0x804231 <_ZZ11__vector_20E4buff_0>
     700:	f0 91 32 42 	lds	r31, 0x4232	; 0x804232 <_ZZ11__vector_20E4buff_0+0x1>
     704:	80 91 30 42 	lds	r24, 0x4230	; 0x804230 <_ZZ11__vector_20E9charIndex_0>
     708:	df 01       	movw	r26, r30
     70a:	a8 0f       	add	r26, r24
     70c:	b1 1d       	adc	r27, r1
     70e:	9c 91       	ld	r25, X
     710:	99 23       	and	r25, r25
     712:	31 f0       	breq	.+12     	; 0x720 <__vector_20+0xc8>
		{
			/* Put data into buffer, sends the data */
			USART0.TXDATAL = (*buff)[charIndex++];
     714:	8f 5f       	subi	r24, 0xFF	; 255
     716:	80 93 30 42 	sts	0x4230, r24	; 0x804230 <_ZZ11__vector_20E9charIndex_0>
     71a:	90 93 02 08 	sts	0x0802, r25	; 0x800802 <__TEXT_REGION_LENGTH__+0x7e0802>
     71e:	0d c0       	rjmp	.+26     	; 0x73a <__vector_20+0xe2>
		}
		else
		{
			charIndex = 0;
     720:	10 92 30 42 	sts	0x4230, r1	; 0x804230 <_ZZ11__vector_20E9charIndex_0>
			(*buff)[0] = '\0';
     724:	10 82       	st	Z, r1
			buff = nextFullSBTxBuffer();
     726:	0e 94 d9 24 	call	0x49b2	; 0x49b2 <nextFullSBTxBuffer>
     72a:	80 93 31 42 	sts	0x4231, r24	; 0x804231 <_ZZ11__vector_20E4buff_0>
     72e:	90 93 32 42 	sts	0x4232, r25	; 0x804232 <_ZZ11__vector_20E4buff_0+0x1>
			if(!buff)
     732:	89 2b       	or	r24, r25
     734:	11 f4       	brne	.+4      	; 0x73a <__vector_20+0xe2>
			{
				serialbus_end_tx();
     736:	0e 94 a5 25 	call	0x4b4a	; 0x4b4a <serialbus_end_tx>
			}
		}
	}
}
     73a:	ff 91       	pop	r31
     73c:	ef 91       	pop	r30
     73e:	bf 91       	pop	r27
     740:	af 91       	pop	r26
     742:	9f 91       	pop	r25
     744:	8f 91       	pop	r24
     746:	7f 91       	pop	r23
     748:	6f 91       	pop	r22
     74a:	5f 91       	pop	r21
     74c:	4f 91       	pop	r20
     74e:	3f 91       	pop	r19
     750:	2f 91       	pop	r18
     752:	0f 90       	pop	r0
     754:	0b be       	out	0x3b, r0	; 59
     756:	0f 90       	pop	r0
     758:	0f be       	out	0x3f, r0	; 63
     75a:	0f 90       	pop	r0
     75c:	1f 90       	pop	r1
     75e:	18 95       	reti

00000760 <_Z10linkbus_Rxh>:
		serial_Rx(rx_char);
	}
}

void linkbus_Rx(uint8_t rx_char)
{
     760:	0f 93       	push	r16
     762:	1f 93       	push	r17
     764:	cf 93       	push	r28
     766:	df 93       	push	r29
     768:	18 2f       	mov	r17, r24
	static uint8_t field_index = 0;
	static uint8_t field_len = 0;
	static uint32_t tempMsg_ID = 0;
	static BOOL receiving_msg = FALSE;

	if(!buff)
     76a:	80 91 2e 42 	lds	r24, 0x422E	; 0x80422e <_ZZ10linkbus_RxhE4buff>
     76e:	90 91 2f 42 	lds	r25, 0x422F	; 0x80422f <_ZZ10linkbus_RxhE4buff+0x1>
     772:	89 2b       	or	r24, r25
     774:	31 f4       	brne	.+12     	; 0x782 <_Z10linkbus_Rxh+0x22>
	{
		buff = nextEmptyLBRxBuffer();
     776:	0e 94 e1 20 	call	0x41c2	; 0x41c2 <_Z19nextEmptyLBRxBufferv>
     77a:	80 93 2e 42 	sts	0x422E, r24	; 0x80422e <_ZZ10linkbus_RxhE4buff>
     77e:	90 93 2f 42 	sts	0x422F, r25	; 0x80422f <_ZZ10linkbus_RxhE4buff+0x1>
	}

	if(buff)
     782:	c0 91 2e 42 	lds	r28, 0x422E	; 0x80422e <_ZZ10linkbus_RxhE4buff>
     786:	d0 91 2f 42 	lds	r29, 0x422F	; 0x80422f <_ZZ10linkbus_RxhE4buff+0x1>
     78a:	20 97       	sbiw	r28, 0x00	; 0
     78c:	09 f4       	brne	.+2      	; 0x790 <_Z10linkbus_Rxh+0x30>
     78e:	e3 c0       	rjmp	.+454    	; 0x956 <_Z10linkbus_Rxh+0x1f6>
	{
		rx_char = toupper(rx_char);
     790:	81 2f       	mov	r24, r17
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	0e 94 42 34 	call	0x6884	; 0x6884 <toupper>

		if((rx_char == '$') || (rx_char == '!'))    /* start of new message = $ */
     798:	84 32       	cpi	r24, 0x24	; 36
     79a:	11 f0       	breq	.+4      	; 0x7a0 <_Z10linkbus_Rxh+0x40>
     79c:	81 32       	cpi	r24, 0x21	; 33
     79e:	49 f5       	brne	.+82     	; 0x7f2 <_Z10linkbus_Rxh+0x92>
		{
			charIndex = 0;
     7a0:	10 92 2d 42 	sts	0x422D, r1	; 0x80422d <_ZZ10linkbus_RxhE9charIndex>
			buff->type = (rx_char == '!') ? LINKBUS_MSG_REPLY : LINKBUS_MSG_COMMAND;
     7a4:	81 32       	cpi	r24, 0x21	; 33
     7a6:	11 f4       	brne	.+4      	; 0x7ac <_Z10linkbus_Rxh+0x4c>
     7a8:	83 e0       	ldi	r24, 0x03	; 3
     7aa:	01 c0       	rjmp	.+2      	; 0x7ae <_Z10linkbus_Rxh+0x4e>
     7ac:	81 e0       	ldi	r24, 0x01	; 1
     7ae:	88 83       	st	Y, r24
			field_len = 0;
     7b0:	10 92 2c 42 	sts	0x422C, r1	; 0x80422c <_ZZ10linkbus_RxhE9field_len>
			tempMsg_ID = 0;
     7b4:	10 92 28 42 	sts	0x4228, r1	; 0x804228 <_ZZ10linkbus_RxhE10tempMsg_ID>
     7b8:	10 92 29 42 	sts	0x4229, r1	; 0x804229 <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
     7bc:	10 92 2a 42 	sts	0x422A, r1	; 0x80422a <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
     7c0:	10 92 2b 42 	sts	0x422B, r1	; 0x80422b <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
			receiving_msg = TRUE;
     7c4:	81 e0       	ldi	r24, 0x01	; 1
     7c6:	80 93 27 42 	sts	0x4227, r24	; 0x804227 <_ZZ10linkbus_RxhE13receiving_msg>

			/* Empty the field buffers */
			for(field_index = 0; field_index < LINKBUS_MAX_MSG_NUMBER_OF_FIELDS; field_index++)
     7ca:	10 92 26 42 	sts	0x4226, r1	; 0x804226 <_ZZ10linkbus_RxhE11field_index>
     7ce:	80 91 26 42 	lds	r24, 0x4226	; 0x804226 <_ZZ10linkbus_RxhE11field_index>
     7d2:	83 30       	cpi	r24, 0x03	; 3
     7d4:	58 f4       	brcc	.+22     	; 0x7ec <_Z10linkbus_Rxh+0x8c>
			{
				buff->fields[field_index][0] = '\0';
     7d6:	fe 01       	movw	r30, r28
     7d8:	05 e1       	ldi	r16, 0x15	; 21
     7da:	80 9f       	mul	r24, r16
     7dc:	e0 0d       	add	r30, r0
     7de:	f1 1d       	adc	r31, r1
     7e0:	11 24       	eor	r1, r1
     7e2:	13 82       	std	Z+3, r1	; 0x03
			field_len = 0;
			tempMsg_ID = 0;
			receiving_msg = TRUE;

			/* Empty the field buffers */
			for(field_index = 0; field_index < LINKBUS_MAX_MSG_NUMBER_OF_FIELDS; field_index++)
     7e4:	8f 5f       	subi	r24, 0xFF	; 255
     7e6:	80 93 26 42 	sts	0x4226, r24	; 0x804226 <_ZZ10linkbus_RxhE11field_index>
     7ea:	f1 cf       	rjmp	.-30     	; 0x7ce <_Z10linkbus_Rxh+0x6e>
			{
				buff->fields[field_index][0] = '\0';
			}

			field_index = 0;
     7ec:	10 92 26 42 	sts	0x4226, r1	; 0x804226 <_ZZ10linkbus_RxhE11field_index>
     7f0:	a7 c0       	rjmp	.+334    	; 0x940 <_Z10linkbus_Rxh+0x1e0>
		}
		else if(receiving_msg)
     7f2:	90 91 27 42 	lds	r25, 0x4227	; 0x804227 <_ZZ10linkbus_RxhE13receiving_msg>
     7f6:	99 23       	and	r25, r25
     7f8:	09 f4       	brne	.+2      	; 0x7fc <_Z10linkbus_Rxh+0x9c>
     7fa:	8b c0       	rjmp	.+278    	; 0x912 <_Z10linkbus_Rxh+0x1b2>
		{
			if((rx_char == ',') || (rx_char == ';') || (rx_char == '?'))    /* new field = ,; end of message = ; */
     7fc:	8c 32       	cpi	r24, 0x2C	; 44
     7fe:	29 f0       	breq	.+10     	; 0x80a <_Z10linkbus_Rxh+0xaa>
     800:	8b 33       	cpi	r24, 0x3B	; 59
     802:	19 f0       	breq	.+6      	; 0x80a <_Z10linkbus_Rxh+0xaa>
     804:	8f 33       	cpi	r24, 0x3F	; 63
     806:	09 f0       	breq	.+2      	; 0x80a <_Z10linkbus_Rxh+0xaa>
     808:	42 c0       	rjmp	.+132    	; 0x88e <_Z10linkbus_Rxh+0x12e>
			{
				/* if(field_index == 0) // message ID received */
				if(field_index > 0)
     80a:	90 91 26 42 	lds	r25, 0x4226	; 0x804226 <_ZZ10linkbus_RxhE11field_index>
     80e:	99 23       	and	r25, r25
     810:	89 f0       	breq	.+34     	; 0x834 <_Z10linkbus_Rxh+0xd4>
				{
					buff->fields[field_index - 1][field_len] = 0;
     812:	29 2f       	mov	r18, r25
     814:	30 e0       	ldi	r19, 0x00	; 0
     816:	21 50       	subi	r18, 0x01	; 1
     818:	31 09       	sbc	r19, r1
     81a:	40 91 2c 42 	lds	r20, 0x422C	; 0x80422c <_ZZ10linkbus_RxhE9field_len>
     81e:	55 e1       	ldi	r21, 0x15	; 21
     820:	52 9f       	mul	r21, r18
     822:	f0 01       	movw	r30, r0
     824:	53 9f       	mul	r21, r19
     826:	f0 0d       	add	r31, r0
     828:	11 24       	eor	r1, r1
     82a:	ec 0f       	add	r30, r28
     82c:	fd 1f       	adc	r31, r29
     82e:	e4 0f       	add	r30, r20
     830:	f1 1d       	adc	r31, r1
     832:	13 82       	std	Z+3, r1	; 0x03
				}

				field_index++;
     834:	9f 5f       	subi	r25, 0xFF	; 255
     836:	90 93 26 42 	sts	0x4226, r25	; 0x804226 <_ZZ10linkbus_RxhE11field_index>
				field_len = 0;
     83a:	10 92 2c 42 	sts	0x422C, r1	; 0x80422c <_ZZ10linkbus_RxhE9field_len>

				if(rx_char == ';')
     83e:	8b 33       	cpi	r24, 0x3B	; 59
     840:	69 f4       	brne	.+26     	; 0x85c <_Z10linkbus_Rxh+0xfc>
				{
					if(charIndex > LINKBUS_MIN_MSG_LENGTH)
     842:	80 91 2d 42 	lds	r24, 0x422D	; 0x80422d <_ZZ10linkbus_RxhE9charIndex>
     846:	84 30       	cpi	r24, 0x04	; 4
     848:	30 f0       	brcs	.+12     	; 0x856 <_Z10linkbus_Rxh+0xf6>
					{
						buff->id = (LBMessageID)tempMsg_ID;
     84a:	80 91 28 42 	lds	r24, 0x4228	; 0x804228 <_ZZ10linkbus_RxhE10tempMsg_ID>
     84e:	90 91 29 42 	lds	r25, 0x4229	; 0x804229 <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
     852:	89 83       	std	Y+1, r24	; 0x01
     854:	9a 83       	std	Y+2, r25	; 0x02
					}
					receiving_msg = FALSE;
     856:	10 92 27 42 	sts	0x4227, r1	; 0x804227 <_ZZ10linkbus_RxhE13receiving_msg>
     85a:	10 c0       	rjmp	.+32     	; 0x87c <_Z10linkbus_Rxh+0x11c>
				}
				else if(rx_char == '?')
     85c:	8f 33       	cpi	r24, 0x3F	; 63
     85e:	71 f4       	brne	.+28     	; 0x87c <_Z10linkbus_Rxh+0x11c>
				{
					buff->type = LINKBUS_MSG_QUERY;
     860:	82 e0       	ldi	r24, 0x02	; 2
     862:	88 83       	st	Y, r24
					if(charIndex >= LINKBUS_MIN_MSG_LENGTH)
     864:	80 91 2d 42 	lds	r24, 0x422D	; 0x80422d <_ZZ10linkbus_RxhE9charIndex>
     868:	83 30       	cpi	r24, 0x03	; 3
     86a:	30 f0       	brcs	.+12     	; 0x878 <_Z10linkbus_Rxh+0x118>
					{
						buff->id = (LBMessageID)tempMsg_ID;
     86c:	80 91 28 42 	lds	r24, 0x4228	; 0x804228 <_ZZ10linkbus_RxhE10tempMsg_ID>
     870:	90 91 29 42 	lds	r25, 0x4229	; 0x804229 <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
     874:	89 83       	std	Y+1, r24	; 0x01
     876:	9a 83       	std	Y+2, r25	; 0x02
					}
					receiving_msg = FALSE;
     878:	10 92 27 42 	sts	0x4227, r1	; 0x804227 <_ZZ10linkbus_RxhE13receiving_msg>
				}

				if(!receiving_msg)
     87c:	80 91 27 42 	lds	r24, 0x4227	; 0x804227 <_ZZ10linkbus_RxhE13receiving_msg>
     880:	81 11       	cpse	r24, r1
     882:	5e c0       	rjmp	.+188    	; 0x940 <_Z10linkbus_Rxh+0x1e0>
				{
					buff = 0;
     884:	10 92 2e 42 	sts	0x422E, r1	; 0x80422e <_ZZ10linkbus_RxhE4buff>
     888:	10 92 2f 42 	sts	0x422F, r1	; 0x80422f <_ZZ10linkbus_RxhE4buff+0x1>
     88c:	59 c0       	rjmp	.+178    	; 0x940 <_Z10linkbus_Rxh+0x1e0>
				}
			}
			else
			{
				if(field_index == 0)    /* message ID received */
     88e:	20 91 26 42 	lds	r18, 0x4226	; 0x804226 <_ZZ10linkbus_RxhE11field_index>
     892:	21 11       	cpse	r18, r1
     894:	29 c0       	rjmp	.+82     	; 0x8e8 <_Z10linkbus_Rxh+0x188>
				{
					tempMsg_ID = tempMsg_ID * 10 + rx_char;
     896:	40 91 28 42 	lds	r20, 0x4228	; 0x804228 <_ZZ10linkbus_RxhE10tempMsg_ID>
     89a:	50 91 29 42 	lds	r21, 0x4229	; 0x804229 <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
     89e:	60 91 2a 42 	lds	r22, 0x422A	; 0x80422a <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
     8a2:	70 91 2b 42 	lds	r23, 0x422B	; 0x80422b <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
     8a6:	44 0f       	add	r20, r20
     8a8:	55 1f       	adc	r21, r21
     8aa:	66 1f       	adc	r22, r22
     8ac:	77 1f       	adc	r23, r23
     8ae:	8a 01       	movw	r16, r20
     8b0:	9b 01       	movw	r18, r22
     8b2:	00 0f       	add	r16, r16
     8b4:	11 1f       	adc	r17, r17
     8b6:	22 1f       	adc	r18, r18
     8b8:	33 1f       	adc	r19, r19
     8ba:	00 0f       	add	r16, r16
     8bc:	11 1f       	adc	r17, r17
     8be:	22 1f       	adc	r18, r18
     8c0:	33 1f       	adc	r19, r19
     8c2:	40 0f       	add	r20, r16
     8c4:	51 1f       	adc	r21, r17
     8c6:	62 1f       	adc	r22, r18
     8c8:	73 1f       	adc	r23, r19
     8ca:	8a 01       	movw	r16, r20
     8cc:	9b 01       	movw	r18, r22
     8ce:	08 0f       	add	r16, r24
     8d0:	11 1d       	adc	r17, r1
     8d2:	21 1d       	adc	r18, r1
     8d4:	31 1d       	adc	r19, r1
     8d6:	00 93 28 42 	sts	0x4228, r16	; 0x804228 <_ZZ10linkbus_RxhE10tempMsg_ID>
     8da:	10 93 29 42 	sts	0x4229, r17	; 0x804229 <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
     8de:	20 93 2a 42 	sts	0x422A, r18	; 0x80422a <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
     8e2:	30 93 2b 42 	sts	0x422B, r19	; 0x80422b <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
     8e6:	2c c0       	rjmp	.+88     	; 0x940 <_Z10linkbus_Rxh+0x1e0>
				}
				else
				{
					buff->fields[field_index - 1][field_len++] = rx_char;
     8e8:	30 e0       	ldi	r19, 0x00	; 0
     8ea:	21 50       	subi	r18, 0x01	; 1
     8ec:	31 09       	sbc	r19, r1
     8ee:	90 91 2c 42 	lds	r25, 0x422C	; 0x80422c <_ZZ10linkbus_RxhE9field_len>
     8f2:	41 e0       	ldi	r20, 0x01	; 1
     8f4:	49 0f       	add	r20, r25
     8f6:	40 93 2c 42 	sts	0x422C, r20	; 0x80422c <_ZZ10linkbus_RxhE9field_len>
     8fa:	65 e1       	ldi	r22, 0x15	; 21
     8fc:	62 9f       	mul	r22, r18
     8fe:	a0 01       	movw	r20, r0
     900:	63 9f       	mul	r22, r19
     902:	50 0d       	add	r21, r0
     904:	11 24       	eor	r1, r1
     906:	c4 0f       	add	r28, r20
     908:	d5 1f       	adc	r29, r21
     90a:	c9 0f       	add	r28, r25
     90c:	d1 1d       	adc	r29, r1
     90e:	8b 83       	std	Y+3, r24	; 0x03
     910:	17 c0       	rjmp	.+46     	; 0x940 <_Z10linkbus_Rxh+0x1e0>
				}
			}
		}
		else if(rx_char == 0x0D)    /* Carriage return resets any message in progress */
     912:	8d 30       	cpi	r24, 0x0D	; 13
     914:	a9 f4       	brne	.+42     	; 0x940 <_Z10linkbus_Rxh+0x1e0>
		{
			buff->id = LB_MESSAGE_EMPTY;
     916:	19 82       	std	Y+1, r1	; 0x01
     918:	1a 82       	std	Y+2, r1	; 0x02
			charIndex = LINKBUS_MAX_MSG_LENGTH;
     91a:	82 e3       	ldi	r24, 0x32	; 50
     91c:	80 93 2d 42 	sts	0x422D, r24	; 0x80422d <_ZZ10linkbus_RxhE9charIndex>
			field_len = 0;
     920:	10 92 2c 42 	sts	0x422C, r1	; 0x80422c <_ZZ10linkbus_RxhE9field_len>
			tempMsg_ID = 0;
     924:	10 92 28 42 	sts	0x4228, r1	; 0x804228 <_ZZ10linkbus_RxhE10tempMsg_ID>
     928:	10 92 29 42 	sts	0x4229, r1	; 0x804229 <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
     92c:	10 92 2a 42 	sts	0x422A, r1	; 0x80422a <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
     930:	10 92 2b 42 	sts	0x422B, r1	; 0x80422b <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
			field_index = 0;
     934:	10 92 26 42 	sts	0x4226, r1	; 0x804226 <_ZZ10linkbus_RxhE11field_index>
			buff = NULL;
     938:	10 92 2e 42 	sts	0x422E, r1	; 0x80422e <_ZZ10linkbus_RxhE4buff>
     93c:	10 92 2f 42 	sts	0x422F, r1	; 0x80422f <_ZZ10linkbus_RxhE4buff+0x1>
		}

		if(++charIndex >= LINKBUS_MAX_MSG_LENGTH)
     940:	80 91 2d 42 	lds	r24, 0x422D	; 0x80422d <_ZZ10linkbus_RxhE9charIndex>
     944:	8f 5f       	subi	r24, 0xFF	; 255
     946:	80 93 2d 42 	sts	0x422D, r24	; 0x80422d <_ZZ10linkbus_RxhE9charIndex>
     94a:	82 33       	cpi	r24, 0x32	; 50
     94c:	20 f0       	brcs	.+8      	; 0x956 <_Z10linkbus_Rxh+0x1f6>
		{
			receiving_msg = FALSE;
     94e:	10 92 27 42 	sts	0x4227, r1	; 0x804227 <_ZZ10linkbus_RxhE13receiving_msg>
			charIndex = 0;
     952:	10 92 2d 42 	sts	0x422D, r1	; 0x80422d <_ZZ10linkbus_RxhE9charIndex>
		}
	}
}
     956:	df 91       	pop	r29
     958:	cf 91       	pop	r28
     95a:	1f 91       	pop	r17
     95c:	0f 91       	pop	r16
     95e:	08 95       	ret

00000960 <__vector_19>:
        TCB2.INTFLAGS = TCB_CAPT_bm;
    }
}

ISR(USART0_RXC_vect)
{
     960:	1f 92       	push	r1
     962:	0f 92       	push	r0
     964:	0f b6       	in	r0, 0x3f	; 63
     966:	0f 92       	push	r0
     968:	11 24       	eor	r1, r1
     96a:	0b b6       	in	r0, 0x3b	; 59
     96c:	0f 92       	push	r0
     96e:	2f 93       	push	r18
     970:	3f 93       	push	r19
     972:	4f 93       	push	r20
     974:	5f 93       	push	r21
     976:	6f 93       	push	r22
     978:	7f 93       	push	r23
     97a:	8f 93       	push	r24
     97c:	9f 93       	push	r25
     97e:	af 93       	push	r26
     980:	bf 93       	push	r27
     982:	cf 93       	push	r28
     984:	ef 93       	push	r30
     986:	ff 93       	push	r31
	uint8_t rx_char = USART0_get_data();
     988:	0e 94 ad 2f 	call	0x5f5a	; 0x5f5a <USART0_get_data>
     98c:	c8 2f       	mov	r28, r24
	
	if(g_linkbus_usart_number == USART_0)
     98e:	80 91 22 40 	lds	r24, 0x4022	; 0x804022 <g_linkbus_usart_number>
     992:	81 11       	cpse	r24, r1
     994:	03 c0       	rjmp	.+6      	; 0x99c <__vector_19+0x3c>
	{
		linkbus_Rx(rx_char);
     996:	8c 2f       	mov	r24, r28
     998:	0e 94 b0 03 	call	0x760	; 0x760 <_Z10linkbus_Rxh>
	}
	
	if(g_serialbus_usart_number == USART_0)
     99c:	80 91 27 40 	lds	r24, 0x4027	; 0x804027 <g_serialbus_usart_number>
     9a0:	81 11       	cpse	r24, r1
     9a2:	03 c0       	rjmp	.+6      	; 0x9aa <__vector_19+0x4a>
	{
		serial_Rx(rx_char);
     9a4:	8c 2f       	mov	r24, r28
     9a6:	0e 94 9e 01 	call	0x33c	; 0x33c <_Z9serial_Rxh>
	}
}
     9aa:	ff 91       	pop	r31
     9ac:	ef 91       	pop	r30
     9ae:	cf 91       	pop	r28
     9b0:	bf 91       	pop	r27
     9b2:	af 91       	pop	r26
     9b4:	9f 91       	pop	r25
     9b6:	8f 91       	pop	r24
     9b8:	7f 91       	pop	r23
     9ba:	6f 91       	pop	r22
     9bc:	5f 91       	pop	r21
     9be:	4f 91       	pop	r20
     9c0:	3f 91       	pop	r19
     9c2:	2f 91       	pop	r18
     9c4:	0f 90       	pop	r0
     9c6:	0b be       	out	0x3b, r0	; 59
     9c8:	0f 90       	pop	r0
     9ca:	0f be       	out	0x3f, r0	; 63
     9cc:	0f 90       	pop	r0
     9ce:	1f 90       	pop	r1
     9d0:	18 95       	reti

000009d2 <__vector_31>:

/**

*/
ISR(USART1_RXC_vect)
{
     9d2:	1f 92       	push	r1
     9d4:	0f 92       	push	r0
     9d6:	0f b6       	in	r0, 0x3f	; 63
     9d8:	0f 92       	push	r0
     9da:	11 24       	eor	r1, r1
     9dc:	0b b6       	in	r0, 0x3b	; 59
     9de:	0f 92       	push	r0
     9e0:	2f 93       	push	r18
     9e2:	3f 93       	push	r19
     9e4:	4f 93       	push	r20
     9e6:	5f 93       	push	r21
     9e8:	6f 93       	push	r22
     9ea:	7f 93       	push	r23
     9ec:	8f 93       	push	r24
     9ee:	9f 93       	push	r25
     9f0:	af 93       	push	r26
     9f2:	bf 93       	push	r27
     9f4:	cf 93       	push	r28
     9f6:	ef 93       	push	r30
     9f8:	ff 93       	push	r31
	uint8_t rx_char = USART1_get_data();	
     9fa:	0e 94 e1 2f 	call	0x5fc2	; 0x5fc2 <USART1_get_data>
     9fe:	c8 2f       	mov	r28, r24
	
	if(g_linkbus_usart_number == USART_1)
     a00:	80 91 22 40 	lds	r24, 0x4022	; 0x804022 <g_linkbus_usart_number>
     a04:	81 30       	cpi	r24, 0x01	; 1
     a06:	19 f4       	brne	.+6      	; 0xa0e <__vector_31+0x3c>
	{
		linkbus_Rx(rx_char);
     a08:	8c 2f       	mov	r24, r28
     a0a:	0e 94 b0 03 	call	0x760	; 0x760 <_Z10linkbus_Rxh>
	}
	
	if(g_serialbus_usart_number == USART_1)
     a0e:	80 91 27 40 	lds	r24, 0x4027	; 0x804027 <g_serialbus_usart_number>
     a12:	81 30       	cpi	r24, 0x01	; 1
     a14:	19 f4       	brne	.+6      	; 0xa1c <__vector_31+0x4a>
	{
		serial_Rx(rx_char);
     a16:	8c 2f       	mov	r24, r28
     a18:	0e 94 9e 01 	call	0x33c	; 0x33c <_Z9serial_Rxh>
	}
}
     a1c:	ff 91       	pop	r31
     a1e:	ef 91       	pop	r30
     a20:	cf 91       	pop	r28
     a22:	bf 91       	pop	r27
     a24:	af 91       	pop	r26
     a26:	9f 91       	pop	r25
     a28:	8f 91       	pop	r24
     a2a:	7f 91       	pop	r23
     a2c:	6f 91       	pop	r22
     a2e:	5f 91       	pop	r21
     a30:	4f 91       	pop	r20
     a32:	3f 91       	pop	r19
     a34:	2f 91       	pop	r18
     a36:	0f 90       	pop	r0
     a38:	0b be       	out	0x3b, r0	; 59
     a3a:	0f 90       	pop	r0
     a3c:	0f be       	out	0x3f, r0	; 63
     a3e:	0f 90       	pop	r0
     a40:	1f 90       	pop	r1
     a42:	18 95       	reti

00000a44 <__vector_32>:

/**

*/
ISR(USART1_DRE_vect)
{
     a44:	1f 92       	push	r1
     a46:	0f 92       	push	r0
     a48:	0f b6       	in	r0, 0x3f	; 63
     a4a:	0f 92       	push	r0
     a4c:	11 24       	eor	r1, r1
     a4e:	0b b6       	in	r0, 0x3b	; 59
     a50:	0f 92       	push	r0
     a52:	2f 93       	push	r18
     a54:	3f 93       	push	r19
     a56:	4f 93       	push	r20
     a58:	5f 93       	push	r21
     a5a:	6f 93       	push	r22
     a5c:	7f 93       	push	r23
     a5e:	8f 93       	push	r24
     a60:	9f 93       	push	r25
     a62:	af 93       	push	r26
     a64:	bf 93       	push	r27
     a66:	ef 93       	push	r30
     a68:	ff 93       	push	r31
	if(g_serialbus_usart_number == USART_1)
     a6a:	80 91 27 40 	lds	r24, 0x4027	; 0x804027 <g_serialbus_usart_number>
     a6e:	81 30       	cpi	r24, 0x01	; 1
     a70:	59 f5       	brne	.+86     	; 0xac8 <__vector_32+0x84>
	{
		static SerialbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
     a72:	80 91 24 42 	lds	r24, 0x4224	; 0x804224 <_ZZ11__vector_32E4buff>
     a76:	90 91 25 42 	lds	r25, 0x4225	; 0x804225 <_ZZ11__vector_32E4buff+0x1>
     a7a:	89 2b       	or	r24, r25
     a7c:	31 f4       	brne	.+12     	; 0xa8a <__vector_32+0x46>
		{
			buff = nextFullSBTxBuffer();
     a7e:	0e 94 d9 24 	call	0x49b2	; 0x49b2 <nextFullSBTxBuffer>
     a82:	80 93 24 42 	sts	0x4224, r24	; 0x804224 <_ZZ11__vector_32E4buff>
     a86:	90 93 25 42 	sts	0x4225, r25	; 0x804225 <_ZZ11__vector_32E4buff+0x1>
		}

		if((*buff)[charIndex])
     a8a:	e0 91 24 42 	lds	r30, 0x4224	; 0x804224 <_ZZ11__vector_32E4buff>
     a8e:	f0 91 25 42 	lds	r31, 0x4225	; 0x804225 <_ZZ11__vector_32E4buff+0x1>
     a92:	80 91 23 42 	lds	r24, 0x4223	; 0x804223 <_ZZ11__vector_32E9charIndex>
     a96:	df 01       	movw	r26, r30
     a98:	a8 0f       	add	r26, r24
     a9a:	b1 1d       	adc	r27, r1
     a9c:	9c 91       	ld	r25, X
     a9e:	99 23       	and	r25, r25
     aa0:	31 f0       	breq	.+12     	; 0xaae <__vector_32+0x6a>
		{
			/* Put data into buffer, sends the data */
			USART1.TXDATAL = (*buff)[charIndex++];
     aa2:	8f 5f       	subi	r24, 0xFF	; 255
     aa4:	80 93 23 42 	sts	0x4223, r24	; 0x804223 <_ZZ11__vector_32E9charIndex>
     aa8:	90 93 22 08 	sts	0x0822, r25	; 0x800822 <__TEXT_REGION_LENGTH__+0x7e0822>
     aac:	0d c0       	rjmp	.+26     	; 0xac8 <__vector_32+0x84>
		}
		else
		{
			charIndex = 0;
     aae:	10 92 23 42 	sts	0x4223, r1	; 0x804223 <_ZZ11__vector_32E9charIndex>
			(*buff)[0] = '\0';
     ab2:	10 82       	st	Z, r1
			buff = nextFullSBTxBuffer();
     ab4:	0e 94 d9 24 	call	0x49b2	; 0x49b2 <nextFullSBTxBuffer>
     ab8:	80 93 24 42 	sts	0x4224, r24	; 0x804224 <_ZZ11__vector_32E4buff>
     abc:	90 93 25 42 	sts	0x4225, r25	; 0x804225 <_ZZ11__vector_32E4buff+0x1>
			if(!buff)
     ac0:	89 2b       	or	r24, r25
     ac2:	11 f4       	brne	.+4      	; 0xac8 <__vector_32+0x84>
			{
				serialbus_end_tx();
     ac4:	0e 94 a5 25 	call	0x4b4a	; 0x4b4a <serialbus_end_tx>
			}
		}
	}
	
	if(g_linkbus_usart_number == USART_1)
     ac8:	80 91 22 40 	lds	r24, 0x4022	; 0x804022 <g_linkbus_usart_number>
     acc:	81 30       	cpi	r24, 0x01	; 1
     ace:	59 f5       	brne	.+86     	; 0xb26 <__vector_32+0xe2>
	{
		static LinkbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
     ad0:	80 91 21 42 	lds	r24, 0x4221	; 0x804221 <_ZZ11__vector_32E4buff_0>
     ad4:	90 91 22 42 	lds	r25, 0x4222	; 0x804222 <_ZZ11__vector_32E4buff_0+0x1>
     ad8:	89 2b       	or	r24, r25
     ada:	31 f4       	brne	.+12     	; 0xae8 <__vector_32+0xa4>
		{
			buff = nextFullLBTxBuffer();
     adc:	0e 94 89 20 	call	0x4112	; 0x4112 <_Z18nextFullLBTxBufferv>
     ae0:	80 93 21 42 	sts	0x4221, r24	; 0x804221 <_ZZ11__vector_32E4buff_0>
     ae4:	90 93 22 42 	sts	0x4222, r25	; 0x804222 <_ZZ11__vector_32E4buff_0+0x1>
		}

		if((*buff)[charIndex])
     ae8:	e0 91 21 42 	lds	r30, 0x4221	; 0x804221 <_ZZ11__vector_32E4buff_0>
     aec:	f0 91 22 42 	lds	r31, 0x4222	; 0x804222 <_ZZ11__vector_32E4buff_0+0x1>
     af0:	80 91 20 42 	lds	r24, 0x4220	; 0x804220 <__data_end>
     af4:	df 01       	movw	r26, r30
     af6:	a8 0f       	add	r26, r24
     af8:	b1 1d       	adc	r27, r1
     afa:	9c 91       	ld	r25, X
     afc:	99 23       	and	r25, r25
     afe:	31 f0       	breq	.+12     	; 0xb0c <__vector_32+0xc8>
		{
			/* Put data into buffer, sends the data */
			USART1.TXDATAL = (*buff)[charIndex++];
     b00:	8f 5f       	subi	r24, 0xFF	; 255
     b02:	80 93 20 42 	sts	0x4220, r24	; 0x804220 <__data_end>
     b06:	90 93 22 08 	sts	0x0822, r25	; 0x800822 <__TEXT_REGION_LENGTH__+0x7e0822>
     b0a:	0d c0       	rjmp	.+26     	; 0xb26 <__vector_32+0xe2>
		}
		else
		{
			charIndex = 0;
     b0c:	10 92 20 42 	sts	0x4220, r1	; 0x804220 <__data_end>
			(*buff)[0] = '\0';
     b10:	10 82       	st	Z, r1
			buff = nextFullLBTxBuffer();
     b12:	0e 94 89 20 	call	0x4112	; 0x4112 <_Z18nextFullLBTxBufferv>
     b16:	80 93 21 42 	sts	0x4221, r24	; 0x804221 <_ZZ11__vector_32E4buff_0>
     b1a:	90 93 22 42 	sts	0x4222, r25	; 0x804222 <_ZZ11__vector_32E4buff_0+0x1>
			if(!buff)
     b1e:	89 2b       	or	r24, r25
     b20:	11 f4       	brne	.+4      	; 0xb26 <__vector_32+0xe2>
			{
				linkbus_end_tx();
     b22:	0e 94 3e 21 	call	0x427c	; 0x427c <_Z14linkbus_end_txv>
			}
		}
	}
}
     b26:	ff 91       	pop	r31
     b28:	ef 91       	pop	r30
     b2a:	bf 91       	pop	r27
     b2c:	af 91       	pop	r26
     b2e:	9f 91       	pop	r25
     b30:	8f 91       	pop	r24
     b32:	7f 91       	pop	r23
     b34:	6f 91       	pop	r22
     b36:	5f 91       	pop	r21
     b38:	4f 91       	pop	r20
     b3a:	3f 91       	pop	r19
     b3c:	2f 91       	pop	r18
     b3e:	0f 90       	pop	r0
     b40:	0b be       	out	0x3b, r0	; 59
     b42:	0f 90       	pop	r0
     b44:	0f be       	out	0x3f, r0	; 63
     b46:	0f 90       	pop	r0
     b48:	1f 90       	pop	r1
     b4a:	18 95       	reti

00000b4c <__vector_41>:
{
	
}

void suspendEvent()
{
     b4c:	1f 92       	push	r1
     b4e:	0f 92       	push	r0
     b50:	0f b6       	in	r0, 0x3f	; 63
     b52:	0f 92       	push	r0
     b54:	11 24       	eor	r1, r1
     b56:	0b b6       	in	r0, 0x3b	; 59
     b58:	0f 92       	push	r0
     b5a:	2f 93       	push	r18
     b5c:	3f 93       	push	r19
     b5e:	4f 93       	push	r20
     b60:	5f 93       	push	r21
     b62:	6f 93       	push	r22
     b64:	7f 93       	push	r23
     b66:	8f 93       	push	r24
     b68:	9f 93       	push	r25
     b6a:	af 93       	push	r26
     b6c:	bf 93       	push	r27
     b6e:	ef 93       	push	r30
     b70:	ff 93       	push	r31
     b72:	cf 93       	push	r28
     b74:	df 93       	push	r29
     b76:	cd b7       	in	r28, 0x3d	; 61
     b78:	de b7       	in	r29, 0x3e	; 62
     b7a:	25 97       	sbiw	r28, 0x05	; 5
     b7c:	cd bf       	out	0x3d, r28	; 61
     b7e:	de bf       	out	0x3e, r29	; 62
     b80:	80 91 36 0b 	lds	r24, 0x0B36	; 0x800b36 <__TEXT_REGION_LENGTH__+0x7e0b36>
     b84:	80 ff       	sbrs	r24, 0
     b86:	a6 c3       	rjmp	.+1868   	; 0x12d4 <__vector_41+0x788>
     b88:	80 91 f1 42 	lds	r24, 0x42F1	; 0x8042f1 <_ZZ11__vector_41E3cnt>
     b8c:	90 91 f2 42 	lds	r25, 0x42F2	; 0x8042f2 <_ZZ11__vector_41E3cnt+0x1>
     b90:	9c 01       	movw	r18, r24
     b92:	2f 5f       	subi	r18, 0xFF	; 255
     b94:	3f 4f       	sbci	r19, 0xFF	; 255
     b96:	20 93 f1 42 	sts	0x42F1, r18	; 0x8042f1 <_ZZ11__vector_41E3cnt>
     b9a:	30 93 f2 42 	sts	0x42F2, r19	; 0x8042f2 <_ZZ11__vector_41E3cnt+0x1>
     b9e:	8b 32       	cpi	r24, 0x2B	; 43
     ba0:	91 40       	sbci	r25, 0x01	; 1
     ba2:	09 f0       	breq	.+2      	; 0xba6 <__vector_41+0x5a>
     ba4:	94 c3       	rjmp	.+1832   	; 0x12ce <__vector_41+0x782>
     ba6:	10 92 f1 42 	sts	0x42F1, r1	; 0x8042f1 <_ZZ11__vector_41E3cnt>
     baa:	10 92 f2 42 	sts	0x42F2, r1	; 0x8042f2 <_ZZ11__vector_41E3cnt+0x1>
     bae:	80 91 cb 42 	lds	r24, 0x42CB	; 0x8042cb <g_event_enabled>
     bb2:	81 11       	cpse	r24, r1
     bb4:	03 c0       	rjmp	.+6      	; 0xbbc <__vector_41+0x70>
     bb6:	8a b1       	in	r24, 0x0a	; 10
     bb8:	80 64       	ori	r24, 0x40	; 64
     bba:	8a b9       	out	0x0a, r24	; 10
     bbc:	0e 94 7c 16 	call	0x2cf8	; 0x2cf8 <_Z18antennaIsConnectedv>
     bc0:	81 11       	cpse	r24, r1
     bc2:	0a c0       	rjmp	.+20     	; 0xbd8 <__vector_41+0x8c>
     bc4:	90 91 8a 42 	lds	r25, 0x428A	; 0x80428a <g_antenna_connect_state>
     bc8:	91 30       	cpi	r25, 0x01	; 1
     bca:	19 f1       	breq	.+70     	; 0xc12 <__vector_41+0xc6>
     bcc:	91 e0       	ldi	r25, 0x01	; 1
     bce:	90 93 8a 42 	sts	0x428A, r25	; 0x80428a <g_antenna_connect_state>
     bd2:	90 93 07 40 	sts	0x4007, r25	; 0x804007 <_ZL28g_antenna_connection_changed>
     bd6:	1d c0       	rjmp	.+58     	; 0xc12 <__vector_41+0xc6>
     bd8:	90 91 8a 42 	lds	r25, 0x428A	; 0x80428a <g_antenna_connect_state>
     bdc:	91 30       	cpi	r25, 0x01	; 1
     bde:	c9 f4       	brne	.+50     	; 0xc12 <__vector_41+0xc6>
     be0:	90 91 f3 42 	lds	r25, 0x42F3	; 0x8042f3 <_ZZ11__vector_41E26lastAntennaConnectionState>
     be4:	89 13       	cpse	r24, r25
     be6:	12 c0       	rjmp	.+36     	; 0xc0c <__vector_41+0xc0>
     be8:	90 91 1d 40 	lds	r25, 0x401D	; 0x80401d <_ZZ11__vector_41E16antennaReadCount>
     bec:	99 23       	and	r25, r25
     bee:	89 f0       	breq	.+34     	; 0xc12 <__vector_41+0xc6>
     bf0:	91 50       	subi	r25, 0x01	; 1
     bf2:	90 93 1d 40 	sts	0x401D, r25	; 0x80401d <_ZZ11__vector_41E16antennaReadCount>
     bf6:	91 11       	cpse	r25, r1
     bf8:	0c c0       	rjmp	.+24     	; 0xc12 <__vector_41+0xc6>
     bfa:	10 92 8a 42 	sts	0x428A, r1	; 0x80428a <g_antenna_connect_state>
     bfe:	91 e0       	ldi	r25, 0x01	; 1
     c00:	90 93 07 40 	sts	0x4007, r25	; 0x804007 <_ZL28g_antenna_connection_changed>
     c04:	93 e0       	ldi	r25, 0x03	; 3
     c06:	90 93 1d 40 	sts	0x401D, r25	; 0x80401d <_ZZ11__vector_41E16antennaReadCount>
     c0a:	03 c0       	rjmp	.+6      	; 0xc12 <__vector_41+0xc6>
     c0c:	93 e0       	ldi	r25, 0x03	; 3
     c0e:	90 93 1d 40 	sts	0x401D, r25	; 0x80401d <_ZZ11__vector_41E16antennaReadCount>
     c12:	80 93 f3 42 	sts	0x42F3, r24	; 0x8042f3 <_ZZ11__vector_41E26lastAntennaConnectionState>
     c16:	0e 94 58 01 	call	0x2b0	; 0x2b0 <system_tick>
     c1a:	80 91 d0 42 	lds	r24, 0x42D0	; 0x8042d0 <_ZL10g_sleeping>
     c1e:	88 23       	and	r24, r24
     c20:	e1 f1       	breq	.+120    	; 0xc9a <__vector_41+0x14e>
     c22:	80 91 d1 42 	lds	r24, 0x42D1	; 0x8042d1 <_ZL23g_seconds_left_to_sleep>
     c26:	90 91 d2 42 	lds	r25, 0x42D2	; 0x8042d2 <_ZL23g_seconds_left_to_sleep+0x1>
     c2a:	a0 91 d3 42 	lds	r26, 0x42D3	; 0x8042d3 <_ZL23g_seconds_left_to_sleep+0x2>
     c2e:	b0 91 d4 42 	lds	r27, 0x42D4	; 0x8042d4 <_ZL23g_seconds_left_to_sleep+0x3>
     c32:	89 2b       	or	r24, r25
     c34:	8a 2b       	or	r24, r26
     c36:	8b 2b       	or	r24, r27
     c38:	99 f0       	breq	.+38     	; 0xc60 <__vector_41+0x114>
     c3a:	80 91 d1 42 	lds	r24, 0x42D1	; 0x8042d1 <_ZL23g_seconds_left_to_sleep>
     c3e:	90 91 d2 42 	lds	r25, 0x42D2	; 0x8042d2 <_ZL23g_seconds_left_to_sleep+0x1>
     c42:	a0 91 d3 42 	lds	r26, 0x42D3	; 0x8042d3 <_ZL23g_seconds_left_to_sleep+0x2>
     c46:	b0 91 d4 42 	lds	r27, 0x42D4	; 0x8042d4 <_ZL23g_seconds_left_to_sleep+0x3>
     c4a:	01 97       	sbiw	r24, 0x01	; 1
     c4c:	a1 09       	sbc	r26, r1
     c4e:	b1 09       	sbc	r27, r1
     c50:	80 93 d1 42 	sts	0x42D1, r24	; 0x8042d1 <_ZL23g_seconds_left_to_sleep>
     c54:	90 93 d2 42 	sts	0x42D2, r25	; 0x8042d2 <_ZL23g_seconds_left_to_sleep+0x1>
     c58:	a0 93 d3 42 	sts	0x42D3, r26	; 0x8042d3 <_ZL23g_seconds_left_to_sleep+0x2>
     c5c:	b0 93 d4 42 	sts	0x42D4, r27	; 0x8042d4 <_ZL23g_seconds_left_to_sleep+0x3>
     c60:	80 91 d1 42 	lds	r24, 0x42D1	; 0x8042d1 <_ZL23g_seconds_left_to_sleep>
     c64:	90 91 d2 42 	lds	r25, 0x42D2	; 0x8042d2 <_ZL23g_seconds_left_to_sleep+0x1>
     c68:	a0 91 d3 42 	lds	r26, 0x42D3	; 0x8042d3 <_ZL23g_seconds_left_to_sleep+0x2>
     c6c:	b0 91 d4 42 	lds	r27, 0x42D4	; 0x8042d4 <_ZL23g_seconds_left_to_sleep+0x3>
     c70:	89 2b       	or	r24, r25
     c72:	8a 2b       	or	r24, r26
     c74:	8b 2b       	or	r24, r27
     c76:	31 f0       	breq	.+12     	; 0xc84 <__vector_41+0x138>
     c78:	80 91 07 40 	lds	r24, 0x4007	; 0x804007 <_ZL28g_antenna_connection_changed>
     c7c:	88 23       	and	r24, r24
     c7e:	21 f0       	breq	.+8      	; 0xc88 <__vector_41+0x13c>
     c80:	81 e0       	ldi	r24, 0x01	; 1
     c82:	03 c0       	rjmp	.+6      	; 0xc8a <__vector_41+0x13e>
     c84:	81 e0       	ldi	r24, 0x01	; 1
     c86:	01 c0       	rjmp	.+2      	; 0xc8a <__vector_41+0x13e>
     c88:	80 e0       	ldi	r24, 0x00	; 0
     c8a:	88 23       	and	r24, r24
     c8c:	09 f4       	brne	.+2      	; 0xc90 <__vector_41+0x144>
     c8e:	1f c3       	rjmp	.+1598   	; 0x12ce <__vector_41+0x782>
     c90:	10 92 cf 42 	sts	0x42CF, r1	; 0x8042cf <_ZL13g_go_to_sleep>
     c94:	10 92 d0 42 	sts	0x42D0, r1	; 0x8042d0 <_ZL10g_sleeping>
     c98:	1a c3       	rjmp	.+1588   	; 0x12ce <__vector_41+0x782>
     c9a:	19 82       	std	Y+1, r1	; 0x01
     c9c:	1a 82       	std	Y+2, r1	; 0x02
     c9e:	1b 82       	std	Y+3, r1	; 0x03
     ca0:	1c 82       	std	Y+4, r1	; 0x04
     ca2:	80 91 14 40 	lds	r24, 0x4014	; 0x804014 <g_update_timeout_seconds>
     ca6:	90 91 15 40 	lds	r25, 0x4015	; 0x804015 <g_update_timeout_seconds+0x1>
     caa:	89 2b       	or	r24, r25
     cac:	49 f0       	breq	.+18     	; 0xcc0 <__vector_41+0x174>
     cae:	80 91 14 40 	lds	r24, 0x4014	; 0x804014 <g_update_timeout_seconds>
     cb2:	90 91 15 40 	lds	r25, 0x4015	; 0x804015 <g_update_timeout_seconds+0x1>
     cb6:	01 97       	sbiw	r24, 0x01	; 1
     cb8:	80 93 14 40 	sts	0x4014, r24	; 0x804014 <g_update_timeout_seconds>
     cbc:	90 93 15 40 	sts	0x4015, r25	; 0x804015 <g_update_timeout_seconds+0x1>
     cc0:	80 91 cc 42 	lds	r24, 0x42CC	; 0x8042cc <g_event_commenced>
     cc4:	88 23       	and	r24, r24
     cc6:	09 f4       	brne	.+2      	; 0xcca <__vector_41+0x17e>
     cc8:	54 c0       	rjmp	.+168    	; 0xd72 <__vector_41+0x226>
     cca:	80 91 c7 42 	lds	r24, 0x42C7	; 0x8042c7 <g_event_finish_time>
     cce:	90 91 c8 42 	lds	r25, 0x42C8	; 0x8042c8 <g_event_finish_time+0x1>
     cd2:	a0 91 c9 42 	lds	r26, 0x42C9	; 0x8042c9 <g_event_finish_time+0x2>
     cd6:	b0 91 ca 42 	lds	r27, 0x42CA	; 0x8042ca <g_event_finish_time+0x3>
     cda:	89 2b       	or	r24, r25
     cdc:	8a 2b       	or	r24, r26
     cde:	8b 2b       	or	r24, r27
     ce0:	51 f0       	breq	.+20     	; 0xcf6 <__vector_41+0x1aa>
     ce2:	80 91 cd 42 	lds	r24, 0x42CD	; 0x8042cd <g_check_for_next_event>
     ce6:	81 11       	cpse	r24, r1
     ce8:	08 c0       	rjmp	.+16     	; 0xcfa <__vector_41+0x1ae>
     cea:	80 91 93 42 	lds	r24, 0x4293	; 0x804293 <_ZL20g_shutting_down_wifi>
     cee:	88 23       	and	r24, r24
     cf0:	31 f0       	breq	.+12     	; 0xcfe <__vector_41+0x1b2>
     cf2:	80 e0       	ldi	r24, 0x00	; 0
     cf4:	05 c0       	rjmp	.+10     	; 0xd00 <__vector_41+0x1b4>
     cf6:	80 e0       	ldi	r24, 0x00	; 0
     cf8:	03 c0       	rjmp	.+6      	; 0xd00 <__vector_41+0x1b4>
     cfa:	80 e0       	ldi	r24, 0x00	; 0
     cfc:	01 c0       	rjmp	.+2      	; 0xd00 <__vector_41+0x1b4>
     cfe:	81 e0       	ldi	r24, 0x01	; 1
     d00:	88 23       	and	r24, r24
     d02:	b9 f1       	breq	.+110    	; 0xd72 <__vector_41+0x226>
     d04:	ce 01       	movw	r24, r28
     d06:	01 96       	adiw	r24, 0x01	; 1
     d08:	0e 94 45 01 	call	0x28a	; 0x28a <time>
     d0c:	49 81       	ldd	r20, Y+1	; 0x01
     d0e:	5a 81       	ldd	r21, Y+2	; 0x02
     d10:	6b 81       	ldd	r22, Y+3	; 0x03
     d12:	7c 81       	ldd	r23, Y+4	; 0x04
     d14:	80 91 c7 42 	lds	r24, 0x42C7	; 0x8042c7 <g_event_finish_time>
     d18:	90 91 c8 42 	lds	r25, 0x42C8	; 0x8042c8 <g_event_finish_time+0x1>
     d1c:	a0 91 c9 42 	lds	r26, 0x42C9	; 0x8042c9 <g_event_finish_time+0x2>
     d20:	b0 91 ca 42 	lds	r27, 0x42CA	; 0x8042ca <g_event_finish_time+0x3>
     d24:	48 17       	cp	r20, r24
     d26:	59 07       	cpc	r21, r25
     d28:	6a 07       	cpc	r22, r26
     d2a:	7b 07       	cpc	r23, r27
     d2c:	10 f1       	brcs	.+68     	; 0xd72 <__vector_41+0x226>
     d2e:	8c ef       	ldi	r24, 0xFC	; 252
     d30:	80 93 87 42 	sts	0x4287, r24	; 0x804287 <_ZL18g_last_status_code>
     d34:	10 92 8b 42 	sts	0x428B, r1	; 0x80428b <_ZL12g_on_the_air>
     d38:	10 92 8c 42 	sts	0x428C, r1	; 0x80428c <_ZL12g_on_the_air+0x1>
     d3c:	10 92 8d 42 	sts	0x428D, r1	; 0x80428d <_ZL12g_on_the_air+0x2>
     d40:	10 92 8e 42 	sts	0x428E, r1	; 0x80428e <_ZL12g_on_the_air+0x3>
     d44:	80 e0       	ldi	r24, 0x00	; 0
     d46:	0e 94 b5 2d 	call	0x5b6a	; 0x5b6a <_Z14keyTransmitterh>
     d4a:	10 92 cb 42 	sts	0x42CB, r1	; 0x8042cb <g_event_enabled>
     d4e:	10 92 cc 42 	sts	0x42CC, r1	; 0x8042cc <g_event_commenced>
     d52:	81 e0       	ldi	r24, 0x01	; 1
     d54:	80 93 cd 42 	sts	0x42CD, r24	; 0x8042cd <g_check_for_next_event>
     d58:	8a e5       	ldi	r24, 0x5A	; 90
     d5a:	90 e0       	ldi	r25, 0x00	; 0
     d5c:	80 93 14 40 	sts	0x4014, r24	; 0x804014 <g_update_timeout_seconds>
     d60:	90 93 15 40 	sts	0x4015, r25	; 0x804015 <g_update_timeout_seconds+0x1>
     d64:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <_ZL13g_wifi_active>
     d68:	88 23       	and	r24, r24
     d6a:	19 f0       	breq	.+6      	; 0xd72 <__vector_41+0x226>
     d6c:	8c e3       	ldi	r24, 0x3C	; 60
     d6e:	80 93 0a 40 	sts	0x400A, r24	; 0x80400a <_ZL23g_WiFi_shutdown_seconds>
     d72:	80 91 cb 42 	lds	r24, 0x42CB	; 0x8042cb <g_event_enabled>
     d76:	88 23       	and	r24, r24
     d78:	09 f4       	brne	.+2      	; 0xd7c <__vector_41+0x230>
     d7a:	36 c2       	rjmp	.+1132   	; 0x11e8 <__vector_41+0x69c>
     d7c:	80 91 cc 42 	lds	r24, 0x42CC	; 0x8042cc <g_event_commenced>
     d80:	88 23       	and	r24, r24
     d82:	09 f4       	brne	.+2      	; 0xd86 <__vector_41+0x23a>
     d84:	a6 c1       	rjmp	.+844    	; 0x10d2 <__vector_41+0x586>
     d86:	80 91 8f 42 	lds	r24, 0x428F	; 0x80428f <_ZL26g_sendID_seconds_countdown>
     d8a:	90 91 90 42 	lds	r25, 0x4290	; 0x804290 <_ZL26g_sendID_seconds_countdown+0x1>
     d8e:	89 2b       	or	r24, r25
     d90:	49 f0       	breq	.+18     	; 0xda4 <__vector_41+0x258>
     d92:	80 91 8f 42 	lds	r24, 0x428F	; 0x80428f <_ZL26g_sendID_seconds_countdown>
     d96:	90 91 90 42 	lds	r25, 0x4290	; 0x804290 <_ZL26g_sendID_seconds_countdown+0x1>
     d9a:	01 97       	sbiw	r24, 0x01	; 1
     d9c:	80 93 8f 42 	sts	0x428F, r24	; 0x80428f <_ZL26g_sendID_seconds_countdown>
     da0:	90 93 90 42 	sts	0x4290, r25	; 0x804290 <_ZL26g_sendID_seconds_countdown+0x1>
     da4:	80 91 8b 42 	lds	r24, 0x428B	; 0x80428b <_ZL12g_on_the_air>
     da8:	90 91 8c 42 	lds	r25, 0x428C	; 0x80428c <_ZL12g_on_the_air+0x1>
     dac:	a0 91 8d 42 	lds	r26, 0x428D	; 0x80428d <_ZL12g_on_the_air+0x2>
     db0:	b0 91 8e 42 	lds	r27, 0x428E	; 0x80428e <_ZL12g_on_the_air+0x3>
     db4:	89 2b       	or	r24, r25
     db6:	8a 2b       	or	r24, r26
     db8:	8b 2b       	or	r24, r27
     dba:	09 f4       	brne	.+2      	; 0xdbe <__vector_41+0x272>
     dbc:	15 c2       	rjmp	.+1066   	; 0x11e8 <__vector_41+0x69c>
     dbe:	80 91 8b 42 	lds	r24, 0x428B	; 0x80428b <_ZL12g_on_the_air>
     dc2:	90 91 8c 42 	lds	r25, 0x428C	; 0x80428c <_ZL12g_on_the_air+0x1>
     dc6:	a0 91 8d 42 	lds	r26, 0x428D	; 0x80428d <_ZL12g_on_the_air+0x2>
     dca:	b0 91 8e 42 	lds	r27, 0x428E	; 0x80428e <_ZL12g_on_the_air+0x3>
     dce:	18 16       	cp	r1, r24
     dd0:	19 06       	cpc	r1, r25
     dd2:	1a 06       	cpc	r1, r26
     dd4:	1b 06       	cpc	r1, r27
     dd6:	0c f0       	brlt	.+2      	; 0xdda <__vector_41+0x28e>
     dd8:	2a c1       	rjmp	.+596    	; 0x102e <__vector_41+0x4e2>
     dda:	80 91 8b 42 	lds	r24, 0x428B	; 0x80428b <_ZL12g_on_the_air>
     dde:	90 91 8c 42 	lds	r25, 0x428C	; 0x80428c <_ZL12g_on_the_air+0x1>
     de2:	a0 91 8d 42 	lds	r26, 0x428D	; 0x80428d <_ZL12g_on_the_air+0x2>
     de6:	b0 91 8e 42 	lds	r27, 0x428E	; 0x80428e <_ZL12g_on_the_air+0x3>
     dea:	01 97       	sbiw	r24, 0x01	; 1
     dec:	a1 09       	sbc	r26, r1
     dee:	b1 09       	sbc	r27, r1
     df0:	80 93 8b 42 	sts	0x428B, r24	; 0x80428b <_ZL12g_on_the_air>
     df4:	90 93 8c 42 	sts	0x428C, r25	; 0x80428c <_ZL12g_on_the_air+0x1>
     df8:	a0 93 8d 42 	sts	0x428D, r26	; 0x80428d <_ZL12g_on_the_air+0x2>
     dfc:	b0 93 8e 42 	sts	0x428E, r27	; 0x80428e <_ZL12g_on_the_air+0x3>
     e00:	80 91 8f 42 	lds	r24, 0x428F	; 0x80428f <_ZL26g_sendID_seconds_countdown>
     e04:	90 91 90 42 	lds	r25, 0x4290	; 0x804290 <_ZL26g_sendID_seconds_countdown+0x1>
     e08:	89 2b       	or	r24, r25
     e0a:	41 f4       	brne	.+16     	; 0xe1c <__vector_41+0x2d0>
     e0c:	80 91 bf 42 	lds	r24, 0x42BF	; 0x8042bf <g_time_needed_for_ID>
     e10:	90 91 c0 42 	lds	r25, 0x42C0	; 0x8042c0 <g_time_needed_for_ID+0x1>
     e14:	89 2b       	or	r24, r25
     e16:	21 f4       	brne	.+8      	; 0xe20 <__vector_41+0x2d4>
     e18:	80 e0       	ldi	r24, 0x00	; 0
     e1a:	03 c0       	rjmp	.+6      	; 0xe22 <__vector_41+0x2d6>
     e1c:	80 e0       	ldi	r24, 0x00	; 0
     e1e:	01 c0       	rjmp	.+2      	; 0xe22 <__vector_41+0x2d6>
     e20:	81 e0       	ldi	r24, 0x01	; 1
     e22:	88 23       	and	r24, r24
     e24:	81 f1       	breq	.+96     	; 0xe86 <__vector_41+0x33a>
     e26:	80 91 bf 42 	lds	r24, 0x42BF	; 0x8042bf <g_time_needed_for_ID>
     e2a:	90 91 c0 42 	lds	r25, 0x42C0	; 0x8042c0 <g_time_needed_for_ID+0x1>
     e2e:	a0 e0       	ldi	r26, 0x00	; 0
     e30:	b0 e0       	ldi	r27, 0x00	; 0
     e32:	40 91 8b 42 	lds	r20, 0x428B	; 0x80428b <_ZL12g_on_the_air>
     e36:	50 91 8c 42 	lds	r21, 0x428C	; 0x80428c <_ZL12g_on_the_air+0x1>
     e3a:	60 91 8d 42 	lds	r22, 0x428D	; 0x80428d <_ZL12g_on_the_air+0x2>
     e3e:	70 91 8e 42 	lds	r23, 0x428E	; 0x80428e <_ZL12g_on_the_air+0x3>
     e42:	84 17       	cp	r24, r20
     e44:	95 07       	cpc	r25, r21
     e46:	a6 07       	cpc	r26, r22
     e48:	b7 07       	cpc	r27, r23
     e4a:	e9 f4       	brne	.+58     	; 0xe86 <__vector_41+0x33a>
     e4c:	8f ee       	ldi	r24, 0xEF	; 239
     e4e:	80 93 87 42 	sts	0x4287, r24	; 0x804287 <_ZL18g_last_status_code>
     e52:	80 91 12 40 	lds	r24, 0x4012	; 0x804012 <g_ID_period_seconds>
     e56:	90 91 13 40 	lds	r25, 0x4013	; 0x804013 <g_ID_period_seconds+0x1>
     e5a:	80 93 8f 42 	sts	0x428F, r24	; 0x80428f <_ZL26g_sendID_seconds_countdown>
     e5e:	90 93 90 42 	sts	0x4290, r25	; 0x804290 <_ZL26g_sendID_seconds_countdown+0x1>
     e62:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_id_codespeed>
     e66:	0e 94 71 14 	call	0x28e2	; 0x28e2 <_Z13throttleValueh>
     e6a:	80 93 08 40 	sts	0x4008, r24	; 0x804008 <_ZL15g_code_throttle>
     e6e:	90 93 09 40 	sts	0x4009, r25	; 0x804009 <_ZL15g_code_throttle+0x1>
     e72:	1d 82       	std	Y+5, r1	; 0x05
     e74:	40 e0       	ldi	r20, 0x00	; 0
     e76:	50 e0       	ldi	r21, 0x00	; 0
     e78:	be 01       	movw	r22, r28
     e7a:	6b 5f       	subi	r22, 0xFB	; 251
     e7c:	7f 4f       	sbci	r23, 0xFF	; 255
     e7e:	8a ea       	ldi	r24, 0xAA	; 170
     e80:	92 e4       	ldi	r25, 0x42	; 66
     e82:	0e 94 8a 23 	call	0x4714	; 0x4714 <_Z9makeMorsePcPhS0_>
     e86:	80 91 8b 42 	lds	r24, 0x428B	; 0x80428b <_ZL12g_on_the_air>
     e8a:	90 91 8c 42 	lds	r25, 0x428C	; 0x80428c <_ZL12g_on_the_air+0x1>
     e8e:	a0 91 8d 42 	lds	r26, 0x428D	; 0x80428d <_ZL12g_on_the_air+0x2>
     e92:	b0 91 8e 42 	lds	r27, 0x428E	; 0x80428e <_ZL12g_on_the_air+0x3>
     e96:	89 2b       	or	r24, r25
     e98:	8a 2b       	or	r24, r26
     e9a:	8b 2b       	or	r24, r27
     e9c:	09 f0       	breq	.+2      	; 0xea0 <__vector_41+0x354>
     e9e:	a4 c1       	rjmp	.+840    	; 0x11e8 <__vector_41+0x69c>
     ea0:	80 91 10 40 	lds	r24, 0x4010	; 0x804010 <g_off_air_seconds>
     ea4:	90 91 11 40 	lds	r25, 0x4011	; 0x804011 <g_off_air_seconds+0x1>
     ea8:	89 2b       	or	r24, r25
     eaa:	09 f4       	brne	.+2      	; 0xeae <__vector_41+0x362>
     eac:	a7 c0       	rjmp	.+334    	; 0xffc <__vector_41+0x4b0>
     eae:	80 e0       	ldi	r24, 0x00	; 0
     eb0:	0e 94 b5 2d 	call	0x5b6a	; 0x5b6a <_Z14keyTransmitterh>
     eb4:	40 91 10 40 	lds	r20, 0x4010	; 0x804010 <g_off_air_seconds>
     eb8:	50 91 11 40 	lds	r21, 0x4011	; 0x804011 <g_off_air_seconds+0x1>
     ebc:	80 91 8b 42 	lds	r24, 0x428B	; 0x80428b <_ZL12g_on_the_air>
     ec0:	90 91 8c 42 	lds	r25, 0x428C	; 0x80428c <_ZL12g_on_the_air+0x1>
     ec4:	a0 91 8d 42 	lds	r26, 0x428D	; 0x80428d <_ZL12g_on_the_air+0x2>
     ec8:	b0 91 8e 42 	lds	r27, 0x428E	; 0x80428e <_ZL12g_on_the_air+0x3>
     ecc:	05 2e       	mov	r0, r21
     ece:	00 0c       	add	r0, r0
     ed0:	66 0b       	sbc	r22, r22
     ed2:	77 0b       	sbc	r23, r23
     ed4:	84 1b       	sub	r24, r20
     ed6:	95 0b       	sbc	r25, r21
     ed8:	a6 0b       	sbc	r26, r22
     eda:	b7 0b       	sbc	r27, r23
     edc:	80 93 8b 42 	sts	0x428B, r24	; 0x80428b <_ZL12g_on_the_air>
     ee0:	90 93 8c 42 	sts	0x428C, r25	; 0x80428c <_ZL12g_on_the_air+0x1>
     ee4:	a0 93 8d 42 	sts	0x428D, r26	; 0x80428d <_ZL12g_on_the_air+0x2>
     ee8:	b0 93 8e 42 	sts	0x428E, r27	; 0x80428e <_ZL12g_on_the_air+0x3>
     eec:	81 e0       	ldi	r24, 0x01	; 1
     eee:	8d 83       	std	Y+5, r24	; 0x05
     ef0:	40 e0       	ldi	r20, 0x00	; 0
     ef2:	50 e0       	ldi	r21, 0x00	; 0
     ef4:	be 01       	movw	r22, r28
     ef6:	6b 5f       	subi	r22, 0xFB	; 251
     ef8:	7f 4f       	sbci	r23, 0xFF	; 255
     efa:	85 e9       	ldi	r24, 0x95	; 149
     efc:	92 e4       	ldi	r25, 0x42	; 66
     efe:	0e 94 8a 23 	call	0x4714	; 0x4714 <_Z9makeMorsePcPhS0_>
     f02:	8e ef       	ldi	r24, 0xFE	; 254
     f04:	80 93 87 42 	sts	0x4287, r24	; 0x804287 <_ZL18g_last_status_code>
     f08:	ce 01       	movw	r24, r28
     f0a:	01 96       	adiw	r24, 0x01	; 1
     f0c:	0e 94 45 01 	call	0x28a	; 0x28a <time>
     f10:	29 81       	ldd	r18, Y+1	; 0x01
     f12:	3a 81       	ldd	r19, Y+2	; 0x02
     f14:	4b 81       	ldd	r20, Y+3	; 0x03
     f16:	5c 81       	ldd	r21, Y+4	; 0x04
     f18:	80 91 c7 42 	lds	r24, 0x42C7	; 0x8042c7 <g_event_finish_time>
     f1c:	90 91 c8 42 	lds	r25, 0x42C8	; 0x8042c8 <g_event_finish_time+0x1>
     f20:	a0 91 c9 42 	lds	r26, 0x42C9	; 0x8042c9 <g_event_finish_time+0x2>
     f24:	b0 91 ca 42 	lds	r27, 0x42CA	; 0x8042ca <g_event_finish_time+0x3>
     f28:	28 17       	cp	r18, r24
     f2a:	39 07       	cpc	r19, r25
     f2c:	4a 07       	cpc	r20, r26
     f2e:	5b 07       	cpc	r21, r27
     f30:	58 f4       	brcc	.+22     	; 0xf48 <__vector_41+0x3fc>
     f32:	60 91 c7 42 	lds	r22, 0x42C7	; 0x8042c7 <g_event_finish_time>
     f36:	70 91 c8 42 	lds	r23, 0x42C8	; 0x8042c8 <g_event_finish_time+0x1>
     f3a:	80 91 c9 42 	lds	r24, 0x42C9	; 0x8042c9 <g_event_finish_time+0x2>
     f3e:	90 91 ca 42 	lds	r25, 0x42CA	; 0x8042ca <g_event_finish_time+0x3>
     f42:	0e 94 e4 2f 	call	0x5fc8	; 0x5fc8 <_Z7timeDifmm>
     f46:	03 c0       	rjmp	.+6      	; 0xf4e <__vector_41+0x402>
     f48:	60 e0       	ldi	r22, 0x00	; 0
     f4a:	70 e0       	ldi	r23, 0x00	; 0
     f4c:	cb 01       	movw	r24, r22
     f4e:	20 91 10 40 	lds	r18, 0x4010	; 0x804010 <g_off_air_seconds>
     f52:	30 91 11 40 	lds	r19, 0x4011	; 0x804011 <g_off_air_seconds+0x1>
     f56:	40 91 0e 40 	lds	r20, 0x400E	; 0x80400e <g_on_air_seconds>
     f5a:	50 91 0f 40 	lds	r21, 0x400F	; 0x80400f <g_on_air_seconds+0x1>
     f5e:	24 0f       	add	r18, r20
     f60:	35 1f       	adc	r19, r21
     f62:	21 5f       	subi	r18, 0xF1	; 241
     f64:	3f 4f       	sbci	r19, 0xFF	; 255
     f66:	03 2e       	mov	r0, r19
     f68:	00 0c       	add	r0, r0
     f6a:	44 0b       	sbc	r20, r20
     f6c:	55 0b       	sbc	r21, r21
     f6e:	26 17       	cp	r18, r22
     f70:	37 07       	cpc	r19, r23
     f72:	48 07       	cpc	r20, r24
     f74:	59 07       	cpc	r21, r25
     f76:	0c f0       	brlt	.+2      	; 0xf7a <__vector_41+0x42e>
     f78:	37 c1       	rjmp	.+622    	; 0x11e8 <__vector_41+0x69c>
     f7a:	80 91 10 40 	lds	r24, 0x4010	; 0x804010 <g_off_air_seconds>
     f7e:	90 91 11 40 	lds	r25, 0x4011	; 0x804011 <g_off_air_seconds+0x1>
     f82:	40 97       	sbiw	r24, 0x10	; 16
     f84:	34 f0       	brlt	.+12     	; 0xf92 <__vector_41+0x446>
     f86:	80 91 0a 40 	lds	r24, 0x400A	; 0x80400a <_ZL23g_WiFi_shutdown_seconds>
     f8a:	88 23       	and	r24, r24
     f8c:	21 f0       	breq	.+8      	; 0xf96 <__vector_41+0x44a>
     f8e:	80 e0       	ldi	r24, 0x00	; 0
     f90:	03 c0       	rjmp	.+6      	; 0xf98 <__vector_41+0x44c>
     f92:	80 e0       	ldi	r24, 0x00	; 0
     f94:	01 c0       	rjmp	.+2      	; 0xf98 <__vector_41+0x44c>
     f96:	81 e0       	ldi	r24, 0x01	; 1
     f98:	88 23       	and	r24, r24
     f9a:	09 f4       	brne	.+2      	; 0xf9e <__vector_41+0x452>
     f9c:	25 c1       	rjmp	.+586    	; 0x11e8 <__vector_41+0x69c>
     f9e:	80 91 10 40 	lds	r24, 0x4010	; 0x804010 <g_off_air_seconds>
     fa2:	90 91 11 40 	lds	r25, 0x4011	; 0x804011 <g_off_air_seconds+0x1>
     fa6:	0a 97       	sbiw	r24, 0x0a	; 10
     fa8:	09 2e       	mov	r0, r25
     faa:	00 0c       	add	r0, r0
     fac:	aa 0b       	sbc	r26, r26
     fae:	bb 0b       	sbc	r27, r27
     fb0:	80 93 18 40 	sts	0x4018, r24	; 0x804018 <_ZL18g_seconds_to_sleep>
     fb4:	90 93 19 40 	sts	0x4019, r25	; 0x804019 <_ZL18g_seconds_to_sleep+0x1>
     fb8:	a0 93 1a 40 	sts	0x401A, r26	; 0x80401a <_ZL18g_seconds_to_sleep+0x2>
     fbc:	b0 93 1b 40 	sts	0x401B, r27	; 0x80401b <_ZL18g_seconds_to_sleep+0x3>
     fc0:	82 e0       	ldi	r24, 0x02	; 2
     fc2:	80 93 94 42 	sts	0x4294, r24	; 0x804294 <_ZL11g_sleepType>
     fc6:	81 e0       	ldi	r24, 0x01	; 1
     fc8:	80 93 cf 42 	sts	0x42CF, r24	; 0x8042cf <_ZL13g_go_to_sleep>
     fcc:	80 91 8f 42 	lds	r24, 0x428F	; 0x80428f <_ZL26g_sendID_seconds_countdown>
     fd0:	90 91 90 42 	lds	r25, 0x4290	; 0x804290 <_ZL26g_sendID_seconds_countdown+0x1>
     fd4:	40 91 18 40 	lds	r20, 0x4018	; 0x804018 <_ZL18g_seconds_to_sleep>
     fd8:	50 91 19 40 	lds	r21, 0x4019	; 0x804019 <_ZL18g_seconds_to_sleep+0x1>
     fdc:	60 91 1a 40 	lds	r22, 0x401A	; 0x80401a <_ZL18g_seconds_to_sleep+0x2>
     fe0:	70 91 1b 40 	lds	r23, 0x401B	; 0x80401b <_ZL18g_seconds_to_sleep+0x3>
     fe4:	84 1b       	sub	r24, r20
     fe6:	95 0b       	sbc	r25, r21
     fe8:	18 16       	cp	r1, r24
     fea:	19 06       	cpc	r1, r25
     fec:	14 f0       	brlt	.+4      	; 0xff2 <__vector_41+0x4a6>
     fee:	80 e0       	ldi	r24, 0x00	; 0
     ff0:	90 e0       	ldi	r25, 0x00	; 0
     ff2:	80 93 8f 42 	sts	0x428F, r24	; 0x80428f <_ZL26g_sendID_seconds_countdown>
     ff6:	90 93 90 42 	sts	0x4290, r25	; 0x804290 <_ZL26g_sendID_seconds_countdown+0x1>
     ffa:	f6 c0       	rjmp	.+492    	; 0x11e8 <__vector_41+0x69c>
     ffc:	80 91 0e 40 	lds	r24, 0x400E	; 0x80400e <g_on_air_seconds>
    1000:	90 91 0f 40 	lds	r25, 0x400F	; 0x80400f <g_on_air_seconds+0x1>
    1004:	09 2e       	mov	r0, r25
    1006:	00 0c       	add	r0, r0
    1008:	aa 0b       	sbc	r26, r26
    100a:	bb 0b       	sbc	r27, r27
    100c:	80 93 8b 42 	sts	0x428B, r24	; 0x80428b <_ZL12g_on_the_air>
    1010:	90 93 8c 42 	sts	0x428C, r25	; 0x80428c <_ZL12g_on_the_air+0x1>
    1014:	a0 93 8d 42 	sts	0x428D, r26	; 0x80428d <_ZL12g_on_the_air+0x2>
    1018:	b0 93 8e 42 	sts	0x428E, r27	; 0x80428e <_ZL12g_on_the_air+0x3>
    101c:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_pattern_codespeed>
    1020:	0e 94 71 14 	call	0x28e2	; 0x28e2 <_Z13throttleValueh>
    1024:	80 93 08 40 	sts	0x4008, r24	; 0x804008 <_ZL15g_code_throttle>
    1028:	90 93 09 40 	sts	0x4009, r25	; 0x804009 <_ZL15g_code_throttle+0x1>
    102c:	dd c0       	rjmp	.+442    	; 0x11e8 <__vector_41+0x69c>
    102e:	80 91 8b 42 	lds	r24, 0x428B	; 0x80428b <_ZL12g_on_the_air>
    1032:	90 91 8c 42 	lds	r25, 0x428C	; 0x80428c <_ZL12g_on_the_air+0x1>
    1036:	a0 91 8d 42 	lds	r26, 0x428D	; 0x80428d <_ZL12g_on_the_air+0x2>
    103a:	b0 91 8e 42 	lds	r27, 0x428E	; 0x80428e <_ZL12g_on_the_air+0x3>
    103e:	bb 23       	and	r27, r27
    1040:	0c f0       	brlt	.+2      	; 0x1044 <__vector_41+0x4f8>
    1042:	d2 c0       	rjmp	.+420    	; 0x11e8 <__vector_41+0x69c>
    1044:	80 91 8b 42 	lds	r24, 0x428B	; 0x80428b <_ZL12g_on_the_air>
    1048:	90 91 8c 42 	lds	r25, 0x428C	; 0x80428c <_ZL12g_on_the_air+0x1>
    104c:	a0 91 8d 42 	lds	r26, 0x428D	; 0x80428d <_ZL12g_on_the_air+0x2>
    1050:	b0 91 8e 42 	lds	r27, 0x428E	; 0x80428e <_ZL12g_on_the_air+0x3>
    1054:	01 96       	adiw	r24, 0x01	; 1
    1056:	a1 1d       	adc	r26, r1
    1058:	b1 1d       	adc	r27, r1
    105a:	80 93 8b 42 	sts	0x428B, r24	; 0x80428b <_ZL12g_on_the_air>
    105e:	90 93 8c 42 	sts	0x428C, r25	; 0x80428c <_ZL12g_on_the_air+0x1>
    1062:	a0 93 8d 42 	sts	0x428D, r26	; 0x80428d <_ZL12g_on_the_air+0x2>
    1066:	b0 93 8e 42 	sts	0x428E, r27	; 0x80428e <_ZL12g_on_the_air+0x3>
    106a:	80 91 8b 42 	lds	r24, 0x428B	; 0x80428b <_ZL12g_on_the_air>
    106e:	90 91 8c 42 	lds	r25, 0x428C	; 0x80428c <_ZL12g_on_the_air+0x1>
    1072:	a0 91 8d 42 	lds	r26, 0x428D	; 0x80428d <_ZL12g_on_the_air+0x2>
    1076:	b0 91 8e 42 	lds	r27, 0x428E	; 0x80428e <_ZL12g_on_the_air+0x3>
    107a:	89 2b       	or	r24, r25
    107c:	8a 2b       	or	r24, r26
    107e:	8b 2b       	or	r24, r27
    1080:	09 f0       	breq	.+2      	; 0x1084 <__vector_41+0x538>
    1082:	b2 c0       	rjmp	.+356    	; 0x11e8 <__vector_41+0x69c>
    1084:	8d ef       	ldi	r24, 0xFD	; 253
    1086:	80 93 87 42 	sts	0x4287, r24	; 0x804287 <_ZL18g_last_status_code>
    108a:	80 91 0e 40 	lds	r24, 0x400E	; 0x80400e <g_on_air_seconds>
    108e:	90 91 0f 40 	lds	r25, 0x400F	; 0x80400f <g_on_air_seconds+0x1>
    1092:	09 2e       	mov	r0, r25
    1094:	00 0c       	add	r0, r0
    1096:	aa 0b       	sbc	r26, r26
    1098:	bb 0b       	sbc	r27, r27
    109a:	80 93 8b 42 	sts	0x428B, r24	; 0x80428b <_ZL12g_on_the_air>
    109e:	90 93 8c 42 	sts	0x428C, r25	; 0x80428c <_ZL12g_on_the_air+0x1>
    10a2:	a0 93 8d 42 	sts	0x428D, r26	; 0x80428d <_ZL12g_on_the_air+0x2>
    10a6:	b0 93 8e 42 	sts	0x428E, r27	; 0x80428e <_ZL12g_on_the_air+0x3>
    10aa:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_pattern_codespeed>
    10ae:	0e 94 71 14 	call	0x28e2	; 0x28e2 <_Z13throttleValueh>
    10b2:	80 93 08 40 	sts	0x4008, r24	; 0x804008 <_ZL15g_code_throttle>
    10b6:	90 93 09 40 	sts	0x4009, r25	; 0x804009 <_ZL15g_code_throttle+0x1>
    10ba:	81 e0       	ldi	r24, 0x01	; 1
    10bc:	8d 83       	std	Y+5, r24	; 0x05
    10be:	40 e0       	ldi	r20, 0x00	; 0
    10c0:	50 e0       	ldi	r21, 0x00	; 0
    10c2:	be 01       	movw	r22, r28
    10c4:	6b 5f       	subi	r22, 0xFB	; 251
    10c6:	7f 4f       	sbci	r23, 0xFF	; 255
    10c8:	85 e9       	ldi	r24, 0x95	; 149
    10ca:	92 e4       	ldi	r25, 0x42	; 66
    10cc:	0e 94 8a 23 	call	0x4714	; 0x4714 <_Z9makeMorsePcPhS0_>
    10d0:	8b c0       	rjmp	.+278    	; 0x11e8 <__vector_41+0x69c>
    10d2:	80 91 c3 42 	lds	r24, 0x42C3	; 0x8042c3 <g_event_start_time>
    10d6:	90 91 c4 42 	lds	r25, 0x42C4	; 0x8042c4 <g_event_start_time+0x1>
    10da:	a0 91 c5 42 	lds	r26, 0x42C5	; 0x8042c5 <g_event_start_time+0x2>
    10de:	b0 91 c6 42 	lds	r27, 0x42C6	; 0x8042c6 <g_event_start_time+0x3>
    10e2:	89 2b       	or	r24, r25
    10e4:	8a 2b       	or	r24, r26
    10e6:	8b 2b       	or	r24, r27
    10e8:	09 f4       	brne	.+2      	; 0x10ec <__vector_41+0x5a0>
    10ea:	7e c0       	rjmp	.+252    	; 0x11e8 <__vector_41+0x69c>
    10ec:	ce 01       	movw	r24, r28
    10ee:	01 96       	adiw	r24, 0x01	; 1
    10f0:	0e 94 45 01 	call	0x28a	; 0x28a <time>
    10f4:	49 81       	ldd	r20, Y+1	; 0x01
    10f6:	5a 81       	ldd	r21, Y+2	; 0x02
    10f8:	6b 81       	ldd	r22, Y+3	; 0x03
    10fa:	7c 81       	ldd	r23, Y+4	; 0x04
    10fc:	80 91 c3 42 	lds	r24, 0x42C3	; 0x8042c3 <g_event_start_time>
    1100:	90 91 c4 42 	lds	r25, 0x42C4	; 0x8042c4 <g_event_start_time+0x1>
    1104:	a0 91 c5 42 	lds	r26, 0x42C5	; 0x8042c5 <g_event_start_time+0x2>
    1108:	b0 91 c6 42 	lds	r27, 0x42C6	; 0x8042c6 <g_event_start_time+0x3>
    110c:	48 17       	cp	r20, r24
    110e:	59 07       	cpc	r21, r25
    1110:	6a 07       	cpc	r22, r26
    1112:	7b 07       	cpc	r23, r27
    1114:	08 f4       	brcc	.+2      	; 0x1118 <__vector_41+0x5cc>
    1116:	68 c0       	rjmp	.+208    	; 0x11e8 <__vector_41+0x69c>
    1118:	80 91 c1 42 	lds	r24, 0x42C1	; 0x8042c1 <g_intra_cycle_delay_time>
    111c:	90 91 c2 42 	lds	r25, 0x42C2	; 0x8042c2 <g_intra_cycle_delay_time+0x1>
    1120:	89 2b       	or	r24, r25
    1122:	59 f1       	breq	.+86     	; 0x117a <__vector_41+0x62e>
    1124:	8e ef       	ldi	r24, 0xFE	; 254
    1126:	80 93 87 42 	sts	0x4287, r24	; 0x804287 <_ZL18g_last_status_code>
    112a:	80 91 c1 42 	lds	r24, 0x42C1	; 0x8042c1 <g_intra_cycle_delay_time>
    112e:	90 91 c2 42 	lds	r25, 0x42C2	; 0x8042c2 <g_intra_cycle_delay_time+0x1>
    1132:	91 95       	neg	r25
    1134:	81 95       	neg	r24
    1136:	91 09       	sbc	r25, r1
    1138:	09 2e       	mov	r0, r25
    113a:	00 0c       	add	r0, r0
    113c:	aa 0b       	sbc	r26, r26
    113e:	bb 0b       	sbc	r27, r27
    1140:	80 93 8b 42 	sts	0x428B, r24	; 0x80428b <_ZL12g_on_the_air>
    1144:	90 93 8c 42 	sts	0x428C, r25	; 0x80428c <_ZL12g_on_the_air+0x1>
    1148:	a0 93 8d 42 	sts	0x428D, r26	; 0x80428d <_ZL12g_on_the_air+0x2>
    114c:	b0 93 8e 42 	sts	0x428E, r27	; 0x80428e <_ZL12g_on_the_air+0x3>
    1150:	20 91 c1 42 	lds	r18, 0x42C1	; 0x8042c1 <g_intra_cycle_delay_time>
    1154:	30 91 c2 42 	lds	r19, 0x42C2	; 0x8042c2 <g_intra_cycle_delay_time+0x1>
    1158:	80 91 0e 40 	lds	r24, 0x400E	; 0x80400e <g_on_air_seconds>
    115c:	90 91 0f 40 	lds	r25, 0x400F	; 0x80400f <g_on_air_seconds+0x1>
    1160:	82 0f       	add	r24, r18
    1162:	93 1f       	adc	r25, r19
    1164:	20 91 bf 42 	lds	r18, 0x42BF	; 0x8042bf <g_time_needed_for_ID>
    1168:	30 91 c0 42 	lds	r19, 0x42C0	; 0x8042c0 <g_time_needed_for_ID+0x1>
    116c:	82 1b       	sub	r24, r18
    116e:	93 0b       	sbc	r25, r19
    1170:	80 93 8f 42 	sts	0x428F, r24	; 0x80428f <_ZL26g_sendID_seconds_countdown>
    1174:	90 93 90 42 	sts	0x4290, r25	; 0x804290 <_ZL26g_sendID_seconds_countdown+0x1>
    1178:	34 c0       	rjmp	.+104    	; 0x11e2 <__vector_41+0x696>
    117a:	8d ef       	ldi	r24, 0xFD	; 253
    117c:	80 93 87 42 	sts	0x4287, r24	; 0x804287 <_ZL18g_last_status_code>
    1180:	80 91 0e 40 	lds	r24, 0x400E	; 0x80400e <g_on_air_seconds>
    1184:	90 91 0f 40 	lds	r25, 0x400F	; 0x80400f <g_on_air_seconds+0x1>
    1188:	09 2e       	mov	r0, r25
    118a:	00 0c       	add	r0, r0
    118c:	aa 0b       	sbc	r26, r26
    118e:	bb 0b       	sbc	r27, r27
    1190:	80 93 8b 42 	sts	0x428B, r24	; 0x80428b <_ZL12g_on_the_air>
    1194:	90 93 8c 42 	sts	0x428C, r25	; 0x80428c <_ZL12g_on_the_air+0x1>
    1198:	a0 93 8d 42 	sts	0x428D, r26	; 0x80428d <_ZL12g_on_the_air+0x2>
    119c:	b0 93 8e 42 	sts	0x428E, r27	; 0x80428e <_ZL12g_on_the_air+0x3>
    11a0:	80 91 0e 40 	lds	r24, 0x400E	; 0x80400e <g_on_air_seconds>
    11a4:	90 91 0f 40 	lds	r25, 0x400F	; 0x80400f <g_on_air_seconds+0x1>
    11a8:	20 91 bf 42 	lds	r18, 0x42BF	; 0x8042bf <g_time_needed_for_ID>
    11ac:	30 91 c0 42 	lds	r19, 0x42C0	; 0x8042c0 <g_time_needed_for_ID+0x1>
    11b0:	82 1b       	sub	r24, r18
    11b2:	93 0b       	sbc	r25, r19
    11b4:	80 93 8f 42 	sts	0x428F, r24	; 0x80428f <_ZL26g_sendID_seconds_countdown>
    11b8:	90 93 90 42 	sts	0x4290, r25	; 0x804290 <_ZL26g_sendID_seconds_countdown+0x1>
    11bc:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_pattern_codespeed>
    11c0:	0e 94 71 14 	call	0x28e2	; 0x28e2 <_Z13throttleValueh>
    11c4:	80 93 08 40 	sts	0x4008, r24	; 0x804008 <_ZL15g_code_throttle>
    11c8:	90 93 09 40 	sts	0x4009, r25	; 0x804009 <_ZL15g_code_throttle+0x1>
    11cc:	81 e0       	ldi	r24, 0x01	; 1
    11ce:	8d 83       	std	Y+5, r24	; 0x05
    11d0:	40 e0       	ldi	r20, 0x00	; 0
    11d2:	50 e0       	ldi	r21, 0x00	; 0
    11d4:	be 01       	movw	r22, r28
    11d6:	6b 5f       	subi	r22, 0xFB	; 251
    11d8:	7f 4f       	sbci	r23, 0xFF	; 255
    11da:	85 e9       	ldi	r24, 0x95	; 149
    11dc:	92 e4       	ldi	r25, 0x42	; 66
    11de:	0e 94 8a 23 	call	0x4714	; 0x4714 <_Z9makeMorsePcPhS0_>
    11e2:	81 e0       	ldi	r24, 0x01	; 1
    11e4:	80 93 cc 42 	sts	0x42CC, r24	; 0x8042cc <g_event_commenced>
    11e8:	80 91 92 42 	lds	r24, 0x4292	; 0x804292 <_ZL19g_wifi_enable_delay>
    11ec:	88 23       	and	r24, r24
    11ee:	e1 f0       	breq	.+56     	; 0x1228 <__vector_41+0x6dc>
    11f0:	80 91 92 42 	lds	r24, 0x4292	; 0x804292 <_ZL19g_wifi_enable_delay>
    11f4:	81 50       	subi	r24, 0x01	; 1
    11f6:	80 93 92 42 	sts	0x4292, r24	; 0x804292 <_ZL19g_wifi_enable_delay>
    11fa:	80 91 92 42 	lds	r24, 0x4292	; 0x804292 <_ZL19g_wifi_enable_delay>
    11fe:	85 30       	cpi	r24, 0x05	; 5
    1200:	39 f4       	brne	.+14     	; 0x1210 <__vector_41+0x6c4>
    1202:	81 e0       	ldi	r24, 0x01	; 1
    1204:	0e 94 52 18 	call	0x30a4	; 0x30a4 <_Z10wifi_powerb>
    1208:	80 e0       	ldi	r24, 0x00	; 0
    120a:	0e 94 5c 18 	call	0x30b8	; 0x30b8 <_Z10wifi_resetb>
    120e:	5f c0       	rjmp	.+190    	; 0x12ce <__vector_41+0x782>
    1210:	80 91 92 42 	lds	r24, 0x4292	; 0x804292 <_ZL19g_wifi_enable_delay>
    1214:	81 11       	cpse	r24, r1
    1216:	5b c0       	rjmp	.+182    	; 0x12ce <__vector_41+0x782>
    1218:	46 e0       	ldi	r20, 0x06	; 6
    121a:	60 e8       	ldi	r22, 0x80	; 128
    121c:	75 e2       	ldi	r23, 0x25	; 37
    121e:	80 e0       	ldi	r24, 0x00	; 0
    1220:	90 e0       	ldi	r25, 0x00	; 0
    1222:	0e 94 84 21 	call	0x4308	; 0x4308 <_Z12linkbus_initm14USART_Number_t>
    1226:	53 c0       	rjmp	.+166    	; 0x12ce <__vector_41+0x782>
    1228:	80 91 14 40 	lds	r24, 0x4014	; 0x804014 <g_update_timeout_seconds>
    122c:	90 91 15 40 	lds	r25, 0x4015	; 0x804015 <g_update_timeout_seconds+0x1>
    1230:	89 2b       	or	r24, r25
    1232:	71 f0       	breq	.+28     	; 0x1250 <__vector_41+0x704>
    1234:	80 91 93 42 	lds	r24, 0x4293	; 0x804293 <_ZL20g_shutting_down_wifi>
    1238:	81 11       	cpse	r24, r1
    123a:	0c c0       	rjmp	.+24     	; 0x1254 <__vector_41+0x708>
    123c:	80 91 cd 42 	lds	r24, 0x42CD	; 0x8042cd <g_check_for_next_event>
    1240:	81 11       	cpse	r24, r1
    1242:	0a c0       	rjmp	.+20     	; 0x1258 <__vector_41+0x70c>
    1244:	80 91 ce 42 	lds	r24, 0x42CE	; 0x8042ce <g_waiting_for_next_event>
    1248:	88 23       	and	r24, r24
    124a:	41 f0       	breq	.+16     	; 0x125c <__vector_41+0x710>
    124c:	80 e0       	ldi	r24, 0x00	; 0
    124e:	07 c0       	rjmp	.+14     	; 0x125e <__vector_41+0x712>
    1250:	81 e0       	ldi	r24, 0x01	; 1
    1252:	05 c0       	rjmp	.+10     	; 0x125e <__vector_41+0x712>
    1254:	81 e0       	ldi	r24, 0x01	; 1
    1256:	03 c0       	rjmp	.+6      	; 0x125e <__vector_41+0x712>
    1258:	80 e0       	ldi	r24, 0x00	; 0
    125a:	01 c0       	rjmp	.+2      	; 0x125e <__vector_41+0x712>
    125c:	81 e0       	ldi	r24, 0x01	; 1
    125e:	88 23       	and	r24, r24
    1260:	79 f1       	breq	.+94     	; 0x12c0 <__vector_41+0x774>
    1262:	80 91 0a 40 	lds	r24, 0x400A	; 0x80400a <_ZL23g_WiFi_shutdown_seconds>
    1266:	88 23       	and	r24, r24
    1268:	59 f1       	breq	.+86     	; 0x12c0 <__vector_41+0x774>
    126a:	80 91 0a 40 	lds	r24, 0x400A	; 0x80400a <_ZL23g_WiFi_shutdown_seconds>
    126e:	81 50       	subi	r24, 0x01	; 1
    1270:	80 93 0a 40 	sts	0x400A, r24	; 0x80400a <_ZL23g_WiFi_shutdown_seconds>
    1274:	80 91 0a 40 	lds	r24, 0x400A	; 0x80400a <_ZL23g_WiFi_shutdown_seconds>
    1278:	81 11       	cpse	r24, r1
    127a:	22 c0       	rjmp	.+68     	; 0x12c0 <__vector_41+0x774>
    127c:	81 e0       	ldi	r24, 0x01	; 1
    127e:	0e 94 5c 18 	call	0x30b8	; 0x30b8 <_Z10wifi_resetb>
    1282:	80 e0       	ldi	r24, 0x00	; 0
    1284:	0e 94 52 18 	call	0x30a4	; 0x30a4 <_Z10wifi_powerb>
    1288:	10 92 93 42 	sts	0x4293, r1	; 0x804293 <_ZL20g_shutting_down_wifi>
    128c:	80 91 cb 42 	lds	r24, 0x42CB	; 0x8042cb <g_event_enabled>
    1290:	81 11       	cpse	r24, r1
    1292:	12 c0       	rjmp	.+36     	; 0x12b8 <__vector_41+0x76c>
    1294:	84 e0       	ldi	r24, 0x04	; 4
    1296:	80 93 94 42 	sts	0x4294, r24	; 0x804294 <_ZL11g_sleepType>
    129a:	81 e0       	ldi	r24, 0x01	; 1
    129c:	80 93 cf 42 	sts	0x42CF, r24	; 0x8042cf <_ZL13g_go_to_sleep>
    12a0:	8f ef       	ldi	r24, 0xFF	; 255
    12a2:	9f ef       	ldi	r25, 0xFF	; 255
    12a4:	dc 01       	movw	r26, r24
    12a6:	80 93 18 40 	sts	0x4018, r24	; 0x804018 <_ZL18g_seconds_to_sleep>
    12aa:	90 93 19 40 	sts	0x4019, r25	; 0x804019 <_ZL18g_seconds_to_sleep+0x1>
    12ae:	a0 93 1a 40 	sts	0x401A, r26	; 0x80401a <_ZL18g_seconds_to_sleep+0x2>
    12b2:	b0 93 1b 40 	sts	0x401B, r27	; 0x80401b <_ZL18g_seconds_to_sleep+0x3>
    12b6:	02 c0       	rjmp	.+4      	; 0x12bc <__vector_41+0x770>
    12b8:	80 91 94 42 	lds	r24, 0x4294	; 0x804294 <_ZL11g_sleepType>
    12bc:	10 92 0b 40 	sts	0x400B, r1	; 0x80400b <_ZL13g_wifi_active>
    12c0:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <_ZL13g_wifi_active>
    12c4:	88 23       	and	r24, r24
    12c6:	19 f0       	breq	.+6      	; 0x12ce <__vector_41+0x782>
    12c8:	81 e0       	ldi	r24, 0x01	; 1
    12ca:	80 93 91 42 	sts	0x4291, r24	; 0x804291 <_ZL16g_report_seconds>
    12ce:	81 e0       	ldi	r24, 0x01	; 1
    12d0:	80 93 36 0b 	sts	0x0B36, r24	; 0x800b36 <__TEXT_REGION_LENGTH__+0x7e0b36>
    12d4:	25 96       	adiw	r28, 0x05	; 5
    12d6:	cd bf       	out	0x3d, r28	; 61
    12d8:	de bf       	out	0x3e, r29	; 62
    12da:	df 91       	pop	r29
    12dc:	cf 91       	pop	r28
    12de:	ff 91       	pop	r31
    12e0:	ef 91       	pop	r30
    12e2:	bf 91       	pop	r27
    12e4:	af 91       	pop	r26
    12e6:	9f 91       	pop	r25
    12e8:	8f 91       	pop	r24
    12ea:	7f 91       	pop	r23
    12ec:	6f 91       	pop	r22
    12ee:	5f 91       	pop	r21
    12f0:	4f 91       	pop	r20
    12f2:	3f 91       	pop	r19
    12f4:	2f 91       	pop	r18
    12f6:	0f 90       	pop	r0
    12f8:	0b be       	out	0x3b, r0	; 59
    12fa:	0f 90       	pop	r0
    12fc:	0f be       	out	0x3f, r0	; 63
    12fe:	0f 90       	pop	r0
    1300:	1f 90       	pop	r1
    1302:	18 95       	reti

00001304 <__vector_12>:
    1304:	1f 92       	push	r1
    1306:	0f 92       	push	r0
    1308:	0f b6       	in	r0, 0x3f	; 63
    130a:	0f 92       	push	r0
    130c:	11 24       	eor	r1, r1
    130e:	0b b6       	in	r0, 0x3b	; 59
    1310:	0f 92       	push	r0
    1312:	2f 93       	push	r18
    1314:	3f 93       	push	r19
    1316:	4f 93       	push	r20
    1318:	5f 93       	push	r21
    131a:	6f 93       	push	r22
    131c:	7f 93       	push	r23
    131e:	8f 93       	push	r24
    1320:	9f 93       	push	r25
    1322:	af 93       	push	r26
    1324:	bf 93       	push	r27
    1326:	ef 93       	push	r30
    1328:	ff 93       	push	r31
    132a:	cf 93       	push	r28
    132c:	df 93       	push	r29
    132e:	00 d0       	rcall	.+0      	; 0x1330 <__vector_12+0x2c>
    1330:	cd b7       	in	r28, 0x3d	; 61
    1332:	de b7       	in	r29, 0x3e	; 62
    1334:	80 91 06 0b 	lds	r24, 0x0B06	; 0x800b06 <__TEXT_REGION_LENGTH__+0x7e0b06>
    1338:	80 ff       	sbrs	r24, 0
    133a:	d1 c0       	rjmp	.+418    	; 0x14de <__vector_12+0x1da>
    133c:	80 91 20 40 	lds	r24, 0x4020	; 0x804020 <g_i2c0_timeout_ticks>
    1340:	90 91 21 40 	lds	r25, 0x4021	; 0x804021 <g_i2c0_timeout_ticks+0x1>
    1344:	89 2b       	or	r24, r25
    1346:	49 f0       	breq	.+18     	; 0x135a <__vector_12+0x56>
    1348:	80 91 20 40 	lds	r24, 0x4020	; 0x804020 <g_i2c0_timeout_ticks>
    134c:	90 91 21 40 	lds	r25, 0x4021	; 0x804021 <g_i2c0_timeout_ticks+0x1>
    1350:	01 97       	sbiw	r24, 0x01	; 1
    1352:	80 93 20 40 	sts	0x4020, r24	; 0x804020 <g_i2c0_timeout_ticks>
    1356:	90 93 21 40 	sts	0x4021, r25	; 0x804021 <g_i2c0_timeout_ticks+0x1>
    135a:	80 91 1e 40 	lds	r24, 0x401E	; 0x80401e <g_i2c1_timeout_ticks>
    135e:	90 91 1f 40 	lds	r25, 0x401F	; 0x80401f <g_i2c1_timeout_ticks+0x1>
    1362:	89 2b       	or	r24, r25
    1364:	49 f0       	breq	.+18     	; 0x1378 <__vector_12+0x74>
    1366:	80 91 1e 40 	lds	r24, 0x401E	; 0x80401e <g_i2c1_timeout_ticks>
    136a:	90 91 1f 40 	lds	r25, 0x401F	; 0x80401f <g_i2c1_timeout_ticks+0x1>
    136e:	01 97       	sbiw	r24, 0x01	; 1
    1370:	80 93 1e 40 	sts	0x401E, r24	; 0x80401e <g_i2c1_timeout_ticks>
    1374:	90 93 1f 40 	sts	0x401F, r25	; 0x80401f <g_i2c1_timeout_ticks+0x1>
    1378:	80 91 88 42 	lds	r24, 0x4288	; 0x804288 <_ZL21g_util_tick_countdown>
    137c:	90 91 89 42 	lds	r25, 0x4289	; 0x804289 <_ZL21g_util_tick_countdown+0x1>
    1380:	89 2b       	or	r24, r25
    1382:	49 f0       	breq	.+18     	; 0x1396 <__vector_12+0x92>
    1384:	80 91 88 42 	lds	r24, 0x4288	; 0x804288 <_ZL21g_util_tick_countdown>
    1388:	90 91 89 42 	lds	r25, 0x4289	; 0x804289 <_ZL21g_util_tick_countdown+0x1>
    138c:	01 97       	sbiw	r24, 0x01	; 1
    138e:	80 93 88 42 	sts	0x4288, r24	; 0x804288 <_ZL21g_util_tick_countdown>
    1392:	90 93 89 42 	sts	0x4289, r25	; 0x804289 <_ZL21g_util_tick_countdown+0x1>
    1396:	80 91 cb 42 	lds	r24, 0x42CB	; 0x8042cb <g_event_enabled>
    139a:	88 23       	and	r24, r24
    139c:	29 f0       	breq	.+10     	; 0x13a8 <__vector_12+0xa4>
    139e:	80 91 cc 42 	lds	r24, 0x42CC	; 0x8042cc <g_event_commenced>
    13a2:	81 11       	cpse	r24, r1
    13a4:	03 c0       	rjmp	.+6      	; 0x13ac <__vector_12+0xa8>
    13a6:	03 c0       	rjmp	.+6      	; 0x13ae <__vector_12+0xaa>
    13a8:	80 e0       	ldi	r24, 0x00	; 0
    13aa:	01 c0       	rjmp	.+2      	; 0x13ae <__vector_12+0xaa>
    13ac:	81 e0       	ldi	r24, 0x01	; 1
    13ae:	88 23       	and	r24, r24
    13b0:	09 f4       	brne	.+2      	; 0x13b4 <__vector_12+0xb0>
    13b2:	92 c0       	rjmp	.+292    	; 0x14d8 <__vector_12+0x1d4>
    13b4:	80 91 8b 42 	lds	r24, 0x428B	; 0x80428b <_ZL12g_on_the_air>
    13b8:	90 91 8c 42 	lds	r25, 0x428C	; 0x80428c <_ZL12g_on_the_air+0x1>
    13bc:	a0 91 8d 42 	lds	r26, 0x428D	; 0x80428d <_ZL12g_on_the_air+0x2>
    13c0:	b0 91 8e 42 	lds	r27, 0x428E	; 0x80428e <_ZL12g_on_the_air+0x3>
    13c4:	18 16       	cp	r1, r24
    13c6:	19 06       	cpc	r1, r25
    13c8:	1a 06       	cpc	r1, r26
    13ca:	1b 06       	cpc	r1, r27
    13cc:	0c f0       	brlt	.+2      	; 0x13d0 <__vector_12+0xcc>
    13ce:	66 c0       	rjmp	.+204    	; 0x149c <__vector_12+0x198>
    13d0:	80 91 f4 42 	lds	r24, 0x42F4	; 0x8042f4 <_ZZ11__vector_12E7codeInc>
    13d4:	90 91 f5 42 	lds	r25, 0x42F5	; 0x8042f5 <_ZZ11__vector_12E7codeInc+0x1>
    13d8:	00 97       	sbiw	r24, 0x00	; 0
    13da:	09 f4       	brne	.+2      	; 0x13de <__vector_12+0xda>
    13dc:	47 c0       	rjmp	.+142    	; 0x146c <__vector_12+0x168>
    13de:	01 97       	sbiw	r24, 0x01	; 1
    13e0:	80 93 f4 42 	sts	0x42F4, r24	; 0x8042f4 <_ZZ11__vector_12E7codeInc>
    13e4:	90 93 f5 42 	sts	0x42F5, r25	; 0x8042f5 <_ZZ11__vector_12E7codeInc+0x1>
    13e8:	89 2b       	or	r24, r25
    13ea:	09 f0       	breq	.+2      	; 0x13ee <__vector_12+0xea>
    13ec:	75 c0       	rjmp	.+234    	; 0x14d8 <__vector_12+0x1d4>
    13ee:	ae 01       	movw	r20, r28
    13f0:	4f 5f       	subi	r20, 0xFF	; 255
    13f2:	5f 4f       	sbci	r21, 0xFF	; 255
    13f4:	be 01       	movw	r22, r28
    13f6:	6e 5f       	subi	r22, 0xFE	; 254
    13f8:	7f 4f       	sbci	r23, 0xFF	; 255
    13fa:	80 e0       	ldi	r24, 0x00	; 0
    13fc:	90 e0       	ldi	r25, 0x00	; 0
    13fe:	0e 94 8a 23 	call	0x4714	; 0x4714 <_Z9makeMorsePcPhS0_>
    1402:	80 93 f6 42 	sts	0x42F6, r24	; 0x8042f6 <_ZZ11__vector_12E3key>
    1406:	8a 81       	ldd	r24, Y+2	; 0x02
    1408:	81 11       	cpse	r24, r1
    140a:	25 c0       	rjmp	.+74     	; 0x1456 <__vector_12+0x152>
    140c:	89 81       	ldd	r24, Y+1	; 0x01
    140e:	88 23       	and	r24, r24
    1410:	11 f1       	breq	.+68     	; 0x1456 <__vector_12+0x152>
    1412:	8d ef       	ldi	r24, 0xFD	; 253
    1414:	80 93 87 42 	sts	0x4287, r24	; 0x804287 <_ZL18g_last_status_code>
    1418:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_pattern_codespeed>
    141c:	0e 94 71 14 	call	0x28e2	; 0x28e2 <_Z13throttleValueh>
    1420:	80 93 08 40 	sts	0x4008, r24	; 0x804008 <_ZL15g_code_throttle>
    1424:	90 93 09 40 	sts	0x4009, r25	; 0x804009 <_ZL15g_code_throttle+0x1>
    1428:	81 e0       	ldi	r24, 0x01	; 1
    142a:	8a 83       	std	Y+2, r24	; 0x02
    142c:	40 e0       	ldi	r20, 0x00	; 0
    142e:	50 e0       	ldi	r21, 0x00	; 0
    1430:	be 01       	movw	r22, r28
    1432:	6e 5f       	subi	r22, 0xFE	; 254
    1434:	7f 4f       	sbci	r23, 0xFF	; 255
    1436:	85 e9       	ldi	r24, 0x95	; 149
    1438:	92 e4       	ldi	r25, 0x42	; 66
    143a:	0e 94 8a 23 	call	0x4714	; 0x4714 <_Z9makeMorsePcPhS0_>
    143e:	ae 01       	movw	r20, r28
    1440:	4f 5f       	subi	r20, 0xFF	; 255
    1442:	5f 4f       	sbci	r21, 0xFF	; 255
    1444:	be 01       	movw	r22, r28
    1446:	6e 5f       	subi	r22, 0xFE	; 254
    1448:	7f 4f       	sbci	r23, 0xFF	; 255
    144a:	80 e0       	ldi	r24, 0x00	; 0
    144c:	90 e0       	ldi	r25, 0x00	; 0
    144e:	0e 94 8a 23 	call	0x4714	; 0x4714 <_Z9makeMorsePcPhS0_>
    1452:	80 93 f6 42 	sts	0x42F6, r24	; 0x8042f6 <_ZZ11__vector_12E3key>
    1456:	80 91 f6 42 	lds	r24, 0x42F6	; 0x8042f6 <_ZZ11__vector_12E3key>
    145a:	88 23       	and	r24, r24
    145c:	e9 f1       	breq	.+122    	; 0x14d8 <__vector_12+0x1d4>
    145e:	81 e0       	ldi	r24, 0x01	; 1
    1460:	0e 94 b3 2d 	call	0x5b66	; 0x5b66 <_Z18powerToTransmitterh>
    1464:	89 b1       	in	r24, 0x09	; 9
    1466:	8f 7b       	andi	r24, 0xBF	; 191
    1468:	89 b9       	out	0x09, r24	; 9
    146a:	36 c0       	rjmp	.+108    	; 0x14d8 <__vector_12+0x1d4>
    146c:	80 91 f6 42 	lds	r24, 0x42F6	; 0x8042f6 <_ZZ11__vector_12E3key>
    1470:	0e 94 b5 2d 	call	0x5b6a	; 0x5b6a <_Z14keyTransmitterh>
    1474:	80 91 f6 42 	lds	r24, 0x42F6	; 0x8042f6 <_ZZ11__vector_12E3key>
    1478:	81 11       	cpse	r24, r1
    147a:	04 c0       	rjmp	.+8      	; 0x1484 <__vector_12+0x180>
    147c:	89 b1       	in	r24, 0x09	; 9
    147e:	80 64       	ori	r24, 0x40	; 64
    1480:	89 b9       	out	0x09, r24	; 9
    1482:	03 c0       	rjmp	.+6      	; 0x148a <__vector_12+0x186>
    1484:	89 b1       	in	r24, 0x09	; 9
    1486:	8f 7b       	andi	r24, 0xBF	; 191
    1488:	89 b9       	out	0x09, r24	; 9
    148a:	80 91 08 40 	lds	r24, 0x4008	; 0x804008 <_ZL15g_code_throttle>
    148e:	90 91 09 40 	lds	r25, 0x4009	; 0x804009 <_ZL15g_code_throttle+0x1>
    1492:	80 93 f4 42 	sts	0x42F4, r24	; 0x8042f4 <_ZZ11__vector_12E7codeInc>
    1496:	90 93 f5 42 	sts	0x42F5, r25	; 0x8042f5 <_ZZ11__vector_12E7codeInc+0x1>
    149a:	1e c0       	rjmp	.+60     	; 0x14d8 <__vector_12+0x1d4>
    149c:	80 91 8b 42 	lds	r24, 0x428B	; 0x80428b <_ZL12g_on_the_air>
    14a0:	90 91 8c 42 	lds	r25, 0x428C	; 0x80428c <_ZL12g_on_the_air+0x1>
    14a4:	a0 91 8d 42 	lds	r26, 0x428D	; 0x80428d <_ZL12g_on_the_air+0x2>
    14a8:	b0 91 8e 42 	lds	r27, 0x428E	; 0x80428e <_ZL12g_on_the_air+0x3>
    14ac:	89 2b       	or	r24, r25
    14ae:	8a 2b       	or	r24, r26
    14b0:	8b 2b       	or	r24, r27
    14b2:	91 f4       	brne	.+36     	; 0x14d8 <__vector_12+0x1d4>
    14b4:	80 91 f6 42 	lds	r24, 0x42F6	; 0x8042f6 <_ZZ11__vector_12E3key>
    14b8:	88 23       	and	r24, r24
    14ba:	71 f0       	breq	.+28     	; 0x14d8 <__vector_12+0x1d4>
    14bc:	10 92 f6 42 	sts	0x42F6, r1	; 0x8042f6 <_ZZ11__vector_12E3key>
    14c0:	80 e0       	ldi	r24, 0x00	; 0
    14c2:	0e 94 b5 2d 	call	0x5b6a	; 0x5b6a <_Z14keyTransmitterh>
    14c6:	89 b1       	in	r24, 0x09	; 9
    14c8:	80 64       	ori	r24, 0x40	; 64
    14ca:	89 b9       	out	0x09, r24	; 9
    14cc:	80 e0       	ldi	r24, 0x00	; 0
    14ce:	0e 94 b3 2d 	call	0x5b66	; 0x5b66 <_Z18powerToTransmitterh>
    14d2:	8e ef       	ldi	r24, 0xFE	; 254
    14d4:	80 93 87 42 	sts	0x4287, r24	; 0x804287 <_ZL18g_last_status_code>
    14d8:	81 e0       	ldi	r24, 0x01	; 1
    14da:	80 93 06 0b 	sts	0x0B06, r24	; 0x800b06 <__TEXT_REGION_LENGTH__+0x7e0b06>
    14de:	0f 90       	pop	r0
    14e0:	0f 90       	pop	r0
    14e2:	df 91       	pop	r29
    14e4:	cf 91       	pop	r28
    14e6:	ff 91       	pop	r31
    14e8:	ef 91       	pop	r30
    14ea:	bf 91       	pop	r27
    14ec:	af 91       	pop	r26
    14ee:	9f 91       	pop	r25
    14f0:	8f 91       	pop	r24
    14f2:	7f 91       	pop	r23
    14f4:	6f 91       	pop	r22
    14f6:	5f 91       	pop	r21
    14f8:	4f 91       	pop	r20
    14fa:	3f 91       	pop	r19
    14fc:	2f 91       	pop	r18
    14fe:	0f 90       	pop	r0
    1500:	0b be       	out	0x3b, r0	; 59
    1502:	0f 90       	pop	r0
    1504:	0f be       	out	0x3f, r0	; 63
    1506:	0f 90       	pop	r0
    1508:	1f 90       	pop	r1
    150a:	18 95       	reti

0000150c <main>:
    150c:	0e 94 88 01 	call	0x310	; 0x310 <atmel_start_init>
    1510:	89 b1       	in	r24, 0x09	; 9
    1512:	80 64       	ori	r24, 0x40	; 64
    1514:	89 b9       	out	0x09, r24	; 9
    1516:	8f ed       	ldi	r24, 0xDF	; 223
    1518:	92 e4       	ldi	r25, 0x42	; 66
    151a:	0e 94 78 1d 	call	0x3af0	; 0x3af0 <_ZN13EepromManager20initializeEEPROMVarsEv>
    151e:	8f ed       	ldi	r24, 0xDF	; 223
    1520:	92 e4       	ldi	r25, 0x42	; 66
    1522:	0e 94 cc 1c 	call	0x3998	; 0x3998 <_ZN13EepromManager11readNonVolsEv>
    1526:	0e 94 33 26 	call	0x4c66	; 0x4c66 <sb_send_NewLine>
    152a:	87 e3       	ldi	r24, 0x37	; 55
    152c:	90 e4       	ldi	r25, 0x40	; 64
    152e:	0e 94 48 26 	call	0x4c90	; 0x4c90 <sb_send_string>
    1532:	84 e5       	ldi	r24, 0x54	; 84
    1534:	90 e4       	ldi	r25, 0x40	; 64
    1536:	9f 93       	push	r25
    1538:	8f 93       	push	r24
    153a:	88 e5       	ldi	r24, 0x58	; 88
    153c:	90 e4       	ldi	r25, 0x40	; 64
    153e:	9f 93       	push	r25
    1540:	8f 93       	push	r24
    1542:	81 e7       	ldi	r24, 0x71	; 113
    1544:	92 e4       	ldi	r25, 0x42	; 66
    1546:	9f 93       	push	r25
    1548:	8f 93       	push	r24
    154a:	0e 94 91 34 	call	0x6922	; 0x6922 <sprintf>
    154e:	81 e7       	ldi	r24, 0x71	; 113
    1550:	92 e4       	ldi	r25, 0x42	; 66
    1552:	0e 94 48 26 	call	0x4c90	; 0x4c90 <sb_send_string>
    1556:	85 e6       	ldi	r24, 0x65	; 101
    1558:	90 e4       	ldi	r25, 0x40	; 64
    155a:	0e 94 48 26 	call	0x4c90	; 0x4c90 <sb_send_string>
    155e:	0e 94 28 26 	call	0x4c50	; 0x4c50 <sb_send_NewPrompt>
    1562:	81 e0       	ldi	r24, 0x01	; 1
    1564:	0e 94 dc 17 	call	0x2fb8	; 0x2fb8 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t>
    1568:	0f 90       	pop	r0
    156a:	0f 90       	pop	r0
    156c:	0f 90       	pop	r0
    156e:	0f 90       	pop	r0
    1570:	0f 90       	pop	r0
    1572:	0f 90       	pop	r0
    1574:	6a ef       	ldi	r22, 0xFA	; 250
    1576:	70 e0       	ldi	r23, 0x00	; 0
    1578:	80 e0       	ldi	r24, 0x00	; 0
    157a:	90 e0       	ldi	r25, 0x00	; 0
    157c:	0e 94 b6 2c 	call	0x596c	; 0x596c <util_delay_ms>
    1580:	88 23       	and	r24, r24
    1582:	c1 f3       	breq	.-16     	; 0x1574 <main+0x68>
    1584:	0e 94 ba 0d 	call	0x1b74	; 0x1b74 <_Z17handleLinkBusMsgsv>
    1588:	0e 94 c7 0a 	call	0x158e	; 0x158e <_Z19handleSerialBusMsgsv>
    158c:	f3 cf       	rjmp	.-26     	; 0x1574 <main+0x68>

0000158e <_Z19handleSerialBusMsgsv>:
    158e:	cf 93       	push	r28
    1590:	df 93       	push	r29
    1592:	cd b7       	in	r28, 0x3d	; 61
    1594:	de b7       	in	r29, 0x3e	; 62
    1596:	64 97       	sbiw	r28, 0x14	; 20
    1598:	cd bf       	out	0x3d, r28	; 61
    159a:	de bf       	out	0x3e, r29	; 62
    159c:	0e 94 5e 25 	call	0x4abc	; 0x4abc <nextFullSBRxBuffer>
    15a0:	8e 83       	std	Y+6, r24	; 0x06
    15a2:	9f 83       	std	Y+7, r25	; 0x07
    15a4:	21 e0       	ldi	r18, 0x01	; 1
    15a6:	8e 81       	ldd	r24, Y+6	; 0x06
    15a8:	9f 81       	ldd	r25, Y+7	; 0x07
    15aa:	89 2b       	or	r24, r25
    15ac:	09 f4       	brne	.+2      	; 0x15b0 <_Z19handleSerialBusMsgsv+0x22>
    15ae:	20 e0       	ldi	r18, 0x00	; 0
    15b0:	22 23       	and	r18, r18
    15b2:	09 f4       	brne	.+2      	; 0x15b6 <_Z19handleSerialBusMsgsv+0x28>
    15b4:	d8 c2       	rjmp	.+1456   	; 0x1b66 <_Z19handleSerialBusMsgsv+0x5d8>
    15b6:	8e 81       	ldd	r24, Y+6	; 0x06
    15b8:	9f 81       	ldd	r25, Y+7	; 0x07
    15ba:	fc 01       	movw	r30, r24
    15bc:	81 81       	ldd	r24, Z+1	; 0x01
    15be:	92 81       	ldd	r25, Z+2	; 0x02
    15c0:	88 87       	std	Y+8, r24	; 0x08
    15c2:	99 87       	std	Y+9, r25	; 0x09
    15c4:	88 85       	ldd	r24, Y+8	; 0x08
    15c6:	99 85       	ldd	r25, Y+9	; 0x09
    15c8:	8a 3e       	cpi	r24, 0xEA	; 234
    15ca:	f2 e2       	ldi	r31, 0x22	; 34
    15cc:	9f 07       	cpc	r25, r31
    15ce:	09 f4       	brne	.+2      	; 0x15d2 <_Z19handleSerialBusMsgsv+0x44>
    15d0:	56 c2       	rjmp	.+1196   	; 0x1a7e <_Z19handleSerialBusMsgsv+0x4f0>
    15d2:	8b 3e       	cpi	r24, 0xEB	; 235
    15d4:	22 e2       	ldi	r18, 0x22	; 34
    15d6:	92 07       	cpc	r25, r18
    15d8:	70 f4       	brcc	.+28     	; 0x15f6 <_Z19handleSerialBusMsgsv+0x68>
    15da:	8f 36       	cpi	r24, 0x6F	; 111
    15dc:	ed e1       	ldi	r30, 0x1D	; 29
    15de:	9e 07       	cpc	r25, r30
    15e0:	09 f4       	brne	.+2      	; 0x15e4 <_Z19handleSerialBusMsgsv+0x56>
    15e2:	6f c2       	rjmp	.+1246   	; 0x1ac2 <_Z19handleSerialBusMsgsv+0x534>
    15e4:	86 3c       	cpi	r24, 0xC6	; 198
    15e6:	fe e1       	ldi	r31, 0x1E	; 30
    15e8:	9f 07       	cpc	r25, r31
    15ea:	a1 f0       	breq	.+40     	; 0x1614 <_Z19handleSerialBusMsgsv+0x86>
    15ec:	8e 31       	cpi	r24, 0x1E	; 30
    15ee:	93 40       	sbci	r25, 0x03	; 3
    15f0:	09 f4       	brne	.+2      	; 0x15f4 <_Z19handleSerialBusMsgsv+0x66>
    15f2:	33 c1       	rjmp	.+614    	; 0x185a <_Z19handleSerialBusMsgsv+0x2cc>
    15f4:	a6 c2       	rjmp	.+1356   	; 0x1b42 <_Z19handleSerialBusMsgsv+0x5b4>
    15f6:	84 33       	cpi	r24, 0x34	; 52
    15f8:	e4 e2       	ldi	r30, 0x24	; 36
    15fa:	9e 07       	cpc	r25, r30
    15fc:	09 f4       	brne	.+2      	; 0x1600 <_Z19handleSerialBusMsgsv+0x72>
    15fe:	01 c1       	rjmp	.+514    	; 0x1802 <_Z19handleSerialBusMsgsv+0x274>
    1600:	85 3c       	cpi	r24, 0xC5	; 197
    1602:	f4 e2       	ldi	r31, 0x24	; 36
    1604:	9f 07       	cpc	r25, r31
    1606:	09 f4       	brne	.+2      	; 0x160a <_Z19handleSerialBusMsgsv+0x7c>
    1608:	88 c2       	rjmp	.+1296   	; 0x1b1a <_Z19handleSerialBusMsgsv+0x58c>
    160a:	82 37       	cpi	r24, 0x72	; 114
    160c:	93 42       	sbci	r25, 0x23	; 35
    160e:	09 f4       	brne	.+2      	; 0x1612 <_Z19handleSerialBusMsgsv+0x84>
    1610:	b2 c1       	rjmp	.+868    	; 0x1976 <_Z19handleSerialBusMsgsv+0x3e8>
    1612:	97 c2       	rjmp	.+1326   	; 0x1b42 <_Z19handleSerialBusMsgsv+0x5b4>
    1614:	8e 81       	ldd	r24, Y+6	; 0x06
    1616:	9f 81       	ldd	r25, Y+7	; 0x07
    1618:	fc 01       	movw	r30, r24
    161a:	83 81       	ldd	r24, Z+3	; 0x03
    161c:	88 2f       	mov	r24, r24
    161e:	90 e0       	ldi	r25, 0x00	; 0
    1620:	89 83       	std	Y+1, r24	; 0x01
    1622:	9a 83       	std	Y+2, r25	; 0x02
    1624:	89 81       	ldd	r24, Y+1	; 0x01
    1626:	9a 81       	ldd	r25, Y+2	; 0x02
    1628:	89 2b       	or	r24, r25
    162a:	09 f4       	brne	.+2      	; 0x162e <_Z19handleSerialBusMsgsv+0xa0>
    162c:	c8 c0       	rjmp	.+400    	; 0x17be <_Z19handleSerialBusMsgsv+0x230>
    162e:	89 81       	ldd	r24, Y+1	; 0x01
    1630:	9a 81       	ldd	r25, Y+2	; 0x02
    1632:	82 34       	cpi	r24, 0x42	; 66
    1634:	91 05       	cpc	r25, r1
    1636:	19 f4       	brne	.+6      	; 0x163e <_Z19handleSerialBusMsgsv+0xb0>
    1638:	19 82       	std	Y+1, r1	; 0x01
    163a:	1a 82       	std	Y+2, r1	; 0x02
    163c:	ac c0       	rjmp	.+344    	; 0x1796 <_Z19handleSerialBusMsgsv+0x208>
    163e:	89 81       	ldd	r24, Y+1	; 0x01
    1640:	9a 81       	ldd	r25, Y+2	; 0x02
    1642:	86 34       	cpi	r24, 0x46	; 70
    1644:	91 05       	cpc	r25, r1
    1646:	29 f4       	brne	.+10     	; 0x1652 <_Z19handleSerialBusMsgsv+0xc4>
    1648:	86 e0       	ldi	r24, 0x06	; 6
    164a:	90 e0       	ldi	r25, 0x00	; 0
    164c:	89 83       	std	Y+1, r24	; 0x01
    164e:	9a 83       	std	Y+2, r25	; 0x02
    1650:	a2 c0       	rjmp	.+324    	; 0x1796 <_Z19handleSerialBusMsgsv+0x208>
    1652:	89 81       	ldd	r24, Y+1	; 0x01
    1654:	9a 81       	ldd	r25, Y+2	; 0x02
    1656:	83 34       	cpi	r24, 0x43	; 67
    1658:	91 05       	cpc	r25, r1
    165a:	b9 f5       	brne	.+110    	; 0x16ca <_Z19handleSerialBusMsgsv+0x13c>
    165c:	8e 81       	ldd	r24, Y+6	; 0x06
    165e:	9f 81       	ldd	r25, Y+7	; 0x07
    1660:	fc 01       	movw	r30, r24
    1662:	87 89       	ldd	r24, Z+23	; 0x17
    1664:	8b 83       	std	Y+3, r24	; 0x03
    1666:	8e 81       	ldd	r24, Y+6	; 0x06
    1668:	9f 81       	ldd	r25, Y+7	; 0x07
    166a:	fc 01       	movw	r30, r24
    166c:	10 8e       	std	Z+24, r1	; 0x18
    166e:	8b 81       	ldd	r24, Y+3	; 0x03
    1670:	82 34       	cpi	r24, 0x42	; 66
    1672:	11 f4       	brne	.+4      	; 0x1678 <_Z19handleSerialBusMsgsv+0xea>
    1674:	80 e3       	ldi	r24, 0x30	; 48
    1676:	8b 83       	std	Y+3, r24	; 0x03
    1678:	8b 81       	ldd	r24, Y+3	; 0x03
    167a:	88 2f       	mov	r24, r24
    167c:	90 e0       	ldi	r25, 0x00	; 0
    167e:	c0 97       	sbiw	r24, 0x30	; 48
    1680:	0a 97       	sbiw	r24, 0x0a	; 10
    1682:	08 f0       	brcs	.+2      	; 0x1686 <_Z19handleSerialBusMsgsv+0xf8>
    1684:	88 c0       	rjmp	.+272    	; 0x1796 <_Z19handleSerialBusMsgsv+0x208>
    1686:	8e 81       	ldd	r24, Y+6	; 0x06
    1688:	9f 81       	ldd	r25, Y+7	; 0x07
    168a:	47 96       	adiw	r24, 0x17	; 23
    168c:	0e 94 fd 33 	call	0x67fa	; 0x67fa <atoi>
    1690:	8a 87       	std	Y+10, r24	; 0x0a
    1692:	9b 87       	std	Y+11, r25	; 0x0b
    1694:	1c 86       	std	Y+12, r1	; 0x0c
    1696:	85 e0       	ldi	r24, 0x05	; 5
    1698:	8d 87       	std	Y+13, r24	; 0x0d
    169a:	8d 85       	ldd	r24, Y+13	; 0x0d
    169c:	28 2f       	mov	r18, r24
    169e:	30 e0       	ldi	r19, 0x00	; 0
    16a0:	8a 85       	ldd	r24, Y+10	; 0x0a
    16a2:	9b 85       	ldd	r25, Y+11	; 0x0b
    16a4:	28 17       	cp	r18, r24
    16a6:	39 07       	cpc	r19, r25
    16a8:	24 f4       	brge	.+8      	; 0x16b2 <_Z19handleSerialBusMsgsv+0x124>
    16aa:	8d 85       	ldd	r24, Y+13	; 0x0d
    16ac:	88 2f       	mov	r24, r24
    16ae:	90 e0       	ldi	r25, 0x00	; 0
    16b0:	09 c0       	rjmp	.+18     	; 0x16c4 <_Z19handleSerialBusMsgsv+0x136>
    16b2:	8c 85       	ldd	r24, Y+12	; 0x0c
    16b4:	88 2f       	mov	r24, r24
    16b6:	90 e0       	ldi	r25, 0x00	; 0
    16b8:	2a 85       	ldd	r18, Y+10	; 0x0a
    16ba:	3b 85       	ldd	r19, Y+11	; 0x0b
    16bc:	82 17       	cp	r24, r18
    16be:	93 07       	cpc	r25, r19
    16c0:	0c f4       	brge	.+2      	; 0x16c4 <_Z19handleSerialBusMsgsv+0x136>
    16c2:	c9 01       	movw	r24, r18
    16c4:	89 83       	std	Y+1, r24	; 0x01
    16c6:	9a 83       	std	Y+2, r25	; 0x02
    16c8:	66 c0       	rjmp	.+204    	; 0x1796 <_Z19handleSerialBusMsgsv+0x208>
    16ca:	89 81       	ldd	r24, Y+1	; 0x01
    16cc:	9a 81       	ldd	r25, Y+2	; 0x02
    16ce:	83 35       	cpi	r24, 0x53	; 83
    16d0:	91 05       	cpc	r25, r1
    16d2:	09 f0       	breq	.+2      	; 0x16d6 <_Z19handleSerialBusMsgsv+0x148>
    16d4:	59 c0       	rjmp	.+178    	; 0x1788 <_Z19handleSerialBusMsgsv+0x1fa>
    16d6:	1c 82       	std	Y+4, r1	; 0x04
    16d8:	8e 81       	ldd	r24, Y+6	; 0x06
    16da:	9f 81       	ldd	r25, Y+7	; 0x07
    16dc:	fc 01       	movw	r30, r24
    16de:	87 89       	ldd	r24, Z+23	; 0x17
    16e0:	8e 87       	std	Y+14, r24	; 0x0e
    16e2:	8e 81       	ldd	r24, Y+6	; 0x06
    16e4:	9f 81       	ldd	r25, Y+7	; 0x07
    16e6:	fc 01       	movw	r30, r24
    16e8:	80 8d       	ldd	r24, Z+24	; 0x18
    16ea:	8f 87       	std	Y+15, r24	; 0x0f
    16ec:	8e 81       	ldd	r24, Y+6	; 0x06
    16ee:	9f 81       	ldd	r25, Y+7	; 0x07
    16f0:	fc 01       	movw	r30, r24
    16f2:	11 8e       	std	Z+25, r1	; 0x19
    16f4:	8e 85       	ldd	r24, Y+14	; 0x0e
    16f6:	82 34       	cpi	r24, 0x42	; 66
    16f8:	11 f4       	brne	.+4      	; 0x16fe <_Z19handleSerialBusMsgsv+0x170>
    16fa:	1c 82       	std	Y+4, r1	; 0x04
    16fc:	36 c0       	rjmp	.+108    	; 0x176a <_Z19handleSerialBusMsgsv+0x1dc>
    16fe:	8e 85       	ldd	r24, Y+14	; 0x0e
    1700:	86 34       	cpi	r24, 0x46	; 70
    1702:	51 f4       	brne	.+20     	; 0x1718 <_Z19handleSerialBusMsgsv+0x18a>
    1704:	8f 85       	ldd	r24, Y+15	; 0x0f
    1706:	81 33       	cpi	r24, 0x31	; 49
    1708:	80 f1       	brcs	.+96     	; 0x176a <_Z19handleSerialBusMsgsv+0x1dc>
    170a:	8f 85       	ldd	r24, Y+15	; 0x0f
    170c:	86 33       	cpi	r24, 0x36	; 54
    170e:	68 f5       	brcc	.+90     	; 0x176a <_Z19handleSerialBusMsgsv+0x1dc>
    1710:	8f 85       	ldd	r24, Y+15	; 0x0f
    1712:	84 52       	subi	r24, 0x24	; 36
    1714:	8c 83       	std	Y+4, r24	; 0x04
    1716:	29 c0       	rjmp	.+82     	; 0x176a <_Z19handleSerialBusMsgsv+0x1dc>
    1718:	8e 85       	ldd	r24, Y+14	; 0x0e
    171a:	83 35       	cpi	r24, 0x53	; 83
    171c:	69 f4       	brne	.+26     	; 0x1738 <_Z19handleSerialBusMsgsv+0x1aa>
    171e:	8f 85       	ldd	r24, Y+15	; 0x0f
    1720:	81 33       	cpi	r24, 0x31	; 49
    1722:	38 f0       	brcs	.+14     	; 0x1732 <_Z19handleSerialBusMsgsv+0x1a4>
    1724:	8f 85       	ldd	r24, Y+15	; 0x0f
    1726:	86 33       	cpi	r24, 0x36	; 54
    1728:	20 f4       	brcc	.+8      	; 0x1732 <_Z19handleSerialBusMsgsv+0x1a4>
    172a:	8f 85       	ldd	r24, Y+15	; 0x0f
    172c:	89 52       	subi	r24, 0x29	; 41
    172e:	8c 83       	std	Y+4, r24	; 0x04
    1730:	1c c0       	rjmp	.+56     	; 0x176a <_Z19handleSerialBusMsgsv+0x1dc>
    1732:	87 e0       	ldi	r24, 0x07	; 7
    1734:	8c 83       	std	Y+4, r24	; 0x04
    1736:	19 c0       	rjmp	.+50     	; 0x176a <_Z19handleSerialBusMsgsv+0x1dc>
    1738:	8f 85       	ldd	r24, Y+15	; 0x0f
    173a:	86 34       	cpi	r24, 0x46	; 70
    173c:	51 f4       	brne	.+20     	; 0x1752 <_Z19handleSerialBusMsgsv+0x1c4>
    173e:	8e 85       	ldd	r24, Y+14	; 0x0e
    1740:	81 33       	cpi	r24, 0x31	; 49
    1742:	98 f0       	brcs	.+38     	; 0x176a <_Z19handleSerialBusMsgsv+0x1dc>
    1744:	8e 85       	ldd	r24, Y+14	; 0x0e
    1746:	86 33       	cpi	r24, 0x36	; 54
    1748:	80 f4       	brcc	.+32     	; 0x176a <_Z19handleSerialBusMsgsv+0x1dc>
    174a:	8e 85       	ldd	r24, Y+14	; 0x0e
    174c:	84 52       	subi	r24, 0x24	; 36
    174e:	8c 83       	std	Y+4, r24	; 0x04
    1750:	0c c0       	rjmp	.+24     	; 0x176a <_Z19handleSerialBusMsgsv+0x1dc>
    1752:	8f 85       	ldd	r24, Y+15	; 0x0f
    1754:	83 35       	cpi	r24, 0x53	; 83
    1756:	49 f4       	brne	.+18     	; 0x176a <_Z19handleSerialBusMsgsv+0x1dc>
    1758:	8e 85       	ldd	r24, Y+14	; 0x0e
    175a:	81 33       	cpi	r24, 0x31	; 49
    175c:	30 f0       	brcs	.+12     	; 0x176a <_Z19handleSerialBusMsgsv+0x1dc>
    175e:	8e 85       	ldd	r24, Y+14	; 0x0e
    1760:	86 33       	cpi	r24, 0x36	; 54
    1762:	18 f4       	brcc	.+6      	; 0x176a <_Z19handleSerialBusMsgsv+0x1dc>
    1764:	8e 85       	ldd	r24, Y+14	; 0x0e
    1766:	89 52       	subi	r24, 0x29	; 41
    1768:	8c 83       	std	Y+4, r24	; 0x04
    176a:	8c 81       	ldd	r24, Y+4	; 0x04
    176c:	87 30       	cpi	r24, 0x07	; 7
    176e:	48 f0       	brcs	.+18     	; 0x1782 <_Z19handleSerialBusMsgsv+0x1f4>
    1770:	8c 81       	ldd	r24, Y+4	; 0x04
    1772:	82 31       	cpi	r24, 0x12	; 18
    1774:	30 f4       	brcc	.+12     	; 0x1782 <_Z19handleSerialBusMsgsv+0x1f4>
    1776:	8c 81       	ldd	r24, Y+4	; 0x04
    1778:	88 2f       	mov	r24, r24
    177a:	90 e0       	ldi	r25, 0x00	; 0
    177c:	89 83       	std	Y+1, r24	; 0x01
    177e:	9a 83       	std	Y+2, r25	; 0x02
    1780:	0a c0       	rjmp	.+20     	; 0x1796 <_Z19handleSerialBusMsgsv+0x208>
    1782:	19 82       	std	Y+1, r1	; 0x01
    1784:	1a 82       	std	Y+2, r1	; 0x02
    1786:	07 c0       	rjmp	.+14     	; 0x1796 <_Z19handleSerialBusMsgsv+0x208>
    1788:	8e 81       	ldd	r24, Y+6	; 0x06
    178a:	9f 81       	ldd	r25, Y+7	; 0x07
    178c:	03 96       	adiw	r24, 0x03	; 3
    178e:	0e 94 fd 33 	call	0x67fa	; 0x67fa <atoi>
    1792:	89 83       	std	Y+1, r24	; 0x01
    1794:	9a 83       	std	Y+2, r25	; 0x02
    1796:	89 81       	ldd	r24, Y+1	; 0x01
    1798:	9a 81       	ldd	r25, Y+2	; 0x02
    179a:	99 23       	and	r25, r25
    179c:	84 f0       	brlt	.+32     	; 0x17be <_Z19handleSerialBusMsgsv+0x230>
    179e:	89 81       	ldd	r24, Y+1	; 0x01
    17a0:	9a 81       	ldd	r25, Y+2	; 0x02
    17a2:	42 97       	sbiw	r24, 0x12	; 18
    17a4:	64 f4       	brge	.+24     	; 0x17be <_Z19handleSerialBusMsgsv+0x230>
    17a6:	89 81       	ldd	r24, Y+1	; 0x01
    17a8:	8c 8b       	std	Y+20, r24	; 0x14
    17aa:	9c 89       	ldd	r25, Y+20	; 0x14
    17ac:	80 91 1c 40 	lds	r24, 0x401C	; 0x80401c <g_fox>
    17b0:	98 17       	cp	r25, r24
    17b2:	29 f0       	breq	.+10     	; 0x17be <_Z19handleSerialBusMsgsv+0x230>
    17b4:	ce 01       	movw	r24, r28
    17b6:	44 96       	adiw	r24, 0x14	; 20
    17b8:	60 e0       	ldi	r22, 0x00	; 0
    17ba:	0e 94 7e 16 	call	0x2cfc	; 0x2cfc <_Z11setupForFoxP5Fox_t13EventAction_t>
    17be:	80 91 1c 40 	lds	r24, 0x401C	; 0x80401c <g_fox>
    17c2:	88 2f       	mov	r24, r24
    17c4:	90 e0       	ldi	r25, 0x00	; 0
    17c6:	29 2f       	mov	r18, r25
    17c8:	2f 93       	push	r18
    17ca:	8f 93       	push	r24
    17cc:	8f e6       	ldi	r24, 0x6F	; 111
    17ce:	91 e4       	ldi	r25, 0x41	; 65
    17d0:	89 2f       	mov	r24, r25
    17d2:	8f 93       	push	r24
    17d4:	8f e6       	ldi	r24, 0x6F	; 111
    17d6:	91 e4       	ldi	r25, 0x41	; 65
    17d8:	8f 93       	push	r24
    17da:	81 e7       	ldi	r24, 0x71	; 113
    17dc:	92 e4       	ldi	r25, 0x42	; 66
    17de:	89 2f       	mov	r24, r25
    17e0:	8f 93       	push	r24
    17e2:	81 e7       	ldi	r24, 0x71	; 113
    17e4:	92 e4       	ldi	r25, 0x42	; 66
    17e6:	8f 93       	push	r24
    17e8:	0e 94 91 34 	call	0x6922	; 0x6922 <sprintf>
    17ec:	0f 90       	pop	r0
    17ee:	0f 90       	pop	r0
    17f0:	0f 90       	pop	r0
    17f2:	0f 90       	pop	r0
    17f4:	0f 90       	pop	r0
    17f6:	0f 90       	pop	r0
    17f8:	81 e7       	ldi	r24, 0x71	; 113
    17fa:	92 e4       	ldi	r25, 0x42	; 66
    17fc:	0e 94 48 26 	call	0x4c90	; 0x4c90 <sb_send_string>
    1800:	aa c1       	rjmp	.+852    	; 0x1b56 <_Z19handleSerialBusMsgsv+0x5c8>
    1802:	8e 81       	ldd	r24, Y+6	; 0x06
    1804:	9f 81       	ldd	r25, Y+7	; 0x07
    1806:	fc 01       	movw	r30, r24
    1808:	83 81       	ldd	r24, Z+3	; 0x03
    180a:	88 23       	and	r24, r24
    180c:	09 f1       	breq	.+66     	; 0x1850 <_Z19handleSerialBusMsgsv+0x2c2>
    180e:	8e 81       	ldd	r24, Y+6	; 0x06
    1810:	9f 81       	ldd	r25, Y+7	; 0x07
    1812:	fc 01       	movw	r30, r24
    1814:	83 81       	ldd	r24, Z+3	; 0x03
    1816:	80 33       	cpi	r24, 0x30	; 48
    1818:	09 f4       	brne	.+2      	; 0x181c <_Z19handleSerialBusMsgsv+0x28e>
    181a:	98 c1       	rjmp	.+816    	; 0x1b4c <_Z19handleSerialBusMsgsv+0x5be>
    181c:	8e 81       	ldd	r24, Y+6	; 0x06
    181e:	9f 81       	ldd	r25, Y+7	; 0x07
    1820:	fc 01       	movw	r30, r24
    1822:	83 81       	ldd	r24, Z+3	; 0x03
    1824:	81 33       	cpi	r24, 0x31	; 49
    1826:	09 f4       	brne	.+2      	; 0x182a <_Z19handleSerialBusMsgsv+0x29c>
    1828:	91 c1       	rjmp	.+802    	; 0x1b4c <_Z19handleSerialBusMsgsv+0x5be>
    182a:	8e 81       	ldd	r24, Y+6	; 0x06
    182c:	9f 81       	ldd	r25, Y+7	; 0x07
    182e:	fc 01       	movw	r30, r24
    1830:	83 81       	ldd	r24, Z+3	; 0x03
    1832:	82 33       	cpi	r24, 0x32	; 50
    1834:	09 f4       	brne	.+2      	; 0x1838 <_Z19handleSerialBusMsgsv+0x2aa>
    1836:	8a c1       	rjmp	.+788    	; 0x1b4c <_Z19handleSerialBusMsgsv+0x5be>
    1838:	8e 81       	ldd	r24, Y+6	; 0x06
    183a:	9f 81       	ldd	r25, Y+7	; 0x07
    183c:	fc 01       	movw	r30, r24
    183e:	83 81       	ldd	r24, Z+3	; 0x03
    1840:	83 33       	cpi	r24, 0x33	; 51
    1842:	09 f4       	brne	.+2      	; 0x1846 <_Z19handleSerialBusMsgsv+0x2b8>
    1844:	83 c1       	rjmp	.+774    	; 0x1b4c <_Z19handleSerialBusMsgsv+0x5be>
    1846:	87 e7       	ldi	r24, 0x77	; 119
    1848:	91 e4       	ldi	r25, 0x41	; 65
    184a:	0e 94 48 26 	call	0x4c90	; 0x4c90 <sb_send_string>
    184e:	7e c1       	rjmp	.+764    	; 0x1b4c <_Z19handleSerialBusMsgsv+0x5be>
    1850:	87 e7       	ldi	r24, 0x77	; 119
    1852:	91 e4       	ldi	r25, 0x41	; 65
    1854:	0e 94 48 26 	call	0x4c90	; 0x4c90 <sb_send_string>
    1858:	79 c1       	rjmp	.+754    	; 0x1b4c <_Z19handleSerialBusMsgsv+0x5be>
    185a:	8e 81       	ldd	r24, Y+6	; 0x06
    185c:	9f 81       	ldd	r25, Y+7	; 0x07
    185e:	fc 01       	movw	r30, r24
    1860:	83 81       	ldd	r24, Z+3	; 0x03
    1862:	88 23       	and	r24, r24
    1864:	09 f4       	brne	.+2      	; 0x1868 <_Z19handleSerialBusMsgsv+0x2da>
    1866:	41 c0       	rjmp	.+130    	; 0x18ea <_Z19handleSerialBusMsgsv+0x35c>
    1868:	80 e2       	ldi	r24, 0x20	; 32
    186a:	90 e0       	ldi	r25, 0x00	; 0
    186c:	80 93 71 42 	sts	0x4271, r24	; 0x804271 <_ZL9g_tempStr>
    1870:	90 93 72 42 	sts	0x4272, r25	; 0x804272 <_ZL9g_tempStr+0x1>
    1874:	8e 81       	ldd	r24, Y+6	; 0x06
    1876:	9f 81       	ldd	r25, Y+7	; 0x07
    1878:	03 96       	adiw	r24, 0x03	; 3
    187a:	bc 01       	movw	r22, r24
    187c:	81 e7       	ldi	r24, 0x71	; 113
    187e:	92 e4       	ldi	r25, 0x42	; 66
    1880:	0e 94 4a 34 	call	0x6894	; 0x6894 <strcat>
    1884:	8e 81       	ldd	r24, Y+6	; 0x06
    1886:	9f 81       	ldd	r25, Y+7	; 0x07
    1888:	fc 01       	movw	r30, r24
    188a:	87 89       	ldd	r24, Z+23	; 0x17
    188c:	88 23       	and	r24, r24
    188e:	d1 f0       	breq	.+52     	; 0x18c4 <_Z19handleSerialBusMsgsv+0x336>
    1890:	81 e7       	ldi	r24, 0x71	; 113
    1892:	92 e4       	ldi	r25, 0x42	; 66
    1894:	9c 01       	movw	r18, r24
    1896:	f9 01       	movw	r30, r18
    1898:	01 90       	ld	r0, Z+
    189a:	00 20       	and	r0, r0
    189c:	e9 f7       	brne	.-6      	; 0x1898 <_Z19handleSerialBusMsgsv+0x30a>
    189e:	cf 01       	movw	r24, r30
    18a0:	01 97       	sbiw	r24, 0x01	; 1
    18a2:	82 1b       	sub	r24, r18
    18a4:	93 0b       	sbc	r25, r19
    18a6:	8f 58       	subi	r24, 0x8F	; 143
    18a8:	9d 4b       	sbci	r25, 0xBD	; 189
    18aa:	20 e2       	ldi	r18, 0x20	; 32
    18ac:	30 e0       	ldi	r19, 0x00	; 0
    18ae:	fc 01       	movw	r30, r24
    18b0:	20 83       	st	Z, r18
    18b2:	31 83       	std	Z+1, r19	; 0x01
    18b4:	8e 81       	ldd	r24, Y+6	; 0x06
    18b6:	9f 81       	ldd	r25, Y+7	; 0x07
    18b8:	47 96       	adiw	r24, 0x17	; 23
    18ba:	bc 01       	movw	r22, r24
    18bc:	81 e7       	ldi	r24, 0x71	; 113
    18be:	92 e4       	ldi	r25, 0x42	; 66
    18c0:	0e 94 4a 34 	call	0x6894	; 0x6894 <strcat>
    18c4:	81 e7       	ldi	r24, 0x71	; 113
    18c6:	92 e4       	ldi	r25, 0x42	; 66
    18c8:	0e 94 5c 34 	call	0x68b8	; 0x68b8 <strlen>
    18cc:	45 97       	sbiw	r24, 0x15	; 21
    18ce:	68 f4       	brcc	.+26     	; 0x18ea <_Z19handleSerialBusMsgsv+0x35c>
    18d0:	61 e7       	ldi	r22, 0x71	; 113
    18d2:	72 e4       	ldi	r23, 0x42	; 66
    18d4:	8a ea       	ldi	r24, 0xAA	; 170
    18d6:	92 e4       	ldi	r25, 0x42	; 66
    18d8:	0e 94 55 34 	call	0x68aa	; 0x68aa <strcpy>
    18dc:	41 e7       	ldi	r20, 0x71	; 113
    18de:	52 e4       	ldi	r21, 0x42	; 66
    18e0:	6a e0       	ldi	r22, 0x0A	; 10
    18e2:	8f ed       	ldi	r24, 0xDF	; 223
    18e4:	92 e4       	ldi	r25, 0x42	; 66
    18e6:	0e 94 5c 1c 	call	0x38b8	; 0x38b8 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
    18ea:	80 91 aa 42 	lds	r24, 0x42AA	; 0x8042aa <g_messages_text+0x15>
    18ee:	88 23       	and	r24, r24
    18f0:	01 f1       	breq	.+64     	; 0x1932 <_Z19handleSerialBusMsgsv+0x3a4>
    18f2:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_id_codespeed>
    18f6:	88 2f       	mov	r24, r24
    18f8:	90 e0       	ldi	r25, 0x00	; 0
    18fa:	bc 01       	movw	r22, r24
    18fc:	8a ea       	ldi	r24, 0xAA	; 170
    18fe:	92 e4       	ldi	r25, 0x42	; 66
    1900:	0e 94 83 24 	call	0x4906	; 0x4906 <_Z26timeRequiredToSendStrAtWPMPcj>
    1904:	88 5a       	subi	r24, 0xA8	; 168
    1906:	9d 4f       	sbci	r25, 0xFD	; 253
    1908:	96 95       	lsr	r25
    190a:	87 95       	ror	r24
    190c:	96 95       	lsr	r25
    190e:	87 95       	ror	r24
    1910:	96 95       	lsr	r25
    1912:	87 95       	ror	r24
    1914:	9c 01       	movw	r18, r24
    1916:	a5 ec       	ldi	r26, 0xC5	; 197
    1918:	b0 e2       	ldi	r27, 0x20	; 32
    191a:	0e 94 b3 32 	call	0x6566	; 0x6566 <__umulhisi3>
    191e:	92 95       	swap	r25
    1920:	82 95       	swap	r24
    1922:	8f 70       	andi	r24, 0x0F	; 15
    1924:	89 27       	eor	r24, r25
    1926:	9f 70       	andi	r25, 0x0F	; 15
    1928:	89 27       	eor	r24, r25
    192a:	80 93 bf 42 	sts	0x42BF, r24	; 0x8042bf <g_time_needed_for_ID>
    192e:	90 93 c0 42 	sts	0x42C0, r25	; 0x8042c0 <g_time_needed_for_ID+0x1>
    1932:	8a ea       	ldi	r24, 0xAA	; 170
    1934:	92 e4       	ldi	r25, 0x42	; 66
    1936:	89 2f       	mov	r24, r25
    1938:	8f 93       	push	r24
    193a:	8a ea       	ldi	r24, 0xAA	; 170
    193c:	92 e4       	ldi	r25, 0x42	; 66
    193e:	8f 93       	push	r24
    1940:	8c e7       	ldi	r24, 0x7C	; 124
    1942:	91 e4       	ldi	r25, 0x41	; 65
    1944:	89 2f       	mov	r24, r25
    1946:	8f 93       	push	r24
    1948:	8c e7       	ldi	r24, 0x7C	; 124
    194a:	91 e4       	ldi	r25, 0x41	; 65
    194c:	8f 93       	push	r24
    194e:	81 e7       	ldi	r24, 0x71	; 113
    1950:	92 e4       	ldi	r25, 0x42	; 66
    1952:	89 2f       	mov	r24, r25
    1954:	8f 93       	push	r24
    1956:	81 e7       	ldi	r24, 0x71	; 113
    1958:	92 e4       	ldi	r25, 0x42	; 66
    195a:	8f 93       	push	r24
    195c:	0e 94 91 34 	call	0x6922	; 0x6922 <sprintf>
    1960:	0f 90       	pop	r0
    1962:	0f 90       	pop	r0
    1964:	0f 90       	pop	r0
    1966:	0f 90       	pop	r0
    1968:	0f 90       	pop	r0
    196a:	0f 90       	pop	r0
    196c:	81 e7       	ldi	r24, 0x71	; 113
    196e:	92 e4       	ldi	r25, 0x42	; 66
    1970:	0e 94 48 26 	call	0x4c90	; 0x4c90 <sb_send_string>
    1974:	f0 c0       	rjmp	.+480    	; 0x1b56 <_Z19handleSerialBusMsgsv+0x5c8>
    1976:	8e 81       	ldd	r24, Y+6	; 0x06
    1978:	9f 81       	ldd	r25, Y+7	; 0x07
    197a:	fc 01       	movw	r30, r24
    197c:	83 81       	ldd	r24, Z+3	; 0x03
    197e:	83 35       	cpi	r24, 0x53	; 83
    1980:	09 f0       	breq	.+2      	; 0x1984 <_Z19handleSerialBusMsgsv+0x3f6>
    1982:	4a c0       	rjmp	.+148    	; 0x1a18 <_Z19handleSerialBusMsgsv+0x48a>
    1984:	8e 81       	ldd	r24, Y+6	; 0x06
    1986:	9f 81       	ldd	r25, Y+7	; 0x07
    1988:	fc 01       	movw	r30, r24
    198a:	87 89       	ldd	r24, Z+23	; 0x17
    198c:	88 8b       	std	Y+16, r24	; 0x10
    198e:	88 89       	ldd	r24, Y+16	; 0x10
    1990:	88 23       	and	r24, r24
    1992:	21 f1       	breq	.+72     	; 0x19dc <_Z19handleSerialBusMsgsv+0x44e>
    1994:	80 91 aa 42 	lds	r24, 0x42AA	; 0x8042aa <g_messages_text+0x15>
    1998:	88 23       	and	r24, r24
    199a:	01 f1       	breq	.+64     	; 0x19dc <_Z19handleSerialBusMsgsv+0x44e>
    199c:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_id_codespeed>
    19a0:	88 2f       	mov	r24, r24
    19a2:	90 e0       	ldi	r25, 0x00	; 0
    19a4:	bc 01       	movw	r22, r24
    19a6:	8a ea       	ldi	r24, 0xAA	; 170
    19a8:	92 e4       	ldi	r25, 0x42	; 66
    19aa:	0e 94 83 24 	call	0x4906	; 0x4906 <_Z26timeRequiredToSendStrAtWPMPcj>
    19ae:	88 5a       	subi	r24, 0xA8	; 168
    19b0:	9d 4f       	sbci	r25, 0xFD	; 253
    19b2:	96 95       	lsr	r25
    19b4:	87 95       	ror	r24
    19b6:	96 95       	lsr	r25
    19b8:	87 95       	ror	r24
    19ba:	96 95       	lsr	r25
    19bc:	87 95       	ror	r24
    19be:	9c 01       	movw	r18, r24
    19c0:	a5 ec       	ldi	r26, 0xC5	; 197
    19c2:	b0 e2       	ldi	r27, 0x20	; 32
    19c4:	0e 94 b3 32 	call	0x6566	; 0x6566 <__umulhisi3>
    19c8:	92 95       	swap	r25
    19ca:	82 95       	swap	r24
    19cc:	8f 70       	andi	r24, 0x0F	; 15
    19ce:	89 27       	eor	r24, r25
    19d0:	9f 70       	andi	r25, 0x0F	; 15
    19d2:	89 27       	eor	r24, r25
    19d4:	80 93 bf 42 	sts	0x42BF, r24	; 0x8042bf <g_time_needed_for_ID>
    19d8:	90 93 c0 42 	sts	0x42C0, r25	; 0x8042c0 <g_time_needed_for_ID+0x1>
    19dc:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_id_codespeed>
    19e0:	88 2f       	mov	r24, r24
    19e2:	90 e0       	ldi	r25, 0x00	; 0
    19e4:	29 2f       	mov	r18, r25
    19e6:	2f 93       	push	r18
    19e8:	8f 93       	push	r24
    19ea:	83 e8       	ldi	r24, 0x83	; 131
    19ec:	91 e4       	ldi	r25, 0x41	; 65
    19ee:	89 2f       	mov	r24, r25
    19f0:	8f 93       	push	r24
    19f2:	83 e8       	ldi	r24, 0x83	; 131
    19f4:	91 e4       	ldi	r25, 0x41	; 65
    19f6:	8f 93       	push	r24
    19f8:	81 e7       	ldi	r24, 0x71	; 113
    19fa:	92 e4       	ldi	r25, 0x42	; 66
    19fc:	89 2f       	mov	r24, r25
    19fe:	8f 93       	push	r24
    1a00:	81 e7       	ldi	r24, 0x71	; 113
    1a02:	92 e4       	ldi	r25, 0x42	; 66
    1a04:	8f 93       	push	r24
    1a06:	0e 94 91 34 	call	0x6922	; 0x6922 <sprintf>
    1a0a:	0f 90       	pop	r0
    1a0c:	0f 90       	pop	r0
    1a0e:	0f 90       	pop	r0
    1a10:	0f 90       	pop	r0
    1a12:	0f 90       	pop	r0
    1a14:	0f 90       	pop	r0
    1a16:	2e c0       	rjmp	.+92     	; 0x1a74 <_Z19handleSerialBusMsgsv+0x4e6>
    1a18:	8e 81       	ldd	r24, Y+6	; 0x06
    1a1a:	9f 81       	ldd	r25, Y+7	; 0x07
    1a1c:	fc 01       	movw	r30, r24
    1a1e:	83 81       	ldd	r24, Z+3	; 0x03
    1a20:	80 35       	cpi	r24, 0x50	; 80
    1a22:	f9 f4       	brne	.+62     	; 0x1a62 <_Z19handleSerialBusMsgsv+0x4d4>
    1a24:	8e 81       	ldd	r24, Y+6	; 0x06
    1a26:	9f 81       	ldd	r25, Y+7	; 0x07
    1a28:	fc 01       	movw	r30, r24
    1a2a:	87 89       	ldd	r24, Z+23	; 0x17
    1a2c:	89 8b       	std	Y+17, r24	; 0x11
    1a2e:	1f 92       	push	r1
    1a30:	83 e6       	ldi	r24, 0x63	; 99
    1a32:	8f 93       	push	r24
    1a34:	8f e8       	ldi	r24, 0x8F	; 143
    1a36:	91 e4       	ldi	r25, 0x41	; 65
    1a38:	89 2f       	mov	r24, r25
    1a3a:	8f 93       	push	r24
    1a3c:	8f e8       	ldi	r24, 0x8F	; 143
    1a3e:	91 e4       	ldi	r25, 0x41	; 65
    1a40:	8f 93       	push	r24
    1a42:	81 e7       	ldi	r24, 0x71	; 113
    1a44:	92 e4       	ldi	r25, 0x42	; 66
    1a46:	89 2f       	mov	r24, r25
    1a48:	8f 93       	push	r24
    1a4a:	81 e7       	ldi	r24, 0x71	; 113
    1a4c:	92 e4       	ldi	r25, 0x42	; 66
    1a4e:	8f 93       	push	r24
    1a50:	0e 94 91 34 	call	0x6922	; 0x6922 <sprintf>
    1a54:	0f 90       	pop	r0
    1a56:	0f 90       	pop	r0
    1a58:	0f 90       	pop	r0
    1a5a:	0f 90       	pop	r0
    1a5c:	0f 90       	pop	r0
    1a5e:	0f 90       	pop	r0
    1a60:	09 c0       	rjmp	.+18     	; 0x1a74 <_Z19handleSerialBusMsgsv+0x4e6>
    1a62:	85 e0       	ldi	r24, 0x05	; 5
    1a64:	e7 e7       	ldi	r30, 0x77	; 119
    1a66:	f1 e4       	ldi	r31, 0x41	; 65
    1a68:	a1 e7       	ldi	r26, 0x71	; 113
    1a6a:	b2 e4       	ldi	r27, 0x42	; 66
    1a6c:	01 90       	ld	r0, Z+
    1a6e:	0d 92       	st	X+, r0
    1a70:	8a 95       	dec	r24
    1a72:	e1 f7       	brne	.-8      	; 0x1a6c <_Z19handleSerialBusMsgsv+0x4de>
    1a74:	81 e7       	ldi	r24, 0x71	; 113
    1a76:	92 e4       	ldi	r25, 0x42	; 66
    1a78:	0e 94 48 26 	call	0x4c90	; 0x4c90 <sb_send_string>
    1a7c:	6c c0       	rjmp	.+216    	; 0x1b56 <_Z19handleSerialBusMsgsv+0x5c8>
    1a7e:	87 e9       	ldi	r24, 0x97	; 151
    1a80:	91 e4       	ldi	r25, 0x41	; 65
    1a82:	89 2f       	mov	r24, r25
    1a84:	8f 93       	push	r24
    1a86:	87 e9       	ldi	r24, 0x97	; 151
    1a88:	91 e4       	ldi	r25, 0x41	; 65
    1a8a:	8f 93       	push	r24
    1a8c:	8c e9       	ldi	r24, 0x9C	; 156
    1a8e:	91 e4       	ldi	r25, 0x41	; 65
    1a90:	89 2f       	mov	r24, r25
    1a92:	8f 93       	push	r24
    1a94:	8c e9       	ldi	r24, 0x9C	; 156
    1a96:	91 e4       	ldi	r25, 0x41	; 65
    1a98:	8f 93       	push	r24
    1a9a:	81 e7       	ldi	r24, 0x71	; 113
    1a9c:	92 e4       	ldi	r25, 0x42	; 66
    1a9e:	89 2f       	mov	r24, r25
    1aa0:	8f 93       	push	r24
    1aa2:	81 e7       	ldi	r24, 0x71	; 113
    1aa4:	92 e4       	ldi	r25, 0x42	; 66
    1aa6:	8f 93       	push	r24
    1aa8:	0e 94 91 34 	call	0x6922	; 0x6922 <sprintf>
    1aac:	0f 90       	pop	r0
    1aae:	0f 90       	pop	r0
    1ab0:	0f 90       	pop	r0
    1ab2:	0f 90       	pop	r0
    1ab4:	0f 90       	pop	r0
    1ab6:	0f 90       	pop	r0
    1ab8:	81 e7       	ldi	r24, 0x71	; 113
    1aba:	92 e4       	ldi	r25, 0x42	; 66
    1abc:	0e 94 48 26 	call	0x4c90	; 0x4c90 <sb_send_string>
    1ac0:	4a c0       	rjmp	.+148    	; 0x1b56 <_Z19handleSerialBusMsgsv+0x5c8>
    1ac2:	1d 82       	std	Y+5, r1	; 0x05
    1ac4:	8e 81       	ldd	r24, Y+6	; 0x06
    1ac6:	9f 81       	ldd	r25, Y+7	; 0x07
    1ac8:	fc 01       	movw	r30, r24
    1aca:	83 81       	ldd	r24, Z+3	; 0x03
    1acc:	84 35       	cpi	r24, 0x54	; 84
    1ace:	79 f4       	brne	.+30     	; 0x1aee <_Z19handleSerialBusMsgsv+0x560>
    1ad0:	8e 81       	ldd	r24, Y+6	; 0x06
    1ad2:	9f 81       	ldd	r25, Y+7	; 0x07
    1ad4:	47 96       	adiw	r24, 0x17	; 23
    1ad6:	4c e0       	ldi	r20, 0x0C	; 12
    1ad8:	50 e0       	ldi	r21, 0x00	; 0
    1ada:	bc 01       	movw	r22, r24
    1adc:	81 e7       	ldi	r24, 0x71	; 113
    1ade:	92 e4       	ldi	r25, 0x42	; 66
    1ae0:	0e 94 65 34 	call	0x68ca	; 0x68ca <strncpy>
    1ae4:	10 92 7d 42 	sts	0x427D, r1	; 0x80427d <_ZL9g_tempStr+0xc>
    1ae8:	81 e0       	ldi	r24, 0x01	; 1
    1aea:	8d 83       	std	Y+5, r24	; 0x05
    1aec:	0e c0       	rjmp	.+28     	; 0x1b0a <_Z19handleSerialBusMsgsv+0x57c>
    1aee:	8e 81       	ldd	r24, Y+6	; 0x06
    1af0:	9f 81       	ldd	r25, Y+7	; 0x07
    1af2:	fc 01       	movw	r30, r24
    1af4:	83 81       	ldd	r24, Z+3	; 0x03
    1af6:	83 35       	cpi	r24, 0x53	; 83
    1af8:	41 f4       	brne	.+16     	; 0x1b0a <_Z19handleSerialBusMsgsv+0x57c>
    1afa:	8e 81       	ldd	r24, Y+6	; 0x06
    1afc:	9f 81       	ldd	r25, Y+7	; 0x07
    1afe:	47 96       	adiw	r24, 0x17	; 23
    1b00:	bc 01       	movw	r22, r24
    1b02:	81 e7       	ldi	r24, 0x71	; 113
    1b04:	92 e4       	ldi	r25, 0x42	; 66
    1b06:	0e 94 55 34 	call	0x68aa	; 0x68aa <strcpy>
    1b0a:	8d 81       	ldd	r24, Y+5	; 0x05
    1b0c:	88 23       	and	r24, r24
    1b0e:	01 f1       	breq	.+64     	; 0x1b50 <_Z19handleSerialBusMsgsv+0x5c2>
    1b10:	81 e7       	ldi	r24, 0x71	; 113
    1b12:	92 e4       	ldi	r25, 0x42	; 66
    1b14:	0e 94 48 26 	call	0x4c90	; 0x4c90 <sb_send_string>
    1b18:	1b c0       	rjmp	.+54     	; 0x1b50 <_Z19handleSerialBusMsgsv+0x5c2>
    1b1a:	8e 81       	ldd	r24, Y+6	; 0x06
    1b1c:	9f 81       	ldd	r25, Y+7	; 0x07
    1b1e:	fc 01       	movw	r30, r24
    1b20:	83 81       	ldd	r24, Z+3	; 0x03
    1b22:	83 34       	cpi	r24, 0x43	; 67
    1b24:	b9 f4       	brne	.+46     	; 0x1b54 <_Z19handleSerialBusMsgsv+0x5c6>
    1b26:	8e 81       	ldd	r24, Y+6	; 0x06
    1b28:	9f 81       	ldd	r25, Y+7	; 0x07
    1b2a:	fc 01       	movw	r30, r24
    1b2c:	87 89       	ldd	r24, Z+23	; 0x17
    1b2e:	88 23       	and	r24, r24
    1b30:	89 f0       	breq	.+34     	; 0x1b54 <_Z19handleSerialBusMsgsv+0x5c6>
    1b32:	8e 81       	ldd	r24, Y+6	; 0x06
    1b34:	9f 81       	ldd	r25, Y+7	; 0x07
    1b36:	47 96       	adiw	r24, 0x17	; 23
    1b38:	0e 94 fd 33 	call	0x67fa	; 0x67fa <atoi>
    1b3c:	8a 8b       	std	Y+18, r24	; 0x12
    1b3e:	9b 8b       	std	Y+19, r25	; 0x13
    1b40:	09 c0       	rjmp	.+18     	; 0x1b54 <_Z19handleSerialBusMsgsv+0x5c6>
    1b42:	85 e6       	ldi	r24, 0x65	; 101
    1b44:	90 e4       	ldi	r25, 0x40	; 64
    1b46:	0e 94 48 26 	call	0x4c90	; 0x4c90 <sb_send_string>
    1b4a:	05 c0       	rjmp	.+10     	; 0x1b56 <_Z19handleSerialBusMsgsv+0x5c8>
    1b4c:	00 00       	nop
    1b4e:	03 c0       	rjmp	.+6      	; 0x1b56 <_Z19handleSerialBusMsgsv+0x5c8>
    1b50:	00 00       	nop
    1b52:	01 c0       	rjmp	.+2      	; 0x1b56 <_Z19handleSerialBusMsgsv+0x5c8>
    1b54:	00 00       	nop
    1b56:	8e 81       	ldd	r24, Y+6	; 0x06
    1b58:	9f 81       	ldd	r25, Y+7	; 0x07
    1b5a:	fc 01       	movw	r30, r24
    1b5c:	11 82       	std	Z+1, r1	; 0x01
    1b5e:	12 82       	std	Z+2, r1	; 0x02
    1b60:	0e 94 28 26 	call	0x4c50	; 0x4c50 <sb_send_NewPrompt>
    1b64:	1b cd       	rjmp	.-1482   	; 0x159c <_Z19handleSerialBusMsgsv+0xe>
    1b66:	00 00       	nop
    1b68:	64 96       	adiw	r28, 0x14	; 20
    1b6a:	cd bf       	out	0x3d, r28	; 61
    1b6c:	de bf       	out	0x3e, r29	; 62
    1b6e:	df 91       	pop	r29
    1b70:	cf 91       	pop	r28
    1b72:	08 95       	ret

00001b74 <_Z17handleLinkBusMsgsv>:
    1b74:	ef 92       	push	r14
    1b76:	ff 92       	push	r15
    1b78:	0f 93       	push	r16
    1b7a:	1f 93       	push	r17
    1b7c:	cf 93       	push	r28
    1b7e:	df 93       	push	r29
    1b80:	cd b7       	in	r28, 0x3d	; 61
    1b82:	de b7       	in	r29, 0x3e	; 62
    1b84:	e5 97       	sbiw	r28, 0x35	; 53
    1b86:	cd bf       	out	0x3d, r28	; 61
    1b88:	de bf       	out	0x3e, r29	; 62
    1b8a:	81 e0       	ldi	r24, 0x01	; 1
    1b8c:	89 83       	std	Y+1, r24	; 0x01
    1b8e:	0e 94 0e 21 	call	0x421c	; 0x421c <_Z18nextFullLBRxBufferv>
    1b92:	8c 87       	std	Y+12, r24	; 0x0c
    1b94:	9d 87       	std	Y+13, r25	; 0x0d
    1b96:	21 e0       	ldi	r18, 0x01	; 1
    1b98:	8c 85       	ldd	r24, Y+12	; 0x0c
    1b9a:	9d 85       	ldd	r25, Y+13	; 0x0d
    1b9c:	89 2b       	or	r24, r25
    1b9e:	09 f4       	brne	.+2      	; 0x1ba2 <_Z17handleLinkBusMsgsv+0x2e>
    1ba0:	20 e0       	ldi	r18, 0x00	; 0
    1ba2:	22 23       	and	r18, r18
    1ba4:	09 f4       	brne	.+2      	; 0x1ba8 <_Z17handleLinkBusMsgsv+0x34>
    1ba6:	90 c6       	rjmp	.+3360   	; 0x28c8 <_Z17handleLinkBusMsgsv+0xd54>
    1ba8:	8c 85       	ldd	r24, Y+12	; 0x0c
    1baa:	9d 85       	ldd	r25, Y+13	; 0x0d
    1bac:	fc 01       	movw	r30, r24
    1bae:	81 81       	ldd	r24, Z+1	; 0x01
    1bb0:	92 81       	ldd	r25, Z+2	; 0x02
    1bb2:	8e 87       	std	Y+14, r24	; 0x0e
    1bb4:	9f 87       	std	Y+15, r25	; 0x0f
    1bb6:	8e 85       	ldd	r24, Y+14	; 0x0e
    1bb8:	9f 85       	ldd	r25, Y+15	; 0x0f
    1bba:	82 38       	cpi	r24, 0x82	; 130
    1bbc:	fe e1       	ldi	r31, 0x1E	; 30
    1bbe:	9f 07       	cpc	r25, r31
    1bc0:	09 f4       	brne	.+2      	; 0x1bc4 <_Z17handleLinkBusMsgsv+0x50>
    1bc2:	6c c0       	rjmp	.+216    	; 0x1c9c <_Z17handleLinkBusMsgsv+0x128>
    1bc4:	83 38       	cpi	r24, 0x83	; 131
    1bc6:	2e e1       	ldi	r18, 0x1E	; 30
    1bc8:	92 07       	cpc	r25, r18
    1bca:	30 f5       	brcc	.+76     	; 0x1c18 <_Z17handleLinkBusMsgsv+0xa4>
    1bcc:	81 36       	cpi	r24, 0x61	; 97
    1bce:	33 e0       	ldi	r19, 0x03	; 3
    1bd0:	93 07       	cpc	r25, r19
    1bd2:	09 f4       	brne	.+2      	; 0x1bd6 <_Z17handleLinkBusMsgsv+0x62>
    1bd4:	df c4       	rjmp	.+2494   	; 0x2594 <_Z17handleLinkBusMsgsv+0xa20>
    1bd6:	82 36       	cpi	r24, 0x62	; 98
    1bd8:	e3 e0       	ldi	r30, 0x03	; 3
    1bda:	9e 07       	cpc	r25, r30
    1bdc:	78 f4       	brcc	.+30     	; 0x1bfc <_Z17handleLinkBusMsgsv+0x88>
    1bde:	85 31       	cpi	r24, 0x15	; 21
    1be0:	f3 e0       	ldi	r31, 0x03	; 3
    1be2:	9f 07       	cpc	r25, r31
    1be4:	09 f4       	brne	.+2      	; 0x1be8 <_Z17handleLinkBusMsgsv+0x74>
    1be6:	1b c1       	rjmp	.+566    	; 0x1e1e <_Z17handleLinkBusMsgsv+0x2aa>
    1be8:	8e 31       	cpi	r24, 0x1E	; 30
    1bea:	23 e0       	ldi	r18, 0x03	; 3
    1bec:	92 07       	cpc	r25, r18
    1bee:	09 f4       	brne	.+2      	; 0x1bf2 <_Z17handleLinkBusMsgsv+0x7e>
    1bf0:	3b c3       	rjmp	.+1654   	; 0x2268 <_Z17handleLinkBusMsgsv+0x6f4>
    1bf2:	84 35       	cpi	r24, 0x54	; 84
    1bf4:	91 05       	cpc	r25, r1
    1bf6:	09 f4       	brne	.+2      	; 0x1bfa <_Z17handleLinkBusMsgsv+0x86>
    1bf8:	42 c4       	rjmp	.+2180   	; 0x247e <_Z17handleLinkBusMsgsv+0x90a>
    1bfa:	3b c6       	rjmp	.+3190   	; 0x2872 <_Z17handleLinkBusMsgsv+0xcfe>
    1bfc:	8f 3a       	cpi	r24, 0xAF	; 175
    1bfe:	33 e0       	ldi	r19, 0x03	; 3
    1c00:	93 07       	cpc	r25, r19
    1c02:	c9 f1       	breq	.+114    	; 0x1c76 <_Z17handleLinkBusMsgsv+0x102>
    1c04:	86 3a       	cpi	r24, 0xA6	; 166
    1c06:	ec e1       	ldi	r30, 0x1C	; 28
    1c08:	9e 07       	cpc	r25, r30
    1c0a:	09 f4       	brne	.+2      	; 0x1c0e <_Z17handleLinkBusMsgsv+0x9a>
    1c0c:	50 c5       	rjmp	.+2720   	; 0x26ae <_Z17handleLinkBusMsgsv+0xb3a>
    1c0e:	84 38       	cpi	r24, 0x84	; 132
    1c10:	93 40       	sbci	r25, 0x03	; 3
    1c12:	09 f4       	brne	.+2      	; 0x1c16 <_Z17handleLinkBusMsgsv+0xa2>
    1c14:	c3 c1       	rjmp	.+902    	; 0x1f9c <_Z17handleLinkBusMsgsv+0x428>
    1c16:	2d c6       	rjmp	.+3162   	; 0x2872 <_Z17handleLinkBusMsgsv+0xcfe>
    1c18:	8a 39       	cpi	r24, 0x9A	; 154
    1c1a:	23 e2       	ldi	r18, 0x23	; 35
    1c1c:	92 07       	cpc	r25, r18
    1c1e:	e9 f1       	breq	.+122    	; 0x1c9a <_Z17handleLinkBusMsgsv+0x126>
    1c20:	8b 39       	cpi	r24, 0x9B	; 155
    1c22:	33 e2       	ldi	r19, 0x23	; 35
    1c24:	93 07       	cpc	r25, r19
    1c26:	78 f4       	brcc	.+30     	; 0x1c46 <_Z17handleLinkBusMsgsv+0xd2>
    1c28:	8d 3a       	cpi	r24, 0xAD	; 173
    1c2a:	e2 e2       	ldi	r30, 0x22	; 34
    1c2c:	9e 07       	cpc	r25, r30
    1c2e:	09 f4       	brne	.+2      	; 0x1c32 <_Z17handleLinkBusMsgsv+0xbe>
    1c30:	96 c0       	rjmp	.+300    	; 0x1d5e <_Z17handleLinkBusMsgsv+0x1ea>
    1c32:	81 3c       	cpi	r24, 0xC1	; 193
    1c34:	f2 e2       	ldi	r31, 0x22	; 34
    1c36:	9f 07       	cpc	r25, r31
    1c38:	09 f4       	brne	.+2      	; 0x1c3c <_Z17handleLinkBusMsgsv+0xc8>
    1c3a:	ee c0       	rjmp	.+476    	; 0x1e18 <_Z17handleLinkBusMsgsv+0x2a4>
    1c3c:	81 3d       	cpi	r24, 0xD1	; 209
    1c3e:	9e 41       	sbci	r25, 0x1E	; 30
    1c40:	09 f4       	brne	.+2      	; 0x1c44 <_Z17handleLinkBusMsgsv+0xd0>
    1c42:	bf c4       	rjmp	.+2430   	; 0x25c2 <_Z17handleLinkBusMsgsv+0xa4e>
    1c44:	16 c6       	rjmp	.+3116   	; 0x2872 <_Z17handleLinkBusMsgsv+0xcfe>
    1c46:	80 3d       	cpi	r24, 0xD0	; 208
    1c48:	33 e2       	ldi	r19, 0x23	; 35
    1c4a:	93 07       	cpc	r25, r19
    1c4c:	09 f4       	brne	.+2      	; 0x1c50 <_Z17handleLinkBusMsgsv+0xdc>
    1c4e:	6f c3       	rjmp	.+1758   	; 0x232e <_Z17handleLinkBusMsgsv+0x7ba>
    1c50:	81 3d       	cpi	r24, 0xD1	; 209
    1c52:	e3 e2       	ldi	r30, 0x23	; 35
    1c54:	9e 07       	cpc	r25, r30
    1c56:	28 f4       	brcc	.+10     	; 0x1c62 <_Z17handleLinkBusMsgsv+0xee>
    1c58:	8f 3c       	cpi	r24, 0xCF	; 207
    1c5a:	93 42       	sbci	r25, 0x23	; 35
    1c5c:	09 f4       	brne	.+2      	; 0x1c60 <_Z17handleLinkBusMsgsv+0xec>
    1c5e:	ef c5       	rjmp	.+3038   	; 0x283e <_Z17handleLinkBusMsgsv+0xcca>
    1c60:	08 c6       	rjmp	.+3088   	; 0x2872 <_Z17handleLinkBusMsgsv+0xcfe>
    1c62:	87 3f       	cpi	r24, 0xF7	; 247
    1c64:	23 e2       	ldi	r18, 0x23	; 35
    1c66:	92 07       	cpc	r25, r18
    1c68:	09 f4       	brne	.+2      	; 0x1c6c <_Z17handleLinkBusMsgsv+0xf8>
    1c6a:	0d c2       	rjmp	.+1050   	; 0x2086 <_Z17handleLinkBusMsgsv+0x512>
    1c6c:	8c 39       	cpi	r24, 0x9C	; 156
    1c6e:	94 42       	sbci	r25, 0x24	; 36
    1c70:	09 f4       	brne	.+2      	; 0x1c74 <_Z17handleLinkBusMsgsv+0x100>
    1c72:	f7 c5       	rjmp	.+3054   	; 0x2862 <_Z17handleLinkBusMsgsv+0xcee>
    1c74:	fe c5       	rjmp	.+3068   	; 0x2872 <_Z17handleLinkBusMsgsv+0xcfe>
    1c76:	8c 85       	ldd	r24, Y+12	; 0x0c
    1c78:	9d 85       	ldd	r25, Y+13	; 0x0d
    1c7a:	fc 01       	movw	r30, r24
    1c7c:	83 81       	ldd	r24, Z+3	; 0x03
    1c7e:	88 23       	and	r24, r24
    1c80:	09 f4       	brne	.+2      	; 0x1c84 <_Z17handleLinkBusMsgsv+0x110>
    1c82:	fd c5       	rjmp	.+3066   	; 0x287e <_Z17handleLinkBusMsgsv+0xd0a>
    1c84:	8c 85       	ldd	r24, Y+12	; 0x0c
    1c86:	9d 85       	ldd	r25, Y+13	; 0x0d
    1c88:	03 96       	adiw	r24, 0x03	; 3
    1c8a:	0e 94 fd 33 	call	0x67fa	; 0x67fa <atoi>
    1c8e:	88 8b       	std	Y+16, r24	; 0x10
    1c90:	0e 94 bc 21 	call	0x4378	; 0x4378 <_Z15linkbus_disablev>
    1c94:	10 92 0a 40 	sts	0x400A, r1	; 0x80400a <_ZL23g_WiFi_shutdown_seconds>
    1c98:	f2 c5       	rjmp	.+3044   	; 0x287e <_Z17handleLinkBusMsgsv+0xd0a>
    1c9a:	ff cf       	rjmp	.-2      	; 0x1c9a <_Z17handleLinkBusMsgsv+0x126>
    1c9c:	8c 85       	ldd	r24, Y+12	; 0x0c
    1c9e:	9d 85       	ldd	r25, Y+13	; 0x0d
    1ca0:	fc 01       	movw	r30, r24
    1ca2:	83 81       	ldd	r24, Z+3	; 0x03
    1ca4:	89 8b       	std	Y+17, r24	; 0x11
    1ca6:	81 e0       	ldi	r24, 0x01	; 1
    1ca8:	80 93 0b 40 	sts	0x400B, r24	; 0x80400b <_ZL13g_wifi_active>
    1cac:	89 89       	ldd	r24, Y+17	; 0x11
    1cae:	8a 35       	cpi	r24, 0x5A	; 90
    1cb0:	21 f4       	brne	.+8      	; 0x1cba <_Z17handleLinkBusMsgsv+0x146>
    1cb2:	88 e7       	ldi	r24, 0x78	; 120
    1cb4:	80 93 0a 40 	sts	0x400A, r24	; 0x80400a <_ZL23g_WiFi_shutdown_seconds>
    1cb8:	e4 c5       	rjmp	.+3016   	; 0x2882 <_Z17handleLinkBusMsgsv+0xd0e>
    1cba:	89 89       	ldd	r24, Y+17	; 0x11
    1cbc:	80 33       	cpi	r24, 0x30	; 48
    1cbe:	d1 f5       	brne	.+116    	; 0x1d34 <_Z17handleLinkBusMsgsv+0x1c0>
    1cc0:	90 91 ce 42 	lds	r25, 0x42CE	; 0x8042ce <g_waiting_for_next_event>
    1cc4:	81 e0       	ldi	r24, 0x01	; 1
    1cc6:	99 23       	and	r25, r25
    1cc8:	09 f4       	brne	.+2      	; 0x1ccc <_Z17handleLinkBusMsgsv+0x158>
    1cca:	80 e0       	ldi	r24, 0x00	; 0
    1ccc:	88 23       	and	r24, r24
    1cce:	39 f0       	breq	.+14     	; 0x1cde <_Z17handleLinkBusMsgsv+0x16a>
    1cd0:	44 ea       	ldi	r20, 0xA4	; 164
    1cd2:	51 e4       	ldi	r21, 0x41	; 65
    1cd4:	66 ea       	ldi	r22, 0xA6	; 166
    1cd6:	71 e4       	ldi	r23, 0x41	; 65
    1cd8:	83 e0       	ldi	r24, 0x03	; 3
    1cda:	0e 94 1f 22 	call	0x443e	; 0x443e <_Z11lb_send_msg13LBMessageTypePKcPc>
    1cde:	80 e0       	ldi	r24, 0x00	; 0
    1ce0:	90 e0       	ldi	r25, 0x00	; 0
    1ce2:	0e 94 45 01 	call	0x28a	; 0x28a <time>
    1ce6:	dc 01       	movw	r26, r24
    1ce8:	cb 01       	movw	r24, r22
    1cea:	2b 2f       	mov	r18, r27
    1cec:	2f 93       	push	r18
    1cee:	2a 2f       	mov	r18, r26
    1cf0:	2f 93       	push	r18
    1cf2:	29 2f       	mov	r18, r25
    1cf4:	2f 93       	push	r18
    1cf6:	8f 93       	push	r24
    1cf8:	8a ea       	ldi	r24, 0xAA	; 170
    1cfa:	91 e4       	ldi	r25, 0x41	; 65
    1cfc:	89 2f       	mov	r24, r25
    1cfe:	8f 93       	push	r24
    1d00:	8a ea       	ldi	r24, 0xAA	; 170
    1d02:	91 e4       	ldi	r25, 0x41	; 65
    1d04:	8f 93       	push	r24
    1d06:	81 e7       	ldi	r24, 0x71	; 113
    1d08:	92 e4       	ldi	r25, 0x42	; 66
    1d0a:	89 2f       	mov	r24, r25
    1d0c:	8f 93       	push	r24
    1d0e:	81 e7       	ldi	r24, 0x71	; 113
    1d10:	92 e4       	ldi	r25, 0x42	; 66
    1d12:	8f 93       	push	r24
    1d14:	0e 94 91 34 	call	0x6922	; 0x6922 <sprintf>
    1d18:	2d b7       	in	r18, 0x3d	; 61
    1d1a:	3e b7       	in	r19, 0x3e	; 62
    1d1c:	28 5f       	subi	r18, 0xF8	; 248
    1d1e:	3f 4f       	sbci	r19, 0xFF	; 255
    1d20:	cd bf       	out	0x3d, r28	; 61
    1d22:	de bf       	out	0x3e, r29	; 62
    1d24:	41 e7       	ldi	r20, 0x71	; 113
    1d26:	52 e4       	ldi	r21, 0x42	; 66
    1d28:	6e ea       	ldi	r22, 0xAE	; 174
    1d2a:	71 e4       	ldi	r23, 0x41	; 65
    1d2c:	83 e0       	ldi	r24, 0x03	; 3
    1d2e:	0e 94 1f 22 	call	0x443e	; 0x443e <_Z11lb_send_msg13LBMessageTypePKcPc>
    1d32:	a7 c5       	rjmp	.+2894   	; 0x2882 <_Z17handleLinkBusMsgsv+0xd0e>
    1d34:	89 89       	ldd	r24, Y+17	; 0x11
    1d36:	83 33       	cpi	r24, 0x33	; 51
    1d38:	09 f0       	breq	.+2      	; 0x1d3c <_Z17handleLinkBusMsgsv+0x1c8>
    1d3a:	a3 c5       	rjmp	.+2886   	; 0x2882 <_Z17handleLinkBusMsgsv+0xd0e>
    1d3c:	f8 94       	cli
    1d3e:	10 92 92 42 	sts	0x4292, r1	; 0x804292 <_ZL19g_wifi_enable_delay>
    1d42:	81 e0       	ldi	r24, 0x01	; 1
    1d44:	80 93 0a 40 	sts	0x400A, r24	; 0x80400a <_ZL23g_WiFi_shutdown_seconds>
    1d48:	10 92 ce 42 	sts	0x42CE, r1	; 0x8042ce <g_waiting_for_next_event>
    1d4c:	10 92 cd 42 	sts	0x42CD, r1	; 0x8042cd <g_check_for_next_event>
    1d50:	10 92 0b 40 	sts	0x400B, r1	; 0x80400b <_ZL13g_wifi_active>
    1d54:	81 e0       	ldi	r24, 0x01	; 1
    1d56:	80 93 93 42 	sts	0x4293, r24	; 0x804293 <_ZL20g_shutting_down_wifi>
    1d5a:	78 94       	sei
    1d5c:	92 c5       	rjmp	.+2852   	; 0x2882 <_Z17handleLinkBusMsgsv+0xd0e>
    1d5e:	8c 85       	ldd	r24, Y+12	; 0x0c
    1d60:	9d 85       	ldd	r25, Y+13	; 0x0d
    1d62:	fc 01       	movw	r30, r24
    1d64:	83 81       	ldd	r24, Z+3	; 0x03
    1d66:	88 23       	and	r24, r24
    1d68:	09 f4       	brne	.+2      	; 0x1d6c <_Z17handleLinkBusMsgsv+0x1f8>
    1d6a:	8d c5       	rjmp	.+2842   	; 0x2886 <_Z17handleLinkBusMsgsv+0xd12>
    1d6c:	8c 85       	ldd	r24, Y+12	; 0x0c
    1d6e:	9d 85       	ldd	r25, Y+13	; 0x0d
    1d70:	fc 01       	movw	r30, r24
    1d72:	83 81       	ldd	r24, Z+3	; 0x03
    1d74:	8d 34       	cpi	r24, 0x4D	; 77
    1d76:	a9 f4       	brne	.+42     	; 0x1da2 <_Z17handleLinkBusMsgsv+0x22e>
    1d78:	8c 85       	ldd	r24, Y+12	; 0x0c
    1d7a:	9d 85       	ldd	r25, Y+13	; 0x0d
    1d7c:	fc 01       	movw	r30, r24
    1d7e:	80 8d       	ldd	r24, Z+24	; 0x18
    1d80:	88 23       	and	r24, r24
    1d82:	79 f0       	breq	.+30     	; 0x1da2 <_Z17handleLinkBusMsgsv+0x22e>
    1d84:	8c 85       	ldd	r24, Y+12	; 0x0c
    1d86:	9d 85       	ldd	r25, Y+13	; 0x0d
    1d88:	48 96       	adiw	r24, 0x18	; 24
    1d8a:	0e 94 fd 33 	call	0x67fa	; 0x67fa <atoi>
    1d8e:	80 93 f7 42 	sts	0x42F7, r24	; 0x8042f7 <_ZZ17handleLinkBusMsgsvE6pwr_mW>
    1d92:	90 93 f8 42 	sts	0x42F8, r25	; 0x8042f8 <_ZZ17handleLinkBusMsgsvE6pwr_mW+0x1>
    1d96:	80 91 f9 42 	lds	r24, 0x42F9	; 0x8042f9 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    1d9a:	8f 5f       	subi	r24, 0xFF	; 255
    1d9c:	80 93 f9 42 	sts	0x42F9, r24	; 0x8042f9 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    1da0:	09 c0       	rjmp	.+18     	; 0x1db4 <_Z17handleLinkBusMsgsv+0x240>
    1da2:	8c 85       	ldd	r24, Y+12	; 0x0c
    1da4:	9d 85       	ldd	r25, Y+13	; 0x0d
    1da6:	03 96       	adiw	r24, 0x03	; 3
    1da8:	0e 94 fd 33 	call	0x67fa	; 0x67fa <atoi>
    1dac:	80 93 f7 42 	sts	0x42F7, r24	; 0x8042f7 <_ZZ17handleLinkBusMsgsvE6pwr_mW>
    1db0:	90 93 f8 42 	sts	0x42F8, r25	; 0x8042f8 <_ZZ17handleLinkBusMsgsvE6pwr_mW+0x1>
    1db4:	60 e0       	ldi	r22, 0x00	; 0
    1db6:	70 e0       	ldi	r23, 0x00	; 0
    1db8:	87 ef       	ldi	r24, 0xF7	; 247
    1dba:	92 e4       	ldi	r25, 0x42	; 66
    1dbc:	0e 94 d2 2d 	call	0x5ba4	; 0x5ba4 <_Z15txSetParametersPjPh>
    1dc0:	8a 8b       	std	Y+18, r24	; 0x12
    1dc2:	8a 89       	ldd	r24, Y+18	; 0x12
    1dc4:	88 23       	and	r24, r24
    1dc6:	19 f0       	breq	.+6      	; 0x1dce <_Z17handleLinkBusMsgsv+0x25a>
    1dc8:	8a 89       	ldd	r24, Y+18	; 0x12
    1dca:	80 93 86 42 	sts	0x4286, r24	; 0x804286 <_ZL17g_last_error_code>
    1dce:	80 91 f7 42 	lds	r24, 0x42F7	; 0x8042f7 <_ZZ17handleLinkBusMsgsvE6pwr_mW>
    1dd2:	90 91 f8 42 	lds	r25, 0x42F8	; 0x8042f8 <_ZZ17handleLinkBusMsgsvE6pwr_mW+0x1>
    1dd6:	29 2f       	mov	r18, r25
    1dd8:	2f 93       	push	r18
    1dda:	8f 93       	push	r24
    1ddc:	82 eb       	ldi	r24, 0xB2	; 178
    1dde:	91 e4       	ldi	r25, 0x41	; 65
    1de0:	89 2f       	mov	r24, r25
    1de2:	8f 93       	push	r24
    1de4:	82 eb       	ldi	r24, 0xB2	; 178
    1de6:	91 e4       	ldi	r25, 0x41	; 65
    1de8:	8f 93       	push	r24
    1dea:	81 e7       	ldi	r24, 0x71	; 113
    1dec:	92 e4       	ldi	r25, 0x42	; 66
    1dee:	89 2f       	mov	r24, r25
    1df0:	8f 93       	push	r24
    1df2:	81 e7       	ldi	r24, 0x71	; 113
    1df4:	92 e4       	ldi	r25, 0x42	; 66
    1df6:	8f 93       	push	r24
    1df8:	0e 94 91 34 	call	0x6922	; 0x6922 <sprintf>
    1dfc:	0f 90       	pop	r0
    1dfe:	0f 90       	pop	r0
    1e00:	0f 90       	pop	r0
    1e02:	0f 90       	pop	r0
    1e04:	0f 90       	pop	r0
    1e06:	0f 90       	pop	r0
    1e08:	41 e7       	ldi	r20, 0x71	; 113
    1e0a:	52 e4       	ldi	r21, 0x42	; 66
    1e0c:	67 eb       	ldi	r22, 0xB7	; 183
    1e0e:	71 e4       	ldi	r23, 0x41	; 65
    1e10:	83 e0       	ldi	r24, 0x03	; 3
    1e12:	0e 94 1f 22 	call	0x443e	; 0x443e <_Z11lb_send_msg13LBMessageTypePKcPc>
    1e16:	37 c5       	rjmp	.+2670   	; 0x2886 <_Z17handleLinkBusMsgsv+0xd12>
    1e18:	0e 94 47 2e 	call	0x5c8e	; 0x5c8e <_Z22storeTransmitterValuesv>
    1e1c:	47 c5       	rjmp	.+2702   	; 0x28ac <_Z17handleLinkBusMsgsv+0xd38>
    1e1e:	8c 85       	ldd	r24, Y+12	; 0x0c
    1e20:	9d 85       	ldd	r25, Y+13	; 0x0d
    1e22:	fc 01       	movw	r30, r24
    1e24:	83 81       	ldd	r24, Z+3	; 0x03
    1e26:	8b 8b       	std	Y+19, r24	; 0x13
    1e28:	8b 89       	ldd	r24, Y+19	; 0x13
    1e2a:	81 33       	cpi	r24, 0x31	; 49
    1e2c:	21 f0       	breq	.+8      	; 0x1e36 <_Z17handleLinkBusMsgsv+0x2c2>
    1e2e:	8b 89       	ldd	r24, Y+19	; 0x13
    1e30:	82 33       	cpi	r24, 0x32	; 50
    1e32:	09 f0       	breq	.+2      	; 0x1e36 <_Z17handleLinkBusMsgsv+0x2c2>
    1e34:	a7 c0       	rjmp	.+334    	; 0x1f84 <_Z17handleLinkBusMsgsv+0x410>
    1e36:	0e 94 67 2f 	call	0x5ece	; 0x5ece <_Z18txIsAntennaForBandv>
    1e3a:	88 23       	and	r24, r24
    1e3c:	31 f4       	brne	.+12     	; 0x1e4a <_Z17handleLinkBusMsgsv+0x2d6>
    1e3e:	80 91 36 40 	lds	r24, 0x4036	; 0x804036 <g_tx_power_is_zero>
    1e42:	88 23       	and	r24, r24
    1e44:	11 f4       	brne	.+4      	; 0x1e4a <_Z17handleLinkBusMsgsv+0x2d6>
    1e46:	81 e0       	ldi	r24, 0x01	; 1
    1e48:	01 c0       	rjmp	.+2      	; 0x1e4c <_Z17handleLinkBusMsgsv+0x2d8>
    1e4a:	80 e0       	ldi	r24, 0x00	; 0
    1e4c:	88 23       	and	r24, r24
    1e4e:	21 f0       	breq	.+8      	; 0x1e58 <_Z17handleLinkBusMsgsv+0x2e4>
    1e50:	87 ef       	ldi	r24, 0xF7	; 247
    1e52:	80 93 86 42 	sts	0x4286, r24	; 0x804286 <_ZL17g_last_error_code>
    1e56:	a0 c0       	rjmp	.+320    	; 0x1f98 <_Z17handleLinkBusMsgsv+0x424>
    1e58:	8b 89       	ldd	r24, Y+19	; 0x13
    1e5a:	81 33       	cpi	r24, 0x31	; 49
    1e5c:	09 f0       	breq	.+2      	; 0x1e60 <_Z17handleLinkBusMsgsv+0x2ec>
    1e5e:	64 c0       	rjmp	.+200    	; 0x1f28 <_Z17handleLinkBusMsgsv+0x3b4>
    1e60:	0e 94 67 2f 	call	0x5ece	; 0x5ece <_Z18txIsAntennaForBandv>
    1e64:	88 23       	and	r24, r24
    1e66:	21 f4       	brne	.+8      	; 0x1e70 <_Z17handleLinkBusMsgsv+0x2fc>
    1e68:	80 91 36 40 	lds	r24, 0x4036	; 0x804036 <g_tx_power_is_zero>
    1e6c:	88 23       	and	r24, r24
    1e6e:	11 f0       	breq	.+4      	; 0x1e74 <_Z17handleLinkBusMsgsv+0x300>
    1e70:	81 e0       	ldi	r24, 0x01	; 1
    1e72:	01 c0       	rjmp	.+2      	; 0x1e76 <_Z17handleLinkBusMsgsv+0x302>
    1e74:	80 e0       	ldi	r24, 0x00	; 0
    1e76:	88 23       	and	r24, r24
    1e78:	09 f4       	brne	.+2      	; 0x1e7c <_Z17handleLinkBusMsgsv+0x308>
    1e7a:	52 c0       	rjmp	.+164    	; 0x1f20 <_Z17handleLinkBusMsgsv+0x3ac>
    1e7c:	f8 94       	cli
    1e7e:	81 e0       	ldi	r24, 0x01	; 1
    1e80:	8e a7       	std	Y+46, r24	; 0x2e
    1e82:	ce 01       	movw	r24, r28
    1e84:	8e 96       	adiw	r24, 0x2e	; 46
    1e86:	40 e0       	ldi	r20, 0x00	; 0
    1e88:	50 e0       	ldi	r21, 0x00	; 0
    1e8a:	bc 01       	movw	r22, r24
    1e8c:	85 e9       	ldi	r24, 0x95	; 149
    1e8e:	92 e4       	ldi	r25, 0x42	; 66
    1e90:	0e 94 8a 23 	call	0x4714	; 0x4714 <_Z9makeMorsePcPhS0_>
    1e94:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_pattern_codespeed>
    1e98:	0e 94 71 14 	call	0x28e2	; 0x28e2 <_Z13throttleValueh>
    1e9c:	80 93 08 40 	sts	0x4008, r24	; 0x804008 <_ZL15g_code_throttle>
    1ea0:	90 93 09 40 	sts	0x4009, r25	; 0x804009 <_ZL15g_code_throttle+0x1>
    1ea4:	78 94       	sei
    1ea6:	81 e0       	ldi	r24, 0x01	; 1
    1ea8:	90 e0       	ldi	r25, 0x00	; 0
    1eaa:	a0 e0       	ldi	r26, 0x00	; 0
    1eac:	b0 e0       	ldi	r27, 0x00	; 0
    1eae:	80 93 c3 42 	sts	0x42C3, r24	; 0x8042c3 <g_event_start_time>
    1eb2:	90 93 c4 42 	sts	0x42C4, r25	; 0x8042c4 <g_event_start_time+0x1>
    1eb6:	a0 93 c5 42 	sts	0x42C5, r26	; 0x8042c5 <g_event_start_time+0x2>
    1eba:	b0 93 c6 42 	sts	0x42C6, r27	; 0x8042c6 <g_event_start_time+0x3>
    1ebe:	8f ef       	ldi	r24, 0xFF	; 255
    1ec0:	9f ef       	ldi	r25, 0xFF	; 255
    1ec2:	dc 01       	movw	r26, r24
    1ec4:	80 93 c7 42 	sts	0x42C7, r24	; 0x8042c7 <g_event_finish_time>
    1ec8:	90 93 c8 42 	sts	0x42C8, r25	; 0x8042c8 <g_event_finish_time+0x1>
    1ecc:	a0 93 c9 42 	sts	0x42C9, r26	; 0x8042c9 <g_event_finish_time+0x2>
    1ed0:	b0 93 ca 42 	sts	0x42CA, r27	; 0x8042ca <g_event_finish_time+0x3>
    1ed4:	8f e0       	ldi	r24, 0x0F	; 15
    1ed6:	97 e2       	ldi	r25, 0x27	; 39
    1ed8:	80 93 0e 40 	sts	0x400E, r24	; 0x80400e <g_on_air_seconds>
    1edc:	90 93 0f 40 	sts	0x400F, r25	; 0x80400f <g_on_air_seconds+0x1>
    1ee0:	10 92 10 40 	sts	0x4010, r1	; 0x804010 <g_off_air_seconds>
    1ee4:	10 92 11 40 	sts	0x4011, r1	; 0x804011 <g_off_air_seconds+0x1>
    1ee8:	8f e0       	ldi	r24, 0x0F	; 15
    1eea:	97 e2       	ldi	r25, 0x27	; 39
    1eec:	a0 e0       	ldi	r26, 0x00	; 0
    1eee:	b0 e0       	ldi	r27, 0x00	; 0
    1ef0:	80 93 8b 42 	sts	0x428B, r24	; 0x80428b <_ZL12g_on_the_air>
    1ef4:	90 93 8c 42 	sts	0x428C, r25	; 0x80428c <_ZL12g_on_the_air+0x1>
    1ef8:	a0 93 8d 42 	sts	0x428D, r26	; 0x80428d <_ZL12g_on_the_air+0x2>
    1efc:	b0 93 8e 42 	sts	0x428E, r27	; 0x80428e <_ZL12g_on_the_air+0x3>
    1f00:	8f ef       	ldi	r24, 0xFF	; 255
    1f02:	9f ef       	ldi	r25, 0xFF	; 255
    1f04:	80 93 8f 42 	sts	0x428F, r24	; 0x80428f <_ZL26g_sendID_seconds_countdown>
    1f08:	90 93 90 42 	sts	0x4290, r25	; 0x804290 <_ZL26g_sendID_seconds_countdown+0x1>
    1f0c:	81 e0       	ldi	r24, 0x01	; 1
    1f0e:	80 93 cc 42 	sts	0x42CC, r24	; 0x8042cc <g_event_commenced>
    1f12:	81 e0       	ldi	r24, 0x01	; 1
    1f14:	80 93 cb 42 	sts	0x42CB, r24	; 0x8042cb <g_event_enabled>
    1f18:	8d ef       	ldi	r24, 0xFD	; 253
    1f1a:	80 93 87 42 	sts	0x4287, r24	; 0x804287 <_ZL18g_last_status_code>
    1f1e:	3c c0       	rjmp	.+120    	; 0x1f98 <_Z17handleLinkBusMsgsv+0x424>
    1f20:	87 ef       	ldi	r24, 0xF7	; 247
    1f22:	80 93 86 42 	sts	0x4286, r24	; 0x804286 <_ZL17g_last_error_code>
    1f26:	38 c0       	rjmp	.+112    	; 0x1f98 <_Z17handleLinkBusMsgsv+0x424>
    1f28:	8b 89       	ldd	r24, Y+19	; 0x13
    1f2a:	82 33       	cpi	r24, 0x32	; 50
    1f2c:	a9 f5       	brne	.+106    	; 0x1f98 <_Z17handleLinkBusMsgsv+0x424>
    1f2e:	80 91 f9 42 	lds	r24, 0x42F9	; 0x8042f9 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    1f32:	8e 30       	cpi	r24, 0x0E	; 14
    1f34:	20 f4       	brcc	.+8      	; 0x1f3e <_Z17handleLinkBusMsgsv+0x3ca>
    1f36:	8d ec       	ldi	r24, 0xCD	; 205
    1f38:	80 93 86 42 	sts	0x4286, r24	; 0x804286 <_ZL17g_last_error_code>
    1f3c:	2d c0       	rjmp	.+90     	; 0x1f98 <_Z17handleLinkBusMsgsv+0x424>
    1f3e:	1f a6       	std	Y+47, r1	; 0x2f
    1f40:	ce 01       	movw	r24, r28
    1f42:	8f 96       	adiw	r24, 0x2f	; 47
    1f44:	0e 94 8f 14 	call	0x291e	; 0x291e <_Z11launchEventP2SC>
    1f48:	80 93 fa 42 	sts	0x42FA, r24	; 0x8042fa <_ZZ17handleLinkBusMsgsvE2ec>
    1f4c:	80 91 cf 42 	lds	r24, 0x42CF	; 0x8042cf <_ZL13g_go_to_sleep>
    1f50:	88 23       	and	r24, r24
    1f52:	31 f0       	breq	.+12     	; 0x1f60 <_Z17handleLinkBusMsgsv+0x3ec>
    1f54:	80 91 94 42 	lds	r24, 0x4294	; 0x804294 <_ZL11g_sleepType>
    1f58:	88 23       	and	r24, r24
    1f5a:	11 f0       	breq	.+4      	; 0x1f60 <_Z17handleLinkBusMsgsv+0x3ec>
    1f5c:	81 e0       	ldi	r24, 0x01	; 1
    1f5e:	01 c0       	rjmp	.+2      	; 0x1f62 <_Z17handleLinkBusMsgsv+0x3ee>
    1f60:	80 e0       	ldi	r24, 0x00	; 0
    1f62:	88 23       	and	r24, r24
    1f64:	29 f0       	breq	.+10     	; 0x1f70 <_Z17handleLinkBusMsgsv+0x3fc>
    1f66:	83 e0       	ldi	r24, 0x03	; 3
    1f68:	80 93 94 42 	sts	0x4294, r24	; 0x804294 <_ZL11g_sleepType>
    1f6c:	10 92 cf 42 	sts	0x42CF, r1	; 0x8042cf <_ZL13g_go_to_sleep>
    1f70:	8c e3       	ldi	r24, 0x3C	; 60
    1f72:	80 93 0a 40 	sts	0x400A, r24	; 0x80400a <_ZL23g_WiFi_shutdown_seconds>
    1f76:	80 91 fa 42 	lds	r24, 0x42FA	; 0x8042fa <_ZZ17handleLinkBusMsgsvE2ec>
    1f7a:	88 23       	and	r24, r24
    1f7c:	69 f4       	brne	.+26     	; 0x1f98 <_Z17handleLinkBusMsgsv+0x424>
    1f7e:	0e 94 47 2e 	call	0x5c8e	; 0x5c8e <_Z22storeTransmitterValuesv>
    1f82:	0a c0       	rjmp	.+20     	; 0x1f98 <_Z17handleLinkBusMsgsv+0x424>
    1f84:	8b 89       	ldd	r24, Y+19	; 0x13
    1f86:	80 33       	cpi	r24, 0x30	; 48
    1f88:	09 f0       	breq	.+2      	; 0x1f8c <_Z17handleLinkBusMsgsv+0x418>
    1f8a:	7f c4       	rjmp	.+2302   	; 0x288a <_Z17handleLinkBusMsgsv+0xd16>
    1f8c:	10 92 f9 42 	sts	0x42F9, r1	; 0x8042f9 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    1f90:	8c ee       	ldi	r24, 0xEC	; 236
    1f92:	80 93 87 42 	sts	0x4287, r24	; 0x804287 <_ZL18g_last_status_code>
    1f96:	79 c4       	rjmp	.+2290   	; 0x288a <_Z17handleLinkBusMsgsv+0xd16>
    1f98:	00 00       	nop
    1f9a:	77 c4       	rjmp	.+2286   	; 0x288a <_Z17handleLinkBusMsgsv+0xd16>
    1f9c:	1a 82       	std	Y+2, r1	; 0x02
    1f9e:	1b 82       	std	Y+3, r1	; 0x03
    1fa0:	1c 82       	std	Y+4, r1	; 0x04
    1fa2:	1d 82       	std	Y+5, r1	; 0x05
    1fa4:	8c 85       	ldd	r24, Y+12	; 0x0c
    1fa6:	9d 85       	ldd	r25, Y+13	; 0x0d
    1fa8:	fc 01       	movw	r30, r24
    1faa:	83 81       	ldd	r24, Z+3	; 0x03
    1fac:	83 35       	cpi	r24, 0x53	; 83
    1fae:	c1 f5       	brne	.+112    	; 0x2020 <_Z17handleLinkBusMsgsv+0x4ac>
    1fb0:	8c 85       	ldd	r24, Y+12	; 0x0c
    1fb2:	9d 85       	ldd	r25, Y+13	; 0x0d
    1fb4:	fc 01       	movw	r30, r24
    1fb6:	80 8d       	ldd	r24, Z+24	; 0x18
    1fb8:	88 23       	and	r24, r24
    1fba:	59 f0       	breq	.+22     	; 0x1fd2 <_Z17handleLinkBusMsgsv+0x45e>
    1fbc:	8c 85       	ldd	r24, Y+12	; 0x0c
    1fbe:	9d 85       	ldd	r25, Y+13	; 0x0d
    1fc0:	48 96       	adiw	r24, 0x18	; 24
    1fc2:	0e 94 1b 34 	call	0x6836	; 0x6836 <atol>
    1fc6:	dc 01       	movw	r26, r24
    1fc8:	cb 01       	movw	r24, r22
    1fca:	8a 83       	std	Y+2, r24	; 0x02
    1fcc:	9b 83       	std	Y+3, r25	; 0x03
    1fce:	ac 83       	std	Y+4, r26	; 0x04
    1fd0:	bd 83       	std	Y+5, r27	; 0x05
    1fd2:	8a 81       	ldd	r24, Y+2	; 0x02
    1fd4:	9b 81       	ldd	r25, Y+3	; 0x03
    1fd6:	ac 81       	ldd	r26, Y+4	; 0x04
    1fd8:	bd 81       	ldd	r27, Y+5	; 0x05
    1fda:	89 2b       	or	r24, r25
    1fdc:	8a 2b       	or	r24, r26
    1fde:	8b 2b       	or	r24, r27
    1fe0:	09 f4       	brne	.+2      	; 0x1fe4 <_Z17handleLinkBusMsgsv+0x470>
    1fe2:	55 c4       	rjmp	.+2218   	; 0x288e <_Z17handleLinkBusMsgsv+0xd1a>
    1fe4:	8a 81       	ldd	r24, Y+2	; 0x02
    1fe6:	9b 81       	ldd	r25, Y+3	; 0x03
    1fe8:	ac 81       	ldd	r26, Y+4	; 0x04
    1fea:	bd 81       	ldd	r27, Y+5	; 0x05
    1fec:	80 93 c3 42 	sts	0x42C3, r24	; 0x8042c3 <g_event_start_time>
    1ff0:	90 93 c4 42 	sts	0x42C4, r25	; 0x8042c4 <g_event_start_time+0x1>
    1ff4:	a0 93 c5 42 	sts	0x42C5, r26	; 0x8042c5 <g_event_start_time+0x2>
    1ff8:	b0 93 c6 42 	sts	0x42C6, r27	; 0x8042c6 <g_event_start_time+0x3>
    1ffc:	f8 94       	cli
    1ffe:	80 e0       	ldi	r24, 0x00	; 0
    2000:	90 e0       	ldi	r25, 0x00	; 0
    2002:	0e 94 05 1a 	call	0x340a	; 0x340a <ds3231_get_epoch>
    2006:	dc 01       	movw	r26, r24
    2008:	cb 01       	movw	r24, r22
    200a:	bc 01       	movw	r22, r24
    200c:	cd 01       	movw	r24, r26
    200e:	0e 94 39 01 	call	0x272	; 0x272 <set_system_time>
    2012:	78 94       	sei
    2014:	80 91 f9 42 	lds	r24, 0x42F9	; 0x8042f9 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    2018:	8f 5f       	subi	r24, 0xFF	; 255
    201a:	80 93 f9 42 	sts	0x42F9, r24	; 0x8042f9 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    201e:	37 c4       	rjmp	.+2158   	; 0x288e <_Z17handleLinkBusMsgsv+0xd1a>
    2020:	8c 85       	ldd	r24, Y+12	; 0x0c
    2022:	9d 85       	ldd	r25, Y+13	; 0x0d
    2024:	fc 01       	movw	r30, r24
    2026:	83 81       	ldd	r24, Z+3	; 0x03
    2028:	86 34       	cpi	r24, 0x46	; 70
    202a:	09 f0       	breq	.+2      	; 0x202e <_Z17handleLinkBusMsgsv+0x4ba>
    202c:	30 c4       	rjmp	.+2144   	; 0x288e <_Z17handleLinkBusMsgsv+0xd1a>
    202e:	8c 85       	ldd	r24, Y+12	; 0x0c
    2030:	9d 85       	ldd	r25, Y+13	; 0x0d
    2032:	fc 01       	movw	r30, r24
    2034:	80 8d       	ldd	r24, Z+24	; 0x18
    2036:	88 23       	and	r24, r24
    2038:	59 f0       	breq	.+22     	; 0x2050 <_Z17handleLinkBusMsgsv+0x4dc>
    203a:	8c 85       	ldd	r24, Y+12	; 0x0c
    203c:	9d 85       	ldd	r25, Y+13	; 0x0d
    203e:	48 96       	adiw	r24, 0x18	; 24
    2040:	0e 94 1b 34 	call	0x6836	; 0x6836 <atol>
    2044:	dc 01       	movw	r26, r24
    2046:	cb 01       	movw	r24, r22
    2048:	8a 83       	std	Y+2, r24	; 0x02
    204a:	9b 83       	std	Y+3, r25	; 0x03
    204c:	ac 83       	std	Y+4, r26	; 0x04
    204e:	bd 83       	std	Y+5, r27	; 0x05
    2050:	8a 81       	ldd	r24, Y+2	; 0x02
    2052:	9b 81       	ldd	r25, Y+3	; 0x03
    2054:	ac 81       	ldd	r26, Y+4	; 0x04
    2056:	bd 81       	ldd	r27, Y+5	; 0x05
    2058:	89 2b       	or	r24, r25
    205a:	8a 2b       	or	r24, r26
    205c:	8b 2b       	or	r24, r27
    205e:	09 f4       	brne	.+2      	; 0x2062 <_Z17handleLinkBusMsgsv+0x4ee>
    2060:	16 c4       	rjmp	.+2092   	; 0x288e <_Z17handleLinkBusMsgsv+0xd1a>
    2062:	8a 81       	ldd	r24, Y+2	; 0x02
    2064:	9b 81       	ldd	r25, Y+3	; 0x03
    2066:	ac 81       	ldd	r26, Y+4	; 0x04
    2068:	bd 81       	ldd	r27, Y+5	; 0x05
    206a:	80 93 c7 42 	sts	0x42C7, r24	; 0x8042c7 <g_event_finish_time>
    206e:	90 93 c8 42 	sts	0x42C8, r25	; 0x8042c8 <g_event_finish_time+0x1>
    2072:	a0 93 c9 42 	sts	0x42C9, r26	; 0x8042c9 <g_event_finish_time+0x2>
    2076:	b0 93 ca 42 	sts	0x42CA, r27	; 0x8042ca <g_event_finish_time+0x3>
    207a:	80 91 f9 42 	lds	r24, 0x42F9	; 0x8042f9 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    207e:	8f 5f       	subi	r24, 0xFF	; 255
    2080:	80 93 f9 42 	sts	0x42F9, r24	; 0x8042f9 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    2084:	04 c4       	rjmp	.+2056   	; 0x288e <_Z17handleLinkBusMsgsv+0xd1a>
    2086:	81 e0       	ldi	r24, 0x01	; 1
    2088:	80 93 0b 40 	sts	0x400B, r24	; 0x80400b <_ZL13g_wifi_active>
    208c:	8c 85       	ldd	r24, Y+12	; 0x0c
    208e:	9d 85       	ldd	r25, Y+13	; 0x0d
    2090:	fc 01       	movw	r30, r24
    2092:	80 81       	ld	r24, Z
    2094:	81 30       	cpi	r24, 0x01	; 1
    2096:	09 f0       	breq	.+2      	; 0x209a <_Z17handleLinkBusMsgsv+0x526>
    2098:	4b c0       	rjmp	.+150    	; 0x2130 <_Z17handleLinkBusMsgsv+0x5bc>
    209a:	8c 85       	ldd	r24, Y+12	; 0x0c
    209c:	9d 85       	ldd	r25, Y+13	; 0x0d
    209e:	fc 01       	movw	r30, r24
    20a0:	83 81       	ldd	r24, Z+3	; 0x03
    20a2:	88 23       	and	r24, r24
    20a4:	d1 f0       	breq	.+52     	; 0x20da <_Z17handleLinkBusMsgsv+0x566>
    20a6:	8c 85       	ldd	r24, Y+12	; 0x0c
    20a8:	9d 85       	ldd	r25, Y+13	; 0x0d
    20aa:	03 96       	adiw	r24, 0x03	; 3
    20ac:	44 e1       	ldi	r20, 0x14	; 20
    20ae:	50 e0       	ldi	r21, 0x00	; 0
    20b0:	bc 01       	movw	r22, r24
    20b2:	81 e7       	ldi	r24, 0x71	; 113
    20b4:	92 e4       	ldi	r25, 0x42	; 66
    20b6:	0e 94 65 34 	call	0x68ca	; 0x68ca <strncpy>
    20ba:	60 e0       	ldi	r22, 0x00	; 0
    20bc:	81 e7       	ldi	r24, 0x71	; 113
    20be:	92 e4       	ldi	r25, 0x42	; 66
    20c0:	0e 94 7a 1b 	call	0x36f4	; 0x36f4 <ds3231_set_date_time>
    20c4:	80 e0       	ldi	r24, 0x00	; 0
    20c6:	90 e0       	ldi	r25, 0x00	; 0
    20c8:	0e 94 05 1a 	call	0x340a	; 0x340a <ds3231_get_epoch>
    20cc:	dc 01       	movw	r26, r24
    20ce:	cb 01       	movw	r24, r22
    20d0:	bc 01       	movw	r22, r24
    20d2:	cd 01       	movw	r24, r26
    20d4:	0e 94 39 01 	call	0x272	; 0x272 <set_system_time>
    20d8:	dc c3       	rjmp	.+1976   	; 0x2892 <_Z17handleLinkBusMsgsv+0xd1e>
    20da:	80 e0       	ldi	r24, 0x00	; 0
    20dc:	90 e0       	ldi	r25, 0x00	; 0
    20de:	0e 94 45 01 	call	0x28a	; 0x28a <time>
    20e2:	dc 01       	movw	r26, r24
    20e4:	cb 01       	movw	r24, r22
    20e6:	2b 2f       	mov	r18, r27
    20e8:	2f 93       	push	r18
    20ea:	2a 2f       	mov	r18, r26
    20ec:	2f 93       	push	r18
    20ee:	29 2f       	mov	r18, r25
    20f0:	2f 93       	push	r18
    20f2:	8f 93       	push	r24
    20f4:	8a ea       	ldi	r24, 0xAA	; 170
    20f6:	91 e4       	ldi	r25, 0x41	; 65
    20f8:	89 2f       	mov	r24, r25
    20fa:	8f 93       	push	r24
    20fc:	8a ea       	ldi	r24, 0xAA	; 170
    20fe:	91 e4       	ldi	r25, 0x41	; 65
    2100:	8f 93       	push	r24
    2102:	81 e7       	ldi	r24, 0x71	; 113
    2104:	92 e4       	ldi	r25, 0x42	; 66
    2106:	89 2f       	mov	r24, r25
    2108:	8f 93       	push	r24
    210a:	81 e7       	ldi	r24, 0x71	; 113
    210c:	92 e4       	ldi	r25, 0x42	; 66
    210e:	8f 93       	push	r24
    2110:	0e 94 91 34 	call	0x6922	; 0x6922 <sprintf>
    2114:	2d b7       	in	r18, 0x3d	; 61
    2116:	3e b7       	in	r19, 0x3e	; 62
    2118:	28 5f       	subi	r18, 0xF8	; 248
    211a:	3f 4f       	sbci	r19, 0xFF	; 255
    211c:	cd bf       	out	0x3d, r28	; 61
    211e:	de bf       	out	0x3e, r29	; 62
    2120:	41 e7       	ldi	r20, 0x71	; 113
    2122:	52 e4       	ldi	r21, 0x42	; 66
    2124:	6e ea       	ldi	r22, 0xAE	; 174
    2126:	71 e4       	ldi	r23, 0x41	; 65
    2128:	83 e0       	ldi	r24, 0x03	; 3
    212a:	0e 94 1f 22 	call	0x443e	; 0x443e <_Z11lb_send_msg13LBMessageTypePKcPc>
    212e:	b1 c3       	rjmp	.+1890   	; 0x2892 <_Z17handleLinkBusMsgsv+0xd1e>
    2130:	8c 85       	ldd	r24, Y+12	; 0x0c
    2132:	9d 85       	ldd	r25, Y+13	; 0x0d
    2134:	fc 01       	movw	r30, r24
    2136:	80 81       	ld	r24, Z
    2138:	82 30       	cpi	r24, 0x02	; 2
    213a:	09 f0       	breq	.+2      	; 0x213e <_Z17handleLinkBusMsgsv+0x5ca>
    213c:	aa c3       	rjmp	.+1876   	; 0x2892 <_Z17handleLinkBusMsgsv+0xd1e>
    213e:	8c 85       	ldd	r24, Y+12	; 0x0c
    2140:	9d 85       	ldd	r25, Y+13	; 0x0d
    2142:	fc 01       	movw	r30, r24
    2144:	83 81       	ldd	r24, Z+3	; 0x03
    2146:	88 35       	cpi	r24, 0x58	; 88
    2148:	c9 f5       	brne	.+114    	; 0x21bc <_Z17handleLinkBusMsgsv+0x648>
    214a:	1c 8a       	std	Y+20, r1	; 0x14
    214c:	8c 85       	ldd	r24, Y+12	; 0x0c
    214e:	9d 85       	ldd	r25, Y+13	; 0x0d
    2150:	fc 01       	movw	r30, r24
    2152:	80 8d       	ldd	r24, Z+24	; 0x18
    2154:	88 23       	and	r24, r24
    2156:	51 f0       	breq	.+20     	; 0x216c <_Z17handleLinkBusMsgsv+0x5f8>
    2158:	8c 85       	ldd	r24, Y+12	; 0x0c
    215a:	9d 85       	ldd	r25, Y+13	; 0x0d
    215c:	48 96       	adiw	r24, 0x18	; 24
    215e:	0e 94 fd 33 	call	0x67fa	; 0x67fa <atoi>
    2162:	8c 8b       	std	Y+20, r24	; 0x14
    2164:	8c 89       	ldd	r24, Y+20	; 0x14
    2166:	0e 94 f9 1b 	call	0x37f2	; 0x37f2 <ds3231_set_aging>
    216a:	93 c3       	rjmp	.+1830   	; 0x2892 <_Z17handleLinkBusMsgsv+0xd1e>
    216c:	0e 94 0d 1c 	call	0x381a	; 0x381a <ds3231_get_aging>
    2170:	8c 8b       	std	Y+20, r24	; 0x14
    2172:	8c 89       	ldd	r24, Y+20	; 0x14
    2174:	08 2e       	mov	r0, r24
    2176:	00 0c       	add	r0, r0
    2178:	99 0b       	sbc	r25, r25
    217a:	29 2f       	mov	r18, r25
    217c:	2f 93       	push	r18
    217e:	8f 93       	push	r24
    2180:	8b eb       	ldi	r24, 0xBB	; 187
    2182:	91 e4       	ldi	r25, 0x41	; 65
    2184:	89 2f       	mov	r24, r25
    2186:	8f 93       	push	r24
    2188:	8b eb       	ldi	r24, 0xBB	; 187
    218a:	91 e4       	ldi	r25, 0x41	; 65
    218c:	8f 93       	push	r24
    218e:	81 e7       	ldi	r24, 0x71	; 113
    2190:	92 e4       	ldi	r25, 0x42	; 66
    2192:	89 2f       	mov	r24, r25
    2194:	8f 93       	push	r24
    2196:	81 e7       	ldi	r24, 0x71	; 113
    2198:	92 e4       	ldi	r25, 0x42	; 66
    219a:	8f 93       	push	r24
    219c:	0e 94 91 34 	call	0x6922	; 0x6922 <sprintf>
    21a0:	0f 90       	pop	r0
    21a2:	0f 90       	pop	r0
    21a4:	0f 90       	pop	r0
    21a6:	0f 90       	pop	r0
    21a8:	0f 90       	pop	r0
    21aa:	0f 90       	pop	r0
    21ac:	41 e7       	ldi	r20, 0x71	; 113
    21ae:	52 e4       	ldi	r21, 0x42	; 66
    21b0:	6e ea       	ldi	r22, 0xAE	; 174
    21b2:	71 e4       	ldi	r23, 0x41	; 65
    21b4:	83 e0       	ldi	r24, 0x03	; 3
    21b6:	0e 94 1f 22 	call	0x443e	; 0x443e <_Z11lb_send_msg13LBMessageTypePKcPc>
    21ba:	6b c3       	rjmp	.+1750   	; 0x2892 <_Z17handleLinkBusMsgsv+0xd1e>
    21bc:	80 e0       	ldi	r24, 0x00	; 0
    21be:	90 e0       	ldi	r25, 0x00	; 0
    21c0:	0e 94 05 1a 	call	0x340a	; 0x340a <ds3231_get_epoch>
    21c4:	dc 01       	movw	r26, r24
    21c6:	cb 01       	movw	r24, r22
    21c8:	8d 8b       	std	Y+21, r24	; 0x15
    21ca:	9e 8b       	std	Y+22, r25	; 0x16
    21cc:	af 8b       	std	Y+23, r26	; 0x17
    21ce:	b8 8f       	std	Y+24, r27	; 0x18
    21d0:	8d 89       	ldd	r24, Y+21	; 0x15
    21d2:	9e 89       	ldd	r25, Y+22	; 0x16
    21d4:	af 89       	ldd	r26, Y+23	; 0x17
    21d6:	b8 8d       	ldd	r27, Y+24	; 0x18
    21d8:	bc 01       	movw	r22, r24
    21da:	cd 01       	movw	r24, r26
    21dc:	0e 94 39 01 	call	0x272	; 0x272 <set_system_time>
    21e0:	80 91 fb 42 	lds	r24, 0x42FB	; 0x8042fb <_ZZ17handleLinkBusMsgsvE8lastTime>
    21e4:	90 91 fc 42 	lds	r25, 0x42FC	; 0x8042fc <_ZZ17handleLinkBusMsgsvE8lastTime+0x1>
    21e8:	a0 91 fd 42 	lds	r26, 0x42FD	; 0x8042fd <_ZZ17handleLinkBusMsgsvE8lastTime+0x2>
    21ec:	b0 91 fe 42 	lds	r27, 0x42FE	; 0x8042fe <_ZZ17handleLinkBusMsgsvE8lastTime+0x3>
    21f0:	2d 89       	ldd	r18, Y+21	; 0x15
    21f2:	3e 89       	ldd	r19, Y+22	; 0x16
    21f4:	4f 89       	ldd	r20, Y+23	; 0x17
    21f6:	58 8d       	ldd	r21, Y+24	; 0x18
    21f8:	28 17       	cp	r18, r24
    21fa:	39 07       	cpc	r19, r25
    21fc:	4a 07       	cpc	r20, r26
    21fe:	5b 07       	cpc	r21, r27
    2200:	09 f4       	brne	.+2      	; 0x2204 <_Z17handleLinkBusMsgsv+0x690>
    2202:	47 c3       	rjmp	.+1678   	; 0x2892 <_Z17handleLinkBusMsgsv+0xd1e>
    2204:	88 8d       	ldd	r24, Y+24	; 0x18
    2206:	8f 93       	push	r24
    2208:	8f 89       	ldd	r24, Y+23	; 0x17
    220a:	8f 93       	push	r24
    220c:	8e 89       	ldd	r24, Y+22	; 0x16
    220e:	8f 93       	push	r24
    2210:	8d 89       	ldd	r24, Y+21	; 0x15
    2212:	8f 93       	push	r24
    2214:	8a ea       	ldi	r24, 0xAA	; 170
    2216:	91 e4       	ldi	r25, 0x41	; 65
    2218:	89 2f       	mov	r24, r25
    221a:	8f 93       	push	r24
    221c:	8a ea       	ldi	r24, 0xAA	; 170
    221e:	91 e4       	ldi	r25, 0x41	; 65
    2220:	8f 93       	push	r24
    2222:	81 e7       	ldi	r24, 0x71	; 113
    2224:	92 e4       	ldi	r25, 0x42	; 66
    2226:	89 2f       	mov	r24, r25
    2228:	8f 93       	push	r24
    222a:	81 e7       	ldi	r24, 0x71	; 113
    222c:	92 e4       	ldi	r25, 0x42	; 66
    222e:	8f 93       	push	r24
    2230:	0e 94 91 34 	call	0x6922	; 0x6922 <sprintf>
    2234:	2d b7       	in	r18, 0x3d	; 61
    2236:	3e b7       	in	r19, 0x3e	; 62
    2238:	28 5f       	subi	r18, 0xF8	; 248
    223a:	3f 4f       	sbci	r19, 0xFF	; 255
    223c:	cd bf       	out	0x3d, r28	; 61
    223e:	de bf       	out	0x3e, r29	; 62
    2240:	41 e7       	ldi	r20, 0x71	; 113
    2242:	52 e4       	ldi	r21, 0x42	; 66
    2244:	6e ea       	ldi	r22, 0xAE	; 174
    2246:	71 e4       	ldi	r23, 0x41	; 65
    2248:	83 e0       	ldi	r24, 0x03	; 3
    224a:	0e 94 1f 22 	call	0x443e	; 0x443e <_Z11lb_send_msg13LBMessageTypePKcPc>
    224e:	8d 89       	ldd	r24, Y+21	; 0x15
    2250:	9e 89       	ldd	r25, Y+22	; 0x16
    2252:	af 89       	ldd	r26, Y+23	; 0x17
    2254:	b8 8d       	ldd	r27, Y+24	; 0x18
    2256:	80 93 fb 42 	sts	0x42FB, r24	; 0x8042fb <_ZZ17handleLinkBusMsgsvE8lastTime>
    225a:	90 93 fc 42 	sts	0x42FC, r25	; 0x8042fc <_ZZ17handleLinkBusMsgsvE8lastTime+0x1>
    225e:	a0 93 fd 42 	sts	0x42FD, r26	; 0x8042fd <_ZZ17handleLinkBusMsgsvE8lastTime+0x2>
    2262:	b0 93 fe 42 	sts	0x42FE, r27	; 0x8042fe <_ZZ17handleLinkBusMsgsvE8lastTime+0x3>
    2266:	15 c3       	rjmp	.+1578   	; 0x2892 <_Z17handleLinkBusMsgsv+0xd1e>
    2268:	80 91 f9 42 	lds	r24, 0x42F9	; 0x8042f9 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    226c:	8f 5f       	subi	r24, 0xFF	; 255
    226e:	80 93 f9 42 	sts	0x42F9, r24	; 0x8042f9 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    2272:	8c 85       	ldd	r24, Y+12	; 0x0c
    2274:	9d 85       	ldd	r25, Y+13	; 0x0d
    2276:	fc 01       	movw	r30, r24
    2278:	83 81       	ldd	r24, Z+3	; 0x03
    227a:	88 23       	and	r24, r24
    227c:	81 f1       	breq	.+96     	; 0x22de <_Z17handleLinkBusMsgsv+0x76a>
    227e:	8c 85       	ldd	r24, Y+12	; 0x0c
    2280:	9d 85       	ldd	r25, Y+13	; 0x0d
    2282:	03 96       	adiw	r24, 0x03	; 3
    2284:	44 e1       	ldi	r20, 0x14	; 20
    2286:	50 e0       	ldi	r21, 0x00	; 0
    2288:	bc 01       	movw	r22, r24
    228a:	8a ea       	ldi	r24, 0xAA	; 170
    228c:	92 e4       	ldi	r25, 0x42	; 66
    228e:	0e 94 65 34 	call	0x68ca	; 0x68ca <strncpy>
    2292:	80 91 aa 42 	lds	r24, 0x42AA	; 0x8042aa <g_messages_text+0x15>
    2296:	88 23       	and	r24, r24
    2298:	09 f4       	brne	.+2      	; 0x229c <_Z17handleLinkBusMsgsv+0x728>
    229a:	fd c2       	rjmp	.+1530   	; 0x2896 <_Z17handleLinkBusMsgsv+0xd22>
    229c:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_id_codespeed>
    22a0:	88 2f       	mov	r24, r24
    22a2:	90 e0       	ldi	r25, 0x00	; 0
    22a4:	bc 01       	movw	r22, r24
    22a6:	8a ea       	ldi	r24, 0xAA	; 170
    22a8:	92 e4       	ldi	r25, 0x42	; 66
    22aa:	0e 94 83 24 	call	0x4906	; 0x4906 <_Z26timeRequiredToSendStrAtWPMPcj>
    22ae:	8c 50       	subi	r24, 0x0C	; 12
    22b0:	9e 4f       	sbci	r25, 0xFE	; 254
    22b2:	96 95       	lsr	r25
    22b4:	87 95       	ror	r24
    22b6:	96 95       	lsr	r25
    22b8:	87 95       	ror	r24
    22ba:	96 95       	lsr	r25
    22bc:	87 95       	ror	r24
    22be:	9c 01       	movw	r18, r24
    22c0:	a5 ec       	ldi	r26, 0xC5	; 197
    22c2:	b0 e2       	ldi	r27, 0x20	; 32
    22c4:	0e 94 b3 32 	call	0x6566	; 0x6566 <__umulhisi3>
    22c8:	92 95       	swap	r25
    22ca:	82 95       	swap	r24
    22cc:	8f 70       	andi	r24, 0x0F	; 15
    22ce:	89 27       	eor	r24, r25
    22d0:	9f 70       	andi	r25, 0x0F	; 15
    22d2:	89 27       	eor	r24, r25
    22d4:	80 93 bf 42 	sts	0x42BF, r24	; 0x8042bf <g_time_needed_for_ID>
    22d8:	90 93 c0 42 	sts	0x42C0, r25	; 0x8042c0 <g_time_needed_for_ID+0x1>
    22dc:	dc c2       	rjmp	.+1464   	; 0x2896 <_Z17handleLinkBusMsgsv+0xd22>
    22de:	80 91 aa 42 	lds	r24, 0x42AA	; 0x8042aa <g_messages_text+0x15>
    22e2:	88 23       	and	r24, r24
    22e4:	09 f4       	brne	.+2      	; 0x22e8 <_Z17handleLinkBusMsgsv+0x774>
    22e6:	d7 c2       	rjmp	.+1454   	; 0x2896 <_Z17handleLinkBusMsgsv+0xd22>
    22e8:	8a ea       	ldi	r24, 0xAA	; 170
    22ea:	92 e4       	ldi	r25, 0x42	; 66
    22ec:	89 2f       	mov	r24, r25
    22ee:	8f 93       	push	r24
    22f0:	8a ea       	ldi	r24, 0xAA	; 170
    22f2:	92 e4       	ldi	r25, 0x42	; 66
    22f4:	8f 93       	push	r24
    22f6:	80 ec       	ldi	r24, 0xC0	; 192
    22f8:	91 e4       	ldi	r25, 0x41	; 65
    22fa:	89 2f       	mov	r24, r25
    22fc:	8f 93       	push	r24
    22fe:	80 ec       	ldi	r24, 0xC0	; 192
    2300:	91 e4       	ldi	r25, 0x41	; 65
    2302:	8f 93       	push	r24
    2304:	81 e7       	ldi	r24, 0x71	; 113
    2306:	92 e4       	ldi	r25, 0x42	; 66
    2308:	89 2f       	mov	r24, r25
    230a:	8f 93       	push	r24
    230c:	81 e7       	ldi	r24, 0x71	; 113
    230e:	92 e4       	ldi	r25, 0x42	; 66
    2310:	8f 93       	push	r24
    2312:	0e 94 91 34 	call	0x6922	; 0x6922 <sprintf>
    2316:	0f 90       	pop	r0
    2318:	0f 90       	pop	r0
    231a:	0f 90       	pop	r0
    231c:	0f 90       	pop	r0
    231e:	0f 90       	pop	r0
    2320:	0f 90       	pop	r0
    2322:	81 e7       	ldi	r24, 0x71	; 113
    2324:	92 e4       	ldi	r25, 0x42	; 66
    2326:	0e 94 de 21 	call	0x43bc	; 0x43bc <_Z12lb_send_textPc>
    232a:	19 82       	std	Y+1, r1	; 0x01
    232c:	b4 c2       	rjmp	.+1384   	; 0x2896 <_Z17handleLinkBusMsgsv+0xd22>
    232e:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_pattern_codespeed>
    2332:	89 8f       	std	Y+25, r24	; 0x19
    2334:	8c 85       	ldd	r24, Y+12	; 0x0c
    2336:	9d 85       	ldd	r25, Y+13	; 0x0d
    2338:	fc 01       	movw	r30, r24
    233a:	83 81       	ldd	r24, Z+3	; 0x03
    233c:	89 34       	cpi	r24, 0x49	; 73
    233e:	09 f0       	breq	.+2      	; 0x2342 <_Z17handleLinkBusMsgsv+0x7ce>
    2340:	5a c0       	rjmp	.+180    	; 0x23f6 <_Z17handleLinkBusMsgsv+0x882>
    2342:	8c 85       	ldd	r24, Y+12	; 0x0c
    2344:	9d 85       	ldd	r25, Y+13	; 0x0d
    2346:	fc 01       	movw	r30, r24
    2348:	80 8d       	ldd	r24, Z+24	; 0x18
    234a:	88 23       	and	r24, r24
    234c:	09 f4       	brne	.+2      	; 0x2350 <_Z17handleLinkBusMsgsv+0x7dc>
    234e:	a5 c2       	rjmp	.+1354   	; 0x289a <_Z17handleLinkBusMsgsv+0xd26>
    2350:	8c 85       	ldd	r24, Y+12	; 0x0c
    2352:	9d 85       	ldd	r25, Y+13	; 0x0d
    2354:	48 96       	adiw	r24, 0x18	; 24
    2356:	0e 94 1b 34 	call	0x6836	; 0x6836 <atol>
    235a:	dc 01       	movw	r26, r24
    235c:	cb 01       	movw	r24, r22
    235e:	89 8f       	std	Y+25, r24	; 0x19
    2360:	89 8d       	ldd	r24, Y+25	; 0x19
    2362:	8a 8f       	std	Y+26, r24	; 0x1a
    2364:	85 e0       	ldi	r24, 0x05	; 5
    2366:	90 e0       	ldi	r25, 0x00	; 0
    2368:	8b 8f       	std	Y+27, r24	; 0x1b
    236a:	9c 8f       	std	Y+28, r25	; 0x1c
    236c:	84 e1       	ldi	r24, 0x14	; 20
    236e:	90 e0       	ldi	r25, 0x00	; 0
    2370:	8d 8f       	std	Y+29, r24	; 0x1d
    2372:	9e 8f       	std	Y+30, r25	; 0x1e
    2374:	8a 8d       	ldd	r24, Y+26	; 0x1a
    2376:	28 2f       	mov	r18, r24
    2378:	30 e0       	ldi	r19, 0x00	; 0
    237a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    237c:	9e 8d       	ldd	r25, Y+30	; 0x1e
    237e:	82 17       	cp	r24, r18
    2380:	93 07       	cpc	r25, r19
    2382:	54 f0       	brlt	.+20     	; 0x2398 <_Z17handleLinkBusMsgsv+0x824>
    2384:	8a 8d       	ldd	r24, Y+26	; 0x1a
    2386:	88 2f       	mov	r24, r24
    2388:	90 e0       	ldi	r25, 0x00	; 0
    238a:	2b 8d       	ldd	r18, Y+27	; 0x1b
    238c:	3c 8d       	ldd	r19, Y+28	; 0x1c
    238e:	82 17       	cp	r24, r18
    2390:	93 07       	cpc	r25, r19
    2392:	24 f4       	brge	.+8      	; 0x239c <_Z17handleLinkBusMsgsv+0x828>
    2394:	c9 01       	movw	r24, r18
    2396:	02 c0       	rjmp	.+4      	; 0x239c <_Z17handleLinkBusMsgsv+0x828>
    2398:	8d 8d       	ldd	r24, Y+29	; 0x1d
    239a:	9e 8d       	ldd	r25, Y+30	; 0x1e
    239c:	80 93 0c 40 	sts	0x400C, r24	; 0x80400c <g_id_codespeed>
    23a0:	80 91 f9 42 	lds	r24, 0x42F9	; 0x8042f9 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    23a4:	8f 5f       	subi	r24, 0xFF	; 255
    23a6:	80 93 f9 42 	sts	0x42F9, r24	; 0x8042f9 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    23aa:	80 91 aa 42 	lds	r24, 0x42AA	; 0x8042aa <g_messages_text+0x15>
    23ae:	88 23       	and	r24, r24
    23b0:	09 f4       	brne	.+2      	; 0x23b4 <_Z17handleLinkBusMsgsv+0x840>
    23b2:	73 c2       	rjmp	.+1254   	; 0x289a <_Z17handleLinkBusMsgsv+0xd26>
    23b4:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_id_codespeed>
    23b8:	88 2f       	mov	r24, r24
    23ba:	90 e0       	ldi	r25, 0x00	; 0
    23bc:	bc 01       	movw	r22, r24
    23be:	8a ea       	ldi	r24, 0xAA	; 170
    23c0:	92 e4       	ldi	r25, 0x42	; 66
    23c2:	0e 94 83 24 	call	0x4906	; 0x4906 <_Z26timeRequiredToSendStrAtWPMPcj>
    23c6:	8c 50       	subi	r24, 0x0C	; 12
    23c8:	9e 4f       	sbci	r25, 0xFE	; 254
    23ca:	96 95       	lsr	r25
    23cc:	87 95       	ror	r24
    23ce:	96 95       	lsr	r25
    23d0:	87 95       	ror	r24
    23d2:	96 95       	lsr	r25
    23d4:	87 95       	ror	r24
    23d6:	9c 01       	movw	r18, r24
    23d8:	a5 ec       	ldi	r26, 0xC5	; 197
    23da:	b0 e2       	ldi	r27, 0x20	; 32
    23dc:	0e 94 b3 32 	call	0x6566	; 0x6566 <__umulhisi3>
    23e0:	92 95       	swap	r25
    23e2:	82 95       	swap	r24
    23e4:	8f 70       	andi	r24, 0x0F	; 15
    23e6:	89 27       	eor	r24, r25
    23e8:	9f 70       	andi	r25, 0x0F	; 15
    23ea:	89 27       	eor	r24, r25
    23ec:	80 93 bf 42 	sts	0x42BF, r24	; 0x8042bf <g_time_needed_for_ID>
    23f0:	90 93 c0 42 	sts	0x42C0, r25	; 0x8042c0 <g_time_needed_for_ID+0x1>
    23f4:	52 c2       	rjmp	.+1188   	; 0x289a <_Z17handleLinkBusMsgsv+0xd26>
    23f6:	8c 85       	ldd	r24, Y+12	; 0x0c
    23f8:	9d 85       	ldd	r25, Y+13	; 0x0d
    23fa:	fc 01       	movw	r30, r24
    23fc:	83 81       	ldd	r24, Z+3	; 0x03
    23fe:	80 35       	cpi	r24, 0x50	; 80
    2400:	09 f0       	breq	.+2      	; 0x2404 <_Z17handleLinkBusMsgsv+0x890>
    2402:	4b c2       	rjmp	.+1174   	; 0x289a <_Z17handleLinkBusMsgsv+0xd26>
    2404:	8c 85       	ldd	r24, Y+12	; 0x0c
    2406:	9d 85       	ldd	r25, Y+13	; 0x0d
    2408:	fc 01       	movw	r30, r24
    240a:	80 8d       	ldd	r24, Z+24	; 0x18
    240c:	88 23       	and	r24, r24
    240e:	09 f4       	brne	.+2      	; 0x2412 <_Z17handleLinkBusMsgsv+0x89e>
    2410:	44 c2       	rjmp	.+1160   	; 0x289a <_Z17handleLinkBusMsgsv+0xd26>
    2412:	8c 85       	ldd	r24, Y+12	; 0x0c
    2414:	9d 85       	ldd	r25, Y+13	; 0x0d
    2416:	48 96       	adiw	r24, 0x18	; 24
    2418:	0e 94 1b 34 	call	0x6836	; 0x6836 <atol>
    241c:	dc 01       	movw	r26, r24
    241e:	cb 01       	movw	r24, r22
    2420:	89 8f       	std	Y+25, r24	; 0x19
    2422:	89 8d       	ldd	r24, Y+25	; 0x19
    2424:	8f 8f       	std	Y+31, r24	; 0x1f
    2426:	85 e0       	ldi	r24, 0x05	; 5
    2428:	90 e0       	ldi	r25, 0x00	; 0
    242a:	88 a3       	std	Y+32, r24	; 0x20
    242c:	99 a3       	std	Y+33, r25	; 0x21
    242e:	84 e1       	ldi	r24, 0x14	; 20
    2430:	90 e0       	ldi	r25, 0x00	; 0
    2432:	8a a3       	std	Y+34, r24	; 0x22
    2434:	9b a3       	std	Y+35, r25	; 0x23
    2436:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2438:	28 2f       	mov	r18, r24
    243a:	30 e0       	ldi	r19, 0x00	; 0
    243c:	8a a1       	ldd	r24, Y+34	; 0x22
    243e:	9b a1       	ldd	r25, Y+35	; 0x23
    2440:	82 17       	cp	r24, r18
    2442:	93 07       	cpc	r25, r19
    2444:	54 f0       	brlt	.+20     	; 0x245a <_Z17handleLinkBusMsgsv+0x8e6>
    2446:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2448:	88 2f       	mov	r24, r24
    244a:	90 e0       	ldi	r25, 0x00	; 0
    244c:	28 a1       	ldd	r18, Y+32	; 0x20
    244e:	39 a1       	ldd	r19, Y+33	; 0x21
    2450:	82 17       	cp	r24, r18
    2452:	93 07       	cpc	r25, r19
    2454:	24 f4       	brge	.+8      	; 0x245e <_Z17handleLinkBusMsgsv+0x8ea>
    2456:	c9 01       	movw	r24, r18
    2458:	02 c0       	rjmp	.+4      	; 0x245e <_Z17handleLinkBusMsgsv+0x8ea>
    245a:	8a a1       	ldd	r24, Y+34	; 0x22
    245c:	9b a1       	ldd	r25, Y+35	; 0x23
    245e:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_pattern_codespeed>
    2462:	80 91 f9 42 	lds	r24, 0x42F9	; 0x8042f9 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    2466:	8f 5f       	subi	r24, 0xFF	; 255
    2468:	80 93 f9 42 	sts	0x42F9, r24	; 0x8042f9 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    246c:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_pattern_codespeed>
    2470:	0e 94 71 14 	call	0x28e2	; 0x28e2 <_Z13throttleValueh>
    2474:	80 93 08 40 	sts	0x4008, r24	; 0x804008 <_ZL15g_code_throttle>
    2478:	90 93 09 40 	sts	0x4009, r25	; 0x804009 <_ZL15g_code_throttle+0x1>
    247c:	0e c2       	rjmp	.+1052   	; 0x289a <_Z17handleLinkBusMsgsv+0xd26>
    247e:	1c a2       	std	Y+36, r1	; 0x24
    2480:	1d a2       	std	Y+37, r1	; 0x25
    2482:	8c 85       	ldd	r24, Y+12	; 0x0c
    2484:	9d 85       	ldd	r25, Y+13	; 0x0d
    2486:	fc 01       	movw	r30, r24
    2488:	83 81       	ldd	r24, Z+3	; 0x03
    248a:	80 33       	cpi	r24, 0x30	; 48
    248c:	e1 f4       	brne	.+56     	; 0x24c6 <_Z17handleLinkBusMsgsv+0x952>
    248e:	8c 85       	ldd	r24, Y+12	; 0x0c
    2490:	9d 85       	ldd	r25, Y+13	; 0x0d
    2492:	fc 01       	movw	r30, r24
    2494:	80 8d       	ldd	r24, Z+24	; 0x18
    2496:	88 23       	and	r24, r24
    2498:	09 f4       	brne	.+2      	; 0x249c <_Z17handleLinkBusMsgsv+0x928>
    249a:	01 c2       	rjmp	.+1026   	; 0x289e <_Z17handleLinkBusMsgsv+0xd2a>
    249c:	8c 85       	ldd	r24, Y+12	; 0x0c
    249e:	9d 85       	ldd	r25, Y+13	; 0x0d
    24a0:	48 96       	adiw	r24, 0x18	; 24
    24a2:	0e 94 1b 34 	call	0x6836	; 0x6836 <atol>
    24a6:	dc 01       	movw	r26, r24
    24a8:	cb 01       	movw	r24, r22
    24aa:	8c a3       	std	Y+36, r24	; 0x24
    24ac:	9d a3       	std	Y+37, r25	; 0x25
    24ae:	8c a1       	ldd	r24, Y+36	; 0x24
    24b0:	9d a1       	ldd	r25, Y+37	; 0x25
    24b2:	80 93 10 40 	sts	0x4010, r24	; 0x804010 <g_off_air_seconds>
    24b6:	90 93 11 40 	sts	0x4011, r25	; 0x804011 <g_off_air_seconds+0x1>
    24ba:	80 91 f9 42 	lds	r24, 0x42F9	; 0x8042f9 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    24be:	8f 5f       	subi	r24, 0xFF	; 255
    24c0:	80 93 f9 42 	sts	0x42F9, r24	; 0x8042f9 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    24c4:	ec c1       	rjmp	.+984    	; 0x289e <_Z17handleLinkBusMsgsv+0xd2a>
    24c6:	8c 85       	ldd	r24, Y+12	; 0x0c
    24c8:	9d 85       	ldd	r25, Y+13	; 0x0d
    24ca:	fc 01       	movw	r30, r24
    24cc:	83 81       	ldd	r24, Z+3	; 0x03
    24ce:	81 33       	cpi	r24, 0x31	; 49
    24d0:	e1 f4       	brne	.+56     	; 0x250a <_Z17handleLinkBusMsgsv+0x996>
    24d2:	8c 85       	ldd	r24, Y+12	; 0x0c
    24d4:	9d 85       	ldd	r25, Y+13	; 0x0d
    24d6:	fc 01       	movw	r30, r24
    24d8:	80 8d       	ldd	r24, Z+24	; 0x18
    24da:	88 23       	and	r24, r24
    24dc:	09 f4       	brne	.+2      	; 0x24e0 <_Z17handleLinkBusMsgsv+0x96c>
    24de:	df c1       	rjmp	.+958    	; 0x289e <_Z17handleLinkBusMsgsv+0xd2a>
    24e0:	8c 85       	ldd	r24, Y+12	; 0x0c
    24e2:	9d 85       	ldd	r25, Y+13	; 0x0d
    24e4:	48 96       	adiw	r24, 0x18	; 24
    24e6:	0e 94 1b 34 	call	0x6836	; 0x6836 <atol>
    24ea:	dc 01       	movw	r26, r24
    24ec:	cb 01       	movw	r24, r22
    24ee:	8c a3       	std	Y+36, r24	; 0x24
    24f0:	9d a3       	std	Y+37, r25	; 0x25
    24f2:	8c a1       	ldd	r24, Y+36	; 0x24
    24f4:	9d a1       	ldd	r25, Y+37	; 0x25
    24f6:	80 93 0e 40 	sts	0x400E, r24	; 0x80400e <g_on_air_seconds>
    24fa:	90 93 0f 40 	sts	0x400F, r25	; 0x80400f <g_on_air_seconds+0x1>
    24fe:	80 91 f9 42 	lds	r24, 0x42F9	; 0x8042f9 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    2502:	8f 5f       	subi	r24, 0xFF	; 255
    2504:	80 93 f9 42 	sts	0x42F9, r24	; 0x8042f9 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    2508:	ca c1       	rjmp	.+916    	; 0x289e <_Z17handleLinkBusMsgsv+0xd2a>
    250a:	8c 85       	ldd	r24, Y+12	; 0x0c
    250c:	9d 85       	ldd	r25, Y+13	; 0x0d
    250e:	fc 01       	movw	r30, r24
    2510:	83 81       	ldd	r24, Z+3	; 0x03
    2512:	89 34       	cpi	r24, 0x49	; 73
    2514:	e1 f4       	brne	.+56     	; 0x254e <_Z17handleLinkBusMsgsv+0x9da>
    2516:	8c 85       	ldd	r24, Y+12	; 0x0c
    2518:	9d 85       	ldd	r25, Y+13	; 0x0d
    251a:	fc 01       	movw	r30, r24
    251c:	80 8d       	ldd	r24, Z+24	; 0x18
    251e:	88 23       	and	r24, r24
    2520:	09 f4       	brne	.+2      	; 0x2524 <_Z17handleLinkBusMsgsv+0x9b0>
    2522:	bd c1       	rjmp	.+890    	; 0x289e <_Z17handleLinkBusMsgsv+0xd2a>
    2524:	8c 85       	ldd	r24, Y+12	; 0x0c
    2526:	9d 85       	ldd	r25, Y+13	; 0x0d
    2528:	48 96       	adiw	r24, 0x18	; 24
    252a:	0e 94 1b 34 	call	0x6836	; 0x6836 <atol>
    252e:	dc 01       	movw	r26, r24
    2530:	cb 01       	movw	r24, r22
    2532:	8c a3       	std	Y+36, r24	; 0x24
    2534:	9d a3       	std	Y+37, r25	; 0x25
    2536:	8c a1       	ldd	r24, Y+36	; 0x24
    2538:	9d a1       	ldd	r25, Y+37	; 0x25
    253a:	80 93 12 40 	sts	0x4012, r24	; 0x804012 <g_ID_period_seconds>
    253e:	90 93 13 40 	sts	0x4013, r25	; 0x804013 <g_ID_period_seconds+0x1>
    2542:	80 91 f9 42 	lds	r24, 0x42F9	; 0x8042f9 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    2546:	8f 5f       	subi	r24, 0xFF	; 255
    2548:	80 93 f9 42 	sts	0x42F9, r24	; 0x8042f9 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    254c:	a8 c1       	rjmp	.+848    	; 0x289e <_Z17handleLinkBusMsgsv+0xd2a>
    254e:	8c 85       	ldd	r24, Y+12	; 0x0c
    2550:	9d 85       	ldd	r25, Y+13	; 0x0d
    2552:	fc 01       	movw	r30, r24
    2554:	83 81       	ldd	r24, Z+3	; 0x03
    2556:	84 34       	cpi	r24, 0x44	; 68
    2558:	09 f0       	breq	.+2      	; 0x255c <_Z17handleLinkBusMsgsv+0x9e8>
    255a:	a1 c1       	rjmp	.+834    	; 0x289e <_Z17handleLinkBusMsgsv+0xd2a>
    255c:	8c 85       	ldd	r24, Y+12	; 0x0c
    255e:	9d 85       	ldd	r25, Y+13	; 0x0d
    2560:	fc 01       	movw	r30, r24
    2562:	80 8d       	ldd	r24, Z+24	; 0x18
    2564:	88 23       	and	r24, r24
    2566:	09 f4       	brne	.+2      	; 0x256a <_Z17handleLinkBusMsgsv+0x9f6>
    2568:	9a c1       	rjmp	.+820    	; 0x289e <_Z17handleLinkBusMsgsv+0xd2a>
    256a:	8c 85       	ldd	r24, Y+12	; 0x0c
    256c:	9d 85       	ldd	r25, Y+13	; 0x0d
    256e:	48 96       	adiw	r24, 0x18	; 24
    2570:	0e 94 1b 34 	call	0x6836	; 0x6836 <atol>
    2574:	dc 01       	movw	r26, r24
    2576:	cb 01       	movw	r24, r22
    2578:	8c a3       	std	Y+36, r24	; 0x24
    257a:	9d a3       	std	Y+37, r25	; 0x25
    257c:	8c a1       	ldd	r24, Y+36	; 0x24
    257e:	9d a1       	ldd	r25, Y+37	; 0x25
    2580:	80 93 c1 42 	sts	0x42C1, r24	; 0x8042c1 <g_intra_cycle_delay_time>
    2584:	90 93 c2 42 	sts	0x42C2, r25	; 0x8042c2 <g_intra_cycle_delay_time+0x1>
    2588:	80 91 f9 42 	lds	r24, 0x42F9	; 0x8042f9 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    258c:	8f 5f       	subi	r24, 0xFF	; 255
    258e:	80 93 f9 42 	sts	0x42F9, r24	; 0x8042f9 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    2592:	85 c1       	rjmp	.+778    	; 0x289e <_Z17handleLinkBusMsgsv+0xd2a>
    2594:	8c 85       	ldd	r24, Y+12	; 0x0c
    2596:	9d 85       	ldd	r25, Y+13	; 0x0d
    2598:	fc 01       	movw	r30, r24
    259a:	83 81       	ldd	r24, Z+3	; 0x03
    259c:	88 23       	and	r24, r24
    259e:	09 f4       	brne	.+2      	; 0x25a2 <_Z17handleLinkBusMsgsv+0xa2e>
    25a0:	80 c1       	rjmp	.+768    	; 0x28a2 <_Z17handleLinkBusMsgsv+0xd2e>
    25a2:	8c 85       	ldd	r24, Y+12	; 0x0c
    25a4:	9d 85       	ldd	r25, Y+13	; 0x0d
    25a6:	03 96       	adiw	r24, 0x03	; 3
    25a8:	44 e1       	ldi	r20, 0x14	; 20
    25aa:	50 e0       	ldi	r21, 0x00	; 0
    25ac:	bc 01       	movw	r22, r24
    25ae:	85 e9       	ldi	r24, 0x95	; 149
    25b0:	92 e4       	ldi	r25, 0x42	; 66
    25b2:	0e 94 65 34 	call	0x68ca	; 0x68ca <strncpy>
    25b6:	80 91 f9 42 	lds	r24, 0x42F9	; 0x8042f9 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    25ba:	8f 5f       	subi	r24, 0xFF	; 255
    25bc:	80 93 f9 42 	sts	0x42F9, r24	; 0x8042f9 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    25c0:	70 c1       	rjmp	.+736    	; 0x28a2 <_Z17handleLinkBusMsgsv+0xd2e>
    25c2:	1e 82       	std	Y+6, r1	; 0x06
    25c4:	1f 82       	std	Y+7, r1	; 0x07
    25c6:	18 86       	std	Y+8, r1	; 0x08
    25c8:	19 86       	std	Y+9, r1	; 0x09
    25ca:	8c 85       	ldd	r24, Y+12	; 0x0c
    25cc:	9d 85       	ldd	r25, Y+13	; 0x0d
    25ce:	fc 01       	movw	r30, r24
    25d0:	83 81       	ldd	r24, Z+3	; 0x03
    25d2:	88 23       	and	r24, r24
    25d4:	a9 f1       	breq	.+106    	; 0x2640 <_Z17handleLinkBusMsgsv+0xacc>
    25d6:	8c 85       	ldd	r24, Y+12	; 0x0c
    25d8:	9d 85       	ldd	r25, Y+13	; 0x0d
    25da:	03 96       	adiw	r24, 0x03	; 3
    25dc:	0e 94 1b 34 	call	0x6836	; 0x6836 <atol>
    25e0:	dc 01       	movw	r26, r24
    25e2:	cb 01       	movw	r24, r22
    25e4:	80 93 ff 42 	sts	0x42FF, r24	; 0x8042ff <_ZZ17handleLinkBusMsgsvE1f>
    25e8:	90 93 00 43 	sts	0x4300, r25	; 0x804300 <_ZZ17handleLinkBusMsgsvE1f+0x1>
    25ec:	a0 93 01 43 	sts	0x4301, r26	; 0x804301 <_ZZ17handleLinkBusMsgsvE1f+0x2>
    25f0:	b0 93 02 43 	sts	0x4302, r27	; 0x804302 <_ZZ17handleLinkBusMsgsvE1f+0x3>
    25f4:	80 91 ff 42 	lds	r24, 0x42FF	; 0x8042ff <_ZZ17handleLinkBusMsgsvE1f>
    25f8:	90 91 00 43 	lds	r25, 0x4300	; 0x804300 <_ZZ17handleLinkBusMsgsvE1f+0x1>
    25fc:	a0 91 01 43 	lds	r26, 0x4301	; 0x804301 <_ZZ17handleLinkBusMsgsvE1f+0x2>
    2600:	b0 91 02 43 	lds	r27, 0x4302	; 0x804302 <_ZZ17handleLinkBusMsgsvE1f+0x3>
    2604:	88 ab       	std	Y+48, r24	; 0x30
    2606:	99 ab       	std	Y+49, r25	; 0x31
    2608:	aa ab       	std	Y+50, r26	; 0x32
    260a:	bb ab       	std	Y+51, r27	; 0x33
    260c:	ce 01       	movw	r24, r28
    260e:	c0 96       	adiw	r24, 0x30	; 48
    2610:	61 e0       	ldi	r22, 0x01	; 1
    2612:	0e 94 74 2d 	call	0x5ae8	; 0x5ae8 <_Z14txSetFrequencyPmh>
    2616:	98 2f       	mov	r25, r24
    2618:	81 e0       	ldi	r24, 0x01	; 1
    261a:	99 23       	and	r25, r25
    261c:	09 f4       	brne	.+2      	; 0x2620 <_Z17handleLinkBusMsgsv+0xaac>
    261e:	80 e0       	ldi	r24, 0x00	; 0
    2620:	88 23       	and	r24, r24
    2622:	b1 f0       	breq	.+44     	; 0x2650 <_Z17handleLinkBusMsgsv+0xadc>
    2624:	88 a9       	ldd	r24, Y+48	; 0x30
    2626:	99 a9       	ldd	r25, Y+49	; 0x31
    2628:	aa a9       	ldd	r26, Y+50	; 0x32
    262a:	bb a9       	ldd	r27, Y+51	; 0x33
    262c:	8e 83       	std	Y+6, r24	; 0x06
    262e:	9f 83       	std	Y+7, r25	; 0x07
    2630:	a8 87       	std	Y+8, r26	; 0x08
    2632:	b9 87       	std	Y+9, r27	; 0x09
    2634:	80 91 f9 42 	lds	r24, 0x42F9	; 0x8042f9 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    2638:	8f 5f       	subi	r24, 0xFF	; 255
    263a:	80 93 f9 42 	sts	0x42F9, r24	; 0x8042f9 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    263e:	08 c0       	rjmp	.+16     	; 0x2650 <_Z17handleLinkBusMsgsv+0xadc>
    2640:	0e 94 a2 2d 	call	0x5b44	; 0x5b44 <_Z14txGetFrequencyv>
    2644:	dc 01       	movw	r26, r24
    2646:	cb 01       	movw	r24, r22
    2648:	8e 83       	std	Y+6, r24	; 0x06
    264a:	9f 83       	std	Y+7, r25	; 0x07
    264c:	a8 87       	std	Y+8, r26	; 0x08
    264e:	b9 87       	std	Y+9, r27	; 0x09
    2650:	8e 81       	ldd	r24, Y+6	; 0x06
    2652:	9f 81       	ldd	r25, Y+7	; 0x07
    2654:	a8 85       	ldd	r26, Y+8	; 0x08
    2656:	b9 85       	ldd	r27, Y+9	; 0x09
    2658:	89 2b       	or	r24, r25
    265a:	8a 2b       	or	r24, r26
    265c:	8b 2b       	or	r24, r27
    265e:	09 f4       	brne	.+2      	; 0x2662 <_Z17handleLinkBusMsgsv+0xaee>
    2660:	22 c1       	rjmp	.+580    	; 0x28a6 <_Z17handleLinkBusMsgsv+0xd32>
    2662:	89 85       	ldd	r24, Y+9	; 0x09
    2664:	8f 93       	push	r24
    2666:	88 85       	ldd	r24, Y+8	; 0x08
    2668:	8f 93       	push	r24
    266a:	8f 81       	ldd	r24, Y+7	; 0x07
    266c:	8f 93       	push	r24
    266e:	8e 81       	ldd	r24, Y+6	; 0x06
    2670:	8f 93       	push	r24
    2672:	89 ec       	ldi	r24, 0xC9	; 201
    2674:	91 e4       	ldi	r25, 0x41	; 65
    2676:	89 2f       	mov	r24, r25
    2678:	8f 93       	push	r24
    267a:	89 ec       	ldi	r24, 0xC9	; 201
    267c:	91 e4       	ldi	r25, 0x41	; 65
    267e:	8f 93       	push	r24
    2680:	81 e7       	ldi	r24, 0x71	; 113
    2682:	92 e4       	ldi	r25, 0x42	; 66
    2684:	89 2f       	mov	r24, r25
    2686:	8f 93       	push	r24
    2688:	81 e7       	ldi	r24, 0x71	; 113
    268a:	92 e4       	ldi	r25, 0x42	; 66
    268c:	8f 93       	push	r24
    268e:	0e 94 91 34 	call	0x6922	; 0x6922 <sprintf>
    2692:	2d b7       	in	r18, 0x3d	; 61
    2694:	3e b7       	in	r19, 0x3e	; 62
    2696:	28 5f       	subi	r18, 0xF8	; 248
    2698:	3f 4f       	sbci	r19, 0xFF	; 255
    269a:	cd bf       	out	0x3d, r28	; 61
    269c:	de bf       	out	0x3e, r29	; 62
    269e:	41 e7       	ldi	r20, 0x71	; 113
    26a0:	52 e4       	ldi	r21, 0x42	; 66
    26a2:	6e ec       	ldi	r22, 0xCE	; 206
    26a4:	71 e4       	ldi	r23, 0x41	; 65
    26a6:	83 e0       	ldi	r24, 0x03	; 3
    26a8:	0e 94 1f 22 	call	0x443e	; 0x443e <_Z11lb_send_msg13LBMessageTypePKcPc>
    26ac:	fc c0       	rjmp	.+504    	; 0x28a6 <_Z17handleLinkBusMsgsv+0xd32>
    26ae:	80 91 d5 42 	lds	r24, 0x42D5	; 0x8042d5 <_ZL22g_lastConversionResult>
    26b2:	90 91 d6 42 	lds	r25, 0x42D6	; 0x8042d6 <_ZL22g_lastConversionResult+0x1>
    26b6:	21 e0       	ldi	r18, 0x01	; 1
    26b8:	8d 38       	cpi	r24, 0x8D	; 141
    26ba:	92 40       	sbci	r25, 0x02	; 2
    26bc:	08 f4       	brcc	.+2      	; 0x26c0 <_Z17handleLinkBusMsgsv+0xb4c>
    26be:	20 e0       	ldi	r18, 0x00	; 0
    26c0:	22 23       	and	r18, r18
    26c2:	09 f4       	brne	.+2      	; 0x26c6 <_Z17handleLinkBusMsgsv+0xb52>
    26c4:	7c c0       	rjmp	.+248    	; 0x27be <_Z17handleLinkBusMsgsv+0xc4a>
    26c6:	80 91 d5 42 	lds	r24, 0x42D5	; 0x8042d5 <_ZL22g_lastConversionResult>
    26ca:	90 91 d6 42 	lds	r25, 0x42D6	; 0x8042d6 <_ZL22g_lastConversionResult+0x1>
    26ce:	cc 01       	movw	r24, r24
    26d0:	a0 e0       	ldi	r26, 0x00	; 0
    26d2:	b0 e0       	ldi	r27, 0x00	; 0
    26d4:	9c 01       	movw	r18, r24
    26d6:	ad 01       	movw	r20, r26
    26d8:	60 ea       	ldi	r22, 0xA0	; 160
    26da:	78 e6       	ldi	r23, 0x68	; 104
    26dc:	86 e0       	ldi	r24, 0x06	; 6
    26de:	90 e0       	ldi	r25, 0x00	; 0
    26e0:	0e 94 31 32 	call	0x6462	; 0x6462 <__mulsi3>
    26e4:	dc 01       	movw	r26, r24
    26e6:	cb 01       	movw	r24, r22
    26e8:	7c 01       	movw	r14, r24
    26ea:	8d 01       	movw	r16, r26
    26ec:	ed e7       	ldi	r30, 0x7D	; 125
    26ee:	fe 1a       	sub	r15, r30
    26f0:	0c 40       	sbci	r16, 0x0C	; 12
    26f2:	1e 4f       	sbci	r17, 0xFE	; 254
    26f4:	80 91 16 40 	lds	r24, 0x4016	; 0x804016 <g_battery_empty_mV>
    26f8:	90 91 17 40 	lds	r25, 0x4017	; 0x804017 <g_battery_empty_mV+0x1>
    26fc:	cc 01       	movw	r24, r24
    26fe:	a0 e0       	ldi	r26, 0x00	; 0
    2700:	b0 e0       	ldi	r27, 0x00	; 0
    2702:	9c 01       	movw	r18, r24
    2704:	ad 01       	movw	r20, r26
    2706:	64 e6       	ldi	r22, 0x64	; 100
    2708:	70 e7       	ldi	r23, 0x70	; 112
    270a:	8e ef       	ldi	r24, 0xFE	; 254
    270c:	9f ef       	ldi	r25, 0xFF	; 255
    270e:	0e 94 31 32 	call	0x6462	; 0x6462 <__mulsi3>
    2712:	dc 01       	movw	r26, r24
    2714:	cb 01       	movw	r24, r22
    2716:	e8 0e       	add	r14, r24
    2718:	f9 1e       	adc	r15, r25
    271a:	0a 1f       	adc	r16, r26
    271c:	1b 1f       	adc	r17, r27
    271e:	80 91 16 40 	lds	r24, 0x4016	; 0x804016 <g_battery_empty_mV>
    2722:	90 91 17 40 	lds	r25, 0x4017	; 0x804017 <g_battery_empty_mV+0x1>
    2726:	cc 01       	movw	r24, r24
    2728:	a0 e0       	ldi	r26, 0x00	; 0
    272a:	b0 e0       	ldi	r27, 0x00	; 0
    272c:	28 e6       	ldi	r18, 0x68	; 104
    272e:	30 e1       	ldi	r19, 0x10	; 16
    2730:	40 e0       	ldi	r20, 0x00	; 0
    2732:	50 e0       	ldi	r21, 0x00	; 0
    2734:	28 1b       	sub	r18, r24
    2736:	39 0b       	sbc	r19, r25
    2738:	4a 0b       	sbc	r20, r26
    273a:	5b 0b       	sbc	r21, r27
    273c:	8f ef       	ldi	r24, 0xFF	; 255
    273e:	93 e0       	ldi	r25, 0x03	; 3
    2740:	dc 01       	movw	r26, r24
    2742:	0e 94 c9 32 	call	0x6592	; 0x6592 <__muluhisi3>
    2746:	9b 01       	movw	r18, r22
    2748:	ac 01       	movw	r20, r24
    274a:	c8 01       	movw	r24, r16
    274c:	b7 01       	movw	r22, r14
    274e:	0e 94 8b 32 	call	0x6516	; 0x6516 <__divmodsi4>
    2752:	da 01       	movw	r26, r20
    2754:	c9 01       	movw	r24, r18
    2756:	8e a3       	std	Y+38, r24	; 0x26
    2758:	9f a3       	std	Y+39, r25	; 0x27
    275a:	a8 a7       	std	Y+40, r26	; 0x28
    275c:	b9 a7       	std	Y+41, r27	; 0x29
    275e:	1a a6       	std	Y+42, r1	; 0x2a
    2760:	1b a6       	std	Y+43, r1	; 0x2b
    2762:	84 e6       	ldi	r24, 0x64	; 100
    2764:	90 e0       	ldi	r25, 0x00	; 0
    2766:	8c a7       	std	Y+44, r24	; 0x2c
    2768:	9d a7       	std	Y+45, r25	; 0x2d
    276a:	8c a5       	ldd	r24, Y+44	; 0x2c
    276c:	9d a5       	ldd	r25, Y+45	; 0x2d
    276e:	9c 01       	movw	r18, r24
    2770:	99 0f       	add	r25, r25
    2772:	44 0b       	sbc	r20, r20
    2774:	55 0b       	sbc	r21, r21
    2776:	8e a1       	ldd	r24, Y+38	; 0x26
    2778:	9f a1       	ldd	r25, Y+39	; 0x27
    277a:	a8 a5       	ldd	r26, Y+40	; 0x28
    277c:	b9 a5       	ldd	r27, Y+41	; 0x29
    277e:	28 17       	cp	r18, r24
    2780:	39 07       	cpc	r19, r25
    2782:	4a 07       	cpc	r20, r26
    2784:	5b 07       	cpc	r21, r27
    2786:	3c f4       	brge	.+14     	; 0x2796 <_Z17handleLinkBusMsgsv+0xc22>
    2788:	8c a5       	ldd	r24, Y+44	; 0x2c
    278a:	9d a5       	ldd	r25, Y+45	; 0x2d
    278c:	09 2e       	mov	r0, r25
    278e:	00 0c       	add	r0, r0
    2790:	aa 0b       	sbc	r26, r26
    2792:	bb 0b       	sbc	r27, r27
    2794:	11 c0       	rjmp	.+34     	; 0x27b8 <_Z17handleLinkBusMsgsv+0xc44>
    2796:	8a a5       	ldd	r24, Y+42	; 0x2a
    2798:	9b a5       	ldd	r25, Y+43	; 0x2b
    279a:	09 2e       	mov	r0, r25
    279c:	00 0c       	add	r0, r0
    279e:	aa 0b       	sbc	r26, r26
    27a0:	bb 0b       	sbc	r27, r27
    27a2:	2e a1       	ldd	r18, Y+38	; 0x26
    27a4:	3f a1       	ldd	r19, Y+39	; 0x27
    27a6:	48 a5       	ldd	r20, Y+40	; 0x28
    27a8:	59 a5       	ldd	r21, Y+41	; 0x29
    27aa:	82 17       	cp	r24, r18
    27ac:	93 07       	cpc	r25, r19
    27ae:	a4 07       	cpc	r26, r20
    27b0:	b5 07       	cpc	r27, r21
    27b2:	14 f4       	brge	.+4      	; 0x27b8 <_Z17handleLinkBusMsgsv+0xc44>
    27b4:	da 01       	movw	r26, r20
    27b6:	c9 01       	movw	r24, r18
    27b8:	8a 87       	std	Y+10, r24	; 0x0a
    27ba:	9b 87       	std	Y+11, r25	; 0x0b
    27bc:	2f c0       	rjmp	.+94     	; 0x281c <_Z17handleLinkBusMsgsv+0xca8>
    27be:	80 91 d9 42 	lds	r24, 0x42D9	; 0x8042d9 <_ZL22g_lastConversionResult+0x4>
    27c2:	90 91 da 42 	lds	r25, 0x42DA	; 0x8042da <_ZL22g_lastConversionResult+0x5>
    27c6:	9c 01       	movw	r18, r24
    27c8:	40 e0       	ldi	r20, 0x00	; 0
    27ca:	50 e0       	ldi	r21, 0x00	; 0
    27cc:	da 01       	movw	r26, r20
    27ce:	c9 01       	movw	r24, r18
    27d0:	88 0f       	add	r24, r24
    27d2:	99 1f       	adc	r25, r25
    27d4:	aa 1f       	adc	r26, r26
    27d6:	bb 1f       	adc	r27, r27
    27d8:	88 0f       	add	r24, r24
    27da:	99 1f       	adc	r25, r25
    27dc:	aa 1f       	adc	r26, r26
    27de:	bb 1f       	adc	r27, r27
    27e0:	88 0f       	add	r24, r24
    27e2:	99 1f       	adc	r25, r25
    27e4:	aa 1f       	adc	r26, r26
    27e6:	bb 1f       	adc	r27, r27
    27e8:	82 1b       	sub	r24, r18
    27ea:	93 0b       	sbc	r25, r19
    27ec:	a4 0b       	sbc	r26, r20
    27ee:	b5 0b       	sbc	r27, r21
    27f0:	88 0f       	add	r24, r24
    27f2:	99 1f       	adc	r25, r25
    27f4:	aa 1f       	adc	r26, r26
    27f6:	bb 1f       	adc	r27, r27
    27f8:	8a 5c       	subi	r24, 0xCA	; 202
    27fa:	9e 4f       	sbci	r25, 0xFE	; 254
    27fc:	af 4f       	sbci	r26, 0xFF	; 255
    27fe:	bf 4f       	sbci	r27, 0xFF	; 255
    2800:	24 e6       	ldi	r18, 0x64	; 100
    2802:	30 e0       	ldi	r19, 0x00	; 0
    2804:	40 e0       	ldi	r20, 0x00	; 0
    2806:	50 e0       	ldi	r21, 0x00	; 0
    2808:	bc 01       	movw	r22, r24
    280a:	cd 01       	movw	r24, r26
    280c:	0e 94 8b 32 	call	0x6516	; 0x6516 <__divmodsi4>
    2810:	da 01       	movw	r26, r20
    2812:	c9 01       	movw	r24, r18
    2814:	80 5f       	subi	r24, 0xF0	; 240
    2816:	98 4d       	sbci	r25, 0xD8	; 216
    2818:	8a 87       	std	Y+10, r24	; 0x0a
    281a:	9b 87       	std	Y+11, r25	; 0x0b
    281c:	8a 85       	ldd	r24, Y+10	; 0x0a
    281e:	9b 85       	ldd	r25, Y+11	; 0x0b
    2820:	62 ed       	ldi	r22, 0xD2	; 210
    2822:	71 e4       	ldi	r23, 0x41	; 65
    2824:	0e 94 47 22 	call	0x448e	; 0x448e <_Z16lb_broadcast_numjPKc>
    2828:	80 e0       	ldi	r24, 0x00	; 0
    282a:	90 e0       	ldi	r25, 0x00	; 0
    282c:	0e 94 05 1a 	call	0x340a	; 0x340a <ds3231_get_epoch>
    2830:	dc 01       	movw	r26, r24
    2832:	cb 01       	movw	r24, r22
    2834:	bc 01       	movw	r22, r24
    2836:	cd 01       	movw	r24, r26
    2838:	0e 94 39 01 	call	0x272	; 0x272 <set_system_time>
    283c:	37 c0       	rjmp	.+110    	; 0x28ac <_Z17handleLinkBusMsgsv+0xd38>
    283e:	ce 01       	movw	r24, r28
    2840:	c4 96       	adiw	r24, 0x34	; 52
    2842:	0e 94 51 1b 	call	0x36a2	; 0x36a2 <ds3231_get_temp>
    2846:	98 2f       	mov	r25, r24
    2848:	81 e0       	ldi	r24, 0x01	; 1
    284a:	99 23       	and	r25, r25
    284c:	09 f0       	breq	.+2      	; 0x2850 <_Z17handleLinkBusMsgsv+0xcdc>
    284e:	80 e0       	ldi	r24, 0x00	; 0
    2850:	88 23       	and	r24, r24
    2852:	59 f1       	breq	.+86     	; 0x28aa <_Z17handleLinkBusMsgsv+0xd36>
    2854:	8c a9       	ldd	r24, Y+52	; 0x34
    2856:	9d a9       	ldd	r25, Y+53	; 0x35
    2858:	67 ed       	ldi	r22, 0xD7	; 215
    285a:	71 e4       	ldi	r23, 0x41	; 65
    285c:	0e 94 47 22 	call	0x448e	; 0x448e <_Z16lb_broadcast_numjPKc>
    2860:	24 c0       	rjmp	.+72     	; 0x28aa <_Z17handleLinkBusMsgsv+0xd36>
    2862:	44 e5       	ldi	r20, 0x54	; 84
    2864:	50 e4       	ldi	r21, 0x40	; 64
    2866:	6c ed       	ldi	r22, 0xDC	; 220
    2868:	71 e4       	ldi	r23, 0x41	; 65
    286a:	83 e0       	ldi	r24, 0x03	; 3
    286c:	0e 94 1f 22 	call	0x443e	; 0x443e <_Z11lb_send_msg13LBMessageTypePKcPc>
    2870:	1d c0       	rjmp	.+58     	; 0x28ac <_Z17handleLinkBusMsgsv+0xd38>
    2872:	0e 94 54 21 	call	0x42a8	; 0x42a8 <_Z16linkbus_reset_rxv>
    2876:	8e ec       	ldi	r24, 0xCE	; 206
    2878:	80 93 86 42 	sts	0x4286, r24	; 0x804286 <_ZL17g_last_error_code>
    287c:	17 c0       	rjmp	.+46     	; 0x28ac <_Z17handleLinkBusMsgsv+0xd38>
    287e:	00 00       	nop
    2880:	15 c0       	rjmp	.+42     	; 0x28ac <_Z17handleLinkBusMsgsv+0xd38>
    2882:	00 00       	nop
    2884:	13 c0       	rjmp	.+38     	; 0x28ac <_Z17handleLinkBusMsgsv+0xd38>
    2886:	00 00       	nop
    2888:	11 c0       	rjmp	.+34     	; 0x28ac <_Z17handleLinkBusMsgsv+0xd38>
    288a:	00 00       	nop
    288c:	0f c0       	rjmp	.+30     	; 0x28ac <_Z17handleLinkBusMsgsv+0xd38>
    288e:	00 00       	nop
    2890:	0d c0       	rjmp	.+26     	; 0x28ac <_Z17handleLinkBusMsgsv+0xd38>
    2892:	00 00       	nop
    2894:	0b c0       	rjmp	.+22     	; 0x28ac <_Z17handleLinkBusMsgsv+0xd38>
    2896:	00 00       	nop
    2898:	09 c0       	rjmp	.+18     	; 0x28ac <_Z17handleLinkBusMsgsv+0xd38>
    289a:	00 00       	nop
    289c:	07 c0       	rjmp	.+14     	; 0x28ac <_Z17handleLinkBusMsgsv+0xd38>
    289e:	00 00       	nop
    28a0:	05 c0       	rjmp	.+10     	; 0x28ac <_Z17handleLinkBusMsgsv+0xd38>
    28a2:	00 00       	nop
    28a4:	03 c0       	rjmp	.+6      	; 0x28ac <_Z17handleLinkBusMsgsv+0xd38>
    28a6:	00 00       	nop
    28a8:	01 c0       	rjmp	.+2      	; 0x28ac <_Z17handleLinkBusMsgsv+0xd38>
    28aa:	00 00       	nop
    28ac:	8c 85       	ldd	r24, Y+12	; 0x0c
    28ae:	9d 85       	ldd	r25, Y+13	; 0x0d
    28b0:	fc 01       	movw	r30, r24
    28b2:	11 82       	std	Z+1, r1	; 0x01
    28b4:	12 82       	std	Z+2, r1	; 0x02
    28b6:	89 81       	ldd	r24, Y+1	; 0x01
    28b8:	88 23       	and	r24, r24
    28ba:	09 f4       	brne	.+2      	; 0x28be <_Z17handleLinkBusMsgsv+0xd4a>
    28bc:	68 c9       	rjmp	.-3376   	; 0x1b8e <_Z17handleLinkBusMsgsv+0x1a>
    28be:	80 ee       	ldi	r24, 0xE0	; 224
    28c0:	91 e4       	ldi	r25, 0x41	; 65
    28c2:	0e 94 de 21 	call	0x43bc	; 0x43bc <_Z12lb_send_textPc>
    28c6:	63 c9       	rjmp	.-3386   	; 0x1b8e <_Z17handleLinkBusMsgsv+0x1a>
    28c8:	00 00       	nop
    28ca:	e5 96       	adiw	r28, 0x35	; 53
    28cc:	cd bf       	out	0x3d, r28	; 61
    28ce:	de bf       	out	0x3e, r29	; 62
    28d0:	df 91       	pop	r29
    28d2:	cf 91       	pop	r28
    28d4:	1f 91       	pop	r17
    28d6:	0f 91       	pop	r16
    28d8:	ff 90       	pop	r15
    28da:	ef 90       	pop	r14
    28dc:	08 95       	ret

000028de <_Z12eventEnabledv>:
    28de:	81 e0       	ldi	r24, 0x01	; 1
    28e0:	08 95       	ret

000028e2 <_Z13throttleValueh>:
    28e2:	85 31       	cpi	r24, 0x15	; 21
    28e4:	4c f4       	brge	.+18     	; 0x28f8 <_Z13throttleValueh+0x16>
    28e6:	28 2f       	mov	r18, r24
    28e8:	88 0f       	add	r24, r24
    28ea:	33 0b       	sbc	r19, r19
    28ec:	25 30       	cpi	r18, 0x05	; 5
    28ee:	31 05       	cpc	r19, r1
    28f0:	2c f4       	brge	.+10     	; 0x28fc <_Z13throttleValueh+0x1a>
    28f2:	25 e0       	ldi	r18, 0x05	; 5
    28f4:	30 e0       	ldi	r19, 0x00	; 0
    28f6:	02 c0       	rjmp	.+4      	; 0x28fc <_Z13throttleValueh+0x1a>
    28f8:	24 e1       	ldi	r18, 0x14	; 20
    28fa:	30 e0       	ldi	r19, 0x00	; 0
    28fc:	30 e0       	ldi	r19, 0x00	; 0
    28fe:	40 e0       	ldi	r20, 0x00	; 0
    2900:	50 e0       	ldi	r21, 0x00	; 0
    2902:	62 ec       	ldi	r22, 0xC2	; 194
    2904:	71 e0       	ldi	r23, 0x01	; 1
    2906:	80 e0       	ldi	r24, 0x00	; 0
    2908:	90 e0       	ldi	r25, 0x00	; 0
    290a:	0e 94 8b 32 	call	0x6516	; 0x6516 <__divmodsi4>
    290e:	ca 01       	movw	r24, r20
    2910:	b9 01       	movw	r22, r18
    2912:	0e 94 0f 31 	call	0x621e	; 0x621e <__floatsisf>
    2916:	0e 94 de 30 	call	0x61bc	; 0x61bc <__fixunssfsi>
    291a:	cb 01       	movw	r24, r22
    291c:	08 95       	ret

0000291e <_Z11launchEventP2SC>:
    291e:	cf 93       	push	r28
    2920:	df 93       	push	r29
    2922:	00 d0       	rcall	.+0      	; 0x2924 <_Z11launchEventP2SC+0x6>
    2924:	1f 92       	push	r1
    2926:	cd b7       	in	r28, 0x3d	; 61
    2928:	de b7       	in	r29, 0x3e	; 62
    292a:	8a 83       	std	Y+2, r24	; 0x02
    292c:	9b 83       	std	Y+3, r25	; 0x03
    292e:	8a 81       	ldd	r24, Y+2	; 0x02
    2930:	9b 81       	ldd	r25, Y+3	; 0x03
    2932:	0e 94 ba 14 	call	0x2974	; 0x2974 <_Z33activateEventUsingCurrentSettingsP2SC>
    2936:	89 83       	std	Y+1, r24	; 0x01
    2938:	8a 81       	ldd	r24, Y+2	; 0x02
    293a:	9b 81       	ldd	r25, Y+3	; 0x03
    293c:	fc 01       	movw	r30, r24
    293e:	80 81       	ld	r24, Z
    2940:	88 23       	and	r24, r24
    2942:	31 f0       	breq	.+12     	; 0x2950 <_Z11launchEventP2SC+0x32>
    2944:	8a 81       	ldd	r24, Y+2	; 0x02
    2946:	9b 81       	ldd	r25, Y+3	; 0x03
    2948:	fc 01       	movw	r30, r24
    294a:	80 81       	ld	r24, Z
    294c:	80 93 87 42 	sts	0x4287, r24	; 0x804287 <_ZL18g_last_status_code>
    2950:	89 81       	ldd	r24, Y+1	; 0x01
    2952:	88 23       	and	r24, r24
    2954:	21 f0       	breq	.+8      	; 0x295e <_Z11launchEventP2SC+0x40>
    2956:	89 81       	ldd	r24, Y+1	; 0x01
    2958:	80 93 86 42 	sts	0x4286, r24	; 0x804286 <_ZL17g_last_error_code>
    295c:	04 c0       	rjmp	.+8      	; 0x2966 <_Z11launchEventP2SC+0x48>
    295e:	0e 94 6f 14 	call	0x28de	; 0x28de <_Z12eventEnabledv>
    2962:	80 93 cb 42 	sts	0x42CB, r24	; 0x8042cb <g_event_enabled>
    2966:	89 81       	ldd	r24, Y+1	; 0x01
    2968:	23 96       	adiw	r28, 0x03	; 3
    296a:	cd bf       	out	0x3d, r28	; 61
    296c:	de bf       	out	0x3e, r29	; 62
    296e:	df 91       	pop	r29
    2970:	cf 91       	pop	r28
    2972:	08 95       	ret

00002974 <_Z33activateEventUsingCurrentSettingsP2SC>:
    2974:	cf 92       	push	r12
    2976:	df 92       	push	r13
    2978:	ef 92       	push	r14
    297a:	ff 92       	push	r15
    297c:	0f 93       	push	r16
    297e:	1f 93       	push	r17
    2980:	cf 93       	push	r28
    2982:	df 93       	push	r29
    2984:	1f 92       	push	r1
    2986:	cd b7       	in	r28, 0x3d	; 61
    2988:	de b7       	in	r29, 0x3e	; 62
    298a:	40 91 c3 42 	lds	r20, 0x42C3	; 0x8042c3 <g_event_start_time>
    298e:	50 91 c4 42 	lds	r21, 0x42C4	; 0x8042c4 <g_event_start_time+0x1>
    2992:	60 91 c5 42 	lds	r22, 0x42C5	; 0x8042c5 <g_event_start_time+0x2>
    2996:	70 91 c6 42 	lds	r23, 0x42C6	; 0x8042c6 <g_event_start_time+0x3>
    299a:	45 2b       	or	r20, r21
    299c:	46 2b       	or	r20, r22
    299e:	47 2b       	or	r20, r23
    29a0:	09 f4       	brne	.+2      	; 0x29a4 <_Z33activateEventUsingCurrentSettingsP2SC+0x30>
    29a2:	91 c1       	rjmp	.+802    	; 0x2cc6 <_Z33activateEventUsingCurrentSettingsP2SC+0x352>
    29a4:	00 91 c3 42 	lds	r16, 0x42C3	; 0x8042c3 <g_event_start_time>
    29a8:	10 91 c4 42 	lds	r17, 0x42C4	; 0x8042c4 <g_event_start_time+0x1>
    29ac:	20 91 c5 42 	lds	r18, 0x42C5	; 0x8042c5 <g_event_start_time+0x2>
    29b0:	30 91 c6 42 	lds	r19, 0x42C6	; 0x8042c6 <g_event_start_time+0x3>
    29b4:	40 91 c7 42 	lds	r20, 0x42C7	; 0x8042c7 <g_event_finish_time>
    29b8:	50 91 c8 42 	lds	r21, 0x42C8	; 0x8042c8 <g_event_finish_time+0x1>
    29bc:	60 91 c9 42 	lds	r22, 0x42C9	; 0x8042c9 <g_event_finish_time+0x2>
    29c0:	70 91 ca 42 	lds	r23, 0x42CA	; 0x8042ca <g_event_finish_time+0x3>
    29c4:	04 17       	cp	r16, r20
    29c6:	15 07       	cpc	r17, r21
    29c8:	26 07       	cpc	r18, r22
    29ca:	37 07       	cpc	r19, r23
    29cc:	08 f0       	brcs	.+2      	; 0x29d0 <_Z33activateEventUsingCurrentSettingsP2SC+0x5c>
    29ce:	7d c1       	rjmp	.+762    	; 0x2cca <_Z33activateEventUsingCurrentSettingsP2SC+0x356>
    29d0:	20 91 0e 40 	lds	r18, 0x400E	; 0x80400e <g_on_air_seconds>
    29d4:	30 91 0f 40 	lds	r19, 0x400F	; 0x80400f <g_on_air_seconds+0x1>
    29d8:	23 2b       	or	r18, r19
    29da:	09 f4       	brne	.+2      	; 0x29de <_Z33activateEventUsingCurrentSettingsP2SC+0x6a>
    29dc:	78 c1       	rjmp	.+752    	; 0x2cce <_Z33activateEventUsingCurrentSettingsP2SC+0x35a>
    29de:	40 91 10 40 	lds	r20, 0x4010	; 0x804010 <g_off_air_seconds>
    29e2:	50 91 11 40 	lds	r21, 0x4011	; 0x804011 <g_off_air_seconds+0x1>
    29e6:	20 91 0e 40 	lds	r18, 0x400E	; 0x80400e <g_on_air_seconds>
    29ea:	30 91 0f 40 	lds	r19, 0x400F	; 0x80400f <g_on_air_seconds+0x1>
    29ee:	24 0f       	add	r18, r20
    29f0:	35 1f       	adc	r19, r21
    29f2:	40 91 c1 42 	lds	r20, 0x42C1	; 0x8042c1 <g_intra_cycle_delay_time>
    29f6:	50 91 c2 42 	lds	r21, 0x42C2	; 0x8042c2 <g_intra_cycle_delay_time+0x1>
    29fa:	24 17       	cp	r18, r20
    29fc:	35 07       	cpc	r19, r21
    29fe:	0c f4       	brge	.+2      	; 0x2a02 <_Z33activateEventUsingCurrentSettingsP2SC+0x8e>
    2a00:	68 c1       	rjmp	.+720    	; 0x2cd2 <_Z33activateEventUsingCurrentSettingsP2SC+0x35e>
    2a02:	20 91 95 42 	lds	r18, 0x4295	; 0x804295 <g_messages_text>
    2a06:	22 23       	and	r18, r18
    2a08:	09 f4       	brne	.+2      	; 0x2a0c <_Z33activateEventUsingCurrentSettingsP2SC+0x98>
    2a0a:	65 c1       	rjmp	.+714    	; 0x2cd6 <_Z33activateEventUsingCurrentSettingsP2SC+0x362>
    2a0c:	20 91 0d 40 	lds	r18, 0x400D	; 0x80400d <g_pattern_codespeed>
    2a10:	22 23       	and	r18, r18
    2a12:	09 f4       	brne	.+2      	; 0x2a16 <_Z33activateEventUsingCurrentSettingsP2SC+0xa2>
    2a14:	62 c1       	rjmp	.+708    	; 0x2cda <_Z33activateEventUsingCurrentSettingsP2SC+0x366>
    2a16:	8c 01       	movw	r16, r24
    2a18:	80 91 aa 42 	lds	r24, 0x42AA	; 0x8042aa <g_messages_text+0x15>
    2a1c:	88 23       	and	r24, r24
    2a1e:	19 f1       	breq	.+70     	; 0x2a66 <_Z33activateEventUsingCurrentSettingsP2SC+0xf2>
    2a20:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_id_codespeed>
    2a24:	88 23       	and	r24, r24
    2a26:	41 f0       	breq	.+16     	; 0x2a38 <_Z33activateEventUsingCurrentSettingsP2SC+0xc4>
    2a28:	80 91 12 40 	lds	r24, 0x4012	; 0x804012 <g_ID_period_seconds>
    2a2c:	90 91 13 40 	lds	r25, 0x4013	; 0x804013 <g_ID_period_seconds+0x1>
    2a30:	89 2b       	or	r24, r25
    2a32:	21 f4       	brne	.+8      	; 0x2a3c <_Z33activateEventUsingCurrentSettingsP2SC+0xc8>
    2a34:	81 e0       	ldi	r24, 0x01	; 1
    2a36:	03 c0       	rjmp	.+6      	; 0x2a3e <_Z33activateEventUsingCurrentSettingsP2SC+0xca>
    2a38:	81 e0       	ldi	r24, 0x01	; 1
    2a3a:	01 c0       	rjmp	.+2      	; 0x2a3e <_Z33activateEventUsingCurrentSettingsP2SC+0xca>
    2a3c:	80 e0       	ldi	r24, 0x00	; 0
    2a3e:	81 11       	cpse	r24, r1
    2a40:	4e c1       	rjmp	.+668    	; 0x2cde <_Z33activateEventUsingCurrentSettingsP2SC+0x36a>
    2a42:	60 91 0c 40 	lds	r22, 0x400C	; 0x80400c <g_id_codespeed>
    2a46:	70 e0       	ldi	r23, 0x00	; 0
    2a48:	8a ea       	ldi	r24, 0xAA	; 170
    2a4a:	92 e4       	ldi	r25, 0x42	; 66
    2a4c:	0e 94 83 24 	call	0x4906	; 0x4906 <_Z26timeRequiredToSendStrAtWPMPcj>
    2a50:	8c 50       	subi	r24, 0x0C	; 12
    2a52:	9e 4f       	sbci	r25, 0xFE	; 254
    2a54:	68 ee       	ldi	r22, 0xE8	; 232
    2a56:	73 e0       	ldi	r23, 0x03	; 3
    2a58:	0e 94 41 32 	call	0x6482	; 0x6482 <__udivmodhi4>
    2a5c:	60 93 bf 42 	sts	0x42BF, r22	; 0x8042bf <g_time_needed_for_ID>
    2a60:	70 93 c0 42 	sts	0x42C0, r23	; 0x8042c0 <g_time_needed_for_ID+0x1>
    2a64:	04 c0       	rjmp	.+8      	; 0x2a6e <_Z33activateEventUsingCurrentSettingsP2SC+0xfa>
    2a66:	10 92 bf 42 	sts	0x42BF, r1	; 0x8042bf <g_time_needed_for_ID>
    2a6a:	10 92 c0 42 	sts	0x42C0, r1	; 0x8042c0 <g_time_needed_for_ID+0x1>
    2a6e:	80 e0       	ldi	r24, 0x00	; 0
    2a70:	90 e0       	ldi	r25, 0x00	; 0
    2a72:	0e 94 45 01 	call	0x28a	; 0x28a <time>
    2a76:	c0 90 c7 42 	lds	r12, 0x42C7	; 0x8042c7 <g_event_finish_time>
    2a7a:	d0 90 c8 42 	lds	r13, 0x42C8	; 0x8042c8 <g_event_finish_time+0x1>
    2a7e:	e0 90 c9 42 	lds	r14, 0x42C9	; 0x8042c9 <g_event_finish_time+0x2>
    2a82:	f0 90 ca 42 	lds	r15, 0x42CA	; 0x8042ca <g_event_finish_time+0x3>
    2a86:	c6 16       	cp	r12, r22
    2a88:	d7 06       	cpc	r13, r23
    2a8a:	e8 06       	cpc	r14, r24
    2a8c:	f9 06       	cpc	r15, r25
    2a8e:	48 f4       	brcc	.+18     	; 0x2aa2 <_Z33activateEventUsingCurrentSettingsP2SC+0x12e>
    2a90:	01 15       	cp	r16, r1
    2a92:	11 05       	cpc	r17, r1
    2a94:	09 f4       	brne	.+2      	; 0x2a98 <_Z33activateEventUsingCurrentSettingsP2SC+0x124>
    2a96:	25 c1       	rjmp	.+586    	; 0x2ce2 <_Z33activateEventUsingCurrentSettingsP2SC+0x36e>
    2a98:	8a ef       	ldi	r24, 0xFA	; 250
    2a9a:	f8 01       	movw	r30, r16
    2a9c:	80 83       	st	Z, r24
    2a9e:	80 e0       	ldi	r24, 0x00	; 0
    2aa0:	21 c1       	rjmp	.+578    	; 0x2ce4 <_Z33activateEventUsingCurrentSettingsP2SC+0x370>
    2aa2:	20 91 c3 42 	lds	r18, 0x42C3	; 0x8042c3 <g_event_start_time>
    2aa6:	30 91 c4 42 	lds	r19, 0x42C4	; 0x8042c4 <g_event_start_time+0x1>
    2aaa:	40 91 c5 42 	lds	r20, 0x42C5	; 0x8042c5 <g_event_start_time+0x2>
    2aae:	50 91 c6 42 	lds	r21, 0x42C6	; 0x8042c6 <g_event_start_time+0x3>
    2ab2:	0e 94 e4 2f 	call	0x5fc8	; 0x5fc8 <_Z7timeDifmm>
    2ab6:	99 23       	and	r25, r25
    2ab8:	0c f4       	brge	.+2      	; 0x2abc <_Z33activateEventUsingCurrentSettingsP2SC+0x148>
    2aba:	f2 c0       	rjmp	.+484    	; 0x2ca0 <_Z33activateEventUsingCurrentSettingsP2SC+0x32c>
    2abc:	e0 90 0e 40 	lds	r14, 0x400E	; 0x80400e <g_on_air_seconds>
    2ac0:	f0 90 0f 40 	lds	r15, 0x400F	; 0x80400f <g_on_air_seconds+0x1>
    2ac4:	20 91 10 40 	lds	r18, 0x4010	; 0x804010 <g_off_air_seconds>
    2ac8:	30 91 11 40 	lds	r19, 0x4011	; 0x804011 <g_off_air_seconds+0x1>
    2acc:	e2 0e       	add	r14, r18
    2ace:	f3 1e       	adc	r15, r19
    2ad0:	97 01       	movw	r18, r14
    2ad2:	0f 2c       	mov	r0, r15
    2ad4:	00 0c       	add	r0, r0
    2ad6:	44 0b       	sbc	r20, r20
    2ad8:	55 0b       	sbc	r21, r21
    2ada:	0e 94 8b 32 	call	0x6516	; 0x6516 <__divmodsi4>
    2ade:	20 91 c1 42 	lds	r18, 0x42C1	; 0x8042c1 <g_intra_cycle_delay_time>
    2ae2:	30 91 c2 42 	lds	r19, 0x42C2	; 0x8042c2 <g_intra_cycle_delay_time+0x1>
    2ae6:	c9 01       	movw	r24, r18
    2ae8:	86 1b       	sub	r24, r22
    2aea:	97 0b       	sbc	r25, r23
    2aec:	18 16       	cp	r1, r24
    2aee:	19 06       	cpc	r1, r25
    2af0:	0c f4       	brge	.+2      	; 0x2af4 <_Z33activateEventUsingCurrentSettingsP2SC+0x180>
    2af2:	84 c0       	rjmp	.+264    	; 0x2bfc <_Z33activateEventUsingCurrentSettingsP2SC+0x288>
    2af4:	22 27       	eor	r18, r18
    2af6:	33 27       	eor	r19, r19
    2af8:	28 1b       	sub	r18, r24
    2afa:	39 0b       	sbc	r19, r25
    2afc:	40 91 0e 40 	lds	r20, 0x400E	; 0x80400e <g_on_air_seconds>
    2b00:	50 91 0f 40 	lds	r21, 0x400F	; 0x80400f <g_on_air_seconds+0x1>
    2b04:	24 17       	cp	r18, r20
    2b06:	35 07       	cpc	r19, r21
    2b08:	ac f1       	brlt	.+106    	; 0x2b74 <_Z33activateEventUsingCurrentSettingsP2SC+0x200>
    2b0a:	8e 0d       	add	r24, r14
    2b0c:	9f 1d       	adc	r25, r15
    2b0e:	91 95       	neg	r25
    2b10:	81 95       	neg	r24
    2b12:	91 09       	sbc	r25, r1
    2b14:	09 2e       	mov	r0, r25
    2b16:	00 0c       	add	r0, r0
    2b18:	aa 0b       	sbc	r26, r26
    2b1a:	bb 0b       	sbc	r27, r27
    2b1c:	80 93 8b 42 	sts	0x428B, r24	; 0x80428b <_ZL12g_on_the_air>
    2b20:	90 93 8c 42 	sts	0x428C, r25	; 0x80428c <_ZL12g_on_the_air+0x1>
    2b24:	a0 93 8d 42 	sts	0x428D, r26	; 0x80428d <_ZL12g_on_the_air+0x2>
    2b28:	b0 93 8e 42 	sts	0x428E, r27	; 0x80428e <_ZL12g_on_the_air+0x3>
    2b2c:	01 15       	cp	r16, r1
    2b2e:	11 05       	cpc	r17, r1
    2b30:	19 f0       	breq	.+6      	; 0x2b38 <_Z33activateEventUsingCurrentSettingsP2SC+0x1c4>
    2b32:	8e ef       	ldi	r24, 0xFE	; 254
    2b34:	f8 01       	movw	r30, r16
    2b36:	80 83       	st	Z, r24
    2b38:	80 91 cb 42 	lds	r24, 0x42CB	; 0x8042cb <g_event_enabled>
    2b3c:	81 11       	cpse	r24, r1
    2b3e:	8a c0       	rjmp	.+276    	; 0x2c54 <_Z33activateEventUsingCurrentSettingsP2SC+0x2e0>
    2b40:	80 91 0e 40 	lds	r24, 0x400E	; 0x80400e <g_on_air_seconds>
    2b44:	90 91 0f 40 	lds	r25, 0x400F	; 0x80400f <g_on_air_seconds+0x1>
    2b48:	40 91 8b 42 	lds	r20, 0x428B	; 0x80428b <_ZL12g_on_the_air>
    2b4c:	50 91 8c 42 	lds	r21, 0x428C	; 0x80428c <_ZL12g_on_the_air+0x1>
    2b50:	60 91 8d 42 	lds	r22, 0x428D	; 0x80428d <_ZL12g_on_the_air+0x2>
    2b54:	70 91 8e 42 	lds	r23, 0x428E	; 0x80428e <_ZL12g_on_the_air+0x3>
    2b58:	20 91 bf 42 	lds	r18, 0x42BF	; 0x8042bf <g_time_needed_for_ID>
    2b5c:	30 91 c0 42 	lds	r19, 0x42C0	; 0x8042c0 <g_time_needed_for_ID+0x1>
    2b60:	84 1b       	sub	r24, r20
    2b62:	95 0b       	sbc	r25, r21
    2b64:	82 1b       	sub	r24, r18
    2b66:	93 0b       	sbc	r25, r19
    2b68:	80 93 8f 42 	sts	0x428F, r24	; 0x80428f <_ZL26g_sendID_seconds_countdown>
    2b6c:	90 93 90 42 	sts	0x4290, r25	; 0x804290 <_ZL26g_sendID_seconds_countdown+0x1>
    2b70:	80 e0       	ldi	r24, 0x00	; 0
    2b72:	77 c0       	rjmp	.+238    	; 0x2c62 <_Z33activateEventUsingCurrentSettingsP2SC+0x2ee>
    2b74:	20 91 0e 40 	lds	r18, 0x400E	; 0x80400e <g_on_air_seconds>
    2b78:	30 91 0f 40 	lds	r19, 0x400F	; 0x80400f <g_on_air_seconds+0x1>
    2b7c:	82 0f       	add	r24, r18
    2b7e:	93 1f       	adc	r25, r19
    2b80:	09 2e       	mov	r0, r25
    2b82:	00 0c       	add	r0, r0
    2b84:	aa 0b       	sbc	r26, r26
    2b86:	bb 0b       	sbc	r27, r27
    2b88:	80 93 8b 42 	sts	0x428B, r24	; 0x80428b <_ZL12g_on_the_air>
    2b8c:	90 93 8c 42 	sts	0x428C, r25	; 0x80428c <_ZL12g_on_the_air+0x1>
    2b90:	a0 93 8d 42 	sts	0x428D, r26	; 0x80428d <_ZL12g_on_the_air+0x2>
    2b94:	b0 93 8e 42 	sts	0x428E, r27	; 0x80428e <_ZL12g_on_the_air+0x3>
    2b98:	01 15       	cp	r16, r1
    2b9a:	11 05       	cpc	r17, r1
    2b9c:	19 f0       	breq	.+6      	; 0x2ba4 <_Z33activateEventUsingCurrentSettingsP2SC+0x230>
    2b9e:	8d ef       	ldi	r24, 0xFD	; 253
    2ba0:	f8 01       	movw	r30, r16
    2ba2:	80 83       	st	Z, r24
    2ba4:	80 91 cb 42 	lds	r24, 0x42CB	; 0x8042cb <g_event_enabled>
    2ba8:	81 11       	cpse	r24, r1
    2baa:	56 c0       	rjmp	.+172    	; 0x2c58 <_Z33activateEventUsingCurrentSettingsP2SC+0x2e4>
    2bac:	80 91 bf 42 	lds	r24, 0x42BF	; 0x8042bf <g_time_needed_for_ID>
    2bb0:	90 91 c0 42 	lds	r25, 0x42C0	; 0x8042c0 <g_time_needed_for_ID+0x1>
    2bb4:	a0 e0       	ldi	r26, 0x00	; 0
    2bb6:	b0 e0       	ldi	r27, 0x00	; 0
    2bb8:	40 91 8b 42 	lds	r20, 0x428B	; 0x80428b <_ZL12g_on_the_air>
    2bbc:	50 91 8c 42 	lds	r21, 0x428C	; 0x80428c <_ZL12g_on_the_air+0x1>
    2bc0:	60 91 8d 42 	lds	r22, 0x428D	; 0x80428d <_ZL12g_on_the_air+0x2>
    2bc4:	70 91 8e 42 	lds	r23, 0x428E	; 0x80428e <_ZL12g_on_the_air+0x3>
    2bc8:	84 17       	cp	r24, r20
    2bca:	95 07       	cpc	r25, r21
    2bcc:	a6 07       	cpc	r26, r22
    2bce:	b7 07       	cpc	r27, r23
    2bd0:	0c f0       	brlt	.+2      	; 0x2bd4 <_Z33activateEventUsingCurrentSettingsP2SC+0x260>
    2bd2:	44 c0       	rjmp	.+136    	; 0x2c5c <_Z33activateEventUsingCurrentSettingsP2SC+0x2e8>
    2bd4:	80 91 8b 42 	lds	r24, 0x428B	; 0x80428b <_ZL12g_on_the_air>
    2bd8:	90 91 8c 42 	lds	r25, 0x428C	; 0x80428c <_ZL12g_on_the_air+0x1>
    2bdc:	a0 91 8d 42 	lds	r26, 0x428D	; 0x80428d <_ZL12g_on_the_air+0x2>
    2be0:	b0 91 8e 42 	lds	r27, 0x428E	; 0x80428e <_ZL12g_on_the_air+0x3>
    2be4:	20 91 bf 42 	lds	r18, 0x42BF	; 0x8042bf <g_time_needed_for_ID>
    2be8:	30 91 c0 42 	lds	r19, 0x42C0	; 0x8042c0 <g_time_needed_for_ID+0x1>
    2bec:	82 1b       	sub	r24, r18
    2bee:	93 0b       	sbc	r25, r19
    2bf0:	80 93 8f 42 	sts	0x428F, r24	; 0x80428f <_ZL26g_sendID_seconds_countdown>
    2bf4:	90 93 90 42 	sts	0x4290, r25	; 0x804290 <_ZL26g_sendID_seconds_countdown+0x1>
    2bf8:	81 e0       	ldi	r24, 0x01	; 1
    2bfa:	33 c0       	rjmp	.+102    	; 0x2c62 <_Z33activateEventUsingCurrentSettingsP2SC+0x2ee>
    2bfc:	44 27       	eor	r20, r20
    2bfe:	55 27       	eor	r21, r21
    2c00:	48 1b       	sub	r20, r24
    2c02:	59 0b       	sbc	r21, r25
    2c04:	05 2e       	mov	r0, r21
    2c06:	00 0c       	add	r0, r0
    2c08:	66 0b       	sbc	r22, r22
    2c0a:	77 0b       	sbc	r23, r23
    2c0c:	40 93 8b 42 	sts	0x428B, r20	; 0x80428b <_ZL12g_on_the_air>
    2c10:	50 93 8c 42 	sts	0x428C, r21	; 0x80428c <_ZL12g_on_the_air+0x1>
    2c14:	60 93 8d 42 	sts	0x428D, r22	; 0x80428d <_ZL12g_on_the_air+0x2>
    2c18:	70 93 8e 42 	sts	0x428E, r23	; 0x80428e <_ZL12g_on_the_air+0x3>
    2c1c:	01 15       	cp	r16, r1
    2c1e:	11 05       	cpc	r17, r1
    2c20:	19 f0       	breq	.+6      	; 0x2c28 <_Z33activateEventUsingCurrentSettingsP2SC+0x2b4>
    2c22:	2e ef       	ldi	r18, 0xFE	; 254
    2c24:	f8 01       	movw	r30, r16
    2c26:	20 83       	st	Z, r18
    2c28:	20 91 cb 42 	lds	r18, 0x42CB	; 0x8042cb <g_event_enabled>
    2c2c:	21 11       	cpse	r18, r1
    2c2e:	18 c0       	rjmp	.+48     	; 0x2c60 <_Z33activateEventUsingCurrentSettingsP2SC+0x2ec>
    2c30:	20 91 0e 40 	lds	r18, 0x400E	; 0x80400e <g_on_air_seconds>
    2c34:	30 91 0f 40 	lds	r19, 0x400F	; 0x80400f <g_on_air_seconds+0x1>
    2c38:	82 0f       	add	r24, r18
    2c3a:	93 1f       	adc	r25, r19
    2c3c:	20 91 bf 42 	lds	r18, 0x42BF	; 0x8042bf <g_time_needed_for_ID>
    2c40:	30 91 c0 42 	lds	r19, 0x42C0	; 0x8042c0 <g_time_needed_for_ID+0x1>
    2c44:	82 1b       	sub	r24, r18
    2c46:	93 0b       	sbc	r25, r19
    2c48:	80 93 8f 42 	sts	0x428F, r24	; 0x80428f <_ZL26g_sendID_seconds_countdown>
    2c4c:	90 93 90 42 	sts	0x4290, r25	; 0x804290 <_ZL26g_sendID_seconds_countdown+0x1>
    2c50:	80 e0       	ldi	r24, 0x00	; 0
    2c52:	07 c0       	rjmp	.+14     	; 0x2c62 <_Z33activateEventUsingCurrentSettingsP2SC+0x2ee>
    2c54:	80 e0       	ldi	r24, 0x00	; 0
    2c56:	05 c0       	rjmp	.+10     	; 0x2c62 <_Z33activateEventUsingCurrentSettingsP2SC+0x2ee>
    2c58:	81 e0       	ldi	r24, 0x01	; 1
    2c5a:	03 c0       	rjmp	.+6      	; 0x2c62 <_Z33activateEventUsingCurrentSettingsP2SC+0x2ee>
    2c5c:	81 e0       	ldi	r24, 0x01	; 1
    2c5e:	01 c0       	rjmp	.+2      	; 0x2c62 <_Z33activateEventUsingCurrentSettingsP2SC+0x2ee>
    2c60:	80 e0       	ldi	r24, 0x00	; 0
    2c62:	88 23       	and	r24, r24
    2c64:	b1 f0       	breq	.+44     	; 0x2c92 <_Z33activateEventUsingCurrentSettingsP2SC+0x31e>
    2c66:	f8 94       	cli
    2c68:	81 e0       	ldi	r24, 0x01	; 1
    2c6a:	89 83       	std	Y+1, r24	; 0x01
    2c6c:	40 e0       	ldi	r20, 0x00	; 0
    2c6e:	50 e0       	ldi	r21, 0x00	; 0
    2c70:	be 01       	movw	r22, r28
    2c72:	6f 5f       	subi	r22, 0xFF	; 255
    2c74:	7f 4f       	sbci	r23, 0xFF	; 255
    2c76:	85 e9       	ldi	r24, 0x95	; 149
    2c78:	92 e4       	ldi	r25, 0x42	; 66
    2c7a:	0e 94 8a 23 	call	0x4714	; 0x4714 <_Z9makeMorsePcPhS0_>
    2c7e:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_pattern_codespeed>
    2c82:	0e 94 71 14 	call	0x28e2	; 0x28e2 <_Z13throttleValueh>
    2c86:	80 93 08 40 	sts	0x4008, r24	; 0x804008 <_ZL15g_code_throttle>
    2c8a:	90 93 09 40 	sts	0x4009, r25	; 0x804009 <_ZL15g_code_throttle+0x1>
    2c8e:	78 94       	sei
    2c90:	03 c0       	rjmp	.+6      	; 0x2c98 <_Z33activateEventUsingCurrentSettingsP2SC+0x324>
    2c92:	80 e0       	ldi	r24, 0x00	; 0
    2c94:	0e 94 b5 2d 	call	0x5b6a	; 0x5b6a <_Z14keyTransmitterh>
    2c98:	81 e0       	ldi	r24, 0x01	; 1
    2c9a:	80 93 cc 42 	sts	0x42CC, r24	; 0x8042cc <g_event_commenced>
    2c9e:	09 c0       	rjmp	.+18     	; 0x2cb2 <_Z33activateEventUsingCurrentSettingsP2SC+0x33e>
    2ca0:	01 15       	cp	r16, r1
    2ca2:	11 05       	cpc	r17, r1
    2ca4:	19 f0       	breq	.+6      	; 0x2cac <_Z33activateEventUsingCurrentSettingsP2SC+0x338>
    2ca6:	8f ef       	ldi	r24, 0xFF	; 255
    2ca8:	f8 01       	movw	r30, r16
    2caa:	80 83       	st	Z, r24
    2cac:	80 e0       	ldi	r24, 0x00	; 0
    2cae:	0e 94 b5 2d 	call	0x5b6a	; 0x5b6a <_Z14keyTransmitterh>
    2cb2:	10 92 ce 42 	sts	0x42CE, r1	; 0x8042ce <g_waiting_for_next_event>
    2cb6:	8a e5       	ldi	r24, 0x5A	; 90
    2cb8:	90 e0       	ldi	r25, 0x00	; 0
    2cba:	80 93 14 40 	sts	0x4014, r24	; 0x804014 <g_update_timeout_seconds>
    2cbe:	90 93 15 40 	sts	0x4015, r25	; 0x804015 <g_update_timeout_seconds+0x1>
    2cc2:	80 e0       	ldi	r24, 0x00	; 0
    2cc4:	0f c0       	rjmp	.+30     	; 0x2ce4 <_Z33activateEventUsingCurrentSettingsP2SC+0x370>
    2cc6:	8c ec       	ldi	r24, 0xCC	; 204
    2cc8:	0d c0       	rjmp	.+26     	; 0x2ce4 <_Z33activateEventUsingCurrentSettingsP2SC+0x370>
    2cca:	8d ec       	ldi	r24, 0xCD	; 205
    2ccc:	0b c0       	rjmp	.+22     	; 0x2ce4 <_Z33activateEventUsingCurrentSettingsP2SC+0x370>
    2cce:	8b ec       	ldi	r24, 0xCB	; 203
    2cd0:	09 c0       	rjmp	.+18     	; 0x2ce4 <_Z33activateEventUsingCurrentSettingsP2SC+0x370>
    2cd2:	8a ec       	ldi	r24, 0xCA	; 202
    2cd4:	07 c0       	rjmp	.+14     	; 0x2ce4 <_Z33activateEventUsingCurrentSettingsP2SC+0x370>
    2cd6:	89 ec       	ldi	r24, 0xC9	; 201
    2cd8:	05 c0       	rjmp	.+10     	; 0x2ce4 <_Z33activateEventUsingCurrentSettingsP2SC+0x370>
    2cda:	88 ec       	ldi	r24, 0xC8	; 200
    2cdc:	03 c0       	rjmp	.+6      	; 0x2ce4 <_Z33activateEventUsingCurrentSettingsP2SC+0x370>
    2cde:	87 ec       	ldi	r24, 0xC7	; 199
    2ce0:	01 c0       	rjmp	.+2      	; 0x2ce4 <_Z33activateEventUsingCurrentSettingsP2SC+0x370>
    2ce2:	80 e0       	ldi	r24, 0x00	; 0
    2ce4:	0f 90       	pop	r0
    2ce6:	df 91       	pop	r29
    2ce8:	cf 91       	pop	r28
    2cea:	1f 91       	pop	r17
    2cec:	0f 91       	pop	r16
    2cee:	ff 90       	pop	r15
    2cf0:	ef 90       	pop	r14
    2cf2:	df 90       	pop	r13
    2cf4:	cf 90       	pop	r12
    2cf6:	08 95       	ret

00002cf8 <_Z18antennaIsConnectedv>:
    2cf8:	81 e0       	ldi	r24, 0x01	; 1
    2cfa:	08 95       	ret

00002cfc <_Z11setupForFoxP5Fox_t13EventAction_t>:
	
}


void setupForFox(Fox_t* fox, EventAction_t action)
{
    2cfc:	1f 93       	push	r17
    2cfe:	cf 93       	push	r28
    2d00:	df 93       	push	r29
    2d02:	1f 92       	push	r1
    2d04:	cd b7       	in	r28, 0x3d	; 61
    2d06:	de b7       	in	r29, 0x3e	; 62
	bool patternNotSet = true;
	
	if(fox)
    2d08:	00 97       	sbiw	r24, 0x00	; 0
    2d0a:	31 f0       	breq	.+12     	; 0x2d18 <_Z11setupForFoxP5Fox_t13EventAction_t+0x1c>
	{
		if(*fox != INVALID_FOX)
    2d0c:	fc 01       	movw	r30, r24
    2d0e:	80 81       	ld	r24, Z
    2d10:	82 31       	cpi	r24, 0x12	; 18
    2d12:	11 f0       	breq	.+4      	; 0x2d18 <_Z11setupForFoxP5Fox_t13EventAction_t+0x1c>
		{
			g_fox = *fox;
    2d14:	80 93 1c 40 	sts	0x401C, r24	; 0x80401c <g_fox>
	}

// 	g_current_epoch = RTC_get_epoch();
// 	g_use_ptt_periodic_reset = FALSE;

	cli();
    2d18:	f8 94       	cli

	switch(g_fox)
    2d1a:	80 91 1c 40 	lds	r24, 0x401C	; 0x80401c <g_fox>
    2d1e:	83 30       	cpi	r24, 0x03	; 3
    2d20:	31 f1       	breq	.+76     	; 0x2d6e <_Z11setupForFoxP5Fox_t13EventAction_t+0x72>
    2d22:	28 f4       	brcc	.+10     	; 0x2d2e <_Z11setupForFoxP5Fox_t13EventAction_t+0x32>
    2d24:	81 30       	cpi	r24, 0x01	; 1
    2d26:	41 f0       	breq	.+16     	; 0x2d38 <_Z11setupForFoxP5Fox_t13EventAction_t+0x3c>
    2d28:	82 30       	cpi	r24, 0x02	; 2
    2d2a:	91 f0       	breq	.+36     	; 0x2d50 <_Z11setupForFoxP5Fox_t13EventAction_t+0x54>
    2d2c:	98 c0       	rjmp	.+304    	; 0x2e5e <_Z11setupForFoxP5Fox_t13EventAction_t+0x162>
    2d2e:	84 30       	cpi	r24, 0x04	; 4
    2d30:	69 f1       	breq	.+90     	; 0x2d8c <_Z11setupForFoxP5Fox_t13EventAction_t+0x90>
    2d32:	85 30       	cpi	r24, 0x05	; 5
    2d34:	d1 f1       	breq	.+116    	; 0x2daa <_Z11setupForFoxP5Fox_t13EventAction_t+0xae>
    2d36:	93 c0       	rjmp	.+294    	; 0x2e5e <_Z11setupForFoxP5Fox_t13EventAction_t+0x162>
	{
		case FOX_1:
		{
			if(patternNotSet)
			{
				sprintf(g_messages_text[PATTERN_TEXT], "MOE");
    2d38:	e5 e9       	ldi	r30, 0x95	; 149
    2d3a:	f2 e4       	ldi	r31, 0x42	; 66
    2d3c:	8d e4       	ldi	r24, 0x4D	; 77
    2d3e:	9f e4       	ldi	r25, 0x4F	; 79
    2d40:	80 83       	st	Z, r24
    2d42:	91 83       	std	Z+1, r25	; 0x01
    2d44:	85 e4       	ldi	r24, 0x45	; 69
    2d46:	90 e0       	ldi	r25, 0x00	; 0
    2d48:	82 83       	std	Z+2, r24	; 0x02
    2d4a:	93 83       	std	Z+3, r25	; 0x03
				patternNotSet = false;
    2d4c:	80 e0       	ldi	r24, 0x00	; 0
    2d4e:	01 c0       	rjmp	.+2      	; 0x2d52 <_Z11setupForFoxP5Fox_t13EventAction_t+0x56>
}


void setupForFox(Fox_t* fox, EventAction_t action)
{
	bool patternNotSet = true;
    2d50:	81 e0       	ldi	r24, 0x01	; 1
				patternNotSet = false;
			}
		}
		case FOX_2:
		{
			if(patternNotSet)
    2d52:	88 23       	and	r24, r24
    2d54:	69 f0       	breq	.+26     	; 0x2d70 <_Z11setupForFoxP5Fox_t13EventAction_t+0x74>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "MOI");
    2d56:	e5 e9       	ldi	r30, 0x95	; 149
    2d58:	f2 e4       	ldi	r31, 0x42	; 66
    2d5a:	8d e4       	ldi	r24, 0x4D	; 77
    2d5c:	9f e4       	ldi	r25, 0x4F	; 79
    2d5e:	80 83       	st	Z, r24
    2d60:	91 83       	std	Z+1, r25	; 0x01
    2d62:	89 e4       	ldi	r24, 0x49	; 73
    2d64:	90 e0       	ldi	r25, 0x00	; 0
    2d66:	82 83       	std	Z+2, r24	; 0x02
    2d68:	93 83       	std	Z+3, r25	; 0x03
				patternNotSet = false;
    2d6a:	80 e0       	ldi	r24, 0x00	; 0
    2d6c:	01 c0       	rjmp	.+2      	; 0x2d70 <_Z11setupForFoxP5Fox_t13EventAction_t+0x74>
}


void setupForFox(Fox_t* fox, EventAction_t action)
{
	bool patternNotSet = true;
    2d6e:	81 e0       	ldi	r24, 0x01	; 1
				patternNotSet = false;
			}
		}
		case FOX_3:
		{
			if(patternNotSet)
    2d70:	88 23       	and	r24, r24
    2d72:	69 f0       	breq	.+26     	; 0x2d8e <_Z11setupForFoxP5Fox_t13EventAction_t+0x92>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "MOS");
    2d74:	e5 e9       	ldi	r30, 0x95	; 149
    2d76:	f2 e4       	ldi	r31, 0x42	; 66
    2d78:	8d e4       	ldi	r24, 0x4D	; 77
    2d7a:	9f e4       	ldi	r25, 0x4F	; 79
    2d7c:	80 83       	st	Z, r24
    2d7e:	91 83       	std	Z+1, r25	; 0x01
    2d80:	83 e5       	ldi	r24, 0x53	; 83
    2d82:	90 e0       	ldi	r25, 0x00	; 0
    2d84:	82 83       	std	Z+2, r24	; 0x02
    2d86:	93 83       	std	Z+3, r25	; 0x03
				patternNotSet = false;
    2d88:	80 e0       	ldi	r24, 0x00	; 0
    2d8a:	01 c0       	rjmp	.+2      	; 0x2d8e <_Z11setupForFoxP5Fox_t13EventAction_t+0x92>
}


void setupForFox(Fox_t* fox, EventAction_t action)
{
	bool patternNotSet = true;
    2d8c:	81 e0       	ldi	r24, 0x01	; 1
				patternNotSet = false;
			}
		}
		case FOX_4:
		{
			if(patternNotSet)
    2d8e:	88 23       	and	r24, r24
    2d90:	69 f0       	breq	.+26     	; 0x2dac <_Z11setupForFoxP5Fox_t13EventAction_t+0xb0>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "MOH");
    2d92:	e5 e9       	ldi	r30, 0x95	; 149
    2d94:	f2 e4       	ldi	r31, 0x42	; 66
    2d96:	8d e4       	ldi	r24, 0x4D	; 77
    2d98:	9f e4       	ldi	r25, 0x4F	; 79
    2d9a:	80 83       	st	Z, r24
    2d9c:	91 83       	std	Z+1, r25	; 0x01
    2d9e:	88 e4       	ldi	r24, 0x48	; 72
    2da0:	90 e0       	ldi	r25, 0x00	; 0
    2da2:	82 83       	std	Z+2, r24	; 0x02
    2da4:	93 83       	std	Z+3, r25	; 0x03
				patternNotSet = false;
    2da6:	80 e0       	ldi	r24, 0x00	; 0
    2da8:	01 c0       	rjmp	.+2      	; 0x2dac <_Z11setupForFoxP5Fox_t13EventAction_t+0xb0>
}


void setupForFox(Fox_t* fox, EventAction_t action)
{
	bool patternNotSet = true;
    2daa:	81 e0       	ldi	r24, 0x01	; 1
			}
		}
		case FOX_5:
		{
			/* Set the Morse code pattern and speed */
			if(patternNotSet)
    2dac:	88 23       	and	r24, r24
    2dae:	51 f0       	breq	.+20     	; 0x2dc4 <_Z11setupForFoxP5Fox_t13EventAction_t+0xc8>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "MO5");
    2db0:	e5 e9       	ldi	r30, 0x95	; 149
    2db2:	f2 e4       	ldi	r31, 0x42	; 66
    2db4:	8d e4       	ldi	r24, 0x4D	; 77
    2db6:	9f e4       	ldi	r25, 0x4F	; 79
    2db8:	80 83       	st	Z, r24
    2dba:	91 83       	std	Z+1, r25	; 0x01
    2dbc:	85 e3       	ldi	r24, 0x35	; 53
    2dbe:	90 e0       	ldi	r25, 0x00	; 0
    2dc0:	82 83       	std	Z+2, r24	; 0x02
    2dc2:	93 83       	std	Z+3, r25	; 0x03
				patternNotSet = false;
			}

			BOOL repeat = TRUE;
    2dc4:	11 e0       	ldi	r17, 0x01	; 1
    2dc6:	19 83       	std	Y+1, r17	; 0x01
			makeMorse(g_messages_text[PATTERN_TEXT], &repeat, NULL);
    2dc8:	40 e0       	ldi	r20, 0x00	; 0
    2dca:	50 e0       	ldi	r21, 0x00	; 0
    2dcc:	be 01       	movw	r22, r28
    2dce:	6f 5f       	subi	r22, 0xFF	; 255
    2dd0:	7f 4f       	sbci	r23, 0xFF	; 255
    2dd2:	85 e9       	ldi	r24, 0x95	; 149
    2dd4:	92 e4       	ldi	r25, 0x42	; 66
    2dd6:	0e 94 8a 23 	call	0x4714	; 0x4714 <_Z9makeMorsePcPhS0_>
			g_code_throttle = throttleValue(g_pattern_codespeed);
    2dda:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_pattern_codespeed>
    2dde:	0e 94 71 14 	call	0x28e2	; 0x28e2 <_Z13throttleValueh>
    2de2:	80 93 08 40 	sts	0x4008, r24	; 0x804008 <_ZL15g_code_throttle>
    2de6:	90 93 09 40 	sts	0x4009, r25	; 0x804009 <_ZL15g_code_throttle+0x1>

			g_event_start_time = 1;                     /* have it start a long time ago */
    2dea:	81 e0       	ldi	r24, 0x01	; 1
    2dec:	90 e0       	ldi	r25, 0x00	; 0
    2dee:	a0 e0       	ldi	r26, 0x00	; 0
    2df0:	b0 e0       	ldi	r27, 0x00	; 0
    2df2:	80 93 c3 42 	sts	0x42C3, r24	; 0x8042c3 <g_event_start_time>
    2df6:	90 93 c4 42 	sts	0x42C4, r25	; 0x8042c4 <g_event_start_time+0x1>
    2dfa:	a0 93 c5 42 	sts	0x42C5, r26	; 0x8042c5 <g_event_start_time+0x2>
    2dfe:	b0 93 c6 42 	sts	0x42C6, r27	; 0x8042c6 <g_event_start_time+0x3>
			g_event_finish_time = MAX_TIME;             /* run for a long long time */
    2e02:	8f ef       	ldi	r24, 0xFF	; 255
    2e04:	9f ef       	ldi	r25, 0xFF	; 255
    2e06:	dc 01       	movw	r26, r24
    2e08:	80 93 c7 42 	sts	0x42C7, r24	; 0x8042c7 <g_event_finish_time>
    2e0c:	90 93 c8 42 	sts	0x42C8, r25	; 0x8042c8 <g_event_finish_time+0x1>
    2e10:	a0 93 c9 42 	sts	0x42C9, r26	; 0x8042c9 <g_event_finish_time+0x2>
    2e14:	b0 93 ca 42 	sts	0x42CA, r27	; 0x8042ca <g_event_finish_time+0x3>
			g_on_air_seconds = 60;						/* on period is very long */
    2e18:	8c e3       	ldi	r24, 0x3C	; 60
    2e1a:	90 e0       	ldi	r25, 0x00	; 0
    2e1c:	80 93 0e 40 	sts	0x400E, r24	; 0x80400e <g_on_air_seconds>
    2e20:	90 93 0f 40 	sts	0x400F, r25	; 0x80400f <g_on_air_seconds+0x1>
			g_off_air_seconds = 240;                    /* off period is very short */
    2e24:	20 ef       	ldi	r18, 0xF0	; 240
    2e26:	30 e0       	ldi	r19, 0x00	; 0
    2e28:	20 93 10 40 	sts	0x4010, r18	; 0x804010 <g_off_air_seconds>
    2e2c:	30 93 11 40 	sts	0x4011, r19	; 0x804011 <g_off_air_seconds+0x1>
			g_on_the_air = 9999;                        /* start out transmitting */
    2e30:	4f e0       	ldi	r20, 0x0F	; 15
    2e32:	57 e2       	ldi	r21, 0x27	; 39
    2e34:	60 e0       	ldi	r22, 0x00	; 0
    2e36:	70 e0       	ldi	r23, 0x00	; 0
    2e38:	40 93 8b 42 	sts	0x428B, r20	; 0x80428b <_ZL12g_on_the_air>
    2e3c:	50 93 8c 42 	sts	0x428C, r21	; 0x80428c <_ZL12g_on_the_air+0x1>
    2e40:	60 93 8d 42 	sts	0x428D, r22	; 0x80428d <_ZL12g_on_the_air+0x2>
    2e44:	70 93 8e 42 	sts	0x428E, r23	; 0x80428e <_ZL12g_on_the_air+0x3>
			g_sendID_seconds_countdown = 60;			/* wait a long time to send the ID */
    2e48:	80 93 8f 42 	sts	0x428F, r24	; 0x80428f <_ZL26g_sendID_seconds_countdown>
    2e4c:	90 93 90 42 	sts	0x4290, r25	; 0x804290 <_ZL26g_sendID_seconds_countdown+0x1>
			g_event_commenced = TRUE;                   /* get things running immediately */
    2e50:	10 93 cc 42 	sts	0x42CC, r17	; 0x8042cc <g_event_commenced>
			g_event_enabled = TRUE;                     /* get things running immediately */
    2e54:	10 93 cb 42 	sts	0x42CB, r17	; 0x8042cb <g_event_enabled>
			g_last_status_code = STATUS_CODE_EVENT_STARTED_NOW_TRANSMITTING;
    2e58:	8d ef       	ldi	r24, 0xFD	; 253
    2e5a:	80 93 87 42 	sts	0x4287, r24	; 0x804287 <_ZL18g_last_status_code>
// 	digitalWrite(PIN_CW_KEY_LOGIC, OFF);    /* TX key line */
// 	g_sendAMmodulation = FALSE;
// 	g_LED_enunciating = FALSE;
// 	g_config_error = NULL_CONFIG;           /* Trigger a new configuration enunciation */

	sei();
    2e5e:	78 94       	sei
}
    2e60:	0f 90       	pop	r0
    2e62:	df 91       	pop	r29
    2e64:	cf 91       	pop	r28
    2e66:	1f 91       	pop	r17
    2e68:	08 95       	ret

00002e6a <_Z41__static_initialization_and_destruction_0ii>:
    2e6a:	0f 93       	push	r16
    2e6c:	1f 93       	push	r17
    2e6e:	cf 93       	push	r28
    2e70:	df 93       	push	r29
    2e72:	ec 01       	movw	r28, r24
    2e74:	8b 01       	movw	r16, r22
    2e76:	01 97       	sbiw	r24, 0x01	; 1
    2e78:	39 f4       	brne	.+14     	; 0x2e88 <_Z41__static_initialization_and_destruction_0ii+0x1e>
    2e7a:	6f 3f       	cpi	r22, 0xFF	; 255
    2e7c:	7f 4f       	sbci	r23, 0xFF	; 255
    2e7e:	21 f4       	brne	.+8      	; 0x2e88 <_Z41__static_initialization_and_destruction_0ii+0x1e>
//static volatile BOOL g_adcUpdated[NUMBER_OF_POLLED_ADC_CHANNELS] = { FALSE, FALSE, FALSE, FALSE, FALSE };
static volatile uint16_t g_lastConversionResult[NUMBER_OF_POLLED_ADC_CHANNELS];

extern Goertzel g_goertzel;

EepromManager g_ee_mgr;
    2e80:	8f ed       	ldi	r24, 0xDF	; 223
    2e82:	92 e4       	ldi	r25, 0x42	; 66
    2e84:	0e 94 20 1c 	call	0x3840	; 0x3840 <_ZN13EepromManagerC1Ev>
    2e88:	cd 2b       	or	r28, r29
    2e8a:	39 f4       	brne	.+14     	; 0x2e9a <_Z41__static_initialization_and_destruction_0ii+0x30>
    2e8c:	0f 3f       	cpi	r16, 0xFF	; 255
    2e8e:	1f 4f       	sbci	r17, 0xFF	; 255
    2e90:	21 f4       	brne	.+8      	; 0x2e9a <_Z41__static_initialization_and_destruction_0ii+0x30>
    2e92:	8f ed       	ldi	r24, 0xDF	; 223
    2e94:	92 e4       	ldi	r25, 0x42	; 66
    2e96:	0e 94 21 1c 	call	0x3842	; 0x3842 <_ZN13EepromManagerD1Ev>
// 	g_sendAMmodulation = FALSE;
// 	g_LED_enunciating = FALSE;
// 	g_config_error = NULL_CONFIG;           /* Trigger a new configuration enunciation */

	sei();
}
    2e9a:	df 91       	pop	r29
    2e9c:	cf 91       	pop	r28
    2e9e:	1f 91       	pop	r17
    2ea0:	0f 91       	pop	r16
    2ea2:	08 95       	ret

00002ea4 <_GLOBAL__sub_I_g_battery_type>:
    2ea4:	6f ef       	ldi	r22, 0xFF	; 255
    2ea6:	7f ef       	ldi	r23, 0xFF	; 255
    2ea8:	81 e0       	ldi	r24, 0x01	; 1
    2eaa:	90 e0       	ldi	r25, 0x00	; 0
    2eac:	0e 94 35 17 	call	0x2e6a	; 0x2e6a <_Z41__static_initialization_and_destruction_0ii>
    2eb0:	08 95       	ret

00002eb2 <_GLOBAL__sub_D_g_battery_type>:
    2eb2:	6f ef       	ldi	r22, 0xFF	; 255
    2eb4:	7f ef       	ldi	r23, 0xFF	; 255
    2eb6:	80 e0       	ldi	r24, 0x00	; 0
    2eb8:	90 e0       	ldi	r25, 0x00	; 0
    2eba:	0e 94 35 17 	call	0x2e6a	; 0x2e6a <_Z41__static_initialization_and_destruction_0ii>
    2ebe:	08 95       	ret

00002ec0 <_ZL9PORT_initv>:
	}
	
	ADC0.MUXPOS = holdMux; /* Restore ADC registers */
	
	return(temperature_in_C);
}
    2ec0:	e0 e6       	ldi	r30, 0x60	; 96
    2ec2:	f4 e0       	ldi	r31, 0x04	; 4
    2ec4:	82 89       	ldd	r24, Z+18	; 0x12
    2ec6:	88 7f       	andi	r24, 0xF8	; 248
    2ec8:	82 8b       	std	Z+18, r24	; 0x12
    2eca:	82 89       	ldd	r24, Z+18	; 0x12
    2ecc:	84 60       	ori	r24, 0x04	; 4
    2ece:	82 8b       	std	Z+18, r24	; 0x12
    2ed0:	83 89       	ldd	r24, Z+19	; 0x13
    2ed2:	88 7f       	andi	r24, 0xF8	; 248
    2ed4:	83 8b       	std	Z+19, r24	; 0x13
    2ed6:	83 89       	ldd	r24, Z+19	; 0x13
    2ed8:	84 60       	ori	r24, 0x04	; 4
    2eda:	83 8b       	std	Z+19, r24	; 0x13
    2edc:	84 89       	ldd	r24, Z+20	; 0x14
    2ede:	88 7f       	andi	r24, 0xF8	; 248
    2ee0:	84 8b       	std	Z+20, r24	; 0x14
    2ee2:	84 89       	ldd	r24, Z+20	; 0x14
    2ee4:	84 60       	ori	r24, 0x04	; 4
    2ee6:	84 8b       	std	Z+20, r24	; 0x14
    2ee8:	85 89       	ldd	r24, Z+21	; 0x15
    2eea:	88 7f       	andi	r24, 0xF8	; 248
    2eec:	85 8b       	std	Z+21, r24	; 0x15
    2eee:	85 89       	ldd	r24, Z+21	; 0x15
    2ef0:	84 60       	ori	r24, 0x04	; 4
    2ef2:	85 8b       	std	Z+21, r24	; 0x15
    2ef4:	82 89       	ldd	r24, Z+18	; 0x12
    2ef6:	87 7f       	andi	r24, 0xF7	; 247
    2ef8:	82 8b       	std	Z+18, r24	; 0x12
    2efa:	83 89       	ldd	r24, Z+19	; 0x13
    2efc:	87 7f       	andi	r24, 0xF7	; 247
    2efe:	83 8b       	std	Z+19, r24	; 0x13
    2f00:	84 89       	ldd	r24, Z+20	; 0x14
    2f02:	87 7f       	andi	r24, 0xF7	; 247
    2f04:	84 8b       	std	Z+20, r24	; 0x14
    2f06:	85 89       	ldd	r24, Z+21	; 0x15
    2f08:	87 7f       	andi	r24, 0xF7	; 247
    2f0a:	85 8b       	std	Z+21, r24	; 0x15
    2f0c:	08 95       	ret

00002f0e <_ZL10VREF0_initv>:
    2f0e:	81 e0       	ldi	r24, 0x01	; 1
    2f10:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7e00a0>
    2f14:	08 95       	ret

00002f16 <_ZL9ADC0_initb>:
    2f16:	9a e0       	ldi	r25, 0x0A	; 10
    2f18:	90 93 02 06 	sts	0x0602, r25	; 0x800602 <__TEXT_REGION_LENGTH__+0x7e0602>
    2f1c:	88 23       	and	r24, r24
    2f1e:	41 f0       	breq	.+16     	; 0x2f30 <_ZL9ADC0_initb+0x1a>
    2f20:	e0 e0       	ldi	r30, 0x00	; 0
    2f22:	f6 e0       	ldi	r31, 0x06	; 6
    2f24:	83 e0       	ldi	r24, 0x03	; 3
    2f26:	80 83       	st	Z, r24
    2f28:	81 e0       	ldi	r24, 0x01	; 1
    2f2a:	84 87       	std	Z+12, r24	; 0x0c
    2f2c:	82 87       	std	Z+10, r24	; 0x0a
    2f2e:	08 95       	ret
    2f30:	e0 e0       	ldi	r30, 0x00	; 0
    2f32:	f6 e0       	ldi	r31, 0x06	; 6
    2f34:	81 e0       	ldi	r24, 0x01	; 1
    2f36:	80 83       	st	Z, r24
    2f38:	14 86       	std	Z+12, r1	; 0x0c
    2f3a:	08 95       	ret

00002f3c <_ZL16ADC0_SYSTEM_initb>:
    2f3c:	cf 93       	push	r28
    2f3e:	c8 2f       	mov	r28, r24
    2f40:	0e 94 60 17 	call	0x2ec0	; 0x2ec0 <_ZL9PORT_initv>
    2f44:	0e 94 87 17 	call	0x2f0e	; 0x2f0e <_ZL10VREF0_initv>
    2f48:	8c 2f       	mov	r24, r28
    2f4a:	0e 94 8b 17 	call	0x2f16	; 0x2f16 <_ZL9ADC0_initb>
    2f4e:	81 e0       	ldi	r24, 0x01	; 1
    2f50:	80 93 04 43 	sts	0x4304, r24	; 0x804304 <_ZL17g_adc_initialized>
    2f54:	cf 91       	pop	r28
    2f56:	08 95       	ret

00002f58 <_ZL20ADC0_SYSTEM_shutdownv>:
    2f58:	e0 e0       	ldi	r30, 0x00	; 0
    2f5a:	f6 e0       	ldi	r31, 0x06	; 6
    2f5c:	14 86       	std	Z+12, r1	; 0x0c
    2f5e:	10 82       	st	Z, r1
    2f60:	10 92 04 43 	sts	0x4304, r1	; 0x804304 <_ZL17g_adc_initialized>
    2f64:	08 95       	ret

00002f66 <_Z41__static_initialization_and_destruction_0ii>:
    2f66:	ef 92       	push	r14
    2f68:	ff 92       	push	r15
    2f6a:	0f 93       	push	r16
    2f6c:	1f 93       	push	r17
    2f6e:	cf 93       	push	r28
    2f70:	df 93       	push	r29
    2f72:	ec 01       	movw	r28, r24
    2f74:	7b 01       	movw	r14, r22
    2f76:	01 97       	sbiw	r24, 0x01	; 1
    2f78:	79 f4       	brne	.+30     	; 0x2f98 <_Z41__static_initialization_and_destruction_0ii+0x32>
    2f7a:	6f 3f       	cpi	r22, 0xFF	; 255
    2f7c:	7f 4f       	sbci	r23, 0xFF	; 255
    2f7e:	61 f4       	brne	.+24     	; 0x2f98 <_Z41__static_initialization_and_destruction_0ii+0x32>
    2f80:	00 e0       	ldi	r16, 0x00	; 0
    2f82:	10 e4       	ldi	r17, 0x40	; 64
    2f84:	2c eb       	ldi	r18, 0xBC	; 188
    2f86:	36 e4       	ldi	r19, 0x46	; 70
    2f88:	40 e0       	ldi	r20, 0x00	; 0
    2f8a:	50 e0       	ldi	r21, 0x00	; 0
    2f8c:	69 e4       	ldi	r22, 0x49	; 73
    2f8e:	73 e4       	ldi	r23, 0x43	; 67
    2f90:	83 e0       	ldi	r24, 0x03	; 3
    2f92:	93 e4       	ldi	r25, 0x43	; 67
    2f94:	0e 94 34 1e 	call	0x3c68	; 0x3c68 <_ZN8GoertzelC1Eff>
    2f98:	cd 2b       	or	r28, r29
    2f9a:	39 f4       	brne	.+14     	; 0x2faa <_Z41__static_initialization_and_destruction_0ii+0x44>
    2f9c:	ef 20       	and	r14, r15
    2f9e:	e0 94       	com	r14
    2fa0:	21 f4       	brne	.+8      	; 0x2faa <_Z41__static_initialization_and_destruction_0ii+0x44>
    2fa2:	83 e0       	ldi	r24, 0x03	; 3
    2fa4:	93 e4       	ldi	r25, 0x43	; 67
    2fa6:	0e 94 84 1e 	call	0x3d08	; 0x3d08 <_ZN8GoertzelD1Ev>
    2faa:	df 91       	pop	r29
    2fac:	cf 91       	pop	r28
    2fae:	1f 91       	pop	r17
    2fb0:	0f 91       	pop	r16
    2fb2:	ff 90       	pop	r15
    2fb4:	ef 90       	pop	r14
    2fb6:	08 95       	ret

00002fb8 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t>:
    2fb8:	83 30       	cpi	r24, 0x03	; 3
    2fba:	c9 f0       	breq	.+50     	; 0x2fee <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x36>
    2fbc:	28 f4       	brcc	.+10     	; 0x2fc8 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x10>
    2fbe:	81 30       	cpi	r24, 0x01	; 1
    2fc0:	41 f0       	breq	.+16     	; 0x2fd2 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x1a>
    2fc2:	82 30       	cpi	r24, 0x02	; 2
    2fc4:	69 f0       	breq	.+26     	; 0x2fe0 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x28>
    2fc6:	28 c0       	rjmp	.+80     	; 0x3018 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x60>
    2fc8:	84 30       	cpi	r24, 0x04	; 4
    2fca:	c1 f0       	breq	.+48     	; 0x2ffc <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x44>
    2fcc:	85 30       	cpi	r24, 0x05	; 5
    2fce:	e9 f0       	breq	.+58     	; 0x300a <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x52>
    2fd0:	23 c0       	rjmp	.+70     	; 0x3018 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x60>
    2fd2:	81 e0       	ldi	r24, 0x01	; 1
    2fd4:	0e 94 9e 17 	call	0x2f3c	; 0x2f3c <_ZL16ADC0_SYSTEM_initb>
    2fd8:	82 e0       	ldi	r24, 0x02	; 2
    2fda:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <__TEXT_REGION_LENGTH__+0x7e0608>
    2fde:	08 95       	ret
    2fe0:	80 e0       	ldi	r24, 0x00	; 0
    2fe2:	0e 94 9e 17 	call	0x2f3c	; 0x2f3c <_ZL16ADC0_SYSTEM_initb>
    2fe6:	83 e0       	ldi	r24, 0x03	; 3
    2fe8:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <__TEXT_REGION_LENGTH__+0x7e0608>
    2fec:	08 95       	ret
    2fee:	80 e0       	ldi	r24, 0x00	; 0
    2ff0:	0e 94 9e 17 	call	0x2f3c	; 0x2f3c <_ZL16ADC0_SYSTEM_initb>
    2ff4:	84 e0       	ldi	r24, 0x04	; 4
    2ff6:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <__TEXT_REGION_LENGTH__+0x7e0608>
    2ffa:	08 95       	ret
    2ffc:	80 e0       	ldi	r24, 0x00	; 0
    2ffe:	0e 94 9e 17 	call	0x2f3c	; 0x2f3c <_ZL16ADC0_SYSTEM_initb>
    3002:	85 e0       	ldi	r24, 0x05	; 5
    3004:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <__TEXT_REGION_LENGTH__+0x7e0608>
    3008:	08 95       	ret
    300a:	80 e0       	ldi	r24, 0x00	; 0
    300c:	0e 94 9e 17 	call	0x2f3c	; 0x2f3c <_ZL16ADC0_SYSTEM_initb>
    3010:	82 e4       	ldi	r24, 0x42	; 66
    3012:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <__TEXT_REGION_LENGTH__+0x7e0608>
    3016:	08 95       	ret
    3018:	0e 94 ac 17 	call	0x2f58	; 0x2f58 <_ZL20ADC0_SYSTEM_shutdownv>
    301c:	08 95       	ret

0000301e <_Z9ADC0_readv>:
    301e:	80 91 10 06 	lds	r24, 0x0610	; 0x800610 <__TEXT_REGION_LENGTH__+0x7e0610>
    3022:	90 91 11 06 	lds	r25, 0x0611	; 0x800611 <__TEXT_REGION_LENGTH__+0x7e0611>
    3026:	08 95       	ret

00003028 <__vector_24>:
	ADC0.CTRLA = ADC_RESSEL_12BIT_gc; /* Turn off ADC leaving 12-bit resolution set */
	g_adc_initialized = false;
}

ISR(ADC0_RESRDY_vect)
{
    3028:	1f 92       	push	r1
    302a:	0f 92       	push	r0
    302c:	0f b6       	in	r0, 0x3f	; 63
    302e:	0f 92       	push	r0
    3030:	11 24       	eor	r1, r1
    3032:	0b b6       	in	r0, 0x3b	; 59
    3034:	0f 92       	push	r0
    3036:	2f 93       	push	r18
    3038:	3f 93       	push	r19
    303a:	4f 93       	push	r20
    303c:	5f 93       	push	r21
    303e:	6f 93       	push	r22
    3040:	7f 93       	push	r23
    3042:	8f 93       	push	r24
    3044:	9f 93       	push	r25
    3046:	af 93       	push	r26
    3048:	bf 93       	push	r27
    304a:	ef 93       	push	r30
    304c:	ff 93       	push	r31
	/* Clear the interrupt flag by reading the result */
	int val = ADC0_read();
    304e:	0e 94 0f 18 	call	0x301e	; 0x301e <_Z9ADC0_readv>
//	LED_toggle_level();
	if(g_goertzel.DataPoint(val))
    3052:	bc 01       	movw	r22, r24
    3054:	83 e0       	ldi	r24, 0x03	; 3
    3056:	93 e4       	ldi	r25, 0x43	; 67
    3058:	0e 94 8b 1e 	call	0x3d16	; 0x3d16 <_ZN8Goertzel9DataPointEi>
    305c:	81 11       	cpse	r24, r1
	{
		ADC0.INTCTRL = 0x00; /* disable ADC interrupt */
    305e:	10 92 0c 06 	sts	0x060C, r1	; 0x80060c <__TEXT_REGION_LENGTH__+0x7e060c>
	}
    3062:	ff 91       	pop	r31
    3064:	ef 91       	pop	r30
    3066:	bf 91       	pop	r27
    3068:	af 91       	pop	r26
    306a:	9f 91       	pop	r25
    306c:	8f 91       	pop	r24
    306e:	7f 91       	pop	r23
    3070:	6f 91       	pop	r22
    3072:	5f 91       	pop	r21
    3074:	4f 91       	pop	r20
    3076:	3f 91       	pop	r19
    3078:	2f 91       	pop	r18
    307a:	0f 90       	pop	r0
    307c:	0b be       	out	0x3b, r0	; 59
    307e:	0f 90       	pop	r0
    3080:	0f be       	out	0x3f, r0	; 63
    3082:	0f 90       	pop	r0
    3084:	1f 90       	pop	r1
    3086:	18 95       	reti

00003088 <_GLOBAL__sub_I_g_activeADCChannel>:
    3088:	6f ef       	ldi	r22, 0xFF	; 255
    308a:	7f ef       	ldi	r23, 0xFF	; 255
    308c:	81 e0       	ldi	r24, 0x01	; 1
    308e:	90 e0       	ldi	r25, 0x00	; 0
    3090:	0e 94 b3 17 	call	0x2f66	; 0x2f66 <_Z41__static_initialization_and_destruction_0ii>
    3094:	08 95       	ret

00003096 <_GLOBAL__sub_D_g_activeADCChannel>:
    3096:	6f ef       	ldi	r22, 0xFF	; 255
    3098:	7f ef       	ldi	r23, 0xFF	; 255
    309a:	80 e0       	ldi	r24, 0x00	; 0
    309c:	90 e0       	ldi	r25, 0x00	; 0
    309e:	0e 94 b3 17 	call	0x2f66	; 0x2f66 <_Z41__static_initialization_and_destruction_0ii>
    30a2:	08 95       	ret

000030a4 <_Z10wifi_powerb>:
} //~binio


void wifi_power(bool state)
{
	if(state == ON)
    30a4:	88 23       	and	r24, r24
    30a6:	21 f0       	breq	.+8      	; 0x30b0 <_Z10wifi_powerb+0xc>
 *                  false = Pin level set to "low" state
 */
static inline void PORTA_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTA.OUT |= (1 << pin);
    30a8:	81 b1       	in	r24, 0x01	; 1
    30aa:	80 62       	ori	r24, 0x20	; 32
    30ac:	81 b9       	out	0x01, r24	; 1
    30ae:	08 95       	ret
	} else {
		VPORTA.OUT &= ~(1 << pin);
    30b0:	81 b1       	in	r24, 0x01	; 1
    30b2:	8f 7d       	andi	r24, 0xDF	; 223
    30b4:	81 b9       	out	0x01, r24	; 1
    30b6:	08 95       	ret

000030b8 <_Z10wifi_resetb>:
	}
}

void wifi_reset(bool state)
{
	if(state == ON)
    30b8:	88 23       	and	r24, r24
    30ba:	21 f0       	breq	.+8      	; 0x30c4 <_Z10wifi_resetb+0xc>
    30bc:	81 b1       	in	r24, 0x01	; 1
    30be:	8f 7b       	andi	r24, 0xBF	; 191
    30c0:	81 b9       	out	0x01, r24	; 1
    30c2:	08 95       	ret
 *                  false = Pin level set to "low" state
 */
static inline void PORTA_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTA.OUT |= (1 << pin);
    30c4:	81 b1       	in	r24, 0x01	; 1
    30c6:	80 64       	ori	r24, 0x40	; 64
    30c8:	81 b9       	out	0x01, r24	; 1
    30ca:	08 95       	ret

000030cc <__vector_29>:

/**
Handle switch closure interrupts
*/
ISR(PORTC_PORT_vect)
{
    30cc:	1f 92       	push	r1
    30ce:	0f 92       	push	r0
    30d0:	0f b6       	in	r0, 0x3f	; 63
    30d2:	0f 92       	push	r0
    30d4:	11 24       	eor	r1, r1
    30d6:	8f 93       	push	r24
    30d8:	9f 93       	push	r25
	static int count = 0;
	
	if(PORTC.INTFLAGS & (1 << SWITCH))
    30da:	80 91 49 04 	lds	r24, 0x0449	; 0x800449 <__TEXT_REGION_LENGTH__+0x7e0449>
    30de:	88 23       	and	r24, r24
    30e0:	4c f4       	brge	.+18     	; 0x30f4 <__vector_29+0x28>
	{
		count++;
    30e2:	80 91 07 43 	lds	r24, 0x4307	; 0x804307 <_ZZ11__vector_29E5count>
    30e6:	90 91 08 43 	lds	r25, 0x4308	; 0x804308 <_ZZ11__vector_29E5count+0x1>
    30ea:	01 96       	adiw	r24, 0x01	; 1
    30ec:	80 93 07 43 	sts	0x4307, r24	; 0x804307 <_ZZ11__vector_29E5count>
    30f0:	90 93 08 43 	sts	0x4308, r25	; 0x804308 <_ZZ11__vector_29E5count+0x1>
	}
	
	if(PORTC.INTFLAGS & (1 << X32KHZ_SQUAREWAVE))
    30f4:	80 91 49 04 	lds	r24, 0x0449	; 0x800449 <__TEXT_REGION_LENGTH__+0x7e0449>
    30f8:	84 ff       	sbrs	r24, 4
    30fa:	09 c0       	rjmp	.+18     	; 0x310e <__vector_29+0x42>
	{
		count++;
    30fc:	80 91 07 43 	lds	r24, 0x4307	; 0x804307 <_ZZ11__vector_29E5count>
    3100:	90 91 08 43 	lds	r25, 0x4308	; 0x804308 <_ZZ11__vector_29E5count+0x1>
    3104:	01 96       	adiw	r24, 0x01	; 1
    3106:	80 93 07 43 	sts	0x4307, r24	; 0x804307 <_ZZ11__vector_29E5count>
    310a:	90 93 08 43 	sts	0x4308, r25	; 0x804308 <_ZZ11__vector_29E5count+0x1>
	}
	
	PORTC.INTFLAGS = 0xFF; /* Clear all flags */
    310e:	8f ef       	ldi	r24, 0xFF	; 255
    3110:	80 93 49 04 	sts	0x0449, r24	; 0x800449 <__TEXT_REGION_LENGTH__+0x7e0449>
}
    3114:	9f 91       	pop	r25
    3116:	8f 91       	pop	r24
    3118:	0f 90       	pop	r0
    311a:	0f be       	out	0x3f, r0	; 63
    311c:	0f 90       	pop	r0
    311e:	1f 90       	pop	r1
    3120:	18 95       	reti

00003122 <__vector_6>:

/**

*/
ISR(PORTA_PORT_vect)
{
    3122:	1f 92       	push	r1
    3124:	0f 92       	push	r0
    3126:	0f b6       	in	r0, 0x3f	; 63
    3128:	0f 92       	push	r0
    312a:	11 24       	eor	r1, r1
    312c:	8f 93       	push	r24
    312e:	9f 93       	push	r25
	static int count = 0;
	
	if(PORTA.INTFLAGS & (1 << RTC_SQW))
    3130:	80 91 09 04 	lds	r24, 0x0409	; 0x800409 <__TEXT_REGION_LENGTH__+0x7e0409>
    3134:	82 ff       	sbrs	r24, 2
    3136:	09 c0       	rjmp	.+18     	; 0x314a <__vector_6+0x28>
	{
		count++;
    3138:	80 91 05 43 	lds	r24, 0x4305	; 0x804305 <_ZZ10__vector_6E5count>
    313c:	90 91 06 43 	lds	r25, 0x4306	; 0x804306 <_ZZ10__vector_6E5count+0x1>
    3140:	01 96       	adiw	r24, 0x01	; 1
    3142:	80 93 05 43 	sts	0x4305, r24	; 0x804305 <_ZZ10__vector_6E5count>
    3146:	90 93 06 43 	sts	0x4306, r25	; 0x804306 <_ZZ10__vector_6E5count+0x1>
	}
	
	if(PORTA.INTFLAGS & (1 << ANT_CONNECT_INT))
    314a:	80 91 09 04 	lds	r24, 0x0409	; 0x800409 <__TEXT_REGION_LENGTH__+0x7e0409>
    314e:	84 ff       	sbrs	r24, 4
    3150:	09 c0       	rjmp	.+18     	; 0x3164 <__vector_6+0x42>
	{
		count++;
    3152:	80 91 05 43 	lds	r24, 0x4305	; 0x804305 <_ZZ10__vector_6E5count>
    3156:	90 91 06 43 	lds	r25, 0x4306	; 0x804306 <_ZZ10__vector_6E5count+0x1>
    315a:	01 96       	adiw	r24, 0x01	; 1
    315c:	80 93 05 43 	sts	0x4305, r24	; 0x804305 <_ZZ10__vector_6E5count>
    3160:	90 93 06 43 	sts	0x4306, r25	; 0x804306 <_ZZ10__vector_6E5count+0x1>
	}	
	
	PORTA.INTFLAGS = 0xFF; /* Clear all flags */
    3164:	8f ef       	ldi	r24, 0xFF	; 255
    3166:	80 93 09 04 	sts	0x0409, r24	; 0x800409 <__TEXT_REGION_LENGTH__+0x7e0409>
}
    316a:	9f 91       	pop	r25
    316c:	8f 91       	pop	r24
    316e:	0f 90       	pop	r0
    3170:	0f be       	out	0x3f, r0	; 63
    3172:	0f 90       	pop	r0
    3174:	1f 90       	pop	r1
    3176:	18 95       	reti

00003178 <_Z10BINIO_initv>:
 */
static inline void PORTA_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
    3178:	80 b1       	in	r24, 0x00	; 0
    317a:	8b 7f       	andi	r24, 0xFB	; 251
    317c:	80 b9       	out	0x00, r24	; 0
 */
static inline void PORTA_pin_set_isc(const uint8_t pin, const PORT_ISC_t isc)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTA + 0x10 + pin);

	*port_pin_ctrl = (*port_pin_ctrl & ~PORT_ISC_gm) | isc;
    317e:	e2 e1       	ldi	r30, 0x12	; 18
    3180:	f4 e0       	ldi	r31, 0x04	; 4
    3182:	80 81       	ld	r24, Z
    3184:	88 7f       	andi	r24, 0xF8	; 248
    3186:	82 60       	ori	r24, 0x02	; 2
    3188:	80 83       	st	Z, r24
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTA.DIR |= (1 << pin);
    318a:	80 b1       	in	r24, 0x00	; 0
    318c:	88 60       	ori	r24, 0x08	; 8
    318e:	80 b9       	out	0x00, r24	; 0
static inline void PORTA_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTA.OUT |= (1 << pin);
	} else {
		VPORTA.OUT &= ~(1 << pin);
    3190:	81 b1       	in	r24, 0x01	; 1
    3192:	87 7f       	andi	r24, 0xF7	; 247
    3194:	81 b9       	out	0x01, r24	; 1
 */
static inline void PORTA_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
    3196:	80 b1       	in	r24, 0x00	; 0
    3198:	8f 7e       	andi	r24, 0xEF	; 239
    319a:	80 b9       	out	0x00, r24	; 0
static inline void PORTA_set_pin_pull_mode(const uint8_t pin, const enum port_pull_mode pull_mode)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTA + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
    319c:	e4 e1       	ldi	r30, 0x14	; 20
    319e:	f4 e0       	ldi	r31, 0x04	; 4
    31a0:	80 81       	ld	r24, Z
    31a2:	88 60       	ori	r24, 0x08	; 8
    31a4:	80 83       	st	Z, r24
 */
static inline void PORTA_pin_set_isc(const uint8_t pin, const PORT_ISC_t isc)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTA + 0x10 + pin);

	*port_pin_ctrl = (*port_pin_ctrl & ~PORT_ISC_gm) | isc;
    31a6:	80 81       	ld	r24, Z
    31a8:	88 7f       	andi	r24, 0xF8	; 248
    31aa:	83 60       	ori	r24, 0x03	; 3
    31ac:	80 83       	st	Z, r24
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTA.DIR |= (1 << pin);
    31ae:	80 b1       	in	r24, 0x00	; 0
    31b0:	80 62       	ori	r24, 0x20	; 32
    31b2:	80 b9       	out	0x00, r24	; 0
static inline void PORTA_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTA.OUT |= (1 << pin);
	} else {
		VPORTA.OUT &= ~(1 << pin);
    31b4:	81 b1       	in	r24, 0x01	; 1
    31b6:	8f 7d       	andi	r24, 0xDF	; 223
    31b8:	81 b9       	out	0x01, r24	; 1
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTA.DIR |= (1 << pin);
    31ba:	80 b1       	in	r24, 0x00	; 0
    31bc:	80 64       	ori	r24, 0x40	; 64
    31be:	80 b9       	out	0x00, r24	; 0
static inline void PORTA_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTA.OUT |= (1 << pin);
	} else {
		VPORTA.OUT &= ~(1 << pin);
    31c0:	81 b1       	in	r24, 0x01	; 1
    31c2:	8f 7b       	andi	r24, 0xBF	; 191
    31c4:	81 b9       	out	0x01, r24	; 1
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTA.DIR |= (1 << pin);
    31c6:	80 b1       	in	r24, 0x00	; 0
    31c8:	80 68       	ori	r24, 0x80	; 128
    31ca:	80 b9       	out	0x00, r24	; 0
static inline void PORTA_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTA.OUT |= (1 << pin);
	} else {
		VPORTA.OUT &= ~(1 << pin);
    31cc:	81 b1       	in	r24, 0x01	; 1
    31ce:	8f 77       	andi	r24, 0x7F	; 127
    31d0:	81 b9       	out	0x01, r24	; 1
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTB.DIR |= (1 << pin);
    31d2:	84 b1       	in	r24, 0x04	; 4
    31d4:	81 60       	ori	r24, 0x01	; 1
    31d6:	84 b9       	out	0x04, r24	; 4
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTB.OUT |= (1 << pin);
	} else {
		VPORTB.OUT &= ~(1 << pin);
    31d8:	85 b1       	in	r24, 0x05	; 5
    31da:	8e 7f       	andi	r24, 0xFE	; 254
    31dc:	85 b9       	out	0x05, r24	; 5
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTB.DIR |= (1 << pin);
    31de:	84 b1       	in	r24, 0x04	; 4
    31e0:	82 60       	ori	r24, 0x02	; 2
    31e2:	84 b9       	out	0x04, r24	; 4
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTB.OUT |= (1 << pin);
	} else {
		VPORTB.OUT &= ~(1 << pin);
    31e4:	85 b1       	in	r24, 0x05	; 5
    31e6:	8d 7f       	andi	r24, 0xFD	; 253
    31e8:	85 b9       	out	0x05, r24	; 5
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTB.DIR |= (1 << pin);
    31ea:	84 b1       	in	r24, 0x04	; 4
    31ec:	80 61       	ori	r24, 0x10	; 16
    31ee:	84 b9       	out	0x04, r24	; 4
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTB.OUT |= (1 << pin);
	} else {
		VPORTB.OUT &= ~(1 << pin);
    31f0:	85 b1       	in	r24, 0x05	; 5
    31f2:	8f 7e       	andi	r24, 0xEF	; 239
    31f4:	85 b9       	out	0x05, r24	; 5
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTB.DIR |= (1 << pin);
    31f6:	84 b1       	in	r24, 0x04	; 4
    31f8:	80 62       	ori	r24, 0x20	; 32
    31fa:	84 b9       	out	0x04, r24	; 4
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTB.OUT |= (1 << pin);
	} else {
		VPORTB.OUT &= ~(1 << pin);
    31fc:	85 b1       	in	r24, 0x05	; 5
    31fe:	8f 7d       	andi	r24, 0xDF	; 223
    3200:	85 b9       	out	0x05, r24	; 5
 */
static inline void PORTC_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTC.DIR &= ~(1 << pin);
    3202:	88 b1       	in	r24, 0x08	; 8
    3204:	8f 7e       	andi	r24, 0xEF	; 239
    3206:	88 b9       	out	0x08, r24	; 8
		break;
	case PORT_DIR_OUT:
		VPORTC.DIR |= (1 << pin);
    3208:	88 b1       	in	r24, 0x08	; 8
    320a:	80 62       	ori	r24, 0x20	; 32
    320c:	88 b9       	out	0x08, r24	; 8
static inline void PORTC_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTC.OUT |= (1 << pin);
	} else {
		VPORTC.OUT &= ~(1 << pin);
    320e:	89 b1       	in	r24, 0x09	; 9
    3210:	8f 7d       	andi	r24, 0xDF	; 223
    3212:	89 b9       	out	0x09, r24	; 9
	switch (dir) {
	case PORT_DIR_IN:
		VPORTC.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTC.DIR |= (1 << pin);
    3214:	88 b1       	in	r24, 0x08	; 8
    3216:	80 64       	ori	r24, 0x40	; 64
    3218:	88 b9       	out	0x08, r24	; 8
static inline void PORTC_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTC.OUT |= (1 << pin);
	} else {
		VPORTC.OUT &= ~(1 << pin);
    321a:	89 b1       	in	r24, 0x09	; 9
    321c:	8f 7b       	andi	r24, 0xBF	; 191
    321e:	89 b9       	out	0x09, r24	; 9
 */
static inline void PORTC_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTC.DIR &= ~(1 << pin);
    3220:	88 b1       	in	r24, 0x08	; 8
    3222:	8f 77       	andi	r24, 0x7F	; 127
    3224:	88 b9       	out	0x08, r24	; 8
static inline void PORTC_set_pin_pull_mode(const uint8_t pin, const enum port_pull_mode pull_mode)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTC + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
    3226:	e7 e5       	ldi	r30, 0x57	; 87
    3228:	f4 e0       	ldi	r31, 0x04	; 4
    322a:	80 81       	ld	r24, Z
    322c:	88 60       	ori	r24, 0x08	; 8
    322e:	80 83       	st	Z, r24
 */
static inline void PORTC_pin_set_isc(const uint8_t pin, const PORT_ISC_t isc)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTC + 0x10 + pin);

	*port_pin_ctrl = (*port_pin_ctrl & ~PORT_ISC_gm) | isc;
    3230:	80 81       	ld	r24, Z
    3232:	88 7f       	andi	r24, 0xF8	; 248
    3234:	83 60       	ori	r24, 0x03	; 3
    3236:	80 83       	st	Z, r24
 */
static inline void PORTD_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTD.DIR &= ~(1 << pin);
    3238:	8c b1       	in	r24, 0x0c	; 12
    323a:	8e 7f       	andi	r24, 0xFE	; 254
    323c:	8c b9       	out	0x0c, r24	; 12
    323e:	8c b1       	in	r24, 0x0c	; 12
    3240:	8d 7f       	andi	r24, 0xFD	; 253
    3242:	8c b9       	out	0x0c, r24	; 12
static inline void PORTD_set_pin_pull_mode(const uint8_t pin, const enum port_pull_mode pull_mode)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTD + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
    3244:	e1 e7       	ldi	r30, 0x71	; 113
    3246:	f4 e0       	ldi	r31, 0x04	; 4
    3248:	80 81       	ld	r24, Z
    324a:	88 60       	ori	r24, 0x08	; 8
    324c:	80 83       	st	Z, r24
 */
static inline void PORTD_pin_set_isc(const uint8_t pin, const PORT_ISC_t isc)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTD + 0x10 + pin);

	*port_pin_ctrl = (*port_pin_ctrl & ~PORT_ISC_gm) | isc;
    324e:	80 81       	ld	r24, Z
    3250:	88 7f       	andi	r24, 0xF8	; 248
    3252:	83 60       	ori	r24, 0x03	; 3
    3254:	80 83       	st	Z, r24
		break;
	case PORT_DIR_OUT:
		VPORTD.DIR |= (1 << pin);
		break;
	case PORT_DIR_OFF:
		*((uint8_t *)&PORTD + 0x10 + pin) |= 1 << PORT_PULLUPEN_bp;
    3256:	e7 e7       	ldi	r30, 0x77	; 119
    3258:	f4 e0       	ldi	r31, 0x04	; 4
    325a:	80 81       	ld	r24, Z
    325c:	88 60       	ori	r24, 0x08	; 8
    325e:	80 83       	st	Z, r24
		break;
	case PORT_DIR_OUT:
		VPORTE.DIR |= (1 << pin);
		break;
	case PORT_DIR_OFF:
		*((uint8_t *)&PORTE + 0x10 + pin) |= 1 << PORT_PULLUPEN_bp;
    3260:	e0 e9       	ldi	r30, 0x90	; 144
    3262:	f4 e0       	ldi	r31, 0x04	; 4
    3264:	80 81       	ld	r24, Z
    3266:	88 60       	ori	r24, 0x08	; 8
    3268:	80 83       	st	Z, r24
    326a:	e1 e9       	ldi	r30, 0x91	; 145
    326c:	f4 e0       	ldi	r31, 0x04	; 4
    326e:	80 81       	ld	r24, Z
    3270:	88 60       	ori	r24, 0x08	; 8
    3272:	80 83       	st	Z, r24
    3274:	e2 e9       	ldi	r30, 0x92	; 146
    3276:	f4 e0       	ldi	r31, 0x04	; 4
    3278:	80 81       	ld	r24, Z
    327a:	88 60       	ori	r24, 0x08	; 8
    327c:	80 83       	st	Z, r24
    327e:	e3 e9       	ldi	r30, 0x93	; 147
    3280:	f4 e0       	ldi	r31, 0x04	; 4
    3282:	80 81       	ld	r24, Z
    3284:	88 60       	ori	r24, 0x08	; 8
    3286:	80 83       	st	Z, r24
		break;
	case PORT_DIR_OUT:
		VPORTF.DIR |= (1 << pin);
		break;
	case PORT_DIR_OFF:
		*((uint8_t *)&PORTF + 0x10 + pin) |= 1 << PORT_PULLUPEN_bp;
    3288:	e2 eb       	ldi	r30, 0xB2	; 178
    328a:	f4 e0       	ldi	r31, 0x04	; 4
    328c:	80 81       	ld	r24, Z
    328e:	88 60       	ori	r24, 0x08	; 8
    3290:	80 83       	st	Z, r24
    3292:	e3 eb       	ldi	r30, 0xB3	; 179
    3294:	f4 e0       	ldi	r31, 0x04	; 4
    3296:	80 81       	ld	r24, Z
    3298:	88 60       	ori	r24, 0x08	; 8
    329a:	80 83       	st	Z, r24
    329c:	e4 eb       	ldi	r30, 0xB4	; 180
    329e:	f4 e0       	ldi	r31, 0x04	; 4
    32a0:	80 81       	ld	r24, Z
    32a2:	88 60       	ori	r24, 0x08	; 8
    32a4:	80 83       	st	Z, r24
    32a6:	e5 eb       	ldi	r30, 0xB5	; 181
    32a8:	f4 e0       	ldi	r31, 0x04	; 4
    32aa:	80 81       	ld	r24, Z
    32ac:	88 60       	ori	r24, 0x08	; 8
    32ae:	80 83       	st	Z, r24
    32b0:	08 95       	ret

000032b2 <BOD_init>:
{

	// ccp_write_io((void*)&(BOD.CTRLA),BOD_SLEEP_DIS_gc /* Disabled */);

	BOD.INTCTRL = 0 << BOD_VLMIE_bp        /* voltage level monitor interrrupt enable: disabled */
	              | BOD_VLMCFG_FALLING_gc; /* Interrupt when supply goes below VLM level */
    32b2:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>

	// BOD.VLMCTRLA = BOD_VLMLVL_5ABOVE_gc; /* VLM threshold 5% above BOD level */

	return 0;
}
    32b6:	80 e0       	ldi	r24, 0x00	; 0
    32b8:	08 95       	ret

000032ba <CLKCTRL_init>:
 *       on calling convention. The memory model is not visible to the
 *       preprocessor, so it must be defined in the Assembler preprocessor directives.
 */
static inline void ccp_write_io(void *addr, uint8_t value)
{
	protected_write_io(addr, CCP_IOREG_gc, value);
    32ba:	44 e2       	ldi	r20, 0x24	; 36
    32bc:	68 ed       	ldi	r22, 0xD8	; 216
    32be:	88 e6       	ldi	r24, 0x68	; 104
    32c0:	90 e0       	ldi	r25, 0x00	; 0
    32c2:	0e 94 b2 24 	call	0x4964	; 0x4964 <protected_write_io>
	//		 | 0 << CLKCTRL_CLKOUT_bp /* System clock out: disabled */);

	// ccp_write_io((void*)&(CLKCTRL.MCLKLOCK),0 << CLKCTRL_LOCKEN_bp /* lock enable: disabled */);

	return 0;
}
    32c6:	80 e0       	ldi	r24, 0x00	; 0
    32c8:	08 95       	ret

000032ca <CPUINT_init>:

	// CPUINT.LVL0PRI = 0x0 << CPUINT_LVL0PRI_gp; /* Interrupt Level Priority: 0x0 */

	// CPUINT.LVL1VEC = 0x0 << CPUINT_LVL1VEC_gp; /* Interrupt Vector with High Priority: 0x0 */

	ENABLE_INTERRUPTS();
    32ca:	78 94       	sei

	return 0;
}
    32cc:	80 e0       	ldi	r24, 0x00	; 0
    32ce:	08 95       	ret

000032d0 <_ZL9VREF_initv>:
static void VREF_init(void)
{
//	VREF.DAC0REF = VREF_REFSEL_2V048_gc /* Select the 2.048V Internal Voltage Reference for DAC */
//	VREF.DAC0REF = VREF_REFSEL_2V500_gc /* Select the 2.048V Internal Voltage Reference for DAC */
//	| VREF_ALWAYSON_bm;    /* Set the Voltage Reference in Always On mode */
	VREF.DAC0REF = VREF_REFSEL_2V500_gc; /* Select the 2.048V Internal Voltage Reference for DAC */
    32d0:	83 e0       	ldi	r24, 0x03	; 3
    32d2:	80 93 a2 00 	sts	0x00A2, r24	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7e00a2>
	/* Wait VREF start-up time */
	while(util_delay_ms(VREF_STARTUP_TIME_MS));
    32d6:	6a e0       	ldi	r22, 0x0A	; 10
    32d8:	70 e0       	ldi	r23, 0x00	; 0
    32da:	80 e0       	ldi	r24, 0x00	; 0
    32dc:	90 e0       	ldi	r25, 0x00	; 0
    32de:	0e 94 b6 2c 	call	0x596c	; 0x596c <util_delay_ms>
    32e2:	81 11       	cpse	r24, r1
    32e4:	f8 cf       	rjmp	.-16     	; 0x32d6 <_ZL9VREF_initv+0x6>
}
    32e6:	08 95       	ret

000032e8 <_Z11DAC0_setValj>:
}

void DAC0_setVal(uint16_t value)
{
	/* Store the two LSbs in DAC0.DATAL */
	DAC0.DATAL = (value & LSB_MASK) << 6;
    32e8:	28 2f       	mov	r18, r24
    32ea:	22 95       	swap	r18
    32ec:	22 0f       	add	r18, r18
    32ee:	22 0f       	add	r18, r18
    32f0:	20 7c       	andi	r18, 0xC0	; 192
    32f2:	e0 ea       	ldi	r30, 0xA0	; 160
    32f4:	f6 e0       	ldi	r31, 0x06	; 6
    32f6:	22 83       	std	Z+2, r18	; 0x02
	/* Store the eight MSbs in DAC0.DATAH */
	DAC0.DATAH = value >> 2;
    32f8:	96 95       	lsr	r25
    32fa:	87 95       	ror	r24
    32fc:	96 95       	lsr	r25
    32fe:	87 95       	ror	r24
    3300:	83 83       	std	Z+3, r24	; 0x03
    3302:	08 95       	ret

00003304 <_Z9DAC0_initv>:
	while(util_delay_ms(VREF_STARTUP_TIME_MS));
}

void DAC0_init(void)
{
	VREF_init();
    3304:	0e 94 68 19 	call	0x32d0	; 0x32d0 <_ZL9VREF_initv>
	/* Disable digital input buffer */
	PORTD.PIN6CTRL &= ~PORT_ISC_gm;
    3308:	e0 e6       	ldi	r30, 0x60	; 96
    330a:	f4 e0       	ldi	r31, 0x04	; 4
    330c:	86 89       	ldd	r24, Z+22	; 0x16
    330e:	88 7f       	andi	r24, 0xF8	; 248
    3310:	86 8b       	std	Z+22, r24	; 0x16
	PORTD.PIN6CTRL |= PORT_ISC_INPUT_DISABLE_gc;
    3312:	86 89       	ldd	r24, Z+22	; 0x16
    3314:	84 60       	ori	r24, 0x04	; 4
    3316:	86 8b       	std	Z+22, r24	; 0x16
	/* Disable pull-up resistor */
	PORTD.PIN6CTRL &= ~PORT_PULLUPEN_bm;
    3318:	86 89       	ldd	r24, Z+22	; 0x16
    331a:	87 7f       	andi	r24, 0xF7	; 247
    331c:	86 8b       	std	Z+22, r24	; 0x16
	DAC0.CTRLA = DAC_ENABLE_bm          /* Enable DAC */
	| DAC_OUTEN_bm           /* Enable output buffer */
	| DAC_RUNSTDBY_bm;       /* Enable Run in Standby mode */
    331e:	81 ec       	ldi	r24, 0xC1	; 193
    3320:	80 93 a0 06 	sts	0x06A0, r24	; 0x8006a0 <__TEXT_REGION_LENGTH__+0x7e06a0>
	
	DAC0_setVal(DAC_DEFAULT_VALUE);
    3324:	80 e0       	ldi	r24, 0x00	; 0
    3326:	90 e0       	ldi	r25, 0x00	; 0
    3328:	0e 94 74 19 	call	0x32e8	; 0x32e8 <_Z11DAC0_setValj>
    332c:	08 95       	ret

0000332e <mcu_init>:
	 * disables all peripherals to save power. Driver shall enable
	 * peripheral if used */

	/* Set all pins to low power mode */

	for (uint8_t i = 0; i < 8; i++) {
    332e:	80 e0       	ldi	r24, 0x00	; 0
    3330:	88 30       	cpi	r24, 0x08	; 8
    3332:	48 f4       	brcc	.+18     	; 0x3346 <mcu_init+0x18>
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    3334:	e8 2f       	mov	r30, r24
    3336:	f0 e0       	ldi	r31, 0x00	; 0
    3338:	e0 5f       	subi	r30, 0xF0	; 240
    333a:	fb 4f       	sbci	r31, 0xFB	; 251
    333c:	90 81       	ld	r25, Z
    333e:	98 60       	ori	r25, 0x08	; 8
    3340:	90 83       	st	Z, r25
	 * disables all peripherals to save power. Driver shall enable
	 * peripheral if used */

	/* Set all pins to low power mode */

	for (uint8_t i = 0; i < 8; i++) {
    3342:	8f 5f       	subi	r24, 0xFF	; 255
    3344:	f5 cf       	rjmp	.-22     	; 0x3330 <mcu_init+0x2>
    3346:	80 e0       	ldi	r24, 0x00	; 0
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    3348:	88 30       	cpi	r24, 0x08	; 8
    334a:	48 f4       	brcc	.+18     	; 0x335e <mcu_init+0x30>
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    334c:	e8 2f       	mov	r30, r24
    334e:	f0 e0       	ldi	r31, 0x00	; 0
    3350:	e0 5d       	subi	r30, 0xD0	; 208
    3352:	fb 4f       	sbci	r31, 0xFB	; 251
    3354:	90 81       	ld	r25, Z
    3356:	98 60       	ori	r25, 0x08	; 8
    3358:	90 83       	st	Z, r25

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    335a:	8f 5f       	subi	r24, 0xFF	; 255
    335c:	f5 cf       	rjmp	.-22     	; 0x3348 <mcu_init+0x1a>
    335e:	80 e0       	ldi	r24, 0x00	; 0
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    3360:	88 30       	cpi	r24, 0x08	; 8
    3362:	48 f4       	brcc	.+18     	; 0x3376 <mcu_init+0x48>
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    3364:	e8 2f       	mov	r30, r24
    3366:	f0 e0       	ldi	r31, 0x00	; 0
    3368:	e0 5b       	subi	r30, 0xB0	; 176
    336a:	fb 4f       	sbci	r31, 0xFB	; 251
    336c:	90 81       	ld	r25, Z
    336e:	98 60       	ori	r25, 0x08	; 8
    3370:	90 83       	st	Z, r25

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    3372:	8f 5f       	subi	r24, 0xFF	; 255
    3374:	f5 cf       	rjmp	.-22     	; 0x3360 <mcu_init+0x32>
    3376:	80 e0       	ldi	r24, 0x00	; 0
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    3378:	88 30       	cpi	r24, 0x08	; 8
    337a:	48 f4       	brcc	.+18     	; 0x338e <mcu_init+0x60>
		*((uint8_t *)&PORTD + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    337c:	e8 2f       	mov	r30, r24
    337e:	f0 e0       	ldi	r31, 0x00	; 0
    3380:	e0 59       	subi	r30, 0x90	; 144
    3382:	fb 4f       	sbci	r31, 0xFB	; 251
    3384:	90 81       	ld	r25, Z
    3386:	98 60       	ori	r25, 0x08	; 8
    3388:	90 83       	st	Z, r25

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    338a:	8f 5f       	subi	r24, 0xFF	; 255
    338c:	f5 cf       	rjmp	.-22     	; 0x3378 <mcu_init+0x4a>
    338e:	80 e0       	ldi	r24, 0x00	; 0
		*((uint8_t *)&PORTD + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    3390:	88 30       	cpi	r24, 0x08	; 8
    3392:	48 f4       	brcc	.+18     	; 0x33a6 <mcu_init+0x78>
		*((uint8_t *)&PORTE + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    3394:	e8 2f       	mov	r30, r24
    3396:	f0 e0       	ldi	r31, 0x00	; 0
    3398:	e0 57       	subi	r30, 0x70	; 112
    339a:	fb 4f       	sbci	r31, 0xFB	; 251
    339c:	90 81       	ld	r25, Z
    339e:	98 60       	ori	r25, 0x08	; 8
    33a0:	90 83       	st	Z, r25

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTD + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    33a2:	8f 5f       	subi	r24, 0xFF	; 255
    33a4:	f5 cf       	rjmp	.-22     	; 0x3390 <mcu_init+0x62>
    33a6:	80 e0       	ldi	r24, 0x00	; 0
		*((uint8_t *)&PORTE + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    33a8:	88 30       	cpi	r24, 0x08	; 8
    33aa:	48 f4       	brcc	.+18     	; 0x33be <mcu_init+0x90>
		*((uint8_t *)&PORTF + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    33ac:	e8 2f       	mov	r30, r24
    33ae:	f0 e0       	ldi	r31, 0x00	; 0
    33b0:	e0 55       	subi	r30, 0x50	; 80
    33b2:	fb 4f       	sbci	r31, 0xFB	; 251
    33b4:	90 81       	ld	r25, Z
    33b6:	98 60       	ori	r25, 0x08	; 8
    33b8:	90 83       	st	Z, r25

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTE + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    33ba:	8f 5f       	subi	r24, 0xFF	; 255
    33bc:	f5 cf       	rjmp	.-22     	; 0x33a8 <mcu_init+0x7a>
    33be:	08 95       	ret

000033c0 <system_init>:
/**
 * \brief System initialization
 */
void system_init()
{
	mcu_init();
    33c0:	0e 94 97 19 	call	0x332e	; 0x332e <mcu_init>

	CLKCTRL_init(); /* Set CPU clock speed appropriately */
    33c4:	0e 94 5d 19 	call	0x32ba	; 0x32ba <CLKCTRL_init>
	TIMERB_init(); /* Timers must be initialized before utility_delay functions will work */
    33c8:	0e 94 99 2c 	call	0x5932	; 0x5932 <TIMERB_init>
	CPUINT_init(); /* Interrupts must also be enabled before timer interrupts will function */
    33cc:	0e 94 65 19 	call	0x32ca	; 0x32ca <CPUINT_init>
	BINIO_init();
    33d0:	0e 94 bc 18 	call	0x3178	; 0x3178 <_Z10BINIO_initv>
	switch (dir) {
	case PORT_DIR_IN:
		VPORTC.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTC.DIR |= (1 << pin);
    33d4:	88 b1       	in	r24, 0x08	; 8
    33d6:	80 64       	ori	r24, 0x40	; 64
    33d8:	88 b9       	out	0x08, r24	; 8
 *                  false = Pin level set to "low" state
 */
static inline void PORTC_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTC.OUT |= (1 << pin);
    33da:	89 b1       	in	r24, 0x09	; 9
    33dc:	80 64       	ori	r24, 0x40	; 64
    33de:	89 b9       	out	0x09, r24	; 9

	LED_set_dir(PORT_DIR_OUT);
	LED_set_level(OFF);

	SLPCTRL_init();
    33e0:	0e 94 97 2c 	call	0x592e	; 0x592e <SLPCTRL_init>
	
	DAC0_init();
    33e4:	0e 94 82 19 	call	0x3304	; 0x3304 <_Z9DAC0_initv>

	linkbus_init(LB_BAUD, LINKBUS_USART);
    33e8:	40 e0       	ldi	r20, 0x00	; 0
    33ea:	60 e8       	ldi	r22, 0x80	; 128
    33ec:	75 e2       	ldi	r23, 0x25	; 37
    33ee:	80 e0       	ldi	r24, 0x00	; 0
    33f0:	90 e0       	ldi	r25, 0x00	; 0
    33f2:	0e 94 84 21 	call	0x4308	; 0x4308 <_Z12linkbus_initm14USART_Number_t>
	serialbus_init(SB_BAUD, SERIALBUS_USART);
    33f6:	41 e0       	ldi	r20, 0x01	; 1
    33f8:	60 e8       	ldi	r22, 0x80	; 128
    33fa:	75 e2       	ldi	r23, 0x25	; 37
    33fc:	80 e0       	ldi	r24, 0x00	; 0
    33fe:	90 e0       	ldi	r25, 0x00	; 0
    3400:	0e 94 bb 25 	call	0x4b76	; 0x4b76 <serialbus_init>

	BOD_init();
    3404:	0e 94 59 19 	call	0x32b2	; 0x32b2 <BOD_init>
    3408:	08 95       	ret

0000340a <ds3231_get_epoch>:
		else
		{
			data[1] = 0x04;
			I2C_0_SendData(DS3231_I2C_SLAVE_ADDR, data, 2);
		}
	}
    340a:	4f 92       	push	r4
    340c:	5f 92       	push	r5
    340e:	6f 92       	push	r6
    3410:	7f 92       	push	r7
    3412:	8f 92       	push	r8
    3414:	9f 92       	push	r9
    3416:	af 92       	push	r10
    3418:	bf 92       	push	r11
    341a:	cf 92       	push	r12
    341c:	df 92       	push	r13
    341e:	ef 92       	push	r14
    3420:	ff 92       	push	r15
    3422:	0f 93       	push	r16
    3424:	1f 93       	push	r17
    3426:	cf 93       	push	r28
    3428:	df 93       	push	r29
    342a:	cd b7       	in	r28, 0x3d	; 61
    342c:	de b7       	in	r29, 0x3e	; 62
    342e:	63 97       	sbiw	r28, 0x13	; 19
    3430:	cd bf       	out	0x3d, r28	; 61
    3432:	de bf       	out	0x3e, r29	; 62
    3434:	5c 01       	movw	r10, r24
    3436:	be 01       	movw	r22, r28
    3438:	6f 5f       	subi	r22, 0xFF	; 255
    343a:	7f 4f       	sbci	r23, 0xFF	; 255
    343c:	87 e0       	ldi	r24, 0x07	; 7
    343e:	db 01       	movw	r26, r22
    3440:	1d 92       	st	X+, r1
    3442:	8a 95       	dec	r24
    3444:	e9 f7       	brne	.-6      	; 0x3440 <ds3231_get_epoch+0x36>
    3446:	47 e0       	ldi	r20, 0x07	; 7
    3448:	80 ed       	ldi	r24, 0xD0	; 208
    344a:	0e 94 8b 1f 	call	0x3f16	; 0x3f16 <I2C_0_GetData>
    344e:	98 2e       	mov	r9, r24
    3450:	b7 e0       	ldi	r27, 0x07	; 7
    3452:	8b 13       	cpse	r24, r27
    3454:	04 c1       	rjmp	.+520    	; 0x365e <ds3231_get_epoch+0x254>
    3456:	fe 01       	movw	r30, r28
    3458:	38 96       	adiw	r30, 0x08	; 8
    345a:	8c e0       	ldi	r24, 0x0C	; 12
    345c:	df 01       	movw	r26, r30
    345e:	1d 92       	st	X+, r1
    3460:	8a 95       	dec	r24
    3462:	e9 f7       	brne	.-6      	; 0x345e <ds3231_get_epoch+0x54>
    3464:	2f 81       	ldd	r18, Y+7	; 0x07
    3466:	82 2f       	mov	r24, r18
    3468:	8f 70       	andi	r24, 0x0F	; 15
    346a:	e8 2e       	mov	r14, r24
    346c:	f1 2c       	mov	r15, r1
    346e:	c7 01       	movw	r24, r14
    3470:	8c 59       	subi	r24, 0x9C	; 156
    3472:	9f 4f       	sbci	r25, 0xFF	; 255
    3474:	22 95       	swap	r18
    3476:	2f 70       	andi	r18, 0x0F	; 15
    3478:	30 e0       	ldi	r19, 0x00	; 0
    347a:	79 01       	movw	r14, r18
    347c:	ee 0c       	add	r14, r14
    347e:	ff 1c       	adc	r15, r15
    3480:	22 0f       	add	r18, r18
    3482:	33 1f       	adc	r19, r19
    3484:	22 0f       	add	r18, r18
    3486:	33 1f       	adc	r19, r19
    3488:	22 0f       	add	r18, r18
    348a:	33 1f       	adc	r19, r19
    348c:	2e 0d       	add	r18, r14
    348e:	3f 1d       	adc	r19, r15
    3490:	7c 01       	movw	r14, r24
    3492:	e2 0e       	add	r14, r18
    3494:	f3 1e       	adc	r15, r19
    3496:	67 01       	movw	r12, r14
    3498:	b4 e9       	ldi	r27, 0x94	; 148
    349a:	cb 1a       	sub	r12, r27
    349c:	b8 ef       	ldi	r27, 0xF8	; 248
    349e:	db 0a       	sbc	r13, r27
    34a0:	8e 81       	ldd	r24, Y+6	; 0x06
    34a2:	98 2f       	mov	r25, r24
    34a4:	9f 70       	andi	r25, 0x0F	; 15
    34a6:	82 95       	swap	r24
    34a8:	8f 70       	andi	r24, 0x0F	; 15
    34aa:	88 0f       	add	r24, r24
    34ac:	08 2f       	mov	r16, r24
    34ae:	00 0f       	add	r16, r16
    34b0:	00 0f       	add	r16, r16
    34b2:	80 0f       	add	r24, r16
    34b4:	08 2f       	mov	r16, r24
    34b6:	09 0f       	add	r16, r25
    34b8:	ed 81       	ldd	r30, Y+5	; 0x05
    34ba:	8e 2f       	mov	r24, r30
    34bc:	8f 70       	andi	r24, 0x0F	; 15
    34be:	e2 95       	swap	r30
    34c0:	ef 70       	andi	r30, 0x0F	; 15
    34c2:	ee 0f       	add	r30, r30
    34c4:	8e 2e       	mov	r8, r30
    34c6:	88 0c       	add	r8, r8
    34c8:	88 0c       	add	r8, r8
    34ca:	e8 0d       	add	r30, r8
    34cc:	8e 2e       	mov	r8, r30
    34ce:	88 0e       	add	r8, r24
    34d0:	11 e0       	ldi	r17, 0x01	; 1
    34d2:	10 17       	cp	r17, r16
    34d4:	60 f4       	brcc	.+24     	; 0x34ee <ds3231_get_epoch+0xe4>
    34d6:	61 2f       	mov	r22, r17
    34d8:	c6 01       	movw	r24, r12
    34da:	0e 94 2c 01 	call	0x258	; 0x258 <month_length>
    34de:	28 89       	ldd	r18, Y+16	; 0x10
    34e0:	39 89       	ldd	r19, Y+17	; 0x11
    34e2:	28 0f       	add	r18, r24
    34e4:	31 1d       	adc	r19, r1
    34e6:	28 8b       	std	Y+16, r18	; 0x10
    34e8:	39 8b       	std	Y+17, r19	; 0x11
    34ea:	1f 5f       	subi	r17, 0xFF	; 255
    34ec:	f2 cf       	rjmp	.-28     	; 0x34d2 <ds3231_get_epoch+0xc8>
    34ee:	e8 2d       	mov	r30, r8
    34f0:	88 0c       	add	r8, r8
    34f2:	ff 0b       	sbc	r31, r31
    34f4:	31 97       	sbiw	r30, 0x01	; 1
    34f6:	88 89       	ldd	r24, Y+16	; 0x10
    34f8:	99 89       	ldd	r25, Y+17	; 0x11
    34fa:	e8 0f       	add	r30, r24
    34fc:	f9 1f       	adc	r31, r25
    34fe:	89 81       	ldd	r24, Y+1	; 0x01
    3500:	98 2f       	mov	r25, r24
    3502:	92 95       	swap	r25
    3504:	9f 70       	andi	r25, 0x0F	; 15
    3506:	99 0f       	add	r25, r25
    3508:	49 2f       	mov	r20, r25
    350a:	44 0f       	add	r20, r20
    350c:	44 0f       	add	r20, r20
    350e:	49 0f       	add	r20, r25
    3510:	8f 70       	andi	r24, 0x0F	; 15
    3512:	48 0f       	add	r20, r24
    3514:	3a 81       	ldd	r19, Y+2	; 0x02
    3516:	23 2f       	mov	r18, r19
    3518:	22 95       	swap	r18
    351a:	2f 70       	andi	r18, 0x0F	; 15
    351c:	22 0f       	add	r18, r18
    351e:	92 2f       	mov	r25, r18
    3520:	99 0f       	add	r25, r25
    3522:	99 0f       	add	r25, r25
    3524:	82 2f       	mov	r24, r18
    3526:	89 0f       	add	r24, r25
    3528:	23 2f       	mov	r18, r19
    352a:	2f 70       	andi	r18, 0x0F	; 15
    352c:	28 0f       	add	r18, r24
    352e:	ab 81       	ldd	r26, Y+3	; 0x03
    3530:	6a 2f       	mov	r22, r26
    3532:	70 e0       	ldi	r23, 0x00	; 0
    3534:	cb 01       	movw	r24, r22
    3536:	95 95       	asr	r25
    3538:	87 95       	ror	r24
    353a:	95 95       	asr	r25
    353c:	87 95       	ror	r24
    353e:	95 95       	asr	r25
    3540:	87 95       	ror	r24
    3542:	95 95       	asr	r25
    3544:	87 95       	ror	r24
    3546:	95 95       	asr	r25
    3548:	87 95       	ror	r24
    354a:	38 2f       	mov	r19, r24
    354c:	31 70       	andi	r19, 0x01	; 1
    354e:	cb 01       	movw	r24, r22
    3550:	95 95       	asr	r25
    3552:	87 95       	ror	r24
    3554:	95 95       	asr	r25
    3556:	87 95       	ror	r24
    3558:	95 95       	asr	r25
    355a:	87 95       	ror	r24
    355c:	95 95       	asr	r25
    355e:	87 95       	ror	r24
    3560:	81 70       	andi	r24, 0x01	; 1
    3562:	88 0f       	add	r24, r24
    3564:	98 2f       	mov	r25, r24
    3566:	99 0f       	add	r25, r25
    3568:	99 0f       	add	r25, r25
    356a:	89 0f       	add	r24, r25
    356c:	af 70       	andi	r26, 0x0F	; 15
    356e:	a8 0f       	add	r26, r24
    3570:	06 2e       	mov	r0, r22
    3572:	67 2f       	mov	r22, r23
    3574:	00 0c       	add	r0, r0
    3576:	66 1f       	adc	r22, r22
    3578:	77 0b       	sbc	r23, r23
    357a:	00 0c       	add	r0, r0
    357c:	66 1f       	adc	r22, r22
    357e:	77 1f       	adc	r23, r23
    3580:	60 ff       	sbrs	r22, 0
    3582:	04 c0       	rjmp	.+8      	; 0x358c <ds3231_get_epoch+0x182>
    3584:	33 23       	and	r19, r19
    3586:	21 f0       	breq	.+8      	; 0x3590 <ds3231_get_epoch+0x186>
    3588:	a4 5f       	subi	r26, 0xF4	; 244
    358a:	02 c0       	rjmp	.+4      	; 0x3590 <ds3231_get_epoch+0x186>
    358c:	31 11       	cpse	r19, r1
    358e:	ac 5e       	subi	r26, 0xEC	; 236
    3590:	04 2e       	mov	r0, r20
    3592:	00 0c       	add	r0, r0
    3594:	55 0b       	sbc	r21, r21
    3596:	8c e3       	ldi	r24, 0x3C	; 60
    3598:	28 02       	muls	r18, r24
    359a:	40 0d       	add	r20, r0
    359c:	51 1d       	adc	r21, r1
    359e:	11 24       	eor	r1, r1
    35a0:	0a 2e       	mov	r0, r26
    35a2:	00 0c       	add	r0, r0
    35a4:	bb 0b       	sbc	r27, r27
    35a6:	20 e1       	ldi	r18, 0x10	; 16
    35a8:	3e e0       	ldi	r19, 0x0E	; 14
    35aa:	0e 94 c2 32 	call	0x6584	; 0x6584 <__usmulhisi3>
    35ae:	2a 01       	movw	r4, r20
    35b0:	55 0f       	add	r21, r21
    35b2:	66 08       	sbc	r6, r6
    35b4:	77 08       	sbc	r7, r7
    35b6:	46 0e       	add	r4, r22
    35b8:	57 1e       	adc	r5, r23
    35ba:	68 1e       	adc	r6, r24
    35bc:	79 1e       	adc	r7, r25
    35be:	df 01       	movw	r26, r30
    35c0:	20 e8       	ldi	r18, 0x80	; 128
    35c2:	31 e5       	ldi	r19, 0x51	; 81
    35c4:	41 e0       	ldi	r20, 0x01	; 1
    35c6:	50 e0       	ldi	r21, 0x00	; 0
    35c8:	0e 94 d4 32 	call	0x65a8	; 0x65a8 <__mulshisi3>
    35cc:	46 0e       	add	r4, r22
    35ce:	57 1e       	adc	r5, r23
    35d0:	68 1e       	adc	r6, r24
    35d2:	79 1e       	adc	r7, r25
    35d4:	d7 01       	movw	r26, r14
    35d6:	a6 54       	subi	r26, 0x46	; 70
    35d8:	b1 09       	sbc	r27, r1
    35da:	20 e8       	ldi	r18, 0x80	; 128
    35dc:	33 e3       	ldi	r19, 0x33	; 51
    35de:	41 ee       	ldi	r20, 0xE1	; 225
    35e0:	51 e0       	ldi	r21, 0x01	; 1
    35e2:	0e 94 d4 32 	call	0x65a8	; 0x65a8 <__mulshisi3>
    35e6:	46 0e       	add	r4, r22
    35e8:	57 1e       	adc	r5, r23
    35ea:	68 1e       	adc	r6, r24
    35ec:	79 1e       	adc	r7, r25
    35ee:	c7 01       	movw	r24, r14
    35f0:	85 54       	subi	r24, 0x45	; 69
    35f2:	91 09       	sbc	r25, r1
    35f4:	dc 01       	movw	r26, r24
    35f6:	0a f4       	brpl	.+2      	; 0x35fa <ds3231_get_epoch+0x1f0>
    35f8:	13 96       	adiw	r26, 0x03	; 3
    35fa:	b5 95       	asr	r27
    35fc:	a7 95       	ror	r26
    35fe:	b5 95       	asr	r27
    3600:	a7 95       	ror	r26
    3602:	20 e8       	ldi	r18, 0x80	; 128
    3604:	31 e5       	ldi	r19, 0x51	; 81
    3606:	41 e0       	ldi	r20, 0x01	; 1
    3608:	50 e0       	ldi	r21, 0x00	; 0
    360a:	0e 94 d4 32 	call	0x65a8	; 0x65a8 <__mulshisi3>
    360e:	46 0e       	add	r4, r22
    3610:	57 1e       	adc	r5, r23
    3612:	68 1e       	adc	r6, r24
    3614:	79 1e       	adc	r7, r25
    3616:	c7 01       	movw	r24, r14
    3618:	01 97       	sbiw	r24, 0x01	; 1
    361a:	64 e6       	ldi	r22, 0x64	; 100
    361c:	70 e0       	ldi	r23, 0x00	; 0
    361e:	0e 94 55 32 	call	0x64aa	; 0x64aa <__divmodhi4>
    3622:	db 01       	movw	r26, r22
    3624:	20 e8       	ldi	r18, 0x80	; 128
    3626:	3e ea       	ldi	r19, 0xAE	; 174
    3628:	4e ef       	ldi	r20, 0xFE	; 254
    362a:	5f ef       	ldi	r21, 0xFF	; 255
    362c:	0e 94 d4 32 	call	0x65a8	; 0x65a8 <__mulshisi3>
    3630:	46 0e       	add	r4, r22
    3632:	57 1e       	adc	r5, r23
    3634:	68 1e       	adc	r6, r24
    3636:	79 1e       	adc	r7, r25
    3638:	c7 01       	movw	r24, r14
    363a:	85 5d       	subi	r24, 0xD5	; 213
    363c:	9e 4f       	sbci	r25, 0xFE	; 254
    363e:	60 e9       	ldi	r22, 0x90	; 144
    3640:	71 e0       	ldi	r23, 0x01	; 1
    3642:	0e 94 55 32 	call	0x64aa	; 0x64aa <__divmodhi4>
    3646:	db 01       	movw	r26, r22
    3648:	20 e8       	ldi	r18, 0x80	; 128
    364a:	31 e5       	ldi	r19, 0x51	; 81
    364c:	41 e0       	ldi	r20, 0x01	; 1
    364e:	50 e0       	ldi	r21, 0x00	; 0
    3650:	0e 94 d4 32 	call	0x65a8	; 0x65a8 <__mulshisi3>
    3654:	64 0d       	add	r22, r4
    3656:	75 1d       	adc	r23, r5
    3658:	86 1d       	adc	r24, r6
    365a:	97 1d       	adc	r25, r7
    365c:	03 c0       	rjmp	.+6      	; 0x3664 <ds3231_get_epoch+0x25a>
    365e:	60 e0       	ldi	r22, 0x00	; 0
    3660:	70 e0       	ldi	r23, 0x00	; 0
    3662:	cb 01       	movw	r24, r22
    3664:	a1 14       	cp	r10, r1
    3666:	b1 04       	cpc	r11, r1
    3668:	41 f0       	breq	.+16     	; 0x367a <ds3231_get_epoch+0x270>
    366a:	a7 e0       	ldi	r26, 0x07	; 7
    366c:	9a 16       	cp	r9, r26
    366e:	11 f0       	breq	.+4      	; 0x3674 <ds3231_get_epoch+0x26a>
    3670:	2c ef       	ldi	r18, 0xFC	; 252
    3672:	01 c0       	rjmp	.+2      	; 0x3676 <ds3231_get_epoch+0x26c>
    3674:	20 e0       	ldi	r18, 0x00	; 0
    3676:	f5 01       	movw	r30, r10
    3678:	20 83       	st	Z, r18
    367a:	63 96       	adiw	r28, 0x13	; 19
    367c:	cd bf       	out	0x3d, r28	; 61
    367e:	de bf       	out	0x3e, r29	; 62
    3680:	df 91       	pop	r29
    3682:	cf 91       	pop	r28
    3684:	1f 91       	pop	r17
    3686:	0f 91       	pop	r16
    3688:	ff 90       	pop	r15
    368a:	ef 90       	pop	r14
    368c:	df 90       	pop	r13
    368e:	cf 90       	pop	r12
    3690:	bf 90       	pop	r11
    3692:	af 90       	pop	r10
    3694:	9f 90       	pop	r9
    3696:	8f 90       	pop	r8
    3698:	7f 90       	pop	r7
    369a:	6f 90       	pop	r6
    369c:	5f 90       	pop	r5
    369e:	4f 90       	pop	r4
    36a0:	08 95       	ret

000036a2 <ds3231_get_temp>:
    36a2:	0f 93       	push	r16
    36a4:	1f 93       	push	r17
    36a6:	cf 93       	push	r28
    36a8:	df 93       	push	r29
    36aa:	00 d0       	rcall	.+0      	; 0x36ac <ds3231_get_temp+0xa>
    36ac:	cd b7       	in	r28, 0x3d	; 61
    36ae:	de b7       	in	r29, 0x3e	; 62
    36b0:	8c 01       	movw	r16, r24
    36b2:	1a 82       	std	Y+2, r1	; 0x02
    36b4:	81 e1       	ldi	r24, 0x11	; 17
    36b6:	89 83       	std	Y+1, r24	; 0x01
    36b8:	42 e0       	ldi	r20, 0x02	; 2
    36ba:	be 01       	movw	r22, r28
    36bc:	6f 5f       	subi	r22, 0xFF	; 255
    36be:	7f 4f       	sbci	r23, 0xFF	; 255
    36c0:	80 ed       	ldi	r24, 0xD0	; 208
    36c2:	0e 94 8b 1f 	call	0x3f16	; 0x3f16 <I2C_0_GetData>
    36c6:	91 e0       	ldi	r25, 0x01	; 1
    36c8:	82 30       	cpi	r24, 0x02	; 2
    36ca:	09 f4       	brne	.+2      	; 0x36ce <ds3231_get_temp+0x2c>
    36cc:	90 e0       	ldi	r25, 0x00	; 0
    36ce:	82 30       	cpi	r24, 0x02	; 2
    36d0:	49 f4       	brne	.+18     	; 0x36e4 <ds3231_get_temp+0x42>
    36d2:	29 81       	ldd	r18, Y+1	; 0x01
    36d4:	30 e0       	ldi	r19, 0x00	; 0
    36d6:	32 2f       	mov	r19, r18
    36d8:	22 27       	eor	r18, r18
    36da:	8a 81       	ldd	r24, Y+2	; 0x02
    36dc:	28 2b       	or	r18, r24
    36de:	f8 01       	movw	r30, r16
    36e0:	20 83       	st	Z, r18
    36e2:	31 83       	std	Z+1, r19	; 0x01
    36e4:	89 2f       	mov	r24, r25
    36e6:	0f 90       	pop	r0
    36e8:	0f 90       	pop	r0
    36ea:	df 91       	pop	r29
    36ec:	cf 91       	pop	r28
    36ee:	1f 91       	pop	r17
    36f0:	0f 91       	pop	r16
    36f2:	08 95       	ret

000036f4 <ds3231_set_date_time>:
    36f4:	0f 93       	push	r16
    36f6:	1f 93       	push	r17
    36f8:	cf 93       	push	r28
    36fa:	df 93       	push	r29
    36fc:	cd b7       	in	r28, 0x3d	; 61
    36fe:	de b7       	in	r29, 0x3e	; 62
    3700:	28 97       	sbiw	r28, 0x08	; 8
    3702:	cd bf       	out	0x3d, r28	; 61
    3704:	de bf       	out	0x3e, r29	; 62
    3706:	fc 01       	movw	r30, r24
    3708:	8e 01       	movw	r16, r28
    370a:	0f 5f       	subi	r16, 0xFF	; 255
    370c:	1f 4f       	sbci	r17, 0xFF	; 255
    370e:	88 e0       	ldi	r24, 0x08	; 8
    3710:	d8 01       	movw	r26, r16
    3712:	1d 92       	st	X+, r1
    3714:	8a 95       	dec	r24
    3716:	e9 f7       	brne	.-6      	; 0x3712 <ds3231_set_date_time+0x1e>
    3718:	82 89       	ldd	r24, Z+18	; 0x12
    371a:	20 ed       	ldi	r18, 0xD0	; 208
    371c:	28 0f       	add	r18, r24
    371e:	91 89       	ldd	r25, Z+17	; 0x11
    3720:	89 2f       	mov	r24, r25
    3722:	90 e0       	ldi	r25, 0x00	; 0
    3724:	c0 97       	sbiw	r24, 0x30	; 48
    3726:	82 95       	swap	r24
    3728:	92 95       	swap	r25
    372a:	90 7f       	andi	r25, 0xF0	; 240
    372c:	98 27       	eor	r25, r24
    372e:	80 7f       	andi	r24, 0xF0	; 240
    3730:	98 27       	eor	r25, r24
    3732:	82 2b       	or	r24, r18
    3734:	8a 83       	std	Y+2, r24	; 0x02
    3736:	87 85       	ldd	r24, Z+15	; 0x0f
    3738:	20 ed       	ldi	r18, 0xD0	; 208
    373a:	28 0f       	add	r18, r24
    373c:	96 85       	ldd	r25, Z+14	; 0x0e
    373e:	89 2f       	mov	r24, r25
    3740:	90 e0       	ldi	r25, 0x00	; 0
    3742:	c0 97       	sbiw	r24, 0x30	; 48
    3744:	82 95       	swap	r24
    3746:	92 95       	swap	r25
    3748:	90 7f       	andi	r25, 0xF0	; 240
    374a:	98 27       	eor	r25, r24
    374c:	80 7f       	andi	r24, 0xF0	; 240
    374e:	98 27       	eor	r25, r24
    3750:	82 2b       	or	r24, r18
    3752:	8b 83       	std	Y+3, r24	; 0x03
    3754:	84 85       	ldd	r24, Z+12	; 0x0c
    3756:	20 ed       	ldi	r18, 0xD0	; 208
    3758:	28 0f       	add	r18, r24
    375a:	93 85       	ldd	r25, Z+11	; 0x0b
    375c:	89 2f       	mov	r24, r25
    375e:	90 e0       	ldi	r25, 0x00	; 0
    3760:	c0 97       	sbiw	r24, 0x30	; 48
    3762:	82 95       	swap	r24
    3764:	92 95       	swap	r25
    3766:	90 7f       	andi	r25, 0xF0	; 240
    3768:	98 27       	eor	r25, r24
    376a:	80 7f       	andi	r24, 0xF0	; 240
    376c:	98 27       	eor	r25, r24
    376e:	82 2b       	or	r24, r18
    3770:	8c 83       	std	Y+4, r24	; 0x04
    3772:	81 85       	ldd	r24, Z+9	; 0x09
    3774:	20 ed       	ldi	r18, 0xD0	; 208
    3776:	28 0f       	add	r18, r24
    3778:	90 85       	ldd	r25, Z+8	; 0x08
    377a:	89 2f       	mov	r24, r25
    377c:	90 e0       	ldi	r25, 0x00	; 0
    377e:	c0 97       	sbiw	r24, 0x30	; 48
    3780:	82 95       	swap	r24
    3782:	92 95       	swap	r25
    3784:	90 7f       	andi	r25, 0xF0	; 240
    3786:	98 27       	eor	r25, r24
    3788:	80 7f       	andi	r24, 0xF0	; 240
    378a:	98 27       	eor	r25, r24
    378c:	82 2b       	or	r24, r18
    378e:	8e 83       	std	Y+6, r24	; 0x06
    3790:	86 81       	ldd	r24, Z+6	; 0x06
    3792:	20 ed       	ldi	r18, 0xD0	; 208
    3794:	28 0f       	add	r18, r24
    3796:	95 81       	ldd	r25, Z+5	; 0x05
    3798:	89 2f       	mov	r24, r25
    379a:	90 e0       	ldi	r25, 0x00	; 0
    379c:	c0 97       	sbiw	r24, 0x30	; 48
    379e:	82 95       	swap	r24
    37a0:	92 95       	swap	r25
    37a2:	90 7f       	andi	r25, 0xF0	; 240
    37a4:	98 27       	eor	r25, r24
    37a6:	80 7f       	andi	r24, 0xF0	; 240
    37a8:	98 27       	eor	r25, r24
    37aa:	82 2b       	or	r24, r18
    37ac:	8f 83       	std	Y+7, r24	; 0x07
    37ae:	83 81       	ldd	r24, Z+3	; 0x03
    37b0:	20 ed       	ldi	r18, 0xD0	; 208
    37b2:	28 0f       	add	r18, r24
    37b4:	92 81       	ldd	r25, Z+2	; 0x02
    37b6:	89 2f       	mov	r24, r25
    37b8:	90 e0       	ldi	r25, 0x00	; 0
    37ba:	c0 97       	sbiw	r24, 0x30	; 48
    37bc:	82 95       	swap	r24
    37be:	92 95       	swap	r25
    37c0:	90 7f       	andi	r25, 0xF0	; 240
    37c2:	98 27       	eor	r25, r24
    37c4:	80 7f       	andi	r24, 0xF0	; 240
    37c6:	98 27       	eor	r25, r24
    37c8:	82 2b       	or	r24, r18
    37ca:	88 87       	std	Y+8, r24	; 0x08
    37cc:	86 2f       	mov	r24, r22
    37ce:	88 0f       	add	r24, r24
    37d0:	88 0f       	add	r24, r24
    37d2:	88 0f       	add	r24, r24
    37d4:	86 1b       	sub	r24, r22
    37d6:	89 83       	std	Y+1, r24	; 0x01
    37d8:	48 e0       	ldi	r20, 0x08	; 8
    37da:	b8 01       	movw	r22, r16
    37dc:	80 ed       	ldi	r24, 0xD0	; 208
    37de:	0e 94 56 1f 	call	0x3eac	; 0x3eac <I2C_0_SendData>
    37e2:	28 96       	adiw	r28, 0x08	; 8
    37e4:	cd bf       	out	0x3d, r28	; 61
    37e6:	de bf       	out	0x3e, r29	; 62
    37e8:	df 91       	pop	r29
    37ea:	cf 91       	pop	r28
    37ec:	1f 91       	pop	r17
    37ee:	0f 91       	pop	r16
    37f0:	08 95       	ret

000037f2 <ds3231_set_aging>:


	void ds3231_set_aging(int8_t data_in)
	{
    37f2:	cf 93       	push	r28
    37f4:	df 93       	push	r29
    37f6:	00 d0       	rcall	.+0      	; 0x37f8 <ds3231_set_aging+0x6>
    37f8:	cd b7       	in	r28, 0x3d	; 61
    37fa:	de b7       	in	r29, 0x3e	; 62
		int8_t data[2];
		
		data[0] = RTC_AGING;
    37fc:	90 e1       	ldi	r25, 0x10	; 16
    37fe:	99 83       	std	Y+1, r25	; 0x01
		data[1] = data_in;
    3800:	8a 83       	std	Y+2, r24	; 0x02
		I2C_0_SendData(DS3231_I2C_SLAVE_ADDR, (uint8_t *)data, 2);
    3802:	42 e0       	ldi	r20, 0x02	; 2
    3804:	be 01       	movw	r22, r28
    3806:	6f 5f       	subi	r22, 0xFF	; 255
    3808:	7f 4f       	sbci	r23, 0xFF	; 255
    380a:	80 ed       	ldi	r24, 0xD0	; 208
    380c:	0e 94 56 1f 	call	0x3eac	; 0x3eac <I2C_0_SendData>
	}
    3810:	0f 90       	pop	r0
    3812:	0f 90       	pop	r0
    3814:	df 91       	pop	r29
    3816:	cf 91       	pop	r28
    3818:	08 95       	ret

0000381a <ds3231_get_aging>:


	int8_t ds3231_get_aging()
	{
    381a:	cf 93       	push	r28
    381c:	df 93       	push	r29
    381e:	1f 92       	push	r1
    3820:	cd b7       	in	r28, 0x3d	; 61
    3822:	de b7       	in	r29, 0x3e	; 62
		int8_t data[1];
		
		data[0] = RTC_AGING;
    3824:	80 e1       	ldi	r24, 0x10	; 16
    3826:	89 83       	std	Y+1, r24	; 0x01
		I2C_0_GetData(DS3231_I2C_SLAVE_ADDR, (uint8_t *)data, 1);
    3828:	41 e0       	ldi	r20, 0x01	; 1
    382a:	be 01       	movw	r22, r28
    382c:	6f 5f       	subi	r22, 0xFF	; 255
    382e:	7f 4f       	sbci	r23, 0xFF	; 255
    3830:	80 ed       	ldi	r24, 0xD0	; 208
    3832:	0e 94 8b 1f 	call	0x3f16	; 0x3f16 <I2C_0_GetData>
		return(data[0]);
	}
    3836:	89 81       	ldd	r24, Y+1	; 0x01
    3838:	0f 90       	pop	r0
    383a:	df 91       	pop	r29
    383c:	cf 91       	pop	r28
    383e:	08 95       	ret

00003840 <_ZN13EepromManagerC1Ev>:

uint8_t avr_eeprom_read_word(eeprom_addr_t index) {
	uint16_t r;
	r = eeprom_read_word((uint16_t *)index);
	return r;
}
    3840:	08 95       	ret

00003842 <_ZN13EepromManagerD1Ev>:
    3842:	08 95       	ret

00003844 <_Z21avr_eeprom_write_bytejh>:
    3844:	9c 01       	movw	r18, r24
    3846:	90 91 02 10 	lds	r25, 0x1002	; 0x801002 <__TEXT_REGION_LENGTH__+0x7e1002>
    384a:	91 fd       	sbrc	r25, 1
    384c:	fc cf       	rjmp	.-8      	; 0x3846 <_Z21avr_eeprom_write_bytejh+0x2>
    384e:	8d e9       	ldi	r24, 0x9D	; 157
    3850:	93 e1       	ldi	r25, 0x13	; 19
    3852:	84 bf       	out	0x34, r24	; 52
    3854:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
    3858:	f9 01       	movw	r30, r18
    385a:	fc 5e       	subi	r31, 0xEC	; 236
    385c:	60 83       	st	Z, r22
    385e:	90 e0       	ldi	r25, 0x00	; 0
    3860:	84 bf       	out	0x34, r24	; 52
    3862:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
    3866:	08 95       	ret

00003868 <_Z21avr_eeprom_write_wordjj>:
    3868:	9c 01       	movw	r18, r24
    386a:	90 91 02 10 	lds	r25, 0x1002	; 0x801002 <__TEXT_REGION_LENGTH__+0x7e1002>
    386e:	91 fd       	sbrc	r25, 1
    3870:	fc cf       	rjmp	.-8      	; 0x386a <_Z21avr_eeprom_write_wordjj+0x2>
    3872:	8d e9       	ldi	r24, 0x9D	; 157
    3874:	93 e1       	ldi	r25, 0x13	; 19
    3876:	84 bf       	out	0x34, r24	; 52
    3878:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
    387c:	f9 01       	movw	r30, r18
    387e:	fc 5e       	subi	r31, 0xEC	; 236
    3880:	60 83       	st	Z, r22
    3882:	71 83       	std	Z+1, r23	; 0x01
    3884:	90 e0       	ldi	r25, 0x00	; 0
    3886:	84 bf       	out	0x34, r24	; 52
    3888:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
    388c:	08 95       	ret

0000388e <_Z22avr_eeprom_write_dwordjm>:
    388e:	9c 01       	movw	r18, r24
    3890:	90 91 02 10 	lds	r25, 0x1002	; 0x801002 <__TEXT_REGION_LENGTH__+0x7e1002>
    3894:	91 fd       	sbrc	r25, 1
    3896:	fc cf       	rjmp	.-8      	; 0x3890 <_Z22avr_eeprom_write_dwordjm+0x2>
    3898:	8d e9       	ldi	r24, 0x9D	; 157
    389a:	93 e1       	ldi	r25, 0x13	; 19
    389c:	84 bf       	out	0x34, r24	; 52
    389e:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
    38a2:	f9 01       	movw	r30, r18
    38a4:	fc 5e       	subi	r31, 0xEC	; 236
    38a6:	40 83       	st	Z, r20
    38a8:	51 83       	std	Z+1, r21	; 0x01
    38aa:	62 83       	std	Z+2, r22	; 0x02
    38ac:	73 83       	std	Z+3, r23	; 0x03
    38ae:	90 e0       	ldi	r25, 0x00	; 0
    38b0:	84 bf       	out	0x34, r24	; 52
    38b2:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
    38b6:	08 95       	ret

000038b8 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>:

void EepromManager::updateEEPROMVar(EE_var_t v, void* val)
{
    38b8:	0f 93       	push	r16
    38ba:	1f 93       	push	r17
    38bc:	cf 93       	push	r28
    38be:	df 93       	push	r29
	if(!val)
    38c0:	41 15       	cp	r20, r1
    38c2:	51 05       	cpc	r21, r1
    38c4:	09 f4       	brne	.+2      	; 0x38c8 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x10>
    38c6:	63 c0       	rjmp	.+198    	; 0x398e <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0xd6>
	{
		return;
	}

	switch(v)
    38c8:	86 2f       	mov	r24, r22
    38ca:	90 e0       	ldi	r25, 0x00	; 0
    38cc:	8b 32       	cpi	r24, 0x2B	; 43
    38ce:	91 05       	cpc	r25, r1
    38d0:	08 f0       	brcs	.+2      	; 0x38d4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x1c>
    38d2:	5d c0       	rjmp	.+186    	; 0x398e <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0xd6>
    38d4:	ea 01       	movw	r28, r20
    38d6:	fc 01       	movw	r30, r24
    38d8:	ec 58       	subi	r30, 0x8C	; 140
    38da:	ff 4f       	sbci	r31, 0xFF	; 255
    38dc:	0c 94 aa 32 	jmp	0x6554	; 0x6554 <__tablejump2__>
	{
		case StationID_text:
		{
			char* char_addr = (char*)val;
			char c = *char_addr++;
    38e0:	8a 01       	movw	r16, r20
    38e2:	0f 5f       	subi	r16, 0xFF	; 255
    38e4:	1f 4f       	sbci	r17, 0xFF	; 255
    38e6:	68 81       	ld	r22, Y
			
			eeprom_addr_t j = (eeprom_addr_t)StationID_text;
    38e8:	8a e0       	ldi	r24, 0x0A	; 10
    38ea:	90 e0       	ldi	r25, 0x00	; 0

			while(c)
    38ec:	66 23       	and	r22, r22
    38ee:	51 f0       	breq	.+20     	; 0x3904 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x4c>
			{
				avr_eeprom_write_byte(j++, c);
    38f0:	ec 01       	movw	r28, r24
    38f2:	21 96       	adiw	r28, 0x01	; 1
    38f4:	0e 94 22 1c 	call	0x3844	; 0x3844 <_Z21avr_eeprom_write_bytejh>
				c = *char_addr++;
    38f8:	f8 01       	movw	r30, r16
    38fa:	60 81       	ld	r22, Z
			
			eeprom_addr_t j = (eeprom_addr_t)StationID_text;

			while(c)
			{
				avr_eeprom_write_byte(j++, c);
    38fc:	ce 01       	movw	r24, r28
				c = *char_addr++;
    38fe:	0f 5f       	subi	r16, 0xFF	; 255
    3900:	1f 4f       	sbci	r17, 0xFF	; 255
			char* char_addr = (char*)val;
			char c = *char_addr++;
			
			eeprom_addr_t j = (eeprom_addr_t)StationID_text;

			while(c)
    3902:	f4 cf       	rjmp	.-24     	; 0x38ec <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x34>
			{
				avr_eeprom_write_byte(j++, c);
				c = *char_addr++;
			}

			avr_eeprom_write_byte(j, 0);
    3904:	60 e0       	ldi	r22, 0x00	; 0
    3906:	0e 94 22 1c 	call	0x3844	; 0x3844 <_Z21avr_eeprom_write_bytejh>
		}
		break;
    390a:	41 c0       	rjmp	.+130    	; 0x398e <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0xd6>

		case UnlockCode:
		{
			uint8_t* uint8_addr = (uint8_t*)val;
			uint8_t c = *uint8_addr++;
    390c:	8a 01       	movw	r16, r20
    390e:	0f 5f       	subi	r16, 0xFF	; 255
    3910:	1f 4f       	sbci	r17, 0xFF	; 255
    3912:	68 81       	ld	r22, Y
			int i = 0;
			uint8_t j = (uint8_t)UnlockCode;
    3914:	8f e1       	ldi	r24, 0x1F	; 31
			
			while(c && (i < MAX_UNLOCK_CODE_LENGTH))
    3916:	66 23       	and	r22, r22
    3918:	59 f0       	breq	.+22     	; 0x3930 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x78>
			{
				avr_eeprom_write_byte(j++, c);
    391a:	c1 e0       	ldi	r28, 0x01	; 1
    391c:	c8 0f       	add	r28, r24
    391e:	90 e0       	ldi	r25, 0x00	; 0
    3920:	0e 94 22 1c 	call	0x3844	; 0x3844 <_Z21avr_eeprom_write_bytejh>
				c = *uint8_addr++;
    3924:	f8 01       	movw	r30, r16
    3926:	60 81       	ld	r22, Z
			int i = 0;
			uint8_t j = (uint8_t)UnlockCode;
			
			while(c && (i < MAX_UNLOCK_CODE_LENGTH))
			{
				avr_eeprom_write_byte(j++, c);
    3928:	8c 2f       	mov	r24, r28
				c = *uint8_addr++;
    392a:	0f 5f       	subi	r16, 0xFF	; 255
    392c:	1f 4f       	sbci	r17, 0xFF	; 255
			uint8_t* uint8_addr = (uint8_t*)val;
			uint8_t c = *uint8_addr++;
			int i = 0;
			uint8_t j = (uint8_t)UnlockCode;
			
			while(c && (i < MAX_UNLOCK_CODE_LENGTH))
    392e:	f3 cf       	rjmp	.-26     	; 0x3916 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x5e>
			{
				avr_eeprom_write_byte(j++, c);
				c = *uint8_addr++;
			}

			avr_eeprom_write_byte(j, 0);
    3930:	60 e0       	ldi	r22, 0x00	; 0
    3932:	90 e0       	ldi	r25, 0x00	; 0
    3934:	0e 94 22 1c 	call	0x3844	; 0x3844 <_Z21avr_eeprom_write_bytejh>
		}
		break;
    3938:	2a c0       	rjmp	.+84     	; 0x398e <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0xd6>

		case Id_codespeed:
		{
			avr_eeprom_write_byte(Id_codespeed, *(uint8_t*)val);
    393a:	68 81       	ld	r22, Y
    393c:	88 e2       	ldi	r24, 0x28	; 40
    393e:	90 e0       	ldi	r25, 0x00	; 0
    3940:	0e 94 22 1c 	call	0x3844	; 0x3844 <_Z21avr_eeprom_write_bytejh>
		}
		break;
    3944:	24 c0       	rjmp	.+72     	; 0x398e <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0xd6>

		case Fox_setting:
		{
			avr_eeprom_write_byte(Fox_setting, *(uint8_t*)val);
    3946:	68 81       	ld	r22, Y
    3948:	89 e2       	ldi	r24, 0x29	; 41
    394a:	90 e0       	ldi	r25, 0x00	; 0
    394c:	0e 94 22 1c 	call	0x3844	; 0x3844 <_Z21avr_eeprom_write_bytejh>
		}
		break;
    3950:	1e c0       	rjmp	.+60     	; 0x398e <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0xd6>

		case Event_start_epoch:
		{
			avr_eeprom_write_dword(Event_start_epoch, *(uint32_t*)val);
    3952:	48 81       	ld	r20, Y
    3954:	59 81       	ldd	r21, Y+1	; 0x01
    3956:	6a 81       	ldd	r22, Y+2	; 0x02
    3958:	7b 81       	ldd	r23, Y+3	; 0x03
    395a:	82 e0       	ldi	r24, 0x02	; 2
    395c:	90 e0       	ldi	r25, 0x00	; 0
    395e:	0e 94 47 1c 	call	0x388e	; 0x388e <_Z22avr_eeprom_write_dwordjm>
		}
		break;
    3962:	15 c0       	rjmp	.+42     	; 0x398e <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0xd6>

		case Event_finish_epoch:
		{
			avr_eeprom_write_dword(Event_finish_epoch, *(uint32_t*)val);
    3964:	48 81       	ld	r20, Y
    3966:	59 81       	ldd	r21, Y+1	; 0x01
    3968:	6a 81       	ldd	r22, Y+2	; 0x02
    396a:	7b 81       	ldd	r23, Y+3	; 0x03
    396c:	86 e0       	ldi	r24, 0x06	; 6
    396e:	90 e0       	ldi	r25, 0x00	; 0
    3970:	0e 94 47 1c 	call	0x388e	; 0x388e <_Z22avr_eeprom_write_dwordjm>
		}
		break;
    3974:	0c c0       	rjmp	.+24     	; 0x398e <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0xd6>

		case Utc_offset:
		{
			avr_eeprom_write_byte(Utc_offset, *(uint8_t*)val);
    3976:	68 81       	ld	r22, Y
    3978:	8a e2       	ldi	r24, 0x2A	; 42
    397a:	90 e0       	ldi	r25, 0x00	; 0
    397c:	0e 94 22 1c 	call	0x3844	; 0x3844 <_Z21avr_eeprom_write_bytejh>
		}
		break;
    3980:	06 c0       	rjmp	.+12     	; 0x398e <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0xd6>

		case Eeprom_initialization_flag:
		{
			avr_eeprom_write_word(Eeprom_initialization_flag, *(uint16_t*)val);
    3982:	68 81       	ld	r22, Y
    3984:	79 81       	ldd	r23, Y+1	; 0x01
    3986:	80 e0       	ldi	r24, 0x00	; 0
    3988:	90 e0       	ldi	r25, 0x00	; 0
    398a:	0e 94 34 1c 	call	0x3868	; 0x3868 <_Z21avr_eeprom_write_wordjj>
		{

		}
		break;
	}
}
    398e:	df 91       	pop	r29
    3990:	cf 91       	pop	r28
    3992:	1f 91       	pop	r17
    3994:	0f 91       	pop	r16
    3996:	08 95       	ret

00003998 <_ZN13EepromManager11readNonVolsEv>:


BOOL EepromManager::readNonVols(void)
{
    3998:	cf 93       	push	r28
    399a:	df 93       	push	r29
	BOOL failure = TRUE;
	uint16_t i;
	uint16_t initialization_flag = eeprom_read_word(0);
    399c:	80 e0       	ldi	r24, 0x00	; 0
    399e:	90 e0       	ldi	r25, 0x00	; 0
    39a0:	0e 94 7d 37 	call	0x6efa	; 0x6efa <eeprom_read_word>

	if(initialization_flag == EEPROM_INITIALIZED_FLAG)  /* EEPROM is up to date */
    39a4:	8e 3c       	cpi	r24, 0xCE	; 206
    39a6:	91 05       	cpc	r25, r1
    39a8:	09 f0       	breq	.+2      	; 0x39ac <_ZN13EepromManager11readNonVolsEv+0x14>
    39aa:	9c c0       	rjmp	.+312    	; 0x3ae4 <_ZN13EepromManager11readNonVolsEv+0x14c>
	{
		g_id_codespeed = CLAMP(MIN_CODE_SPEED_WPM, eeprom_read_byte(&(EepromManager::ee_vars.id_codespeed)), MAX_CODE_SPEED_WPM);
    39ac:	88 e2       	ldi	r24, 0x28	; 40
    39ae:	90 e0       	ldi	r25, 0x00	; 0
    39b0:	0e 94 6e 37 	call	0x6edc	; 0x6edc <eeprom_read_byte>
    39b4:	90 e0       	ldi	r25, 0x00	; 0
    39b6:	85 31       	cpi	r24, 0x15	; 21
    39b8:	91 05       	cpc	r25, r1
    39ba:	34 f4       	brge	.+12     	; 0x39c8 <_ZN13EepromManager11readNonVolsEv+0x30>
    39bc:	85 30       	cpi	r24, 0x05	; 5
    39be:	91 05       	cpc	r25, r1
    39c0:	2c f4       	brge	.+10     	; 0x39cc <_ZN13EepromManager11readNonVolsEv+0x34>
    39c2:	85 e0       	ldi	r24, 0x05	; 5
    39c4:	90 e0       	ldi	r25, 0x00	; 0
    39c6:	02 c0       	rjmp	.+4      	; 0x39cc <_ZN13EepromManager11readNonVolsEv+0x34>
    39c8:	84 e1       	ldi	r24, 0x14	; 20
    39ca:	90 e0       	ldi	r25, 0x00	; 0
    39cc:	80 93 0c 40 	sts	0x400C, r24	; 0x80400c <g_id_codespeed>
		g_fox = CLAMP(BEACON, (Fox_t)eeprom_read_byte(&(EepromManager::ee_vars.fox_setting)), SPRINT_F5);
    39d0:	89 e2       	ldi	r24, 0x29	; 41
    39d2:	90 e0       	ldi	r25, 0x00	; 0
    39d4:	0e 94 6e 37 	call	0x6edc	; 0x6edc <eeprom_read_byte>
    39d8:	82 31       	cpi	r24, 0x12	; 18
    39da:	08 f0       	brcs	.+2      	; 0x39de <_ZN13EepromManager11readNonVolsEv+0x46>
    39dc:	81 e1       	ldi	r24, 0x11	; 17
    39de:	80 93 1c 40 	sts	0x401C, r24	; 0x80401c <g_fox>
		g_event_start_epoch = eeprom_read_dword(&(EepromManager::ee_vars.event_start_epoch));
    39e2:	82 e0       	ldi	r24, 0x02	; 2
    39e4:	90 e0       	ldi	r25, 0x00	; 0
    39e6:	0e 94 76 37 	call	0x6eec	; 0x6eec <eeprom_read_dword>
    39ea:	60 93 e0 42 	sts	0x42E0, r22	; 0x8042e0 <g_event_start_epoch>
    39ee:	70 93 e1 42 	sts	0x42E1, r23	; 0x8042e1 <g_event_start_epoch+0x1>
    39f2:	80 93 e2 42 	sts	0x42E2, r24	; 0x8042e2 <g_event_start_epoch+0x2>
    39f6:	90 93 e3 42 	sts	0x42E3, r25	; 0x8042e3 <g_event_start_epoch+0x3>
		g_event_finish_epoch = eeprom_read_dword(&(EepromManager::ee_vars.event_finish_epoch));
    39fa:	86 e0       	ldi	r24, 0x06	; 6
    39fc:	90 e0       	ldi	r25, 0x00	; 0
    39fe:	0e 94 76 37 	call	0x6eec	; 0x6eec <eeprom_read_dword>
    3a02:	60 93 e4 42 	sts	0x42E4, r22	; 0x8042e4 <g_event_finish_epoch>
    3a06:	70 93 e5 42 	sts	0x42E5, r23	; 0x8042e5 <g_event_finish_epoch+0x1>
    3a0a:	80 93 e6 42 	sts	0x42E6, r24	; 0x8042e6 <g_event_finish_epoch+0x2>
    3a0e:	90 93 e7 42 	sts	0x42E7, r25	; 0x8042e7 <g_event_finish_epoch+0x3>
		g_utc_offset = (int8_t)eeprom_read_byte(&(EepromManager::ee_vars.utc_offset));
    3a12:	8a e2       	ldi	r24, 0x2A	; 42
    3a14:	90 e0       	ldi	r25, 0x00	; 0
    3a16:	0e 94 6e 37 	call	0x6edc	; 0x6edc <eeprom_read_byte>
    3a1a:	80 93 e8 42 	sts	0x42E8, r24	; 0x8042e8 <g_utc_offset>

		for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    3a1e:	c0 e0       	ldi	r28, 0x00	; 0
    3a20:	d0 e0       	ldi	r29, 0x00	; 0
    3a22:	c4 31       	cpi	r28, 0x14	; 20
    3a24:	d1 05       	cpc	r29, r1
    3a26:	58 f4       	brcc	.+22     	; 0x3a3e <_ZN13EepromManager11readNonVolsEv+0xa6>
		{
			g_messages_text[STATION_ID][i] = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.stationID_text[i])));
    3a28:	ce 01       	movw	r24, r28
    3a2a:	86 5f       	subi	r24, 0xF6	; 246
    3a2c:	9f 4f       	sbci	r25, 0xFF	; 255
    3a2e:	0e 94 6e 37 	call	0x6edc	; 0x6edc <eeprom_read_byte>
    3a32:	fe 01       	movw	r30, r28
    3a34:	eb 56       	subi	r30, 0x6B	; 107
    3a36:	fd 4b       	sbci	r31, 0xBD	; 189
    3a38:	85 8b       	std	Z+21, r24	; 0x15
			if(!g_messages_text[STATION_ID][i])
    3a3a:	81 11       	cpse	r24, r1
    3a3c:	03 c0       	rjmp	.+6      	; 0x3a44 <_ZN13EepromManager11readNonVolsEv+0xac>
		g_fox = CLAMP(BEACON, (Fox_t)eeprom_read_byte(&(EepromManager::ee_vars.fox_setting)), SPRINT_F5);
		g_event_start_epoch = eeprom_read_dword(&(EepromManager::ee_vars.event_start_epoch));
		g_event_finish_epoch = eeprom_read_dword(&(EepromManager::ee_vars.event_finish_epoch));
		g_utc_offset = (int8_t)eeprom_read_byte(&(EepromManager::ee_vars.utc_offset));

		for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    3a3e:	c0 e0       	ldi	r28, 0x00	; 0
    3a40:	d0 e0       	ldi	r29, 0x00	; 0
    3a42:	02 c0       	rjmp	.+4      	; 0x3a48 <_ZN13EepromManager11readNonVolsEv+0xb0>
    3a44:	21 96       	adiw	r28, 0x01	; 1
    3a46:	ed cf       	rjmp	.-38     	; 0x3a22 <_ZN13EepromManager11readNonVolsEv+0x8a>
			{
				break;
			}
		}

		for(i = 0; i < MAX_UNLOCK_CODE_LENGTH; i++)
    3a48:	c8 30       	cpi	r28, 0x08	; 8
    3a4a:	d1 05       	cpc	r29, r1
    3a4c:	68 f4       	brcc	.+26     	; 0x3a68 <_ZN13EepromManager11readNonVolsEv+0xd0>
		{
			g_unlockCode[i] = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.unlockCode[i])));
    3a4e:	ce 01       	movw	r24, r28
    3a50:	81 5e       	subi	r24, 0xE1	; 225
    3a52:	9f 4f       	sbci	r25, 0xFF	; 255
    3a54:	0e 94 6e 37 	call	0x6edc	; 0x6edc <eeprom_read_byte>
    3a58:	fe 01       	movw	r30, r28
    3a5a:	e7 51       	subi	r30, 0x17	; 23
    3a5c:	fd 4b       	sbci	r31, 0xBD	; 189
    3a5e:	80 83       	st	Z, r24
			if(!g_unlockCode[i])
    3a60:	88 23       	and	r24, r24
    3a62:	11 f0       	breq	.+4      	; 0x3a68 <_ZN13EepromManager11readNonVolsEv+0xd0>
			{
				break;
			}
		}

		for(i = 0; i < MAX_UNLOCK_CODE_LENGTH; i++)
    3a64:	21 96       	adiw	r28, 0x01	; 1
    3a66:	f0 cf       	rjmp	.-32     	; 0x3a48 <_ZN13EepromManager11readNonVolsEv+0xb0>
				break;
			}
		}

		/* Perform sanity checks */
		if(g_event_start_epoch && (g_event_finish_epoch <= g_event_start_epoch))
    3a68:	80 91 e0 42 	lds	r24, 0x42E0	; 0x8042e0 <g_event_start_epoch>
    3a6c:	90 91 e1 42 	lds	r25, 0x42E1	; 0x8042e1 <g_event_start_epoch+0x1>
    3a70:	a0 91 e2 42 	lds	r26, 0x42E2	; 0x8042e2 <g_event_start_epoch+0x2>
    3a74:	b0 91 e3 42 	lds	r27, 0x42E3	; 0x8042e3 <g_event_start_epoch+0x3>
    3a78:	89 2b       	or	r24, r25
    3a7a:	8a 2b       	or	r24, r26
    3a7c:	8b 2b       	or	r24, r27
    3a7e:	b9 f0       	breq	.+46     	; 0x3aae <_ZN13EepromManager11readNonVolsEv+0x116>
    3a80:	40 91 e4 42 	lds	r20, 0x42E4	; 0x8042e4 <g_event_finish_epoch>
    3a84:	50 91 e5 42 	lds	r21, 0x42E5	; 0x8042e5 <g_event_finish_epoch+0x1>
    3a88:	60 91 e6 42 	lds	r22, 0x42E6	; 0x8042e6 <g_event_finish_epoch+0x2>
    3a8c:	70 91 e7 42 	lds	r23, 0x42E7	; 0x8042e7 <g_event_finish_epoch+0x3>
    3a90:	80 91 e0 42 	lds	r24, 0x42E0	; 0x8042e0 <g_event_start_epoch>
    3a94:	90 91 e1 42 	lds	r25, 0x42E1	; 0x8042e1 <g_event_start_epoch+0x1>
    3a98:	a0 91 e2 42 	lds	r26, 0x42E2	; 0x8042e2 <g_event_start_epoch+0x2>
    3a9c:	b0 91 e3 42 	lds	r27, 0x42E3	; 0x8042e3 <g_event_start_epoch+0x3>
    3aa0:	84 17       	cp	r24, r20
    3aa2:	95 07       	cpc	r25, r21
    3aa4:	a6 07       	cpc	r26, r22
    3aa6:	b7 07       	cpc	r27, r23
    3aa8:	20 f4       	brcc	.+8      	; 0x3ab2 <_ZN13EepromManager11readNonVolsEv+0x11a>
    3aaa:	80 e0       	ldi	r24, 0x00	; 0
    3aac:	03 c0       	rjmp	.+6      	; 0x3ab4 <_ZN13EepromManager11readNonVolsEv+0x11c>
    3aae:	80 e0       	ldi	r24, 0x00	; 0
    3ab0:	01 c0       	rjmp	.+2      	; 0x3ab4 <_ZN13EepromManager11readNonVolsEv+0x11c>
    3ab2:	81 e0       	ldi	r24, 0x01	; 1
    3ab4:	88 23       	and	r24, r24
    3ab6:	c1 f0       	breq	.+48     	; 0x3ae8 <_ZN13EepromManager11readNonVolsEv+0x150>
		{
			g_event_finish_epoch = g_event_start_epoch + SECONDS_24H;
    3ab8:	80 91 e0 42 	lds	r24, 0x42E0	; 0x8042e0 <g_event_start_epoch>
    3abc:	90 91 e1 42 	lds	r25, 0x42E1	; 0x8042e1 <g_event_start_epoch+0x1>
    3ac0:	a0 91 e2 42 	lds	r26, 0x42E2	; 0x8042e2 <g_event_start_epoch+0x2>
    3ac4:	b0 91 e3 42 	lds	r27, 0x42E3	; 0x8042e3 <g_event_start_epoch+0x3>
    3ac8:	80 58       	subi	r24, 0x80	; 128
    3aca:	9e 4a       	sbci	r25, 0xAE	; 174
    3acc:	ae 4f       	sbci	r26, 0xFE	; 254
    3ace:	bf 4f       	sbci	r27, 0xFF	; 255
    3ad0:	80 93 e4 42 	sts	0x42E4, r24	; 0x8042e4 <g_event_finish_epoch>
    3ad4:	90 93 e5 42 	sts	0x42E5, r25	; 0x8042e5 <g_event_finish_epoch+0x1>
    3ad8:	a0 93 e6 42 	sts	0x42E6, r26	; 0x8042e6 <g_event_finish_epoch+0x2>
    3adc:	b0 93 e7 42 	sts	0x42E7, r27	; 0x8042e7 <g_event_finish_epoch+0x3>
		}

		failure = FALSE;
    3ae0:	80 e0       	ldi	r24, 0x00	; 0
    3ae2:	03 c0       	rjmp	.+6      	; 0x3aea <_ZN13EepromManager11readNonVolsEv+0x152>
}


BOOL EepromManager::readNonVols(void)
{
	BOOL failure = TRUE;
    3ae4:	81 e0       	ldi	r24, 0x01	; 1
    3ae6:	01 c0       	rjmp	.+2      	; 0x3aea <_ZN13EepromManager11readNonVolsEv+0x152>
		if(g_event_start_epoch && (g_event_finish_epoch <= g_event_start_epoch))
		{
			g_event_finish_epoch = g_event_start_epoch + SECONDS_24H;
		}

		failure = FALSE;
    3ae8:	80 e0       	ldi	r24, 0x00	; 0
	}

	return( failure);
}
    3aea:	df 91       	pop	r29
    3aec:	cf 91       	pop	r28
    3aee:	08 95       	ret

00003af0 <_ZN13EepromManager20initializeEEPROMVarsEv>:

/*
 * Set volatile variables to their values stored in EEPROM
 */
	BOOL EepromManager::initializeEEPROMVars(void)
	{
    3af0:	df 92       	push	r13
    3af2:	ef 92       	push	r14
    3af4:	ff 92       	push	r15
    3af6:	0f 93       	push	r16
    3af8:	1f 93       	push	r17
    3afa:	cf 93       	push	r28
    3afc:	df 93       	push	r29
    3afe:	00 d0       	rcall	.+0      	; 0x3b00 <_ZN13EepromManager20initializeEEPROMVarsEv+0x10>
    3b00:	cd b7       	in	r28, 0x3d	; 61
    3b02:	de b7       	in	r29, 0x3e	; 62
		BOOL err = FALSE;
		uint16_t i, j;

#ifndef ATMEL_STUDIO_7
			/* Erase full EEPROM */
			for(i = 0; i < 0x0400; i++)
    3b04:	19 82       	std	Y+1, r1	; 0x01
    3b06:	1a 82       	std	Y+2, r1	; 0x02
    3b08:	89 81       	ldd	r24, Y+1	; 0x01
    3b0a:	9a 81       	ldd	r25, Y+2	; 0x02
    3b0c:	81 15       	cp	r24, r1
    3b0e:	24 e0       	ldi	r18, 0x04	; 4
    3b10:	92 07       	cpc	r25, r18
    3b12:	48 f4       	brcc	.+18     	; 0x3b26 <_ZN13EepromManager20initializeEEPROMVarsEv+0x36>
			{
				eeprom_write_byte((uint8_t*)i, 0xFF);
    3b14:	6f ef       	ldi	r22, 0xFF	; 255
    3b16:	0e 94 9e 37 	call	0x6f3c	; 0x6f3c <eeprom_write_byte>
		BOOL err = FALSE;
		uint16_t i, j;

#ifndef ATMEL_STUDIO_7
			/* Erase full EEPROM */
			for(i = 0; i < 0x0400; i++)
    3b1a:	89 81       	ldd	r24, Y+1	; 0x01
    3b1c:	9a 81       	ldd	r25, Y+2	; 0x02
    3b1e:	01 96       	adiw	r24, 0x01	; 1
    3b20:	89 83       	std	Y+1, r24	; 0x01
    3b22:	9a 83       	std	Y+2, r25	; 0x02
    3b24:	f1 cf       	rjmp	.-30     	; 0x3b08 <_ZN13EepromManager20initializeEEPROMVarsEv+0x18>
			{
				eeprom_write_byte((uint8_t*)i, 0xFF);
			}

			for(i = 0; i < 0x0400; i++)
    3b26:	19 82       	std	Y+1, r1	; 0x01
    3b28:	1a 82       	std	Y+2, r1	; 0x02
/*
 * Set volatile variables to their values stored in EEPROM
 */
	BOOL EepromManager::initializeEEPROMVars(void)
	{
		BOOL err = FALSE;
    3b2a:	d1 2c       	mov	r13, r1
			for(i = 0; i < 0x0400; i++)
			{
				eeprom_write_byte((uint8_t*)i, 0xFF);
			}

			for(i = 0; i < 0x0400; i++)
    3b2c:	09 81       	ldd	r16, Y+1	; 0x01
    3b2e:	1a 81       	ldd	r17, Y+2	; 0x02
    3b30:	01 15       	cp	r16, r1
    3b32:	84 e0       	ldi	r24, 0x04	; 4
    3b34:	18 07       	cpc	r17, r24
    3b36:	68 f4       	brcc	.+26     	; 0x3b52 <_ZN13EepromManager20initializeEEPROMVarsEv+0x62>
			{
				uint8_t x = eeprom_read_byte((const uint8_t*)&i);
    3b38:	ce 01       	movw	r24, r28
    3b3a:	01 96       	adiw	r24, 0x01	; 1
    3b3c:	0e 94 6e 37 	call	0x6edc	; 0x6edc <eeprom_read_byte>
				if(x != 0xFF)
    3b40:	8f 3f       	cpi	r24, 0xFF	; 255
    3b42:	11 f0       	breq	.+4      	; 0x3b48 <_ZN13EepromManager20initializeEEPROMVarsEv+0x58>
				{
					err = TRUE;
    3b44:	dd 24       	eor	r13, r13
    3b46:	d3 94       	inc	r13
			for(i = 0; i < 0x0400; i++)
			{
				eeprom_write_byte((uint8_t*)i, 0xFF);
			}

			for(i = 0; i < 0x0400; i++)
    3b48:	0f 5f       	subi	r16, 0xFF	; 255
    3b4a:	1f 4f       	sbci	r17, 0xFF	; 255
    3b4c:	09 83       	std	Y+1, r16	; 0x01
    3b4e:	1a 83       	std	Y+2, r17	; 0x02
    3b50:	ed cf       	rjmp	.-38     	; 0x3b2c <_ZN13EepromManager20initializeEEPROMVarsEv+0x3c>
					err = TRUE;
				}
			}
#endif  /* !ATMEL_STUDIO_7 */

		uint16_t initialization_flag = eeprom_read_word(0);
    3b52:	80 e0       	ldi	r24, 0x00	; 0
    3b54:	90 e0       	ldi	r25, 0x00	; 0
    3b56:	0e 94 7d 37 	call	0x6efa	; 0x6efa <eeprom_read_word>

		if(initialization_flag != EEPROM_INITIALIZED_FLAG)
    3b5a:	8e 3c       	cpi	r24, 0xCE	; 206
    3b5c:	91 05       	cpc	r25, r1
    3b5e:	09 f4       	brne	.+2      	; 0x3b62 <_ZN13EepromManager20initializeEEPROMVarsEv+0x72>
    3b60:	78 c0       	rjmp	.+240    	; 0x3c52 <_ZN13EepromManager20initializeEEPROMVarsEv+0x162>
		{
			g_id_codespeed = EEPROM_ID_CODE_SPEED_DEFAULT;
    3b62:	84 e1       	ldi	r24, 0x14	; 20
    3b64:	80 93 0c 40 	sts	0x400C, r24	; 0x80400c <g_id_codespeed>
			avr_eeprom_write_byte(Id_codespeed, g_id_codespeed);
    3b68:	60 91 0c 40 	lds	r22, 0x400C	; 0x80400c <g_id_codespeed>
    3b6c:	88 e2       	ldi	r24, 0x28	; 40
    3b6e:	90 e0       	ldi	r25, 0x00	; 0
    3b70:	0e 94 22 1c 	call	0x3844	; 0x3844 <_Z21avr_eeprom_write_bytejh>

			g_fox = EEPROM_FOX_SETTING_DEFAULT;
    3b74:	81 e0       	ldi	r24, 0x01	; 1
    3b76:	80 93 1c 40 	sts	0x401C, r24	; 0x80401c <g_fox>
			avr_eeprom_write_byte(Fox_setting, g_fox);
    3b7a:	60 91 1c 40 	lds	r22, 0x401C	; 0x80401c <g_fox>
    3b7e:	89 e2       	ldi	r24, 0x29	; 41
    3b80:	90 e0       	ldi	r25, 0x00	; 0
    3b82:	0e 94 22 1c 	call	0x3844	; 0x3844 <_Z21avr_eeprom_write_bytejh>

	//		i2c_init(); /* Needs to happen before reading RTC */

			g_event_start_epoch = EEPROM_START_EPOCH_DEFAULT;
    3b86:	10 92 e0 42 	sts	0x42E0, r1	; 0x8042e0 <g_event_start_epoch>
    3b8a:	10 92 e1 42 	sts	0x42E1, r1	; 0x8042e1 <g_event_start_epoch+0x1>
    3b8e:	10 92 e2 42 	sts	0x42E2, r1	; 0x8042e2 <g_event_start_epoch+0x2>
    3b92:	10 92 e3 42 	sts	0x42E3, r1	; 0x8042e3 <g_event_start_epoch+0x3>
			avr_eeprom_write_dword(Event_start_epoch, g_event_start_epoch);
    3b96:	40 91 e0 42 	lds	r20, 0x42E0	; 0x8042e0 <g_event_start_epoch>
    3b9a:	50 91 e1 42 	lds	r21, 0x42E1	; 0x8042e1 <g_event_start_epoch+0x1>
    3b9e:	60 91 e2 42 	lds	r22, 0x42E2	; 0x8042e2 <g_event_start_epoch+0x2>
    3ba2:	70 91 e3 42 	lds	r23, 0x42E3	; 0x8042e3 <g_event_start_epoch+0x3>
    3ba6:	82 e0       	ldi	r24, 0x02	; 2
    3ba8:	90 e0       	ldi	r25, 0x00	; 0
    3baa:	0e 94 47 1c 	call	0x388e	; 0x388e <_Z22avr_eeprom_write_dwordjm>

			g_event_finish_epoch = EEPROM_FINISH_EPOCH_DEFAULT;
    3bae:	10 92 e4 42 	sts	0x42E4, r1	; 0x8042e4 <g_event_finish_epoch>
    3bb2:	10 92 e5 42 	sts	0x42E5, r1	; 0x8042e5 <g_event_finish_epoch+0x1>
    3bb6:	10 92 e6 42 	sts	0x42E6, r1	; 0x8042e6 <g_event_finish_epoch+0x2>
    3bba:	10 92 e7 42 	sts	0x42E7, r1	; 0x8042e7 <g_event_finish_epoch+0x3>
			avr_eeprom_write_dword(Event_finish_epoch, g_event_finish_epoch);
    3bbe:	40 91 e4 42 	lds	r20, 0x42E4	; 0x8042e4 <g_event_finish_epoch>
    3bc2:	50 91 e5 42 	lds	r21, 0x42E5	; 0x8042e5 <g_event_finish_epoch+0x1>
    3bc6:	60 91 e6 42 	lds	r22, 0x42E6	; 0x8042e6 <g_event_finish_epoch+0x2>
    3bca:	70 91 e7 42 	lds	r23, 0x42E7	; 0x8042e7 <g_event_finish_epoch+0x3>
    3bce:	86 e0       	ldi	r24, 0x06	; 6
    3bd0:	90 e0       	ldi	r25, 0x00	; 0
    3bd2:	0e 94 47 1c 	call	0x388e	; 0x388e <_Z22avr_eeprom_write_dwordjm>

			g_utc_offset = EEPROM_UTC_OFFSET_DEFAULT;
    3bd6:	10 92 e8 42 	sts	0x42E8, r1	; 0x8042e8 <g_utc_offset>
			avr_eeprom_write_byte(Utc_offset, (uint8_t)g_utc_offset);
    3bda:	60 91 e8 42 	lds	r22, 0x42E8	; 0x8042e8 <g_utc_offset>
    3bde:	8a e2       	ldi	r24, 0x2A	; 42
    3be0:	90 e0       	ldi	r25, 0x00	; 0
    3be2:	0e 94 22 1c 	call	0x3844	; 0x3844 <_Z21avr_eeprom_write_bytejh>

			g_messages_text[STATION_ID][0] = '\0';
    3be6:	10 92 aa 42 	sts	0x42AA, r1	; 0x8042aa <g_messages_text+0x15>
			avr_eeprom_write_byte(StationID_text, 0);
    3bea:	60 e0       	ldi	r22, 0x00	; 0
    3bec:	8a e0       	ldi	r24, 0x0A	; 10
    3bee:	90 e0       	ldi	r25, 0x00	; 0
    3bf0:	0e 94 22 1c 	call	0x3844	; 0x3844 <_Z21avr_eeprom_write_bytejh>

			uint8_t *v = (uint8_t*)EEPROM_DTMF_UNLOCK_CODE_DEFAULT;
			i = UnlockCode;
    3bf4:	8f e1       	ldi	r24, 0x1F	; 31
    3bf6:	90 e0       	ldi	r25, 0x00	; 0
    3bf8:	89 83       	std	Y+1, r24	; 0x01
    3bfa:	9a 83       	std	Y+2, r25	; 0x02
			avr_eeprom_write_byte(Utc_offset, (uint8_t)g_utc_offset);

			g_messages_text[STATION_ID][0] = '\0';
			avr_eeprom_write_byte(StationID_text, 0);

			uint8_t *v = (uint8_t*)EEPROM_DTMF_UNLOCK_CODE_DEFAULT;
    3bfc:	ec ef       	ldi	r30, 0xFC	; 252
    3bfe:	f1 e4       	ldi	r31, 0x41	; 65
			i = UnlockCode;
			for(j = 0; j < strlen(EEPROM_DTMF_UNLOCK_CODE_DEFAULT); j++)
    3c00:	00 e0       	ldi	r16, 0x00	; 0
    3c02:	10 e0       	ldi	r17, 0x00	; 0
    3c04:	04 30       	cpi	r16, 0x04	; 4
    3c06:	11 05       	cpc	r17, r1
    3c08:	a8 f4       	brcc	.+42     	; 0x3c34 <_ZN13EepromManager20initializeEEPROMVarsEv+0x144>
			{
				g_unlockCode[j] = *v;
    3c0a:	df 01       	movw	r26, r30
    3c0c:	8d 91       	ld	r24, X+
    3c0e:	7d 01       	movw	r14, r26
    3c10:	d8 01       	movw	r26, r16
    3c12:	a7 51       	subi	r26, 0x17	; 23
    3c14:	bd 4b       	sbci	r27, 0xBD	; 189
    3c16:	8c 93       	st	X, r24
				avr_eeprom_write_byte(i++, *v++);
    3c18:	60 81       	ld	r22, Z
    3c1a:	89 81       	ldd	r24, Y+1	; 0x01
    3c1c:	9a 81       	ldd	r25, Y+2	; 0x02
    3c1e:	9c 01       	movw	r18, r24
    3c20:	2f 5f       	subi	r18, 0xFF	; 255
    3c22:	3f 4f       	sbci	r19, 0xFF	; 255
    3c24:	29 83       	std	Y+1, r18	; 0x01
    3c26:	3a 83       	std	Y+2, r19	; 0x02
    3c28:	0e 94 22 1c 	call	0x3844	; 0x3844 <_Z21avr_eeprom_write_bytejh>
			g_messages_text[STATION_ID][0] = '\0';
			avr_eeprom_write_byte(StationID_text, 0);

			uint8_t *v = (uint8_t*)EEPROM_DTMF_UNLOCK_CODE_DEFAULT;
			i = UnlockCode;
			for(j = 0; j < strlen(EEPROM_DTMF_UNLOCK_CODE_DEFAULT); j++)
    3c2c:	0f 5f       	subi	r16, 0xFF	; 255
    3c2e:	1f 4f       	sbci	r17, 0xFF	; 255
			{
				g_unlockCode[j] = *v;
				avr_eeprom_write_byte(i++, *v++);
    3c30:	f7 01       	movw	r30, r14
			g_messages_text[STATION_ID][0] = '\0';
			avr_eeprom_write_byte(StationID_text, 0);

			uint8_t *v = (uint8_t*)EEPROM_DTMF_UNLOCK_CODE_DEFAULT;
			i = UnlockCode;
			for(j = 0; j < strlen(EEPROM_DTMF_UNLOCK_CODE_DEFAULT); j++)
    3c32:	e8 cf       	rjmp	.-48     	; 0x3c04 <_ZN13EepromManager20initializeEEPROMVarsEv+0x114>
			{
				g_unlockCode[j] = *v;
				avr_eeprom_write_byte(i++, *v++);
			}

			avr_eeprom_write_byte(i, 0);
    3c34:	60 e0       	ldi	r22, 0x00	; 0
    3c36:	89 81       	ldd	r24, Y+1	; 0x01
    3c38:	9a 81       	ldd	r25, Y+2	; 0x02
    3c3a:	0e 94 22 1c 	call	0x3844	; 0x3844 <_Z21avr_eeprom_write_bytejh>
			g_unlockCode[j] = '\0';
    3c3e:	f8 01       	movw	r30, r16
    3c40:	e7 51       	subi	r30, 0x17	; 23
    3c42:	fd 4b       	sbci	r31, 0xBD	; 189
    3c44:	10 82       	st	Z, r1

			/* Done */

			avr_eeprom_write_word(0, EEPROM_INITIALIZED_FLAG);
    3c46:	6e ec       	ldi	r22, 0xCE	; 206
    3c48:	70 e0       	ldi	r23, 0x00	; 0
    3c4a:	80 e0       	ldi	r24, 0x00	; 0
    3c4c:	90 e0       	ldi	r25, 0x00	; 0
    3c4e:	0e 94 34 1c 	call	0x3868	; 0x3868 <_Z21avr_eeprom_write_wordjj>
		}
		
		return(err);
	}
    3c52:	8d 2d       	mov	r24, r13
    3c54:	0f 90       	pop	r0
    3c56:	0f 90       	pop	r0
    3c58:	df 91       	pop	r29
    3c5a:	cf 91       	pop	r28
    3c5c:	1f 91       	pop	r17
    3c5e:	0f 91       	pop	r16
    3c60:	ff 90       	pop	r15
    3c62:	ef 90       	pop	r14
    3c64:	df 90       	pop	r13
    3c66:	08 95       	ret

00003c68 <_ZN8GoertzelC1Eff>:
		highValueCount++;
	}

	Q2 = Q1;
	Q1 = Q0;
}
    3c68:	ef 92       	push	r14
    3c6a:	ff 92       	push	r15
    3c6c:	0f 93       	push	r16
    3c6e:	1f 93       	push	r17
    3c70:	cf 93       	push	r28
    3c72:	df 93       	push	r29
    3c74:	e4 2e       	mov	r14, r20
    3c76:	f5 2e       	mov	r15, r21
    3c78:	d6 2f       	mov	r29, r22
    3c7a:	c7 2f       	mov	r28, r23
    3c7c:	00 93 10 43 	sts	0x4310, r16	; 0x804310 <_SAMPLING_FREQUENCY>
    3c80:	10 93 11 43 	sts	0x4311, r17	; 0x804311 <_SAMPLING_FREQUENCY+0x1>
    3c84:	20 93 12 43 	sts	0x4312, r18	; 0x804312 <_SAMPLING_FREQUENCY+0x2>
    3c88:	30 93 13 43 	sts	0x4313, r19	; 0x804313 <_SAMPLING_FREQUENCY+0x3>
    3c8c:	20 e0       	ldi	r18, 0x00	; 0
    3c8e:	30 e0       	ldi	r19, 0x00	; 0
    3c90:	41 e5       	ldi	r20, 0x51	; 81
    3c92:	53 e4       	ldi	r21, 0x43	; 67
    3c94:	6e 2d       	mov	r22, r14
    3c96:	7f 2d       	mov	r23, r15
    3c98:	8d 2f       	mov	r24, r29
    3c9a:	9c 2f       	mov	r25, r28
    3c9c:	0e 94 bf 31 	call	0x637e	; 0x637e <__gesf2>
    3ca0:	18 16       	cp	r1, r24
    3ca2:	8c f0       	brlt	.+34     	; 0x3cc6 <_ZN8GoertzelC1Eff+0x5e>
    3ca4:	20 e0       	ldi	r18, 0x00	; 0
    3ca6:	30 e0       	ldi	r19, 0x00	; 0
    3ca8:	48 ec       	ldi	r20, 0xC8	; 200
    3caa:	52 e4       	ldi	r21, 0x42	; 66
    3cac:	6e 2d       	mov	r22, r14
    3cae:	7f 2d       	mov	r23, r15
    3cb0:	8d 2f       	mov	r24, r29
    3cb2:	9c 2f       	mov	r25, r28
    3cb4:	0e 94 60 30 	call	0x60c0	; 0x60c0 <__cmpsf2>
    3cb8:	88 23       	and	r24, r24
    3cba:	4c f4       	brge	.+18     	; 0x3cce <_ZN8GoertzelC1Eff+0x66>
    3cbc:	e1 2c       	mov	r14, r1
    3cbe:	f1 2c       	mov	r15, r1
    3cc0:	d8 ec       	ldi	r29, 0xC8	; 200
    3cc2:	c2 e4       	ldi	r28, 0x42	; 66
    3cc4:	04 c0       	rjmp	.+8      	; 0x3cce <_ZN8GoertzelC1Eff+0x66>
    3cc6:	e1 2c       	mov	r14, r1
    3cc8:	f1 2c       	mov	r15, r1
    3cca:	d1 e5       	ldi	r29, 0x51	; 81
    3ccc:	c3 e4       	ldi	r28, 0x43	; 67
    3cce:	6e 2d       	mov	r22, r14
    3cd0:	7f 2d       	mov	r23, r15
    3cd2:	8d 2f       	mov	r24, r29
    3cd4:	9c 2f       	mov	r25, r28
    3cd6:	0e 94 d7 30 	call	0x61ae	; 0x61ae <__fixsfsi>
    3cda:	60 93 0e 43 	sts	0x430E, r22	; 0x80430e <_N>
    3cde:	70 93 0f 43 	sts	0x430F, r23	; 0x80430f <_N+0x1>
    3ce2:	80 91 0e 43 	lds	r24, 0x430E	; 0x80430e <_N>
    3ce6:	90 91 0f 43 	lds	r25, 0x430F	; 0x80430f <_N+0x1>
    3cea:	88 0f       	add	r24, r24
    3cec:	99 1f       	adc	r25, r25
    3cee:	0e 94 dc 32 	call	0x65b8	; 0x65b8 <malloc>
    3cf2:	80 93 09 43 	sts	0x4309, r24	; 0x804309 <testData>
    3cf6:	90 93 0a 43 	sts	0x430A, r25	; 0x80430a <testData+0x1>
    3cfa:	df 91       	pop	r29
    3cfc:	cf 91       	pop	r28
    3cfe:	1f 91       	pop	r17
    3d00:	0f 91       	pop	r16
    3d02:	ff 90       	pop	r15
    3d04:	ef 90       	pop	r14
    3d06:	08 95       	ret

00003d08 <_ZN8GoertzelD1Ev>:
    3d08:	80 91 09 43 	lds	r24, 0x4309	; 0x804309 <testData>
    3d0c:	90 91 0a 43 	lds	r25, 0x430A	; 0x80430a <testData+0x1>
    3d10:	0e 94 74 33 	call	0x66e8	; 0x66e8 <free>
    3d14:	08 95       	ret

00003d16 <_ZN8Goertzel9DataPointEi>:

bool Goertzel::DataPoint(int data)
{
	if(_samplesReady)
    3d16:	80 91 0b 43 	lds	r24, 0x430B	; 0x80430b <_samplesReady>
    3d1a:	88 23       	and	r24, r24
    3d1c:	19 f0       	breq	.+6      	; 0x3d24 <_ZN8Goertzel9DataPointEi+0xe>
	{
		return(_samplesReady);
    3d1e:	80 91 0b 43 	lds	r24, 0x430B	; 0x80430b <_samplesReady>
    3d22:	08 95       	ret
	}

	testData[_index] = data;
    3d24:	e0 91 0c 43 	lds	r30, 0x430C	; 0x80430c <_index>
    3d28:	f0 91 0d 43 	lds	r31, 0x430D	; 0x80430d <_index+0x1>
    3d2c:	ee 0f       	add	r30, r30
    3d2e:	ff 1f       	adc	r31, r31
    3d30:	80 91 09 43 	lds	r24, 0x4309	; 0x804309 <testData>
    3d34:	90 91 0a 43 	lds	r25, 0x430A	; 0x80430a <testData+0x1>
    3d38:	e8 0f       	add	r30, r24
    3d3a:	f9 1f       	adc	r31, r25
    3d3c:	60 83       	st	Z, r22
    3d3e:	71 83       	std	Z+1, r23	; 0x01
	_index++;
    3d40:	80 91 0c 43 	lds	r24, 0x430C	; 0x80430c <_index>
    3d44:	90 91 0d 43 	lds	r25, 0x430D	; 0x80430d <_index+0x1>
    3d48:	01 96       	adiw	r24, 0x01	; 1
    3d4a:	80 93 0c 43 	sts	0x430C, r24	; 0x80430c <_index>
    3d4e:	90 93 0d 43 	sts	0x430D, r25	; 0x80430d <_index+0x1>
	if(_index >= _N)
    3d52:	20 91 0c 43 	lds	r18, 0x430C	; 0x80430c <_index>
    3d56:	30 91 0d 43 	lds	r19, 0x430D	; 0x80430d <_index+0x1>
    3d5a:	80 91 0e 43 	lds	r24, 0x430E	; 0x80430e <_N>
    3d5e:	90 91 0f 43 	lds	r25, 0x430F	; 0x80430f <_N+0x1>
    3d62:	28 17       	cp	r18, r24
    3d64:	39 07       	cpc	r19, r25
    3d66:	3c f0       	brlt	.+14     	; 0x3d76 <_ZN8Goertzel9DataPointEi+0x60>
	{
		_index = 0;
    3d68:	10 92 0c 43 	sts	0x430C, r1	; 0x80430c <_index>
    3d6c:	10 92 0d 43 	sts	0x430D, r1	; 0x80430d <_index+0x1>
		_samplesReady = true;
    3d70:	81 e0       	ldi	r24, 0x01	; 1
    3d72:	80 93 0b 43 	sts	0x430B, r24	; 0x80430b <_samplesReady>
	}

	return(_samplesReady);
    3d76:	80 91 0b 43 	lds	r24, 0x430B	; 0x80430b <_samplesReady>
}
    3d7a:	08 95       	ret

00003d7c <_ZL11i2c_0_WaitWv>:
	
	/* Initialize the data register */
	TWI1.MDATA = 0x00;
	
	/* Set bus state idle */
	TWI1.MSTATUS = TWI_BUSSTATE_IDLE_gc;
    3d7c:	88 ee       	ldi	r24, 0xE8	; 232
    3d7e:	93 e0       	ldi	r25, 0x03	; 3
    3d80:	80 93 20 40 	sts	0x4020, r24	; 0x804020 <g_i2c0_timeout_ticks>
    3d84:	90 93 21 40 	sts	0x4021, r25	; 0x804021 <g_i2c0_timeout_ticks+0x1>
    3d88:	80 e0       	ldi	r24, 0x00	; 0
    3d8a:	90 91 05 09 	lds	r25, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
    3d8e:	90 7c       	andi	r25, 0xC0	; 192
    3d90:	31 f0       	breq	.+12     	; 0x3d9e <_ZL11i2c_0_WaitWv+0x22>
    3d92:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
    3d96:	84 fd       	sbrc	r24, 4
    3d98:	07 c0       	rjmp	.+14     	; 0x3da8 <_ZL11i2c_0_WaitWv+0x2c>
    3d9a:	81 e0       	ldi	r24, 0x01	; 1
    3d9c:	08 c0       	rjmp	.+16     	; 0x3dae <_ZL11i2c_0_WaitWv+0x32>
    3d9e:	90 91 05 09 	lds	r25, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
    3da2:	9c 70       	andi	r25, 0x0C	; 12
    3da4:	19 f4       	brne	.+6      	; 0x3dac <_ZL11i2c_0_WaitWv+0x30>
    3da6:	03 c0       	rjmp	.+6      	; 0x3dae <_ZL11i2c_0_WaitWv+0x32>
    3da8:	82 e0       	ldi	r24, 0x02	; 2
    3daa:	01 c0       	rjmp	.+2      	; 0x3dae <_ZL11i2c_0_WaitWv+0x32>
    3dac:	84 e0       	ldi	r24, 0x04	; 4
    3dae:	81 11       	cpse	r24, r1
    3db0:	08 c0       	rjmp	.+16     	; 0x3dc2 <_ZL11i2c_0_WaitWv+0x46>
    3db2:	20 91 20 40 	lds	r18, 0x4020	; 0x804020 <g_i2c0_timeout_ticks>
    3db6:	30 91 21 40 	lds	r19, 0x4021	; 0x804021 <g_i2c0_timeout_ticks+0x1>
    3dba:	23 2b       	or	r18, r19
    3dbc:	21 f4       	brne	.+8      	; 0x3dc6 <_ZL11i2c_0_WaitWv+0x4a>
    3dbe:	90 e0       	ldi	r25, 0x00	; 0
    3dc0:	03 c0       	rjmp	.+6      	; 0x3dc8 <_ZL11i2c_0_WaitWv+0x4c>
    3dc2:	90 e0       	ldi	r25, 0x00	; 0
    3dc4:	01 c0       	rjmp	.+2      	; 0x3dc8 <_ZL11i2c_0_WaitWv+0x4c>
    3dc6:	91 e0       	ldi	r25, 0x01	; 1
    3dc8:	91 11       	cpse	r25, r1
    3dca:	df cf       	rjmp	.-66     	; 0x3d8a <_ZL11i2c_0_WaitWv+0xe>
    3dcc:	08 95       	ret

00003dce <_ZL11i2c_0_WaitRv>:
    3dce:	88 ee       	ldi	r24, 0xE8	; 232
    3dd0:	93 e0       	ldi	r25, 0x03	; 3
    3dd2:	80 93 20 40 	sts	0x4020, r24	; 0x804020 <g_i2c0_timeout_ticks>
    3dd6:	90 93 21 40 	sts	0x4021, r25	; 0x804021 <g_i2c0_timeout_ticks+0x1>
    3dda:	80 e0       	ldi	r24, 0x00	; 0
    3ddc:	90 91 05 09 	lds	r25, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
    3de0:	90 7c       	andi	r25, 0xC0	; 192
    3de2:	29 f4       	brne	.+10     	; 0x3dee <_ZL11i2c_0_WaitRv+0x20>
    3de4:	90 91 05 09 	lds	r25, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
    3de8:	9c 70       	andi	r25, 0x0C	; 12
    3dea:	19 f4       	brne	.+6      	; 0x3df2 <_ZL11i2c_0_WaitRv+0x24>
    3dec:	03 c0       	rjmp	.+6      	; 0x3df4 <_ZL11i2c_0_WaitRv+0x26>
    3dee:	83 e0       	ldi	r24, 0x03	; 3
    3df0:	01 c0       	rjmp	.+2      	; 0x3df4 <_ZL11i2c_0_WaitRv+0x26>
    3df2:	84 e0       	ldi	r24, 0x04	; 4
    3df4:	81 11       	cpse	r24, r1
    3df6:	08 c0       	rjmp	.+16     	; 0x3e08 <_ZL11i2c_0_WaitRv+0x3a>
    3df8:	20 91 20 40 	lds	r18, 0x4020	; 0x804020 <g_i2c0_timeout_ticks>
    3dfc:	30 91 21 40 	lds	r19, 0x4021	; 0x804021 <g_i2c0_timeout_ticks+0x1>
    3e00:	23 2b       	or	r18, r19
    3e02:	21 f4       	brne	.+8      	; 0x3e0c <_ZL11i2c_0_WaitRv+0x3e>
    3e04:	90 e0       	ldi	r25, 0x00	; 0
    3e06:	03 c0       	rjmp	.+6      	; 0x3e0e <_ZL11i2c_0_WaitRv+0x40>
    3e08:	90 e0       	ldi	r25, 0x00	; 0
    3e0a:	01 c0       	rjmp	.+2      	; 0x3e0e <_ZL11i2c_0_WaitRv+0x40>
    3e0c:	91 e0       	ldi	r25, 0x01	; 1
    3e0e:	91 11       	cpse	r25, r1
    3e10:	e5 cf       	rjmp	.-54     	; 0x3ddc <_ZL11i2c_0_WaitRv+0xe>
    3e12:	08 95       	ret

00003e14 <_ZL11I2C_1_WaitWv>:
    3e14:	88 ee       	ldi	r24, 0xE8	; 232
    3e16:	93 e0       	ldi	r25, 0x03	; 3
    3e18:	80 93 1e 40 	sts	0x401E, r24	; 0x80401e <g_i2c1_timeout_ticks>
    3e1c:	90 93 1f 40 	sts	0x401F, r25	; 0x80401f <g_i2c1_timeout_ticks+0x1>
    3e20:	80 e0       	ldi	r24, 0x00	; 0
    3e22:	90 91 25 09 	lds	r25, 0x0925	; 0x800925 <__TEXT_REGION_LENGTH__+0x7e0925>
    3e26:	90 7c       	andi	r25, 0xC0	; 192
    3e28:	31 f0       	breq	.+12     	; 0x3e36 <_ZL11I2C_1_WaitWv+0x22>
    3e2a:	80 91 25 09 	lds	r24, 0x0925	; 0x800925 <__TEXT_REGION_LENGTH__+0x7e0925>
    3e2e:	84 fd       	sbrc	r24, 4
    3e30:	07 c0       	rjmp	.+14     	; 0x3e40 <_ZL11I2C_1_WaitWv+0x2c>
    3e32:	81 e0       	ldi	r24, 0x01	; 1
    3e34:	08 c0       	rjmp	.+16     	; 0x3e46 <_ZL11I2C_1_WaitWv+0x32>
    3e36:	90 91 25 09 	lds	r25, 0x0925	; 0x800925 <__TEXT_REGION_LENGTH__+0x7e0925>
    3e3a:	9c 70       	andi	r25, 0x0C	; 12
    3e3c:	19 f4       	brne	.+6      	; 0x3e44 <_ZL11I2C_1_WaitWv+0x30>
    3e3e:	03 c0       	rjmp	.+6      	; 0x3e46 <_ZL11I2C_1_WaitWv+0x32>
    3e40:	82 e0       	ldi	r24, 0x02	; 2
    3e42:	01 c0       	rjmp	.+2      	; 0x3e46 <_ZL11I2C_1_WaitWv+0x32>
    3e44:	84 e0       	ldi	r24, 0x04	; 4
    3e46:	81 11       	cpse	r24, r1
    3e48:	08 c0       	rjmp	.+16     	; 0x3e5a <_ZL11I2C_1_WaitWv+0x46>
    3e4a:	20 91 1e 40 	lds	r18, 0x401E	; 0x80401e <g_i2c1_timeout_ticks>
    3e4e:	30 91 1f 40 	lds	r19, 0x401F	; 0x80401f <g_i2c1_timeout_ticks+0x1>
    3e52:	23 2b       	or	r18, r19
    3e54:	21 f4       	brne	.+8      	; 0x3e5e <_ZL11I2C_1_WaitWv+0x4a>
    3e56:	90 e0       	ldi	r25, 0x00	; 0
    3e58:	03 c0       	rjmp	.+6      	; 0x3e60 <_ZL11I2C_1_WaitWv+0x4c>
    3e5a:	90 e0       	ldi	r25, 0x00	; 0
    3e5c:	01 c0       	rjmp	.+2      	; 0x3e60 <_ZL11I2C_1_WaitWv+0x4c>
    3e5e:	91 e0       	ldi	r25, 0x01	; 1
    3e60:	91 11       	cpse	r25, r1
    3e62:	df cf       	rjmp	.-66     	; 0x3e22 <_ZL11I2C_1_WaitWv+0xe>
    3e64:	08 95       	ret

00003e66 <_ZL11I2C_1_WaitRv>:
    3e66:	88 ee       	ldi	r24, 0xE8	; 232
    3e68:	93 e0       	ldi	r25, 0x03	; 3
    3e6a:	80 93 20 40 	sts	0x4020, r24	; 0x804020 <g_i2c0_timeout_ticks>
    3e6e:	90 93 21 40 	sts	0x4021, r25	; 0x804021 <g_i2c0_timeout_ticks+0x1>
    3e72:	80 e0       	ldi	r24, 0x00	; 0
    3e74:	90 91 25 09 	lds	r25, 0x0925	; 0x800925 <__TEXT_REGION_LENGTH__+0x7e0925>
    3e78:	90 7c       	andi	r25, 0xC0	; 192
    3e7a:	29 f4       	brne	.+10     	; 0x3e86 <_ZL11I2C_1_WaitRv+0x20>
    3e7c:	90 91 25 09 	lds	r25, 0x0925	; 0x800925 <__TEXT_REGION_LENGTH__+0x7e0925>
    3e80:	9c 70       	andi	r25, 0x0C	; 12
    3e82:	19 f4       	brne	.+6      	; 0x3e8a <_ZL11I2C_1_WaitRv+0x24>
    3e84:	03 c0       	rjmp	.+6      	; 0x3e8c <_ZL11I2C_1_WaitRv+0x26>
    3e86:	83 e0       	ldi	r24, 0x03	; 3
    3e88:	01 c0       	rjmp	.+2      	; 0x3e8c <_ZL11I2C_1_WaitRv+0x26>
    3e8a:	84 e0       	ldi	r24, 0x04	; 4
    3e8c:	81 11       	cpse	r24, r1
    3e8e:	08 c0       	rjmp	.+16     	; 0x3ea0 <_ZL11I2C_1_WaitRv+0x3a>
    3e90:	20 91 20 40 	lds	r18, 0x4020	; 0x804020 <g_i2c0_timeout_ticks>
    3e94:	30 91 21 40 	lds	r19, 0x4021	; 0x804021 <g_i2c0_timeout_ticks+0x1>
    3e98:	23 2b       	or	r18, r19
    3e9a:	21 f4       	brne	.+8      	; 0x3ea4 <_ZL11I2C_1_WaitRv+0x3e>
    3e9c:	90 e0       	ldi	r25, 0x00	; 0
    3e9e:	03 c0       	rjmp	.+6      	; 0x3ea6 <_ZL11I2C_1_WaitRv+0x40>
    3ea0:	90 e0       	ldi	r25, 0x00	; 0
    3ea2:	01 c0       	rjmp	.+2      	; 0x3ea6 <_ZL11I2C_1_WaitRv+0x40>
    3ea4:	91 e0       	ldi	r25, 0x01	; 1
    3ea6:	91 11       	cpse	r25, r1
    3ea8:	e5 cf       	rjmp	.-54     	; 0x3e74 <_ZL11I2C_1_WaitRv+0xe>
    3eaa:	08 95       	ret

00003eac <I2C_0_SendData>:
    3eac:	ff 92       	push	r15
    3eae:	0f 93       	push	r16
    3eb0:	1f 93       	push	r17
    3eb2:	cf 93       	push	r28
    3eb4:	df 93       	push	r29
    3eb6:	8b 01       	movw	r16, r22
    3eb8:	c4 2f       	mov	r28, r20
    3eba:	8e 7f       	andi	r24, 0xFE	; 254
    3ebc:	80 93 07 09 	sts	0x0907, r24	; 0x800907 <__TEXT_REGION_LENGTH__+0x7e0907>
    3ec0:	0e 94 be 1e 	call	0x3d7c	; 0x3d7c <_ZL11i2c_0_WaitWv>
    3ec4:	81 30       	cpi	r24, 0x01	; 1
    3ec6:	c1 f4       	brne	.+48     	; 0x3ef8 <I2C_0_SendData+0x4c>
    3ec8:	cc 23       	and	r28, r28
    3eca:	c1 f0       	breq	.+48     	; 0x3efc <I2C_0_SendData+0x50>
    3ecc:	01 15       	cp	r16, r1
    3ece:	11 05       	cpc	r17, r1
    3ed0:	b9 f0       	breq	.+46     	; 0x3f00 <I2C_0_SendData+0x54>
    3ed2:	d0 e0       	ldi	r29, 0x00	; 0
    3ed4:	ff 24       	eor	r15, r15
    3ed6:	fa 94       	dec	r15
    3ed8:	fc 0e       	add	r15, r28
    3eda:	cc 23       	and	r28, r28
    3edc:	99 f0       	breq	.+38     	; 0x3f04 <I2C_0_SendData+0x58>
    3ede:	f8 01       	movw	r30, r16
    3ee0:	80 81       	ld	r24, Z
    3ee2:	80 93 08 09 	sts	0x0908, r24	; 0x800908 <__TEXT_REGION_LENGTH__+0x7e0908>
    3ee6:	0e 94 be 1e 	call	0x3d7c	; 0x3d7c <_ZL11i2c_0_WaitWv>
    3eea:	81 30       	cpi	r24, 0x01	; 1
    3eec:	69 f4       	brne	.+26     	; 0x3f08 <I2C_0_SendData+0x5c>
    3eee:	df 5f       	subi	r29, 0xFF	; 255
    3ef0:	0f 5f       	subi	r16, 0xFF	; 255
    3ef2:	1f 4f       	sbci	r17, 0xFF	; 255
    3ef4:	cf 2d       	mov	r28, r15
    3ef6:	ee cf       	rjmp	.-36     	; 0x3ed4 <I2C_0_SendData+0x28>
    3ef8:	8f ef       	ldi	r24, 0xFF	; 255
    3efa:	07 c0       	rjmp	.+14     	; 0x3f0a <I2C_0_SendData+0x5e>
    3efc:	80 e0       	ldi	r24, 0x00	; 0
    3efe:	05 c0       	rjmp	.+10     	; 0x3f0a <I2C_0_SendData+0x5e>
    3f00:	80 e0       	ldi	r24, 0x00	; 0
    3f02:	03 c0       	rjmp	.+6      	; 0x3f0a <I2C_0_SendData+0x5e>
    3f04:	8d 2f       	mov	r24, r29
    3f06:	01 c0       	rjmp	.+2      	; 0x3f0a <I2C_0_SendData+0x5e>
    3f08:	8d 2f       	mov	r24, r29
    3f0a:	df 91       	pop	r29
    3f0c:	cf 91       	pop	r28
    3f0e:	1f 91       	pop	r17
    3f10:	0f 91       	pop	r16
    3f12:	ff 90       	pop	r15
    3f14:	08 95       	ret

00003f16 <I2C_0_GetData>:
    3f16:	ff 92       	push	r15
    3f18:	0f 93       	push	r16
    3f1a:	1f 93       	push	r17
    3f1c:	cf 93       	push	r28
    3f1e:	df 93       	push	r29
    3f20:	8b 01       	movw	r16, r22
    3f22:	d4 2f       	mov	r29, r20
    3f24:	81 60       	ori	r24, 0x01	; 1
    3f26:	80 93 07 09 	sts	0x0907, r24	; 0x800907 <__TEXT_REGION_LENGTH__+0x7e0907>
    3f2a:	0e 94 be 1e 	call	0x3d7c	; 0x3d7c <_ZL11i2c_0_WaitWv>
    3f2e:	81 30       	cpi	r24, 0x01	; 1
    3f30:	49 f5       	brne	.+82     	; 0x3f84 <I2C_0_GetData+0x6e>
    3f32:	f8 01       	movw	r30, r16
    3f34:	80 81       	ld	r24, Z
    3f36:	88 23       	and	r24, r24
    3f38:	31 f0       	breq	.+12     	; 0x3f46 <I2C_0_GetData+0x30>
    3f3a:	80 93 08 09 	sts	0x0908, r24	; 0x800908 <__TEXT_REGION_LENGTH__+0x7e0908>
    3f3e:	0e 94 be 1e 	call	0x3d7c	; 0x3d7c <_ZL11i2c_0_WaitWv>
    3f42:	81 30       	cpi	r24, 0x01	; 1
    3f44:	09 f5       	brne	.+66     	; 0x3f88 <I2C_0_GetData+0x72>
    3f46:	dd 23       	and	r29, r29
    3f48:	09 f1       	breq	.+66     	; 0x3f8c <I2C_0_GetData+0x76>
    3f4a:	01 15       	cp	r16, r1
    3f4c:	11 05       	cpc	r17, r1
    3f4e:	01 f1       	breq	.+64     	; 0x3f90 <I2C_0_GetData+0x7a>
    3f50:	c0 e0       	ldi	r28, 0x00	; 0
    3f52:	ff 24       	eor	r15, r15
    3f54:	fa 94       	dec	r15
    3f56:	fd 0e       	add	r15, r29
    3f58:	dd 23       	and	r29, r29
    3f5a:	e1 f0       	breq	.+56     	; 0x3f94 <I2C_0_GetData+0x7e>
    3f5c:	0e 94 e7 1e 	call	0x3dce	; 0x3dce <_ZL11i2c_0_WaitRv>
    3f60:	83 30       	cpi	r24, 0x03	; 3
    3f62:	d1 f4       	brne	.+52     	; 0x3f98 <I2C_0_GetData+0x82>
    3f64:	80 91 08 09 	lds	r24, 0x0908	; 0x800908 <__TEXT_REGION_LENGTH__+0x7e0908>
    3f68:	f8 01       	movw	r30, r16
    3f6a:	80 83       	st	Z, r24
    3f6c:	f1 10       	cpse	r15, r1
    3f6e:	02 c0       	rjmp	.+4      	; 0x3f74 <I2C_0_GetData+0x5e>
    3f70:	87 e0       	ldi	r24, 0x07	; 7
    3f72:	01 c0       	rjmp	.+2      	; 0x3f76 <I2C_0_GetData+0x60>
    3f74:	82 e0       	ldi	r24, 0x02	; 2
    3f76:	80 93 04 09 	sts	0x0904, r24	; 0x800904 <__TEXT_REGION_LENGTH__+0x7e0904>
    3f7a:	cf 5f       	subi	r28, 0xFF	; 255
    3f7c:	0f 5f       	subi	r16, 0xFF	; 255
    3f7e:	1f 4f       	sbci	r17, 0xFF	; 255
    3f80:	df 2d       	mov	r29, r15
    3f82:	e7 cf       	rjmp	.-50     	; 0x3f52 <I2C_0_GetData+0x3c>
    3f84:	8f ef       	ldi	r24, 0xFF	; 255
    3f86:	09 c0       	rjmp	.+18     	; 0x3f9a <I2C_0_GetData+0x84>
    3f88:	8f ef       	ldi	r24, 0xFF	; 255
    3f8a:	07 c0       	rjmp	.+14     	; 0x3f9a <I2C_0_GetData+0x84>
    3f8c:	80 e0       	ldi	r24, 0x00	; 0
    3f8e:	05 c0       	rjmp	.+10     	; 0x3f9a <I2C_0_GetData+0x84>
    3f90:	80 e0       	ldi	r24, 0x00	; 0
    3f92:	03 c0       	rjmp	.+6      	; 0x3f9a <I2C_0_GetData+0x84>
    3f94:	8c 2f       	mov	r24, r28
    3f96:	01 c0       	rjmp	.+2      	; 0x3f9a <I2C_0_GetData+0x84>
    3f98:	8c 2f       	mov	r24, r28
    3f9a:	df 91       	pop	r29
    3f9c:	cf 91       	pop	r28
    3f9e:	1f 91       	pop	r17
    3fa0:	0f 91       	pop	r16
    3fa2:	ff 90       	pop	r15
    3fa4:	08 95       	ret

00003fa6 <I2C_1_SendData>:
	return state;
}

/* Returns how many bytes have been sent, -1 means NACK at address, 0 means client ACKed to client address */
uint8_t I2C_1_SendData(uint8_t address, uint8_t *pData, uint8_t len)
{
    3fa6:	ff 92       	push	r15
    3fa8:	0f 93       	push	r16
    3faa:	1f 93       	push	r17
    3fac:	cf 93       	push	r28
    3fae:	df 93       	push	r29
    3fb0:	8b 01       	movw	r16, r22
    3fb2:	c4 2f       	mov	r28, r20
	uint8_t retVal = (uint8_t) - 1;
	
	/* start transmitting the client address */
	TWI1.MADDR = address & ~0x01;
    3fb4:	8e 7f       	andi	r24, 0xFE	; 254
    3fb6:	80 93 27 09 	sts	0x0927, r24	; 0x800927 <__TEXT_REGION_LENGTH__+0x7e0927>
	if(I2C_1_WaitW() != I2C_ACKED)
    3fba:	0e 94 0a 1f 	call	0x3e14	; 0x3e14 <_ZL11I2C_1_WaitWv>
    3fbe:	81 30       	cpi	r24, 0x01	; 1
    3fc0:	c1 f4       	brne	.+48     	; 0x3ff2 <I2C_1_SendData+0x4c>
	return retVal;

	retVal = 0;
	if((len != 0) && (pData != null))
    3fc2:	cc 23       	and	r28, r28
    3fc4:	c1 f0       	breq	.+48     	; 0x3ff6 <I2C_1_SendData+0x50>
    3fc6:	01 15       	cp	r16, r1
    3fc8:	11 05       	cpc	r17, r1
    3fca:	b9 f0       	breq	.+46     	; 0x3ffa <I2C_1_SendData+0x54>
    3fcc:	d0 e0       	ldi	r29, 0x00	; 0
	{
		while(len--)
    3fce:	ff 24       	eor	r15, r15
    3fd0:	fa 94       	dec	r15
    3fd2:	fc 0e       	add	r15, r28
    3fd4:	cc 23       	and	r28, r28
    3fd6:	99 f0       	breq	.+38     	; 0x3ffe <I2C_1_SendData+0x58>
		{
			TWI1.MDATA = *pData;
    3fd8:	f8 01       	movw	r30, r16
    3fda:	80 81       	ld	r24, Z
    3fdc:	80 93 28 09 	sts	0x0928, r24	; 0x800928 <__TEXT_REGION_LENGTH__+0x7e0928>
			if(I2C_1_WaitW() == I2C_ACKED)
    3fe0:	0e 94 0a 1f 	call	0x3e14	; 0x3e14 <_ZL11I2C_1_WaitWv>
    3fe4:	81 30       	cpi	r24, 0x01	; 1
    3fe6:	69 f4       	brne	.+26     	; 0x4002 <__DATA_REGION_LENGTH__+0x2>
			{
				retVal++;
    3fe8:	df 5f       	subi	r29, 0xFF	; 255
				pData++;
    3fea:	0f 5f       	subi	r16, 0xFF	; 255
    3fec:	1f 4f       	sbci	r17, 0xFF	; 255
	return retVal;

	retVal = 0;
	if((len != 0) && (pData != null))
	{
		while(len--)
    3fee:	cf 2d       	mov	r28, r15
    3ff0:	ee cf       	rjmp	.-36     	; 0x3fce <I2C_1_SendData+0x28>
	uint8_t retVal = (uint8_t) - 1;
	
	/* start transmitting the client address */
	TWI1.MADDR = address & ~0x01;
	if(I2C_1_WaitW() != I2C_ACKED)
	return retVal;
    3ff2:	8f ef       	ldi	r24, 0xFF	; 255
    3ff4:	07 c0       	rjmp	.+14     	; 0x4004 <__DATA_REGION_LENGTH__+0x4>

	retVal = 0;
    3ff6:	80 e0       	ldi	r24, 0x00	; 0
    3ff8:	05 c0       	rjmp	.+10     	; 0x4004 <__DATA_REGION_LENGTH__+0x4>
    3ffa:	80 e0       	ldi	r24, 0x00	; 0
    3ffc:	03 c0       	rjmp	.+6      	; 0x4004 <__DATA_REGION_LENGTH__+0x4>
    3ffe:	8d 2f       	mov	r24, r29
    4000:	01 c0       	rjmp	.+2      	; 0x4004 <__DATA_REGION_LENGTH__+0x4>
    4002:	8d 2f       	mov	r24, r29
			}
		}
	}
	
	return retVal;
}
    4004:	df 91       	pop	r29
    4006:	cf 91       	pop	r28
    4008:	1f 91       	pop	r17
    400a:	0f 91       	pop	r16
    400c:	ff 90       	pop	r15
    400e:	08 95       	ret

00004010 <I2C_1_GetData>:

/* Returns how many bytes have been received, -1 means NACK at address */
uint8_t I2C_1_GetData(uint8_t address, uint8_t *pData, uint8_t len)
{
    4010:	ff 92       	push	r15
    4012:	0f 93       	push	r16
    4014:	1f 93       	push	r17
    4016:	cf 93       	push	r28
    4018:	df 93       	push	r29
    401a:	8b 01       	movw	r16, r22
    401c:	d4 2f       	mov	r29, r20
	uint8_t retVal = (uint8_t) -1;
	
	/* start transmitting the client address */
	TWI1.MADDR = address | 0x01;
    401e:	81 60       	ori	r24, 0x01	; 1
    4020:	80 93 27 09 	sts	0x0927, r24	; 0x800927 <__TEXT_REGION_LENGTH__+0x7e0927>
	if(I2C_1_WaitW() != I2C_ACKED)
    4024:	0e 94 0a 1f 	call	0x3e14	; 0x3e14 <_ZL11I2C_1_WaitWv>
    4028:	81 30       	cpi	r24, 0x01	; 1
    402a:	49 f5       	brne	.+82     	; 0x407e <I2C_1_GetData+0x6e>
	return retVal;
	
	/* if pData[0] contains a register address, send it first */
	if(pData[0])
    402c:	f8 01       	movw	r30, r16
    402e:	80 81       	ld	r24, Z
    4030:	88 23       	and	r24, r24
    4032:	31 f0       	breq	.+12     	; 0x4040 <I2C_1_GetData+0x30>
	{
		TWI1.MDATA = pData[0];
    4034:	80 93 28 09 	sts	0x0928, r24	; 0x800928 <__TEXT_REGION_LENGTH__+0x7e0928>
		if(I2C_1_WaitW() != I2C_ACKED)
    4038:	0e 94 0a 1f 	call	0x3e14	; 0x3e14 <_ZL11I2C_1_WaitWv>
    403c:	81 30       	cpi	r24, 0x01	; 1
    403e:	09 f5       	brne	.+66     	; 0x4082 <I2C_1_GetData+0x72>
			return retVal;
		}
	}

	retVal = 0;
	if((len != 0) && (pData !=null ))
    4040:	dd 23       	and	r29, r29
    4042:	09 f1       	breq	.+66     	; 0x4086 <I2C_1_GetData+0x76>
    4044:	01 15       	cp	r16, r1
    4046:	11 05       	cpc	r17, r1
    4048:	01 f1       	breq	.+64     	; 0x408a <I2C_1_GetData+0x7a>
    404a:	c0 e0       	ldi	r28, 0x00	; 0
	{
		while(len--)
    404c:	ff 24       	eor	r15, r15
    404e:	fa 94       	dec	r15
    4050:	fd 0e       	add	r15, r29
    4052:	dd 23       	and	r29, r29
    4054:	e1 f0       	breq	.+56     	; 0x408e <I2C_1_GetData+0x7e>
		{
			if(I2C_1_WaitR() == I2C_READY)
    4056:	0e 94 33 1f 	call	0x3e66	; 0x3e66 <_ZL11I2C_1_WaitRv>
    405a:	83 30       	cpi	r24, 0x03	; 3
    405c:	d1 f4       	brne	.+52     	; 0x4092 <I2C_1_GetData+0x82>
			{
				*pData = TWI1.MDATA;
    405e:	80 91 28 09 	lds	r24, 0x0928	; 0x800928 <__TEXT_REGION_LENGTH__+0x7e0928>
    4062:	f8 01       	movw	r30, r16
    4064:	80 83       	st	Z, r24
				TWI1.MCTRLB = (len == 0)? TWI_ACKACT_bm | TWI_MCMD_STOP_gc : TWI_MCMD_RECVTRANS_gc;
    4066:	f1 10       	cpse	r15, r1
    4068:	02 c0       	rjmp	.+4      	; 0x406e <I2C_1_GetData+0x5e>
    406a:	87 e0       	ldi	r24, 0x07	; 7
    406c:	01 c0       	rjmp	.+2      	; 0x4070 <I2C_1_GetData+0x60>
    406e:	82 e0       	ldi	r24, 0x02	; 2
    4070:	80 93 24 09 	sts	0x0924, r24	; 0x800924 <__TEXT_REGION_LENGTH__+0x7e0924>
				retVal++;
    4074:	cf 5f       	subi	r28, 0xFF	; 255
				pData++;
    4076:	0f 5f       	subi	r16, 0xFF	; 255
    4078:	1f 4f       	sbci	r17, 0xFF	; 255
	}

	retVal = 0;
	if((len != 0) && (pData !=null ))
	{
		while(len--)
    407a:	df 2d       	mov	r29, r15
    407c:	e7 cf       	rjmp	.-50     	; 0x404c <I2C_1_GetData+0x3c>
	uint8_t retVal = (uint8_t) -1;
	
	/* start transmitting the client address */
	TWI1.MADDR = address | 0x01;
	if(I2C_1_WaitW() != I2C_ACKED)
	return retVal;
    407e:	8f ef       	ldi	r24, 0xFF	; 255
    4080:	09 c0       	rjmp	.+18     	; 0x4094 <I2C_1_GetData+0x84>
	if(pData[0])
	{
		TWI1.MDATA = pData[0];
		if(I2C_1_WaitW() != I2C_ACKED)
		{
			return retVal;
    4082:	8f ef       	ldi	r24, 0xFF	; 255
    4084:	07 c0       	rjmp	.+14     	; 0x4094 <I2C_1_GetData+0x84>
		}
	}

	retVal = 0;
    4086:	80 e0       	ldi	r24, 0x00	; 0
    4088:	05 c0       	rjmp	.+10     	; 0x4094 <I2C_1_GetData+0x84>
    408a:	80 e0       	ldi	r24, 0x00	; 0
    408c:	03 c0       	rjmp	.+6      	; 0x4094 <I2C_1_GetData+0x84>
    408e:	8c 2f       	mov	r24, r28
    4090:	01 c0       	rjmp	.+2      	; 0x4094 <I2C_1_GetData+0x84>
    4092:	8c 2f       	mov	r24, r28
			break;
		}
	}
	
	return retVal;
}
    4094:	df 91       	pop	r29
    4096:	cf 91       	pop	r28
    4098:	1f 91       	pop	r17
    409a:	0f 91       	pop	r16
    409c:	ff 90       	pop	r15
    409e:	08 95       	ret

000040a0 <_ZL21USART0_initializationm>:


void lb_send_sync(void)
{
	sprintf(g_tempMsgBuff, ".....");
	lb_send_text(g_tempMsgBuff);
    40a0:	20 b1       	in	r18, 0x00	; 0
    40a2:	2d 7f       	andi	r18, 0xFD	; 253
    40a4:	20 b9       	out	0x00, r18	; 0
    40a6:	e1 e1       	ldi	r30, 0x11	; 17
    40a8:	f4 e0       	ldi	r31, 0x04	; 4
    40aa:	20 81       	ld	r18, Z
    40ac:	27 7f       	andi	r18, 0xF7	; 247
    40ae:	20 83       	st	Z, r18
    40b0:	20 b1       	in	r18, 0x00	; 0
    40b2:	21 60       	ori	r18, 0x01	; 1
    40b4:	20 b9       	out	0x00, r18	; 0
    40b6:	21 b1       	in	r18, 0x01	; 1
    40b8:	21 60       	ori	r18, 0x01	; 1
    40ba:	21 b9       	out	0x01, r18	; 1
    40bc:	0e 94 7c 2f 	call	0x5ef8	; 0x5ef8 <USART0_init>
    40c0:	08 95       	ret

000040c2 <_ZL21USART1_initializationm>:
    40c2:	28 b1       	in	r18, 0x08	; 8
    40c4:	2d 7f       	andi	r18, 0xFD	; 253
    40c6:	28 b9       	out	0x08, r18	; 8
    40c8:	e1 e5       	ldi	r30, 0x51	; 81
    40ca:	f4 e0       	ldi	r31, 0x04	; 4
    40cc:	20 81       	ld	r18, Z
    40ce:	27 7f       	andi	r18, 0xF7	; 247
    40d0:	20 83       	st	Z, r18
    40d2:	28 b1       	in	r18, 0x08	; 8
    40d4:	21 60       	ori	r18, 0x01	; 1
    40d6:	28 b9       	out	0x08, r18	; 8
    40d8:	29 b1       	in	r18, 0x09	; 9
    40da:	21 60       	ori	r18, 0x01	; 1
    40dc:	29 b9       	out	0x09, r18	; 9
    40de:	0e 94 b0 2f 	call	0x5f60	; 0x5f60 <USART1_init>
    40e2:	08 95       	ret

000040e4 <_ZL16linkbus_start_txv>:
    40e4:	cf 93       	push	r28
    40e6:	80 91 64 44 	lds	r24, 0x4464	; 0x804464 <_ZL17linkbus_tx_active>
    40ea:	c1 e0       	ldi	r28, 0x01	; 1
    40ec:	81 11       	cpse	r24, r1
    40ee:	c0 e0       	ldi	r28, 0x00	; 0
    40f0:	81 11       	cpse	r24, r1
    40f2:	0c c0       	rjmp	.+24     	; 0x410c <_ZL16linkbus_start_txv+0x28>
    40f4:	81 e0       	ldi	r24, 0x01	; 1
    40f6:	80 93 64 44 	sts	0x4464, r24	; 0x804464 <_ZL17linkbus_tx_active>
    40fa:	80 91 22 40 	lds	r24, 0x4022	; 0x804022 <g_linkbus_usart_number>
    40fe:	81 11       	cpse	r24, r1
    4100:	03 c0       	rjmp	.+6      	; 0x4108 <_ZL16linkbus_start_txv+0x24>
    4102:	0e 94 9e 2f 	call	0x5f3c	; 0x5f3c <USART0_enable_tx>
    4106:	02 c0       	rjmp	.+4      	; 0x410c <_ZL16linkbus_start_txv+0x28>
    4108:	0e 94 d2 2f 	call	0x5fa4	; 0x5fa4 <USART1_enable_tx>
    410c:	8c 2f       	mov	r24, r28
    410e:	cf 91       	pop	r28
    4110:	08 95       	ret

00004112 <_Z18nextFullLBTxBufferv>:
    4112:	90 e0       	ldi	r25, 0x00	; 0
    4114:	80 91 17 43 	lds	r24, 0x4317	; 0x804317 <_ZZ18nextFullLBTxBuffervE11bufferIndex>
    4118:	28 2f       	mov	r18, r24
    411a:	30 e0       	ldi	r19, 0x00	; 0
    411c:	42 e3       	ldi	r20, 0x32	; 50
    411e:	42 9f       	mul	r20, r18
    4120:	f0 01       	movw	r30, r0
    4122:	43 9f       	mul	r20, r19
    4124:	f0 0d       	add	r31, r0
    4126:	11 24       	eor	r1, r1
    4128:	e4 56       	subi	r30, 0x64	; 100
    412a:	fc 4b       	sbci	r31, 0xBC	; 188
    412c:	40 81       	ld	r20, Z
    412e:	41 11       	cpse	r20, r1
    4130:	0b c0       	rjmp	.+22     	; 0x4148 <_Z18nextFullLBTxBufferv+0x36>
    4132:	9f 5f       	subi	r25, 0xFF	; 255
    4134:	94 30       	cpi	r25, 0x04	; 4
    4136:	50 f4       	brcc	.+20     	; 0x414c <_Z18nextFullLBTxBufferv+0x3a>
    4138:	8f 5f       	subi	r24, 0xFF	; 255
    413a:	80 93 17 43 	sts	0x4317, r24	; 0x804317 <_ZZ18nextFullLBTxBuffervE11bufferIndex>
    413e:	84 30       	cpi	r24, 0x04	; 4
    4140:	48 f3       	brcs	.-46     	; 0x4114 <_Z18nextFullLBTxBufferv+0x2>
    4142:	10 92 17 43 	sts	0x4317, r1	; 0x804317 <_ZZ18nextFullLBTxBuffervE11bufferIndex>
    4146:	e6 cf       	rjmp	.-52     	; 0x4114 <_Z18nextFullLBTxBufferv+0x2>
    4148:	81 e0       	ldi	r24, 0x01	; 1
    414a:	01 c0       	rjmp	.+2      	; 0x414e <_Z18nextFullLBTxBufferv+0x3c>
    414c:	80 e0       	ldi	r24, 0x00	; 0
    414e:	88 23       	and	r24, r24
    4150:	49 f0       	breq	.+18     	; 0x4164 <_Z18nextFullLBTxBufferv+0x52>
    4152:	42 e3       	ldi	r20, 0x32	; 50
    4154:	42 9f       	mul	r20, r18
    4156:	c0 01       	movw	r24, r0
    4158:	43 9f       	mul	r20, r19
    415a:	90 0d       	add	r25, r0
    415c:	11 24       	eor	r1, r1
    415e:	84 56       	subi	r24, 0x64	; 100
    4160:	9c 4b       	sbci	r25, 0xBC	; 188
    4162:	08 95       	ret
    4164:	80 e0       	ldi	r24, 0x00	; 0
    4166:	90 e0       	ldi	r25, 0x00	; 0
    4168:	08 95       	ret

0000416a <_Z19nextEmptyLBTxBufferv>:
    416a:	90 e0       	ldi	r25, 0x00	; 0
    416c:	80 91 16 43 	lds	r24, 0x4316	; 0x804316 <_ZZ19nextEmptyLBTxBuffervE11bufferIndex>
    4170:	28 2f       	mov	r18, r24
    4172:	30 e0       	ldi	r19, 0x00	; 0
    4174:	42 e3       	ldi	r20, 0x32	; 50
    4176:	42 9f       	mul	r20, r18
    4178:	f0 01       	movw	r30, r0
    417a:	43 9f       	mul	r20, r19
    417c:	f0 0d       	add	r31, r0
    417e:	11 24       	eor	r1, r1
    4180:	e4 56       	subi	r30, 0x64	; 100
    4182:	fc 4b       	sbci	r31, 0xBC	; 188
    4184:	40 81       	ld	r20, Z
    4186:	44 23       	and	r20, r20
    4188:	59 f0       	breq	.+22     	; 0x41a0 <_Z19nextEmptyLBTxBufferv+0x36>
    418a:	9f 5f       	subi	r25, 0xFF	; 255
    418c:	94 30       	cpi	r25, 0x04	; 4
    418e:	50 f4       	brcc	.+20     	; 0x41a4 <_Z19nextEmptyLBTxBufferv+0x3a>
    4190:	8f 5f       	subi	r24, 0xFF	; 255
    4192:	80 93 16 43 	sts	0x4316, r24	; 0x804316 <_ZZ19nextEmptyLBTxBuffervE11bufferIndex>
    4196:	84 30       	cpi	r24, 0x04	; 4
    4198:	48 f3       	brcs	.-46     	; 0x416c <_Z19nextEmptyLBTxBufferv+0x2>
    419a:	10 92 16 43 	sts	0x4316, r1	; 0x804316 <_ZZ19nextEmptyLBTxBuffervE11bufferIndex>
    419e:	e6 cf       	rjmp	.-52     	; 0x416c <_Z19nextEmptyLBTxBufferv+0x2>
    41a0:	81 e0       	ldi	r24, 0x01	; 1
    41a2:	01 c0       	rjmp	.+2      	; 0x41a6 <_Z19nextEmptyLBTxBufferv+0x3c>
    41a4:	80 e0       	ldi	r24, 0x00	; 0
    41a6:	88 23       	and	r24, r24
    41a8:	49 f0       	breq	.+18     	; 0x41bc <_Z19nextEmptyLBTxBufferv+0x52>
    41aa:	42 e3       	ldi	r20, 0x32	; 50
    41ac:	42 9f       	mul	r20, r18
    41ae:	c0 01       	movw	r24, r0
    41b0:	43 9f       	mul	r20, r19
    41b2:	90 0d       	add	r25, r0
    41b4:	11 24       	eor	r1, r1
    41b6:	84 56       	subi	r24, 0x64	; 100
    41b8:	9c 4b       	sbci	r25, 0xBC	; 188
    41ba:	08 95       	ret
    41bc:	80 e0       	ldi	r24, 0x00	; 0
    41be:	90 e0       	ldi	r25, 0x00	; 0
    41c0:	08 95       	ret

000041c2 <_Z19nextEmptyLBRxBufferv>:
    41c2:	90 e0       	ldi	r25, 0x00	; 0
    41c4:	80 91 15 43 	lds	r24, 0x4315	; 0x804315 <_ZZ19nextEmptyLBRxBuffervE11bufferIndex>
    41c8:	28 2f       	mov	r18, r24
    41ca:	30 e0       	ldi	r19, 0x00	; 0
    41cc:	42 e4       	ldi	r20, 0x42	; 66
    41ce:	42 9f       	mul	r20, r18
    41d0:	f0 01       	movw	r30, r0
    41d2:	43 9f       	mul	r20, r19
    41d4:	f0 0d       	add	r31, r0
    41d6:	11 24       	eor	r1, r1
    41d8:	e8 5e       	subi	r30, 0xE8	; 232
    41da:	fc 4b       	sbci	r31, 0xBC	; 188
    41dc:	41 81       	ldd	r20, Z+1	; 0x01
    41de:	52 81       	ldd	r21, Z+2	; 0x02
    41e0:	45 2b       	or	r20, r21
    41e2:	59 f0       	breq	.+22     	; 0x41fa <_Z19nextEmptyLBRxBufferv+0x38>
    41e4:	9f 5f       	subi	r25, 0xFF	; 255
    41e6:	92 30       	cpi	r25, 0x02	; 2
    41e8:	50 f4       	brcc	.+20     	; 0x41fe <_Z19nextEmptyLBRxBufferv+0x3c>
    41ea:	8f 5f       	subi	r24, 0xFF	; 255
    41ec:	80 93 15 43 	sts	0x4315, r24	; 0x804315 <_ZZ19nextEmptyLBRxBuffervE11bufferIndex>
    41f0:	82 30       	cpi	r24, 0x02	; 2
    41f2:	40 f3       	brcs	.-48     	; 0x41c4 <_Z19nextEmptyLBRxBufferv+0x2>
    41f4:	10 92 15 43 	sts	0x4315, r1	; 0x804315 <_ZZ19nextEmptyLBRxBuffervE11bufferIndex>
    41f8:	e5 cf       	rjmp	.-54     	; 0x41c4 <_Z19nextEmptyLBRxBufferv+0x2>
    41fa:	81 e0       	ldi	r24, 0x01	; 1
    41fc:	01 c0       	rjmp	.+2      	; 0x4200 <_Z19nextEmptyLBRxBufferv+0x3e>
    41fe:	80 e0       	ldi	r24, 0x00	; 0
    4200:	88 23       	and	r24, r24
    4202:	49 f0       	breq	.+18     	; 0x4216 <_Z19nextEmptyLBRxBufferv+0x54>
    4204:	42 e4       	ldi	r20, 0x42	; 66
    4206:	42 9f       	mul	r20, r18
    4208:	c0 01       	movw	r24, r0
    420a:	43 9f       	mul	r20, r19
    420c:	90 0d       	add	r25, r0
    420e:	11 24       	eor	r1, r1
    4210:	88 5e       	subi	r24, 0xE8	; 232
    4212:	9c 4b       	sbci	r25, 0xBC	; 188
    4214:	08 95       	ret
    4216:	80 e0       	ldi	r24, 0x00	; 0
    4218:	90 e0       	ldi	r25, 0x00	; 0
    421a:	08 95       	ret

0000421c <_Z18nextFullLBRxBufferv>:
    421c:	90 e0       	ldi	r25, 0x00	; 0
    421e:	80 91 14 43 	lds	r24, 0x4314	; 0x804314 <_ZZ18nextFullLBRxBuffervE11bufferIndex>
    4222:	28 2f       	mov	r18, r24
    4224:	30 e0       	ldi	r19, 0x00	; 0
    4226:	42 e4       	ldi	r20, 0x42	; 66
    4228:	42 9f       	mul	r20, r18
    422a:	f0 01       	movw	r30, r0
    422c:	43 9f       	mul	r20, r19
    422e:	f0 0d       	add	r31, r0
    4230:	11 24       	eor	r1, r1
    4232:	e8 5e       	subi	r30, 0xE8	; 232
    4234:	fc 4b       	sbci	r31, 0xBC	; 188
    4236:	41 81       	ldd	r20, Z+1	; 0x01
    4238:	52 81       	ldd	r21, Z+2	; 0x02
    423a:	45 2b       	or	r20, r21
    423c:	59 f4       	brne	.+22     	; 0x4254 <_Z18nextFullLBRxBufferv+0x38>
    423e:	9f 5f       	subi	r25, 0xFF	; 255
    4240:	92 30       	cpi	r25, 0x02	; 2
    4242:	50 f4       	brcc	.+20     	; 0x4258 <_Z18nextFullLBRxBufferv+0x3c>
    4244:	8f 5f       	subi	r24, 0xFF	; 255
    4246:	80 93 14 43 	sts	0x4314, r24	; 0x804314 <_ZZ18nextFullLBRxBuffervE11bufferIndex>
    424a:	82 30       	cpi	r24, 0x02	; 2
    424c:	40 f3       	brcs	.-48     	; 0x421e <_Z18nextFullLBRxBufferv+0x2>
    424e:	10 92 14 43 	sts	0x4314, r1	; 0x804314 <_ZZ18nextFullLBRxBuffervE11bufferIndex>
    4252:	e5 cf       	rjmp	.-54     	; 0x421e <_Z18nextFullLBRxBufferv+0x2>
    4254:	81 e0       	ldi	r24, 0x01	; 1
    4256:	01 c0       	rjmp	.+2      	; 0x425a <_Z18nextFullLBRxBufferv+0x3e>
    4258:	80 e0       	ldi	r24, 0x00	; 0
    425a:	88 23       	and	r24, r24
    425c:	49 f0       	breq	.+18     	; 0x4270 <_Z18nextFullLBRxBufferv+0x54>
    425e:	42 e4       	ldi	r20, 0x42	; 66
    4260:	42 9f       	mul	r20, r18
    4262:	c0 01       	movw	r24, r0
    4264:	43 9f       	mul	r20, r19
    4266:	90 0d       	add	r25, r0
    4268:	11 24       	eor	r1, r1
    426a:	88 5e       	subi	r24, 0xE8	; 232
    426c:	9c 4b       	sbci	r25, 0xBC	; 188
    426e:	08 95       	ret
    4270:	80 e0       	ldi	r24, 0x00	; 0
    4272:	90 e0       	ldi	r25, 0x00	; 0
    4274:	08 95       	ret

00004276 <_Z19linkbusTxInProgressv>:
    4276:	80 91 64 44 	lds	r24, 0x4464	; 0x804464 <_ZL17linkbus_tx_active>
    427a:	08 95       	ret

0000427c <_Z14linkbus_end_txv>:
    427c:	80 91 64 44 	lds	r24, 0x4464	; 0x804464 <_ZL17linkbus_tx_active>
    4280:	88 23       	and	r24, r24
    4282:	89 f0       	breq	.+34     	; 0x42a6 <_Z14linkbus_end_txv+0x2a>
    4284:	80 91 22 40 	lds	r24, 0x4022	; 0x804022 <g_linkbus_usart_number>
    4288:	81 11       	cpse	r24, r1
    428a:	06 c0       	rjmp	.+12     	; 0x4298 <_Z14linkbus_end_txv+0x1c>
    428c:	e0 e0       	ldi	r30, 0x00	; 0
    428e:	f8 e0       	ldi	r31, 0x08	; 8
    4290:	85 81       	ldd	r24, Z+5	; 0x05
    4292:	8f 7d       	andi	r24, 0xDF	; 223
    4294:	85 83       	std	Z+5, r24	; 0x05
    4296:	05 c0       	rjmp	.+10     	; 0x42a2 <_Z14linkbus_end_txv+0x26>
    4298:	e0 e2       	ldi	r30, 0x20	; 32
    429a:	f8 e0       	ldi	r31, 0x08	; 8
    429c:	85 81       	ldd	r24, Z+5	; 0x05
    429e:	8f 7d       	andi	r24, 0xDF	; 223
    42a0:	85 83       	std	Z+5, r24	; 0x05
    42a2:	10 92 64 44 	sts	0x4464, r1	; 0x804464 <_ZL17linkbus_tx_active>
    42a6:	08 95       	ret

000042a8 <_Z16linkbus_reset_rxv>:
    42a8:	cf 93       	push	r28
    42aa:	df 93       	push	r29
    42ac:	80 91 22 40 	lds	r24, 0x4022	; 0x804022 <g_linkbus_usart_number>
    42b0:	81 11       	cpse	r24, r1
    42b2:	14 c0       	rjmp	.+40     	; 0x42dc <_Z16linkbus_reset_rxv+0x34>
    42b4:	80 91 06 08 	lds	r24, 0x0806	; 0x800806 <__TEXT_REGION_LENGTH__+0x7e0806>
    42b8:	88 23       	and	r24, r24
    42ba:	1c f5       	brge	.+70     	; 0x4302 <_Z16linkbus_reset_rxv+0x5a>
    42bc:	e0 e0       	ldi	r30, 0x00	; 0
    42be:	f8 e0       	ldi	r31, 0x08	; 8
    42c0:	86 81       	ldd	r24, Z+6	; 0x06
    42c2:	8f 77       	andi	r24, 0x7F	; 127
    42c4:	86 83       	std	Z+6, r24	; 0x06
    42c6:	84 e8       	ldi	r24, 0x84	; 132
    42c8:	a8 e1       	ldi	r26, 0x18	; 24
    42ca:	b3 e4       	ldi	r27, 0x43	; 67
    42cc:	ed 01       	movw	r28, r26
    42ce:	19 92       	st	Y+, r1
    42d0:	8a 95       	dec	r24
    42d2:	e9 f7       	brne	.-6      	; 0x42ce <_Z16linkbus_reset_rxv+0x26>
    42d4:	86 81       	ldd	r24, Z+6	; 0x06
    42d6:	80 68       	ori	r24, 0x80	; 128
    42d8:	86 83       	std	Z+6, r24	; 0x06
    42da:	13 c0       	rjmp	.+38     	; 0x4302 <_Z16linkbus_reset_rxv+0x5a>
    42dc:	80 91 26 08 	lds	r24, 0x0826	; 0x800826 <__TEXT_REGION_LENGTH__+0x7e0826>
    42e0:	88 23       	and	r24, r24
    42e2:	7c f4       	brge	.+30     	; 0x4302 <_Z16linkbus_reset_rxv+0x5a>
    42e4:	e0 e2       	ldi	r30, 0x20	; 32
    42e6:	f8 e0       	ldi	r31, 0x08	; 8
    42e8:	86 81       	ldd	r24, Z+6	; 0x06
    42ea:	8f 77       	andi	r24, 0x7F	; 127
    42ec:	86 83       	std	Z+6, r24	; 0x06
    42ee:	84 e8       	ldi	r24, 0x84	; 132
    42f0:	a8 e1       	ldi	r26, 0x18	; 24
    42f2:	b3 e4       	ldi	r27, 0x43	; 67
    42f4:	ed 01       	movw	r28, r26
    42f6:	19 92       	st	Y+, r1
    42f8:	8a 95       	dec	r24
    42fa:	e9 f7       	brne	.-6      	; 0x42f6 <_Z16linkbus_reset_rxv+0x4e>
    42fc:	86 81       	ldd	r24, Z+6	; 0x06
    42fe:	80 68       	ori	r24, 0x80	; 128
    4300:	86 83       	std	Z+6, r24	; 0x06
    4302:	df 91       	pop	r29
    4304:	cf 91       	pop	r28
    4306:	08 95       	ret

00004308 <_Z12linkbus_initm14USART_Number_t>:
    4308:	cf 92       	push	r12
    430a:	df 92       	push	r13
    430c:	ef 92       	push	r14
    430e:	ff 92       	push	r15
    4310:	cf 93       	push	r28
    4312:	6b 01       	movw	r12, r22
    4314:	7c 01       	movw	r14, r24
    4316:	84 e8       	ldi	r24, 0x84	; 132
    4318:	e8 e1       	ldi	r30, 0x18	; 24
    431a:	f3 e4       	ldi	r31, 0x43	; 67
    431c:	df 01       	movw	r26, r30
    431e:	1d 92       	st	X+, r1
    4320:	8a 95       	dec	r24
    4322:	e9 f7       	brne	.-6      	; 0x431e <_Z12linkbus_initm14USART_Number_t+0x16>
    4324:	80 e0       	ldi	r24, 0x00	; 0
    4326:	90 e0       	ldi	r25, 0x00	; 0
    4328:	84 30       	cpi	r24, 0x04	; 4
    432a:	91 05       	cpc	r25, r1
    432c:	5c f4       	brge	.+22     	; 0x4344 <_Z12linkbus_initm14USART_Number_t+0x3c>
    432e:	22 e3       	ldi	r18, 0x32	; 50
    4330:	28 9f       	mul	r18, r24
    4332:	f0 01       	movw	r30, r0
    4334:	29 9f       	mul	r18, r25
    4336:	f0 0d       	add	r31, r0
    4338:	11 24       	eor	r1, r1
    433a:	e4 56       	subi	r30, 0x64	; 100
    433c:	fc 4b       	sbci	r31, 0xBC	; 188
    433e:	10 82       	st	Z, r1
    4340:	01 96       	adiw	r24, 0x01	; 1
    4342:	f2 cf       	rjmp	.-28     	; 0x4328 <_Z12linkbus_initm14USART_Number_t+0x20>
    4344:	46 30       	cpi	r20, 0x06	; 6
    4346:	21 f4       	brne	.+8      	; 0x4350 <_Z12linkbus_initm14USART_Number_t+0x48>
    4348:	80 91 22 40 	lds	r24, 0x4022	; 0x804022 <g_linkbus_usart_number>
    434c:	87 30       	cpi	r24, 0x07	; 7
    434e:	61 f4       	brne	.+24     	; 0x4368 <_Z12linkbus_initm14USART_Number_t+0x60>
    4350:	c4 2f       	mov	r28, r20
    4352:	c7 01       	movw	r24, r14
    4354:	b6 01       	movw	r22, r12
    4356:	41 11       	cpse	r20, r1
    4358:	03 c0       	rjmp	.+6      	; 0x4360 <_Z12linkbus_initm14USART_Number_t+0x58>
    435a:	0e 94 50 20 	call	0x40a0	; 0x40a0 <_ZL21USART0_initializationm>
    435e:	02 c0       	rjmp	.+4      	; 0x4364 <_Z12linkbus_initm14USART_Number_t+0x5c>
    4360:	0e 94 61 20 	call	0x40c2	; 0x40c2 <_ZL21USART1_initializationm>
    4364:	c0 93 22 40 	sts	0x4022, r28	; 0x804022 <g_linkbus_usart_number>
    4368:	10 92 23 40 	sts	0x4023, r1	; 0x804023 <_ZL14g_bus_disabled>
    436c:	cf 91       	pop	r28
    436e:	ff 90       	pop	r15
    4370:	ef 90       	pop	r14
    4372:	df 90       	pop	r13
    4374:	cf 90       	pop	r12
    4376:	08 95       	ret

00004378 <_Z15linkbus_disablev>:
    4378:	81 e0       	ldi	r24, 0x01	; 1
    437a:	80 93 23 40 	sts	0x4023, r24	; 0x804023 <_ZL14g_bus_disabled>
    437e:	80 91 22 40 	lds	r24, 0x4022	; 0x804022 <g_linkbus_usart_number>
    4382:	81 11       	cpse	r24, r1
    4384:	03 c0       	rjmp	.+6      	; 0x438c <_Z15linkbus_disablev+0x14>
    4386:	0e 94 a7 2f 	call	0x5f4e	; 0x5f4e <USART0_disable>
    438a:	02 c0       	rjmp	.+4      	; 0x4390 <_Z15linkbus_disablev+0x18>
    438c:	0e 94 db 2f 	call	0x5fb6	; 0x5fb6 <USART1_disable>
    4390:	0e 94 3e 21 	call	0x427c	; 0x427c <_Z14linkbus_end_txv>
    4394:	84 e8       	ldi	r24, 0x84	; 132
    4396:	e8 e1       	ldi	r30, 0x18	; 24
    4398:	f3 e4       	ldi	r31, 0x43	; 67
    439a:	df 01       	movw	r26, r30
    439c:	1d 92       	st	X+, r1
    439e:	8a 95       	dec	r24
    43a0:	e9 f7       	brne	.-6      	; 0x439c <_Z15linkbus_disablev+0x24>
    43a2:	80 e0       	ldi	r24, 0x00	; 0
    43a4:	84 30       	cpi	r24, 0x04	; 4
    43a6:	48 f4       	brcc	.+18     	; 0x43ba <_Z15linkbus_disablev+0x42>
    43a8:	b2 e3       	ldi	r27, 0x32	; 50
    43aa:	8b 9f       	mul	r24, r27
    43ac:	f0 01       	movw	r30, r0
    43ae:	11 24       	eor	r1, r1
    43b0:	e4 56       	subi	r30, 0x64	; 100
    43b2:	fc 4b       	sbci	r31, 0xBC	; 188
    43b4:	10 82       	st	Z, r1
    43b6:	8f 5f       	subi	r24, 0xFF	; 255
    43b8:	f5 cf       	rjmp	.-22     	; 0x43a4 <_Z15linkbus_disablev+0x2c>
    43ba:	08 95       	ret

000043bc <_Z12lb_send_textPc>:
    43bc:	0f 93       	push	r16
    43be:	1f 93       	push	r17
    43c0:	cf 93       	push	r28
    43c2:	df 93       	push	r29
    43c4:	20 91 23 40 	lds	r18, 0x4023	; 0x804023 <_ZL14g_bus_disabled>
    43c8:	21 11       	cpse	r18, r1
    43ca:	2f c0       	rjmp	.+94     	; 0x442a <_Z12lb_send_textPc+0x6e>
    43cc:	00 97       	sbiw	r24, 0x00	; 0
    43ce:	79 f1       	breq	.+94     	; 0x442e <_Z12lb_send_textPc+0x72>
    43d0:	8c 01       	movw	r16, r24
    43d2:	0e 94 b5 20 	call	0x416a	; 0x416a <_Z19nextEmptyLBTxBufferv>
    43d6:	c8 ec       	ldi	r28, 0xC8	; 200
    43d8:	d0 e0       	ldi	r29, 0x00	; 0
    43da:	00 97       	sbiw	r24, 0x00	; 0
    43dc:	b1 f4       	brne	.+44     	; 0x440a <_Z12lb_send_textPc+0x4e>
    43de:	20 97       	sbiw	r28, 0x00	; 0
    43e0:	a1 f0       	breq	.+40     	; 0x440a <_Z12lb_send_textPc+0x4e>
    43e2:	0e 94 3b 21 	call	0x4276	; 0x4276 <_Z19linkbusTxInProgressv>
    43e6:	88 23       	and	r24, r24
    43e8:	21 f0       	breq	.+8      	; 0x43f2 <_Z12lb_send_textPc+0x36>
    43ea:	20 97       	sbiw	r28, 0x00	; 0
    43ec:	21 f4       	brne	.+8      	; 0x43f6 <_Z12lb_send_textPc+0x3a>
    43ee:	90 e0       	ldi	r25, 0x00	; 0
    43f0:	03 c0       	rjmp	.+6      	; 0x43f8 <_Z12lb_send_textPc+0x3c>
    43f2:	90 e0       	ldi	r25, 0x00	; 0
    43f4:	01 c0       	rjmp	.+2      	; 0x43f8 <_Z12lb_send_textPc+0x3c>
    43f6:	91 e0       	ldi	r25, 0x01	; 1
    43f8:	99 23       	and	r25, r25
    43fa:	21 f0       	breq	.+8      	; 0x4404 <_Z12lb_send_textPc+0x48>
    43fc:	20 97       	sbiw	r28, 0x00	; 0
    43fe:	89 f3       	breq	.-30     	; 0x43e2 <_Z12lb_send_textPc+0x26>
    4400:	21 97       	sbiw	r28, 0x01	; 1
    4402:	ef cf       	rjmp	.-34     	; 0x43e2 <_Z12lb_send_textPc+0x26>
    4404:	0e 94 b5 20 	call	0x416a	; 0x416a <_Z19nextEmptyLBTxBufferv>
    4408:	e8 cf       	rjmp	.-48     	; 0x43da <_Z12lb_send_textPc+0x1e>
    440a:	00 97       	sbiw	r24, 0x00	; 0
    440c:	91 f0       	breq	.+36     	; 0x4432 <_Z12lb_send_textPc+0x76>
    440e:	1f 93       	push	r17
    4410:	0f 93       	push	r16
    4412:	9f 93       	push	r25
    4414:	8f 93       	push	r24
    4416:	0e 94 91 34 	call	0x6922	; 0x6922 <sprintf>
    441a:	0e 94 72 20 	call	0x40e4	; 0x40e4 <_ZL16linkbus_start_txv>
    441e:	0f 90       	pop	r0
    4420:	0f 90       	pop	r0
    4422:	0f 90       	pop	r0
    4424:	0f 90       	pop	r0
    4426:	80 e0       	ldi	r24, 0x00	; 0
    4428:	05 c0       	rjmp	.+10     	; 0x4434 <_Z12lb_send_textPc+0x78>
    442a:	81 e0       	ldi	r24, 0x01	; 1
    442c:	03 c0       	rjmp	.+6      	; 0x4434 <_Z12lb_send_textPc+0x78>
    442e:	81 e0       	ldi	r24, 0x01	; 1
    4430:	01 c0       	rjmp	.+2      	; 0x4434 <_Z12lb_send_textPc+0x78>
    4432:	81 e0       	ldi	r24, 0x01	; 1
    4434:	df 91       	pop	r29
    4436:	cf 91       	pop	r28
    4438:	1f 91       	pop	r17
    443a:	0f 91       	pop	r16
    443c:	08 95       	ret

0000443e <_Z11lb_send_msg13LBMessageTypePKcPc>:
    443e:	83 30       	cpi	r24, 0x03	; 3
    4440:	29 f0       	breq	.+10     	; 0x444c <_Z11lb_send_msg13LBMessageTypePKcPc+0xe>
    4442:	82 30       	cpi	r24, 0x02	; 2
    4444:	31 f0       	breq	.+12     	; 0x4452 <_Z11lb_send_msg13LBMessageTypePKcPc+0x14>
    4446:	9b e3       	ldi	r25, 0x3B	; 59
    4448:	84 e2       	ldi	r24, 0x24	; 36
    444a:	05 c0       	rjmp	.+10     	; 0x4456 <_Z11lb_send_msg13LBMessageTypePKcPc+0x18>
    444c:	9b e3       	ldi	r25, 0x3B	; 59
    444e:	81 e2       	ldi	r24, 0x21	; 33
    4450:	02 c0       	rjmp	.+4      	; 0x4456 <_Z11lb_send_msg13LBMessageTypePKcPc+0x18>
    4452:	9f e3       	ldi	r25, 0x3F	; 63
    4454:	84 e2       	ldi	r24, 0x24	; 36
    4456:	1f 92       	push	r1
    4458:	9f 93       	push	r25
    445a:	5f 93       	push	r21
    445c:	4f 93       	push	r20
    445e:	7f 93       	push	r23
    4460:	6f 93       	push	r22
    4462:	1f 92       	push	r1
    4464:	8f 93       	push	r24
    4466:	81 e0       	ldi	r24, 0x01	; 1
    4468:	92 e4       	ldi	r25, 0x42	; 66
    446a:	9f 93       	push	r25
    446c:	8f 93       	push	r24
    446e:	85 e6       	ldi	r24, 0x65	; 101
    4470:	94 e4       	ldi	r25, 0x44	; 68
    4472:	9f 93       	push	r25
    4474:	8f 93       	push	r24
    4476:	0e 94 91 34 	call	0x6922	; 0x6922 <sprintf>
    447a:	85 e6       	ldi	r24, 0x65	; 101
    447c:	94 e4       	ldi	r25, 0x44	; 68
    447e:	0e 94 de 21 	call	0x43bc	; 0x43bc <_Z12lb_send_textPc>
    4482:	8d b7       	in	r24, 0x3d	; 61
    4484:	9e b7       	in	r25, 0x3e	; 62
    4486:	0c 96       	adiw	r24, 0x0c	; 12
    4488:	8d bf       	out	0x3d, r24	; 61
    448a:	9e bf       	out	0x3e, r25	; 62
    448c:	08 95       	ret

0000448e <_Z16lb_broadcast_numjPKc>:
}


void lb_broadcast_num(uint16_t data, const char* str)
{
    448e:	0f 93       	push	r16
    4490:	1f 93       	push	r17
    4492:	cf 93       	push	r28
    4494:	df 93       	push	r29
    4496:	cd b7       	in	r28, 0x3d	; 61
    4498:	de b7       	in	r29, 0x3e	; 62
    449a:	26 97       	sbiw	r28, 0x06	; 6
    449c:	cd bf       	out	0x3d, r28	; 61
    449e:	de bf       	out	0x3e, r29	; 62
    44a0:	8b 01       	movw	r16, r22
	char t[6] = "\0";
    44a2:	20 91 e6 41 	lds	r18, 0x41E6	; 0x8041e6 <g_tx_power_is_zero+0x1b0>
    44a6:	30 91 e7 41 	lds	r19, 0x41E7	; 0x8041e7 <g_tx_power_is_zero+0x1b1>
    44aa:	29 83       	std	Y+1, r18	; 0x01
    44ac:	3a 83       	std	Y+2, r19	; 0x02
    44ae:	fe 01       	movw	r30, r28
    44b0:	33 96       	adiw	r30, 0x03	; 3
    44b2:	24 e0       	ldi	r18, 0x04	; 4
    44b4:	df 01       	movw	r26, r30
    44b6:	1d 92       	st	X+, r1
    44b8:	2a 95       	dec	r18
    44ba:	e9 f7       	brne	.-6      	; 0x44b6 <_Z16lb_broadcast_numjPKc+0x28>

	sprintf(t, "%u", data);
    44bc:	9f 93       	push	r25
    44be:	8f 93       	push	r24
    44c0:	81 e1       	ldi	r24, 0x11	; 17
    44c2:	92 e4       	ldi	r25, 0x42	; 66
    44c4:	9f 93       	push	r25
    44c6:	8f 93       	push	r24
    44c8:	ce 01       	movw	r24, r28
    44ca:	01 96       	adiw	r24, 0x01	; 1
    44cc:	9f 93       	push	r25
    44ce:	8f 93       	push	r24
    44d0:	0e 94 91 34 	call	0x6922	; 0x6922 <sprintf>
	g_tempMsgBuff[0] = '\0';
    44d4:	10 92 65 44 	sts	0x4465, r1	; 0x804465 <_ZL13g_tempMsgBuff>

	if(str)
    44d8:	0f 90       	pop	r0
    44da:	0f 90       	pop	r0
    44dc:	0f 90       	pop	r0
    44de:	0f 90       	pop	r0
    44e0:	0f 90       	pop	r0
    44e2:	0f 90       	pop	r0
    44e4:	01 15       	cp	r16, r1
    44e6:	11 05       	cpc	r17, r1
    44e8:	91 f0       	breq	.+36     	; 0x450e <_Z16lb_broadcast_numjPKc+0x80>
	{
		sprintf(g_tempMsgBuff, "%s,%s;", str, t);
    44ea:	ce 01       	movw	r24, r28
    44ec:	01 96       	adiw	r24, 0x01	; 1
    44ee:	9f 93       	push	r25
    44f0:	8f 93       	push	r24
    44f2:	1f 93       	push	r17
    44f4:	0f 93       	push	r16
    44f6:	84 e1       	ldi	r24, 0x14	; 20
    44f8:	92 e4       	ldi	r25, 0x42	; 66
    44fa:	9f 93       	push	r25
    44fc:	8f 93       	push	r24
    44fe:	85 e6       	ldi	r24, 0x65	; 101
    4500:	94 e4       	ldi	r25, 0x44	; 68
    4502:	9f 93       	push	r25
    4504:	8f 93       	push	r24
    4506:	0e 94 91 34 	call	0x6922	; 0x6922 <sprintf>
    450a:	cd bf       	out	0x3d, r28	; 61
    450c:	de bf       	out	0x3e, r29	; 62
	}

	if(g_tempMsgBuff[0]) lb_send_text(g_tempMsgBuff);
    450e:	80 91 65 44 	lds	r24, 0x4465	; 0x804465 <_ZL13g_tempMsgBuff>
    4512:	88 23       	and	r24, r24
    4514:	21 f0       	breq	.+8      	; 0x451e <_Z16lb_broadcast_numjPKc+0x90>
    4516:	85 e6       	ldi	r24, 0x65	; 101
    4518:	94 e4       	ldi	r25, 0x44	; 68
    451a:	0e 94 de 21 	call	0x43bc	; 0x43bc <_Z12lb_send_textPc>
}
    451e:	26 96       	adiw	r28, 0x06	; 6
    4520:	cd bf       	out	0x3d, r28	; 61
    4522:	de bf       	out	0x3e, r29	; 62
    4524:	df 91       	pop	r29
    4526:	cf 91       	pop	r28
    4528:	1f 91       	pop	r17
    452a:	0f 91       	pop	r16
    452c:	08 95       	ret

0000452e <_Z12getMorseCharc>:
 */
MorseCharacter getMorseChar(char c)
{
	MorseCharacter morse;

	switch( c )
    452e:	90 e0       	ldi	r25, 0x00	; 0
    4530:	fc 01       	movw	r30, r24
    4532:	b0 97       	sbiw	r30, 0x20	; 32
    4534:	ed 35       	cpi	r30, 0x5D	; 93
    4536:	f1 05       	cpc	r31, r1
    4538:	08 f0       	brcs	.+2      	; 0x453c <_Z12getMorseCharc+0xe>
    453a:	e8 c0       	rjmp	.+464    	; 0x470c <_Z12getMorseCharc+0x1de>
    453c:	e1 56       	subi	r30, 0x61	; 97
    453e:	ff 4f       	sbci	r31, 0xFF	; 255
    4540:	0c 94 aa 32 	jmp	0x6554	; 0x6554 <__tablejump2__>
	{
		case 'A':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
    4544:	62 e0       	ldi	r22, 0x02	; 2
			morse.lengthInSymbols = 2;
    4546:	72 e0       	ldi	r23, 0x02	; 2
			morse.lengthInElements = 5;
    4548:	85 e0       	ldi	r24, 0x05	; 5
		}
		break;
    454a:	08 95       	ret

		case 'B':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    454c:	61 e0       	ldi	r22, 0x01	; 1
			morse.lengthInSymbols = 4;
    454e:	74 e0       	ldi	r23, 0x04	; 4
			morse.lengthInElements = 9;
    4550:	89 e0       	ldi	r24, 0x09	; 9
		}
		break;
    4552:	08 95       	ret

		case 'C':
		{
			morse.pattern = 0x05;   /* 0000 0101; */
    4554:	65 e0       	ldi	r22, 0x05	; 5
			morse.lengthInSymbols = 4;
    4556:	74 e0       	ldi	r23, 0x04	; 4
			morse.lengthInElements = 11;
    4558:	8b e0       	ldi	r24, 0x0B	; 11
		}
		break;
    455a:	08 95       	ret

		case 'D':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    455c:	61 e0       	ldi	r22, 0x01	; 1
			morse.lengthInSymbols = 3;
    455e:	73 e0       	ldi	r23, 0x03	; 3
			morse.lengthInElements = 7;
    4560:	87 e0       	ldi	r24, 0x07	; 7
		}
		break;
    4562:	08 95       	ret

		case 'E':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    4564:	60 e0       	ldi	r22, 0x00	; 0
			morse.lengthInSymbols = 1;
    4566:	71 e0       	ldi	r23, 0x01	; 1
			morse.lengthInElements = 1;
    4568:	81 e0       	ldi	r24, 0x01	; 1
		}
		break;
    456a:	08 95       	ret

		case 'F':
		{
			morse.pattern = 0x04;   /* 0000 0100; */
    456c:	64 e0       	ldi	r22, 0x04	; 4
			morse.lengthInSymbols = 4;
    456e:	74 e0       	ldi	r23, 0x04	; 4
			morse.lengthInElements = 9;
    4570:	89 e0       	ldi	r24, 0x09	; 9
		}
		break;
    4572:	08 95       	ret

		case 'G':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
    4574:	63 e0       	ldi	r22, 0x03	; 3
			morse.lengthInSymbols = 3;
    4576:	73 e0       	ldi	r23, 0x03	; 3
			morse.lengthInElements = 9;
    4578:	89 e0       	ldi	r24, 0x09	; 9
		}
		break;
    457a:	08 95       	ret

		case 'H':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    457c:	60 e0       	ldi	r22, 0x00	; 0
			morse.lengthInSymbols = 4;
    457e:	74 e0       	ldi	r23, 0x04	; 4
			morse.lengthInElements = 7;
    4580:	87 e0       	ldi	r24, 0x07	; 7
		}
		break;
    4582:	08 95       	ret

		case 'I':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    4584:	60 e0       	ldi	r22, 0x00	; 0
			morse.lengthInSymbols = 2;
    4586:	72 e0       	ldi	r23, 0x02	; 2
			morse.lengthInElements = 3;
    4588:	83 e0       	ldi	r24, 0x03	; 3
		}
		break;
    458a:	08 95       	ret

		case 'J':
		{
			morse.pattern = 0x0e;   /* 0000 1110; */
    458c:	6e e0       	ldi	r22, 0x0E	; 14
			morse.lengthInSymbols = 4;
    458e:	74 e0       	ldi	r23, 0x04	; 4
			morse.lengthInElements = 13;
    4590:	8d e0       	ldi	r24, 0x0D	; 13
		}
		break;
    4592:	08 95       	ret

		case 'K':
		{
			morse.pattern = 0x05;   /* 0000 0101; */
    4594:	65 e0       	ldi	r22, 0x05	; 5
			morse.lengthInSymbols = 3;
    4596:	73 e0       	ldi	r23, 0x03	; 3
			morse.lengthInElements = 9;
    4598:	89 e0       	ldi	r24, 0x09	; 9
		}
		break;
    459a:	08 95       	ret

		case 'L':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
    459c:	62 e0       	ldi	r22, 0x02	; 2
			morse.lengthInSymbols = 4;
    459e:	74 e0       	ldi	r23, 0x04	; 4
			morse.lengthInElements = 9;
    45a0:	89 e0       	ldi	r24, 0x09	; 9
		}
		break;
    45a2:	08 95       	ret

		case 'M':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
    45a4:	63 e0       	ldi	r22, 0x03	; 3
			morse.lengthInSymbols = 2;
    45a6:	72 e0       	ldi	r23, 0x02	; 2
			morse.lengthInElements = 7;
    45a8:	87 e0       	ldi	r24, 0x07	; 7
		}
		break;
    45aa:	08 95       	ret

		case 'N':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    45ac:	61 e0       	ldi	r22, 0x01	; 1
			morse.lengthInSymbols = 2;
    45ae:	72 e0       	ldi	r23, 0x02	; 2
			morse.lengthInElements = 5;
    45b0:	85 e0       	ldi	r24, 0x05	; 5
		}
		break;
    45b2:	08 95       	ret

		case 'O':
		{
			morse.pattern = 0x07;   /* 0000 0111; */
    45b4:	67 e0       	ldi	r22, 0x07	; 7
			morse.lengthInSymbols = 3;
    45b6:	73 e0       	ldi	r23, 0x03	; 3
			morse.lengthInElements = 11;
    45b8:	8b e0       	ldi	r24, 0x0B	; 11
		}
		break;
    45ba:	08 95       	ret

		case 'P':
		{
			morse.pattern = 0x06;   /* 0000 0110; */
    45bc:	66 e0       	ldi	r22, 0x06	; 6
			morse.lengthInSymbols = 4;
    45be:	74 e0       	ldi	r23, 0x04	; 4
			morse.lengthInElements = 11;
    45c0:	8b e0       	ldi	r24, 0x0B	; 11
		}
		break;
    45c2:	08 95       	ret

		case 'Q':
		{
			morse.pattern = 0x0b;   /* 0000 1011; */
    45c4:	6b e0       	ldi	r22, 0x0B	; 11
			morse.lengthInSymbols = 4;
    45c6:	74 e0       	ldi	r23, 0x04	; 4
			morse.lengthInElements = 13;
    45c8:	8d e0       	ldi	r24, 0x0D	; 13
		}
		break;
    45ca:	08 95       	ret

		case 'R':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
    45cc:	62 e0       	ldi	r22, 0x02	; 2
			morse.lengthInSymbols = 3;
    45ce:	73 e0       	ldi	r23, 0x03	; 3
			morse.lengthInElements = 7;
    45d0:	87 e0       	ldi	r24, 0x07	; 7
		}
		break;
    45d2:	08 95       	ret

		case 'S':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    45d4:	60 e0       	ldi	r22, 0x00	; 0
			morse.lengthInSymbols = 3;
    45d6:	73 e0       	ldi	r23, 0x03	; 3
			morse.lengthInElements = 5;
    45d8:	85 e0       	ldi	r24, 0x05	; 5
		}
		break;
    45da:	08 95       	ret

		case 'T':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    45dc:	61 e0       	ldi	r22, 0x01	; 1
			morse.lengthInSymbols = 1;
    45de:	71 e0       	ldi	r23, 0x01	; 1
			morse.lengthInElements = 3;
    45e0:	83 e0       	ldi	r24, 0x03	; 3
		}
		break;
    45e2:	08 95       	ret

		case 'U':
		{
			morse.pattern = 0x04;   /* 0000 0100; */
    45e4:	64 e0       	ldi	r22, 0x04	; 4
			morse.lengthInSymbols = 3;
    45e6:	73 e0       	ldi	r23, 0x03	; 3
			morse.lengthInElements = 7;
    45e8:	87 e0       	ldi	r24, 0x07	; 7
		}
		break;
    45ea:	08 95       	ret

		case 'V':
		{
			morse.pattern = 0x08;   /* 0000 1000; */
    45ec:	68 e0       	ldi	r22, 0x08	; 8
			morse.lengthInSymbols = 4;
    45ee:	74 e0       	ldi	r23, 0x04	; 4
			morse.lengthInElements = 9;
    45f0:	89 e0       	ldi	r24, 0x09	; 9
		}
		break;
    45f2:	08 95       	ret

		case 'W':
		{
			morse.pattern = 0x06;   /* 0000 0110; */
    45f4:	66 e0       	ldi	r22, 0x06	; 6
			morse.lengthInSymbols = 3;
    45f6:	73 e0       	ldi	r23, 0x03	; 3
			morse.lengthInElements = 9;
    45f8:	89 e0       	ldi	r24, 0x09	; 9
		}
		break;
    45fa:	08 95       	ret

		case 'X':
		{
			morse.pattern = 0x09;   /* 0000 1001; */
    45fc:	69 e0       	ldi	r22, 0x09	; 9
			morse.lengthInSymbols = 4;
    45fe:	74 e0       	ldi	r23, 0x04	; 4
			morse.lengthInElements = 11;
    4600:	8b e0       	ldi	r24, 0x0B	; 11
		}
		break;
    4602:	08 95       	ret

		case 'Y':
		{
			morse.pattern = 0x0d;   /* 0000 1101; */
    4604:	6d e0       	ldi	r22, 0x0D	; 13
			morse.lengthInSymbols = 4;
    4606:	74 e0       	ldi	r23, 0x04	; 4
			morse.lengthInElements = 13;
    4608:	8d e0       	ldi	r24, 0x0D	; 13
		}
		break;
    460a:	08 95       	ret

		case 'Z':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
    460c:	63 e0       	ldi	r22, 0x03	; 3
			morse.lengthInSymbols = 4;
    460e:	74 e0       	ldi	r23, 0x04	; 4
			morse.lengthInElements = 11;
    4610:	8b e0       	ldi	r24, 0x0B	; 11
		}
		break;
    4612:	08 95       	ret

		case '0':
		{
			morse.pattern = 0x1f;   /* 0001 1111; */
    4614:	6f e1       	ldi	r22, 0x1F	; 31
			morse.lengthInSymbols = 5;
    4616:	75 e0       	ldi	r23, 0x05	; 5
			morse.lengthInElements = 19;
    4618:	83 e1       	ldi	r24, 0x13	; 19
		}
		break;
    461a:	08 95       	ret

		case '1':
		{
			morse.pattern = 0x1e;   /* 0001 1110; */
    461c:	6e e1       	ldi	r22, 0x1E	; 30
			morse.lengthInSymbols = 5;
    461e:	75 e0       	ldi	r23, 0x05	; 5
			morse.lengthInElements = 17;
    4620:	81 e1       	ldi	r24, 0x11	; 17
		}
		break;
    4622:	08 95       	ret

		case '2':
		{
			morse.pattern = 0x1c;   /* 0001 1100; */
    4624:	6c e1       	ldi	r22, 0x1C	; 28
			morse.lengthInSymbols = 5;
    4626:	75 e0       	ldi	r23, 0x05	; 5
			morse.lengthInElements = 15;
    4628:	8f e0       	ldi	r24, 0x0F	; 15
		}
		break;
    462a:	08 95       	ret

		case '3':
		{
			morse.pattern = 0x18;   /* 0001 1000; */
    462c:	68 e1       	ldi	r22, 0x18	; 24
			morse.lengthInSymbols = 5;
    462e:	75 e0       	ldi	r23, 0x05	; 5
			morse.lengthInElements = 13;
    4630:	8d e0       	ldi	r24, 0x0D	; 13
		}
		break;
    4632:	08 95       	ret

		case '4':
		{
			morse.pattern = 0x10;   /* 0001 0000; */
    4634:	60 e1       	ldi	r22, 0x10	; 16
			morse.lengthInSymbols = 5;
    4636:	75 e0       	ldi	r23, 0x05	; 5
			morse.lengthInElements = 11;
    4638:	8b e0       	ldi	r24, 0x0B	; 11
		}
		break;
    463a:	08 95       	ret

		case '5':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    463c:	60 e0       	ldi	r22, 0x00	; 0
			morse.lengthInSymbols = 5;
    463e:	75 e0       	ldi	r23, 0x05	; 5
			morse.lengthInElements = 9;
    4640:	89 e0       	ldi	r24, 0x09	; 9
		}
		break;
    4642:	08 95       	ret

		case '6':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    4644:	61 e0       	ldi	r22, 0x01	; 1
			morse.lengthInSymbols = 5;
    4646:	75 e0       	ldi	r23, 0x05	; 5
			morse.lengthInElements = 11;
    4648:	8b e0       	ldi	r24, 0x0B	; 11
		}
		break;
    464a:	08 95       	ret

		case '7':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
    464c:	63 e0       	ldi	r22, 0x03	; 3
			morse.lengthInSymbols = 5;
    464e:	75 e0       	ldi	r23, 0x05	; 5
			morse.lengthInElements = 13;
    4650:	8d e0       	ldi	r24, 0x0D	; 13
		}
		break;
    4652:	08 95       	ret

		case '8':
		{
			morse.pattern = 0x07;   /* 0000 0111; */
    4654:	67 e0       	ldi	r22, 0x07	; 7
			morse.lengthInSymbols = 5;
    4656:	75 e0       	ldi	r23, 0x05	; 5
			morse.lengthInElements = 15;
    4658:	8f e0       	ldi	r24, 0x0F	; 15
		}
		break;
    465a:	08 95       	ret

		case '9':
		{
			morse.pattern = 0x0f;   /* 0000 1111; */
    465c:	6f e0       	ldi	r22, 0x0F	; 15
			morse.lengthInSymbols = 5;
    465e:	75 e0       	ldi	r23, 0x05	; 5
			morse.lengthInElements = 17;
    4660:	81 e1       	ldi	r24, 0x11	; 17
		}
		break;
    4662:	08 95       	ret

		case '.':
		{
			morse.pattern = 0x2a;   /* 0010 1010; */
    4664:	6a e2       	ldi	r22, 0x2A	; 42
			morse.lengthInSymbols = 6;
    4666:	76 e0       	ldi	r23, 0x06	; 6
			morse.lengthInElements = 17;
    4668:	81 e1       	ldi	r24, 0x11	; 17
		}
		break;
    466a:	08 95       	ret

		case ',':
		{
			morse.pattern = 0x33;   /* 0011 0011; */
    466c:	63 e3       	ldi	r22, 0x33	; 51
			morse.lengthInSymbols = 6;
    466e:	76 e0       	ldi	r23, 0x06	; 6
			morse.lengthInElements = 19;
    4670:	83 e1       	ldi	r24, 0x13	; 19
		}
		break;
    4672:	08 95       	ret

		case '?':
		{
			morse.pattern = 0x0c;   /* 0000 1100; */
    4674:	6c e0       	ldi	r22, 0x0C	; 12
			morse.lengthInSymbols = 6;
    4676:	76 e0       	ldi	r23, 0x06	; 6
			morse.lengthInElements = 15;
    4678:	8f e0       	ldi	r24, 0x0F	; 15
		}
		break;
    467a:	08 95       	ret

		case '\'':
		{
			morse.pattern = 0x1e;   /* 0001 1110; */
    467c:	6e e1       	ldi	r22, 0x1E	; 30
			morse.lengthInSymbols = 6;
    467e:	76 e0       	ldi	r23, 0x06	; 6
			morse.lengthInElements = 19;
    4680:	83 e1       	ldi	r24, 0x13	; 19
		}
		break;
    4682:	08 95       	ret

		case '!':
		{
			morse.pattern = 0x35;   /* 0011 0101; */
    4684:	65 e3       	ldi	r22, 0x35	; 53
			morse.lengthInSymbols = 6;
    4686:	76 e0       	ldi	r23, 0x06	; 6
			morse.lengthInElements = 19;
    4688:	83 e1       	ldi	r24, 0x13	; 19
		}
		break;
    468a:	08 95       	ret

		case '/':
		{
			morse.pattern = 0x09;   /* 0000 1001; */
    468c:	69 e0       	ldi	r22, 0x09	; 9
			morse.lengthInSymbols = 5;
    468e:	75 e0       	ldi	r23, 0x05	; 5
			morse.lengthInElements = 13;
    4690:	8d e0       	ldi	r24, 0x0D	; 13
		}
		break;
    4692:	08 95       	ret

		case '(':
		{
			morse.pattern = 0x0d;   /* 0000 1101; */
    4694:	6d e0       	ldi	r22, 0x0D	; 13
			morse.lengthInSymbols = 5;
    4696:	75 e0       	ldi	r23, 0x05	; 5
			morse.lengthInElements = 15;
    4698:	8f e0       	ldi	r24, 0x0F	; 15
		}
		break;
    469a:	08 95       	ret

		case ')':
		{
			morse.pattern = 0x2d;   /* 0010 1101; */
    469c:	6d e2       	ldi	r22, 0x2D	; 45
			morse.lengthInSymbols = 6;
    469e:	76 e0       	ldi	r23, 0x06	; 6
			morse.lengthInElements = 19;
    46a0:	83 e1       	ldi	r24, 0x13	; 19
		}
		break;
    46a2:	08 95       	ret

		case '&':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
    46a4:	62 e0       	ldi	r22, 0x02	; 2
			morse.lengthInSymbols = 5;
    46a6:	75 e0       	ldi	r23, 0x05	; 5
			morse.lengthInElements = 11;
    46a8:	8b e0       	ldi	r24, 0x0B	; 11
		}
		break;
    46aa:	08 95       	ret

		case ':':
		{
			morse.pattern = 0x07;   /* 0000 0111; */
    46ac:	67 e0       	ldi	r22, 0x07	; 7
			morse.lengthInSymbols = 6;
    46ae:	76 e0       	ldi	r23, 0x06	; 6
			morse.lengthInElements = 17;
    46b0:	81 e1       	ldi	r24, 0x11	; 17
		}
		break;
    46b2:	08 95       	ret

		case ';':
		{
			morse.pattern = 0x15;   /* 0001 0101; */
    46b4:	65 e1       	ldi	r22, 0x15	; 21
			morse.lengthInSymbols = 6;
    46b6:	76 e0       	ldi	r23, 0x06	; 6
			morse.lengthInElements = 12;
    46b8:	8c e0       	ldi	r24, 0x0C	; 12
		}
		break;
    46ba:	08 95       	ret

		case '=':
		{
			morse.pattern = 0x11;   /* 0001 0001; */
    46bc:	61 e1       	ldi	r22, 0x11	; 17
			morse.lengthInSymbols = 5;
    46be:	75 e0       	ldi	r23, 0x05	; 5
			morse.lengthInElements = 13;
    46c0:	8d e0       	ldi	r24, 0x0D	; 13
		}
		break;
    46c2:	08 95       	ret

		case '+':
		{
			morse.pattern = 0x0a;   /* 0000 1010; */
    46c4:	6a e0       	ldi	r22, 0x0A	; 10
			morse.lengthInSymbols = 5;
    46c6:	75 e0       	ldi	r23, 0x05	; 5
			morse.lengthInElements = 13;
    46c8:	8d e0       	ldi	r24, 0x0D	; 13
		}
		break;
    46ca:	08 95       	ret

		case '-':
		{
			morse.pattern = 0x21;   /* 0010 0001; */
    46cc:	61 e2       	ldi	r22, 0x21	; 33
			morse.lengthInSymbols = 6;
    46ce:	76 e0       	ldi	r23, 0x06	; 6
			morse.lengthInElements = 15;
    46d0:	8f e0       	ldi	r24, 0x0F	; 15
		}
		break;
    46d2:	08 95       	ret

		case '_':
		{
			morse.pattern = 0x2c;   /* 0010 1100; */
    46d4:	6c e2       	ldi	r22, 0x2C	; 44
			morse.lengthInSymbols = 6;
    46d6:	76 e0       	ldi	r23, 0x06	; 6
			morse.lengthInElements = 17;
    46d8:	81 e1       	ldi	r24, 0x11	; 17
		}
		break;
    46da:	08 95       	ret

		case '"':
		{
			morse.pattern = 0x12;   /* 0001 0010; */
    46dc:	62 e1       	ldi	r22, 0x12	; 18
			morse.lengthInSymbols = 6;
    46de:	76 e0       	ldi	r23, 0x06	; 6
			morse.lengthInElements = 15;
    46e0:	8f e0       	ldi	r24, 0x0F	; 15
		}
		break;
    46e2:	08 95       	ret

		case '$':
		{
			morse.pattern = 0x48;   /* 0100 1000; */
    46e4:	68 e4       	ldi	r22, 0x48	; 72
			morse.lengthInSymbols = 7;
    46e6:	77 e0       	ldi	r23, 0x07	; 7
			morse.lengthInElements = 17;
    46e8:	81 e1       	ldi	r24, 0x11	; 17
		}
		break;
    46ea:	08 95       	ret

		case '@':
		{
			morse.pattern = 0x16;   /* 0001 0110; */
    46ec:	66 e1       	ldi	r22, 0x16	; 22
			morse.lengthInSymbols = 6;
    46ee:	76 e0       	ldi	r23, 0x06	; 6
			morse.lengthInElements = 17;
    46f0:	81 e1       	ldi	r24, 0x11	; 17
		}
		break;
    46f2:	08 95       	ret

		case '|':                       /* inter-word space */
		{ morse.pattern = 0xff;         /* 1000 0000; */
    46f4:	6f ef       	ldi	r22, 0xFF	; 255
		  morse.lengthInSymbols = 7;
    46f6:	77 e0       	ldi	r23, 0x07	; 7
		  morse.lengthInElements = 4;   /* adjusted by -3 to account for inter-character space */
    46f8:	84 e0       	ldi	r24, 0x04	; 4
		}
		break;
    46fa:	08 95       	ret

		case ' ':                       /* inter-word space */
		{ morse.pattern = 0xfe;         /* 1000 0000; */
    46fc:	6e ef       	ldi	r22, 0xFE	; 254
		  morse.lengthInSymbols = 7;
    46fe:	77 e0       	ldi	r23, 0x07	; 7
		  morse.lengthInElements = 7;   /* 4 + 3 (character space) = 7 */
    4700:	87 e0       	ldi	r24, 0x07	; 7
		}
		break;
    4702:	08 95       	ret

		case '<':                       /* long keydown */
		{
			morse.pattern = 0x1f;       /* 0001 1111; */
    4704:	6f e1       	ldi	r22, 0x1F	; 31
			morse.lengthInSymbols = 5;
    4706:	75 e0       	ldi	r23, 0x05	; 5
			morse.lengthInElements = 19;
    4708:	83 e1       	ldi	r24, 0x13	; 19
		}
		break;
    470a:	08 95       	ret

		default:
		{
			morse.pattern = 0x0000; /* 0000 0000; */
    470c:	60 e0       	ldi	r22, 0x00	; 0
			morse.lengthInSymbols = 0;
    470e:	70 e0       	ldi	r23, 0x00	; 0
			morse.lengthInElements = 0;
    4710:	80 e0       	ldi	r24, 0x00	; 0
		}
		break;
	}

	return( morse);
}
    4712:	08 95       	ret

00004714 <_Z9makeMorsePcPhS0_>:
 *  Call this function with a NULL argument at intervals of 1 element of time to generate Morse code.
 *  Once loaded with a string each call to this function returns a BOOL indicating whether a CW carrier should be sent
 *  Pass in a pointer to a BOOL in the second and third arguments:
 */
BOOL makeMorse(char* s, BOOL* repeating, BOOL* finished)
{
    4714:	cf 93       	push	r28
    4716:	df 93       	push	r29
    4718:	ea 01       	movw	r28, r20
	static uint8_t addedSpace;      /* adds additional time to make an inter-character space */
	static BOOL completedString = FALSE;
	static BOOL carrierOn = FALSE;
	static BOOL holdKeyDown = FALSE;

	if(s)   /* load a new NULL-terminated string to send */
    471a:	00 97       	sbiw	r24, 0x00	; 0
    471c:	b1 f1       	breq	.+108    	; 0x478a <_Z9makeMorsePcPhS0_+0x76>
	{
		holdKeyDown = FALSE;
    471e:	10 92 a2 44 	sts	0x44A2, r1	; 0x8044a2 <_ZZ9makeMorsePcPhS0_E11holdKeyDown>

		if(repeating)
    4722:	61 15       	cp	r22, r1
    4724:	71 05       	cpc	r23, r1
    4726:	21 f0       	breq	.+8      	; 0x4730 <_Z9makeMorsePcPhS0_+0x1c>
		{
			repeat = *repeating;
    4728:	db 01       	movw	r26, r22
    472a:	2c 91       	ld	r18, X
    472c:	20 93 25 40 	sts	0x4025, r18	; 0x804025 <_ZZ9makeMorsePcPhS0_E6repeat>
		}

		if(*s)
    4730:	fc 01       	movw	r30, r24
    4732:	20 81       	ld	r18, Z
    4734:	22 23       	and	r18, r18
    4736:	d9 f0       	breq	.+54     	; 0x476e <_Z9makeMorsePcPhS0_+0x5a>
		{
			str = s;
    4738:	80 93 a0 44 	sts	0x44A0, r24	; 0x8044a0 <_ZZ9makeMorsePcPhS0_E3str>
    473c:	90 93 a1 44 	sts	0x44A1, r25	; 0x8044a1 <_ZZ9makeMorsePcPhS0_E3str+0x1>
			c = ' ';
    4740:	80 e2       	ldi	r24, 0x20	; 32
    4742:	80 93 24 40 	sts	0x4024, r24	; 0x804024 <_ZZ9makeMorsePcPhS0_E1c>
			morseInProgress = getMorseChar(*str);
    4746:	82 2f       	mov	r24, r18
    4748:	0e 94 97 22 	call	0x452e	; 0x452e <_Z12getMorseCharc>
    474c:	60 93 9d 44 	sts	0x449D, r22	; 0x80449d <_ZZ9makeMorsePcPhS0_E15morseInProgress>
    4750:	70 93 9e 44 	sts	0x449E, r23	; 0x80449e <_ZZ9makeMorsePcPhS0_E15morseInProgress+0x1>
    4754:	80 93 9f 44 	sts	0x449F, r24	; 0x80449f <_ZZ9makeMorsePcPhS0_E15morseInProgress+0x2>
			charIndex = 0;
    4758:	10 92 9c 44 	sts	0x449C, r1	; 0x80449c <_ZZ9makeMorsePcPhS0_E9charIndex>
			symbolIndex = 0;
    475c:	10 92 9b 44 	sts	0x449B, r1	; 0x80449b <_ZZ9makeMorsePcPhS0_E11symbolIndex>
			elementIndex = 0;
    4760:	10 92 9a 44 	sts	0x449A, r1	; 0x80449a <_ZZ9makeMorsePcPhS0_E12elementIndex>
			addedSpace = 0;
    4764:	10 92 99 44 	sts	0x4499, r1	; 0x804499 <_ZZ9makeMorsePcPhS0_E10addedSpace>
			completedString = FALSE;
    4768:	10 92 98 44 	sts	0x4498, r1	; 0x804498 <_ZZ9makeMorsePcPhS0_E15completedString>
    476c:	0a c0       	rjmp	.+20     	; 0x4782 <_Z9makeMorsePcPhS0_+0x6e>
		}
		else    /* a zero-length string shuts down makeMorse */
		{
			str = NULL;
    476e:	10 92 a0 44 	sts	0x44A0, r1	; 0x8044a0 <_ZZ9makeMorsePcPhS0_E3str>
    4772:	10 92 a1 44 	sts	0x44A1, r1	; 0x8044a1 <_ZZ9makeMorsePcPhS0_E3str+0x1>
			completedString = TRUE;
    4776:	81 e0       	ldi	r24, 0x01	; 1
    4778:	80 93 98 44 	sts	0x4498, r24	; 0x804498 <_ZZ9makeMorsePcPhS0_E15completedString>
			if(finished)
    477c:	20 97       	sbiw	r28, 0x00	; 0
    477e:	09 f0       	breq	.+2      	; 0x4782 <_Z9makeMorsePcPhS0_+0x6e>
			{
				*finished = TRUE;
    4780:	88 83       	st	Y, r24
			}
		}

		carrierOn = OFF;
    4782:	10 92 97 44 	sts	0x4497, r1	; 0x804497 <_ZZ9makeMorsePcPhS0_E9carrierOn>
		return( OFF);
    4786:	80 e0       	ldi	r24, 0x00	; 0
    4788:	bb c0       	rjmp	.+374    	; 0x4900 <_Z9makeMorsePcPhS0_+0x1ec>
	}
	else if(str)
    478a:	e0 91 a0 44 	lds	r30, 0x44A0	; 0x8044a0 <_ZZ9makeMorsePcPhS0_E3str>
    478e:	f0 91 a1 44 	lds	r31, 0x44A1	; 0x8044a1 <_ZZ9makeMorsePcPhS0_E3str+0x1>
    4792:	30 97       	sbiw	r30, 0x00	; 0
    4794:	09 f4       	brne	.+2      	; 0x4798 <_Z9makeMorsePcPhS0_+0x84>
    4796:	a5 c0       	rjmp	.+330    	; 0x48e2 <_Z9makeMorsePcPhS0_+0x1ce>
	{
		if(repeating)
    4798:	61 15       	cp	r22, r1
    479a:	71 05       	cpc	r23, r1
    479c:	21 f0       	breq	.+8      	; 0x47a6 <_Z9makeMorsePcPhS0_+0x92>
		{
			*repeating = repeat;
    479e:	80 91 25 40 	lds	r24, 0x4025	; 0x804025 <_ZZ9makeMorsePcPhS0_E6repeat>
    47a2:	db 01       	movw	r26, r22
    47a4:	8c 93       	st	X, r24
		}

		if(completedString)
    47a6:	80 91 98 44 	lds	r24, 0x4498	; 0x804498 <_ZZ9makeMorsePcPhS0_E15completedString>
    47aa:	88 23       	and	r24, r24
    47ac:	49 f0       	breq	.+18     	; 0x47c0 <_Z9makeMorsePcPhS0_+0xac>
		{
			if(finished)
    47ae:	20 97       	sbiw	r28, 0x00	; 0
    47b0:	09 f4       	brne	.+2      	; 0x47b4 <_Z9makeMorsePcPhS0_+0xa0>
    47b2:	a3 c0       	rjmp	.+326    	; 0x48fa <_Z9makeMorsePcPhS0_+0x1e6>
			{
				*finished = TRUE;
    47b4:	81 e0       	ldi	r24, 0x01	; 1
    47b6:	88 83       	st	Y, r24
				holdKeyDown = FALSE;
    47b8:	10 92 a2 44 	sts	0x44A2, r1	; 0x8044a2 <_ZZ9makeMorsePcPhS0_E11holdKeyDown>
			}
			return( OFF);
    47bc:	80 e0       	ldi	r24, 0x00	; 0
    47be:	a0 c0       	rjmp	.+320    	; 0x4900 <_Z9makeMorsePcPhS0_+0x1ec>
		}

		if(elementIndex)
    47c0:	80 91 9a 44 	lds	r24, 0x449A	; 0x80449a <_ZZ9makeMorsePcPhS0_E12elementIndex>
    47c4:	88 23       	and	r24, r24
    47c6:	21 f0       	breq	.+8      	; 0x47d0 <_Z9makeMorsePcPhS0_+0xbc>
		{
			elementIndex--;
    47c8:	81 50       	subi	r24, 0x01	; 1
    47ca:	80 93 9a 44 	sts	0x449A, r24	; 0x80449a <_ZZ9makeMorsePcPhS0_E12elementIndex>
    47ce:	7f c0       	rjmp	.+254    	; 0x48ce <_Z9makeMorsePcPhS0_+0x1ba>
		}
		else if(carrierOn && !holdKeyDown)  /* carrier is on, so turn it off and wait appropriate amount of space */
    47d0:	80 91 97 44 	lds	r24, 0x4497	; 0x804497 <_ZZ9makeMorsePcPhS0_E9carrierOn>
    47d4:	88 23       	and	r24, r24
    47d6:	81 f0       	breq	.+32     	; 0x47f8 <_Z9makeMorsePcPhS0_+0xe4>
    47d8:	80 91 a2 44 	lds	r24, 0x44A2	; 0x8044a2 <_ZZ9makeMorsePcPhS0_E11holdKeyDown>
    47dc:	81 11       	cpse	r24, r1
    47de:	0c c0       	rjmp	.+24     	; 0x47f8 <_Z9makeMorsePcPhS0_+0xe4>
		{
			carrierOn = FALSE;
    47e0:	10 92 97 44 	sts	0x4497, r1	; 0x804497 <_ZZ9makeMorsePcPhS0_E9carrierOn>
			/* wait one element = inter-symbol space */
			if(addedSpace)
    47e4:	80 91 99 44 	lds	r24, 0x4499	; 0x804499 <_ZZ9makeMorsePcPhS0_E10addedSpace>
    47e8:	88 23       	and	r24, r24
    47ea:	09 f4       	brne	.+2      	; 0x47ee <_Z9makeMorsePcPhS0_+0xda>
    47ec:	70 c0       	rjmp	.+224    	; 0x48ce <_Z9makeMorsePcPhS0_+0x1ba>
			{
				elementIndex = addedSpace;
    47ee:	80 93 9a 44 	sts	0x449A, r24	; 0x80449a <_ZZ9makeMorsePcPhS0_E12elementIndex>
				addedSpace = 0;
    47f2:	10 92 99 44 	sts	0x4499, r1	; 0x804499 <_ZZ9makeMorsePcPhS0_E10addedSpace>
    47f6:	6b c0       	rjmp	.+214    	; 0x48ce <_Z9makeMorsePcPhS0_+0x1ba>
			}
			/* wait inter-character space */
		}
		else    /* carrier is off, so turn it on and get next symbol */
		{
			if(symbolIndex >= morseInProgress.lengthInSymbols)
    47f8:	90 91 9e 44 	lds	r25, 0x449E	; 0x80449e <_ZZ9makeMorsePcPhS0_E15morseInProgress+0x1>
    47fc:	80 91 9b 44 	lds	r24, 0x449B	; 0x80449b <_ZZ9makeMorsePcPhS0_E11symbolIndex>
    4800:	89 17       	cp	r24, r25
    4802:	90 f1       	brcs	.+100    	; 0x4868 <_Z9makeMorsePcPhS0_+0x154>
			{
				c = (*(str + ++charIndex));
    4804:	80 91 9c 44 	lds	r24, 0x449C	; 0x80449c <_ZZ9makeMorsePcPhS0_E9charIndex>
    4808:	8f 5f       	subi	r24, 0xFF	; 255
    480a:	80 93 9c 44 	sts	0x449C, r24	; 0x80449c <_ZZ9makeMorsePcPhS0_E9charIndex>
    480e:	df 01       	movw	r26, r30
    4810:	a8 0f       	add	r26, r24
    4812:	b1 1d       	adc	r27, r1
    4814:	8c 91       	ld	r24, X
    4816:	80 93 24 40 	sts	0x4024, r24	; 0x804024 <_ZZ9makeMorsePcPhS0_E1c>

				if(!c)  /* wrap to beginning of text */
    481a:	81 11       	cpse	r24, r1
    481c:	19 c0       	rjmp	.+50     	; 0x4850 <_Z9makeMorsePcPhS0_+0x13c>
				{
					if(repeat)
    481e:	80 91 25 40 	lds	r24, 0x4025	; 0x804025 <_ZZ9makeMorsePcPhS0_E6repeat>
    4822:	88 23       	and	r24, r24
    4824:	31 f0       	breq	.+12     	; 0x4832 <_Z9makeMorsePcPhS0_+0x11e>
					{
						c = *str;
    4826:	80 81       	ld	r24, Z
    4828:	80 93 24 40 	sts	0x4024, r24	; 0x804024 <_ZZ9makeMorsePcPhS0_E1c>
						charIndex = 0;
    482c:	10 92 9c 44 	sts	0x449C, r1	; 0x80449c <_ZZ9makeMorsePcPhS0_E9charIndex>
    4830:	0f c0       	rjmp	.+30     	; 0x4850 <_Z9makeMorsePcPhS0_+0x13c>
					}
					else
					{
						str = NULL;
    4832:	10 92 a0 44 	sts	0x44A0, r1	; 0x8044a0 <_ZZ9makeMorsePcPhS0_E3str>
    4836:	10 92 a1 44 	sts	0x44A1, r1	; 0x8044a1 <_ZZ9makeMorsePcPhS0_E3str+0x1>
						carrierOn = OFF;
    483a:	10 92 97 44 	sts	0x4497, r1	; 0x804497 <_ZZ9makeMorsePcPhS0_E9carrierOn>
						completedString = TRUE;
    483e:	91 e0       	ldi	r25, 0x01	; 1
    4840:	90 93 98 44 	sts	0x4498, r25	; 0x804498 <_ZZ9makeMorsePcPhS0_E15completedString>
						if(finished)
    4844:	20 97       	sbiw	r28, 0x00	; 0
    4846:	09 f0       	breq	.+2      	; 0x484a <_Z9makeMorsePcPhS0_+0x136>
						{
							*finished = TRUE;
    4848:	98 83       	st	Y, r25
						}
						holdKeyDown = FALSE;
    484a:	10 92 a2 44 	sts	0x44A2, r1	; 0x8044a2 <_ZZ9makeMorsePcPhS0_E11holdKeyDown>
						return( OFF );
    484e:	58 c0       	rjmp	.+176    	; 0x4900 <_Z9makeMorsePcPhS0_+0x1ec>
					}
				}

				morseInProgress = getMorseChar(c);
    4850:	80 91 24 40 	lds	r24, 0x4024	; 0x804024 <_ZZ9makeMorsePcPhS0_E1c>
    4854:	0e 94 97 22 	call	0x452e	; 0x452e <_Z12getMorseCharc>
    4858:	60 93 9d 44 	sts	0x449D, r22	; 0x80449d <_ZZ9makeMorsePcPhS0_E15morseInProgress>
    485c:	70 93 9e 44 	sts	0x449E, r23	; 0x80449e <_ZZ9makeMorsePcPhS0_E15morseInProgress+0x1>
    4860:	80 93 9f 44 	sts	0x449F, r24	; 0x80449f <_ZZ9makeMorsePcPhS0_E15morseInProgress+0x2>
				symbolIndex = 0;
    4864:	10 92 9b 44 	sts	0x449B, r1	; 0x80449b <_ZZ9makeMorsePcPhS0_E11symbolIndex>
			}

			if(morseInProgress.pattern < INTER_WORD_SPACE)
    4868:	20 91 9d 44 	lds	r18, 0x449D	; 0x80449d <_ZZ9makeMorsePcPhS0_E15morseInProgress>
    486c:	2d 3f       	cpi	r18, 0xFD	; 253
    486e:	00 f5       	brcc	.+64     	; 0x48b0 <_Z9makeMorsePcPhS0_+0x19c>
			{
				BOOL isDah = morseInProgress.pattern & (1 << symbolIndex++);
    4870:	40 91 9b 44 	lds	r20, 0x449B	; 0x80449b <_ZZ9makeMorsePcPhS0_E11symbolIndex>
    4874:	31 e0       	ldi	r19, 0x01	; 1
    4876:	34 0f       	add	r19, r20
    4878:	30 93 9b 44 	sts	0x449B, r19	; 0x80449b <_ZZ9makeMorsePcPhS0_E11symbolIndex>
    487c:	81 e0       	ldi	r24, 0x01	; 1
    487e:	90 e0       	ldi	r25, 0x00	; 0
    4880:	02 c0       	rjmp	.+4      	; 0x4886 <_Z9makeMorsePcPhS0_+0x172>
    4882:	88 0f       	add	r24, r24
    4884:	99 1f       	adc	r25, r25
    4886:	4a 95       	dec	r20
    4888:	e2 f7       	brpl	.-8      	; 0x4882 <_Z9makeMorsePcPhS0_+0x16e>
    488a:	82 23       	and	r24, r18

				if(isDah)
    488c:	21 f0       	breq	.+8      	; 0x4896 <_Z9makeMorsePcPhS0_+0x182>
				{
					elementIndex = 2;
    488e:	82 e0       	ldi	r24, 0x02	; 2
    4890:	80 93 9a 44 	sts	0x449A, r24	; 0x80449a <_ZZ9makeMorsePcPhS0_E12elementIndex>
    4894:	02 c0       	rjmp	.+4      	; 0x489a <_Z9makeMorsePcPhS0_+0x186>
				}
				else
				{
					elementIndex = 0;
    4896:	10 92 9a 44 	sts	0x449A, r1	; 0x80449a <_ZZ9makeMorsePcPhS0_E12elementIndex>
				}

				carrierOn = TRUE;
    489a:	81 e0       	ldi	r24, 0x01	; 1
    489c:	80 93 97 44 	sts	0x4497, r24	; 0x804497 <_ZZ9makeMorsePcPhS0_E9carrierOn>

				if(symbolIndex >= morseInProgress.lengthInSymbols)
    48a0:	80 91 9e 44 	lds	r24, 0x449E	; 0x80449e <_ZZ9makeMorsePcPhS0_E15morseInProgress+0x1>
    48a4:	38 17       	cp	r19, r24
    48a6:	98 f0       	brcs	.+38     	; 0x48ce <_Z9makeMorsePcPhS0_+0x1ba>
				{
					addedSpace = 2;
    48a8:	82 e0       	ldi	r24, 0x02	; 2
    48aa:	80 93 99 44 	sts	0x4499, r24	; 0x804499 <_ZZ9makeMorsePcPhS0_E10addedSpace>
    48ae:	0f c0       	rjmp	.+30     	; 0x48ce <_Z9makeMorsePcPhS0_+0x1ba>
				}
			}
			else
			{
				uint8_t sym = morseInProgress.lengthInSymbols;
    48b0:	80 91 9e 44 	lds	r24, 0x449E	; 0x80449e <_ZZ9makeMorsePcPhS0_E15morseInProgress+0x1>
				symbolIndex = 255;  /* ensure the next character gets read */
    48b4:	9f ef       	ldi	r25, 0xFF	; 255
    48b6:	90 93 9b 44 	sts	0x449B, r25	; 0x80449b <_ZZ9makeMorsePcPhS0_E11symbolIndex>
				carrierOn = FALSE;
    48ba:	10 92 97 44 	sts	0x4497, r1	; 0x804497 <_ZZ9makeMorsePcPhS0_E9carrierOn>
				if(sym >= 4 )
    48be:	84 30       	cpi	r24, 0x04	; 4
    48c0:	20 f0       	brcs	.+8      	; 0x48ca <_Z9makeMorsePcPhS0_+0x1b6>
				{
					elementIndex = morseInProgress.lengthInSymbols - 4;
    48c2:	84 50       	subi	r24, 0x04	; 4
    48c4:	80 93 9a 44 	sts	0x449A, r24	; 0x80449a <_ZZ9makeMorsePcPhS0_E12elementIndex>
    48c8:	02 c0       	rjmp	.+4      	; 0x48ce <_Z9makeMorsePcPhS0_+0x1ba>
				}
				else
				{
					elementIndex = 0;
    48ca:	10 92 9a 44 	sts	0x449A, r1	; 0x80449a <_ZZ9makeMorsePcPhS0_E12elementIndex>
				}
			}
		}

		/* Overrides for key on and key off special characters */
		if(c == '<')    /* constant tone */
    48ce:	80 91 24 40 	lds	r24, 0x4024	; 0x804024 <_ZZ9makeMorsePcPhS0_E1c>
    48d2:	8c 33       	cpi	r24, 0x3C	; 60
    48d4:	21 f4       	brne	.+8      	; 0x48de <_Z9makeMorsePcPhS0_+0x1ca>
		{
			holdKeyDown = TRUE;
    48d6:	81 e0       	ldi	r24, 0x01	; 1
    48d8:	80 93 a2 44 	sts	0x44A2, r24	; 0x8044a2 <_ZZ9makeMorsePcPhS0_E11holdKeyDown>
    48dc:	02 c0       	rjmp	.+4      	; 0x48e2 <_Z9makeMorsePcPhS0_+0x1ce>
		}
		else
		{
			holdKeyDown = FALSE;
    48de:	10 92 a2 44 	sts	0x44A2, r1	; 0x8044a2 <_ZZ9makeMorsePcPhS0_E11holdKeyDown>
		}
	}

	if(finished)
    48e2:	20 97       	sbiw	r28, 0x00	; 0
    48e4:	19 f0       	breq	.+6      	; 0x48ec <_Z9makeMorsePcPhS0_+0x1d8>
	{
		*finished = completedString;
    48e6:	80 91 98 44 	lds	r24, 0x4498	; 0x804498 <_ZZ9makeMorsePcPhS0_E15completedString>
    48ea:	88 83       	st	Y, r24
	}

	if(holdKeyDown)
    48ec:	80 91 a2 44 	lds	r24, 0x44A2	; 0x8044a2 <_ZZ9makeMorsePcPhS0_E11holdKeyDown>
    48f0:	81 11       	cpse	r24, r1
    48f2:	05 c0       	rjmp	.+10     	; 0x48fe <_Z9makeMorsePcPhS0_+0x1ea>
	{
		return(TRUE);
	}
	else
	{
		return( carrierOn);
    48f4:	80 91 97 44 	lds	r24, 0x4497	; 0x804497 <_ZZ9makeMorsePcPhS0_E9carrierOn>
    48f8:	03 c0       	rjmp	.+6      	; 0x4900 <_Z9makeMorsePcPhS0_+0x1ec>
			if(finished)
			{
				*finished = TRUE;
				holdKeyDown = FALSE;
			}
			return( OFF);
    48fa:	80 e0       	ldi	r24, 0x00	; 0
    48fc:	01 c0       	rjmp	.+2      	; 0x4900 <_Z9makeMorsePcPhS0_+0x1ec>
		*finished = completedString;
	}

	if(holdKeyDown)
	{
		return(TRUE);
    48fe:	81 e0       	ldi	r24, 0x01	; 1
	}
	else
	{
		return( carrierOn);
	}
}
    4900:	df 91       	pop	r29
    4902:	cf 91       	pop	r28
    4904:	08 95       	ret

00004906 <_Z26timeRequiredToSendStrAtWPMPcj>:
/**
 *  Returns the number of milliseconds required to send the string pointed to by the first argument at the WPM code speed
 *  passed in the second argument.
 */
uint16_t timeRequiredToSendStrAtWPM(char* str, uint16_t spd)
{
    4906:	cf 92       	push	r12
    4908:	df 92       	push	r13
    490a:	ef 92       	push	r14
    490c:	ff 92       	push	r15
    490e:	1f 93       	push	r17
    4910:	cf 93       	push	r28
    4912:	df 93       	push	r29
    4914:	6c 01       	movw	r12, r24
    4916:	7b 01       	movw	r14, r22
	uint8_t elements = 0;
	MorseCharacter m;
	char c;

	for(int i = 0; i < 20; i++)
    4918:	c0 e0       	ldi	r28, 0x00	; 0
    491a:	d0 e0       	ldi	r29, 0x00	; 0
 *  Returns the number of milliseconds required to send the string pointed to by the first argument at the WPM code speed
 *  passed in the second argument.
 */
uint16_t timeRequiredToSendStrAtWPM(char* str, uint16_t spd)
{
	uint8_t elements = 0;
    491c:	10 e0       	ldi	r17, 0x00	; 0
	MorseCharacter m;
	char c;

	for(int i = 0; i < 20; i++)
    491e:	c4 31       	cpi	r28, 0x14	; 20
    4920:	d1 05       	cpc	r29, r1
    4922:	74 f4       	brge	.+28     	; 0x4940 <_Z26timeRequiredToSendStrAtWPMPcj+0x3a>
	{
		c = str[i];
    4924:	f6 01       	movw	r30, r12
    4926:	ec 0f       	add	r30, r28
    4928:	fd 1f       	adc	r31, r29
    492a:	80 81       	ld	r24, Z
		if(!c)
    492c:	88 23       	and	r24, r24
    492e:	41 f0       	breq	.+16     	; 0x4940 <_Z26timeRequiredToSendStrAtWPMPcj+0x3a>
		{
			break;
		}
		m = getMorseChar(c);
    4930:	0e 94 97 22 	call	0x452e	; 0x452e <_Z12getMorseCharc>
		if(m.pattern < INTER_WORD_SPACE)
    4934:	6d 3f       	cpi	r22, 0xFD	; 253
    4936:	08 f4       	brcc	.+2      	; 0x493a <_Z26timeRequiredToSendStrAtWPMPcj+0x34>
		{
			elements += 3;
    4938:	1d 5f       	subi	r17, 0xFD	; 253
		}
		elements += m.lengthInElements;
    493a:	18 0f       	add	r17, r24
{
	uint8_t elements = 0;
	MorseCharacter m;
	char c;

	for(int i = 0; i < 20; i++)
    493c:	21 96       	adiw	r28, 0x01	; 1
    493e:	ef cf       	rjmp	.-34     	; 0x491e <_Z26timeRequiredToSendStrAtWPMPcj+0x18>
			elements += 3;
		}
		elements += m.lengthInElements;
	}

	return(elements * WPM_TO_MS_PER_DOT(spd));
    4940:	80 eb       	ldi	r24, 0xB0	; 176
    4942:	94 e0       	ldi	r25, 0x04	; 4
    4944:	b7 01       	movw	r22, r14
    4946:	0e 94 41 32 	call	0x6482	; 0x6482 <__udivmodhi4>
}
    494a:	16 9f       	mul	r17, r22
    494c:	c0 01       	movw	r24, r0
    494e:	17 9f       	mul	r17, r23
    4950:	90 0d       	add	r25, r0
    4952:	11 24       	eor	r1, r1
    4954:	df 91       	pop	r29
    4956:	cf 91       	pop	r28
    4958:	1f 91       	pop	r17
    495a:	ff 90       	pop	r15
    495c:	ef 90       	pop	r14
    495e:	df 90       	pop	r13
    4960:	cf 90       	pop	r12
    4962:	08 95       	ret

00004964 <protected_write_io>:
	PUBLIC_FUNCTION(protected_write_io)

#if defined(__GNUC__)
  
#ifdef RAMPZ
	out     _SFR_IO_ADDR(RAMPZ), r1         // Clear bits 23:16 of Z
    4964:	1b be       	out	0x3b, r1	; 59
#endif
	movw    r30, r24                // Load addr into Z
    4966:	fc 01       	movw	r30, r24
	out     CCP, r22                // Start CCP handshake
    4968:	64 bf       	out	0x34, r22	; 52
	st      Z, r20                  // Write value to I/O register
    496a:	40 83       	st	Z, r20
	ret                             // Return to caller
    496c:	08 95       	ret

0000496e <_ZL21USART0_initializationm>:
	}
	
	serialbus_end_tx();
	memset(rx_buffer, 0, sizeof(rx_buffer));

	for(bufferIndex=0; bufferIndex<SERIALBUS_NUMBER_OF_TX_MSG_BUFFERS; bufferIndex++)
    496e:	20 b1       	in	r18, 0x00	; 0
    4970:	2d 7f       	andi	r18, 0xFD	; 253
    4972:	20 b9       	out	0x00, r18	; 0
    4974:	e1 e1       	ldi	r30, 0x11	; 17
    4976:	f4 e0       	ldi	r31, 0x04	; 4
    4978:	20 81       	ld	r18, Z
    497a:	27 7f       	andi	r18, 0xF7	; 247
    497c:	20 83       	st	Z, r18
    497e:	20 b1       	in	r18, 0x00	; 0
    4980:	21 60       	ori	r18, 0x01	; 1
    4982:	20 b9       	out	0x00, r18	; 0
    4984:	21 b1       	in	r18, 0x01	; 1
    4986:	21 60       	ori	r18, 0x01	; 1
    4988:	21 b9       	out	0x01, r18	; 1
    498a:	0e 94 7c 2f 	call	0x5ef8	; 0x5ef8 <USART0_init>
    498e:	08 95       	ret

00004990 <_ZL21USART1_initializationm>:
    4990:	28 b1       	in	r18, 0x08	; 8
    4992:	2d 7f       	andi	r18, 0xFD	; 253
    4994:	28 b9       	out	0x08, r18	; 8
    4996:	e1 e5       	ldi	r30, 0x51	; 81
    4998:	f4 e0       	ldi	r31, 0x04	; 4
    499a:	20 81       	ld	r18, Z
    499c:	27 7f       	andi	r18, 0xF7	; 247
    499e:	20 83       	st	Z, r18
    49a0:	28 b1       	in	r18, 0x08	; 8
    49a2:	21 60       	ori	r18, 0x01	; 1
    49a4:	28 b9       	out	0x08, r18	; 8
    49a6:	29 b1       	in	r18, 0x09	; 9
    49a8:	21 60       	ori	r18, 0x01	; 1
    49aa:	29 b9       	out	0x09, r18	; 9
    49ac:	0e 94 b0 2f 	call	0x5f60	; 0x5f60 <USART1_init>
    49b0:	08 95       	ret

000049b2 <nextFullSBTxBuffer>:
    49b2:	90 e0       	ldi	r25, 0x00	; 0
    49b4:	80 91 a6 44 	lds	r24, 0x44A6	; 0x8044a6 <_ZZ18nextFullSBTxBufferE11bufferIndex>
    49b8:	28 2f       	mov	r18, r24
    49ba:	30 e0       	ldi	r19, 0x00	; 0
    49bc:	49 e2       	ldi	r20, 0x29	; 41
    49be:	42 9f       	mul	r20, r18
    49c0:	f0 01       	movw	r30, r0
    49c2:	43 9f       	mul	r20, r19
    49c4:	f0 0d       	add	r31, r0
    49c6:	11 24       	eor	r1, r1
    49c8:	eb 5d       	subi	r30, 0xDB	; 219
    49ca:	fa 4b       	sbci	r31, 0xBA	; 186
    49cc:	40 81       	ld	r20, Z
    49ce:	41 11       	cpse	r20, r1
    49d0:	0b c0       	rjmp	.+22     	; 0x49e8 <nextFullSBTxBuffer+0x36>
    49d2:	9f 5f       	subi	r25, 0xFF	; 255
    49d4:	93 30       	cpi	r25, 0x03	; 3
    49d6:	50 f4       	brcc	.+20     	; 0x49ec <nextFullSBTxBuffer+0x3a>
    49d8:	8f 5f       	subi	r24, 0xFF	; 255
    49da:	80 93 a6 44 	sts	0x44A6, r24	; 0x8044a6 <_ZZ18nextFullSBTxBufferE11bufferIndex>
    49de:	83 30       	cpi	r24, 0x03	; 3
    49e0:	48 f3       	brcs	.-46     	; 0x49b4 <nextFullSBTxBuffer+0x2>
    49e2:	10 92 a6 44 	sts	0x44A6, r1	; 0x8044a6 <_ZZ18nextFullSBTxBufferE11bufferIndex>
    49e6:	e6 cf       	rjmp	.-52     	; 0x49b4 <nextFullSBTxBuffer+0x2>
    49e8:	81 e0       	ldi	r24, 0x01	; 1
    49ea:	01 c0       	rjmp	.+2      	; 0x49ee <nextFullSBTxBuffer+0x3c>
    49ec:	80 e0       	ldi	r24, 0x00	; 0
    49ee:	88 23       	and	r24, r24
    49f0:	49 f0       	breq	.+18     	; 0x4a04 <nextFullSBTxBuffer+0x52>
    49f2:	49 e2       	ldi	r20, 0x29	; 41
    49f4:	42 9f       	mul	r20, r18
    49f6:	c0 01       	movw	r24, r0
    49f8:	43 9f       	mul	r20, r19
    49fa:	90 0d       	add	r25, r0
    49fc:	11 24       	eor	r1, r1
    49fe:	8b 5d       	subi	r24, 0xDB	; 219
    4a00:	9a 4b       	sbci	r25, 0xBA	; 186
    4a02:	08 95       	ret
    4a04:	80 e0       	ldi	r24, 0x00	; 0
    4a06:	90 e0       	ldi	r25, 0x00	; 0
    4a08:	08 95       	ret

00004a0a <nextEmptySBTxBuffer>:
    4a0a:	90 e0       	ldi	r25, 0x00	; 0
    4a0c:	80 91 a5 44 	lds	r24, 0x44A5	; 0x8044a5 <_ZZ19nextEmptySBTxBufferE11bufferIndex>
    4a10:	28 2f       	mov	r18, r24
    4a12:	30 e0       	ldi	r19, 0x00	; 0
    4a14:	49 e2       	ldi	r20, 0x29	; 41
    4a16:	42 9f       	mul	r20, r18
    4a18:	f0 01       	movw	r30, r0
    4a1a:	43 9f       	mul	r20, r19
    4a1c:	f0 0d       	add	r31, r0
    4a1e:	11 24       	eor	r1, r1
    4a20:	eb 5d       	subi	r30, 0xDB	; 219
    4a22:	fa 4b       	sbci	r31, 0xBA	; 186
    4a24:	40 81       	ld	r20, Z
    4a26:	44 23       	and	r20, r20
    4a28:	59 f0       	breq	.+22     	; 0x4a40 <nextEmptySBTxBuffer+0x36>
    4a2a:	9f 5f       	subi	r25, 0xFF	; 255
    4a2c:	93 30       	cpi	r25, 0x03	; 3
    4a2e:	50 f4       	brcc	.+20     	; 0x4a44 <nextEmptySBTxBuffer+0x3a>
    4a30:	8f 5f       	subi	r24, 0xFF	; 255
    4a32:	80 93 a5 44 	sts	0x44A5, r24	; 0x8044a5 <_ZZ19nextEmptySBTxBufferE11bufferIndex>
    4a36:	83 30       	cpi	r24, 0x03	; 3
    4a38:	48 f3       	brcs	.-46     	; 0x4a0c <nextEmptySBTxBuffer+0x2>
    4a3a:	10 92 a5 44 	sts	0x44A5, r1	; 0x8044a5 <_ZZ19nextEmptySBTxBufferE11bufferIndex>
    4a3e:	e6 cf       	rjmp	.-52     	; 0x4a0c <nextEmptySBTxBuffer+0x2>
    4a40:	81 e0       	ldi	r24, 0x01	; 1
    4a42:	01 c0       	rjmp	.+2      	; 0x4a46 <nextEmptySBTxBuffer+0x3c>
    4a44:	80 e0       	ldi	r24, 0x00	; 0
    4a46:	88 23       	and	r24, r24
    4a48:	49 f0       	breq	.+18     	; 0x4a5c <nextEmptySBTxBuffer+0x52>
    4a4a:	49 e2       	ldi	r20, 0x29	; 41
    4a4c:	42 9f       	mul	r20, r18
    4a4e:	c0 01       	movw	r24, r0
    4a50:	43 9f       	mul	r20, r19
    4a52:	90 0d       	add	r25, r0
    4a54:	11 24       	eor	r1, r1
    4a56:	8b 5d       	subi	r24, 0xDB	; 219
    4a58:	9a 4b       	sbci	r25, 0xBA	; 186
    4a5a:	08 95       	ret
    4a5c:	80 e0       	ldi	r24, 0x00	; 0
    4a5e:	90 e0       	ldi	r25, 0x00	; 0
    4a60:	08 95       	ret

00004a62 <nextEmptySBRxBuffer>:
    4a62:	90 e0       	ldi	r25, 0x00	; 0
    4a64:	80 91 a4 44 	lds	r24, 0x44A4	; 0x8044a4 <_ZZ19nextEmptySBRxBufferE11bufferIndex>
    4a68:	28 2f       	mov	r18, r24
    4a6a:	30 e0       	ldi	r19, 0x00	; 0
    4a6c:	4f e3       	ldi	r20, 0x3F	; 63
    4a6e:	42 9f       	mul	r20, r18
    4a70:	f0 01       	movw	r30, r0
    4a72:	43 9f       	mul	r20, r19
    4a74:	f0 0d       	add	r31, r0
    4a76:	11 24       	eor	r1, r1
    4a78:	e9 55       	subi	r30, 0x59	; 89
    4a7a:	fb 4b       	sbci	r31, 0xBB	; 187
    4a7c:	41 81       	ldd	r20, Z+1	; 0x01
    4a7e:	52 81       	ldd	r21, Z+2	; 0x02
    4a80:	45 2b       	or	r20, r21
    4a82:	59 f0       	breq	.+22     	; 0x4a9a <nextEmptySBRxBuffer+0x38>
    4a84:	9f 5f       	subi	r25, 0xFF	; 255
    4a86:	92 30       	cpi	r25, 0x02	; 2
    4a88:	50 f4       	brcc	.+20     	; 0x4a9e <nextEmptySBRxBuffer+0x3c>
    4a8a:	8f 5f       	subi	r24, 0xFF	; 255
    4a8c:	80 93 a4 44 	sts	0x44A4, r24	; 0x8044a4 <_ZZ19nextEmptySBRxBufferE11bufferIndex>
    4a90:	82 30       	cpi	r24, 0x02	; 2
    4a92:	40 f3       	brcs	.-48     	; 0x4a64 <nextEmptySBRxBuffer+0x2>
    4a94:	10 92 a4 44 	sts	0x44A4, r1	; 0x8044a4 <_ZZ19nextEmptySBRxBufferE11bufferIndex>
    4a98:	e5 cf       	rjmp	.-54     	; 0x4a64 <nextEmptySBRxBuffer+0x2>
    4a9a:	81 e0       	ldi	r24, 0x01	; 1
    4a9c:	01 c0       	rjmp	.+2      	; 0x4aa0 <nextEmptySBRxBuffer+0x3e>
    4a9e:	80 e0       	ldi	r24, 0x00	; 0
    4aa0:	88 23       	and	r24, r24
    4aa2:	49 f0       	breq	.+18     	; 0x4ab6 <nextEmptySBRxBuffer+0x54>
    4aa4:	4f e3       	ldi	r20, 0x3F	; 63
    4aa6:	42 9f       	mul	r20, r18
    4aa8:	c0 01       	movw	r24, r0
    4aaa:	43 9f       	mul	r20, r19
    4aac:	90 0d       	add	r25, r0
    4aae:	11 24       	eor	r1, r1
    4ab0:	89 55       	subi	r24, 0x59	; 89
    4ab2:	9b 4b       	sbci	r25, 0xBB	; 187
    4ab4:	08 95       	ret
    4ab6:	80 e0       	ldi	r24, 0x00	; 0
    4ab8:	90 e0       	ldi	r25, 0x00	; 0
    4aba:	08 95       	ret

00004abc <nextFullSBRxBuffer>:
    4abc:	90 e0       	ldi	r25, 0x00	; 0
    4abe:	80 91 a3 44 	lds	r24, 0x44A3	; 0x8044a3 <_ZZ18nextFullSBRxBufferE11bufferIndex>
    4ac2:	28 2f       	mov	r18, r24
    4ac4:	30 e0       	ldi	r19, 0x00	; 0
    4ac6:	4f e3       	ldi	r20, 0x3F	; 63
    4ac8:	42 9f       	mul	r20, r18
    4aca:	f0 01       	movw	r30, r0
    4acc:	43 9f       	mul	r20, r19
    4ace:	f0 0d       	add	r31, r0
    4ad0:	11 24       	eor	r1, r1
    4ad2:	e9 55       	subi	r30, 0x59	; 89
    4ad4:	fb 4b       	sbci	r31, 0xBB	; 187
    4ad6:	41 81       	ldd	r20, Z+1	; 0x01
    4ad8:	52 81       	ldd	r21, Z+2	; 0x02
    4ada:	45 2b       	or	r20, r21
    4adc:	59 f4       	brne	.+22     	; 0x4af4 <nextFullSBRxBuffer+0x38>
    4ade:	9f 5f       	subi	r25, 0xFF	; 255
    4ae0:	92 30       	cpi	r25, 0x02	; 2
    4ae2:	50 f4       	brcc	.+20     	; 0x4af8 <nextFullSBRxBuffer+0x3c>
    4ae4:	8f 5f       	subi	r24, 0xFF	; 255
    4ae6:	80 93 a3 44 	sts	0x44A3, r24	; 0x8044a3 <_ZZ18nextFullSBRxBufferE11bufferIndex>
    4aea:	82 30       	cpi	r24, 0x02	; 2
    4aec:	40 f3       	brcs	.-48     	; 0x4abe <nextFullSBRxBuffer+0x2>
    4aee:	10 92 a3 44 	sts	0x44A3, r1	; 0x8044a3 <_ZZ18nextFullSBRxBufferE11bufferIndex>
    4af2:	e5 cf       	rjmp	.-54     	; 0x4abe <nextFullSBRxBuffer+0x2>
    4af4:	81 e0       	ldi	r24, 0x01	; 1
    4af6:	01 c0       	rjmp	.+2      	; 0x4afa <nextFullSBRxBuffer+0x3e>
    4af8:	80 e0       	ldi	r24, 0x00	; 0
    4afa:	88 23       	and	r24, r24
    4afc:	49 f0       	breq	.+18     	; 0x4b10 <nextFullSBRxBuffer+0x54>
    4afe:	4f e3       	ldi	r20, 0x3F	; 63
    4b00:	42 9f       	mul	r20, r18
    4b02:	c0 01       	movw	r24, r0
    4b04:	43 9f       	mul	r20, r19
    4b06:	90 0d       	add	r25, r0
    4b08:	11 24       	eor	r1, r1
    4b0a:	89 55       	subi	r24, 0x59	; 89
    4b0c:	9b 4b       	sbci	r25, 0xBB	; 187
    4b0e:	08 95       	ret
    4b10:	80 e0       	ldi	r24, 0x00	; 0
    4b12:	90 e0       	ldi	r25, 0x00	; 0
    4b14:	08 95       	ret

00004b16 <serialbusTxInProgress>:
    4b16:	80 91 a0 45 	lds	r24, 0x45A0	; 0x8045a0 <_ZL19serialbus_tx_active>
    4b1a:	08 95       	ret

00004b1c <_Z18serialbus_start_txv>:
    4b1c:	cf 93       	push	r28
    4b1e:	80 91 a0 45 	lds	r24, 0x45A0	; 0x8045a0 <_ZL19serialbus_tx_active>
    4b22:	c1 e0       	ldi	r28, 0x01	; 1
    4b24:	81 11       	cpse	r24, r1
    4b26:	c0 e0       	ldi	r28, 0x00	; 0
    4b28:	81 11       	cpse	r24, r1
    4b2a:	0c c0       	rjmp	.+24     	; 0x4b44 <_Z18serialbus_start_txv+0x28>
    4b2c:	81 e0       	ldi	r24, 0x01	; 1
    4b2e:	80 93 a0 45 	sts	0x45A0, r24	; 0x8045a0 <_ZL19serialbus_tx_active>
    4b32:	80 91 27 40 	lds	r24, 0x4027	; 0x804027 <g_serialbus_usart_number>
    4b36:	81 11       	cpse	r24, r1
    4b38:	03 c0       	rjmp	.+6      	; 0x4b40 <_Z18serialbus_start_txv+0x24>
    4b3a:	0e 94 9e 2f 	call	0x5f3c	; 0x5f3c <USART0_enable_tx>
    4b3e:	02 c0       	rjmp	.+4      	; 0x4b44 <_Z18serialbus_start_txv+0x28>
    4b40:	0e 94 d2 2f 	call	0x5fa4	; 0x5fa4 <USART1_enable_tx>
    4b44:	8c 2f       	mov	r24, r28
    4b46:	cf 91       	pop	r28
    4b48:	08 95       	ret

00004b4a <serialbus_end_tx>:
    4b4a:	80 91 a0 45 	lds	r24, 0x45A0	; 0x8045a0 <_ZL19serialbus_tx_active>
    4b4e:	88 23       	and	r24, r24
    4b50:	89 f0       	breq	.+34     	; 0x4b74 <serialbus_end_tx+0x2a>
    4b52:	80 91 27 40 	lds	r24, 0x4027	; 0x804027 <g_serialbus_usart_number>
    4b56:	81 11       	cpse	r24, r1
    4b58:	06 c0       	rjmp	.+12     	; 0x4b66 <serialbus_end_tx+0x1c>
    4b5a:	e0 e0       	ldi	r30, 0x00	; 0
    4b5c:	f8 e0       	ldi	r31, 0x08	; 8
    4b5e:	85 81       	ldd	r24, Z+5	; 0x05
    4b60:	8f 7d       	andi	r24, 0xDF	; 223
    4b62:	85 83       	std	Z+5, r24	; 0x05
    4b64:	05 c0       	rjmp	.+10     	; 0x4b70 <serialbus_end_tx+0x26>
    4b66:	e0 e2       	ldi	r30, 0x20	; 32
    4b68:	f8 e0       	ldi	r31, 0x08	; 8
    4b6a:	85 81       	ldd	r24, Z+5	; 0x05
    4b6c:	8f 7d       	andi	r24, 0xDF	; 223
    4b6e:	85 83       	std	Z+5, r24	; 0x05
    4b70:	10 92 a0 45 	sts	0x45A0, r1	; 0x8045a0 <_ZL19serialbus_tx_active>
    4b74:	08 95       	ret

00004b76 <serialbus_init>:
    4b76:	cf 93       	push	r28
    4b78:	2e e7       	ldi	r18, 0x7E	; 126
    4b7a:	e7 ea       	ldi	r30, 0xA7	; 167
    4b7c:	f4 e4       	ldi	r31, 0x44	; 68
    4b7e:	df 01       	movw	r26, r30
    4b80:	1d 92       	st	X+, r1
    4b82:	2a 95       	dec	r18
    4b84:	e9 f7       	brne	.-6      	; 0x4b80 <serialbus_init+0xa>
    4b86:	a0 e0       	ldi	r26, 0x00	; 0
    4b88:	b0 e0       	ldi	r27, 0x00	; 0
    4b8a:	a3 30       	cpi	r26, 0x03	; 3
    4b8c:	b1 05       	cpc	r27, r1
    4b8e:	5c f4       	brge	.+22     	; 0x4ba6 <serialbus_init+0x30>
    4b90:	29 e2       	ldi	r18, 0x29	; 41
    4b92:	2a 9f       	mul	r18, r26
    4b94:	f0 01       	movw	r30, r0
    4b96:	2b 9f       	mul	r18, r27
    4b98:	f0 0d       	add	r31, r0
    4b9a:	11 24       	eor	r1, r1
    4b9c:	eb 5d       	subi	r30, 0xDB	; 219
    4b9e:	fa 4b       	sbci	r31, 0xBA	; 186
    4ba0:	10 82       	st	Z, r1
    4ba2:	11 96       	adiw	r26, 0x01	; 1
    4ba4:	f2 cf       	rjmp	.-28     	; 0x4b8a <serialbus_init+0x14>
    4ba6:	46 30       	cpi	r20, 0x06	; 6
    4ba8:	21 f4       	brne	.+8      	; 0x4bb2 <serialbus_init+0x3c>
    4baa:	20 91 27 40 	lds	r18, 0x4027	; 0x804027 <g_serialbus_usart_number>
    4bae:	27 30       	cpi	r18, 0x07	; 7
    4bb0:	51 f4       	brne	.+20     	; 0x4bc6 <serialbus_init+0x50>
    4bb2:	c4 2f       	mov	r28, r20
    4bb4:	41 11       	cpse	r20, r1
    4bb6:	03 c0       	rjmp	.+6      	; 0x4bbe <serialbus_init+0x48>
    4bb8:	0e 94 b7 24 	call	0x496e	; 0x496e <_ZL21USART0_initializationm>
    4bbc:	02 c0       	rjmp	.+4      	; 0x4bc2 <serialbus_init+0x4c>
    4bbe:	0e 94 c8 24 	call	0x4990	; 0x4990 <_ZL21USART1_initializationm>
    4bc2:	c0 93 27 40 	sts	0x4027, r28	; 0x804027 <g_serialbus_usart_number>
    4bc6:	10 92 26 40 	sts	0x4026, r1	; 0x804026 <_ZL14g_bus_disabled>
    4bca:	cf 91       	pop	r28
    4bcc:	08 95       	ret

00004bce <_Z19serialbus_send_textPc>:
	}
}


BOOL serialbus_send_text(char* text)
{
    4bce:	0f 93       	push	r16
    4bd0:	1f 93       	push	r17
    4bd2:	cf 93       	push	r28
    4bd4:	df 93       	push	r29
	BOOL err = TRUE;
	uint16_t tries = 200;

	if(g_bus_disabled)
    4bd6:	20 91 26 40 	lds	r18, 0x4026	; 0x804026 <_ZL14g_bus_disabled>
    4bda:	21 11       	cpse	r18, r1
    4bdc:	2f c0       	rjmp	.+94     	; 0x4c3c <_Z19serialbus_send_textPc+0x6e>
	{
		return( err);
	}

	if(text)
    4bde:	00 97       	sbiw	r24, 0x00	; 0
    4be0:	79 f1       	breq	.+94     	; 0x4c40 <_Z19serialbus_send_textPc+0x72>
    4be2:	8c 01       	movw	r16, r24
	{
		SerialbusTxBuffer* buff = nextEmptySBTxBuffer();
    4be4:	0e 94 05 25 	call	0x4a0a	; 0x4a0a <nextEmptySBTxBuffer>


BOOL serialbus_send_text(char* text)
{
	BOOL err = TRUE;
	uint16_t tries = 200;
    4be8:	c8 ec       	ldi	r28, 0xC8	; 200
    4bea:	d0 e0       	ldi	r29, 0x00	; 0

	if(text)
	{
		SerialbusTxBuffer* buff = nextEmptySBTxBuffer();

		while(!buff && tries)
    4bec:	00 97       	sbiw	r24, 0x00	; 0
    4bee:	b1 f4       	brne	.+44     	; 0x4c1c <_Z19serialbus_send_textPc+0x4e>
    4bf0:	20 97       	sbiw	r28, 0x00	; 0
    4bf2:	a1 f0       	breq	.+40     	; 0x4c1c <_Z19serialbus_send_textPc+0x4e>
		{
			while(serialbusTxInProgress() && tries)
    4bf4:	0e 94 8b 25 	call	0x4b16	; 0x4b16 <serialbusTxInProgress>
    4bf8:	88 23       	and	r24, r24
    4bfa:	21 f0       	breq	.+8      	; 0x4c04 <_Z19serialbus_send_textPc+0x36>
    4bfc:	20 97       	sbiw	r28, 0x00	; 0
    4bfe:	21 f4       	brne	.+8      	; 0x4c08 <_Z19serialbus_send_textPc+0x3a>
    4c00:	90 e0       	ldi	r25, 0x00	; 0
    4c02:	03 c0       	rjmp	.+6      	; 0x4c0a <_Z19serialbus_send_textPc+0x3c>
    4c04:	90 e0       	ldi	r25, 0x00	; 0
    4c06:	01 c0       	rjmp	.+2      	; 0x4c0a <_Z19serialbus_send_textPc+0x3c>
    4c08:	91 e0       	ldi	r25, 0x01	; 1
    4c0a:	99 23       	and	r25, r25
    4c0c:	21 f0       	breq	.+8      	; 0x4c16 <_Z19serialbus_send_textPc+0x48>
			{
				if(tries)
    4c0e:	20 97       	sbiw	r28, 0x00	; 0
    4c10:	89 f3       	breq	.-30     	; 0x4bf4 <_Z19serialbus_send_textPc+0x26>
				{
					tries--;    /* wait until transmit finishes */
    4c12:	21 97       	sbiw	r28, 0x01	; 1
    4c14:	ef cf       	rjmp	.-34     	; 0x4bf4 <_Z19serialbus_send_textPc+0x26>
				}
			}
			buff = nextEmptySBTxBuffer();
    4c16:	0e 94 05 25 	call	0x4a0a	; 0x4a0a <nextEmptySBTxBuffer>

	if(text)
	{
		SerialbusTxBuffer* buff = nextEmptySBTxBuffer();

		while(!buff && tries)
    4c1a:	e8 cf       	rjmp	.-48     	; 0x4bec <_Z19serialbus_send_textPc+0x1e>
				}
			}
			buff = nextEmptySBTxBuffer();
		}

		if(buff)
    4c1c:	00 97       	sbiw	r24, 0x00	; 0
    4c1e:	91 f0       	breq	.+36     	; 0x4c44 <_Z19serialbus_send_textPc+0x76>
		{
			sprintf(*buff, text);
    4c20:	1f 93       	push	r17
    4c22:	0f 93       	push	r16
    4c24:	9f 93       	push	r25
    4c26:	8f 93       	push	r24
    4c28:	0e 94 91 34 	call	0x6922	; 0x6922 <sprintf>

			serialbus_start_tx();
    4c2c:	0e 94 8e 25 	call	0x4b1c	; 0x4b1c <_Z18serialbus_start_txv>
    4c30:	0f 90       	pop	r0
    4c32:	0f 90       	pop	r0
    4c34:	0f 90       	pop	r0
    4c36:	0f 90       	pop	r0
			err = FALSE;
    4c38:	80 e0       	ldi	r24, 0x00	; 0
    4c3a:	05 c0       	rjmp	.+10     	; 0x4c46 <_Z19serialbus_send_textPc+0x78>
	BOOL err = TRUE;
	uint16_t tries = 200;

	if(g_bus_disabled)
	{
		return( err);
    4c3c:	81 e0       	ldi	r24, 0x01	; 1
    4c3e:	03 c0       	rjmp	.+6      	; 0x4c46 <_Z19serialbus_send_textPc+0x78>
}


BOOL serialbus_send_text(char* text)
{
	BOOL err = TRUE;
    4c40:	81 e0       	ldi	r24, 0x01	; 1
    4c42:	01 c0       	rjmp	.+2      	; 0x4c46 <_Z19serialbus_send_textPc+0x78>
    4c44:	81 e0       	ldi	r24, 0x01	; 1
			err = FALSE;
		}
	}

	return(err);
}
    4c46:	df 91       	pop	r29
    4c48:	cf 91       	pop	r28
    4c4a:	1f 91       	pop	r17
    4c4c:	0f 91       	pop	r16
    4c4e:	08 95       	ret

00004c50 <sb_send_NewPrompt>:
 *  Support for creating and sending various Terminal Mode Serialbus messages is provided below.
 ************************************************************************************/

void sb_send_NewPrompt(void)
{
	if(g_bus_disabled)
    4c50:	80 91 26 40 	lds	r24, 0x4026	; 0x804026 <_ZL14g_bus_disabled>
    4c54:	81 11       	cpse	r24, r1
    4c56:	06 c0       	rjmp	.+12     	; 0x4c64 <sb_send_NewPrompt+0x14>
	{
		return;
	}

	while(serialbus_send_text((char*)textPrompt))
    4c58:	8b e1       	ldi	r24, 0x1B	; 27
    4c5a:	92 e4       	ldi	r25, 0x42	; 66
    4c5c:	0e 94 e7 25 	call	0x4bce	; 0x4bce <_Z19serialbus_send_textPc>
    4c60:	81 11       	cpse	r24, r1
    4c62:	fa cf       	rjmp	.-12     	; 0x4c58 <sb_send_NewPrompt+0x8>
    4c64:	08 95       	ret

00004c66 <sb_send_NewLine>:
	}
}

void sb_send_NewLine(void)
{
	if(g_bus_disabled)
    4c66:	80 91 26 40 	lds	r24, 0x4026	; 0x804026 <_ZL14g_bus_disabled>
    4c6a:	81 11       	cpse	r24, r1
    4c6c:	04 c0       	rjmp	.+8      	; 0x4c76 <sb_send_NewLine+0x10>
	{
		return;
	}
	serialbus_send_text((char*)crlf);
    4c6e:	8e e1       	ldi	r24, 0x1E	; 30
    4c70:	92 e4       	ldi	r25, 0x42	; 66
    4c72:	0e 94 e7 25 	call	0x4bce	; 0x4bce <_Z19serialbus_send_textPc>
    4c76:	08 95       	ret

00004c78 <sb_echo_char>:
}

void sb_echo_char(uint8_t c)
{
	if(g_bus_disabled)
    4c78:	90 91 26 40 	lds	r25, 0x4026	; 0x804026 <_ZL14g_bus_disabled>
    4c7c:	91 11       	cpse	r25, r1
    4c7e:	07 c0       	rjmp	.+14     	; 0x4c8e <sb_echo_char+0x16>
	{
		return;
	}
	g_tempMsgBuff[0] = c;
    4c80:	e1 ea       	ldi	r30, 0xA1	; 161
    4c82:	f5 e4       	ldi	r31, 0x45	; 69
    4c84:	80 83       	st	Z, r24
	g_tempMsgBuff[1] = '\0';
    4c86:	11 82       	std	Z+1, r1	; 0x01
	serialbus_send_text(g_tempMsgBuff);
    4c88:	cf 01       	movw	r24, r30
    4c8a:	0e 94 e7 25 	call	0x4bce	; 0x4bce <_Z19serialbus_send_textPc>
    4c8e:	08 95       	ret

00004c90 <sb_send_string>:
}

BOOL sb_send_string(char* str)
{
    4c90:	af 92       	push	r10
    4c92:	bf 92       	push	r11
    4c94:	cf 92       	push	r12
    4c96:	df 92       	push	r13
    4c98:	ef 92       	push	r14
    4c9a:	ff 92       	push	r15
    4c9c:	0f 93       	push	r16
    4c9e:	1f 93       	push	r17
    4ca0:	cf 93       	push	r28
	BOOL err = FALSE;
	uint16_t length, lengthToSend, lengthSent=0;
	bool done = false;

	if(g_bus_disabled)
    4ca2:	20 91 26 40 	lds	r18, 0x4026	; 0x804026 <_ZL14g_bus_disabled>
    4ca6:	21 11       	cpse	r18, r1
    4ca8:	44 c0       	rjmp	.+136    	; 0x4d32 <sb_send_string+0xa2>
	{
		return( TRUE);
	}

	if(str == NULL)
    4caa:	00 97       	sbiw	r24, 0x00	; 0
    4cac:	09 f4       	brne	.+2      	; 0x4cb0 <sb_send_string+0x20>
    4cae:	43 c0       	rjmp	.+134    	; 0x4d36 <sb_send_string+0xa6>
	{
		return( TRUE);
	}

	if(!*str)
    4cb0:	fc 01       	movw	r30, r24
    4cb2:	20 81       	ld	r18, Z
    4cb4:	22 23       	and	r18, r18
    4cb6:	09 f4       	brne	.+2      	; 0x4cba <sb_send_string+0x2a>
    4cb8:	40 c0       	rjmp	.+128    	; 0x4d3a <sb_send_string+0xaa>
    4cba:	5c 01       	movw	r10, r24
	{
		return(TRUE);
	}

	length = strlen(str);
    4cbc:	01 90       	ld	r0, Z+
    4cbe:	00 20       	and	r0, r0
    4cc0:	e9 f7       	brne	.-6      	; 0x4cbc <sb_send_string+0x2c>
    4cc2:	31 97       	sbiw	r30, 0x01	; 1
    4cc4:	6f 01       	movw	r12, r30
    4cc6:	c8 1a       	sub	r12, r24
    4cc8:	d9 0a       	sbc	r13, r25
}

BOOL sb_send_string(char* str)
{
	BOOL err = FALSE;
	uint16_t length, lengthToSend, lengthSent=0;
    4cca:	e1 2c       	mov	r14, r1
    4ccc:	f1 2c       	mov	r15, r1

	length = strlen(str);

	do
	{
		lengthToSend = MIN(length-lengthSent, (uint16_t)SERIALBUS_MAX_TX_MSG_LENGTH);
    4cce:	86 01       	movw	r16, r12
    4cd0:	0e 19       	sub	r16, r14
    4cd2:	1f 09       	sbc	r17, r15
    4cd4:	09 32       	cpi	r16, 0x29	; 41
    4cd6:	11 05       	cpc	r17, r1
    4cd8:	10 f0       	brcs	.+4      	; 0x4cde <sb_send_string+0x4e>
    4cda:	09 e2       	ldi	r16, 0x29	; 41
    4cdc:	10 e0       	ldi	r17, 0x00	; 0
		strncpy(g_tempMsgBuff, &str[lengthSent], lengthToSend);
    4cde:	a8 01       	movw	r20, r16
    4ce0:	b5 01       	movw	r22, r10
    4ce2:	6e 0d       	add	r22, r14
    4ce4:	7f 1d       	adc	r23, r15
    4ce6:	81 ea       	ldi	r24, 0xA1	; 161
    4ce8:	95 e4       	ldi	r25, 0x45	; 69
    4cea:	0e 94 65 34 	call	0x68ca	; 0x68ca <strncpy>
		if(lengthToSend < SERIALBUS_MAX_TX_MSG_LENGTH)
    4cee:	09 32       	cpi	r16, 0x29	; 41
    4cf0:	11 05       	cpc	r17, r1
    4cf2:	20 f4       	brcc	.+8      	; 0x4cfc <sb_send_string+0x6c>
		{
			g_tempMsgBuff[lengthToSend] = '\0';
    4cf4:	f8 01       	movw	r30, r16
    4cf6:	ef 55       	subi	r30, 0x5F	; 95
    4cf8:	fa 4b       	sbci	r31, 0xBA	; 186
    4cfa:	10 82       	st	Z, r1
		}
		while((err = serialbus_send_text(g_tempMsgBuff)))
    4cfc:	81 ea       	ldi	r24, 0xA1	; 161
    4cfe:	95 e4       	ldi	r25, 0x45	; 69
    4d00:	0e 94 e7 25 	call	0x4bce	; 0x4bce <_Z19serialbus_send_textPc>
    4d04:	c8 2f       	mov	r28, r24
    4d06:	81 11       	cpse	r24, r1
    4d08:	f9 cf       	rjmp	.-14     	; 0x4cfc <sb_send_string+0x6c>
		{
			;
		}
		while(!err && serialbusTxInProgress())
    4d0a:	c1 11       	cpse	r28, r1
    4d0c:	06 c0       	rjmp	.+12     	; 0x4d1a <sb_send_string+0x8a>
    4d0e:	0e 94 8b 25 	call	0x4b16	; 0x4b16 <serialbusTxInProgress>
    4d12:	88 23       	and	r24, r24
    4d14:	21 f0       	breq	.+8      	; 0x4d1e <sb_send_string+0x8e>
    4d16:	91 e0       	ldi	r25, 0x01	; 1
    4d18:	03 c0       	rjmp	.+6      	; 0x4d20 <sb_send_string+0x90>
    4d1a:	90 e0       	ldi	r25, 0x00	; 0
    4d1c:	01 c0       	rjmp	.+2      	; 0x4d20 <sb_send_string+0x90>
    4d1e:	90 e0       	ldi	r25, 0x00	; 0
    4d20:	91 11       	cpse	r25, r1
    4d22:	f3 cf       	rjmp	.-26     	; 0x4d0a <sb_send_string+0x7a>
		{
			;
		}
		
		lengthSent += lengthToSend;
    4d24:	e0 0e       	add	r14, r16
    4d26:	f1 1e       	adc	r15, r17
		done = lengthSent >= length;
	}while(!done);
    4d28:	ec 14       	cp	r14, r12
    4d2a:	fd 04       	cpc	r15, r13
    4d2c:	80 f2       	brcs	.-96     	; 0x4cce <sb_send_string+0x3e>

	return( err);
    4d2e:	8c 2f       	mov	r24, r28
    4d30:	05 c0       	rjmp	.+10     	; 0x4d3c <sb_send_string+0xac>
	uint16_t length, lengthToSend, lengthSent=0;
	bool done = false;

	if(g_bus_disabled)
	{
		return( TRUE);
    4d32:	81 e0       	ldi	r24, 0x01	; 1
    4d34:	03 c0       	rjmp	.+6      	; 0x4d3c <sb_send_string+0xac>
	}

	if(str == NULL)
	{
		return( TRUE);
    4d36:	81 e0       	ldi	r24, 0x01	; 1
    4d38:	01 c0       	rjmp	.+2      	; 0x4d3c <sb_send_string+0xac>
	}

	if(!*str)
	{
		return(TRUE);
    4d3a:	81 e0       	ldi	r24, 0x01	; 1
		lengthSent += lengthToSend;
		done = lengthSent >= length;
	}while(!done);

	return( err);
}
    4d3c:	cf 91       	pop	r28
    4d3e:	1f 91       	pop	r17
    4d40:	0f 91       	pop	r16
    4d42:	ff 90       	pop	r15
    4d44:	ef 90       	pop	r14
    4d46:	df 90       	pop	r13
    4d48:	cf 90       	pop	r12
    4d4a:	bf 90       	pop	r11
    4d4c:	af 90       	pop	r10
    4d4e:	08 95       	ret

00004d50 <si5351_get_correction>:
		data[0] = SI5351_CLK0_CTRL + (uint8_t)clk;
		data[1] = reg_val;
		if(si5351_write_bulk(data, 2)) return ERROR_CODE_CLKGEN_NONRESPONSIVE;

		return ERROR_CODE_NO_ERROR;
	}
    4d50:	60 91 e4 45 	lds	r22, 0x45E4	; 0x8045e4 <_ZL23g_si5351_ref_correction>
    4d54:	70 91 e5 45 	lds	r23, 0x45E5	; 0x8045e5 <_ZL23g_si5351_ref_correction+0x1>
    4d58:	80 91 e6 45 	lds	r24, 0x45E6	; 0x8045e6 <_ZL23g_si5351_ref_correction+0x2>
    4d5c:	90 91 e7 45 	lds	r25, 0x45E7	; 0x8045e7 <_ZL23g_si5351_ref_correction+0x3>
    4d60:	08 95       	ret

00004d62 <_Z13reduce_by_gcdPmS_>:
    4d62:	4f 92       	push	r4
    4d64:	5f 92       	push	r5
    4d66:	6f 92       	push	r6
    4d68:	7f 92       	push	r7
    4d6a:	8f 92       	push	r8
    4d6c:	9f 92       	push	r9
    4d6e:	af 92       	push	r10
    4d70:	bf 92       	push	r11
    4d72:	cf 92       	push	r12
    4d74:	df 92       	push	r13
    4d76:	ef 92       	push	r14
    4d78:	ff 92       	push	r15
    4d7a:	0f 93       	push	r16
    4d7c:	1f 93       	push	r17
    4d7e:	cf 93       	push	r28
    4d80:	df 93       	push	r29
    4d82:	8c 01       	movw	r16, r24
    4d84:	eb 01       	movw	r28, r22
    4d86:	fc 01       	movw	r30, r24
    4d88:	40 80       	ld	r4, Z
    4d8a:	51 80       	ldd	r5, Z+1	; 0x01
    4d8c:	62 80       	ldd	r6, Z+2	; 0x02
    4d8e:	73 80       	ldd	r7, Z+3	; 0x03
    4d90:	88 80       	ld	r8, Y
    4d92:	99 80       	ldd	r9, Y+1	; 0x01
    4d94:	aa 80       	ldd	r10, Y+2	; 0x02
    4d96:	bb 80       	ldd	r11, Y+3	; 0x03
    4d98:	41 14       	cp	r4, r1
    4d9a:	51 04       	cpc	r5, r1
    4d9c:	61 04       	cpc	r6, r1
    4d9e:	71 04       	cpc	r7, r1
    4da0:	e1 f1       	breq	.+120    	; 0x4e1a <_Z13reduce_by_gcdPmS_+0xb8>
    4da2:	81 14       	cp	r8, r1
    4da4:	91 04       	cpc	r9, r1
    4da6:	a1 04       	cpc	r10, r1
    4da8:	b1 04       	cpc	r11, r1
    4daa:	b9 f1       	breq	.+110    	; 0x4e1a <_Z13reduce_by_gcdPmS_+0xb8>
    4dac:	c3 01       	movw	r24, r6
    4dae:	b2 01       	movw	r22, r4
    4db0:	a5 01       	movw	r20, r10
    4db2:	94 01       	movw	r18, r8
    4db4:	0e 94 69 32 	call	0x64d2	; 0x64d2 <__udivmodsi4>
    4db8:	6b 01       	movw	r12, r22
    4dba:	7c 01       	movw	r14, r24
    4dbc:	c1 14       	cp	r12, r1
    4dbe:	d1 04       	cpc	r13, r1
    4dc0:	e1 04       	cpc	r14, r1
    4dc2:	f1 04       	cpc	r15, r1
    4dc4:	69 f0       	breq	.+26     	; 0x4de0 <_Z13reduce_by_gcdPmS_+0x7e>
    4dc6:	c5 01       	movw	r24, r10
    4dc8:	b4 01       	movw	r22, r8
    4dca:	a7 01       	movw	r20, r14
    4dcc:	96 01       	movw	r18, r12
    4dce:	0e 94 69 32 	call	0x64d2	; 0x64d2 <__udivmodsi4>
    4dd2:	46 01       	movw	r8, r12
    4dd4:	57 01       	movw	r10, r14
    4dd6:	c6 2e       	mov	r12, r22
    4dd8:	d7 2e       	mov	r13, r23
    4dda:	e8 2e       	mov	r14, r24
    4ddc:	f9 2e       	mov	r15, r25
    4dde:	ee cf       	rjmp	.-36     	; 0x4dbc <_Z13reduce_by_gcdPmS_+0x5a>
    4de0:	f2 e0       	ldi	r31, 0x02	; 2
    4de2:	8f 16       	cp	r8, r31
    4de4:	91 04       	cpc	r9, r1
    4de6:	a1 04       	cpc	r10, r1
    4de8:	b1 04       	cpc	r11, r1
    4dea:	b8 f0       	brcs	.+46     	; 0x4e1a <_Z13reduce_by_gcdPmS_+0xb8>
    4dec:	c3 01       	movw	r24, r6
    4dee:	b2 01       	movw	r22, r4
    4df0:	a5 01       	movw	r20, r10
    4df2:	94 01       	movw	r18, r8
    4df4:	0e 94 69 32 	call	0x64d2	; 0x64d2 <__udivmodsi4>
    4df8:	f8 01       	movw	r30, r16
    4dfa:	20 83       	st	Z, r18
    4dfc:	31 83       	std	Z+1, r19	; 0x01
    4dfe:	42 83       	std	Z+2, r20	; 0x02
    4e00:	53 83       	std	Z+3, r21	; 0x03
    4e02:	68 81       	ld	r22, Y
    4e04:	79 81       	ldd	r23, Y+1	; 0x01
    4e06:	8a 81       	ldd	r24, Y+2	; 0x02
    4e08:	9b 81       	ldd	r25, Y+3	; 0x03
    4e0a:	a5 01       	movw	r20, r10
    4e0c:	94 01       	movw	r18, r8
    4e0e:	0e 94 69 32 	call	0x64d2	; 0x64d2 <__udivmodsi4>
    4e12:	28 83       	st	Y, r18
    4e14:	39 83       	std	Y+1, r19	; 0x01
    4e16:	4a 83       	std	Y+2, r20	; 0x02
    4e18:	5b 83       	std	Y+3, r21	; 0x03
    4e1a:	df 91       	pop	r29
    4e1c:	cf 91       	pop	r28
    4e1e:	1f 91       	pop	r17
    4e20:	0f 91       	pop	r16
    4e22:	ff 90       	pop	r15
    4e24:	ef 90       	pop	r14
    4e26:	df 90       	pop	r13
    4e28:	cf 90       	pop	r12
    4e2a:	bf 90       	pop	r11
    4e2c:	af 90       	pop	r10
    4e2e:	9f 90       	pop	r9
    4e30:	8f 90       	pop	r8
    4e32:	7f 90       	pop	r7
    4e34:	6f 90       	pop	r6
    4e36:	5f 90       	pop	r5
    4e38:	4f 90       	pop	r4
    4e3a:	08 95       	ret

00004e3c <_Z8pll_calcmP13u_si5351_regs>:
    4e3c:	4f 92       	push	r4
    4e3e:	5f 92       	push	r5
    4e40:	6f 92       	push	r6
    4e42:	7f 92       	push	r7
    4e44:	8f 92       	push	r8
    4e46:	9f 92       	push	r9
    4e48:	af 92       	push	r10
    4e4a:	bf 92       	push	r11
    4e4c:	cf 92       	push	r12
    4e4e:	df 92       	push	r13
    4e50:	ef 92       	push	r14
    4e52:	ff 92       	push	r15
    4e54:	0f 93       	push	r16
    4e56:	1f 93       	push	r17
    4e58:	cf 93       	push	r28
    4e5a:	df 93       	push	r29
    4e5c:	cd b7       	in	r28, 0x3d	; 61
    4e5e:	de b7       	in	r29, 0x3e	; 62
    4e60:	28 97       	sbiw	r28, 0x08	; 8
    4e62:	cd bf       	out	0x3d, r28	; 61
    4e64:	de bf       	out	0x3e, r29	; 62
    4e66:	8a 01       	movw	r16, r20
    4e68:	80 90 28 40 	lds	r8, 0x4028	; 0x804028 <_ZL9xtal_freq>
    4e6c:	90 90 29 40 	lds	r9, 0x4029	; 0x804029 <_ZL9xtal_freq+0x1>
    4e70:	a0 90 2a 40 	lds	r10, 0x402A	; 0x80402a <_ZL9xtal_freq+0x2>
    4e74:	b0 90 2b 40 	lds	r11, 0x402B	; 0x80402b <_ZL9xtal_freq+0x3>
    4e78:	a5 01       	movw	r20, r10
    4e7a:	94 01       	movw	r18, r8
    4e7c:	0e 94 69 32 	call	0x64d2	; 0x64d2 <__udivmodsi4>
    4e80:	69 01       	movw	r12, r18
    4e82:	7a 01       	movw	r14, r20
    4e84:	69 83       	std	Y+1, r22	; 0x01
    4e86:	7a 83       	std	Y+2, r23	; 0x02
    4e88:	8b 83       	std	Y+3, r24	; 0x03
    4e8a:	9c 83       	std	Y+4, r25	; 0x04
    4e8c:	8d 82       	std	Y+5, r8	; 0x05
    4e8e:	9e 82       	std	Y+6, r9	; 0x06
    4e90:	af 82       	std	Y+7, r10	; 0x07
    4e92:	b8 86       	std	Y+8, r11	; 0x08
    4e94:	be 01       	movw	r22, r28
    4e96:	6b 5f       	subi	r22, 0xFB	; 251
    4e98:	7f 4f       	sbci	r23, 0xFF	; 255
    4e9a:	ce 01       	movw	r24, r28
    4e9c:	01 96       	adiw	r24, 0x01	; 1
    4e9e:	0e 94 b1 26 	call	0x4d62	; 0x4d62 <_Z13reduce_by_gcdPmS_>
    4ea2:	89 80       	ldd	r8, Y+1	; 0x01
    4ea4:	9a 80       	ldd	r9, Y+2	; 0x02
    4ea6:	ab 80       	ldd	r10, Y+3	; 0x03
    4ea8:	bc 80       	ldd	r11, Y+4	; 0x04
    4eaa:	88 0c       	add	r8, r8
    4eac:	99 1c       	adc	r9, r9
    4eae:	aa 1c       	adc	r10, r10
    4eb0:	bb 1c       	adc	r11, r11
    4eb2:	88 0c       	add	r8, r8
    4eb4:	99 1c       	adc	r9, r9
    4eb6:	aa 1c       	adc	r10, r10
    4eb8:	bb 1c       	adc	r11, r11
    4eba:	88 0c       	add	r8, r8
    4ebc:	99 1c       	adc	r9, r9
    4ebe:	aa 1c       	adc	r10, r10
    4ec0:	bb 1c       	adc	r11, r11
    4ec2:	88 0c       	add	r8, r8
    4ec4:	99 1c       	adc	r9, r9
    4ec6:	aa 1c       	adc	r10, r10
    4ec8:	bb 1c       	adc	r11, r11
    4eca:	88 0c       	add	r8, r8
    4ecc:	99 1c       	adc	r9, r9
    4ece:	aa 1c       	adc	r10, r10
    4ed0:	bb 1c       	adc	r11, r11
    4ed2:	88 0c       	add	r8, r8
    4ed4:	99 1c       	adc	r9, r9
    4ed6:	aa 1c       	adc	r10, r10
    4ed8:	bb 1c       	adc	r11, r11
    4eda:	88 0c       	add	r8, r8
    4edc:	99 1c       	adc	r9, r9
    4ede:	aa 1c       	adc	r10, r10
    4ee0:	bb 1c       	adc	r11, r11
    4ee2:	4d 80       	ldd	r4, Y+5	; 0x05
    4ee4:	5e 80       	ldd	r5, Y+6	; 0x06
    4ee6:	6f 80       	ldd	r6, Y+7	; 0x07
    4ee8:	78 84       	ldd	r7, Y+8	; 0x08
    4eea:	c5 01       	movw	r24, r10
    4eec:	b4 01       	movw	r22, r8
    4eee:	a3 01       	movw	r20, r6
    4ef0:	92 01       	movw	r18, r4
    4ef2:	0e 94 69 32 	call	0x64d2	; 0x64d2 <__udivmodsi4>
    4ef6:	cc 0c       	add	r12, r12
    4ef8:	dd 1c       	adc	r13, r13
    4efa:	ee 1c       	adc	r14, r14
    4efc:	ff 1c       	adc	r15, r15
    4efe:	cc 0c       	add	r12, r12
    4f00:	dd 1c       	adc	r13, r13
    4f02:	ee 1c       	adc	r14, r14
    4f04:	ff 1c       	adc	r15, r15
    4f06:	cc 0c       	add	r12, r12
    4f08:	dd 1c       	adc	r13, r13
    4f0a:	ee 1c       	adc	r14, r14
    4f0c:	ff 1c       	adc	r15, r15
    4f0e:	cc 0c       	add	r12, r12
    4f10:	dd 1c       	adc	r13, r13
    4f12:	ee 1c       	adc	r14, r14
    4f14:	ff 1c       	adc	r15, r15
    4f16:	cc 0c       	add	r12, r12
    4f18:	dd 1c       	adc	r13, r13
    4f1a:	ee 1c       	adc	r14, r14
    4f1c:	ff 1c       	adc	r15, r15
    4f1e:	cc 0c       	add	r12, r12
    4f20:	dd 1c       	adc	r13, r13
    4f22:	ee 1c       	adc	r14, r14
    4f24:	ff 1c       	adc	r15, r15
    4f26:	cc 0c       	add	r12, r12
    4f28:	dd 1c       	adc	r13, r13
    4f2a:	ee 1c       	adc	r14, r14
    4f2c:	ff 1c       	adc	r15, r15
    4f2e:	c2 0e       	add	r12, r18
    4f30:	d3 1e       	adc	r13, r19
    4f32:	e4 1e       	adc	r14, r20
    4f34:	f5 1e       	adc	r15, r21
    4f36:	82 e0       	ldi	r24, 0x02	; 2
    4f38:	d8 1a       	sub	r13, r24
    4f3a:	e1 08       	sbc	r14, r1
    4f3c:	f1 08       	sbc	r15, r1
    4f3e:	f8 01       	movw	r30, r16
    4f40:	c0 82       	st	Z, r12
    4f42:	d1 82       	std	Z+1, r13	; 0x01
    4f44:	e2 82       	std	Z+2, r14	; 0x02
    4f46:	f3 82       	std	Z+3, r15	; 0x03
    4f48:	c3 01       	movw	r24, r6
    4f4a:	b2 01       	movw	r22, r4
    4f4c:	0e 94 31 32 	call	0x6462	; 0x6462 <__mulsi3>
    4f50:	86 1a       	sub	r8, r22
    4f52:	97 0a       	sbc	r9, r23
    4f54:	a8 0a       	sbc	r10, r24
    4f56:	b9 0a       	sbc	r11, r25
    4f58:	84 82       	std	Z+4, r8	; 0x04
    4f5a:	95 82       	std	Z+5, r9	; 0x05
    4f5c:	a6 82       	std	Z+6, r10	; 0x06
    4f5e:	b7 82       	std	Z+7, r11	; 0x07
    4f60:	40 86       	std	Z+8, r4	; 0x08
    4f62:	51 86       	std	Z+9, r5	; 0x09
    4f64:	62 86       	std	Z+10, r6	; 0x0a
    4f66:	73 86       	std	Z+11, r7	; 0x0b
    4f68:	80 e0       	ldi	r24, 0x00	; 0
    4f6a:	28 96       	adiw	r28, 0x08	; 8
    4f6c:	cd bf       	out	0x3d, r28	; 61
    4f6e:	de bf       	out	0x3e, r29	; 62
    4f70:	df 91       	pop	r29
    4f72:	cf 91       	pop	r28
    4f74:	1f 91       	pop	r17
    4f76:	0f 91       	pop	r16
    4f78:	ff 90       	pop	r15
    4f7a:	ef 90       	pop	r14
    4f7c:	df 90       	pop	r13
    4f7e:	cf 90       	pop	r12
    4f80:	bf 90       	pop	r11
    4f82:	af 90       	pop	r10
    4f84:	9f 90       	pop	r9
    4f86:	8f 90       	pop	r8
    4f88:	7f 90       	pop	r7
    4f8a:	6f 90       	pop	r6
    4f8c:	5f 90       	pop	r5
    4f8e:	4f 90       	pop	r4
    4f90:	08 95       	ret

00004f92 <_Z15multisynth_calcmP13u_si5351_regsPhS1_>:
    4f92:	2f 92       	push	r2
    4f94:	3f 92       	push	r3
    4f96:	4f 92       	push	r4
    4f98:	5f 92       	push	r5
    4f9a:	6f 92       	push	r6
    4f9c:	7f 92       	push	r7
    4f9e:	8f 92       	push	r8
    4fa0:	9f 92       	push	r9
    4fa2:	af 92       	push	r10
    4fa4:	bf 92       	push	r11
    4fa6:	cf 92       	push	r12
    4fa8:	df 92       	push	r13
    4faa:	ef 92       	push	r14
    4fac:	ff 92       	push	r15
    4fae:	0f 93       	push	r16
    4fb0:	1f 93       	push	r17
    4fb2:	cf 93       	push	r28
    4fb4:	df 93       	push	r29
    4fb6:	cd b7       	in	r28, 0x3d	; 61
    4fb8:	de b7       	in	r29, 0x3e	; 62
    4fba:	25 97       	sbiw	r28, 0x05	; 5
    4fbc:	cd bf       	out	0x3d, r28	; 61
    4fbe:	de bf       	out	0x3e, r29	; 62
    4fc0:	2b 01       	movw	r4, r22
    4fc2:	3c 01       	movw	r6, r24
    4fc4:	4a 83       	std	Y+2, r20	; 0x02
    4fc6:	5b 83       	std	Y+3, r21	; 0x03
    4fc8:	18 01       	movw	r2, r16
    4fca:	81 e0       	ldi	r24, 0x01	; 1
    4fcc:	f9 01       	movw	r30, r18
    4fce:	80 83       	st	Z, r24
    4fd0:	f0 e8       	ldi	r31, 0x80	; 128
    4fd2:	4f 16       	cp	r4, r31
    4fd4:	f1 ed       	ldi	r31, 0xD1	; 209
    4fd6:	5f 06       	cpc	r5, r31
    4fd8:	f0 ef       	ldi	r31, 0xF0	; 240
    4fda:	6f 06       	cpc	r6, r31
    4fdc:	f8 e0       	ldi	r31, 0x08	; 8
    4fde:	7f 06       	cpc	r7, r31
    4fe0:	d0 f0       	brcs	.+52     	; 0x5016 <_Z15multisynth_calcmP13u_si5351_regsPhS1_+0x84>
    4fe2:	c3 01       	movw	r24, r6
    4fe4:	b2 01       	movw	r22, r4
    4fe6:	66 0f       	add	r22, r22
    4fe8:	77 1f       	adc	r23, r23
    4fea:	88 1f       	adc	r24, r24
    4fec:	99 1f       	adc	r25, r25
    4fee:	66 0f       	add	r22, r22
    4ff0:	77 1f       	adc	r23, r23
    4ff2:	88 1f       	adc	r24, r24
    4ff4:	99 1f       	adc	r25, r25
    4ff6:	c1 2c       	mov	r12, r1
    4ff8:	d1 2c       	mov	r13, r1
    4ffa:	76 01       	movw	r14, r12
    4ffc:	68 94       	set
    4ffe:	c2 f8       	bld	r12, 2
    5000:	48 c0       	rjmp	.+144    	; 0x5092 <_Z15multisynth_calcmP13u_si5351_regsPhS1_+0x100>
    5002:	21 e0       	ldi	r18, 0x01	; 1
    5004:	2d 83       	std	Y+5, r18	; 0x05
    5006:	0d c0       	rjmp	.+26     	; 0x5022 <_Z15multisynth_calcmP13u_si5351_regsPhS1_+0x90>
    5008:	69 01       	movw	r12, r18
    500a:	7a 01       	movw	r14, r20
    500c:	31 e0       	ldi	r19, 0x01	; 1
    500e:	39 83       	std	Y+1, r19	; 0x01
    5010:	81 e0       	ldi	r24, 0x01	; 1
    5012:	8d 83       	std	Y+5, r24	; 0x05
    5014:	06 c0       	rjmp	.+12     	; 0x5022 <_Z15multisynth_calcmP13u_si5351_regsPhS1_+0x90>
    5016:	1c 82       	std	Y+4, r1	; 0x04
    5018:	19 82       	std	Y+1, r1	; 0x01
    501a:	1d 82       	std	Y+5, r1	; 0x05
    501c:	c1 2c       	mov	r12, r1
    501e:	d1 2c       	mov	r13, r1
    5020:	76 01       	movw	r14, r12
    5022:	8d 80       	ldd	r8, Y+5	; 0x05
    5024:	81 10       	cpse	r8, r1
    5026:	28 c0       	rjmp	.+80     	; 0x5078 <_Z15multisynth_calcmP13u_si5351_regsPhS1_+0xe6>
    5028:	9c 80       	ldd	r9, Y+4	; 0x04
    502a:	a9 2d       	mov	r26, r9
    502c:	b0 e0       	ldi	r27, 0x00	; 0
    502e:	a3 01       	movw	r20, r6
    5030:	92 01       	movw	r18, r4
    5032:	0e 94 c9 32 	call	0x6592	; 0x6592 <__muluhisi3>
    5036:	00 e0       	ldi	r16, 0x00	; 0
    5038:	19 ee       	ldi	r17, 0xE9	; 233
    503a:	24 ea       	ldi	r18, 0xA4	; 164
    503c:	35 e3       	ldi	r19, 0x35	; 53
    503e:	48 01       	movw	r8, r16
    5040:	59 01       	movw	r10, r18
    5042:	86 1a       	sub	r8, r22
    5044:	97 0a       	sbc	r9, r23
    5046:	a8 0a       	sbc	r10, r24
    5048:	b9 0a       	sbc	r11, r25
    504a:	c5 01       	movw	r24, r10
    504c:	b4 01       	movw	r22, r8
    504e:	2c 81       	ldd	r18, Y+4	; 0x04
    5050:	2e 5f       	subi	r18, 0xFE	; 254
    5052:	2c 83       	std	Y+4, r18	; 0x04
    5054:	81 14       	cp	r8, r1
    5056:	36 e4       	ldi	r19, 0x46	; 70
    5058:	93 06       	cpc	r9, r19
    505a:	33 ec       	ldi	r19, 0xC3	; 195
    505c:	a3 06       	cpc	r10, r19
    505e:	33 e2       	ldi	r19, 0x23	; 35
    5060:	b3 06       	cpc	r11, r19
    5062:	78 f2       	brcs	.-98     	; 0x5002 <_Z15multisynth_calcmP13u_si5351_regsPhS1_+0x70>
    5064:	a3 01       	movw	r20, r6
    5066:	92 01       	movw	r18, r4
    5068:	0e 94 69 32 	call	0x64d2	; 0x64d2 <__udivmodsi4>
    506c:	24 30       	cpi	r18, 0x04	; 4
    506e:	31 05       	cpc	r19, r1
    5070:	41 05       	cpc	r20, r1
    5072:	51 05       	cpc	r21, r1
    5074:	48 f6       	brcc	.-110    	; 0x5008 <_Z15multisynth_calcmP13u_si5351_regsPhS1_+0x76>
    5076:	d5 cf       	rjmp	.-86     	; 0x5022 <_Z15multisynth_calcmP13u_si5351_regsPhS1_+0x90>
    5078:	89 80       	ldd	r8, Y+1	; 0x01
    507a:	88 20       	and	r8, r8
    507c:	39 f0       	breq	.+14     	; 0x508c <_Z15multisynth_calcmP13u_si5351_regsPhS1_+0xfa>
    507e:	a7 01       	movw	r20, r14
    5080:	96 01       	movw	r18, r12
    5082:	c3 01       	movw	r24, r6
    5084:	b2 01       	movw	r22, r4
    5086:	0e 94 31 32 	call	0x6462	; 0x6462 <__mulsi3>
    508a:	03 c0       	rjmp	.+6      	; 0x5092 <_Z15multisynth_calcmP13u_si5351_regsPhS1_+0x100>
    508c:	60 e0       	ldi	r22, 0x00	; 0
    508e:	70 e0       	ldi	r23, 0x00	; 0
    5090:	cb 01       	movw	r24, r22
    5092:	21 e0       	ldi	r18, 0x01	; 1
    5094:	34 e0       	ldi	r19, 0x04	; 4
    5096:	c3 16       	cp	r12, r19
    5098:	d1 04       	cpc	r13, r1
    509a:	e1 04       	cpc	r14, r1
    509c:	f1 04       	cpc	r15, r1
    509e:	09 f0       	breq	.+2      	; 0x50a2 <_Z15multisynth_calcmP13u_si5351_regsPhS1_+0x110>
    50a0:	20 e0       	ldi	r18, 0x00	; 0
    50a2:	f1 01       	movw	r30, r2
    50a4:	20 83       	st	Z, r18
    50a6:	cc 0c       	add	r12, r12
    50a8:	dd 1c       	adc	r13, r13
    50aa:	ee 1c       	adc	r14, r14
    50ac:	ff 1c       	adc	r15, r15
    50ae:	cc 0c       	add	r12, r12
    50b0:	dd 1c       	adc	r13, r13
    50b2:	ee 1c       	adc	r14, r14
    50b4:	ff 1c       	adc	r15, r15
    50b6:	cc 0c       	add	r12, r12
    50b8:	dd 1c       	adc	r13, r13
    50ba:	ee 1c       	adc	r14, r14
    50bc:	ff 1c       	adc	r15, r15
    50be:	cc 0c       	add	r12, r12
    50c0:	dd 1c       	adc	r13, r13
    50c2:	ee 1c       	adc	r14, r14
    50c4:	ff 1c       	adc	r15, r15
    50c6:	cc 0c       	add	r12, r12
    50c8:	dd 1c       	adc	r13, r13
    50ca:	ee 1c       	adc	r14, r14
    50cc:	ff 1c       	adc	r15, r15
    50ce:	cc 0c       	add	r12, r12
    50d0:	dd 1c       	adc	r13, r13
    50d2:	ee 1c       	adc	r14, r14
    50d4:	ff 1c       	adc	r15, r15
    50d6:	cc 0c       	add	r12, r12
    50d8:	dd 1c       	adc	r13, r13
    50da:	ee 1c       	adc	r14, r14
    50dc:	ff 1c       	adc	r15, r15
    50de:	f2 e0       	ldi	r31, 0x02	; 2
    50e0:	df 1a       	sub	r13, r31
    50e2:	e1 08       	sbc	r14, r1
    50e4:	f1 08       	sbc	r15, r1
    50e6:	ea 81       	ldd	r30, Y+2	; 0x02
    50e8:	fb 81       	ldd	r31, Y+3	; 0x03
    50ea:	c0 82       	st	Z, r12
    50ec:	d1 82       	std	Z+1, r13	; 0x01
    50ee:	e2 82       	std	Z+2, r14	; 0x02
    50f0:	f3 82       	std	Z+3, r15	; 0x03
    50f2:	14 82       	std	Z+4, r1	; 0x04
    50f4:	15 82       	std	Z+5, r1	; 0x05
    50f6:	16 82       	std	Z+6, r1	; 0x06
    50f8:	17 82       	std	Z+7, r1	; 0x07
    50fa:	01 e0       	ldi	r16, 0x01	; 1
    50fc:	10 e0       	ldi	r17, 0x00	; 0
    50fe:	20 e0       	ldi	r18, 0x00	; 0
    5100:	30 e0       	ldi	r19, 0x00	; 0
    5102:	00 87       	std	Z+8, r16	; 0x08
    5104:	11 87       	std	Z+9, r17	; 0x09
    5106:	22 87       	std	Z+10, r18	; 0x0a
    5108:	33 87       	std	Z+11, r19	; 0x0b
    510a:	25 96       	adiw	r28, 0x05	; 5
    510c:	cd bf       	out	0x3d, r28	; 61
    510e:	de bf       	out	0x3e, r29	; 62
    5110:	df 91       	pop	r29
    5112:	cf 91       	pop	r28
    5114:	1f 91       	pop	r17
    5116:	0f 91       	pop	r16
    5118:	ff 90       	pop	r15
    511a:	ef 90       	pop	r14
    511c:	df 90       	pop	r13
    511e:	cf 90       	pop	r12
    5120:	bf 90       	pop	r11
    5122:	af 90       	pop	r10
    5124:	9f 90       	pop	r9
    5126:	8f 90       	pop	r8
    5128:	7f 90       	pop	r7
    512a:	6f 90       	pop	r6
    512c:	5f 90       	pop	r5
    512e:	4f 90       	pop	r4
    5130:	3f 90       	pop	r3
    5132:	2f 90       	pop	r2
    5134:	08 95       	ret

00005136 <_Z19multisynth_estimatemP13u_si5351_regsPhS1_>:
    5136:	2f 92       	push	r2
    5138:	3f 92       	push	r3
    513a:	4f 92       	push	r4
    513c:	5f 92       	push	r5
    513e:	6f 92       	push	r6
    5140:	7f 92       	push	r7
    5142:	8f 92       	push	r8
    5144:	9f 92       	push	r9
    5146:	af 92       	push	r10
    5148:	bf 92       	push	r11
    514a:	cf 92       	push	r12
    514c:	df 92       	push	r13
    514e:	ef 92       	push	r14
    5150:	ff 92       	push	r15
    5152:	0f 93       	push	r16
    5154:	1f 93       	push	r17
    5156:	cf 93       	push	r28
    5158:	df 93       	push	r29
    515a:	cd b7       	in	r28, 0x3d	; 61
    515c:	de b7       	in	r29, 0x3e	; 62
    515e:	62 97       	sbiw	r28, 0x12	; 18
    5160:	cd bf       	out	0x3d, r28	; 61
    5162:	de bf       	out	0x3e, r29	; 62
    5164:	4b 01       	movw	r8, r22
    5166:	5c 01       	movw	r10, r24
    5168:	1a 01       	movw	r2, r20
    516a:	29 8b       	std	Y+17, r18	; 0x11
    516c:	3a 8b       	std	Y+18, r19	; 0x12
    516e:	60 91 e0 45 	lds	r22, 0x45E0	; 0x8045e0 <_ZL8freqVCOB>
    5172:	70 91 e1 45 	lds	r23, 0x45E1	; 0x8045e1 <_ZL8freqVCOB+0x1>
    5176:	80 91 e2 45 	lds	r24, 0x45E2	; 0x8045e2 <_ZL8freqVCOB+0x2>
    517a:	90 91 e3 45 	lds	r25, 0x45E3	; 0x8045e3 <_ZL8freqVCOB+0x3>
    517e:	a5 01       	movw	r20, r10
    5180:	94 01       	movw	r18, r8
    5182:	0e 94 69 32 	call	0x64d2	; 0x64d2 <__udivmodsi4>
    5186:	29 87       	std	Y+9, r18	; 0x09
    5188:	3a 87       	std	Y+10, r19	; 0x0a
    518a:	4b 87       	std	Y+11, r20	; 0x0b
    518c:	5c 87       	std	Y+12, r21	; 0x0c
    518e:	69 01       	movw	r12, r18
    5190:	7a 01       	movw	r14, r20
    5192:	69 83       	std	Y+1, r22	; 0x01
    5194:	7a 83       	std	Y+2, r23	; 0x02
    5196:	8b 83       	std	Y+3, r24	; 0x03
    5198:	9c 83       	std	Y+4, r25	; 0x04
    519a:	8d 82       	std	Y+5, r8	; 0x05
    519c:	9e 82       	std	Y+6, r9	; 0x06
    519e:	af 82       	std	Y+7, r10	; 0x07
    51a0:	b8 86       	std	Y+8, r11	; 0x08
    51a2:	be 01       	movw	r22, r28
    51a4:	6b 5f       	subi	r22, 0xFB	; 251
    51a6:	7f 4f       	sbci	r23, 0xFF	; 255
    51a8:	ce 01       	movw	r24, r28
    51aa:	01 96       	adiw	r24, 0x01	; 1
    51ac:	0e 94 b1 26 	call	0x4d62	; 0x4d62 <_Z13reduce_by_gcdPmS_>
    51b0:	80 91 e0 45 	lds	r24, 0x45E0	; 0x8045e0 <_ZL8freqVCOB>
    51b4:	90 91 e1 45 	lds	r25, 0x45E1	; 0x8045e1 <_ZL8freqVCOB+0x1>
    51b8:	a0 91 e2 45 	lds	r26, 0x45E2	; 0x8045e2 <_ZL8freqVCOB+0x2>
    51bc:	b0 91 e3 45 	lds	r27, 0x45E3	; 0x8045e3 <_ZL8freqVCOB+0x3>
    51c0:	8d 87       	std	Y+13, r24	; 0x0d
    51c2:	9e 87       	std	Y+14, r25	; 0x0e
    51c4:	af 87       	std	Y+15, r26	; 0x0f
    51c6:	b8 8b       	std	Y+16, r27	; 0x10
    51c8:	4d 80       	ldd	r4, Y+5	; 0x05
    51ca:	5e 80       	ldd	r5, Y+6	; 0x06
    51cc:	6f 80       	ldd	r6, Y+7	; 0x07
    51ce:	78 84       	ldd	r7, Y+8	; 0x08
    51d0:	29 85       	ldd	r18, Y+9	; 0x09
    51d2:	3a 85       	ldd	r19, Y+10	; 0x0a
    51d4:	4b 85       	ldd	r20, Y+11	; 0x0b
    51d6:	5c 85       	ldd	r21, Y+12	; 0x0c
    51d8:	c3 01       	movw	r24, r6
    51da:	b2 01       	movw	r22, r4
    51dc:	0e 94 31 32 	call	0x6462	; 0x6462 <__mulsi3>
    51e0:	89 80       	ldd	r8, Y+1	; 0x01
    51e2:	9a 80       	ldd	r9, Y+2	; 0x02
    51e4:	ab 80       	ldd	r10, Y+3	; 0x03
    51e6:	bc 80       	ldd	r11, Y+4	; 0x04
    51e8:	9b 01       	movw	r18, r22
    51ea:	ac 01       	movw	r20, r24
    51ec:	28 0d       	add	r18, r8
    51ee:	39 1d       	adc	r19, r9
    51f0:	4a 1d       	adc	r20, r10
    51f2:	5b 1d       	adc	r21, r11
    51f4:	6d 85       	ldd	r22, Y+13	; 0x0d
    51f6:	7e 85       	ldd	r23, Y+14	; 0x0e
    51f8:	8f 85       	ldd	r24, Y+15	; 0x0f
    51fa:	98 89       	ldd	r25, Y+16	; 0x10
    51fc:	0e 94 69 32 	call	0x64d2	; 0x64d2 <__udivmodsi4>
    5200:	ca 01       	movw	r24, r20
    5202:	b9 01       	movw	r22, r18
    5204:	a3 01       	movw	r20, r6
    5206:	92 01       	movw	r18, r4
    5208:	0e 94 31 32 	call	0x6462	; 0x6462 <__mulsi3>
    520c:	6d 87       	std	Y+13, r22	; 0x0d
    520e:	7e 87       	std	Y+14, r23	; 0x0e
    5210:	8f 87       	std	Y+15, r24	; 0x0f
    5212:	98 8b       	std	Y+16, r25	; 0x10
    5214:	89 28       	or	r8, r9
    5216:	8a 28       	or	r8, r10
    5218:	8b 28       	or	r8, r11
    521a:	29 f4       	brne	.+10     	; 0x5226 <_Z19multisynth_estimatemP13u_si5351_regsPhS1_+0xf0>
    521c:	99 85       	ldd	r25, Y+9	; 0x09
    521e:	90 ff       	sbrs	r25, 0
    5220:	04 c0       	rjmp	.+8      	; 0x522a <_Z19multisynth_estimatemP13u_si5351_regsPhS1_+0xf4>
    5222:	80 e0       	ldi	r24, 0x00	; 0
    5224:	03 c0       	rjmp	.+6      	; 0x522c <_Z19multisynth_estimatemP13u_si5351_regsPhS1_+0xf6>
    5226:	80 e0       	ldi	r24, 0x00	; 0
    5228:	01 c0       	rjmp	.+2      	; 0x522c <_Z19multisynth_estimatemP13u_si5351_regsPhS1_+0xf6>
    522a:	81 e0       	ldi	r24, 0x01	; 1
    522c:	a9 89       	ldd	r26, Y+17	; 0x11
    522e:	ba 89       	ldd	r27, Y+18	; 0x12
    5230:	8c 93       	st	X, r24
    5232:	b4 e0       	ldi	r27, 0x04	; 4
    5234:	cb 16       	cp	r12, r27
    5236:	d1 04       	cpc	r13, r1
    5238:	e1 04       	cpc	r14, r1
    523a:	f1 04       	cpc	r15, r1
    523c:	21 f4       	brne	.+8      	; 0x5246 <_Z19multisynth_estimatemP13u_si5351_regsPhS1_+0x110>
    523e:	81 11       	cpse	r24, r1
    5240:	04 c0       	rjmp	.+8      	; 0x524a <_Z19multisynth_estimatemP13u_si5351_regsPhS1_+0x114>
    5242:	80 e0       	ldi	r24, 0x00	; 0
    5244:	03 c0       	rjmp	.+6      	; 0x524c <_Z19multisynth_estimatemP13u_si5351_regsPhS1_+0x116>
    5246:	80 e0       	ldi	r24, 0x00	; 0
    5248:	01 c0       	rjmp	.+2      	; 0x524c <_Z19multisynth_estimatemP13u_si5351_regsPhS1_+0x116>
    524a:	81 e0       	ldi	r24, 0x01	; 1
    524c:	f8 01       	movw	r30, r16
    524e:	80 83       	st	Z, r24
    5250:	88 23       	and	r24, r24
    5252:	a1 f0       	breq	.+40     	; 0x527c <_Z19multisynth_estimatemP13u_si5351_regsPhS1_+0x146>
    5254:	d1 01       	movw	r26, r2
    5256:	1d 92       	st	X+, r1
    5258:	1d 92       	st	X+, r1
    525a:	1d 92       	st	X+, r1
    525c:	1c 92       	st	X, r1
    525e:	13 97       	sbiw	r26, 0x03	; 3
    5260:	f1 01       	movw	r30, r2
    5262:	14 82       	std	Z+4, r1	; 0x04
    5264:	15 82       	std	Z+5, r1	; 0x05
    5266:	16 82       	std	Z+6, r1	; 0x06
    5268:	17 82       	std	Z+7, r1	; 0x07
    526a:	81 e0       	ldi	r24, 0x01	; 1
    526c:	90 e0       	ldi	r25, 0x00	; 0
    526e:	a0 e0       	ldi	r26, 0x00	; 0
    5270:	b0 e0       	ldi	r27, 0x00	; 0
    5272:	80 87       	std	Z+8, r24	; 0x08
    5274:	91 87       	std	Z+9, r25	; 0x09
    5276:	a2 87       	std	Z+10, r26	; 0x0a
    5278:	b3 87       	std	Z+11, r27	; 0x0b
    527a:	69 c0       	rjmp	.+210    	; 0x534e <_Z19multisynth_estimatemP13u_si5351_regsPhS1_+0x218>
    527c:	89 80       	ldd	r8, Y+1	; 0x01
    527e:	9a 80       	ldd	r9, Y+2	; 0x02
    5280:	ab 80       	ldd	r10, Y+3	; 0x03
    5282:	bc 80       	ldd	r11, Y+4	; 0x04
    5284:	88 0c       	add	r8, r8
    5286:	99 1c       	adc	r9, r9
    5288:	aa 1c       	adc	r10, r10
    528a:	bb 1c       	adc	r11, r11
    528c:	88 0c       	add	r8, r8
    528e:	99 1c       	adc	r9, r9
    5290:	aa 1c       	adc	r10, r10
    5292:	bb 1c       	adc	r11, r11
    5294:	88 0c       	add	r8, r8
    5296:	99 1c       	adc	r9, r9
    5298:	aa 1c       	adc	r10, r10
    529a:	bb 1c       	adc	r11, r11
    529c:	88 0c       	add	r8, r8
    529e:	99 1c       	adc	r9, r9
    52a0:	aa 1c       	adc	r10, r10
    52a2:	bb 1c       	adc	r11, r11
    52a4:	88 0c       	add	r8, r8
    52a6:	99 1c       	adc	r9, r9
    52a8:	aa 1c       	adc	r10, r10
    52aa:	bb 1c       	adc	r11, r11
    52ac:	88 0c       	add	r8, r8
    52ae:	99 1c       	adc	r9, r9
    52b0:	aa 1c       	adc	r10, r10
    52b2:	bb 1c       	adc	r11, r11
    52b4:	88 0c       	add	r8, r8
    52b6:	99 1c       	adc	r9, r9
    52b8:	aa 1c       	adc	r10, r10
    52ba:	bb 1c       	adc	r11, r11
    52bc:	4d 80       	ldd	r4, Y+5	; 0x05
    52be:	5e 80       	ldd	r5, Y+6	; 0x06
    52c0:	6f 80       	ldd	r6, Y+7	; 0x07
    52c2:	78 84       	ldd	r7, Y+8	; 0x08
    52c4:	c5 01       	movw	r24, r10
    52c6:	b4 01       	movw	r22, r8
    52c8:	a3 01       	movw	r20, r6
    52ca:	92 01       	movw	r18, r4
    52cc:	0e 94 69 32 	call	0x64d2	; 0x64d2 <__udivmodsi4>
    52d0:	c9 84       	ldd	r12, Y+9	; 0x09
    52d2:	da 84       	ldd	r13, Y+10	; 0x0a
    52d4:	eb 84       	ldd	r14, Y+11	; 0x0b
    52d6:	fc 84       	ldd	r15, Y+12	; 0x0c
    52d8:	cc 0c       	add	r12, r12
    52da:	dd 1c       	adc	r13, r13
    52dc:	ee 1c       	adc	r14, r14
    52de:	ff 1c       	adc	r15, r15
    52e0:	cc 0c       	add	r12, r12
    52e2:	dd 1c       	adc	r13, r13
    52e4:	ee 1c       	adc	r14, r14
    52e6:	ff 1c       	adc	r15, r15
    52e8:	cc 0c       	add	r12, r12
    52ea:	dd 1c       	adc	r13, r13
    52ec:	ee 1c       	adc	r14, r14
    52ee:	ff 1c       	adc	r15, r15
    52f0:	cc 0c       	add	r12, r12
    52f2:	dd 1c       	adc	r13, r13
    52f4:	ee 1c       	adc	r14, r14
    52f6:	ff 1c       	adc	r15, r15
    52f8:	cc 0c       	add	r12, r12
    52fa:	dd 1c       	adc	r13, r13
    52fc:	ee 1c       	adc	r14, r14
    52fe:	ff 1c       	adc	r15, r15
    5300:	cc 0c       	add	r12, r12
    5302:	dd 1c       	adc	r13, r13
    5304:	ee 1c       	adc	r14, r14
    5306:	ff 1c       	adc	r15, r15
    5308:	cc 0c       	add	r12, r12
    530a:	dd 1c       	adc	r13, r13
    530c:	ee 1c       	adc	r14, r14
    530e:	ff 1c       	adc	r15, r15
    5310:	c2 0e       	add	r12, r18
    5312:	d3 1e       	adc	r13, r19
    5314:	e4 1e       	adc	r14, r20
    5316:	f5 1e       	adc	r15, r21
    5318:	f2 e0       	ldi	r31, 0x02	; 2
    531a:	df 1a       	sub	r13, r31
    531c:	e1 08       	sbc	r14, r1
    531e:	f1 08       	sbc	r15, r1
    5320:	d1 01       	movw	r26, r2
    5322:	cd 92       	st	X+, r12
    5324:	dd 92       	st	X+, r13
    5326:	ed 92       	st	X+, r14
    5328:	fc 92       	st	X, r15
    532a:	13 97       	sbiw	r26, 0x03	; 3
    532c:	c3 01       	movw	r24, r6
    532e:	b2 01       	movw	r22, r4
    5330:	0e 94 31 32 	call	0x6462	; 0x6462 <__mulsi3>
    5334:	86 1a       	sub	r8, r22
    5336:	97 0a       	sbc	r9, r23
    5338:	a8 0a       	sbc	r10, r24
    533a:	b9 0a       	sbc	r11, r25
    533c:	f1 01       	movw	r30, r2
    533e:	84 82       	std	Z+4, r8	; 0x04
    5340:	95 82       	std	Z+5, r9	; 0x05
    5342:	a6 82       	std	Z+6, r10	; 0x06
    5344:	b7 82       	std	Z+7, r11	; 0x07
    5346:	40 86       	std	Z+8, r4	; 0x08
    5348:	51 86       	std	Z+9, r5	; 0x09
    534a:	62 86       	std	Z+10, r6	; 0x0a
    534c:	73 86       	std	Z+11, r7	; 0x0b
    534e:	6d 85       	ldd	r22, Y+13	; 0x0d
    5350:	7e 85       	ldd	r23, Y+14	; 0x0e
    5352:	8f 85       	ldd	r24, Y+15	; 0x0f
    5354:	98 89       	ldd	r25, Y+16	; 0x10
    5356:	62 96       	adiw	r28, 0x12	; 18
    5358:	cd bf       	out	0x3d, r28	; 61
    535a:	de bf       	out	0x3e, r29	; 62
    535c:	df 91       	pop	r29
    535e:	cf 91       	pop	r28
    5360:	1f 91       	pop	r17
    5362:	0f 91       	pop	r16
    5364:	ff 90       	pop	r15
    5366:	ef 90       	pop	r14
    5368:	df 90       	pop	r13
    536a:	cf 90       	pop	r12
    536c:	bf 90       	pop	r11
    536e:	af 90       	pop	r10
    5370:	9f 90       	pop	r9
    5372:	8f 90       	pop	r8
    5374:	7f 90       	pop	r7
    5376:	6f 90       	pop	r6
    5378:	5f 90       	pop	r5
    537a:	4f 90       	pop	r4
    537c:	3f 90       	pop	r3
    537e:	2f 90       	pop	r2
    5380:	08 95       	ret

00005382 <_Z17si5351_write_bulkPhh>:
    5382:	cf 93       	push	r28
    5384:	c6 2f       	mov	r28, r22
    5386:	46 2f       	mov	r20, r22
    5388:	bc 01       	movw	r22, r24
    538a:	80 ec       	ldi	r24, 0xC0	; 192
    538c:	0e 94 d3 1f 	call	0x3fa6	; 0x3fa6 <I2C_1_SendData>
    5390:	91 e0       	ldi	r25, 0x01	; 1
    5392:	c8 13       	cpse	r28, r24
    5394:	01 c0       	rjmp	.+2      	; 0x5398 <_Z17si5351_write_bulkPhh+0x16>
    5396:	90 e0       	ldi	r25, 0x00	; 0
    5398:	89 2f       	mov	r24, r25
    539a:	cf 91       	pop	r28
    539c:	08 95       	ret

0000539e <_Z7set_pllm10si5351_pll>:
    539e:	1f 93       	push	r17
    53a0:	cf 93       	push	r28
    53a2:	df 93       	push	r29
    53a4:	cd b7       	in	r28, 0x3d	; 61
    53a6:	de b7       	in	r29, 0x3e	; 62
    53a8:	66 97       	sbiw	r28, 0x16	; 22
    53aa:	cd bf       	out	0x3d, r28	; 61
    53ac:	de bf       	out	0x3e, r29	; 62
    53ae:	14 2f       	mov	r17, r20
    53b0:	ae 01       	movw	r20, r28
    53b2:	4f 5f       	subi	r20, 0xFF	; 255
    53b4:	5f 4f       	sbci	r21, 0xFF	; 255
    53b6:	0e 94 1e 27 	call	0x4e3c	; 0x4e3c <_Z8pll_calcmP13u_si5351_regs>
    53ba:	8a 85       	ldd	r24, Y+10	; 0x0a
    53bc:	8e 87       	std	Y+14, r24	; 0x0e
    53be:	89 85       	ldd	r24, Y+9	; 0x09
    53c0:	8f 87       	std	Y+15, r24	; 0x0f
    53c2:	8b 81       	ldd	r24, Y+3	; 0x03
    53c4:	83 70       	andi	r24, 0x03	; 3
    53c6:	88 8b       	std	Y+16, r24	; 0x10
    53c8:	8a 81       	ldd	r24, Y+2	; 0x02
    53ca:	89 8b       	std	Y+17, r24	; 0x11
    53cc:	89 81       	ldd	r24, Y+1	; 0x01
    53ce:	8a 8b       	std	Y+18, r24	; 0x12
    53d0:	9b 85       	ldd	r25, Y+11	; 0x0b
    53d2:	8f 81       	ldd	r24, Y+7	; 0x07
    53d4:	8f 70       	andi	r24, 0x0F	; 15
    53d6:	20 e1       	ldi	r18, 0x10	; 16
    53d8:	92 9f       	mul	r25, r18
    53da:	80 0d       	add	r24, r0
    53dc:	11 24       	eor	r1, r1
    53de:	8b 8b       	std	Y+19, r24	; 0x13
    53e0:	8e 81       	ldd	r24, Y+6	; 0x06
    53e2:	8c 8b       	std	Y+20, r24	; 0x14
    53e4:	8d 81       	ldd	r24, Y+5	; 0x05
    53e6:	8d 8b       	std	Y+21, r24	; 0x15
    53e8:	11 30       	cpi	r17, 0x01	; 1
    53ea:	41 f4       	brne	.+16     	; 0x53fc <_Z7set_pllm10si5351_pll+0x5e>
    53ec:	8a e1       	ldi	r24, 0x1A	; 26
    53ee:	8d 87       	std	Y+13, r24	; 0x0d
    53f0:	69 e0       	ldi	r22, 0x09	; 9
    53f2:	ce 01       	movw	r24, r28
    53f4:	0d 96       	adiw	r24, 0x0d	; 13
    53f6:	0e 94 c1 29 	call	0x5382	; 0x5382 <_Z17si5351_write_bulkPhh>
    53fa:	07 c0       	rjmp	.+14     	; 0x540a <_Z7set_pllm10si5351_pll+0x6c>
    53fc:	82 e2       	ldi	r24, 0x22	; 34
    53fe:	8d 87       	std	Y+13, r24	; 0x0d
    5400:	69 e0       	ldi	r22, 0x09	; 9
    5402:	ce 01       	movw	r24, r28
    5404:	0d 96       	adiw	r24, 0x0d	; 13
    5406:	0e 94 c1 29 	call	0x5382	; 0x5382 <_Z17si5351_write_bulkPhh>
    540a:	66 96       	adiw	r28, 0x16	; 22
    540c:	cd bf       	out	0x3d, r28	; 61
    540e:	de bf       	out	0x3e, r29	; 62
    5410:	df 91       	pop	r29
    5412:	cf 91       	pop	r28
    5414:	1f 91       	pop	r17
    5416:	08 95       	ret

00005418 <_Z16si5351_read_bulkPhh>:
    5418:	cf 93       	push	r28
    541a:	c6 2f       	mov	r28, r22
    541c:	46 2f       	mov	r20, r22
    541e:	bc 01       	movw	r22, r24
    5420:	80 ec       	ldi	r24, 0xC0	; 192
    5422:	0e 94 08 20 	call	0x4010	; 0x4010 <I2C_1_GetData>
    5426:	91 e0       	ldi	r25, 0x01	; 1
    5428:	c8 13       	cpse	r28, r24
    542a:	01 c0       	rjmp	.+2      	; 0x542e <_Z16si5351_read_bulkPhh+0x16>
    542c:	90 e0       	ldi	r25, 0x00	; 0
    542e:	89 2f       	mov	r24, r25
    5430:	cf 91       	pop	r28
    5432:	08 95       	ret

00005434 <si5351_clock_enable>:
    5434:	0f 93       	push	r16
    5436:	1f 93       	push	r17
    5438:	cf 93       	push	r28
    543a:	df 93       	push	r29
    543c:	00 d0       	rcall	.+0      	; 0x543e <si5351_clock_enable+0xa>
    543e:	cd b7       	in	r28, 0x3d	; 61
    5440:	de b7       	in	r29, 0x3e	; 62
    5442:	18 2f       	mov	r17, r24
    5444:	06 2f       	mov	r16, r22
    5446:	83 e0       	ldi	r24, 0x03	; 3
    5448:	89 83       	std	Y+1, r24	; 0x01
    544a:	61 e0       	ldi	r22, 0x01	; 1
    544c:	ce 01       	movw	r24, r28
    544e:	01 96       	adiw	r24, 0x01	; 1
    5450:	0e 94 0c 2a 	call	0x5418	; 0x5418 <_Z16si5351_read_bulkPhh>
    5454:	81 11       	cpse	r24, r1
    5456:	23 c0       	rjmp	.+70     	; 0x549e <si5351_clock_enable+0x6a>
    5458:	99 81       	ldd	r25, Y+1	; 0x01
    545a:	00 23       	and	r16, r16
    545c:	59 f0       	breq	.+22     	; 0x5474 <si5351_clock_enable+0x40>
    545e:	21 e0       	ldi	r18, 0x01	; 1
    5460:	30 e0       	ldi	r19, 0x00	; 0
    5462:	02 c0       	rjmp	.+4      	; 0x5468 <si5351_clock_enable+0x34>
    5464:	22 0f       	add	r18, r18
    5466:	33 1f       	adc	r19, r19
    5468:	1a 95       	dec	r17
    546a:	e2 f7       	brpl	.-8      	; 0x5464 <si5351_clock_enable+0x30>
    546c:	82 2f       	mov	r24, r18
    546e:	80 95       	com	r24
    5470:	89 23       	and	r24, r25
    5472:	09 c0       	rjmp	.+18     	; 0x5486 <si5351_clock_enable+0x52>
    5474:	21 e0       	ldi	r18, 0x01	; 1
    5476:	30 e0       	ldi	r19, 0x00	; 0
    5478:	02 c0       	rjmp	.+4      	; 0x547e <si5351_clock_enable+0x4a>
    547a:	22 0f       	add	r18, r18
    547c:	33 1f       	adc	r19, r19
    547e:	1a 95       	dec	r17
    5480:	e2 f7       	brpl	.-8      	; 0x547a <si5351_clock_enable+0x46>
    5482:	89 2f       	mov	r24, r25
    5484:	82 2b       	or	r24, r18
    5486:	93 e0       	ldi	r25, 0x03	; 3
    5488:	99 83       	std	Y+1, r25	; 0x01
    548a:	8a 83       	std	Y+2, r24	; 0x02
    548c:	62 e0       	ldi	r22, 0x02	; 2
    548e:	ce 01       	movw	r24, r28
    5490:	01 96       	adiw	r24, 0x01	; 1
    5492:	0e 94 c1 29 	call	0x5382	; 0x5382 <_Z17si5351_write_bulkPhh>
    5496:	88 23       	and	r24, r24
    5498:	21 f0       	breq	.+8      	; 0x54a2 <si5351_clock_enable+0x6e>
    549a:	8c ef       	ldi	r24, 0xFC	; 252
    549c:	03 c0       	rjmp	.+6      	; 0x54a4 <si5351_clock_enable+0x70>
    549e:	8c ef       	ldi	r24, 0xFC	; 252
    54a0:	01 c0       	rjmp	.+2      	; 0x54a4 <si5351_clock_enable+0x70>
    54a2:	80 e0       	ldi	r24, 0x00	; 0
    54a4:	0f 90       	pop	r0
    54a6:	0f 90       	pop	r0
    54a8:	df 91       	pop	r29
    54aa:	cf 91       	pop	r28
    54ac:	1f 91       	pop	r17
    54ae:	0f 91       	pop	r16
    54b0:	08 95       	ret

000054b2 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll>:
 *
 * Set the desired PLL source for a multisynth.
 *
 */
	void set_multisynth_registers_source(Si5351_clock clk, Si5351_pll pll)
	{
    54b2:	0f 93       	push	r16
    54b4:	1f 93       	push	r17
    54b6:	cf 93       	push	r28
    54b8:	df 93       	push	r29
    54ba:	00 d0       	rcall	.+0      	; 0x54bc <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0xa>
    54bc:	cd b7       	in	r28, 0x3d	; 61
    54be:	de b7       	in	r29, 0x3e	; 62
    54c0:	06 2f       	mov	r16, r22
		uint8_t reg_val;
		uint8_t data[2];
		
		data[0] = SI5351_CLK0_CTRL + (uint8_t)clk;
    54c2:	10 e1       	ldi	r17, 0x10	; 16
    54c4:	18 0f       	add	r17, r24
    54c6:	19 83       	std	Y+1, r17	; 0x01

		if(si5351_read_bulk(data, 1))
    54c8:	61 e0       	ldi	r22, 0x01	; 1
    54ca:	ce 01       	movw	r24, r28
    54cc:	01 96       	adiw	r24, 0x01	; 1
    54ce:	0e 94 0c 2a 	call	0x5418	; 0x5418 <_Z16si5351_read_bulkPhh>
    54d2:	81 11       	cpse	r24, r1
    54d4:	0f c0       	rjmp	.+30     	; 0x54f4 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x42>
		{
			return;
		}
		
		reg_val = data[0];
    54d6:	89 81       	ldd	r24, Y+1	; 0x01

		if(pll == SI5351_PLLA)
    54d8:	01 30       	cpi	r16, 0x01	; 1
    54da:	11 f4       	brne	.+4      	; 0x54e0 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x2e>
		{
			reg_val &= ~(SI5351_CLK_PLL_SELECT);
    54dc:	8f 7d       	andi	r24, 0xDF	; 223
    54de:	03 c0       	rjmp	.+6      	; 0x54e6 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x34>
		}
		else if(pll == SI5351_PLLB)
    54e0:	02 30       	cpi	r16, 0x02	; 2
    54e2:	09 f4       	brne	.+2      	; 0x54e6 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x34>
		{
			reg_val |= SI5351_CLK_PLL_SELECT;
    54e4:	80 62       	ori	r24, 0x20	; 32
		}

		data[0] = SI5351_CLK0_CTRL + (uint8_t)clk;
    54e6:	19 83       	std	Y+1, r17	; 0x01
		data[1] = reg_val;
    54e8:	8a 83       	std	Y+2, r24	; 0x02
		si5351_write_bulk(data, 2);
    54ea:	62 e0       	ldi	r22, 0x02	; 2
    54ec:	ce 01       	movw	r24, r28
    54ee:	01 96       	adiw	r24, 0x01	; 1
    54f0:	0e 94 c1 29 	call	0x5382	; 0x5382 <_Z17si5351_write_bulkPhh>
	}
    54f4:	0f 90       	pop	r0
    54f6:	0f 90       	pop	r0
    54f8:	df 91       	pop	r29
    54fa:	cf 91       	pop	r28
    54fc:	1f 91       	pop	r17
    54fe:	0f 91       	pop	r16
    5500:	08 95       	ret

00005502 <_Z16set_integer_mode12si5351_clockh>:
 * enable - 1 to enable, 0 to disable
 *
 * Set the indicated multisynth into integer mode.
 */
	void set_integer_mode(Si5351_clock clk, BOOL enable)
	{
    5502:	0f 93       	push	r16
    5504:	1f 93       	push	r17
    5506:	cf 93       	push	r28
    5508:	df 93       	push	r29
    550a:	00 d0       	rcall	.+0      	; 0x550c <_Z16set_integer_mode12si5351_clockh+0xa>
    550c:	cd b7       	in	r28, 0x3d	; 61
    550e:	de b7       	in	r29, 0x3e	; 62
    5510:	06 2f       	mov	r16, r22
		uint8_t reg_val;
		uint8_t data[2];

		data[0] = SI5351_CLK0_CTRL + (uint8_t)clk;
    5512:	10 e1       	ldi	r17, 0x10	; 16
    5514:	18 0f       	add	r17, r24
    5516:	19 83       	std	Y+1, r17	; 0x01
		if(si5351_read_bulk(data, 1))
    5518:	61 e0       	ldi	r22, 0x01	; 1
    551a:	ce 01       	movw	r24, r28
    551c:	01 96       	adiw	r24, 0x01	; 1
    551e:	0e 94 0c 2a 	call	0x5418	; 0x5418 <_Z16si5351_read_bulkPhh>
    5522:	81 11       	cpse	r24, r1
    5524:	0d c0       	rjmp	.+26     	; 0x5540 <_Z16set_integer_mode12si5351_clockh+0x3e>
		{
			return;
		}
		
		reg_val = data[0];
    5526:	89 81       	ldd	r24, Y+1	; 0x01

		if(enable)
    5528:	00 23       	and	r16, r16
    552a:	11 f0       	breq	.+4      	; 0x5530 <_Z16set_integer_mode12si5351_clockh+0x2e>
		{
			reg_val |= (SI5351_CLK_INTEGER_MODE);
    552c:	80 64       	ori	r24, 0x40	; 64
    552e:	01 c0       	rjmp	.+2      	; 0x5532 <_Z16set_integer_mode12si5351_clockh+0x30>
		}
		else
		{
			reg_val &= ~(SI5351_CLK_INTEGER_MODE);
    5530:	8f 7b       	andi	r24, 0xBF	; 191
		}

		data[0] = SI5351_CLK0_CTRL + (uint8_t)clk;
    5532:	19 83       	std	Y+1, r17	; 0x01
		data[1] = reg_val;
    5534:	8a 83       	std	Y+2, r24	; 0x02
		si5351_write_bulk(data, 2);
    5536:	62 e0       	ldi	r22, 0x02	; 2
    5538:	ce 01       	movw	r24, r28
    553a:	01 96       	adiw	r24, 0x01	; 1
    553c:	0e 94 c1 29 	call	0x5382	; 0x5382 <_Z17si5351_write_bulkPhh>
	}
    5540:	0f 90       	pop	r0
    5542:	0f 90       	pop	r0
    5544:	df 91       	pop	r29
    5546:	cf 91       	pop	r28
    5548:	1f 91       	pop	r17
    554a:	0f 91       	pop	r16
    554c:	08 95       	ret

0000554e <_Z6ms_div12si5351_clockhh>:


	void ms_div(Si5351_clock clk, uint8_t r_div, BOOL div_by_4)
	{
    554e:	ff 92       	push	r15
    5550:	0f 93       	push	r16
    5552:	1f 93       	push	r17
    5554:	cf 93       	push	r28
    5556:	df 93       	push	r29
    5558:	00 d0       	rcall	.+0      	; 0x555a <_Z6ms_div12si5351_clockhh+0xc>
    555a:	cd b7       	in	r28, 0x3d	; 61
    555c:	de b7       	in	r29, 0x3e	; 62
		uint8_t reg_val, reg_addr;
		uint8_t data[2];

		switch(clk)
    555e:	81 30       	cpi	r24, 0x01	; 1
    5560:	71 f0       	breq	.+28     	; 0x557e <_Z6ms_div12si5351_clockhh+0x30>
    5562:	18 f0       	brcs	.+6      	; 0x556a <_Z6ms_div12si5351_clockhh+0x1c>
    5564:	82 30       	cpi	r24, 0x02	; 2
    5566:	31 f0       	breq	.+12     	; 0x5574 <_Z6ms_div12si5351_clockhh+0x26>
    5568:	29 c0       	rjmp	.+82     	; 0x55bc <_Z6ms_div12si5351_clockhh+0x6e>
		{
			case SI5351_CLK0:
			{
				reg_addr = SI5351_CLK0_PARAMETERS + 2;
    556a:	0f 2e       	mov	r0, r31
    556c:	fc e2       	ldi	r31, 0x2C	; 44
    556e:	ff 2e       	mov	r15, r31
    5570:	f0 2d       	mov	r31, r0
    5572:	09 c0       	rjmp	.+18     	; 0x5586 <_Z6ms_div12si5351_clockhh+0x38>
			}
			break;

			case SI5351_CLK2:
			{
				reg_addr = SI5351_CLK2_PARAMETERS + 2;
    5574:	0f 2e       	mov	r0, r31
    5576:	fc e3       	ldi	r31, 0x3C	; 60
    5578:	ff 2e       	mov	r15, r31
    557a:	f0 2d       	mov	r31, r0
			}
			break;
    557c:	04 c0       	rjmp	.+8      	; 0x5586 <_Z6ms_div12si5351_clockhh+0x38>
			}
			break;

			case SI5351_CLK1:
			{
				reg_addr = SI5351_CLK1_PARAMETERS + 2;
    557e:	0f 2e       	mov	r0, r31
    5580:	f4 e3       	ldi	r31, 0x34	; 52
    5582:	ff 2e       	mov	r15, r31
    5584:	f0 2d       	mov	r31, r0
    5586:	04 2f       	mov	r16, r20
    5588:	16 2f       	mov	r17, r22

			default:
				return;
		}

		data[0] = reg_addr;
    558a:	f9 82       	std	Y+1, r15	; 0x01
		
		if(si5351_read_bulk(data, 1))
    558c:	61 e0       	ldi	r22, 0x01	; 1
    558e:	ce 01       	movw	r24, r28
    5590:	01 96       	adiw	r24, 0x01	; 1
    5592:	0e 94 0c 2a 	call	0x5418	; 0x5418 <_Z16si5351_read_bulkPhh>
    5596:	81 11       	cpse	r24, r1
    5598:	11 c0       	rjmp	.+34     	; 0x55bc <_Z6ms_div12si5351_clockhh+0x6e>
		{
			return;
		}
		
		reg_val = data[0];
    559a:	69 81       	ldd	r22, Y+1	; 0x01

		/* Clear the appropriate bits */
		reg_val &= ~(0x7c);
    559c:	86 2f       	mov	r24, r22
    559e:	83 78       	andi	r24, 0x83	; 131

		if(div_by_4)
    55a0:	01 11       	cpse	r16, r1
		{
			reg_val |= (SI5351_OUTPUT_CLK_DIVBY4);
    55a2:	8c 60       	ori	r24, 0x0C	; 12
		else
		{
			reg_val &= ~(SI5351_OUTPUT_CLK_DIVBY4);
		}

		reg_val |= (r_div << SI5351_OUTPUT_CLK_DIV_SHIFT);
    55a4:	90 e1       	ldi	r25, 0x10	; 16
    55a6:	19 9f       	mul	r17, r25
    55a8:	b0 01       	movw	r22, r0
    55aa:	11 24       	eor	r1, r1
    55ac:	68 2b       	or	r22, r24

		data[0] = reg_addr;
    55ae:	f9 82       	std	Y+1, r15	; 0x01
		data[1] = reg_val;
    55b0:	6a 83       	std	Y+2, r22	; 0x02
		si5351_write_bulk(data, 2);
    55b2:	62 e0       	ldi	r22, 0x02	; 2
    55b4:	ce 01       	movw	r24, r28
    55b6:	01 96       	adiw	r24, 0x01	; 1
    55b8:	0e 94 c1 29 	call	0x5382	; 0x5382 <_Z17si5351_write_bulkPhh>
	}
    55bc:	0f 90       	pop	r0
    55be:	0f 90       	pop	r0
    55c0:	df 91       	pop	r29
    55c2:	cf 91       	pop	r28
    55c4:	1f 91       	pop	r17
    55c6:	0f 91       	pop	r16
    55c8:	ff 90       	pop	r15
    55ca:	08 95       	ret

000055cc <_Z24set_multisynth_registers12si5351_clock13u_si5351_regshhh>:
 * r_div - Desired r_div ratio
 * div_by_4 - 1 Divide By 4 mode: 0 to disable
 *
 */
	void set_multisynth_registers(Si5351_clock clk, Union_si5351_regs ms_reg, BOOL int_mode, uint8_t r_div, BOOL div_by_4)
	{
    55cc:	8f 92       	push	r8
    55ce:	af 92       	push	r10
    55d0:	cf 92       	push	r12
    55d2:	df 92       	push	r13
    55d4:	ef 92       	push	r14
    55d6:	ff 92       	push	r15
    55d8:	0f 93       	push	r16
    55da:	1f 93       	push	r17
    55dc:	cf 93       	push	r28
    55de:	df 93       	push	r29
    55e0:	cd b7       	in	r28, 0x3d	; 61
    55e2:	de b7       	in	r29, 0x3e	; 62
    55e4:	69 97       	sbiw	r28, 0x19	; 25
    55e6:	cd bf       	out	0x3d, r28	; 61
    55e8:	de bf       	out	0x3e, r29	; 62
    55ea:	f8 2e       	mov	r15, r24
    55ec:	ce 86       	std	Y+14, r12	; 0x0e
    55ee:	df 86       	std	Y+15, r13	; 0x0f
    55f0:	e8 8a       	std	Y+16, r14	; 0x10
    55f2:	0a 8b       	std	Y+18, r16	; 0x12
    55f4:	1b 8b       	std	Y+19, r17	; 0x13
    55f6:	2c 8b       	std	Y+20, r18	; 0x14
    55f8:	68 8f       	std	Y+24, r22	; 0x18
		uint8_t i = 1;
		uint8_t reg_val;
		uint8_t data[2];

		/* Registers 42-43 for CLK0; 50-51 for CLK1 */
		params[i++] = ms_reg.reg.p3_1;
    55fa:	5a 83       	std	Y+2, r21	; 0x02
		params[i++] = ms_reg.reg.p3_0;
    55fc:	4b 83       	std	Y+3, r20	; 0x03

		data[0] = (SI5351_CLK0_PARAMETERS + 2) + (clk * 8);
    55fe:	88 0f       	add	r24, r24
    5600:	88 0f       	add	r24, r24
    5602:	88 0f       	add	r24, r24
    5604:	84 5d       	subi	r24, 0xD4	; 212
    5606:	8c 87       	std	Y+12, r24	; 0x0c
		/* Register 44 for CLK0; 52 for CLK1 */
		if(si5351_read_bulk(data, 1))
    5608:	61 e0       	ldi	r22, 0x01	; 1
    560a:	ce 01       	movw	r24, r28
    560c:	0c 96       	adiw	r24, 0x0c	; 12
    560e:	0e 94 0c 2a 	call	0x5418	; 0x5418 <_Z16si5351_read_bulkPhh>
    5612:	81 11       	cpse	r24, r1
    5614:	40 c0       	rjmp	.+128    	; 0x5696 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regshhh+0xca>
		{
			return;
		}
		
		reg_val = data[0];
    5616:	8c 85       	ldd	r24, Y+12	; 0x0c

		reg_val &= 0xFC;    /*~(0x03); */
    5618:	98 2f       	mov	r25, r24
    561a:	9c 7f       	andi	r25, 0xFC	; 252
		params[i++] = reg_val | (ms_reg.reg.p1_2 & 0x03);
    561c:	88 89       	ldd	r24, Y+16	; 0x10
    561e:	83 70       	andi	r24, 0x03	; 3
    5620:	89 2b       	or	r24, r25
    5622:	8c 83       	std	Y+4, r24	; 0x04

		/* Registers 45-46 for CLK0 */
		params[i++] = ms_reg.reg.p1_1;
    5624:	8f 85       	ldd	r24, Y+15	; 0x0f
    5626:	8d 83       	std	Y+5, r24	; 0x05
		params[i++] = ms_reg.reg.p1_0;
    5628:	8e 85       	ldd	r24, Y+14	; 0x0e
    562a:	8e 83       	std	Y+6, r24	; 0x06

		/* Register 47 for CLK0 */
		params[i] = (ms_reg.reg.p3_2 << 4);
    562c:	98 8d       	ldd	r25, Y+24	; 0x18
		params[i++] += (ms_reg.reg.p2_2 & 0x0F);
    562e:	8c 89       	ldd	r24, Y+20	; 0x14
    5630:	8f 70       	andi	r24, 0x0F	; 15
    5632:	20 e1       	ldi	r18, 0x10	; 16
    5634:	92 9f       	mul	r25, r18
    5636:	80 0d       	add	r24, r0
    5638:	11 24       	eor	r1, r1
    563a:	8f 83       	std	Y+7, r24	; 0x07

		/* Registers 48-49 for CLK0 */
		params[i++] = ms_reg.reg.p2_1;
    563c:	8b 89       	ldd	r24, Y+19	; 0x13
    563e:	88 87       	std	Y+8, r24	; 0x08
		params[i++] = ms_reg.reg.p2_0;
    5640:	8a 89       	ldd	r24, Y+18	; 0x12
    5642:	89 87       	std	Y+9, r24	; 0x09

		/* Write the parameters */
		switch(clk)
    5644:	81 e0       	ldi	r24, 0x01	; 1
    5646:	f8 16       	cp	r15, r24
    5648:	71 f0       	breq	.+28     	; 0x5666 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regshhh+0x9a>
    564a:	f8 16       	cp	r15, r24
    564c:	20 f0       	brcs	.+8      	; 0x5656 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regshhh+0x8a>
    564e:	22 e0       	ldi	r18, 0x02	; 2
    5650:	f2 16       	cp	r15, r18
    5652:	89 f0       	breq	.+34     	; 0x5676 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regshhh+0xaa>
    5654:	17 c0       	rjmp	.+46     	; 0x5684 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regshhh+0xb8>
		{
			case SI5351_CLK0:
			{
				params[0] = SI5351_CLK0_PARAMETERS;
    5656:	8a e2       	ldi	r24, 0x2A	; 42
    5658:	89 83       	std	Y+1, r24	; 0x01
				si5351_write_bulk(params, i);
    565a:	69 e0       	ldi	r22, 0x09	; 9
    565c:	ce 01       	movw	r24, r28
    565e:	01 96       	adiw	r24, 0x01	; 1
    5660:	0e 94 c1 29 	call	0x5382	; 0x5382 <_Z17si5351_write_bulkPhh>
			}
			break;
    5664:	0f c0       	rjmp	.+30     	; 0x5684 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regshhh+0xb8>

			case SI5351_CLK1:
			{
				params[0] = SI5351_CLK1_PARAMETERS;
    5666:	82 e3       	ldi	r24, 0x32	; 50
    5668:	89 83       	std	Y+1, r24	; 0x01
				si5351_write_bulk(params, i);
    566a:	69 e0       	ldi	r22, 0x09	; 9
    566c:	ce 01       	movw	r24, r28
    566e:	01 96       	adiw	r24, 0x01	; 1
    5670:	0e 94 c1 29 	call	0x5382	; 0x5382 <_Z17si5351_write_bulkPhh>
			}
			break;
    5674:	07 c0       	rjmp	.+14     	; 0x5684 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regshhh+0xb8>

			case SI5351_CLK2:
			{
				params[0] = SI5351_CLK2_PARAMETERS;
    5676:	8a e3       	ldi	r24, 0x3A	; 58
    5678:	89 83       	std	Y+1, r24	; 0x01
				si5351_write_bulk(params, i);
    567a:	69 e0       	ldi	r22, 0x09	; 9
    567c:	ce 01       	movw	r24, r28
    567e:	01 96       	adiw	r24, 0x01	; 1
    5680:	0e 94 c1 29 	call	0x5382	; 0x5382 <_Z17si5351_write_bulkPhh>
			{
			}
			break;
		}

		set_integer_mode(clk, int_mode);
    5684:	6a 2d       	mov	r22, r10
    5686:	8f 2d       	mov	r24, r15
    5688:	0e 94 81 2a 	call	0x5502	; 0x5502 <_Z16set_integer_mode12si5351_clockh>
		ms_div(clk, r_div, div_by_4);
    568c:	4e a1       	ldd	r20, Y+38	; 0x26
    568e:	68 2d       	mov	r22, r8
    5690:	8f 2d       	mov	r24, r15
    5692:	0e 94 a7 2a 	call	0x554e	; 0x554e <_Z6ms_div12si5351_clockhh>
	}
    5696:	69 96       	adiw	r28, 0x19	; 25
    5698:	cd bf       	out	0x3d, r28	; 61
    569a:	de bf       	out	0x3e, r29	; 62
    569c:	df 91       	pop	r29
    569e:	cf 91       	pop	r28
    56a0:	1f 91       	pop	r17
    56a2:	0f 91       	pop	r16
    56a4:	ff 90       	pop	r15
    56a6:	ef 90       	pop	r14
    56a8:	df 90       	pop	r13
    56aa:	cf 90       	pop	r12
    56ac:	af 90       	pop	r10
    56ae:	8f 90       	pop	r8
    56b0:	08 95       	ret

000056b2 <si5351_set_freq>:
 *
 * Returns TRUE on failure
 *
 */
	BOOL si5351_set_freq(Frequency_Hz freq_Fout, Si5351_clock clk, BOOL clocksOff)
	{
    56b2:	2f 92       	push	r2
    56b4:	3f 92       	push	r3
    56b6:	4f 92       	push	r4
    56b8:	5f 92       	push	r5
    56ba:	6f 92       	push	r6
    56bc:	7f 92       	push	r7
    56be:	8f 92       	push	r8
    56c0:	9f 92       	push	r9
    56c2:	af 92       	push	r10
    56c4:	bf 92       	push	r11
    56c6:	cf 92       	push	r12
    56c8:	df 92       	push	r13
    56ca:	ef 92       	push	r14
    56cc:	ff 92       	push	r15
    56ce:	0f 93       	push	r16
    56d0:	1f 93       	push	r17
    56d2:	cf 93       	push	r28
    56d4:	df 93       	push	r29
    56d6:	cd b7       	in	r28, 0x3d	; 61
    56d8:	de b7       	in	r29, 0x3e	; 62
    56da:	60 97       	sbiw	r28, 0x10	; 16
    56dc:	cd bf       	out	0x3d, r28	; 61
    56de:	de bf       	out	0x3e, r29	; 62
    56e0:	6b 01       	movw	r12, r22
    56e2:	7c 01       	movw	r14, r24
    56e4:	b4 2e       	mov	r11, r20
    56e6:	72 2e       	mov	r7, r18
		Union_si5351_regs ms_reg;
		Frequency_Hz freq_VCO = 0;
		Si5351_pll target_pll;
		uint8_t clock_ctrl_addr;
		uint8_t r_div = SI5351_OUTPUT_CLK_DIV_1;
		BOOL int_mode = FALSE;
    56e8:	1d 86       	std	Y+13, r1	; 0x0d
		BOOL div_by_4 = FALSE;
    56ea:	1e 86       	std	Y+14, r1	; 0x0e
#endif

#ifdef PREVENT_UNACHIEVABLE_FREQUENCIES
			/* Prevent unachievable frequencies from being entered. The Si5351 will accept these, but some may result */
			/* in no clock output. */
			if(freq_Fout > 999999)
    56ec:	80 e4       	ldi	r24, 0x40	; 64
    56ee:	c8 16       	cp	r12, r24
    56f0:	82 e4       	ldi	r24, 0x42	; 66
    56f2:	d8 06       	cpc	r13, r24
    56f4:	8f e0       	ldi	r24, 0x0F	; 15
    56f6:	e8 06       	cpc	r14, r24
    56f8:	f1 04       	cpc	r15, r1
    56fa:	70 f0       	brcs	.+28     	; 0x5718 <si5351_set_freq+0x66>
			{
				freq_Fout /= 100;
    56fc:	c7 01       	movw	r24, r14
    56fe:	b6 01       	movw	r22, r12
    5700:	24 e6       	ldi	r18, 0x64	; 100
    5702:	30 e0       	ldi	r19, 0x00	; 0
    5704:	40 e0       	ldi	r20, 0x00	; 0
    5706:	50 e0       	ldi	r21, 0x00	; 0
    5708:	0e 94 69 32 	call	0x64d2	; 0x64d2 <__udivmodsi4>
				freq_Fout *= 100;
    570c:	a4 e6       	ldi	r26, 0x64	; 100
    570e:	b0 e0       	ldi	r27, 0x00	; 0
    5710:	0e 94 c9 32 	call	0x6592	; 0x6592 <__muluhisi3>
    5714:	6b 01       	movw	r12, r22
    5716:	7c 01       	movw	r14, r24
		/* Determine which PLL to use: CLK0 gets PLLA, CLK1 and CLK2 get PLLB */
		/* The first of CLK1 or CLK2 to be configured, determines the VCO frequency used for PLLB. */
		/* The second of CLK1 or CLK2 to be configured will attempt to achieve Fout by adjusting the */
		/* Multisynth Divider values only. */
		/* Only good for Si5351A3 variant */
		switch(clk)
    5718:	81 e0       	ldi	r24, 0x01	; 1
    571a:	b8 16       	cp	r11, r24
    571c:	c9 f0       	breq	.+50     	; 0x5750 <si5351_set_freq+0x9e>
    571e:	b8 16       	cp	r11, r24
    5720:	20 f0       	brcs	.+8      	; 0x572a <si5351_set_freq+0x78>
    5722:	82 e0       	ldi	r24, 0x02	; 2
    5724:	b8 16       	cp	r11, r24
    5726:	99 f1       	breq	.+102    	; 0x578e <si5351_set_freq+0xdc>
    5728:	e9 c0       	rjmp	.+466    	; 0x58fc <si5351_set_freq+0x24a>
		{
			case SI5351_CLK0:
			{
				enabledClocksMask |= 0x01;
    572a:	80 91 df 45 	lds	r24, 0x45DF	; 0x8045df <_ZL17enabledClocksMask>
    572e:	81 60       	ori	r24, 0x01	; 1
    5730:	80 93 df 45 	sts	0x45DF, r24	; 0x8045df <_ZL17enabledClocksMask>
// 				data[0] = 3;
// 				data[1] = ~enabledClocksMask | 0xF9;
/*			si5351_write_bulk(data, 2); // only disable CLK0 */

				target_pll = SI5351_PLLA;
				clock_out[SI5351_CLK0] = freq_Fout; /* store the value for reference */
    5734:	c0 92 d3 45 	sts	0x45D3, r12	; 0x8045d3 <_ZL9clock_out>
    5738:	d0 92 d4 45 	sts	0x45D4, r13	; 0x8045d4 <_ZL9clock_out+0x1>
    573c:	e0 92 d5 45 	sts	0x45D5, r14	; 0x8045d5 <_ZL9clock_out+0x2>
    5740:	f0 92 d6 45 	sts	0x45D6, r15	; 0x8045d6 <_ZL9clock_out+0x3>
		switch(clk)
		{
			case SI5351_CLK0:
			{
				enabledClocksMask |= 0x01;
				clock_ctrl_addr = 16;
    5744:	68 94       	set
    5746:	66 24       	eor	r6, r6
    5748:	64 f8       	bld	r6, 4
				/* Set CLKx_DIS high; Reg. 3 = 0xFF */
// 				data[0] = 3;
// 				data[1] = ~enabledClocksMask | 0xF9;
/*			si5351_write_bulk(data, 2); // only disable CLK0 */

				target_pll = SI5351_PLLA;
    574a:	99 24       	eor	r9, r9
    574c:	93 94       	inc	r9
				clock_out[SI5351_CLK0] = freq_Fout; /* store the value for reference */
			}
			break;
    574e:	3d c0       	rjmp	.+122    	; 0x57ca <si5351_set_freq+0x118>
			case SI5351_CLK1:
			{
				/* No checking is performed to ensure that PLLB is not unavailable due to other output being < 1.024 MHz or >= 112.5 MHz */
				/* User must ensure the clock design is valid before setting clocks */

				enabledClocksMask |= 0x02;
    5750:	80 91 df 45 	lds	r24, 0x45DF	; 0x8045df <_ZL17enabledClocksMask>
    5754:	82 60       	ori	r24, 0x02	; 2
    5756:	80 93 df 45 	sts	0x45DF, r24	; 0x8045df <_ZL17enabledClocksMask>
				clock_ctrl_addr = 17;

				/* Block 1: Disable Outputs */
				/* Set CLKx_DIS high; Reg. 3 = 0xFF */
 				data[0] = 3;
    575a:	93 e0       	ldi	r25, 0x03	; 3
    575c:	9f 87       	std	Y+15, r25	; 0x0f
 				data[1] = ~enabledClocksMask | 0xFA;
    575e:	80 95       	com	r24
    5760:	8a 6f       	ori	r24, 0xFA	; 250
    5762:	88 8b       	std	Y+16, r24	; 0x10
				si5351_write_bulk(data, 2); /* only disable CLK1 */
    5764:	62 e0       	ldi	r22, 0x02	; 2
    5766:	ce 01       	movw	r24, r28
    5768:	0f 96       	adiw	r24, 0x0f	; 15
    576a:	0e 94 c1 29 	call	0x5382	; 0x5382 <_Z17si5351_write_bulkPhh>

				target_pll = SI5351_PLLB;
				clock_out[SI5351_CLK1] = freq_Fout;         /* store the value for reference */
    576e:	c0 92 d7 45 	sts	0x45D7, r12	; 0x8045d7 <_ZL9clock_out+0x4>
    5772:	d0 92 d8 45 	sts	0x45D8, r13	; 0x8045d8 <_ZL9clock_out+0x5>
    5776:	e0 92 d9 45 	sts	0x45D9, r14	; 0x8045d9 <_ZL9clock_out+0x6>
    577a:	f0 92 da 45 	sts	0x45DA, r15	; 0x8045da <_ZL9clock_out+0x7>
			{
				/* No checking is performed to ensure that PLLB is not unavailable due to other output being < 1.024 MHz or >= 112.5 MHz */
				/* User must ensure the clock design is valid before setting clocks */

				enabledClocksMask |= 0x02;
				clock_ctrl_addr = 17;
    577e:	0f 2e       	mov	r0, r31
    5780:	f1 e1       	ldi	r31, 0x11	; 17
    5782:	6f 2e       	mov	r6, r31
    5784:	f0 2d       	mov	r31, r0
				/* Set CLKx_DIS high; Reg. 3 = 0xFF */
 				data[0] = 3;
 				data[1] = ~enabledClocksMask | 0xFA;
				si5351_write_bulk(data, 2); /* only disable CLK1 */

				target_pll = SI5351_PLLB;
    5786:	68 94       	set
    5788:	99 24       	eor	r9, r9
    578a:	91 f8       	bld	r9, 1
				clock_out[SI5351_CLK1] = freq_Fout;         /* store the value for reference */
			}
			break;
    578c:	1e c0       	rjmp	.+60     	; 0x57ca <si5351_set_freq+0x118>
			case SI5351_CLK2:
			{
				/* No checking is performed to ensure that PLLB is not unavailable due to other output being < 1.024 MHz or >= 112.5 MHz */
				/* User must ensure the clock design is valid before setting clocks */

				enabledClocksMask |= 0x04;
    578e:	80 91 df 45 	lds	r24, 0x45DF	; 0x8045df <_ZL17enabledClocksMask>
    5792:	84 60       	ori	r24, 0x04	; 4
    5794:	80 93 df 45 	sts	0x45DF, r24	; 0x8045df <_ZL17enabledClocksMask>
				clock_ctrl_addr = 18;

				/* Block 1: Disable Outputs */
				/* Set CLKx_DIS high; Reg. 3 = 0xFF */
 				data[0] = 3;
    5798:	93 e0       	ldi	r25, 0x03	; 3
    579a:	9f 87       	std	Y+15, r25	; 0x0f
 				data[1] = ~enabledClocksMask | 0xFC; /* only disable CLK2 */
    579c:	80 95       	com	r24
    579e:	8c 6f       	ori	r24, 0xFC	; 252
    57a0:	88 8b       	std	Y+16, r24	; 0x10
 				si5351_write_bulk(data, 2); /* only disable CLK1 */
    57a2:	62 e0       	ldi	r22, 0x02	; 2
    57a4:	ce 01       	movw	r24, r28
    57a6:	0f 96       	adiw	r24, 0x0f	; 15
    57a8:	0e 94 c1 29 	call	0x5382	; 0x5382 <_Z17si5351_write_bulkPhh>

				target_pll = SI5351_PLLB;
				clock_out[SI5351_CLK2] = freq_Fout;         /* store the value for reference */
    57ac:	c0 92 db 45 	sts	0x45DB, r12	; 0x8045db <_ZL9clock_out+0x8>
    57b0:	d0 92 dc 45 	sts	0x45DC, r13	; 0x8045dc <_ZL9clock_out+0x9>
    57b4:	e0 92 dd 45 	sts	0x45DD, r14	; 0x8045dd <_ZL9clock_out+0xa>
    57b8:	f0 92 de 45 	sts	0x45DE, r15	; 0x8045de <_ZL9clock_out+0xb>
			{
				/* No checking is performed to ensure that PLLB is not unavailable due to other output being < 1.024 MHz or >= 112.5 MHz */
				/* User must ensure the clock design is valid before setting clocks */

				enabledClocksMask |= 0x04;
				clock_ctrl_addr = 18;
    57bc:	0f 2e       	mov	r0, r31
    57be:	f2 e1       	ldi	r31, 0x12	; 18
    57c0:	6f 2e       	mov	r6, r31
    57c2:	f0 2d       	mov	r31, r0
				/* Set CLKx_DIS high; Reg. 3 = 0xFF */
 				data[0] = 3;
 				data[1] = ~enabledClocksMask | 0xFC; /* only disable CLK2 */
 				si5351_write_bulk(data, 2); /* only disable CLK1 */

				target_pll = SI5351_PLLB;
    57c4:	68 94       	set
    57c6:	99 24       	eor	r9, r9
    57c8:	91 f8       	bld	r9, 1
			Frequency_Hz freq_VCO_calc;
			Frequency_Hz fout_calc;
			int32_t f_err;
#endif

		if((target_pll == SI5351_PLLA) || !freqVCOB)
    57ca:	81 e0       	ldi	r24, 0x01	; 1
    57cc:	98 16       	cp	r9, r24
    57ce:	61 f0       	breq	.+24     	; 0x57e8 <si5351_set_freq+0x136>
    57d0:	80 91 e0 45 	lds	r24, 0x45E0	; 0x8045e0 <_ZL8freqVCOB>
    57d4:	90 91 e1 45 	lds	r25, 0x45E1	; 0x8045e1 <_ZL8freqVCOB+0x1>
    57d8:	a0 91 e2 45 	lds	r26, 0x45E2	; 0x8045e2 <_ZL8freqVCOB+0x2>
    57dc:	b0 91 e3 45 	lds	r27, 0x45E3	; 0x8045e3 <_ZL8freqVCOB+0x3>
    57e0:	89 2b       	or	r24, r25
    57e2:	8a 2b       	or	r24, r26
    57e4:	8b 2b       	or	r24, r27
    57e6:	81 f4       	brne	.+32     	; 0x5808 <si5351_set_freq+0x156>
		{
#ifdef DEBUGGING_ONLY
				freq_VCO = multisynth_calc(freq_Fout, &ms_reg, &int_mode, &div_by_4, &div);
#else
				freq_VCO = multisynth_calc(freq_Fout, &ms_reg, &int_mode, &div_by_4);
    57e8:	8e 01       	movw	r16, r28
    57ea:	02 5f       	subi	r16, 0xF2	; 242
    57ec:	1f 4f       	sbci	r17, 0xFF	; 255
    57ee:	9e 01       	movw	r18, r28
    57f0:	23 5f       	subi	r18, 0xF3	; 243
    57f2:	3f 4f       	sbci	r19, 0xFF	; 255
    57f4:	ae 01       	movw	r20, r28
    57f6:	4f 5f       	subi	r20, 0xFF	; 255
    57f8:	5f 4f       	sbci	r21, 0xFF	; 255
    57fa:	c7 01       	movw	r24, r14
    57fc:	b6 01       	movw	r22, r12
    57fe:	0e 94 c9 27 	call	0x4f92	; 0x4f92 <_Z15multisynth_calcmP13u_si5351_regsPhS1_>
    5802:	1b 01       	movw	r2, r22
    5804:	2c 01       	movw	r4, r24
    5806:	10 c0       	rjmp	.+32     	; 0x5828 <si5351_set_freq+0x176>
		else
		{
#ifdef DEBUGGING_ONLY
				fout_calc = freq_Fout;  /* save the intended output frequency */
#endif
			freq_Fout = multisynth_estimate(freq_Fout, &ms_reg, &int_mode, &div_by_4);
    5808:	8e 01       	movw	r16, r28
    580a:	02 5f       	subi	r16, 0xF2	; 242
    580c:	1f 4f       	sbci	r17, 0xFF	; 255
    580e:	9e 01       	movw	r18, r28
    5810:	23 5f       	subi	r18, 0xF3	; 243
    5812:	3f 4f       	sbci	r19, 0xFF	; 255
    5814:	ae 01       	movw	r20, r28
    5816:	4f 5f       	subi	r20, 0xFF	; 255
    5818:	5f 4f       	sbci	r21, 0xFF	; 255
    581a:	c7 01       	movw	r24, r14
    581c:	b6 01       	movw	r22, r12
    581e:	0e 94 9b 28 	call	0x5136	; 0x5136 <_Z19multisynth_estimatemP13u_si5351_regsPhS1_>
 *
 */
	BOOL si5351_set_freq(Frequency_Hz freq_Fout, Si5351_clock clk, BOOL clocksOff)
	{
		Union_si5351_regs ms_reg;
		Frequency_Hz freq_VCO = 0;
    5822:	21 2c       	mov	r2, r1
    5824:	31 2c       	mov	r3, r1
    5826:	21 01       	movw	r4, r2
#endif
			freq_Fout = multisynth_estimate(freq_Fout, &ms_reg, &int_mode, &div_by_4);
		}

		/* Set multisynth registers (MS must be set before PLL) */
		set_multisynth_registers_source(clk, target_pll);
    5828:	69 2d       	mov	r22, r9
    582a:	8b 2d       	mov	r24, r11
    582c:	0e 94 59 2a 	call	0x54b2	; 0x54b2 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll>
		set_multisynth_registers(clk, ms_reg, int_mode, r_div, div_by_4);
    5830:	8e 85       	ldd	r24, Y+14	; 0x0e
    5832:	8f 93       	push	r24
    5834:	81 2c       	mov	r8, r1
    5836:	ad 84       	ldd	r10, Y+13	; 0x0d
    5838:	c9 80       	ldd	r12, Y+1	; 0x01
    583a:	da 80       	ldd	r13, Y+2	; 0x02
    583c:	eb 80       	ldd	r14, Y+3	; 0x03
    583e:	fc 80       	ldd	r15, Y+4	; 0x04
    5840:	0d 81       	ldd	r16, Y+5	; 0x05
    5842:	1e 81       	ldd	r17, Y+6	; 0x06
    5844:	2f 81       	ldd	r18, Y+7	; 0x07
    5846:	38 85       	ldd	r19, Y+8	; 0x08
    5848:	49 85       	ldd	r20, Y+9	; 0x09
    584a:	5a 85       	ldd	r21, Y+10	; 0x0a
    584c:	6b 85       	ldd	r22, Y+11	; 0x0b
    584e:	7c 85       	ldd	r23, Y+12	; 0x0c
    5850:	8b 2d       	mov	r24, r11
    5852:	0e 94 e6 2a 	call	0x55cc	; 0x55cc <_Z24set_multisynth_registers12si5351_clock13u_si5351_regshhh>
				fout_calc = freq_VCO_calc / div;
			}

			f_err = freq_Fout - fout_calc;
#else
			if(freq_VCO)
    5856:	0f 90       	pop	r0
    5858:	21 14       	cp	r2, r1
    585a:	31 04       	cpc	r3, r1
    585c:	41 04       	cpc	r4, r1
    585e:	51 04       	cpc	r5, r1
    5860:	29 f0       	breq	.+10     	; 0x586c <si5351_set_freq+0x1ba>
			{
				set_pll(freq_VCO, target_pll);
    5862:	49 2d       	mov	r20, r9
    5864:	c2 01       	movw	r24, r4
    5866:	b1 01       	movw	r22, r2
    5868:	0e 94 cf 29 	call	0x539e	; 0x539e <_Z7set_pllm10si5351_pll>
/*	pll_reset(target_pll); */

		/* Block 6: */
		/* Enable desired outputs */
		/* (see Register 3) */
		if(clocksOff)
    586c:	77 20       	and	r7, r7
    586e:	59 f0       	breq	.+22     	; 0x5886 <si5351_set_freq+0x1d4>
		{
 			data[0] = 3;
    5870:	83 e0       	ldi	r24, 0x03	; 3
    5872:	8f 87       	std	Y+15, r24	; 0x0f
 			data[1] = enabledClocksMask;
    5874:	80 91 df 45 	lds	r24, 0x45DF	; 0x8045df <_ZL17enabledClocksMask>
    5878:	88 8b       	std	Y+16, r24	; 0x10
			si5351_write_bulk(data, 2);    /* disable clock(s) in use */
    587a:	62 e0       	ldi	r22, 0x02	; 2
    587c:	ce 01       	movw	r24, r28
    587e:	0f 96       	adiw	r24, 0x0f	; 15
    5880:	0e 94 c1 29 	call	0x5382	; 0x5382 <_Z17si5351_write_bulkPhh>
    5884:	0b c0       	rjmp	.+22     	; 0x589c <si5351_set_freq+0x1ea>
		}
		else
		{
 			data[0] = 3;
    5886:	83 e0       	ldi	r24, 0x03	; 3
    5888:	8f 87       	std	Y+15, r24	; 0x0f
 			data[1] = ~enabledClocksMask;
    588a:	80 91 df 45 	lds	r24, 0x45DF	; 0x8045df <_ZL17enabledClocksMask>
    588e:	80 95       	com	r24
    5890:	88 8b       	std	Y+16, r24	; 0x10
 			si5351_write_bulk(data, 2);  /* only enable clock(s) in use */
    5892:	62 e0       	ldi	r22, 0x02	; 2
    5894:	ce 01       	movw	r24, r28
    5896:	0f 96       	adiw	r24, 0x0f	; 15
    5898:	0e 94 c1 29 	call	0x5382	; 0x5382 <_Z17si5351_write_bulkPhh>
		}

		/* power up the clock */
		if(target_pll == SI5351_PLLA)
    589c:	81 e0       	ldi	r24, 0x01	; 1
    589e:	98 12       	cpse	r9, r24
    58a0:	0a c0       	rjmp	.+20     	; 0x58b6 <si5351_set_freq+0x204>
		{
 			data[0] = clock_ctrl_addr;
    58a2:	6f 86       	std	Y+15, r6	; 0x0f
 			data[1] = 0x4C;
    58a4:	8c e4       	ldi	r24, 0x4C	; 76
    58a6:	88 8b       	std	Y+16, r24	; 0x10
 			si5351_write_bulk(data, 2);  /* power up only clock being set, leaving that clock configured as follows: */
    58a8:	62 e0       	ldi	r22, 0x02	; 2
    58aa:	ce 01       	movw	r24, r28
    58ac:	0f 96       	adiw	r24, 0x0f	; 15
    58ae:	0e 94 c1 29 	call	0x5382	; 0x5382 <_Z17si5351_write_bulkPhh>
			{
				freqVCOB = freq_VCO;
			}
		}

		return(FALSE);
    58b2:	80 e0       	ldi	r24, 0x00	; 0
    58b4:	26 c0       	rjmp	.+76     	; 0x5902 <si5351_set_freq+0x250>
			/*   o Integer mode set */
			/*   o Clock powered up */
		}
		else
		{
			if(int_mode)
    58b6:	8d 85       	ldd	r24, Y+13	; 0x0d
    58b8:	88 23       	and	r24, r24
    58ba:	49 f0       	breq	.+18     	; 0x58ce <si5351_set_freq+0x21c>
			{
 				data[0] = clock_ctrl_addr;
    58bc:	6f 86       	std	Y+15, r6	; 0x0f
 				data[1] = 0x6C;
    58be:	8c e6       	ldi	r24, 0x6C	; 108
    58c0:	88 8b       	std	Y+16, r24	; 0x10
 				si5351_write_bulk(data, 2);  /* power up only clock being set, leaving that clock configured as follows: */
    58c2:	62 e0       	ldi	r22, 0x02	; 2
    58c4:	ce 01       	movw	r24, r28
    58c6:	0f 96       	adiw	r24, 0x0f	; 15
    58c8:	0e 94 c1 29 	call	0x5382	; 0x5382 <_Z17si5351_write_bulkPhh>
    58cc:	08 c0       	rjmp	.+16     	; 0x58de <si5351_set_freq+0x22c>
				/*   o Integer mode set */
				/*   o Clock powered up */
			}
			else
			{
 				data[0] = clock_ctrl_addr;
    58ce:	6f 86       	std	Y+15, r6	; 0x0f
 				data[1] = 0x2C;
    58d0:	8c e2       	ldi	r24, 0x2C	; 44
    58d2:	88 8b       	std	Y+16, r24	; 0x10
 				si5351_write_bulk(data, 2);  /* power up only clock being set, leaving that clock configured as follows: */
    58d4:	62 e0       	ldi	r22, 0x02	; 2
    58d6:	ce 01       	movw	r24, r28
    58d8:	0f 96       	adiw	r24, 0x0f	; 15
    58da:	0e 94 c1 29 	call	0x5382	; 0x5382 <_Z17si5351_write_bulkPhh>
				/*   o PLLB is multisynth source */
				/*   o Integer mode cleared */
				/*   o Clock powered up */
			}

			if(freq_VCO)
    58de:	21 14       	cp	r2, r1
    58e0:	31 04       	cpc	r3, r1
    58e2:	41 04       	cpc	r4, r1
    58e4:	51 04       	cpc	r5, r1
    58e6:	61 f0       	breq	.+24     	; 0x5900 <si5351_set_freq+0x24e>
			{
				freqVCOB = freq_VCO;
    58e8:	20 92 e0 45 	sts	0x45E0, r2	; 0x8045e0 <_ZL8freqVCOB>
    58ec:	30 92 e1 45 	sts	0x45E1, r3	; 0x8045e1 <_ZL8freqVCOB+0x1>
    58f0:	40 92 e2 45 	sts	0x45E2, r4	; 0x8045e2 <_ZL8freqVCOB+0x2>
    58f4:	50 92 e3 45 	sts	0x45E3, r5	; 0x8045e3 <_ZL8freqVCOB+0x3>
			}
		}

		return(FALSE);
    58f8:	80 e0       	ldi	r24, 0x00	; 0
    58fa:	03 c0       	rjmp	.+6      	; 0x5902 <si5351_set_freq+0x250>
			}
			break;

			default:
			{
				return(TRUE);
    58fc:	81 e0       	ldi	r24, 0x01	; 1
    58fe:	01 c0       	rjmp	.+2      	; 0x5902 <si5351_set_freq+0x250>
			{
				freqVCOB = freq_VCO;
			}
		}

		return(FALSE);
    5900:	80 e0       	ldi	r24, 0x00	; 0
	}
    5902:	60 96       	adiw	r28, 0x10	; 16
    5904:	cd bf       	out	0x3d, r28	; 61
    5906:	de bf       	out	0x3e, r29	; 62
    5908:	df 91       	pop	r29
    590a:	cf 91       	pop	r28
    590c:	1f 91       	pop	r17
    590e:	0f 91       	pop	r16
    5910:	ff 90       	pop	r15
    5912:	ef 90       	pop	r14
    5914:	df 90       	pop	r13
    5916:	cf 90       	pop	r12
    5918:	bf 90       	pop	r11
    591a:	af 90       	pop	r10
    591c:	9f 90       	pop	r9
    591e:	8f 90       	pop	r8
    5920:	7f 90       	pop	r7
    5922:	6f 90       	pop	r6
    5924:	5f 90       	pop	r5
    5926:	4f 90       	pop	r4
    5928:	3f 90       	pop	r3
    592a:	2f 90       	pop	r2
    592c:	08 95       	ret

0000592e <SLPCTRL_init>:

	// SLPCTRL.CTRLA = 0 << SLPCTRL_SEN_bp /* Sleep enable: disabled */
	//		 | SLPCTRL_SMODE_IDLE_gc; /* Idle mode */

	return 0;
}
    592e:	80 e0       	ldi	r24, 0x00	; 0
    5930:	08 95       	ret

00005932 <TIMERB_init>:
 * \return Initialization status.
 */
int8_t TIMERB_init()
{
TCB0.INTCTRL = 1 << TCB_CAPT_bp   /* Capture or Timeout: enabled */
| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    5932:	e0 e0       	ldi	r30, 0x00	; 0
    5934:	fb e0       	ldi	r31, 0x0B	; 11
    5936:	81 e0       	ldi	r24, 0x01	; 1
    5938:	85 83       	std	Z+5, r24	; 0x05

// Set TOP
TCB0.CCMP = 0x9C40;
    593a:	20 e4       	ldi	r18, 0x40	; 64
    593c:	3c e9       	ldi	r19, 0x9C	; 156
    593e:	24 87       	std	Z+12, r18	; 0x0c
    5940:	35 87       	std	Z+13, r19	; 0x0d

TCB0.CTRLA = TCB_CLKSEL_DIV2_gc     /* CLK_PER */
| 1 << TCB_ENABLE_bp   /* Enable: enabled */
| 0 << TCB_RUNSTDBY_bp /* Run Standby: disabled */
| 0 << TCB_SYNCUPD_bp  /* Synchronize Update: disabled */
| 0 << TCB_CASCADE_bp; /* Cascade Two Timer/Counters: disabled */
    5942:	93 e0       	ldi	r25, 0x03	; 3
    5944:	90 83       	st	Z, r25

TCB0.INTFLAGS = TCB_CAPT_bm; /* Clear flag */
    5946:	86 83       	std	Z+6, r24	; 0x06

/********************************************************************************/

TCB1.INTCTRL = 1 << TCB_CAPT_bp   /* Capture or Timeout: enabled */
| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    5948:	e0 e1       	ldi	r30, 0x10	; 16
    594a:	fb e0       	ldi	r31, 0x0B	; 11
    594c:	85 83       	std	Z+5, r24	; 0x05

// Set TOP
TCB1.CCMP = 0x5DC0;
    594e:	40 ec       	ldi	r20, 0xC0	; 192
    5950:	5d e5       	ldi	r21, 0x5D	; 93
    5952:	44 87       	std	Z+12, r20	; 0x0c
    5954:	55 87       	std	Z+13, r21	; 0x0d

TCB1.CTRLA = TCB_CLKSEL_DIV1_gc     /* CLK_PER */
| 1 << TCB_ENABLE_bp   /* Enable: enabled */
| 0 << TCB_RUNSTDBY_bp /* Run Standby: disabled */
| 0 << TCB_SYNCUPD_bp  /* Synchronize Update: disabled */
| 0 << TCB_CASCADE_bp; /* Cascade Two Timer/Counters: disabled */
    5956:	80 83       	st	Z, r24

TCB1.INTFLAGS = TCB_CAPT_bm; /* Clear flag */
    5958:	86 83       	std	Z+6, r24	; 0x06


/********************************************************************************/

TCB3.INTCTRL = 1 << TCB_CAPT_bp   /* Capture or Timeout: enabled */
| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    595a:	e0 e3       	ldi	r30, 0x30	; 48
    595c:	fb e0       	ldi	r31, 0x0B	; 11
    595e:	85 83       	std	Z+5, r24	; 0x05

// Set TOP
TCB3.CCMP = 0x9C40;
    5960:	24 87       	std	Z+12, r18	; 0x0c
    5962:	35 87       	std	Z+13, r19	; 0x0d

TCB3.CTRLA = TCB_CLKSEL_DIV2_gc     /* CLK_PER */
| 1 << TCB_ENABLE_bp   /* Enable: enabled */
| 0 << TCB_RUNSTDBY_bp /* Run Standby: disabled */
| 0 << TCB_SYNCUPD_bp  /* Synchronize Update: disabled */
| 0 << TCB_CASCADE_bp; /* Cascade Two Timer/Counters: disabled */
    5964:	90 83       	st	Z, r25

TCB3.INTFLAGS = TCB_CAPT_bm; /* Clear flag */
    5966:	86 83       	std	Z+6, r24	; 0x06

	return 0;
}
    5968:	80 e0       	ldi	r24, 0x00	; 0
    596a:	08 95       	ret

0000596c <util_delay_ms>:


bool util_delay_ms(uint32_t delayValue)
{
    596c:	0f 93       	push	r16
    596e:	1f 93       	push	r17
	static uint32_t countdownValue=0;
	static bool counting = false;
	
	if(delayValue)
    5970:	61 15       	cp	r22, r1
    5972:	71 05       	cpc	r23, r1
    5974:	81 05       	cpc	r24, r1
    5976:	91 05       	cpc	r25, r1
    5978:	09 f4       	brne	.+2      	; 0x597c <util_delay_ms+0x10>
    597a:	67 c0       	rjmp	.+206    	; 0x5a4a <util_delay_ms+0xde>
	{
		if(counting)
    597c:	20 91 ec 45 	lds	r18, 0x45EC	; 0x8045ec <_ZZ13util_delay_msE8counting>
    5980:	22 23       	and	r18, r18
    5982:	f1 f1       	breq	.+124    	; 0x5a00 <util_delay_ms+0x94>
		{
			if(!g_ms_counter)
    5984:	00 91 ed 45 	lds	r16, 0x45ED	; 0x8045ed <_ZL12g_ms_counter>
    5988:	10 91 ee 45 	lds	r17, 0x45EE	; 0x8045ee <_ZL12g_ms_counter+0x1>
    598c:	20 91 ef 45 	lds	r18, 0x45EF	; 0x8045ef <_ZL12g_ms_counter+0x2>
    5990:	30 91 f0 45 	lds	r19, 0x45F0	; 0x8045f0 <_ZL12g_ms_counter+0x3>
    5994:	01 2b       	or	r16, r17
    5996:	02 2b       	or	r16, r18
    5998:	03 2b       	or	r16, r19
    599a:	71 f4       	brne	.+28     	; 0x59b8 <util_delay_ms+0x4c>
			{
				TCB1.INTCTRL = 0 << TCB_CAPT_bp   /* Capture or Timeout: disabled */
				| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    599c:	10 92 15 0b 	sts	0x0B15, r1	; 0x800b15 <__TEXT_REGION_LENGTH__+0x7e0b15>

				counting = false;
    59a0:	10 92 ec 45 	sts	0x45EC, r1	; 0x8045ec <_ZZ13util_delay_msE8counting>
				countdownValue = 0;
    59a4:	10 92 e8 45 	sts	0x45E8, r1	; 0x8045e8 <_ZZ13util_delay_msE14countdownValue>
    59a8:	10 92 e9 45 	sts	0x45E9, r1	; 0x8045e9 <_ZZ13util_delay_msE14countdownValue+0x1>
    59ac:	10 92 ea 45 	sts	0x45EA, r1	; 0x8045ea <_ZZ13util_delay_msE14countdownValue+0x2>
    59b0:	10 92 eb 45 	sts	0x45EB, r1	; 0x8045eb <_ZZ13util_delay_msE14countdownValue+0x3>
				return(false); /* time expired */
    59b4:	80 e0       	ldi	r24, 0x00	; 0
    59b6:	62 c0       	rjmp	.+196    	; 0x5a7c <util_delay_ms+0x110>
			}
			else if(delayValue != countdownValue) /* countdown delay changed */
    59b8:	00 91 e8 45 	lds	r16, 0x45E8	; 0x8045e8 <_ZZ13util_delay_msE14countdownValue>
    59bc:	10 91 e9 45 	lds	r17, 0x45E9	; 0x8045e9 <_ZZ13util_delay_msE14countdownValue+0x1>
    59c0:	20 91 ea 45 	lds	r18, 0x45EA	; 0x8045ea <_ZZ13util_delay_msE14countdownValue+0x2>
    59c4:	30 91 eb 45 	lds	r19, 0x45EB	; 0x8045eb <_ZZ13util_delay_msE14countdownValue+0x3>
    59c8:	60 17       	cp	r22, r16
    59ca:	71 07       	cpc	r23, r17
    59cc:	82 07       	cpc	r24, r18
    59ce:	93 07       	cpc	r25, r19
    59d0:	09 f4       	brne	.+2      	; 0x59d4 <util_delay_ms+0x68>
    59d2:	51 c0       	rjmp	.+162    	; 0x5a76 <util_delay_ms+0x10a>
			{
				TCB1.CNT = 0x0000;
    59d4:	10 92 1a 0b 	sts	0x0B1A, r1	; 0x800b1a <__TEXT_REGION_LENGTH__+0x7e0b1a>
    59d8:	10 92 1b 0b 	sts	0x0B1B, r1	; 0x800b1b <__TEXT_REGION_LENGTH__+0x7e0b1b>
				countdownValue = delayValue;
    59dc:	60 93 e8 45 	sts	0x45E8, r22	; 0x8045e8 <_ZZ13util_delay_msE14countdownValue>
    59e0:	70 93 e9 45 	sts	0x45E9, r23	; 0x8045e9 <_ZZ13util_delay_msE14countdownValue+0x1>
    59e4:	80 93 ea 45 	sts	0x45EA, r24	; 0x8045ea <_ZZ13util_delay_msE14countdownValue+0x2>
    59e8:	90 93 eb 45 	sts	0x45EB, r25	; 0x8045eb <_ZZ13util_delay_msE14countdownValue+0x3>
				g_ms_counter = delayValue;
    59ec:	60 93 ed 45 	sts	0x45ED, r22	; 0x8045ed <_ZL12g_ms_counter>
    59f0:	70 93 ee 45 	sts	0x45EE, r23	; 0x8045ee <_ZL12g_ms_counter+0x1>
    59f4:	80 93 ef 45 	sts	0x45EF, r24	; 0x8045ef <_ZL12g_ms_counter+0x2>
    59f8:	90 93 f0 45 	sts	0x45F0, r25	; 0x8045f0 <_ZL12g_ms_counter+0x3>
				return(false);
    59fc:	80 e0       	ldi	r24, 0x00	; 0
    59fe:	3e c0       	rjmp	.+124    	; 0x5a7c <util_delay_ms+0x110>
			}
		}
		else if(delayValue != countdownValue)
    5a00:	00 91 e8 45 	lds	r16, 0x45E8	; 0x8045e8 <_ZZ13util_delay_msE14countdownValue>
    5a04:	10 91 e9 45 	lds	r17, 0x45E9	; 0x8045e9 <_ZZ13util_delay_msE14countdownValue+0x1>
    5a08:	20 91 ea 45 	lds	r18, 0x45EA	; 0x8045ea <_ZZ13util_delay_msE14countdownValue+0x2>
    5a0c:	30 91 eb 45 	lds	r19, 0x45EB	; 0x8045eb <_ZZ13util_delay_msE14countdownValue+0x3>
    5a10:	60 17       	cp	r22, r16
    5a12:	71 07       	cpc	r23, r17
    5a14:	82 07       	cpc	r24, r18
    5a16:	93 07       	cpc	r25, r19
    5a18:	71 f1       	breq	.+92     	; 0x5a76 <util_delay_ms+0x10a>
		{
			TCB1.CNT = 0x0000;
    5a1a:	10 92 1a 0b 	sts	0x0B1A, r1	; 0x800b1a <__TEXT_REGION_LENGTH__+0x7e0b1a>
    5a1e:	10 92 1b 0b 	sts	0x0B1B, r1	; 0x800b1b <__TEXT_REGION_LENGTH__+0x7e0b1b>
			countdownValue = delayValue;
    5a22:	60 93 e8 45 	sts	0x45E8, r22	; 0x8045e8 <_ZZ13util_delay_msE14countdownValue>
    5a26:	70 93 e9 45 	sts	0x45E9, r23	; 0x8045e9 <_ZZ13util_delay_msE14countdownValue+0x1>
    5a2a:	80 93 ea 45 	sts	0x45EA, r24	; 0x8045ea <_ZZ13util_delay_msE14countdownValue+0x2>
    5a2e:	90 93 eb 45 	sts	0x45EB, r25	; 0x8045eb <_ZZ13util_delay_msE14countdownValue+0x3>
			g_ms_counter = delayValue;
    5a32:	60 93 ed 45 	sts	0x45ED, r22	; 0x8045ed <_ZL12g_ms_counter>
    5a36:	70 93 ee 45 	sts	0x45EE, r23	; 0x8045ee <_ZL12g_ms_counter+0x1>
    5a3a:	80 93 ef 45 	sts	0x45EF, r24	; 0x8045ef <_ZL12g_ms_counter+0x2>
    5a3e:	90 93 f0 45 	sts	0x45F0, r25	; 0x8045f0 <_ZL12g_ms_counter+0x3>
			counting = true;
    5a42:	81 e0       	ldi	r24, 0x01	; 1
    5a44:	80 93 ec 45 	sts	0x45EC, r24	; 0x8045ec <_ZZ13util_delay_msE8counting>
    5a48:	16 c0       	rjmp	.+44     	; 0x5a76 <util_delay_ms+0x10a>
		}
	}
	else
	{
		TCB1.INTCTRL = 0 << TCB_CAPT_bp   /* Capture or Timeout: disabled */
		| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    5a4a:	10 92 15 0b 	sts	0x0B15, r1	; 0x800b15 <__TEXT_REGION_LENGTH__+0x7e0b15>

		counting = false;
    5a4e:	10 92 ec 45 	sts	0x45EC, r1	; 0x8045ec <_ZZ13util_delay_msE8counting>
		countdownValue = 0;
    5a52:	10 92 e8 45 	sts	0x45E8, r1	; 0x8045e8 <_ZZ13util_delay_msE14countdownValue>
    5a56:	10 92 e9 45 	sts	0x45E9, r1	; 0x8045e9 <_ZZ13util_delay_msE14countdownValue+0x1>
    5a5a:	10 92 ea 45 	sts	0x45EA, r1	; 0x8045ea <_ZZ13util_delay_msE14countdownValue+0x2>
    5a5e:	10 92 eb 45 	sts	0x45EB, r1	; 0x8045eb <_ZZ13util_delay_msE14countdownValue+0x3>
		g_ms_counter = 0;
    5a62:	10 92 ed 45 	sts	0x45ED, r1	; 0x8045ed <_ZL12g_ms_counter>
    5a66:	10 92 ee 45 	sts	0x45EE, r1	; 0x8045ee <_ZL12g_ms_counter+0x1>
    5a6a:	10 92 ef 45 	sts	0x45EF, r1	; 0x8045ef <_ZL12g_ms_counter+0x2>
    5a6e:	10 92 f0 45 	sts	0x45F0, r1	; 0x8045f0 <_ZL12g_ms_counter+0x3>
		return(false); /* timer reset */
    5a72:	80 e0       	ldi	r24, 0x00	; 0
    5a74:	03 c0       	rjmp	.+6      	; 0x5a7c <util_delay_ms+0x110>
	}
	
	TCB1.INTCTRL = 1 << TCB_CAPT_bp   /* Capture or Timeout: enabled */
	| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    5a76:	81 e0       	ldi	r24, 0x01	; 1
    5a78:	80 93 15 0b 	sts	0x0B15, r24	; 0x800b15 <__TEXT_REGION_LENGTH__+0x7e0b15>
	
	return(true);
}
    5a7c:	1f 91       	pop	r17
    5a7e:	0f 91       	pop	r16
    5a80:	08 95       	ret

00005a82 <__vector_13>:

/**
One millisecond utility counter based on CPU clock.
*/
ISR(TCB1_INT_vect)
{
    5a82:	1f 92       	push	r1
    5a84:	0f 92       	push	r0
    5a86:	0f b6       	in	r0, 0x3f	; 63
    5a88:	0f 92       	push	r0
    5a8a:	11 24       	eor	r1, r1
    5a8c:	8f 93       	push	r24
    5a8e:	9f 93       	push	r25
    5a90:	af 93       	push	r26
    5a92:	bf 93       	push	r27
    if(TCB1.INTFLAGS & TCB_CAPT_bm)
    5a94:	80 91 16 0b 	lds	r24, 0x0B16	; 0x800b16 <__TEXT_REGION_LENGTH__+0x7e0b16>
    5a98:	80 ff       	sbrs	r24, 0
    5a9a:	1d c0       	rjmp	.+58     	; 0x5ad6 <__vector_13+0x54>
    {
		if(g_ms_counter) /* check for 1-second interval */
    5a9c:	80 91 ed 45 	lds	r24, 0x45ED	; 0x8045ed <_ZL12g_ms_counter>
    5aa0:	90 91 ee 45 	lds	r25, 0x45EE	; 0x8045ee <_ZL12g_ms_counter+0x1>
    5aa4:	a0 91 ef 45 	lds	r26, 0x45EF	; 0x8045ef <_ZL12g_ms_counter+0x2>
    5aa8:	b0 91 f0 45 	lds	r27, 0x45F0	; 0x8045f0 <_ZL12g_ms_counter+0x3>
    5aac:	00 97       	sbiw	r24, 0x00	; 0
    5aae:	a1 05       	cpc	r26, r1
    5ab0:	b1 05       	cpc	r27, r1
    5ab2:	61 f0       	breq	.+24     	; 0x5acc <__vector_13+0x4a>
		{
			g_ms_counter--;	
    5ab4:	01 97       	sbiw	r24, 0x01	; 1
    5ab6:	a1 09       	sbc	r26, r1
    5ab8:	b1 09       	sbc	r27, r1
    5aba:	80 93 ed 45 	sts	0x45ED, r24	; 0x8045ed <_ZL12g_ms_counter>
    5abe:	90 93 ee 45 	sts	0x45EE, r25	; 0x8045ee <_ZL12g_ms_counter+0x1>
    5ac2:	a0 93 ef 45 	sts	0x45EF, r26	; 0x8045ef <_ZL12g_ms_counter+0x2>
    5ac6:	b0 93 f0 45 	sts	0x45F0, r27	; 0x8045f0 <_ZL12g_ms_counter+0x3>
    5aca:	02 c0       	rjmp	.+4      	; 0x5ad0 <__vector_13+0x4e>
		}
		else
		{
			TCB1.INTCTRL = 0 << TCB_CAPT_bp   /* Capture or Timeout: disabled */
			| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    5acc:	10 92 15 0b 	sts	0x0B15, r1	; 0x800b15 <__TEXT_REGION_LENGTH__+0x7e0b15>
		}

        TCB1.INTFLAGS = TCB_CAPT_bm; /* clear interrupt flag */
    5ad0:	81 e0       	ldi	r24, 0x01	; 1
    5ad2:	80 93 16 0b 	sts	0x0B16, r24	; 0x800b16 <__TEXT_REGION_LENGTH__+0x7e0b16>
    }
}
    5ad6:	bf 91       	pop	r27
    5ad8:	af 91       	pop	r26
    5ada:	9f 91       	pop	r25
    5adc:	8f 91       	pop	r24
    5ade:	0f 90       	pop	r0
    5ae0:	0f be       	out	0x3f, r0	; 63
    5ae2:	0f 90       	pop	r0
    5ae4:	1f 90       	pop	r1
    5ae6:	18 95       	reti

00005ae8 <_Z14txSetFrequencyPmh>:

			g_80m_frequency = DEFAULT_TX_80M_FREQUENCY;
			g_80m_power_level_mW = DEFAULT_TX_80M_POWER_MW;
			g_rtty_offset = DEFAULT_RTTY_OFFSET_FREQUENCY;

			saveAllTransmitterEEPROM();
    5ae8:	0f 93       	push	r16
    5aea:	1f 93       	push	r17
    5aec:	cf 93       	push	r28
    5aee:	df 93       	push	r29
    5af0:	fc 01       	movw	r30, r24
    5af2:	46 2f       	mov	r20, r22
    5af4:	60 81       	ld	r22, Z
    5af6:	71 81       	ldd	r23, Z+1	; 0x01
    5af8:	82 81       	ldd	r24, Z+2	; 0x02
    5afa:	93 81       	ldd	r25, Z+3	; 0x03
    5afc:	8b 01       	movw	r16, r22
    5afe:	9c 01       	movw	r18, r24
    5b00:	01 5e       	subi	r16, 0xE1	; 225
    5b02:	17 46       	sbci	r17, 0x67	; 103
    5b04:	25 43       	sbci	r18, 0x35	; 53
    5b06:	31 09       	sbc	r19, r1
    5b08:	0f 31       	cpi	r16, 0x1F	; 31
    5b0a:	11 4a       	sbci	r17, 0xA1	; 161
    5b0c:	27 40       	sbci	r18, 0x07	; 7
    5b0e:	31 05       	cpc	r19, r1
    5b10:	98 f4       	brcc	.+38     	; 0x5b38 <_Z14txSetFrequencyPmh+0x50>
    5b12:	24 2f       	mov	r18, r20
    5b14:	ef 01       	movw	r28, r30
    5b16:	41 e0       	ldi	r20, 0x01	; 1
    5b18:	0e 94 59 2b 	call	0x56b2	; 0x56b2 <si5351_set_freq>
    5b1c:	88 81       	ld	r24, Y
    5b1e:	99 81       	ldd	r25, Y+1	; 0x01
    5b20:	aa 81       	ldd	r26, Y+2	; 0x02
    5b22:	bb 81       	ldd	r27, Y+3	; 0x03
    5b24:	80 93 2c 40 	sts	0x402C, r24	; 0x80402c <_ZL15g_80m_frequency>
    5b28:	90 93 2d 40 	sts	0x402D, r25	; 0x80402d <_ZL15g_80m_frequency+0x1>
    5b2c:	a0 93 2e 40 	sts	0x402E, r26	; 0x80402e <_ZL15g_80m_frequency+0x2>
    5b30:	b0 93 2f 40 	sts	0x402F, r27	; 0x80402f <_ZL15g_80m_frequency+0x3>
    5b34:	81 e0       	ldi	r24, 0x01	; 1
    5b36:	01 c0       	rjmp	.+2      	; 0x5b3a <_Z14txSetFrequencyPmh+0x52>
    5b38:	80 e0       	ldi	r24, 0x00	; 0
    5b3a:	df 91       	pop	r29
    5b3c:	cf 91       	pop	r28
    5b3e:	1f 91       	pop	r17
    5b40:	0f 91       	pop	r16
    5b42:	08 95       	ret

00005b44 <_Z14txGetFrequencyv>:
    5b44:	80 91 f1 45 	lds	r24, 0x45F1	; 0x8045f1 <_ZL16g_tx_initialized>
    5b48:	88 23       	and	r24, r24
    5b4a:	49 f0       	breq	.+18     	; 0x5b5e <_Z14txGetFrequencyv+0x1a>
    5b4c:	60 91 2c 40 	lds	r22, 0x402C	; 0x80402c <_ZL15g_80m_frequency>
    5b50:	70 91 2d 40 	lds	r23, 0x402D	; 0x80402d <_ZL15g_80m_frequency+0x1>
    5b54:	80 91 2e 40 	lds	r24, 0x402E	; 0x80402e <_ZL15g_80m_frequency+0x2>
    5b58:	90 91 2f 40 	lds	r25, 0x402F	; 0x80402f <_ZL15g_80m_frequency+0x3>
    5b5c:	08 95       	ret
    5b5e:	60 e0       	ldi	r22, 0x00	; 0
    5b60:	70 e0       	ldi	r23, 0x00	; 0
    5b62:	cb 01       	movw	r24, r22
    5b64:	08 95       	ret

00005b66 <_Z18powerToTransmitterh>:
    5b66:	80 e0       	ldi	r24, 0x00	; 0
    5b68:	08 95       	ret

00005b6a <_Z14keyTransmitterh>:
    5b6a:	90 91 f1 45 	lds	r25, 0x45F1	; 0x8045f1 <_ZL16g_tx_initialized>
    5b6e:	99 23       	and	r25, r25
    5b70:	c1 f0       	breq	.+48     	; 0x5ba2 <_Z14keyTransmitterh+0x38>
    5b72:	88 23       	and	r24, r24
    5b74:	71 f0       	breq	.+28     	; 0x5b92 <_Z14keyTransmitterh+0x28>
    5b76:	80 91 f2 45 	lds	r24, 0x45F2	; 0x8045f2 <_ZL19g_transmitter_keyed>
    5b7a:	81 11       	cpse	r24, r1
    5b7c:	12 c0       	rjmp	.+36     	; 0x5ba2 <_Z14keyTransmitterh+0x38>
    5b7e:	61 e0       	ldi	r22, 0x01	; 1
    5b80:	81 e0       	ldi	r24, 0x01	; 1
    5b82:	0e 94 1a 2a 	call	0x5434	; 0x5434 <si5351_clock_enable>
    5b86:	81 11       	cpse	r24, r1
    5b88:	0c c0       	rjmp	.+24     	; 0x5ba2 <_Z14keyTransmitterh+0x38>
    5b8a:	81 e0       	ldi	r24, 0x01	; 1
    5b8c:	80 93 f2 45 	sts	0x45F2, r24	; 0x8045f2 <_ZL19g_transmitter_keyed>
    5b90:	08 95       	ret
    5b92:	60 e0       	ldi	r22, 0x00	; 0
    5b94:	81 e0       	ldi	r24, 0x01	; 1
    5b96:	0e 94 1a 2a 	call	0x5434	; 0x5434 <si5351_clock_enable>
    5b9a:	81 11       	cpse	r24, r1
    5b9c:	02 c0       	rjmp	.+4      	; 0x5ba2 <_Z14keyTransmitterh+0x38>
    5b9e:	10 92 f2 45 	sts	0x45F2, r1	; 0x8045f2 <_ZL19g_transmitter_keyed>
    5ba2:	08 95       	ret

00005ba4 <_Z15txSetParametersPjPh>:
    5ba4:	cf 93       	push	r28
    5ba6:	df 93       	push	r29
    5ba8:	cd b7       	in	r28, 0x3d	; 61
    5baa:	de b7       	in	r29, 0x3e	; 62
    5bac:	2b 97       	sbiw	r28, 0x0b	; 11
    5bae:	cd bf       	out	0x3d, r28	; 61
    5bb0:	de bf       	out	0x3e, r29	; 62
    5bb2:	88 87       	std	Y+8, r24	; 0x08
    5bb4:	99 87       	std	Y+9, r25	; 0x09
    5bb6:	6a 87       	std	Y+10, r22	; 0x0a
    5bb8:	7b 87       	std	Y+11, r23	; 0x0b
    5bba:	19 82       	std	Y+1, r1	; 0x01
    5bbc:	1a 82       	std	Y+2, r1	; 0x02
    5bbe:	1b 82       	std	Y+3, r1	; 0x03
    5bc0:	1c 82       	std	Y+4, r1	; 0x04
    5bc2:	88 85       	ldd	r24, Y+8	; 0x08
    5bc4:	99 85       	ldd	r25, Y+9	; 0x09
    5bc6:	89 2b       	or	r24, r25
    5bc8:	39 f0       	breq	.+14     	; 0x5bd8 <_Z15txSetParametersPjPh+0x34>
    5bca:	88 85       	ldd	r24, Y+8	; 0x08
    5bcc:	99 85       	ldd	r25, Y+9	; 0x09
    5bce:	fc 01       	movw	r30, r24
    5bd0:	80 81       	ld	r24, Z
    5bd2:	91 81       	ldd	r25, Z+1	; 0x01
    5bd4:	8b 83       	std	Y+3, r24	; 0x03
    5bd6:	9c 83       	std	Y+4, r25	; 0x04
    5bd8:	88 85       	ldd	r24, Y+8	; 0x08
    5bda:	99 85       	ldd	r25, Y+9	; 0x09
    5bdc:	89 2b       	or	r24, r25
    5bde:	09 f4       	brne	.+2      	; 0x5be2 <_Z15txSetParametersPjPh+0x3e>
    5be0:	4e c0       	rjmp	.+156    	; 0x5c7e <_Z15txSetParametersPjPh+0xda>
    5be2:	8b 81       	ldd	r24, Y+3	; 0x03
    5be4:	9c 81       	ldd	r25, Y+4	; 0x04
    5be6:	89 38       	cpi	r24, 0x89	; 137
    5be8:	93 41       	sbci	r25, 0x13	; 19
    5bea:	08 f0       	brcs	.+2      	; 0x5bee <_Z15txSetParametersPjPh+0x4a>
    5bec:	44 c0       	rjmp	.+136    	; 0x5c76 <_Z15txSetParametersPjPh+0xd2>
    5bee:	9e 01       	movw	r18, r28
    5bf0:	29 5f       	subi	r18, 0xF9	; 249
    5bf2:	3f 4f       	sbci	r19, 0xFF	; 255
    5bf4:	ae 01       	movw	r20, r28
    5bf6:	4a 5f       	subi	r20, 0xFA	; 250
    5bf8:	5f 4f       	sbci	r21, 0xFF	; 255
    5bfa:	be 01       	movw	r22, r28
    5bfc:	6b 5f       	subi	r22, 0xFB	; 251
    5bfe:	7f 4f       	sbci	r23, 0xFF	; 255
    5c00:	ce 01       	movw	r24, r28
    5c02:	03 96       	adiw	r24, 0x03	; 3
    5c04:	0e 94 90 2e 	call	0x5d20	; 0x5d20 <_Z22txMilliwattsToSettingsPjPhS0_S0_>
    5c08:	8a 83       	std	Y+2, r24	; 0x02
    5c0a:	81 e0       	ldi	r24, 0x01	; 1
    5c0c:	9a 81       	ldd	r25, Y+2	; 0x02
    5c0e:	9f 3c       	cpi	r25, 0xCF	; 207
    5c10:	09 f0       	breq	.+2      	; 0x5c14 <_Z15txSetParametersPjPh+0x70>
    5c12:	80 e0       	ldi	r24, 0x00	; 0
    5c14:	89 83       	std	Y+1, r24	; 0x01
    5c16:	8b 81       	ldd	r24, Y+3	; 0x03
    5c18:	9c 81       	ldd	r25, Y+4	; 0x04
    5c1a:	21 e0       	ldi	r18, 0x01	; 1
    5c1c:	89 2b       	or	r24, r25
    5c1e:	09 f0       	breq	.+2      	; 0x5c22 <_Z15txSetParametersPjPh+0x7e>
    5c20:	20 e0       	ldi	r18, 0x00	; 0
    5c22:	82 2f       	mov	r24, r18
    5c24:	80 93 36 40 	sts	0x4036, r24	; 0x804036 <g_tx_power_is_zero>
    5c28:	89 81       	ldd	r24, Y+1	; 0x01
    5c2a:	88 23       	and	r24, r24
    5c2c:	e1 f4       	brne	.+56     	; 0x5c66 <_Z15txSetParametersPjPh+0xc2>
    5c2e:	8b 81       	ldd	r24, Y+3	; 0x03
    5c30:	9c 81       	ldd	r25, Y+4	; 0x04
    5c32:	80 93 30 40 	sts	0x4030, r24	; 0x804030 <_ZL20g_80m_power_level_mW>
    5c36:	90 93 31 40 	sts	0x4031, r25	; 0x804031 <_ZL20g_80m_power_level_mW+0x1>
    5c3a:	0e 94 67 2f 	call	0x5ece	; 0x5ece <_Z18txIsAntennaForBandv>
    5c3e:	98 2f       	mov	r25, r24
    5c40:	81 e0       	ldi	r24, 0x01	; 1
    5c42:	99 23       	and	r25, r25
    5c44:	09 f4       	brne	.+2      	; 0x5c48 <_Z15txSetParametersPjPh+0xa4>
    5c46:	80 e0       	ldi	r24, 0x00	; 0
    5c48:	88 23       	and	r24, r24
    5c4a:	39 f4       	brne	.+14     	; 0x5c5a <_Z15txSetParametersPjPh+0xb6>
    5c4c:	81 e0       	ldi	r24, 0x01	; 1
    5c4e:	80 93 36 40 	sts	0x4036, r24	; 0x804036 <g_tx_power_is_zero>
    5c52:	81 e0       	ldi	r24, 0x01	; 1
    5c54:	89 83       	std	Y+1, r24	; 0x01
    5c56:	86 ef       	ldi	r24, 0xF6	; 246
    5c58:	8a 83       	std	Y+2, r24	; 0x02
    5c5a:	80 91 36 40 	lds	r24, 0x4036	; 0x804036 <g_tx_power_is_zero>
    5c5e:	88 23       	and	r24, r24
    5c60:	09 f4       	brne	.+2      	; 0x5c64 <_Z15txSetParametersPjPh+0xc0>
    5c62:	89 81       	ldd	r24, Y+1	; 0x01
    5c64:	00 00       	nop
    5c66:	2b 81       	ldd	r18, Y+3	; 0x03
    5c68:	3c 81       	ldd	r19, Y+4	; 0x04
    5c6a:	88 85       	ldd	r24, Y+8	; 0x08
    5c6c:	99 85       	ldd	r25, Y+9	; 0x09
    5c6e:	fc 01       	movw	r30, r24
    5c70:	20 83       	st	Z, r18
    5c72:	31 83       	std	Z+1, r19	; 0x01
    5c74:	04 c0       	rjmp	.+8      	; 0x5c7e <_Z15txSetParametersPjPh+0xda>
    5c76:	81 e0       	ldi	r24, 0x01	; 1
    5c78:	89 83       	std	Y+1, r24	; 0x01
    5c7a:	85 ef       	ldi	r24, 0xF5	; 245
    5c7c:	8a 83       	std	Y+2, r24	; 0x02
    5c7e:	89 81       	ldd	r24, Y+1	; 0x01
    5c80:	8a 81       	ldd	r24, Y+2	; 0x02
    5c82:	2b 96       	adiw	r28, 0x0b	; 11
    5c84:	cd bf       	out	0x3d, r28	; 61
    5c86:	de bf       	out	0x3e, r29	; 62
    5c88:	df 91       	pop	r29
    5c8a:	cf 91       	pop	r28
    5c8c:	08 95       	ret

00005c8e <_Z22storeTransmitterValuesv>:
    5c8e:	0e 94 4a 2e 	call	0x5c94	; 0x5c94 <_Z24saveAllTransmitterEEPROMv>
    5c92:	08 95       	ret

00005c94 <_Z24saveAllTransmitterEEPROMv>:
		}
	}

	void saveAllTransmitterEEPROM(void)
	{
    5c94:	cf 93       	push	r28
    5c96:	df 93       	push	r29
    5c98:	cd b7       	in	r28, 0x3d	; 61
    5c9a:	de b7       	in	r29, 0x3e	; 62
    5c9c:	60 97       	sbiw	r28, 0x10	; 16
    5c9e:	cd bf       	out	0x3d, r28	; 61
    5ca0:	de bf       	out	0x3e, r29	; 62
		uint8_t table[16] = DEFAULT_80M_POWER_TABLE;
    5ca2:	80 e1       	ldi	r24, 0x10	; 16
    5ca4:	ec ee       	ldi	r30, 0xEC	; 236
    5ca6:	f1 e4       	ldi	r31, 0x41	; 65
    5ca8:	de 01       	movw	r26, r28
    5caa:	11 96       	adiw	r26, 0x01	; 1
    5cac:	01 90       	ld	r0, Z+
    5cae:	0d 92       	st	X+, r0
    5cb0:	8a 95       	dec	r24
    5cb2:	e1 f7       	brne	.-8      	; 0x5cac <_Z24saveAllTransmitterEEPROMv+0x18>

		eeprom_update_dword((uint32_t*)&ee_active_80m_frequency, g_80m_frequency);
    5cb4:	40 91 2c 40 	lds	r20, 0x402C	; 0x80402c <_ZL15g_80m_frequency>
    5cb8:	50 91 2d 40 	lds	r21, 0x402D	; 0x80402d <_ZL15g_80m_frequency+0x1>
    5cbc:	60 91 2e 40 	lds	r22, 0x402E	; 0x80402e <_ZL15g_80m_frequency+0x2>
    5cc0:	70 91 2f 40 	lds	r23, 0x402F	; 0x80402f <_ZL15g_80m_frequency+0x3>
    5cc4:	80 e3       	ldi	r24, 0x30	; 48
    5cc6:	90 e0       	ldi	r25, 0x00	; 0
    5cc8:	0e 94 82 37 	call	0x6f04	; 0x6f04 <eeprom_update_dword>
		eeprom_update_word(&ee_80m_power_level_mW, g_80m_power_level_mW);
    5ccc:	60 91 30 40 	lds	r22, 0x4030	; 0x804030 <_ZL20g_80m_power_level_mW>
    5cd0:	70 91 31 40 	lds	r23, 0x4031	; 0x804031 <_ZL20g_80m_power_level_mW+0x1>
    5cd4:	84 e3       	ldi	r24, 0x34	; 52
    5cd6:	90 e0       	ldi	r25, 0x00	; 0
    5cd8:	0e 94 8e 37 	call	0x6f1c	; 0x6f1c <eeprom_update_word>
		eeprom_update_dword((uint32_t*)&ee_cw_offset_frequency, g_rtty_offset);
    5cdc:	40 91 32 40 	lds	r20, 0x4032	; 0x804032 <_ZL13g_rtty_offset>
    5ce0:	50 91 33 40 	lds	r21, 0x4033	; 0x804033 <_ZL13g_rtty_offset+0x1>
    5ce4:	60 91 34 40 	lds	r22, 0x4034	; 0x804034 <_ZL13g_rtty_offset+0x2>
    5ce8:	70 91 35 40 	lds	r23, 0x4035	; 0x804035 <_ZL13g_rtty_offset+0x3>
    5cec:	86 e3       	ldi	r24, 0x36	; 54
    5cee:	90 e0       	ldi	r25, 0x00	; 0
    5cf0:	0e 94 82 37 	call	0x6f04	; 0x6f04 <eeprom_update_dword>
		eeprom_update_dword((uint32_t*)&ee_si5351_ref_correction, si5351_get_correction());
    5cf4:	0e 94 a8 26 	call	0x4d50	; 0x4d50 <si5351_get_correction>
    5cf8:	ab 01       	movw	r20, r22
    5cfa:	bc 01       	movw	r22, r24
    5cfc:	8c e2       	ldi	r24, 0x2C	; 44
    5cfe:	90 e0       	ldi	r25, 0x00	; 0
    5d00:	0e 94 82 37 	call	0x6f04	; 0x6f04 <eeprom_update_dword>
		eeprom_write_block(table, ee_80m_power_table, sizeof(table));
    5d04:	40 e1       	ldi	r20, 0x10	; 16
    5d06:	50 e0       	ldi	r21, 0x00	; 0
    5d08:	6a e3       	ldi	r22, 0x3A	; 58
    5d0a:	70 e0       	ldi	r23, 0x00	; 0
    5d0c:	ce 01       	movw	r24, r28
    5d0e:	01 96       	adiw	r24, 0x01	; 1
    5d10:	0e 94 94 37 	call	0x6f28	; 0x6f28 <eeprom_write_block>
	}
    5d14:	60 96       	adiw	r28, 0x10	; 16
    5d16:	cd bf       	out	0x3d, r28	; 61
    5d18:	de bf       	out	0x3e, r29	; 62
    5d1a:	df 91       	pop	r29
    5d1c:	cf 91       	pop	r28
    5d1e:	08 95       	ret

00005d20 <_Z22txMilliwattsToSettingsPjPhS0_S0_>:


#endif  /*#ifdef INCLUDE_TRANSMITTER_SUPPORT */

EC txMilliwattsToSettings(uint16_t* powerMW, uint8_t* driveLevel, uint8_t* modLevelHigh, uint8_t* modLevelLow)
{
    5d20:	cf 92       	push	r12
    5d22:	df 92       	push	r13
    5d24:	ef 92       	push	r14
    5d26:	ff 92       	push	r15
    5d28:	0f 93       	push	r16
    5d2a:	1f 93       	push	r17
    5d2c:	cf 93       	push	r28
    5d2e:	dc 01       	movw	r26, r24
	EC ec = ERROR_CODE_NO_ERROR;
	int16_t maxPwr;
	uint8_t index;

	if(powerMW == NULL)
    5d30:	89 2b       	or	r24, r25
    5d32:	09 f4       	brne	.+2      	; 0x5d36 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x16>
    5d34:	c3 c0       	rjmp	.+390    	; 0x5ebc <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x19c>
	{
		return(ERROR_CODE_SW_LOGIC_ERROR);
	}

	if(g_battery_type == BATTERY_4r2V)
    5d36:	80 91 06 40 	lds	r24, 0x4006	; 0x804006 <g_battery_type>
    5d3a:	81 30       	cpi	r24, 0x01	; 1
    5d3c:	19 f4       	brne	.+6      	; 0x5d44 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x24>
	{
		maxPwr = MAX_TX_POWER_80M_4r2V_MW;
    5d3e:	80 ed       	ldi	r24, 0xD0	; 208
    5d40:	97 e0       	ldi	r25, 0x07	; 7
    5d42:	02 c0       	rjmp	.+4      	; 0x5d48 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x28>
	}
	else
	{
		maxPwr = MAX_TX_POWER_80M_MW;
    5d44:	88 e8       	ldi	r24, 0x88	; 136
    5d46:	93 e1       	ldi	r25, 0x13	; 19
	}

	if((int16_t)*powerMW > maxPwr)
    5d48:	ed 91       	ld	r30, X+
    5d4a:	fc 91       	ld	r31, X
    5d4c:	11 97       	sbiw	r26, 0x01	; 1
    5d4e:	8e 17       	cp	r24, r30
    5d50:	9f 07       	cpc	r25, r31
    5d52:	14 f0       	brlt	.+4      	; 0x5d58 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x38>

#endif  /*#ifdef INCLUDE_TRANSMITTER_SUPPORT */

EC txMilliwattsToSettings(uint16_t* powerMW, uint8_t* driveLevel, uint8_t* modLevelHigh, uint8_t* modLevelLow)
{
	EC ec = ERROR_CODE_NO_ERROR;
    5d54:	c0 e0       	ldi	r28, 0x00	; 0
    5d56:	01 c0       	rjmp	.+2      	; 0x5d5a <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x3a>
		maxPwr = MAX_TX_POWER_80M_MW;
	}

	if((int16_t)*powerMW > maxPwr)
	{
		ec = ERROR_CODE_POWER_LEVEL_NOT_SUPPORTED;
    5d58:	c5 ef       	ldi	r28, 0xF5	; 245
	}

	*powerMW = CLAMP(0, (int16_t)*powerMW, maxPwr);
    5d5a:	8e 17       	cp	r24, r30
    5d5c:	9f 07       	cpc	r25, r31
    5d5e:	2c f0       	brlt	.+10     	; 0x5d6a <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x4a>
    5d60:	ff 23       	and	r31, r31
    5d62:	24 f4       	brge	.+8      	; 0x5d6c <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x4c>
    5d64:	e0 e0       	ldi	r30, 0x00	; 0
    5d66:	f0 e0       	ldi	r31, 0x00	; 0
    5d68:	01 c0       	rjmp	.+2      	; 0x5d6c <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x4c>
    5d6a:	fc 01       	movw	r30, r24
    5d6c:	cf 01       	movw	r24, r30
    5d6e:	ed 93       	st	X+, r30
    5d70:	fc 93       	st	X, r31
    5d72:	11 97       	sbiw	r26, 0x01	; 1

	if(*powerMW < 5)
    5d74:	e5 30       	cpi	r30, 0x05	; 5
    5d76:	f1 05       	cpc	r31, r1
    5d78:	20 f4       	brcc	.+8      	; 0x5d82 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x62>
	{
		index = 0;
		*powerMW = 0;
    5d7a:	1d 92       	st	X+, r1
    5d7c:	1c 92       	st	X, r1

	*powerMW = CLAMP(0, (int16_t)*powerMW, maxPwr);

	if(*powerMW < 5)
	{
		index = 0;
    5d7e:	80 e0       	ldi	r24, 0x00	; 0
    5d80:	8d c0       	rjmp	.+282    	; 0x5e9c <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x17c>
		*powerMW = 0;
	}
	else if(*powerMW < 50)
    5d82:	e2 33       	cpi	r30, 0x32	; 50
    5d84:	f1 05       	cpc	r31, r1
    5d86:	30 f4       	brcc	.+12     	; 0x5d94 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x74>
	{
		index = 1;
		*powerMW = 10;
    5d88:	8a e0       	ldi	r24, 0x0A	; 10
    5d8a:	90 e0       	ldi	r25, 0x00	; 0
    5d8c:	8d 93       	st	X+, r24
    5d8e:	9c 93       	st	X, r25
		index = 0;
		*powerMW = 0;
	}
	else if(*powerMW < 50)
	{
		index = 1;
    5d90:	81 e0       	ldi	r24, 0x01	; 1
    5d92:	84 c0       	rjmp	.+264    	; 0x5e9c <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x17c>
		*powerMW = 10;
	}
	else if(*powerMW < 150)
    5d94:	e6 39       	cpi	r30, 0x96	; 150
    5d96:	f1 05       	cpc	r31, r1
    5d98:	30 f4       	brcc	.+12     	; 0x5da6 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x86>
	{
		index = 2;
		*powerMW = 100;
    5d9a:	84 e6       	ldi	r24, 0x64	; 100
    5d9c:	90 e0       	ldi	r25, 0x00	; 0
    5d9e:	8d 93       	st	X+, r24
    5da0:	9c 93       	st	X, r25
		index = 1;
		*powerMW = 10;
	}
	else if(*powerMW < 150)
	{
		index = 2;
    5da2:	82 e0       	ldi	r24, 0x02	; 2
    5da4:	7b c0       	rjmp	.+246    	; 0x5e9c <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x17c>
		*powerMW = 100;
	}
	else if(*powerMW < 250)
    5da6:	ea 3f       	cpi	r30, 0xFA	; 250
    5da8:	f1 05       	cpc	r31, r1
    5daa:	30 f4       	brcc	.+12     	; 0x5db8 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x98>
	{
		index = 3;
		*powerMW = 200;
    5dac:	88 ec       	ldi	r24, 0xC8	; 200
    5dae:	90 e0       	ldi	r25, 0x00	; 0
    5db0:	8d 93       	st	X+, r24
    5db2:	9c 93       	st	X, r25
		index = 2;
		*powerMW = 100;
	}
	else if(*powerMW < 250)
	{
		index = 3;
    5db4:	83 e0       	ldi	r24, 0x03	; 3
    5db6:	72 c0       	rjmp	.+228    	; 0x5e9c <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x17c>
		*powerMW = 200;
	}
	else if(*powerMW < 350)
    5db8:	8e 35       	cpi	r24, 0x5E	; 94
    5dba:	e1 e0       	ldi	r30, 0x01	; 1
    5dbc:	9e 07       	cpc	r25, r30
    5dbe:	30 f4       	brcc	.+12     	; 0x5dcc <_Z22txMilliwattsToSettingsPjPhS0_S0_+0xac>
	{
		index = 4;
		*powerMW = 300;
    5dc0:	8c e2       	ldi	r24, 0x2C	; 44
    5dc2:	91 e0       	ldi	r25, 0x01	; 1
    5dc4:	8d 93       	st	X+, r24
    5dc6:	9c 93       	st	X, r25
		index = 3;
		*powerMW = 200;
	}
	else if(*powerMW < 350)
	{
		index = 4;
    5dc8:	84 e0       	ldi	r24, 0x04	; 4
    5dca:	68 c0       	rjmp	.+208    	; 0x5e9c <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x17c>
		*powerMW = 300;
	}
	else if(*powerMW < 450)
    5dcc:	82 3c       	cpi	r24, 0xC2	; 194
    5dce:	f1 e0       	ldi	r31, 0x01	; 1
    5dd0:	9f 07       	cpc	r25, r31
    5dd2:	30 f4       	brcc	.+12     	; 0x5de0 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0xc0>
	{
		index = 5;
		*powerMW = 400;
    5dd4:	80 e9       	ldi	r24, 0x90	; 144
    5dd6:	91 e0       	ldi	r25, 0x01	; 1
    5dd8:	8d 93       	st	X+, r24
    5dda:	9c 93       	st	X, r25
		index = 4;
		*powerMW = 300;
	}
	else if(*powerMW < 450)
	{
		index = 5;
    5ddc:	85 e0       	ldi	r24, 0x05	; 5
    5dde:	5e c0       	rjmp	.+188    	; 0x5e9c <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x17c>
		*powerMW = 400;
	}
	else if(*powerMW < 550)
    5de0:	86 32       	cpi	r24, 0x26	; 38
    5de2:	e2 e0       	ldi	r30, 0x02	; 2
    5de4:	9e 07       	cpc	r25, r30
    5de6:	30 f4       	brcc	.+12     	; 0x5df4 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0xd4>
	{
		index = 6;
		*powerMW = 500;
    5de8:	84 ef       	ldi	r24, 0xF4	; 244
    5dea:	91 e0       	ldi	r25, 0x01	; 1
    5dec:	8d 93       	st	X+, r24
    5dee:	9c 93       	st	X, r25
		index = 5;
		*powerMW = 400;
	}
	else if(*powerMW < 550)
	{
		index = 6;
    5df0:	86 e0       	ldi	r24, 0x06	; 6
    5df2:	54 c0       	rjmp	.+168    	; 0x5e9c <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x17c>
		*powerMW = 500;
	}
	else if(*powerMW < 650)
    5df4:	8a 38       	cpi	r24, 0x8A	; 138
    5df6:	f2 e0       	ldi	r31, 0x02	; 2
    5df8:	9f 07       	cpc	r25, r31
    5dfa:	30 f4       	brcc	.+12     	; 0x5e08 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0xe8>
	{
		index = 7;
		*powerMW = 600;
    5dfc:	88 e5       	ldi	r24, 0x58	; 88
    5dfe:	92 e0       	ldi	r25, 0x02	; 2
    5e00:	8d 93       	st	X+, r24
    5e02:	9c 93       	st	X, r25
		index = 6;
		*powerMW = 500;
	}
	else if(*powerMW < 650)
	{
		index = 7;
    5e04:	87 e0       	ldi	r24, 0x07	; 7
    5e06:	4a c0       	rjmp	.+148    	; 0x5e9c <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x17c>
		*powerMW = 600;
	}
	else if(*powerMW < 900)
    5e08:	84 38       	cpi	r24, 0x84	; 132
    5e0a:	e3 e0       	ldi	r30, 0x03	; 3
    5e0c:	9e 07       	cpc	r25, r30
    5e0e:	30 f4       	brcc	.+12     	; 0x5e1c <_Z22txMilliwattsToSettingsPjPhS0_S0_+0xfc>
	{
		index = 8;
		*powerMW = 800;
    5e10:	80 e2       	ldi	r24, 0x20	; 32
    5e12:	93 e0       	ldi	r25, 0x03	; 3
    5e14:	8d 93       	st	X+, r24
    5e16:	9c 93       	st	X, r25
		index = 7;
		*powerMW = 600;
	}
	else if(*powerMW < 900)
	{
		index = 8;
    5e18:	88 e0       	ldi	r24, 0x08	; 8
    5e1a:	40 c0       	rjmp	.+128    	; 0x5e9c <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x17c>
		*powerMW = 800;
	}
	else if(*powerMW < 1250)
    5e1c:	82 3e       	cpi	r24, 0xE2	; 226
    5e1e:	f4 e0       	ldi	r31, 0x04	; 4
    5e20:	9f 07       	cpc	r25, r31
    5e22:	30 f4       	brcc	.+12     	; 0x5e30 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x110>
	{
		index = 9;
		*powerMW = 1000;
    5e24:	88 ee       	ldi	r24, 0xE8	; 232
    5e26:	93 e0       	ldi	r25, 0x03	; 3
    5e28:	8d 93       	st	X+, r24
    5e2a:	9c 93       	st	X, r25
		index = 8;
		*powerMW = 800;
	}
	else if(*powerMW < 1250)
	{
		index = 9;
    5e2c:	89 e0       	ldi	r24, 0x09	; 9
    5e2e:	36 c0       	rjmp	.+108    	; 0x5e9c <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x17c>
		*powerMW = 1000;
	}
	else if(*powerMW < 1750)
    5e30:	86 3d       	cpi	r24, 0xD6	; 214
    5e32:	e6 e0       	ldi	r30, 0x06	; 6
    5e34:	9e 07       	cpc	r25, r30
    5e36:	30 f4       	brcc	.+12     	; 0x5e44 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x124>
	{
		index = 10;
		*powerMW = 1500;
    5e38:	8c ed       	ldi	r24, 0xDC	; 220
    5e3a:	95 e0       	ldi	r25, 0x05	; 5
    5e3c:	8d 93       	st	X+, r24
    5e3e:	9c 93       	st	X, r25
		index = 9;
		*powerMW = 1000;
	}
	else if(*powerMW < 1750)
	{
		index = 10;
    5e40:	8a e0       	ldi	r24, 0x0A	; 10
    5e42:	2c c0       	rjmp	.+88     	; 0x5e9c <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x17c>
		*powerMW = 1500;
	}
	else if(*powerMW < 2250)
    5e44:	8a 3c       	cpi	r24, 0xCA	; 202
    5e46:	f8 e0       	ldi	r31, 0x08	; 8
    5e48:	9f 07       	cpc	r25, r31
    5e4a:	30 f4       	brcc	.+12     	; 0x5e58 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x138>
	{
		index = 11;
		*powerMW = 2000;
    5e4c:	80 ed       	ldi	r24, 0xD0	; 208
    5e4e:	97 e0       	ldi	r25, 0x07	; 7
    5e50:	8d 93       	st	X+, r24
    5e52:	9c 93       	st	X, r25
		index = 10;
		*powerMW = 1500;
	}
	else if(*powerMW < 2250)
	{
		index = 11;
    5e54:	8b e0       	ldi	r24, 0x0B	; 11
    5e56:	22 c0       	rjmp	.+68     	; 0x5e9c <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x17c>
		*powerMW = 2000;
	}
	else if(*powerMW < 2750)
    5e58:	8e 3b       	cpi	r24, 0xBE	; 190
    5e5a:	ea e0       	ldi	r30, 0x0A	; 10
    5e5c:	9e 07       	cpc	r25, r30
    5e5e:	30 f4       	brcc	.+12     	; 0x5e6c <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x14c>
	{
		index = 12;
		*powerMW = 2500;
    5e60:	84 ec       	ldi	r24, 0xC4	; 196
    5e62:	99 e0       	ldi	r25, 0x09	; 9
    5e64:	8d 93       	st	X+, r24
    5e66:	9c 93       	st	X, r25
		index = 11;
		*powerMW = 2000;
	}
	else if(*powerMW < 2750)
	{
		index = 12;
    5e68:	8c e0       	ldi	r24, 0x0C	; 12
    5e6a:	18 c0       	rjmp	.+48     	; 0x5e9c <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x17c>
		*powerMW = 2500;
	}
	else if(*powerMW < 3500)
    5e6c:	8c 3a       	cpi	r24, 0xAC	; 172
    5e6e:	fd e0       	ldi	r31, 0x0D	; 13
    5e70:	9f 07       	cpc	r25, r31
    5e72:	30 f4       	brcc	.+12     	; 0x5e80 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x160>
	{
		index = 13;
		*powerMW = 3000;
    5e74:	88 eb       	ldi	r24, 0xB8	; 184
    5e76:	9b e0       	ldi	r25, 0x0B	; 11
    5e78:	8d 93       	st	X+, r24
    5e7a:	9c 93       	st	X, r25
		index = 12;
		*powerMW = 2500;
	}
	else if(*powerMW < 3500)
	{
		index = 13;
    5e7c:	8d e0       	ldi	r24, 0x0D	; 13
    5e7e:	0e c0       	rjmp	.+28     	; 0x5e9c <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x17c>
		*powerMW = 3000;
	}
	else if(*powerMW < 4500)
    5e80:	84 39       	cpi	r24, 0x94	; 148
    5e82:	91 41       	sbci	r25, 0x11	; 17
    5e84:	30 f4       	brcc	.+12     	; 0x5e92 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x172>
	{
		index = 14;
		*powerMW = 4000;
    5e86:	80 ea       	ldi	r24, 0xA0	; 160
    5e88:	9f e0       	ldi	r25, 0x0F	; 15
    5e8a:	8d 93       	st	X+, r24
    5e8c:	9c 93       	st	X, r25
		index = 13;
		*powerMW = 3000;
	}
	else if(*powerMW < 4500)
	{
		index = 14;
    5e8e:	8e e0       	ldi	r24, 0x0E	; 14
    5e90:	05 c0       	rjmp	.+10     	; 0x5e9c <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x17c>
		*powerMW = 4000;
	}
	else
	{
		index = 15;
		*powerMW = 5000;
    5e92:	88 e8       	ldi	r24, 0x88	; 136
    5e94:	93 e1       	ldi	r25, 0x13	; 19
    5e96:	8d 93       	st	X+, r24
    5e98:	9c 93       	st	X, r25
		index = 14;
		*powerMW = 4000;
	}
	else
	{
		index = 15;
    5e9a:	8f e0       	ldi	r24, 0x0F	; 15
    5e9c:	89 01       	movw	r16, r18
    5e9e:	7a 01       	movw	r14, r20
    5ea0:	6b 01       	movw	r12, r22
		*powerMW = 5000;
	}

	*driveLevel = eeprom_read_byte(&ee_80m_power_table[index]);
    5ea2:	90 e0       	ldi	r25, 0x00	; 0
    5ea4:	86 5c       	subi	r24, 0xC6	; 198
    5ea6:	9f 4f       	sbci	r25, 0xFF	; 255
    5ea8:	0e 94 6e 37 	call	0x6edc	; 0x6edc <eeprom_read_byte>
    5eac:	f6 01       	movw	r30, r12
    5eae:	80 83       	st	Z, r24
	*modLevelHigh = 0;
    5eb0:	f7 01       	movw	r30, r14
    5eb2:	10 82       	st	Z, r1
	*modLevelLow = 0;
    5eb4:	f8 01       	movw	r30, r16
    5eb6:	10 82       	st	Z, r1
	*driveLevel = MIN(*driveLevel, MAX_80M_PWR_SETTING);

	return(ec);
    5eb8:	8c 2f       	mov	r24, r28
    5eba:	01 c0       	rjmp	.+2      	; 0x5ebe <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x19e>
	int16_t maxPwr;
	uint8_t index;

	if(powerMW == NULL)
	{
		return(ERROR_CODE_SW_LOGIC_ERROR);
    5ebc:	8f ec       	ldi	r24, 0xCF	; 207
	*modLevelHigh = 0;
	*modLevelLow = 0;
	*driveLevel = MIN(*driveLevel, MAX_80M_PWR_SETTING);

	return(ec);
}
    5ebe:	cf 91       	pop	r28
    5ec0:	1f 91       	pop	r17
    5ec2:	0f 91       	pop	r16
    5ec4:	ff 90       	pop	r15
    5ec6:	ef 90       	pop	r14
    5ec8:	df 90       	pop	r13
    5eca:	cf 90       	pop	r12
    5ecc:	08 95       	ret

00005ece <_Z18txIsAntennaForBandv>:

/**
 */
BOOL __attribute__((optimize("O0"))) txIsAntennaForBand(void)
{
    5ece:	cf 93       	push	r28
    5ed0:	df 93       	push	r29
    5ed2:	1f 92       	push	r1
    5ed4:	cd b7       	in	r28, 0x3d	; 61
    5ed6:	de b7       	in	r29, 0x3e	; 62
	BOOL result = FALSE;
    5ed8:	19 82       	std	Y+1, r1	; 0x01

	switch(g_antenna_connect_state)
    5eda:	80 91 8a 42 	lds	r24, 0x428A	; 0x80428a <g_antenna_connect_state>
    5ede:	88 2f       	mov	r24, r24
    5ee0:	90 e0       	ldi	r25, 0x00	; 0
    5ee2:	02 97       	sbiw	r24, 0x02	; 2
    5ee4:	09 f0       	breq	.+2      	; 0x5ee8 <_Z18txIsAntennaForBandv+0x1a>

		default:
		{

		}
		break;
    5ee6:	03 c0       	rjmp	.+6      	; 0x5eee <_Z18txIsAntennaForBandv+0x20>

	switch(g_antenna_connect_state)
	{
		case ANT_80M_CONNECTED:
		{
			result = TRUE;
    5ee8:	81 e0       	ldi	r24, 0x01	; 1
    5eea:	89 83       	std	Y+1, r24	; 0x01
		}
		break;
    5eec:	00 00       	nop

		}
		break;
	}

	return( result);
    5eee:	89 81       	ldd	r24, Y+1	; 0x01
}
    5ef0:	0f 90       	pop	r0
    5ef2:	df 91       	pop	r29
    5ef4:	cf 91       	pop	r28
    5ef6:	08 95       	ret

00005ef8 <USART0_init>:
 *
 * \return Nothing
 */
void USART1_enable_rx()
{
	USART1.CTRLB |= USART_RXEN_bm;
    5ef8:	0e 94 0d 31 	call	0x621a	; 0x621a <__floatunsisf>
    5efc:	20 e0       	ldi	r18, 0x00	; 0
    5efe:	30 e0       	ldi	r19, 0x00	; 0
    5f00:	40 e8       	ldi	r20, 0x80	; 128
    5f02:	51 e4       	ldi	r21, 0x41	; 65
    5f04:	0e 94 c4 31 	call	0x6388	; 0x6388 <__mulsf3>
    5f08:	9b 01       	movw	r18, r22
    5f0a:	ac 01       	movw	r20, r24
    5f0c:	60 e0       	ldi	r22, 0x00	; 0
    5f0e:	74 e2       	ldi	r23, 0x24	; 36
    5f10:	84 e7       	ldi	r24, 0x74	; 116
    5f12:	9d e4       	ldi	r25, 0x4D	; 77
    5f14:	0e 94 65 30 	call	0x60ca	; 0x60ca <__divsf3>
    5f18:	20 e0       	ldi	r18, 0x00	; 0
    5f1a:	30 e0       	ldi	r19, 0x00	; 0
    5f1c:	40 e0       	ldi	r20, 0x00	; 0
    5f1e:	5f e3       	ldi	r21, 0x3F	; 63
    5f20:	0e 94 f4 2f 	call	0x5fe8	; 0x5fe8 <__addsf3>
    5f24:	0e 94 de 30 	call	0x61bc	; 0x61bc <__fixunssfsi>
    5f28:	e0 e0       	ldi	r30, 0x00	; 0
    5f2a:	f8 e0       	ldi	r31, 0x08	; 8
    5f2c:	60 87       	std	Z+8, r22	; 0x08
    5f2e:	71 87       	std	Z+9, r23	; 0x09
    5f30:	80 e8       	ldi	r24, 0x80	; 128
    5f32:	85 83       	std	Z+5, r24	; 0x05
    5f34:	80 ec       	ldi	r24, 0xC0	; 192
    5f36:	86 83       	std	Z+6, r24	; 0x06
    5f38:	80 e0       	ldi	r24, 0x00	; 0
    5f3a:	08 95       	ret

00005f3c <USART0_enable_tx>:
    5f3c:	e0 e0       	ldi	r30, 0x00	; 0
    5f3e:	f8 e0       	ldi	r31, 0x08	; 8
    5f40:	86 81       	ldd	r24, Z+6	; 0x06
    5f42:	80 64       	ori	r24, 0x40	; 64
    5f44:	86 83       	std	Z+6, r24	; 0x06
    5f46:	85 81       	ldd	r24, Z+5	; 0x05
    5f48:	80 62       	ori	r24, 0x20	; 32
    5f4a:	85 83       	std	Z+5, r24	; 0x05
    5f4c:	08 95       	ret

00005f4e <USART0_disable>:
    5f4e:	e0 e0       	ldi	r30, 0x00	; 0
    5f50:	f8 e0       	ldi	r31, 0x08	; 8
    5f52:	86 81       	ldd	r24, Z+6	; 0x06
    5f54:	8f 73       	andi	r24, 0x3F	; 63
    5f56:	86 83       	std	Z+6, r24	; 0x06
    5f58:	08 95       	ret

00005f5a <USART0_get_data>:
    5f5a:	80 91 00 08 	lds	r24, 0x0800	; 0x800800 <__TEXT_REGION_LENGTH__+0x7e0800>
    5f5e:	08 95       	ret

00005f60 <USART1_init>:
    5f60:	0e 94 0d 31 	call	0x621a	; 0x621a <__floatunsisf>
    5f64:	20 e0       	ldi	r18, 0x00	; 0
    5f66:	30 e0       	ldi	r19, 0x00	; 0
    5f68:	40 e8       	ldi	r20, 0x80	; 128
    5f6a:	51 e4       	ldi	r21, 0x41	; 65
    5f6c:	0e 94 c4 31 	call	0x6388	; 0x6388 <__mulsf3>
    5f70:	9b 01       	movw	r18, r22
    5f72:	ac 01       	movw	r20, r24
    5f74:	60 e0       	ldi	r22, 0x00	; 0
    5f76:	74 e2       	ldi	r23, 0x24	; 36
    5f78:	84 e7       	ldi	r24, 0x74	; 116
    5f7a:	9d e4       	ldi	r25, 0x4D	; 77
    5f7c:	0e 94 65 30 	call	0x60ca	; 0x60ca <__divsf3>
    5f80:	20 e0       	ldi	r18, 0x00	; 0
    5f82:	30 e0       	ldi	r19, 0x00	; 0
    5f84:	40 e0       	ldi	r20, 0x00	; 0
    5f86:	5f e3       	ldi	r21, 0x3F	; 63
    5f88:	0e 94 f4 2f 	call	0x5fe8	; 0x5fe8 <__addsf3>
    5f8c:	0e 94 de 30 	call	0x61bc	; 0x61bc <__fixunssfsi>
    5f90:	e0 e2       	ldi	r30, 0x20	; 32
    5f92:	f8 e0       	ldi	r31, 0x08	; 8
    5f94:	60 87       	std	Z+8, r22	; 0x08
    5f96:	71 87       	std	Z+9, r23	; 0x09
    5f98:	80 e8       	ldi	r24, 0x80	; 128
    5f9a:	85 83       	std	Z+5, r24	; 0x05
    5f9c:	80 ec       	ldi	r24, 0xC0	; 192
    5f9e:	86 83       	std	Z+6, r24	; 0x06
    5fa0:	80 e0       	ldi	r24, 0x00	; 0
    5fa2:	08 95       	ret

00005fa4 <USART1_enable_tx>:
 *
 * \return Nothing
 */
void USART1_enable_tx()
{
	USART1.CTRLB |= USART_TXEN_bm;
    5fa4:	e0 e2       	ldi	r30, 0x20	; 32
    5fa6:	f8 e0       	ldi	r31, 0x08	; 8
    5fa8:	86 81       	ldd	r24, Z+6	; 0x06
    5faa:	80 64       	ori	r24, 0x40	; 64
    5fac:	86 83       	std	Z+6, r24	; 0x06
	USART1.CTRLA |= 1 << USART_DREIE_bp; /* Transmit Data Ready Interrupt Enable: enable */
    5fae:	85 81       	ldd	r24, Z+5	; 0x05
    5fb0:	80 62       	ori	r24, 0x20	; 32
    5fb2:	85 83       	std	Z+5, r24	; 0x05
    5fb4:	08 95       	ret

00005fb6 <USART1_disable>:
 *
 * \return Nothing
 */
void USART1_disable()
{
	USART1.CTRLB &= ~(USART_RXEN_bm | USART_TXEN_bm);
    5fb6:	e0 e2       	ldi	r30, 0x20	; 32
    5fb8:	f8 e0       	ldi	r31, 0x08	; 8
    5fba:	86 81       	ldd	r24, Z+6	; 0x06
    5fbc:	8f 73       	andi	r24, 0x3F	; 63
    5fbe:	86 83       	std	Z+6, r24	; 0x06
    5fc0:	08 95       	ret

00005fc2 <USART1_get_data>:
 *
 * \return Data register from USART1 module
 */
uint8_t USART1_get_data()
{
	return USART1.RXDATAL;
    5fc2:	80 91 20 08 	lds	r24, 0x0820	; 0x800820 <__TEXT_REGION_LENGTH__+0x7e0820>
}
    5fc6:	08 95       	ret

00005fc8 <_Z7timeDifmm>:
 * It appears difftime might not be handling subtraction of unsigned arguments correctly with current compiler
 */
int32_t timeDif(time_t a, time_t b)
{
	int32_t dif; // = difftime(now, g_event_start_time); // returns arg1 - arg2
	if(a > b)
    5fc8:	26 17       	cp	r18, r22
    5fca:	37 07       	cpc	r19, r23
    5fcc:	48 07       	cpc	r20, r24
    5fce:	59 07       	cpc	r21, r25
    5fd0:	28 f4       	brcc	.+10     	; 0x5fdc <_Z7timeDifmm+0x14>
		dif = a - b;
    5fd2:	62 1b       	sub	r22, r18
    5fd4:	73 0b       	sbc	r23, r19
    5fd6:	84 0b       	sbc	r24, r20
    5fd8:	95 0b       	sbc	r25, r21
    5fda:	08 95       	ret
	else
		dif = -(b - a);
    5fdc:	62 1b       	sub	r22, r18
    5fde:	73 0b       	sbc	r23, r19
    5fe0:	84 0b       	sbc	r24, r20
    5fe2:	95 0b       	sbc	r25, r21

	return dif;
}
    5fe4:	08 95       	ret

00005fe6 <__subsf3>:
    5fe6:	50 58       	subi	r21, 0x80	; 128

00005fe8 <__addsf3>:
    5fe8:	bb 27       	eor	r27, r27
    5fea:	aa 27       	eor	r26, r26
    5fec:	0e 94 0b 30 	call	0x6016	; 0x6016 <__addsf3x>
    5ff0:	0c 94 85 31 	jmp	0x630a	; 0x630a <__fp_round>
    5ff4:	0e 94 77 31 	call	0x62ee	; 0x62ee <__fp_pscA>
    5ff8:	38 f0       	brcs	.+14     	; 0x6008 <__addsf3+0x20>
    5ffa:	0e 94 7e 31 	call	0x62fc	; 0x62fc <__fp_pscB>
    5ffe:	20 f0       	brcs	.+8      	; 0x6008 <__addsf3+0x20>
    6000:	39 f4       	brne	.+14     	; 0x6010 <__addsf3+0x28>
    6002:	9f 3f       	cpi	r25, 0xFF	; 255
    6004:	19 f4       	brne	.+6      	; 0x600c <__addsf3+0x24>
    6006:	26 f4       	brtc	.+8      	; 0x6010 <__addsf3+0x28>
    6008:	0c 94 74 31 	jmp	0x62e8	; 0x62e8 <__fp_nan>
    600c:	0e f4       	brtc	.+2      	; 0x6010 <__addsf3+0x28>
    600e:	e0 95       	com	r30
    6010:	e7 fb       	bst	r30, 7
    6012:	0c 94 6e 31 	jmp	0x62dc	; 0x62dc <__fp_inf>

00006016 <__addsf3x>:
    6016:	e9 2f       	mov	r30, r25
    6018:	0e 94 96 31 	call	0x632c	; 0x632c <__fp_split3>
    601c:	58 f3       	brcs	.-42     	; 0x5ff4 <__addsf3+0xc>
    601e:	ba 17       	cp	r27, r26
    6020:	62 07       	cpc	r22, r18
    6022:	73 07       	cpc	r23, r19
    6024:	84 07       	cpc	r24, r20
    6026:	95 07       	cpc	r25, r21
    6028:	20 f0       	brcs	.+8      	; 0x6032 <__addsf3x+0x1c>
    602a:	79 f4       	brne	.+30     	; 0x604a <__addsf3x+0x34>
    602c:	a6 f5       	brtc	.+104    	; 0x6096 <__addsf3x+0x80>
    602e:	0c 94 b8 31 	jmp	0x6370	; 0x6370 <__fp_zero>
    6032:	0e f4       	brtc	.+2      	; 0x6036 <__addsf3x+0x20>
    6034:	e0 95       	com	r30
    6036:	0b 2e       	mov	r0, r27
    6038:	ba 2f       	mov	r27, r26
    603a:	a0 2d       	mov	r26, r0
    603c:	0b 01       	movw	r0, r22
    603e:	b9 01       	movw	r22, r18
    6040:	90 01       	movw	r18, r0
    6042:	0c 01       	movw	r0, r24
    6044:	ca 01       	movw	r24, r20
    6046:	a0 01       	movw	r20, r0
    6048:	11 24       	eor	r1, r1
    604a:	ff 27       	eor	r31, r31
    604c:	59 1b       	sub	r21, r25
    604e:	99 f0       	breq	.+38     	; 0x6076 <__addsf3x+0x60>
    6050:	59 3f       	cpi	r21, 0xF9	; 249
    6052:	50 f4       	brcc	.+20     	; 0x6068 <__addsf3x+0x52>
    6054:	50 3e       	cpi	r21, 0xE0	; 224
    6056:	68 f1       	brcs	.+90     	; 0x60b2 <__addsf3x+0x9c>
    6058:	1a 16       	cp	r1, r26
    605a:	f0 40       	sbci	r31, 0x00	; 0
    605c:	a2 2f       	mov	r26, r18
    605e:	23 2f       	mov	r18, r19
    6060:	34 2f       	mov	r19, r20
    6062:	44 27       	eor	r20, r20
    6064:	58 5f       	subi	r21, 0xF8	; 248
    6066:	f3 cf       	rjmp	.-26     	; 0x604e <__addsf3x+0x38>
    6068:	46 95       	lsr	r20
    606a:	37 95       	ror	r19
    606c:	27 95       	ror	r18
    606e:	a7 95       	ror	r26
    6070:	f0 40       	sbci	r31, 0x00	; 0
    6072:	53 95       	inc	r21
    6074:	c9 f7       	brne	.-14     	; 0x6068 <__addsf3x+0x52>
    6076:	7e f4       	brtc	.+30     	; 0x6096 <__addsf3x+0x80>
    6078:	1f 16       	cp	r1, r31
    607a:	ba 0b       	sbc	r27, r26
    607c:	62 0b       	sbc	r22, r18
    607e:	73 0b       	sbc	r23, r19
    6080:	84 0b       	sbc	r24, r20
    6082:	ba f0       	brmi	.+46     	; 0x60b2 <__addsf3x+0x9c>
    6084:	91 50       	subi	r25, 0x01	; 1
    6086:	a1 f0       	breq	.+40     	; 0x60b0 <__addsf3x+0x9a>
    6088:	ff 0f       	add	r31, r31
    608a:	bb 1f       	adc	r27, r27
    608c:	66 1f       	adc	r22, r22
    608e:	77 1f       	adc	r23, r23
    6090:	88 1f       	adc	r24, r24
    6092:	c2 f7       	brpl	.-16     	; 0x6084 <__addsf3x+0x6e>
    6094:	0e c0       	rjmp	.+28     	; 0x60b2 <__addsf3x+0x9c>
    6096:	ba 0f       	add	r27, r26
    6098:	62 1f       	adc	r22, r18
    609a:	73 1f       	adc	r23, r19
    609c:	84 1f       	adc	r24, r20
    609e:	48 f4       	brcc	.+18     	; 0x60b2 <__addsf3x+0x9c>
    60a0:	87 95       	ror	r24
    60a2:	77 95       	ror	r23
    60a4:	67 95       	ror	r22
    60a6:	b7 95       	ror	r27
    60a8:	f7 95       	ror	r31
    60aa:	9e 3f       	cpi	r25, 0xFE	; 254
    60ac:	08 f0       	brcs	.+2      	; 0x60b0 <__addsf3x+0x9a>
    60ae:	b0 cf       	rjmp	.-160    	; 0x6010 <__addsf3+0x28>
    60b0:	93 95       	inc	r25
    60b2:	88 0f       	add	r24, r24
    60b4:	08 f0       	brcs	.+2      	; 0x60b8 <__addsf3x+0xa2>
    60b6:	99 27       	eor	r25, r25
    60b8:	ee 0f       	add	r30, r30
    60ba:	97 95       	ror	r25
    60bc:	87 95       	ror	r24
    60be:	08 95       	ret

000060c0 <__cmpsf2>:
    60c0:	0e 94 4a 31 	call	0x6294	; 0x6294 <__fp_cmp>
    60c4:	08 f4       	brcc	.+2      	; 0x60c8 <__cmpsf2+0x8>
    60c6:	81 e0       	ldi	r24, 0x01	; 1
    60c8:	08 95       	ret

000060ca <__divsf3>:
    60ca:	0e 94 79 30 	call	0x60f2	; 0x60f2 <__divsf3x>
    60ce:	0c 94 85 31 	jmp	0x630a	; 0x630a <__fp_round>
    60d2:	0e 94 7e 31 	call	0x62fc	; 0x62fc <__fp_pscB>
    60d6:	58 f0       	brcs	.+22     	; 0x60ee <__divsf3+0x24>
    60d8:	0e 94 77 31 	call	0x62ee	; 0x62ee <__fp_pscA>
    60dc:	40 f0       	brcs	.+16     	; 0x60ee <__divsf3+0x24>
    60de:	29 f4       	brne	.+10     	; 0x60ea <__divsf3+0x20>
    60e0:	5f 3f       	cpi	r21, 0xFF	; 255
    60e2:	29 f0       	breq	.+10     	; 0x60ee <__divsf3+0x24>
    60e4:	0c 94 6e 31 	jmp	0x62dc	; 0x62dc <__fp_inf>
    60e8:	51 11       	cpse	r21, r1
    60ea:	0c 94 b9 31 	jmp	0x6372	; 0x6372 <__fp_szero>
    60ee:	0c 94 74 31 	jmp	0x62e8	; 0x62e8 <__fp_nan>

000060f2 <__divsf3x>:
    60f2:	0e 94 96 31 	call	0x632c	; 0x632c <__fp_split3>
    60f6:	68 f3       	brcs	.-38     	; 0x60d2 <__divsf3+0x8>

000060f8 <__divsf3_pse>:
    60f8:	99 23       	and	r25, r25
    60fa:	b1 f3       	breq	.-20     	; 0x60e8 <__divsf3+0x1e>
    60fc:	55 23       	and	r21, r21
    60fe:	91 f3       	breq	.-28     	; 0x60e4 <__divsf3+0x1a>
    6100:	95 1b       	sub	r25, r21
    6102:	55 0b       	sbc	r21, r21
    6104:	bb 27       	eor	r27, r27
    6106:	aa 27       	eor	r26, r26
    6108:	62 17       	cp	r22, r18
    610a:	73 07       	cpc	r23, r19
    610c:	84 07       	cpc	r24, r20
    610e:	38 f0       	brcs	.+14     	; 0x611e <__divsf3_pse+0x26>
    6110:	9f 5f       	subi	r25, 0xFF	; 255
    6112:	5f 4f       	sbci	r21, 0xFF	; 255
    6114:	22 0f       	add	r18, r18
    6116:	33 1f       	adc	r19, r19
    6118:	44 1f       	adc	r20, r20
    611a:	aa 1f       	adc	r26, r26
    611c:	a9 f3       	breq	.-22     	; 0x6108 <__divsf3_pse+0x10>
    611e:	35 d0       	rcall	.+106    	; 0x618a <__divsf3_pse+0x92>
    6120:	0e 2e       	mov	r0, r30
    6122:	3a f0       	brmi	.+14     	; 0x6132 <__divsf3_pse+0x3a>
    6124:	e0 e8       	ldi	r30, 0x80	; 128
    6126:	32 d0       	rcall	.+100    	; 0x618c <__divsf3_pse+0x94>
    6128:	91 50       	subi	r25, 0x01	; 1
    612a:	50 40       	sbci	r21, 0x00	; 0
    612c:	e6 95       	lsr	r30
    612e:	00 1c       	adc	r0, r0
    6130:	ca f7       	brpl	.-14     	; 0x6124 <__divsf3_pse+0x2c>
    6132:	2b d0       	rcall	.+86     	; 0x618a <__divsf3_pse+0x92>
    6134:	fe 2f       	mov	r31, r30
    6136:	29 d0       	rcall	.+82     	; 0x618a <__divsf3_pse+0x92>
    6138:	66 0f       	add	r22, r22
    613a:	77 1f       	adc	r23, r23
    613c:	88 1f       	adc	r24, r24
    613e:	bb 1f       	adc	r27, r27
    6140:	26 17       	cp	r18, r22
    6142:	37 07       	cpc	r19, r23
    6144:	48 07       	cpc	r20, r24
    6146:	ab 07       	cpc	r26, r27
    6148:	b0 e8       	ldi	r27, 0x80	; 128
    614a:	09 f0       	breq	.+2      	; 0x614e <__divsf3_pse+0x56>
    614c:	bb 0b       	sbc	r27, r27
    614e:	80 2d       	mov	r24, r0
    6150:	bf 01       	movw	r22, r30
    6152:	ff 27       	eor	r31, r31
    6154:	93 58       	subi	r25, 0x83	; 131
    6156:	5f 4f       	sbci	r21, 0xFF	; 255
    6158:	3a f0       	brmi	.+14     	; 0x6168 <__divsf3_pse+0x70>
    615a:	9e 3f       	cpi	r25, 0xFE	; 254
    615c:	51 05       	cpc	r21, r1
    615e:	78 f0       	brcs	.+30     	; 0x617e <__divsf3_pse+0x86>
    6160:	0c 94 6e 31 	jmp	0x62dc	; 0x62dc <__fp_inf>
    6164:	0c 94 b9 31 	jmp	0x6372	; 0x6372 <__fp_szero>
    6168:	5f 3f       	cpi	r21, 0xFF	; 255
    616a:	e4 f3       	brlt	.-8      	; 0x6164 <__divsf3_pse+0x6c>
    616c:	98 3e       	cpi	r25, 0xE8	; 232
    616e:	d4 f3       	brlt	.-12     	; 0x6164 <__divsf3_pse+0x6c>
    6170:	86 95       	lsr	r24
    6172:	77 95       	ror	r23
    6174:	67 95       	ror	r22
    6176:	b7 95       	ror	r27
    6178:	f7 95       	ror	r31
    617a:	9f 5f       	subi	r25, 0xFF	; 255
    617c:	c9 f7       	brne	.-14     	; 0x6170 <__divsf3_pse+0x78>
    617e:	88 0f       	add	r24, r24
    6180:	91 1d       	adc	r25, r1
    6182:	96 95       	lsr	r25
    6184:	87 95       	ror	r24
    6186:	97 f9       	bld	r25, 7
    6188:	08 95       	ret
    618a:	e1 e0       	ldi	r30, 0x01	; 1
    618c:	66 0f       	add	r22, r22
    618e:	77 1f       	adc	r23, r23
    6190:	88 1f       	adc	r24, r24
    6192:	bb 1f       	adc	r27, r27
    6194:	62 17       	cp	r22, r18
    6196:	73 07       	cpc	r23, r19
    6198:	84 07       	cpc	r24, r20
    619a:	ba 07       	cpc	r27, r26
    619c:	20 f0       	brcs	.+8      	; 0x61a6 <__divsf3_pse+0xae>
    619e:	62 1b       	sub	r22, r18
    61a0:	73 0b       	sbc	r23, r19
    61a2:	84 0b       	sbc	r24, r20
    61a4:	ba 0b       	sbc	r27, r26
    61a6:	ee 1f       	adc	r30, r30
    61a8:	88 f7       	brcc	.-30     	; 0x618c <__divsf3_pse+0x94>
    61aa:	e0 95       	com	r30
    61ac:	08 95       	ret

000061ae <__fixsfsi>:
    61ae:	0e 94 de 30 	call	0x61bc	; 0x61bc <__fixunssfsi>
    61b2:	68 94       	set
    61b4:	b1 11       	cpse	r27, r1
    61b6:	0c 94 b9 31 	jmp	0x6372	; 0x6372 <__fp_szero>
    61ba:	08 95       	ret

000061bc <__fixunssfsi>:
    61bc:	0e 94 9e 31 	call	0x633c	; 0x633c <__fp_splitA>
    61c0:	88 f0       	brcs	.+34     	; 0x61e4 <__fixunssfsi+0x28>
    61c2:	9f 57       	subi	r25, 0x7F	; 127
    61c4:	98 f0       	brcs	.+38     	; 0x61ec <__fixunssfsi+0x30>
    61c6:	b9 2f       	mov	r27, r25
    61c8:	99 27       	eor	r25, r25
    61ca:	b7 51       	subi	r27, 0x17	; 23
    61cc:	b0 f0       	brcs	.+44     	; 0x61fa <__fixunssfsi+0x3e>
    61ce:	e1 f0       	breq	.+56     	; 0x6208 <__fixunssfsi+0x4c>
    61d0:	66 0f       	add	r22, r22
    61d2:	77 1f       	adc	r23, r23
    61d4:	88 1f       	adc	r24, r24
    61d6:	99 1f       	adc	r25, r25
    61d8:	1a f0       	brmi	.+6      	; 0x61e0 <__fixunssfsi+0x24>
    61da:	ba 95       	dec	r27
    61dc:	c9 f7       	brne	.-14     	; 0x61d0 <__fixunssfsi+0x14>
    61de:	14 c0       	rjmp	.+40     	; 0x6208 <__fixunssfsi+0x4c>
    61e0:	b1 30       	cpi	r27, 0x01	; 1
    61e2:	91 f0       	breq	.+36     	; 0x6208 <__fixunssfsi+0x4c>
    61e4:	0e 94 b8 31 	call	0x6370	; 0x6370 <__fp_zero>
    61e8:	b1 e0       	ldi	r27, 0x01	; 1
    61ea:	08 95       	ret
    61ec:	0c 94 b8 31 	jmp	0x6370	; 0x6370 <__fp_zero>
    61f0:	67 2f       	mov	r22, r23
    61f2:	78 2f       	mov	r23, r24
    61f4:	88 27       	eor	r24, r24
    61f6:	b8 5f       	subi	r27, 0xF8	; 248
    61f8:	39 f0       	breq	.+14     	; 0x6208 <__fixunssfsi+0x4c>
    61fa:	b9 3f       	cpi	r27, 0xF9	; 249
    61fc:	cc f3       	brlt	.-14     	; 0x61f0 <__fixunssfsi+0x34>
    61fe:	86 95       	lsr	r24
    6200:	77 95       	ror	r23
    6202:	67 95       	ror	r22
    6204:	b3 95       	inc	r27
    6206:	d9 f7       	brne	.-10     	; 0x61fe <__fixunssfsi+0x42>
    6208:	3e f4       	brtc	.+14     	; 0x6218 <__fixunssfsi+0x5c>
    620a:	90 95       	com	r25
    620c:	80 95       	com	r24
    620e:	70 95       	com	r23
    6210:	61 95       	neg	r22
    6212:	7f 4f       	sbci	r23, 0xFF	; 255
    6214:	8f 4f       	sbci	r24, 0xFF	; 255
    6216:	9f 4f       	sbci	r25, 0xFF	; 255
    6218:	08 95       	ret

0000621a <__floatunsisf>:
    621a:	e8 94       	clt
    621c:	09 c0       	rjmp	.+18     	; 0x6230 <__floatsisf+0x12>

0000621e <__floatsisf>:
    621e:	97 fb       	bst	r25, 7
    6220:	3e f4       	brtc	.+14     	; 0x6230 <__floatsisf+0x12>
    6222:	90 95       	com	r25
    6224:	80 95       	com	r24
    6226:	70 95       	com	r23
    6228:	61 95       	neg	r22
    622a:	7f 4f       	sbci	r23, 0xFF	; 255
    622c:	8f 4f       	sbci	r24, 0xFF	; 255
    622e:	9f 4f       	sbci	r25, 0xFF	; 255
    6230:	99 23       	and	r25, r25
    6232:	a9 f0       	breq	.+42     	; 0x625e <__floatsisf+0x40>
    6234:	f9 2f       	mov	r31, r25
    6236:	96 e9       	ldi	r25, 0x96	; 150
    6238:	bb 27       	eor	r27, r27
    623a:	93 95       	inc	r25
    623c:	f6 95       	lsr	r31
    623e:	87 95       	ror	r24
    6240:	77 95       	ror	r23
    6242:	67 95       	ror	r22
    6244:	b7 95       	ror	r27
    6246:	f1 11       	cpse	r31, r1
    6248:	f8 cf       	rjmp	.-16     	; 0x623a <__floatsisf+0x1c>
    624a:	fa f4       	brpl	.+62     	; 0x628a <__floatsisf+0x6c>
    624c:	bb 0f       	add	r27, r27
    624e:	11 f4       	brne	.+4      	; 0x6254 <__floatsisf+0x36>
    6250:	60 ff       	sbrs	r22, 0
    6252:	1b c0       	rjmp	.+54     	; 0x628a <__floatsisf+0x6c>
    6254:	6f 5f       	subi	r22, 0xFF	; 255
    6256:	7f 4f       	sbci	r23, 0xFF	; 255
    6258:	8f 4f       	sbci	r24, 0xFF	; 255
    625a:	9f 4f       	sbci	r25, 0xFF	; 255
    625c:	16 c0       	rjmp	.+44     	; 0x628a <__floatsisf+0x6c>
    625e:	88 23       	and	r24, r24
    6260:	11 f0       	breq	.+4      	; 0x6266 <__floatsisf+0x48>
    6262:	96 e9       	ldi	r25, 0x96	; 150
    6264:	11 c0       	rjmp	.+34     	; 0x6288 <__floatsisf+0x6a>
    6266:	77 23       	and	r23, r23
    6268:	21 f0       	breq	.+8      	; 0x6272 <__floatsisf+0x54>
    626a:	9e e8       	ldi	r25, 0x8E	; 142
    626c:	87 2f       	mov	r24, r23
    626e:	76 2f       	mov	r23, r22
    6270:	05 c0       	rjmp	.+10     	; 0x627c <__floatsisf+0x5e>
    6272:	66 23       	and	r22, r22
    6274:	71 f0       	breq	.+28     	; 0x6292 <__floatsisf+0x74>
    6276:	96 e8       	ldi	r25, 0x86	; 134
    6278:	86 2f       	mov	r24, r22
    627a:	70 e0       	ldi	r23, 0x00	; 0
    627c:	60 e0       	ldi	r22, 0x00	; 0
    627e:	2a f0       	brmi	.+10     	; 0x628a <__floatsisf+0x6c>
    6280:	9a 95       	dec	r25
    6282:	66 0f       	add	r22, r22
    6284:	77 1f       	adc	r23, r23
    6286:	88 1f       	adc	r24, r24
    6288:	da f7       	brpl	.-10     	; 0x6280 <__floatsisf+0x62>
    628a:	88 0f       	add	r24, r24
    628c:	96 95       	lsr	r25
    628e:	87 95       	ror	r24
    6290:	97 f9       	bld	r25, 7
    6292:	08 95       	ret

00006294 <__fp_cmp>:
    6294:	99 0f       	add	r25, r25
    6296:	00 08       	sbc	r0, r0
    6298:	55 0f       	add	r21, r21
    629a:	aa 0b       	sbc	r26, r26
    629c:	e0 e8       	ldi	r30, 0x80	; 128
    629e:	fe ef       	ldi	r31, 0xFE	; 254
    62a0:	16 16       	cp	r1, r22
    62a2:	17 06       	cpc	r1, r23
    62a4:	e8 07       	cpc	r30, r24
    62a6:	f9 07       	cpc	r31, r25
    62a8:	c0 f0       	brcs	.+48     	; 0x62da <__fp_cmp+0x46>
    62aa:	12 16       	cp	r1, r18
    62ac:	13 06       	cpc	r1, r19
    62ae:	e4 07       	cpc	r30, r20
    62b0:	f5 07       	cpc	r31, r21
    62b2:	98 f0       	brcs	.+38     	; 0x62da <__fp_cmp+0x46>
    62b4:	62 1b       	sub	r22, r18
    62b6:	73 0b       	sbc	r23, r19
    62b8:	84 0b       	sbc	r24, r20
    62ba:	95 0b       	sbc	r25, r21
    62bc:	39 f4       	brne	.+14     	; 0x62cc <__fp_cmp+0x38>
    62be:	0a 26       	eor	r0, r26
    62c0:	61 f0       	breq	.+24     	; 0x62da <__fp_cmp+0x46>
    62c2:	23 2b       	or	r18, r19
    62c4:	24 2b       	or	r18, r20
    62c6:	25 2b       	or	r18, r21
    62c8:	21 f4       	brne	.+8      	; 0x62d2 <__fp_cmp+0x3e>
    62ca:	08 95       	ret
    62cc:	0a 26       	eor	r0, r26
    62ce:	09 f4       	brne	.+2      	; 0x62d2 <__fp_cmp+0x3e>
    62d0:	a1 40       	sbci	r26, 0x01	; 1
    62d2:	a6 95       	lsr	r26
    62d4:	8f ef       	ldi	r24, 0xFF	; 255
    62d6:	81 1d       	adc	r24, r1
    62d8:	81 1d       	adc	r24, r1
    62da:	08 95       	ret

000062dc <__fp_inf>:
    62dc:	97 f9       	bld	r25, 7
    62de:	9f 67       	ori	r25, 0x7F	; 127
    62e0:	80 e8       	ldi	r24, 0x80	; 128
    62e2:	70 e0       	ldi	r23, 0x00	; 0
    62e4:	60 e0       	ldi	r22, 0x00	; 0
    62e6:	08 95       	ret

000062e8 <__fp_nan>:
    62e8:	9f ef       	ldi	r25, 0xFF	; 255
    62ea:	80 ec       	ldi	r24, 0xC0	; 192
    62ec:	08 95       	ret

000062ee <__fp_pscA>:
    62ee:	00 24       	eor	r0, r0
    62f0:	0a 94       	dec	r0
    62f2:	16 16       	cp	r1, r22
    62f4:	17 06       	cpc	r1, r23
    62f6:	18 06       	cpc	r1, r24
    62f8:	09 06       	cpc	r0, r25
    62fa:	08 95       	ret

000062fc <__fp_pscB>:
    62fc:	00 24       	eor	r0, r0
    62fe:	0a 94       	dec	r0
    6300:	12 16       	cp	r1, r18
    6302:	13 06       	cpc	r1, r19
    6304:	14 06       	cpc	r1, r20
    6306:	05 06       	cpc	r0, r21
    6308:	08 95       	ret

0000630a <__fp_round>:
    630a:	09 2e       	mov	r0, r25
    630c:	03 94       	inc	r0
    630e:	00 0c       	add	r0, r0
    6310:	11 f4       	brne	.+4      	; 0x6316 <__fp_round+0xc>
    6312:	88 23       	and	r24, r24
    6314:	52 f0       	brmi	.+20     	; 0x632a <__fp_round+0x20>
    6316:	bb 0f       	add	r27, r27
    6318:	40 f4       	brcc	.+16     	; 0x632a <__fp_round+0x20>
    631a:	bf 2b       	or	r27, r31
    631c:	11 f4       	brne	.+4      	; 0x6322 <__fp_round+0x18>
    631e:	60 ff       	sbrs	r22, 0
    6320:	04 c0       	rjmp	.+8      	; 0x632a <__fp_round+0x20>
    6322:	6f 5f       	subi	r22, 0xFF	; 255
    6324:	7f 4f       	sbci	r23, 0xFF	; 255
    6326:	8f 4f       	sbci	r24, 0xFF	; 255
    6328:	9f 4f       	sbci	r25, 0xFF	; 255
    632a:	08 95       	ret

0000632c <__fp_split3>:
    632c:	57 fd       	sbrc	r21, 7
    632e:	90 58       	subi	r25, 0x80	; 128
    6330:	44 0f       	add	r20, r20
    6332:	55 1f       	adc	r21, r21
    6334:	59 f0       	breq	.+22     	; 0x634c <__fp_splitA+0x10>
    6336:	5f 3f       	cpi	r21, 0xFF	; 255
    6338:	71 f0       	breq	.+28     	; 0x6356 <__fp_splitA+0x1a>
    633a:	47 95       	ror	r20

0000633c <__fp_splitA>:
    633c:	88 0f       	add	r24, r24
    633e:	97 fb       	bst	r25, 7
    6340:	99 1f       	adc	r25, r25
    6342:	61 f0       	breq	.+24     	; 0x635c <__fp_splitA+0x20>
    6344:	9f 3f       	cpi	r25, 0xFF	; 255
    6346:	79 f0       	breq	.+30     	; 0x6366 <__fp_splitA+0x2a>
    6348:	87 95       	ror	r24
    634a:	08 95       	ret
    634c:	12 16       	cp	r1, r18
    634e:	13 06       	cpc	r1, r19
    6350:	14 06       	cpc	r1, r20
    6352:	55 1f       	adc	r21, r21
    6354:	f2 cf       	rjmp	.-28     	; 0x633a <__fp_split3+0xe>
    6356:	46 95       	lsr	r20
    6358:	f1 df       	rcall	.-30     	; 0x633c <__fp_splitA>
    635a:	08 c0       	rjmp	.+16     	; 0x636c <__fp_splitA+0x30>
    635c:	16 16       	cp	r1, r22
    635e:	17 06       	cpc	r1, r23
    6360:	18 06       	cpc	r1, r24
    6362:	99 1f       	adc	r25, r25
    6364:	f1 cf       	rjmp	.-30     	; 0x6348 <__fp_splitA+0xc>
    6366:	86 95       	lsr	r24
    6368:	71 05       	cpc	r23, r1
    636a:	61 05       	cpc	r22, r1
    636c:	08 94       	sec
    636e:	08 95       	ret

00006370 <__fp_zero>:
    6370:	e8 94       	clt

00006372 <__fp_szero>:
    6372:	bb 27       	eor	r27, r27
    6374:	66 27       	eor	r22, r22
    6376:	77 27       	eor	r23, r23
    6378:	cb 01       	movw	r24, r22
    637a:	97 f9       	bld	r25, 7
    637c:	08 95       	ret

0000637e <__gesf2>:
    637e:	0e 94 4a 31 	call	0x6294	; 0x6294 <__fp_cmp>
    6382:	08 f4       	brcc	.+2      	; 0x6386 <__gesf2+0x8>
    6384:	8f ef       	ldi	r24, 0xFF	; 255
    6386:	08 95       	ret

00006388 <__mulsf3>:
    6388:	0e 94 d7 31 	call	0x63ae	; 0x63ae <__mulsf3x>
    638c:	0c 94 85 31 	jmp	0x630a	; 0x630a <__fp_round>
    6390:	0e 94 77 31 	call	0x62ee	; 0x62ee <__fp_pscA>
    6394:	38 f0       	brcs	.+14     	; 0x63a4 <__mulsf3+0x1c>
    6396:	0e 94 7e 31 	call	0x62fc	; 0x62fc <__fp_pscB>
    639a:	20 f0       	brcs	.+8      	; 0x63a4 <__mulsf3+0x1c>
    639c:	95 23       	and	r25, r21
    639e:	11 f0       	breq	.+4      	; 0x63a4 <__mulsf3+0x1c>
    63a0:	0c 94 6e 31 	jmp	0x62dc	; 0x62dc <__fp_inf>
    63a4:	0c 94 74 31 	jmp	0x62e8	; 0x62e8 <__fp_nan>
    63a8:	11 24       	eor	r1, r1
    63aa:	0c 94 b9 31 	jmp	0x6372	; 0x6372 <__fp_szero>

000063ae <__mulsf3x>:
    63ae:	0e 94 96 31 	call	0x632c	; 0x632c <__fp_split3>
    63b2:	70 f3       	brcs	.-36     	; 0x6390 <__mulsf3+0x8>

000063b4 <__mulsf3_pse>:
    63b4:	95 9f       	mul	r25, r21
    63b6:	c1 f3       	breq	.-16     	; 0x63a8 <__mulsf3+0x20>
    63b8:	95 0f       	add	r25, r21
    63ba:	50 e0       	ldi	r21, 0x00	; 0
    63bc:	55 1f       	adc	r21, r21
    63be:	62 9f       	mul	r22, r18
    63c0:	f0 01       	movw	r30, r0
    63c2:	72 9f       	mul	r23, r18
    63c4:	bb 27       	eor	r27, r27
    63c6:	f0 0d       	add	r31, r0
    63c8:	b1 1d       	adc	r27, r1
    63ca:	63 9f       	mul	r22, r19
    63cc:	aa 27       	eor	r26, r26
    63ce:	f0 0d       	add	r31, r0
    63d0:	b1 1d       	adc	r27, r1
    63d2:	aa 1f       	adc	r26, r26
    63d4:	64 9f       	mul	r22, r20
    63d6:	66 27       	eor	r22, r22
    63d8:	b0 0d       	add	r27, r0
    63da:	a1 1d       	adc	r26, r1
    63dc:	66 1f       	adc	r22, r22
    63de:	82 9f       	mul	r24, r18
    63e0:	22 27       	eor	r18, r18
    63e2:	b0 0d       	add	r27, r0
    63e4:	a1 1d       	adc	r26, r1
    63e6:	62 1f       	adc	r22, r18
    63e8:	73 9f       	mul	r23, r19
    63ea:	b0 0d       	add	r27, r0
    63ec:	a1 1d       	adc	r26, r1
    63ee:	62 1f       	adc	r22, r18
    63f0:	83 9f       	mul	r24, r19
    63f2:	a0 0d       	add	r26, r0
    63f4:	61 1d       	adc	r22, r1
    63f6:	22 1f       	adc	r18, r18
    63f8:	74 9f       	mul	r23, r20
    63fa:	33 27       	eor	r19, r19
    63fc:	a0 0d       	add	r26, r0
    63fe:	61 1d       	adc	r22, r1
    6400:	23 1f       	adc	r18, r19
    6402:	84 9f       	mul	r24, r20
    6404:	60 0d       	add	r22, r0
    6406:	21 1d       	adc	r18, r1
    6408:	82 2f       	mov	r24, r18
    640a:	76 2f       	mov	r23, r22
    640c:	6a 2f       	mov	r22, r26
    640e:	11 24       	eor	r1, r1
    6410:	9f 57       	subi	r25, 0x7F	; 127
    6412:	50 40       	sbci	r21, 0x00	; 0
    6414:	9a f0       	brmi	.+38     	; 0x643c <__mulsf3_pse+0x88>
    6416:	f1 f0       	breq	.+60     	; 0x6454 <__mulsf3_pse+0xa0>
    6418:	88 23       	and	r24, r24
    641a:	4a f0       	brmi	.+18     	; 0x642e <__mulsf3_pse+0x7a>
    641c:	ee 0f       	add	r30, r30
    641e:	ff 1f       	adc	r31, r31
    6420:	bb 1f       	adc	r27, r27
    6422:	66 1f       	adc	r22, r22
    6424:	77 1f       	adc	r23, r23
    6426:	88 1f       	adc	r24, r24
    6428:	91 50       	subi	r25, 0x01	; 1
    642a:	50 40       	sbci	r21, 0x00	; 0
    642c:	a9 f7       	brne	.-22     	; 0x6418 <__mulsf3_pse+0x64>
    642e:	9e 3f       	cpi	r25, 0xFE	; 254
    6430:	51 05       	cpc	r21, r1
    6432:	80 f0       	brcs	.+32     	; 0x6454 <__mulsf3_pse+0xa0>
    6434:	0c 94 6e 31 	jmp	0x62dc	; 0x62dc <__fp_inf>
    6438:	0c 94 b9 31 	jmp	0x6372	; 0x6372 <__fp_szero>
    643c:	5f 3f       	cpi	r21, 0xFF	; 255
    643e:	e4 f3       	brlt	.-8      	; 0x6438 <__mulsf3_pse+0x84>
    6440:	98 3e       	cpi	r25, 0xE8	; 232
    6442:	d4 f3       	brlt	.-12     	; 0x6438 <__mulsf3_pse+0x84>
    6444:	86 95       	lsr	r24
    6446:	77 95       	ror	r23
    6448:	67 95       	ror	r22
    644a:	b7 95       	ror	r27
    644c:	f7 95       	ror	r31
    644e:	e7 95       	ror	r30
    6450:	9f 5f       	subi	r25, 0xFF	; 255
    6452:	c1 f7       	brne	.-16     	; 0x6444 <__mulsf3_pse+0x90>
    6454:	fe 2b       	or	r31, r30
    6456:	88 0f       	add	r24, r24
    6458:	91 1d       	adc	r25, r1
    645a:	96 95       	lsr	r25
    645c:	87 95       	ror	r24
    645e:	97 f9       	bld	r25, 7
    6460:	08 95       	ret

00006462 <__mulsi3>:
    6462:	db 01       	movw	r26, r22
    6464:	8f 93       	push	r24
    6466:	9f 93       	push	r25
    6468:	0e 94 c9 32 	call	0x6592	; 0x6592 <__muluhisi3>
    646c:	bf 91       	pop	r27
    646e:	af 91       	pop	r26
    6470:	a2 9f       	mul	r26, r18
    6472:	80 0d       	add	r24, r0
    6474:	91 1d       	adc	r25, r1
    6476:	a3 9f       	mul	r26, r19
    6478:	90 0d       	add	r25, r0
    647a:	b2 9f       	mul	r27, r18
    647c:	90 0d       	add	r25, r0
    647e:	11 24       	eor	r1, r1
    6480:	08 95       	ret

00006482 <__udivmodhi4>:
    6482:	aa 1b       	sub	r26, r26
    6484:	bb 1b       	sub	r27, r27
    6486:	51 e1       	ldi	r21, 0x11	; 17
    6488:	07 c0       	rjmp	.+14     	; 0x6498 <__udivmodhi4_ep>

0000648a <__udivmodhi4_loop>:
    648a:	aa 1f       	adc	r26, r26
    648c:	bb 1f       	adc	r27, r27
    648e:	a6 17       	cp	r26, r22
    6490:	b7 07       	cpc	r27, r23
    6492:	10 f0       	brcs	.+4      	; 0x6498 <__udivmodhi4_ep>
    6494:	a6 1b       	sub	r26, r22
    6496:	b7 0b       	sbc	r27, r23

00006498 <__udivmodhi4_ep>:
    6498:	88 1f       	adc	r24, r24
    649a:	99 1f       	adc	r25, r25
    649c:	5a 95       	dec	r21
    649e:	a9 f7       	brne	.-22     	; 0x648a <__udivmodhi4_loop>
    64a0:	80 95       	com	r24
    64a2:	90 95       	com	r25
    64a4:	bc 01       	movw	r22, r24
    64a6:	cd 01       	movw	r24, r26
    64a8:	08 95       	ret

000064aa <__divmodhi4>:
    64aa:	97 fb       	bst	r25, 7
    64ac:	07 2e       	mov	r0, r23
    64ae:	16 f4       	brtc	.+4      	; 0x64b4 <__divmodhi4+0xa>
    64b0:	00 94       	com	r0
    64b2:	07 d0       	rcall	.+14     	; 0x64c2 <__divmodhi4_neg1>
    64b4:	77 fd       	sbrc	r23, 7
    64b6:	09 d0       	rcall	.+18     	; 0x64ca <__divmodhi4_neg2>
    64b8:	0e 94 41 32 	call	0x6482	; 0x6482 <__udivmodhi4>
    64bc:	07 fc       	sbrc	r0, 7
    64be:	05 d0       	rcall	.+10     	; 0x64ca <__divmodhi4_neg2>
    64c0:	3e f4       	brtc	.+14     	; 0x64d0 <__divmodhi4_exit>

000064c2 <__divmodhi4_neg1>:
    64c2:	90 95       	com	r25
    64c4:	81 95       	neg	r24
    64c6:	9f 4f       	sbci	r25, 0xFF	; 255
    64c8:	08 95       	ret

000064ca <__divmodhi4_neg2>:
    64ca:	70 95       	com	r23
    64cc:	61 95       	neg	r22
    64ce:	7f 4f       	sbci	r23, 0xFF	; 255

000064d0 <__divmodhi4_exit>:
    64d0:	08 95       	ret

000064d2 <__udivmodsi4>:
    64d2:	a1 e2       	ldi	r26, 0x21	; 33
    64d4:	1a 2e       	mov	r1, r26
    64d6:	aa 1b       	sub	r26, r26
    64d8:	bb 1b       	sub	r27, r27
    64da:	fd 01       	movw	r30, r26
    64dc:	0d c0       	rjmp	.+26     	; 0x64f8 <__udivmodsi4_ep>

000064de <__udivmodsi4_loop>:
    64de:	aa 1f       	adc	r26, r26
    64e0:	bb 1f       	adc	r27, r27
    64e2:	ee 1f       	adc	r30, r30
    64e4:	ff 1f       	adc	r31, r31
    64e6:	a2 17       	cp	r26, r18
    64e8:	b3 07       	cpc	r27, r19
    64ea:	e4 07       	cpc	r30, r20
    64ec:	f5 07       	cpc	r31, r21
    64ee:	20 f0       	brcs	.+8      	; 0x64f8 <__udivmodsi4_ep>
    64f0:	a2 1b       	sub	r26, r18
    64f2:	b3 0b       	sbc	r27, r19
    64f4:	e4 0b       	sbc	r30, r20
    64f6:	f5 0b       	sbc	r31, r21

000064f8 <__udivmodsi4_ep>:
    64f8:	66 1f       	adc	r22, r22
    64fa:	77 1f       	adc	r23, r23
    64fc:	88 1f       	adc	r24, r24
    64fe:	99 1f       	adc	r25, r25
    6500:	1a 94       	dec	r1
    6502:	69 f7       	brne	.-38     	; 0x64de <__udivmodsi4_loop>
    6504:	60 95       	com	r22
    6506:	70 95       	com	r23
    6508:	80 95       	com	r24
    650a:	90 95       	com	r25
    650c:	9b 01       	movw	r18, r22
    650e:	ac 01       	movw	r20, r24
    6510:	bd 01       	movw	r22, r26
    6512:	cf 01       	movw	r24, r30
    6514:	08 95       	ret

00006516 <__divmodsi4>:
    6516:	05 2e       	mov	r0, r21
    6518:	97 fb       	bst	r25, 7
    651a:	1e f4       	brtc	.+6      	; 0x6522 <__divmodsi4+0xc>
    651c:	00 94       	com	r0
    651e:	0e 94 a2 32 	call	0x6544	; 0x6544 <__negsi2>
    6522:	57 fd       	sbrc	r21, 7
    6524:	07 d0       	rcall	.+14     	; 0x6534 <__divmodsi4_neg2>
    6526:	0e 94 69 32 	call	0x64d2	; 0x64d2 <__udivmodsi4>
    652a:	07 fc       	sbrc	r0, 7
    652c:	03 d0       	rcall	.+6      	; 0x6534 <__divmodsi4_neg2>
    652e:	4e f4       	brtc	.+18     	; 0x6542 <__divmodsi4_exit>
    6530:	0c 94 a2 32 	jmp	0x6544	; 0x6544 <__negsi2>

00006534 <__divmodsi4_neg2>:
    6534:	50 95       	com	r21
    6536:	40 95       	com	r20
    6538:	30 95       	com	r19
    653a:	21 95       	neg	r18
    653c:	3f 4f       	sbci	r19, 0xFF	; 255
    653e:	4f 4f       	sbci	r20, 0xFF	; 255
    6540:	5f 4f       	sbci	r21, 0xFF	; 255

00006542 <__divmodsi4_exit>:
    6542:	08 95       	ret

00006544 <__negsi2>:
    6544:	90 95       	com	r25
    6546:	80 95       	com	r24
    6548:	70 95       	com	r23
    654a:	61 95       	neg	r22
    654c:	7f 4f       	sbci	r23, 0xFF	; 255
    654e:	8f 4f       	sbci	r24, 0xFF	; 255
    6550:	9f 4f       	sbci	r25, 0xFF	; 255
    6552:	08 95       	ret

00006554 <__tablejump2__>:
    6554:	ee 0f       	add	r30, r30
    6556:	ff 1f       	adc	r31, r31
    6558:	00 24       	eor	r0, r0
    655a:	00 1c       	adc	r0, r0
    655c:	0b be       	out	0x3b, r0	; 59
    655e:	07 90       	elpm	r0, Z+
    6560:	f6 91       	elpm	r31, Z
    6562:	e0 2d       	mov	r30, r0
    6564:	09 94       	ijmp

00006566 <__umulhisi3>:
    6566:	a2 9f       	mul	r26, r18
    6568:	b0 01       	movw	r22, r0
    656a:	b3 9f       	mul	r27, r19
    656c:	c0 01       	movw	r24, r0
    656e:	a3 9f       	mul	r26, r19
    6570:	70 0d       	add	r23, r0
    6572:	81 1d       	adc	r24, r1
    6574:	11 24       	eor	r1, r1
    6576:	91 1d       	adc	r25, r1
    6578:	b2 9f       	mul	r27, r18
    657a:	70 0d       	add	r23, r0
    657c:	81 1d       	adc	r24, r1
    657e:	11 24       	eor	r1, r1
    6580:	91 1d       	adc	r25, r1
    6582:	08 95       	ret

00006584 <__usmulhisi3>:
    6584:	0e 94 b3 32 	call	0x6566	; 0x6566 <__umulhisi3>

00006588 <__usmulhisi3_tail>:
    6588:	b7 ff       	sbrs	r27, 7
    658a:	08 95       	ret
    658c:	82 1b       	sub	r24, r18
    658e:	93 0b       	sbc	r25, r19
    6590:	08 95       	ret

00006592 <__muluhisi3>:
    6592:	0e 94 b3 32 	call	0x6566	; 0x6566 <__umulhisi3>
    6596:	a5 9f       	mul	r26, r21
    6598:	90 0d       	add	r25, r0
    659a:	b4 9f       	mul	r27, r20
    659c:	90 0d       	add	r25, r0
    659e:	a4 9f       	mul	r26, r20
    65a0:	80 0d       	add	r24, r0
    65a2:	91 1d       	adc	r25, r1
    65a4:	11 24       	eor	r1, r1
    65a6:	08 95       	ret

000065a8 <__mulshisi3>:
    65a8:	b7 ff       	sbrs	r27, 7
    65aa:	0c 94 c9 32 	jmp	0x6592	; 0x6592 <__muluhisi3>

000065ae <__mulohisi3>:
    65ae:	0e 94 c9 32 	call	0x6592	; 0x6592 <__muluhisi3>
    65b2:	82 1b       	sub	r24, r18
    65b4:	93 0b       	sbc	r25, r19
    65b6:	08 95       	ret

000065b8 <malloc>:
    65b8:	0f 93       	push	r16
    65ba:	1f 93       	push	r17
    65bc:	cf 93       	push	r28
    65be:	df 93       	push	r29
    65c0:	82 30       	cpi	r24, 0x02	; 2
    65c2:	91 05       	cpc	r25, r1
    65c4:	10 f4       	brcc	.+4      	; 0x65ca <malloc+0x12>
    65c6:	82 e0       	ldi	r24, 0x02	; 2
    65c8:	90 e0       	ldi	r25, 0x00	; 0
    65ca:	e0 91 f5 45 	lds	r30, 0x45F5	; 0x8045f5 <__flp>
    65ce:	f0 91 f6 45 	lds	r31, 0x45F6	; 0x8045f6 <__flp+0x1>
    65d2:	20 e0       	ldi	r18, 0x00	; 0
    65d4:	30 e0       	ldi	r19, 0x00	; 0
    65d6:	a0 e0       	ldi	r26, 0x00	; 0
    65d8:	b0 e0       	ldi	r27, 0x00	; 0
    65da:	30 97       	sbiw	r30, 0x00	; 0
    65dc:	19 f1       	breq	.+70     	; 0x6624 <malloc+0x6c>
    65de:	40 81       	ld	r20, Z
    65e0:	51 81       	ldd	r21, Z+1	; 0x01
    65e2:	02 81       	ldd	r16, Z+2	; 0x02
    65e4:	13 81       	ldd	r17, Z+3	; 0x03
    65e6:	48 17       	cp	r20, r24
    65e8:	59 07       	cpc	r21, r25
    65ea:	c8 f0       	brcs	.+50     	; 0x661e <malloc+0x66>
    65ec:	84 17       	cp	r24, r20
    65ee:	95 07       	cpc	r25, r21
    65f0:	69 f4       	brne	.+26     	; 0x660c <malloc+0x54>
    65f2:	10 97       	sbiw	r26, 0x00	; 0
    65f4:	31 f0       	breq	.+12     	; 0x6602 <malloc+0x4a>
    65f6:	12 96       	adiw	r26, 0x02	; 2
    65f8:	0c 93       	st	X, r16
    65fa:	12 97       	sbiw	r26, 0x02	; 2
    65fc:	13 96       	adiw	r26, 0x03	; 3
    65fe:	1c 93       	st	X, r17
    6600:	27 c0       	rjmp	.+78     	; 0x6650 <malloc+0x98>
    6602:	00 93 f5 45 	sts	0x45F5, r16	; 0x8045f5 <__flp>
    6606:	10 93 f6 45 	sts	0x45F6, r17	; 0x8045f6 <__flp+0x1>
    660a:	22 c0       	rjmp	.+68     	; 0x6650 <malloc+0x98>
    660c:	21 15       	cp	r18, r1
    660e:	31 05       	cpc	r19, r1
    6610:	19 f0       	breq	.+6      	; 0x6618 <malloc+0x60>
    6612:	42 17       	cp	r20, r18
    6614:	53 07       	cpc	r21, r19
    6616:	18 f4       	brcc	.+6      	; 0x661e <malloc+0x66>
    6618:	9a 01       	movw	r18, r20
    661a:	bd 01       	movw	r22, r26
    661c:	ef 01       	movw	r28, r30
    661e:	df 01       	movw	r26, r30
    6620:	f8 01       	movw	r30, r16
    6622:	db cf       	rjmp	.-74     	; 0x65da <malloc+0x22>
    6624:	21 15       	cp	r18, r1
    6626:	31 05       	cpc	r19, r1
    6628:	f9 f0       	breq	.+62     	; 0x6668 <malloc+0xb0>
    662a:	28 1b       	sub	r18, r24
    662c:	39 0b       	sbc	r19, r25
    662e:	24 30       	cpi	r18, 0x04	; 4
    6630:	31 05       	cpc	r19, r1
    6632:	80 f4       	brcc	.+32     	; 0x6654 <malloc+0x9c>
    6634:	8a 81       	ldd	r24, Y+2	; 0x02
    6636:	9b 81       	ldd	r25, Y+3	; 0x03
    6638:	61 15       	cp	r22, r1
    663a:	71 05       	cpc	r23, r1
    663c:	21 f0       	breq	.+8      	; 0x6646 <malloc+0x8e>
    663e:	fb 01       	movw	r30, r22
    6640:	82 83       	std	Z+2, r24	; 0x02
    6642:	93 83       	std	Z+3, r25	; 0x03
    6644:	04 c0       	rjmp	.+8      	; 0x664e <malloc+0x96>
    6646:	80 93 f5 45 	sts	0x45F5, r24	; 0x8045f5 <__flp>
    664a:	90 93 f6 45 	sts	0x45F6, r25	; 0x8045f6 <__flp+0x1>
    664e:	fe 01       	movw	r30, r28
    6650:	32 96       	adiw	r30, 0x02	; 2
    6652:	44 c0       	rjmp	.+136    	; 0x66dc <malloc+0x124>
    6654:	fe 01       	movw	r30, r28
    6656:	e2 0f       	add	r30, r18
    6658:	f3 1f       	adc	r31, r19
    665a:	81 93       	st	Z+, r24
    665c:	91 93       	st	Z+, r25
    665e:	22 50       	subi	r18, 0x02	; 2
    6660:	31 09       	sbc	r19, r1
    6662:	28 83       	st	Y, r18
    6664:	39 83       	std	Y+1, r19	; 0x01
    6666:	3a c0       	rjmp	.+116    	; 0x66dc <malloc+0x124>
    6668:	20 91 f3 45 	lds	r18, 0x45F3	; 0x8045f3 <__brkval>
    666c:	30 91 f4 45 	lds	r19, 0x45F4	; 0x8045f4 <__brkval+0x1>
    6670:	23 2b       	or	r18, r19
    6672:	41 f4       	brne	.+16     	; 0x6684 <malloc+0xcc>
    6674:	20 91 02 40 	lds	r18, 0x4002	; 0x804002 <__malloc_heap_start>
    6678:	30 91 03 40 	lds	r19, 0x4003	; 0x804003 <__malloc_heap_start+0x1>
    667c:	20 93 f3 45 	sts	0x45F3, r18	; 0x8045f3 <__brkval>
    6680:	30 93 f4 45 	sts	0x45F4, r19	; 0x8045f4 <__brkval+0x1>
    6684:	20 91 00 40 	lds	r18, 0x4000	; 0x804000 <__DATA_REGION_ORIGIN__>
    6688:	30 91 01 40 	lds	r19, 0x4001	; 0x804001 <__DATA_REGION_ORIGIN__+0x1>
    668c:	21 15       	cp	r18, r1
    668e:	31 05       	cpc	r19, r1
    6690:	41 f4       	brne	.+16     	; 0x66a2 <malloc+0xea>
    6692:	2d b7       	in	r18, 0x3d	; 61
    6694:	3e b7       	in	r19, 0x3e	; 62
    6696:	40 91 04 40 	lds	r20, 0x4004	; 0x804004 <__malloc_margin>
    669a:	50 91 05 40 	lds	r21, 0x4005	; 0x804005 <__malloc_margin+0x1>
    669e:	24 1b       	sub	r18, r20
    66a0:	35 0b       	sbc	r19, r21
    66a2:	e0 91 f3 45 	lds	r30, 0x45F3	; 0x8045f3 <__brkval>
    66a6:	f0 91 f4 45 	lds	r31, 0x45F4	; 0x8045f4 <__brkval+0x1>
    66aa:	e2 17       	cp	r30, r18
    66ac:	f3 07       	cpc	r31, r19
    66ae:	a0 f4       	brcc	.+40     	; 0x66d8 <malloc+0x120>
    66b0:	2e 1b       	sub	r18, r30
    66b2:	3f 0b       	sbc	r19, r31
    66b4:	28 17       	cp	r18, r24
    66b6:	39 07       	cpc	r19, r25
    66b8:	78 f0       	brcs	.+30     	; 0x66d8 <malloc+0x120>
    66ba:	ac 01       	movw	r20, r24
    66bc:	4e 5f       	subi	r20, 0xFE	; 254
    66be:	5f 4f       	sbci	r21, 0xFF	; 255
    66c0:	24 17       	cp	r18, r20
    66c2:	35 07       	cpc	r19, r21
    66c4:	48 f0       	brcs	.+18     	; 0x66d8 <malloc+0x120>
    66c6:	4e 0f       	add	r20, r30
    66c8:	5f 1f       	adc	r21, r31
    66ca:	40 93 f3 45 	sts	0x45F3, r20	; 0x8045f3 <__brkval>
    66ce:	50 93 f4 45 	sts	0x45F4, r21	; 0x8045f4 <__brkval+0x1>
    66d2:	81 93       	st	Z+, r24
    66d4:	91 93       	st	Z+, r25
    66d6:	02 c0       	rjmp	.+4      	; 0x66dc <malloc+0x124>
    66d8:	e0 e0       	ldi	r30, 0x00	; 0
    66da:	f0 e0       	ldi	r31, 0x00	; 0
    66dc:	cf 01       	movw	r24, r30
    66de:	df 91       	pop	r29
    66e0:	cf 91       	pop	r28
    66e2:	1f 91       	pop	r17
    66e4:	0f 91       	pop	r16
    66e6:	08 95       	ret

000066e8 <free>:
    66e8:	cf 93       	push	r28
    66ea:	df 93       	push	r29
    66ec:	00 97       	sbiw	r24, 0x00	; 0
    66ee:	09 f4       	brne	.+2      	; 0x66f2 <free+0xa>
    66f0:	81 c0       	rjmp	.+258    	; 0x67f4 <free+0x10c>
    66f2:	fc 01       	movw	r30, r24
    66f4:	32 97       	sbiw	r30, 0x02	; 2
    66f6:	12 82       	std	Z+2, r1	; 0x02
    66f8:	13 82       	std	Z+3, r1	; 0x03
    66fa:	a0 91 f5 45 	lds	r26, 0x45F5	; 0x8045f5 <__flp>
    66fe:	b0 91 f6 45 	lds	r27, 0x45F6	; 0x8045f6 <__flp+0x1>
    6702:	10 97       	sbiw	r26, 0x00	; 0
    6704:	81 f4       	brne	.+32     	; 0x6726 <free+0x3e>
    6706:	20 81       	ld	r18, Z
    6708:	31 81       	ldd	r19, Z+1	; 0x01
    670a:	82 0f       	add	r24, r18
    670c:	93 1f       	adc	r25, r19
    670e:	20 91 f3 45 	lds	r18, 0x45F3	; 0x8045f3 <__brkval>
    6712:	30 91 f4 45 	lds	r19, 0x45F4	; 0x8045f4 <__brkval+0x1>
    6716:	28 17       	cp	r18, r24
    6718:	39 07       	cpc	r19, r25
    671a:	51 f5       	brne	.+84     	; 0x6770 <free+0x88>
    671c:	e0 93 f3 45 	sts	0x45F3, r30	; 0x8045f3 <__brkval>
    6720:	f0 93 f4 45 	sts	0x45F4, r31	; 0x8045f4 <__brkval+0x1>
    6724:	67 c0       	rjmp	.+206    	; 0x67f4 <free+0x10c>
    6726:	ed 01       	movw	r28, r26
    6728:	20 e0       	ldi	r18, 0x00	; 0
    672a:	30 e0       	ldi	r19, 0x00	; 0
    672c:	ce 17       	cp	r28, r30
    672e:	df 07       	cpc	r29, r31
    6730:	40 f4       	brcc	.+16     	; 0x6742 <free+0x5a>
    6732:	4a 81       	ldd	r20, Y+2	; 0x02
    6734:	5b 81       	ldd	r21, Y+3	; 0x03
    6736:	9e 01       	movw	r18, r28
    6738:	41 15       	cp	r20, r1
    673a:	51 05       	cpc	r21, r1
    673c:	f1 f0       	breq	.+60     	; 0x677a <free+0x92>
    673e:	ea 01       	movw	r28, r20
    6740:	f5 cf       	rjmp	.-22     	; 0x672c <free+0x44>
    6742:	c2 83       	std	Z+2, r28	; 0x02
    6744:	d3 83       	std	Z+3, r29	; 0x03
    6746:	40 81       	ld	r20, Z
    6748:	51 81       	ldd	r21, Z+1	; 0x01
    674a:	84 0f       	add	r24, r20
    674c:	95 1f       	adc	r25, r21
    674e:	c8 17       	cp	r28, r24
    6750:	d9 07       	cpc	r29, r25
    6752:	59 f4       	brne	.+22     	; 0x676a <free+0x82>
    6754:	88 81       	ld	r24, Y
    6756:	99 81       	ldd	r25, Y+1	; 0x01
    6758:	84 0f       	add	r24, r20
    675a:	95 1f       	adc	r25, r21
    675c:	02 96       	adiw	r24, 0x02	; 2
    675e:	80 83       	st	Z, r24
    6760:	91 83       	std	Z+1, r25	; 0x01
    6762:	8a 81       	ldd	r24, Y+2	; 0x02
    6764:	9b 81       	ldd	r25, Y+3	; 0x03
    6766:	82 83       	std	Z+2, r24	; 0x02
    6768:	93 83       	std	Z+3, r25	; 0x03
    676a:	21 15       	cp	r18, r1
    676c:	31 05       	cpc	r19, r1
    676e:	29 f4       	brne	.+10     	; 0x677a <free+0x92>
    6770:	e0 93 f5 45 	sts	0x45F5, r30	; 0x8045f5 <__flp>
    6774:	f0 93 f6 45 	sts	0x45F6, r31	; 0x8045f6 <__flp+0x1>
    6778:	3d c0       	rjmp	.+122    	; 0x67f4 <free+0x10c>
    677a:	e9 01       	movw	r28, r18
    677c:	ea 83       	std	Y+2, r30	; 0x02
    677e:	fb 83       	std	Y+3, r31	; 0x03
    6780:	49 91       	ld	r20, Y+
    6782:	59 91       	ld	r21, Y+
    6784:	c4 0f       	add	r28, r20
    6786:	d5 1f       	adc	r29, r21
    6788:	ec 17       	cp	r30, r28
    678a:	fd 07       	cpc	r31, r29
    678c:	61 f4       	brne	.+24     	; 0x67a6 <free+0xbe>
    678e:	80 81       	ld	r24, Z
    6790:	91 81       	ldd	r25, Z+1	; 0x01
    6792:	84 0f       	add	r24, r20
    6794:	95 1f       	adc	r25, r21
    6796:	02 96       	adiw	r24, 0x02	; 2
    6798:	e9 01       	movw	r28, r18
    679a:	88 83       	st	Y, r24
    679c:	99 83       	std	Y+1, r25	; 0x01
    679e:	82 81       	ldd	r24, Z+2	; 0x02
    67a0:	93 81       	ldd	r25, Z+3	; 0x03
    67a2:	8a 83       	std	Y+2, r24	; 0x02
    67a4:	9b 83       	std	Y+3, r25	; 0x03
    67a6:	e0 e0       	ldi	r30, 0x00	; 0
    67a8:	f0 e0       	ldi	r31, 0x00	; 0
    67aa:	12 96       	adiw	r26, 0x02	; 2
    67ac:	8d 91       	ld	r24, X+
    67ae:	9c 91       	ld	r25, X
    67b0:	13 97       	sbiw	r26, 0x03	; 3
    67b2:	00 97       	sbiw	r24, 0x00	; 0
    67b4:	19 f0       	breq	.+6      	; 0x67bc <free+0xd4>
    67b6:	fd 01       	movw	r30, r26
    67b8:	dc 01       	movw	r26, r24
    67ba:	f7 cf       	rjmp	.-18     	; 0x67aa <free+0xc2>
    67bc:	8d 91       	ld	r24, X+
    67be:	9c 91       	ld	r25, X
    67c0:	11 97       	sbiw	r26, 0x01	; 1
    67c2:	9d 01       	movw	r18, r26
    67c4:	2e 5f       	subi	r18, 0xFE	; 254
    67c6:	3f 4f       	sbci	r19, 0xFF	; 255
    67c8:	82 0f       	add	r24, r18
    67ca:	93 1f       	adc	r25, r19
    67cc:	20 91 f3 45 	lds	r18, 0x45F3	; 0x8045f3 <__brkval>
    67d0:	30 91 f4 45 	lds	r19, 0x45F4	; 0x8045f4 <__brkval+0x1>
    67d4:	28 17       	cp	r18, r24
    67d6:	39 07       	cpc	r19, r25
    67d8:	69 f4       	brne	.+26     	; 0x67f4 <free+0x10c>
    67da:	30 97       	sbiw	r30, 0x00	; 0
    67dc:	29 f4       	brne	.+10     	; 0x67e8 <free+0x100>
    67de:	10 92 f5 45 	sts	0x45F5, r1	; 0x8045f5 <__flp>
    67e2:	10 92 f6 45 	sts	0x45F6, r1	; 0x8045f6 <__flp+0x1>
    67e6:	02 c0       	rjmp	.+4      	; 0x67ec <free+0x104>
    67e8:	12 82       	std	Z+2, r1	; 0x02
    67ea:	13 82       	std	Z+3, r1	; 0x03
    67ec:	a0 93 f3 45 	sts	0x45F3, r26	; 0x8045f3 <__brkval>
    67f0:	b0 93 f4 45 	sts	0x45F4, r27	; 0x8045f4 <__brkval+0x1>
    67f4:	df 91       	pop	r29
    67f6:	cf 91       	pop	r28
    67f8:	08 95       	ret

000067fa <atoi>:
    67fa:	fc 01       	movw	r30, r24
    67fc:	88 27       	eor	r24, r24
    67fe:	99 27       	eor	r25, r25
    6800:	e8 94       	clt
    6802:	21 91       	ld	r18, Z+
    6804:	20 32       	cpi	r18, 0x20	; 32
    6806:	e9 f3       	breq	.-6      	; 0x6802 <atoi+0x8>
    6808:	29 30       	cpi	r18, 0x09	; 9
    680a:	10 f0       	brcs	.+4      	; 0x6810 <atoi+0x16>
    680c:	2e 30       	cpi	r18, 0x0E	; 14
    680e:	c8 f3       	brcs	.-14     	; 0x6802 <atoi+0x8>
    6810:	2b 32       	cpi	r18, 0x2B	; 43
    6812:	41 f0       	breq	.+16     	; 0x6824 <atoi+0x2a>
    6814:	2d 32       	cpi	r18, 0x2D	; 45
    6816:	39 f4       	brne	.+14     	; 0x6826 <atoi+0x2c>
    6818:	68 94       	set
    681a:	04 c0       	rjmp	.+8      	; 0x6824 <atoi+0x2a>
    681c:	0e 94 89 34 	call	0x6912	; 0x6912 <__mulhi_const_10>
    6820:	82 0f       	add	r24, r18
    6822:	91 1d       	adc	r25, r1
    6824:	21 91       	ld	r18, Z+
    6826:	20 53       	subi	r18, 0x30	; 48
    6828:	2a 30       	cpi	r18, 0x0A	; 10
    682a:	c0 f3       	brcs	.-16     	; 0x681c <atoi+0x22>
    682c:	1e f4       	brtc	.+6      	; 0x6834 <atoi+0x3a>
    682e:	90 95       	com	r25
    6830:	81 95       	neg	r24
    6832:	9f 4f       	sbci	r25, 0xFF	; 255
    6834:	08 95       	ret

00006836 <atol>:
    6836:	1f 93       	push	r17
    6838:	fc 01       	movw	r30, r24
    683a:	99 27       	eor	r25, r25
    683c:	88 27       	eor	r24, r24
    683e:	bc 01       	movw	r22, r24
    6840:	e8 94       	clt
    6842:	11 91       	ld	r17, Z+
    6844:	10 32       	cpi	r17, 0x20	; 32
    6846:	e9 f3       	breq	.-6      	; 0x6842 <atol+0xc>
    6848:	19 30       	cpi	r17, 0x09	; 9
    684a:	10 f0       	brcs	.+4      	; 0x6850 <atol+0x1a>
    684c:	1e 30       	cpi	r17, 0x0E	; 14
    684e:	c8 f3       	brcs	.-14     	; 0x6842 <atol+0xc>
    6850:	1b 32       	cpi	r17, 0x2B	; 43
    6852:	51 f0       	breq	.+20     	; 0x6868 <atol+0x32>
    6854:	1d 32       	cpi	r17, 0x2D	; 45
    6856:	49 f4       	brne	.+18     	; 0x686a <atol+0x34>
    6858:	68 94       	set
    685a:	06 c0       	rjmp	.+12     	; 0x6868 <atol+0x32>
    685c:	0e 94 74 34 	call	0x68e8	; 0x68e8 <__mulsi_const_10>
    6860:	61 0f       	add	r22, r17
    6862:	71 1d       	adc	r23, r1
    6864:	81 1d       	adc	r24, r1
    6866:	91 1d       	adc	r25, r1
    6868:	11 91       	ld	r17, Z+
    686a:	10 53       	subi	r17, 0x30	; 48
    686c:	1a 30       	cpi	r17, 0x0A	; 10
    686e:	b0 f3       	brcs	.-20     	; 0x685c <atol+0x26>
    6870:	3e f4       	brtc	.+14     	; 0x6880 <atol+0x4a>
    6872:	90 95       	com	r25
    6874:	80 95       	com	r24
    6876:	70 95       	com	r23
    6878:	61 95       	neg	r22
    687a:	7f 4f       	sbci	r23, 0xFF	; 255
    687c:	8f 4f       	sbci	r24, 0xFF	; 255
    687e:	9f 4f       	sbci	r25, 0xFF	; 255
    6880:	1f 91       	pop	r17
    6882:	08 95       	ret

00006884 <toupper>:
    6884:	91 11       	cpse	r25, r1
    6886:	08 95       	ret
    6888:	81 56       	subi	r24, 0x61	; 97
    688a:	8a 51       	subi	r24, 0x1A	; 26
    688c:	08 f4       	brcc	.+2      	; 0x6890 <toupper+0xc>
    688e:	80 52       	subi	r24, 0x20	; 32
    6890:	85 58       	subi	r24, 0x85	; 133
    6892:	08 95       	ret

00006894 <strcat>:
    6894:	fb 01       	movw	r30, r22
    6896:	dc 01       	movw	r26, r24
    6898:	0d 90       	ld	r0, X+
    689a:	00 20       	and	r0, r0
    689c:	e9 f7       	brne	.-6      	; 0x6898 <strcat+0x4>
    689e:	11 97       	sbiw	r26, 0x01	; 1
    68a0:	01 90       	ld	r0, Z+
    68a2:	0d 92       	st	X+, r0
    68a4:	00 20       	and	r0, r0
    68a6:	e1 f7       	brne	.-8      	; 0x68a0 <strcat+0xc>
    68a8:	08 95       	ret

000068aa <strcpy>:
    68aa:	fb 01       	movw	r30, r22
    68ac:	dc 01       	movw	r26, r24
    68ae:	01 90       	ld	r0, Z+
    68b0:	0d 92       	st	X+, r0
    68b2:	00 20       	and	r0, r0
    68b4:	e1 f7       	brne	.-8      	; 0x68ae <strcpy+0x4>
    68b6:	08 95       	ret

000068b8 <strlen>:
    68b8:	fc 01       	movw	r30, r24
    68ba:	01 90       	ld	r0, Z+
    68bc:	00 20       	and	r0, r0
    68be:	e9 f7       	brne	.-6      	; 0x68ba <strlen+0x2>
    68c0:	80 95       	com	r24
    68c2:	90 95       	com	r25
    68c4:	8e 0f       	add	r24, r30
    68c6:	9f 1f       	adc	r25, r31
    68c8:	08 95       	ret

000068ca <strncpy>:
    68ca:	fb 01       	movw	r30, r22
    68cc:	dc 01       	movw	r26, r24
    68ce:	41 50       	subi	r20, 0x01	; 1
    68d0:	50 40       	sbci	r21, 0x00	; 0
    68d2:	48 f0       	brcs	.+18     	; 0x68e6 <strncpy+0x1c>
    68d4:	01 90       	ld	r0, Z+
    68d6:	0d 92       	st	X+, r0
    68d8:	00 20       	and	r0, r0
    68da:	c9 f7       	brne	.-14     	; 0x68ce <strncpy+0x4>
    68dc:	01 c0       	rjmp	.+2      	; 0x68e0 <strncpy+0x16>
    68de:	1d 92       	st	X+, r1
    68e0:	41 50       	subi	r20, 0x01	; 1
    68e2:	50 40       	sbci	r21, 0x00	; 0
    68e4:	e0 f7       	brcc	.-8      	; 0x68de <strncpy+0x14>
    68e6:	08 95       	ret

000068e8 <__mulsi_const_10>:
    68e8:	59 2f       	mov	r21, r25
    68ea:	48 2f       	mov	r20, r24
    68ec:	37 2f       	mov	r19, r23
    68ee:	26 2f       	mov	r18, r22
    68f0:	66 0f       	add	r22, r22
    68f2:	77 1f       	adc	r23, r23
    68f4:	88 1f       	adc	r24, r24
    68f6:	99 1f       	adc	r25, r25
    68f8:	66 0f       	add	r22, r22
    68fa:	77 1f       	adc	r23, r23
    68fc:	88 1f       	adc	r24, r24
    68fe:	99 1f       	adc	r25, r25
    6900:	62 0f       	add	r22, r18
    6902:	73 1f       	adc	r23, r19
    6904:	84 1f       	adc	r24, r20
    6906:	95 1f       	adc	r25, r21
    6908:	66 0f       	add	r22, r22
    690a:	77 1f       	adc	r23, r23
    690c:	88 1f       	adc	r24, r24
    690e:	99 1f       	adc	r25, r25
    6910:	08 95       	ret

00006912 <__mulhi_const_10>:
    6912:	7a e0       	ldi	r23, 0x0A	; 10
    6914:	97 9f       	mul	r25, r23
    6916:	90 2d       	mov	r25, r0
    6918:	87 9f       	mul	r24, r23
    691a:	80 2d       	mov	r24, r0
    691c:	91 0d       	add	r25, r1
    691e:	11 24       	eor	r1, r1
    6920:	08 95       	ret

00006922 <sprintf>:
    6922:	0f 93       	push	r16
    6924:	1f 93       	push	r17
    6926:	cf 93       	push	r28
    6928:	df 93       	push	r29
    692a:	cd b7       	in	r28, 0x3d	; 61
    692c:	de b7       	in	r29, 0x3e	; 62
    692e:	2e 97       	sbiw	r28, 0x0e	; 14
    6930:	cd bf       	out	0x3d, r28	; 61
    6932:	de bf       	out	0x3e, r29	; 62
    6934:	0d 89       	ldd	r16, Y+21	; 0x15
    6936:	1e 89       	ldd	r17, Y+22	; 0x16
    6938:	86 e0       	ldi	r24, 0x06	; 6
    693a:	8c 83       	std	Y+4, r24	; 0x04
    693c:	09 83       	std	Y+1, r16	; 0x01
    693e:	1a 83       	std	Y+2, r17	; 0x02
    6940:	8f ef       	ldi	r24, 0xFF	; 255
    6942:	9f e7       	ldi	r25, 0x7F	; 127
    6944:	8d 83       	std	Y+5, r24	; 0x05
    6946:	9e 83       	std	Y+6, r25	; 0x06
    6948:	ae 01       	movw	r20, r28
    694a:	47 5e       	subi	r20, 0xE7	; 231
    694c:	5f 4f       	sbci	r21, 0xFF	; 255
    694e:	6f 89       	ldd	r22, Y+23	; 0x17
    6950:	78 8d       	ldd	r23, Y+24	; 0x18
    6952:	ce 01       	movw	r24, r28
    6954:	01 96       	adiw	r24, 0x01	; 1
    6956:	0e 94 ba 34 	call	0x6974	; 0x6974 <vfprintf>
    695a:	ef 81       	ldd	r30, Y+7	; 0x07
    695c:	f8 85       	ldd	r31, Y+8	; 0x08
    695e:	e0 0f       	add	r30, r16
    6960:	f1 1f       	adc	r31, r17
    6962:	10 82       	st	Z, r1
    6964:	2e 96       	adiw	r28, 0x0e	; 14
    6966:	cd bf       	out	0x3d, r28	; 61
    6968:	de bf       	out	0x3e, r29	; 62
    696a:	df 91       	pop	r29
    696c:	cf 91       	pop	r28
    696e:	1f 91       	pop	r17
    6970:	0f 91       	pop	r16
    6972:	08 95       	ret

00006974 <vfprintf>:
    6974:	2f 92       	push	r2
    6976:	3f 92       	push	r3
    6978:	4f 92       	push	r4
    697a:	5f 92       	push	r5
    697c:	6f 92       	push	r6
    697e:	7f 92       	push	r7
    6980:	8f 92       	push	r8
    6982:	9f 92       	push	r9
    6984:	af 92       	push	r10
    6986:	bf 92       	push	r11
    6988:	cf 92       	push	r12
    698a:	df 92       	push	r13
    698c:	ef 92       	push	r14
    698e:	ff 92       	push	r15
    6990:	0f 93       	push	r16
    6992:	1f 93       	push	r17
    6994:	cf 93       	push	r28
    6996:	df 93       	push	r29
    6998:	cd b7       	in	r28, 0x3d	; 61
    699a:	de b7       	in	r29, 0x3e	; 62
    699c:	2b 97       	sbiw	r28, 0x0b	; 11
    699e:	cd bf       	out	0x3d, r28	; 61
    69a0:	de bf       	out	0x3e, r29	; 62
    69a2:	6c 01       	movw	r12, r24
    69a4:	7b 01       	movw	r14, r22
    69a6:	8a 01       	movw	r16, r20
    69a8:	fc 01       	movw	r30, r24
    69aa:	16 82       	std	Z+6, r1	; 0x06
    69ac:	17 82       	std	Z+7, r1	; 0x07
    69ae:	83 81       	ldd	r24, Z+3	; 0x03
    69b0:	81 ff       	sbrs	r24, 1
    69b2:	cc c1       	rjmp	.+920    	; 0x6d4c <vfprintf+0x3d8>
    69b4:	ce 01       	movw	r24, r28
    69b6:	01 96       	adiw	r24, 0x01	; 1
    69b8:	3c 01       	movw	r6, r24
    69ba:	f6 01       	movw	r30, r12
    69bc:	93 81       	ldd	r25, Z+3	; 0x03
    69be:	f7 01       	movw	r30, r14
    69c0:	93 fd       	sbrc	r25, 3
    69c2:	85 91       	lpm	r24, Z+
    69c4:	93 ff       	sbrs	r25, 3
    69c6:	81 91       	ld	r24, Z+
    69c8:	7f 01       	movw	r14, r30
    69ca:	88 23       	and	r24, r24
    69cc:	09 f4       	brne	.+2      	; 0x69d0 <vfprintf+0x5c>
    69ce:	ba c1       	rjmp	.+884    	; 0x6d44 <vfprintf+0x3d0>
    69d0:	85 32       	cpi	r24, 0x25	; 37
    69d2:	39 f4       	brne	.+14     	; 0x69e2 <vfprintf+0x6e>
    69d4:	93 fd       	sbrc	r25, 3
    69d6:	85 91       	lpm	r24, Z+
    69d8:	93 ff       	sbrs	r25, 3
    69da:	81 91       	ld	r24, Z+
    69dc:	7f 01       	movw	r14, r30
    69de:	85 32       	cpi	r24, 0x25	; 37
    69e0:	29 f4       	brne	.+10     	; 0x69ec <vfprintf+0x78>
    69e2:	b6 01       	movw	r22, r12
    69e4:	90 e0       	ldi	r25, 0x00	; 0
    69e6:	0e 94 d4 36 	call	0x6da8	; 0x6da8 <fputc>
    69ea:	e7 cf       	rjmp	.-50     	; 0x69ba <vfprintf+0x46>
    69ec:	91 2c       	mov	r9, r1
    69ee:	21 2c       	mov	r2, r1
    69f0:	31 2c       	mov	r3, r1
    69f2:	ff e1       	ldi	r31, 0x1F	; 31
    69f4:	f3 15       	cp	r31, r3
    69f6:	d8 f0       	brcs	.+54     	; 0x6a2e <vfprintf+0xba>
    69f8:	8b 32       	cpi	r24, 0x2B	; 43
    69fa:	79 f0       	breq	.+30     	; 0x6a1a <vfprintf+0xa6>
    69fc:	38 f4       	brcc	.+14     	; 0x6a0c <vfprintf+0x98>
    69fe:	80 32       	cpi	r24, 0x20	; 32
    6a00:	79 f0       	breq	.+30     	; 0x6a20 <vfprintf+0xac>
    6a02:	83 32       	cpi	r24, 0x23	; 35
    6a04:	a1 f4       	brne	.+40     	; 0x6a2e <vfprintf+0xba>
    6a06:	23 2d       	mov	r18, r3
    6a08:	20 61       	ori	r18, 0x10	; 16
    6a0a:	1d c0       	rjmp	.+58     	; 0x6a46 <vfprintf+0xd2>
    6a0c:	8d 32       	cpi	r24, 0x2D	; 45
    6a0e:	61 f0       	breq	.+24     	; 0x6a28 <vfprintf+0xb4>
    6a10:	80 33       	cpi	r24, 0x30	; 48
    6a12:	69 f4       	brne	.+26     	; 0x6a2e <vfprintf+0xba>
    6a14:	23 2d       	mov	r18, r3
    6a16:	21 60       	ori	r18, 0x01	; 1
    6a18:	16 c0       	rjmp	.+44     	; 0x6a46 <vfprintf+0xd2>
    6a1a:	83 2d       	mov	r24, r3
    6a1c:	82 60       	ori	r24, 0x02	; 2
    6a1e:	38 2e       	mov	r3, r24
    6a20:	e3 2d       	mov	r30, r3
    6a22:	e4 60       	ori	r30, 0x04	; 4
    6a24:	3e 2e       	mov	r3, r30
    6a26:	2a c0       	rjmp	.+84     	; 0x6a7c <vfprintf+0x108>
    6a28:	f3 2d       	mov	r31, r3
    6a2a:	f8 60       	ori	r31, 0x08	; 8
    6a2c:	1d c0       	rjmp	.+58     	; 0x6a68 <vfprintf+0xf4>
    6a2e:	37 fc       	sbrc	r3, 7
    6a30:	2d c0       	rjmp	.+90     	; 0x6a8c <vfprintf+0x118>
    6a32:	20 ed       	ldi	r18, 0xD0	; 208
    6a34:	28 0f       	add	r18, r24
    6a36:	2a 30       	cpi	r18, 0x0A	; 10
    6a38:	40 f0       	brcs	.+16     	; 0x6a4a <vfprintf+0xd6>
    6a3a:	8e 32       	cpi	r24, 0x2E	; 46
    6a3c:	b9 f4       	brne	.+46     	; 0x6a6c <vfprintf+0xf8>
    6a3e:	36 fc       	sbrc	r3, 6
    6a40:	81 c1       	rjmp	.+770    	; 0x6d44 <vfprintf+0x3d0>
    6a42:	23 2d       	mov	r18, r3
    6a44:	20 64       	ori	r18, 0x40	; 64
    6a46:	32 2e       	mov	r3, r18
    6a48:	19 c0       	rjmp	.+50     	; 0x6a7c <vfprintf+0x108>
    6a4a:	36 fe       	sbrs	r3, 6
    6a4c:	06 c0       	rjmp	.+12     	; 0x6a5a <vfprintf+0xe6>
    6a4e:	8a e0       	ldi	r24, 0x0A	; 10
    6a50:	98 9e       	mul	r9, r24
    6a52:	20 0d       	add	r18, r0
    6a54:	11 24       	eor	r1, r1
    6a56:	92 2e       	mov	r9, r18
    6a58:	11 c0       	rjmp	.+34     	; 0x6a7c <vfprintf+0x108>
    6a5a:	ea e0       	ldi	r30, 0x0A	; 10
    6a5c:	2e 9e       	mul	r2, r30
    6a5e:	20 0d       	add	r18, r0
    6a60:	11 24       	eor	r1, r1
    6a62:	22 2e       	mov	r2, r18
    6a64:	f3 2d       	mov	r31, r3
    6a66:	f0 62       	ori	r31, 0x20	; 32
    6a68:	3f 2e       	mov	r3, r31
    6a6a:	08 c0       	rjmp	.+16     	; 0x6a7c <vfprintf+0x108>
    6a6c:	8c 36       	cpi	r24, 0x6C	; 108
    6a6e:	21 f4       	brne	.+8      	; 0x6a78 <vfprintf+0x104>
    6a70:	83 2d       	mov	r24, r3
    6a72:	80 68       	ori	r24, 0x80	; 128
    6a74:	38 2e       	mov	r3, r24
    6a76:	02 c0       	rjmp	.+4      	; 0x6a7c <vfprintf+0x108>
    6a78:	88 36       	cpi	r24, 0x68	; 104
    6a7a:	41 f4       	brne	.+16     	; 0x6a8c <vfprintf+0x118>
    6a7c:	f7 01       	movw	r30, r14
    6a7e:	93 fd       	sbrc	r25, 3
    6a80:	85 91       	lpm	r24, Z+
    6a82:	93 ff       	sbrs	r25, 3
    6a84:	81 91       	ld	r24, Z+
    6a86:	7f 01       	movw	r14, r30
    6a88:	81 11       	cpse	r24, r1
    6a8a:	b3 cf       	rjmp	.-154    	; 0x69f2 <vfprintf+0x7e>
    6a8c:	98 2f       	mov	r25, r24
    6a8e:	9f 7d       	andi	r25, 0xDF	; 223
    6a90:	95 54       	subi	r25, 0x45	; 69
    6a92:	93 30       	cpi	r25, 0x03	; 3
    6a94:	28 f4       	brcc	.+10     	; 0x6aa0 <vfprintf+0x12c>
    6a96:	0c 5f       	subi	r16, 0xFC	; 252
    6a98:	1f 4f       	sbci	r17, 0xFF	; 255
    6a9a:	9f e3       	ldi	r25, 0x3F	; 63
    6a9c:	99 83       	std	Y+1, r25	; 0x01
    6a9e:	0d c0       	rjmp	.+26     	; 0x6aba <vfprintf+0x146>
    6aa0:	83 36       	cpi	r24, 0x63	; 99
    6aa2:	31 f0       	breq	.+12     	; 0x6ab0 <vfprintf+0x13c>
    6aa4:	83 37       	cpi	r24, 0x73	; 115
    6aa6:	71 f0       	breq	.+28     	; 0x6ac4 <vfprintf+0x150>
    6aa8:	83 35       	cpi	r24, 0x53	; 83
    6aaa:	09 f0       	breq	.+2      	; 0x6aae <vfprintf+0x13a>
    6aac:	59 c0       	rjmp	.+178    	; 0x6b60 <vfprintf+0x1ec>
    6aae:	21 c0       	rjmp	.+66     	; 0x6af2 <vfprintf+0x17e>
    6ab0:	f8 01       	movw	r30, r16
    6ab2:	80 81       	ld	r24, Z
    6ab4:	89 83       	std	Y+1, r24	; 0x01
    6ab6:	0e 5f       	subi	r16, 0xFE	; 254
    6ab8:	1f 4f       	sbci	r17, 0xFF	; 255
    6aba:	88 24       	eor	r8, r8
    6abc:	83 94       	inc	r8
    6abe:	91 2c       	mov	r9, r1
    6ac0:	53 01       	movw	r10, r6
    6ac2:	13 c0       	rjmp	.+38     	; 0x6aea <vfprintf+0x176>
    6ac4:	28 01       	movw	r4, r16
    6ac6:	f2 e0       	ldi	r31, 0x02	; 2
    6ac8:	4f 0e       	add	r4, r31
    6aca:	51 1c       	adc	r5, r1
    6acc:	f8 01       	movw	r30, r16
    6ace:	a0 80       	ld	r10, Z
    6ad0:	b1 80       	ldd	r11, Z+1	; 0x01
    6ad2:	36 fe       	sbrs	r3, 6
    6ad4:	03 c0       	rjmp	.+6      	; 0x6adc <vfprintf+0x168>
    6ad6:	69 2d       	mov	r22, r9
    6ad8:	70 e0       	ldi	r23, 0x00	; 0
    6ada:	02 c0       	rjmp	.+4      	; 0x6ae0 <vfprintf+0x16c>
    6adc:	6f ef       	ldi	r22, 0xFF	; 255
    6ade:	7f ef       	ldi	r23, 0xFF	; 255
    6ae0:	c5 01       	movw	r24, r10
    6ae2:	0e 94 c9 36 	call	0x6d92	; 0x6d92 <strnlen>
    6ae6:	4c 01       	movw	r8, r24
    6ae8:	82 01       	movw	r16, r4
    6aea:	f3 2d       	mov	r31, r3
    6aec:	ff 77       	andi	r31, 0x7F	; 127
    6aee:	3f 2e       	mov	r3, r31
    6af0:	16 c0       	rjmp	.+44     	; 0x6b1e <vfprintf+0x1aa>
    6af2:	28 01       	movw	r4, r16
    6af4:	22 e0       	ldi	r18, 0x02	; 2
    6af6:	42 0e       	add	r4, r18
    6af8:	51 1c       	adc	r5, r1
    6afa:	f8 01       	movw	r30, r16
    6afc:	a0 80       	ld	r10, Z
    6afe:	b1 80       	ldd	r11, Z+1	; 0x01
    6b00:	36 fe       	sbrs	r3, 6
    6b02:	03 c0       	rjmp	.+6      	; 0x6b0a <vfprintf+0x196>
    6b04:	69 2d       	mov	r22, r9
    6b06:	70 e0       	ldi	r23, 0x00	; 0
    6b08:	02 c0       	rjmp	.+4      	; 0x6b0e <vfprintf+0x19a>
    6b0a:	6f ef       	ldi	r22, 0xFF	; 255
    6b0c:	7f ef       	ldi	r23, 0xFF	; 255
    6b0e:	c5 01       	movw	r24, r10
    6b10:	0e 94 be 36 	call	0x6d7c	; 0x6d7c <strnlen_P>
    6b14:	4c 01       	movw	r8, r24
    6b16:	f3 2d       	mov	r31, r3
    6b18:	f0 68       	ori	r31, 0x80	; 128
    6b1a:	3f 2e       	mov	r3, r31
    6b1c:	82 01       	movw	r16, r4
    6b1e:	33 fc       	sbrc	r3, 3
    6b20:	1b c0       	rjmp	.+54     	; 0x6b58 <vfprintf+0x1e4>
    6b22:	82 2d       	mov	r24, r2
    6b24:	90 e0       	ldi	r25, 0x00	; 0
    6b26:	88 16       	cp	r8, r24
    6b28:	99 06       	cpc	r9, r25
    6b2a:	b0 f4       	brcc	.+44     	; 0x6b58 <vfprintf+0x1e4>
    6b2c:	b6 01       	movw	r22, r12
    6b2e:	80 e2       	ldi	r24, 0x20	; 32
    6b30:	90 e0       	ldi	r25, 0x00	; 0
    6b32:	0e 94 d4 36 	call	0x6da8	; 0x6da8 <fputc>
    6b36:	2a 94       	dec	r2
    6b38:	f4 cf       	rjmp	.-24     	; 0x6b22 <vfprintf+0x1ae>
    6b3a:	f5 01       	movw	r30, r10
    6b3c:	37 fc       	sbrc	r3, 7
    6b3e:	85 91       	lpm	r24, Z+
    6b40:	37 fe       	sbrs	r3, 7
    6b42:	81 91       	ld	r24, Z+
    6b44:	5f 01       	movw	r10, r30
    6b46:	b6 01       	movw	r22, r12
    6b48:	90 e0       	ldi	r25, 0x00	; 0
    6b4a:	0e 94 d4 36 	call	0x6da8	; 0x6da8 <fputc>
    6b4e:	21 10       	cpse	r2, r1
    6b50:	2a 94       	dec	r2
    6b52:	21 e0       	ldi	r18, 0x01	; 1
    6b54:	82 1a       	sub	r8, r18
    6b56:	91 08       	sbc	r9, r1
    6b58:	81 14       	cp	r8, r1
    6b5a:	91 04       	cpc	r9, r1
    6b5c:	71 f7       	brne	.-36     	; 0x6b3a <vfprintf+0x1c6>
    6b5e:	e8 c0       	rjmp	.+464    	; 0x6d30 <vfprintf+0x3bc>
    6b60:	84 36       	cpi	r24, 0x64	; 100
    6b62:	11 f0       	breq	.+4      	; 0x6b68 <vfprintf+0x1f4>
    6b64:	89 36       	cpi	r24, 0x69	; 105
    6b66:	41 f5       	brne	.+80     	; 0x6bb8 <vfprintf+0x244>
    6b68:	f8 01       	movw	r30, r16
    6b6a:	37 fe       	sbrs	r3, 7
    6b6c:	07 c0       	rjmp	.+14     	; 0x6b7c <vfprintf+0x208>
    6b6e:	60 81       	ld	r22, Z
    6b70:	71 81       	ldd	r23, Z+1	; 0x01
    6b72:	82 81       	ldd	r24, Z+2	; 0x02
    6b74:	93 81       	ldd	r25, Z+3	; 0x03
    6b76:	0c 5f       	subi	r16, 0xFC	; 252
    6b78:	1f 4f       	sbci	r17, 0xFF	; 255
    6b7a:	08 c0       	rjmp	.+16     	; 0x6b8c <vfprintf+0x218>
    6b7c:	60 81       	ld	r22, Z
    6b7e:	71 81       	ldd	r23, Z+1	; 0x01
    6b80:	07 2e       	mov	r0, r23
    6b82:	00 0c       	add	r0, r0
    6b84:	88 0b       	sbc	r24, r24
    6b86:	99 0b       	sbc	r25, r25
    6b88:	0e 5f       	subi	r16, 0xFE	; 254
    6b8a:	1f 4f       	sbci	r17, 0xFF	; 255
    6b8c:	f3 2d       	mov	r31, r3
    6b8e:	ff 76       	andi	r31, 0x6F	; 111
    6b90:	3f 2e       	mov	r3, r31
    6b92:	97 ff       	sbrs	r25, 7
    6b94:	09 c0       	rjmp	.+18     	; 0x6ba8 <vfprintf+0x234>
    6b96:	90 95       	com	r25
    6b98:	80 95       	com	r24
    6b9a:	70 95       	com	r23
    6b9c:	61 95       	neg	r22
    6b9e:	7f 4f       	sbci	r23, 0xFF	; 255
    6ba0:	8f 4f       	sbci	r24, 0xFF	; 255
    6ba2:	9f 4f       	sbci	r25, 0xFF	; 255
    6ba4:	f0 68       	ori	r31, 0x80	; 128
    6ba6:	3f 2e       	mov	r3, r31
    6ba8:	2a e0       	ldi	r18, 0x0A	; 10
    6baa:	30 e0       	ldi	r19, 0x00	; 0
    6bac:	a3 01       	movw	r20, r6
    6bae:	0e 94 10 37 	call	0x6e20	; 0x6e20 <__ultoa_invert>
    6bb2:	88 2e       	mov	r8, r24
    6bb4:	86 18       	sub	r8, r6
    6bb6:	45 c0       	rjmp	.+138    	; 0x6c42 <vfprintf+0x2ce>
    6bb8:	85 37       	cpi	r24, 0x75	; 117
    6bba:	31 f4       	brne	.+12     	; 0x6bc8 <vfprintf+0x254>
    6bbc:	23 2d       	mov	r18, r3
    6bbe:	2f 7e       	andi	r18, 0xEF	; 239
    6bc0:	b2 2e       	mov	r11, r18
    6bc2:	2a e0       	ldi	r18, 0x0A	; 10
    6bc4:	30 e0       	ldi	r19, 0x00	; 0
    6bc6:	25 c0       	rjmp	.+74     	; 0x6c12 <vfprintf+0x29e>
    6bc8:	93 2d       	mov	r25, r3
    6bca:	99 7f       	andi	r25, 0xF9	; 249
    6bcc:	b9 2e       	mov	r11, r25
    6bce:	8f 36       	cpi	r24, 0x6F	; 111
    6bd0:	c1 f0       	breq	.+48     	; 0x6c02 <vfprintf+0x28e>
    6bd2:	18 f4       	brcc	.+6      	; 0x6bda <vfprintf+0x266>
    6bd4:	88 35       	cpi	r24, 0x58	; 88
    6bd6:	79 f0       	breq	.+30     	; 0x6bf6 <vfprintf+0x282>
    6bd8:	b5 c0       	rjmp	.+362    	; 0x6d44 <vfprintf+0x3d0>
    6bda:	80 37       	cpi	r24, 0x70	; 112
    6bdc:	19 f0       	breq	.+6      	; 0x6be4 <vfprintf+0x270>
    6bde:	88 37       	cpi	r24, 0x78	; 120
    6be0:	21 f0       	breq	.+8      	; 0x6bea <vfprintf+0x276>
    6be2:	b0 c0       	rjmp	.+352    	; 0x6d44 <vfprintf+0x3d0>
    6be4:	e9 2f       	mov	r30, r25
    6be6:	e0 61       	ori	r30, 0x10	; 16
    6be8:	be 2e       	mov	r11, r30
    6bea:	b4 fe       	sbrs	r11, 4
    6bec:	0d c0       	rjmp	.+26     	; 0x6c08 <vfprintf+0x294>
    6bee:	fb 2d       	mov	r31, r11
    6bf0:	f4 60       	ori	r31, 0x04	; 4
    6bf2:	bf 2e       	mov	r11, r31
    6bf4:	09 c0       	rjmp	.+18     	; 0x6c08 <vfprintf+0x294>
    6bf6:	34 fe       	sbrs	r3, 4
    6bf8:	0a c0       	rjmp	.+20     	; 0x6c0e <vfprintf+0x29a>
    6bfa:	29 2f       	mov	r18, r25
    6bfc:	26 60       	ori	r18, 0x06	; 6
    6bfe:	b2 2e       	mov	r11, r18
    6c00:	06 c0       	rjmp	.+12     	; 0x6c0e <vfprintf+0x29a>
    6c02:	28 e0       	ldi	r18, 0x08	; 8
    6c04:	30 e0       	ldi	r19, 0x00	; 0
    6c06:	05 c0       	rjmp	.+10     	; 0x6c12 <vfprintf+0x29e>
    6c08:	20 e1       	ldi	r18, 0x10	; 16
    6c0a:	30 e0       	ldi	r19, 0x00	; 0
    6c0c:	02 c0       	rjmp	.+4      	; 0x6c12 <vfprintf+0x29e>
    6c0e:	20 e1       	ldi	r18, 0x10	; 16
    6c10:	32 e0       	ldi	r19, 0x02	; 2
    6c12:	f8 01       	movw	r30, r16
    6c14:	b7 fe       	sbrs	r11, 7
    6c16:	07 c0       	rjmp	.+14     	; 0x6c26 <vfprintf+0x2b2>
    6c18:	60 81       	ld	r22, Z
    6c1a:	71 81       	ldd	r23, Z+1	; 0x01
    6c1c:	82 81       	ldd	r24, Z+2	; 0x02
    6c1e:	93 81       	ldd	r25, Z+3	; 0x03
    6c20:	0c 5f       	subi	r16, 0xFC	; 252
    6c22:	1f 4f       	sbci	r17, 0xFF	; 255
    6c24:	06 c0       	rjmp	.+12     	; 0x6c32 <vfprintf+0x2be>
    6c26:	60 81       	ld	r22, Z
    6c28:	71 81       	ldd	r23, Z+1	; 0x01
    6c2a:	80 e0       	ldi	r24, 0x00	; 0
    6c2c:	90 e0       	ldi	r25, 0x00	; 0
    6c2e:	0e 5f       	subi	r16, 0xFE	; 254
    6c30:	1f 4f       	sbci	r17, 0xFF	; 255
    6c32:	a3 01       	movw	r20, r6
    6c34:	0e 94 10 37 	call	0x6e20	; 0x6e20 <__ultoa_invert>
    6c38:	88 2e       	mov	r8, r24
    6c3a:	86 18       	sub	r8, r6
    6c3c:	fb 2d       	mov	r31, r11
    6c3e:	ff 77       	andi	r31, 0x7F	; 127
    6c40:	3f 2e       	mov	r3, r31
    6c42:	36 fe       	sbrs	r3, 6
    6c44:	0d c0       	rjmp	.+26     	; 0x6c60 <vfprintf+0x2ec>
    6c46:	23 2d       	mov	r18, r3
    6c48:	2e 7f       	andi	r18, 0xFE	; 254
    6c4a:	a2 2e       	mov	r10, r18
    6c4c:	89 14       	cp	r8, r9
    6c4e:	58 f4       	brcc	.+22     	; 0x6c66 <vfprintf+0x2f2>
    6c50:	34 fe       	sbrs	r3, 4
    6c52:	0b c0       	rjmp	.+22     	; 0x6c6a <vfprintf+0x2f6>
    6c54:	32 fc       	sbrc	r3, 2
    6c56:	09 c0       	rjmp	.+18     	; 0x6c6a <vfprintf+0x2f6>
    6c58:	83 2d       	mov	r24, r3
    6c5a:	8e 7e       	andi	r24, 0xEE	; 238
    6c5c:	a8 2e       	mov	r10, r24
    6c5e:	05 c0       	rjmp	.+10     	; 0x6c6a <vfprintf+0x2f6>
    6c60:	b8 2c       	mov	r11, r8
    6c62:	a3 2c       	mov	r10, r3
    6c64:	03 c0       	rjmp	.+6      	; 0x6c6c <vfprintf+0x2f8>
    6c66:	b8 2c       	mov	r11, r8
    6c68:	01 c0       	rjmp	.+2      	; 0x6c6c <vfprintf+0x2f8>
    6c6a:	b9 2c       	mov	r11, r9
    6c6c:	a4 fe       	sbrs	r10, 4
    6c6e:	0f c0       	rjmp	.+30     	; 0x6c8e <vfprintf+0x31a>
    6c70:	fe 01       	movw	r30, r28
    6c72:	e8 0d       	add	r30, r8
    6c74:	f1 1d       	adc	r31, r1
    6c76:	80 81       	ld	r24, Z
    6c78:	80 33       	cpi	r24, 0x30	; 48
    6c7a:	21 f4       	brne	.+8      	; 0x6c84 <vfprintf+0x310>
    6c7c:	9a 2d       	mov	r25, r10
    6c7e:	99 7e       	andi	r25, 0xE9	; 233
    6c80:	a9 2e       	mov	r10, r25
    6c82:	09 c0       	rjmp	.+18     	; 0x6c96 <vfprintf+0x322>
    6c84:	a2 fe       	sbrs	r10, 2
    6c86:	06 c0       	rjmp	.+12     	; 0x6c94 <vfprintf+0x320>
    6c88:	b3 94       	inc	r11
    6c8a:	b3 94       	inc	r11
    6c8c:	04 c0       	rjmp	.+8      	; 0x6c96 <vfprintf+0x322>
    6c8e:	8a 2d       	mov	r24, r10
    6c90:	86 78       	andi	r24, 0x86	; 134
    6c92:	09 f0       	breq	.+2      	; 0x6c96 <vfprintf+0x322>
    6c94:	b3 94       	inc	r11
    6c96:	a3 fc       	sbrc	r10, 3
    6c98:	11 c0       	rjmp	.+34     	; 0x6cbc <vfprintf+0x348>
    6c9a:	a0 fe       	sbrs	r10, 0
    6c9c:	06 c0       	rjmp	.+12     	; 0x6caa <vfprintf+0x336>
    6c9e:	b2 14       	cp	r11, r2
    6ca0:	88 f4       	brcc	.+34     	; 0x6cc4 <vfprintf+0x350>
    6ca2:	28 0c       	add	r2, r8
    6ca4:	92 2c       	mov	r9, r2
    6ca6:	9b 18       	sub	r9, r11
    6ca8:	0e c0       	rjmp	.+28     	; 0x6cc6 <vfprintf+0x352>
    6caa:	b2 14       	cp	r11, r2
    6cac:	60 f4       	brcc	.+24     	; 0x6cc6 <vfprintf+0x352>
    6cae:	b6 01       	movw	r22, r12
    6cb0:	80 e2       	ldi	r24, 0x20	; 32
    6cb2:	90 e0       	ldi	r25, 0x00	; 0
    6cb4:	0e 94 d4 36 	call	0x6da8	; 0x6da8 <fputc>
    6cb8:	b3 94       	inc	r11
    6cba:	f7 cf       	rjmp	.-18     	; 0x6caa <vfprintf+0x336>
    6cbc:	b2 14       	cp	r11, r2
    6cbe:	18 f4       	brcc	.+6      	; 0x6cc6 <vfprintf+0x352>
    6cc0:	2b 18       	sub	r2, r11
    6cc2:	02 c0       	rjmp	.+4      	; 0x6cc8 <vfprintf+0x354>
    6cc4:	98 2c       	mov	r9, r8
    6cc6:	21 2c       	mov	r2, r1
    6cc8:	a4 fe       	sbrs	r10, 4
    6cca:	10 c0       	rjmp	.+32     	; 0x6cec <vfprintf+0x378>
    6ccc:	b6 01       	movw	r22, r12
    6cce:	80 e3       	ldi	r24, 0x30	; 48
    6cd0:	90 e0       	ldi	r25, 0x00	; 0
    6cd2:	0e 94 d4 36 	call	0x6da8	; 0x6da8 <fputc>
    6cd6:	a2 fe       	sbrs	r10, 2
    6cd8:	17 c0       	rjmp	.+46     	; 0x6d08 <vfprintf+0x394>
    6cda:	a1 fc       	sbrc	r10, 1
    6cdc:	03 c0       	rjmp	.+6      	; 0x6ce4 <vfprintf+0x370>
    6cde:	88 e7       	ldi	r24, 0x78	; 120
    6ce0:	90 e0       	ldi	r25, 0x00	; 0
    6ce2:	02 c0       	rjmp	.+4      	; 0x6ce8 <vfprintf+0x374>
    6ce4:	88 e5       	ldi	r24, 0x58	; 88
    6ce6:	90 e0       	ldi	r25, 0x00	; 0
    6ce8:	b6 01       	movw	r22, r12
    6cea:	0c c0       	rjmp	.+24     	; 0x6d04 <vfprintf+0x390>
    6cec:	8a 2d       	mov	r24, r10
    6cee:	86 78       	andi	r24, 0x86	; 134
    6cf0:	59 f0       	breq	.+22     	; 0x6d08 <vfprintf+0x394>
    6cf2:	a1 fe       	sbrs	r10, 1
    6cf4:	02 c0       	rjmp	.+4      	; 0x6cfa <vfprintf+0x386>
    6cf6:	8b e2       	ldi	r24, 0x2B	; 43
    6cf8:	01 c0       	rjmp	.+2      	; 0x6cfc <vfprintf+0x388>
    6cfa:	80 e2       	ldi	r24, 0x20	; 32
    6cfc:	a7 fc       	sbrc	r10, 7
    6cfe:	8d e2       	ldi	r24, 0x2D	; 45
    6d00:	b6 01       	movw	r22, r12
    6d02:	90 e0       	ldi	r25, 0x00	; 0
    6d04:	0e 94 d4 36 	call	0x6da8	; 0x6da8 <fputc>
    6d08:	89 14       	cp	r8, r9
    6d0a:	38 f4       	brcc	.+14     	; 0x6d1a <vfprintf+0x3a6>
    6d0c:	b6 01       	movw	r22, r12
    6d0e:	80 e3       	ldi	r24, 0x30	; 48
    6d10:	90 e0       	ldi	r25, 0x00	; 0
    6d12:	0e 94 d4 36 	call	0x6da8	; 0x6da8 <fputc>
    6d16:	9a 94       	dec	r9
    6d18:	f7 cf       	rjmp	.-18     	; 0x6d08 <vfprintf+0x394>
    6d1a:	8a 94       	dec	r8
    6d1c:	f3 01       	movw	r30, r6
    6d1e:	e8 0d       	add	r30, r8
    6d20:	f1 1d       	adc	r31, r1
    6d22:	80 81       	ld	r24, Z
    6d24:	b6 01       	movw	r22, r12
    6d26:	90 e0       	ldi	r25, 0x00	; 0
    6d28:	0e 94 d4 36 	call	0x6da8	; 0x6da8 <fputc>
    6d2c:	81 10       	cpse	r8, r1
    6d2e:	f5 cf       	rjmp	.-22     	; 0x6d1a <vfprintf+0x3a6>
    6d30:	22 20       	and	r2, r2
    6d32:	09 f4       	brne	.+2      	; 0x6d36 <vfprintf+0x3c2>
    6d34:	42 ce       	rjmp	.-892    	; 0x69ba <vfprintf+0x46>
    6d36:	b6 01       	movw	r22, r12
    6d38:	80 e2       	ldi	r24, 0x20	; 32
    6d3a:	90 e0       	ldi	r25, 0x00	; 0
    6d3c:	0e 94 d4 36 	call	0x6da8	; 0x6da8 <fputc>
    6d40:	2a 94       	dec	r2
    6d42:	f6 cf       	rjmp	.-20     	; 0x6d30 <vfprintf+0x3bc>
    6d44:	f6 01       	movw	r30, r12
    6d46:	86 81       	ldd	r24, Z+6	; 0x06
    6d48:	97 81       	ldd	r25, Z+7	; 0x07
    6d4a:	02 c0       	rjmp	.+4      	; 0x6d50 <vfprintf+0x3dc>
    6d4c:	8f ef       	ldi	r24, 0xFF	; 255
    6d4e:	9f ef       	ldi	r25, 0xFF	; 255
    6d50:	2b 96       	adiw	r28, 0x0b	; 11
    6d52:	cd bf       	out	0x3d, r28	; 61
    6d54:	de bf       	out	0x3e, r29	; 62
    6d56:	df 91       	pop	r29
    6d58:	cf 91       	pop	r28
    6d5a:	1f 91       	pop	r17
    6d5c:	0f 91       	pop	r16
    6d5e:	ff 90       	pop	r15
    6d60:	ef 90       	pop	r14
    6d62:	df 90       	pop	r13
    6d64:	cf 90       	pop	r12
    6d66:	bf 90       	pop	r11
    6d68:	af 90       	pop	r10
    6d6a:	9f 90       	pop	r9
    6d6c:	8f 90       	pop	r8
    6d6e:	7f 90       	pop	r7
    6d70:	6f 90       	pop	r6
    6d72:	5f 90       	pop	r5
    6d74:	4f 90       	pop	r4
    6d76:	3f 90       	pop	r3
    6d78:	2f 90       	pop	r2
    6d7a:	08 95       	ret

00006d7c <strnlen_P>:
    6d7c:	fc 01       	movw	r30, r24
    6d7e:	05 90       	lpm	r0, Z+
    6d80:	61 50       	subi	r22, 0x01	; 1
    6d82:	70 40       	sbci	r23, 0x00	; 0
    6d84:	01 10       	cpse	r0, r1
    6d86:	d8 f7       	brcc	.-10     	; 0x6d7e <strnlen_P+0x2>
    6d88:	80 95       	com	r24
    6d8a:	90 95       	com	r25
    6d8c:	8e 0f       	add	r24, r30
    6d8e:	9f 1f       	adc	r25, r31
    6d90:	08 95       	ret

00006d92 <strnlen>:
    6d92:	fc 01       	movw	r30, r24
    6d94:	61 50       	subi	r22, 0x01	; 1
    6d96:	70 40       	sbci	r23, 0x00	; 0
    6d98:	01 90       	ld	r0, Z+
    6d9a:	01 10       	cpse	r0, r1
    6d9c:	d8 f7       	brcc	.-10     	; 0x6d94 <strnlen+0x2>
    6d9e:	80 95       	com	r24
    6da0:	90 95       	com	r25
    6da2:	8e 0f       	add	r24, r30
    6da4:	9f 1f       	adc	r25, r31
    6da6:	08 95       	ret

00006da8 <fputc>:
    6da8:	0f 93       	push	r16
    6daa:	1f 93       	push	r17
    6dac:	cf 93       	push	r28
    6dae:	df 93       	push	r29
    6db0:	fb 01       	movw	r30, r22
    6db2:	23 81       	ldd	r18, Z+3	; 0x03
    6db4:	21 fd       	sbrc	r18, 1
    6db6:	03 c0       	rjmp	.+6      	; 0x6dbe <fputc+0x16>
    6db8:	8f ef       	ldi	r24, 0xFF	; 255
    6dba:	9f ef       	ldi	r25, 0xFF	; 255
    6dbc:	2c c0       	rjmp	.+88     	; 0x6e16 <fputc+0x6e>
    6dbe:	22 ff       	sbrs	r18, 2
    6dc0:	16 c0       	rjmp	.+44     	; 0x6dee <fputc+0x46>
    6dc2:	46 81       	ldd	r20, Z+6	; 0x06
    6dc4:	57 81       	ldd	r21, Z+7	; 0x07
    6dc6:	24 81       	ldd	r18, Z+4	; 0x04
    6dc8:	35 81       	ldd	r19, Z+5	; 0x05
    6dca:	42 17       	cp	r20, r18
    6dcc:	53 07       	cpc	r21, r19
    6dce:	44 f4       	brge	.+16     	; 0x6de0 <fputc+0x38>
    6dd0:	a0 81       	ld	r26, Z
    6dd2:	b1 81       	ldd	r27, Z+1	; 0x01
    6dd4:	9d 01       	movw	r18, r26
    6dd6:	2f 5f       	subi	r18, 0xFF	; 255
    6dd8:	3f 4f       	sbci	r19, 0xFF	; 255
    6dda:	20 83       	st	Z, r18
    6ddc:	31 83       	std	Z+1, r19	; 0x01
    6dde:	8c 93       	st	X, r24
    6de0:	26 81       	ldd	r18, Z+6	; 0x06
    6de2:	37 81       	ldd	r19, Z+7	; 0x07
    6de4:	2f 5f       	subi	r18, 0xFF	; 255
    6de6:	3f 4f       	sbci	r19, 0xFF	; 255
    6de8:	26 83       	std	Z+6, r18	; 0x06
    6dea:	37 83       	std	Z+7, r19	; 0x07
    6dec:	14 c0       	rjmp	.+40     	; 0x6e16 <fputc+0x6e>
    6dee:	8b 01       	movw	r16, r22
    6df0:	ec 01       	movw	r28, r24
    6df2:	fb 01       	movw	r30, r22
    6df4:	00 84       	ldd	r0, Z+8	; 0x08
    6df6:	f1 85       	ldd	r31, Z+9	; 0x09
    6df8:	e0 2d       	mov	r30, r0
    6dfa:	09 95       	icall
    6dfc:	89 2b       	or	r24, r25
    6dfe:	e1 f6       	brne	.-72     	; 0x6db8 <fputc+0x10>
    6e00:	d8 01       	movw	r26, r16
    6e02:	16 96       	adiw	r26, 0x06	; 6
    6e04:	8d 91       	ld	r24, X+
    6e06:	9c 91       	ld	r25, X
    6e08:	17 97       	sbiw	r26, 0x07	; 7
    6e0a:	01 96       	adiw	r24, 0x01	; 1
    6e0c:	16 96       	adiw	r26, 0x06	; 6
    6e0e:	8d 93       	st	X+, r24
    6e10:	9c 93       	st	X, r25
    6e12:	17 97       	sbiw	r26, 0x07	; 7
    6e14:	ce 01       	movw	r24, r28
    6e16:	df 91       	pop	r29
    6e18:	cf 91       	pop	r28
    6e1a:	1f 91       	pop	r17
    6e1c:	0f 91       	pop	r16
    6e1e:	08 95       	ret

00006e20 <__ultoa_invert>:
    6e20:	fa 01       	movw	r30, r20
    6e22:	aa 27       	eor	r26, r26
    6e24:	28 30       	cpi	r18, 0x08	; 8
    6e26:	51 f1       	breq	.+84     	; 0x6e7c <__ultoa_invert+0x5c>
    6e28:	20 31       	cpi	r18, 0x10	; 16
    6e2a:	81 f1       	breq	.+96     	; 0x6e8c <__ultoa_invert+0x6c>
    6e2c:	e8 94       	clt
    6e2e:	6f 93       	push	r22
    6e30:	6e 7f       	andi	r22, 0xFE	; 254
    6e32:	6e 5f       	subi	r22, 0xFE	; 254
    6e34:	7f 4f       	sbci	r23, 0xFF	; 255
    6e36:	8f 4f       	sbci	r24, 0xFF	; 255
    6e38:	9f 4f       	sbci	r25, 0xFF	; 255
    6e3a:	af 4f       	sbci	r26, 0xFF	; 255
    6e3c:	b1 e0       	ldi	r27, 0x01	; 1
    6e3e:	3e d0       	rcall	.+124    	; 0x6ebc <__ultoa_invert+0x9c>
    6e40:	b4 e0       	ldi	r27, 0x04	; 4
    6e42:	3c d0       	rcall	.+120    	; 0x6ebc <__ultoa_invert+0x9c>
    6e44:	67 0f       	add	r22, r23
    6e46:	78 1f       	adc	r23, r24
    6e48:	89 1f       	adc	r24, r25
    6e4a:	9a 1f       	adc	r25, r26
    6e4c:	a1 1d       	adc	r26, r1
    6e4e:	68 0f       	add	r22, r24
    6e50:	79 1f       	adc	r23, r25
    6e52:	8a 1f       	adc	r24, r26
    6e54:	91 1d       	adc	r25, r1
    6e56:	a1 1d       	adc	r26, r1
    6e58:	6a 0f       	add	r22, r26
    6e5a:	71 1d       	adc	r23, r1
    6e5c:	81 1d       	adc	r24, r1
    6e5e:	91 1d       	adc	r25, r1
    6e60:	a1 1d       	adc	r26, r1
    6e62:	20 d0       	rcall	.+64     	; 0x6ea4 <__ultoa_invert+0x84>
    6e64:	09 f4       	brne	.+2      	; 0x6e68 <__ultoa_invert+0x48>
    6e66:	68 94       	set
    6e68:	3f 91       	pop	r19
    6e6a:	2a e0       	ldi	r18, 0x0A	; 10
    6e6c:	26 9f       	mul	r18, r22
    6e6e:	11 24       	eor	r1, r1
    6e70:	30 19       	sub	r19, r0
    6e72:	30 5d       	subi	r19, 0xD0	; 208
    6e74:	31 93       	st	Z+, r19
    6e76:	de f6       	brtc	.-74     	; 0x6e2e <__ultoa_invert+0xe>
    6e78:	cf 01       	movw	r24, r30
    6e7a:	08 95       	ret
    6e7c:	46 2f       	mov	r20, r22
    6e7e:	47 70       	andi	r20, 0x07	; 7
    6e80:	40 5d       	subi	r20, 0xD0	; 208
    6e82:	41 93       	st	Z+, r20
    6e84:	b3 e0       	ldi	r27, 0x03	; 3
    6e86:	0f d0       	rcall	.+30     	; 0x6ea6 <__ultoa_invert+0x86>
    6e88:	c9 f7       	brne	.-14     	; 0x6e7c <__ultoa_invert+0x5c>
    6e8a:	f6 cf       	rjmp	.-20     	; 0x6e78 <__ultoa_invert+0x58>
    6e8c:	46 2f       	mov	r20, r22
    6e8e:	4f 70       	andi	r20, 0x0F	; 15
    6e90:	40 5d       	subi	r20, 0xD0	; 208
    6e92:	4a 33       	cpi	r20, 0x3A	; 58
    6e94:	18 f0       	brcs	.+6      	; 0x6e9c <__ultoa_invert+0x7c>
    6e96:	49 5d       	subi	r20, 0xD9	; 217
    6e98:	31 fd       	sbrc	r19, 1
    6e9a:	40 52       	subi	r20, 0x20	; 32
    6e9c:	41 93       	st	Z+, r20
    6e9e:	02 d0       	rcall	.+4      	; 0x6ea4 <__ultoa_invert+0x84>
    6ea0:	a9 f7       	brne	.-22     	; 0x6e8c <__ultoa_invert+0x6c>
    6ea2:	ea cf       	rjmp	.-44     	; 0x6e78 <__ultoa_invert+0x58>
    6ea4:	b4 e0       	ldi	r27, 0x04	; 4
    6ea6:	a6 95       	lsr	r26
    6ea8:	97 95       	ror	r25
    6eaa:	87 95       	ror	r24
    6eac:	77 95       	ror	r23
    6eae:	67 95       	ror	r22
    6eb0:	ba 95       	dec	r27
    6eb2:	c9 f7       	brne	.-14     	; 0x6ea6 <__ultoa_invert+0x86>
    6eb4:	00 97       	sbiw	r24, 0x00	; 0
    6eb6:	61 05       	cpc	r22, r1
    6eb8:	71 05       	cpc	r23, r1
    6eba:	08 95       	ret
    6ebc:	9b 01       	movw	r18, r22
    6ebe:	ac 01       	movw	r20, r24
    6ec0:	0a 2e       	mov	r0, r26
    6ec2:	06 94       	lsr	r0
    6ec4:	57 95       	ror	r21
    6ec6:	47 95       	ror	r20
    6ec8:	37 95       	ror	r19
    6eca:	27 95       	ror	r18
    6ecc:	ba 95       	dec	r27
    6ece:	c9 f7       	brne	.-14     	; 0x6ec2 <__ultoa_invert+0xa2>
    6ed0:	62 0f       	add	r22, r18
    6ed2:	73 1f       	adc	r23, r19
    6ed4:	84 1f       	adc	r24, r20
    6ed6:	95 1f       	adc	r25, r21
    6ed8:	a0 1d       	adc	r26, r0
    6eda:	08 95       	ret

00006edc <eeprom_read_byte>:
    6edc:	03 d0       	rcall	.+6      	; 0x6ee4 <eeprom_mapen>
    6ede:	80 81       	ld	r24, Z
    6ee0:	99 27       	eor	r25, r25
    6ee2:	08 95       	ret

00006ee4 <eeprom_mapen>:
    6ee4:	fc 01       	movw	r30, r24
    6ee6:	e0 50       	subi	r30, 0x00	; 0
    6ee8:	fc 4e       	sbci	r31, 0xEC	; 236
    6eea:	08 95       	ret

00006eec <eeprom_read_dword>:
    6eec:	0e 94 72 37 	call	0x6ee4	; 0x6ee4 <eeprom_mapen>
    6ef0:	60 81       	ld	r22, Z
    6ef2:	71 81       	ldd	r23, Z+1	; 0x01
    6ef4:	82 81       	ldd	r24, Z+2	; 0x02
    6ef6:	93 81       	ldd	r25, Z+3	; 0x03
    6ef8:	08 95       	ret

00006efa <eeprom_read_word>:
    6efa:	0e 94 72 37 	call	0x6ee4	; 0x6ee4 <eeprom_mapen>
    6efe:	80 81       	ld	r24, Z
    6f00:	91 81       	ldd	r25, Z+1	; 0x01
    6f02:	08 95       	ret

00006f04 <eeprom_update_dword>:
    6f04:	03 96       	adiw	r24, 0x03	; 3
    6f06:	27 2f       	mov	r18, r23
    6f08:	0e 94 b3 37 	call	0x6f66	; 0x6f66 <eeprom_update_r18>
    6f0c:	0e 94 b2 37 	call	0x6f64	; 0x6f64 <eeprom_update_byte>
    6f10:	25 2f       	mov	r18, r21
    6f12:	0e 94 b3 37 	call	0x6f66	; 0x6f66 <eeprom_update_r18>
    6f16:	24 2f       	mov	r18, r20
    6f18:	0c 94 b3 37 	jmp	0x6f66	; 0x6f66 <eeprom_update_r18>

00006f1c <eeprom_update_word>:
    6f1c:	01 96       	adiw	r24, 0x01	; 1
    6f1e:	27 2f       	mov	r18, r23
    6f20:	0e 94 b3 37 	call	0x6f66	; 0x6f66 <eeprom_update_r18>
    6f24:	0c 94 b2 37 	jmp	0x6f64	; 0x6f64 <eeprom_update_byte>

00006f28 <eeprom_write_block>:
    6f28:	dc 01       	movw	r26, r24
    6f2a:	cb 01       	movw	r24, r22
    6f2c:	03 c0       	rjmp	.+6      	; 0x6f34 <eeprom_write_block+0xc>
    6f2e:	2d 91       	ld	r18, X+
    6f30:	0e 94 9f 37 	call	0x6f3e	; 0x6f3e <eeprom_write_r18>
    6f34:	41 50       	subi	r20, 0x01	; 1
    6f36:	50 40       	sbci	r21, 0x00	; 0
    6f38:	d0 f7       	brcc	.-12     	; 0x6f2e <eeprom_write_block+0x6>
    6f3a:	08 95       	ret

00006f3c <eeprom_write_byte>:
    6f3c:	26 2f       	mov	r18, r22

00006f3e <eeprom_write_r18>:
    6f3e:	af 93       	push	r26
    6f40:	bf 93       	push	r27
    6f42:	e0 e0       	ldi	r30, 0x00	; 0
    6f44:	f0 e1       	ldi	r31, 0x10	; 16
    6f46:	32 81       	ldd	r19, Z+2	; 0x02
    6f48:	31 fd       	sbrc	r19, 1
    6f4a:	fd cf       	rjmp	.-6      	; 0x6f46 <eeprom_write_r18+0x8>
    6f4c:	dc 01       	movw	r26, r24
    6f4e:	a0 50       	subi	r26, 0x00	; 0
    6f50:	bc 4e       	sbci	r27, 0xEC	; 236
    6f52:	2c 93       	st	X, r18
    6f54:	2d e9       	ldi	r18, 0x9D	; 157
    6f56:	24 bf       	out	0x34, r18	; 52
    6f58:	23 e0       	ldi	r18, 0x03	; 3
    6f5a:	20 83       	st	Z, r18
    6f5c:	01 96       	adiw	r24, 0x01	; 1
    6f5e:	bf 91       	pop	r27
    6f60:	af 91       	pop	r26
    6f62:	08 95       	ret

00006f64 <eeprom_update_byte>:
    6f64:	26 2f       	mov	r18, r22

00006f66 <eeprom_update_r18>:
    6f66:	0e 94 72 37 	call	0x6ee4	; 0x6ee4 <eeprom_mapen>
    6f6a:	00 80       	ld	r0, Z
    6f6c:	02 16       	cp	r0, r18
    6f6e:	19 f0       	breq	.+6      	; 0x6f76 <eeprom_update_r18+0x10>
    6f70:	0e 94 9f 37 	call	0x6f3e	; 0x6f3e <eeprom_write_r18>
    6f74:	01 97       	sbiw	r24, 0x01	; 1
    6f76:	01 97       	sbiw	r24, 0x01	; 1
    6f78:	08 95       	ret

00006f7a <__do_global_dtors>:
    6f7a:	11 e0       	ldi	r17, 0x01	; 1
    6f7c:	ce ef       	ldi	r28, 0xFE	; 254
    6f7e:	d0 e0       	ldi	r29, 0x00	; 0
    6f80:	04 c0       	rjmp	.+8      	; 0x6f8a <__do_global_dtors+0x10>
    6f82:	fe 01       	movw	r30, r28
    6f84:	0e 94 aa 32 	call	0x6554	; 0x6554 <__tablejump2__>
    6f88:	21 96       	adiw	r28, 0x01	; 1
    6f8a:	c0 30       	cpi	r28, 0x00	; 0
    6f8c:	d1 07       	cpc	r29, r17
    6f8e:	c9 f7       	brne	.-14     	; 0x6f82 <__do_global_dtors+0x8>
    6f90:	f8 94       	cli

00006f92 <__stop_program>:
    6f92:	ff cf       	rjmp	.-2      	; 0x6f92 <__stop_program>
