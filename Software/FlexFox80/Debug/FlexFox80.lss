
FlexFox80.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000c4  00804000  00004c5c  00004d10  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00004c5c  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000256  008040c4  008040c4  00004dd4  2**0
                  ALLOC
  3 .eeprom       0000001f  00810000  00810000  00004dd4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      0000005c  00000000  00000000  00004df3  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00004e50  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 00000720  00000000  00000000  00004e90  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000c69c  00000000  00000000  000055b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00004e7c  00000000  00000000  00011c4c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00004e9a  00000000  00000000  00016ac8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000012bc  00000000  00000000  0001b964  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00004f63  00000000  00000000  0001cc20  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00005c59  00000000  00000000  00021b83  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 000005f0  00000000  00000000  000277dc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__dtors_end>
       4:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
       8:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
       c:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      10:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      14:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      18:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      1c:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      20:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      24:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      28:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      2c:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      30:	0c 94 fb 02 	jmp	0x5f6	; 0x5f6 <__vector_12>
      34:	0c 94 17 1c 	jmp	0x382e	; 0x382e <__vector_13>
      38:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      3c:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      40:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      44:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      48:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      4c:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      50:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      54:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      58:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      5c:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      60:	0c 94 eb 0b 	jmp	0x17d6	; 0x17d6 <__vector_24>
      64:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      68:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      6c:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      70:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      74:	0c 94 29 0c 	jmp	0x1852	; 0x1852 <__vector_29>
      78:	0c 94 42 01 	jmp	0x284	; 0x284 <__vector_30>
      7c:	0c 94 55 01 	jmp	0x2aa	; 0x2aa <__vector_31>
      80:	0c 94 7c 02 	jmp	0x4f8	; 0x4f8 <__vector_32>
      84:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      88:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      8c:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      90:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      94:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      98:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      9c:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      a0:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      a4:	0c 94 cd 02 	jmp	0x59a	; 0x59a <__vector_41>
      a8:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      ac:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      b0:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      b4:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      b8:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      bc:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      c0:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      c4:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      c8:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      cc:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      d0:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      d4:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      d8:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      dc:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      e0:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      e4:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      e8:	45 14       	cp	r4, r5
      ea:	09 14       	cp	r0, r9
      ec:	35 14       	cp	r3, r5
      ee:	4d 14       	cp	r4, r13
      f0:	39 14       	cp	r3, r9
      f2:	4d 14       	cp	r4, r13
      f4:	19 14       	cp	r1, r9
      f6:	05 14       	cp	r0, r5
      f8:	11 14       	cp	r1, r1
      fa:	15 14       	cp	r1, r5
      fc:	4d 14       	cp	r4, r13
      fe:	29 14       	cp	r2, r9
     100:	fd 13       	cpse	r31, r29
     102:	2d 14       	cp	r2, r13
     104:	f9 13       	cpse	r31, r25
     106:	0d 14       	cp	r0, r13
     108:	d1 13       	cpse	r29, r17
     10a:	d5 13       	cpse	r29, r21
     10c:	d9 13       	cpse	r29, r25
     10e:	dd 13       	cpse	r29, r29
     110:	e1 13       	cpse	r30, r17
     112:	e5 13       	cpse	r30, r21
     114:	e9 13       	cpse	r30, r25
     116:	ed 13       	cpse	r30, r29
     118:	f1 13       	cpse	r31, r17
     11a:	f5 13       	cpse	r31, r21
     11c:	1d 14       	cp	r1, r13
     11e:	21 14       	cp	r2, r1
     120:	49 14       	cp	r4, r9
     122:	25 14       	cp	r2, r5
     124:	4d 14       	cp	r4, r13
     126:	01 14       	cp	r0, r1
     128:	3d 14       	cp	r3, r13
     12a:	69 13       	cpse	r22, r25
     12c:	6d 13       	cpse	r22, r29
     12e:	71 13       	cpse	r23, r17
     130:	75 13       	cpse	r23, r21
     132:	79 13       	cpse	r23, r25
     134:	7d 13       	cpse	r23, r29
     136:	81 13       	cpse	r24, r17
     138:	85 13       	cpse	r24, r21
     13a:	89 13       	cpse	r24, r25
     13c:	8d 13       	cpse	r24, r29
     13e:	91 13       	cpse	r25, r17
     140:	95 13       	cpse	r25, r21
     142:	99 13       	cpse	r25, r25
     144:	9d 13       	cpse	r25, r29
     146:	a1 13       	cpse	r26, r17
     148:	a5 13       	cpse	r26, r21
     14a:	a9 13       	cpse	r26, r25
     14c:	ad 13       	cpse	r26, r29
     14e:	b1 13       	cpse	r27, r17
     150:	b5 13       	cpse	r27, r21
     152:	b9 13       	cpse	r27, r25
     154:	bd 13       	cpse	r27, r29
     156:	c1 13       	cpse	r28, r17
     158:	c5 13       	cpse	r28, r21
     15a:	c9 13       	cpse	r28, r25
     15c:	cd 13       	cpse	r28, r29
     15e:	4d 14       	cp	r4, r13
     160:	4d 14       	cp	r4, r13
     162:	4d 14       	cp	r4, r13
     164:	4d 14       	cp	r4, r13
     166:	31 14       	cp	r3, r1
     168:	4d 14       	cp	r4, r13
     16a:	4d 14       	cp	r4, r13
     16c:	4d 14       	cp	r4, r13
     16e:	4d 14       	cp	r4, r13
     170:	4d 14       	cp	r4, r13
     172:	4d 14       	cp	r4, r13
     174:	4d 14       	cp	r4, r13
     176:	4d 14       	cp	r4, r13
     178:	4d 14       	cp	r4, r13
     17a:	4d 14       	cp	r4, r13
     17c:	4d 14       	cp	r4, r13
     17e:	4d 14       	cp	r4, r13
     180:	4d 14       	cp	r4, r13
     182:	4d 14       	cp	r4, r13
     184:	4d 14       	cp	r4, r13
     186:	4d 14       	cp	r4, r13
     188:	4d 14       	cp	r4, r13
     18a:	4d 14       	cp	r4, r13
     18c:	4d 14       	cp	r4, r13
     18e:	4d 14       	cp	r4, r13
     190:	4d 14       	cp	r4, r13
     192:	4d 14       	cp	r4, r13
     194:	4d 14       	cp	r4, r13
     196:	4d 14       	cp	r4, r13
     198:	4d 14       	cp	r4, r13
     19a:	4d 14       	cp	r4, r13
     19c:	4d 14       	cp	r4, r13
     19e:	4d 14       	cp	r4, r13
     1a0:	41 14       	cp	r4, r1

000001a2 <__ctors_start>:
     1a2:	1b 0c       	add	r1, r11

000001a4 <__ctors_end>:
     1a4:	22 0c       	add	r2, r2

000001a6 <__dtors_end>:
     1a6:	11 24       	eor	r1, r1
     1a8:	1f be       	out	0x3f, r1	; 63
     1aa:	cf ef       	ldi	r28, 0xFF	; 255
     1ac:	cd bf       	out	0x3d, r28	; 61
     1ae:	df e7       	ldi	r29, 0x7F	; 127
     1b0:	de bf       	out	0x3e, r29	; 62

000001b2 <__do_copy_data>:
     1b2:	10 e4       	ldi	r17, 0x40	; 64
     1b4:	a0 e0       	ldi	r26, 0x00	; 0
     1b6:	b0 e4       	ldi	r27, 0x40	; 64
     1b8:	ec e5       	ldi	r30, 0x5C	; 92
     1ba:	fc e4       	ldi	r31, 0x4C	; 76
     1bc:	00 e0       	ldi	r16, 0x00	; 0
     1be:	0b bf       	out	0x3b, r16	; 59
     1c0:	02 c0       	rjmp	.+4      	; 0x1c6 <__do_copy_data+0x14>
     1c2:	07 90       	elpm	r0, Z+
     1c4:	0d 92       	st	X+, r0
     1c6:	a4 3c       	cpi	r26, 0xC4	; 196
     1c8:	b1 07       	cpc	r27, r17
     1ca:	d9 f7       	brne	.-10     	; 0x1c2 <__do_copy_data+0x10>

000001cc <__do_clear_bss>:
     1cc:	23 e4       	ldi	r18, 0x43	; 67
     1ce:	a4 ec       	ldi	r26, 0xC4	; 196
     1d0:	b0 e4       	ldi	r27, 0x40	; 64
     1d2:	01 c0       	rjmp	.+2      	; 0x1d6 <.do_clear_bss_start>

000001d4 <.do_clear_bss_loop>:
     1d4:	1d 92       	st	X+, r1

000001d6 <.do_clear_bss_start>:
     1d6:	aa 31       	cpi	r26, 0x1A	; 26
     1d8:	b2 07       	cpc	r27, r18
     1da:	e1 f7       	brne	.-8      	; 0x1d4 <.do_clear_bss_loop>

000001dc <__do_global_ctors>:
     1dc:	10 e0       	ldi	r17, 0x00	; 0
     1de:	c2 ed       	ldi	r28, 0xD2	; 210
     1e0:	d0 e0       	ldi	r29, 0x00	; 0
     1e2:	04 c0       	rjmp	.+8      	; 0x1ec <__do_global_ctors+0x10>
     1e4:	21 97       	sbiw	r28, 0x01	; 1
     1e6:	fe 01       	movw	r30, r28
     1e8:	0e 94 35 21 	call	0x426a	; 0x426a <__tablejump2__>
     1ec:	c1 3d       	cpi	r28, 0xD1	; 209
     1ee:	d1 07       	cpc	r29, r17
     1f0:	c9 f7       	brne	.-14     	; 0x1e4 <__do_global_ctors+0x8>
     1f2:	0e 94 68 04 	call	0x8d0	; 0x8d0 <main>
     1f6:	0c 94 21 26 	jmp	0x4c42	; 0x4c42 <__do_global_dtors>

000001fa <__bad_interrupt>:
     1fa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001fe <month_length>:
     1fe:	62 30       	cpi	r22, 0x02	; 2
     200:	21 f4       	brne	.+8      	; 0x20a <__EEPROM_REGION_LENGTH__+0xa>
     202:	0e 94 2b 01 	call	0x256	; 0x256 <is_leap_year>
     206:	84 5e       	subi	r24, 0xE4	; 228
     208:	08 95       	ret
     20a:	68 30       	cpi	r22, 0x08	; 8
     20c:	08 f0       	brcs	.+2      	; 0x210 <__EEPROM_REGION_LENGTH__+0x10>
     20e:	6f 5f       	subi	r22, 0xFF	; 255
     210:	61 70       	andi	r22, 0x01	; 1
     212:	8e e1       	ldi	r24, 0x1E	; 30
     214:	86 0f       	add	r24, r22
     216:	08 95       	ret

00000218 <set_system_time>:
     218:	0f b6       	in	r0, 0x3f	; 63
     21a:	f8 94       	cli
     21c:	60 93 16 43 	sts	0x4316, r22	; 0x804316 <__system_time>
     220:	70 93 17 43 	sts	0x4317, r23	; 0x804317 <__system_time+0x1>
     224:	80 93 18 43 	sts	0x4318, r24	; 0x804318 <__system_time+0x2>
     228:	90 93 19 43 	sts	0x4319, r25	; 0x804319 <__system_time+0x3>
     22c:	0f be       	out	0x3f, r0	; 63
     22e:	08 95       	ret

00000230 <time>:
     230:	fc 01       	movw	r30, r24
     232:	0f b6       	in	r0, 0x3f	; 63
     234:	f8 94       	cli
     236:	60 91 16 43 	lds	r22, 0x4316	; 0x804316 <__system_time>
     23a:	70 91 17 43 	lds	r23, 0x4317	; 0x804317 <__system_time+0x1>
     23e:	80 91 18 43 	lds	r24, 0x4318	; 0x804318 <__system_time+0x2>
     242:	90 91 19 43 	lds	r25, 0x4319	; 0x804319 <__system_time+0x3>
     246:	0f be       	out	0x3f, r0	; 63
     248:	30 97       	sbiw	r30, 0x00	; 0
     24a:	21 f0       	breq	.+8      	; 0x254 <time+0x24>
     24c:	60 83       	st	Z, r22
     24e:	71 83       	std	Z+1, r23	; 0x01
     250:	82 83       	std	Z+2, r24	; 0x02
     252:	93 83       	std	Z+3, r25	; 0x03
     254:	08 95       	ret

00000256 <is_leap_year>:
     256:	9c 01       	movw	r18, r24
     258:	23 70       	andi	r18, 0x03	; 3
     25a:	33 27       	eor	r19, r19
     25c:	23 2b       	or	r18, r19
     25e:	59 f4       	brne	.+22     	; 0x276 <is_leap_year+0x20>
     260:	64 e6       	ldi	r22, 0x64	; 100
     262:	70 e0       	ldi	r23, 0x00	; 0
     264:	0e 94 e0 20 	call	0x41c0	; 0x41c0 <__divmodhi4>
     268:	89 2b       	or	r24, r25
     26a:	39 f4       	brne	.+14     	; 0x27a <is_leap_year+0x24>
     26c:	63 70       	andi	r22, 0x03	; 3
     26e:	77 27       	eor	r23, r23
     270:	81 e0       	ldi	r24, 0x01	; 1
     272:	67 2b       	or	r22, r23
     274:	19 f0       	breq	.+6      	; 0x27c <is_leap_year+0x26>
     276:	80 e0       	ldi	r24, 0x00	; 0
     278:	08 95       	ret
     27a:	81 e0       	ldi	r24, 0x01	; 1
     27c:	08 95       	ret

0000027e <atmel_start_init>:
/**
 * Initializes MCU, drivers and middleware in the project
 **/
void atmel_start_init(void)
{
	system_init();
     27e:	0e 94 6b 0d 	call	0x1ad6	; 0x1ad6 <system_init>
     282:	08 95       	ret

00000284 <__vector_30>:
#include "include/usart_basic.h"
#include "include/morse.h"


ISR(TCB2_INT_vect)
{
     284:	1f 92       	push	r1
     286:	0f 92       	push	r0
     288:	0f b6       	in	r0, 0x3f	; 63
     28a:	0f 92       	push	r0
     28c:	11 24       	eor	r1, r1
     28e:	8f 93       	push	r24
	if(TCB2.INTFLAGS & TCB_CAPT_bm)
     290:	80 91 26 0b 	lds	r24, 0x0B26	; 0x800b26 <__TEXT_REGION_LENGTH__+0x7e0b26>
     294:	80 ff       	sbrs	r24, 0
     296:	03 c0       	rjmp	.+6      	; 0x29e <__vector_30+0x1a>
    {
        TCB2.INTFLAGS = TCB_CAPT_bm;
     298:	81 e0       	ldi	r24, 0x01	; 1
     29a:	80 93 26 0b 	sts	0x0B26, r24	; 0x800b26 <__TEXT_REGION_LENGTH__+0x7e0b26>
    }
}
     29e:	8f 91       	pop	r24
     2a0:	0f 90       	pop	r0
     2a2:	0f be       	out	0x3f, r0	; 63
     2a4:	0f 90       	pop	r0
     2a6:	1f 90       	pop	r1
     2a8:	18 95       	reti

000002aa <__vector_31>:

/**

*/
ISR(USART1_RXC_vect)
{
     2aa:	1f 92       	push	r1
     2ac:	0f 92       	push	r0
     2ae:	0f b6       	in	r0, 0x3f	; 63
     2b0:	0f 92       	push	r0
     2b2:	11 24       	eor	r1, r1
     2b4:	0b b6       	in	r0, 0x3b	; 59
     2b6:	0f 92       	push	r0
     2b8:	0f 93       	push	r16
     2ba:	1f 93       	push	r17
     2bc:	2f 93       	push	r18
     2be:	3f 93       	push	r19
     2c0:	4f 93       	push	r20
     2c2:	5f 93       	push	r21
     2c4:	6f 93       	push	r22
     2c6:	7f 93       	push	r23
     2c8:	8f 93       	push	r24
     2ca:	9f 93       	push	r25
     2cc:	af 93       	push	r26
     2ce:	bf 93       	push	r27
     2d0:	cf 93       	push	r28
     2d2:	df 93       	push	r29
     2d4:	ef 93       	push	r30
     2d6:	ff 93       	push	r31
	static uint8_t field_len = 0;
	static uint32_t tempMsg_ID = 0;
	static BOOL receiving_msg = FALSE;
	uint8_t rx_char;

	rx_char = USART1_get_data();
     2d8:	0e 94 7b 1e 	call	0x3cf6	; 0x3cf6 <USART1_get_data>
     2dc:	18 2f       	mov	r17, r24

	if(!buff)
     2de:	80 91 cf 40 	lds	r24, 0x40CF	; 0x8040cf <_ZZ11__vector_31E4buff>
     2e2:	90 91 d0 40 	lds	r25, 0x40D0	; 0x8040d0 <_ZZ11__vector_31E4buff+0x1>
     2e6:	89 2b       	or	r24, r25
     2e8:	31 f4       	brne	.+12     	; 0x2f6 <__vector_31+0x4c>
	{
		buff = nextEmptyRxBuffer();
     2ea:	0e 94 c8 11 	call	0x2390	; 0x2390 <_Z17nextEmptyRxBufferv>
     2ee:	80 93 cf 40 	sts	0x40CF, r24	; 0x8040cf <_ZZ11__vector_31E4buff>
     2f2:	90 93 d0 40 	sts	0x40D0, r25	; 0x8040d0 <_ZZ11__vector_31E4buff+0x1>
	}

	if(buff)
     2f6:	c0 91 cf 40 	lds	r28, 0x40CF	; 0x8040cf <_ZZ11__vector_31E4buff>
     2fa:	d0 91 d0 40 	lds	r29, 0x40D0	; 0x8040d0 <_ZZ11__vector_31E4buff+0x1>
     2fe:	20 97       	sbiw	r28, 0x00	; 0
     300:	09 f4       	brne	.+2      	; 0x304 <__vector_31+0x5a>
     302:	e3 c0       	rjmp	.+454    	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
	{
		rx_char = toupper(rx_char);
     304:	81 2f       	mov	r24, r17
     306:	90 e0       	ldi	r25, 0x00	; 0
     308:	0e 94 cd 22 	call	0x459a	; 0x459a <toupper>
//		SMCR = 0x00;                                /* exit power-down mode */

		if((rx_char == '$') || (rx_char == '!'))    /* start of new message = $ */
     30c:	84 32       	cpi	r24, 0x24	; 36
     30e:	11 f0       	breq	.+4      	; 0x314 <__vector_31+0x6a>
     310:	81 32       	cpi	r24, 0x21	; 33
     312:	49 f5       	brne	.+82     	; 0x366 <__vector_31+0xbc>
		{
			charIndex = 0;
     314:	10 92 ce 40 	sts	0x40CE, r1	; 0x8040ce <_ZZ11__vector_31E9charIndex>
			buff->type = (rx_char == '!') ? LINKBUS_MSG_REPLY : LINKBUS_MSG_COMMAND;
     318:	81 32       	cpi	r24, 0x21	; 33
     31a:	11 f4       	brne	.+4      	; 0x320 <__vector_31+0x76>
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	01 c0       	rjmp	.+2      	; 0x322 <__vector_31+0x78>
     320:	81 e0       	ldi	r24, 0x01	; 1
     322:	88 83       	st	Y, r24
			field_len = 0;
     324:	10 92 cd 40 	sts	0x40CD, r1	; 0x8040cd <_ZZ11__vector_31E9field_len>
			tempMsg_ID = 0;
     328:	10 92 c9 40 	sts	0x40C9, r1	; 0x8040c9 <_ZZ11__vector_31E10tempMsg_ID>
     32c:	10 92 ca 40 	sts	0x40CA, r1	; 0x8040ca <_ZZ11__vector_31E10tempMsg_ID+0x1>
     330:	10 92 cb 40 	sts	0x40CB, r1	; 0x8040cb <_ZZ11__vector_31E10tempMsg_ID+0x2>
     334:	10 92 cc 40 	sts	0x40CC, r1	; 0x8040cc <_ZZ11__vector_31E10tempMsg_ID+0x3>
			receiving_msg = TRUE;
     338:	81 e0       	ldi	r24, 0x01	; 1
     33a:	80 93 c8 40 	sts	0x40C8, r24	; 0x8040c8 <_ZZ11__vector_31E13receiving_msg>

			/* Empty the field buffers */
			for(field_index = 0; field_index < LINKBUS_MAX_MSG_NUMBER_OF_FIELDS; field_index++)
     33e:	10 92 c7 40 	sts	0x40C7, r1	; 0x8040c7 <_ZZ11__vector_31E11field_index>
     342:	80 91 c7 40 	lds	r24, 0x40C7	; 0x8040c7 <_ZZ11__vector_31E11field_index>
     346:	83 30       	cpi	r24, 0x03	; 3
     348:	58 f4       	brcc	.+22     	; 0x360 <__vector_31+0xb6>
			{
				buff->fields[field_index][0] = '\0';
     34a:	fe 01       	movw	r30, r28
     34c:	05 e1       	ldi	r16, 0x15	; 21
     34e:	80 9f       	mul	r24, r16
     350:	e0 0d       	add	r30, r0
     352:	f1 1d       	adc	r31, r1
     354:	11 24       	eor	r1, r1
     356:	13 82       	std	Z+3, r1	; 0x03
			field_len = 0;
			tempMsg_ID = 0;
			receiving_msg = TRUE;

			/* Empty the field buffers */
			for(field_index = 0; field_index < LINKBUS_MAX_MSG_NUMBER_OF_FIELDS; field_index++)
     358:	8f 5f       	subi	r24, 0xFF	; 255
     35a:	80 93 c7 40 	sts	0x40C7, r24	; 0x8040c7 <_ZZ11__vector_31E11field_index>
     35e:	f1 cf       	rjmp	.-30     	; 0x342 <__vector_31+0x98>
			{
				buff->fields[field_index][0] = '\0';
			}

			field_index = 0;
     360:	10 92 c7 40 	sts	0x40C7, r1	; 0x8040c7 <_ZZ11__vector_31E11field_index>
     364:	a7 c0       	rjmp	.+334    	; 0x4b4 <__LOCK_REGION_LENGTH__+0xb4>
		}
		else if(receiving_msg)
     366:	90 91 c8 40 	lds	r25, 0x40C8	; 0x8040c8 <_ZZ11__vector_31E13receiving_msg>
     36a:	99 23       	and	r25, r25
     36c:	09 f4       	brne	.+2      	; 0x370 <__vector_31+0xc6>
     36e:	8b c0       	rjmp	.+278    	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
		{
			if((rx_char == ',') || (rx_char == ';') || (rx_char == '?'))    /* new field = ,; end of message = ; */
     370:	8c 32       	cpi	r24, 0x2C	; 44
     372:	29 f0       	breq	.+10     	; 0x37e <__vector_31+0xd4>
     374:	8b 33       	cpi	r24, 0x3B	; 59
     376:	19 f0       	breq	.+6      	; 0x37e <__vector_31+0xd4>
     378:	8f 33       	cpi	r24, 0x3F	; 63
     37a:	09 f0       	breq	.+2      	; 0x37e <__vector_31+0xd4>
     37c:	42 c0       	rjmp	.+132    	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
			{
				/* if(field_index == 0) // message ID received */
				if(field_index > 0)
     37e:	90 91 c7 40 	lds	r25, 0x40C7	; 0x8040c7 <_ZZ11__vector_31E11field_index>
     382:	99 23       	and	r25, r25
     384:	89 f0       	breq	.+34     	; 0x3a8 <__vector_31+0xfe>
				{
					buff->fields[field_index - 1][field_len] = 0;
     386:	29 2f       	mov	r18, r25
     388:	30 e0       	ldi	r19, 0x00	; 0
     38a:	21 50       	subi	r18, 0x01	; 1
     38c:	31 09       	sbc	r19, r1
     38e:	40 91 cd 40 	lds	r20, 0x40CD	; 0x8040cd <_ZZ11__vector_31E9field_len>
     392:	55 e1       	ldi	r21, 0x15	; 21
     394:	52 9f       	mul	r21, r18
     396:	f0 01       	movw	r30, r0
     398:	53 9f       	mul	r21, r19
     39a:	f0 0d       	add	r31, r0
     39c:	11 24       	eor	r1, r1
     39e:	ec 0f       	add	r30, r28
     3a0:	fd 1f       	adc	r31, r29
     3a2:	e4 0f       	add	r30, r20
     3a4:	f1 1d       	adc	r31, r1
     3a6:	13 82       	std	Z+3, r1	; 0x03
				}

				field_index++;
     3a8:	9f 5f       	subi	r25, 0xFF	; 255
     3aa:	90 93 c7 40 	sts	0x40C7, r25	; 0x8040c7 <_ZZ11__vector_31E11field_index>
				field_len = 0;
     3ae:	10 92 cd 40 	sts	0x40CD, r1	; 0x8040cd <_ZZ11__vector_31E9field_len>

				if(rx_char == ';')
     3b2:	8b 33       	cpi	r24, 0x3B	; 59
     3b4:	69 f4       	brne	.+26     	; 0x3d0 <__vector_31+0x126>
				{
					if(charIndex > LINKBUS_MIN_MSG_LENGTH)
     3b6:	80 91 ce 40 	lds	r24, 0x40CE	; 0x8040ce <_ZZ11__vector_31E9charIndex>
     3ba:	84 30       	cpi	r24, 0x04	; 4
     3bc:	30 f0       	brcs	.+12     	; 0x3ca <__vector_31+0x120>
					{
						buff->id = (LBMessageID)tempMsg_ID;
     3be:	80 91 c9 40 	lds	r24, 0x40C9	; 0x8040c9 <_ZZ11__vector_31E10tempMsg_ID>
     3c2:	90 91 ca 40 	lds	r25, 0x40CA	; 0x8040ca <_ZZ11__vector_31E10tempMsg_ID+0x1>
     3c6:	89 83       	std	Y+1, r24	; 0x01
     3c8:	9a 83       	std	Y+2, r25	; 0x02
					}
					receiving_msg = FALSE;
     3ca:	10 92 c8 40 	sts	0x40C8, r1	; 0x8040c8 <_ZZ11__vector_31E13receiving_msg>
     3ce:	10 c0       	rjmp	.+32     	; 0x3f0 <__vector_31+0x146>
				}
				else if(rx_char == '?')
     3d0:	8f 33       	cpi	r24, 0x3F	; 63
     3d2:	71 f4       	brne	.+28     	; 0x3f0 <__vector_31+0x146>
				{
					buff->type = LINKBUS_MSG_QUERY;
     3d4:	82 e0       	ldi	r24, 0x02	; 2
     3d6:	88 83       	st	Y, r24
					if(charIndex >= LINKBUS_MIN_MSG_LENGTH)
     3d8:	80 91 ce 40 	lds	r24, 0x40CE	; 0x8040ce <_ZZ11__vector_31E9charIndex>
     3dc:	83 30       	cpi	r24, 0x03	; 3
     3de:	30 f0       	brcs	.+12     	; 0x3ec <__vector_31+0x142>
					{
						buff->id = (LBMessageID)tempMsg_ID;
     3e0:	80 91 c9 40 	lds	r24, 0x40C9	; 0x8040c9 <_ZZ11__vector_31E10tempMsg_ID>
     3e4:	90 91 ca 40 	lds	r25, 0x40CA	; 0x8040ca <_ZZ11__vector_31E10tempMsg_ID+0x1>
     3e8:	89 83       	std	Y+1, r24	; 0x01
     3ea:	9a 83       	std	Y+2, r25	; 0x02
					}
					receiving_msg = FALSE;
     3ec:	10 92 c8 40 	sts	0x40C8, r1	; 0x8040c8 <_ZZ11__vector_31E13receiving_msg>
				}

				if(!receiving_msg)
     3f0:	80 91 c8 40 	lds	r24, 0x40C8	; 0x8040c8 <_ZZ11__vector_31E13receiving_msg>
     3f4:	81 11       	cpse	r24, r1
     3f6:	5e c0       	rjmp	.+188    	; 0x4b4 <__LOCK_REGION_LENGTH__+0xb4>
				{
					buff = 0;
     3f8:	10 92 cf 40 	sts	0x40CF, r1	; 0x8040cf <_ZZ11__vector_31E4buff>
     3fc:	10 92 d0 40 	sts	0x40D0, r1	; 0x8040d0 <_ZZ11__vector_31E4buff+0x1>
     400:	59 c0       	rjmp	.+178    	; 0x4b4 <__LOCK_REGION_LENGTH__+0xb4>
				}
			}
			else
			{
				if(field_index == 0)    /* message ID received */
     402:	20 91 c7 40 	lds	r18, 0x40C7	; 0x8040c7 <_ZZ11__vector_31E11field_index>
     406:	21 11       	cpse	r18, r1
     408:	29 c0       	rjmp	.+82     	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
				{
					tempMsg_ID = tempMsg_ID * 10 + rx_char;
     40a:	40 91 c9 40 	lds	r20, 0x40C9	; 0x8040c9 <_ZZ11__vector_31E10tempMsg_ID>
     40e:	50 91 ca 40 	lds	r21, 0x40CA	; 0x8040ca <_ZZ11__vector_31E10tempMsg_ID+0x1>
     412:	60 91 cb 40 	lds	r22, 0x40CB	; 0x8040cb <_ZZ11__vector_31E10tempMsg_ID+0x2>
     416:	70 91 cc 40 	lds	r23, 0x40CC	; 0x8040cc <_ZZ11__vector_31E10tempMsg_ID+0x3>
     41a:	44 0f       	add	r20, r20
     41c:	55 1f       	adc	r21, r21
     41e:	66 1f       	adc	r22, r22
     420:	77 1f       	adc	r23, r23
     422:	8a 01       	movw	r16, r20
     424:	9b 01       	movw	r18, r22
     426:	00 0f       	add	r16, r16
     428:	11 1f       	adc	r17, r17
     42a:	22 1f       	adc	r18, r18
     42c:	33 1f       	adc	r19, r19
     42e:	00 0f       	add	r16, r16
     430:	11 1f       	adc	r17, r17
     432:	22 1f       	adc	r18, r18
     434:	33 1f       	adc	r19, r19
     436:	40 0f       	add	r20, r16
     438:	51 1f       	adc	r21, r17
     43a:	62 1f       	adc	r22, r18
     43c:	73 1f       	adc	r23, r19
     43e:	8a 01       	movw	r16, r20
     440:	9b 01       	movw	r18, r22
     442:	08 0f       	add	r16, r24
     444:	11 1d       	adc	r17, r1
     446:	21 1d       	adc	r18, r1
     448:	31 1d       	adc	r19, r1
     44a:	00 93 c9 40 	sts	0x40C9, r16	; 0x8040c9 <_ZZ11__vector_31E10tempMsg_ID>
     44e:	10 93 ca 40 	sts	0x40CA, r17	; 0x8040ca <_ZZ11__vector_31E10tempMsg_ID+0x1>
     452:	20 93 cb 40 	sts	0x40CB, r18	; 0x8040cb <_ZZ11__vector_31E10tempMsg_ID+0x2>
     456:	30 93 cc 40 	sts	0x40CC, r19	; 0x8040cc <_ZZ11__vector_31E10tempMsg_ID+0x3>
     45a:	2c c0       	rjmp	.+88     	; 0x4b4 <__LOCK_REGION_LENGTH__+0xb4>
				}
				else
				{
					buff->fields[field_index - 1][field_len++] = rx_char;
     45c:	30 e0       	ldi	r19, 0x00	; 0
     45e:	21 50       	subi	r18, 0x01	; 1
     460:	31 09       	sbc	r19, r1
     462:	90 91 cd 40 	lds	r25, 0x40CD	; 0x8040cd <_ZZ11__vector_31E9field_len>
     466:	41 e0       	ldi	r20, 0x01	; 1
     468:	49 0f       	add	r20, r25
     46a:	40 93 cd 40 	sts	0x40CD, r20	; 0x8040cd <_ZZ11__vector_31E9field_len>
     46e:	65 e1       	ldi	r22, 0x15	; 21
     470:	62 9f       	mul	r22, r18
     472:	a0 01       	movw	r20, r0
     474:	63 9f       	mul	r22, r19
     476:	50 0d       	add	r21, r0
     478:	11 24       	eor	r1, r1
     47a:	c4 0f       	add	r28, r20
     47c:	d5 1f       	adc	r29, r21
     47e:	c9 0f       	add	r28, r25
     480:	d1 1d       	adc	r29, r1
     482:	8b 83       	std	Y+3, r24	; 0x03
     484:	17 c0       	rjmp	.+46     	; 0x4b4 <__LOCK_REGION_LENGTH__+0xb4>
				}
			}
		}
		else if(rx_char == 0x0D)    /* Carriage return resets any message in progress */
     486:	8d 30       	cpi	r24, 0x0D	; 13
     488:	a9 f4       	brne	.+42     	; 0x4b4 <__LOCK_REGION_LENGTH__+0xb4>
		{
			buff->id = MESSAGE_EMPTY;
     48a:	19 82       	std	Y+1, r1	; 0x01
     48c:	1a 82       	std	Y+2, r1	; 0x02
			charIndex = LINKBUS_MAX_MSG_LENGTH;
     48e:	82 e3       	ldi	r24, 0x32	; 50
     490:	80 93 ce 40 	sts	0x40CE, r24	; 0x8040ce <_ZZ11__vector_31E9charIndex>
			field_len = 0;
     494:	10 92 cd 40 	sts	0x40CD, r1	; 0x8040cd <_ZZ11__vector_31E9field_len>
			tempMsg_ID = 0;
     498:	10 92 c9 40 	sts	0x40C9, r1	; 0x8040c9 <_ZZ11__vector_31E10tempMsg_ID>
     49c:	10 92 ca 40 	sts	0x40CA, r1	; 0x8040ca <_ZZ11__vector_31E10tempMsg_ID+0x1>
     4a0:	10 92 cb 40 	sts	0x40CB, r1	; 0x8040cb <_ZZ11__vector_31E10tempMsg_ID+0x2>
     4a4:	10 92 cc 40 	sts	0x40CC, r1	; 0x8040cc <_ZZ11__vector_31E10tempMsg_ID+0x3>
			field_index = 0;
     4a8:	10 92 c7 40 	sts	0x40C7, r1	; 0x8040c7 <_ZZ11__vector_31E11field_index>
			buff = NULL;
     4ac:	10 92 cf 40 	sts	0x40CF, r1	; 0x8040cf <_ZZ11__vector_31E4buff>
     4b0:	10 92 d0 40 	sts	0x40D0, r1	; 0x8040d0 <_ZZ11__vector_31E4buff+0x1>
		}

		if(++charIndex >= LINKBUS_MAX_MSG_LENGTH)
     4b4:	80 91 ce 40 	lds	r24, 0x40CE	; 0x8040ce <_ZZ11__vector_31E9charIndex>
     4b8:	8f 5f       	subi	r24, 0xFF	; 255
     4ba:	80 93 ce 40 	sts	0x40CE, r24	; 0x8040ce <_ZZ11__vector_31E9charIndex>
     4be:	82 33       	cpi	r24, 0x32	; 50
     4c0:	20 f0       	brcs	.+8      	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
		{
			receiving_msg = FALSE;
     4c2:	10 92 c8 40 	sts	0x40C8, r1	; 0x8040c8 <_ZZ11__vector_31E13receiving_msg>
			charIndex = 0;
     4c6:	10 92 ce 40 	sts	0x40CE, r1	; 0x8040ce <_ZZ11__vector_31E9charIndex>
		}
	}
}
     4ca:	ff 91       	pop	r31
     4cc:	ef 91       	pop	r30
     4ce:	df 91       	pop	r29
     4d0:	cf 91       	pop	r28
     4d2:	bf 91       	pop	r27
     4d4:	af 91       	pop	r26
     4d6:	9f 91       	pop	r25
     4d8:	8f 91       	pop	r24
     4da:	7f 91       	pop	r23
     4dc:	6f 91       	pop	r22
     4de:	5f 91       	pop	r21
     4e0:	4f 91       	pop	r20
     4e2:	3f 91       	pop	r19
     4e4:	2f 91       	pop	r18
     4e6:	1f 91       	pop	r17
     4e8:	0f 91       	pop	r16
     4ea:	0f 90       	pop	r0
     4ec:	0b be       	out	0x3b, r0	; 59
     4ee:	0f 90       	pop	r0
     4f0:	0f be       	out	0x3f, r0	; 63
     4f2:	0f 90       	pop	r0
     4f4:	1f 90       	pop	r1
     4f6:	18 95       	reti

000004f8 <__vector_32>:

/**

*/
ISR(USART1_DRE_vect)
{
     4f8:	1f 92       	push	r1
     4fa:	0f 92       	push	r0
     4fc:	0f b6       	in	r0, 0x3f	; 63
     4fe:	0f 92       	push	r0
     500:	11 24       	eor	r1, r1
     502:	0b b6       	in	r0, 0x3b	; 59
     504:	0f 92       	push	r0
     506:	2f 93       	push	r18
     508:	3f 93       	push	r19
     50a:	4f 93       	push	r20
     50c:	5f 93       	push	r21
     50e:	6f 93       	push	r22
     510:	7f 93       	push	r23
     512:	8f 93       	push	r24
     514:	9f 93       	push	r25
     516:	af 93       	push	r26
     518:	bf 93       	push	r27
     51a:	ef 93       	push	r30
     51c:	ff 93       	push	r31
	static LinkbusTxBuffer* buff = 0;
	static uint8_t charIndex = 0;

	if(!buff)
     51e:	80 91 c5 40 	lds	r24, 0x40C5	; 0x8040c5 <_ZZ11__vector_32E4buff>
     522:	90 91 c6 40 	lds	r25, 0x40C6	; 0x8040c6 <_ZZ11__vector_32E4buff+0x1>
     526:	89 2b       	or	r24, r25
     528:	31 f4       	brne	.+12     	; 0x536 <__vector_32+0x3e>
	{
		buff = nextFullTxBuffer();
     52a:	0e 94 70 11 	call	0x22e0	; 0x22e0 <_Z16nextFullTxBufferv>
     52e:	80 93 c5 40 	sts	0x40C5, r24	; 0x8040c5 <_ZZ11__vector_32E4buff>
     532:	90 93 c6 40 	sts	0x40C6, r25	; 0x8040c6 <_ZZ11__vector_32E4buff+0x1>
	}

	if((*buff)[charIndex])
     536:	e0 91 c5 40 	lds	r30, 0x40C5	; 0x8040c5 <_ZZ11__vector_32E4buff>
     53a:	f0 91 c6 40 	lds	r31, 0x40C6	; 0x8040c6 <_ZZ11__vector_32E4buff+0x1>
     53e:	80 91 c4 40 	lds	r24, 0x40C4	; 0x8040c4 <__data_end>
     542:	df 01       	movw	r26, r30
     544:	a8 0f       	add	r26, r24
     546:	b1 1d       	adc	r27, r1
     548:	9c 91       	ld	r25, X
     54a:	99 23       	and	r25, r25
     54c:	31 f0       	breq	.+12     	; 0x55a <__vector_32+0x62>
	{
		/* Put data into buffer, sends the data */
		USART1.TXDATAL = (*buff)[charIndex++];
     54e:	8f 5f       	subi	r24, 0xFF	; 255
     550:	80 93 c4 40 	sts	0x40C4, r24	; 0x8040c4 <__data_end>
     554:	90 93 22 08 	sts	0x0822, r25	; 0x800822 <__TEXT_REGION_LENGTH__+0x7e0822>
     558:	0d c0       	rjmp	.+26     	; 0x574 <__vector_32+0x7c>
	}
	else
	{
		charIndex = 0;
     55a:	10 92 c4 40 	sts	0x40C4, r1	; 0x8040c4 <__data_end>
		(*buff)[0] = '\0';
     55e:	10 82       	st	Z, r1
		buff = nextFullTxBuffer();
     560:	0e 94 70 11 	call	0x22e0	; 0x22e0 <_Z16nextFullTxBufferv>
     564:	80 93 c5 40 	sts	0x40C5, r24	; 0x8040c5 <_ZZ11__vector_32E4buff>
     568:	90 93 c6 40 	sts	0x40C6, r25	; 0x8040c6 <_ZZ11__vector_32E4buff+0x1>
		if(!buff)
     56c:	89 2b       	or	r24, r25
     56e:	11 f4       	brne	.+4      	; 0x574 <__vector_32+0x7c>
		{
			linkbus_end_tx();
     570:	0e 94 35 12 	call	0x246a	; 0x246a <_Z14linkbus_end_txv>
		}
	}
}
     574:	ff 91       	pop	r31
     576:	ef 91       	pop	r30
     578:	bf 91       	pop	r27
     57a:	af 91       	pop	r26
     57c:	9f 91       	pop	r25
     57e:	8f 91       	pop	r24
     580:	7f 91       	pop	r23
     582:	6f 91       	pop	r22
     584:	5f 91       	pop	r21
     586:	4f 91       	pop	r20
     588:	3f 91       	pop	r19
     58a:	2f 91       	pop	r18
     58c:	0f 90       	pop	r0
     58e:	0b be       	out	0x3b, r0	; 59
     590:	0f 90       	pop	r0
     592:	0f be       	out	0x3f, r0	; 63
     594:	0f 90       	pop	r0
     596:	1f 90       	pop	r1
     598:	18 95       	reti

0000059a <__vector_41>:
}

EC activateEventUsingCurrentSettings(SC* statusCode)
{
	return ERROR_CODE_NO_ERROR;
}
     59a:	1f 92       	push	r1
     59c:	0f 92       	push	r0
     59e:	0f b6       	in	r0, 0x3f	; 63
     5a0:	0f 92       	push	r0
     5a2:	11 24       	eor	r1, r1
     5a4:	2f 93       	push	r18
     5a6:	3f 93       	push	r19
     5a8:	8f 93       	push	r24
     5aa:	9f 93       	push	r25
     5ac:	80 91 36 0b 	lds	r24, 0x0B36	; 0x800b36 <__TEXT_REGION_LENGTH__+0x7e0b36>
     5b0:	80 ff       	sbrs	r24, 0
     5b2:	18 c0       	rjmp	.+48     	; 0x5e4 <__vector_41+0x4a>
     5b4:	80 91 3f 41 	lds	r24, 0x413F	; 0x80413f <_ZZ11__vector_41E3cnt>
     5b8:	90 91 40 41 	lds	r25, 0x4140	; 0x804140 <_ZZ11__vector_41E3cnt+0x1>
     5bc:	9c 01       	movw	r18, r24
     5be:	2f 5f       	subi	r18, 0xFF	; 255
     5c0:	3f 4f       	sbci	r19, 0xFF	; 255
     5c2:	20 93 3f 41 	sts	0x413F, r18	; 0x80413f <_ZZ11__vector_41E3cnt>
     5c6:	30 93 40 41 	sts	0x4140, r19	; 0x804140 <_ZZ11__vector_41E3cnt+0x1>
     5ca:	8b 32       	cpi	r24, 0x2B	; 43
     5cc:	91 40       	sbci	r25, 0x01	; 1
     5ce:	39 f4       	brne	.+14     	; 0x5de <__vector_41+0x44>
     5d0:	10 92 3f 41 	sts	0x413F, r1	; 0x80413f <_ZZ11__vector_41E3cnt>
     5d4:	10 92 40 41 	sts	0x4140, r1	; 0x804140 <_ZZ11__vector_41E3cnt+0x1>
     5d8:	8a b1       	in	r24, 0x0a	; 10
     5da:	80 64       	ori	r24, 0x40	; 64
     5dc:	8a b9       	out	0x0a, r24	; 10
     5de:	81 e0       	ldi	r24, 0x01	; 1
     5e0:	80 93 36 0b 	sts	0x0B36, r24	; 0x800b36 <__TEXT_REGION_LENGTH__+0x7e0b36>
     5e4:	9f 91       	pop	r25
     5e6:	8f 91       	pop	r24
     5e8:	3f 91       	pop	r19
     5ea:	2f 91       	pop	r18
     5ec:	0f 90       	pop	r0
     5ee:	0f be       	out	0x3f, r0	; 63
     5f0:	0f 90       	pop	r0
     5f2:	1f 90       	pop	r1
     5f4:	18 95       	reti

000005f6 <__vector_12>:
     5f6:	1f 92       	push	r1
     5f8:	0f 92       	push	r0
     5fa:	0f b6       	in	r0, 0x3f	; 63
     5fc:	0f 92       	push	r0
     5fe:	11 24       	eor	r1, r1
     600:	0b b6       	in	r0, 0x3b	; 59
     602:	0f 92       	push	r0
     604:	2f 93       	push	r18
     606:	3f 93       	push	r19
     608:	4f 93       	push	r20
     60a:	5f 93       	push	r21
     60c:	6f 93       	push	r22
     60e:	7f 93       	push	r23
     610:	8f 93       	push	r24
     612:	9f 93       	push	r25
     614:	af 93       	push	r26
     616:	bf 93       	push	r27
     618:	ef 93       	push	r30
     61a:	ff 93       	push	r31
     61c:	cf 93       	push	r28
     61e:	df 93       	push	r29
     620:	00 d0       	rcall	.+0      	; 0x622 <__vector_12+0x2c>
     622:	1f 92       	push	r1
     624:	cd b7       	in	r28, 0x3d	; 61
     626:	de b7       	in	r29, 0x3e	; 62
     628:	80 91 06 0b 	lds	r24, 0x0B06	; 0x800b06 <__TEXT_REGION_LENGTH__+0x7e0b06>
     62c:	80 ff       	sbrs	r24, 0
     62e:	38 c1       	rjmp	.+624    	; 0x8a0 <__vector_12+0x2aa>
     630:	80 91 e8 40 	lds	r24, 0x40E8	; 0x8040e8 <_ZL21g_util_tick_countdown>
     634:	90 91 e9 40 	lds	r25, 0x40E9	; 0x8040e9 <_ZL21g_util_tick_countdown+0x1>
     638:	89 2b       	or	r24, r25
     63a:	49 f0       	breq	.+18     	; 0x64e <__vector_12+0x58>
     63c:	80 91 e8 40 	lds	r24, 0x40E8	; 0x8040e8 <_ZL21g_util_tick_countdown>
     640:	90 91 e9 40 	lds	r25, 0x40E9	; 0x8040e9 <_ZL21g_util_tick_countdown+0x1>
     644:	01 97       	sbiw	r24, 0x01	; 1
     646:	80 93 e8 40 	sts	0x40E8, r24	; 0x8040e8 <_ZL21g_util_tick_countdown>
     64a:	90 93 e9 40 	sts	0x40E9, r25	; 0x8040e9 <_ZL21g_util_tick_countdown+0x1>
     64e:	80 91 2b 41 	lds	r24, 0x412B	; 0x80412b <g_event_enabled>
     652:	88 23       	and	r24, r24
     654:	29 f0       	breq	.+10     	; 0x660 <__vector_12+0x6a>
     656:	80 91 2c 41 	lds	r24, 0x412C	; 0x80412c <g_event_commenced>
     65a:	81 11       	cpse	r24, r1
     65c:	03 c0       	rjmp	.+6      	; 0x664 <__vector_12+0x6e>
     65e:	03 c0       	rjmp	.+6      	; 0x666 <__vector_12+0x70>
     660:	80 e0       	ldi	r24, 0x00	; 0
     662:	01 c0       	rjmp	.+2      	; 0x666 <__vector_12+0x70>
     664:	81 e0       	ldi	r24, 0x01	; 1
     666:	88 23       	and	r24, r24
     668:	09 f4       	brne	.+2      	; 0x66c <__vector_12+0x76>
     66a:	81 c0       	rjmp	.+258    	; 0x76e <__vector_12+0x178>
     66c:	80 91 ec 40 	lds	r24, 0x40EC	; 0x8040ec <_ZL12g_on_the_air>
     670:	90 91 ed 40 	lds	r25, 0x40ED	; 0x8040ed <_ZL12g_on_the_air+0x1>
     674:	a0 91 ee 40 	lds	r26, 0x40EE	; 0x8040ee <_ZL12g_on_the_air+0x2>
     678:	b0 91 ef 40 	lds	r27, 0x40EF	; 0x8040ef <_ZL12g_on_the_air+0x3>
     67c:	18 16       	cp	r1, r24
     67e:	19 06       	cpc	r1, r25
     680:	1a 06       	cpc	r1, r26
     682:	1b 06       	cpc	r1, r27
     684:	0c f0       	brlt	.+2      	; 0x688 <__vector_12+0x92>
     686:	58 c0       	rjmp	.+176    	; 0x738 <__vector_12+0x142>
     688:	80 91 41 41 	lds	r24, 0x4141	; 0x804141 <_ZZ11__vector_12E7codeInc>
     68c:	90 91 42 41 	lds	r25, 0x4142	; 0x804142 <_ZZ11__vector_12E7codeInc+0x1>
     690:	00 97       	sbiw	r24, 0x00	; 0
     692:	09 f4       	brne	.+2      	; 0x696 <__vector_12+0xa0>
     694:	44 c0       	rjmp	.+136    	; 0x71e <__vector_12+0x128>
     696:	01 97       	sbiw	r24, 0x01	; 1
     698:	80 93 41 41 	sts	0x4141, r24	; 0x804141 <_ZZ11__vector_12E7codeInc>
     69c:	90 93 42 41 	sts	0x4142, r25	; 0x804142 <_ZZ11__vector_12E7codeInc+0x1>
     6a0:	89 2b       	or	r24, r25
     6a2:	09 f0       	breq	.+2      	; 0x6a6 <__vector_12+0xb0>
     6a4:	64 c0       	rjmp	.+200    	; 0x76e <__vector_12+0x178>
     6a6:	ae 01       	movw	r20, r28
     6a8:	4e 5f       	subi	r20, 0xFE	; 254
     6aa:	5f 4f       	sbci	r21, 0xFF	; 255
     6ac:	be 01       	movw	r22, r28
     6ae:	6d 5f       	subi	r22, 0xFD	; 253
     6b0:	7f 4f       	sbci	r23, 0xFF	; 255
     6b2:	80 e0       	ldi	r24, 0x00	; 0
     6b4:	90 e0       	ldi	r25, 0x00	; 0
     6b6:	0e 94 51 14 	call	0x28a2	; 0x28a2 <_Z9makeMorsePcPhS0_>
     6ba:	80 93 43 41 	sts	0x4143, r24	; 0x804143 <_ZZ11__vector_12E3key>
     6be:	8b 81       	ldd	r24, Y+3	; 0x03
     6c0:	81 11       	cpse	r24, r1
     6c2:	25 c0       	rjmp	.+74     	; 0x70e <__vector_12+0x118>
     6c4:	8a 81       	ldd	r24, Y+2	; 0x02
     6c6:	88 23       	and	r24, r24
     6c8:	11 f1       	breq	.+68     	; 0x70e <__vector_12+0x118>
     6ca:	8d ef       	ldi	r24, 0xFD	; 253
     6cc:	80 93 e7 40 	sts	0x40E7, r24	; 0x8040e7 <_ZL18g_last_status_code>
     6d0:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
     6d4:	0e 94 32 0b 	call	0x1664	; 0x1664 <_Z13throttleValueh>
     6d8:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
     6dc:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
     6e0:	81 e0       	ldi	r24, 0x01	; 1
     6e2:	8b 83       	std	Y+3, r24	; 0x03
     6e4:	40 e0       	ldi	r20, 0x00	; 0
     6e6:	50 e0       	ldi	r21, 0x00	; 0
     6e8:	be 01       	movw	r22, r28
     6ea:	6d 5f       	subi	r22, 0xFD	; 253
     6ec:	7f 4f       	sbci	r23, 0xFF	; 255
     6ee:	85 ef       	ldi	r24, 0xF5	; 245
     6f0:	90 e4       	ldi	r25, 0x40	; 64
     6f2:	0e 94 51 14 	call	0x28a2	; 0x28a2 <_Z9makeMorsePcPhS0_>
     6f6:	ae 01       	movw	r20, r28
     6f8:	4e 5f       	subi	r20, 0xFE	; 254
     6fa:	5f 4f       	sbci	r21, 0xFF	; 255
     6fc:	be 01       	movw	r22, r28
     6fe:	6d 5f       	subi	r22, 0xFD	; 253
     700:	7f 4f       	sbci	r23, 0xFF	; 255
     702:	80 e0       	ldi	r24, 0x00	; 0
     704:	90 e0       	ldi	r25, 0x00	; 0
     706:	0e 94 51 14 	call	0x28a2	; 0x28a2 <_Z9makeMorsePcPhS0_>
     70a:	80 93 43 41 	sts	0x4143, r24	; 0x804143 <_ZZ11__vector_12E3key>
     70e:	80 91 43 41 	lds	r24, 0x4143	; 0x804143 <_ZZ11__vector_12E3key>
     712:	88 23       	and	r24, r24
     714:	61 f1       	breq	.+88     	; 0x76e <__vector_12+0x178>
     716:	81 e0       	ldi	r24, 0x01	; 1
     718:	0e 94 89 1c 	call	0x3912	; 0x3912 <_Z18powerToTransmitterh>
     71c:	28 c0       	rjmp	.+80     	; 0x76e <__vector_12+0x178>
     71e:	80 91 43 41 	lds	r24, 0x4143	; 0x804143 <_ZZ11__vector_12E3key>
     722:	0e 94 8b 1c 	call	0x3916	; 0x3916 <_Z14keyTransmitterh>
     726:	80 91 07 40 	lds	r24, 0x4007	; 0x804007 <_ZL15g_code_throttle>
     72a:	90 91 08 40 	lds	r25, 0x4008	; 0x804008 <_ZL15g_code_throttle+0x1>
     72e:	80 93 41 41 	sts	0x4141, r24	; 0x804141 <_ZZ11__vector_12E7codeInc>
     732:	90 93 42 41 	sts	0x4142, r25	; 0x804142 <_ZZ11__vector_12E7codeInc+0x1>
     736:	1b c0       	rjmp	.+54     	; 0x76e <__vector_12+0x178>
     738:	80 91 ec 40 	lds	r24, 0x40EC	; 0x8040ec <_ZL12g_on_the_air>
     73c:	90 91 ed 40 	lds	r25, 0x40ED	; 0x8040ed <_ZL12g_on_the_air+0x1>
     740:	a0 91 ee 40 	lds	r26, 0x40EE	; 0x8040ee <_ZL12g_on_the_air+0x2>
     744:	b0 91 ef 40 	lds	r27, 0x40EF	; 0x8040ef <_ZL12g_on_the_air+0x3>
     748:	89 2b       	or	r24, r25
     74a:	8a 2b       	or	r24, r26
     74c:	8b 2b       	or	r24, r27
     74e:	79 f4       	brne	.+30     	; 0x76e <__vector_12+0x178>
     750:	80 91 43 41 	lds	r24, 0x4143	; 0x804143 <_ZZ11__vector_12E3key>
     754:	88 23       	and	r24, r24
     756:	59 f0       	breq	.+22     	; 0x76e <__vector_12+0x178>
     758:	10 92 43 41 	sts	0x4143, r1	; 0x804143 <_ZZ11__vector_12E3key>
     75c:	80 e0       	ldi	r24, 0x00	; 0
     75e:	0e 94 8b 1c 	call	0x3916	; 0x3916 <_Z14keyTransmitterh>
     762:	80 e0       	ldi	r24, 0x00	; 0
     764:	0e 94 89 1c 	call	0x3912	; 0x3912 <_Z18powerToTransmitterh>
     768:	8e ef       	ldi	r24, 0xFE	; 254
     76a:	80 93 e7 40 	sts	0x40E7, r24	; 0x8040e7 <_ZL18g_last_status_code>
     76e:	80 91 44 41 	lds	r24, 0x4144	; 0x804144 <_ZZ11__vector_12E19conversionInProcess>
     772:	81 11       	cpse	r24, r1
     774:	42 c0       	rjmp	.+132    	; 0x7fa <__vector_12+0x204>
     776:	8f ef       	ldi	r24, 0xFF	; 255
     778:	80 93 45 41 	sts	0x4145, r24	; 0x804145 <_ZZ11__vector_12E24indexConversionInProcess>
     77c:	19 82       	std	Y+1, r1	; 0x01
     77e:	89 81       	ldd	r24, Y+1	; 0x01
     780:	85 30       	cpi	r24, 0x05	; 5
     782:	30 f5       	brcc	.+76     	; 0x7d0 <__vector_12+0x1da>
     784:	e9 81       	ldd	r30, Y+1	; 0x01
     786:	f0 e0       	ldi	r31, 0x00	; 0
     788:	ee 0f       	add	r30, r30
     78a:	ff 1f       	adc	r31, r31
     78c:	eb 5e       	subi	r30, 0xEB	; 235
     78e:	ff 4b       	sbci	r31, 0xBF	; 191
     790:	80 81       	ld	r24, Z
     792:	91 81       	ldd	r25, Z+1	; 0x01
     794:	89 2b       	or	r24, r25
     796:	59 f0       	breq	.+22     	; 0x7ae <__vector_12+0x1b8>
     798:	e9 81       	ldd	r30, Y+1	; 0x01
     79a:	f0 e0       	ldi	r31, 0x00	; 0
     79c:	ee 0f       	add	r30, r30
     79e:	ff 1f       	adc	r31, r31
     7a0:	eb 5e       	subi	r30, 0xEB	; 235
     7a2:	ff 4b       	sbci	r31, 0xBF	; 191
     7a4:	80 81       	ld	r24, Z
     7a6:	91 81       	ldd	r25, Z+1	; 0x01
     7a8:	01 97       	sbiw	r24, 0x01	; 1
     7aa:	80 83       	st	Z, r24
     7ac:	91 83       	std	Z+1, r25	; 0x01
     7ae:	e9 81       	ldd	r30, Y+1	; 0x01
     7b0:	f0 e0       	ldi	r31, 0x00	; 0
     7b2:	ee 0f       	add	r30, r30
     7b4:	ff 1f       	adc	r31, r31
     7b6:	eb 5e       	subi	r30, 0xEB	; 235
     7b8:	ff 4b       	sbci	r31, 0xBF	; 191
     7ba:	80 81       	ld	r24, Z
     7bc:	91 81       	ldd	r25, Z+1	; 0x01
     7be:	89 2b       	or	r24, r25
     7c0:	19 f4       	brne	.+6      	; 0x7c8 <__vector_12+0x1d2>
     7c2:	89 81       	ldd	r24, Y+1	; 0x01
     7c4:	80 93 45 41 	sts	0x4145, r24	; 0x804145 <_ZZ11__vector_12E24indexConversionInProcess>
     7c8:	89 81       	ldd	r24, Y+1	; 0x01
     7ca:	8f 5f       	subi	r24, 0xFF	; 255
     7cc:	89 83       	std	Y+1, r24	; 0x01
     7ce:	d7 cf       	rjmp	.-82     	; 0x77e <__vector_12+0x188>
     7d0:	80 91 45 41 	lds	r24, 0x4145	; 0x804145 <_ZZ11__vector_12E24indexConversionInProcess>
     7d4:	88 23       	and	r24, r24
     7d6:	0c f4       	brge	.+2      	; 0x7da <__vector_12+0x1e4>
     7d8:	60 c0       	rjmp	.+192    	; 0x89a <__vector_12+0x2a4>
     7da:	88 0f       	add	r24, r24
     7dc:	99 0b       	sbc	r25, r25
     7de:	fc 01       	movw	r30, r24
     7e0:	eb 56       	subi	r30, 0x6B	; 107
     7e2:	ff 4b       	sbci	r31, 0xBF	; 191
     7e4:	20 81       	ld	r18, Z
     7e6:	31 81       	ldd	r19, Z+1	; 0x01
     7e8:	fc 01       	movw	r30, r24
     7ea:	eb 5e       	subi	r30, 0xEB	; 235
     7ec:	ff 4b       	sbci	r31, 0xBF	; 191
     7ee:	20 83       	st	Z, r18
     7f0:	31 83       	std	Z+1, r19	; 0x01
     7f2:	81 e0       	ldi	r24, 0x01	; 1
     7f4:	80 93 44 41 	sts	0x4144, r24	; 0x804144 <_ZZ11__vector_12E19conversionInProcess>
     7f8:	50 c0       	rjmp	.+160    	; 0x89a <__vector_12+0x2a4>
     7fa:	10 92 46 41 	sts	0x4146, r1	; 0x804146 <_ZZ11__vector_12E20holdConversionResult>
     7fe:	10 92 47 41 	sts	0x4147, r1	; 0x804147 <_ZZ11__vector_12E20holdConversionResult+0x1>
     802:	40 91 45 41 	lds	r20, 0x4145	; 0x804145 <_ZZ11__vector_12E24indexConversionInProcess>
     806:	84 2f       	mov	r24, r20
     808:	04 2e       	mov	r0, r20
     80a:	00 0c       	add	r0, r0
     80c:	99 0b       	sbc	r25, r25
     80e:	fc 01       	movw	r30, r24
     810:	ee 0f       	add	r30, r30
     812:	ff 1f       	adc	r31, r31
     814:	eb 5c       	subi	r30, 0xCB	; 203
     816:	fe 4b       	sbci	r31, 0xBE	; 190
     818:	20 81       	ld	r18, Z
     81a:	31 81       	ldd	r19, Z+1	; 0x01
     81c:	fc 01       	movw	r30, r24
     81e:	e0 5d       	subi	r30, 0xD0	; 208
     820:	fe 4b       	sbci	r31, 0xBE	; 190
     822:	51 e0       	ldi	r21, 0x01	; 1
     824:	50 83       	st	Z, r21
     826:	41 11       	cpse	r20, r1
     828:	2d c0       	rjmp	.+90     	; 0x884 <__vector_12+0x28e>
     82a:	fc 01       	movw	r30, r24
     82c:	ee 0f       	add	r30, r30
     82e:	ff 1f       	adc	r31, r31
     830:	e1 56       	subi	r30, 0x61	; 97
     832:	ff 4b       	sbci	r31, 0xBF	; 191
     834:	40 81       	ld	r20, Z
     836:	51 81       	ldd	r21, Z+1	; 0x01
     838:	42 17       	cp	r20, r18
     83a:	53 07       	cpc	r21, r19
     83c:	60 f4       	brcc	.+24     	; 0x856 <__vector_12+0x260>
     83e:	fc 01       	movw	r30, r24
     840:	ee 0f       	add	r30, r30
     842:	ff 1f       	adc	r31, r31
     844:	eb 5e       	subi	r30, 0xEB	; 235
     846:	ff 4b       	sbci	r31, 0xBF	; 191
     848:	24 e6       	ldi	r18, 0x64	; 100
     84a:	30 e0       	ldi	r19, 0x00	; 0
     84c:	20 83       	st	Z, r18
     84e:	31 83       	std	Z+1, r19	; 0x01
     850:	20 e0       	ldi	r18, 0x00	; 0
     852:	30 e0       	ldi	r19, 0x00	; 0
     854:	19 c0       	rjmp	.+50     	; 0x888 <__vector_12+0x292>
     856:	21 15       	cp	r18, r1
     858:	31 05       	cpc	r19, r1
     85a:	11 f0       	breq	.+4      	; 0x860 <__vector_12+0x26a>
     85c:	21 50       	subi	r18, 0x01	; 1
     85e:	31 09       	sbc	r19, r1
     860:	41 e0       	ldi	r20, 0x01	; 1
     862:	40 93 ea 40 	sts	0x40EA, r20	; 0x8040ea <_ZL29g_battery_measurements_active>
     866:	24 37       	cpi	r18, 0x74	; 116
     868:	44 e0       	ldi	r20, 0x04	; 4
     86a:	34 07       	cpc	r19, r20
     86c:	18 f0       	brcs	.+6      	; 0x874 <__vector_12+0x27e>
     86e:	10 92 06 40 	sts	0x4006, r1	; 0x804006 <g_battery_type>
     872:	0a c0       	rjmp	.+20     	; 0x888 <__vector_12+0x292>
     874:	2d 38       	cpi	r18, 0x8D	; 141
     876:	42 e0       	ldi	r20, 0x02	; 2
     878:	34 07       	cpc	r19, r20
     87a:	30 f0       	brcs	.+12     	; 0x888 <__vector_12+0x292>
     87c:	41 e0       	ldi	r20, 0x01	; 1
     87e:	40 93 06 40 	sts	0x4006, r20	; 0x804006 <g_battery_type>
     882:	02 c0       	rjmp	.+4      	; 0x888 <__vector_12+0x292>
     884:	20 e0       	ldi	r18, 0x00	; 0
     886:	30 e0       	ldi	r19, 0x00	; 0
     888:	88 0f       	add	r24, r24
     88a:	99 1f       	adc	r25, r25
     88c:	fc 01       	movw	r30, r24
     88e:	eb 5c       	subi	r30, 0xCB	; 203
     890:	fe 4b       	sbci	r31, 0xBE	; 190
     892:	20 83       	st	Z, r18
     894:	31 83       	std	Z+1, r19	; 0x01
     896:	10 92 44 41 	sts	0x4144, r1	; 0x804144 <_ZZ11__vector_12E19conversionInProcess>
     89a:	81 e0       	ldi	r24, 0x01	; 1
     89c:	80 93 06 0b 	sts	0x0B06, r24	; 0x800b06 <__TEXT_REGION_LENGTH__+0x7e0b06>
     8a0:	23 96       	adiw	r28, 0x03	; 3
     8a2:	cd bf       	out	0x3d, r28	; 61
     8a4:	de bf       	out	0x3e, r29	; 62
     8a6:	df 91       	pop	r29
     8a8:	cf 91       	pop	r28
     8aa:	ff 91       	pop	r31
     8ac:	ef 91       	pop	r30
     8ae:	bf 91       	pop	r27
     8b0:	af 91       	pop	r26
     8b2:	9f 91       	pop	r25
     8b4:	8f 91       	pop	r24
     8b6:	7f 91       	pop	r23
     8b8:	6f 91       	pop	r22
     8ba:	5f 91       	pop	r21
     8bc:	4f 91       	pop	r20
     8be:	3f 91       	pop	r19
     8c0:	2f 91       	pop	r18
     8c2:	0f 90       	pop	r0
     8c4:	0b be       	out	0x3b, r0	; 59
     8c6:	0f 90       	pop	r0
     8c8:	0f be       	out	0x3f, r0	; 63
     8ca:	0f 90       	pop	r0
     8cc:	1f 90       	pop	r1
     8ce:	18 95       	reti

000008d0 <main>:
     8d0:	0e 94 3f 01 	call	0x27e	; 0x27e <atmel_start_init>
     8d4:	81 e3       	ldi	r24, 0x31	; 49
     8d6:	90 e4       	ldi	r25, 0x40	; 64
     8d8:	0e 94 a5 12 	call	0x254a	; 0x254a <_Z17linkbus_send_textPc>
     8dc:	81 e0       	ldi	r24, 0x01	; 1
     8de:	0e 94 b3 0b 	call	0x1766	; 0x1766 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t>
     8e2:	68 ee       	ldi	r22, 0xE8	; 232
     8e4:	73 e0       	ldi	r23, 0x03	; 3
     8e6:	80 e0       	ldi	r24, 0x00	; 0
     8e8:	90 e0       	ldi	r25, 0x00	; 0
     8ea:	0e 94 8c 1b 	call	0x3718	; 0x3718 <util_delay_ms>
     8ee:	88 23       	and	r24, r24
     8f0:	c1 f3       	breq	.-16     	; 0x8e2 <main+0x12>
     8f2:	0e 94 7c 04 	call	0x8f8	; 0x8f8 <_Z17handleLinkBusMsgsv>
     8f6:	f5 cf       	rjmp	.-22     	; 0x8e2 <main+0x12>

000008f8 <_Z17handleLinkBusMsgsv>:
     8f8:	ef 92       	push	r14
     8fa:	ff 92       	push	r15
     8fc:	0f 93       	push	r16
     8fe:	1f 93       	push	r17
     900:	cf 93       	push	r28
     902:	df 93       	push	r29
     904:	cd b7       	in	r28, 0x3d	; 61
     906:	de b7       	in	r29, 0x3e	; 62
     908:	e5 97       	sbiw	r28, 0x35	; 53
     90a:	cd bf       	out	0x3d, r28	; 61
     90c:	de bf       	out	0x3e, r29	; 62
     90e:	81 e0       	ldi	r24, 0x01	; 1
     910:	89 83       	std	Y+1, r24	; 0x01
     912:	0e 94 f5 11 	call	0x23ea	; 0x23ea <_Z16nextFullRxBufferv>
     916:	8c 87       	std	Y+12, r24	; 0x0c
     918:	9d 87       	std	Y+13, r25	; 0x0d
     91a:	21 e0       	ldi	r18, 0x01	; 1
     91c:	8c 85       	ldd	r24, Y+12	; 0x0c
     91e:	9d 85       	ldd	r25, Y+13	; 0x0d
     920:	89 2b       	or	r24, r25
     922:	09 f4       	brne	.+2      	; 0x926 <_Z17handleLinkBusMsgsv+0x2e>
     924:	20 e0       	ldi	r18, 0x00	; 0
     926:	22 23       	and	r18, r18
     928:	09 f4       	brne	.+2      	; 0x92c <_Z17handleLinkBusMsgsv+0x34>
     92a:	91 c6       	rjmp	.+3362   	; 0x164e <_Z17handleLinkBusMsgsv+0xd56>
     92c:	8c 85       	ldd	r24, Y+12	; 0x0c
     92e:	9d 85       	ldd	r25, Y+13	; 0x0d
     930:	fc 01       	movw	r30, r24
     932:	81 81       	ldd	r24, Z+1	; 0x01
     934:	92 81       	ldd	r25, Z+2	; 0x02
     936:	8e 87       	std	Y+14, r24	; 0x0e
     938:	9f 87       	std	Y+15, r25	; 0x0f
     93a:	8e 85       	ldd	r24, Y+14	; 0x0e
     93c:	9f 85       	ldd	r25, Y+15	; 0x0f
     93e:	82 38       	cpi	r24, 0x82	; 130
     940:	fe e1       	ldi	r31, 0x1E	; 30
     942:	9f 07       	cpc	r25, r31
     944:	09 f4       	brne	.+2      	; 0x948 <_Z17handleLinkBusMsgsv+0x50>
     946:	6c c0       	rjmp	.+216    	; 0xa20 <_Z17handleLinkBusMsgsv+0x128>
     948:	83 38       	cpi	r24, 0x83	; 131
     94a:	2e e1       	ldi	r18, 0x1E	; 30
     94c:	92 07       	cpc	r25, r18
     94e:	30 f5       	brcc	.+76     	; 0x99c <_Z17handleLinkBusMsgsv+0xa4>
     950:	81 36       	cpi	r24, 0x61	; 97
     952:	33 e0       	ldi	r19, 0x03	; 3
     954:	93 07       	cpc	r25, r19
     956:	09 f4       	brne	.+2      	; 0x95a <_Z17handleLinkBusMsgsv+0x62>
     958:	e0 c4       	rjmp	.+2496   	; 0x131a <_Z17handleLinkBusMsgsv+0xa22>
     95a:	82 36       	cpi	r24, 0x62	; 98
     95c:	e3 e0       	ldi	r30, 0x03	; 3
     95e:	9e 07       	cpc	r25, r30
     960:	78 f4       	brcc	.+30     	; 0x980 <_Z17handleLinkBusMsgsv+0x88>
     962:	85 31       	cpi	r24, 0x15	; 21
     964:	f3 e0       	ldi	r31, 0x03	; 3
     966:	9f 07       	cpc	r25, r31
     968:	09 f4       	brne	.+2      	; 0x96c <_Z17handleLinkBusMsgsv+0x74>
     96a:	1b c1       	rjmp	.+566    	; 0xba2 <_Z17handleLinkBusMsgsv+0x2aa>
     96c:	8e 31       	cpi	r24, 0x1E	; 30
     96e:	23 e0       	ldi	r18, 0x03	; 3
     970:	92 07       	cpc	r25, r18
     972:	09 f4       	brne	.+2      	; 0x976 <_Z17handleLinkBusMsgsv+0x7e>
     974:	3c c3       	rjmp	.+1656   	; 0xfee <_Z17handleLinkBusMsgsv+0x6f6>
     976:	84 35       	cpi	r24, 0x54	; 84
     978:	91 05       	cpc	r25, r1
     97a:	09 f4       	brne	.+2      	; 0x97e <_Z17handleLinkBusMsgsv+0x86>
     97c:	43 c4       	rjmp	.+2182   	; 0x1204 <_Z17handleLinkBusMsgsv+0x90c>
     97e:	3c c6       	rjmp	.+3192   	; 0x15f8 <_Z17handleLinkBusMsgsv+0xd00>
     980:	8f 3a       	cpi	r24, 0xAF	; 175
     982:	33 e0       	ldi	r19, 0x03	; 3
     984:	93 07       	cpc	r25, r19
     986:	c9 f1       	breq	.+114    	; 0x9fa <_Z17handleLinkBusMsgsv+0x102>
     988:	86 3a       	cpi	r24, 0xA6	; 166
     98a:	ec e1       	ldi	r30, 0x1C	; 28
     98c:	9e 07       	cpc	r25, r30
     98e:	09 f4       	brne	.+2      	; 0x992 <_Z17handleLinkBusMsgsv+0x9a>
     990:	51 c5       	rjmp	.+2722   	; 0x1434 <_Z17handleLinkBusMsgsv+0xb3c>
     992:	84 38       	cpi	r24, 0x84	; 132
     994:	93 40       	sbci	r25, 0x03	; 3
     996:	09 f4       	brne	.+2      	; 0x99a <_Z17handleLinkBusMsgsv+0xa2>
     998:	c3 c1       	rjmp	.+902    	; 0xd20 <_Z17handleLinkBusMsgsv+0x428>
     99a:	2e c6       	rjmp	.+3164   	; 0x15f8 <_Z17handleLinkBusMsgsv+0xd00>
     99c:	8a 39       	cpi	r24, 0x9A	; 154
     99e:	23 e2       	ldi	r18, 0x23	; 35
     9a0:	92 07       	cpc	r25, r18
     9a2:	e9 f1       	breq	.+122    	; 0xa1e <_Z17handleLinkBusMsgsv+0x126>
     9a4:	8b 39       	cpi	r24, 0x9B	; 155
     9a6:	33 e2       	ldi	r19, 0x23	; 35
     9a8:	93 07       	cpc	r25, r19
     9aa:	78 f4       	brcc	.+30     	; 0x9ca <_Z17handleLinkBusMsgsv+0xd2>
     9ac:	8d 3a       	cpi	r24, 0xAD	; 173
     9ae:	e2 e2       	ldi	r30, 0x22	; 34
     9b0:	9e 07       	cpc	r25, r30
     9b2:	09 f4       	brne	.+2      	; 0x9b6 <_Z17handleLinkBusMsgsv+0xbe>
     9b4:	96 c0       	rjmp	.+300    	; 0xae2 <_Z17handleLinkBusMsgsv+0x1ea>
     9b6:	81 3c       	cpi	r24, 0xC1	; 193
     9b8:	f2 e2       	ldi	r31, 0x22	; 34
     9ba:	9f 07       	cpc	r25, r31
     9bc:	09 f4       	brne	.+2      	; 0x9c0 <_Z17handleLinkBusMsgsv+0xc8>
     9be:	ee c0       	rjmp	.+476    	; 0xb9c <_Z17handleLinkBusMsgsv+0x2a4>
     9c0:	81 3d       	cpi	r24, 0xD1	; 209
     9c2:	9e 41       	sbci	r25, 0x1E	; 30
     9c4:	09 f4       	brne	.+2      	; 0x9c8 <_Z17handleLinkBusMsgsv+0xd0>
     9c6:	c0 c4       	rjmp	.+2432   	; 0x1348 <_Z17handleLinkBusMsgsv+0xa50>
     9c8:	17 c6       	rjmp	.+3118   	; 0x15f8 <_Z17handleLinkBusMsgsv+0xd00>
     9ca:	80 3d       	cpi	r24, 0xD0	; 208
     9cc:	33 e2       	ldi	r19, 0x23	; 35
     9ce:	93 07       	cpc	r25, r19
     9d0:	09 f4       	brne	.+2      	; 0x9d4 <_Z17handleLinkBusMsgsv+0xdc>
     9d2:	70 c3       	rjmp	.+1760   	; 0x10b4 <_Z17handleLinkBusMsgsv+0x7bc>
     9d4:	81 3d       	cpi	r24, 0xD1	; 209
     9d6:	e3 e2       	ldi	r30, 0x23	; 35
     9d8:	9e 07       	cpc	r25, r30
     9da:	28 f4       	brcc	.+10     	; 0x9e6 <_Z17handleLinkBusMsgsv+0xee>
     9dc:	8f 3c       	cpi	r24, 0xCF	; 207
     9de:	93 42       	sbci	r25, 0x23	; 35
     9e0:	09 f4       	brne	.+2      	; 0x9e4 <_Z17handleLinkBusMsgsv+0xec>
     9e2:	f0 c5       	rjmp	.+3040   	; 0x15c4 <_Z17handleLinkBusMsgsv+0xccc>
     9e4:	09 c6       	rjmp	.+3090   	; 0x15f8 <_Z17handleLinkBusMsgsv+0xd00>
     9e6:	87 3f       	cpi	r24, 0xF7	; 247
     9e8:	23 e2       	ldi	r18, 0x23	; 35
     9ea:	92 07       	cpc	r25, r18
     9ec:	09 f4       	brne	.+2      	; 0x9f0 <_Z17handleLinkBusMsgsv+0xf8>
     9ee:	0d c2       	rjmp	.+1050   	; 0xe0a <_Z17handleLinkBusMsgsv+0x512>
     9f0:	8c 39       	cpi	r24, 0x9C	; 156
     9f2:	94 42       	sbci	r25, 0x24	; 36
     9f4:	09 f4       	brne	.+2      	; 0x9f8 <_Z17handleLinkBusMsgsv+0x100>
     9f6:	f8 c5       	rjmp	.+3056   	; 0x15e8 <_Z17handleLinkBusMsgsv+0xcf0>
     9f8:	ff c5       	rjmp	.+3070   	; 0x15f8 <_Z17handleLinkBusMsgsv+0xd00>
     9fa:	8c 85       	ldd	r24, Y+12	; 0x0c
     9fc:	9d 85       	ldd	r25, Y+13	; 0x0d
     9fe:	fc 01       	movw	r30, r24
     a00:	83 81       	ldd	r24, Z+3	; 0x03
     a02:	88 23       	and	r24, r24
     a04:	09 f4       	brne	.+2      	; 0xa08 <_Z17handleLinkBusMsgsv+0x110>
     a06:	fe c5       	rjmp	.+3068   	; 0x1604 <_Z17handleLinkBusMsgsv+0xd0c>
     a08:	8c 85       	ldd	r24, Y+12	; 0x0c
     a0a:	9d 85       	ldd	r25, Y+13	; 0x0d
     a0c:	03 96       	adiw	r24, 0x03	; 3
     a0e:	0e 94 88 22 	call	0x4510	; 0x4510 <atoi>
     a12:	88 8b       	std	Y+16, r24	; 0x10
     a14:	0e 94 8a 12 	call	0x2514	; 0x2514 <_Z15linkbus_disablev>
     a18:	10 92 09 40 	sts	0x4009, r1	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
     a1c:	f3 c5       	rjmp	.+3046   	; 0x1604 <_Z17handleLinkBusMsgsv+0xd0c>
     a1e:	ff cf       	rjmp	.-2      	; 0xa1e <_Z17handleLinkBusMsgsv+0x126>
     a20:	8c 85       	ldd	r24, Y+12	; 0x0c
     a22:	9d 85       	ldd	r25, Y+13	; 0x0d
     a24:	fc 01       	movw	r30, r24
     a26:	83 81       	ldd	r24, Z+3	; 0x03
     a28:	89 8b       	std	Y+17, r24	; 0x11
     a2a:	81 e0       	ldi	r24, 0x01	; 1
     a2c:	80 93 0a 40 	sts	0x400A, r24	; 0x80400a <_ZL13g_wifi_active>
     a30:	89 89       	ldd	r24, Y+17	; 0x11
     a32:	8a 35       	cpi	r24, 0x5A	; 90
     a34:	21 f4       	brne	.+8      	; 0xa3e <_Z17handleLinkBusMsgsv+0x146>
     a36:	88 e7       	ldi	r24, 0x78	; 120
     a38:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
     a3c:	e5 c5       	rjmp	.+3018   	; 0x1608 <_Z17handleLinkBusMsgsv+0xd10>
     a3e:	89 89       	ldd	r24, Y+17	; 0x11
     a40:	80 33       	cpi	r24, 0x30	; 48
     a42:	d1 f5       	brne	.+116    	; 0xab8 <_Z17handleLinkBusMsgsv+0x1c0>
     a44:	90 91 2e 41 	lds	r25, 0x412E	; 0x80412e <g_waiting_for_next_event>
     a48:	81 e0       	ldi	r24, 0x01	; 1
     a4a:	99 23       	and	r25, r25
     a4c:	09 f4       	brne	.+2      	; 0xa50 <_Z17handleLinkBusMsgsv+0x158>
     a4e:	80 e0       	ldi	r24, 0x00	; 0
     a50:	88 23       	and	r24, r24
     a52:	39 f0       	breq	.+14     	; 0xa62 <_Z17handleLinkBusMsgsv+0x16a>
     a54:	49 e3       	ldi	r20, 0x39	; 57
     a56:	50 e4       	ldi	r21, 0x40	; 64
     a58:	6b e3       	ldi	r22, 0x3B	; 59
     a5a:	70 e4       	ldi	r23, 0x40	; 64
     a5c:	83 e0       	ldi	r24, 0x03	; 3
     a5e:	0e 94 e6 12 	call	0x25cc	; 0x25cc <_Z11lb_send_msg13LBMessageTypePKcPc>
     a62:	80 e0       	ldi	r24, 0x00	; 0
     a64:	90 e0       	ldi	r25, 0x00	; 0
     a66:	0e 94 18 01 	call	0x230	; 0x230 <time>
     a6a:	dc 01       	movw	r26, r24
     a6c:	cb 01       	movw	r24, r22
     a6e:	2b 2f       	mov	r18, r27
     a70:	2f 93       	push	r18
     a72:	2a 2f       	mov	r18, r26
     a74:	2f 93       	push	r18
     a76:	29 2f       	mov	r18, r25
     a78:	2f 93       	push	r18
     a7a:	8f 93       	push	r24
     a7c:	8f e3       	ldi	r24, 0x3F	; 63
     a7e:	90 e4       	ldi	r25, 0x40	; 64
     a80:	89 2f       	mov	r24, r25
     a82:	8f 93       	push	r24
     a84:	8f e3       	ldi	r24, 0x3F	; 63
     a86:	90 e4       	ldi	r25, 0x40	; 64
     a88:	8f 93       	push	r24
     a8a:	81 ed       	ldi	r24, 0xD1	; 209
     a8c:	90 e4       	ldi	r25, 0x40	; 64
     a8e:	89 2f       	mov	r24, r25
     a90:	8f 93       	push	r24
     a92:	81 ed       	ldi	r24, 0xD1	; 209
     a94:	90 e4       	ldi	r25, 0x40	; 64
     a96:	8f 93       	push	r24
     a98:	0e 94 01 23 	call	0x4602	; 0x4602 <sprintf>
     a9c:	2d b7       	in	r18, 0x3d	; 61
     a9e:	3e b7       	in	r19, 0x3e	; 62
     aa0:	28 5f       	subi	r18, 0xF8	; 248
     aa2:	3f 4f       	sbci	r19, 0xFF	; 255
     aa4:	cd bf       	out	0x3d, r28	; 61
     aa6:	de bf       	out	0x3e, r29	; 62
     aa8:	41 ed       	ldi	r20, 0xD1	; 209
     aaa:	50 e4       	ldi	r21, 0x40	; 64
     aac:	63 e4       	ldi	r22, 0x43	; 67
     aae:	70 e4       	ldi	r23, 0x40	; 64
     ab0:	83 e0       	ldi	r24, 0x03	; 3
     ab2:	0e 94 e6 12 	call	0x25cc	; 0x25cc <_Z11lb_send_msg13LBMessageTypePKcPc>
     ab6:	a8 c5       	rjmp	.+2896   	; 0x1608 <_Z17handleLinkBusMsgsv+0xd10>
     ab8:	89 89       	ldd	r24, Y+17	; 0x11
     aba:	83 33       	cpi	r24, 0x33	; 51
     abc:	09 f0       	breq	.+2      	; 0xac0 <_Z17handleLinkBusMsgsv+0x1c8>
     abe:	a4 c5       	rjmp	.+2888   	; 0x1608 <_Z17handleLinkBusMsgsv+0xd10>
     ac0:	f8 94       	cli
     ac2:	10 92 f2 40 	sts	0x40F2, r1	; 0x8040f2 <_ZL19g_wifi_enable_delay>
     ac6:	81 e0       	ldi	r24, 0x01	; 1
     ac8:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
     acc:	10 92 2e 41 	sts	0x412E, r1	; 0x80412e <g_waiting_for_next_event>
     ad0:	10 92 2d 41 	sts	0x412D, r1	; 0x80412d <g_check_for_next_event>
     ad4:	10 92 0a 40 	sts	0x400A, r1	; 0x80400a <_ZL13g_wifi_active>
     ad8:	81 e0       	ldi	r24, 0x01	; 1
     ada:	80 93 f3 40 	sts	0x40F3, r24	; 0x8040f3 <_ZL20g_shutting_down_wifi>
     ade:	78 94       	sei
     ae0:	93 c5       	rjmp	.+2854   	; 0x1608 <_Z17handleLinkBusMsgsv+0xd10>
     ae2:	8c 85       	ldd	r24, Y+12	; 0x0c
     ae4:	9d 85       	ldd	r25, Y+13	; 0x0d
     ae6:	fc 01       	movw	r30, r24
     ae8:	83 81       	ldd	r24, Z+3	; 0x03
     aea:	88 23       	and	r24, r24
     aec:	09 f4       	brne	.+2      	; 0xaf0 <_Z17handleLinkBusMsgsv+0x1f8>
     aee:	8e c5       	rjmp	.+2844   	; 0x160c <_Z17handleLinkBusMsgsv+0xd14>
     af0:	8c 85       	ldd	r24, Y+12	; 0x0c
     af2:	9d 85       	ldd	r25, Y+13	; 0x0d
     af4:	fc 01       	movw	r30, r24
     af6:	83 81       	ldd	r24, Z+3	; 0x03
     af8:	8d 34       	cpi	r24, 0x4D	; 77
     afa:	a9 f4       	brne	.+42     	; 0xb26 <_Z17handleLinkBusMsgsv+0x22e>
     afc:	8c 85       	ldd	r24, Y+12	; 0x0c
     afe:	9d 85       	ldd	r25, Y+13	; 0x0d
     b00:	fc 01       	movw	r30, r24
     b02:	80 8d       	ldd	r24, Z+24	; 0x18
     b04:	88 23       	and	r24, r24
     b06:	79 f0       	breq	.+30     	; 0xb26 <_Z17handleLinkBusMsgsv+0x22e>
     b08:	8c 85       	ldd	r24, Y+12	; 0x0c
     b0a:	9d 85       	ldd	r25, Y+13	; 0x0d
     b0c:	48 96       	adiw	r24, 0x18	; 24
     b0e:	0e 94 88 22 	call	0x4510	; 0x4510 <atoi>
     b12:	80 93 48 41 	sts	0x4148, r24	; 0x804148 <_ZZ17handleLinkBusMsgsvE6pwr_mW>
     b16:	90 93 49 41 	sts	0x4149, r25	; 0x804149 <_ZZ17handleLinkBusMsgsvE6pwr_mW+0x1>
     b1a:	80 91 4a 41 	lds	r24, 0x414A	; 0x80414a <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
     b1e:	8f 5f       	subi	r24, 0xFF	; 255
     b20:	80 93 4a 41 	sts	0x414A, r24	; 0x80414a <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
     b24:	09 c0       	rjmp	.+18     	; 0xb38 <_Z17handleLinkBusMsgsv+0x240>
     b26:	8c 85       	ldd	r24, Y+12	; 0x0c
     b28:	9d 85       	ldd	r25, Y+13	; 0x0d
     b2a:	03 96       	adiw	r24, 0x03	; 3
     b2c:	0e 94 88 22 	call	0x4510	; 0x4510 <atoi>
     b30:	80 93 48 41 	sts	0x4148, r24	; 0x804148 <_ZZ17handleLinkBusMsgsvE6pwr_mW>
     b34:	90 93 49 41 	sts	0x4149, r25	; 0x804149 <_ZZ17handleLinkBusMsgsvE6pwr_mW+0x1>
     b38:	60 e0       	ldi	r22, 0x00	; 0
     b3a:	70 e0       	ldi	r23, 0x00	; 0
     b3c:	88 e4       	ldi	r24, 0x48	; 72
     b3e:	91 e4       	ldi	r25, 0x41	; 65
     b40:	0e 94 a0 1c 	call	0x3940	; 0x3940 <_Z15txSetParametersPjPh>
     b44:	8a 8b       	std	Y+18, r24	; 0x12
     b46:	8a 89       	ldd	r24, Y+18	; 0x12
     b48:	88 23       	and	r24, r24
     b4a:	19 f0       	breq	.+6      	; 0xb52 <_Z17handleLinkBusMsgsv+0x25a>
     b4c:	8a 89       	ldd	r24, Y+18	; 0x12
     b4e:	80 93 e6 40 	sts	0x40E6, r24	; 0x8040e6 <_ZL17g_last_error_code>
     b52:	80 91 48 41 	lds	r24, 0x4148	; 0x804148 <_ZZ17handleLinkBusMsgsvE6pwr_mW>
     b56:	90 91 49 41 	lds	r25, 0x4149	; 0x804149 <_ZZ17handleLinkBusMsgsvE6pwr_mW+0x1>
     b5a:	29 2f       	mov	r18, r25
     b5c:	2f 93       	push	r18
     b5e:	8f 93       	push	r24
     b60:	87 e4       	ldi	r24, 0x47	; 71
     b62:	90 e4       	ldi	r25, 0x40	; 64
     b64:	89 2f       	mov	r24, r25
     b66:	8f 93       	push	r24
     b68:	87 e4       	ldi	r24, 0x47	; 71
     b6a:	90 e4       	ldi	r25, 0x40	; 64
     b6c:	8f 93       	push	r24
     b6e:	81 ed       	ldi	r24, 0xD1	; 209
     b70:	90 e4       	ldi	r25, 0x40	; 64
     b72:	89 2f       	mov	r24, r25
     b74:	8f 93       	push	r24
     b76:	81 ed       	ldi	r24, 0xD1	; 209
     b78:	90 e4       	ldi	r25, 0x40	; 64
     b7a:	8f 93       	push	r24
     b7c:	0e 94 01 23 	call	0x4602	; 0x4602 <sprintf>
     b80:	0f 90       	pop	r0
     b82:	0f 90       	pop	r0
     b84:	0f 90       	pop	r0
     b86:	0f 90       	pop	r0
     b88:	0f 90       	pop	r0
     b8a:	0f 90       	pop	r0
     b8c:	41 ed       	ldi	r20, 0xD1	; 209
     b8e:	50 e4       	ldi	r21, 0x40	; 64
     b90:	6c e4       	ldi	r22, 0x4C	; 76
     b92:	70 e4       	ldi	r23, 0x40	; 64
     b94:	83 e0       	ldi	r24, 0x03	; 3
     b96:	0e 94 e6 12 	call	0x25cc	; 0x25cc <_Z11lb_send_msg13LBMessageTypePKcPc>
     b9a:	38 c5       	rjmp	.+2672   	; 0x160c <_Z17handleLinkBusMsgsv+0xd14>
     b9c:	0e 94 15 1d 	call	0x3a2a	; 0x3a2a <_Z22storeTransmitterValuesv>
     ba0:	48 c5       	rjmp	.+2704   	; 0x1632 <_Z17handleLinkBusMsgsv+0xd3a>
     ba2:	8c 85       	ldd	r24, Y+12	; 0x0c
     ba4:	9d 85       	ldd	r25, Y+13	; 0x0d
     ba6:	fc 01       	movw	r30, r24
     ba8:	83 81       	ldd	r24, Z+3	; 0x03
     baa:	8b 8b       	std	Y+19, r24	; 0x13
     bac:	8b 89       	ldd	r24, Y+19	; 0x13
     bae:	81 33       	cpi	r24, 0x31	; 49
     bb0:	21 f0       	breq	.+8      	; 0xbba <_Z17handleLinkBusMsgsv+0x2c2>
     bb2:	8b 89       	ldd	r24, Y+19	; 0x13
     bb4:	82 33       	cpi	r24, 0x32	; 50
     bb6:	09 f0       	breq	.+2      	; 0xbba <_Z17handleLinkBusMsgsv+0x2c2>
     bb8:	a7 c0       	rjmp	.+334    	; 0xd08 <_Z17handleLinkBusMsgsv+0x410>
     bba:	0e 94 35 1e 	call	0x3c6a	; 0x3c6a <_Z18txIsAntennaForBandv>
     bbe:	88 23       	and	r24, r24
     bc0:	31 f4       	brne	.+12     	; 0xbce <_Z17handleLinkBusMsgsv+0x2d6>
     bc2:	80 91 30 40 	lds	r24, 0x4030	; 0x804030 <g_tx_power_is_zero>
     bc6:	88 23       	and	r24, r24
     bc8:	11 f4       	brne	.+4      	; 0xbce <_Z17handleLinkBusMsgsv+0x2d6>
     bca:	81 e0       	ldi	r24, 0x01	; 1
     bcc:	01 c0       	rjmp	.+2      	; 0xbd0 <_Z17handleLinkBusMsgsv+0x2d8>
     bce:	80 e0       	ldi	r24, 0x00	; 0
     bd0:	88 23       	and	r24, r24
     bd2:	21 f0       	breq	.+8      	; 0xbdc <_Z17handleLinkBusMsgsv+0x2e4>
     bd4:	87 ef       	ldi	r24, 0xF7	; 247
     bd6:	80 93 e6 40 	sts	0x40E6, r24	; 0x8040e6 <_ZL17g_last_error_code>
     bda:	a0 c0       	rjmp	.+320    	; 0xd1c <_Z17handleLinkBusMsgsv+0x424>
     bdc:	8b 89       	ldd	r24, Y+19	; 0x13
     bde:	81 33       	cpi	r24, 0x31	; 49
     be0:	09 f0       	breq	.+2      	; 0xbe4 <_Z17handleLinkBusMsgsv+0x2ec>
     be2:	64 c0       	rjmp	.+200    	; 0xcac <_Z17handleLinkBusMsgsv+0x3b4>
     be4:	0e 94 35 1e 	call	0x3c6a	; 0x3c6a <_Z18txIsAntennaForBandv>
     be8:	88 23       	and	r24, r24
     bea:	21 f4       	brne	.+8      	; 0xbf4 <_Z17handleLinkBusMsgsv+0x2fc>
     bec:	80 91 30 40 	lds	r24, 0x4030	; 0x804030 <g_tx_power_is_zero>
     bf0:	88 23       	and	r24, r24
     bf2:	11 f0       	breq	.+4      	; 0xbf8 <_Z17handleLinkBusMsgsv+0x300>
     bf4:	81 e0       	ldi	r24, 0x01	; 1
     bf6:	01 c0       	rjmp	.+2      	; 0xbfa <_Z17handleLinkBusMsgsv+0x302>
     bf8:	80 e0       	ldi	r24, 0x00	; 0
     bfa:	88 23       	and	r24, r24
     bfc:	09 f4       	brne	.+2      	; 0xc00 <_Z17handleLinkBusMsgsv+0x308>
     bfe:	52 c0       	rjmp	.+164    	; 0xca4 <_Z17handleLinkBusMsgsv+0x3ac>
     c00:	f8 94       	cli
     c02:	81 e0       	ldi	r24, 0x01	; 1
     c04:	8d a7       	std	Y+45, r24	; 0x2d
     c06:	ce 01       	movw	r24, r28
     c08:	8d 96       	adiw	r24, 0x2d	; 45
     c0a:	40 e0       	ldi	r20, 0x00	; 0
     c0c:	50 e0       	ldi	r21, 0x00	; 0
     c0e:	bc 01       	movw	r22, r24
     c10:	85 ef       	ldi	r24, 0xF5	; 245
     c12:	90 e4       	ldi	r25, 0x40	; 64
     c14:	0e 94 51 14 	call	0x28a2	; 0x28a2 <_Z9makeMorsePcPhS0_>
     c18:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
     c1c:	0e 94 32 0b 	call	0x1664	; 0x1664 <_Z13throttleValueh>
     c20:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
     c24:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
     c28:	78 94       	sei
     c2a:	81 e0       	ldi	r24, 0x01	; 1
     c2c:	90 e0       	ldi	r25, 0x00	; 0
     c2e:	a0 e0       	ldi	r26, 0x00	; 0
     c30:	b0 e0       	ldi	r27, 0x00	; 0
     c32:	80 93 23 41 	sts	0x4123, r24	; 0x804123 <g_event_start_time>
     c36:	90 93 24 41 	sts	0x4124, r25	; 0x804124 <g_event_start_time+0x1>
     c3a:	a0 93 25 41 	sts	0x4125, r26	; 0x804125 <g_event_start_time+0x2>
     c3e:	b0 93 26 41 	sts	0x4126, r27	; 0x804126 <g_event_start_time+0x3>
     c42:	8f ef       	ldi	r24, 0xFF	; 255
     c44:	9f ef       	ldi	r25, 0xFF	; 255
     c46:	dc 01       	movw	r26, r24
     c48:	80 93 27 41 	sts	0x4127, r24	; 0x804127 <g_event_finish_time>
     c4c:	90 93 28 41 	sts	0x4128, r25	; 0x804128 <g_event_finish_time+0x1>
     c50:	a0 93 29 41 	sts	0x4129, r26	; 0x804129 <g_event_finish_time+0x2>
     c54:	b0 93 2a 41 	sts	0x412A, r27	; 0x80412a <g_event_finish_time+0x3>
     c58:	8f e0       	ldi	r24, 0x0F	; 15
     c5a:	97 e2       	ldi	r25, 0x27	; 39
     c5c:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_on_air_seconds>
     c60:	90 93 0e 40 	sts	0x400E, r25	; 0x80400e <g_on_air_seconds+0x1>
     c64:	10 92 0f 40 	sts	0x400F, r1	; 0x80400f <g_off_air_seconds>
     c68:	10 92 10 40 	sts	0x4010, r1	; 0x804010 <g_off_air_seconds+0x1>
     c6c:	8f e0       	ldi	r24, 0x0F	; 15
     c6e:	97 e2       	ldi	r25, 0x27	; 39
     c70:	a0 e0       	ldi	r26, 0x00	; 0
     c72:	b0 e0       	ldi	r27, 0x00	; 0
     c74:	80 93 ec 40 	sts	0x40EC, r24	; 0x8040ec <_ZL12g_on_the_air>
     c78:	90 93 ed 40 	sts	0x40ED, r25	; 0x8040ed <_ZL12g_on_the_air+0x1>
     c7c:	a0 93 ee 40 	sts	0x40EE, r26	; 0x8040ee <_ZL12g_on_the_air+0x2>
     c80:	b0 93 ef 40 	sts	0x40EF, r27	; 0x8040ef <_ZL12g_on_the_air+0x3>
     c84:	8f ef       	ldi	r24, 0xFF	; 255
     c86:	9f ef       	ldi	r25, 0xFF	; 255
     c88:	80 93 f0 40 	sts	0x40F0, r24	; 0x8040f0 <_ZL26g_sendID_seconds_countdown>
     c8c:	90 93 f1 40 	sts	0x40F1, r25	; 0x8040f1 <_ZL26g_sendID_seconds_countdown+0x1>
     c90:	81 e0       	ldi	r24, 0x01	; 1
     c92:	80 93 2c 41 	sts	0x412C, r24	; 0x80412c <g_event_commenced>
     c96:	81 e0       	ldi	r24, 0x01	; 1
     c98:	80 93 2b 41 	sts	0x412B, r24	; 0x80412b <g_event_enabled>
     c9c:	8d ef       	ldi	r24, 0xFD	; 253
     c9e:	80 93 e7 40 	sts	0x40E7, r24	; 0x8040e7 <_ZL18g_last_status_code>
     ca2:	3c c0       	rjmp	.+120    	; 0xd1c <_Z17handleLinkBusMsgsv+0x424>
     ca4:	87 ef       	ldi	r24, 0xF7	; 247
     ca6:	80 93 e6 40 	sts	0x40E6, r24	; 0x8040e6 <_ZL17g_last_error_code>
     caa:	38 c0       	rjmp	.+112    	; 0xd1c <_Z17handleLinkBusMsgsv+0x424>
     cac:	8b 89       	ldd	r24, Y+19	; 0x13
     cae:	82 33       	cpi	r24, 0x32	; 50
     cb0:	a9 f5       	brne	.+106    	; 0xd1c <_Z17handleLinkBusMsgsv+0x424>
     cb2:	80 91 4a 41 	lds	r24, 0x414A	; 0x80414a <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
     cb6:	8e 30       	cpi	r24, 0x0E	; 14
     cb8:	20 f4       	brcc	.+8      	; 0xcc2 <_Z17handleLinkBusMsgsv+0x3ca>
     cba:	8d ec       	ldi	r24, 0xCD	; 205
     cbc:	80 93 e6 40 	sts	0x40E6, r24	; 0x8040e6 <_ZL17g_last_error_code>
     cc0:	2d c0       	rjmp	.+90     	; 0xd1c <_Z17handleLinkBusMsgsv+0x424>
     cc2:	1e a6       	std	Y+46, r1	; 0x2e
     cc4:	ce 01       	movw	r24, r28
     cc6:	8e 96       	adiw	r24, 0x2e	; 46
     cc8:	0e 94 35 0b 	call	0x166a	; 0x166a <_Z11launchEventP2SC>
     ccc:	80 93 4b 41 	sts	0x414B, r24	; 0x80414b <_ZZ17handleLinkBusMsgsvE2ec>
     cd0:	80 91 2f 41 	lds	r24, 0x412F	; 0x80412f <_ZL13g_go_to_sleep>
     cd4:	88 23       	and	r24, r24
     cd6:	31 f0       	breq	.+12     	; 0xce4 <_Z17handleLinkBusMsgsv+0x3ec>
     cd8:	80 91 f4 40 	lds	r24, 0x40F4	; 0x8040f4 <_ZL11g_sleepType>
     cdc:	88 23       	and	r24, r24
     cde:	11 f0       	breq	.+4      	; 0xce4 <_Z17handleLinkBusMsgsv+0x3ec>
     ce0:	81 e0       	ldi	r24, 0x01	; 1
     ce2:	01 c0       	rjmp	.+2      	; 0xce6 <_Z17handleLinkBusMsgsv+0x3ee>
     ce4:	80 e0       	ldi	r24, 0x00	; 0
     ce6:	88 23       	and	r24, r24
     ce8:	29 f0       	breq	.+10     	; 0xcf4 <_Z17handleLinkBusMsgsv+0x3fc>
     cea:	83 e0       	ldi	r24, 0x03	; 3
     cec:	80 93 f4 40 	sts	0x40F4, r24	; 0x8040f4 <_ZL11g_sleepType>
     cf0:	10 92 2f 41 	sts	0x412F, r1	; 0x80412f <_ZL13g_go_to_sleep>
     cf4:	8c e3       	ldi	r24, 0x3C	; 60
     cf6:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
     cfa:	80 91 4b 41 	lds	r24, 0x414B	; 0x80414b <_ZZ17handleLinkBusMsgsvE2ec>
     cfe:	88 23       	and	r24, r24
     d00:	69 f4       	brne	.+26     	; 0xd1c <_Z17handleLinkBusMsgsv+0x424>
     d02:	0e 94 15 1d 	call	0x3a2a	; 0x3a2a <_Z22storeTransmitterValuesv>
     d06:	0a c0       	rjmp	.+20     	; 0xd1c <_Z17handleLinkBusMsgsv+0x424>
     d08:	8b 89       	ldd	r24, Y+19	; 0x13
     d0a:	80 33       	cpi	r24, 0x30	; 48
     d0c:	09 f0       	breq	.+2      	; 0xd10 <_Z17handleLinkBusMsgsv+0x418>
     d0e:	80 c4       	rjmp	.+2304   	; 0x1610 <_Z17handleLinkBusMsgsv+0xd18>
     d10:	10 92 4a 41 	sts	0x414A, r1	; 0x80414a <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
     d14:	8c ee       	ldi	r24, 0xEC	; 236
     d16:	80 93 e7 40 	sts	0x40E7, r24	; 0x8040e7 <_ZL18g_last_status_code>
     d1a:	7a c4       	rjmp	.+2292   	; 0x1610 <_Z17handleLinkBusMsgsv+0xd18>
     d1c:	00 00       	nop
     d1e:	78 c4       	rjmp	.+2288   	; 0x1610 <_Z17handleLinkBusMsgsv+0xd18>
     d20:	1a 82       	std	Y+2, r1	; 0x02
     d22:	1b 82       	std	Y+3, r1	; 0x03
     d24:	1c 82       	std	Y+4, r1	; 0x04
     d26:	1d 82       	std	Y+5, r1	; 0x05
     d28:	8c 85       	ldd	r24, Y+12	; 0x0c
     d2a:	9d 85       	ldd	r25, Y+13	; 0x0d
     d2c:	fc 01       	movw	r30, r24
     d2e:	83 81       	ldd	r24, Z+3	; 0x03
     d30:	83 35       	cpi	r24, 0x53	; 83
     d32:	c1 f5       	brne	.+112    	; 0xda4 <_Z17handleLinkBusMsgsv+0x4ac>
     d34:	8c 85       	ldd	r24, Y+12	; 0x0c
     d36:	9d 85       	ldd	r25, Y+13	; 0x0d
     d38:	fc 01       	movw	r30, r24
     d3a:	80 8d       	ldd	r24, Z+24	; 0x18
     d3c:	88 23       	and	r24, r24
     d3e:	59 f0       	breq	.+22     	; 0xd56 <_Z17handleLinkBusMsgsv+0x45e>
     d40:	8c 85       	ldd	r24, Y+12	; 0x0c
     d42:	9d 85       	ldd	r25, Y+13	; 0x0d
     d44:	48 96       	adiw	r24, 0x18	; 24
     d46:	0e 94 a6 22 	call	0x454c	; 0x454c <atol>
     d4a:	dc 01       	movw	r26, r24
     d4c:	cb 01       	movw	r24, r22
     d4e:	8a 83       	std	Y+2, r24	; 0x02
     d50:	9b 83       	std	Y+3, r25	; 0x03
     d52:	ac 83       	std	Y+4, r26	; 0x04
     d54:	bd 83       	std	Y+5, r27	; 0x05
     d56:	8a 81       	ldd	r24, Y+2	; 0x02
     d58:	9b 81       	ldd	r25, Y+3	; 0x03
     d5a:	ac 81       	ldd	r26, Y+4	; 0x04
     d5c:	bd 81       	ldd	r27, Y+5	; 0x05
     d5e:	89 2b       	or	r24, r25
     d60:	8a 2b       	or	r24, r26
     d62:	8b 2b       	or	r24, r27
     d64:	09 f4       	brne	.+2      	; 0xd68 <_Z17handleLinkBusMsgsv+0x470>
     d66:	56 c4       	rjmp	.+2220   	; 0x1614 <_Z17handleLinkBusMsgsv+0xd1c>
     d68:	8a 81       	ldd	r24, Y+2	; 0x02
     d6a:	9b 81       	ldd	r25, Y+3	; 0x03
     d6c:	ac 81       	ldd	r26, Y+4	; 0x04
     d6e:	bd 81       	ldd	r27, Y+5	; 0x05
     d70:	80 93 23 41 	sts	0x4123, r24	; 0x804123 <g_event_start_time>
     d74:	90 93 24 41 	sts	0x4124, r25	; 0x804124 <g_event_start_time+0x1>
     d78:	a0 93 25 41 	sts	0x4125, r26	; 0x804125 <g_event_start_time+0x2>
     d7c:	b0 93 26 41 	sts	0x4126, r27	; 0x804126 <g_event_start_time+0x3>
     d80:	f8 94       	cli
     d82:	80 e0       	ldi	r24, 0x00	; 0
     d84:	90 e0       	ldi	r25, 0x00	; 0
     d86:	0e 94 84 0d 	call	0x1b08	; 0x1b08 <_Z16ds3231_get_epochP2EC>
     d8a:	dc 01       	movw	r26, r24
     d8c:	cb 01       	movw	r24, r22
     d8e:	bc 01       	movw	r22, r24
     d90:	cd 01       	movw	r24, r26
     d92:	0e 94 0c 01 	call	0x218	; 0x218 <set_system_time>
     d96:	78 94       	sei
     d98:	80 91 4a 41 	lds	r24, 0x414A	; 0x80414a <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
     d9c:	8f 5f       	subi	r24, 0xFF	; 255
     d9e:	80 93 4a 41 	sts	0x414A, r24	; 0x80414a <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
     da2:	38 c4       	rjmp	.+2160   	; 0x1614 <_Z17handleLinkBusMsgsv+0xd1c>
     da4:	8c 85       	ldd	r24, Y+12	; 0x0c
     da6:	9d 85       	ldd	r25, Y+13	; 0x0d
     da8:	fc 01       	movw	r30, r24
     daa:	83 81       	ldd	r24, Z+3	; 0x03
     dac:	86 34       	cpi	r24, 0x46	; 70
     dae:	09 f0       	breq	.+2      	; 0xdb2 <_Z17handleLinkBusMsgsv+0x4ba>
     db0:	31 c4       	rjmp	.+2146   	; 0x1614 <_Z17handleLinkBusMsgsv+0xd1c>
     db2:	8c 85       	ldd	r24, Y+12	; 0x0c
     db4:	9d 85       	ldd	r25, Y+13	; 0x0d
     db6:	fc 01       	movw	r30, r24
     db8:	80 8d       	ldd	r24, Z+24	; 0x18
     dba:	88 23       	and	r24, r24
     dbc:	59 f0       	breq	.+22     	; 0xdd4 <_Z17handleLinkBusMsgsv+0x4dc>
     dbe:	8c 85       	ldd	r24, Y+12	; 0x0c
     dc0:	9d 85       	ldd	r25, Y+13	; 0x0d
     dc2:	48 96       	adiw	r24, 0x18	; 24
     dc4:	0e 94 a6 22 	call	0x454c	; 0x454c <atol>
     dc8:	dc 01       	movw	r26, r24
     dca:	cb 01       	movw	r24, r22
     dcc:	8a 83       	std	Y+2, r24	; 0x02
     dce:	9b 83       	std	Y+3, r25	; 0x03
     dd0:	ac 83       	std	Y+4, r26	; 0x04
     dd2:	bd 83       	std	Y+5, r27	; 0x05
     dd4:	8a 81       	ldd	r24, Y+2	; 0x02
     dd6:	9b 81       	ldd	r25, Y+3	; 0x03
     dd8:	ac 81       	ldd	r26, Y+4	; 0x04
     dda:	bd 81       	ldd	r27, Y+5	; 0x05
     ddc:	89 2b       	or	r24, r25
     dde:	8a 2b       	or	r24, r26
     de0:	8b 2b       	or	r24, r27
     de2:	09 f4       	brne	.+2      	; 0xde6 <_Z17handleLinkBusMsgsv+0x4ee>
     de4:	17 c4       	rjmp	.+2094   	; 0x1614 <_Z17handleLinkBusMsgsv+0xd1c>
     de6:	8a 81       	ldd	r24, Y+2	; 0x02
     de8:	9b 81       	ldd	r25, Y+3	; 0x03
     dea:	ac 81       	ldd	r26, Y+4	; 0x04
     dec:	bd 81       	ldd	r27, Y+5	; 0x05
     dee:	80 93 27 41 	sts	0x4127, r24	; 0x804127 <g_event_finish_time>
     df2:	90 93 28 41 	sts	0x4128, r25	; 0x804128 <g_event_finish_time+0x1>
     df6:	a0 93 29 41 	sts	0x4129, r26	; 0x804129 <g_event_finish_time+0x2>
     dfa:	b0 93 2a 41 	sts	0x412A, r27	; 0x80412a <g_event_finish_time+0x3>
     dfe:	80 91 4a 41 	lds	r24, 0x414A	; 0x80414a <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
     e02:	8f 5f       	subi	r24, 0xFF	; 255
     e04:	80 93 4a 41 	sts	0x414A, r24	; 0x80414a <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
     e08:	05 c4       	rjmp	.+2058   	; 0x1614 <_Z17handleLinkBusMsgsv+0xd1c>
     e0a:	81 e0       	ldi	r24, 0x01	; 1
     e0c:	80 93 0a 40 	sts	0x400A, r24	; 0x80400a <_ZL13g_wifi_active>
     e10:	8c 85       	ldd	r24, Y+12	; 0x0c
     e12:	9d 85       	ldd	r25, Y+13	; 0x0d
     e14:	fc 01       	movw	r30, r24
     e16:	80 81       	ld	r24, Z
     e18:	81 30       	cpi	r24, 0x01	; 1
     e1a:	09 f0       	breq	.+2      	; 0xe1e <_Z17handleLinkBusMsgsv+0x526>
     e1c:	4b c0       	rjmp	.+150    	; 0xeb4 <_Z17handleLinkBusMsgsv+0x5bc>
     e1e:	8c 85       	ldd	r24, Y+12	; 0x0c
     e20:	9d 85       	ldd	r25, Y+13	; 0x0d
     e22:	fc 01       	movw	r30, r24
     e24:	83 81       	ldd	r24, Z+3	; 0x03
     e26:	88 23       	and	r24, r24
     e28:	d1 f0       	breq	.+52     	; 0xe5e <_Z17handleLinkBusMsgsv+0x566>
     e2a:	8c 85       	ldd	r24, Y+12	; 0x0c
     e2c:	9d 85       	ldd	r25, Y+13	; 0x0d
     e2e:	03 96       	adiw	r24, 0x03	; 3
     e30:	44 e1       	ldi	r20, 0x14	; 20
     e32:	50 e0       	ldi	r21, 0x00	; 0
     e34:	bc 01       	movw	r22, r24
     e36:	81 ed       	ldi	r24, 0xD1	; 209
     e38:	90 e4       	ldi	r25, 0x40	; 64
     e3a:	0e 94 d5 22 	call	0x45aa	; 0x45aa <strncpy>
     e3e:	60 e0       	ldi	r22, 0x00	; 0
     e40:	81 ed       	ldi	r24, 0xD1	; 209
     e42:	90 e4       	ldi	r25, 0x40	; 64
     e44:	0e 94 f9 0e 	call	0x1df2	; 0x1df2 <_Z20ds3231_set_date_timePc12ClockSetting>
     e48:	80 e0       	ldi	r24, 0x00	; 0
     e4a:	90 e0       	ldi	r25, 0x00	; 0
     e4c:	0e 94 84 0d 	call	0x1b08	; 0x1b08 <_Z16ds3231_get_epochP2EC>
     e50:	dc 01       	movw	r26, r24
     e52:	cb 01       	movw	r24, r22
     e54:	bc 01       	movw	r22, r24
     e56:	cd 01       	movw	r24, r26
     e58:	0e 94 0c 01 	call	0x218	; 0x218 <set_system_time>
     e5c:	dd c3       	rjmp	.+1978   	; 0x1618 <_Z17handleLinkBusMsgsv+0xd20>
     e5e:	80 e0       	ldi	r24, 0x00	; 0
     e60:	90 e0       	ldi	r25, 0x00	; 0
     e62:	0e 94 18 01 	call	0x230	; 0x230 <time>
     e66:	dc 01       	movw	r26, r24
     e68:	cb 01       	movw	r24, r22
     e6a:	2b 2f       	mov	r18, r27
     e6c:	2f 93       	push	r18
     e6e:	2a 2f       	mov	r18, r26
     e70:	2f 93       	push	r18
     e72:	29 2f       	mov	r18, r25
     e74:	2f 93       	push	r18
     e76:	8f 93       	push	r24
     e78:	8f e3       	ldi	r24, 0x3F	; 63
     e7a:	90 e4       	ldi	r25, 0x40	; 64
     e7c:	89 2f       	mov	r24, r25
     e7e:	8f 93       	push	r24
     e80:	8f e3       	ldi	r24, 0x3F	; 63
     e82:	90 e4       	ldi	r25, 0x40	; 64
     e84:	8f 93       	push	r24
     e86:	81 ed       	ldi	r24, 0xD1	; 209
     e88:	90 e4       	ldi	r25, 0x40	; 64
     e8a:	89 2f       	mov	r24, r25
     e8c:	8f 93       	push	r24
     e8e:	81 ed       	ldi	r24, 0xD1	; 209
     e90:	90 e4       	ldi	r25, 0x40	; 64
     e92:	8f 93       	push	r24
     e94:	0e 94 01 23 	call	0x4602	; 0x4602 <sprintf>
     e98:	2d b7       	in	r18, 0x3d	; 61
     e9a:	3e b7       	in	r19, 0x3e	; 62
     e9c:	28 5f       	subi	r18, 0xF8	; 248
     e9e:	3f 4f       	sbci	r19, 0xFF	; 255
     ea0:	cd bf       	out	0x3d, r28	; 61
     ea2:	de bf       	out	0x3e, r29	; 62
     ea4:	41 ed       	ldi	r20, 0xD1	; 209
     ea6:	50 e4       	ldi	r21, 0x40	; 64
     ea8:	63 e4       	ldi	r22, 0x43	; 67
     eaa:	70 e4       	ldi	r23, 0x40	; 64
     eac:	83 e0       	ldi	r24, 0x03	; 3
     eae:	0e 94 e6 12 	call	0x25cc	; 0x25cc <_Z11lb_send_msg13LBMessageTypePKcPc>
     eb2:	b2 c3       	rjmp	.+1892   	; 0x1618 <_Z17handleLinkBusMsgsv+0xd20>
     eb4:	8c 85       	ldd	r24, Y+12	; 0x0c
     eb6:	9d 85       	ldd	r25, Y+13	; 0x0d
     eb8:	fc 01       	movw	r30, r24
     eba:	80 81       	ld	r24, Z
     ebc:	82 30       	cpi	r24, 0x02	; 2
     ebe:	09 f0       	breq	.+2      	; 0xec2 <_Z17handleLinkBusMsgsv+0x5ca>
     ec0:	ab c3       	rjmp	.+1878   	; 0x1618 <_Z17handleLinkBusMsgsv+0xd20>
     ec2:	8c 85       	ldd	r24, Y+12	; 0x0c
     ec4:	9d 85       	ldd	r25, Y+13	; 0x0d
     ec6:	fc 01       	movw	r30, r24
     ec8:	83 81       	ldd	r24, Z+3	; 0x03
     eca:	88 35       	cpi	r24, 0x58	; 88
     ecc:	d1 f5       	brne	.+116    	; 0xf42 <_Z17handleLinkBusMsgsv+0x64a>
     ece:	1f a6       	std	Y+47, r1	; 0x2f
     ed0:	8c 85       	ldd	r24, Y+12	; 0x0c
     ed2:	9d 85       	ldd	r25, Y+13	; 0x0d
     ed4:	fc 01       	movw	r30, r24
     ed6:	80 8d       	ldd	r24, Z+24	; 0x18
     ed8:	88 23       	and	r24, r24
     eda:	59 f0       	breq	.+22     	; 0xef2 <_Z17handleLinkBusMsgsv+0x5fa>
     edc:	8c 85       	ldd	r24, Y+12	; 0x0c
     ede:	9d 85       	ldd	r25, Y+13	; 0x0d
     ee0:	48 96       	adiw	r24, 0x18	; 24
     ee2:	0e 94 88 22 	call	0x4510	; 0x4510 <atoi>
     ee6:	8f a7       	std	Y+47, r24	; 0x2f
     ee8:	ce 01       	movw	r24, r28
     eea:	8f 96       	adiw	r24, 0x2f	; 47
     eec:	0e 94 78 0f 	call	0x1ef0	; 0x1ef0 <_Z16ds3231_set_agingPa>
     ef0:	93 c3       	rjmp	.+1830   	; 0x1618 <_Z17handleLinkBusMsgsv+0xd20>
     ef2:	0e 94 8d 0f 	call	0x1f1a	; 0x1f1a <_Z16ds3231_get_agingv>
     ef6:	8f a7       	std	Y+47, r24	; 0x2f
     ef8:	8f a5       	ldd	r24, Y+47	; 0x2f
     efa:	08 2e       	mov	r0, r24
     efc:	00 0c       	add	r0, r0
     efe:	99 0b       	sbc	r25, r25
     f00:	29 2f       	mov	r18, r25
     f02:	2f 93       	push	r18
     f04:	8f 93       	push	r24
     f06:	80 e5       	ldi	r24, 0x50	; 80
     f08:	90 e4       	ldi	r25, 0x40	; 64
     f0a:	89 2f       	mov	r24, r25
     f0c:	8f 93       	push	r24
     f0e:	80 e5       	ldi	r24, 0x50	; 80
     f10:	90 e4       	ldi	r25, 0x40	; 64
     f12:	8f 93       	push	r24
     f14:	81 ed       	ldi	r24, 0xD1	; 209
     f16:	90 e4       	ldi	r25, 0x40	; 64
     f18:	89 2f       	mov	r24, r25
     f1a:	8f 93       	push	r24
     f1c:	81 ed       	ldi	r24, 0xD1	; 209
     f1e:	90 e4       	ldi	r25, 0x40	; 64
     f20:	8f 93       	push	r24
     f22:	0e 94 01 23 	call	0x4602	; 0x4602 <sprintf>
     f26:	0f 90       	pop	r0
     f28:	0f 90       	pop	r0
     f2a:	0f 90       	pop	r0
     f2c:	0f 90       	pop	r0
     f2e:	0f 90       	pop	r0
     f30:	0f 90       	pop	r0
     f32:	41 ed       	ldi	r20, 0xD1	; 209
     f34:	50 e4       	ldi	r21, 0x40	; 64
     f36:	63 e4       	ldi	r22, 0x43	; 67
     f38:	70 e4       	ldi	r23, 0x40	; 64
     f3a:	83 e0       	ldi	r24, 0x03	; 3
     f3c:	0e 94 e6 12 	call	0x25cc	; 0x25cc <_Z11lb_send_msg13LBMessageTypePKcPc>
     f40:	6b c3       	rjmp	.+1750   	; 0x1618 <_Z17handleLinkBusMsgsv+0xd20>
     f42:	80 e0       	ldi	r24, 0x00	; 0
     f44:	90 e0       	ldi	r25, 0x00	; 0
     f46:	0e 94 84 0d 	call	0x1b08	; 0x1b08 <_Z16ds3231_get_epochP2EC>
     f4a:	dc 01       	movw	r26, r24
     f4c:	cb 01       	movw	r24, r22
     f4e:	8c 8b       	std	Y+20, r24	; 0x14
     f50:	9d 8b       	std	Y+21, r25	; 0x15
     f52:	ae 8b       	std	Y+22, r26	; 0x16
     f54:	bf 8b       	std	Y+23, r27	; 0x17
     f56:	8c 89       	ldd	r24, Y+20	; 0x14
     f58:	9d 89       	ldd	r25, Y+21	; 0x15
     f5a:	ae 89       	ldd	r26, Y+22	; 0x16
     f5c:	bf 89       	ldd	r27, Y+23	; 0x17
     f5e:	bc 01       	movw	r22, r24
     f60:	cd 01       	movw	r24, r26
     f62:	0e 94 0c 01 	call	0x218	; 0x218 <set_system_time>
     f66:	80 91 4c 41 	lds	r24, 0x414C	; 0x80414c <_ZZ17handleLinkBusMsgsvE8lastTime>
     f6a:	90 91 4d 41 	lds	r25, 0x414D	; 0x80414d <_ZZ17handleLinkBusMsgsvE8lastTime+0x1>
     f6e:	a0 91 4e 41 	lds	r26, 0x414E	; 0x80414e <_ZZ17handleLinkBusMsgsvE8lastTime+0x2>
     f72:	b0 91 4f 41 	lds	r27, 0x414F	; 0x80414f <_ZZ17handleLinkBusMsgsvE8lastTime+0x3>
     f76:	2c 89       	ldd	r18, Y+20	; 0x14
     f78:	3d 89       	ldd	r19, Y+21	; 0x15
     f7a:	4e 89       	ldd	r20, Y+22	; 0x16
     f7c:	5f 89       	ldd	r21, Y+23	; 0x17
     f7e:	28 17       	cp	r18, r24
     f80:	39 07       	cpc	r19, r25
     f82:	4a 07       	cpc	r20, r26
     f84:	5b 07       	cpc	r21, r27
     f86:	09 f4       	brne	.+2      	; 0xf8a <_Z17handleLinkBusMsgsv+0x692>
     f88:	47 c3       	rjmp	.+1678   	; 0x1618 <_Z17handleLinkBusMsgsv+0xd20>
     f8a:	8f 89       	ldd	r24, Y+23	; 0x17
     f8c:	8f 93       	push	r24
     f8e:	8e 89       	ldd	r24, Y+22	; 0x16
     f90:	8f 93       	push	r24
     f92:	8d 89       	ldd	r24, Y+21	; 0x15
     f94:	8f 93       	push	r24
     f96:	8c 89       	ldd	r24, Y+20	; 0x14
     f98:	8f 93       	push	r24
     f9a:	8f e3       	ldi	r24, 0x3F	; 63
     f9c:	90 e4       	ldi	r25, 0x40	; 64
     f9e:	89 2f       	mov	r24, r25
     fa0:	8f 93       	push	r24
     fa2:	8f e3       	ldi	r24, 0x3F	; 63
     fa4:	90 e4       	ldi	r25, 0x40	; 64
     fa6:	8f 93       	push	r24
     fa8:	81 ed       	ldi	r24, 0xD1	; 209
     faa:	90 e4       	ldi	r25, 0x40	; 64
     fac:	89 2f       	mov	r24, r25
     fae:	8f 93       	push	r24
     fb0:	81 ed       	ldi	r24, 0xD1	; 209
     fb2:	90 e4       	ldi	r25, 0x40	; 64
     fb4:	8f 93       	push	r24
     fb6:	0e 94 01 23 	call	0x4602	; 0x4602 <sprintf>
     fba:	2d b7       	in	r18, 0x3d	; 61
     fbc:	3e b7       	in	r19, 0x3e	; 62
     fbe:	28 5f       	subi	r18, 0xF8	; 248
     fc0:	3f 4f       	sbci	r19, 0xFF	; 255
     fc2:	cd bf       	out	0x3d, r28	; 61
     fc4:	de bf       	out	0x3e, r29	; 62
     fc6:	41 ed       	ldi	r20, 0xD1	; 209
     fc8:	50 e4       	ldi	r21, 0x40	; 64
     fca:	63 e4       	ldi	r22, 0x43	; 67
     fcc:	70 e4       	ldi	r23, 0x40	; 64
     fce:	83 e0       	ldi	r24, 0x03	; 3
     fd0:	0e 94 e6 12 	call	0x25cc	; 0x25cc <_Z11lb_send_msg13LBMessageTypePKcPc>
     fd4:	8c 89       	ldd	r24, Y+20	; 0x14
     fd6:	9d 89       	ldd	r25, Y+21	; 0x15
     fd8:	ae 89       	ldd	r26, Y+22	; 0x16
     fda:	bf 89       	ldd	r27, Y+23	; 0x17
     fdc:	80 93 4c 41 	sts	0x414C, r24	; 0x80414c <_ZZ17handleLinkBusMsgsvE8lastTime>
     fe0:	90 93 4d 41 	sts	0x414D, r25	; 0x80414d <_ZZ17handleLinkBusMsgsvE8lastTime+0x1>
     fe4:	a0 93 4e 41 	sts	0x414E, r26	; 0x80414e <_ZZ17handleLinkBusMsgsvE8lastTime+0x2>
     fe8:	b0 93 4f 41 	sts	0x414F, r27	; 0x80414f <_ZZ17handleLinkBusMsgsvE8lastTime+0x3>
     fec:	15 c3       	rjmp	.+1578   	; 0x1618 <_Z17handleLinkBusMsgsv+0xd20>
     fee:	80 91 4a 41 	lds	r24, 0x414A	; 0x80414a <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
     ff2:	8f 5f       	subi	r24, 0xFF	; 255
     ff4:	80 93 4a 41 	sts	0x414A, r24	; 0x80414a <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
     ff8:	8c 85       	ldd	r24, Y+12	; 0x0c
     ffa:	9d 85       	ldd	r25, Y+13	; 0x0d
     ffc:	fc 01       	movw	r30, r24
     ffe:	83 81       	ldd	r24, Z+3	; 0x03
    1000:	88 23       	and	r24, r24
    1002:	81 f1       	breq	.+96     	; 0x1064 <_Z17handleLinkBusMsgsv+0x76c>
    1004:	8c 85       	ldd	r24, Y+12	; 0x0c
    1006:	9d 85       	ldd	r25, Y+13	; 0x0d
    1008:	03 96       	adiw	r24, 0x03	; 3
    100a:	44 e1       	ldi	r20, 0x14	; 20
    100c:	50 e0       	ldi	r21, 0x00	; 0
    100e:	bc 01       	movw	r22, r24
    1010:	8a e0       	ldi	r24, 0x0A	; 10
    1012:	91 e4       	ldi	r25, 0x41	; 65
    1014:	0e 94 d5 22 	call	0x45aa	; 0x45aa <strncpy>
    1018:	80 91 0a 41 	lds	r24, 0x410A	; 0x80410a <g_messages_text+0x15>
    101c:	88 23       	and	r24, r24
    101e:	09 f4       	brne	.+2      	; 0x1022 <_Z17handleLinkBusMsgsv+0x72a>
    1020:	fd c2       	rjmp	.+1530   	; 0x161c <_Z17handleLinkBusMsgsv+0xd24>
    1022:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    1026:	88 2f       	mov	r24, r24
    1028:	90 e0       	ldi	r25, 0x00	; 0
    102a:	bc 01       	movw	r22, r24
    102c:	8a e0       	ldi	r24, 0x0A	; 10
    102e:	91 e4       	ldi	r25, 0x41	; 65
    1030:	0e 94 4a 15 	call	0x2a94	; 0x2a94 <_Z26timeRequiredToSendStrAtWPMPcj>
    1034:	8c 50       	subi	r24, 0x0C	; 12
    1036:	9e 4f       	sbci	r25, 0xFE	; 254
    1038:	96 95       	lsr	r25
    103a:	87 95       	ror	r24
    103c:	96 95       	lsr	r25
    103e:	87 95       	ror	r24
    1040:	96 95       	lsr	r25
    1042:	87 95       	ror	r24
    1044:	9c 01       	movw	r18, r24
    1046:	a5 ec       	ldi	r26, 0xC5	; 197
    1048:	b0 e2       	ldi	r27, 0x20	; 32
    104a:	0e 94 3e 21 	call	0x427c	; 0x427c <__umulhisi3>
    104e:	92 95       	swap	r25
    1050:	82 95       	swap	r24
    1052:	8f 70       	andi	r24, 0x0F	; 15
    1054:	89 27       	eor	r24, r25
    1056:	9f 70       	andi	r25, 0x0F	; 15
    1058:	89 27       	eor	r24, r25
    105a:	80 93 1f 41 	sts	0x411F, r24	; 0x80411f <g_time_needed_for_ID>
    105e:	90 93 20 41 	sts	0x4120, r25	; 0x804120 <g_time_needed_for_ID+0x1>
    1062:	dc c2       	rjmp	.+1464   	; 0x161c <_Z17handleLinkBusMsgsv+0xd24>
    1064:	80 91 0a 41 	lds	r24, 0x410A	; 0x80410a <g_messages_text+0x15>
    1068:	88 23       	and	r24, r24
    106a:	09 f4       	brne	.+2      	; 0x106e <_Z17handleLinkBusMsgsv+0x776>
    106c:	d7 c2       	rjmp	.+1454   	; 0x161c <_Z17handleLinkBusMsgsv+0xd24>
    106e:	8a e0       	ldi	r24, 0x0A	; 10
    1070:	91 e4       	ldi	r25, 0x41	; 65
    1072:	89 2f       	mov	r24, r25
    1074:	8f 93       	push	r24
    1076:	8a e0       	ldi	r24, 0x0A	; 10
    1078:	91 e4       	ldi	r25, 0x41	; 65
    107a:	8f 93       	push	r24
    107c:	85 e5       	ldi	r24, 0x55	; 85
    107e:	90 e4       	ldi	r25, 0x40	; 64
    1080:	89 2f       	mov	r24, r25
    1082:	8f 93       	push	r24
    1084:	85 e5       	ldi	r24, 0x55	; 85
    1086:	90 e4       	ldi	r25, 0x40	; 64
    1088:	8f 93       	push	r24
    108a:	81 ed       	ldi	r24, 0xD1	; 209
    108c:	90 e4       	ldi	r25, 0x40	; 64
    108e:	89 2f       	mov	r24, r25
    1090:	8f 93       	push	r24
    1092:	81 ed       	ldi	r24, 0xD1	; 209
    1094:	90 e4       	ldi	r25, 0x40	; 64
    1096:	8f 93       	push	r24
    1098:	0e 94 01 23 	call	0x4602	; 0x4602 <sprintf>
    109c:	0f 90       	pop	r0
    109e:	0f 90       	pop	r0
    10a0:	0f 90       	pop	r0
    10a2:	0f 90       	pop	r0
    10a4:	0f 90       	pop	r0
    10a6:	0f 90       	pop	r0
    10a8:	81 ed       	ldi	r24, 0xD1	; 209
    10aa:	90 e4       	ldi	r25, 0x40	; 64
    10ac:	0e 94 a5 12 	call	0x254a	; 0x254a <_Z17linkbus_send_textPc>
    10b0:	19 82       	std	Y+1, r1	; 0x01
    10b2:	b4 c2       	rjmp	.+1384   	; 0x161c <_Z17handleLinkBusMsgsv+0xd24>
    10b4:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    10b8:	88 8f       	std	Y+24, r24	; 0x18
    10ba:	8c 85       	ldd	r24, Y+12	; 0x0c
    10bc:	9d 85       	ldd	r25, Y+13	; 0x0d
    10be:	fc 01       	movw	r30, r24
    10c0:	83 81       	ldd	r24, Z+3	; 0x03
    10c2:	89 34       	cpi	r24, 0x49	; 73
    10c4:	09 f0       	breq	.+2      	; 0x10c8 <_Z17handleLinkBusMsgsv+0x7d0>
    10c6:	5a c0       	rjmp	.+180    	; 0x117c <_Z17handleLinkBusMsgsv+0x884>
    10c8:	8c 85       	ldd	r24, Y+12	; 0x0c
    10ca:	9d 85       	ldd	r25, Y+13	; 0x0d
    10cc:	fc 01       	movw	r30, r24
    10ce:	80 8d       	ldd	r24, Z+24	; 0x18
    10d0:	88 23       	and	r24, r24
    10d2:	09 f4       	brne	.+2      	; 0x10d6 <_Z17handleLinkBusMsgsv+0x7de>
    10d4:	a5 c2       	rjmp	.+1354   	; 0x1620 <_Z17handleLinkBusMsgsv+0xd28>
    10d6:	8c 85       	ldd	r24, Y+12	; 0x0c
    10d8:	9d 85       	ldd	r25, Y+13	; 0x0d
    10da:	48 96       	adiw	r24, 0x18	; 24
    10dc:	0e 94 a6 22 	call	0x454c	; 0x454c <atol>
    10e0:	dc 01       	movw	r26, r24
    10e2:	cb 01       	movw	r24, r22
    10e4:	88 8f       	std	Y+24, r24	; 0x18
    10e6:	88 8d       	ldd	r24, Y+24	; 0x18
    10e8:	89 8f       	std	Y+25, r24	; 0x19
    10ea:	85 e0       	ldi	r24, 0x05	; 5
    10ec:	90 e0       	ldi	r25, 0x00	; 0
    10ee:	8a 8f       	std	Y+26, r24	; 0x1a
    10f0:	9b 8f       	std	Y+27, r25	; 0x1b
    10f2:	84 e1       	ldi	r24, 0x14	; 20
    10f4:	90 e0       	ldi	r25, 0x00	; 0
    10f6:	8c 8f       	std	Y+28, r24	; 0x1c
    10f8:	9d 8f       	std	Y+29, r25	; 0x1d
    10fa:	89 8d       	ldd	r24, Y+25	; 0x19
    10fc:	28 2f       	mov	r18, r24
    10fe:	30 e0       	ldi	r19, 0x00	; 0
    1100:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1102:	9d 8d       	ldd	r25, Y+29	; 0x1d
    1104:	82 17       	cp	r24, r18
    1106:	93 07       	cpc	r25, r19
    1108:	54 f0       	brlt	.+20     	; 0x111e <_Z17handleLinkBusMsgsv+0x826>
    110a:	89 8d       	ldd	r24, Y+25	; 0x19
    110c:	88 2f       	mov	r24, r24
    110e:	90 e0       	ldi	r25, 0x00	; 0
    1110:	2a 8d       	ldd	r18, Y+26	; 0x1a
    1112:	3b 8d       	ldd	r19, Y+27	; 0x1b
    1114:	82 17       	cp	r24, r18
    1116:	93 07       	cpc	r25, r19
    1118:	24 f4       	brge	.+8      	; 0x1122 <_Z17handleLinkBusMsgsv+0x82a>
    111a:	c9 01       	movw	r24, r18
    111c:	02 c0       	rjmp	.+4      	; 0x1122 <_Z17handleLinkBusMsgsv+0x82a>
    111e:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1120:	9d 8d       	ldd	r25, Y+29	; 0x1d
    1122:	80 93 0b 40 	sts	0x400B, r24	; 0x80400b <g_id_codespeed>
    1126:	80 91 4a 41 	lds	r24, 0x414A	; 0x80414a <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    112a:	8f 5f       	subi	r24, 0xFF	; 255
    112c:	80 93 4a 41 	sts	0x414A, r24	; 0x80414a <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    1130:	80 91 0a 41 	lds	r24, 0x410A	; 0x80410a <g_messages_text+0x15>
    1134:	88 23       	and	r24, r24
    1136:	09 f4       	brne	.+2      	; 0x113a <_Z17handleLinkBusMsgsv+0x842>
    1138:	73 c2       	rjmp	.+1254   	; 0x1620 <_Z17handleLinkBusMsgsv+0xd28>
    113a:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    113e:	88 2f       	mov	r24, r24
    1140:	90 e0       	ldi	r25, 0x00	; 0
    1142:	bc 01       	movw	r22, r24
    1144:	8a e0       	ldi	r24, 0x0A	; 10
    1146:	91 e4       	ldi	r25, 0x41	; 65
    1148:	0e 94 4a 15 	call	0x2a94	; 0x2a94 <_Z26timeRequiredToSendStrAtWPMPcj>
    114c:	8c 50       	subi	r24, 0x0C	; 12
    114e:	9e 4f       	sbci	r25, 0xFE	; 254
    1150:	96 95       	lsr	r25
    1152:	87 95       	ror	r24
    1154:	96 95       	lsr	r25
    1156:	87 95       	ror	r24
    1158:	96 95       	lsr	r25
    115a:	87 95       	ror	r24
    115c:	9c 01       	movw	r18, r24
    115e:	a5 ec       	ldi	r26, 0xC5	; 197
    1160:	b0 e2       	ldi	r27, 0x20	; 32
    1162:	0e 94 3e 21 	call	0x427c	; 0x427c <__umulhisi3>
    1166:	92 95       	swap	r25
    1168:	82 95       	swap	r24
    116a:	8f 70       	andi	r24, 0x0F	; 15
    116c:	89 27       	eor	r24, r25
    116e:	9f 70       	andi	r25, 0x0F	; 15
    1170:	89 27       	eor	r24, r25
    1172:	80 93 1f 41 	sts	0x411F, r24	; 0x80411f <g_time_needed_for_ID>
    1176:	90 93 20 41 	sts	0x4120, r25	; 0x804120 <g_time_needed_for_ID+0x1>
    117a:	52 c2       	rjmp	.+1188   	; 0x1620 <_Z17handleLinkBusMsgsv+0xd28>
    117c:	8c 85       	ldd	r24, Y+12	; 0x0c
    117e:	9d 85       	ldd	r25, Y+13	; 0x0d
    1180:	fc 01       	movw	r30, r24
    1182:	83 81       	ldd	r24, Z+3	; 0x03
    1184:	80 35       	cpi	r24, 0x50	; 80
    1186:	09 f0       	breq	.+2      	; 0x118a <_Z17handleLinkBusMsgsv+0x892>
    1188:	4b c2       	rjmp	.+1174   	; 0x1620 <_Z17handleLinkBusMsgsv+0xd28>
    118a:	8c 85       	ldd	r24, Y+12	; 0x0c
    118c:	9d 85       	ldd	r25, Y+13	; 0x0d
    118e:	fc 01       	movw	r30, r24
    1190:	80 8d       	ldd	r24, Z+24	; 0x18
    1192:	88 23       	and	r24, r24
    1194:	09 f4       	brne	.+2      	; 0x1198 <_Z17handleLinkBusMsgsv+0x8a0>
    1196:	44 c2       	rjmp	.+1160   	; 0x1620 <_Z17handleLinkBusMsgsv+0xd28>
    1198:	8c 85       	ldd	r24, Y+12	; 0x0c
    119a:	9d 85       	ldd	r25, Y+13	; 0x0d
    119c:	48 96       	adiw	r24, 0x18	; 24
    119e:	0e 94 a6 22 	call	0x454c	; 0x454c <atol>
    11a2:	dc 01       	movw	r26, r24
    11a4:	cb 01       	movw	r24, r22
    11a6:	88 8f       	std	Y+24, r24	; 0x18
    11a8:	88 8d       	ldd	r24, Y+24	; 0x18
    11aa:	8e 8f       	std	Y+30, r24	; 0x1e
    11ac:	85 e0       	ldi	r24, 0x05	; 5
    11ae:	90 e0       	ldi	r25, 0x00	; 0
    11b0:	8f 8f       	std	Y+31, r24	; 0x1f
    11b2:	98 a3       	std	Y+32, r25	; 0x20
    11b4:	84 e1       	ldi	r24, 0x14	; 20
    11b6:	90 e0       	ldi	r25, 0x00	; 0
    11b8:	89 a3       	std	Y+33, r24	; 0x21
    11ba:	9a a3       	std	Y+34, r25	; 0x22
    11bc:	8e 8d       	ldd	r24, Y+30	; 0x1e
    11be:	28 2f       	mov	r18, r24
    11c0:	30 e0       	ldi	r19, 0x00	; 0
    11c2:	89 a1       	ldd	r24, Y+33	; 0x21
    11c4:	9a a1       	ldd	r25, Y+34	; 0x22
    11c6:	82 17       	cp	r24, r18
    11c8:	93 07       	cpc	r25, r19
    11ca:	54 f0       	brlt	.+20     	; 0x11e0 <_Z17handleLinkBusMsgsv+0x8e8>
    11cc:	8e 8d       	ldd	r24, Y+30	; 0x1e
    11ce:	88 2f       	mov	r24, r24
    11d0:	90 e0       	ldi	r25, 0x00	; 0
    11d2:	2f 8d       	ldd	r18, Y+31	; 0x1f
    11d4:	38 a1       	ldd	r19, Y+32	; 0x20
    11d6:	82 17       	cp	r24, r18
    11d8:	93 07       	cpc	r25, r19
    11da:	24 f4       	brge	.+8      	; 0x11e4 <_Z17handleLinkBusMsgsv+0x8ec>
    11dc:	c9 01       	movw	r24, r18
    11de:	02 c0       	rjmp	.+4      	; 0x11e4 <_Z17handleLinkBusMsgsv+0x8ec>
    11e0:	89 a1       	ldd	r24, Y+33	; 0x21
    11e2:	9a a1       	ldd	r25, Y+34	; 0x22
    11e4:	80 93 0c 40 	sts	0x400C, r24	; 0x80400c <g_pattern_codespeed>
    11e8:	80 91 4a 41 	lds	r24, 0x414A	; 0x80414a <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    11ec:	8f 5f       	subi	r24, 0xFF	; 255
    11ee:	80 93 4a 41 	sts	0x414A, r24	; 0x80414a <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    11f2:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    11f6:	0e 94 32 0b 	call	0x1664	; 0x1664 <_Z13throttleValueh>
    11fa:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    11fe:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    1202:	0e c2       	rjmp	.+1052   	; 0x1620 <_Z17handleLinkBusMsgsv+0xd28>
    1204:	1b a2       	std	Y+35, r1	; 0x23
    1206:	1c a2       	std	Y+36, r1	; 0x24
    1208:	8c 85       	ldd	r24, Y+12	; 0x0c
    120a:	9d 85       	ldd	r25, Y+13	; 0x0d
    120c:	fc 01       	movw	r30, r24
    120e:	83 81       	ldd	r24, Z+3	; 0x03
    1210:	80 33       	cpi	r24, 0x30	; 48
    1212:	e1 f4       	brne	.+56     	; 0x124c <_Z17handleLinkBusMsgsv+0x954>
    1214:	8c 85       	ldd	r24, Y+12	; 0x0c
    1216:	9d 85       	ldd	r25, Y+13	; 0x0d
    1218:	fc 01       	movw	r30, r24
    121a:	80 8d       	ldd	r24, Z+24	; 0x18
    121c:	88 23       	and	r24, r24
    121e:	09 f4       	brne	.+2      	; 0x1222 <_Z17handleLinkBusMsgsv+0x92a>
    1220:	01 c2       	rjmp	.+1026   	; 0x1624 <_Z17handleLinkBusMsgsv+0xd2c>
    1222:	8c 85       	ldd	r24, Y+12	; 0x0c
    1224:	9d 85       	ldd	r25, Y+13	; 0x0d
    1226:	48 96       	adiw	r24, 0x18	; 24
    1228:	0e 94 a6 22 	call	0x454c	; 0x454c <atol>
    122c:	dc 01       	movw	r26, r24
    122e:	cb 01       	movw	r24, r22
    1230:	8b a3       	std	Y+35, r24	; 0x23
    1232:	9c a3       	std	Y+36, r25	; 0x24
    1234:	8b a1       	ldd	r24, Y+35	; 0x23
    1236:	9c a1       	ldd	r25, Y+36	; 0x24
    1238:	80 93 0f 40 	sts	0x400F, r24	; 0x80400f <g_off_air_seconds>
    123c:	90 93 10 40 	sts	0x4010, r25	; 0x804010 <g_off_air_seconds+0x1>
    1240:	80 91 4a 41 	lds	r24, 0x414A	; 0x80414a <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    1244:	8f 5f       	subi	r24, 0xFF	; 255
    1246:	80 93 4a 41 	sts	0x414A, r24	; 0x80414a <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    124a:	ec c1       	rjmp	.+984    	; 0x1624 <_Z17handleLinkBusMsgsv+0xd2c>
    124c:	8c 85       	ldd	r24, Y+12	; 0x0c
    124e:	9d 85       	ldd	r25, Y+13	; 0x0d
    1250:	fc 01       	movw	r30, r24
    1252:	83 81       	ldd	r24, Z+3	; 0x03
    1254:	81 33       	cpi	r24, 0x31	; 49
    1256:	e1 f4       	brne	.+56     	; 0x1290 <_Z17handleLinkBusMsgsv+0x998>
    1258:	8c 85       	ldd	r24, Y+12	; 0x0c
    125a:	9d 85       	ldd	r25, Y+13	; 0x0d
    125c:	fc 01       	movw	r30, r24
    125e:	80 8d       	ldd	r24, Z+24	; 0x18
    1260:	88 23       	and	r24, r24
    1262:	09 f4       	brne	.+2      	; 0x1266 <_Z17handleLinkBusMsgsv+0x96e>
    1264:	df c1       	rjmp	.+958    	; 0x1624 <_Z17handleLinkBusMsgsv+0xd2c>
    1266:	8c 85       	ldd	r24, Y+12	; 0x0c
    1268:	9d 85       	ldd	r25, Y+13	; 0x0d
    126a:	48 96       	adiw	r24, 0x18	; 24
    126c:	0e 94 a6 22 	call	0x454c	; 0x454c <atol>
    1270:	dc 01       	movw	r26, r24
    1272:	cb 01       	movw	r24, r22
    1274:	8b a3       	std	Y+35, r24	; 0x23
    1276:	9c a3       	std	Y+36, r25	; 0x24
    1278:	8b a1       	ldd	r24, Y+35	; 0x23
    127a:	9c a1       	ldd	r25, Y+36	; 0x24
    127c:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_on_air_seconds>
    1280:	90 93 0e 40 	sts	0x400E, r25	; 0x80400e <g_on_air_seconds+0x1>
    1284:	80 91 4a 41 	lds	r24, 0x414A	; 0x80414a <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    1288:	8f 5f       	subi	r24, 0xFF	; 255
    128a:	80 93 4a 41 	sts	0x414A, r24	; 0x80414a <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    128e:	ca c1       	rjmp	.+916    	; 0x1624 <_Z17handleLinkBusMsgsv+0xd2c>
    1290:	8c 85       	ldd	r24, Y+12	; 0x0c
    1292:	9d 85       	ldd	r25, Y+13	; 0x0d
    1294:	fc 01       	movw	r30, r24
    1296:	83 81       	ldd	r24, Z+3	; 0x03
    1298:	89 34       	cpi	r24, 0x49	; 73
    129a:	e1 f4       	brne	.+56     	; 0x12d4 <_Z17handleLinkBusMsgsv+0x9dc>
    129c:	8c 85       	ldd	r24, Y+12	; 0x0c
    129e:	9d 85       	ldd	r25, Y+13	; 0x0d
    12a0:	fc 01       	movw	r30, r24
    12a2:	80 8d       	ldd	r24, Z+24	; 0x18
    12a4:	88 23       	and	r24, r24
    12a6:	09 f4       	brne	.+2      	; 0x12aa <_Z17handleLinkBusMsgsv+0x9b2>
    12a8:	bd c1       	rjmp	.+890    	; 0x1624 <_Z17handleLinkBusMsgsv+0xd2c>
    12aa:	8c 85       	ldd	r24, Y+12	; 0x0c
    12ac:	9d 85       	ldd	r25, Y+13	; 0x0d
    12ae:	48 96       	adiw	r24, 0x18	; 24
    12b0:	0e 94 a6 22 	call	0x454c	; 0x454c <atol>
    12b4:	dc 01       	movw	r26, r24
    12b6:	cb 01       	movw	r24, r22
    12b8:	8b a3       	std	Y+35, r24	; 0x23
    12ba:	9c a3       	std	Y+36, r25	; 0x24
    12bc:	8b a1       	ldd	r24, Y+35	; 0x23
    12be:	9c a1       	ldd	r25, Y+36	; 0x24
    12c0:	80 93 11 40 	sts	0x4011, r24	; 0x804011 <g_ID_period_seconds>
    12c4:	90 93 12 40 	sts	0x4012, r25	; 0x804012 <g_ID_period_seconds+0x1>
    12c8:	80 91 4a 41 	lds	r24, 0x414A	; 0x80414a <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    12cc:	8f 5f       	subi	r24, 0xFF	; 255
    12ce:	80 93 4a 41 	sts	0x414A, r24	; 0x80414a <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    12d2:	a8 c1       	rjmp	.+848    	; 0x1624 <_Z17handleLinkBusMsgsv+0xd2c>
    12d4:	8c 85       	ldd	r24, Y+12	; 0x0c
    12d6:	9d 85       	ldd	r25, Y+13	; 0x0d
    12d8:	fc 01       	movw	r30, r24
    12da:	83 81       	ldd	r24, Z+3	; 0x03
    12dc:	84 34       	cpi	r24, 0x44	; 68
    12de:	09 f0       	breq	.+2      	; 0x12e2 <_Z17handleLinkBusMsgsv+0x9ea>
    12e0:	a1 c1       	rjmp	.+834    	; 0x1624 <_Z17handleLinkBusMsgsv+0xd2c>
    12e2:	8c 85       	ldd	r24, Y+12	; 0x0c
    12e4:	9d 85       	ldd	r25, Y+13	; 0x0d
    12e6:	fc 01       	movw	r30, r24
    12e8:	80 8d       	ldd	r24, Z+24	; 0x18
    12ea:	88 23       	and	r24, r24
    12ec:	09 f4       	brne	.+2      	; 0x12f0 <_Z17handleLinkBusMsgsv+0x9f8>
    12ee:	9a c1       	rjmp	.+820    	; 0x1624 <_Z17handleLinkBusMsgsv+0xd2c>
    12f0:	8c 85       	ldd	r24, Y+12	; 0x0c
    12f2:	9d 85       	ldd	r25, Y+13	; 0x0d
    12f4:	48 96       	adiw	r24, 0x18	; 24
    12f6:	0e 94 a6 22 	call	0x454c	; 0x454c <atol>
    12fa:	dc 01       	movw	r26, r24
    12fc:	cb 01       	movw	r24, r22
    12fe:	8b a3       	std	Y+35, r24	; 0x23
    1300:	9c a3       	std	Y+36, r25	; 0x24
    1302:	8b a1       	ldd	r24, Y+35	; 0x23
    1304:	9c a1       	ldd	r25, Y+36	; 0x24
    1306:	80 93 21 41 	sts	0x4121, r24	; 0x804121 <g_intra_cycle_delay_time>
    130a:	90 93 22 41 	sts	0x4122, r25	; 0x804122 <g_intra_cycle_delay_time+0x1>
    130e:	80 91 4a 41 	lds	r24, 0x414A	; 0x80414a <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    1312:	8f 5f       	subi	r24, 0xFF	; 255
    1314:	80 93 4a 41 	sts	0x414A, r24	; 0x80414a <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    1318:	85 c1       	rjmp	.+778    	; 0x1624 <_Z17handleLinkBusMsgsv+0xd2c>
    131a:	8c 85       	ldd	r24, Y+12	; 0x0c
    131c:	9d 85       	ldd	r25, Y+13	; 0x0d
    131e:	fc 01       	movw	r30, r24
    1320:	83 81       	ldd	r24, Z+3	; 0x03
    1322:	88 23       	and	r24, r24
    1324:	09 f4       	brne	.+2      	; 0x1328 <_Z17handleLinkBusMsgsv+0xa30>
    1326:	80 c1       	rjmp	.+768    	; 0x1628 <_Z17handleLinkBusMsgsv+0xd30>
    1328:	8c 85       	ldd	r24, Y+12	; 0x0c
    132a:	9d 85       	ldd	r25, Y+13	; 0x0d
    132c:	03 96       	adiw	r24, 0x03	; 3
    132e:	44 e1       	ldi	r20, 0x14	; 20
    1330:	50 e0       	ldi	r21, 0x00	; 0
    1332:	bc 01       	movw	r22, r24
    1334:	85 ef       	ldi	r24, 0xF5	; 245
    1336:	90 e4       	ldi	r25, 0x40	; 64
    1338:	0e 94 d5 22 	call	0x45aa	; 0x45aa <strncpy>
    133c:	80 91 4a 41 	lds	r24, 0x414A	; 0x80414a <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    1340:	8f 5f       	subi	r24, 0xFF	; 255
    1342:	80 93 4a 41 	sts	0x414A, r24	; 0x80414a <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    1346:	70 c1       	rjmp	.+736    	; 0x1628 <_Z17handleLinkBusMsgsv+0xd30>
    1348:	1e 82       	std	Y+6, r1	; 0x06
    134a:	1f 82       	std	Y+7, r1	; 0x07
    134c:	18 86       	std	Y+8, r1	; 0x08
    134e:	19 86       	std	Y+9, r1	; 0x09
    1350:	8c 85       	ldd	r24, Y+12	; 0x0c
    1352:	9d 85       	ldd	r25, Y+13	; 0x0d
    1354:	fc 01       	movw	r30, r24
    1356:	83 81       	ldd	r24, Z+3	; 0x03
    1358:	88 23       	and	r24, r24
    135a:	a9 f1       	breq	.+106    	; 0x13c6 <_Z17handleLinkBusMsgsv+0xace>
    135c:	8c 85       	ldd	r24, Y+12	; 0x0c
    135e:	9d 85       	ldd	r25, Y+13	; 0x0d
    1360:	03 96       	adiw	r24, 0x03	; 3
    1362:	0e 94 a6 22 	call	0x454c	; 0x454c <atol>
    1366:	dc 01       	movw	r26, r24
    1368:	cb 01       	movw	r24, r22
    136a:	80 93 50 41 	sts	0x4150, r24	; 0x804150 <_ZZ17handleLinkBusMsgsvE1f>
    136e:	90 93 51 41 	sts	0x4151, r25	; 0x804151 <_ZZ17handleLinkBusMsgsvE1f+0x1>
    1372:	a0 93 52 41 	sts	0x4152, r26	; 0x804152 <_ZZ17handleLinkBusMsgsvE1f+0x2>
    1376:	b0 93 53 41 	sts	0x4153, r27	; 0x804153 <_ZZ17handleLinkBusMsgsvE1f+0x3>
    137a:	80 91 50 41 	lds	r24, 0x4150	; 0x804150 <_ZZ17handleLinkBusMsgsvE1f>
    137e:	90 91 51 41 	lds	r25, 0x4151	; 0x804151 <_ZZ17handleLinkBusMsgsvE1f+0x1>
    1382:	a0 91 52 41 	lds	r26, 0x4152	; 0x804152 <_ZZ17handleLinkBusMsgsvE1f+0x2>
    1386:	b0 91 53 41 	lds	r27, 0x4153	; 0x804153 <_ZZ17handleLinkBusMsgsvE1f+0x3>
    138a:	88 ab       	std	Y+48, r24	; 0x30
    138c:	99 ab       	std	Y+49, r25	; 0x31
    138e:	aa ab       	std	Y+50, r26	; 0x32
    1390:	bb ab       	std	Y+51, r27	; 0x33
    1392:	ce 01       	movw	r24, r28
    1394:	c0 96       	adiw	r24, 0x30	; 48
    1396:	61 e0       	ldi	r22, 0x01	; 1
    1398:	0e 94 4a 1c 	call	0x3894	; 0x3894 <_Z14txSetFrequencyPmh>
    139c:	98 2f       	mov	r25, r24
    139e:	81 e0       	ldi	r24, 0x01	; 1
    13a0:	99 23       	and	r25, r25
    13a2:	09 f4       	brne	.+2      	; 0x13a6 <_Z17handleLinkBusMsgsv+0xaae>
    13a4:	80 e0       	ldi	r24, 0x00	; 0
    13a6:	88 23       	and	r24, r24
    13a8:	b1 f0       	breq	.+44     	; 0x13d6 <_Z17handleLinkBusMsgsv+0xade>
    13aa:	88 a9       	ldd	r24, Y+48	; 0x30
    13ac:	99 a9       	ldd	r25, Y+49	; 0x31
    13ae:	aa a9       	ldd	r26, Y+50	; 0x32
    13b0:	bb a9       	ldd	r27, Y+51	; 0x33
    13b2:	8e 83       	std	Y+6, r24	; 0x06
    13b4:	9f 83       	std	Y+7, r25	; 0x07
    13b6:	a8 87       	std	Y+8, r26	; 0x08
    13b8:	b9 87       	std	Y+9, r27	; 0x09
    13ba:	80 91 4a 41 	lds	r24, 0x414A	; 0x80414a <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    13be:	8f 5f       	subi	r24, 0xFF	; 255
    13c0:	80 93 4a 41 	sts	0x414A, r24	; 0x80414a <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    13c4:	08 c0       	rjmp	.+16     	; 0x13d6 <_Z17handleLinkBusMsgsv+0xade>
    13c6:	0e 94 78 1c 	call	0x38f0	; 0x38f0 <_Z14txGetFrequencyv>
    13ca:	dc 01       	movw	r26, r24
    13cc:	cb 01       	movw	r24, r22
    13ce:	8e 83       	std	Y+6, r24	; 0x06
    13d0:	9f 83       	std	Y+7, r25	; 0x07
    13d2:	a8 87       	std	Y+8, r26	; 0x08
    13d4:	b9 87       	std	Y+9, r27	; 0x09
    13d6:	8e 81       	ldd	r24, Y+6	; 0x06
    13d8:	9f 81       	ldd	r25, Y+7	; 0x07
    13da:	a8 85       	ldd	r26, Y+8	; 0x08
    13dc:	b9 85       	ldd	r27, Y+9	; 0x09
    13de:	89 2b       	or	r24, r25
    13e0:	8a 2b       	or	r24, r26
    13e2:	8b 2b       	or	r24, r27
    13e4:	09 f4       	brne	.+2      	; 0x13e8 <_Z17handleLinkBusMsgsv+0xaf0>
    13e6:	22 c1       	rjmp	.+580    	; 0x162c <_Z17handleLinkBusMsgsv+0xd34>
    13e8:	89 85       	ldd	r24, Y+9	; 0x09
    13ea:	8f 93       	push	r24
    13ec:	88 85       	ldd	r24, Y+8	; 0x08
    13ee:	8f 93       	push	r24
    13f0:	8f 81       	ldd	r24, Y+7	; 0x07
    13f2:	8f 93       	push	r24
    13f4:	8e 81       	ldd	r24, Y+6	; 0x06
    13f6:	8f 93       	push	r24
    13f8:	8e e5       	ldi	r24, 0x5E	; 94
    13fa:	90 e4       	ldi	r25, 0x40	; 64
    13fc:	89 2f       	mov	r24, r25
    13fe:	8f 93       	push	r24
    1400:	8e e5       	ldi	r24, 0x5E	; 94
    1402:	90 e4       	ldi	r25, 0x40	; 64
    1404:	8f 93       	push	r24
    1406:	81 ed       	ldi	r24, 0xD1	; 209
    1408:	90 e4       	ldi	r25, 0x40	; 64
    140a:	89 2f       	mov	r24, r25
    140c:	8f 93       	push	r24
    140e:	81 ed       	ldi	r24, 0xD1	; 209
    1410:	90 e4       	ldi	r25, 0x40	; 64
    1412:	8f 93       	push	r24
    1414:	0e 94 01 23 	call	0x4602	; 0x4602 <sprintf>
    1418:	2d b7       	in	r18, 0x3d	; 61
    141a:	3e b7       	in	r19, 0x3e	; 62
    141c:	28 5f       	subi	r18, 0xF8	; 248
    141e:	3f 4f       	sbci	r19, 0xFF	; 255
    1420:	cd bf       	out	0x3d, r28	; 61
    1422:	de bf       	out	0x3e, r29	; 62
    1424:	41 ed       	ldi	r20, 0xD1	; 209
    1426:	50 e4       	ldi	r21, 0x40	; 64
    1428:	63 e6       	ldi	r22, 0x63	; 99
    142a:	70 e4       	ldi	r23, 0x40	; 64
    142c:	83 e0       	ldi	r24, 0x03	; 3
    142e:	0e 94 e6 12 	call	0x25cc	; 0x25cc <_Z11lb_send_msg13LBMessageTypePKcPc>
    1432:	fc c0       	rjmp	.+504    	; 0x162c <_Z17handleLinkBusMsgsv+0xd34>
    1434:	80 91 35 41 	lds	r24, 0x4135	; 0x804135 <_ZL22g_lastConversionResult>
    1438:	90 91 36 41 	lds	r25, 0x4136	; 0x804136 <_ZL22g_lastConversionResult+0x1>
    143c:	21 e0       	ldi	r18, 0x01	; 1
    143e:	8d 38       	cpi	r24, 0x8D	; 141
    1440:	92 40       	sbci	r25, 0x02	; 2
    1442:	08 f4       	brcc	.+2      	; 0x1446 <_Z17handleLinkBusMsgsv+0xb4e>
    1444:	20 e0       	ldi	r18, 0x00	; 0
    1446:	22 23       	and	r18, r18
    1448:	09 f4       	brne	.+2      	; 0x144c <_Z17handleLinkBusMsgsv+0xb54>
    144a:	7c c0       	rjmp	.+248    	; 0x1544 <_Z17handleLinkBusMsgsv+0xc4c>
    144c:	80 91 35 41 	lds	r24, 0x4135	; 0x804135 <_ZL22g_lastConversionResult>
    1450:	90 91 36 41 	lds	r25, 0x4136	; 0x804136 <_ZL22g_lastConversionResult+0x1>
    1454:	cc 01       	movw	r24, r24
    1456:	a0 e0       	ldi	r26, 0x00	; 0
    1458:	b0 e0       	ldi	r27, 0x00	; 0
    145a:	9c 01       	movw	r18, r24
    145c:	ad 01       	movw	r20, r26
    145e:	60 ea       	ldi	r22, 0xA0	; 160
    1460:	78 e6       	ldi	r23, 0x68	; 104
    1462:	86 e0       	ldi	r24, 0x06	; 6
    1464:	90 e0       	ldi	r25, 0x00	; 0
    1466:	0e 94 bc 20 	call	0x4178	; 0x4178 <__mulsi3>
    146a:	dc 01       	movw	r26, r24
    146c:	cb 01       	movw	r24, r22
    146e:	7c 01       	movw	r14, r24
    1470:	8d 01       	movw	r16, r26
    1472:	ed e7       	ldi	r30, 0x7D	; 125
    1474:	fe 1a       	sub	r15, r30
    1476:	0c 40       	sbci	r16, 0x0C	; 12
    1478:	1e 4f       	sbci	r17, 0xFE	; 254
    147a:	80 91 13 40 	lds	r24, 0x4013	; 0x804013 <g_battery_empty_mV>
    147e:	90 91 14 40 	lds	r25, 0x4014	; 0x804014 <g_battery_empty_mV+0x1>
    1482:	cc 01       	movw	r24, r24
    1484:	a0 e0       	ldi	r26, 0x00	; 0
    1486:	b0 e0       	ldi	r27, 0x00	; 0
    1488:	9c 01       	movw	r18, r24
    148a:	ad 01       	movw	r20, r26
    148c:	64 e6       	ldi	r22, 0x64	; 100
    148e:	70 e7       	ldi	r23, 0x70	; 112
    1490:	8e ef       	ldi	r24, 0xFE	; 254
    1492:	9f ef       	ldi	r25, 0xFF	; 255
    1494:	0e 94 bc 20 	call	0x4178	; 0x4178 <__mulsi3>
    1498:	dc 01       	movw	r26, r24
    149a:	cb 01       	movw	r24, r22
    149c:	e8 0e       	add	r14, r24
    149e:	f9 1e       	adc	r15, r25
    14a0:	0a 1f       	adc	r16, r26
    14a2:	1b 1f       	adc	r17, r27
    14a4:	80 91 13 40 	lds	r24, 0x4013	; 0x804013 <g_battery_empty_mV>
    14a8:	90 91 14 40 	lds	r25, 0x4014	; 0x804014 <g_battery_empty_mV+0x1>
    14ac:	cc 01       	movw	r24, r24
    14ae:	a0 e0       	ldi	r26, 0x00	; 0
    14b0:	b0 e0       	ldi	r27, 0x00	; 0
    14b2:	28 e6       	ldi	r18, 0x68	; 104
    14b4:	30 e1       	ldi	r19, 0x10	; 16
    14b6:	40 e0       	ldi	r20, 0x00	; 0
    14b8:	50 e0       	ldi	r21, 0x00	; 0
    14ba:	28 1b       	sub	r18, r24
    14bc:	39 0b       	sbc	r19, r25
    14be:	4a 0b       	sbc	r20, r26
    14c0:	5b 0b       	sbc	r21, r27
    14c2:	8f ef       	ldi	r24, 0xFF	; 255
    14c4:	93 e0       	ldi	r25, 0x03	; 3
    14c6:	dc 01       	movw	r26, r24
    14c8:	0e 94 54 21 	call	0x42a8	; 0x42a8 <__muluhisi3>
    14cc:	9b 01       	movw	r18, r22
    14ce:	ac 01       	movw	r20, r24
    14d0:	c8 01       	movw	r24, r16
    14d2:	b7 01       	movw	r22, r14
    14d4:	0e 94 16 21 	call	0x422c	; 0x422c <__divmodsi4>
    14d8:	da 01       	movw	r26, r20
    14da:	c9 01       	movw	r24, r18
    14dc:	8d a3       	std	Y+37, r24	; 0x25
    14de:	9e a3       	std	Y+38, r25	; 0x26
    14e0:	af a3       	std	Y+39, r26	; 0x27
    14e2:	b8 a7       	std	Y+40, r27	; 0x28
    14e4:	19 a6       	std	Y+41, r1	; 0x29
    14e6:	1a a6       	std	Y+42, r1	; 0x2a
    14e8:	84 e6       	ldi	r24, 0x64	; 100
    14ea:	90 e0       	ldi	r25, 0x00	; 0
    14ec:	8b a7       	std	Y+43, r24	; 0x2b
    14ee:	9c a7       	std	Y+44, r25	; 0x2c
    14f0:	8b a5       	ldd	r24, Y+43	; 0x2b
    14f2:	9c a5       	ldd	r25, Y+44	; 0x2c
    14f4:	9c 01       	movw	r18, r24
    14f6:	99 0f       	add	r25, r25
    14f8:	44 0b       	sbc	r20, r20
    14fa:	55 0b       	sbc	r21, r21
    14fc:	8d a1       	ldd	r24, Y+37	; 0x25
    14fe:	9e a1       	ldd	r25, Y+38	; 0x26
    1500:	af a1       	ldd	r26, Y+39	; 0x27
    1502:	b8 a5       	ldd	r27, Y+40	; 0x28
    1504:	28 17       	cp	r18, r24
    1506:	39 07       	cpc	r19, r25
    1508:	4a 07       	cpc	r20, r26
    150a:	5b 07       	cpc	r21, r27
    150c:	3c f4       	brge	.+14     	; 0x151c <_Z17handleLinkBusMsgsv+0xc24>
    150e:	8b a5       	ldd	r24, Y+43	; 0x2b
    1510:	9c a5       	ldd	r25, Y+44	; 0x2c
    1512:	09 2e       	mov	r0, r25
    1514:	00 0c       	add	r0, r0
    1516:	aa 0b       	sbc	r26, r26
    1518:	bb 0b       	sbc	r27, r27
    151a:	11 c0       	rjmp	.+34     	; 0x153e <_Z17handleLinkBusMsgsv+0xc46>
    151c:	89 a5       	ldd	r24, Y+41	; 0x29
    151e:	9a a5       	ldd	r25, Y+42	; 0x2a
    1520:	09 2e       	mov	r0, r25
    1522:	00 0c       	add	r0, r0
    1524:	aa 0b       	sbc	r26, r26
    1526:	bb 0b       	sbc	r27, r27
    1528:	2d a1       	ldd	r18, Y+37	; 0x25
    152a:	3e a1       	ldd	r19, Y+38	; 0x26
    152c:	4f a1       	ldd	r20, Y+39	; 0x27
    152e:	58 a5       	ldd	r21, Y+40	; 0x28
    1530:	82 17       	cp	r24, r18
    1532:	93 07       	cpc	r25, r19
    1534:	a4 07       	cpc	r26, r20
    1536:	b5 07       	cpc	r27, r21
    1538:	14 f4       	brge	.+4      	; 0x153e <_Z17handleLinkBusMsgsv+0xc46>
    153a:	da 01       	movw	r26, r20
    153c:	c9 01       	movw	r24, r18
    153e:	8a 87       	std	Y+10, r24	; 0x0a
    1540:	9b 87       	std	Y+11, r25	; 0x0b
    1542:	2f c0       	rjmp	.+94     	; 0x15a2 <_Z17handleLinkBusMsgsv+0xcaa>
    1544:	80 91 39 41 	lds	r24, 0x4139	; 0x804139 <_ZL22g_lastConversionResult+0x4>
    1548:	90 91 3a 41 	lds	r25, 0x413A	; 0x80413a <_ZL22g_lastConversionResult+0x5>
    154c:	9c 01       	movw	r18, r24
    154e:	40 e0       	ldi	r20, 0x00	; 0
    1550:	50 e0       	ldi	r21, 0x00	; 0
    1552:	da 01       	movw	r26, r20
    1554:	c9 01       	movw	r24, r18
    1556:	88 0f       	add	r24, r24
    1558:	99 1f       	adc	r25, r25
    155a:	aa 1f       	adc	r26, r26
    155c:	bb 1f       	adc	r27, r27
    155e:	88 0f       	add	r24, r24
    1560:	99 1f       	adc	r25, r25
    1562:	aa 1f       	adc	r26, r26
    1564:	bb 1f       	adc	r27, r27
    1566:	88 0f       	add	r24, r24
    1568:	99 1f       	adc	r25, r25
    156a:	aa 1f       	adc	r26, r26
    156c:	bb 1f       	adc	r27, r27
    156e:	82 1b       	sub	r24, r18
    1570:	93 0b       	sbc	r25, r19
    1572:	a4 0b       	sbc	r26, r20
    1574:	b5 0b       	sbc	r27, r21
    1576:	88 0f       	add	r24, r24
    1578:	99 1f       	adc	r25, r25
    157a:	aa 1f       	adc	r26, r26
    157c:	bb 1f       	adc	r27, r27
    157e:	8a 5c       	subi	r24, 0xCA	; 202
    1580:	9e 4f       	sbci	r25, 0xFE	; 254
    1582:	af 4f       	sbci	r26, 0xFF	; 255
    1584:	bf 4f       	sbci	r27, 0xFF	; 255
    1586:	24 e6       	ldi	r18, 0x64	; 100
    1588:	30 e0       	ldi	r19, 0x00	; 0
    158a:	40 e0       	ldi	r20, 0x00	; 0
    158c:	50 e0       	ldi	r21, 0x00	; 0
    158e:	bc 01       	movw	r22, r24
    1590:	cd 01       	movw	r24, r26
    1592:	0e 94 16 21 	call	0x422c	; 0x422c <__divmodsi4>
    1596:	da 01       	movw	r26, r20
    1598:	c9 01       	movw	r24, r18
    159a:	80 5f       	subi	r24, 0xF0	; 240
    159c:	98 4d       	sbci	r25, 0xD8	; 216
    159e:	8a 87       	std	Y+10, r24	; 0x0a
    15a0:	9b 87       	std	Y+11, r25	; 0x0b
    15a2:	8a 85       	ldd	r24, Y+10	; 0x0a
    15a4:	9b 85       	ldd	r25, Y+11	; 0x0b
    15a6:	67 e6       	ldi	r22, 0x67	; 103
    15a8:	70 e4       	ldi	r23, 0x40	; 64
    15aa:	0e 94 0e 13 	call	0x261c	; 0x261c <_Z16lb_broadcast_numjPKc>
    15ae:	80 e0       	ldi	r24, 0x00	; 0
    15b0:	90 e0       	ldi	r25, 0x00	; 0
    15b2:	0e 94 84 0d 	call	0x1b08	; 0x1b08 <_Z16ds3231_get_epochP2EC>
    15b6:	dc 01       	movw	r26, r24
    15b8:	cb 01       	movw	r24, r22
    15ba:	bc 01       	movw	r22, r24
    15bc:	cd 01       	movw	r24, r26
    15be:	0e 94 0c 01 	call	0x218	; 0x218 <set_system_time>
    15c2:	37 c0       	rjmp	.+110    	; 0x1632 <_Z17handleLinkBusMsgsv+0xd3a>
    15c4:	ce 01       	movw	r24, r28
    15c6:	c4 96       	adiw	r24, 0x34	; 52
    15c8:	0e 94 d0 0e 	call	0x1da0	; 0x1da0 <_Z15ds3231_get_tempPi>
    15cc:	98 2f       	mov	r25, r24
    15ce:	81 e0       	ldi	r24, 0x01	; 1
    15d0:	99 23       	and	r25, r25
    15d2:	09 f0       	breq	.+2      	; 0x15d6 <_Z17handleLinkBusMsgsv+0xcde>
    15d4:	80 e0       	ldi	r24, 0x00	; 0
    15d6:	88 23       	and	r24, r24
    15d8:	59 f1       	breq	.+86     	; 0x1630 <_Z17handleLinkBusMsgsv+0xd38>
    15da:	8c a9       	ldd	r24, Y+52	; 0x34
    15dc:	9d a9       	ldd	r25, Y+53	; 0x35
    15de:	6c e6       	ldi	r22, 0x6C	; 108
    15e0:	70 e4       	ldi	r23, 0x40	; 64
    15e2:	0e 94 0e 13 	call	0x261c	; 0x261c <_Z16lb_broadcast_numjPKc>
    15e6:	24 c0       	rjmp	.+72     	; 0x1630 <_Z17handleLinkBusMsgsv+0xd38>
    15e8:	41 e7       	ldi	r20, 0x71	; 113
    15ea:	50 e4       	ldi	r21, 0x40	; 64
    15ec:	65 e7       	ldi	r22, 0x75	; 117
    15ee:	70 e4       	ldi	r23, 0x40	; 64
    15f0:	83 e0       	ldi	r24, 0x03	; 3
    15f2:	0e 94 e6 12 	call	0x25cc	; 0x25cc <_Z11lb_send_msg13LBMessageTypePKcPc>
    15f6:	1d c0       	rjmp	.+58     	; 0x1632 <_Z17handleLinkBusMsgsv+0xd3a>
    15f8:	0e 94 41 12 	call	0x2482	; 0x2482 <_Z16linkbus_reset_rxv>
    15fc:	8e ec       	ldi	r24, 0xCE	; 206
    15fe:	80 93 e6 40 	sts	0x40E6, r24	; 0x8040e6 <_ZL17g_last_error_code>
    1602:	17 c0       	rjmp	.+46     	; 0x1632 <_Z17handleLinkBusMsgsv+0xd3a>
    1604:	00 00       	nop
    1606:	15 c0       	rjmp	.+42     	; 0x1632 <_Z17handleLinkBusMsgsv+0xd3a>
    1608:	00 00       	nop
    160a:	13 c0       	rjmp	.+38     	; 0x1632 <_Z17handleLinkBusMsgsv+0xd3a>
    160c:	00 00       	nop
    160e:	11 c0       	rjmp	.+34     	; 0x1632 <_Z17handleLinkBusMsgsv+0xd3a>
    1610:	00 00       	nop
    1612:	0f c0       	rjmp	.+30     	; 0x1632 <_Z17handleLinkBusMsgsv+0xd3a>
    1614:	00 00       	nop
    1616:	0d c0       	rjmp	.+26     	; 0x1632 <_Z17handleLinkBusMsgsv+0xd3a>
    1618:	00 00       	nop
    161a:	0b c0       	rjmp	.+22     	; 0x1632 <_Z17handleLinkBusMsgsv+0xd3a>
    161c:	00 00       	nop
    161e:	09 c0       	rjmp	.+18     	; 0x1632 <_Z17handleLinkBusMsgsv+0xd3a>
    1620:	00 00       	nop
    1622:	07 c0       	rjmp	.+14     	; 0x1632 <_Z17handleLinkBusMsgsv+0xd3a>
    1624:	00 00       	nop
    1626:	05 c0       	rjmp	.+10     	; 0x1632 <_Z17handleLinkBusMsgsv+0xd3a>
    1628:	00 00       	nop
    162a:	03 c0       	rjmp	.+6      	; 0x1632 <_Z17handleLinkBusMsgsv+0xd3a>
    162c:	00 00       	nop
    162e:	01 c0       	rjmp	.+2      	; 0x1632 <_Z17handleLinkBusMsgsv+0xd3a>
    1630:	00 00       	nop
    1632:	8c 85       	ldd	r24, Y+12	; 0x0c
    1634:	9d 85       	ldd	r25, Y+13	; 0x0d
    1636:	fc 01       	movw	r30, r24
    1638:	11 82       	std	Z+1, r1	; 0x01
    163a:	12 82       	std	Z+2, r1	; 0x02
    163c:	89 81       	ldd	r24, Y+1	; 0x01
    163e:	88 23       	and	r24, r24
    1640:	09 f4       	brne	.+2      	; 0x1644 <_Z17handleLinkBusMsgsv+0xd4c>
    1642:	67 c9       	rjmp	.-3378   	; 0x912 <_Z17handleLinkBusMsgsv+0x1a>
    1644:	89 e7       	ldi	r24, 0x79	; 121
    1646:	90 e4       	ldi	r25, 0x40	; 64
    1648:	0e 94 a5 12 	call	0x254a	; 0x254a <_Z17linkbus_send_textPc>
    164c:	62 c9       	rjmp	.-3388   	; 0x912 <_Z17handleLinkBusMsgsv+0x1a>
    164e:	00 00       	nop
    1650:	e5 96       	adiw	r28, 0x35	; 53
    1652:	cd bf       	out	0x3d, r28	; 61
    1654:	de bf       	out	0x3e, r29	; 62
    1656:	df 91       	pop	r29
    1658:	cf 91       	pop	r28
    165a:	1f 91       	pop	r17
    165c:	0f 91       	pop	r16
    165e:	ff 90       	pop	r15
    1660:	ef 90       	pop	r14
    1662:	08 95       	ret

00001664 <_Z13throttleValueh>:
    1664:	80 e0       	ldi	r24, 0x00	; 0
    1666:	90 e0       	ldi	r25, 0x00	; 0
    1668:	08 95       	ret

0000166a <_Z11launchEventP2SC>:

EC launchEvent(SC* statusCode)
{
	return ERROR_CODE_NO_ERROR;
}
    166a:	80 e0       	ldi	r24, 0x00	; 0
    166c:	08 95       	ret

0000166e <_ZL9PORT_initv>:
	}
	
	ADC0.MUXPOS = holdMux; /* Restore ADC registers */
	
	return(temperature_in_C);
}
    166e:	e0 e6       	ldi	r30, 0x60	; 96
    1670:	f4 e0       	ldi	r31, 0x04	; 4
    1672:	82 89       	ldd	r24, Z+18	; 0x12
    1674:	88 7f       	andi	r24, 0xF8	; 248
    1676:	82 8b       	std	Z+18, r24	; 0x12
    1678:	82 89       	ldd	r24, Z+18	; 0x12
    167a:	84 60       	ori	r24, 0x04	; 4
    167c:	82 8b       	std	Z+18, r24	; 0x12
    167e:	83 89       	ldd	r24, Z+19	; 0x13
    1680:	88 7f       	andi	r24, 0xF8	; 248
    1682:	83 8b       	std	Z+19, r24	; 0x13
    1684:	83 89       	ldd	r24, Z+19	; 0x13
    1686:	84 60       	ori	r24, 0x04	; 4
    1688:	83 8b       	std	Z+19, r24	; 0x13
    168a:	84 89       	ldd	r24, Z+20	; 0x14
    168c:	88 7f       	andi	r24, 0xF8	; 248
    168e:	84 8b       	std	Z+20, r24	; 0x14
    1690:	84 89       	ldd	r24, Z+20	; 0x14
    1692:	84 60       	ori	r24, 0x04	; 4
    1694:	84 8b       	std	Z+20, r24	; 0x14
    1696:	85 89       	ldd	r24, Z+21	; 0x15
    1698:	88 7f       	andi	r24, 0xF8	; 248
    169a:	85 8b       	std	Z+21, r24	; 0x15
    169c:	85 89       	ldd	r24, Z+21	; 0x15
    169e:	84 60       	ori	r24, 0x04	; 4
    16a0:	85 8b       	std	Z+21, r24	; 0x15
    16a2:	82 89       	ldd	r24, Z+18	; 0x12
    16a4:	87 7f       	andi	r24, 0xF7	; 247
    16a6:	82 8b       	std	Z+18, r24	; 0x12
    16a8:	83 89       	ldd	r24, Z+19	; 0x13
    16aa:	87 7f       	andi	r24, 0xF7	; 247
    16ac:	83 8b       	std	Z+19, r24	; 0x13
    16ae:	84 89       	ldd	r24, Z+20	; 0x14
    16b0:	87 7f       	andi	r24, 0xF7	; 247
    16b2:	84 8b       	std	Z+20, r24	; 0x14
    16b4:	85 89       	ldd	r24, Z+21	; 0x15
    16b6:	87 7f       	andi	r24, 0xF7	; 247
    16b8:	85 8b       	std	Z+21, r24	; 0x15
    16ba:	08 95       	ret

000016bc <_ZL10VREF0_initv>:
    16bc:	81 e0       	ldi	r24, 0x01	; 1
    16be:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7e00a0>
    16c2:	08 95       	ret

000016c4 <_ZL9ADC0_initb>:
    16c4:	9a e0       	ldi	r25, 0x0A	; 10
    16c6:	90 93 02 06 	sts	0x0602, r25	; 0x800602 <__TEXT_REGION_LENGTH__+0x7e0602>
    16ca:	88 23       	and	r24, r24
    16cc:	41 f0       	breq	.+16     	; 0x16de <_ZL9ADC0_initb+0x1a>
    16ce:	e0 e0       	ldi	r30, 0x00	; 0
    16d0:	f6 e0       	ldi	r31, 0x06	; 6
    16d2:	83 e0       	ldi	r24, 0x03	; 3
    16d4:	80 83       	st	Z, r24
    16d6:	81 e0       	ldi	r24, 0x01	; 1
    16d8:	84 87       	std	Z+12, r24	; 0x0c
    16da:	82 87       	std	Z+10, r24	; 0x0a
    16dc:	08 95       	ret
    16de:	e0 e0       	ldi	r30, 0x00	; 0
    16e0:	f6 e0       	ldi	r31, 0x06	; 6
    16e2:	81 e0       	ldi	r24, 0x01	; 1
    16e4:	80 83       	st	Z, r24
    16e6:	14 86       	std	Z+12, r1	; 0x0c
    16e8:	08 95       	ret

000016ea <_ZL16ADC0_SYSTEM_initb>:
    16ea:	cf 93       	push	r28
    16ec:	c8 2f       	mov	r28, r24
    16ee:	0e 94 37 0b 	call	0x166e	; 0x166e <_ZL9PORT_initv>
    16f2:	0e 94 5e 0b 	call	0x16bc	; 0x16bc <_ZL10VREF0_initv>
    16f6:	8c 2f       	mov	r24, r28
    16f8:	0e 94 62 0b 	call	0x16c4	; 0x16c4 <_ZL9ADC0_initb>
    16fc:	81 e0       	ldi	r24, 0x01	; 1
    16fe:	80 93 55 41 	sts	0x4155, r24	; 0x804155 <_ZL17g_adc_initialized>
    1702:	cf 91       	pop	r28
    1704:	08 95       	ret

00001706 <_ZL20ADC0_SYSTEM_shutdownv>:
    1706:	e0 e0       	ldi	r30, 0x00	; 0
    1708:	f6 e0       	ldi	r31, 0x06	; 6
    170a:	14 86       	std	Z+12, r1	; 0x0c
    170c:	10 82       	st	Z, r1
    170e:	10 92 55 41 	sts	0x4155, r1	; 0x804155 <_ZL17g_adc_initialized>
    1712:	08 95       	ret

00001714 <_Z41__static_initialization_and_destruction_0ii>:
    1714:	ef 92       	push	r14
    1716:	ff 92       	push	r15
    1718:	0f 93       	push	r16
    171a:	1f 93       	push	r17
    171c:	cf 93       	push	r28
    171e:	df 93       	push	r29
    1720:	ec 01       	movw	r28, r24
    1722:	7b 01       	movw	r14, r22
    1724:	01 97       	sbiw	r24, 0x01	; 1
    1726:	79 f4       	brne	.+30     	; 0x1746 <_Z41__static_initialization_and_destruction_0ii+0x32>
    1728:	6f 3f       	cpi	r22, 0xFF	; 255
    172a:	7f 4f       	sbci	r23, 0xFF	; 255
    172c:	61 f4       	brne	.+24     	; 0x1746 <_Z41__static_initialization_and_destruction_0ii+0x32>
    172e:	00 e0       	ldi	r16, 0x00	; 0
    1730:	10 e4       	ldi	r17, 0x40	; 64
    1732:	2c eb       	ldi	r18, 0xBC	; 188
    1734:	36 e4       	ldi	r19, 0x46	; 70
    1736:	40 e0       	ldi	r20, 0x00	; 0
    1738:	50 e0       	ldi	r21, 0x00	; 0
    173a:	69 e4       	ldi	r22, 0x49	; 73
    173c:	73 e4       	ldi	r23, 0x43	; 67
    173e:	84 e5       	ldi	r24, 0x54	; 84
    1740:	91 e4       	ldi	r25, 0x41	; 65
    1742:	0e 94 a0 0f 	call	0x1f40	; 0x1f40 <_ZN8GoertzelC1Eff>
    1746:	cd 2b       	or	r28, r29
    1748:	39 f4       	brne	.+14     	; 0x1758 <_Z41__static_initialization_and_destruction_0ii+0x44>
    174a:	ef 20       	and	r14, r15
    174c:	e0 94       	com	r14
    174e:	21 f4       	brne	.+8      	; 0x1758 <_Z41__static_initialization_and_destruction_0ii+0x44>
    1750:	84 e5       	ldi	r24, 0x54	; 84
    1752:	91 e4       	ldi	r25, 0x41	; 65
    1754:	0e 94 f0 0f 	call	0x1fe0	; 0x1fe0 <_ZN8GoertzelD1Ev>
    1758:	df 91       	pop	r29
    175a:	cf 91       	pop	r28
    175c:	1f 91       	pop	r17
    175e:	0f 91       	pop	r16
    1760:	ff 90       	pop	r15
    1762:	ef 90       	pop	r14
    1764:	08 95       	ret

00001766 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t>:
    1766:	83 30       	cpi	r24, 0x03	; 3
    1768:	c9 f0       	breq	.+50     	; 0x179c <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x36>
    176a:	28 f4       	brcc	.+10     	; 0x1776 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x10>
    176c:	81 30       	cpi	r24, 0x01	; 1
    176e:	41 f0       	breq	.+16     	; 0x1780 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x1a>
    1770:	82 30       	cpi	r24, 0x02	; 2
    1772:	69 f0       	breq	.+26     	; 0x178e <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x28>
    1774:	28 c0       	rjmp	.+80     	; 0x17c6 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x60>
    1776:	84 30       	cpi	r24, 0x04	; 4
    1778:	c1 f0       	breq	.+48     	; 0x17aa <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x44>
    177a:	85 30       	cpi	r24, 0x05	; 5
    177c:	e9 f0       	breq	.+58     	; 0x17b8 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x52>
    177e:	23 c0       	rjmp	.+70     	; 0x17c6 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x60>
    1780:	81 e0       	ldi	r24, 0x01	; 1
    1782:	0e 94 75 0b 	call	0x16ea	; 0x16ea <_ZL16ADC0_SYSTEM_initb>
    1786:	82 e0       	ldi	r24, 0x02	; 2
    1788:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <__TEXT_REGION_LENGTH__+0x7e0608>
    178c:	08 95       	ret
    178e:	80 e0       	ldi	r24, 0x00	; 0
    1790:	0e 94 75 0b 	call	0x16ea	; 0x16ea <_ZL16ADC0_SYSTEM_initb>
    1794:	83 e0       	ldi	r24, 0x03	; 3
    1796:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <__TEXT_REGION_LENGTH__+0x7e0608>
    179a:	08 95       	ret
    179c:	80 e0       	ldi	r24, 0x00	; 0
    179e:	0e 94 75 0b 	call	0x16ea	; 0x16ea <_ZL16ADC0_SYSTEM_initb>
    17a2:	84 e0       	ldi	r24, 0x04	; 4
    17a4:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <__TEXT_REGION_LENGTH__+0x7e0608>
    17a8:	08 95       	ret
    17aa:	80 e0       	ldi	r24, 0x00	; 0
    17ac:	0e 94 75 0b 	call	0x16ea	; 0x16ea <_ZL16ADC0_SYSTEM_initb>
    17b0:	85 e0       	ldi	r24, 0x05	; 5
    17b2:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <__TEXT_REGION_LENGTH__+0x7e0608>
    17b6:	08 95       	ret
    17b8:	80 e0       	ldi	r24, 0x00	; 0
    17ba:	0e 94 75 0b 	call	0x16ea	; 0x16ea <_ZL16ADC0_SYSTEM_initb>
    17be:	82 e4       	ldi	r24, 0x42	; 66
    17c0:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <__TEXT_REGION_LENGTH__+0x7e0608>
    17c4:	08 95       	ret
    17c6:	0e 94 83 0b 	call	0x1706	; 0x1706 <_ZL20ADC0_SYSTEM_shutdownv>
    17ca:	08 95       	ret

000017cc <_Z9ADC0_readv>:
    17cc:	80 91 10 06 	lds	r24, 0x0610	; 0x800610 <__TEXT_REGION_LENGTH__+0x7e0610>
    17d0:	90 91 11 06 	lds	r25, 0x0611	; 0x800611 <__TEXT_REGION_LENGTH__+0x7e0611>
    17d4:	08 95       	ret

000017d6 <__vector_24>:
	ADC0.CTRLA = ADC_RESSEL_12BIT_gc; /* Turn off ADC leaving 12-bit resolution set */
	g_adc_initialized = false;
}

ISR(ADC0_RESRDY_vect)
{
    17d6:	1f 92       	push	r1
    17d8:	0f 92       	push	r0
    17da:	0f b6       	in	r0, 0x3f	; 63
    17dc:	0f 92       	push	r0
    17de:	11 24       	eor	r1, r1
    17e0:	0b b6       	in	r0, 0x3b	; 59
    17e2:	0f 92       	push	r0
    17e4:	2f 93       	push	r18
    17e6:	3f 93       	push	r19
    17e8:	4f 93       	push	r20
    17ea:	5f 93       	push	r21
    17ec:	6f 93       	push	r22
    17ee:	7f 93       	push	r23
    17f0:	8f 93       	push	r24
    17f2:	9f 93       	push	r25
    17f4:	af 93       	push	r26
    17f6:	bf 93       	push	r27
    17f8:	ef 93       	push	r30
    17fa:	ff 93       	push	r31
	/* Clear the interrupt flag by reading the result */
	int val = ADC0_read();
    17fc:	0e 94 e6 0b 	call	0x17cc	; 0x17cc <_Z9ADC0_readv>
//	LED_toggle_level();
	if(g_goertzel.DataPoint(val))
    1800:	bc 01       	movw	r22, r24
    1802:	84 e5       	ldi	r24, 0x54	; 84
    1804:	91 e4       	ldi	r25, 0x41	; 65
    1806:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <_ZN8Goertzel9DataPointEi>
    180a:	81 11       	cpse	r24, r1
	{
		ADC0.INTCTRL = 0x00; /* disable ADC interrupt */
    180c:	10 92 0c 06 	sts	0x060C, r1	; 0x80060c <__TEXT_REGION_LENGTH__+0x7e060c>
	}
    1810:	ff 91       	pop	r31
    1812:	ef 91       	pop	r30
    1814:	bf 91       	pop	r27
    1816:	af 91       	pop	r26
    1818:	9f 91       	pop	r25
    181a:	8f 91       	pop	r24
    181c:	7f 91       	pop	r23
    181e:	6f 91       	pop	r22
    1820:	5f 91       	pop	r21
    1822:	4f 91       	pop	r20
    1824:	3f 91       	pop	r19
    1826:	2f 91       	pop	r18
    1828:	0f 90       	pop	r0
    182a:	0b be       	out	0x3b, r0	; 59
    182c:	0f 90       	pop	r0
    182e:	0f be       	out	0x3f, r0	; 63
    1830:	0f 90       	pop	r0
    1832:	1f 90       	pop	r1
    1834:	18 95       	reti

00001836 <_GLOBAL__sub_I_g_activeADCChannel>:
    1836:	6f ef       	ldi	r22, 0xFF	; 255
    1838:	7f ef       	ldi	r23, 0xFF	; 255
    183a:	81 e0       	ldi	r24, 0x01	; 1
    183c:	90 e0       	ldi	r25, 0x00	; 0
    183e:	0e 94 8a 0b 	call	0x1714	; 0x1714 <_Z41__static_initialization_and_destruction_0ii>
    1842:	08 95       	ret

00001844 <_GLOBAL__sub_D_g_activeADCChannel>:
    1844:	6f ef       	ldi	r22, 0xFF	; 255
    1846:	7f ef       	ldi	r23, 0xFF	; 255
    1848:	80 e0       	ldi	r24, 0x00	; 0
    184a:	90 e0       	ldi	r25, 0x00	; 0
    184c:	0e 94 8a 0b 	call	0x1714	; 0x1714 <_Z41__static_initialization_and_destruction_0ii>
    1850:	08 95       	ret

00001852 <__vector_29>:

/** 
Handle switch closure interrupts
*/
ISR(PORTC_PORT_vect)
{
    1852:	1f 92       	push	r1
    1854:	0f 92       	push	r0
    1856:	0f b6       	in	r0, 0x3f	; 63
    1858:	0f 92       	push	r0
    185a:	11 24       	eor	r1, r1
    185c:	8f 93       	push	r24
    185e:	9f 93       	push	r25
	static int count = 0;
	
	if(PORTC.INTFLAGS & (1 << SWITCH))
    1860:	80 91 49 04 	lds	r24, 0x0449	; 0x800449 <__TEXT_REGION_LENGTH__+0x7e0449>
    1864:	88 23       	and	r24, r24
    1866:	4c f4       	brge	.+18     	; 0x187a <__vector_29+0x28>
	{
		count++;
    1868:	80 91 56 41 	lds	r24, 0x4156	; 0x804156 <_ZZ11__vector_29E5count>
    186c:	90 91 57 41 	lds	r25, 0x4157	; 0x804157 <_ZZ11__vector_29E5count+0x1>
    1870:	01 96       	adiw	r24, 0x01	; 1
    1872:	80 93 56 41 	sts	0x4156, r24	; 0x804156 <_ZZ11__vector_29E5count>
    1876:	90 93 57 41 	sts	0x4157, r25	; 0x804157 <_ZZ11__vector_29E5count+0x1>
	}
	
	PORTC.INTFLAGS = 0xFF; /* Clear all flags */
    187a:	8f ef       	ldi	r24, 0xFF	; 255
    187c:	80 93 49 04 	sts	0x0449, r24	; 0x800449 <__TEXT_REGION_LENGTH__+0x7e0449>
}
    1880:	9f 91       	pop	r25
    1882:	8f 91       	pop	r24
    1884:	0f 90       	pop	r0
    1886:	0f be       	out	0x3f, r0	; 63
    1888:	0f 90       	pop	r0
    188a:	1f 90       	pop	r1
    188c:	18 95       	reti

0000188e <_Z10BINIO_initv>:
 */
static inline void PORTA_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
    188e:	80 b1       	in	r24, 0x00	; 0
    1890:	8b 7f       	andi	r24, 0xFB	; 251
    1892:	80 b9       	out	0x00, r24	; 0
 */
static inline void PORTA_pin_set_isc(const uint8_t pin, const PORT_ISC_t isc)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTA + 0x10 + pin);

	*port_pin_ctrl = (*port_pin_ctrl & ~PORT_ISC_gm) | isc;
    1894:	e2 e1       	ldi	r30, 0x12	; 18
    1896:	f4 e0       	ldi	r31, 0x04	; 4
    1898:	80 81       	ld	r24, Z
    189a:	88 7f       	andi	r24, 0xF8	; 248
    189c:	82 60       	ori	r24, 0x02	; 2
    189e:	80 83       	st	Z, r24
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTA.DIR |= (1 << pin);
    18a0:	80 b1       	in	r24, 0x00	; 0
    18a2:	88 60       	ori	r24, 0x08	; 8
    18a4:	80 b9       	out	0x00, r24	; 0
static inline void PORTA_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTA.OUT |= (1 << pin);
	} else {
		VPORTA.OUT &= ~(1 << pin);
    18a6:	81 b1       	in	r24, 0x01	; 1
    18a8:	87 7f       	andi	r24, 0xF7	; 247
    18aa:	81 b9       	out	0x01, r24	; 1
 */
static inline void PORTA_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
    18ac:	80 b1       	in	r24, 0x00	; 0
    18ae:	8f 7e       	andi	r24, 0xEF	; 239
    18b0:	80 b9       	out	0x00, r24	; 0
static inline void PORTA_set_pin_pull_mode(const uint8_t pin, const enum port_pull_mode pull_mode)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTA + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
    18b2:	e4 e1       	ldi	r30, 0x14	; 20
    18b4:	f4 e0       	ldi	r31, 0x04	; 4
    18b6:	80 81       	ld	r24, Z
    18b8:	88 60       	ori	r24, 0x08	; 8
    18ba:	80 83       	st	Z, r24
 */
static inline void PORTA_pin_set_isc(const uint8_t pin, const PORT_ISC_t isc)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTA + 0x10 + pin);

	*port_pin_ctrl = (*port_pin_ctrl & ~PORT_ISC_gm) | isc;
    18bc:	80 81       	ld	r24, Z
    18be:	88 7f       	andi	r24, 0xF8	; 248
    18c0:	83 60       	ori	r24, 0x03	; 3
    18c2:	80 83       	st	Z, r24
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTA.DIR |= (1 << pin);
    18c4:	80 b1       	in	r24, 0x00	; 0
    18c6:	80 62       	ori	r24, 0x20	; 32
    18c8:	80 b9       	out	0x00, r24	; 0
static inline void PORTA_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTA.OUT |= (1 << pin);
	} else {
		VPORTA.OUT &= ~(1 << pin);
    18ca:	81 b1       	in	r24, 0x01	; 1
    18cc:	8f 7d       	andi	r24, 0xDF	; 223
    18ce:	81 b9       	out	0x01, r24	; 1
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTA.DIR |= (1 << pin);
    18d0:	80 b1       	in	r24, 0x00	; 0
    18d2:	80 64       	ori	r24, 0x40	; 64
    18d4:	80 b9       	out	0x00, r24	; 0
static inline void PORTA_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTA.OUT |= (1 << pin);
	} else {
		VPORTA.OUT &= ~(1 << pin);
    18d6:	81 b1       	in	r24, 0x01	; 1
    18d8:	8f 7b       	andi	r24, 0xBF	; 191
    18da:	81 b9       	out	0x01, r24	; 1
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTA.DIR |= (1 << pin);
    18dc:	80 b1       	in	r24, 0x00	; 0
    18de:	80 68       	ori	r24, 0x80	; 128
    18e0:	80 b9       	out	0x00, r24	; 0
static inline void PORTA_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTA.OUT |= (1 << pin);
	} else {
		VPORTA.OUT &= ~(1 << pin);
    18e2:	81 b1       	in	r24, 0x01	; 1
    18e4:	8f 77       	andi	r24, 0x7F	; 127
    18e6:	81 b9       	out	0x01, r24	; 1
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTB.DIR |= (1 << pin);
    18e8:	84 b1       	in	r24, 0x04	; 4
    18ea:	81 60       	ori	r24, 0x01	; 1
    18ec:	84 b9       	out	0x04, r24	; 4
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTB.OUT |= (1 << pin);
	} else {
		VPORTB.OUT &= ~(1 << pin);
    18ee:	85 b1       	in	r24, 0x05	; 5
    18f0:	8e 7f       	andi	r24, 0xFE	; 254
    18f2:	85 b9       	out	0x05, r24	; 5
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTB.DIR |= (1 << pin);
    18f4:	84 b1       	in	r24, 0x04	; 4
    18f6:	82 60       	ori	r24, 0x02	; 2
    18f8:	84 b9       	out	0x04, r24	; 4
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTB.OUT |= (1 << pin);
	} else {
		VPORTB.OUT &= ~(1 << pin);
    18fa:	85 b1       	in	r24, 0x05	; 5
    18fc:	8d 7f       	andi	r24, 0xFD	; 253
    18fe:	85 b9       	out	0x05, r24	; 5
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTB.DIR |= (1 << pin);
    1900:	84 b1       	in	r24, 0x04	; 4
    1902:	80 61       	ori	r24, 0x10	; 16
    1904:	84 b9       	out	0x04, r24	; 4
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTB.OUT |= (1 << pin);
	} else {
		VPORTB.OUT &= ~(1 << pin);
    1906:	85 b1       	in	r24, 0x05	; 5
    1908:	8f 7e       	andi	r24, 0xEF	; 239
    190a:	85 b9       	out	0x05, r24	; 5
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTB.DIR |= (1 << pin);
    190c:	84 b1       	in	r24, 0x04	; 4
    190e:	80 62       	ori	r24, 0x20	; 32
    1910:	84 b9       	out	0x04, r24	; 4
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTB.OUT |= (1 << pin);
	} else {
		VPORTB.OUT &= ~(1 << pin);
    1912:	85 b1       	in	r24, 0x05	; 5
    1914:	8f 7d       	andi	r24, 0xDF	; 223
    1916:	85 b9       	out	0x05, r24	; 5
 */
static inline void PORTC_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTC.DIR &= ~(1 << pin);
    1918:	88 b1       	in	r24, 0x08	; 8
    191a:	8f 7e       	andi	r24, 0xEF	; 239
    191c:	88 b9       	out	0x08, r24	; 8
		break;
	case PORT_DIR_OUT:
		VPORTC.DIR |= (1 << pin);
    191e:	88 b1       	in	r24, 0x08	; 8
    1920:	80 62       	ori	r24, 0x20	; 32
    1922:	88 b9       	out	0x08, r24	; 8
static inline void PORTC_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTC.OUT |= (1 << pin);
	} else {
		VPORTC.OUT &= ~(1 << pin);
    1924:	89 b1       	in	r24, 0x09	; 9
    1926:	8f 7d       	andi	r24, 0xDF	; 223
    1928:	89 b9       	out	0x09, r24	; 9
	switch (dir) {
	case PORT_DIR_IN:
		VPORTC.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTC.DIR |= (1 << pin);
    192a:	88 b1       	in	r24, 0x08	; 8
    192c:	80 64       	ori	r24, 0x40	; 64
    192e:	88 b9       	out	0x08, r24	; 8
static inline void PORTC_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTC.OUT |= (1 << pin);
	} else {
		VPORTC.OUT &= ~(1 << pin);
    1930:	89 b1       	in	r24, 0x09	; 9
    1932:	8f 7b       	andi	r24, 0xBF	; 191
    1934:	89 b9       	out	0x09, r24	; 9
 */
static inline void PORTC_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTC.DIR &= ~(1 << pin);
    1936:	88 b1       	in	r24, 0x08	; 8
    1938:	8f 77       	andi	r24, 0x7F	; 127
    193a:	88 b9       	out	0x08, r24	; 8
static inline void PORTC_set_pin_pull_mode(const uint8_t pin, const enum port_pull_mode pull_mode)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTC + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
    193c:	e7 e5       	ldi	r30, 0x57	; 87
    193e:	f4 e0       	ldi	r31, 0x04	; 4
    1940:	80 81       	ld	r24, Z
    1942:	88 60       	ori	r24, 0x08	; 8
    1944:	80 83       	st	Z, r24
 */
static inline void PORTC_pin_set_isc(const uint8_t pin, const PORT_ISC_t isc)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTC + 0x10 + pin);

	*port_pin_ctrl = (*port_pin_ctrl & ~PORT_ISC_gm) | isc;
    1946:	80 81       	ld	r24, Z
    1948:	88 7f       	andi	r24, 0xF8	; 248
    194a:	83 60       	ori	r24, 0x03	; 3
    194c:	80 83       	st	Z, r24
 */
static inline void PORTD_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTD.DIR &= ~(1 << pin);
    194e:	8c b1       	in	r24, 0x0c	; 12
    1950:	8e 7f       	andi	r24, 0xFE	; 254
    1952:	8c b9       	out	0x0c, r24	; 12
    1954:	8c b1       	in	r24, 0x0c	; 12
    1956:	8d 7f       	andi	r24, 0xFD	; 253
    1958:	8c b9       	out	0x0c, r24	; 12
static inline void PORTD_set_pin_pull_mode(const uint8_t pin, const enum port_pull_mode pull_mode)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTD + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
    195a:	e1 e7       	ldi	r30, 0x71	; 113
    195c:	f4 e0       	ldi	r31, 0x04	; 4
    195e:	80 81       	ld	r24, Z
    1960:	88 60       	ori	r24, 0x08	; 8
    1962:	80 83       	st	Z, r24
 */
static inline void PORTD_pin_set_isc(const uint8_t pin, const PORT_ISC_t isc)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTD + 0x10 + pin);

	*port_pin_ctrl = (*port_pin_ctrl & ~PORT_ISC_gm) | isc;
    1964:	80 81       	ld	r24, Z
    1966:	88 7f       	andi	r24, 0xF8	; 248
    1968:	83 60       	ori	r24, 0x03	; 3
    196a:	80 83       	st	Z, r24
		break;
	case PORT_DIR_OUT:
		VPORTD.DIR |= (1 << pin);
		break;
	case PORT_DIR_OFF:
		*((uint8_t *)&PORTD + 0x10 + pin) |= 1 << PORT_PULLUPEN_bp;
    196c:	e7 e7       	ldi	r30, 0x77	; 119
    196e:	f4 e0       	ldi	r31, 0x04	; 4
    1970:	80 81       	ld	r24, Z
    1972:	88 60       	ori	r24, 0x08	; 8
    1974:	80 83       	st	Z, r24
		break;
	case PORT_DIR_OUT:
		VPORTE.DIR |= (1 << pin);
		break;
	case PORT_DIR_OFF:
		*((uint8_t *)&PORTE + 0x10 + pin) |= 1 << PORT_PULLUPEN_bp;
    1976:	e0 e9       	ldi	r30, 0x90	; 144
    1978:	f4 e0       	ldi	r31, 0x04	; 4
    197a:	80 81       	ld	r24, Z
    197c:	88 60       	ori	r24, 0x08	; 8
    197e:	80 83       	st	Z, r24
    1980:	e1 e9       	ldi	r30, 0x91	; 145
    1982:	f4 e0       	ldi	r31, 0x04	; 4
    1984:	80 81       	ld	r24, Z
    1986:	88 60       	ori	r24, 0x08	; 8
    1988:	80 83       	st	Z, r24
    198a:	e2 e9       	ldi	r30, 0x92	; 146
    198c:	f4 e0       	ldi	r31, 0x04	; 4
    198e:	80 81       	ld	r24, Z
    1990:	88 60       	ori	r24, 0x08	; 8
    1992:	80 83       	st	Z, r24
    1994:	e3 e9       	ldi	r30, 0x93	; 147
    1996:	f4 e0       	ldi	r31, 0x04	; 4
    1998:	80 81       	ld	r24, Z
    199a:	88 60       	ori	r24, 0x08	; 8
    199c:	80 83       	st	Z, r24
		break;
	case PORT_DIR_OUT:
		VPORTF.DIR |= (1 << pin);
		break;
	case PORT_DIR_OFF:
		*((uint8_t *)&PORTF + 0x10 + pin) |= 1 << PORT_PULLUPEN_bp;
    199e:	e2 eb       	ldi	r30, 0xB2	; 178
    19a0:	f4 e0       	ldi	r31, 0x04	; 4
    19a2:	80 81       	ld	r24, Z
    19a4:	88 60       	ori	r24, 0x08	; 8
    19a6:	80 83       	st	Z, r24
    19a8:	e3 eb       	ldi	r30, 0xB3	; 179
    19aa:	f4 e0       	ldi	r31, 0x04	; 4
    19ac:	80 81       	ld	r24, Z
    19ae:	88 60       	ori	r24, 0x08	; 8
    19b0:	80 83       	st	Z, r24
    19b2:	e4 eb       	ldi	r30, 0xB4	; 180
    19b4:	f4 e0       	ldi	r31, 0x04	; 4
    19b6:	80 81       	ld	r24, Z
    19b8:	88 60       	ori	r24, 0x08	; 8
    19ba:	80 83       	st	Z, r24
    19bc:	e5 eb       	ldi	r30, 0xB5	; 181
    19be:	f4 e0       	ldi	r31, 0x04	; 4
    19c0:	80 81       	ld	r24, Z
    19c2:	88 60       	ori	r24, 0x08	; 8
    19c4:	80 83       	st	Z, r24
    19c6:	08 95       	ret

000019c8 <BOD_init>:
{

	// ccp_write_io((void*)&(BOD.CTRLA),BOD_SLEEP_DIS_gc /* Disabled */);

	BOD.INTCTRL = 0 << BOD_VLMIE_bp        /* voltage level monitor interrrupt enable: disabled */
	              | BOD_VLMCFG_FALLING_gc; /* Interrupt when supply goes below VLM level */
    19c8:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>

	// BOD.VLMCTRLA = BOD_VLMLVL_5ABOVE_gc; /* VLM threshold 5% above BOD level */

	return 0;
}
    19cc:	80 e0       	ldi	r24, 0x00	; 0
    19ce:	08 95       	ret

000019d0 <CLKCTRL_init>:
 *       on calling convention. The memory model is not visible to the
 *       preprocessor, so it must be defined in the Assembler preprocessor directives.
 */
static inline void ccp_write_io(void *addr, uint8_t value)
{
	protected_write_io(addr, CCP_IOREG_gc, value);
    19d0:	44 e2       	ldi	r20, 0x24	; 36
    19d2:	68 ed       	ldi	r22, 0xD8	; 216
    19d4:	88 e6       	ldi	r24, 0x68	; 104
    19d6:	90 e0       	ldi	r25, 0x00	; 0
    19d8:	0e 94 79 15 	call	0x2af2	; 0x2af2 <protected_write_io>
	//		 | 0 << CLKCTRL_CLKOUT_bp /* System clock out: disabled */);

	// ccp_write_io((void*)&(CLKCTRL.MCLKLOCK),0 << CLKCTRL_LOCKEN_bp /* lock enable: disabled */);

	return 0;
}
    19dc:	80 e0       	ldi	r24, 0x00	; 0
    19de:	08 95       	ret

000019e0 <CPUINT_init>:

	// CPUINT.LVL0PRI = 0x0 << CPUINT_LVL0PRI_gp; /* Interrupt Level Priority: 0x0 */

	// CPUINT.LVL1VEC = 0x0 << CPUINT_LVL1VEC_gp; /* Interrupt Vector with High Priority: 0x0 */

	ENABLE_INTERRUPTS();
    19e0:	78 94       	sei

	return 0;
}
    19e2:	80 e0       	ldi	r24, 0x00	; 0
    19e4:	08 95       	ret

000019e6 <_ZL9VREF_initv>:
static void VREF_init(void)
{
//	VREF.DAC0REF = VREF_REFSEL_2V048_gc /* Select the 2.048V Internal Voltage Reference for DAC */
//	VREF.DAC0REF = VREF_REFSEL_2V500_gc /* Select the 2.048V Internal Voltage Reference for DAC */
//	| VREF_ALWAYSON_bm;    /* Set the Voltage Reference in Always On mode */
	VREF.DAC0REF = VREF_REFSEL_2V500_gc; /* Select the 2.048V Internal Voltage Reference for DAC */
    19e6:	83 e0       	ldi	r24, 0x03	; 3
    19e8:	80 93 a2 00 	sts	0x00A2, r24	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7e00a2>
	/* Wait VREF start-up time */
	while(util_delay_ms(VREF_STARTUP_TIME_MS));
    19ec:	6a e0       	ldi	r22, 0x0A	; 10
    19ee:	70 e0       	ldi	r23, 0x00	; 0
    19f0:	80 e0       	ldi	r24, 0x00	; 0
    19f2:	90 e0       	ldi	r25, 0x00	; 0
    19f4:	0e 94 8c 1b 	call	0x3718	; 0x3718 <util_delay_ms>
    19f8:	81 11       	cpse	r24, r1
    19fa:	f8 cf       	rjmp	.-16     	; 0x19ec <_ZL9VREF_initv+0x6>
}
    19fc:	08 95       	ret

000019fe <_Z11DAC0_setValj>:
}

void DAC0_setVal(uint16_t value)
{
	/* Store the two LSbs in DAC0.DATAL */
	DAC0.DATAL = (value & LSB_MASK) << 6;
    19fe:	28 2f       	mov	r18, r24
    1a00:	22 95       	swap	r18
    1a02:	22 0f       	add	r18, r18
    1a04:	22 0f       	add	r18, r18
    1a06:	20 7c       	andi	r18, 0xC0	; 192
    1a08:	e0 ea       	ldi	r30, 0xA0	; 160
    1a0a:	f6 e0       	ldi	r31, 0x06	; 6
    1a0c:	22 83       	std	Z+2, r18	; 0x02
	/* Store the eight MSbs in DAC0.DATAH */
	DAC0.DATAH = value >> 2;
    1a0e:	96 95       	lsr	r25
    1a10:	87 95       	ror	r24
    1a12:	96 95       	lsr	r25
    1a14:	87 95       	ror	r24
    1a16:	83 83       	std	Z+3, r24	; 0x03
    1a18:	08 95       	ret

00001a1a <_Z9DAC0_initv>:
	while(util_delay_ms(VREF_STARTUP_TIME_MS));
}

void DAC0_init(void)
{
	VREF_init();
    1a1a:	0e 94 f3 0c 	call	0x19e6	; 0x19e6 <_ZL9VREF_initv>
	/* Disable digital input buffer */
	PORTD.PIN6CTRL &= ~PORT_ISC_gm;
    1a1e:	e0 e6       	ldi	r30, 0x60	; 96
    1a20:	f4 e0       	ldi	r31, 0x04	; 4
    1a22:	86 89       	ldd	r24, Z+22	; 0x16
    1a24:	88 7f       	andi	r24, 0xF8	; 248
    1a26:	86 8b       	std	Z+22, r24	; 0x16
	PORTD.PIN6CTRL |= PORT_ISC_INPUT_DISABLE_gc;
    1a28:	86 89       	ldd	r24, Z+22	; 0x16
    1a2a:	84 60       	ori	r24, 0x04	; 4
    1a2c:	86 8b       	std	Z+22, r24	; 0x16
	/* Disable pull-up resistor */
	PORTD.PIN6CTRL &= ~PORT_PULLUPEN_bm;
    1a2e:	86 89       	ldd	r24, Z+22	; 0x16
    1a30:	87 7f       	andi	r24, 0xF7	; 247
    1a32:	86 8b       	std	Z+22, r24	; 0x16
	DAC0.CTRLA = DAC_ENABLE_bm          /* Enable DAC */
	| DAC_OUTEN_bm           /* Enable output buffer */
	| DAC_RUNSTDBY_bm;       /* Enable Run in Standby mode */
    1a34:	81 ec       	ldi	r24, 0xC1	; 193
    1a36:	80 93 a0 06 	sts	0x06A0, r24	; 0x8006a0 <__TEXT_REGION_LENGTH__+0x7e06a0>
	
	DAC0_setVal(DAC_DEFAULT_VALUE);
    1a3a:	80 e0       	ldi	r24, 0x00	; 0
    1a3c:	90 e0       	ldi	r25, 0x00	; 0
    1a3e:	0e 94 ff 0c 	call	0x19fe	; 0x19fe <_Z11DAC0_setValj>
    1a42:	08 95       	ret

00001a44 <mcu_init>:
	 * disables all peripherals to save power. Driver shall enable
	 * peripheral if used */

	/* Set all pins to low power mode */

	for (uint8_t i = 0; i < 8; i++) {
    1a44:	80 e0       	ldi	r24, 0x00	; 0
    1a46:	88 30       	cpi	r24, 0x08	; 8
    1a48:	48 f4       	brcc	.+18     	; 0x1a5c <mcu_init+0x18>
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    1a4a:	e8 2f       	mov	r30, r24
    1a4c:	f0 e0       	ldi	r31, 0x00	; 0
    1a4e:	e0 5f       	subi	r30, 0xF0	; 240
    1a50:	fb 4f       	sbci	r31, 0xFB	; 251
    1a52:	90 81       	ld	r25, Z
    1a54:	98 60       	ori	r25, 0x08	; 8
    1a56:	90 83       	st	Z, r25
	 * disables all peripherals to save power. Driver shall enable
	 * peripheral if used */

	/* Set all pins to low power mode */

	for (uint8_t i = 0; i < 8; i++) {
    1a58:	8f 5f       	subi	r24, 0xFF	; 255
    1a5a:	f5 cf       	rjmp	.-22     	; 0x1a46 <mcu_init+0x2>
    1a5c:	80 e0       	ldi	r24, 0x00	; 0
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    1a5e:	88 30       	cpi	r24, 0x08	; 8
    1a60:	48 f4       	brcc	.+18     	; 0x1a74 <mcu_init+0x30>
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    1a62:	e8 2f       	mov	r30, r24
    1a64:	f0 e0       	ldi	r31, 0x00	; 0
    1a66:	e0 5d       	subi	r30, 0xD0	; 208
    1a68:	fb 4f       	sbci	r31, 0xFB	; 251
    1a6a:	90 81       	ld	r25, Z
    1a6c:	98 60       	ori	r25, 0x08	; 8
    1a6e:	90 83       	st	Z, r25

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    1a70:	8f 5f       	subi	r24, 0xFF	; 255
    1a72:	f5 cf       	rjmp	.-22     	; 0x1a5e <mcu_init+0x1a>
    1a74:	80 e0       	ldi	r24, 0x00	; 0
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    1a76:	88 30       	cpi	r24, 0x08	; 8
    1a78:	48 f4       	brcc	.+18     	; 0x1a8c <mcu_init+0x48>
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    1a7a:	e8 2f       	mov	r30, r24
    1a7c:	f0 e0       	ldi	r31, 0x00	; 0
    1a7e:	e0 5b       	subi	r30, 0xB0	; 176
    1a80:	fb 4f       	sbci	r31, 0xFB	; 251
    1a82:	90 81       	ld	r25, Z
    1a84:	98 60       	ori	r25, 0x08	; 8
    1a86:	90 83       	st	Z, r25

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    1a88:	8f 5f       	subi	r24, 0xFF	; 255
    1a8a:	f5 cf       	rjmp	.-22     	; 0x1a76 <mcu_init+0x32>
    1a8c:	80 e0       	ldi	r24, 0x00	; 0
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    1a8e:	88 30       	cpi	r24, 0x08	; 8
    1a90:	48 f4       	brcc	.+18     	; 0x1aa4 <mcu_init+0x60>
		*((uint8_t *)&PORTD + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    1a92:	e8 2f       	mov	r30, r24
    1a94:	f0 e0       	ldi	r31, 0x00	; 0
    1a96:	e0 59       	subi	r30, 0x90	; 144
    1a98:	fb 4f       	sbci	r31, 0xFB	; 251
    1a9a:	90 81       	ld	r25, Z
    1a9c:	98 60       	ori	r25, 0x08	; 8
    1a9e:	90 83       	st	Z, r25

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    1aa0:	8f 5f       	subi	r24, 0xFF	; 255
    1aa2:	f5 cf       	rjmp	.-22     	; 0x1a8e <mcu_init+0x4a>
    1aa4:	80 e0       	ldi	r24, 0x00	; 0
		*((uint8_t *)&PORTD + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    1aa6:	88 30       	cpi	r24, 0x08	; 8
    1aa8:	48 f4       	brcc	.+18     	; 0x1abc <mcu_init+0x78>
		*((uint8_t *)&PORTE + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    1aaa:	e8 2f       	mov	r30, r24
    1aac:	f0 e0       	ldi	r31, 0x00	; 0
    1aae:	e0 57       	subi	r30, 0x70	; 112
    1ab0:	fb 4f       	sbci	r31, 0xFB	; 251
    1ab2:	90 81       	ld	r25, Z
    1ab4:	98 60       	ori	r25, 0x08	; 8
    1ab6:	90 83       	st	Z, r25

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTD + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    1ab8:	8f 5f       	subi	r24, 0xFF	; 255
    1aba:	f5 cf       	rjmp	.-22     	; 0x1aa6 <mcu_init+0x62>
    1abc:	80 e0       	ldi	r24, 0x00	; 0
		*((uint8_t *)&PORTE + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    1abe:	88 30       	cpi	r24, 0x08	; 8
    1ac0:	48 f4       	brcc	.+18     	; 0x1ad4 <mcu_init+0x90>
		*((uint8_t *)&PORTF + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    1ac2:	e8 2f       	mov	r30, r24
    1ac4:	f0 e0       	ldi	r31, 0x00	; 0
    1ac6:	e0 55       	subi	r30, 0x50	; 80
    1ac8:	fb 4f       	sbci	r31, 0xFB	; 251
    1aca:	90 81       	ld	r25, Z
    1acc:	98 60       	ori	r25, 0x08	; 8
    1ace:	90 83       	st	Z, r25

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTE + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    1ad0:	8f 5f       	subi	r24, 0xFF	; 255
    1ad2:	f5 cf       	rjmp	.-22     	; 0x1abe <mcu_init+0x7a>
    1ad4:	08 95       	ret

00001ad6 <system_init>:
/**
 * \brief System initialization
 */
void system_init()
{
	mcu_init();
    1ad6:	0e 94 22 0d 	call	0x1a44	; 0x1a44 <mcu_init>

	CLKCTRL_init(); /* Set CPU clock speed appropriately */
    1ada:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <CLKCTRL_init>
	TIMERB_init(); /* Timers must be initialized before utility_delay functions will work */
    1ade:	0e 94 6f 1b 	call	0x36de	; 0x36de <TIMERB_init>
	CPUINT_init(); /* Interrupts must also be enabled before timer interrupts will function */
    1ae2:	0e 94 f0 0c 	call	0x19e0	; 0x19e0 <CPUINT_init>
	BINIO_init();
    1ae6:	0e 94 47 0c 	call	0x188e	; 0x188e <_Z10BINIO_initv>
static inline void PORTC_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTC.OUT |= (1 << pin);
	} else {
		VPORTC.OUT &= ~(1 << pin);
    1aea:	89 b1       	in	r24, 0x09	; 9
    1aec:	8f 7b       	andi	r24, 0xBF	; 191
    1aee:	89 b9       	out	0x09, r24	; 9
	switch (dir) {
	case PORT_DIR_IN:
		VPORTC.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTC.DIR |= (1 << pin);
    1af0:	88 b1       	in	r24, 0x08	; 8
    1af2:	80 64       	ori	r24, 0x40	; 64
    1af4:	88 b9       	out	0x08, r24	; 8
	    // <true"> High
	    false);

	LED_set_dir(PORT_DIR_OUT);

	SLPCTRL_init();
    1af6:	0e 94 6d 1b 	call	0x36da	; 0x36da <SLPCTRL_init>
	
	DAC0_init();
    1afa:	0e 94 0d 0d 	call	0x1a1a	; 0x1a1a <_Z9DAC0_initv>

	linkbus_init();
    1afe:	0e 94 6a 12 	call	0x24d4	; 0x24d4 <_Z12linkbus_initv>

	BOD_init();
    1b02:	0e 94 e4 0c 	call	0x19c8	; 0x19c8 <BOD_init>
    1b06:	08 95       	ret

00001b08 <_Z16ds3231_get_epochP2EC>:
		else
		{
			data[1] = 0x04;
			I2C_0_SendData(DS3231_I2C_SLAVE_ADDR, data, 2);
		}
	}
    1b08:	4f 92       	push	r4
    1b0a:	5f 92       	push	r5
    1b0c:	6f 92       	push	r6
    1b0e:	7f 92       	push	r7
    1b10:	8f 92       	push	r8
    1b12:	9f 92       	push	r9
    1b14:	af 92       	push	r10
    1b16:	bf 92       	push	r11
    1b18:	cf 92       	push	r12
    1b1a:	df 92       	push	r13
    1b1c:	ef 92       	push	r14
    1b1e:	ff 92       	push	r15
    1b20:	0f 93       	push	r16
    1b22:	1f 93       	push	r17
    1b24:	cf 93       	push	r28
    1b26:	df 93       	push	r29
    1b28:	cd b7       	in	r28, 0x3d	; 61
    1b2a:	de b7       	in	r29, 0x3e	; 62
    1b2c:	63 97       	sbiw	r28, 0x13	; 19
    1b2e:	cd bf       	out	0x3d, r28	; 61
    1b30:	de bf       	out	0x3e, r29	; 62
    1b32:	5c 01       	movw	r10, r24
    1b34:	be 01       	movw	r22, r28
    1b36:	6f 5f       	subi	r22, 0xFF	; 255
    1b38:	7f 4f       	sbci	r23, 0xFF	; 255
    1b3a:	87 e0       	ldi	r24, 0x07	; 7
    1b3c:	db 01       	movw	r26, r22
    1b3e:	1d 92       	st	X+, r1
    1b40:	8a 95       	dec	r24
    1b42:	e9 f7       	brne	.-6      	; 0x1b3e <_Z16ds3231_get_epochP2EC+0x36>
    1b44:	47 e0       	ldi	r20, 0x07	; 7
    1b46:	80 ed       	ldi	r24, 0xD0	; 208
    1b48:	0e 94 ab 10 	call	0x2156	; 0x2156 <I2C_0_GetData>
    1b4c:	98 2e       	mov	r9, r24
    1b4e:	b7 e0       	ldi	r27, 0x07	; 7
    1b50:	8b 13       	cpse	r24, r27
    1b52:	04 c1       	rjmp	.+520    	; 0x1d5c <_Z16ds3231_get_epochP2EC+0x254>
    1b54:	fe 01       	movw	r30, r28
    1b56:	38 96       	adiw	r30, 0x08	; 8
    1b58:	8c e0       	ldi	r24, 0x0C	; 12
    1b5a:	df 01       	movw	r26, r30
    1b5c:	1d 92       	st	X+, r1
    1b5e:	8a 95       	dec	r24
    1b60:	e9 f7       	brne	.-6      	; 0x1b5c <_Z16ds3231_get_epochP2EC+0x54>
    1b62:	2f 81       	ldd	r18, Y+7	; 0x07
    1b64:	82 2f       	mov	r24, r18
    1b66:	8f 70       	andi	r24, 0x0F	; 15
    1b68:	e8 2e       	mov	r14, r24
    1b6a:	f1 2c       	mov	r15, r1
    1b6c:	c7 01       	movw	r24, r14
    1b6e:	8c 59       	subi	r24, 0x9C	; 156
    1b70:	9f 4f       	sbci	r25, 0xFF	; 255
    1b72:	22 95       	swap	r18
    1b74:	2f 70       	andi	r18, 0x0F	; 15
    1b76:	30 e0       	ldi	r19, 0x00	; 0
    1b78:	79 01       	movw	r14, r18
    1b7a:	ee 0c       	add	r14, r14
    1b7c:	ff 1c       	adc	r15, r15
    1b7e:	22 0f       	add	r18, r18
    1b80:	33 1f       	adc	r19, r19
    1b82:	22 0f       	add	r18, r18
    1b84:	33 1f       	adc	r19, r19
    1b86:	22 0f       	add	r18, r18
    1b88:	33 1f       	adc	r19, r19
    1b8a:	2e 0d       	add	r18, r14
    1b8c:	3f 1d       	adc	r19, r15
    1b8e:	7c 01       	movw	r14, r24
    1b90:	e2 0e       	add	r14, r18
    1b92:	f3 1e       	adc	r15, r19
    1b94:	67 01       	movw	r12, r14
    1b96:	b4 e9       	ldi	r27, 0x94	; 148
    1b98:	cb 1a       	sub	r12, r27
    1b9a:	b8 ef       	ldi	r27, 0xF8	; 248
    1b9c:	db 0a       	sbc	r13, r27
    1b9e:	8e 81       	ldd	r24, Y+6	; 0x06
    1ba0:	98 2f       	mov	r25, r24
    1ba2:	9f 70       	andi	r25, 0x0F	; 15
    1ba4:	82 95       	swap	r24
    1ba6:	8f 70       	andi	r24, 0x0F	; 15
    1ba8:	88 0f       	add	r24, r24
    1baa:	08 2f       	mov	r16, r24
    1bac:	00 0f       	add	r16, r16
    1bae:	00 0f       	add	r16, r16
    1bb0:	80 0f       	add	r24, r16
    1bb2:	08 2f       	mov	r16, r24
    1bb4:	09 0f       	add	r16, r25
    1bb6:	ed 81       	ldd	r30, Y+5	; 0x05
    1bb8:	8e 2f       	mov	r24, r30
    1bba:	8f 70       	andi	r24, 0x0F	; 15
    1bbc:	e2 95       	swap	r30
    1bbe:	ef 70       	andi	r30, 0x0F	; 15
    1bc0:	ee 0f       	add	r30, r30
    1bc2:	8e 2e       	mov	r8, r30
    1bc4:	88 0c       	add	r8, r8
    1bc6:	88 0c       	add	r8, r8
    1bc8:	e8 0d       	add	r30, r8
    1bca:	8e 2e       	mov	r8, r30
    1bcc:	88 0e       	add	r8, r24
    1bce:	11 e0       	ldi	r17, 0x01	; 1
    1bd0:	10 17       	cp	r17, r16
    1bd2:	60 f4       	brcc	.+24     	; 0x1bec <_Z16ds3231_get_epochP2EC+0xe4>
    1bd4:	61 2f       	mov	r22, r17
    1bd6:	c6 01       	movw	r24, r12
    1bd8:	0e 94 ff 00 	call	0x1fe	; 0x1fe <month_length>
    1bdc:	28 89       	ldd	r18, Y+16	; 0x10
    1bde:	39 89       	ldd	r19, Y+17	; 0x11
    1be0:	28 0f       	add	r18, r24
    1be2:	31 1d       	adc	r19, r1
    1be4:	28 8b       	std	Y+16, r18	; 0x10
    1be6:	39 8b       	std	Y+17, r19	; 0x11
    1be8:	1f 5f       	subi	r17, 0xFF	; 255
    1bea:	f2 cf       	rjmp	.-28     	; 0x1bd0 <_Z16ds3231_get_epochP2EC+0xc8>
    1bec:	e8 2d       	mov	r30, r8
    1bee:	88 0c       	add	r8, r8
    1bf0:	ff 0b       	sbc	r31, r31
    1bf2:	31 97       	sbiw	r30, 0x01	; 1
    1bf4:	88 89       	ldd	r24, Y+16	; 0x10
    1bf6:	99 89       	ldd	r25, Y+17	; 0x11
    1bf8:	e8 0f       	add	r30, r24
    1bfa:	f9 1f       	adc	r31, r25
    1bfc:	89 81       	ldd	r24, Y+1	; 0x01
    1bfe:	98 2f       	mov	r25, r24
    1c00:	92 95       	swap	r25
    1c02:	9f 70       	andi	r25, 0x0F	; 15
    1c04:	99 0f       	add	r25, r25
    1c06:	49 2f       	mov	r20, r25
    1c08:	44 0f       	add	r20, r20
    1c0a:	44 0f       	add	r20, r20
    1c0c:	49 0f       	add	r20, r25
    1c0e:	8f 70       	andi	r24, 0x0F	; 15
    1c10:	48 0f       	add	r20, r24
    1c12:	3a 81       	ldd	r19, Y+2	; 0x02
    1c14:	23 2f       	mov	r18, r19
    1c16:	22 95       	swap	r18
    1c18:	2f 70       	andi	r18, 0x0F	; 15
    1c1a:	22 0f       	add	r18, r18
    1c1c:	92 2f       	mov	r25, r18
    1c1e:	99 0f       	add	r25, r25
    1c20:	99 0f       	add	r25, r25
    1c22:	82 2f       	mov	r24, r18
    1c24:	89 0f       	add	r24, r25
    1c26:	23 2f       	mov	r18, r19
    1c28:	2f 70       	andi	r18, 0x0F	; 15
    1c2a:	28 0f       	add	r18, r24
    1c2c:	ab 81       	ldd	r26, Y+3	; 0x03
    1c2e:	6a 2f       	mov	r22, r26
    1c30:	70 e0       	ldi	r23, 0x00	; 0
    1c32:	cb 01       	movw	r24, r22
    1c34:	95 95       	asr	r25
    1c36:	87 95       	ror	r24
    1c38:	95 95       	asr	r25
    1c3a:	87 95       	ror	r24
    1c3c:	95 95       	asr	r25
    1c3e:	87 95       	ror	r24
    1c40:	95 95       	asr	r25
    1c42:	87 95       	ror	r24
    1c44:	95 95       	asr	r25
    1c46:	87 95       	ror	r24
    1c48:	38 2f       	mov	r19, r24
    1c4a:	31 70       	andi	r19, 0x01	; 1
    1c4c:	cb 01       	movw	r24, r22
    1c4e:	95 95       	asr	r25
    1c50:	87 95       	ror	r24
    1c52:	95 95       	asr	r25
    1c54:	87 95       	ror	r24
    1c56:	95 95       	asr	r25
    1c58:	87 95       	ror	r24
    1c5a:	95 95       	asr	r25
    1c5c:	87 95       	ror	r24
    1c5e:	81 70       	andi	r24, 0x01	; 1
    1c60:	88 0f       	add	r24, r24
    1c62:	98 2f       	mov	r25, r24
    1c64:	99 0f       	add	r25, r25
    1c66:	99 0f       	add	r25, r25
    1c68:	89 0f       	add	r24, r25
    1c6a:	af 70       	andi	r26, 0x0F	; 15
    1c6c:	a8 0f       	add	r26, r24
    1c6e:	06 2e       	mov	r0, r22
    1c70:	67 2f       	mov	r22, r23
    1c72:	00 0c       	add	r0, r0
    1c74:	66 1f       	adc	r22, r22
    1c76:	77 0b       	sbc	r23, r23
    1c78:	00 0c       	add	r0, r0
    1c7a:	66 1f       	adc	r22, r22
    1c7c:	77 1f       	adc	r23, r23
    1c7e:	60 ff       	sbrs	r22, 0
    1c80:	04 c0       	rjmp	.+8      	; 0x1c8a <_Z16ds3231_get_epochP2EC+0x182>
    1c82:	33 23       	and	r19, r19
    1c84:	21 f0       	breq	.+8      	; 0x1c8e <_Z16ds3231_get_epochP2EC+0x186>
    1c86:	a4 5f       	subi	r26, 0xF4	; 244
    1c88:	02 c0       	rjmp	.+4      	; 0x1c8e <_Z16ds3231_get_epochP2EC+0x186>
    1c8a:	31 11       	cpse	r19, r1
    1c8c:	ac 5e       	subi	r26, 0xEC	; 236
    1c8e:	04 2e       	mov	r0, r20
    1c90:	00 0c       	add	r0, r0
    1c92:	55 0b       	sbc	r21, r21
    1c94:	8c e3       	ldi	r24, 0x3C	; 60
    1c96:	28 02       	muls	r18, r24
    1c98:	40 0d       	add	r20, r0
    1c9a:	51 1d       	adc	r21, r1
    1c9c:	11 24       	eor	r1, r1
    1c9e:	0a 2e       	mov	r0, r26
    1ca0:	00 0c       	add	r0, r0
    1ca2:	bb 0b       	sbc	r27, r27
    1ca4:	20 e1       	ldi	r18, 0x10	; 16
    1ca6:	3e e0       	ldi	r19, 0x0E	; 14
    1ca8:	0e 94 4d 21 	call	0x429a	; 0x429a <__usmulhisi3>
    1cac:	2a 01       	movw	r4, r20
    1cae:	55 0f       	add	r21, r21
    1cb0:	66 08       	sbc	r6, r6
    1cb2:	77 08       	sbc	r7, r7
    1cb4:	46 0e       	add	r4, r22
    1cb6:	57 1e       	adc	r5, r23
    1cb8:	68 1e       	adc	r6, r24
    1cba:	79 1e       	adc	r7, r25
    1cbc:	df 01       	movw	r26, r30
    1cbe:	20 e8       	ldi	r18, 0x80	; 128
    1cc0:	31 e5       	ldi	r19, 0x51	; 81
    1cc2:	41 e0       	ldi	r20, 0x01	; 1
    1cc4:	50 e0       	ldi	r21, 0x00	; 0
    1cc6:	0e 94 5f 21 	call	0x42be	; 0x42be <__mulshisi3>
    1cca:	46 0e       	add	r4, r22
    1ccc:	57 1e       	adc	r5, r23
    1cce:	68 1e       	adc	r6, r24
    1cd0:	79 1e       	adc	r7, r25
    1cd2:	d7 01       	movw	r26, r14
    1cd4:	a6 54       	subi	r26, 0x46	; 70
    1cd6:	b1 09       	sbc	r27, r1
    1cd8:	20 e8       	ldi	r18, 0x80	; 128
    1cda:	33 e3       	ldi	r19, 0x33	; 51
    1cdc:	41 ee       	ldi	r20, 0xE1	; 225
    1cde:	51 e0       	ldi	r21, 0x01	; 1
    1ce0:	0e 94 5f 21 	call	0x42be	; 0x42be <__mulshisi3>
    1ce4:	46 0e       	add	r4, r22
    1ce6:	57 1e       	adc	r5, r23
    1ce8:	68 1e       	adc	r6, r24
    1cea:	79 1e       	adc	r7, r25
    1cec:	c7 01       	movw	r24, r14
    1cee:	85 54       	subi	r24, 0x45	; 69
    1cf0:	91 09       	sbc	r25, r1
    1cf2:	dc 01       	movw	r26, r24
    1cf4:	0a f4       	brpl	.+2      	; 0x1cf8 <_Z16ds3231_get_epochP2EC+0x1f0>
    1cf6:	13 96       	adiw	r26, 0x03	; 3
    1cf8:	b5 95       	asr	r27
    1cfa:	a7 95       	ror	r26
    1cfc:	b5 95       	asr	r27
    1cfe:	a7 95       	ror	r26
    1d00:	20 e8       	ldi	r18, 0x80	; 128
    1d02:	31 e5       	ldi	r19, 0x51	; 81
    1d04:	41 e0       	ldi	r20, 0x01	; 1
    1d06:	50 e0       	ldi	r21, 0x00	; 0
    1d08:	0e 94 5f 21 	call	0x42be	; 0x42be <__mulshisi3>
    1d0c:	46 0e       	add	r4, r22
    1d0e:	57 1e       	adc	r5, r23
    1d10:	68 1e       	adc	r6, r24
    1d12:	79 1e       	adc	r7, r25
    1d14:	c7 01       	movw	r24, r14
    1d16:	01 97       	sbiw	r24, 0x01	; 1
    1d18:	64 e6       	ldi	r22, 0x64	; 100
    1d1a:	70 e0       	ldi	r23, 0x00	; 0
    1d1c:	0e 94 e0 20 	call	0x41c0	; 0x41c0 <__divmodhi4>
    1d20:	db 01       	movw	r26, r22
    1d22:	20 e8       	ldi	r18, 0x80	; 128
    1d24:	3e ea       	ldi	r19, 0xAE	; 174
    1d26:	4e ef       	ldi	r20, 0xFE	; 254
    1d28:	5f ef       	ldi	r21, 0xFF	; 255
    1d2a:	0e 94 5f 21 	call	0x42be	; 0x42be <__mulshisi3>
    1d2e:	46 0e       	add	r4, r22
    1d30:	57 1e       	adc	r5, r23
    1d32:	68 1e       	adc	r6, r24
    1d34:	79 1e       	adc	r7, r25
    1d36:	c7 01       	movw	r24, r14
    1d38:	85 5d       	subi	r24, 0xD5	; 213
    1d3a:	9e 4f       	sbci	r25, 0xFE	; 254
    1d3c:	60 e9       	ldi	r22, 0x90	; 144
    1d3e:	71 e0       	ldi	r23, 0x01	; 1
    1d40:	0e 94 e0 20 	call	0x41c0	; 0x41c0 <__divmodhi4>
    1d44:	db 01       	movw	r26, r22
    1d46:	20 e8       	ldi	r18, 0x80	; 128
    1d48:	31 e5       	ldi	r19, 0x51	; 81
    1d4a:	41 e0       	ldi	r20, 0x01	; 1
    1d4c:	50 e0       	ldi	r21, 0x00	; 0
    1d4e:	0e 94 5f 21 	call	0x42be	; 0x42be <__mulshisi3>
    1d52:	64 0d       	add	r22, r4
    1d54:	75 1d       	adc	r23, r5
    1d56:	86 1d       	adc	r24, r6
    1d58:	97 1d       	adc	r25, r7
    1d5a:	03 c0       	rjmp	.+6      	; 0x1d62 <_Z16ds3231_get_epochP2EC+0x25a>
    1d5c:	60 e0       	ldi	r22, 0x00	; 0
    1d5e:	70 e0       	ldi	r23, 0x00	; 0
    1d60:	cb 01       	movw	r24, r22
    1d62:	a1 14       	cp	r10, r1
    1d64:	b1 04       	cpc	r11, r1
    1d66:	41 f0       	breq	.+16     	; 0x1d78 <_Z16ds3231_get_epochP2EC+0x270>
    1d68:	a7 e0       	ldi	r26, 0x07	; 7
    1d6a:	9a 16       	cp	r9, r26
    1d6c:	11 f0       	breq	.+4      	; 0x1d72 <_Z16ds3231_get_epochP2EC+0x26a>
    1d6e:	2c ef       	ldi	r18, 0xFC	; 252
    1d70:	01 c0       	rjmp	.+2      	; 0x1d74 <_Z16ds3231_get_epochP2EC+0x26c>
    1d72:	20 e0       	ldi	r18, 0x00	; 0
    1d74:	f5 01       	movw	r30, r10
    1d76:	20 83       	st	Z, r18
    1d78:	63 96       	adiw	r28, 0x13	; 19
    1d7a:	cd bf       	out	0x3d, r28	; 61
    1d7c:	de bf       	out	0x3e, r29	; 62
    1d7e:	df 91       	pop	r29
    1d80:	cf 91       	pop	r28
    1d82:	1f 91       	pop	r17
    1d84:	0f 91       	pop	r16
    1d86:	ff 90       	pop	r15
    1d88:	ef 90       	pop	r14
    1d8a:	df 90       	pop	r13
    1d8c:	cf 90       	pop	r12
    1d8e:	bf 90       	pop	r11
    1d90:	af 90       	pop	r10
    1d92:	9f 90       	pop	r9
    1d94:	8f 90       	pop	r8
    1d96:	7f 90       	pop	r7
    1d98:	6f 90       	pop	r6
    1d9a:	5f 90       	pop	r5
    1d9c:	4f 90       	pop	r4
    1d9e:	08 95       	ret

00001da0 <_Z15ds3231_get_tempPi>:
    1da0:	0f 93       	push	r16
    1da2:	1f 93       	push	r17
    1da4:	cf 93       	push	r28
    1da6:	df 93       	push	r29
    1da8:	00 d0       	rcall	.+0      	; 0x1daa <_Z15ds3231_get_tempPi+0xa>
    1daa:	cd b7       	in	r28, 0x3d	; 61
    1dac:	de b7       	in	r29, 0x3e	; 62
    1dae:	8c 01       	movw	r16, r24
    1db0:	1a 82       	std	Y+2, r1	; 0x02
    1db2:	81 e1       	ldi	r24, 0x11	; 17
    1db4:	89 83       	std	Y+1, r24	; 0x01
    1db6:	42 e0       	ldi	r20, 0x02	; 2
    1db8:	be 01       	movw	r22, r28
    1dba:	6f 5f       	subi	r22, 0xFF	; 255
    1dbc:	7f 4f       	sbci	r23, 0xFF	; 255
    1dbe:	80 ed       	ldi	r24, 0xD0	; 208
    1dc0:	0e 94 ab 10 	call	0x2156	; 0x2156 <I2C_0_GetData>
    1dc4:	91 e0       	ldi	r25, 0x01	; 1
    1dc6:	82 30       	cpi	r24, 0x02	; 2
    1dc8:	09 f4       	brne	.+2      	; 0x1dcc <_Z15ds3231_get_tempPi+0x2c>
    1dca:	90 e0       	ldi	r25, 0x00	; 0
    1dcc:	82 30       	cpi	r24, 0x02	; 2
    1dce:	49 f4       	brne	.+18     	; 0x1de2 <_Z15ds3231_get_tempPi+0x42>
    1dd0:	29 81       	ldd	r18, Y+1	; 0x01
    1dd2:	30 e0       	ldi	r19, 0x00	; 0
    1dd4:	32 2f       	mov	r19, r18
    1dd6:	22 27       	eor	r18, r18
    1dd8:	8a 81       	ldd	r24, Y+2	; 0x02
    1dda:	28 2b       	or	r18, r24
    1ddc:	f8 01       	movw	r30, r16
    1dde:	20 83       	st	Z, r18
    1de0:	31 83       	std	Z+1, r19	; 0x01
    1de2:	89 2f       	mov	r24, r25
    1de4:	0f 90       	pop	r0
    1de6:	0f 90       	pop	r0
    1de8:	df 91       	pop	r29
    1dea:	cf 91       	pop	r28
    1dec:	1f 91       	pop	r17
    1dee:	0f 91       	pop	r16
    1df0:	08 95       	ret

00001df2 <_Z20ds3231_set_date_timePc12ClockSetting>:
    1df2:	0f 93       	push	r16
    1df4:	1f 93       	push	r17
    1df6:	cf 93       	push	r28
    1df8:	df 93       	push	r29
    1dfa:	cd b7       	in	r28, 0x3d	; 61
    1dfc:	de b7       	in	r29, 0x3e	; 62
    1dfe:	28 97       	sbiw	r28, 0x08	; 8
    1e00:	cd bf       	out	0x3d, r28	; 61
    1e02:	de bf       	out	0x3e, r29	; 62
    1e04:	fc 01       	movw	r30, r24
    1e06:	8e 01       	movw	r16, r28
    1e08:	0f 5f       	subi	r16, 0xFF	; 255
    1e0a:	1f 4f       	sbci	r17, 0xFF	; 255
    1e0c:	88 e0       	ldi	r24, 0x08	; 8
    1e0e:	d8 01       	movw	r26, r16
    1e10:	1d 92       	st	X+, r1
    1e12:	8a 95       	dec	r24
    1e14:	e9 f7       	brne	.-6      	; 0x1e10 <_Z20ds3231_set_date_timePc12ClockSetting+0x1e>
    1e16:	82 89       	ldd	r24, Z+18	; 0x12
    1e18:	20 ed       	ldi	r18, 0xD0	; 208
    1e1a:	28 0f       	add	r18, r24
    1e1c:	91 89       	ldd	r25, Z+17	; 0x11
    1e1e:	89 2f       	mov	r24, r25
    1e20:	90 e0       	ldi	r25, 0x00	; 0
    1e22:	c0 97       	sbiw	r24, 0x30	; 48
    1e24:	82 95       	swap	r24
    1e26:	92 95       	swap	r25
    1e28:	90 7f       	andi	r25, 0xF0	; 240
    1e2a:	98 27       	eor	r25, r24
    1e2c:	80 7f       	andi	r24, 0xF0	; 240
    1e2e:	98 27       	eor	r25, r24
    1e30:	82 2b       	or	r24, r18
    1e32:	8a 83       	std	Y+2, r24	; 0x02
    1e34:	87 85       	ldd	r24, Z+15	; 0x0f
    1e36:	20 ed       	ldi	r18, 0xD0	; 208
    1e38:	28 0f       	add	r18, r24
    1e3a:	96 85       	ldd	r25, Z+14	; 0x0e
    1e3c:	89 2f       	mov	r24, r25
    1e3e:	90 e0       	ldi	r25, 0x00	; 0
    1e40:	c0 97       	sbiw	r24, 0x30	; 48
    1e42:	82 95       	swap	r24
    1e44:	92 95       	swap	r25
    1e46:	90 7f       	andi	r25, 0xF0	; 240
    1e48:	98 27       	eor	r25, r24
    1e4a:	80 7f       	andi	r24, 0xF0	; 240
    1e4c:	98 27       	eor	r25, r24
    1e4e:	82 2b       	or	r24, r18
    1e50:	8b 83       	std	Y+3, r24	; 0x03
    1e52:	84 85       	ldd	r24, Z+12	; 0x0c
    1e54:	20 ed       	ldi	r18, 0xD0	; 208
    1e56:	28 0f       	add	r18, r24
    1e58:	93 85       	ldd	r25, Z+11	; 0x0b
    1e5a:	89 2f       	mov	r24, r25
    1e5c:	90 e0       	ldi	r25, 0x00	; 0
    1e5e:	c0 97       	sbiw	r24, 0x30	; 48
    1e60:	82 95       	swap	r24
    1e62:	92 95       	swap	r25
    1e64:	90 7f       	andi	r25, 0xF0	; 240
    1e66:	98 27       	eor	r25, r24
    1e68:	80 7f       	andi	r24, 0xF0	; 240
    1e6a:	98 27       	eor	r25, r24
    1e6c:	82 2b       	or	r24, r18
    1e6e:	8c 83       	std	Y+4, r24	; 0x04
    1e70:	81 85       	ldd	r24, Z+9	; 0x09
    1e72:	20 ed       	ldi	r18, 0xD0	; 208
    1e74:	28 0f       	add	r18, r24
    1e76:	90 85       	ldd	r25, Z+8	; 0x08
    1e78:	89 2f       	mov	r24, r25
    1e7a:	90 e0       	ldi	r25, 0x00	; 0
    1e7c:	c0 97       	sbiw	r24, 0x30	; 48
    1e7e:	82 95       	swap	r24
    1e80:	92 95       	swap	r25
    1e82:	90 7f       	andi	r25, 0xF0	; 240
    1e84:	98 27       	eor	r25, r24
    1e86:	80 7f       	andi	r24, 0xF0	; 240
    1e88:	98 27       	eor	r25, r24
    1e8a:	82 2b       	or	r24, r18
    1e8c:	8e 83       	std	Y+6, r24	; 0x06
    1e8e:	86 81       	ldd	r24, Z+6	; 0x06
    1e90:	20 ed       	ldi	r18, 0xD0	; 208
    1e92:	28 0f       	add	r18, r24
    1e94:	95 81       	ldd	r25, Z+5	; 0x05
    1e96:	89 2f       	mov	r24, r25
    1e98:	90 e0       	ldi	r25, 0x00	; 0
    1e9a:	c0 97       	sbiw	r24, 0x30	; 48
    1e9c:	82 95       	swap	r24
    1e9e:	92 95       	swap	r25
    1ea0:	90 7f       	andi	r25, 0xF0	; 240
    1ea2:	98 27       	eor	r25, r24
    1ea4:	80 7f       	andi	r24, 0xF0	; 240
    1ea6:	98 27       	eor	r25, r24
    1ea8:	82 2b       	or	r24, r18
    1eaa:	8f 83       	std	Y+7, r24	; 0x07
    1eac:	83 81       	ldd	r24, Z+3	; 0x03
    1eae:	20 ed       	ldi	r18, 0xD0	; 208
    1eb0:	28 0f       	add	r18, r24
    1eb2:	92 81       	ldd	r25, Z+2	; 0x02
    1eb4:	89 2f       	mov	r24, r25
    1eb6:	90 e0       	ldi	r25, 0x00	; 0
    1eb8:	c0 97       	sbiw	r24, 0x30	; 48
    1eba:	82 95       	swap	r24
    1ebc:	92 95       	swap	r25
    1ebe:	90 7f       	andi	r25, 0xF0	; 240
    1ec0:	98 27       	eor	r25, r24
    1ec2:	80 7f       	andi	r24, 0xF0	; 240
    1ec4:	98 27       	eor	r25, r24
    1ec6:	82 2b       	or	r24, r18
    1ec8:	88 87       	std	Y+8, r24	; 0x08
    1eca:	86 2f       	mov	r24, r22
    1ecc:	88 0f       	add	r24, r24
    1ece:	88 0f       	add	r24, r24
    1ed0:	88 0f       	add	r24, r24
    1ed2:	86 1b       	sub	r24, r22
    1ed4:	89 83       	std	Y+1, r24	; 0x01
    1ed6:	48 e0       	ldi	r20, 0x08	; 8
    1ed8:	b8 01       	movw	r22, r16
    1eda:	80 ed       	ldi	r24, 0xD0	; 208
    1edc:	0e 94 76 10 	call	0x20ec	; 0x20ec <I2C_0_SendData>
    1ee0:	28 96       	adiw	r28, 0x08	; 8
    1ee2:	cd bf       	out	0x3d, r28	; 61
    1ee4:	de bf       	out	0x3e, r29	; 62
    1ee6:	df 91       	pop	r29
    1ee8:	cf 91       	pop	r28
    1eea:	1f 91       	pop	r17
    1eec:	0f 91       	pop	r16
    1eee:	08 95       	ret

00001ef0 <_Z16ds3231_set_agingPa>:


	void ds3231_set_aging(int8_t* data_in)
	{
    1ef0:	cf 93       	push	r28
    1ef2:	df 93       	push	r29
    1ef4:	1f 92       	push	r1
    1ef6:	cd b7       	in	r28, 0x3d	; 61
    1ef8:	de b7       	in	r29, 0x3e	; 62
		int8_t data[1];
		
		data[0] = RTC_AGING;
    1efa:	20 e1       	ldi	r18, 0x10	; 16
    1efc:	29 83       	std	Y+1, r18	; 0x01
		data[1] = *data_in;
    1efe:	fc 01       	movw	r30, r24
    1f00:	80 81       	ld	r24, Z
    1f02:	8a 83       	std	Y+2, r24	; 0x02
		I2C_0_SendData(DS3231_I2C_SLAVE_ADDR, (uint8_t *)data, 2);
    1f04:	42 e0       	ldi	r20, 0x02	; 2
    1f06:	be 01       	movw	r22, r28
    1f08:	6f 5f       	subi	r22, 0xFF	; 255
    1f0a:	7f 4f       	sbci	r23, 0xFF	; 255
    1f0c:	80 ed       	ldi	r24, 0xD0	; 208
    1f0e:	0e 94 76 10 	call	0x20ec	; 0x20ec <I2C_0_SendData>
	}
    1f12:	0f 90       	pop	r0
    1f14:	df 91       	pop	r29
    1f16:	cf 91       	pop	r28
    1f18:	08 95       	ret

00001f1a <_Z16ds3231_get_agingv>:


	int8_t ds3231_get_aging()
	{
    1f1a:	cf 93       	push	r28
    1f1c:	df 93       	push	r29
    1f1e:	1f 92       	push	r1
    1f20:	cd b7       	in	r28, 0x3d	; 61
    1f22:	de b7       	in	r29, 0x3e	; 62
		int8_t data[1];
		
		data[0] = RTC_AGING;
    1f24:	80 e1       	ldi	r24, 0x10	; 16
    1f26:	89 83       	std	Y+1, r24	; 0x01
		I2C_0_GetData(DS3231_I2C_SLAVE_ADDR, (uint8_t *)data, 1);
    1f28:	41 e0       	ldi	r20, 0x01	; 1
    1f2a:	be 01       	movw	r22, r28
    1f2c:	6f 5f       	subi	r22, 0xFF	; 255
    1f2e:	7f 4f       	sbci	r23, 0xFF	; 255
    1f30:	80 ed       	ldi	r24, 0xD0	; 208
    1f32:	0e 94 ab 10 	call	0x2156	; 0x2156 <I2C_0_GetData>
		return(data[0]);
	}
    1f36:	89 81       	ldd	r24, Y+1	; 0x01
    1f38:	0f 90       	pop	r0
    1f3a:	df 91       	pop	r29
    1f3c:	cf 91       	pop	r28
    1f3e:	08 95       	ret

00001f40 <_ZN8GoertzelC1Eff>:
		highValueCount++;
	}

	Q2 = Q1;
	Q1 = Q0;
}
    1f40:	ef 92       	push	r14
    1f42:	ff 92       	push	r15
    1f44:	0f 93       	push	r16
    1f46:	1f 93       	push	r17
    1f48:	cf 93       	push	r28
    1f4a:	df 93       	push	r29
    1f4c:	e4 2e       	mov	r14, r20
    1f4e:	f5 2e       	mov	r15, r21
    1f50:	d6 2f       	mov	r29, r22
    1f52:	c7 2f       	mov	r28, r23
    1f54:	00 93 5f 41 	sts	0x415F, r16	; 0x80415f <_SAMPLING_FREQUENCY>
    1f58:	10 93 60 41 	sts	0x4160, r17	; 0x804160 <_SAMPLING_FREQUENCY+0x1>
    1f5c:	20 93 61 41 	sts	0x4161, r18	; 0x804161 <_SAMPLING_FREQUENCY+0x2>
    1f60:	30 93 62 41 	sts	0x4162, r19	; 0x804162 <_SAMPLING_FREQUENCY+0x3>
    1f64:	20 e0       	ldi	r18, 0x00	; 0
    1f66:	30 e0       	ldi	r19, 0x00	; 0
    1f68:	41 e5       	ldi	r20, 0x51	; 81
    1f6a:	53 e4       	ldi	r21, 0x43	; 67
    1f6c:	6e 2d       	mov	r22, r14
    1f6e:	7f 2d       	mov	r23, r15
    1f70:	8d 2f       	mov	r24, r29
    1f72:	9c 2f       	mov	r25, r28
    1f74:	0e 94 4a 20 	call	0x4094	; 0x4094 <__gesf2>
    1f78:	18 16       	cp	r1, r24
    1f7a:	8c f0       	brlt	.+34     	; 0x1f9e <_ZN8GoertzelC1Eff+0x5e>
    1f7c:	20 e0       	ldi	r18, 0x00	; 0
    1f7e:	30 e0       	ldi	r19, 0x00	; 0
    1f80:	48 ec       	ldi	r20, 0xC8	; 200
    1f82:	52 e4       	ldi	r21, 0x42	; 66
    1f84:	6e 2d       	mov	r22, r14
    1f86:	7f 2d       	mov	r23, r15
    1f88:	8d 2f       	mov	r24, r29
    1f8a:	9c 2f       	mov	r25, r28
    1f8c:	0e 94 eb 1e 	call	0x3dd6	; 0x3dd6 <__cmpsf2>
    1f90:	88 23       	and	r24, r24
    1f92:	4c f4       	brge	.+18     	; 0x1fa6 <_ZN8GoertzelC1Eff+0x66>
    1f94:	e1 2c       	mov	r14, r1
    1f96:	f1 2c       	mov	r15, r1
    1f98:	d8 ec       	ldi	r29, 0xC8	; 200
    1f9a:	c2 e4       	ldi	r28, 0x42	; 66
    1f9c:	04 c0       	rjmp	.+8      	; 0x1fa6 <_ZN8GoertzelC1Eff+0x66>
    1f9e:	e1 2c       	mov	r14, r1
    1fa0:	f1 2c       	mov	r15, r1
    1fa2:	d1 e5       	ldi	r29, 0x51	; 81
    1fa4:	c3 e4       	ldi	r28, 0x43	; 67
    1fa6:	6e 2d       	mov	r22, r14
    1fa8:	7f 2d       	mov	r23, r15
    1faa:	8d 2f       	mov	r24, r29
    1fac:	9c 2f       	mov	r25, r28
    1fae:	0e 94 62 1f 	call	0x3ec4	; 0x3ec4 <__fixsfsi>
    1fb2:	60 93 5d 41 	sts	0x415D, r22	; 0x80415d <_N>
    1fb6:	70 93 5e 41 	sts	0x415E, r23	; 0x80415e <_N+0x1>
    1fba:	80 91 5d 41 	lds	r24, 0x415D	; 0x80415d <_N>
    1fbe:	90 91 5e 41 	lds	r25, 0x415E	; 0x80415e <_N+0x1>
    1fc2:	88 0f       	add	r24, r24
    1fc4:	99 1f       	adc	r25, r25
    1fc6:	0e 94 67 21 	call	0x42ce	; 0x42ce <malloc>
    1fca:	80 93 58 41 	sts	0x4158, r24	; 0x804158 <testData>
    1fce:	90 93 59 41 	sts	0x4159, r25	; 0x804159 <testData+0x1>
    1fd2:	df 91       	pop	r29
    1fd4:	cf 91       	pop	r28
    1fd6:	1f 91       	pop	r17
    1fd8:	0f 91       	pop	r16
    1fda:	ff 90       	pop	r15
    1fdc:	ef 90       	pop	r14
    1fde:	08 95       	ret

00001fe0 <_ZN8GoertzelD1Ev>:
    1fe0:	80 91 58 41 	lds	r24, 0x4158	; 0x804158 <testData>
    1fe4:	90 91 59 41 	lds	r25, 0x4159	; 0x804159 <testData+0x1>
    1fe8:	0e 94 ff 21 	call	0x43fe	; 0x43fe <free>
    1fec:	08 95       	ret

00001fee <_ZN8Goertzel9DataPointEi>:

bool Goertzel::DataPoint(int data)
{
	if(_samplesReady)
    1fee:	80 91 5a 41 	lds	r24, 0x415A	; 0x80415a <_samplesReady>
    1ff2:	88 23       	and	r24, r24
    1ff4:	19 f0       	breq	.+6      	; 0x1ffc <_ZN8Goertzel9DataPointEi+0xe>
	{
		return(_samplesReady);
    1ff6:	80 91 5a 41 	lds	r24, 0x415A	; 0x80415a <_samplesReady>
    1ffa:	08 95       	ret
	}

	testData[_index] = data;
    1ffc:	e0 91 5b 41 	lds	r30, 0x415B	; 0x80415b <_index>
    2000:	f0 91 5c 41 	lds	r31, 0x415C	; 0x80415c <_index+0x1>
    2004:	ee 0f       	add	r30, r30
    2006:	ff 1f       	adc	r31, r31
    2008:	80 91 58 41 	lds	r24, 0x4158	; 0x804158 <testData>
    200c:	90 91 59 41 	lds	r25, 0x4159	; 0x804159 <testData+0x1>
    2010:	e8 0f       	add	r30, r24
    2012:	f9 1f       	adc	r31, r25
    2014:	60 83       	st	Z, r22
    2016:	71 83       	std	Z+1, r23	; 0x01
	_index++;
    2018:	80 91 5b 41 	lds	r24, 0x415B	; 0x80415b <_index>
    201c:	90 91 5c 41 	lds	r25, 0x415C	; 0x80415c <_index+0x1>
    2020:	01 96       	adiw	r24, 0x01	; 1
    2022:	80 93 5b 41 	sts	0x415B, r24	; 0x80415b <_index>
    2026:	90 93 5c 41 	sts	0x415C, r25	; 0x80415c <_index+0x1>
	if(_index >= _N)
    202a:	20 91 5b 41 	lds	r18, 0x415B	; 0x80415b <_index>
    202e:	30 91 5c 41 	lds	r19, 0x415C	; 0x80415c <_index+0x1>
    2032:	80 91 5d 41 	lds	r24, 0x415D	; 0x80415d <_N>
    2036:	90 91 5e 41 	lds	r25, 0x415E	; 0x80415e <_N+0x1>
    203a:	28 17       	cp	r18, r24
    203c:	39 07       	cpc	r19, r25
    203e:	3c f0       	brlt	.+14     	; 0x204e <_ZN8Goertzel9DataPointEi+0x60>
	{
		_index = 0;
    2040:	10 92 5b 41 	sts	0x415B, r1	; 0x80415b <_index>
    2044:	10 92 5c 41 	sts	0x415C, r1	; 0x80415c <_index+0x1>
		_samplesReady = true;
    2048:	81 e0       	ldi	r24, 0x01	; 1
    204a:	80 93 5a 41 	sts	0x415A, r24	; 0x80415a <_samplesReady>
	}

	return(_samplesReady);
    204e:	80 91 5a 41 	lds	r24, 0x415A	; 0x80415a <_samplesReady>
}
    2052:	08 95       	ret

00002054 <_ZL11i2c_0_WaitWv>:
	
	/* Initialize the data register */
	TWI1.MDATA = 0x00;
	
	/* Set bus state idle */
	TWI1.MSTATUS = TWI_BUSSTATE_IDLE_gc;
    2054:	80 e0       	ldi	r24, 0x00	; 0
    2056:	90 91 05 09 	lds	r25, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
    205a:	90 7c       	andi	r25, 0xC0	; 192
    205c:	31 f0       	breq	.+12     	; 0x206a <_ZL11i2c_0_WaitWv+0x16>
    205e:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
    2062:	84 fd       	sbrc	r24, 4
    2064:	07 c0       	rjmp	.+14     	; 0x2074 <_ZL11i2c_0_WaitWv+0x20>
    2066:	81 e0       	ldi	r24, 0x01	; 1
    2068:	08 c0       	rjmp	.+16     	; 0x207a <_ZL11i2c_0_WaitWv+0x26>
    206a:	90 91 05 09 	lds	r25, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
    206e:	9c 70       	andi	r25, 0x0C	; 12
    2070:	19 f4       	brne	.+6      	; 0x2078 <_ZL11i2c_0_WaitWv+0x24>
    2072:	03 c0       	rjmp	.+6      	; 0x207a <_ZL11i2c_0_WaitWv+0x26>
    2074:	82 e0       	ldi	r24, 0x02	; 2
    2076:	01 c0       	rjmp	.+2      	; 0x207a <_ZL11i2c_0_WaitWv+0x26>
    2078:	84 e0       	ldi	r24, 0x04	; 4
    207a:	88 23       	and	r24, r24
    207c:	61 f3       	breq	.-40     	; 0x2056 <_ZL11i2c_0_WaitWv+0x2>
    207e:	08 95       	ret

00002080 <_ZL11i2c_0_WaitRv>:
    2080:	80 e0       	ldi	r24, 0x00	; 0
    2082:	90 91 05 09 	lds	r25, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
    2086:	90 7c       	andi	r25, 0xC0	; 192
    2088:	29 f4       	brne	.+10     	; 0x2094 <_ZL11i2c_0_WaitRv+0x14>
    208a:	90 91 05 09 	lds	r25, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
    208e:	9c 70       	andi	r25, 0x0C	; 12
    2090:	19 f4       	brne	.+6      	; 0x2098 <_ZL11i2c_0_WaitRv+0x18>
    2092:	03 c0       	rjmp	.+6      	; 0x209a <_ZL11i2c_0_WaitRv+0x1a>
    2094:	83 e0       	ldi	r24, 0x03	; 3
    2096:	01 c0       	rjmp	.+2      	; 0x209a <_ZL11i2c_0_WaitRv+0x1a>
    2098:	84 e0       	ldi	r24, 0x04	; 4
    209a:	88 23       	and	r24, r24
    209c:	91 f3       	breq	.-28     	; 0x2082 <_ZL11i2c_0_WaitRv+0x2>
    209e:	08 95       	ret

000020a0 <_ZL11I2C_1_WaitWv>:
    20a0:	80 e0       	ldi	r24, 0x00	; 0
    20a2:	90 91 25 09 	lds	r25, 0x0925	; 0x800925 <__TEXT_REGION_LENGTH__+0x7e0925>
    20a6:	90 7c       	andi	r25, 0xC0	; 192
    20a8:	31 f0       	breq	.+12     	; 0x20b6 <_ZL11I2C_1_WaitWv+0x16>
    20aa:	80 91 25 09 	lds	r24, 0x0925	; 0x800925 <__TEXT_REGION_LENGTH__+0x7e0925>
    20ae:	84 fd       	sbrc	r24, 4
    20b0:	07 c0       	rjmp	.+14     	; 0x20c0 <_ZL11I2C_1_WaitWv+0x20>
    20b2:	81 e0       	ldi	r24, 0x01	; 1
    20b4:	08 c0       	rjmp	.+16     	; 0x20c6 <_ZL11I2C_1_WaitWv+0x26>
    20b6:	90 91 25 09 	lds	r25, 0x0925	; 0x800925 <__TEXT_REGION_LENGTH__+0x7e0925>
    20ba:	9c 70       	andi	r25, 0x0C	; 12
    20bc:	19 f4       	brne	.+6      	; 0x20c4 <_ZL11I2C_1_WaitWv+0x24>
    20be:	03 c0       	rjmp	.+6      	; 0x20c6 <_ZL11I2C_1_WaitWv+0x26>
    20c0:	82 e0       	ldi	r24, 0x02	; 2
    20c2:	01 c0       	rjmp	.+2      	; 0x20c6 <_ZL11I2C_1_WaitWv+0x26>
    20c4:	84 e0       	ldi	r24, 0x04	; 4
    20c6:	88 23       	and	r24, r24
    20c8:	61 f3       	breq	.-40     	; 0x20a2 <_ZL11I2C_1_WaitWv+0x2>
    20ca:	08 95       	ret

000020cc <_ZL11I2C_1_WaitRv>:
    20cc:	80 e0       	ldi	r24, 0x00	; 0
    20ce:	90 91 25 09 	lds	r25, 0x0925	; 0x800925 <__TEXT_REGION_LENGTH__+0x7e0925>
    20d2:	90 7c       	andi	r25, 0xC0	; 192
    20d4:	29 f4       	brne	.+10     	; 0x20e0 <_ZL11I2C_1_WaitRv+0x14>
    20d6:	90 91 25 09 	lds	r25, 0x0925	; 0x800925 <__TEXT_REGION_LENGTH__+0x7e0925>
    20da:	9c 70       	andi	r25, 0x0C	; 12
    20dc:	19 f4       	brne	.+6      	; 0x20e4 <_ZL11I2C_1_WaitRv+0x18>
    20de:	03 c0       	rjmp	.+6      	; 0x20e6 <_ZL11I2C_1_WaitRv+0x1a>
    20e0:	83 e0       	ldi	r24, 0x03	; 3
    20e2:	01 c0       	rjmp	.+2      	; 0x20e6 <_ZL11I2C_1_WaitRv+0x1a>
    20e4:	84 e0       	ldi	r24, 0x04	; 4
    20e6:	88 23       	and	r24, r24
    20e8:	91 f3       	breq	.-28     	; 0x20ce <_ZL11I2C_1_WaitRv+0x2>
    20ea:	08 95       	ret

000020ec <I2C_0_SendData>:
    20ec:	ff 92       	push	r15
    20ee:	0f 93       	push	r16
    20f0:	1f 93       	push	r17
    20f2:	cf 93       	push	r28
    20f4:	df 93       	push	r29
    20f6:	8b 01       	movw	r16, r22
    20f8:	c4 2f       	mov	r28, r20
    20fa:	8e 7f       	andi	r24, 0xFE	; 254
    20fc:	80 93 07 09 	sts	0x0907, r24	; 0x800907 <__TEXT_REGION_LENGTH__+0x7e0907>
    2100:	0e 94 2a 10 	call	0x2054	; 0x2054 <_ZL11i2c_0_WaitWv>
    2104:	81 30       	cpi	r24, 0x01	; 1
    2106:	c1 f4       	brne	.+48     	; 0x2138 <I2C_0_SendData+0x4c>
    2108:	cc 23       	and	r28, r28
    210a:	c1 f0       	breq	.+48     	; 0x213c <I2C_0_SendData+0x50>
    210c:	01 15       	cp	r16, r1
    210e:	11 05       	cpc	r17, r1
    2110:	b9 f0       	breq	.+46     	; 0x2140 <I2C_0_SendData+0x54>
    2112:	d0 e0       	ldi	r29, 0x00	; 0
    2114:	ff 24       	eor	r15, r15
    2116:	fa 94       	dec	r15
    2118:	fc 0e       	add	r15, r28
    211a:	cc 23       	and	r28, r28
    211c:	99 f0       	breq	.+38     	; 0x2144 <I2C_0_SendData+0x58>
    211e:	f8 01       	movw	r30, r16
    2120:	80 81       	ld	r24, Z
    2122:	80 93 08 09 	sts	0x0908, r24	; 0x800908 <__TEXT_REGION_LENGTH__+0x7e0908>
    2126:	0e 94 2a 10 	call	0x2054	; 0x2054 <_ZL11i2c_0_WaitWv>
    212a:	81 30       	cpi	r24, 0x01	; 1
    212c:	69 f4       	brne	.+26     	; 0x2148 <I2C_0_SendData+0x5c>
    212e:	df 5f       	subi	r29, 0xFF	; 255
    2130:	0f 5f       	subi	r16, 0xFF	; 255
    2132:	1f 4f       	sbci	r17, 0xFF	; 255
    2134:	cf 2d       	mov	r28, r15
    2136:	ee cf       	rjmp	.-36     	; 0x2114 <I2C_0_SendData+0x28>
    2138:	8f ef       	ldi	r24, 0xFF	; 255
    213a:	07 c0       	rjmp	.+14     	; 0x214a <I2C_0_SendData+0x5e>
    213c:	80 e0       	ldi	r24, 0x00	; 0
    213e:	05 c0       	rjmp	.+10     	; 0x214a <I2C_0_SendData+0x5e>
    2140:	80 e0       	ldi	r24, 0x00	; 0
    2142:	03 c0       	rjmp	.+6      	; 0x214a <I2C_0_SendData+0x5e>
    2144:	8d 2f       	mov	r24, r29
    2146:	01 c0       	rjmp	.+2      	; 0x214a <I2C_0_SendData+0x5e>
    2148:	8d 2f       	mov	r24, r29
    214a:	df 91       	pop	r29
    214c:	cf 91       	pop	r28
    214e:	1f 91       	pop	r17
    2150:	0f 91       	pop	r16
    2152:	ff 90       	pop	r15
    2154:	08 95       	ret

00002156 <I2C_0_GetData>:
    2156:	ff 92       	push	r15
    2158:	0f 93       	push	r16
    215a:	1f 93       	push	r17
    215c:	cf 93       	push	r28
    215e:	df 93       	push	r29
    2160:	8b 01       	movw	r16, r22
    2162:	d4 2f       	mov	r29, r20
    2164:	81 60       	ori	r24, 0x01	; 1
    2166:	80 93 07 09 	sts	0x0907, r24	; 0x800907 <__TEXT_REGION_LENGTH__+0x7e0907>
    216a:	0e 94 2a 10 	call	0x2054	; 0x2054 <_ZL11i2c_0_WaitWv>
    216e:	81 30       	cpi	r24, 0x01	; 1
    2170:	49 f5       	brne	.+82     	; 0x21c4 <I2C_0_GetData+0x6e>
    2172:	f8 01       	movw	r30, r16
    2174:	80 81       	ld	r24, Z
    2176:	88 23       	and	r24, r24
    2178:	31 f0       	breq	.+12     	; 0x2186 <I2C_0_GetData+0x30>
    217a:	80 93 08 09 	sts	0x0908, r24	; 0x800908 <__TEXT_REGION_LENGTH__+0x7e0908>
    217e:	0e 94 2a 10 	call	0x2054	; 0x2054 <_ZL11i2c_0_WaitWv>
    2182:	81 30       	cpi	r24, 0x01	; 1
    2184:	09 f5       	brne	.+66     	; 0x21c8 <I2C_0_GetData+0x72>
    2186:	dd 23       	and	r29, r29
    2188:	09 f1       	breq	.+66     	; 0x21cc <I2C_0_GetData+0x76>
    218a:	01 15       	cp	r16, r1
    218c:	11 05       	cpc	r17, r1
    218e:	01 f1       	breq	.+64     	; 0x21d0 <I2C_0_GetData+0x7a>
    2190:	c0 e0       	ldi	r28, 0x00	; 0
    2192:	ff 24       	eor	r15, r15
    2194:	fa 94       	dec	r15
    2196:	fd 0e       	add	r15, r29
    2198:	dd 23       	and	r29, r29
    219a:	e1 f0       	breq	.+56     	; 0x21d4 <I2C_0_GetData+0x7e>
    219c:	0e 94 40 10 	call	0x2080	; 0x2080 <_ZL11i2c_0_WaitRv>
    21a0:	83 30       	cpi	r24, 0x03	; 3
    21a2:	d1 f4       	brne	.+52     	; 0x21d8 <I2C_0_GetData+0x82>
    21a4:	80 91 08 09 	lds	r24, 0x0908	; 0x800908 <__TEXT_REGION_LENGTH__+0x7e0908>
    21a8:	f8 01       	movw	r30, r16
    21aa:	80 83       	st	Z, r24
    21ac:	f1 10       	cpse	r15, r1
    21ae:	02 c0       	rjmp	.+4      	; 0x21b4 <I2C_0_GetData+0x5e>
    21b0:	87 e0       	ldi	r24, 0x07	; 7
    21b2:	01 c0       	rjmp	.+2      	; 0x21b6 <I2C_0_GetData+0x60>
    21b4:	82 e0       	ldi	r24, 0x02	; 2
    21b6:	80 93 04 09 	sts	0x0904, r24	; 0x800904 <__TEXT_REGION_LENGTH__+0x7e0904>
    21ba:	cf 5f       	subi	r28, 0xFF	; 255
    21bc:	0f 5f       	subi	r16, 0xFF	; 255
    21be:	1f 4f       	sbci	r17, 0xFF	; 255
    21c0:	df 2d       	mov	r29, r15
    21c2:	e7 cf       	rjmp	.-50     	; 0x2192 <I2C_0_GetData+0x3c>
    21c4:	8f ef       	ldi	r24, 0xFF	; 255
    21c6:	09 c0       	rjmp	.+18     	; 0x21da <I2C_0_GetData+0x84>
    21c8:	8f ef       	ldi	r24, 0xFF	; 255
    21ca:	07 c0       	rjmp	.+14     	; 0x21da <I2C_0_GetData+0x84>
    21cc:	80 e0       	ldi	r24, 0x00	; 0
    21ce:	05 c0       	rjmp	.+10     	; 0x21da <I2C_0_GetData+0x84>
    21d0:	80 e0       	ldi	r24, 0x00	; 0
    21d2:	03 c0       	rjmp	.+6      	; 0x21da <I2C_0_GetData+0x84>
    21d4:	8c 2f       	mov	r24, r28
    21d6:	01 c0       	rjmp	.+2      	; 0x21da <I2C_0_GetData+0x84>
    21d8:	8c 2f       	mov	r24, r28
    21da:	df 91       	pop	r29
    21dc:	cf 91       	pop	r28
    21de:	1f 91       	pop	r17
    21e0:	0f 91       	pop	r16
    21e2:	ff 90       	pop	r15
    21e4:	08 95       	ret

000021e6 <I2C_1_SendData>:
	return state;
}

/* Returns how many bytes have been sent, -1 means NACK at address, 0 means client ACKed to client address */
uint8_t I2C_1_SendData(uint8_t address, uint8_t *pData, uint8_t len)
{
    21e6:	ff 92       	push	r15
    21e8:	0f 93       	push	r16
    21ea:	1f 93       	push	r17
    21ec:	cf 93       	push	r28
    21ee:	df 93       	push	r29
    21f0:	8b 01       	movw	r16, r22
    21f2:	c4 2f       	mov	r28, r20
	uint8_t retVal = (uint8_t) - 1;
	
	/* start transmitting the client address */
	TWI1.MADDR = address & ~0x01;
    21f4:	8e 7f       	andi	r24, 0xFE	; 254
    21f6:	80 93 27 09 	sts	0x0927, r24	; 0x800927 <__TEXT_REGION_LENGTH__+0x7e0927>
	if(I2C_1_WaitW() != I2C_ACKED)
    21fa:	0e 94 50 10 	call	0x20a0	; 0x20a0 <_ZL11I2C_1_WaitWv>
    21fe:	81 30       	cpi	r24, 0x01	; 1
    2200:	c1 f4       	brne	.+48     	; 0x2232 <I2C_1_SendData+0x4c>
	return retVal;

	retVal = 0;
	if((len != 0) && (pData != NULL))
    2202:	cc 23       	and	r28, r28
    2204:	c1 f0       	breq	.+48     	; 0x2236 <I2C_1_SendData+0x50>
    2206:	01 15       	cp	r16, r1
    2208:	11 05       	cpc	r17, r1
    220a:	b9 f0       	breq	.+46     	; 0x223a <I2C_1_SendData+0x54>
    220c:	d0 e0       	ldi	r29, 0x00	; 0
	{
		while(len--)
    220e:	ff 24       	eor	r15, r15
    2210:	fa 94       	dec	r15
    2212:	fc 0e       	add	r15, r28
    2214:	cc 23       	and	r28, r28
    2216:	99 f0       	breq	.+38     	; 0x223e <I2C_1_SendData+0x58>
		{
			TWI1.MDATA = *pData;
    2218:	f8 01       	movw	r30, r16
    221a:	80 81       	ld	r24, Z
    221c:	80 93 28 09 	sts	0x0928, r24	; 0x800928 <__TEXT_REGION_LENGTH__+0x7e0928>
			if(I2C_1_WaitW() == I2C_ACKED)
    2220:	0e 94 50 10 	call	0x20a0	; 0x20a0 <_ZL11I2C_1_WaitWv>
    2224:	81 30       	cpi	r24, 0x01	; 1
    2226:	69 f4       	brne	.+26     	; 0x2242 <I2C_1_SendData+0x5c>
			{
				retVal++;
    2228:	df 5f       	subi	r29, 0xFF	; 255
				pData++;
    222a:	0f 5f       	subi	r16, 0xFF	; 255
    222c:	1f 4f       	sbci	r17, 0xFF	; 255
	return retVal;

	retVal = 0;
	if((len != 0) && (pData != NULL))
	{
		while(len--)
    222e:	cf 2d       	mov	r28, r15
    2230:	ee cf       	rjmp	.-36     	; 0x220e <I2C_1_SendData+0x28>
	uint8_t retVal = (uint8_t) - 1;
	
	/* start transmitting the client address */
	TWI1.MADDR = address & ~0x01;
	if(I2C_1_WaitW() != I2C_ACKED)
	return retVal;
    2232:	8f ef       	ldi	r24, 0xFF	; 255
    2234:	07 c0       	rjmp	.+14     	; 0x2244 <I2C_1_SendData+0x5e>

	retVal = 0;
    2236:	80 e0       	ldi	r24, 0x00	; 0
    2238:	05 c0       	rjmp	.+10     	; 0x2244 <I2C_1_SendData+0x5e>
    223a:	80 e0       	ldi	r24, 0x00	; 0
    223c:	03 c0       	rjmp	.+6      	; 0x2244 <I2C_1_SendData+0x5e>
    223e:	8d 2f       	mov	r24, r29
    2240:	01 c0       	rjmp	.+2      	; 0x2244 <I2C_1_SendData+0x5e>
    2242:	8d 2f       	mov	r24, r29
			}
		}
	}
	
	return retVal;
}
    2244:	df 91       	pop	r29
    2246:	cf 91       	pop	r28
    2248:	1f 91       	pop	r17
    224a:	0f 91       	pop	r16
    224c:	ff 90       	pop	r15
    224e:	08 95       	ret

00002250 <I2C_1_GetData>:

/* Returns how many bytes have been received, -1 means NACK at address */
uint8_t I2C_1_GetData(uint8_t address, uint8_t *pData, uint8_t len)
{
    2250:	ff 92       	push	r15
    2252:	0f 93       	push	r16
    2254:	1f 93       	push	r17
    2256:	cf 93       	push	r28
    2258:	df 93       	push	r29
    225a:	8b 01       	movw	r16, r22
    225c:	d4 2f       	mov	r29, r20
	uint8_t retVal = (uint8_t) -1;
	
	/* start transmitting the client address */
	TWI1.MADDR = address | 0x01;
    225e:	81 60       	ori	r24, 0x01	; 1
    2260:	80 93 27 09 	sts	0x0927, r24	; 0x800927 <__TEXT_REGION_LENGTH__+0x7e0927>
	if(I2C_1_WaitW() != I2C_ACKED)
    2264:	0e 94 50 10 	call	0x20a0	; 0x20a0 <_ZL11I2C_1_WaitWv>
    2268:	81 30       	cpi	r24, 0x01	; 1
    226a:	49 f5       	brne	.+82     	; 0x22be <I2C_1_GetData+0x6e>
	return retVal;
	
	/* if pData[0] contains a register address, send it first */
	if(pData[0])
    226c:	f8 01       	movw	r30, r16
    226e:	80 81       	ld	r24, Z
    2270:	88 23       	and	r24, r24
    2272:	31 f0       	breq	.+12     	; 0x2280 <I2C_1_GetData+0x30>
	{
		TWI1.MDATA = pData[0];
    2274:	80 93 28 09 	sts	0x0928, r24	; 0x800928 <__TEXT_REGION_LENGTH__+0x7e0928>
		if(I2C_1_WaitW() != I2C_ACKED)
    2278:	0e 94 50 10 	call	0x20a0	; 0x20a0 <_ZL11I2C_1_WaitWv>
    227c:	81 30       	cpi	r24, 0x01	; 1
    227e:	09 f5       	brne	.+66     	; 0x22c2 <I2C_1_GetData+0x72>
			return retVal;
		}
	}

	retVal = 0;
	if((len != 0) && (pData !=NULL ))
    2280:	dd 23       	and	r29, r29
    2282:	09 f1       	breq	.+66     	; 0x22c6 <I2C_1_GetData+0x76>
    2284:	01 15       	cp	r16, r1
    2286:	11 05       	cpc	r17, r1
    2288:	01 f1       	breq	.+64     	; 0x22ca <I2C_1_GetData+0x7a>
    228a:	c0 e0       	ldi	r28, 0x00	; 0
	{
		while(len--)
    228c:	ff 24       	eor	r15, r15
    228e:	fa 94       	dec	r15
    2290:	fd 0e       	add	r15, r29
    2292:	dd 23       	and	r29, r29
    2294:	e1 f0       	breq	.+56     	; 0x22ce <I2C_1_GetData+0x7e>
		{
			if(I2C_1_WaitR() == I2C_READY)
    2296:	0e 94 66 10 	call	0x20cc	; 0x20cc <_ZL11I2C_1_WaitRv>
    229a:	83 30       	cpi	r24, 0x03	; 3
    229c:	d1 f4       	brne	.+52     	; 0x22d2 <I2C_1_GetData+0x82>
			{
				*pData = TWI1.MDATA;
    229e:	80 91 28 09 	lds	r24, 0x0928	; 0x800928 <__TEXT_REGION_LENGTH__+0x7e0928>
    22a2:	f8 01       	movw	r30, r16
    22a4:	80 83       	st	Z, r24
				TWI1.MCTRLB = (len == 0)? TWI_ACKACT_bm | TWI_MCMD_STOP_gc : TWI_MCMD_RECVTRANS_gc;
    22a6:	f1 10       	cpse	r15, r1
    22a8:	02 c0       	rjmp	.+4      	; 0x22ae <I2C_1_GetData+0x5e>
    22aa:	87 e0       	ldi	r24, 0x07	; 7
    22ac:	01 c0       	rjmp	.+2      	; 0x22b0 <I2C_1_GetData+0x60>
    22ae:	82 e0       	ldi	r24, 0x02	; 2
    22b0:	80 93 24 09 	sts	0x0924, r24	; 0x800924 <__TEXT_REGION_LENGTH__+0x7e0924>
				retVal++;
    22b4:	cf 5f       	subi	r28, 0xFF	; 255
				pData++;
    22b6:	0f 5f       	subi	r16, 0xFF	; 255
    22b8:	1f 4f       	sbci	r17, 0xFF	; 255
	}

	retVal = 0;
	if((len != 0) && (pData !=NULL ))
	{
		while(len--)
    22ba:	df 2d       	mov	r29, r15
    22bc:	e7 cf       	rjmp	.-50     	; 0x228c <I2C_1_GetData+0x3c>
	uint8_t retVal = (uint8_t) -1;
	
	/* start transmitting the client address */
	TWI1.MADDR = address | 0x01;
	if(I2C_1_WaitW() != I2C_ACKED)
	return retVal;
    22be:	8f ef       	ldi	r24, 0xFF	; 255
    22c0:	09 c0       	rjmp	.+18     	; 0x22d4 <I2C_1_GetData+0x84>
	if(pData[0])
	{
		TWI1.MDATA = pData[0];
		if(I2C_1_WaitW() != I2C_ACKED)
		{
			return retVal;
    22c2:	8f ef       	ldi	r24, 0xFF	; 255
    22c4:	07 c0       	rjmp	.+14     	; 0x22d4 <I2C_1_GetData+0x84>
		}
	}

	retVal = 0;
    22c6:	80 e0       	ldi	r24, 0x00	; 0
    22c8:	05 c0       	rjmp	.+10     	; 0x22d4 <I2C_1_GetData+0x84>
    22ca:	80 e0       	ldi	r24, 0x00	; 0
    22cc:	03 c0       	rjmp	.+6      	; 0x22d4 <I2C_1_GetData+0x84>
    22ce:	8c 2f       	mov	r24, r28
    22d0:	01 c0       	rjmp	.+2      	; 0x22d4 <I2C_1_GetData+0x84>
    22d2:	8c 2f       	mov	r24, r28
			break;
		}
	}
	
	return retVal;
}
    22d4:	df 91       	pop	r29
    22d6:	cf 91       	pop	r28
    22d8:	1f 91       	pop	r17
    22da:	0f 91       	pop	r16
    22dc:	ff 90       	pop	r15
    22de:	08 95       	ret

000022e0 <_Z16nextFullTxBufferv>:


void lb_send_sync(void)
{
	sprintf(g_tempMsgBuff, ".....");
	linkbus_send_text(g_tempMsgBuff);
    22e0:	90 e0       	ldi	r25, 0x00	; 0
    22e2:	80 91 66 41 	lds	r24, 0x4166	; 0x804166 <_ZZ16nextFullTxBuffervE11bufferIndex>
    22e6:	28 2f       	mov	r18, r24
    22e8:	30 e0       	ldi	r19, 0x00	; 0
    22ea:	42 e3       	ldi	r20, 0x32	; 50
    22ec:	42 9f       	mul	r20, r18
    22ee:	f0 01       	movw	r30, r0
    22f0:	43 9f       	mul	r20, r19
    22f2:	f0 0d       	add	r31, r0
    22f4:	11 24       	eor	r1, r1
    22f6:	e5 51       	subi	r30, 0x15	; 21
    22f8:	fe 4b       	sbci	r31, 0xBE	; 190
    22fa:	40 81       	ld	r20, Z
    22fc:	41 11       	cpse	r20, r1
    22fe:	0b c0       	rjmp	.+22     	; 0x2316 <_Z16nextFullTxBufferv+0x36>
    2300:	9f 5f       	subi	r25, 0xFF	; 255
    2302:	94 30       	cpi	r25, 0x04	; 4
    2304:	50 f4       	brcc	.+20     	; 0x231a <_Z16nextFullTxBufferv+0x3a>
    2306:	8f 5f       	subi	r24, 0xFF	; 255
    2308:	80 93 66 41 	sts	0x4166, r24	; 0x804166 <_ZZ16nextFullTxBuffervE11bufferIndex>
    230c:	84 30       	cpi	r24, 0x04	; 4
    230e:	48 f3       	brcs	.-46     	; 0x22e2 <_Z16nextFullTxBufferv+0x2>
    2310:	10 92 66 41 	sts	0x4166, r1	; 0x804166 <_ZZ16nextFullTxBuffervE11bufferIndex>
    2314:	e6 cf       	rjmp	.-52     	; 0x22e2 <_Z16nextFullTxBufferv+0x2>
    2316:	81 e0       	ldi	r24, 0x01	; 1
    2318:	01 c0       	rjmp	.+2      	; 0x231c <_Z16nextFullTxBufferv+0x3c>
    231a:	80 e0       	ldi	r24, 0x00	; 0
    231c:	88 23       	and	r24, r24
    231e:	49 f0       	breq	.+18     	; 0x2332 <_Z16nextFullTxBufferv+0x52>
    2320:	42 e3       	ldi	r20, 0x32	; 50
    2322:	42 9f       	mul	r20, r18
    2324:	c0 01       	movw	r24, r0
    2326:	43 9f       	mul	r20, r19
    2328:	90 0d       	add	r25, r0
    232a:	11 24       	eor	r1, r1
    232c:	85 51       	subi	r24, 0x15	; 21
    232e:	9e 4b       	sbci	r25, 0xBE	; 190
    2330:	08 95       	ret
    2332:	80 e0       	ldi	r24, 0x00	; 0
    2334:	90 e0       	ldi	r25, 0x00	; 0
    2336:	08 95       	ret

00002338 <_Z17nextEmptyTxBufferv>:
    2338:	90 e0       	ldi	r25, 0x00	; 0
    233a:	80 91 65 41 	lds	r24, 0x4165	; 0x804165 <_ZZ17nextEmptyTxBuffervE11bufferIndex>
    233e:	28 2f       	mov	r18, r24
    2340:	30 e0       	ldi	r19, 0x00	; 0
    2342:	42 e3       	ldi	r20, 0x32	; 50
    2344:	42 9f       	mul	r20, r18
    2346:	f0 01       	movw	r30, r0
    2348:	43 9f       	mul	r20, r19
    234a:	f0 0d       	add	r31, r0
    234c:	11 24       	eor	r1, r1
    234e:	e5 51       	subi	r30, 0x15	; 21
    2350:	fe 4b       	sbci	r31, 0xBE	; 190
    2352:	40 81       	ld	r20, Z
    2354:	44 23       	and	r20, r20
    2356:	59 f0       	breq	.+22     	; 0x236e <_Z17nextEmptyTxBufferv+0x36>
    2358:	9f 5f       	subi	r25, 0xFF	; 255
    235a:	94 30       	cpi	r25, 0x04	; 4
    235c:	50 f4       	brcc	.+20     	; 0x2372 <_Z17nextEmptyTxBufferv+0x3a>
    235e:	8f 5f       	subi	r24, 0xFF	; 255
    2360:	80 93 65 41 	sts	0x4165, r24	; 0x804165 <_ZZ17nextEmptyTxBuffervE11bufferIndex>
    2364:	84 30       	cpi	r24, 0x04	; 4
    2366:	48 f3       	brcs	.-46     	; 0x233a <_Z17nextEmptyTxBufferv+0x2>
    2368:	10 92 65 41 	sts	0x4165, r1	; 0x804165 <_ZZ17nextEmptyTxBuffervE11bufferIndex>
    236c:	e6 cf       	rjmp	.-52     	; 0x233a <_Z17nextEmptyTxBufferv+0x2>
    236e:	81 e0       	ldi	r24, 0x01	; 1
    2370:	01 c0       	rjmp	.+2      	; 0x2374 <_Z17nextEmptyTxBufferv+0x3c>
    2372:	80 e0       	ldi	r24, 0x00	; 0
    2374:	88 23       	and	r24, r24
    2376:	49 f0       	breq	.+18     	; 0x238a <_Z17nextEmptyTxBufferv+0x52>
    2378:	42 e3       	ldi	r20, 0x32	; 50
    237a:	42 9f       	mul	r20, r18
    237c:	c0 01       	movw	r24, r0
    237e:	43 9f       	mul	r20, r19
    2380:	90 0d       	add	r25, r0
    2382:	11 24       	eor	r1, r1
    2384:	85 51       	subi	r24, 0x15	; 21
    2386:	9e 4b       	sbci	r25, 0xBE	; 190
    2388:	08 95       	ret
    238a:	80 e0       	ldi	r24, 0x00	; 0
    238c:	90 e0       	ldi	r25, 0x00	; 0
    238e:	08 95       	ret

00002390 <_Z17nextEmptyRxBufferv>:
    2390:	90 e0       	ldi	r25, 0x00	; 0
    2392:	80 91 64 41 	lds	r24, 0x4164	; 0x804164 <_ZZ17nextEmptyRxBuffervE11bufferIndex>
    2396:	28 2f       	mov	r18, r24
    2398:	30 e0       	ldi	r19, 0x00	; 0
    239a:	42 e4       	ldi	r20, 0x42	; 66
    239c:	42 9f       	mul	r20, r18
    239e:	f0 01       	movw	r30, r0
    23a0:	43 9f       	mul	r20, r19
    23a2:	f0 0d       	add	r31, r0
    23a4:	11 24       	eor	r1, r1
    23a6:	e9 59       	subi	r30, 0x99	; 153
    23a8:	fe 4b       	sbci	r31, 0xBE	; 190
    23aa:	41 81       	ldd	r20, Z+1	; 0x01
    23ac:	52 81       	ldd	r21, Z+2	; 0x02
    23ae:	45 2b       	or	r20, r21
    23b0:	59 f0       	breq	.+22     	; 0x23c8 <_Z17nextEmptyRxBufferv+0x38>
    23b2:	9f 5f       	subi	r25, 0xFF	; 255
    23b4:	92 30       	cpi	r25, 0x02	; 2
    23b6:	50 f4       	brcc	.+20     	; 0x23cc <_Z17nextEmptyRxBufferv+0x3c>
    23b8:	8f 5f       	subi	r24, 0xFF	; 255
    23ba:	80 93 64 41 	sts	0x4164, r24	; 0x804164 <_ZZ17nextEmptyRxBuffervE11bufferIndex>
    23be:	82 30       	cpi	r24, 0x02	; 2
    23c0:	40 f3       	brcs	.-48     	; 0x2392 <_Z17nextEmptyRxBufferv+0x2>
    23c2:	10 92 64 41 	sts	0x4164, r1	; 0x804164 <_ZZ17nextEmptyRxBuffervE11bufferIndex>
    23c6:	e5 cf       	rjmp	.-54     	; 0x2392 <_Z17nextEmptyRxBufferv+0x2>
    23c8:	81 e0       	ldi	r24, 0x01	; 1
    23ca:	01 c0       	rjmp	.+2      	; 0x23ce <_Z17nextEmptyRxBufferv+0x3e>
    23cc:	80 e0       	ldi	r24, 0x00	; 0
    23ce:	88 23       	and	r24, r24
    23d0:	49 f0       	breq	.+18     	; 0x23e4 <_Z17nextEmptyRxBufferv+0x54>
    23d2:	42 e4       	ldi	r20, 0x42	; 66
    23d4:	42 9f       	mul	r20, r18
    23d6:	c0 01       	movw	r24, r0
    23d8:	43 9f       	mul	r20, r19
    23da:	90 0d       	add	r25, r0
    23dc:	11 24       	eor	r1, r1
    23de:	89 59       	subi	r24, 0x99	; 153
    23e0:	9e 4b       	sbci	r25, 0xBE	; 190
    23e2:	08 95       	ret
    23e4:	80 e0       	ldi	r24, 0x00	; 0
    23e6:	90 e0       	ldi	r25, 0x00	; 0
    23e8:	08 95       	ret

000023ea <_Z16nextFullRxBufferv>:
    23ea:	90 e0       	ldi	r25, 0x00	; 0
    23ec:	80 91 63 41 	lds	r24, 0x4163	; 0x804163 <_ZZ16nextFullRxBuffervE11bufferIndex>
    23f0:	28 2f       	mov	r18, r24
    23f2:	30 e0       	ldi	r19, 0x00	; 0
    23f4:	42 e4       	ldi	r20, 0x42	; 66
    23f6:	42 9f       	mul	r20, r18
    23f8:	f0 01       	movw	r30, r0
    23fa:	43 9f       	mul	r20, r19
    23fc:	f0 0d       	add	r31, r0
    23fe:	11 24       	eor	r1, r1
    2400:	e9 59       	subi	r30, 0x99	; 153
    2402:	fe 4b       	sbci	r31, 0xBE	; 190
    2404:	41 81       	ldd	r20, Z+1	; 0x01
    2406:	52 81       	ldd	r21, Z+2	; 0x02
    2408:	45 2b       	or	r20, r21
    240a:	59 f4       	brne	.+22     	; 0x2422 <_Z16nextFullRxBufferv+0x38>
    240c:	9f 5f       	subi	r25, 0xFF	; 255
    240e:	92 30       	cpi	r25, 0x02	; 2
    2410:	50 f4       	brcc	.+20     	; 0x2426 <_Z16nextFullRxBufferv+0x3c>
    2412:	8f 5f       	subi	r24, 0xFF	; 255
    2414:	80 93 63 41 	sts	0x4163, r24	; 0x804163 <_ZZ16nextFullRxBuffervE11bufferIndex>
    2418:	82 30       	cpi	r24, 0x02	; 2
    241a:	40 f3       	brcs	.-48     	; 0x23ec <_Z16nextFullRxBufferv+0x2>
    241c:	10 92 63 41 	sts	0x4163, r1	; 0x804163 <_ZZ16nextFullRxBuffervE11bufferIndex>
    2420:	e5 cf       	rjmp	.-54     	; 0x23ec <_Z16nextFullRxBufferv+0x2>
    2422:	81 e0       	ldi	r24, 0x01	; 1
    2424:	01 c0       	rjmp	.+2      	; 0x2428 <_Z16nextFullRxBufferv+0x3e>
    2426:	80 e0       	ldi	r24, 0x00	; 0
    2428:	88 23       	and	r24, r24
    242a:	49 f0       	breq	.+18     	; 0x243e <_Z16nextFullRxBufferv+0x54>
    242c:	42 e4       	ldi	r20, 0x42	; 66
    242e:	42 9f       	mul	r20, r18
    2430:	c0 01       	movw	r24, r0
    2432:	43 9f       	mul	r20, r19
    2434:	90 0d       	add	r25, r0
    2436:	11 24       	eor	r1, r1
    2438:	89 59       	subi	r24, 0x99	; 153
    243a:	9e 4b       	sbci	r25, 0xBE	; 190
    243c:	08 95       	ret
    243e:	80 e0       	ldi	r24, 0x00	; 0
    2440:	90 e0       	ldi	r25, 0x00	; 0
    2442:	08 95       	ret

00002444 <_Z19linkbusTxInProgressv>:
    2444:	80 91 b3 42 	lds	r24, 0x42B3	; 0x8042b3 <_ZL17linkbus_tx_active>
    2448:	08 95       	ret

0000244a <_Z16linkbus_start_txv>:
    244a:	cf 93       	push	r28
    244c:	80 91 b3 42 	lds	r24, 0x42B3	; 0x8042b3 <_ZL17linkbus_tx_active>
    2450:	c1 e0       	ldi	r28, 0x01	; 1
    2452:	81 11       	cpse	r24, r1
    2454:	c0 e0       	ldi	r28, 0x00	; 0
    2456:	81 11       	cpse	r24, r1
    2458:	05 c0       	rjmp	.+10     	; 0x2464 <_Z16linkbus_start_txv+0x1a>
    245a:	81 e0       	ldi	r24, 0x01	; 1
    245c:	80 93 b3 42 	sts	0x42B3, r24	; 0x8042b3 <_ZL17linkbus_tx_active>
    2460:	0e 94 6c 1e 	call	0x3cd8	; 0x3cd8 <USART1_enable_tx>
    2464:	8c 2f       	mov	r24, r28
    2466:	cf 91       	pop	r28
    2468:	08 95       	ret

0000246a <_Z14linkbus_end_txv>:
    246a:	80 91 b3 42 	lds	r24, 0x42B3	; 0x8042b3 <_ZL17linkbus_tx_active>
    246e:	88 23       	and	r24, r24
    2470:	39 f0       	breq	.+14     	; 0x2480 <_Z14linkbus_end_txv+0x16>
    2472:	e0 e2       	ldi	r30, 0x20	; 32
    2474:	f8 e0       	ldi	r31, 0x08	; 8
    2476:	85 81       	ldd	r24, Z+5	; 0x05
    2478:	8f 7d       	andi	r24, 0xDF	; 223
    247a:	85 83       	std	Z+5, r24	; 0x05
    247c:	10 92 b3 42 	sts	0x42B3, r1	; 0x8042b3 <_ZL17linkbus_tx_active>
    2480:	08 95       	ret

00002482 <_Z16linkbus_reset_rxv>:
    2482:	cf 93       	push	r28
    2484:	df 93       	push	r29
    2486:	80 91 26 08 	lds	r24, 0x0826	; 0x800826 <__TEXT_REGION_LENGTH__+0x7e0826>
    248a:	88 23       	and	r24, r24
    248c:	7c f4       	brge	.+30     	; 0x24ac <_Z16linkbus_reset_rxv+0x2a>
    248e:	e0 e2       	ldi	r30, 0x20	; 32
    2490:	f8 e0       	ldi	r31, 0x08	; 8
    2492:	86 81       	ldd	r24, Z+6	; 0x06
    2494:	8f 77       	andi	r24, 0x7F	; 127
    2496:	86 83       	std	Z+6, r24	; 0x06
    2498:	84 e8       	ldi	r24, 0x84	; 132
    249a:	a7 e6       	ldi	r26, 0x67	; 103
    249c:	b1 e4       	ldi	r27, 0x41	; 65
    249e:	ed 01       	movw	r28, r26
    24a0:	19 92       	st	Y+, r1
    24a2:	8a 95       	dec	r24
    24a4:	e9 f7       	brne	.-6      	; 0x24a0 <_Z16linkbus_reset_rxv+0x1e>
    24a6:	86 81       	ldd	r24, Z+6	; 0x06
    24a8:	80 68       	ori	r24, 0x80	; 128
    24aa:	86 83       	std	Z+6, r24	; 0x06
    24ac:	df 91       	pop	r29
    24ae:	cf 91       	pop	r28
    24b0:	08 95       	ret

000024b2 <_Z21USART1_initializationm>:
    24b2:	28 b1       	in	r18, 0x08	; 8
    24b4:	2d 7f       	andi	r18, 0xFD	; 253
    24b6:	28 b9       	out	0x08, r18	; 8
    24b8:	e1 e5       	ldi	r30, 0x51	; 81
    24ba:	f4 e0       	ldi	r31, 0x04	; 4
    24bc:	20 81       	ld	r18, Z
    24be:	27 7f       	andi	r18, 0xF7	; 247
    24c0:	20 83       	st	Z, r18
    24c2:	29 b1       	in	r18, 0x09	; 9
    24c4:	2e 7f       	andi	r18, 0xFE	; 254
    24c6:	29 b9       	out	0x09, r18	; 9
    24c8:	28 b1       	in	r18, 0x08	; 8
    24ca:	21 60       	ori	r18, 0x01	; 1
    24cc:	28 b9       	out	0x08, r18	; 8
    24ce:	0e 94 4a 1e 	call	0x3c94	; 0x3c94 <USART1_init>
    24d2:	08 95       	ret

000024d4 <_Z12linkbus_initv>:
    24d4:	84 e8       	ldi	r24, 0x84	; 132
    24d6:	e7 e6       	ldi	r30, 0x67	; 103
    24d8:	f1 e4       	ldi	r31, 0x41	; 65
    24da:	df 01       	movw	r26, r30
    24dc:	1d 92       	st	X+, r1
    24de:	8a 95       	dec	r24
    24e0:	e9 f7       	brne	.-6      	; 0x24dc <_Z12linkbus_initv+0x8>
    24e2:	80 e0       	ldi	r24, 0x00	; 0
    24e4:	90 e0       	ldi	r25, 0x00	; 0
    24e6:	84 30       	cpi	r24, 0x04	; 4
    24e8:	91 05       	cpc	r25, r1
    24ea:	5c f4       	brge	.+22     	; 0x2502 <_Z12linkbus_initv+0x2e>
    24ec:	22 e3       	ldi	r18, 0x32	; 50
    24ee:	28 9f       	mul	r18, r24
    24f0:	f0 01       	movw	r30, r0
    24f2:	29 9f       	mul	r18, r25
    24f4:	f0 0d       	add	r31, r0
    24f6:	11 24       	eor	r1, r1
    24f8:	e5 51       	subi	r30, 0x15	; 21
    24fa:	fe 4b       	sbci	r31, 0xBE	; 190
    24fc:	10 82       	st	Z, r1
    24fe:	01 96       	adiw	r24, 0x01	; 1
    2500:	f2 cf       	rjmp	.-28     	; 0x24e6 <_Z12linkbus_initv+0x12>
    2502:	60 e8       	ldi	r22, 0x80	; 128
    2504:	75 e2       	ldi	r23, 0x25	; 37
    2506:	80 e0       	ldi	r24, 0x00	; 0
    2508:	90 e0       	ldi	r25, 0x00	; 0
    250a:	0e 94 59 12 	call	0x24b2	; 0x24b2 <_Z21USART1_initializationm>
    250e:	10 92 1f 40 	sts	0x401F, r1	; 0x80401f <_ZL14g_bus_disabled>
    2512:	08 95       	ret

00002514 <_Z15linkbus_disablev>:
    2514:	81 e0       	ldi	r24, 0x01	; 1
    2516:	80 93 1f 40 	sts	0x401F, r24	; 0x80401f <_ZL14g_bus_disabled>
    251a:	0e 94 75 1e 	call	0x3cea	; 0x3cea <USART1_disable>
    251e:	0e 94 35 12 	call	0x246a	; 0x246a <_Z14linkbus_end_txv>
    2522:	84 e8       	ldi	r24, 0x84	; 132
    2524:	e7 e6       	ldi	r30, 0x67	; 103
    2526:	f1 e4       	ldi	r31, 0x41	; 65
    2528:	df 01       	movw	r26, r30
    252a:	1d 92       	st	X+, r1
    252c:	8a 95       	dec	r24
    252e:	e9 f7       	brne	.-6      	; 0x252a <_Z15linkbus_disablev+0x16>
    2530:	80 e0       	ldi	r24, 0x00	; 0
    2532:	84 30       	cpi	r24, 0x04	; 4
    2534:	48 f4       	brcc	.+18     	; 0x2548 <_Z15linkbus_disablev+0x34>
    2536:	b2 e3       	ldi	r27, 0x32	; 50
    2538:	8b 9f       	mul	r24, r27
    253a:	f0 01       	movw	r30, r0
    253c:	11 24       	eor	r1, r1
    253e:	e5 51       	subi	r30, 0x15	; 21
    2540:	fe 4b       	sbci	r31, 0xBE	; 190
    2542:	10 82       	st	Z, r1
    2544:	8f 5f       	subi	r24, 0xFF	; 255
    2546:	f5 cf       	rjmp	.-22     	; 0x2532 <_Z15linkbus_disablev+0x1e>
    2548:	08 95       	ret

0000254a <_Z17linkbus_send_textPc>:
    254a:	0f 93       	push	r16
    254c:	1f 93       	push	r17
    254e:	cf 93       	push	r28
    2550:	df 93       	push	r29
    2552:	20 91 1f 40 	lds	r18, 0x401F	; 0x80401f <_ZL14g_bus_disabled>
    2556:	21 11       	cpse	r18, r1
    2558:	2f c0       	rjmp	.+94     	; 0x25b8 <_Z17linkbus_send_textPc+0x6e>
    255a:	00 97       	sbiw	r24, 0x00	; 0
    255c:	79 f1       	breq	.+94     	; 0x25bc <_Z17linkbus_send_textPc+0x72>
    255e:	8c 01       	movw	r16, r24
    2560:	0e 94 9c 11 	call	0x2338	; 0x2338 <_Z17nextEmptyTxBufferv>
    2564:	c8 ec       	ldi	r28, 0xC8	; 200
    2566:	d0 e0       	ldi	r29, 0x00	; 0
    2568:	00 97       	sbiw	r24, 0x00	; 0
    256a:	b1 f4       	brne	.+44     	; 0x2598 <_Z17linkbus_send_textPc+0x4e>
    256c:	20 97       	sbiw	r28, 0x00	; 0
    256e:	a1 f0       	breq	.+40     	; 0x2598 <_Z17linkbus_send_textPc+0x4e>
    2570:	0e 94 22 12 	call	0x2444	; 0x2444 <_Z19linkbusTxInProgressv>
    2574:	88 23       	and	r24, r24
    2576:	21 f0       	breq	.+8      	; 0x2580 <_Z17linkbus_send_textPc+0x36>
    2578:	20 97       	sbiw	r28, 0x00	; 0
    257a:	21 f4       	brne	.+8      	; 0x2584 <_Z17linkbus_send_textPc+0x3a>
    257c:	90 e0       	ldi	r25, 0x00	; 0
    257e:	03 c0       	rjmp	.+6      	; 0x2586 <_Z17linkbus_send_textPc+0x3c>
    2580:	90 e0       	ldi	r25, 0x00	; 0
    2582:	01 c0       	rjmp	.+2      	; 0x2586 <_Z17linkbus_send_textPc+0x3c>
    2584:	91 e0       	ldi	r25, 0x01	; 1
    2586:	99 23       	and	r25, r25
    2588:	21 f0       	breq	.+8      	; 0x2592 <_Z17linkbus_send_textPc+0x48>
    258a:	20 97       	sbiw	r28, 0x00	; 0
    258c:	89 f3       	breq	.-30     	; 0x2570 <_Z17linkbus_send_textPc+0x26>
    258e:	21 97       	sbiw	r28, 0x01	; 1
    2590:	ef cf       	rjmp	.-34     	; 0x2570 <_Z17linkbus_send_textPc+0x26>
    2592:	0e 94 9c 11 	call	0x2338	; 0x2338 <_Z17nextEmptyTxBufferv>
    2596:	e8 cf       	rjmp	.-48     	; 0x2568 <_Z17linkbus_send_textPc+0x1e>
    2598:	00 97       	sbiw	r24, 0x00	; 0
    259a:	91 f0       	breq	.+36     	; 0x25c0 <_Z17linkbus_send_textPc+0x76>
    259c:	1f 93       	push	r17
    259e:	0f 93       	push	r16
    25a0:	9f 93       	push	r25
    25a2:	8f 93       	push	r24
    25a4:	0e 94 01 23 	call	0x4602	; 0x4602 <sprintf>
    25a8:	0e 94 25 12 	call	0x244a	; 0x244a <_Z16linkbus_start_txv>
    25ac:	0f 90       	pop	r0
    25ae:	0f 90       	pop	r0
    25b0:	0f 90       	pop	r0
    25b2:	0f 90       	pop	r0
    25b4:	80 e0       	ldi	r24, 0x00	; 0
    25b6:	05 c0       	rjmp	.+10     	; 0x25c2 <_Z17linkbus_send_textPc+0x78>
    25b8:	81 e0       	ldi	r24, 0x01	; 1
    25ba:	03 c0       	rjmp	.+6      	; 0x25c2 <_Z17linkbus_send_textPc+0x78>
    25bc:	81 e0       	ldi	r24, 0x01	; 1
    25be:	01 c0       	rjmp	.+2      	; 0x25c2 <_Z17linkbus_send_textPc+0x78>
    25c0:	81 e0       	ldi	r24, 0x01	; 1
    25c2:	df 91       	pop	r29
    25c4:	cf 91       	pop	r28
    25c6:	1f 91       	pop	r17
    25c8:	0f 91       	pop	r16
    25ca:	08 95       	ret

000025cc <_Z11lb_send_msg13LBMessageTypePKcPc>:
    25cc:	83 30       	cpi	r24, 0x03	; 3
    25ce:	29 f0       	breq	.+10     	; 0x25da <_Z11lb_send_msg13LBMessageTypePKcPc+0xe>
    25d0:	82 30       	cpi	r24, 0x02	; 2
    25d2:	31 f0       	breq	.+12     	; 0x25e0 <_Z11lb_send_msg13LBMessageTypePKcPc+0x14>
    25d4:	9b e3       	ldi	r25, 0x3B	; 59
    25d6:	84 e2       	ldi	r24, 0x24	; 36
    25d8:	05 c0       	rjmp	.+10     	; 0x25e4 <_Z11lb_send_msg13LBMessageTypePKcPc+0x18>
    25da:	9b e3       	ldi	r25, 0x3B	; 59
    25dc:	81 e2       	ldi	r24, 0x21	; 33
    25de:	02 c0       	rjmp	.+4      	; 0x25e4 <_Z11lb_send_msg13LBMessageTypePKcPc+0x18>
    25e0:	9f e3       	ldi	r25, 0x3F	; 63
    25e2:	84 e2       	ldi	r24, 0x24	; 36
    25e4:	1f 92       	push	r1
    25e6:	9f 93       	push	r25
    25e8:	5f 93       	push	r21
    25ea:	4f 93       	push	r20
    25ec:	7f 93       	push	r23
    25ee:	6f 93       	push	r22
    25f0:	1f 92       	push	r1
    25f2:	8f 93       	push	r24
    25f4:	89 ea       	ldi	r24, 0xA9	; 169
    25f6:	90 e4       	ldi	r25, 0x40	; 64
    25f8:	9f 93       	push	r25
    25fa:	8f 93       	push	r24
    25fc:	84 eb       	ldi	r24, 0xB4	; 180
    25fe:	92 e4       	ldi	r25, 0x42	; 66
    2600:	9f 93       	push	r25
    2602:	8f 93       	push	r24
    2604:	0e 94 01 23 	call	0x4602	; 0x4602 <sprintf>
    2608:	84 eb       	ldi	r24, 0xB4	; 180
    260a:	92 e4       	ldi	r25, 0x42	; 66
    260c:	0e 94 a5 12 	call	0x254a	; 0x254a <_Z17linkbus_send_textPc>
    2610:	8d b7       	in	r24, 0x3d	; 61
    2612:	9e b7       	in	r25, 0x3e	; 62
    2614:	0c 96       	adiw	r24, 0x0c	; 12
    2616:	8d bf       	out	0x3d, r24	; 61
    2618:	9e bf       	out	0x3e, r25	; 62
    261a:	08 95       	ret

0000261c <_Z16lb_broadcast_numjPKc>:
}


void lb_broadcast_num(uint16_t data, const char* str)
{
    261c:	0f 93       	push	r16
    261e:	1f 93       	push	r17
    2620:	cf 93       	push	r28
    2622:	df 93       	push	r29
    2624:	cd b7       	in	r28, 0x3d	; 61
    2626:	de b7       	in	r29, 0x3e	; 62
    2628:	26 97       	sbiw	r28, 0x06	; 6
    262a:	cd bf       	out	0x3d, r28	; 61
    262c:	de bf       	out	0x3e, r29	; 62
    262e:	8b 01       	movw	r16, r22
	char t[6] = "\0";
    2630:	20 91 7f 40 	lds	r18, 0x407F	; 0x80407f <g_tx_power_is_zero+0x4f>
    2634:	30 91 80 40 	lds	r19, 0x4080	; 0x804080 <g_tx_power_is_zero+0x50>
    2638:	29 83       	std	Y+1, r18	; 0x01
    263a:	3a 83       	std	Y+2, r19	; 0x02
    263c:	fe 01       	movw	r30, r28
    263e:	33 96       	adiw	r30, 0x03	; 3
    2640:	24 e0       	ldi	r18, 0x04	; 4
    2642:	df 01       	movw	r26, r30
    2644:	1d 92       	st	X+, r1
    2646:	2a 95       	dec	r18
    2648:	e9 f7       	brne	.-6      	; 0x2644 <_Z16lb_broadcast_numjPKc+0x28>

	sprintf(t, "%u", data);
    264a:	9f 93       	push	r25
    264c:	8f 93       	push	r24
    264e:	89 eb       	ldi	r24, 0xB9	; 185
    2650:	90 e4       	ldi	r25, 0x40	; 64
    2652:	9f 93       	push	r25
    2654:	8f 93       	push	r24
    2656:	ce 01       	movw	r24, r28
    2658:	01 96       	adiw	r24, 0x01	; 1
    265a:	9f 93       	push	r25
    265c:	8f 93       	push	r24
    265e:	0e 94 01 23 	call	0x4602	; 0x4602 <sprintf>
	g_tempMsgBuff[0] = '\0';
    2662:	10 92 b4 42 	sts	0x42B4, r1	; 0x8042b4 <_ZL13g_tempMsgBuff>

	if(str)
    2666:	0f 90       	pop	r0
    2668:	0f 90       	pop	r0
    266a:	0f 90       	pop	r0
    266c:	0f 90       	pop	r0
    266e:	0f 90       	pop	r0
    2670:	0f 90       	pop	r0
    2672:	01 15       	cp	r16, r1
    2674:	11 05       	cpc	r17, r1
    2676:	91 f0       	breq	.+36     	; 0x269c <_Z16lb_broadcast_numjPKc+0x80>
	{
		sprintf(g_tempMsgBuff, "%s,%s;", str, t);
    2678:	ce 01       	movw	r24, r28
    267a:	01 96       	adiw	r24, 0x01	; 1
    267c:	9f 93       	push	r25
    267e:	8f 93       	push	r24
    2680:	1f 93       	push	r17
    2682:	0f 93       	push	r16
    2684:	8c eb       	ldi	r24, 0xBC	; 188
    2686:	90 e4       	ldi	r25, 0x40	; 64
    2688:	9f 93       	push	r25
    268a:	8f 93       	push	r24
    268c:	84 eb       	ldi	r24, 0xB4	; 180
    268e:	92 e4       	ldi	r25, 0x42	; 66
    2690:	9f 93       	push	r25
    2692:	8f 93       	push	r24
    2694:	0e 94 01 23 	call	0x4602	; 0x4602 <sprintf>
    2698:	cd bf       	out	0x3d, r28	; 61
    269a:	de bf       	out	0x3e, r29	; 62
	}

	if(g_tempMsgBuff[0]) linkbus_send_text(g_tempMsgBuff);
    269c:	80 91 b4 42 	lds	r24, 0x42B4	; 0x8042b4 <_ZL13g_tempMsgBuff>
    26a0:	88 23       	and	r24, r24
    26a2:	21 f0       	breq	.+8      	; 0x26ac <_Z16lb_broadcast_numjPKc+0x90>
    26a4:	84 eb       	ldi	r24, 0xB4	; 180
    26a6:	92 e4       	ldi	r25, 0x42	; 66
    26a8:	0e 94 a5 12 	call	0x254a	; 0x254a <_Z17linkbus_send_textPc>
}
    26ac:	26 96       	adiw	r28, 0x06	; 6
    26ae:	cd bf       	out	0x3d, r28	; 61
    26b0:	de bf       	out	0x3e, r29	; 62
    26b2:	df 91       	pop	r29
    26b4:	cf 91       	pop	r28
    26b6:	1f 91       	pop	r17
    26b8:	0f 91       	pop	r16
    26ba:	08 95       	ret

000026bc <_Z12getMorseCharc>:
 */
MorseCharacter getMorseChar(char c)
{
	MorseCharacter morse;

	switch( c )
    26bc:	90 e0       	ldi	r25, 0x00	; 0
    26be:	fc 01       	movw	r30, r24
    26c0:	b0 97       	sbiw	r30, 0x20	; 32
    26c2:	ed 35       	cpi	r30, 0x5D	; 93
    26c4:	f1 05       	cpc	r31, r1
    26c6:	08 f0       	brcs	.+2      	; 0x26ca <_Z12getMorseCharc+0xe>
    26c8:	e8 c0       	rjmp	.+464    	; 0x289a <_Z12getMorseCharc+0x1de>
    26ca:	ec 58       	subi	r30, 0x8C	; 140
    26cc:	ff 4f       	sbci	r31, 0xFF	; 255
    26ce:	0c 94 35 21 	jmp	0x426a	; 0x426a <__tablejump2__>
	{
		case 'A':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
    26d2:	62 e0       	ldi	r22, 0x02	; 2
			morse.lengthInSymbols = 2;
    26d4:	72 e0       	ldi	r23, 0x02	; 2
			morse.lengthInElements = 5;
    26d6:	85 e0       	ldi	r24, 0x05	; 5
		}
		break;
    26d8:	08 95       	ret

		case 'B':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    26da:	61 e0       	ldi	r22, 0x01	; 1
			morse.lengthInSymbols = 4;
    26dc:	74 e0       	ldi	r23, 0x04	; 4
			morse.lengthInElements = 9;
    26de:	89 e0       	ldi	r24, 0x09	; 9
		}
		break;
    26e0:	08 95       	ret

		case 'C':
		{
			morse.pattern = 0x05;   /* 0000 0101; */
    26e2:	65 e0       	ldi	r22, 0x05	; 5
			morse.lengthInSymbols = 4;
    26e4:	74 e0       	ldi	r23, 0x04	; 4
			morse.lengthInElements = 11;
    26e6:	8b e0       	ldi	r24, 0x0B	; 11
		}
		break;
    26e8:	08 95       	ret

		case 'D':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    26ea:	61 e0       	ldi	r22, 0x01	; 1
			morse.lengthInSymbols = 3;
    26ec:	73 e0       	ldi	r23, 0x03	; 3
			morse.lengthInElements = 7;
    26ee:	87 e0       	ldi	r24, 0x07	; 7
		}
		break;
    26f0:	08 95       	ret

		case 'E':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    26f2:	60 e0       	ldi	r22, 0x00	; 0
			morse.lengthInSymbols = 1;
    26f4:	71 e0       	ldi	r23, 0x01	; 1
			morse.lengthInElements = 1;
    26f6:	81 e0       	ldi	r24, 0x01	; 1
		}
		break;
    26f8:	08 95       	ret

		case 'F':
		{
			morse.pattern = 0x04;   /* 0000 0100; */
    26fa:	64 e0       	ldi	r22, 0x04	; 4
			morse.lengthInSymbols = 4;
    26fc:	74 e0       	ldi	r23, 0x04	; 4
			morse.lengthInElements = 9;
    26fe:	89 e0       	ldi	r24, 0x09	; 9
		}
		break;
    2700:	08 95       	ret

		case 'G':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
    2702:	63 e0       	ldi	r22, 0x03	; 3
			morse.lengthInSymbols = 3;
    2704:	73 e0       	ldi	r23, 0x03	; 3
			morse.lengthInElements = 9;
    2706:	89 e0       	ldi	r24, 0x09	; 9
		}
		break;
    2708:	08 95       	ret

		case 'H':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    270a:	60 e0       	ldi	r22, 0x00	; 0
			morse.lengthInSymbols = 4;
    270c:	74 e0       	ldi	r23, 0x04	; 4
			morse.lengthInElements = 7;
    270e:	87 e0       	ldi	r24, 0x07	; 7
		}
		break;
    2710:	08 95       	ret

		case 'I':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    2712:	60 e0       	ldi	r22, 0x00	; 0
			morse.lengthInSymbols = 2;
    2714:	72 e0       	ldi	r23, 0x02	; 2
			morse.lengthInElements = 3;
    2716:	83 e0       	ldi	r24, 0x03	; 3
		}
		break;
    2718:	08 95       	ret

		case 'J':
		{
			morse.pattern = 0x0e;   /* 0000 1110; */
    271a:	6e e0       	ldi	r22, 0x0E	; 14
			morse.lengthInSymbols = 4;
    271c:	74 e0       	ldi	r23, 0x04	; 4
			morse.lengthInElements = 13;
    271e:	8d e0       	ldi	r24, 0x0D	; 13
		}
		break;
    2720:	08 95       	ret

		case 'K':
		{
			morse.pattern = 0x05;   /* 0000 0101; */
    2722:	65 e0       	ldi	r22, 0x05	; 5
			morse.lengthInSymbols = 3;
    2724:	73 e0       	ldi	r23, 0x03	; 3
			morse.lengthInElements = 9;
    2726:	89 e0       	ldi	r24, 0x09	; 9
		}
		break;
    2728:	08 95       	ret

		case 'L':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
    272a:	62 e0       	ldi	r22, 0x02	; 2
			morse.lengthInSymbols = 4;
    272c:	74 e0       	ldi	r23, 0x04	; 4
			morse.lengthInElements = 9;
    272e:	89 e0       	ldi	r24, 0x09	; 9
		}
		break;
    2730:	08 95       	ret

		case 'M':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
    2732:	63 e0       	ldi	r22, 0x03	; 3
			morse.lengthInSymbols = 2;
    2734:	72 e0       	ldi	r23, 0x02	; 2
			morse.lengthInElements = 7;
    2736:	87 e0       	ldi	r24, 0x07	; 7
		}
		break;
    2738:	08 95       	ret

		case 'N':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    273a:	61 e0       	ldi	r22, 0x01	; 1
			morse.lengthInSymbols = 2;
    273c:	72 e0       	ldi	r23, 0x02	; 2
			morse.lengthInElements = 5;
    273e:	85 e0       	ldi	r24, 0x05	; 5
		}
		break;
    2740:	08 95       	ret

		case 'O':
		{
			morse.pattern = 0x07;   /* 0000 0111; */
    2742:	67 e0       	ldi	r22, 0x07	; 7
			morse.lengthInSymbols = 3;
    2744:	73 e0       	ldi	r23, 0x03	; 3
			morse.lengthInElements = 11;
    2746:	8b e0       	ldi	r24, 0x0B	; 11
		}
		break;
    2748:	08 95       	ret

		case 'P':
		{
			morse.pattern = 0x06;   /* 0000 0110; */
    274a:	66 e0       	ldi	r22, 0x06	; 6
			morse.lengthInSymbols = 4;
    274c:	74 e0       	ldi	r23, 0x04	; 4
			morse.lengthInElements = 11;
    274e:	8b e0       	ldi	r24, 0x0B	; 11
		}
		break;
    2750:	08 95       	ret

		case 'Q':
		{
			morse.pattern = 0x0b;   /* 0000 1011; */
    2752:	6b e0       	ldi	r22, 0x0B	; 11
			morse.lengthInSymbols = 4;
    2754:	74 e0       	ldi	r23, 0x04	; 4
			morse.lengthInElements = 13;
    2756:	8d e0       	ldi	r24, 0x0D	; 13
		}
		break;
    2758:	08 95       	ret

		case 'R':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
    275a:	62 e0       	ldi	r22, 0x02	; 2
			morse.lengthInSymbols = 3;
    275c:	73 e0       	ldi	r23, 0x03	; 3
			morse.lengthInElements = 7;
    275e:	87 e0       	ldi	r24, 0x07	; 7
		}
		break;
    2760:	08 95       	ret

		case 'S':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    2762:	60 e0       	ldi	r22, 0x00	; 0
			morse.lengthInSymbols = 3;
    2764:	73 e0       	ldi	r23, 0x03	; 3
			morse.lengthInElements = 5;
    2766:	85 e0       	ldi	r24, 0x05	; 5
		}
		break;
    2768:	08 95       	ret

		case 'T':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    276a:	61 e0       	ldi	r22, 0x01	; 1
			morse.lengthInSymbols = 1;
    276c:	71 e0       	ldi	r23, 0x01	; 1
			morse.lengthInElements = 3;
    276e:	83 e0       	ldi	r24, 0x03	; 3
		}
		break;
    2770:	08 95       	ret

		case 'U':
		{
			morse.pattern = 0x04;   /* 0000 0100; */
    2772:	64 e0       	ldi	r22, 0x04	; 4
			morse.lengthInSymbols = 3;
    2774:	73 e0       	ldi	r23, 0x03	; 3
			morse.lengthInElements = 7;
    2776:	87 e0       	ldi	r24, 0x07	; 7
		}
		break;
    2778:	08 95       	ret

		case 'V':
		{
			morse.pattern = 0x08;   /* 0000 1000; */
    277a:	68 e0       	ldi	r22, 0x08	; 8
			morse.lengthInSymbols = 4;
    277c:	74 e0       	ldi	r23, 0x04	; 4
			morse.lengthInElements = 9;
    277e:	89 e0       	ldi	r24, 0x09	; 9
		}
		break;
    2780:	08 95       	ret

		case 'W':
		{
			morse.pattern = 0x06;   /* 0000 0110; */
    2782:	66 e0       	ldi	r22, 0x06	; 6
			morse.lengthInSymbols = 3;
    2784:	73 e0       	ldi	r23, 0x03	; 3
			morse.lengthInElements = 9;
    2786:	89 e0       	ldi	r24, 0x09	; 9
		}
		break;
    2788:	08 95       	ret

		case 'X':
		{
			morse.pattern = 0x09;   /* 0000 1001; */
    278a:	69 e0       	ldi	r22, 0x09	; 9
			morse.lengthInSymbols = 4;
    278c:	74 e0       	ldi	r23, 0x04	; 4
			morse.lengthInElements = 11;
    278e:	8b e0       	ldi	r24, 0x0B	; 11
		}
		break;
    2790:	08 95       	ret

		case 'Y':
		{
			morse.pattern = 0x0d;   /* 0000 1101; */
    2792:	6d e0       	ldi	r22, 0x0D	; 13
			morse.lengthInSymbols = 4;
    2794:	74 e0       	ldi	r23, 0x04	; 4
			morse.lengthInElements = 13;
    2796:	8d e0       	ldi	r24, 0x0D	; 13
		}
		break;
    2798:	08 95       	ret

		case 'Z':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
    279a:	63 e0       	ldi	r22, 0x03	; 3
			morse.lengthInSymbols = 4;
    279c:	74 e0       	ldi	r23, 0x04	; 4
			morse.lengthInElements = 11;
    279e:	8b e0       	ldi	r24, 0x0B	; 11
		}
		break;
    27a0:	08 95       	ret

		case '0':
		{
			morse.pattern = 0x1f;   /* 0001 1111; */
    27a2:	6f e1       	ldi	r22, 0x1F	; 31
			morse.lengthInSymbols = 5;
    27a4:	75 e0       	ldi	r23, 0x05	; 5
			morse.lengthInElements = 19;
    27a6:	83 e1       	ldi	r24, 0x13	; 19
		}
		break;
    27a8:	08 95       	ret

		case '1':
		{
			morse.pattern = 0x1e;   /* 0001 1110; */
    27aa:	6e e1       	ldi	r22, 0x1E	; 30
			morse.lengthInSymbols = 5;
    27ac:	75 e0       	ldi	r23, 0x05	; 5
			morse.lengthInElements = 17;
    27ae:	81 e1       	ldi	r24, 0x11	; 17
		}
		break;
    27b0:	08 95       	ret

		case '2':
		{
			morse.pattern = 0x1c;   /* 0001 1100; */
    27b2:	6c e1       	ldi	r22, 0x1C	; 28
			morse.lengthInSymbols = 5;
    27b4:	75 e0       	ldi	r23, 0x05	; 5
			morse.lengthInElements = 15;
    27b6:	8f e0       	ldi	r24, 0x0F	; 15
		}
		break;
    27b8:	08 95       	ret

		case '3':
		{
			morse.pattern = 0x18;   /* 0001 1000; */
    27ba:	68 e1       	ldi	r22, 0x18	; 24
			morse.lengthInSymbols = 5;
    27bc:	75 e0       	ldi	r23, 0x05	; 5
			morse.lengthInElements = 13;
    27be:	8d e0       	ldi	r24, 0x0D	; 13
		}
		break;
    27c0:	08 95       	ret

		case '4':
		{
			morse.pattern = 0x10;   /* 0001 0000; */
    27c2:	60 e1       	ldi	r22, 0x10	; 16
			morse.lengthInSymbols = 5;
    27c4:	75 e0       	ldi	r23, 0x05	; 5
			morse.lengthInElements = 11;
    27c6:	8b e0       	ldi	r24, 0x0B	; 11
		}
		break;
    27c8:	08 95       	ret

		case '5':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    27ca:	60 e0       	ldi	r22, 0x00	; 0
			morse.lengthInSymbols = 5;
    27cc:	75 e0       	ldi	r23, 0x05	; 5
			morse.lengthInElements = 9;
    27ce:	89 e0       	ldi	r24, 0x09	; 9
		}
		break;
    27d0:	08 95       	ret

		case '6':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    27d2:	61 e0       	ldi	r22, 0x01	; 1
			morse.lengthInSymbols = 5;
    27d4:	75 e0       	ldi	r23, 0x05	; 5
			morse.lengthInElements = 11;
    27d6:	8b e0       	ldi	r24, 0x0B	; 11
		}
		break;
    27d8:	08 95       	ret

		case '7':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
    27da:	63 e0       	ldi	r22, 0x03	; 3
			morse.lengthInSymbols = 5;
    27dc:	75 e0       	ldi	r23, 0x05	; 5
			morse.lengthInElements = 13;
    27de:	8d e0       	ldi	r24, 0x0D	; 13
		}
		break;
    27e0:	08 95       	ret

		case '8':
		{
			morse.pattern = 0x07;   /* 0000 0111; */
    27e2:	67 e0       	ldi	r22, 0x07	; 7
			morse.lengthInSymbols = 5;
    27e4:	75 e0       	ldi	r23, 0x05	; 5
			morse.lengthInElements = 15;
    27e6:	8f e0       	ldi	r24, 0x0F	; 15
		}
		break;
    27e8:	08 95       	ret

		case '9':
		{
			morse.pattern = 0x0f;   /* 0000 1111; */
    27ea:	6f e0       	ldi	r22, 0x0F	; 15
			morse.lengthInSymbols = 5;
    27ec:	75 e0       	ldi	r23, 0x05	; 5
			morse.lengthInElements = 17;
    27ee:	81 e1       	ldi	r24, 0x11	; 17
		}
		break;
    27f0:	08 95       	ret

		case '.':
		{
			morse.pattern = 0x2a;   /* 0010 1010; */
    27f2:	6a e2       	ldi	r22, 0x2A	; 42
			morse.lengthInSymbols = 6;
    27f4:	76 e0       	ldi	r23, 0x06	; 6
			morse.lengthInElements = 17;
    27f6:	81 e1       	ldi	r24, 0x11	; 17
		}
		break;
    27f8:	08 95       	ret

		case ',':
		{
			morse.pattern = 0x33;   /* 0011 0011; */
    27fa:	63 e3       	ldi	r22, 0x33	; 51
			morse.lengthInSymbols = 6;
    27fc:	76 e0       	ldi	r23, 0x06	; 6
			morse.lengthInElements = 19;
    27fe:	83 e1       	ldi	r24, 0x13	; 19
		}
		break;
    2800:	08 95       	ret

		case '?':
		{
			morse.pattern = 0x0c;   /* 0000 1100; */
    2802:	6c e0       	ldi	r22, 0x0C	; 12
			morse.lengthInSymbols = 6;
    2804:	76 e0       	ldi	r23, 0x06	; 6
			morse.lengthInElements = 15;
    2806:	8f e0       	ldi	r24, 0x0F	; 15
		}
		break;
    2808:	08 95       	ret

		case '\'':
		{
			morse.pattern = 0x1e;   /* 0001 1110; */
    280a:	6e e1       	ldi	r22, 0x1E	; 30
			morse.lengthInSymbols = 6;
    280c:	76 e0       	ldi	r23, 0x06	; 6
			morse.lengthInElements = 19;
    280e:	83 e1       	ldi	r24, 0x13	; 19
		}
		break;
    2810:	08 95       	ret

		case '!':
		{
			morse.pattern = 0x35;   /* 0011 0101; */
    2812:	65 e3       	ldi	r22, 0x35	; 53
			morse.lengthInSymbols = 6;
    2814:	76 e0       	ldi	r23, 0x06	; 6
			morse.lengthInElements = 19;
    2816:	83 e1       	ldi	r24, 0x13	; 19
		}
		break;
    2818:	08 95       	ret

		case '/':
		{
			morse.pattern = 0x09;   /* 0000 1001; */
    281a:	69 e0       	ldi	r22, 0x09	; 9
			morse.lengthInSymbols = 5;
    281c:	75 e0       	ldi	r23, 0x05	; 5
			morse.lengthInElements = 13;
    281e:	8d e0       	ldi	r24, 0x0D	; 13
		}
		break;
    2820:	08 95       	ret

		case '(':
		{
			morse.pattern = 0x0d;   /* 0000 1101; */
    2822:	6d e0       	ldi	r22, 0x0D	; 13
			morse.lengthInSymbols = 5;
    2824:	75 e0       	ldi	r23, 0x05	; 5
			morse.lengthInElements = 15;
    2826:	8f e0       	ldi	r24, 0x0F	; 15
		}
		break;
    2828:	08 95       	ret

		case ')':
		{
			morse.pattern = 0x2d;   /* 0010 1101; */
    282a:	6d e2       	ldi	r22, 0x2D	; 45
			morse.lengthInSymbols = 6;
    282c:	76 e0       	ldi	r23, 0x06	; 6
			morse.lengthInElements = 19;
    282e:	83 e1       	ldi	r24, 0x13	; 19
		}
		break;
    2830:	08 95       	ret

		case '&':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
    2832:	62 e0       	ldi	r22, 0x02	; 2
			morse.lengthInSymbols = 5;
    2834:	75 e0       	ldi	r23, 0x05	; 5
			morse.lengthInElements = 11;
    2836:	8b e0       	ldi	r24, 0x0B	; 11
		}
		break;
    2838:	08 95       	ret

		case ':':
		{
			morse.pattern = 0x07;   /* 0000 0111; */
    283a:	67 e0       	ldi	r22, 0x07	; 7
			morse.lengthInSymbols = 6;
    283c:	76 e0       	ldi	r23, 0x06	; 6
			morse.lengthInElements = 17;
    283e:	81 e1       	ldi	r24, 0x11	; 17
		}
		break;
    2840:	08 95       	ret

		case ';':
		{
			morse.pattern = 0x15;   /* 0001 0101; */
    2842:	65 e1       	ldi	r22, 0x15	; 21
			morse.lengthInSymbols = 6;
    2844:	76 e0       	ldi	r23, 0x06	; 6
			morse.lengthInElements = 12;
    2846:	8c e0       	ldi	r24, 0x0C	; 12
		}
		break;
    2848:	08 95       	ret

		case '=':
		{
			morse.pattern = 0x11;   /* 0001 0001; */
    284a:	61 e1       	ldi	r22, 0x11	; 17
			morse.lengthInSymbols = 5;
    284c:	75 e0       	ldi	r23, 0x05	; 5
			morse.lengthInElements = 13;
    284e:	8d e0       	ldi	r24, 0x0D	; 13
		}
		break;
    2850:	08 95       	ret

		case '+':
		{
			morse.pattern = 0x0a;   /* 0000 1010; */
    2852:	6a e0       	ldi	r22, 0x0A	; 10
			morse.lengthInSymbols = 5;
    2854:	75 e0       	ldi	r23, 0x05	; 5
			morse.lengthInElements = 13;
    2856:	8d e0       	ldi	r24, 0x0D	; 13
		}
		break;
    2858:	08 95       	ret

		case '-':
		{
			morse.pattern = 0x21;   /* 0010 0001; */
    285a:	61 e2       	ldi	r22, 0x21	; 33
			morse.lengthInSymbols = 6;
    285c:	76 e0       	ldi	r23, 0x06	; 6
			morse.lengthInElements = 15;
    285e:	8f e0       	ldi	r24, 0x0F	; 15
		}
		break;
    2860:	08 95       	ret

		case '_':
		{
			morse.pattern = 0x2c;   /* 0010 1100; */
    2862:	6c e2       	ldi	r22, 0x2C	; 44
			morse.lengthInSymbols = 6;
    2864:	76 e0       	ldi	r23, 0x06	; 6
			morse.lengthInElements = 17;
    2866:	81 e1       	ldi	r24, 0x11	; 17
		}
		break;
    2868:	08 95       	ret

		case '"':
		{
			morse.pattern = 0x12;   /* 0001 0010; */
    286a:	62 e1       	ldi	r22, 0x12	; 18
			morse.lengthInSymbols = 6;
    286c:	76 e0       	ldi	r23, 0x06	; 6
			morse.lengthInElements = 15;
    286e:	8f e0       	ldi	r24, 0x0F	; 15
		}
		break;
    2870:	08 95       	ret

		case '$':
		{
			morse.pattern = 0x48;   /* 0100 1000; */
    2872:	68 e4       	ldi	r22, 0x48	; 72
			morse.lengthInSymbols = 7;
    2874:	77 e0       	ldi	r23, 0x07	; 7
			morse.lengthInElements = 17;
    2876:	81 e1       	ldi	r24, 0x11	; 17
		}
		break;
    2878:	08 95       	ret

		case '@':
		{
			morse.pattern = 0x16;   /* 0001 0110; */
    287a:	66 e1       	ldi	r22, 0x16	; 22
			morse.lengthInSymbols = 6;
    287c:	76 e0       	ldi	r23, 0x06	; 6
			morse.lengthInElements = 17;
    287e:	81 e1       	ldi	r24, 0x11	; 17
		}
		break;
    2880:	08 95       	ret

		case '|':                       /* inter-word space */
		{ morse.pattern = 0xff;         /* 1000 0000; */
    2882:	6f ef       	ldi	r22, 0xFF	; 255
		  morse.lengthInSymbols = 7;
    2884:	77 e0       	ldi	r23, 0x07	; 7
		  morse.lengthInElements = 4;   /* adjusted by -3 to account for inter-character space */
    2886:	84 e0       	ldi	r24, 0x04	; 4
		}
		break;
    2888:	08 95       	ret

		case ' ':                       /* inter-word space */
		{ morse.pattern = 0xfe;         /* 1000 0000; */
    288a:	6e ef       	ldi	r22, 0xFE	; 254
		  morse.lengthInSymbols = 7;
    288c:	77 e0       	ldi	r23, 0x07	; 7
		  morse.lengthInElements = 7;   /* 4 + 3 (character space) = 7 */
    288e:	87 e0       	ldi	r24, 0x07	; 7
		}
		break;
    2890:	08 95       	ret

		case '<':                       /* long keydown */
		{
			morse.pattern = 0x1f;       /* 0001 1111; */
    2892:	6f e1       	ldi	r22, 0x1F	; 31
			morse.lengthInSymbols = 5;
    2894:	75 e0       	ldi	r23, 0x05	; 5
			morse.lengthInElements = 19;
    2896:	83 e1       	ldi	r24, 0x13	; 19
		}
		break;
    2898:	08 95       	ret

		default:
		{
			morse.pattern = 0x0000; /* 0000 0000; */
    289a:	60 e0       	ldi	r22, 0x00	; 0
			morse.lengthInSymbols = 0;
    289c:	70 e0       	ldi	r23, 0x00	; 0
			morse.lengthInElements = 0;
    289e:	80 e0       	ldi	r24, 0x00	; 0
		}
		break;
	}

	return( morse);
}
    28a0:	08 95       	ret

000028a2 <_Z9makeMorsePcPhS0_>:
 *  Call this function with a NULL argument at intervals of 1 element of time to generate Morse code.
 *  Once loaded with a string each call to this function returns a BOOL indicating whether a CW carrier should be sent
 *  Pass in a pointer to a BOOL in the second and third arguments:
 */
BOOL makeMorse(char* s, BOOL* repeating, BOOL* finished)
{
    28a2:	cf 93       	push	r28
    28a4:	df 93       	push	r29
    28a6:	ea 01       	movw	r28, r20
	static uint8_t addedSpace;      /* adds additional time to make an inter-character space */
	static BOOL completedString = FALSE;
	static BOOL carrierOn = FALSE;
	static BOOL holdKeyDown = FALSE;

	if(s)   /* load a new NULL-terminated string to send */
    28a8:	00 97       	sbiw	r24, 0x00	; 0
    28aa:	b1 f1       	breq	.+108    	; 0x2918 <_Z9makeMorsePcPhS0_+0x76>
	{
		holdKeyDown = FALSE;
    28ac:	10 92 f1 42 	sts	0x42F1, r1	; 0x8042f1 <_ZZ9makeMorsePcPhS0_E11holdKeyDown>

		if(repeating)
    28b0:	61 15       	cp	r22, r1
    28b2:	71 05       	cpc	r23, r1
    28b4:	21 f0       	breq	.+8      	; 0x28be <_Z9makeMorsePcPhS0_+0x1c>
		{
			repeat = *repeating;
    28b6:	db 01       	movw	r26, r22
    28b8:	2c 91       	ld	r18, X
    28ba:	20 93 21 40 	sts	0x4021, r18	; 0x804021 <_ZZ9makeMorsePcPhS0_E6repeat>
		}

		if(*s)
    28be:	fc 01       	movw	r30, r24
    28c0:	20 81       	ld	r18, Z
    28c2:	22 23       	and	r18, r18
    28c4:	d9 f0       	breq	.+54     	; 0x28fc <_Z9makeMorsePcPhS0_+0x5a>
		{
			str = s;
    28c6:	80 93 ef 42 	sts	0x42EF, r24	; 0x8042ef <_ZZ9makeMorsePcPhS0_E3str>
    28ca:	90 93 f0 42 	sts	0x42F0, r25	; 0x8042f0 <_ZZ9makeMorsePcPhS0_E3str+0x1>
			c = ' ';
    28ce:	80 e2       	ldi	r24, 0x20	; 32
    28d0:	80 93 20 40 	sts	0x4020, r24	; 0x804020 <_ZZ9makeMorsePcPhS0_E1c>
			morseInProgress = getMorseChar(*str);
    28d4:	82 2f       	mov	r24, r18
    28d6:	0e 94 5e 13 	call	0x26bc	; 0x26bc <_Z12getMorseCharc>
    28da:	60 93 ec 42 	sts	0x42EC, r22	; 0x8042ec <_ZZ9makeMorsePcPhS0_E15morseInProgress>
    28de:	70 93 ed 42 	sts	0x42ED, r23	; 0x8042ed <_ZZ9makeMorsePcPhS0_E15morseInProgress+0x1>
    28e2:	80 93 ee 42 	sts	0x42EE, r24	; 0x8042ee <_ZZ9makeMorsePcPhS0_E15morseInProgress+0x2>
			charIndex = 0;
    28e6:	10 92 eb 42 	sts	0x42EB, r1	; 0x8042eb <_ZZ9makeMorsePcPhS0_E9charIndex>
			symbolIndex = 0;
    28ea:	10 92 ea 42 	sts	0x42EA, r1	; 0x8042ea <_ZZ9makeMorsePcPhS0_E11symbolIndex>
			elementIndex = 0;
    28ee:	10 92 e9 42 	sts	0x42E9, r1	; 0x8042e9 <_ZZ9makeMorsePcPhS0_E12elementIndex>
			addedSpace = 0;
    28f2:	10 92 e8 42 	sts	0x42E8, r1	; 0x8042e8 <_ZZ9makeMorsePcPhS0_E10addedSpace>
			completedString = FALSE;
    28f6:	10 92 e7 42 	sts	0x42E7, r1	; 0x8042e7 <_ZZ9makeMorsePcPhS0_E15completedString>
    28fa:	0a c0       	rjmp	.+20     	; 0x2910 <_Z9makeMorsePcPhS0_+0x6e>
		}
		else    /* a zero-length string shuts down makeMorse */
		{
			str = NULL;
    28fc:	10 92 ef 42 	sts	0x42EF, r1	; 0x8042ef <_ZZ9makeMorsePcPhS0_E3str>
    2900:	10 92 f0 42 	sts	0x42F0, r1	; 0x8042f0 <_ZZ9makeMorsePcPhS0_E3str+0x1>
			completedString = TRUE;
    2904:	81 e0       	ldi	r24, 0x01	; 1
    2906:	80 93 e7 42 	sts	0x42E7, r24	; 0x8042e7 <_ZZ9makeMorsePcPhS0_E15completedString>
			if(finished)
    290a:	20 97       	sbiw	r28, 0x00	; 0
    290c:	09 f0       	breq	.+2      	; 0x2910 <_Z9makeMorsePcPhS0_+0x6e>
			{
				*finished = TRUE;
    290e:	88 83       	st	Y, r24
			}
		}

		carrierOn = OFF;
    2910:	10 92 e6 42 	sts	0x42E6, r1	; 0x8042e6 <_ZZ9makeMorsePcPhS0_E9carrierOn>
		return( OFF);
    2914:	80 e0       	ldi	r24, 0x00	; 0
    2916:	bb c0       	rjmp	.+374    	; 0x2a8e <_Z9makeMorsePcPhS0_+0x1ec>
	}
	else if(str)
    2918:	e0 91 ef 42 	lds	r30, 0x42EF	; 0x8042ef <_ZZ9makeMorsePcPhS0_E3str>
    291c:	f0 91 f0 42 	lds	r31, 0x42F0	; 0x8042f0 <_ZZ9makeMorsePcPhS0_E3str+0x1>
    2920:	30 97       	sbiw	r30, 0x00	; 0
    2922:	09 f4       	brne	.+2      	; 0x2926 <_Z9makeMorsePcPhS0_+0x84>
    2924:	a5 c0       	rjmp	.+330    	; 0x2a70 <_Z9makeMorsePcPhS0_+0x1ce>
	{
		if(repeating)
    2926:	61 15       	cp	r22, r1
    2928:	71 05       	cpc	r23, r1
    292a:	21 f0       	breq	.+8      	; 0x2934 <_Z9makeMorsePcPhS0_+0x92>
		{
			*repeating = repeat;
    292c:	80 91 21 40 	lds	r24, 0x4021	; 0x804021 <_ZZ9makeMorsePcPhS0_E6repeat>
    2930:	db 01       	movw	r26, r22
    2932:	8c 93       	st	X, r24
		}

		if(completedString)
    2934:	80 91 e7 42 	lds	r24, 0x42E7	; 0x8042e7 <_ZZ9makeMorsePcPhS0_E15completedString>
    2938:	88 23       	and	r24, r24
    293a:	49 f0       	breq	.+18     	; 0x294e <_Z9makeMorsePcPhS0_+0xac>
		{
			if(finished)
    293c:	20 97       	sbiw	r28, 0x00	; 0
    293e:	09 f4       	brne	.+2      	; 0x2942 <_Z9makeMorsePcPhS0_+0xa0>
    2940:	a3 c0       	rjmp	.+326    	; 0x2a88 <_Z9makeMorsePcPhS0_+0x1e6>
			{
				*finished = TRUE;
    2942:	81 e0       	ldi	r24, 0x01	; 1
    2944:	88 83       	st	Y, r24
				holdKeyDown = FALSE;
    2946:	10 92 f1 42 	sts	0x42F1, r1	; 0x8042f1 <_ZZ9makeMorsePcPhS0_E11holdKeyDown>
			}
			return( OFF);
    294a:	80 e0       	ldi	r24, 0x00	; 0
    294c:	a0 c0       	rjmp	.+320    	; 0x2a8e <_Z9makeMorsePcPhS0_+0x1ec>
		}

		if(elementIndex)
    294e:	80 91 e9 42 	lds	r24, 0x42E9	; 0x8042e9 <_ZZ9makeMorsePcPhS0_E12elementIndex>
    2952:	88 23       	and	r24, r24
    2954:	21 f0       	breq	.+8      	; 0x295e <_Z9makeMorsePcPhS0_+0xbc>
		{
			elementIndex--;
    2956:	81 50       	subi	r24, 0x01	; 1
    2958:	80 93 e9 42 	sts	0x42E9, r24	; 0x8042e9 <_ZZ9makeMorsePcPhS0_E12elementIndex>
    295c:	7f c0       	rjmp	.+254    	; 0x2a5c <_Z9makeMorsePcPhS0_+0x1ba>
		}
		else if(carrierOn && !holdKeyDown)  /* carrier is on, so turn it off and wait appropriate amount of space */
    295e:	80 91 e6 42 	lds	r24, 0x42E6	; 0x8042e6 <_ZZ9makeMorsePcPhS0_E9carrierOn>
    2962:	88 23       	and	r24, r24
    2964:	81 f0       	breq	.+32     	; 0x2986 <_Z9makeMorsePcPhS0_+0xe4>
    2966:	80 91 f1 42 	lds	r24, 0x42F1	; 0x8042f1 <_ZZ9makeMorsePcPhS0_E11holdKeyDown>
    296a:	81 11       	cpse	r24, r1
    296c:	0c c0       	rjmp	.+24     	; 0x2986 <_Z9makeMorsePcPhS0_+0xe4>
		{
			carrierOn = FALSE;
    296e:	10 92 e6 42 	sts	0x42E6, r1	; 0x8042e6 <_ZZ9makeMorsePcPhS0_E9carrierOn>
			/* wait one element = inter-symbol space */
			if(addedSpace)
    2972:	80 91 e8 42 	lds	r24, 0x42E8	; 0x8042e8 <_ZZ9makeMorsePcPhS0_E10addedSpace>
    2976:	88 23       	and	r24, r24
    2978:	09 f4       	brne	.+2      	; 0x297c <_Z9makeMorsePcPhS0_+0xda>
    297a:	70 c0       	rjmp	.+224    	; 0x2a5c <_Z9makeMorsePcPhS0_+0x1ba>
			{
				elementIndex = addedSpace;
    297c:	80 93 e9 42 	sts	0x42E9, r24	; 0x8042e9 <_ZZ9makeMorsePcPhS0_E12elementIndex>
				addedSpace = 0;
    2980:	10 92 e8 42 	sts	0x42E8, r1	; 0x8042e8 <_ZZ9makeMorsePcPhS0_E10addedSpace>
    2984:	6b c0       	rjmp	.+214    	; 0x2a5c <_Z9makeMorsePcPhS0_+0x1ba>
			}
			/* wait inter-character space */
		}
		else    /* carrier is off, so turn it on and get next symbol */
		{
			if(symbolIndex >= morseInProgress.lengthInSymbols)
    2986:	90 91 ed 42 	lds	r25, 0x42ED	; 0x8042ed <_ZZ9makeMorsePcPhS0_E15morseInProgress+0x1>
    298a:	80 91 ea 42 	lds	r24, 0x42EA	; 0x8042ea <_ZZ9makeMorsePcPhS0_E11symbolIndex>
    298e:	89 17       	cp	r24, r25
    2990:	90 f1       	brcs	.+100    	; 0x29f6 <_Z9makeMorsePcPhS0_+0x154>
			{
				c = (*(str + ++charIndex));
    2992:	80 91 eb 42 	lds	r24, 0x42EB	; 0x8042eb <_ZZ9makeMorsePcPhS0_E9charIndex>
    2996:	8f 5f       	subi	r24, 0xFF	; 255
    2998:	80 93 eb 42 	sts	0x42EB, r24	; 0x8042eb <_ZZ9makeMorsePcPhS0_E9charIndex>
    299c:	df 01       	movw	r26, r30
    299e:	a8 0f       	add	r26, r24
    29a0:	b1 1d       	adc	r27, r1
    29a2:	8c 91       	ld	r24, X
    29a4:	80 93 20 40 	sts	0x4020, r24	; 0x804020 <_ZZ9makeMorsePcPhS0_E1c>

				if(!c)  /* wrap to beginning of text */
    29a8:	81 11       	cpse	r24, r1
    29aa:	19 c0       	rjmp	.+50     	; 0x29de <_Z9makeMorsePcPhS0_+0x13c>
				{
					if(repeat)
    29ac:	80 91 21 40 	lds	r24, 0x4021	; 0x804021 <_ZZ9makeMorsePcPhS0_E6repeat>
    29b0:	88 23       	and	r24, r24
    29b2:	31 f0       	breq	.+12     	; 0x29c0 <_Z9makeMorsePcPhS0_+0x11e>
					{
						c = *str;
    29b4:	80 81       	ld	r24, Z
    29b6:	80 93 20 40 	sts	0x4020, r24	; 0x804020 <_ZZ9makeMorsePcPhS0_E1c>
						charIndex = 0;
    29ba:	10 92 eb 42 	sts	0x42EB, r1	; 0x8042eb <_ZZ9makeMorsePcPhS0_E9charIndex>
    29be:	0f c0       	rjmp	.+30     	; 0x29de <_Z9makeMorsePcPhS0_+0x13c>
					}
					else
					{
						str = NULL;
    29c0:	10 92 ef 42 	sts	0x42EF, r1	; 0x8042ef <_ZZ9makeMorsePcPhS0_E3str>
    29c4:	10 92 f0 42 	sts	0x42F0, r1	; 0x8042f0 <_ZZ9makeMorsePcPhS0_E3str+0x1>
						carrierOn = OFF;
    29c8:	10 92 e6 42 	sts	0x42E6, r1	; 0x8042e6 <_ZZ9makeMorsePcPhS0_E9carrierOn>
						completedString = TRUE;
    29cc:	91 e0       	ldi	r25, 0x01	; 1
    29ce:	90 93 e7 42 	sts	0x42E7, r25	; 0x8042e7 <_ZZ9makeMorsePcPhS0_E15completedString>
						if(finished)
    29d2:	20 97       	sbiw	r28, 0x00	; 0
    29d4:	09 f0       	breq	.+2      	; 0x29d8 <_Z9makeMorsePcPhS0_+0x136>
						{
							*finished = TRUE;
    29d6:	98 83       	st	Y, r25
						}
						holdKeyDown = FALSE;
    29d8:	10 92 f1 42 	sts	0x42F1, r1	; 0x8042f1 <_ZZ9makeMorsePcPhS0_E11holdKeyDown>
						return( OFF );
    29dc:	58 c0       	rjmp	.+176    	; 0x2a8e <_Z9makeMorsePcPhS0_+0x1ec>
					}
				}

				morseInProgress = getMorseChar(c);
    29de:	80 91 20 40 	lds	r24, 0x4020	; 0x804020 <_ZZ9makeMorsePcPhS0_E1c>
    29e2:	0e 94 5e 13 	call	0x26bc	; 0x26bc <_Z12getMorseCharc>
    29e6:	60 93 ec 42 	sts	0x42EC, r22	; 0x8042ec <_ZZ9makeMorsePcPhS0_E15morseInProgress>
    29ea:	70 93 ed 42 	sts	0x42ED, r23	; 0x8042ed <_ZZ9makeMorsePcPhS0_E15morseInProgress+0x1>
    29ee:	80 93 ee 42 	sts	0x42EE, r24	; 0x8042ee <_ZZ9makeMorsePcPhS0_E15morseInProgress+0x2>
				symbolIndex = 0;
    29f2:	10 92 ea 42 	sts	0x42EA, r1	; 0x8042ea <_ZZ9makeMorsePcPhS0_E11symbolIndex>
			}

			if(morseInProgress.pattern < INTER_WORD_SPACE)
    29f6:	20 91 ec 42 	lds	r18, 0x42EC	; 0x8042ec <_ZZ9makeMorsePcPhS0_E15morseInProgress>
    29fa:	2d 3f       	cpi	r18, 0xFD	; 253
    29fc:	00 f5       	brcc	.+64     	; 0x2a3e <_Z9makeMorsePcPhS0_+0x19c>
			{
				BOOL isDah = morseInProgress.pattern & (1 << symbolIndex++);
    29fe:	40 91 ea 42 	lds	r20, 0x42EA	; 0x8042ea <_ZZ9makeMorsePcPhS0_E11symbolIndex>
    2a02:	31 e0       	ldi	r19, 0x01	; 1
    2a04:	34 0f       	add	r19, r20
    2a06:	30 93 ea 42 	sts	0x42EA, r19	; 0x8042ea <_ZZ9makeMorsePcPhS0_E11symbolIndex>
    2a0a:	81 e0       	ldi	r24, 0x01	; 1
    2a0c:	90 e0       	ldi	r25, 0x00	; 0
    2a0e:	02 c0       	rjmp	.+4      	; 0x2a14 <_Z9makeMorsePcPhS0_+0x172>
    2a10:	88 0f       	add	r24, r24
    2a12:	99 1f       	adc	r25, r25
    2a14:	4a 95       	dec	r20
    2a16:	e2 f7       	brpl	.-8      	; 0x2a10 <_Z9makeMorsePcPhS0_+0x16e>
    2a18:	82 23       	and	r24, r18

				if(isDah)
    2a1a:	21 f0       	breq	.+8      	; 0x2a24 <_Z9makeMorsePcPhS0_+0x182>
				{
					elementIndex = 2;
    2a1c:	82 e0       	ldi	r24, 0x02	; 2
    2a1e:	80 93 e9 42 	sts	0x42E9, r24	; 0x8042e9 <_ZZ9makeMorsePcPhS0_E12elementIndex>
    2a22:	02 c0       	rjmp	.+4      	; 0x2a28 <_Z9makeMorsePcPhS0_+0x186>
				}
				else
				{
					elementIndex = 0;
    2a24:	10 92 e9 42 	sts	0x42E9, r1	; 0x8042e9 <_ZZ9makeMorsePcPhS0_E12elementIndex>
				}

				carrierOn = TRUE;
    2a28:	81 e0       	ldi	r24, 0x01	; 1
    2a2a:	80 93 e6 42 	sts	0x42E6, r24	; 0x8042e6 <_ZZ9makeMorsePcPhS0_E9carrierOn>

				if(symbolIndex >= morseInProgress.lengthInSymbols)
    2a2e:	80 91 ed 42 	lds	r24, 0x42ED	; 0x8042ed <_ZZ9makeMorsePcPhS0_E15morseInProgress+0x1>
    2a32:	38 17       	cp	r19, r24
    2a34:	98 f0       	brcs	.+38     	; 0x2a5c <_Z9makeMorsePcPhS0_+0x1ba>
				{
					addedSpace = 2;
    2a36:	82 e0       	ldi	r24, 0x02	; 2
    2a38:	80 93 e8 42 	sts	0x42E8, r24	; 0x8042e8 <_ZZ9makeMorsePcPhS0_E10addedSpace>
    2a3c:	0f c0       	rjmp	.+30     	; 0x2a5c <_Z9makeMorsePcPhS0_+0x1ba>
				}
			}
			else
			{
				uint8_t sym = morseInProgress.lengthInSymbols;
    2a3e:	80 91 ed 42 	lds	r24, 0x42ED	; 0x8042ed <_ZZ9makeMorsePcPhS0_E15morseInProgress+0x1>
				symbolIndex = 255;  /* ensure the next character gets read */
    2a42:	9f ef       	ldi	r25, 0xFF	; 255
    2a44:	90 93 ea 42 	sts	0x42EA, r25	; 0x8042ea <_ZZ9makeMorsePcPhS0_E11symbolIndex>
				carrierOn = FALSE;
    2a48:	10 92 e6 42 	sts	0x42E6, r1	; 0x8042e6 <_ZZ9makeMorsePcPhS0_E9carrierOn>
				if(sym >= 4 )
    2a4c:	84 30       	cpi	r24, 0x04	; 4
    2a4e:	20 f0       	brcs	.+8      	; 0x2a58 <_Z9makeMorsePcPhS0_+0x1b6>
				{
					elementIndex = morseInProgress.lengthInSymbols - 4;
    2a50:	84 50       	subi	r24, 0x04	; 4
    2a52:	80 93 e9 42 	sts	0x42E9, r24	; 0x8042e9 <_ZZ9makeMorsePcPhS0_E12elementIndex>
    2a56:	02 c0       	rjmp	.+4      	; 0x2a5c <_Z9makeMorsePcPhS0_+0x1ba>
				}
				else
				{
					elementIndex = 0;
    2a58:	10 92 e9 42 	sts	0x42E9, r1	; 0x8042e9 <_ZZ9makeMorsePcPhS0_E12elementIndex>
				}
			}
		}

		/* Overrides for key on and key off special characters */
		if(c == '<')    /* constant tone */
    2a5c:	80 91 20 40 	lds	r24, 0x4020	; 0x804020 <_ZZ9makeMorsePcPhS0_E1c>
    2a60:	8c 33       	cpi	r24, 0x3C	; 60
    2a62:	21 f4       	brne	.+8      	; 0x2a6c <_Z9makeMorsePcPhS0_+0x1ca>
		{
			holdKeyDown = TRUE;
    2a64:	81 e0       	ldi	r24, 0x01	; 1
    2a66:	80 93 f1 42 	sts	0x42F1, r24	; 0x8042f1 <_ZZ9makeMorsePcPhS0_E11holdKeyDown>
    2a6a:	02 c0       	rjmp	.+4      	; 0x2a70 <_Z9makeMorsePcPhS0_+0x1ce>
		}
		else
		{
			holdKeyDown = FALSE;
    2a6c:	10 92 f1 42 	sts	0x42F1, r1	; 0x8042f1 <_ZZ9makeMorsePcPhS0_E11holdKeyDown>
		}
	}

	if(finished)
    2a70:	20 97       	sbiw	r28, 0x00	; 0
    2a72:	19 f0       	breq	.+6      	; 0x2a7a <_Z9makeMorsePcPhS0_+0x1d8>
	{
		*finished = completedString;
    2a74:	80 91 e7 42 	lds	r24, 0x42E7	; 0x8042e7 <_ZZ9makeMorsePcPhS0_E15completedString>
    2a78:	88 83       	st	Y, r24
	}

	if(holdKeyDown)
    2a7a:	80 91 f1 42 	lds	r24, 0x42F1	; 0x8042f1 <_ZZ9makeMorsePcPhS0_E11holdKeyDown>
    2a7e:	81 11       	cpse	r24, r1
    2a80:	05 c0       	rjmp	.+10     	; 0x2a8c <_Z9makeMorsePcPhS0_+0x1ea>
	{
		return(TRUE);
	}
	else
	{
		return( carrierOn);
    2a82:	80 91 e6 42 	lds	r24, 0x42E6	; 0x8042e6 <_ZZ9makeMorsePcPhS0_E9carrierOn>
    2a86:	03 c0       	rjmp	.+6      	; 0x2a8e <_Z9makeMorsePcPhS0_+0x1ec>
			if(finished)
			{
				*finished = TRUE;
				holdKeyDown = FALSE;
			}
			return( OFF);
    2a88:	80 e0       	ldi	r24, 0x00	; 0
    2a8a:	01 c0       	rjmp	.+2      	; 0x2a8e <_Z9makeMorsePcPhS0_+0x1ec>
		*finished = completedString;
	}

	if(holdKeyDown)
	{
		return(TRUE);
    2a8c:	81 e0       	ldi	r24, 0x01	; 1
	}
	else
	{
		return( carrierOn);
	}
}
    2a8e:	df 91       	pop	r29
    2a90:	cf 91       	pop	r28
    2a92:	08 95       	ret

00002a94 <_Z26timeRequiredToSendStrAtWPMPcj>:
/**
 *  Returns the number of milliseconds required to send the string pointed to by the first argument at the WPM code speed
 *  passed in the second argument.
 */
uint16_t timeRequiredToSendStrAtWPM(char* str, uint16_t spd)
{
    2a94:	cf 92       	push	r12
    2a96:	df 92       	push	r13
    2a98:	ef 92       	push	r14
    2a9a:	ff 92       	push	r15
    2a9c:	1f 93       	push	r17
    2a9e:	cf 93       	push	r28
    2aa0:	df 93       	push	r29
    2aa2:	6c 01       	movw	r12, r24
    2aa4:	7b 01       	movw	r14, r22
	uint8_t elements = 0;
	MorseCharacter m;
	char c;

	for(int i = 0; i < 20; i++)
    2aa6:	c0 e0       	ldi	r28, 0x00	; 0
    2aa8:	d0 e0       	ldi	r29, 0x00	; 0
 *  Returns the number of milliseconds required to send the string pointed to by the first argument at the WPM code speed
 *  passed in the second argument.
 */
uint16_t timeRequiredToSendStrAtWPM(char* str, uint16_t spd)
{
	uint8_t elements = 0;
    2aaa:	10 e0       	ldi	r17, 0x00	; 0
	MorseCharacter m;
	char c;

	for(int i = 0; i < 20; i++)
    2aac:	c4 31       	cpi	r28, 0x14	; 20
    2aae:	d1 05       	cpc	r29, r1
    2ab0:	74 f4       	brge	.+28     	; 0x2ace <_Z26timeRequiredToSendStrAtWPMPcj+0x3a>
	{
		c = str[i];
    2ab2:	f6 01       	movw	r30, r12
    2ab4:	ec 0f       	add	r30, r28
    2ab6:	fd 1f       	adc	r31, r29
    2ab8:	80 81       	ld	r24, Z
		if(!c)
    2aba:	88 23       	and	r24, r24
    2abc:	41 f0       	breq	.+16     	; 0x2ace <_Z26timeRequiredToSendStrAtWPMPcj+0x3a>
		{
			break;
		}
		m = getMorseChar(c);
    2abe:	0e 94 5e 13 	call	0x26bc	; 0x26bc <_Z12getMorseCharc>
		if(m.pattern < INTER_WORD_SPACE)
    2ac2:	6d 3f       	cpi	r22, 0xFD	; 253
    2ac4:	08 f4       	brcc	.+2      	; 0x2ac8 <_Z26timeRequiredToSendStrAtWPMPcj+0x34>
		{
			elements += 3;
    2ac6:	1d 5f       	subi	r17, 0xFD	; 253
		}
		elements += m.lengthInElements;
    2ac8:	18 0f       	add	r17, r24
{
	uint8_t elements = 0;
	MorseCharacter m;
	char c;

	for(int i = 0; i < 20; i++)
    2aca:	21 96       	adiw	r28, 0x01	; 1
    2acc:	ef cf       	rjmp	.-34     	; 0x2aac <_Z26timeRequiredToSendStrAtWPMPcj+0x18>
			elements += 3;
		}
		elements += m.lengthInElements;
	}

	return(elements * WPM_TO_MS_PER_DOT(spd));
    2ace:	80 eb       	ldi	r24, 0xB0	; 176
    2ad0:	94 e0       	ldi	r25, 0x04	; 4
    2ad2:	b7 01       	movw	r22, r14
    2ad4:	0e 94 cc 20 	call	0x4198	; 0x4198 <__udivmodhi4>
}
    2ad8:	16 9f       	mul	r17, r22
    2ada:	c0 01       	movw	r24, r0
    2adc:	17 9f       	mul	r17, r23
    2ade:	90 0d       	add	r25, r0
    2ae0:	11 24       	eor	r1, r1
    2ae2:	df 91       	pop	r29
    2ae4:	cf 91       	pop	r28
    2ae6:	1f 91       	pop	r17
    2ae8:	ff 90       	pop	r15
    2aea:	ef 90       	pop	r14
    2aec:	df 90       	pop	r13
    2aee:	cf 90       	pop	r12
    2af0:	08 95       	ret

00002af2 <protected_write_io>:
	PUBLIC_FUNCTION(protected_write_io)

#if defined(__GNUC__)
  
#ifdef RAMPZ
	out     _SFR_IO_ADDR(RAMPZ), r1         // Clear bits 23:16 of Z
    2af2:	1b be       	out	0x3b, r1	; 59
#endif
	movw    r30, r24                // Load addr into Z
    2af4:	fc 01       	movw	r30, r24
	out     CCP, r22                // Start CCP handshake
    2af6:	64 bf       	out	0x34, r22	; 52
	st      Z, r20                  // Write value to I/O register
    2af8:	40 83       	st	Z, r20
	ret                             // Return to caller
    2afa:	08 95       	ret

00002afc <_Z21si5351_get_correctionv>:
		data[0] = SI5351_CLK0_CTRL + (uint8_t)clk;
		data[1] = reg_val;
		if(si5351_write_bulk(data, 2)) return ERROR_CODE_CLKGEN_NONRESPONSIVE;

		return ERROR_CODE_NO_ERROR;
	}
    2afc:	60 91 03 43 	lds	r22, 0x4303	; 0x804303 <_ZL23g_si5351_ref_correction>
    2b00:	70 91 04 43 	lds	r23, 0x4304	; 0x804304 <_ZL23g_si5351_ref_correction+0x1>
    2b04:	80 91 05 43 	lds	r24, 0x4305	; 0x804305 <_ZL23g_si5351_ref_correction+0x2>
    2b08:	90 91 06 43 	lds	r25, 0x4306	; 0x804306 <_ZL23g_si5351_ref_correction+0x3>
    2b0c:	08 95       	ret

00002b0e <_Z13reduce_by_gcdPmS_>:
    2b0e:	4f 92       	push	r4
    2b10:	5f 92       	push	r5
    2b12:	6f 92       	push	r6
    2b14:	7f 92       	push	r7
    2b16:	8f 92       	push	r8
    2b18:	9f 92       	push	r9
    2b1a:	af 92       	push	r10
    2b1c:	bf 92       	push	r11
    2b1e:	cf 92       	push	r12
    2b20:	df 92       	push	r13
    2b22:	ef 92       	push	r14
    2b24:	ff 92       	push	r15
    2b26:	0f 93       	push	r16
    2b28:	1f 93       	push	r17
    2b2a:	cf 93       	push	r28
    2b2c:	df 93       	push	r29
    2b2e:	8c 01       	movw	r16, r24
    2b30:	eb 01       	movw	r28, r22
    2b32:	fc 01       	movw	r30, r24
    2b34:	40 80       	ld	r4, Z
    2b36:	51 80       	ldd	r5, Z+1	; 0x01
    2b38:	62 80       	ldd	r6, Z+2	; 0x02
    2b3a:	73 80       	ldd	r7, Z+3	; 0x03
    2b3c:	88 80       	ld	r8, Y
    2b3e:	99 80       	ldd	r9, Y+1	; 0x01
    2b40:	aa 80       	ldd	r10, Y+2	; 0x02
    2b42:	bb 80       	ldd	r11, Y+3	; 0x03
    2b44:	41 14       	cp	r4, r1
    2b46:	51 04       	cpc	r5, r1
    2b48:	61 04       	cpc	r6, r1
    2b4a:	71 04       	cpc	r7, r1
    2b4c:	e1 f1       	breq	.+120    	; 0x2bc6 <_Z13reduce_by_gcdPmS_+0xb8>
    2b4e:	81 14       	cp	r8, r1
    2b50:	91 04       	cpc	r9, r1
    2b52:	a1 04       	cpc	r10, r1
    2b54:	b1 04       	cpc	r11, r1
    2b56:	b9 f1       	breq	.+110    	; 0x2bc6 <_Z13reduce_by_gcdPmS_+0xb8>
    2b58:	c3 01       	movw	r24, r6
    2b5a:	b2 01       	movw	r22, r4
    2b5c:	a5 01       	movw	r20, r10
    2b5e:	94 01       	movw	r18, r8
    2b60:	0e 94 f4 20 	call	0x41e8	; 0x41e8 <__udivmodsi4>
    2b64:	6b 01       	movw	r12, r22
    2b66:	7c 01       	movw	r14, r24
    2b68:	c1 14       	cp	r12, r1
    2b6a:	d1 04       	cpc	r13, r1
    2b6c:	e1 04       	cpc	r14, r1
    2b6e:	f1 04       	cpc	r15, r1
    2b70:	69 f0       	breq	.+26     	; 0x2b8c <_Z13reduce_by_gcdPmS_+0x7e>
    2b72:	c5 01       	movw	r24, r10
    2b74:	b4 01       	movw	r22, r8
    2b76:	a7 01       	movw	r20, r14
    2b78:	96 01       	movw	r18, r12
    2b7a:	0e 94 f4 20 	call	0x41e8	; 0x41e8 <__udivmodsi4>
    2b7e:	46 01       	movw	r8, r12
    2b80:	57 01       	movw	r10, r14
    2b82:	c6 2e       	mov	r12, r22
    2b84:	d7 2e       	mov	r13, r23
    2b86:	e8 2e       	mov	r14, r24
    2b88:	f9 2e       	mov	r15, r25
    2b8a:	ee cf       	rjmp	.-36     	; 0x2b68 <_Z13reduce_by_gcdPmS_+0x5a>
    2b8c:	f2 e0       	ldi	r31, 0x02	; 2
    2b8e:	8f 16       	cp	r8, r31
    2b90:	91 04       	cpc	r9, r1
    2b92:	a1 04       	cpc	r10, r1
    2b94:	b1 04       	cpc	r11, r1
    2b96:	b8 f0       	brcs	.+46     	; 0x2bc6 <_Z13reduce_by_gcdPmS_+0xb8>
    2b98:	c3 01       	movw	r24, r6
    2b9a:	b2 01       	movw	r22, r4
    2b9c:	a5 01       	movw	r20, r10
    2b9e:	94 01       	movw	r18, r8
    2ba0:	0e 94 f4 20 	call	0x41e8	; 0x41e8 <__udivmodsi4>
    2ba4:	f8 01       	movw	r30, r16
    2ba6:	20 83       	st	Z, r18
    2ba8:	31 83       	std	Z+1, r19	; 0x01
    2baa:	42 83       	std	Z+2, r20	; 0x02
    2bac:	53 83       	std	Z+3, r21	; 0x03
    2bae:	68 81       	ld	r22, Y
    2bb0:	79 81       	ldd	r23, Y+1	; 0x01
    2bb2:	8a 81       	ldd	r24, Y+2	; 0x02
    2bb4:	9b 81       	ldd	r25, Y+3	; 0x03
    2bb6:	a5 01       	movw	r20, r10
    2bb8:	94 01       	movw	r18, r8
    2bba:	0e 94 f4 20 	call	0x41e8	; 0x41e8 <__udivmodsi4>
    2bbe:	28 83       	st	Y, r18
    2bc0:	39 83       	std	Y+1, r19	; 0x01
    2bc2:	4a 83       	std	Y+2, r20	; 0x02
    2bc4:	5b 83       	std	Y+3, r21	; 0x03
    2bc6:	df 91       	pop	r29
    2bc8:	cf 91       	pop	r28
    2bca:	1f 91       	pop	r17
    2bcc:	0f 91       	pop	r16
    2bce:	ff 90       	pop	r15
    2bd0:	ef 90       	pop	r14
    2bd2:	df 90       	pop	r13
    2bd4:	cf 90       	pop	r12
    2bd6:	bf 90       	pop	r11
    2bd8:	af 90       	pop	r10
    2bda:	9f 90       	pop	r9
    2bdc:	8f 90       	pop	r8
    2bde:	7f 90       	pop	r7
    2be0:	6f 90       	pop	r6
    2be2:	5f 90       	pop	r5
    2be4:	4f 90       	pop	r4
    2be6:	08 95       	ret

00002be8 <_Z8pll_calcmP13u_si5351_regs>:
    2be8:	4f 92       	push	r4
    2bea:	5f 92       	push	r5
    2bec:	6f 92       	push	r6
    2bee:	7f 92       	push	r7
    2bf0:	8f 92       	push	r8
    2bf2:	9f 92       	push	r9
    2bf4:	af 92       	push	r10
    2bf6:	bf 92       	push	r11
    2bf8:	cf 92       	push	r12
    2bfa:	df 92       	push	r13
    2bfc:	ef 92       	push	r14
    2bfe:	ff 92       	push	r15
    2c00:	0f 93       	push	r16
    2c02:	1f 93       	push	r17
    2c04:	cf 93       	push	r28
    2c06:	df 93       	push	r29
    2c08:	cd b7       	in	r28, 0x3d	; 61
    2c0a:	de b7       	in	r29, 0x3e	; 62
    2c0c:	28 97       	sbiw	r28, 0x08	; 8
    2c0e:	cd bf       	out	0x3d, r28	; 61
    2c10:	de bf       	out	0x3e, r29	; 62
    2c12:	8a 01       	movw	r16, r20
    2c14:	80 90 22 40 	lds	r8, 0x4022	; 0x804022 <_ZL9xtal_freq>
    2c18:	90 90 23 40 	lds	r9, 0x4023	; 0x804023 <_ZL9xtal_freq+0x1>
    2c1c:	a0 90 24 40 	lds	r10, 0x4024	; 0x804024 <_ZL9xtal_freq+0x2>
    2c20:	b0 90 25 40 	lds	r11, 0x4025	; 0x804025 <_ZL9xtal_freq+0x3>
    2c24:	a5 01       	movw	r20, r10
    2c26:	94 01       	movw	r18, r8
    2c28:	0e 94 f4 20 	call	0x41e8	; 0x41e8 <__udivmodsi4>
    2c2c:	69 01       	movw	r12, r18
    2c2e:	7a 01       	movw	r14, r20
    2c30:	69 83       	std	Y+1, r22	; 0x01
    2c32:	7a 83       	std	Y+2, r23	; 0x02
    2c34:	8b 83       	std	Y+3, r24	; 0x03
    2c36:	9c 83       	std	Y+4, r25	; 0x04
    2c38:	8d 82       	std	Y+5, r8	; 0x05
    2c3a:	9e 82       	std	Y+6, r9	; 0x06
    2c3c:	af 82       	std	Y+7, r10	; 0x07
    2c3e:	b8 86       	std	Y+8, r11	; 0x08
    2c40:	be 01       	movw	r22, r28
    2c42:	6b 5f       	subi	r22, 0xFB	; 251
    2c44:	7f 4f       	sbci	r23, 0xFF	; 255
    2c46:	ce 01       	movw	r24, r28
    2c48:	01 96       	adiw	r24, 0x01	; 1
    2c4a:	0e 94 87 15 	call	0x2b0e	; 0x2b0e <_Z13reduce_by_gcdPmS_>
    2c4e:	89 80       	ldd	r8, Y+1	; 0x01
    2c50:	9a 80       	ldd	r9, Y+2	; 0x02
    2c52:	ab 80       	ldd	r10, Y+3	; 0x03
    2c54:	bc 80       	ldd	r11, Y+4	; 0x04
    2c56:	88 0c       	add	r8, r8
    2c58:	99 1c       	adc	r9, r9
    2c5a:	aa 1c       	adc	r10, r10
    2c5c:	bb 1c       	adc	r11, r11
    2c5e:	88 0c       	add	r8, r8
    2c60:	99 1c       	adc	r9, r9
    2c62:	aa 1c       	adc	r10, r10
    2c64:	bb 1c       	adc	r11, r11
    2c66:	88 0c       	add	r8, r8
    2c68:	99 1c       	adc	r9, r9
    2c6a:	aa 1c       	adc	r10, r10
    2c6c:	bb 1c       	adc	r11, r11
    2c6e:	88 0c       	add	r8, r8
    2c70:	99 1c       	adc	r9, r9
    2c72:	aa 1c       	adc	r10, r10
    2c74:	bb 1c       	adc	r11, r11
    2c76:	88 0c       	add	r8, r8
    2c78:	99 1c       	adc	r9, r9
    2c7a:	aa 1c       	adc	r10, r10
    2c7c:	bb 1c       	adc	r11, r11
    2c7e:	88 0c       	add	r8, r8
    2c80:	99 1c       	adc	r9, r9
    2c82:	aa 1c       	adc	r10, r10
    2c84:	bb 1c       	adc	r11, r11
    2c86:	88 0c       	add	r8, r8
    2c88:	99 1c       	adc	r9, r9
    2c8a:	aa 1c       	adc	r10, r10
    2c8c:	bb 1c       	adc	r11, r11
    2c8e:	4d 80       	ldd	r4, Y+5	; 0x05
    2c90:	5e 80       	ldd	r5, Y+6	; 0x06
    2c92:	6f 80       	ldd	r6, Y+7	; 0x07
    2c94:	78 84       	ldd	r7, Y+8	; 0x08
    2c96:	c5 01       	movw	r24, r10
    2c98:	b4 01       	movw	r22, r8
    2c9a:	a3 01       	movw	r20, r6
    2c9c:	92 01       	movw	r18, r4
    2c9e:	0e 94 f4 20 	call	0x41e8	; 0x41e8 <__udivmodsi4>
    2ca2:	cc 0c       	add	r12, r12
    2ca4:	dd 1c       	adc	r13, r13
    2ca6:	ee 1c       	adc	r14, r14
    2ca8:	ff 1c       	adc	r15, r15
    2caa:	cc 0c       	add	r12, r12
    2cac:	dd 1c       	adc	r13, r13
    2cae:	ee 1c       	adc	r14, r14
    2cb0:	ff 1c       	adc	r15, r15
    2cb2:	cc 0c       	add	r12, r12
    2cb4:	dd 1c       	adc	r13, r13
    2cb6:	ee 1c       	adc	r14, r14
    2cb8:	ff 1c       	adc	r15, r15
    2cba:	cc 0c       	add	r12, r12
    2cbc:	dd 1c       	adc	r13, r13
    2cbe:	ee 1c       	adc	r14, r14
    2cc0:	ff 1c       	adc	r15, r15
    2cc2:	cc 0c       	add	r12, r12
    2cc4:	dd 1c       	adc	r13, r13
    2cc6:	ee 1c       	adc	r14, r14
    2cc8:	ff 1c       	adc	r15, r15
    2cca:	cc 0c       	add	r12, r12
    2ccc:	dd 1c       	adc	r13, r13
    2cce:	ee 1c       	adc	r14, r14
    2cd0:	ff 1c       	adc	r15, r15
    2cd2:	cc 0c       	add	r12, r12
    2cd4:	dd 1c       	adc	r13, r13
    2cd6:	ee 1c       	adc	r14, r14
    2cd8:	ff 1c       	adc	r15, r15
    2cda:	c2 0e       	add	r12, r18
    2cdc:	d3 1e       	adc	r13, r19
    2cde:	e4 1e       	adc	r14, r20
    2ce0:	f5 1e       	adc	r15, r21
    2ce2:	82 e0       	ldi	r24, 0x02	; 2
    2ce4:	d8 1a       	sub	r13, r24
    2ce6:	e1 08       	sbc	r14, r1
    2ce8:	f1 08       	sbc	r15, r1
    2cea:	f8 01       	movw	r30, r16
    2cec:	c0 82       	st	Z, r12
    2cee:	d1 82       	std	Z+1, r13	; 0x01
    2cf0:	e2 82       	std	Z+2, r14	; 0x02
    2cf2:	f3 82       	std	Z+3, r15	; 0x03
    2cf4:	c3 01       	movw	r24, r6
    2cf6:	b2 01       	movw	r22, r4
    2cf8:	0e 94 bc 20 	call	0x4178	; 0x4178 <__mulsi3>
    2cfc:	86 1a       	sub	r8, r22
    2cfe:	97 0a       	sbc	r9, r23
    2d00:	a8 0a       	sbc	r10, r24
    2d02:	b9 0a       	sbc	r11, r25
    2d04:	84 82       	std	Z+4, r8	; 0x04
    2d06:	95 82       	std	Z+5, r9	; 0x05
    2d08:	a6 82       	std	Z+6, r10	; 0x06
    2d0a:	b7 82       	std	Z+7, r11	; 0x07
    2d0c:	40 86       	std	Z+8, r4	; 0x08
    2d0e:	51 86       	std	Z+9, r5	; 0x09
    2d10:	62 86       	std	Z+10, r6	; 0x0a
    2d12:	73 86       	std	Z+11, r7	; 0x0b
    2d14:	80 e0       	ldi	r24, 0x00	; 0
    2d16:	28 96       	adiw	r28, 0x08	; 8
    2d18:	cd bf       	out	0x3d, r28	; 61
    2d1a:	de bf       	out	0x3e, r29	; 62
    2d1c:	df 91       	pop	r29
    2d1e:	cf 91       	pop	r28
    2d20:	1f 91       	pop	r17
    2d22:	0f 91       	pop	r16
    2d24:	ff 90       	pop	r15
    2d26:	ef 90       	pop	r14
    2d28:	df 90       	pop	r13
    2d2a:	cf 90       	pop	r12
    2d2c:	bf 90       	pop	r11
    2d2e:	af 90       	pop	r10
    2d30:	9f 90       	pop	r9
    2d32:	8f 90       	pop	r8
    2d34:	7f 90       	pop	r7
    2d36:	6f 90       	pop	r6
    2d38:	5f 90       	pop	r5
    2d3a:	4f 90       	pop	r4
    2d3c:	08 95       	ret

00002d3e <_Z15multisynth_calcmP13u_si5351_regsPhS1_>:
    2d3e:	2f 92       	push	r2
    2d40:	3f 92       	push	r3
    2d42:	4f 92       	push	r4
    2d44:	5f 92       	push	r5
    2d46:	6f 92       	push	r6
    2d48:	7f 92       	push	r7
    2d4a:	8f 92       	push	r8
    2d4c:	9f 92       	push	r9
    2d4e:	af 92       	push	r10
    2d50:	bf 92       	push	r11
    2d52:	cf 92       	push	r12
    2d54:	df 92       	push	r13
    2d56:	ef 92       	push	r14
    2d58:	ff 92       	push	r15
    2d5a:	0f 93       	push	r16
    2d5c:	1f 93       	push	r17
    2d5e:	cf 93       	push	r28
    2d60:	df 93       	push	r29
    2d62:	cd b7       	in	r28, 0x3d	; 61
    2d64:	de b7       	in	r29, 0x3e	; 62
    2d66:	25 97       	sbiw	r28, 0x05	; 5
    2d68:	cd bf       	out	0x3d, r28	; 61
    2d6a:	de bf       	out	0x3e, r29	; 62
    2d6c:	2b 01       	movw	r4, r22
    2d6e:	3c 01       	movw	r6, r24
    2d70:	4a 83       	std	Y+2, r20	; 0x02
    2d72:	5b 83       	std	Y+3, r21	; 0x03
    2d74:	18 01       	movw	r2, r16
    2d76:	81 e0       	ldi	r24, 0x01	; 1
    2d78:	f9 01       	movw	r30, r18
    2d7a:	80 83       	st	Z, r24
    2d7c:	f0 e8       	ldi	r31, 0x80	; 128
    2d7e:	4f 16       	cp	r4, r31
    2d80:	f1 ed       	ldi	r31, 0xD1	; 209
    2d82:	5f 06       	cpc	r5, r31
    2d84:	f0 ef       	ldi	r31, 0xF0	; 240
    2d86:	6f 06       	cpc	r6, r31
    2d88:	f8 e0       	ldi	r31, 0x08	; 8
    2d8a:	7f 06       	cpc	r7, r31
    2d8c:	d0 f0       	brcs	.+52     	; 0x2dc2 <_Z15multisynth_calcmP13u_si5351_regsPhS1_+0x84>
    2d8e:	c3 01       	movw	r24, r6
    2d90:	b2 01       	movw	r22, r4
    2d92:	66 0f       	add	r22, r22
    2d94:	77 1f       	adc	r23, r23
    2d96:	88 1f       	adc	r24, r24
    2d98:	99 1f       	adc	r25, r25
    2d9a:	66 0f       	add	r22, r22
    2d9c:	77 1f       	adc	r23, r23
    2d9e:	88 1f       	adc	r24, r24
    2da0:	99 1f       	adc	r25, r25
    2da2:	c1 2c       	mov	r12, r1
    2da4:	d1 2c       	mov	r13, r1
    2da6:	76 01       	movw	r14, r12
    2da8:	68 94       	set
    2daa:	c2 f8       	bld	r12, 2
    2dac:	48 c0       	rjmp	.+144    	; 0x2e3e <_Z15multisynth_calcmP13u_si5351_regsPhS1_+0x100>
    2dae:	21 e0       	ldi	r18, 0x01	; 1
    2db0:	2d 83       	std	Y+5, r18	; 0x05
    2db2:	0d c0       	rjmp	.+26     	; 0x2dce <_Z15multisynth_calcmP13u_si5351_regsPhS1_+0x90>
    2db4:	69 01       	movw	r12, r18
    2db6:	7a 01       	movw	r14, r20
    2db8:	31 e0       	ldi	r19, 0x01	; 1
    2dba:	39 83       	std	Y+1, r19	; 0x01
    2dbc:	81 e0       	ldi	r24, 0x01	; 1
    2dbe:	8d 83       	std	Y+5, r24	; 0x05
    2dc0:	06 c0       	rjmp	.+12     	; 0x2dce <_Z15multisynth_calcmP13u_si5351_regsPhS1_+0x90>
    2dc2:	1c 82       	std	Y+4, r1	; 0x04
    2dc4:	19 82       	std	Y+1, r1	; 0x01
    2dc6:	1d 82       	std	Y+5, r1	; 0x05
    2dc8:	c1 2c       	mov	r12, r1
    2dca:	d1 2c       	mov	r13, r1
    2dcc:	76 01       	movw	r14, r12
    2dce:	8d 80       	ldd	r8, Y+5	; 0x05
    2dd0:	81 10       	cpse	r8, r1
    2dd2:	28 c0       	rjmp	.+80     	; 0x2e24 <_Z15multisynth_calcmP13u_si5351_regsPhS1_+0xe6>
    2dd4:	9c 80       	ldd	r9, Y+4	; 0x04
    2dd6:	a9 2d       	mov	r26, r9
    2dd8:	b0 e0       	ldi	r27, 0x00	; 0
    2dda:	a3 01       	movw	r20, r6
    2ddc:	92 01       	movw	r18, r4
    2dde:	0e 94 54 21 	call	0x42a8	; 0x42a8 <__muluhisi3>
    2de2:	00 e0       	ldi	r16, 0x00	; 0
    2de4:	19 ee       	ldi	r17, 0xE9	; 233
    2de6:	24 ea       	ldi	r18, 0xA4	; 164
    2de8:	35 e3       	ldi	r19, 0x35	; 53
    2dea:	48 01       	movw	r8, r16
    2dec:	59 01       	movw	r10, r18
    2dee:	86 1a       	sub	r8, r22
    2df0:	97 0a       	sbc	r9, r23
    2df2:	a8 0a       	sbc	r10, r24
    2df4:	b9 0a       	sbc	r11, r25
    2df6:	c5 01       	movw	r24, r10
    2df8:	b4 01       	movw	r22, r8
    2dfa:	2c 81       	ldd	r18, Y+4	; 0x04
    2dfc:	2e 5f       	subi	r18, 0xFE	; 254
    2dfe:	2c 83       	std	Y+4, r18	; 0x04
    2e00:	81 14       	cp	r8, r1
    2e02:	36 e4       	ldi	r19, 0x46	; 70
    2e04:	93 06       	cpc	r9, r19
    2e06:	33 ec       	ldi	r19, 0xC3	; 195
    2e08:	a3 06       	cpc	r10, r19
    2e0a:	33 e2       	ldi	r19, 0x23	; 35
    2e0c:	b3 06       	cpc	r11, r19
    2e0e:	78 f2       	brcs	.-98     	; 0x2dae <_Z15multisynth_calcmP13u_si5351_regsPhS1_+0x70>
    2e10:	a3 01       	movw	r20, r6
    2e12:	92 01       	movw	r18, r4
    2e14:	0e 94 f4 20 	call	0x41e8	; 0x41e8 <__udivmodsi4>
    2e18:	24 30       	cpi	r18, 0x04	; 4
    2e1a:	31 05       	cpc	r19, r1
    2e1c:	41 05       	cpc	r20, r1
    2e1e:	51 05       	cpc	r21, r1
    2e20:	48 f6       	brcc	.-110    	; 0x2db4 <_Z15multisynth_calcmP13u_si5351_regsPhS1_+0x76>
    2e22:	d5 cf       	rjmp	.-86     	; 0x2dce <_Z15multisynth_calcmP13u_si5351_regsPhS1_+0x90>
    2e24:	89 80       	ldd	r8, Y+1	; 0x01
    2e26:	88 20       	and	r8, r8
    2e28:	39 f0       	breq	.+14     	; 0x2e38 <_Z15multisynth_calcmP13u_si5351_regsPhS1_+0xfa>
    2e2a:	a7 01       	movw	r20, r14
    2e2c:	96 01       	movw	r18, r12
    2e2e:	c3 01       	movw	r24, r6
    2e30:	b2 01       	movw	r22, r4
    2e32:	0e 94 bc 20 	call	0x4178	; 0x4178 <__mulsi3>
    2e36:	03 c0       	rjmp	.+6      	; 0x2e3e <_Z15multisynth_calcmP13u_si5351_regsPhS1_+0x100>
    2e38:	60 e0       	ldi	r22, 0x00	; 0
    2e3a:	70 e0       	ldi	r23, 0x00	; 0
    2e3c:	cb 01       	movw	r24, r22
    2e3e:	21 e0       	ldi	r18, 0x01	; 1
    2e40:	34 e0       	ldi	r19, 0x04	; 4
    2e42:	c3 16       	cp	r12, r19
    2e44:	d1 04       	cpc	r13, r1
    2e46:	e1 04       	cpc	r14, r1
    2e48:	f1 04       	cpc	r15, r1
    2e4a:	09 f0       	breq	.+2      	; 0x2e4e <_Z15multisynth_calcmP13u_si5351_regsPhS1_+0x110>
    2e4c:	20 e0       	ldi	r18, 0x00	; 0
    2e4e:	f1 01       	movw	r30, r2
    2e50:	20 83       	st	Z, r18
    2e52:	cc 0c       	add	r12, r12
    2e54:	dd 1c       	adc	r13, r13
    2e56:	ee 1c       	adc	r14, r14
    2e58:	ff 1c       	adc	r15, r15
    2e5a:	cc 0c       	add	r12, r12
    2e5c:	dd 1c       	adc	r13, r13
    2e5e:	ee 1c       	adc	r14, r14
    2e60:	ff 1c       	adc	r15, r15
    2e62:	cc 0c       	add	r12, r12
    2e64:	dd 1c       	adc	r13, r13
    2e66:	ee 1c       	adc	r14, r14
    2e68:	ff 1c       	adc	r15, r15
    2e6a:	cc 0c       	add	r12, r12
    2e6c:	dd 1c       	adc	r13, r13
    2e6e:	ee 1c       	adc	r14, r14
    2e70:	ff 1c       	adc	r15, r15
    2e72:	cc 0c       	add	r12, r12
    2e74:	dd 1c       	adc	r13, r13
    2e76:	ee 1c       	adc	r14, r14
    2e78:	ff 1c       	adc	r15, r15
    2e7a:	cc 0c       	add	r12, r12
    2e7c:	dd 1c       	adc	r13, r13
    2e7e:	ee 1c       	adc	r14, r14
    2e80:	ff 1c       	adc	r15, r15
    2e82:	cc 0c       	add	r12, r12
    2e84:	dd 1c       	adc	r13, r13
    2e86:	ee 1c       	adc	r14, r14
    2e88:	ff 1c       	adc	r15, r15
    2e8a:	f2 e0       	ldi	r31, 0x02	; 2
    2e8c:	df 1a       	sub	r13, r31
    2e8e:	e1 08       	sbc	r14, r1
    2e90:	f1 08       	sbc	r15, r1
    2e92:	ea 81       	ldd	r30, Y+2	; 0x02
    2e94:	fb 81       	ldd	r31, Y+3	; 0x03
    2e96:	c0 82       	st	Z, r12
    2e98:	d1 82       	std	Z+1, r13	; 0x01
    2e9a:	e2 82       	std	Z+2, r14	; 0x02
    2e9c:	f3 82       	std	Z+3, r15	; 0x03
    2e9e:	14 82       	std	Z+4, r1	; 0x04
    2ea0:	15 82       	std	Z+5, r1	; 0x05
    2ea2:	16 82       	std	Z+6, r1	; 0x06
    2ea4:	17 82       	std	Z+7, r1	; 0x07
    2ea6:	01 e0       	ldi	r16, 0x01	; 1
    2ea8:	10 e0       	ldi	r17, 0x00	; 0
    2eaa:	20 e0       	ldi	r18, 0x00	; 0
    2eac:	30 e0       	ldi	r19, 0x00	; 0
    2eae:	00 87       	std	Z+8, r16	; 0x08
    2eb0:	11 87       	std	Z+9, r17	; 0x09
    2eb2:	22 87       	std	Z+10, r18	; 0x0a
    2eb4:	33 87       	std	Z+11, r19	; 0x0b
    2eb6:	25 96       	adiw	r28, 0x05	; 5
    2eb8:	cd bf       	out	0x3d, r28	; 61
    2eba:	de bf       	out	0x3e, r29	; 62
    2ebc:	df 91       	pop	r29
    2ebe:	cf 91       	pop	r28
    2ec0:	1f 91       	pop	r17
    2ec2:	0f 91       	pop	r16
    2ec4:	ff 90       	pop	r15
    2ec6:	ef 90       	pop	r14
    2ec8:	df 90       	pop	r13
    2eca:	cf 90       	pop	r12
    2ecc:	bf 90       	pop	r11
    2ece:	af 90       	pop	r10
    2ed0:	9f 90       	pop	r9
    2ed2:	8f 90       	pop	r8
    2ed4:	7f 90       	pop	r7
    2ed6:	6f 90       	pop	r6
    2ed8:	5f 90       	pop	r5
    2eda:	4f 90       	pop	r4
    2edc:	3f 90       	pop	r3
    2ede:	2f 90       	pop	r2
    2ee0:	08 95       	ret

00002ee2 <_Z19multisynth_estimatemP13u_si5351_regsPhS1_>:
    2ee2:	2f 92       	push	r2
    2ee4:	3f 92       	push	r3
    2ee6:	4f 92       	push	r4
    2ee8:	5f 92       	push	r5
    2eea:	6f 92       	push	r6
    2eec:	7f 92       	push	r7
    2eee:	8f 92       	push	r8
    2ef0:	9f 92       	push	r9
    2ef2:	af 92       	push	r10
    2ef4:	bf 92       	push	r11
    2ef6:	cf 92       	push	r12
    2ef8:	df 92       	push	r13
    2efa:	ef 92       	push	r14
    2efc:	ff 92       	push	r15
    2efe:	0f 93       	push	r16
    2f00:	1f 93       	push	r17
    2f02:	cf 93       	push	r28
    2f04:	df 93       	push	r29
    2f06:	cd b7       	in	r28, 0x3d	; 61
    2f08:	de b7       	in	r29, 0x3e	; 62
    2f0a:	62 97       	sbiw	r28, 0x12	; 18
    2f0c:	cd bf       	out	0x3d, r28	; 61
    2f0e:	de bf       	out	0x3e, r29	; 62
    2f10:	4b 01       	movw	r8, r22
    2f12:	5c 01       	movw	r10, r24
    2f14:	1a 01       	movw	r2, r20
    2f16:	29 8b       	std	Y+17, r18	; 0x11
    2f18:	3a 8b       	std	Y+18, r19	; 0x12
    2f1a:	60 91 ff 42 	lds	r22, 0x42FF	; 0x8042ff <_ZL8freqVCOB>
    2f1e:	70 91 00 43 	lds	r23, 0x4300	; 0x804300 <_ZL8freqVCOB+0x1>
    2f22:	80 91 01 43 	lds	r24, 0x4301	; 0x804301 <_ZL8freqVCOB+0x2>
    2f26:	90 91 02 43 	lds	r25, 0x4302	; 0x804302 <_ZL8freqVCOB+0x3>
    2f2a:	a5 01       	movw	r20, r10
    2f2c:	94 01       	movw	r18, r8
    2f2e:	0e 94 f4 20 	call	0x41e8	; 0x41e8 <__udivmodsi4>
    2f32:	29 87       	std	Y+9, r18	; 0x09
    2f34:	3a 87       	std	Y+10, r19	; 0x0a
    2f36:	4b 87       	std	Y+11, r20	; 0x0b
    2f38:	5c 87       	std	Y+12, r21	; 0x0c
    2f3a:	69 01       	movw	r12, r18
    2f3c:	7a 01       	movw	r14, r20
    2f3e:	69 83       	std	Y+1, r22	; 0x01
    2f40:	7a 83       	std	Y+2, r23	; 0x02
    2f42:	8b 83       	std	Y+3, r24	; 0x03
    2f44:	9c 83       	std	Y+4, r25	; 0x04
    2f46:	8d 82       	std	Y+5, r8	; 0x05
    2f48:	9e 82       	std	Y+6, r9	; 0x06
    2f4a:	af 82       	std	Y+7, r10	; 0x07
    2f4c:	b8 86       	std	Y+8, r11	; 0x08
    2f4e:	be 01       	movw	r22, r28
    2f50:	6b 5f       	subi	r22, 0xFB	; 251
    2f52:	7f 4f       	sbci	r23, 0xFF	; 255
    2f54:	ce 01       	movw	r24, r28
    2f56:	01 96       	adiw	r24, 0x01	; 1
    2f58:	0e 94 87 15 	call	0x2b0e	; 0x2b0e <_Z13reduce_by_gcdPmS_>
    2f5c:	80 91 ff 42 	lds	r24, 0x42FF	; 0x8042ff <_ZL8freqVCOB>
    2f60:	90 91 00 43 	lds	r25, 0x4300	; 0x804300 <_ZL8freqVCOB+0x1>
    2f64:	a0 91 01 43 	lds	r26, 0x4301	; 0x804301 <_ZL8freqVCOB+0x2>
    2f68:	b0 91 02 43 	lds	r27, 0x4302	; 0x804302 <_ZL8freqVCOB+0x3>
    2f6c:	8d 87       	std	Y+13, r24	; 0x0d
    2f6e:	9e 87       	std	Y+14, r25	; 0x0e
    2f70:	af 87       	std	Y+15, r26	; 0x0f
    2f72:	b8 8b       	std	Y+16, r27	; 0x10
    2f74:	4d 80       	ldd	r4, Y+5	; 0x05
    2f76:	5e 80       	ldd	r5, Y+6	; 0x06
    2f78:	6f 80       	ldd	r6, Y+7	; 0x07
    2f7a:	78 84       	ldd	r7, Y+8	; 0x08
    2f7c:	29 85       	ldd	r18, Y+9	; 0x09
    2f7e:	3a 85       	ldd	r19, Y+10	; 0x0a
    2f80:	4b 85       	ldd	r20, Y+11	; 0x0b
    2f82:	5c 85       	ldd	r21, Y+12	; 0x0c
    2f84:	c3 01       	movw	r24, r6
    2f86:	b2 01       	movw	r22, r4
    2f88:	0e 94 bc 20 	call	0x4178	; 0x4178 <__mulsi3>
    2f8c:	89 80       	ldd	r8, Y+1	; 0x01
    2f8e:	9a 80       	ldd	r9, Y+2	; 0x02
    2f90:	ab 80       	ldd	r10, Y+3	; 0x03
    2f92:	bc 80       	ldd	r11, Y+4	; 0x04
    2f94:	9b 01       	movw	r18, r22
    2f96:	ac 01       	movw	r20, r24
    2f98:	28 0d       	add	r18, r8
    2f9a:	39 1d       	adc	r19, r9
    2f9c:	4a 1d       	adc	r20, r10
    2f9e:	5b 1d       	adc	r21, r11
    2fa0:	6d 85       	ldd	r22, Y+13	; 0x0d
    2fa2:	7e 85       	ldd	r23, Y+14	; 0x0e
    2fa4:	8f 85       	ldd	r24, Y+15	; 0x0f
    2fa6:	98 89       	ldd	r25, Y+16	; 0x10
    2fa8:	0e 94 f4 20 	call	0x41e8	; 0x41e8 <__udivmodsi4>
    2fac:	ca 01       	movw	r24, r20
    2fae:	b9 01       	movw	r22, r18
    2fb0:	a3 01       	movw	r20, r6
    2fb2:	92 01       	movw	r18, r4
    2fb4:	0e 94 bc 20 	call	0x4178	; 0x4178 <__mulsi3>
    2fb8:	6d 87       	std	Y+13, r22	; 0x0d
    2fba:	7e 87       	std	Y+14, r23	; 0x0e
    2fbc:	8f 87       	std	Y+15, r24	; 0x0f
    2fbe:	98 8b       	std	Y+16, r25	; 0x10
    2fc0:	89 28       	or	r8, r9
    2fc2:	8a 28       	or	r8, r10
    2fc4:	8b 28       	or	r8, r11
    2fc6:	29 f4       	brne	.+10     	; 0x2fd2 <_Z19multisynth_estimatemP13u_si5351_regsPhS1_+0xf0>
    2fc8:	99 85       	ldd	r25, Y+9	; 0x09
    2fca:	90 ff       	sbrs	r25, 0
    2fcc:	04 c0       	rjmp	.+8      	; 0x2fd6 <_Z19multisynth_estimatemP13u_si5351_regsPhS1_+0xf4>
    2fce:	80 e0       	ldi	r24, 0x00	; 0
    2fd0:	03 c0       	rjmp	.+6      	; 0x2fd8 <_Z19multisynth_estimatemP13u_si5351_regsPhS1_+0xf6>
    2fd2:	80 e0       	ldi	r24, 0x00	; 0
    2fd4:	01 c0       	rjmp	.+2      	; 0x2fd8 <_Z19multisynth_estimatemP13u_si5351_regsPhS1_+0xf6>
    2fd6:	81 e0       	ldi	r24, 0x01	; 1
    2fd8:	a9 89       	ldd	r26, Y+17	; 0x11
    2fda:	ba 89       	ldd	r27, Y+18	; 0x12
    2fdc:	8c 93       	st	X, r24
    2fde:	b4 e0       	ldi	r27, 0x04	; 4
    2fe0:	cb 16       	cp	r12, r27
    2fe2:	d1 04       	cpc	r13, r1
    2fe4:	e1 04       	cpc	r14, r1
    2fe6:	f1 04       	cpc	r15, r1
    2fe8:	21 f4       	brne	.+8      	; 0x2ff2 <_Z19multisynth_estimatemP13u_si5351_regsPhS1_+0x110>
    2fea:	81 11       	cpse	r24, r1
    2fec:	04 c0       	rjmp	.+8      	; 0x2ff6 <_Z19multisynth_estimatemP13u_si5351_regsPhS1_+0x114>
    2fee:	80 e0       	ldi	r24, 0x00	; 0
    2ff0:	03 c0       	rjmp	.+6      	; 0x2ff8 <_Z19multisynth_estimatemP13u_si5351_regsPhS1_+0x116>
    2ff2:	80 e0       	ldi	r24, 0x00	; 0
    2ff4:	01 c0       	rjmp	.+2      	; 0x2ff8 <_Z19multisynth_estimatemP13u_si5351_regsPhS1_+0x116>
    2ff6:	81 e0       	ldi	r24, 0x01	; 1
    2ff8:	f8 01       	movw	r30, r16
    2ffa:	80 83       	st	Z, r24
    2ffc:	88 23       	and	r24, r24
    2ffe:	a1 f0       	breq	.+40     	; 0x3028 <_Z19multisynth_estimatemP13u_si5351_regsPhS1_+0x146>
    3000:	d1 01       	movw	r26, r2
    3002:	1d 92       	st	X+, r1
    3004:	1d 92       	st	X+, r1
    3006:	1d 92       	st	X+, r1
    3008:	1c 92       	st	X, r1
    300a:	13 97       	sbiw	r26, 0x03	; 3
    300c:	f1 01       	movw	r30, r2
    300e:	14 82       	std	Z+4, r1	; 0x04
    3010:	15 82       	std	Z+5, r1	; 0x05
    3012:	16 82       	std	Z+6, r1	; 0x06
    3014:	17 82       	std	Z+7, r1	; 0x07
    3016:	81 e0       	ldi	r24, 0x01	; 1
    3018:	90 e0       	ldi	r25, 0x00	; 0
    301a:	a0 e0       	ldi	r26, 0x00	; 0
    301c:	b0 e0       	ldi	r27, 0x00	; 0
    301e:	80 87       	std	Z+8, r24	; 0x08
    3020:	91 87       	std	Z+9, r25	; 0x09
    3022:	a2 87       	std	Z+10, r26	; 0x0a
    3024:	b3 87       	std	Z+11, r27	; 0x0b
    3026:	69 c0       	rjmp	.+210    	; 0x30fa <_Z19multisynth_estimatemP13u_si5351_regsPhS1_+0x218>
    3028:	89 80       	ldd	r8, Y+1	; 0x01
    302a:	9a 80       	ldd	r9, Y+2	; 0x02
    302c:	ab 80       	ldd	r10, Y+3	; 0x03
    302e:	bc 80       	ldd	r11, Y+4	; 0x04
    3030:	88 0c       	add	r8, r8
    3032:	99 1c       	adc	r9, r9
    3034:	aa 1c       	adc	r10, r10
    3036:	bb 1c       	adc	r11, r11
    3038:	88 0c       	add	r8, r8
    303a:	99 1c       	adc	r9, r9
    303c:	aa 1c       	adc	r10, r10
    303e:	bb 1c       	adc	r11, r11
    3040:	88 0c       	add	r8, r8
    3042:	99 1c       	adc	r9, r9
    3044:	aa 1c       	adc	r10, r10
    3046:	bb 1c       	adc	r11, r11
    3048:	88 0c       	add	r8, r8
    304a:	99 1c       	adc	r9, r9
    304c:	aa 1c       	adc	r10, r10
    304e:	bb 1c       	adc	r11, r11
    3050:	88 0c       	add	r8, r8
    3052:	99 1c       	adc	r9, r9
    3054:	aa 1c       	adc	r10, r10
    3056:	bb 1c       	adc	r11, r11
    3058:	88 0c       	add	r8, r8
    305a:	99 1c       	adc	r9, r9
    305c:	aa 1c       	adc	r10, r10
    305e:	bb 1c       	adc	r11, r11
    3060:	88 0c       	add	r8, r8
    3062:	99 1c       	adc	r9, r9
    3064:	aa 1c       	adc	r10, r10
    3066:	bb 1c       	adc	r11, r11
    3068:	4d 80       	ldd	r4, Y+5	; 0x05
    306a:	5e 80       	ldd	r5, Y+6	; 0x06
    306c:	6f 80       	ldd	r6, Y+7	; 0x07
    306e:	78 84       	ldd	r7, Y+8	; 0x08
    3070:	c5 01       	movw	r24, r10
    3072:	b4 01       	movw	r22, r8
    3074:	a3 01       	movw	r20, r6
    3076:	92 01       	movw	r18, r4
    3078:	0e 94 f4 20 	call	0x41e8	; 0x41e8 <__udivmodsi4>
    307c:	c9 84       	ldd	r12, Y+9	; 0x09
    307e:	da 84       	ldd	r13, Y+10	; 0x0a
    3080:	eb 84       	ldd	r14, Y+11	; 0x0b
    3082:	fc 84       	ldd	r15, Y+12	; 0x0c
    3084:	cc 0c       	add	r12, r12
    3086:	dd 1c       	adc	r13, r13
    3088:	ee 1c       	adc	r14, r14
    308a:	ff 1c       	adc	r15, r15
    308c:	cc 0c       	add	r12, r12
    308e:	dd 1c       	adc	r13, r13
    3090:	ee 1c       	adc	r14, r14
    3092:	ff 1c       	adc	r15, r15
    3094:	cc 0c       	add	r12, r12
    3096:	dd 1c       	adc	r13, r13
    3098:	ee 1c       	adc	r14, r14
    309a:	ff 1c       	adc	r15, r15
    309c:	cc 0c       	add	r12, r12
    309e:	dd 1c       	adc	r13, r13
    30a0:	ee 1c       	adc	r14, r14
    30a2:	ff 1c       	adc	r15, r15
    30a4:	cc 0c       	add	r12, r12
    30a6:	dd 1c       	adc	r13, r13
    30a8:	ee 1c       	adc	r14, r14
    30aa:	ff 1c       	adc	r15, r15
    30ac:	cc 0c       	add	r12, r12
    30ae:	dd 1c       	adc	r13, r13
    30b0:	ee 1c       	adc	r14, r14
    30b2:	ff 1c       	adc	r15, r15
    30b4:	cc 0c       	add	r12, r12
    30b6:	dd 1c       	adc	r13, r13
    30b8:	ee 1c       	adc	r14, r14
    30ba:	ff 1c       	adc	r15, r15
    30bc:	c2 0e       	add	r12, r18
    30be:	d3 1e       	adc	r13, r19
    30c0:	e4 1e       	adc	r14, r20
    30c2:	f5 1e       	adc	r15, r21
    30c4:	f2 e0       	ldi	r31, 0x02	; 2
    30c6:	df 1a       	sub	r13, r31
    30c8:	e1 08       	sbc	r14, r1
    30ca:	f1 08       	sbc	r15, r1
    30cc:	d1 01       	movw	r26, r2
    30ce:	cd 92       	st	X+, r12
    30d0:	dd 92       	st	X+, r13
    30d2:	ed 92       	st	X+, r14
    30d4:	fc 92       	st	X, r15
    30d6:	13 97       	sbiw	r26, 0x03	; 3
    30d8:	c3 01       	movw	r24, r6
    30da:	b2 01       	movw	r22, r4
    30dc:	0e 94 bc 20 	call	0x4178	; 0x4178 <__mulsi3>
    30e0:	86 1a       	sub	r8, r22
    30e2:	97 0a       	sbc	r9, r23
    30e4:	a8 0a       	sbc	r10, r24
    30e6:	b9 0a       	sbc	r11, r25
    30e8:	f1 01       	movw	r30, r2
    30ea:	84 82       	std	Z+4, r8	; 0x04
    30ec:	95 82       	std	Z+5, r9	; 0x05
    30ee:	a6 82       	std	Z+6, r10	; 0x06
    30f0:	b7 82       	std	Z+7, r11	; 0x07
    30f2:	40 86       	std	Z+8, r4	; 0x08
    30f4:	51 86       	std	Z+9, r5	; 0x09
    30f6:	62 86       	std	Z+10, r6	; 0x0a
    30f8:	73 86       	std	Z+11, r7	; 0x0b
    30fa:	6d 85       	ldd	r22, Y+13	; 0x0d
    30fc:	7e 85       	ldd	r23, Y+14	; 0x0e
    30fe:	8f 85       	ldd	r24, Y+15	; 0x0f
    3100:	98 89       	ldd	r25, Y+16	; 0x10
    3102:	62 96       	adiw	r28, 0x12	; 18
    3104:	cd bf       	out	0x3d, r28	; 61
    3106:	de bf       	out	0x3e, r29	; 62
    3108:	df 91       	pop	r29
    310a:	cf 91       	pop	r28
    310c:	1f 91       	pop	r17
    310e:	0f 91       	pop	r16
    3110:	ff 90       	pop	r15
    3112:	ef 90       	pop	r14
    3114:	df 90       	pop	r13
    3116:	cf 90       	pop	r12
    3118:	bf 90       	pop	r11
    311a:	af 90       	pop	r10
    311c:	9f 90       	pop	r9
    311e:	8f 90       	pop	r8
    3120:	7f 90       	pop	r7
    3122:	6f 90       	pop	r6
    3124:	5f 90       	pop	r5
    3126:	4f 90       	pop	r4
    3128:	3f 90       	pop	r3
    312a:	2f 90       	pop	r2
    312c:	08 95       	ret

0000312e <_Z17si5351_write_bulkPhh>:
    312e:	cf 93       	push	r28
    3130:	c6 2f       	mov	r28, r22
    3132:	46 2f       	mov	r20, r22
    3134:	bc 01       	movw	r22, r24
    3136:	80 ec       	ldi	r24, 0xC0	; 192
    3138:	0e 94 f3 10 	call	0x21e6	; 0x21e6 <I2C_1_SendData>
    313c:	91 e0       	ldi	r25, 0x01	; 1
    313e:	c8 13       	cpse	r28, r24
    3140:	01 c0       	rjmp	.+2      	; 0x3144 <_Z17si5351_write_bulkPhh+0x16>
    3142:	90 e0       	ldi	r25, 0x00	; 0
    3144:	89 2f       	mov	r24, r25
    3146:	cf 91       	pop	r28
    3148:	08 95       	ret

0000314a <_Z7set_pllm10si5351_pll>:
    314a:	1f 93       	push	r17
    314c:	cf 93       	push	r28
    314e:	df 93       	push	r29
    3150:	cd b7       	in	r28, 0x3d	; 61
    3152:	de b7       	in	r29, 0x3e	; 62
    3154:	66 97       	sbiw	r28, 0x16	; 22
    3156:	cd bf       	out	0x3d, r28	; 61
    3158:	de bf       	out	0x3e, r29	; 62
    315a:	14 2f       	mov	r17, r20
    315c:	ae 01       	movw	r20, r28
    315e:	4f 5f       	subi	r20, 0xFF	; 255
    3160:	5f 4f       	sbci	r21, 0xFF	; 255
    3162:	0e 94 f4 15 	call	0x2be8	; 0x2be8 <_Z8pll_calcmP13u_si5351_regs>
    3166:	8a 85       	ldd	r24, Y+10	; 0x0a
    3168:	8e 87       	std	Y+14, r24	; 0x0e
    316a:	89 85       	ldd	r24, Y+9	; 0x09
    316c:	8f 87       	std	Y+15, r24	; 0x0f
    316e:	8b 81       	ldd	r24, Y+3	; 0x03
    3170:	83 70       	andi	r24, 0x03	; 3
    3172:	88 8b       	std	Y+16, r24	; 0x10
    3174:	8a 81       	ldd	r24, Y+2	; 0x02
    3176:	89 8b       	std	Y+17, r24	; 0x11
    3178:	89 81       	ldd	r24, Y+1	; 0x01
    317a:	8a 8b       	std	Y+18, r24	; 0x12
    317c:	9b 85       	ldd	r25, Y+11	; 0x0b
    317e:	8f 81       	ldd	r24, Y+7	; 0x07
    3180:	8f 70       	andi	r24, 0x0F	; 15
    3182:	20 e1       	ldi	r18, 0x10	; 16
    3184:	92 9f       	mul	r25, r18
    3186:	80 0d       	add	r24, r0
    3188:	11 24       	eor	r1, r1
    318a:	8b 8b       	std	Y+19, r24	; 0x13
    318c:	8e 81       	ldd	r24, Y+6	; 0x06
    318e:	8c 8b       	std	Y+20, r24	; 0x14
    3190:	8d 81       	ldd	r24, Y+5	; 0x05
    3192:	8d 8b       	std	Y+21, r24	; 0x15
    3194:	11 30       	cpi	r17, 0x01	; 1
    3196:	41 f4       	brne	.+16     	; 0x31a8 <_Z7set_pllm10si5351_pll+0x5e>
    3198:	8a e1       	ldi	r24, 0x1A	; 26
    319a:	8d 87       	std	Y+13, r24	; 0x0d
    319c:	69 e0       	ldi	r22, 0x09	; 9
    319e:	ce 01       	movw	r24, r28
    31a0:	0d 96       	adiw	r24, 0x0d	; 13
    31a2:	0e 94 97 18 	call	0x312e	; 0x312e <_Z17si5351_write_bulkPhh>
    31a6:	07 c0       	rjmp	.+14     	; 0x31b6 <_Z7set_pllm10si5351_pll+0x6c>
    31a8:	82 e2       	ldi	r24, 0x22	; 34
    31aa:	8d 87       	std	Y+13, r24	; 0x0d
    31ac:	69 e0       	ldi	r22, 0x09	; 9
    31ae:	ce 01       	movw	r24, r28
    31b0:	0d 96       	adiw	r24, 0x0d	; 13
    31b2:	0e 94 97 18 	call	0x312e	; 0x312e <_Z17si5351_write_bulkPhh>
    31b6:	66 96       	adiw	r28, 0x16	; 22
    31b8:	cd bf       	out	0x3d, r28	; 61
    31ba:	de bf       	out	0x3e, r29	; 62
    31bc:	df 91       	pop	r29
    31be:	cf 91       	pop	r28
    31c0:	1f 91       	pop	r17
    31c2:	08 95       	ret

000031c4 <_Z16si5351_read_bulkPhh>:
    31c4:	cf 93       	push	r28
    31c6:	c6 2f       	mov	r28, r22
    31c8:	46 2f       	mov	r20, r22
    31ca:	bc 01       	movw	r22, r24
    31cc:	80 ec       	ldi	r24, 0xC0	; 192
    31ce:	0e 94 28 11 	call	0x2250	; 0x2250 <I2C_1_GetData>
    31d2:	91 e0       	ldi	r25, 0x01	; 1
    31d4:	c8 13       	cpse	r28, r24
    31d6:	01 c0       	rjmp	.+2      	; 0x31da <_Z16si5351_read_bulkPhh+0x16>
    31d8:	90 e0       	ldi	r25, 0x00	; 0
    31da:	89 2f       	mov	r24, r25
    31dc:	cf 91       	pop	r28
    31de:	08 95       	ret

000031e0 <_Z19si5351_clock_enable12si5351_clockh>:
    31e0:	0f 93       	push	r16
    31e2:	1f 93       	push	r17
    31e4:	cf 93       	push	r28
    31e6:	df 93       	push	r29
    31e8:	00 d0       	rcall	.+0      	; 0x31ea <_Z19si5351_clock_enable12si5351_clockh+0xa>
    31ea:	cd b7       	in	r28, 0x3d	; 61
    31ec:	de b7       	in	r29, 0x3e	; 62
    31ee:	18 2f       	mov	r17, r24
    31f0:	06 2f       	mov	r16, r22
    31f2:	83 e0       	ldi	r24, 0x03	; 3
    31f4:	89 83       	std	Y+1, r24	; 0x01
    31f6:	61 e0       	ldi	r22, 0x01	; 1
    31f8:	ce 01       	movw	r24, r28
    31fa:	01 96       	adiw	r24, 0x01	; 1
    31fc:	0e 94 e2 18 	call	0x31c4	; 0x31c4 <_Z16si5351_read_bulkPhh>
    3200:	81 11       	cpse	r24, r1
    3202:	23 c0       	rjmp	.+70     	; 0x324a <_Z19si5351_clock_enable12si5351_clockh+0x6a>
    3204:	99 81       	ldd	r25, Y+1	; 0x01
    3206:	00 23       	and	r16, r16
    3208:	59 f0       	breq	.+22     	; 0x3220 <_Z19si5351_clock_enable12si5351_clockh+0x40>
    320a:	21 e0       	ldi	r18, 0x01	; 1
    320c:	30 e0       	ldi	r19, 0x00	; 0
    320e:	02 c0       	rjmp	.+4      	; 0x3214 <_Z19si5351_clock_enable12si5351_clockh+0x34>
    3210:	22 0f       	add	r18, r18
    3212:	33 1f       	adc	r19, r19
    3214:	1a 95       	dec	r17
    3216:	e2 f7       	brpl	.-8      	; 0x3210 <_Z19si5351_clock_enable12si5351_clockh+0x30>
    3218:	82 2f       	mov	r24, r18
    321a:	80 95       	com	r24
    321c:	89 23       	and	r24, r25
    321e:	09 c0       	rjmp	.+18     	; 0x3232 <_Z19si5351_clock_enable12si5351_clockh+0x52>
    3220:	21 e0       	ldi	r18, 0x01	; 1
    3222:	30 e0       	ldi	r19, 0x00	; 0
    3224:	02 c0       	rjmp	.+4      	; 0x322a <_Z19si5351_clock_enable12si5351_clockh+0x4a>
    3226:	22 0f       	add	r18, r18
    3228:	33 1f       	adc	r19, r19
    322a:	1a 95       	dec	r17
    322c:	e2 f7       	brpl	.-8      	; 0x3226 <_Z19si5351_clock_enable12si5351_clockh+0x46>
    322e:	89 2f       	mov	r24, r25
    3230:	82 2b       	or	r24, r18
    3232:	93 e0       	ldi	r25, 0x03	; 3
    3234:	99 83       	std	Y+1, r25	; 0x01
    3236:	8a 83       	std	Y+2, r24	; 0x02
    3238:	62 e0       	ldi	r22, 0x02	; 2
    323a:	ce 01       	movw	r24, r28
    323c:	01 96       	adiw	r24, 0x01	; 1
    323e:	0e 94 97 18 	call	0x312e	; 0x312e <_Z17si5351_write_bulkPhh>
    3242:	88 23       	and	r24, r24
    3244:	21 f0       	breq	.+8      	; 0x324e <_Z19si5351_clock_enable12si5351_clockh+0x6e>
    3246:	8c ef       	ldi	r24, 0xFC	; 252
    3248:	03 c0       	rjmp	.+6      	; 0x3250 <_Z19si5351_clock_enable12si5351_clockh+0x70>
    324a:	8c ef       	ldi	r24, 0xFC	; 252
    324c:	01 c0       	rjmp	.+2      	; 0x3250 <_Z19si5351_clock_enable12si5351_clockh+0x70>
    324e:	80 e0       	ldi	r24, 0x00	; 0
    3250:	0f 90       	pop	r0
    3252:	0f 90       	pop	r0
    3254:	df 91       	pop	r29
    3256:	cf 91       	pop	r28
    3258:	1f 91       	pop	r17
    325a:	0f 91       	pop	r16
    325c:	08 95       	ret

0000325e <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll>:
 *
 * Set the desired PLL source for a multisynth.
 *
 */
	void set_multisynth_registers_source(Si5351_clock clk, Si5351_pll pll)
	{
    325e:	0f 93       	push	r16
    3260:	1f 93       	push	r17
    3262:	cf 93       	push	r28
    3264:	df 93       	push	r29
    3266:	00 d0       	rcall	.+0      	; 0x3268 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0xa>
    3268:	cd b7       	in	r28, 0x3d	; 61
    326a:	de b7       	in	r29, 0x3e	; 62
    326c:	06 2f       	mov	r16, r22
		uint8_t reg_val;
		uint8_t data[2];
		
		data[0] = SI5351_CLK0_CTRL + (uint8_t)clk;
    326e:	10 e1       	ldi	r17, 0x10	; 16
    3270:	18 0f       	add	r17, r24
    3272:	19 83       	std	Y+1, r17	; 0x01

		if(si5351_read_bulk(data, 1))
    3274:	61 e0       	ldi	r22, 0x01	; 1
    3276:	ce 01       	movw	r24, r28
    3278:	01 96       	adiw	r24, 0x01	; 1
    327a:	0e 94 e2 18 	call	0x31c4	; 0x31c4 <_Z16si5351_read_bulkPhh>
    327e:	81 11       	cpse	r24, r1
    3280:	0f c0       	rjmp	.+30     	; 0x32a0 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x42>
		{
			return;
		}
		
		reg_val = data[0];
    3282:	89 81       	ldd	r24, Y+1	; 0x01

		if(pll == SI5351_PLLA)
    3284:	01 30       	cpi	r16, 0x01	; 1
    3286:	11 f4       	brne	.+4      	; 0x328c <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x2e>
		{
			reg_val &= ~(SI5351_CLK_PLL_SELECT);
    3288:	8f 7d       	andi	r24, 0xDF	; 223
    328a:	03 c0       	rjmp	.+6      	; 0x3292 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x34>
		}
		else if(pll == SI5351_PLLB)
    328c:	02 30       	cpi	r16, 0x02	; 2
    328e:	09 f4       	brne	.+2      	; 0x3292 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x34>
		{
			reg_val |= SI5351_CLK_PLL_SELECT;
    3290:	80 62       	ori	r24, 0x20	; 32
		}

		data[0] = SI5351_CLK0_CTRL + (uint8_t)clk;
    3292:	19 83       	std	Y+1, r17	; 0x01
		data[1] = reg_val;
    3294:	8a 83       	std	Y+2, r24	; 0x02
		si5351_write_bulk(data, 2);
    3296:	62 e0       	ldi	r22, 0x02	; 2
    3298:	ce 01       	movw	r24, r28
    329a:	01 96       	adiw	r24, 0x01	; 1
    329c:	0e 94 97 18 	call	0x312e	; 0x312e <_Z17si5351_write_bulkPhh>
	}
    32a0:	0f 90       	pop	r0
    32a2:	0f 90       	pop	r0
    32a4:	df 91       	pop	r29
    32a6:	cf 91       	pop	r28
    32a8:	1f 91       	pop	r17
    32aa:	0f 91       	pop	r16
    32ac:	08 95       	ret

000032ae <_Z16set_integer_mode12si5351_clockh>:
 * enable - 1 to enable, 0 to disable
 *
 * Set the indicated multisynth into integer mode.
 */
	void set_integer_mode(Si5351_clock clk, BOOL enable)
	{
    32ae:	0f 93       	push	r16
    32b0:	1f 93       	push	r17
    32b2:	cf 93       	push	r28
    32b4:	df 93       	push	r29
    32b6:	00 d0       	rcall	.+0      	; 0x32b8 <_Z16set_integer_mode12si5351_clockh+0xa>
    32b8:	cd b7       	in	r28, 0x3d	; 61
    32ba:	de b7       	in	r29, 0x3e	; 62
    32bc:	06 2f       	mov	r16, r22
		uint8_t reg_val;
		uint8_t data[2];

		data[0] = SI5351_CLK0_CTRL + (uint8_t)clk;
    32be:	10 e1       	ldi	r17, 0x10	; 16
    32c0:	18 0f       	add	r17, r24
    32c2:	19 83       	std	Y+1, r17	; 0x01
		if(si5351_read_bulk(data, 1))
    32c4:	61 e0       	ldi	r22, 0x01	; 1
    32c6:	ce 01       	movw	r24, r28
    32c8:	01 96       	adiw	r24, 0x01	; 1
    32ca:	0e 94 e2 18 	call	0x31c4	; 0x31c4 <_Z16si5351_read_bulkPhh>
    32ce:	81 11       	cpse	r24, r1
    32d0:	0d c0       	rjmp	.+26     	; 0x32ec <_Z16set_integer_mode12si5351_clockh+0x3e>
		{
			return;
		}
		
		reg_val = data[0];
    32d2:	89 81       	ldd	r24, Y+1	; 0x01

		if(enable)
    32d4:	00 23       	and	r16, r16
    32d6:	11 f0       	breq	.+4      	; 0x32dc <_Z16set_integer_mode12si5351_clockh+0x2e>
		{
			reg_val |= (SI5351_CLK_INTEGER_MODE);
    32d8:	80 64       	ori	r24, 0x40	; 64
    32da:	01 c0       	rjmp	.+2      	; 0x32de <_Z16set_integer_mode12si5351_clockh+0x30>
		}
		else
		{
			reg_val &= ~(SI5351_CLK_INTEGER_MODE);
    32dc:	8f 7b       	andi	r24, 0xBF	; 191
		}

		data[0] = SI5351_CLK0_CTRL + (uint8_t)clk;
    32de:	19 83       	std	Y+1, r17	; 0x01
		data[1] = reg_val;
    32e0:	8a 83       	std	Y+2, r24	; 0x02
		si5351_write_bulk(data, 2);
    32e2:	62 e0       	ldi	r22, 0x02	; 2
    32e4:	ce 01       	movw	r24, r28
    32e6:	01 96       	adiw	r24, 0x01	; 1
    32e8:	0e 94 97 18 	call	0x312e	; 0x312e <_Z17si5351_write_bulkPhh>
	}
    32ec:	0f 90       	pop	r0
    32ee:	0f 90       	pop	r0
    32f0:	df 91       	pop	r29
    32f2:	cf 91       	pop	r28
    32f4:	1f 91       	pop	r17
    32f6:	0f 91       	pop	r16
    32f8:	08 95       	ret

000032fa <_Z6ms_div12si5351_clockhh>:


	void ms_div(Si5351_clock clk, uint8_t r_div, BOOL div_by_4)
	{
    32fa:	ff 92       	push	r15
    32fc:	0f 93       	push	r16
    32fe:	1f 93       	push	r17
    3300:	cf 93       	push	r28
    3302:	df 93       	push	r29
    3304:	00 d0       	rcall	.+0      	; 0x3306 <_Z6ms_div12si5351_clockhh+0xc>
    3306:	cd b7       	in	r28, 0x3d	; 61
    3308:	de b7       	in	r29, 0x3e	; 62
		uint8_t reg_val, reg_addr;
		uint8_t data[2];

		switch(clk)
    330a:	81 30       	cpi	r24, 0x01	; 1
    330c:	71 f0       	breq	.+28     	; 0x332a <_Z6ms_div12si5351_clockhh+0x30>
    330e:	18 f0       	brcs	.+6      	; 0x3316 <_Z6ms_div12si5351_clockhh+0x1c>
    3310:	82 30       	cpi	r24, 0x02	; 2
    3312:	31 f0       	breq	.+12     	; 0x3320 <_Z6ms_div12si5351_clockhh+0x26>
    3314:	29 c0       	rjmp	.+82     	; 0x3368 <_Z6ms_div12si5351_clockhh+0x6e>
		{
			case SI5351_CLK0:
			{
				reg_addr = SI5351_CLK0_PARAMETERS + 2;
    3316:	0f 2e       	mov	r0, r31
    3318:	fc e2       	ldi	r31, 0x2C	; 44
    331a:	ff 2e       	mov	r15, r31
    331c:	f0 2d       	mov	r31, r0
    331e:	09 c0       	rjmp	.+18     	; 0x3332 <_Z6ms_div12si5351_clockhh+0x38>
			}
			break;

			case SI5351_CLK2:
			{
				reg_addr = SI5351_CLK2_PARAMETERS + 2;
    3320:	0f 2e       	mov	r0, r31
    3322:	fc e3       	ldi	r31, 0x3C	; 60
    3324:	ff 2e       	mov	r15, r31
    3326:	f0 2d       	mov	r31, r0
			}
			break;
    3328:	04 c0       	rjmp	.+8      	; 0x3332 <_Z6ms_div12si5351_clockhh+0x38>
			}
			break;

			case SI5351_CLK1:
			{
				reg_addr = SI5351_CLK1_PARAMETERS + 2;
    332a:	0f 2e       	mov	r0, r31
    332c:	f4 e3       	ldi	r31, 0x34	; 52
    332e:	ff 2e       	mov	r15, r31
    3330:	f0 2d       	mov	r31, r0
    3332:	04 2f       	mov	r16, r20
    3334:	16 2f       	mov	r17, r22

			default:
				return;
		}

		data[0] = reg_addr;
    3336:	f9 82       	std	Y+1, r15	; 0x01
		
		if(si5351_read_bulk(data, 1))
    3338:	61 e0       	ldi	r22, 0x01	; 1
    333a:	ce 01       	movw	r24, r28
    333c:	01 96       	adiw	r24, 0x01	; 1
    333e:	0e 94 e2 18 	call	0x31c4	; 0x31c4 <_Z16si5351_read_bulkPhh>
    3342:	81 11       	cpse	r24, r1
    3344:	11 c0       	rjmp	.+34     	; 0x3368 <_Z6ms_div12si5351_clockhh+0x6e>
		{
			return;
		}
		
		reg_val = data[0];
    3346:	69 81       	ldd	r22, Y+1	; 0x01

		/* Clear the appropriate bits */
		reg_val &= ~(0x7c);
    3348:	86 2f       	mov	r24, r22
    334a:	83 78       	andi	r24, 0x83	; 131

		if(div_by_4)
    334c:	01 11       	cpse	r16, r1
		{
			reg_val |= (SI5351_OUTPUT_CLK_DIVBY4);
    334e:	8c 60       	ori	r24, 0x0C	; 12
		else
		{
			reg_val &= ~(SI5351_OUTPUT_CLK_DIVBY4);
		}

		reg_val |= (r_div << SI5351_OUTPUT_CLK_DIV_SHIFT);
    3350:	90 e1       	ldi	r25, 0x10	; 16
    3352:	19 9f       	mul	r17, r25
    3354:	b0 01       	movw	r22, r0
    3356:	11 24       	eor	r1, r1
    3358:	68 2b       	or	r22, r24

		data[0] = reg_addr;
    335a:	f9 82       	std	Y+1, r15	; 0x01
		data[1] = reg_val;
    335c:	6a 83       	std	Y+2, r22	; 0x02
		si5351_write_bulk(data, 2);
    335e:	62 e0       	ldi	r22, 0x02	; 2
    3360:	ce 01       	movw	r24, r28
    3362:	01 96       	adiw	r24, 0x01	; 1
    3364:	0e 94 97 18 	call	0x312e	; 0x312e <_Z17si5351_write_bulkPhh>
	}
    3368:	0f 90       	pop	r0
    336a:	0f 90       	pop	r0
    336c:	df 91       	pop	r29
    336e:	cf 91       	pop	r28
    3370:	1f 91       	pop	r17
    3372:	0f 91       	pop	r16
    3374:	ff 90       	pop	r15
    3376:	08 95       	ret

00003378 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regshhh>:
 * r_div - Desired r_div ratio
 * div_by_4 - 1 Divide By 4 mode: 0 to disable
 *
 */
	void set_multisynth_registers(Si5351_clock clk, Union_si5351_regs ms_reg, BOOL int_mode, uint8_t r_div, BOOL div_by_4)
	{
    3378:	8f 92       	push	r8
    337a:	af 92       	push	r10
    337c:	cf 92       	push	r12
    337e:	df 92       	push	r13
    3380:	ef 92       	push	r14
    3382:	ff 92       	push	r15
    3384:	0f 93       	push	r16
    3386:	1f 93       	push	r17
    3388:	cf 93       	push	r28
    338a:	df 93       	push	r29
    338c:	cd b7       	in	r28, 0x3d	; 61
    338e:	de b7       	in	r29, 0x3e	; 62
    3390:	69 97       	sbiw	r28, 0x19	; 25
    3392:	cd bf       	out	0x3d, r28	; 61
    3394:	de bf       	out	0x3e, r29	; 62
    3396:	f8 2e       	mov	r15, r24
    3398:	ce 86       	std	Y+14, r12	; 0x0e
    339a:	df 86       	std	Y+15, r13	; 0x0f
    339c:	e8 8a       	std	Y+16, r14	; 0x10
    339e:	0a 8b       	std	Y+18, r16	; 0x12
    33a0:	1b 8b       	std	Y+19, r17	; 0x13
    33a2:	2c 8b       	std	Y+20, r18	; 0x14
    33a4:	68 8f       	std	Y+24, r22	; 0x18
		uint8_t i = 1;
		uint8_t reg_val;
		uint8_t data[2];

		/* Registers 42-43 for CLK0; 50-51 for CLK1 */
		params[i++] = ms_reg.reg.p3_1;
    33a6:	5a 83       	std	Y+2, r21	; 0x02
		params[i++] = ms_reg.reg.p3_0;
    33a8:	4b 83       	std	Y+3, r20	; 0x03

		data[0] = (SI5351_CLK0_PARAMETERS + 2) + (clk * 8);
    33aa:	88 0f       	add	r24, r24
    33ac:	88 0f       	add	r24, r24
    33ae:	88 0f       	add	r24, r24
    33b0:	84 5d       	subi	r24, 0xD4	; 212
    33b2:	8c 87       	std	Y+12, r24	; 0x0c
		/* Register 44 for CLK0; 52 for CLK1 */
		if(si5351_read_bulk(data, 1))
    33b4:	61 e0       	ldi	r22, 0x01	; 1
    33b6:	ce 01       	movw	r24, r28
    33b8:	0c 96       	adiw	r24, 0x0c	; 12
    33ba:	0e 94 e2 18 	call	0x31c4	; 0x31c4 <_Z16si5351_read_bulkPhh>
    33be:	81 11       	cpse	r24, r1
    33c0:	40 c0       	rjmp	.+128    	; 0x3442 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regshhh+0xca>
		{
			return;
		}
		
		reg_val = data[0];
    33c2:	8c 85       	ldd	r24, Y+12	; 0x0c

		reg_val &= 0xFC;    /*~(0x03); */
    33c4:	98 2f       	mov	r25, r24
    33c6:	9c 7f       	andi	r25, 0xFC	; 252
		params[i++] = reg_val | (ms_reg.reg.p1_2 & 0x03);
    33c8:	88 89       	ldd	r24, Y+16	; 0x10
    33ca:	83 70       	andi	r24, 0x03	; 3
    33cc:	89 2b       	or	r24, r25
    33ce:	8c 83       	std	Y+4, r24	; 0x04

		/* Registers 45-46 for CLK0 */
		params[i++] = ms_reg.reg.p1_1;
    33d0:	8f 85       	ldd	r24, Y+15	; 0x0f
    33d2:	8d 83       	std	Y+5, r24	; 0x05
		params[i++] = ms_reg.reg.p1_0;
    33d4:	8e 85       	ldd	r24, Y+14	; 0x0e
    33d6:	8e 83       	std	Y+6, r24	; 0x06

		/* Register 47 for CLK0 */
		params[i] = (ms_reg.reg.p3_2 << 4);
    33d8:	98 8d       	ldd	r25, Y+24	; 0x18
		params[i++] += (ms_reg.reg.p2_2 & 0x0F);
    33da:	8c 89       	ldd	r24, Y+20	; 0x14
    33dc:	8f 70       	andi	r24, 0x0F	; 15
    33de:	20 e1       	ldi	r18, 0x10	; 16
    33e0:	92 9f       	mul	r25, r18
    33e2:	80 0d       	add	r24, r0
    33e4:	11 24       	eor	r1, r1
    33e6:	8f 83       	std	Y+7, r24	; 0x07

		/* Registers 48-49 for CLK0 */
		params[i++] = ms_reg.reg.p2_1;
    33e8:	8b 89       	ldd	r24, Y+19	; 0x13
    33ea:	88 87       	std	Y+8, r24	; 0x08
		params[i++] = ms_reg.reg.p2_0;
    33ec:	8a 89       	ldd	r24, Y+18	; 0x12
    33ee:	89 87       	std	Y+9, r24	; 0x09

		/* Write the parameters */
		switch(clk)
    33f0:	81 e0       	ldi	r24, 0x01	; 1
    33f2:	f8 16       	cp	r15, r24
    33f4:	71 f0       	breq	.+28     	; 0x3412 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regshhh+0x9a>
    33f6:	f8 16       	cp	r15, r24
    33f8:	20 f0       	brcs	.+8      	; 0x3402 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regshhh+0x8a>
    33fa:	22 e0       	ldi	r18, 0x02	; 2
    33fc:	f2 16       	cp	r15, r18
    33fe:	89 f0       	breq	.+34     	; 0x3422 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regshhh+0xaa>
    3400:	17 c0       	rjmp	.+46     	; 0x3430 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regshhh+0xb8>
		{
			case SI5351_CLK0:
			{
				params[0] = SI5351_CLK0_PARAMETERS;
    3402:	8a e2       	ldi	r24, 0x2A	; 42
    3404:	89 83       	std	Y+1, r24	; 0x01
				si5351_write_bulk(params, i);
    3406:	69 e0       	ldi	r22, 0x09	; 9
    3408:	ce 01       	movw	r24, r28
    340a:	01 96       	adiw	r24, 0x01	; 1
    340c:	0e 94 97 18 	call	0x312e	; 0x312e <_Z17si5351_write_bulkPhh>
			}
			break;
    3410:	0f c0       	rjmp	.+30     	; 0x3430 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regshhh+0xb8>

			case SI5351_CLK1:
			{
				params[0] = SI5351_CLK1_PARAMETERS;
    3412:	82 e3       	ldi	r24, 0x32	; 50
    3414:	89 83       	std	Y+1, r24	; 0x01
				si5351_write_bulk(params, i);
    3416:	69 e0       	ldi	r22, 0x09	; 9
    3418:	ce 01       	movw	r24, r28
    341a:	01 96       	adiw	r24, 0x01	; 1
    341c:	0e 94 97 18 	call	0x312e	; 0x312e <_Z17si5351_write_bulkPhh>
			}
			break;
    3420:	07 c0       	rjmp	.+14     	; 0x3430 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regshhh+0xb8>

			case SI5351_CLK2:
			{
				params[0] = SI5351_CLK2_PARAMETERS;
    3422:	8a e3       	ldi	r24, 0x3A	; 58
    3424:	89 83       	std	Y+1, r24	; 0x01
				si5351_write_bulk(params, i);
    3426:	69 e0       	ldi	r22, 0x09	; 9
    3428:	ce 01       	movw	r24, r28
    342a:	01 96       	adiw	r24, 0x01	; 1
    342c:	0e 94 97 18 	call	0x312e	; 0x312e <_Z17si5351_write_bulkPhh>
			{
			}
			break;
		}

		set_integer_mode(clk, int_mode);
    3430:	6a 2d       	mov	r22, r10
    3432:	8f 2d       	mov	r24, r15
    3434:	0e 94 57 19 	call	0x32ae	; 0x32ae <_Z16set_integer_mode12si5351_clockh>
		ms_div(clk, r_div, div_by_4);
    3438:	4e a1       	ldd	r20, Y+38	; 0x26
    343a:	68 2d       	mov	r22, r8
    343c:	8f 2d       	mov	r24, r15
    343e:	0e 94 7d 19 	call	0x32fa	; 0x32fa <_Z6ms_div12si5351_clockhh>
	}
    3442:	69 96       	adiw	r28, 0x19	; 25
    3444:	cd bf       	out	0x3d, r28	; 61
    3446:	de bf       	out	0x3e, r29	; 62
    3448:	df 91       	pop	r29
    344a:	cf 91       	pop	r28
    344c:	1f 91       	pop	r17
    344e:	0f 91       	pop	r16
    3450:	ff 90       	pop	r15
    3452:	ef 90       	pop	r14
    3454:	df 90       	pop	r13
    3456:	cf 90       	pop	r12
    3458:	af 90       	pop	r10
    345a:	8f 90       	pop	r8
    345c:	08 95       	ret

0000345e <_Z15si5351_set_freqm12si5351_clockh>:
 *
 * Returns TRUE on failure
 *
 */
	BOOL si5351_set_freq(Frequency_Hz freq_Fout, Si5351_clock clk, BOOL clocksOff)
	{
    345e:	2f 92       	push	r2
    3460:	3f 92       	push	r3
    3462:	4f 92       	push	r4
    3464:	5f 92       	push	r5
    3466:	6f 92       	push	r6
    3468:	7f 92       	push	r7
    346a:	8f 92       	push	r8
    346c:	9f 92       	push	r9
    346e:	af 92       	push	r10
    3470:	bf 92       	push	r11
    3472:	cf 92       	push	r12
    3474:	df 92       	push	r13
    3476:	ef 92       	push	r14
    3478:	ff 92       	push	r15
    347a:	0f 93       	push	r16
    347c:	1f 93       	push	r17
    347e:	cf 93       	push	r28
    3480:	df 93       	push	r29
    3482:	cd b7       	in	r28, 0x3d	; 61
    3484:	de b7       	in	r29, 0x3e	; 62
    3486:	60 97       	sbiw	r28, 0x10	; 16
    3488:	cd bf       	out	0x3d, r28	; 61
    348a:	de bf       	out	0x3e, r29	; 62
    348c:	6b 01       	movw	r12, r22
    348e:	7c 01       	movw	r14, r24
    3490:	b4 2e       	mov	r11, r20
    3492:	72 2e       	mov	r7, r18
		Union_si5351_regs ms_reg;
		Frequency_Hz freq_VCO = 0;
		Si5351_pll target_pll;
		uint8_t clock_ctrl_addr;
		uint8_t r_div = SI5351_OUTPUT_CLK_DIV_1;
		BOOL int_mode = FALSE;
    3494:	1d 86       	std	Y+13, r1	; 0x0d
		BOOL div_by_4 = FALSE;
    3496:	1e 86       	std	Y+14, r1	; 0x0e
#endif

#ifdef PREVENT_UNACHIEVABLE_FREQUENCIES
			/* Prevent unachievable frequencies from being entered. The Si5351 will accept these, but some may result */
			/* in no clock output. */
			if(freq_Fout > 999999)
    3498:	80 e4       	ldi	r24, 0x40	; 64
    349a:	c8 16       	cp	r12, r24
    349c:	82 e4       	ldi	r24, 0x42	; 66
    349e:	d8 06       	cpc	r13, r24
    34a0:	8f e0       	ldi	r24, 0x0F	; 15
    34a2:	e8 06       	cpc	r14, r24
    34a4:	f1 04       	cpc	r15, r1
    34a6:	70 f0       	brcs	.+28     	; 0x34c4 <_Z15si5351_set_freqm12si5351_clockh+0x66>
			{
				freq_Fout /= 100;
    34a8:	c7 01       	movw	r24, r14
    34aa:	b6 01       	movw	r22, r12
    34ac:	24 e6       	ldi	r18, 0x64	; 100
    34ae:	30 e0       	ldi	r19, 0x00	; 0
    34b0:	40 e0       	ldi	r20, 0x00	; 0
    34b2:	50 e0       	ldi	r21, 0x00	; 0
    34b4:	0e 94 f4 20 	call	0x41e8	; 0x41e8 <__udivmodsi4>
				freq_Fout *= 100;
    34b8:	a4 e6       	ldi	r26, 0x64	; 100
    34ba:	b0 e0       	ldi	r27, 0x00	; 0
    34bc:	0e 94 54 21 	call	0x42a8	; 0x42a8 <__muluhisi3>
    34c0:	6b 01       	movw	r12, r22
    34c2:	7c 01       	movw	r14, r24
		/* Determine which PLL to use: CLK0 gets PLLA, CLK1 and CLK2 get PLLB */
		/* The first of CLK1 or CLK2 to be configured, determines the VCO frequency used for PLLB. */
		/* The second of CLK1 or CLK2 to be configured will attempt to achieve Fout by adjusting the */
		/* Multisynth Divider values only. */
		/* Only good for Si5351A3 variant */
		switch(clk)
    34c4:	81 e0       	ldi	r24, 0x01	; 1
    34c6:	b8 16       	cp	r11, r24
    34c8:	c9 f0       	breq	.+50     	; 0x34fc <_Z15si5351_set_freqm12si5351_clockh+0x9e>
    34ca:	b8 16       	cp	r11, r24
    34cc:	20 f0       	brcs	.+8      	; 0x34d6 <_Z15si5351_set_freqm12si5351_clockh+0x78>
    34ce:	82 e0       	ldi	r24, 0x02	; 2
    34d0:	b8 16       	cp	r11, r24
    34d2:	99 f1       	breq	.+102    	; 0x353a <_Z15si5351_set_freqm12si5351_clockh+0xdc>
    34d4:	e9 c0       	rjmp	.+466    	; 0x36a8 <_Z15si5351_set_freqm12si5351_clockh+0x24a>
		{
			case SI5351_CLK0:
			{
				enabledClocksMask |= 0x01;
    34d6:	80 91 fe 42 	lds	r24, 0x42FE	; 0x8042fe <_ZL17enabledClocksMask>
    34da:	81 60       	ori	r24, 0x01	; 1
    34dc:	80 93 fe 42 	sts	0x42FE, r24	; 0x8042fe <_ZL17enabledClocksMask>
// 				data[0] = 3;
// 				data[1] = ~enabledClocksMask | 0xF9;
/*			si5351_write_bulk(data, 2); // only disable CLK0 */

				target_pll = SI5351_PLLA;
				clock_out[SI5351_CLK0] = freq_Fout; /* store the value for reference */
    34e0:	c0 92 f2 42 	sts	0x42F2, r12	; 0x8042f2 <_ZL9clock_out>
    34e4:	d0 92 f3 42 	sts	0x42F3, r13	; 0x8042f3 <_ZL9clock_out+0x1>
    34e8:	e0 92 f4 42 	sts	0x42F4, r14	; 0x8042f4 <_ZL9clock_out+0x2>
    34ec:	f0 92 f5 42 	sts	0x42F5, r15	; 0x8042f5 <_ZL9clock_out+0x3>
		switch(clk)
		{
			case SI5351_CLK0:
			{
				enabledClocksMask |= 0x01;
				clock_ctrl_addr = 16;
    34f0:	68 94       	set
    34f2:	66 24       	eor	r6, r6
    34f4:	64 f8       	bld	r6, 4
				/* Set CLKx_DIS high; Reg. 3 = 0xFF */
// 				data[0] = 3;
// 				data[1] = ~enabledClocksMask | 0xF9;
/*			si5351_write_bulk(data, 2); // only disable CLK0 */

				target_pll = SI5351_PLLA;
    34f6:	99 24       	eor	r9, r9
    34f8:	93 94       	inc	r9
				clock_out[SI5351_CLK0] = freq_Fout; /* store the value for reference */
			}
			break;
    34fa:	3d c0       	rjmp	.+122    	; 0x3576 <_Z15si5351_set_freqm12si5351_clockh+0x118>
			case SI5351_CLK1:
			{
				/* No checking is performed to ensure that PLLB is not unavailable due to other output being < 1.024 MHz or >= 112.5 MHz */
				/* User must ensure the clock design is valid before setting clocks */

				enabledClocksMask |= 0x02;
    34fc:	80 91 fe 42 	lds	r24, 0x42FE	; 0x8042fe <_ZL17enabledClocksMask>
    3500:	82 60       	ori	r24, 0x02	; 2
    3502:	80 93 fe 42 	sts	0x42FE, r24	; 0x8042fe <_ZL17enabledClocksMask>
				clock_ctrl_addr = 17;

				/* Block 1: Disable Outputs */
				/* Set CLKx_DIS high; Reg. 3 = 0xFF */
 				data[0] = 3;
    3506:	93 e0       	ldi	r25, 0x03	; 3
    3508:	9f 87       	std	Y+15, r25	; 0x0f
 				data[1] = ~enabledClocksMask | 0xFA;
    350a:	80 95       	com	r24
    350c:	8a 6f       	ori	r24, 0xFA	; 250
    350e:	88 8b       	std	Y+16, r24	; 0x10
				si5351_write_bulk(data, 2); /* only disable CLK1 */
    3510:	62 e0       	ldi	r22, 0x02	; 2
    3512:	ce 01       	movw	r24, r28
    3514:	0f 96       	adiw	r24, 0x0f	; 15
    3516:	0e 94 97 18 	call	0x312e	; 0x312e <_Z17si5351_write_bulkPhh>

				target_pll = SI5351_PLLB;
				clock_out[SI5351_CLK1] = freq_Fout;         /* store the value for reference */
    351a:	c0 92 f6 42 	sts	0x42F6, r12	; 0x8042f6 <_ZL9clock_out+0x4>
    351e:	d0 92 f7 42 	sts	0x42F7, r13	; 0x8042f7 <_ZL9clock_out+0x5>
    3522:	e0 92 f8 42 	sts	0x42F8, r14	; 0x8042f8 <_ZL9clock_out+0x6>
    3526:	f0 92 f9 42 	sts	0x42F9, r15	; 0x8042f9 <_ZL9clock_out+0x7>
			{
				/* No checking is performed to ensure that PLLB is not unavailable due to other output being < 1.024 MHz or >= 112.5 MHz */
				/* User must ensure the clock design is valid before setting clocks */

				enabledClocksMask |= 0x02;
				clock_ctrl_addr = 17;
    352a:	0f 2e       	mov	r0, r31
    352c:	f1 e1       	ldi	r31, 0x11	; 17
    352e:	6f 2e       	mov	r6, r31
    3530:	f0 2d       	mov	r31, r0
				/* Set CLKx_DIS high; Reg. 3 = 0xFF */
 				data[0] = 3;
 				data[1] = ~enabledClocksMask | 0xFA;
				si5351_write_bulk(data, 2); /* only disable CLK1 */

				target_pll = SI5351_PLLB;
    3532:	68 94       	set
    3534:	99 24       	eor	r9, r9
    3536:	91 f8       	bld	r9, 1
				clock_out[SI5351_CLK1] = freq_Fout;         /* store the value for reference */
			}
			break;
    3538:	1e c0       	rjmp	.+60     	; 0x3576 <_Z15si5351_set_freqm12si5351_clockh+0x118>
			case SI5351_CLK2:
			{
				/* No checking is performed to ensure that PLLB is not unavailable due to other output being < 1.024 MHz or >= 112.5 MHz */
				/* User must ensure the clock design is valid before setting clocks */

				enabledClocksMask |= 0x04;
    353a:	80 91 fe 42 	lds	r24, 0x42FE	; 0x8042fe <_ZL17enabledClocksMask>
    353e:	84 60       	ori	r24, 0x04	; 4
    3540:	80 93 fe 42 	sts	0x42FE, r24	; 0x8042fe <_ZL17enabledClocksMask>
				clock_ctrl_addr = 18;

				/* Block 1: Disable Outputs */
				/* Set CLKx_DIS high; Reg. 3 = 0xFF */
 				data[0] = 3;
    3544:	93 e0       	ldi	r25, 0x03	; 3
    3546:	9f 87       	std	Y+15, r25	; 0x0f
 				data[1] = ~enabledClocksMask | 0xFC; /* only disable CLK2 */
    3548:	80 95       	com	r24
    354a:	8c 6f       	ori	r24, 0xFC	; 252
    354c:	88 8b       	std	Y+16, r24	; 0x10
 				si5351_write_bulk(data, 2); /* only disable CLK1 */
    354e:	62 e0       	ldi	r22, 0x02	; 2
    3550:	ce 01       	movw	r24, r28
    3552:	0f 96       	adiw	r24, 0x0f	; 15
    3554:	0e 94 97 18 	call	0x312e	; 0x312e <_Z17si5351_write_bulkPhh>

				target_pll = SI5351_PLLB;
				clock_out[SI5351_CLK2] = freq_Fout;         /* store the value for reference */
    3558:	c0 92 fa 42 	sts	0x42FA, r12	; 0x8042fa <_ZL9clock_out+0x8>
    355c:	d0 92 fb 42 	sts	0x42FB, r13	; 0x8042fb <_ZL9clock_out+0x9>
    3560:	e0 92 fc 42 	sts	0x42FC, r14	; 0x8042fc <_ZL9clock_out+0xa>
    3564:	f0 92 fd 42 	sts	0x42FD, r15	; 0x8042fd <_ZL9clock_out+0xb>
			{
				/* No checking is performed to ensure that PLLB is not unavailable due to other output being < 1.024 MHz or >= 112.5 MHz */
				/* User must ensure the clock design is valid before setting clocks */

				enabledClocksMask |= 0x04;
				clock_ctrl_addr = 18;
    3568:	0f 2e       	mov	r0, r31
    356a:	f2 e1       	ldi	r31, 0x12	; 18
    356c:	6f 2e       	mov	r6, r31
    356e:	f0 2d       	mov	r31, r0
				/* Set CLKx_DIS high; Reg. 3 = 0xFF */
 				data[0] = 3;
 				data[1] = ~enabledClocksMask | 0xFC; /* only disable CLK2 */
 				si5351_write_bulk(data, 2); /* only disable CLK1 */

				target_pll = SI5351_PLLB;
    3570:	68 94       	set
    3572:	99 24       	eor	r9, r9
    3574:	91 f8       	bld	r9, 1
			Frequency_Hz freq_VCO_calc;
			Frequency_Hz fout_calc;
			int32_t f_err;
#endif

		if((target_pll == SI5351_PLLA) || !freqVCOB)
    3576:	81 e0       	ldi	r24, 0x01	; 1
    3578:	98 16       	cp	r9, r24
    357a:	61 f0       	breq	.+24     	; 0x3594 <_Z15si5351_set_freqm12si5351_clockh+0x136>
    357c:	80 91 ff 42 	lds	r24, 0x42FF	; 0x8042ff <_ZL8freqVCOB>
    3580:	90 91 00 43 	lds	r25, 0x4300	; 0x804300 <_ZL8freqVCOB+0x1>
    3584:	a0 91 01 43 	lds	r26, 0x4301	; 0x804301 <_ZL8freqVCOB+0x2>
    3588:	b0 91 02 43 	lds	r27, 0x4302	; 0x804302 <_ZL8freqVCOB+0x3>
    358c:	89 2b       	or	r24, r25
    358e:	8a 2b       	or	r24, r26
    3590:	8b 2b       	or	r24, r27
    3592:	81 f4       	brne	.+32     	; 0x35b4 <_Z15si5351_set_freqm12si5351_clockh+0x156>
		{
#ifdef DEBUGGING_ONLY
				freq_VCO = multisynth_calc(freq_Fout, &ms_reg, &int_mode, &div_by_4, &div);
#else
				freq_VCO = multisynth_calc(freq_Fout, &ms_reg, &int_mode, &div_by_4);
    3594:	8e 01       	movw	r16, r28
    3596:	02 5f       	subi	r16, 0xF2	; 242
    3598:	1f 4f       	sbci	r17, 0xFF	; 255
    359a:	9e 01       	movw	r18, r28
    359c:	23 5f       	subi	r18, 0xF3	; 243
    359e:	3f 4f       	sbci	r19, 0xFF	; 255
    35a0:	ae 01       	movw	r20, r28
    35a2:	4f 5f       	subi	r20, 0xFF	; 255
    35a4:	5f 4f       	sbci	r21, 0xFF	; 255
    35a6:	c7 01       	movw	r24, r14
    35a8:	b6 01       	movw	r22, r12
    35aa:	0e 94 9f 16 	call	0x2d3e	; 0x2d3e <_Z15multisynth_calcmP13u_si5351_regsPhS1_>
    35ae:	1b 01       	movw	r2, r22
    35b0:	2c 01       	movw	r4, r24
    35b2:	10 c0       	rjmp	.+32     	; 0x35d4 <_Z15si5351_set_freqm12si5351_clockh+0x176>
		else
		{
#ifdef DEBUGGING_ONLY
				fout_calc = freq_Fout;  /* save the intended output frequency */
#endif
			freq_Fout = multisynth_estimate(freq_Fout, &ms_reg, &int_mode, &div_by_4);
    35b4:	8e 01       	movw	r16, r28
    35b6:	02 5f       	subi	r16, 0xF2	; 242
    35b8:	1f 4f       	sbci	r17, 0xFF	; 255
    35ba:	9e 01       	movw	r18, r28
    35bc:	23 5f       	subi	r18, 0xF3	; 243
    35be:	3f 4f       	sbci	r19, 0xFF	; 255
    35c0:	ae 01       	movw	r20, r28
    35c2:	4f 5f       	subi	r20, 0xFF	; 255
    35c4:	5f 4f       	sbci	r21, 0xFF	; 255
    35c6:	c7 01       	movw	r24, r14
    35c8:	b6 01       	movw	r22, r12
    35ca:	0e 94 71 17 	call	0x2ee2	; 0x2ee2 <_Z19multisynth_estimatemP13u_si5351_regsPhS1_>
 *
 */
	BOOL si5351_set_freq(Frequency_Hz freq_Fout, Si5351_clock clk, BOOL clocksOff)
	{
		Union_si5351_regs ms_reg;
		Frequency_Hz freq_VCO = 0;
    35ce:	21 2c       	mov	r2, r1
    35d0:	31 2c       	mov	r3, r1
    35d2:	21 01       	movw	r4, r2
#endif
			freq_Fout = multisynth_estimate(freq_Fout, &ms_reg, &int_mode, &div_by_4);
		}

		/* Set multisynth registers (MS must be set before PLL) */
		set_multisynth_registers_source(clk, target_pll);
    35d4:	69 2d       	mov	r22, r9
    35d6:	8b 2d       	mov	r24, r11
    35d8:	0e 94 2f 19 	call	0x325e	; 0x325e <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll>
		set_multisynth_registers(clk, ms_reg, int_mode, r_div, div_by_4);
    35dc:	8e 85       	ldd	r24, Y+14	; 0x0e
    35de:	8f 93       	push	r24
    35e0:	81 2c       	mov	r8, r1
    35e2:	ad 84       	ldd	r10, Y+13	; 0x0d
    35e4:	c9 80       	ldd	r12, Y+1	; 0x01
    35e6:	da 80       	ldd	r13, Y+2	; 0x02
    35e8:	eb 80       	ldd	r14, Y+3	; 0x03
    35ea:	fc 80       	ldd	r15, Y+4	; 0x04
    35ec:	0d 81       	ldd	r16, Y+5	; 0x05
    35ee:	1e 81       	ldd	r17, Y+6	; 0x06
    35f0:	2f 81       	ldd	r18, Y+7	; 0x07
    35f2:	38 85       	ldd	r19, Y+8	; 0x08
    35f4:	49 85       	ldd	r20, Y+9	; 0x09
    35f6:	5a 85       	ldd	r21, Y+10	; 0x0a
    35f8:	6b 85       	ldd	r22, Y+11	; 0x0b
    35fa:	7c 85       	ldd	r23, Y+12	; 0x0c
    35fc:	8b 2d       	mov	r24, r11
    35fe:	0e 94 bc 19 	call	0x3378	; 0x3378 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regshhh>
				fout_calc = freq_VCO_calc / div;
			}

			f_err = freq_Fout - fout_calc;
#else
			if(freq_VCO)
    3602:	0f 90       	pop	r0
    3604:	21 14       	cp	r2, r1
    3606:	31 04       	cpc	r3, r1
    3608:	41 04       	cpc	r4, r1
    360a:	51 04       	cpc	r5, r1
    360c:	29 f0       	breq	.+10     	; 0x3618 <_Z15si5351_set_freqm12si5351_clockh+0x1ba>
			{
				set_pll(freq_VCO, target_pll);
    360e:	49 2d       	mov	r20, r9
    3610:	c2 01       	movw	r24, r4
    3612:	b1 01       	movw	r22, r2
    3614:	0e 94 a5 18 	call	0x314a	; 0x314a <_Z7set_pllm10si5351_pll>
/*	pll_reset(target_pll); */

		/* Block 6: */
		/* Enable desired outputs */
		/* (see Register 3) */
		if(clocksOff)
    3618:	77 20       	and	r7, r7
    361a:	59 f0       	breq	.+22     	; 0x3632 <_Z15si5351_set_freqm12si5351_clockh+0x1d4>
		{
 			data[0] = 3;
    361c:	83 e0       	ldi	r24, 0x03	; 3
    361e:	8f 87       	std	Y+15, r24	; 0x0f
 			data[1] = enabledClocksMask;
    3620:	80 91 fe 42 	lds	r24, 0x42FE	; 0x8042fe <_ZL17enabledClocksMask>
    3624:	88 8b       	std	Y+16, r24	; 0x10
			si5351_write_bulk(data, 2);    /* disable clock(s) in use */
    3626:	62 e0       	ldi	r22, 0x02	; 2
    3628:	ce 01       	movw	r24, r28
    362a:	0f 96       	adiw	r24, 0x0f	; 15
    362c:	0e 94 97 18 	call	0x312e	; 0x312e <_Z17si5351_write_bulkPhh>
    3630:	0b c0       	rjmp	.+22     	; 0x3648 <_Z15si5351_set_freqm12si5351_clockh+0x1ea>
		}
		else
		{
 			data[0] = 3;
    3632:	83 e0       	ldi	r24, 0x03	; 3
    3634:	8f 87       	std	Y+15, r24	; 0x0f
 			data[1] = ~enabledClocksMask;
    3636:	80 91 fe 42 	lds	r24, 0x42FE	; 0x8042fe <_ZL17enabledClocksMask>
    363a:	80 95       	com	r24
    363c:	88 8b       	std	Y+16, r24	; 0x10
 			si5351_write_bulk(data, 2);  /* only enable clock(s) in use */
    363e:	62 e0       	ldi	r22, 0x02	; 2
    3640:	ce 01       	movw	r24, r28
    3642:	0f 96       	adiw	r24, 0x0f	; 15
    3644:	0e 94 97 18 	call	0x312e	; 0x312e <_Z17si5351_write_bulkPhh>
		}

		/* power up the clock */
		if(target_pll == SI5351_PLLA)
    3648:	81 e0       	ldi	r24, 0x01	; 1
    364a:	98 12       	cpse	r9, r24
    364c:	0a c0       	rjmp	.+20     	; 0x3662 <_Z15si5351_set_freqm12si5351_clockh+0x204>
		{
 			data[0] = clock_ctrl_addr;
    364e:	6f 86       	std	Y+15, r6	; 0x0f
 			data[1] = 0x4C;
    3650:	8c e4       	ldi	r24, 0x4C	; 76
    3652:	88 8b       	std	Y+16, r24	; 0x10
 			si5351_write_bulk(data, 2);  /* power up only clock being set, leaving that clock configured as follows: */
    3654:	62 e0       	ldi	r22, 0x02	; 2
    3656:	ce 01       	movw	r24, r28
    3658:	0f 96       	adiw	r24, 0x0f	; 15
    365a:	0e 94 97 18 	call	0x312e	; 0x312e <_Z17si5351_write_bulkPhh>
			{
				freqVCOB = freq_VCO;
			}
		}

		return(FALSE);
    365e:	80 e0       	ldi	r24, 0x00	; 0
    3660:	26 c0       	rjmp	.+76     	; 0x36ae <_Z15si5351_set_freqm12si5351_clockh+0x250>
			/*   o Integer mode set */
			/*   o Clock powered up */
		}
		else
		{
			if(int_mode)
    3662:	8d 85       	ldd	r24, Y+13	; 0x0d
    3664:	88 23       	and	r24, r24
    3666:	49 f0       	breq	.+18     	; 0x367a <_Z15si5351_set_freqm12si5351_clockh+0x21c>
			{
 				data[0] = clock_ctrl_addr;
    3668:	6f 86       	std	Y+15, r6	; 0x0f
 				data[1] = 0x6C;
    366a:	8c e6       	ldi	r24, 0x6C	; 108
    366c:	88 8b       	std	Y+16, r24	; 0x10
 				si5351_write_bulk(data, 2);  /* power up only clock being set, leaving that clock configured as follows: */
    366e:	62 e0       	ldi	r22, 0x02	; 2
    3670:	ce 01       	movw	r24, r28
    3672:	0f 96       	adiw	r24, 0x0f	; 15
    3674:	0e 94 97 18 	call	0x312e	; 0x312e <_Z17si5351_write_bulkPhh>
    3678:	08 c0       	rjmp	.+16     	; 0x368a <_Z15si5351_set_freqm12si5351_clockh+0x22c>
				/*   o Integer mode set */
				/*   o Clock powered up */
			}
			else
			{
 				data[0] = clock_ctrl_addr;
    367a:	6f 86       	std	Y+15, r6	; 0x0f
 				data[1] = 0x2C;
    367c:	8c e2       	ldi	r24, 0x2C	; 44
    367e:	88 8b       	std	Y+16, r24	; 0x10
 				si5351_write_bulk(data, 2);  /* power up only clock being set, leaving that clock configured as follows: */
    3680:	62 e0       	ldi	r22, 0x02	; 2
    3682:	ce 01       	movw	r24, r28
    3684:	0f 96       	adiw	r24, 0x0f	; 15
    3686:	0e 94 97 18 	call	0x312e	; 0x312e <_Z17si5351_write_bulkPhh>
				/*   o PLLB is multisynth source */
				/*   o Integer mode cleared */
				/*   o Clock powered up */
			}

			if(freq_VCO)
    368a:	21 14       	cp	r2, r1
    368c:	31 04       	cpc	r3, r1
    368e:	41 04       	cpc	r4, r1
    3690:	51 04       	cpc	r5, r1
    3692:	61 f0       	breq	.+24     	; 0x36ac <_Z15si5351_set_freqm12si5351_clockh+0x24e>
			{
				freqVCOB = freq_VCO;
    3694:	20 92 ff 42 	sts	0x42FF, r2	; 0x8042ff <_ZL8freqVCOB>
    3698:	30 92 00 43 	sts	0x4300, r3	; 0x804300 <_ZL8freqVCOB+0x1>
    369c:	40 92 01 43 	sts	0x4301, r4	; 0x804301 <_ZL8freqVCOB+0x2>
    36a0:	50 92 02 43 	sts	0x4302, r5	; 0x804302 <_ZL8freqVCOB+0x3>
			}
		}

		return(FALSE);
    36a4:	80 e0       	ldi	r24, 0x00	; 0
    36a6:	03 c0       	rjmp	.+6      	; 0x36ae <_Z15si5351_set_freqm12si5351_clockh+0x250>
			}
			break;

			default:
			{
				return(TRUE);
    36a8:	81 e0       	ldi	r24, 0x01	; 1
    36aa:	01 c0       	rjmp	.+2      	; 0x36ae <_Z15si5351_set_freqm12si5351_clockh+0x250>
			{
				freqVCOB = freq_VCO;
			}
		}

		return(FALSE);
    36ac:	80 e0       	ldi	r24, 0x00	; 0
	}
    36ae:	60 96       	adiw	r28, 0x10	; 16
    36b0:	cd bf       	out	0x3d, r28	; 61
    36b2:	de bf       	out	0x3e, r29	; 62
    36b4:	df 91       	pop	r29
    36b6:	cf 91       	pop	r28
    36b8:	1f 91       	pop	r17
    36ba:	0f 91       	pop	r16
    36bc:	ff 90       	pop	r15
    36be:	ef 90       	pop	r14
    36c0:	df 90       	pop	r13
    36c2:	cf 90       	pop	r12
    36c4:	bf 90       	pop	r11
    36c6:	af 90       	pop	r10
    36c8:	9f 90       	pop	r9
    36ca:	8f 90       	pop	r8
    36cc:	7f 90       	pop	r7
    36ce:	6f 90       	pop	r6
    36d0:	5f 90       	pop	r5
    36d2:	4f 90       	pop	r4
    36d4:	3f 90       	pop	r3
    36d6:	2f 90       	pop	r2
    36d8:	08 95       	ret

000036da <SLPCTRL_init>:

	// SLPCTRL.CTRLA = 0 << SLPCTRL_SEN_bp /* Sleep enable: disabled */
	//		 | SLPCTRL_SMODE_IDLE_gc; /* Idle mode */

	return 0;
}
    36da:	80 e0       	ldi	r24, 0x00	; 0
    36dc:	08 95       	ret

000036de <TIMERB_init>:
 * \return Initialization status.
 */
int8_t TIMERB_init()
{
TCB0.INTCTRL = 1 << TCB_CAPT_bp   /* Capture or Timeout: enabled */
| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    36de:	e0 e0       	ldi	r30, 0x00	; 0
    36e0:	fb e0       	ldi	r31, 0x0B	; 11
    36e2:	81 e0       	ldi	r24, 0x01	; 1
    36e4:	85 83       	std	Z+5, r24	; 0x05

// Set TOP
TCB0.CCMP = 0x9C40;
    36e6:	20 e4       	ldi	r18, 0x40	; 64
    36e8:	3c e9       	ldi	r19, 0x9C	; 156
    36ea:	24 87       	std	Z+12, r18	; 0x0c
    36ec:	35 87       	std	Z+13, r19	; 0x0d

TCB0.CTRLA = TCB_CLKSEL_DIV2_gc     /* CLK_PER */
| 1 << TCB_ENABLE_bp   /* Enable: enabled */
| 0 << TCB_RUNSTDBY_bp /* Run Standby: disabled */
| 0 << TCB_SYNCUPD_bp  /* Synchronize Update: disabled */
| 0 << TCB_CASCADE_bp; /* Cascade Two Timer/Counters: disabled */
    36ee:	93 e0       	ldi	r25, 0x03	; 3
    36f0:	90 83       	st	Z, r25

TCB0.INTFLAGS = TCB_CAPT_bm; /* Clear flag */
    36f2:	86 83       	std	Z+6, r24	; 0x06

/********************************************************************************/

TCB1.INTCTRL = 1 << TCB_CAPT_bp   /* Capture or Timeout: enabled */
| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    36f4:	e0 e1       	ldi	r30, 0x10	; 16
    36f6:	fb e0       	ldi	r31, 0x0B	; 11
    36f8:	85 83       	std	Z+5, r24	; 0x05

// Set TOP
TCB1.CCMP = 0x5DC0;
    36fa:	40 ec       	ldi	r20, 0xC0	; 192
    36fc:	5d e5       	ldi	r21, 0x5D	; 93
    36fe:	44 87       	std	Z+12, r20	; 0x0c
    3700:	55 87       	std	Z+13, r21	; 0x0d

TCB1.CTRLA = TCB_CLKSEL_DIV1_gc     /* CLK_PER */
| 1 << TCB_ENABLE_bp   /* Enable: enabled */
| 0 << TCB_RUNSTDBY_bp /* Run Standby: disabled */
| 0 << TCB_SYNCUPD_bp  /* Synchronize Update: disabled */
| 0 << TCB_CASCADE_bp; /* Cascade Two Timer/Counters: disabled */
    3702:	80 83       	st	Z, r24

TCB1.INTFLAGS = TCB_CAPT_bm; /* Clear flag */
    3704:	86 83       	std	Z+6, r24	; 0x06


/********************************************************************************/

TCB3.INTCTRL = 1 << TCB_CAPT_bp   /* Capture or Timeout: enabled */
| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    3706:	e0 e3       	ldi	r30, 0x30	; 48
    3708:	fb e0       	ldi	r31, 0x0B	; 11
    370a:	85 83       	std	Z+5, r24	; 0x05

// Set TOP
TCB3.CCMP = 0x9C40;
    370c:	24 87       	std	Z+12, r18	; 0x0c
    370e:	35 87       	std	Z+13, r19	; 0x0d

TCB3.CTRLA = TCB_CLKSEL_DIV2_gc     /* CLK_PER */
| 1 << TCB_ENABLE_bp   /* Enable: enabled */
| 0 << TCB_RUNSTDBY_bp /* Run Standby: disabled */
| 0 << TCB_SYNCUPD_bp  /* Synchronize Update: disabled */
| 0 << TCB_CASCADE_bp; /* Cascade Two Timer/Counters: disabled */
    3710:	90 83       	st	Z, r25

TCB3.INTFLAGS = TCB_CAPT_bm; /* Clear flag */
    3712:	86 83       	std	Z+6, r24	; 0x06

	return 0;
}
    3714:	80 e0       	ldi	r24, 0x00	; 0
    3716:	08 95       	ret

00003718 <util_delay_ms>:


bool util_delay_ms(uint32_t delayValue)
{
    3718:	0f 93       	push	r16
    371a:	1f 93       	push	r17
	static uint32_t countdownValue=0;
	static bool counting = false;
	
	if(delayValue)
    371c:	61 15       	cp	r22, r1
    371e:	71 05       	cpc	r23, r1
    3720:	81 05       	cpc	r24, r1
    3722:	91 05       	cpc	r25, r1
    3724:	09 f4       	brne	.+2      	; 0x3728 <util_delay_ms+0x10>
    3726:	67 c0       	rjmp	.+206    	; 0x37f6 <util_delay_ms+0xde>
	{
		if(counting)
    3728:	20 91 0b 43 	lds	r18, 0x430B	; 0x80430b <_ZZ13util_delay_msE8counting>
    372c:	22 23       	and	r18, r18
    372e:	f1 f1       	breq	.+124    	; 0x37ac <util_delay_ms+0x94>
		{
			if(!g_ms_counter)
    3730:	00 91 0c 43 	lds	r16, 0x430C	; 0x80430c <_ZL12g_ms_counter>
    3734:	10 91 0d 43 	lds	r17, 0x430D	; 0x80430d <_ZL12g_ms_counter+0x1>
    3738:	20 91 0e 43 	lds	r18, 0x430E	; 0x80430e <_ZL12g_ms_counter+0x2>
    373c:	30 91 0f 43 	lds	r19, 0x430F	; 0x80430f <_ZL12g_ms_counter+0x3>
    3740:	01 2b       	or	r16, r17
    3742:	02 2b       	or	r16, r18
    3744:	03 2b       	or	r16, r19
    3746:	71 f4       	brne	.+28     	; 0x3764 <util_delay_ms+0x4c>
			{
				TCB1.INTCTRL = 0 << TCB_CAPT_bp   /* Capture or Timeout: disabled */
				| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    3748:	10 92 15 0b 	sts	0x0B15, r1	; 0x800b15 <__TEXT_REGION_LENGTH__+0x7e0b15>

				counting = false;
    374c:	10 92 0b 43 	sts	0x430B, r1	; 0x80430b <_ZZ13util_delay_msE8counting>
				countdownValue = 0;
    3750:	10 92 07 43 	sts	0x4307, r1	; 0x804307 <_ZZ13util_delay_msE14countdownValue>
    3754:	10 92 08 43 	sts	0x4308, r1	; 0x804308 <_ZZ13util_delay_msE14countdownValue+0x1>
    3758:	10 92 09 43 	sts	0x4309, r1	; 0x804309 <_ZZ13util_delay_msE14countdownValue+0x2>
    375c:	10 92 0a 43 	sts	0x430A, r1	; 0x80430a <_ZZ13util_delay_msE14countdownValue+0x3>
				return(false); /* time expired */
    3760:	80 e0       	ldi	r24, 0x00	; 0
    3762:	62 c0       	rjmp	.+196    	; 0x3828 <util_delay_ms+0x110>
			}
			else if(delayValue != countdownValue) /* countdown delay changed */
    3764:	00 91 07 43 	lds	r16, 0x4307	; 0x804307 <_ZZ13util_delay_msE14countdownValue>
    3768:	10 91 08 43 	lds	r17, 0x4308	; 0x804308 <_ZZ13util_delay_msE14countdownValue+0x1>
    376c:	20 91 09 43 	lds	r18, 0x4309	; 0x804309 <_ZZ13util_delay_msE14countdownValue+0x2>
    3770:	30 91 0a 43 	lds	r19, 0x430A	; 0x80430a <_ZZ13util_delay_msE14countdownValue+0x3>
    3774:	60 17       	cp	r22, r16
    3776:	71 07       	cpc	r23, r17
    3778:	82 07       	cpc	r24, r18
    377a:	93 07       	cpc	r25, r19
    377c:	09 f4       	brne	.+2      	; 0x3780 <util_delay_ms+0x68>
    377e:	51 c0       	rjmp	.+162    	; 0x3822 <util_delay_ms+0x10a>
			{
				TCB1.CNT = 0x0000;
    3780:	10 92 1a 0b 	sts	0x0B1A, r1	; 0x800b1a <__TEXT_REGION_LENGTH__+0x7e0b1a>
    3784:	10 92 1b 0b 	sts	0x0B1B, r1	; 0x800b1b <__TEXT_REGION_LENGTH__+0x7e0b1b>
				countdownValue = delayValue;
    3788:	60 93 07 43 	sts	0x4307, r22	; 0x804307 <_ZZ13util_delay_msE14countdownValue>
    378c:	70 93 08 43 	sts	0x4308, r23	; 0x804308 <_ZZ13util_delay_msE14countdownValue+0x1>
    3790:	80 93 09 43 	sts	0x4309, r24	; 0x804309 <_ZZ13util_delay_msE14countdownValue+0x2>
    3794:	90 93 0a 43 	sts	0x430A, r25	; 0x80430a <_ZZ13util_delay_msE14countdownValue+0x3>
				g_ms_counter = delayValue;
    3798:	60 93 0c 43 	sts	0x430C, r22	; 0x80430c <_ZL12g_ms_counter>
    379c:	70 93 0d 43 	sts	0x430D, r23	; 0x80430d <_ZL12g_ms_counter+0x1>
    37a0:	80 93 0e 43 	sts	0x430E, r24	; 0x80430e <_ZL12g_ms_counter+0x2>
    37a4:	90 93 0f 43 	sts	0x430F, r25	; 0x80430f <_ZL12g_ms_counter+0x3>
				return(false);
    37a8:	80 e0       	ldi	r24, 0x00	; 0
    37aa:	3e c0       	rjmp	.+124    	; 0x3828 <util_delay_ms+0x110>
			}
		}
		else if(delayValue != countdownValue)
    37ac:	00 91 07 43 	lds	r16, 0x4307	; 0x804307 <_ZZ13util_delay_msE14countdownValue>
    37b0:	10 91 08 43 	lds	r17, 0x4308	; 0x804308 <_ZZ13util_delay_msE14countdownValue+0x1>
    37b4:	20 91 09 43 	lds	r18, 0x4309	; 0x804309 <_ZZ13util_delay_msE14countdownValue+0x2>
    37b8:	30 91 0a 43 	lds	r19, 0x430A	; 0x80430a <_ZZ13util_delay_msE14countdownValue+0x3>
    37bc:	60 17       	cp	r22, r16
    37be:	71 07       	cpc	r23, r17
    37c0:	82 07       	cpc	r24, r18
    37c2:	93 07       	cpc	r25, r19
    37c4:	71 f1       	breq	.+92     	; 0x3822 <util_delay_ms+0x10a>
		{
			TCB1.CNT = 0x0000;
    37c6:	10 92 1a 0b 	sts	0x0B1A, r1	; 0x800b1a <__TEXT_REGION_LENGTH__+0x7e0b1a>
    37ca:	10 92 1b 0b 	sts	0x0B1B, r1	; 0x800b1b <__TEXT_REGION_LENGTH__+0x7e0b1b>
			countdownValue = delayValue;
    37ce:	60 93 07 43 	sts	0x4307, r22	; 0x804307 <_ZZ13util_delay_msE14countdownValue>
    37d2:	70 93 08 43 	sts	0x4308, r23	; 0x804308 <_ZZ13util_delay_msE14countdownValue+0x1>
    37d6:	80 93 09 43 	sts	0x4309, r24	; 0x804309 <_ZZ13util_delay_msE14countdownValue+0x2>
    37da:	90 93 0a 43 	sts	0x430A, r25	; 0x80430a <_ZZ13util_delay_msE14countdownValue+0x3>
			g_ms_counter = delayValue;
    37de:	60 93 0c 43 	sts	0x430C, r22	; 0x80430c <_ZL12g_ms_counter>
    37e2:	70 93 0d 43 	sts	0x430D, r23	; 0x80430d <_ZL12g_ms_counter+0x1>
    37e6:	80 93 0e 43 	sts	0x430E, r24	; 0x80430e <_ZL12g_ms_counter+0x2>
    37ea:	90 93 0f 43 	sts	0x430F, r25	; 0x80430f <_ZL12g_ms_counter+0x3>
			counting = true;
    37ee:	81 e0       	ldi	r24, 0x01	; 1
    37f0:	80 93 0b 43 	sts	0x430B, r24	; 0x80430b <_ZZ13util_delay_msE8counting>
    37f4:	16 c0       	rjmp	.+44     	; 0x3822 <util_delay_ms+0x10a>
		}
	}
	else
	{
		TCB1.INTCTRL = 0 << TCB_CAPT_bp   /* Capture or Timeout: disabled */
		| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    37f6:	10 92 15 0b 	sts	0x0B15, r1	; 0x800b15 <__TEXT_REGION_LENGTH__+0x7e0b15>

		counting = false;
    37fa:	10 92 0b 43 	sts	0x430B, r1	; 0x80430b <_ZZ13util_delay_msE8counting>
		countdownValue = 0;
    37fe:	10 92 07 43 	sts	0x4307, r1	; 0x804307 <_ZZ13util_delay_msE14countdownValue>
    3802:	10 92 08 43 	sts	0x4308, r1	; 0x804308 <_ZZ13util_delay_msE14countdownValue+0x1>
    3806:	10 92 09 43 	sts	0x4309, r1	; 0x804309 <_ZZ13util_delay_msE14countdownValue+0x2>
    380a:	10 92 0a 43 	sts	0x430A, r1	; 0x80430a <_ZZ13util_delay_msE14countdownValue+0x3>
		g_ms_counter = 0;
    380e:	10 92 0c 43 	sts	0x430C, r1	; 0x80430c <_ZL12g_ms_counter>
    3812:	10 92 0d 43 	sts	0x430D, r1	; 0x80430d <_ZL12g_ms_counter+0x1>
    3816:	10 92 0e 43 	sts	0x430E, r1	; 0x80430e <_ZL12g_ms_counter+0x2>
    381a:	10 92 0f 43 	sts	0x430F, r1	; 0x80430f <_ZL12g_ms_counter+0x3>
		return(false); /* timer reset */
    381e:	80 e0       	ldi	r24, 0x00	; 0
    3820:	03 c0       	rjmp	.+6      	; 0x3828 <util_delay_ms+0x110>
	}
	
	TCB1.INTCTRL = 1 << TCB_CAPT_bp   /* Capture or Timeout: enabled */
	| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    3822:	81 e0       	ldi	r24, 0x01	; 1
    3824:	80 93 15 0b 	sts	0x0B15, r24	; 0x800b15 <__TEXT_REGION_LENGTH__+0x7e0b15>
	
	return(true);
}
    3828:	1f 91       	pop	r17
    382a:	0f 91       	pop	r16
    382c:	08 95       	ret

0000382e <__vector_13>:

/**
One millisecond utility counter based on CPU clock.
*/
ISR(TCB1_INT_vect)
{
    382e:	1f 92       	push	r1
    3830:	0f 92       	push	r0
    3832:	0f b6       	in	r0, 0x3f	; 63
    3834:	0f 92       	push	r0
    3836:	11 24       	eor	r1, r1
    3838:	8f 93       	push	r24
    383a:	9f 93       	push	r25
    383c:	af 93       	push	r26
    383e:	bf 93       	push	r27
    if(TCB1.INTFLAGS & TCB_CAPT_bm)
    3840:	80 91 16 0b 	lds	r24, 0x0B16	; 0x800b16 <__TEXT_REGION_LENGTH__+0x7e0b16>
    3844:	80 ff       	sbrs	r24, 0
    3846:	1d c0       	rjmp	.+58     	; 0x3882 <__vector_13+0x54>
    {
		if(g_ms_counter) /* check for 1-second interval */
    3848:	80 91 0c 43 	lds	r24, 0x430C	; 0x80430c <_ZL12g_ms_counter>
    384c:	90 91 0d 43 	lds	r25, 0x430D	; 0x80430d <_ZL12g_ms_counter+0x1>
    3850:	a0 91 0e 43 	lds	r26, 0x430E	; 0x80430e <_ZL12g_ms_counter+0x2>
    3854:	b0 91 0f 43 	lds	r27, 0x430F	; 0x80430f <_ZL12g_ms_counter+0x3>
    3858:	00 97       	sbiw	r24, 0x00	; 0
    385a:	a1 05       	cpc	r26, r1
    385c:	b1 05       	cpc	r27, r1
    385e:	61 f0       	breq	.+24     	; 0x3878 <__vector_13+0x4a>
		{
			g_ms_counter--;	
    3860:	01 97       	sbiw	r24, 0x01	; 1
    3862:	a1 09       	sbc	r26, r1
    3864:	b1 09       	sbc	r27, r1
    3866:	80 93 0c 43 	sts	0x430C, r24	; 0x80430c <_ZL12g_ms_counter>
    386a:	90 93 0d 43 	sts	0x430D, r25	; 0x80430d <_ZL12g_ms_counter+0x1>
    386e:	a0 93 0e 43 	sts	0x430E, r26	; 0x80430e <_ZL12g_ms_counter+0x2>
    3872:	b0 93 0f 43 	sts	0x430F, r27	; 0x80430f <_ZL12g_ms_counter+0x3>
    3876:	02 c0       	rjmp	.+4      	; 0x387c <__vector_13+0x4e>
		}
		else
		{
			TCB1.INTCTRL = 0 << TCB_CAPT_bp   /* Capture or Timeout: disabled */
			| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    3878:	10 92 15 0b 	sts	0x0B15, r1	; 0x800b15 <__TEXT_REGION_LENGTH__+0x7e0b15>
		}

        TCB1.INTFLAGS = TCB_CAPT_bm; /* clear interrupt flag */
    387c:	81 e0       	ldi	r24, 0x01	; 1
    387e:	80 93 16 0b 	sts	0x0B16, r24	; 0x800b16 <__TEXT_REGION_LENGTH__+0x7e0b16>
    }
}
    3882:	bf 91       	pop	r27
    3884:	af 91       	pop	r26
    3886:	9f 91       	pop	r25
    3888:	8f 91       	pop	r24
    388a:	0f 90       	pop	r0
    388c:	0f be       	out	0x3f, r0	; 63
    388e:	0f 90       	pop	r0
    3890:	1f 90       	pop	r1
    3892:	18 95       	reti

00003894 <_Z14txSetFrequencyPmh>:

			g_80m_frequency = DEFAULT_TX_80M_FREQUENCY;
			g_80m_power_level_mW = DEFAULT_TX_80M_POWER_MW;
			g_rtty_offset = DEFAULT_RTTY_OFFSET_FREQUENCY;

			saveAllTransmitterEEPROM();
    3894:	0f 93       	push	r16
    3896:	1f 93       	push	r17
    3898:	cf 93       	push	r28
    389a:	df 93       	push	r29
    389c:	fc 01       	movw	r30, r24
    389e:	46 2f       	mov	r20, r22
    38a0:	60 81       	ld	r22, Z
    38a2:	71 81       	ldd	r23, Z+1	; 0x01
    38a4:	82 81       	ldd	r24, Z+2	; 0x02
    38a6:	93 81       	ldd	r25, Z+3	; 0x03
    38a8:	8b 01       	movw	r16, r22
    38aa:	9c 01       	movw	r18, r24
    38ac:	01 5e       	subi	r16, 0xE1	; 225
    38ae:	17 46       	sbci	r17, 0x67	; 103
    38b0:	25 43       	sbci	r18, 0x35	; 53
    38b2:	31 09       	sbc	r19, r1
    38b4:	0f 31       	cpi	r16, 0x1F	; 31
    38b6:	11 4a       	sbci	r17, 0xA1	; 161
    38b8:	27 40       	sbci	r18, 0x07	; 7
    38ba:	31 05       	cpc	r19, r1
    38bc:	98 f4       	brcc	.+38     	; 0x38e4 <_Z14txSetFrequencyPmh+0x50>
    38be:	24 2f       	mov	r18, r20
    38c0:	ef 01       	movw	r28, r30
    38c2:	41 e0       	ldi	r20, 0x01	; 1
    38c4:	0e 94 2f 1a 	call	0x345e	; 0x345e <_Z15si5351_set_freqm12si5351_clockh>
    38c8:	88 81       	ld	r24, Y
    38ca:	99 81       	ldd	r25, Y+1	; 0x01
    38cc:	aa 81       	ldd	r26, Y+2	; 0x02
    38ce:	bb 81       	ldd	r27, Y+3	; 0x03
    38d0:	80 93 26 40 	sts	0x4026, r24	; 0x804026 <_ZL15g_80m_frequency>
    38d4:	90 93 27 40 	sts	0x4027, r25	; 0x804027 <_ZL15g_80m_frequency+0x1>
    38d8:	a0 93 28 40 	sts	0x4028, r26	; 0x804028 <_ZL15g_80m_frequency+0x2>
    38dc:	b0 93 29 40 	sts	0x4029, r27	; 0x804029 <_ZL15g_80m_frequency+0x3>
    38e0:	81 e0       	ldi	r24, 0x01	; 1
    38e2:	01 c0       	rjmp	.+2      	; 0x38e6 <_Z14txSetFrequencyPmh+0x52>
    38e4:	80 e0       	ldi	r24, 0x00	; 0
    38e6:	df 91       	pop	r29
    38e8:	cf 91       	pop	r28
    38ea:	1f 91       	pop	r17
    38ec:	0f 91       	pop	r16
    38ee:	08 95       	ret

000038f0 <_Z14txGetFrequencyv>:
    38f0:	80 91 10 43 	lds	r24, 0x4310	; 0x804310 <_ZL16g_tx_initialized>
    38f4:	88 23       	and	r24, r24
    38f6:	49 f0       	breq	.+18     	; 0x390a <_Z14txGetFrequencyv+0x1a>
    38f8:	60 91 26 40 	lds	r22, 0x4026	; 0x804026 <_ZL15g_80m_frequency>
    38fc:	70 91 27 40 	lds	r23, 0x4027	; 0x804027 <_ZL15g_80m_frequency+0x1>
    3900:	80 91 28 40 	lds	r24, 0x4028	; 0x804028 <_ZL15g_80m_frequency+0x2>
    3904:	90 91 29 40 	lds	r25, 0x4029	; 0x804029 <_ZL15g_80m_frequency+0x3>
    3908:	08 95       	ret
    390a:	60 e0       	ldi	r22, 0x00	; 0
    390c:	70 e0       	ldi	r23, 0x00	; 0
    390e:	cb 01       	movw	r24, r22
    3910:	08 95       	ret

00003912 <_Z18powerToTransmitterh>:
    3912:	80 e0       	ldi	r24, 0x00	; 0
    3914:	08 95       	ret

00003916 <_Z14keyTransmitterh>:
    3916:	88 23       	and	r24, r24
    3918:	61 f0       	breq	.+24     	; 0x3932 <_Z14keyTransmitterh+0x1c>
    391a:	80 91 11 43 	lds	r24, 0x4311	; 0x804311 <_ZL19g_transmitter_keyed>
    391e:	81 11       	cpse	r24, r1
    3920:	0e c0       	rjmp	.+28     	; 0x393e <_Z14keyTransmitterh+0x28>
    3922:	61 e0       	ldi	r22, 0x01	; 1
    3924:	81 e0       	ldi	r24, 0x01	; 1
    3926:	0e 94 f0 18 	call	0x31e0	; 0x31e0 <_Z19si5351_clock_enable12si5351_clockh>
    392a:	81 e0       	ldi	r24, 0x01	; 1
    392c:	80 93 11 43 	sts	0x4311, r24	; 0x804311 <_ZL19g_transmitter_keyed>
    3930:	08 95       	ret
    3932:	60 e0       	ldi	r22, 0x00	; 0
    3934:	81 e0       	ldi	r24, 0x01	; 1
    3936:	0e 94 f0 18 	call	0x31e0	; 0x31e0 <_Z19si5351_clock_enable12si5351_clockh>
    393a:	10 92 11 43 	sts	0x4311, r1	; 0x804311 <_ZL19g_transmitter_keyed>
    393e:	08 95       	ret

00003940 <_Z15txSetParametersPjPh>:
    3940:	cf 93       	push	r28
    3942:	df 93       	push	r29
    3944:	cd b7       	in	r28, 0x3d	; 61
    3946:	de b7       	in	r29, 0x3e	; 62
    3948:	2b 97       	sbiw	r28, 0x0b	; 11
    394a:	cd bf       	out	0x3d, r28	; 61
    394c:	de bf       	out	0x3e, r29	; 62
    394e:	88 87       	std	Y+8, r24	; 0x08
    3950:	99 87       	std	Y+9, r25	; 0x09
    3952:	6a 87       	std	Y+10, r22	; 0x0a
    3954:	7b 87       	std	Y+11, r23	; 0x0b
    3956:	19 82       	std	Y+1, r1	; 0x01
    3958:	1a 82       	std	Y+2, r1	; 0x02
    395a:	1b 82       	std	Y+3, r1	; 0x03
    395c:	1c 82       	std	Y+4, r1	; 0x04
    395e:	88 85       	ldd	r24, Y+8	; 0x08
    3960:	99 85       	ldd	r25, Y+9	; 0x09
    3962:	89 2b       	or	r24, r25
    3964:	39 f0       	breq	.+14     	; 0x3974 <_Z15txSetParametersPjPh+0x34>
    3966:	88 85       	ldd	r24, Y+8	; 0x08
    3968:	99 85       	ldd	r25, Y+9	; 0x09
    396a:	fc 01       	movw	r30, r24
    396c:	80 81       	ld	r24, Z
    396e:	91 81       	ldd	r25, Z+1	; 0x01
    3970:	8b 83       	std	Y+3, r24	; 0x03
    3972:	9c 83       	std	Y+4, r25	; 0x04
    3974:	88 85       	ldd	r24, Y+8	; 0x08
    3976:	99 85       	ldd	r25, Y+9	; 0x09
    3978:	89 2b       	or	r24, r25
    397a:	09 f4       	brne	.+2      	; 0x397e <_Z15txSetParametersPjPh+0x3e>
    397c:	4e c0       	rjmp	.+156    	; 0x3a1a <_Z15txSetParametersPjPh+0xda>
    397e:	8b 81       	ldd	r24, Y+3	; 0x03
    3980:	9c 81       	ldd	r25, Y+4	; 0x04
    3982:	89 38       	cpi	r24, 0x89	; 137
    3984:	93 41       	sbci	r25, 0x13	; 19
    3986:	08 f0       	brcs	.+2      	; 0x398a <_Z15txSetParametersPjPh+0x4a>
    3988:	44 c0       	rjmp	.+136    	; 0x3a12 <_Z15txSetParametersPjPh+0xd2>
    398a:	9e 01       	movw	r18, r28
    398c:	29 5f       	subi	r18, 0xF9	; 249
    398e:	3f 4f       	sbci	r19, 0xFF	; 255
    3990:	ae 01       	movw	r20, r28
    3992:	4a 5f       	subi	r20, 0xFA	; 250
    3994:	5f 4f       	sbci	r21, 0xFF	; 255
    3996:	be 01       	movw	r22, r28
    3998:	6b 5f       	subi	r22, 0xFB	; 251
    399a:	7f 4f       	sbci	r23, 0xFF	; 255
    399c:	ce 01       	movw	r24, r28
    399e:	03 96       	adiw	r24, 0x03	; 3
    39a0:	0e 94 5e 1d 	call	0x3abc	; 0x3abc <_Z22txMilliwattsToSettingsPjPhS0_S0_>
    39a4:	8a 83       	std	Y+2, r24	; 0x02
    39a6:	81 e0       	ldi	r24, 0x01	; 1
    39a8:	9a 81       	ldd	r25, Y+2	; 0x02
    39aa:	9f 3c       	cpi	r25, 0xCF	; 207
    39ac:	09 f0       	breq	.+2      	; 0x39b0 <_Z15txSetParametersPjPh+0x70>
    39ae:	80 e0       	ldi	r24, 0x00	; 0
    39b0:	89 83       	std	Y+1, r24	; 0x01
    39b2:	8b 81       	ldd	r24, Y+3	; 0x03
    39b4:	9c 81       	ldd	r25, Y+4	; 0x04
    39b6:	21 e0       	ldi	r18, 0x01	; 1
    39b8:	89 2b       	or	r24, r25
    39ba:	09 f0       	breq	.+2      	; 0x39be <_Z15txSetParametersPjPh+0x7e>
    39bc:	20 e0       	ldi	r18, 0x00	; 0
    39be:	82 2f       	mov	r24, r18
    39c0:	80 93 30 40 	sts	0x4030, r24	; 0x804030 <g_tx_power_is_zero>
    39c4:	89 81       	ldd	r24, Y+1	; 0x01
    39c6:	88 23       	and	r24, r24
    39c8:	e1 f4       	brne	.+56     	; 0x3a02 <_Z15txSetParametersPjPh+0xc2>
    39ca:	8b 81       	ldd	r24, Y+3	; 0x03
    39cc:	9c 81       	ldd	r25, Y+4	; 0x04
    39ce:	80 93 2a 40 	sts	0x402A, r24	; 0x80402a <_ZL20g_80m_power_level_mW>
    39d2:	90 93 2b 40 	sts	0x402B, r25	; 0x80402b <_ZL20g_80m_power_level_mW+0x1>
    39d6:	0e 94 35 1e 	call	0x3c6a	; 0x3c6a <_Z18txIsAntennaForBandv>
    39da:	98 2f       	mov	r25, r24
    39dc:	81 e0       	ldi	r24, 0x01	; 1
    39de:	99 23       	and	r25, r25
    39e0:	09 f4       	brne	.+2      	; 0x39e4 <_Z15txSetParametersPjPh+0xa4>
    39e2:	80 e0       	ldi	r24, 0x00	; 0
    39e4:	88 23       	and	r24, r24
    39e6:	39 f4       	brne	.+14     	; 0x39f6 <_Z15txSetParametersPjPh+0xb6>
    39e8:	81 e0       	ldi	r24, 0x01	; 1
    39ea:	80 93 30 40 	sts	0x4030, r24	; 0x804030 <g_tx_power_is_zero>
    39ee:	81 e0       	ldi	r24, 0x01	; 1
    39f0:	89 83       	std	Y+1, r24	; 0x01
    39f2:	86 ef       	ldi	r24, 0xF6	; 246
    39f4:	8a 83       	std	Y+2, r24	; 0x02
    39f6:	80 91 30 40 	lds	r24, 0x4030	; 0x804030 <g_tx_power_is_zero>
    39fa:	88 23       	and	r24, r24
    39fc:	09 f4       	brne	.+2      	; 0x3a00 <_Z15txSetParametersPjPh+0xc0>
    39fe:	89 81       	ldd	r24, Y+1	; 0x01
    3a00:	00 00       	nop
    3a02:	2b 81       	ldd	r18, Y+3	; 0x03
    3a04:	3c 81       	ldd	r19, Y+4	; 0x04
    3a06:	88 85       	ldd	r24, Y+8	; 0x08
    3a08:	99 85       	ldd	r25, Y+9	; 0x09
    3a0a:	fc 01       	movw	r30, r24
    3a0c:	20 83       	st	Z, r18
    3a0e:	31 83       	std	Z+1, r19	; 0x01
    3a10:	04 c0       	rjmp	.+8      	; 0x3a1a <_Z15txSetParametersPjPh+0xda>
    3a12:	81 e0       	ldi	r24, 0x01	; 1
    3a14:	89 83       	std	Y+1, r24	; 0x01
    3a16:	85 ef       	ldi	r24, 0xF5	; 245
    3a18:	8a 83       	std	Y+2, r24	; 0x02
    3a1a:	89 81       	ldd	r24, Y+1	; 0x01
    3a1c:	8a 81       	ldd	r24, Y+2	; 0x02
    3a1e:	2b 96       	adiw	r28, 0x0b	; 11
    3a20:	cd bf       	out	0x3d, r28	; 61
    3a22:	de bf       	out	0x3e, r29	; 62
    3a24:	df 91       	pop	r29
    3a26:	cf 91       	pop	r28
    3a28:	08 95       	ret

00003a2a <_Z22storeTransmitterValuesv>:
    3a2a:	0e 94 18 1d 	call	0x3a30	; 0x3a30 <_Z24saveAllTransmitterEEPROMv>
    3a2e:	08 95       	ret

00003a30 <_Z24saveAllTransmitterEEPROMv>:
		}
	}

	void saveAllTransmitterEEPROM(void)
	{
    3a30:	cf 93       	push	r28
    3a32:	df 93       	push	r29
    3a34:	cd b7       	in	r28, 0x3d	; 61
    3a36:	de b7       	in	r29, 0x3e	; 62
    3a38:	60 97       	sbiw	r28, 0x10	; 16
    3a3a:	cd bf       	out	0x3d, r28	; 61
    3a3c:	de bf       	out	0x3e, r29	; 62
		uint8_t table[16] = DEFAULT_80M_POWER_TABLE;
    3a3e:	80 e1       	ldi	r24, 0x10	; 16
    3a40:	e5 e8       	ldi	r30, 0x85	; 133
    3a42:	f0 e4       	ldi	r31, 0x40	; 64
    3a44:	de 01       	movw	r26, r28
    3a46:	11 96       	adiw	r26, 0x01	; 1
    3a48:	01 90       	ld	r0, Z+
    3a4a:	0d 92       	st	X+, r0
    3a4c:	8a 95       	dec	r24
    3a4e:	e1 f7       	brne	.-8      	; 0x3a48 <_Z24saveAllTransmitterEEPROMv+0x18>

		eeprom_update_dword((uint32_t*)&ee_active_80m_frequency, g_80m_frequency);
    3a50:	40 91 26 40 	lds	r20, 0x4026	; 0x804026 <_ZL15g_80m_frequency>
    3a54:	50 91 27 40 	lds	r21, 0x4027	; 0x804027 <_ZL15g_80m_frequency+0x1>
    3a58:	60 91 28 40 	lds	r22, 0x4028	; 0x804028 <_ZL15g_80m_frequency+0x2>
    3a5c:	70 91 29 40 	lds	r23, 0x4029	; 0x804029 <_ZL15g_80m_frequency+0x3>
    3a60:	85 e0       	ldi	r24, 0x05	; 5
    3a62:	90 e0       	ldi	r25, 0x00	; 0
    3a64:	0e 94 e6 25 	call	0x4bcc	; 0x4bcc <eeprom_update_dword>
		eeprom_update_word(&ee_80m_power_level_mW, g_80m_power_level_mW);
    3a68:	60 91 2a 40 	lds	r22, 0x402A	; 0x80402a <_ZL20g_80m_power_level_mW>
    3a6c:	70 91 2b 40 	lds	r23, 0x402B	; 0x80402b <_ZL20g_80m_power_level_mW+0x1>
    3a70:	89 e0       	ldi	r24, 0x09	; 9
    3a72:	90 e0       	ldi	r25, 0x00	; 0
    3a74:	0e 94 f2 25 	call	0x4be4	; 0x4be4 <eeprom_update_word>
		eeprom_update_dword((uint32_t*)&ee_cw_offset_frequency, g_rtty_offset);
    3a78:	40 91 2c 40 	lds	r20, 0x402C	; 0x80402c <_ZL13g_rtty_offset>
    3a7c:	50 91 2d 40 	lds	r21, 0x402D	; 0x80402d <_ZL13g_rtty_offset+0x1>
    3a80:	60 91 2e 40 	lds	r22, 0x402E	; 0x80402e <_ZL13g_rtty_offset+0x2>
    3a84:	70 91 2f 40 	lds	r23, 0x402F	; 0x80402f <_ZL13g_rtty_offset+0x3>
    3a88:	8b e0       	ldi	r24, 0x0B	; 11
    3a8a:	90 e0       	ldi	r25, 0x00	; 0
    3a8c:	0e 94 e6 25 	call	0x4bcc	; 0x4bcc <eeprom_update_dword>
		eeprom_update_dword((uint32_t*)&ee_si5351_ref_correction, si5351_get_correction());
    3a90:	0e 94 7e 15 	call	0x2afc	; 0x2afc <_Z21si5351_get_correctionv>
    3a94:	ab 01       	movw	r20, r22
    3a96:	bc 01       	movw	r22, r24
    3a98:	81 e0       	ldi	r24, 0x01	; 1
    3a9a:	90 e0       	ldi	r25, 0x00	; 0
    3a9c:	0e 94 e6 25 	call	0x4bcc	; 0x4bcc <eeprom_update_dword>
		eeprom_write_block(table, ee_80m_power_table, sizeof(table));
    3aa0:	40 e1       	ldi	r20, 0x10	; 16
    3aa2:	50 e0       	ldi	r21, 0x00	; 0
    3aa4:	6f e0       	ldi	r22, 0x0F	; 15
    3aa6:	70 e0       	ldi	r23, 0x00	; 0
    3aa8:	ce 01       	movw	r24, r28
    3aaa:	01 96       	adiw	r24, 0x01	; 1
    3aac:	0e 94 f8 25 	call	0x4bf0	; 0x4bf0 <eeprom_write_block>
	}
    3ab0:	60 96       	adiw	r28, 0x10	; 16
    3ab2:	cd bf       	out	0x3d, r28	; 61
    3ab4:	de bf       	out	0x3e, r29	; 62
    3ab6:	df 91       	pop	r29
    3ab8:	cf 91       	pop	r28
    3aba:	08 95       	ret

00003abc <_Z22txMilliwattsToSettingsPjPhS0_S0_>:


#endif  /*#ifdef INCLUDE_TRANSMITTER_SUPPORT */

EC txMilliwattsToSettings(uint16_t* powerMW, uint8_t* driveLevel, uint8_t* modLevelHigh, uint8_t* modLevelLow)
{
    3abc:	cf 92       	push	r12
    3abe:	df 92       	push	r13
    3ac0:	ef 92       	push	r14
    3ac2:	ff 92       	push	r15
    3ac4:	0f 93       	push	r16
    3ac6:	1f 93       	push	r17
    3ac8:	cf 93       	push	r28
    3aca:	dc 01       	movw	r26, r24
	EC ec = ERROR_CODE_NO_ERROR;
	int16_t maxPwr;
	uint8_t index;

	if(powerMW == NULL)
    3acc:	89 2b       	or	r24, r25
    3ace:	09 f4       	brne	.+2      	; 0x3ad2 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x16>
    3ad0:	c3 c0       	rjmp	.+390    	; 0x3c58 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x19c>
	{
		return(ERROR_CODE_SW_LOGIC_ERROR);
	}

	if(g_battery_type == BATTERY_4r2V)
    3ad2:	80 91 06 40 	lds	r24, 0x4006	; 0x804006 <g_battery_type>
    3ad6:	81 30       	cpi	r24, 0x01	; 1
    3ad8:	19 f4       	brne	.+6      	; 0x3ae0 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x24>
	{
		maxPwr = MAX_TX_POWER_80M_4r2V_MW;
    3ada:	80 ed       	ldi	r24, 0xD0	; 208
    3adc:	97 e0       	ldi	r25, 0x07	; 7
    3ade:	02 c0       	rjmp	.+4      	; 0x3ae4 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x28>
	}
	else
	{
		maxPwr = MAX_TX_POWER_80M_MW;
    3ae0:	88 e8       	ldi	r24, 0x88	; 136
    3ae2:	93 e1       	ldi	r25, 0x13	; 19
	}

	if((int16_t)*powerMW > maxPwr)
    3ae4:	ed 91       	ld	r30, X+
    3ae6:	fc 91       	ld	r31, X
    3ae8:	11 97       	sbiw	r26, 0x01	; 1
    3aea:	8e 17       	cp	r24, r30
    3aec:	9f 07       	cpc	r25, r31
    3aee:	14 f0       	brlt	.+4      	; 0x3af4 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x38>

#endif  /*#ifdef INCLUDE_TRANSMITTER_SUPPORT */

EC txMilliwattsToSettings(uint16_t* powerMW, uint8_t* driveLevel, uint8_t* modLevelHigh, uint8_t* modLevelLow)
{
	EC ec = ERROR_CODE_NO_ERROR;
    3af0:	c0 e0       	ldi	r28, 0x00	; 0
    3af2:	01 c0       	rjmp	.+2      	; 0x3af6 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x3a>
		maxPwr = MAX_TX_POWER_80M_MW;
	}

	if((int16_t)*powerMW > maxPwr)
	{
		ec = ERROR_CODE_POWER_LEVEL_NOT_SUPPORTED;
    3af4:	c5 ef       	ldi	r28, 0xF5	; 245
	}

	*powerMW = CLAMP(0, (int16_t)*powerMW, maxPwr);
    3af6:	8e 17       	cp	r24, r30
    3af8:	9f 07       	cpc	r25, r31
    3afa:	2c f0       	brlt	.+10     	; 0x3b06 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x4a>
    3afc:	ff 23       	and	r31, r31
    3afe:	24 f4       	brge	.+8      	; 0x3b08 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x4c>
    3b00:	e0 e0       	ldi	r30, 0x00	; 0
    3b02:	f0 e0       	ldi	r31, 0x00	; 0
    3b04:	01 c0       	rjmp	.+2      	; 0x3b08 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x4c>
    3b06:	fc 01       	movw	r30, r24
    3b08:	cf 01       	movw	r24, r30
    3b0a:	ed 93       	st	X+, r30
    3b0c:	fc 93       	st	X, r31
    3b0e:	11 97       	sbiw	r26, 0x01	; 1

	if(*powerMW < 5)
    3b10:	e5 30       	cpi	r30, 0x05	; 5
    3b12:	f1 05       	cpc	r31, r1
    3b14:	20 f4       	brcc	.+8      	; 0x3b1e <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x62>
	{
		index = 0;
		*powerMW = 0;
    3b16:	1d 92       	st	X+, r1
    3b18:	1c 92       	st	X, r1

	*powerMW = CLAMP(0, (int16_t)*powerMW, maxPwr);

	if(*powerMW < 5)
	{
		index = 0;
    3b1a:	80 e0       	ldi	r24, 0x00	; 0
    3b1c:	8d c0       	rjmp	.+282    	; 0x3c38 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x17c>
		*powerMW = 0;
	}
	else if(*powerMW < 50)
    3b1e:	e2 33       	cpi	r30, 0x32	; 50
    3b20:	f1 05       	cpc	r31, r1
    3b22:	30 f4       	brcc	.+12     	; 0x3b30 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x74>
	{
		index = 1;
		*powerMW = 10;
    3b24:	8a e0       	ldi	r24, 0x0A	; 10
    3b26:	90 e0       	ldi	r25, 0x00	; 0
    3b28:	8d 93       	st	X+, r24
    3b2a:	9c 93       	st	X, r25
		index = 0;
		*powerMW = 0;
	}
	else if(*powerMW < 50)
	{
		index = 1;
    3b2c:	81 e0       	ldi	r24, 0x01	; 1
    3b2e:	84 c0       	rjmp	.+264    	; 0x3c38 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x17c>
		*powerMW = 10;
	}
	else if(*powerMW < 150)
    3b30:	e6 39       	cpi	r30, 0x96	; 150
    3b32:	f1 05       	cpc	r31, r1
    3b34:	30 f4       	brcc	.+12     	; 0x3b42 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x86>
	{
		index = 2;
		*powerMW = 100;
    3b36:	84 e6       	ldi	r24, 0x64	; 100
    3b38:	90 e0       	ldi	r25, 0x00	; 0
    3b3a:	8d 93       	st	X+, r24
    3b3c:	9c 93       	st	X, r25
		index = 1;
		*powerMW = 10;
	}
	else if(*powerMW < 150)
	{
		index = 2;
    3b3e:	82 e0       	ldi	r24, 0x02	; 2
    3b40:	7b c0       	rjmp	.+246    	; 0x3c38 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x17c>
		*powerMW = 100;
	}
	else if(*powerMW < 250)
    3b42:	ea 3f       	cpi	r30, 0xFA	; 250
    3b44:	f1 05       	cpc	r31, r1
    3b46:	30 f4       	brcc	.+12     	; 0x3b54 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x98>
	{
		index = 3;
		*powerMW = 200;
    3b48:	88 ec       	ldi	r24, 0xC8	; 200
    3b4a:	90 e0       	ldi	r25, 0x00	; 0
    3b4c:	8d 93       	st	X+, r24
    3b4e:	9c 93       	st	X, r25
		index = 2;
		*powerMW = 100;
	}
	else if(*powerMW < 250)
	{
		index = 3;
    3b50:	83 e0       	ldi	r24, 0x03	; 3
    3b52:	72 c0       	rjmp	.+228    	; 0x3c38 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x17c>
		*powerMW = 200;
	}
	else if(*powerMW < 350)
    3b54:	8e 35       	cpi	r24, 0x5E	; 94
    3b56:	e1 e0       	ldi	r30, 0x01	; 1
    3b58:	9e 07       	cpc	r25, r30
    3b5a:	30 f4       	brcc	.+12     	; 0x3b68 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0xac>
	{
		index = 4;
		*powerMW = 300;
    3b5c:	8c e2       	ldi	r24, 0x2C	; 44
    3b5e:	91 e0       	ldi	r25, 0x01	; 1
    3b60:	8d 93       	st	X+, r24
    3b62:	9c 93       	st	X, r25
		index = 3;
		*powerMW = 200;
	}
	else if(*powerMW < 350)
	{
		index = 4;
    3b64:	84 e0       	ldi	r24, 0x04	; 4
    3b66:	68 c0       	rjmp	.+208    	; 0x3c38 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x17c>
		*powerMW = 300;
	}
	else if(*powerMW < 450)
    3b68:	82 3c       	cpi	r24, 0xC2	; 194
    3b6a:	f1 e0       	ldi	r31, 0x01	; 1
    3b6c:	9f 07       	cpc	r25, r31
    3b6e:	30 f4       	brcc	.+12     	; 0x3b7c <_Z22txMilliwattsToSettingsPjPhS0_S0_+0xc0>
	{
		index = 5;
		*powerMW = 400;
    3b70:	80 e9       	ldi	r24, 0x90	; 144
    3b72:	91 e0       	ldi	r25, 0x01	; 1
    3b74:	8d 93       	st	X+, r24
    3b76:	9c 93       	st	X, r25
		index = 4;
		*powerMW = 300;
	}
	else if(*powerMW < 450)
	{
		index = 5;
    3b78:	85 e0       	ldi	r24, 0x05	; 5
    3b7a:	5e c0       	rjmp	.+188    	; 0x3c38 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x17c>
		*powerMW = 400;
	}
	else if(*powerMW < 550)
    3b7c:	86 32       	cpi	r24, 0x26	; 38
    3b7e:	e2 e0       	ldi	r30, 0x02	; 2
    3b80:	9e 07       	cpc	r25, r30
    3b82:	30 f4       	brcc	.+12     	; 0x3b90 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0xd4>
	{
		index = 6;
		*powerMW = 500;
    3b84:	84 ef       	ldi	r24, 0xF4	; 244
    3b86:	91 e0       	ldi	r25, 0x01	; 1
    3b88:	8d 93       	st	X+, r24
    3b8a:	9c 93       	st	X, r25
		index = 5;
		*powerMW = 400;
	}
	else if(*powerMW < 550)
	{
		index = 6;
    3b8c:	86 e0       	ldi	r24, 0x06	; 6
    3b8e:	54 c0       	rjmp	.+168    	; 0x3c38 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x17c>
		*powerMW = 500;
	}
	else if(*powerMW < 650)
    3b90:	8a 38       	cpi	r24, 0x8A	; 138
    3b92:	f2 e0       	ldi	r31, 0x02	; 2
    3b94:	9f 07       	cpc	r25, r31
    3b96:	30 f4       	brcc	.+12     	; 0x3ba4 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0xe8>
	{
		index = 7;
		*powerMW = 600;
    3b98:	88 e5       	ldi	r24, 0x58	; 88
    3b9a:	92 e0       	ldi	r25, 0x02	; 2
    3b9c:	8d 93       	st	X+, r24
    3b9e:	9c 93       	st	X, r25
		index = 6;
		*powerMW = 500;
	}
	else if(*powerMW < 650)
	{
		index = 7;
    3ba0:	87 e0       	ldi	r24, 0x07	; 7
    3ba2:	4a c0       	rjmp	.+148    	; 0x3c38 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x17c>
		*powerMW = 600;
	}
	else if(*powerMW < 900)
    3ba4:	84 38       	cpi	r24, 0x84	; 132
    3ba6:	e3 e0       	ldi	r30, 0x03	; 3
    3ba8:	9e 07       	cpc	r25, r30
    3baa:	30 f4       	brcc	.+12     	; 0x3bb8 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0xfc>
	{
		index = 8;
		*powerMW = 800;
    3bac:	80 e2       	ldi	r24, 0x20	; 32
    3bae:	93 e0       	ldi	r25, 0x03	; 3
    3bb0:	8d 93       	st	X+, r24
    3bb2:	9c 93       	st	X, r25
		index = 7;
		*powerMW = 600;
	}
	else if(*powerMW < 900)
	{
		index = 8;
    3bb4:	88 e0       	ldi	r24, 0x08	; 8
    3bb6:	40 c0       	rjmp	.+128    	; 0x3c38 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x17c>
		*powerMW = 800;
	}
	else if(*powerMW < 1250)
    3bb8:	82 3e       	cpi	r24, 0xE2	; 226
    3bba:	f4 e0       	ldi	r31, 0x04	; 4
    3bbc:	9f 07       	cpc	r25, r31
    3bbe:	30 f4       	brcc	.+12     	; 0x3bcc <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x110>
	{
		index = 9;
		*powerMW = 1000;
    3bc0:	88 ee       	ldi	r24, 0xE8	; 232
    3bc2:	93 e0       	ldi	r25, 0x03	; 3
    3bc4:	8d 93       	st	X+, r24
    3bc6:	9c 93       	st	X, r25
		index = 8;
		*powerMW = 800;
	}
	else if(*powerMW < 1250)
	{
		index = 9;
    3bc8:	89 e0       	ldi	r24, 0x09	; 9
    3bca:	36 c0       	rjmp	.+108    	; 0x3c38 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x17c>
		*powerMW = 1000;
	}
	else if(*powerMW < 1750)
    3bcc:	86 3d       	cpi	r24, 0xD6	; 214
    3bce:	e6 e0       	ldi	r30, 0x06	; 6
    3bd0:	9e 07       	cpc	r25, r30
    3bd2:	30 f4       	brcc	.+12     	; 0x3be0 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x124>
	{
		index = 10;
		*powerMW = 1500;
    3bd4:	8c ed       	ldi	r24, 0xDC	; 220
    3bd6:	95 e0       	ldi	r25, 0x05	; 5
    3bd8:	8d 93       	st	X+, r24
    3bda:	9c 93       	st	X, r25
		index = 9;
		*powerMW = 1000;
	}
	else if(*powerMW < 1750)
	{
		index = 10;
    3bdc:	8a e0       	ldi	r24, 0x0A	; 10
    3bde:	2c c0       	rjmp	.+88     	; 0x3c38 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x17c>
		*powerMW = 1500;
	}
	else if(*powerMW < 2250)
    3be0:	8a 3c       	cpi	r24, 0xCA	; 202
    3be2:	f8 e0       	ldi	r31, 0x08	; 8
    3be4:	9f 07       	cpc	r25, r31
    3be6:	30 f4       	brcc	.+12     	; 0x3bf4 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x138>
	{
		index = 11;
		*powerMW = 2000;
    3be8:	80 ed       	ldi	r24, 0xD0	; 208
    3bea:	97 e0       	ldi	r25, 0x07	; 7
    3bec:	8d 93       	st	X+, r24
    3bee:	9c 93       	st	X, r25
		index = 10;
		*powerMW = 1500;
	}
	else if(*powerMW < 2250)
	{
		index = 11;
    3bf0:	8b e0       	ldi	r24, 0x0B	; 11
    3bf2:	22 c0       	rjmp	.+68     	; 0x3c38 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x17c>
		*powerMW = 2000;
	}
	else if(*powerMW < 2750)
    3bf4:	8e 3b       	cpi	r24, 0xBE	; 190
    3bf6:	ea e0       	ldi	r30, 0x0A	; 10
    3bf8:	9e 07       	cpc	r25, r30
    3bfa:	30 f4       	brcc	.+12     	; 0x3c08 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x14c>
	{
		index = 12;
		*powerMW = 2500;
    3bfc:	84 ec       	ldi	r24, 0xC4	; 196
    3bfe:	99 e0       	ldi	r25, 0x09	; 9
    3c00:	8d 93       	st	X+, r24
    3c02:	9c 93       	st	X, r25
		index = 11;
		*powerMW = 2000;
	}
	else if(*powerMW < 2750)
	{
		index = 12;
    3c04:	8c e0       	ldi	r24, 0x0C	; 12
    3c06:	18 c0       	rjmp	.+48     	; 0x3c38 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x17c>
		*powerMW = 2500;
	}
	else if(*powerMW < 3500)
    3c08:	8c 3a       	cpi	r24, 0xAC	; 172
    3c0a:	fd e0       	ldi	r31, 0x0D	; 13
    3c0c:	9f 07       	cpc	r25, r31
    3c0e:	30 f4       	brcc	.+12     	; 0x3c1c <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x160>
	{
		index = 13;
		*powerMW = 3000;
    3c10:	88 eb       	ldi	r24, 0xB8	; 184
    3c12:	9b e0       	ldi	r25, 0x0B	; 11
    3c14:	8d 93       	st	X+, r24
    3c16:	9c 93       	st	X, r25
		index = 12;
		*powerMW = 2500;
	}
	else if(*powerMW < 3500)
	{
		index = 13;
    3c18:	8d e0       	ldi	r24, 0x0D	; 13
    3c1a:	0e c0       	rjmp	.+28     	; 0x3c38 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x17c>
		*powerMW = 3000;
	}
	else if(*powerMW < 4500)
    3c1c:	84 39       	cpi	r24, 0x94	; 148
    3c1e:	91 41       	sbci	r25, 0x11	; 17
    3c20:	30 f4       	brcc	.+12     	; 0x3c2e <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x172>
	{
		index = 14;
		*powerMW = 4000;
    3c22:	80 ea       	ldi	r24, 0xA0	; 160
    3c24:	9f e0       	ldi	r25, 0x0F	; 15
    3c26:	8d 93       	st	X+, r24
    3c28:	9c 93       	st	X, r25
		index = 13;
		*powerMW = 3000;
	}
	else if(*powerMW < 4500)
	{
		index = 14;
    3c2a:	8e e0       	ldi	r24, 0x0E	; 14
    3c2c:	05 c0       	rjmp	.+10     	; 0x3c38 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x17c>
		*powerMW = 4000;
	}
	else
	{
		index = 15;
		*powerMW = 5000;
    3c2e:	88 e8       	ldi	r24, 0x88	; 136
    3c30:	93 e1       	ldi	r25, 0x13	; 19
    3c32:	8d 93       	st	X+, r24
    3c34:	9c 93       	st	X, r25
		index = 14;
		*powerMW = 4000;
	}
	else
	{
		index = 15;
    3c36:	8f e0       	ldi	r24, 0x0F	; 15
    3c38:	89 01       	movw	r16, r18
    3c3a:	7a 01       	movw	r14, r20
    3c3c:	6b 01       	movw	r12, r22
		*powerMW = 5000;
	}

	*driveLevel = eeprom_read_byte(&ee_80m_power_table[index]);
    3c3e:	90 e0       	ldi	r25, 0x00	; 0
    3c40:	81 5f       	subi	r24, 0xF1	; 241
    3c42:	9f 4f       	sbci	r25, 0xFF	; 255
    3c44:	0e 94 de 25 	call	0x4bbc	; 0x4bbc <eeprom_read_byte>
    3c48:	f6 01       	movw	r30, r12
    3c4a:	80 83       	st	Z, r24
	*modLevelHigh = 0;
    3c4c:	f7 01       	movw	r30, r14
    3c4e:	10 82       	st	Z, r1
	*modLevelLow = 0;
    3c50:	f8 01       	movw	r30, r16
    3c52:	10 82       	st	Z, r1
	*driveLevel = MIN(*driveLevel, MAX_80M_PWR_SETTING);

	return(ec);
    3c54:	8c 2f       	mov	r24, r28
    3c56:	01 c0       	rjmp	.+2      	; 0x3c5a <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x19e>
	int16_t maxPwr;
	uint8_t index;

	if(powerMW == NULL)
	{
		return(ERROR_CODE_SW_LOGIC_ERROR);
    3c58:	8f ec       	ldi	r24, 0xCF	; 207
	*modLevelHigh = 0;
	*modLevelLow = 0;
	*driveLevel = MIN(*driveLevel, MAX_80M_PWR_SETTING);

	return(ec);
}
    3c5a:	cf 91       	pop	r28
    3c5c:	1f 91       	pop	r17
    3c5e:	0f 91       	pop	r16
    3c60:	ff 90       	pop	r15
    3c62:	ef 90       	pop	r14
    3c64:	df 90       	pop	r13
    3c66:	cf 90       	pop	r12
    3c68:	08 95       	ret

00003c6a <_Z18txIsAntennaForBandv>:

/**
 */
BOOL __attribute__((optimize("O0"))) txIsAntennaForBand(void)
{
    3c6a:	cf 93       	push	r28
    3c6c:	df 93       	push	r29
    3c6e:	1f 92       	push	r1
    3c70:	cd b7       	in	r28, 0x3d	; 61
    3c72:	de b7       	in	r29, 0x3e	; 62
	BOOL result = FALSE;
    3c74:	19 82       	std	Y+1, r1	; 0x01

	switch(g_antenna_connect_state)
    3c76:	80 91 eb 40 	lds	r24, 0x40EB	; 0x8040eb <g_antenna_connect_state>
    3c7a:	88 2f       	mov	r24, r24
    3c7c:	90 e0       	ldi	r25, 0x00	; 0
    3c7e:	03 97       	sbiw	r24, 0x03	; 3
    3c80:	09 f0       	breq	.+2      	; 0x3c84 <_Z18txIsAntennaForBandv+0x1a>

		default:
		{

		}
		break;
    3c82:	03 c0       	rjmp	.+6      	; 0x3c8a <_Z18txIsAntennaForBandv+0x20>

	switch(g_antenna_connect_state)
	{
		case ANT_80M_CONNECTED:
		{
			result = TRUE;
    3c84:	81 e0       	ldi	r24, 0x01	; 1
    3c86:	89 83       	std	Y+1, r24	; 0x01
		}
		break;
    3c88:	00 00       	nop

		}
		break;
	}

	return( result);
    3c8a:	89 81       	ldd	r24, Y+1	; 0x01
}
    3c8c:	0f 90       	pop	r0
    3c8e:	df 91       	pop	r29
    3c90:	cf 91       	pop	r28
    3c92:	08 95       	ret

00003c94 <USART1_init>:
 *
 * \return Nothing
 */
void USART1_enable_rx()
{
	USART1.CTRLB |= USART_RXEN_bm;
    3c94:	0e 94 98 1f 	call	0x3f30	; 0x3f30 <__floatunsisf>
    3c98:	20 e0       	ldi	r18, 0x00	; 0
    3c9a:	30 e0       	ldi	r19, 0x00	; 0
    3c9c:	40 e8       	ldi	r20, 0x80	; 128
    3c9e:	51 e4       	ldi	r21, 0x41	; 65
    3ca0:	0e 94 4f 20 	call	0x409e	; 0x409e <__mulsf3>
    3ca4:	9b 01       	movw	r18, r22
    3ca6:	ac 01       	movw	r20, r24
    3ca8:	60 e0       	ldi	r22, 0x00	; 0
    3caa:	74 e2       	ldi	r23, 0x24	; 36
    3cac:	84 e7       	ldi	r24, 0x74	; 116
    3cae:	9d e4       	ldi	r25, 0x4D	; 77
    3cb0:	0e 94 f0 1e 	call	0x3de0	; 0x3de0 <__divsf3>
    3cb4:	20 e0       	ldi	r18, 0x00	; 0
    3cb6:	30 e0       	ldi	r19, 0x00	; 0
    3cb8:	40 e0       	ldi	r20, 0x00	; 0
    3cba:	5f e3       	ldi	r21, 0x3F	; 63
    3cbc:	0e 94 7f 1e 	call	0x3cfe	; 0x3cfe <__addsf3>
    3cc0:	0e 94 69 1f 	call	0x3ed2	; 0x3ed2 <__fixunssfsi>
    3cc4:	e0 e2       	ldi	r30, 0x20	; 32
    3cc6:	f8 e0       	ldi	r31, 0x08	; 8
    3cc8:	60 87       	std	Z+8, r22	; 0x08
    3cca:	71 87       	std	Z+9, r23	; 0x09
    3ccc:	80 e8       	ldi	r24, 0x80	; 128
    3cce:	85 83       	std	Z+5, r24	; 0x05
    3cd0:	80 ec       	ldi	r24, 0xC0	; 192
    3cd2:	86 83       	std	Z+6, r24	; 0x06
    3cd4:	80 e0       	ldi	r24, 0x00	; 0
    3cd6:	08 95       	ret

00003cd8 <USART1_enable_tx>:
 *
 * \return Nothing
 */
void USART1_enable_tx()
{
	USART1.CTRLB |= USART_TXEN_bm;
    3cd8:	e0 e2       	ldi	r30, 0x20	; 32
    3cda:	f8 e0       	ldi	r31, 0x08	; 8
    3cdc:	86 81       	ldd	r24, Z+6	; 0x06
    3cde:	80 64       	ori	r24, 0x40	; 64
    3ce0:	86 83       	std	Z+6, r24	; 0x06
	USART1.CTRLA |= 1 << USART_DREIE_bp; /* Transmit Data Ready Interrupt Enable: enable */
    3ce2:	85 81       	ldd	r24, Z+5	; 0x05
    3ce4:	80 62       	ori	r24, 0x20	; 32
    3ce6:	85 83       	std	Z+5, r24	; 0x05
    3ce8:	08 95       	ret

00003cea <USART1_disable>:
 *
 * \return Nothing
 */
void USART1_disable()
{
	USART1.CTRLB &= ~(USART_RXEN_bm | USART_TXEN_bm);
    3cea:	e0 e2       	ldi	r30, 0x20	; 32
    3cec:	f8 e0       	ldi	r31, 0x08	; 8
    3cee:	86 81       	ldd	r24, Z+6	; 0x06
    3cf0:	8f 73       	andi	r24, 0x3F	; 63
    3cf2:	86 83       	std	Z+6, r24	; 0x06
    3cf4:	08 95       	ret

00003cf6 <USART1_get_data>:
 *
 * \return Data register from USART1 module
 */
uint8_t USART1_get_data()
{
	return USART1.RXDATAL;
    3cf6:	80 91 20 08 	lds	r24, 0x0820	; 0x800820 <__TEXT_REGION_LENGTH__+0x7e0820>
}
    3cfa:	08 95       	ret

00003cfc <__subsf3>:
    3cfc:	50 58       	subi	r21, 0x80	; 128

00003cfe <__addsf3>:
    3cfe:	bb 27       	eor	r27, r27
    3d00:	aa 27       	eor	r26, r26
    3d02:	0e 94 96 1e 	call	0x3d2c	; 0x3d2c <__addsf3x>
    3d06:	0c 94 10 20 	jmp	0x4020	; 0x4020 <__fp_round>
    3d0a:	0e 94 02 20 	call	0x4004	; 0x4004 <__fp_pscA>
    3d0e:	38 f0       	brcs	.+14     	; 0x3d1e <__addsf3+0x20>
    3d10:	0e 94 09 20 	call	0x4012	; 0x4012 <__fp_pscB>
    3d14:	20 f0       	brcs	.+8      	; 0x3d1e <__addsf3+0x20>
    3d16:	39 f4       	brne	.+14     	; 0x3d26 <__addsf3+0x28>
    3d18:	9f 3f       	cpi	r25, 0xFF	; 255
    3d1a:	19 f4       	brne	.+6      	; 0x3d22 <__addsf3+0x24>
    3d1c:	26 f4       	brtc	.+8      	; 0x3d26 <__addsf3+0x28>
    3d1e:	0c 94 ff 1f 	jmp	0x3ffe	; 0x3ffe <__fp_nan>
    3d22:	0e f4       	brtc	.+2      	; 0x3d26 <__addsf3+0x28>
    3d24:	e0 95       	com	r30
    3d26:	e7 fb       	bst	r30, 7
    3d28:	0c 94 f9 1f 	jmp	0x3ff2	; 0x3ff2 <__fp_inf>

00003d2c <__addsf3x>:
    3d2c:	e9 2f       	mov	r30, r25
    3d2e:	0e 94 21 20 	call	0x4042	; 0x4042 <__fp_split3>
    3d32:	58 f3       	brcs	.-42     	; 0x3d0a <__addsf3+0xc>
    3d34:	ba 17       	cp	r27, r26
    3d36:	62 07       	cpc	r22, r18
    3d38:	73 07       	cpc	r23, r19
    3d3a:	84 07       	cpc	r24, r20
    3d3c:	95 07       	cpc	r25, r21
    3d3e:	20 f0       	brcs	.+8      	; 0x3d48 <__addsf3x+0x1c>
    3d40:	79 f4       	brne	.+30     	; 0x3d60 <__addsf3x+0x34>
    3d42:	a6 f5       	brtc	.+104    	; 0x3dac <__addsf3x+0x80>
    3d44:	0c 94 43 20 	jmp	0x4086	; 0x4086 <__fp_zero>
    3d48:	0e f4       	brtc	.+2      	; 0x3d4c <__addsf3x+0x20>
    3d4a:	e0 95       	com	r30
    3d4c:	0b 2e       	mov	r0, r27
    3d4e:	ba 2f       	mov	r27, r26
    3d50:	a0 2d       	mov	r26, r0
    3d52:	0b 01       	movw	r0, r22
    3d54:	b9 01       	movw	r22, r18
    3d56:	90 01       	movw	r18, r0
    3d58:	0c 01       	movw	r0, r24
    3d5a:	ca 01       	movw	r24, r20
    3d5c:	a0 01       	movw	r20, r0
    3d5e:	11 24       	eor	r1, r1
    3d60:	ff 27       	eor	r31, r31
    3d62:	59 1b       	sub	r21, r25
    3d64:	99 f0       	breq	.+38     	; 0x3d8c <__addsf3x+0x60>
    3d66:	59 3f       	cpi	r21, 0xF9	; 249
    3d68:	50 f4       	brcc	.+20     	; 0x3d7e <__addsf3x+0x52>
    3d6a:	50 3e       	cpi	r21, 0xE0	; 224
    3d6c:	68 f1       	brcs	.+90     	; 0x3dc8 <__addsf3x+0x9c>
    3d6e:	1a 16       	cp	r1, r26
    3d70:	f0 40       	sbci	r31, 0x00	; 0
    3d72:	a2 2f       	mov	r26, r18
    3d74:	23 2f       	mov	r18, r19
    3d76:	34 2f       	mov	r19, r20
    3d78:	44 27       	eor	r20, r20
    3d7a:	58 5f       	subi	r21, 0xF8	; 248
    3d7c:	f3 cf       	rjmp	.-26     	; 0x3d64 <__addsf3x+0x38>
    3d7e:	46 95       	lsr	r20
    3d80:	37 95       	ror	r19
    3d82:	27 95       	ror	r18
    3d84:	a7 95       	ror	r26
    3d86:	f0 40       	sbci	r31, 0x00	; 0
    3d88:	53 95       	inc	r21
    3d8a:	c9 f7       	brne	.-14     	; 0x3d7e <__addsf3x+0x52>
    3d8c:	7e f4       	brtc	.+30     	; 0x3dac <__addsf3x+0x80>
    3d8e:	1f 16       	cp	r1, r31
    3d90:	ba 0b       	sbc	r27, r26
    3d92:	62 0b       	sbc	r22, r18
    3d94:	73 0b       	sbc	r23, r19
    3d96:	84 0b       	sbc	r24, r20
    3d98:	ba f0       	brmi	.+46     	; 0x3dc8 <__addsf3x+0x9c>
    3d9a:	91 50       	subi	r25, 0x01	; 1
    3d9c:	a1 f0       	breq	.+40     	; 0x3dc6 <__addsf3x+0x9a>
    3d9e:	ff 0f       	add	r31, r31
    3da0:	bb 1f       	adc	r27, r27
    3da2:	66 1f       	adc	r22, r22
    3da4:	77 1f       	adc	r23, r23
    3da6:	88 1f       	adc	r24, r24
    3da8:	c2 f7       	brpl	.-16     	; 0x3d9a <__addsf3x+0x6e>
    3daa:	0e c0       	rjmp	.+28     	; 0x3dc8 <__addsf3x+0x9c>
    3dac:	ba 0f       	add	r27, r26
    3dae:	62 1f       	adc	r22, r18
    3db0:	73 1f       	adc	r23, r19
    3db2:	84 1f       	adc	r24, r20
    3db4:	48 f4       	brcc	.+18     	; 0x3dc8 <__addsf3x+0x9c>
    3db6:	87 95       	ror	r24
    3db8:	77 95       	ror	r23
    3dba:	67 95       	ror	r22
    3dbc:	b7 95       	ror	r27
    3dbe:	f7 95       	ror	r31
    3dc0:	9e 3f       	cpi	r25, 0xFE	; 254
    3dc2:	08 f0       	brcs	.+2      	; 0x3dc6 <__addsf3x+0x9a>
    3dc4:	b0 cf       	rjmp	.-160    	; 0x3d26 <__addsf3+0x28>
    3dc6:	93 95       	inc	r25
    3dc8:	88 0f       	add	r24, r24
    3dca:	08 f0       	brcs	.+2      	; 0x3dce <__addsf3x+0xa2>
    3dcc:	99 27       	eor	r25, r25
    3dce:	ee 0f       	add	r30, r30
    3dd0:	97 95       	ror	r25
    3dd2:	87 95       	ror	r24
    3dd4:	08 95       	ret

00003dd6 <__cmpsf2>:
    3dd6:	0e 94 d5 1f 	call	0x3faa	; 0x3faa <__fp_cmp>
    3dda:	08 f4       	brcc	.+2      	; 0x3dde <__cmpsf2+0x8>
    3ddc:	81 e0       	ldi	r24, 0x01	; 1
    3dde:	08 95       	ret

00003de0 <__divsf3>:
    3de0:	0e 94 04 1f 	call	0x3e08	; 0x3e08 <__divsf3x>
    3de4:	0c 94 10 20 	jmp	0x4020	; 0x4020 <__fp_round>
    3de8:	0e 94 09 20 	call	0x4012	; 0x4012 <__fp_pscB>
    3dec:	58 f0       	brcs	.+22     	; 0x3e04 <__divsf3+0x24>
    3dee:	0e 94 02 20 	call	0x4004	; 0x4004 <__fp_pscA>
    3df2:	40 f0       	brcs	.+16     	; 0x3e04 <__divsf3+0x24>
    3df4:	29 f4       	brne	.+10     	; 0x3e00 <__divsf3+0x20>
    3df6:	5f 3f       	cpi	r21, 0xFF	; 255
    3df8:	29 f0       	breq	.+10     	; 0x3e04 <__divsf3+0x24>
    3dfa:	0c 94 f9 1f 	jmp	0x3ff2	; 0x3ff2 <__fp_inf>
    3dfe:	51 11       	cpse	r21, r1
    3e00:	0c 94 44 20 	jmp	0x4088	; 0x4088 <__fp_szero>
    3e04:	0c 94 ff 1f 	jmp	0x3ffe	; 0x3ffe <__fp_nan>

00003e08 <__divsf3x>:
    3e08:	0e 94 21 20 	call	0x4042	; 0x4042 <__fp_split3>
    3e0c:	68 f3       	brcs	.-38     	; 0x3de8 <__divsf3+0x8>

00003e0e <__divsf3_pse>:
    3e0e:	99 23       	and	r25, r25
    3e10:	b1 f3       	breq	.-20     	; 0x3dfe <__divsf3+0x1e>
    3e12:	55 23       	and	r21, r21
    3e14:	91 f3       	breq	.-28     	; 0x3dfa <__divsf3+0x1a>
    3e16:	95 1b       	sub	r25, r21
    3e18:	55 0b       	sbc	r21, r21
    3e1a:	bb 27       	eor	r27, r27
    3e1c:	aa 27       	eor	r26, r26
    3e1e:	62 17       	cp	r22, r18
    3e20:	73 07       	cpc	r23, r19
    3e22:	84 07       	cpc	r24, r20
    3e24:	38 f0       	brcs	.+14     	; 0x3e34 <__divsf3_pse+0x26>
    3e26:	9f 5f       	subi	r25, 0xFF	; 255
    3e28:	5f 4f       	sbci	r21, 0xFF	; 255
    3e2a:	22 0f       	add	r18, r18
    3e2c:	33 1f       	adc	r19, r19
    3e2e:	44 1f       	adc	r20, r20
    3e30:	aa 1f       	adc	r26, r26
    3e32:	a9 f3       	breq	.-22     	; 0x3e1e <__divsf3_pse+0x10>
    3e34:	35 d0       	rcall	.+106    	; 0x3ea0 <__divsf3_pse+0x92>
    3e36:	0e 2e       	mov	r0, r30
    3e38:	3a f0       	brmi	.+14     	; 0x3e48 <__divsf3_pse+0x3a>
    3e3a:	e0 e8       	ldi	r30, 0x80	; 128
    3e3c:	32 d0       	rcall	.+100    	; 0x3ea2 <__divsf3_pse+0x94>
    3e3e:	91 50       	subi	r25, 0x01	; 1
    3e40:	50 40       	sbci	r21, 0x00	; 0
    3e42:	e6 95       	lsr	r30
    3e44:	00 1c       	adc	r0, r0
    3e46:	ca f7       	brpl	.-14     	; 0x3e3a <__divsf3_pse+0x2c>
    3e48:	2b d0       	rcall	.+86     	; 0x3ea0 <__divsf3_pse+0x92>
    3e4a:	fe 2f       	mov	r31, r30
    3e4c:	29 d0       	rcall	.+82     	; 0x3ea0 <__divsf3_pse+0x92>
    3e4e:	66 0f       	add	r22, r22
    3e50:	77 1f       	adc	r23, r23
    3e52:	88 1f       	adc	r24, r24
    3e54:	bb 1f       	adc	r27, r27
    3e56:	26 17       	cp	r18, r22
    3e58:	37 07       	cpc	r19, r23
    3e5a:	48 07       	cpc	r20, r24
    3e5c:	ab 07       	cpc	r26, r27
    3e5e:	b0 e8       	ldi	r27, 0x80	; 128
    3e60:	09 f0       	breq	.+2      	; 0x3e64 <__divsf3_pse+0x56>
    3e62:	bb 0b       	sbc	r27, r27
    3e64:	80 2d       	mov	r24, r0
    3e66:	bf 01       	movw	r22, r30
    3e68:	ff 27       	eor	r31, r31
    3e6a:	93 58       	subi	r25, 0x83	; 131
    3e6c:	5f 4f       	sbci	r21, 0xFF	; 255
    3e6e:	3a f0       	brmi	.+14     	; 0x3e7e <__divsf3_pse+0x70>
    3e70:	9e 3f       	cpi	r25, 0xFE	; 254
    3e72:	51 05       	cpc	r21, r1
    3e74:	78 f0       	brcs	.+30     	; 0x3e94 <__divsf3_pse+0x86>
    3e76:	0c 94 f9 1f 	jmp	0x3ff2	; 0x3ff2 <__fp_inf>
    3e7a:	0c 94 44 20 	jmp	0x4088	; 0x4088 <__fp_szero>
    3e7e:	5f 3f       	cpi	r21, 0xFF	; 255
    3e80:	e4 f3       	brlt	.-8      	; 0x3e7a <__divsf3_pse+0x6c>
    3e82:	98 3e       	cpi	r25, 0xE8	; 232
    3e84:	d4 f3       	brlt	.-12     	; 0x3e7a <__divsf3_pse+0x6c>
    3e86:	86 95       	lsr	r24
    3e88:	77 95       	ror	r23
    3e8a:	67 95       	ror	r22
    3e8c:	b7 95       	ror	r27
    3e8e:	f7 95       	ror	r31
    3e90:	9f 5f       	subi	r25, 0xFF	; 255
    3e92:	c9 f7       	brne	.-14     	; 0x3e86 <__divsf3_pse+0x78>
    3e94:	88 0f       	add	r24, r24
    3e96:	91 1d       	adc	r25, r1
    3e98:	96 95       	lsr	r25
    3e9a:	87 95       	ror	r24
    3e9c:	97 f9       	bld	r25, 7
    3e9e:	08 95       	ret
    3ea0:	e1 e0       	ldi	r30, 0x01	; 1
    3ea2:	66 0f       	add	r22, r22
    3ea4:	77 1f       	adc	r23, r23
    3ea6:	88 1f       	adc	r24, r24
    3ea8:	bb 1f       	adc	r27, r27
    3eaa:	62 17       	cp	r22, r18
    3eac:	73 07       	cpc	r23, r19
    3eae:	84 07       	cpc	r24, r20
    3eb0:	ba 07       	cpc	r27, r26
    3eb2:	20 f0       	brcs	.+8      	; 0x3ebc <__divsf3_pse+0xae>
    3eb4:	62 1b       	sub	r22, r18
    3eb6:	73 0b       	sbc	r23, r19
    3eb8:	84 0b       	sbc	r24, r20
    3eba:	ba 0b       	sbc	r27, r26
    3ebc:	ee 1f       	adc	r30, r30
    3ebe:	88 f7       	brcc	.-30     	; 0x3ea2 <__divsf3_pse+0x94>
    3ec0:	e0 95       	com	r30
    3ec2:	08 95       	ret

00003ec4 <__fixsfsi>:
    3ec4:	0e 94 69 1f 	call	0x3ed2	; 0x3ed2 <__fixunssfsi>
    3ec8:	68 94       	set
    3eca:	b1 11       	cpse	r27, r1
    3ecc:	0c 94 44 20 	jmp	0x4088	; 0x4088 <__fp_szero>
    3ed0:	08 95       	ret

00003ed2 <__fixunssfsi>:
    3ed2:	0e 94 29 20 	call	0x4052	; 0x4052 <__fp_splitA>
    3ed6:	88 f0       	brcs	.+34     	; 0x3efa <__fixunssfsi+0x28>
    3ed8:	9f 57       	subi	r25, 0x7F	; 127
    3eda:	98 f0       	brcs	.+38     	; 0x3f02 <__fixunssfsi+0x30>
    3edc:	b9 2f       	mov	r27, r25
    3ede:	99 27       	eor	r25, r25
    3ee0:	b7 51       	subi	r27, 0x17	; 23
    3ee2:	b0 f0       	brcs	.+44     	; 0x3f10 <__fixunssfsi+0x3e>
    3ee4:	e1 f0       	breq	.+56     	; 0x3f1e <__fixunssfsi+0x4c>
    3ee6:	66 0f       	add	r22, r22
    3ee8:	77 1f       	adc	r23, r23
    3eea:	88 1f       	adc	r24, r24
    3eec:	99 1f       	adc	r25, r25
    3eee:	1a f0       	brmi	.+6      	; 0x3ef6 <__fixunssfsi+0x24>
    3ef0:	ba 95       	dec	r27
    3ef2:	c9 f7       	brne	.-14     	; 0x3ee6 <__fixunssfsi+0x14>
    3ef4:	14 c0       	rjmp	.+40     	; 0x3f1e <__fixunssfsi+0x4c>
    3ef6:	b1 30       	cpi	r27, 0x01	; 1
    3ef8:	91 f0       	breq	.+36     	; 0x3f1e <__fixunssfsi+0x4c>
    3efa:	0e 94 43 20 	call	0x4086	; 0x4086 <__fp_zero>
    3efe:	b1 e0       	ldi	r27, 0x01	; 1
    3f00:	08 95       	ret
    3f02:	0c 94 43 20 	jmp	0x4086	; 0x4086 <__fp_zero>
    3f06:	67 2f       	mov	r22, r23
    3f08:	78 2f       	mov	r23, r24
    3f0a:	88 27       	eor	r24, r24
    3f0c:	b8 5f       	subi	r27, 0xF8	; 248
    3f0e:	39 f0       	breq	.+14     	; 0x3f1e <__fixunssfsi+0x4c>
    3f10:	b9 3f       	cpi	r27, 0xF9	; 249
    3f12:	cc f3       	brlt	.-14     	; 0x3f06 <__fixunssfsi+0x34>
    3f14:	86 95       	lsr	r24
    3f16:	77 95       	ror	r23
    3f18:	67 95       	ror	r22
    3f1a:	b3 95       	inc	r27
    3f1c:	d9 f7       	brne	.-10     	; 0x3f14 <__fixunssfsi+0x42>
    3f1e:	3e f4       	brtc	.+14     	; 0x3f2e <__fixunssfsi+0x5c>
    3f20:	90 95       	com	r25
    3f22:	80 95       	com	r24
    3f24:	70 95       	com	r23
    3f26:	61 95       	neg	r22
    3f28:	7f 4f       	sbci	r23, 0xFF	; 255
    3f2a:	8f 4f       	sbci	r24, 0xFF	; 255
    3f2c:	9f 4f       	sbci	r25, 0xFF	; 255
    3f2e:	08 95       	ret

00003f30 <__floatunsisf>:
    3f30:	e8 94       	clt
    3f32:	09 c0       	rjmp	.+18     	; 0x3f46 <__floatsisf+0x12>

00003f34 <__floatsisf>:
    3f34:	97 fb       	bst	r25, 7
    3f36:	3e f4       	brtc	.+14     	; 0x3f46 <__floatsisf+0x12>
    3f38:	90 95       	com	r25
    3f3a:	80 95       	com	r24
    3f3c:	70 95       	com	r23
    3f3e:	61 95       	neg	r22
    3f40:	7f 4f       	sbci	r23, 0xFF	; 255
    3f42:	8f 4f       	sbci	r24, 0xFF	; 255
    3f44:	9f 4f       	sbci	r25, 0xFF	; 255
    3f46:	99 23       	and	r25, r25
    3f48:	a9 f0       	breq	.+42     	; 0x3f74 <__floatsisf+0x40>
    3f4a:	f9 2f       	mov	r31, r25
    3f4c:	96 e9       	ldi	r25, 0x96	; 150
    3f4e:	bb 27       	eor	r27, r27
    3f50:	93 95       	inc	r25
    3f52:	f6 95       	lsr	r31
    3f54:	87 95       	ror	r24
    3f56:	77 95       	ror	r23
    3f58:	67 95       	ror	r22
    3f5a:	b7 95       	ror	r27
    3f5c:	f1 11       	cpse	r31, r1
    3f5e:	f8 cf       	rjmp	.-16     	; 0x3f50 <__floatsisf+0x1c>
    3f60:	fa f4       	brpl	.+62     	; 0x3fa0 <__floatsisf+0x6c>
    3f62:	bb 0f       	add	r27, r27
    3f64:	11 f4       	brne	.+4      	; 0x3f6a <__floatsisf+0x36>
    3f66:	60 ff       	sbrs	r22, 0
    3f68:	1b c0       	rjmp	.+54     	; 0x3fa0 <__floatsisf+0x6c>
    3f6a:	6f 5f       	subi	r22, 0xFF	; 255
    3f6c:	7f 4f       	sbci	r23, 0xFF	; 255
    3f6e:	8f 4f       	sbci	r24, 0xFF	; 255
    3f70:	9f 4f       	sbci	r25, 0xFF	; 255
    3f72:	16 c0       	rjmp	.+44     	; 0x3fa0 <__floatsisf+0x6c>
    3f74:	88 23       	and	r24, r24
    3f76:	11 f0       	breq	.+4      	; 0x3f7c <__floatsisf+0x48>
    3f78:	96 e9       	ldi	r25, 0x96	; 150
    3f7a:	11 c0       	rjmp	.+34     	; 0x3f9e <__floatsisf+0x6a>
    3f7c:	77 23       	and	r23, r23
    3f7e:	21 f0       	breq	.+8      	; 0x3f88 <__floatsisf+0x54>
    3f80:	9e e8       	ldi	r25, 0x8E	; 142
    3f82:	87 2f       	mov	r24, r23
    3f84:	76 2f       	mov	r23, r22
    3f86:	05 c0       	rjmp	.+10     	; 0x3f92 <__floatsisf+0x5e>
    3f88:	66 23       	and	r22, r22
    3f8a:	71 f0       	breq	.+28     	; 0x3fa8 <__floatsisf+0x74>
    3f8c:	96 e8       	ldi	r25, 0x86	; 134
    3f8e:	86 2f       	mov	r24, r22
    3f90:	70 e0       	ldi	r23, 0x00	; 0
    3f92:	60 e0       	ldi	r22, 0x00	; 0
    3f94:	2a f0       	brmi	.+10     	; 0x3fa0 <__floatsisf+0x6c>
    3f96:	9a 95       	dec	r25
    3f98:	66 0f       	add	r22, r22
    3f9a:	77 1f       	adc	r23, r23
    3f9c:	88 1f       	adc	r24, r24
    3f9e:	da f7       	brpl	.-10     	; 0x3f96 <__floatsisf+0x62>
    3fa0:	88 0f       	add	r24, r24
    3fa2:	96 95       	lsr	r25
    3fa4:	87 95       	ror	r24
    3fa6:	97 f9       	bld	r25, 7
    3fa8:	08 95       	ret

00003faa <__fp_cmp>:
    3faa:	99 0f       	add	r25, r25
    3fac:	00 08       	sbc	r0, r0
    3fae:	55 0f       	add	r21, r21
    3fb0:	aa 0b       	sbc	r26, r26
    3fb2:	e0 e8       	ldi	r30, 0x80	; 128
    3fb4:	fe ef       	ldi	r31, 0xFE	; 254
    3fb6:	16 16       	cp	r1, r22
    3fb8:	17 06       	cpc	r1, r23
    3fba:	e8 07       	cpc	r30, r24
    3fbc:	f9 07       	cpc	r31, r25
    3fbe:	c0 f0       	brcs	.+48     	; 0x3ff0 <__fp_cmp+0x46>
    3fc0:	12 16       	cp	r1, r18
    3fc2:	13 06       	cpc	r1, r19
    3fc4:	e4 07       	cpc	r30, r20
    3fc6:	f5 07       	cpc	r31, r21
    3fc8:	98 f0       	brcs	.+38     	; 0x3ff0 <__fp_cmp+0x46>
    3fca:	62 1b       	sub	r22, r18
    3fcc:	73 0b       	sbc	r23, r19
    3fce:	84 0b       	sbc	r24, r20
    3fd0:	95 0b       	sbc	r25, r21
    3fd2:	39 f4       	brne	.+14     	; 0x3fe2 <__fp_cmp+0x38>
    3fd4:	0a 26       	eor	r0, r26
    3fd6:	61 f0       	breq	.+24     	; 0x3ff0 <__fp_cmp+0x46>
    3fd8:	23 2b       	or	r18, r19
    3fda:	24 2b       	or	r18, r20
    3fdc:	25 2b       	or	r18, r21
    3fde:	21 f4       	brne	.+8      	; 0x3fe8 <__fp_cmp+0x3e>
    3fe0:	08 95       	ret
    3fe2:	0a 26       	eor	r0, r26
    3fe4:	09 f4       	brne	.+2      	; 0x3fe8 <__fp_cmp+0x3e>
    3fe6:	a1 40       	sbci	r26, 0x01	; 1
    3fe8:	a6 95       	lsr	r26
    3fea:	8f ef       	ldi	r24, 0xFF	; 255
    3fec:	81 1d       	adc	r24, r1
    3fee:	81 1d       	adc	r24, r1
    3ff0:	08 95       	ret

00003ff2 <__fp_inf>:
    3ff2:	97 f9       	bld	r25, 7
    3ff4:	9f 67       	ori	r25, 0x7F	; 127
    3ff6:	80 e8       	ldi	r24, 0x80	; 128
    3ff8:	70 e0       	ldi	r23, 0x00	; 0
    3ffa:	60 e0       	ldi	r22, 0x00	; 0
    3ffc:	08 95       	ret

00003ffe <__fp_nan>:
    3ffe:	9f ef       	ldi	r25, 0xFF	; 255
    4000:	80 ec       	ldi	r24, 0xC0	; 192
    4002:	08 95       	ret

00004004 <__fp_pscA>:
    4004:	00 24       	eor	r0, r0
    4006:	0a 94       	dec	r0
    4008:	16 16       	cp	r1, r22
    400a:	17 06       	cpc	r1, r23
    400c:	18 06       	cpc	r1, r24
    400e:	09 06       	cpc	r0, r25
    4010:	08 95       	ret

00004012 <__fp_pscB>:
    4012:	00 24       	eor	r0, r0
    4014:	0a 94       	dec	r0
    4016:	12 16       	cp	r1, r18
    4018:	13 06       	cpc	r1, r19
    401a:	14 06       	cpc	r1, r20
    401c:	05 06       	cpc	r0, r21
    401e:	08 95       	ret

00004020 <__fp_round>:
    4020:	09 2e       	mov	r0, r25
    4022:	03 94       	inc	r0
    4024:	00 0c       	add	r0, r0
    4026:	11 f4       	brne	.+4      	; 0x402c <__fp_round+0xc>
    4028:	88 23       	and	r24, r24
    402a:	52 f0       	brmi	.+20     	; 0x4040 <__fp_round+0x20>
    402c:	bb 0f       	add	r27, r27
    402e:	40 f4       	brcc	.+16     	; 0x4040 <__fp_round+0x20>
    4030:	bf 2b       	or	r27, r31
    4032:	11 f4       	brne	.+4      	; 0x4038 <__fp_round+0x18>
    4034:	60 ff       	sbrs	r22, 0
    4036:	04 c0       	rjmp	.+8      	; 0x4040 <__fp_round+0x20>
    4038:	6f 5f       	subi	r22, 0xFF	; 255
    403a:	7f 4f       	sbci	r23, 0xFF	; 255
    403c:	8f 4f       	sbci	r24, 0xFF	; 255
    403e:	9f 4f       	sbci	r25, 0xFF	; 255
    4040:	08 95       	ret

00004042 <__fp_split3>:
    4042:	57 fd       	sbrc	r21, 7
    4044:	90 58       	subi	r25, 0x80	; 128
    4046:	44 0f       	add	r20, r20
    4048:	55 1f       	adc	r21, r21
    404a:	59 f0       	breq	.+22     	; 0x4062 <__fp_splitA+0x10>
    404c:	5f 3f       	cpi	r21, 0xFF	; 255
    404e:	71 f0       	breq	.+28     	; 0x406c <__fp_splitA+0x1a>
    4050:	47 95       	ror	r20

00004052 <__fp_splitA>:
    4052:	88 0f       	add	r24, r24
    4054:	97 fb       	bst	r25, 7
    4056:	99 1f       	adc	r25, r25
    4058:	61 f0       	breq	.+24     	; 0x4072 <__fp_splitA+0x20>
    405a:	9f 3f       	cpi	r25, 0xFF	; 255
    405c:	79 f0       	breq	.+30     	; 0x407c <__fp_splitA+0x2a>
    405e:	87 95       	ror	r24
    4060:	08 95       	ret
    4062:	12 16       	cp	r1, r18
    4064:	13 06       	cpc	r1, r19
    4066:	14 06       	cpc	r1, r20
    4068:	55 1f       	adc	r21, r21
    406a:	f2 cf       	rjmp	.-28     	; 0x4050 <__fp_split3+0xe>
    406c:	46 95       	lsr	r20
    406e:	f1 df       	rcall	.-30     	; 0x4052 <__fp_splitA>
    4070:	08 c0       	rjmp	.+16     	; 0x4082 <__fp_splitA+0x30>
    4072:	16 16       	cp	r1, r22
    4074:	17 06       	cpc	r1, r23
    4076:	18 06       	cpc	r1, r24
    4078:	99 1f       	adc	r25, r25
    407a:	f1 cf       	rjmp	.-30     	; 0x405e <__fp_splitA+0xc>
    407c:	86 95       	lsr	r24
    407e:	71 05       	cpc	r23, r1
    4080:	61 05       	cpc	r22, r1
    4082:	08 94       	sec
    4084:	08 95       	ret

00004086 <__fp_zero>:
    4086:	e8 94       	clt

00004088 <__fp_szero>:
    4088:	bb 27       	eor	r27, r27
    408a:	66 27       	eor	r22, r22
    408c:	77 27       	eor	r23, r23
    408e:	cb 01       	movw	r24, r22
    4090:	97 f9       	bld	r25, 7
    4092:	08 95       	ret

00004094 <__gesf2>:
    4094:	0e 94 d5 1f 	call	0x3faa	; 0x3faa <__fp_cmp>
    4098:	08 f4       	brcc	.+2      	; 0x409c <__gesf2+0x8>
    409a:	8f ef       	ldi	r24, 0xFF	; 255
    409c:	08 95       	ret

0000409e <__mulsf3>:
    409e:	0e 94 62 20 	call	0x40c4	; 0x40c4 <__mulsf3x>
    40a2:	0c 94 10 20 	jmp	0x4020	; 0x4020 <__fp_round>
    40a6:	0e 94 02 20 	call	0x4004	; 0x4004 <__fp_pscA>
    40aa:	38 f0       	brcs	.+14     	; 0x40ba <__mulsf3+0x1c>
    40ac:	0e 94 09 20 	call	0x4012	; 0x4012 <__fp_pscB>
    40b0:	20 f0       	brcs	.+8      	; 0x40ba <__mulsf3+0x1c>
    40b2:	95 23       	and	r25, r21
    40b4:	11 f0       	breq	.+4      	; 0x40ba <__mulsf3+0x1c>
    40b6:	0c 94 f9 1f 	jmp	0x3ff2	; 0x3ff2 <__fp_inf>
    40ba:	0c 94 ff 1f 	jmp	0x3ffe	; 0x3ffe <__fp_nan>
    40be:	11 24       	eor	r1, r1
    40c0:	0c 94 44 20 	jmp	0x4088	; 0x4088 <__fp_szero>

000040c4 <__mulsf3x>:
    40c4:	0e 94 21 20 	call	0x4042	; 0x4042 <__fp_split3>
    40c8:	70 f3       	brcs	.-36     	; 0x40a6 <__mulsf3+0x8>

000040ca <__mulsf3_pse>:
    40ca:	95 9f       	mul	r25, r21
    40cc:	c1 f3       	breq	.-16     	; 0x40be <__mulsf3+0x20>
    40ce:	95 0f       	add	r25, r21
    40d0:	50 e0       	ldi	r21, 0x00	; 0
    40d2:	55 1f       	adc	r21, r21
    40d4:	62 9f       	mul	r22, r18
    40d6:	f0 01       	movw	r30, r0
    40d8:	72 9f       	mul	r23, r18
    40da:	bb 27       	eor	r27, r27
    40dc:	f0 0d       	add	r31, r0
    40de:	b1 1d       	adc	r27, r1
    40e0:	63 9f       	mul	r22, r19
    40e2:	aa 27       	eor	r26, r26
    40e4:	f0 0d       	add	r31, r0
    40e6:	b1 1d       	adc	r27, r1
    40e8:	aa 1f       	adc	r26, r26
    40ea:	64 9f       	mul	r22, r20
    40ec:	66 27       	eor	r22, r22
    40ee:	b0 0d       	add	r27, r0
    40f0:	a1 1d       	adc	r26, r1
    40f2:	66 1f       	adc	r22, r22
    40f4:	82 9f       	mul	r24, r18
    40f6:	22 27       	eor	r18, r18
    40f8:	b0 0d       	add	r27, r0
    40fa:	a1 1d       	adc	r26, r1
    40fc:	62 1f       	adc	r22, r18
    40fe:	73 9f       	mul	r23, r19
    4100:	b0 0d       	add	r27, r0
    4102:	a1 1d       	adc	r26, r1
    4104:	62 1f       	adc	r22, r18
    4106:	83 9f       	mul	r24, r19
    4108:	a0 0d       	add	r26, r0
    410a:	61 1d       	adc	r22, r1
    410c:	22 1f       	adc	r18, r18
    410e:	74 9f       	mul	r23, r20
    4110:	33 27       	eor	r19, r19
    4112:	a0 0d       	add	r26, r0
    4114:	61 1d       	adc	r22, r1
    4116:	23 1f       	adc	r18, r19
    4118:	84 9f       	mul	r24, r20
    411a:	60 0d       	add	r22, r0
    411c:	21 1d       	adc	r18, r1
    411e:	82 2f       	mov	r24, r18
    4120:	76 2f       	mov	r23, r22
    4122:	6a 2f       	mov	r22, r26
    4124:	11 24       	eor	r1, r1
    4126:	9f 57       	subi	r25, 0x7F	; 127
    4128:	50 40       	sbci	r21, 0x00	; 0
    412a:	9a f0       	brmi	.+38     	; 0x4152 <__mulsf3_pse+0x88>
    412c:	f1 f0       	breq	.+60     	; 0x416a <__mulsf3_pse+0xa0>
    412e:	88 23       	and	r24, r24
    4130:	4a f0       	brmi	.+18     	; 0x4144 <__mulsf3_pse+0x7a>
    4132:	ee 0f       	add	r30, r30
    4134:	ff 1f       	adc	r31, r31
    4136:	bb 1f       	adc	r27, r27
    4138:	66 1f       	adc	r22, r22
    413a:	77 1f       	adc	r23, r23
    413c:	88 1f       	adc	r24, r24
    413e:	91 50       	subi	r25, 0x01	; 1
    4140:	50 40       	sbci	r21, 0x00	; 0
    4142:	a9 f7       	brne	.-22     	; 0x412e <__mulsf3_pse+0x64>
    4144:	9e 3f       	cpi	r25, 0xFE	; 254
    4146:	51 05       	cpc	r21, r1
    4148:	80 f0       	brcs	.+32     	; 0x416a <__mulsf3_pse+0xa0>
    414a:	0c 94 f9 1f 	jmp	0x3ff2	; 0x3ff2 <__fp_inf>
    414e:	0c 94 44 20 	jmp	0x4088	; 0x4088 <__fp_szero>
    4152:	5f 3f       	cpi	r21, 0xFF	; 255
    4154:	e4 f3       	brlt	.-8      	; 0x414e <__mulsf3_pse+0x84>
    4156:	98 3e       	cpi	r25, 0xE8	; 232
    4158:	d4 f3       	brlt	.-12     	; 0x414e <__mulsf3_pse+0x84>
    415a:	86 95       	lsr	r24
    415c:	77 95       	ror	r23
    415e:	67 95       	ror	r22
    4160:	b7 95       	ror	r27
    4162:	f7 95       	ror	r31
    4164:	e7 95       	ror	r30
    4166:	9f 5f       	subi	r25, 0xFF	; 255
    4168:	c1 f7       	brne	.-16     	; 0x415a <__mulsf3_pse+0x90>
    416a:	fe 2b       	or	r31, r30
    416c:	88 0f       	add	r24, r24
    416e:	91 1d       	adc	r25, r1
    4170:	96 95       	lsr	r25
    4172:	87 95       	ror	r24
    4174:	97 f9       	bld	r25, 7
    4176:	08 95       	ret

00004178 <__mulsi3>:
    4178:	db 01       	movw	r26, r22
    417a:	8f 93       	push	r24
    417c:	9f 93       	push	r25
    417e:	0e 94 54 21 	call	0x42a8	; 0x42a8 <__muluhisi3>
    4182:	bf 91       	pop	r27
    4184:	af 91       	pop	r26
    4186:	a2 9f       	mul	r26, r18
    4188:	80 0d       	add	r24, r0
    418a:	91 1d       	adc	r25, r1
    418c:	a3 9f       	mul	r26, r19
    418e:	90 0d       	add	r25, r0
    4190:	b2 9f       	mul	r27, r18
    4192:	90 0d       	add	r25, r0
    4194:	11 24       	eor	r1, r1
    4196:	08 95       	ret

00004198 <__udivmodhi4>:
    4198:	aa 1b       	sub	r26, r26
    419a:	bb 1b       	sub	r27, r27
    419c:	51 e1       	ldi	r21, 0x11	; 17
    419e:	07 c0       	rjmp	.+14     	; 0x41ae <__udivmodhi4_ep>

000041a0 <__udivmodhi4_loop>:
    41a0:	aa 1f       	adc	r26, r26
    41a2:	bb 1f       	adc	r27, r27
    41a4:	a6 17       	cp	r26, r22
    41a6:	b7 07       	cpc	r27, r23
    41a8:	10 f0       	brcs	.+4      	; 0x41ae <__udivmodhi4_ep>
    41aa:	a6 1b       	sub	r26, r22
    41ac:	b7 0b       	sbc	r27, r23

000041ae <__udivmodhi4_ep>:
    41ae:	88 1f       	adc	r24, r24
    41b0:	99 1f       	adc	r25, r25
    41b2:	5a 95       	dec	r21
    41b4:	a9 f7       	brne	.-22     	; 0x41a0 <__udivmodhi4_loop>
    41b6:	80 95       	com	r24
    41b8:	90 95       	com	r25
    41ba:	bc 01       	movw	r22, r24
    41bc:	cd 01       	movw	r24, r26
    41be:	08 95       	ret

000041c0 <__divmodhi4>:
    41c0:	97 fb       	bst	r25, 7
    41c2:	07 2e       	mov	r0, r23
    41c4:	16 f4       	brtc	.+4      	; 0x41ca <__divmodhi4+0xa>
    41c6:	00 94       	com	r0
    41c8:	07 d0       	rcall	.+14     	; 0x41d8 <__divmodhi4_neg1>
    41ca:	77 fd       	sbrc	r23, 7
    41cc:	09 d0       	rcall	.+18     	; 0x41e0 <__divmodhi4_neg2>
    41ce:	0e 94 cc 20 	call	0x4198	; 0x4198 <__udivmodhi4>
    41d2:	07 fc       	sbrc	r0, 7
    41d4:	05 d0       	rcall	.+10     	; 0x41e0 <__divmodhi4_neg2>
    41d6:	3e f4       	brtc	.+14     	; 0x41e6 <__divmodhi4_exit>

000041d8 <__divmodhi4_neg1>:
    41d8:	90 95       	com	r25
    41da:	81 95       	neg	r24
    41dc:	9f 4f       	sbci	r25, 0xFF	; 255
    41de:	08 95       	ret

000041e0 <__divmodhi4_neg2>:
    41e0:	70 95       	com	r23
    41e2:	61 95       	neg	r22
    41e4:	7f 4f       	sbci	r23, 0xFF	; 255

000041e6 <__divmodhi4_exit>:
    41e6:	08 95       	ret

000041e8 <__udivmodsi4>:
    41e8:	a1 e2       	ldi	r26, 0x21	; 33
    41ea:	1a 2e       	mov	r1, r26
    41ec:	aa 1b       	sub	r26, r26
    41ee:	bb 1b       	sub	r27, r27
    41f0:	fd 01       	movw	r30, r26
    41f2:	0d c0       	rjmp	.+26     	; 0x420e <__udivmodsi4_ep>

000041f4 <__udivmodsi4_loop>:
    41f4:	aa 1f       	adc	r26, r26
    41f6:	bb 1f       	adc	r27, r27
    41f8:	ee 1f       	adc	r30, r30
    41fa:	ff 1f       	adc	r31, r31
    41fc:	a2 17       	cp	r26, r18
    41fe:	b3 07       	cpc	r27, r19
    4200:	e4 07       	cpc	r30, r20
    4202:	f5 07       	cpc	r31, r21
    4204:	20 f0       	brcs	.+8      	; 0x420e <__udivmodsi4_ep>
    4206:	a2 1b       	sub	r26, r18
    4208:	b3 0b       	sbc	r27, r19
    420a:	e4 0b       	sbc	r30, r20
    420c:	f5 0b       	sbc	r31, r21

0000420e <__udivmodsi4_ep>:
    420e:	66 1f       	adc	r22, r22
    4210:	77 1f       	adc	r23, r23
    4212:	88 1f       	adc	r24, r24
    4214:	99 1f       	adc	r25, r25
    4216:	1a 94       	dec	r1
    4218:	69 f7       	brne	.-38     	; 0x41f4 <__udivmodsi4_loop>
    421a:	60 95       	com	r22
    421c:	70 95       	com	r23
    421e:	80 95       	com	r24
    4220:	90 95       	com	r25
    4222:	9b 01       	movw	r18, r22
    4224:	ac 01       	movw	r20, r24
    4226:	bd 01       	movw	r22, r26
    4228:	cf 01       	movw	r24, r30
    422a:	08 95       	ret

0000422c <__divmodsi4>:
    422c:	05 2e       	mov	r0, r21
    422e:	97 fb       	bst	r25, 7
    4230:	1e f4       	brtc	.+6      	; 0x4238 <__divmodsi4+0xc>
    4232:	00 94       	com	r0
    4234:	0e 94 2d 21 	call	0x425a	; 0x425a <__negsi2>
    4238:	57 fd       	sbrc	r21, 7
    423a:	07 d0       	rcall	.+14     	; 0x424a <__divmodsi4_neg2>
    423c:	0e 94 f4 20 	call	0x41e8	; 0x41e8 <__udivmodsi4>
    4240:	07 fc       	sbrc	r0, 7
    4242:	03 d0       	rcall	.+6      	; 0x424a <__divmodsi4_neg2>
    4244:	4e f4       	brtc	.+18     	; 0x4258 <__divmodsi4_exit>
    4246:	0c 94 2d 21 	jmp	0x425a	; 0x425a <__negsi2>

0000424a <__divmodsi4_neg2>:
    424a:	50 95       	com	r21
    424c:	40 95       	com	r20
    424e:	30 95       	com	r19
    4250:	21 95       	neg	r18
    4252:	3f 4f       	sbci	r19, 0xFF	; 255
    4254:	4f 4f       	sbci	r20, 0xFF	; 255
    4256:	5f 4f       	sbci	r21, 0xFF	; 255

00004258 <__divmodsi4_exit>:
    4258:	08 95       	ret

0000425a <__negsi2>:
    425a:	90 95       	com	r25
    425c:	80 95       	com	r24
    425e:	70 95       	com	r23
    4260:	61 95       	neg	r22
    4262:	7f 4f       	sbci	r23, 0xFF	; 255
    4264:	8f 4f       	sbci	r24, 0xFF	; 255
    4266:	9f 4f       	sbci	r25, 0xFF	; 255
    4268:	08 95       	ret

0000426a <__tablejump2__>:
    426a:	ee 0f       	add	r30, r30
    426c:	ff 1f       	adc	r31, r31
    426e:	00 24       	eor	r0, r0
    4270:	00 1c       	adc	r0, r0
    4272:	0b be       	out	0x3b, r0	; 59
    4274:	07 90       	elpm	r0, Z+
    4276:	f6 91       	elpm	r31, Z
    4278:	e0 2d       	mov	r30, r0
    427a:	09 94       	ijmp

0000427c <__umulhisi3>:
    427c:	a2 9f       	mul	r26, r18
    427e:	b0 01       	movw	r22, r0
    4280:	b3 9f       	mul	r27, r19
    4282:	c0 01       	movw	r24, r0
    4284:	a3 9f       	mul	r26, r19
    4286:	70 0d       	add	r23, r0
    4288:	81 1d       	adc	r24, r1
    428a:	11 24       	eor	r1, r1
    428c:	91 1d       	adc	r25, r1
    428e:	b2 9f       	mul	r27, r18
    4290:	70 0d       	add	r23, r0
    4292:	81 1d       	adc	r24, r1
    4294:	11 24       	eor	r1, r1
    4296:	91 1d       	adc	r25, r1
    4298:	08 95       	ret

0000429a <__usmulhisi3>:
    429a:	0e 94 3e 21 	call	0x427c	; 0x427c <__umulhisi3>

0000429e <__usmulhisi3_tail>:
    429e:	b7 ff       	sbrs	r27, 7
    42a0:	08 95       	ret
    42a2:	82 1b       	sub	r24, r18
    42a4:	93 0b       	sbc	r25, r19
    42a6:	08 95       	ret

000042a8 <__muluhisi3>:
    42a8:	0e 94 3e 21 	call	0x427c	; 0x427c <__umulhisi3>
    42ac:	a5 9f       	mul	r26, r21
    42ae:	90 0d       	add	r25, r0
    42b0:	b4 9f       	mul	r27, r20
    42b2:	90 0d       	add	r25, r0
    42b4:	a4 9f       	mul	r26, r20
    42b6:	80 0d       	add	r24, r0
    42b8:	91 1d       	adc	r25, r1
    42ba:	11 24       	eor	r1, r1
    42bc:	08 95       	ret

000042be <__mulshisi3>:
    42be:	b7 ff       	sbrs	r27, 7
    42c0:	0c 94 54 21 	jmp	0x42a8	; 0x42a8 <__muluhisi3>

000042c4 <__mulohisi3>:
    42c4:	0e 94 54 21 	call	0x42a8	; 0x42a8 <__muluhisi3>
    42c8:	82 1b       	sub	r24, r18
    42ca:	93 0b       	sbc	r25, r19
    42cc:	08 95       	ret

000042ce <malloc>:
    42ce:	0f 93       	push	r16
    42d0:	1f 93       	push	r17
    42d2:	cf 93       	push	r28
    42d4:	df 93       	push	r29
    42d6:	82 30       	cpi	r24, 0x02	; 2
    42d8:	91 05       	cpc	r25, r1
    42da:	10 f4       	brcc	.+4      	; 0x42e0 <malloc+0x12>
    42dc:	82 e0       	ldi	r24, 0x02	; 2
    42de:	90 e0       	ldi	r25, 0x00	; 0
    42e0:	e0 91 14 43 	lds	r30, 0x4314	; 0x804314 <__flp>
    42e4:	f0 91 15 43 	lds	r31, 0x4315	; 0x804315 <__flp+0x1>
    42e8:	20 e0       	ldi	r18, 0x00	; 0
    42ea:	30 e0       	ldi	r19, 0x00	; 0
    42ec:	a0 e0       	ldi	r26, 0x00	; 0
    42ee:	b0 e0       	ldi	r27, 0x00	; 0
    42f0:	30 97       	sbiw	r30, 0x00	; 0
    42f2:	19 f1       	breq	.+70     	; 0x433a <malloc+0x6c>
    42f4:	40 81       	ld	r20, Z
    42f6:	51 81       	ldd	r21, Z+1	; 0x01
    42f8:	02 81       	ldd	r16, Z+2	; 0x02
    42fa:	13 81       	ldd	r17, Z+3	; 0x03
    42fc:	48 17       	cp	r20, r24
    42fe:	59 07       	cpc	r21, r25
    4300:	c8 f0       	brcs	.+50     	; 0x4334 <malloc+0x66>
    4302:	84 17       	cp	r24, r20
    4304:	95 07       	cpc	r25, r21
    4306:	69 f4       	brne	.+26     	; 0x4322 <malloc+0x54>
    4308:	10 97       	sbiw	r26, 0x00	; 0
    430a:	31 f0       	breq	.+12     	; 0x4318 <malloc+0x4a>
    430c:	12 96       	adiw	r26, 0x02	; 2
    430e:	0c 93       	st	X, r16
    4310:	12 97       	sbiw	r26, 0x02	; 2
    4312:	13 96       	adiw	r26, 0x03	; 3
    4314:	1c 93       	st	X, r17
    4316:	27 c0       	rjmp	.+78     	; 0x4366 <malloc+0x98>
    4318:	00 93 14 43 	sts	0x4314, r16	; 0x804314 <__flp>
    431c:	10 93 15 43 	sts	0x4315, r17	; 0x804315 <__flp+0x1>
    4320:	22 c0       	rjmp	.+68     	; 0x4366 <malloc+0x98>
    4322:	21 15       	cp	r18, r1
    4324:	31 05       	cpc	r19, r1
    4326:	19 f0       	breq	.+6      	; 0x432e <malloc+0x60>
    4328:	42 17       	cp	r20, r18
    432a:	53 07       	cpc	r21, r19
    432c:	18 f4       	brcc	.+6      	; 0x4334 <malloc+0x66>
    432e:	9a 01       	movw	r18, r20
    4330:	bd 01       	movw	r22, r26
    4332:	ef 01       	movw	r28, r30
    4334:	df 01       	movw	r26, r30
    4336:	f8 01       	movw	r30, r16
    4338:	db cf       	rjmp	.-74     	; 0x42f0 <malloc+0x22>
    433a:	21 15       	cp	r18, r1
    433c:	31 05       	cpc	r19, r1
    433e:	f9 f0       	breq	.+62     	; 0x437e <malloc+0xb0>
    4340:	28 1b       	sub	r18, r24
    4342:	39 0b       	sbc	r19, r25
    4344:	24 30       	cpi	r18, 0x04	; 4
    4346:	31 05       	cpc	r19, r1
    4348:	80 f4       	brcc	.+32     	; 0x436a <malloc+0x9c>
    434a:	8a 81       	ldd	r24, Y+2	; 0x02
    434c:	9b 81       	ldd	r25, Y+3	; 0x03
    434e:	61 15       	cp	r22, r1
    4350:	71 05       	cpc	r23, r1
    4352:	21 f0       	breq	.+8      	; 0x435c <malloc+0x8e>
    4354:	fb 01       	movw	r30, r22
    4356:	82 83       	std	Z+2, r24	; 0x02
    4358:	93 83       	std	Z+3, r25	; 0x03
    435a:	04 c0       	rjmp	.+8      	; 0x4364 <malloc+0x96>
    435c:	80 93 14 43 	sts	0x4314, r24	; 0x804314 <__flp>
    4360:	90 93 15 43 	sts	0x4315, r25	; 0x804315 <__flp+0x1>
    4364:	fe 01       	movw	r30, r28
    4366:	32 96       	adiw	r30, 0x02	; 2
    4368:	44 c0       	rjmp	.+136    	; 0x43f2 <malloc+0x124>
    436a:	fe 01       	movw	r30, r28
    436c:	e2 0f       	add	r30, r18
    436e:	f3 1f       	adc	r31, r19
    4370:	81 93       	st	Z+, r24
    4372:	91 93       	st	Z+, r25
    4374:	22 50       	subi	r18, 0x02	; 2
    4376:	31 09       	sbc	r19, r1
    4378:	28 83       	st	Y, r18
    437a:	39 83       	std	Y+1, r19	; 0x01
    437c:	3a c0       	rjmp	.+116    	; 0x43f2 <malloc+0x124>
    437e:	20 91 12 43 	lds	r18, 0x4312	; 0x804312 <__brkval>
    4382:	30 91 13 43 	lds	r19, 0x4313	; 0x804313 <__brkval+0x1>
    4386:	23 2b       	or	r18, r19
    4388:	41 f4       	brne	.+16     	; 0x439a <malloc+0xcc>
    438a:	20 91 02 40 	lds	r18, 0x4002	; 0x804002 <__malloc_heap_start>
    438e:	30 91 03 40 	lds	r19, 0x4003	; 0x804003 <__malloc_heap_start+0x1>
    4392:	20 93 12 43 	sts	0x4312, r18	; 0x804312 <__brkval>
    4396:	30 93 13 43 	sts	0x4313, r19	; 0x804313 <__brkval+0x1>
    439a:	20 91 00 40 	lds	r18, 0x4000	; 0x804000 <__DATA_REGION_ORIGIN__>
    439e:	30 91 01 40 	lds	r19, 0x4001	; 0x804001 <__DATA_REGION_ORIGIN__+0x1>
    43a2:	21 15       	cp	r18, r1
    43a4:	31 05       	cpc	r19, r1
    43a6:	41 f4       	brne	.+16     	; 0x43b8 <malloc+0xea>
    43a8:	2d b7       	in	r18, 0x3d	; 61
    43aa:	3e b7       	in	r19, 0x3e	; 62
    43ac:	40 91 04 40 	lds	r20, 0x4004	; 0x804004 <__malloc_margin>
    43b0:	50 91 05 40 	lds	r21, 0x4005	; 0x804005 <__malloc_margin+0x1>
    43b4:	24 1b       	sub	r18, r20
    43b6:	35 0b       	sbc	r19, r21
    43b8:	e0 91 12 43 	lds	r30, 0x4312	; 0x804312 <__brkval>
    43bc:	f0 91 13 43 	lds	r31, 0x4313	; 0x804313 <__brkval+0x1>
    43c0:	e2 17       	cp	r30, r18
    43c2:	f3 07       	cpc	r31, r19
    43c4:	a0 f4       	brcc	.+40     	; 0x43ee <malloc+0x120>
    43c6:	2e 1b       	sub	r18, r30
    43c8:	3f 0b       	sbc	r19, r31
    43ca:	28 17       	cp	r18, r24
    43cc:	39 07       	cpc	r19, r25
    43ce:	78 f0       	brcs	.+30     	; 0x43ee <malloc+0x120>
    43d0:	ac 01       	movw	r20, r24
    43d2:	4e 5f       	subi	r20, 0xFE	; 254
    43d4:	5f 4f       	sbci	r21, 0xFF	; 255
    43d6:	24 17       	cp	r18, r20
    43d8:	35 07       	cpc	r19, r21
    43da:	48 f0       	brcs	.+18     	; 0x43ee <malloc+0x120>
    43dc:	4e 0f       	add	r20, r30
    43de:	5f 1f       	adc	r21, r31
    43e0:	40 93 12 43 	sts	0x4312, r20	; 0x804312 <__brkval>
    43e4:	50 93 13 43 	sts	0x4313, r21	; 0x804313 <__brkval+0x1>
    43e8:	81 93       	st	Z+, r24
    43ea:	91 93       	st	Z+, r25
    43ec:	02 c0       	rjmp	.+4      	; 0x43f2 <malloc+0x124>
    43ee:	e0 e0       	ldi	r30, 0x00	; 0
    43f0:	f0 e0       	ldi	r31, 0x00	; 0
    43f2:	cf 01       	movw	r24, r30
    43f4:	df 91       	pop	r29
    43f6:	cf 91       	pop	r28
    43f8:	1f 91       	pop	r17
    43fa:	0f 91       	pop	r16
    43fc:	08 95       	ret

000043fe <free>:
    43fe:	cf 93       	push	r28
    4400:	df 93       	push	r29
    4402:	00 97       	sbiw	r24, 0x00	; 0
    4404:	09 f4       	brne	.+2      	; 0x4408 <free+0xa>
    4406:	81 c0       	rjmp	.+258    	; 0x450a <free+0x10c>
    4408:	fc 01       	movw	r30, r24
    440a:	32 97       	sbiw	r30, 0x02	; 2
    440c:	12 82       	std	Z+2, r1	; 0x02
    440e:	13 82       	std	Z+3, r1	; 0x03
    4410:	a0 91 14 43 	lds	r26, 0x4314	; 0x804314 <__flp>
    4414:	b0 91 15 43 	lds	r27, 0x4315	; 0x804315 <__flp+0x1>
    4418:	10 97       	sbiw	r26, 0x00	; 0
    441a:	81 f4       	brne	.+32     	; 0x443c <free+0x3e>
    441c:	20 81       	ld	r18, Z
    441e:	31 81       	ldd	r19, Z+1	; 0x01
    4420:	82 0f       	add	r24, r18
    4422:	93 1f       	adc	r25, r19
    4424:	20 91 12 43 	lds	r18, 0x4312	; 0x804312 <__brkval>
    4428:	30 91 13 43 	lds	r19, 0x4313	; 0x804313 <__brkval+0x1>
    442c:	28 17       	cp	r18, r24
    442e:	39 07       	cpc	r19, r25
    4430:	51 f5       	brne	.+84     	; 0x4486 <free+0x88>
    4432:	e0 93 12 43 	sts	0x4312, r30	; 0x804312 <__brkval>
    4436:	f0 93 13 43 	sts	0x4313, r31	; 0x804313 <__brkval+0x1>
    443a:	67 c0       	rjmp	.+206    	; 0x450a <free+0x10c>
    443c:	ed 01       	movw	r28, r26
    443e:	20 e0       	ldi	r18, 0x00	; 0
    4440:	30 e0       	ldi	r19, 0x00	; 0
    4442:	ce 17       	cp	r28, r30
    4444:	df 07       	cpc	r29, r31
    4446:	40 f4       	brcc	.+16     	; 0x4458 <free+0x5a>
    4448:	4a 81       	ldd	r20, Y+2	; 0x02
    444a:	5b 81       	ldd	r21, Y+3	; 0x03
    444c:	9e 01       	movw	r18, r28
    444e:	41 15       	cp	r20, r1
    4450:	51 05       	cpc	r21, r1
    4452:	f1 f0       	breq	.+60     	; 0x4490 <free+0x92>
    4454:	ea 01       	movw	r28, r20
    4456:	f5 cf       	rjmp	.-22     	; 0x4442 <free+0x44>
    4458:	c2 83       	std	Z+2, r28	; 0x02
    445a:	d3 83       	std	Z+3, r29	; 0x03
    445c:	40 81       	ld	r20, Z
    445e:	51 81       	ldd	r21, Z+1	; 0x01
    4460:	84 0f       	add	r24, r20
    4462:	95 1f       	adc	r25, r21
    4464:	c8 17       	cp	r28, r24
    4466:	d9 07       	cpc	r29, r25
    4468:	59 f4       	brne	.+22     	; 0x4480 <free+0x82>
    446a:	88 81       	ld	r24, Y
    446c:	99 81       	ldd	r25, Y+1	; 0x01
    446e:	84 0f       	add	r24, r20
    4470:	95 1f       	adc	r25, r21
    4472:	02 96       	adiw	r24, 0x02	; 2
    4474:	80 83       	st	Z, r24
    4476:	91 83       	std	Z+1, r25	; 0x01
    4478:	8a 81       	ldd	r24, Y+2	; 0x02
    447a:	9b 81       	ldd	r25, Y+3	; 0x03
    447c:	82 83       	std	Z+2, r24	; 0x02
    447e:	93 83       	std	Z+3, r25	; 0x03
    4480:	21 15       	cp	r18, r1
    4482:	31 05       	cpc	r19, r1
    4484:	29 f4       	brne	.+10     	; 0x4490 <free+0x92>
    4486:	e0 93 14 43 	sts	0x4314, r30	; 0x804314 <__flp>
    448a:	f0 93 15 43 	sts	0x4315, r31	; 0x804315 <__flp+0x1>
    448e:	3d c0       	rjmp	.+122    	; 0x450a <free+0x10c>
    4490:	e9 01       	movw	r28, r18
    4492:	ea 83       	std	Y+2, r30	; 0x02
    4494:	fb 83       	std	Y+3, r31	; 0x03
    4496:	49 91       	ld	r20, Y+
    4498:	59 91       	ld	r21, Y+
    449a:	c4 0f       	add	r28, r20
    449c:	d5 1f       	adc	r29, r21
    449e:	ec 17       	cp	r30, r28
    44a0:	fd 07       	cpc	r31, r29
    44a2:	61 f4       	brne	.+24     	; 0x44bc <free+0xbe>
    44a4:	80 81       	ld	r24, Z
    44a6:	91 81       	ldd	r25, Z+1	; 0x01
    44a8:	84 0f       	add	r24, r20
    44aa:	95 1f       	adc	r25, r21
    44ac:	02 96       	adiw	r24, 0x02	; 2
    44ae:	e9 01       	movw	r28, r18
    44b0:	88 83       	st	Y, r24
    44b2:	99 83       	std	Y+1, r25	; 0x01
    44b4:	82 81       	ldd	r24, Z+2	; 0x02
    44b6:	93 81       	ldd	r25, Z+3	; 0x03
    44b8:	8a 83       	std	Y+2, r24	; 0x02
    44ba:	9b 83       	std	Y+3, r25	; 0x03
    44bc:	e0 e0       	ldi	r30, 0x00	; 0
    44be:	f0 e0       	ldi	r31, 0x00	; 0
    44c0:	12 96       	adiw	r26, 0x02	; 2
    44c2:	8d 91       	ld	r24, X+
    44c4:	9c 91       	ld	r25, X
    44c6:	13 97       	sbiw	r26, 0x03	; 3
    44c8:	00 97       	sbiw	r24, 0x00	; 0
    44ca:	19 f0       	breq	.+6      	; 0x44d2 <free+0xd4>
    44cc:	fd 01       	movw	r30, r26
    44ce:	dc 01       	movw	r26, r24
    44d0:	f7 cf       	rjmp	.-18     	; 0x44c0 <free+0xc2>
    44d2:	8d 91       	ld	r24, X+
    44d4:	9c 91       	ld	r25, X
    44d6:	11 97       	sbiw	r26, 0x01	; 1
    44d8:	9d 01       	movw	r18, r26
    44da:	2e 5f       	subi	r18, 0xFE	; 254
    44dc:	3f 4f       	sbci	r19, 0xFF	; 255
    44de:	82 0f       	add	r24, r18
    44e0:	93 1f       	adc	r25, r19
    44e2:	20 91 12 43 	lds	r18, 0x4312	; 0x804312 <__brkval>
    44e6:	30 91 13 43 	lds	r19, 0x4313	; 0x804313 <__brkval+0x1>
    44ea:	28 17       	cp	r18, r24
    44ec:	39 07       	cpc	r19, r25
    44ee:	69 f4       	brne	.+26     	; 0x450a <free+0x10c>
    44f0:	30 97       	sbiw	r30, 0x00	; 0
    44f2:	29 f4       	brne	.+10     	; 0x44fe <free+0x100>
    44f4:	10 92 14 43 	sts	0x4314, r1	; 0x804314 <__flp>
    44f8:	10 92 15 43 	sts	0x4315, r1	; 0x804315 <__flp+0x1>
    44fc:	02 c0       	rjmp	.+4      	; 0x4502 <free+0x104>
    44fe:	12 82       	std	Z+2, r1	; 0x02
    4500:	13 82       	std	Z+3, r1	; 0x03
    4502:	a0 93 12 43 	sts	0x4312, r26	; 0x804312 <__brkval>
    4506:	b0 93 13 43 	sts	0x4313, r27	; 0x804313 <__brkval+0x1>
    450a:	df 91       	pop	r29
    450c:	cf 91       	pop	r28
    450e:	08 95       	ret

00004510 <atoi>:
    4510:	fc 01       	movw	r30, r24
    4512:	88 27       	eor	r24, r24
    4514:	99 27       	eor	r25, r25
    4516:	e8 94       	clt
    4518:	21 91       	ld	r18, Z+
    451a:	20 32       	cpi	r18, 0x20	; 32
    451c:	e9 f3       	breq	.-6      	; 0x4518 <atoi+0x8>
    451e:	29 30       	cpi	r18, 0x09	; 9
    4520:	10 f0       	brcs	.+4      	; 0x4526 <atoi+0x16>
    4522:	2e 30       	cpi	r18, 0x0E	; 14
    4524:	c8 f3       	brcs	.-14     	; 0x4518 <atoi+0x8>
    4526:	2b 32       	cpi	r18, 0x2B	; 43
    4528:	41 f0       	breq	.+16     	; 0x453a <atoi+0x2a>
    452a:	2d 32       	cpi	r18, 0x2D	; 45
    452c:	39 f4       	brne	.+14     	; 0x453c <atoi+0x2c>
    452e:	68 94       	set
    4530:	04 c0       	rjmp	.+8      	; 0x453a <atoi+0x2a>
    4532:	0e 94 f9 22 	call	0x45f2	; 0x45f2 <__mulhi_const_10>
    4536:	82 0f       	add	r24, r18
    4538:	91 1d       	adc	r25, r1
    453a:	21 91       	ld	r18, Z+
    453c:	20 53       	subi	r18, 0x30	; 48
    453e:	2a 30       	cpi	r18, 0x0A	; 10
    4540:	c0 f3       	brcs	.-16     	; 0x4532 <atoi+0x22>
    4542:	1e f4       	brtc	.+6      	; 0x454a <atoi+0x3a>
    4544:	90 95       	com	r25
    4546:	81 95       	neg	r24
    4548:	9f 4f       	sbci	r25, 0xFF	; 255
    454a:	08 95       	ret

0000454c <atol>:
    454c:	1f 93       	push	r17
    454e:	fc 01       	movw	r30, r24
    4550:	99 27       	eor	r25, r25
    4552:	88 27       	eor	r24, r24
    4554:	bc 01       	movw	r22, r24
    4556:	e8 94       	clt
    4558:	11 91       	ld	r17, Z+
    455a:	10 32       	cpi	r17, 0x20	; 32
    455c:	e9 f3       	breq	.-6      	; 0x4558 <atol+0xc>
    455e:	19 30       	cpi	r17, 0x09	; 9
    4560:	10 f0       	brcs	.+4      	; 0x4566 <atol+0x1a>
    4562:	1e 30       	cpi	r17, 0x0E	; 14
    4564:	c8 f3       	brcs	.-14     	; 0x4558 <atol+0xc>
    4566:	1b 32       	cpi	r17, 0x2B	; 43
    4568:	51 f0       	breq	.+20     	; 0x457e <atol+0x32>
    456a:	1d 32       	cpi	r17, 0x2D	; 45
    456c:	49 f4       	brne	.+18     	; 0x4580 <atol+0x34>
    456e:	68 94       	set
    4570:	06 c0       	rjmp	.+12     	; 0x457e <atol+0x32>
    4572:	0e 94 e4 22 	call	0x45c8	; 0x45c8 <__mulsi_const_10>
    4576:	61 0f       	add	r22, r17
    4578:	71 1d       	adc	r23, r1
    457a:	81 1d       	adc	r24, r1
    457c:	91 1d       	adc	r25, r1
    457e:	11 91       	ld	r17, Z+
    4580:	10 53       	subi	r17, 0x30	; 48
    4582:	1a 30       	cpi	r17, 0x0A	; 10
    4584:	b0 f3       	brcs	.-20     	; 0x4572 <atol+0x26>
    4586:	3e f4       	brtc	.+14     	; 0x4596 <atol+0x4a>
    4588:	90 95       	com	r25
    458a:	80 95       	com	r24
    458c:	70 95       	com	r23
    458e:	61 95       	neg	r22
    4590:	7f 4f       	sbci	r23, 0xFF	; 255
    4592:	8f 4f       	sbci	r24, 0xFF	; 255
    4594:	9f 4f       	sbci	r25, 0xFF	; 255
    4596:	1f 91       	pop	r17
    4598:	08 95       	ret

0000459a <toupper>:
    459a:	91 11       	cpse	r25, r1
    459c:	08 95       	ret
    459e:	81 56       	subi	r24, 0x61	; 97
    45a0:	8a 51       	subi	r24, 0x1A	; 26
    45a2:	08 f4       	brcc	.+2      	; 0x45a6 <toupper+0xc>
    45a4:	80 52       	subi	r24, 0x20	; 32
    45a6:	85 58       	subi	r24, 0x85	; 133
    45a8:	08 95       	ret

000045aa <strncpy>:
    45aa:	fb 01       	movw	r30, r22
    45ac:	dc 01       	movw	r26, r24
    45ae:	41 50       	subi	r20, 0x01	; 1
    45b0:	50 40       	sbci	r21, 0x00	; 0
    45b2:	48 f0       	brcs	.+18     	; 0x45c6 <strncpy+0x1c>
    45b4:	01 90       	ld	r0, Z+
    45b6:	0d 92       	st	X+, r0
    45b8:	00 20       	and	r0, r0
    45ba:	c9 f7       	brne	.-14     	; 0x45ae <strncpy+0x4>
    45bc:	01 c0       	rjmp	.+2      	; 0x45c0 <strncpy+0x16>
    45be:	1d 92       	st	X+, r1
    45c0:	41 50       	subi	r20, 0x01	; 1
    45c2:	50 40       	sbci	r21, 0x00	; 0
    45c4:	e0 f7       	brcc	.-8      	; 0x45be <strncpy+0x14>
    45c6:	08 95       	ret

000045c8 <__mulsi_const_10>:
    45c8:	59 2f       	mov	r21, r25
    45ca:	48 2f       	mov	r20, r24
    45cc:	37 2f       	mov	r19, r23
    45ce:	26 2f       	mov	r18, r22
    45d0:	66 0f       	add	r22, r22
    45d2:	77 1f       	adc	r23, r23
    45d4:	88 1f       	adc	r24, r24
    45d6:	99 1f       	adc	r25, r25
    45d8:	66 0f       	add	r22, r22
    45da:	77 1f       	adc	r23, r23
    45dc:	88 1f       	adc	r24, r24
    45de:	99 1f       	adc	r25, r25
    45e0:	62 0f       	add	r22, r18
    45e2:	73 1f       	adc	r23, r19
    45e4:	84 1f       	adc	r24, r20
    45e6:	95 1f       	adc	r25, r21
    45e8:	66 0f       	add	r22, r22
    45ea:	77 1f       	adc	r23, r23
    45ec:	88 1f       	adc	r24, r24
    45ee:	99 1f       	adc	r25, r25
    45f0:	08 95       	ret

000045f2 <__mulhi_const_10>:
    45f2:	7a e0       	ldi	r23, 0x0A	; 10
    45f4:	97 9f       	mul	r25, r23
    45f6:	90 2d       	mov	r25, r0
    45f8:	87 9f       	mul	r24, r23
    45fa:	80 2d       	mov	r24, r0
    45fc:	91 0d       	add	r25, r1
    45fe:	11 24       	eor	r1, r1
    4600:	08 95       	ret

00004602 <sprintf>:
    4602:	0f 93       	push	r16
    4604:	1f 93       	push	r17
    4606:	cf 93       	push	r28
    4608:	df 93       	push	r29
    460a:	cd b7       	in	r28, 0x3d	; 61
    460c:	de b7       	in	r29, 0x3e	; 62
    460e:	2e 97       	sbiw	r28, 0x0e	; 14
    4610:	cd bf       	out	0x3d, r28	; 61
    4612:	de bf       	out	0x3e, r29	; 62
    4614:	0d 89       	ldd	r16, Y+21	; 0x15
    4616:	1e 89       	ldd	r17, Y+22	; 0x16
    4618:	86 e0       	ldi	r24, 0x06	; 6
    461a:	8c 83       	std	Y+4, r24	; 0x04
    461c:	09 83       	std	Y+1, r16	; 0x01
    461e:	1a 83       	std	Y+2, r17	; 0x02
    4620:	8f ef       	ldi	r24, 0xFF	; 255
    4622:	9f e7       	ldi	r25, 0x7F	; 127
    4624:	8d 83       	std	Y+5, r24	; 0x05
    4626:	9e 83       	std	Y+6, r25	; 0x06
    4628:	ae 01       	movw	r20, r28
    462a:	47 5e       	subi	r20, 0xE7	; 231
    462c:	5f 4f       	sbci	r21, 0xFF	; 255
    462e:	6f 89       	ldd	r22, Y+23	; 0x17
    4630:	78 8d       	ldd	r23, Y+24	; 0x18
    4632:	ce 01       	movw	r24, r28
    4634:	01 96       	adiw	r24, 0x01	; 1
    4636:	0e 94 2a 23 	call	0x4654	; 0x4654 <vfprintf>
    463a:	ef 81       	ldd	r30, Y+7	; 0x07
    463c:	f8 85       	ldd	r31, Y+8	; 0x08
    463e:	e0 0f       	add	r30, r16
    4640:	f1 1f       	adc	r31, r17
    4642:	10 82       	st	Z, r1
    4644:	2e 96       	adiw	r28, 0x0e	; 14
    4646:	cd bf       	out	0x3d, r28	; 61
    4648:	de bf       	out	0x3e, r29	; 62
    464a:	df 91       	pop	r29
    464c:	cf 91       	pop	r28
    464e:	1f 91       	pop	r17
    4650:	0f 91       	pop	r16
    4652:	08 95       	ret

00004654 <vfprintf>:
    4654:	2f 92       	push	r2
    4656:	3f 92       	push	r3
    4658:	4f 92       	push	r4
    465a:	5f 92       	push	r5
    465c:	6f 92       	push	r6
    465e:	7f 92       	push	r7
    4660:	8f 92       	push	r8
    4662:	9f 92       	push	r9
    4664:	af 92       	push	r10
    4666:	bf 92       	push	r11
    4668:	cf 92       	push	r12
    466a:	df 92       	push	r13
    466c:	ef 92       	push	r14
    466e:	ff 92       	push	r15
    4670:	0f 93       	push	r16
    4672:	1f 93       	push	r17
    4674:	cf 93       	push	r28
    4676:	df 93       	push	r29
    4678:	cd b7       	in	r28, 0x3d	; 61
    467a:	de b7       	in	r29, 0x3e	; 62
    467c:	2b 97       	sbiw	r28, 0x0b	; 11
    467e:	cd bf       	out	0x3d, r28	; 61
    4680:	de bf       	out	0x3e, r29	; 62
    4682:	6c 01       	movw	r12, r24
    4684:	7b 01       	movw	r14, r22
    4686:	8a 01       	movw	r16, r20
    4688:	fc 01       	movw	r30, r24
    468a:	16 82       	std	Z+6, r1	; 0x06
    468c:	17 82       	std	Z+7, r1	; 0x07
    468e:	83 81       	ldd	r24, Z+3	; 0x03
    4690:	81 ff       	sbrs	r24, 1
    4692:	cc c1       	rjmp	.+920    	; 0x4a2c <vfprintf+0x3d8>
    4694:	ce 01       	movw	r24, r28
    4696:	01 96       	adiw	r24, 0x01	; 1
    4698:	3c 01       	movw	r6, r24
    469a:	f6 01       	movw	r30, r12
    469c:	93 81       	ldd	r25, Z+3	; 0x03
    469e:	f7 01       	movw	r30, r14
    46a0:	93 fd       	sbrc	r25, 3
    46a2:	85 91       	lpm	r24, Z+
    46a4:	93 ff       	sbrs	r25, 3
    46a6:	81 91       	ld	r24, Z+
    46a8:	7f 01       	movw	r14, r30
    46aa:	88 23       	and	r24, r24
    46ac:	09 f4       	brne	.+2      	; 0x46b0 <vfprintf+0x5c>
    46ae:	ba c1       	rjmp	.+884    	; 0x4a24 <vfprintf+0x3d0>
    46b0:	85 32       	cpi	r24, 0x25	; 37
    46b2:	39 f4       	brne	.+14     	; 0x46c2 <vfprintf+0x6e>
    46b4:	93 fd       	sbrc	r25, 3
    46b6:	85 91       	lpm	r24, Z+
    46b8:	93 ff       	sbrs	r25, 3
    46ba:	81 91       	ld	r24, Z+
    46bc:	7f 01       	movw	r14, r30
    46be:	85 32       	cpi	r24, 0x25	; 37
    46c0:	29 f4       	brne	.+10     	; 0x46cc <vfprintf+0x78>
    46c2:	b6 01       	movw	r22, r12
    46c4:	90 e0       	ldi	r25, 0x00	; 0
    46c6:	0e 94 44 25 	call	0x4a88	; 0x4a88 <fputc>
    46ca:	e7 cf       	rjmp	.-50     	; 0x469a <vfprintf+0x46>
    46cc:	91 2c       	mov	r9, r1
    46ce:	21 2c       	mov	r2, r1
    46d0:	31 2c       	mov	r3, r1
    46d2:	ff e1       	ldi	r31, 0x1F	; 31
    46d4:	f3 15       	cp	r31, r3
    46d6:	d8 f0       	brcs	.+54     	; 0x470e <vfprintf+0xba>
    46d8:	8b 32       	cpi	r24, 0x2B	; 43
    46da:	79 f0       	breq	.+30     	; 0x46fa <vfprintf+0xa6>
    46dc:	38 f4       	brcc	.+14     	; 0x46ec <vfprintf+0x98>
    46de:	80 32       	cpi	r24, 0x20	; 32
    46e0:	79 f0       	breq	.+30     	; 0x4700 <vfprintf+0xac>
    46e2:	83 32       	cpi	r24, 0x23	; 35
    46e4:	a1 f4       	brne	.+40     	; 0x470e <vfprintf+0xba>
    46e6:	23 2d       	mov	r18, r3
    46e8:	20 61       	ori	r18, 0x10	; 16
    46ea:	1d c0       	rjmp	.+58     	; 0x4726 <vfprintf+0xd2>
    46ec:	8d 32       	cpi	r24, 0x2D	; 45
    46ee:	61 f0       	breq	.+24     	; 0x4708 <vfprintf+0xb4>
    46f0:	80 33       	cpi	r24, 0x30	; 48
    46f2:	69 f4       	brne	.+26     	; 0x470e <vfprintf+0xba>
    46f4:	23 2d       	mov	r18, r3
    46f6:	21 60       	ori	r18, 0x01	; 1
    46f8:	16 c0       	rjmp	.+44     	; 0x4726 <vfprintf+0xd2>
    46fa:	83 2d       	mov	r24, r3
    46fc:	82 60       	ori	r24, 0x02	; 2
    46fe:	38 2e       	mov	r3, r24
    4700:	e3 2d       	mov	r30, r3
    4702:	e4 60       	ori	r30, 0x04	; 4
    4704:	3e 2e       	mov	r3, r30
    4706:	2a c0       	rjmp	.+84     	; 0x475c <vfprintf+0x108>
    4708:	f3 2d       	mov	r31, r3
    470a:	f8 60       	ori	r31, 0x08	; 8
    470c:	1d c0       	rjmp	.+58     	; 0x4748 <vfprintf+0xf4>
    470e:	37 fc       	sbrc	r3, 7
    4710:	2d c0       	rjmp	.+90     	; 0x476c <vfprintf+0x118>
    4712:	20 ed       	ldi	r18, 0xD0	; 208
    4714:	28 0f       	add	r18, r24
    4716:	2a 30       	cpi	r18, 0x0A	; 10
    4718:	40 f0       	brcs	.+16     	; 0x472a <vfprintf+0xd6>
    471a:	8e 32       	cpi	r24, 0x2E	; 46
    471c:	b9 f4       	brne	.+46     	; 0x474c <vfprintf+0xf8>
    471e:	36 fc       	sbrc	r3, 6
    4720:	81 c1       	rjmp	.+770    	; 0x4a24 <vfprintf+0x3d0>
    4722:	23 2d       	mov	r18, r3
    4724:	20 64       	ori	r18, 0x40	; 64
    4726:	32 2e       	mov	r3, r18
    4728:	19 c0       	rjmp	.+50     	; 0x475c <vfprintf+0x108>
    472a:	36 fe       	sbrs	r3, 6
    472c:	06 c0       	rjmp	.+12     	; 0x473a <vfprintf+0xe6>
    472e:	8a e0       	ldi	r24, 0x0A	; 10
    4730:	98 9e       	mul	r9, r24
    4732:	20 0d       	add	r18, r0
    4734:	11 24       	eor	r1, r1
    4736:	92 2e       	mov	r9, r18
    4738:	11 c0       	rjmp	.+34     	; 0x475c <vfprintf+0x108>
    473a:	ea e0       	ldi	r30, 0x0A	; 10
    473c:	2e 9e       	mul	r2, r30
    473e:	20 0d       	add	r18, r0
    4740:	11 24       	eor	r1, r1
    4742:	22 2e       	mov	r2, r18
    4744:	f3 2d       	mov	r31, r3
    4746:	f0 62       	ori	r31, 0x20	; 32
    4748:	3f 2e       	mov	r3, r31
    474a:	08 c0       	rjmp	.+16     	; 0x475c <vfprintf+0x108>
    474c:	8c 36       	cpi	r24, 0x6C	; 108
    474e:	21 f4       	brne	.+8      	; 0x4758 <vfprintf+0x104>
    4750:	83 2d       	mov	r24, r3
    4752:	80 68       	ori	r24, 0x80	; 128
    4754:	38 2e       	mov	r3, r24
    4756:	02 c0       	rjmp	.+4      	; 0x475c <vfprintf+0x108>
    4758:	88 36       	cpi	r24, 0x68	; 104
    475a:	41 f4       	brne	.+16     	; 0x476c <vfprintf+0x118>
    475c:	f7 01       	movw	r30, r14
    475e:	93 fd       	sbrc	r25, 3
    4760:	85 91       	lpm	r24, Z+
    4762:	93 ff       	sbrs	r25, 3
    4764:	81 91       	ld	r24, Z+
    4766:	7f 01       	movw	r14, r30
    4768:	81 11       	cpse	r24, r1
    476a:	b3 cf       	rjmp	.-154    	; 0x46d2 <vfprintf+0x7e>
    476c:	98 2f       	mov	r25, r24
    476e:	9f 7d       	andi	r25, 0xDF	; 223
    4770:	95 54       	subi	r25, 0x45	; 69
    4772:	93 30       	cpi	r25, 0x03	; 3
    4774:	28 f4       	brcc	.+10     	; 0x4780 <vfprintf+0x12c>
    4776:	0c 5f       	subi	r16, 0xFC	; 252
    4778:	1f 4f       	sbci	r17, 0xFF	; 255
    477a:	9f e3       	ldi	r25, 0x3F	; 63
    477c:	99 83       	std	Y+1, r25	; 0x01
    477e:	0d c0       	rjmp	.+26     	; 0x479a <vfprintf+0x146>
    4780:	83 36       	cpi	r24, 0x63	; 99
    4782:	31 f0       	breq	.+12     	; 0x4790 <vfprintf+0x13c>
    4784:	83 37       	cpi	r24, 0x73	; 115
    4786:	71 f0       	breq	.+28     	; 0x47a4 <vfprintf+0x150>
    4788:	83 35       	cpi	r24, 0x53	; 83
    478a:	09 f0       	breq	.+2      	; 0x478e <vfprintf+0x13a>
    478c:	59 c0       	rjmp	.+178    	; 0x4840 <vfprintf+0x1ec>
    478e:	21 c0       	rjmp	.+66     	; 0x47d2 <vfprintf+0x17e>
    4790:	f8 01       	movw	r30, r16
    4792:	80 81       	ld	r24, Z
    4794:	89 83       	std	Y+1, r24	; 0x01
    4796:	0e 5f       	subi	r16, 0xFE	; 254
    4798:	1f 4f       	sbci	r17, 0xFF	; 255
    479a:	88 24       	eor	r8, r8
    479c:	83 94       	inc	r8
    479e:	91 2c       	mov	r9, r1
    47a0:	53 01       	movw	r10, r6
    47a2:	13 c0       	rjmp	.+38     	; 0x47ca <vfprintf+0x176>
    47a4:	28 01       	movw	r4, r16
    47a6:	f2 e0       	ldi	r31, 0x02	; 2
    47a8:	4f 0e       	add	r4, r31
    47aa:	51 1c       	adc	r5, r1
    47ac:	f8 01       	movw	r30, r16
    47ae:	a0 80       	ld	r10, Z
    47b0:	b1 80       	ldd	r11, Z+1	; 0x01
    47b2:	36 fe       	sbrs	r3, 6
    47b4:	03 c0       	rjmp	.+6      	; 0x47bc <vfprintf+0x168>
    47b6:	69 2d       	mov	r22, r9
    47b8:	70 e0       	ldi	r23, 0x00	; 0
    47ba:	02 c0       	rjmp	.+4      	; 0x47c0 <vfprintf+0x16c>
    47bc:	6f ef       	ldi	r22, 0xFF	; 255
    47be:	7f ef       	ldi	r23, 0xFF	; 255
    47c0:	c5 01       	movw	r24, r10
    47c2:	0e 94 39 25 	call	0x4a72	; 0x4a72 <strnlen>
    47c6:	4c 01       	movw	r8, r24
    47c8:	82 01       	movw	r16, r4
    47ca:	f3 2d       	mov	r31, r3
    47cc:	ff 77       	andi	r31, 0x7F	; 127
    47ce:	3f 2e       	mov	r3, r31
    47d0:	16 c0       	rjmp	.+44     	; 0x47fe <vfprintf+0x1aa>
    47d2:	28 01       	movw	r4, r16
    47d4:	22 e0       	ldi	r18, 0x02	; 2
    47d6:	42 0e       	add	r4, r18
    47d8:	51 1c       	adc	r5, r1
    47da:	f8 01       	movw	r30, r16
    47dc:	a0 80       	ld	r10, Z
    47de:	b1 80       	ldd	r11, Z+1	; 0x01
    47e0:	36 fe       	sbrs	r3, 6
    47e2:	03 c0       	rjmp	.+6      	; 0x47ea <vfprintf+0x196>
    47e4:	69 2d       	mov	r22, r9
    47e6:	70 e0       	ldi	r23, 0x00	; 0
    47e8:	02 c0       	rjmp	.+4      	; 0x47ee <vfprintf+0x19a>
    47ea:	6f ef       	ldi	r22, 0xFF	; 255
    47ec:	7f ef       	ldi	r23, 0xFF	; 255
    47ee:	c5 01       	movw	r24, r10
    47f0:	0e 94 2e 25 	call	0x4a5c	; 0x4a5c <strnlen_P>
    47f4:	4c 01       	movw	r8, r24
    47f6:	f3 2d       	mov	r31, r3
    47f8:	f0 68       	ori	r31, 0x80	; 128
    47fa:	3f 2e       	mov	r3, r31
    47fc:	82 01       	movw	r16, r4
    47fe:	33 fc       	sbrc	r3, 3
    4800:	1b c0       	rjmp	.+54     	; 0x4838 <vfprintf+0x1e4>
    4802:	82 2d       	mov	r24, r2
    4804:	90 e0       	ldi	r25, 0x00	; 0
    4806:	88 16       	cp	r8, r24
    4808:	99 06       	cpc	r9, r25
    480a:	b0 f4       	brcc	.+44     	; 0x4838 <vfprintf+0x1e4>
    480c:	b6 01       	movw	r22, r12
    480e:	80 e2       	ldi	r24, 0x20	; 32
    4810:	90 e0       	ldi	r25, 0x00	; 0
    4812:	0e 94 44 25 	call	0x4a88	; 0x4a88 <fputc>
    4816:	2a 94       	dec	r2
    4818:	f4 cf       	rjmp	.-24     	; 0x4802 <vfprintf+0x1ae>
    481a:	f5 01       	movw	r30, r10
    481c:	37 fc       	sbrc	r3, 7
    481e:	85 91       	lpm	r24, Z+
    4820:	37 fe       	sbrs	r3, 7
    4822:	81 91       	ld	r24, Z+
    4824:	5f 01       	movw	r10, r30
    4826:	b6 01       	movw	r22, r12
    4828:	90 e0       	ldi	r25, 0x00	; 0
    482a:	0e 94 44 25 	call	0x4a88	; 0x4a88 <fputc>
    482e:	21 10       	cpse	r2, r1
    4830:	2a 94       	dec	r2
    4832:	21 e0       	ldi	r18, 0x01	; 1
    4834:	82 1a       	sub	r8, r18
    4836:	91 08       	sbc	r9, r1
    4838:	81 14       	cp	r8, r1
    483a:	91 04       	cpc	r9, r1
    483c:	71 f7       	brne	.-36     	; 0x481a <vfprintf+0x1c6>
    483e:	e8 c0       	rjmp	.+464    	; 0x4a10 <vfprintf+0x3bc>
    4840:	84 36       	cpi	r24, 0x64	; 100
    4842:	11 f0       	breq	.+4      	; 0x4848 <vfprintf+0x1f4>
    4844:	89 36       	cpi	r24, 0x69	; 105
    4846:	41 f5       	brne	.+80     	; 0x4898 <vfprintf+0x244>
    4848:	f8 01       	movw	r30, r16
    484a:	37 fe       	sbrs	r3, 7
    484c:	07 c0       	rjmp	.+14     	; 0x485c <vfprintf+0x208>
    484e:	60 81       	ld	r22, Z
    4850:	71 81       	ldd	r23, Z+1	; 0x01
    4852:	82 81       	ldd	r24, Z+2	; 0x02
    4854:	93 81       	ldd	r25, Z+3	; 0x03
    4856:	0c 5f       	subi	r16, 0xFC	; 252
    4858:	1f 4f       	sbci	r17, 0xFF	; 255
    485a:	08 c0       	rjmp	.+16     	; 0x486c <vfprintf+0x218>
    485c:	60 81       	ld	r22, Z
    485e:	71 81       	ldd	r23, Z+1	; 0x01
    4860:	07 2e       	mov	r0, r23
    4862:	00 0c       	add	r0, r0
    4864:	88 0b       	sbc	r24, r24
    4866:	99 0b       	sbc	r25, r25
    4868:	0e 5f       	subi	r16, 0xFE	; 254
    486a:	1f 4f       	sbci	r17, 0xFF	; 255
    486c:	f3 2d       	mov	r31, r3
    486e:	ff 76       	andi	r31, 0x6F	; 111
    4870:	3f 2e       	mov	r3, r31
    4872:	97 ff       	sbrs	r25, 7
    4874:	09 c0       	rjmp	.+18     	; 0x4888 <vfprintf+0x234>
    4876:	90 95       	com	r25
    4878:	80 95       	com	r24
    487a:	70 95       	com	r23
    487c:	61 95       	neg	r22
    487e:	7f 4f       	sbci	r23, 0xFF	; 255
    4880:	8f 4f       	sbci	r24, 0xFF	; 255
    4882:	9f 4f       	sbci	r25, 0xFF	; 255
    4884:	f0 68       	ori	r31, 0x80	; 128
    4886:	3f 2e       	mov	r3, r31
    4888:	2a e0       	ldi	r18, 0x0A	; 10
    488a:	30 e0       	ldi	r19, 0x00	; 0
    488c:	a3 01       	movw	r20, r6
    488e:	0e 94 80 25 	call	0x4b00	; 0x4b00 <__ultoa_invert>
    4892:	88 2e       	mov	r8, r24
    4894:	86 18       	sub	r8, r6
    4896:	45 c0       	rjmp	.+138    	; 0x4922 <vfprintf+0x2ce>
    4898:	85 37       	cpi	r24, 0x75	; 117
    489a:	31 f4       	brne	.+12     	; 0x48a8 <vfprintf+0x254>
    489c:	23 2d       	mov	r18, r3
    489e:	2f 7e       	andi	r18, 0xEF	; 239
    48a0:	b2 2e       	mov	r11, r18
    48a2:	2a e0       	ldi	r18, 0x0A	; 10
    48a4:	30 e0       	ldi	r19, 0x00	; 0
    48a6:	25 c0       	rjmp	.+74     	; 0x48f2 <vfprintf+0x29e>
    48a8:	93 2d       	mov	r25, r3
    48aa:	99 7f       	andi	r25, 0xF9	; 249
    48ac:	b9 2e       	mov	r11, r25
    48ae:	8f 36       	cpi	r24, 0x6F	; 111
    48b0:	c1 f0       	breq	.+48     	; 0x48e2 <vfprintf+0x28e>
    48b2:	18 f4       	brcc	.+6      	; 0x48ba <vfprintf+0x266>
    48b4:	88 35       	cpi	r24, 0x58	; 88
    48b6:	79 f0       	breq	.+30     	; 0x48d6 <vfprintf+0x282>
    48b8:	b5 c0       	rjmp	.+362    	; 0x4a24 <vfprintf+0x3d0>
    48ba:	80 37       	cpi	r24, 0x70	; 112
    48bc:	19 f0       	breq	.+6      	; 0x48c4 <vfprintf+0x270>
    48be:	88 37       	cpi	r24, 0x78	; 120
    48c0:	21 f0       	breq	.+8      	; 0x48ca <vfprintf+0x276>
    48c2:	b0 c0       	rjmp	.+352    	; 0x4a24 <vfprintf+0x3d0>
    48c4:	e9 2f       	mov	r30, r25
    48c6:	e0 61       	ori	r30, 0x10	; 16
    48c8:	be 2e       	mov	r11, r30
    48ca:	b4 fe       	sbrs	r11, 4
    48cc:	0d c0       	rjmp	.+26     	; 0x48e8 <vfprintf+0x294>
    48ce:	fb 2d       	mov	r31, r11
    48d0:	f4 60       	ori	r31, 0x04	; 4
    48d2:	bf 2e       	mov	r11, r31
    48d4:	09 c0       	rjmp	.+18     	; 0x48e8 <vfprintf+0x294>
    48d6:	34 fe       	sbrs	r3, 4
    48d8:	0a c0       	rjmp	.+20     	; 0x48ee <vfprintf+0x29a>
    48da:	29 2f       	mov	r18, r25
    48dc:	26 60       	ori	r18, 0x06	; 6
    48de:	b2 2e       	mov	r11, r18
    48e0:	06 c0       	rjmp	.+12     	; 0x48ee <vfprintf+0x29a>
    48e2:	28 e0       	ldi	r18, 0x08	; 8
    48e4:	30 e0       	ldi	r19, 0x00	; 0
    48e6:	05 c0       	rjmp	.+10     	; 0x48f2 <vfprintf+0x29e>
    48e8:	20 e1       	ldi	r18, 0x10	; 16
    48ea:	30 e0       	ldi	r19, 0x00	; 0
    48ec:	02 c0       	rjmp	.+4      	; 0x48f2 <vfprintf+0x29e>
    48ee:	20 e1       	ldi	r18, 0x10	; 16
    48f0:	32 e0       	ldi	r19, 0x02	; 2
    48f2:	f8 01       	movw	r30, r16
    48f4:	b7 fe       	sbrs	r11, 7
    48f6:	07 c0       	rjmp	.+14     	; 0x4906 <vfprintf+0x2b2>
    48f8:	60 81       	ld	r22, Z
    48fa:	71 81       	ldd	r23, Z+1	; 0x01
    48fc:	82 81       	ldd	r24, Z+2	; 0x02
    48fe:	93 81       	ldd	r25, Z+3	; 0x03
    4900:	0c 5f       	subi	r16, 0xFC	; 252
    4902:	1f 4f       	sbci	r17, 0xFF	; 255
    4904:	06 c0       	rjmp	.+12     	; 0x4912 <vfprintf+0x2be>
    4906:	60 81       	ld	r22, Z
    4908:	71 81       	ldd	r23, Z+1	; 0x01
    490a:	80 e0       	ldi	r24, 0x00	; 0
    490c:	90 e0       	ldi	r25, 0x00	; 0
    490e:	0e 5f       	subi	r16, 0xFE	; 254
    4910:	1f 4f       	sbci	r17, 0xFF	; 255
    4912:	a3 01       	movw	r20, r6
    4914:	0e 94 80 25 	call	0x4b00	; 0x4b00 <__ultoa_invert>
    4918:	88 2e       	mov	r8, r24
    491a:	86 18       	sub	r8, r6
    491c:	fb 2d       	mov	r31, r11
    491e:	ff 77       	andi	r31, 0x7F	; 127
    4920:	3f 2e       	mov	r3, r31
    4922:	36 fe       	sbrs	r3, 6
    4924:	0d c0       	rjmp	.+26     	; 0x4940 <vfprintf+0x2ec>
    4926:	23 2d       	mov	r18, r3
    4928:	2e 7f       	andi	r18, 0xFE	; 254
    492a:	a2 2e       	mov	r10, r18
    492c:	89 14       	cp	r8, r9
    492e:	58 f4       	brcc	.+22     	; 0x4946 <vfprintf+0x2f2>
    4930:	34 fe       	sbrs	r3, 4
    4932:	0b c0       	rjmp	.+22     	; 0x494a <vfprintf+0x2f6>
    4934:	32 fc       	sbrc	r3, 2
    4936:	09 c0       	rjmp	.+18     	; 0x494a <vfprintf+0x2f6>
    4938:	83 2d       	mov	r24, r3
    493a:	8e 7e       	andi	r24, 0xEE	; 238
    493c:	a8 2e       	mov	r10, r24
    493e:	05 c0       	rjmp	.+10     	; 0x494a <vfprintf+0x2f6>
    4940:	b8 2c       	mov	r11, r8
    4942:	a3 2c       	mov	r10, r3
    4944:	03 c0       	rjmp	.+6      	; 0x494c <vfprintf+0x2f8>
    4946:	b8 2c       	mov	r11, r8
    4948:	01 c0       	rjmp	.+2      	; 0x494c <vfprintf+0x2f8>
    494a:	b9 2c       	mov	r11, r9
    494c:	a4 fe       	sbrs	r10, 4
    494e:	0f c0       	rjmp	.+30     	; 0x496e <vfprintf+0x31a>
    4950:	fe 01       	movw	r30, r28
    4952:	e8 0d       	add	r30, r8
    4954:	f1 1d       	adc	r31, r1
    4956:	80 81       	ld	r24, Z
    4958:	80 33       	cpi	r24, 0x30	; 48
    495a:	21 f4       	brne	.+8      	; 0x4964 <vfprintf+0x310>
    495c:	9a 2d       	mov	r25, r10
    495e:	99 7e       	andi	r25, 0xE9	; 233
    4960:	a9 2e       	mov	r10, r25
    4962:	09 c0       	rjmp	.+18     	; 0x4976 <vfprintf+0x322>
    4964:	a2 fe       	sbrs	r10, 2
    4966:	06 c0       	rjmp	.+12     	; 0x4974 <vfprintf+0x320>
    4968:	b3 94       	inc	r11
    496a:	b3 94       	inc	r11
    496c:	04 c0       	rjmp	.+8      	; 0x4976 <vfprintf+0x322>
    496e:	8a 2d       	mov	r24, r10
    4970:	86 78       	andi	r24, 0x86	; 134
    4972:	09 f0       	breq	.+2      	; 0x4976 <vfprintf+0x322>
    4974:	b3 94       	inc	r11
    4976:	a3 fc       	sbrc	r10, 3
    4978:	11 c0       	rjmp	.+34     	; 0x499c <vfprintf+0x348>
    497a:	a0 fe       	sbrs	r10, 0
    497c:	06 c0       	rjmp	.+12     	; 0x498a <vfprintf+0x336>
    497e:	b2 14       	cp	r11, r2
    4980:	88 f4       	brcc	.+34     	; 0x49a4 <vfprintf+0x350>
    4982:	28 0c       	add	r2, r8
    4984:	92 2c       	mov	r9, r2
    4986:	9b 18       	sub	r9, r11
    4988:	0e c0       	rjmp	.+28     	; 0x49a6 <vfprintf+0x352>
    498a:	b2 14       	cp	r11, r2
    498c:	60 f4       	brcc	.+24     	; 0x49a6 <vfprintf+0x352>
    498e:	b6 01       	movw	r22, r12
    4990:	80 e2       	ldi	r24, 0x20	; 32
    4992:	90 e0       	ldi	r25, 0x00	; 0
    4994:	0e 94 44 25 	call	0x4a88	; 0x4a88 <fputc>
    4998:	b3 94       	inc	r11
    499a:	f7 cf       	rjmp	.-18     	; 0x498a <vfprintf+0x336>
    499c:	b2 14       	cp	r11, r2
    499e:	18 f4       	brcc	.+6      	; 0x49a6 <vfprintf+0x352>
    49a0:	2b 18       	sub	r2, r11
    49a2:	02 c0       	rjmp	.+4      	; 0x49a8 <vfprintf+0x354>
    49a4:	98 2c       	mov	r9, r8
    49a6:	21 2c       	mov	r2, r1
    49a8:	a4 fe       	sbrs	r10, 4
    49aa:	10 c0       	rjmp	.+32     	; 0x49cc <vfprintf+0x378>
    49ac:	b6 01       	movw	r22, r12
    49ae:	80 e3       	ldi	r24, 0x30	; 48
    49b0:	90 e0       	ldi	r25, 0x00	; 0
    49b2:	0e 94 44 25 	call	0x4a88	; 0x4a88 <fputc>
    49b6:	a2 fe       	sbrs	r10, 2
    49b8:	17 c0       	rjmp	.+46     	; 0x49e8 <vfprintf+0x394>
    49ba:	a1 fc       	sbrc	r10, 1
    49bc:	03 c0       	rjmp	.+6      	; 0x49c4 <vfprintf+0x370>
    49be:	88 e7       	ldi	r24, 0x78	; 120
    49c0:	90 e0       	ldi	r25, 0x00	; 0
    49c2:	02 c0       	rjmp	.+4      	; 0x49c8 <vfprintf+0x374>
    49c4:	88 e5       	ldi	r24, 0x58	; 88
    49c6:	90 e0       	ldi	r25, 0x00	; 0
    49c8:	b6 01       	movw	r22, r12
    49ca:	0c c0       	rjmp	.+24     	; 0x49e4 <vfprintf+0x390>
    49cc:	8a 2d       	mov	r24, r10
    49ce:	86 78       	andi	r24, 0x86	; 134
    49d0:	59 f0       	breq	.+22     	; 0x49e8 <vfprintf+0x394>
    49d2:	a1 fe       	sbrs	r10, 1
    49d4:	02 c0       	rjmp	.+4      	; 0x49da <vfprintf+0x386>
    49d6:	8b e2       	ldi	r24, 0x2B	; 43
    49d8:	01 c0       	rjmp	.+2      	; 0x49dc <vfprintf+0x388>
    49da:	80 e2       	ldi	r24, 0x20	; 32
    49dc:	a7 fc       	sbrc	r10, 7
    49de:	8d e2       	ldi	r24, 0x2D	; 45
    49e0:	b6 01       	movw	r22, r12
    49e2:	90 e0       	ldi	r25, 0x00	; 0
    49e4:	0e 94 44 25 	call	0x4a88	; 0x4a88 <fputc>
    49e8:	89 14       	cp	r8, r9
    49ea:	38 f4       	brcc	.+14     	; 0x49fa <vfprintf+0x3a6>
    49ec:	b6 01       	movw	r22, r12
    49ee:	80 e3       	ldi	r24, 0x30	; 48
    49f0:	90 e0       	ldi	r25, 0x00	; 0
    49f2:	0e 94 44 25 	call	0x4a88	; 0x4a88 <fputc>
    49f6:	9a 94       	dec	r9
    49f8:	f7 cf       	rjmp	.-18     	; 0x49e8 <vfprintf+0x394>
    49fa:	8a 94       	dec	r8
    49fc:	f3 01       	movw	r30, r6
    49fe:	e8 0d       	add	r30, r8
    4a00:	f1 1d       	adc	r31, r1
    4a02:	80 81       	ld	r24, Z
    4a04:	b6 01       	movw	r22, r12
    4a06:	90 e0       	ldi	r25, 0x00	; 0
    4a08:	0e 94 44 25 	call	0x4a88	; 0x4a88 <fputc>
    4a0c:	81 10       	cpse	r8, r1
    4a0e:	f5 cf       	rjmp	.-22     	; 0x49fa <vfprintf+0x3a6>
    4a10:	22 20       	and	r2, r2
    4a12:	09 f4       	brne	.+2      	; 0x4a16 <vfprintf+0x3c2>
    4a14:	42 ce       	rjmp	.-892    	; 0x469a <vfprintf+0x46>
    4a16:	b6 01       	movw	r22, r12
    4a18:	80 e2       	ldi	r24, 0x20	; 32
    4a1a:	90 e0       	ldi	r25, 0x00	; 0
    4a1c:	0e 94 44 25 	call	0x4a88	; 0x4a88 <fputc>
    4a20:	2a 94       	dec	r2
    4a22:	f6 cf       	rjmp	.-20     	; 0x4a10 <vfprintf+0x3bc>
    4a24:	f6 01       	movw	r30, r12
    4a26:	86 81       	ldd	r24, Z+6	; 0x06
    4a28:	97 81       	ldd	r25, Z+7	; 0x07
    4a2a:	02 c0       	rjmp	.+4      	; 0x4a30 <vfprintf+0x3dc>
    4a2c:	8f ef       	ldi	r24, 0xFF	; 255
    4a2e:	9f ef       	ldi	r25, 0xFF	; 255
    4a30:	2b 96       	adiw	r28, 0x0b	; 11
    4a32:	cd bf       	out	0x3d, r28	; 61
    4a34:	de bf       	out	0x3e, r29	; 62
    4a36:	df 91       	pop	r29
    4a38:	cf 91       	pop	r28
    4a3a:	1f 91       	pop	r17
    4a3c:	0f 91       	pop	r16
    4a3e:	ff 90       	pop	r15
    4a40:	ef 90       	pop	r14
    4a42:	df 90       	pop	r13
    4a44:	cf 90       	pop	r12
    4a46:	bf 90       	pop	r11
    4a48:	af 90       	pop	r10
    4a4a:	9f 90       	pop	r9
    4a4c:	8f 90       	pop	r8
    4a4e:	7f 90       	pop	r7
    4a50:	6f 90       	pop	r6
    4a52:	5f 90       	pop	r5
    4a54:	4f 90       	pop	r4
    4a56:	3f 90       	pop	r3
    4a58:	2f 90       	pop	r2
    4a5a:	08 95       	ret

00004a5c <strnlen_P>:
    4a5c:	fc 01       	movw	r30, r24
    4a5e:	05 90       	lpm	r0, Z+
    4a60:	61 50       	subi	r22, 0x01	; 1
    4a62:	70 40       	sbci	r23, 0x00	; 0
    4a64:	01 10       	cpse	r0, r1
    4a66:	d8 f7       	brcc	.-10     	; 0x4a5e <strnlen_P+0x2>
    4a68:	80 95       	com	r24
    4a6a:	90 95       	com	r25
    4a6c:	8e 0f       	add	r24, r30
    4a6e:	9f 1f       	adc	r25, r31
    4a70:	08 95       	ret

00004a72 <strnlen>:
    4a72:	fc 01       	movw	r30, r24
    4a74:	61 50       	subi	r22, 0x01	; 1
    4a76:	70 40       	sbci	r23, 0x00	; 0
    4a78:	01 90       	ld	r0, Z+
    4a7a:	01 10       	cpse	r0, r1
    4a7c:	d8 f7       	brcc	.-10     	; 0x4a74 <strnlen+0x2>
    4a7e:	80 95       	com	r24
    4a80:	90 95       	com	r25
    4a82:	8e 0f       	add	r24, r30
    4a84:	9f 1f       	adc	r25, r31
    4a86:	08 95       	ret

00004a88 <fputc>:
    4a88:	0f 93       	push	r16
    4a8a:	1f 93       	push	r17
    4a8c:	cf 93       	push	r28
    4a8e:	df 93       	push	r29
    4a90:	fb 01       	movw	r30, r22
    4a92:	23 81       	ldd	r18, Z+3	; 0x03
    4a94:	21 fd       	sbrc	r18, 1
    4a96:	03 c0       	rjmp	.+6      	; 0x4a9e <fputc+0x16>
    4a98:	8f ef       	ldi	r24, 0xFF	; 255
    4a9a:	9f ef       	ldi	r25, 0xFF	; 255
    4a9c:	2c c0       	rjmp	.+88     	; 0x4af6 <fputc+0x6e>
    4a9e:	22 ff       	sbrs	r18, 2
    4aa0:	16 c0       	rjmp	.+44     	; 0x4ace <fputc+0x46>
    4aa2:	46 81       	ldd	r20, Z+6	; 0x06
    4aa4:	57 81       	ldd	r21, Z+7	; 0x07
    4aa6:	24 81       	ldd	r18, Z+4	; 0x04
    4aa8:	35 81       	ldd	r19, Z+5	; 0x05
    4aaa:	42 17       	cp	r20, r18
    4aac:	53 07       	cpc	r21, r19
    4aae:	44 f4       	brge	.+16     	; 0x4ac0 <fputc+0x38>
    4ab0:	a0 81       	ld	r26, Z
    4ab2:	b1 81       	ldd	r27, Z+1	; 0x01
    4ab4:	9d 01       	movw	r18, r26
    4ab6:	2f 5f       	subi	r18, 0xFF	; 255
    4ab8:	3f 4f       	sbci	r19, 0xFF	; 255
    4aba:	20 83       	st	Z, r18
    4abc:	31 83       	std	Z+1, r19	; 0x01
    4abe:	8c 93       	st	X, r24
    4ac0:	26 81       	ldd	r18, Z+6	; 0x06
    4ac2:	37 81       	ldd	r19, Z+7	; 0x07
    4ac4:	2f 5f       	subi	r18, 0xFF	; 255
    4ac6:	3f 4f       	sbci	r19, 0xFF	; 255
    4ac8:	26 83       	std	Z+6, r18	; 0x06
    4aca:	37 83       	std	Z+7, r19	; 0x07
    4acc:	14 c0       	rjmp	.+40     	; 0x4af6 <fputc+0x6e>
    4ace:	8b 01       	movw	r16, r22
    4ad0:	ec 01       	movw	r28, r24
    4ad2:	fb 01       	movw	r30, r22
    4ad4:	00 84       	ldd	r0, Z+8	; 0x08
    4ad6:	f1 85       	ldd	r31, Z+9	; 0x09
    4ad8:	e0 2d       	mov	r30, r0
    4ada:	09 95       	icall
    4adc:	89 2b       	or	r24, r25
    4ade:	e1 f6       	brne	.-72     	; 0x4a98 <fputc+0x10>
    4ae0:	d8 01       	movw	r26, r16
    4ae2:	16 96       	adiw	r26, 0x06	; 6
    4ae4:	8d 91       	ld	r24, X+
    4ae6:	9c 91       	ld	r25, X
    4ae8:	17 97       	sbiw	r26, 0x07	; 7
    4aea:	01 96       	adiw	r24, 0x01	; 1
    4aec:	16 96       	adiw	r26, 0x06	; 6
    4aee:	8d 93       	st	X+, r24
    4af0:	9c 93       	st	X, r25
    4af2:	17 97       	sbiw	r26, 0x07	; 7
    4af4:	ce 01       	movw	r24, r28
    4af6:	df 91       	pop	r29
    4af8:	cf 91       	pop	r28
    4afa:	1f 91       	pop	r17
    4afc:	0f 91       	pop	r16
    4afe:	08 95       	ret

00004b00 <__ultoa_invert>:
    4b00:	fa 01       	movw	r30, r20
    4b02:	aa 27       	eor	r26, r26
    4b04:	28 30       	cpi	r18, 0x08	; 8
    4b06:	51 f1       	breq	.+84     	; 0x4b5c <__ultoa_invert+0x5c>
    4b08:	20 31       	cpi	r18, 0x10	; 16
    4b0a:	81 f1       	breq	.+96     	; 0x4b6c <__ultoa_invert+0x6c>
    4b0c:	e8 94       	clt
    4b0e:	6f 93       	push	r22
    4b10:	6e 7f       	andi	r22, 0xFE	; 254
    4b12:	6e 5f       	subi	r22, 0xFE	; 254
    4b14:	7f 4f       	sbci	r23, 0xFF	; 255
    4b16:	8f 4f       	sbci	r24, 0xFF	; 255
    4b18:	9f 4f       	sbci	r25, 0xFF	; 255
    4b1a:	af 4f       	sbci	r26, 0xFF	; 255
    4b1c:	b1 e0       	ldi	r27, 0x01	; 1
    4b1e:	3e d0       	rcall	.+124    	; 0x4b9c <__ultoa_invert+0x9c>
    4b20:	b4 e0       	ldi	r27, 0x04	; 4
    4b22:	3c d0       	rcall	.+120    	; 0x4b9c <__ultoa_invert+0x9c>
    4b24:	67 0f       	add	r22, r23
    4b26:	78 1f       	adc	r23, r24
    4b28:	89 1f       	adc	r24, r25
    4b2a:	9a 1f       	adc	r25, r26
    4b2c:	a1 1d       	adc	r26, r1
    4b2e:	68 0f       	add	r22, r24
    4b30:	79 1f       	adc	r23, r25
    4b32:	8a 1f       	adc	r24, r26
    4b34:	91 1d       	adc	r25, r1
    4b36:	a1 1d       	adc	r26, r1
    4b38:	6a 0f       	add	r22, r26
    4b3a:	71 1d       	adc	r23, r1
    4b3c:	81 1d       	adc	r24, r1
    4b3e:	91 1d       	adc	r25, r1
    4b40:	a1 1d       	adc	r26, r1
    4b42:	20 d0       	rcall	.+64     	; 0x4b84 <__ultoa_invert+0x84>
    4b44:	09 f4       	brne	.+2      	; 0x4b48 <__ultoa_invert+0x48>
    4b46:	68 94       	set
    4b48:	3f 91       	pop	r19
    4b4a:	2a e0       	ldi	r18, 0x0A	; 10
    4b4c:	26 9f       	mul	r18, r22
    4b4e:	11 24       	eor	r1, r1
    4b50:	30 19       	sub	r19, r0
    4b52:	30 5d       	subi	r19, 0xD0	; 208
    4b54:	31 93       	st	Z+, r19
    4b56:	de f6       	brtc	.-74     	; 0x4b0e <__ultoa_invert+0xe>
    4b58:	cf 01       	movw	r24, r30
    4b5a:	08 95       	ret
    4b5c:	46 2f       	mov	r20, r22
    4b5e:	47 70       	andi	r20, 0x07	; 7
    4b60:	40 5d       	subi	r20, 0xD0	; 208
    4b62:	41 93       	st	Z+, r20
    4b64:	b3 e0       	ldi	r27, 0x03	; 3
    4b66:	0f d0       	rcall	.+30     	; 0x4b86 <__ultoa_invert+0x86>
    4b68:	c9 f7       	brne	.-14     	; 0x4b5c <__ultoa_invert+0x5c>
    4b6a:	f6 cf       	rjmp	.-20     	; 0x4b58 <__ultoa_invert+0x58>
    4b6c:	46 2f       	mov	r20, r22
    4b6e:	4f 70       	andi	r20, 0x0F	; 15
    4b70:	40 5d       	subi	r20, 0xD0	; 208
    4b72:	4a 33       	cpi	r20, 0x3A	; 58
    4b74:	18 f0       	brcs	.+6      	; 0x4b7c <__ultoa_invert+0x7c>
    4b76:	49 5d       	subi	r20, 0xD9	; 217
    4b78:	31 fd       	sbrc	r19, 1
    4b7a:	40 52       	subi	r20, 0x20	; 32
    4b7c:	41 93       	st	Z+, r20
    4b7e:	02 d0       	rcall	.+4      	; 0x4b84 <__ultoa_invert+0x84>
    4b80:	a9 f7       	brne	.-22     	; 0x4b6c <__ultoa_invert+0x6c>
    4b82:	ea cf       	rjmp	.-44     	; 0x4b58 <__ultoa_invert+0x58>
    4b84:	b4 e0       	ldi	r27, 0x04	; 4
    4b86:	a6 95       	lsr	r26
    4b88:	97 95       	ror	r25
    4b8a:	87 95       	ror	r24
    4b8c:	77 95       	ror	r23
    4b8e:	67 95       	ror	r22
    4b90:	ba 95       	dec	r27
    4b92:	c9 f7       	brne	.-14     	; 0x4b86 <__ultoa_invert+0x86>
    4b94:	00 97       	sbiw	r24, 0x00	; 0
    4b96:	61 05       	cpc	r22, r1
    4b98:	71 05       	cpc	r23, r1
    4b9a:	08 95       	ret
    4b9c:	9b 01       	movw	r18, r22
    4b9e:	ac 01       	movw	r20, r24
    4ba0:	0a 2e       	mov	r0, r26
    4ba2:	06 94       	lsr	r0
    4ba4:	57 95       	ror	r21
    4ba6:	47 95       	ror	r20
    4ba8:	37 95       	ror	r19
    4baa:	27 95       	ror	r18
    4bac:	ba 95       	dec	r27
    4bae:	c9 f7       	brne	.-14     	; 0x4ba2 <__ultoa_invert+0xa2>
    4bb0:	62 0f       	add	r22, r18
    4bb2:	73 1f       	adc	r23, r19
    4bb4:	84 1f       	adc	r24, r20
    4bb6:	95 1f       	adc	r25, r21
    4bb8:	a0 1d       	adc	r26, r0
    4bba:	08 95       	ret

00004bbc <eeprom_read_byte>:
    4bbc:	03 d0       	rcall	.+6      	; 0x4bc4 <eeprom_mapen>
    4bbe:	80 81       	ld	r24, Z
    4bc0:	99 27       	eor	r25, r25
    4bc2:	08 95       	ret

00004bc4 <eeprom_mapen>:
    4bc4:	fc 01       	movw	r30, r24
    4bc6:	e0 50       	subi	r30, 0x00	; 0
    4bc8:	fc 4e       	sbci	r31, 0xEC	; 236
    4bca:	08 95       	ret

00004bcc <eeprom_update_dword>:
    4bcc:	03 96       	adiw	r24, 0x03	; 3
    4bce:	27 2f       	mov	r18, r23
    4bd0:	0e 94 17 26 	call	0x4c2e	; 0x4c2e <eeprom_update_r18>
    4bd4:	0e 94 16 26 	call	0x4c2c	; 0x4c2c <eeprom_update_byte>
    4bd8:	25 2f       	mov	r18, r21
    4bda:	0e 94 17 26 	call	0x4c2e	; 0x4c2e <eeprom_update_r18>
    4bde:	24 2f       	mov	r18, r20
    4be0:	0c 94 17 26 	jmp	0x4c2e	; 0x4c2e <eeprom_update_r18>

00004be4 <eeprom_update_word>:
    4be4:	01 96       	adiw	r24, 0x01	; 1
    4be6:	27 2f       	mov	r18, r23
    4be8:	0e 94 17 26 	call	0x4c2e	; 0x4c2e <eeprom_update_r18>
    4bec:	0c 94 16 26 	jmp	0x4c2c	; 0x4c2c <eeprom_update_byte>

00004bf0 <eeprom_write_block>:
    4bf0:	dc 01       	movw	r26, r24
    4bf2:	cb 01       	movw	r24, r22
    4bf4:	03 c0       	rjmp	.+6      	; 0x4bfc <eeprom_write_block+0xc>
    4bf6:	2d 91       	ld	r18, X+
    4bf8:	0e 94 03 26 	call	0x4c06	; 0x4c06 <eeprom_write_r18>
    4bfc:	41 50       	subi	r20, 0x01	; 1
    4bfe:	50 40       	sbci	r21, 0x00	; 0
    4c00:	d0 f7       	brcc	.-12     	; 0x4bf6 <eeprom_write_block+0x6>
    4c02:	08 95       	ret

00004c04 <eeprom_write_byte>:
    4c04:	26 2f       	mov	r18, r22

00004c06 <eeprom_write_r18>:
    4c06:	af 93       	push	r26
    4c08:	bf 93       	push	r27
    4c0a:	e0 e0       	ldi	r30, 0x00	; 0
    4c0c:	f0 e1       	ldi	r31, 0x10	; 16
    4c0e:	32 81       	ldd	r19, Z+2	; 0x02
    4c10:	31 fd       	sbrc	r19, 1
    4c12:	fd cf       	rjmp	.-6      	; 0x4c0e <eeprom_write_r18+0x8>
    4c14:	dc 01       	movw	r26, r24
    4c16:	a0 50       	subi	r26, 0x00	; 0
    4c18:	bc 4e       	sbci	r27, 0xEC	; 236
    4c1a:	2c 93       	st	X, r18
    4c1c:	2d e9       	ldi	r18, 0x9D	; 157
    4c1e:	24 bf       	out	0x34, r18	; 52
    4c20:	23 e0       	ldi	r18, 0x03	; 3
    4c22:	20 83       	st	Z, r18
    4c24:	01 96       	adiw	r24, 0x01	; 1
    4c26:	bf 91       	pop	r27
    4c28:	af 91       	pop	r26
    4c2a:	08 95       	ret

00004c2c <eeprom_update_byte>:
    4c2c:	26 2f       	mov	r18, r22

00004c2e <eeprom_update_r18>:
    4c2e:	0e 94 e2 25 	call	0x4bc4	; 0x4bc4 <eeprom_mapen>
    4c32:	00 80       	ld	r0, Z
    4c34:	02 16       	cp	r0, r18
    4c36:	19 f0       	breq	.+6      	; 0x4c3e <eeprom_update_r18+0x10>
    4c38:	0e 94 03 26 	call	0x4c06	; 0x4c06 <eeprom_write_r18>
    4c3c:	01 97       	sbiw	r24, 0x01	; 1
    4c3e:	01 97       	sbiw	r24, 0x01	; 1
    4c40:	08 95       	ret

00004c42 <__do_global_dtors>:
    4c42:	10 e0       	ldi	r17, 0x00	; 0
    4c44:	c2 ed       	ldi	r28, 0xD2	; 210
    4c46:	d0 e0       	ldi	r29, 0x00	; 0
    4c48:	04 c0       	rjmp	.+8      	; 0x4c52 <__do_global_dtors+0x10>
    4c4a:	fe 01       	movw	r30, r28
    4c4c:	0e 94 35 21 	call	0x426a	; 0x426a <__tablejump2__>
    4c50:	21 96       	adiw	r28, 0x01	; 1
    4c52:	c3 3d       	cpi	r28, 0xD3	; 211
    4c54:	d1 07       	cpc	r29, r17
    4c56:	c9 f7       	brne	.-14     	; 0x4c4a <__do_global_dtors+0x8>
    4c58:	f8 94       	cli

00004c5a <__stop_program>:
    4c5a:	ff cf       	rjmp	.-2      	; 0x4c5a <__stop_program>
