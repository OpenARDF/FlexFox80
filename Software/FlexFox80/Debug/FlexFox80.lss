
FlexFox80.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000c6  00804000  000052d8  0000538c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000052d8  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000003c5  008040c6  008040c6  00005452  2**0
                  ALLOC
  3 .eeprom       0000001f  00810000  00810000  00005452  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      0000005c  00000000  00000000  00005471  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000054d0  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 00000848  00000000  00000000  00005510  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000da1b  00000000  00000000  00005d58  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00005331  00000000  00000000  00013773  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000058f3  00000000  00000000  00018aa4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00001600  00000000  00000000  0001e398  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000545b  00000000  00000000  0001f998  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000066cf  00000000  00000000  00024df3  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000720  00000000  00000000  0002b4c2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__dtors_end>
       4:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
       8:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
       c:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      10:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      14:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      18:	0c 94 60 0e 	jmp	0x1cc0	; 0x1cc0 <__vector_6>
      1c:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      20:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      24:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      28:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      2c:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      30:	0c 94 07 05 	jmp	0xa0e	; 0xa0e <__vector_12>
      34:	0c 94 49 1f 	jmp	0x3e92	; 0x3e92 <__vector_13>
      38:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      3c:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      40:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      44:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      48:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      4c:	0c 94 e3 02 	jmp	0x5c6	; 0x5c6 <__vector_19>
      50:	0c 94 0d 03 	jmp	0x61a	; 0x61a <__vector_20>
      54:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      58:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      5c:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      60:	0c 94 f7 0d 	jmp	0x1bee	; 0x1bee <__vector_24>
      64:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      68:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      6c:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      70:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      74:	0c 94 35 0e 	jmp	0x1c6a	; 0x1c6a <__vector_29>
      78:	0c 94 42 01 	jmp	0x284	; 0x284 <__vector_30>
      7c:	0c 94 5e 04 	jmp	0x8bc	; 0x8bc <__vector_31>
      80:	0c 94 88 04 	jmp	0x910	; 0x910 <__vector_32>
      84:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      88:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      8c:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      90:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      94:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      98:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      9c:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      a0:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      a4:	0c 94 d9 04 	jmp	0x9b2	; 0x9b2 <__vector_41>
      a8:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      ac:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      b0:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      b4:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      b8:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      bc:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      c0:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      c4:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      c8:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      cc:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      d0:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      d4:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      d8:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      dc:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      e0:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      e4:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__bad_interrupt>
      e8:	89 16       	cp	r8, r25
      ea:	4d 16       	cp	r4, r29
      ec:	79 16       	cp	r7, r25
      ee:	91 16       	cp	r9, r17
      f0:	7d 16       	cp	r7, r29
      f2:	91 16       	cp	r9, r17
      f4:	5d 16       	cp	r5, r29
      f6:	49 16       	cp	r4, r25
      f8:	55 16       	cp	r5, r21
      fa:	59 16       	cp	r5, r25
      fc:	91 16       	cp	r9, r17
      fe:	6d 16       	cp	r6, r29
     100:	41 16       	cp	r4, r17
     102:	71 16       	cp	r7, r17
     104:	3d 16       	cp	r3, r29
     106:	51 16       	cp	r5, r17
     108:	15 16       	cp	r1, r21
     10a:	19 16       	cp	r1, r25
     10c:	1d 16       	cp	r1, r29
     10e:	21 16       	cp	r2, r17
     110:	25 16       	cp	r2, r21
     112:	29 16       	cp	r2, r25
     114:	2d 16       	cp	r2, r29
     116:	31 16       	cp	r3, r17
     118:	35 16       	cp	r3, r21
     11a:	39 16       	cp	r3, r25
     11c:	61 16       	cp	r6, r17
     11e:	65 16       	cp	r6, r21
     120:	8d 16       	cp	r8, r29
     122:	69 16       	cp	r6, r25
     124:	91 16       	cp	r9, r17
     126:	45 16       	cp	r4, r21
     128:	81 16       	cp	r8, r17
     12a:	ad 15       	cp	r26, r13
     12c:	b1 15       	cp	r27, r1
     12e:	b5 15       	cp	r27, r5
     130:	b9 15       	cp	r27, r9
     132:	bd 15       	cp	r27, r13
     134:	c1 15       	cp	r28, r1
     136:	c5 15       	cp	r28, r5
     138:	c9 15       	cp	r28, r9
     13a:	cd 15       	cp	r28, r13
     13c:	d1 15       	cp	r29, r1
     13e:	d5 15       	cp	r29, r5
     140:	d9 15       	cp	r29, r9
     142:	dd 15       	cp	r29, r13
     144:	e1 15       	cp	r30, r1
     146:	e5 15       	cp	r30, r5
     148:	e9 15       	cp	r30, r9
     14a:	ed 15       	cp	r30, r13
     14c:	f1 15       	cp	r31, r1
     14e:	f5 15       	cp	r31, r5
     150:	f9 15       	cp	r31, r9
     152:	fd 15       	cp	r31, r13
     154:	01 16       	cp	r0, r17
     156:	05 16       	cp	r0, r21
     158:	09 16       	cp	r0, r25
     15a:	0d 16       	cp	r0, r29
     15c:	11 16       	cp	r1, r17
     15e:	91 16       	cp	r9, r17
     160:	91 16       	cp	r9, r17
     162:	91 16       	cp	r9, r17
     164:	91 16       	cp	r9, r17
     166:	75 16       	cp	r7, r21
     168:	91 16       	cp	r9, r17
     16a:	91 16       	cp	r9, r17
     16c:	91 16       	cp	r9, r17
     16e:	91 16       	cp	r9, r17
     170:	91 16       	cp	r9, r17
     172:	91 16       	cp	r9, r17
     174:	91 16       	cp	r9, r17
     176:	91 16       	cp	r9, r17
     178:	91 16       	cp	r9, r17
     17a:	91 16       	cp	r9, r17
     17c:	91 16       	cp	r9, r17
     17e:	91 16       	cp	r9, r17
     180:	91 16       	cp	r9, r17
     182:	91 16       	cp	r9, r17
     184:	91 16       	cp	r9, r17
     186:	91 16       	cp	r9, r17
     188:	91 16       	cp	r9, r17
     18a:	91 16       	cp	r9, r17
     18c:	91 16       	cp	r9, r17
     18e:	91 16       	cp	r9, r17
     190:	91 16       	cp	r9, r17
     192:	91 16       	cp	r9, r17
     194:	91 16       	cp	r9, r17
     196:	91 16       	cp	r9, r17
     198:	91 16       	cp	r9, r17
     19a:	91 16       	cp	r9, r17
     19c:	91 16       	cp	r9, r17
     19e:	91 16       	cp	r9, r17
     1a0:	85 16       	cp	r8, r21

000001a2 <__ctors_start>:
     1a2:	27 0e       	add	r2, r23

000001a4 <__ctors_end>:
     1a4:	2e 0e       	add	r2, r30

000001a6 <__dtors_end>:
     1a6:	11 24       	eor	r1, r1
     1a8:	1f be       	out	0x3f, r1	; 63
     1aa:	cf ef       	ldi	r28, 0xFF	; 255
     1ac:	cd bf       	out	0x3d, r28	; 61
     1ae:	df e7       	ldi	r29, 0x7F	; 127
     1b0:	de bf       	out	0x3e, r29	; 62

000001b2 <__do_copy_data>:
     1b2:	10 e4       	ldi	r17, 0x40	; 64
     1b4:	a0 e0       	ldi	r26, 0x00	; 0
     1b6:	b0 e4       	ldi	r27, 0x40	; 64
     1b8:	e8 ed       	ldi	r30, 0xD8	; 216
     1ba:	f2 e5       	ldi	r31, 0x52	; 82
     1bc:	00 e0       	ldi	r16, 0x00	; 0
     1be:	0b bf       	out	0x3b, r16	; 59
     1c0:	02 c0       	rjmp	.+4      	; 0x1c6 <__do_copy_data+0x14>
     1c2:	07 90       	elpm	r0, Z+
     1c4:	0d 92       	st	X+, r0
     1c6:	a6 3c       	cpi	r26, 0xC6	; 198
     1c8:	b1 07       	cpc	r27, r17
     1ca:	d9 f7       	brne	.-10     	; 0x1c2 <__do_copy_data+0x10>

000001cc <__do_clear_bss>:
     1cc:	24 e4       	ldi	r18, 0x44	; 68
     1ce:	a6 ec       	ldi	r26, 0xC6	; 198
     1d0:	b0 e4       	ldi	r27, 0x40	; 64
     1d2:	01 c0       	rjmp	.+2      	; 0x1d6 <.do_clear_bss_start>

000001d4 <.do_clear_bss_loop>:
     1d4:	1d 92       	st	X+, r1

000001d6 <.do_clear_bss_start>:
     1d6:	ab 38       	cpi	r26, 0x8B	; 139
     1d8:	b2 07       	cpc	r27, r18
     1da:	e1 f7       	brne	.-8      	; 0x1d4 <.do_clear_bss_loop>

000001dc <__do_global_ctors>:
     1dc:	10 e0       	ldi	r17, 0x00	; 0
     1de:	c2 ed       	ldi	r28, 0xD2	; 210
     1e0:	d0 e0       	ldi	r29, 0x00	; 0
     1e2:	04 c0       	rjmp	.+8      	; 0x1ec <__do_global_ctors+0x10>
     1e4:	21 97       	sbiw	r28, 0x01	; 1
     1e6:	fe 01       	movw	r30, r28
     1e8:	0e 94 73 24 	call	0x48e6	; 0x48e6 <__tablejump2__>
     1ec:	c1 3d       	cpi	r28, 0xD1	; 209
     1ee:	d1 07       	cpc	r29, r17
     1f0:	c9 f7       	brne	.-14     	; 0x1e4 <__do_global_ctors+0x8>
     1f2:	0e 94 74 06 	call	0xce8	; 0xce8 <main>
     1f6:	0c 94 5f 29 	jmp	0x52be	; 0x52be <__do_global_dtors>

000001fa <__bad_interrupt>:
     1fa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001fe <month_length>:
     1fe:	62 30       	cpi	r22, 0x02	; 2
     200:	21 f4       	brne	.+8      	; 0x20a <__EEPROM_REGION_LENGTH__+0xa>
     202:	0e 94 2b 01 	call	0x256	; 0x256 <is_leap_year>
     206:	84 5e       	subi	r24, 0xE4	; 228
     208:	08 95       	ret
     20a:	68 30       	cpi	r22, 0x08	; 8
     20c:	08 f0       	brcs	.+2      	; 0x210 <__EEPROM_REGION_LENGTH__+0x10>
     20e:	6f 5f       	subi	r22, 0xFF	; 255
     210:	61 70       	andi	r22, 0x01	; 1
     212:	8e e1       	ldi	r24, 0x1E	; 30
     214:	86 0f       	add	r24, r22
     216:	08 95       	ret

00000218 <set_system_time>:
     218:	0f b6       	in	r0, 0x3f	; 63
     21a:	f8 94       	cli
     21c:	60 93 87 44 	sts	0x4487, r22	; 0x804487 <__system_time>
     220:	70 93 88 44 	sts	0x4488, r23	; 0x804488 <__system_time+0x1>
     224:	80 93 89 44 	sts	0x4489, r24	; 0x804489 <__system_time+0x2>
     228:	90 93 8a 44 	sts	0x448A, r25	; 0x80448a <__system_time+0x3>
     22c:	0f be       	out	0x3f, r0	; 63
     22e:	08 95       	ret

00000230 <time>:
     230:	fc 01       	movw	r30, r24
     232:	0f b6       	in	r0, 0x3f	; 63
     234:	f8 94       	cli
     236:	60 91 87 44 	lds	r22, 0x4487	; 0x804487 <__system_time>
     23a:	70 91 88 44 	lds	r23, 0x4488	; 0x804488 <__system_time+0x1>
     23e:	80 91 89 44 	lds	r24, 0x4489	; 0x804489 <__system_time+0x2>
     242:	90 91 8a 44 	lds	r25, 0x448A	; 0x80448a <__system_time+0x3>
     246:	0f be       	out	0x3f, r0	; 63
     248:	30 97       	sbiw	r30, 0x00	; 0
     24a:	21 f0       	breq	.+8      	; 0x254 <time+0x24>
     24c:	60 83       	st	Z, r22
     24e:	71 83       	std	Z+1, r23	; 0x01
     250:	82 83       	std	Z+2, r24	; 0x02
     252:	93 83       	std	Z+3, r25	; 0x03
     254:	08 95       	ret

00000256 <is_leap_year>:
     256:	9c 01       	movw	r18, r24
     258:	23 70       	andi	r18, 0x03	; 3
     25a:	33 27       	eor	r19, r19
     25c:	23 2b       	or	r18, r19
     25e:	59 f4       	brne	.+22     	; 0x276 <is_leap_year+0x20>
     260:	64 e6       	ldi	r22, 0x64	; 100
     262:	70 e0       	ldi	r23, 0x00	; 0
     264:	0e 94 1e 24 	call	0x483c	; 0x483c <__divmodhi4>
     268:	89 2b       	or	r24, r25
     26a:	39 f4       	brne	.+14     	; 0x27a <is_leap_year+0x24>
     26c:	63 70       	andi	r22, 0x03	; 3
     26e:	77 27       	eor	r23, r23
     270:	81 e0       	ldi	r24, 0x01	; 1
     272:	67 2b       	or	r22, r23
     274:	19 f0       	breq	.+6      	; 0x27c <is_leap_year+0x26>
     276:	80 e0       	ldi	r24, 0x00	; 0
     278:	08 95       	ret
     27a:	81 e0       	ldi	r24, 0x01	; 1
     27c:	08 95       	ret

0000027e <atmel_start_init>:
/**
 * Initializes MCU, drivers and middleware in the project
 **/
void atmel_start_init(void)
{
	system_init();
     27e:	0e 94 af 0f 	call	0x1f5e	; 0x1f5e <system_init>
     282:	08 95       	ret

00000284 <__vector_30>:
		charIndex = 0;
		(*buff)[0] = '\0';
		buff = nextFullSBTxBuffer();
		if(!buff)
		{
			linkbus_end_tx();
     284:	1f 92       	push	r1
     286:	0f 92       	push	r0
     288:	0f b6       	in	r0, 0x3f	; 63
     28a:	0f 92       	push	r0
     28c:	11 24       	eor	r1, r1
     28e:	8f 93       	push	r24
     290:	80 91 26 0b 	lds	r24, 0x0B26	; 0x800b26 <__TEXT_REGION_LENGTH__+0x7e0b26>
     294:	80 ff       	sbrs	r24, 0
     296:	03 c0       	rjmp	.+6      	; 0x29e <__vector_30+0x1a>
     298:	81 e0       	ldi	r24, 0x01	; 1
     29a:	80 93 26 0b 	sts	0x0B26, r24	; 0x800b26 <__TEXT_REGION_LENGTH__+0x7e0b26>
     29e:	8f 91       	pop	r24
     2a0:	0f 90       	pop	r0
     2a2:	0f be       	out	0x3f, r0	; 63
     2a4:	0f 90       	pop	r0
     2a6:	1f 90       	pop	r1
     2a8:	18 95       	reti

000002aa <_Z9serial_Rxh>:
     2aa:	1f 93       	push	r17
     2ac:	cf 93       	push	r28
     2ae:	df 93       	push	r29
     2b0:	18 2f       	mov	r17, r24
     2b2:	80 91 0f 41 	lds	r24, 0x410F	; 0x80410f <_ZZ9serial_RxhE4buff>
     2b6:	90 91 10 41 	lds	r25, 0x4110	; 0x804110 <_ZZ9serial_RxhE4buff+0x1>
     2ba:	89 2b       	or	r24, r25
     2bc:	31 f4       	brne	.+12     	; 0x2ca <_Z9serial_Rxh+0x20>
     2be:	0e 94 1a 18 	call	0x3034	; 0x3034 <nextEmptySBRxBuffer>
     2c2:	80 93 0f 41 	sts	0x410F, r24	; 0x80410f <_ZZ9serial_RxhE4buff>
     2c6:	90 93 10 41 	sts	0x4110, r25	; 0x804110 <_ZZ9serial_RxhE4buff+0x1>
     2ca:	c0 91 0f 41 	lds	r28, 0x410F	; 0x80410f <_ZZ9serial_RxhE4buff>
     2ce:	d0 91 10 41 	lds	r29, 0x4110	; 0x804110 <_ZZ9serial_RxhE4buff+0x1>
     2d2:	20 97       	sbiw	r28, 0x00	; 0
     2d4:	09 f4       	brne	.+2      	; 0x2d8 <_Z9serial_Rxh+0x2e>
     2d6:	73 c1       	rjmp	.+742    	; 0x5be <__LOCK_REGION_LENGTH__+0x1be>
     2d8:	81 2f       	mov	r24, r17
     2da:	90 e0       	ldi	r25, 0x00	; 0
     2dc:	0e 94 0b 26 	call	0x4c16	; 0x4c16 <toupper>
     2e0:	ac 01       	movw	r20, r24
     2e2:	28 2f       	mov	r18, r24
     2e4:	90 91 0e 41 	lds	r25, 0x410E	; 0x80410e <_ZZ9serial_RxhE11ignoreCount>
     2e8:	99 23       	and	r25, r25
     2ea:	21 f0       	breq	.+8      	; 0x2f4 <_Z9serial_Rxh+0x4a>
     2ec:	91 50       	subi	r25, 0x01	; 1
     2ee:	90 93 0e 41 	sts	0x410E, r25	; 0x80410e <_ZZ9serial_RxhE11ignoreCount>
     2f2:	65 c1       	rjmp	.+714    	; 0x5be <__LOCK_REGION_LENGTH__+0x1be>
     2f4:	4b 31       	cpi	r20, 0x1B	; 27
     2f6:	21 f4       	brne	.+8      	; 0x300 <_Z9serial_Rxh+0x56>
     2f8:	82 e0       	ldi	r24, 0x02	; 2
     2fa:	80 93 0e 41 	sts	0x410E, r24	; 0x80410e <_ZZ9serial_RxhE11ignoreCount>
     2fe:	5f c1       	rjmp	.+702    	; 0x5be <__LOCK_REGION_LENGTH__+0x1be>
     300:	4d 30       	cpi	r20, 0x0D	; 13
     302:	09 f0       	breq	.+2      	; 0x306 <_Z9serial_Rxh+0x5c>
     304:	3f c0       	rjmp	.+126    	; 0x384 <_Z9serial_Rxh+0xda>
     306:	80 91 da 40 	lds	r24, 0x40DA	; 0x8040da <_ZZ9serial_RxhE13receiving_msg>
     30a:	88 23       	and	r24, r24
     30c:	31 f1       	breq	.+76     	; 0x35a <_Z9serial_Rxh+0xb0>
     30e:	e0 91 0d 41 	lds	r30, 0x410D	; 0x80410d <_ZZ9serial_RxhE9charIndex>
     312:	ee 23       	and	r30, r30
     314:	f9 f0       	breq	.+62     	; 0x354 <_Z9serial_Rxh+0xaa>
     316:	82 e0       	ldi	r24, 0x02	; 2
     318:	88 83       	st	Y, r24
     31a:	80 91 d8 40 	lds	r24, 0x40D8	; 0x8040d8 <_ZZ9serial_RxhE6msg_ID>
     31e:	90 91 d9 40 	lds	r25, 0x40D9	; 0x8040d9 <_ZZ9serial_RxhE6msg_ID+0x1>
     322:	89 83       	std	Y+1, r24	; 0x01
     324:	9a 83       	std	Y+2, r25	; 0x02
     326:	80 91 d7 40 	lds	r24, 0x40D7	; 0x8040d7 <_ZZ9serial_RxhE11field_index>
     32a:	88 23       	and	r24, r24
     32c:	79 f0       	breq	.+30     	; 0x34c <_Z9serial_Rxh+0xa2>
     32e:	90 e0       	ldi	r25, 0x00	; 0
     330:	01 97       	sbiw	r24, 0x01	; 1
     332:	40 91 d6 40 	lds	r20, 0x40D6	; 0x8040d6 <_ZZ9serial_RxhE9field_len>
     336:	54 e1       	ldi	r21, 0x14	; 20
     338:	58 9f       	mul	r21, r24
     33a:	90 01       	movw	r18, r0
     33c:	59 9f       	mul	r21, r25
     33e:	30 0d       	add	r19, r0
     340:	11 24       	eor	r1, r1
     342:	c2 0f       	add	r28, r18
     344:	d3 1f       	adc	r29, r19
     346:	c4 0f       	add	r28, r20
     348:	d1 1d       	adc	r29, r1
     34a:	1b 82       	std	Y+3, r1	; 0x03
     34c:	f0 e0       	ldi	r31, 0x00	; 0
     34e:	e5 52       	subi	r30, 0x25	; 37
     350:	ff 4b       	sbci	r31, 0xBF	; 191
     352:	10 82       	st	Z, r1
     354:	0e 94 9b 18 	call	0x3136	; 0x3136 <sb_send_NewLine>
     358:	04 c0       	rjmp	.+8      	; 0x362 <_Z9serial_Rxh+0xb8>
     35a:	8f ef       	ldi	r24, 0xFF	; 255
     35c:	9f ef       	ldi	r25, 0xFF	; 255
     35e:	89 83       	std	Y+1, r24	; 0x01
     360:	9a 83       	std	Y+2, r25	; 0x02
     362:	10 92 0d 41 	sts	0x410D, r1	; 0x80410d <_ZZ9serial_RxhE9charIndex>
     366:	10 92 d6 40 	sts	0x40D6, r1	; 0x8040d6 <_ZZ9serial_RxhE9field_len>
     36a:	10 92 d8 40 	sts	0x40D8, r1	; 0x8040d8 <_ZZ9serial_RxhE6msg_ID>
     36e:	10 92 d9 40 	sts	0x40D9, r1	; 0x8040d9 <_ZZ9serial_RxhE6msg_ID+0x1>
     372:	10 92 d7 40 	sts	0x40D7, r1	; 0x8040d7 <_ZZ9serial_RxhE11field_index>
     376:	10 92 0f 41 	sts	0x410F, r1	; 0x80410f <_ZZ9serial_RxhE4buff>
     37a:	10 92 10 41 	sts	0x4110, r1	; 0x804110 <_ZZ9serial_RxhE4buff+0x1>
     37e:	10 92 da 40 	sts	0x40DA, r1	; 0x8040da <_ZZ9serial_RxhE13receiving_msg>
     382:	1d c1       	rjmp	.+570    	; 0x5be <__LOCK_REGION_LENGTH__+0x1be>
     384:	44 23       	and	r20, r20
     386:	09 f4       	brne	.+2      	; 0x38a <_Z9serial_Rxh+0xe0>
     388:	1a c1       	rjmp	.+564    	; 0x5be <__LOCK_REGION_LENGTH__+0x1be>
     38a:	e0 91 0d 41 	lds	r30, 0x410D	; 0x80410d <_ZZ9serial_RxhE9charIndex>
     38e:	8e 2f       	mov	r24, r30
     390:	90 e0       	ldi	r25, 0x00	; 0
     392:	dc 01       	movw	r26, r24
     394:	a5 52       	subi	r26, 0x25	; 37
     396:	bf 4b       	sbci	r27, 0xBF	; 191
     398:	4c 93       	st	X, r20
     39a:	ee 23       	and	r30, r30
     39c:	09 f4       	brne	.+2      	; 0x3a0 <_Z9serial_Rxh+0xf6>
     39e:	d7 c0       	rjmp	.+430    	; 0x54e <__LOCK_REGION_LENGTH__+0x14e>
     3a0:	4f 37       	cpi	r20, 0x7F	; 127
     3a2:	09 f0       	breq	.+2      	; 0x3a6 <_Z9serial_Rxh+0xfc>
     3a4:	5f c0       	rjmp	.+190    	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
     3a6:	e1 50       	subi	r30, 0x01	; 1
     3a8:	e0 93 0d 41 	sts	0x410D, r30	; 0x80410d <_ZZ9serial_RxhE9charIndex>
     3ac:	80 91 d7 40 	lds	r24, 0x40D7	; 0x8040d7 <_ZZ9serial_RxhE11field_index>
     3b0:	81 11       	cpse	r24, r1
     3b2:	13 c0       	rjmp	.+38     	; 0x3da <_Z9serial_Rxh+0x130>
     3b4:	f0 e0       	ldi	r31, 0x00	; 0
     3b6:	e5 52       	subi	r30, 0x25	; 37
     3b8:	ff 4b       	sbci	r31, 0xBF	; 191
     3ba:	30 81       	ld	r19, Z
     3bc:	80 91 d8 40 	lds	r24, 0x40D8	; 0x8040d8 <_ZZ9serial_RxhE6msg_ID>
     3c0:	90 91 d9 40 	lds	r25, 0x40D9	; 0x8040d9 <_ZZ9serial_RxhE6msg_ID+0x1>
     3c4:	83 1b       	sub	r24, r19
     3c6:	91 09       	sbc	r25, r1
     3c8:	6a e0       	ldi	r22, 0x0A	; 10
     3ca:	70 e0       	ldi	r23, 0x00	; 0
     3cc:	0e 94 1e 24 	call	0x483c	; 0x483c <__divmodhi4>
     3d0:	60 93 d8 40 	sts	0x40D8, r22	; 0x8040d8 <_ZZ9serial_RxhE6msg_ID>
     3d4:	70 93 d9 40 	sts	0x40D9, r23	; 0x8040d9 <_ZZ9serial_RxhE6msg_ID+0x1>
     3d8:	39 c0       	rjmp	.+114    	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
     3da:	90 91 d6 40 	lds	r25, 0x40D6	; 0x8040d6 <_ZZ9serial_RxhE9field_len>
     3de:	99 23       	and	r25, r25
     3e0:	91 f0       	breq	.+36     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
     3e2:	3f ef       	ldi	r19, 0xFF	; 255
     3e4:	39 0f       	add	r19, r25
     3e6:	30 93 d6 40 	sts	0x40D6, r19	; 0x8040d6 <_ZZ9serial_RxhE9field_len>
     3ea:	90 e0       	ldi	r25, 0x00	; 0
     3ec:	01 97       	sbiw	r24, 0x01	; 1
     3ee:	64 e1       	ldi	r22, 0x14	; 20
     3f0:	68 9f       	mul	r22, r24
     3f2:	a0 01       	movw	r20, r0
     3f4:	69 9f       	mul	r22, r25
     3f6:	50 0d       	add	r21, r0
     3f8:	11 24       	eor	r1, r1
     3fa:	c4 0f       	add	r28, r20
     3fc:	d5 1f       	adc	r29, r21
     3fe:	c3 0f       	add	r28, r19
     400:	d1 1d       	adc	r29, r1
     402:	1b 82       	std	Y+3, r1	; 0x03
     404:	23 c0       	rjmp	.+70     	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
     406:	f0 e0       	ldi	r31, 0x00	; 0
     408:	e5 52       	subi	r30, 0x25	; 37
     40a:	ff 4b       	sbci	r31, 0xBF	; 191
     40c:	90 81       	ld	r25, Z
     40e:	90 32       	cpi	r25, 0x20	; 32
     410:	a1 f4       	brne	.+40     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
     412:	81 50       	subi	r24, 0x01	; 1
     414:	80 93 d7 40 	sts	0x40D7, r24	; 0x8040d7 <_ZZ9serial_RxhE11field_index>
     418:	34 e1       	ldi	r19, 0x14	; 20
     41a:	83 9f       	mul	r24, r19
     41c:	c0 01       	movw	r24, r0
     41e:	11 24       	eor	r1, r1
     420:	03 96       	adiw	r24, 0x03	; 3
     422:	c8 0f       	add	r28, r24
     424:	d9 1f       	adc	r29, r25
     426:	fe 01       	movw	r30, r28
     428:	01 90       	ld	r0, Z+
     42a:	00 20       	and	r0, r0
     42c:	e9 f7       	brne	.-6      	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
     42e:	31 97       	sbiw	r30, 0x01	; 1
     430:	ec 1b       	sub	r30, r28
     432:	fd 0b       	sbc	r31, r29
     434:	e0 93 d6 40 	sts	0x40D6, r30	; 0x8040d6 <_ZZ9serial_RxhE9field_len>
     438:	09 c0       	rjmp	.+18     	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
     43a:	94 e1       	ldi	r25, 0x14	; 20
     43c:	89 9f       	mul	r24, r25
     43e:	c0 0d       	add	r28, r0
     440:	d1 1d       	adc	r29, r1
     442:	11 24       	eor	r1, r1
     444:	1b 82       	std	Y+3, r1	; 0x03
     446:	81 50       	subi	r24, 0x01	; 1
     448:	80 93 d7 40 	sts	0x40D7, r24	; 0x8040d7 <_ZZ9serial_RxhE11field_index>
     44c:	80 91 0d 41 	lds	r24, 0x410D	; 0x80410d <_ZZ9serial_RxhE9charIndex>
     450:	e8 2f       	mov	r30, r24
     452:	f0 e0       	ldi	r31, 0x00	; 0
     454:	e5 52       	subi	r30, 0x25	; 37
     456:	ff 4b       	sbci	r31, 0xBF	; 191
     458:	10 82       	st	Z, r1
     45a:	81 11       	cpse	r24, r1
     45c:	ab c0       	rjmp	.+342    	; 0x5b4 <__LOCK_REGION_LENGTH__+0x1b4>
     45e:	10 92 da 40 	sts	0x40DA, r1	; 0x8040da <_ZZ9serial_RxhE13receiving_msg>
     462:	a8 c0       	rjmp	.+336    	; 0x5b4 <__LOCK_REGION_LENGTH__+0x1b4>
     464:	40 32       	cpi	r20, 0x20	; 32
     466:	81 f5       	brne	.+96     	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
     468:	fc 01       	movw	r30, r24
     46a:	e6 52       	subi	r30, 0x26	; 38
     46c:	ff 4b       	sbci	r31, 0xBF	; 191
     46e:	30 81       	ld	r19, Z
     470:	30 32       	cpi	r19, 0x20	; 32
     472:	09 f4       	brne	.+2      	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
     474:	98 c0       	rjmp	.+304    	; 0x5a6 <__LOCK_REGION_LENGTH__+0x1a6>
     476:	30 91 d7 40 	lds	r19, 0x40D7	; 0x8040d7 <_ZZ9serial_RxhE11field_index>
     47a:	43 2f       	mov	r20, r19
     47c:	50 e0       	ldi	r21, 0x00	; 0
     47e:	ba 01       	movw	r22, r20
     480:	6f 5f       	subi	r22, 0xFF	; 255
     482:	7f 4f       	sbci	r23, 0xFF	; 255
     484:	63 30       	cpi	r22, 0x03	; 3
     486:	71 05       	cpc	r23, r1
     488:	0c f0       	brlt	.+2      	; 0x48c <__LOCK_REGION_LENGTH__+0x8c>
     48a:	8f c0       	rjmp	.+286    	; 0x5aa <__LOCK_REGION_LENGTH__+0x1aa>
     48c:	33 23       	and	r19, r19
     48e:	79 f0       	breq	.+30     	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
     490:	41 50       	subi	r20, 0x01	; 1
     492:	51 09       	sbc	r21, r1
     494:	e0 91 d6 40 	lds	r30, 0x40D6	; 0x8040d6 <_ZZ9serial_RxhE9field_len>
     498:	f4 e1       	ldi	r31, 0x14	; 20
     49a:	f4 9f       	mul	r31, r20
     49c:	b0 01       	movw	r22, r0
     49e:	f5 9f       	mul	r31, r21
     4a0:	70 0d       	add	r23, r0
     4a2:	11 24       	eor	r1, r1
     4a4:	c6 0f       	add	r28, r22
     4a6:	d7 1f       	adc	r29, r23
     4a8:	ce 0f       	add	r28, r30
     4aa:	d1 1d       	adc	r29, r1
     4ac:	1b 82       	std	Y+3, r1	; 0x03
     4ae:	3f 5f       	subi	r19, 0xFF	; 255
     4b0:	30 93 d7 40 	sts	0x40D7, r19	; 0x8040d7 <_ZZ9serial_RxhE11field_index>
     4b4:	10 92 d6 40 	sts	0x40D6, r1	; 0x8040d6 <_ZZ9serial_RxhE9field_len>
     4b8:	01 96       	adiw	r24, 0x01	; 1
     4ba:	81 33       	cpi	r24, 0x31	; 49
     4bc:	91 05       	cpc	r25, r1
     4be:	0c f0       	brlt	.+2      	; 0x4c2 <__LOCK_REGION_LENGTH__+0xc2>
     4c0:	81 e3       	ldi	r24, 0x31	; 49
     4c2:	80 93 0d 41 	sts	0x410D, r24	; 0x80410d <_ZZ9serial_RxhE9charIndex>
     4c6:	76 c0       	rjmp	.+236    	; 0x5b4 <__LOCK_REGION_LENGTH__+0x1b4>
     4c8:	80 91 d6 40 	lds	r24, 0x40D6	; 0x8040d6 <_ZZ9serial_RxhE9field_len>
     4cc:	85 31       	cpi	r24, 0x15	; 21
     4ce:	08 f0       	brcs	.+2      	; 0x4d2 <__LOCK_REGION_LENGTH__+0xd2>
     4d0:	6e c0       	rjmp	.+220    	; 0x5ae <__LOCK_REGION_LENGTH__+0x1ae>
     4d2:	60 91 d7 40 	lds	r22, 0x40D7	; 0x8040d7 <_ZZ9serial_RxhE11field_index>
     4d6:	61 11       	cpse	r22, r1
     4d8:	19 c0       	rjmp	.+50     	; 0x50c <__LOCK_REGION_LENGTH__+0x10c>
     4da:	60 91 d8 40 	lds	r22, 0x40D8	; 0x8040d8 <_ZZ9serial_RxhE6msg_ID>
     4de:	70 91 d9 40 	lds	r23, 0x40D9	; 0x8040d9 <_ZZ9serial_RxhE6msg_ID+0x1>
     4e2:	fb 01       	movw	r30, r22
     4e4:	ee 0f       	add	r30, r30
     4e6:	ff 1f       	adc	r31, r31
     4e8:	66 0f       	add	r22, r22
     4ea:	77 1f       	adc	r23, r23
     4ec:	66 0f       	add	r22, r22
     4ee:	77 1f       	adc	r23, r23
     4f0:	66 0f       	add	r22, r22
     4f2:	77 1f       	adc	r23, r23
     4f4:	6e 0f       	add	r22, r30
     4f6:	7f 1f       	adc	r23, r31
     4f8:	64 0f       	add	r22, r20
     4fa:	71 1d       	adc	r23, r1
     4fc:	60 93 d8 40 	sts	0x40D8, r22	; 0x8040d8 <_ZZ9serial_RxhE6msg_ID>
     500:	70 93 d9 40 	sts	0x40D9, r23	; 0x8040d9 <_ZZ9serial_RxhE6msg_ID+0x1>
     504:	8f 5f       	subi	r24, 0xFF	; 255
     506:	80 93 d6 40 	sts	0x40D6, r24	; 0x8040d6 <_ZZ9serial_RxhE9field_len>
     50a:	16 c0       	rjmp	.+44     	; 0x538 <__LOCK_REGION_LENGTH__+0x138>
     50c:	70 e0       	ldi	r23, 0x00	; 0
     50e:	61 50       	subi	r22, 0x01	; 1
     510:	71 09       	sbc	r23, r1
     512:	91 e0       	ldi	r25, 0x01	; 1
     514:	98 0f       	add	r25, r24
     516:	90 93 d6 40 	sts	0x40D6, r25	; 0x8040d6 <_ZZ9serial_RxhE9field_len>
     51a:	34 e1       	ldi	r19, 0x14	; 20
     51c:	36 9f       	mul	r19, r22
     51e:	f0 01       	movw	r30, r0
     520:	37 9f       	mul	r19, r23
     522:	f0 0d       	add	r31, r0
     524:	11 24       	eor	r1, r1
     526:	ce 0f       	add	r28, r30
     528:	df 1f       	adc	r29, r31
     52a:	fe 01       	movw	r30, r28
     52c:	e8 0f       	add	r30, r24
     52e:	f1 1d       	adc	r31, r1
     530:	43 83       	std	Z+3, r20	; 0x03
     532:	c9 0f       	add	r28, r25
     534:	d1 1d       	adc	r29, r1
     536:	1b 82       	std	Y+3, r1	; 0x03
     538:	80 91 0d 41 	lds	r24, 0x410D	; 0x80410d <_ZZ9serial_RxhE9charIndex>
     53c:	90 e0       	ldi	r25, 0x00	; 0
     53e:	01 96       	adiw	r24, 0x01	; 1
     540:	81 33       	cpi	r24, 0x31	; 49
     542:	91 05       	cpc	r25, r1
     544:	0c f0       	brlt	.+2      	; 0x548 <__LOCK_REGION_LENGTH__+0x148>
     546:	81 e3       	ldi	r24, 0x31	; 49
     548:	80 93 0d 41 	sts	0x410D, r24	; 0x80410d <_ZZ9serial_RxhE9charIndex>
     54c:	33 c0       	rjmp	.+102    	; 0x5b4 <__LOCK_REGION_LENGTH__+0x1b4>
     54e:	4f 37       	cpi	r20, 0x7F	; 127
     550:	69 f4       	brne	.+26     	; 0x56c <__LOCK_REGION_LENGTH__+0x16c>
     552:	80 91 d8 40 	lds	r24, 0x40D8	; 0x8040d8 <_ZZ9serial_RxhE6msg_ID>
     556:	90 91 d9 40 	lds	r25, 0x40D9	; 0x8040d9 <_ZZ9serial_RxhE6msg_ID+0x1>
     55a:	18 16       	cp	r1, r24
     55c:	19 06       	cpc	r1, r25
     55e:	0c f0       	brlt	.+2      	; 0x562 <__LOCK_REGION_LENGTH__+0x162>
     560:	20 e0       	ldi	r18, 0x00	; 0
     562:	10 92 d8 40 	sts	0x40D8, r1	; 0x8040d8 <_ZZ9serial_RxhE6msg_ID>
     566:	10 92 d9 40 	sts	0x40D9, r1	; 0x8040d9 <_ZZ9serial_RxhE6msg_ID+0x1>
     56a:	24 c0       	rjmp	.+72     	; 0x5b4 <__LOCK_REGION_LENGTH__+0x1b4>
     56c:	40 32       	cpi	r20, 0x20	; 32
     56e:	09 f1       	breq	.+66     	; 0x5b2 <__LOCK_REGION_LENGTH__+0x1b2>
     570:	10 92 d7 40 	sts	0x40D7, r1	; 0x8040d7 <_ZZ9serial_RxhE11field_index>
     574:	55 27       	eor	r21, r21
     576:	40 93 d8 40 	sts	0x40D8, r20	; 0x8040d8 <_ZZ9serial_RxhE6msg_ID>
     57a:	50 93 d9 40 	sts	0x40D9, r21	; 0x8040d9 <_ZZ9serial_RxhE6msg_ID+0x1>
     57e:	80 e0       	ldi	r24, 0x00	; 0
     580:	83 30       	cpi	r24, 0x03	; 3
     582:	50 f4       	brcc	.+20     	; 0x598 <__LOCK_REGION_LENGTH__+0x198>
     584:	de 01       	movw	r26, r28
     586:	34 e1       	ldi	r19, 0x14	; 20
     588:	83 9f       	mul	r24, r19
     58a:	a0 0d       	add	r26, r0
     58c:	b1 1d       	adc	r27, r1
     58e:	11 24       	eor	r1, r1
     590:	13 96       	adiw	r26, 0x03	; 3
     592:	1c 92       	st	X, r1
     594:	8f 5f       	subi	r24, 0xFF	; 255
     596:	f4 cf       	rjmp	.-24     	; 0x580 <__LOCK_REGION_LENGTH__+0x180>
     598:	81 e0       	ldi	r24, 0x01	; 1
     59a:	80 93 da 40 	sts	0x40DA, r24	; 0x8040da <_ZZ9serial_RxhE13receiving_msg>
     59e:	ef 5f       	subi	r30, 0xFF	; 255
     5a0:	e0 93 0d 41 	sts	0x410D, r30	; 0x80410d <_ZZ9serial_RxhE9charIndex>
     5a4:	07 c0       	rjmp	.+14     	; 0x5b4 <__LOCK_REGION_LENGTH__+0x1b4>
     5a6:	20 e0       	ldi	r18, 0x00	; 0
     5a8:	05 c0       	rjmp	.+10     	; 0x5b4 <__LOCK_REGION_LENGTH__+0x1b4>
     5aa:	20 e0       	ldi	r18, 0x00	; 0
     5ac:	03 c0       	rjmp	.+6      	; 0x5b4 <__LOCK_REGION_LENGTH__+0x1b4>
     5ae:	20 e0       	ldi	r18, 0x00	; 0
     5b0:	01 c0       	rjmp	.+2      	; 0x5b4 <__LOCK_REGION_LENGTH__+0x1b4>
     5b2:	20 e0       	ldi	r18, 0x00	; 0
     5b4:	22 23       	and	r18, r18
     5b6:	19 f0       	breq	.+6      	; 0x5be <__LOCK_REGION_LENGTH__+0x1be>
     5b8:	82 2f       	mov	r24, r18
     5ba:	0e 94 a4 18 	call	0x3148	; 0x3148 <sb_echo_char>
     5be:	df 91       	pop	r29
     5c0:	cf 91       	pop	r28
     5c2:	1f 91       	pop	r17
     5c4:	08 95       	ret

000005c6 <__vector_19>:
     5c6:	1f 92       	push	r1
     5c8:	0f 92       	push	r0
     5ca:	0f b6       	in	r0, 0x3f	; 63
     5cc:	0f 92       	push	r0
     5ce:	11 24       	eor	r1, r1
     5d0:	0b b6       	in	r0, 0x3b	; 59
     5d2:	0f 92       	push	r0
     5d4:	2f 93       	push	r18
     5d6:	3f 93       	push	r19
     5d8:	4f 93       	push	r20
     5da:	5f 93       	push	r21
     5dc:	6f 93       	push	r22
     5de:	7f 93       	push	r23
     5e0:	8f 93       	push	r24
     5e2:	9f 93       	push	r25
     5e4:	af 93       	push	r26
     5e6:	bf 93       	push	r27
     5e8:	ef 93       	push	r30
     5ea:	ff 93       	push	r31
     5ec:	0e 94 85 21 	call	0x430a	; 0x430a <USART0_get_data>
     5f0:	0e 94 55 01 	call	0x2aa	; 0x2aa <_Z9serial_Rxh>
     5f4:	ff 91       	pop	r31
     5f6:	ef 91       	pop	r30
     5f8:	bf 91       	pop	r27
     5fa:	af 91       	pop	r26
     5fc:	9f 91       	pop	r25
     5fe:	8f 91       	pop	r24
     600:	7f 91       	pop	r23
     602:	6f 91       	pop	r22
     604:	5f 91       	pop	r21
     606:	4f 91       	pop	r20
     608:	3f 91       	pop	r19
     60a:	2f 91       	pop	r18
     60c:	0f 90       	pop	r0
     60e:	0b be       	out	0x3b, r0	; 59
     610:	0f 90       	pop	r0
     612:	0f be       	out	0x3f, r0	; 63
     614:	0f 90       	pop	r0
     616:	1f 90       	pop	r1
     618:	18 95       	reti

0000061a <__vector_20>:
     61a:	1f 92       	push	r1
     61c:	0f 92       	push	r0
     61e:	0f b6       	in	r0, 0x3f	; 63
     620:	0f 92       	push	r0
     622:	11 24       	eor	r1, r1
     624:	0b b6       	in	r0, 0x3b	; 59
     626:	0f 92       	push	r0
     628:	2f 93       	push	r18
     62a:	3f 93       	push	r19
     62c:	4f 93       	push	r20
     62e:	5f 93       	push	r21
     630:	6f 93       	push	r22
     632:	7f 93       	push	r23
     634:	8f 93       	push	r24
     636:	9f 93       	push	r25
     638:	af 93       	push	r26
     63a:	bf 93       	push	r27
     63c:	ef 93       	push	r30
     63e:	ff 93       	push	r31
     640:	80 91 d4 40 	lds	r24, 0x40D4	; 0x8040d4 <_ZZ11__vector_20E4buff>
     644:	90 91 d5 40 	lds	r25, 0x40D5	; 0x8040d5 <_ZZ11__vector_20E4buff+0x1>
     648:	89 2b       	or	r24, r25
     64a:	31 f4       	brne	.+12     	; 0x658 <__vector_20+0x3e>
     64c:	0e 94 c2 17 	call	0x2f84	; 0x2f84 <nextFullSBTxBuffer>
     650:	80 93 d4 40 	sts	0x40D4, r24	; 0x8040d4 <_ZZ11__vector_20E4buff>
     654:	90 93 d5 40 	sts	0x40D5, r25	; 0x8040d5 <_ZZ11__vector_20E4buff+0x1>
     658:	e0 91 d4 40 	lds	r30, 0x40D4	; 0x8040d4 <_ZZ11__vector_20E4buff>
     65c:	f0 91 d5 40 	lds	r31, 0x40D5	; 0x8040d5 <_ZZ11__vector_20E4buff+0x1>
     660:	80 91 d3 40 	lds	r24, 0x40D3	; 0x8040d3 <_ZZ11__vector_20E9charIndex>
     664:	df 01       	movw	r26, r30
     666:	a8 0f       	add	r26, r24
     668:	b1 1d       	adc	r27, r1
     66a:	9c 91       	ld	r25, X
     66c:	99 23       	and	r25, r25
     66e:	31 f0       	breq	.+12     	; 0x67c <__vector_20+0x62>
     670:	8f 5f       	subi	r24, 0xFF	; 255
     672:	80 93 d3 40 	sts	0x40D3, r24	; 0x8040d3 <_ZZ11__vector_20E9charIndex>
     676:	90 93 02 08 	sts	0x0802, r25	; 0x800802 <__TEXT_REGION_LENGTH__+0x7e0802>
     67a:	0d c0       	rjmp	.+26     	; 0x696 <__vector_20+0x7c>
     67c:	10 92 d3 40 	sts	0x40D3, r1	; 0x8040d3 <_ZZ11__vector_20E9charIndex>
     680:	10 82       	st	Z, r1
     682:	0e 94 c2 17 	call	0x2f84	; 0x2f84 <nextFullSBTxBuffer>
     686:	80 93 d4 40 	sts	0x40D4, r24	; 0x8040d4 <_ZZ11__vector_20E4buff>
     68a:	90 93 d5 40 	sts	0x40D5, r25	; 0x8040d5 <_ZZ11__vector_20E4buff+0x1>
     68e:	89 2b       	or	r24, r25
     690:	11 f4       	brne	.+4      	; 0x696 <__vector_20+0x7c>
     692:	0e 94 79 14 	call	0x28f2	; 0x28f2 <_Z14linkbus_end_txv>
     696:	ff 91       	pop	r31
     698:	ef 91       	pop	r30
     69a:	bf 91       	pop	r27
     69c:	af 91       	pop	r26
     69e:	9f 91       	pop	r25
     6a0:	8f 91       	pop	r24
     6a2:	7f 91       	pop	r23
     6a4:	6f 91       	pop	r22
     6a6:	5f 91       	pop	r21
     6a8:	4f 91       	pop	r20
     6aa:	3f 91       	pop	r19
     6ac:	2f 91       	pop	r18
     6ae:	0f 90       	pop	r0
     6b0:	0b be       	out	0x3b, r0	; 59
     6b2:	0f 90       	pop	r0
     6b4:	0f be       	out	0x3f, r0	; 63
     6b6:	0f 90       	pop	r0
     6b8:	1f 90       	pop	r1
     6ba:	18 95       	reti

000006bc <_Z10linkbus_Rxh>:
	uint8_t rx_char = USART1_get_data();	
	linkbus_Rx(rx_char);
}

void linkbus_Rx(uint8_t rx_char)
{
     6bc:	0f 93       	push	r16
     6be:	1f 93       	push	r17
     6c0:	cf 93       	push	r28
     6c2:	df 93       	push	r29
     6c4:	18 2f       	mov	r17, r24
	static uint8_t field_index = 0;
	static uint8_t field_len = 0;
	static uint32_t tempMsg_ID = 0;
	static BOOL receiving_msg = FALSE;

	if(!buff)
     6c6:	80 91 d1 40 	lds	r24, 0x40D1	; 0x8040d1 <_ZZ10linkbus_RxhE4buff>
     6ca:	90 91 d2 40 	lds	r25, 0x40D2	; 0x8040d2 <_ZZ10linkbus_RxhE4buff+0x1>
     6ce:	89 2b       	or	r24, r25
     6d0:	31 f4       	brne	.+12     	; 0x6de <_Z10linkbus_Rxh+0x22>
	{
		buff = nextEmptyLBRxBuffer();
     6d2:	0e 94 0c 14 	call	0x2818	; 0x2818 <_Z19nextEmptyLBRxBufferv>
     6d6:	80 93 d1 40 	sts	0x40D1, r24	; 0x8040d1 <_ZZ10linkbus_RxhE4buff>
     6da:	90 93 d2 40 	sts	0x40D2, r25	; 0x8040d2 <_ZZ10linkbus_RxhE4buff+0x1>
	}

	if(buff)
     6de:	c0 91 d1 40 	lds	r28, 0x40D1	; 0x8040d1 <_ZZ10linkbus_RxhE4buff>
     6e2:	d0 91 d2 40 	lds	r29, 0x40D2	; 0x8040d2 <_ZZ10linkbus_RxhE4buff+0x1>
     6e6:	20 97       	sbiw	r28, 0x00	; 0
     6e8:	09 f4       	brne	.+2      	; 0x6ec <_Z10linkbus_Rxh+0x30>
     6ea:	e3 c0       	rjmp	.+454    	; 0x8b2 <_Z10linkbus_Rxh+0x1f6>
	{
		rx_char = toupper(rx_char);
     6ec:	81 2f       	mov	r24, r17
     6ee:	90 e0       	ldi	r25, 0x00	; 0
     6f0:	0e 94 0b 26 	call	0x4c16	; 0x4c16 <toupper>
		//		SMCR = 0x00;                                /* exit power-down mode */

		if((rx_char == '$') || (rx_char == '!'))    /* start of new message = $ */
     6f4:	84 32       	cpi	r24, 0x24	; 36
     6f6:	11 f0       	breq	.+4      	; 0x6fc <_Z10linkbus_Rxh+0x40>
     6f8:	81 32       	cpi	r24, 0x21	; 33
     6fa:	49 f5       	brne	.+82     	; 0x74e <_Z10linkbus_Rxh+0x92>
		{
			charIndex = 0;
     6fc:	10 92 d0 40 	sts	0x40D0, r1	; 0x8040d0 <_ZZ10linkbus_RxhE9charIndex>
			buff->type = (rx_char == '!') ? LINKBUS_MSG_REPLY : LINKBUS_MSG_COMMAND;
     700:	81 32       	cpi	r24, 0x21	; 33
     702:	11 f4       	brne	.+4      	; 0x708 <_Z10linkbus_Rxh+0x4c>
     704:	83 e0       	ldi	r24, 0x03	; 3
     706:	01 c0       	rjmp	.+2      	; 0x70a <_Z10linkbus_Rxh+0x4e>
     708:	81 e0       	ldi	r24, 0x01	; 1
     70a:	88 83       	st	Y, r24
			field_len = 0;
     70c:	10 92 cf 40 	sts	0x40CF, r1	; 0x8040cf <_ZZ10linkbus_RxhE9field_len>
			tempMsg_ID = 0;
     710:	10 92 cb 40 	sts	0x40CB, r1	; 0x8040cb <_ZZ10linkbus_RxhE10tempMsg_ID>
     714:	10 92 cc 40 	sts	0x40CC, r1	; 0x8040cc <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
     718:	10 92 cd 40 	sts	0x40CD, r1	; 0x8040cd <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
     71c:	10 92 ce 40 	sts	0x40CE, r1	; 0x8040ce <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
			receiving_msg = TRUE;
     720:	81 e0       	ldi	r24, 0x01	; 1
     722:	80 93 ca 40 	sts	0x40CA, r24	; 0x8040ca <_ZZ10linkbus_RxhE13receiving_msg>

			/* Empty the field buffers */
			for(field_index = 0; field_index < LINKBUS_MAX_MSG_NUMBER_OF_FIELDS; field_index++)
     726:	10 92 c9 40 	sts	0x40C9, r1	; 0x8040c9 <_ZZ10linkbus_RxhE11field_index>
     72a:	80 91 c9 40 	lds	r24, 0x40C9	; 0x8040c9 <_ZZ10linkbus_RxhE11field_index>
     72e:	83 30       	cpi	r24, 0x03	; 3
     730:	58 f4       	brcc	.+22     	; 0x748 <_Z10linkbus_Rxh+0x8c>
			{
				buff->fields[field_index][0] = '\0';
     732:	fe 01       	movw	r30, r28
     734:	05 e1       	ldi	r16, 0x15	; 21
     736:	80 9f       	mul	r24, r16
     738:	e0 0d       	add	r30, r0
     73a:	f1 1d       	adc	r31, r1
     73c:	11 24       	eor	r1, r1
     73e:	13 82       	std	Z+3, r1	; 0x03
			field_len = 0;
			tempMsg_ID = 0;
			receiving_msg = TRUE;

			/* Empty the field buffers */
			for(field_index = 0; field_index < LINKBUS_MAX_MSG_NUMBER_OF_FIELDS; field_index++)
     740:	8f 5f       	subi	r24, 0xFF	; 255
     742:	80 93 c9 40 	sts	0x40C9, r24	; 0x8040c9 <_ZZ10linkbus_RxhE11field_index>
     746:	f1 cf       	rjmp	.-30     	; 0x72a <_Z10linkbus_Rxh+0x6e>
			{
				buff->fields[field_index][0] = '\0';
			}

			field_index = 0;
     748:	10 92 c9 40 	sts	0x40C9, r1	; 0x8040c9 <_ZZ10linkbus_RxhE11field_index>
     74c:	a7 c0       	rjmp	.+334    	; 0x89c <_Z10linkbus_Rxh+0x1e0>
		}
		else if(receiving_msg)
     74e:	90 91 ca 40 	lds	r25, 0x40CA	; 0x8040ca <_ZZ10linkbus_RxhE13receiving_msg>
     752:	99 23       	and	r25, r25
     754:	09 f4       	brne	.+2      	; 0x758 <_Z10linkbus_Rxh+0x9c>
     756:	8b c0       	rjmp	.+278    	; 0x86e <_Z10linkbus_Rxh+0x1b2>
		{
			if((rx_char == ',') || (rx_char == ';') || (rx_char == '?'))    /* new field = ,; end of message = ; */
     758:	8c 32       	cpi	r24, 0x2C	; 44
     75a:	29 f0       	breq	.+10     	; 0x766 <_Z10linkbus_Rxh+0xaa>
     75c:	8b 33       	cpi	r24, 0x3B	; 59
     75e:	19 f0       	breq	.+6      	; 0x766 <_Z10linkbus_Rxh+0xaa>
     760:	8f 33       	cpi	r24, 0x3F	; 63
     762:	09 f0       	breq	.+2      	; 0x766 <_Z10linkbus_Rxh+0xaa>
     764:	42 c0       	rjmp	.+132    	; 0x7ea <_Z10linkbus_Rxh+0x12e>
			{
				/* if(field_index == 0) // message ID received */
				if(field_index > 0)
     766:	90 91 c9 40 	lds	r25, 0x40C9	; 0x8040c9 <_ZZ10linkbus_RxhE11field_index>
     76a:	99 23       	and	r25, r25
     76c:	89 f0       	breq	.+34     	; 0x790 <_Z10linkbus_Rxh+0xd4>
				{
					buff->fields[field_index - 1][field_len] = 0;
     76e:	29 2f       	mov	r18, r25
     770:	30 e0       	ldi	r19, 0x00	; 0
     772:	21 50       	subi	r18, 0x01	; 1
     774:	31 09       	sbc	r19, r1
     776:	40 91 cf 40 	lds	r20, 0x40CF	; 0x8040cf <_ZZ10linkbus_RxhE9field_len>
     77a:	55 e1       	ldi	r21, 0x15	; 21
     77c:	52 9f       	mul	r21, r18
     77e:	f0 01       	movw	r30, r0
     780:	53 9f       	mul	r21, r19
     782:	f0 0d       	add	r31, r0
     784:	11 24       	eor	r1, r1
     786:	ec 0f       	add	r30, r28
     788:	fd 1f       	adc	r31, r29
     78a:	e4 0f       	add	r30, r20
     78c:	f1 1d       	adc	r31, r1
     78e:	13 82       	std	Z+3, r1	; 0x03
				}

				field_index++;
     790:	9f 5f       	subi	r25, 0xFF	; 255
     792:	90 93 c9 40 	sts	0x40C9, r25	; 0x8040c9 <_ZZ10linkbus_RxhE11field_index>
				field_len = 0;
     796:	10 92 cf 40 	sts	0x40CF, r1	; 0x8040cf <_ZZ10linkbus_RxhE9field_len>

				if(rx_char == ';')
     79a:	8b 33       	cpi	r24, 0x3B	; 59
     79c:	69 f4       	brne	.+26     	; 0x7b8 <_Z10linkbus_Rxh+0xfc>
				{
					if(charIndex > LINKBUS_MIN_MSG_LENGTH)
     79e:	80 91 d0 40 	lds	r24, 0x40D0	; 0x8040d0 <_ZZ10linkbus_RxhE9charIndex>
     7a2:	84 30       	cpi	r24, 0x04	; 4
     7a4:	30 f0       	brcs	.+12     	; 0x7b2 <_Z10linkbus_Rxh+0xf6>
					{
						buff->id = (LBMessageID)tempMsg_ID;
     7a6:	80 91 cb 40 	lds	r24, 0x40CB	; 0x8040cb <_ZZ10linkbus_RxhE10tempMsg_ID>
     7aa:	90 91 cc 40 	lds	r25, 0x40CC	; 0x8040cc <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
     7ae:	89 83       	std	Y+1, r24	; 0x01
     7b0:	9a 83       	std	Y+2, r25	; 0x02
					}
					receiving_msg = FALSE;
     7b2:	10 92 ca 40 	sts	0x40CA, r1	; 0x8040ca <_ZZ10linkbus_RxhE13receiving_msg>
     7b6:	10 c0       	rjmp	.+32     	; 0x7d8 <_Z10linkbus_Rxh+0x11c>
				}
				else if(rx_char == '?')
     7b8:	8f 33       	cpi	r24, 0x3F	; 63
     7ba:	71 f4       	brne	.+28     	; 0x7d8 <_Z10linkbus_Rxh+0x11c>
				{
					buff->type = LINKBUS_MSG_QUERY;
     7bc:	82 e0       	ldi	r24, 0x02	; 2
     7be:	88 83       	st	Y, r24
					if(charIndex >= LINKBUS_MIN_MSG_LENGTH)
     7c0:	80 91 d0 40 	lds	r24, 0x40D0	; 0x8040d0 <_ZZ10linkbus_RxhE9charIndex>
     7c4:	83 30       	cpi	r24, 0x03	; 3
     7c6:	30 f0       	brcs	.+12     	; 0x7d4 <_Z10linkbus_Rxh+0x118>
					{
						buff->id = (LBMessageID)tempMsg_ID;
     7c8:	80 91 cb 40 	lds	r24, 0x40CB	; 0x8040cb <_ZZ10linkbus_RxhE10tempMsg_ID>
     7cc:	90 91 cc 40 	lds	r25, 0x40CC	; 0x8040cc <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
     7d0:	89 83       	std	Y+1, r24	; 0x01
     7d2:	9a 83       	std	Y+2, r25	; 0x02
					}
					receiving_msg = FALSE;
     7d4:	10 92 ca 40 	sts	0x40CA, r1	; 0x8040ca <_ZZ10linkbus_RxhE13receiving_msg>
				}

				if(!receiving_msg)
     7d8:	80 91 ca 40 	lds	r24, 0x40CA	; 0x8040ca <_ZZ10linkbus_RxhE13receiving_msg>
     7dc:	81 11       	cpse	r24, r1
     7de:	5e c0       	rjmp	.+188    	; 0x89c <_Z10linkbus_Rxh+0x1e0>
				{
					buff = 0;
     7e0:	10 92 d1 40 	sts	0x40D1, r1	; 0x8040d1 <_ZZ10linkbus_RxhE4buff>
     7e4:	10 92 d2 40 	sts	0x40D2, r1	; 0x8040d2 <_ZZ10linkbus_RxhE4buff+0x1>
     7e8:	59 c0       	rjmp	.+178    	; 0x89c <_Z10linkbus_Rxh+0x1e0>
				}
			}
			else
			{
				if(field_index == 0)    /* message ID received */
     7ea:	20 91 c9 40 	lds	r18, 0x40C9	; 0x8040c9 <_ZZ10linkbus_RxhE11field_index>
     7ee:	21 11       	cpse	r18, r1
     7f0:	29 c0       	rjmp	.+82     	; 0x844 <_Z10linkbus_Rxh+0x188>
				{
					tempMsg_ID = tempMsg_ID * 10 + rx_char;
     7f2:	40 91 cb 40 	lds	r20, 0x40CB	; 0x8040cb <_ZZ10linkbus_RxhE10tempMsg_ID>
     7f6:	50 91 cc 40 	lds	r21, 0x40CC	; 0x8040cc <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
     7fa:	60 91 cd 40 	lds	r22, 0x40CD	; 0x8040cd <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
     7fe:	70 91 ce 40 	lds	r23, 0x40CE	; 0x8040ce <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
     802:	44 0f       	add	r20, r20
     804:	55 1f       	adc	r21, r21
     806:	66 1f       	adc	r22, r22
     808:	77 1f       	adc	r23, r23
     80a:	8a 01       	movw	r16, r20
     80c:	9b 01       	movw	r18, r22
     80e:	00 0f       	add	r16, r16
     810:	11 1f       	adc	r17, r17
     812:	22 1f       	adc	r18, r18
     814:	33 1f       	adc	r19, r19
     816:	00 0f       	add	r16, r16
     818:	11 1f       	adc	r17, r17
     81a:	22 1f       	adc	r18, r18
     81c:	33 1f       	adc	r19, r19
     81e:	40 0f       	add	r20, r16
     820:	51 1f       	adc	r21, r17
     822:	62 1f       	adc	r22, r18
     824:	73 1f       	adc	r23, r19
     826:	8a 01       	movw	r16, r20
     828:	9b 01       	movw	r18, r22
     82a:	08 0f       	add	r16, r24
     82c:	11 1d       	adc	r17, r1
     82e:	21 1d       	adc	r18, r1
     830:	31 1d       	adc	r19, r1
     832:	00 93 cb 40 	sts	0x40CB, r16	; 0x8040cb <_ZZ10linkbus_RxhE10tempMsg_ID>
     836:	10 93 cc 40 	sts	0x40CC, r17	; 0x8040cc <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
     83a:	20 93 cd 40 	sts	0x40CD, r18	; 0x8040cd <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
     83e:	30 93 ce 40 	sts	0x40CE, r19	; 0x8040ce <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
     842:	2c c0       	rjmp	.+88     	; 0x89c <_Z10linkbus_Rxh+0x1e0>
				}
				else
				{
					buff->fields[field_index - 1][field_len++] = rx_char;
     844:	30 e0       	ldi	r19, 0x00	; 0
     846:	21 50       	subi	r18, 0x01	; 1
     848:	31 09       	sbc	r19, r1
     84a:	90 91 cf 40 	lds	r25, 0x40CF	; 0x8040cf <_ZZ10linkbus_RxhE9field_len>
     84e:	41 e0       	ldi	r20, 0x01	; 1
     850:	49 0f       	add	r20, r25
     852:	40 93 cf 40 	sts	0x40CF, r20	; 0x8040cf <_ZZ10linkbus_RxhE9field_len>
     856:	65 e1       	ldi	r22, 0x15	; 21
     858:	62 9f       	mul	r22, r18
     85a:	a0 01       	movw	r20, r0
     85c:	63 9f       	mul	r22, r19
     85e:	50 0d       	add	r21, r0
     860:	11 24       	eor	r1, r1
     862:	c4 0f       	add	r28, r20
     864:	d5 1f       	adc	r29, r21
     866:	c9 0f       	add	r28, r25
     868:	d1 1d       	adc	r29, r1
     86a:	8b 83       	std	Y+3, r24	; 0x03
     86c:	17 c0       	rjmp	.+46     	; 0x89c <_Z10linkbus_Rxh+0x1e0>
				}
			}
		}
		else if(rx_char == 0x0D)    /* Carriage return resets any message in progress */
     86e:	8d 30       	cpi	r24, 0x0D	; 13
     870:	a9 f4       	brne	.+42     	; 0x89c <_Z10linkbus_Rxh+0x1e0>
		{
			buff->id = LB_MESSAGE_EMPTY;
     872:	19 82       	std	Y+1, r1	; 0x01
     874:	1a 82       	std	Y+2, r1	; 0x02
			charIndex = LINKBUS_MAX_MSG_LENGTH;
     876:	82 e3       	ldi	r24, 0x32	; 50
     878:	80 93 d0 40 	sts	0x40D0, r24	; 0x8040d0 <_ZZ10linkbus_RxhE9charIndex>
			field_len = 0;
     87c:	10 92 cf 40 	sts	0x40CF, r1	; 0x8040cf <_ZZ10linkbus_RxhE9field_len>
			tempMsg_ID = 0;
     880:	10 92 cb 40 	sts	0x40CB, r1	; 0x8040cb <_ZZ10linkbus_RxhE10tempMsg_ID>
     884:	10 92 cc 40 	sts	0x40CC, r1	; 0x8040cc <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
     888:	10 92 cd 40 	sts	0x40CD, r1	; 0x8040cd <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
     88c:	10 92 ce 40 	sts	0x40CE, r1	; 0x8040ce <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
			field_index = 0;
     890:	10 92 c9 40 	sts	0x40C9, r1	; 0x8040c9 <_ZZ10linkbus_RxhE11field_index>
			buff = NULL;
     894:	10 92 d1 40 	sts	0x40D1, r1	; 0x8040d1 <_ZZ10linkbus_RxhE4buff>
     898:	10 92 d2 40 	sts	0x40D2, r1	; 0x8040d2 <_ZZ10linkbus_RxhE4buff+0x1>
		}

		if(++charIndex >= LINKBUS_MAX_MSG_LENGTH)
     89c:	80 91 d0 40 	lds	r24, 0x40D0	; 0x8040d0 <_ZZ10linkbus_RxhE9charIndex>
     8a0:	8f 5f       	subi	r24, 0xFF	; 255
     8a2:	80 93 d0 40 	sts	0x40D0, r24	; 0x8040d0 <_ZZ10linkbus_RxhE9charIndex>
     8a6:	82 33       	cpi	r24, 0x32	; 50
     8a8:	20 f0       	brcs	.+8      	; 0x8b2 <_Z10linkbus_Rxh+0x1f6>
		{
			receiving_msg = FALSE;
     8aa:	10 92 ca 40 	sts	0x40CA, r1	; 0x8040ca <_ZZ10linkbus_RxhE13receiving_msg>
			charIndex = 0;
     8ae:	10 92 d0 40 	sts	0x40D0, r1	; 0x8040d0 <_ZZ10linkbus_RxhE9charIndex>
		}
	}
}
     8b2:	df 91       	pop	r29
     8b4:	cf 91       	pop	r28
     8b6:	1f 91       	pop	r17
     8b8:	0f 91       	pop	r16
     8ba:	08 95       	ret

000008bc <__vector_31>:

/**

*/
ISR(USART1_RXC_vect)
{
     8bc:	1f 92       	push	r1
     8be:	0f 92       	push	r0
     8c0:	0f b6       	in	r0, 0x3f	; 63
     8c2:	0f 92       	push	r0
     8c4:	11 24       	eor	r1, r1
     8c6:	0b b6       	in	r0, 0x3b	; 59
     8c8:	0f 92       	push	r0
     8ca:	2f 93       	push	r18
     8cc:	3f 93       	push	r19
     8ce:	4f 93       	push	r20
     8d0:	5f 93       	push	r21
     8d2:	6f 93       	push	r22
     8d4:	7f 93       	push	r23
     8d6:	8f 93       	push	r24
     8d8:	9f 93       	push	r25
     8da:	af 93       	push	r26
     8dc:	bf 93       	push	r27
     8de:	ef 93       	push	r30
     8e0:	ff 93       	push	r31
	uint8_t rx_char = USART1_get_data();	
     8e2:	0e 94 b9 21 	call	0x4372	; 0x4372 <USART1_get_data>
	linkbus_Rx(rx_char);
     8e6:	0e 94 5e 03 	call	0x6bc	; 0x6bc <_Z10linkbus_Rxh>
}
     8ea:	ff 91       	pop	r31
     8ec:	ef 91       	pop	r30
     8ee:	bf 91       	pop	r27
     8f0:	af 91       	pop	r26
     8f2:	9f 91       	pop	r25
     8f4:	8f 91       	pop	r24
     8f6:	7f 91       	pop	r23
     8f8:	6f 91       	pop	r22
     8fa:	5f 91       	pop	r21
     8fc:	4f 91       	pop	r20
     8fe:	3f 91       	pop	r19
     900:	2f 91       	pop	r18
     902:	0f 90       	pop	r0
     904:	0b be       	out	0x3b, r0	; 59
     906:	0f 90       	pop	r0
     908:	0f be       	out	0x3f, r0	; 63
     90a:	0f 90       	pop	r0
     90c:	1f 90       	pop	r1
     90e:	18 95       	reti

00000910 <__vector_32>:

/**

*/
ISR(USART1_DRE_vect)
{
     910:	1f 92       	push	r1
     912:	0f 92       	push	r0
     914:	0f b6       	in	r0, 0x3f	; 63
     916:	0f 92       	push	r0
     918:	11 24       	eor	r1, r1
     91a:	0b b6       	in	r0, 0x3b	; 59
     91c:	0f 92       	push	r0
     91e:	2f 93       	push	r18
     920:	3f 93       	push	r19
     922:	4f 93       	push	r20
     924:	5f 93       	push	r21
     926:	6f 93       	push	r22
     928:	7f 93       	push	r23
     92a:	8f 93       	push	r24
     92c:	9f 93       	push	r25
     92e:	af 93       	push	r26
     930:	bf 93       	push	r27
     932:	ef 93       	push	r30
     934:	ff 93       	push	r31
	static LinkbusTxBuffer* buff = 0;
	static uint8_t charIndex = 0;

	if(!buff)
     936:	80 91 c7 40 	lds	r24, 0x40C7	; 0x8040c7 <_ZZ11__vector_32E4buff>
     93a:	90 91 c8 40 	lds	r25, 0x40C8	; 0x8040c8 <_ZZ11__vector_32E4buff+0x1>
     93e:	89 2b       	or	r24, r25
     940:	31 f4       	brne	.+12     	; 0x94e <__vector_32+0x3e>
	{
		buff = nextFullLBTxBuffer();
     942:	0e 94 b4 13 	call	0x2768	; 0x2768 <_Z18nextFullLBTxBufferv>
     946:	80 93 c7 40 	sts	0x40C7, r24	; 0x8040c7 <_ZZ11__vector_32E4buff>
     94a:	90 93 c8 40 	sts	0x40C8, r25	; 0x8040c8 <_ZZ11__vector_32E4buff+0x1>
	}

	if((*buff)[charIndex])
     94e:	e0 91 c7 40 	lds	r30, 0x40C7	; 0x8040c7 <_ZZ11__vector_32E4buff>
     952:	f0 91 c8 40 	lds	r31, 0x40C8	; 0x8040c8 <_ZZ11__vector_32E4buff+0x1>
     956:	80 91 c6 40 	lds	r24, 0x40C6	; 0x8040c6 <__data_end>
     95a:	df 01       	movw	r26, r30
     95c:	a8 0f       	add	r26, r24
     95e:	b1 1d       	adc	r27, r1
     960:	9c 91       	ld	r25, X
     962:	99 23       	and	r25, r25
     964:	31 f0       	breq	.+12     	; 0x972 <__vector_32+0x62>
	{
		/* Put data into buffer, sends the data */
		USART1.TXDATAL = (*buff)[charIndex++];
     966:	8f 5f       	subi	r24, 0xFF	; 255
     968:	80 93 c6 40 	sts	0x40C6, r24	; 0x8040c6 <__data_end>
     96c:	90 93 22 08 	sts	0x0822, r25	; 0x800822 <__TEXT_REGION_LENGTH__+0x7e0822>
     970:	0d c0       	rjmp	.+26     	; 0x98c <__vector_32+0x7c>
	}
	else
	{
		charIndex = 0;
     972:	10 92 c6 40 	sts	0x40C6, r1	; 0x8040c6 <__data_end>
		(*buff)[0] = '\0';
     976:	10 82       	st	Z, r1
		buff = nextFullLBTxBuffer();
     978:	0e 94 b4 13 	call	0x2768	; 0x2768 <_Z18nextFullLBTxBufferv>
     97c:	80 93 c7 40 	sts	0x40C7, r24	; 0x8040c7 <_ZZ11__vector_32E4buff>
     980:	90 93 c8 40 	sts	0x40C8, r25	; 0x8040c8 <_ZZ11__vector_32E4buff+0x1>
		if(!buff)
     984:	89 2b       	or	r24, r25
     986:	11 f4       	brne	.+4      	; 0x98c <__vector_32+0x7c>
		{
			linkbus_end_tx();
     988:	0e 94 79 14 	call	0x28f2	; 0x28f2 <_Z14linkbus_end_txv>
		}
	}
}
     98c:	ff 91       	pop	r31
     98e:	ef 91       	pop	r30
     990:	bf 91       	pop	r27
     992:	af 91       	pop	r26
     994:	9f 91       	pop	r25
     996:	8f 91       	pop	r24
     998:	7f 91       	pop	r23
     99a:	6f 91       	pop	r22
     99c:	5f 91       	pop	r21
     99e:	4f 91       	pop	r20
     9a0:	3f 91       	pop	r19
     9a2:	2f 91       	pop	r18
     9a4:	0f 90       	pop	r0
     9a6:	0b be       	out	0x3b, r0	; 59
     9a8:	0f 90       	pop	r0
     9aa:	0f be       	out	0x3f, r0	; 63
     9ac:	0f 90       	pop	r0
     9ae:	1f 90       	pop	r1
     9b0:	18 95       	reti

000009b2 <__vector_41>:
}

EC activateEventUsingCurrentSettings(SC* statusCode)
{
	return ERROR_CODE_NO_ERROR;
}
     9b2:	1f 92       	push	r1
     9b4:	0f 92       	push	r0
     9b6:	0f b6       	in	r0, 0x3f	; 63
     9b8:	0f 92       	push	r0
     9ba:	11 24       	eor	r1, r1
     9bc:	2f 93       	push	r18
     9be:	3f 93       	push	r19
     9c0:	8f 93       	push	r24
     9c2:	9f 93       	push	r25
     9c4:	80 91 36 0b 	lds	r24, 0x0B36	; 0x800b36 <__TEXT_REGION_LENGTH__+0x7e0b36>
     9c8:	80 ff       	sbrs	r24, 0
     9ca:	18 c0       	rjmp	.+48     	; 0x9fc <__vector_41+0x4a>
     9cc:	80 91 7f 41 	lds	r24, 0x417F	; 0x80417f <_ZZ11__vector_41E3cnt>
     9d0:	90 91 80 41 	lds	r25, 0x4180	; 0x804180 <_ZZ11__vector_41E3cnt+0x1>
     9d4:	9c 01       	movw	r18, r24
     9d6:	2f 5f       	subi	r18, 0xFF	; 255
     9d8:	3f 4f       	sbci	r19, 0xFF	; 255
     9da:	20 93 7f 41 	sts	0x417F, r18	; 0x80417f <_ZZ11__vector_41E3cnt>
     9de:	30 93 80 41 	sts	0x4180, r19	; 0x804180 <_ZZ11__vector_41E3cnt+0x1>
     9e2:	8b 32       	cpi	r24, 0x2B	; 43
     9e4:	91 40       	sbci	r25, 0x01	; 1
     9e6:	39 f4       	brne	.+14     	; 0x9f6 <__vector_41+0x44>
     9e8:	10 92 7f 41 	sts	0x417F, r1	; 0x80417f <_ZZ11__vector_41E3cnt>
     9ec:	10 92 80 41 	sts	0x4180, r1	; 0x804180 <_ZZ11__vector_41E3cnt+0x1>
     9f0:	8a b1       	in	r24, 0x0a	; 10
     9f2:	80 64       	ori	r24, 0x40	; 64
     9f4:	8a b9       	out	0x0a, r24	; 10
     9f6:	81 e0       	ldi	r24, 0x01	; 1
     9f8:	80 93 36 0b 	sts	0x0B36, r24	; 0x800b36 <__TEXT_REGION_LENGTH__+0x7e0b36>
     9fc:	9f 91       	pop	r25
     9fe:	8f 91       	pop	r24
     a00:	3f 91       	pop	r19
     a02:	2f 91       	pop	r18
     a04:	0f 90       	pop	r0
     a06:	0f be       	out	0x3f, r0	; 63
     a08:	0f 90       	pop	r0
     a0a:	1f 90       	pop	r1
     a0c:	18 95       	reti

00000a0e <__vector_12>:
     a0e:	1f 92       	push	r1
     a10:	0f 92       	push	r0
     a12:	0f b6       	in	r0, 0x3f	; 63
     a14:	0f 92       	push	r0
     a16:	11 24       	eor	r1, r1
     a18:	0b b6       	in	r0, 0x3b	; 59
     a1a:	0f 92       	push	r0
     a1c:	2f 93       	push	r18
     a1e:	3f 93       	push	r19
     a20:	4f 93       	push	r20
     a22:	5f 93       	push	r21
     a24:	6f 93       	push	r22
     a26:	7f 93       	push	r23
     a28:	8f 93       	push	r24
     a2a:	9f 93       	push	r25
     a2c:	af 93       	push	r26
     a2e:	bf 93       	push	r27
     a30:	ef 93       	push	r30
     a32:	ff 93       	push	r31
     a34:	cf 93       	push	r28
     a36:	df 93       	push	r29
     a38:	00 d0       	rcall	.+0      	; 0xa3a <__vector_12+0x2c>
     a3a:	1f 92       	push	r1
     a3c:	cd b7       	in	r28, 0x3d	; 61
     a3e:	de b7       	in	r29, 0x3e	; 62
     a40:	80 91 06 0b 	lds	r24, 0x0B06	; 0x800b06 <__TEXT_REGION_LENGTH__+0x7e0b06>
     a44:	80 ff       	sbrs	r24, 0
     a46:	38 c1       	rjmp	.+624    	; 0xcb8 <__vector_12+0x2aa>
     a48:	80 91 28 41 	lds	r24, 0x4128	; 0x804128 <_ZL21g_util_tick_countdown>
     a4c:	90 91 29 41 	lds	r25, 0x4129	; 0x804129 <_ZL21g_util_tick_countdown+0x1>
     a50:	89 2b       	or	r24, r25
     a52:	49 f0       	breq	.+18     	; 0xa66 <__vector_12+0x58>
     a54:	80 91 28 41 	lds	r24, 0x4128	; 0x804128 <_ZL21g_util_tick_countdown>
     a58:	90 91 29 41 	lds	r25, 0x4129	; 0x804129 <_ZL21g_util_tick_countdown+0x1>
     a5c:	01 97       	sbiw	r24, 0x01	; 1
     a5e:	80 93 28 41 	sts	0x4128, r24	; 0x804128 <_ZL21g_util_tick_countdown>
     a62:	90 93 29 41 	sts	0x4129, r25	; 0x804129 <_ZL21g_util_tick_countdown+0x1>
     a66:	80 91 6b 41 	lds	r24, 0x416B	; 0x80416b <g_event_enabled>
     a6a:	88 23       	and	r24, r24
     a6c:	29 f0       	breq	.+10     	; 0xa78 <__vector_12+0x6a>
     a6e:	80 91 6c 41 	lds	r24, 0x416C	; 0x80416c <g_event_commenced>
     a72:	81 11       	cpse	r24, r1
     a74:	03 c0       	rjmp	.+6      	; 0xa7c <__vector_12+0x6e>
     a76:	03 c0       	rjmp	.+6      	; 0xa7e <__vector_12+0x70>
     a78:	80 e0       	ldi	r24, 0x00	; 0
     a7a:	01 c0       	rjmp	.+2      	; 0xa7e <__vector_12+0x70>
     a7c:	81 e0       	ldi	r24, 0x01	; 1
     a7e:	88 23       	and	r24, r24
     a80:	09 f4       	brne	.+2      	; 0xa84 <__vector_12+0x76>
     a82:	81 c0       	rjmp	.+258    	; 0xb86 <__vector_12+0x178>
     a84:	80 91 2c 41 	lds	r24, 0x412C	; 0x80412c <_ZL12g_on_the_air>
     a88:	90 91 2d 41 	lds	r25, 0x412D	; 0x80412d <_ZL12g_on_the_air+0x1>
     a8c:	a0 91 2e 41 	lds	r26, 0x412E	; 0x80412e <_ZL12g_on_the_air+0x2>
     a90:	b0 91 2f 41 	lds	r27, 0x412F	; 0x80412f <_ZL12g_on_the_air+0x3>
     a94:	18 16       	cp	r1, r24
     a96:	19 06       	cpc	r1, r25
     a98:	1a 06       	cpc	r1, r26
     a9a:	1b 06       	cpc	r1, r27
     a9c:	0c f0       	brlt	.+2      	; 0xaa0 <__vector_12+0x92>
     a9e:	58 c0       	rjmp	.+176    	; 0xb50 <__vector_12+0x142>
     aa0:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <_ZZ11__vector_12E7codeInc>
     aa4:	90 91 82 41 	lds	r25, 0x4182	; 0x804182 <_ZZ11__vector_12E7codeInc+0x1>
     aa8:	00 97       	sbiw	r24, 0x00	; 0
     aaa:	09 f4       	brne	.+2      	; 0xaae <__vector_12+0xa0>
     aac:	44 c0       	rjmp	.+136    	; 0xb36 <__vector_12+0x128>
     aae:	01 97       	sbiw	r24, 0x01	; 1
     ab0:	80 93 81 41 	sts	0x4181, r24	; 0x804181 <_ZZ11__vector_12E7codeInc>
     ab4:	90 93 82 41 	sts	0x4182, r25	; 0x804182 <_ZZ11__vector_12E7codeInc+0x1>
     ab8:	89 2b       	or	r24, r25
     aba:	09 f0       	breq	.+2      	; 0xabe <__vector_12+0xb0>
     abc:	64 c0       	rjmp	.+200    	; 0xb86 <__vector_12+0x178>
     abe:	ae 01       	movw	r20, r28
     ac0:	4e 5f       	subi	r20, 0xFE	; 254
     ac2:	5f 4f       	sbci	r21, 0xFF	; 255
     ac4:	be 01       	movw	r22, r28
     ac6:	6d 5f       	subi	r22, 0xFD	; 253
     ac8:	7f 4f       	sbci	r23, 0xFF	; 255
     aca:	80 e0       	ldi	r24, 0x00	; 0
     acc:	90 e0       	ldi	r25, 0x00	; 0
     ace:	0e 94 95 16 	call	0x2d2a	; 0x2d2a <_Z9makeMorsePcPhS0_>
     ad2:	80 93 83 41 	sts	0x4183, r24	; 0x804183 <_ZZ11__vector_12E3key>
     ad6:	8b 81       	ldd	r24, Y+3	; 0x03
     ad8:	81 11       	cpse	r24, r1
     ada:	25 c0       	rjmp	.+74     	; 0xb26 <__vector_12+0x118>
     adc:	8a 81       	ldd	r24, Y+2	; 0x02
     ade:	88 23       	and	r24, r24
     ae0:	11 f1       	breq	.+68     	; 0xb26 <__vector_12+0x118>
     ae2:	8d ef       	ldi	r24, 0xFD	; 253
     ae4:	80 93 27 41 	sts	0x4127, r24	; 0x804127 <_ZL18g_last_status_code>
     ae8:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
     aec:	0e 94 3e 0d 	call	0x1a7c	; 0x1a7c <_Z13throttleValueh>
     af0:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
     af4:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
     af8:	81 e0       	ldi	r24, 0x01	; 1
     afa:	8b 83       	std	Y+3, r24	; 0x03
     afc:	40 e0       	ldi	r20, 0x00	; 0
     afe:	50 e0       	ldi	r21, 0x00	; 0
     b00:	be 01       	movw	r22, r28
     b02:	6d 5f       	subi	r22, 0xFD	; 253
     b04:	7f 4f       	sbci	r23, 0xFF	; 255
     b06:	85 e3       	ldi	r24, 0x35	; 53
     b08:	91 e4       	ldi	r25, 0x41	; 65
     b0a:	0e 94 95 16 	call	0x2d2a	; 0x2d2a <_Z9makeMorsePcPhS0_>
     b0e:	ae 01       	movw	r20, r28
     b10:	4e 5f       	subi	r20, 0xFE	; 254
     b12:	5f 4f       	sbci	r21, 0xFF	; 255
     b14:	be 01       	movw	r22, r28
     b16:	6d 5f       	subi	r22, 0xFD	; 253
     b18:	7f 4f       	sbci	r23, 0xFF	; 255
     b1a:	80 e0       	ldi	r24, 0x00	; 0
     b1c:	90 e0       	ldi	r25, 0x00	; 0
     b1e:	0e 94 95 16 	call	0x2d2a	; 0x2d2a <_Z9makeMorsePcPhS0_>
     b22:	80 93 83 41 	sts	0x4183, r24	; 0x804183 <_ZZ11__vector_12E3key>
     b26:	80 91 83 41 	lds	r24, 0x4183	; 0x804183 <_ZZ11__vector_12E3key>
     b2a:	88 23       	and	r24, r24
     b2c:	61 f1       	breq	.+88     	; 0xb86 <__vector_12+0x178>
     b2e:	81 e0       	ldi	r24, 0x01	; 1
     b30:	0e 94 bb 1f 	call	0x3f76	; 0x3f76 <_Z18powerToTransmitterh>
     b34:	28 c0       	rjmp	.+80     	; 0xb86 <__vector_12+0x178>
     b36:	80 91 83 41 	lds	r24, 0x4183	; 0x804183 <_ZZ11__vector_12E3key>
     b3a:	0e 94 bd 1f 	call	0x3f7a	; 0x3f7a <_Z14keyTransmitterh>
     b3e:	80 91 07 40 	lds	r24, 0x4007	; 0x804007 <_ZL15g_code_throttle>
     b42:	90 91 08 40 	lds	r25, 0x4008	; 0x804008 <_ZL15g_code_throttle+0x1>
     b46:	80 93 81 41 	sts	0x4181, r24	; 0x804181 <_ZZ11__vector_12E7codeInc>
     b4a:	90 93 82 41 	sts	0x4182, r25	; 0x804182 <_ZZ11__vector_12E7codeInc+0x1>
     b4e:	1b c0       	rjmp	.+54     	; 0xb86 <__vector_12+0x178>
     b50:	80 91 2c 41 	lds	r24, 0x412C	; 0x80412c <_ZL12g_on_the_air>
     b54:	90 91 2d 41 	lds	r25, 0x412D	; 0x80412d <_ZL12g_on_the_air+0x1>
     b58:	a0 91 2e 41 	lds	r26, 0x412E	; 0x80412e <_ZL12g_on_the_air+0x2>
     b5c:	b0 91 2f 41 	lds	r27, 0x412F	; 0x80412f <_ZL12g_on_the_air+0x3>
     b60:	89 2b       	or	r24, r25
     b62:	8a 2b       	or	r24, r26
     b64:	8b 2b       	or	r24, r27
     b66:	79 f4       	brne	.+30     	; 0xb86 <__vector_12+0x178>
     b68:	80 91 83 41 	lds	r24, 0x4183	; 0x804183 <_ZZ11__vector_12E3key>
     b6c:	88 23       	and	r24, r24
     b6e:	59 f0       	breq	.+22     	; 0xb86 <__vector_12+0x178>
     b70:	10 92 83 41 	sts	0x4183, r1	; 0x804183 <_ZZ11__vector_12E3key>
     b74:	80 e0       	ldi	r24, 0x00	; 0
     b76:	0e 94 bd 1f 	call	0x3f7a	; 0x3f7a <_Z14keyTransmitterh>
     b7a:	80 e0       	ldi	r24, 0x00	; 0
     b7c:	0e 94 bb 1f 	call	0x3f76	; 0x3f76 <_Z18powerToTransmitterh>
     b80:	8e ef       	ldi	r24, 0xFE	; 254
     b82:	80 93 27 41 	sts	0x4127, r24	; 0x804127 <_ZL18g_last_status_code>
     b86:	80 91 84 41 	lds	r24, 0x4184	; 0x804184 <_ZZ11__vector_12E19conversionInProcess>
     b8a:	81 11       	cpse	r24, r1
     b8c:	42 c0       	rjmp	.+132    	; 0xc12 <__vector_12+0x204>
     b8e:	8f ef       	ldi	r24, 0xFF	; 255
     b90:	80 93 85 41 	sts	0x4185, r24	; 0x804185 <_ZZ11__vector_12E24indexConversionInProcess>
     b94:	19 82       	std	Y+1, r1	; 0x01
     b96:	89 81       	ldd	r24, Y+1	; 0x01
     b98:	85 30       	cpi	r24, 0x05	; 5
     b9a:	30 f5       	brcc	.+76     	; 0xbe8 <__vector_12+0x1da>
     b9c:	e9 81       	ldd	r30, Y+1	; 0x01
     b9e:	f0 e0       	ldi	r31, 0x00	; 0
     ba0:	ee 0f       	add	r30, r30
     ba2:	ff 1f       	adc	r31, r31
     ba4:	eb 5e       	subi	r30, 0xEB	; 235
     ba6:	ff 4b       	sbci	r31, 0xBF	; 191
     ba8:	80 81       	ld	r24, Z
     baa:	91 81       	ldd	r25, Z+1	; 0x01
     bac:	89 2b       	or	r24, r25
     bae:	59 f0       	breq	.+22     	; 0xbc6 <__vector_12+0x1b8>
     bb0:	e9 81       	ldd	r30, Y+1	; 0x01
     bb2:	f0 e0       	ldi	r31, 0x00	; 0
     bb4:	ee 0f       	add	r30, r30
     bb6:	ff 1f       	adc	r31, r31
     bb8:	eb 5e       	subi	r30, 0xEB	; 235
     bba:	ff 4b       	sbci	r31, 0xBF	; 191
     bbc:	80 81       	ld	r24, Z
     bbe:	91 81       	ldd	r25, Z+1	; 0x01
     bc0:	01 97       	sbiw	r24, 0x01	; 1
     bc2:	80 83       	st	Z, r24
     bc4:	91 83       	std	Z+1, r25	; 0x01
     bc6:	e9 81       	ldd	r30, Y+1	; 0x01
     bc8:	f0 e0       	ldi	r31, 0x00	; 0
     bca:	ee 0f       	add	r30, r30
     bcc:	ff 1f       	adc	r31, r31
     bce:	eb 5e       	subi	r30, 0xEB	; 235
     bd0:	ff 4b       	sbci	r31, 0xBF	; 191
     bd2:	80 81       	ld	r24, Z
     bd4:	91 81       	ldd	r25, Z+1	; 0x01
     bd6:	89 2b       	or	r24, r25
     bd8:	19 f4       	brne	.+6      	; 0xbe0 <__vector_12+0x1d2>
     bda:	89 81       	ldd	r24, Y+1	; 0x01
     bdc:	80 93 85 41 	sts	0x4185, r24	; 0x804185 <_ZZ11__vector_12E24indexConversionInProcess>
     be0:	89 81       	ldd	r24, Y+1	; 0x01
     be2:	8f 5f       	subi	r24, 0xFF	; 255
     be4:	89 83       	std	Y+1, r24	; 0x01
     be6:	d7 cf       	rjmp	.-82     	; 0xb96 <__vector_12+0x188>
     be8:	80 91 85 41 	lds	r24, 0x4185	; 0x804185 <_ZZ11__vector_12E24indexConversionInProcess>
     bec:	88 23       	and	r24, r24
     bee:	0c f4       	brge	.+2      	; 0xbf2 <__vector_12+0x1e4>
     bf0:	60 c0       	rjmp	.+192    	; 0xcb2 <__vector_12+0x2a4>
     bf2:	88 0f       	add	r24, r24
     bf4:	99 0b       	sbc	r25, r25
     bf6:	fc 01       	movw	r30, r24
     bf8:	ea 56       	subi	r30, 0x6A	; 106
     bfa:	ff 4b       	sbci	r31, 0xBF	; 191
     bfc:	20 81       	ld	r18, Z
     bfe:	31 81       	ldd	r19, Z+1	; 0x01
     c00:	fc 01       	movw	r30, r24
     c02:	eb 5e       	subi	r30, 0xEB	; 235
     c04:	ff 4b       	sbci	r31, 0xBF	; 191
     c06:	20 83       	st	Z, r18
     c08:	31 83       	std	Z+1, r19	; 0x01
     c0a:	81 e0       	ldi	r24, 0x01	; 1
     c0c:	80 93 84 41 	sts	0x4184, r24	; 0x804184 <_ZZ11__vector_12E19conversionInProcess>
     c10:	50 c0       	rjmp	.+160    	; 0xcb2 <__vector_12+0x2a4>
     c12:	10 92 86 41 	sts	0x4186, r1	; 0x804186 <_ZZ11__vector_12E20holdConversionResult>
     c16:	10 92 87 41 	sts	0x4187, r1	; 0x804187 <_ZZ11__vector_12E20holdConversionResult+0x1>
     c1a:	40 91 85 41 	lds	r20, 0x4185	; 0x804185 <_ZZ11__vector_12E24indexConversionInProcess>
     c1e:	84 2f       	mov	r24, r20
     c20:	04 2e       	mov	r0, r20
     c22:	00 0c       	add	r0, r0
     c24:	99 0b       	sbc	r25, r25
     c26:	fc 01       	movw	r30, r24
     c28:	ee 0f       	add	r30, r30
     c2a:	ff 1f       	adc	r31, r31
     c2c:	eb 58       	subi	r30, 0x8B	; 139
     c2e:	fe 4b       	sbci	r31, 0xBE	; 190
     c30:	20 81       	ld	r18, Z
     c32:	31 81       	ldd	r19, Z+1	; 0x01
     c34:	fc 01       	movw	r30, r24
     c36:	e0 59       	subi	r30, 0x90	; 144
     c38:	fe 4b       	sbci	r31, 0xBE	; 190
     c3a:	51 e0       	ldi	r21, 0x01	; 1
     c3c:	50 83       	st	Z, r21
     c3e:	41 11       	cpse	r20, r1
     c40:	2d c0       	rjmp	.+90     	; 0xc9c <__vector_12+0x28e>
     c42:	fc 01       	movw	r30, r24
     c44:	ee 0f       	add	r30, r30
     c46:	ff 1f       	adc	r31, r31
     c48:	e0 56       	subi	r30, 0x60	; 96
     c4a:	ff 4b       	sbci	r31, 0xBF	; 191
     c4c:	40 81       	ld	r20, Z
     c4e:	51 81       	ldd	r21, Z+1	; 0x01
     c50:	42 17       	cp	r20, r18
     c52:	53 07       	cpc	r21, r19
     c54:	60 f4       	brcc	.+24     	; 0xc6e <__vector_12+0x260>
     c56:	fc 01       	movw	r30, r24
     c58:	ee 0f       	add	r30, r30
     c5a:	ff 1f       	adc	r31, r31
     c5c:	eb 5e       	subi	r30, 0xEB	; 235
     c5e:	ff 4b       	sbci	r31, 0xBF	; 191
     c60:	24 e6       	ldi	r18, 0x64	; 100
     c62:	30 e0       	ldi	r19, 0x00	; 0
     c64:	20 83       	st	Z, r18
     c66:	31 83       	std	Z+1, r19	; 0x01
     c68:	20 e0       	ldi	r18, 0x00	; 0
     c6a:	30 e0       	ldi	r19, 0x00	; 0
     c6c:	19 c0       	rjmp	.+50     	; 0xca0 <__vector_12+0x292>
     c6e:	21 15       	cp	r18, r1
     c70:	31 05       	cpc	r19, r1
     c72:	11 f0       	breq	.+4      	; 0xc78 <__vector_12+0x26a>
     c74:	21 50       	subi	r18, 0x01	; 1
     c76:	31 09       	sbc	r19, r1
     c78:	41 e0       	ldi	r20, 0x01	; 1
     c7a:	40 93 2a 41 	sts	0x412A, r20	; 0x80412a <_ZL29g_battery_measurements_active>
     c7e:	24 37       	cpi	r18, 0x74	; 116
     c80:	44 e0       	ldi	r20, 0x04	; 4
     c82:	34 07       	cpc	r19, r20
     c84:	18 f0       	brcs	.+6      	; 0xc8c <__vector_12+0x27e>
     c86:	10 92 06 40 	sts	0x4006, r1	; 0x804006 <g_battery_type>
     c8a:	0a c0       	rjmp	.+20     	; 0xca0 <__vector_12+0x292>
     c8c:	2d 38       	cpi	r18, 0x8D	; 141
     c8e:	42 e0       	ldi	r20, 0x02	; 2
     c90:	34 07       	cpc	r19, r20
     c92:	30 f0       	brcs	.+12     	; 0xca0 <__vector_12+0x292>
     c94:	41 e0       	ldi	r20, 0x01	; 1
     c96:	40 93 06 40 	sts	0x4006, r20	; 0x804006 <g_battery_type>
     c9a:	02 c0       	rjmp	.+4      	; 0xca0 <__vector_12+0x292>
     c9c:	20 e0       	ldi	r18, 0x00	; 0
     c9e:	30 e0       	ldi	r19, 0x00	; 0
     ca0:	88 0f       	add	r24, r24
     ca2:	99 1f       	adc	r25, r25
     ca4:	fc 01       	movw	r30, r24
     ca6:	eb 58       	subi	r30, 0x8B	; 139
     ca8:	fe 4b       	sbci	r31, 0xBE	; 190
     caa:	20 83       	st	Z, r18
     cac:	31 83       	std	Z+1, r19	; 0x01
     cae:	10 92 84 41 	sts	0x4184, r1	; 0x804184 <_ZZ11__vector_12E19conversionInProcess>
     cb2:	81 e0       	ldi	r24, 0x01	; 1
     cb4:	80 93 06 0b 	sts	0x0B06, r24	; 0x800b06 <__TEXT_REGION_LENGTH__+0x7e0b06>
     cb8:	23 96       	adiw	r28, 0x03	; 3
     cba:	cd bf       	out	0x3d, r28	; 61
     cbc:	de bf       	out	0x3e, r29	; 62
     cbe:	df 91       	pop	r29
     cc0:	cf 91       	pop	r28
     cc2:	ff 91       	pop	r31
     cc4:	ef 91       	pop	r30
     cc6:	bf 91       	pop	r27
     cc8:	af 91       	pop	r26
     cca:	9f 91       	pop	r25
     ccc:	8f 91       	pop	r24
     cce:	7f 91       	pop	r23
     cd0:	6f 91       	pop	r22
     cd2:	5f 91       	pop	r21
     cd4:	4f 91       	pop	r20
     cd6:	3f 91       	pop	r19
     cd8:	2f 91       	pop	r18
     cda:	0f 90       	pop	r0
     cdc:	0b be       	out	0x3b, r0	; 59
     cde:	0f 90       	pop	r0
     ce0:	0f be       	out	0x3f, r0	; 63
     ce2:	0f 90       	pop	r0
     ce4:	1f 90       	pop	r1
     ce6:	18 95       	reti

00000ce8 <main>:
     ce8:	0e 94 3f 01 	call	0x27e	; 0x27e <atmel_start_init>
     cec:	82 e3       	ldi	r24, 0x32	; 50
     cee:	90 e4       	ldi	r25, 0x40	; 64
     cf0:	0e 94 e9 14 	call	0x29d2	; 0x29d2 <_Z12lb_send_textPc>
     cf4:	81 e0       	ldi	r24, 0x01	; 1
     cf6:	0e 94 bf 0d 	call	0x1b7e	; 0x1b7e <_Z18ADC0_setADCChannel20ADC_Active_Channel_t>
     cfa:	68 ee       	ldi	r22, 0xE8	; 232
     cfc:	73 e0       	ldi	r23, 0x03	; 3
     cfe:	80 e0       	ldi	r24, 0x00	; 0
     d00:	90 e0       	ldi	r25, 0x00	; 0
     d02:	0e 94 be 1e 	call	0x3d7c	; 0x3d7c <util_delay_ms>
     d06:	88 23       	and	r24, r24
     d08:	c1 f3       	breq	.-16     	; 0xcfa <main+0x12>
     d0a:	0e 94 88 06 	call	0xd10	; 0xd10 <_Z17handleLinkBusMsgsv>
     d0e:	f5 cf       	rjmp	.-22     	; 0xcfa <main+0x12>

00000d10 <_Z17handleLinkBusMsgsv>:
     d10:	ef 92       	push	r14
     d12:	ff 92       	push	r15
     d14:	0f 93       	push	r16
     d16:	1f 93       	push	r17
     d18:	cf 93       	push	r28
     d1a:	df 93       	push	r29
     d1c:	cd b7       	in	r28, 0x3d	; 61
     d1e:	de b7       	in	r29, 0x3e	; 62
     d20:	e5 97       	sbiw	r28, 0x35	; 53
     d22:	cd bf       	out	0x3d, r28	; 61
     d24:	de bf       	out	0x3e, r29	; 62
     d26:	81 e0       	ldi	r24, 0x01	; 1
     d28:	89 83       	std	Y+1, r24	; 0x01
     d2a:	0e 94 39 14 	call	0x2872	; 0x2872 <_Z18nextFullLBRxBufferv>
     d2e:	8c 87       	std	Y+12, r24	; 0x0c
     d30:	9d 87       	std	Y+13, r25	; 0x0d
     d32:	21 e0       	ldi	r18, 0x01	; 1
     d34:	8c 85       	ldd	r24, Y+12	; 0x0c
     d36:	9d 85       	ldd	r25, Y+13	; 0x0d
     d38:	89 2b       	or	r24, r25
     d3a:	09 f4       	brne	.+2      	; 0xd3e <_Z17handleLinkBusMsgsv+0x2e>
     d3c:	20 e0       	ldi	r18, 0x00	; 0
     d3e:	22 23       	and	r18, r18
     d40:	09 f4       	brne	.+2      	; 0xd44 <_Z17handleLinkBusMsgsv+0x34>
     d42:	91 c6       	rjmp	.+3362   	; 0x1a66 <_Z17handleLinkBusMsgsv+0xd56>
     d44:	8c 85       	ldd	r24, Y+12	; 0x0c
     d46:	9d 85       	ldd	r25, Y+13	; 0x0d
     d48:	fc 01       	movw	r30, r24
     d4a:	81 81       	ldd	r24, Z+1	; 0x01
     d4c:	92 81       	ldd	r25, Z+2	; 0x02
     d4e:	8e 87       	std	Y+14, r24	; 0x0e
     d50:	9f 87       	std	Y+15, r25	; 0x0f
     d52:	8e 85       	ldd	r24, Y+14	; 0x0e
     d54:	9f 85       	ldd	r25, Y+15	; 0x0f
     d56:	82 38       	cpi	r24, 0x82	; 130
     d58:	fe e1       	ldi	r31, 0x1E	; 30
     d5a:	9f 07       	cpc	r25, r31
     d5c:	09 f4       	brne	.+2      	; 0xd60 <_Z17handleLinkBusMsgsv+0x50>
     d5e:	6c c0       	rjmp	.+216    	; 0xe38 <_Z17handleLinkBusMsgsv+0x128>
     d60:	83 38       	cpi	r24, 0x83	; 131
     d62:	2e e1       	ldi	r18, 0x1E	; 30
     d64:	92 07       	cpc	r25, r18
     d66:	30 f5       	brcc	.+76     	; 0xdb4 <_Z17handleLinkBusMsgsv+0xa4>
     d68:	81 36       	cpi	r24, 0x61	; 97
     d6a:	33 e0       	ldi	r19, 0x03	; 3
     d6c:	93 07       	cpc	r25, r19
     d6e:	09 f4       	brne	.+2      	; 0xd72 <_Z17handleLinkBusMsgsv+0x62>
     d70:	e0 c4       	rjmp	.+2496   	; 0x1732 <_Z17handleLinkBusMsgsv+0xa22>
     d72:	82 36       	cpi	r24, 0x62	; 98
     d74:	e3 e0       	ldi	r30, 0x03	; 3
     d76:	9e 07       	cpc	r25, r30
     d78:	78 f4       	brcc	.+30     	; 0xd98 <_Z17handleLinkBusMsgsv+0x88>
     d7a:	85 31       	cpi	r24, 0x15	; 21
     d7c:	f3 e0       	ldi	r31, 0x03	; 3
     d7e:	9f 07       	cpc	r25, r31
     d80:	09 f4       	brne	.+2      	; 0xd84 <_Z17handleLinkBusMsgsv+0x74>
     d82:	1b c1       	rjmp	.+566    	; 0xfba <_Z17handleLinkBusMsgsv+0x2aa>
     d84:	8e 31       	cpi	r24, 0x1E	; 30
     d86:	23 e0       	ldi	r18, 0x03	; 3
     d88:	92 07       	cpc	r25, r18
     d8a:	09 f4       	brne	.+2      	; 0xd8e <_Z17handleLinkBusMsgsv+0x7e>
     d8c:	3c c3       	rjmp	.+1656   	; 0x1406 <_Z17handleLinkBusMsgsv+0x6f6>
     d8e:	84 35       	cpi	r24, 0x54	; 84
     d90:	91 05       	cpc	r25, r1
     d92:	09 f4       	brne	.+2      	; 0xd96 <_Z17handleLinkBusMsgsv+0x86>
     d94:	43 c4       	rjmp	.+2182   	; 0x161c <_Z17handleLinkBusMsgsv+0x90c>
     d96:	3c c6       	rjmp	.+3192   	; 0x1a10 <_Z17handleLinkBusMsgsv+0xd00>
     d98:	8f 3a       	cpi	r24, 0xAF	; 175
     d9a:	33 e0       	ldi	r19, 0x03	; 3
     d9c:	93 07       	cpc	r25, r19
     d9e:	c9 f1       	breq	.+114    	; 0xe12 <_Z17handleLinkBusMsgsv+0x102>
     da0:	86 3a       	cpi	r24, 0xA6	; 166
     da2:	ec e1       	ldi	r30, 0x1C	; 28
     da4:	9e 07       	cpc	r25, r30
     da6:	09 f4       	brne	.+2      	; 0xdaa <_Z17handleLinkBusMsgsv+0x9a>
     da8:	51 c5       	rjmp	.+2722   	; 0x184c <_Z17handleLinkBusMsgsv+0xb3c>
     daa:	84 38       	cpi	r24, 0x84	; 132
     dac:	93 40       	sbci	r25, 0x03	; 3
     dae:	09 f4       	brne	.+2      	; 0xdb2 <_Z17handleLinkBusMsgsv+0xa2>
     db0:	c3 c1       	rjmp	.+902    	; 0x1138 <_Z17handleLinkBusMsgsv+0x428>
     db2:	2e c6       	rjmp	.+3164   	; 0x1a10 <_Z17handleLinkBusMsgsv+0xd00>
     db4:	8a 39       	cpi	r24, 0x9A	; 154
     db6:	23 e2       	ldi	r18, 0x23	; 35
     db8:	92 07       	cpc	r25, r18
     dba:	e9 f1       	breq	.+122    	; 0xe36 <_Z17handleLinkBusMsgsv+0x126>
     dbc:	8b 39       	cpi	r24, 0x9B	; 155
     dbe:	33 e2       	ldi	r19, 0x23	; 35
     dc0:	93 07       	cpc	r25, r19
     dc2:	78 f4       	brcc	.+30     	; 0xde2 <_Z17handleLinkBusMsgsv+0xd2>
     dc4:	8d 3a       	cpi	r24, 0xAD	; 173
     dc6:	e2 e2       	ldi	r30, 0x22	; 34
     dc8:	9e 07       	cpc	r25, r30
     dca:	09 f4       	brne	.+2      	; 0xdce <_Z17handleLinkBusMsgsv+0xbe>
     dcc:	96 c0       	rjmp	.+300    	; 0xefa <_Z17handleLinkBusMsgsv+0x1ea>
     dce:	81 3c       	cpi	r24, 0xC1	; 193
     dd0:	f2 e2       	ldi	r31, 0x22	; 34
     dd2:	9f 07       	cpc	r25, r31
     dd4:	09 f4       	brne	.+2      	; 0xdd8 <_Z17handleLinkBusMsgsv+0xc8>
     dd6:	ee c0       	rjmp	.+476    	; 0xfb4 <_Z17handleLinkBusMsgsv+0x2a4>
     dd8:	81 3d       	cpi	r24, 0xD1	; 209
     dda:	9e 41       	sbci	r25, 0x1E	; 30
     ddc:	09 f4       	brne	.+2      	; 0xde0 <_Z17handleLinkBusMsgsv+0xd0>
     dde:	c0 c4       	rjmp	.+2432   	; 0x1760 <_Z17handleLinkBusMsgsv+0xa50>
     de0:	17 c6       	rjmp	.+3118   	; 0x1a10 <_Z17handleLinkBusMsgsv+0xd00>
     de2:	80 3d       	cpi	r24, 0xD0	; 208
     de4:	33 e2       	ldi	r19, 0x23	; 35
     de6:	93 07       	cpc	r25, r19
     de8:	09 f4       	brne	.+2      	; 0xdec <_Z17handleLinkBusMsgsv+0xdc>
     dea:	70 c3       	rjmp	.+1760   	; 0x14cc <_Z17handleLinkBusMsgsv+0x7bc>
     dec:	81 3d       	cpi	r24, 0xD1	; 209
     dee:	e3 e2       	ldi	r30, 0x23	; 35
     df0:	9e 07       	cpc	r25, r30
     df2:	28 f4       	brcc	.+10     	; 0xdfe <_Z17handleLinkBusMsgsv+0xee>
     df4:	8f 3c       	cpi	r24, 0xCF	; 207
     df6:	93 42       	sbci	r25, 0x23	; 35
     df8:	09 f4       	brne	.+2      	; 0xdfc <_Z17handleLinkBusMsgsv+0xec>
     dfa:	f0 c5       	rjmp	.+3040   	; 0x19dc <_Z17handleLinkBusMsgsv+0xccc>
     dfc:	09 c6       	rjmp	.+3090   	; 0x1a10 <_Z17handleLinkBusMsgsv+0xd00>
     dfe:	87 3f       	cpi	r24, 0xF7	; 247
     e00:	23 e2       	ldi	r18, 0x23	; 35
     e02:	92 07       	cpc	r25, r18
     e04:	09 f4       	brne	.+2      	; 0xe08 <_Z17handleLinkBusMsgsv+0xf8>
     e06:	0d c2       	rjmp	.+1050   	; 0x1222 <_Z17handleLinkBusMsgsv+0x512>
     e08:	8c 39       	cpi	r24, 0x9C	; 156
     e0a:	94 42       	sbci	r25, 0x24	; 36
     e0c:	09 f4       	brne	.+2      	; 0xe10 <_Z17handleLinkBusMsgsv+0x100>
     e0e:	f8 c5       	rjmp	.+3056   	; 0x1a00 <_Z17handleLinkBusMsgsv+0xcf0>
     e10:	ff c5       	rjmp	.+3070   	; 0x1a10 <_Z17handleLinkBusMsgsv+0xd00>
     e12:	8c 85       	ldd	r24, Y+12	; 0x0c
     e14:	9d 85       	ldd	r25, Y+13	; 0x0d
     e16:	fc 01       	movw	r30, r24
     e18:	83 81       	ldd	r24, Z+3	; 0x03
     e1a:	88 23       	and	r24, r24
     e1c:	09 f4       	brne	.+2      	; 0xe20 <_Z17handleLinkBusMsgsv+0x110>
     e1e:	fe c5       	rjmp	.+3068   	; 0x1a1c <_Z17handleLinkBusMsgsv+0xd0c>
     e20:	8c 85       	ldd	r24, Y+12	; 0x0c
     e22:	9d 85       	ldd	r25, Y+13	; 0x0d
     e24:	03 96       	adiw	r24, 0x03	; 3
     e26:	0e 94 c6 25 	call	0x4b8c	; 0x4b8c <atoi>
     e2a:	88 8b       	std	Y+16, r24	; 0x10
     e2c:	0e 94 ce 14 	call	0x299c	; 0x299c <_Z15linkbus_disablev>
     e30:	10 92 09 40 	sts	0x4009, r1	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
     e34:	f3 c5       	rjmp	.+3046   	; 0x1a1c <_Z17handleLinkBusMsgsv+0xd0c>
     e36:	ff cf       	rjmp	.-2      	; 0xe36 <_Z17handleLinkBusMsgsv+0x126>
     e38:	8c 85       	ldd	r24, Y+12	; 0x0c
     e3a:	9d 85       	ldd	r25, Y+13	; 0x0d
     e3c:	fc 01       	movw	r30, r24
     e3e:	83 81       	ldd	r24, Z+3	; 0x03
     e40:	89 8b       	std	Y+17, r24	; 0x11
     e42:	81 e0       	ldi	r24, 0x01	; 1
     e44:	80 93 0a 40 	sts	0x400A, r24	; 0x80400a <_ZL13g_wifi_active>
     e48:	89 89       	ldd	r24, Y+17	; 0x11
     e4a:	8a 35       	cpi	r24, 0x5A	; 90
     e4c:	21 f4       	brne	.+8      	; 0xe56 <_Z17handleLinkBusMsgsv+0x146>
     e4e:	88 e7       	ldi	r24, 0x78	; 120
     e50:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
     e54:	e5 c5       	rjmp	.+3018   	; 0x1a20 <_Z17handleLinkBusMsgsv+0xd10>
     e56:	89 89       	ldd	r24, Y+17	; 0x11
     e58:	80 33       	cpi	r24, 0x30	; 48
     e5a:	d1 f5       	brne	.+116    	; 0xed0 <_Z17handleLinkBusMsgsv+0x1c0>
     e5c:	90 91 6e 41 	lds	r25, 0x416E	; 0x80416e <g_waiting_for_next_event>
     e60:	81 e0       	ldi	r24, 0x01	; 1
     e62:	99 23       	and	r25, r25
     e64:	09 f4       	brne	.+2      	; 0xe68 <_Z17handleLinkBusMsgsv+0x158>
     e66:	80 e0       	ldi	r24, 0x00	; 0
     e68:	88 23       	and	r24, r24
     e6a:	39 f0       	breq	.+14     	; 0xe7a <_Z17handleLinkBusMsgsv+0x16a>
     e6c:	4a e3       	ldi	r20, 0x3A	; 58
     e6e:	50 e4       	ldi	r21, 0x40	; 64
     e70:	6c e3       	ldi	r22, 0x3C	; 60
     e72:	70 e4       	ldi	r23, 0x40	; 64
     e74:	83 e0       	ldi	r24, 0x03	; 3
     e76:	0e 94 2a 15 	call	0x2a54	; 0x2a54 <_Z11lb_send_msg13LBMessageTypePKcPc>
     e7a:	80 e0       	ldi	r24, 0x00	; 0
     e7c:	90 e0       	ldi	r25, 0x00	; 0
     e7e:	0e 94 18 01 	call	0x230	; 0x230 <time>
     e82:	dc 01       	movw	r26, r24
     e84:	cb 01       	movw	r24, r22
     e86:	2b 2f       	mov	r18, r27
     e88:	2f 93       	push	r18
     e8a:	2a 2f       	mov	r18, r26
     e8c:	2f 93       	push	r18
     e8e:	29 2f       	mov	r18, r25
     e90:	2f 93       	push	r18
     e92:	8f 93       	push	r24
     e94:	80 e4       	ldi	r24, 0x40	; 64
     e96:	90 e4       	ldi	r25, 0x40	; 64
     e98:	89 2f       	mov	r24, r25
     e9a:	8f 93       	push	r24
     e9c:	80 e4       	ldi	r24, 0x40	; 64
     e9e:	90 e4       	ldi	r25, 0x40	; 64
     ea0:	8f 93       	push	r24
     ea2:	81 e1       	ldi	r24, 0x11	; 17
     ea4:	91 e4       	ldi	r25, 0x41	; 65
     ea6:	89 2f       	mov	r24, r25
     ea8:	8f 93       	push	r24
     eaa:	81 e1       	ldi	r24, 0x11	; 17
     eac:	91 e4       	ldi	r25, 0x41	; 65
     eae:	8f 93       	push	r24
     eb0:	0e 94 3f 26 	call	0x4c7e	; 0x4c7e <sprintf>
     eb4:	2d b7       	in	r18, 0x3d	; 61
     eb6:	3e b7       	in	r19, 0x3e	; 62
     eb8:	28 5f       	subi	r18, 0xF8	; 248
     eba:	3f 4f       	sbci	r19, 0xFF	; 255
     ebc:	cd bf       	out	0x3d, r28	; 61
     ebe:	de bf       	out	0x3e, r29	; 62
     ec0:	41 e1       	ldi	r20, 0x11	; 17
     ec2:	51 e4       	ldi	r21, 0x41	; 65
     ec4:	64 e4       	ldi	r22, 0x44	; 68
     ec6:	70 e4       	ldi	r23, 0x40	; 64
     ec8:	83 e0       	ldi	r24, 0x03	; 3
     eca:	0e 94 2a 15 	call	0x2a54	; 0x2a54 <_Z11lb_send_msg13LBMessageTypePKcPc>
     ece:	a8 c5       	rjmp	.+2896   	; 0x1a20 <_Z17handleLinkBusMsgsv+0xd10>
     ed0:	89 89       	ldd	r24, Y+17	; 0x11
     ed2:	83 33       	cpi	r24, 0x33	; 51
     ed4:	09 f0       	breq	.+2      	; 0xed8 <_Z17handleLinkBusMsgsv+0x1c8>
     ed6:	a4 c5       	rjmp	.+2888   	; 0x1a20 <_Z17handleLinkBusMsgsv+0xd10>
     ed8:	f8 94       	cli
     eda:	10 92 32 41 	sts	0x4132, r1	; 0x804132 <_ZL19g_wifi_enable_delay>
     ede:	81 e0       	ldi	r24, 0x01	; 1
     ee0:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
     ee4:	10 92 6e 41 	sts	0x416E, r1	; 0x80416e <g_waiting_for_next_event>
     ee8:	10 92 6d 41 	sts	0x416D, r1	; 0x80416d <g_check_for_next_event>
     eec:	10 92 0a 40 	sts	0x400A, r1	; 0x80400a <_ZL13g_wifi_active>
     ef0:	81 e0       	ldi	r24, 0x01	; 1
     ef2:	80 93 33 41 	sts	0x4133, r24	; 0x804133 <_ZL20g_shutting_down_wifi>
     ef6:	78 94       	sei
     ef8:	93 c5       	rjmp	.+2854   	; 0x1a20 <_Z17handleLinkBusMsgsv+0xd10>
     efa:	8c 85       	ldd	r24, Y+12	; 0x0c
     efc:	9d 85       	ldd	r25, Y+13	; 0x0d
     efe:	fc 01       	movw	r30, r24
     f00:	83 81       	ldd	r24, Z+3	; 0x03
     f02:	88 23       	and	r24, r24
     f04:	09 f4       	brne	.+2      	; 0xf08 <_Z17handleLinkBusMsgsv+0x1f8>
     f06:	8e c5       	rjmp	.+2844   	; 0x1a24 <_Z17handleLinkBusMsgsv+0xd14>
     f08:	8c 85       	ldd	r24, Y+12	; 0x0c
     f0a:	9d 85       	ldd	r25, Y+13	; 0x0d
     f0c:	fc 01       	movw	r30, r24
     f0e:	83 81       	ldd	r24, Z+3	; 0x03
     f10:	8d 34       	cpi	r24, 0x4D	; 77
     f12:	a9 f4       	brne	.+42     	; 0xf3e <_Z17handleLinkBusMsgsv+0x22e>
     f14:	8c 85       	ldd	r24, Y+12	; 0x0c
     f16:	9d 85       	ldd	r25, Y+13	; 0x0d
     f18:	fc 01       	movw	r30, r24
     f1a:	80 8d       	ldd	r24, Z+24	; 0x18
     f1c:	88 23       	and	r24, r24
     f1e:	79 f0       	breq	.+30     	; 0xf3e <_Z17handleLinkBusMsgsv+0x22e>
     f20:	8c 85       	ldd	r24, Y+12	; 0x0c
     f22:	9d 85       	ldd	r25, Y+13	; 0x0d
     f24:	48 96       	adiw	r24, 0x18	; 24
     f26:	0e 94 c6 25 	call	0x4b8c	; 0x4b8c <atoi>
     f2a:	80 93 88 41 	sts	0x4188, r24	; 0x804188 <_ZZ17handleLinkBusMsgsvE6pwr_mW>
     f2e:	90 93 89 41 	sts	0x4189, r25	; 0x804189 <_ZZ17handleLinkBusMsgsvE6pwr_mW+0x1>
     f32:	80 91 8a 41 	lds	r24, 0x418A	; 0x80418a <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
     f36:	8f 5f       	subi	r24, 0xFF	; 255
     f38:	80 93 8a 41 	sts	0x418A, r24	; 0x80418a <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
     f3c:	09 c0       	rjmp	.+18     	; 0xf50 <_Z17handleLinkBusMsgsv+0x240>
     f3e:	8c 85       	ldd	r24, Y+12	; 0x0c
     f40:	9d 85       	ldd	r25, Y+13	; 0x0d
     f42:	03 96       	adiw	r24, 0x03	; 3
     f44:	0e 94 c6 25 	call	0x4b8c	; 0x4b8c <atoi>
     f48:	80 93 88 41 	sts	0x4188, r24	; 0x804188 <_ZZ17handleLinkBusMsgsvE6pwr_mW>
     f4c:	90 93 89 41 	sts	0x4189, r25	; 0x804189 <_ZZ17handleLinkBusMsgsvE6pwr_mW+0x1>
     f50:	60 e0       	ldi	r22, 0x00	; 0
     f52:	70 e0       	ldi	r23, 0x00	; 0
     f54:	88 e8       	ldi	r24, 0x88	; 136
     f56:	91 e4       	ldi	r25, 0x41	; 65
     f58:	0e 94 d2 1f 	call	0x3fa4	; 0x3fa4 <_Z15txSetParametersPjPh>
     f5c:	8a 8b       	std	Y+18, r24	; 0x12
     f5e:	8a 89       	ldd	r24, Y+18	; 0x12
     f60:	88 23       	and	r24, r24
     f62:	19 f0       	breq	.+6      	; 0xf6a <_Z17handleLinkBusMsgsv+0x25a>
     f64:	8a 89       	ldd	r24, Y+18	; 0x12
     f66:	80 93 26 41 	sts	0x4126, r24	; 0x804126 <_ZL17g_last_error_code>
     f6a:	80 91 88 41 	lds	r24, 0x4188	; 0x804188 <_ZZ17handleLinkBusMsgsvE6pwr_mW>
     f6e:	90 91 89 41 	lds	r25, 0x4189	; 0x804189 <_ZZ17handleLinkBusMsgsvE6pwr_mW+0x1>
     f72:	29 2f       	mov	r18, r25
     f74:	2f 93       	push	r18
     f76:	8f 93       	push	r24
     f78:	88 e4       	ldi	r24, 0x48	; 72
     f7a:	90 e4       	ldi	r25, 0x40	; 64
     f7c:	89 2f       	mov	r24, r25
     f7e:	8f 93       	push	r24
     f80:	88 e4       	ldi	r24, 0x48	; 72
     f82:	90 e4       	ldi	r25, 0x40	; 64
     f84:	8f 93       	push	r24
     f86:	81 e1       	ldi	r24, 0x11	; 17
     f88:	91 e4       	ldi	r25, 0x41	; 65
     f8a:	89 2f       	mov	r24, r25
     f8c:	8f 93       	push	r24
     f8e:	81 e1       	ldi	r24, 0x11	; 17
     f90:	91 e4       	ldi	r25, 0x41	; 65
     f92:	8f 93       	push	r24
     f94:	0e 94 3f 26 	call	0x4c7e	; 0x4c7e <sprintf>
     f98:	0f 90       	pop	r0
     f9a:	0f 90       	pop	r0
     f9c:	0f 90       	pop	r0
     f9e:	0f 90       	pop	r0
     fa0:	0f 90       	pop	r0
     fa2:	0f 90       	pop	r0
     fa4:	41 e1       	ldi	r20, 0x11	; 17
     fa6:	51 e4       	ldi	r21, 0x41	; 65
     fa8:	6d e4       	ldi	r22, 0x4D	; 77
     faa:	70 e4       	ldi	r23, 0x40	; 64
     fac:	83 e0       	ldi	r24, 0x03	; 3
     fae:	0e 94 2a 15 	call	0x2a54	; 0x2a54 <_Z11lb_send_msg13LBMessageTypePKcPc>
     fb2:	38 c5       	rjmp	.+2672   	; 0x1a24 <_Z17handleLinkBusMsgsv+0xd14>
     fb4:	0e 94 47 20 	call	0x408e	; 0x408e <_Z22storeTransmitterValuesv>
     fb8:	48 c5       	rjmp	.+2704   	; 0x1a4a <_Z17handleLinkBusMsgsv+0xd3a>
     fba:	8c 85       	ldd	r24, Y+12	; 0x0c
     fbc:	9d 85       	ldd	r25, Y+13	; 0x0d
     fbe:	fc 01       	movw	r30, r24
     fc0:	83 81       	ldd	r24, Z+3	; 0x03
     fc2:	8b 8b       	std	Y+19, r24	; 0x13
     fc4:	8b 89       	ldd	r24, Y+19	; 0x13
     fc6:	81 33       	cpi	r24, 0x31	; 49
     fc8:	21 f0       	breq	.+8      	; 0xfd2 <_Z17handleLinkBusMsgsv+0x2c2>
     fca:	8b 89       	ldd	r24, Y+19	; 0x13
     fcc:	82 33       	cpi	r24, 0x32	; 50
     fce:	09 f0       	breq	.+2      	; 0xfd2 <_Z17handleLinkBusMsgsv+0x2c2>
     fd0:	a7 c0       	rjmp	.+334    	; 0x1120 <_Z17handleLinkBusMsgsv+0x410>
     fd2:	0e 94 67 21 	call	0x42ce	; 0x42ce <_Z18txIsAntennaForBandv>
     fd6:	88 23       	and	r24, r24
     fd8:	31 f4       	brne	.+12     	; 0xfe6 <_Z17handleLinkBusMsgsv+0x2d6>
     fda:	80 91 31 40 	lds	r24, 0x4031	; 0x804031 <g_tx_power_is_zero>
     fde:	88 23       	and	r24, r24
     fe0:	11 f4       	brne	.+4      	; 0xfe6 <_Z17handleLinkBusMsgsv+0x2d6>
     fe2:	81 e0       	ldi	r24, 0x01	; 1
     fe4:	01 c0       	rjmp	.+2      	; 0xfe8 <_Z17handleLinkBusMsgsv+0x2d8>
     fe6:	80 e0       	ldi	r24, 0x00	; 0
     fe8:	88 23       	and	r24, r24
     fea:	21 f0       	breq	.+8      	; 0xff4 <_Z17handleLinkBusMsgsv+0x2e4>
     fec:	87 ef       	ldi	r24, 0xF7	; 247
     fee:	80 93 26 41 	sts	0x4126, r24	; 0x804126 <_ZL17g_last_error_code>
     ff2:	a0 c0       	rjmp	.+320    	; 0x1134 <_Z17handleLinkBusMsgsv+0x424>
     ff4:	8b 89       	ldd	r24, Y+19	; 0x13
     ff6:	81 33       	cpi	r24, 0x31	; 49
     ff8:	09 f0       	breq	.+2      	; 0xffc <_Z17handleLinkBusMsgsv+0x2ec>
     ffa:	64 c0       	rjmp	.+200    	; 0x10c4 <_Z17handleLinkBusMsgsv+0x3b4>
     ffc:	0e 94 67 21 	call	0x42ce	; 0x42ce <_Z18txIsAntennaForBandv>
    1000:	88 23       	and	r24, r24
    1002:	21 f4       	brne	.+8      	; 0x100c <_Z17handleLinkBusMsgsv+0x2fc>
    1004:	80 91 31 40 	lds	r24, 0x4031	; 0x804031 <g_tx_power_is_zero>
    1008:	88 23       	and	r24, r24
    100a:	11 f0       	breq	.+4      	; 0x1010 <_Z17handleLinkBusMsgsv+0x300>
    100c:	81 e0       	ldi	r24, 0x01	; 1
    100e:	01 c0       	rjmp	.+2      	; 0x1012 <_Z17handleLinkBusMsgsv+0x302>
    1010:	80 e0       	ldi	r24, 0x00	; 0
    1012:	88 23       	and	r24, r24
    1014:	09 f4       	brne	.+2      	; 0x1018 <_Z17handleLinkBusMsgsv+0x308>
    1016:	52 c0       	rjmp	.+164    	; 0x10bc <_Z17handleLinkBusMsgsv+0x3ac>
    1018:	f8 94       	cli
    101a:	81 e0       	ldi	r24, 0x01	; 1
    101c:	8d a7       	std	Y+45, r24	; 0x2d
    101e:	ce 01       	movw	r24, r28
    1020:	8d 96       	adiw	r24, 0x2d	; 45
    1022:	40 e0       	ldi	r20, 0x00	; 0
    1024:	50 e0       	ldi	r21, 0x00	; 0
    1026:	bc 01       	movw	r22, r24
    1028:	85 e3       	ldi	r24, 0x35	; 53
    102a:	91 e4       	ldi	r25, 0x41	; 65
    102c:	0e 94 95 16 	call	0x2d2a	; 0x2d2a <_Z9makeMorsePcPhS0_>
    1030:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    1034:	0e 94 3e 0d 	call	0x1a7c	; 0x1a7c <_Z13throttleValueh>
    1038:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    103c:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    1040:	78 94       	sei
    1042:	81 e0       	ldi	r24, 0x01	; 1
    1044:	90 e0       	ldi	r25, 0x00	; 0
    1046:	a0 e0       	ldi	r26, 0x00	; 0
    1048:	b0 e0       	ldi	r27, 0x00	; 0
    104a:	80 93 63 41 	sts	0x4163, r24	; 0x804163 <g_event_start_time>
    104e:	90 93 64 41 	sts	0x4164, r25	; 0x804164 <g_event_start_time+0x1>
    1052:	a0 93 65 41 	sts	0x4165, r26	; 0x804165 <g_event_start_time+0x2>
    1056:	b0 93 66 41 	sts	0x4166, r27	; 0x804166 <g_event_start_time+0x3>
    105a:	8f ef       	ldi	r24, 0xFF	; 255
    105c:	9f ef       	ldi	r25, 0xFF	; 255
    105e:	dc 01       	movw	r26, r24
    1060:	80 93 67 41 	sts	0x4167, r24	; 0x804167 <g_event_finish_time>
    1064:	90 93 68 41 	sts	0x4168, r25	; 0x804168 <g_event_finish_time+0x1>
    1068:	a0 93 69 41 	sts	0x4169, r26	; 0x804169 <g_event_finish_time+0x2>
    106c:	b0 93 6a 41 	sts	0x416A, r27	; 0x80416a <g_event_finish_time+0x3>
    1070:	8f e0       	ldi	r24, 0x0F	; 15
    1072:	97 e2       	ldi	r25, 0x27	; 39
    1074:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_on_air_seconds>
    1078:	90 93 0e 40 	sts	0x400E, r25	; 0x80400e <g_on_air_seconds+0x1>
    107c:	10 92 0f 40 	sts	0x400F, r1	; 0x80400f <g_off_air_seconds>
    1080:	10 92 10 40 	sts	0x4010, r1	; 0x804010 <g_off_air_seconds+0x1>
    1084:	8f e0       	ldi	r24, 0x0F	; 15
    1086:	97 e2       	ldi	r25, 0x27	; 39
    1088:	a0 e0       	ldi	r26, 0x00	; 0
    108a:	b0 e0       	ldi	r27, 0x00	; 0
    108c:	80 93 2c 41 	sts	0x412C, r24	; 0x80412c <_ZL12g_on_the_air>
    1090:	90 93 2d 41 	sts	0x412D, r25	; 0x80412d <_ZL12g_on_the_air+0x1>
    1094:	a0 93 2e 41 	sts	0x412E, r26	; 0x80412e <_ZL12g_on_the_air+0x2>
    1098:	b0 93 2f 41 	sts	0x412F, r27	; 0x80412f <_ZL12g_on_the_air+0x3>
    109c:	8f ef       	ldi	r24, 0xFF	; 255
    109e:	9f ef       	ldi	r25, 0xFF	; 255
    10a0:	80 93 30 41 	sts	0x4130, r24	; 0x804130 <_ZL26g_sendID_seconds_countdown>
    10a4:	90 93 31 41 	sts	0x4131, r25	; 0x804131 <_ZL26g_sendID_seconds_countdown+0x1>
    10a8:	81 e0       	ldi	r24, 0x01	; 1
    10aa:	80 93 6c 41 	sts	0x416C, r24	; 0x80416c <g_event_commenced>
    10ae:	81 e0       	ldi	r24, 0x01	; 1
    10b0:	80 93 6b 41 	sts	0x416B, r24	; 0x80416b <g_event_enabled>
    10b4:	8d ef       	ldi	r24, 0xFD	; 253
    10b6:	80 93 27 41 	sts	0x4127, r24	; 0x804127 <_ZL18g_last_status_code>
    10ba:	3c c0       	rjmp	.+120    	; 0x1134 <_Z17handleLinkBusMsgsv+0x424>
    10bc:	87 ef       	ldi	r24, 0xF7	; 247
    10be:	80 93 26 41 	sts	0x4126, r24	; 0x804126 <_ZL17g_last_error_code>
    10c2:	38 c0       	rjmp	.+112    	; 0x1134 <_Z17handleLinkBusMsgsv+0x424>
    10c4:	8b 89       	ldd	r24, Y+19	; 0x13
    10c6:	82 33       	cpi	r24, 0x32	; 50
    10c8:	a9 f5       	brne	.+106    	; 0x1134 <_Z17handleLinkBusMsgsv+0x424>
    10ca:	80 91 8a 41 	lds	r24, 0x418A	; 0x80418a <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    10ce:	8e 30       	cpi	r24, 0x0E	; 14
    10d0:	20 f4       	brcc	.+8      	; 0x10da <_Z17handleLinkBusMsgsv+0x3ca>
    10d2:	8d ec       	ldi	r24, 0xCD	; 205
    10d4:	80 93 26 41 	sts	0x4126, r24	; 0x804126 <_ZL17g_last_error_code>
    10d8:	2d c0       	rjmp	.+90     	; 0x1134 <_Z17handleLinkBusMsgsv+0x424>
    10da:	1e a6       	std	Y+46, r1	; 0x2e
    10dc:	ce 01       	movw	r24, r28
    10de:	8e 96       	adiw	r24, 0x2e	; 46
    10e0:	0e 94 41 0d 	call	0x1a82	; 0x1a82 <_Z11launchEventP2SC>
    10e4:	80 93 8b 41 	sts	0x418B, r24	; 0x80418b <_ZZ17handleLinkBusMsgsvE2ec>
    10e8:	80 91 6f 41 	lds	r24, 0x416F	; 0x80416f <_ZL13g_go_to_sleep>
    10ec:	88 23       	and	r24, r24
    10ee:	31 f0       	breq	.+12     	; 0x10fc <_Z17handleLinkBusMsgsv+0x3ec>
    10f0:	80 91 34 41 	lds	r24, 0x4134	; 0x804134 <_ZL11g_sleepType>
    10f4:	88 23       	and	r24, r24
    10f6:	11 f0       	breq	.+4      	; 0x10fc <_Z17handleLinkBusMsgsv+0x3ec>
    10f8:	81 e0       	ldi	r24, 0x01	; 1
    10fa:	01 c0       	rjmp	.+2      	; 0x10fe <_Z17handleLinkBusMsgsv+0x3ee>
    10fc:	80 e0       	ldi	r24, 0x00	; 0
    10fe:	88 23       	and	r24, r24
    1100:	29 f0       	breq	.+10     	; 0x110c <_Z17handleLinkBusMsgsv+0x3fc>
    1102:	83 e0       	ldi	r24, 0x03	; 3
    1104:	80 93 34 41 	sts	0x4134, r24	; 0x804134 <_ZL11g_sleepType>
    1108:	10 92 6f 41 	sts	0x416F, r1	; 0x80416f <_ZL13g_go_to_sleep>
    110c:	8c e3       	ldi	r24, 0x3C	; 60
    110e:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    1112:	80 91 8b 41 	lds	r24, 0x418B	; 0x80418b <_ZZ17handleLinkBusMsgsvE2ec>
    1116:	88 23       	and	r24, r24
    1118:	69 f4       	brne	.+26     	; 0x1134 <_Z17handleLinkBusMsgsv+0x424>
    111a:	0e 94 47 20 	call	0x408e	; 0x408e <_Z22storeTransmitterValuesv>
    111e:	0a c0       	rjmp	.+20     	; 0x1134 <_Z17handleLinkBusMsgsv+0x424>
    1120:	8b 89       	ldd	r24, Y+19	; 0x13
    1122:	80 33       	cpi	r24, 0x30	; 48
    1124:	09 f0       	breq	.+2      	; 0x1128 <_Z17handleLinkBusMsgsv+0x418>
    1126:	80 c4       	rjmp	.+2304   	; 0x1a28 <_Z17handleLinkBusMsgsv+0xd18>
    1128:	10 92 8a 41 	sts	0x418A, r1	; 0x80418a <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    112c:	8c ee       	ldi	r24, 0xEC	; 236
    112e:	80 93 27 41 	sts	0x4127, r24	; 0x804127 <_ZL18g_last_status_code>
    1132:	7a c4       	rjmp	.+2292   	; 0x1a28 <_Z17handleLinkBusMsgsv+0xd18>
    1134:	00 00       	nop
    1136:	78 c4       	rjmp	.+2288   	; 0x1a28 <_Z17handleLinkBusMsgsv+0xd18>
    1138:	1a 82       	std	Y+2, r1	; 0x02
    113a:	1b 82       	std	Y+3, r1	; 0x03
    113c:	1c 82       	std	Y+4, r1	; 0x04
    113e:	1d 82       	std	Y+5, r1	; 0x05
    1140:	8c 85       	ldd	r24, Y+12	; 0x0c
    1142:	9d 85       	ldd	r25, Y+13	; 0x0d
    1144:	fc 01       	movw	r30, r24
    1146:	83 81       	ldd	r24, Z+3	; 0x03
    1148:	83 35       	cpi	r24, 0x53	; 83
    114a:	c1 f5       	brne	.+112    	; 0x11bc <_Z17handleLinkBusMsgsv+0x4ac>
    114c:	8c 85       	ldd	r24, Y+12	; 0x0c
    114e:	9d 85       	ldd	r25, Y+13	; 0x0d
    1150:	fc 01       	movw	r30, r24
    1152:	80 8d       	ldd	r24, Z+24	; 0x18
    1154:	88 23       	and	r24, r24
    1156:	59 f0       	breq	.+22     	; 0x116e <_Z17handleLinkBusMsgsv+0x45e>
    1158:	8c 85       	ldd	r24, Y+12	; 0x0c
    115a:	9d 85       	ldd	r25, Y+13	; 0x0d
    115c:	48 96       	adiw	r24, 0x18	; 24
    115e:	0e 94 e4 25 	call	0x4bc8	; 0x4bc8 <atol>
    1162:	dc 01       	movw	r26, r24
    1164:	cb 01       	movw	r24, r22
    1166:	8a 83       	std	Y+2, r24	; 0x02
    1168:	9b 83       	std	Y+3, r25	; 0x03
    116a:	ac 83       	std	Y+4, r26	; 0x04
    116c:	bd 83       	std	Y+5, r27	; 0x05
    116e:	8a 81       	ldd	r24, Y+2	; 0x02
    1170:	9b 81       	ldd	r25, Y+3	; 0x03
    1172:	ac 81       	ldd	r26, Y+4	; 0x04
    1174:	bd 81       	ldd	r27, Y+5	; 0x05
    1176:	89 2b       	or	r24, r25
    1178:	8a 2b       	or	r24, r26
    117a:	8b 2b       	or	r24, r27
    117c:	09 f4       	brne	.+2      	; 0x1180 <_Z17handleLinkBusMsgsv+0x470>
    117e:	56 c4       	rjmp	.+2220   	; 0x1a2c <_Z17handleLinkBusMsgsv+0xd1c>
    1180:	8a 81       	ldd	r24, Y+2	; 0x02
    1182:	9b 81       	ldd	r25, Y+3	; 0x03
    1184:	ac 81       	ldd	r26, Y+4	; 0x04
    1186:	bd 81       	ldd	r27, Y+5	; 0x05
    1188:	80 93 63 41 	sts	0x4163, r24	; 0x804163 <g_event_start_time>
    118c:	90 93 64 41 	sts	0x4164, r25	; 0x804164 <g_event_start_time+0x1>
    1190:	a0 93 65 41 	sts	0x4165, r26	; 0x804165 <g_event_start_time+0x2>
    1194:	b0 93 66 41 	sts	0x4166, r27	; 0x804166 <g_event_start_time+0x3>
    1198:	f8 94       	cli
    119a:	80 e0       	ldi	r24, 0x00	; 0
    119c:	90 e0       	ldi	r25, 0x00	; 0
    119e:	0e 94 c8 0f 	call	0x1f90	; 0x1f90 <_Z16ds3231_get_epochP2EC>
    11a2:	dc 01       	movw	r26, r24
    11a4:	cb 01       	movw	r24, r22
    11a6:	bc 01       	movw	r22, r24
    11a8:	cd 01       	movw	r24, r26
    11aa:	0e 94 0c 01 	call	0x218	; 0x218 <set_system_time>
    11ae:	78 94       	sei
    11b0:	80 91 8a 41 	lds	r24, 0x418A	; 0x80418a <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    11b4:	8f 5f       	subi	r24, 0xFF	; 255
    11b6:	80 93 8a 41 	sts	0x418A, r24	; 0x80418a <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    11ba:	38 c4       	rjmp	.+2160   	; 0x1a2c <_Z17handleLinkBusMsgsv+0xd1c>
    11bc:	8c 85       	ldd	r24, Y+12	; 0x0c
    11be:	9d 85       	ldd	r25, Y+13	; 0x0d
    11c0:	fc 01       	movw	r30, r24
    11c2:	83 81       	ldd	r24, Z+3	; 0x03
    11c4:	86 34       	cpi	r24, 0x46	; 70
    11c6:	09 f0       	breq	.+2      	; 0x11ca <_Z17handleLinkBusMsgsv+0x4ba>
    11c8:	31 c4       	rjmp	.+2146   	; 0x1a2c <_Z17handleLinkBusMsgsv+0xd1c>
    11ca:	8c 85       	ldd	r24, Y+12	; 0x0c
    11cc:	9d 85       	ldd	r25, Y+13	; 0x0d
    11ce:	fc 01       	movw	r30, r24
    11d0:	80 8d       	ldd	r24, Z+24	; 0x18
    11d2:	88 23       	and	r24, r24
    11d4:	59 f0       	breq	.+22     	; 0x11ec <_Z17handleLinkBusMsgsv+0x4dc>
    11d6:	8c 85       	ldd	r24, Y+12	; 0x0c
    11d8:	9d 85       	ldd	r25, Y+13	; 0x0d
    11da:	48 96       	adiw	r24, 0x18	; 24
    11dc:	0e 94 e4 25 	call	0x4bc8	; 0x4bc8 <atol>
    11e0:	dc 01       	movw	r26, r24
    11e2:	cb 01       	movw	r24, r22
    11e4:	8a 83       	std	Y+2, r24	; 0x02
    11e6:	9b 83       	std	Y+3, r25	; 0x03
    11e8:	ac 83       	std	Y+4, r26	; 0x04
    11ea:	bd 83       	std	Y+5, r27	; 0x05
    11ec:	8a 81       	ldd	r24, Y+2	; 0x02
    11ee:	9b 81       	ldd	r25, Y+3	; 0x03
    11f0:	ac 81       	ldd	r26, Y+4	; 0x04
    11f2:	bd 81       	ldd	r27, Y+5	; 0x05
    11f4:	89 2b       	or	r24, r25
    11f6:	8a 2b       	or	r24, r26
    11f8:	8b 2b       	or	r24, r27
    11fa:	09 f4       	brne	.+2      	; 0x11fe <_Z17handleLinkBusMsgsv+0x4ee>
    11fc:	17 c4       	rjmp	.+2094   	; 0x1a2c <_Z17handleLinkBusMsgsv+0xd1c>
    11fe:	8a 81       	ldd	r24, Y+2	; 0x02
    1200:	9b 81       	ldd	r25, Y+3	; 0x03
    1202:	ac 81       	ldd	r26, Y+4	; 0x04
    1204:	bd 81       	ldd	r27, Y+5	; 0x05
    1206:	80 93 67 41 	sts	0x4167, r24	; 0x804167 <g_event_finish_time>
    120a:	90 93 68 41 	sts	0x4168, r25	; 0x804168 <g_event_finish_time+0x1>
    120e:	a0 93 69 41 	sts	0x4169, r26	; 0x804169 <g_event_finish_time+0x2>
    1212:	b0 93 6a 41 	sts	0x416A, r27	; 0x80416a <g_event_finish_time+0x3>
    1216:	80 91 8a 41 	lds	r24, 0x418A	; 0x80418a <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    121a:	8f 5f       	subi	r24, 0xFF	; 255
    121c:	80 93 8a 41 	sts	0x418A, r24	; 0x80418a <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    1220:	05 c4       	rjmp	.+2058   	; 0x1a2c <_Z17handleLinkBusMsgsv+0xd1c>
    1222:	81 e0       	ldi	r24, 0x01	; 1
    1224:	80 93 0a 40 	sts	0x400A, r24	; 0x80400a <_ZL13g_wifi_active>
    1228:	8c 85       	ldd	r24, Y+12	; 0x0c
    122a:	9d 85       	ldd	r25, Y+13	; 0x0d
    122c:	fc 01       	movw	r30, r24
    122e:	80 81       	ld	r24, Z
    1230:	81 30       	cpi	r24, 0x01	; 1
    1232:	09 f0       	breq	.+2      	; 0x1236 <_Z17handleLinkBusMsgsv+0x526>
    1234:	4b c0       	rjmp	.+150    	; 0x12cc <_Z17handleLinkBusMsgsv+0x5bc>
    1236:	8c 85       	ldd	r24, Y+12	; 0x0c
    1238:	9d 85       	ldd	r25, Y+13	; 0x0d
    123a:	fc 01       	movw	r30, r24
    123c:	83 81       	ldd	r24, Z+3	; 0x03
    123e:	88 23       	and	r24, r24
    1240:	d1 f0       	breq	.+52     	; 0x1276 <_Z17handleLinkBusMsgsv+0x566>
    1242:	8c 85       	ldd	r24, Y+12	; 0x0c
    1244:	9d 85       	ldd	r25, Y+13	; 0x0d
    1246:	03 96       	adiw	r24, 0x03	; 3
    1248:	44 e1       	ldi	r20, 0x14	; 20
    124a:	50 e0       	ldi	r21, 0x00	; 0
    124c:	bc 01       	movw	r22, r24
    124e:	81 e1       	ldi	r24, 0x11	; 17
    1250:	91 e4       	ldi	r25, 0x41	; 65
    1252:	0e 94 13 26 	call	0x4c26	; 0x4c26 <strncpy>
    1256:	60 e0       	ldi	r22, 0x00	; 0
    1258:	81 e1       	ldi	r24, 0x11	; 17
    125a:	91 e4       	ldi	r25, 0x41	; 65
    125c:	0e 94 3d 11 	call	0x227a	; 0x227a <_Z20ds3231_set_date_timePc12ClockSetting>
    1260:	80 e0       	ldi	r24, 0x00	; 0
    1262:	90 e0       	ldi	r25, 0x00	; 0
    1264:	0e 94 c8 0f 	call	0x1f90	; 0x1f90 <_Z16ds3231_get_epochP2EC>
    1268:	dc 01       	movw	r26, r24
    126a:	cb 01       	movw	r24, r22
    126c:	bc 01       	movw	r22, r24
    126e:	cd 01       	movw	r24, r26
    1270:	0e 94 0c 01 	call	0x218	; 0x218 <set_system_time>
    1274:	dd c3       	rjmp	.+1978   	; 0x1a30 <_Z17handleLinkBusMsgsv+0xd20>
    1276:	80 e0       	ldi	r24, 0x00	; 0
    1278:	90 e0       	ldi	r25, 0x00	; 0
    127a:	0e 94 18 01 	call	0x230	; 0x230 <time>
    127e:	dc 01       	movw	r26, r24
    1280:	cb 01       	movw	r24, r22
    1282:	2b 2f       	mov	r18, r27
    1284:	2f 93       	push	r18
    1286:	2a 2f       	mov	r18, r26
    1288:	2f 93       	push	r18
    128a:	29 2f       	mov	r18, r25
    128c:	2f 93       	push	r18
    128e:	8f 93       	push	r24
    1290:	80 e4       	ldi	r24, 0x40	; 64
    1292:	90 e4       	ldi	r25, 0x40	; 64
    1294:	89 2f       	mov	r24, r25
    1296:	8f 93       	push	r24
    1298:	80 e4       	ldi	r24, 0x40	; 64
    129a:	90 e4       	ldi	r25, 0x40	; 64
    129c:	8f 93       	push	r24
    129e:	81 e1       	ldi	r24, 0x11	; 17
    12a0:	91 e4       	ldi	r25, 0x41	; 65
    12a2:	89 2f       	mov	r24, r25
    12a4:	8f 93       	push	r24
    12a6:	81 e1       	ldi	r24, 0x11	; 17
    12a8:	91 e4       	ldi	r25, 0x41	; 65
    12aa:	8f 93       	push	r24
    12ac:	0e 94 3f 26 	call	0x4c7e	; 0x4c7e <sprintf>
    12b0:	2d b7       	in	r18, 0x3d	; 61
    12b2:	3e b7       	in	r19, 0x3e	; 62
    12b4:	28 5f       	subi	r18, 0xF8	; 248
    12b6:	3f 4f       	sbci	r19, 0xFF	; 255
    12b8:	cd bf       	out	0x3d, r28	; 61
    12ba:	de bf       	out	0x3e, r29	; 62
    12bc:	41 e1       	ldi	r20, 0x11	; 17
    12be:	51 e4       	ldi	r21, 0x41	; 65
    12c0:	64 e4       	ldi	r22, 0x44	; 68
    12c2:	70 e4       	ldi	r23, 0x40	; 64
    12c4:	83 e0       	ldi	r24, 0x03	; 3
    12c6:	0e 94 2a 15 	call	0x2a54	; 0x2a54 <_Z11lb_send_msg13LBMessageTypePKcPc>
    12ca:	b2 c3       	rjmp	.+1892   	; 0x1a30 <_Z17handleLinkBusMsgsv+0xd20>
    12cc:	8c 85       	ldd	r24, Y+12	; 0x0c
    12ce:	9d 85       	ldd	r25, Y+13	; 0x0d
    12d0:	fc 01       	movw	r30, r24
    12d2:	80 81       	ld	r24, Z
    12d4:	82 30       	cpi	r24, 0x02	; 2
    12d6:	09 f0       	breq	.+2      	; 0x12da <_Z17handleLinkBusMsgsv+0x5ca>
    12d8:	ab c3       	rjmp	.+1878   	; 0x1a30 <_Z17handleLinkBusMsgsv+0xd20>
    12da:	8c 85       	ldd	r24, Y+12	; 0x0c
    12dc:	9d 85       	ldd	r25, Y+13	; 0x0d
    12de:	fc 01       	movw	r30, r24
    12e0:	83 81       	ldd	r24, Z+3	; 0x03
    12e2:	88 35       	cpi	r24, 0x58	; 88
    12e4:	d1 f5       	brne	.+116    	; 0x135a <_Z17handleLinkBusMsgsv+0x64a>
    12e6:	1f a6       	std	Y+47, r1	; 0x2f
    12e8:	8c 85       	ldd	r24, Y+12	; 0x0c
    12ea:	9d 85       	ldd	r25, Y+13	; 0x0d
    12ec:	fc 01       	movw	r30, r24
    12ee:	80 8d       	ldd	r24, Z+24	; 0x18
    12f0:	88 23       	and	r24, r24
    12f2:	59 f0       	breq	.+22     	; 0x130a <_Z17handleLinkBusMsgsv+0x5fa>
    12f4:	8c 85       	ldd	r24, Y+12	; 0x0c
    12f6:	9d 85       	ldd	r25, Y+13	; 0x0d
    12f8:	48 96       	adiw	r24, 0x18	; 24
    12fa:	0e 94 c6 25 	call	0x4b8c	; 0x4b8c <atoi>
    12fe:	8f a7       	std	Y+47, r24	; 0x2f
    1300:	ce 01       	movw	r24, r28
    1302:	8f 96       	adiw	r24, 0x2f	; 47
    1304:	0e 94 bc 11 	call	0x2378	; 0x2378 <_Z16ds3231_set_agingPa>
    1308:	93 c3       	rjmp	.+1830   	; 0x1a30 <_Z17handleLinkBusMsgsv+0xd20>
    130a:	0e 94 d1 11 	call	0x23a2	; 0x23a2 <_Z16ds3231_get_agingv>
    130e:	8f a7       	std	Y+47, r24	; 0x2f
    1310:	8f a5       	ldd	r24, Y+47	; 0x2f
    1312:	08 2e       	mov	r0, r24
    1314:	00 0c       	add	r0, r0
    1316:	99 0b       	sbc	r25, r25
    1318:	29 2f       	mov	r18, r25
    131a:	2f 93       	push	r18
    131c:	8f 93       	push	r24
    131e:	81 e5       	ldi	r24, 0x51	; 81
    1320:	90 e4       	ldi	r25, 0x40	; 64
    1322:	89 2f       	mov	r24, r25
    1324:	8f 93       	push	r24
    1326:	81 e5       	ldi	r24, 0x51	; 81
    1328:	90 e4       	ldi	r25, 0x40	; 64
    132a:	8f 93       	push	r24
    132c:	81 e1       	ldi	r24, 0x11	; 17
    132e:	91 e4       	ldi	r25, 0x41	; 65
    1330:	89 2f       	mov	r24, r25
    1332:	8f 93       	push	r24
    1334:	81 e1       	ldi	r24, 0x11	; 17
    1336:	91 e4       	ldi	r25, 0x41	; 65
    1338:	8f 93       	push	r24
    133a:	0e 94 3f 26 	call	0x4c7e	; 0x4c7e <sprintf>
    133e:	0f 90       	pop	r0
    1340:	0f 90       	pop	r0
    1342:	0f 90       	pop	r0
    1344:	0f 90       	pop	r0
    1346:	0f 90       	pop	r0
    1348:	0f 90       	pop	r0
    134a:	41 e1       	ldi	r20, 0x11	; 17
    134c:	51 e4       	ldi	r21, 0x41	; 65
    134e:	64 e4       	ldi	r22, 0x44	; 68
    1350:	70 e4       	ldi	r23, 0x40	; 64
    1352:	83 e0       	ldi	r24, 0x03	; 3
    1354:	0e 94 2a 15 	call	0x2a54	; 0x2a54 <_Z11lb_send_msg13LBMessageTypePKcPc>
    1358:	6b c3       	rjmp	.+1750   	; 0x1a30 <_Z17handleLinkBusMsgsv+0xd20>
    135a:	80 e0       	ldi	r24, 0x00	; 0
    135c:	90 e0       	ldi	r25, 0x00	; 0
    135e:	0e 94 c8 0f 	call	0x1f90	; 0x1f90 <_Z16ds3231_get_epochP2EC>
    1362:	dc 01       	movw	r26, r24
    1364:	cb 01       	movw	r24, r22
    1366:	8c 8b       	std	Y+20, r24	; 0x14
    1368:	9d 8b       	std	Y+21, r25	; 0x15
    136a:	ae 8b       	std	Y+22, r26	; 0x16
    136c:	bf 8b       	std	Y+23, r27	; 0x17
    136e:	8c 89       	ldd	r24, Y+20	; 0x14
    1370:	9d 89       	ldd	r25, Y+21	; 0x15
    1372:	ae 89       	ldd	r26, Y+22	; 0x16
    1374:	bf 89       	ldd	r27, Y+23	; 0x17
    1376:	bc 01       	movw	r22, r24
    1378:	cd 01       	movw	r24, r26
    137a:	0e 94 0c 01 	call	0x218	; 0x218 <set_system_time>
    137e:	80 91 8c 41 	lds	r24, 0x418C	; 0x80418c <_ZZ17handleLinkBusMsgsvE8lastTime>
    1382:	90 91 8d 41 	lds	r25, 0x418D	; 0x80418d <_ZZ17handleLinkBusMsgsvE8lastTime+0x1>
    1386:	a0 91 8e 41 	lds	r26, 0x418E	; 0x80418e <_ZZ17handleLinkBusMsgsvE8lastTime+0x2>
    138a:	b0 91 8f 41 	lds	r27, 0x418F	; 0x80418f <_ZZ17handleLinkBusMsgsvE8lastTime+0x3>
    138e:	2c 89       	ldd	r18, Y+20	; 0x14
    1390:	3d 89       	ldd	r19, Y+21	; 0x15
    1392:	4e 89       	ldd	r20, Y+22	; 0x16
    1394:	5f 89       	ldd	r21, Y+23	; 0x17
    1396:	28 17       	cp	r18, r24
    1398:	39 07       	cpc	r19, r25
    139a:	4a 07       	cpc	r20, r26
    139c:	5b 07       	cpc	r21, r27
    139e:	09 f4       	brne	.+2      	; 0x13a2 <_Z17handleLinkBusMsgsv+0x692>
    13a0:	47 c3       	rjmp	.+1678   	; 0x1a30 <_Z17handleLinkBusMsgsv+0xd20>
    13a2:	8f 89       	ldd	r24, Y+23	; 0x17
    13a4:	8f 93       	push	r24
    13a6:	8e 89       	ldd	r24, Y+22	; 0x16
    13a8:	8f 93       	push	r24
    13aa:	8d 89       	ldd	r24, Y+21	; 0x15
    13ac:	8f 93       	push	r24
    13ae:	8c 89       	ldd	r24, Y+20	; 0x14
    13b0:	8f 93       	push	r24
    13b2:	80 e4       	ldi	r24, 0x40	; 64
    13b4:	90 e4       	ldi	r25, 0x40	; 64
    13b6:	89 2f       	mov	r24, r25
    13b8:	8f 93       	push	r24
    13ba:	80 e4       	ldi	r24, 0x40	; 64
    13bc:	90 e4       	ldi	r25, 0x40	; 64
    13be:	8f 93       	push	r24
    13c0:	81 e1       	ldi	r24, 0x11	; 17
    13c2:	91 e4       	ldi	r25, 0x41	; 65
    13c4:	89 2f       	mov	r24, r25
    13c6:	8f 93       	push	r24
    13c8:	81 e1       	ldi	r24, 0x11	; 17
    13ca:	91 e4       	ldi	r25, 0x41	; 65
    13cc:	8f 93       	push	r24
    13ce:	0e 94 3f 26 	call	0x4c7e	; 0x4c7e <sprintf>
    13d2:	2d b7       	in	r18, 0x3d	; 61
    13d4:	3e b7       	in	r19, 0x3e	; 62
    13d6:	28 5f       	subi	r18, 0xF8	; 248
    13d8:	3f 4f       	sbci	r19, 0xFF	; 255
    13da:	cd bf       	out	0x3d, r28	; 61
    13dc:	de bf       	out	0x3e, r29	; 62
    13de:	41 e1       	ldi	r20, 0x11	; 17
    13e0:	51 e4       	ldi	r21, 0x41	; 65
    13e2:	64 e4       	ldi	r22, 0x44	; 68
    13e4:	70 e4       	ldi	r23, 0x40	; 64
    13e6:	83 e0       	ldi	r24, 0x03	; 3
    13e8:	0e 94 2a 15 	call	0x2a54	; 0x2a54 <_Z11lb_send_msg13LBMessageTypePKcPc>
    13ec:	8c 89       	ldd	r24, Y+20	; 0x14
    13ee:	9d 89       	ldd	r25, Y+21	; 0x15
    13f0:	ae 89       	ldd	r26, Y+22	; 0x16
    13f2:	bf 89       	ldd	r27, Y+23	; 0x17
    13f4:	80 93 8c 41 	sts	0x418C, r24	; 0x80418c <_ZZ17handleLinkBusMsgsvE8lastTime>
    13f8:	90 93 8d 41 	sts	0x418D, r25	; 0x80418d <_ZZ17handleLinkBusMsgsvE8lastTime+0x1>
    13fc:	a0 93 8e 41 	sts	0x418E, r26	; 0x80418e <_ZZ17handleLinkBusMsgsvE8lastTime+0x2>
    1400:	b0 93 8f 41 	sts	0x418F, r27	; 0x80418f <_ZZ17handleLinkBusMsgsvE8lastTime+0x3>
    1404:	15 c3       	rjmp	.+1578   	; 0x1a30 <_Z17handleLinkBusMsgsv+0xd20>
    1406:	80 91 8a 41 	lds	r24, 0x418A	; 0x80418a <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    140a:	8f 5f       	subi	r24, 0xFF	; 255
    140c:	80 93 8a 41 	sts	0x418A, r24	; 0x80418a <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    1410:	8c 85       	ldd	r24, Y+12	; 0x0c
    1412:	9d 85       	ldd	r25, Y+13	; 0x0d
    1414:	fc 01       	movw	r30, r24
    1416:	83 81       	ldd	r24, Z+3	; 0x03
    1418:	88 23       	and	r24, r24
    141a:	81 f1       	breq	.+96     	; 0x147c <_Z17handleLinkBusMsgsv+0x76c>
    141c:	8c 85       	ldd	r24, Y+12	; 0x0c
    141e:	9d 85       	ldd	r25, Y+13	; 0x0d
    1420:	03 96       	adiw	r24, 0x03	; 3
    1422:	44 e1       	ldi	r20, 0x14	; 20
    1424:	50 e0       	ldi	r21, 0x00	; 0
    1426:	bc 01       	movw	r22, r24
    1428:	8a e4       	ldi	r24, 0x4A	; 74
    142a:	91 e4       	ldi	r25, 0x41	; 65
    142c:	0e 94 13 26 	call	0x4c26	; 0x4c26 <strncpy>
    1430:	80 91 4a 41 	lds	r24, 0x414A	; 0x80414a <g_messages_text+0x15>
    1434:	88 23       	and	r24, r24
    1436:	09 f4       	brne	.+2      	; 0x143a <_Z17handleLinkBusMsgsv+0x72a>
    1438:	fd c2       	rjmp	.+1530   	; 0x1a34 <_Z17handleLinkBusMsgsv+0xd24>
    143a:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    143e:	88 2f       	mov	r24, r24
    1440:	90 e0       	ldi	r25, 0x00	; 0
    1442:	bc 01       	movw	r22, r24
    1444:	8a e4       	ldi	r24, 0x4A	; 74
    1446:	91 e4       	ldi	r25, 0x41	; 65
    1448:	0e 94 8e 17 	call	0x2f1c	; 0x2f1c <_Z26timeRequiredToSendStrAtWPMPcj>
    144c:	8c 50       	subi	r24, 0x0C	; 12
    144e:	9e 4f       	sbci	r25, 0xFE	; 254
    1450:	96 95       	lsr	r25
    1452:	87 95       	ror	r24
    1454:	96 95       	lsr	r25
    1456:	87 95       	ror	r24
    1458:	96 95       	lsr	r25
    145a:	87 95       	ror	r24
    145c:	9c 01       	movw	r18, r24
    145e:	a5 ec       	ldi	r26, 0xC5	; 197
    1460:	b0 e2       	ldi	r27, 0x20	; 32
    1462:	0e 94 7c 24 	call	0x48f8	; 0x48f8 <__umulhisi3>
    1466:	92 95       	swap	r25
    1468:	82 95       	swap	r24
    146a:	8f 70       	andi	r24, 0x0F	; 15
    146c:	89 27       	eor	r24, r25
    146e:	9f 70       	andi	r25, 0x0F	; 15
    1470:	89 27       	eor	r24, r25
    1472:	80 93 5f 41 	sts	0x415F, r24	; 0x80415f <g_time_needed_for_ID>
    1476:	90 93 60 41 	sts	0x4160, r25	; 0x804160 <g_time_needed_for_ID+0x1>
    147a:	dc c2       	rjmp	.+1464   	; 0x1a34 <_Z17handleLinkBusMsgsv+0xd24>
    147c:	80 91 4a 41 	lds	r24, 0x414A	; 0x80414a <g_messages_text+0x15>
    1480:	88 23       	and	r24, r24
    1482:	09 f4       	brne	.+2      	; 0x1486 <_Z17handleLinkBusMsgsv+0x776>
    1484:	d7 c2       	rjmp	.+1454   	; 0x1a34 <_Z17handleLinkBusMsgsv+0xd24>
    1486:	8a e4       	ldi	r24, 0x4A	; 74
    1488:	91 e4       	ldi	r25, 0x41	; 65
    148a:	89 2f       	mov	r24, r25
    148c:	8f 93       	push	r24
    148e:	8a e4       	ldi	r24, 0x4A	; 74
    1490:	91 e4       	ldi	r25, 0x41	; 65
    1492:	8f 93       	push	r24
    1494:	86 e5       	ldi	r24, 0x56	; 86
    1496:	90 e4       	ldi	r25, 0x40	; 64
    1498:	89 2f       	mov	r24, r25
    149a:	8f 93       	push	r24
    149c:	86 e5       	ldi	r24, 0x56	; 86
    149e:	90 e4       	ldi	r25, 0x40	; 64
    14a0:	8f 93       	push	r24
    14a2:	81 e1       	ldi	r24, 0x11	; 17
    14a4:	91 e4       	ldi	r25, 0x41	; 65
    14a6:	89 2f       	mov	r24, r25
    14a8:	8f 93       	push	r24
    14aa:	81 e1       	ldi	r24, 0x11	; 17
    14ac:	91 e4       	ldi	r25, 0x41	; 65
    14ae:	8f 93       	push	r24
    14b0:	0e 94 3f 26 	call	0x4c7e	; 0x4c7e <sprintf>
    14b4:	0f 90       	pop	r0
    14b6:	0f 90       	pop	r0
    14b8:	0f 90       	pop	r0
    14ba:	0f 90       	pop	r0
    14bc:	0f 90       	pop	r0
    14be:	0f 90       	pop	r0
    14c0:	81 e1       	ldi	r24, 0x11	; 17
    14c2:	91 e4       	ldi	r25, 0x41	; 65
    14c4:	0e 94 e9 14 	call	0x29d2	; 0x29d2 <_Z12lb_send_textPc>
    14c8:	19 82       	std	Y+1, r1	; 0x01
    14ca:	b4 c2       	rjmp	.+1384   	; 0x1a34 <_Z17handleLinkBusMsgsv+0xd24>
    14cc:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    14d0:	88 8f       	std	Y+24, r24	; 0x18
    14d2:	8c 85       	ldd	r24, Y+12	; 0x0c
    14d4:	9d 85       	ldd	r25, Y+13	; 0x0d
    14d6:	fc 01       	movw	r30, r24
    14d8:	83 81       	ldd	r24, Z+3	; 0x03
    14da:	89 34       	cpi	r24, 0x49	; 73
    14dc:	09 f0       	breq	.+2      	; 0x14e0 <_Z17handleLinkBusMsgsv+0x7d0>
    14de:	5a c0       	rjmp	.+180    	; 0x1594 <_Z17handleLinkBusMsgsv+0x884>
    14e0:	8c 85       	ldd	r24, Y+12	; 0x0c
    14e2:	9d 85       	ldd	r25, Y+13	; 0x0d
    14e4:	fc 01       	movw	r30, r24
    14e6:	80 8d       	ldd	r24, Z+24	; 0x18
    14e8:	88 23       	and	r24, r24
    14ea:	09 f4       	brne	.+2      	; 0x14ee <_Z17handleLinkBusMsgsv+0x7de>
    14ec:	a5 c2       	rjmp	.+1354   	; 0x1a38 <_Z17handleLinkBusMsgsv+0xd28>
    14ee:	8c 85       	ldd	r24, Y+12	; 0x0c
    14f0:	9d 85       	ldd	r25, Y+13	; 0x0d
    14f2:	48 96       	adiw	r24, 0x18	; 24
    14f4:	0e 94 e4 25 	call	0x4bc8	; 0x4bc8 <atol>
    14f8:	dc 01       	movw	r26, r24
    14fa:	cb 01       	movw	r24, r22
    14fc:	88 8f       	std	Y+24, r24	; 0x18
    14fe:	88 8d       	ldd	r24, Y+24	; 0x18
    1500:	89 8f       	std	Y+25, r24	; 0x19
    1502:	85 e0       	ldi	r24, 0x05	; 5
    1504:	90 e0       	ldi	r25, 0x00	; 0
    1506:	8a 8f       	std	Y+26, r24	; 0x1a
    1508:	9b 8f       	std	Y+27, r25	; 0x1b
    150a:	84 e1       	ldi	r24, 0x14	; 20
    150c:	90 e0       	ldi	r25, 0x00	; 0
    150e:	8c 8f       	std	Y+28, r24	; 0x1c
    1510:	9d 8f       	std	Y+29, r25	; 0x1d
    1512:	89 8d       	ldd	r24, Y+25	; 0x19
    1514:	28 2f       	mov	r18, r24
    1516:	30 e0       	ldi	r19, 0x00	; 0
    1518:	8c 8d       	ldd	r24, Y+28	; 0x1c
    151a:	9d 8d       	ldd	r25, Y+29	; 0x1d
    151c:	82 17       	cp	r24, r18
    151e:	93 07       	cpc	r25, r19
    1520:	54 f0       	brlt	.+20     	; 0x1536 <_Z17handleLinkBusMsgsv+0x826>
    1522:	89 8d       	ldd	r24, Y+25	; 0x19
    1524:	88 2f       	mov	r24, r24
    1526:	90 e0       	ldi	r25, 0x00	; 0
    1528:	2a 8d       	ldd	r18, Y+26	; 0x1a
    152a:	3b 8d       	ldd	r19, Y+27	; 0x1b
    152c:	82 17       	cp	r24, r18
    152e:	93 07       	cpc	r25, r19
    1530:	24 f4       	brge	.+8      	; 0x153a <_Z17handleLinkBusMsgsv+0x82a>
    1532:	c9 01       	movw	r24, r18
    1534:	02 c0       	rjmp	.+4      	; 0x153a <_Z17handleLinkBusMsgsv+0x82a>
    1536:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1538:	9d 8d       	ldd	r25, Y+29	; 0x1d
    153a:	80 93 0b 40 	sts	0x400B, r24	; 0x80400b <g_id_codespeed>
    153e:	80 91 8a 41 	lds	r24, 0x418A	; 0x80418a <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    1542:	8f 5f       	subi	r24, 0xFF	; 255
    1544:	80 93 8a 41 	sts	0x418A, r24	; 0x80418a <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    1548:	80 91 4a 41 	lds	r24, 0x414A	; 0x80414a <g_messages_text+0x15>
    154c:	88 23       	and	r24, r24
    154e:	09 f4       	brne	.+2      	; 0x1552 <_Z17handleLinkBusMsgsv+0x842>
    1550:	73 c2       	rjmp	.+1254   	; 0x1a38 <_Z17handleLinkBusMsgsv+0xd28>
    1552:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    1556:	88 2f       	mov	r24, r24
    1558:	90 e0       	ldi	r25, 0x00	; 0
    155a:	bc 01       	movw	r22, r24
    155c:	8a e4       	ldi	r24, 0x4A	; 74
    155e:	91 e4       	ldi	r25, 0x41	; 65
    1560:	0e 94 8e 17 	call	0x2f1c	; 0x2f1c <_Z26timeRequiredToSendStrAtWPMPcj>
    1564:	8c 50       	subi	r24, 0x0C	; 12
    1566:	9e 4f       	sbci	r25, 0xFE	; 254
    1568:	96 95       	lsr	r25
    156a:	87 95       	ror	r24
    156c:	96 95       	lsr	r25
    156e:	87 95       	ror	r24
    1570:	96 95       	lsr	r25
    1572:	87 95       	ror	r24
    1574:	9c 01       	movw	r18, r24
    1576:	a5 ec       	ldi	r26, 0xC5	; 197
    1578:	b0 e2       	ldi	r27, 0x20	; 32
    157a:	0e 94 7c 24 	call	0x48f8	; 0x48f8 <__umulhisi3>
    157e:	92 95       	swap	r25
    1580:	82 95       	swap	r24
    1582:	8f 70       	andi	r24, 0x0F	; 15
    1584:	89 27       	eor	r24, r25
    1586:	9f 70       	andi	r25, 0x0F	; 15
    1588:	89 27       	eor	r24, r25
    158a:	80 93 5f 41 	sts	0x415F, r24	; 0x80415f <g_time_needed_for_ID>
    158e:	90 93 60 41 	sts	0x4160, r25	; 0x804160 <g_time_needed_for_ID+0x1>
    1592:	52 c2       	rjmp	.+1188   	; 0x1a38 <_Z17handleLinkBusMsgsv+0xd28>
    1594:	8c 85       	ldd	r24, Y+12	; 0x0c
    1596:	9d 85       	ldd	r25, Y+13	; 0x0d
    1598:	fc 01       	movw	r30, r24
    159a:	83 81       	ldd	r24, Z+3	; 0x03
    159c:	80 35       	cpi	r24, 0x50	; 80
    159e:	09 f0       	breq	.+2      	; 0x15a2 <_Z17handleLinkBusMsgsv+0x892>
    15a0:	4b c2       	rjmp	.+1174   	; 0x1a38 <_Z17handleLinkBusMsgsv+0xd28>
    15a2:	8c 85       	ldd	r24, Y+12	; 0x0c
    15a4:	9d 85       	ldd	r25, Y+13	; 0x0d
    15a6:	fc 01       	movw	r30, r24
    15a8:	80 8d       	ldd	r24, Z+24	; 0x18
    15aa:	88 23       	and	r24, r24
    15ac:	09 f4       	brne	.+2      	; 0x15b0 <_Z17handleLinkBusMsgsv+0x8a0>
    15ae:	44 c2       	rjmp	.+1160   	; 0x1a38 <_Z17handleLinkBusMsgsv+0xd28>
    15b0:	8c 85       	ldd	r24, Y+12	; 0x0c
    15b2:	9d 85       	ldd	r25, Y+13	; 0x0d
    15b4:	48 96       	adiw	r24, 0x18	; 24
    15b6:	0e 94 e4 25 	call	0x4bc8	; 0x4bc8 <atol>
    15ba:	dc 01       	movw	r26, r24
    15bc:	cb 01       	movw	r24, r22
    15be:	88 8f       	std	Y+24, r24	; 0x18
    15c0:	88 8d       	ldd	r24, Y+24	; 0x18
    15c2:	8e 8f       	std	Y+30, r24	; 0x1e
    15c4:	85 e0       	ldi	r24, 0x05	; 5
    15c6:	90 e0       	ldi	r25, 0x00	; 0
    15c8:	8f 8f       	std	Y+31, r24	; 0x1f
    15ca:	98 a3       	std	Y+32, r25	; 0x20
    15cc:	84 e1       	ldi	r24, 0x14	; 20
    15ce:	90 e0       	ldi	r25, 0x00	; 0
    15d0:	89 a3       	std	Y+33, r24	; 0x21
    15d2:	9a a3       	std	Y+34, r25	; 0x22
    15d4:	8e 8d       	ldd	r24, Y+30	; 0x1e
    15d6:	28 2f       	mov	r18, r24
    15d8:	30 e0       	ldi	r19, 0x00	; 0
    15da:	89 a1       	ldd	r24, Y+33	; 0x21
    15dc:	9a a1       	ldd	r25, Y+34	; 0x22
    15de:	82 17       	cp	r24, r18
    15e0:	93 07       	cpc	r25, r19
    15e2:	54 f0       	brlt	.+20     	; 0x15f8 <_Z17handleLinkBusMsgsv+0x8e8>
    15e4:	8e 8d       	ldd	r24, Y+30	; 0x1e
    15e6:	88 2f       	mov	r24, r24
    15e8:	90 e0       	ldi	r25, 0x00	; 0
    15ea:	2f 8d       	ldd	r18, Y+31	; 0x1f
    15ec:	38 a1       	ldd	r19, Y+32	; 0x20
    15ee:	82 17       	cp	r24, r18
    15f0:	93 07       	cpc	r25, r19
    15f2:	24 f4       	brge	.+8      	; 0x15fc <_Z17handleLinkBusMsgsv+0x8ec>
    15f4:	c9 01       	movw	r24, r18
    15f6:	02 c0       	rjmp	.+4      	; 0x15fc <_Z17handleLinkBusMsgsv+0x8ec>
    15f8:	89 a1       	ldd	r24, Y+33	; 0x21
    15fa:	9a a1       	ldd	r25, Y+34	; 0x22
    15fc:	80 93 0c 40 	sts	0x400C, r24	; 0x80400c <g_pattern_codespeed>
    1600:	80 91 8a 41 	lds	r24, 0x418A	; 0x80418a <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    1604:	8f 5f       	subi	r24, 0xFF	; 255
    1606:	80 93 8a 41 	sts	0x418A, r24	; 0x80418a <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    160a:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    160e:	0e 94 3e 0d 	call	0x1a7c	; 0x1a7c <_Z13throttleValueh>
    1612:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    1616:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    161a:	0e c2       	rjmp	.+1052   	; 0x1a38 <_Z17handleLinkBusMsgsv+0xd28>
    161c:	1b a2       	std	Y+35, r1	; 0x23
    161e:	1c a2       	std	Y+36, r1	; 0x24
    1620:	8c 85       	ldd	r24, Y+12	; 0x0c
    1622:	9d 85       	ldd	r25, Y+13	; 0x0d
    1624:	fc 01       	movw	r30, r24
    1626:	83 81       	ldd	r24, Z+3	; 0x03
    1628:	80 33       	cpi	r24, 0x30	; 48
    162a:	e1 f4       	brne	.+56     	; 0x1664 <_Z17handleLinkBusMsgsv+0x954>
    162c:	8c 85       	ldd	r24, Y+12	; 0x0c
    162e:	9d 85       	ldd	r25, Y+13	; 0x0d
    1630:	fc 01       	movw	r30, r24
    1632:	80 8d       	ldd	r24, Z+24	; 0x18
    1634:	88 23       	and	r24, r24
    1636:	09 f4       	brne	.+2      	; 0x163a <_Z17handleLinkBusMsgsv+0x92a>
    1638:	01 c2       	rjmp	.+1026   	; 0x1a3c <_Z17handleLinkBusMsgsv+0xd2c>
    163a:	8c 85       	ldd	r24, Y+12	; 0x0c
    163c:	9d 85       	ldd	r25, Y+13	; 0x0d
    163e:	48 96       	adiw	r24, 0x18	; 24
    1640:	0e 94 e4 25 	call	0x4bc8	; 0x4bc8 <atol>
    1644:	dc 01       	movw	r26, r24
    1646:	cb 01       	movw	r24, r22
    1648:	8b a3       	std	Y+35, r24	; 0x23
    164a:	9c a3       	std	Y+36, r25	; 0x24
    164c:	8b a1       	ldd	r24, Y+35	; 0x23
    164e:	9c a1       	ldd	r25, Y+36	; 0x24
    1650:	80 93 0f 40 	sts	0x400F, r24	; 0x80400f <g_off_air_seconds>
    1654:	90 93 10 40 	sts	0x4010, r25	; 0x804010 <g_off_air_seconds+0x1>
    1658:	80 91 8a 41 	lds	r24, 0x418A	; 0x80418a <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    165c:	8f 5f       	subi	r24, 0xFF	; 255
    165e:	80 93 8a 41 	sts	0x418A, r24	; 0x80418a <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    1662:	ec c1       	rjmp	.+984    	; 0x1a3c <_Z17handleLinkBusMsgsv+0xd2c>
    1664:	8c 85       	ldd	r24, Y+12	; 0x0c
    1666:	9d 85       	ldd	r25, Y+13	; 0x0d
    1668:	fc 01       	movw	r30, r24
    166a:	83 81       	ldd	r24, Z+3	; 0x03
    166c:	81 33       	cpi	r24, 0x31	; 49
    166e:	e1 f4       	brne	.+56     	; 0x16a8 <_Z17handleLinkBusMsgsv+0x998>
    1670:	8c 85       	ldd	r24, Y+12	; 0x0c
    1672:	9d 85       	ldd	r25, Y+13	; 0x0d
    1674:	fc 01       	movw	r30, r24
    1676:	80 8d       	ldd	r24, Z+24	; 0x18
    1678:	88 23       	and	r24, r24
    167a:	09 f4       	brne	.+2      	; 0x167e <_Z17handleLinkBusMsgsv+0x96e>
    167c:	df c1       	rjmp	.+958    	; 0x1a3c <_Z17handleLinkBusMsgsv+0xd2c>
    167e:	8c 85       	ldd	r24, Y+12	; 0x0c
    1680:	9d 85       	ldd	r25, Y+13	; 0x0d
    1682:	48 96       	adiw	r24, 0x18	; 24
    1684:	0e 94 e4 25 	call	0x4bc8	; 0x4bc8 <atol>
    1688:	dc 01       	movw	r26, r24
    168a:	cb 01       	movw	r24, r22
    168c:	8b a3       	std	Y+35, r24	; 0x23
    168e:	9c a3       	std	Y+36, r25	; 0x24
    1690:	8b a1       	ldd	r24, Y+35	; 0x23
    1692:	9c a1       	ldd	r25, Y+36	; 0x24
    1694:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_on_air_seconds>
    1698:	90 93 0e 40 	sts	0x400E, r25	; 0x80400e <g_on_air_seconds+0x1>
    169c:	80 91 8a 41 	lds	r24, 0x418A	; 0x80418a <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    16a0:	8f 5f       	subi	r24, 0xFF	; 255
    16a2:	80 93 8a 41 	sts	0x418A, r24	; 0x80418a <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    16a6:	ca c1       	rjmp	.+916    	; 0x1a3c <_Z17handleLinkBusMsgsv+0xd2c>
    16a8:	8c 85       	ldd	r24, Y+12	; 0x0c
    16aa:	9d 85       	ldd	r25, Y+13	; 0x0d
    16ac:	fc 01       	movw	r30, r24
    16ae:	83 81       	ldd	r24, Z+3	; 0x03
    16b0:	89 34       	cpi	r24, 0x49	; 73
    16b2:	e1 f4       	brne	.+56     	; 0x16ec <_Z17handleLinkBusMsgsv+0x9dc>
    16b4:	8c 85       	ldd	r24, Y+12	; 0x0c
    16b6:	9d 85       	ldd	r25, Y+13	; 0x0d
    16b8:	fc 01       	movw	r30, r24
    16ba:	80 8d       	ldd	r24, Z+24	; 0x18
    16bc:	88 23       	and	r24, r24
    16be:	09 f4       	brne	.+2      	; 0x16c2 <_Z17handleLinkBusMsgsv+0x9b2>
    16c0:	bd c1       	rjmp	.+890    	; 0x1a3c <_Z17handleLinkBusMsgsv+0xd2c>
    16c2:	8c 85       	ldd	r24, Y+12	; 0x0c
    16c4:	9d 85       	ldd	r25, Y+13	; 0x0d
    16c6:	48 96       	adiw	r24, 0x18	; 24
    16c8:	0e 94 e4 25 	call	0x4bc8	; 0x4bc8 <atol>
    16cc:	dc 01       	movw	r26, r24
    16ce:	cb 01       	movw	r24, r22
    16d0:	8b a3       	std	Y+35, r24	; 0x23
    16d2:	9c a3       	std	Y+36, r25	; 0x24
    16d4:	8b a1       	ldd	r24, Y+35	; 0x23
    16d6:	9c a1       	ldd	r25, Y+36	; 0x24
    16d8:	80 93 11 40 	sts	0x4011, r24	; 0x804011 <g_ID_period_seconds>
    16dc:	90 93 12 40 	sts	0x4012, r25	; 0x804012 <g_ID_period_seconds+0x1>
    16e0:	80 91 8a 41 	lds	r24, 0x418A	; 0x80418a <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    16e4:	8f 5f       	subi	r24, 0xFF	; 255
    16e6:	80 93 8a 41 	sts	0x418A, r24	; 0x80418a <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    16ea:	a8 c1       	rjmp	.+848    	; 0x1a3c <_Z17handleLinkBusMsgsv+0xd2c>
    16ec:	8c 85       	ldd	r24, Y+12	; 0x0c
    16ee:	9d 85       	ldd	r25, Y+13	; 0x0d
    16f0:	fc 01       	movw	r30, r24
    16f2:	83 81       	ldd	r24, Z+3	; 0x03
    16f4:	84 34       	cpi	r24, 0x44	; 68
    16f6:	09 f0       	breq	.+2      	; 0x16fa <_Z17handleLinkBusMsgsv+0x9ea>
    16f8:	a1 c1       	rjmp	.+834    	; 0x1a3c <_Z17handleLinkBusMsgsv+0xd2c>
    16fa:	8c 85       	ldd	r24, Y+12	; 0x0c
    16fc:	9d 85       	ldd	r25, Y+13	; 0x0d
    16fe:	fc 01       	movw	r30, r24
    1700:	80 8d       	ldd	r24, Z+24	; 0x18
    1702:	88 23       	and	r24, r24
    1704:	09 f4       	brne	.+2      	; 0x1708 <_Z17handleLinkBusMsgsv+0x9f8>
    1706:	9a c1       	rjmp	.+820    	; 0x1a3c <_Z17handleLinkBusMsgsv+0xd2c>
    1708:	8c 85       	ldd	r24, Y+12	; 0x0c
    170a:	9d 85       	ldd	r25, Y+13	; 0x0d
    170c:	48 96       	adiw	r24, 0x18	; 24
    170e:	0e 94 e4 25 	call	0x4bc8	; 0x4bc8 <atol>
    1712:	dc 01       	movw	r26, r24
    1714:	cb 01       	movw	r24, r22
    1716:	8b a3       	std	Y+35, r24	; 0x23
    1718:	9c a3       	std	Y+36, r25	; 0x24
    171a:	8b a1       	ldd	r24, Y+35	; 0x23
    171c:	9c a1       	ldd	r25, Y+36	; 0x24
    171e:	80 93 61 41 	sts	0x4161, r24	; 0x804161 <g_intra_cycle_delay_time>
    1722:	90 93 62 41 	sts	0x4162, r25	; 0x804162 <g_intra_cycle_delay_time+0x1>
    1726:	80 91 8a 41 	lds	r24, 0x418A	; 0x80418a <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    172a:	8f 5f       	subi	r24, 0xFF	; 255
    172c:	80 93 8a 41 	sts	0x418A, r24	; 0x80418a <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    1730:	85 c1       	rjmp	.+778    	; 0x1a3c <_Z17handleLinkBusMsgsv+0xd2c>
    1732:	8c 85       	ldd	r24, Y+12	; 0x0c
    1734:	9d 85       	ldd	r25, Y+13	; 0x0d
    1736:	fc 01       	movw	r30, r24
    1738:	83 81       	ldd	r24, Z+3	; 0x03
    173a:	88 23       	and	r24, r24
    173c:	09 f4       	brne	.+2      	; 0x1740 <_Z17handleLinkBusMsgsv+0xa30>
    173e:	80 c1       	rjmp	.+768    	; 0x1a40 <_Z17handleLinkBusMsgsv+0xd30>
    1740:	8c 85       	ldd	r24, Y+12	; 0x0c
    1742:	9d 85       	ldd	r25, Y+13	; 0x0d
    1744:	03 96       	adiw	r24, 0x03	; 3
    1746:	44 e1       	ldi	r20, 0x14	; 20
    1748:	50 e0       	ldi	r21, 0x00	; 0
    174a:	bc 01       	movw	r22, r24
    174c:	85 e3       	ldi	r24, 0x35	; 53
    174e:	91 e4       	ldi	r25, 0x41	; 65
    1750:	0e 94 13 26 	call	0x4c26	; 0x4c26 <strncpy>
    1754:	80 91 8a 41 	lds	r24, 0x418A	; 0x80418a <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    1758:	8f 5f       	subi	r24, 0xFF	; 255
    175a:	80 93 8a 41 	sts	0x418A, r24	; 0x80418a <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    175e:	70 c1       	rjmp	.+736    	; 0x1a40 <_Z17handleLinkBusMsgsv+0xd30>
    1760:	1e 82       	std	Y+6, r1	; 0x06
    1762:	1f 82       	std	Y+7, r1	; 0x07
    1764:	18 86       	std	Y+8, r1	; 0x08
    1766:	19 86       	std	Y+9, r1	; 0x09
    1768:	8c 85       	ldd	r24, Y+12	; 0x0c
    176a:	9d 85       	ldd	r25, Y+13	; 0x0d
    176c:	fc 01       	movw	r30, r24
    176e:	83 81       	ldd	r24, Z+3	; 0x03
    1770:	88 23       	and	r24, r24
    1772:	a9 f1       	breq	.+106    	; 0x17de <_Z17handleLinkBusMsgsv+0xace>
    1774:	8c 85       	ldd	r24, Y+12	; 0x0c
    1776:	9d 85       	ldd	r25, Y+13	; 0x0d
    1778:	03 96       	adiw	r24, 0x03	; 3
    177a:	0e 94 e4 25 	call	0x4bc8	; 0x4bc8 <atol>
    177e:	dc 01       	movw	r26, r24
    1780:	cb 01       	movw	r24, r22
    1782:	80 93 90 41 	sts	0x4190, r24	; 0x804190 <_ZZ17handleLinkBusMsgsvE1f>
    1786:	90 93 91 41 	sts	0x4191, r25	; 0x804191 <_ZZ17handleLinkBusMsgsvE1f+0x1>
    178a:	a0 93 92 41 	sts	0x4192, r26	; 0x804192 <_ZZ17handleLinkBusMsgsvE1f+0x2>
    178e:	b0 93 93 41 	sts	0x4193, r27	; 0x804193 <_ZZ17handleLinkBusMsgsvE1f+0x3>
    1792:	80 91 90 41 	lds	r24, 0x4190	; 0x804190 <_ZZ17handleLinkBusMsgsvE1f>
    1796:	90 91 91 41 	lds	r25, 0x4191	; 0x804191 <_ZZ17handleLinkBusMsgsvE1f+0x1>
    179a:	a0 91 92 41 	lds	r26, 0x4192	; 0x804192 <_ZZ17handleLinkBusMsgsvE1f+0x2>
    179e:	b0 91 93 41 	lds	r27, 0x4193	; 0x804193 <_ZZ17handleLinkBusMsgsvE1f+0x3>
    17a2:	88 ab       	std	Y+48, r24	; 0x30
    17a4:	99 ab       	std	Y+49, r25	; 0x31
    17a6:	aa ab       	std	Y+50, r26	; 0x32
    17a8:	bb ab       	std	Y+51, r27	; 0x33
    17aa:	ce 01       	movw	r24, r28
    17ac:	c0 96       	adiw	r24, 0x30	; 48
    17ae:	61 e0       	ldi	r22, 0x01	; 1
    17b0:	0e 94 7c 1f 	call	0x3ef8	; 0x3ef8 <_Z14txSetFrequencyPmh>
    17b4:	98 2f       	mov	r25, r24
    17b6:	81 e0       	ldi	r24, 0x01	; 1
    17b8:	99 23       	and	r25, r25
    17ba:	09 f4       	brne	.+2      	; 0x17be <_Z17handleLinkBusMsgsv+0xaae>
    17bc:	80 e0       	ldi	r24, 0x00	; 0
    17be:	88 23       	and	r24, r24
    17c0:	b1 f0       	breq	.+44     	; 0x17ee <_Z17handleLinkBusMsgsv+0xade>
    17c2:	88 a9       	ldd	r24, Y+48	; 0x30
    17c4:	99 a9       	ldd	r25, Y+49	; 0x31
    17c6:	aa a9       	ldd	r26, Y+50	; 0x32
    17c8:	bb a9       	ldd	r27, Y+51	; 0x33
    17ca:	8e 83       	std	Y+6, r24	; 0x06
    17cc:	9f 83       	std	Y+7, r25	; 0x07
    17ce:	a8 87       	std	Y+8, r26	; 0x08
    17d0:	b9 87       	std	Y+9, r27	; 0x09
    17d2:	80 91 8a 41 	lds	r24, 0x418A	; 0x80418a <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    17d6:	8f 5f       	subi	r24, 0xFF	; 255
    17d8:	80 93 8a 41 	sts	0x418A, r24	; 0x80418a <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    17dc:	08 c0       	rjmp	.+16     	; 0x17ee <_Z17handleLinkBusMsgsv+0xade>
    17de:	0e 94 aa 1f 	call	0x3f54	; 0x3f54 <_Z14txGetFrequencyv>
    17e2:	dc 01       	movw	r26, r24
    17e4:	cb 01       	movw	r24, r22
    17e6:	8e 83       	std	Y+6, r24	; 0x06
    17e8:	9f 83       	std	Y+7, r25	; 0x07
    17ea:	a8 87       	std	Y+8, r26	; 0x08
    17ec:	b9 87       	std	Y+9, r27	; 0x09
    17ee:	8e 81       	ldd	r24, Y+6	; 0x06
    17f0:	9f 81       	ldd	r25, Y+7	; 0x07
    17f2:	a8 85       	ldd	r26, Y+8	; 0x08
    17f4:	b9 85       	ldd	r27, Y+9	; 0x09
    17f6:	89 2b       	or	r24, r25
    17f8:	8a 2b       	or	r24, r26
    17fa:	8b 2b       	or	r24, r27
    17fc:	09 f4       	brne	.+2      	; 0x1800 <_Z17handleLinkBusMsgsv+0xaf0>
    17fe:	22 c1       	rjmp	.+580    	; 0x1a44 <_Z17handleLinkBusMsgsv+0xd34>
    1800:	89 85       	ldd	r24, Y+9	; 0x09
    1802:	8f 93       	push	r24
    1804:	88 85       	ldd	r24, Y+8	; 0x08
    1806:	8f 93       	push	r24
    1808:	8f 81       	ldd	r24, Y+7	; 0x07
    180a:	8f 93       	push	r24
    180c:	8e 81       	ldd	r24, Y+6	; 0x06
    180e:	8f 93       	push	r24
    1810:	8f e5       	ldi	r24, 0x5F	; 95
    1812:	90 e4       	ldi	r25, 0x40	; 64
    1814:	89 2f       	mov	r24, r25
    1816:	8f 93       	push	r24
    1818:	8f e5       	ldi	r24, 0x5F	; 95
    181a:	90 e4       	ldi	r25, 0x40	; 64
    181c:	8f 93       	push	r24
    181e:	81 e1       	ldi	r24, 0x11	; 17
    1820:	91 e4       	ldi	r25, 0x41	; 65
    1822:	89 2f       	mov	r24, r25
    1824:	8f 93       	push	r24
    1826:	81 e1       	ldi	r24, 0x11	; 17
    1828:	91 e4       	ldi	r25, 0x41	; 65
    182a:	8f 93       	push	r24
    182c:	0e 94 3f 26 	call	0x4c7e	; 0x4c7e <sprintf>
    1830:	2d b7       	in	r18, 0x3d	; 61
    1832:	3e b7       	in	r19, 0x3e	; 62
    1834:	28 5f       	subi	r18, 0xF8	; 248
    1836:	3f 4f       	sbci	r19, 0xFF	; 255
    1838:	cd bf       	out	0x3d, r28	; 61
    183a:	de bf       	out	0x3e, r29	; 62
    183c:	41 e1       	ldi	r20, 0x11	; 17
    183e:	51 e4       	ldi	r21, 0x41	; 65
    1840:	64 e6       	ldi	r22, 0x64	; 100
    1842:	70 e4       	ldi	r23, 0x40	; 64
    1844:	83 e0       	ldi	r24, 0x03	; 3
    1846:	0e 94 2a 15 	call	0x2a54	; 0x2a54 <_Z11lb_send_msg13LBMessageTypePKcPc>
    184a:	fc c0       	rjmp	.+504    	; 0x1a44 <_Z17handleLinkBusMsgsv+0xd34>
    184c:	80 91 75 41 	lds	r24, 0x4175	; 0x804175 <_ZL22g_lastConversionResult>
    1850:	90 91 76 41 	lds	r25, 0x4176	; 0x804176 <_ZL22g_lastConversionResult+0x1>
    1854:	21 e0       	ldi	r18, 0x01	; 1
    1856:	8d 38       	cpi	r24, 0x8D	; 141
    1858:	92 40       	sbci	r25, 0x02	; 2
    185a:	08 f4       	brcc	.+2      	; 0x185e <_Z17handleLinkBusMsgsv+0xb4e>
    185c:	20 e0       	ldi	r18, 0x00	; 0
    185e:	22 23       	and	r18, r18
    1860:	09 f4       	brne	.+2      	; 0x1864 <_Z17handleLinkBusMsgsv+0xb54>
    1862:	7c c0       	rjmp	.+248    	; 0x195c <_Z17handleLinkBusMsgsv+0xc4c>
    1864:	80 91 75 41 	lds	r24, 0x4175	; 0x804175 <_ZL22g_lastConversionResult>
    1868:	90 91 76 41 	lds	r25, 0x4176	; 0x804176 <_ZL22g_lastConversionResult+0x1>
    186c:	cc 01       	movw	r24, r24
    186e:	a0 e0       	ldi	r26, 0x00	; 0
    1870:	b0 e0       	ldi	r27, 0x00	; 0
    1872:	9c 01       	movw	r18, r24
    1874:	ad 01       	movw	r20, r26
    1876:	60 ea       	ldi	r22, 0xA0	; 160
    1878:	78 e6       	ldi	r23, 0x68	; 104
    187a:	86 e0       	ldi	r24, 0x06	; 6
    187c:	90 e0       	ldi	r25, 0x00	; 0
    187e:	0e 94 fa 23 	call	0x47f4	; 0x47f4 <__mulsi3>
    1882:	dc 01       	movw	r26, r24
    1884:	cb 01       	movw	r24, r22
    1886:	7c 01       	movw	r14, r24
    1888:	8d 01       	movw	r16, r26
    188a:	ed e7       	ldi	r30, 0x7D	; 125
    188c:	fe 1a       	sub	r15, r30
    188e:	0c 40       	sbci	r16, 0x0C	; 12
    1890:	1e 4f       	sbci	r17, 0xFE	; 254
    1892:	80 91 13 40 	lds	r24, 0x4013	; 0x804013 <g_battery_empty_mV>
    1896:	90 91 14 40 	lds	r25, 0x4014	; 0x804014 <g_battery_empty_mV+0x1>
    189a:	cc 01       	movw	r24, r24
    189c:	a0 e0       	ldi	r26, 0x00	; 0
    189e:	b0 e0       	ldi	r27, 0x00	; 0
    18a0:	9c 01       	movw	r18, r24
    18a2:	ad 01       	movw	r20, r26
    18a4:	64 e6       	ldi	r22, 0x64	; 100
    18a6:	70 e7       	ldi	r23, 0x70	; 112
    18a8:	8e ef       	ldi	r24, 0xFE	; 254
    18aa:	9f ef       	ldi	r25, 0xFF	; 255
    18ac:	0e 94 fa 23 	call	0x47f4	; 0x47f4 <__mulsi3>
    18b0:	dc 01       	movw	r26, r24
    18b2:	cb 01       	movw	r24, r22
    18b4:	e8 0e       	add	r14, r24
    18b6:	f9 1e       	adc	r15, r25
    18b8:	0a 1f       	adc	r16, r26
    18ba:	1b 1f       	adc	r17, r27
    18bc:	80 91 13 40 	lds	r24, 0x4013	; 0x804013 <g_battery_empty_mV>
    18c0:	90 91 14 40 	lds	r25, 0x4014	; 0x804014 <g_battery_empty_mV+0x1>
    18c4:	cc 01       	movw	r24, r24
    18c6:	a0 e0       	ldi	r26, 0x00	; 0
    18c8:	b0 e0       	ldi	r27, 0x00	; 0
    18ca:	28 e6       	ldi	r18, 0x68	; 104
    18cc:	30 e1       	ldi	r19, 0x10	; 16
    18ce:	40 e0       	ldi	r20, 0x00	; 0
    18d0:	50 e0       	ldi	r21, 0x00	; 0
    18d2:	28 1b       	sub	r18, r24
    18d4:	39 0b       	sbc	r19, r25
    18d6:	4a 0b       	sbc	r20, r26
    18d8:	5b 0b       	sbc	r21, r27
    18da:	8f ef       	ldi	r24, 0xFF	; 255
    18dc:	93 e0       	ldi	r25, 0x03	; 3
    18de:	dc 01       	movw	r26, r24
    18e0:	0e 94 92 24 	call	0x4924	; 0x4924 <__muluhisi3>
    18e4:	9b 01       	movw	r18, r22
    18e6:	ac 01       	movw	r20, r24
    18e8:	c8 01       	movw	r24, r16
    18ea:	b7 01       	movw	r22, r14
    18ec:	0e 94 54 24 	call	0x48a8	; 0x48a8 <__divmodsi4>
    18f0:	da 01       	movw	r26, r20
    18f2:	c9 01       	movw	r24, r18
    18f4:	8d a3       	std	Y+37, r24	; 0x25
    18f6:	9e a3       	std	Y+38, r25	; 0x26
    18f8:	af a3       	std	Y+39, r26	; 0x27
    18fa:	b8 a7       	std	Y+40, r27	; 0x28
    18fc:	19 a6       	std	Y+41, r1	; 0x29
    18fe:	1a a6       	std	Y+42, r1	; 0x2a
    1900:	84 e6       	ldi	r24, 0x64	; 100
    1902:	90 e0       	ldi	r25, 0x00	; 0
    1904:	8b a7       	std	Y+43, r24	; 0x2b
    1906:	9c a7       	std	Y+44, r25	; 0x2c
    1908:	8b a5       	ldd	r24, Y+43	; 0x2b
    190a:	9c a5       	ldd	r25, Y+44	; 0x2c
    190c:	9c 01       	movw	r18, r24
    190e:	99 0f       	add	r25, r25
    1910:	44 0b       	sbc	r20, r20
    1912:	55 0b       	sbc	r21, r21
    1914:	8d a1       	ldd	r24, Y+37	; 0x25
    1916:	9e a1       	ldd	r25, Y+38	; 0x26
    1918:	af a1       	ldd	r26, Y+39	; 0x27
    191a:	b8 a5       	ldd	r27, Y+40	; 0x28
    191c:	28 17       	cp	r18, r24
    191e:	39 07       	cpc	r19, r25
    1920:	4a 07       	cpc	r20, r26
    1922:	5b 07       	cpc	r21, r27
    1924:	3c f4       	brge	.+14     	; 0x1934 <_Z17handleLinkBusMsgsv+0xc24>
    1926:	8b a5       	ldd	r24, Y+43	; 0x2b
    1928:	9c a5       	ldd	r25, Y+44	; 0x2c
    192a:	09 2e       	mov	r0, r25
    192c:	00 0c       	add	r0, r0
    192e:	aa 0b       	sbc	r26, r26
    1930:	bb 0b       	sbc	r27, r27
    1932:	11 c0       	rjmp	.+34     	; 0x1956 <_Z17handleLinkBusMsgsv+0xc46>
    1934:	89 a5       	ldd	r24, Y+41	; 0x29
    1936:	9a a5       	ldd	r25, Y+42	; 0x2a
    1938:	09 2e       	mov	r0, r25
    193a:	00 0c       	add	r0, r0
    193c:	aa 0b       	sbc	r26, r26
    193e:	bb 0b       	sbc	r27, r27
    1940:	2d a1       	ldd	r18, Y+37	; 0x25
    1942:	3e a1       	ldd	r19, Y+38	; 0x26
    1944:	4f a1       	ldd	r20, Y+39	; 0x27
    1946:	58 a5       	ldd	r21, Y+40	; 0x28
    1948:	82 17       	cp	r24, r18
    194a:	93 07       	cpc	r25, r19
    194c:	a4 07       	cpc	r26, r20
    194e:	b5 07       	cpc	r27, r21
    1950:	14 f4       	brge	.+4      	; 0x1956 <_Z17handleLinkBusMsgsv+0xc46>
    1952:	da 01       	movw	r26, r20
    1954:	c9 01       	movw	r24, r18
    1956:	8a 87       	std	Y+10, r24	; 0x0a
    1958:	9b 87       	std	Y+11, r25	; 0x0b
    195a:	2f c0       	rjmp	.+94     	; 0x19ba <_Z17handleLinkBusMsgsv+0xcaa>
    195c:	80 91 79 41 	lds	r24, 0x4179	; 0x804179 <_ZL22g_lastConversionResult+0x4>
    1960:	90 91 7a 41 	lds	r25, 0x417A	; 0x80417a <_ZL22g_lastConversionResult+0x5>
    1964:	9c 01       	movw	r18, r24
    1966:	40 e0       	ldi	r20, 0x00	; 0
    1968:	50 e0       	ldi	r21, 0x00	; 0
    196a:	da 01       	movw	r26, r20
    196c:	c9 01       	movw	r24, r18
    196e:	88 0f       	add	r24, r24
    1970:	99 1f       	adc	r25, r25
    1972:	aa 1f       	adc	r26, r26
    1974:	bb 1f       	adc	r27, r27
    1976:	88 0f       	add	r24, r24
    1978:	99 1f       	adc	r25, r25
    197a:	aa 1f       	adc	r26, r26
    197c:	bb 1f       	adc	r27, r27
    197e:	88 0f       	add	r24, r24
    1980:	99 1f       	adc	r25, r25
    1982:	aa 1f       	adc	r26, r26
    1984:	bb 1f       	adc	r27, r27
    1986:	82 1b       	sub	r24, r18
    1988:	93 0b       	sbc	r25, r19
    198a:	a4 0b       	sbc	r26, r20
    198c:	b5 0b       	sbc	r27, r21
    198e:	88 0f       	add	r24, r24
    1990:	99 1f       	adc	r25, r25
    1992:	aa 1f       	adc	r26, r26
    1994:	bb 1f       	adc	r27, r27
    1996:	8a 5c       	subi	r24, 0xCA	; 202
    1998:	9e 4f       	sbci	r25, 0xFE	; 254
    199a:	af 4f       	sbci	r26, 0xFF	; 255
    199c:	bf 4f       	sbci	r27, 0xFF	; 255
    199e:	24 e6       	ldi	r18, 0x64	; 100
    19a0:	30 e0       	ldi	r19, 0x00	; 0
    19a2:	40 e0       	ldi	r20, 0x00	; 0
    19a4:	50 e0       	ldi	r21, 0x00	; 0
    19a6:	bc 01       	movw	r22, r24
    19a8:	cd 01       	movw	r24, r26
    19aa:	0e 94 54 24 	call	0x48a8	; 0x48a8 <__divmodsi4>
    19ae:	da 01       	movw	r26, r20
    19b0:	c9 01       	movw	r24, r18
    19b2:	80 5f       	subi	r24, 0xF0	; 240
    19b4:	98 4d       	sbci	r25, 0xD8	; 216
    19b6:	8a 87       	std	Y+10, r24	; 0x0a
    19b8:	9b 87       	std	Y+11, r25	; 0x0b
    19ba:	8a 85       	ldd	r24, Y+10	; 0x0a
    19bc:	9b 85       	ldd	r25, Y+11	; 0x0b
    19be:	68 e6       	ldi	r22, 0x68	; 104
    19c0:	70 e4       	ldi	r23, 0x40	; 64
    19c2:	0e 94 52 15 	call	0x2aa4	; 0x2aa4 <_Z16lb_broadcast_numjPKc>
    19c6:	80 e0       	ldi	r24, 0x00	; 0
    19c8:	90 e0       	ldi	r25, 0x00	; 0
    19ca:	0e 94 c8 0f 	call	0x1f90	; 0x1f90 <_Z16ds3231_get_epochP2EC>
    19ce:	dc 01       	movw	r26, r24
    19d0:	cb 01       	movw	r24, r22
    19d2:	bc 01       	movw	r22, r24
    19d4:	cd 01       	movw	r24, r26
    19d6:	0e 94 0c 01 	call	0x218	; 0x218 <set_system_time>
    19da:	37 c0       	rjmp	.+110    	; 0x1a4a <_Z17handleLinkBusMsgsv+0xd3a>
    19dc:	ce 01       	movw	r24, r28
    19de:	c4 96       	adiw	r24, 0x34	; 52
    19e0:	0e 94 14 11 	call	0x2228	; 0x2228 <_Z15ds3231_get_tempPi>
    19e4:	98 2f       	mov	r25, r24
    19e6:	81 e0       	ldi	r24, 0x01	; 1
    19e8:	99 23       	and	r25, r25
    19ea:	09 f0       	breq	.+2      	; 0x19ee <_Z17handleLinkBusMsgsv+0xcde>
    19ec:	80 e0       	ldi	r24, 0x00	; 0
    19ee:	88 23       	and	r24, r24
    19f0:	59 f1       	breq	.+86     	; 0x1a48 <_Z17handleLinkBusMsgsv+0xd38>
    19f2:	8c a9       	ldd	r24, Y+52	; 0x34
    19f4:	9d a9       	ldd	r25, Y+53	; 0x35
    19f6:	6d e6       	ldi	r22, 0x6D	; 109
    19f8:	70 e4       	ldi	r23, 0x40	; 64
    19fa:	0e 94 52 15 	call	0x2aa4	; 0x2aa4 <_Z16lb_broadcast_numjPKc>
    19fe:	24 c0       	rjmp	.+72     	; 0x1a48 <_Z17handleLinkBusMsgsv+0xd38>
    1a00:	42 e7       	ldi	r20, 0x72	; 114
    1a02:	50 e4       	ldi	r21, 0x40	; 64
    1a04:	66 e7       	ldi	r22, 0x76	; 118
    1a06:	70 e4       	ldi	r23, 0x40	; 64
    1a08:	83 e0       	ldi	r24, 0x03	; 3
    1a0a:	0e 94 2a 15 	call	0x2a54	; 0x2a54 <_Z11lb_send_msg13LBMessageTypePKcPc>
    1a0e:	1d c0       	rjmp	.+58     	; 0x1a4a <_Z17handleLinkBusMsgsv+0xd3a>
    1a10:	0e 94 85 14 	call	0x290a	; 0x290a <_Z16linkbus_reset_rxv>
    1a14:	8e ec       	ldi	r24, 0xCE	; 206
    1a16:	80 93 26 41 	sts	0x4126, r24	; 0x804126 <_ZL17g_last_error_code>
    1a1a:	17 c0       	rjmp	.+46     	; 0x1a4a <_Z17handleLinkBusMsgsv+0xd3a>
    1a1c:	00 00       	nop
    1a1e:	15 c0       	rjmp	.+42     	; 0x1a4a <_Z17handleLinkBusMsgsv+0xd3a>
    1a20:	00 00       	nop
    1a22:	13 c0       	rjmp	.+38     	; 0x1a4a <_Z17handleLinkBusMsgsv+0xd3a>
    1a24:	00 00       	nop
    1a26:	11 c0       	rjmp	.+34     	; 0x1a4a <_Z17handleLinkBusMsgsv+0xd3a>
    1a28:	00 00       	nop
    1a2a:	0f c0       	rjmp	.+30     	; 0x1a4a <_Z17handleLinkBusMsgsv+0xd3a>
    1a2c:	00 00       	nop
    1a2e:	0d c0       	rjmp	.+26     	; 0x1a4a <_Z17handleLinkBusMsgsv+0xd3a>
    1a30:	00 00       	nop
    1a32:	0b c0       	rjmp	.+22     	; 0x1a4a <_Z17handleLinkBusMsgsv+0xd3a>
    1a34:	00 00       	nop
    1a36:	09 c0       	rjmp	.+18     	; 0x1a4a <_Z17handleLinkBusMsgsv+0xd3a>
    1a38:	00 00       	nop
    1a3a:	07 c0       	rjmp	.+14     	; 0x1a4a <_Z17handleLinkBusMsgsv+0xd3a>
    1a3c:	00 00       	nop
    1a3e:	05 c0       	rjmp	.+10     	; 0x1a4a <_Z17handleLinkBusMsgsv+0xd3a>
    1a40:	00 00       	nop
    1a42:	03 c0       	rjmp	.+6      	; 0x1a4a <_Z17handleLinkBusMsgsv+0xd3a>
    1a44:	00 00       	nop
    1a46:	01 c0       	rjmp	.+2      	; 0x1a4a <_Z17handleLinkBusMsgsv+0xd3a>
    1a48:	00 00       	nop
    1a4a:	8c 85       	ldd	r24, Y+12	; 0x0c
    1a4c:	9d 85       	ldd	r25, Y+13	; 0x0d
    1a4e:	fc 01       	movw	r30, r24
    1a50:	11 82       	std	Z+1, r1	; 0x01
    1a52:	12 82       	std	Z+2, r1	; 0x02
    1a54:	89 81       	ldd	r24, Y+1	; 0x01
    1a56:	88 23       	and	r24, r24
    1a58:	09 f4       	brne	.+2      	; 0x1a5c <_Z17handleLinkBusMsgsv+0xd4c>
    1a5a:	67 c9       	rjmp	.-3378   	; 0xd2a <_Z17handleLinkBusMsgsv+0x1a>
    1a5c:	8a e7       	ldi	r24, 0x7A	; 122
    1a5e:	90 e4       	ldi	r25, 0x40	; 64
    1a60:	0e 94 e9 14 	call	0x29d2	; 0x29d2 <_Z12lb_send_textPc>
    1a64:	62 c9       	rjmp	.-3388   	; 0xd2a <_Z17handleLinkBusMsgsv+0x1a>
    1a66:	00 00       	nop
    1a68:	e5 96       	adiw	r28, 0x35	; 53
    1a6a:	cd bf       	out	0x3d, r28	; 61
    1a6c:	de bf       	out	0x3e, r29	; 62
    1a6e:	df 91       	pop	r29
    1a70:	cf 91       	pop	r28
    1a72:	1f 91       	pop	r17
    1a74:	0f 91       	pop	r16
    1a76:	ff 90       	pop	r15
    1a78:	ef 90       	pop	r14
    1a7a:	08 95       	ret

00001a7c <_Z13throttleValueh>:
    1a7c:	80 e0       	ldi	r24, 0x00	; 0
    1a7e:	90 e0       	ldi	r25, 0x00	; 0
    1a80:	08 95       	ret

00001a82 <_Z11launchEventP2SC>:

EC launchEvent(SC* statusCode)
{
	return ERROR_CODE_NO_ERROR;
}
    1a82:	80 e0       	ldi	r24, 0x00	; 0
    1a84:	08 95       	ret

00001a86 <_ZL9PORT_initv>:
	}
	
	ADC0.MUXPOS = holdMux; /* Restore ADC registers */
	
	return(temperature_in_C);
}
    1a86:	e0 e6       	ldi	r30, 0x60	; 96
    1a88:	f4 e0       	ldi	r31, 0x04	; 4
    1a8a:	82 89       	ldd	r24, Z+18	; 0x12
    1a8c:	88 7f       	andi	r24, 0xF8	; 248
    1a8e:	82 8b       	std	Z+18, r24	; 0x12
    1a90:	82 89       	ldd	r24, Z+18	; 0x12
    1a92:	84 60       	ori	r24, 0x04	; 4
    1a94:	82 8b       	std	Z+18, r24	; 0x12
    1a96:	83 89       	ldd	r24, Z+19	; 0x13
    1a98:	88 7f       	andi	r24, 0xF8	; 248
    1a9a:	83 8b       	std	Z+19, r24	; 0x13
    1a9c:	83 89       	ldd	r24, Z+19	; 0x13
    1a9e:	84 60       	ori	r24, 0x04	; 4
    1aa0:	83 8b       	std	Z+19, r24	; 0x13
    1aa2:	84 89       	ldd	r24, Z+20	; 0x14
    1aa4:	88 7f       	andi	r24, 0xF8	; 248
    1aa6:	84 8b       	std	Z+20, r24	; 0x14
    1aa8:	84 89       	ldd	r24, Z+20	; 0x14
    1aaa:	84 60       	ori	r24, 0x04	; 4
    1aac:	84 8b       	std	Z+20, r24	; 0x14
    1aae:	85 89       	ldd	r24, Z+21	; 0x15
    1ab0:	88 7f       	andi	r24, 0xF8	; 248
    1ab2:	85 8b       	std	Z+21, r24	; 0x15
    1ab4:	85 89       	ldd	r24, Z+21	; 0x15
    1ab6:	84 60       	ori	r24, 0x04	; 4
    1ab8:	85 8b       	std	Z+21, r24	; 0x15
    1aba:	82 89       	ldd	r24, Z+18	; 0x12
    1abc:	87 7f       	andi	r24, 0xF7	; 247
    1abe:	82 8b       	std	Z+18, r24	; 0x12
    1ac0:	83 89       	ldd	r24, Z+19	; 0x13
    1ac2:	87 7f       	andi	r24, 0xF7	; 247
    1ac4:	83 8b       	std	Z+19, r24	; 0x13
    1ac6:	84 89       	ldd	r24, Z+20	; 0x14
    1ac8:	87 7f       	andi	r24, 0xF7	; 247
    1aca:	84 8b       	std	Z+20, r24	; 0x14
    1acc:	85 89       	ldd	r24, Z+21	; 0x15
    1ace:	87 7f       	andi	r24, 0xF7	; 247
    1ad0:	85 8b       	std	Z+21, r24	; 0x15
    1ad2:	08 95       	ret

00001ad4 <_ZL10VREF0_initv>:
    1ad4:	81 e0       	ldi	r24, 0x01	; 1
    1ad6:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7e00a0>
    1ada:	08 95       	ret

00001adc <_ZL9ADC0_initb>:
    1adc:	9a e0       	ldi	r25, 0x0A	; 10
    1ade:	90 93 02 06 	sts	0x0602, r25	; 0x800602 <__TEXT_REGION_LENGTH__+0x7e0602>
    1ae2:	88 23       	and	r24, r24
    1ae4:	41 f0       	breq	.+16     	; 0x1af6 <_ZL9ADC0_initb+0x1a>
    1ae6:	e0 e0       	ldi	r30, 0x00	; 0
    1ae8:	f6 e0       	ldi	r31, 0x06	; 6
    1aea:	83 e0       	ldi	r24, 0x03	; 3
    1aec:	80 83       	st	Z, r24
    1aee:	81 e0       	ldi	r24, 0x01	; 1
    1af0:	84 87       	std	Z+12, r24	; 0x0c
    1af2:	82 87       	std	Z+10, r24	; 0x0a
    1af4:	08 95       	ret
    1af6:	e0 e0       	ldi	r30, 0x00	; 0
    1af8:	f6 e0       	ldi	r31, 0x06	; 6
    1afa:	81 e0       	ldi	r24, 0x01	; 1
    1afc:	80 83       	st	Z, r24
    1afe:	14 86       	std	Z+12, r1	; 0x0c
    1b00:	08 95       	ret

00001b02 <_ZL16ADC0_SYSTEM_initb>:
    1b02:	cf 93       	push	r28
    1b04:	c8 2f       	mov	r28, r24
    1b06:	0e 94 43 0d 	call	0x1a86	; 0x1a86 <_ZL9PORT_initv>
    1b0a:	0e 94 6a 0d 	call	0x1ad4	; 0x1ad4 <_ZL10VREF0_initv>
    1b0e:	8c 2f       	mov	r24, r28
    1b10:	0e 94 6e 0d 	call	0x1adc	; 0x1adc <_ZL9ADC0_initb>
    1b14:	81 e0       	ldi	r24, 0x01	; 1
    1b16:	80 93 95 41 	sts	0x4195, r24	; 0x804195 <_ZL17g_adc_initialized>
    1b1a:	cf 91       	pop	r28
    1b1c:	08 95       	ret

00001b1e <_ZL20ADC0_SYSTEM_shutdownv>:
    1b1e:	e0 e0       	ldi	r30, 0x00	; 0
    1b20:	f6 e0       	ldi	r31, 0x06	; 6
    1b22:	14 86       	std	Z+12, r1	; 0x0c
    1b24:	10 82       	st	Z, r1
    1b26:	10 92 95 41 	sts	0x4195, r1	; 0x804195 <_ZL17g_adc_initialized>
    1b2a:	08 95       	ret

00001b2c <_Z41__static_initialization_and_destruction_0ii>:
    1b2c:	ef 92       	push	r14
    1b2e:	ff 92       	push	r15
    1b30:	0f 93       	push	r16
    1b32:	1f 93       	push	r17
    1b34:	cf 93       	push	r28
    1b36:	df 93       	push	r29
    1b38:	ec 01       	movw	r28, r24
    1b3a:	7b 01       	movw	r14, r22
    1b3c:	01 97       	sbiw	r24, 0x01	; 1
    1b3e:	79 f4       	brne	.+30     	; 0x1b5e <_Z41__static_initialization_and_destruction_0ii+0x32>
    1b40:	6f 3f       	cpi	r22, 0xFF	; 255
    1b42:	7f 4f       	sbci	r23, 0xFF	; 255
    1b44:	61 f4       	brne	.+24     	; 0x1b5e <_Z41__static_initialization_and_destruction_0ii+0x32>
    1b46:	00 e0       	ldi	r16, 0x00	; 0
    1b48:	10 e4       	ldi	r17, 0x40	; 64
    1b4a:	2c eb       	ldi	r18, 0xBC	; 188
    1b4c:	36 e4       	ldi	r19, 0x46	; 70
    1b4e:	40 e0       	ldi	r20, 0x00	; 0
    1b50:	50 e0       	ldi	r21, 0x00	; 0
    1b52:	69 e4       	ldi	r22, 0x49	; 73
    1b54:	73 e4       	ldi	r23, 0x43	; 67
    1b56:	84 e9       	ldi	r24, 0x94	; 148
    1b58:	91 e4       	ldi	r25, 0x41	; 65
    1b5a:	0e 94 e4 11 	call	0x23c8	; 0x23c8 <_ZN8GoertzelC1Eff>
    1b5e:	cd 2b       	or	r28, r29
    1b60:	39 f4       	brne	.+14     	; 0x1b70 <_Z41__static_initialization_and_destruction_0ii+0x44>
    1b62:	ef 20       	and	r14, r15
    1b64:	e0 94       	com	r14
    1b66:	21 f4       	brne	.+8      	; 0x1b70 <_Z41__static_initialization_and_destruction_0ii+0x44>
    1b68:	84 e9       	ldi	r24, 0x94	; 148
    1b6a:	91 e4       	ldi	r25, 0x41	; 65
    1b6c:	0e 94 34 12 	call	0x2468	; 0x2468 <_ZN8GoertzelD1Ev>
    1b70:	df 91       	pop	r29
    1b72:	cf 91       	pop	r28
    1b74:	1f 91       	pop	r17
    1b76:	0f 91       	pop	r16
    1b78:	ff 90       	pop	r15
    1b7a:	ef 90       	pop	r14
    1b7c:	08 95       	ret

00001b7e <_Z18ADC0_setADCChannel20ADC_Active_Channel_t>:
    1b7e:	83 30       	cpi	r24, 0x03	; 3
    1b80:	c9 f0       	breq	.+50     	; 0x1bb4 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x36>
    1b82:	28 f4       	brcc	.+10     	; 0x1b8e <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x10>
    1b84:	81 30       	cpi	r24, 0x01	; 1
    1b86:	41 f0       	breq	.+16     	; 0x1b98 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x1a>
    1b88:	82 30       	cpi	r24, 0x02	; 2
    1b8a:	69 f0       	breq	.+26     	; 0x1ba6 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x28>
    1b8c:	28 c0       	rjmp	.+80     	; 0x1bde <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x60>
    1b8e:	84 30       	cpi	r24, 0x04	; 4
    1b90:	c1 f0       	breq	.+48     	; 0x1bc2 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x44>
    1b92:	85 30       	cpi	r24, 0x05	; 5
    1b94:	e9 f0       	breq	.+58     	; 0x1bd0 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x52>
    1b96:	23 c0       	rjmp	.+70     	; 0x1bde <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x60>
    1b98:	81 e0       	ldi	r24, 0x01	; 1
    1b9a:	0e 94 81 0d 	call	0x1b02	; 0x1b02 <_ZL16ADC0_SYSTEM_initb>
    1b9e:	82 e0       	ldi	r24, 0x02	; 2
    1ba0:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <__TEXT_REGION_LENGTH__+0x7e0608>
    1ba4:	08 95       	ret
    1ba6:	80 e0       	ldi	r24, 0x00	; 0
    1ba8:	0e 94 81 0d 	call	0x1b02	; 0x1b02 <_ZL16ADC0_SYSTEM_initb>
    1bac:	83 e0       	ldi	r24, 0x03	; 3
    1bae:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <__TEXT_REGION_LENGTH__+0x7e0608>
    1bb2:	08 95       	ret
    1bb4:	80 e0       	ldi	r24, 0x00	; 0
    1bb6:	0e 94 81 0d 	call	0x1b02	; 0x1b02 <_ZL16ADC0_SYSTEM_initb>
    1bba:	84 e0       	ldi	r24, 0x04	; 4
    1bbc:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <__TEXT_REGION_LENGTH__+0x7e0608>
    1bc0:	08 95       	ret
    1bc2:	80 e0       	ldi	r24, 0x00	; 0
    1bc4:	0e 94 81 0d 	call	0x1b02	; 0x1b02 <_ZL16ADC0_SYSTEM_initb>
    1bc8:	85 e0       	ldi	r24, 0x05	; 5
    1bca:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <__TEXT_REGION_LENGTH__+0x7e0608>
    1bce:	08 95       	ret
    1bd0:	80 e0       	ldi	r24, 0x00	; 0
    1bd2:	0e 94 81 0d 	call	0x1b02	; 0x1b02 <_ZL16ADC0_SYSTEM_initb>
    1bd6:	82 e4       	ldi	r24, 0x42	; 66
    1bd8:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <__TEXT_REGION_LENGTH__+0x7e0608>
    1bdc:	08 95       	ret
    1bde:	0e 94 8f 0d 	call	0x1b1e	; 0x1b1e <_ZL20ADC0_SYSTEM_shutdownv>
    1be2:	08 95       	ret

00001be4 <_Z9ADC0_readv>:
    1be4:	80 91 10 06 	lds	r24, 0x0610	; 0x800610 <__TEXT_REGION_LENGTH__+0x7e0610>
    1be8:	90 91 11 06 	lds	r25, 0x0611	; 0x800611 <__TEXT_REGION_LENGTH__+0x7e0611>
    1bec:	08 95       	ret

00001bee <__vector_24>:
	ADC0.CTRLA = ADC_RESSEL_12BIT_gc; /* Turn off ADC leaving 12-bit resolution set */
	g_adc_initialized = false;
}

ISR(ADC0_RESRDY_vect)
{
    1bee:	1f 92       	push	r1
    1bf0:	0f 92       	push	r0
    1bf2:	0f b6       	in	r0, 0x3f	; 63
    1bf4:	0f 92       	push	r0
    1bf6:	11 24       	eor	r1, r1
    1bf8:	0b b6       	in	r0, 0x3b	; 59
    1bfa:	0f 92       	push	r0
    1bfc:	2f 93       	push	r18
    1bfe:	3f 93       	push	r19
    1c00:	4f 93       	push	r20
    1c02:	5f 93       	push	r21
    1c04:	6f 93       	push	r22
    1c06:	7f 93       	push	r23
    1c08:	8f 93       	push	r24
    1c0a:	9f 93       	push	r25
    1c0c:	af 93       	push	r26
    1c0e:	bf 93       	push	r27
    1c10:	ef 93       	push	r30
    1c12:	ff 93       	push	r31
	/* Clear the interrupt flag by reading the result */
	int val = ADC0_read();
    1c14:	0e 94 f2 0d 	call	0x1be4	; 0x1be4 <_Z9ADC0_readv>
//	LED_toggle_level();
	if(g_goertzel.DataPoint(val))
    1c18:	bc 01       	movw	r22, r24
    1c1a:	84 e9       	ldi	r24, 0x94	; 148
    1c1c:	91 e4       	ldi	r25, 0x41	; 65
    1c1e:	0e 94 3b 12 	call	0x2476	; 0x2476 <_ZN8Goertzel9DataPointEi>
    1c22:	81 11       	cpse	r24, r1
	{
		ADC0.INTCTRL = 0x00; /* disable ADC interrupt */
    1c24:	10 92 0c 06 	sts	0x060C, r1	; 0x80060c <__TEXT_REGION_LENGTH__+0x7e060c>
	}
    1c28:	ff 91       	pop	r31
    1c2a:	ef 91       	pop	r30
    1c2c:	bf 91       	pop	r27
    1c2e:	af 91       	pop	r26
    1c30:	9f 91       	pop	r25
    1c32:	8f 91       	pop	r24
    1c34:	7f 91       	pop	r23
    1c36:	6f 91       	pop	r22
    1c38:	5f 91       	pop	r21
    1c3a:	4f 91       	pop	r20
    1c3c:	3f 91       	pop	r19
    1c3e:	2f 91       	pop	r18
    1c40:	0f 90       	pop	r0
    1c42:	0b be       	out	0x3b, r0	; 59
    1c44:	0f 90       	pop	r0
    1c46:	0f be       	out	0x3f, r0	; 63
    1c48:	0f 90       	pop	r0
    1c4a:	1f 90       	pop	r1
    1c4c:	18 95       	reti

00001c4e <_GLOBAL__sub_I_g_activeADCChannel>:
    1c4e:	6f ef       	ldi	r22, 0xFF	; 255
    1c50:	7f ef       	ldi	r23, 0xFF	; 255
    1c52:	81 e0       	ldi	r24, 0x01	; 1
    1c54:	90 e0       	ldi	r25, 0x00	; 0
    1c56:	0e 94 96 0d 	call	0x1b2c	; 0x1b2c <_Z41__static_initialization_and_destruction_0ii>
    1c5a:	08 95       	ret

00001c5c <_GLOBAL__sub_D_g_activeADCChannel>:
    1c5c:	6f ef       	ldi	r22, 0xFF	; 255
    1c5e:	7f ef       	ldi	r23, 0xFF	; 255
    1c60:	80 e0       	ldi	r24, 0x00	; 0
    1c62:	90 e0       	ldi	r25, 0x00	; 0
    1c64:	0e 94 96 0d 	call	0x1b2c	; 0x1b2c <_Z41__static_initialization_and_destruction_0ii>
    1c68:	08 95       	ret

00001c6a <__vector_29>:

/**
Handle switch closure interrupts
*/
ISR(PORTC_PORT_vect)
{
    1c6a:	1f 92       	push	r1
    1c6c:	0f 92       	push	r0
    1c6e:	0f b6       	in	r0, 0x3f	; 63
    1c70:	0f 92       	push	r0
    1c72:	11 24       	eor	r1, r1
    1c74:	8f 93       	push	r24
    1c76:	9f 93       	push	r25
	static int count = 0;
	
	if(PORTC.INTFLAGS & (1 << SWITCH))
    1c78:	80 91 49 04 	lds	r24, 0x0449	; 0x800449 <__TEXT_REGION_LENGTH__+0x7e0449>
    1c7c:	88 23       	and	r24, r24
    1c7e:	4c f4       	brge	.+18     	; 0x1c92 <__vector_29+0x28>
	{
		count++;
    1c80:	80 91 98 41 	lds	r24, 0x4198	; 0x804198 <_ZZ11__vector_29E5count>
    1c84:	90 91 99 41 	lds	r25, 0x4199	; 0x804199 <_ZZ11__vector_29E5count+0x1>
    1c88:	01 96       	adiw	r24, 0x01	; 1
    1c8a:	80 93 98 41 	sts	0x4198, r24	; 0x804198 <_ZZ11__vector_29E5count>
    1c8e:	90 93 99 41 	sts	0x4199, r25	; 0x804199 <_ZZ11__vector_29E5count+0x1>
	}
	
	if(PORTC.INTFLAGS & (1 << X32KHZ_SQUAREWAVE))
    1c92:	80 91 49 04 	lds	r24, 0x0449	; 0x800449 <__TEXT_REGION_LENGTH__+0x7e0449>
    1c96:	84 ff       	sbrs	r24, 4
    1c98:	09 c0       	rjmp	.+18     	; 0x1cac <__vector_29+0x42>
	{
		count++;
    1c9a:	80 91 98 41 	lds	r24, 0x4198	; 0x804198 <_ZZ11__vector_29E5count>
    1c9e:	90 91 99 41 	lds	r25, 0x4199	; 0x804199 <_ZZ11__vector_29E5count+0x1>
    1ca2:	01 96       	adiw	r24, 0x01	; 1
    1ca4:	80 93 98 41 	sts	0x4198, r24	; 0x804198 <_ZZ11__vector_29E5count>
    1ca8:	90 93 99 41 	sts	0x4199, r25	; 0x804199 <_ZZ11__vector_29E5count+0x1>
	}
	
	PORTC.INTFLAGS = 0xFF; /* Clear all flags */
    1cac:	8f ef       	ldi	r24, 0xFF	; 255
    1cae:	80 93 49 04 	sts	0x0449, r24	; 0x800449 <__TEXT_REGION_LENGTH__+0x7e0449>
}
    1cb2:	9f 91       	pop	r25
    1cb4:	8f 91       	pop	r24
    1cb6:	0f 90       	pop	r0
    1cb8:	0f be       	out	0x3f, r0	; 63
    1cba:	0f 90       	pop	r0
    1cbc:	1f 90       	pop	r1
    1cbe:	18 95       	reti

00001cc0 <__vector_6>:

/**

*/
ISR(PORTA_PORT_vect)
{
    1cc0:	1f 92       	push	r1
    1cc2:	0f 92       	push	r0
    1cc4:	0f b6       	in	r0, 0x3f	; 63
    1cc6:	0f 92       	push	r0
    1cc8:	11 24       	eor	r1, r1
    1cca:	8f 93       	push	r24
    1ccc:	9f 93       	push	r25
	static int count = 0;
	
	if(PORTA.INTFLAGS & (1 << RTC_SQW))
    1cce:	80 91 09 04 	lds	r24, 0x0409	; 0x800409 <__TEXT_REGION_LENGTH__+0x7e0409>
    1cd2:	82 ff       	sbrs	r24, 2
    1cd4:	09 c0       	rjmp	.+18     	; 0x1ce8 <__vector_6+0x28>
	{
		count++;
    1cd6:	80 91 96 41 	lds	r24, 0x4196	; 0x804196 <_ZZ10__vector_6E5count>
    1cda:	90 91 97 41 	lds	r25, 0x4197	; 0x804197 <_ZZ10__vector_6E5count+0x1>
    1cde:	01 96       	adiw	r24, 0x01	; 1
    1ce0:	80 93 96 41 	sts	0x4196, r24	; 0x804196 <_ZZ10__vector_6E5count>
    1ce4:	90 93 97 41 	sts	0x4197, r25	; 0x804197 <_ZZ10__vector_6E5count+0x1>
	}
	
	if(PORTA.INTFLAGS & (1 << ANT_CONNECT_INT))
    1ce8:	80 91 09 04 	lds	r24, 0x0409	; 0x800409 <__TEXT_REGION_LENGTH__+0x7e0409>
    1cec:	84 ff       	sbrs	r24, 4
    1cee:	09 c0       	rjmp	.+18     	; 0x1d02 <__vector_6+0x42>
	{
		count++;
    1cf0:	80 91 96 41 	lds	r24, 0x4196	; 0x804196 <_ZZ10__vector_6E5count>
    1cf4:	90 91 97 41 	lds	r25, 0x4197	; 0x804197 <_ZZ10__vector_6E5count+0x1>
    1cf8:	01 96       	adiw	r24, 0x01	; 1
    1cfa:	80 93 96 41 	sts	0x4196, r24	; 0x804196 <_ZZ10__vector_6E5count>
    1cfe:	90 93 97 41 	sts	0x4197, r25	; 0x804197 <_ZZ10__vector_6E5count+0x1>
	}	
	
	PORTA.INTFLAGS = 0xFF; /* Clear all flags */
    1d02:	8f ef       	ldi	r24, 0xFF	; 255
    1d04:	80 93 09 04 	sts	0x0409, r24	; 0x800409 <__TEXT_REGION_LENGTH__+0x7e0409>
}
    1d08:	9f 91       	pop	r25
    1d0a:	8f 91       	pop	r24
    1d0c:	0f 90       	pop	r0
    1d0e:	0f be       	out	0x3f, r0	; 63
    1d10:	0f 90       	pop	r0
    1d12:	1f 90       	pop	r1
    1d14:	18 95       	reti

00001d16 <_Z10BINIO_initv>:
 */
static inline void PORTA_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
    1d16:	80 b1       	in	r24, 0x00	; 0
    1d18:	8b 7f       	andi	r24, 0xFB	; 251
    1d1a:	80 b9       	out	0x00, r24	; 0
 */
static inline void PORTA_pin_set_isc(const uint8_t pin, const PORT_ISC_t isc)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTA + 0x10 + pin);

	*port_pin_ctrl = (*port_pin_ctrl & ~PORT_ISC_gm) | isc;
    1d1c:	e2 e1       	ldi	r30, 0x12	; 18
    1d1e:	f4 e0       	ldi	r31, 0x04	; 4
    1d20:	80 81       	ld	r24, Z
    1d22:	88 7f       	andi	r24, 0xF8	; 248
    1d24:	82 60       	ori	r24, 0x02	; 2
    1d26:	80 83       	st	Z, r24
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTA.DIR |= (1 << pin);
    1d28:	80 b1       	in	r24, 0x00	; 0
    1d2a:	88 60       	ori	r24, 0x08	; 8
    1d2c:	80 b9       	out	0x00, r24	; 0
static inline void PORTA_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTA.OUT |= (1 << pin);
	} else {
		VPORTA.OUT &= ~(1 << pin);
    1d2e:	81 b1       	in	r24, 0x01	; 1
    1d30:	87 7f       	andi	r24, 0xF7	; 247
    1d32:	81 b9       	out	0x01, r24	; 1
 */
static inline void PORTA_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
    1d34:	80 b1       	in	r24, 0x00	; 0
    1d36:	8f 7e       	andi	r24, 0xEF	; 239
    1d38:	80 b9       	out	0x00, r24	; 0
static inline void PORTA_set_pin_pull_mode(const uint8_t pin, const enum port_pull_mode pull_mode)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTA + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
    1d3a:	e4 e1       	ldi	r30, 0x14	; 20
    1d3c:	f4 e0       	ldi	r31, 0x04	; 4
    1d3e:	80 81       	ld	r24, Z
    1d40:	88 60       	ori	r24, 0x08	; 8
    1d42:	80 83       	st	Z, r24
 */
static inline void PORTA_pin_set_isc(const uint8_t pin, const PORT_ISC_t isc)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTA + 0x10 + pin);

	*port_pin_ctrl = (*port_pin_ctrl & ~PORT_ISC_gm) | isc;
    1d44:	80 81       	ld	r24, Z
    1d46:	88 7f       	andi	r24, 0xF8	; 248
    1d48:	83 60       	ori	r24, 0x03	; 3
    1d4a:	80 83       	st	Z, r24
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTA.DIR |= (1 << pin);
    1d4c:	80 b1       	in	r24, 0x00	; 0
    1d4e:	80 62       	ori	r24, 0x20	; 32
    1d50:	80 b9       	out	0x00, r24	; 0
static inline void PORTA_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTA.OUT |= (1 << pin);
	} else {
		VPORTA.OUT &= ~(1 << pin);
    1d52:	81 b1       	in	r24, 0x01	; 1
    1d54:	8f 7d       	andi	r24, 0xDF	; 223
    1d56:	81 b9       	out	0x01, r24	; 1
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTA.DIR |= (1 << pin);
    1d58:	80 b1       	in	r24, 0x00	; 0
    1d5a:	80 64       	ori	r24, 0x40	; 64
    1d5c:	80 b9       	out	0x00, r24	; 0
static inline void PORTA_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTA.OUT |= (1 << pin);
	} else {
		VPORTA.OUT &= ~(1 << pin);
    1d5e:	81 b1       	in	r24, 0x01	; 1
    1d60:	8f 7b       	andi	r24, 0xBF	; 191
    1d62:	81 b9       	out	0x01, r24	; 1
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTA.DIR |= (1 << pin);
    1d64:	80 b1       	in	r24, 0x00	; 0
    1d66:	80 68       	ori	r24, 0x80	; 128
    1d68:	80 b9       	out	0x00, r24	; 0
static inline void PORTA_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTA.OUT |= (1 << pin);
	} else {
		VPORTA.OUT &= ~(1 << pin);
    1d6a:	81 b1       	in	r24, 0x01	; 1
    1d6c:	8f 77       	andi	r24, 0x7F	; 127
    1d6e:	81 b9       	out	0x01, r24	; 1
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTB.DIR |= (1 << pin);
    1d70:	84 b1       	in	r24, 0x04	; 4
    1d72:	81 60       	ori	r24, 0x01	; 1
    1d74:	84 b9       	out	0x04, r24	; 4
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTB.OUT |= (1 << pin);
	} else {
		VPORTB.OUT &= ~(1 << pin);
    1d76:	85 b1       	in	r24, 0x05	; 5
    1d78:	8e 7f       	andi	r24, 0xFE	; 254
    1d7a:	85 b9       	out	0x05, r24	; 5
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTB.DIR |= (1 << pin);
    1d7c:	84 b1       	in	r24, 0x04	; 4
    1d7e:	82 60       	ori	r24, 0x02	; 2
    1d80:	84 b9       	out	0x04, r24	; 4
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTB.OUT |= (1 << pin);
	} else {
		VPORTB.OUT &= ~(1 << pin);
    1d82:	85 b1       	in	r24, 0x05	; 5
    1d84:	8d 7f       	andi	r24, 0xFD	; 253
    1d86:	85 b9       	out	0x05, r24	; 5
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTB.DIR |= (1 << pin);
    1d88:	84 b1       	in	r24, 0x04	; 4
    1d8a:	80 61       	ori	r24, 0x10	; 16
    1d8c:	84 b9       	out	0x04, r24	; 4
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTB.OUT |= (1 << pin);
	} else {
		VPORTB.OUT &= ~(1 << pin);
    1d8e:	85 b1       	in	r24, 0x05	; 5
    1d90:	8f 7e       	andi	r24, 0xEF	; 239
    1d92:	85 b9       	out	0x05, r24	; 5
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTB.DIR |= (1 << pin);
    1d94:	84 b1       	in	r24, 0x04	; 4
    1d96:	80 62       	ori	r24, 0x20	; 32
    1d98:	84 b9       	out	0x04, r24	; 4
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTB.OUT |= (1 << pin);
	} else {
		VPORTB.OUT &= ~(1 << pin);
    1d9a:	85 b1       	in	r24, 0x05	; 5
    1d9c:	8f 7d       	andi	r24, 0xDF	; 223
    1d9e:	85 b9       	out	0x05, r24	; 5
 */
static inline void PORTC_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTC.DIR &= ~(1 << pin);
    1da0:	88 b1       	in	r24, 0x08	; 8
    1da2:	8f 7e       	andi	r24, 0xEF	; 239
    1da4:	88 b9       	out	0x08, r24	; 8
		break;
	case PORT_DIR_OUT:
		VPORTC.DIR |= (1 << pin);
    1da6:	88 b1       	in	r24, 0x08	; 8
    1da8:	80 62       	ori	r24, 0x20	; 32
    1daa:	88 b9       	out	0x08, r24	; 8
static inline void PORTC_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTC.OUT |= (1 << pin);
	} else {
		VPORTC.OUT &= ~(1 << pin);
    1dac:	89 b1       	in	r24, 0x09	; 9
    1dae:	8f 7d       	andi	r24, 0xDF	; 223
    1db0:	89 b9       	out	0x09, r24	; 9
	switch (dir) {
	case PORT_DIR_IN:
		VPORTC.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTC.DIR |= (1 << pin);
    1db2:	88 b1       	in	r24, 0x08	; 8
    1db4:	80 64       	ori	r24, 0x40	; 64
    1db6:	88 b9       	out	0x08, r24	; 8
static inline void PORTC_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTC.OUT |= (1 << pin);
	} else {
		VPORTC.OUT &= ~(1 << pin);
    1db8:	89 b1       	in	r24, 0x09	; 9
    1dba:	8f 7b       	andi	r24, 0xBF	; 191
    1dbc:	89 b9       	out	0x09, r24	; 9
 */
static inline void PORTC_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTC.DIR &= ~(1 << pin);
    1dbe:	88 b1       	in	r24, 0x08	; 8
    1dc0:	8f 77       	andi	r24, 0x7F	; 127
    1dc2:	88 b9       	out	0x08, r24	; 8
static inline void PORTC_set_pin_pull_mode(const uint8_t pin, const enum port_pull_mode pull_mode)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTC + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
    1dc4:	e7 e5       	ldi	r30, 0x57	; 87
    1dc6:	f4 e0       	ldi	r31, 0x04	; 4
    1dc8:	80 81       	ld	r24, Z
    1dca:	88 60       	ori	r24, 0x08	; 8
    1dcc:	80 83       	st	Z, r24
 */
static inline void PORTC_pin_set_isc(const uint8_t pin, const PORT_ISC_t isc)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTC + 0x10 + pin);

	*port_pin_ctrl = (*port_pin_ctrl & ~PORT_ISC_gm) | isc;
    1dce:	80 81       	ld	r24, Z
    1dd0:	88 7f       	andi	r24, 0xF8	; 248
    1dd2:	83 60       	ori	r24, 0x03	; 3
    1dd4:	80 83       	st	Z, r24
 */
static inline void PORTD_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTD.DIR &= ~(1 << pin);
    1dd6:	8c b1       	in	r24, 0x0c	; 12
    1dd8:	8e 7f       	andi	r24, 0xFE	; 254
    1dda:	8c b9       	out	0x0c, r24	; 12
    1ddc:	8c b1       	in	r24, 0x0c	; 12
    1dde:	8d 7f       	andi	r24, 0xFD	; 253
    1de0:	8c b9       	out	0x0c, r24	; 12
static inline void PORTD_set_pin_pull_mode(const uint8_t pin, const enum port_pull_mode pull_mode)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTD + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
    1de2:	e1 e7       	ldi	r30, 0x71	; 113
    1de4:	f4 e0       	ldi	r31, 0x04	; 4
    1de6:	80 81       	ld	r24, Z
    1de8:	88 60       	ori	r24, 0x08	; 8
    1dea:	80 83       	st	Z, r24
 */
static inline void PORTD_pin_set_isc(const uint8_t pin, const PORT_ISC_t isc)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTD + 0x10 + pin);

	*port_pin_ctrl = (*port_pin_ctrl & ~PORT_ISC_gm) | isc;
    1dec:	80 81       	ld	r24, Z
    1dee:	88 7f       	andi	r24, 0xF8	; 248
    1df0:	83 60       	ori	r24, 0x03	; 3
    1df2:	80 83       	st	Z, r24
		break;
	case PORT_DIR_OUT:
		VPORTD.DIR |= (1 << pin);
		break;
	case PORT_DIR_OFF:
		*((uint8_t *)&PORTD + 0x10 + pin) |= 1 << PORT_PULLUPEN_bp;
    1df4:	e7 e7       	ldi	r30, 0x77	; 119
    1df6:	f4 e0       	ldi	r31, 0x04	; 4
    1df8:	80 81       	ld	r24, Z
    1dfa:	88 60       	ori	r24, 0x08	; 8
    1dfc:	80 83       	st	Z, r24
		break;
	case PORT_DIR_OUT:
		VPORTE.DIR |= (1 << pin);
		break;
	case PORT_DIR_OFF:
		*((uint8_t *)&PORTE + 0x10 + pin) |= 1 << PORT_PULLUPEN_bp;
    1dfe:	e0 e9       	ldi	r30, 0x90	; 144
    1e00:	f4 e0       	ldi	r31, 0x04	; 4
    1e02:	80 81       	ld	r24, Z
    1e04:	88 60       	ori	r24, 0x08	; 8
    1e06:	80 83       	st	Z, r24
    1e08:	e1 e9       	ldi	r30, 0x91	; 145
    1e0a:	f4 e0       	ldi	r31, 0x04	; 4
    1e0c:	80 81       	ld	r24, Z
    1e0e:	88 60       	ori	r24, 0x08	; 8
    1e10:	80 83       	st	Z, r24
    1e12:	e2 e9       	ldi	r30, 0x92	; 146
    1e14:	f4 e0       	ldi	r31, 0x04	; 4
    1e16:	80 81       	ld	r24, Z
    1e18:	88 60       	ori	r24, 0x08	; 8
    1e1a:	80 83       	st	Z, r24
    1e1c:	e3 e9       	ldi	r30, 0x93	; 147
    1e1e:	f4 e0       	ldi	r31, 0x04	; 4
    1e20:	80 81       	ld	r24, Z
    1e22:	88 60       	ori	r24, 0x08	; 8
    1e24:	80 83       	st	Z, r24
		break;
	case PORT_DIR_OUT:
		VPORTF.DIR |= (1 << pin);
		break;
	case PORT_DIR_OFF:
		*((uint8_t *)&PORTF + 0x10 + pin) |= 1 << PORT_PULLUPEN_bp;
    1e26:	e2 eb       	ldi	r30, 0xB2	; 178
    1e28:	f4 e0       	ldi	r31, 0x04	; 4
    1e2a:	80 81       	ld	r24, Z
    1e2c:	88 60       	ori	r24, 0x08	; 8
    1e2e:	80 83       	st	Z, r24
    1e30:	e3 eb       	ldi	r30, 0xB3	; 179
    1e32:	f4 e0       	ldi	r31, 0x04	; 4
    1e34:	80 81       	ld	r24, Z
    1e36:	88 60       	ori	r24, 0x08	; 8
    1e38:	80 83       	st	Z, r24
    1e3a:	e4 eb       	ldi	r30, 0xB4	; 180
    1e3c:	f4 e0       	ldi	r31, 0x04	; 4
    1e3e:	80 81       	ld	r24, Z
    1e40:	88 60       	ori	r24, 0x08	; 8
    1e42:	80 83       	st	Z, r24
    1e44:	e5 eb       	ldi	r30, 0xB5	; 181
    1e46:	f4 e0       	ldi	r31, 0x04	; 4
    1e48:	80 81       	ld	r24, Z
    1e4a:	88 60       	ori	r24, 0x08	; 8
    1e4c:	80 83       	st	Z, r24
    1e4e:	08 95       	ret

00001e50 <BOD_init>:
{

	// ccp_write_io((void*)&(BOD.CTRLA),BOD_SLEEP_DIS_gc /* Disabled */);

	BOD.INTCTRL = 0 << BOD_VLMIE_bp        /* voltage level monitor interrrupt enable: disabled */
	              | BOD_VLMCFG_FALLING_gc; /* Interrupt when supply goes below VLM level */
    1e50:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>

	// BOD.VLMCTRLA = BOD_VLMLVL_5ABOVE_gc; /* VLM threshold 5% above BOD level */

	return 0;
}
    1e54:	80 e0       	ldi	r24, 0x00	; 0
    1e56:	08 95       	ret

00001e58 <CLKCTRL_init>:
 *       on calling convention. The memory model is not visible to the
 *       preprocessor, so it must be defined in the Assembler preprocessor directives.
 */
static inline void ccp_write_io(void *addr, uint8_t value)
{
	protected_write_io(addr, CCP_IOREG_gc, value);
    1e58:	44 e2       	ldi	r20, 0x24	; 36
    1e5a:	68 ed       	ldi	r22, 0xD8	; 216
    1e5c:	88 e6       	ldi	r24, 0x68	; 104
    1e5e:	90 e0       	ldi	r25, 0x00	; 0
    1e60:	0e 94 bd 17 	call	0x2f7a	; 0x2f7a <protected_write_io>
	//		 | 0 << CLKCTRL_CLKOUT_bp /* System clock out: disabled */);

	// ccp_write_io((void*)&(CLKCTRL.MCLKLOCK),0 << CLKCTRL_LOCKEN_bp /* lock enable: disabled */);

	return 0;
}
    1e64:	80 e0       	ldi	r24, 0x00	; 0
    1e66:	08 95       	ret

00001e68 <CPUINT_init>:

	// CPUINT.LVL0PRI = 0x0 << CPUINT_LVL0PRI_gp; /* Interrupt Level Priority: 0x0 */

	// CPUINT.LVL1VEC = 0x0 << CPUINT_LVL1VEC_gp; /* Interrupt Vector with High Priority: 0x0 */

	ENABLE_INTERRUPTS();
    1e68:	78 94       	sei

	return 0;
}
    1e6a:	80 e0       	ldi	r24, 0x00	; 0
    1e6c:	08 95       	ret

00001e6e <_ZL9VREF_initv>:
static void VREF_init(void)
{
//	VREF.DAC0REF = VREF_REFSEL_2V048_gc /* Select the 2.048V Internal Voltage Reference for DAC */
//	VREF.DAC0REF = VREF_REFSEL_2V500_gc /* Select the 2.048V Internal Voltage Reference for DAC */
//	| VREF_ALWAYSON_bm;    /* Set the Voltage Reference in Always On mode */
	VREF.DAC0REF = VREF_REFSEL_2V500_gc; /* Select the 2.048V Internal Voltage Reference for DAC */
    1e6e:	83 e0       	ldi	r24, 0x03	; 3
    1e70:	80 93 a2 00 	sts	0x00A2, r24	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7e00a2>
	/* Wait VREF start-up time */
	while(util_delay_ms(VREF_STARTUP_TIME_MS));
    1e74:	6a e0       	ldi	r22, 0x0A	; 10
    1e76:	70 e0       	ldi	r23, 0x00	; 0
    1e78:	80 e0       	ldi	r24, 0x00	; 0
    1e7a:	90 e0       	ldi	r25, 0x00	; 0
    1e7c:	0e 94 be 1e 	call	0x3d7c	; 0x3d7c <util_delay_ms>
    1e80:	81 11       	cpse	r24, r1
    1e82:	f8 cf       	rjmp	.-16     	; 0x1e74 <_ZL9VREF_initv+0x6>
}
    1e84:	08 95       	ret

00001e86 <_Z11DAC0_setValj>:
}

void DAC0_setVal(uint16_t value)
{
	/* Store the two LSbs in DAC0.DATAL */
	DAC0.DATAL = (value & LSB_MASK) << 6;
    1e86:	28 2f       	mov	r18, r24
    1e88:	22 95       	swap	r18
    1e8a:	22 0f       	add	r18, r18
    1e8c:	22 0f       	add	r18, r18
    1e8e:	20 7c       	andi	r18, 0xC0	; 192
    1e90:	e0 ea       	ldi	r30, 0xA0	; 160
    1e92:	f6 e0       	ldi	r31, 0x06	; 6
    1e94:	22 83       	std	Z+2, r18	; 0x02
	/* Store the eight MSbs in DAC0.DATAH */
	DAC0.DATAH = value >> 2;
    1e96:	96 95       	lsr	r25
    1e98:	87 95       	ror	r24
    1e9a:	96 95       	lsr	r25
    1e9c:	87 95       	ror	r24
    1e9e:	83 83       	std	Z+3, r24	; 0x03
    1ea0:	08 95       	ret

00001ea2 <_Z9DAC0_initv>:
	while(util_delay_ms(VREF_STARTUP_TIME_MS));
}

void DAC0_init(void)
{
	VREF_init();
    1ea2:	0e 94 37 0f 	call	0x1e6e	; 0x1e6e <_ZL9VREF_initv>
	/* Disable digital input buffer */
	PORTD.PIN6CTRL &= ~PORT_ISC_gm;
    1ea6:	e0 e6       	ldi	r30, 0x60	; 96
    1ea8:	f4 e0       	ldi	r31, 0x04	; 4
    1eaa:	86 89       	ldd	r24, Z+22	; 0x16
    1eac:	88 7f       	andi	r24, 0xF8	; 248
    1eae:	86 8b       	std	Z+22, r24	; 0x16
	PORTD.PIN6CTRL |= PORT_ISC_INPUT_DISABLE_gc;
    1eb0:	86 89       	ldd	r24, Z+22	; 0x16
    1eb2:	84 60       	ori	r24, 0x04	; 4
    1eb4:	86 8b       	std	Z+22, r24	; 0x16
	/* Disable pull-up resistor */
	PORTD.PIN6CTRL &= ~PORT_PULLUPEN_bm;
    1eb6:	86 89       	ldd	r24, Z+22	; 0x16
    1eb8:	87 7f       	andi	r24, 0xF7	; 247
    1eba:	86 8b       	std	Z+22, r24	; 0x16
	DAC0.CTRLA = DAC_ENABLE_bm          /* Enable DAC */
	| DAC_OUTEN_bm           /* Enable output buffer */
	| DAC_RUNSTDBY_bm;       /* Enable Run in Standby mode */
    1ebc:	81 ec       	ldi	r24, 0xC1	; 193
    1ebe:	80 93 a0 06 	sts	0x06A0, r24	; 0x8006a0 <__TEXT_REGION_LENGTH__+0x7e06a0>
	
	DAC0_setVal(DAC_DEFAULT_VALUE);
    1ec2:	80 e0       	ldi	r24, 0x00	; 0
    1ec4:	90 e0       	ldi	r25, 0x00	; 0
    1ec6:	0e 94 43 0f 	call	0x1e86	; 0x1e86 <_Z11DAC0_setValj>
    1eca:	08 95       	ret

00001ecc <mcu_init>:
	 * disables all peripherals to save power. Driver shall enable
	 * peripheral if used */

	/* Set all pins to low power mode */

	for (uint8_t i = 0; i < 8; i++) {
    1ecc:	80 e0       	ldi	r24, 0x00	; 0
    1ece:	88 30       	cpi	r24, 0x08	; 8
    1ed0:	48 f4       	brcc	.+18     	; 0x1ee4 <mcu_init+0x18>
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    1ed2:	e8 2f       	mov	r30, r24
    1ed4:	f0 e0       	ldi	r31, 0x00	; 0
    1ed6:	e0 5f       	subi	r30, 0xF0	; 240
    1ed8:	fb 4f       	sbci	r31, 0xFB	; 251
    1eda:	90 81       	ld	r25, Z
    1edc:	98 60       	ori	r25, 0x08	; 8
    1ede:	90 83       	st	Z, r25
	 * disables all peripherals to save power. Driver shall enable
	 * peripheral if used */

	/* Set all pins to low power mode */

	for (uint8_t i = 0; i < 8; i++) {
    1ee0:	8f 5f       	subi	r24, 0xFF	; 255
    1ee2:	f5 cf       	rjmp	.-22     	; 0x1ece <mcu_init+0x2>
    1ee4:	80 e0       	ldi	r24, 0x00	; 0
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    1ee6:	88 30       	cpi	r24, 0x08	; 8
    1ee8:	48 f4       	brcc	.+18     	; 0x1efc <mcu_init+0x30>
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    1eea:	e8 2f       	mov	r30, r24
    1eec:	f0 e0       	ldi	r31, 0x00	; 0
    1eee:	e0 5d       	subi	r30, 0xD0	; 208
    1ef0:	fb 4f       	sbci	r31, 0xFB	; 251
    1ef2:	90 81       	ld	r25, Z
    1ef4:	98 60       	ori	r25, 0x08	; 8
    1ef6:	90 83       	st	Z, r25

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    1ef8:	8f 5f       	subi	r24, 0xFF	; 255
    1efa:	f5 cf       	rjmp	.-22     	; 0x1ee6 <mcu_init+0x1a>
    1efc:	80 e0       	ldi	r24, 0x00	; 0
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    1efe:	88 30       	cpi	r24, 0x08	; 8
    1f00:	48 f4       	brcc	.+18     	; 0x1f14 <mcu_init+0x48>
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    1f02:	e8 2f       	mov	r30, r24
    1f04:	f0 e0       	ldi	r31, 0x00	; 0
    1f06:	e0 5b       	subi	r30, 0xB0	; 176
    1f08:	fb 4f       	sbci	r31, 0xFB	; 251
    1f0a:	90 81       	ld	r25, Z
    1f0c:	98 60       	ori	r25, 0x08	; 8
    1f0e:	90 83       	st	Z, r25

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    1f10:	8f 5f       	subi	r24, 0xFF	; 255
    1f12:	f5 cf       	rjmp	.-22     	; 0x1efe <mcu_init+0x32>
    1f14:	80 e0       	ldi	r24, 0x00	; 0
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    1f16:	88 30       	cpi	r24, 0x08	; 8
    1f18:	48 f4       	brcc	.+18     	; 0x1f2c <mcu_init+0x60>
		*((uint8_t *)&PORTD + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    1f1a:	e8 2f       	mov	r30, r24
    1f1c:	f0 e0       	ldi	r31, 0x00	; 0
    1f1e:	e0 59       	subi	r30, 0x90	; 144
    1f20:	fb 4f       	sbci	r31, 0xFB	; 251
    1f22:	90 81       	ld	r25, Z
    1f24:	98 60       	ori	r25, 0x08	; 8
    1f26:	90 83       	st	Z, r25

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    1f28:	8f 5f       	subi	r24, 0xFF	; 255
    1f2a:	f5 cf       	rjmp	.-22     	; 0x1f16 <mcu_init+0x4a>
    1f2c:	80 e0       	ldi	r24, 0x00	; 0
		*((uint8_t *)&PORTD + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    1f2e:	88 30       	cpi	r24, 0x08	; 8
    1f30:	48 f4       	brcc	.+18     	; 0x1f44 <mcu_init+0x78>
		*((uint8_t *)&PORTE + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    1f32:	e8 2f       	mov	r30, r24
    1f34:	f0 e0       	ldi	r31, 0x00	; 0
    1f36:	e0 57       	subi	r30, 0x70	; 112
    1f38:	fb 4f       	sbci	r31, 0xFB	; 251
    1f3a:	90 81       	ld	r25, Z
    1f3c:	98 60       	ori	r25, 0x08	; 8
    1f3e:	90 83       	st	Z, r25

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTD + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    1f40:	8f 5f       	subi	r24, 0xFF	; 255
    1f42:	f5 cf       	rjmp	.-22     	; 0x1f2e <mcu_init+0x62>
    1f44:	80 e0       	ldi	r24, 0x00	; 0
		*((uint8_t *)&PORTE + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    1f46:	88 30       	cpi	r24, 0x08	; 8
    1f48:	48 f4       	brcc	.+18     	; 0x1f5c <mcu_init+0x90>
		*((uint8_t *)&PORTF + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    1f4a:	e8 2f       	mov	r30, r24
    1f4c:	f0 e0       	ldi	r31, 0x00	; 0
    1f4e:	e0 55       	subi	r30, 0x50	; 80
    1f50:	fb 4f       	sbci	r31, 0xFB	; 251
    1f52:	90 81       	ld	r25, Z
    1f54:	98 60       	ori	r25, 0x08	; 8
    1f56:	90 83       	st	Z, r25

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTE + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    1f58:	8f 5f       	subi	r24, 0xFF	; 255
    1f5a:	f5 cf       	rjmp	.-22     	; 0x1f46 <mcu_init+0x7a>
    1f5c:	08 95       	ret

00001f5e <system_init>:
/**
 * \brief System initialization
 */
void system_init()
{
	mcu_init();
    1f5e:	0e 94 66 0f 	call	0x1ecc	; 0x1ecc <mcu_init>

	CLKCTRL_init(); /* Set CPU clock speed appropriately */
    1f62:	0e 94 2c 0f 	call	0x1e58	; 0x1e58 <CLKCTRL_init>
	TIMERB_init(); /* Timers must be initialized before utility_delay functions will work */
    1f66:	0e 94 a1 1e 	call	0x3d42	; 0x3d42 <TIMERB_init>
	CPUINT_init(); /* Interrupts must also be enabled before timer interrupts will function */
    1f6a:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <CPUINT_init>
	BINIO_init();
    1f6e:	0e 94 8b 0e 	call	0x1d16	; 0x1d16 <_Z10BINIO_initv>
static inline void PORTC_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTC.OUT |= (1 << pin);
	} else {
		VPORTC.OUT &= ~(1 << pin);
    1f72:	89 b1       	in	r24, 0x09	; 9
    1f74:	8f 7b       	andi	r24, 0xBF	; 191
    1f76:	89 b9       	out	0x09, r24	; 9
	switch (dir) {
	case PORT_DIR_IN:
		VPORTC.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTC.DIR |= (1 << pin);
    1f78:	88 b1       	in	r24, 0x08	; 8
    1f7a:	80 64       	ori	r24, 0x40	; 64
    1f7c:	88 b9       	out	0x08, r24	; 8
	    // <true"> High
	    false);

	LED_set_dir(PORT_DIR_OUT);

	SLPCTRL_init();
    1f7e:	0e 94 9f 1e 	call	0x3d3e	; 0x3d3e <SLPCTRL_init>
	
	DAC0_init();
    1f82:	0e 94 51 0f 	call	0x1ea2	; 0x1ea2 <_Z9DAC0_initv>

	linkbus_init();
    1f86:	0e 94 ae 14 	call	0x295c	; 0x295c <_Z12linkbus_initv>

	BOD_init();
    1f8a:	0e 94 28 0f 	call	0x1e50	; 0x1e50 <BOD_init>
    1f8e:	08 95       	ret

00001f90 <_Z16ds3231_get_epochP2EC>:
		else
		{
			data[1] = 0x04;
			I2C_0_SendData(DS3231_I2C_SLAVE_ADDR, data, 2);
		}
	}
    1f90:	4f 92       	push	r4
    1f92:	5f 92       	push	r5
    1f94:	6f 92       	push	r6
    1f96:	7f 92       	push	r7
    1f98:	8f 92       	push	r8
    1f9a:	9f 92       	push	r9
    1f9c:	af 92       	push	r10
    1f9e:	bf 92       	push	r11
    1fa0:	cf 92       	push	r12
    1fa2:	df 92       	push	r13
    1fa4:	ef 92       	push	r14
    1fa6:	ff 92       	push	r15
    1fa8:	0f 93       	push	r16
    1faa:	1f 93       	push	r17
    1fac:	cf 93       	push	r28
    1fae:	df 93       	push	r29
    1fb0:	cd b7       	in	r28, 0x3d	; 61
    1fb2:	de b7       	in	r29, 0x3e	; 62
    1fb4:	63 97       	sbiw	r28, 0x13	; 19
    1fb6:	cd bf       	out	0x3d, r28	; 61
    1fb8:	de bf       	out	0x3e, r29	; 62
    1fba:	5c 01       	movw	r10, r24
    1fbc:	be 01       	movw	r22, r28
    1fbe:	6f 5f       	subi	r22, 0xFF	; 255
    1fc0:	7f 4f       	sbci	r23, 0xFF	; 255
    1fc2:	87 e0       	ldi	r24, 0x07	; 7
    1fc4:	db 01       	movw	r26, r22
    1fc6:	1d 92       	st	X+, r1
    1fc8:	8a 95       	dec	r24
    1fca:	e9 f7       	brne	.-6      	; 0x1fc6 <_Z16ds3231_get_epochP2EC+0x36>
    1fcc:	47 e0       	ldi	r20, 0x07	; 7
    1fce:	80 ed       	ldi	r24, 0xD0	; 208
    1fd0:	0e 94 ef 12 	call	0x25de	; 0x25de <I2C_0_GetData>
    1fd4:	98 2e       	mov	r9, r24
    1fd6:	b7 e0       	ldi	r27, 0x07	; 7
    1fd8:	8b 13       	cpse	r24, r27
    1fda:	04 c1       	rjmp	.+520    	; 0x21e4 <_Z16ds3231_get_epochP2EC+0x254>
    1fdc:	fe 01       	movw	r30, r28
    1fde:	38 96       	adiw	r30, 0x08	; 8
    1fe0:	8c e0       	ldi	r24, 0x0C	; 12
    1fe2:	df 01       	movw	r26, r30
    1fe4:	1d 92       	st	X+, r1
    1fe6:	8a 95       	dec	r24
    1fe8:	e9 f7       	brne	.-6      	; 0x1fe4 <_Z16ds3231_get_epochP2EC+0x54>
    1fea:	2f 81       	ldd	r18, Y+7	; 0x07
    1fec:	82 2f       	mov	r24, r18
    1fee:	8f 70       	andi	r24, 0x0F	; 15
    1ff0:	e8 2e       	mov	r14, r24
    1ff2:	f1 2c       	mov	r15, r1
    1ff4:	c7 01       	movw	r24, r14
    1ff6:	8c 59       	subi	r24, 0x9C	; 156
    1ff8:	9f 4f       	sbci	r25, 0xFF	; 255
    1ffa:	22 95       	swap	r18
    1ffc:	2f 70       	andi	r18, 0x0F	; 15
    1ffe:	30 e0       	ldi	r19, 0x00	; 0
    2000:	79 01       	movw	r14, r18
    2002:	ee 0c       	add	r14, r14
    2004:	ff 1c       	adc	r15, r15
    2006:	22 0f       	add	r18, r18
    2008:	33 1f       	adc	r19, r19
    200a:	22 0f       	add	r18, r18
    200c:	33 1f       	adc	r19, r19
    200e:	22 0f       	add	r18, r18
    2010:	33 1f       	adc	r19, r19
    2012:	2e 0d       	add	r18, r14
    2014:	3f 1d       	adc	r19, r15
    2016:	7c 01       	movw	r14, r24
    2018:	e2 0e       	add	r14, r18
    201a:	f3 1e       	adc	r15, r19
    201c:	67 01       	movw	r12, r14
    201e:	b4 e9       	ldi	r27, 0x94	; 148
    2020:	cb 1a       	sub	r12, r27
    2022:	b8 ef       	ldi	r27, 0xF8	; 248
    2024:	db 0a       	sbc	r13, r27
    2026:	8e 81       	ldd	r24, Y+6	; 0x06
    2028:	98 2f       	mov	r25, r24
    202a:	9f 70       	andi	r25, 0x0F	; 15
    202c:	82 95       	swap	r24
    202e:	8f 70       	andi	r24, 0x0F	; 15
    2030:	88 0f       	add	r24, r24
    2032:	08 2f       	mov	r16, r24
    2034:	00 0f       	add	r16, r16
    2036:	00 0f       	add	r16, r16
    2038:	80 0f       	add	r24, r16
    203a:	08 2f       	mov	r16, r24
    203c:	09 0f       	add	r16, r25
    203e:	ed 81       	ldd	r30, Y+5	; 0x05
    2040:	8e 2f       	mov	r24, r30
    2042:	8f 70       	andi	r24, 0x0F	; 15
    2044:	e2 95       	swap	r30
    2046:	ef 70       	andi	r30, 0x0F	; 15
    2048:	ee 0f       	add	r30, r30
    204a:	8e 2e       	mov	r8, r30
    204c:	88 0c       	add	r8, r8
    204e:	88 0c       	add	r8, r8
    2050:	e8 0d       	add	r30, r8
    2052:	8e 2e       	mov	r8, r30
    2054:	88 0e       	add	r8, r24
    2056:	11 e0       	ldi	r17, 0x01	; 1
    2058:	10 17       	cp	r17, r16
    205a:	60 f4       	brcc	.+24     	; 0x2074 <_Z16ds3231_get_epochP2EC+0xe4>
    205c:	61 2f       	mov	r22, r17
    205e:	c6 01       	movw	r24, r12
    2060:	0e 94 ff 00 	call	0x1fe	; 0x1fe <month_length>
    2064:	28 89       	ldd	r18, Y+16	; 0x10
    2066:	39 89       	ldd	r19, Y+17	; 0x11
    2068:	28 0f       	add	r18, r24
    206a:	31 1d       	adc	r19, r1
    206c:	28 8b       	std	Y+16, r18	; 0x10
    206e:	39 8b       	std	Y+17, r19	; 0x11
    2070:	1f 5f       	subi	r17, 0xFF	; 255
    2072:	f2 cf       	rjmp	.-28     	; 0x2058 <_Z16ds3231_get_epochP2EC+0xc8>
    2074:	e8 2d       	mov	r30, r8
    2076:	88 0c       	add	r8, r8
    2078:	ff 0b       	sbc	r31, r31
    207a:	31 97       	sbiw	r30, 0x01	; 1
    207c:	88 89       	ldd	r24, Y+16	; 0x10
    207e:	99 89       	ldd	r25, Y+17	; 0x11
    2080:	e8 0f       	add	r30, r24
    2082:	f9 1f       	adc	r31, r25
    2084:	89 81       	ldd	r24, Y+1	; 0x01
    2086:	98 2f       	mov	r25, r24
    2088:	92 95       	swap	r25
    208a:	9f 70       	andi	r25, 0x0F	; 15
    208c:	99 0f       	add	r25, r25
    208e:	49 2f       	mov	r20, r25
    2090:	44 0f       	add	r20, r20
    2092:	44 0f       	add	r20, r20
    2094:	49 0f       	add	r20, r25
    2096:	8f 70       	andi	r24, 0x0F	; 15
    2098:	48 0f       	add	r20, r24
    209a:	3a 81       	ldd	r19, Y+2	; 0x02
    209c:	23 2f       	mov	r18, r19
    209e:	22 95       	swap	r18
    20a0:	2f 70       	andi	r18, 0x0F	; 15
    20a2:	22 0f       	add	r18, r18
    20a4:	92 2f       	mov	r25, r18
    20a6:	99 0f       	add	r25, r25
    20a8:	99 0f       	add	r25, r25
    20aa:	82 2f       	mov	r24, r18
    20ac:	89 0f       	add	r24, r25
    20ae:	23 2f       	mov	r18, r19
    20b0:	2f 70       	andi	r18, 0x0F	; 15
    20b2:	28 0f       	add	r18, r24
    20b4:	ab 81       	ldd	r26, Y+3	; 0x03
    20b6:	6a 2f       	mov	r22, r26
    20b8:	70 e0       	ldi	r23, 0x00	; 0
    20ba:	cb 01       	movw	r24, r22
    20bc:	95 95       	asr	r25
    20be:	87 95       	ror	r24
    20c0:	95 95       	asr	r25
    20c2:	87 95       	ror	r24
    20c4:	95 95       	asr	r25
    20c6:	87 95       	ror	r24
    20c8:	95 95       	asr	r25
    20ca:	87 95       	ror	r24
    20cc:	95 95       	asr	r25
    20ce:	87 95       	ror	r24
    20d0:	38 2f       	mov	r19, r24
    20d2:	31 70       	andi	r19, 0x01	; 1
    20d4:	cb 01       	movw	r24, r22
    20d6:	95 95       	asr	r25
    20d8:	87 95       	ror	r24
    20da:	95 95       	asr	r25
    20dc:	87 95       	ror	r24
    20de:	95 95       	asr	r25
    20e0:	87 95       	ror	r24
    20e2:	95 95       	asr	r25
    20e4:	87 95       	ror	r24
    20e6:	81 70       	andi	r24, 0x01	; 1
    20e8:	88 0f       	add	r24, r24
    20ea:	98 2f       	mov	r25, r24
    20ec:	99 0f       	add	r25, r25
    20ee:	99 0f       	add	r25, r25
    20f0:	89 0f       	add	r24, r25
    20f2:	af 70       	andi	r26, 0x0F	; 15
    20f4:	a8 0f       	add	r26, r24
    20f6:	06 2e       	mov	r0, r22
    20f8:	67 2f       	mov	r22, r23
    20fa:	00 0c       	add	r0, r0
    20fc:	66 1f       	adc	r22, r22
    20fe:	77 0b       	sbc	r23, r23
    2100:	00 0c       	add	r0, r0
    2102:	66 1f       	adc	r22, r22
    2104:	77 1f       	adc	r23, r23
    2106:	60 ff       	sbrs	r22, 0
    2108:	04 c0       	rjmp	.+8      	; 0x2112 <_Z16ds3231_get_epochP2EC+0x182>
    210a:	33 23       	and	r19, r19
    210c:	21 f0       	breq	.+8      	; 0x2116 <_Z16ds3231_get_epochP2EC+0x186>
    210e:	a4 5f       	subi	r26, 0xF4	; 244
    2110:	02 c0       	rjmp	.+4      	; 0x2116 <_Z16ds3231_get_epochP2EC+0x186>
    2112:	31 11       	cpse	r19, r1
    2114:	ac 5e       	subi	r26, 0xEC	; 236
    2116:	04 2e       	mov	r0, r20
    2118:	00 0c       	add	r0, r0
    211a:	55 0b       	sbc	r21, r21
    211c:	8c e3       	ldi	r24, 0x3C	; 60
    211e:	28 02       	muls	r18, r24
    2120:	40 0d       	add	r20, r0
    2122:	51 1d       	adc	r21, r1
    2124:	11 24       	eor	r1, r1
    2126:	0a 2e       	mov	r0, r26
    2128:	00 0c       	add	r0, r0
    212a:	bb 0b       	sbc	r27, r27
    212c:	20 e1       	ldi	r18, 0x10	; 16
    212e:	3e e0       	ldi	r19, 0x0E	; 14
    2130:	0e 94 8b 24 	call	0x4916	; 0x4916 <__usmulhisi3>
    2134:	2a 01       	movw	r4, r20
    2136:	55 0f       	add	r21, r21
    2138:	66 08       	sbc	r6, r6
    213a:	77 08       	sbc	r7, r7
    213c:	46 0e       	add	r4, r22
    213e:	57 1e       	adc	r5, r23
    2140:	68 1e       	adc	r6, r24
    2142:	79 1e       	adc	r7, r25
    2144:	df 01       	movw	r26, r30
    2146:	20 e8       	ldi	r18, 0x80	; 128
    2148:	31 e5       	ldi	r19, 0x51	; 81
    214a:	41 e0       	ldi	r20, 0x01	; 1
    214c:	50 e0       	ldi	r21, 0x00	; 0
    214e:	0e 94 9d 24 	call	0x493a	; 0x493a <__mulshisi3>
    2152:	46 0e       	add	r4, r22
    2154:	57 1e       	adc	r5, r23
    2156:	68 1e       	adc	r6, r24
    2158:	79 1e       	adc	r7, r25
    215a:	d7 01       	movw	r26, r14
    215c:	a6 54       	subi	r26, 0x46	; 70
    215e:	b1 09       	sbc	r27, r1
    2160:	20 e8       	ldi	r18, 0x80	; 128
    2162:	33 e3       	ldi	r19, 0x33	; 51
    2164:	41 ee       	ldi	r20, 0xE1	; 225
    2166:	51 e0       	ldi	r21, 0x01	; 1
    2168:	0e 94 9d 24 	call	0x493a	; 0x493a <__mulshisi3>
    216c:	46 0e       	add	r4, r22
    216e:	57 1e       	adc	r5, r23
    2170:	68 1e       	adc	r6, r24
    2172:	79 1e       	adc	r7, r25
    2174:	c7 01       	movw	r24, r14
    2176:	85 54       	subi	r24, 0x45	; 69
    2178:	91 09       	sbc	r25, r1
    217a:	dc 01       	movw	r26, r24
    217c:	0a f4       	brpl	.+2      	; 0x2180 <_Z16ds3231_get_epochP2EC+0x1f0>
    217e:	13 96       	adiw	r26, 0x03	; 3
    2180:	b5 95       	asr	r27
    2182:	a7 95       	ror	r26
    2184:	b5 95       	asr	r27
    2186:	a7 95       	ror	r26
    2188:	20 e8       	ldi	r18, 0x80	; 128
    218a:	31 e5       	ldi	r19, 0x51	; 81
    218c:	41 e0       	ldi	r20, 0x01	; 1
    218e:	50 e0       	ldi	r21, 0x00	; 0
    2190:	0e 94 9d 24 	call	0x493a	; 0x493a <__mulshisi3>
    2194:	46 0e       	add	r4, r22
    2196:	57 1e       	adc	r5, r23
    2198:	68 1e       	adc	r6, r24
    219a:	79 1e       	adc	r7, r25
    219c:	c7 01       	movw	r24, r14
    219e:	01 97       	sbiw	r24, 0x01	; 1
    21a0:	64 e6       	ldi	r22, 0x64	; 100
    21a2:	70 e0       	ldi	r23, 0x00	; 0
    21a4:	0e 94 1e 24 	call	0x483c	; 0x483c <__divmodhi4>
    21a8:	db 01       	movw	r26, r22
    21aa:	20 e8       	ldi	r18, 0x80	; 128
    21ac:	3e ea       	ldi	r19, 0xAE	; 174
    21ae:	4e ef       	ldi	r20, 0xFE	; 254
    21b0:	5f ef       	ldi	r21, 0xFF	; 255
    21b2:	0e 94 9d 24 	call	0x493a	; 0x493a <__mulshisi3>
    21b6:	46 0e       	add	r4, r22
    21b8:	57 1e       	adc	r5, r23
    21ba:	68 1e       	adc	r6, r24
    21bc:	79 1e       	adc	r7, r25
    21be:	c7 01       	movw	r24, r14
    21c0:	85 5d       	subi	r24, 0xD5	; 213
    21c2:	9e 4f       	sbci	r25, 0xFE	; 254
    21c4:	60 e9       	ldi	r22, 0x90	; 144
    21c6:	71 e0       	ldi	r23, 0x01	; 1
    21c8:	0e 94 1e 24 	call	0x483c	; 0x483c <__divmodhi4>
    21cc:	db 01       	movw	r26, r22
    21ce:	20 e8       	ldi	r18, 0x80	; 128
    21d0:	31 e5       	ldi	r19, 0x51	; 81
    21d2:	41 e0       	ldi	r20, 0x01	; 1
    21d4:	50 e0       	ldi	r21, 0x00	; 0
    21d6:	0e 94 9d 24 	call	0x493a	; 0x493a <__mulshisi3>
    21da:	64 0d       	add	r22, r4
    21dc:	75 1d       	adc	r23, r5
    21de:	86 1d       	adc	r24, r6
    21e0:	97 1d       	adc	r25, r7
    21e2:	03 c0       	rjmp	.+6      	; 0x21ea <_Z16ds3231_get_epochP2EC+0x25a>
    21e4:	60 e0       	ldi	r22, 0x00	; 0
    21e6:	70 e0       	ldi	r23, 0x00	; 0
    21e8:	cb 01       	movw	r24, r22
    21ea:	a1 14       	cp	r10, r1
    21ec:	b1 04       	cpc	r11, r1
    21ee:	41 f0       	breq	.+16     	; 0x2200 <_Z16ds3231_get_epochP2EC+0x270>
    21f0:	a7 e0       	ldi	r26, 0x07	; 7
    21f2:	9a 16       	cp	r9, r26
    21f4:	11 f0       	breq	.+4      	; 0x21fa <_Z16ds3231_get_epochP2EC+0x26a>
    21f6:	2c ef       	ldi	r18, 0xFC	; 252
    21f8:	01 c0       	rjmp	.+2      	; 0x21fc <_Z16ds3231_get_epochP2EC+0x26c>
    21fa:	20 e0       	ldi	r18, 0x00	; 0
    21fc:	f5 01       	movw	r30, r10
    21fe:	20 83       	st	Z, r18
    2200:	63 96       	adiw	r28, 0x13	; 19
    2202:	cd bf       	out	0x3d, r28	; 61
    2204:	de bf       	out	0x3e, r29	; 62
    2206:	df 91       	pop	r29
    2208:	cf 91       	pop	r28
    220a:	1f 91       	pop	r17
    220c:	0f 91       	pop	r16
    220e:	ff 90       	pop	r15
    2210:	ef 90       	pop	r14
    2212:	df 90       	pop	r13
    2214:	cf 90       	pop	r12
    2216:	bf 90       	pop	r11
    2218:	af 90       	pop	r10
    221a:	9f 90       	pop	r9
    221c:	8f 90       	pop	r8
    221e:	7f 90       	pop	r7
    2220:	6f 90       	pop	r6
    2222:	5f 90       	pop	r5
    2224:	4f 90       	pop	r4
    2226:	08 95       	ret

00002228 <_Z15ds3231_get_tempPi>:
    2228:	0f 93       	push	r16
    222a:	1f 93       	push	r17
    222c:	cf 93       	push	r28
    222e:	df 93       	push	r29
    2230:	00 d0       	rcall	.+0      	; 0x2232 <_Z15ds3231_get_tempPi+0xa>
    2232:	cd b7       	in	r28, 0x3d	; 61
    2234:	de b7       	in	r29, 0x3e	; 62
    2236:	8c 01       	movw	r16, r24
    2238:	1a 82       	std	Y+2, r1	; 0x02
    223a:	81 e1       	ldi	r24, 0x11	; 17
    223c:	89 83       	std	Y+1, r24	; 0x01
    223e:	42 e0       	ldi	r20, 0x02	; 2
    2240:	be 01       	movw	r22, r28
    2242:	6f 5f       	subi	r22, 0xFF	; 255
    2244:	7f 4f       	sbci	r23, 0xFF	; 255
    2246:	80 ed       	ldi	r24, 0xD0	; 208
    2248:	0e 94 ef 12 	call	0x25de	; 0x25de <I2C_0_GetData>
    224c:	91 e0       	ldi	r25, 0x01	; 1
    224e:	82 30       	cpi	r24, 0x02	; 2
    2250:	09 f4       	brne	.+2      	; 0x2254 <_Z15ds3231_get_tempPi+0x2c>
    2252:	90 e0       	ldi	r25, 0x00	; 0
    2254:	82 30       	cpi	r24, 0x02	; 2
    2256:	49 f4       	brne	.+18     	; 0x226a <_Z15ds3231_get_tempPi+0x42>
    2258:	29 81       	ldd	r18, Y+1	; 0x01
    225a:	30 e0       	ldi	r19, 0x00	; 0
    225c:	32 2f       	mov	r19, r18
    225e:	22 27       	eor	r18, r18
    2260:	8a 81       	ldd	r24, Y+2	; 0x02
    2262:	28 2b       	or	r18, r24
    2264:	f8 01       	movw	r30, r16
    2266:	20 83       	st	Z, r18
    2268:	31 83       	std	Z+1, r19	; 0x01
    226a:	89 2f       	mov	r24, r25
    226c:	0f 90       	pop	r0
    226e:	0f 90       	pop	r0
    2270:	df 91       	pop	r29
    2272:	cf 91       	pop	r28
    2274:	1f 91       	pop	r17
    2276:	0f 91       	pop	r16
    2278:	08 95       	ret

0000227a <_Z20ds3231_set_date_timePc12ClockSetting>:
    227a:	0f 93       	push	r16
    227c:	1f 93       	push	r17
    227e:	cf 93       	push	r28
    2280:	df 93       	push	r29
    2282:	cd b7       	in	r28, 0x3d	; 61
    2284:	de b7       	in	r29, 0x3e	; 62
    2286:	28 97       	sbiw	r28, 0x08	; 8
    2288:	cd bf       	out	0x3d, r28	; 61
    228a:	de bf       	out	0x3e, r29	; 62
    228c:	fc 01       	movw	r30, r24
    228e:	8e 01       	movw	r16, r28
    2290:	0f 5f       	subi	r16, 0xFF	; 255
    2292:	1f 4f       	sbci	r17, 0xFF	; 255
    2294:	88 e0       	ldi	r24, 0x08	; 8
    2296:	d8 01       	movw	r26, r16
    2298:	1d 92       	st	X+, r1
    229a:	8a 95       	dec	r24
    229c:	e9 f7       	brne	.-6      	; 0x2298 <_Z20ds3231_set_date_timePc12ClockSetting+0x1e>
    229e:	82 89       	ldd	r24, Z+18	; 0x12
    22a0:	20 ed       	ldi	r18, 0xD0	; 208
    22a2:	28 0f       	add	r18, r24
    22a4:	91 89       	ldd	r25, Z+17	; 0x11
    22a6:	89 2f       	mov	r24, r25
    22a8:	90 e0       	ldi	r25, 0x00	; 0
    22aa:	c0 97       	sbiw	r24, 0x30	; 48
    22ac:	82 95       	swap	r24
    22ae:	92 95       	swap	r25
    22b0:	90 7f       	andi	r25, 0xF0	; 240
    22b2:	98 27       	eor	r25, r24
    22b4:	80 7f       	andi	r24, 0xF0	; 240
    22b6:	98 27       	eor	r25, r24
    22b8:	82 2b       	or	r24, r18
    22ba:	8a 83       	std	Y+2, r24	; 0x02
    22bc:	87 85       	ldd	r24, Z+15	; 0x0f
    22be:	20 ed       	ldi	r18, 0xD0	; 208
    22c0:	28 0f       	add	r18, r24
    22c2:	96 85       	ldd	r25, Z+14	; 0x0e
    22c4:	89 2f       	mov	r24, r25
    22c6:	90 e0       	ldi	r25, 0x00	; 0
    22c8:	c0 97       	sbiw	r24, 0x30	; 48
    22ca:	82 95       	swap	r24
    22cc:	92 95       	swap	r25
    22ce:	90 7f       	andi	r25, 0xF0	; 240
    22d0:	98 27       	eor	r25, r24
    22d2:	80 7f       	andi	r24, 0xF0	; 240
    22d4:	98 27       	eor	r25, r24
    22d6:	82 2b       	or	r24, r18
    22d8:	8b 83       	std	Y+3, r24	; 0x03
    22da:	84 85       	ldd	r24, Z+12	; 0x0c
    22dc:	20 ed       	ldi	r18, 0xD0	; 208
    22de:	28 0f       	add	r18, r24
    22e0:	93 85       	ldd	r25, Z+11	; 0x0b
    22e2:	89 2f       	mov	r24, r25
    22e4:	90 e0       	ldi	r25, 0x00	; 0
    22e6:	c0 97       	sbiw	r24, 0x30	; 48
    22e8:	82 95       	swap	r24
    22ea:	92 95       	swap	r25
    22ec:	90 7f       	andi	r25, 0xF0	; 240
    22ee:	98 27       	eor	r25, r24
    22f0:	80 7f       	andi	r24, 0xF0	; 240
    22f2:	98 27       	eor	r25, r24
    22f4:	82 2b       	or	r24, r18
    22f6:	8c 83       	std	Y+4, r24	; 0x04
    22f8:	81 85       	ldd	r24, Z+9	; 0x09
    22fa:	20 ed       	ldi	r18, 0xD0	; 208
    22fc:	28 0f       	add	r18, r24
    22fe:	90 85       	ldd	r25, Z+8	; 0x08
    2300:	89 2f       	mov	r24, r25
    2302:	90 e0       	ldi	r25, 0x00	; 0
    2304:	c0 97       	sbiw	r24, 0x30	; 48
    2306:	82 95       	swap	r24
    2308:	92 95       	swap	r25
    230a:	90 7f       	andi	r25, 0xF0	; 240
    230c:	98 27       	eor	r25, r24
    230e:	80 7f       	andi	r24, 0xF0	; 240
    2310:	98 27       	eor	r25, r24
    2312:	82 2b       	or	r24, r18
    2314:	8e 83       	std	Y+6, r24	; 0x06
    2316:	86 81       	ldd	r24, Z+6	; 0x06
    2318:	20 ed       	ldi	r18, 0xD0	; 208
    231a:	28 0f       	add	r18, r24
    231c:	95 81       	ldd	r25, Z+5	; 0x05
    231e:	89 2f       	mov	r24, r25
    2320:	90 e0       	ldi	r25, 0x00	; 0
    2322:	c0 97       	sbiw	r24, 0x30	; 48
    2324:	82 95       	swap	r24
    2326:	92 95       	swap	r25
    2328:	90 7f       	andi	r25, 0xF0	; 240
    232a:	98 27       	eor	r25, r24
    232c:	80 7f       	andi	r24, 0xF0	; 240
    232e:	98 27       	eor	r25, r24
    2330:	82 2b       	or	r24, r18
    2332:	8f 83       	std	Y+7, r24	; 0x07
    2334:	83 81       	ldd	r24, Z+3	; 0x03
    2336:	20 ed       	ldi	r18, 0xD0	; 208
    2338:	28 0f       	add	r18, r24
    233a:	92 81       	ldd	r25, Z+2	; 0x02
    233c:	89 2f       	mov	r24, r25
    233e:	90 e0       	ldi	r25, 0x00	; 0
    2340:	c0 97       	sbiw	r24, 0x30	; 48
    2342:	82 95       	swap	r24
    2344:	92 95       	swap	r25
    2346:	90 7f       	andi	r25, 0xF0	; 240
    2348:	98 27       	eor	r25, r24
    234a:	80 7f       	andi	r24, 0xF0	; 240
    234c:	98 27       	eor	r25, r24
    234e:	82 2b       	or	r24, r18
    2350:	88 87       	std	Y+8, r24	; 0x08
    2352:	86 2f       	mov	r24, r22
    2354:	88 0f       	add	r24, r24
    2356:	88 0f       	add	r24, r24
    2358:	88 0f       	add	r24, r24
    235a:	86 1b       	sub	r24, r22
    235c:	89 83       	std	Y+1, r24	; 0x01
    235e:	48 e0       	ldi	r20, 0x08	; 8
    2360:	b8 01       	movw	r22, r16
    2362:	80 ed       	ldi	r24, 0xD0	; 208
    2364:	0e 94 ba 12 	call	0x2574	; 0x2574 <I2C_0_SendData>
    2368:	28 96       	adiw	r28, 0x08	; 8
    236a:	cd bf       	out	0x3d, r28	; 61
    236c:	de bf       	out	0x3e, r29	; 62
    236e:	df 91       	pop	r29
    2370:	cf 91       	pop	r28
    2372:	1f 91       	pop	r17
    2374:	0f 91       	pop	r16
    2376:	08 95       	ret

00002378 <_Z16ds3231_set_agingPa>:


	void ds3231_set_aging(int8_t* data_in)
	{
    2378:	cf 93       	push	r28
    237a:	df 93       	push	r29
    237c:	1f 92       	push	r1
    237e:	cd b7       	in	r28, 0x3d	; 61
    2380:	de b7       	in	r29, 0x3e	; 62
		int8_t data[1];
		
		data[0] = RTC_AGING;
    2382:	20 e1       	ldi	r18, 0x10	; 16
    2384:	29 83       	std	Y+1, r18	; 0x01
		data[1] = *data_in;
    2386:	fc 01       	movw	r30, r24
    2388:	80 81       	ld	r24, Z
    238a:	8a 83       	std	Y+2, r24	; 0x02
		I2C_0_SendData(DS3231_I2C_SLAVE_ADDR, (uint8_t *)data, 2);
    238c:	42 e0       	ldi	r20, 0x02	; 2
    238e:	be 01       	movw	r22, r28
    2390:	6f 5f       	subi	r22, 0xFF	; 255
    2392:	7f 4f       	sbci	r23, 0xFF	; 255
    2394:	80 ed       	ldi	r24, 0xD0	; 208
    2396:	0e 94 ba 12 	call	0x2574	; 0x2574 <I2C_0_SendData>
	}
    239a:	0f 90       	pop	r0
    239c:	df 91       	pop	r29
    239e:	cf 91       	pop	r28
    23a0:	08 95       	ret

000023a2 <_Z16ds3231_get_agingv>:


	int8_t ds3231_get_aging()
	{
    23a2:	cf 93       	push	r28
    23a4:	df 93       	push	r29
    23a6:	1f 92       	push	r1
    23a8:	cd b7       	in	r28, 0x3d	; 61
    23aa:	de b7       	in	r29, 0x3e	; 62
		int8_t data[1];
		
		data[0] = RTC_AGING;
    23ac:	80 e1       	ldi	r24, 0x10	; 16
    23ae:	89 83       	std	Y+1, r24	; 0x01
		I2C_0_GetData(DS3231_I2C_SLAVE_ADDR, (uint8_t *)data, 1);
    23b0:	41 e0       	ldi	r20, 0x01	; 1
    23b2:	be 01       	movw	r22, r28
    23b4:	6f 5f       	subi	r22, 0xFF	; 255
    23b6:	7f 4f       	sbci	r23, 0xFF	; 255
    23b8:	80 ed       	ldi	r24, 0xD0	; 208
    23ba:	0e 94 ef 12 	call	0x25de	; 0x25de <I2C_0_GetData>
		return(data[0]);
	}
    23be:	89 81       	ldd	r24, Y+1	; 0x01
    23c0:	0f 90       	pop	r0
    23c2:	df 91       	pop	r29
    23c4:	cf 91       	pop	r28
    23c6:	08 95       	ret

000023c8 <_ZN8GoertzelC1Eff>:
		highValueCount++;
	}

	Q2 = Q1;
	Q1 = Q0;
}
    23c8:	ef 92       	push	r14
    23ca:	ff 92       	push	r15
    23cc:	0f 93       	push	r16
    23ce:	1f 93       	push	r17
    23d0:	cf 93       	push	r28
    23d2:	df 93       	push	r29
    23d4:	e4 2e       	mov	r14, r20
    23d6:	f5 2e       	mov	r15, r21
    23d8:	d6 2f       	mov	r29, r22
    23da:	c7 2f       	mov	r28, r23
    23dc:	00 93 a1 41 	sts	0x41A1, r16	; 0x8041a1 <_SAMPLING_FREQUENCY>
    23e0:	10 93 a2 41 	sts	0x41A2, r17	; 0x8041a2 <_SAMPLING_FREQUENCY+0x1>
    23e4:	20 93 a3 41 	sts	0x41A3, r18	; 0x8041a3 <_SAMPLING_FREQUENCY+0x2>
    23e8:	30 93 a4 41 	sts	0x41A4, r19	; 0x8041a4 <_SAMPLING_FREQUENCY+0x3>
    23ec:	20 e0       	ldi	r18, 0x00	; 0
    23ee:	30 e0       	ldi	r19, 0x00	; 0
    23f0:	41 e5       	ldi	r20, 0x51	; 81
    23f2:	53 e4       	ldi	r21, 0x43	; 67
    23f4:	6e 2d       	mov	r22, r14
    23f6:	7f 2d       	mov	r23, r15
    23f8:	8d 2f       	mov	r24, r29
    23fa:	9c 2f       	mov	r25, r28
    23fc:	0e 94 88 23 	call	0x4710	; 0x4710 <__gesf2>
    2400:	18 16       	cp	r1, r24
    2402:	8c f0       	brlt	.+34     	; 0x2426 <_ZN8GoertzelC1Eff+0x5e>
    2404:	20 e0       	ldi	r18, 0x00	; 0
    2406:	30 e0       	ldi	r19, 0x00	; 0
    2408:	48 ec       	ldi	r20, 0xC8	; 200
    240a:	52 e4       	ldi	r21, 0x42	; 66
    240c:	6e 2d       	mov	r22, r14
    240e:	7f 2d       	mov	r23, r15
    2410:	8d 2f       	mov	r24, r29
    2412:	9c 2f       	mov	r25, r28
    2414:	0e 94 29 22 	call	0x4452	; 0x4452 <__cmpsf2>
    2418:	88 23       	and	r24, r24
    241a:	4c f4       	brge	.+18     	; 0x242e <_ZN8GoertzelC1Eff+0x66>
    241c:	e1 2c       	mov	r14, r1
    241e:	f1 2c       	mov	r15, r1
    2420:	d8 ec       	ldi	r29, 0xC8	; 200
    2422:	c2 e4       	ldi	r28, 0x42	; 66
    2424:	04 c0       	rjmp	.+8      	; 0x242e <_ZN8GoertzelC1Eff+0x66>
    2426:	e1 2c       	mov	r14, r1
    2428:	f1 2c       	mov	r15, r1
    242a:	d1 e5       	ldi	r29, 0x51	; 81
    242c:	c3 e4       	ldi	r28, 0x43	; 67
    242e:	6e 2d       	mov	r22, r14
    2430:	7f 2d       	mov	r23, r15
    2432:	8d 2f       	mov	r24, r29
    2434:	9c 2f       	mov	r25, r28
    2436:	0e 94 a0 22 	call	0x4540	; 0x4540 <__fixsfsi>
    243a:	60 93 9f 41 	sts	0x419F, r22	; 0x80419f <_N>
    243e:	70 93 a0 41 	sts	0x41A0, r23	; 0x8041a0 <_N+0x1>
    2442:	80 91 9f 41 	lds	r24, 0x419F	; 0x80419f <_N>
    2446:	90 91 a0 41 	lds	r25, 0x41A0	; 0x8041a0 <_N+0x1>
    244a:	88 0f       	add	r24, r24
    244c:	99 1f       	adc	r25, r25
    244e:	0e 94 a5 24 	call	0x494a	; 0x494a <malloc>
    2452:	80 93 9a 41 	sts	0x419A, r24	; 0x80419a <testData>
    2456:	90 93 9b 41 	sts	0x419B, r25	; 0x80419b <testData+0x1>
    245a:	df 91       	pop	r29
    245c:	cf 91       	pop	r28
    245e:	1f 91       	pop	r17
    2460:	0f 91       	pop	r16
    2462:	ff 90       	pop	r15
    2464:	ef 90       	pop	r14
    2466:	08 95       	ret

00002468 <_ZN8GoertzelD1Ev>:
    2468:	80 91 9a 41 	lds	r24, 0x419A	; 0x80419a <testData>
    246c:	90 91 9b 41 	lds	r25, 0x419B	; 0x80419b <testData+0x1>
    2470:	0e 94 3d 25 	call	0x4a7a	; 0x4a7a <free>
    2474:	08 95       	ret

00002476 <_ZN8Goertzel9DataPointEi>:

bool Goertzel::DataPoint(int data)
{
	if(_samplesReady)
    2476:	80 91 9c 41 	lds	r24, 0x419C	; 0x80419c <_samplesReady>
    247a:	88 23       	and	r24, r24
    247c:	19 f0       	breq	.+6      	; 0x2484 <_ZN8Goertzel9DataPointEi+0xe>
	{
		return(_samplesReady);
    247e:	80 91 9c 41 	lds	r24, 0x419C	; 0x80419c <_samplesReady>
    2482:	08 95       	ret
	}

	testData[_index] = data;
    2484:	e0 91 9d 41 	lds	r30, 0x419D	; 0x80419d <_index>
    2488:	f0 91 9e 41 	lds	r31, 0x419E	; 0x80419e <_index+0x1>
    248c:	ee 0f       	add	r30, r30
    248e:	ff 1f       	adc	r31, r31
    2490:	80 91 9a 41 	lds	r24, 0x419A	; 0x80419a <testData>
    2494:	90 91 9b 41 	lds	r25, 0x419B	; 0x80419b <testData+0x1>
    2498:	e8 0f       	add	r30, r24
    249a:	f9 1f       	adc	r31, r25
    249c:	60 83       	st	Z, r22
    249e:	71 83       	std	Z+1, r23	; 0x01
	_index++;
    24a0:	80 91 9d 41 	lds	r24, 0x419D	; 0x80419d <_index>
    24a4:	90 91 9e 41 	lds	r25, 0x419E	; 0x80419e <_index+0x1>
    24a8:	01 96       	adiw	r24, 0x01	; 1
    24aa:	80 93 9d 41 	sts	0x419D, r24	; 0x80419d <_index>
    24ae:	90 93 9e 41 	sts	0x419E, r25	; 0x80419e <_index+0x1>
	if(_index >= _N)
    24b2:	20 91 9d 41 	lds	r18, 0x419D	; 0x80419d <_index>
    24b6:	30 91 9e 41 	lds	r19, 0x419E	; 0x80419e <_index+0x1>
    24ba:	80 91 9f 41 	lds	r24, 0x419F	; 0x80419f <_N>
    24be:	90 91 a0 41 	lds	r25, 0x41A0	; 0x8041a0 <_N+0x1>
    24c2:	28 17       	cp	r18, r24
    24c4:	39 07       	cpc	r19, r25
    24c6:	3c f0       	brlt	.+14     	; 0x24d6 <_ZN8Goertzel9DataPointEi+0x60>
	{
		_index = 0;
    24c8:	10 92 9d 41 	sts	0x419D, r1	; 0x80419d <_index>
    24cc:	10 92 9e 41 	sts	0x419E, r1	; 0x80419e <_index+0x1>
		_samplesReady = true;
    24d0:	81 e0       	ldi	r24, 0x01	; 1
    24d2:	80 93 9c 41 	sts	0x419C, r24	; 0x80419c <_samplesReady>
	}

	return(_samplesReady);
    24d6:	80 91 9c 41 	lds	r24, 0x419C	; 0x80419c <_samplesReady>
}
    24da:	08 95       	ret

000024dc <_ZL11i2c_0_WaitWv>:
	
	/* Initialize the data register */
	TWI1.MDATA = 0x00;
	
	/* Set bus state idle */
	TWI1.MSTATUS = TWI_BUSSTATE_IDLE_gc;
    24dc:	80 e0       	ldi	r24, 0x00	; 0
    24de:	90 91 05 09 	lds	r25, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
    24e2:	90 7c       	andi	r25, 0xC0	; 192
    24e4:	31 f0       	breq	.+12     	; 0x24f2 <_ZL11i2c_0_WaitWv+0x16>
    24e6:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
    24ea:	84 fd       	sbrc	r24, 4
    24ec:	07 c0       	rjmp	.+14     	; 0x24fc <_ZL11i2c_0_WaitWv+0x20>
    24ee:	81 e0       	ldi	r24, 0x01	; 1
    24f0:	08 c0       	rjmp	.+16     	; 0x2502 <_ZL11i2c_0_WaitWv+0x26>
    24f2:	90 91 05 09 	lds	r25, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
    24f6:	9c 70       	andi	r25, 0x0C	; 12
    24f8:	19 f4       	brne	.+6      	; 0x2500 <_ZL11i2c_0_WaitWv+0x24>
    24fa:	03 c0       	rjmp	.+6      	; 0x2502 <_ZL11i2c_0_WaitWv+0x26>
    24fc:	82 e0       	ldi	r24, 0x02	; 2
    24fe:	01 c0       	rjmp	.+2      	; 0x2502 <_ZL11i2c_0_WaitWv+0x26>
    2500:	84 e0       	ldi	r24, 0x04	; 4
    2502:	88 23       	and	r24, r24
    2504:	61 f3       	breq	.-40     	; 0x24de <_ZL11i2c_0_WaitWv+0x2>
    2506:	08 95       	ret

00002508 <_ZL11i2c_0_WaitRv>:
    2508:	80 e0       	ldi	r24, 0x00	; 0
    250a:	90 91 05 09 	lds	r25, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
    250e:	90 7c       	andi	r25, 0xC0	; 192
    2510:	29 f4       	brne	.+10     	; 0x251c <_ZL11i2c_0_WaitRv+0x14>
    2512:	90 91 05 09 	lds	r25, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
    2516:	9c 70       	andi	r25, 0x0C	; 12
    2518:	19 f4       	brne	.+6      	; 0x2520 <_ZL11i2c_0_WaitRv+0x18>
    251a:	03 c0       	rjmp	.+6      	; 0x2522 <_ZL11i2c_0_WaitRv+0x1a>
    251c:	83 e0       	ldi	r24, 0x03	; 3
    251e:	01 c0       	rjmp	.+2      	; 0x2522 <_ZL11i2c_0_WaitRv+0x1a>
    2520:	84 e0       	ldi	r24, 0x04	; 4
    2522:	88 23       	and	r24, r24
    2524:	91 f3       	breq	.-28     	; 0x250a <_ZL11i2c_0_WaitRv+0x2>
    2526:	08 95       	ret

00002528 <_ZL11I2C_1_WaitWv>:
    2528:	80 e0       	ldi	r24, 0x00	; 0
    252a:	90 91 25 09 	lds	r25, 0x0925	; 0x800925 <__TEXT_REGION_LENGTH__+0x7e0925>
    252e:	90 7c       	andi	r25, 0xC0	; 192
    2530:	31 f0       	breq	.+12     	; 0x253e <_ZL11I2C_1_WaitWv+0x16>
    2532:	80 91 25 09 	lds	r24, 0x0925	; 0x800925 <__TEXT_REGION_LENGTH__+0x7e0925>
    2536:	84 fd       	sbrc	r24, 4
    2538:	07 c0       	rjmp	.+14     	; 0x2548 <_ZL11I2C_1_WaitWv+0x20>
    253a:	81 e0       	ldi	r24, 0x01	; 1
    253c:	08 c0       	rjmp	.+16     	; 0x254e <_ZL11I2C_1_WaitWv+0x26>
    253e:	90 91 25 09 	lds	r25, 0x0925	; 0x800925 <__TEXT_REGION_LENGTH__+0x7e0925>
    2542:	9c 70       	andi	r25, 0x0C	; 12
    2544:	19 f4       	brne	.+6      	; 0x254c <_ZL11I2C_1_WaitWv+0x24>
    2546:	03 c0       	rjmp	.+6      	; 0x254e <_ZL11I2C_1_WaitWv+0x26>
    2548:	82 e0       	ldi	r24, 0x02	; 2
    254a:	01 c0       	rjmp	.+2      	; 0x254e <_ZL11I2C_1_WaitWv+0x26>
    254c:	84 e0       	ldi	r24, 0x04	; 4
    254e:	88 23       	and	r24, r24
    2550:	61 f3       	breq	.-40     	; 0x252a <_ZL11I2C_1_WaitWv+0x2>
    2552:	08 95       	ret

00002554 <_ZL11I2C_1_WaitRv>:
    2554:	80 e0       	ldi	r24, 0x00	; 0
    2556:	90 91 25 09 	lds	r25, 0x0925	; 0x800925 <__TEXT_REGION_LENGTH__+0x7e0925>
    255a:	90 7c       	andi	r25, 0xC0	; 192
    255c:	29 f4       	brne	.+10     	; 0x2568 <_ZL11I2C_1_WaitRv+0x14>
    255e:	90 91 25 09 	lds	r25, 0x0925	; 0x800925 <__TEXT_REGION_LENGTH__+0x7e0925>
    2562:	9c 70       	andi	r25, 0x0C	; 12
    2564:	19 f4       	brne	.+6      	; 0x256c <_ZL11I2C_1_WaitRv+0x18>
    2566:	03 c0       	rjmp	.+6      	; 0x256e <_ZL11I2C_1_WaitRv+0x1a>
    2568:	83 e0       	ldi	r24, 0x03	; 3
    256a:	01 c0       	rjmp	.+2      	; 0x256e <_ZL11I2C_1_WaitRv+0x1a>
    256c:	84 e0       	ldi	r24, 0x04	; 4
    256e:	88 23       	and	r24, r24
    2570:	91 f3       	breq	.-28     	; 0x2556 <_ZL11I2C_1_WaitRv+0x2>
    2572:	08 95       	ret

00002574 <I2C_0_SendData>:
    2574:	ff 92       	push	r15
    2576:	0f 93       	push	r16
    2578:	1f 93       	push	r17
    257a:	cf 93       	push	r28
    257c:	df 93       	push	r29
    257e:	8b 01       	movw	r16, r22
    2580:	c4 2f       	mov	r28, r20
    2582:	8e 7f       	andi	r24, 0xFE	; 254
    2584:	80 93 07 09 	sts	0x0907, r24	; 0x800907 <__TEXT_REGION_LENGTH__+0x7e0907>
    2588:	0e 94 6e 12 	call	0x24dc	; 0x24dc <_ZL11i2c_0_WaitWv>
    258c:	81 30       	cpi	r24, 0x01	; 1
    258e:	c1 f4       	brne	.+48     	; 0x25c0 <I2C_0_SendData+0x4c>
    2590:	cc 23       	and	r28, r28
    2592:	c1 f0       	breq	.+48     	; 0x25c4 <I2C_0_SendData+0x50>
    2594:	01 15       	cp	r16, r1
    2596:	11 05       	cpc	r17, r1
    2598:	b9 f0       	breq	.+46     	; 0x25c8 <I2C_0_SendData+0x54>
    259a:	d0 e0       	ldi	r29, 0x00	; 0
    259c:	ff 24       	eor	r15, r15
    259e:	fa 94       	dec	r15
    25a0:	fc 0e       	add	r15, r28
    25a2:	cc 23       	and	r28, r28
    25a4:	99 f0       	breq	.+38     	; 0x25cc <I2C_0_SendData+0x58>
    25a6:	f8 01       	movw	r30, r16
    25a8:	80 81       	ld	r24, Z
    25aa:	80 93 08 09 	sts	0x0908, r24	; 0x800908 <__TEXT_REGION_LENGTH__+0x7e0908>
    25ae:	0e 94 6e 12 	call	0x24dc	; 0x24dc <_ZL11i2c_0_WaitWv>
    25b2:	81 30       	cpi	r24, 0x01	; 1
    25b4:	69 f4       	brne	.+26     	; 0x25d0 <I2C_0_SendData+0x5c>
    25b6:	df 5f       	subi	r29, 0xFF	; 255
    25b8:	0f 5f       	subi	r16, 0xFF	; 255
    25ba:	1f 4f       	sbci	r17, 0xFF	; 255
    25bc:	cf 2d       	mov	r28, r15
    25be:	ee cf       	rjmp	.-36     	; 0x259c <I2C_0_SendData+0x28>
    25c0:	8f ef       	ldi	r24, 0xFF	; 255
    25c2:	07 c0       	rjmp	.+14     	; 0x25d2 <I2C_0_SendData+0x5e>
    25c4:	80 e0       	ldi	r24, 0x00	; 0
    25c6:	05 c0       	rjmp	.+10     	; 0x25d2 <I2C_0_SendData+0x5e>
    25c8:	80 e0       	ldi	r24, 0x00	; 0
    25ca:	03 c0       	rjmp	.+6      	; 0x25d2 <I2C_0_SendData+0x5e>
    25cc:	8d 2f       	mov	r24, r29
    25ce:	01 c0       	rjmp	.+2      	; 0x25d2 <I2C_0_SendData+0x5e>
    25d0:	8d 2f       	mov	r24, r29
    25d2:	df 91       	pop	r29
    25d4:	cf 91       	pop	r28
    25d6:	1f 91       	pop	r17
    25d8:	0f 91       	pop	r16
    25da:	ff 90       	pop	r15
    25dc:	08 95       	ret

000025de <I2C_0_GetData>:
    25de:	ff 92       	push	r15
    25e0:	0f 93       	push	r16
    25e2:	1f 93       	push	r17
    25e4:	cf 93       	push	r28
    25e6:	df 93       	push	r29
    25e8:	8b 01       	movw	r16, r22
    25ea:	d4 2f       	mov	r29, r20
    25ec:	81 60       	ori	r24, 0x01	; 1
    25ee:	80 93 07 09 	sts	0x0907, r24	; 0x800907 <__TEXT_REGION_LENGTH__+0x7e0907>
    25f2:	0e 94 6e 12 	call	0x24dc	; 0x24dc <_ZL11i2c_0_WaitWv>
    25f6:	81 30       	cpi	r24, 0x01	; 1
    25f8:	49 f5       	brne	.+82     	; 0x264c <I2C_0_GetData+0x6e>
    25fa:	f8 01       	movw	r30, r16
    25fc:	80 81       	ld	r24, Z
    25fe:	88 23       	and	r24, r24
    2600:	31 f0       	breq	.+12     	; 0x260e <I2C_0_GetData+0x30>
    2602:	80 93 08 09 	sts	0x0908, r24	; 0x800908 <__TEXT_REGION_LENGTH__+0x7e0908>
    2606:	0e 94 6e 12 	call	0x24dc	; 0x24dc <_ZL11i2c_0_WaitWv>
    260a:	81 30       	cpi	r24, 0x01	; 1
    260c:	09 f5       	brne	.+66     	; 0x2650 <I2C_0_GetData+0x72>
    260e:	dd 23       	and	r29, r29
    2610:	09 f1       	breq	.+66     	; 0x2654 <I2C_0_GetData+0x76>
    2612:	01 15       	cp	r16, r1
    2614:	11 05       	cpc	r17, r1
    2616:	01 f1       	breq	.+64     	; 0x2658 <I2C_0_GetData+0x7a>
    2618:	c0 e0       	ldi	r28, 0x00	; 0
    261a:	ff 24       	eor	r15, r15
    261c:	fa 94       	dec	r15
    261e:	fd 0e       	add	r15, r29
    2620:	dd 23       	and	r29, r29
    2622:	e1 f0       	breq	.+56     	; 0x265c <I2C_0_GetData+0x7e>
    2624:	0e 94 84 12 	call	0x2508	; 0x2508 <_ZL11i2c_0_WaitRv>
    2628:	83 30       	cpi	r24, 0x03	; 3
    262a:	d1 f4       	brne	.+52     	; 0x2660 <I2C_0_GetData+0x82>
    262c:	80 91 08 09 	lds	r24, 0x0908	; 0x800908 <__TEXT_REGION_LENGTH__+0x7e0908>
    2630:	f8 01       	movw	r30, r16
    2632:	80 83       	st	Z, r24
    2634:	f1 10       	cpse	r15, r1
    2636:	02 c0       	rjmp	.+4      	; 0x263c <I2C_0_GetData+0x5e>
    2638:	87 e0       	ldi	r24, 0x07	; 7
    263a:	01 c0       	rjmp	.+2      	; 0x263e <I2C_0_GetData+0x60>
    263c:	82 e0       	ldi	r24, 0x02	; 2
    263e:	80 93 04 09 	sts	0x0904, r24	; 0x800904 <__TEXT_REGION_LENGTH__+0x7e0904>
    2642:	cf 5f       	subi	r28, 0xFF	; 255
    2644:	0f 5f       	subi	r16, 0xFF	; 255
    2646:	1f 4f       	sbci	r17, 0xFF	; 255
    2648:	df 2d       	mov	r29, r15
    264a:	e7 cf       	rjmp	.-50     	; 0x261a <I2C_0_GetData+0x3c>
    264c:	8f ef       	ldi	r24, 0xFF	; 255
    264e:	09 c0       	rjmp	.+18     	; 0x2662 <I2C_0_GetData+0x84>
    2650:	8f ef       	ldi	r24, 0xFF	; 255
    2652:	07 c0       	rjmp	.+14     	; 0x2662 <I2C_0_GetData+0x84>
    2654:	80 e0       	ldi	r24, 0x00	; 0
    2656:	05 c0       	rjmp	.+10     	; 0x2662 <I2C_0_GetData+0x84>
    2658:	80 e0       	ldi	r24, 0x00	; 0
    265a:	03 c0       	rjmp	.+6      	; 0x2662 <I2C_0_GetData+0x84>
    265c:	8c 2f       	mov	r24, r28
    265e:	01 c0       	rjmp	.+2      	; 0x2662 <I2C_0_GetData+0x84>
    2660:	8c 2f       	mov	r24, r28
    2662:	df 91       	pop	r29
    2664:	cf 91       	pop	r28
    2666:	1f 91       	pop	r17
    2668:	0f 91       	pop	r16
    266a:	ff 90       	pop	r15
    266c:	08 95       	ret

0000266e <I2C_1_SendData>:
	return state;
}

/* Returns how many bytes have been sent, -1 means NACK at address, 0 means client ACKed to client address */
uint8_t I2C_1_SendData(uint8_t address, uint8_t *pData, uint8_t len)
{
    266e:	ff 92       	push	r15
    2670:	0f 93       	push	r16
    2672:	1f 93       	push	r17
    2674:	cf 93       	push	r28
    2676:	df 93       	push	r29
    2678:	8b 01       	movw	r16, r22
    267a:	c4 2f       	mov	r28, r20
	uint8_t retVal = (uint8_t) - 1;
	
	/* start transmitting the client address */
	TWI1.MADDR = address & ~0x01;
    267c:	8e 7f       	andi	r24, 0xFE	; 254
    267e:	80 93 27 09 	sts	0x0927, r24	; 0x800927 <__TEXT_REGION_LENGTH__+0x7e0927>
	if(I2C_1_WaitW() != I2C_ACKED)
    2682:	0e 94 94 12 	call	0x2528	; 0x2528 <_ZL11I2C_1_WaitWv>
    2686:	81 30       	cpi	r24, 0x01	; 1
    2688:	c1 f4       	brne	.+48     	; 0x26ba <I2C_1_SendData+0x4c>
	return retVal;

	retVal = 0;
	if((len != 0) && (pData != NULL))
    268a:	cc 23       	and	r28, r28
    268c:	c1 f0       	breq	.+48     	; 0x26be <I2C_1_SendData+0x50>
    268e:	01 15       	cp	r16, r1
    2690:	11 05       	cpc	r17, r1
    2692:	b9 f0       	breq	.+46     	; 0x26c2 <I2C_1_SendData+0x54>
    2694:	d0 e0       	ldi	r29, 0x00	; 0
	{
		while(len--)
    2696:	ff 24       	eor	r15, r15
    2698:	fa 94       	dec	r15
    269a:	fc 0e       	add	r15, r28
    269c:	cc 23       	and	r28, r28
    269e:	99 f0       	breq	.+38     	; 0x26c6 <I2C_1_SendData+0x58>
		{
			TWI1.MDATA = *pData;
    26a0:	f8 01       	movw	r30, r16
    26a2:	80 81       	ld	r24, Z
    26a4:	80 93 28 09 	sts	0x0928, r24	; 0x800928 <__TEXT_REGION_LENGTH__+0x7e0928>
			if(I2C_1_WaitW() == I2C_ACKED)
    26a8:	0e 94 94 12 	call	0x2528	; 0x2528 <_ZL11I2C_1_WaitWv>
    26ac:	81 30       	cpi	r24, 0x01	; 1
    26ae:	69 f4       	brne	.+26     	; 0x26ca <I2C_1_SendData+0x5c>
			{
				retVal++;
    26b0:	df 5f       	subi	r29, 0xFF	; 255
				pData++;
    26b2:	0f 5f       	subi	r16, 0xFF	; 255
    26b4:	1f 4f       	sbci	r17, 0xFF	; 255
	return retVal;

	retVal = 0;
	if((len != 0) && (pData != NULL))
	{
		while(len--)
    26b6:	cf 2d       	mov	r28, r15
    26b8:	ee cf       	rjmp	.-36     	; 0x2696 <I2C_1_SendData+0x28>
	uint8_t retVal = (uint8_t) - 1;
	
	/* start transmitting the client address */
	TWI1.MADDR = address & ~0x01;
	if(I2C_1_WaitW() != I2C_ACKED)
	return retVal;
    26ba:	8f ef       	ldi	r24, 0xFF	; 255
    26bc:	07 c0       	rjmp	.+14     	; 0x26cc <I2C_1_SendData+0x5e>

	retVal = 0;
    26be:	80 e0       	ldi	r24, 0x00	; 0
    26c0:	05 c0       	rjmp	.+10     	; 0x26cc <I2C_1_SendData+0x5e>
    26c2:	80 e0       	ldi	r24, 0x00	; 0
    26c4:	03 c0       	rjmp	.+6      	; 0x26cc <I2C_1_SendData+0x5e>
    26c6:	8d 2f       	mov	r24, r29
    26c8:	01 c0       	rjmp	.+2      	; 0x26cc <I2C_1_SendData+0x5e>
    26ca:	8d 2f       	mov	r24, r29
			}
		}
	}
	
	return retVal;
}
    26cc:	df 91       	pop	r29
    26ce:	cf 91       	pop	r28
    26d0:	1f 91       	pop	r17
    26d2:	0f 91       	pop	r16
    26d4:	ff 90       	pop	r15
    26d6:	08 95       	ret

000026d8 <I2C_1_GetData>:

/* Returns how many bytes have been received, -1 means NACK at address */
uint8_t I2C_1_GetData(uint8_t address, uint8_t *pData, uint8_t len)
{
    26d8:	ff 92       	push	r15
    26da:	0f 93       	push	r16
    26dc:	1f 93       	push	r17
    26de:	cf 93       	push	r28
    26e0:	df 93       	push	r29
    26e2:	8b 01       	movw	r16, r22
    26e4:	d4 2f       	mov	r29, r20
	uint8_t retVal = (uint8_t) -1;
	
	/* start transmitting the client address */
	TWI1.MADDR = address | 0x01;
    26e6:	81 60       	ori	r24, 0x01	; 1
    26e8:	80 93 27 09 	sts	0x0927, r24	; 0x800927 <__TEXT_REGION_LENGTH__+0x7e0927>
	if(I2C_1_WaitW() != I2C_ACKED)
    26ec:	0e 94 94 12 	call	0x2528	; 0x2528 <_ZL11I2C_1_WaitWv>
    26f0:	81 30       	cpi	r24, 0x01	; 1
    26f2:	49 f5       	brne	.+82     	; 0x2746 <I2C_1_GetData+0x6e>
	return retVal;
	
	/* if pData[0] contains a register address, send it first */
	if(pData[0])
    26f4:	f8 01       	movw	r30, r16
    26f6:	80 81       	ld	r24, Z
    26f8:	88 23       	and	r24, r24
    26fa:	31 f0       	breq	.+12     	; 0x2708 <I2C_1_GetData+0x30>
	{
		TWI1.MDATA = pData[0];
    26fc:	80 93 28 09 	sts	0x0928, r24	; 0x800928 <__TEXT_REGION_LENGTH__+0x7e0928>
		if(I2C_1_WaitW() != I2C_ACKED)
    2700:	0e 94 94 12 	call	0x2528	; 0x2528 <_ZL11I2C_1_WaitWv>
    2704:	81 30       	cpi	r24, 0x01	; 1
    2706:	09 f5       	brne	.+66     	; 0x274a <I2C_1_GetData+0x72>
			return retVal;
		}
	}

	retVal = 0;
	if((len != 0) && (pData !=NULL ))
    2708:	dd 23       	and	r29, r29
    270a:	09 f1       	breq	.+66     	; 0x274e <I2C_1_GetData+0x76>
    270c:	01 15       	cp	r16, r1
    270e:	11 05       	cpc	r17, r1
    2710:	01 f1       	breq	.+64     	; 0x2752 <I2C_1_GetData+0x7a>
    2712:	c0 e0       	ldi	r28, 0x00	; 0
	{
		while(len--)
    2714:	ff 24       	eor	r15, r15
    2716:	fa 94       	dec	r15
    2718:	fd 0e       	add	r15, r29
    271a:	dd 23       	and	r29, r29
    271c:	e1 f0       	breq	.+56     	; 0x2756 <I2C_1_GetData+0x7e>
		{
			if(I2C_1_WaitR() == I2C_READY)
    271e:	0e 94 aa 12 	call	0x2554	; 0x2554 <_ZL11I2C_1_WaitRv>
    2722:	83 30       	cpi	r24, 0x03	; 3
    2724:	d1 f4       	brne	.+52     	; 0x275a <I2C_1_GetData+0x82>
			{
				*pData = TWI1.MDATA;
    2726:	80 91 28 09 	lds	r24, 0x0928	; 0x800928 <__TEXT_REGION_LENGTH__+0x7e0928>
    272a:	f8 01       	movw	r30, r16
    272c:	80 83       	st	Z, r24
				TWI1.MCTRLB = (len == 0)? TWI_ACKACT_bm | TWI_MCMD_STOP_gc : TWI_MCMD_RECVTRANS_gc;
    272e:	f1 10       	cpse	r15, r1
    2730:	02 c0       	rjmp	.+4      	; 0x2736 <I2C_1_GetData+0x5e>
    2732:	87 e0       	ldi	r24, 0x07	; 7
    2734:	01 c0       	rjmp	.+2      	; 0x2738 <I2C_1_GetData+0x60>
    2736:	82 e0       	ldi	r24, 0x02	; 2
    2738:	80 93 24 09 	sts	0x0924, r24	; 0x800924 <__TEXT_REGION_LENGTH__+0x7e0924>
				retVal++;
    273c:	cf 5f       	subi	r28, 0xFF	; 255
				pData++;
    273e:	0f 5f       	subi	r16, 0xFF	; 255
    2740:	1f 4f       	sbci	r17, 0xFF	; 255
	}

	retVal = 0;
	if((len != 0) && (pData !=NULL ))
	{
		while(len--)
    2742:	df 2d       	mov	r29, r15
    2744:	e7 cf       	rjmp	.-50     	; 0x2714 <I2C_1_GetData+0x3c>
	uint8_t retVal = (uint8_t) -1;
	
	/* start transmitting the client address */
	TWI1.MADDR = address | 0x01;
	if(I2C_1_WaitW() != I2C_ACKED)
	return retVal;
    2746:	8f ef       	ldi	r24, 0xFF	; 255
    2748:	09 c0       	rjmp	.+18     	; 0x275c <I2C_1_GetData+0x84>
	if(pData[0])
	{
		TWI1.MDATA = pData[0];
		if(I2C_1_WaitW() != I2C_ACKED)
		{
			return retVal;
    274a:	8f ef       	ldi	r24, 0xFF	; 255
    274c:	07 c0       	rjmp	.+14     	; 0x275c <I2C_1_GetData+0x84>
		}
	}

	retVal = 0;
    274e:	80 e0       	ldi	r24, 0x00	; 0
    2750:	05 c0       	rjmp	.+10     	; 0x275c <I2C_1_GetData+0x84>
    2752:	80 e0       	ldi	r24, 0x00	; 0
    2754:	03 c0       	rjmp	.+6      	; 0x275c <I2C_1_GetData+0x84>
    2756:	8c 2f       	mov	r24, r28
    2758:	01 c0       	rjmp	.+2      	; 0x275c <I2C_1_GetData+0x84>
    275a:	8c 2f       	mov	r24, r28
			break;
		}
	}
	
	return retVal;
}
    275c:	df 91       	pop	r29
    275e:	cf 91       	pop	r28
    2760:	1f 91       	pop	r17
    2762:	0f 91       	pop	r16
    2764:	ff 90       	pop	r15
    2766:	08 95       	ret

00002768 <_Z18nextFullLBTxBufferv>:


void lb_send_sync(void)
{
	sprintf(g_tempMsgBuff, ".....");
	lb_send_text(g_tempMsgBuff);
    2768:	90 e0       	ldi	r25, 0x00	; 0
    276a:	80 91 a8 41 	lds	r24, 0x41A8	; 0x8041a8 <_ZZ18nextFullLBTxBuffervE11bufferIndex>
    276e:	28 2f       	mov	r18, r24
    2770:	30 e0       	ldi	r19, 0x00	; 0
    2772:	42 e3       	ldi	r20, 0x32	; 50
    2774:	42 9f       	mul	r20, r18
    2776:	f0 01       	movw	r30, r0
    2778:	43 9f       	mul	r20, r19
    277a:	f0 0d       	add	r31, r0
    277c:	11 24       	eor	r1, r1
    277e:	e3 5d       	subi	r30, 0xD3	; 211
    2780:	fd 4b       	sbci	r31, 0xBD	; 189
    2782:	40 81       	ld	r20, Z
    2784:	41 11       	cpse	r20, r1
    2786:	0b c0       	rjmp	.+22     	; 0x279e <_Z18nextFullLBTxBufferv+0x36>
    2788:	9f 5f       	subi	r25, 0xFF	; 255
    278a:	94 30       	cpi	r25, 0x04	; 4
    278c:	50 f4       	brcc	.+20     	; 0x27a2 <_Z18nextFullLBTxBufferv+0x3a>
    278e:	8f 5f       	subi	r24, 0xFF	; 255
    2790:	80 93 a8 41 	sts	0x41A8, r24	; 0x8041a8 <_ZZ18nextFullLBTxBuffervE11bufferIndex>
    2794:	84 30       	cpi	r24, 0x04	; 4
    2796:	48 f3       	brcs	.-46     	; 0x276a <_Z18nextFullLBTxBufferv+0x2>
    2798:	10 92 a8 41 	sts	0x41A8, r1	; 0x8041a8 <_ZZ18nextFullLBTxBuffervE11bufferIndex>
    279c:	e6 cf       	rjmp	.-52     	; 0x276a <_Z18nextFullLBTxBufferv+0x2>
    279e:	81 e0       	ldi	r24, 0x01	; 1
    27a0:	01 c0       	rjmp	.+2      	; 0x27a4 <_Z18nextFullLBTxBufferv+0x3c>
    27a2:	80 e0       	ldi	r24, 0x00	; 0
    27a4:	88 23       	and	r24, r24
    27a6:	49 f0       	breq	.+18     	; 0x27ba <_Z18nextFullLBTxBufferv+0x52>
    27a8:	42 e3       	ldi	r20, 0x32	; 50
    27aa:	42 9f       	mul	r20, r18
    27ac:	c0 01       	movw	r24, r0
    27ae:	43 9f       	mul	r20, r19
    27b0:	90 0d       	add	r25, r0
    27b2:	11 24       	eor	r1, r1
    27b4:	83 5d       	subi	r24, 0xD3	; 211
    27b6:	9d 4b       	sbci	r25, 0xBD	; 189
    27b8:	08 95       	ret
    27ba:	80 e0       	ldi	r24, 0x00	; 0
    27bc:	90 e0       	ldi	r25, 0x00	; 0
    27be:	08 95       	ret

000027c0 <_Z19nextEmptyLBTxBufferv>:
    27c0:	90 e0       	ldi	r25, 0x00	; 0
    27c2:	80 91 a7 41 	lds	r24, 0x41A7	; 0x8041a7 <_ZZ19nextEmptyLBTxBuffervE11bufferIndex>
    27c6:	28 2f       	mov	r18, r24
    27c8:	30 e0       	ldi	r19, 0x00	; 0
    27ca:	42 e3       	ldi	r20, 0x32	; 50
    27cc:	42 9f       	mul	r20, r18
    27ce:	f0 01       	movw	r30, r0
    27d0:	43 9f       	mul	r20, r19
    27d2:	f0 0d       	add	r31, r0
    27d4:	11 24       	eor	r1, r1
    27d6:	e3 5d       	subi	r30, 0xD3	; 211
    27d8:	fd 4b       	sbci	r31, 0xBD	; 189
    27da:	40 81       	ld	r20, Z
    27dc:	44 23       	and	r20, r20
    27de:	59 f0       	breq	.+22     	; 0x27f6 <_Z19nextEmptyLBTxBufferv+0x36>
    27e0:	9f 5f       	subi	r25, 0xFF	; 255
    27e2:	94 30       	cpi	r25, 0x04	; 4
    27e4:	50 f4       	brcc	.+20     	; 0x27fa <_Z19nextEmptyLBTxBufferv+0x3a>
    27e6:	8f 5f       	subi	r24, 0xFF	; 255
    27e8:	80 93 a7 41 	sts	0x41A7, r24	; 0x8041a7 <_ZZ19nextEmptyLBTxBuffervE11bufferIndex>
    27ec:	84 30       	cpi	r24, 0x04	; 4
    27ee:	48 f3       	brcs	.-46     	; 0x27c2 <_Z19nextEmptyLBTxBufferv+0x2>
    27f0:	10 92 a7 41 	sts	0x41A7, r1	; 0x8041a7 <_ZZ19nextEmptyLBTxBuffervE11bufferIndex>
    27f4:	e6 cf       	rjmp	.-52     	; 0x27c2 <_Z19nextEmptyLBTxBufferv+0x2>
    27f6:	81 e0       	ldi	r24, 0x01	; 1
    27f8:	01 c0       	rjmp	.+2      	; 0x27fc <_Z19nextEmptyLBTxBufferv+0x3c>
    27fa:	80 e0       	ldi	r24, 0x00	; 0
    27fc:	88 23       	and	r24, r24
    27fe:	49 f0       	breq	.+18     	; 0x2812 <_Z19nextEmptyLBTxBufferv+0x52>
    2800:	42 e3       	ldi	r20, 0x32	; 50
    2802:	42 9f       	mul	r20, r18
    2804:	c0 01       	movw	r24, r0
    2806:	43 9f       	mul	r20, r19
    2808:	90 0d       	add	r25, r0
    280a:	11 24       	eor	r1, r1
    280c:	83 5d       	subi	r24, 0xD3	; 211
    280e:	9d 4b       	sbci	r25, 0xBD	; 189
    2810:	08 95       	ret
    2812:	80 e0       	ldi	r24, 0x00	; 0
    2814:	90 e0       	ldi	r25, 0x00	; 0
    2816:	08 95       	ret

00002818 <_Z19nextEmptyLBRxBufferv>:
    2818:	90 e0       	ldi	r25, 0x00	; 0
    281a:	80 91 a6 41 	lds	r24, 0x41A6	; 0x8041a6 <_ZZ19nextEmptyLBRxBuffervE11bufferIndex>
    281e:	28 2f       	mov	r18, r24
    2820:	30 e0       	ldi	r19, 0x00	; 0
    2822:	42 e4       	ldi	r20, 0x42	; 66
    2824:	42 9f       	mul	r20, r18
    2826:	f0 01       	movw	r30, r0
    2828:	43 9f       	mul	r20, r19
    282a:	f0 0d       	add	r31, r0
    282c:	11 24       	eor	r1, r1
    282e:	e7 55       	subi	r30, 0x57	; 87
    2830:	fe 4b       	sbci	r31, 0xBE	; 190
    2832:	41 81       	ldd	r20, Z+1	; 0x01
    2834:	52 81       	ldd	r21, Z+2	; 0x02
    2836:	45 2b       	or	r20, r21
    2838:	59 f0       	breq	.+22     	; 0x2850 <_Z19nextEmptyLBRxBufferv+0x38>
    283a:	9f 5f       	subi	r25, 0xFF	; 255
    283c:	92 30       	cpi	r25, 0x02	; 2
    283e:	50 f4       	brcc	.+20     	; 0x2854 <_Z19nextEmptyLBRxBufferv+0x3c>
    2840:	8f 5f       	subi	r24, 0xFF	; 255
    2842:	80 93 a6 41 	sts	0x41A6, r24	; 0x8041a6 <_ZZ19nextEmptyLBRxBuffervE11bufferIndex>
    2846:	82 30       	cpi	r24, 0x02	; 2
    2848:	40 f3       	brcs	.-48     	; 0x281a <_Z19nextEmptyLBRxBufferv+0x2>
    284a:	10 92 a6 41 	sts	0x41A6, r1	; 0x8041a6 <_ZZ19nextEmptyLBRxBuffervE11bufferIndex>
    284e:	e5 cf       	rjmp	.-54     	; 0x281a <_Z19nextEmptyLBRxBufferv+0x2>
    2850:	81 e0       	ldi	r24, 0x01	; 1
    2852:	01 c0       	rjmp	.+2      	; 0x2856 <_Z19nextEmptyLBRxBufferv+0x3e>
    2854:	80 e0       	ldi	r24, 0x00	; 0
    2856:	88 23       	and	r24, r24
    2858:	49 f0       	breq	.+18     	; 0x286c <_Z19nextEmptyLBRxBufferv+0x54>
    285a:	42 e4       	ldi	r20, 0x42	; 66
    285c:	42 9f       	mul	r20, r18
    285e:	c0 01       	movw	r24, r0
    2860:	43 9f       	mul	r20, r19
    2862:	90 0d       	add	r25, r0
    2864:	11 24       	eor	r1, r1
    2866:	87 55       	subi	r24, 0x57	; 87
    2868:	9e 4b       	sbci	r25, 0xBE	; 190
    286a:	08 95       	ret
    286c:	80 e0       	ldi	r24, 0x00	; 0
    286e:	90 e0       	ldi	r25, 0x00	; 0
    2870:	08 95       	ret

00002872 <_Z18nextFullLBRxBufferv>:
    2872:	90 e0       	ldi	r25, 0x00	; 0
    2874:	80 91 a5 41 	lds	r24, 0x41A5	; 0x8041a5 <_ZZ18nextFullLBRxBuffervE11bufferIndex>
    2878:	28 2f       	mov	r18, r24
    287a:	30 e0       	ldi	r19, 0x00	; 0
    287c:	42 e4       	ldi	r20, 0x42	; 66
    287e:	42 9f       	mul	r20, r18
    2880:	f0 01       	movw	r30, r0
    2882:	43 9f       	mul	r20, r19
    2884:	f0 0d       	add	r31, r0
    2886:	11 24       	eor	r1, r1
    2888:	e7 55       	subi	r30, 0x57	; 87
    288a:	fe 4b       	sbci	r31, 0xBE	; 190
    288c:	41 81       	ldd	r20, Z+1	; 0x01
    288e:	52 81       	ldd	r21, Z+2	; 0x02
    2890:	45 2b       	or	r20, r21
    2892:	59 f4       	brne	.+22     	; 0x28aa <_Z18nextFullLBRxBufferv+0x38>
    2894:	9f 5f       	subi	r25, 0xFF	; 255
    2896:	92 30       	cpi	r25, 0x02	; 2
    2898:	50 f4       	brcc	.+20     	; 0x28ae <_Z18nextFullLBRxBufferv+0x3c>
    289a:	8f 5f       	subi	r24, 0xFF	; 255
    289c:	80 93 a5 41 	sts	0x41A5, r24	; 0x8041a5 <_ZZ18nextFullLBRxBuffervE11bufferIndex>
    28a0:	82 30       	cpi	r24, 0x02	; 2
    28a2:	40 f3       	brcs	.-48     	; 0x2874 <_Z18nextFullLBRxBufferv+0x2>
    28a4:	10 92 a5 41 	sts	0x41A5, r1	; 0x8041a5 <_ZZ18nextFullLBRxBuffervE11bufferIndex>
    28a8:	e5 cf       	rjmp	.-54     	; 0x2874 <_Z18nextFullLBRxBufferv+0x2>
    28aa:	81 e0       	ldi	r24, 0x01	; 1
    28ac:	01 c0       	rjmp	.+2      	; 0x28b0 <_Z18nextFullLBRxBufferv+0x3e>
    28ae:	80 e0       	ldi	r24, 0x00	; 0
    28b0:	88 23       	and	r24, r24
    28b2:	49 f0       	breq	.+18     	; 0x28c6 <_Z18nextFullLBRxBufferv+0x54>
    28b4:	42 e4       	ldi	r20, 0x42	; 66
    28b6:	42 9f       	mul	r20, r18
    28b8:	c0 01       	movw	r24, r0
    28ba:	43 9f       	mul	r20, r19
    28bc:	90 0d       	add	r25, r0
    28be:	11 24       	eor	r1, r1
    28c0:	87 55       	subi	r24, 0x57	; 87
    28c2:	9e 4b       	sbci	r25, 0xBE	; 190
    28c4:	08 95       	ret
    28c6:	80 e0       	ldi	r24, 0x00	; 0
    28c8:	90 e0       	ldi	r25, 0x00	; 0
    28ca:	08 95       	ret

000028cc <_Z19linkbusTxInProgressv>:
    28cc:	80 91 f5 42 	lds	r24, 0x42F5	; 0x8042f5 <_ZL17linkbus_tx_active>
    28d0:	08 95       	ret

000028d2 <_Z16linkbus_start_txv>:
    28d2:	cf 93       	push	r28
    28d4:	80 91 f5 42 	lds	r24, 0x42F5	; 0x8042f5 <_ZL17linkbus_tx_active>
    28d8:	c1 e0       	ldi	r28, 0x01	; 1
    28da:	81 11       	cpse	r24, r1
    28dc:	c0 e0       	ldi	r28, 0x00	; 0
    28de:	81 11       	cpse	r24, r1
    28e0:	05 c0       	rjmp	.+10     	; 0x28ec <_Z16linkbus_start_txv+0x1a>
    28e2:	81 e0       	ldi	r24, 0x01	; 1
    28e4:	80 93 f5 42 	sts	0x42F5, r24	; 0x8042f5 <_ZL17linkbus_tx_active>
    28e8:	0e 94 aa 21 	call	0x4354	; 0x4354 <USART1_enable_tx>
    28ec:	8c 2f       	mov	r24, r28
    28ee:	cf 91       	pop	r28
    28f0:	08 95       	ret

000028f2 <_Z14linkbus_end_txv>:
    28f2:	80 91 f5 42 	lds	r24, 0x42F5	; 0x8042f5 <_ZL17linkbus_tx_active>
    28f6:	88 23       	and	r24, r24
    28f8:	39 f0       	breq	.+14     	; 0x2908 <_Z14linkbus_end_txv+0x16>
    28fa:	e0 e2       	ldi	r30, 0x20	; 32
    28fc:	f8 e0       	ldi	r31, 0x08	; 8
    28fe:	85 81       	ldd	r24, Z+5	; 0x05
    2900:	8f 7d       	andi	r24, 0xDF	; 223
    2902:	85 83       	std	Z+5, r24	; 0x05
    2904:	10 92 f5 42 	sts	0x42F5, r1	; 0x8042f5 <_ZL17linkbus_tx_active>
    2908:	08 95       	ret

0000290a <_Z16linkbus_reset_rxv>:
    290a:	cf 93       	push	r28
    290c:	df 93       	push	r29
    290e:	80 91 26 08 	lds	r24, 0x0826	; 0x800826 <__TEXT_REGION_LENGTH__+0x7e0826>
    2912:	88 23       	and	r24, r24
    2914:	7c f4       	brge	.+30     	; 0x2934 <_Z16linkbus_reset_rxv+0x2a>
    2916:	e0 e2       	ldi	r30, 0x20	; 32
    2918:	f8 e0       	ldi	r31, 0x08	; 8
    291a:	86 81       	ldd	r24, Z+6	; 0x06
    291c:	8f 77       	andi	r24, 0x7F	; 127
    291e:	86 83       	std	Z+6, r24	; 0x06
    2920:	84 e8       	ldi	r24, 0x84	; 132
    2922:	a9 ea       	ldi	r26, 0xA9	; 169
    2924:	b1 e4       	ldi	r27, 0x41	; 65
    2926:	ed 01       	movw	r28, r26
    2928:	19 92       	st	Y+, r1
    292a:	8a 95       	dec	r24
    292c:	e9 f7       	brne	.-6      	; 0x2928 <_Z16linkbus_reset_rxv+0x1e>
    292e:	86 81       	ldd	r24, Z+6	; 0x06
    2930:	80 68       	ori	r24, 0x80	; 128
    2932:	86 83       	std	Z+6, r24	; 0x06
    2934:	df 91       	pop	r29
    2936:	cf 91       	pop	r28
    2938:	08 95       	ret

0000293a <_Z21USART1_initializationm>:
    293a:	28 b1       	in	r18, 0x08	; 8
    293c:	2d 7f       	andi	r18, 0xFD	; 253
    293e:	28 b9       	out	0x08, r18	; 8
    2940:	e1 e5       	ldi	r30, 0x51	; 81
    2942:	f4 e0       	ldi	r31, 0x04	; 4
    2944:	20 81       	ld	r18, Z
    2946:	27 7f       	andi	r18, 0xF7	; 247
    2948:	20 83       	st	Z, r18
    294a:	29 b1       	in	r18, 0x09	; 9
    294c:	2e 7f       	andi	r18, 0xFE	; 254
    294e:	29 b9       	out	0x09, r18	; 9
    2950:	28 b1       	in	r18, 0x08	; 8
    2952:	21 60       	ori	r18, 0x01	; 1
    2954:	28 b9       	out	0x08, r18	; 8
    2956:	0e 94 88 21 	call	0x4310	; 0x4310 <USART1_init>
    295a:	08 95       	ret

0000295c <_Z12linkbus_initv>:
    295c:	84 e8       	ldi	r24, 0x84	; 132
    295e:	e9 ea       	ldi	r30, 0xA9	; 169
    2960:	f1 e4       	ldi	r31, 0x41	; 65
    2962:	df 01       	movw	r26, r30
    2964:	1d 92       	st	X+, r1
    2966:	8a 95       	dec	r24
    2968:	e9 f7       	brne	.-6      	; 0x2964 <_Z12linkbus_initv+0x8>
    296a:	80 e0       	ldi	r24, 0x00	; 0
    296c:	90 e0       	ldi	r25, 0x00	; 0
    296e:	84 30       	cpi	r24, 0x04	; 4
    2970:	91 05       	cpc	r25, r1
    2972:	5c f4       	brge	.+22     	; 0x298a <_Z12linkbus_initv+0x2e>
    2974:	22 e3       	ldi	r18, 0x32	; 50
    2976:	28 9f       	mul	r18, r24
    2978:	f0 01       	movw	r30, r0
    297a:	29 9f       	mul	r18, r25
    297c:	f0 0d       	add	r31, r0
    297e:	11 24       	eor	r1, r1
    2980:	e3 5d       	subi	r30, 0xD3	; 211
    2982:	fd 4b       	sbci	r31, 0xBD	; 189
    2984:	10 82       	st	Z, r1
    2986:	01 96       	adiw	r24, 0x01	; 1
    2988:	f2 cf       	rjmp	.-28     	; 0x296e <_Z12linkbus_initv+0x12>
    298a:	60 e8       	ldi	r22, 0x80	; 128
    298c:	75 e2       	ldi	r23, 0x25	; 37
    298e:	80 e0       	ldi	r24, 0x00	; 0
    2990:	90 e0       	ldi	r25, 0x00	; 0
    2992:	0e 94 9d 14 	call	0x293a	; 0x293a <_Z21USART1_initializationm>
    2996:	10 92 1f 40 	sts	0x401F, r1	; 0x80401f <_ZL14g_bus_disabled>
    299a:	08 95       	ret

0000299c <_Z15linkbus_disablev>:
    299c:	81 e0       	ldi	r24, 0x01	; 1
    299e:	80 93 1f 40 	sts	0x401F, r24	; 0x80401f <_ZL14g_bus_disabled>
    29a2:	0e 94 b3 21 	call	0x4366	; 0x4366 <USART1_disable>
    29a6:	0e 94 79 14 	call	0x28f2	; 0x28f2 <_Z14linkbus_end_txv>
    29aa:	84 e8       	ldi	r24, 0x84	; 132
    29ac:	e9 ea       	ldi	r30, 0xA9	; 169
    29ae:	f1 e4       	ldi	r31, 0x41	; 65
    29b0:	df 01       	movw	r26, r30
    29b2:	1d 92       	st	X+, r1
    29b4:	8a 95       	dec	r24
    29b6:	e9 f7       	brne	.-6      	; 0x29b2 <_Z15linkbus_disablev+0x16>
    29b8:	80 e0       	ldi	r24, 0x00	; 0
    29ba:	84 30       	cpi	r24, 0x04	; 4
    29bc:	48 f4       	brcc	.+18     	; 0x29d0 <_Z15linkbus_disablev+0x34>
    29be:	b2 e3       	ldi	r27, 0x32	; 50
    29c0:	8b 9f       	mul	r24, r27
    29c2:	f0 01       	movw	r30, r0
    29c4:	11 24       	eor	r1, r1
    29c6:	e3 5d       	subi	r30, 0xD3	; 211
    29c8:	fd 4b       	sbci	r31, 0xBD	; 189
    29ca:	10 82       	st	Z, r1
    29cc:	8f 5f       	subi	r24, 0xFF	; 255
    29ce:	f5 cf       	rjmp	.-22     	; 0x29ba <_Z15linkbus_disablev+0x1e>
    29d0:	08 95       	ret

000029d2 <_Z12lb_send_textPc>:
    29d2:	0f 93       	push	r16
    29d4:	1f 93       	push	r17
    29d6:	cf 93       	push	r28
    29d8:	df 93       	push	r29
    29da:	20 91 1f 40 	lds	r18, 0x401F	; 0x80401f <_ZL14g_bus_disabled>
    29de:	21 11       	cpse	r18, r1
    29e0:	2f c0       	rjmp	.+94     	; 0x2a40 <_Z12lb_send_textPc+0x6e>
    29e2:	00 97       	sbiw	r24, 0x00	; 0
    29e4:	79 f1       	breq	.+94     	; 0x2a44 <_Z12lb_send_textPc+0x72>
    29e6:	8c 01       	movw	r16, r24
    29e8:	0e 94 e0 13 	call	0x27c0	; 0x27c0 <_Z19nextEmptyLBTxBufferv>
    29ec:	c8 ec       	ldi	r28, 0xC8	; 200
    29ee:	d0 e0       	ldi	r29, 0x00	; 0
    29f0:	00 97       	sbiw	r24, 0x00	; 0
    29f2:	b1 f4       	brne	.+44     	; 0x2a20 <_Z12lb_send_textPc+0x4e>
    29f4:	20 97       	sbiw	r28, 0x00	; 0
    29f6:	a1 f0       	breq	.+40     	; 0x2a20 <_Z12lb_send_textPc+0x4e>
    29f8:	0e 94 66 14 	call	0x28cc	; 0x28cc <_Z19linkbusTxInProgressv>
    29fc:	88 23       	and	r24, r24
    29fe:	21 f0       	breq	.+8      	; 0x2a08 <_Z12lb_send_textPc+0x36>
    2a00:	20 97       	sbiw	r28, 0x00	; 0
    2a02:	21 f4       	brne	.+8      	; 0x2a0c <_Z12lb_send_textPc+0x3a>
    2a04:	90 e0       	ldi	r25, 0x00	; 0
    2a06:	03 c0       	rjmp	.+6      	; 0x2a0e <_Z12lb_send_textPc+0x3c>
    2a08:	90 e0       	ldi	r25, 0x00	; 0
    2a0a:	01 c0       	rjmp	.+2      	; 0x2a0e <_Z12lb_send_textPc+0x3c>
    2a0c:	91 e0       	ldi	r25, 0x01	; 1
    2a0e:	99 23       	and	r25, r25
    2a10:	21 f0       	breq	.+8      	; 0x2a1a <_Z12lb_send_textPc+0x48>
    2a12:	20 97       	sbiw	r28, 0x00	; 0
    2a14:	89 f3       	breq	.-30     	; 0x29f8 <_Z12lb_send_textPc+0x26>
    2a16:	21 97       	sbiw	r28, 0x01	; 1
    2a18:	ef cf       	rjmp	.-34     	; 0x29f8 <_Z12lb_send_textPc+0x26>
    2a1a:	0e 94 e0 13 	call	0x27c0	; 0x27c0 <_Z19nextEmptyLBTxBufferv>
    2a1e:	e8 cf       	rjmp	.-48     	; 0x29f0 <_Z12lb_send_textPc+0x1e>
    2a20:	00 97       	sbiw	r24, 0x00	; 0
    2a22:	91 f0       	breq	.+36     	; 0x2a48 <_Z12lb_send_textPc+0x76>
    2a24:	1f 93       	push	r17
    2a26:	0f 93       	push	r16
    2a28:	9f 93       	push	r25
    2a2a:	8f 93       	push	r24
    2a2c:	0e 94 3f 26 	call	0x4c7e	; 0x4c7e <sprintf>
    2a30:	0e 94 69 14 	call	0x28d2	; 0x28d2 <_Z16linkbus_start_txv>
    2a34:	0f 90       	pop	r0
    2a36:	0f 90       	pop	r0
    2a38:	0f 90       	pop	r0
    2a3a:	0f 90       	pop	r0
    2a3c:	80 e0       	ldi	r24, 0x00	; 0
    2a3e:	05 c0       	rjmp	.+10     	; 0x2a4a <_Z12lb_send_textPc+0x78>
    2a40:	81 e0       	ldi	r24, 0x01	; 1
    2a42:	03 c0       	rjmp	.+6      	; 0x2a4a <_Z12lb_send_textPc+0x78>
    2a44:	81 e0       	ldi	r24, 0x01	; 1
    2a46:	01 c0       	rjmp	.+2      	; 0x2a4a <_Z12lb_send_textPc+0x78>
    2a48:	81 e0       	ldi	r24, 0x01	; 1
    2a4a:	df 91       	pop	r29
    2a4c:	cf 91       	pop	r28
    2a4e:	1f 91       	pop	r17
    2a50:	0f 91       	pop	r16
    2a52:	08 95       	ret

00002a54 <_Z11lb_send_msg13LBMessageTypePKcPc>:
    2a54:	83 30       	cpi	r24, 0x03	; 3
    2a56:	29 f0       	breq	.+10     	; 0x2a62 <_Z11lb_send_msg13LBMessageTypePKcPc+0xe>
    2a58:	82 30       	cpi	r24, 0x02	; 2
    2a5a:	31 f0       	breq	.+12     	; 0x2a68 <_Z11lb_send_msg13LBMessageTypePKcPc+0x14>
    2a5c:	9b e3       	ldi	r25, 0x3B	; 59
    2a5e:	84 e2       	ldi	r24, 0x24	; 36
    2a60:	05 c0       	rjmp	.+10     	; 0x2a6c <_Z11lb_send_msg13LBMessageTypePKcPc+0x18>
    2a62:	9b e3       	ldi	r25, 0x3B	; 59
    2a64:	81 e2       	ldi	r24, 0x21	; 33
    2a66:	02 c0       	rjmp	.+4      	; 0x2a6c <_Z11lb_send_msg13LBMessageTypePKcPc+0x18>
    2a68:	9f e3       	ldi	r25, 0x3F	; 63
    2a6a:	84 e2       	ldi	r24, 0x24	; 36
    2a6c:	1f 92       	push	r1
    2a6e:	9f 93       	push	r25
    2a70:	5f 93       	push	r21
    2a72:	4f 93       	push	r20
    2a74:	7f 93       	push	r23
    2a76:	6f 93       	push	r22
    2a78:	1f 92       	push	r1
    2a7a:	8f 93       	push	r24
    2a7c:	8a ea       	ldi	r24, 0xAA	; 170
    2a7e:	90 e4       	ldi	r25, 0x40	; 64
    2a80:	9f 93       	push	r25
    2a82:	8f 93       	push	r24
    2a84:	86 ef       	ldi	r24, 0xF6	; 246
    2a86:	92 e4       	ldi	r25, 0x42	; 66
    2a88:	9f 93       	push	r25
    2a8a:	8f 93       	push	r24
    2a8c:	0e 94 3f 26 	call	0x4c7e	; 0x4c7e <sprintf>
    2a90:	86 ef       	ldi	r24, 0xF6	; 246
    2a92:	92 e4       	ldi	r25, 0x42	; 66
    2a94:	0e 94 e9 14 	call	0x29d2	; 0x29d2 <_Z12lb_send_textPc>
    2a98:	8d b7       	in	r24, 0x3d	; 61
    2a9a:	9e b7       	in	r25, 0x3e	; 62
    2a9c:	0c 96       	adiw	r24, 0x0c	; 12
    2a9e:	8d bf       	out	0x3d, r24	; 61
    2aa0:	9e bf       	out	0x3e, r25	; 62
    2aa2:	08 95       	ret

00002aa4 <_Z16lb_broadcast_numjPKc>:
}


void lb_broadcast_num(uint16_t data, const char* str)
{
    2aa4:	0f 93       	push	r16
    2aa6:	1f 93       	push	r17
    2aa8:	cf 93       	push	r28
    2aaa:	df 93       	push	r29
    2aac:	cd b7       	in	r28, 0x3d	; 61
    2aae:	de b7       	in	r29, 0x3e	; 62
    2ab0:	26 97       	sbiw	r28, 0x06	; 6
    2ab2:	cd bf       	out	0x3d, r28	; 61
    2ab4:	de bf       	out	0x3e, r29	; 62
    2ab6:	8b 01       	movw	r16, r22
	char t[6] = "\0";
    2ab8:	20 91 80 40 	lds	r18, 0x4080	; 0x804080 <g_tx_power_is_zero+0x4f>
    2abc:	30 91 81 40 	lds	r19, 0x4081	; 0x804081 <g_tx_power_is_zero+0x50>
    2ac0:	29 83       	std	Y+1, r18	; 0x01
    2ac2:	3a 83       	std	Y+2, r19	; 0x02
    2ac4:	fe 01       	movw	r30, r28
    2ac6:	33 96       	adiw	r30, 0x03	; 3
    2ac8:	24 e0       	ldi	r18, 0x04	; 4
    2aca:	df 01       	movw	r26, r30
    2acc:	1d 92       	st	X+, r1
    2ace:	2a 95       	dec	r18
    2ad0:	e9 f7       	brne	.-6      	; 0x2acc <_Z16lb_broadcast_numjPKc+0x28>

	sprintf(t, "%u", data);
    2ad2:	9f 93       	push	r25
    2ad4:	8f 93       	push	r24
    2ad6:	8a eb       	ldi	r24, 0xBA	; 186
    2ad8:	90 e4       	ldi	r25, 0x40	; 64
    2ada:	9f 93       	push	r25
    2adc:	8f 93       	push	r24
    2ade:	ce 01       	movw	r24, r28
    2ae0:	01 96       	adiw	r24, 0x01	; 1
    2ae2:	9f 93       	push	r25
    2ae4:	8f 93       	push	r24
    2ae6:	0e 94 3f 26 	call	0x4c7e	; 0x4c7e <sprintf>
	g_tempMsgBuff[0] = '\0';
    2aea:	10 92 f6 42 	sts	0x42F6, r1	; 0x8042f6 <_ZL13g_tempMsgBuff>

	if(str)
    2aee:	0f 90       	pop	r0
    2af0:	0f 90       	pop	r0
    2af2:	0f 90       	pop	r0
    2af4:	0f 90       	pop	r0
    2af6:	0f 90       	pop	r0
    2af8:	0f 90       	pop	r0
    2afa:	01 15       	cp	r16, r1
    2afc:	11 05       	cpc	r17, r1
    2afe:	91 f0       	breq	.+36     	; 0x2b24 <_Z16lb_broadcast_numjPKc+0x80>
	{
		sprintf(g_tempMsgBuff, "%s,%s;", str, t);
    2b00:	ce 01       	movw	r24, r28
    2b02:	01 96       	adiw	r24, 0x01	; 1
    2b04:	9f 93       	push	r25
    2b06:	8f 93       	push	r24
    2b08:	1f 93       	push	r17
    2b0a:	0f 93       	push	r16
    2b0c:	8d eb       	ldi	r24, 0xBD	; 189
    2b0e:	90 e4       	ldi	r25, 0x40	; 64
    2b10:	9f 93       	push	r25
    2b12:	8f 93       	push	r24
    2b14:	86 ef       	ldi	r24, 0xF6	; 246
    2b16:	92 e4       	ldi	r25, 0x42	; 66
    2b18:	9f 93       	push	r25
    2b1a:	8f 93       	push	r24
    2b1c:	0e 94 3f 26 	call	0x4c7e	; 0x4c7e <sprintf>
    2b20:	cd bf       	out	0x3d, r28	; 61
    2b22:	de bf       	out	0x3e, r29	; 62
	}

	if(g_tempMsgBuff[0]) lb_send_text(g_tempMsgBuff);
    2b24:	80 91 f6 42 	lds	r24, 0x42F6	; 0x8042f6 <_ZL13g_tempMsgBuff>
    2b28:	88 23       	and	r24, r24
    2b2a:	21 f0       	breq	.+8      	; 0x2b34 <_Z16lb_broadcast_numjPKc+0x90>
    2b2c:	86 ef       	ldi	r24, 0xF6	; 246
    2b2e:	92 e4       	ldi	r25, 0x42	; 66
    2b30:	0e 94 e9 14 	call	0x29d2	; 0x29d2 <_Z12lb_send_textPc>
}
    2b34:	26 96       	adiw	r28, 0x06	; 6
    2b36:	cd bf       	out	0x3d, r28	; 61
    2b38:	de bf       	out	0x3e, r29	; 62
    2b3a:	df 91       	pop	r29
    2b3c:	cf 91       	pop	r28
    2b3e:	1f 91       	pop	r17
    2b40:	0f 91       	pop	r16
    2b42:	08 95       	ret

00002b44 <_Z12getMorseCharc>:
 */
MorseCharacter getMorseChar(char c)
{
	MorseCharacter morse;

	switch( c )
    2b44:	90 e0       	ldi	r25, 0x00	; 0
    2b46:	fc 01       	movw	r30, r24
    2b48:	b0 97       	sbiw	r30, 0x20	; 32
    2b4a:	ed 35       	cpi	r30, 0x5D	; 93
    2b4c:	f1 05       	cpc	r31, r1
    2b4e:	08 f0       	brcs	.+2      	; 0x2b52 <_Z12getMorseCharc+0xe>
    2b50:	e8 c0       	rjmp	.+464    	; 0x2d22 <_Z12getMorseCharc+0x1de>
    2b52:	ec 58       	subi	r30, 0x8C	; 140
    2b54:	ff 4f       	sbci	r31, 0xFF	; 255
    2b56:	0c 94 73 24 	jmp	0x48e6	; 0x48e6 <__tablejump2__>
	{
		case 'A':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
    2b5a:	62 e0       	ldi	r22, 0x02	; 2
			morse.lengthInSymbols = 2;
    2b5c:	72 e0       	ldi	r23, 0x02	; 2
			morse.lengthInElements = 5;
    2b5e:	85 e0       	ldi	r24, 0x05	; 5
		}
		break;
    2b60:	08 95       	ret

		case 'B':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    2b62:	61 e0       	ldi	r22, 0x01	; 1
			morse.lengthInSymbols = 4;
    2b64:	74 e0       	ldi	r23, 0x04	; 4
			morse.lengthInElements = 9;
    2b66:	89 e0       	ldi	r24, 0x09	; 9
		}
		break;
    2b68:	08 95       	ret

		case 'C':
		{
			morse.pattern = 0x05;   /* 0000 0101; */
    2b6a:	65 e0       	ldi	r22, 0x05	; 5
			morse.lengthInSymbols = 4;
    2b6c:	74 e0       	ldi	r23, 0x04	; 4
			morse.lengthInElements = 11;
    2b6e:	8b e0       	ldi	r24, 0x0B	; 11
		}
		break;
    2b70:	08 95       	ret

		case 'D':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    2b72:	61 e0       	ldi	r22, 0x01	; 1
			morse.lengthInSymbols = 3;
    2b74:	73 e0       	ldi	r23, 0x03	; 3
			morse.lengthInElements = 7;
    2b76:	87 e0       	ldi	r24, 0x07	; 7
		}
		break;
    2b78:	08 95       	ret

		case 'E':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    2b7a:	60 e0       	ldi	r22, 0x00	; 0
			morse.lengthInSymbols = 1;
    2b7c:	71 e0       	ldi	r23, 0x01	; 1
			morse.lengthInElements = 1;
    2b7e:	81 e0       	ldi	r24, 0x01	; 1
		}
		break;
    2b80:	08 95       	ret

		case 'F':
		{
			morse.pattern = 0x04;   /* 0000 0100; */
    2b82:	64 e0       	ldi	r22, 0x04	; 4
			morse.lengthInSymbols = 4;
    2b84:	74 e0       	ldi	r23, 0x04	; 4
			morse.lengthInElements = 9;
    2b86:	89 e0       	ldi	r24, 0x09	; 9
		}
		break;
    2b88:	08 95       	ret

		case 'G':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
    2b8a:	63 e0       	ldi	r22, 0x03	; 3
			morse.lengthInSymbols = 3;
    2b8c:	73 e0       	ldi	r23, 0x03	; 3
			morse.lengthInElements = 9;
    2b8e:	89 e0       	ldi	r24, 0x09	; 9
		}
		break;
    2b90:	08 95       	ret

		case 'H':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    2b92:	60 e0       	ldi	r22, 0x00	; 0
			morse.lengthInSymbols = 4;
    2b94:	74 e0       	ldi	r23, 0x04	; 4
			morse.lengthInElements = 7;
    2b96:	87 e0       	ldi	r24, 0x07	; 7
		}
		break;
    2b98:	08 95       	ret

		case 'I':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    2b9a:	60 e0       	ldi	r22, 0x00	; 0
			morse.lengthInSymbols = 2;
    2b9c:	72 e0       	ldi	r23, 0x02	; 2
			morse.lengthInElements = 3;
    2b9e:	83 e0       	ldi	r24, 0x03	; 3
		}
		break;
    2ba0:	08 95       	ret

		case 'J':
		{
			morse.pattern = 0x0e;   /* 0000 1110; */
    2ba2:	6e e0       	ldi	r22, 0x0E	; 14
			morse.lengthInSymbols = 4;
    2ba4:	74 e0       	ldi	r23, 0x04	; 4
			morse.lengthInElements = 13;
    2ba6:	8d e0       	ldi	r24, 0x0D	; 13
		}
		break;
    2ba8:	08 95       	ret

		case 'K':
		{
			morse.pattern = 0x05;   /* 0000 0101; */
    2baa:	65 e0       	ldi	r22, 0x05	; 5
			morse.lengthInSymbols = 3;
    2bac:	73 e0       	ldi	r23, 0x03	; 3
			morse.lengthInElements = 9;
    2bae:	89 e0       	ldi	r24, 0x09	; 9
		}
		break;
    2bb0:	08 95       	ret

		case 'L':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
    2bb2:	62 e0       	ldi	r22, 0x02	; 2
			morse.lengthInSymbols = 4;
    2bb4:	74 e0       	ldi	r23, 0x04	; 4
			morse.lengthInElements = 9;
    2bb6:	89 e0       	ldi	r24, 0x09	; 9
		}
		break;
    2bb8:	08 95       	ret

		case 'M':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
    2bba:	63 e0       	ldi	r22, 0x03	; 3
			morse.lengthInSymbols = 2;
    2bbc:	72 e0       	ldi	r23, 0x02	; 2
			morse.lengthInElements = 7;
    2bbe:	87 e0       	ldi	r24, 0x07	; 7
		}
		break;
    2bc0:	08 95       	ret

		case 'N':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    2bc2:	61 e0       	ldi	r22, 0x01	; 1
			morse.lengthInSymbols = 2;
    2bc4:	72 e0       	ldi	r23, 0x02	; 2
			morse.lengthInElements = 5;
    2bc6:	85 e0       	ldi	r24, 0x05	; 5
		}
		break;
    2bc8:	08 95       	ret

		case 'O':
		{
			morse.pattern = 0x07;   /* 0000 0111; */
    2bca:	67 e0       	ldi	r22, 0x07	; 7
			morse.lengthInSymbols = 3;
    2bcc:	73 e0       	ldi	r23, 0x03	; 3
			morse.lengthInElements = 11;
    2bce:	8b e0       	ldi	r24, 0x0B	; 11
		}
		break;
    2bd0:	08 95       	ret

		case 'P':
		{
			morse.pattern = 0x06;   /* 0000 0110; */
    2bd2:	66 e0       	ldi	r22, 0x06	; 6
			morse.lengthInSymbols = 4;
    2bd4:	74 e0       	ldi	r23, 0x04	; 4
			morse.lengthInElements = 11;
    2bd6:	8b e0       	ldi	r24, 0x0B	; 11
		}
		break;
    2bd8:	08 95       	ret

		case 'Q':
		{
			morse.pattern = 0x0b;   /* 0000 1011; */
    2bda:	6b e0       	ldi	r22, 0x0B	; 11
			morse.lengthInSymbols = 4;
    2bdc:	74 e0       	ldi	r23, 0x04	; 4
			morse.lengthInElements = 13;
    2bde:	8d e0       	ldi	r24, 0x0D	; 13
		}
		break;
    2be0:	08 95       	ret

		case 'R':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
    2be2:	62 e0       	ldi	r22, 0x02	; 2
			morse.lengthInSymbols = 3;
    2be4:	73 e0       	ldi	r23, 0x03	; 3
			morse.lengthInElements = 7;
    2be6:	87 e0       	ldi	r24, 0x07	; 7
		}
		break;
    2be8:	08 95       	ret

		case 'S':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    2bea:	60 e0       	ldi	r22, 0x00	; 0
			morse.lengthInSymbols = 3;
    2bec:	73 e0       	ldi	r23, 0x03	; 3
			morse.lengthInElements = 5;
    2bee:	85 e0       	ldi	r24, 0x05	; 5
		}
		break;
    2bf0:	08 95       	ret

		case 'T':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    2bf2:	61 e0       	ldi	r22, 0x01	; 1
			morse.lengthInSymbols = 1;
    2bf4:	71 e0       	ldi	r23, 0x01	; 1
			morse.lengthInElements = 3;
    2bf6:	83 e0       	ldi	r24, 0x03	; 3
		}
		break;
    2bf8:	08 95       	ret

		case 'U':
		{
			morse.pattern = 0x04;   /* 0000 0100; */
    2bfa:	64 e0       	ldi	r22, 0x04	; 4
			morse.lengthInSymbols = 3;
    2bfc:	73 e0       	ldi	r23, 0x03	; 3
			morse.lengthInElements = 7;
    2bfe:	87 e0       	ldi	r24, 0x07	; 7
		}
		break;
    2c00:	08 95       	ret

		case 'V':
		{
			morse.pattern = 0x08;   /* 0000 1000; */
    2c02:	68 e0       	ldi	r22, 0x08	; 8
			morse.lengthInSymbols = 4;
    2c04:	74 e0       	ldi	r23, 0x04	; 4
			morse.lengthInElements = 9;
    2c06:	89 e0       	ldi	r24, 0x09	; 9
		}
		break;
    2c08:	08 95       	ret

		case 'W':
		{
			morse.pattern = 0x06;   /* 0000 0110; */
    2c0a:	66 e0       	ldi	r22, 0x06	; 6
			morse.lengthInSymbols = 3;
    2c0c:	73 e0       	ldi	r23, 0x03	; 3
			morse.lengthInElements = 9;
    2c0e:	89 e0       	ldi	r24, 0x09	; 9
		}
		break;
    2c10:	08 95       	ret

		case 'X':
		{
			morse.pattern = 0x09;   /* 0000 1001; */
    2c12:	69 e0       	ldi	r22, 0x09	; 9
			morse.lengthInSymbols = 4;
    2c14:	74 e0       	ldi	r23, 0x04	; 4
			morse.lengthInElements = 11;
    2c16:	8b e0       	ldi	r24, 0x0B	; 11
		}
		break;
    2c18:	08 95       	ret

		case 'Y':
		{
			morse.pattern = 0x0d;   /* 0000 1101; */
    2c1a:	6d e0       	ldi	r22, 0x0D	; 13
			morse.lengthInSymbols = 4;
    2c1c:	74 e0       	ldi	r23, 0x04	; 4
			morse.lengthInElements = 13;
    2c1e:	8d e0       	ldi	r24, 0x0D	; 13
		}
		break;
    2c20:	08 95       	ret

		case 'Z':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
    2c22:	63 e0       	ldi	r22, 0x03	; 3
			morse.lengthInSymbols = 4;
    2c24:	74 e0       	ldi	r23, 0x04	; 4
			morse.lengthInElements = 11;
    2c26:	8b e0       	ldi	r24, 0x0B	; 11
		}
		break;
    2c28:	08 95       	ret

		case '0':
		{
			morse.pattern = 0x1f;   /* 0001 1111; */
    2c2a:	6f e1       	ldi	r22, 0x1F	; 31
			morse.lengthInSymbols = 5;
    2c2c:	75 e0       	ldi	r23, 0x05	; 5
			morse.lengthInElements = 19;
    2c2e:	83 e1       	ldi	r24, 0x13	; 19
		}
		break;
    2c30:	08 95       	ret

		case '1':
		{
			morse.pattern = 0x1e;   /* 0001 1110; */
    2c32:	6e e1       	ldi	r22, 0x1E	; 30
			morse.lengthInSymbols = 5;
    2c34:	75 e0       	ldi	r23, 0x05	; 5
			morse.lengthInElements = 17;
    2c36:	81 e1       	ldi	r24, 0x11	; 17
		}
		break;
    2c38:	08 95       	ret

		case '2':
		{
			morse.pattern = 0x1c;   /* 0001 1100; */
    2c3a:	6c e1       	ldi	r22, 0x1C	; 28
			morse.lengthInSymbols = 5;
    2c3c:	75 e0       	ldi	r23, 0x05	; 5
			morse.lengthInElements = 15;
    2c3e:	8f e0       	ldi	r24, 0x0F	; 15
		}
		break;
    2c40:	08 95       	ret

		case '3':
		{
			morse.pattern = 0x18;   /* 0001 1000; */
    2c42:	68 e1       	ldi	r22, 0x18	; 24
			morse.lengthInSymbols = 5;
    2c44:	75 e0       	ldi	r23, 0x05	; 5
			morse.lengthInElements = 13;
    2c46:	8d e0       	ldi	r24, 0x0D	; 13
		}
		break;
    2c48:	08 95       	ret

		case '4':
		{
			morse.pattern = 0x10;   /* 0001 0000; */
    2c4a:	60 e1       	ldi	r22, 0x10	; 16
			morse.lengthInSymbols = 5;
    2c4c:	75 e0       	ldi	r23, 0x05	; 5
			morse.lengthInElements = 11;
    2c4e:	8b e0       	ldi	r24, 0x0B	; 11
		}
		break;
    2c50:	08 95       	ret

		case '5':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    2c52:	60 e0       	ldi	r22, 0x00	; 0
			morse.lengthInSymbols = 5;
    2c54:	75 e0       	ldi	r23, 0x05	; 5
			morse.lengthInElements = 9;
    2c56:	89 e0       	ldi	r24, 0x09	; 9
		}
		break;
    2c58:	08 95       	ret

		case '6':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    2c5a:	61 e0       	ldi	r22, 0x01	; 1
			morse.lengthInSymbols = 5;
    2c5c:	75 e0       	ldi	r23, 0x05	; 5
			morse.lengthInElements = 11;
    2c5e:	8b e0       	ldi	r24, 0x0B	; 11
		}
		break;
    2c60:	08 95       	ret

		case '7':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
    2c62:	63 e0       	ldi	r22, 0x03	; 3
			morse.lengthInSymbols = 5;
    2c64:	75 e0       	ldi	r23, 0x05	; 5
			morse.lengthInElements = 13;
    2c66:	8d e0       	ldi	r24, 0x0D	; 13
		}
		break;
    2c68:	08 95       	ret

		case '8':
		{
			morse.pattern = 0x07;   /* 0000 0111; */
    2c6a:	67 e0       	ldi	r22, 0x07	; 7
			morse.lengthInSymbols = 5;
    2c6c:	75 e0       	ldi	r23, 0x05	; 5
			morse.lengthInElements = 15;
    2c6e:	8f e0       	ldi	r24, 0x0F	; 15
		}
		break;
    2c70:	08 95       	ret

		case '9':
		{
			morse.pattern = 0x0f;   /* 0000 1111; */
    2c72:	6f e0       	ldi	r22, 0x0F	; 15
			morse.lengthInSymbols = 5;
    2c74:	75 e0       	ldi	r23, 0x05	; 5
			morse.lengthInElements = 17;
    2c76:	81 e1       	ldi	r24, 0x11	; 17
		}
		break;
    2c78:	08 95       	ret

		case '.':
		{
			morse.pattern = 0x2a;   /* 0010 1010; */
    2c7a:	6a e2       	ldi	r22, 0x2A	; 42
			morse.lengthInSymbols = 6;
    2c7c:	76 e0       	ldi	r23, 0x06	; 6
			morse.lengthInElements = 17;
    2c7e:	81 e1       	ldi	r24, 0x11	; 17
		}
		break;
    2c80:	08 95       	ret

		case ',':
		{
			morse.pattern = 0x33;   /* 0011 0011; */
    2c82:	63 e3       	ldi	r22, 0x33	; 51
			morse.lengthInSymbols = 6;
    2c84:	76 e0       	ldi	r23, 0x06	; 6
			morse.lengthInElements = 19;
    2c86:	83 e1       	ldi	r24, 0x13	; 19
		}
		break;
    2c88:	08 95       	ret

		case '?':
		{
			morse.pattern = 0x0c;   /* 0000 1100; */
    2c8a:	6c e0       	ldi	r22, 0x0C	; 12
			morse.lengthInSymbols = 6;
    2c8c:	76 e0       	ldi	r23, 0x06	; 6
			morse.lengthInElements = 15;
    2c8e:	8f e0       	ldi	r24, 0x0F	; 15
		}
		break;
    2c90:	08 95       	ret

		case '\'':
		{
			morse.pattern = 0x1e;   /* 0001 1110; */
    2c92:	6e e1       	ldi	r22, 0x1E	; 30
			morse.lengthInSymbols = 6;
    2c94:	76 e0       	ldi	r23, 0x06	; 6
			morse.lengthInElements = 19;
    2c96:	83 e1       	ldi	r24, 0x13	; 19
		}
		break;
    2c98:	08 95       	ret

		case '!':
		{
			morse.pattern = 0x35;   /* 0011 0101; */
    2c9a:	65 e3       	ldi	r22, 0x35	; 53
			morse.lengthInSymbols = 6;
    2c9c:	76 e0       	ldi	r23, 0x06	; 6
			morse.lengthInElements = 19;
    2c9e:	83 e1       	ldi	r24, 0x13	; 19
		}
		break;
    2ca0:	08 95       	ret

		case '/':
		{
			morse.pattern = 0x09;   /* 0000 1001; */
    2ca2:	69 e0       	ldi	r22, 0x09	; 9
			morse.lengthInSymbols = 5;
    2ca4:	75 e0       	ldi	r23, 0x05	; 5
			morse.lengthInElements = 13;
    2ca6:	8d e0       	ldi	r24, 0x0D	; 13
		}
		break;
    2ca8:	08 95       	ret

		case '(':
		{
			morse.pattern = 0x0d;   /* 0000 1101; */
    2caa:	6d e0       	ldi	r22, 0x0D	; 13
			morse.lengthInSymbols = 5;
    2cac:	75 e0       	ldi	r23, 0x05	; 5
			morse.lengthInElements = 15;
    2cae:	8f e0       	ldi	r24, 0x0F	; 15
		}
		break;
    2cb0:	08 95       	ret

		case ')':
		{
			morse.pattern = 0x2d;   /* 0010 1101; */
    2cb2:	6d e2       	ldi	r22, 0x2D	; 45
			morse.lengthInSymbols = 6;
    2cb4:	76 e0       	ldi	r23, 0x06	; 6
			morse.lengthInElements = 19;
    2cb6:	83 e1       	ldi	r24, 0x13	; 19
		}
		break;
    2cb8:	08 95       	ret

		case '&':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
    2cba:	62 e0       	ldi	r22, 0x02	; 2
			morse.lengthInSymbols = 5;
    2cbc:	75 e0       	ldi	r23, 0x05	; 5
			morse.lengthInElements = 11;
    2cbe:	8b e0       	ldi	r24, 0x0B	; 11
		}
		break;
    2cc0:	08 95       	ret

		case ':':
		{
			morse.pattern = 0x07;   /* 0000 0111; */
    2cc2:	67 e0       	ldi	r22, 0x07	; 7
			morse.lengthInSymbols = 6;
    2cc4:	76 e0       	ldi	r23, 0x06	; 6
			morse.lengthInElements = 17;
    2cc6:	81 e1       	ldi	r24, 0x11	; 17
		}
		break;
    2cc8:	08 95       	ret

		case ';':
		{
			morse.pattern = 0x15;   /* 0001 0101; */
    2cca:	65 e1       	ldi	r22, 0x15	; 21
			morse.lengthInSymbols = 6;
    2ccc:	76 e0       	ldi	r23, 0x06	; 6
			morse.lengthInElements = 12;
    2cce:	8c e0       	ldi	r24, 0x0C	; 12
		}
		break;
    2cd0:	08 95       	ret

		case '=':
		{
			morse.pattern = 0x11;   /* 0001 0001; */
    2cd2:	61 e1       	ldi	r22, 0x11	; 17
			morse.lengthInSymbols = 5;
    2cd4:	75 e0       	ldi	r23, 0x05	; 5
			morse.lengthInElements = 13;
    2cd6:	8d e0       	ldi	r24, 0x0D	; 13
		}
		break;
    2cd8:	08 95       	ret

		case '+':
		{
			morse.pattern = 0x0a;   /* 0000 1010; */
    2cda:	6a e0       	ldi	r22, 0x0A	; 10
			morse.lengthInSymbols = 5;
    2cdc:	75 e0       	ldi	r23, 0x05	; 5
			morse.lengthInElements = 13;
    2cde:	8d e0       	ldi	r24, 0x0D	; 13
		}
		break;
    2ce0:	08 95       	ret

		case '-':
		{
			morse.pattern = 0x21;   /* 0010 0001; */
    2ce2:	61 e2       	ldi	r22, 0x21	; 33
			morse.lengthInSymbols = 6;
    2ce4:	76 e0       	ldi	r23, 0x06	; 6
			morse.lengthInElements = 15;
    2ce6:	8f e0       	ldi	r24, 0x0F	; 15
		}
		break;
    2ce8:	08 95       	ret

		case '_':
		{
			morse.pattern = 0x2c;   /* 0010 1100; */
    2cea:	6c e2       	ldi	r22, 0x2C	; 44
			morse.lengthInSymbols = 6;
    2cec:	76 e0       	ldi	r23, 0x06	; 6
			morse.lengthInElements = 17;
    2cee:	81 e1       	ldi	r24, 0x11	; 17
		}
		break;
    2cf0:	08 95       	ret

		case '"':
		{
			morse.pattern = 0x12;   /* 0001 0010; */
    2cf2:	62 e1       	ldi	r22, 0x12	; 18
			morse.lengthInSymbols = 6;
    2cf4:	76 e0       	ldi	r23, 0x06	; 6
			morse.lengthInElements = 15;
    2cf6:	8f e0       	ldi	r24, 0x0F	; 15
		}
		break;
    2cf8:	08 95       	ret

		case '$':
		{
			morse.pattern = 0x48;   /* 0100 1000; */
    2cfa:	68 e4       	ldi	r22, 0x48	; 72
			morse.lengthInSymbols = 7;
    2cfc:	77 e0       	ldi	r23, 0x07	; 7
			morse.lengthInElements = 17;
    2cfe:	81 e1       	ldi	r24, 0x11	; 17
		}
		break;
    2d00:	08 95       	ret

		case '@':
		{
			morse.pattern = 0x16;   /* 0001 0110; */
    2d02:	66 e1       	ldi	r22, 0x16	; 22
			morse.lengthInSymbols = 6;
    2d04:	76 e0       	ldi	r23, 0x06	; 6
			morse.lengthInElements = 17;
    2d06:	81 e1       	ldi	r24, 0x11	; 17
		}
		break;
    2d08:	08 95       	ret

		case '|':                       /* inter-word space */
		{ morse.pattern = 0xff;         /* 1000 0000; */
    2d0a:	6f ef       	ldi	r22, 0xFF	; 255
		  morse.lengthInSymbols = 7;
    2d0c:	77 e0       	ldi	r23, 0x07	; 7
		  morse.lengthInElements = 4;   /* adjusted by -3 to account for inter-character space */
    2d0e:	84 e0       	ldi	r24, 0x04	; 4
		}
		break;
    2d10:	08 95       	ret

		case ' ':                       /* inter-word space */
		{ morse.pattern = 0xfe;         /* 1000 0000; */
    2d12:	6e ef       	ldi	r22, 0xFE	; 254
		  morse.lengthInSymbols = 7;
    2d14:	77 e0       	ldi	r23, 0x07	; 7
		  morse.lengthInElements = 7;   /* 4 + 3 (character space) = 7 */
    2d16:	87 e0       	ldi	r24, 0x07	; 7
		}
		break;
    2d18:	08 95       	ret

		case '<':                       /* long keydown */
		{
			morse.pattern = 0x1f;       /* 0001 1111; */
    2d1a:	6f e1       	ldi	r22, 0x1F	; 31
			morse.lengthInSymbols = 5;
    2d1c:	75 e0       	ldi	r23, 0x05	; 5
			morse.lengthInElements = 19;
    2d1e:	83 e1       	ldi	r24, 0x13	; 19
		}
		break;
    2d20:	08 95       	ret

		default:
		{
			morse.pattern = 0x0000; /* 0000 0000; */
    2d22:	60 e0       	ldi	r22, 0x00	; 0
			morse.lengthInSymbols = 0;
    2d24:	70 e0       	ldi	r23, 0x00	; 0
			morse.lengthInElements = 0;
    2d26:	80 e0       	ldi	r24, 0x00	; 0
		}
		break;
	}

	return( morse);
}
    2d28:	08 95       	ret

00002d2a <_Z9makeMorsePcPhS0_>:
 *  Call this function with a NULL argument at intervals of 1 element of time to generate Morse code.
 *  Once loaded with a string each call to this function returns a BOOL indicating whether a CW carrier should be sent
 *  Pass in a pointer to a BOOL in the second and third arguments:
 */
BOOL makeMorse(char* s, BOOL* repeating, BOOL* finished)
{
    2d2a:	cf 93       	push	r28
    2d2c:	df 93       	push	r29
    2d2e:	ea 01       	movw	r28, r20
	static uint8_t addedSpace;      /* adds additional time to make an inter-character space */
	static BOOL completedString = FALSE;
	static BOOL carrierOn = FALSE;
	static BOOL holdKeyDown = FALSE;

	if(s)   /* load a new NULL-terminated string to send */
    2d30:	00 97       	sbiw	r24, 0x00	; 0
    2d32:	b1 f1       	breq	.+108    	; 0x2da0 <_Z9makeMorsePcPhS0_+0x76>
	{
		holdKeyDown = FALSE;
    2d34:	10 92 33 43 	sts	0x4333, r1	; 0x804333 <_ZZ9makeMorsePcPhS0_E11holdKeyDown>

		if(repeating)
    2d38:	61 15       	cp	r22, r1
    2d3a:	71 05       	cpc	r23, r1
    2d3c:	21 f0       	breq	.+8      	; 0x2d46 <_Z9makeMorsePcPhS0_+0x1c>
		{
			repeat = *repeating;
    2d3e:	db 01       	movw	r26, r22
    2d40:	2c 91       	ld	r18, X
    2d42:	20 93 21 40 	sts	0x4021, r18	; 0x804021 <_ZZ9makeMorsePcPhS0_E6repeat>
		}

		if(*s)
    2d46:	fc 01       	movw	r30, r24
    2d48:	20 81       	ld	r18, Z
    2d4a:	22 23       	and	r18, r18
    2d4c:	d9 f0       	breq	.+54     	; 0x2d84 <_Z9makeMorsePcPhS0_+0x5a>
		{
			str = s;
    2d4e:	80 93 31 43 	sts	0x4331, r24	; 0x804331 <_ZZ9makeMorsePcPhS0_E3str>
    2d52:	90 93 32 43 	sts	0x4332, r25	; 0x804332 <_ZZ9makeMorsePcPhS0_E3str+0x1>
			c = ' ';
    2d56:	80 e2       	ldi	r24, 0x20	; 32
    2d58:	80 93 20 40 	sts	0x4020, r24	; 0x804020 <_ZZ9makeMorsePcPhS0_E1c>
			morseInProgress = getMorseChar(*str);
    2d5c:	82 2f       	mov	r24, r18
    2d5e:	0e 94 a2 15 	call	0x2b44	; 0x2b44 <_Z12getMorseCharc>
    2d62:	60 93 2e 43 	sts	0x432E, r22	; 0x80432e <_ZZ9makeMorsePcPhS0_E15morseInProgress>
    2d66:	70 93 2f 43 	sts	0x432F, r23	; 0x80432f <_ZZ9makeMorsePcPhS0_E15morseInProgress+0x1>
    2d6a:	80 93 30 43 	sts	0x4330, r24	; 0x804330 <_ZZ9makeMorsePcPhS0_E15morseInProgress+0x2>
			charIndex = 0;
    2d6e:	10 92 2d 43 	sts	0x432D, r1	; 0x80432d <_ZZ9makeMorsePcPhS0_E9charIndex>
			symbolIndex = 0;
    2d72:	10 92 2c 43 	sts	0x432C, r1	; 0x80432c <_ZZ9makeMorsePcPhS0_E11symbolIndex>
			elementIndex = 0;
    2d76:	10 92 2b 43 	sts	0x432B, r1	; 0x80432b <_ZZ9makeMorsePcPhS0_E12elementIndex>
			addedSpace = 0;
    2d7a:	10 92 2a 43 	sts	0x432A, r1	; 0x80432a <_ZZ9makeMorsePcPhS0_E10addedSpace>
			completedString = FALSE;
    2d7e:	10 92 29 43 	sts	0x4329, r1	; 0x804329 <_ZZ9makeMorsePcPhS0_E15completedString>
    2d82:	0a c0       	rjmp	.+20     	; 0x2d98 <_Z9makeMorsePcPhS0_+0x6e>
		}
		else    /* a zero-length string shuts down makeMorse */
		{
			str = NULL;
    2d84:	10 92 31 43 	sts	0x4331, r1	; 0x804331 <_ZZ9makeMorsePcPhS0_E3str>
    2d88:	10 92 32 43 	sts	0x4332, r1	; 0x804332 <_ZZ9makeMorsePcPhS0_E3str+0x1>
			completedString = TRUE;
    2d8c:	81 e0       	ldi	r24, 0x01	; 1
    2d8e:	80 93 29 43 	sts	0x4329, r24	; 0x804329 <_ZZ9makeMorsePcPhS0_E15completedString>
			if(finished)
    2d92:	20 97       	sbiw	r28, 0x00	; 0
    2d94:	09 f0       	breq	.+2      	; 0x2d98 <_Z9makeMorsePcPhS0_+0x6e>
			{
				*finished = TRUE;
    2d96:	88 83       	st	Y, r24
			}
		}

		carrierOn = OFF;
    2d98:	10 92 28 43 	sts	0x4328, r1	; 0x804328 <_ZZ9makeMorsePcPhS0_E9carrierOn>
		return( OFF);
    2d9c:	80 e0       	ldi	r24, 0x00	; 0
    2d9e:	bb c0       	rjmp	.+374    	; 0x2f16 <_Z9makeMorsePcPhS0_+0x1ec>
	}
	else if(str)
    2da0:	e0 91 31 43 	lds	r30, 0x4331	; 0x804331 <_ZZ9makeMorsePcPhS0_E3str>
    2da4:	f0 91 32 43 	lds	r31, 0x4332	; 0x804332 <_ZZ9makeMorsePcPhS0_E3str+0x1>
    2da8:	30 97       	sbiw	r30, 0x00	; 0
    2daa:	09 f4       	brne	.+2      	; 0x2dae <_Z9makeMorsePcPhS0_+0x84>
    2dac:	a5 c0       	rjmp	.+330    	; 0x2ef8 <_Z9makeMorsePcPhS0_+0x1ce>
	{
		if(repeating)
    2dae:	61 15       	cp	r22, r1
    2db0:	71 05       	cpc	r23, r1
    2db2:	21 f0       	breq	.+8      	; 0x2dbc <_Z9makeMorsePcPhS0_+0x92>
		{
			*repeating = repeat;
    2db4:	80 91 21 40 	lds	r24, 0x4021	; 0x804021 <_ZZ9makeMorsePcPhS0_E6repeat>
    2db8:	db 01       	movw	r26, r22
    2dba:	8c 93       	st	X, r24
		}

		if(completedString)
    2dbc:	80 91 29 43 	lds	r24, 0x4329	; 0x804329 <_ZZ9makeMorsePcPhS0_E15completedString>
    2dc0:	88 23       	and	r24, r24
    2dc2:	49 f0       	breq	.+18     	; 0x2dd6 <_Z9makeMorsePcPhS0_+0xac>
		{
			if(finished)
    2dc4:	20 97       	sbiw	r28, 0x00	; 0
    2dc6:	09 f4       	brne	.+2      	; 0x2dca <_Z9makeMorsePcPhS0_+0xa0>
    2dc8:	a3 c0       	rjmp	.+326    	; 0x2f10 <_Z9makeMorsePcPhS0_+0x1e6>
			{
				*finished = TRUE;
    2dca:	81 e0       	ldi	r24, 0x01	; 1
    2dcc:	88 83       	st	Y, r24
				holdKeyDown = FALSE;
    2dce:	10 92 33 43 	sts	0x4333, r1	; 0x804333 <_ZZ9makeMorsePcPhS0_E11holdKeyDown>
			}
			return( OFF);
    2dd2:	80 e0       	ldi	r24, 0x00	; 0
    2dd4:	a0 c0       	rjmp	.+320    	; 0x2f16 <_Z9makeMorsePcPhS0_+0x1ec>
		}

		if(elementIndex)
    2dd6:	80 91 2b 43 	lds	r24, 0x432B	; 0x80432b <_ZZ9makeMorsePcPhS0_E12elementIndex>
    2dda:	88 23       	and	r24, r24
    2ddc:	21 f0       	breq	.+8      	; 0x2de6 <_Z9makeMorsePcPhS0_+0xbc>
		{
			elementIndex--;
    2dde:	81 50       	subi	r24, 0x01	; 1
    2de0:	80 93 2b 43 	sts	0x432B, r24	; 0x80432b <_ZZ9makeMorsePcPhS0_E12elementIndex>
    2de4:	7f c0       	rjmp	.+254    	; 0x2ee4 <_Z9makeMorsePcPhS0_+0x1ba>
		}
		else if(carrierOn && !holdKeyDown)  /* carrier is on, so turn it off and wait appropriate amount of space */
    2de6:	80 91 28 43 	lds	r24, 0x4328	; 0x804328 <_ZZ9makeMorsePcPhS0_E9carrierOn>
    2dea:	88 23       	and	r24, r24
    2dec:	81 f0       	breq	.+32     	; 0x2e0e <_Z9makeMorsePcPhS0_+0xe4>
    2dee:	80 91 33 43 	lds	r24, 0x4333	; 0x804333 <_ZZ9makeMorsePcPhS0_E11holdKeyDown>
    2df2:	81 11       	cpse	r24, r1
    2df4:	0c c0       	rjmp	.+24     	; 0x2e0e <_Z9makeMorsePcPhS0_+0xe4>
		{
			carrierOn = FALSE;
    2df6:	10 92 28 43 	sts	0x4328, r1	; 0x804328 <_ZZ9makeMorsePcPhS0_E9carrierOn>
			/* wait one element = inter-symbol space */
			if(addedSpace)
    2dfa:	80 91 2a 43 	lds	r24, 0x432A	; 0x80432a <_ZZ9makeMorsePcPhS0_E10addedSpace>
    2dfe:	88 23       	and	r24, r24
    2e00:	09 f4       	brne	.+2      	; 0x2e04 <_Z9makeMorsePcPhS0_+0xda>
    2e02:	70 c0       	rjmp	.+224    	; 0x2ee4 <_Z9makeMorsePcPhS0_+0x1ba>
			{
				elementIndex = addedSpace;
    2e04:	80 93 2b 43 	sts	0x432B, r24	; 0x80432b <_ZZ9makeMorsePcPhS0_E12elementIndex>
				addedSpace = 0;
    2e08:	10 92 2a 43 	sts	0x432A, r1	; 0x80432a <_ZZ9makeMorsePcPhS0_E10addedSpace>
    2e0c:	6b c0       	rjmp	.+214    	; 0x2ee4 <_Z9makeMorsePcPhS0_+0x1ba>
			}
			/* wait inter-character space */
		}
		else    /* carrier is off, so turn it on and get next symbol */
		{
			if(symbolIndex >= morseInProgress.lengthInSymbols)
    2e0e:	90 91 2f 43 	lds	r25, 0x432F	; 0x80432f <_ZZ9makeMorsePcPhS0_E15morseInProgress+0x1>
    2e12:	80 91 2c 43 	lds	r24, 0x432C	; 0x80432c <_ZZ9makeMorsePcPhS0_E11symbolIndex>
    2e16:	89 17       	cp	r24, r25
    2e18:	90 f1       	brcs	.+100    	; 0x2e7e <_Z9makeMorsePcPhS0_+0x154>
			{
				c = (*(str + ++charIndex));
    2e1a:	80 91 2d 43 	lds	r24, 0x432D	; 0x80432d <_ZZ9makeMorsePcPhS0_E9charIndex>
    2e1e:	8f 5f       	subi	r24, 0xFF	; 255
    2e20:	80 93 2d 43 	sts	0x432D, r24	; 0x80432d <_ZZ9makeMorsePcPhS0_E9charIndex>
    2e24:	df 01       	movw	r26, r30
    2e26:	a8 0f       	add	r26, r24
    2e28:	b1 1d       	adc	r27, r1
    2e2a:	8c 91       	ld	r24, X
    2e2c:	80 93 20 40 	sts	0x4020, r24	; 0x804020 <_ZZ9makeMorsePcPhS0_E1c>

				if(!c)  /* wrap to beginning of text */
    2e30:	81 11       	cpse	r24, r1
    2e32:	19 c0       	rjmp	.+50     	; 0x2e66 <_Z9makeMorsePcPhS0_+0x13c>
				{
					if(repeat)
    2e34:	80 91 21 40 	lds	r24, 0x4021	; 0x804021 <_ZZ9makeMorsePcPhS0_E6repeat>
    2e38:	88 23       	and	r24, r24
    2e3a:	31 f0       	breq	.+12     	; 0x2e48 <_Z9makeMorsePcPhS0_+0x11e>
					{
						c = *str;
    2e3c:	80 81       	ld	r24, Z
    2e3e:	80 93 20 40 	sts	0x4020, r24	; 0x804020 <_ZZ9makeMorsePcPhS0_E1c>
						charIndex = 0;
    2e42:	10 92 2d 43 	sts	0x432D, r1	; 0x80432d <_ZZ9makeMorsePcPhS0_E9charIndex>
    2e46:	0f c0       	rjmp	.+30     	; 0x2e66 <_Z9makeMorsePcPhS0_+0x13c>
					}
					else
					{
						str = NULL;
    2e48:	10 92 31 43 	sts	0x4331, r1	; 0x804331 <_ZZ9makeMorsePcPhS0_E3str>
    2e4c:	10 92 32 43 	sts	0x4332, r1	; 0x804332 <_ZZ9makeMorsePcPhS0_E3str+0x1>
						carrierOn = OFF;
    2e50:	10 92 28 43 	sts	0x4328, r1	; 0x804328 <_ZZ9makeMorsePcPhS0_E9carrierOn>
						completedString = TRUE;
    2e54:	91 e0       	ldi	r25, 0x01	; 1
    2e56:	90 93 29 43 	sts	0x4329, r25	; 0x804329 <_ZZ9makeMorsePcPhS0_E15completedString>
						if(finished)
    2e5a:	20 97       	sbiw	r28, 0x00	; 0
    2e5c:	09 f0       	breq	.+2      	; 0x2e60 <_Z9makeMorsePcPhS0_+0x136>
						{
							*finished = TRUE;
    2e5e:	98 83       	st	Y, r25
						}
						holdKeyDown = FALSE;
    2e60:	10 92 33 43 	sts	0x4333, r1	; 0x804333 <_ZZ9makeMorsePcPhS0_E11holdKeyDown>
						return( OFF );
    2e64:	58 c0       	rjmp	.+176    	; 0x2f16 <_Z9makeMorsePcPhS0_+0x1ec>
					}
				}

				morseInProgress = getMorseChar(c);
    2e66:	80 91 20 40 	lds	r24, 0x4020	; 0x804020 <_ZZ9makeMorsePcPhS0_E1c>
    2e6a:	0e 94 a2 15 	call	0x2b44	; 0x2b44 <_Z12getMorseCharc>
    2e6e:	60 93 2e 43 	sts	0x432E, r22	; 0x80432e <_ZZ9makeMorsePcPhS0_E15morseInProgress>
    2e72:	70 93 2f 43 	sts	0x432F, r23	; 0x80432f <_ZZ9makeMorsePcPhS0_E15morseInProgress+0x1>
    2e76:	80 93 30 43 	sts	0x4330, r24	; 0x804330 <_ZZ9makeMorsePcPhS0_E15morseInProgress+0x2>
				symbolIndex = 0;
    2e7a:	10 92 2c 43 	sts	0x432C, r1	; 0x80432c <_ZZ9makeMorsePcPhS0_E11symbolIndex>
			}

			if(morseInProgress.pattern < INTER_WORD_SPACE)
    2e7e:	20 91 2e 43 	lds	r18, 0x432E	; 0x80432e <_ZZ9makeMorsePcPhS0_E15morseInProgress>
    2e82:	2d 3f       	cpi	r18, 0xFD	; 253
    2e84:	00 f5       	brcc	.+64     	; 0x2ec6 <_Z9makeMorsePcPhS0_+0x19c>
			{
				BOOL isDah = morseInProgress.pattern & (1 << symbolIndex++);
    2e86:	40 91 2c 43 	lds	r20, 0x432C	; 0x80432c <_ZZ9makeMorsePcPhS0_E11symbolIndex>
    2e8a:	31 e0       	ldi	r19, 0x01	; 1
    2e8c:	34 0f       	add	r19, r20
    2e8e:	30 93 2c 43 	sts	0x432C, r19	; 0x80432c <_ZZ9makeMorsePcPhS0_E11symbolIndex>
    2e92:	81 e0       	ldi	r24, 0x01	; 1
    2e94:	90 e0       	ldi	r25, 0x00	; 0
    2e96:	02 c0       	rjmp	.+4      	; 0x2e9c <_Z9makeMorsePcPhS0_+0x172>
    2e98:	88 0f       	add	r24, r24
    2e9a:	99 1f       	adc	r25, r25
    2e9c:	4a 95       	dec	r20
    2e9e:	e2 f7       	brpl	.-8      	; 0x2e98 <_Z9makeMorsePcPhS0_+0x16e>
    2ea0:	82 23       	and	r24, r18

				if(isDah)
    2ea2:	21 f0       	breq	.+8      	; 0x2eac <_Z9makeMorsePcPhS0_+0x182>
				{
					elementIndex = 2;
    2ea4:	82 e0       	ldi	r24, 0x02	; 2
    2ea6:	80 93 2b 43 	sts	0x432B, r24	; 0x80432b <_ZZ9makeMorsePcPhS0_E12elementIndex>
    2eaa:	02 c0       	rjmp	.+4      	; 0x2eb0 <_Z9makeMorsePcPhS0_+0x186>
				}
				else
				{
					elementIndex = 0;
    2eac:	10 92 2b 43 	sts	0x432B, r1	; 0x80432b <_ZZ9makeMorsePcPhS0_E12elementIndex>
				}

				carrierOn = TRUE;
    2eb0:	81 e0       	ldi	r24, 0x01	; 1
    2eb2:	80 93 28 43 	sts	0x4328, r24	; 0x804328 <_ZZ9makeMorsePcPhS0_E9carrierOn>

				if(symbolIndex >= morseInProgress.lengthInSymbols)
    2eb6:	80 91 2f 43 	lds	r24, 0x432F	; 0x80432f <_ZZ9makeMorsePcPhS0_E15morseInProgress+0x1>
    2eba:	38 17       	cp	r19, r24
    2ebc:	98 f0       	brcs	.+38     	; 0x2ee4 <_Z9makeMorsePcPhS0_+0x1ba>
				{
					addedSpace = 2;
    2ebe:	82 e0       	ldi	r24, 0x02	; 2
    2ec0:	80 93 2a 43 	sts	0x432A, r24	; 0x80432a <_ZZ9makeMorsePcPhS0_E10addedSpace>
    2ec4:	0f c0       	rjmp	.+30     	; 0x2ee4 <_Z9makeMorsePcPhS0_+0x1ba>
				}
			}
			else
			{
				uint8_t sym = morseInProgress.lengthInSymbols;
    2ec6:	80 91 2f 43 	lds	r24, 0x432F	; 0x80432f <_ZZ9makeMorsePcPhS0_E15morseInProgress+0x1>
				symbolIndex = 255;  /* ensure the next character gets read */
    2eca:	9f ef       	ldi	r25, 0xFF	; 255
    2ecc:	90 93 2c 43 	sts	0x432C, r25	; 0x80432c <_ZZ9makeMorsePcPhS0_E11symbolIndex>
				carrierOn = FALSE;
    2ed0:	10 92 28 43 	sts	0x4328, r1	; 0x804328 <_ZZ9makeMorsePcPhS0_E9carrierOn>
				if(sym >= 4 )
    2ed4:	84 30       	cpi	r24, 0x04	; 4
    2ed6:	20 f0       	brcs	.+8      	; 0x2ee0 <_Z9makeMorsePcPhS0_+0x1b6>
				{
					elementIndex = morseInProgress.lengthInSymbols - 4;
    2ed8:	84 50       	subi	r24, 0x04	; 4
    2eda:	80 93 2b 43 	sts	0x432B, r24	; 0x80432b <_ZZ9makeMorsePcPhS0_E12elementIndex>
    2ede:	02 c0       	rjmp	.+4      	; 0x2ee4 <_Z9makeMorsePcPhS0_+0x1ba>
				}
				else
				{
					elementIndex = 0;
    2ee0:	10 92 2b 43 	sts	0x432B, r1	; 0x80432b <_ZZ9makeMorsePcPhS0_E12elementIndex>
				}
			}
		}

		/* Overrides for key on and key off special characters */
		if(c == '<')    /* constant tone */
    2ee4:	80 91 20 40 	lds	r24, 0x4020	; 0x804020 <_ZZ9makeMorsePcPhS0_E1c>
    2ee8:	8c 33       	cpi	r24, 0x3C	; 60
    2eea:	21 f4       	brne	.+8      	; 0x2ef4 <_Z9makeMorsePcPhS0_+0x1ca>
		{
			holdKeyDown = TRUE;
    2eec:	81 e0       	ldi	r24, 0x01	; 1
    2eee:	80 93 33 43 	sts	0x4333, r24	; 0x804333 <_ZZ9makeMorsePcPhS0_E11holdKeyDown>
    2ef2:	02 c0       	rjmp	.+4      	; 0x2ef8 <_Z9makeMorsePcPhS0_+0x1ce>
		}
		else
		{
			holdKeyDown = FALSE;
    2ef4:	10 92 33 43 	sts	0x4333, r1	; 0x804333 <_ZZ9makeMorsePcPhS0_E11holdKeyDown>
		}
	}

	if(finished)
    2ef8:	20 97       	sbiw	r28, 0x00	; 0
    2efa:	19 f0       	breq	.+6      	; 0x2f02 <_Z9makeMorsePcPhS0_+0x1d8>
	{
		*finished = completedString;
    2efc:	80 91 29 43 	lds	r24, 0x4329	; 0x804329 <_ZZ9makeMorsePcPhS0_E15completedString>
    2f00:	88 83       	st	Y, r24
	}

	if(holdKeyDown)
    2f02:	80 91 33 43 	lds	r24, 0x4333	; 0x804333 <_ZZ9makeMorsePcPhS0_E11holdKeyDown>
    2f06:	81 11       	cpse	r24, r1
    2f08:	05 c0       	rjmp	.+10     	; 0x2f14 <_Z9makeMorsePcPhS0_+0x1ea>
	{
		return(TRUE);
	}
	else
	{
		return( carrierOn);
    2f0a:	80 91 28 43 	lds	r24, 0x4328	; 0x804328 <_ZZ9makeMorsePcPhS0_E9carrierOn>
    2f0e:	03 c0       	rjmp	.+6      	; 0x2f16 <_Z9makeMorsePcPhS0_+0x1ec>
			if(finished)
			{
				*finished = TRUE;
				holdKeyDown = FALSE;
			}
			return( OFF);
    2f10:	80 e0       	ldi	r24, 0x00	; 0
    2f12:	01 c0       	rjmp	.+2      	; 0x2f16 <_Z9makeMorsePcPhS0_+0x1ec>
		*finished = completedString;
	}

	if(holdKeyDown)
	{
		return(TRUE);
    2f14:	81 e0       	ldi	r24, 0x01	; 1
	}
	else
	{
		return( carrierOn);
	}
}
    2f16:	df 91       	pop	r29
    2f18:	cf 91       	pop	r28
    2f1a:	08 95       	ret

00002f1c <_Z26timeRequiredToSendStrAtWPMPcj>:
/**
 *  Returns the number of milliseconds required to send the string pointed to by the first argument at the WPM code speed
 *  passed in the second argument.
 */
uint16_t timeRequiredToSendStrAtWPM(char* str, uint16_t spd)
{
    2f1c:	cf 92       	push	r12
    2f1e:	df 92       	push	r13
    2f20:	ef 92       	push	r14
    2f22:	ff 92       	push	r15
    2f24:	1f 93       	push	r17
    2f26:	cf 93       	push	r28
    2f28:	df 93       	push	r29
    2f2a:	6c 01       	movw	r12, r24
    2f2c:	7b 01       	movw	r14, r22
	uint8_t elements = 0;
	MorseCharacter m;
	char c;

	for(int i = 0; i < 20; i++)
    2f2e:	c0 e0       	ldi	r28, 0x00	; 0
    2f30:	d0 e0       	ldi	r29, 0x00	; 0
 *  Returns the number of milliseconds required to send the string pointed to by the first argument at the WPM code speed
 *  passed in the second argument.
 */
uint16_t timeRequiredToSendStrAtWPM(char* str, uint16_t spd)
{
	uint8_t elements = 0;
    2f32:	10 e0       	ldi	r17, 0x00	; 0
	MorseCharacter m;
	char c;

	for(int i = 0; i < 20; i++)
    2f34:	c4 31       	cpi	r28, 0x14	; 20
    2f36:	d1 05       	cpc	r29, r1
    2f38:	74 f4       	brge	.+28     	; 0x2f56 <_Z26timeRequiredToSendStrAtWPMPcj+0x3a>
	{
		c = str[i];
    2f3a:	f6 01       	movw	r30, r12
    2f3c:	ec 0f       	add	r30, r28
    2f3e:	fd 1f       	adc	r31, r29
    2f40:	80 81       	ld	r24, Z
		if(!c)
    2f42:	88 23       	and	r24, r24
    2f44:	41 f0       	breq	.+16     	; 0x2f56 <_Z26timeRequiredToSendStrAtWPMPcj+0x3a>
		{
			break;
		}
		m = getMorseChar(c);
    2f46:	0e 94 a2 15 	call	0x2b44	; 0x2b44 <_Z12getMorseCharc>
		if(m.pattern < INTER_WORD_SPACE)
    2f4a:	6d 3f       	cpi	r22, 0xFD	; 253
    2f4c:	08 f4       	brcc	.+2      	; 0x2f50 <_Z26timeRequiredToSendStrAtWPMPcj+0x34>
		{
			elements += 3;
    2f4e:	1d 5f       	subi	r17, 0xFD	; 253
		}
		elements += m.lengthInElements;
    2f50:	18 0f       	add	r17, r24
{
	uint8_t elements = 0;
	MorseCharacter m;
	char c;

	for(int i = 0; i < 20; i++)
    2f52:	21 96       	adiw	r28, 0x01	; 1
    2f54:	ef cf       	rjmp	.-34     	; 0x2f34 <_Z26timeRequiredToSendStrAtWPMPcj+0x18>
			elements += 3;
		}
		elements += m.lengthInElements;
	}

	return(elements * WPM_TO_MS_PER_DOT(spd));
    2f56:	80 eb       	ldi	r24, 0xB0	; 176
    2f58:	94 e0       	ldi	r25, 0x04	; 4
    2f5a:	b7 01       	movw	r22, r14
    2f5c:	0e 94 0a 24 	call	0x4814	; 0x4814 <__udivmodhi4>
}
    2f60:	16 9f       	mul	r17, r22
    2f62:	c0 01       	movw	r24, r0
    2f64:	17 9f       	mul	r17, r23
    2f66:	90 0d       	add	r25, r0
    2f68:	11 24       	eor	r1, r1
    2f6a:	df 91       	pop	r29
    2f6c:	cf 91       	pop	r28
    2f6e:	1f 91       	pop	r17
    2f70:	ff 90       	pop	r15
    2f72:	ef 90       	pop	r14
    2f74:	df 90       	pop	r13
    2f76:	cf 90       	pop	r12
    2f78:	08 95       	ret

00002f7a <protected_write_io>:
	PUBLIC_FUNCTION(protected_write_io)

#if defined(__GNUC__)
  
#ifdef RAMPZ
	out     _SFR_IO_ADDR(RAMPZ), r1         // Clear bits 23:16 of Z
    2f7a:	1b be       	out	0x3b, r1	; 59
#endif
	movw    r30, r24                // Load addr into Z
    2f7c:	fc 01       	movw	r30, r24
	out     CCP, r22                // Start CCP handshake
    2f7e:	64 bf       	out	0x34, r22	; 52
	st      Z, r20                  // Write value to I/O register
    2f80:	40 83       	st	Z, r20
	ret                             // Return to caller
    2f82:	08 95       	ret

00002f84 <nextFullSBTxBuffer>:
	if(g_bus_disabled)
	{
		return;
	}

	while(serialbus_send_text((char*)textPrompt))
    2f84:	90 e0       	ldi	r25, 0x00	; 0
    2f86:	80 91 36 43 	lds	r24, 0x4336	; 0x804336 <_ZZ18nextFullSBTxBufferE11bufferIndex>
    2f8a:	28 2f       	mov	r18, r24
    2f8c:	30 e0       	ldi	r19, 0x00	; 0
    2f8e:	49 e2       	ldi	r20, 0x29	; 41
    2f90:	42 9f       	mul	r20, r18
    2f92:	f0 01       	movw	r30, r0
    2f94:	43 9f       	mul	r20, r19
    2f96:	f0 0d       	add	r31, r0
    2f98:	11 24       	eor	r1, r1
    2f9a:	eb 54       	subi	r30, 0x4B	; 75
    2f9c:	fc 4b       	sbci	r31, 0xBC	; 188
    2f9e:	40 81       	ld	r20, Z
    2fa0:	41 11       	cpse	r20, r1
    2fa2:	0b c0       	rjmp	.+22     	; 0x2fba <nextFullSBTxBuffer+0x36>
    2fa4:	9f 5f       	subi	r25, 0xFF	; 255
    2fa6:	93 30       	cpi	r25, 0x03	; 3
    2fa8:	50 f4       	brcc	.+20     	; 0x2fbe <nextFullSBTxBuffer+0x3a>
    2faa:	8f 5f       	subi	r24, 0xFF	; 255
    2fac:	80 93 36 43 	sts	0x4336, r24	; 0x804336 <_ZZ18nextFullSBTxBufferE11bufferIndex>
    2fb0:	83 30       	cpi	r24, 0x03	; 3
    2fb2:	48 f3       	brcs	.-46     	; 0x2f86 <nextFullSBTxBuffer+0x2>
    2fb4:	10 92 36 43 	sts	0x4336, r1	; 0x804336 <_ZZ18nextFullSBTxBufferE11bufferIndex>
    2fb8:	e6 cf       	rjmp	.-52     	; 0x2f86 <nextFullSBTxBuffer+0x2>
    2fba:	81 e0       	ldi	r24, 0x01	; 1
    2fbc:	01 c0       	rjmp	.+2      	; 0x2fc0 <nextFullSBTxBuffer+0x3c>
    2fbe:	80 e0       	ldi	r24, 0x00	; 0
    2fc0:	88 23       	and	r24, r24
    2fc2:	49 f0       	breq	.+18     	; 0x2fd6 <nextFullSBTxBuffer+0x52>
    2fc4:	49 e2       	ldi	r20, 0x29	; 41
    2fc6:	42 9f       	mul	r20, r18
    2fc8:	c0 01       	movw	r24, r0
    2fca:	43 9f       	mul	r20, r19
    2fcc:	90 0d       	add	r25, r0
    2fce:	11 24       	eor	r1, r1
    2fd0:	8b 54       	subi	r24, 0x4B	; 75
    2fd2:	9c 4b       	sbci	r25, 0xBC	; 188
    2fd4:	08 95       	ret
    2fd6:	80 e0       	ldi	r24, 0x00	; 0
    2fd8:	90 e0       	ldi	r25, 0x00	; 0
    2fda:	08 95       	ret

00002fdc <nextEmptySBTxBuffer>:
    2fdc:	90 e0       	ldi	r25, 0x00	; 0
    2fde:	80 91 35 43 	lds	r24, 0x4335	; 0x804335 <_ZZ19nextEmptySBTxBufferE11bufferIndex>
    2fe2:	28 2f       	mov	r18, r24
    2fe4:	30 e0       	ldi	r19, 0x00	; 0
    2fe6:	49 e2       	ldi	r20, 0x29	; 41
    2fe8:	42 9f       	mul	r20, r18
    2fea:	f0 01       	movw	r30, r0
    2fec:	43 9f       	mul	r20, r19
    2fee:	f0 0d       	add	r31, r0
    2ff0:	11 24       	eor	r1, r1
    2ff2:	eb 54       	subi	r30, 0x4B	; 75
    2ff4:	fc 4b       	sbci	r31, 0xBC	; 188
    2ff6:	40 81       	ld	r20, Z
    2ff8:	44 23       	and	r20, r20
    2ffa:	59 f0       	breq	.+22     	; 0x3012 <nextEmptySBTxBuffer+0x36>
    2ffc:	9f 5f       	subi	r25, 0xFF	; 255
    2ffe:	93 30       	cpi	r25, 0x03	; 3
    3000:	50 f4       	brcc	.+20     	; 0x3016 <nextEmptySBTxBuffer+0x3a>
    3002:	8f 5f       	subi	r24, 0xFF	; 255
    3004:	80 93 35 43 	sts	0x4335, r24	; 0x804335 <_ZZ19nextEmptySBTxBufferE11bufferIndex>
    3008:	83 30       	cpi	r24, 0x03	; 3
    300a:	48 f3       	brcs	.-46     	; 0x2fde <nextEmptySBTxBuffer+0x2>
    300c:	10 92 35 43 	sts	0x4335, r1	; 0x804335 <_ZZ19nextEmptySBTxBufferE11bufferIndex>
    3010:	e6 cf       	rjmp	.-52     	; 0x2fde <nextEmptySBTxBuffer+0x2>
    3012:	81 e0       	ldi	r24, 0x01	; 1
    3014:	01 c0       	rjmp	.+2      	; 0x3018 <nextEmptySBTxBuffer+0x3c>
    3016:	80 e0       	ldi	r24, 0x00	; 0
    3018:	88 23       	and	r24, r24
    301a:	49 f0       	breq	.+18     	; 0x302e <nextEmptySBTxBuffer+0x52>
    301c:	49 e2       	ldi	r20, 0x29	; 41
    301e:	42 9f       	mul	r20, r18
    3020:	c0 01       	movw	r24, r0
    3022:	43 9f       	mul	r20, r19
    3024:	90 0d       	add	r25, r0
    3026:	11 24       	eor	r1, r1
    3028:	8b 54       	subi	r24, 0x4B	; 75
    302a:	9c 4b       	sbci	r25, 0xBC	; 188
    302c:	08 95       	ret
    302e:	80 e0       	ldi	r24, 0x00	; 0
    3030:	90 e0       	ldi	r25, 0x00	; 0
    3032:	08 95       	ret

00003034 <nextEmptySBRxBuffer>:
    3034:	90 e0       	ldi	r25, 0x00	; 0
    3036:	80 91 34 43 	lds	r24, 0x4334	; 0x804334 <_ZZ19nextEmptySBRxBufferE11bufferIndex>
    303a:	28 2f       	mov	r18, r24
    303c:	30 e0       	ldi	r19, 0x00	; 0
    303e:	4f e3       	ldi	r20, 0x3F	; 63
    3040:	42 9f       	mul	r20, r18
    3042:	f0 01       	movw	r30, r0
    3044:	43 9f       	mul	r20, r19
    3046:	f0 0d       	add	r31, r0
    3048:	11 24       	eor	r1, r1
    304a:	e9 5c       	subi	r30, 0xC9	; 201
    304c:	fc 4b       	sbci	r31, 0xBC	; 188
    304e:	41 81       	ldd	r20, Z+1	; 0x01
    3050:	52 81       	ldd	r21, Z+2	; 0x02
    3052:	45 2b       	or	r20, r21
    3054:	59 f0       	breq	.+22     	; 0x306c <nextEmptySBRxBuffer+0x38>
    3056:	9f 5f       	subi	r25, 0xFF	; 255
    3058:	92 30       	cpi	r25, 0x02	; 2
    305a:	50 f4       	brcc	.+20     	; 0x3070 <nextEmptySBRxBuffer+0x3c>
    305c:	8f 5f       	subi	r24, 0xFF	; 255
    305e:	80 93 34 43 	sts	0x4334, r24	; 0x804334 <_ZZ19nextEmptySBRxBufferE11bufferIndex>
    3062:	82 30       	cpi	r24, 0x02	; 2
    3064:	40 f3       	brcs	.-48     	; 0x3036 <nextEmptySBRxBuffer+0x2>
    3066:	10 92 34 43 	sts	0x4334, r1	; 0x804334 <_ZZ19nextEmptySBRxBufferE11bufferIndex>
    306a:	e5 cf       	rjmp	.-54     	; 0x3036 <nextEmptySBRxBuffer+0x2>
    306c:	81 e0       	ldi	r24, 0x01	; 1
    306e:	01 c0       	rjmp	.+2      	; 0x3072 <nextEmptySBRxBuffer+0x3e>
    3070:	80 e0       	ldi	r24, 0x00	; 0
    3072:	88 23       	and	r24, r24
    3074:	49 f0       	breq	.+18     	; 0x3088 <nextEmptySBRxBuffer+0x54>
    3076:	4f e3       	ldi	r20, 0x3F	; 63
    3078:	42 9f       	mul	r20, r18
    307a:	c0 01       	movw	r24, r0
    307c:	43 9f       	mul	r20, r19
    307e:	90 0d       	add	r25, r0
    3080:	11 24       	eor	r1, r1
    3082:	89 5c       	subi	r24, 0xC9	; 201
    3084:	9c 4b       	sbci	r25, 0xBC	; 188
    3086:	08 95       	ret
    3088:	80 e0       	ldi	r24, 0x00	; 0
    308a:	90 e0       	ldi	r25, 0x00	; 0
    308c:	08 95       	ret

0000308e <serialbusTxInProgress>:
    308e:	80 91 30 44 	lds	r24, 0x4430	; 0x804430 <_ZL19serialbus_tx_active>
    3092:	08 95       	ret

00003094 <_Z18serialbus_start_txv>:
    3094:	cf 93       	push	r28
    3096:	80 91 30 44 	lds	r24, 0x4430	; 0x804430 <_ZL19serialbus_tx_active>
    309a:	c1 e0       	ldi	r28, 0x01	; 1
    309c:	81 11       	cpse	r24, r1
    309e:	c0 e0       	ldi	r28, 0x00	; 0
    30a0:	81 11       	cpse	r24, r1
    30a2:	05 c0       	rjmp	.+10     	; 0x30ae <_Z18serialbus_start_txv+0x1a>
    30a4:	81 e0       	ldi	r24, 0x01	; 1
    30a6:	80 93 30 44 	sts	0x4430, r24	; 0x804430 <_ZL19serialbus_tx_active>
    30aa:	0e 94 7c 21 	call	0x42f8	; 0x42f8 <USART0_enable_tx>
    30ae:	8c 2f       	mov	r24, r28
    30b0:	cf 91       	pop	r28
    30b2:	08 95       	ret

000030b4 <_Z19serialbus_send_textPc>:
    30b4:	0f 93       	push	r16
    30b6:	1f 93       	push	r17
    30b8:	cf 93       	push	r28
    30ba:	df 93       	push	r29
    30bc:	20 91 22 40 	lds	r18, 0x4022	; 0x804022 <_ZL14g_bus_disabled>
    30c0:	21 11       	cpse	r18, r1
    30c2:	2f c0       	rjmp	.+94     	; 0x3122 <_Z19serialbus_send_textPc+0x6e>
    30c4:	00 97       	sbiw	r24, 0x00	; 0
    30c6:	79 f1       	breq	.+94     	; 0x3126 <_Z19serialbus_send_textPc+0x72>
    30c8:	8c 01       	movw	r16, r24
    30ca:	0e 94 ee 17 	call	0x2fdc	; 0x2fdc <nextEmptySBTxBuffer>
    30ce:	c8 ec       	ldi	r28, 0xC8	; 200
    30d0:	d0 e0       	ldi	r29, 0x00	; 0
    30d2:	00 97       	sbiw	r24, 0x00	; 0
    30d4:	b1 f4       	brne	.+44     	; 0x3102 <_Z19serialbus_send_textPc+0x4e>
    30d6:	20 97       	sbiw	r28, 0x00	; 0
    30d8:	a1 f0       	breq	.+40     	; 0x3102 <_Z19serialbus_send_textPc+0x4e>
    30da:	0e 94 47 18 	call	0x308e	; 0x308e <serialbusTxInProgress>
    30de:	88 23       	and	r24, r24
    30e0:	21 f0       	breq	.+8      	; 0x30ea <_Z19serialbus_send_textPc+0x36>
    30e2:	20 97       	sbiw	r28, 0x00	; 0
    30e4:	21 f4       	brne	.+8      	; 0x30ee <_Z19serialbus_send_textPc+0x3a>
    30e6:	90 e0       	ldi	r25, 0x00	; 0
    30e8:	03 c0       	rjmp	.+6      	; 0x30f0 <_Z19serialbus_send_textPc+0x3c>
    30ea:	90 e0       	ldi	r25, 0x00	; 0
    30ec:	01 c0       	rjmp	.+2      	; 0x30f0 <_Z19serialbus_send_textPc+0x3c>
    30ee:	91 e0       	ldi	r25, 0x01	; 1
    30f0:	99 23       	and	r25, r25
    30f2:	21 f0       	breq	.+8      	; 0x30fc <_Z19serialbus_send_textPc+0x48>
    30f4:	20 97       	sbiw	r28, 0x00	; 0
    30f6:	89 f3       	breq	.-30     	; 0x30da <_Z19serialbus_send_textPc+0x26>
    30f8:	21 97       	sbiw	r28, 0x01	; 1
    30fa:	ef cf       	rjmp	.-34     	; 0x30da <_Z19serialbus_send_textPc+0x26>
    30fc:	0e 94 ee 17 	call	0x2fdc	; 0x2fdc <nextEmptySBTxBuffer>
    3100:	e8 cf       	rjmp	.-48     	; 0x30d2 <_Z19serialbus_send_textPc+0x1e>
    3102:	00 97       	sbiw	r24, 0x00	; 0
    3104:	91 f0       	breq	.+36     	; 0x312a <_Z19serialbus_send_textPc+0x76>
    3106:	1f 93       	push	r17
    3108:	0f 93       	push	r16
    310a:	9f 93       	push	r25
    310c:	8f 93       	push	r24
    310e:	0e 94 3f 26 	call	0x4c7e	; 0x4c7e <sprintf>
    3112:	0e 94 4a 18 	call	0x3094	; 0x3094 <_Z18serialbus_start_txv>
    3116:	0f 90       	pop	r0
    3118:	0f 90       	pop	r0
    311a:	0f 90       	pop	r0
    311c:	0f 90       	pop	r0
    311e:	80 e0       	ldi	r24, 0x00	; 0
    3120:	05 c0       	rjmp	.+10     	; 0x312c <_Z19serialbus_send_textPc+0x78>
    3122:	81 e0       	ldi	r24, 0x01	; 1
    3124:	03 c0       	rjmp	.+6      	; 0x312c <_Z19serialbus_send_textPc+0x78>
    3126:	81 e0       	ldi	r24, 0x01	; 1
    3128:	01 c0       	rjmp	.+2      	; 0x312c <_Z19serialbus_send_textPc+0x78>
    312a:	81 e0       	ldi	r24, 0x01	; 1
    312c:	df 91       	pop	r29
    312e:	cf 91       	pop	r28
    3130:	1f 91       	pop	r17
    3132:	0f 91       	pop	r16
    3134:	08 95       	ret

00003136 <sb_send_NewLine>:
	}
}

void sb_send_NewLine(void)
{
	if(g_bus_disabled)
    3136:	80 91 22 40 	lds	r24, 0x4022	; 0x804022 <_ZL14g_bus_disabled>
    313a:	81 11       	cpse	r24, r1
    313c:	04 c0       	rjmp	.+8      	; 0x3146 <sb_send_NewLine+0x10>
	{
		return;
	}
	serialbus_send_text((char*)crlf);
    313e:	84 ec       	ldi	r24, 0xC4	; 196
    3140:	90 e4       	ldi	r25, 0x40	; 64
    3142:	0e 94 5a 18 	call	0x30b4	; 0x30b4 <_Z19serialbus_send_textPc>
    3146:	08 95       	ret

00003148 <sb_echo_char>:
}

void sb_echo_char(uint8_t c)
{
	if(g_bus_disabled)
    3148:	90 91 22 40 	lds	r25, 0x4022	; 0x804022 <_ZL14g_bus_disabled>
    314c:	91 11       	cpse	r25, r1
    314e:	07 c0       	rjmp	.+14     	; 0x315e <sb_echo_char+0x16>
	{
		return;
	}
	g_tempMsgBuff[0] = c;
    3150:	e1 e3       	ldi	r30, 0x31	; 49
    3152:	f4 e4       	ldi	r31, 0x44	; 68
    3154:	80 83       	st	Z, r24
	g_tempMsgBuff[1] = '\0';
    3156:	11 82       	std	Z+1, r1	; 0x01
	serialbus_send_text(g_tempMsgBuff);
    3158:	cf 01       	movw	r24, r30
    315a:	0e 94 5a 18 	call	0x30b4	; 0x30b4 <_Z19serialbus_send_textPc>
    315e:	08 95       	ret

00003160 <_Z21si5351_get_correctionv>:
		data[0] = SI5351_CLK0_CTRL + (uint8_t)clk;
		data[1] = reg_val;
		if(si5351_write_bulk(data, 2)) return ERROR_CODE_CLKGEN_NONRESPONSIVE;

		return ERROR_CODE_NO_ERROR;
	}
    3160:	60 91 74 44 	lds	r22, 0x4474	; 0x804474 <_ZL23g_si5351_ref_correction>
    3164:	70 91 75 44 	lds	r23, 0x4475	; 0x804475 <_ZL23g_si5351_ref_correction+0x1>
    3168:	80 91 76 44 	lds	r24, 0x4476	; 0x804476 <_ZL23g_si5351_ref_correction+0x2>
    316c:	90 91 77 44 	lds	r25, 0x4477	; 0x804477 <_ZL23g_si5351_ref_correction+0x3>
    3170:	08 95       	ret

00003172 <_Z13reduce_by_gcdPmS_>:
    3172:	4f 92       	push	r4
    3174:	5f 92       	push	r5
    3176:	6f 92       	push	r6
    3178:	7f 92       	push	r7
    317a:	8f 92       	push	r8
    317c:	9f 92       	push	r9
    317e:	af 92       	push	r10
    3180:	bf 92       	push	r11
    3182:	cf 92       	push	r12
    3184:	df 92       	push	r13
    3186:	ef 92       	push	r14
    3188:	ff 92       	push	r15
    318a:	0f 93       	push	r16
    318c:	1f 93       	push	r17
    318e:	cf 93       	push	r28
    3190:	df 93       	push	r29
    3192:	8c 01       	movw	r16, r24
    3194:	eb 01       	movw	r28, r22
    3196:	fc 01       	movw	r30, r24
    3198:	40 80       	ld	r4, Z
    319a:	51 80       	ldd	r5, Z+1	; 0x01
    319c:	62 80       	ldd	r6, Z+2	; 0x02
    319e:	73 80       	ldd	r7, Z+3	; 0x03
    31a0:	88 80       	ld	r8, Y
    31a2:	99 80       	ldd	r9, Y+1	; 0x01
    31a4:	aa 80       	ldd	r10, Y+2	; 0x02
    31a6:	bb 80       	ldd	r11, Y+3	; 0x03
    31a8:	41 14       	cp	r4, r1
    31aa:	51 04       	cpc	r5, r1
    31ac:	61 04       	cpc	r6, r1
    31ae:	71 04       	cpc	r7, r1
    31b0:	e1 f1       	breq	.+120    	; 0x322a <_Z13reduce_by_gcdPmS_+0xb8>
    31b2:	81 14       	cp	r8, r1
    31b4:	91 04       	cpc	r9, r1
    31b6:	a1 04       	cpc	r10, r1
    31b8:	b1 04       	cpc	r11, r1
    31ba:	b9 f1       	breq	.+110    	; 0x322a <_Z13reduce_by_gcdPmS_+0xb8>
    31bc:	c3 01       	movw	r24, r6
    31be:	b2 01       	movw	r22, r4
    31c0:	a5 01       	movw	r20, r10
    31c2:	94 01       	movw	r18, r8
    31c4:	0e 94 32 24 	call	0x4864	; 0x4864 <__udivmodsi4>
    31c8:	6b 01       	movw	r12, r22
    31ca:	7c 01       	movw	r14, r24
    31cc:	c1 14       	cp	r12, r1
    31ce:	d1 04       	cpc	r13, r1
    31d0:	e1 04       	cpc	r14, r1
    31d2:	f1 04       	cpc	r15, r1
    31d4:	69 f0       	breq	.+26     	; 0x31f0 <_Z13reduce_by_gcdPmS_+0x7e>
    31d6:	c5 01       	movw	r24, r10
    31d8:	b4 01       	movw	r22, r8
    31da:	a7 01       	movw	r20, r14
    31dc:	96 01       	movw	r18, r12
    31de:	0e 94 32 24 	call	0x4864	; 0x4864 <__udivmodsi4>
    31e2:	46 01       	movw	r8, r12
    31e4:	57 01       	movw	r10, r14
    31e6:	c6 2e       	mov	r12, r22
    31e8:	d7 2e       	mov	r13, r23
    31ea:	e8 2e       	mov	r14, r24
    31ec:	f9 2e       	mov	r15, r25
    31ee:	ee cf       	rjmp	.-36     	; 0x31cc <_Z13reduce_by_gcdPmS_+0x5a>
    31f0:	f2 e0       	ldi	r31, 0x02	; 2
    31f2:	8f 16       	cp	r8, r31
    31f4:	91 04       	cpc	r9, r1
    31f6:	a1 04       	cpc	r10, r1
    31f8:	b1 04       	cpc	r11, r1
    31fa:	b8 f0       	brcs	.+46     	; 0x322a <_Z13reduce_by_gcdPmS_+0xb8>
    31fc:	c3 01       	movw	r24, r6
    31fe:	b2 01       	movw	r22, r4
    3200:	a5 01       	movw	r20, r10
    3202:	94 01       	movw	r18, r8
    3204:	0e 94 32 24 	call	0x4864	; 0x4864 <__udivmodsi4>
    3208:	f8 01       	movw	r30, r16
    320a:	20 83       	st	Z, r18
    320c:	31 83       	std	Z+1, r19	; 0x01
    320e:	42 83       	std	Z+2, r20	; 0x02
    3210:	53 83       	std	Z+3, r21	; 0x03
    3212:	68 81       	ld	r22, Y
    3214:	79 81       	ldd	r23, Y+1	; 0x01
    3216:	8a 81       	ldd	r24, Y+2	; 0x02
    3218:	9b 81       	ldd	r25, Y+3	; 0x03
    321a:	a5 01       	movw	r20, r10
    321c:	94 01       	movw	r18, r8
    321e:	0e 94 32 24 	call	0x4864	; 0x4864 <__udivmodsi4>
    3222:	28 83       	st	Y, r18
    3224:	39 83       	std	Y+1, r19	; 0x01
    3226:	4a 83       	std	Y+2, r20	; 0x02
    3228:	5b 83       	std	Y+3, r21	; 0x03
    322a:	df 91       	pop	r29
    322c:	cf 91       	pop	r28
    322e:	1f 91       	pop	r17
    3230:	0f 91       	pop	r16
    3232:	ff 90       	pop	r15
    3234:	ef 90       	pop	r14
    3236:	df 90       	pop	r13
    3238:	cf 90       	pop	r12
    323a:	bf 90       	pop	r11
    323c:	af 90       	pop	r10
    323e:	9f 90       	pop	r9
    3240:	8f 90       	pop	r8
    3242:	7f 90       	pop	r7
    3244:	6f 90       	pop	r6
    3246:	5f 90       	pop	r5
    3248:	4f 90       	pop	r4
    324a:	08 95       	ret

0000324c <_Z8pll_calcmP13u_si5351_regs>:
    324c:	4f 92       	push	r4
    324e:	5f 92       	push	r5
    3250:	6f 92       	push	r6
    3252:	7f 92       	push	r7
    3254:	8f 92       	push	r8
    3256:	9f 92       	push	r9
    3258:	af 92       	push	r10
    325a:	bf 92       	push	r11
    325c:	cf 92       	push	r12
    325e:	df 92       	push	r13
    3260:	ef 92       	push	r14
    3262:	ff 92       	push	r15
    3264:	0f 93       	push	r16
    3266:	1f 93       	push	r17
    3268:	cf 93       	push	r28
    326a:	df 93       	push	r29
    326c:	cd b7       	in	r28, 0x3d	; 61
    326e:	de b7       	in	r29, 0x3e	; 62
    3270:	28 97       	sbiw	r28, 0x08	; 8
    3272:	cd bf       	out	0x3d, r28	; 61
    3274:	de bf       	out	0x3e, r29	; 62
    3276:	8a 01       	movw	r16, r20
    3278:	80 90 23 40 	lds	r8, 0x4023	; 0x804023 <_ZL9xtal_freq>
    327c:	90 90 24 40 	lds	r9, 0x4024	; 0x804024 <_ZL9xtal_freq+0x1>
    3280:	a0 90 25 40 	lds	r10, 0x4025	; 0x804025 <_ZL9xtal_freq+0x2>
    3284:	b0 90 26 40 	lds	r11, 0x4026	; 0x804026 <_ZL9xtal_freq+0x3>
    3288:	a5 01       	movw	r20, r10
    328a:	94 01       	movw	r18, r8
    328c:	0e 94 32 24 	call	0x4864	; 0x4864 <__udivmodsi4>
    3290:	69 01       	movw	r12, r18
    3292:	7a 01       	movw	r14, r20
    3294:	69 83       	std	Y+1, r22	; 0x01
    3296:	7a 83       	std	Y+2, r23	; 0x02
    3298:	8b 83       	std	Y+3, r24	; 0x03
    329a:	9c 83       	std	Y+4, r25	; 0x04
    329c:	8d 82       	std	Y+5, r8	; 0x05
    329e:	9e 82       	std	Y+6, r9	; 0x06
    32a0:	af 82       	std	Y+7, r10	; 0x07
    32a2:	b8 86       	std	Y+8, r11	; 0x08
    32a4:	be 01       	movw	r22, r28
    32a6:	6b 5f       	subi	r22, 0xFB	; 251
    32a8:	7f 4f       	sbci	r23, 0xFF	; 255
    32aa:	ce 01       	movw	r24, r28
    32ac:	01 96       	adiw	r24, 0x01	; 1
    32ae:	0e 94 b9 18 	call	0x3172	; 0x3172 <_Z13reduce_by_gcdPmS_>
    32b2:	89 80       	ldd	r8, Y+1	; 0x01
    32b4:	9a 80       	ldd	r9, Y+2	; 0x02
    32b6:	ab 80       	ldd	r10, Y+3	; 0x03
    32b8:	bc 80       	ldd	r11, Y+4	; 0x04
    32ba:	88 0c       	add	r8, r8
    32bc:	99 1c       	adc	r9, r9
    32be:	aa 1c       	adc	r10, r10
    32c0:	bb 1c       	adc	r11, r11
    32c2:	88 0c       	add	r8, r8
    32c4:	99 1c       	adc	r9, r9
    32c6:	aa 1c       	adc	r10, r10
    32c8:	bb 1c       	adc	r11, r11
    32ca:	88 0c       	add	r8, r8
    32cc:	99 1c       	adc	r9, r9
    32ce:	aa 1c       	adc	r10, r10
    32d0:	bb 1c       	adc	r11, r11
    32d2:	88 0c       	add	r8, r8
    32d4:	99 1c       	adc	r9, r9
    32d6:	aa 1c       	adc	r10, r10
    32d8:	bb 1c       	adc	r11, r11
    32da:	88 0c       	add	r8, r8
    32dc:	99 1c       	adc	r9, r9
    32de:	aa 1c       	adc	r10, r10
    32e0:	bb 1c       	adc	r11, r11
    32e2:	88 0c       	add	r8, r8
    32e4:	99 1c       	adc	r9, r9
    32e6:	aa 1c       	adc	r10, r10
    32e8:	bb 1c       	adc	r11, r11
    32ea:	88 0c       	add	r8, r8
    32ec:	99 1c       	adc	r9, r9
    32ee:	aa 1c       	adc	r10, r10
    32f0:	bb 1c       	adc	r11, r11
    32f2:	4d 80       	ldd	r4, Y+5	; 0x05
    32f4:	5e 80       	ldd	r5, Y+6	; 0x06
    32f6:	6f 80       	ldd	r6, Y+7	; 0x07
    32f8:	78 84       	ldd	r7, Y+8	; 0x08
    32fa:	c5 01       	movw	r24, r10
    32fc:	b4 01       	movw	r22, r8
    32fe:	a3 01       	movw	r20, r6
    3300:	92 01       	movw	r18, r4
    3302:	0e 94 32 24 	call	0x4864	; 0x4864 <__udivmodsi4>
    3306:	cc 0c       	add	r12, r12
    3308:	dd 1c       	adc	r13, r13
    330a:	ee 1c       	adc	r14, r14
    330c:	ff 1c       	adc	r15, r15
    330e:	cc 0c       	add	r12, r12
    3310:	dd 1c       	adc	r13, r13
    3312:	ee 1c       	adc	r14, r14
    3314:	ff 1c       	adc	r15, r15
    3316:	cc 0c       	add	r12, r12
    3318:	dd 1c       	adc	r13, r13
    331a:	ee 1c       	adc	r14, r14
    331c:	ff 1c       	adc	r15, r15
    331e:	cc 0c       	add	r12, r12
    3320:	dd 1c       	adc	r13, r13
    3322:	ee 1c       	adc	r14, r14
    3324:	ff 1c       	adc	r15, r15
    3326:	cc 0c       	add	r12, r12
    3328:	dd 1c       	adc	r13, r13
    332a:	ee 1c       	adc	r14, r14
    332c:	ff 1c       	adc	r15, r15
    332e:	cc 0c       	add	r12, r12
    3330:	dd 1c       	adc	r13, r13
    3332:	ee 1c       	adc	r14, r14
    3334:	ff 1c       	adc	r15, r15
    3336:	cc 0c       	add	r12, r12
    3338:	dd 1c       	adc	r13, r13
    333a:	ee 1c       	adc	r14, r14
    333c:	ff 1c       	adc	r15, r15
    333e:	c2 0e       	add	r12, r18
    3340:	d3 1e       	adc	r13, r19
    3342:	e4 1e       	adc	r14, r20
    3344:	f5 1e       	adc	r15, r21
    3346:	82 e0       	ldi	r24, 0x02	; 2
    3348:	d8 1a       	sub	r13, r24
    334a:	e1 08       	sbc	r14, r1
    334c:	f1 08       	sbc	r15, r1
    334e:	f8 01       	movw	r30, r16
    3350:	c0 82       	st	Z, r12
    3352:	d1 82       	std	Z+1, r13	; 0x01
    3354:	e2 82       	std	Z+2, r14	; 0x02
    3356:	f3 82       	std	Z+3, r15	; 0x03
    3358:	c3 01       	movw	r24, r6
    335a:	b2 01       	movw	r22, r4
    335c:	0e 94 fa 23 	call	0x47f4	; 0x47f4 <__mulsi3>
    3360:	86 1a       	sub	r8, r22
    3362:	97 0a       	sbc	r9, r23
    3364:	a8 0a       	sbc	r10, r24
    3366:	b9 0a       	sbc	r11, r25
    3368:	84 82       	std	Z+4, r8	; 0x04
    336a:	95 82       	std	Z+5, r9	; 0x05
    336c:	a6 82       	std	Z+6, r10	; 0x06
    336e:	b7 82       	std	Z+7, r11	; 0x07
    3370:	40 86       	std	Z+8, r4	; 0x08
    3372:	51 86       	std	Z+9, r5	; 0x09
    3374:	62 86       	std	Z+10, r6	; 0x0a
    3376:	73 86       	std	Z+11, r7	; 0x0b
    3378:	80 e0       	ldi	r24, 0x00	; 0
    337a:	28 96       	adiw	r28, 0x08	; 8
    337c:	cd bf       	out	0x3d, r28	; 61
    337e:	de bf       	out	0x3e, r29	; 62
    3380:	df 91       	pop	r29
    3382:	cf 91       	pop	r28
    3384:	1f 91       	pop	r17
    3386:	0f 91       	pop	r16
    3388:	ff 90       	pop	r15
    338a:	ef 90       	pop	r14
    338c:	df 90       	pop	r13
    338e:	cf 90       	pop	r12
    3390:	bf 90       	pop	r11
    3392:	af 90       	pop	r10
    3394:	9f 90       	pop	r9
    3396:	8f 90       	pop	r8
    3398:	7f 90       	pop	r7
    339a:	6f 90       	pop	r6
    339c:	5f 90       	pop	r5
    339e:	4f 90       	pop	r4
    33a0:	08 95       	ret

000033a2 <_Z15multisynth_calcmP13u_si5351_regsPhS1_>:
    33a2:	2f 92       	push	r2
    33a4:	3f 92       	push	r3
    33a6:	4f 92       	push	r4
    33a8:	5f 92       	push	r5
    33aa:	6f 92       	push	r6
    33ac:	7f 92       	push	r7
    33ae:	8f 92       	push	r8
    33b0:	9f 92       	push	r9
    33b2:	af 92       	push	r10
    33b4:	bf 92       	push	r11
    33b6:	cf 92       	push	r12
    33b8:	df 92       	push	r13
    33ba:	ef 92       	push	r14
    33bc:	ff 92       	push	r15
    33be:	0f 93       	push	r16
    33c0:	1f 93       	push	r17
    33c2:	cf 93       	push	r28
    33c4:	df 93       	push	r29
    33c6:	cd b7       	in	r28, 0x3d	; 61
    33c8:	de b7       	in	r29, 0x3e	; 62
    33ca:	25 97       	sbiw	r28, 0x05	; 5
    33cc:	cd bf       	out	0x3d, r28	; 61
    33ce:	de bf       	out	0x3e, r29	; 62
    33d0:	2b 01       	movw	r4, r22
    33d2:	3c 01       	movw	r6, r24
    33d4:	4a 83       	std	Y+2, r20	; 0x02
    33d6:	5b 83       	std	Y+3, r21	; 0x03
    33d8:	18 01       	movw	r2, r16
    33da:	81 e0       	ldi	r24, 0x01	; 1
    33dc:	f9 01       	movw	r30, r18
    33de:	80 83       	st	Z, r24
    33e0:	f0 e8       	ldi	r31, 0x80	; 128
    33e2:	4f 16       	cp	r4, r31
    33e4:	f1 ed       	ldi	r31, 0xD1	; 209
    33e6:	5f 06       	cpc	r5, r31
    33e8:	f0 ef       	ldi	r31, 0xF0	; 240
    33ea:	6f 06       	cpc	r6, r31
    33ec:	f8 e0       	ldi	r31, 0x08	; 8
    33ee:	7f 06       	cpc	r7, r31
    33f0:	d0 f0       	brcs	.+52     	; 0x3426 <_Z15multisynth_calcmP13u_si5351_regsPhS1_+0x84>
    33f2:	c3 01       	movw	r24, r6
    33f4:	b2 01       	movw	r22, r4
    33f6:	66 0f       	add	r22, r22
    33f8:	77 1f       	adc	r23, r23
    33fa:	88 1f       	adc	r24, r24
    33fc:	99 1f       	adc	r25, r25
    33fe:	66 0f       	add	r22, r22
    3400:	77 1f       	adc	r23, r23
    3402:	88 1f       	adc	r24, r24
    3404:	99 1f       	adc	r25, r25
    3406:	c1 2c       	mov	r12, r1
    3408:	d1 2c       	mov	r13, r1
    340a:	76 01       	movw	r14, r12
    340c:	68 94       	set
    340e:	c2 f8       	bld	r12, 2
    3410:	48 c0       	rjmp	.+144    	; 0x34a2 <_Z15multisynth_calcmP13u_si5351_regsPhS1_+0x100>
    3412:	21 e0       	ldi	r18, 0x01	; 1
    3414:	2d 83       	std	Y+5, r18	; 0x05
    3416:	0d c0       	rjmp	.+26     	; 0x3432 <_Z15multisynth_calcmP13u_si5351_regsPhS1_+0x90>
    3418:	69 01       	movw	r12, r18
    341a:	7a 01       	movw	r14, r20
    341c:	31 e0       	ldi	r19, 0x01	; 1
    341e:	39 83       	std	Y+1, r19	; 0x01
    3420:	81 e0       	ldi	r24, 0x01	; 1
    3422:	8d 83       	std	Y+5, r24	; 0x05
    3424:	06 c0       	rjmp	.+12     	; 0x3432 <_Z15multisynth_calcmP13u_si5351_regsPhS1_+0x90>
    3426:	1c 82       	std	Y+4, r1	; 0x04
    3428:	19 82       	std	Y+1, r1	; 0x01
    342a:	1d 82       	std	Y+5, r1	; 0x05
    342c:	c1 2c       	mov	r12, r1
    342e:	d1 2c       	mov	r13, r1
    3430:	76 01       	movw	r14, r12
    3432:	8d 80       	ldd	r8, Y+5	; 0x05
    3434:	81 10       	cpse	r8, r1
    3436:	28 c0       	rjmp	.+80     	; 0x3488 <_Z15multisynth_calcmP13u_si5351_regsPhS1_+0xe6>
    3438:	9c 80       	ldd	r9, Y+4	; 0x04
    343a:	a9 2d       	mov	r26, r9
    343c:	b0 e0       	ldi	r27, 0x00	; 0
    343e:	a3 01       	movw	r20, r6
    3440:	92 01       	movw	r18, r4
    3442:	0e 94 92 24 	call	0x4924	; 0x4924 <__muluhisi3>
    3446:	00 e0       	ldi	r16, 0x00	; 0
    3448:	19 ee       	ldi	r17, 0xE9	; 233
    344a:	24 ea       	ldi	r18, 0xA4	; 164
    344c:	35 e3       	ldi	r19, 0x35	; 53
    344e:	48 01       	movw	r8, r16
    3450:	59 01       	movw	r10, r18
    3452:	86 1a       	sub	r8, r22
    3454:	97 0a       	sbc	r9, r23
    3456:	a8 0a       	sbc	r10, r24
    3458:	b9 0a       	sbc	r11, r25
    345a:	c5 01       	movw	r24, r10
    345c:	b4 01       	movw	r22, r8
    345e:	2c 81       	ldd	r18, Y+4	; 0x04
    3460:	2e 5f       	subi	r18, 0xFE	; 254
    3462:	2c 83       	std	Y+4, r18	; 0x04
    3464:	81 14       	cp	r8, r1
    3466:	36 e4       	ldi	r19, 0x46	; 70
    3468:	93 06       	cpc	r9, r19
    346a:	33 ec       	ldi	r19, 0xC3	; 195
    346c:	a3 06       	cpc	r10, r19
    346e:	33 e2       	ldi	r19, 0x23	; 35
    3470:	b3 06       	cpc	r11, r19
    3472:	78 f2       	brcs	.-98     	; 0x3412 <_Z15multisynth_calcmP13u_si5351_regsPhS1_+0x70>
    3474:	a3 01       	movw	r20, r6
    3476:	92 01       	movw	r18, r4
    3478:	0e 94 32 24 	call	0x4864	; 0x4864 <__udivmodsi4>
    347c:	24 30       	cpi	r18, 0x04	; 4
    347e:	31 05       	cpc	r19, r1
    3480:	41 05       	cpc	r20, r1
    3482:	51 05       	cpc	r21, r1
    3484:	48 f6       	brcc	.-110    	; 0x3418 <_Z15multisynth_calcmP13u_si5351_regsPhS1_+0x76>
    3486:	d5 cf       	rjmp	.-86     	; 0x3432 <_Z15multisynth_calcmP13u_si5351_regsPhS1_+0x90>
    3488:	89 80       	ldd	r8, Y+1	; 0x01
    348a:	88 20       	and	r8, r8
    348c:	39 f0       	breq	.+14     	; 0x349c <_Z15multisynth_calcmP13u_si5351_regsPhS1_+0xfa>
    348e:	a7 01       	movw	r20, r14
    3490:	96 01       	movw	r18, r12
    3492:	c3 01       	movw	r24, r6
    3494:	b2 01       	movw	r22, r4
    3496:	0e 94 fa 23 	call	0x47f4	; 0x47f4 <__mulsi3>
    349a:	03 c0       	rjmp	.+6      	; 0x34a2 <_Z15multisynth_calcmP13u_si5351_regsPhS1_+0x100>
    349c:	60 e0       	ldi	r22, 0x00	; 0
    349e:	70 e0       	ldi	r23, 0x00	; 0
    34a0:	cb 01       	movw	r24, r22
    34a2:	21 e0       	ldi	r18, 0x01	; 1
    34a4:	34 e0       	ldi	r19, 0x04	; 4
    34a6:	c3 16       	cp	r12, r19
    34a8:	d1 04       	cpc	r13, r1
    34aa:	e1 04       	cpc	r14, r1
    34ac:	f1 04       	cpc	r15, r1
    34ae:	09 f0       	breq	.+2      	; 0x34b2 <_Z15multisynth_calcmP13u_si5351_regsPhS1_+0x110>
    34b0:	20 e0       	ldi	r18, 0x00	; 0
    34b2:	f1 01       	movw	r30, r2
    34b4:	20 83       	st	Z, r18
    34b6:	cc 0c       	add	r12, r12
    34b8:	dd 1c       	adc	r13, r13
    34ba:	ee 1c       	adc	r14, r14
    34bc:	ff 1c       	adc	r15, r15
    34be:	cc 0c       	add	r12, r12
    34c0:	dd 1c       	adc	r13, r13
    34c2:	ee 1c       	adc	r14, r14
    34c4:	ff 1c       	adc	r15, r15
    34c6:	cc 0c       	add	r12, r12
    34c8:	dd 1c       	adc	r13, r13
    34ca:	ee 1c       	adc	r14, r14
    34cc:	ff 1c       	adc	r15, r15
    34ce:	cc 0c       	add	r12, r12
    34d0:	dd 1c       	adc	r13, r13
    34d2:	ee 1c       	adc	r14, r14
    34d4:	ff 1c       	adc	r15, r15
    34d6:	cc 0c       	add	r12, r12
    34d8:	dd 1c       	adc	r13, r13
    34da:	ee 1c       	adc	r14, r14
    34dc:	ff 1c       	adc	r15, r15
    34de:	cc 0c       	add	r12, r12
    34e0:	dd 1c       	adc	r13, r13
    34e2:	ee 1c       	adc	r14, r14
    34e4:	ff 1c       	adc	r15, r15
    34e6:	cc 0c       	add	r12, r12
    34e8:	dd 1c       	adc	r13, r13
    34ea:	ee 1c       	adc	r14, r14
    34ec:	ff 1c       	adc	r15, r15
    34ee:	f2 e0       	ldi	r31, 0x02	; 2
    34f0:	df 1a       	sub	r13, r31
    34f2:	e1 08       	sbc	r14, r1
    34f4:	f1 08       	sbc	r15, r1
    34f6:	ea 81       	ldd	r30, Y+2	; 0x02
    34f8:	fb 81       	ldd	r31, Y+3	; 0x03
    34fa:	c0 82       	st	Z, r12
    34fc:	d1 82       	std	Z+1, r13	; 0x01
    34fe:	e2 82       	std	Z+2, r14	; 0x02
    3500:	f3 82       	std	Z+3, r15	; 0x03
    3502:	14 82       	std	Z+4, r1	; 0x04
    3504:	15 82       	std	Z+5, r1	; 0x05
    3506:	16 82       	std	Z+6, r1	; 0x06
    3508:	17 82       	std	Z+7, r1	; 0x07
    350a:	01 e0       	ldi	r16, 0x01	; 1
    350c:	10 e0       	ldi	r17, 0x00	; 0
    350e:	20 e0       	ldi	r18, 0x00	; 0
    3510:	30 e0       	ldi	r19, 0x00	; 0
    3512:	00 87       	std	Z+8, r16	; 0x08
    3514:	11 87       	std	Z+9, r17	; 0x09
    3516:	22 87       	std	Z+10, r18	; 0x0a
    3518:	33 87       	std	Z+11, r19	; 0x0b
    351a:	25 96       	adiw	r28, 0x05	; 5
    351c:	cd bf       	out	0x3d, r28	; 61
    351e:	de bf       	out	0x3e, r29	; 62
    3520:	df 91       	pop	r29
    3522:	cf 91       	pop	r28
    3524:	1f 91       	pop	r17
    3526:	0f 91       	pop	r16
    3528:	ff 90       	pop	r15
    352a:	ef 90       	pop	r14
    352c:	df 90       	pop	r13
    352e:	cf 90       	pop	r12
    3530:	bf 90       	pop	r11
    3532:	af 90       	pop	r10
    3534:	9f 90       	pop	r9
    3536:	8f 90       	pop	r8
    3538:	7f 90       	pop	r7
    353a:	6f 90       	pop	r6
    353c:	5f 90       	pop	r5
    353e:	4f 90       	pop	r4
    3540:	3f 90       	pop	r3
    3542:	2f 90       	pop	r2
    3544:	08 95       	ret

00003546 <_Z19multisynth_estimatemP13u_si5351_regsPhS1_>:
    3546:	2f 92       	push	r2
    3548:	3f 92       	push	r3
    354a:	4f 92       	push	r4
    354c:	5f 92       	push	r5
    354e:	6f 92       	push	r6
    3550:	7f 92       	push	r7
    3552:	8f 92       	push	r8
    3554:	9f 92       	push	r9
    3556:	af 92       	push	r10
    3558:	bf 92       	push	r11
    355a:	cf 92       	push	r12
    355c:	df 92       	push	r13
    355e:	ef 92       	push	r14
    3560:	ff 92       	push	r15
    3562:	0f 93       	push	r16
    3564:	1f 93       	push	r17
    3566:	cf 93       	push	r28
    3568:	df 93       	push	r29
    356a:	cd b7       	in	r28, 0x3d	; 61
    356c:	de b7       	in	r29, 0x3e	; 62
    356e:	62 97       	sbiw	r28, 0x12	; 18
    3570:	cd bf       	out	0x3d, r28	; 61
    3572:	de bf       	out	0x3e, r29	; 62
    3574:	4b 01       	movw	r8, r22
    3576:	5c 01       	movw	r10, r24
    3578:	1a 01       	movw	r2, r20
    357a:	29 8b       	std	Y+17, r18	; 0x11
    357c:	3a 8b       	std	Y+18, r19	; 0x12
    357e:	60 91 70 44 	lds	r22, 0x4470	; 0x804470 <_ZL8freqVCOB>
    3582:	70 91 71 44 	lds	r23, 0x4471	; 0x804471 <_ZL8freqVCOB+0x1>
    3586:	80 91 72 44 	lds	r24, 0x4472	; 0x804472 <_ZL8freqVCOB+0x2>
    358a:	90 91 73 44 	lds	r25, 0x4473	; 0x804473 <_ZL8freqVCOB+0x3>
    358e:	a5 01       	movw	r20, r10
    3590:	94 01       	movw	r18, r8
    3592:	0e 94 32 24 	call	0x4864	; 0x4864 <__udivmodsi4>
    3596:	29 87       	std	Y+9, r18	; 0x09
    3598:	3a 87       	std	Y+10, r19	; 0x0a
    359a:	4b 87       	std	Y+11, r20	; 0x0b
    359c:	5c 87       	std	Y+12, r21	; 0x0c
    359e:	69 01       	movw	r12, r18
    35a0:	7a 01       	movw	r14, r20
    35a2:	69 83       	std	Y+1, r22	; 0x01
    35a4:	7a 83       	std	Y+2, r23	; 0x02
    35a6:	8b 83       	std	Y+3, r24	; 0x03
    35a8:	9c 83       	std	Y+4, r25	; 0x04
    35aa:	8d 82       	std	Y+5, r8	; 0x05
    35ac:	9e 82       	std	Y+6, r9	; 0x06
    35ae:	af 82       	std	Y+7, r10	; 0x07
    35b0:	b8 86       	std	Y+8, r11	; 0x08
    35b2:	be 01       	movw	r22, r28
    35b4:	6b 5f       	subi	r22, 0xFB	; 251
    35b6:	7f 4f       	sbci	r23, 0xFF	; 255
    35b8:	ce 01       	movw	r24, r28
    35ba:	01 96       	adiw	r24, 0x01	; 1
    35bc:	0e 94 b9 18 	call	0x3172	; 0x3172 <_Z13reduce_by_gcdPmS_>
    35c0:	80 91 70 44 	lds	r24, 0x4470	; 0x804470 <_ZL8freqVCOB>
    35c4:	90 91 71 44 	lds	r25, 0x4471	; 0x804471 <_ZL8freqVCOB+0x1>
    35c8:	a0 91 72 44 	lds	r26, 0x4472	; 0x804472 <_ZL8freqVCOB+0x2>
    35cc:	b0 91 73 44 	lds	r27, 0x4473	; 0x804473 <_ZL8freqVCOB+0x3>
    35d0:	8d 87       	std	Y+13, r24	; 0x0d
    35d2:	9e 87       	std	Y+14, r25	; 0x0e
    35d4:	af 87       	std	Y+15, r26	; 0x0f
    35d6:	b8 8b       	std	Y+16, r27	; 0x10
    35d8:	4d 80       	ldd	r4, Y+5	; 0x05
    35da:	5e 80       	ldd	r5, Y+6	; 0x06
    35dc:	6f 80       	ldd	r6, Y+7	; 0x07
    35de:	78 84       	ldd	r7, Y+8	; 0x08
    35e0:	29 85       	ldd	r18, Y+9	; 0x09
    35e2:	3a 85       	ldd	r19, Y+10	; 0x0a
    35e4:	4b 85       	ldd	r20, Y+11	; 0x0b
    35e6:	5c 85       	ldd	r21, Y+12	; 0x0c
    35e8:	c3 01       	movw	r24, r6
    35ea:	b2 01       	movw	r22, r4
    35ec:	0e 94 fa 23 	call	0x47f4	; 0x47f4 <__mulsi3>
    35f0:	89 80       	ldd	r8, Y+1	; 0x01
    35f2:	9a 80       	ldd	r9, Y+2	; 0x02
    35f4:	ab 80       	ldd	r10, Y+3	; 0x03
    35f6:	bc 80       	ldd	r11, Y+4	; 0x04
    35f8:	9b 01       	movw	r18, r22
    35fa:	ac 01       	movw	r20, r24
    35fc:	28 0d       	add	r18, r8
    35fe:	39 1d       	adc	r19, r9
    3600:	4a 1d       	adc	r20, r10
    3602:	5b 1d       	adc	r21, r11
    3604:	6d 85       	ldd	r22, Y+13	; 0x0d
    3606:	7e 85       	ldd	r23, Y+14	; 0x0e
    3608:	8f 85       	ldd	r24, Y+15	; 0x0f
    360a:	98 89       	ldd	r25, Y+16	; 0x10
    360c:	0e 94 32 24 	call	0x4864	; 0x4864 <__udivmodsi4>
    3610:	ca 01       	movw	r24, r20
    3612:	b9 01       	movw	r22, r18
    3614:	a3 01       	movw	r20, r6
    3616:	92 01       	movw	r18, r4
    3618:	0e 94 fa 23 	call	0x47f4	; 0x47f4 <__mulsi3>
    361c:	6d 87       	std	Y+13, r22	; 0x0d
    361e:	7e 87       	std	Y+14, r23	; 0x0e
    3620:	8f 87       	std	Y+15, r24	; 0x0f
    3622:	98 8b       	std	Y+16, r25	; 0x10
    3624:	89 28       	or	r8, r9
    3626:	8a 28       	or	r8, r10
    3628:	8b 28       	or	r8, r11
    362a:	29 f4       	brne	.+10     	; 0x3636 <_Z19multisynth_estimatemP13u_si5351_regsPhS1_+0xf0>
    362c:	99 85       	ldd	r25, Y+9	; 0x09
    362e:	90 ff       	sbrs	r25, 0
    3630:	04 c0       	rjmp	.+8      	; 0x363a <_Z19multisynth_estimatemP13u_si5351_regsPhS1_+0xf4>
    3632:	80 e0       	ldi	r24, 0x00	; 0
    3634:	03 c0       	rjmp	.+6      	; 0x363c <_Z19multisynth_estimatemP13u_si5351_regsPhS1_+0xf6>
    3636:	80 e0       	ldi	r24, 0x00	; 0
    3638:	01 c0       	rjmp	.+2      	; 0x363c <_Z19multisynth_estimatemP13u_si5351_regsPhS1_+0xf6>
    363a:	81 e0       	ldi	r24, 0x01	; 1
    363c:	a9 89       	ldd	r26, Y+17	; 0x11
    363e:	ba 89       	ldd	r27, Y+18	; 0x12
    3640:	8c 93       	st	X, r24
    3642:	b4 e0       	ldi	r27, 0x04	; 4
    3644:	cb 16       	cp	r12, r27
    3646:	d1 04       	cpc	r13, r1
    3648:	e1 04       	cpc	r14, r1
    364a:	f1 04       	cpc	r15, r1
    364c:	21 f4       	brne	.+8      	; 0x3656 <_Z19multisynth_estimatemP13u_si5351_regsPhS1_+0x110>
    364e:	81 11       	cpse	r24, r1
    3650:	04 c0       	rjmp	.+8      	; 0x365a <_Z19multisynth_estimatemP13u_si5351_regsPhS1_+0x114>
    3652:	80 e0       	ldi	r24, 0x00	; 0
    3654:	03 c0       	rjmp	.+6      	; 0x365c <_Z19multisynth_estimatemP13u_si5351_regsPhS1_+0x116>
    3656:	80 e0       	ldi	r24, 0x00	; 0
    3658:	01 c0       	rjmp	.+2      	; 0x365c <_Z19multisynth_estimatemP13u_si5351_regsPhS1_+0x116>
    365a:	81 e0       	ldi	r24, 0x01	; 1
    365c:	f8 01       	movw	r30, r16
    365e:	80 83       	st	Z, r24
    3660:	88 23       	and	r24, r24
    3662:	a1 f0       	breq	.+40     	; 0x368c <_Z19multisynth_estimatemP13u_si5351_regsPhS1_+0x146>
    3664:	d1 01       	movw	r26, r2
    3666:	1d 92       	st	X+, r1
    3668:	1d 92       	st	X+, r1
    366a:	1d 92       	st	X+, r1
    366c:	1c 92       	st	X, r1
    366e:	13 97       	sbiw	r26, 0x03	; 3
    3670:	f1 01       	movw	r30, r2
    3672:	14 82       	std	Z+4, r1	; 0x04
    3674:	15 82       	std	Z+5, r1	; 0x05
    3676:	16 82       	std	Z+6, r1	; 0x06
    3678:	17 82       	std	Z+7, r1	; 0x07
    367a:	81 e0       	ldi	r24, 0x01	; 1
    367c:	90 e0       	ldi	r25, 0x00	; 0
    367e:	a0 e0       	ldi	r26, 0x00	; 0
    3680:	b0 e0       	ldi	r27, 0x00	; 0
    3682:	80 87       	std	Z+8, r24	; 0x08
    3684:	91 87       	std	Z+9, r25	; 0x09
    3686:	a2 87       	std	Z+10, r26	; 0x0a
    3688:	b3 87       	std	Z+11, r27	; 0x0b
    368a:	69 c0       	rjmp	.+210    	; 0x375e <_Z19multisynth_estimatemP13u_si5351_regsPhS1_+0x218>
    368c:	89 80       	ldd	r8, Y+1	; 0x01
    368e:	9a 80       	ldd	r9, Y+2	; 0x02
    3690:	ab 80       	ldd	r10, Y+3	; 0x03
    3692:	bc 80       	ldd	r11, Y+4	; 0x04
    3694:	88 0c       	add	r8, r8
    3696:	99 1c       	adc	r9, r9
    3698:	aa 1c       	adc	r10, r10
    369a:	bb 1c       	adc	r11, r11
    369c:	88 0c       	add	r8, r8
    369e:	99 1c       	adc	r9, r9
    36a0:	aa 1c       	adc	r10, r10
    36a2:	bb 1c       	adc	r11, r11
    36a4:	88 0c       	add	r8, r8
    36a6:	99 1c       	adc	r9, r9
    36a8:	aa 1c       	adc	r10, r10
    36aa:	bb 1c       	adc	r11, r11
    36ac:	88 0c       	add	r8, r8
    36ae:	99 1c       	adc	r9, r9
    36b0:	aa 1c       	adc	r10, r10
    36b2:	bb 1c       	adc	r11, r11
    36b4:	88 0c       	add	r8, r8
    36b6:	99 1c       	adc	r9, r9
    36b8:	aa 1c       	adc	r10, r10
    36ba:	bb 1c       	adc	r11, r11
    36bc:	88 0c       	add	r8, r8
    36be:	99 1c       	adc	r9, r9
    36c0:	aa 1c       	adc	r10, r10
    36c2:	bb 1c       	adc	r11, r11
    36c4:	88 0c       	add	r8, r8
    36c6:	99 1c       	adc	r9, r9
    36c8:	aa 1c       	adc	r10, r10
    36ca:	bb 1c       	adc	r11, r11
    36cc:	4d 80       	ldd	r4, Y+5	; 0x05
    36ce:	5e 80       	ldd	r5, Y+6	; 0x06
    36d0:	6f 80       	ldd	r6, Y+7	; 0x07
    36d2:	78 84       	ldd	r7, Y+8	; 0x08
    36d4:	c5 01       	movw	r24, r10
    36d6:	b4 01       	movw	r22, r8
    36d8:	a3 01       	movw	r20, r6
    36da:	92 01       	movw	r18, r4
    36dc:	0e 94 32 24 	call	0x4864	; 0x4864 <__udivmodsi4>
    36e0:	c9 84       	ldd	r12, Y+9	; 0x09
    36e2:	da 84       	ldd	r13, Y+10	; 0x0a
    36e4:	eb 84       	ldd	r14, Y+11	; 0x0b
    36e6:	fc 84       	ldd	r15, Y+12	; 0x0c
    36e8:	cc 0c       	add	r12, r12
    36ea:	dd 1c       	adc	r13, r13
    36ec:	ee 1c       	adc	r14, r14
    36ee:	ff 1c       	adc	r15, r15
    36f0:	cc 0c       	add	r12, r12
    36f2:	dd 1c       	adc	r13, r13
    36f4:	ee 1c       	adc	r14, r14
    36f6:	ff 1c       	adc	r15, r15
    36f8:	cc 0c       	add	r12, r12
    36fa:	dd 1c       	adc	r13, r13
    36fc:	ee 1c       	adc	r14, r14
    36fe:	ff 1c       	adc	r15, r15
    3700:	cc 0c       	add	r12, r12
    3702:	dd 1c       	adc	r13, r13
    3704:	ee 1c       	adc	r14, r14
    3706:	ff 1c       	adc	r15, r15
    3708:	cc 0c       	add	r12, r12
    370a:	dd 1c       	adc	r13, r13
    370c:	ee 1c       	adc	r14, r14
    370e:	ff 1c       	adc	r15, r15
    3710:	cc 0c       	add	r12, r12
    3712:	dd 1c       	adc	r13, r13
    3714:	ee 1c       	adc	r14, r14
    3716:	ff 1c       	adc	r15, r15
    3718:	cc 0c       	add	r12, r12
    371a:	dd 1c       	adc	r13, r13
    371c:	ee 1c       	adc	r14, r14
    371e:	ff 1c       	adc	r15, r15
    3720:	c2 0e       	add	r12, r18
    3722:	d3 1e       	adc	r13, r19
    3724:	e4 1e       	adc	r14, r20
    3726:	f5 1e       	adc	r15, r21
    3728:	f2 e0       	ldi	r31, 0x02	; 2
    372a:	df 1a       	sub	r13, r31
    372c:	e1 08       	sbc	r14, r1
    372e:	f1 08       	sbc	r15, r1
    3730:	d1 01       	movw	r26, r2
    3732:	cd 92       	st	X+, r12
    3734:	dd 92       	st	X+, r13
    3736:	ed 92       	st	X+, r14
    3738:	fc 92       	st	X, r15
    373a:	13 97       	sbiw	r26, 0x03	; 3
    373c:	c3 01       	movw	r24, r6
    373e:	b2 01       	movw	r22, r4
    3740:	0e 94 fa 23 	call	0x47f4	; 0x47f4 <__mulsi3>
    3744:	86 1a       	sub	r8, r22
    3746:	97 0a       	sbc	r9, r23
    3748:	a8 0a       	sbc	r10, r24
    374a:	b9 0a       	sbc	r11, r25
    374c:	f1 01       	movw	r30, r2
    374e:	84 82       	std	Z+4, r8	; 0x04
    3750:	95 82       	std	Z+5, r9	; 0x05
    3752:	a6 82       	std	Z+6, r10	; 0x06
    3754:	b7 82       	std	Z+7, r11	; 0x07
    3756:	40 86       	std	Z+8, r4	; 0x08
    3758:	51 86       	std	Z+9, r5	; 0x09
    375a:	62 86       	std	Z+10, r6	; 0x0a
    375c:	73 86       	std	Z+11, r7	; 0x0b
    375e:	6d 85       	ldd	r22, Y+13	; 0x0d
    3760:	7e 85       	ldd	r23, Y+14	; 0x0e
    3762:	8f 85       	ldd	r24, Y+15	; 0x0f
    3764:	98 89       	ldd	r25, Y+16	; 0x10
    3766:	62 96       	adiw	r28, 0x12	; 18
    3768:	cd bf       	out	0x3d, r28	; 61
    376a:	de bf       	out	0x3e, r29	; 62
    376c:	df 91       	pop	r29
    376e:	cf 91       	pop	r28
    3770:	1f 91       	pop	r17
    3772:	0f 91       	pop	r16
    3774:	ff 90       	pop	r15
    3776:	ef 90       	pop	r14
    3778:	df 90       	pop	r13
    377a:	cf 90       	pop	r12
    377c:	bf 90       	pop	r11
    377e:	af 90       	pop	r10
    3780:	9f 90       	pop	r9
    3782:	8f 90       	pop	r8
    3784:	7f 90       	pop	r7
    3786:	6f 90       	pop	r6
    3788:	5f 90       	pop	r5
    378a:	4f 90       	pop	r4
    378c:	3f 90       	pop	r3
    378e:	2f 90       	pop	r2
    3790:	08 95       	ret

00003792 <_Z17si5351_write_bulkPhh>:
    3792:	cf 93       	push	r28
    3794:	c6 2f       	mov	r28, r22
    3796:	46 2f       	mov	r20, r22
    3798:	bc 01       	movw	r22, r24
    379a:	80 ec       	ldi	r24, 0xC0	; 192
    379c:	0e 94 37 13 	call	0x266e	; 0x266e <I2C_1_SendData>
    37a0:	91 e0       	ldi	r25, 0x01	; 1
    37a2:	c8 13       	cpse	r28, r24
    37a4:	01 c0       	rjmp	.+2      	; 0x37a8 <_Z17si5351_write_bulkPhh+0x16>
    37a6:	90 e0       	ldi	r25, 0x00	; 0
    37a8:	89 2f       	mov	r24, r25
    37aa:	cf 91       	pop	r28
    37ac:	08 95       	ret

000037ae <_Z7set_pllm10si5351_pll>:
    37ae:	1f 93       	push	r17
    37b0:	cf 93       	push	r28
    37b2:	df 93       	push	r29
    37b4:	cd b7       	in	r28, 0x3d	; 61
    37b6:	de b7       	in	r29, 0x3e	; 62
    37b8:	66 97       	sbiw	r28, 0x16	; 22
    37ba:	cd bf       	out	0x3d, r28	; 61
    37bc:	de bf       	out	0x3e, r29	; 62
    37be:	14 2f       	mov	r17, r20
    37c0:	ae 01       	movw	r20, r28
    37c2:	4f 5f       	subi	r20, 0xFF	; 255
    37c4:	5f 4f       	sbci	r21, 0xFF	; 255
    37c6:	0e 94 26 19 	call	0x324c	; 0x324c <_Z8pll_calcmP13u_si5351_regs>
    37ca:	8a 85       	ldd	r24, Y+10	; 0x0a
    37cc:	8e 87       	std	Y+14, r24	; 0x0e
    37ce:	89 85       	ldd	r24, Y+9	; 0x09
    37d0:	8f 87       	std	Y+15, r24	; 0x0f
    37d2:	8b 81       	ldd	r24, Y+3	; 0x03
    37d4:	83 70       	andi	r24, 0x03	; 3
    37d6:	88 8b       	std	Y+16, r24	; 0x10
    37d8:	8a 81       	ldd	r24, Y+2	; 0x02
    37da:	89 8b       	std	Y+17, r24	; 0x11
    37dc:	89 81       	ldd	r24, Y+1	; 0x01
    37de:	8a 8b       	std	Y+18, r24	; 0x12
    37e0:	9b 85       	ldd	r25, Y+11	; 0x0b
    37e2:	8f 81       	ldd	r24, Y+7	; 0x07
    37e4:	8f 70       	andi	r24, 0x0F	; 15
    37e6:	20 e1       	ldi	r18, 0x10	; 16
    37e8:	92 9f       	mul	r25, r18
    37ea:	80 0d       	add	r24, r0
    37ec:	11 24       	eor	r1, r1
    37ee:	8b 8b       	std	Y+19, r24	; 0x13
    37f0:	8e 81       	ldd	r24, Y+6	; 0x06
    37f2:	8c 8b       	std	Y+20, r24	; 0x14
    37f4:	8d 81       	ldd	r24, Y+5	; 0x05
    37f6:	8d 8b       	std	Y+21, r24	; 0x15
    37f8:	11 30       	cpi	r17, 0x01	; 1
    37fa:	41 f4       	brne	.+16     	; 0x380c <_Z7set_pllm10si5351_pll+0x5e>
    37fc:	8a e1       	ldi	r24, 0x1A	; 26
    37fe:	8d 87       	std	Y+13, r24	; 0x0d
    3800:	69 e0       	ldi	r22, 0x09	; 9
    3802:	ce 01       	movw	r24, r28
    3804:	0d 96       	adiw	r24, 0x0d	; 13
    3806:	0e 94 c9 1b 	call	0x3792	; 0x3792 <_Z17si5351_write_bulkPhh>
    380a:	07 c0       	rjmp	.+14     	; 0x381a <_Z7set_pllm10si5351_pll+0x6c>
    380c:	82 e2       	ldi	r24, 0x22	; 34
    380e:	8d 87       	std	Y+13, r24	; 0x0d
    3810:	69 e0       	ldi	r22, 0x09	; 9
    3812:	ce 01       	movw	r24, r28
    3814:	0d 96       	adiw	r24, 0x0d	; 13
    3816:	0e 94 c9 1b 	call	0x3792	; 0x3792 <_Z17si5351_write_bulkPhh>
    381a:	66 96       	adiw	r28, 0x16	; 22
    381c:	cd bf       	out	0x3d, r28	; 61
    381e:	de bf       	out	0x3e, r29	; 62
    3820:	df 91       	pop	r29
    3822:	cf 91       	pop	r28
    3824:	1f 91       	pop	r17
    3826:	08 95       	ret

00003828 <_Z16si5351_read_bulkPhh>:
    3828:	cf 93       	push	r28
    382a:	c6 2f       	mov	r28, r22
    382c:	46 2f       	mov	r20, r22
    382e:	bc 01       	movw	r22, r24
    3830:	80 ec       	ldi	r24, 0xC0	; 192
    3832:	0e 94 6c 13 	call	0x26d8	; 0x26d8 <I2C_1_GetData>
    3836:	91 e0       	ldi	r25, 0x01	; 1
    3838:	c8 13       	cpse	r28, r24
    383a:	01 c0       	rjmp	.+2      	; 0x383e <_Z16si5351_read_bulkPhh+0x16>
    383c:	90 e0       	ldi	r25, 0x00	; 0
    383e:	89 2f       	mov	r24, r25
    3840:	cf 91       	pop	r28
    3842:	08 95       	ret

00003844 <_Z19si5351_clock_enable12si5351_clockh>:
    3844:	0f 93       	push	r16
    3846:	1f 93       	push	r17
    3848:	cf 93       	push	r28
    384a:	df 93       	push	r29
    384c:	00 d0       	rcall	.+0      	; 0x384e <_Z19si5351_clock_enable12si5351_clockh+0xa>
    384e:	cd b7       	in	r28, 0x3d	; 61
    3850:	de b7       	in	r29, 0x3e	; 62
    3852:	18 2f       	mov	r17, r24
    3854:	06 2f       	mov	r16, r22
    3856:	83 e0       	ldi	r24, 0x03	; 3
    3858:	89 83       	std	Y+1, r24	; 0x01
    385a:	61 e0       	ldi	r22, 0x01	; 1
    385c:	ce 01       	movw	r24, r28
    385e:	01 96       	adiw	r24, 0x01	; 1
    3860:	0e 94 14 1c 	call	0x3828	; 0x3828 <_Z16si5351_read_bulkPhh>
    3864:	81 11       	cpse	r24, r1
    3866:	23 c0       	rjmp	.+70     	; 0x38ae <_Z19si5351_clock_enable12si5351_clockh+0x6a>
    3868:	99 81       	ldd	r25, Y+1	; 0x01
    386a:	00 23       	and	r16, r16
    386c:	59 f0       	breq	.+22     	; 0x3884 <_Z19si5351_clock_enable12si5351_clockh+0x40>
    386e:	21 e0       	ldi	r18, 0x01	; 1
    3870:	30 e0       	ldi	r19, 0x00	; 0
    3872:	02 c0       	rjmp	.+4      	; 0x3878 <_Z19si5351_clock_enable12si5351_clockh+0x34>
    3874:	22 0f       	add	r18, r18
    3876:	33 1f       	adc	r19, r19
    3878:	1a 95       	dec	r17
    387a:	e2 f7       	brpl	.-8      	; 0x3874 <_Z19si5351_clock_enable12si5351_clockh+0x30>
    387c:	82 2f       	mov	r24, r18
    387e:	80 95       	com	r24
    3880:	89 23       	and	r24, r25
    3882:	09 c0       	rjmp	.+18     	; 0x3896 <_Z19si5351_clock_enable12si5351_clockh+0x52>
    3884:	21 e0       	ldi	r18, 0x01	; 1
    3886:	30 e0       	ldi	r19, 0x00	; 0
    3888:	02 c0       	rjmp	.+4      	; 0x388e <_Z19si5351_clock_enable12si5351_clockh+0x4a>
    388a:	22 0f       	add	r18, r18
    388c:	33 1f       	adc	r19, r19
    388e:	1a 95       	dec	r17
    3890:	e2 f7       	brpl	.-8      	; 0x388a <_Z19si5351_clock_enable12si5351_clockh+0x46>
    3892:	89 2f       	mov	r24, r25
    3894:	82 2b       	or	r24, r18
    3896:	93 e0       	ldi	r25, 0x03	; 3
    3898:	99 83       	std	Y+1, r25	; 0x01
    389a:	8a 83       	std	Y+2, r24	; 0x02
    389c:	62 e0       	ldi	r22, 0x02	; 2
    389e:	ce 01       	movw	r24, r28
    38a0:	01 96       	adiw	r24, 0x01	; 1
    38a2:	0e 94 c9 1b 	call	0x3792	; 0x3792 <_Z17si5351_write_bulkPhh>
    38a6:	88 23       	and	r24, r24
    38a8:	21 f0       	breq	.+8      	; 0x38b2 <_Z19si5351_clock_enable12si5351_clockh+0x6e>
    38aa:	8c ef       	ldi	r24, 0xFC	; 252
    38ac:	03 c0       	rjmp	.+6      	; 0x38b4 <_Z19si5351_clock_enable12si5351_clockh+0x70>
    38ae:	8c ef       	ldi	r24, 0xFC	; 252
    38b0:	01 c0       	rjmp	.+2      	; 0x38b4 <_Z19si5351_clock_enable12si5351_clockh+0x70>
    38b2:	80 e0       	ldi	r24, 0x00	; 0
    38b4:	0f 90       	pop	r0
    38b6:	0f 90       	pop	r0
    38b8:	df 91       	pop	r29
    38ba:	cf 91       	pop	r28
    38bc:	1f 91       	pop	r17
    38be:	0f 91       	pop	r16
    38c0:	08 95       	ret

000038c2 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll>:
 *
 * Set the desired PLL source for a multisynth.
 *
 */
	void set_multisynth_registers_source(Si5351_clock clk, Si5351_pll pll)
	{
    38c2:	0f 93       	push	r16
    38c4:	1f 93       	push	r17
    38c6:	cf 93       	push	r28
    38c8:	df 93       	push	r29
    38ca:	00 d0       	rcall	.+0      	; 0x38cc <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0xa>
    38cc:	cd b7       	in	r28, 0x3d	; 61
    38ce:	de b7       	in	r29, 0x3e	; 62
    38d0:	06 2f       	mov	r16, r22
		uint8_t reg_val;
		uint8_t data[2];
		
		data[0] = SI5351_CLK0_CTRL + (uint8_t)clk;
    38d2:	10 e1       	ldi	r17, 0x10	; 16
    38d4:	18 0f       	add	r17, r24
    38d6:	19 83       	std	Y+1, r17	; 0x01

		if(si5351_read_bulk(data, 1))
    38d8:	61 e0       	ldi	r22, 0x01	; 1
    38da:	ce 01       	movw	r24, r28
    38dc:	01 96       	adiw	r24, 0x01	; 1
    38de:	0e 94 14 1c 	call	0x3828	; 0x3828 <_Z16si5351_read_bulkPhh>
    38e2:	81 11       	cpse	r24, r1
    38e4:	0f c0       	rjmp	.+30     	; 0x3904 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x42>
		{
			return;
		}
		
		reg_val = data[0];
    38e6:	89 81       	ldd	r24, Y+1	; 0x01

		if(pll == SI5351_PLLA)
    38e8:	01 30       	cpi	r16, 0x01	; 1
    38ea:	11 f4       	brne	.+4      	; 0x38f0 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x2e>
		{
			reg_val &= ~(SI5351_CLK_PLL_SELECT);
    38ec:	8f 7d       	andi	r24, 0xDF	; 223
    38ee:	03 c0       	rjmp	.+6      	; 0x38f6 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x34>
		}
		else if(pll == SI5351_PLLB)
    38f0:	02 30       	cpi	r16, 0x02	; 2
    38f2:	09 f4       	brne	.+2      	; 0x38f6 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x34>
		{
			reg_val |= SI5351_CLK_PLL_SELECT;
    38f4:	80 62       	ori	r24, 0x20	; 32
		}

		data[0] = SI5351_CLK0_CTRL + (uint8_t)clk;
    38f6:	19 83       	std	Y+1, r17	; 0x01
		data[1] = reg_val;
    38f8:	8a 83       	std	Y+2, r24	; 0x02
		si5351_write_bulk(data, 2);
    38fa:	62 e0       	ldi	r22, 0x02	; 2
    38fc:	ce 01       	movw	r24, r28
    38fe:	01 96       	adiw	r24, 0x01	; 1
    3900:	0e 94 c9 1b 	call	0x3792	; 0x3792 <_Z17si5351_write_bulkPhh>
	}
    3904:	0f 90       	pop	r0
    3906:	0f 90       	pop	r0
    3908:	df 91       	pop	r29
    390a:	cf 91       	pop	r28
    390c:	1f 91       	pop	r17
    390e:	0f 91       	pop	r16
    3910:	08 95       	ret

00003912 <_Z16set_integer_mode12si5351_clockh>:
 * enable - 1 to enable, 0 to disable
 *
 * Set the indicated multisynth into integer mode.
 */
	void set_integer_mode(Si5351_clock clk, BOOL enable)
	{
    3912:	0f 93       	push	r16
    3914:	1f 93       	push	r17
    3916:	cf 93       	push	r28
    3918:	df 93       	push	r29
    391a:	00 d0       	rcall	.+0      	; 0x391c <_Z16set_integer_mode12si5351_clockh+0xa>
    391c:	cd b7       	in	r28, 0x3d	; 61
    391e:	de b7       	in	r29, 0x3e	; 62
    3920:	06 2f       	mov	r16, r22
		uint8_t reg_val;
		uint8_t data[2];

		data[0] = SI5351_CLK0_CTRL + (uint8_t)clk;
    3922:	10 e1       	ldi	r17, 0x10	; 16
    3924:	18 0f       	add	r17, r24
    3926:	19 83       	std	Y+1, r17	; 0x01
		if(si5351_read_bulk(data, 1))
    3928:	61 e0       	ldi	r22, 0x01	; 1
    392a:	ce 01       	movw	r24, r28
    392c:	01 96       	adiw	r24, 0x01	; 1
    392e:	0e 94 14 1c 	call	0x3828	; 0x3828 <_Z16si5351_read_bulkPhh>
    3932:	81 11       	cpse	r24, r1
    3934:	0d c0       	rjmp	.+26     	; 0x3950 <_Z16set_integer_mode12si5351_clockh+0x3e>
		{
			return;
		}
		
		reg_val = data[0];
    3936:	89 81       	ldd	r24, Y+1	; 0x01

		if(enable)
    3938:	00 23       	and	r16, r16
    393a:	11 f0       	breq	.+4      	; 0x3940 <_Z16set_integer_mode12si5351_clockh+0x2e>
		{
			reg_val |= (SI5351_CLK_INTEGER_MODE);
    393c:	80 64       	ori	r24, 0x40	; 64
    393e:	01 c0       	rjmp	.+2      	; 0x3942 <_Z16set_integer_mode12si5351_clockh+0x30>
		}
		else
		{
			reg_val &= ~(SI5351_CLK_INTEGER_MODE);
    3940:	8f 7b       	andi	r24, 0xBF	; 191
		}

		data[0] = SI5351_CLK0_CTRL + (uint8_t)clk;
    3942:	19 83       	std	Y+1, r17	; 0x01
		data[1] = reg_val;
    3944:	8a 83       	std	Y+2, r24	; 0x02
		si5351_write_bulk(data, 2);
    3946:	62 e0       	ldi	r22, 0x02	; 2
    3948:	ce 01       	movw	r24, r28
    394a:	01 96       	adiw	r24, 0x01	; 1
    394c:	0e 94 c9 1b 	call	0x3792	; 0x3792 <_Z17si5351_write_bulkPhh>
	}
    3950:	0f 90       	pop	r0
    3952:	0f 90       	pop	r0
    3954:	df 91       	pop	r29
    3956:	cf 91       	pop	r28
    3958:	1f 91       	pop	r17
    395a:	0f 91       	pop	r16
    395c:	08 95       	ret

0000395e <_Z6ms_div12si5351_clockhh>:


	void ms_div(Si5351_clock clk, uint8_t r_div, BOOL div_by_4)
	{
    395e:	ff 92       	push	r15
    3960:	0f 93       	push	r16
    3962:	1f 93       	push	r17
    3964:	cf 93       	push	r28
    3966:	df 93       	push	r29
    3968:	00 d0       	rcall	.+0      	; 0x396a <_Z6ms_div12si5351_clockhh+0xc>
    396a:	cd b7       	in	r28, 0x3d	; 61
    396c:	de b7       	in	r29, 0x3e	; 62
		uint8_t reg_val, reg_addr;
		uint8_t data[2];

		switch(clk)
    396e:	81 30       	cpi	r24, 0x01	; 1
    3970:	71 f0       	breq	.+28     	; 0x398e <_Z6ms_div12si5351_clockhh+0x30>
    3972:	18 f0       	brcs	.+6      	; 0x397a <_Z6ms_div12si5351_clockhh+0x1c>
    3974:	82 30       	cpi	r24, 0x02	; 2
    3976:	31 f0       	breq	.+12     	; 0x3984 <_Z6ms_div12si5351_clockhh+0x26>
    3978:	29 c0       	rjmp	.+82     	; 0x39cc <_Z6ms_div12si5351_clockhh+0x6e>
		{
			case SI5351_CLK0:
			{
				reg_addr = SI5351_CLK0_PARAMETERS + 2;
    397a:	0f 2e       	mov	r0, r31
    397c:	fc e2       	ldi	r31, 0x2C	; 44
    397e:	ff 2e       	mov	r15, r31
    3980:	f0 2d       	mov	r31, r0
    3982:	09 c0       	rjmp	.+18     	; 0x3996 <_Z6ms_div12si5351_clockhh+0x38>
			}
			break;

			case SI5351_CLK2:
			{
				reg_addr = SI5351_CLK2_PARAMETERS + 2;
    3984:	0f 2e       	mov	r0, r31
    3986:	fc e3       	ldi	r31, 0x3C	; 60
    3988:	ff 2e       	mov	r15, r31
    398a:	f0 2d       	mov	r31, r0
			}
			break;
    398c:	04 c0       	rjmp	.+8      	; 0x3996 <_Z6ms_div12si5351_clockhh+0x38>
			}
			break;

			case SI5351_CLK1:
			{
				reg_addr = SI5351_CLK1_PARAMETERS + 2;
    398e:	0f 2e       	mov	r0, r31
    3990:	f4 e3       	ldi	r31, 0x34	; 52
    3992:	ff 2e       	mov	r15, r31
    3994:	f0 2d       	mov	r31, r0
    3996:	04 2f       	mov	r16, r20
    3998:	16 2f       	mov	r17, r22

			default:
				return;
		}

		data[0] = reg_addr;
    399a:	f9 82       	std	Y+1, r15	; 0x01
		
		if(si5351_read_bulk(data, 1))
    399c:	61 e0       	ldi	r22, 0x01	; 1
    399e:	ce 01       	movw	r24, r28
    39a0:	01 96       	adiw	r24, 0x01	; 1
    39a2:	0e 94 14 1c 	call	0x3828	; 0x3828 <_Z16si5351_read_bulkPhh>
    39a6:	81 11       	cpse	r24, r1
    39a8:	11 c0       	rjmp	.+34     	; 0x39cc <_Z6ms_div12si5351_clockhh+0x6e>
		{
			return;
		}
		
		reg_val = data[0];
    39aa:	69 81       	ldd	r22, Y+1	; 0x01

		/* Clear the appropriate bits */
		reg_val &= ~(0x7c);
    39ac:	86 2f       	mov	r24, r22
    39ae:	83 78       	andi	r24, 0x83	; 131

		if(div_by_4)
    39b0:	01 11       	cpse	r16, r1
		{
			reg_val |= (SI5351_OUTPUT_CLK_DIVBY4);
    39b2:	8c 60       	ori	r24, 0x0C	; 12
		else
		{
			reg_val &= ~(SI5351_OUTPUT_CLK_DIVBY4);
		}

		reg_val |= (r_div << SI5351_OUTPUT_CLK_DIV_SHIFT);
    39b4:	90 e1       	ldi	r25, 0x10	; 16
    39b6:	19 9f       	mul	r17, r25
    39b8:	b0 01       	movw	r22, r0
    39ba:	11 24       	eor	r1, r1
    39bc:	68 2b       	or	r22, r24

		data[0] = reg_addr;
    39be:	f9 82       	std	Y+1, r15	; 0x01
		data[1] = reg_val;
    39c0:	6a 83       	std	Y+2, r22	; 0x02
		si5351_write_bulk(data, 2);
    39c2:	62 e0       	ldi	r22, 0x02	; 2
    39c4:	ce 01       	movw	r24, r28
    39c6:	01 96       	adiw	r24, 0x01	; 1
    39c8:	0e 94 c9 1b 	call	0x3792	; 0x3792 <_Z17si5351_write_bulkPhh>
	}
    39cc:	0f 90       	pop	r0
    39ce:	0f 90       	pop	r0
    39d0:	df 91       	pop	r29
    39d2:	cf 91       	pop	r28
    39d4:	1f 91       	pop	r17
    39d6:	0f 91       	pop	r16
    39d8:	ff 90       	pop	r15
    39da:	08 95       	ret

000039dc <_Z24set_multisynth_registers12si5351_clock13u_si5351_regshhh>:
 * r_div - Desired r_div ratio
 * div_by_4 - 1 Divide By 4 mode: 0 to disable
 *
 */
	void set_multisynth_registers(Si5351_clock clk, Union_si5351_regs ms_reg, BOOL int_mode, uint8_t r_div, BOOL div_by_4)
	{
    39dc:	8f 92       	push	r8
    39de:	af 92       	push	r10
    39e0:	cf 92       	push	r12
    39e2:	df 92       	push	r13
    39e4:	ef 92       	push	r14
    39e6:	ff 92       	push	r15
    39e8:	0f 93       	push	r16
    39ea:	1f 93       	push	r17
    39ec:	cf 93       	push	r28
    39ee:	df 93       	push	r29
    39f0:	cd b7       	in	r28, 0x3d	; 61
    39f2:	de b7       	in	r29, 0x3e	; 62
    39f4:	69 97       	sbiw	r28, 0x19	; 25
    39f6:	cd bf       	out	0x3d, r28	; 61
    39f8:	de bf       	out	0x3e, r29	; 62
    39fa:	f8 2e       	mov	r15, r24
    39fc:	ce 86       	std	Y+14, r12	; 0x0e
    39fe:	df 86       	std	Y+15, r13	; 0x0f
    3a00:	e8 8a       	std	Y+16, r14	; 0x10
    3a02:	0a 8b       	std	Y+18, r16	; 0x12
    3a04:	1b 8b       	std	Y+19, r17	; 0x13
    3a06:	2c 8b       	std	Y+20, r18	; 0x14
    3a08:	68 8f       	std	Y+24, r22	; 0x18
		uint8_t i = 1;
		uint8_t reg_val;
		uint8_t data[2];

		/* Registers 42-43 for CLK0; 50-51 for CLK1 */
		params[i++] = ms_reg.reg.p3_1;
    3a0a:	5a 83       	std	Y+2, r21	; 0x02
		params[i++] = ms_reg.reg.p3_0;
    3a0c:	4b 83       	std	Y+3, r20	; 0x03

		data[0] = (SI5351_CLK0_PARAMETERS + 2) + (clk * 8);
    3a0e:	88 0f       	add	r24, r24
    3a10:	88 0f       	add	r24, r24
    3a12:	88 0f       	add	r24, r24
    3a14:	84 5d       	subi	r24, 0xD4	; 212
    3a16:	8c 87       	std	Y+12, r24	; 0x0c
		/* Register 44 for CLK0; 52 for CLK1 */
		if(si5351_read_bulk(data, 1))
    3a18:	61 e0       	ldi	r22, 0x01	; 1
    3a1a:	ce 01       	movw	r24, r28
    3a1c:	0c 96       	adiw	r24, 0x0c	; 12
    3a1e:	0e 94 14 1c 	call	0x3828	; 0x3828 <_Z16si5351_read_bulkPhh>
    3a22:	81 11       	cpse	r24, r1
    3a24:	40 c0       	rjmp	.+128    	; 0x3aa6 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regshhh+0xca>
		{
			return;
		}
		
		reg_val = data[0];
    3a26:	8c 85       	ldd	r24, Y+12	; 0x0c

		reg_val &= 0xFC;    /*~(0x03); */
    3a28:	98 2f       	mov	r25, r24
    3a2a:	9c 7f       	andi	r25, 0xFC	; 252
		params[i++] = reg_val | (ms_reg.reg.p1_2 & 0x03);
    3a2c:	88 89       	ldd	r24, Y+16	; 0x10
    3a2e:	83 70       	andi	r24, 0x03	; 3
    3a30:	89 2b       	or	r24, r25
    3a32:	8c 83       	std	Y+4, r24	; 0x04

		/* Registers 45-46 for CLK0 */
		params[i++] = ms_reg.reg.p1_1;
    3a34:	8f 85       	ldd	r24, Y+15	; 0x0f
    3a36:	8d 83       	std	Y+5, r24	; 0x05
		params[i++] = ms_reg.reg.p1_0;
    3a38:	8e 85       	ldd	r24, Y+14	; 0x0e
    3a3a:	8e 83       	std	Y+6, r24	; 0x06

		/* Register 47 for CLK0 */
		params[i] = (ms_reg.reg.p3_2 << 4);
    3a3c:	98 8d       	ldd	r25, Y+24	; 0x18
		params[i++] += (ms_reg.reg.p2_2 & 0x0F);
    3a3e:	8c 89       	ldd	r24, Y+20	; 0x14
    3a40:	8f 70       	andi	r24, 0x0F	; 15
    3a42:	20 e1       	ldi	r18, 0x10	; 16
    3a44:	92 9f       	mul	r25, r18
    3a46:	80 0d       	add	r24, r0
    3a48:	11 24       	eor	r1, r1
    3a4a:	8f 83       	std	Y+7, r24	; 0x07

		/* Registers 48-49 for CLK0 */
		params[i++] = ms_reg.reg.p2_1;
    3a4c:	8b 89       	ldd	r24, Y+19	; 0x13
    3a4e:	88 87       	std	Y+8, r24	; 0x08
		params[i++] = ms_reg.reg.p2_0;
    3a50:	8a 89       	ldd	r24, Y+18	; 0x12
    3a52:	89 87       	std	Y+9, r24	; 0x09

		/* Write the parameters */
		switch(clk)
    3a54:	81 e0       	ldi	r24, 0x01	; 1
    3a56:	f8 16       	cp	r15, r24
    3a58:	71 f0       	breq	.+28     	; 0x3a76 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regshhh+0x9a>
    3a5a:	f8 16       	cp	r15, r24
    3a5c:	20 f0       	brcs	.+8      	; 0x3a66 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regshhh+0x8a>
    3a5e:	22 e0       	ldi	r18, 0x02	; 2
    3a60:	f2 16       	cp	r15, r18
    3a62:	89 f0       	breq	.+34     	; 0x3a86 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regshhh+0xaa>
    3a64:	17 c0       	rjmp	.+46     	; 0x3a94 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regshhh+0xb8>
		{
			case SI5351_CLK0:
			{
				params[0] = SI5351_CLK0_PARAMETERS;
    3a66:	8a e2       	ldi	r24, 0x2A	; 42
    3a68:	89 83       	std	Y+1, r24	; 0x01
				si5351_write_bulk(params, i);
    3a6a:	69 e0       	ldi	r22, 0x09	; 9
    3a6c:	ce 01       	movw	r24, r28
    3a6e:	01 96       	adiw	r24, 0x01	; 1
    3a70:	0e 94 c9 1b 	call	0x3792	; 0x3792 <_Z17si5351_write_bulkPhh>
			}
			break;
    3a74:	0f c0       	rjmp	.+30     	; 0x3a94 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regshhh+0xb8>

			case SI5351_CLK1:
			{
				params[0] = SI5351_CLK1_PARAMETERS;
    3a76:	82 e3       	ldi	r24, 0x32	; 50
    3a78:	89 83       	std	Y+1, r24	; 0x01
				si5351_write_bulk(params, i);
    3a7a:	69 e0       	ldi	r22, 0x09	; 9
    3a7c:	ce 01       	movw	r24, r28
    3a7e:	01 96       	adiw	r24, 0x01	; 1
    3a80:	0e 94 c9 1b 	call	0x3792	; 0x3792 <_Z17si5351_write_bulkPhh>
			}
			break;
    3a84:	07 c0       	rjmp	.+14     	; 0x3a94 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regshhh+0xb8>

			case SI5351_CLK2:
			{
				params[0] = SI5351_CLK2_PARAMETERS;
    3a86:	8a e3       	ldi	r24, 0x3A	; 58
    3a88:	89 83       	std	Y+1, r24	; 0x01
				si5351_write_bulk(params, i);
    3a8a:	69 e0       	ldi	r22, 0x09	; 9
    3a8c:	ce 01       	movw	r24, r28
    3a8e:	01 96       	adiw	r24, 0x01	; 1
    3a90:	0e 94 c9 1b 	call	0x3792	; 0x3792 <_Z17si5351_write_bulkPhh>
			{
			}
			break;
		}

		set_integer_mode(clk, int_mode);
    3a94:	6a 2d       	mov	r22, r10
    3a96:	8f 2d       	mov	r24, r15
    3a98:	0e 94 89 1c 	call	0x3912	; 0x3912 <_Z16set_integer_mode12si5351_clockh>
		ms_div(clk, r_div, div_by_4);
    3a9c:	4e a1       	ldd	r20, Y+38	; 0x26
    3a9e:	68 2d       	mov	r22, r8
    3aa0:	8f 2d       	mov	r24, r15
    3aa2:	0e 94 af 1c 	call	0x395e	; 0x395e <_Z6ms_div12si5351_clockhh>
	}
    3aa6:	69 96       	adiw	r28, 0x19	; 25
    3aa8:	cd bf       	out	0x3d, r28	; 61
    3aaa:	de bf       	out	0x3e, r29	; 62
    3aac:	df 91       	pop	r29
    3aae:	cf 91       	pop	r28
    3ab0:	1f 91       	pop	r17
    3ab2:	0f 91       	pop	r16
    3ab4:	ff 90       	pop	r15
    3ab6:	ef 90       	pop	r14
    3ab8:	df 90       	pop	r13
    3aba:	cf 90       	pop	r12
    3abc:	af 90       	pop	r10
    3abe:	8f 90       	pop	r8
    3ac0:	08 95       	ret

00003ac2 <_Z15si5351_set_freqm12si5351_clockh>:
 *
 * Returns TRUE on failure
 *
 */
	BOOL si5351_set_freq(Frequency_Hz freq_Fout, Si5351_clock clk, BOOL clocksOff)
	{
    3ac2:	2f 92       	push	r2
    3ac4:	3f 92       	push	r3
    3ac6:	4f 92       	push	r4
    3ac8:	5f 92       	push	r5
    3aca:	6f 92       	push	r6
    3acc:	7f 92       	push	r7
    3ace:	8f 92       	push	r8
    3ad0:	9f 92       	push	r9
    3ad2:	af 92       	push	r10
    3ad4:	bf 92       	push	r11
    3ad6:	cf 92       	push	r12
    3ad8:	df 92       	push	r13
    3ada:	ef 92       	push	r14
    3adc:	ff 92       	push	r15
    3ade:	0f 93       	push	r16
    3ae0:	1f 93       	push	r17
    3ae2:	cf 93       	push	r28
    3ae4:	df 93       	push	r29
    3ae6:	cd b7       	in	r28, 0x3d	; 61
    3ae8:	de b7       	in	r29, 0x3e	; 62
    3aea:	60 97       	sbiw	r28, 0x10	; 16
    3aec:	cd bf       	out	0x3d, r28	; 61
    3aee:	de bf       	out	0x3e, r29	; 62
    3af0:	6b 01       	movw	r12, r22
    3af2:	7c 01       	movw	r14, r24
    3af4:	b4 2e       	mov	r11, r20
    3af6:	72 2e       	mov	r7, r18
		Union_si5351_regs ms_reg;
		Frequency_Hz freq_VCO = 0;
		Si5351_pll target_pll;
		uint8_t clock_ctrl_addr;
		uint8_t r_div = SI5351_OUTPUT_CLK_DIV_1;
		BOOL int_mode = FALSE;
    3af8:	1d 86       	std	Y+13, r1	; 0x0d
		BOOL div_by_4 = FALSE;
    3afa:	1e 86       	std	Y+14, r1	; 0x0e
#endif

#ifdef PREVENT_UNACHIEVABLE_FREQUENCIES
			/* Prevent unachievable frequencies from being entered. The Si5351 will accept these, but some may result */
			/* in no clock output. */
			if(freq_Fout > 999999)
    3afc:	80 e4       	ldi	r24, 0x40	; 64
    3afe:	c8 16       	cp	r12, r24
    3b00:	82 e4       	ldi	r24, 0x42	; 66
    3b02:	d8 06       	cpc	r13, r24
    3b04:	8f e0       	ldi	r24, 0x0F	; 15
    3b06:	e8 06       	cpc	r14, r24
    3b08:	f1 04       	cpc	r15, r1
    3b0a:	70 f0       	brcs	.+28     	; 0x3b28 <_Z15si5351_set_freqm12si5351_clockh+0x66>
			{
				freq_Fout /= 100;
    3b0c:	c7 01       	movw	r24, r14
    3b0e:	b6 01       	movw	r22, r12
    3b10:	24 e6       	ldi	r18, 0x64	; 100
    3b12:	30 e0       	ldi	r19, 0x00	; 0
    3b14:	40 e0       	ldi	r20, 0x00	; 0
    3b16:	50 e0       	ldi	r21, 0x00	; 0
    3b18:	0e 94 32 24 	call	0x4864	; 0x4864 <__udivmodsi4>
				freq_Fout *= 100;
    3b1c:	a4 e6       	ldi	r26, 0x64	; 100
    3b1e:	b0 e0       	ldi	r27, 0x00	; 0
    3b20:	0e 94 92 24 	call	0x4924	; 0x4924 <__muluhisi3>
    3b24:	6b 01       	movw	r12, r22
    3b26:	7c 01       	movw	r14, r24
		/* Determine which PLL to use: CLK0 gets PLLA, CLK1 and CLK2 get PLLB */
		/* The first of CLK1 or CLK2 to be configured, determines the VCO frequency used for PLLB. */
		/* The second of CLK1 or CLK2 to be configured will attempt to achieve Fout by adjusting the */
		/* Multisynth Divider values only. */
		/* Only good for Si5351A3 variant */
		switch(clk)
    3b28:	81 e0       	ldi	r24, 0x01	; 1
    3b2a:	b8 16       	cp	r11, r24
    3b2c:	c9 f0       	breq	.+50     	; 0x3b60 <_Z15si5351_set_freqm12si5351_clockh+0x9e>
    3b2e:	b8 16       	cp	r11, r24
    3b30:	20 f0       	brcs	.+8      	; 0x3b3a <_Z15si5351_set_freqm12si5351_clockh+0x78>
    3b32:	82 e0       	ldi	r24, 0x02	; 2
    3b34:	b8 16       	cp	r11, r24
    3b36:	99 f1       	breq	.+102    	; 0x3b9e <_Z15si5351_set_freqm12si5351_clockh+0xdc>
    3b38:	e9 c0       	rjmp	.+466    	; 0x3d0c <_Z15si5351_set_freqm12si5351_clockh+0x24a>
		{
			case SI5351_CLK0:
			{
				enabledClocksMask |= 0x01;
    3b3a:	80 91 6f 44 	lds	r24, 0x446F	; 0x80446f <_ZL17enabledClocksMask>
    3b3e:	81 60       	ori	r24, 0x01	; 1
    3b40:	80 93 6f 44 	sts	0x446F, r24	; 0x80446f <_ZL17enabledClocksMask>
// 				data[0] = 3;
// 				data[1] = ~enabledClocksMask | 0xF9;
/*			si5351_write_bulk(data, 2); // only disable CLK0 */

				target_pll = SI5351_PLLA;
				clock_out[SI5351_CLK0] = freq_Fout; /* store the value for reference */
    3b44:	c0 92 63 44 	sts	0x4463, r12	; 0x804463 <_ZL9clock_out>
    3b48:	d0 92 64 44 	sts	0x4464, r13	; 0x804464 <_ZL9clock_out+0x1>
    3b4c:	e0 92 65 44 	sts	0x4465, r14	; 0x804465 <_ZL9clock_out+0x2>
    3b50:	f0 92 66 44 	sts	0x4466, r15	; 0x804466 <_ZL9clock_out+0x3>
		switch(clk)
		{
			case SI5351_CLK0:
			{
				enabledClocksMask |= 0x01;
				clock_ctrl_addr = 16;
    3b54:	68 94       	set
    3b56:	66 24       	eor	r6, r6
    3b58:	64 f8       	bld	r6, 4
				/* Set CLKx_DIS high; Reg. 3 = 0xFF */
// 				data[0] = 3;
// 				data[1] = ~enabledClocksMask | 0xF9;
/*			si5351_write_bulk(data, 2); // only disable CLK0 */

				target_pll = SI5351_PLLA;
    3b5a:	99 24       	eor	r9, r9
    3b5c:	93 94       	inc	r9
				clock_out[SI5351_CLK0] = freq_Fout; /* store the value for reference */
			}
			break;
    3b5e:	3d c0       	rjmp	.+122    	; 0x3bda <_Z15si5351_set_freqm12si5351_clockh+0x118>
			case SI5351_CLK1:
			{
				/* No checking is performed to ensure that PLLB is not unavailable due to other output being < 1.024 MHz or >= 112.5 MHz */
				/* User must ensure the clock design is valid before setting clocks */

				enabledClocksMask |= 0x02;
    3b60:	80 91 6f 44 	lds	r24, 0x446F	; 0x80446f <_ZL17enabledClocksMask>
    3b64:	82 60       	ori	r24, 0x02	; 2
    3b66:	80 93 6f 44 	sts	0x446F, r24	; 0x80446f <_ZL17enabledClocksMask>
				clock_ctrl_addr = 17;

				/* Block 1: Disable Outputs */
				/* Set CLKx_DIS high; Reg. 3 = 0xFF */
 				data[0] = 3;
    3b6a:	93 e0       	ldi	r25, 0x03	; 3
    3b6c:	9f 87       	std	Y+15, r25	; 0x0f
 				data[1] = ~enabledClocksMask | 0xFA;
    3b6e:	80 95       	com	r24
    3b70:	8a 6f       	ori	r24, 0xFA	; 250
    3b72:	88 8b       	std	Y+16, r24	; 0x10
				si5351_write_bulk(data, 2); /* only disable CLK1 */
    3b74:	62 e0       	ldi	r22, 0x02	; 2
    3b76:	ce 01       	movw	r24, r28
    3b78:	0f 96       	adiw	r24, 0x0f	; 15
    3b7a:	0e 94 c9 1b 	call	0x3792	; 0x3792 <_Z17si5351_write_bulkPhh>

				target_pll = SI5351_PLLB;
				clock_out[SI5351_CLK1] = freq_Fout;         /* store the value for reference */
    3b7e:	c0 92 67 44 	sts	0x4467, r12	; 0x804467 <_ZL9clock_out+0x4>
    3b82:	d0 92 68 44 	sts	0x4468, r13	; 0x804468 <_ZL9clock_out+0x5>
    3b86:	e0 92 69 44 	sts	0x4469, r14	; 0x804469 <_ZL9clock_out+0x6>
    3b8a:	f0 92 6a 44 	sts	0x446A, r15	; 0x80446a <_ZL9clock_out+0x7>
			{
				/* No checking is performed to ensure that PLLB is not unavailable due to other output being < 1.024 MHz or >= 112.5 MHz */
				/* User must ensure the clock design is valid before setting clocks */

				enabledClocksMask |= 0x02;
				clock_ctrl_addr = 17;
    3b8e:	0f 2e       	mov	r0, r31
    3b90:	f1 e1       	ldi	r31, 0x11	; 17
    3b92:	6f 2e       	mov	r6, r31
    3b94:	f0 2d       	mov	r31, r0
				/* Set CLKx_DIS high; Reg. 3 = 0xFF */
 				data[0] = 3;
 				data[1] = ~enabledClocksMask | 0xFA;
				si5351_write_bulk(data, 2); /* only disable CLK1 */

				target_pll = SI5351_PLLB;
    3b96:	68 94       	set
    3b98:	99 24       	eor	r9, r9
    3b9a:	91 f8       	bld	r9, 1
				clock_out[SI5351_CLK1] = freq_Fout;         /* store the value for reference */
			}
			break;
    3b9c:	1e c0       	rjmp	.+60     	; 0x3bda <_Z15si5351_set_freqm12si5351_clockh+0x118>
			case SI5351_CLK2:
			{
				/* No checking is performed to ensure that PLLB is not unavailable due to other output being < 1.024 MHz or >= 112.5 MHz */
				/* User must ensure the clock design is valid before setting clocks */

				enabledClocksMask |= 0x04;
    3b9e:	80 91 6f 44 	lds	r24, 0x446F	; 0x80446f <_ZL17enabledClocksMask>
    3ba2:	84 60       	ori	r24, 0x04	; 4
    3ba4:	80 93 6f 44 	sts	0x446F, r24	; 0x80446f <_ZL17enabledClocksMask>
				clock_ctrl_addr = 18;

				/* Block 1: Disable Outputs */
				/* Set CLKx_DIS high; Reg. 3 = 0xFF */
 				data[0] = 3;
    3ba8:	93 e0       	ldi	r25, 0x03	; 3
    3baa:	9f 87       	std	Y+15, r25	; 0x0f
 				data[1] = ~enabledClocksMask | 0xFC; /* only disable CLK2 */
    3bac:	80 95       	com	r24
    3bae:	8c 6f       	ori	r24, 0xFC	; 252
    3bb0:	88 8b       	std	Y+16, r24	; 0x10
 				si5351_write_bulk(data, 2); /* only disable CLK1 */
    3bb2:	62 e0       	ldi	r22, 0x02	; 2
    3bb4:	ce 01       	movw	r24, r28
    3bb6:	0f 96       	adiw	r24, 0x0f	; 15
    3bb8:	0e 94 c9 1b 	call	0x3792	; 0x3792 <_Z17si5351_write_bulkPhh>

				target_pll = SI5351_PLLB;
				clock_out[SI5351_CLK2] = freq_Fout;         /* store the value for reference */
    3bbc:	c0 92 6b 44 	sts	0x446B, r12	; 0x80446b <_ZL9clock_out+0x8>
    3bc0:	d0 92 6c 44 	sts	0x446C, r13	; 0x80446c <_ZL9clock_out+0x9>
    3bc4:	e0 92 6d 44 	sts	0x446D, r14	; 0x80446d <_ZL9clock_out+0xa>
    3bc8:	f0 92 6e 44 	sts	0x446E, r15	; 0x80446e <_ZL9clock_out+0xb>
			{
				/* No checking is performed to ensure that PLLB is not unavailable due to other output being < 1.024 MHz or >= 112.5 MHz */
				/* User must ensure the clock design is valid before setting clocks */

				enabledClocksMask |= 0x04;
				clock_ctrl_addr = 18;
    3bcc:	0f 2e       	mov	r0, r31
    3bce:	f2 e1       	ldi	r31, 0x12	; 18
    3bd0:	6f 2e       	mov	r6, r31
    3bd2:	f0 2d       	mov	r31, r0
				/* Set CLKx_DIS high; Reg. 3 = 0xFF */
 				data[0] = 3;
 				data[1] = ~enabledClocksMask | 0xFC; /* only disable CLK2 */
 				si5351_write_bulk(data, 2); /* only disable CLK1 */

				target_pll = SI5351_PLLB;
    3bd4:	68 94       	set
    3bd6:	99 24       	eor	r9, r9
    3bd8:	91 f8       	bld	r9, 1
			Frequency_Hz freq_VCO_calc;
			Frequency_Hz fout_calc;
			int32_t f_err;
#endif

		if((target_pll == SI5351_PLLA) || !freqVCOB)
    3bda:	81 e0       	ldi	r24, 0x01	; 1
    3bdc:	98 16       	cp	r9, r24
    3bde:	61 f0       	breq	.+24     	; 0x3bf8 <_Z15si5351_set_freqm12si5351_clockh+0x136>
    3be0:	80 91 70 44 	lds	r24, 0x4470	; 0x804470 <_ZL8freqVCOB>
    3be4:	90 91 71 44 	lds	r25, 0x4471	; 0x804471 <_ZL8freqVCOB+0x1>
    3be8:	a0 91 72 44 	lds	r26, 0x4472	; 0x804472 <_ZL8freqVCOB+0x2>
    3bec:	b0 91 73 44 	lds	r27, 0x4473	; 0x804473 <_ZL8freqVCOB+0x3>
    3bf0:	89 2b       	or	r24, r25
    3bf2:	8a 2b       	or	r24, r26
    3bf4:	8b 2b       	or	r24, r27
    3bf6:	81 f4       	brne	.+32     	; 0x3c18 <_Z15si5351_set_freqm12si5351_clockh+0x156>
		{
#ifdef DEBUGGING_ONLY
				freq_VCO = multisynth_calc(freq_Fout, &ms_reg, &int_mode, &div_by_4, &div);
#else
				freq_VCO = multisynth_calc(freq_Fout, &ms_reg, &int_mode, &div_by_4);
    3bf8:	8e 01       	movw	r16, r28
    3bfa:	02 5f       	subi	r16, 0xF2	; 242
    3bfc:	1f 4f       	sbci	r17, 0xFF	; 255
    3bfe:	9e 01       	movw	r18, r28
    3c00:	23 5f       	subi	r18, 0xF3	; 243
    3c02:	3f 4f       	sbci	r19, 0xFF	; 255
    3c04:	ae 01       	movw	r20, r28
    3c06:	4f 5f       	subi	r20, 0xFF	; 255
    3c08:	5f 4f       	sbci	r21, 0xFF	; 255
    3c0a:	c7 01       	movw	r24, r14
    3c0c:	b6 01       	movw	r22, r12
    3c0e:	0e 94 d1 19 	call	0x33a2	; 0x33a2 <_Z15multisynth_calcmP13u_si5351_regsPhS1_>
    3c12:	1b 01       	movw	r2, r22
    3c14:	2c 01       	movw	r4, r24
    3c16:	10 c0       	rjmp	.+32     	; 0x3c38 <_Z15si5351_set_freqm12si5351_clockh+0x176>
		else
		{
#ifdef DEBUGGING_ONLY
				fout_calc = freq_Fout;  /* save the intended output frequency */
#endif
			freq_Fout = multisynth_estimate(freq_Fout, &ms_reg, &int_mode, &div_by_4);
    3c18:	8e 01       	movw	r16, r28
    3c1a:	02 5f       	subi	r16, 0xF2	; 242
    3c1c:	1f 4f       	sbci	r17, 0xFF	; 255
    3c1e:	9e 01       	movw	r18, r28
    3c20:	23 5f       	subi	r18, 0xF3	; 243
    3c22:	3f 4f       	sbci	r19, 0xFF	; 255
    3c24:	ae 01       	movw	r20, r28
    3c26:	4f 5f       	subi	r20, 0xFF	; 255
    3c28:	5f 4f       	sbci	r21, 0xFF	; 255
    3c2a:	c7 01       	movw	r24, r14
    3c2c:	b6 01       	movw	r22, r12
    3c2e:	0e 94 a3 1a 	call	0x3546	; 0x3546 <_Z19multisynth_estimatemP13u_si5351_regsPhS1_>
 *
 */
	BOOL si5351_set_freq(Frequency_Hz freq_Fout, Si5351_clock clk, BOOL clocksOff)
	{
		Union_si5351_regs ms_reg;
		Frequency_Hz freq_VCO = 0;
    3c32:	21 2c       	mov	r2, r1
    3c34:	31 2c       	mov	r3, r1
    3c36:	21 01       	movw	r4, r2
#endif
			freq_Fout = multisynth_estimate(freq_Fout, &ms_reg, &int_mode, &div_by_4);
		}

		/* Set multisynth registers (MS must be set before PLL) */
		set_multisynth_registers_source(clk, target_pll);
    3c38:	69 2d       	mov	r22, r9
    3c3a:	8b 2d       	mov	r24, r11
    3c3c:	0e 94 61 1c 	call	0x38c2	; 0x38c2 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll>
		set_multisynth_registers(clk, ms_reg, int_mode, r_div, div_by_4);
    3c40:	8e 85       	ldd	r24, Y+14	; 0x0e
    3c42:	8f 93       	push	r24
    3c44:	81 2c       	mov	r8, r1
    3c46:	ad 84       	ldd	r10, Y+13	; 0x0d
    3c48:	c9 80       	ldd	r12, Y+1	; 0x01
    3c4a:	da 80       	ldd	r13, Y+2	; 0x02
    3c4c:	eb 80       	ldd	r14, Y+3	; 0x03
    3c4e:	fc 80       	ldd	r15, Y+4	; 0x04
    3c50:	0d 81       	ldd	r16, Y+5	; 0x05
    3c52:	1e 81       	ldd	r17, Y+6	; 0x06
    3c54:	2f 81       	ldd	r18, Y+7	; 0x07
    3c56:	38 85       	ldd	r19, Y+8	; 0x08
    3c58:	49 85       	ldd	r20, Y+9	; 0x09
    3c5a:	5a 85       	ldd	r21, Y+10	; 0x0a
    3c5c:	6b 85       	ldd	r22, Y+11	; 0x0b
    3c5e:	7c 85       	ldd	r23, Y+12	; 0x0c
    3c60:	8b 2d       	mov	r24, r11
    3c62:	0e 94 ee 1c 	call	0x39dc	; 0x39dc <_Z24set_multisynth_registers12si5351_clock13u_si5351_regshhh>
				fout_calc = freq_VCO_calc / div;
			}

			f_err = freq_Fout - fout_calc;
#else
			if(freq_VCO)
    3c66:	0f 90       	pop	r0
    3c68:	21 14       	cp	r2, r1
    3c6a:	31 04       	cpc	r3, r1
    3c6c:	41 04       	cpc	r4, r1
    3c6e:	51 04       	cpc	r5, r1
    3c70:	29 f0       	breq	.+10     	; 0x3c7c <_Z15si5351_set_freqm12si5351_clockh+0x1ba>
			{
				set_pll(freq_VCO, target_pll);
    3c72:	49 2d       	mov	r20, r9
    3c74:	c2 01       	movw	r24, r4
    3c76:	b1 01       	movw	r22, r2
    3c78:	0e 94 d7 1b 	call	0x37ae	; 0x37ae <_Z7set_pllm10si5351_pll>
/*	pll_reset(target_pll); */

		/* Block 6: */
		/* Enable desired outputs */
		/* (see Register 3) */
		if(clocksOff)
    3c7c:	77 20       	and	r7, r7
    3c7e:	59 f0       	breq	.+22     	; 0x3c96 <_Z15si5351_set_freqm12si5351_clockh+0x1d4>
		{
 			data[0] = 3;
    3c80:	83 e0       	ldi	r24, 0x03	; 3
    3c82:	8f 87       	std	Y+15, r24	; 0x0f
 			data[1] = enabledClocksMask;
    3c84:	80 91 6f 44 	lds	r24, 0x446F	; 0x80446f <_ZL17enabledClocksMask>
    3c88:	88 8b       	std	Y+16, r24	; 0x10
			si5351_write_bulk(data, 2);    /* disable clock(s) in use */
    3c8a:	62 e0       	ldi	r22, 0x02	; 2
    3c8c:	ce 01       	movw	r24, r28
    3c8e:	0f 96       	adiw	r24, 0x0f	; 15
    3c90:	0e 94 c9 1b 	call	0x3792	; 0x3792 <_Z17si5351_write_bulkPhh>
    3c94:	0b c0       	rjmp	.+22     	; 0x3cac <_Z15si5351_set_freqm12si5351_clockh+0x1ea>
		}
		else
		{
 			data[0] = 3;
    3c96:	83 e0       	ldi	r24, 0x03	; 3
    3c98:	8f 87       	std	Y+15, r24	; 0x0f
 			data[1] = ~enabledClocksMask;
    3c9a:	80 91 6f 44 	lds	r24, 0x446F	; 0x80446f <_ZL17enabledClocksMask>
    3c9e:	80 95       	com	r24
    3ca0:	88 8b       	std	Y+16, r24	; 0x10
 			si5351_write_bulk(data, 2);  /* only enable clock(s) in use */
    3ca2:	62 e0       	ldi	r22, 0x02	; 2
    3ca4:	ce 01       	movw	r24, r28
    3ca6:	0f 96       	adiw	r24, 0x0f	; 15
    3ca8:	0e 94 c9 1b 	call	0x3792	; 0x3792 <_Z17si5351_write_bulkPhh>
		}

		/* power up the clock */
		if(target_pll == SI5351_PLLA)
    3cac:	81 e0       	ldi	r24, 0x01	; 1
    3cae:	98 12       	cpse	r9, r24
    3cb0:	0a c0       	rjmp	.+20     	; 0x3cc6 <_Z15si5351_set_freqm12si5351_clockh+0x204>
		{
 			data[0] = clock_ctrl_addr;
    3cb2:	6f 86       	std	Y+15, r6	; 0x0f
 			data[1] = 0x4C;
    3cb4:	8c e4       	ldi	r24, 0x4C	; 76
    3cb6:	88 8b       	std	Y+16, r24	; 0x10
 			si5351_write_bulk(data, 2);  /* power up only clock being set, leaving that clock configured as follows: */
    3cb8:	62 e0       	ldi	r22, 0x02	; 2
    3cba:	ce 01       	movw	r24, r28
    3cbc:	0f 96       	adiw	r24, 0x0f	; 15
    3cbe:	0e 94 c9 1b 	call	0x3792	; 0x3792 <_Z17si5351_write_bulkPhh>
			{
				freqVCOB = freq_VCO;
			}
		}

		return(FALSE);
    3cc2:	80 e0       	ldi	r24, 0x00	; 0
    3cc4:	26 c0       	rjmp	.+76     	; 0x3d12 <_Z15si5351_set_freqm12si5351_clockh+0x250>
			/*   o Integer mode set */
			/*   o Clock powered up */
		}
		else
		{
			if(int_mode)
    3cc6:	8d 85       	ldd	r24, Y+13	; 0x0d
    3cc8:	88 23       	and	r24, r24
    3cca:	49 f0       	breq	.+18     	; 0x3cde <_Z15si5351_set_freqm12si5351_clockh+0x21c>
			{
 				data[0] = clock_ctrl_addr;
    3ccc:	6f 86       	std	Y+15, r6	; 0x0f
 				data[1] = 0x6C;
    3cce:	8c e6       	ldi	r24, 0x6C	; 108
    3cd0:	88 8b       	std	Y+16, r24	; 0x10
 				si5351_write_bulk(data, 2);  /* power up only clock being set, leaving that clock configured as follows: */
    3cd2:	62 e0       	ldi	r22, 0x02	; 2
    3cd4:	ce 01       	movw	r24, r28
    3cd6:	0f 96       	adiw	r24, 0x0f	; 15
    3cd8:	0e 94 c9 1b 	call	0x3792	; 0x3792 <_Z17si5351_write_bulkPhh>
    3cdc:	08 c0       	rjmp	.+16     	; 0x3cee <_Z15si5351_set_freqm12si5351_clockh+0x22c>
				/*   o Integer mode set */
				/*   o Clock powered up */
			}
			else
			{
 				data[0] = clock_ctrl_addr;
    3cde:	6f 86       	std	Y+15, r6	; 0x0f
 				data[1] = 0x2C;
    3ce0:	8c e2       	ldi	r24, 0x2C	; 44
    3ce2:	88 8b       	std	Y+16, r24	; 0x10
 				si5351_write_bulk(data, 2);  /* power up only clock being set, leaving that clock configured as follows: */
    3ce4:	62 e0       	ldi	r22, 0x02	; 2
    3ce6:	ce 01       	movw	r24, r28
    3ce8:	0f 96       	adiw	r24, 0x0f	; 15
    3cea:	0e 94 c9 1b 	call	0x3792	; 0x3792 <_Z17si5351_write_bulkPhh>
				/*   o PLLB is multisynth source */
				/*   o Integer mode cleared */
				/*   o Clock powered up */
			}

			if(freq_VCO)
    3cee:	21 14       	cp	r2, r1
    3cf0:	31 04       	cpc	r3, r1
    3cf2:	41 04       	cpc	r4, r1
    3cf4:	51 04       	cpc	r5, r1
    3cf6:	61 f0       	breq	.+24     	; 0x3d10 <_Z15si5351_set_freqm12si5351_clockh+0x24e>
			{
				freqVCOB = freq_VCO;
    3cf8:	20 92 70 44 	sts	0x4470, r2	; 0x804470 <_ZL8freqVCOB>
    3cfc:	30 92 71 44 	sts	0x4471, r3	; 0x804471 <_ZL8freqVCOB+0x1>
    3d00:	40 92 72 44 	sts	0x4472, r4	; 0x804472 <_ZL8freqVCOB+0x2>
    3d04:	50 92 73 44 	sts	0x4473, r5	; 0x804473 <_ZL8freqVCOB+0x3>
			}
		}

		return(FALSE);
    3d08:	80 e0       	ldi	r24, 0x00	; 0
    3d0a:	03 c0       	rjmp	.+6      	; 0x3d12 <_Z15si5351_set_freqm12si5351_clockh+0x250>
			}
			break;

			default:
			{
				return(TRUE);
    3d0c:	81 e0       	ldi	r24, 0x01	; 1
    3d0e:	01 c0       	rjmp	.+2      	; 0x3d12 <_Z15si5351_set_freqm12si5351_clockh+0x250>
			{
				freqVCOB = freq_VCO;
			}
		}

		return(FALSE);
    3d10:	80 e0       	ldi	r24, 0x00	; 0
	}
    3d12:	60 96       	adiw	r28, 0x10	; 16
    3d14:	cd bf       	out	0x3d, r28	; 61
    3d16:	de bf       	out	0x3e, r29	; 62
    3d18:	df 91       	pop	r29
    3d1a:	cf 91       	pop	r28
    3d1c:	1f 91       	pop	r17
    3d1e:	0f 91       	pop	r16
    3d20:	ff 90       	pop	r15
    3d22:	ef 90       	pop	r14
    3d24:	df 90       	pop	r13
    3d26:	cf 90       	pop	r12
    3d28:	bf 90       	pop	r11
    3d2a:	af 90       	pop	r10
    3d2c:	9f 90       	pop	r9
    3d2e:	8f 90       	pop	r8
    3d30:	7f 90       	pop	r7
    3d32:	6f 90       	pop	r6
    3d34:	5f 90       	pop	r5
    3d36:	4f 90       	pop	r4
    3d38:	3f 90       	pop	r3
    3d3a:	2f 90       	pop	r2
    3d3c:	08 95       	ret

00003d3e <SLPCTRL_init>:

	// SLPCTRL.CTRLA = 0 << SLPCTRL_SEN_bp /* Sleep enable: disabled */
	//		 | SLPCTRL_SMODE_IDLE_gc; /* Idle mode */

	return 0;
}
    3d3e:	80 e0       	ldi	r24, 0x00	; 0
    3d40:	08 95       	ret

00003d42 <TIMERB_init>:
 * \return Initialization status.
 */
int8_t TIMERB_init()
{
TCB0.INTCTRL = 1 << TCB_CAPT_bp   /* Capture or Timeout: enabled */
| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    3d42:	e0 e0       	ldi	r30, 0x00	; 0
    3d44:	fb e0       	ldi	r31, 0x0B	; 11
    3d46:	81 e0       	ldi	r24, 0x01	; 1
    3d48:	85 83       	std	Z+5, r24	; 0x05

// Set TOP
TCB0.CCMP = 0x9C40;
    3d4a:	20 e4       	ldi	r18, 0x40	; 64
    3d4c:	3c e9       	ldi	r19, 0x9C	; 156
    3d4e:	24 87       	std	Z+12, r18	; 0x0c
    3d50:	35 87       	std	Z+13, r19	; 0x0d

TCB0.CTRLA = TCB_CLKSEL_DIV2_gc     /* CLK_PER */
| 1 << TCB_ENABLE_bp   /* Enable: enabled */
| 0 << TCB_RUNSTDBY_bp /* Run Standby: disabled */
| 0 << TCB_SYNCUPD_bp  /* Synchronize Update: disabled */
| 0 << TCB_CASCADE_bp; /* Cascade Two Timer/Counters: disabled */
    3d52:	93 e0       	ldi	r25, 0x03	; 3
    3d54:	90 83       	st	Z, r25

TCB0.INTFLAGS = TCB_CAPT_bm; /* Clear flag */
    3d56:	86 83       	std	Z+6, r24	; 0x06

/********************************************************************************/

TCB1.INTCTRL = 1 << TCB_CAPT_bp   /* Capture or Timeout: enabled */
| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    3d58:	e0 e1       	ldi	r30, 0x10	; 16
    3d5a:	fb e0       	ldi	r31, 0x0B	; 11
    3d5c:	85 83       	std	Z+5, r24	; 0x05

// Set TOP
TCB1.CCMP = 0x5DC0;
    3d5e:	40 ec       	ldi	r20, 0xC0	; 192
    3d60:	5d e5       	ldi	r21, 0x5D	; 93
    3d62:	44 87       	std	Z+12, r20	; 0x0c
    3d64:	55 87       	std	Z+13, r21	; 0x0d

TCB1.CTRLA = TCB_CLKSEL_DIV1_gc     /* CLK_PER */
| 1 << TCB_ENABLE_bp   /* Enable: enabled */
| 0 << TCB_RUNSTDBY_bp /* Run Standby: disabled */
| 0 << TCB_SYNCUPD_bp  /* Synchronize Update: disabled */
| 0 << TCB_CASCADE_bp; /* Cascade Two Timer/Counters: disabled */
    3d66:	80 83       	st	Z, r24

TCB1.INTFLAGS = TCB_CAPT_bm; /* Clear flag */
    3d68:	86 83       	std	Z+6, r24	; 0x06


/********************************************************************************/

TCB3.INTCTRL = 1 << TCB_CAPT_bp   /* Capture or Timeout: enabled */
| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    3d6a:	e0 e3       	ldi	r30, 0x30	; 48
    3d6c:	fb e0       	ldi	r31, 0x0B	; 11
    3d6e:	85 83       	std	Z+5, r24	; 0x05

// Set TOP
TCB3.CCMP = 0x9C40;
    3d70:	24 87       	std	Z+12, r18	; 0x0c
    3d72:	35 87       	std	Z+13, r19	; 0x0d

TCB3.CTRLA = TCB_CLKSEL_DIV2_gc     /* CLK_PER */
| 1 << TCB_ENABLE_bp   /* Enable: enabled */
| 0 << TCB_RUNSTDBY_bp /* Run Standby: disabled */
| 0 << TCB_SYNCUPD_bp  /* Synchronize Update: disabled */
| 0 << TCB_CASCADE_bp; /* Cascade Two Timer/Counters: disabled */
    3d74:	90 83       	st	Z, r25

TCB3.INTFLAGS = TCB_CAPT_bm; /* Clear flag */
    3d76:	86 83       	std	Z+6, r24	; 0x06

	return 0;
}
    3d78:	80 e0       	ldi	r24, 0x00	; 0
    3d7a:	08 95       	ret

00003d7c <util_delay_ms>:


bool util_delay_ms(uint32_t delayValue)
{
    3d7c:	0f 93       	push	r16
    3d7e:	1f 93       	push	r17
	static uint32_t countdownValue=0;
	static bool counting = false;
	
	if(delayValue)
    3d80:	61 15       	cp	r22, r1
    3d82:	71 05       	cpc	r23, r1
    3d84:	81 05       	cpc	r24, r1
    3d86:	91 05       	cpc	r25, r1
    3d88:	09 f4       	brne	.+2      	; 0x3d8c <util_delay_ms+0x10>
    3d8a:	67 c0       	rjmp	.+206    	; 0x3e5a <util_delay_ms+0xde>
	{
		if(counting)
    3d8c:	20 91 7c 44 	lds	r18, 0x447C	; 0x80447c <_ZZ13util_delay_msE8counting>
    3d90:	22 23       	and	r18, r18
    3d92:	f1 f1       	breq	.+124    	; 0x3e10 <util_delay_ms+0x94>
		{
			if(!g_ms_counter)
    3d94:	00 91 7d 44 	lds	r16, 0x447D	; 0x80447d <_ZL12g_ms_counter>
    3d98:	10 91 7e 44 	lds	r17, 0x447E	; 0x80447e <_ZL12g_ms_counter+0x1>
    3d9c:	20 91 7f 44 	lds	r18, 0x447F	; 0x80447f <_ZL12g_ms_counter+0x2>
    3da0:	30 91 80 44 	lds	r19, 0x4480	; 0x804480 <_ZL12g_ms_counter+0x3>
    3da4:	01 2b       	or	r16, r17
    3da6:	02 2b       	or	r16, r18
    3da8:	03 2b       	or	r16, r19
    3daa:	71 f4       	brne	.+28     	; 0x3dc8 <util_delay_ms+0x4c>
			{
				TCB1.INTCTRL = 0 << TCB_CAPT_bp   /* Capture or Timeout: disabled */
				| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    3dac:	10 92 15 0b 	sts	0x0B15, r1	; 0x800b15 <__TEXT_REGION_LENGTH__+0x7e0b15>

				counting = false;
    3db0:	10 92 7c 44 	sts	0x447C, r1	; 0x80447c <_ZZ13util_delay_msE8counting>
				countdownValue = 0;
    3db4:	10 92 78 44 	sts	0x4478, r1	; 0x804478 <_ZZ13util_delay_msE14countdownValue>
    3db8:	10 92 79 44 	sts	0x4479, r1	; 0x804479 <_ZZ13util_delay_msE14countdownValue+0x1>
    3dbc:	10 92 7a 44 	sts	0x447A, r1	; 0x80447a <_ZZ13util_delay_msE14countdownValue+0x2>
    3dc0:	10 92 7b 44 	sts	0x447B, r1	; 0x80447b <_ZZ13util_delay_msE14countdownValue+0x3>
				return(false); /* time expired */
    3dc4:	80 e0       	ldi	r24, 0x00	; 0
    3dc6:	62 c0       	rjmp	.+196    	; 0x3e8c <util_delay_ms+0x110>
			}
			else if(delayValue != countdownValue) /* countdown delay changed */
    3dc8:	00 91 78 44 	lds	r16, 0x4478	; 0x804478 <_ZZ13util_delay_msE14countdownValue>
    3dcc:	10 91 79 44 	lds	r17, 0x4479	; 0x804479 <_ZZ13util_delay_msE14countdownValue+0x1>
    3dd0:	20 91 7a 44 	lds	r18, 0x447A	; 0x80447a <_ZZ13util_delay_msE14countdownValue+0x2>
    3dd4:	30 91 7b 44 	lds	r19, 0x447B	; 0x80447b <_ZZ13util_delay_msE14countdownValue+0x3>
    3dd8:	60 17       	cp	r22, r16
    3dda:	71 07       	cpc	r23, r17
    3ddc:	82 07       	cpc	r24, r18
    3dde:	93 07       	cpc	r25, r19
    3de0:	09 f4       	brne	.+2      	; 0x3de4 <util_delay_ms+0x68>
    3de2:	51 c0       	rjmp	.+162    	; 0x3e86 <util_delay_ms+0x10a>
			{
				TCB1.CNT = 0x0000;
    3de4:	10 92 1a 0b 	sts	0x0B1A, r1	; 0x800b1a <__TEXT_REGION_LENGTH__+0x7e0b1a>
    3de8:	10 92 1b 0b 	sts	0x0B1B, r1	; 0x800b1b <__TEXT_REGION_LENGTH__+0x7e0b1b>
				countdownValue = delayValue;
    3dec:	60 93 78 44 	sts	0x4478, r22	; 0x804478 <_ZZ13util_delay_msE14countdownValue>
    3df0:	70 93 79 44 	sts	0x4479, r23	; 0x804479 <_ZZ13util_delay_msE14countdownValue+0x1>
    3df4:	80 93 7a 44 	sts	0x447A, r24	; 0x80447a <_ZZ13util_delay_msE14countdownValue+0x2>
    3df8:	90 93 7b 44 	sts	0x447B, r25	; 0x80447b <_ZZ13util_delay_msE14countdownValue+0x3>
				g_ms_counter = delayValue;
    3dfc:	60 93 7d 44 	sts	0x447D, r22	; 0x80447d <_ZL12g_ms_counter>
    3e00:	70 93 7e 44 	sts	0x447E, r23	; 0x80447e <_ZL12g_ms_counter+0x1>
    3e04:	80 93 7f 44 	sts	0x447F, r24	; 0x80447f <_ZL12g_ms_counter+0x2>
    3e08:	90 93 80 44 	sts	0x4480, r25	; 0x804480 <_ZL12g_ms_counter+0x3>
				return(false);
    3e0c:	80 e0       	ldi	r24, 0x00	; 0
    3e0e:	3e c0       	rjmp	.+124    	; 0x3e8c <util_delay_ms+0x110>
			}
		}
		else if(delayValue != countdownValue)
    3e10:	00 91 78 44 	lds	r16, 0x4478	; 0x804478 <_ZZ13util_delay_msE14countdownValue>
    3e14:	10 91 79 44 	lds	r17, 0x4479	; 0x804479 <_ZZ13util_delay_msE14countdownValue+0x1>
    3e18:	20 91 7a 44 	lds	r18, 0x447A	; 0x80447a <_ZZ13util_delay_msE14countdownValue+0x2>
    3e1c:	30 91 7b 44 	lds	r19, 0x447B	; 0x80447b <_ZZ13util_delay_msE14countdownValue+0x3>
    3e20:	60 17       	cp	r22, r16
    3e22:	71 07       	cpc	r23, r17
    3e24:	82 07       	cpc	r24, r18
    3e26:	93 07       	cpc	r25, r19
    3e28:	71 f1       	breq	.+92     	; 0x3e86 <util_delay_ms+0x10a>
		{
			TCB1.CNT = 0x0000;
    3e2a:	10 92 1a 0b 	sts	0x0B1A, r1	; 0x800b1a <__TEXT_REGION_LENGTH__+0x7e0b1a>
    3e2e:	10 92 1b 0b 	sts	0x0B1B, r1	; 0x800b1b <__TEXT_REGION_LENGTH__+0x7e0b1b>
			countdownValue = delayValue;
    3e32:	60 93 78 44 	sts	0x4478, r22	; 0x804478 <_ZZ13util_delay_msE14countdownValue>
    3e36:	70 93 79 44 	sts	0x4479, r23	; 0x804479 <_ZZ13util_delay_msE14countdownValue+0x1>
    3e3a:	80 93 7a 44 	sts	0x447A, r24	; 0x80447a <_ZZ13util_delay_msE14countdownValue+0x2>
    3e3e:	90 93 7b 44 	sts	0x447B, r25	; 0x80447b <_ZZ13util_delay_msE14countdownValue+0x3>
			g_ms_counter = delayValue;
    3e42:	60 93 7d 44 	sts	0x447D, r22	; 0x80447d <_ZL12g_ms_counter>
    3e46:	70 93 7e 44 	sts	0x447E, r23	; 0x80447e <_ZL12g_ms_counter+0x1>
    3e4a:	80 93 7f 44 	sts	0x447F, r24	; 0x80447f <_ZL12g_ms_counter+0x2>
    3e4e:	90 93 80 44 	sts	0x4480, r25	; 0x804480 <_ZL12g_ms_counter+0x3>
			counting = true;
    3e52:	81 e0       	ldi	r24, 0x01	; 1
    3e54:	80 93 7c 44 	sts	0x447C, r24	; 0x80447c <_ZZ13util_delay_msE8counting>
    3e58:	16 c0       	rjmp	.+44     	; 0x3e86 <util_delay_ms+0x10a>
		}
	}
	else
	{
		TCB1.INTCTRL = 0 << TCB_CAPT_bp   /* Capture or Timeout: disabled */
		| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    3e5a:	10 92 15 0b 	sts	0x0B15, r1	; 0x800b15 <__TEXT_REGION_LENGTH__+0x7e0b15>

		counting = false;
    3e5e:	10 92 7c 44 	sts	0x447C, r1	; 0x80447c <_ZZ13util_delay_msE8counting>
		countdownValue = 0;
    3e62:	10 92 78 44 	sts	0x4478, r1	; 0x804478 <_ZZ13util_delay_msE14countdownValue>
    3e66:	10 92 79 44 	sts	0x4479, r1	; 0x804479 <_ZZ13util_delay_msE14countdownValue+0x1>
    3e6a:	10 92 7a 44 	sts	0x447A, r1	; 0x80447a <_ZZ13util_delay_msE14countdownValue+0x2>
    3e6e:	10 92 7b 44 	sts	0x447B, r1	; 0x80447b <_ZZ13util_delay_msE14countdownValue+0x3>
		g_ms_counter = 0;
    3e72:	10 92 7d 44 	sts	0x447D, r1	; 0x80447d <_ZL12g_ms_counter>
    3e76:	10 92 7e 44 	sts	0x447E, r1	; 0x80447e <_ZL12g_ms_counter+0x1>
    3e7a:	10 92 7f 44 	sts	0x447F, r1	; 0x80447f <_ZL12g_ms_counter+0x2>
    3e7e:	10 92 80 44 	sts	0x4480, r1	; 0x804480 <_ZL12g_ms_counter+0x3>
		return(false); /* timer reset */
    3e82:	80 e0       	ldi	r24, 0x00	; 0
    3e84:	03 c0       	rjmp	.+6      	; 0x3e8c <util_delay_ms+0x110>
	}
	
	TCB1.INTCTRL = 1 << TCB_CAPT_bp   /* Capture or Timeout: enabled */
	| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    3e86:	81 e0       	ldi	r24, 0x01	; 1
    3e88:	80 93 15 0b 	sts	0x0B15, r24	; 0x800b15 <__TEXT_REGION_LENGTH__+0x7e0b15>
	
	return(true);
}
    3e8c:	1f 91       	pop	r17
    3e8e:	0f 91       	pop	r16
    3e90:	08 95       	ret

00003e92 <__vector_13>:

/**
One millisecond utility counter based on CPU clock.
*/
ISR(TCB1_INT_vect)
{
    3e92:	1f 92       	push	r1
    3e94:	0f 92       	push	r0
    3e96:	0f b6       	in	r0, 0x3f	; 63
    3e98:	0f 92       	push	r0
    3e9a:	11 24       	eor	r1, r1
    3e9c:	8f 93       	push	r24
    3e9e:	9f 93       	push	r25
    3ea0:	af 93       	push	r26
    3ea2:	bf 93       	push	r27
    if(TCB1.INTFLAGS & TCB_CAPT_bm)
    3ea4:	80 91 16 0b 	lds	r24, 0x0B16	; 0x800b16 <__TEXT_REGION_LENGTH__+0x7e0b16>
    3ea8:	80 ff       	sbrs	r24, 0
    3eaa:	1d c0       	rjmp	.+58     	; 0x3ee6 <__vector_13+0x54>
    {
		if(g_ms_counter) /* check for 1-second interval */
    3eac:	80 91 7d 44 	lds	r24, 0x447D	; 0x80447d <_ZL12g_ms_counter>
    3eb0:	90 91 7e 44 	lds	r25, 0x447E	; 0x80447e <_ZL12g_ms_counter+0x1>
    3eb4:	a0 91 7f 44 	lds	r26, 0x447F	; 0x80447f <_ZL12g_ms_counter+0x2>
    3eb8:	b0 91 80 44 	lds	r27, 0x4480	; 0x804480 <_ZL12g_ms_counter+0x3>
    3ebc:	00 97       	sbiw	r24, 0x00	; 0
    3ebe:	a1 05       	cpc	r26, r1
    3ec0:	b1 05       	cpc	r27, r1
    3ec2:	61 f0       	breq	.+24     	; 0x3edc <__vector_13+0x4a>
		{
			g_ms_counter--;	
    3ec4:	01 97       	sbiw	r24, 0x01	; 1
    3ec6:	a1 09       	sbc	r26, r1
    3ec8:	b1 09       	sbc	r27, r1
    3eca:	80 93 7d 44 	sts	0x447D, r24	; 0x80447d <_ZL12g_ms_counter>
    3ece:	90 93 7e 44 	sts	0x447E, r25	; 0x80447e <_ZL12g_ms_counter+0x1>
    3ed2:	a0 93 7f 44 	sts	0x447F, r26	; 0x80447f <_ZL12g_ms_counter+0x2>
    3ed6:	b0 93 80 44 	sts	0x4480, r27	; 0x804480 <_ZL12g_ms_counter+0x3>
    3eda:	02 c0       	rjmp	.+4      	; 0x3ee0 <__vector_13+0x4e>
		}
		else
		{
			TCB1.INTCTRL = 0 << TCB_CAPT_bp   /* Capture or Timeout: disabled */
			| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    3edc:	10 92 15 0b 	sts	0x0B15, r1	; 0x800b15 <__TEXT_REGION_LENGTH__+0x7e0b15>
		}

        TCB1.INTFLAGS = TCB_CAPT_bm; /* clear interrupt flag */
    3ee0:	81 e0       	ldi	r24, 0x01	; 1
    3ee2:	80 93 16 0b 	sts	0x0B16, r24	; 0x800b16 <__TEXT_REGION_LENGTH__+0x7e0b16>
    }
}
    3ee6:	bf 91       	pop	r27
    3ee8:	af 91       	pop	r26
    3eea:	9f 91       	pop	r25
    3eec:	8f 91       	pop	r24
    3eee:	0f 90       	pop	r0
    3ef0:	0f be       	out	0x3f, r0	; 63
    3ef2:	0f 90       	pop	r0
    3ef4:	1f 90       	pop	r1
    3ef6:	18 95       	reti

00003ef8 <_Z14txSetFrequencyPmh>:

			g_80m_frequency = DEFAULT_TX_80M_FREQUENCY;
			g_80m_power_level_mW = DEFAULT_TX_80M_POWER_MW;
			g_rtty_offset = DEFAULT_RTTY_OFFSET_FREQUENCY;

			saveAllTransmitterEEPROM();
    3ef8:	0f 93       	push	r16
    3efa:	1f 93       	push	r17
    3efc:	cf 93       	push	r28
    3efe:	df 93       	push	r29
    3f00:	fc 01       	movw	r30, r24
    3f02:	46 2f       	mov	r20, r22
    3f04:	60 81       	ld	r22, Z
    3f06:	71 81       	ldd	r23, Z+1	; 0x01
    3f08:	82 81       	ldd	r24, Z+2	; 0x02
    3f0a:	93 81       	ldd	r25, Z+3	; 0x03
    3f0c:	8b 01       	movw	r16, r22
    3f0e:	9c 01       	movw	r18, r24
    3f10:	01 5e       	subi	r16, 0xE1	; 225
    3f12:	17 46       	sbci	r17, 0x67	; 103
    3f14:	25 43       	sbci	r18, 0x35	; 53
    3f16:	31 09       	sbc	r19, r1
    3f18:	0f 31       	cpi	r16, 0x1F	; 31
    3f1a:	11 4a       	sbci	r17, 0xA1	; 161
    3f1c:	27 40       	sbci	r18, 0x07	; 7
    3f1e:	31 05       	cpc	r19, r1
    3f20:	98 f4       	brcc	.+38     	; 0x3f48 <_Z14txSetFrequencyPmh+0x50>
    3f22:	24 2f       	mov	r18, r20
    3f24:	ef 01       	movw	r28, r30
    3f26:	41 e0       	ldi	r20, 0x01	; 1
    3f28:	0e 94 61 1d 	call	0x3ac2	; 0x3ac2 <_Z15si5351_set_freqm12si5351_clockh>
    3f2c:	88 81       	ld	r24, Y
    3f2e:	99 81       	ldd	r25, Y+1	; 0x01
    3f30:	aa 81       	ldd	r26, Y+2	; 0x02
    3f32:	bb 81       	ldd	r27, Y+3	; 0x03
    3f34:	80 93 27 40 	sts	0x4027, r24	; 0x804027 <_ZL15g_80m_frequency>
    3f38:	90 93 28 40 	sts	0x4028, r25	; 0x804028 <_ZL15g_80m_frequency+0x1>
    3f3c:	a0 93 29 40 	sts	0x4029, r26	; 0x804029 <_ZL15g_80m_frequency+0x2>
    3f40:	b0 93 2a 40 	sts	0x402A, r27	; 0x80402a <_ZL15g_80m_frequency+0x3>
    3f44:	81 e0       	ldi	r24, 0x01	; 1
    3f46:	01 c0       	rjmp	.+2      	; 0x3f4a <_Z14txSetFrequencyPmh+0x52>
    3f48:	80 e0       	ldi	r24, 0x00	; 0
    3f4a:	df 91       	pop	r29
    3f4c:	cf 91       	pop	r28
    3f4e:	1f 91       	pop	r17
    3f50:	0f 91       	pop	r16
    3f52:	08 95       	ret

00003f54 <_Z14txGetFrequencyv>:
    3f54:	80 91 81 44 	lds	r24, 0x4481	; 0x804481 <_ZL16g_tx_initialized>
    3f58:	88 23       	and	r24, r24
    3f5a:	49 f0       	breq	.+18     	; 0x3f6e <_Z14txGetFrequencyv+0x1a>
    3f5c:	60 91 27 40 	lds	r22, 0x4027	; 0x804027 <_ZL15g_80m_frequency>
    3f60:	70 91 28 40 	lds	r23, 0x4028	; 0x804028 <_ZL15g_80m_frequency+0x1>
    3f64:	80 91 29 40 	lds	r24, 0x4029	; 0x804029 <_ZL15g_80m_frequency+0x2>
    3f68:	90 91 2a 40 	lds	r25, 0x402A	; 0x80402a <_ZL15g_80m_frequency+0x3>
    3f6c:	08 95       	ret
    3f6e:	60 e0       	ldi	r22, 0x00	; 0
    3f70:	70 e0       	ldi	r23, 0x00	; 0
    3f72:	cb 01       	movw	r24, r22
    3f74:	08 95       	ret

00003f76 <_Z18powerToTransmitterh>:
    3f76:	80 e0       	ldi	r24, 0x00	; 0
    3f78:	08 95       	ret

00003f7a <_Z14keyTransmitterh>:
    3f7a:	88 23       	and	r24, r24
    3f7c:	61 f0       	breq	.+24     	; 0x3f96 <_Z14keyTransmitterh+0x1c>
    3f7e:	80 91 82 44 	lds	r24, 0x4482	; 0x804482 <_ZL19g_transmitter_keyed>
    3f82:	81 11       	cpse	r24, r1
    3f84:	0e c0       	rjmp	.+28     	; 0x3fa2 <_Z14keyTransmitterh+0x28>
    3f86:	61 e0       	ldi	r22, 0x01	; 1
    3f88:	81 e0       	ldi	r24, 0x01	; 1
    3f8a:	0e 94 22 1c 	call	0x3844	; 0x3844 <_Z19si5351_clock_enable12si5351_clockh>
    3f8e:	81 e0       	ldi	r24, 0x01	; 1
    3f90:	80 93 82 44 	sts	0x4482, r24	; 0x804482 <_ZL19g_transmitter_keyed>
    3f94:	08 95       	ret
    3f96:	60 e0       	ldi	r22, 0x00	; 0
    3f98:	81 e0       	ldi	r24, 0x01	; 1
    3f9a:	0e 94 22 1c 	call	0x3844	; 0x3844 <_Z19si5351_clock_enable12si5351_clockh>
    3f9e:	10 92 82 44 	sts	0x4482, r1	; 0x804482 <_ZL19g_transmitter_keyed>
    3fa2:	08 95       	ret

00003fa4 <_Z15txSetParametersPjPh>:
    3fa4:	cf 93       	push	r28
    3fa6:	df 93       	push	r29
    3fa8:	cd b7       	in	r28, 0x3d	; 61
    3faa:	de b7       	in	r29, 0x3e	; 62
    3fac:	2b 97       	sbiw	r28, 0x0b	; 11
    3fae:	cd bf       	out	0x3d, r28	; 61
    3fb0:	de bf       	out	0x3e, r29	; 62
    3fb2:	88 87       	std	Y+8, r24	; 0x08
    3fb4:	99 87       	std	Y+9, r25	; 0x09
    3fb6:	6a 87       	std	Y+10, r22	; 0x0a
    3fb8:	7b 87       	std	Y+11, r23	; 0x0b
    3fba:	19 82       	std	Y+1, r1	; 0x01
    3fbc:	1a 82       	std	Y+2, r1	; 0x02
    3fbe:	1b 82       	std	Y+3, r1	; 0x03
    3fc0:	1c 82       	std	Y+4, r1	; 0x04
    3fc2:	88 85       	ldd	r24, Y+8	; 0x08
    3fc4:	99 85       	ldd	r25, Y+9	; 0x09
    3fc6:	89 2b       	or	r24, r25
    3fc8:	39 f0       	breq	.+14     	; 0x3fd8 <_Z15txSetParametersPjPh+0x34>
    3fca:	88 85       	ldd	r24, Y+8	; 0x08
    3fcc:	99 85       	ldd	r25, Y+9	; 0x09
    3fce:	fc 01       	movw	r30, r24
    3fd0:	80 81       	ld	r24, Z
    3fd2:	91 81       	ldd	r25, Z+1	; 0x01
    3fd4:	8b 83       	std	Y+3, r24	; 0x03
    3fd6:	9c 83       	std	Y+4, r25	; 0x04
    3fd8:	88 85       	ldd	r24, Y+8	; 0x08
    3fda:	99 85       	ldd	r25, Y+9	; 0x09
    3fdc:	89 2b       	or	r24, r25
    3fde:	09 f4       	brne	.+2      	; 0x3fe2 <_Z15txSetParametersPjPh+0x3e>
    3fe0:	4e c0       	rjmp	.+156    	; 0x407e <__DATA_REGION_LENGTH__+0x7e>
    3fe2:	8b 81       	ldd	r24, Y+3	; 0x03
    3fe4:	9c 81       	ldd	r25, Y+4	; 0x04
    3fe6:	89 38       	cpi	r24, 0x89	; 137
    3fe8:	93 41       	sbci	r25, 0x13	; 19
    3fea:	08 f0       	brcs	.+2      	; 0x3fee <_Z15txSetParametersPjPh+0x4a>
    3fec:	44 c0       	rjmp	.+136    	; 0x4076 <__DATA_REGION_LENGTH__+0x76>
    3fee:	9e 01       	movw	r18, r28
    3ff0:	29 5f       	subi	r18, 0xF9	; 249
    3ff2:	3f 4f       	sbci	r19, 0xFF	; 255
    3ff4:	ae 01       	movw	r20, r28
    3ff6:	4a 5f       	subi	r20, 0xFA	; 250
    3ff8:	5f 4f       	sbci	r21, 0xFF	; 255
    3ffa:	be 01       	movw	r22, r28
    3ffc:	6b 5f       	subi	r22, 0xFB	; 251
    3ffe:	7f 4f       	sbci	r23, 0xFF	; 255
    4000:	ce 01       	movw	r24, r28
    4002:	03 96       	adiw	r24, 0x03	; 3
    4004:	0e 94 90 20 	call	0x4120	; 0x4120 <_Z22txMilliwattsToSettingsPjPhS0_S0_>
    4008:	8a 83       	std	Y+2, r24	; 0x02
    400a:	81 e0       	ldi	r24, 0x01	; 1
    400c:	9a 81       	ldd	r25, Y+2	; 0x02
    400e:	9f 3c       	cpi	r25, 0xCF	; 207
    4010:	09 f0       	breq	.+2      	; 0x4014 <__DATA_REGION_LENGTH__+0x14>
    4012:	80 e0       	ldi	r24, 0x00	; 0
    4014:	89 83       	std	Y+1, r24	; 0x01
    4016:	8b 81       	ldd	r24, Y+3	; 0x03
    4018:	9c 81       	ldd	r25, Y+4	; 0x04
    401a:	21 e0       	ldi	r18, 0x01	; 1
    401c:	89 2b       	or	r24, r25
    401e:	09 f0       	breq	.+2      	; 0x4022 <__DATA_REGION_LENGTH__+0x22>
    4020:	20 e0       	ldi	r18, 0x00	; 0
    4022:	82 2f       	mov	r24, r18
    4024:	80 93 31 40 	sts	0x4031, r24	; 0x804031 <g_tx_power_is_zero>
    4028:	89 81       	ldd	r24, Y+1	; 0x01
    402a:	88 23       	and	r24, r24
    402c:	e1 f4       	brne	.+56     	; 0x4066 <__DATA_REGION_LENGTH__+0x66>
    402e:	8b 81       	ldd	r24, Y+3	; 0x03
    4030:	9c 81       	ldd	r25, Y+4	; 0x04
    4032:	80 93 2b 40 	sts	0x402B, r24	; 0x80402b <_ZL20g_80m_power_level_mW>
    4036:	90 93 2c 40 	sts	0x402C, r25	; 0x80402c <_ZL20g_80m_power_level_mW+0x1>
    403a:	0e 94 67 21 	call	0x42ce	; 0x42ce <_Z18txIsAntennaForBandv>
    403e:	98 2f       	mov	r25, r24
    4040:	81 e0       	ldi	r24, 0x01	; 1
    4042:	99 23       	and	r25, r25
    4044:	09 f4       	brne	.+2      	; 0x4048 <__DATA_REGION_LENGTH__+0x48>
    4046:	80 e0       	ldi	r24, 0x00	; 0
    4048:	88 23       	and	r24, r24
    404a:	39 f4       	brne	.+14     	; 0x405a <__DATA_REGION_LENGTH__+0x5a>
    404c:	81 e0       	ldi	r24, 0x01	; 1
    404e:	80 93 31 40 	sts	0x4031, r24	; 0x804031 <g_tx_power_is_zero>
    4052:	81 e0       	ldi	r24, 0x01	; 1
    4054:	89 83       	std	Y+1, r24	; 0x01
    4056:	86 ef       	ldi	r24, 0xF6	; 246
    4058:	8a 83       	std	Y+2, r24	; 0x02
    405a:	80 91 31 40 	lds	r24, 0x4031	; 0x804031 <g_tx_power_is_zero>
    405e:	88 23       	and	r24, r24
    4060:	09 f4       	brne	.+2      	; 0x4064 <__DATA_REGION_LENGTH__+0x64>
    4062:	89 81       	ldd	r24, Y+1	; 0x01
    4064:	00 00       	nop
    4066:	2b 81       	ldd	r18, Y+3	; 0x03
    4068:	3c 81       	ldd	r19, Y+4	; 0x04
    406a:	88 85       	ldd	r24, Y+8	; 0x08
    406c:	99 85       	ldd	r25, Y+9	; 0x09
    406e:	fc 01       	movw	r30, r24
    4070:	20 83       	st	Z, r18
    4072:	31 83       	std	Z+1, r19	; 0x01
    4074:	04 c0       	rjmp	.+8      	; 0x407e <__DATA_REGION_LENGTH__+0x7e>
    4076:	81 e0       	ldi	r24, 0x01	; 1
    4078:	89 83       	std	Y+1, r24	; 0x01
    407a:	85 ef       	ldi	r24, 0xF5	; 245
    407c:	8a 83       	std	Y+2, r24	; 0x02
    407e:	89 81       	ldd	r24, Y+1	; 0x01
    4080:	8a 81       	ldd	r24, Y+2	; 0x02
    4082:	2b 96       	adiw	r28, 0x0b	; 11
    4084:	cd bf       	out	0x3d, r28	; 61
    4086:	de bf       	out	0x3e, r29	; 62
    4088:	df 91       	pop	r29
    408a:	cf 91       	pop	r28
    408c:	08 95       	ret

0000408e <_Z22storeTransmitterValuesv>:
    408e:	0e 94 4a 20 	call	0x4094	; 0x4094 <_Z24saveAllTransmitterEEPROMv>
    4092:	08 95       	ret

00004094 <_Z24saveAllTransmitterEEPROMv>:
		}
	}

	void saveAllTransmitterEEPROM(void)
	{
    4094:	cf 93       	push	r28
    4096:	df 93       	push	r29
    4098:	cd b7       	in	r28, 0x3d	; 61
    409a:	de b7       	in	r29, 0x3e	; 62
    409c:	60 97       	sbiw	r28, 0x10	; 16
    409e:	cd bf       	out	0x3d, r28	; 61
    40a0:	de bf       	out	0x3e, r29	; 62
		uint8_t table[16] = DEFAULT_80M_POWER_TABLE;
    40a2:	80 e1       	ldi	r24, 0x10	; 16
    40a4:	e6 e8       	ldi	r30, 0x86	; 134
    40a6:	f0 e4       	ldi	r31, 0x40	; 64
    40a8:	de 01       	movw	r26, r28
    40aa:	11 96       	adiw	r26, 0x01	; 1
    40ac:	01 90       	ld	r0, Z+
    40ae:	0d 92       	st	X+, r0
    40b0:	8a 95       	dec	r24
    40b2:	e1 f7       	brne	.-8      	; 0x40ac <_Z24saveAllTransmitterEEPROMv+0x18>

		eeprom_update_dword((uint32_t*)&ee_active_80m_frequency, g_80m_frequency);
    40b4:	40 91 27 40 	lds	r20, 0x4027	; 0x804027 <_ZL15g_80m_frequency>
    40b8:	50 91 28 40 	lds	r21, 0x4028	; 0x804028 <_ZL15g_80m_frequency+0x1>
    40bc:	60 91 29 40 	lds	r22, 0x4029	; 0x804029 <_ZL15g_80m_frequency+0x2>
    40c0:	70 91 2a 40 	lds	r23, 0x402A	; 0x80402a <_ZL15g_80m_frequency+0x3>
    40c4:	85 e0       	ldi	r24, 0x05	; 5
    40c6:	90 e0       	ldi	r25, 0x00	; 0
    40c8:	0e 94 24 29 	call	0x5248	; 0x5248 <eeprom_update_dword>
		eeprom_update_word(&ee_80m_power_level_mW, g_80m_power_level_mW);
    40cc:	60 91 2b 40 	lds	r22, 0x402B	; 0x80402b <_ZL20g_80m_power_level_mW>
    40d0:	70 91 2c 40 	lds	r23, 0x402C	; 0x80402c <_ZL20g_80m_power_level_mW+0x1>
    40d4:	89 e0       	ldi	r24, 0x09	; 9
    40d6:	90 e0       	ldi	r25, 0x00	; 0
    40d8:	0e 94 30 29 	call	0x5260	; 0x5260 <eeprom_update_word>
		eeprom_update_dword((uint32_t*)&ee_cw_offset_frequency, g_rtty_offset);
    40dc:	40 91 2d 40 	lds	r20, 0x402D	; 0x80402d <_ZL13g_rtty_offset>
    40e0:	50 91 2e 40 	lds	r21, 0x402E	; 0x80402e <_ZL13g_rtty_offset+0x1>
    40e4:	60 91 2f 40 	lds	r22, 0x402F	; 0x80402f <_ZL13g_rtty_offset+0x2>
    40e8:	70 91 30 40 	lds	r23, 0x4030	; 0x804030 <_ZL13g_rtty_offset+0x3>
    40ec:	8b e0       	ldi	r24, 0x0B	; 11
    40ee:	90 e0       	ldi	r25, 0x00	; 0
    40f0:	0e 94 24 29 	call	0x5248	; 0x5248 <eeprom_update_dword>
		eeprom_update_dword((uint32_t*)&ee_si5351_ref_correction, si5351_get_correction());
    40f4:	0e 94 b0 18 	call	0x3160	; 0x3160 <_Z21si5351_get_correctionv>
    40f8:	ab 01       	movw	r20, r22
    40fa:	bc 01       	movw	r22, r24
    40fc:	81 e0       	ldi	r24, 0x01	; 1
    40fe:	90 e0       	ldi	r25, 0x00	; 0
    4100:	0e 94 24 29 	call	0x5248	; 0x5248 <eeprom_update_dword>
		eeprom_write_block(table, ee_80m_power_table, sizeof(table));
    4104:	40 e1       	ldi	r20, 0x10	; 16
    4106:	50 e0       	ldi	r21, 0x00	; 0
    4108:	6f e0       	ldi	r22, 0x0F	; 15
    410a:	70 e0       	ldi	r23, 0x00	; 0
    410c:	ce 01       	movw	r24, r28
    410e:	01 96       	adiw	r24, 0x01	; 1
    4110:	0e 94 36 29 	call	0x526c	; 0x526c <eeprom_write_block>
	}
    4114:	60 96       	adiw	r28, 0x10	; 16
    4116:	cd bf       	out	0x3d, r28	; 61
    4118:	de bf       	out	0x3e, r29	; 62
    411a:	df 91       	pop	r29
    411c:	cf 91       	pop	r28
    411e:	08 95       	ret

00004120 <_Z22txMilliwattsToSettingsPjPhS0_S0_>:


#endif  /*#ifdef INCLUDE_TRANSMITTER_SUPPORT */

EC txMilliwattsToSettings(uint16_t* powerMW, uint8_t* driveLevel, uint8_t* modLevelHigh, uint8_t* modLevelLow)
{
    4120:	cf 92       	push	r12
    4122:	df 92       	push	r13
    4124:	ef 92       	push	r14
    4126:	ff 92       	push	r15
    4128:	0f 93       	push	r16
    412a:	1f 93       	push	r17
    412c:	cf 93       	push	r28
    412e:	dc 01       	movw	r26, r24
	EC ec = ERROR_CODE_NO_ERROR;
	int16_t maxPwr;
	uint8_t index;

	if(powerMW == NULL)
    4130:	89 2b       	or	r24, r25
    4132:	09 f4       	brne	.+2      	; 0x4136 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x16>
    4134:	c3 c0       	rjmp	.+390    	; 0x42bc <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x19c>
	{
		return(ERROR_CODE_SW_LOGIC_ERROR);
	}

	if(g_battery_type == BATTERY_4r2V)
    4136:	80 91 06 40 	lds	r24, 0x4006	; 0x804006 <g_battery_type>
    413a:	81 30       	cpi	r24, 0x01	; 1
    413c:	19 f4       	brne	.+6      	; 0x4144 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x24>
	{
		maxPwr = MAX_TX_POWER_80M_4r2V_MW;
    413e:	80 ed       	ldi	r24, 0xD0	; 208
    4140:	97 e0       	ldi	r25, 0x07	; 7
    4142:	02 c0       	rjmp	.+4      	; 0x4148 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x28>
	}
	else
	{
		maxPwr = MAX_TX_POWER_80M_MW;
    4144:	88 e8       	ldi	r24, 0x88	; 136
    4146:	93 e1       	ldi	r25, 0x13	; 19
	}

	if((int16_t)*powerMW > maxPwr)
    4148:	ed 91       	ld	r30, X+
    414a:	fc 91       	ld	r31, X
    414c:	11 97       	sbiw	r26, 0x01	; 1
    414e:	8e 17       	cp	r24, r30
    4150:	9f 07       	cpc	r25, r31
    4152:	14 f0       	brlt	.+4      	; 0x4158 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x38>

#endif  /*#ifdef INCLUDE_TRANSMITTER_SUPPORT */

EC txMilliwattsToSettings(uint16_t* powerMW, uint8_t* driveLevel, uint8_t* modLevelHigh, uint8_t* modLevelLow)
{
	EC ec = ERROR_CODE_NO_ERROR;
    4154:	c0 e0       	ldi	r28, 0x00	; 0
    4156:	01 c0       	rjmp	.+2      	; 0x415a <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x3a>
		maxPwr = MAX_TX_POWER_80M_MW;
	}

	if((int16_t)*powerMW > maxPwr)
	{
		ec = ERROR_CODE_POWER_LEVEL_NOT_SUPPORTED;
    4158:	c5 ef       	ldi	r28, 0xF5	; 245
	}

	*powerMW = CLAMP(0, (int16_t)*powerMW, maxPwr);
    415a:	8e 17       	cp	r24, r30
    415c:	9f 07       	cpc	r25, r31
    415e:	2c f0       	brlt	.+10     	; 0x416a <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x4a>
    4160:	ff 23       	and	r31, r31
    4162:	24 f4       	brge	.+8      	; 0x416c <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x4c>
    4164:	e0 e0       	ldi	r30, 0x00	; 0
    4166:	f0 e0       	ldi	r31, 0x00	; 0
    4168:	01 c0       	rjmp	.+2      	; 0x416c <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x4c>
    416a:	fc 01       	movw	r30, r24
    416c:	cf 01       	movw	r24, r30
    416e:	ed 93       	st	X+, r30
    4170:	fc 93       	st	X, r31
    4172:	11 97       	sbiw	r26, 0x01	; 1

	if(*powerMW < 5)
    4174:	e5 30       	cpi	r30, 0x05	; 5
    4176:	f1 05       	cpc	r31, r1
    4178:	20 f4       	brcc	.+8      	; 0x4182 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x62>
	{
		index = 0;
		*powerMW = 0;
    417a:	1d 92       	st	X+, r1
    417c:	1c 92       	st	X, r1

	*powerMW = CLAMP(0, (int16_t)*powerMW, maxPwr);

	if(*powerMW < 5)
	{
		index = 0;
    417e:	80 e0       	ldi	r24, 0x00	; 0
    4180:	8d c0       	rjmp	.+282    	; 0x429c <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x17c>
		*powerMW = 0;
	}
	else if(*powerMW < 50)
    4182:	e2 33       	cpi	r30, 0x32	; 50
    4184:	f1 05       	cpc	r31, r1
    4186:	30 f4       	brcc	.+12     	; 0x4194 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x74>
	{
		index = 1;
		*powerMW = 10;
    4188:	8a e0       	ldi	r24, 0x0A	; 10
    418a:	90 e0       	ldi	r25, 0x00	; 0
    418c:	8d 93       	st	X+, r24
    418e:	9c 93       	st	X, r25
		index = 0;
		*powerMW = 0;
	}
	else if(*powerMW < 50)
	{
		index = 1;
    4190:	81 e0       	ldi	r24, 0x01	; 1
    4192:	84 c0       	rjmp	.+264    	; 0x429c <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x17c>
		*powerMW = 10;
	}
	else if(*powerMW < 150)
    4194:	e6 39       	cpi	r30, 0x96	; 150
    4196:	f1 05       	cpc	r31, r1
    4198:	30 f4       	brcc	.+12     	; 0x41a6 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x86>
	{
		index = 2;
		*powerMW = 100;
    419a:	84 e6       	ldi	r24, 0x64	; 100
    419c:	90 e0       	ldi	r25, 0x00	; 0
    419e:	8d 93       	st	X+, r24
    41a0:	9c 93       	st	X, r25
		index = 1;
		*powerMW = 10;
	}
	else if(*powerMW < 150)
	{
		index = 2;
    41a2:	82 e0       	ldi	r24, 0x02	; 2
    41a4:	7b c0       	rjmp	.+246    	; 0x429c <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x17c>
		*powerMW = 100;
	}
	else if(*powerMW < 250)
    41a6:	ea 3f       	cpi	r30, 0xFA	; 250
    41a8:	f1 05       	cpc	r31, r1
    41aa:	30 f4       	brcc	.+12     	; 0x41b8 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x98>
	{
		index = 3;
		*powerMW = 200;
    41ac:	88 ec       	ldi	r24, 0xC8	; 200
    41ae:	90 e0       	ldi	r25, 0x00	; 0
    41b0:	8d 93       	st	X+, r24
    41b2:	9c 93       	st	X, r25
		index = 2;
		*powerMW = 100;
	}
	else if(*powerMW < 250)
	{
		index = 3;
    41b4:	83 e0       	ldi	r24, 0x03	; 3
    41b6:	72 c0       	rjmp	.+228    	; 0x429c <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x17c>
		*powerMW = 200;
	}
	else if(*powerMW < 350)
    41b8:	8e 35       	cpi	r24, 0x5E	; 94
    41ba:	e1 e0       	ldi	r30, 0x01	; 1
    41bc:	9e 07       	cpc	r25, r30
    41be:	30 f4       	brcc	.+12     	; 0x41cc <_Z22txMilliwattsToSettingsPjPhS0_S0_+0xac>
	{
		index = 4;
		*powerMW = 300;
    41c0:	8c e2       	ldi	r24, 0x2C	; 44
    41c2:	91 e0       	ldi	r25, 0x01	; 1
    41c4:	8d 93       	st	X+, r24
    41c6:	9c 93       	st	X, r25
		index = 3;
		*powerMW = 200;
	}
	else if(*powerMW < 350)
	{
		index = 4;
    41c8:	84 e0       	ldi	r24, 0x04	; 4
    41ca:	68 c0       	rjmp	.+208    	; 0x429c <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x17c>
		*powerMW = 300;
	}
	else if(*powerMW < 450)
    41cc:	82 3c       	cpi	r24, 0xC2	; 194
    41ce:	f1 e0       	ldi	r31, 0x01	; 1
    41d0:	9f 07       	cpc	r25, r31
    41d2:	30 f4       	brcc	.+12     	; 0x41e0 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0xc0>
	{
		index = 5;
		*powerMW = 400;
    41d4:	80 e9       	ldi	r24, 0x90	; 144
    41d6:	91 e0       	ldi	r25, 0x01	; 1
    41d8:	8d 93       	st	X+, r24
    41da:	9c 93       	st	X, r25
		index = 4;
		*powerMW = 300;
	}
	else if(*powerMW < 450)
	{
		index = 5;
    41dc:	85 e0       	ldi	r24, 0x05	; 5
    41de:	5e c0       	rjmp	.+188    	; 0x429c <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x17c>
		*powerMW = 400;
	}
	else if(*powerMW < 550)
    41e0:	86 32       	cpi	r24, 0x26	; 38
    41e2:	e2 e0       	ldi	r30, 0x02	; 2
    41e4:	9e 07       	cpc	r25, r30
    41e6:	30 f4       	brcc	.+12     	; 0x41f4 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0xd4>
	{
		index = 6;
		*powerMW = 500;
    41e8:	84 ef       	ldi	r24, 0xF4	; 244
    41ea:	91 e0       	ldi	r25, 0x01	; 1
    41ec:	8d 93       	st	X+, r24
    41ee:	9c 93       	st	X, r25
		index = 5;
		*powerMW = 400;
	}
	else if(*powerMW < 550)
	{
		index = 6;
    41f0:	86 e0       	ldi	r24, 0x06	; 6
    41f2:	54 c0       	rjmp	.+168    	; 0x429c <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x17c>
		*powerMW = 500;
	}
	else if(*powerMW < 650)
    41f4:	8a 38       	cpi	r24, 0x8A	; 138
    41f6:	f2 e0       	ldi	r31, 0x02	; 2
    41f8:	9f 07       	cpc	r25, r31
    41fa:	30 f4       	brcc	.+12     	; 0x4208 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0xe8>
	{
		index = 7;
		*powerMW = 600;
    41fc:	88 e5       	ldi	r24, 0x58	; 88
    41fe:	92 e0       	ldi	r25, 0x02	; 2
    4200:	8d 93       	st	X+, r24
    4202:	9c 93       	st	X, r25
		index = 6;
		*powerMW = 500;
	}
	else if(*powerMW < 650)
	{
		index = 7;
    4204:	87 e0       	ldi	r24, 0x07	; 7
    4206:	4a c0       	rjmp	.+148    	; 0x429c <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x17c>
		*powerMW = 600;
	}
	else if(*powerMW < 900)
    4208:	84 38       	cpi	r24, 0x84	; 132
    420a:	e3 e0       	ldi	r30, 0x03	; 3
    420c:	9e 07       	cpc	r25, r30
    420e:	30 f4       	brcc	.+12     	; 0x421c <_Z22txMilliwattsToSettingsPjPhS0_S0_+0xfc>
	{
		index = 8;
		*powerMW = 800;
    4210:	80 e2       	ldi	r24, 0x20	; 32
    4212:	93 e0       	ldi	r25, 0x03	; 3
    4214:	8d 93       	st	X+, r24
    4216:	9c 93       	st	X, r25
		index = 7;
		*powerMW = 600;
	}
	else if(*powerMW < 900)
	{
		index = 8;
    4218:	88 e0       	ldi	r24, 0x08	; 8
    421a:	40 c0       	rjmp	.+128    	; 0x429c <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x17c>
		*powerMW = 800;
	}
	else if(*powerMW < 1250)
    421c:	82 3e       	cpi	r24, 0xE2	; 226
    421e:	f4 e0       	ldi	r31, 0x04	; 4
    4220:	9f 07       	cpc	r25, r31
    4222:	30 f4       	brcc	.+12     	; 0x4230 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x110>
	{
		index = 9;
		*powerMW = 1000;
    4224:	88 ee       	ldi	r24, 0xE8	; 232
    4226:	93 e0       	ldi	r25, 0x03	; 3
    4228:	8d 93       	st	X+, r24
    422a:	9c 93       	st	X, r25
		index = 8;
		*powerMW = 800;
	}
	else if(*powerMW < 1250)
	{
		index = 9;
    422c:	89 e0       	ldi	r24, 0x09	; 9
    422e:	36 c0       	rjmp	.+108    	; 0x429c <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x17c>
		*powerMW = 1000;
	}
	else if(*powerMW < 1750)
    4230:	86 3d       	cpi	r24, 0xD6	; 214
    4232:	e6 e0       	ldi	r30, 0x06	; 6
    4234:	9e 07       	cpc	r25, r30
    4236:	30 f4       	brcc	.+12     	; 0x4244 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x124>
	{
		index = 10;
		*powerMW = 1500;
    4238:	8c ed       	ldi	r24, 0xDC	; 220
    423a:	95 e0       	ldi	r25, 0x05	; 5
    423c:	8d 93       	st	X+, r24
    423e:	9c 93       	st	X, r25
		index = 9;
		*powerMW = 1000;
	}
	else if(*powerMW < 1750)
	{
		index = 10;
    4240:	8a e0       	ldi	r24, 0x0A	; 10
    4242:	2c c0       	rjmp	.+88     	; 0x429c <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x17c>
		*powerMW = 1500;
	}
	else if(*powerMW < 2250)
    4244:	8a 3c       	cpi	r24, 0xCA	; 202
    4246:	f8 e0       	ldi	r31, 0x08	; 8
    4248:	9f 07       	cpc	r25, r31
    424a:	30 f4       	brcc	.+12     	; 0x4258 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x138>
	{
		index = 11;
		*powerMW = 2000;
    424c:	80 ed       	ldi	r24, 0xD0	; 208
    424e:	97 e0       	ldi	r25, 0x07	; 7
    4250:	8d 93       	st	X+, r24
    4252:	9c 93       	st	X, r25
		index = 10;
		*powerMW = 1500;
	}
	else if(*powerMW < 2250)
	{
		index = 11;
    4254:	8b e0       	ldi	r24, 0x0B	; 11
    4256:	22 c0       	rjmp	.+68     	; 0x429c <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x17c>
		*powerMW = 2000;
	}
	else if(*powerMW < 2750)
    4258:	8e 3b       	cpi	r24, 0xBE	; 190
    425a:	ea e0       	ldi	r30, 0x0A	; 10
    425c:	9e 07       	cpc	r25, r30
    425e:	30 f4       	brcc	.+12     	; 0x426c <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x14c>
	{
		index = 12;
		*powerMW = 2500;
    4260:	84 ec       	ldi	r24, 0xC4	; 196
    4262:	99 e0       	ldi	r25, 0x09	; 9
    4264:	8d 93       	st	X+, r24
    4266:	9c 93       	st	X, r25
		index = 11;
		*powerMW = 2000;
	}
	else if(*powerMW < 2750)
	{
		index = 12;
    4268:	8c e0       	ldi	r24, 0x0C	; 12
    426a:	18 c0       	rjmp	.+48     	; 0x429c <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x17c>
		*powerMW = 2500;
	}
	else if(*powerMW < 3500)
    426c:	8c 3a       	cpi	r24, 0xAC	; 172
    426e:	fd e0       	ldi	r31, 0x0D	; 13
    4270:	9f 07       	cpc	r25, r31
    4272:	30 f4       	brcc	.+12     	; 0x4280 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x160>
	{
		index = 13;
		*powerMW = 3000;
    4274:	88 eb       	ldi	r24, 0xB8	; 184
    4276:	9b e0       	ldi	r25, 0x0B	; 11
    4278:	8d 93       	st	X+, r24
    427a:	9c 93       	st	X, r25
		index = 12;
		*powerMW = 2500;
	}
	else if(*powerMW < 3500)
	{
		index = 13;
    427c:	8d e0       	ldi	r24, 0x0D	; 13
    427e:	0e c0       	rjmp	.+28     	; 0x429c <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x17c>
		*powerMW = 3000;
	}
	else if(*powerMW < 4500)
    4280:	84 39       	cpi	r24, 0x94	; 148
    4282:	91 41       	sbci	r25, 0x11	; 17
    4284:	30 f4       	brcc	.+12     	; 0x4292 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x172>
	{
		index = 14;
		*powerMW = 4000;
    4286:	80 ea       	ldi	r24, 0xA0	; 160
    4288:	9f e0       	ldi	r25, 0x0F	; 15
    428a:	8d 93       	st	X+, r24
    428c:	9c 93       	st	X, r25
		index = 13;
		*powerMW = 3000;
	}
	else if(*powerMW < 4500)
	{
		index = 14;
    428e:	8e e0       	ldi	r24, 0x0E	; 14
    4290:	05 c0       	rjmp	.+10     	; 0x429c <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x17c>
		*powerMW = 4000;
	}
	else
	{
		index = 15;
		*powerMW = 5000;
    4292:	88 e8       	ldi	r24, 0x88	; 136
    4294:	93 e1       	ldi	r25, 0x13	; 19
    4296:	8d 93       	st	X+, r24
    4298:	9c 93       	st	X, r25
		index = 14;
		*powerMW = 4000;
	}
	else
	{
		index = 15;
    429a:	8f e0       	ldi	r24, 0x0F	; 15
    429c:	89 01       	movw	r16, r18
    429e:	7a 01       	movw	r14, r20
    42a0:	6b 01       	movw	r12, r22
		*powerMW = 5000;
	}

	*driveLevel = eeprom_read_byte(&ee_80m_power_table[index]);
    42a2:	90 e0       	ldi	r25, 0x00	; 0
    42a4:	81 5f       	subi	r24, 0xF1	; 241
    42a6:	9f 4f       	sbci	r25, 0xFF	; 255
    42a8:	0e 94 1c 29 	call	0x5238	; 0x5238 <eeprom_read_byte>
    42ac:	f6 01       	movw	r30, r12
    42ae:	80 83       	st	Z, r24
	*modLevelHigh = 0;
    42b0:	f7 01       	movw	r30, r14
    42b2:	10 82       	st	Z, r1
	*modLevelLow = 0;
    42b4:	f8 01       	movw	r30, r16
    42b6:	10 82       	st	Z, r1
	*driveLevel = MIN(*driveLevel, MAX_80M_PWR_SETTING);

	return(ec);
    42b8:	8c 2f       	mov	r24, r28
    42ba:	01 c0       	rjmp	.+2      	; 0x42be <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x19e>
	int16_t maxPwr;
	uint8_t index;

	if(powerMW == NULL)
	{
		return(ERROR_CODE_SW_LOGIC_ERROR);
    42bc:	8f ec       	ldi	r24, 0xCF	; 207
	*modLevelHigh = 0;
	*modLevelLow = 0;
	*driveLevel = MIN(*driveLevel, MAX_80M_PWR_SETTING);

	return(ec);
}
    42be:	cf 91       	pop	r28
    42c0:	1f 91       	pop	r17
    42c2:	0f 91       	pop	r16
    42c4:	ff 90       	pop	r15
    42c6:	ef 90       	pop	r14
    42c8:	df 90       	pop	r13
    42ca:	cf 90       	pop	r12
    42cc:	08 95       	ret

000042ce <_Z18txIsAntennaForBandv>:

/**
 */
BOOL __attribute__((optimize("O0"))) txIsAntennaForBand(void)
{
    42ce:	cf 93       	push	r28
    42d0:	df 93       	push	r29
    42d2:	1f 92       	push	r1
    42d4:	cd b7       	in	r28, 0x3d	; 61
    42d6:	de b7       	in	r29, 0x3e	; 62
	BOOL result = FALSE;
    42d8:	19 82       	std	Y+1, r1	; 0x01

	switch(g_antenna_connect_state)
    42da:	80 91 2b 41 	lds	r24, 0x412B	; 0x80412b <g_antenna_connect_state>
    42de:	88 2f       	mov	r24, r24
    42e0:	90 e0       	ldi	r25, 0x00	; 0
    42e2:	03 97       	sbiw	r24, 0x03	; 3
    42e4:	09 f0       	breq	.+2      	; 0x42e8 <_Z18txIsAntennaForBandv+0x1a>

		default:
		{

		}
		break;
    42e6:	03 c0       	rjmp	.+6      	; 0x42ee <_Z18txIsAntennaForBandv+0x20>

	switch(g_antenna_connect_state)
	{
		case ANT_80M_CONNECTED:
		{
			result = TRUE;
    42e8:	81 e0       	ldi	r24, 0x01	; 1
    42ea:	89 83       	std	Y+1, r24	; 0x01
		}
		break;
    42ec:	00 00       	nop

		}
		break;
	}

	return( result);
    42ee:	89 81       	ldd	r24, Y+1	; 0x01
}
    42f0:	0f 90       	pop	r0
    42f2:	df 91       	pop	r29
    42f4:	cf 91       	pop	r28
    42f6:	08 95       	ret

000042f8 <USART0_enable_tx>:
 *
 * \return Nothing
 */
void USART1_enable_rx()
{
	USART1.CTRLB |= USART_RXEN_bm;
    42f8:	e0 e0       	ldi	r30, 0x00	; 0
    42fa:	f8 e0       	ldi	r31, 0x08	; 8
    42fc:	86 81       	ldd	r24, Z+6	; 0x06
    42fe:	80 64       	ori	r24, 0x40	; 64
    4300:	86 83       	std	Z+6, r24	; 0x06
    4302:	85 81       	ldd	r24, Z+5	; 0x05
    4304:	80 62       	ori	r24, 0x20	; 32
    4306:	85 83       	std	Z+5, r24	; 0x05
    4308:	08 95       	ret

0000430a <USART0_get_data>:
    430a:	80 91 00 08 	lds	r24, 0x0800	; 0x800800 <__TEXT_REGION_LENGTH__+0x7e0800>
    430e:	08 95       	ret

00004310 <USART1_init>:
    4310:	0e 94 d6 22 	call	0x45ac	; 0x45ac <__floatunsisf>
    4314:	20 e0       	ldi	r18, 0x00	; 0
    4316:	30 e0       	ldi	r19, 0x00	; 0
    4318:	40 e8       	ldi	r20, 0x80	; 128
    431a:	51 e4       	ldi	r21, 0x41	; 65
    431c:	0e 94 8d 23 	call	0x471a	; 0x471a <__mulsf3>
    4320:	9b 01       	movw	r18, r22
    4322:	ac 01       	movw	r20, r24
    4324:	60 e0       	ldi	r22, 0x00	; 0
    4326:	74 e2       	ldi	r23, 0x24	; 36
    4328:	84 e7       	ldi	r24, 0x74	; 116
    432a:	9d e4       	ldi	r25, 0x4D	; 77
    432c:	0e 94 2e 22 	call	0x445c	; 0x445c <__divsf3>
    4330:	20 e0       	ldi	r18, 0x00	; 0
    4332:	30 e0       	ldi	r19, 0x00	; 0
    4334:	40 e0       	ldi	r20, 0x00	; 0
    4336:	5f e3       	ldi	r21, 0x3F	; 63
    4338:	0e 94 bd 21 	call	0x437a	; 0x437a <__addsf3>
    433c:	0e 94 a7 22 	call	0x454e	; 0x454e <__fixunssfsi>
    4340:	e0 e2       	ldi	r30, 0x20	; 32
    4342:	f8 e0       	ldi	r31, 0x08	; 8
    4344:	60 87       	std	Z+8, r22	; 0x08
    4346:	71 87       	std	Z+9, r23	; 0x09
    4348:	80 e8       	ldi	r24, 0x80	; 128
    434a:	85 83       	std	Z+5, r24	; 0x05
    434c:	80 ec       	ldi	r24, 0xC0	; 192
    434e:	86 83       	std	Z+6, r24	; 0x06
    4350:	80 e0       	ldi	r24, 0x00	; 0
    4352:	08 95       	ret

00004354 <USART1_enable_tx>:
 *
 * \return Nothing
 */
void USART1_enable_tx()
{
	USART1.CTRLB |= USART_TXEN_bm;
    4354:	e0 e2       	ldi	r30, 0x20	; 32
    4356:	f8 e0       	ldi	r31, 0x08	; 8
    4358:	86 81       	ldd	r24, Z+6	; 0x06
    435a:	80 64       	ori	r24, 0x40	; 64
    435c:	86 83       	std	Z+6, r24	; 0x06
	USART1.CTRLA |= 1 << USART_DREIE_bp; /* Transmit Data Ready Interrupt Enable: enable */
    435e:	85 81       	ldd	r24, Z+5	; 0x05
    4360:	80 62       	ori	r24, 0x20	; 32
    4362:	85 83       	std	Z+5, r24	; 0x05
    4364:	08 95       	ret

00004366 <USART1_disable>:
 *
 * \return Nothing
 */
void USART1_disable()
{
	USART1.CTRLB &= ~(USART_RXEN_bm | USART_TXEN_bm);
    4366:	e0 e2       	ldi	r30, 0x20	; 32
    4368:	f8 e0       	ldi	r31, 0x08	; 8
    436a:	86 81       	ldd	r24, Z+6	; 0x06
    436c:	8f 73       	andi	r24, 0x3F	; 63
    436e:	86 83       	std	Z+6, r24	; 0x06
    4370:	08 95       	ret

00004372 <USART1_get_data>:
 *
 * \return Data register from USART1 module
 */
uint8_t USART1_get_data()
{
	return USART1.RXDATAL;
    4372:	80 91 20 08 	lds	r24, 0x0820	; 0x800820 <__TEXT_REGION_LENGTH__+0x7e0820>
}
    4376:	08 95       	ret

00004378 <__subsf3>:
    4378:	50 58       	subi	r21, 0x80	; 128

0000437a <__addsf3>:
    437a:	bb 27       	eor	r27, r27
    437c:	aa 27       	eor	r26, r26
    437e:	0e 94 d4 21 	call	0x43a8	; 0x43a8 <__addsf3x>
    4382:	0c 94 4e 23 	jmp	0x469c	; 0x469c <__fp_round>
    4386:	0e 94 40 23 	call	0x4680	; 0x4680 <__fp_pscA>
    438a:	38 f0       	brcs	.+14     	; 0x439a <__addsf3+0x20>
    438c:	0e 94 47 23 	call	0x468e	; 0x468e <__fp_pscB>
    4390:	20 f0       	brcs	.+8      	; 0x439a <__addsf3+0x20>
    4392:	39 f4       	brne	.+14     	; 0x43a2 <__addsf3+0x28>
    4394:	9f 3f       	cpi	r25, 0xFF	; 255
    4396:	19 f4       	brne	.+6      	; 0x439e <__addsf3+0x24>
    4398:	26 f4       	brtc	.+8      	; 0x43a2 <__addsf3+0x28>
    439a:	0c 94 3d 23 	jmp	0x467a	; 0x467a <__fp_nan>
    439e:	0e f4       	brtc	.+2      	; 0x43a2 <__addsf3+0x28>
    43a0:	e0 95       	com	r30
    43a2:	e7 fb       	bst	r30, 7
    43a4:	0c 94 37 23 	jmp	0x466e	; 0x466e <__fp_inf>

000043a8 <__addsf3x>:
    43a8:	e9 2f       	mov	r30, r25
    43aa:	0e 94 5f 23 	call	0x46be	; 0x46be <__fp_split3>
    43ae:	58 f3       	brcs	.-42     	; 0x4386 <__addsf3+0xc>
    43b0:	ba 17       	cp	r27, r26
    43b2:	62 07       	cpc	r22, r18
    43b4:	73 07       	cpc	r23, r19
    43b6:	84 07       	cpc	r24, r20
    43b8:	95 07       	cpc	r25, r21
    43ba:	20 f0       	brcs	.+8      	; 0x43c4 <__addsf3x+0x1c>
    43bc:	79 f4       	brne	.+30     	; 0x43dc <__addsf3x+0x34>
    43be:	a6 f5       	brtc	.+104    	; 0x4428 <__addsf3x+0x80>
    43c0:	0c 94 81 23 	jmp	0x4702	; 0x4702 <__fp_zero>
    43c4:	0e f4       	brtc	.+2      	; 0x43c8 <__addsf3x+0x20>
    43c6:	e0 95       	com	r30
    43c8:	0b 2e       	mov	r0, r27
    43ca:	ba 2f       	mov	r27, r26
    43cc:	a0 2d       	mov	r26, r0
    43ce:	0b 01       	movw	r0, r22
    43d0:	b9 01       	movw	r22, r18
    43d2:	90 01       	movw	r18, r0
    43d4:	0c 01       	movw	r0, r24
    43d6:	ca 01       	movw	r24, r20
    43d8:	a0 01       	movw	r20, r0
    43da:	11 24       	eor	r1, r1
    43dc:	ff 27       	eor	r31, r31
    43de:	59 1b       	sub	r21, r25
    43e0:	99 f0       	breq	.+38     	; 0x4408 <__addsf3x+0x60>
    43e2:	59 3f       	cpi	r21, 0xF9	; 249
    43e4:	50 f4       	brcc	.+20     	; 0x43fa <__addsf3x+0x52>
    43e6:	50 3e       	cpi	r21, 0xE0	; 224
    43e8:	68 f1       	brcs	.+90     	; 0x4444 <__addsf3x+0x9c>
    43ea:	1a 16       	cp	r1, r26
    43ec:	f0 40       	sbci	r31, 0x00	; 0
    43ee:	a2 2f       	mov	r26, r18
    43f0:	23 2f       	mov	r18, r19
    43f2:	34 2f       	mov	r19, r20
    43f4:	44 27       	eor	r20, r20
    43f6:	58 5f       	subi	r21, 0xF8	; 248
    43f8:	f3 cf       	rjmp	.-26     	; 0x43e0 <__addsf3x+0x38>
    43fa:	46 95       	lsr	r20
    43fc:	37 95       	ror	r19
    43fe:	27 95       	ror	r18
    4400:	a7 95       	ror	r26
    4402:	f0 40       	sbci	r31, 0x00	; 0
    4404:	53 95       	inc	r21
    4406:	c9 f7       	brne	.-14     	; 0x43fa <__addsf3x+0x52>
    4408:	7e f4       	brtc	.+30     	; 0x4428 <__addsf3x+0x80>
    440a:	1f 16       	cp	r1, r31
    440c:	ba 0b       	sbc	r27, r26
    440e:	62 0b       	sbc	r22, r18
    4410:	73 0b       	sbc	r23, r19
    4412:	84 0b       	sbc	r24, r20
    4414:	ba f0       	brmi	.+46     	; 0x4444 <__addsf3x+0x9c>
    4416:	91 50       	subi	r25, 0x01	; 1
    4418:	a1 f0       	breq	.+40     	; 0x4442 <__addsf3x+0x9a>
    441a:	ff 0f       	add	r31, r31
    441c:	bb 1f       	adc	r27, r27
    441e:	66 1f       	adc	r22, r22
    4420:	77 1f       	adc	r23, r23
    4422:	88 1f       	adc	r24, r24
    4424:	c2 f7       	brpl	.-16     	; 0x4416 <__addsf3x+0x6e>
    4426:	0e c0       	rjmp	.+28     	; 0x4444 <__addsf3x+0x9c>
    4428:	ba 0f       	add	r27, r26
    442a:	62 1f       	adc	r22, r18
    442c:	73 1f       	adc	r23, r19
    442e:	84 1f       	adc	r24, r20
    4430:	48 f4       	brcc	.+18     	; 0x4444 <__addsf3x+0x9c>
    4432:	87 95       	ror	r24
    4434:	77 95       	ror	r23
    4436:	67 95       	ror	r22
    4438:	b7 95       	ror	r27
    443a:	f7 95       	ror	r31
    443c:	9e 3f       	cpi	r25, 0xFE	; 254
    443e:	08 f0       	brcs	.+2      	; 0x4442 <__addsf3x+0x9a>
    4440:	b0 cf       	rjmp	.-160    	; 0x43a2 <__addsf3+0x28>
    4442:	93 95       	inc	r25
    4444:	88 0f       	add	r24, r24
    4446:	08 f0       	brcs	.+2      	; 0x444a <__addsf3x+0xa2>
    4448:	99 27       	eor	r25, r25
    444a:	ee 0f       	add	r30, r30
    444c:	97 95       	ror	r25
    444e:	87 95       	ror	r24
    4450:	08 95       	ret

00004452 <__cmpsf2>:
    4452:	0e 94 13 23 	call	0x4626	; 0x4626 <__fp_cmp>
    4456:	08 f4       	brcc	.+2      	; 0x445a <__cmpsf2+0x8>
    4458:	81 e0       	ldi	r24, 0x01	; 1
    445a:	08 95       	ret

0000445c <__divsf3>:
    445c:	0e 94 42 22 	call	0x4484	; 0x4484 <__divsf3x>
    4460:	0c 94 4e 23 	jmp	0x469c	; 0x469c <__fp_round>
    4464:	0e 94 47 23 	call	0x468e	; 0x468e <__fp_pscB>
    4468:	58 f0       	brcs	.+22     	; 0x4480 <__divsf3+0x24>
    446a:	0e 94 40 23 	call	0x4680	; 0x4680 <__fp_pscA>
    446e:	40 f0       	brcs	.+16     	; 0x4480 <__divsf3+0x24>
    4470:	29 f4       	brne	.+10     	; 0x447c <__divsf3+0x20>
    4472:	5f 3f       	cpi	r21, 0xFF	; 255
    4474:	29 f0       	breq	.+10     	; 0x4480 <__divsf3+0x24>
    4476:	0c 94 37 23 	jmp	0x466e	; 0x466e <__fp_inf>
    447a:	51 11       	cpse	r21, r1
    447c:	0c 94 82 23 	jmp	0x4704	; 0x4704 <__fp_szero>
    4480:	0c 94 3d 23 	jmp	0x467a	; 0x467a <__fp_nan>

00004484 <__divsf3x>:
    4484:	0e 94 5f 23 	call	0x46be	; 0x46be <__fp_split3>
    4488:	68 f3       	brcs	.-38     	; 0x4464 <__divsf3+0x8>

0000448a <__divsf3_pse>:
    448a:	99 23       	and	r25, r25
    448c:	b1 f3       	breq	.-20     	; 0x447a <__divsf3+0x1e>
    448e:	55 23       	and	r21, r21
    4490:	91 f3       	breq	.-28     	; 0x4476 <__divsf3+0x1a>
    4492:	95 1b       	sub	r25, r21
    4494:	55 0b       	sbc	r21, r21
    4496:	bb 27       	eor	r27, r27
    4498:	aa 27       	eor	r26, r26
    449a:	62 17       	cp	r22, r18
    449c:	73 07       	cpc	r23, r19
    449e:	84 07       	cpc	r24, r20
    44a0:	38 f0       	brcs	.+14     	; 0x44b0 <__divsf3_pse+0x26>
    44a2:	9f 5f       	subi	r25, 0xFF	; 255
    44a4:	5f 4f       	sbci	r21, 0xFF	; 255
    44a6:	22 0f       	add	r18, r18
    44a8:	33 1f       	adc	r19, r19
    44aa:	44 1f       	adc	r20, r20
    44ac:	aa 1f       	adc	r26, r26
    44ae:	a9 f3       	breq	.-22     	; 0x449a <__divsf3_pse+0x10>
    44b0:	35 d0       	rcall	.+106    	; 0x451c <__divsf3_pse+0x92>
    44b2:	0e 2e       	mov	r0, r30
    44b4:	3a f0       	brmi	.+14     	; 0x44c4 <__divsf3_pse+0x3a>
    44b6:	e0 e8       	ldi	r30, 0x80	; 128
    44b8:	32 d0       	rcall	.+100    	; 0x451e <__divsf3_pse+0x94>
    44ba:	91 50       	subi	r25, 0x01	; 1
    44bc:	50 40       	sbci	r21, 0x00	; 0
    44be:	e6 95       	lsr	r30
    44c0:	00 1c       	adc	r0, r0
    44c2:	ca f7       	brpl	.-14     	; 0x44b6 <__divsf3_pse+0x2c>
    44c4:	2b d0       	rcall	.+86     	; 0x451c <__divsf3_pse+0x92>
    44c6:	fe 2f       	mov	r31, r30
    44c8:	29 d0       	rcall	.+82     	; 0x451c <__divsf3_pse+0x92>
    44ca:	66 0f       	add	r22, r22
    44cc:	77 1f       	adc	r23, r23
    44ce:	88 1f       	adc	r24, r24
    44d0:	bb 1f       	adc	r27, r27
    44d2:	26 17       	cp	r18, r22
    44d4:	37 07       	cpc	r19, r23
    44d6:	48 07       	cpc	r20, r24
    44d8:	ab 07       	cpc	r26, r27
    44da:	b0 e8       	ldi	r27, 0x80	; 128
    44dc:	09 f0       	breq	.+2      	; 0x44e0 <__divsf3_pse+0x56>
    44de:	bb 0b       	sbc	r27, r27
    44e0:	80 2d       	mov	r24, r0
    44e2:	bf 01       	movw	r22, r30
    44e4:	ff 27       	eor	r31, r31
    44e6:	93 58       	subi	r25, 0x83	; 131
    44e8:	5f 4f       	sbci	r21, 0xFF	; 255
    44ea:	3a f0       	brmi	.+14     	; 0x44fa <__divsf3_pse+0x70>
    44ec:	9e 3f       	cpi	r25, 0xFE	; 254
    44ee:	51 05       	cpc	r21, r1
    44f0:	78 f0       	brcs	.+30     	; 0x4510 <__divsf3_pse+0x86>
    44f2:	0c 94 37 23 	jmp	0x466e	; 0x466e <__fp_inf>
    44f6:	0c 94 82 23 	jmp	0x4704	; 0x4704 <__fp_szero>
    44fa:	5f 3f       	cpi	r21, 0xFF	; 255
    44fc:	e4 f3       	brlt	.-8      	; 0x44f6 <__divsf3_pse+0x6c>
    44fe:	98 3e       	cpi	r25, 0xE8	; 232
    4500:	d4 f3       	brlt	.-12     	; 0x44f6 <__divsf3_pse+0x6c>
    4502:	86 95       	lsr	r24
    4504:	77 95       	ror	r23
    4506:	67 95       	ror	r22
    4508:	b7 95       	ror	r27
    450a:	f7 95       	ror	r31
    450c:	9f 5f       	subi	r25, 0xFF	; 255
    450e:	c9 f7       	brne	.-14     	; 0x4502 <__divsf3_pse+0x78>
    4510:	88 0f       	add	r24, r24
    4512:	91 1d       	adc	r25, r1
    4514:	96 95       	lsr	r25
    4516:	87 95       	ror	r24
    4518:	97 f9       	bld	r25, 7
    451a:	08 95       	ret
    451c:	e1 e0       	ldi	r30, 0x01	; 1
    451e:	66 0f       	add	r22, r22
    4520:	77 1f       	adc	r23, r23
    4522:	88 1f       	adc	r24, r24
    4524:	bb 1f       	adc	r27, r27
    4526:	62 17       	cp	r22, r18
    4528:	73 07       	cpc	r23, r19
    452a:	84 07       	cpc	r24, r20
    452c:	ba 07       	cpc	r27, r26
    452e:	20 f0       	brcs	.+8      	; 0x4538 <__divsf3_pse+0xae>
    4530:	62 1b       	sub	r22, r18
    4532:	73 0b       	sbc	r23, r19
    4534:	84 0b       	sbc	r24, r20
    4536:	ba 0b       	sbc	r27, r26
    4538:	ee 1f       	adc	r30, r30
    453a:	88 f7       	brcc	.-30     	; 0x451e <__divsf3_pse+0x94>
    453c:	e0 95       	com	r30
    453e:	08 95       	ret

00004540 <__fixsfsi>:
    4540:	0e 94 a7 22 	call	0x454e	; 0x454e <__fixunssfsi>
    4544:	68 94       	set
    4546:	b1 11       	cpse	r27, r1
    4548:	0c 94 82 23 	jmp	0x4704	; 0x4704 <__fp_szero>
    454c:	08 95       	ret

0000454e <__fixunssfsi>:
    454e:	0e 94 67 23 	call	0x46ce	; 0x46ce <__fp_splitA>
    4552:	88 f0       	brcs	.+34     	; 0x4576 <__fixunssfsi+0x28>
    4554:	9f 57       	subi	r25, 0x7F	; 127
    4556:	98 f0       	brcs	.+38     	; 0x457e <__fixunssfsi+0x30>
    4558:	b9 2f       	mov	r27, r25
    455a:	99 27       	eor	r25, r25
    455c:	b7 51       	subi	r27, 0x17	; 23
    455e:	b0 f0       	brcs	.+44     	; 0x458c <__fixunssfsi+0x3e>
    4560:	e1 f0       	breq	.+56     	; 0x459a <__fixunssfsi+0x4c>
    4562:	66 0f       	add	r22, r22
    4564:	77 1f       	adc	r23, r23
    4566:	88 1f       	adc	r24, r24
    4568:	99 1f       	adc	r25, r25
    456a:	1a f0       	brmi	.+6      	; 0x4572 <__fixunssfsi+0x24>
    456c:	ba 95       	dec	r27
    456e:	c9 f7       	brne	.-14     	; 0x4562 <__fixunssfsi+0x14>
    4570:	14 c0       	rjmp	.+40     	; 0x459a <__fixunssfsi+0x4c>
    4572:	b1 30       	cpi	r27, 0x01	; 1
    4574:	91 f0       	breq	.+36     	; 0x459a <__fixunssfsi+0x4c>
    4576:	0e 94 81 23 	call	0x4702	; 0x4702 <__fp_zero>
    457a:	b1 e0       	ldi	r27, 0x01	; 1
    457c:	08 95       	ret
    457e:	0c 94 81 23 	jmp	0x4702	; 0x4702 <__fp_zero>
    4582:	67 2f       	mov	r22, r23
    4584:	78 2f       	mov	r23, r24
    4586:	88 27       	eor	r24, r24
    4588:	b8 5f       	subi	r27, 0xF8	; 248
    458a:	39 f0       	breq	.+14     	; 0x459a <__fixunssfsi+0x4c>
    458c:	b9 3f       	cpi	r27, 0xF9	; 249
    458e:	cc f3       	brlt	.-14     	; 0x4582 <__fixunssfsi+0x34>
    4590:	86 95       	lsr	r24
    4592:	77 95       	ror	r23
    4594:	67 95       	ror	r22
    4596:	b3 95       	inc	r27
    4598:	d9 f7       	brne	.-10     	; 0x4590 <__fixunssfsi+0x42>
    459a:	3e f4       	brtc	.+14     	; 0x45aa <__fixunssfsi+0x5c>
    459c:	90 95       	com	r25
    459e:	80 95       	com	r24
    45a0:	70 95       	com	r23
    45a2:	61 95       	neg	r22
    45a4:	7f 4f       	sbci	r23, 0xFF	; 255
    45a6:	8f 4f       	sbci	r24, 0xFF	; 255
    45a8:	9f 4f       	sbci	r25, 0xFF	; 255
    45aa:	08 95       	ret

000045ac <__floatunsisf>:
    45ac:	e8 94       	clt
    45ae:	09 c0       	rjmp	.+18     	; 0x45c2 <__floatsisf+0x12>

000045b0 <__floatsisf>:
    45b0:	97 fb       	bst	r25, 7
    45b2:	3e f4       	brtc	.+14     	; 0x45c2 <__floatsisf+0x12>
    45b4:	90 95       	com	r25
    45b6:	80 95       	com	r24
    45b8:	70 95       	com	r23
    45ba:	61 95       	neg	r22
    45bc:	7f 4f       	sbci	r23, 0xFF	; 255
    45be:	8f 4f       	sbci	r24, 0xFF	; 255
    45c0:	9f 4f       	sbci	r25, 0xFF	; 255
    45c2:	99 23       	and	r25, r25
    45c4:	a9 f0       	breq	.+42     	; 0x45f0 <__floatsisf+0x40>
    45c6:	f9 2f       	mov	r31, r25
    45c8:	96 e9       	ldi	r25, 0x96	; 150
    45ca:	bb 27       	eor	r27, r27
    45cc:	93 95       	inc	r25
    45ce:	f6 95       	lsr	r31
    45d0:	87 95       	ror	r24
    45d2:	77 95       	ror	r23
    45d4:	67 95       	ror	r22
    45d6:	b7 95       	ror	r27
    45d8:	f1 11       	cpse	r31, r1
    45da:	f8 cf       	rjmp	.-16     	; 0x45cc <__floatsisf+0x1c>
    45dc:	fa f4       	brpl	.+62     	; 0x461c <__floatsisf+0x6c>
    45de:	bb 0f       	add	r27, r27
    45e0:	11 f4       	brne	.+4      	; 0x45e6 <__floatsisf+0x36>
    45e2:	60 ff       	sbrs	r22, 0
    45e4:	1b c0       	rjmp	.+54     	; 0x461c <__floatsisf+0x6c>
    45e6:	6f 5f       	subi	r22, 0xFF	; 255
    45e8:	7f 4f       	sbci	r23, 0xFF	; 255
    45ea:	8f 4f       	sbci	r24, 0xFF	; 255
    45ec:	9f 4f       	sbci	r25, 0xFF	; 255
    45ee:	16 c0       	rjmp	.+44     	; 0x461c <__floatsisf+0x6c>
    45f0:	88 23       	and	r24, r24
    45f2:	11 f0       	breq	.+4      	; 0x45f8 <__floatsisf+0x48>
    45f4:	96 e9       	ldi	r25, 0x96	; 150
    45f6:	11 c0       	rjmp	.+34     	; 0x461a <__floatsisf+0x6a>
    45f8:	77 23       	and	r23, r23
    45fa:	21 f0       	breq	.+8      	; 0x4604 <__floatsisf+0x54>
    45fc:	9e e8       	ldi	r25, 0x8E	; 142
    45fe:	87 2f       	mov	r24, r23
    4600:	76 2f       	mov	r23, r22
    4602:	05 c0       	rjmp	.+10     	; 0x460e <__floatsisf+0x5e>
    4604:	66 23       	and	r22, r22
    4606:	71 f0       	breq	.+28     	; 0x4624 <__floatsisf+0x74>
    4608:	96 e8       	ldi	r25, 0x86	; 134
    460a:	86 2f       	mov	r24, r22
    460c:	70 e0       	ldi	r23, 0x00	; 0
    460e:	60 e0       	ldi	r22, 0x00	; 0
    4610:	2a f0       	brmi	.+10     	; 0x461c <__floatsisf+0x6c>
    4612:	9a 95       	dec	r25
    4614:	66 0f       	add	r22, r22
    4616:	77 1f       	adc	r23, r23
    4618:	88 1f       	adc	r24, r24
    461a:	da f7       	brpl	.-10     	; 0x4612 <__floatsisf+0x62>
    461c:	88 0f       	add	r24, r24
    461e:	96 95       	lsr	r25
    4620:	87 95       	ror	r24
    4622:	97 f9       	bld	r25, 7
    4624:	08 95       	ret

00004626 <__fp_cmp>:
    4626:	99 0f       	add	r25, r25
    4628:	00 08       	sbc	r0, r0
    462a:	55 0f       	add	r21, r21
    462c:	aa 0b       	sbc	r26, r26
    462e:	e0 e8       	ldi	r30, 0x80	; 128
    4630:	fe ef       	ldi	r31, 0xFE	; 254
    4632:	16 16       	cp	r1, r22
    4634:	17 06       	cpc	r1, r23
    4636:	e8 07       	cpc	r30, r24
    4638:	f9 07       	cpc	r31, r25
    463a:	c0 f0       	brcs	.+48     	; 0x466c <__fp_cmp+0x46>
    463c:	12 16       	cp	r1, r18
    463e:	13 06       	cpc	r1, r19
    4640:	e4 07       	cpc	r30, r20
    4642:	f5 07       	cpc	r31, r21
    4644:	98 f0       	brcs	.+38     	; 0x466c <__fp_cmp+0x46>
    4646:	62 1b       	sub	r22, r18
    4648:	73 0b       	sbc	r23, r19
    464a:	84 0b       	sbc	r24, r20
    464c:	95 0b       	sbc	r25, r21
    464e:	39 f4       	brne	.+14     	; 0x465e <__fp_cmp+0x38>
    4650:	0a 26       	eor	r0, r26
    4652:	61 f0       	breq	.+24     	; 0x466c <__fp_cmp+0x46>
    4654:	23 2b       	or	r18, r19
    4656:	24 2b       	or	r18, r20
    4658:	25 2b       	or	r18, r21
    465a:	21 f4       	brne	.+8      	; 0x4664 <__fp_cmp+0x3e>
    465c:	08 95       	ret
    465e:	0a 26       	eor	r0, r26
    4660:	09 f4       	brne	.+2      	; 0x4664 <__fp_cmp+0x3e>
    4662:	a1 40       	sbci	r26, 0x01	; 1
    4664:	a6 95       	lsr	r26
    4666:	8f ef       	ldi	r24, 0xFF	; 255
    4668:	81 1d       	adc	r24, r1
    466a:	81 1d       	adc	r24, r1
    466c:	08 95       	ret

0000466e <__fp_inf>:
    466e:	97 f9       	bld	r25, 7
    4670:	9f 67       	ori	r25, 0x7F	; 127
    4672:	80 e8       	ldi	r24, 0x80	; 128
    4674:	70 e0       	ldi	r23, 0x00	; 0
    4676:	60 e0       	ldi	r22, 0x00	; 0
    4678:	08 95       	ret

0000467a <__fp_nan>:
    467a:	9f ef       	ldi	r25, 0xFF	; 255
    467c:	80 ec       	ldi	r24, 0xC0	; 192
    467e:	08 95       	ret

00004680 <__fp_pscA>:
    4680:	00 24       	eor	r0, r0
    4682:	0a 94       	dec	r0
    4684:	16 16       	cp	r1, r22
    4686:	17 06       	cpc	r1, r23
    4688:	18 06       	cpc	r1, r24
    468a:	09 06       	cpc	r0, r25
    468c:	08 95       	ret

0000468e <__fp_pscB>:
    468e:	00 24       	eor	r0, r0
    4690:	0a 94       	dec	r0
    4692:	12 16       	cp	r1, r18
    4694:	13 06       	cpc	r1, r19
    4696:	14 06       	cpc	r1, r20
    4698:	05 06       	cpc	r0, r21
    469a:	08 95       	ret

0000469c <__fp_round>:
    469c:	09 2e       	mov	r0, r25
    469e:	03 94       	inc	r0
    46a0:	00 0c       	add	r0, r0
    46a2:	11 f4       	brne	.+4      	; 0x46a8 <__fp_round+0xc>
    46a4:	88 23       	and	r24, r24
    46a6:	52 f0       	brmi	.+20     	; 0x46bc <__fp_round+0x20>
    46a8:	bb 0f       	add	r27, r27
    46aa:	40 f4       	brcc	.+16     	; 0x46bc <__fp_round+0x20>
    46ac:	bf 2b       	or	r27, r31
    46ae:	11 f4       	brne	.+4      	; 0x46b4 <__fp_round+0x18>
    46b0:	60 ff       	sbrs	r22, 0
    46b2:	04 c0       	rjmp	.+8      	; 0x46bc <__fp_round+0x20>
    46b4:	6f 5f       	subi	r22, 0xFF	; 255
    46b6:	7f 4f       	sbci	r23, 0xFF	; 255
    46b8:	8f 4f       	sbci	r24, 0xFF	; 255
    46ba:	9f 4f       	sbci	r25, 0xFF	; 255
    46bc:	08 95       	ret

000046be <__fp_split3>:
    46be:	57 fd       	sbrc	r21, 7
    46c0:	90 58       	subi	r25, 0x80	; 128
    46c2:	44 0f       	add	r20, r20
    46c4:	55 1f       	adc	r21, r21
    46c6:	59 f0       	breq	.+22     	; 0x46de <__fp_splitA+0x10>
    46c8:	5f 3f       	cpi	r21, 0xFF	; 255
    46ca:	71 f0       	breq	.+28     	; 0x46e8 <__fp_splitA+0x1a>
    46cc:	47 95       	ror	r20

000046ce <__fp_splitA>:
    46ce:	88 0f       	add	r24, r24
    46d0:	97 fb       	bst	r25, 7
    46d2:	99 1f       	adc	r25, r25
    46d4:	61 f0       	breq	.+24     	; 0x46ee <__fp_splitA+0x20>
    46d6:	9f 3f       	cpi	r25, 0xFF	; 255
    46d8:	79 f0       	breq	.+30     	; 0x46f8 <__fp_splitA+0x2a>
    46da:	87 95       	ror	r24
    46dc:	08 95       	ret
    46de:	12 16       	cp	r1, r18
    46e0:	13 06       	cpc	r1, r19
    46e2:	14 06       	cpc	r1, r20
    46e4:	55 1f       	adc	r21, r21
    46e6:	f2 cf       	rjmp	.-28     	; 0x46cc <__fp_split3+0xe>
    46e8:	46 95       	lsr	r20
    46ea:	f1 df       	rcall	.-30     	; 0x46ce <__fp_splitA>
    46ec:	08 c0       	rjmp	.+16     	; 0x46fe <__fp_splitA+0x30>
    46ee:	16 16       	cp	r1, r22
    46f0:	17 06       	cpc	r1, r23
    46f2:	18 06       	cpc	r1, r24
    46f4:	99 1f       	adc	r25, r25
    46f6:	f1 cf       	rjmp	.-30     	; 0x46da <__fp_splitA+0xc>
    46f8:	86 95       	lsr	r24
    46fa:	71 05       	cpc	r23, r1
    46fc:	61 05       	cpc	r22, r1
    46fe:	08 94       	sec
    4700:	08 95       	ret

00004702 <__fp_zero>:
    4702:	e8 94       	clt

00004704 <__fp_szero>:
    4704:	bb 27       	eor	r27, r27
    4706:	66 27       	eor	r22, r22
    4708:	77 27       	eor	r23, r23
    470a:	cb 01       	movw	r24, r22
    470c:	97 f9       	bld	r25, 7
    470e:	08 95       	ret

00004710 <__gesf2>:
    4710:	0e 94 13 23 	call	0x4626	; 0x4626 <__fp_cmp>
    4714:	08 f4       	brcc	.+2      	; 0x4718 <__gesf2+0x8>
    4716:	8f ef       	ldi	r24, 0xFF	; 255
    4718:	08 95       	ret

0000471a <__mulsf3>:
    471a:	0e 94 a0 23 	call	0x4740	; 0x4740 <__mulsf3x>
    471e:	0c 94 4e 23 	jmp	0x469c	; 0x469c <__fp_round>
    4722:	0e 94 40 23 	call	0x4680	; 0x4680 <__fp_pscA>
    4726:	38 f0       	brcs	.+14     	; 0x4736 <__mulsf3+0x1c>
    4728:	0e 94 47 23 	call	0x468e	; 0x468e <__fp_pscB>
    472c:	20 f0       	brcs	.+8      	; 0x4736 <__mulsf3+0x1c>
    472e:	95 23       	and	r25, r21
    4730:	11 f0       	breq	.+4      	; 0x4736 <__mulsf3+0x1c>
    4732:	0c 94 37 23 	jmp	0x466e	; 0x466e <__fp_inf>
    4736:	0c 94 3d 23 	jmp	0x467a	; 0x467a <__fp_nan>
    473a:	11 24       	eor	r1, r1
    473c:	0c 94 82 23 	jmp	0x4704	; 0x4704 <__fp_szero>

00004740 <__mulsf3x>:
    4740:	0e 94 5f 23 	call	0x46be	; 0x46be <__fp_split3>
    4744:	70 f3       	brcs	.-36     	; 0x4722 <__mulsf3+0x8>

00004746 <__mulsf3_pse>:
    4746:	95 9f       	mul	r25, r21
    4748:	c1 f3       	breq	.-16     	; 0x473a <__mulsf3+0x20>
    474a:	95 0f       	add	r25, r21
    474c:	50 e0       	ldi	r21, 0x00	; 0
    474e:	55 1f       	adc	r21, r21
    4750:	62 9f       	mul	r22, r18
    4752:	f0 01       	movw	r30, r0
    4754:	72 9f       	mul	r23, r18
    4756:	bb 27       	eor	r27, r27
    4758:	f0 0d       	add	r31, r0
    475a:	b1 1d       	adc	r27, r1
    475c:	63 9f       	mul	r22, r19
    475e:	aa 27       	eor	r26, r26
    4760:	f0 0d       	add	r31, r0
    4762:	b1 1d       	adc	r27, r1
    4764:	aa 1f       	adc	r26, r26
    4766:	64 9f       	mul	r22, r20
    4768:	66 27       	eor	r22, r22
    476a:	b0 0d       	add	r27, r0
    476c:	a1 1d       	adc	r26, r1
    476e:	66 1f       	adc	r22, r22
    4770:	82 9f       	mul	r24, r18
    4772:	22 27       	eor	r18, r18
    4774:	b0 0d       	add	r27, r0
    4776:	a1 1d       	adc	r26, r1
    4778:	62 1f       	adc	r22, r18
    477a:	73 9f       	mul	r23, r19
    477c:	b0 0d       	add	r27, r0
    477e:	a1 1d       	adc	r26, r1
    4780:	62 1f       	adc	r22, r18
    4782:	83 9f       	mul	r24, r19
    4784:	a0 0d       	add	r26, r0
    4786:	61 1d       	adc	r22, r1
    4788:	22 1f       	adc	r18, r18
    478a:	74 9f       	mul	r23, r20
    478c:	33 27       	eor	r19, r19
    478e:	a0 0d       	add	r26, r0
    4790:	61 1d       	adc	r22, r1
    4792:	23 1f       	adc	r18, r19
    4794:	84 9f       	mul	r24, r20
    4796:	60 0d       	add	r22, r0
    4798:	21 1d       	adc	r18, r1
    479a:	82 2f       	mov	r24, r18
    479c:	76 2f       	mov	r23, r22
    479e:	6a 2f       	mov	r22, r26
    47a0:	11 24       	eor	r1, r1
    47a2:	9f 57       	subi	r25, 0x7F	; 127
    47a4:	50 40       	sbci	r21, 0x00	; 0
    47a6:	9a f0       	brmi	.+38     	; 0x47ce <__mulsf3_pse+0x88>
    47a8:	f1 f0       	breq	.+60     	; 0x47e6 <__mulsf3_pse+0xa0>
    47aa:	88 23       	and	r24, r24
    47ac:	4a f0       	brmi	.+18     	; 0x47c0 <__mulsf3_pse+0x7a>
    47ae:	ee 0f       	add	r30, r30
    47b0:	ff 1f       	adc	r31, r31
    47b2:	bb 1f       	adc	r27, r27
    47b4:	66 1f       	adc	r22, r22
    47b6:	77 1f       	adc	r23, r23
    47b8:	88 1f       	adc	r24, r24
    47ba:	91 50       	subi	r25, 0x01	; 1
    47bc:	50 40       	sbci	r21, 0x00	; 0
    47be:	a9 f7       	brne	.-22     	; 0x47aa <__mulsf3_pse+0x64>
    47c0:	9e 3f       	cpi	r25, 0xFE	; 254
    47c2:	51 05       	cpc	r21, r1
    47c4:	80 f0       	brcs	.+32     	; 0x47e6 <__mulsf3_pse+0xa0>
    47c6:	0c 94 37 23 	jmp	0x466e	; 0x466e <__fp_inf>
    47ca:	0c 94 82 23 	jmp	0x4704	; 0x4704 <__fp_szero>
    47ce:	5f 3f       	cpi	r21, 0xFF	; 255
    47d0:	e4 f3       	brlt	.-8      	; 0x47ca <__mulsf3_pse+0x84>
    47d2:	98 3e       	cpi	r25, 0xE8	; 232
    47d4:	d4 f3       	brlt	.-12     	; 0x47ca <__mulsf3_pse+0x84>
    47d6:	86 95       	lsr	r24
    47d8:	77 95       	ror	r23
    47da:	67 95       	ror	r22
    47dc:	b7 95       	ror	r27
    47de:	f7 95       	ror	r31
    47e0:	e7 95       	ror	r30
    47e2:	9f 5f       	subi	r25, 0xFF	; 255
    47e4:	c1 f7       	brne	.-16     	; 0x47d6 <__mulsf3_pse+0x90>
    47e6:	fe 2b       	or	r31, r30
    47e8:	88 0f       	add	r24, r24
    47ea:	91 1d       	adc	r25, r1
    47ec:	96 95       	lsr	r25
    47ee:	87 95       	ror	r24
    47f0:	97 f9       	bld	r25, 7
    47f2:	08 95       	ret

000047f4 <__mulsi3>:
    47f4:	db 01       	movw	r26, r22
    47f6:	8f 93       	push	r24
    47f8:	9f 93       	push	r25
    47fa:	0e 94 92 24 	call	0x4924	; 0x4924 <__muluhisi3>
    47fe:	bf 91       	pop	r27
    4800:	af 91       	pop	r26
    4802:	a2 9f       	mul	r26, r18
    4804:	80 0d       	add	r24, r0
    4806:	91 1d       	adc	r25, r1
    4808:	a3 9f       	mul	r26, r19
    480a:	90 0d       	add	r25, r0
    480c:	b2 9f       	mul	r27, r18
    480e:	90 0d       	add	r25, r0
    4810:	11 24       	eor	r1, r1
    4812:	08 95       	ret

00004814 <__udivmodhi4>:
    4814:	aa 1b       	sub	r26, r26
    4816:	bb 1b       	sub	r27, r27
    4818:	51 e1       	ldi	r21, 0x11	; 17
    481a:	07 c0       	rjmp	.+14     	; 0x482a <__udivmodhi4_ep>

0000481c <__udivmodhi4_loop>:
    481c:	aa 1f       	adc	r26, r26
    481e:	bb 1f       	adc	r27, r27
    4820:	a6 17       	cp	r26, r22
    4822:	b7 07       	cpc	r27, r23
    4824:	10 f0       	brcs	.+4      	; 0x482a <__udivmodhi4_ep>
    4826:	a6 1b       	sub	r26, r22
    4828:	b7 0b       	sbc	r27, r23

0000482a <__udivmodhi4_ep>:
    482a:	88 1f       	adc	r24, r24
    482c:	99 1f       	adc	r25, r25
    482e:	5a 95       	dec	r21
    4830:	a9 f7       	brne	.-22     	; 0x481c <__udivmodhi4_loop>
    4832:	80 95       	com	r24
    4834:	90 95       	com	r25
    4836:	bc 01       	movw	r22, r24
    4838:	cd 01       	movw	r24, r26
    483a:	08 95       	ret

0000483c <__divmodhi4>:
    483c:	97 fb       	bst	r25, 7
    483e:	07 2e       	mov	r0, r23
    4840:	16 f4       	brtc	.+4      	; 0x4846 <__divmodhi4+0xa>
    4842:	00 94       	com	r0
    4844:	07 d0       	rcall	.+14     	; 0x4854 <__divmodhi4_neg1>
    4846:	77 fd       	sbrc	r23, 7
    4848:	09 d0       	rcall	.+18     	; 0x485c <__divmodhi4_neg2>
    484a:	0e 94 0a 24 	call	0x4814	; 0x4814 <__udivmodhi4>
    484e:	07 fc       	sbrc	r0, 7
    4850:	05 d0       	rcall	.+10     	; 0x485c <__divmodhi4_neg2>
    4852:	3e f4       	brtc	.+14     	; 0x4862 <__divmodhi4_exit>

00004854 <__divmodhi4_neg1>:
    4854:	90 95       	com	r25
    4856:	81 95       	neg	r24
    4858:	9f 4f       	sbci	r25, 0xFF	; 255
    485a:	08 95       	ret

0000485c <__divmodhi4_neg2>:
    485c:	70 95       	com	r23
    485e:	61 95       	neg	r22
    4860:	7f 4f       	sbci	r23, 0xFF	; 255

00004862 <__divmodhi4_exit>:
    4862:	08 95       	ret

00004864 <__udivmodsi4>:
    4864:	a1 e2       	ldi	r26, 0x21	; 33
    4866:	1a 2e       	mov	r1, r26
    4868:	aa 1b       	sub	r26, r26
    486a:	bb 1b       	sub	r27, r27
    486c:	fd 01       	movw	r30, r26
    486e:	0d c0       	rjmp	.+26     	; 0x488a <__udivmodsi4_ep>

00004870 <__udivmodsi4_loop>:
    4870:	aa 1f       	adc	r26, r26
    4872:	bb 1f       	adc	r27, r27
    4874:	ee 1f       	adc	r30, r30
    4876:	ff 1f       	adc	r31, r31
    4878:	a2 17       	cp	r26, r18
    487a:	b3 07       	cpc	r27, r19
    487c:	e4 07       	cpc	r30, r20
    487e:	f5 07       	cpc	r31, r21
    4880:	20 f0       	brcs	.+8      	; 0x488a <__udivmodsi4_ep>
    4882:	a2 1b       	sub	r26, r18
    4884:	b3 0b       	sbc	r27, r19
    4886:	e4 0b       	sbc	r30, r20
    4888:	f5 0b       	sbc	r31, r21

0000488a <__udivmodsi4_ep>:
    488a:	66 1f       	adc	r22, r22
    488c:	77 1f       	adc	r23, r23
    488e:	88 1f       	adc	r24, r24
    4890:	99 1f       	adc	r25, r25
    4892:	1a 94       	dec	r1
    4894:	69 f7       	brne	.-38     	; 0x4870 <__udivmodsi4_loop>
    4896:	60 95       	com	r22
    4898:	70 95       	com	r23
    489a:	80 95       	com	r24
    489c:	90 95       	com	r25
    489e:	9b 01       	movw	r18, r22
    48a0:	ac 01       	movw	r20, r24
    48a2:	bd 01       	movw	r22, r26
    48a4:	cf 01       	movw	r24, r30
    48a6:	08 95       	ret

000048a8 <__divmodsi4>:
    48a8:	05 2e       	mov	r0, r21
    48aa:	97 fb       	bst	r25, 7
    48ac:	1e f4       	brtc	.+6      	; 0x48b4 <__divmodsi4+0xc>
    48ae:	00 94       	com	r0
    48b0:	0e 94 6b 24 	call	0x48d6	; 0x48d6 <__negsi2>
    48b4:	57 fd       	sbrc	r21, 7
    48b6:	07 d0       	rcall	.+14     	; 0x48c6 <__divmodsi4_neg2>
    48b8:	0e 94 32 24 	call	0x4864	; 0x4864 <__udivmodsi4>
    48bc:	07 fc       	sbrc	r0, 7
    48be:	03 d0       	rcall	.+6      	; 0x48c6 <__divmodsi4_neg2>
    48c0:	4e f4       	brtc	.+18     	; 0x48d4 <__divmodsi4_exit>
    48c2:	0c 94 6b 24 	jmp	0x48d6	; 0x48d6 <__negsi2>

000048c6 <__divmodsi4_neg2>:
    48c6:	50 95       	com	r21
    48c8:	40 95       	com	r20
    48ca:	30 95       	com	r19
    48cc:	21 95       	neg	r18
    48ce:	3f 4f       	sbci	r19, 0xFF	; 255
    48d0:	4f 4f       	sbci	r20, 0xFF	; 255
    48d2:	5f 4f       	sbci	r21, 0xFF	; 255

000048d4 <__divmodsi4_exit>:
    48d4:	08 95       	ret

000048d6 <__negsi2>:
    48d6:	90 95       	com	r25
    48d8:	80 95       	com	r24
    48da:	70 95       	com	r23
    48dc:	61 95       	neg	r22
    48de:	7f 4f       	sbci	r23, 0xFF	; 255
    48e0:	8f 4f       	sbci	r24, 0xFF	; 255
    48e2:	9f 4f       	sbci	r25, 0xFF	; 255
    48e4:	08 95       	ret

000048e6 <__tablejump2__>:
    48e6:	ee 0f       	add	r30, r30
    48e8:	ff 1f       	adc	r31, r31
    48ea:	00 24       	eor	r0, r0
    48ec:	00 1c       	adc	r0, r0
    48ee:	0b be       	out	0x3b, r0	; 59
    48f0:	07 90       	elpm	r0, Z+
    48f2:	f6 91       	elpm	r31, Z
    48f4:	e0 2d       	mov	r30, r0
    48f6:	09 94       	ijmp

000048f8 <__umulhisi3>:
    48f8:	a2 9f       	mul	r26, r18
    48fa:	b0 01       	movw	r22, r0
    48fc:	b3 9f       	mul	r27, r19
    48fe:	c0 01       	movw	r24, r0
    4900:	a3 9f       	mul	r26, r19
    4902:	70 0d       	add	r23, r0
    4904:	81 1d       	adc	r24, r1
    4906:	11 24       	eor	r1, r1
    4908:	91 1d       	adc	r25, r1
    490a:	b2 9f       	mul	r27, r18
    490c:	70 0d       	add	r23, r0
    490e:	81 1d       	adc	r24, r1
    4910:	11 24       	eor	r1, r1
    4912:	91 1d       	adc	r25, r1
    4914:	08 95       	ret

00004916 <__usmulhisi3>:
    4916:	0e 94 7c 24 	call	0x48f8	; 0x48f8 <__umulhisi3>

0000491a <__usmulhisi3_tail>:
    491a:	b7 ff       	sbrs	r27, 7
    491c:	08 95       	ret
    491e:	82 1b       	sub	r24, r18
    4920:	93 0b       	sbc	r25, r19
    4922:	08 95       	ret

00004924 <__muluhisi3>:
    4924:	0e 94 7c 24 	call	0x48f8	; 0x48f8 <__umulhisi3>
    4928:	a5 9f       	mul	r26, r21
    492a:	90 0d       	add	r25, r0
    492c:	b4 9f       	mul	r27, r20
    492e:	90 0d       	add	r25, r0
    4930:	a4 9f       	mul	r26, r20
    4932:	80 0d       	add	r24, r0
    4934:	91 1d       	adc	r25, r1
    4936:	11 24       	eor	r1, r1
    4938:	08 95       	ret

0000493a <__mulshisi3>:
    493a:	b7 ff       	sbrs	r27, 7
    493c:	0c 94 92 24 	jmp	0x4924	; 0x4924 <__muluhisi3>

00004940 <__mulohisi3>:
    4940:	0e 94 92 24 	call	0x4924	; 0x4924 <__muluhisi3>
    4944:	82 1b       	sub	r24, r18
    4946:	93 0b       	sbc	r25, r19
    4948:	08 95       	ret

0000494a <malloc>:
    494a:	0f 93       	push	r16
    494c:	1f 93       	push	r17
    494e:	cf 93       	push	r28
    4950:	df 93       	push	r29
    4952:	82 30       	cpi	r24, 0x02	; 2
    4954:	91 05       	cpc	r25, r1
    4956:	10 f4       	brcc	.+4      	; 0x495c <malloc+0x12>
    4958:	82 e0       	ldi	r24, 0x02	; 2
    495a:	90 e0       	ldi	r25, 0x00	; 0
    495c:	e0 91 85 44 	lds	r30, 0x4485	; 0x804485 <__flp>
    4960:	f0 91 86 44 	lds	r31, 0x4486	; 0x804486 <__flp+0x1>
    4964:	20 e0       	ldi	r18, 0x00	; 0
    4966:	30 e0       	ldi	r19, 0x00	; 0
    4968:	a0 e0       	ldi	r26, 0x00	; 0
    496a:	b0 e0       	ldi	r27, 0x00	; 0
    496c:	30 97       	sbiw	r30, 0x00	; 0
    496e:	19 f1       	breq	.+70     	; 0x49b6 <malloc+0x6c>
    4970:	40 81       	ld	r20, Z
    4972:	51 81       	ldd	r21, Z+1	; 0x01
    4974:	02 81       	ldd	r16, Z+2	; 0x02
    4976:	13 81       	ldd	r17, Z+3	; 0x03
    4978:	48 17       	cp	r20, r24
    497a:	59 07       	cpc	r21, r25
    497c:	c8 f0       	brcs	.+50     	; 0x49b0 <malloc+0x66>
    497e:	84 17       	cp	r24, r20
    4980:	95 07       	cpc	r25, r21
    4982:	69 f4       	brne	.+26     	; 0x499e <malloc+0x54>
    4984:	10 97       	sbiw	r26, 0x00	; 0
    4986:	31 f0       	breq	.+12     	; 0x4994 <malloc+0x4a>
    4988:	12 96       	adiw	r26, 0x02	; 2
    498a:	0c 93       	st	X, r16
    498c:	12 97       	sbiw	r26, 0x02	; 2
    498e:	13 96       	adiw	r26, 0x03	; 3
    4990:	1c 93       	st	X, r17
    4992:	27 c0       	rjmp	.+78     	; 0x49e2 <malloc+0x98>
    4994:	00 93 85 44 	sts	0x4485, r16	; 0x804485 <__flp>
    4998:	10 93 86 44 	sts	0x4486, r17	; 0x804486 <__flp+0x1>
    499c:	22 c0       	rjmp	.+68     	; 0x49e2 <malloc+0x98>
    499e:	21 15       	cp	r18, r1
    49a0:	31 05       	cpc	r19, r1
    49a2:	19 f0       	breq	.+6      	; 0x49aa <malloc+0x60>
    49a4:	42 17       	cp	r20, r18
    49a6:	53 07       	cpc	r21, r19
    49a8:	18 f4       	brcc	.+6      	; 0x49b0 <malloc+0x66>
    49aa:	9a 01       	movw	r18, r20
    49ac:	bd 01       	movw	r22, r26
    49ae:	ef 01       	movw	r28, r30
    49b0:	df 01       	movw	r26, r30
    49b2:	f8 01       	movw	r30, r16
    49b4:	db cf       	rjmp	.-74     	; 0x496c <malloc+0x22>
    49b6:	21 15       	cp	r18, r1
    49b8:	31 05       	cpc	r19, r1
    49ba:	f9 f0       	breq	.+62     	; 0x49fa <malloc+0xb0>
    49bc:	28 1b       	sub	r18, r24
    49be:	39 0b       	sbc	r19, r25
    49c0:	24 30       	cpi	r18, 0x04	; 4
    49c2:	31 05       	cpc	r19, r1
    49c4:	80 f4       	brcc	.+32     	; 0x49e6 <malloc+0x9c>
    49c6:	8a 81       	ldd	r24, Y+2	; 0x02
    49c8:	9b 81       	ldd	r25, Y+3	; 0x03
    49ca:	61 15       	cp	r22, r1
    49cc:	71 05       	cpc	r23, r1
    49ce:	21 f0       	breq	.+8      	; 0x49d8 <malloc+0x8e>
    49d0:	fb 01       	movw	r30, r22
    49d2:	82 83       	std	Z+2, r24	; 0x02
    49d4:	93 83       	std	Z+3, r25	; 0x03
    49d6:	04 c0       	rjmp	.+8      	; 0x49e0 <malloc+0x96>
    49d8:	80 93 85 44 	sts	0x4485, r24	; 0x804485 <__flp>
    49dc:	90 93 86 44 	sts	0x4486, r25	; 0x804486 <__flp+0x1>
    49e0:	fe 01       	movw	r30, r28
    49e2:	32 96       	adiw	r30, 0x02	; 2
    49e4:	44 c0       	rjmp	.+136    	; 0x4a6e <malloc+0x124>
    49e6:	fe 01       	movw	r30, r28
    49e8:	e2 0f       	add	r30, r18
    49ea:	f3 1f       	adc	r31, r19
    49ec:	81 93       	st	Z+, r24
    49ee:	91 93       	st	Z+, r25
    49f0:	22 50       	subi	r18, 0x02	; 2
    49f2:	31 09       	sbc	r19, r1
    49f4:	28 83       	st	Y, r18
    49f6:	39 83       	std	Y+1, r19	; 0x01
    49f8:	3a c0       	rjmp	.+116    	; 0x4a6e <malloc+0x124>
    49fa:	20 91 83 44 	lds	r18, 0x4483	; 0x804483 <__brkval>
    49fe:	30 91 84 44 	lds	r19, 0x4484	; 0x804484 <__brkval+0x1>
    4a02:	23 2b       	or	r18, r19
    4a04:	41 f4       	brne	.+16     	; 0x4a16 <malloc+0xcc>
    4a06:	20 91 02 40 	lds	r18, 0x4002	; 0x804002 <__malloc_heap_start>
    4a0a:	30 91 03 40 	lds	r19, 0x4003	; 0x804003 <__malloc_heap_start+0x1>
    4a0e:	20 93 83 44 	sts	0x4483, r18	; 0x804483 <__brkval>
    4a12:	30 93 84 44 	sts	0x4484, r19	; 0x804484 <__brkval+0x1>
    4a16:	20 91 00 40 	lds	r18, 0x4000	; 0x804000 <__DATA_REGION_ORIGIN__>
    4a1a:	30 91 01 40 	lds	r19, 0x4001	; 0x804001 <__DATA_REGION_ORIGIN__+0x1>
    4a1e:	21 15       	cp	r18, r1
    4a20:	31 05       	cpc	r19, r1
    4a22:	41 f4       	brne	.+16     	; 0x4a34 <malloc+0xea>
    4a24:	2d b7       	in	r18, 0x3d	; 61
    4a26:	3e b7       	in	r19, 0x3e	; 62
    4a28:	40 91 04 40 	lds	r20, 0x4004	; 0x804004 <__malloc_margin>
    4a2c:	50 91 05 40 	lds	r21, 0x4005	; 0x804005 <__malloc_margin+0x1>
    4a30:	24 1b       	sub	r18, r20
    4a32:	35 0b       	sbc	r19, r21
    4a34:	e0 91 83 44 	lds	r30, 0x4483	; 0x804483 <__brkval>
    4a38:	f0 91 84 44 	lds	r31, 0x4484	; 0x804484 <__brkval+0x1>
    4a3c:	e2 17       	cp	r30, r18
    4a3e:	f3 07       	cpc	r31, r19
    4a40:	a0 f4       	brcc	.+40     	; 0x4a6a <malloc+0x120>
    4a42:	2e 1b       	sub	r18, r30
    4a44:	3f 0b       	sbc	r19, r31
    4a46:	28 17       	cp	r18, r24
    4a48:	39 07       	cpc	r19, r25
    4a4a:	78 f0       	brcs	.+30     	; 0x4a6a <malloc+0x120>
    4a4c:	ac 01       	movw	r20, r24
    4a4e:	4e 5f       	subi	r20, 0xFE	; 254
    4a50:	5f 4f       	sbci	r21, 0xFF	; 255
    4a52:	24 17       	cp	r18, r20
    4a54:	35 07       	cpc	r19, r21
    4a56:	48 f0       	brcs	.+18     	; 0x4a6a <malloc+0x120>
    4a58:	4e 0f       	add	r20, r30
    4a5a:	5f 1f       	adc	r21, r31
    4a5c:	40 93 83 44 	sts	0x4483, r20	; 0x804483 <__brkval>
    4a60:	50 93 84 44 	sts	0x4484, r21	; 0x804484 <__brkval+0x1>
    4a64:	81 93       	st	Z+, r24
    4a66:	91 93       	st	Z+, r25
    4a68:	02 c0       	rjmp	.+4      	; 0x4a6e <malloc+0x124>
    4a6a:	e0 e0       	ldi	r30, 0x00	; 0
    4a6c:	f0 e0       	ldi	r31, 0x00	; 0
    4a6e:	cf 01       	movw	r24, r30
    4a70:	df 91       	pop	r29
    4a72:	cf 91       	pop	r28
    4a74:	1f 91       	pop	r17
    4a76:	0f 91       	pop	r16
    4a78:	08 95       	ret

00004a7a <free>:
    4a7a:	cf 93       	push	r28
    4a7c:	df 93       	push	r29
    4a7e:	00 97       	sbiw	r24, 0x00	; 0
    4a80:	09 f4       	brne	.+2      	; 0x4a84 <free+0xa>
    4a82:	81 c0       	rjmp	.+258    	; 0x4b86 <free+0x10c>
    4a84:	fc 01       	movw	r30, r24
    4a86:	32 97       	sbiw	r30, 0x02	; 2
    4a88:	12 82       	std	Z+2, r1	; 0x02
    4a8a:	13 82       	std	Z+3, r1	; 0x03
    4a8c:	a0 91 85 44 	lds	r26, 0x4485	; 0x804485 <__flp>
    4a90:	b0 91 86 44 	lds	r27, 0x4486	; 0x804486 <__flp+0x1>
    4a94:	10 97       	sbiw	r26, 0x00	; 0
    4a96:	81 f4       	brne	.+32     	; 0x4ab8 <free+0x3e>
    4a98:	20 81       	ld	r18, Z
    4a9a:	31 81       	ldd	r19, Z+1	; 0x01
    4a9c:	82 0f       	add	r24, r18
    4a9e:	93 1f       	adc	r25, r19
    4aa0:	20 91 83 44 	lds	r18, 0x4483	; 0x804483 <__brkval>
    4aa4:	30 91 84 44 	lds	r19, 0x4484	; 0x804484 <__brkval+0x1>
    4aa8:	28 17       	cp	r18, r24
    4aaa:	39 07       	cpc	r19, r25
    4aac:	51 f5       	brne	.+84     	; 0x4b02 <free+0x88>
    4aae:	e0 93 83 44 	sts	0x4483, r30	; 0x804483 <__brkval>
    4ab2:	f0 93 84 44 	sts	0x4484, r31	; 0x804484 <__brkval+0x1>
    4ab6:	67 c0       	rjmp	.+206    	; 0x4b86 <free+0x10c>
    4ab8:	ed 01       	movw	r28, r26
    4aba:	20 e0       	ldi	r18, 0x00	; 0
    4abc:	30 e0       	ldi	r19, 0x00	; 0
    4abe:	ce 17       	cp	r28, r30
    4ac0:	df 07       	cpc	r29, r31
    4ac2:	40 f4       	brcc	.+16     	; 0x4ad4 <free+0x5a>
    4ac4:	4a 81       	ldd	r20, Y+2	; 0x02
    4ac6:	5b 81       	ldd	r21, Y+3	; 0x03
    4ac8:	9e 01       	movw	r18, r28
    4aca:	41 15       	cp	r20, r1
    4acc:	51 05       	cpc	r21, r1
    4ace:	f1 f0       	breq	.+60     	; 0x4b0c <free+0x92>
    4ad0:	ea 01       	movw	r28, r20
    4ad2:	f5 cf       	rjmp	.-22     	; 0x4abe <free+0x44>
    4ad4:	c2 83       	std	Z+2, r28	; 0x02
    4ad6:	d3 83       	std	Z+3, r29	; 0x03
    4ad8:	40 81       	ld	r20, Z
    4ada:	51 81       	ldd	r21, Z+1	; 0x01
    4adc:	84 0f       	add	r24, r20
    4ade:	95 1f       	adc	r25, r21
    4ae0:	c8 17       	cp	r28, r24
    4ae2:	d9 07       	cpc	r29, r25
    4ae4:	59 f4       	brne	.+22     	; 0x4afc <free+0x82>
    4ae6:	88 81       	ld	r24, Y
    4ae8:	99 81       	ldd	r25, Y+1	; 0x01
    4aea:	84 0f       	add	r24, r20
    4aec:	95 1f       	adc	r25, r21
    4aee:	02 96       	adiw	r24, 0x02	; 2
    4af0:	80 83       	st	Z, r24
    4af2:	91 83       	std	Z+1, r25	; 0x01
    4af4:	8a 81       	ldd	r24, Y+2	; 0x02
    4af6:	9b 81       	ldd	r25, Y+3	; 0x03
    4af8:	82 83       	std	Z+2, r24	; 0x02
    4afa:	93 83       	std	Z+3, r25	; 0x03
    4afc:	21 15       	cp	r18, r1
    4afe:	31 05       	cpc	r19, r1
    4b00:	29 f4       	brne	.+10     	; 0x4b0c <free+0x92>
    4b02:	e0 93 85 44 	sts	0x4485, r30	; 0x804485 <__flp>
    4b06:	f0 93 86 44 	sts	0x4486, r31	; 0x804486 <__flp+0x1>
    4b0a:	3d c0       	rjmp	.+122    	; 0x4b86 <free+0x10c>
    4b0c:	e9 01       	movw	r28, r18
    4b0e:	ea 83       	std	Y+2, r30	; 0x02
    4b10:	fb 83       	std	Y+3, r31	; 0x03
    4b12:	49 91       	ld	r20, Y+
    4b14:	59 91       	ld	r21, Y+
    4b16:	c4 0f       	add	r28, r20
    4b18:	d5 1f       	adc	r29, r21
    4b1a:	ec 17       	cp	r30, r28
    4b1c:	fd 07       	cpc	r31, r29
    4b1e:	61 f4       	brne	.+24     	; 0x4b38 <free+0xbe>
    4b20:	80 81       	ld	r24, Z
    4b22:	91 81       	ldd	r25, Z+1	; 0x01
    4b24:	84 0f       	add	r24, r20
    4b26:	95 1f       	adc	r25, r21
    4b28:	02 96       	adiw	r24, 0x02	; 2
    4b2a:	e9 01       	movw	r28, r18
    4b2c:	88 83       	st	Y, r24
    4b2e:	99 83       	std	Y+1, r25	; 0x01
    4b30:	82 81       	ldd	r24, Z+2	; 0x02
    4b32:	93 81       	ldd	r25, Z+3	; 0x03
    4b34:	8a 83       	std	Y+2, r24	; 0x02
    4b36:	9b 83       	std	Y+3, r25	; 0x03
    4b38:	e0 e0       	ldi	r30, 0x00	; 0
    4b3a:	f0 e0       	ldi	r31, 0x00	; 0
    4b3c:	12 96       	adiw	r26, 0x02	; 2
    4b3e:	8d 91       	ld	r24, X+
    4b40:	9c 91       	ld	r25, X
    4b42:	13 97       	sbiw	r26, 0x03	; 3
    4b44:	00 97       	sbiw	r24, 0x00	; 0
    4b46:	19 f0       	breq	.+6      	; 0x4b4e <free+0xd4>
    4b48:	fd 01       	movw	r30, r26
    4b4a:	dc 01       	movw	r26, r24
    4b4c:	f7 cf       	rjmp	.-18     	; 0x4b3c <free+0xc2>
    4b4e:	8d 91       	ld	r24, X+
    4b50:	9c 91       	ld	r25, X
    4b52:	11 97       	sbiw	r26, 0x01	; 1
    4b54:	9d 01       	movw	r18, r26
    4b56:	2e 5f       	subi	r18, 0xFE	; 254
    4b58:	3f 4f       	sbci	r19, 0xFF	; 255
    4b5a:	82 0f       	add	r24, r18
    4b5c:	93 1f       	adc	r25, r19
    4b5e:	20 91 83 44 	lds	r18, 0x4483	; 0x804483 <__brkval>
    4b62:	30 91 84 44 	lds	r19, 0x4484	; 0x804484 <__brkval+0x1>
    4b66:	28 17       	cp	r18, r24
    4b68:	39 07       	cpc	r19, r25
    4b6a:	69 f4       	brne	.+26     	; 0x4b86 <free+0x10c>
    4b6c:	30 97       	sbiw	r30, 0x00	; 0
    4b6e:	29 f4       	brne	.+10     	; 0x4b7a <free+0x100>
    4b70:	10 92 85 44 	sts	0x4485, r1	; 0x804485 <__flp>
    4b74:	10 92 86 44 	sts	0x4486, r1	; 0x804486 <__flp+0x1>
    4b78:	02 c0       	rjmp	.+4      	; 0x4b7e <free+0x104>
    4b7a:	12 82       	std	Z+2, r1	; 0x02
    4b7c:	13 82       	std	Z+3, r1	; 0x03
    4b7e:	a0 93 83 44 	sts	0x4483, r26	; 0x804483 <__brkval>
    4b82:	b0 93 84 44 	sts	0x4484, r27	; 0x804484 <__brkval+0x1>
    4b86:	df 91       	pop	r29
    4b88:	cf 91       	pop	r28
    4b8a:	08 95       	ret

00004b8c <atoi>:
    4b8c:	fc 01       	movw	r30, r24
    4b8e:	88 27       	eor	r24, r24
    4b90:	99 27       	eor	r25, r25
    4b92:	e8 94       	clt
    4b94:	21 91       	ld	r18, Z+
    4b96:	20 32       	cpi	r18, 0x20	; 32
    4b98:	e9 f3       	breq	.-6      	; 0x4b94 <atoi+0x8>
    4b9a:	29 30       	cpi	r18, 0x09	; 9
    4b9c:	10 f0       	brcs	.+4      	; 0x4ba2 <atoi+0x16>
    4b9e:	2e 30       	cpi	r18, 0x0E	; 14
    4ba0:	c8 f3       	brcs	.-14     	; 0x4b94 <atoi+0x8>
    4ba2:	2b 32       	cpi	r18, 0x2B	; 43
    4ba4:	41 f0       	breq	.+16     	; 0x4bb6 <atoi+0x2a>
    4ba6:	2d 32       	cpi	r18, 0x2D	; 45
    4ba8:	39 f4       	brne	.+14     	; 0x4bb8 <atoi+0x2c>
    4baa:	68 94       	set
    4bac:	04 c0       	rjmp	.+8      	; 0x4bb6 <atoi+0x2a>
    4bae:	0e 94 37 26 	call	0x4c6e	; 0x4c6e <__mulhi_const_10>
    4bb2:	82 0f       	add	r24, r18
    4bb4:	91 1d       	adc	r25, r1
    4bb6:	21 91       	ld	r18, Z+
    4bb8:	20 53       	subi	r18, 0x30	; 48
    4bba:	2a 30       	cpi	r18, 0x0A	; 10
    4bbc:	c0 f3       	brcs	.-16     	; 0x4bae <atoi+0x22>
    4bbe:	1e f4       	brtc	.+6      	; 0x4bc6 <atoi+0x3a>
    4bc0:	90 95       	com	r25
    4bc2:	81 95       	neg	r24
    4bc4:	9f 4f       	sbci	r25, 0xFF	; 255
    4bc6:	08 95       	ret

00004bc8 <atol>:
    4bc8:	1f 93       	push	r17
    4bca:	fc 01       	movw	r30, r24
    4bcc:	99 27       	eor	r25, r25
    4bce:	88 27       	eor	r24, r24
    4bd0:	bc 01       	movw	r22, r24
    4bd2:	e8 94       	clt
    4bd4:	11 91       	ld	r17, Z+
    4bd6:	10 32       	cpi	r17, 0x20	; 32
    4bd8:	e9 f3       	breq	.-6      	; 0x4bd4 <atol+0xc>
    4bda:	19 30       	cpi	r17, 0x09	; 9
    4bdc:	10 f0       	brcs	.+4      	; 0x4be2 <atol+0x1a>
    4bde:	1e 30       	cpi	r17, 0x0E	; 14
    4be0:	c8 f3       	brcs	.-14     	; 0x4bd4 <atol+0xc>
    4be2:	1b 32       	cpi	r17, 0x2B	; 43
    4be4:	51 f0       	breq	.+20     	; 0x4bfa <atol+0x32>
    4be6:	1d 32       	cpi	r17, 0x2D	; 45
    4be8:	49 f4       	brne	.+18     	; 0x4bfc <atol+0x34>
    4bea:	68 94       	set
    4bec:	06 c0       	rjmp	.+12     	; 0x4bfa <atol+0x32>
    4bee:	0e 94 22 26 	call	0x4c44	; 0x4c44 <__mulsi_const_10>
    4bf2:	61 0f       	add	r22, r17
    4bf4:	71 1d       	adc	r23, r1
    4bf6:	81 1d       	adc	r24, r1
    4bf8:	91 1d       	adc	r25, r1
    4bfa:	11 91       	ld	r17, Z+
    4bfc:	10 53       	subi	r17, 0x30	; 48
    4bfe:	1a 30       	cpi	r17, 0x0A	; 10
    4c00:	b0 f3       	brcs	.-20     	; 0x4bee <atol+0x26>
    4c02:	3e f4       	brtc	.+14     	; 0x4c12 <atol+0x4a>
    4c04:	90 95       	com	r25
    4c06:	80 95       	com	r24
    4c08:	70 95       	com	r23
    4c0a:	61 95       	neg	r22
    4c0c:	7f 4f       	sbci	r23, 0xFF	; 255
    4c0e:	8f 4f       	sbci	r24, 0xFF	; 255
    4c10:	9f 4f       	sbci	r25, 0xFF	; 255
    4c12:	1f 91       	pop	r17
    4c14:	08 95       	ret

00004c16 <toupper>:
    4c16:	91 11       	cpse	r25, r1
    4c18:	08 95       	ret
    4c1a:	81 56       	subi	r24, 0x61	; 97
    4c1c:	8a 51       	subi	r24, 0x1A	; 26
    4c1e:	08 f4       	brcc	.+2      	; 0x4c22 <toupper+0xc>
    4c20:	80 52       	subi	r24, 0x20	; 32
    4c22:	85 58       	subi	r24, 0x85	; 133
    4c24:	08 95       	ret

00004c26 <strncpy>:
    4c26:	fb 01       	movw	r30, r22
    4c28:	dc 01       	movw	r26, r24
    4c2a:	41 50       	subi	r20, 0x01	; 1
    4c2c:	50 40       	sbci	r21, 0x00	; 0
    4c2e:	48 f0       	brcs	.+18     	; 0x4c42 <strncpy+0x1c>
    4c30:	01 90       	ld	r0, Z+
    4c32:	0d 92       	st	X+, r0
    4c34:	00 20       	and	r0, r0
    4c36:	c9 f7       	brne	.-14     	; 0x4c2a <strncpy+0x4>
    4c38:	01 c0       	rjmp	.+2      	; 0x4c3c <strncpy+0x16>
    4c3a:	1d 92       	st	X+, r1
    4c3c:	41 50       	subi	r20, 0x01	; 1
    4c3e:	50 40       	sbci	r21, 0x00	; 0
    4c40:	e0 f7       	brcc	.-8      	; 0x4c3a <strncpy+0x14>
    4c42:	08 95       	ret

00004c44 <__mulsi_const_10>:
    4c44:	59 2f       	mov	r21, r25
    4c46:	48 2f       	mov	r20, r24
    4c48:	37 2f       	mov	r19, r23
    4c4a:	26 2f       	mov	r18, r22
    4c4c:	66 0f       	add	r22, r22
    4c4e:	77 1f       	adc	r23, r23
    4c50:	88 1f       	adc	r24, r24
    4c52:	99 1f       	adc	r25, r25
    4c54:	66 0f       	add	r22, r22
    4c56:	77 1f       	adc	r23, r23
    4c58:	88 1f       	adc	r24, r24
    4c5a:	99 1f       	adc	r25, r25
    4c5c:	62 0f       	add	r22, r18
    4c5e:	73 1f       	adc	r23, r19
    4c60:	84 1f       	adc	r24, r20
    4c62:	95 1f       	adc	r25, r21
    4c64:	66 0f       	add	r22, r22
    4c66:	77 1f       	adc	r23, r23
    4c68:	88 1f       	adc	r24, r24
    4c6a:	99 1f       	adc	r25, r25
    4c6c:	08 95       	ret

00004c6e <__mulhi_const_10>:
    4c6e:	7a e0       	ldi	r23, 0x0A	; 10
    4c70:	97 9f       	mul	r25, r23
    4c72:	90 2d       	mov	r25, r0
    4c74:	87 9f       	mul	r24, r23
    4c76:	80 2d       	mov	r24, r0
    4c78:	91 0d       	add	r25, r1
    4c7a:	11 24       	eor	r1, r1
    4c7c:	08 95       	ret

00004c7e <sprintf>:
    4c7e:	0f 93       	push	r16
    4c80:	1f 93       	push	r17
    4c82:	cf 93       	push	r28
    4c84:	df 93       	push	r29
    4c86:	cd b7       	in	r28, 0x3d	; 61
    4c88:	de b7       	in	r29, 0x3e	; 62
    4c8a:	2e 97       	sbiw	r28, 0x0e	; 14
    4c8c:	cd bf       	out	0x3d, r28	; 61
    4c8e:	de bf       	out	0x3e, r29	; 62
    4c90:	0d 89       	ldd	r16, Y+21	; 0x15
    4c92:	1e 89       	ldd	r17, Y+22	; 0x16
    4c94:	86 e0       	ldi	r24, 0x06	; 6
    4c96:	8c 83       	std	Y+4, r24	; 0x04
    4c98:	09 83       	std	Y+1, r16	; 0x01
    4c9a:	1a 83       	std	Y+2, r17	; 0x02
    4c9c:	8f ef       	ldi	r24, 0xFF	; 255
    4c9e:	9f e7       	ldi	r25, 0x7F	; 127
    4ca0:	8d 83       	std	Y+5, r24	; 0x05
    4ca2:	9e 83       	std	Y+6, r25	; 0x06
    4ca4:	ae 01       	movw	r20, r28
    4ca6:	47 5e       	subi	r20, 0xE7	; 231
    4ca8:	5f 4f       	sbci	r21, 0xFF	; 255
    4caa:	6f 89       	ldd	r22, Y+23	; 0x17
    4cac:	78 8d       	ldd	r23, Y+24	; 0x18
    4cae:	ce 01       	movw	r24, r28
    4cb0:	01 96       	adiw	r24, 0x01	; 1
    4cb2:	0e 94 68 26 	call	0x4cd0	; 0x4cd0 <vfprintf>
    4cb6:	ef 81       	ldd	r30, Y+7	; 0x07
    4cb8:	f8 85       	ldd	r31, Y+8	; 0x08
    4cba:	e0 0f       	add	r30, r16
    4cbc:	f1 1f       	adc	r31, r17
    4cbe:	10 82       	st	Z, r1
    4cc0:	2e 96       	adiw	r28, 0x0e	; 14
    4cc2:	cd bf       	out	0x3d, r28	; 61
    4cc4:	de bf       	out	0x3e, r29	; 62
    4cc6:	df 91       	pop	r29
    4cc8:	cf 91       	pop	r28
    4cca:	1f 91       	pop	r17
    4ccc:	0f 91       	pop	r16
    4cce:	08 95       	ret

00004cd0 <vfprintf>:
    4cd0:	2f 92       	push	r2
    4cd2:	3f 92       	push	r3
    4cd4:	4f 92       	push	r4
    4cd6:	5f 92       	push	r5
    4cd8:	6f 92       	push	r6
    4cda:	7f 92       	push	r7
    4cdc:	8f 92       	push	r8
    4cde:	9f 92       	push	r9
    4ce0:	af 92       	push	r10
    4ce2:	bf 92       	push	r11
    4ce4:	cf 92       	push	r12
    4ce6:	df 92       	push	r13
    4ce8:	ef 92       	push	r14
    4cea:	ff 92       	push	r15
    4cec:	0f 93       	push	r16
    4cee:	1f 93       	push	r17
    4cf0:	cf 93       	push	r28
    4cf2:	df 93       	push	r29
    4cf4:	cd b7       	in	r28, 0x3d	; 61
    4cf6:	de b7       	in	r29, 0x3e	; 62
    4cf8:	2b 97       	sbiw	r28, 0x0b	; 11
    4cfa:	cd bf       	out	0x3d, r28	; 61
    4cfc:	de bf       	out	0x3e, r29	; 62
    4cfe:	6c 01       	movw	r12, r24
    4d00:	7b 01       	movw	r14, r22
    4d02:	8a 01       	movw	r16, r20
    4d04:	fc 01       	movw	r30, r24
    4d06:	16 82       	std	Z+6, r1	; 0x06
    4d08:	17 82       	std	Z+7, r1	; 0x07
    4d0a:	83 81       	ldd	r24, Z+3	; 0x03
    4d0c:	81 ff       	sbrs	r24, 1
    4d0e:	cc c1       	rjmp	.+920    	; 0x50a8 <vfprintf+0x3d8>
    4d10:	ce 01       	movw	r24, r28
    4d12:	01 96       	adiw	r24, 0x01	; 1
    4d14:	3c 01       	movw	r6, r24
    4d16:	f6 01       	movw	r30, r12
    4d18:	93 81       	ldd	r25, Z+3	; 0x03
    4d1a:	f7 01       	movw	r30, r14
    4d1c:	93 fd       	sbrc	r25, 3
    4d1e:	85 91       	lpm	r24, Z+
    4d20:	93 ff       	sbrs	r25, 3
    4d22:	81 91       	ld	r24, Z+
    4d24:	7f 01       	movw	r14, r30
    4d26:	88 23       	and	r24, r24
    4d28:	09 f4       	brne	.+2      	; 0x4d2c <vfprintf+0x5c>
    4d2a:	ba c1       	rjmp	.+884    	; 0x50a0 <vfprintf+0x3d0>
    4d2c:	85 32       	cpi	r24, 0x25	; 37
    4d2e:	39 f4       	brne	.+14     	; 0x4d3e <vfprintf+0x6e>
    4d30:	93 fd       	sbrc	r25, 3
    4d32:	85 91       	lpm	r24, Z+
    4d34:	93 ff       	sbrs	r25, 3
    4d36:	81 91       	ld	r24, Z+
    4d38:	7f 01       	movw	r14, r30
    4d3a:	85 32       	cpi	r24, 0x25	; 37
    4d3c:	29 f4       	brne	.+10     	; 0x4d48 <vfprintf+0x78>
    4d3e:	b6 01       	movw	r22, r12
    4d40:	90 e0       	ldi	r25, 0x00	; 0
    4d42:	0e 94 82 28 	call	0x5104	; 0x5104 <fputc>
    4d46:	e7 cf       	rjmp	.-50     	; 0x4d16 <vfprintf+0x46>
    4d48:	91 2c       	mov	r9, r1
    4d4a:	21 2c       	mov	r2, r1
    4d4c:	31 2c       	mov	r3, r1
    4d4e:	ff e1       	ldi	r31, 0x1F	; 31
    4d50:	f3 15       	cp	r31, r3
    4d52:	d8 f0       	brcs	.+54     	; 0x4d8a <vfprintf+0xba>
    4d54:	8b 32       	cpi	r24, 0x2B	; 43
    4d56:	79 f0       	breq	.+30     	; 0x4d76 <vfprintf+0xa6>
    4d58:	38 f4       	brcc	.+14     	; 0x4d68 <vfprintf+0x98>
    4d5a:	80 32       	cpi	r24, 0x20	; 32
    4d5c:	79 f0       	breq	.+30     	; 0x4d7c <vfprintf+0xac>
    4d5e:	83 32       	cpi	r24, 0x23	; 35
    4d60:	a1 f4       	brne	.+40     	; 0x4d8a <vfprintf+0xba>
    4d62:	23 2d       	mov	r18, r3
    4d64:	20 61       	ori	r18, 0x10	; 16
    4d66:	1d c0       	rjmp	.+58     	; 0x4da2 <vfprintf+0xd2>
    4d68:	8d 32       	cpi	r24, 0x2D	; 45
    4d6a:	61 f0       	breq	.+24     	; 0x4d84 <vfprintf+0xb4>
    4d6c:	80 33       	cpi	r24, 0x30	; 48
    4d6e:	69 f4       	brne	.+26     	; 0x4d8a <vfprintf+0xba>
    4d70:	23 2d       	mov	r18, r3
    4d72:	21 60       	ori	r18, 0x01	; 1
    4d74:	16 c0       	rjmp	.+44     	; 0x4da2 <vfprintf+0xd2>
    4d76:	83 2d       	mov	r24, r3
    4d78:	82 60       	ori	r24, 0x02	; 2
    4d7a:	38 2e       	mov	r3, r24
    4d7c:	e3 2d       	mov	r30, r3
    4d7e:	e4 60       	ori	r30, 0x04	; 4
    4d80:	3e 2e       	mov	r3, r30
    4d82:	2a c0       	rjmp	.+84     	; 0x4dd8 <vfprintf+0x108>
    4d84:	f3 2d       	mov	r31, r3
    4d86:	f8 60       	ori	r31, 0x08	; 8
    4d88:	1d c0       	rjmp	.+58     	; 0x4dc4 <vfprintf+0xf4>
    4d8a:	37 fc       	sbrc	r3, 7
    4d8c:	2d c0       	rjmp	.+90     	; 0x4de8 <vfprintf+0x118>
    4d8e:	20 ed       	ldi	r18, 0xD0	; 208
    4d90:	28 0f       	add	r18, r24
    4d92:	2a 30       	cpi	r18, 0x0A	; 10
    4d94:	40 f0       	brcs	.+16     	; 0x4da6 <vfprintf+0xd6>
    4d96:	8e 32       	cpi	r24, 0x2E	; 46
    4d98:	b9 f4       	brne	.+46     	; 0x4dc8 <vfprintf+0xf8>
    4d9a:	36 fc       	sbrc	r3, 6
    4d9c:	81 c1       	rjmp	.+770    	; 0x50a0 <vfprintf+0x3d0>
    4d9e:	23 2d       	mov	r18, r3
    4da0:	20 64       	ori	r18, 0x40	; 64
    4da2:	32 2e       	mov	r3, r18
    4da4:	19 c0       	rjmp	.+50     	; 0x4dd8 <vfprintf+0x108>
    4da6:	36 fe       	sbrs	r3, 6
    4da8:	06 c0       	rjmp	.+12     	; 0x4db6 <vfprintf+0xe6>
    4daa:	8a e0       	ldi	r24, 0x0A	; 10
    4dac:	98 9e       	mul	r9, r24
    4dae:	20 0d       	add	r18, r0
    4db0:	11 24       	eor	r1, r1
    4db2:	92 2e       	mov	r9, r18
    4db4:	11 c0       	rjmp	.+34     	; 0x4dd8 <vfprintf+0x108>
    4db6:	ea e0       	ldi	r30, 0x0A	; 10
    4db8:	2e 9e       	mul	r2, r30
    4dba:	20 0d       	add	r18, r0
    4dbc:	11 24       	eor	r1, r1
    4dbe:	22 2e       	mov	r2, r18
    4dc0:	f3 2d       	mov	r31, r3
    4dc2:	f0 62       	ori	r31, 0x20	; 32
    4dc4:	3f 2e       	mov	r3, r31
    4dc6:	08 c0       	rjmp	.+16     	; 0x4dd8 <vfprintf+0x108>
    4dc8:	8c 36       	cpi	r24, 0x6C	; 108
    4dca:	21 f4       	brne	.+8      	; 0x4dd4 <vfprintf+0x104>
    4dcc:	83 2d       	mov	r24, r3
    4dce:	80 68       	ori	r24, 0x80	; 128
    4dd0:	38 2e       	mov	r3, r24
    4dd2:	02 c0       	rjmp	.+4      	; 0x4dd8 <vfprintf+0x108>
    4dd4:	88 36       	cpi	r24, 0x68	; 104
    4dd6:	41 f4       	brne	.+16     	; 0x4de8 <vfprintf+0x118>
    4dd8:	f7 01       	movw	r30, r14
    4dda:	93 fd       	sbrc	r25, 3
    4ddc:	85 91       	lpm	r24, Z+
    4dde:	93 ff       	sbrs	r25, 3
    4de0:	81 91       	ld	r24, Z+
    4de2:	7f 01       	movw	r14, r30
    4de4:	81 11       	cpse	r24, r1
    4de6:	b3 cf       	rjmp	.-154    	; 0x4d4e <vfprintf+0x7e>
    4de8:	98 2f       	mov	r25, r24
    4dea:	9f 7d       	andi	r25, 0xDF	; 223
    4dec:	95 54       	subi	r25, 0x45	; 69
    4dee:	93 30       	cpi	r25, 0x03	; 3
    4df0:	28 f4       	brcc	.+10     	; 0x4dfc <vfprintf+0x12c>
    4df2:	0c 5f       	subi	r16, 0xFC	; 252
    4df4:	1f 4f       	sbci	r17, 0xFF	; 255
    4df6:	9f e3       	ldi	r25, 0x3F	; 63
    4df8:	99 83       	std	Y+1, r25	; 0x01
    4dfa:	0d c0       	rjmp	.+26     	; 0x4e16 <vfprintf+0x146>
    4dfc:	83 36       	cpi	r24, 0x63	; 99
    4dfe:	31 f0       	breq	.+12     	; 0x4e0c <vfprintf+0x13c>
    4e00:	83 37       	cpi	r24, 0x73	; 115
    4e02:	71 f0       	breq	.+28     	; 0x4e20 <vfprintf+0x150>
    4e04:	83 35       	cpi	r24, 0x53	; 83
    4e06:	09 f0       	breq	.+2      	; 0x4e0a <vfprintf+0x13a>
    4e08:	59 c0       	rjmp	.+178    	; 0x4ebc <vfprintf+0x1ec>
    4e0a:	21 c0       	rjmp	.+66     	; 0x4e4e <vfprintf+0x17e>
    4e0c:	f8 01       	movw	r30, r16
    4e0e:	80 81       	ld	r24, Z
    4e10:	89 83       	std	Y+1, r24	; 0x01
    4e12:	0e 5f       	subi	r16, 0xFE	; 254
    4e14:	1f 4f       	sbci	r17, 0xFF	; 255
    4e16:	88 24       	eor	r8, r8
    4e18:	83 94       	inc	r8
    4e1a:	91 2c       	mov	r9, r1
    4e1c:	53 01       	movw	r10, r6
    4e1e:	13 c0       	rjmp	.+38     	; 0x4e46 <vfprintf+0x176>
    4e20:	28 01       	movw	r4, r16
    4e22:	f2 e0       	ldi	r31, 0x02	; 2
    4e24:	4f 0e       	add	r4, r31
    4e26:	51 1c       	adc	r5, r1
    4e28:	f8 01       	movw	r30, r16
    4e2a:	a0 80       	ld	r10, Z
    4e2c:	b1 80       	ldd	r11, Z+1	; 0x01
    4e2e:	36 fe       	sbrs	r3, 6
    4e30:	03 c0       	rjmp	.+6      	; 0x4e38 <vfprintf+0x168>
    4e32:	69 2d       	mov	r22, r9
    4e34:	70 e0       	ldi	r23, 0x00	; 0
    4e36:	02 c0       	rjmp	.+4      	; 0x4e3c <vfprintf+0x16c>
    4e38:	6f ef       	ldi	r22, 0xFF	; 255
    4e3a:	7f ef       	ldi	r23, 0xFF	; 255
    4e3c:	c5 01       	movw	r24, r10
    4e3e:	0e 94 77 28 	call	0x50ee	; 0x50ee <strnlen>
    4e42:	4c 01       	movw	r8, r24
    4e44:	82 01       	movw	r16, r4
    4e46:	f3 2d       	mov	r31, r3
    4e48:	ff 77       	andi	r31, 0x7F	; 127
    4e4a:	3f 2e       	mov	r3, r31
    4e4c:	16 c0       	rjmp	.+44     	; 0x4e7a <vfprintf+0x1aa>
    4e4e:	28 01       	movw	r4, r16
    4e50:	22 e0       	ldi	r18, 0x02	; 2
    4e52:	42 0e       	add	r4, r18
    4e54:	51 1c       	adc	r5, r1
    4e56:	f8 01       	movw	r30, r16
    4e58:	a0 80       	ld	r10, Z
    4e5a:	b1 80       	ldd	r11, Z+1	; 0x01
    4e5c:	36 fe       	sbrs	r3, 6
    4e5e:	03 c0       	rjmp	.+6      	; 0x4e66 <vfprintf+0x196>
    4e60:	69 2d       	mov	r22, r9
    4e62:	70 e0       	ldi	r23, 0x00	; 0
    4e64:	02 c0       	rjmp	.+4      	; 0x4e6a <vfprintf+0x19a>
    4e66:	6f ef       	ldi	r22, 0xFF	; 255
    4e68:	7f ef       	ldi	r23, 0xFF	; 255
    4e6a:	c5 01       	movw	r24, r10
    4e6c:	0e 94 6c 28 	call	0x50d8	; 0x50d8 <strnlen_P>
    4e70:	4c 01       	movw	r8, r24
    4e72:	f3 2d       	mov	r31, r3
    4e74:	f0 68       	ori	r31, 0x80	; 128
    4e76:	3f 2e       	mov	r3, r31
    4e78:	82 01       	movw	r16, r4
    4e7a:	33 fc       	sbrc	r3, 3
    4e7c:	1b c0       	rjmp	.+54     	; 0x4eb4 <vfprintf+0x1e4>
    4e7e:	82 2d       	mov	r24, r2
    4e80:	90 e0       	ldi	r25, 0x00	; 0
    4e82:	88 16       	cp	r8, r24
    4e84:	99 06       	cpc	r9, r25
    4e86:	b0 f4       	brcc	.+44     	; 0x4eb4 <vfprintf+0x1e4>
    4e88:	b6 01       	movw	r22, r12
    4e8a:	80 e2       	ldi	r24, 0x20	; 32
    4e8c:	90 e0       	ldi	r25, 0x00	; 0
    4e8e:	0e 94 82 28 	call	0x5104	; 0x5104 <fputc>
    4e92:	2a 94       	dec	r2
    4e94:	f4 cf       	rjmp	.-24     	; 0x4e7e <vfprintf+0x1ae>
    4e96:	f5 01       	movw	r30, r10
    4e98:	37 fc       	sbrc	r3, 7
    4e9a:	85 91       	lpm	r24, Z+
    4e9c:	37 fe       	sbrs	r3, 7
    4e9e:	81 91       	ld	r24, Z+
    4ea0:	5f 01       	movw	r10, r30
    4ea2:	b6 01       	movw	r22, r12
    4ea4:	90 e0       	ldi	r25, 0x00	; 0
    4ea6:	0e 94 82 28 	call	0x5104	; 0x5104 <fputc>
    4eaa:	21 10       	cpse	r2, r1
    4eac:	2a 94       	dec	r2
    4eae:	21 e0       	ldi	r18, 0x01	; 1
    4eb0:	82 1a       	sub	r8, r18
    4eb2:	91 08       	sbc	r9, r1
    4eb4:	81 14       	cp	r8, r1
    4eb6:	91 04       	cpc	r9, r1
    4eb8:	71 f7       	brne	.-36     	; 0x4e96 <vfprintf+0x1c6>
    4eba:	e8 c0       	rjmp	.+464    	; 0x508c <vfprintf+0x3bc>
    4ebc:	84 36       	cpi	r24, 0x64	; 100
    4ebe:	11 f0       	breq	.+4      	; 0x4ec4 <vfprintf+0x1f4>
    4ec0:	89 36       	cpi	r24, 0x69	; 105
    4ec2:	41 f5       	brne	.+80     	; 0x4f14 <vfprintf+0x244>
    4ec4:	f8 01       	movw	r30, r16
    4ec6:	37 fe       	sbrs	r3, 7
    4ec8:	07 c0       	rjmp	.+14     	; 0x4ed8 <vfprintf+0x208>
    4eca:	60 81       	ld	r22, Z
    4ecc:	71 81       	ldd	r23, Z+1	; 0x01
    4ece:	82 81       	ldd	r24, Z+2	; 0x02
    4ed0:	93 81       	ldd	r25, Z+3	; 0x03
    4ed2:	0c 5f       	subi	r16, 0xFC	; 252
    4ed4:	1f 4f       	sbci	r17, 0xFF	; 255
    4ed6:	08 c0       	rjmp	.+16     	; 0x4ee8 <vfprintf+0x218>
    4ed8:	60 81       	ld	r22, Z
    4eda:	71 81       	ldd	r23, Z+1	; 0x01
    4edc:	07 2e       	mov	r0, r23
    4ede:	00 0c       	add	r0, r0
    4ee0:	88 0b       	sbc	r24, r24
    4ee2:	99 0b       	sbc	r25, r25
    4ee4:	0e 5f       	subi	r16, 0xFE	; 254
    4ee6:	1f 4f       	sbci	r17, 0xFF	; 255
    4ee8:	f3 2d       	mov	r31, r3
    4eea:	ff 76       	andi	r31, 0x6F	; 111
    4eec:	3f 2e       	mov	r3, r31
    4eee:	97 ff       	sbrs	r25, 7
    4ef0:	09 c0       	rjmp	.+18     	; 0x4f04 <vfprintf+0x234>
    4ef2:	90 95       	com	r25
    4ef4:	80 95       	com	r24
    4ef6:	70 95       	com	r23
    4ef8:	61 95       	neg	r22
    4efa:	7f 4f       	sbci	r23, 0xFF	; 255
    4efc:	8f 4f       	sbci	r24, 0xFF	; 255
    4efe:	9f 4f       	sbci	r25, 0xFF	; 255
    4f00:	f0 68       	ori	r31, 0x80	; 128
    4f02:	3f 2e       	mov	r3, r31
    4f04:	2a e0       	ldi	r18, 0x0A	; 10
    4f06:	30 e0       	ldi	r19, 0x00	; 0
    4f08:	a3 01       	movw	r20, r6
    4f0a:	0e 94 be 28 	call	0x517c	; 0x517c <__ultoa_invert>
    4f0e:	88 2e       	mov	r8, r24
    4f10:	86 18       	sub	r8, r6
    4f12:	45 c0       	rjmp	.+138    	; 0x4f9e <vfprintf+0x2ce>
    4f14:	85 37       	cpi	r24, 0x75	; 117
    4f16:	31 f4       	brne	.+12     	; 0x4f24 <vfprintf+0x254>
    4f18:	23 2d       	mov	r18, r3
    4f1a:	2f 7e       	andi	r18, 0xEF	; 239
    4f1c:	b2 2e       	mov	r11, r18
    4f1e:	2a e0       	ldi	r18, 0x0A	; 10
    4f20:	30 e0       	ldi	r19, 0x00	; 0
    4f22:	25 c0       	rjmp	.+74     	; 0x4f6e <vfprintf+0x29e>
    4f24:	93 2d       	mov	r25, r3
    4f26:	99 7f       	andi	r25, 0xF9	; 249
    4f28:	b9 2e       	mov	r11, r25
    4f2a:	8f 36       	cpi	r24, 0x6F	; 111
    4f2c:	c1 f0       	breq	.+48     	; 0x4f5e <vfprintf+0x28e>
    4f2e:	18 f4       	brcc	.+6      	; 0x4f36 <vfprintf+0x266>
    4f30:	88 35       	cpi	r24, 0x58	; 88
    4f32:	79 f0       	breq	.+30     	; 0x4f52 <vfprintf+0x282>
    4f34:	b5 c0       	rjmp	.+362    	; 0x50a0 <vfprintf+0x3d0>
    4f36:	80 37       	cpi	r24, 0x70	; 112
    4f38:	19 f0       	breq	.+6      	; 0x4f40 <vfprintf+0x270>
    4f3a:	88 37       	cpi	r24, 0x78	; 120
    4f3c:	21 f0       	breq	.+8      	; 0x4f46 <vfprintf+0x276>
    4f3e:	b0 c0       	rjmp	.+352    	; 0x50a0 <vfprintf+0x3d0>
    4f40:	e9 2f       	mov	r30, r25
    4f42:	e0 61       	ori	r30, 0x10	; 16
    4f44:	be 2e       	mov	r11, r30
    4f46:	b4 fe       	sbrs	r11, 4
    4f48:	0d c0       	rjmp	.+26     	; 0x4f64 <vfprintf+0x294>
    4f4a:	fb 2d       	mov	r31, r11
    4f4c:	f4 60       	ori	r31, 0x04	; 4
    4f4e:	bf 2e       	mov	r11, r31
    4f50:	09 c0       	rjmp	.+18     	; 0x4f64 <vfprintf+0x294>
    4f52:	34 fe       	sbrs	r3, 4
    4f54:	0a c0       	rjmp	.+20     	; 0x4f6a <vfprintf+0x29a>
    4f56:	29 2f       	mov	r18, r25
    4f58:	26 60       	ori	r18, 0x06	; 6
    4f5a:	b2 2e       	mov	r11, r18
    4f5c:	06 c0       	rjmp	.+12     	; 0x4f6a <vfprintf+0x29a>
    4f5e:	28 e0       	ldi	r18, 0x08	; 8
    4f60:	30 e0       	ldi	r19, 0x00	; 0
    4f62:	05 c0       	rjmp	.+10     	; 0x4f6e <vfprintf+0x29e>
    4f64:	20 e1       	ldi	r18, 0x10	; 16
    4f66:	30 e0       	ldi	r19, 0x00	; 0
    4f68:	02 c0       	rjmp	.+4      	; 0x4f6e <vfprintf+0x29e>
    4f6a:	20 e1       	ldi	r18, 0x10	; 16
    4f6c:	32 e0       	ldi	r19, 0x02	; 2
    4f6e:	f8 01       	movw	r30, r16
    4f70:	b7 fe       	sbrs	r11, 7
    4f72:	07 c0       	rjmp	.+14     	; 0x4f82 <vfprintf+0x2b2>
    4f74:	60 81       	ld	r22, Z
    4f76:	71 81       	ldd	r23, Z+1	; 0x01
    4f78:	82 81       	ldd	r24, Z+2	; 0x02
    4f7a:	93 81       	ldd	r25, Z+3	; 0x03
    4f7c:	0c 5f       	subi	r16, 0xFC	; 252
    4f7e:	1f 4f       	sbci	r17, 0xFF	; 255
    4f80:	06 c0       	rjmp	.+12     	; 0x4f8e <vfprintf+0x2be>
    4f82:	60 81       	ld	r22, Z
    4f84:	71 81       	ldd	r23, Z+1	; 0x01
    4f86:	80 e0       	ldi	r24, 0x00	; 0
    4f88:	90 e0       	ldi	r25, 0x00	; 0
    4f8a:	0e 5f       	subi	r16, 0xFE	; 254
    4f8c:	1f 4f       	sbci	r17, 0xFF	; 255
    4f8e:	a3 01       	movw	r20, r6
    4f90:	0e 94 be 28 	call	0x517c	; 0x517c <__ultoa_invert>
    4f94:	88 2e       	mov	r8, r24
    4f96:	86 18       	sub	r8, r6
    4f98:	fb 2d       	mov	r31, r11
    4f9a:	ff 77       	andi	r31, 0x7F	; 127
    4f9c:	3f 2e       	mov	r3, r31
    4f9e:	36 fe       	sbrs	r3, 6
    4fa0:	0d c0       	rjmp	.+26     	; 0x4fbc <vfprintf+0x2ec>
    4fa2:	23 2d       	mov	r18, r3
    4fa4:	2e 7f       	andi	r18, 0xFE	; 254
    4fa6:	a2 2e       	mov	r10, r18
    4fa8:	89 14       	cp	r8, r9
    4faa:	58 f4       	brcc	.+22     	; 0x4fc2 <vfprintf+0x2f2>
    4fac:	34 fe       	sbrs	r3, 4
    4fae:	0b c0       	rjmp	.+22     	; 0x4fc6 <vfprintf+0x2f6>
    4fb0:	32 fc       	sbrc	r3, 2
    4fb2:	09 c0       	rjmp	.+18     	; 0x4fc6 <vfprintf+0x2f6>
    4fb4:	83 2d       	mov	r24, r3
    4fb6:	8e 7e       	andi	r24, 0xEE	; 238
    4fb8:	a8 2e       	mov	r10, r24
    4fba:	05 c0       	rjmp	.+10     	; 0x4fc6 <vfprintf+0x2f6>
    4fbc:	b8 2c       	mov	r11, r8
    4fbe:	a3 2c       	mov	r10, r3
    4fc0:	03 c0       	rjmp	.+6      	; 0x4fc8 <vfprintf+0x2f8>
    4fc2:	b8 2c       	mov	r11, r8
    4fc4:	01 c0       	rjmp	.+2      	; 0x4fc8 <vfprintf+0x2f8>
    4fc6:	b9 2c       	mov	r11, r9
    4fc8:	a4 fe       	sbrs	r10, 4
    4fca:	0f c0       	rjmp	.+30     	; 0x4fea <vfprintf+0x31a>
    4fcc:	fe 01       	movw	r30, r28
    4fce:	e8 0d       	add	r30, r8
    4fd0:	f1 1d       	adc	r31, r1
    4fd2:	80 81       	ld	r24, Z
    4fd4:	80 33       	cpi	r24, 0x30	; 48
    4fd6:	21 f4       	brne	.+8      	; 0x4fe0 <vfprintf+0x310>
    4fd8:	9a 2d       	mov	r25, r10
    4fda:	99 7e       	andi	r25, 0xE9	; 233
    4fdc:	a9 2e       	mov	r10, r25
    4fde:	09 c0       	rjmp	.+18     	; 0x4ff2 <vfprintf+0x322>
    4fe0:	a2 fe       	sbrs	r10, 2
    4fe2:	06 c0       	rjmp	.+12     	; 0x4ff0 <vfprintf+0x320>
    4fe4:	b3 94       	inc	r11
    4fe6:	b3 94       	inc	r11
    4fe8:	04 c0       	rjmp	.+8      	; 0x4ff2 <vfprintf+0x322>
    4fea:	8a 2d       	mov	r24, r10
    4fec:	86 78       	andi	r24, 0x86	; 134
    4fee:	09 f0       	breq	.+2      	; 0x4ff2 <vfprintf+0x322>
    4ff0:	b3 94       	inc	r11
    4ff2:	a3 fc       	sbrc	r10, 3
    4ff4:	11 c0       	rjmp	.+34     	; 0x5018 <vfprintf+0x348>
    4ff6:	a0 fe       	sbrs	r10, 0
    4ff8:	06 c0       	rjmp	.+12     	; 0x5006 <vfprintf+0x336>
    4ffa:	b2 14       	cp	r11, r2
    4ffc:	88 f4       	brcc	.+34     	; 0x5020 <vfprintf+0x350>
    4ffe:	28 0c       	add	r2, r8
    5000:	92 2c       	mov	r9, r2
    5002:	9b 18       	sub	r9, r11
    5004:	0e c0       	rjmp	.+28     	; 0x5022 <vfprintf+0x352>
    5006:	b2 14       	cp	r11, r2
    5008:	60 f4       	brcc	.+24     	; 0x5022 <vfprintf+0x352>
    500a:	b6 01       	movw	r22, r12
    500c:	80 e2       	ldi	r24, 0x20	; 32
    500e:	90 e0       	ldi	r25, 0x00	; 0
    5010:	0e 94 82 28 	call	0x5104	; 0x5104 <fputc>
    5014:	b3 94       	inc	r11
    5016:	f7 cf       	rjmp	.-18     	; 0x5006 <vfprintf+0x336>
    5018:	b2 14       	cp	r11, r2
    501a:	18 f4       	brcc	.+6      	; 0x5022 <vfprintf+0x352>
    501c:	2b 18       	sub	r2, r11
    501e:	02 c0       	rjmp	.+4      	; 0x5024 <vfprintf+0x354>
    5020:	98 2c       	mov	r9, r8
    5022:	21 2c       	mov	r2, r1
    5024:	a4 fe       	sbrs	r10, 4
    5026:	10 c0       	rjmp	.+32     	; 0x5048 <vfprintf+0x378>
    5028:	b6 01       	movw	r22, r12
    502a:	80 e3       	ldi	r24, 0x30	; 48
    502c:	90 e0       	ldi	r25, 0x00	; 0
    502e:	0e 94 82 28 	call	0x5104	; 0x5104 <fputc>
    5032:	a2 fe       	sbrs	r10, 2
    5034:	17 c0       	rjmp	.+46     	; 0x5064 <vfprintf+0x394>
    5036:	a1 fc       	sbrc	r10, 1
    5038:	03 c0       	rjmp	.+6      	; 0x5040 <vfprintf+0x370>
    503a:	88 e7       	ldi	r24, 0x78	; 120
    503c:	90 e0       	ldi	r25, 0x00	; 0
    503e:	02 c0       	rjmp	.+4      	; 0x5044 <vfprintf+0x374>
    5040:	88 e5       	ldi	r24, 0x58	; 88
    5042:	90 e0       	ldi	r25, 0x00	; 0
    5044:	b6 01       	movw	r22, r12
    5046:	0c c0       	rjmp	.+24     	; 0x5060 <vfprintf+0x390>
    5048:	8a 2d       	mov	r24, r10
    504a:	86 78       	andi	r24, 0x86	; 134
    504c:	59 f0       	breq	.+22     	; 0x5064 <vfprintf+0x394>
    504e:	a1 fe       	sbrs	r10, 1
    5050:	02 c0       	rjmp	.+4      	; 0x5056 <vfprintf+0x386>
    5052:	8b e2       	ldi	r24, 0x2B	; 43
    5054:	01 c0       	rjmp	.+2      	; 0x5058 <vfprintf+0x388>
    5056:	80 e2       	ldi	r24, 0x20	; 32
    5058:	a7 fc       	sbrc	r10, 7
    505a:	8d e2       	ldi	r24, 0x2D	; 45
    505c:	b6 01       	movw	r22, r12
    505e:	90 e0       	ldi	r25, 0x00	; 0
    5060:	0e 94 82 28 	call	0x5104	; 0x5104 <fputc>
    5064:	89 14       	cp	r8, r9
    5066:	38 f4       	brcc	.+14     	; 0x5076 <vfprintf+0x3a6>
    5068:	b6 01       	movw	r22, r12
    506a:	80 e3       	ldi	r24, 0x30	; 48
    506c:	90 e0       	ldi	r25, 0x00	; 0
    506e:	0e 94 82 28 	call	0x5104	; 0x5104 <fputc>
    5072:	9a 94       	dec	r9
    5074:	f7 cf       	rjmp	.-18     	; 0x5064 <vfprintf+0x394>
    5076:	8a 94       	dec	r8
    5078:	f3 01       	movw	r30, r6
    507a:	e8 0d       	add	r30, r8
    507c:	f1 1d       	adc	r31, r1
    507e:	80 81       	ld	r24, Z
    5080:	b6 01       	movw	r22, r12
    5082:	90 e0       	ldi	r25, 0x00	; 0
    5084:	0e 94 82 28 	call	0x5104	; 0x5104 <fputc>
    5088:	81 10       	cpse	r8, r1
    508a:	f5 cf       	rjmp	.-22     	; 0x5076 <vfprintf+0x3a6>
    508c:	22 20       	and	r2, r2
    508e:	09 f4       	brne	.+2      	; 0x5092 <vfprintf+0x3c2>
    5090:	42 ce       	rjmp	.-892    	; 0x4d16 <vfprintf+0x46>
    5092:	b6 01       	movw	r22, r12
    5094:	80 e2       	ldi	r24, 0x20	; 32
    5096:	90 e0       	ldi	r25, 0x00	; 0
    5098:	0e 94 82 28 	call	0x5104	; 0x5104 <fputc>
    509c:	2a 94       	dec	r2
    509e:	f6 cf       	rjmp	.-20     	; 0x508c <vfprintf+0x3bc>
    50a0:	f6 01       	movw	r30, r12
    50a2:	86 81       	ldd	r24, Z+6	; 0x06
    50a4:	97 81       	ldd	r25, Z+7	; 0x07
    50a6:	02 c0       	rjmp	.+4      	; 0x50ac <vfprintf+0x3dc>
    50a8:	8f ef       	ldi	r24, 0xFF	; 255
    50aa:	9f ef       	ldi	r25, 0xFF	; 255
    50ac:	2b 96       	adiw	r28, 0x0b	; 11
    50ae:	cd bf       	out	0x3d, r28	; 61
    50b0:	de bf       	out	0x3e, r29	; 62
    50b2:	df 91       	pop	r29
    50b4:	cf 91       	pop	r28
    50b6:	1f 91       	pop	r17
    50b8:	0f 91       	pop	r16
    50ba:	ff 90       	pop	r15
    50bc:	ef 90       	pop	r14
    50be:	df 90       	pop	r13
    50c0:	cf 90       	pop	r12
    50c2:	bf 90       	pop	r11
    50c4:	af 90       	pop	r10
    50c6:	9f 90       	pop	r9
    50c8:	8f 90       	pop	r8
    50ca:	7f 90       	pop	r7
    50cc:	6f 90       	pop	r6
    50ce:	5f 90       	pop	r5
    50d0:	4f 90       	pop	r4
    50d2:	3f 90       	pop	r3
    50d4:	2f 90       	pop	r2
    50d6:	08 95       	ret

000050d8 <strnlen_P>:
    50d8:	fc 01       	movw	r30, r24
    50da:	05 90       	lpm	r0, Z+
    50dc:	61 50       	subi	r22, 0x01	; 1
    50de:	70 40       	sbci	r23, 0x00	; 0
    50e0:	01 10       	cpse	r0, r1
    50e2:	d8 f7       	brcc	.-10     	; 0x50da <strnlen_P+0x2>
    50e4:	80 95       	com	r24
    50e6:	90 95       	com	r25
    50e8:	8e 0f       	add	r24, r30
    50ea:	9f 1f       	adc	r25, r31
    50ec:	08 95       	ret

000050ee <strnlen>:
    50ee:	fc 01       	movw	r30, r24
    50f0:	61 50       	subi	r22, 0x01	; 1
    50f2:	70 40       	sbci	r23, 0x00	; 0
    50f4:	01 90       	ld	r0, Z+
    50f6:	01 10       	cpse	r0, r1
    50f8:	d8 f7       	brcc	.-10     	; 0x50f0 <strnlen+0x2>
    50fa:	80 95       	com	r24
    50fc:	90 95       	com	r25
    50fe:	8e 0f       	add	r24, r30
    5100:	9f 1f       	adc	r25, r31
    5102:	08 95       	ret

00005104 <fputc>:
    5104:	0f 93       	push	r16
    5106:	1f 93       	push	r17
    5108:	cf 93       	push	r28
    510a:	df 93       	push	r29
    510c:	fb 01       	movw	r30, r22
    510e:	23 81       	ldd	r18, Z+3	; 0x03
    5110:	21 fd       	sbrc	r18, 1
    5112:	03 c0       	rjmp	.+6      	; 0x511a <fputc+0x16>
    5114:	8f ef       	ldi	r24, 0xFF	; 255
    5116:	9f ef       	ldi	r25, 0xFF	; 255
    5118:	2c c0       	rjmp	.+88     	; 0x5172 <fputc+0x6e>
    511a:	22 ff       	sbrs	r18, 2
    511c:	16 c0       	rjmp	.+44     	; 0x514a <fputc+0x46>
    511e:	46 81       	ldd	r20, Z+6	; 0x06
    5120:	57 81       	ldd	r21, Z+7	; 0x07
    5122:	24 81       	ldd	r18, Z+4	; 0x04
    5124:	35 81       	ldd	r19, Z+5	; 0x05
    5126:	42 17       	cp	r20, r18
    5128:	53 07       	cpc	r21, r19
    512a:	44 f4       	brge	.+16     	; 0x513c <fputc+0x38>
    512c:	a0 81       	ld	r26, Z
    512e:	b1 81       	ldd	r27, Z+1	; 0x01
    5130:	9d 01       	movw	r18, r26
    5132:	2f 5f       	subi	r18, 0xFF	; 255
    5134:	3f 4f       	sbci	r19, 0xFF	; 255
    5136:	20 83       	st	Z, r18
    5138:	31 83       	std	Z+1, r19	; 0x01
    513a:	8c 93       	st	X, r24
    513c:	26 81       	ldd	r18, Z+6	; 0x06
    513e:	37 81       	ldd	r19, Z+7	; 0x07
    5140:	2f 5f       	subi	r18, 0xFF	; 255
    5142:	3f 4f       	sbci	r19, 0xFF	; 255
    5144:	26 83       	std	Z+6, r18	; 0x06
    5146:	37 83       	std	Z+7, r19	; 0x07
    5148:	14 c0       	rjmp	.+40     	; 0x5172 <fputc+0x6e>
    514a:	8b 01       	movw	r16, r22
    514c:	ec 01       	movw	r28, r24
    514e:	fb 01       	movw	r30, r22
    5150:	00 84       	ldd	r0, Z+8	; 0x08
    5152:	f1 85       	ldd	r31, Z+9	; 0x09
    5154:	e0 2d       	mov	r30, r0
    5156:	09 95       	icall
    5158:	89 2b       	or	r24, r25
    515a:	e1 f6       	brne	.-72     	; 0x5114 <fputc+0x10>
    515c:	d8 01       	movw	r26, r16
    515e:	16 96       	adiw	r26, 0x06	; 6
    5160:	8d 91       	ld	r24, X+
    5162:	9c 91       	ld	r25, X
    5164:	17 97       	sbiw	r26, 0x07	; 7
    5166:	01 96       	adiw	r24, 0x01	; 1
    5168:	16 96       	adiw	r26, 0x06	; 6
    516a:	8d 93       	st	X+, r24
    516c:	9c 93       	st	X, r25
    516e:	17 97       	sbiw	r26, 0x07	; 7
    5170:	ce 01       	movw	r24, r28
    5172:	df 91       	pop	r29
    5174:	cf 91       	pop	r28
    5176:	1f 91       	pop	r17
    5178:	0f 91       	pop	r16
    517a:	08 95       	ret

0000517c <__ultoa_invert>:
    517c:	fa 01       	movw	r30, r20
    517e:	aa 27       	eor	r26, r26
    5180:	28 30       	cpi	r18, 0x08	; 8
    5182:	51 f1       	breq	.+84     	; 0x51d8 <__ultoa_invert+0x5c>
    5184:	20 31       	cpi	r18, 0x10	; 16
    5186:	81 f1       	breq	.+96     	; 0x51e8 <__ultoa_invert+0x6c>
    5188:	e8 94       	clt
    518a:	6f 93       	push	r22
    518c:	6e 7f       	andi	r22, 0xFE	; 254
    518e:	6e 5f       	subi	r22, 0xFE	; 254
    5190:	7f 4f       	sbci	r23, 0xFF	; 255
    5192:	8f 4f       	sbci	r24, 0xFF	; 255
    5194:	9f 4f       	sbci	r25, 0xFF	; 255
    5196:	af 4f       	sbci	r26, 0xFF	; 255
    5198:	b1 e0       	ldi	r27, 0x01	; 1
    519a:	3e d0       	rcall	.+124    	; 0x5218 <__ultoa_invert+0x9c>
    519c:	b4 e0       	ldi	r27, 0x04	; 4
    519e:	3c d0       	rcall	.+120    	; 0x5218 <__ultoa_invert+0x9c>
    51a0:	67 0f       	add	r22, r23
    51a2:	78 1f       	adc	r23, r24
    51a4:	89 1f       	adc	r24, r25
    51a6:	9a 1f       	adc	r25, r26
    51a8:	a1 1d       	adc	r26, r1
    51aa:	68 0f       	add	r22, r24
    51ac:	79 1f       	adc	r23, r25
    51ae:	8a 1f       	adc	r24, r26
    51b0:	91 1d       	adc	r25, r1
    51b2:	a1 1d       	adc	r26, r1
    51b4:	6a 0f       	add	r22, r26
    51b6:	71 1d       	adc	r23, r1
    51b8:	81 1d       	adc	r24, r1
    51ba:	91 1d       	adc	r25, r1
    51bc:	a1 1d       	adc	r26, r1
    51be:	20 d0       	rcall	.+64     	; 0x5200 <__ultoa_invert+0x84>
    51c0:	09 f4       	brne	.+2      	; 0x51c4 <__ultoa_invert+0x48>
    51c2:	68 94       	set
    51c4:	3f 91       	pop	r19
    51c6:	2a e0       	ldi	r18, 0x0A	; 10
    51c8:	26 9f       	mul	r18, r22
    51ca:	11 24       	eor	r1, r1
    51cc:	30 19       	sub	r19, r0
    51ce:	30 5d       	subi	r19, 0xD0	; 208
    51d0:	31 93       	st	Z+, r19
    51d2:	de f6       	brtc	.-74     	; 0x518a <__ultoa_invert+0xe>
    51d4:	cf 01       	movw	r24, r30
    51d6:	08 95       	ret
    51d8:	46 2f       	mov	r20, r22
    51da:	47 70       	andi	r20, 0x07	; 7
    51dc:	40 5d       	subi	r20, 0xD0	; 208
    51de:	41 93       	st	Z+, r20
    51e0:	b3 e0       	ldi	r27, 0x03	; 3
    51e2:	0f d0       	rcall	.+30     	; 0x5202 <__ultoa_invert+0x86>
    51e4:	c9 f7       	brne	.-14     	; 0x51d8 <__ultoa_invert+0x5c>
    51e6:	f6 cf       	rjmp	.-20     	; 0x51d4 <__ultoa_invert+0x58>
    51e8:	46 2f       	mov	r20, r22
    51ea:	4f 70       	andi	r20, 0x0F	; 15
    51ec:	40 5d       	subi	r20, 0xD0	; 208
    51ee:	4a 33       	cpi	r20, 0x3A	; 58
    51f0:	18 f0       	brcs	.+6      	; 0x51f8 <__ultoa_invert+0x7c>
    51f2:	49 5d       	subi	r20, 0xD9	; 217
    51f4:	31 fd       	sbrc	r19, 1
    51f6:	40 52       	subi	r20, 0x20	; 32
    51f8:	41 93       	st	Z+, r20
    51fa:	02 d0       	rcall	.+4      	; 0x5200 <__ultoa_invert+0x84>
    51fc:	a9 f7       	brne	.-22     	; 0x51e8 <__ultoa_invert+0x6c>
    51fe:	ea cf       	rjmp	.-44     	; 0x51d4 <__ultoa_invert+0x58>
    5200:	b4 e0       	ldi	r27, 0x04	; 4
    5202:	a6 95       	lsr	r26
    5204:	97 95       	ror	r25
    5206:	87 95       	ror	r24
    5208:	77 95       	ror	r23
    520a:	67 95       	ror	r22
    520c:	ba 95       	dec	r27
    520e:	c9 f7       	brne	.-14     	; 0x5202 <__ultoa_invert+0x86>
    5210:	00 97       	sbiw	r24, 0x00	; 0
    5212:	61 05       	cpc	r22, r1
    5214:	71 05       	cpc	r23, r1
    5216:	08 95       	ret
    5218:	9b 01       	movw	r18, r22
    521a:	ac 01       	movw	r20, r24
    521c:	0a 2e       	mov	r0, r26
    521e:	06 94       	lsr	r0
    5220:	57 95       	ror	r21
    5222:	47 95       	ror	r20
    5224:	37 95       	ror	r19
    5226:	27 95       	ror	r18
    5228:	ba 95       	dec	r27
    522a:	c9 f7       	brne	.-14     	; 0x521e <__ultoa_invert+0xa2>
    522c:	62 0f       	add	r22, r18
    522e:	73 1f       	adc	r23, r19
    5230:	84 1f       	adc	r24, r20
    5232:	95 1f       	adc	r25, r21
    5234:	a0 1d       	adc	r26, r0
    5236:	08 95       	ret

00005238 <eeprom_read_byte>:
    5238:	03 d0       	rcall	.+6      	; 0x5240 <eeprom_mapen>
    523a:	80 81       	ld	r24, Z
    523c:	99 27       	eor	r25, r25
    523e:	08 95       	ret

00005240 <eeprom_mapen>:
    5240:	fc 01       	movw	r30, r24
    5242:	e0 50       	subi	r30, 0x00	; 0
    5244:	fc 4e       	sbci	r31, 0xEC	; 236
    5246:	08 95       	ret

00005248 <eeprom_update_dword>:
    5248:	03 96       	adiw	r24, 0x03	; 3
    524a:	27 2f       	mov	r18, r23
    524c:	0e 94 55 29 	call	0x52aa	; 0x52aa <eeprom_update_r18>
    5250:	0e 94 54 29 	call	0x52a8	; 0x52a8 <eeprom_update_byte>
    5254:	25 2f       	mov	r18, r21
    5256:	0e 94 55 29 	call	0x52aa	; 0x52aa <eeprom_update_r18>
    525a:	24 2f       	mov	r18, r20
    525c:	0c 94 55 29 	jmp	0x52aa	; 0x52aa <eeprom_update_r18>

00005260 <eeprom_update_word>:
    5260:	01 96       	adiw	r24, 0x01	; 1
    5262:	27 2f       	mov	r18, r23
    5264:	0e 94 55 29 	call	0x52aa	; 0x52aa <eeprom_update_r18>
    5268:	0c 94 54 29 	jmp	0x52a8	; 0x52a8 <eeprom_update_byte>

0000526c <eeprom_write_block>:
    526c:	dc 01       	movw	r26, r24
    526e:	cb 01       	movw	r24, r22
    5270:	03 c0       	rjmp	.+6      	; 0x5278 <eeprom_write_block+0xc>
    5272:	2d 91       	ld	r18, X+
    5274:	0e 94 41 29 	call	0x5282	; 0x5282 <eeprom_write_r18>
    5278:	41 50       	subi	r20, 0x01	; 1
    527a:	50 40       	sbci	r21, 0x00	; 0
    527c:	d0 f7       	brcc	.-12     	; 0x5272 <eeprom_write_block+0x6>
    527e:	08 95       	ret

00005280 <eeprom_write_byte>:
    5280:	26 2f       	mov	r18, r22

00005282 <eeprom_write_r18>:
    5282:	af 93       	push	r26
    5284:	bf 93       	push	r27
    5286:	e0 e0       	ldi	r30, 0x00	; 0
    5288:	f0 e1       	ldi	r31, 0x10	; 16
    528a:	32 81       	ldd	r19, Z+2	; 0x02
    528c:	31 fd       	sbrc	r19, 1
    528e:	fd cf       	rjmp	.-6      	; 0x528a <eeprom_write_r18+0x8>
    5290:	dc 01       	movw	r26, r24
    5292:	a0 50       	subi	r26, 0x00	; 0
    5294:	bc 4e       	sbci	r27, 0xEC	; 236
    5296:	2c 93       	st	X, r18
    5298:	2d e9       	ldi	r18, 0x9D	; 157
    529a:	24 bf       	out	0x34, r18	; 52
    529c:	23 e0       	ldi	r18, 0x03	; 3
    529e:	20 83       	st	Z, r18
    52a0:	01 96       	adiw	r24, 0x01	; 1
    52a2:	bf 91       	pop	r27
    52a4:	af 91       	pop	r26
    52a6:	08 95       	ret

000052a8 <eeprom_update_byte>:
    52a8:	26 2f       	mov	r18, r22

000052aa <eeprom_update_r18>:
    52aa:	0e 94 20 29 	call	0x5240	; 0x5240 <eeprom_mapen>
    52ae:	00 80       	ld	r0, Z
    52b0:	02 16       	cp	r0, r18
    52b2:	19 f0       	breq	.+6      	; 0x52ba <eeprom_update_r18+0x10>
    52b4:	0e 94 41 29 	call	0x5282	; 0x5282 <eeprom_write_r18>
    52b8:	01 97       	sbiw	r24, 0x01	; 1
    52ba:	01 97       	sbiw	r24, 0x01	; 1
    52bc:	08 95       	ret

000052be <__do_global_dtors>:
    52be:	10 e0       	ldi	r17, 0x00	; 0
    52c0:	c2 ed       	ldi	r28, 0xD2	; 210
    52c2:	d0 e0       	ldi	r29, 0x00	; 0
    52c4:	04 c0       	rjmp	.+8      	; 0x52ce <__do_global_dtors+0x10>
    52c6:	fe 01       	movw	r30, r28
    52c8:	0e 94 73 24 	call	0x48e6	; 0x48e6 <__tablejump2__>
    52cc:	21 96       	adiw	r28, 0x01	; 1
    52ce:	c3 3d       	cpi	r28, 0xD3	; 211
    52d0:	d1 07       	cpc	r29, r17
    52d2:	c9 f7       	brne	.-14     	; 0x52c6 <__do_global_dtors+0x8>
    52d4:	f8 94       	cli

000052d6 <__stop_program>:
    52d6:	ff cf       	rjmp	.-2      	; 0x52d6 <__stop_program>
