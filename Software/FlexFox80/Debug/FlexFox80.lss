
FlexFox80.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000a  00804000  00001284  00001318  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001284  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000015f  0080400a  0080400a  00001322  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001322  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001380  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000288  00000000  00000000  000013c0  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00005a1b  00000000  00000000  00001648  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000372d  00000000  00000000  00007063  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000170b  00000000  00000000  0000a790  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000051c  00000000  00000000  0000be9c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00002306  00000000  00000000  0000c3b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000b93  00000000  00000000  0000e6be  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001d0  00000000  00000000  0000f251  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__ctors_end>
       4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
       8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
       c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      10:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      14:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      18:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      1c:	0c 94 98 00 	jmp	0x130	; 0x130 <__vector_7>
      20:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      24:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      28:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      2c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      30:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__vector_12>
      34:	0c 94 ba 00 	jmp	0x174	; 0x174 <__vector_13>
      38:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      3c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      40:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      44:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      48:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      4c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      50:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      54:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      58:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      5c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      60:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      64:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      68:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      6c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      70:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      74:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      78:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__vector_30>
      7c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__vector_31>
      80:	0c 94 35 02 	jmp	0x46a	; 0x46a <__vector_32>
      84:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      88:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      8c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      90:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      94:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      98:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      9c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a4:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__vector_41>
      a8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      ac:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      bc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      cc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      dc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      e0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      e4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>

000000e8 <__ctors_end>:
      e8:	11 24       	eor	r1, r1
      ea:	1f be       	out	0x3f, r1	; 63
      ec:	cf ef       	ldi	r28, 0xFF	; 255
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	df e7       	ldi	r29, 0x7F	; 127
      f2:	de bf       	out	0x3e, r29	; 62

000000f4 <__do_copy_data>:
      f4:	10 e4       	ldi	r17, 0x40	; 64
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b0 e4       	ldi	r27, 0x40	; 64
      fa:	e4 e8       	ldi	r30, 0x84	; 132
      fc:	f2 e1       	ldi	r31, 0x12	; 18
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	aa 30       	cpi	r26, 0x0A	; 10
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	21 e4       	ldi	r18, 0x41	; 65
     110:	aa e0       	ldi	r26, 0x0A	; 10
     112:	b0 e4       	ldi	r27, 0x40	; 64
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	a9 36       	cpi	r26, 0x69	; 105
     11a:	b2 07       	cpc	r27, r18
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	0e 94 86 02 	call	0x50c	; 0x50c <main>
     122:	0c 94 40 09 	jmp	0x1280	; 0x1280 <_exit>

00000126 <__bad_interrupt>:
     126:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000012a <atmel_start_init>:
/**
 * Initializes MCU, drivers and middleware in the project
 **/
void atmel_start_init(void)
{
	system_init();
     12a:	0e 94 e5 02 	call	0x5ca	; 0x5ca <system_init>
     12e:	08 95       	ret

00000130 <__vector_7>:
#include <ctype.h> /* toupper() */
#include "src/linkbus.h"
#include "include/usart_basic.h"

ISR(TCA0_OVF_vect)
{
     130:	1f 92       	push	r1
     132:	0f 92       	push	r0
     134:	0f b6       	in	r0, 0x3f	; 63
     136:	0f 92       	push	r0
     138:	11 24       	eor	r1, r1
     13a:	8f 93       	push	r24
	/* Insert your TCA overflow interrupt handling code */
//	LED_toggle_level();

	/* The interrupt flag has to be cleared manually */
	TCA0.SINGLE.INTFLAGS = TCA_SINGLE_OVF_bm;
     13c:	81 e0       	ldi	r24, 0x01	; 1
     13e:	80 93 0b 0a 	sts	0x0A0B, r24	; 0x800a0b <__TEXT_REGION_LENGTH__+0x7e0a0b>
}
     142:	8f 91       	pop	r24
     144:	0f 90       	pop	r0
     146:	0f be       	out	0x3f, r0	; 63
     148:	0f 90       	pop	r0
     14a:	1f 90       	pop	r1
     14c:	18 95       	reti

0000014e <__vector_12>:

/**
Periodic tasks not requiring precise timing. Rate = 300 Hz
*/
ISR(TCB0_INT_vect)
{
     14e:	1f 92       	push	r1
     150:	0f 92       	push	r0
     152:	0f b6       	in	r0, 0x3f	; 63
     154:	0f 92       	push	r0
     156:	11 24       	eor	r1, r1
     158:	8f 93       	push	r24
    /**
     * The interrupt flag is cleared by writing 1 to it, or when the Capture register
     * is read in Capture mode
     */

    if(TCB0.INTFLAGS & TCB_CAPT_bm)
     15a:	80 91 06 0b 	lds	r24, 0x0B06	; 0x800b06 <__TEXT_REGION_LENGTH__+0x7e0b06>
     15e:	80 ff       	sbrs	r24, 0
     160:	03 c0       	rjmp	.+6      	; 0x168 <__vector_12+0x1a>
    {
        TCB0.INTFLAGS = TCB_CAPT_bm;
     162:	81 e0       	ldi	r24, 0x01	; 1
     164:	80 93 06 0b 	sts	0x0B06, r24	; 0x800b06 <__TEXT_REGION_LENGTH__+0x7e0b06>
    }
}
     168:	8f 91       	pop	r24
     16a:	0f 90       	pop	r0
     16c:	0f be       	out	0x3f, r0	; 63
     16e:	0f 90       	pop	r0
     170:	1f 90       	pop	r1
     172:	18 95       	reti

00000174 <__vector_13>:

ISR(TCB1_INT_vect)
{
     174:	1f 92       	push	r1
     176:	0f 92       	push	r0
     178:	0f b6       	in	r0, 0x3f	; 63
     17a:	0f 92       	push	r0
     17c:	11 24       	eor	r1, r1
     17e:	8f 93       	push	r24
    if(TCB1.INTFLAGS & TCB_CAPT_bm)
     180:	80 91 16 0b 	lds	r24, 0x0B16	; 0x800b16 <__TEXT_REGION_LENGTH__+0x7e0b16>
     184:	80 ff       	sbrs	r24, 0
     186:	03 c0       	rjmp	.+6      	; 0x18e <__vector_13+0x1a>
    {
        TCB1.INTFLAGS = TCB_CAPT_bm;
     188:	81 e0       	ldi	r24, 0x01	; 1
     18a:	80 93 16 0b 	sts	0x0B16, r24	; 0x800b16 <__TEXT_REGION_LENGTH__+0x7e0b16>
    }
}
     18e:	8f 91       	pop	r24
     190:	0f 90       	pop	r0
     192:	0f be       	out	0x3f, r0	; 63
     194:	0f 90       	pop	r0
     196:	1f 90       	pop	r1
     198:	18 95       	reti

0000019a <__vector_30>:

ISR(TCB2_INT_vect)
{
     19a:	1f 92       	push	r1
     19c:	0f 92       	push	r0
     19e:	0f b6       	in	r0, 0x3f	; 63
     1a0:	0f 92       	push	r0
     1a2:	11 24       	eor	r1, r1
     1a4:	8f 93       	push	r24
	if(TCB2.INTFLAGS & TCB_CAPT_bm)
     1a6:	80 91 26 0b 	lds	r24, 0x0B26	; 0x800b26 <__TEXT_REGION_LENGTH__+0x7e0b26>
     1aa:	80 ff       	sbrs	r24, 0
     1ac:	03 c0       	rjmp	.+6      	; 0x1b4 <__vector_30+0x1a>
    {
        TCB2.INTFLAGS = TCB_CAPT_bm;
     1ae:	81 e0       	ldi	r24, 0x01	; 1
     1b0:	80 93 26 0b 	sts	0x0B26, r24	; 0x800b26 <__TEXT_REGION_LENGTH__+0x7e0b26>
    }
}
     1b4:	8f 91       	pop	r24
     1b6:	0f 90       	pop	r0
     1b8:	0f be       	out	0x3f, r0	; 63
     1ba:	0f 90       	pop	r0
     1bc:	1f 90       	pop	r1
     1be:	18 95       	reti

000001c0 <__vector_41>:

/**
One second counter based on CPU clock.
*/
ISR(TCB3_INT_vect)
{
     1c0:	1f 92       	push	r1
     1c2:	0f 92       	push	r0
     1c4:	0f b6       	in	r0, 0x3f	; 63
     1c6:	0f 92       	push	r0
     1c8:	11 24       	eor	r1, r1
     1ca:	2f 93       	push	r18
     1cc:	3f 93       	push	r19
     1ce:	8f 93       	push	r24
     1d0:	9f 93       	push	r25
    /**
     * The interrupt flag is cleared by writing 1 to it, or when the Capture register
     * is read in Capture mode
     */

    if(TCB3.INTFLAGS & TCB_CAPT_bm)
     1d2:	80 91 36 0b 	lds	r24, 0x0B36	; 0x800b36 <__TEXT_REGION_LENGTH__+0x7e0b36>
     1d6:	80 ff       	sbrs	r24, 0
     1d8:	18 c0       	rjmp	.+48     	; 0x20a <__EEPROM_REGION_LENGTH__+0xa>
    {
		if(cnt++ == 299)
     1da:	80 91 17 40 	lds	r24, 0x4017	; 0x804017 <cnt.4938>
     1de:	90 91 18 40 	lds	r25, 0x4018	; 0x804018 <cnt.4938+0x1>
     1e2:	9c 01       	movw	r18, r24
     1e4:	2f 5f       	subi	r18, 0xFF	; 255
     1e6:	3f 4f       	sbci	r19, 0xFF	; 255
     1e8:	20 93 17 40 	sts	0x4017, r18	; 0x804017 <cnt.4938>
     1ec:	30 93 18 40 	sts	0x4018, r19	; 0x804018 <cnt.4938+0x1>
     1f0:	8b 32       	cpi	r24, 0x2B	; 43
     1f2:	91 40       	sbci	r25, 0x01	; 1
     1f4:	39 f4       	brne	.+14     	; 0x204 <__EEPROM_REGION_LENGTH__+0x4>
		{
			cnt = 0;
     1f6:	10 92 17 40 	sts	0x4017, r1	; 0x804017 <cnt.4938>
     1fa:	10 92 18 40 	sts	0x4018, r1	; 0x804018 <cnt.4938+0x1>
 *
 * \param[in] pin       The pin number within port
 */
static inline void PORTC_toggle_pin_level(const uint8_t pin)
{
	VPORTC.IN |= 1 << pin;
     1fe:	8a b1       	in	r24, 0x0a	; 10
     200:	80 64       	ori	r24, 0x40	; 64
     202:	8a b9       	out	0x0a, r24	; 10
			LED_toggle_level();
		}

        TCB3.INTFLAGS = TCB_CAPT_bm;
     204:	81 e0       	ldi	r24, 0x01	; 1
     206:	80 93 36 0b 	sts	0x0B36, r24	; 0x800b36 <__TEXT_REGION_LENGTH__+0x7e0b36>
    }
}
     20a:	9f 91       	pop	r25
     20c:	8f 91       	pop	r24
     20e:	3f 91       	pop	r19
     210:	2f 91       	pop	r18
     212:	0f 90       	pop	r0
     214:	0f be       	out	0x3f, r0	; 63
     216:	0f 90       	pop	r0
     218:	1f 90       	pop	r1
     21a:	18 95       	reti

0000021c <__vector_31>:

/**

*/
ISR(USART1_RXC_vect)
{
     21c:	1f 92       	push	r1
     21e:	0f 92       	push	r0
     220:	0f b6       	in	r0, 0x3f	; 63
     222:	0f 92       	push	r0
     224:	11 24       	eor	r1, r1
     226:	0b b6       	in	r0, 0x3b	; 59
     228:	0f 92       	push	r0
     22a:	0f 93       	push	r16
     22c:	1f 93       	push	r17
     22e:	2f 93       	push	r18
     230:	3f 93       	push	r19
     232:	4f 93       	push	r20
     234:	5f 93       	push	r21
     236:	6f 93       	push	r22
     238:	7f 93       	push	r23
     23a:	8f 93       	push	r24
     23c:	9f 93       	push	r25
     23e:	af 93       	push	r26
     240:	bf 93       	push	r27
     242:	cf 93       	push	r28
     244:	df 93       	push	r29
     246:	ef 93       	push	r30
     248:	ff 93       	push	r31
	static uint8_t field_len = 0;
	static uint32_t msg_ID = 0;
	static BOOL receiving_msg = FALSE;
	uint8_t rx_char;

	rx_char = USART1_get_data();
     24a:	0e 94 4f 04 	call	0x89e	; 0x89e <USART1_get_data>
     24e:	18 2f       	mov	r17, r24

	if(!buff)
     250:	80 91 15 40 	lds	r24, 0x4015	; 0x804015 <buff.4944>
     254:	90 91 16 40 	lds	r25, 0x4016	; 0x804016 <buff.4944+0x1>
     258:	89 2b       	or	r24, r25
     25a:	31 f4       	brne	.+12     	; 0x268 <__vector_31+0x4c>
	{
		buff = nextEmptyRxBuffer();
     25c:	0e 94 52 03 	call	0x6a4	; 0x6a4 <nextEmptyRxBuffer>
     260:	80 93 15 40 	sts	0x4015, r24	; 0x804015 <buff.4944>
     264:	90 93 16 40 	sts	0x4016, r25	; 0x804016 <buff.4944+0x1>
	}

	if(buff)
     268:	c0 91 15 40 	lds	r28, 0x4015	; 0x804015 <buff.4944>
     26c:	d0 91 16 40 	lds	r29, 0x4016	; 0x804016 <buff.4944+0x1>
     270:	20 97       	sbiw	r28, 0x00	; 0
     272:	09 f4       	brne	.+2      	; 0x276 <__vector_31+0x5a>
     274:	e3 c0       	rjmp	.+454    	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
	{
		rx_char = toupper(rx_char);
     276:	81 2f       	mov	r24, r17
     278:	90 e0       	ldi	r25, 0x00	; 0
     27a:	0e 94 5b 06 	call	0xcb6	; 0xcb6 <toupper>
//		SMCR = 0x00;                                /* exit power-down mode */

		if((rx_char == '$') || (rx_char == '!'))    /* start of new message = $ */
     27e:	84 32       	cpi	r24, 0x24	; 36
     280:	11 f0       	breq	.+4      	; 0x286 <__vector_31+0x6a>
     282:	81 32       	cpi	r24, 0x21	; 33
     284:	49 f5       	brne	.+82     	; 0x2d8 <__vector_31+0xbc>
		{
			charIndex = 0;
     286:	10 92 14 40 	sts	0x4014, r1	; 0x804014 <charIndex.4945>
			buff->type = (rx_char == '!') ? LINKBUS_MSG_REPLY : LINKBUS_MSG_COMMAND;
     28a:	81 32       	cpi	r24, 0x21	; 33
     28c:	11 f4       	brne	.+4      	; 0x292 <__vector_31+0x76>
     28e:	83 e0       	ldi	r24, 0x03	; 3
     290:	01 c0       	rjmp	.+2      	; 0x294 <__vector_31+0x78>
     292:	81 e0       	ldi	r24, 0x01	; 1
     294:	88 83       	st	Y, r24
			field_len = 0;
     296:	10 92 13 40 	sts	0x4013, r1	; 0x804013 <field_len.4947>
			msg_ID = LINKBUS_MSG_UNKNOWN;
     29a:	10 92 0f 40 	sts	0x400F, r1	; 0x80400f <msg_ID.4948>
     29e:	10 92 10 40 	sts	0x4010, r1	; 0x804010 <msg_ID.4948+0x1>
     2a2:	10 92 11 40 	sts	0x4011, r1	; 0x804011 <msg_ID.4948+0x2>
     2a6:	10 92 12 40 	sts	0x4012, r1	; 0x804012 <msg_ID.4948+0x3>
			receiving_msg = TRUE;
     2aa:	81 e0       	ldi	r24, 0x01	; 1
     2ac:	80 93 0e 40 	sts	0x400E, r24	; 0x80400e <receiving_msg.4949>

			/* Empty the field buffers */
			for(field_index = 0; field_index < LINKBUS_MAX_MSG_NUMBER_OF_FIELDS; field_index++)
     2b0:	10 92 0d 40 	sts	0x400D, r1	; 0x80400d <field_index.4946>
     2b4:	0a c0       	rjmp	.+20     	; 0x2ca <__vector_31+0xae>
			{
				buff->fields[field_index][0] = '\0';
     2b6:	fe 01       	movw	r30, r28
     2b8:	05 e1       	ldi	r16, 0x15	; 21
     2ba:	80 9f       	mul	r24, r16
     2bc:	e0 0d       	add	r30, r0
     2be:	f1 1d       	adc	r31, r1
     2c0:	11 24       	eor	r1, r1
     2c2:	13 82       	std	Z+3, r1	; 0x03
			field_len = 0;
			msg_ID = LINKBUS_MSG_UNKNOWN;
			receiving_msg = TRUE;

			/* Empty the field buffers */
			for(field_index = 0; field_index < LINKBUS_MAX_MSG_NUMBER_OF_FIELDS; field_index++)
     2c4:	8f 5f       	subi	r24, 0xFF	; 255
     2c6:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <field_index.4946>
     2ca:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <field_index.4946>
     2ce:	83 30       	cpi	r24, 0x03	; 3
     2d0:	90 f3       	brcs	.-28     	; 0x2b6 <__vector_31+0x9a>
			{
				buff->fields[field_index][0] = '\0';
			}

			field_index = 0;
     2d2:	10 92 0d 40 	sts	0x400D, r1	; 0x80400d <field_index.4946>
     2d6:	a7 c0       	rjmp	.+334    	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
		}
		else if(receiving_msg)
     2d8:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <receiving_msg.4949>
     2dc:	99 23       	and	r25, r25
     2de:	09 f4       	brne	.+2      	; 0x2e2 <__vector_31+0xc6>
     2e0:	8b c0       	rjmp	.+278    	; 0x3f8 <__vector_31+0x1dc>
		{
			if((rx_char == ',') || (rx_char == ';') || (rx_char == '?'))    /* new field = ,; end of message = ; */
     2e2:	8c 32       	cpi	r24, 0x2C	; 44
     2e4:	29 f0       	breq	.+10     	; 0x2f0 <__vector_31+0xd4>
     2e6:	8b 33       	cpi	r24, 0x3B	; 59
     2e8:	19 f0       	breq	.+6      	; 0x2f0 <__vector_31+0xd4>
     2ea:	8f 33       	cpi	r24, 0x3F	; 63
     2ec:	09 f0       	breq	.+2      	; 0x2f0 <__vector_31+0xd4>
     2ee:	42 c0       	rjmp	.+132    	; 0x374 <__vector_31+0x158>
			{
				/* if(field_index == 0) // message ID received */
				if(field_index > 0)
     2f0:	90 91 0d 40 	lds	r25, 0x400D	; 0x80400d <field_index.4946>
     2f4:	99 23       	and	r25, r25
     2f6:	89 f0       	breq	.+34     	; 0x31a <__vector_31+0xfe>
				{
					buff->fields[field_index - 1][field_len] = 0;
     2f8:	29 2f       	mov	r18, r25
     2fa:	30 e0       	ldi	r19, 0x00	; 0
     2fc:	21 50       	subi	r18, 0x01	; 1
     2fe:	31 09       	sbc	r19, r1
     300:	40 91 13 40 	lds	r20, 0x4013	; 0x804013 <field_len.4947>
     304:	55 e1       	ldi	r21, 0x15	; 21
     306:	52 9f       	mul	r21, r18
     308:	f0 01       	movw	r30, r0
     30a:	53 9f       	mul	r21, r19
     30c:	f0 0d       	add	r31, r0
     30e:	11 24       	eor	r1, r1
     310:	ec 0f       	add	r30, r28
     312:	fd 1f       	adc	r31, r29
     314:	e4 0f       	add	r30, r20
     316:	f1 1d       	adc	r31, r1
     318:	13 82       	std	Z+3, r1	; 0x03
				}

				field_index++;
     31a:	9f 5f       	subi	r25, 0xFF	; 255
     31c:	90 93 0d 40 	sts	0x400D, r25	; 0x80400d <field_index.4946>
				field_len = 0;
     320:	10 92 13 40 	sts	0x4013, r1	; 0x804013 <field_len.4947>

				if(rx_char == ';')
     324:	8b 33       	cpi	r24, 0x3B	; 59
     326:	69 f4       	brne	.+26     	; 0x342 <__vector_31+0x126>
				{
					if(charIndex > LINKBUS_MIN_MSG_LENGTH)
     328:	80 91 14 40 	lds	r24, 0x4014	; 0x804014 <charIndex.4945>
     32c:	84 30       	cpi	r24, 0x04	; 4
     32e:	30 f0       	brcs	.+12     	; 0x33c <__vector_31+0x120>
					{
						buff->id = (LBMessageID)msg_ID;
     330:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <msg_ID.4948>
     334:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <msg_ID.4948+0x1>
     338:	89 83       	std	Y+1, r24	; 0x01
     33a:	9a 83       	std	Y+2, r25	; 0x02
					}
					receiving_msg = FALSE;
     33c:	10 92 0e 40 	sts	0x400E, r1	; 0x80400e <receiving_msg.4949>
     340:	10 c0       	rjmp	.+32     	; 0x362 <__vector_31+0x146>
				}
				else if(rx_char == '?')
     342:	8f 33       	cpi	r24, 0x3F	; 63
     344:	71 f4       	brne	.+28     	; 0x362 <__vector_31+0x146>
				{
					buff->type = LINKBUS_MSG_QUERY;
     346:	82 e0       	ldi	r24, 0x02	; 2
     348:	88 83       	st	Y, r24
					if(charIndex > LINKBUS_MIN_MSG_LENGTH)
     34a:	80 91 14 40 	lds	r24, 0x4014	; 0x804014 <charIndex.4945>
     34e:	84 30       	cpi	r24, 0x04	; 4
     350:	30 f0       	brcs	.+12     	; 0x35e <__vector_31+0x142>
					{
						buff->id = msg_ID;
     352:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <msg_ID.4948>
     356:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <msg_ID.4948+0x1>
     35a:	89 83       	std	Y+1, r24	; 0x01
     35c:	9a 83       	std	Y+2, r25	; 0x02
					}
					receiving_msg = FALSE;
     35e:	10 92 0e 40 	sts	0x400E, r1	; 0x80400e <receiving_msg.4949>
				}

				if(!receiving_msg)
     362:	80 91 0e 40 	lds	r24, 0x400E	; 0x80400e <receiving_msg.4949>
     366:	81 11       	cpse	r24, r1
     368:	5e c0       	rjmp	.+188    	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
				{
					buff = 0;
     36a:	10 92 15 40 	sts	0x4015, r1	; 0x804015 <buff.4944>
     36e:	10 92 16 40 	sts	0x4016, r1	; 0x804016 <buff.4944+0x1>
     372:	59 c0       	rjmp	.+178    	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
				}
			}
			else
			{
				if(field_index == 0)    /* message ID received */
     374:	20 91 0d 40 	lds	r18, 0x400D	; 0x80400d <field_index.4946>
     378:	21 11       	cpse	r18, r1
     37a:	29 c0       	rjmp	.+82     	; 0x3ce <__vector_31+0x1b2>
				{
					msg_ID = msg_ID * 10 + rx_char;
     37c:	40 91 0f 40 	lds	r20, 0x400F	; 0x80400f <msg_ID.4948>
     380:	50 91 10 40 	lds	r21, 0x4010	; 0x804010 <msg_ID.4948+0x1>
     384:	60 91 11 40 	lds	r22, 0x4011	; 0x804011 <msg_ID.4948+0x2>
     388:	70 91 12 40 	lds	r23, 0x4012	; 0x804012 <msg_ID.4948+0x3>
     38c:	44 0f       	add	r20, r20
     38e:	55 1f       	adc	r21, r21
     390:	66 1f       	adc	r22, r22
     392:	77 1f       	adc	r23, r23
     394:	8a 01       	movw	r16, r20
     396:	9b 01       	movw	r18, r22
     398:	00 0f       	add	r16, r16
     39a:	11 1f       	adc	r17, r17
     39c:	22 1f       	adc	r18, r18
     39e:	33 1f       	adc	r19, r19
     3a0:	00 0f       	add	r16, r16
     3a2:	11 1f       	adc	r17, r17
     3a4:	22 1f       	adc	r18, r18
     3a6:	33 1f       	adc	r19, r19
     3a8:	40 0f       	add	r20, r16
     3aa:	51 1f       	adc	r21, r17
     3ac:	62 1f       	adc	r22, r18
     3ae:	73 1f       	adc	r23, r19
     3b0:	8a 01       	movw	r16, r20
     3b2:	9b 01       	movw	r18, r22
     3b4:	08 0f       	add	r16, r24
     3b6:	11 1d       	adc	r17, r1
     3b8:	21 1d       	adc	r18, r1
     3ba:	31 1d       	adc	r19, r1
     3bc:	00 93 0f 40 	sts	0x400F, r16	; 0x80400f <msg_ID.4948>
     3c0:	10 93 10 40 	sts	0x4010, r17	; 0x804010 <msg_ID.4948+0x1>
     3c4:	20 93 11 40 	sts	0x4011, r18	; 0x804011 <msg_ID.4948+0x2>
     3c8:	30 93 12 40 	sts	0x4012, r19	; 0x804012 <msg_ID.4948+0x3>
     3cc:	2c c0       	rjmp	.+88     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
				}
				else
				{
					buff->fields[field_index - 1][field_len++] = rx_char;
     3ce:	30 e0       	ldi	r19, 0x00	; 0
     3d0:	21 50       	subi	r18, 0x01	; 1
     3d2:	31 09       	sbc	r19, r1
     3d4:	90 91 13 40 	lds	r25, 0x4013	; 0x804013 <field_len.4947>
     3d8:	41 e0       	ldi	r20, 0x01	; 1
     3da:	49 0f       	add	r20, r25
     3dc:	40 93 13 40 	sts	0x4013, r20	; 0x804013 <field_len.4947>
     3e0:	65 e1       	ldi	r22, 0x15	; 21
     3e2:	62 9f       	mul	r22, r18
     3e4:	a0 01       	movw	r20, r0
     3e6:	63 9f       	mul	r22, r19
     3e8:	50 0d       	add	r21, r0
     3ea:	11 24       	eor	r1, r1
     3ec:	c4 0f       	add	r28, r20
     3ee:	d5 1f       	adc	r29, r21
     3f0:	c9 0f       	add	r28, r25
     3f2:	d1 1d       	adc	r29, r1
     3f4:	8b 83       	std	Y+3, r24	; 0x03
     3f6:	17 c0       	rjmp	.+46     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
				}
			}
		}
		else if(rx_char == 0x0D)    /* Handle carriage return */
     3f8:	8d 30       	cpi	r24, 0x0D	; 13
     3fa:	a9 f4       	brne	.+42     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
		{
			buff->id = LINKBUS_MSG_UNKNOWN;
     3fc:	19 82       	std	Y+1, r1	; 0x01
     3fe:	1a 82       	std	Y+2, r1	; 0x02
			charIndex = LINKBUS_MAX_MSG_LENGTH;
     400:	82 e3       	ldi	r24, 0x32	; 50
     402:	80 93 14 40 	sts	0x4014, r24	; 0x804014 <charIndex.4945>
			field_len = 0;
     406:	10 92 13 40 	sts	0x4013, r1	; 0x804013 <field_len.4947>
			msg_ID = LINKBUS_MSG_UNKNOWN;
     40a:	10 92 0f 40 	sts	0x400F, r1	; 0x80400f <msg_ID.4948>
     40e:	10 92 10 40 	sts	0x4010, r1	; 0x804010 <msg_ID.4948+0x1>
     412:	10 92 11 40 	sts	0x4011, r1	; 0x804011 <msg_ID.4948+0x2>
     416:	10 92 12 40 	sts	0x4012, r1	; 0x804012 <msg_ID.4948+0x3>
			field_index = 0;
     41a:	10 92 0d 40 	sts	0x400D, r1	; 0x80400d <field_index.4946>
			buff = NULL;
     41e:	10 92 15 40 	sts	0x4015, r1	; 0x804015 <buff.4944>
     422:	10 92 16 40 	sts	0x4016, r1	; 0x804016 <buff.4944+0x1>
		}

		if(++charIndex >= LINKBUS_MAX_MSG_LENGTH)
     426:	80 91 14 40 	lds	r24, 0x4014	; 0x804014 <charIndex.4945>
     42a:	8f 5f       	subi	r24, 0xFF	; 255
     42c:	80 93 14 40 	sts	0x4014, r24	; 0x804014 <charIndex.4945>
     430:	82 33       	cpi	r24, 0x32	; 50
     432:	20 f0       	brcs	.+8      	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
		{
			receiving_msg = FALSE;
     434:	10 92 0e 40 	sts	0x400E, r1	; 0x80400e <receiving_msg.4949>
			charIndex = 0;
     438:	10 92 14 40 	sts	0x4014, r1	; 0x804014 <charIndex.4945>
		}
	}
}
     43c:	ff 91       	pop	r31
     43e:	ef 91       	pop	r30
     440:	df 91       	pop	r29
     442:	cf 91       	pop	r28
     444:	bf 91       	pop	r27
     446:	af 91       	pop	r26
     448:	9f 91       	pop	r25
     44a:	8f 91       	pop	r24
     44c:	7f 91       	pop	r23
     44e:	6f 91       	pop	r22
     450:	5f 91       	pop	r21
     452:	4f 91       	pop	r20
     454:	3f 91       	pop	r19
     456:	2f 91       	pop	r18
     458:	1f 91       	pop	r17
     45a:	0f 91       	pop	r16
     45c:	0f 90       	pop	r0
     45e:	0b be       	out	0x3b, r0	; 59
     460:	0f 90       	pop	r0
     462:	0f be       	out	0x3f, r0	; 63
     464:	0f 90       	pop	r0
     466:	1f 90       	pop	r1
     468:	18 95       	reti

0000046a <__vector_32>:

/**

*/
ISR(USART1_DRE_vect)
{
     46a:	1f 92       	push	r1
     46c:	0f 92       	push	r0
     46e:	0f b6       	in	r0, 0x3f	; 63
     470:	0f 92       	push	r0
     472:	11 24       	eor	r1, r1
     474:	0b b6       	in	r0, 0x3b	; 59
     476:	0f 92       	push	r0
     478:	2f 93       	push	r18
     47a:	3f 93       	push	r19
     47c:	4f 93       	push	r20
     47e:	5f 93       	push	r21
     480:	6f 93       	push	r22
     482:	7f 93       	push	r23
     484:	8f 93       	push	r24
     486:	9f 93       	push	r25
     488:	af 93       	push	r26
     48a:	bf 93       	push	r27
     48c:	ef 93       	push	r30
     48e:	ff 93       	push	r31
	static LinkbusTxBuffer* buff = 0;
	static uint8_t charIndex = 0;

	if(!buff)
     490:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <buff.4959>
     494:	90 91 0c 40 	lds	r25, 0x400C	; 0x80400c <buff.4959+0x1>
     498:	89 2b       	or	r24, r25
     49a:	31 f4       	brne	.+12     	; 0x4a8 <__vector_32+0x3e>
	{
		buff = nextFullTxBuffer();
     49c:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <nextFullTxBuffer>
     4a0:	80 93 0b 40 	sts	0x400B, r24	; 0x80400b <buff.4959>
     4a4:	90 93 0c 40 	sts	0x400C, r25	; 0x80400c <buff.4959+0x1>
	}

	if((*buff)[charIndex])
     4a8:	e0 91 0b 40 	lds	r30, 0x400B	; 0x80400b <buff.4959>
     4ac:	f0 91 0c 40 	lds	r31, 0x400C	; 0x80400c <buff.4959+0x1>
     4b0:	80 91 0a 40 	lds	r24, 0x400A	; 0x80400a <__data_end>
     4b4:	df 01       	movw	r26, r30
     4b6:	a8 0f       	add	r26, r24
     4b8:	b1 1d       	adc	r27, r1
     4ba:	9c 91       	ld	r25, X
     4bc:	99 23       	and	r25, r25
     4be:	31 f0       	breq	.+12     	; 0x4cc <__vector_32+0x62>
	{
		/* Put data into buffer, sends the data */
		USART1.TXDATAL = (*buff)[charIndex++];
     4c0:	8f 5f       	subi	r24, 0xFF	; 255
     4c2:	80 93 0a 40 	sts	0x400A, r24	; 0x80400a <__data_end>
     4c6:	90 93 22 08 	sts	0x0822, r25	; 0x800822 <__TEXT_REGION_LENGTH__+0x7e0822>
     4ca:	0d c0       	rjmp	.+26     	; 0x4e6 <__vector_32+0x7c>
	}
	else
	{
		charIndex = 0;
     4cc:	10 92 0a 40 	sts	0x400A, r1	; 0x80400a <__data_end>
		(*buff)[0] = '\0';
     4d0:	10 82       	st	Z, r1
		buff = nextFullTxBuffer();
     4d2:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <nextFullTxBuffer>
     4d6:	80 93 0b 40 	sts	0x400B, r24	; 0x80400b <buff.4959>
     4da:	90 93 0c 40 	sts	0x400C, r25	; 0x80400c <buff.4959+0x1>
		if(!buff)
     4de:	89 2b       	or	r24, r25
     4e0:	11 f4       	brne	.+4      	; 0x4e6 <__vector_32+0x7c>
		{
			linkbus_end_tx();
     4e2:	0e 94 93 03 	call	0x726	; 0x726 <linkbus_end_tx>
		}
	}
}
     4e6:	ff 91       	pop	r31
     4e8:	ef 91       	pop	r30
     4ea:	bf 91       	pop	r27
     4ec:	af 91       	pop	r26
     4ee:	9f 91       	pop	r25
     4f0:	8f 91       	pop	r24
     4f2:	7f 91       	pop	r23
     4f4:	6f 91       	pop	r22
     4f6:	5f 91       	pop	r21
     4f8:	4f 91       	pop	r20
     4fa:	3f 91       	pop	r19
     4fc:	2f 91       	pop	r18
     4fe:	0f 90       	pop	r0
     500:	0b be       	out	0x3b, r0	; 59
     502:	0f 90       	pop	r0
     504:	0f be       	out	0x3f, r0	; 63
     506:	0f 90       	pop	r0
     508:	1f 90       	pop	r1
     50a:	18 95       	reti

0000050c <main>:
#include "src/linkbus.h"

int main(void)
{
	/* Initializes MCU, drivers and middleware */
	atmel_start_init();
     50c:	0e 94 95 00 	call	0x12a	; 0x12a <atmel_start_init>
	
	linkbus_send_text("ABC...\n");
     510:	81 e0       	ldi	r24, 0x01	; 1
     512:	90 e4       	ldi	r25, 0x40	; 64
     514:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <linkbus_send_text>
     518:	ff cf       	rjmp	.-2      	; 0x518 <main+0xc>

0000051a <BOD_init>:
int8_t BOD_init()
{

	// ccp_write_io((void*)&(BOD.CTRLA),BOD_SLEEP_DIS_gc /* Disabled */);

	BOD.INTCTRL = 0 << BOD_VLMIE_bp        /* voltage level monitor interrrupt enable: disabled */
     51a:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
	              | BOD_VLMCFG_FALLING_gc; /* Interrupt when supply goes below VLM level */

	// BOD.VLMCTRLA = BOD_VLMLVL_5ABOVE_gc; /* VLM threshold 5% above BOD level */

	return 0;
}
     51e:	80 e0       	ldi	r24, 0x00	; 0
     520:	08 95       	ret

00000522 <CLKCTRL_init>:
 *       on calling convention. The memory model is not visible to the
 *       preprocessor, so it must be defined in the Assembler preprocessor directives.
 */
static inline void ccp_write_io(void *addr, uint8_t value)
{
	protected_write_io(addr, CCP_IOREG_gc, value);
     522:	44 e2       	ldi	r20, 0x24	; 36
     524:	68 ed       	ldi	r22, 0xD8	; 216
     526:	88 e6       	ldi	r24, 0x68	; 104
     528:	90 e0       	ldi	r25, 0x00	; 0
     52a:	0e 94 09 04 	call	0x812	; 0x812 <protected_write_io>
	//		 | 0 << CLKCTRL_CLKOUT_bp /* System clock out: disabled */);

	// ccp_write_io((void*)&(CLKCTRL.MCLKLOCK),0 << CLKCTRL_LOCKEN_bp /* lock enable: disabled */);

	return 0;
}
     52e:	80 e0       	ldi	r24, 0x00	; 0
     530:	08 95       	ret

00000532 <CPUINT_init>:

	// CPUINT.LVL0PRI = 0x0 << CPUINT_LVL0PRI_gp; /* Interrupt Level Priority: 0x0 */

	// CPUINT.LVL1VEC = 0x0 << CPUINT_LVL1VEC_gp; /* Interrupt Vector with High Priority: 0x0 */

	ENABLE_INTERRUPTS();
     532:	78 94       	sei

	return 0;
}
     534:	80 e0       	ldi	r24, 0x00	; 0
     536:	08 95       	ret

00000538 <mcu_init>:
	 * disables all peripherals to save power. Driver shall enable
	 * peripheral if used */

	/* Set all pins to low power mode */

	for (uint8_t i = 0; i < 8; i++) {
     538:	80 e0       	ldi	r24, 0x00	; 0
     53a:	08 c0       	rjmp	.+16     	; 0x54c <mcu_init+0x14>
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
     53c:	e8 2f       	mov	r30, r24
     53e:	f0 e0       	ldi	r31, 0x00	; 0
     540:	e0 5f       	subi	r30, 0xF0	; 240
     542:	fb 4f       	sbci	r31, 0xFB	; 251
     544:	90 81       	ld	r25, Z
     546:	98 60       	ori	r25, 0x08	; 8
     548:	90 83       	st	Z, r25
	 * disables all peripherals to save power. Driver shall enable
	 * peripheral if used */

	/* Set all pins to low power mode */

	for (uint8_t i = 0; i < 8; i++) {
     54a:	8f 5f       	subi	r24, 0xFF	; 255
     54c:	88 30       	cpi	r24, 0x08	; 8
     54e:	b0 f3       	brcs	.-20     	; 0x53c <mcu_init+0x4>
     550:	80 e0       	ldi	r24, 0x00	; 0
     552:	08 c0       	rjmp	.+16     	; 0x564 <mcu_init+0x2c>
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
     554:	e8 2f       	mov	r30, r24
     556:	f0 e0       	ldi	r31, 0x00	; 0
     558:	e0 5d       	subi	r30, 0xD0	; 208
     55a:	fb 4f       	sbci	r31, 0xFB	; 251
     55c:	90 81       	ld	r25, Z
     55e:	98 60       	ori	r25, 0x08	; 8
     560:	90 83       	st	Z, r25

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
     562:	8f 5f       	subi	r24, 0xFF	; 255
     564:	88 30       	cpi	r24, 0x08	; 8
     566:	b0 f3       	brcs	.-20     	; 0x554 <mcu_init+0x1c>
     568:	80 e0       	ldi	r24, 0x00	; 0
     56a:	08 c0       	rjmp	.+16     	; 0x57c <mcu_init+0x44>
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
     56c:	e8 2f       	mov	r30, r24
     56e:	f0 e0       	ldi	r31, 0x00	; 0
     570:	e0 5b       	subi	r30, 0xB0	; 176
     572:	fb 4f       	sbci	r31, 0xFB	; 251
     574:	90 81       	ld	r25, Z
     576:	98 60       	ori	r25, 0x08	; 8
     578:	90 83       	st	Z, r25

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
     57a:	8f 5f       	subi	r24, 0xFF	; 255
     57c:	88 30       	cpi	r24, 0x08	; 8
     57e:	b0 f3       	brcs	.-20     	; 0x56c <mcu_init+0x34>
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	08 c0       	rjmp	.+16     	; 0x594 <mcu_init+0x5c>
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTD + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
     584:	e8 2f       	mov	r30, r24
     586:	f0 e0       	ldi	r31, 0x00	; 0
     588:	e0 59       	subi	r30, 0x90	; 144
     58a:	fb 4f       	sbci	r31, 0xFB	; 251
     58c:	90 81       	ld	r25, Z
     58e:	98 60       	ori	r25, 0x08	; 8
     590:	90 83       	st	Z, r25

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
     592:	8f 5f       	subi	r24, 0xFF	; 255
     594:	88 30       	cpi	r24, 0x08	; 8
     596:	b0 f3       	brcs	.-20     	; 0x584 <mcu_init+0x4c>
     598:	80 e0       	ldi	r24, 0x00	; 0
     59a:	08 c0       	rjmp	.+16     	; 0x5ac <mcu_init+0x74>
		*((uint8_t *)&PORTD + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTE + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
     59c:	e8 2f       	mov	r30, r24
     59e:	f0 e0       	ldi	r31, 0x00	; 0
     5a0:	e0 57       	subi	r30, 0x70	; 112
     5a2:	fb 4f       	sbci	r31, 0xFB	; 251
     5a4:	90 81       	ld	r25, Z
     5a6:	98 60       	ori	r25, 0x08	; 8
     5a8:	90 83       	st	Z, r25

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTD + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
     5aa:	8f 5f       	subi	r24, 0xFF	; 255
     5ac:	88 30       	cpi	r24, 0x08	; 8
     5ae:	b0 f3       	brcs	.-20     	; 0x59c <mcu_init+0x64>
     5b0:	80 e0       	ldi	r24, 0x00	; 0
     5b2:	08 c0       	rjmp	.+16     	; 0x5c4 <mcu_init+0x8c>
		*((uint8_t *)&PORTE + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTF + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
     5b4:	e8 2f       	mov	r30, r24
     5b6:	f0 e0       	ldi	r31, 0x00	; 0
     5b8:	e0 55       	subi	r30, 0x50	; 80
     5ba:	fb 4f       	sbci	r31, 0xFB	; 251
     5bc:	90 81       	ld	r25, Z
     5be:	98 60       	ori	r25, 0x08	; 8
     5c0:	90 83       	st	Z, r25

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTE + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
     5c2:	8f 5f       	subi	r24, 0xFF	; 255
     5c4:	88 30       	cpi	r24, 0x08	; 8
     5c6:	b0 f3       	brcs	.-20     	; 0x5b4 <mcu_init+0x7c>
		*((uint8_t *)&PORTF + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}
}
     5c8:	08 95       	ret

000005ca <system_init>:
/**
 * \brief System initialization
 */
void system_init()
{
	mcu_init();
     5ca:	0e 94 9c 02 	call	0x538	; 0x538 <mcu_init>
static inline void PORTC_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTC.OUT |= (1 << pin);
	} else {
		VPORTC.OUT &= ~(1 << pin);
     5ce:	89 b1       	in	r24, 0x09	; 9
     5d0:	8f 7b       	andi	r24, 0xBF	; 191
     5d2:	89 b9       	out	0x09, r24	; 9
	switch (dir) {
	case PORT_DIR_IN:
		VPORTC.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTC.DIR |= (1 << pin);
     5d4:	88 b1       	in	r24, 0x08	; 8
     5d6:	80 64       	ori	r24, 0x40	; 64
     5d8:	88 b9       	out	0x08, r24	; 8
	    // <true"> High
	    false);

	LED_set_dir(PORT_DIR_OUT);

	CLKCTRL_init();
     5da:	0e 94 91 02 	call	0x522	; 0x522 <CLKCTRL_init>

	SLPCTRL_init();
     5de:	0e 94 0e 04 	call	0x81c	; 0x81c <SLPCTRL_init>

	CPUINT_init();
     5e2:	0e 94 99 02 	call	0x532	; 0x532 <CPUINT_init>

	TIMERB_init();
     5e6:	0e 94 10 04 	call	0x820	; 0x820 <TIMERB_init>
	linkbus_init();
     5ea:	0e 94 b0 03 	call	0x760	; 0x760 <linkbus_init>

	BOD_init();
     5ee:	0e 94 8d 02 	call	0x51a	; 0x51a <BOD_init>
     5f2:	08 95       	ret

000005f4 <nextFullTxBuffer>:

	for(bufferIndex=0; bufferIndex<LINKBUS_NUMBER_OF_TX_MSG_BUFFERS; bufferIndex++)
	{
		tx_buffer[bufferIndex][0] = '\0';
	}
}
     5f4:	90 e0       	ldi	r25, 0x00	; 0
     5f6:	0a c0       	rjmp	.+20     	; 0x60c <nextFullTxBuffer+0x18>
     5f8:	9f 5f       	subi	r25, 0xFF	; 255
     5fa:	94 30       	cpi	r25, 0x04	; 4
     5fc:	c0 f4       	brcc	.+48     	; 0x62e <nextFullTxBuffer+0x3a>
     5fe:	8f 5f       	subi	r24, 0xFF	; 255
     600:	80 93 1b 40 	sts	0x401B, r24	; 0x80401b <bufferIndex.5226>
     604:	84 30       	cpi	r24, 0x04	; 4
     606:	10 f0       	brcs	.+4      	; 0x60c <nextFullTxBuffer+0x18>
     608:	10 92 1b 40 	sts	0x401B, r1	; 0x80401b <bufferIndex.5226>
     60c:	80 91 1b 40 	lds	r24, 0x401B	; 0x80401b <bufferIndex.5226>
     610:	28 2f       	mov	r18, r24
     612:	30 e0       	ldi	r19, 0x00	; 0
     614:	42 e3       	ldi	r20, 0x32	; 50
     616:	42 9f       	mul	r20, r18
     618:	f0 01       	movw	r30, r0
     61a:	43 9f       	mul	r20, r19
     61c:	f0 0d       	add	r31, r0
     61e:	11 24       	eor	r1, r1
     620:	e0 56       	subi	r30, 0x60	; 96
     622:	ff 4b       	sbci	r31, 0xBF	; 191
     624:	40 81       	ld	r20, Z
     626:	44 23       	and	r20, r20
     628:	39 f3       	breq	.-50     	; 0x5f8 <nextFullTxBuffer+0x4>
     62a:	81 e0       	ldi	r24, 0x01	; 1
     62c:	01 c0       	rjmp	.+2      	; 0x630 <nextFullTxBuffer+0x3c>
     62e:	80 e0       	ldi	r24, 0x00	; 0
     630:	88 23       	and	r24, r24
     632:	49 f0       	breq	.+18     	; 0x646 <nextFullTxBuffer+0x52>
     634:	42 e3       	ldi	r20, 0x32	; 50
     636:	42 9f       	mul	r20, r18
     638:	c0 01       	movw	r24, r0
     63a:	43 9f       	mul	r20, r19
     63c:	90 0d       	add	r25, r0
     63e:	11 24       	eor	r1, r1
     640:	80 56       	subi	r24, 0x60	; 96
     642:	9f 4b       	sbci	r25, 0xBF	; 191
     644:	08 95       	ret
     646:	80 e0       	ldi	r24, 0x00	; 0
     648:	90 e0       	ldi	r25, 0x00	; 0
     64a:	08 95       	ret

0000064c <nextEmptyTxBuffer>:
     64c:	90 e0       	ldi	r25, 0x00	; 0
     64e:	0a c0       	rjmp	.+20     	; 0x664 <nextEmptyTxBuffer+0x18>
     650:	9f 5f       	subi	r25, 0xFF	; 255
     652:	94 30       	cpi	r25, 0x04	; 4
     654:	c0 f4       	brcc	.+48     	; 0x686 <nextEmptyTxBuffer+0x3a>
     656:	8f 5f       	subi	r24, 0xFF	; 255
     658:	80 93 1a 40 	sts	0x401A, r24	; 0x80401a <bufferIndex.5235>
     65c:	84 30       	cpi	r24, 0x04	; 4
     65e:	10 f0       	brcs	.+4      	; 0x664 <nextEmptyTxBuffer+0x18>
     660:	10 92 1a 40 	sts	0x401A, r1	; 0x80401a <bufferIndex.5235>
     664:	80 91 1a 40 	lds	r24, 0x401A	; 0x80401a <bufferIndex.5235>
     668:	28 2f       	mov	r18, r24
     66a:	30 e0       	ldi	r19, 0x00	; 0
     66c:	42 e3       	ldi	r20, 0x32	; 50
     66e:	42 9f       	mul	r20, r18
     670:	f0 01       	movw	r30, r0
     672:	43 9f       	mul	r20, r19
     674:	f0 0d       	add	r31, r0
     676:	11 24       	eor	r1, r1
     678:	e0 56       	subi	r30, 0x60	; 96
     67a:	ff 4b       	sbci	r31, 0xBF	; 191
     67c:	40 81       	ld	r20, Z
     67e:	41 11       	cpse	r20, r1
     680:	e7 cf       	rjmp	.-50     	; 0x650 <nextEmptyTxBuffer+0x4>
     682:	81 e0       	ldi	r24, 0x01	; 1
     684:	01 c0       	rjmp	.+2      	; 0x688 <nextEmptyTxBuffer+0x3c>
     686:	80 e0       	ldi	r24, 0x00	; 0
     688:	88 23       	and	r24, r24
     68a:	49 f0       	breq	.+18     	; 0x69e <nextEmptyTxBuffer+0x52>
     68c:	42 e3       	ldi	r20, 0x32	; 50
     68e:	42 9f       	mul	r20, r18
     690:	c0 01       	movw	r24, r0
     692:	43 9f       	mul	r20, r19
     694:	90 0d       	add	r25, r0
     696:	11 24       	eor	r1, r1
     698:	80 56       	subi	r24, 0x60	; 96
     69a:	9f 4b       	sbci	r25, 0xBF	; 191
     69c:	08 95       	ret
     69e:	80 e0       	ldi	r24, 0x00	; 0
     6a0:	90 e0       	ldi	r25, 0x00	; 0
     6a2:	08 95       	ret

000006a4 <nextEmptyRxBuffer>:
     6a4:	90 e0       	ldi	r25, 0x00	; 0
     6a6:	0a c0       	rjmp	.+20     	; 0x6bc <nextEmptyRxBuffer+0x18>
     6a8:	9f 5f       	subi	r25, 0xFF	; 255
     6aa:	92 30       	cpi	r25, 0x02	; 2
     6ac:	c8 f4       	brcc	.+50     	; 0x6e0 <nextEmptyRxBuffer+0x3c>
     6ae:	8f 5f       	subi	r24, 0xFF	; 255
     6b0:	80 93 19 40 	sts	0x4019, r24	; 0x804019 <bufferIndex.5244>
     6b4:	82 30       	cpi	r24, 0x02	; 2
     6b6:	10 f0       	brcs	.+4      	; 0x6bc <nextEmptyRxBuffer+0x18>
     6b8:	10 92 19 40 	sts	0x4019, r1	; 0x804019 <bufferIndex.5244>
     6bc:	80 91 19 40 	lds	r24, 0x4019	; 0x804019 <bufferIndex.5244>
     6c0:	28 2f       	mov	r18, r24
     6c2:	30 e0       	ldi	r19, 0x00	; 0
     6c4:	42 e4       	ldi	r20, 0x42	; 66
     6c6:	42 9f       	mul	r20, r18
     6c8:	f0 01       	movw	r30, r0
     6ca:	43 9f       	mul	r20, r19
     6cc:	f0 0d       	add	r31, r0
     6ce:	11 24       	eor	r1, r1
     6d0:	e4 5e       	subi	r30, 0xE4	; 228
     6d2:	ff 4b       	sbci	r31, 0xBF	; 191
     6d4:	41 81       	ldd	r20, Z+1	; 0x01
     6d6:	52 81       	ldd	r21, Z+2	; 0x02
     6d8:	45 2b       	or	r20, r21
     6da:	31 f7       	brne	.-52     	; 0x6a8 <nextEmptyRxBuffer+0x4>
     6dc:	81 e0       	ldi	r24, 0x01	; 1
     6de:	01 c0       	rjmp	.+2      	; 0x6e2 <nextEmptyRxBuffer+0x3e>
     6e0:	80 e0       	ldi	r24, 0x00	; 0
     6e2:	88 23       	and	r24, r24
     6e4:	49 f0       	breq	.+18     	; 0x6f8 <nextEmptyRxBuffer+0x54>
     6e6:	42 e4       	ldi	r20, 0x42	; 66
     6e8:	42 9f       	mul	r20, r18
     6ea:	c0 01       	movw	r24, r0
     6ec:	43 9f       	mul	r20, r19
     6ee:	90 0d       	add	r25, r0
     6f0:	11 24       	eor	r1, r1
     6f2:	84 5e       	subi	r24, 0xE4	; 228
     6f4:	9f 4b       	sbci	r25, 0xBF	; 191
     6f6:	08 95       	ret
     6f8:	80 e0       	ldi	r24, 0x00	; 0
     6fa:	90 e0       	ldi	r25, 0x00	; 0
     6fc:	08 95       	ret

000006fe <linkbusTxInProgress>:
     6fe:	80 91 68 41 	lds	r24, 0x4168	; 0x804168 <linkbus_tx_active>
     702:	08 95       	ret

00000704 <linkbus_start_tx>:
     704:	cf 93       	push	r28
     706:	90 91 68 41 	lds	r25, 0x4168	; 0x804168 <linkbus_tx_active>
     70a:	81 e0       	ldi	r24, 0x01	; 1
     70c:	91 11       	cpse	r25, r1
     70e:	80 e0       	ldi	r24, 0x00	; 0
     710:	c8 2f       	mov	r28, r24
     712:	91 11       	cpse	r25, r1
     714:	05 c0       	rjmp	.+10     	; 0x720 <linkbus_start_tx+0x1c>
     716:	81 e0       	ldi	r24, 0x01	; 1
     718:	80 93 68 41 	sts	0x4168, r24	; 0x804168 <linkbus_tx_active>
     71c:	0e 94 46 04 	call	0x88c	; 0x88c <USART1_enable_tx>
     720:	8c 2f       	mov	r24, r28
     722:	cf 91       	pop	r28
     724:	08 95       	ret

00000726 <linkbus_end_tx>:
     726:	80 91 68 41 	lds	r24, 0x4168	; 0x804168 <linkbus_tx_active>
     72a:	88 23       	and	r24, r24
     72c:	39 f0       	breq	.+14     	; 0x73c <linkbus_end_tx+0x16>
     72e:	e0 e2       	ldi	r30, 0x20	; 32
     730:	f8 e0       	ldi	r31, 0x08	; 8
     732:	85 81       	ldd	r24, Z+5	; 0x05
     734:	8f 7d       	andi	r24, 0xDF	; 223
     736:	85 83       	std	Z+5, r24	; 0x05
     738:	10 92 68 41 	sts	0x4168, r1	; 0x804168 <linkbus_tx_active>
     73c:	08 95       	ret

0000073e <USART1_initialization>:
     73e:	28 b1       	in	r18, 0x08	; 8
     740:	2d 7f       	andi	r18, 0xFD	; 253
     742:	28 b9       	out	0x08, r18	; 8
     744:	e1 e5       	ldi	r30, 0x51	; 81
     746:	f4 e0       	ldi	r31, 0x04	; 4
     748:	20 81       	ld	r18, Z
     74a:	27 7f       	andi	r18, 0xF7	; 247
     74c:	20 83       	st	Z, r18
     74e:	29 b1       	in	r18, 0x09	; 9
     750:	2e 7f       	andi	r18, 0xFE	; 254
     752:	29 b9       	out	0x09, r18	; 9
     754:	28 b1       	in	r18, 0x08	; 8
     756:	21 60       	ori	r18, 0x01	; 1
     758:	28 b9       	out	0x08, r18	; 8
     75a:	0e 94 24 04 	call	0x848	; 0x848 <USART1_init>
     75e:	08 95       	ret

00000760 <linkbus_init>:
     760:	84 e8       	ldi	r24, 0x84	; 132
     762:	ec e1       	ldi	r30, 0x1C	; 28
     764:	f0 e4       	ldi	r31, 0x40	; 64
     766:	df 01       	movw	r26, r30
     768:	1d 92       	st	X+, r1
     76a:	8a 95       	dec	r24
     76c:	e9 f7       	brne	.-6      	; 0x768 <linkbus_init+0x8>
     76e:	80 e0       	ldi	r24, 0x00	; 0
     770:	90 e0       	ldi	r25, 0x00	; 0
     772:	0a c0       	rjmp	.+20     	; 0x788 <linkbus_init+0x28>
     774:	22 e3       	ldi	r18, 0x32	; 50
     776:	28 9f       	mul	r18, r24
     778:	f0 01       	movw	r30, r0
     77a:	29 9f       	mul	r18, r25
     77c:	f0 0d       	add	r31, r0
     77e:	11 24       	eor	r1, r1
     780:	e0 56       	subi	r30, 0x60	; 96
     782:	ff 4b       	sbci	r31, 0xBF	; 191
     784:	10 82       	st	Z, r1
     786:	01 96       	adiw	r24, 0x01	; 1
     788:	84 30       	cpi	r24, 0x04	; 4
     78a:	91 05       	cpc	r25, r1
     78c:	9c f3       	brlt	.-26     	; 0x774 <linkbus_init+0x14>
     78e:	60 e8       	ldi	r22, 0x80	; 128
     790:	75 e2       	ldi	r23, 0x25	; 37
     792:	80 e0       	ldi	r24, 0x00	; 0
     794:	90 e0       	ldi	r25, 0x00	; 0
     796:	0e 94 9f 03 	call	0x73e	; 0x73e <USART1_initialization>
     79a:	10 92 00 40 	sts	0x4000, r1	; 0x804000 <__DATA_REGION_ORIGIN__>
     79e:	08 95       	ret

000007a0 <linkbus_send_text>:


BOOL linkbus_send_text(char* text)
{
     7a0:	0f 93       	push	r16
     7a2:	1f 93       	push	r17
     7a4:	cf 93       	push	r28
     7a6:	df 93       	push	r29
	BOOL err = TRUE;
	uint16_t tries = 200;

	if(g_bus_disabled) return err;
     7a8:	20 91 00 40 	lds	r18, 0x4000	; 0x804000 <__DATA_REGION_ORIGIN__>
     7ac:	21 11       	cpse	r18, r1
     7ae:	27 c0       	rjmp	.+78     	; 0x7fe <linkbus_send_text+0x5e>

	if(text)
     7b0:	00 97       	sbiw	r24, 0x00	; 0
     7b2:	39 f1       	breq	.+78     	; 0x802 <linkbus_send_text+0x62>
     7b4:	8c 01       	movw	r16, r24
	{
		LinkbusTxBuffer* buff = nextEmptyTxBuffer();
     7b6:	0e 94 26 03 	call	0x64c	; 0x64c <nextEmptyTxBuffer>


BOOL linkbus_send_text(char* text)
{
	BOOL err = TRUE;
	uint16_t tries = 200;
     7ba:	c8 ec       	ldi	r28, 0xC8	; 200
     7bc:	d0 e0       	ldi	r29, 0x00	; 0

	if(text)
	{
		LinkbusTxBuffer* buff = nextEmptyTxBuffer();

		while(!buff && tries)
     7be:	0b c0       	rjmp	.+22     	; 0x7d6 <linkbus_send_text+0x36>
		{
			while(linkbusTxInProgress() && tries)
			{
				if(tries) tries--;   /* wait until transmit finishes */
     7c0:	20 97       	sbiw	r28, 0x00	; 0
     7c2:	09 f0       	breq	.+2      	; 0x7c6 <linkbus_send_text+0x26>
     7c4:	21 97       	sbiw	r28, 0x01	; 1
	{
		LinkbusTxBuffer* buff = nextEmptyTxBuffer();

		while(!buff && tries)
		{
			while(linkbusTxInProgress() && tries)
     7c6:	0e 94 7f 03 	call	0x6fe	; 0x6fe <linkbusTxInProgress>
     7ca:	88 23       	and	r24, r24
     7cc:	11 f0       	breq	.+4      	; 0x7d2 <linkbus_send_text+0x32>
     7ce:	20 97       	sbiw	r28, 0x00	; 0
     7d0:	b9 f7       	brne	.-18     	; 0x7c0 <linkbus_send_text+0x20>
			{
				if(tries) tries--;   /* wait until transmit finishes */
			}
			buff = nextEmptyTxBuffer();
     7d2:	0e 94 26 03 	call	0x64c	; 0x64c <nextEmptyTxBuffer>

	if(text)
	{
		LinkbusTxBuffer* buff = nextEmptyTxBuffer();

		while(!buff && tries)
     7d6:	00 97       	sbiw	r24, 0x00	; 0
     7d8:	11 f4       	brne	.+4      	; 0x7de <linkbus_send_text+0x3e>
     7da:	20 97       	sbiw	r28, 0x00	; 0
     7dc:	a1 f7       	brne	.-24     	; 0x7c6 <linkbus_send_text+0x26>
				if(tries) tries--;   /* wait until transmit finishes */
			}
			buff = nextEmptyTxBuffer();
		}

		if(buff)
     7de:	00 97       	sbiw	r24, 0x00	; 0
     7e0:	91 f0       	breq	.+36     	; 0x806 <linkbus_send_text+0x66>
		{
			sprintf(*buff, text);
     7e2:	1f 93       	push	r17
     7e4:	0f 93       	push	r16
     7e6:	9f 93       	push	r25
     7e8:	8f 93       	push	r24
     7ea:	0e 94 63 06 	call	0xcc6	; 0xcc6 <sprintf>

			linkbus_start_tx();
     7ee:	0e 94 82 03 	call	0x704	; 0x704 <linkbus_start_tx>
     7f2:	0f 90       	pop	r0
     7f4:	0f 90       	pop	r0
     7f6:	0f 90       	pop	r0
     7f8:	0f 90       	pop	r0
//			USART1.TXDATAL = (*buff)[0]; /* send the first character */
			err = FALSE;
     7fa:	80 e0       	ldi	r24, 0x00	; 0
     7fc:	05 c0       	rjmp	.+10     	; 0x808 <linkbus_send_text+0x68>
BOOL linkbus_send_text(char* text)
{
	BOOL err = TRUE;
	uint16_t tries = 200;

	if(g_bus_disabled) return err;
     7fe:	81 e0       	ldi	r24, 0x01	; 1
     800:	03 c0       	rjmp	.+6      	; 0x808 <linkbus_send_text+0x68>
}


BOOL linkbus_send_text(char* text)
{
	BOOL err = TRUE;
     802:	81 e0       	ldi	r24, 0x01	; 1
     804:	01 c0       	rjmp	.+2      	; 0x808 <linkbus_send_text+0x68>
     806:	81 e0       	ldi	r24, 0x01	; 1
			err = FALSE;
		}
	}

	return(err);
}
     808:	df 91       	pop	r29
     80a:	cf 91       	pop	r28
     80c:	1f 91       	pop	r17
     80e:	0f 91       	pop	r16
     810:	08 95       	ret

00000812 <protected_write_io>:
	PUBLIC_FUNCTION(protected_write_io)

#if defined(__GNUC__)
  
#ifdef RAMPZ
	out     _SFR_IO_ADDR(RAMPZ), r1         // Clear bits 23:16 of Z
     812:	1b be       	out	0x3b, r1	; 59
#endif
	movw    r30, r24                // Load addr into Z
     814:	fc 01       	movw	r30, r24
	out     CCP, r22                // Start CCP handshake
     816:	64 bf       	out	0x34, r22	; 52
	st      Z, r20                  // Write value to I/O register
     818:	40 83       	st	Z, r20
	ret                             // Return to caller
     81a:	08 95       	ret

0000081c <SLPCTRL_init>:

	// SLPCTRL.CTRLA = 0 << SLPCTRL_SEN_bp /* Sleep enable: disabled */
	//		 | SLPCTRL_SMODE_IDLE_gc; /* Idle mode */

	return 0;
}
     81c:	80 e0       	ldi	r24, 0x00	; 0
     81e:	08 95       	ret

00000820 <TIMERB_init>:
 *
 * \return Initialization status.
 */
int8_t TIMERB_init()
{
TCB0.INTCTRL = 1 << TCB_CAPT_bp   /* Capture or Timeout: enabled */
     820:	e0 e0       	ldi	r30, 0x00	; 0
     822:	fb e0       	ldi	r31, 0x0B	; 11
     824:	81 e0       	ldi	r24, 0x01	; 1
     826:	85 83       	std	Z+5, r24	; 0x05
| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */

// Set TOP
TCB0.CCMP = 0x9C40;
     828:	20 e4       	ldi	r18, 0x40	; 64
     82a:	3c e9       	ldi	r19, 0x9C	; 156
     82c:	24 87       	std	Z+12, r18	; 0x0c
     82e:	35 87       	std	Z+13, r19	; 0x0d

TCB0.CTRLA = TCB_CLKSEL_DIV2_gc     /* CLK_PER */
     830:	93 e0       	ldi	r25, 0x03	; 3
     832:	90 83       	st	Z, r25
| 1 << TCB_ENABLE_bp   /* Enable: enabled */
| 0 << TCB_RUNSTDBY_bp /* Run Standby: disabled */
| 0 << TCB_SYNCUPD_bp  /* Synchronize Update: disabled */
| 0 << TCB_CASCADE_bp; /* Cascade Two Timer/Counters: disabled */

TCB0.INTFLAGS = TCB_CAPT_bm; /* Clear flag */
     834:	86 83       	std	Z+6, r24	; 0x06

/********************************************************************************/

TCB3.INTCTRL = 1 << TCB_CAPT_bp   /* Capture or Timeout: enabled */
     836:	e0 e3       	ldi	r30, 0x30	; 48
     838:	fb e0       	ldi	r31, 0x0B	; 11
     83a:	85 83       	std	Z+5, r24	; 0x05
| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */

// Set TOP
TCB3.CCMP = 0x9C40;
     83c:	24 87       	std	Z+12, r18	; 0x0c
     83e:	35 87       	std	Z+13, r19	; 0x0d

TCB3.CTRLA = TCB_CLKSEL_DIV2_gc     /* CLK_PER */
     840:	90 83       	st	Z, r25
| 1 << TCB_ENABLE_bp   /* Enable: enabled */
| 0 << TCB_RUNSTDBY_bp /* Run Standby: disabled */
| 0 << TCB_SYNCUPD_bp  /* Synchronize Update: disabled */
| 0 << TCB_CASCADE_bp; /* Cascade Two Timer/Counters: disabled */

TCB3.INTFLAGS = TCB_CAPT_bm; /* Clear flag */
     842:	86 83       	std	Z+6, r24	; 0x06

	return 0;
     844:	80 e0       	ldi	r24, 0x00	; 0
     846:	08 95       	ret

00000848 <USART1_init>:
 *
 * \return Nothing
 */
void USART1_disable()
{
	USART1.CTRLB &= ~(USART_RXEN_bm | USART_TXEN_bm);
     848:	0e 94 60 05 	call	0xac0	; 0xac0 <__floatunsisf>
     84c:	20 e0       	ldi	r18, 0x00	; 0
     84e:	30 e0       	ldi	r19, 0x00	; 0
     850:	40 e8       	ldi	r20, 0x80	; 128
     852:	51 e4       	ldi	r21, 0x41	; 65
     854:	0e 94 ee 05 	call	0xbdc	; 0xbdc <__mulsf3>
     858:	9b 01       	movw	r18, r22
     85a:	ac 01       	movw	r20, r24
     85c:	60 e0       	ldi	r22, 0x00	; 0
     85e:	7b e1       	ldi	r23, 0x1B	; 27
     860:	87 eb       	ldi	r24, 0xB7	; 183
     862:	9e e4       	ldi	r25, 0x4E	; 78
     864:	0e 94 bf 04 	call	0x97e	; 0x97e <__divsf3>
     868:	20 e0       	ldi	r18, 0x00	; 0
     86a:	30 e0       	ldi	r19, 0x00	; 0
     86c:	40 e0       	ldi	r20, 0x00	; 0
     86e:	5f e3       	ldi	r21, 0x3F	; 63
     870:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__addsf3>
     874:	0e 94 31 05 	call	0xa62	; 0xa62 <__fixunssfsi>
     878:	e0 e2       	ldi	r30, 0x20	; 32
     87a:	f8 e0       	ldi	r31, 0x08	; 8
     87c:	60 87       	std	Z+8, r22	; 0x08
     87e:	71 87       	std	Z+9, r23	; 0x09
     880:	80 e8       	ldi	r24, 0x80	; 128
     882:	85 83       	std	Z+5, r24	; 0x05
     884:	80 ec       	ldi	r24, 0xC0	; 192
     886:	86 83       	std	Z+6, r24	; 0x06
     888:	80 e0       	ldi	r24, 0x00	; 0
     88a:	08 95       	ret

0000088c <USART1_enable_tx>:
     88c:	e0 e2       	ldi	r30, 0x20	; 32
     88e:	f8 e0       	ldi	r31, 0x08	; 8
     890:	86 81       	ldd	r24, Z+6	; 0x06
     892:	80 64       	ori	r24, 0x40	; 64
     894:	86 83       	std	Z+6, r24	; 0x06
     896:	85 81       	ldd	r24, Z+5	; 0x05
     898:	80 62       	ori	r24, 0x20	; 32
     89a:	85 83       	std	Z+5, r24	; 0x05
     89c:	08 95       	ret

0000089e <USART1_get_data>:
 *
 * \return Data register from USART1 module
 */
uint8_t USART1_get_data()
{
	return USART1.RXDATAL;
     89e:	80 91 20 08 	lds	r24, 0x0820	; 0x800820 <__TEXT_REGION_LENGTH__+0x7e0820>
}
     8a2:	08 95       	ret

000008a4 <__subsf3>:
     8a4:	50 58       	subi	r21, 0x80	; 128

000008a6 <__addsf3>:
     8a6:	bb 27       	eor	r27, r27
     8a8:	aa 27       	eor	r26, r26
     8aa:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <__addsf3x>
     8ae:	0c 94 b4 05 	jmp	0xb68	; 0xb68 <__fp_round>
     8b2:	0e 94 a6 05 	call	0xb4c	; 0xb4c <__fp_pscA>
     8b6:	38 f0       	brcs	.+14     	; 0x8c6 <__addsf3+0x20>
     8b8:	0e 94 ad 05 	call	0xb5a	; 0xb5a <__fp_pscB>
     8bc:	20 f0       	brcs	.+8      	; 0x8c6 <__addsf3+0x20>
     8be:	39 f4       	brne	.+14     	; 0x8ce <__addsf3+0x28>
     8c0:	9f 3f       	cpi	r25, 0xFF	; 255
     8c2:	19 f4       	brne	.+6      	; 0x8ca <__addsf3+0x24>
     8c4:	26 f4       	brtc	.+8      	; 0x8ce <__addsf3+0x28>
     8c6:	0c 94 a3 05 	jmp	0xb46	; 0xb46 <__fp_nan>
     8ca:	0e f4       	brtc	.+2      	; 0x8ce <__addsf3+0x28>
     8cc:	e0 95       	com	r30
     8ce:	e7 fb       	bst	r30, 7
     8d0:	0c 94 9d 05 	jmp	0xb3a	; 0xb3a <__fp_inf>

000008d4 <__addsf3x>:
     8d4:	e9 2f       	mov	r30, r25
     8d6:	0e 94 c5 05 	call	0xb8a	; 0xb8a <__fp_split3>
     8da:	58 f3       	brcs	.-42     	; 0x8b2 <__addsf3+0xc>
     8dc:	ba 17       	cp	r27, r26
     8de:	62 07       	cpc	r22, r18
     8e0:	73 07       	cpc	r23, r19
     8e2:	84 07       	cpc	r24, r20
     8e4:	95 07       	cpc	r25, r21
     8e6:	20 f0       	brcs	.+8      	; 0x8f0 <__addsf3x+0x1c>
     8e8:	79 f4       	brne	.+30     	; 0x908 <__addsf3x+0x34>
     8ea:	a6 f5       	brtc	.+104    	; 0x954 <__addsf3x+0x80>
     8ec:	0c 94 e7 05 	jmp	0xbce	; 0xbce <__fp_zero>
     8f0:	0e f4       	brtc	.+2      	; 0x8f4 <__addsf3x+0x20>
     8f2:	e0 95       	com	r30
     8f4:	0b 2e       	mov	r0, r27
     8f6:	ba 2f       	mov	r27, r26
     8f8:	a0 2d       	mov	r26, r0
     8fa:	0b 01       	movw	r0, r22
     8fc:	b9 01       	movw	r22, r18
     8fe:	90 01       	movw	r18, r0
     900:	0c 01       	movw	r0, r24
     902:	ca 01       	movw	r24, r20
     904:	a0 01       	movw	r20, r0
     906:	11 24       	eor	r1, r1
     908:	ff 27       	eor	r31, r31
     90a:	59 1b       	sub	r21, r25
     90c:	99 f0       	breq	.+38     	; 0x934 <__addsf3x+0x60>
     90e:	59 3f       	cpi	r21, 0xF9	; 249
     910:	50 f4       	brcc	.+20     	; 0x926 <__addsf3x+0x52>
     912:	50 3e       	cpi	r21, 0xE0	; 224
     914:	68 f1       	brcs	.+90     	; 0x970 <__addsf3x+0x9c>
     916:	1a 16       	cp	r1, r26
     918:	f0 40       	sbci	r31, 0x00	; 0
     91a:	a2 2f       	mov	r26, r18
     91c:	23 2f       	mov	r18, r19
     91e:	34 2f       	mov	r19, r20
     920:	44 27       	eor	r20, r20
     922:	58 5f       	subi	r21, 0xF8	; 248
     924:	f3 cf       	rjmp	.-26     	; 0x90c <__addsf3x+0x38>
     926:	46 95       	lsr	r20
     928:	37 95       	ror	r19
     92a:	27 95       	ror	r18
     92c:	a7 95       	ror	r26
     92e:	f0 40       	sbci	r31, 0x00	; 0
     930:	53 95       	inc	r21
     932:	c9 f7       	brne	.-14     	; 0x926 <__addsf3x+0x52>
     934:	7e f4       	brtc	.+30     	; 0x954 <__addsf3x+0x80>
     936:	1f 16       	cp	r1, r31
     938:	ba 0b       	sbc	r27, r26
     93a:	62 0b       	sbc	r22, r18
     93c:	73 0b       	sbc	r23, r19
     93e:	84 0b       	sbc	r24, r20
     940:	ba f0       	brmi	.+46     	; 0x970 <__addsf3x+0x9c>
     942:	91 50       	subi	r25, 0x01	; 1
     944:	a1 f0       	breq	.+40     	; 0x96e <__addsf3x+0x9a>
     946:	ff 0f       	add	r31, r31
     948:	bb 1f       	adc	r27, r27
     94a:	66 1f       	adc	r22, r22
     94c:	77 1f       	adc	r23, r23
     94e:	88 1f       	adc	r24, r24
     950:	c2 f7       	brpl	.-16     	; 0x942 <__addsf3x+0x6e>
     952:	0e c0       	rjmp	.+28     	; 0x970 <__addsf3x+0x9c>
     954:	ba 0f       	add	r27, r26
     956:	62 1f       	adc	r22, r18
     958:	73 1f       	adc	r23, r19
     95a:	84 1f       	adc	r24, r20
     95c:	48 f4       	brcc	.+18     	; 0x970 <__addsf3x+0x9c>
     95e:	87 95       	ror	r24
     960:	77 95       	ror	r23
     962:	67 95       	ror	r22
     964:	b7 95       	ror	r27
     966:	f7 95       	ror	r31
     968:	9e 3f       	cpi	r25, 0xFE	; 254
     96a:	08 f0       	brcs	.+2      	; 0x96e <__addsf3x+0x9a>
     96c:	b0 cf       	rjmp	.-160    	; 0x8ce <__addsf3+0x28>
     96e:	93 95       	inc	r25
     970:	88 0f       	add	r24, r24
     972:	08 f0       	brcs	.+2      	; 0x976 <__addsf3x+0xa2>
     974:	99 27       	eor	r25, r25
     976:	ee 0f       	add	r30, r30
     978:	97 95       	ror	r25
     97a:	87 95       	ror	r24
     97c:	08 95       	ret

0000097e <__divsf3>:
     97e:	0e 94 d3 04 	call	0x9a6	; 0x9a6 <__divsf3x>
     982:	0c 94 b4 05 	jmp	0xb68	; 0xb68 <__fp_round>
     986:	0e 94 ad 05 	call	0xb5a	; 0xb5a <__fp_pscB>
     98a:	58 f0       	brcs	.+22     	; 0x9a2 <__divsf3+0x24>
     98c:	0e 94 a6 05 	call	0xb4c	; 0xb4c <__fp_pscA>
     990:	40 f0       	brcs	.+16     	; 0x9a2 <__divsf3+0x24>
     992:	29 f4       	brne	.+10     	; 0x99e <__divsf3+0x20>
     994:	5f 3f       	cpi	r21, 0xFF	; 255
     996:	29 f0       	breq	.+10     	; 0x9a2 <__divsf3+0x24>
     998:	0c 94 9d 05 	jmp	0xb3a	; 0xb3a <__fp_inf>
     99c:	51 11       	cpse	r21, r1
     99e:	0c 94 e8 05 	jmp	0xbd0	; 0xbd0 <__fp_szero>
     9a2:	0c 94 a3 05 	jmp	0xb46	; 0xb46 <__fp_nan>

000009a6 <__divsf3x>:
     9a6:	0e 94 c5 05 	call	0xb8a	; 0xb8a <__fp_split3>
     9aa:	68 f3       	brcs	.-38     	; 0x986 <__divsf3+0x8>

000009ac <__divsf3_pse>:
     9ac:	99 23       	and	r25, r25
     9ae:	b1 f3       	breq	.-20     	; 0x99c <__divsf3+0x1e>
     9b0:	55 23       	and	r21, r21
     9b2:	91 f3       	breq	.-28     	; 0x998 <__divsf3+0x1a>
     9b4:	95 1b       	sub	r25, r21
     9b6:	55 0b       	sbc	r21, r21
     9b8:	bb 27       	eor	r27, r27
     9ba:	aa 27       	eor	r26, r26
     9bc:	62 17       	cp	r22, r18
     9be:	73 07       	cpc	r23, r19
     9c0:	84 07       	cpc	r24, r20
     9c2:	38 f0       	brcs	.+14     	; 0x9d2 <__divsf3_pse+0x26>
     9c4:	9f 5f       	subi	r25, 0xFF	; 255
     9c6:	5f 4f       	sbci	r21, 0xFF	; 255
     9c8:	22 0f       	add	r18, r18
     9ca:	33 1f       	adc	r19, r19
     9cc:	44 1f       	adc	r20, r20
     9ce:	aa 1f       	adc	r26, r26
     9d0:	a9 f3       	breq	.-22     	; 0x9bc <__divsf3_pse+0x10>
     9d2:	35 d0       	rcall	.+106    	; 0xa3e <__divsf3_pse+0x92>
     9d4:	0e 2e       	mov	r0, r30
     9d6:	3a f0       	brmi	.+14     	; 0x9e6 <__divsf3_pse+0x3a>
     9d8:	e0 e8       	ldi	r30, 0x80	; 128
     9da:	32 d0       	rcall	.+100    	; 0xa40 <__divsf3_pse+0x94>
     9dc:	91 50       	subi	r25, 0x01	; 1
     9de:	50 40       	sbci	r21, 0x00	; 0
     9e0:	e6 95       	lsr	r30
     9e2:	00 1c       	adc	r0, r0
     9e4:	ca f7       	brpl	.-14     	; 0x9d8 <__divsf3_pse+0x2c>
     9e6:	2b d0       	rcall	.+86     	; 0xa3e <__divsf3_pse+0x92>
     9e8:	fe 2f       	mov	r31, r30
     9ea:	29 d0       	rcall	.+82     	; 0xa3e <__divsf3_pse+0x92>
     9ec:	66 0f       	add	r22, r22
     9ee:	77 1f       	adc	r23, r23
     9f0:	88 1f       	adc	r24, r24
     9f2:	bb 1f       	adc	r27, r27
     9f4:	26 17       	cp	r18, r22
     9f6:	37 07       	cpc	r19, r23
     9f8:	48 07       	cpc	r20, r24
     9fa:	ab 07       	cpc	r26, r27
     9fc:	b0 e8       	ldi	r27, 0x80	; 128
     9fe:	09 f0       	breq	.+2      	; 0xa02 <__divsf3_pse+0x56>
     a00:	bb 0b       	sbc	r27, r27
     a02:	80 2d       	mov	r24, r0
     a04:	bf 01       	movw	r22, r30
     a06:	ff 27       	eor	r31, r31
     a08:	93 58       	subi	r25, 0x83	; 131
     a0a:	5f 4f       	sbci	r21, 0xFF	; 255
     a0c:	3a f0       	brmi	.+14     	; 0xa1c <__divsf3_pse+0x70>
     a0e:	9e 3f       	cpi	r25, 0xFE	; 254
     a10:	51 05       	cpc	r21, r1
     a12:	78 f0       	brcs	.+30     	; 0xa32 <__divsf3_pse+0x86>
     a14:	0c 94 9d 05 	jmp	0xb3a	; 0xb3a <__fp_inf>
     a18:	0c 94 e8 05 	jmp	0xbd0	; 0xbd0 <__fp_szero>
     a1c:	5f 3f       	cpi	r21, 0xFF	; 255
     a1e:	e4 f3       	brlt	.-8      	; 0xa18 <__divsf3_pse+0x6c>
     a20:	98 3e       	cpi	r25, 0xE8	; 232
     a22:	d4 f3       	brlt	.-12     	; 0xa18 <__divsf3_pse+0x6c>
     a24:	86 95       	lsr	r24
     a26:	77 95       	ror	r23
     a28:	67 95       	ror	r22
     a2a:	b7 95       	ror	r27
     a2c:	f7 95       	ror	r31
     a2e:	9f 5f       	subi	r25, 0xFF	; 255
     a30:	c9 f7       	brne	.-14     	; 0xa24 <__divsf3_pse+0x78>
     a32:	88 0f       	add	r24, r24
     a34:	91 1d       	adc	r25, r1
     a36:	96 95       	lsr	r25
     a38:	87 95       	ror	r24
     a3a:	97 f9       	bld	r25, 7
     a3c:	08 95       	ret
     a3e:	e1 e0       	ldi	r30, 0x01	; 1
     a40:	66 0f       	add	r22, r22
     a42:	77 1f       	adc	r23, r23
     a44:	88 1f       	adc	r24, r24
     a46:	bb 1f       	adc	r27, r27
     a48:	62 17       	cp	r22, r18
     a4a:	73 07       	cpc	r23, r19
     a4c:	84 07       	cpc	r24, r20
     a4e:	ba 07       	cpc	r27, r26
     a50:	20 f0       	brcs	.+8      	; 0xa5a <__divsf3_pse+0xae>
     a52:	62 1b       	sub	r22, r18
     a54:	73 0b       	sbc	r23, r19
     a56:	84 0b       	sbc	r24, r20
     a58:	ba 0b       	sbc	r27, r26
     a5a:	ee 1f       	adc	r30, r30
     a5c:	88 f7       	brcc	.-30     	; 0xa40 <__divsf3_pse+0x94>
     a5e:	e0 95       	com	r30
     a60:	08 95       	ret

00000a62 <__fixunssfsi>:
     a62:	0e 94 cd 05 	call	0xb9a	; 0xb9a <__fp_splitA>
     a66:	88 f0       	brcs	.+34     	; 0xa8a <__fixunssfsi+0x28>
     a68:	9f 57       	subi	r25, 0x7F	; 127
     a6a:	98 f0       	brcs	.+38     	; 0xa92 <__fixunssfsi+0x30>
     a6c:	b9 2f       	mov	r27, r25
     a6e:	99 27       	eor	r25, r25
     a70:	b7 51       	subi	r27, 0x17	; 23
     a72:	b0 f0       	brcs	.+44     	; 0xaa0 <__fixunssfsi+0x3e>
     a74:	e1 f0       	breq	.+56     	; 0xaae <__fixunssfsi+0x4c>
     a76:	66 0f       	add	r22, r22
     a78:	77 1f       	adc	r23, r23
     a7a:	88 1f       	adc	r24, r24
     a7c:	99 1f       	adc	r25, r25
     a7e:	1a f0       	brmi	.+6      	; 0xa86 <__fixunssfsi+0x24>
     a80:	ba 95       	dec	r27
     a82:	c9 f7       	brne	.-14     	; 0xa76 <__fixunssfsi+0x14>
     a84:	14 c0       	rjmp	.+40     	; 0xaae <__fixunssfsi+0x4c>
     a86:	b1 30       	cpi	r27, 0x01	; 1
     a88:	91 f0       	breq	.+36     	; 0xaae <__fixunssfsi+0x4c>
     a8a:	0e 94 e7 05 	call	0xbce	; 0xbce <__fp_zero>
     a8e:	b1 e0       	ldi	r27, 0x01	; 1
     a90:	08 95       	ret
     a92:	0c 94 e7 05 	jmp	0xbce	; 0xbce <__fp_zero>
     a96:	67 2f       	mov	r22, r23
     a98:	78 2f       	mov	r23, r24
     a9a:	88 27       	eor	r24, r24
     a9c:	b8 5f       	subi	r27, 0xF8	; 248
     a9e:	39 f0       	breq	.+14     	; 0xaae <__fixunssfsi+0x4c>
     aa0:	b9 3f       	cpi	r27, 0xF9	; 249
     aa2:	cc f3       	brlt	.-14     	; 0xa96 <__fixunssfsi+0x34>
     aa4:	86 95       	lsr	r24
     aa6:	77 95       	ror	r23
     aa8:	67 95       	ror	r22
     aaa:	b3 95       	inc	r27
     aac:	d9 f7       	brne	.-10     	; 0xaa4 <__fixunssfsi+0x42>
     aae:	3e f4       	brtc	.+14     	; 0xabe <__fixunssfsi+0x5c>
     ab0:	90 95       	com	r25
     ab2:	80 95       	com	r24
     ab4:	70 95       	com	r23
     ab6:	61 95       	neg	r22
     ab8:	7f 4f       	sbci	r23, 0xFF	; 255
     aba:	8f 4f       	sbci	r24, 0xFF	; 255
     abc:	9f 4f       	sbci	r25, 0xFF	; 255
     abe:	08 95       	ret

00000ac0 <__floatunsisf>:
     ac0:	e8 94       	clt
     ac2:	09 c0       	rjmp	.+18     	; 0xad6 <__floatsisf+0x12>

00000ac4 <__floatsisf>:
     ac4:	97 fb       	bst	r25, 7
     ac6:	3e f4       	brtc	.+14     	; 0xad6 <__floatsisf+0x12>
     ac8:	90 95       	com	r25
     aca:	80 95       	com	r24
     acc:	70 95       	com	r23
     ace:	61 95       	neg	r22
     ad0:	7f 4f       	sbci	r23, 0xFF	; 255
     ad2:	8f 4f       	sbci	r24, 0xFF	; 255
     ad4:	9f 4f       	sbci	r25, 0xFF	; 255
     ad6:	99 23       	and	r25, r25
     ad8:	a9 f0       	breq	.+42     	; 0xb04 <__floatsisf+0x40>
     ada:	f9 2f       	mov	r31, r25
     adc:	96 e9       	ldi	r25, 0x96	; 150
     ade:	bb 27       	eor	r27, r27
     ae0:	93 95       	inc	r25
     ae2:	f6 95       	lsr	r31
     ae4:	87 95       	ror	r24
     ae6:	77 95       	ror	r23
     ae8:	67 95       	ror	r22
     aea:	b7 95       	ror	r27
     aec:	f1 11       	cpse	r31, r1
     aee:	f8 cf       	rjmp	.-16     	; 0xae0 <__floatsisf+0x1c>
     af0:	fa f4       	brpl	.+62     	; 0xb30 <__floatsisf+0x6c>
     af2:	bb 0f       	add	r27, r27
     af4:	11 f4       	brne	.+4      	; 0xafa <__floatsisf+0x36>
     af6:	60 ff       	sbrs	r22, 0
     af8:	1b c0       	rjmp	.+54     	; 0xb30 <__floatsisf+0x6c>
     afa:	6f 5f       	subi	r22, 0xFF	; 255
     afc:	7f 4f       	sbci	r23, 0xFF	; 255
     afe:	8f 4f       	sbci	r24, 0xFF	; 255
     b00:	9f 4f       	sbci	r25, 0xFF	; 255
     b02:	16 c0       	rjmp	.+44     	; 0xb30 <__floatsisf+0x6c>
     b04:	88 23       	and	r24, r24
     b06:	11 f0       	breq	.+4      	; 0xb0c <__floatsisf+0x48>
     b08:	96 e9       	ldi	r25, 0x96	; 150
     b0a:	11 c0       	rjmp	.+34     	; 0xb2e <__floatsisf+0x6a>
     b0c:	77 23       	and	r23, r23
     b0e:	21 f0       	breq	.+8      	; 0xb18 <__floatsisf+0x54>
     b10:	9e e8       	ldi	r25, 0x8E	; 142
     b12:	87 2f       	mov	r24, r23
     b14:	76 2f       	mov	r23, r22
     b16:	05 c0       	rjmp	.+10     	; 0xb22 <__floatsisf+0x5e>
     b18:	66 23       	and	r22, r22
     b1a:	71 f0       	breq	.+28     	; 0xb38 <__floatsisf+0x74>
     b1c:	96 e8       	ldi	r25, 0x86	; 134
     b1e:	86 2f       	mov	r24, r22
     b20:	70 e0       	ldi	r23, 0x00	; 0
     b22:	60 e0       	ldi	r22, 0x00	; 0
     b24:	2a f0       	brmi	.+10     	; 0xb30 <__floatsisf+0x6c>
     b26:	9a 95       	dec	r25
     b28:	66 0f       	add	r22, r22
     b2a:	77 1f       	adc	r23, r23
     b2c:	88 1f       	adc	r24, r24
     b2e:	da f7       	brpl	.-10     	; 0xb26 <__floatsisf+0x62>
     b30:	88 0f       	add	r24, r24
     b32:	96 95       	lsr	r25
     b34:	87 95       	ror	r24
     b36:	97 f9       	bld	r25, 7
     b38:	08 95       	ret

00000b3a <__fp_inf>:
     b3a:	97 f9       	bld	r25, 7
     b3c:	9f 67       	ori	r25, 0x7F	; 127
     b3e:	80 e8       	ldi	r24, 0x80	; 128
     b40:	70 e0       	ldi	r23, 0x00	; 0
     b42:	60 e0       	ldi	r22, 0x00	; 0
     b44:	08 95       	ret

00000b46 <__fp_nan>:
     b46:	9f ef       	ldi	r25, 0xFF	; 255
     b48:	80 ec       	ldi	r24, 0xC0	; 192
     b4a:	08 95       	ret

00000b4c <__fp_pscA>:
     b4c:	00 24       	eor	r0, r0
     b4e:	0a 94       	dec	r0
     b50:	16 16       	cp	r1, r22
     b52:	17 06       	cpc	r1, r23
     b54:	18 06       	cpc	r1, r24
     b56:	09 06       	cpc	r0, r25
     b58:	08 95       	ret

00000b5a <__fp_pscB>:
     b5a:	00 24       	eor	r0, r0
     b5c:	0a 94       	dec	r0
     b5e:	12 16       	cp	r1, r18
     b60:	13 06       	cpc	r1, r19
     b62:	14 06       	cpc	r1, r20
     b64:	05 06       	cpc	r0, r21
     b66:	08 95       	ret

00000b68 <__fp_round>:
     b68:	09 2e       	mov	r0, r25
     b6a:	03 94       	inc	r0
     b6c:	00 0c       	add	r0, r0
     b6e:	11 f4       	brne	.+4      	; 0xb74 <__fp_round+0xc>
     b70:	88 23       	and	r24, r24
     b72:	52 f0       	brmi	.+20     	; 0xb88 <__fp_round+0x20>
     b74:	bb 0f       	add	r27, r27
     b76:	40 f4       	brcc	.+16     	; 0xb88 <__fp_round+0x20>
     b78:	bf 2b       	or	r27, r31
     b7a:	11 f4       	brne	.+4      	; 0xb80 <__fp_round+0x18>
     b7c:	60 ff       	sbrs	r22, 0
     b7e:	04 c0       	rjmp	.+8      	; 0xb88 <__fp_round+0x20>
     b80:	6f 5f       	subi	r22, 0xFF	; 255
     b82:	7f 4f       	sbci	r23, 0xFF	; 255
     b84:	8f 4f       	sbci	r24, 0xFF	; 255
     b86:	9f 4f       	sbci	r25, 0xFF	; 255
     b88:	08 95       	ret

00000b8a <__fp_split3>:
     b8a:	57 fd       	sbrc	r21, 7
     b8c:	90 58       	subi	r25, 0x80	; 128
     b8e:	44 0f       	add	r20, r20
     b90:	55 1f       	adc	r21, r21
     b92:	59 f0       	breq	.+22     	; 0xbaa <__fp_splitA+0x10>
     b94:	5f 3f       	cpi	r21, 0xFF	; 255
     b96:	71 f0       	breq	.+28     	; 0xbb4 <__fp_splitA+0x1a>
     b98:	47 95       	ror	r20

00000b9a <__fp_splitA>:
     b9a:	88 0f       	add	r24, r24
     b9c:	97 fb       	bst	r25, 7
     b9e:	99 1f       	adc	r25, r25
     ba0:	61 f0       	breq	.+24     	; 0xbba <__fp_splitA+0x20>
     ba2:	9f 3f       	cpi	r25, 0xFF	; 255
     ba4:	79 f0       	breq	.+30     	; 0xbc4 <__fp_splitA+0x2a>
     ba6:	87 95       	ror	r24
     ba8:	08 95       	ret
     baa:	12 16       	cp	r1, r18
     bac:	13 06       	cpc	r1, r19
     bae:	14 06       	cpc	r1, r20
     bb0:	55 1f       	adc	r21, r21
     bb2:	f2 cf       	rjmp	.-28     	; 0xb98 <__fp_split3+0xe>
     bb4:	46 95       	lsr	r20
     bb6:	f1 df       	rcall	.-30     	; 0xb9a <__fp_splitA>
     bb8:	08 c0       	rjmp	.+16     	; 0xbca <__fp_splitA+0x30>
     bba:	16 16       	cp	r1, r22
     bbc:	17 06       	cpc	r1, r23
     bbe:	18 06       	cpc	r1, r24
     bc0:	99 1f       	adc	r25, r25
     bc2:	f1 cf       	rjmp	.-30     	; 0xba6 <__fp_splitA+0xc>
     bc4:	86 95       	lsr	r24
     bc6:	71 05       	cpc	r23, r1
     bc8:	61 05       	cpc	r22, r1
     bca:	08 94       	sec
     bcc:	08 95       	ret

00000bce <__fp_zero>:
     bce:	e8 94       	clt

00000bd0 <__fp_szero>:
     bd0:	bb 27       	eor	r27, r27
     bd2:	66 27       	eor	r22, r22
     bd4:	77 27       	eor	r23, r23
     bd6:	cb 01       	movw	r24, r22
     bd8:	97 f9       	bld	r25, 7
     bda:	08 95       	ret

00000bdc <__mulsf3>:
     bdc:	0e 94 01 06 	call	0xc02	; 0xc02 <__mulsf3x>
     be0:	0c 94 b4 05 	jmp	0xb68	; 0xb68 <__fp_round>
     be4:	0e 94 a6 05 	call	0xb4c	; 0xb4c <__fp_pscA>
     be8:	38 f0       	brcs	.+14     	; 0xbf8 <__mulsf3+0x1c>
     bea:	0e 94 ad 05 	call	0xb5a	; 0xb5a <__fp_pscB>
     bee:	20 f0       	brcs	.+8      	; 0xbf8 <__mulsf3+0x1c>
     bf0:	95 23       	and	r25, r21
     bf2:	11 f0       	breq	.+4      	; 0xbf8 <__mulsf3+0x1c>
     bf4:	0c 94 9d 05 	jmp	0xb3a	; 0xb3a <__fp_inf>
     bf8:	0c 94 a3 05 	jmp	0xb46	; 0xb46 <__fp_nan>
     bfc:	11 24       	eor	r1, r1
     bfe:	0c 94 e8 05 	jmp	0xbd0	; 0xbd0 <__fp_szero>

00000c02 <__mulsf3x>:
     c02:	0e 94 c5 05 	call	0xb8a	; 0xb8a <__fp_split3>
     c06:	70 f3       	brcs	.-36     	; 0xbe4 <__mulsf3+0x8>

00000c08 <__mulsf3_pse>:
     c08:	95 9f       	mul	r25, r21
     c0a:	c1 f3       	breq	.-16     	; 0xbfc <__mulsf3+0x20>
     c0c:	95 0f       	add	r25, r21
     c0e:	50 e0       	ldi	r21, 0x00	; 0
     c10:	55 1f       	adc	r21, r21
     c12:	62 9f       	mul	r22, r18
     c14:	f0 01       	movw	r30, r0
     c16:	72 9f       	mul	r23, r18
     c18:	bb 27       	eor	r27, r27
     c1a:	f0 0d       	add	r31, r0
     c1c:	b1 1d       	adc	r27, r1
     c1e:	63 9f       	mul	r22, r19
     c20:	aa 27       	eor	r26, r26
     c22:	f0 0d       	add	r31, r0
     c24:	b1 1d       	adc	r27, r1
     c26:	aa 1f       	adc	r26, r26
     c28:	64 9f       	mul	r22, r20
     c2a:	66 27       	eor	r22, r22
     c2c:	b0 0d       	add	r27, r0
     c2e:	a1 1d       	adc	r26, r1
     c30:	66 1f       	adc	r22, r22
     c32:	82 9f       	mul	r24, r18
     c34:	22 27       	eor	r18, r18
     c36:	b0 0d       	add	r27, r0
     c38:	a1 1d       	adc	r26, r1
     c3a:	62 1f       	adc	r22, r18
     c3c:	73 9f       	mul	r23, r19
     c3e:	b0 0d       	add	r27, r0
     c40:	a1 1d       	adc	r26, r1
     c42:	62 1f       	adc	r22, r18
     c44:	83 9f       	mul	r24, r19
     c46:	a0 0d       	add	r26, r0
     c48:	61 1d       	adc	r22, r1
     c4a:	22 1f       	adc	r18, r18
     c4c:	74 9f       	mul	r23, r20
     c4e:	33 27       	eor	r19, r19
     c50:	a0 0d       	add	r26, r0
     c52:	61 1d       	adc	r22, r1
     c54:	23 1f       	adc	r18, r19
     c56:	84 9f       	mul	r24, r20
     c58:	60 0d       	add	r22, r0
     c5a:	21 1d       	adc	r18, r1
     c5c:	82 2f       	mov	r24, r18
     c5e:	76 2f       	mov	r23, r22
     c60:	6a 2f       	mov	r22, r26
     c62:	11 24       	eor	r1, r1
     c64:	9f 57       	subi	r25, 0x7F	; 127
     c66:	50 40       	sbci	r21, 0x00	; 0
     c68:	9a f0       	brmi	.+38     	; 0xc90 <__mulsf3_pse+0x88>
     c6a:	f1 f0       	breq	.+60     	; 0xca8 <__mulsf3_pse+0xa0>
     c6c:	88 23       	and	r24, r24
     c6e:	4a f0       	brmi	.+18     	; 0xc82 <__mulsf3_pse+0x7a>
     c70:	ee 0f       	add	r30, r30
     c72:	ff 1f       	adc	r31, r31
     c74:	bb 1f       	adc	r27, r27
     c76:	66 1f       	adc	r22, r22
     c78:	77 1f       	adc	r23, r23
     c7a:	88 1f       	adc	r24, r24
     c7c:	91 50       	subi	r25, 0x01	; 1
     c7e:	50 40       	sbci	r21, 0x00	; 0
     c80:	a9 f7       	brne	.-22     	; 0xc6c <__mulsf3_pse+0x64>
     c82:	9e 3f       	cpi	r25, 0xFE	; 254
     c84:	51 05       	cpc	r21, r1
     c86:	80 f0       	brcs	.+32     	; 0xca8 <__mulsf3_pse+0xa0>
     c88:	0c 94 9d 05 	jmp	0xb3a	; 0xb3a <__fp_inf>
     c8c:	0c 94 e8 05 	jmp	0xbd0	; 0xbd0 <__fp_szero>
     c90:	5f 3f       	cpi	r21, 0xFF	; 255
     c92:	e4 f3       	brlt	.-8      	; 0xc8c <__mulsf3_pse+0x84>
     c94:	98 3e       	cpi	r25, 0xE8	; 232
     c96:	d4 f3       	brlt	.-12     	; 0xc8c <__mulsf3_pse+0x84>
     c98:	86 95       	lsr	r24
     c9a:	77 95       	ror	r23
     c9c:	67 95       	ror	r22
     c9e:	b7 95       	ror	r27
     ca0:	f7 95       	ror	r31
     ca2:	e7 95       	ror	r30
     ca4:	9f 5f       	subi	r25, 0xFF	; 255
     ca6:	c1 f7       	brne	.-16     	; 0xc98 <__mulsf3_pse+0x90>
     ca8:	fe 2b       	or	r31, r30
     caa:	88 0f       	add	r24, r24
     cac:	91 1d       	adc	r25, r1
     cae:	96 95       	lsr	r25
     cb0:	87 95       	ror	r24
     cb2:	97 f9       	bld	r25, 7
     cb4:	08 95       	ret

00000cb6 <toupper>:
     cb6:	91 11       	cpse	r25, r1
     cb8:	08 95       	ret
     cba:	81 56       	subi	r24, 0x61	; 97
     cbc:	8a 51       	subi	r24, 0x1A	; 26
     cbe:	08 f4       	brcc	.+2      	; 0xcc2 <toupper+0xc>
     cc0:	80 52       	subi	r24, 0x20	; 32
     cc2:	85 58       	subi	r24, 0x85	; 133
     cc4:	08 95       	ret

00000cc6 <sprintf>:
     cc6:	0f 93       	push	r16
     cc8:	1f 93       	push	r17
     cca:	cf 93       	push	r28
     ccc:	df 93       	push	r29
     cce:	cd b7       	in	r28, 0x3d	; 61
     cd0:	de b7       	in	r29, 0x3e	; 62
     cd2:	2e 97       	sbiw	r28, 0x0e	; 14
     cd4:	cd bf       	out	0x3d, r28	; 61
     cd6:	de bf       	out	0x3e, r29	; 62
     cd8:	0d 89       	ldd	r16, Y+21	; 0x15
     cda:	1e 89       	ldd	r17, Y+22	; 0x16
     cdc:	86 e0       	ldi	r24, 0x06	; 6
     cde:	8c 83       	std	Y+4, r24	; 0x04
     ce0:	09 83       	std	Y+1, r16	; 0x01
     ce2:	1a 83       	std	Y+2, r17	; 0x02
     ce4:	8f ef       	ldi	r24, 0xFF	; 255
     ce6:	9f e7       	ldi	r25, 0x7F	; 127
     ce8:	8d 83       	std	Y+5, r24	; 0x05
     cea:	9e 83       	std	Y+6, r25	; 0x06
     cec:	ae 01       	movw	r20, r28
     cee:	47 5e       	subi	r20, 0xE7	; 231
     cf0:	5f 4f       	sbci	r21, 0xFF	; 255
     cf2:	6f 89       	ldd	r22, Y+23	; 0x17
     cf4:	78 8d       	ldd	r23, Y+24	; 0x18
     cf6:	ce 01       	movw	r24, r28
     cf8:	01 96       	adiw	r24, 0x01	; 1
     cfa:	0e 94 8c 06 	call	0xd18	; 0xd18 <vfprintf>
     cfe:	ef 81       	ldd	r30, Y+7	; 0x07
     d00:	f8 85       	ldd	r31, Y+8	; 0x08
     d02:	e0 0f       	add	r30, r16
     d04:	f1 1f       	adc	r31, r17
     d06:	10 82       	st	Z, r1
     d08:	2e 96       	adiw	r28, 0x0e	; 14
     d0a:	cd bf       	out	0x3d, r28	; 61
     d0c:	de bf       	out	0x3e, r29	; 62
     d0e:	df 91       	pop	r29
     d10:	cf 91       	pop	r28
     d12:	1f 91       	pop	r17
     d14:	0f 91       	pop	r16
     d16:	08 95       	ret

00000d18 <vfprintf>:
     d18:	2f 92       	push	r2
     d1a:	3f 92       	push	r3
     d1c:	4f 92       	push	r4
     d1e:	5f 92       	push	r5
     d20:	6f 92       	push	r6
     d22:	7f 92       	push	r7
     d24:	8f 92       	push	r8
     d26:	9f 92       	push	r9
     d28:	af 92       	push	r10
     d2a:	bf 92       	push	r11
     d2c:	cf 92       	push	r12
     d2e:	df 92       	push	r13
     d30:	ef 92       	push	r14
     d32:	ff 92       	push	r15
     d34:	0f 93       	push	r16
     d36:	1f 93       	push	r17
     d38:	cf 93       	push	r28
     d3a:	df 93       	push	r29
     d3c:	cd b7       	in	r28, 0x3d	; 61
     d3e:	de b7       	in	r29, 0x3e	; 62
     d40:	2b 97       	sbiw	r28, 0x0b	; 11
     d42:	cd bf       	out	0x3d, r28	; 61
     d44:	de bf       	out	0x3e, r29	; 62
     d46:	6c 01       	movw	r12, r24
     d48:	7b 01       	movw	r14, r22
     d4a:	8a 01       	movw	r16, r20
     d4c:	fc 01       	movw	r30, r24
     d4e:	16 82       	std	Z+6, r1	; 0x06
     d50:	17 82       	std	Z+7, r1	; 0x07
     d52:	83 81       	ldd	r24, Z+3	; 0x03
     d54:	81 ff       	sbrs	r24, 1
     d56:	cc c1       	rjmp	.+920    	; 0x10f0 <vfprintf+0x3d8>
     d58:	ce 01       	movw	r24, r28
     d5a:	01 96       	adiw	r24, 0x01	; 1
     d5c:	3c 01       	movw	r6, r24
     d5e:	f6 01       	movw	r30, r12
     d60:	93 81       	ldd	r25, Z+3	; 0x03
     d62:	f7 01       	movw	r30, r14
     d64:	93 fd       	sbrc	r25, 3
     d66:	85 91       	lpm	r24, Z+
     d68:	93 ff       	sbrs	r25, 3
     d6a:	81 91       	ld	r24, Z+
     d6c:	7f 01       	movw	r14, r30
     d6e:	88 23       	and	r24, r24
     d70:	09 f4       	brne	.+2      	; 0xd74 <vfprintf+0x5c>
     d72:	ba c1       	rjmp	.+884    	; 0x10e8 <vfprintf+0x3d0>
     d74:	85 32       	cpi	r24, 0x25	; 37
     d76:	39 f4       	brne	.+14     	; 0xd86 <vfprintf+0x6e>
     d78:	93 fd       	sbrc	r25, 3
     d7a:	85 91       	lpm	r24, Z+
     d7c:	93 ff       	sbrs	r25, 3
     d7e:	81 91       	ld	r24, Z+
     d80:	7f 01       	movw	r14, r30
     d82:	85 32       	cpi	r24, 0x25	; 37
     d84:	29 f4       	brne	.+10     	; 0xd90 <vfprintf+0x78>
     d86:	b6 01       	movw	r22, r12
     d88:	90 e0       	ldi	r25, 0x00	; 0
     d8a:	0e 94 a6 08 	call	0x114c	; 0x114c <fputc>
     d8e:	e7 cf       	rjmp	.-50     	; 0xd5e <vfprintf+0x46>
     d90:	91 2c       	mov	r9, r1
     d92:	21 2c       	mov	r2, r1
     d94:	31 2c       	mov	r3, r1
     d96:	ff e1       	ldi	r31, 0x1F	; 31
     d98:	f3 15       	cp	r31, r3
     d9a:	d8 f0       	brcs	.+54     	; 0xdd2 <vfprintf+0xba>
     d9c:	8b 32       	cpi	r24, 0x2B	; 43
     d9e:	79 f0       	breq	.+30     	; 0xdbe <vfprintf+0xa6>
     da0:	38 f4       	brcc	.+14     	; 0xdb0 <vfprintf+0x98>
     da2:	80 32       	cpi	r24, 0x20	; 32
     da4:	79 f0       	breq	.+30     	; 0xdc4 <vfprintf+0xac>
     da6:	83 32       	cpi	r24, 0x23	; 35
     da8:	a1 f4       	brne	.+40     	; 0xdd2 <vfprintf+0xba>
     daa:	23 2d       	mov	r18, r3
     dac:	20 61       	ori	r18, 0x10	; 16
     dae:	1d c0       	rjmp	.+58     	; 0xdea <vfprintf+0xd2>
     db0:	8d 32       	cpi	r24, 0x2D	; 45
     db2:	61 f0       	breq	.+24     	; 0xdcc <vfprintf+0xb4>
     db4:	80 33       	cpi	r24, 0x30	; 48
     db6:	69 f4       	brne	.+26     	; 0xdd2 <vfprintf+0xba>
     db8:	23 2d       	mov	r18, r3
     dba:	21 60       	ori	r18, 0x01	; 1
     dbc:	16 c0       	rjmp	.+44     	; 0xdea <vfprintf+0xd2>
     dbe:	83 2d       	mov	r24, r3
     dc0:	82 60       	ori	r24, 0x02	; 2
     dc2:	38 2e       	mov	r3, r24
     dc4:	e3 2d       	mov	r30, r3
     dc6:	e4 60       	ori	r30, 0x04	; 4
     dc8:	3e 2e       	mov	r3, r30
     dca:	2a c0       	rjmp	.+84     	; 0xe20 <vfprintf+0x108>
     dcc:	f3 2d       	mov	r31, r3
     dce:	f8 60       	ori	r31, 0x08	; 8
     dd0:	1d c0       	rjmp	.+58     	; 0xe0c <vfprintf+0xf4>
     dd2:	37 fc       	sbrc	r3, 7
     dd4:	2d c0       	rjmp	.+90     	; 0xe30 <vfprintf+0x118>
     dd6:	20 ed       	ldi	r18, 0xD0	; 208
     dd8:	28 0f       	add	r18, r24
     dda:	2a 30       	cpi	r18, 0x0A	; 10
     ddc:	40 f0       	brcs	.+16     	; 0xdee <vfprintf+0xd6>
     dde:	8e 32       	cpi	r24, 0x2E	; 46
     de0:	b9 f4       	brne	.+46     	; 0xe10 <vfprintf+0xf8>
     de2:	36 fc       	sbrc	r3, 6
     de4:	81 c1       	rjmp	.+770    	; 0x10e8 <vfprintf+0x3d0>
     de6:	23 2d       	mov	r18, r3
     de8:	20 64       	ori	r18, 0x40	; 64
     dea:	32 2e       	mov	r3, r18
     dec:	19 c0       	rjmp	.+50     	; 0xe20 <vfprintf+0x108>
     dee:	36 fe       	sbrs	r3, 6
     df0:	06 c0       	rjmp	.+12     	; 0xdfe <vfprintf+0xe6>
     df2:	8a e0       	ldi	r24, 0x0A	; 10
     df4:	98 9e       	mul	r9, r24
     df6:	20 0d       	add	r18, r0
     df8:	11 24       	eor	r1, r1
     dfa:	92 2e       	mov	r9, r18
     dfc:	11 c0       	rjmp	.+34     	; 0xe20 <vfprintf+0x108>
     dfe:	ea e0       	ldi	r30, 0x0A	; 10
     e00:	2e 9e       	mul	r2, r30
     e02:	20 0d       	add	r18, r0
     e04:	11 24       	eor	r1, r1
     e06:	22 2e       	mov	r2, r18
     e08:	f3 2d       	mov	r31, r3
     e0a:	f0 62       	ori	r31, 0x20	; 32
     e0c:	3f 2e       	mov	r3, r31
     e0e:	08 c0       	rjmp	.+16     	; 0xe20 <vfprintf+0x108>
     e10:	8c 36       	cpi	r24, 0x6C	; 108
     e12:	21 f4       	brne	.+8      	; 0xe1c <vfprintf+0x104>
     e14:	83 2d       	mov	r24, r3
     e16:	80 68       	ori	r24, 0x80	; 128
     e18:	38 2e       	mov	r3, r24
     e1a:	02 c0       	rjmp	.+4      	; 0xe20 <vfprintf+0x108>
     e1c:	88 36       	cpi	r24, 0x68	; 104
     e1e:	41 f4       	brne	.+16     	; 0xe30 <vfprintf+0x118>
     e20:	f7 01       	movw	r30, r14
     e22:	93 fd       	sbrc	r25, 3
     e24:	85 91       	lpm	r24, Z+
     e26:	93 ff       	sbrs	r25, 3
     e28:	81 91       	ld	r24, Z+
     e2a:	7f 01       	movw	r14, r30
     e2c:	81 11       	cpse	r24, r1
     e2e:	b3 cf       	rjmp	.-154    	; 0xd96 <vfprintf+0x7e>
     e30:	98 2f       	mov	r25, r24
     e32:	9f 7d       	andi	r25, 0xDF	; 223
     e34:	95 54       	subi	r25, 0x45	; 69
     e36:	93 30       	cpi	r25, 0x03	; 3
     e38:	28 f4       	brcc	.+10     	; 0xe44 <vfprintf+0x12c>
     e3a:	0c 5f       	subi	r16, 0xFC	; 252
     e3c:	1f 4f       	sbci	r17, 0xFF	; 255
     e3e:	9f e3       	ldi	r25, 0x3F	; 63
     e40:	99 83       	std	Y+1, r25	; 0x01
     e42:	0d c0       	rjmp	.+26     	; 0xe5e <vfprintf+0x146>
     e44:	83 36       	cpi	r24, 0x63	; 99
     e46:	31 f0       	breq	.+12     	; 0xe54 <vfprintf+0x13c>
     e48:	83 37       	cpi	r24, 0x73	; 115
     e4a:	71 f0       	breq	.+28     	; 0xe68 <vfprintf+0x150>
     e4c:	83 35       	cpi	r24, 0x53	; 83
     e4e:	09 f0       	breq	.+2      	; 0xe52 <vfprintf+0x13a>
     e50:	59 c0       	rjmp	.+178    	; 0xf04 <vfprintf+0x1ec>
     e52:	21 c0       	rjmp	.+66     	; 0xe96 <vfprintf+0x17e>
     e54:	f8 01       	movw	r30, r16
     e56:	80 81       	ld	r24, Z
     e58:	89 83       	std	Y+1, r24	; 0x01
     e5a:	0e 5f       	subi	r16, 0xFE	; 254
     e5c:	1f 4f       	sbci	r17, 0xFF	; 255
     e5e:	88 24       	eor	r8, r8
     e60:	83 94       	inc	r8
     e62:	91 2c       	mov	r9, r1
     e64:	53 01       	movw	r10, r6
     e66:	13 c0       	rjmp	.+38     	; 0xe8e <vfprintf+0x176>
     e68:	28 01       	movw	r4, r16
     e6a:	f2 e0       	ldi	r31, 0x02	; 2
     e6c:	4f 0e       	add	r4, r31
     e6e:	51 1c       	adc	r5, r1
     e70:	f8 01       	movw	r30, r16
     e72:	a0 80       	ld	r10, Z
     e74:	b1 80       	ldd	r11, Z+1	; 0x01
     e76:	36 fe       	sbrs	r3, 6
     e78:	03 c0       	rjmp	.+6      	; 0xe80 <vfprintf+0x168>
     e7a:	69 2d       	mov	r22, r9
     e7c:	70 e0       	ldi	r23, 0x00	; 0
     e7e:	02 c0       	rjmp	.+4      	; 0xe84 <vfprintf+0x16c>
     e80:	6f ef       	ldi	r22, 0xFF	; 255
     e82:	7f ef       	ldi	r23, 0xFF	; 255
     e84:	c5 01       	movw	r24, r10
     e86:	0e 94 9b 08 	call	0x1136	; 0x1136 <strnlen>
     e8a:	4c 01       	movw	r8, r24
     e8c:	82 01       	movw	r16, r4
     e8e:	f3 2d       	mov	r31, r3
     e90:	ff 77       	andi	r31, 0x7F	; 127
     e92:	3f 2e       	mov	r3, r31
     e94:	16 c0       	rjmp	.+44     	; 0xec2 <vfprintf+0x1aa>
     e96:	28 01       	movw	r4, r16
     e98:	22 e0       	ldi	r18, 0x02	; 2
     e9a:	42 0e       	add	r4, r18
     e9c:	51 1c       	adc	r5, r1
     e9e:	f8 01       	movw	r30, r16
     ea0:	a0 80       	ld	r10, Z
     ea2:	b1 80       	ldd	r11, Z+1	; 0x01
     ea4:	36 fe       	sbrs	r3, 6
     ea6:	03 c0       	rjmp	.+6      	; 0xeae <vfprintf+0x196>
     ea8:	69 2d       	mov	r22, r9
     eaa:	70 e0       	ldi	r23, 0x00	; 0
     eac:	02 c0       	rjmp	.+4      	; 0xeb2 <vfprintf+0x19a>
     eae:	6f ef       	ldi	r22, 0xFF	; 255
     eb0:	7f ef       	ldi	r23, 0xFF	; 255
     eb2:	c5 01       	movw	r24, r10
     eb4:	0e 94 90 08 	call	0x1120	; 0x1120 <strnlen_P>
     eb8:	4c 01       	movw	r8, r24
     eba:	f3 2d       	mov	r31, r3
     ebc:	f0 68       	ori	r31, 0x80	; 128
     ebe:	3f 2e       	mov	r3, r31
     ec0:	82 01       	movw	r16, r4
     ec2:	33 fc       	sbrc	r3, 3
     ec4:	1b c0       	rjmp	.+54     	; 0xefc <vfprintf+0x1e4>
     ec6:	82 2d       	mov	r24, r2
     ec8:	90 e0       	ldi	r25, 0x00	; 0
     eca:	88 16       	cp	r8, r24
     ecc:	99 06       	cpc	r9, r25
     ece:	b0 f4       	brcc	.+44     	; 0xefc <vfprintf+0x1e4>
     ed0:	b6 01       	movw	r22, r12
     ed2:	80 e2       	ldi	r24, 0x20	; 32
     ed4:	90 e0       	ldi	r25, 0x00	; 0
     ed6:	0e 94 a6 08 	call	0x114c	; 0x114c <fputc>
     eda:	2a 94       	dec	r2
     edc:	f4 cf       	rjmp	.-24     	; 0xec6 <vfprintf+0x1ae>
     ede:	f5 01       	movw	r30, r10
     ee0:	37 fc       	sbrc	r3, 7
     ee2:	85 91       	lpm	r24, Z+
     ee4:	37 fe       	sbrs	r3, 7
     ee6:	81 91       	ld	r24, Z+
     ee8:	5f 01       	movw	r10, r30
     eea:	b6 01       	movw	r22, r12
     eec:	90 e0       	ldi	r25, 0x00	; 0
     eee:	0e 94 a6 08 	call	0x114c	; 0x114c <fputc>
     ef2:	21 10       	cpse	r2, r1
     ef4:	2a 94       	dec	r2
     ef6:	21 e0       	ldi	r18, 0x01	; 1
     ef8:	82 1a       	sub	r8, r18
     efa:	91 08       	sbc	r9, r1
     efc:	81 14       	cp	r8, r1
     efe:	91 04       	cpc	r9, r1
     f00:	71 f7       	brne	.-36     	; 0xede <vfprintf+0x1c6>
     f02:	e8 c0       	rjmp	.+464    	; 0x10d4 <vfprintf+0x3bc>
     f04:	84 36       	cpi	r24, 0x64	; 100
     f06:	11 f0       	breq	.+4      	; 0xf0c <vfprintf+0x1f4>
     f08:	89 36       	cpi	r24, 0x69	; 105
     f0a:	41 f5       	brne	.+80     	; 0xf5c <vfprintf+0x244>
     f0c:	f8 01       	movw	r30, r16
     f0e:	37 fe       	sbrs	r3, 7
     f10:	07 c0       	rjmp	.+14     	; 0xf20 <vfprintf+0x208>
     f12:	60 81       	ld	r22, Z
     f14:	71 81       	ldd	r23, Z+1	; 0x01
     f16:	82 81       	ldd	r24, Z+2	; 0x02
     f18:	93 81       	ldd	r25, Z+3	; 0x03
     f1a:	0c 5f       	subi	r16, 0xFC	; 252
     f1c:	1f 4f       	sbci	r17, 0xFF	; 255
     f1e:	08 c0       	rjmp	.+16     	; 0xf30 <vfprintf+0x218>
     f20:	60 81       	ld	r22, Z
     f22:	71 81       	ldd	r23, Z+1	; 0x01
     f24:	07 2e       	mov	r0, r23
     f26:	00 0c       	add	r0, r0
     f28:	88 0b       	sbc	r24, r24
     f2a:	99 0b       	sbc	r25, r25
     f2c:	0e 5f       	subi	r16, 0xFE	; 254
     f2e:	1f 4f       	sbci	r17, 0xFF	; 255
     f30:	f3 2d       	mov	r31, r3
     f32:	ff 76       	andi	r31, 0x6F	; 111
     f34:	3f 2e       	mov	r3, r31
     f36:	97 ff       	sbrs	r25, 7
     f38:	09 c0       	rjmp	.+18     	; 0xf4c <vfprintf+0x234>
     f3a:	90 95       	com	r25
     f3c:	80 95       	com	r24
     f3e:	70 95       	com	r23
     f40:	61 95       	neg	r22
     f42:	7f 4f       	sbci	r23, 0xFF	; 255
     f44:	8f 4f       	sbci	r24, 0xFF	; 255
     f46:	9f 4f       	sbci	r25, 0xFF	; 255
     f48:	f0 68       	ori	r31, 0x80	; 128
     f4a:	3f 2e       	mov	r3, r31
     f4c:	2a e0       	ldi	r18, 0x0A	; 10
     f4e:	30 e0       	ldi	r19, 0x00	; 0
     f50:	a3 01       	movw	r20, r6
     f52:	0e 94 e2 08 	call	0x11c4	; 0x11c4 <__ultoa_invert>
     f56:	88 2e       	mov	r8, r24
     f58:	86 18       	sub	r8, r6
     f5a:	45 c0       	rjmp	.+138    	; 0xfe6 <vfprintf+0x2ce>
     f5c:	85 37       	cpi	r24, 0x75	; 117
     f5e:	31 f4       	brne	.+12     	; 0xf6c <vfprintf+0x254>
     f60:	23 2d       	mov	r18, r3
     f62:	2f 7e       	andi	r18, 0xEF	; 239
     f64:	b2 2e       	mov	r11, r18
     f66:	2a e0       	ldi	r18, 0x0A	; 10
     f68:	30 e0       	ldi	r19, 0x00	; 0
     f6a:	25 c0       	rjmp	.+74     	; 0xfb6 <vfprintf+0x29e>
     f6c:	93 2d       	mov	r25, r3
     f6e:	99 7f       	andi	r25, 0xF9	; 249
     f70:	b9 2e       	mov	r11, r25
     f72:	8f 36       	cpi	r24, 0x6F	; 111
     f74:	c1 f0       	breq	.+48     	; 0xfa6 <vfprintf+0x28e>
     f76:	18 f4       	brcc	.+6      	; 0xf7e <vfprintf+0x266>
     f78:	88 35       	cpi	r24, 0x58	; 88
     f7a:	79 f0       	breq	.+30     	; 0xf9a <vfprintf+0x282>
     f7c:	b5 c0       	rjmp	.+362    	; 0x10e8 <vfprintf+0x3d0>
     f7e:	80 37       	cpi	r24, 0x70	; 112
     f80:	19 f0       	breq	.+6      	; 0xf88 <vfprintf+0x270>
     f82:	88 37       	cpi	r24, 0x78	; 120
     f84:	21 f0       	breq	.+8      	; 0xf8e <vfprintf+0x276>
     f86:	b0 c0       	rjmp	.+352    	; 0x10e8 <vfprintf+0x3d0>
     f88:	e9 2f       	mov	r30, r25
     f8a:	e0 61       	ori	r30, 0x10	; 16
     f8c:	be 2e       	mov	r11, r30
     f8e:	b4 fe       	sbrs	r11, 4
     f90:	0d c0       	rjmp	.+26     	; 0xfac <vfprintf+0x294>
     f92:	fb 2d       	mov	r31, r11
     f94:	f4 60       	ori	r31, 0x04	; 4
     f96:	bf 2e       	mov	r11, r31
     f98:	09 c0       	rjmp	.+18     	; 0xfac <vfprintf+0x294>
     f9a:	34 fe       	sbrs	r3, 4
     f9c:	0a c0       	rjmp	.+20     	; 0xfb2 <vfprintf+0x29a>
     f9e:	29 2f       	mov	r18, r25
     fa0:	26 60       	ori	r18, 0x06	; 6
     fa2:	b2 2e       	mov	r11, r18
     fa4:	06 c0       	rjmp	.+12     	; 0xfb2 <vfprintf+0x29a>
     fa6:	28 e0       	ldi	r18, 0x08	; 8
     fa8:	30 e0       	ldi	r19, 0x00	; 0
     faa:	05 c0       	rjmp	.+10     	; 0xfb6 <vfprintf+0x29e>
     fac:	20 e1       	ldi	r18, 0x10	; 16
     fae:	30 e0       	ldi	r19, 0x00	; 0
     fb0:	02 c0       	rjmp	.+4      	; 0xfb6 <vfprintf+0x29e>
     fb2:	20 e1       	ldi	r18, 0x10	; 16
     fb4:	32 e0       	ldi	r19, 0x02	; 2
     fb6:	f8 01       	movw	r30, r16
     fb8:	b7 fe       	sbrs	r11, 7
     fba:	07 c0       	rjmp	.+14     	; 0xfca <vfprintf+0x2b2>
     fbc:	60 81       	ld	r22, Z
     fbe:	71 81       	ldd	r23, Z+1	; 0x01
     fc0:	82 81       	ldd	r24, Z+2	; 0x02
     fc2:	93 81       	ldd	r25, Z+3	; 0x03
     fc4:	0c 5f       	subi	r16, 0xFC	; 252
     fc6:	1f 4f       	sbci	r17, 0xFF	; 255
     fc8:	06 c0       	rjmp	.+12     	; 0xfd6 <vfprintf+0x2be>
     fca:	60 81       	ld	r22, Z
     fcc:	71 81       	ldd	r23, Z+1	; 0x01
     fce:	80 e0       	ldi	r24, 0x00	; 0
     fd0:	90 e0       	ldi	r25, 0x00	; 0
     fd2:	0e 5f       	subi	r16, 0xFE	; 254
     fd4:	1f 4f       	sbci	r17, 0xFF	; 255
     fd6:	a3 01       	movw	r20, r6
     fd8:	0e 94 e2 08 	call	0x11c4	; 0x11c4 <__ultoa_invert>
     fdc:	88 2e       	mov	r8, r24
     fde:	86 18       	sub	r8, r6
     fe0:	fb 2d       	mov	r31, r11
     fe2:	ff 77       	andi	r31, 0x7F	; 127
     fe4:	3f 2e       	mov	r3, r31
     fe6:	36 fe       	sbrs	r3, 6
     fe8:	0d c0       	rjmp	.+26     	; 0x1004 <vfprintf+0x2ec>
     fea:	23 2d       	mov	r18, r3
     fec:	2e 7f       	andi	r18, 0xFE	; 254
     fee:	a2 2e       	mov	r10, r18
     ff0:	89 14       	cp	r8, r9
     ff2:	58 f4       	brcc	.+22     	; 0x100a <vfprintf+0x2f2>
     ff4:	34 fe       	sbrs	r3, 4
     ff6:	0b c0       	rjmp	.+22     	; 0x100e <vfprintf+0x2f6>
     ff8:	32 fc       	sbrc	r3, 2
     ffa:	09 c0       	rjmp	.+18     	; 0x100e <vfprintf+0x2f6>
     ffc:	83 2d       	mov	r24, r3
     ffe:	8e 7e       	andi	r24, 0xEE	; 238
    1000:	a8 2e       	mov	r10, r24
    1002:	05 c0       	rjmp	.+10     	; 0x100e <vfprintf+0x2f6>
    1004:	b8 2c       	mov	r11, r8
    1006:	a3 2c       	mov	r10, r3
    1008:	03 c0       	rjmp	.+6      	; 0x1010 <vfprintf+0x2f8>
    100a:	b8 2c       	mov	r11, r8
    100c:	01 c0       	rjmp	.+2      	; 0x1010 <vfprintf+0x2f8>
    100e:	b9 2c       	mov	r11, r9
    1010:	a4 fe       	sbrs	r10, 4
    1012:	0f c0       	rjmp	.+30     	; 0x1032 <vfprintf+0x31a>
    1014:	fe 01       	movw	r30, r28
    1016:	e8 0d       	add	r30, r8
    1018:	f1 1d       	adc	r31, r1
    101a:	80 81       	ld	r24, Z
    101c:	80 33       	cpi	r24, 0x30	; 48
    101e:	21 f4       	brne	.+8      	; 0x1028 <vfprintf+0x310>
    1020:	9a 2d       	mov	r25, r10
    1022:	99 7e       	andi	r25, 0xE9	; 233
    1024:	a9 2e       	mov	r10, r25
    1026:	09 c0       	rjmp	.+18     	; 0x103a <vfprintf+0x322>
    1028:	a2 fe       	sbrs	r10, 2
    102a:	06 c0       	rjmp	.+12     	; 0x1038 <vfprintf+0x320>
    102c:	b3 94       	inc	r11
    102e:	b3 94       	inc	r11
    1030:	04 c0       	rjmp	.+8      	; 0x103a <vfprintf+0x322>
    1032:	8a 2d       	mov	r24, r10
    1034:	86 78       	andi	r24, 0x86	; 134
    1036:	09 f0       	breq	.+2      	; 0x103a <vfprintf+0x322>
    1038:	b3 94       	inc	r11
    103a:	a3 fc       	sbrc	r10, 3
    103c:	11 c0       	rjmp	.+34     	; 0x1060 <vfprintf+0x348>
    103e:	a0 fe       	sbrs	r10, 0
    1040:	06 c0       	rjmp	.+12     	; 0x104e <vfprintf+0x336>
    1042:	b2 14       	cp	r11, r2
    1044:	88 f4       	brcc	.+34     	; 0x1068 <vfprintf+0x350>
    1046:	28 0c       	add	r2, r8
    1048:	92 2c       	mov	r9, r2
    104a:	9b 18       	sub	r9, r11
    104c:	0e c0       	rjmp	.+28     	; 0x106a <vfprintf+0x352>
    104e:	b2 14       	cp	r11, r2
    1050:	60 f4       	brcc	.+24     	; 0x106a <vfprintf+0x352>
    1052:	b6 01       	movw	r22, r12
    1054:	80 e2       	ldi	r24, 0x20	; 32
    1056:	90 e0       	ldi	r25, 0x00	; 0
    1058:	0e 94 a6 08 	call	0x114c	; 0x114c <fputc>
    105c:	b3 94       	inc	r11
    105e:	f7 cf       	rjmp	.-18     	; 0x104e <vfprintf+0x336>
    1060:	b2 14       	cp	r11, r2
    1062:	18 f4       	brcc	.+6      	; 0x106a <vfprintf+0x352>
    1064:	2b 18       	sub	r2, r11
    1066:	02 c0       	rjmp	.+4      	; 0x106c <vfprintf+0x354>
    1068:	98 2c       	mov	r9, r8
    106a:	21 2c       	mov	r2, r1
    106c:	a4 fe       	sbrs	r10, 4
    106e:	10 c0       	rjmp	.+32     	; 0x1090 <vfprintf+0x378>
    1070:	b6 01       	movw	r22, r12
    1072:	80 e3       	ldi	r24, 0x30	; 48
    1074:	90 e0       	ldi	r25, 0x00	; 0
    1076:	0e 94 a6 08 	call	0x114c	; 0x114c <fputc>
    107a:	a2 fe       	sbrs	r10, 2
    107c:	17 c0       	rjmp	.+46     	; 0x10ac <vfprintf+0x394>
    107e:	a1 fc       	sbrc	r10, 1
    1080:	03 c0       	rjmp	.+6      	; 0x1088 <vfprintf+0x370>
    1082:	88 e7       	ldi	r24, 0x78	; 120
    1084:	90 e0       	ldi	r25, 0x00	; 0
    1086:	02 c0       	rjmp	.+4      	; 0x108c <vfprintf+0x374>
    1088:	88 e5       	ldi	r24, 0x58	; 88
    108a:	90 e0       	ldi	r25, 0x00	; 0
    108c:	b6 01       	movw	r22, r12
    108e:	0c c0       	rjmp	.+24     	; 0x10a8 <vfprintf+0x390>
    1090:	8a 2d       	mov	r24, r10
    1092:	86 78       	andi	r24, 0x86	; 134
    1094:	59 f0       	breq	.+22     	; 0x10ac <vfprintf+0x394>
    1096:	a1 fe       	sbrs	r10, 1
    1098:	02 c0       	rjmp	.+4      	; 0x109e <vfprintf+0x386>
    109a:	8b e2       	ldi	r24, 0x2B	; 43
    109c:	01 c0       	rjmp	.+2      	; 0x10a0 <vfprintf+0x388>
    109e:	80 e2       	ldi	r24, 0x20	; 32
    10a0:	a7 fc       	sbrc	r10, 7
    10a2:	8d e2       	ldi	r24, 0x2D	; 45
    10a4:	b6 01       	movw	r22, r12
    10a6:	90 e0       	ldi	r25, 0x00	; 0
    10a8:	0e 94 a6 08 	call	0x114c	; 0x114c <fputc>
    10ac:	89 14       	cp	r8, r9
    10ae:	38 f4       	brcc	.+14     	; 0x10be <vfprintf+0x3a6>
    10b0:	b6 01       	movw	r22, r12
    10b2:	80 e3       	ldi	r24, 0x30	; 48
    10b4:	90 e0       	ldi	r25, 0x00	; 0
    10b6:	0e 94 a6 08 	call	0x114c	; 0x114c <fputc>
    10ba:	9a 94       	dec	r9
    10bc:	f7 cf       	rjmp	.-18     	; 0x10ac <vfprintf+0x394>
    10be:	8a 94       	dec	r8
    10c0:	f3 01       	movw	r30, r6
    10c2:	e8 0d       	add	r30, r8
    10c4:	f1 1d       	adc	r31, r1
    10c6:	80 81       	ld	r24, Z
    10c8:	b6 01       	movw	r22, r12
    10ca:	90 e0       	ldi	r25, 0x00	; 0
    10cc:	0e 94 a6 08 	call	0x114c	; 0x114c <fputc>
    10d0:	81 10       	cpse	r8, r1
    10d2:	f5 cf       	rjmp	.-22     	; 0x10be <vfprintf+0x3a6>
    10d4:	22 20       	and	r2, r2
    10d6:	09 f4       	brne	.+2      	; 0x10da <vfprintf+0x3c2>
    10d8:	42 ce       	rjmp	.-892    	; 0xd5e <vfprintf+0x46>
    10da:	b6 01       	movw	r22, r12
    10dc:	80 e2       	ldi	r24, 0x20	; 32
    10de:	90 e0       	ldi	r25, 0x00	; 0
    10e0:	0e 94 a6 08 	call	0x114c	; 0x114c <fputc>
    10e4:	2a 94       	dec	r2
    10e6:	f6 cf       	rjmp	.-20     	; 0x10d4 <vfprintf+0x3bc>
    10e8:	f6 01       	movw	r30, r12
    10ea:	86 81       	ldd	r24, Z+6	; 0x06
    10ec:	97 81       	ldd	r25, Z+7	; 0x07
    10ee:	02 c0       	rjmp	.+4      	; 0x10f4 <vfprintf+0x3dc>
    10f0:	8f ef       	ldi	r24, 0xFF	; 255
    10f2:	9f ef       	ldi	r25, 0xFF	; 255
    10f4:	2b 96       	adiw	r28, 0x0b	; 11
    10f6:	cd bf       	out	0x3d, r28	; 61
    10f8:	de bf       	out	0x3e, r29	; 62
    10fa:	df 91       	pop	r29
    10fc:	cf 91       	pop	r28
    10fe:	1f 91       	pop	r17
    1100:	0f 91       	pop	r16
    1102:	ff 90       	pop	r15
    1104:	ef 90       	pop	r14
    1106:	df 90       	pop	r13
    1108:	cf 90       	pop	r12
    110a:	bf 90       	pop	r11
    110c:	af 90       	pop	r10
    110e:	9f 90       	pop	r9
    1110:	8f 90       	pop	r8
    1112:	7f 90       	pop	r7
    1114:	6f 90       	pop	r6
    1116:	5f 90       	pop	r5
    1118:	4f 90       	pop	r4
    111a:	3f 90       	pop	r3
    111c:	2f 90       	pop	r2
    111e:	08 95       	ret

00001120 <strnlen_P>:
    1120:	fc 01       	movw	r30, r24
    1122:	05 90       	lpm	r0, Z+
    1124:	61 50       	subi	r22, 0x01	; 1
    1126:	70 40       	sbci	r23, 0x00	; 0
    1128:	01 10       	cpse	r0, r1
    112a:	d8 f7       	brcc	.-10     	; 0x1122 <strnlen_P+0x2>
    112c:	80 95       	com	r24
    112e:	90 95       	com	r25
    1130:	8e 0f       	add	r24, r30
    1132:	9f 1f       	adc	r25, r31
    1134:	08 95       	ret

00001136 <strnlen>:
    1136:	fc 01       	movw	r30, r24
    1138:	61 50       	subi	r22, 0x01	; 1
    113a:	70 40       	sbci	r23, 0x00	; 0
    113c:	01 90       	ld	r0, Z+
    113e:	01 10       	cpse	r0, r1
    1140:	d8 f7       	brcc	.-10     	; 0x1138 <strnlen+0x2>
    1142:	80 95       	com	r24
    1144:	90 95       	com	r25
    1146:	8e 0f       	add	r24, r30
    1148:	9f 1f       	adc	r25, r31
    114a:	08 95       	ret

0000114c <fputc>:
    114c:	0f 93       	push	r16
    114e:	1f 93       	push	r17
    1150:	cf 93       	push	r28
    1152:	df 93       	push	r29
    1154:	fb 01       	movw	r30, r22
    1156:	23 81       	ldd	r18, Z+3	; 0x03
    1158:	21 fd       	sbrc	r18, 1
    115a:	03 c0       	rjmp	.+6      	; 0x1162 <fputc+0x16>
    115c:	8f ef       	ldi	r24, 0xFF	; 255
    115e:	9f ef       	ldi	r25, 0xFF	; 255
    1160:	2c c0       	rjmp	.+88     	; 0x11ba <fputc+0x6e>
    1162:	22 ff       	sbrs	r18, 2
    1164:	16 c0       	rjmp	.+44     	; 0x1192 <fputc+0x46>
    1166:	46 81       	ldd	r20, Z+6	; 0x06
    1168:	57 81       	ldd	r21, Z+7	; 0x07
    116a:	24 81       	ldd	r18, Z+4	; 0x04
    116c:	35 81       	ldd	r19, Z+5	; 0x05
    116e:	42 17       	cp	r20, r18
    1170:	53 07       	cpc	r21, r19
    1172:	44 f4       	brge	.+16     	; 0x1184 <fputc+0x38>
    1174:	a0 81       	ld	r26, Z
    1176:	b1 81       	ldd	r27, Z+1	; 0x01
    1178:	9d 01       	movw	r18, r26
    117a:	2f 5f       	subi	r18, 0xFF	; 255
    117c:	3f 4f       	sbci	r19, 0xFF	; 255
    117e:	20 83       	st	Z, r18
    1180:	31 83       	std	Z+1, r19	; 0x01
    1182:	8c 93       	st	X, r24
    1184:	26 81       	ldd	r18, Z+6	; 0x06
    1186:	37 81       	ldd	r19, Z+7	; 0x07
    1188:	2f 5f       	subi	r18, 0xFF	; 255
    118a:	3f 4f       	sbci	r19, 0xFF	; 255
    118c:	26 83       	std	Z+6, r18	; 0x06
    118e:	37 83       	std	Z+7, r19	; 0x07
    1190:	14 c0       	rjmp	.+40     	; 0x11ba <fputc+0x6e>
    1192:	8b 01       	movw	r16, r22
    1194:	ec 01       	movw	r28, r24
    1196:	fb 01       	movw	r30, r22
    1198:	00 84       	ldd	r0, Z+8	; 0x08
    119a:	f1 85       	ldd	r31, Z+9	; 0x09
    119c:	e0 2d       	mov	r30, r0
    119e:	09 95       	icall
    11a0:	89 2b       	or	r24, r25
    11a2:	e1 f6       	brne	.-72     	; 0x115c <fputc+0x10>
    11a4:	d8 01       	movw	r26, r16
    11a6:	16 96       	adiw	r26, 0x06	; 6
    11a8:	8d 91       	ld	r24, X+
    11aa:	9c 91       	ld	r25, X
    11ac:	17 97       	sbiw	r26, 0x07	; 7
    11ae:	01 96       	adiw	r24, 0x01	; 1
    11b0:	16 96       	adiw	r26, 0x06	; 6
    11b2:	8d 93       	st	X+, r24
    11b4:	9c 93       	st	X, r25
    11b6:	17 97       	sbiw	r26, 0x07	; 7
    11b8:	ce 01       	movw	r24, r28
    11ba:	df 91       	pop	r29
    11bc:	cf 91       	pop	r28
    11be:	1f 91       	pop	r17
    11c0:	0f 91       	pop	r16
    11c2:	08 95       	ret

000011c4 <__ultoa_invert>:
    11c4:	fa 01       	movw	r30, r20
    11c6:	aa 27       	eor	r26, r26
    11c8:	28 30       	cpi	r18, 0x08	; 8
    11ca:	51 f1       	breq	.+84     	; 0x1220 <__ultoa_invert+0x5c>
    11cc:	20 31       	cpi	r18, 0x10	; 16
    11ce:	81 f1       	breq	.+96     	; 0x1230 <__ultoa_invert+0x6c>
    11d0:	e8 94       	clt
    11d2:	6f 93       	push	r22
    11d4:	6e 7f       	andi	r22, 0xFE	; 254
    11d6:	6e 5f       	subi	r22, 0xFE	; 254
    11d8:	7f 4f       	sbci	r23, 0xFF	; 255
    11da:	8f 4f       	sbci	r24, 0xFF	; 255
    11dc:	9f 4f       	sbci	r25, 0xFF	; 255
    11de:	af 4f       	sbci	r26, 0xFF	; 255
    11e0:	b1 e0       	ldi	r27, 0x01	; 1
    11e2:	3e d0       	rcall	.+124    	; 0x1260 <__ultoa_invert+0x9c>
    11e4:	b4 e0       	ldi	r27, 0x04	; 4
    11e6:	3c d0       	rcall	.+120    	; 0x1260 <__ultoa_invert+0x9c>
    11e8:	67 0f       	add	r22, r23
    11ea:	78 1f       	adc	r23, r24
    11ec:	89 1f       	adc	r24, r25
    11ee:	9a 1f       	adc	r25, r26
    11f0:	a1 1d       	adc	r26, r1
    11f2:	68 0f       	add	r22, r24
    11f4:	79 1f       	adc	r23, r25
    11f6:	8a 1f       	adc	r24, r26
    11f8:	91 1d       	adc	r25, r1
    11fa:	a1 1d       	adc	r26, r1
    11fc:	6a 0f       	add	r22, r26
    11fe:	71 1d       	adc	r23, r1
    1200:	81 1d       	adc	r24, r1
    1202:	91 1d       	adc	r25, r1
    1204:	a1 1d       	adc	r26, r1
    1206:	20 d0       	rcall	.+64     	; 0x1248 <__ultoa_invert+0x84>
    1208:	09 f4       	brne	.+2      	; 0x120c <__ultoa_invert+0x48>
    120a:	68 94       	set
    120c:	3f 91       	pop	r19
    120e:	2a e0       	ldi	r18, 0x0A	; 10
    1210:	26 9f       	mul	r18, r22
    1212:	11 24       	eor	r1, r1
    1214:	30 19       	sub	r19, r0
    1216:	30 5d       	subi	r19, 0xD0	; 208
    1218:	31 93       	st	Z+, r19
    121a:	de f6       	brtc	.-74     	; 0x11d2 <__ultoa_invert+0xe>
    121c:	cf 01       	movw	r24, r30
    121e:	08 95       	ret
    1220:	46 2f       	mov	r20, r22
    1222:	47 70       	andi	r20, 0x07	; 7
    1224:	40 5d       	subi	r20, 0xD0	; 208
    1226:	41 93       	st	Z+, r20
    1228:	b3 e0       	ldi	r27, 0x03	; 3
    122a:	0f d0       	rcall	.+30     	; 0x124a <__ultoa_invert+0x86>
    122c:	c9 f7       	brne	.-14     	; 0x1220 <__ultoa_invert+0x5c>
    122e:	f6 cf       	rjmp	.-20     	; 0x121c <__ultoa_invert+0x58>
    1230:	46 2f       	mov	r20, r22
    1232:	4f 70       	andi	r20, 0x0F	; 15
    1234:	40 5d       	subi	r20, 0xD0	; 208
    1236:	4a 33       	cpi	r20, 0x3A	; 58
    1238:	18 f0       	brcs	.+6      	; 0x1240 <__ultoa_invert+0x7c>
    123a:	49 5d       	subi	r20, 0xD9	; 217
    123c:	31 fd       	sbrc	r19, 1
    123e:	40 52       	subi	r20, 0x20	; 32
    1240:	41 93       	st	Z+, r20
    1242:	02 d0       	rcall	.+4      	; 0x1248 <__ultoa_invert+0x84>
    1244:	a9 f7       	brne	.-22     	; 0x1230 <__ultoa_invert+0x6c>
    1246:	ea cf       	rjmp	.-44     	; 0x121c <__ultoa_invert+0x58>
    1248:	b4 e0       	ldi	r27, 0x04	; 4
    124a:	a6 95       	lsr	r26
    124c:	97 95       	ror	r25
    124e:	87 95       	ror	r24
    1250:	77 95       	ror	r23
    1252:	67 95       	ror	r22
    1254:	ba 95       	dec	r27
    1256:	c9 f7       	brne	.-14     	; 0x124a <__ultoa_invert+0x86>
    1258:	00 97       	sbiw	r24, 0x00	; 0
    125a:	61 05       	cpc	r22, r1
    125c:	71 05       	cpc	r23, r1
    125e:	08 95       	ret
    1260:	9b 01       	movw	r18, r22
    1262:	ac 01       	movw	r20, r24
    1264:	0a 2e       	mov	r0, r26
    1266:	06 94       	lsr	r0
    1268:	57 95       	ror	r21
    126a:	47 95       	ror	r20
    126c:	37 95       	ror	r19
    126e:	27 95       	ror	r18
    1270:	ba 95       	dec	r27
    1272:	c9 f7       	brne	.-14     	; 0x1266 <__ultoa_invert+0xa2>
    1274:	62 0f       	add	r22, r18
    1276:	73 1f       	adc	r23, r19
    1278:	84 1f       	adc	r24, r20
    127a:	95 1f       	adc	r25, r21
    127c:	a0 1d       	adc	r26, r0
    127e:	08 95       	ret

00001280 <_exit>:
    1280:	f8 94       	cli

00001282 <__stop_program>:
    1282:	ff cf       	rjmp	.-2      	; 0x1282 <__stop_program>
