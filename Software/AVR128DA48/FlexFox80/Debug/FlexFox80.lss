
FlexFox80.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000040e  00804000  0000f8a2  0000f956  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000f8a2  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000004a9  0080440e  0080440e  0000fd64  2**0
                  ALLOC
  3 .eeprom       00000117  00810000  00810000  0000fd64  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .comment      0000005c  00000000  00000000  0000fe7b  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000fed8  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 00000d70  00000000  00000000  0000ff18  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0001073f  00000000  00000000  00010c88  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000059f3  00000000  00000000  000213c7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000be48  00000000  00000000  00026dba  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000031a8  00000000  00000000  00032c04  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00006fd6  00000000  00000000  00035dac  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00006822  00000000  00000000  0003cd82  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000d90  00000000  00000000  000435a4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 87 02 	jmp	0x50e	; 0x50e <__dtors_end>
       4:	0c 94 b1 02 	jmp	0x562	; 0x562 <__bad_interrupt>
       8:	0c 94 b1 02 	jmp	0x562	; 0x562 <__bad_interrupt>
       c:	0c 94 b1 02 	jmp	0x562	; 0x562 <__bad_interrupt>
      10:	0c 94 b1 02 	jmp	0x562	; 0x562 <__bad_interrupt>
      14:	0c 94 b1 02 	jmp	0x562	; 0x562 <__bad_interrupt>
      18:	0c 94 0e 0b 	jmp	0x161c	; 0x161c <__vector_6>
      1c:	0c 94 b1 02 	jmp	0x562	; 0x562 <__bad_interrupt>
      20:	0c 94 b1 02 	jmp	0x562	; 0x562 <__bad_interrupt>
      24:	0c 94 b1 02 	jmp	0x562	; 0x562 <__bad_interrupt>
      28:	0c 94 b1 02 	jmp	0x562	; 0x562 <__bad_interrupt>
      2c:	0c 94 b1 02 	jmp	0x562	; 0x562 <__bad_interrupt>
      30:	0c 94 50 10 	jmp	0x20a0	; 0x20a0 <__vector_12>
      34:	0c 94 88 6b 	jmp	0xd710	; 0xd710 <__vector_13>
      38:	0c 94 b1 02 	jmp	0x562	; 0x562 <__bad_interrupt>
      3c:	0c 94 b1 02 	jmp	0x562	; 0x562 <__bad_interrupt>
      40:	0c 94 b1 02 	jmp	0x562	; 0x562 <__bad_interrupt>
      44:	0c 94 b1 02 	jmp	0x562	; 0x562 <__bad_interrupt>
      48:	0c 94 b1 02 	jmp	0x562	; 0x562 <__bad_interrupt>
      4c:	0c 94 19 03 	jmp	0x632	; 0x632 <__vector_19>
      50:	0c 94 26 06 	jmp	0xc4c	; 0xc4c <__vector_20>
      54:	0c 94 b1 02 	jmp	0x562	; 0x562 <__bad_interrupt>
      58:	0c 94 f2 0f 	jmp	0x1fe4	; 0x1fe4 <__vector_22>
      5c:	0c 94 b1 02 	jmp	0x562	; 0x562 <__bad_interrupt>
      60:	0c 94 13 2c 	jmp	0x5826	; 0x5826 <__vector_24>
      64:	0c 94 b1 02 	jmp	0x562	; 0x562 <__bad_interrupt>
      68:	0c 94 b1 02 	jmp	0x562	; 0x562 <__bad_interrupt>
      6c:	0c 94 b1 02 	jmp	0x562	; 0x562 <__bad_interrupt>
      70:	0c 94 b1 02 	jmp	0x562	; 0x562 <__bad_interrupt>
      74:	0c 94 a5 13 	jmp	0x274a	; 0x274a <__vector_29>
      78:	0c 94 19 6b 	jmp	0xd632	; 0xd632 <__vector_30>
      7c:	0c 94 b0 07 	jmp	0xf60	; 0xf60 <__vector_31>
      80:	0c 94 78 09 	jmp	0x12f0	; 0x12f0 <__vector_32>
      84:	0c 94 b1 02 	jmp	0x562	; 0x562 <__bad_interrupt>
      88:	0c 94 b1 02 	jmp	0x562	; 0x562 <__bad_interrupt>
      8c:	0c 94 b1 02 	jmp	0x562	; 0x562 <__bad_interrupt>
      90:	0c 94 b1 02 	jmp	0x562	; 0x562 <__bad_interrupt>
      94:	0c 94 b1 02 	jmp	0x562	; 0x562 <__bad_interrupt>
      98:	0c 94 b1 02 	jmp	0x562	; 0x562 <__bad_interrupt>
      9c:	0c 94 b1 02 	jmp	0x562	; 0x562 <__bad_interrupt>
      a0:	0c 94 b1 02 	jmp	0x562	; 0x562 <__bad_interrupt>
      a4:	0c 94 cd 4c 	jmp	0x999a	; 0x999a <__vector_41>
      a8:	0c 94 b1 02 	jmp	0x562	; 0x562 <__bad_interrupt>
      ac:	0c 94 b1 02 	jmp	0x562	; 0x562 <__bad_interrupt>
      b0:	0c 94 b1 02 	jmp	0x562	; 0x562 <__bad_interrupt>
      b4:	0c 94 b1 02 	jmp	0x562	; 0x562 <__bad_interrupt>
      b8:	0c 94 b1 02 	jmp	0x562	; 0x562 <__bad_interrupt>
      bc:	0c 94 b1 02 	jmp	0x562	; 0x562 <__bad_interrupt>
      c0:	0c 94 b1 02 	jmp	0x562	; 0x562 <__bad_interrupt>
      c4:	0c 94 b1 02 	jmp	0x562	; 0x562 <__bad_interrupt>
      c8:	0c 94 b1 02 	jmp	0x562	; 0x562 <__bad_interrupt>
      cc:	0c 94 b1 02 	jmp	0x562	; 0x562 <__bad_interrupt>
      d0:	0c 94 b1 02 	jmp	0x562	; 0x562 <__bad_interrupt>
      d4:	0c 94 b1 02 	jmp	0x562	; 0x562 <__bad_interrupt>
      d8:	0c 94 b1 02 	jmp	0x562	; 0x562 <__bad_interrupt>
      dc:	0c 94 5d 03 	jmp	0x6ba	; 0x6ba <__vector_55>
      e0:	0c 94 eb 06 	jmp	0xdd6	; 0xdd6 <__vector_56>
      e4:	0c 94 b1 02 	jmp	0x562	; 0x562 <__bad_interrupt>
      e8:	ed 24       	eor	r14, r13
      ea:	01 25       	eor	r16, r1
      ec:	17 25       	eor	r17, r7
      ee:	2d 25       	eor	r18, r13
      f0:	43 25       	eor	r20, r3
      f2:	e3 26       	eor	r14, r19
      f4:	d8 26       	eor	r13, r24
      f6:	73 25       	eor	r23, r3
      f8:	83 25       	eor	r24, r3
      fa:	95 25       	eor	r25, r5
      fc:	a7 25       	eor	r26, r7
      fe:	b9 25       	eor	r27, r9
     100:	e8 25       	eor	r30, r8
     102:	f8 25       	eor	r31, r8
     104:	0a 26       	eor	r0, r26
     106:	1c 26       	eor	r1, r28
     108:	2e 26       	eor	r2, r30
     10a:	5d 26       	eor	r5, r29
     10c:	86 26       	eor	r8, r22
     10e:	af 26       	eor	r10, r31
     110:	2b 3d       	cpi	r18, 0xDB	; 219
     112:	4c 3e       	cpi	r20, 0xEC	; 236
     114:	4c 3e       	cpi	r20, 0xEC	; 236
     116:	4c 3e       	cpi	r20, 0xEC	; 236
     118:	4c 3e       	cpi	r20, 0xEC	; 236
     11a:	4c 3e       	cpi	r20, 0xEC	; 236
     11c:	5f 3c       	cpi	r21, 0xCF	; 207
     11e:	4c 3e       	cpi	r20, 0xEC	; 236
     120:	4c 3e       	cpi	r20, 0xEC	; 236
     122:	4c 3e       	cpi	r20, 0xEC	; 236
     124:	4c 3e       	cpi	r20, 0xEC	; 236
     126:	4c 3e       	cpi	r20, 0xEC	; 236
     128:	4c 3e       	cpi	r20, 0xEC	; 236
     12a:	4c 3e       	cpi	r20, 0xEC	; 236
     12c:	80 3c       	cpi	r24, 0xC0	; 192
     12e:	4c 3e       	cpi	r20, 0xEC	; 236
     130:	4c 3e       	cpi	r20, 0xEC	; 236
     132:	4c 3e       	cpi	r20, 0xEC	; 236
     134:	4c 3e       	cpi	r20, 0xEC	; 236
     136:	4c 3e       	cpi	r20, 0xEC	; 236
     138:	4c 3e       	cpi	r20, 0xEC	; 236
     13a:	4c 3e       	cpi	r20, 0xEC	; 236
     13c:	c7 3a       	cpi	r28, 0xA7	; 167
     13e:	4c 3e       	cpi	r20, 0xEC	; 236
     140:	4c 3e       	cpi	r20, 0xEC	; 236
     142:	4c 3e       	cpi	r20, 0xEC	; 236
     144:	4c 3e       	cpi	r20, 0xEC	; 236
     146:	4c 3e       	cpi	r20, 0xEC	; 236
     148:	4c 3e       	cpi	r20, 0xEC	; 236
     14a:	4c 3e       	cpi	r20, 0xEC	; 236
     14c:	4c 3e       	cpi	r20, 0xEC	; 236
     14e:	4c 3e       	cpi	r20, 0xEC	; 236
     150:	4c 3e       	cpi	r20, 0xEC	; 236
     152:	4c 3e       	cpi	r20, 0xEC	; 236
     154:	4c 3e       	cpi	r20, 0xEC	; 236
     156:	4c 3e       	cpi	r20, 0xEC	; 236
     158:	4c 3e       	cpi	r20, 0xEC	; 236
     15a:	4c 3e       	cpi	r20, 0xEC	; 236
     15c:	4c 3e       	cpi	r20, 0xEC	; 236
     15e:	4c 3e       	cpi	r20, 0xEC	; 236
     160:	4c 3e       	cpi	r20, 0xEC	; 236
     162:	4c 3e       	cpi	r20, 0xEC	; 236
     164:	4c 3e       	cpi	r20, 0xEC	; 236
     166:	4c 3e       	cpi	r20, 0xEC	; 236
     168:	4c 3e       	cpi	r20, 0xEC	; 236
     16a:	4c 3e       	cpi	r20, 0xEC	; 236
     16c:	4c 3e       	cpi	r20, 0xEC	; 236
     16e:	0b 3b       	cpi	r16, 0xBB	; 187
     170:	4c 3e       	cpi	r20, 0xEC	; 236
     172:	4c 3e       	cpi	r20, 0xEC	; 236
     174:	4c 3e       	cpi	r20, 0xEC	; 236
     176:	4c 3e       	cpi	r20, 0xEC	; 236
     178:	4c 3e       	cpi	r20, 0xEC	; 236
     17a:	4c 3e       	cpi	r20, 0xEC	; 236
     17c:	4c 3e       	cpi	r20, 0xEC	; 236
     17e:	4c 3e       	cpi	r20, 0xEC	; 236
     180:	4c 3e       	cpi	r20, 0xEC	; 236
     182:	4c 3e       	cpi	r20, 0xEC	; 236
     184:	4c 3e       	cpi	r20, 0xEC	; 236
     186:	4c 3e       	cpi	r20, 0xEC	; 236
     188:	4c 3e       	cpi	r20, 0xEC	; 236
     18a:	4c 3e       	cpi	r20, 0xEC	; 236
     18c:	4c 3e       	cpi	r20, 0xEC	; 236
     18e:	4c 3e       	cpi	r20, 0xEC	; 236
     190:	4c 3e       	cpi	r20, 0xEC	; 236
     192:	4c 3e       	cpi	r20, 0xEC	; 236
     194:	4c 3e       	cpi	r20, 0xEC	; 236
     196:	4c 3e       	cpi	r20, 0xEC	; 236
     198:	4c 3e       	cpi	r20, 0xEC	; 236
     19a:	4c 3e       	cpi	r20, 0xEC	; 236
     19c:	4c 3e       	cpi	r20, 0xEC	; 236
     19e:	4c 3e       	cpi	r20, 0xEC	; 236
     1a0:	4f 3b       	cpi	r20, 0xBF	; 191
     1a2:	4c 3e       	cpi	r20, 0xEC	; 236
     1a4:	4c 3e       	cpi	r20, 0xEC	; 236
     1a6:	4c 3e       	cpi	r20, 0xEC	; 236
     1a8:	4c 3e       	cpi	r20, 0xEC	; 236
     1aa:	4c 3e       	cpi	r20, 0xEC	; 236
     1ac:	4c 3e       	cpi	r20, 0xEC	; 236
     1ae:	4c 3e       	cpi	r20, 0xEC	; 236
     1b0:	4c 3e       	cpi	r20, 0xEC	; 236
     1b2:	4c 3e       	cpi	r20, 0xEC	; 236
     1b4:	4c 3e       	cpi	r20, 0xEC	; 236
     1b6:	4c 3e       	cpi	r20, 0xEC	; 236
     1b8:	4c 3e       	cpi	r20, 0xEC	; 236
     1ba:	93 3b       	cpi	r25, 0xB3	; 179
     1bc:	4c 3e       	cpi	r20, 0xEC	; 236
     1be:	4c 3e       	cpi	r20, 0xEC	; 236
     1c0:	4c 3e       	cpi	r20, 0xEC	; 236
     1c2:	4c 3e       	cpi	r20, 0xEC	; 236
     1c4:	a8 3b       	cpi	r26, 0xB8	; 184
     1c6:	4c 3e       	cpi	r20, 0xEC	; 236
     1c8:	4c 3e       	cpi	r20, 0xEC	; 236
     1ca:	4c 3e       	cpi	r20, 0xEC	; 236
     1cc:	4c 3e       	cpi	r20, 0xEC	; 236
     1ce:	a1 3c       	cpi	r26, 0xC1	; 193
     1d0:	4c 3e       	cpi	r20, 0xEC	; 236
     1d2:	4c 3e       	cpi	r20, 0xEC	; 236
     1d4:	4c 3e       	cpi	r20, 0xEC	; 236
     1d6:	4c 3e       	cpi	r20, 0xEC	; 236
     1d8:	6d 3a       	cpi	r22, 0xAD	; 173
     1da:	4c 3e       	cpi	r20, 0xEC	; 236
     1dc:	4c 3e       	cpi	r20, 0xEC	; 236
     1de:	4c 3e       	cpi	r20, 0xEC	; 236
     1e0:	4c 3e       	cpi	r20, 0xEC	; 236
     1e2:	4c 3e       	cpi	r20, 0xEC	; 236
     1e4:	4c 3e       	cpi	r20, 0xEC	; 236
     1e6:	4c 3e       	cpi	r20, 0xEC	; 236
     1e8:	8e 3a       	cpi	r24, 0xAE	; 174
     1ea:	4c 3e       	cpi	r20, 0xEC	; 236
     1ec:	4c 3e       	cpi	r20, 0xEC	; 236
     1ee:	4c 3e       	cpi	r20, 0xEC	; 236
     1f0:	4c 3e       	cpi	r20, 0xEC	; 236
     1f2:	4c 3e       	cpi	r20, 0xEC	; 236
     1f4:	4c 3e       	cpi	r20, 0xEC	; 236
     1f6:	4c 3e       	cpi	r20, 0xEC	; 236
     1f8:	af 3a       	cpi	r26, 0xAF	; 175
     1fa:	4c 3e       	cpi	r20, 0xEC	; 236
     1fc:	4c 3e       	cpi	r20, 0xEC	; 236
     1fe:	4c 3e       	cpi	r20, 0xEC	; 236
     200:	4c 3e       	cpi	r20, 0xEC	; 236
     202:	4c 3e       	cpi	r20, 0xEC	; 236
     204:	b6 3c       	cpi	r27, 0xC6	; 198
     206:	4c 3e       	cpi	r20, 0xEC	; 236
     208:	4c 3e       	cpi	r20, 0xEC	; 236
     20a:	4c 3e       	cpi	r20, 0xEC	; 236
     20c:	4c 3e       	cpi	r20, 0xEC	; 236
     20e:	cb 3c       	cpi	r28, 0xCB	; 203
     210:	4c 3e       	cpi	r20, 0xEC	; 236
     212:	4c 3e       	cpi	r20, 0xEC	; 236
     214:	4c 3e       	cpi	r20, 0xEC	; 236
     216:	4c 3e       	cpi	r20, 0xEC	; 236
     218:	4c 3e       	cpi	r20, 0xEC	; 236
     21a:	e3 3c       	cpi	r30, 0xC3	; 195
     21c:	4c 3e       	cpi	r20, 0xEC	; 236
     21e:	4c 3e       	cpi	r20, 0xEC	; 236
     220:	4c 3e       	cpi	r20, 0xEC	; 236
     222:	4c 3e       	cpi	r20, 0xEC	; 236
     224:	4c 3e       	cpi	r20, 0xEC	; 236
     226:	fb 3c       	cpi	r31, 0xCB	; 203
     228:	4c 3e       	cpi	r20, 0xEC	; 236
     22a:	4c 3e       	cpi	r20, 0xEC	; 236
     22c:	4c 3e       	cpi	r20, 0xEC	; 236
     22e:	4c 3e       	cpi	r20, 0xEC	; 236
     230:	4c 3e       	cpi	r20, 0xEC	; 236
     232:	13 3d       	cpi	r17, 0xD3	; 211
     234:	4c 3e       	cpi	r20, 0xEC	; 236
     236:	4c 3e       	cpi	r20, 0xEC	; 236
     238:	4c 3e       	cpi	r20, 0xEC	; 236
     23a:	4c 3e       	cpi	r20, 0xEC	; 236
     23c:	4c 3e       	cpi	r20, 0xEC	; 236
     23e:	d2 3b       	cpi	r29, 0xB2	; 178
     240:	4c 3e       	cpi	r20, 0xEC	; 236
     242:	4c 3e       	cpi	r20, 0xEC	; 236
     244:	4c 3e       	cpi	r20, 0xEC	; 236
     246:	4c 3e       	cpi	r20, 0xEC	; 236
     248:	e7 3b       	cpi	r30, 0xB7	; 183
     24a:	4c 3e       	cpi	r20, 0xEC	; 236
     24c:	4c 3e       	cpi	r20, 0xEC	; 236
     24e:	4c 3e       	cpi	r20, 0xEC	; 236
     250:	4c 3e       	cpi	r20, 0xEC	; 236
     252:	4c 3e       	cpi	r20, 0xEC	; 236
     254:	4c 3e       	cpi	r20, 0xEC	; 236
     256:	4c 3e       	cpi	r20, 0xEC	; 236
     258:	08 3c       	cpi	r16, 0xC8	; 200
     25a:	4c 3e       	cpi	r20, 0xEC	; 236
     25c:	4c 3e       	cpi	r20, 0xEC	; 236
     25e:	4c 3e       	cpi	r20, 0xEC	; 236
     260:	4c 3e       	cpi	r20, 0xEC	; 236
     262:	4c 3e       	cpi	r20, 0xEC	; 236
     264:	4c 3e       	cpi	r20, 0xEC	; 236
     266:	4c 3e       	cpi	r20, 0xEC	; 236
     268:	29 3c       	cpi	r18, 0xC9	; 201
     26a:	4c 3e       	cpi	r20, 0xEC	; 236
     26c:	4c 3e       	cpi	r20, 0xEC	; 236
     26e:	4c 3e       	cpi	r20, 0xEC	; 236
     270:	4c 3e       	cpi	r20, 0xEC	; 236
     272:	4c 3e       	cpi	r20, 0xEC	; 236
     274:	4c 3e       	cpi	r20, 0xEC	; 236
     276:	4c 3e       	cpi	r20, 0xEC	; 236
     278:	4a 3c       	cpi	r20, 0xCA	; 202
     27a:	4c 3e       	cpi	r20, 0xEC	; 236
     27c:	4c 3e       	cpi	r20, 0xEC	; 236
     27e:	4c 3e       	cpi	r20, 0xEC	; 236
     280:	4c 3e       	cpi	r20, 0xEC	; 236
     282:	bd 3b       	cpi	r27, 0xBD	; 189
     284:	4c 3e       	cpi	r20, 0xEC	; 236
     286:	4c 3e       	cpi	r20, 0xEC	; 236
     288:	4c 3e       	cpi	r20, 0xEC	; 236
     28a:	4c 3e       	cpi	r20, 0xEC	; 236
     28c:	43 3d       	cpi	r20, 0xD3	; 211
     28e:	4c 3e       	cpi	r20, 0xEC	; 236
     290:	4c 3e       	cpi	r20, 0xEC	; 236
     292:	4c 3e       	cpi	r20, 0xEC	; 236
     294:	4c 3e       	cpi	r20, 0xEC	; 236
     296:	4c 3e       	cpi	r20, 0xEC	; 236
     298:	4c 3e       	cpi	r20, 0xEC	; 236
     29a:	4c 3e       	cpi	r20, 0xEC	; 236
     29c:	4c 3e       	cpi	r20, 0xEC	; 236
     29e:	4c 3e       	cpi	r20, 0xEC	; 236
     2a0:	4c 3e       	cpi	r20, 0xEC	; 236
     2a2:	4c 3e       	cpi	r20, 0xEC	; 236
     2a4:	4c 3e       	cpi	r20, 0xEC	; 236
     2a6:	4c 3e       	cpi	r20, 0xEC	; 236
     2a8:	4c 3e       	cpi	r20, 0xEC	; 236
     2aa:	4c 3e       	cpi	r20, 0xEC	; 236
     2ac:	4c 3e       	cpi	r20, 0xEC	; 236
     2ae:	4c 3e       	cpi	r20, 0xEC	; 236
     2b0:	4c 3e       	cpi	r20, 0xEC	; 236
     2b2:	4c 3e       	cpi	r20, 0xEC	; 236
     2b4:	4c 3e       	cpi	r20, 0xEC	; 236
     2b6:	4c 3e       	cpi	r20, 0xEC	; 236
     2b8:	4c 3e       	cpi	r20, 0xEC	; 236
     2ba:	4c 3e       	cpi	r20, 0xEC	; 236
     2bc:	4c 3e       	cpi	r20, 0xEC	; 236
     2be:	87 3d       	cpi	r24, 0xD7	; 215
     2c0:	4c 3e       	cpi	r20, 0xEC	; 236
     2c2:	4c 3e       	cpi	r20, 0xEC	; 236
     2c4:	4c 3e       	cpi	r20, 0xEC	; 236
     2c6:	4c 3e       	cpi	r20, 0xEC	; 236
     2c8:	4c 3e       	cpi	r20, 0xEC	; 236
     2ca:	4c 3e       	cpi	r20, 0xEC	; 236
     2cc:	4c 3e       	cpi	r20, 0xEC	; 236
     2ce:	4c 3e       	cpi	r20, 0xEC	; 236
     2d0:	4c 3e       	cpi	r20, 0xEC	; 236
     2d2:	4c 3e       	cpi	r20, 0xEC	; 236
     2d4:	4c 3e       	cpi	r20, 0xEC	; 236
     2d6:	4c 3e       	cpi	r20, 0xEC	; 236
     2d8:	4c 3e       	cpi	r20, 0xEC	; 236
     2da:	4c 3e       	cpi	r20, 0xEC	; 236
     2dc:	4c 3e       	cpi	r20, 0xEC	; 236
     2de:	4c 3e       	cpi	r20, 0xEC	; 236
     2e0:	4c 3e       	cpi	r20, 0xEC	; 236
     2e2:	4c 3e       	cpi	r20, 0xEC	; 236
     2e4:	4c 3e       	cpi	r20, 0xEC	; 236
     2e6:	4c 3e       	cpi	r20, 0xEC	; 236
     2e8:	4c 3e       	cpi	r20, 0xEC	; 236
     2ea:	4c 3e       	cpi	r20, 0xEC	; 236
     2ec:	4c 3e       	cpi	r20, 0xEC	; 236
     2ee:	4c 3e       	cpi	r20, 0xEC	; 236
     2f0:	cb 3d       	cpi	r28, 0xDB	; 219
     2f2:	4c 3e       	cpi	r20, 0xEC	; 236
     2f4:	4c 3e       	cpi	r20, 0xEC	; 236
     2f6:	4c 3e       	cpi	r20, 0xEC	; 236
     2f8:	4c 3e       	cpi	r20, 0xEC	; 236
     2fa:	4c 3e       	cpi	r20, 0xEC	; 236
     2fc:	4c 3e       	cpi	r20, 0xEC	; 236
     2fe:	4c 3e       	cpi	r20, 0xEC	; 236
     300:	4c 3e       	cpi	r20, 0xEC	; 236
     302:	4c 3e       	cpi	r20, 0xEC	; 236
     304:	4c 3e       	cpi	r20, 0xEC	; 236
     306:	4c 3e       	cpi	r20, 0xEC	; 236
     308:	4c 3e       	cpi	r20, 0xEC	; 236
     30a:	4c 3e       	cpi	r20, 0xEC	; 236
     30c:	4c 3e       	cpi	r20, 0xEC	; 236
     30e:	4c 3e       	cpi	r20, 0xEC	; 236
     310:	4c 3e       	cpi	r20, 0xEC	; 236
     312:	4c 3e       	cpi	r20, 0xEC	; 236
     314:	4c 3e       	cpi	r20, 0xEC	; 236
     316:	4c 3e       	cpi	r20, 0xEC	; 236
     318:	4c 3e       	cpi	r20, 0xEC	; 236
     31a:	4c 3e       	cpi	r20, 0xEC	; 236
     31c:	4c 3e       	cpi	r20, 0xEC	; 236
     31e:	4c 3e       	cpi	r20, 0xEC	; 236
     320:	4c 3e       	cpi	r20, 0xEC	; 236
     322:	0f 3e       	cpi	r16, 0xEF	; 239
     324:	4c 3e       	cpi	r20, 0xEC	; 236
     326:	4c 3e       	cpi	r20, 0xEC	; 236
     328:	4c 3e       	cpi	r20, 0xEC	; 236
     32a:	4c 3e       	cpi	r20, 0xEC	; 236
     32c:	4c 3e       	cpi	r20, 0xEC	; 236
     32e:	4c 3e       	cpi	r20, 0xEC	; 236
     330:	4c 3e       	cpi	r20, 0xEC	; 236
     332:	33 3e       	cpi	r19, 0xE3	; 227
     334:	00 50       	subi	r16, 0x00	; 0
     336:	17 50       	subi	r17, 0x07	; 7
     338:	2d 50       	subi	r18, 0x0D	; 13
     33a:	43 50       	subi	r20, 0x03	; 3
     33c:	8f 50       	subi	r24, 0x0F	; 15
     33e:	69 50       	subi	r22, 0x09	; 9
     340:	b5 50       	subi	r27, 0x05	; 5
     342:	f5 51       	subi	r31, 0x15	; 21
     344:	19 52       	subi	r17, 0x29	; 41
     346:	b0 51       	subi	r27, 0x10	; 16
     348:	6b 51       	subi	r22, 0x1B	; 27
     34a:	23 51       	subi	r18, 0x13	; 19
     34c:	db 50       	subi	r29, 0x0B	; 11
     34e:	fd 5a       	subi	r31, 0xAD	; 173
     350:	8d 5a       	subi	r24, 0xAD	; 173
     352:	e1 5a       	subi	r30, 0xA1	; 161
     354:	0b 5b       	subi	r16, 0xBB	; 187
     356:	e8 5a       	subi	r30, 0xA8	; 168
     358:	0b 5b       	subi	r16, 0xBB	; 187
     35a:	a9 5a       	subi	r26, 0xA9	; 169
     35c:	86 5a       	subi	r24, 0xA6	; 166
     35e:	9b 5a       	subi	r25, 0xAB	; 171
     360:	a2 5a       	subi	r26, 0xA2	; 162
     362:	0b 5b       	subi	r16, 0xBB	; 187
     364:	c5 5a       	subi	r28, 0xA5	; 165
     366:	78 5a       	subi	r23, 0xA8	; 168
     368:	d3 5a       	subi	r29, 0xA3	; 163
     36a:	71 5a       	subi	r23, 0xA1	; 161
     36c:	94 5a       	subi	r25, 0xA4	; 164
     36e:	2c 5a       	subi	r18, 0xAC	; 172
     370:	33 5a       	subi	r19, 0xA3	; 163
     372:	3a 5a       	subi	r19, 0xAA	; 170
     374:	41 5a       	subi	r20, 0xA1	; 161
     376:	48 5a       	subi	r20, 0xA8	; 168
     378:	4f 5a       	subi	r20, 0xAF	; 175
     37a:	55 5a       	subi	r21, 0xA5	; 165
     37c:	5c 5a       	subi	r21, 0xAC	; 172
     37e:	63 5a       	subi	r22, 0xA3	; 163
     380:	6a 5a       	subi	r22, 0xAA	; 170
     382:	b0 5a       	subi	r27, 0xA0	; 160
     384:	b7 5a       	subi	r27, 0xA7	; 167
     386:	04 5b       	subi	r16, 0xB4	; 180
     388:	be 5a       	subi	r27, 0xAE	; 174
     38a:	0b 5b       	subi	r16, 0xBB	; 187
     38c:	7f 5a       	subi	r23, 0xAF	; 175
     38e:	ef 5a       	subi	r30, 0xAF	; 175
     390:	7a 59       	subi	r23, 0x9A	; 154
     392:	81 59       	subi	r24, 0x91	; 145
     394:	88 59       	subi	r24, 0x98	; 152
     396:	8f 59       	subi	r24, 0x9F	; 159
     398:	96 59       	subi	r25, 0x96	; 150
     39a:	9c 59       	subi	r25, 0x9C	; 156
     39c:	a3 59       	subi	r26, 0x93	; 147
     39e:	aa 59       	subi	r26, 0x9A	; 154
     3a0:	b0 59       	subi	r27, 0x90	; 144
     3a2:	b6 59       	subi	r27, 0x96	; 150
     3a4:	bd 59       	subi	r27, 0x9D	; 157
     3a6:	c4 59       	subi	r28, 0x94	; 148
     3a8:	cb 59       	subi	r28, 0x9B	; 155
     3aa:	d2 59       	subi	r29, 0x92	; 146
     3ac:	d9 59       	subi	r29, 0x99	; 153
     3ae:	e0 59       	subi	r30, 0x90	; 144
     3b0:	e7 59       	subi	r30, 0x97	; 151
     3b2:	ee 59       	subi	r30, 0x9E	; 158
     3b4:	f5 59       	subi	r31, 0x95	; 149
     3b6:	fb 59       	subi	r31, 0x9B	; 155
     3b8:	02 5a       	subi	r16, 0xA2	; 162
     3ba:	09 5a       	subi	r16, 0xA9	; 169
     3bc:	10 5a       	subi	r17, 0xA0	; 160
     3be:	17 5a       	subi	r17, 0xA7	; 167
     3c0:	1e 5a       	subi	r17, 0xAE	; 174
     3c2:	25 5a       	subi	r18, 0xA5	; 165
     3c4:	0b 5b       	subi	r16, 0xBB	; 187
     3c6:	0b 5b       	subi	r16, 0xBB	; 187
     3c8:	0b 5b       	subi	r16, 0xBB	; 187
     3ca:	0b 5b       	subi	r16, 0xBB	; 187
     3cc:	da 5a       	subi	r29, 0xAA	; 170
     3ce:	0b 5b       	subi	r16, 0xBB	; 187
     3d0:	0b 5b       	subi	r16, 0xBB	; 187
     3d2:	0b 5b       	subi	r16, 0xBB	; 187
     3d4:	0b 5b       	subi	r16, 0xBB	; 187
     3d6:	0b 5b       	subi	r16, 0xBB	; 187
     3d8:	0b 5b       	subi	r16, 0xBB	; 187
     3da:	0b 5b       	subi	r16, 0xBB	; 187
     3dc:	0b 5b       	subi	r16, 0xBB	; 187
     3de:	0b 5b       	subi	r16, 0xBB	; 187
     3e0:	0b 5b       	subi	r16, 0xBB	; 187
     3e2:	0b 5b       	subi	r16, 0xBB	; 187
     3e4:	0b 5b       	subi	r16, 0xBB	; 187
     3e6:	0b 5b       	subi	r16, 0xBB	; 187
     3e8:	0b 5b       	subi	r16, 0xBB	; 187
     3ea:	0b 5b       	subi	r16, 0xBB	; 187
     3ec:	0b 5b       	subi	r16, 0xBB	; 187
     3ee:	0b 5b       	subi	r16, 0xBB	; 187
     3f0:	0b 5b       	subi	r16, 0xBB	; 187
     3f2:	0b 5b       	subi	r16, 0xBB	; 187
     3f4:	0b 5b       	subi	r16, 0xBB	; 187
     3f6:	0b 5b       	subi	r16, 0xBB	; 187
     3f8:	0b 5b       	subi	r16, 0xBB	; 187
     3fa:	0b 5b       	subi	r16, 0xBB	; 187
     3fc:	0b 5b       	subi	r16, 0xBB	; 187
     3fe:	0b 5b       	subi	r16, 0xBB	; 187
     400:	0b 5b       	subi	r16, 0xBB	; 187
     402:	0b 5b       	subi	r16, 0xBB	; 187
     404:	0b 5b       	subi	r16, 0xBB	; 187
     406:	f6 5a       	subi	r31, 0xA6	; 166
     408:	0b 5b       	subi	r16, 0xBB	; 187
     40a:	cc 5a       	subi	r28, 0xAC	; 172

0000040c <__trampolines_end>:
     40c:	00 40       	sbci	r16, 0x00	; 0
     40e:	7a 10       	cpse	r7, r10
     410:	f3 5a       	subi	r31, 0xA3	; 163
     412:	00 a0       	ldd	r0, Z+32	; 0x20
     414:	72 4e       	sbci	r23, 0xE2	; 226
     416:	18 09       	sbc	r17, r8
     418:	00 10       	cpse	r0, r0
     41a:	a5 d4       	rcall	.+2378   	; 0xd66 <__vector_20+0x11a>
     41c:	e8 00       	.word	0x00e8	; ????
     41e:	00 e8       	ldi	r16, 0x80	; 128
     420:	76 48       	sbci	r23, 0x86	; 134
     422:	17 00       	.word	0x0017	; ????
     424:	00 e4       	ldi	r16, 0x40	; 64
     426:	0b 54       	subi	r16, 0x4B	; 75
     428:	02 00       	.word	0x0002	; ????
     42a:	00 ca       	rjmp	.-3072   	; 0xfffff82c <__eeprom_end+0xff7ef715>
     42c:	9a 3b       	cpi	r25, 0xBA	; 186
     42e:	00 00       	nop
     430:	00 e1       	ldi	r16, 0x10	; 16
     432:	f5 05       	cpc	r31, r5
     434:	00 00       	nop
     436:	80 96       	adiw	r24, 0x20	; 32
     438:	98 00       	.word	0x0098	; ????
     43a:	00 00       	nop
     43c:	40 42       	sbci	r20, 0x20	; 32
     43e:	0f 00       	.word	0x000f	; ????
     440:	00 00       	nop
     442:	a0 86       	std	Z+8, r10	; 0x08
     444:	01 00       	.word	0x0001	; ????
     446:	00 00       	nop
     448:	10 27       	eor	r17, r16
     44a:	00 00       	nop
     44c:	00 00       	nop
     44e:	e8 03       	fmulsu	r22, r16
     450:	00 00       	nop
     452:	00 00       	nop
     454:	64 00       	.word	0x0064	; ????
     456:	00 00       	nop
     458:	00 00       	nop
     45a:	0a 00       	.word	0x000a	; ????
     45c:	00 00       	nop
     45e:	00 00       	nop
     460:	01 00       	.word	0x0001	; ????
     462:	00 00       	nop
     464:	00 00       	nop
     466:	2c 76       	andi	r18, 0x6C	; 108
     468:	d8 88       	ldd	r13, Y+16	; 0x10
     46a:	dc 67       	ori	r29, 0x7C	; 124
     46c:	4f 08       	sbc	r4, r15
     46e:	23 df       	rcall	.-442    	; 0x2b6 <__EEPROM_REGION_LENGTH__+0xb6>
     470:	c1 df       	rcall	.-126    	; 0x3f4 <__EEPROM_REGION_LENGTH__+0x1f4>
     472:	ae 59       	subi	r26, 0x9E	; 158
     474:	e1 b1       	in	r30, 0x01	; 1
     476:	b7 96       	adiw	r30, 0x27	; 39
     478:	e5 e3       	ldi	r30, 0x35	; 53
     47a:	e4 53       	subi	r30, 0x34	; 52
     47c:	c6 3a       	cpi	r28, 0xA6	; 166
     47e:	e6 51       	subi	r30, 0x16	; 22
     480:	99 76       	andi	r25, 0x69	; 105
     482:	96 e8       	ldi	r25, 0x86	; 134
     484:	e6 c2       	rjmp	.+1484   	; 0xa52 <_Z9serial_Rxh+0x310>
     486:	84 26       	eor	r8, r20
     488:	eb 89       	ldd	r30, Y+19	; 0x13
     48a:	8c 9b       	sbis	0x11, 4	; 17
     48c:	62 ed       	ldi	r22, 0xD2	; 210
     48e:	40 7c       	andi	r20, 0xC0	; 192
     490:	6f fc       	.word	0xfc6f	; ????
     492:	ef bc       	out	0x2f, r14	; 47
     494:	9c 9f       	mul	r25, r28
     496:	40 f2       	brcs	.-112    	; 0x428 <__trampolines_end+0x1c>
     498:	ba a5       	ldd	r27, Y+42	; 0x2a
     49a:	6f a5       	ldd	r22, Y+47	; 0x2f
     49c:	f4 90       	lpm	r15, Z
     49e:	05 5a       	subi	r16, 0xA5	; 165
     4a0:	2a f7       	brpl	.-54     	; 0x46c <__trampolines_end+0x60>
     4a2:	5c 93       	st	X, r21
     4a4:	6b 6c       	ori	r22, 0xCB	; 203
     4a6:	f9 67       	ori	r31, 0x79	; 121
     4a8:	6d c1       	rjmp	.+730    	; 0x784 <_Z9serial_Rxh+0x42>
     4aa:	1b fc       	.word	0xfc1b	; ????
     4ac:	e0 e4       	ldi	r30, 0x40	; 64
     4ae:	0d 47       	sbci	r16, 0x7D	; 125
     4b0:	fe f5       	brtc	.+126    	; 0x530 <__do_copy_data+0x16>
     4b2:	20 e6       	ldi	r18, 0x60	; 96
     4b4:	b5 00       	.word	0x00b5	; ????
     4b6:	d0 ed       	ldi	r29, 0xD0	; 208
     4b8:	90 2e       	mov	r9, r16
     4ba:	03 00       	.word	0x0003	; ????
     4bc:	94 35       	cpi	r25, 0x54	; 84
     4be:	77 05       	cpc	r23, r7
     4c0:	00 80       	ld	r0, Z
     4c2:	84 1e       	adc	r8, r20
     4c4:	08 00       	.word	0x0008	; ????
     4c6:	00 20       	and	r0, r0
     4c8:	4e 0a       	sbc	r4, r30
     4ca:	00 00       	nop
     4cc:	00 c8       	rjmp	.-4096   	; 0xfffff4ce <__eeprom_end+0xff7ef3b7>
     4ce:	0c 33       	cpi	r16, 0x3C	; 60
     4d0:	33 33       	cpi	r19, 0x33	; 51
     4d2:	33 0f       	add	r19, r19
     4d4:	98 6e       	ori	r25, 0xE8	; 232
     4d6:	12 83       	std	Z+2, r17	; 0x02
     4d8:	11 41       	sbci	r17, 0x11	; 17
     4da:	ef 8d       	ldd	r30, Y+31	; 0x1f
     4dc:	21 14       	cp	r2, r1
     4de:	89 3b       	cpi	r24, 0xB9	; 185
     4e0:	e6 55       	subi	r30, 0x56	; 86
     4e2:	16 cf       	rjmp	.-468    	; 0x310 <__EEPROM_REGION_LENGTH__+0x110>
     4e4:	fe e6       	ldi	r31, 0x6E	; 110
     4e6:	db 18       	sub	r13, r11
     4e8:	d1 84       	ldd	r13, Z+9	; 0x09
     4ea:	4b 38       	cpi	r20, 0x8B	; 139
     4ec:	1b f7       	brvc	.-58     	; 0x4b4 <__trampolines_end+0xa8>
     4ee:	7c 1d       	adc	r23, r12
     4f0:	90 1d       	adc	r25, r0
     4f2:	a4 bb       	out	0x14, r26	; 20
     4f4:	e4 24       	eor	r14, r4
     4f6:	20 32       	cpi	r18, 0x20	; 32
     4f8:	84 72       	andi	r24, 0x24	; 36
     4fa:	5e 22       	and	r5, r30
     4fc:	81 00       	.word	0x0081	; ????
     4fe:	c9 f1       	breq	.+114    	; 0x572 <is_leap_year+0xc>
     500:	24 ec       	ldi	r18, 0xC4	; 196
     502:	a1 e5       	ldi	r26, 0x51	; 81
     504:	3d 27       	eor	r19, r29

00000506 <__ctors_start>:
     506:	d4 29       	or	r29, r4
     508:	8f 2c       	mov	r8, r15

0000050a <__ctors_end>:
     50a:	e1 29       	or	r30, r1
     50c:	9c 2c       	mov	r9, r12

0000050e <__dtors_end>:
     50e:	11 24       	eor	r1, r1
     510:	1f be       	out	0x3f, r1	; 63
     512:	cf ef       	ldi	r28, 0xFF	; 255
     514:	cd bf       	out	0x3d, r28	; 61
     516:	df e7       	ldi	r29, 0x7F	; 127
     518:	de bf       	out	0x3e, r29	; 62

0000051a <__do_copy_data>:
     51a:	14 e4       	ldi	r17, 0x44	; 68
     51c:	a0 e0       	ldi	r26, 0x00	; 0
     51e:	b0 e4       	ldi	r27, 0x40	; 64
     520:	e2 ea       	ldi	r30, 0xA2	; 162
     522:	f8 ef       	ldi	r31, 0xF8	; 248
     524:	00 e0       	ldi	r16, 0x00	; 0
     526:	0b bf       	out	0x3b, r16	; 59
     528:	02 c0       	rjmp	.+4      	; 0x52e <__do_copy_data+0x14>
     52a:	07 90       	elpm	r0, Z+
     52c:	0d 92       	st	X+, r0
     52e:	ae 30       	cpi	r26, 0x0E	; 14
     530:	b1 07       	cpc	r27, r17
     532:	d9 f7       	brne	.-10     	; 0x52a <__do_copy_data+0x10>

00000534 <__do_clear_bss>:
     534:	28 e4       	ldi	r18, 0x48	; 72
     536:	ae e0       	ldi	r26, 0x0E	; 14
     538:	b4 e4       	ldi	r27, 0x44	; 68
     53a:	01 c0       	rjmp	.+2      	; 0x53e <.do_clear_bss_start>

0000053c <.do_clear_bss_loop>:
     53c:	1d 92       	st	X+, r1

0000053e <.do_clear_bss_start>:
     53e:	a7 3b       	cpi	r26, 0xB7	; 183
     540:	b2 07       	cpc	r27, r18
     542:	e1 f7       	brne	.-8      	; 0x53c <.do_clear_bss_loop>

00000544 <__do_global_ctors>:
     544:	12 e0       	ldi	r17, 0x02	; 2
     546:	c5 e8       	ldi	r28, 0x85	; 133
     548:	d2 e0       	ldi	r29, 0x02	; 2
     54a:	04 c0       	rjmp	.+8      	; 0x554 <__do_global_ctors+0x10>
     54c:	21 97       	sbiw	r28, 0x01	; 1
     54e:	fe 01       	movw	r30, r28
     550:	0e 94 14 75 	call	0xea28	; 0xea28 <__tablejump2__>
     554:	c3 38       	cpi	r28, 0x83	; 131
     556:	d1 07       	cpc	r29, r17
     558:	c9 f7       	brne	.-14     	; 0x54c <__do_global_ctors+0x8>
     55a:	0e 94 90 14 	call	0x2920	; 0x2920 <main>
     55e:	0c 94 44 7c 	jmp	0xf888	; 0xf888 <__do_global_dtors>

00000562 <__bad_interrupt>:
     562:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000566 <is_leap_year>:
     566:	9c 01       	movw	r18, r24
     568:	23 70       	andi	r18, 0x03	; 3
     56a:	33 27       	eor	r19, r19
     56c:	23 2b       	or	r18, r19
     56e:	59 f4       	brne	.+22     	; 0x586 <is_leap_year+0x20>
     570:	64 e6       	ldi	r22, 0x64	; 100
     572:	70 e0       	ldi	r23, 0x00	; 0
     574:	0e 94 bf 74 	call	0xe97e	; 0xe97e <__divmodhi4>
     578:	89 2b       	or	r24, r25
     57a:	39 f4       	brne	.+14     	; 0x58a <is_leap_year+0x24>
     57c:	63 70       	andi	r22, 0x03	; 3
     57e:	77 27       	eor	r23, r23
     580:	81 e0       	ldi	r24, 0x01	; 1
     582:	67 2b       	or	r22, r23
     584:	19 f0       	breq	.+6      	; 0x58c <is_leap_year+0x26>
     586:	80 e0       	ldi	r24, 0x00	; 0
     588:	08 95       	ret
     58a:	81 e0       	ldi	r24, 0x01	; 1
     58c:	08 95       	ret

0000058e <month_length>:
     58e:	62 30       	cpi	r22, 0x02	; 2
     590:	21 f4       	brne	.+8      	; 0x59a <month_length+0xc>
     592:	0e 94 b3 02 	call	0x566	; 0x566 <is_leap_year>
     596:	84 5e       	subi	r24, 0xE4	; 228
     598:	08 95       	ret
     59a:	68 30       	cpi	r22, 0x08	; 8
     59c:	08 f0       	brcs	.+2      	; 0x5a0 <month_length+0x12>
     59e:	6f 5f       	subi	r22, 0xFF	; 255
     5a0:	61 70       	andi	r22, 0x01	; 1
     5a2:	8e e1       	ldi	r24, 0x1E	; 30
     5a4:	86 0f       	add	r24, r22
     5a6:	08 95       	ret

000005a8 <set_system_time>:
     5a8:	0f b6       	in	r0, 0x3f	; 63
     5aa:	f8 94       	cli
     5ac:	60 93 b3 48 	sts	0x48B3, r22	; 0x8048b3 <__system_time>
     5b0:	70 93 b4 48 	sts	0x48B4, r23	; 0x8048b4 <__system_time+0x1>
     5b4:	80 93 b5 48 	sts	0x48B5, r24	; 0x8048b5 <__system_time+0x2>
     5b8:	90 93 b6 48 	sts	0x48B6, r25	; 0x8048b6 <__system_time+0x3>
     5bc:	0f be       	out	0x3f, r0	; 63
     5be:	08 95       	ret

000005c0 <time>:
     5c0:	fc 01       	movw	r30, r24
     5c2:	0f b6       	in	r0, 0x3f	; 63
     5c4:	f8 94       	cli
     5c6:	60 91 b3 48 	lds	r22, 0x48B3	; 0x8048b3 <__system_time>
     5ca:	70 91 b4 48 	lds	r23, 0x48B4	; 0x8048b4 <__system_time+0x1>
     5ce:	80 91 b5 48 	lds	r24, 0x48B5	; 0x8048b5 <__system_time+0x2>
     5d2:	90 91 b6 48 	lds	r25, 0x48B6	; 0x8048b6 <__system_time+0x3>
     5d6:	0f be       	out	0x3f, r0	; 63
     5d8:	30 97       	sbiw	r30, 0x00	; 0
     5da:	21 f0       	breq	.+8      	; 0x5e4 <time+0x24>
     5dc:	60 83       	st	Z, r22
     5de:	71 83       	std	Z+1, r23	; 0x01
     5e0:	82 83       	std	Z+2, r24	; 0x02
     5e2:	93 83       	std	Z+3, r25	; 0x03
     5e4:	08 95       	ret

000005e6 <system_tick>:
     5e6:	8f 93       	push	r24
     5e8:	8f b7       	in	r24, 0x3f	; 63
     5ea:	8f 93       	push	r24
     5ec:	f8 94       	cli
     5ee:	80 91 b3 48 	lds	r24, 0x48B3	; 0x8048b3 <__system_time>
     5f2:	8f 5f       	subi	r24, 0xFF	; 255
     5f4:	80 93 b3 48 	sts	0x48B3, r24	; 0x8048b3 <__system_time>
     5f8:	80 91 b4 48 	lds	r24, 0x48B4	; 0x8048b4 <__system_time+0x1>
     5fc:	8f 4f       	sbci	r24, 0xFF	; 255
     5fe:	80 93 b4 48 	sts	0x48B4, r24	; 0x8048b4 <__system_time+0x1>
     602:	80 91 b5 48 	lds	r24, 0x48B5	; 0x8048b5 <__system_time+0x2>
     606:	8f 4f       	sbci	r24, 0xFF	; 255
     608:	80 93 b5 48 	sts	0x48B5, r24	; 0x8048b5 <__system_time+0x2>
     60c:	80 91 b6 48 	lds	r24, 0x48B6	; 0x8048b6 <__system_time+0x3>
     610:	8f 4f       	sbci	r24, 0xFF	; 255
     612:	80 93 b6 48 	sts	0x48B6, r24	; 0x8048b6 <__system_time+0x3>
     616:	8f 91       	pop	r24
     618:	8f bf       	out	0x3f, r24	; 63
     61a:	8f 91       	pop	r24
     61c:	08 95       	ret

0000061e <atmel_start_init>:

/**
 * Initializes MCU, drivers and middleware in the project
 **/
void atmel_start_init(void)
{
     61e:	cf 93       	push	r28
     620:	df 93       	push	r29
     622:	cd b7       	in	r28, 0x3d	; 61
     624:	de b7       	in	r29, 0x3e	; 62
	system_init();
     626:	0e 94 3a 35 	call	0x6a74	; 0x6a74 <system_init>
}
     62a:	00 00       	nop
     62c:	df 91       	pop	r29
     62e:	cf 91       	pop	r28
     630:	08 95       	ret

00000632 <__vector_19>:

extern USART_Number_t g_serialbus_usart_number;
extern USART_Number_t g_linkbus_usart_number;

ISR(USART0_RXC_vect)
{
     632:	1f 92       	push	r1
     634:	0f 92       	push	r0
     636:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
     63a:	0f 92       	push	r0
     63c:	11 24       	eor	r1, r1
     63e:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
     642:	0f 92       	push	r0
     644:	2f 93       	push	r18
     646:	3f 93       	push	r19
     648:	4f 93       	push	r20
     64a:	5f 93       	push	r21
     64c:	6f 93       	push	r22
     64e:	7f 93       	push	r23
     650:	8f 93       	push	r24
     652:	9f 93       	push	r25
     654:	af 93       	push	r26
     656:	bf 93       	push	r27
     658:	ef 93       	push	r30
     65a:	ff 93       	push	r31
     65c:	cf 93       	push	r28
     65e:	df 93       	push	r29
     660:	1f 92       	push	r1
     662:	cd b7       	in	r28, 0x3d	; 61
     664:	de b7       	in	r29, 0x3e	; 62
	uint8_t rx_char = USART0_get_data();
     666:	0e 94 ae 70 	call	0xe15c	; 0xe15c <USART0_get_data>
     66a:	89 83       	std	Y+1, r24	; 0x01
	
	if(g_linkbus_usart_number == USART_0)
     66c:	80 91 44 40 	lds	r24, 0x4044	; 0x804044 <g_linkbus_usart_number>
     670:	88 23       	and	r24, r24
     672:	19 f4       	brne	.+6      	; 0x67a <__vector_19+0x48>
	{
		linkbus_Rx(rx_char);
     674:	89 81       	ldd	r24, Y+1	; 0x01
     676:	0e 94 f4 07 	call	0xfe8	; 0xfe8 <_Z10linkbus_Rxh>
	}
	
	if(g_serialbus_usart_number == USART_0)
     67a:	80 91 4a 40 	lds	r24, 0x404A	; 0x80404a <g_serialbus_usart_number>
     67e:	88 23       	and	r24, r24
     680:	19 f4       	brne	.+6      	; 0x688 <__vector_19+0x56>
	{
		serial_Rx(rx_char);
     682:	89 81       	ldd	r24, Y+1	; 0x01
     684:	0e 94 a1 03 	call	0x742	; 0x742 <_Z9serial_Rxh>
	}
}
     688:	00 00       	nop
     68a:	0f 90       	pop	r0
     68c:	df 91       	pop	r29
     68e:	cf 91       	pop	r28
     690:	ff 91       	pop	r31
     692:	ef 91       	pop	r30
     694:	bf 91       	pop	r27
     696:	af 91       	pop	r26
     698:	9f 91       	pop	r25
     69a:	8f 91       	pop	r24
     69c:	7f 91       	pop	r23
     69e:	6f 91       	pop	r22
     6a0:	5f 91       	pop	r21
     6a2:	4f 91       	pop	r20
     6a4:	3f 91       	pop	r19
     6a6:	2f 91       	pop	r18
     6a8:	0f 90       	pop	r0
     6aa:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
     6ae:	0f 90       	pop	r0
     6b0:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
     6b4:	0f 90       	pop	r0
     6b6:	1f 90       	pop	r1
     6b8:	18 95       	reti

000006ba <__vector_55>:

ISR(USART4_RXC_vect)
{
     6ba:	1f 92       	push	r1
     6bc:	0f 92       	push	r0
     6be:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
     6c2:	0f 92       	push	r0
     6c4:	11 24       	eor	r1, r1
     6c6:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
     6ca:	0f 92       	push	r0
     6cc:	2f 93       	push	r18
     6ce:	3f 93       	push	r19
     6d0:	4f 93       	push	r20
     6d2:	5f 93       	push	r21
     6d4:	6f 93       	push	r22
     6d6:	7f 93       	push	r23
     6d8:	8f 93       	push	r24
     6da:	9f 93       	push	r25
     6dc:	af 93       	push	r26
     6de:	bf 93       	push	r27
     6e0:	ef 93       	push	r30
     6e2:	ff 93       	push	r31
     6e4:	cf 93       	push	r28
     6e6:	df 93       	push	r29
     6e8:	1f 92       	push	r1
     6ea:	cd b7       	in	r28, 0x3d	; 61
     6ec:	de b7       	in	r29, 0x3e	; 62
	uint8_t rx_char = USART4_get_data();
     6ee:	0e 94 f9 71 	call	0xe3f2	; 0xe3f2 <USART4_get_data>
     6f2:	89 83       	std	Y+1, r24	; 0x01
	
	if(g_linkbus_usart_number == USART_4)
     6f4:	80 91 44 40 	lds	r24, 0x4044	; 0x804044 <g_linkbus_usart_number>
     6f8:	84 30       	cpi	r24, 0x04	; 4
     6fa:	19 f4       	brne	.+6      	; 0x702 <__vector_55+0x48>
	{
		linkbus_Rx(rx_char);
     6fc:	89 81       	ldd	r24, Y+1	; 0x01
     6fe:	0e 94 f4 07 	call	0xfe8	; 0xfe8 <_Z10linkbus_Rxh>
	}
	
	if(g_serialbus_usart_number == USART_4)
     702:	80 91 4a 40 	lds	r24, 0x404A	; 0x80404a <g_serialbus_usart_number>
     706:	84 30       	cpi	r24, 0x04	; 4
     708:	19 f4       	brne	.+6      	; 0x710 <__vector_55+0x56>
	{
		serial_Rx(rx_char);
     70a:	89 81       	ldd	r24, Y+1	; 0x01
     70c:	0e 94 a1 03 	call	0x742	; 0x742 <_Z9serial_Rxh>
	}
}
     710:	00 00       	nop
     712:	0f 90       	pop	r0
     714:	df 91       	pop	r29
     716:	cf 91       	pop	r28
     718:	ff 91       	pop	r31
     71a:	ef 91       	pop	r30
     71c:	bf 91       	pop	r27
     71e:	af 91       	pop	r26
     720:	9f 91       	pop	r25
     722:	8f 91       	pop	r24
     724:	7f 91       	pop	r23
     726:	6f 91       	pop	r22
     728:	5f 91       	pop	r21
     72a:	4f 91       	pop	r20
     72c:	3f 91       	pop	r19
     72e:	2f 91       	pop	r18
     730:	0f 90       	pop	r0
     732:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
     736:	0f 90       	pop	r0
     738:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
     73c:	0f 90       	pop	r0
     73e:	1f 90       	pop	r1
     740:	18 95       	reti

00000742 <_Z9serial_Rxh>:

void serial_Rx(uint8_t rx_char)
{
     742:	cf 93       	push	r28
     744:	df 93       	push	r29
     746:	cd b7       	in	r28, 0x3d	; 61
     748:	de b7       	in	r29, 0x3e	; 62
     74a:	2a 97       	sbiw	r28, 0x0a	; 10
     74c:	cd bf       	out	0x3d, r28	; 61
     74e:	de bf       	out	0x3e, r29	; 62
     750:	8a 87       	std	Y+10, r24	; 0x0a
	static uint8_t field_index = 0;
	static uint8_t field_len = 0;
	static int msg_ID = 0;
	static bool receiving_msg = false;

	if(!buff)
     752:	80 91 0e 44 	lds	r24, 0x440E	; 0x80440e <__data_end>
     756:	90 91 0f 44 	lds	r25, 0x440F	; 0x80440f <__data_end+0x1>
     75a:	89 2b       	or	r24, r25
     75c:	31 f4       	brne	.+12     	; 0x76a <_Z9serial_Rxh+0x28>
	{
		buff = nextEmptySBRxBuffer();
     75e:	0e 94 ab 5d 	call	0xbb56	; 0xbb56 <nextEmptySBRxBuffer>
     762:	80 93 0e 44 	sts	0x440E, r24	; 0x80440e <__data_end>
     766:	90 93 0f 44 	sts	0x440F, r25	; 0x80440f <__data_end+0x1>
	}

	if(buff)
     76a:	80 91 0e 44 	lds	r24, 0x440E	; 0x80440e <__data_end>
     76e:	90 91 0f 44 	lds	r25, 0x440F	; 0x80440f <__data_end+0x1>
     772:	89 2b       	or	r24, r25
     774:	09 f4       	brne	.+2      	; 0x778 <_Z9serial_Rxh+0x36>
     776:	63 c2       	rjmp	.+1222   	; 0xc3e <_Z9serial_Rxh+0x4fc>
	{
		static uint8_t ignoreCount = 0;
		rx_char = toupper(rx_char);
     778:	8a 85       	ldd	r24, Y+10	; 0x0a
     77a:	88 2f       	mov	r24, r24
     77c:	90 e0       	ldi	r25, 0x00	; 0
     77e:	0e 94 bd 76 	call	0xed7a	; 0xed7a <toupper>
     782:	8a 87       	std	Y+10, r24	; 0x0a
		if(rx_char == '\n') rx_char = '\r';
     784:	8a 85       	ldd	r24, Y+10	; 0x0a
     786:	8a 30       	cpi	r24, 0x0A	; 10
     788:	11 f4       	brne	.+4      	; 0x78e <_Z9serial_Rxh+0x4c>
     78a:	8d e0       	ldi	r24, 0x0D	; 13
     78c:	8a 87       	std	Y+10, r24	; 0x0a

		if(ignoreCount)
     78e:	80 91 10 44 	lds	r24, 0x4410	; 0x804410 <_ZZ9serial_RxhE11ignoreCount>
     792:	88 23       	and	r24, r24
     794:	39 f0       	breq	.+14     	; 0x7a4 <_Z9serial_Rxh+0x62>
		{
			rx_char = '\0';
     796:	1a 86       	std	Y+10, r1	; 0x0a
			ignoreCount--;
     798:	80 91 10 44 	lds	r24, 0x4410	; 0x804410 <_ZZ9serial_RxhE11ignoreCount>
     79c:	81 50       	subi	r24, 0x01	; 1
     79e:	80 93 10 44 	sts	0x4410, r24	; 0x804410 <_ZZ9serial_RxhE11ignoreCount>
			{
				sb_echo_char(rx_char);
			}
		}
	}	
}
     7a2:	4d c2       	rjmp	.+1178   	; 0xc3e <_Z9serial_Rxh+0x4fc>
		if(ignoreCount)
		{
			rx_char = '\0';
			ignoreCount--;
		}
		else if(rx_char == 0x1B)    /* Ignore ESC sequences */
     7a4:	8a 85       	ldd	r24, Y+10	; 0x0a
     7a6:	8b 31       	cpi	r24, 0x1B	; 27
     7a8:	91 f4       	brne	.+36     	; 0x7ce <_Z9serial_Rxh+0x8c>
		{
			rx_char = '\0';
     7aa:	1a 86       	std	Y+10, r1	; 0x0a

			if(charIndex < SERIALBUS_MAX_MSG_FIELD_LENGTH)
     7ac:	80 91 11 44 	lds	r24, 0x4411	; 0x804411 <_ZZ9serial_RxhE9charIndex>
     7b0:	84 31       	cpi	r24, 0x14	; 20
     7b2:	48 f4       	brcc	.+18     	; 0x7c6 <_Z9serial_Rxh+0x84>
			{
				rx_char = textBuff[charIndex];
     7b4:	80 91 11 44 	lds	r24, 0x4411	; 0x804411 <_ZZ9serial_RxhE9charIndex>
     7b8:	88 2f       	mov	r24, r24
     7ba:	90 e0       	ldi	r25, 0x00	; 0
     7bc:	8e 5e       	subi	r24, 0xEE	; 238
     7be:	9b 4b       	sbci	r25, 0xBB	; 187
     7c0:	fc 01       	movw	r30, r24
     7c2:	80 81       	ld	r24, Z
     7c4:	8a 87       	std	Y+10, r24	; 0x0a
			}

			ignoreCount = 2;        /* throw out the next two characters */
     7c6:	82 e0       	ldi	r24, 0x02	; 2
     7c8:	80 93 10 44 	sts	0x4410, r24	; 0x804410 <_ZZ9serial_RxhE11ignoreCount>
			{
				sb_echo_char(rx_char);
			}
		}
	}	
}
     7cc:	38 c2       	rjmp	.+1136   	; 0xc3e <_Z9serial_Rxh+0x4fc>
				rx_char = textBuff[charIndex];
			}

			ignoreCount = 2;        /* throw out the next two characters */
		}
		else if(rx_char == '\r')    /* Handle carriage return */
     7ce:	8a 85       	ldd	r24, Y+10	; 0x0a
     7d0:	8d 30       	cpi	r24, 0x0D	; 13
     7d2:	09 f0       	breq	.+2      	; 0x7d6 <_Z9serial_Rxh+0x94>
     7d4:	60 c0       	rjmp	.+192    	; 0x896 <_Z9serial_Rxh+0x154>
		{
			if(receiving_msg)
     7d6:	80 91 44 44 	lds	r24, 0x4444	; 0x804444 <_ZZ9serial_RxhE13receiving_msg>
     7da:	88 23       	and	r24, r24
     7dc:	09 f4       	brne	.+2      	; 0x7e0 <_Z9serial_Rxh+0x9e>
     7de:	41 c0       	rjmp	.+130    	; 0x862 <_Z9serial_Rxh+0x120>
			{
				if(charIndex > 0)
     7e0:	80 91 11 44 	lds	r24, 0x4411	; 0x804411 <_ZZ9serial_RxhE9charIndex>
     7e4:	88 23       	and	r24, r24
     7e6:	d1 f1       	breq	.+116    	; 0x85c <_Z9serial_Rxh+0x11a>
				{
					buff->type = SERIALBUS_MSG_QUERY;
     7e8:	80 91 0e 44 	lds	r24, 0x440E	; 0x80440e <__data_end>
     7ec:	90 91 0f 44 	lds	r25, 0x440F	; 0x80440f <__data_end+0x1>
     7f0:	22 e0       	ldi	r18, 0x02	; 2
     7f2:	fc 01       	movw	r30, r24
     7f4:	20 83       	st	Z, r18
					buff->id = (SBMessageID)msg_ID;
     7f6:	80 91 0e 44 	lds	r24, 0x440E	; 0x80440e <__data_end>
     7fa:	90 91 0f 44 	lds	r25, 0x440F	; 0x80440f <__data_end+0x1>
     7fe:	20 91 45 44 	lds	r18, 0x4445	; 0x804445 <_ZZ9serial_RxhE6msg_ID>
     802:	30 91 46 44 	lds	r19, 0x4446	; 0x804446 <_ZZ9serial_RxhE6msg_ID+0x1>
     806:	fc 01       	movw	r30, r24
     808:	21 83       	std	Z+1, r18	; 0x01
     80a:	32 83       	std	Z+2, r19	; 0x02

					if(field_index > 0) /* terminate the last field */
     80c:	80 91 47 44 	lds	r24, 0x4447	; 0x804447 <_ZZ9serial_RxhE11field_index>
     810:	88 23       	and	r24, r24
     812:	e1 f0       	breq	.+56     	; 0x84c <_Z9serial_Rxh+0x10a>
					{
						buff->fields[field_index - 1][field_len] = 0;
     814:	40 91 0e 44 	lds	r20, 0x440E	; 0x80440e <__data_end>
     818:	50 91 0f 44 	lds	r21, 0x440F	; 0x80440f <__data_end+0x1>
     81c:	80 91 47 44 	lds	r24, 0x4447	; 0x804447 <_ZZ9serial_RxhE11field_index>
     820:	88 2f       	mov	r24, r24
     822:	90 e0       	ldi	r25, 0x00	; 0
     824:	bc 01       	movw	r22, r24
     826:	61 50       	subi	r22, 0x01	; 1
     828:	71 09       	sbc	r23, r1
     82a:	80 91 48 44 	lds	r24, 0x4448	; 0x804448 <_ZZ9serial_RxhE9field_len>
     82e:	88 2f       	mov	r24, r24
     830:	90 e0       	ldi	r25, 0x00	; 0
     832:	e4 e1       	ldi	r30, 0x14	; 20
     834:	e6 9f       	mul	r30, r22
     836:	90 01       	movw	r18, r0
     838:	e7 9f       	mul	r30, r23
     83a:	30 0d       	add	r19, r0
     83c:	11 24       	eor	r1, r1
     83e:	24 0f       	add	r18, r20
     840:	35 1f       	adc	r19, r21
     842:	82 0f       	add	r24, r18
     844:	93 1f       	adc	r25, r19
     846:	03 96       	adiw	r24, 0x03	; 3
     848:	fc 01       	movw	r30, r24
     84a:	10 82       	st	Z, r1
					}

					textBuff[charIndex] = '\0'; /* terminate last-message buffer */
     84c:	80 91 11 44 	lds	r24, 0x4411	; 0x804411 <_ZZ9serial_RxhE9charIndex>
     850:	88 2f       	mov	r24, r24
     852:	90 e0       	ldi	r25, 0x00	; 0
     854:	8e 5e       	subi	r24, 0xEE	; 238
     856:	9b 4b       	sbci	r25, 0xBB	; 187
     858:	fc 01       	movw	r30, r24
     85a:	10 82       	st	Z, r1
				}

				sb_send_NewLine();
     85c:	0e 94 4c 5f 	call	0xbe98	; 0xbe98 <sb_send_NewLine>
     860:	09 c0       	rjmp	.+18     	; 0x874 <_Z9serial_Rxh+0x132>
			}
			else
			{
				buff->id = SB_INVALID_MESSAGE; /* print help message */
     862:	80 91 0e 44 	lds	r24, 0x440E	; 0x80440e <__data_end>
     866:	90 91 0f 44 	lds	r25, 0x440F	; 0x80440f <__data_end+0x1>
     86a:	2f ef       	ldi	r18, 0xFF	; 255
     86c:	3f ef       	ldi	r19, 0xFF	; 255
     86e:	fc 01       	movw	r30, r24
     870:	21 83       	std	Z+1, r18	; 0x01
     872:	32 83       	std	Z+2, r19	; 0x02
			}

			charIndex = 0;
     874:	10 92 11 44 	sts	0x4411, r1	; 0x804411 <_ZZ9serial_RxhE9charIndex>
			field_len = 0;
     878:	10 92 48 44 	sts	0x4448, r1	; 0x804448 <_ZZ9serial_RxhE9field_len>
			msg_ID = LB_MESSAGE_EMPTY;
     87c:	10 92 45 44 	sts	0x4445, r1	; 0x804445 <_ZZ9serial_RxhE6msg_ID>
     880:	10 92 46 44 	sts	0x4446, r1	; 0x804446 <_ZZ9serial_RxhE6msg_ID+0x1>

			field_index = 0;
     884:	10 92 47 44 	sts	0x4447, r1	; 0x804447 <_ZZ9serial_RxhE11field_index>
			buff = NULL;
     888:	10 92 0e 44 	sts	0x440E, r1	; 0x80440e <__data_end>
     88c:	10 92 0f 44 	sts	0x440F, r1	; 0x80440f <__data_end+0x1>

			receiving_msg = false;
     890:	10 92 44 44 	sts	0x4444, r1	; 0x804444 <_ZZ9serial_RxhE13receiving_msg>
			{
				sb_echo_char(rx_char);
			}
		}
	}	
}
     894:	d4 c1       	rjmp	.+936    	; 0xc3e <_Z9serial_Rxh+0x4fc>
			field_index = 0;
			buff = NULL;

			receiving_msg = false;
		}
		else if(rx_char)
     896:	8a 85       	ldd	r24, Y+10	; 0x0a
     898:	88 23       	and	r24, r24
     89a:	09 f4       	brne	.+2      	; 0x89e <_Z9serial_Rxh+0x15c>
     89c:	d0 c1       	rjmp	.+928    	; 0xc3e <_Z9serial_Rxh+0x4fc>
		{
			textBuff[charIndex] = rx_char;  /* hold the characters for re-use */
     89e:	80 91 11 44 	lds	r24, 0x4411	; 0x804411 <_ZZ9serial_RxhE9charIndex>
     8a2:	88 2f       	mov	r24, r24
     8a4:	90 e0       	ldi	r25, 0x00	; 0
     8a6:	8e 5e       	subi	r24, 0xEE	; 238
     8a8:	9b 4b       	sbci	r25, 0xBB	; 187
     8aa:	2a 85       	ldd	r18, Y+10	; 0x0a
     8ac:	fc 01       	movw	r30, r24
     8ae:	20 83       	st	Z, r18

			if(charIndex)
     8b0:	80 91 11 44 	lds	r24, 0x4411	; 0x804411 <_ZZ9serial_RxhE9charIndex>
     8b4:	88 23       	and	r24, r24
     8b6:	09 f4       	brne	.+2      	; 0x8ba <_Z9serial_Rxh+0x178>
     8b8:	7c c1       	rjmp	.+760    	; 0xbb2 <_Z9serial_Rxh+0x470>
			{
				if(rx_char == 0x7F)         /* Handle backspace */
     8ba:	8a 85       	ldd	r24, Y+10	; 0x0a
     8bc:	8f 37       	cpi	r24, 0x7F	; 127
     8be:	09 f0       	breq	.+2      	; 0x8c2 <_Z9serial_Rxh+0x180>
     8c0:	a1 c0       	rjmp	.+322    	; 0xa04 <_Z9serial_Rxh+0x2c2>
				{
					charIndex--;
     8c2:	80 91 11 44 	lds	r24, 0x4411	; 0x804411 <_ZZ9serial_RxhE9charIndex>
     8c6:	81 50       	subi	r24, 0x01	; 1
     8c8:	80 93 11 44 	sts	0x4411, r24	; 0x804411 <_ZZ9serial_RxhE9charIndex>
					if(field_index == 0)
     8cc:	80 91 47 44 	lds	r24, 0x4447	; 0x804447 <_ZZ9serial_RxhE11field_index>
     8d0:	88 23       	and	r24, r24
     8d2:	29 f5       	brne	.+74     	; 0x91e <_Z9serial_Rxh+0x1dc>
					{
						msg_ID -= textBuff[charIndex];
     8d4:	20 91 45 44 	lds	r18, 0x4445	; 0x804445 <_ZZ9serial_RxhE6msg_ID>
     8d8:	30 91 46 44 	lds	r19, 0x4446	; 0x804446 <_ZZ9serial_RxhE6msg_ID+0x1>
     8dc:	80 91 11 44 	lds	r24, 0x4411	; 0x804411 <_ZZ9serial_RxhE9charIndex>
     8e0:	88 2f       	mov	r24, r24
     8e2:	90 e0       	ldi	r25, 0x00	; 0
     8e4:	8e 5e       	subi	r24, 0xEE	; 238
     8e6:	9b 4b       	sbci	r25, 0xBB	; 187
     8e8:	fc 01       	movw	r30, r24
     8ea:	80 81       	ld	r24, Z
     8ec:	88 2f       	mov	r24, r24
     8ee:	90 e0       	ldi	r25, 0x00	; 0
     8f0:	a9 01       	movw	r20, r18
     8f2:	48 1b       	sub	r20, r24
     8f4:	59 0b       	sbc	r21, r25
     8f6:	ca 01       	movw	r24, r20
     8f8:	80 93 45 44 	sts	0x4445, r24	; 0x804445 <_ZZ9serial_RxhE6msg_ID>
     8fc:	90 93 46 44 	sts	0x4446, r25	; 0x804446 <_ZZ9serial_RxhE6msg_ID+0x1>
						msg_ID /= 10;
     900:	80 91 45 44 	lds	r24, 0x4445	; 0x804445 <_ZZ9serial_RxhE6msg_ID>
     904:	90 91 46 44 	lds	r25, 0x4446	; 0x804446 <_ZZ9serial_RxhE6msg_ID+0x1>
     908:	2a e0       	ldi	r18, 0x0A	; 10
     90a:	30 e0       	ldi	r19, 0x00	; 0
     90c:	b9 01       	movw	r22, r18
     90e:	0e 94 bf 74 	call	0xe97e	; 0xe97e <__divmodhi4>
     912:	cb 01       	movw	r24, r22
     914:	80 93 45 44 	sts	0x4445, r24	; 0x804445 <_ZZ9serial_RxhE6msg_ID>
     918:	90 93 46 44 	sts	0x4446, r25	; 0x804446 <_ZZ9serial_RxhE6msg_ID+0x1>
     91c:	63 c0       	rjmp	.+198    	; 0x9e4 <_Z9serial_Rxh+0x2a2>
					}
					else if(field_len)
     91e:	80 91 48 44 	lds	r24, 0x4448	; 0x804448 <_ZZ9serial_RxhE9field_len>
     922:	88 23       	and	r24, r24
     924:	11 f1       	breq	.+68     	; 0x96a <_Z9serial_Rxh+0x228>
					{
						field_len--;
     926:	80 91 48 44 	lds	r24, 0x4448	; 0x804448 <_ZZ9serial_RxhE9field_len>
     92a:	81 50       	subi	r24, 0x01	; 1
     92c:	80 93 48 44 	sts	0x4448, r24	; 0x804448 <_ZZ9serial_RxhE9field_len>
						buff->fields[field_index - 1][field_len] = '\0';
     930:	40 91 0e 44 	lds	r20, 0x440E	; 0x80440e <__data_end>
     934:	50 91 0f 44 	lds	r21, 0x440F	; 0x80440f <__data_end+0x1>
     938:	80 91 47 44 	lds	r24, 0x4447	; 0x804447 <_ZZ9serial_RxhE11field_index>
     93c:	88 2f       	mov	r24, r24
     93e:	90 e0       	ldi	r25, 0x00	; 0
     940:	bc 01       	movw	r22, r24
     942:	61 50       	subi	r22, 0x01	; 1
     944:	71 09       	sbc	r23, r1
     946:	80 91 48 44 	lds	r24, 0x4448	; 0x804448 <_ZZ9serial_RxhE9field_len>
     94a:	88 2f       	mov	r24, r24
     94c:	90 e0       	ldi	r25, 0x00	; 0
     94e:	e4 e1       	ldi	r30, 0x14	; 20
     950:	e6 9f       	mul	r30, r22
     952:	90 01       	movw	r18, r0
     954:	e7 9f       	mul	r30, r23
     956:	30 0d       	add	r19, r0
     958:	11 24       	eor	r1, r1
     95a:	24 0f       	add	r18, r20
     95c:	35 1f       	adc	r19, r21
     95e:	82 0f       	add	r24, r18
     960:	93 1f       	adc	r25, r19
     962:	03 96       	adiw	r24, 0x03	; 3
     964:	fc 01       	movw	r30, r24
     966:	10 82       	st	Z, r1
     968:	3d c0       	rjmp	.+122    	; 0x9e4 <_Z9serial_Rxh+0x2a2>
					}
					else if(textBuff[charIndex] == ' ')
     96a:	80 91 11 44 	lds	r24, 0x4411	; 0x804411 <_ZZ9serial_RxhE9charIndex>
     96e:	88 2f       	mov	r24, r24
     970:	90 e0       	ldi	r25, 0x00	; 0
     972:	8e 5e       	subi	r24, 0xEE	; 238
     974:	9b 4b       	sbci	r25, 0xBB	; 187
     976:	fc 01       	movw	r30, r24
     978:	80 81       	ld	r24, Z
     97a:	80 32       	cpi	r24, 0x20	; 32
     97c:	d9 f4       	brne	.+54     	; 0x9b4 <_Z9serial_Rxh+0x272>
					{
						field_index--;
     97e:	80 91 47 44 	lds	r24, 0x4447	; 0x804447 <_ZZ9serial_RxhE11field_index>
     982:	81 50       	subi	r24, 0x01	; 1
     984:	80 93 47 44 	sts	0x4447, r24	; 0x804447 <_ZZ9serial_RxhE11field_index>
						field_len = strlen(buff->fields[field_index]);
     988:	20 91 0e 44 	lds	r18, 0x440E	; 0x80440e <__data_end>
     98c:	30 91 0f 44 	lds	r19, 0x440F	; 0x80440f <__data_end+0x1>
     990:	80 91 47 44 	lds	r24, 0x4447	; 0x804447 <_ZZ9serial_RxhE11field_index>
     994:	48 2f       	mov	r20, r24
     996:	50 e0       	ldi	r21, 0x00	; 0
     998:	64 e1       	ldi	r22, 0x14	; 20
     99a:	64 9f       	mul	r22, r20
     99c:	c0 01       	movw	r24, r0
     99e:	65 9f       	mul	r22, r21
     9a0:	90 0d       	add	r25, r0
     9a2:	11 24       	eor	r1, r1
     9a4:	03 96       	adiw	r24, 0x03	; 3
     9a6:	82 0f       	add	r24, r18
     9a8:	93 1f       	adc	r25, r19
     9aa:	0e 94 d5 76 	call	0xedaa	; 0xedaa <strlen>
     9ae:	80 93 48 44 	sts	0x4448, r24	; 0x804448 <_ZZ9serial_RxhE9field_len>
     9b2:	18 c0       	rjmp	.+48     	; 0x9e4 <_Z9serial_Rxh+0x2a2>
					}
					else
					{
						buff->fields[field_index][0] = '\0';
     9b4:	20 91 0e 44 	lds	r18, 0x440E	; 0x80440e <__data_end>
     9b8:	30 91 0f 44 	lds	r19, 0x440F	; 0x80440f <__data_end+0x1>
     9bc:	80 91 47 44 	lds	r24, 0x4447	; 0x804447 <_ZZ9serial_RxhE11field_index>
     9c0:	48 2f       	mov	r20, r24
     9c2:	50 e0       	ldi	r21, 0x00	; 0
     9c4:	64 e1       	ldi	r22, 0x14	; 20
     9c6:	64 9f       	mul	r22, r20
     9c8:	c0 01       	movw	r24, r0
     9ca:	65 9f       	mul	r22, r21
     9cc:	90 0d       	add	r25, r0
     9ce:	11 24       	eor	r1, r1
     9d0:	82 0f       	add	r24, r18
     9d2:	93 1f       	adc	r25, r19
     9d4:	03 96       	adiw	r24, 0x03	; 3
     9d6:	fc 01       	movw	r30, r24
     9d8:	10 82       	st	Z, r1
						field_index--;
     9da:	80 91 47 44 	lds	r24, 0x4447	; 0x804447 <_ZZ9serial_RxhE11field_index>
     9de:	81 50       	subi	r24, 0x01	; 1
     9e0:	80 93 47 44 	sts	0x4447, r24	; 0x804447 <_ZZ9serial_RxhE11field_index>
					}

					textBuff[charIndex] = '\0'; /* replace deleted char with null */
     9e4:	80 91 11 44 	lds	r24, 0x4411	; 0x804411 <_ZZ9serial_RxhE9charIndex>
     9e8:	88 2f       	mov	r24, r24
     9ea:	90 e0       	ldi	r25, 0x00	; 0
     9ec:	8e 5e       	subi	r24, 0xEE	; 238
     9ee:	9b 4b       	sbci	r25, 0xBB	; 187
     9f0:	fc 01       	movw	r30, r24
     9f2:	10 82       	st	Z, r1

					if(charIndex == 0)
     9f4:	80 91 11 44 	lds	r24, 0x4411	; 0x804411 <_ZZ9serial_RxhE9charIndex>
     9f8:	88 23       	and	r24, r24
     9fa:	09 f0       	breq	.+2      	; 0x9fe <_Z9serial_Rxh+0x2bc>
     9fc:	1a c1       	rjmp	.+564    	; 0xc32 <_Z9serial_Rxh+0x4f0>
					{
						receiving_msg = false;
     9fe:	10 92 44 44 	sts	0x4444, r1	; 0x804444 <_ZZ9serial_RxhE13receiving_msg>
     a02:	17 c1       	rjmp	.+558    	; 0xc32 <_Z9serial_Rxh+0x4f0>
					}
				}
				else
				{
					if(rx_char == ' ')
     a04:	8a 85       	ldd	r24, Y+10	; 0x0a
     a06:	80 32       	cpi	r24, 0x20	; 32
     a08:	09 f0       	breq	.+2      	; 0xa0c <_Z9serial_Rxh+0x2ca>
     a0a:	55 c0       	rjmp	.+170    	; 0xab6 <_Z9serial_Rxh+0x374>
					{
						if((textBuff[charIndex - 1] == ' ') || ((field_index + 1) >= LINKBUS_MAX_MSG_NUMBER_OF_FIELDS))
     a0c:	80 91 11 44 	lds	r24, 0x4411	; 0x804411 <_ZZ9serial_RxhE9charIndex>
     a10:	88 2f       	mov	r24, r24
     a12:	90 e0       	ldi	r25, 0x00	; 0
     a14:	01 97       	sbiw	r24, 0x01	; 1
     a16:	8e 5e       	subi	r24, 0xEE	; 238
     a18:	9b 4b       	sbci	r25, 0xBB	; 187
     a1a:	fc 01       	movw	r30, r24
     a1c:	80 81       	ld	r24, Z
     a1e:	80 32       	cpi	r24, 0x20	; 32
     a20:	39 f0       	breq	.+14     	; 0xa30 <_Z9serial_Rxh+0x2ee>
     a22:	80 91 47 44 	lds	r24, 0x4447	; 0x804447 <_ZZ9serial_RxhE11field_index>
     a26:	88 2f       	mov	r24, r24
     a28:	90 e0       	ldi	r25, 0x00	; 0
     a2a:	01 96       	adiw	r24, 0x01	; 1
     a2c:	03 97       	sbiw	r24, 0x03	; 3
     a2e:	14 f0       	brlt	.+4      	; 0xa34 <_Z9serial_Rxh+0x2f2>
						{
							rx_char = '\0';
     a30:	1a 86       	std	Y+10, r1	; 0x0a
     a32:	ff c0       	rjmp	.+510    	; 0xc32 <_Z9serial_Rxh+0x4f0>
						}
						else
						{
							if(field_index > 0)
     a34:	80 91 47 44 	lds	r24, 0x4447	; 0x804447 <_ZZ9serial_RxhE11field_index>
     a38:	88 23       	and	r24, r24
     a3a:	e1 f0       	breq	.+56     	; 0xa74 <_Z9serial_Rxh+0x332>
							{
								buff->fields[field_index - 1][field_len] = '\0';
     a3c:	40 91 0e 44 	lds	r20, 0x440E	; 0x80440e <__data_end>
     a40:	50 91 0f 44 	lds	r21, 0x440F	; 0x80440f <__data_end+0x1>
     a44:	80 91 47 44 	lds	r24, 0x4447	; 0x804447 <_ZZ9serial_RxhE11field_index>
     a48:	88 2f       	mov	r24, r24
     a4a:	90 e0       	ldi	r25, 0x00	; 0
     a4c:	bc 01       	movw	r22, r24
     a4e:	61 50       	subi	r22, 0x01	; 1
     a50:	71 09       	sbc	r23, r1
     a52:	80 91 48 44 	lds	r24, 0x4448	; 0x804448 <_ZZ9serial_RxhE9field_len>
     a56:	88 2f       	mov	r24, r24
     a58:	90 e0       	ldi	r25, 0x00	; 0
     a5a:	e4 e1       	ldi	r30, 0x14	; 20
     a5c:	e6 9f       	mul	r30, r22
     a5e:	90 01       	movw	r18, r0
     a60:	e7 9f       	mul	r30, r23
     a62:	30 0d       	add	r19, r0
     a64:	11 24       	eor	r1, r1
     a66:	24 0f       	add	r18, r20
     a68:	35 1f       	adc	r19, r21
     a6a:	82 0f       	add	r24, r18
     a6c:	93 1f       	adc	r25, r19
     a6e:	03 96       	adiw	r24, 0x03	; 3
     a70:	fc 01       	movw	r30, r24
     a72:	10 82       	st	Z, r1
							}

							field_index++;
     a74:	80 91 47 44 	lds	r24, 0x4447	; 0x804447 <_ZZ9serial_RxhE11field_index>
     a78:	8f 5f       	subi	r24, 0xFF	; 255
     a7a:	80 93 47 44 	sts	0x4447, r24	; 0x804447 <_ZZ9serial_RxhE11field_index>
							field_len = 0;
     a7e:	10 92 48 44 	sts	0x4448, r1	; 0x804448 <_ZZ9serial_RxhE9field_len>
							charIndex = MIN(charIndex + 1, (LINKBUS_MAX_MSG_LENGTH - 1));
     a82:	80 91 11 44 	lds	r24, 0x4411	; 0x804411 <_ZZ9serial_RxhE9charIndex>
     a86:	88 2f       	mov	r24, r24
     a88:	90 e0       	ldi	r25, 0x00	; 0
     a8a:	01 96       	adiw	r24, 0x01	; 1
     a8c:	8a 83       	std	Y+2, r24	; 0x02
     a8e:	9b 83       	std	Y+3, r25	; 0x03
     a90:	81 e3       	ldi	r24, 0x31	; 49
     a92:	90 e0       	ldi	r25, 0x00	; 0
     a94:	8c 83       	std	Y+4, r24	; 0x04
     a96:	9d 83       	std	Y+5, r25	; 0x05
     a98:	2a 81       	ldd	r18, Y+2	; 0x02
     a9a:	3b 81       	ldd	r19, Y+3	; 0x03
     a9c:	8c 81       	ldd	r24, Y+4	; 0x04
     a9e:	9d 81       	ldd	r25, Y+5	; 0x05
     aa0:	28 17       	cp	r18, r24
     aa2:	39 07       	cpc	r19, r25
     aa4:	1c f4       	brge	.+6      	; 0xaac <_Z9serial_Rxh+0x36a>
     aa6:	8a 81       	ldd	r24, Y+2	; 0x02
     aa8:	9b 81       	ldd	r25, Y+3	; 0x03
     aaa:	02 c0       	rjmp	.+4      	; 0xab0 <_Z9serial_Rxh+0x36e>
     aac:	8c 81       	ldd	r24, Y+4	; 0x04
     aae:	9d 81       	ldd	r25, Y+5	; 0x05
     ab0:	80 93 11 44 	sts	0x4411, r24	; 0x804411 <_ZZ9serial_RxhE9charIndex>
     ab4:	be c0       	rjmp	.+380    	; 0xc32 <_Z9serial_Rxh+0x4f0>
						}
					}
					else if(field_len < LINKBUS_MAX_MSG_FIELD_LENGTH)
     ab6:	80 91 48 44 	lds	r24, 0x4448	; 0x804448 <_ZZ9serial_RxhE9field_len>
     aba:	85 31       	cpi	r24, 0x15	; 21
     abc:	08 f0       	brcs	.+2      	; 0xac0 <_Z9serial_Rxh+0x37e>
     abe:	77 c0       	rjmp	.+238    	; 0xbae <_Z9serial_Rxh+0x46c>
					{
						if(field_index == 0)    /* message ID received */
     ac0:	80 91 47 44 	lds	r24, 0x4447	; 0x804447 <_ZZ9serial_RxhE11field_index>
     ac4:	88 23       	and	r24, r24
     ac6:	e1 f4       	brne	.+56     	; 0xb00 <_Z9serial_Rxh+0x3be>
						{
							msg_ID = msg_ID * 10 + rx_char;
     ac8:	80 91 45 44 	lds	r24, 0x4445	; 0x804445 <_ZZ9serial_RxhE6msg_ID>
     acc:	90 91 46 44 	lds	r25, 0x4446	; 0x804446 <_ZZ9serial_RxhE6msg_ID+0x1>
     ad0:	88 0f       	add	r24, r24
     ad2:	99 1f       	adc	r25, r25
     ad4:	9c 01       	movw	r18, r24
     ad6:	22 0f       	add	r18, r18
     ad8:	33 1f       	adc	r19, r19
     ada:	22 0f       	add	r18, r18
     adc:	33 1f       	adc	r19, r19
     ade:	28 0f       	add	r18, r24
     ae0:	39 1f       	adc	r19, r25
     ae2:	8a 85       	ldd	r24, Y+10	; 0x0a
     ae4:	88 2f       	mov	r24, r24
     ae6:	90 e0       	ldi	r25, 0x00	; 0
     ae8:	82 0f       	add	r24, r18
     aea:	93 1f       	adc	r25, r19
     aec:	80 93 45 44 	sts	0x4445, r24	; 0x804445 <_ZZ9serial_RxhE6msg_ID>
     af0:	90 93 46 44 	sts	0x4446, r25	; 0x804446 <_ZZ9serial_RxhE6msg_ID+0x1>
							field_len++;
     af4:	80 91 48 44 	lds	r24, 0x4448	; 0x804448 <_ZZ9serial_RxhE9field_len>
     af8:	8f 5f       	subi	r24, 0xFF	; 255
     afa:	80 93 48 44 	sts	0x4448, r24	; 0x804448 <_ZZ9serial_RxhE9field_len>
     afe:	3d c0       	rjmp	.+122    	; 0xb7a <_Z9serial_Rxh+0x438>
						}
						else
						{
							buff->fields[field_index - 1][field_len++] = rx_char;
     b00:	40 91 0e 44 	lds	r20, 0x440E	; 0x80440e <__data_end>
     b04:	50 91 0f 44 	lds	r21, 0x440F	; 0x80440f <__data_end+0x1>
     b08:	80 91 47 44 	lds	r24, 0x4447	; 0x804447 <_ZZ9serial_RxhE11field_index>
     b0c:	88 2f       	mov	r24, r24
     b0e:	90 e0       	ldi	r25, 0x00	; 0
     b10:	bc 01       	movw	r22, r24
     b12:	61 50       	subi	r22, 0x01	; 1
     b14:	71 09       	sbc	r23, r1
     b16:	80 91 48 44 	lds	r24, 0x4448	; 0x804448 <_ZZ9serial_RxhE9field_len>
     b1a:	91 e0       	ldi	r25, 0x01	; 1
     b1c:	98 0f       	add	r25, r24
     b1e:	90 93 48 44 	sts	0x4448, r25	; 0x804448 <_ZZ9serial_RxhE9field_len>
     b22:	88 2f       	mov	r24, r24
     b24:	90 e0       	ldi	r25, 0x00	; 0
     b26:	e4 e1       	ldi	r30, 0x14	; 20
     b28:	e6 9f       	mul	r30, r22
     b2a:	90 01       	movw	r18, r0
     b2c:	e7 9f       	mul	r30, r23
     b2e:	30 0d       	add	r19, r0
     b30:	11 24       	eor	r1, r1
     b32:	24 0f       	add	r18, r20
     b34:	35 1f       	adc	r19, r21
     b36:	82 0f       	add	r24, r18
     b38:	93 1f       	adc	r25, r19
     b3a:	03 96       	adiw	r24, 0x03	; 3
     b3c:	2a 85       	ldd	r18, Y+10	; 0x0a
     b3e:	fc 01       	movw	r30, r24
     b40:	20 83       	st	Z, r18
							buff->fields[field_index - 1][field_len] = '\0';
     b42:	40 91 0e 44 	lds	r20, 0x440E	; 0x80440e <__data_end>
     b46:	50 91 0f 44 	lds	r21, 0x440F	; 0x80440f <__data_end+0x1>
     b4a:	80 91 47 44 	lds	r24, 0x4447	; 0x804447 <_ZZ9serial_RxhE11field_index>
     b4e:	88 2f       	mov	r24, r24
     b50:	90 e0       	ldi	r25, 0x00	; 0
     b52:	bc 01       	movw	r22, r24
     b54:	61 50       	subi	r22, 0x01	; 1
     b56:	71 09       	sbc	r23, r1
     b58:	80 91 48 44 	lds	r24, 0x4448	; 0x804448 <_ZZ9serial_RxhE9field_len>
     b5c:	88 2f       	mov	r24, r24
     b5e:	90 e0       	ldi	r25, 0x00	; 0
     b60:	e4 e1       	ldi	r30, 0x14	; 20
     b62:	e6 9f       	mul	r30, r22
     b64:	90 01       	movw	r18, r0
     b66:	e7 9f       	mul	r30, r23
     b68:	30 0d       	add	r19, r0
     b6a:	11 24       	eor	r1, r1
     b6c:	24 0f       	add	r18, r20
     b6e:	35 1f       	adc	r19, r21
     b70:	82 0f       	add	r24, r18
     b72:	93 1f       	adc	r25, r19
     b74:	03 96       	adiw	r24, 0x03	; 3
     b76:	fc 01       	movw	r30, r24
     b78:	10 82       	st	Z, r1
						}

						charIndex = MIN(charIndex + 1, (LINKBUS_MAX_MSG_LENGTH - 1));
     b7a:	80 91 11 44 	lds	r24, 0x4411	; 0x804411 <_ZZ9serial_RxhE9charIndex>
     b7e:	88 2f       	mov	r24, r24
     b80:	90 e0       	ldi	r25, 0x00	; 0
     b82:	01 96       	adiw	r24, 0x01	; 1
     b84:	8e 83       	std	Y+6, r24	; 0x06
     b86:	9f 83       	std	Y+7, r25	; 0x07
     b88:	81 e3       	ldi	r24, 0x31	; 49
     b8a:	90 e0       	ldi	r25, 0x00	; 0
     b8c:	88 87       	std	Y+8, r24	; 0x08
     b8e:	99 87       	std	Y+9, r25	; 0x09
     b90:	2e 81       	ldd	r18, Y+6	; 0x06
     b92:	3f 81       	ldd	r19, Y+7	; 0x07
     b94:	88 85       	ldd	r24, Y+8	; 0x08
     b96:	99 85       	ldd	r25, Y+9	; 0x09
     b98:	28 17       	cp	r18, r24
     b9a:	39 07       	cpc	r19, r25
     b9c:	1c f4       	brge	.+6      	; 0xba4 <_Z9serial_Rxh+0x462>
     b9e:	8e 81       	ldd	r24, Y+6	; 0x06
     ba0:	9f 81       	ldd	r25, Y+7	; 0x07
     ba2:	02 c0       	rjmp	.+4      	; 0xba8 <_Z9serial_Rxh+0x466>
     ba4:	88 85       	ldd	r24, Y+8	; 0x08
     ba6:	99 85       	ldd	r25, Y+9	; 0x09
     ba8:	80 93 11 44 	sts	0x4411, r24	; 0x804411 <_ZZ9serial_RxhE9charIndex>
     bac:	42 c0       	rjmp	.+132    	; 0xc32 <_Z9serial_Rxh+0x4f0>
					}
					else
					{
						rx_char = '\0';
     bae:	1a 86       	std	Y+10, r1	; 0x0a
     bb0:	40 c0       	rjmp	.+128    	; 0xc32 <_Z9serial_Rxh+0x4f0>
					}
				}
			}
			else
			{
				if(rx_char == 0x7F) /* Handle Backspace */
     bb2:	8a 85       	ldd	r24, Y+10	; 0x0a
     bb4:	8f 37       	cpi	r24, 0x7F	; 127
     bb6:	69 f4       	brne	.+26     	; 0xbd2 <_Z9serial_Rxh+0x490>
				{
					if(msg_ID <= 0)
     bb8:	80 91 45 44 	lds	r24, 0x4445	; 0x804445 <_ZZ9serial_RxhE6msg_ID>
     bbc:	90 91 46 44 	lds	r25, 0x4446	; 0x804446 <_ZZ9serial_RxhE6msg_ID+0x1>
     bc0:	18 16       	cp	r1, r24
     bc2:	19 06       	cpc	r1, r25
     bc4:	0c f0       	brlt	.+2      	; 0xbc8 <_Z9serial_Rxh+0x486>
					{
						rx_char = '\0';
     bc6:	1a 86       	std	Y+10, r1	; 0x0a
					}

					msg_ID = 0;
     bc8:	10 92 45 44 	sts	0x4445, r1	; 0x804445 <_ZZ9serial_RxhE6msg_ID>
     bcc:	10 92 46 44 	sts	0x4446, r1	; 0x804446 <_ZZ9serial_RxhE6msg_ID+0x1>
     bd0:	30 c0       	rjmp	.+96     	; 0xc32 <_Z9serial_Rxh+0x4f0>
				}
				else if(rx_char == ' ') /* Handle Space */
     bd2:	8a 85       	ldd	r24, Y+10	; 0x0a
     bd4:	80 32       	cpi	r24, 0x20	; 32
     bd6:	11 f4       	brne	.+4      	; 0xbdc <_Z9serial_Rxh+0x49a>
				{
					rx_char = '\0';
     bd8:	1a 86       	std	Y+10, r1	; 0x0a
     bda:	2b c0       	rjmp	.+86     	; 0xc32 <_Z9serial_Rxh+0x4f0>
				}
				else                    /* start of new message */
				{
					uint8_t i;
					field_index = 0;
     bdc:	10 92 47 44 	sts	0x4447, r1	; 0x804447 <_ZZ9serial_RxhE11field_index>
					msg_ID = rx_char;
     be0:	8a 85       	ldd	r24, Y+10	; 0x0a
     be2:	88 2f       	mov	r24, r24
     be4:	90 e0       	ldi	r25, 0x00	; 0
     be6:	80 93 45 44 	sts	0x4445, r24	; 0x804445 <_ZZ9serial_RxhE6msg_ID>
     bea:	90 93 46 44 	sts	0x4446, r25	; 0x804446 <_ZZ9serial_RxhE6msg_ID+0x1>

					/* Empty the field buffers */
					for(i = 0; i < LINKBUS_MAX_MSG_NUMBER_OF_FIELDS; i++)
     bee:	19 82       	std	Y+1, r1	; 0x01
     bf0:	89 81       	ldd	r24, Y+1	; 0x01
     bf2:	83 30       	cpi	r24, 0x03	; 3
     bf4:	b0 f4       	brcc	.+44     	; 0xc22 <_Z9serial_Rxh+0x4e0>
					{
						buff->fields[i][0] = '\0';
     bf6:	20 91 0e 44 	lds	r18, 0x440E	; 0x80440e <__data_end>
     bfa:	30 91 0f 44 	lds	r19, 0x440F	; 0x80440f <__data_end+0x1>
     bfe:	89 81       	ldd	r24, Y+1	; 0x01
     c00:	48 2f       	mov	r20, r24
     c02:	50 e0       	ldi	r21, 0x00	; 0
     c04:	64 e1       	ldi	r22, 0x14	; 20
     c06:	64 9f       	mul	r22, r20
     c08:	c0 01       	movw	r24, r0
     c0a:	65 9f       	mul	r22, r21
     c0c:	90 0d       	add	r25, r0
     c0e:	11 24       	eor	r1, r1
     c10:	82 0f       	add	r24, r18
     c12:	93 1f       	adc	r25, r19
     c14:	03 96       	adiw	r24, 0x03	; 3
     c16:	fc 01       	movw	r30, r24
     c18:	10 82       	st	Z, r1
					uint8_t i;
					field_index = 0;
					msg_ID = rx_char;

					/* Empty the field buffers */
					for(i = 0; i < LINKBUS_MAX_MSG_NUMBER_OF_FIELDS; i++)
     c1a:	89 81       	ldd	r24, Y+1	; 0x01
     c1c:	8f 5f       	subi	r24, 0xFF	; 255
     c1e:	89 83       	std	Y+1, r24	; 0x01
     c20:	e7 cf       	rjmp	.-50     	; 0xbf0 <_Z9serial_Rxh+0x4ae>
					{
						buff->fields[i][0] = '\0';
					}

					receiving_msg = true;
     c22:	81 e0       	ldi	r24, 0x01	; 1
     c24:	80 93 44 44 	sts	0x4444, r24	; 0x804444 <_ZZ9serial_RxhE13receiving_msg>
					charIndex++;
     c28:	80 91 11 44 	lds	r24, 0x4411	; 0x804411 <_ZZ9serial_RxhE9charIndex>
     c2c:	8f 5f       	subi	r24, 0xFF	; 255
     c2e:	80 93 11 44 	sts	0x4411, r24	; 0x804411 <_ZZ9serial_RxhE9charIndex>
				}
			}

			if(rx_char)
     c32:	8a 85       	ldd	r24, Y+10	; 0x0a
     c34:	88 23       	and	r24, r24
     c36:	19 f0       	breq	.+6      	; 0xc3e <_Z9serial_Rxh+0x4fc>
			{
				sb_echo_char(rx_char);
     c38:	8a 85       	ldd	r24, Y+10	; 0x0a
     c3a:	0e 94 5d 5f 	call	0xbeba	; 0xbeba <sb_echo_char>
			}
		}
	}	
}
     c3e:	00 00       	nop
     c40:	2a 96       	adiw	r28, 0x0a	; 10
     c42:	cd bf       	out	0x3d, r28	; 61
     c44:	de bf       	out	0x3e, r29	; 62
     c46:	df 91       	pop	r29
     c48:	cf 91       	pop	r28
     c4a:	08 95       	ret

00000c4c <__vector_20>:

/**

*/
ISR(USART0_DRE_vect)
{
     c4c:	1f 92       	push	r1
     c4e:	0f 92       	push	r0
     c50:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
     c54:	0f 92       	push	r0
     c56:	11 24       	eor	r1, r1
     c58:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
     c5c:	0f 92       	push	r0
     c5e:	2f 93       	push	r18
     c60:	3f 93       	push	r19
     c62:	4f 93       	push	r20
     c64:	5f 93       	push	r21
     c66:	6f 93       	push	r22
     c68:	7f 93       	push	r23
     c6a:	8f 93       	push	r24
     c6c:	9f 93       	push	r25
     c6e:	af 93       	push	r26
     c70:	bf 93       	push	r27
     c72:	ef 93       	push	r30
     c74:	ff 93       	push	r31
     c76:	cf 93       	push	r28
     c78:	df 93       	push	r29
     c7a:	cd b7       	in	r28, 0x3d	; 61
     c7c:	de b7       	in	r29, 0x3e	; 62
	if(g_linkbus_usart_number == USART_0)
     c7e:	80 91 44 40 	lds	r24, 0x4044	; 0x804044 <g_linkbus_usart_number>
     c82:	88 23       	and	r24, r24
     c84:	09 f0       	breq	.+2      	; 0xc88 <__vector_20+0x3c>
     c86:	45 c0       	rjmp	.+138    	; 0xd12 <__vector_20+0xc6>
	{
		static LinkbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
     c88:	80 91 49 44 	lds	r24, 0x4449	; 0x804449 <_ZZ11__vector_20E4buff>
     c8c:	90 91 4a 44 	lds	r25, 0x444A	; 0x80444a <_ZZ11__vector_20E4buff+0x1>
     c90:	89 2b       	or	r24, r25
     c92:	31 f4       	brne	.+12     	; 0xca0 <__vector_20+0x54>
		{
			buff = nextFullLBTxBuffer();
     c94:	0e 94 5f 54 	call	0xa8be	; 0xa8be <_Z18nextFullLBTxBufferv>
     c98:	80 93 49 44 	sts	0x4449, r24	; 0x804449 <_ZZ11__vector_20E4buff>
     c9c:	90 93 4a 44 	sts	0x444A, r25	; 0x80444a <_ZZ11__vector_20E4buff+0x1>
		}

		if((*buff)[charIndex])
     ca0:	20 91 49 44 	lds	r18, 0x4449	; 0x804449 <_ZZ11__vector_20E4buff>
     ca4:	30 91 4a 44 	lds	r19, 0x444A	; 0x80444a <_ZZ11__vector_20E4buff+0x1>
     ca8:	80 91 4b 44 	lds	r24, 0x444B	; 0x80444b <_ZZ11__vector_20E9charIndex>
     cac:	88 2f       	mov	r24, r24
     cae:	90 e0       	ldi	r25, 0x00	; 0
     cb0:	82 0f       	add	r24, r18
     cb2:	93 1f       	adc	r25, r19
     cb4:	fc 01       	movw	r30, r24
     cb6:	80 81       	ld	r24, Z
     cb8:	88 23       	and	r24, r24
     cba:	a9 f0       	breq	.+42     	; 0xce6 <__vector_20+0x9a>
		{
			/* Put data into buffer, sends the data */
			USART0.TXDATAL = (*buff)[charIndex++];
     cbc:	80 e0       	ldi	r24, 0x00	; 0
     cbe:	98 e0       	ldi	r25, 0x08	; 8
     cc0:	40 91 49 44 	lds	r20, 0x4449	; 0x804449 <_ZZ11__vector_20E4buff>
     cc4:	50 91 4a 44 	lds	r21, 0x444A	; 0x80444a <_ZZ11__vector_20E4buff+0x1>
     cc8:	20 91 4b 44 	lds	r18, 0x444B	; 0x80444b <_ZZ11__vector_20E9charIndex>
     ccc:	31 e0       	ldi	r19, 0x01	; 1
     cce:	32 0f       	add	r19, r18
     cd0:	30 93 4b 44 	sts	0x444B, r19	; 0x80444b <_ZZ11__vector_20E9charIndex>
     cd4:	22 2f       	mov	r18, r18
     cd6:	30 e0       	ldi	r19, 0x00	; 0
     cd8:	24 0f       	add	r18, r20
     cda:	35 1f       	adc	r19, r21
     cdc:	f9 01       	movw	r30, r18
     cde:	20 81       	ld	r18, Z
     ce0:	fc 01       	movw	r30, r24
     ce2:	22 83       	std	Z+2, r18	; 0x02
     ce4:	16 c0       	rjmp	.+44     	; 0xd12 <__vector_20+0xc6>
		}
		else
		{
			charIndex = 0;
     ce6:	10 92 4b 44 	sts	0x444B, r1	; 0x80444b <_ZZ11__vector_20E9charIndex>
			(*buff)[0] = '\0';
     cea:	80 91 49 44 	lds	r24, 0x4449	; 0x804449 <_ZZ11__vector_20E4buff>
     cee:	90 91 4a 44 	lds	r25, 0x444A	; 0x80444a <_ZZ11__vector_20E4buff+0x1>
     cf2:	fc 01       	movw	r30, r24
     cf4:	10 82       	st	Z, r1
			buff = nextFullLBTxBuffer();
     cf6:	0e 94 5f 54 	call	0xa8be	; 0xa8be <_Z18nextFullLBTxBufferv>
     cfa:	80 93 49 44 	sts	0x4449, r24	; 0x804449 <_ZZ11__vector_20E4buff>
     cfe:	90 93 4a 44 	sts	0x444A, r25	; 0x80444a <_ZZ11__vector_20E4buff+0x1>
			if(!buff)
     d02:	80 91 49 44 	lds	r24, 0x4449	; 0x804449 <_ZZ11__vector_20E4buff>
     d06:	90 91 4a 44 	lds	r25, 0x444A	; 0x80444a <_ZZ11__vector_20E4buff+0x1>
     d0a:	89 2b       	or	r24, r25
     d0c:	11 f4       	brne	.+4      	; 0xd12 <__vector_20+0xc6>
			{
				linkbus_end_tx();
     d0e:	0e 94 a4 55 	call	0xab48	; 0xab48 <_Z14linkbus_end_txv>
			}
		}
	}
	
	if(g_serialbus_usart_number == USART_0)
     d12:	80 91 4a 40 	lds	r24, 0x404A	; 0x80404a <g_serialbus_usart_number>
     d16:	88 23       	and	r24, r24
     d18:	09 f0       	breq	.+2      	; 0xd1c <__vector_20+0xd0>
     d1a:	45 c0       	rjmp	.+138    	; 0xda6 <__vector_20+0x15a>
	{
		static SerialbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
     d1c:	80 91 4c 44 	lds	r24, 0x444C	; 0x80444c <_ZZ11__vector_20E4buff_0>
     d20:	90 91 4d 44 	lds	r25, 0x444D	; 0x80444d <_ZZ11__vector_20E4buff_0+0x1>
     d24:	89 2b       	or	r24, r25
     d26:	31 f4       	brne	.+12     	; 0xd34 <__vector_20+0xe8>
		{
			buff = nextFullSBTxBuffer();
     d28:	0e 94 15 5d 	call	0xba2a	; 0xba2a <nextFullSBTxBuffer>
     d2c:	80 93 4c 44 	sts	0x444C, r24	; 0x80444c <_ZZ11__vector_20E4buff_0>
     d30:	90 93 4d 44 	sts	0x444D, r25	; 0x80444d <_ZZ11__vector_20E4buff_0+0x1>
		}

		if((*buff)[charIndex])
     d34:	20 91 4c 44 	lds	r18, 0x444C	; 0x80444c <_ZZ11__vector_20E4buff_0>
     d38:	30 91 4d 44 	lds	r19, 0x444D	; 0x80444d <_ZZ11__vector_20E4buff_0+0x1>
     d3c:	80 91 4e 44 	lds	r24, 0x444E	; 0x80444e <_ZZ11__vector_20E9charIndex_0>
     d40:	88 2f       	mov	r24, r24
     d42:	90 e0       	ldi	r25, 0x00	; 0
     d44:	82 0f       	add	r24, r18
     d46:	93 1f       	adc	r25, r19
     d48:	fc 01       	movw	r30, r24
     d4a:	80 81       	ld	r24, Z
     d4c:	88 23       	and	r24, r24
     d4e:	a9 f0       	breq	.+42     	; 0xd7a <__vector_20+0x12e>
		{
			/* Put data into buffer, sends the data */
			USART0.TXDATAL = (*buff)[charIndex++];
     d50:	80 e0       	ldi	r24, 0x00	; 0
     d52:	98 e0       	ldi	r25, 0x08	; 8
     d54:	40 91 4c 44 	lds	r20, 0x444C	; 0x80444c <_ZZ11__vector_20E4buff_0>
     d58:	50 91 4d 44 	lds	r21, 0x444D	; 0x80444d <_ZZ11__vector_20E4buff_0+0x1>
     d5c:	20 91 4e 44 	lds	r18, 0x444E	; 0x80444e <_ZZ11__vector_20E9charIndex_0>
     d60:	31 e0       	ldi	r19, 0x01	; 1
     d62:	32 0f       	add	r19, r18
     d64:	30 93 4e 44 	sts	0x444E, r19	; 0x80444e <_ZZ11__vector_20E9charIndex_0>
     d68:	22 2f       	mov	r18, r18
     d6a:	30 e0       	ldi	r19, 0x00	; 0
     d6c:	24 0f       	add	r18, r20
     d6e:	35 1f       	adc	r19, r21
     d70:	f9 01       	movw	r30, r18
     d72:	20 81       	ld	r18, Z
     d74:	fc 01       	movw	r30, r24
     d76:	22 83       	std	Z+2, r18	; 0x02
			{
				serialbus_end_tx();
			}
		}
	}
}
     d78:	16 c0       	rjmp	.+44     	; 0xda6 <__vector_20+0x15a>
			/* Put data into buffer, sends the data */
			USART0.TXDATAL = (*buff)[charIndex++];
		}
		else
		{
			charIndex = 0;
     d7a:	10 92 4e 44 	sts	0x444E, r1	; 0x80444e <_ZZ11__vector_20E9charIndex_0>
			(*buff)[0] = '\0';
     d7e:	80 91 4c 44 	lds	r24, 0x444C	; 0x80444c <_ZZ11__vector_20E4buff_0>
     d82:	90 91 4d 44 	lds	r25, 0x444D	; 0x80444d <_ZZ11__vector_20E4buff_0+0x1>
     d86:	fc 01       	movw	r30, r24
     d88:	10 82       	st	Z, r1
			buff = nextFullSBTxBuffer();
     d8a:	0e 94 15 5d 	call	0xba2a	; 0xba2a <nextFullSBTxBuffer>
     d8e:	80 93 4c 44 	sts	0x444C, r24	; 0x80444c <_ZZ11__vector_20E4buff_0>
     d92:	90 93 4d 44 	sts	0x444D, r25	; 0x80444d <_ZZ11__vector_20E4buff_0+0x1>
			if(!buff)
     d96:	80 91 4c 44 	lds	r24, 0x444C	; 0x80444c <_ZZ11__vector_20E4buff_0>
     d9a:	90 91 4d 44 	lds	r25, 0x444D	; 0x80444d <_ZZ11__vector_20E4buff_0+0x1>
     d9e:	89 2b       	or	r24, r25
     da0:	11 f4       	brne	.+4      	; 0xda6 <__vector_20+0x15a>
			{
				serialbus_end_tx();
     da2:	0e 94 1e 5e 	call	0xbc3c	; 0xbc3c <serialbus_end_tx>
			}
		}
	}
}
     da6:	00 00       	nop
     da8:	df 91       	pop	r29
     daa:	cf 91       	pop	r28
     dac:	ff 91       	pop	r31
     dae:	ef 91       	pop	r30
     db0:	bf 91       	pop	r27
     db2:	af 91       	pop	r26
     db4:	9f 91       	pop	r25
     db6:	8f 91       	pop	r24
     db8:	7f 91       	pop	r23
     dba:	6f 91       	pop	r22
     dbc:	5f 91       	pop	r21
     dbe:	4f 91       	pop	r20
     dc0:	3f 91       	pop	r19
     dc2:	2f 91       	pop	r18
     dc4:	0f 90       	pop	r0
     dc6:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
     dca:	0f 90       	pop	r0
     dcc:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
     dd0:	0f 90       	pop	r0
     dd2:	1f 90       	pop	r1
     dd4:	18 95       	reti

00000dd6 <__vector_56>:

/**

*/
ISR(USART4_DRE_vect)
{
     dd6:	1f 92       	push	r1
     dd8:	0f 92       	push	r0
     dda:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
     dde:	0f 92       	push	r0
     de0:	11 24       	eor	r1, r1
     de2:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
     de6:	0f 92       	push	r0
     de8:	2f 93       	push	r18
     dea:	3f 93       	push	r19
     dec:	4f 93       	push	r20
     dee:	5f 93       	push	r21
     df0:	6f 93       	push	r22
     df2:	7f 93       	push	r23
     df4:	8f 93       	push	r24
     df6:	9f 93       	push	r25
     df8:	af 93       	push	r26
     dfa:	bf 93       	push	r27
     dfc:	ef 93       	push	r30
     dfe:	ff 93       	push	r31
     e00:	cf 93       	push	r28
     e02:	df 93       	push	r29
     e04:	cd b7       	in	r28, 0x3d	; 61
     e06:	de b7       	in	r29, 0x3e	; 62
	if(g_linkbus_usart_number == USART_4)
     e08:	80 91 44 40 	lds	r24, 0x4044	; 0x804044 <g_linkbus_usart_number>
     e0c:	84 30       	cpi	r24, 0x04	; 4
     e0e:	09 f0       	breq	.+2      	; 0xe12 <__vector_56+0x3c>
     e10:	45 c0       	rjmp	.+138    	; 0xe9c <__vector_56+0xc6>
	{
		static LinkbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
     e12:	80 91 4f 44 	lds	r24, 0x444F	; 0x80444f <_ZZ11__vector_56E4buff>
     e16:	90 91 50 44 	lds	r25, 0x4450	; 0x804450 <_ZZ11__vector_56E4buff+0x1>
     e1a:	89 2b       	or	r24, r25
     e1c:	31 f4       	brne	.+12     	; 0xe2a <__vector_56+0x54>
		{
			buff = nextFullLBTxBuffer();
     e1e:	0e 94 5f 54 	call	0xa8be	; 0xa8be <_Z18nextFullLBTxBufferv>
     e22:	80 93 4f 44 	sts	0x444F, r24	; 0x80444f <_ZZ11__vector_56E4buff>
     e26:	90 93 50 44 	sts	0x4450, r25	; 0x804450 <_ZZ11__vector_56E4buff+0x1>
		}

		if((*buff)[charIndex])
     e2a:	20 91 4f 44 	lds	r18, 0x444F	; 0x80444f <_ZZ11__vector_56E4buff>
     e2e:	30 91 50 44 	lds	r19, 0x4450	; 0x804450 <_ZZ11__vector_56E4buff+0x1>
     e32:	80 91 51 44 	lds	r24, 0x4451	; 0x804451 <_ZZ11__vector_56E9charIndex>
     e36:	88 2f       	mov	r24, r24
     e38:	90 e0       	ldi	r25, 0x00	; 0
     e3a:	82 0f       	add	r24, r18
     e3c:	93 1f       	adc	r25, r19
     e3e:	fc 01       	movw	r30, r24
     e40:	80 81       	ld	r24, Z
     e42:	88 23       	and	r24, r24
     e44:	a9 f0       	breq	.+42     	; 0xe70 <__vector_56+0x9a>
		{
			/* Put data into buffer, sends the data */
			USART4.TXDATAL = (*buff)[charIndex++];
     e46:	80 e8       	ldi	r24, 0x80	; 128
     e48:	98 e0       	ldi	r25, 0x08	; 8
     e4a:	40 91 4f 44 	lds	r20, 0x444F	; 0x80444f <_ZZ11__vector_56E4buff>
     e4e:	50 91 50 44 	lds	r21, 0x4450	; 0x804450 <_ZZ11__vector_56E4buff+0x1>
     e52:	20 91 51 44 	lds	r18, 0x4451	; 0x804451 <_ZZ11__vector_56E9charIndex>
     e56:	31 e0       	ldi	r19, 0x01	; 1
     e58:	32 0f       	add	r19, r18
     e5a:	30 93 51 44 	sts	0x4451, r19	; 0x804451 <_ZZ11__vector_56E9charIndex>
     e5e:	22 2f       	mov	r18, r18
     e60:	30 e0       	ldi	r19, 0x00	; 0
     e62:	24 0f       	add	r18, r20
     e64:	35 1f       	adc	r19, r21
     e66:	f9 01       	movw	r30, r18
     e68:	20 81       	ld	r18, Z
     e6a:	fc 01       	movw	r30, r24
     e6c:	22 83       	std	Z+2, r18	; 0x02
     e6e:	16 c0       	rjmp	.+44     	; 0xe9c <__vector_56+0xc6>
		}
		else
		{
			charIndex = 0;
     e70:	10 92 51 44 	sts	0x4451, r1	; 0x804451 <_ZZ11__vector_56E9charIndex>
			(*buff)[0] = '\0';
     e74:	80 91 4f 44 	lds	r24, 0x444F	; 0x80444f <_ZZ11__vector_56E4buff>
     e78:	90 91 50 44 	lds	r25, 0x4450	; 0x804450 <_ZZ11__vector_56E4buff+0x1>
     e7c:	fc 01       	movw	r30, r24
     e7e:	10 82       	st	Z, r1
			buff = nextFullLBTxBuffer();
     e80:	0e 94 5f 54 	call	0xa8be	; 0xa8be <_Z18nextFullLBTxBufferv>
     e84:	80 93 4f 44 	sts	0x444F, r24	; 0x80444f <_ZZ11__vector_56E4buff>
     e88:	90 93 50 44 	sts	0x4450, r25	; 0x804450 <_ZZ11__vector_56E4buff+0x1>
			if(!buff)
     e8c:	80 91 4f 44 	lds	r24, 0x444F	; 0x80444f <_ZZ11__vector_56E4buff>
     e90:	90 91 50 44 	lds	r25, 0x4450	; 0x804450 <_ZZ11__vector_56E4buff+0x1>
     e94:	89 2b       	or	r24, r25
     e96:	11 f4       	brne	.+4      	; 0xe9c <__vector_56+0xc6>
			{
				linkbus_end_tx();
     e98:	0e 94 a4 55 	call	0xab48	; 0xab48 <_Z14linkbus_end_txv>
			}
		}
	}
	
	if(g_serialbus_usart_number == USART_4)
     e9c:	80 91 4a 40 	lds	r24, 0x404A	; 0x80404a <g_serialbus_usart_number>
     ea0:	84 30       	cpi	r24, 0x04	; 4
     ea2:	09 f0       	breq	.+2      	; 0xea6 <__vector_56+0xd0>
     ea4:	45 c0       	rjmp	.+138    	; 0xf30 <__vector_56+0x15a>
	{
		static SerialbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
     ea6:	80 91 52 44 	lds	r24, 0x4452	; 0x804452 <_ZZ11__vector_56E4buff_0>
     eaa:	90 91 53 44 	lds	r25, 0x4453	; 0x804453 <_ZZ11__vector_56E4buff_0+0x1>
     eae:	89 2b       	or	r24, r25
     eb0:	31 f4       	brne	.+12     	; 0xebe <__vector_56+0xe8>
		{
			buff = nextFullSBTxBuffer();
     eb2:	0e 94 15 5d 	call	0xba2a	; 0xba2a <nextFullSBTxBuffer>
     eb6:	80 93 52 44 	sts	0x4452, r24	; 0x804452 <_ZZ11__vector_56E4buff_0>
     eba:	90 93 53 44 	sts	0x4453, r25	; 0x804453 <_ZZ11__vector_56E4buff_0+0x1>
		}

		if((*buff)[charIndex])
     ebe:	20 91 52 44 	lds	r18, 0x4452	; 0x804452 <_ZZ11__vector_56E4buff_0>
     ec2:	30 91 53 44 	lds	r19, 0x4453	; 0x804453 <_ZZ11__vector_56E4buff_0+0x1>
     ec6:	80 91 54 44 	lds	r24, 0x4454	; 0x804454 <_ZZ11__vector_56E9charIndex_0>
     eca:	88 2f       	mov	r24, r24
     ecc:	90 e0       	ldi	r25, 0x00	; 0
     ece:	82 0f       	add	r24, r18
     ed0:	93 1f       	adc	r25, r19
     ed2:	fc 01       	movw	r30, r24
     ed4:	80 81       	ld	r24, Z
     ed6:	88 23       	and	r24, r24
     ed8:	a9 f0       	breq	.+42     	; 0xf04 <__vector_56+0x12e>
		{
			/* Put data into buffer, sends the data */
			USART4.TXDATAL = (*buff)[charIndex++];
     eda:	80 e8       	ldi	r24, 0x80	; 128
     edc:	98 e0       	ldi	r25, 0x08	; 8
     ede:	40 91 52 44 	lds	r20, 0x4452	; 0x804452 <_ZZ11__vector_56E4buff_0>
     ee2:	50 91 53 44 	lds	r21, 0x4453	; 0x804453 <_ZZ11__vector_56E4buff_0+0x1>
     ee6:	20 91 54 44 	lds	r18, 0x4454	; 0x804454 <_ZZ11__vector_56E9charIndex_0>
     eea:	31 e0       	ldi	r19, 0x01	; 1
     eec:	32 0f       	add	r19, r18
     eee:	30 93 54 44 	sts	0x4454, r19	; 0x804454 <_ZZ11__vector_56E9charIndex_0>
     ef2:	22 2f       	mov	r18, r18
     ef4:	30 e0       	ldi	r19, 0x00	; 0
     ef6:	24 0f       	add	r18, r20
     ef8:	35 1f       	adc	r19, r21
     efa:	f9 01       	movw	r30, r18
     efc:	20 81       	ld	r18, Z
     efe:	fc 01       	movw	r30, r24
     f00:	22 83       	std	Z+2, r18	; 0x02
			{
				serialbus_end_tx();
			}
		}
	}
}
     f02:	16 c0       	rjmp	.+44     	; 0xf30 <__vector_56+0x15a>
			/* Put data into buffer, sends the data */
			USART4.TXDATAL = (*buff)[charIndex++];
		}
		else
		{
			charIndex = 0;
     f04:	10 92 54 44 	sts	0x4454, r1	; 0x804454 <_ZZ11__vector_56E9charIndex_0>
			(*buff)[0] = '\0';
     f08:	80 91 52 44 	lds	r24, 0x4452	; 0x804452 <_ZZ11__vector_56E4buff_0>
     f0c:	90 91 53 44 	lds	r25, 0x4453	; 0x804453 <_ZZ11__vector_56E4buff_0+0x1>
     f10:	fc 01       	movw	r30, r24
     f12:	10 82       	st	Z, r1
			buff = nextFullSBTxBuffer();
     f14:	0e 94 15 5d 	call	0xba2a	; 0xba2a <nextFullSBTxBuffer>
     f18:	80 93 52 44 	sts	0x4452, r24	; 0x804452 <_ZZ11__vector_56E4buff_0>
     f1c:	90 93 53 44 	sts	0x4453, r25	; 0x804453 <_ZZ11__vector_56E4buff_0+0x1>
			if(!buff)
     f20:	80 91 52 44 	lds	r24, 0x4452	; 0x804452 <_ZZ11__vector_56E4buff_0>
     f24:	90 91 53 44 	lds	r25, 0x4453	; 0x804453 <_ZZ11__vector_56E4buff_0+0x1>
     f28:	89 2b       	or	r24, r25
     f2a:	11 f4       	brne	.+4      	; 0xf30 <__vector_56+0x15a>
			{
				serialbus_end_tx();
     f2c:	0e 94 1e 5e 	call	0xbc3c	; 0xbc3c <serialbus_end_tx>
			}
		}
	}
}
     f30:	00 00       	nop
     f32:	df 91       	pop	r29
     f34:	cf 91       	pop	r28
     f36:	ff 91       	pop	r31
     f38:	ef 91       	pop	r30
     f3a:	bf 91       	pop	r27
     f3c:	af 91       	pop	r26
     f3e:	9f 91       	pop	r25
     f40:	8f 91       	pop	r24
     f42:	7f 91       	pop	r23
     f44:	6f 91       	pop	r22
     f46:	5f 91       	pop	r21
     f48:	4f 91       	pop	r20
     f4a:	3f 91       	pop	r19
     f4c:	2f 91       	pop	r18
     f4e:	0f 90       	pop	r0
     f50:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
     f54:	0f 90       	pop	r0
     f56:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
     f5a:	0f 90       	pop	r0
     f5c:	1f 90       	pop	r1
     f5e:	18 95       	reti

00000f60 <__vector_31>:

/**

*/
ISR(USART1_RXC_vect)
{
     f60:	1f 92       	push	r1
     f62:	0f 92       	push	r0
     f64:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
     f68:	0f 92       	push	r0
     f6a:	11 24       	eor	r1, r1
     f6c:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
     f70:	0f 92       	push	r0
     f72:	2f 93       	push	r18
     f74:	3f 93       	push	r19
     f76:	4f 93       	push	r20
     f78:	5f 93       	push	r21
     f7a:	6f 93       	push	r22
     f7c:	7f 93       	push	r23
     f7e:	8f 93       	push	r24
     f80:	9f 93       	push	r25
     f82:	af 93       	push	r26
     f84:	bf 93       	push	r27
     f86:	ef 93       	push	r30
     f88:	ff 93       	push	r31
     f8a:	cf 93       	push	r28
     f8c:	df 93       	push	r29
     f8e:	1f 92       	push	r1
     f90:	cd b7       	in	r28, 0x3d	; 61
     f92:	de b7       	in	r29, 0x3e	; 62
	uint8_t rx_char = USART1_get_data();	
     f94:	0e 94 57 71 	call	0xe2ae	; 0xe2ae <USART1_get_data>
     f98:	89 83       	std	Y+1, r24	; 0x01
	
	if(g_linkbus_usart_number == USART_1)
     f9a:	80 91 44 40 	lds	r24, 0x4044	; 0x804044 <g_linkbus_usart_number>
     f9e:	81 30       	cpi	r24, 0x01	; 1
     fa0:	19 f4       	brne	.+6      	; 0xfa8 <__vector_31+0x48>
	{
		linkbus_Rx(rx_char);
     fa2:	89 81       	ldd	r24, Y+1	; 0x01
     fa4:	0e 94 f4 07 	call	0xfe8	; 0xfe8 <_Z10linkbus_Rxh>
	}
	
	if(g_serialbus_usart_number == USART_1)
     fa8:	80 91 4a 40 	lds	r24, 0x404A	; 0x80404a <g_serialbus_usart_number>
     fac:	81 30       	cpi	r24, 0x01	; 1
     fae:	19 f4       	brne	.+6      	; 0xfb6 <__vector_31+0x56>
	{
		serial_Rx(rx_char);
     fb0:	89 81       	ldd	r24, Y+1	; 0x01
     fb2:	0e 94 a1 03 	call	0x742	; 0x742 <_Z9serial_Rxh>
	}
}
     fb6:	00 00       	nop
     fb8:	0f 90       	pop	r0
     fba:	df 91       	pop	r29
     fbc:	cf 91       	pop	r28
     fbe:	ff 91       	pop	r31
     fc0:	ef 91       	pop	r30
     fc2:	bf 91       	pop	r27
     fc4:	af 91       	pop	r26
     fc6:	9f 91       	pop	r25
     fc8:	8f 91       	pop	r24
     fca:	7f 91       	pop	r23
     fcc:	6f 91       	pop	r22
     fce:	5f 91       	pop	r21
     fd0:	4f 91       	pop	r20
     fd2:	3f 91       	pop	r19
     fd4:	2f 91       	pop	r18
     fd6:	0f 90       	pop	r0
     fd8:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
     fdc:	0f 90       	pop	r0
     fde:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
     fe2:	0f 90       	pop	r0
     fe4:	1f 90       	pop	r1
     fe6:	18 95       	reti

00000fe8 <_Z10linkbus_Rxh>:

void linkbus_Rx(uint8_t rx_char)
{
     fe8:	cf 93       	push	r28
     fea:	df 93       	push	r29
     fec:	1f 92       	push	r1
     fee:	cd b7       	in	r28, 0x3d	; 61
     ff0:	de b7       	in	r29, 0x3e	; 62
     ff2:	89 83       	std	Y+1, r24	; 0x01
	static uint8_t field_len = 0;
	static uint32_t tempMsg_ID = 0;
	static bool receiving_msg = false;
	static bool escapeNext = false;

	if(!buff)
     ff4:	80 91 55 44 	lds	r24, 0x4455	; 0x804455 <_ZZ10linkbus_RxhE4buff>
     ff8:	90 91 56 44 	lds	r25, 0x4456	; 0x804456 <_ZZ10linkbus_RxhE4buff+0x1>
     ffc:	89 2b       	or	r24, r25
     ffe:	31 f4       	brne	.+12     	; 0x100c <_Z10linkbus_Rxh+0x24>
	{
		buff = nextEmptyLBRxBuffer();
    1000:	0e 94 ed 54 	call	0xa9da	; 0xa9da <_Z19nextEmptyLBRxBufferv>
    1004:	80 93 55 44 	sts	0x4455, r24	; 0x804455 <_ZZ10linkbus_RxhE4buff>
    1008:	90 93 56 44 	sts	0x4456, r25	; 0x804456 <_ZZ10linkbus_RxhE4buff+0x1>
	}

	if(buff)
    100c:	80 91 55 44 	lds	r24, 0x4455	; 0x804455 <_ZZ10linkbus_RxhE4buff>
    1010:	90 91 56 44 	lds	r25, 0x4456	; 0x804456 <_ZZ10linkbus_RxhE4buff+0x1>
    1014:	89 2b       	or	r24, r25
    1016:	09 f4       	brne	.+2      	; 0x101a <_Z10linkbus_Rxh+0x32>
    1018:	66 c1       	rjmp	.+716    	; 0x12e6 <_Z10linkbus_Rxh+0x2fe>
	{
		rx_char = toupper(rx_char);
    101a:	89 81       	ldd	r24, Y+1	; 0x01
    101c:	88 2f       	mov	r24, r24
    101e:	90 e0       	ldi	r25, 0x00	; 0
    1020:	0e 94 bd 76 	call	0xed7a	; 0xed7a <toupper>
    1024:	89 83       	std	Y+1, r24	; 0x01
		
		if(!escapeNext && (rx_char == '\\'))
    1026:	90 91 57 44 	lds	r25, 0x4457	; 0x804457 <_ZZ10linkbus_RxhE10escapeNext>
    102a:	81 e0       	ldi	r24, 0x01	; 1
    102c:	89 27       	eor	r24, r25
    102e:	88 23       	and	r24, r24
    1030:	39 f0       	breq	.+14     	; 0x1040 <_Z10linkbus_Rxh+0x58>
    1032:	89 81       	ldd	r24, Y+1	; 0x01
    1034:	8c 35       	cpi	r24, 0x5C	; 92
    1036:	21 f4       	brne	.+8      	; 0x1040 <_Z10linkbus_Rxh+0x58>
		{
			escapeNext = true;
    1038:	81 e0       	ldi	r24, 0x01	; 1
    103a:	80 93 57 44 	sts	0x4457, r24	; 0x804457 <_ZZ10linkbus_RxhE10escapeNext>
    103e:	3c c1       	rjmp	.+632    	; 0x12b8 <_Z10linkbus_Rxh+0x2d0>
		}
		else if(!escapeNext && ((rx_char == '$') || (rx_char == '!')))    /* start of new message = $ */
    1040:	90 91 57 44 	lds	r25, 0x4457	; 0x804457 <_ZZ10linkbus_RxhE10escapeNext>
    1044:	81 e0       	ldi	r24, 0x01	; 1
    1046:	89 27       	eor	r24, r25
    1048:	88 23       	and	r24, r24
    104a:	09 f4       	brne	.+2      	; 0x104e <_Z10linkbus_Rxh+0x66>
    104c:	43 c0       	rjmp	.+134    	; 0x10d4 <_Z10linkbus_Rxh+0xec>
    104e:	89 81       	ldd	r24, Y+1	; 0x01
    1050:	84 32       	cpi	r24, 0x24	; 36
    1052:	19 f0       	breq	.+6      	; 0x105a <_Z10linkbus_Rxh+0x72>
    1054:	89 81       	ldd	r24, Y+1	; 0x01
    1056:	81 32       	cpi	r24, 0x21	; 33
    1058:	e9 f5       	brne	.+122    	; 0x10d4 <_Z10linkbus_Rxh+0xec>
		{
			charIndex = 0;
    105a:	10 92 58 44 	sts	0x4458, r1	; 0x804458 <_ZZ10linkbus_RxhE9charIndex>
			buff->type = (rx_char == '!') ? LINKBUS_MSG_REPLY : LINKBUS_MSG_COMMAND;
    105e:	80 91 55 44 	lds	r24, 0x4455	; 0x804455 <_ZZ10linkbus_RxhE4buff>
    1062:	90 91 56 44 	lds	r25, 0x4456	; 0x804456 <_ZZ10linkbus_RxhE4buff+0x1>
    1066:	29 81       	ldd	r18, Y+1	; 0x01
    1068:	21 32       	cpi	r18, 0x21	; 33
    106a:	11 f4       	brne	.+4      	; 0x1070 <_Z10linkbus_Rxh+0x88>
    106c:	23 e0       	ldi	r18, 0x03	; 3
    106e:	01 c0       	rjmp	.+2      	; 0x1072 <_Z10linkbus_Rxh+0x8a>
    1070:	21 e0       	ldi	r18, 0x01	; 1
    1072:	fc 01       	movw	r30, r24
    1074:	20 83       	st	Z, r18
			field_len = 0;
    1076:	10 92 59 44 	sts	0x4459, r1	; 0x804459 <_ZZ10linkbus_RxhE9field_len>
			tempMsg_ID = 0;
    107a:	10 92 5a 44 	sts	0x445A, r1	; 0x80445a <_ZZ10linkbus_RxhE10tempMsg_ID>
    107e:	10 92 5b 44 	sts	0x445B, r1	; 0x80445b <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
    1082:	10 92 5c 44 	sts	0x445C, r1	; 0x80445c <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
    1086:	10 92 5d 44 	sts	0x445D, r1	; 0x80445d <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
			receiving_msg = true;
    108a:	81 e0       	ldi	r24, 0x01	; 1
    108c:	80 93 5e 44 	sts	0x445E, r24	; 0x80445e <_ZZ10linkbus_RxhE13receiving_msg>

			/* Empty the field buffers */
			for(field_index = 0; field_index < LINKBUS_MAX_MSG_NUMBER_OF_FIELDS; field_index++)
    1090:	10 92 5f 44 	sts	0x445F, r1	; 0x80445f <_ZZ10linkbus_RxhE11field_index>
    1094:	80 91 5f 44 	lds	r24, 0x445F	; 0x80445f <_ZZ10linkbus_RxhE11field_index>
    1098:	83 30       	cpi	r24, 0x03	; 3
    109a:	c8 f4       	brcc	.+50     	; 0x10ce <_Z10linkbus_Rxh+0xe6>
			{
				buff->fields[field_index][0] = '\0';
    109c:	20 91 55 44 	lds	r18, 0x4455	; 0x804455 <_ZZ10linkbus_RxhE4buff>
    10a0:	30 91 56 44 	lds	r19, 0x4456	; 0x804456 <_ZZ10linkbus_RxhE4buff+0x1>
    10a4:	80 91 5f 44 	lds	r24, 0x445F	; 0x80445f <_ZZ10linkbus_RxhE11field_index>
    10a8:	48 2f       	mov	r20, r24
    10aa:	50 e0       	ldi	r21, 0x00	; 0
    10ac:	65 e1       	ldi	r22, 0x15	; 21
    10ae:	64 9f       	mul	r22, r20
    10b0:	c0 01       	movw	r24, r0
    10b2:	65 9f       	mul	r22, r21
    10b4:	90 0d       	add	r25, r0
    10b6:	11 24       	eor	r1, r1
    10b8:	82 0f       	add	r24, r18
    10ba:	93 1f       	adc	r25, r19
    10bc:	03 96       	adiw	r24, 0x03	; 3
    10be:	fc 01       	movw	r30, r24
    10c0:	10 82       	st	Z, r1
			field_len = 0;
			tempMsg_ID = 0;
			receiving_msg = true;

			/* Empty the field buffers */
			for(field_index = 0; field_index < LINKBUS_MAX_MSG_NUMBER_OF_FIELDS; field_index++)
    10c2:	80 91 5f 44 	lds	r24, 0x445F	; 0x80445f <_ZZ10linkbus_RxhE11field_index>
    10c6:	8f 5f       	subi	r24, 0xFF	; 255
    10c8:	80 93 5f 44 	sts	0x445F, r24	; 0x80445f <_ZZ10linkbus_RxhE11field_index>
    10cc:	e3 cf       	rjmp	.-58     	; 0x1094 <_Z10linkbus_Rxh+0xac>
			{
				buff->fields[field_index][0] = '\0';
			}

			field_index = 0;
    10ce:	10 92 5f 44 	sts	0x445F, r1	; 0x80445f <_ZZ10linkbus_RxhE11field_index>
    10d2:	f2 c0       	rjmp	.+484    	; 0x12b8 <_Z10linkbus_Rxh+0x2d0>
		}
		else if(receiving_msg)
    10d4:	80 91 5e 44 	lds	r24, 0x445E	; 0x80445e <_ZZ10linkbus_RxhE13receiving_msg>
    10d8:	88 23       	and	r24, r24
    10da:	09 f4       	brne	.+2      	; 0x10de <_Z10linkbus_Rxh+0xf6>
    10dc:	d0 c0       	rjmp	.+416    	; 0x127e <_Z10linkbus_Rxh+0x296>
		{
			if(!escapeNext && ((rx_char == ',') || (rx_char == ';') || (rx_char == '?')))   /* new field = ,; end of message = ; */
    10de:	90 91 57 44 	lds	r25, 0x4457	; 0x804457 <_ZZ10linkbus_RxhE10escapeNext>
    10e2:	81 e0       	ldi	r24, 0x01	; 1
    10e4:	89 27       	eor	r24, r25
    10e6:	88 23       	and	r24, r24
    10e8:	09 f4       	brne	.+2      	; 0x10ec <_Z10linkbus_Rxh+0x104>
    10ea:	75 c0       	rjmp	.+234    	; 0x11d6 <_Z10linkbus_Rxh+0x1ee>
    10ec:	89 81       	ldd	r24, Y+1	; 0x01
    10ee:	8c 32       	cpi	r24, 0x2C	; 44
    10f0:	39 f0       	breq	.+14     	; 0x1100 <_Z10linkbus_Rxh+0x118>
    10f2:	89 81       	ldd	r24, Y+1	; 0x01
    10f4:	8b 33       	cpi	r24, 0x3B	; 59
    10f6:	21 f0       	breq	.+8      	; 0x1100 <_Z10linkbus_Rxh+0x118>
    10f8:	89 81       	ldd	r24, Y+1	; 0x01
    10fa:	8f 33       	cpi	r24, 0x3F	; 63
    10fc:	09 f0       	breq	.+2      	; 0x1100 <_Z10linkbus_Rxh+0x118>
    10fe:	6b c0       	rjmp	.+214    	; 0x11d6 <_Z10linkbus_Rxh+0x1ee>
			{
				/* if(field_index == 0) // message ID received */
				if(field_index > 0)
    1100:	80 91 5f 44 	lds	r24, 0x445F	; 0x80445f <_ZZ10linkbus_RxhE11field_index>
    1104:	88 23       	and	r24, r24
    1106:	e1 f0       	breq	.+56     	; 0x1140 <_Z10linkbus_Rxh+0x158>
				{
					buff->fields[field_index - 1][field_len] = 0;
    1108:	40 91 55 44 	lds	r20, 0x4455	; 0x804455 <_ZZ10linkbus_RxhE4buff>
    110c:	50 91 56 44 	lds	r21, 0x4456	; 0x804456 <_ZZ10linkbus_RxhE4buff+0x1>
    1110:	80 91 5f 44 	lds	r24, 0x445F	; 0x80445f <_ZZ10linkbus_RxhE11field_index>
    1114:	88 2f       	mov	r24, r24
    1116:	90 e0       	ldi	r25, 0x00	; 0
    1118:	bc 01       	movw	r22, r24
    111a:	61 50       	subi	r22, 0x01	; 1
    111c:	71 09       	sbc	r23, r1
    111e:	80 91 59 44 	lds	r24, 0x4459	; 0x804459 <_ZZ10linkbus_RxhE9field_len>
    1122:	88 2f       	mov	r24, r24
    1124:	90 e0       	ldi	r25, 0x00	; 0
    1126:	e5 e1       	ldi	r30, 0x15	; 21
    1128:	e6 9f       	mul	r30, r22
    112a:	90 01       	movw	r18, r0
    112c:	e7 9f       	mul	r30, r23
    112e:	30 0d       	add	r19, r0
    1130:	11 24       	eor	r1, r1
    1132:	24 0f       	add	r18, r20
    1134:	35 1f       	adc	r19, r21
    1136:	82 0f       	add	r24, r18
    1138:	93 1f       	adc	r25, r19
    113a:	03 96       	adiw	r24, 0x03	; 3
    113c:	fc 01       	movw	r30, r24
    113e:	10 82       	st	Z, r1
				}

				field_index++;
    1140:	80 91 5f 44 	lds	r24, 0x445F	; 0x80445f <_ZZ10linkbus_RxhE11field_index>
    1144:	8f 5f       	subi	r24, 0xFF	; 255
    1146:	80 93 5f 44 	sts	0x445F, r24	; 0x80445f <_ZZ10linkbus_RxhE11field_index>
				field_len = 0;
    114a:	10 92 59 44 	sts	0x4459, r1	; 0x804459 <_ZZ10linkbus_RxhE9field_len>

				if(rx_char == ';')
    114e:	89 81       	ldd	r24, Y+1	; 0x01
    1150:	8b 33       	cpi	r24, 0x3B	; 59
    1152:	b1 f4       	brne	.+44     	; 0x1180 <_Z10linkbus_Rxh+0x198>
				{
					if(charIndex > LINKBUS_MIN_MSG_LENGTH)
    1154:	80 91 58 44 	lds	r24, 0x4458	; 0x804458 <_ZZ10linkbus_RxhE9charIndex>
    1158:	84 30       	cpi	r24, 0x04	; 4
    115a:	78 f0       	brcs	.+30     	; 0x117a <_Z10linkbus_Rxh+0x192>
					{
						buff->id = (LBMessageID)tempMsg_ID;
    115c:	20 91 55 44 	lds	r18, 0x4455	; 0x804455 <_ZZ10linkbus_RxhE4buff>
    1160:	30 91 56 44 	lds	r19, 0x4456	; 0x804456 <_ZZ10linkbus_RxhE4buff+0x1>
    1164:	80 91 5a 44 	lds	r24, 0x445A	; 0x80445a <_ZZ10linkbus_RxhE10tempMsg_ID>
    1168:	90 91 5b 44 	lds	r25, 0x445B	; 0x80445b <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
    116c:	a0 91 5c 44 	lds	r26, 0x445C	; 0x80445c <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
    1170:	b0 91 5d 44 	lds	r27, 0x445D	; 0x80445d <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
    1174:	f9 01       	movw	r30, r18
    1176:	81 83       	std	Z+1, r24	; 0x01
    1178:	92 83       	std	Z+2, r25	; 0x02
					}
					receiving_msg = false;
    117a:	10 92 5e 44 	sts	0x445E, r1	; 0x80445e <_ZZ10linkbus_RxhE13receiving_msg>
    117e:	1f c0       	rjmp	.+62     	; 0x11be <_Z10linkbus_Rxh+0x1d6>
				}
				else if(rx_char == '?')
    1180:	89 81       	ldd	r24, Y+1	; 0x01
    1182:	8f 33       	cpi	r24, 0x3F	; 63
    1184:	e1 f4       	brne	.+56     	; 0x11be <_Z10linkbus_Rxh+0x1d6>
				{
					buff->type = LINKBUS_MSG_QUERY;
    1186:	80 91 55 44 	lds	r24, 0x4455	; 0x804455 <_ZZ10linkbus_RxhE4buff>
    118a:	90 91 56 44 	lds	r25, 0x4456	; 0x804456 <_ZZ10linkbus_RxhE4buff+0x1>
    118e:	22 e0       	ldi	r18, 0x02	; 2
    1190:	fc 01       	movw	r30, r24
    1192:	20 83       	st	Z, r18
					if(charIndex >= LINKBUS_MIN_MSG_LENGTH)
    1194:	80 91 58 44 	lds	r24, 0x4458	; 0x804458 <_ZZ10linkbus_RxhE9charIndex>
    1198:	83 30       	cpi	r24, 0x03	; 3
    119a:	78 f0       	brcs	.+30     	; 0x11ba <_Z10linkbus_Rxh+0x1d2>
					{
						buff->id = (LBMessageID)tempMsg_ID;
    119c:	20 91 55 44 	lds	r18, 0x4455	; 0x804455 <_ZZ10linkbus_RxhE4buff>
    11a0:	30 91 56 44 	lds	r19, 0x4456	; 0x804456 <_ZZ10linkbus_RxhE4buff+0x1>
    11a4:	80 91 5a 44 	lds	r24, 0x445A	; 0x80445a <_ZZ10linkbus_RxhE10tempMsg_ID>
    11a8:	90 91 5b 44 	lds	r25, 0x445B	; 0x80445b <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
    11ac:	a0 91 5c 44 	lds	r26, 0x445C	; 0x80445c <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
    11b0:	b0 91 5d 44 	lds	r27, 0x445D	; 0x80445d <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
    11b4:	f9 01       	movw	r30, r18
    11b6:	81 83       	std	Z+1, r24	; 0x01
    11b8:	92 83       	std	Z+2, r25	; 0x02
					}
					receiving_msg = false;
    11ba:	10 92 5e 44 	sts	0x445E, r1	; 0x80445e <_ZZ10linkbus_RxhE13receiving_msg>
				}

				if(!receiving_msg)
    11be:	90 91 5e 44 	lds	r25, 0x445E	; 0x80445e <_ZZ10linkbus_RxhE13receiving_msg>
    11c2:	81 e0       	ldi	r24, 0x01	; 1
    11c4:	89 27       	eor	r24, r25
    11c6:	88 23       	and	r24, r24
    11c8:	09 f4       	brne	.+2      	; 0x11cc <_Z10linkbus_Rxh+0x1e4>
    11ca:	76 c0       	rjmp	.+236    	; 0x12b8 <_Z10linkbus_Rxh+0x2d0>
				{
					buff = 0;
    11cc:	10 92 55 44 	sts	0x4455, r1	; 0x804455 <_ZZ10linkbus_RxhE4buff>
    11d0:	10 92 56 44 	sts	0x4456, r1	; 0x804456 <_ZZ10linkbus_RxhE4buff+0x1>
						buff->id = (LBMessageID)tempMsg_ID;
					}
					receiving_msg = false;
				}

				if(!receiving_msg)
    11d4:	71 c0       	rjmp	.+226    	; 0x12b8 <_Z10linkbus_Rxh+0x2d0>
					buff = 0;
				}
			}
			else
			{
				if(field_index == 0)    /* message ID received */
    11d6:	80 91 5f 44 	lds	r24, 0x445F	; 0x80445f <_ZZ10linkbus_RxhE11field_index>
    11da:	88 23       	and	r24, r24
    11dc:	61 f5       	brne	.+88     	; 0x1236 <_Z10linkbus_Rxh+0x24e>
				{
					tempMsg_ID = tempMsg_ID * 10 + rx_char;
    11de:	80 91 5a 44 	lds	r24, 0x445A	; 0x80445a <_ZZ10linkbus_RxhE10tempMsg_ID>
    11e2:	90 91 5b 44 	lds	r25, 0x445B	; 0x80445b <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
    11e6:	a0 91 5c 44 	lds	r26, 0x445C	; 0x80445c <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
    11ea:	b0 91 5d 44 	lds	r27, 0x445D	; 0x80445d <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
    11ee:	88 0f       	add	r24, r24
    11f0:	99 1f       	adc	r25, r25
    11f2:	aa 1f       	adc	r26, r26
    11f4:	bb 1f       	adc	r27, r27
    11f6:	9c 01       	movw	r18, r24
    11f8:	ad 01       	movw	r20, r26
    11fa:	22 0f       	add	r18, r18
    11fc:	33 1f       	adc	r19, r19
    11fe:	44 1f       	adc	r20, r20
    1200:	55 1f       	adc	r21, r21
    1202:	22 0f       	add	r18, r18
    1204:	33 1f       	adc	r19, r19
    1206:	44 1f       	adc	r20, r20
    1208:	55 1f       	adc	r21, r21
    120a:	28 0f       	add	r18, r24
    120c:	39 1f       	adc	r19, r25
    120e:	4a 1f       	adc	r20, r26
    1210:	5b 1f       	adc	r21, r27
    1212:	89 81       	ldd	r24, Y+1	; 0x01
    1214:	88 2f       	mov	r24, r24
    1216:	90 e0       	ldi	r25, 0x00	; 0
    1218:	a0 e0       	ldi	r26, 0x00	; 0
    121a:	b0 e0       	ldi	r27, 0x00	; 0
    121c:	82 0f       	add	r24, r18
    121e:	93 1f       	adc	r25, r19
    1220:	a4 1f       	adc	r26, r20
    1222:	b5 1f       	adc	r27, r21
    1224:	80 93 5a 44 	sts	0x445A, r24	; 0x80445a <_ZZ10linkbus_RxhE10tempMsg_ID>
    1228:	90 93 5b 44 	sts	0x445B, r25	; 0x80445b <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
    122c:	a0 93 5c 44 	sts	0x445C, r26	; 0x80445c <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
    1230:	b0 93 5d 44 	sts	0x445D, r27	; 0x80445d <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
    1234:	21 c0       	rjmp	.+66     	; 0x1278 <_Z10linkbus_Rxh+0x290>
				}
				else
				{
					buff->fields[field_index - 1][field_len++] = rx_char;
    1236:	40 91 55 44 	lds	r20, 0x4455	; 0x804455 <_ZZ10linkbus_RxhE4buff>
    123a:	50 91 56 44 	lds	r21, 0x4456	; 0x804456 <_ZZ10linkbus_RxhE4buff+0x1>
    123e:	80 91 5f 44 	lds	r24, 0x445F	; 0x80445f <_ZZ10linkbus_RxhE11field_index>
    1242:	88 2f       	mov	r24, r24
    1244:	90 e0       	ldi	r25, 0x00	; 0
    1246:	bc 01       	movw	r22, r24
    1248:	61 50       	subi	r22, 0x01	; 1
    124a:	71 09       	sbc	r23, r1
    124c:	80 91 59 44 	lds	r24, 0x4459	; 0x804459 <_ZZ10linkbus_RxhE9field_len>
    1250:	91 e0       	ldi	r25, 0x01	; 1
    1252:	98 0f       	add	r25, r24
    1254:	90 93 59 44 	sts	0x4459, r25	; 0x804459 <_ZZ10linkbus_RxhE9field_len>
    1258:	88 2f       	mov	r24, r24
    125a:	90 e0       	ldi	r25, 0x00	; 0
    125c:	e5 e1       	ldi	r30, 0x15	; 21
    125e:	e6 9f       	mul	r30, r22
    1260:	90 01       	movw	r18, r0
    1262:	e7 9f       	mul	r30, r23
    1264:	30 0d       	add	r19, r0
    1266:	11 24       	eor	r1, r1
    1268:	24 0f       	add	r18, r20
    126a:	35 1f       	adc	r19, r21
    126c:	82 0f       	add	r24, r18
    126e:	93 1f       	adc	r25, r19
    1270:	03 96       	adiw	r24, 0x03	; 3
    1272:	29 81       	ldd	r18, Y+1	; 0x01
    1274:	fc 01       	movw	r30, r24
    1276:	20 83       	st	Z, r18
				}
				
				escapeNext = false;
    1278:	10 92 57 44 	sts	0x4457, r1	; 0x804457 <_ZZ10linkbus_RxhE10escapeNext>
    127c:	1d c0       	rjmp	.+58     	; 0x12b8 <_Z10linkbus_Rxh+0x2d0>
			}
		}
		else if(rx_char == 0x0D)    /* Carriage return resets any message in progress */
    127e:	89 81       	ldd	r24, Y+1	; 0x01
    1280:	8d 30       	cpi	r24, 0x0D	; 13
    1282:	d1 f4       	brne	.+52     	; 0x12b8 <_Z10linkbus_Rxh+0x2d0>
		{
			buff->id = LB_MESSAGE_EMPTY;
    1284:	80 91 55 44 	lds	r24, 0x4455	; 0x804455 <_ZZ10linkbus_RxhE4buff>
    1288:	90 91 56 44 	lds	r25, 0x4456	; 0x804456 <_ZZ10linkbus_RxhE4buff+0x1>
    128c:	fc 01       	movw	r30, r24
    128e:	11 82       	std	Z+1, r1	; 0x01
    1290:	12 82       	std	Z+2, r1	; 0x02
			charIndex = LINKBUS_MAX_MSG_LENGTH;
    1292:	82 e3       	ldi	r24, 0x32	; 50
    1294:	80 93 58 44 	sts	0x4458, r24	; 0x804458 <_ZZ10linkbus_RxhE9charIndex>
			field_len = 0;
    1298:	10 92 59 44 	sts	0x4459, r1	; 0x804459 <_ZZ10linkbus_RxhE9field_len>
			tempMsg_ID = 0;
    129c:	10 92 5a 44 	sts	0x445A, r1	; 0x80445a <_ZZ10linkbus_RxhE10tempMsg_ID>
    12a0:	10 92 5b 44 	sts	0x445B, r1	; 0x80445b <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
    12a4:	10 92 5c 44 	sts	0x445C, r1	; 0x80445c <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
    12a8:	10 92 5d 44 	sts	0x445D, r1	; 0x80445d <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
			field_index = 0;
    12ac:	10 92 5f 44 	sts	0x445F, r1	; 0x80445f <_ZZ10linkbus_RxhE11field_index>
			buff = NULL;
    12b0:	10 92 55 44 	sts	0x4455, r1	; 0x804455 <_ZZ10linkbus_RxhE4buff>
    12b4:	10 92 56 44 	sts	0x4456, r1	; 0x804456 <_ZZ10linkbus_RxhE4buff+0x1>
		}

		if(!escapeNext)
    12b8:	90 91 57 44 	lds	r25, 0x4457	; 0x804457 <_ZZ10linkbus_RxhE10escapeNext>
    12bc:	81 e0       	ldi	r24, 0x01	; 1
    12be:	89 27       	eor	r24, r25
    12c0:	88 23       	and	r24, r24
    12c2:	89 f0       	breq	.+34     	; 0x12e6 <_Z10linkbus_Rxh+0x2fe>
		{
			if(++charIndex >= LINKBUS_MAX_MSG_LENGTH)
    12c4:	80 91 58 44 	lds	r24, 0x4458	; 0x804458 <_ZZ10linkbus_RxhE9charIndex>
    12c8:	8f 5f       	subi	r24, 0xFF	; 255
    12ca:	80 93 58 44 	sts	0x4458, r24	; 0x804458 <_ZZ10linkbus_RxhE9charIndex>
    12ce:	90 91 58 44 	lds	r25, 0x4458	; 0x804458 <_ZZ10linkbus_RxhE9charIndex>
    12d2:	81 e0       	ldi	r24, 0x01	; 1
    12d4:	92 33       	cpi	r25, 0x32	; 50
    12d6:	08 f4       	brcc	.+2      	; 0x12da <_Z10linkbus_Rxh+0x2f2>
    12d8:	80 e0       	ldi	r24, 0x00	; 0
    12da:	88 23       	and	r24, r24
    12dc:	21 f0       	breq	.+8      	; 0x12e6 <_Z10linkbus_Rxh+0x2fe>
			{
				receiving_msg = false;
    12de:	10 92 5e 44 	sts	0x445E, r1	; 0x80445e <_ZZ10linkbus_RxhE13receiving_msg>
				charIndex = 0;
    12e2:	10 92 58 44 	sts	0x4458, r1	; 0x804458 <_ZZ10linkbus_RxhE9charIndex>
			}
		}
	}
}
    12e6:	00 00       	nop
    12e8:	0f 90       	pop	r0
    12ea:	df 91       	pop	r29
    12ec:	cf 91       	pop	r28
    12ee:	08 95       	ret

000012f0 <__vector_32>:

/**

*/
ISR(USART1_DRE_vect)
{
    12f0:	1f 92       	push	r1
    12f2:	0f 92       	push	r0
    12f4:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    12f8:	0f 92       	push	r0
    12fa:	11 24       	eor	r1, r1
    12fc:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    1300:	0f 92       	push	r0
    1302:	2f 93       	push	r18
    1304:	3f 93       	push	r19
    1306:	4f 93       	push	r20
    1308:	5f 93       	push	r21
    130a:	6f 93       	push	r22
    130c:	7f 93       	push	r23
    130e:	8f 93       	push	r24
    1310:	9f 93       	push	r25
    1312:	af 93       	push	r26
    1314:	bf 93       	push	r27
    1316:	ef 93       	push	r30
    1318:	ff 93       	push	r31
    131a:	cf 93       	push	r28
    131c:	df 93       	push	r29
    131e:	cd b7       	in	r28, 0x3d	; 61
    1320:	de b7       	in	r29, 0x3e	; 62
	if(g_serialbus_usart_number == USART_1)
    1322:	80 91 4a 40 	lds	r24, 0x404A	; 0x80404a <g_serialbus_usart_number>
    1326:	81 30       	cpi	r24, 0x01	; 1
    1328:	09 f0       	breq	.+2      	; 0x132c <__vector_32+0x3c>
    132a:	45 c0       	rjmp	.+138    	; 0x13b6 <__vector_32+0xc6>
	{
		static SerialbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
    132c:	80 91 60 44 	lds	r24, 0x4460	; 0x804460 <_ZZ11__vector_32E4buff>
    1330:	90 91 61 44 	lds	r25, 0x4461	; 0x804461 <_ZZ11__vector_32E4buff+0x1>
    1334:	89 2b       	or	r24, r25
    1336:	31 f4       	brne	.+12     	; 0x1344 <__vector_32+0x54>
		{
			buff = nextFullSBTxBuffer();
    1338:	0e 94 15 5d 	call	0xba2a	; 0xba2a <nextFullSBTxBuffer>
    133c:	80 93 60 44 	sts	0x4460, r24	; 0x804460 <_ZZ11__vector_32E4buff>
    1340:	90 93 61 44 	sts	0x4461, r25	; 0x804461 <_ZZ11__vector_32E4buff+0x1>
		}

		if((*buff)[charIndex])
    1344:	20 91 60 44 	lds	r18, 0x4460	; 0x804460 <_ZZ11__vector_32E4buff>
    1348:	30 91 61 44 	lds	r19, 0x4461	; 0x804461 <_ZZ11__vector_32E4buff+0x1>
    134c:	80 91 62 44 	lds	r24, 0x4462	; 0x804462 <_ZZ11__vector_32E9charIndex>
    1350:	88 2f       	mov	r24, r24
    1352:	90 e0       	ldi	r25, 0x00	; 0
    1354:	82 0f       	add	r24, r18
    1356:	93 1f       	adc	r25, r19
    1358:	fc 01       	movw	r30, r24
    135a:	80 81       	ld	r24, Z
    135c:	88 23       	and	r24, r24
    135e:	a9 f0       	breq	.+42     	; 0x138a <__vector_32+0x9a>
		{
			/* Put data into buffer, sends the data */
			USART1.TXDATAL = (*buff)[charIndex++];
    1360:	80 e2       	ldi	r24, 0x20	; 32
    1362:	98 e0       	ldi	r25, 0x08	; 8
    1364:	40 91 60 44 	lds	r20, 0x4460	; 0x804460 <_ZZ11__vector_32E4buff>
    1368:	50 91 61 44 	lds	r21, 0x4461	; 0x804461 <_ZZ11__vector_32E4buff+0x1>
    136c:	20 91 62 44 	lds	r18, 0x4462	; 0x804462 <_ZZ11__vector_32E9charIndex>
    1370:	31 e0       	ldi	r19, 0x01	; 1
    1372:	32 0f       	add	r19, r18
    1374:	30 93 62 44 	sts	0x4462, r19	; 0x804462 <_ZZ11__vector_32E9charIndex>
    1378:	22 2f       	mov	r18, r18
    137a:	30 e0       	ldi	r19, 0x00	; 0
    137c:	24 0f       	add	r18, r20
    137e:	35 1f       	adc	r19, r21
    1380:	f9 01       	movw	r30, r18
    1382:	20 81       	ld	r18, Z
    1384:	fc 01       	movw	r30, r24
    1386:	22 83       	std	Z+2, r18	; 0x02
    1388:	16 c0       	rjmp	.+44     	; 0x13b6 <__vector_32+0xc6>
		}
		else
		{
			charIndex = 0;
    138a:	10 92 62 44 	sts	0x4462, r1	; 0x804462 <_ZZ11__vector_32E9charIndex>
			(*buff)[0] = '\0';
    138e:	80 91 60 44 	lds	r24, 0x4460	; 0x804460 <_ZZ11__vector_32E4buff>
    1392:	90 91 61 44 	lds	r25, 0x4461	; 0x804461 <_ZZ11__vector_32E4buff+0x1>
    1396:	fc 01       	movw	r30, r24
    1398:	10 82       	st	Z, r1
			buff = nextFullSBTxBuffer();
    139a:	0e 94 15 5d 	call	0xba2a	; 0xba2a <nextFullSBTxBuffer>
    139e:	80 93 60 44 	sts	0x4460, r24	; 0x804460 <_ZZ11__vector_32E4buff>
    13a2:	90 93 61 44 	sts	0x4461, r25	; 0x804461 <_ZZ11__vector_32E4buff+0x1>
			if(!buff)
    13a6:	80 91 60 44 	lds	r24, 0x4460	; 0x804460 <_ZZ11__vector_32E4buff>
    13aa:	90 91 61 44 	lds	r25, 0x4461	; 0x804461 <_ZZ11__vector_32E4buff+0x1>
    13ae:	89 2b       	or	r24, r25
    13b0:	11 f4       	brne	.+4      	; 0x13b6 <__vector_32+0xc6>
			{
				serialbus_end_tx();
    13b2:	0e 94 1e 5e 	call	0xbc3c	; 0xbc3c <serialbus_end_tx>
			}
		}
	}
	
	if(g_linkbus_usart_number == USART_1)
    13b6:	80 91 44 40 	lds	r24, 0x4044	; 0x804044 <g_linkbus_usart_number>
    13ba:	81 30       	cpi	r24, 0x01	; 1
    13bc:	09 f0       	breq	.+2      	; 0x13c0 <__vector_32+0xd0>
    13be:	45 c0       	rjmp	.+138    	; 0x144a <__vector_32+0x15a>
	{
		static LinkbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
    13c0:	80 91 63 44 	lds	r24, 0x4463	; 0x804463 <_ZZ11__vector_32E4buff_0>
    13c4:	90 91 64 44 	lds	r25, 0x4464	; 0x804464 <_ZZ11__vector_32E4buff_0+0x1>
    13c8:	89 2b       	or	r24, r25
    13ca:	31 f4       	brne	.+12     	; 0x13d8 <__vector_32+0xe8>
		{
			buff = nextFullLBTxBuffer();
    13cc:	0e 94 5f 54 	call	0xa8be	; 0xa8be <_Z18nextFullLBTxBufferv>
    13d0:	80 93 63 44 	sts	0x4463, r24	; 0x804463 <_ZZ11__vector_32E4buff_0>
    13d4:	90 93 64 44 	sts	0x4464, r25	; 0x804464 <_ZZ11__vector_32E4buff_0+0x1>
		}

		if((*buff)[charIndex])
    13d8:	20 91 63 44 	lds	r18, 0x4463	; 0x804463 <_ZZ11__vector_32E4buff_0>
    13dc:	30 91 64 44 	lds	r19, 0x4464	; 0x804464 <_ZZ11__vector_32E4buff_0+0x1>
    13e0:	80 91 65 44 	lds	r24, 0x4465	; 0x804465 <_ZZ11__vector_32E9charIndex_0>
    13e4:	88 2f       	mov	r24, r24
    13e6:	90 e0       	ldi	r25, 0x00	; 0
    13e8:	82 0f       	add	r24, r18
    13ea:	93 1f       	adc	r25, r19
    13ec:	fc 01       	movw	r30, r24
    13ee:	80 81       	ld	r24, Z
    13f0:	88 23       	and	r24, r24
    13f2:	a9 f0       	breq	.+42     	; 0x141e <__vector_32+0x12e>
		{
			/* Put data into buffer, sends the data */
			USART1.TXDATAL = (*buff)[charIndex++];
    13f4:	80 e2       	ldi	r24, 0x20	; 32
    13f6:	98 e0       	ldi	r25, 0x08	; 8
    13f8:	40 91 63 44 	lds	r20, 0x4463	; 0x804463 <_ZZ11__vector_32E4buff_0>
    13fc:	50 91 64 44 	lds	r21, 0x4464	; 0x804464 <_ZZ11__vector_32E4buff_0+0x1>
    1400:	20 91 65 44 	lds	r18, 0x4465	; 0x804465 <_ZZ11__vector_32E9charIndex_0>
    1404:	31 e0       	ldi	r19, 0x01	; 1
    1406:	32 0f       	add	r19, r18
    1408:	30 93 65 44 	sts	0x4465, r19	; 0x804465 <_ZZ11__vector_32E9charIndex_0>
    140c:	22 2f       	mov	r18, r18
    140e:	30 e0       	ldi	r19, 0x00	; 0
    1410:	24 0f       	add	r18, r20
    1412:	35 1f       	adc	r19, r21
    1414:	f9 01       	movw	r30, r18
    1416:	20 81       	ld	r18, Z
    1418:	fc 01       	movw	r30, r24
    141a:	22 83       	std	Z+2, r18	; 0x02
			{
				linkbus_end_tx();
			}
		}
	}
}
    141c:	16 c0       	rjmp	.+44     	; 0x144a <__vector_32+0x15a>
			/* Put data into buffer, sends the data */
			USART1.TXDATAL = (*buff)[charIndex++];
		}
		else
		{
			charIndex = 0;
    141e:	10 92 65 44 	sts	0x4465, r1	; 0x804465 <_ZZ11__vector_32E9charIndex_0>
			(*buff)[0] = '\0';
    1422:	80 91 63 44 	lds	r24, 0x4463	; 0x804463 <_ZZ11__vector_32E4buff_0>
    1426:	90 91 64 44 	lds	r25, 0x4464	; 0x804464 <_ZZ11__vector_32E4buff_0+0x1>
    142a:	fc 01       	movw	r30, r24
    142c:	10 82       	st	Z, r1
			buff = nextFullLBTxBuffer();
    142e:	0e 94 5f 54 	call	0xa8be	; 0xa8be <_Z18nextFullLBTxBufferv>
    1432:	80 93 63 44 	sts	0x4463, r24	; 0x804463 <_ZZ11__vector_32E4buff_0>
    1436:	90 93 64 44 	sts	0x4464, r25	; 0x804464 <_ZZ11__vector_32E4buff_0+0x1>
			if(!buff)
    143a:	80 91 63 44 	lds	r24, 0x4463	; 0x804463 <_ZZ11__vector_32E4buff_0>
    143e:	90 91 64 44 	lds	r25, 0x4464	; 0x804464 <_ZZ11__vector_32E4buff_0+0x1>
    1442:	89 2b       	or	r24, r25
    1444:	11 f4       	brne	.+4      	; 0x144a <__vector_32+0x15a>
			{
				linkbus_end_tx();
    1446:	0e 94 a4 55 	call	0xab48	; 0xab48 <_Z14linkbus_end_txv>
			}
		}
	}
}
    144a:	00 00       	nop
    144c:	df 91       	pop	r29
    144e:	cf 91       	pop	r28
    1450:	ff 91       	pop	r31
    1452:	ef 91       	pop	r30
    1454:	bf 91       	pop	r27
    1456:	af 91       	pop	r26
    1458:	9f 91       	pop	r25
    145a:	8f 91       	pop	r24
    145c:	7f 91       	pop	r23
    145e:	6f 91       	pop	r22
    1460:	5f 91       	pop	r21
    1462:	4f 91       	pop	r20
    1464:	3f 91       	pop	r19
    1466:	2f 91       	pop	r18
    1468:	0f 90       	pop	r0
    146a:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    146e:	0f 90       	pop	r0
    1470:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    1474:	0f 90       	pop	r0
    1476:	1f 90       	pop	r1
    1478:	18 95       	reti

0000147a <PORTA_set_pin_level>:
		else
		{
			sb_send_string((char*)"Event running...\n");
		}
	}
}
    147a:	cf 93       	push	r28
    147c:	df 93       	push	r29
    147e:	00 d0       	rcall	.+0      	; 0x1480 <PORTA_set_pin_level+0x6>
    1480:	cd b7       	in	r28, 0x3d	; 61
    1482:	de b7       	in	r29, 0x3e	; 62
    1484:	89 83       	std	Y+1, r24	; 0x01
    1486:	6a 83       	std	Y+2, r22	; 0x02
    1488:	8a 81       	ldd	r24, Y+2	; 0x02
    148a:	88 23       	and	r24, r24
    148c:	a9 f0       	breq	.+42     	; 0x14b8 <PORTA_set_pin_level+0x3e>
    148e:	20 e0       	ldi	r18, 0x00	; 0
    1490:	30 e0       	ldi	r19, 0x00	; 0
    1492:	80 e0       	ldi	r24, 0x00	; 0
    1494:	90 e0       	ldi	r25, 0x00	; 0
    1496:	fc 01       	movw	r30, r24
    1498:	81 81       	ldd	r24, Z+1	; 0x01
    149a:	68 2f       	mov	r22, r24
    149c:	89 81       	ldd	r24, Y+1	; 0x01
    149e:	48 2f       	mov	r20, r24
    14a0:	50 e0       	ldi	r21, 0x00	; 0
    14a2:	81 e0       	ldi	r24, 0x01	; 1
    14a4:	90 e0       	ldi	r25, 0x00	; 0
    14a6:	02 c0       	rjmp	.+4      	; 0x14ac <PORTA_set_pin_level+0x32>
    14a8:	88 0f       	add	r24, r24
    14aa:	99 1f       	adc	r25, r25
    14ac:	4a 95       	dec	r20
    14ae:	e2 f7       	brpl	.-8      	; 0x14a8 <PORTA_set_pin_level+0x2e>
    14b0:	86 2b       	or	r24, r22
    14b2:	f9 01       	movw	r30, r18
    14b4:	81 83       	std	Z+1, r24	; 0x01
    14b6:	15 c0       	rjmp	.+42     	; 0x14e2 <PORTA_set_pin_level+0x68>
    14b8:	20 e0       	ldi	r18, 0x00	; 0
    14ba:	30 e0       	ldi	r19, 0x00	; 0
    14bc:	80 e0       	ldi	r24, 0x00	; 0
    14be:	90 e0       	ldi	r25, 0x00	; 0
    14c0:	fc 01       	movw	r30, r24
    14c2:	81 81       	ldd	r24, Z+1	; 0x01
    14c4:	68 2f       	mov	r22, r24
    14c6:	89 81       	ldd	r24, Y+1	; 0x01
    14c8:	48 2f       	mov	r20, r24
    14ca:	50 e0       	ldi	r21, 0x00	; 0
    14cc:	81 e0       	ldi	r24, 0x01	; 1
    14ce:	90 e0       	ldi	r25, 0x00	; 0
    14d0:	02 c0       	rjmp	.+4      	; 0x14d6 <PORTA_set_pin_level+0x5c>
    14d2:	88 0f       	add	r24, r24
    14d4:	99 1f       	adc	r25, r25
    14d6:	4a 95       	dec	r20
    14d8:	e2 f7       	brpl	.-8      	; 0x14d2 <PORTA_set_pin_level+0x58>
    14da:	80 95       	com	r24
    14dc:	86 23       	and	r24, r22
    14de:	f9 01       	movw	r30, r18
    14e0:	81 83       	std	Z+1, r24	; 0x01
    14e2:	00 00       	nop
    14e4:	0f 90       	pop	r0
    14e6:	0f 90       	pop	r0
    14e8:	df 91       	pop	r29
    14ea:	cf 91       	pop	r28
    14ec:	08 95       	ret

000014ee <PORTA_get_pin_level>:
    14ee:	cf 93       	push	r28
    14f0:	df 93       	push	r29
    14f2:	1f 92       	push	r1
    14f4:	cd b7       	in	r28, 0x3d	; 61
    14f6:	de b7       	in	r29, 0x3e	; 62
    14f8:	89 83       	std	Y+1, r24	; 0x01
    14fa:	80 e0       	ldi	r24, 0x00	; 0
    14fc:	90 e0       	ldi	r25, 0x00	; 0
    14fe:	fc 01       	movw	r30, r24
    1500:	82 81       	ldd	r24, Z+2	; 0x02
    1502:	88 2f       	mov	r24, r24
    1504:	90 e0       	ldi	r25, 0x00	; 0
    1506:	29 81       	ldd	r18, Y+1	; 0x01
    1508:	22 2f       	mov	r18, r18
    150a:	30 e0       	ldi	r19, 0x00	; 0
    150c:	02 c0       	rjmp	.+4      	; 0x1512 <PORTA_get_pin_level+0x24>
    150e:	95 95       	asr	r25
    1510:	87 95       	ror	r24
    1512:	2a 95       	dec	r18
    1514:	e2 f7       	brpl	.-8      	; 0x150e <PORTA_get_pin_level+0x20>
    1516:	81 70       	andi	r24, 0x01	; 1
    1518:	99 27       	eor	r25, r25
    151a:	21 e0       	ldi	r18, 0x01	; 1
    151c:	89 2b       	or	r24, r25
    151e:	09 f4       	brne	.+2      	; 0x1522 <PORTA_get_pin_level+0x34>
    1520:	20 e0       	ldi	r18, 0x00	; 0
    1522:	82 2f       	mov	r24, r18
    1524:	0f 90       	pop	r0
    1526:	df 91       	pop	r29
    1528:	cf 91       	pop	r28
    152a:	08 95       	ret

0000152c <PORTB_set_pin_level>:
    152c:	cf 93       	push	r28
    152e:	df 93       	push	r29
    1530:	00 d0       	rcall	.+0      	; 0x1532 <PORTB_set_pin_level+0x6>
    1532:	cd b7       	in	r28, 0x3d	; 61
    1534:	de b7       	in	r29, 0x3e	; 62
    1536:	89 83       	std	Y+1, r24	; 0x01
    1538:	6a 83       	std	Y+2, r22	; 0x02
    153a:	8a 81       	ldd	r24, Y+2	; 0x02
    153c:	88 23       	and	r24, r24
    153e:	a9 f0       	breq	.+42     	; 0x156a <PORTB_set_pin_level+0x3e>
    1540:	84 e0       	ldi	r24, 0x04	; 4
    1542:	90 e0       	ldi	r25, 0x00	; 0
    1544:	24 e0       	ldi	r18, 0x04	; 4
    1546:	30 e0       	ldi	r19, 0x00	; 0
    1548:	f9 01       	movw	r30, r18
    154a:	21 81       	ldd	r18, Z+1	; 0x01
    154c:	62 2f       	mov	r22, r18
    154e:	29 81       	ldd	r18, Y+1	; 0x01
    1550:	42 2f       	mov	r20, r18
    1552:	50 e0       	ldi	r21, 0x00	; 0
    1554:	21 e0       	ldi	r18, 0x01	; 1
    1556:	30 e0       	ldi	r19, 0x00	; 0
    1558:	02 c0       	rjmp	.+4      	; 0x155e <PORTB_set_pin_level+0x32>
    155a:	22 0f       	add	r18, r18
    155c:	33 1f       	adc	r19, r19
    155e:	4a 95       	dec	r20
    1560:	e2 f7       	brpl	.-8      	; 0x155a <PORTB_set_pin_level+0x2e>
    1562:	26 2b       	or	r18, r22
    1564:	fc 01       	movw	r30, r24
    1566:	21 83       	std	Z+1, r18	; 0x01
    1568:	15 c0       	rjmp	.+42     	; 0x1594 <PORTB_set_pin_level+0x68>
    156a:	84 e0       	ldi	r24, 0x04	; 4
    156c:	90 e0       	ldi	r25, 0x00	; 0
    156e:	24 e0       	ldi	r18, 0x04	; 4
    1570:	30 e0       	ldi	r19, 0x00	; 0
    1572:	f9 01       	movw	r30, r18
    1574:	21 81       	ldd	r18, Z+1	; 0x01
    1576:	62 2f       	mov	r22, r18
    1578:	29 81       	ldd	r18, Y+1	; 0x01
    157a:	42 2f       	mov	r20, r18
    157c:	50 e0       	ldi	r21, 0x00	; 0
    157e:	21 e0       	ldi	r18, 0x01	; 1
    1580:	30 e0       	ldi	r19, 0x00	; 0
    1582:	02 c0       	rjmp	.+4      	; 0x1588 <PORTB_set_pin_level+0x5c>
    1584:	22 0f       	add	r18, r18
    1586:	33 1f       	adc	r19, r19
    1588:	4a 95       	dec	r20
    158a:	e2 f7       	brpl	.-8      	; 0x1584 <PORTB_set_pin_level+0x58>
    158c:	20 95       	com	r18
    158e:	26 23       	and	r18, r22
    1590:	fc 01       	movw	r30, r24
    1592:	21 83       	std	Z+1, r18	; 0x01
    1594:	00 00       	nop
    1596:	0f 90       	pop	r0
    1598:	0f 90       	pop	r0
    159a:	df 91       	pop	r29
    159c:	cf 91       	pop	r28
    159e:	08 95       	ret

000015a0 <PORTC_get_pin_level>:
    15a0:	cf 93       	push	r28
    15a2:	df 93       	push	r29
    15a4:	1f 92       	push	r1
    15a6:	cd b7       	in	r28, 0x3d	; 61
    15a8:	de b7       	in	r29, 0x3e	; 62
    15aa:	89 83       	std	Y+1, r24	; 0x01
    15ac:	88 e0       	ldi	r24, 0x08	; 8
    15ae:	90 e0       	ldi	r25, 0x00	; 0
    15b0:	fc 01       	movw	r30, r24
    15b2:	82 81       	ldd	r24, Z+2	; 0x02
    15b4:	88 2f       	mov	r24, r24
    15b6:	90 e0       	ldi	r25, 0x00	; 0
    15b8:	29 81       	ldd	r18, Y+1	; 0x01
    15ba:	22 2f       	mov	r18, r18
    15bc:	30 e0       	ldi	r19, 0x00	; 0
    15be:	02 c0       	rjmp	.+4      	; 0x15c4 <PORTC_get_pin_level+0x24>
    15c0:	95 95       	asr	r25
    15c2:	87 95       	ror	r24
    15c4:	2a 95       	dec	r18
    15c6:	e2 f7       	brpl	.-8      	; 0x15c0 <PORTC_get_pin_level+0x20>
    15c8:	81 70       	andi	r24, 0x01	; 1
    15ca:	99 27       	eor	r25, r25
    15cc:	21 e0       	ldi	r18, 0x01	; 1
    15ce:	89 2b       	or	r24, r25
    15d0:	09 f4       	brne	.+2      	; 0x15d4 <PORTC_get_pin_level+0x34>
    15d2:	20 e0       	ldi	r18, 0x00	; 0
    15d4:	82 2f       	mov	r24, r18
    15d6:	0f 90       	pop	r0
    15d8:	df 91       	pop	r29
    15da:	cf 91       	pop	r28
    15dc:	08 95       	ret

000015de <PORTD_get_pin_level>:
    15de:	cf 93       	push	r28
    15e0:	df 93       	push	r29
    15e2:	1f 92       	push	r1
    15e4:	cd b7       	in	r28, 0x3d	; 61
    15e6:	de b7       	in	r29, 0x3e	; 62
    15e8:	89 83       	std	Y+1, r24	; 0x01
    15ea:	8c e0       	ldi	r24, 0x0C	; 12
    15ec:	90 e0       	ldi	r25, 0x00	; 0
    15ee:	fc 01       	movw	r30, r24
    15f0:	82 81       	ldd	r24, Z+2	; 0x02
    15f2:	88 2f       	mov	r24, r24
    15f4:	90 e0       	ldi	r25, 0x00	; 0
    15f6:	29 81       	ldd	r18, Y+1	; 0x01
    15f8:	22 2f       	mov	r18, r18
    15fa:	30 e0       	ldi	r19, 0x00	; 0
    15fc:	02 c0       	rjmp	.+4      	; 0x1602 <PORTD_get_pin_level+0x24>
    15fe:	95 95       	asr	r25
    1600:	87 95       	ror	r24
    1602:	2a 95       	dec	r18
    1604:	e2 f7       	brpl	.-8      	; 0x15fe <PORTD_get_pin_level+0x20>
    1606:	81 70       	andi	r24, 0x01	; 1
    1608:	99 27       	eor	r25, r25
    160a:	21 e0       	ldi	r18, 0x01	; 1
    160c:	89 2b       	or	r24, r25
    160e:	09 f4       	brne	.+2      	; 0x1612 <PORTD_get_pin_level+0x34>
    1610:	20 e0       	ldi	r18, 0x00	; 0
    1612:	82 2f       	mov	r24, r18
    1614:	0f 90       	pop	r0
    1616:	df 91       	pop	r29
    1618:	cf 91       	pop	r28
    161a:	08 95       	ret

0000161c <__vector_6>:
    161c:	1f 92       	push	r1
    161e:	0f 92       	push	r0
    1620:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    1624:	0f 92       	push	r0
    1626:	11 24       	eor	r1, r1
    1628:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    162c:	0f 92       	push	r0
    162e:	2f 93       	push	r18
    1630:	3f 93       	push	r19
    1632:	4f 93       	push	r20
    1634:	5f 93       	push	r21
    1636:	6f 93       	push	r22
    1638:	7f 93       	push	r23
    163a:	8f 93       	push	r24
    163c:	9f 93       	push	r25
    163e:	af 93       	push	r26
    1640:	bf 93       	push	r27
    1642:	ef 93       	push	r30
    1644:	ff 93       	push	r31
    1646:	cf 93       	push	r28
    1648:	df 93       	push	r29
    164a:	1f 92       	push	r1
    164c:	cd b7       	in	r28, 0x3d	; 61
    164e:	de b7       	in	r29, 0x3e	; 62
    1650:	80 e0       	ldi	r24, 0x00	; 0
    1652:	90 e0       	ldi	r25, 0x00	; 0
    1654:	fc 01       	movw	r30, r24
    1656:	83 81       	ldd	r24, Z+3	; 0x03
    1658:	89 83       	std	Y+1, r24	; 0x01
    165a:	89 81       	ldd	r24, Y+1	; 0x01
    165c:	88 2f       	mov	r24, r24
    165e:	90 e0       	ldi	r25, 0x00	; 0
    1660:	84 70       	andi	r24, 0x04	; 4
    1662:	99 27       	eor	r25, r25
    1664:	89 2b       	or	r24, r25
    1666:	09 f4       	brne	.+2      	; 0x166a <__vector_6+0x4e>
    1668:	8d c0       	rjmp	.+282    	; 0x1784 <__vector_6+0x168>
    166a:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <system_tick>
    166e:	80 91 28 45 	lds	r24, 0x4528	; 0x804528 <_ZL10g_sleeping>
    1672:	88 23       	and	r24, r24
    1674:	09 f4       	brne	.+2      	; 0x1678 <__vector_6+0x5c>
    1676:	84 c0       	rjmp	.+264    	; 0x1780 <__vector_6+0x164>
    1678:	90 91 13 40 	lds	r25, 0x4013	; 0x804013 <_ZL11g_sleepType>
    167c:	81 e0       	ldi	r24, 0x01	; 1
    167e:	92 30       	cpi	r25, 0x02	; 2
    1680:	09 f0       	breq	.+2      	; 0x1684 <__vector_6+0x68>
    1682:	80 e0       	ldi	r24, 0x00	; 0
    1684:	88 23       	and	r24, r24
    1686:	09 f4       	brne	.+2      	; 0x168a <__vector_6+0x6e>
    1688:	50 c0       	rjmp	.+160    	; 0x172a <__vector_6+0x10e>
    168a:	80 91 9f 44 	lds	r24, 0x449F	; 0x80449f <_ZL12g_on_the_air>
    168e:	90 91 a0 44 	lds	r25, 0x44A0	; 0x8044a0 <_ZL12g_on_the_air+0x1>
    1692:	a0 91 a1 44 	lds	r26, 0x44A1	; 0x8044a1 <_ZL12g_on_the_air+0x2>
    1696:	b0 91 a2 44 	lds	r27, 0x44A2	; 0x8044a2 <_ZL12g_on_the_air+0x3>
    169a:	88 27       	eor	r24, r24
    169c:	b7 fd       	sbrc	r27, 7
    169e:	83 95       	inc	r24
    16a0:	99 27       	eor	r25, r25
    16a2:	aa 27       	eor	r26, r26
    16a4:	bb 27       	eor	r27, r27
    16a6:	88 23       	and	r24, r24
    16a8:	99 f0       	breq	.+38     	; 0x16d0 <__vector_6+0xb4>
    16aa:	80 91 9f 44 	lds	r24, 0x449F	; 0x80449f <_ZL12g_on_the_air>
    16ae:	90 91 a0 44 	lds	r25, 0x44A0	; 0x8044a0 <_ZL12g_on_the_air+0x1>
    16b2:	a0 91 a1 44 	lds	r26, 0x44A1	; 0x8044a1 <_ZL12g_on_the_air+0x2>
    16b6:	b0 91 a2 44 	lds	r27, 0x44A2	; 0x8044a2 <_ZL12g_on_the_air+0x3>
    16ba:	01 96       	adiw	r24, 0x01	; 1
    16bc:	a1 1d       	adc	r26, r1
    16be:	b1 1d       	adc	r27, r1
    16c0:	80 93 9f 44 	sts	0x449F, r24	; 0x80449f <_ZL12g_on_the_air>
    16c4:	90 93 a0 44 	sts	0x44A0, r25	; 0x8044a0 <_ZL12g_on_the_air+0x1>
    16c8:	a0 93 a1 44 	sts	0x44A1, r26	; 0x8044a1 <_ZL12g_on_the_air+0x2>
    16cc:	b0 93 a2 44 	sts	0x44A2, r27	; 0x8044a2 <_ZL12g_on_the_air+0x3>
    16d0:	80 91 9f 44 	lds	r24, 0x449F	; 0x80449f <_ZL12g_on_the_air>
    16d4:	90 91 a0 44 	lds	r25, 0x44A0	; 0x8044a0 <_ZL12g_on_the_air+0x1>
    16d8:	a0 91 a1 44 	lds	r26, 0x44A1	; 0x8044a1 <_ZL12g_on_the_air+0x2>
    16dc:	b0 91 a2 44 	lds	r27, 0x44A2	; 0x8044a2 <_ZL12g_on_the_air+0x3>
    16e0:	8b 3f       	cpi	r24, 0xFB	; 251
    16e2:	9f 4f       	sbci	r25, 0xFF	; 255
    16e4:	af 4f       	sbci	r26, 0xFF	; 255
    16e6:	bf 4f       	sbci	r27, 0xFF	; 255
    16e8:	9c f4       	brge	.+38     	; 0x1710 <__vector_6+0xf4>
    16ea:	80 e0       	ldi	r24, 0x00	; 0
    16ec:	90 e0       	ldi	r25, 0x00	; 0
    16ee:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <time>
    16f2:	9b 01       	movw	r18, r22
    16f4:	ac 01       	movw	r20, r24
    16f6:	80 91 29 45 	lds	r24, 0x4529	; 0x804529 <_ZL17g_time_to_wake_up>
    16fa:	90 91 2a 45 	lds	r25, 0x452A	; 0x80452a <_ZL17g_time_to_wake_up+0x1>
    16fe:	a0 91 2b 45 	lds	r26, 0x452B	; 0x80452b <_ZL17g_time_to_wake_up+0x2>
    1702:	b0 91 2c 45 	lds	r27, 0x452C	; 0x80452c <_ZL17g_time_to_wake_up+0x3>
    1706:	28 17       	cp	r18, r24
    1708:	39 07       	cpc	r19, r25
    170a:	4a 07       	cpc	r20, r26
    170c:	5b 07       	cpc	r21, r27
    170e:	10 f0       	brcs	.+4      	; 0x1714 <__vector_6+0xf8>
    1710:	81 e0       	ldi	r24, 0x01	; 1
    1712:	01 c0       	rjmp	.+2      	; 0x1716 <__vector_6+0xfa>
    1714:	80 e0       	ldi	r24, 0x00	; 0
    1716:	88 23       	and	r24, r24
    1718:	a9 f1       	breq	.+106    	; 0x1784 <__vector_6+0x168>
    171a:	10 92 27 45 	sts	0x4527, r1	; 0x804527 <_ZL17g_go_to_sleep_now>
    171e:	10 92 28 45 	sts	0x4528, r1	; 0x804528 <_ZL10g_sleeping>
    1722:	81 e0       	ldi	r24, 0x01	; 1
    1724:	80 93 2d 45 	sts	0x452D, r24	; 0x80452d <_ZL12g_awakenedBy>
    1728:	2d c0       	rjmp	.+90     	; 0x1784 <__vector_6+0x168>
    172a:	80 e0       	ldi	r24, 0x00	; 0
    172c:	90 e0       	ldi	r25, 0x00	; 0
    172e:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <time>
    1732:	9b 01       	movw	r18, r22
    1734:	ac 01       	movw	r20, r24
    1736:	80 91 29 45 	lds	r24, 0x4529	; 0x804529 <_ZL17g_time_to_wake_up>
    173a:	90 91 2a 45 	lds	r25, 0x452A	; 0x80452a <_ZL17g_time_to_wake_up+0x1>
    173e:	a0 91 2b 45 	lds	r26, 0x452B	; 0x80452b <_ZL17g_time_to_wake_up+0x2>
    1742:	b0 91 2c 45 	lds	r27, 0x452C	; 0x80452c <_ZL17g_time_to_wake_up+0x3>
    1746:	61 e0       	ldi	r22, 0x01	; 1
    1748:	28 17       	cp	r18, r24
    174a:	39 07       	cpc	r19, r25
    174c:	4a 07       	cpc	r20, r26
    174e:	5b 07       	cpc	r21, r27
    1750:	08 f4       	brcc	.+2      	; 0x1754 <__vector_6+0x138>
    1752:	60 e0       	ldi	r22, 0x00	; 0
    1754:	66 23       	and	r22, r22
    1756:	41 f0       	breq	.+16     	; 0x1768 <__vector_6+0x14c>
    1758:	10 92 27 45 	sts	0x4527, r1	; 0x804527 <_ZL17g_go_to_sleep_now>
    175c:	10 92 28 45 	sts	0x4528, r1	; 0x804528 <_ZL10g_sleeping>
    1760:	81 e0       	ldi	r24, 0x01	; 1
    1762:	80 93 2d 45 	sts	0x452D, r24	; 0x80452d <_ZL12g_awakenedBy>
    1766:	0e c0       	rjmp	.+28     	; 0x1784 <__vector_6+0x168>
    1768:	80 91 06 40 	lds	r24, 0x4006	; 0x804006 <_ZL28g_antenna_connection_changed>
    176c:	88 23       	and	r24, r24
    176e:	51 f0       	breq	.+20     	; 0x1784 <__vector_6+0x168>
    1770:	10 92 27 45 	sts	0x4527, r1	; 0x804527 <_ZL17g_go_to_sleep_now>
    1774:	10 92 28 45 	sts	0x4528, r1	; 0x804528 <_ZL10g_sleeping>
    1778:	82 e0       	ldi	r24, 0x02	; 2
    177a:	80 93 2d 45 	sts	0x452D, r24	; 0x80452d <_ZL12g_awakenedBy>
    177e:	02 c0       	rjmp	.+4      	; 0x1784 <__vector_6+0x168>
    1780:	0e 94 e0 0b 	call	0x17c0	; 0x17c0 <_Z17handle_1sec_tasksv>
    1784:	80 e0       	ldi	r24, 0x00	; 0
    1786:	90 e0       	ldi	r25, 0x00	; 0
    1788:	2f ef       	ldi	r18, 0xFF	; 255
    178a:	fc 01       	movw	r30, r24
    178c:	23 83       	std	Z+3, r18	; 0x03
    178e:	00 00       	nop
    1790:	0f 90       	pop	r0
    1792:	df 91       	pop	r29
    1794:	cf 91       	pop	r28
    1796:	ff 91       	pop	r31
    1798:	ef 91       	pop	r30
    179a:	bf 91       	pop	r27
    179c:	af 91       	pop	r26
    179e:	9f 91       	pop	r25
    17a0:	8f 91       	pop	r24
    17a2:	7f 91       	pop	r23
    17a4:	6f 91       	pop	r22
    17a6:	5f 91       	pop	r21
    17a8:	4f 91       	pop	r20
    17aa:	3f 91       	pop	r19
    17ac:	2f 91       	pop	r18
    17ae:	0f 90       	pop	r0
    17b0:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    17b4:	0f 90       	pop	r0
    17b6:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    17ba:	0f 90       	pop	r0
    17bc:	1f 90       	pop	r1
    17be:	18 95       	reti

000017c0 <_Z17handle_1sec_tasksv>:
    17c0:	ef 92       	push	r14
    17c2:	ff 92       	push	r15
    17c4:	0f 93       	push	r16
    17c6:	1f 93       	push	r17
    17c8:	cf 93       	push	r28
    17ca:	df 93       	push	r29
    17cc:	cd b7       	in	r28, 0x3d	; 61
    17ce:	de b7       	in	r29, 0x3e	; 62
    17d0:	63 97       	sbiw	r28, 0x13	; 19
    17d2:	cd bf       	out	0x3d, r28	; 61
    17d4:	de bf       	out	0x3e, r29	; 62
    17d6:	1d 82       	std	Y+5, r1	; 0x05
    17d8:	1e 82       	std	Y+6, r1	; 0x06
    17da:	1f 82       	std	Y+7, r1	; 0x07
    17dc:	18 86       	std	Y+8, r1	; 0x08
    17de:	80 91 3e 45 	lds	r24, 0x453E	; 0x80453e <g_check_temperature>
    17e2:	90 91 3f 45 	lds	r25, 0x453F	; 0x80453f <g_check_temperature+0x1>
    17e6:	21 e0       	ldi	r18, 0x01	; 1
    17e8:	89 2b       	or	r24, r25
    17ea:	09 f4       	brne	.+2      	; 0x17ee <_Z17handle_1sec_tasksv+0x2e>
    17ec:	20 e0       	ldi	r18, 0x00	; 0
    17ee:	22 23       	and	r18, r18
    17f0:	49 f0       	breq	.+18     	; 0x1804 <_Z17handle_1sec_tasksv+0x44>
    17f2:	80 91 3e 45 	lds	r24, 0x453E	; 0x80453e <g_check_temperature>
    17f6:	90 91 3f 45 	lds	r25, 0x453F	; 0x80453f <g_check_temperature+0x1>
    17fa:	01 97       	sbiw	r24, 0x01	; 1
    17fc:	80 93 3e 45 	sts	0x453E, r24	; 0x80453e <g_check_temperature>
    1800:	90 93 3f 45 	sts	0x453F, r25	; 0x80453f <g_check_temperature+0x1>
    1804:	80 91 22 45 	lds	r24, 0x4522	; 0x804522 <g_event_commenced>
    1808:	88 23       	and	r24, r24
    180a:	09 f4       	brne	.+2      	; 0x180e <_Z17handle_1sec_tasksv+0x4e>
    180c:	6b c0       	rjmp	.+214    	; 0x18e4 <_Z17handle_1sec_tasksv+0x124>
    180e:	80 91 1c 45 	lds	r24, 0x451C	; 0x80451c <g_event_finish_epoch>
    1812:	90 91 1d 45 	lds	r25, 0x451D	; 0x80451d <g_event_finish_epoch+0x1>
    1816:	a0 91 1e 45 	lds	r26, 0x451E	; 0x80451e <g_event_finish_epoch+0x2>
    181a:	b0 91 1f 45 	lds	r27, 0x451F	; 0x80451f <g_event_finish_epoch+0x3>
    181e:	89 2b       	or	r24, r25
    1820:	8a 2b       	or	r24, r26
    1822:	8b 2b       	or	r24, r27
    1824:	71 f0       	breq	.+28     	; 0x1842 <_Z17handle_1sec_tasksv+0x82>
    1826:	90 91 23 45 	lds	r25, 0x4523	; 0x804523 <g_check_for_next_event>
    182a:	81 e0       	ldi	r24, 0x01	; 1
    182c:	89 27       	eor	r24, r25
    182e:	88 23       	and	r24, r24
    1830:	41 f0       	breq	.+16     	; 0x1842 <_Z17handle_1sec_tasksv+0x82>
    1832:	90 91 a7 44 	lds	r25, 0x44A7	; 0x8044a7 <_ZL20g_shutting_down_wifi>
    1836:	81 e0       	ldi	r24, 0x01	; 1
    1838:	89 27       	eor	r24, r25
    183a:	88 23       	and	r24, r24
    183c:	11 f0       	breq	.+4      	; 0x1842 <_Z17handle_1sec_tasksv+0x82>
    183e:	81 e0       	ldi	r24, 0x01	; 1
    1840:	01 c0       	rjmp	.+2      	; 0x1844 <_Z17handle_1sec_tasksv+0x84>
    1842:	80 e0       	ldi	r24, 0x00	; 0
    1844:	88 23       	and	r24, r24
    1846:	09 f4       	brne	.+2      	; 0x184a <_Z17handle_1sec_tasksv+0x8a>
    1848:	4d c0       	rjmp	.+154    	; 0x18e4 <_Z17handle_1sec_tasksv+0x124>
    184a:	80 e0       	ldi	r24, 0x00	; 0
    184c:	90 e0       	ldi	r25, 0x00	; 0
    184e:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <time>
    1852:	dc 01       	movw	r26, r24
    1854:	cb 01       	movw	r24, r22
    1856:	8d 83       	std	Y+5, r24	; 0x05
    1858:	9e 83       	std	Y+6, r25	; 0x06
    185a:	af 83       	std	Y+7, r26	; 0x07
    185c:	b8 87       	std	Y+8, r27	; 0x08
    185e:	80 91 1c 45 	lds	r24, 0x451C	; 0x80451c <g_event_finish_epoch>
    1862:	90 91 1d 45 	lds	r25, 0x451D	; 0x80451d <g_event_finish_epoch+0x1>
    1866:	a0 91 1e 45 	lds	r26, 0x451E	; 0x80451e <g_event_finish_epoch+0x2>
    186a:	b0 91 1f 45 	lds	r27, 0x451F	; 0x80451f <g_event_finish_epoch+0x3>
    186e:	61 e0       	ldi	r22, 0x01	; 1
    1870:	2d 81       	ldd	r18, Y+5	; 0x05
    1872:	3e 81       	ldd	r19, Y+6	; 0x06
    1874:	4f 81       	ldd	r20, Y+7	; 0x07
    1876:	58 85       	ldd	r21, Y+8	; 0x08
    1878:	28 17       	cp	r18, r24
    187a:	39 07       	cpc	r19, r25
    187c:	4a 07       	cpc	r20, r26
    187e:	5b 07       	cpc	r21, r27
    1880:	08 f4       	brcc	.+2      	; 0x1884 <_Z17handle_1sec_tasksv+0xc4>
    1882:	60 e0       	ldi	r22, 0x00	; 0
    1884:	66 23       	and	r22, r22
    1886:	71 f1       	breq	.+92     	; 0x18e4 <_Z17handle_1sec_tasksv+0x124>
    1888:	8c ef       	ldi	r24, 0xFC	; 252
    188a:	80 93 99 44 	sts	0x4499, r24	; 0x804499 <_ZL18g_last_status_code>
    188e:	10 92 9f 44 	sts	0x449F, r1	; 0x80449f <_ZL12g_on_the_air>
    1892:	10 92 a0 44 	sts	0x44A0, r1	; 0x8044a0 <_ZL12g_on_the_air+0x1>
    1896:	10 92 a1 44 	sts	0x44A1, r1	; 0x8044a1 <_ZL12g_on_the_air+0x2>
    189a:	10 92 a2 44 	sts	0x44A2, r1	; 0x8044a2 <_ZL12g_on_the_air+0x3>
    189e:	80 e0       	ldi	r24, 0x00	; 0
    18a0:	0e 94 8c 6d 	call	0xdb18	; 0xdb18 <_Z14keyTransmitterb>
    18a4:	10 92 20 45 	sts	0x4520, r1	; 0x804520 <g_event_enabled>
    18a8:	10 92 22 45 	sts	0x4522, r1	; 0x804522 <g_event_commenced>
    18ac:	81 e0       	ldi	r24, 0x01	; 1
    18ae:	80 93 23 45 	sts	0x4523, r24	; 0x804523 <g_check_for_next_event>
    18b2:	82 e0       	ldi	r24, 0x02	; 2
    18b4:	80 93 a6 44 	sts	0x44A6, r24	; 0x8044a6 <_ZL19g_wifi_enable_delay>
    18b8:	0e 94 0c 24 	call	0x4818	; 0x4818 <_Z18antennaIsConnectedv>
    18bc:	83 e0       	ldi	r24, 0x03	; 3
    18be:	80 93 13 40 	sts	0x4013, r24	; 0x804013 <_ZL11g_sleepType>
    18c2:	80 91 a9 44 	lds	r24, 0x44A9	; 0x8044a9 <_ZL16g_hardware_error>
    18c6:	90 91 aa 44 	lds	r25, 0x44AA	; 0x8044aa <_ZL16g_hardware_error+0x1>
    18ca:	84 70       	andi	r24, 0x04	; 4
    18cc:	99 27       	eor	r25, r25
    18ce:	21 e0       	ldi	r18, 0x01	; 1
    18d0:	89 2b       	or	r24, r25
    18d2:	09 f4       	brne	.+2      	; 0x18d6 <_Z17handle_1sec_tasksv+0x116>
    18d4:	20 e0       	ldi	r18, 0x00	; 0
    18d6:	22 23       	and	r18, r18
    18d8:	29 f0       	breq	.+10     	; 0x18e4 <_Z17handle_1sec_tasksv+0x124>
    18da:	10 92 23 45 	sts	0x4523, r1	; 0x804523 <g_check_for_next_event>
    18de:	81 e0       	ldi	r24, 0x01	; 1
    18e0:	80 93 27 45 	sts	0x4527, r24	; 0x804527 <_ZL17g_go_to_sleep_now>
    18e4:	80 91 20 45 	lds	r24, 0x4520	; 0x804520 <g_event_enabled>
    18e8:	88 23       	and	r24, r24
    18ea:	09 f4       	brne	.+2      	; 0x18ee <_Z17handle_1sec_tasksv+0x12e>
    18ec:	01 c3       	rjmp	.+1538   	; 0x1ef0 <_Z17handle_1sec_tasksv+0x730>
    18ee:	80 91 22 45 	lds	r24, 0x4522	; 0x804522 <g_event_commenced>
    18f2:	88 23       	and	r24, r24
    18f4:	09 f4       	brne	.+2      	; 0x18f8 <_Z17handle_1sec_tasksv+0x138>
    18f6:	4f c2       	rjmp	.+1182   	; 0x1d96 <_Z17handle_1sec_tasksv+0x5d6>
    18f8:	80 91 a3 44 	lds	r24, 0x44A3	; 0x8044a3 <_ZL26g_sendID_seconds_countdown>
    18fc:	90 91 a4 44 	lds	r25, 0x44A4	; 0x8044a4 <_ZL26g_sendID_seconds_countdown+0x1>
    1900:	21 e0       	ldi	r18, 0x01	; 1
    1902:	89 2b       	or	r24, r25
    1904:	09 f4       	brne	.+2      	; 0x1908 <_Z17handle_1sec_tasksv+0x148>
    1906:	20 e0       	ldi	r18, 0x00	; 0
    1908:	22 23       	and	r18, r18
    190a:	49 f0       	breq	.+18     	; 0x191e <_Z17handle_1sec_tasksv+0x15e>
    190c:	80 91 a3 44 	lds	r24, 0x44A3	; 0x8044a3 <_ZL26g_sendID_seconds_countdown>
    1910:	90 91 a4 44 	lds	r25, 0x44A4	; 0x8044a4 <_ZL26g_sendID_seconds_countdown+0x1>
    1914:	01 97       	sbiw	r24, 0x01	; 1
    1916:	80 93 a3 44 	sts	0x44A3, r24	; 0x8044a3 <_ZL26g_sendID_seconds_countdown>
    191a:	90 93 a4 44 	sts	0x44A4, r25	; 0x8044a4 <_ZL26g_sendID_seconds_countdown+0x1>
    191e:	80 91 9f 44 	lds	r24, 0x449F	; 0x80449f <_ZL12g_on_the_air>
    1922:	90 91 a0 44 	lds	r25, 0x44A0	; 0x8044a0 <_ZL12g_on_the_air+0x1>
    1926:	a0 91 a1 44 	lds	r26, 0x44A1	; 0x8044a1 <_ZL12g_on_the_air+0x2>
    192a:	b0 91 a2 44 	lds	r27, 0x44A2	; 0x8044a2 <_ZL12g_on_the_air+0x3>
    192e:	21 e0       	ldi	r18, 0x01	; 1
    1930:	89 2b       	or	r24, r25
    1932:	8a 2b       	or	r24, r26
    1934:	8b 2b       	or	r24, r27
    1936:	09 f4       	brne	.+2      	; 0x193a <_Z17handle_1sec_tasksv+0x17a>
    1938:	20 e0       	ldi	r18, 0x00	; 0
    193a:	22 23       	and	r18, r18
    193c:	09 f4       	brne	.+2      	; 0x1940 <_Z17handle_1sec_tasksv+0x180>
    193e:	d8 c2       	rjmp	.+1456   	; 0x1ef0 <_Z17handle_1sec_tasksv+0x730>
    1940:	80 91 9f 44 	lds	r24, 0x449F	; 0x80449f <_ZL12g_on_the_air>
    1944:	90 91 a0 44 	lds	r25, 0x44A0	; 0x8044a0 <_ZL12g_on_the_air+0x1>
    1948:	a0 91 a1 44 	lds	r26, 0x44A1	; 0x8044a1 <_ZL12g_on_the_air+0x2>
    194c:	b0 91 a2 44 	lds	r27, 0x44A2	; 0x8044a2 <_ZL12g_on_the_air+0x3>
    1950:	21 e0       	ldi	r18, 0x01	; 1
    1952:	18 16       	cp	r1, r24
    1954:	19 06       	cpc	r1, r25
    1956:	1a 06       	cpc	r1, r26
    1958:	1b 06       	cpc	r1, r27
    195a:	0c f0       	brlt	.+2      	; 0x195e <_Z17handle_1sec_tasksv+0x19e>
    195c:	20 e0       	ldi	r18, 0x00	; 0
    195e:	22 23       	and	r18, r18
    1960:	09 f4       	brne	.+2      	; 0x1964 <_Z17handle_1sec_tasksv+0x1a4>
    1962:	b9 c1       	rjmp	.+882    	; 0x1cd6 <_Z17handle_1sec_tasksv+0x516>
    1964:	80 91 9f 44 	lds	r24, 0x449F	; 0x80449f <_ZL12g_on_the_air>
    1968:	90 91 a0 44 	lds	r25, 0x44A0	; 0x8044a0 <_ZL12g_on_the_air+0x1>
    196c:	a0 91 a1 44 	lds	r26, 0x44A1	; 0x8044a1 <_ZL12g_on_the_air+0x2>
    1970:	b0 91 a2 44 	lds	r27, 0x44A2	; 0x8044a2 <_ZL12g_on_the_air+0x3>
    1974:	01 97       	sbiw	r24, 0x01	; 1
    1976:	a1 09       	sbc	r26, r1
    1978:	b1 09       	sbc	r27, r1
    197a:	80 93 9f 44 	sts	0x449F, r24	; 0x80449f <_ZL12g_on_the_air>
    197e:	90 93 a0 44 	sts	0x44A0, r25	; 0x8044a0 <_ZL12g_on_the_air+0x1>
    1982:	a0 93 a1 44 	sts	0x44A1, r26	; 0x8044a1 <_ZL12g_on_the_air+0x2>
    1986:	b0 93 a2 44 	sts	0x44A2, r27	; 0x8044a2 <_ZL12g_on_the_air+0x3>
    198a:	80 91 a3 44 	lds	r24, 0x44A3	; 0x8044a3 <_ZL26g_sendID_seconds_countdown>
    198e:	90 91 a4 44 	lds	r25, 0x44A4	; 0x8044a4 <_ZL26g_sendID_seconds_countdown+0x1>
    1992:	89 2b       	or	r24, r25
    1994:	41 f4       	brne	.+16     	; 0x19a6 <_Z17handle_1sec_tasksv+0x1e6>
    1996:	80 91 14 45 	lds	r24, 0x4514	; 0x804514 <g_time_needed_for_ID>
    199a:	90 91 15 45 	lds	r25, 0x4515	; 0x804515 <g_time_needed_for_ID+0x1>
    199e:	89 2b       	or	r24, r25
    19a0:	11 f0       	breq	.+4      	; 0x19a6 <_Z17handle_1sec_tasksv+0x1e6>
    19a2:	81 e0       	ldi	r24, 0x01	; 1
    19a4:	01 c0       	rjmp	.+2      	; 0x19a8 <_Z17handle_1sec_tasksv+0x1e8>
    19a6:	80 e0       	ldi	r24, 0x00	; 0
    19a8:	88 23       	and	r24, r24
    19aa:	e1 f1       	breq	.+120    	; 0x1a24 <_Z17handle_1sec_tasksv+0x264>
    19ac:	80 91 14 45 	lds	r24, 0x4514	; 0x804514 <g_time_needed_for_ID>
    19b0:	90 91 15 45 	lds	r25, 0x4515	; 0x804515 <g_time_needed_for_ID+0x1>
    19b4:	9c 01       	movw	r18, r24
    19b6:	40 e0       	ldi	r20, 0x00	; 0
    19b8:	50 e0       	ldi	r21, 0x00	; 0
    19ba:	80 91 9f 44 	lds	r24, 0x449F	; 0x80449f <_ZL12g_on_the_air>
    19be:	90 91 a0 44 	lds	r25, 0x44A0	; 0x8044a0 <_ZL12g_on_the_air+0x1>
    19c2:	a0 91 a1 44 	lds	r26, 0x44A1	; 0x8044a1 <_ZL12g_on_the_air+0x2>
    19c6:	b0 91 a2 44 	lds	r27, 0x44A2	; 0x8044a2 <_ZL12g_on_the_air+0x3>
    19ca:	61 e0       	ldi	r22, 0x01	; 1
    19cc:	28 17       	cp	r18, r24
    19ce:	39 07       	cpc	r19, r25
    19d0:	4a 07       	cpc	r20, r26
    19d2:	5b 07       	cpc	r21, r27
    19d4:	09 f0       	breq	.+2      	; 0x19d8 <_Z17handle_1sec_tasksv+0x218>
    19d6:	60 e0       	ldi	r22, 0x00	; 0
    19d8:	66 23       	and	r22, r22
    19da:	21 f1       	breq	.+72     	; 0x1a24 <_Z17handle_1sec_tasksv+0x264>
    19dc:	8f ee       	ldi	r24, 0xEF	; 239
    19de:	80 93 99 44 	sts	0x4499, r24	; 0x804499 <_ZL18g_last_status_code>
    19e2:	80 91 11 40 	lds	r24, 0x4011	; 0x804011 <g_ID_period_seconds>
    19e6:	90 91 12 40 	lds	r25, 0x4012	; 0x804012 <g_ID_period_seconds+0x1>
    19ea:	80 93 a3 44 	sts	0x44A3, r24	; 0x8044a3 <_ZL26g_sendID_seconds_countdown>
    19ee:	90 93 a4 44 	sts	0x44A4, r25	; 0x8044a4 <_ZL26g_sendID_seconds_countdown+0x1>
    19f2:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    19f6:	0e 94 15 21 	call	0x422a	; 0x422a <_Z13throttleValueh>
    19fa:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    19fe:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    1a02:	19 8a       	std	Y+17, r1	; 0x11
    1a04:	ce 01       	movw	r24, r28
    1a06:	41 96       	adiw	r24, 0x11	; 17
    1a08:	40 e0       	ldi	r20, 0x00	; 0
    1a0a:	50 e0       	ldi	r21, 0x00	; 0
    1a0c:	bc 01       	movw	r22, r24
    1a0e:	8f ef       	ldi	r24, 0xFF	; 255
    1a10:	94 e4       	ldi	r25, 0x44	; 68
    1a12:	0e 94 b5 57 	call	0xaf6a	; 0xaf6a <_Z9makeMorsePcPbS0_>
    1a16:	81 e0       	ldi	r24, 0x01	; 1
    1a18:	80 93 25 45 	sts	0x4525, r24	; 0x804525 <g_sending_station_ID>
    1a1c:	10 92 59 45 	sts	0x4559, r1	; 0x804559 <_ZZ17handle_1sec_tasksvE17extendedOnAirTime>
    1a20:	10 92 5a 45 	sts	0x455A, r1	; 0x80455a <_ZZ17handle_1sec_tasksvE17extendedOnAirTime+0x1>
    1a24:	80 91 9f 44 	lds	r24, 0x449F	; 0x80449f <_ZL12g_on_the_air>
    1a28:	90 91 a0 44 	lds	r25, 0x44A0	; 0x8044a0 <_ZL12g_on_the_air+0x1>
    1a2c:	a0 91 a1 44 	lds	r26, 0x44A1	; 0x8044a1 <_ZL12g_on_the_air+0x2>
    1a30:	b0 91 a2 44 	lds	r27, 0x44A2	; 0x8044a2 <_ZL12g_on_the_air+0x3>
    1a34:	21 e0       	ldi	r18, 0x01	; 1
    1a36:	89 2b       	or	r24, r25
    1a38:	8a 2b       	or	r24, r26
    1a3a:	8b 2b       	or	r24, r27
    1a3c:	09 f0       	breq	.+2      	; 0x1a40 <_Z17handle_1sec_tasksv+0x280>
    1a3e:	20 e0       	ldi	r18, 0x00	; 0
    1a40:	22 23       	and	r18, r18
    1a42:	09 f4       	brne	.+2      	; 0x1a46 <_Z17handle_1sec_tasksv+0x286>
    1a44:	55 c2       	rjmp	.+1194   	; 0x1ef0 <_Z17handle_1sec_tasksv+0x730>
    1a46:	80 91 25 45 	lds	r24, 0x4525	; 0x804525 <g_sending_station_ID>
    1a4a:	88 23       	and	r24, r24
    1a4c:	e9 f0       	breq	.+58     	; 0x1a88 <_Z17handle_1sec_tasksv+0x2c8>
    1a4e:	80 91 9f 44 	lds	r24, 0x449F	; 0x80449f <_ZL12g_on_the_air>
    1a52:	90 91 a0 44 	lds	r25, 0x44A0	; 0x8044a0 <_ZL12g_on_the_air+0x1>
    1a56:	a0 91 a1 44 	lds	r26, 0x44A1	; 0x8044a1 <_ZL12g_on_the_air+0x2>
    1a5a:	b0 91 a2 44 	lds	r27, 0x44A2	; 0x8044a2 <_ZL12g_on_the_air+0x3>
    1a5e:	01 96       	adiw	r24, 0x01	; 1
    1a60:	a1 1d       	adc	r26, r1
    1a62:	b1 1d       	adc	r27, r1
    1a64:	80 93 9f 44 	sts	0x449F, r24	; 0x80449f <_ZL12g_on_the_air>
    1a68:	90 93 a0 44 	sts	0x44A0, r25	; 0x8044a0 <_ZL12g_on_the_air+0x1>
    1a6c:	a0 93 a1 44 	sts	0x44A1, r26	; 0x8044a1 <_ZL12g_on_the_air+0x2>
    1a70:	b0 93 a2 44 	sts	0x44A2, r27	; 0x8044a2 <_ZL12g_on_the_air+0x3>
    1a74:	80 91 59 45 	lds	r24, 0x4559	; 0x804559 <_ZZ17handle_1sec_tasksvE17extendedOnAirTime>
    1a78:	90 91 5a 45 	lds	r25, 0x455A	; 0x80455a <_ZZ17handle_1sec_tasksvE17extendedOnAirTime+0x1>
    1a7c:	01 96       	adiw	r24, 0x01	; 1
    1a7e:	80 93 59 45 	sts	0x4559, r24	; 0x804559 <_ZZ17handle_1sec_tasksvE17extendedOnAirTime>
    1a82:	90 93 5a 45 	sts	0x455A, r25	; 0x80455a <_ZZ17handle_1sec_tasksvE17extendedOnAirTime+0x1>
    1a86:	34 c2       	rjmp	.+1128   	; 0x1ef0 <_Z17handle_1sec_tasksv+0x730>
    1a88:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_off_air_seconds>
    1a8c:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    1a90:	21 e0       	ldi	r18, 0x01	; 1
    1a92:	89 2b       	or	r24, r25
    1a94:	09 f4       	brne	.+2      	; 0x1a98 <_Z17handle_1sec_tasksv+0x2d8>
    1a96:	20 e0       	ldi	r18, 0x00	; 0
    1a98:	22 23       	and	r18, r18
    1a9a:	09 f4       	brne	.+2      	; 0x1a9e <_Z17handle_1sec_tasksv+0x2de>
    1a9c:	03 c1       	rjmp	.+518    	; 0x1ca4 <_Z17handle_1sec_tasksv+0x4e4>
    1a9e:	80 e0       	ldi	r24, 0x00	; 0
    1aa0:	0e 94 8c 6d 	call	0xdb18	; 0xdb18 <_Z14keyTransmitterb>
    1aa4:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_off_air_seconds>
    1aa8:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    1aac:	20 91 9f 44 	lds	r18, 0x449F	; 0x80449f <_ZL12g_on_the_air>
    1ab0:	30 91 a0 44 	lds	r19, 0x44A0	; 0x8044a0 <_ZL12g_on_the_air+0x1>
    1ab4:	40 91 a1 44 	lds	r20, 0x44A1	; 0x8044a1 <_ZL12g_on_the_air+0x2>
    1ab8:	50 91 a2 44 	lds	r21, 0x44A2	; 0x8044a2 <_ZL12g_on_the_air+0x3>
    1abc:	09 2e       	mov	r0, r25
    1abe:	00 0c       	add	r0, r0
    1ac0:	aa 0b       	sbc	r26, r26
    1ac2:	bb 0b       	sbc	r27, r27
    1ac4:	79 01       	movw	r14, r18
    1ac6:	8a 01       	movw	r16, r20
    1ac8:	e8 1a       	sub	r14, r24
    1aca:	f9 0a       	sbc	r15, r25
    1acc:	0a 0b       	sbc	r16, r26
    1ace:	1b 0b       	sbc	r17, r27
    1ad0:	d8 01       	movw	r26, r16
    1ad2:	c7 01       	movw	r24, r14
    1ad4:	80 93 9f 44 	sts	0x449F, r24	; 0x80449f <_ZL12g_on_the_air>
    1ad8:	90 93 a0 44 	sts	0x44A0, r25	; 0x8044a0 <_ZL12g_on_the_air+0x1>
    1adc:	a0 93 a1 44 	sts	0x44A1, r26	; 0x8044a1 <_ZL12g_on_the_air+0x2>
    1ae0:	b0 93 a2 44 	sts	0x44A2, r27	; 0x8044a2 <_ZL12g_on_the_air+0x3>
    1ae4:	80 91 59 45 	lds	r24, 0x4559	; 0x804559 <_ZZ17handle_1sec_tasksvE17extendedOnAirTime>
    1ae8:	90 91 5a 45 	lds	r25, 0x455A	; 0x80455a <_ZZ17handle_1sec_tasksvE17extendedOnAirTime+0x1>
    1aec:	9c 01       	movw	r18, r24
    1aee:	40 e0       	ldi	r20, 0x00	; 0
    1af0:	50 e0       	ldi	r21, 0x00	; 0
    1af2:	80 91 9f 44 	lds	r24, 0x449F	; 0x80449f <_ZL12g_on_the_air>
    1af6:	90 91 a0 44 	lds	r25, 0x44A0	; 0x8044a0 <_ZL12g_on_the_air+0x1>
    1afa:	a0 91 a1 44 	lds	r26, 0x44A1	; 0x8044a1 <_ZL12g_on_the_air+0x2>
    1afe:	b0 91 a2 44 	lds	r27, 0x44A2	; 0x8044a2 <_ZL12g_on_the_air+0x3>
    1b02:	82 0f       	add	r24, r18
    1b04:	93 1f       	adc	r25, r19
    1b06:	a4 1f       	adc	r26, r20
    1b08:	b5 1f       	adc	r27, r21
    1b0a:	80 93 9f 44 	sts	0x449F, r24	; 0x80449f <_ZL12g_on_the_air>
    1b0e:	90 93 a0 44 	sts	0x44A0, r25	; 0x8044a0 <_ZL12g_on_the_air+0x1>
    1b12:	a0 93 a1 44 	sts	0x44A1, r26	; 0x8044a1 <_ZL12g_on_the_air+0x2>
    1b16:	b0 93 a2 44 	sts	0x44A2, r27	; 0x8044a2 <_ZL12g_on_the_air+0x3>
    1b1a:	10 92 59 45 	sts	0x4559, r1	; 0x804559 <_ZZ17handle_1sec_tasksvE17extendedOnAirTime>
    1b1e:	10 92 5a 45 	sts	0x455A, r1	; 0x80455a <_ZZ17handle_1sec_tasksvE17extendedOnAirTime+0x1>
    1b22:	81 e0       	ldi	r24, 0x01	; 1
    1b24:	89 8b       	std	Y+17, r24	; 0x11
    1b26:	0e 94 ae 28 	call	0x515c	; 0x515c <_Z14getPatternTextv>
    1b2a:	9c 01       	movw	r18, r24
    1b2c:	ce 01       	movw	r24, r28
    1b2e:	41 96       	adiw	r24, 0x11	; 17
    1b30:	40 e0       	ldi	r20, 0x00	; 0
    1b32:	50 e0       	ldi	r21, 0x00	; 0
    1b34:	bc 01       	movw	r22, r24
    1b36:	c9 01       	movw	r24, r18
    1b38:	0e 94 b5 57 	call	0xaf6a	; 0xaf6a <_Z9makeMorsePcPbS0_>
    1b3c:	8e ef       	ldi	r24, 0xFE	; 254
    1b3e:	80 93 99 44 	sts	0x4499, r24	; 0x804499 <_ZL18g_last_status_code>
    1b42:	60 e0       	ldi	r22, 0x00	; 0
    1b44:	82 e4       	ldi	r24, 0x42	; 66
    1b46:	95 e4       	ldi	r25, 0x45	; 69
    1b48:	0e 94 87 4e 	call	0x9d0e	; 0x9d0e <_ZN4leds6setRedEb>
    1b4c:	19 82       	std	Y+1, r1	; 0x01
    1b4e:	1a 82       	std	Y+2, r1	; 0x02
    1b50:	1b 82       	std	Y+3, r1	; 0x03
    1b52:	1c 82       	std	Y+4, r1	; 0x04
    1b54:	80 e0       	ldi	r24, 0x00	; 0
    1b56:	90 e0       	ldi	r25, 0x00	; 0
    1b58:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <time>
    1b5c:	dc 01       	movw	r26, r24
    1b5e:	cb 01       	movw	r24, r22
    1b60:	8d 83       	std	Y+5, r24	; 0x05
    1b62:	9e 83       	std	Y+6, r25	; 0x06
    1b64:	af 83       	std	Y+7, r26	; 0x07
    1b66:	b8 87       	std	Y+8, r27	; 0x08
    1b68:	80 91 1c 45 	lds	r24, 0x451C	; 0x80451c <g_event_finish_epoch>
    1b6c:	90 91 1d 45 	lds	r25, 0x451D	; 0x80451d <g_event_finish_epoch+0x1>
    1b70:	a0 91 1e 45 	lds	r26, 0x451E	; 0x80451e <g_event_finish_epoch+0x2>
    1b74:	b0 91 1f 45 	lds	r27, 0x451F	; 0x80451f <g_event_finish_epoch+0x3>
    1b78:	61 e0       	ldi	r22, 0x01	; 1
    1b7a:	2d 81       	ldd	r18, Y+5	; 0x05
    1b7c:	3e 81       	ldd	r19, Y+6	; 0x06
    1b7e:	4f 81       	ldd	r20, Y+7	; 0x07
    1b80:	58 85       	ldd	r21, Y+8	; 0x08
    1b82:	28 17       	cp	r18, r24
    1b84:	39 07       	cpc	r19, r25
    1b86:	4a 07       	cpc	r20, r26
    1b88:	5b 07       	cpc	r21, r27
    1b8a:	08 f0       	brcs	.+2      	; 0x1b8e <_Z17handle_1sec_tasksv+0x3ce>
    1b8c:	60 e0       	ldi	r22, 0x00	; 0
    1b8e:	66 23       	and	r22, r22
    1b90:	b1 f0       	breq	.+44     	; 0x1bbe <_Z17handle_1sec_tasksv+0x3fe>
    1b92:	80 91 1c 45 	lds	r24, 0x451C	; 0x80451c <g_event_finish_epoch>
    1b96:	90 91 1d 45 	lds	r25, 0x451D	; 0x80451d <g_event_finish_epoch+0x1>
    1b9a:	a0 91 1e 45 	lds	r26, 0x451E	; 0x80451e <g_event_finish_epoch+0x2>
    1b9e:	b0 91 1f 45 	lds	r27, 0x451F	; 0x80451f <g_event_finish_epoch+0x3>
    1ba2:	2d 81       	ldd	r18, Y+5	; 0x05
    1ba4:	3e 81       	ldd	r19, Y+6	; 0x06
    1ba6:	4f 81       	ldd	r20, Y+7	; 0x07
    1ba8:	58 85       	ldd	r21, Y+8	; 0x08
    1baa:	bc 01       	movw	r22, r24
    1bac:	cd 01       	movw	r24, r26
    1bae:	0e 94 04 72 	call	0xe408	; 0xe408 <_Z7timeDifmm>
    1bb2:	dc 01       	movw	r26, r24
    1bb4:	cb 01       	movw	r24, r22
    1bb6:	89 83       	std	Y+1, r24	; 0x01
    1bb8:	9a 83       	std	Y+2, r25	; 0x02
    1bba:	ab 83       	std	Y+3, r26	; 0x03
    1bbc:	bc 83       	std	Y+4, r27	; 0x04
    1bbe:	20 91 0f 40 	lds	r18, 0x400F	; 0x80400f <g_off_air_seconds>
    1bc2:	30 91 10 40 	lds	r19, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    1bc6:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    1bca:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    1bce:	82 0f       	add	r24, r18
    1bd0:	93 1f       	adc	r25, r19
    1bd2:	0f 96       	adiw	r24, 0x0f	; 15
    1bd4:	9c 01       	movw	r18, r24
    1bd6:	99 0f       	add	r25, r25
    1bd8:	44 0b       	sbc	r20, r20
    1bda:	55 0b       	sbc	r21, r21
    1bdc:	61 e0       	ldi	r22, 0x01	; 1
    1bde:	89 81       	ldd	r24, Y+1	; 0x01
    1be0:	9a 81       	ldd	r25, Y+2	; 0x02
    1be2:	ab 81       	ldd	r26, Y+3	; 0x03
    1be4:	bc 81       	ldd	r27, Y+4	; 0x04
    1be6:	28 17       	cp	r18, r24
    1be8:	39 07       	cpc	r19, r25
    1bea:	4a 07       	cpc	r20, r26
    1bec:	5b 07       	cpc	r21, r27
    1bee:	0c f0       	brlt	.+2      	; 0x1bf2 <_Z17handle_1sec_tasksv+0x432>
    1bf0:	60 e0       	ldi	r22, 0x00	; 0
    1bf2:	66 23       	and	r22, r22
    1bf4:	09 f4       	brne	.+2      	; 0x1bf8 <_Z17handle_1sec_tasksv+0x438>
    1bf6:	7c c1       	rjmp	.+760    	; 0x1ef0 <_Z17handle_1sec_tasksv+0x730>
    1bf8:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_off_air_seconds>
    1bfc:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    1c00:	40 97       	sbiw	r24, 0x10	; 16
    1c02:	34 f0       	brlt	.+12     	; 0x1c10 <_Z17handle_1sec_tasksv+0x450>
    1c04:	80 91 09 40 	lds	r24, 0x4009	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    1c08:	88 23       	and	r24, r24
    1c0a:	11 f4       	brne	.+4      	; 0x1c10 <_Z17handle_1sec_tasksv+0x450>
    1c0c:	81 e0       	ldi	r24, 0x01	; 1
    1c0e:	01 c0       	rjmp	.+2      	; 0x1c12 <_Z17handle_1sec_tasksv+0x452>
    1c10:	80 e0       	ldi	r24, 0x00	; 0
    1c12:	88 23       	and	r24, r24
    1c14:	09 f4       	brne	.+2      	; 0x1c18 <_Z17handle_1sec_tasksv+0x458>
    1c16:	6c c1       	rjmp	.+728    	; 0x1ef0 <_Z17handle_1sec_tasksv+0x730>
    1c18:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_off_air_seconds>
    1c1c:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    1c20:	0a 97       	sbiw	r24, 0x0a	; 10
    1c22:	09 2e       	mov	r0, r25
    1c24:	00 0c       	add	r0, r0
    1c26:	aa 0b       	sbc	r26, r26
    1c28:	bb 0b       	sbc	r27, r27
    1c2a:	89 87       	std	Y+9, r24	; 0x09
    1c2c:	9a 87       	std	Y+10, r25	; 0x0a
    1c2e:	ab 87       	std	Y+11, r26	; 0x0b
    1c30:	bc 87       	std	Y+12, r27	; 0x0c
    1c32:	2d 81       	ldd	r18, Y+5	; 0x05
    1c34:	3e 81       	ldd	r19, Y+6	; 0x06
    1c36:	4f 81       	ldd	r20, Y+7	; 0x07
    1c38:	58 85       	ldd	r21, Y+8	; 0x08
    1c3a:	89 85       	ldd	r24, Y+9	; 0x09
    1c3c:	9a 85       	ldd	r25, Y+10	; 0x0a
    1c3e:	ab 85       	ldd	r26, Y+11	; 0x0b
    1c40:	bc 85       	ldd	r27, Y+12	; 0x0c
    1c42:	82 0f       	add	r24, r18
    1c44:	93 1f       	adc	r25, r19
    1c46:	a4 1f       	adc	r26, r20
    1c48:	b5 1f       	adc	r27, r21
    1c4a:	80 93 29 45 	sts	0x4529, r24	; 0x804529 <_ZL17g_time_to_wake_up>
    1c4e:	90 93 2a 45 	sts	0x452A, r25	; 0x80452a <_ZL17g_time_to_wake_up+0x1>
    1c52:	a0 93 2b 45 	sts	0x452B, r26	; 0x80452b <_ZL17g_time_to_wake_up+0x2>
    1c56:	b0 93 2c 45 	sts	0x452C, r27	; 0x80452c <_ZL17g_time_to_wake_up+0x3>
    1c5a:	82 e0       	ldi	r24, 0x02	; 2
    1c5c:	80 93 13 40 	sts	0x4013, r24	; 0x804013 <_ZL11g_sleepType>
    1c60:	81 e0       	ldi	r24, 0x01	; 1
    1c62:	80 93 27 45 	sts	0x4527, r24	; 0x804527 <_ZL17g_go_to_sleep_now>
    1c66:	1d 86       	std	Y+13, r1	; 0x0d
    1c68:	1e 86       	std	Y+14, r1	; 0x0e
    1c6a:	20 91 a3 44 	lds	r18, 0x44A3	; 0x8044a3 <_ZL26g_sendID_seconds_countdown>
    1c6e:	30 91 a4 44 	lds	r19, 0x44A4	; 0x8044a4 <_ZL26g_sendID_seconds_countdown+0x1>
    1c72:	89 85       	ldd	r24, Y+9	; 0x09
    1c74:	9a 85       	ldd	r25, Y+10	; 0x0a
    1c76:	89 01       	movw	r16, r18
    1c78:	08 1b       	sub	r16, r24
    1c7a:	19 0b       	sbc	r17, r25
    1c7c:	c8 01       	movw	r24, r16
    1c7e:	8f 87       	std	Y+15, r24	; 0x0f
    1c80:	98 8b       	std	Y+16, r25	; 0x10
    1c82:	2d 85       	ldd	r18, Y+13	; 0x0d
    1c84:	3e 85       	ldd	r19, Y+14	; 0x0e
    1c86:	8f 85       	ldd	r24, Y+15	; 0x0f
    1c88:	98 89       	ldd	r25, Y+16	; 0x10
    1c8a:	28 17       	cp	r18, r24
    1c8c:	39 07       	cpc	r19, r25
    1c8e:	1c f4       	brge	.+6      	; 0x1c96 <_Z17handle_1sec_tasksv+0x4d6>
    1c90:	8f 85       	ldd	r24, Y+15	; 0x0f
    1c92:	98 89       	ldd	r25, Y+16	; 0x10
    1c94:	02 c0       	rjmp	.+4      	; 0x1c9a <_Z17handle_1sec_tasksv+0x4da>
    1c96:	8d 85       	ldd	r24, Y+13	; 0x0d
    1c98:	9e 85       	ldd	r25, Y+14	; 0x0e
    1c9a:	80 93 a3 44 	sts	0x44A3, r24	; 0x8044a3 <_ZL26g_sendID_seconds_countdown>
    1c9e:	90 93 a4 44 	sts	0x44A4, r25	; 0x8044a4 <_ZL26g_sendID_seconds_countdown+0x1>
    1ca2:	26 c1       	rjmp	.+588    	; 0x1ef0 <_Z17handle_1sec_tasksv+0x730>
    1ca4:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    1ca8:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    1cac:	09 2e       	mov	r0, r25
    1cae:	00 0c       	add	r0, r0
    1cb0:	aa 0b       	sbc	r26, r26
    1cb2:	bb 0b       	sbc	r27, r27
    1cb4:	80 93 9f 44 	sts	0x449F, r24	; 0x80449f <_ZL12g_on_the_air>
    1cb8:	90 93 a0 44 	sts	0x44A0, r25	; 0x8044a0 <_ZL12g_on_the_air+0x1>
    1cbc:	a0 93 a1 44 	sts	0x44A1, r26	; 0x8044a1 <_ZL12g_on_the_air+0x2>
    1cc0:	b0 93 a2 44 	sts	0x44A2, r27	; 0x8044a2 <_ZL12g_on_the_air+0x3>
    1cc4:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    1cc8:	0e 94 15 21 	call	0x422a	; 0x422a <_Z13throttleValueh>
    1ccc:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    1cd0:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    1cd4:	0d c1       	rjmp	.+538    	; 0x1ef0 <_Z17handle_1sec_tasksv+0x730>
    1cd6:	80 91 9f 44 	lds	r24, 0x449F	; 0x80449f <_ZL12g_on_the_air>
    1cda:	90 91 a0 44 	lds	r25, 0x44A0	; 0x8044a0 <_ZL12g_on_the_air+0x1>
    1cde:	a0 91 a1 44 	lds	r26, 0x44A1	; 0x8044a1 <_ZL12g_on_the_air+0x2>
    1ce2:	b0 91 a2 44 	lds	r27, 0x44A2	; 0x8044a2 <_ZL12g_on_the_air+0x3>
    1ce6:	88 27       	eor	r24, r24
    1ce8:	b7 fd       	sbrc	r27, 7
    1cea:	83 95       	inc	r24
    1cec:	99 27       	eor	r25, r25
    1cee:	aa 27       	eor	r26, r26
    1cf0:	bb 27       	eor	r27, r27
    1cf2:	88 23       	and	r24, r24
    1cf4:	09 f4       	brne	.+2      	; 0x1cf8 <_Z17handle_1sec_tasksv+0x538>
    1cf6:	fc c0       	rjmp	.+504    	; 0x1ef0 <_Z17handle_1sec_tasksv+0x730>
    1cf8:	80 91 9f 44 	lds	r24, 0x449F	; 0x80449f <_ZL12g_on_the_air>
    1cfc:	90 91 a0 44 	lds	r25, 0x44A0	; 0x8044a0 <_ZL12g_on_the_air+0x1>
    1d00:	a0 91 a1 44 	lds	r26, 0x44A1	; 0x8044a1 <_ZL12g_on_the_air+0x2>
    1d04:	b0 91 a2 44 	lds	r27, 0x44A2	; 0x8044a2 <_ZL12g_on_the_air+0x3>
    1d08:	01 96       	adiw	r24, 0x01	; 1
    1d0a:	a1 1d       	adc	r26, r1
    1d0c:	b1 1d       	adc	r27, r1
    1d0e:	80 93 9f 44 	sts	0x449F, r24	; 0x80449f <_ZL12g_on_the_air>
    1d12:	90 93 a0 44 	sts	0x44A0, r25	; 0x8044a0 <_ZL12g_on_the_air+0x1>
    1d16:	a0 93 a1 44 	sts	0x44A1, r26	; 0x8044a1 <_ZL12g_on_the_air+0x2>
    1d1a:	b0 93 a2 44 	sts	0x44A2, r27	; 0x8044a2 <_ZL12g_on_the_air+0x3>
    1d1e:	80 91 9f 44 	lds	r24, 0x449F	; 0x80449f <_ZL12g_on_the_air>
    1d22:	90 91 a0 44 	lds	r25, 0x44A0	; 0x8044a0 <_ZL12g_on_the_air+0x1>
    1d26:	a0 91 a1 44 	lds	r26, 0x44A1	; 0x8044a1 <_ZL12g_on_the_air+0x2>
    1d2a:	b0 91 a2 44 	lds	r27, 0x44A2	; 0x8044a2 <_ZL12g_on_the_air+0x3>
    1d2e:	21 e0       	ldi	r18, 0x01	; 1
    1d30:	89 2b       	or	r24, r25
    1d32:	8a 2b       	or	r24, r26
    1d34:	8b 2b       	or	r24, r27
    1d36:	09 f0       	breq	.+2      	; 0x1d3a <_Z17handle_1sec_tasksv+0x57a>
    1d38:	20 e0       	ldi	r18, 0x00	; 0
    1d3a:	22 23       	and	r18, r18
    1d3c:	09 f4       	brne	.+2      	; 0x1d40 <_Z17handle_1sec_tasksv+0x580>
    1d3e:	d8 c0       	rjmp	.+432    	; 0x1ef0 <_Z17handle_1sec_tasksv+0x730>
    1d40:	10 92 26 45 	sts	0x4526, r1	; 0x804526 <g_muteAfterID>
    1d44:	8d ef       	ldi	r24, 0xFD	; 253
    1d46:	80 93 99 44 	sts	0x4499, r24	; 0x804499 <_ZL18g_last_status_code>
    1d4a:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    1d4e:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    1d52:	09 2e       	mov	r0, r25
    1d54:	00 0c       	add	r0, r0
    1d56:	aa 0b       	sbc	r26, r26
    1d58:	bb 0b       	sbc	r27, r27
    1d5a:	80 93 9f 44 	sts	0x449F, r24	; 0x80449f <_ZL12g_on_the_air>
    1d5e:	90 93 a0 44 	sts	0x44A0, r25	; 0x8044a0 <_ZL12g_on_the_air+0x1>
    1d62:	a0 93 a1 44 	sts	0x44A1, r26	; 0x8044a1 <_ZL12g_on_the_air+0x2>
    1d66:	b0 93 a2 44 	sts	0x44A2, r27	; 0x8044a2 <_ZL12g_on_the_air+0x3>
    1d6a:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    1d6e:	0e 94 15 21 	call	0x422a	; 0x422a <_Z13throttleValueh>
    1d72:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    1d76:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    1d7a:	81 e0       	ldi	r24, 0x01	; 1
    1d7c:	8a 8b       	std	Y+18, r24	; 0x12
    1d7e:	0e 94 ae 28 	call	0x515c	; 0x515c <_Z14getPatternTextv>
    1d82:	9c 01       	movw	r18, r24
    1d84:	ce 01       	movw	r24, r28
    1d86:	42 96       	adiw	r24, 0x12	; 18
    1d88:	40 e0       	ldi	r20, 0x00	; 0
    1d8a:	50 e0       	ldi	r21, 0x00	; 0
    1d8c:	bc 01       	movw	r22, r24
    1d8e:	c9 01       	movw	r24, r18
    1d90:	0e 94 b5 57 	call	0xaf6a	; 0xaf6a <_Z9makeMorsePcPbS0_>
    1d94:	ad c0       	rjmp	.+346    	; 0x1ef0 <_Z17handle_1sec_tasksv+0x730>
    1d96:	80 91 18 45 	lds	r24, 0x4518	; 0x804518 <g_event_start_epoch>
    1d9a:	90 91 19 45 	lds	r25, 0x4519	; 0x804519 <g_event_start_epoch+0x1>
    1d9e:	a0 91 1a 45 	lds	r26, 0x451A	; 0x80451a <g_event_start_epoch+0x2>
    1da2:	b0 91 1b 45 	lds	r27, 0x451B	; 0x80451b <g_event_start_epoch+0x3>
    1da6:	21 e0       	ldi	r18, 0x01	; 1
    1da8:	81 30       	cpi	r24, 0x01	; 1
    1daa:	96 46       	sbci	r25, 0x66	; 102
    1dac:	ae 4e       	sbci	r26, 0xEE	; 238
    1dae:	bf 45       	sbci	r27, 0x5F	; 95
    1db0:	08 f4       	brcc	.+2      	; 0x1db4 <_Z17handle_1sec_tasksv+0x5f4>
    1db2:	20 e0       	ldi	r18, 0x00	; 0
    1db4:	22 23       	and	r18, r18
    1db6:	09 f4       	brne	.+2      	; 0x1dba <_Z17handle_1sec_tasksv+0x5fa>
    1db8:	9b c0       	rjmp	.+310    	; 0x1ef0 <_Z17handle_1sec_tasksv+0x730>
    1dba:	80 e0       	ldi	r24, 0x00	; 0
    1dbc:	90 e0       	ldi	r25, 0x00	; 0
    1dbe:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <time>
    1dc2:	dc 01       	movw	r26, r24
    1dc4:	cb 01       	movw	r24, r22
    1dc6:	8d 83       	std	Y+5, r24	; 0x05
    1dc8:	9e 83       	std	Y+6, r25	; 0x06
    1dca:	af 83       	std	Y+7, r26	; 0x07
    1dcc:	b8 87       	std	Y+8, r27	; 0x08
    1dce:	80 91 18 45 	lds	r24, 0x4518	; 0x804518 <g_event_start_epoch>
    1dd2:	90 91 19 45 	lds	r25, 0x4519	; 0x804519 <g_event_start_epoch+0x1>
    1dd6:	a0 91 1a 45 	lds	r26, 0x451A	; 0x80451a <g_event_start_epoch+0x2>
    1dda:	b0 91 1b 45 	lds	r27, 0x451B	; 0x80451b <g_event_start_epoch+0x3>
    1dde:	61 e0       	ldi	r22, 0x01	; 1
    1de0:	2d 81       	ldd	r18, Y+5	; 0x05
    1de2:	3e 81       	ldd	r19, Y+6	; 0x06
    1de4:	4f 81       	ldd	r20, Y+7	; 0x07
    1de6:	58 85       	ldd	r21, Y+8	; 0x08
    1de8:	28 17       	cp	r18, r24
    1dea:	39 07       	cpc	r19, r25
    1dec:	4a 07       	cpc	r20, r26
    1dee:	5b 07       	cpc	r21, r27
    1df0:	08 f4       	brcc	.+2      	; 0x1df4 <_Z17handle_1sec_tasksv+0x634>
    1df2:	60 e0       	ldi	r22, 0x00	; 0
    1df4:	66 23       	and	r22, r22
    1df6:	09 f4       	brne	.+2      	; 0x1dfa <_Z17handle_1sec_tasksv+0x63a>
    1df8:	7b c0       	rjmp	.+246    	; 0x1ef0 <_Z17handle_1sec_tasksv+0x730>
    1dfa:	81 e0       	ldi	r24, 0x01	; 1
    1dfc:	0e 94 e5 6c 	call	0xd9ca	; 0xd9ca <_Z18powerToTransmitterb>
    1e00:	80 91 16 45 	lds	r24, 0x4516	; 0x804516 <g_intra_cycle_delay_time>
    1e04:	90 91 17 45 	lds	r25, 0x4517	; 0x804517 <g_intra_cycle_delay_time+0x1>
    1e08:	21 e0       	ldi	r18, 0x01	; 1
    1e0a:	89 2b       	or	r24, r25
    1e0c:	09 f4       	brne	.+2      	; 0x1e10 <_Z17handle_1sec_tasksv+0x650>
    1e0e:	20 e0       	ldi	r18, 0x00	; 0
    1e10:	22 23       	and	r18, r18
    1e12:	71 f1       	breq	.+92     	; 0x1e70 <_Z17handle_1sec_tasksv+0x6b0>
    1e14:	8e ef       	ldi	r24, 0xFE	; 254
    1e16:	80 93 99 44 	sts	0x4499, r24	; 0x804499 <_ZL18g_last_status_code>
    1e1a:	80 91 16 45 	lds	r24, 0x4516	; 0x804516 <g_intra_cycle_delay_time>
    1e1e:	90 91 17 45 	lds	r25, 0x4517	; 0x804517 <g_intra_cycle_delay_time+0x1>
    1e22:	91 95       	neg	r25
    1e24:	81 95       	neg	r24
    1e26:	91 09       	sbc	r25, r1
    1e28:	09 2e       	mov	r0, r25
    1e2a:	00 0c       	add	r0, r0
    1e2c:	aa 0b       	sbc	r26, r26
    1e2e:	bb 0b       	sbc	r27, r27
    1e30:	80 93 9f 44 	sts	0x449F, r24	; 0x80449f <_ZL12g_on_the_air>
    1e34:	90 93 a0 44 	sts	0x44A0, r25	; 0x8044a0 <_ZL12g_on_the_air+0x1>
    1e38:	a0 93 a1 44 	sts	0x44A1, r26	; 0x8044a1 <_ZL12g_on_the_air+0x2>
    1e3c:	b0 93 a2 44 	sts	0x44A2, r27	; 0x8044a2 <_ZL12g_on_the_air+0x3>
    1e40:	20 91 16 45 	lds	r18, 0x4516	; 0x804516 <g_intra_cycle_delay_time>
    1e44:	30 91 17 45 	lds	r19, 0x4517	; 0x804517 <g_intra_cycle_delay_time+0x1>
    1e48:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    1e4c:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    1e50:	82 0f       	add	r24, r18
    1e52:	93 1f       	adc	r25, r19
    1e54:	9c 01       	movw	r18, r24
    1e56:	80 91 14 45 	lds	r24, 0x4514	; 0x804514 <g_time_needed_for_ID>
    1e5a:	90 91 15 45 	lds	r25, 0x4515	; 0x804515 <g_time_needed_for_ID+0x1>
    1e5e:	a9 01       	movw	r20, r18
    1e60:	48 1b       	sub	r20, r24
    1e62:	59 0b       	sbc	r21, r25
    1e64:	ca 01       	movw	r24, r20
    1e66:	80 93 a3 44 	sts	0x44A3, r24	; 0x8044a3 <_ZL26g_sendID_seconds_countdown>
    1e6a:	90 93 a4 44 	sts	0x44A4, r25	; 0x8044a4 <_ZL26g_sendID_seconds_countdown+0x1>
    1e6e:	39 c0       	rjmp	.+114    	; 0x1ee2 <_Z17handle_1sec_tasksv+0x722>
    1e70:	8d ef       	ldi	r24, 0xFD	; 253
    1e72:	80 93 99 44 	sts	0x4499, r24	; 0x804499 <_ZL18g_last_status_code>
    1e76:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    1e7a:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    1e7e:	09 2e       	mov	r0, r25
    1e80:	00 0c       	add	r0, r0
    1e82:	aa 0b       	sbc	r26, r26
    1e84:	bb 0b       	sbc	r27, r27
    1e86:	80 93 9f 44 	sts	0x449F, r24	; 0x80449f <_ZL12g_on_the_air>
    1e8a:	90 93 a0 44 	sts	0x44A0, r25	; 0x8044a0 <_ZL12g_on_the_air+0x1>
    1e8e:	a0 93 a1 44 	sts	0x44A1, r26	; 0x8044a1 <_ZL12g_on_the_air+0x2>
    1e92:	b0 93 a2 44 	sts	0x44A2, r27	; 0x8044a2 <_ZL12g_on_the_air+0x3>
    1e96:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    1e9a:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    1e9e:	9c 01       	movw	r18, r24
    1ea0:	80 91 14 45 	lds	r24, 0x4514	; 0x804514 <g_time_needed_for_ID>
    1ea4:	90 91 15 45 	lds	r25, 0x4515	; 0x804515 <g_time_needed_for_ID+0x1>
    1ea8:	79 01       	movw	r14, r18
    1eaa:	e8 1a       	sub	r14, r24
    1eac:	f9 0a       	sbc	r15, r25
    1eae:	c7 01       	movw	r24, r14
    1eb0:	80 93 a3 44 	sts	0x44A3, r24	; 0x8044a3 <_ZL26g_sendID_seconds_countdown>
    1eb4:	90 93 a4 44 	sts	0x44A4, r25	; 0x8044a4 <_ZL26g_sendID_seconds_countdown+0x1>
    1eb8:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    1ebc:	0e 94 15 21 	call	0x422a	; 0x422a <_Z13throttleValueh>
    1ec0:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    1ec4:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    1ec8:	81 e0       	ldi	r24, 0x01	; 1
    1eca:	8b 8b       	std	Y+19, r24	; 0x13
    1ecc:	0e 94 ae 28 	call	0x515c	; 0x515c <_Z14getPatternTextv>
    1ed0:	9c 01       	movw	r18, r24
    1ed2:	ce 01       	movw	r24, r28
    1ed4:	43 96       	adiw	r24, 0x13	; 19
    1ed6:	40 e0       	ldi	r20, 0x00	; 0
    1ed8:	50 e0       	ldi	r21, 0x00	; 0
    1eda:	bc 01       	movw	r22, r24
    1edc:	c9 01       	movw	r24, r18
    1ede:	0e 94 b5 57 	call	0xaf6a	; 0xaf6a <_Z9makeMorsePcPbS0_>
    1ee2:	81 e0       	ldi	r24, 0x01	; 1
    1ee4:	80 93 22 45 	sts	0x4522, r24	; 0x804522 <g_event_commenced>
    1ee8:	82 e4       	ldi	r24, 0x42	; 66
    1eea:	95 e4       	ldi	r25, 0x45	; 69
    1eec:	0e 94 d8 4e 	call	0x9db0	; 0x9db0 <_ZN4leds4initEv>
    1ef0:	90 91 a6 44 	lds	r25, 0x44A6	; 0x8044a6 <_ZL19g_wifi_enable_delay>
    1ef4:	81 e0       	ldi	r24, 0x01	; 1
    1ef6:	99 23       	and	r25, r25
    1ef8:	09 f4       	brne	.+2      	; 0x1efc <_Z17handle_1sec_tasksv+0x73c>
    1efa:	80 e0       	ldi	r24, 0x00	; 0
    1efc:	88 23       	and	r24, r24
    1efe:	c1 f0       	breq	.+48     	; 0x1f30 <_Z17handle_1sec_tasksv+0x770>
    1f00:	80 91 a6 44 	lds	r24, 0x44A6	; 0x8044a6 <_ZL19g_wifi_enable_delay>
    1f04:	81 50       	subi	r24, 0x01	; 1
    1f06:	80 93 a6 44 	sts	0x44A6, r24	; 0x8044a6 <_ZL19g_wifi_enable_delay>
    1f0a:	90 91 a6 44 	lds	r25, 0x44A6	; 0x8044a6 <_ZL19g_wifi_enable_delay>
    1f0e:	81 e0       	ldi	r24, 0x01	; 1
    1f10:	99 23       	and	r25, r25
    1f12:	09 f0       	breq	.+2      	; 0x1f16 <_Z17handle_1sec_tasksv+0x756>
    1f14:	80 e0       	ldi	r24, 0x00	; 0
    1f16:	88 23       	and	r24, r24
    1f18:	09 f4       	brne	.+2      	; 0x1f1c <_Z17handle_1sec_tasksv+0x75c>
    1f1a:	59 c0       	rjmp	.+178    	; 0x1fce <_Z17handle_1sec_tasksv+0x80e>
    1f1c:	81 e0       	ldi	r24, 0x01	; 1
    1f1e:	0e 94 41 48 	call	0x9082	; 0x9082 <_Z10wifi_powerb>
    1f22:	80 e0       	ldi	r24, 0x00	; 0
    1f24:	0e 94 58 48 	call	0x90b0	; 0x90b0 <_Z10wifi_resetb>
    1f28:	88 e7       	ldi	r24, 0x78	; 120
    1f2a:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    1f2e:	4f c0       	rjmp	.+158    	; 0x1fce <_Z17handle_1sec_tasksv+0x80e>
    1f30:	80 91 a7 44 	lds	r24, 0x44A7	; 0x8044a7 <_ZL20g_shutting_down_wifi>
    1f34:	88 23       	and	r24, r24
    1f36:	61 f4       	brne	.+24     	; 0x1f50 <_Z17handle_1sec_tasksv+0x790>
    1f38:	90 91 23 45 	lds	r25, 0x4523	; 0x804523 <g_check_for_next_event>
    1f3c:	81 e0       	ldi	r24, 0x01	; 1
    1f3e:	89 27       	eor	r24, r25
    1f40:	88 23       	and	r24, r24
    1f42:	41 f0       	breq	.+16     	; 0x1f54 <_Z17handle_1sec_tasksv+0x794>
    1f44:	90 91 24 45 	lds	r25, 0x4524	; 0x804524 <g_waiting_for_next_event>
    1f48:	81 e0       	ldi	r24, 0x01	; 1
    1f4a:	89 27       	eor	r24, r25
    1f4c:	88 23       	and	r24, r24
    1f4e:	11 f0       	breq	.+4      	; 0x1f54 <_Z17handle_1sec_tasksv+0x794>
    1f50:	81 e0       	ldi	r24, 0x01	; 1
    1f52:	01 c0       	rjmp	.+2      	; 0x1f56 <_Z17handle_1sec_tasksv+0x796>
    1f54:	80 e0       	ldi	r24, 0x00	; 0
    1f56:	88 23       	and	r24, r24
    1f58:	99 f1       	breq	.+102    	; 0x1fc0 <_Z17handle_1sec_tasksv+0x800>
    1f5a:	90 91 09 40 	lds	r25, 0x4009	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    1f5e:	81 e0       	ldi	r24, 0x01	; 1
    1f60:	99 23       	and	r25, r25
    1f62:	09 f4       	brne	.+2      	; 0x1f66 <_Z17handle_1sec_tasksv+0x7a6>
    1f64:	80 e0       	ldi	r24, 0x00	; 0
    1f66:	88 23       	and	r24, r24
    1f68:	59 f1       	breq	.+86     	; 0x1fc0 <_Z17handle_1sec_tasksv+0x800>
    1f6a:	80 91 09 40 	lds	r24, 0x4009	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    1f6e:	81 50       	subi	r24, 0x01	; 1
    1f70:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    1f74:	80 91 09 40 	lds	r24, 0x4009	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    1f78:	88 23       	and	r24, r24
    1f7a:	41 f4       	brne	.+16     	; 0x1f8c <_Z17handle_1sec_tasksv+0x7cc>
    1f7c:	90 91 58 45 	lds	r25, 0x4558	; 0x804558 <g_enable_manual_transmissions>
    1f80:	81 e0       	ldi	r24, 0x01	; 1
    1f82:	89 27       	eor	r24, r25
    1f84:	88 23       	and	r24, r24
    1f86:	11 f0       	breq	.+4      	; 0x1f8c <_Z17handle_1sec_tasksv+0x7cc>
    1f88:	81 e0       	ldi	r24, 0x01	; 1
    1f8a:	01 c0       	rjmp	.+2      	; 0x1f8e <_Z17handle_1sec_tasksv+0x7ce>
    1f8c:	80 e0       	ldi	r24, 0x00	; 0
    1f8e:	88 23       	and	r24, r24
    1f90:	b9 f0       	breq	.+46     	; 0x1fc0 <_Z17handle_1sec_tasksv+0x800>
    1f92:	10 92 a8 44 	sts	0x44A8, r1	; 0x8044a8 <_ZL12g_wifi_ready>
    1f96:	81 e0       	ldi	r24, 0x01	; 1
    1f98:	0e 94 58 48 	call	0x90b0	; 0x90b0 <_Z10wifi_resetb>
    1f9c:	80 e0       	ldi	r24, 0x00	; 0
    1f9e:	0e 94 41 48 	call	0x9082	; 0x9082 <_Z10wifi_powerb>
    1fa2:	10 92 a7 44 	sts	0x44A7, r1	; 0x8044a7 <_ZL20g_shutting_down_wifi>
    1fa6:	10 92 0a 40 	sts	0x400A, r1	; 0x80400a <_ZL13g_wifi_active>
    1faa:	90 91 13 40 	lds	r25, 0x4013	; 0x804013 <_ZL11g_sleepType>
    1fae:	81 e0       	ldi	r24, 0x01	; 1
    1fb0:	99 23       	and	r25, r25
    1fb2:	09 f4       	brne	.+2      	; 0x1fb6 <_Z17handle_1sec_tasksv+0x7f6>
    1fb4:	80 e0       	ldi	r24, 0x00	; 0
    1fb6:	88 23       	and	r24, r24
    1fb8:	19 f0       	breq	.+6      	; 0x1fc0 <_Z17handle_1sec_tasksv+0x800>
    1fba:	81 e0       	ldi	r24, 0x01	; 1
    1fbc:	80 93 27 45 	sts	0x4527, r24	; 0x804527 <_ZL17g_go_to_sleep_now>
    1fc0:	80 91 0a 40 	lds	r24, 0x400A	; 0x80400a <_ZL13g_wifi_active>
    1fc4:	88 23       	and	r24, r24
    1fc6:	19 f0       	breq	.+6      	; 0x1fce <_Z17handle_1sec_tasksv+0x80e>
    1fc8:	81 e0       	ldi	r24, 0x01	; 1
    1fca:	80 93 a5 44 	sts	0x44A5, r24	; 0x8044a5 <_ZL16g_report_seconds>
    1fce:	00 00       	nop
    1fd0:	63 96       	adiw	r28, 0x13	; 19
    1fd2:	cd bf       	out	0x3d, r28	; 61
    1fd4:	de bf       	out	0x3e, r29	; 62
    1fd6:	df 91       	pop	r29
    1fd8:	cf 91       	pop	r28
    1fda:	1f 91       	pop	r17
    1fdc:	0f 91       	pop	r16
    1fde:	ff 90       	pop	r15
    1fe0:	ef 90       	pop	r14
    1fe2:	08 95       	ret

00001fe4 <__vector_22>:
    1fe4:	1f 92       	push	r1
    1fe6:	0f 92       	push	r0
    1fe8:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    1fec:	0f 92       	push	r0
    1fee:	11 24       	eor	r1, r1
    1ff0:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    1ff4:	0f 92       	push	r0
    1ff6:	2f 93       	push	r18
    1ff8:	3f 93       	push	r19
    1ffa:	4f 93       	push	r20
    1ffc:	5f 93       	push	r21
    1ffe:	6f 93       	push	r22
    2000:	7f 93       	push	r23
    2002:	8f 93       	push	r24
    2004:	9f 93       	push	r25
    2006:	af 93       	push	r26
    2008:	bf 93       	push	r27
    200a:	ef 93       	push	r30
    200c:	ff 93       	push	r31
    200e:	cf 93       	push	r28
    2010:	df 93       	push	r29
    2012:	00 d0       	rcall	.+0      	; 0x2014 <__vector_22+0x30>
    2014:	cd b7       	in	r28, 0x3d	; 61
    2016:	de b7       	in	r29, 0x3e	; 62
    2018:	8c e0       	ldi	r24, 0x0C	; 12
    201a:	90 e0       	ldi	r25, 0x00	; 0
    201c:	fc 01       	movw	r30, r24
    201e:	83 81       	ldd	r24, Z+3	; 0x03
    2020:	89 83       	std	Y+1, r24	; 0x01
    2022:	89 81       	ldd	r24, Y+1	; 0x01
    2024:	88 2f       	mov	r24, r24
    2026:	90 e0       	ldi	r25, 0x00	; 0
    2028:	82 70       	andi	r24, 0x02	; 2
    202a:	99 27       	eor	r25, r25
    202c:	89 2b       	or	r24, r25
    202e:	c9 f0       	breq	.+50     	; 0x2062 <__vector_22+0x7e>
    2030:	0e 94 0c 24 	call	0x4818	; 0x4818 <_Z18antennaIsConnectedv>
    2034:	8a 83       	std	Y+2, r24	; 0x02
    2036:	9a 81       	ldd	r25, Y+2	; 0x02
    2038:	81 e0       	ldi	r24, 0x01	; 1
    203a:	89 27       	eor	r24, r25
    203c:	88 23       	and	r24, r24
    203e:	71 f0       	breq	.+28     	; 0x205c <__vector_22+0x78>
    2040:	90 91 9c 44 	lds	r25, 0x449C	; 0x80449c <g_antenna_connect_state>
    2044:	81 e0       	ldi	r24, 0x01	; 1
    2046:	91 30       	cpi	r25, 0x01	; 1
    2048:	09 f4       	brne	.+2      	; 0x204c <__vector_22+0x68>
    204a:	80 e0       	ldi	r24, 0x00	; 0
    204c:	88 23       	and	r24, r24
    204e:	31 f0       	breq	.+12     	; 0x205c <__vector_22+0x78>
    2050:	81 e0       	ldi	r24, 0x01	; 1
    2052:	80 93 9c 44 	sts	0x449C, r24	; 0x80449c <g_antenna_connect_state>
    2056:	81 e0       	ldi	r24, 0x01	; 1
    2058:	0e 94 61 6d 	call	0xdac2	; 0xdac2 <_Z15inhibitRFOutputb>
    205c:	81 e0       	ldi	r24, 0x01	; 1
    205e:	80 93 06 40 	sts	0x4006, r24	; 0x804006 <_ZL28g_antenna_connection_changed>
    2062:	8c e0       	ldi	r24, 0x0C	; 12
    2064:	90 e0       	ldi	r25, 0x00	; 0
    2066:	2f ef       	ldi	r18, 0xFF	; 255
    2068:	fc 01       	movw	r30, r24
    206a:	23 83       	std	Z+3, r18	; 0x03
    206c:	00 00       	nop
    206e:	0f 90       	pop	r0
    2070:	0f 90       	pop	r0
    2072:	df 91       	pop	r29
    2074:	cf 91       	pop	r28
    2076:	ff 91       	pop	r31
    2078:	ef 91       	pop	r30
    207a:	bf 91       	pop	r27
    207c:	af 91       	pop	r26
    207e:	9f 91       	pop	r25
    2080:	8f 91       	pop	r24
    2082:	7f 91       	pop	r23
    2084:	6f 91       	pop	r22
    2086:	5f 91       	pop	r21
    2088:	4f 91       	pop	r20
    208a:	3f 91       	pop	r19
    208c:	2f 91       	pop	r18
    208e:	0f 90       	pop	r0
    2090:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    2094:	0f 90       	pop	r0
    2096:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    209a:	0f 90       	pop	r0
    209c:	1f 90       	pop	r1
    209e:	18 95       	reti

000020a0 <__vector_12>:
    20a0:	1f 92       	push	r1
    20a2:	0f 92       	push	r0
    20a4:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    20a8:	0f 92       	push	r0
    20aa:	11 24       	eor	r1, r1
    20ac:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    20b0:	0f 92       	push	r0
    20b2:	2f 93       	push	r18
    20b4:	3f 93       	push	r19
    20b6:	4f 93       	push	r20
    20b8:	5f 93       	push	r21
    20ba:	6f 93       	push	r22
    20bc:	7f 93       	push	r23
    20be:	8f 93       	push	r24
    20c0:	9f 93       	push	r25
    20c2:	af 93       	push	r26
    20c4:	bf 93       	push	r27
    20c6:	ef 93       	push	r30
    20c8:	ff 93       	push	r31
    20ca:	cf 93       	push	r28
    20cc:	df 93       	push	r29
    20ce:	cd b7       	in	r28, 0x3d	; 61
    20d0:	de b7       	in	r29, 0x3e	; 62
    20d2:	29 97       	sbiw	r28, 0x09	; 9
    20d4:	cd bf       	out	0x3d, r28	; 61
    20d6:	de bf       	out	0x3e, r29	; 62
    20d8:	80 e0       	ldi	r24, 0x00	; 0
    20da:	9b e0       	ldi	r25, 0x0B	; 11
    20dc:	fc 01       	movw	r30, r24
    20de:	86 81       	ldd	r24, Z+6	; 0x06
    20e0:	8b 83       	std	Y+3, r24	; 0x03
    20e2:	8b 81       	ldd	r24, Y+3	; 0x03
    20e4:	88 2f       	mov	r24, r24
    20e6:	90 e0       	ldi	r25, 0x00	; 0
    20e8:	81 70       	andi	r24, 0x01	; 1
    20ea:	99 27       	eor	r25, r25
    20ec:	89 2b       	or	r24, r25
    20ee:	09 f4       	brne	.+2      	; 0x20f2 <__vector_12+0x52>
    20f0:	0c c3       	rjmp	.+1560   	; 0x270a <__vector_12+0x66a>
    20f2:	80 91 9a 44 	lds	r24, 0x449A	; 0x80449a <_ZL21g_util_tick_countdown>
    20f6:	90 91 9b 44 	lds	r25, 0x449B	; 0x80449b <_ZL21g_util_tick_countdown+0x1>
    20fa:	21 e0       	ldi	r18, 0x01	; 1
    20fc:	89 2b       	or	r24, r25
    20fe:	09 f4       	brne	.+2      	; 0x2102 <__vector_12+0x62>
    2100:	20 e0       	ldi	r18, 0x00	; 0
    2102:	22 23       	and	r18, r18
    2104:	49 f0       	breq	.+18     	; 0x2118 <__vector_12+0x78>
    2106:	80 91 9a 44 	lds	r24, 0x449A	; 0x80449a <_ZL21g_util_tick_countdown>
    210a:	90 91 9b 44 	lds	r25, 0x449B	; 0x80449b <_ZL21g_util_tick_countdown+0x1>
    210e:	01 97       	sbiw	r24, 0x01	; 1
    2110:	80 93 9a 44 	sts	0x449A, r24	; 0x80449a <_ZL21g_util_tick_countdown>
    2114:	90 93 9b 44 	sts	0x449B, r25	; 0x80449b <_ZL21g_util_tick_countdown+0x1>
    2118:	80 91 5b 45 	lds	r24, 0x455B	; 0x80455b <_ZZ11__vector_12E28switch_closures_count_period>
    211c:	90 91 5c 45 	lds	r25, 0x455C	; 0x80455c <_ZZ11__vector_12E28switch_closures_count_period+0x1>
    2120:	89 2b       	or	r24, r25
    2122:	69 f1       	breq	.+90     	; 0x217e <__vector_12+0xde>
    2124:	80 91 5b 45 	lds	r24, 0x455B	; 0x80455b <_ZZ11__vector_12E28switch_closures_count_period>
    2128:	90 91 5c 45 	lds	r25, 0x455C	; 0x80455c <_ZZ11__vector_12E28switch_closures_count_period+0x1>
    212c:	01 97       	sbiw	r24, 0x01	; 1
    212e:	80 93 5b 45 	sts	0x455B, r24	; 0x80455b <_ZZ11__vector_12E28switch_closures_count_period>
    2132:	90 93 5c 45 	sts	0x455C, r25	; 0x80455c <_ZZ11__vector_12E28switch_closures_count_period+0x1>
    2136:	80 91 5b 45 	lds	r24, 0x455B	; 0x80455b <_ZZ11__vector_12E28switch_closures_count_period>
    213a:	90 91 5c 45 	lds	r25, 0x455C	; 0x80455c <_ZZ11__vector_12E28switch_closures_count_period+0x1>
    213e:	89 2b       	or	r24, r25
    2140:	e9 f5       	brne	.+122    	; 0x21bc <__vector_12+0x11c>
    2142:	80 91 3b 45 	lds	r24, 0x453B	; 0x80453b <g_switch_presses_count>
    2146:	90 91 3c 45 	lds	r25, 0x453C	; 0x80453c <g_switch_presses_count+0x1>
    214a:	89 2b       	or	r24, r25
    214c:	41 f0       	breq	.+16     	; 0x215e <__vector_12+0xbe>
    214e:	80 91 3b 45 	lds	r24, 0x453B	; 0x80453b <g_switch_presses_count>
    2152:	90 91 3c 45 	lds	r25, 0x453C	; 0x80453c <g_switch_presses_count+0x1>
    2156:	04 97       	sbiw	r24, 0x04	; 4
    2158:	10 f4       	brcc	.+4      	; 0x215e <__vector_12+0xbe>
    215a:	81 e0       	ldi	r24, 0x01	; 1
    215c:	01 c0       	rjmp	.+2      	; 0x2160 <__vector_12+0xc0>
    215e:	80 e0       	ldi	r24, 0x00	; 0
    2160:	88 23       	and	r24, r24
    2162:	41 f0       	breq	.+16     	; 0x2174 <__vector_12+0xd4>
    2164:	80 91 3b 45 	lds	r24, 0x453B	; 0x80453b <g_switch_presses_count>
    2168:	90 91 3c 45 	lds	r25, 0x453C	; 0x80453c <g_switch_presses_count+0x1>
    216c:	80 93 39 45 	sts	0x4539, r24	; 0x804539 <g_handle_counted_presses>
    2170:	90 93 3a 45 	sts	0x453A, r25	; 0x80453a <g_handle_counted_presses+0x1>
    2174:	10 92 3b 45 	sts	0x453B, r1	; 0x80453b <g_switch_presses_count>
    2178:	10 92 3c 45 	sts	0x453C, r1	; 0x80453c <g_switch_presses_count+0x1>
    217c:	1f c0       	rjmp	.+62     	; 0x21bc <__vector_12+0x11c>
    217e:	80 91 3b 45 	lds	r24, 0x453B	; 0x80453b <g_switch_presses_count>
    2182:	90 91 3c 45 	lds	r25, 0x453C	; 0x80453c <g_switch_presses_count+0x1>
    2186:	21 e0       	ldi	r18, 0x01	; 1
    2188:	01 97       	sbiw	r24, 0x01	; 1
    218a:	09 f0       	breq	.+2      	; 0x218e <__vector_12+0xee>
    218c:	20 e0       	ldi	r18, 0x00	; 0
    218e:	22 23       	and	r18, r18
    2190:	39 f0       	breq	.+14     	; 0x21a0 <__vector_12+0x100>
    2192:	8c e2       	ldi	r24, 0x2C	; 44
    2194:	91 e0       	ldi	r25, 0x01	; 1
    2196:	80 93 5b 45 	sts	0x455B, r24	; 0x80455b <_ZZ11__vector_12E28switch_closures_count_period>
    219a:	90 93 5c 45 	sts	0x455C, r25	; 0x80455c <_ZZ11__vector_12E28switch_closures_count_period+0x1>
    219e:	0e c0       	rjmp	.+28     	; 0x21bc <__vector_12+0x11c>
    21a0:	80 91 3b 45 	lds	r24, 0x453B	; 0x80453b <g_switch_presses_count>
    21a4:	90 91 3c 45 	lds	r25, 0x453C	; 0x80453c <g_switch_presses_count+0x1>
    21a8:	21 e0       	ldi	r18, 0x01	; 1
    21aa:	03 97       	sbiw	r24, 0x03	; 3
    21ac:	08 f4       	brcc	.+2      	; 0x21b0 <__vector_12+0x110>
    21ae:	20 e0       	ldi	r18, 0x00	; 0
    21b0:	22 23       	and	r18, r18
    21b2:	21 f0       	breq	.+8      	; 0x21bc <__vector_12+0x11c>
    21b4:	10 92 3b 45 	sts	0x453B, r1	; 0x80453b <g_switch_presses_count>
    21b8:	10 92 3c 45 	sts	0x453C, r1	; 0x80453c <g_switch_presses_count+0x1>
    21bc:	87 e0       	ldi	r24, 0x07	; 7
    21be:	0e 94 d0 0a 	call	0x15a0	; 0x15a0 <PORTC_get_pin_level>
    21c2:	98 2f       	mov	r25, r24
    21c4:	81 e0       	ldi	r24, 0x01	; 1
    21c6:	89 27       	eor	r24, r25
    21c8:	88 23       	and	r24, r24
    21ca:	11 f1       	breq	.+68     	; 0x2210 <__vector_12+0x170>
    21cc:	80 91 37 45 	lds	r24, 0x4537	; 0x804537 <g_switch_closed_count>
    21d0:	90 91 38 45 	lds	r25, 0x4538	; 0x804538 <g_switch_closed_count+0x1>
    21d4:	21 e0       	ldi	r18, 0x01	; 1
    21d6:	88 3e       	cpi	r24, 0xE8	; 232
    21d8:	93 40       	sbci	r25, 0x03	; 3
    21da:	08 f0       	brcs	.+2      	; 0x21de <__vector_12+0x13e>
    21dc:	20 e0       	ldi	r18, 0x00	; 0
    21de:	22 23       	and	r18, r18
    21e0:	b9 f0       	breq	.+46     	; 0x2210 <__vector_12+0x170>
    21e2:	80 91 37 45 	lds	r24, 0x4537	; 0x804537 <g_switch_closed_count>
    21e6:	90 91 38 45 	lds	r25, 0x4538	; 0x804538 <g_switch_closed_count+0x1>
    21ea:	01 96       	adiw	r24, 0x01	; 1
    21ec:	80 93 37 45 	sts	0x4537, r24	; 0x804537 <g_switch_closed_count>
    21f0:	90 93 38 45 	sts	0x4538, r25	; 0x804538 <g_switch_closed_count+0x1>
    21f4:	80 91 37 45 	lds	r24, 0x4537	; 0x804537 <g_switch_closed_count>
    21f8:	90 91 38 45 	lds	r25, 0x4538	; 0x804538 <g_switch_closed_count+0x1>
    21fc:	21 e0       	ldi	r18, 0x01	; 1
    21fe:	88 3e       	cpi	r24, 0xE8	; 232
    2200:	93 40       	sbci	r25, 0x03	; 3
    2202:	08 f4       	brcc	.+2      	; 0x2206 <__vector_12+0x166>
    2204:	20 e0       	ldi	r18, 0x00	; 0
    2206:	22 23       	and	r18, r18
    2208:	19 f0       	breq	.+6      	; 0x2210 <__vector_12+0x170>
    220a:	81 e0       	ldi	r24, 0x01	; 1
    220c:	80 93 3d 45 	sts	0x453D, r24	; 0x80453d <g_long_button_press>
    2210:	0e 94 0a 20 	call	0x4014	; 0x4014 <_Z19updateAntennaStatusv>
    2214:	80 91 20 45 	lds	r24, 0x4520	; 0x804520 <g_event_enabled>
    2218:	88 23       	and	r24, r24
    221a:	31 f0       	breq	.+12     	; 0x2228 <__vector_12+0x188>
    221c:	80 91 22 45 	lds	r24, 0x4522	; 0x804522 <g_event_commenced>
    2220:	88 23       	and	r24, r24
    2222:	11 f0       	breq	.+4      	; 0x2228 <__vector_12+0x188>
    2224:	81 e0       	ldi	r24, 0x01	; 1
    2226:	01 c0       	rjmp	.+2      	; 0x222a <__vector_12+0x18a>
    2228:	80 e0       	ldi	r24, 0x00	; 0
    222a:	88 23       	and	r24, r24
    222c:	09 f4       	brne	.+2      	; 0x2230 <__vector_12+0x190>
    222e:	bd c0       	rjmp	.+378    	; 0x23aa <__vector_12+0x30a>
    2230:	81 e0       	ldi	r24, 0x01	; 1
    2232:	80 93 20 40 	sts	0x4020, r24	; 0x804020 <_ZZ11__vector_12E29initializeManualTransmissions>
    2236:	80 91 9f 44 	lds	r24, 0x449F	; 0x80449f <_ZL12g_on_the_air>
    223a:	90 91 a0 44 	lds	r25, 0x44A0	; 0x8044a0 <_ZL12g_on_the_air+0x1>
    223e:	a0 91 a1 44 	lds	r26, 0x44A1	; 0x8044a1 <_ZL12g_on_the_air+0x2>
    2242:	b0 91 a2 44 	lds	r27, 0x44A2	; 0x8044a2 <_ZL12g_on_the_air+0x3>
    2246:	21 e0       	ldi	r18, 0x01	; 1
    2248:	18 16       	cp	r1, r24
    224a:	19 06       	cpc	r1, r25
    224c:	1a 06       	cpc	r1, r26
    224e:	1b 06       	cpc	r1, r27
    2250:	0c f0       	brlt	.+2      	; 0x2254 <__vector_12+0x1b4>
    2252:	20 e0       	ldi	r18, 0x00	; 0
    2254:	22 23       	and	r18, r18
    2256:	09 f4       	brne	.+2      	; 0x225a <__vector_12+0x1ba>
    2258:	7f c0       	rjmp	.+254    	; 0x2358 <__vector_12+0x2b8>
    225a:	80 91 5d 45 	lds	r24, 0x455D	; 0x80455d <_ZZ11__vector_12E7codeInc>
    225e:	90 91 5e 45 	lds	r25, 0x455E	; 0x80455e <_ZZ11__vector_12E7codeInc+0x1>
    2262:	89 2b       	or	r24, r25
    2264:	09 f4       	brne	.+2      	; 0x2268 <__vector_12+0x1c8>
    2266:	5e c0       	rjmp	.+188    	; 0x2324 <__vector_12+0x284>
    2268:	80 91 5d 45 	lds	r24, 0x455D	; 0x80455d <_ZZ11__vector_12E7codeInc>
    226c:	90 91 5e 45 	lds	r25, 0x455E	; 0x80455e <_ZZ11__vector_12E7codeInc+0x1>
    2270:	01 97       	sbiw	r24, 0x01	; 1
    2272:	80 93 5d 45 	sts	0x455D, r24	; 0x80455d <_ZZ11__vector_12E7codeInc>
    2276:	90 93 5e 45 	sts	0x455E, r25	; 0x80455e <_ZZ11__vector_12E7codeInc+0x1>
    227a:	80 91 5d 45 	lds	r24, 0x455D	; 0x80455d <_ZZ11__vector_12E7codeInc>
    227e:	90 91 5e 45 	lds	r25, 0x455E	; 0x80455e <_ZZ11__vector_12E7codeInc+0x1>
    2282:	89 2b       	or	r24, r25
    2284:	09 f0       	breq	.+2      	; 0x2288 <__vector_12+0x1e8>
    2286:	75 c1       	rjmp	.+746    	; 0x2572 <__vector_12+0x4d2>
    2288:	9e 01       	movw	r18, r28
    228a:	27 5f       	subi	r18, 0xF7	; 247
    228c:	3f 4f       	sbci	r19, 0xFF	; 255
    228e:	ce 01       	movw	r24, r28
    2290:	08 96       	adiw	r24, 0x08	; 8
    2292:	a9 01       	movw	r20, r18
    2294:	bc 01       	movw	r22, r24
    2296:	80 e0       	ldi	r24, 0x00	; 0
    2298:	90 e0       	ldi	r25, 0x00	; 0
    229a:	0e 94 b5 57 	call	0xaf6a	; 0xaf6a <_Z9makeMorsePcPbS0_>
    229e:	80 93 5f 45 	sts	0x455F, r24	; 0x80455f <_ZZ11__vector_12E3key>
    22a2:	98 85       	ldd	r25, Y+8	; 0x08
    22a4:	81 e0       	ldi	r24, 0x01	; 1
    22a6:	89 27       	eor	r24, r25
    22a8:	88 23       	and	r24, r24
    22aa:	09 f4       	brne	.+2      	; 0x22ae <__vector_12+0x20e>
    22ac:	62 c1       	rjmp	.+708    	; 0x2572 <__vector_12+0x4d2>
    22ae:	89 85       	ldd	r24, Y+9	; 0x09
    22b0:	88 23       	and	r24, r24
    22b2:	09 f4       	brne	.+2      	; 0x22b6 <__vector_12+0x216>
    22b4:	5e c1       	rjmp	.+700    	; 0x2572 <__vector_12+0x4d2>
    22b6:	8d ef       	ldi	r24, 0xFD	; 253
    22b8:	80 93 99 44 	sts	0x4499, r24	; 0x804499 <_ZL18g_last_status_code>
    22bc:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    22c0:	0e 94 15 21 	call	0x422a	; 0x422a <_Z13throttleValueh>
    22c4:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    22c8:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    22cc:	81 e0       	ldi	r24, 0x01	; 1
    22ce:	88 87       	std	Y+8, r24	; 0x08
    22d0:	0e 94 ae 28 	call	0x515c	; 0x515c <_Z14getPatternTextv>
    22d4:	9c 01       	movw	r18, r24
    22d6:	ce 01       	movw	r24, r28
    22d8:	08 96       	adiw	r24, 0x08	; 8
    22da:	40 e0       	ldi	r20, 0x00	; 0
    22dc:	50 e0       	ldi	r21, 0x00	; 0
    22de:	bc 01       	movw	r22, r24
    22e0:	c9 01       	movw	r24, r18
    22e2:	0e 94 b5 57 	call	0xaf6a	; 0xaf6a <_Z9makeMorsePcPbS0_>
    22e6:	9e 01       	movw	r18, r28
    22e8:	27 5f       	subi	r18, 0xF7	; 247
    22ea:	3f 4f       	sbci	r19, 0xFF	; 255
    22ec:	ce 01       	movw	r24, r28
    22ee:	08 96       	adiw	r24, 0x08	; 8
    22f0:	a9 01       	movw	r20, r18
    22f2:	bc 01       	movw	r22, r24
    22f4:	80 e0       	ldi	r24, 0x00	; 0
    22f6:	90 e0       	ldi	r25, 0x00	; 0
    22f8:	0e 94 b5 57 	call	0xaf6a	; 0xaf6a <_Z9makeMorsePcPbS0_>
    22fc:	80 93 5f 45 	sts	0x455F, r24	; 0x80455f <_ZZ11__vector_12E3key>
    2300:	80 91 25 45 	lds	r24, 0x4525	; 0x804525 <g_sending_station_ID>
    2304:	88 23       	and	r24, r24
    2306:	41 f0       	breq	.+16     	; 0x2318 <__vector_12+0x278>
    2308:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_off_air_seconds>
    230c:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    2310:	89 2b       	or	r24, r25
    2312:	11 f0       	breq	.+4      	; 0x2318 <__vector_12+0x278>
    2314:	81 e0       	ldi	r24, 0x01	; 1
    2316:	01 c0       	rjmp	.+2      	; 0x231a <__vector_12+0x27a>
    2318:	80 e0       	ldi	r24, 0x00	; 0
    231a:	80 93 26 45 	sts	0x4526, r24	; 0x804526 <g_muteAfterID>
    231e:	10 92 25 45 	sts	0x4525, r1	; 0x804525 <g_sending_station_ID>
    2322:	27 c1       	rjmp	.+590    	; 0x2572 <__vector_12+0x4d2>
    2324:	80 91 26 45 	lds	r24, 0x4526	; 0x804526 <g_muteAfterID>
    2328:	88 23       	and	r24, r24
    232a:	11 f0       	breq	.+4      	; 0x2330 <__vector_12+0x290>
    232c:	10 92 5f 45 	sts	0x455F, r1	; 0x80455f <_ZZ11__vector_12E3key>
    2330:	80 91 5f 45 	lds	r24, 0x455F	; 0x80455f <_ZZ11__vector_12E3key>
    2334:	0e 94 8c 6d 	call	0xdb18	; 0xdb18 <_Z14keyTransmitterb>
    2338:	80 91 5f 45 	lds	r24, 0x455F	; 0x80455f <_ZZ11__vector_12E3key>
    233c:	68 2f       	mov	r22, r24
    233e:	82 e4       	ldi	r24, 0x42	; 66
    2340:	95 e4       	ldi	r25, 0x45	; 69
    2342:	0e 94 87 4e 	call	0x9d0e	; 0x9d0e <_ZN4leds6setRedEb>
    2346:	80 91 07 40 	lds	r24, 0x4007	; 0x804007 <_ZL15g_code_throttle>
    234a:	90 91 08 40 	lds	r25, 0x4008	; 0x804008 <_ZL15g_code_throttle+0x1>
    234e:	80 93 5d 45 	sts	0x455D, r24	; 0x80455d <_ZZ11__vector_12E7codeInc>
    2352:	90 93 5e 45 	sts	0x455E, r25	; 0x80455e <_ZZ11__vector_12E7codeInc+0x1>
    2356:	0d c1       	rjmp	.+538    	; 0x2572 <__vector_12+0x4d2>
    2358:	80 91 9f 44 	lds	r24, 0x449F	; 0x80449f <_ZL12g_on_the_air>
    235c:	90 91 a0 44 	lds	r25, 0x44A0	; 0x8044a0 <_ZL12g_on_the_air+0x1>
    2360:	a0 91 a1 44 	lds	r26, 0x44A1	; 0x8044a1 <_ZL12g_on_the_air+0x2>
    2364:	b0 91 a2 44 	lds	r27, 0x44A2	; 0x8044a2 <_ZL12g_on_the_air+0x3>
    2368:	21 e0       	ldi	r18, 0x01	; 1
    236a:	89 2b       	or	r24, r25
    236c:	8a 2b       	or	r24, r26
    236e:	8b 2b       	or	r24, r27
    2370:	09 f0       	breq	.+2      	; 0x2374 <__vector_12+0x2d4>
    2372:	20 e0       	ldi	r18, 0x00	; 0
    2374:	22 23       	and	r18, r18
    2376:	09 f4       	brne	.+2      	; 0x237a <__vector_12+0x2da>
    2378:	fc c0       	rjmp	.+504    	; 0x2572 <__vector_12+0x4d2>
    237a:	10 92 26 45 	sts	0x4526, r1	; 0x804526 <g_muteAfterID>
    237e:	80 91 5f 45 	lds	r24, 0x455F	; 0x80455f <_ZZ11__vector_12E3key>
    2382:	88 23       	and	r24, r24
    2384:	09 f4       	brne	.+2      	; 0x2388 <__vector_12+0x2e8>
    2386:	f5 c0       	rjmp	.+490    	; 0x2572 <__vector_12+0x4d2>
    2388:	10 92 5f 45 	sts	0x455F, r1	; 0x80455f <_ZZ11__vector_12E3key>
    238c:	80 e0       	ldi	r24, 0x00	; 0
    238e:	0e 94 8c 6d 	call	0xdb18	; 0xdb18 <_Z14keyTransmitterb>
    2392:	60 e0       	ldi	r22, 0x00	; 0
    2394:	82 e4       	ldi	r24, 0x42	; 66
    2396:	95 e4       	ldi	r25, 0x45	; 69
    2398:	0e 94 87 4e 	call	0x9d0e	; 0x9d0e <_ZN4leds6setRedEb>
    239c:	80 e0       	ldi	r24, 0x00	; 0
    239e:	0e 94 e5 6c 	call	0xd9ca	; 0xd9ca <_Z18powerToTransmitterb>
    23a2:	8e ef       	ldi	r24, 0xFE	; 254
    23a4:	80 93 99 44 	sts	0x4499, r24	; 0x804499 <_ZL18g_last_status_code>
    23a8:	e4 c0       	rjmp	.+456    	; 0x2572 <__vector_12+0x4d2>
    23aa:	80 91 58 45 	lds	r24, 0x4558	; 0x804558 <g_enable_manual_transmissions>
    23ae:	88 23       	and	r24, r24
    23b0:	21 f4       	brne	.+8      	; 0x23ba <__vector_12+0x31a>
    23b2:	80 91 1f 40 	lds	r24, 0x401F	; 0x80401f <g_enable_LED_enunciations>
    23b6:	88 23       	and	r24, r24
    23b8:	11 f0       	breq	.+4      	; 0x23be <__vector_12+0x31e>
    23ba:	81 e0       	ldi	r24, 0x01	; 1
    23bc:	01 c0       	rjmp	.+2      	; 0x23c0 <__vector_12+0x320>
    23be:	80 e0       	ldi	r24, 0x00	; 0
    23c0:	88 23       	and	r24, r24
    23c2:	09 f4       	brne	.+2      	; 0x23c6 <__vector_12+0x326>
    23c4:	d6 c0       	rjmp	.+428    	; 0x2572 <__vector_12+0x4d2>
    23c6:	83 e4       	ldi	r24, 0x43	; 67
    23c8:	95 e4       	ldi	r25, 0x45	; 69
    23ca:	0e 94 20 32 	call	0x6440	; 0x6440 <_ZNK18CircularStringBuff5emptyEv>
    23ce:	89 83       	std	Y+1, r24	; 0x01
    23d0:	18 86       	std	Y+8, r1	; 0x08
    23d2:	80 91 20 40 	lds	r24, 0x4020	; 0x804020 <_ZZ11__vector_12E29initializeManualTransmissions>
    23d6:	88 23       	and	r24, r24
    23d8:	a1 f0       	breq	.+40     	; 0x2402 <__vector_12+0x362>
    23da:	10 92 20 40 	sts	0x4020, r1	; 0x804020 <_ZZ11__vector_12E29initializeManualTransmissions>
    23de:	83 e4       	ldi	r24, 0x43	; 67
    23e0:	95 e4       	ldi	r25, 0x45	; 69
    23e2:	0e 94 05 32 	call	0x640a	; 0x640a <_ZN18CircularStringBuff5resetEv>
    23e6:	ce 01       	movw	r24, r28
    23e8:	08 96       	adiw	r24, 0x08	; 8
    23ea:	40 e0       	ldi	r20, 0x00	; 0
    23ec:	50 e0       	ldi	r21, 0x00	; 0
    23ee:	bc 01       	movw	r22, r24
    23f0:	8b e7       	ldi	r24, 0x7B	; 123
    23f2:	90 e4       	ldi	r25, 0x40	; 64
    23f4:	0e 94 b5 57 	call	0xaf6a	; 0xaf6a <_Z9makeMorsePcPbS0_>
    23f8:	81 e0       	ldi	r24, 0x01	; 1
    23fa:	89 83       	std	Y+1, r24	; 0x01
    23fc:	81 e0       	ldi	r24, 0x01	; 1
    23fe:	80 93 21 40 	sts	0x4021, r24	; 0x804021 <_ZZ11__vector_12E12charFinished>
    2402:	89 81       	ldd	r24, Y+1	; 0x01
    2404:	88 23       	and	r24, r24
    2406:	89 f1       	breq	.+98     	; 0x246a <__vector_12+0x3ca>
    2408:	80 91 21 40 	lds	r24, 0x4021	; 0x804021 <_ZZ11__vector_12E12charFinished>
    240c:	88 23       	and	r24, r24
    240e:	69 f1       	breq	.+90     	; 0x246a <__vector_12+0x3ca>
    2410:	90 91 22 40 	lds	r25, 0x4022	; 0x804022 <_ZZ11__vector_12E4idle>
    2414:	81 e0       	ldi	r24, 0x01	; 1
    2416:	89 27       	eor	r24, r25
    2418:	88 23       	and	r24, r24
    241a:	09 f4       	brne	.+2      	; 0x241e <__vector_12+0x37e>
    241c:	aa c0       	rjmp	.+340    	; 0x2572 <__vector_12+0x4d2>
    241e:	80 91 5f 45 	lds	r24, 0x455F	; 0x80455f <_ZZ11__vector_12E3key>
    2422:	88 23       	and	r24, r24
    2424:	69 f0       	breq	.+26     	; 0x2440 <__vector_12+0x3a0>
    2426:	10 92 5f 45 	sts	0x455F, r1	; 0x80455f <_ZZ11__vector_12E3key>
    242a:	80 e0       	ldi	r24, 0x00	; 0
    242c:	0e 94 8c 6d 	call	0xdb18	; 0xdb18 <_Z14keyTransmitterb>
    2430:	60 e0       	ldi	r22, 0x00	; 0
    2432:	82 e4       	ldi	r24, 0x42	; 66
    2434:	95 e4       	ldi	r25, 0x45	; 69
    2436:	0e 94 87 4e 	call	0x9d0e	; 0x9d0e <_ZN4leds6setRedEb>
    243a:	80 e0       	ldi	r24, 0x00	; 0
    243c:	0e 94 e5 6c 	call	0xd9ca	; 0xd9ca <_Z18powerToTransmitterb>
    2440:	80 91 07 40 	lds	r24, 0x4007	; 0x804007 <_ZL15g_code_throttle>
    2444:	90 91 08 40 	lds	r25, 0x4008	; 0x804008 <_ZL15g_code_throttle+0x1>
    2448:	80 93 5d 45 	sts	0x455D, r24	; 0x80455d <_ZZ11__vector_12E7codeInc>
    244c:	90 93 5e 45 	sts	0x455E, r25	; 0x80455e <_ZZ11__vector_12E7codeInc+0x1>
    2450:	ce 01       	movw	r24, r28
    2452:	08 96       	adiw	r24, 0x08	; 8
    2454:	40 e0       	ldi	r20, 0x00	; 0
    2456:	50 e0       	ldi	r21, 0x00	; 0
    2458:	bc 01       	movw	r22, r24
    245a:	8b e7       	ldi	r24, 0x7B	; 123
    245c:	90 e4       	ldi	r25, 0x40	; 64
    245e:	0e 94 b5 57 	call	0xaf6a	; 0xaf6a <_Z9makeMorsePcPbS0_>
    2462:	81 e0       	ldi	r24, 0x01	; 1
    2464:	80 93 22 40 	sts	0x4022, r24	; 0x804022 <_ZZ11__vector_12E4idle>
    2468:	84 c0       	rjmp	.+264    	; 0x2572 <__vector_12+0x4d2>
    246a:	10 92 22 40 	sts	0x4022, r1	; 0x804022 <_ZZ11__vector_12E4idle>
    246e:	80 91 5d 45 	lds	r24, 0x455D	; 0x80455d <_ZZ11__vector_12E7codeInc>
    2472:	90 91 5e 45 	lds	r25, 0x455E	; 0x80455e <_ZZ11__vector_12E7codeInc+0x1>
    2476:	89 2b       	or	r24, r25
    2478:	09 f4       	brne	.+2      	; 0x247c <__vector_12+0x3dc>
    247a:	64 c0       	rjmp	.+200    	; 0x2544 <__vector_12+0x4a4>
    247c:	80 91 5d 45 	lds	r24, 0x455D	; 0x80455d <_ZZ11__vector_12E7codeInc>
    2480:	90 91 5e 45 	lds	r25, 0x455E	; 0x80455e <_ZZ11__vector_12E7codeInc+0x1>
    2484:	01 97       	sbiw	r24, 0x01	; 1
    2486:	80 93 5d 45 	sts	0x455D, r24	; 0x80455d <_ZZ11__vector_12E7codeInc>
    248a:	90 93 5e 45 	sts	0x455E, r25	; 0x80455e <_ZZ11__vector_12E7codeInc+0x1>
    248e:	80 91 5d 45 	lds	r24, 0x455D	; 0x80455d <_ZZ11__vector_12E7codeInc>
    2492:	90 91 5e 45 	lds	r25, 0x455E	; 0x80455e <_ZZ11__vector_12E7codeInc+0x1>
    2496:	89 2b       	or	r24, r25
    2498:	09 f0       	breq	.+2      	; 0x249c <__vector_12+0x3fc>
    249a:	6b c0       	rjmp	.+214    	; 0x2572 <__vector_12+0x4d2>
    249c:	ce 01       	movw	r24, r28
    249e:	08 96       	adiw	r24, 0x08	; 8
    24a0:	41 e2       	ldi	r20, 0x21	; 33
    24a2:	50 e4       	ldi	r21, 0x40	; 64
    24a4:	bc 01       	movw	r22, r24
    24a6:	80 e0       	ldi	r24, 0x00	; 0
    24a8:	90 e0       	ldi	r25, 0x00	; 0
    24aa:	0e 94 b5 57 	call	0xaf6a	; 0xaf6a <_Z9makeMorsePcPbS0_>
    24ae:	80 93 5f 45 	sts	0x455F, r24	; 0x80455f <_ZZ11__vector_12E3key>
    24b2:	80 91 21 40 	lds	r24, 0x4021	; 0x804021 <_ZZ11__vector_12E12charFinished>
    24b6:	88 23       	and	r24, r24
    24b8:	69 f1       	breq	.+90     	; 0x2514 <__vector_12+0x474>
    24ba:	83 e4       	ldi	r24, 0x43	; 67
    24bc:	95 e4       	ldi	r25, 0x45	; 69
    24be:	0e 94 20 32 	call	0x6440	; 0x6440 <_ZNK18CircularStringBuff5emptyEv>
    24c2:	98 2f       	mov	r25, r24
    24c4:	81 e0       	ldi	r24, 0x01	; 1
    24c6:	89 27       	eor	r24, r25
    24c8:	88 23       	and	r24, r24
    24ca:	21 f1       	breq	.+72     	; 0x2514 <__vector_12+0x474>
    24cc:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    24d0:	0e 94 15 21 	call	0x422a	; 0x422a <_Z13throttleValueh>
    24d4:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    24d8:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    24dc:	83 e4       	ldi	r24, 0x43	; 67
    24de:	95 e4       	ldi	r25, 0x45	; 69
    24e0:	0e 94 0c 33 	call	0x6618	; 0x6618 <_ZN18CircularStringBuff3getEv>
    24e4:	80 93 60 45 	sts	0x4560, r24	; 0x804560 <_ZZ11__vector_12E2cc>
    24e8:	10 92 61 45 	sts	0x4561, r1	; 0x804561 <_ZZ11__vector_12E2cc+0x1>
    24ec:	ce 01       	movw	r24, r28
    24ee:	08 96       	adiw	r24, 0x08	; 8
    24f0:	40 e0       	ldi	r20, 0x00	; 0
    24f2:	50 e0       	ldi	r21, 0x00	; 0
    24f4:	bc 01       	movw	r22, r24
    24f6:	80 e6       	ldi	r24, 0x60	; 96
    24f8:	95 e4       	ldi	r25, 0x45	; 69
    24fa:	0e 94 b5 57 	call	0xaf6a	; 0xaf6a <_Z9makeMorsePcPbS0_>
    24fe:	ce 01       	movw	r24, r28
    2500:	08 96       	adiw	r24, 0x08	; 8
    2502:	41 e2       	ldi	r20, 0x21	; 33
    2504:	50 e4       	ldi	r21, 0x40	; 64
    2506:	bc 01       	movw	r22, r24
    2508:	80 e0       	ldi	r24, 0x00	; 0
    250a:	90 e0       	ldi	r25, 0x00	; 0
    250c:	0e 94 b5 57 	call	0xaf6a	; 0xaf6a <_Z9makeMorsePcPbS0_>
    2510:	80 93 5f 45 	sts	0x455F, r24	; 0x80455f <_ZZ11__vector_12E3key>
    2514:	80 91 1d 40 	lds	r24, 0x401D	; 0x80401d <g_enunciator>
    2518:	81 30       	cpi	r24, 0x01	; 1
    251a:	21 f4       	brne	.+8      	; 0x2524 <__vector_12+0x484>
    251c:	80 91 5f 45 	lds	r24, 0x455F	; 0x80455f <_ZZ11__vector_12E3key>
    2520:	0e 94 8c 6d 	call	0xdb18	; 0xdb18 <_Z14keyTransmitterb>
    2524:	80 91 5f 45 	lds	r24, 0x455F	; 0x80455f <_ZZ11__vector_12E3key>
    2528:	68 2f       	mov	r22, r24
    252a:	82 e4       	ldi	r24, 0x42	; 66
    252c:	95 e4       	ldi	r25, 0x45	; 69
    252e:	0e 94 87 4e 	call	0x9d0e	; 0x9d0e <_ZN4leds6setRedEb>
    2532:	80 91 07 40 	lds	r24, 0x4007	; 0x804007 <_ZL15g_code_throttle>
    2536:	90 91 08 40 	lds	r25, 0x4008	; 0x804008 <_ZL15g_code_throttle+0x1>
    253a:	80 93 5d 45 	sts	0x455D, r24	; 0x80455d <_ZZ11__vector_12E7codeInc>
    253e:	90 93 5e 45 	sts	0x455E, r25	; 0x80455e <_ZZ11__vector_12E7codeInc+0x1>
    2542:	17 c0       	rjmp	.+46     	; 0x2572 <__vector_12+0x4d2>
    2544:	80 91 1d 40 	lds	r24, 0x401D	; 0x80401d <g_enunciator>
    2548:	81 30       	cpi	r24, 0x01	; 1
    254a:	21 f4       	brne	.+8      	; 0x2554 <__vector_12+0x4b4>
    254c:	80 91 5f 45 	lds	r24, 0x455F	; 0x80455f <_ZZ11__vector_12E3key>
    2550:	0e 94 8c 6d 	call	0xdb18	; 0xdb18 <_Z14keyTransmitterb>
    2554:	80 91 5f 45 	lds	r24, 0x455F	; 0x80455f <_ZZ11__vector_12E3key>
    2558:	68 2f       	mov	r22, r24
    255a:	82 e4       	ldi	r24, 0x42	; 66
    255c:	95 e4       	ldi	r25, 0x45	; 69
    255e:	0e 94 87 4e 	call	0x9d0e	; 0x9d0e <_ZN4leds6setRedEb>
    2562:	80 91 07 40 	lds	r24, 0x4007	; 0x804007 <_ZL15g_code_throttle>
    2566:	90 91 08 40 	lds	r25, 0x4008	; 0x804008 <_ZL15g_code_throttle+0x1>
    256a:	80 93 5d 45 	sts	0x455D, r24	; 0x80455d <_ZZ11__vector_12E7codeInc>
    256e:	90 93 5e 45 	sts	0x455E, r25	; 0x80455e <_ZZ11__vector_12E7codeInc+0x1>
    2572:	90 91 62 45 	lds	r25, 0x4562	; 0x804562 <_ZZ11__vector_12E19conversionInProcess>
    2576:	81 e0       	ldi	r24, 0x01	; 1
    2578:	89 27       	eor	r24, r25
    257a:	88 23       	and	r24, r24
    257c:	09 f4       	brne	.+2      	; 0x2580 <__vector_12+0x4e0>
    257e:	70 c0       	rjmp	.+224    	; 0x2660 <__vector_12+0x5c0>
    2580:	8f ef       	ldi	r24, 0xFF	; 255
    2582:	80 93 63 45 	sts	0x4563, r24	; 0x804563 <_ZZ11__vector_12E24indexConversionInProcess>
    2586:	1a 82       	std	Y+2, r1	; 0x02
    2588:	8a 81       	ldd	r24, Y+2	; 0x02
    258a:	83 30       	cpi	r24, 0x03	; 3
    258c:	d8 f5       	brcc	.+118    	; 0x2604 <__vector_12+0x564>
    258e:	8a 81       	ldd	r24, Y+2	; 0x02
    2590:	88 2f       	mov	r24, r24
    2592:	90 e0       	ldi	r25, 0x00	; 0
    2594:	88 0f       	add	r24, r24
    2596:	99 1f       	adc	r25, r25
    2598:	89 5e       	subi	r24, 0xE9	; 233
    259a:	9f 4b       	sbci	r25, 0xBF	; 191
    259c:	fc 01       	movw	r30, r24
    259e:	80 81       	ld	r24, Z
    25a0:	91 81       	ldd	r25, Z+1	; 0x01
    25a2:	21 e0       	ldi	r18, 0x01	; 1
    25a4:	89 2b       	or	r24, r25
    25a6:	09 f4       	brne	.+2      	; 0x25aa <__vector_12+0x50a>
    25a8:	20 e0       	ldi	r18, 0x00	; 0
    25aa:	22 23       	and	r18, r18
    25ac:	a1 f0       	breq	.+40     	; 0x25d6 <__vector_12+0x536>
    25ae:	8a 81       	ldd	r24, Y+2	; 0x02
    25b0:	88 2f       	mov	r24, r24
    25b2:	90 e0       	ldi	r25, 0x00	; 0
    25b4:	9c 01       	movw	r18, r24
    25b6:	22 0f       	add	r18, r18
    25b8:	33 1f       	adc	r19, r19
    25ba:	29 5e       	subi	r18, 0xE9	; 233
    25bc:	3f 4b       	sbci	r19, 0xBF	; 191
    25be:	f9 01       	movw	r30, r18
    25c0:	20 81       	ld	r18, Z
    25c2:	31 81       	ldd	r19, Z+1	; 0x01
    25c4:	21 50       	subi	r18, 0x01	; 1
    25c6:	31 09       	sbc	r19, r1
    25c8:	88 0f       	add	r24, r24
    25ca:	99 1f       	adc	r25, r25
    25cc:	89 5e       	subi	r24, 0xE9	; 233
    25ce:	9f 4b       	sbci	r25, 0xBF	; 191
    25d0:	fc 01       	movw	r30, r24
    25d2:	20 83       	st	Z, r18
    25d4:	31 83       	std	Z+1, r19	; 0x01
    25d6:	8a 81       	ldd	r24, Y+2	; 0x02
    25d8:	88 2f       	mov	r24, r24
    25da:	90 e0       	ldi	r25, 0x00	; 0
    25dc:	88 0f       	add	r24, r24
    25de:	99 1f       	adc	r25, r25
    25e0:	89 5e       	subi	r24, 0xE9	; 233
    25e2:	9f 4b       	sbci	r25, 0xBF	; 191
    25e4:	fc 01       	movw	r30, r24
    25e6:	80 81       	ld	r24, Z
    25e8:	91 81       	ldd	r25, Z+1	; 0x01
    25ea:	21 e0       	ldi	r18, 0x01	; 1
    25ec:	89 2b       	or	r24, r25
    25ee:	09 f0       	breq	.+2      	; 0x25f2 <__vector_12+0x552>
    25f0:	20 e0       	ldi	r18, 0x00	; 0
    25f2:	22 23       	and	r18, r18
    25f4:	19 f0       	breq	.+6      	; 0x25fc <__vector_12+0x55c>
    25f6:	8a 81       	ldd	r24, Y+2	; 0x02
    25f8:	80 93 63 45 	sts	0x4563, r24	; 0x804563 <_ZZ11__vector_12E24indexConversionInProcess>
    25fc:	8a 81       	ldd	r24, Y+2	; 0x02
    25fe:	8f 5f       	subi	r24, 0xFF	; 255
    2600:	8a 83       	std	Y+2, r24	; 0x02
    2602:	c2 cf       	rjmp	.-124    	; 0x2588 <__vector_12+0x4e8>
    2604:	80 91 63 45 	lds	r24, 0x4563	; 0x804563 <_ZZ11__vector_12E24indexConversionInProcess>
    2608:	88 23       	and	r24, r24
    260a:	0c f4       	brge	.+2      	; 0x260e <__vector_12+0x56e>
    260c:	7e c0       	rjmp	.+252    	; 0x270a <__vector_12+0x66a>
    260e:	80 91 63 45 	lds	r24, 0x4563	; 0x804563 <_ZZ11__vector_12E24indexConversionInProcess>
    2612:	08 2e       	mov	r0, r24
    2614:	00 0c       	add	r0, r0
    2616:	99 0b       	sbc	r25, r25
    2618:	20 91 63 45 	lds	r18, 0x4563	; 0x804563 <_ZZ11__vector_12E24indexConversionInProcess>
    261c:	02 2e       	mov	r0, r18
    261e:	00 0c       	add	r0, r0
    2620:	33 0b       	sbc	r19, r19
    2622:	22 0f       	add	r18, r18
    2624:	33 1f       	adc	r19, r19
    2626:	2a 5f       	subi	r18, 0xFA	; 250
    2628:	3b 4b       	sbci	r19, 0xBB	; 187
    262a:	f9 01       	movw	r30, r18
    262c:	20 81       	ld	r18, Z
    262e:	31 81       	ldd	r19, Z+1	; 0x01
    2630:	88 0f       	add	r24, r24
    2632:	99 1f       	adc	r25, r25
    2634:	89 5e       	subi	r24, 0xE9	; 233
    2636:	9f 4b       	sbci	r25, 0xBF	; 191
    2638:	fc 01       	movw	r30, r24
    263a:	20 83       	st	Z, r18
    263c:	31 83       	std	Z+1, r19	; 0x01
    263e:	80 91 63 45 	lds	r24, 0x4563	; 0x804563 <_ZZ11__vector_12E24indexConversionInProcess>
    2642:	08 2e       	mov	r0, r24
    2644:	00 0c       	add	r0, r0
    2646:	99 0b       	sbc	r25, r25
    2648:	8c 5e       	subi	r24, 0xEC	; 236
    264a:	9f 4b       	sbci	r25, 0xBF	; 191
    264c:	fc 01       	movw	r30, r24
    264e:	80 81       	ld	r24, Z
    2650:	0e 94 ee 29 	call	0x53dc	; 0x53dc <_Z18ADC0_setADCChannel20ADC_Active_Channel_t>
    2654:	0e 94 51 2a 	call	0x54a2	; 0x54a2 <_Z20ADC0_startConversionv>
    2658:	81 e0       	ldi	r24, 0x01	; 1
    265a:	80 93 62 45 	sts	0x4562, r24	; 0x804562 <_ZZ11__vector_12E19conversionInProcess>
    265e:	55 c0       	rjmp	.+170    	; 0x270a <__vector_12+0x66a>
    2660:	0e 94 66 2a 	call	0x54cc	; 0x54cc <_Z19ADC0_conversionDonev>
    2664:	88 23       	and	r24, r24
    2666:	09 f4       	brne	.+2      	; 0x266a <__vector_12+0x5ca>
    2668:	50 c0       	rjmp	.+160    	; 0x270a <__vector_12+0x66a>
    266a:	0e 94 7a 2a 	call	0x54f4	; 0x54f4 <_Z9ADC0_readv>
    266e:	8c 83       	std	Y+4, r24	; 0x04
    2670:	9d 83       	std	Y+5, r25	; 0x05
    2672:	8c 81       	ldd	r24, Y+4	; 0x04
    2674:	9d 81       	ldd	r25, Y+5	; 0x05
    2676:	0b 97       	sbiw	r24, 0x0b	; 11
    2678:	c0 f1       	brcs	.+112    	; 0x26ea <__vector_12+0x64a>
    267a:	8c 81       	ldd	r24, Y+4	; 0x04
    267c:	9d 81       	ldd	r25, Y+5	; 0x05
    267e:	8a 3f       	cpi	r24, 0xFA	; 250
    2680:	9f 40       	sbci	r25, 0x0F	; 15
    2682:	98 f5       	brcc	.+102    	; 0x26ea <__vector_12+0x64a>
    2684:	8c 81       	ldd	r24, Y+4	; 0x04
    2686:	9d 81       	ldd	r25, Y+5	; 0x05
    2688:	80 93 64 45 	sts	0x4564, r24	; 0x804564 <_ZZ11__vector_12E20holdConversionResult>
    268c:	90 93 65 45 	sts	0x4565, r25	; 0x804565 <_ZZ11__vector_12E20holdConversionResult+0x1>
    2690:	80 91 63 45 	lds	r24, 0x4563	; 0x804563 <_ZZ11__vector_12E24indexConversionInProcess>
    2694:	08 2e       	mov	r0, r24
    2696:	00 0c       	add	r0, r0
    2698:	99 0b       	sbc	r25, r25
    269a:	88 0f       	add	r24, r24
    269c:	99 1f       	adc	r25, r25
    269e:	8f 5c       	subi	r24, 0xCF	; 207
    26a0:	9a 4b       	sbci	r25, 0xBA	; 186
    26a2:	fc 01       	movw	r30, r24
    26a4:	80 81       	ld	r24, Z
    26a6:	91 81       	ldd	r25, Z+1	; 0x01
    26a8:	8e 83       	std	Y+6, r24	; 0x06
    26aa:	9f 83       	std	Y+7, r25	; 0x07
    26ac:	80 91 63 45 	lds	r24, 0x4563	; 0x804563 <_ZZ11__vector_12E24indexConversionInProcess>
    26b0:	08 2e       	mov	r0, r24
    26b2:	00 0c       	add	r0, r0
    26b4:	99 0b       	sbc	r25, r25
    26b6:	82 5d       	subi	r24, 0xD2	; 210
    26b8:	9a 4b       	sbci	r25, 0xBA	; 186
    26ba:	21 e0       	ldi	r18, 0x01	; 1
    26bc:	fc 01       	movw	r30, r24
    26be:	20 83       	st	Z, r18
    26c0:	80 91 64 45 	lds	r24, 0x4564	; 0x804564 <_ZZ11__vector_12E20holdConversionResult>
    26c4:	90 91 65 45 	lds	r25, 0x4565	; 0x804565 <_ZZ11__vector_12E20holdConversionResult+0x1>
    26c8:	8e 83       	std	Y+6, r24	; 0x06
    26ca:	9f 83       	std	Y+7, r25	; 0x07
    26cc:	80 91 63 45 	lds	r24, 0x4563	; 0x804563 <_ZZ11__vector_12E24indexConversionInProcess>
    26d0:	08 2e       	mov	r0, r24
    26d2:	00 0c       	add	r0, r0
    26d4:	99 0b       	sbc	r25, r25
    26d6:	88 0f       	add	r24, r24
    26d8:	99 1f       	adc	r25, r25
    26da:	8f 5c       	subi	r24, 0xCF	; 207
    26dc:	9a 4b       	sbci	r25, 0xBA	; 186
    26de:	2e 81       	ldd	r18, Y+6	; 0x06
    26e0:	3f 81       	ldd	r19, Y+7	; 0x07
    26e2:	fc 01       	movw	r30, r24
    26e4:	20 83       	st	Z, r18
    26e6:	31 83       	std	Z+1, r19	; 0x01
    26e8:	0e c0       	rjmp	.+28     	; 0x2706 <__vector_12+0x666>
    26ea:	80 91 63 45 	lds	r24, 0x4563	; 0x804563 <_ZZ11__vector_12E24indexConversionInProcess>
    26ee:	08 2e       	mov	r0, r24
    26f0:	00 0c       	add	r0, r0
    26f2:	99 0b       	sbc	r25, r25
    26f4:	88 0f       	add	r24, r24
    26f6:	99 1f       	adc	r25, r25
    26f8:	8f 5c       	subi	r24, 0xCF	; 207
    26fa:	9a 4b       	sbci	r25, 0xBA	; 186
    26fc:	fc 01       	movw	r30, r24
    26fe:	80 81       	ld	r24, Z
    2700:	91 81       	ldd	r25, Z+1	; 0x01
    2702:	8c 83       	std	Y+4, r24	; 0x04
    2704:	9d 83       	std	Y+5, r25	; 0x05
    2706:	10 92 62 45 	sts	0x4562, r1	; 0x804562 <_ZZ11__vector_12E19conversionInProcess>
    270a:	80 e0       	ldi	r24, 0x00	; 0
    270c:	9b e0       	ldi	r25, 0x0B	; 11
    270e:	21 e0       	ldi	r18, 0x01	; 1
    2710:	fc 01       	movw	r30, r24
    2712:	26 83       	std	Z+6, r18	; 0x06
    2714:	00 00       	nop
    2716:	29 96       	adiw	r28, 0x09	; 9
    2718:	cd bf       	out	0x3d, r28	; 61
    271a:	de bf       	out	0x3e, r29	; 62
    271c:	df 91       	pop	r29
    271e:	cf 91       	pop	r28
    2720:	ff 91       	pop	r31
    2722:	ef 91       	pop	r30
    2724:	bf 91       	pop	r27
    2726:	af 91       	pop	r26
    2728:	9f 91       	pop	r25
    272a:	8f 91       	pop	r24
    272c:	7f 91       	pop	r23
    272e:	6f 91       	pop	r22
    2730:	5f 91       	pop	r21
    2732:	4f 91       	pop	r20
    2734:	3f 91       	pop	r19
    2736:	2f 91       	pop	r18
    2738:	0f 90       	pop	r0
    273a:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    273e:	0f 90       	pop	r0
    2740:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    2744:	0f 90       	pop	r0
    2746:	1f 90       	pop	r1
    2748:	18 95       	reti

0000274a <__vector_29>:
    274a:	1f 92       	push	r1
    274c:	0f 92       	push	r0
    274e:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    2752:	0f 92       	push	r0
    2754:	11 24       	eor	r1, r1
    2756:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    275a:	0f 92       	push	r0
    275c:	2f 93       	push	r18
    275e:	3f 93       	push	r19
    2760:	4f 93       	push	r20
    2762:	5f 93       	push	r21
    2764:	6f 93       	push	r22
    2766:	7f 93       	push	r23
    2768:	8f 93       	push	r24
    276a:	9f 93       	push	r25
    276c:	af 93       	push	r26
    276e:	bf 93       	push	r27
    2770:	ef 93       	push	r30
    2772:	ff 93       	push	r31
    2774:	cf 93       	push	r28
    2776:	df 93       	push	r29
    2778:	1f 92       	push	r1
    277a:	cd b7       	in	r28, 0x3d	; 61
    277c:	de b7       	in	r29, 0x3e	; 62
    277e:	88 e0       	ldi	r24, 0x08	; 8
    2780:	90 e0       	ldi	r25, 0x00	; 0
    2782:	fc 01       	movw	r30, r24
    2784:	83 81       	ldd	r24, Z+3	; 0x03
    2786:	89 83       	std	Y+1, r24	; 0x01
    2788:	89 81       	ldd	r24, Y+1	; 0x01
    278a:	88 23       	and	r24, r24
    278c:	0c f0       	brlt	.+2      	; 0x2790 <__vector_29+0x46>
    278e:	5b c0       	rjmp	.+182    	; 0x2846 <__vector_29+0xfc>
    2790:	80 91 28 45 	lds	r24, 0x4528	; 0x804528 <_ZL10g_sleeping>
    2794:	88 23       	and	r24, r24
    2796:	61 f0       	breq	.+24     	; 0x27b0 <__vector_29+0x66>
    2798:	10 92 27 45 	sts	0x4527, r1	; 0x804527 <_ZL17g_go_to_sleep_now>
    279c:	10 92 28 45 	sts	0x4528, r1	; 0x804528 <_ZL10g_sleeping>
    27a0:	0e 94 0c 24 	call	0x4818	; 0x4818 <_Z18antennaIsConnectedv>
    27a4:	83 e0       	ldi	r24, 0x03	; 3
    27a6:	80 93 2d 45 	sts	0x452D, r24	; 0x80452d <_ZL12g_awakenedBy>
    27aa:	10 92 24 45 	sts	0x4524, r1	; 0x804524 <g_waiting_for_next_event>
    27ae:	47 c0       	rjmp	.+142    	; 0x283e <__vector_29+0xf4>
    27b0:	80 91 37 45 	lds	r24, 0x4537	; 0x804537 <g_switch_closed_count>
    27b4:	90 91 38 45 	lds	r25, 0x4538	; 0x804538 <g_switch_closed_count+0x1>
    27b8:	21 e0       	ldi	r18, 0x01	; 1
    27ba:	06 97       	sbiw	r24, 0x06	; 6
    27bc:	08 f4       	brcc	.+2      	; 0x27c0 <__vector_29+0x76>
    27be:	20 e0       	ldi	r18, 0x00	; 0
    27c0:	22 23       	and	r18, r18
    27c2:	e9 f1       	breq	.+122    	; 0x283e <__vector_29+0xf4>
    27c4:	10 92 a9 44 	sts	0x44A9, r1	; 0x8044a9 <_ZL16g_hardware_error>
    27c8:	10 92 aa 44 	sts	0x44AA, r1	; 0x8044aa <_ZL16g_hardware_error+0x1>
    27cc:	82 e4       	ldi	r24, 0x42	; 66
    27ce:	95 e4       	ldi	r25, 0x45	; 69
    27d0:	0e 94 62 4e 	call	0x9cc4	; 0x9cc4 <_ZN4leds6activeEv>
    27d4:	98 2f       	mov	r25, r24
    27d6:	81 e0       	ldi	r24, 0x01	; 1
    27d8:	89 27       	eor	r24, r25
    27da:	88 23       	and	r24, r24
    27dc:	19 f0       	breq	.+6      	; 0x27e4 <__vector_29+0x9a>
    27de:	0e 94 0c 24 	call	0x4818	; 0x4818 <_Z18antennaIsConnectedv>
    27e2:	2d c0       	rjmp	.+90     	; 0x283e <__vector_29+0xf4>
    27e4:	87 e0       	ldi	r24, 0x07	; 7
    27e6:	0e 94 d0 0a 	call	0x15a0	; 0x15a0 <PORTC_get_pin_level>
    27ea:	88 23       	and	r24, r24
    27ec:	49 f0       	breq	.+18     	; 0x2800 <__vector_29+0xb6>
    27ee:	80 91 3b 45 	lds	r24, 0x453B	; 0x80453b <g_switch_presses_count>
    27f2:	90 91 3c 45 	lds	r25, 0x453C	; 0x80453c <g_switch_presses_count+0x1>
    27f6:	01 96       	adiw	r24, 0x01	; 1
    27f8:	80 93 3b 45 	sts	0x453B, r24	; 0x80453b <g_switch_presses_count>
    27fc:	90 93 3c 45 	sts	0x453C, r25	; 0x80453c <g_switch_presses_count+0x1>
    2800:	10 92 37 45 	sts	0x4537, r1	; 0x804537 <g_switch_closed_count>
    2804:	10 92 38 45 	sts	0x4538, r1	; 0x804538 <g_switch_closed_count+0x1>
    2808:	0e 94 7d 48 	call	0x90fa	; 0x90fa <_Z11wifiEnabledv>
    280c:	88 23       	and	r24, r24
    280e:	a1 f0       	breq	.+40     	; 0x2838 <__vector_29+0xee>
    2810:	88 e0       	ldi	r24, 0x08	; 8
    2812:	ed e7       	ldi	r30, 0x7D	; 125
    2814:	f0 e4       	ldi	r31, 0x40	; 64
    2816:	a6 e6       	ldi	r26, 0x66	; 102
    2818:	b4 e4       	ldi	r27, 0x44	; 68
    281a:	01 90       	ld	r0, Z+
    281c:	0d 92       	st	X+, r0
    281e:	8a 95       	dec	r24
    2820:	e1 f7       	brne	.-8      	; 0x281a <__vector_29+0xd0>
    2822:	46 e6       	ldi	r20, 0x66	; 102
    2824:	54 e4       	ldi	r21, 0x44	; 68
    2826:	65 e8       	ldi	r22, 0x85	; 133
    2828:	70 e4       	ldi	r23, 0x40	; 64
    282a:	81 e0       	ldi	r24, 0x01	; 1
    282c:	0e 94 2c 57 	call	0xae58	; 0xae58 <_Z11lb_send_msg13LBMessageTypePKcPc>
    2830:	85 e0       	ldi	r24, 0x05	; 5
    2832:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    2836:	03 c0       	rjmp	.+6      	; 0x283e <__vector_29+0xf4>
    2838:	82 e0       	ldi	r24, 0x02	; 2
    283a:	80 93 a6 44 	sts	0x44A6, r24	; 0x8044a6 <_ZL19g_wifi_enable_delay>
    283e:	10 92 37 45 	sts	0x4537, r1	; 0x804537 <g_switch_closed_count>
    2842:	10 92 38 45 	sts	0x4538, r1	; 0x804538 <g_switch_closed_count+0x1>
    2846:	88 e0       	ldi	r24, 0x08	; 8
    2848:	90 e0       	ldi	r25, 0x00	; 0
    284a:	2f ef       	ldi	r18, 0xFF	; 255
    284c:	fc 01       	movw	r30, r24
    284e:	23 83       	std	Z+3, r18	; 0x03
    2850:	00 00       	nop
    2852:	0f 90       	pop	r0
    2854:	df 91       	pop	r29
    2856:	cf 91       	pop	r28
    2858:	ff 91       	pop	r31
    285a:	ef 91       	pop	r30
    285c:	bf 91       	pop	r27
    285e:	af 91       	pop	r26
    2860:	9f 91       	pop	r25
    2862:	8f 91       	pop	r24
    2864:	7f 91       	pop	r23
    2866:	6f 91       	pop	r22
    2868:	5f 91       	pop	r21
    286a:	4f 91       	pop	r20
    286c:	3f 91       	pop	r19
    286e:	2f 91       	pop	r18
    2870:	0f 90       	pop	r0
    2872:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    2876:	0f 90       	pop	r0
    2878:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    287c:	0f 90       	pop	r0
    287e:	1f 90       	pop	r1
    2880:	18 95       	reti

00002882 <_Z12powerDown3V3v>:
    2882:	cf 93       	push	r28
    2884:	df 93       	push	r29
    2886:	cd b7       	in	r28, 0x3d	; 61
    2888:	de b7       	in	r29, 0x3e	; 62
    288a:	80 e0       	ldi	r24, 0x00	; 0
    288c:	0e 94 e5 6c 	call	0xd9ca	; 0xd9ca <_Z18powerToTransmitterb>
    2890:	60 e0       	ldi	r22, 0x00	; 0
    2892:	87 e0       	ldi	r24, 0x07	; 7
    2894:	0e 94 3d 0a 	call	0x147a	; 0x147a <PORTA_set_pin_level>
    2898:	60 e0       	ldi	r22, 0x00	; 0
    289a:	84 e0       	ldi	r24, 0x04	; 4
    289c:	0e 94 96 0a 	call	0x152c	; 0x152c <PORTB_set_pin_level>
    28a0:	00 00       	nop
    28a2:	df 91       	pop	r29
    28a4:	cf 91       	pop	r28
    28a6:	08 95       	ret

000028a8 <_Z10powerUp3V3v>:
    28a8:	cf 93       	push	r28
    28aa:	df 93       	push	r29
    28ac:	cd b7       	in	r28, 0x3d	; 61
    28ae:	de b7       	in	r29, 0x3e	; 62
    28b0:	80 e0       	ldi	r24, 0x00	; 0
    28b2:	0e 94 e5 6c 	call	0xd9ca	; 0xd9ca <_Z18powerToTransmitterb>
    28b6:	61 e0       	ldi	r22, 0x01	; 1
    28b8:	84 e0       	ldi	r24, 0x04	; 4
    28ba:	0e 94 96 0a 	call	0x152c	; 0x152c <PORTB_set_pin_level>
    28be:	61 e0       	ldi	r22, 0x01	; 1
    28c0:	87 e0       	ldi	r24, 0x07	; 7
    28c2:	0e 94 3d 0a 	call	0x147a	; 0x147a <PORTA_set_pin_level>
    28c6:	00 00       	nop
    28c8:	df 91       	pop	r29
    28ca:	cf 91       	pop	r28
    28cc:	08 95       	ret

000028ce <_Z6setFanb>:
    28ce:	cf 93       	push	r28
    28d0:	df 93       	push	r29
    28d2:	1f 92       	push	r1
    28d4:	cd b7       	in	r28, 0x3d	; 61
    28d6:	de b7       	in	r29, 0x3e	; 62
    28d8:	89 83       	std	Y+1, r24	; 0x01
    28da:	89 81       	ldd	r24, Y+1	; 0x01
    28dc:	88 23       	and	r24, r24
    28de:	29 f0       	breq	.+10     	; 0x28ea <_Z6setFanb+0x1c>
    28e0:	61 e0       	ldi	r22, 0x01	; 1
    28e2:	81 e0       	ldi	r24, 0x01	; 1
    28e4:	0e 94 3d 0a 	call	0x147a	; 0x147a <PORTA_set_pin_level>
    28e8:	04 c0       	rjmp	.+8      	; 0x28f2 <_Z6setFanb+0x24>
    28ea:	60 e0       	ldi	r22, 0x00	; 0
    28ec:	81 e0       	ldi	r24, 0x01	; 1
    28ee:	0e 94 3d 0a 	call	0x147a	; 0x147a <PORTA_set_pin_level>
    28f2:	00 00       	nop
    28f4:	0f 90       	pop	r0
    28f6:	df 91       	pop	r29
    28f8:	cf 91       	pop	r28
    28fa:	08 95       	ret

000028fc <_Z7fanIsOnv>:
    28fc:	cf 93       	push	r28
    28fe:	df 93       	push	r29
    2900:	cd b7       	in	r28, 0x3d	; 61
    2902:	de b7       	in	r29, 0x3e	; 62
    2904:	81 e0       	ldi	r24, 0x01	; 1
    2906:	0e 94 77 0a 	call	0x14ee	; 0x14ee <PORTA_get_pin_level>
    290a:	88 2f       	mov	r24, r24
    290c:	90 e0       	ldi	r25, 0x00	; 0
    290e:	21 e0       	ldi	r18, 0x01	; 1
    2910:	18 16       	cp	r1, r24
    2912:	19 06       	cpc	r1, r25
    2914:	0c f0       	brlt	.+2      	; 0x2918 <_Z7fanIsOnv+0x1c>
    2916:	20 e0       	ldi	r18, 0x00	; 0
    2918:	82 2f       	mov	r24, r18
    291a:	df 91       	pop	r29
    291c:	cf 91       	pop	r28
    291e:	08 95       	ret

00002920 <main>:
    2920:	cf 93       	push	r28
    2922:	df 93       	push	r29
    2924:	cd b7       	in	r28, 0x3d	; 61
    2926:	de b7       	in	r29, 0x3e	; 62
    2928:	2c 97       	sbiw	r28, 0x0c	; 12
    292a:	cd bf       	out	0x3d, r28	; 61
    292c:	de bf       	out	0x3e, r29	; 62
    292e:	0e 94 0f 03 	call	0x61e	; 0x61e <atmel_start_init>
    2932:	41 e0       	ldi	r20, 0x01	; 1
    2934:	60 e0       	ldi	r22, 0x00	; 0
    2936:	82 e4       	ldi	r24, 0x42	; 66
    2938:	95 e4       	ldi	r25, 0x45	; 69
    293a:	0e 94 a9 4f 	call	0x9f52	; 0x9f52 <_ZN4leds5blinkE7Blink_tb>
    293e:	0e 94 54 14 	call	0x28a8	; 0x28a8 <_Z10powerUp3V3v>
    2942:	81 e0       	ldi	r24, 0x01	; 1
    2944:	0e 94 67 14 	call	0x28ce	; 0x28ce <_Z6setFanb>
    2948:	8c e4       	ldi	r24, 0x4C	; 76
    294a:	95 e4       	ldi	r25, 0x45	; 69
    294c:	0e 94 6e 44 	call	0x88dc	; 0x88dc <_ZN13EepromManager20initializeEEPROMVarsEv>
    2950:	8c e4       	ldi	r24, 0x4C	; 76
    2952:	95 e4       	ldi	r25, 0x45	; 69
    2954:	0e 94 60 3f 	call	0x7ec0	; 0x7ec0 <_ZN13EepromManager11readNonVolsEv>
    2958:	81 e0       	ldi	r24, 0x01	; 1
    295a:	0e 94 58 48 	call	0x90b0	; 0x90b0 <_Z10wifi_resetb>
    295e:	81 e0       	ldi	r24, 0x01	; 1
    2960:	0e 94 41 48 	call	0x9082	; 0x9082 <_Z10wifi_powerb>
    2964:	60 e0       	ldi	r22, 0x00	; 0
    2966:	70 e0       	ldi	r23, 0x00	; 0
    2968:	cb 01       	movw	r24, r22
    296a:	0e 94 5e 6a 	call	0xd4bc	; 0xd4bc <util_delay_ms>
    296e:	68 ee       	ldi	r22, 0xE8	; 232
    2970:	73 e0       	ldi	r23, 0x03	; 3
    2972:	80 e0       	ldi	r24, 0x00	; 0
    2974:	90 e0       	ldi	r25, 0x00	; 0
    2976:	0e 94 5e 6a 	call	0xd4bc	; 0xd4bc <util_delay_ms>
    297a:	88 23       	and	r24, r24
    297c:	49 f0       	breq	.+18     	; 0x2990 <main+0x70>
    297e:	0e 94 6f 48 	call	0x90de	; 0x90de <_Z11wifiPresentv>
    2982:	98 2f       	mov	r25, r24
    2984:	81 e0       	ldi	r24, 0x01	; 1
    2986:	89 27       	eor	r24, r25
    2988:	88 23       	and	r24, r24
    298a:	11 f0       	breq	.+4      	; 0x2990 <main+0x70>
    298c:	81 e0       	ldi	r24, 0x01	; 1
    298e:	01 c0       	rjmp	.+2      	; 0x2992 <main+0x72>
    2990:	80 e0       	ldi	r24, 0x00	; 0
    2992:	88 23       	and	r24, r24
    2994:	09 f0       	breq	.+2      	; 0x2998 <main+0x78>
    2996:	eb cf       	rjmp	.-42     	; 0x296e <main+0x4e>
    2998:	0e 94 6f 48 	call	0x90de	; 0x90de <_Z11wifiPresentv>
    299c:	88 23       	and	r24, r24
    299e:	21 f0       	breq	.+8      	; 0x29a8 <main+0x88>
    29a0:	80 e0       	ldi	r24, 0x00	; 0
    29a2:	0e 94 41 48 	call	0x9082	; 0x9082 <_Z10wifi_powerb>
    29a6:	13 c0       	rjmp	.+38     	; 0x29ce <main+0xae>
    29a8:	80 e0       	ldi	r24, 0x00	; 0
    29aa:	0e 94 41 48 	call	0x9082	; 0x9082 <_Z10wifi_powerb>
    29ae:	81 e0       	ldi	r24, 0x01	; 1
    29b0:	0e 94 58 48 	call	0x90b0	; 0x90b0 <_Z10wifi_resetb>
    29b4:	10 92 a6 44 	sts	0x44A6, r1	; 0x8044a6 <_ZL19g_wifi_enable_delay>
    29b8:	10 92 09 40 	sts	0x4009, r1	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    29bc:	80 91 a9 44 	lds	r24, 0x44A9	; 0x8044a9 <_ZL16g_hardware_error>
    29c0:	90 91 aa 44 	lds	r25, 0x44AA	; 0x8044aa <_ZL16g_hardware_error+0x1>
    29c4:	84 60       	ori	r24, 0x04	; 4
    29c6:	80 93 a9 44 	sts	0x44A9, r24	; 0x8044a9 <_ZL16g_hardware_error>
    29ca:	90 93 aa 44 	sts	0x44AA, r25	; 0x8044aa <_ZL16g_hardware_error+0x1>
    29ce:	0e 94 c2 6e 	call	0xdd84	; 0xdd84 <_Z16init_transmitterv>
    29d2:	98 2f       	mov	r25, r24
    29d4:	81 e0       	ldi	r24, 0x01	; 1
    29d6:	99 23       	and	r25, r25
    29d8:	09 f4       	brne	.+2      	; 0x29dc <main+0xbc>
    29da:	80 e0       	ldi	r24, 0x00	; 0
    29dc:	88 23       	and	r24, r24
    29de:	81 f0       	breq	.+32     	; 0x2a00 <main+0xe0>
    29e0:	0e 94 f9 6d 	call	0xdbf2	; 0xdbf2 <_Z15txIsInitializedv>
    29e4:	98 2f       	mov	r25, r24
    29e6:	81 e0       	ldi	r24, 0x01	; 1
    29e8:	89 27       	eor	r24, r25
    29ea:	88 23       	and	r24, r24
    29ec:	49 f0       	breq	.+18     	; 0x2a00 <main+0xe0>
    29ee:	80 91 a9 44 	lds	r24, 0x44A9	; 0x8044a9 <_ZL16g_hardware_error>
    29f2:	90 91 aa 44 	lds	r25, 0x44AA	; 0x8044aa <_ZL16g_hardware_error+0x1>
    29f6:	82 60       	ori	r24, 0x02	; 2
    29f8:	80 93 a9 44 	sts	0x44A9, r24	; 0x8044a9 <_ZL16g_hardware_error>
    29fc:	90 93 aa 44 	sts	0x44AA, r25	; 0x8044aa <_ZL16g_hardware_error+0x1>
    2a00:	60 e0       	ldi	r22, 0x00	; 0
    2a02:	70 e0       	ldi	r23, 0x00	; 0
    2a04:	cb 01       	movw	r24, r22
    2a06:	0e 94 5e 6a 	call	0xd4bc	; 0xd4bc <util_delay_ms>
    2a0a:	68 ee       	ldi	r22, 0xE8	; 232
    2a0c:	73 e0       	ldi	r23, 0x03	; 3
    2a0e:	80 e0       	ldi	r24, 0x00	; 0
    2a10:	90 e0       	ldi	r25, 0x00	; 0
    2a12:	0e 94 5e 6a 	call	0xd4bc	; 0xd4bc <util_delay_ms>
    2a16:	88 23       	and	r24, r24
    2a18:	09 f0       	breq	.+2      	; 0x2a1c <main+0xfc>
    2a1a:	f7 cf       	rjmp	.-18     	; 0x2a0a <main+0xea>
    2a1c:	0e 94 bf 23 	call	0x477e	; 0x477e <_Z8rtc_initv>
    2a20:	89 83       	std	Y+1, r24	; 0x01
    2a22:	60 e0       	ldi	r22, 0x00	; 0
    2a24:	70 e0       	ldi	r23, 0x00	; 0
    2a26:	cb 01       	movw	r24, r22
    2a28:	0e 94 5e 6a 	call	0xd4bc	; 0xd4bc <util_delay_ms>
    2a2c:	68 e5       	ldi	r22, 0x58	; 88
    2a2e:	7b e1       	ldi	r23, 0x1B	; 27
    2a30:	80 e0       	ldi	r24, 0x00	; 0
    2a32:	90 e0       	ldi	r25, 0x00	; 0
    2a34:	0e 94 5e 6a 	call	0xd4bc	; 0xd4bc <util_delay_ms>
    2a38:	88 23       	and	r24, r24
    2a3a:	29 f0       	breq	.+10     	; 0x2a46 <main+0x126>
    2a3c:	89 81       	ldd	r24, Y+1	; 0x01
    2a3e:	8c 3f       	cpi	r24, 0xFC	; 252
    2a40:	11 f4       	brne	.+4      	; 0x2a46 <main+0x126>
    2a42:	81 e0       	ldi	r24, 0x01	; 1
    2a44:	01 c0       	rjmp	.+2      	; 0x2a48 <main+0x128>
    2a46:	80 e0       	ldi	r24, 0x00	; 0
    2a48:	88 23       	and	r24, r24
    2a4a:	21 f0       	breq	.+8      	; 0x2a54 <main+0x134>
    2a4c:	0e 94 bf 23 	call	0x477e	; 0x477e <_Z8rtc_initv>
    2a50:	89 83       	std	Y+1, r24	; 0x01
    2a52:	ec cf       	rjmp	.-40     	; 0x2a2c <main+0x10c>
    2a54:	89 81       	ldd	r24, Y+1	; 0x01
    2a56:	8c 3f       	cpi	r24, 0xFC	; 252
    2a58:	51 f4       	brne	.+20     	; 0x2a6e <main+0x14e>
    2a5a:	80 91 a9 44 	lds	r24, 0x44A9	; 0x8044a9 <_ZL16g_hardware_error>
    2a5e:	90 91 aa 44 	lds	r25, 0x44AA	; 0x8044aa <_ZL16g_hardware_error+0x1>
    2a62:	81 60       	ori	r24, 0x01	; 1
    2a64:	80 93 a9 44 	sts	0x44A9, r24	; 0x8044a9 <_ZL16g_hardware_error>
    2a68:	90 93 aa 44 	sts	0x44AA, r25	; 0x8044aa <_ZL16g_hardware_error+0x1>
    2a6c:	19 c0       	rjmp	.+50     	; 0x2aa0 <main+0x180>
    2a6e:	ce 01       	movw	r24, r28
    2a70:	0a 96       	adiw	r24, 0x0a	; 10
    2a72:	0e 94 94 35 	call	0x6b28	; 0x6b28 <ds3231_get_epoch>
    2a76:	dc 01       	movw	r26, r24
    2a78:	cb 01       	movw	r24, r22
    2a7a:	8a 83       	std	Y+2, r24	; 0x02
    2a7c:	9b 83       	std	Y+3, r25	; 0x03
    2a7e:	ac 83       	std	Y+4, r26	; 0x04
    2a80:	bd 83       	std	Y+5, r27	; 0x05
    2a82:	8a 85       	ldd	r24, Y+10	; 0x0a
    2a84:	88 23       	and	r24, r24
    2a86:	41 f4       	brne	.+16     	; 0x2a98 <main+0x178>
    2a88:	8a 81       	ldd	r24, Y+2	; 0x02
    2a8a:	9b 81       	ldd	r25, Y+3	; 0x03
    2a8c:	ac 81       	ldd	r26, Y+4	; 0x04
    2a8e:	bd 81       	ldd	r27, Y+5	; 0x05
    2a90:	bc 01       	movw	r22, r24
    2a92:	cd 01       	movw	r24, r26
    2a94:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <set_system_time>
    2a98:	0e 94 44 29 	call	0x5288	; 0x5288 <_Z14eventScheduledv>
    2a9c:	80 93 21 45 	sts	0x4521, r24	; 0x804521 <g_event_scheduled>
    2aa0:	83 e0       	ldi	r24, 0x03	; 3
    2aa2:	80 93 a6 44 	sts	0x44A6, r24	; 0x8044a6 <_ZL19g_wifi_enable_delay>
    2aa6:	0e 94 58 20 	call	0x40b0	; 0x40b0 <_Z12eventEnabledv>
    2aaa:	80 93 9d 44 	sts	0x449D, r24	; 0x80449d <_ZL13g_start_event>
    2aae:	0e 94 c3 17 	call	0x2f86	; 0x2f86 <_Z17handleLinkBusMsgsv>
    2ab2:	80 91 39 45 	lds	r24, 0x4539	; 0x804539 <g_handle_counted_presses>
    2ab6:	90 91 3a 45 	lds	r25, 0x453A	; 0x80453a <g_handle_counted_presses+0x1>
    2aba:	21 e0       	ldi	r18, 0x01	; 1
    2abc:	89 2b       	or	r24, r25
    2abe:	09 f4       	brne	.+2      	; 0x2ac2 <main+0x1a2>
    2ac0:	20 e0       	ldi	r18, 0x00	; 0
    2ac2:	22 23       	and	r18, r18
    2ac4:	f1 f0       	breq	.+60     	; 0x2b02 <main+0x1e2>
    2ac6:	80 91 39 45 	lds	r24, 0x4539	; 0x804539 <g_handle_counted_presses>
    2aca:	90 91 3a 45 	lds	r25, 0x453A	; 0x80453a <g_handle_counted_presses+0x1>
    2ace:	21 e0       	ldi	r18, 0x01	; 1
    2ad0:	01 97       	sbiw	r24, 0x01	; 1
    2ad2:	09 f0       	breq	.+2      	; 0x2ad6 <main+0x1b6>
    2ad4:	20 e0       	ldi	r18, 0x00	; 0
    2ad6:	22 23       	and	r18, r18
    2ad8:	21 f0       	breq	.+8      	; 0x2ae2 <main+0x1c2>
    2ada:	82 e0       	ldi	r24, 0x02	; 2
    2adc:	0e 94 5a 24 	call	0x48b4	; 0x48b4 <_Z13startEventNow19EventActionSource_t>
    2ae0:	0c c0       	rjmp	.+24     	; 0x2afa <main+0x1da>
    2ae2:	80 91 39 45 	lds	r24, 0x4539	; 0x804539 <g_handle_counted_presses>
    2ae6:	90 91 3a 45 	lds	r25, 0x453A	; 0x80453a <g_handle_counted_presses+0x1>
    2aea:	21 e0       	ldi	r18, 0x01	; 1
    2aec:	02 97       	sbiw	r24, 0x02	; 2
    2aee:	09 f0       	breq	.+2      	; 0x2af2 <main+0x1d2>
    2af0:	20 e0       	ldi	r18, 0x00	; 0
    2af2:	22 23       	and	r18, r18
    2af4:	11 f0       	breq	.+4      	; 0x2afa <main+0x1da>
    2af6:	0e 94 34 24 	call	0x4868	; 0x4868 <_Z12suspendEventv>
    2afa:	10 92 39 45 	sts	0x4539, r1	; 0x804539 <g_handle_counted_presses>
    2afe:	10 92 3a 45 	sts	0x453A, r1	; 0x80453a <g_handle_counted_presses+0x1>
    2b02:	80 91 37 45 	lds	r24, 0x4537	; 0x804537 <g_switch_closed_count>
    2b06:	90 91 38 45 	lds	r25, 0x4538	; 0x804538 <g_switch_closed_count+0x1>
    2b0a:	21 e0       	ldi	r18, 0x01	; 1
    2b0c:	88 3e       	cpi	r24, 0xE8	; 232
    2b0e:	93 40       	sbci	r25, 0x03	; 3
    2b10:	08 f4       	brcc	.+2      	; 0x2b14 <main+0x1f4>
    2b12:	20 e0       	ldi	r18, 0x00	; 0
    2b14:	22 23       	and	r18, r18
    2b16:	59 f0       	breq	.+22     	; 0x2b2e <main+0x20e>
    2b18:	68 e0       	ldi	r22, 0x08	; 8
    2b1a:	82 e4       	ldi	r24, 0x42	; 66
    2b1c:	95 e4       	ldi	r25, 0x45	; 69
    2b1e:	0e 94 93 4f 	call	0x9f26	; 0x9f26 <_ZN4leds5blinkE7Blink_t>
    2b22:	67 e0       	ldi	r22, 0x07	; 7
    2b24:	82 e4       	ldi	r24, 0x42	; 66
    2b26:	95 e4       	ldi	r25, 0x45	; 69
    2b28:	0e 94 93 4f 	call	0x9f26	; 0x9f26 <_ZN4leds5blinkE7Blink_t>
    2b2c:	32 c0       	rjmp	.+100    	; 0x2b92 <main+0x272>
    2b2e:	83 e4       	ldi	r24, 0x43	; 67
    2b30:	95 e4       	ldi	r25, 0x45	; 69
    2b32:	0e 94 20 32 	call	0x6440	; 0x6440 <_ZNK18CircularStringBuff5emptyEv>
    2b36:	88 23       	and	r24, r24
    2b38:	61 f1       	breq	.+88     	; 0x2b92 <main+0x272>
    2b3a:	80 91 a9 44 	lds	r24, 0x44A9	; 0x8044a9 <_ZL16g_hardware_error>
    2b3e:	90 91 aa 44 	lds	r25, 0x44AA	; 0x8044aa <_ZL16g_hardware_error+0x1>
    2b42:	21 e0       	ldi	r18, 0x01	; 1
    2b44:	89 2b       	or	r24, r25
    2b46:	09 f4       	brne	.+2      	; 0x2b4a <main+0x22a>
    2b48:	20 e0       	ldi	r18, 0x00	; 0
    2b4a:	22 23       	and	r18, r18
    2b4c:	31 f0       	breq	.+12     	; 0x2b5a <main+0x23a>
    2b4e:	69 e0       	ldi	r22, 0x09	; 9
    2b50:	82 e4       	ldi	r24, 0x42	; 66
    2b52:	95 e4       	ldi	r25, 0x45	; 69
    2b54:	0e 94 93 4f 	call	0x9f26	; 0x9f26 <_ZN4leds5blinkE7Blink_t>
    2b58:	1c c0       	rjmp	.+56     	; 0x2b92 <main+0x272>
    2b5a:	0e 94 0c 24 	call	0x4818	; 0x4818 <_Z18antennaIsConnectedv>
    2b5e:	80 91 21 45 	lds	r24, 0x4521	; 0x804521 <g_event_scheduled>
    2b62:	88 23       	and	r24, r24
    2b64:	39 f0       	breq	.+14     	; 0x2b74 <main+0x254>
    2b66:	69 e8       	ldi	r22, 0x89	; 137
    2b68:	70 e4       	ldi	r23, 0x40	; 64
    2b6a:	82 e4       	ldi	r24, 0x42	; 66
    2b6c:	95 e4       	ldi	r25, 0x45	; 69
    2b6e:	0e 94 19 4f 	call	0x9e32	; 0x9e32 <_ZN4leds8sendCodeEPc>
    2b72:	0f c0       	rjmp	.+30     	; 0x2b92 <main+0x272>
    2b74:	80 91 20 45 	lds	r24, 0x4520	; 0x804520 <g_event_enabled>
    2b78:	88 23       	and	r24, r24
    2b7a:	31 f0       	breq	.+12     	; 0x2b88 <main+0x268>
    2b7c:	61 e0       	ldi	r22, 0x01	; 1
    2b7e:	82 e4       	ldi	r24, 0x42	; 66
    2b80:	95 e4       	ldi	r25, 0x45	; 69
    2b82:	0e 94 93 4f 	call	0x9f26	; 0x9f26 <_ZN4leds5blinkE7Blink_t>
    2b86:	05 c0       	rjmp	.+10     	; 0x2b92 <main+0x272>
    2b88:	63 e0       	ldi	r22, 0x03	; 3
    2b8a:	82 e4       	ldi	r24, 0x42	; 66
    2b8c:	95 e4       	ldi	r25, 0x45	; 69
    2b8e:	0e 94 93 4f 	call	0x9f26	; 0x9f26 <_ZN4leds5blinkE7Blink_t>
    2b92:	80 91 3e 45 	lds	r24, 0x453E	; 0x80453e <g_check_temperature>
    2b96:	90 91 3f 45 	lds	r25, 0x453F	; 0x80453f <g_check_temperature+0x1>
    2b9a:	21 e0       	ldi	r18, 0x01	; 1
    2b9c:	89 2b       	or	r24, r25
    2b9e:	09 f0       	breq	.+2      	; 0x2ba2 <main+0x282>
    2ba0:	20 e0       	ldi	r18, 0x00	; 0
    2ba2:	22 23       	and	r18, r18
    2ba4:	39 f1       	breq	.+78     	; 0x2bf4 <main+0x2d4>
    2ba6:	0e 94 86 2a 	call	0x550c	; 0x550c <_Z12temperatureCv>
    2baa:	8e 83       	std	Y+6, r24	; 0x06
    2bac:	9f 83       	std	Y+7, r25	; 0x07
    2bae:	8e 81       	ldd	r24, Y+6	; 0x06
    2bb0:	9f 81       	ldd	r25, Y+7	; 0x07
    2bb2:	89 33       	cpi	r24, 0x39	; 57
    2bb4:	9f 4f       	sbci	r25, 0xFF	; 255
    2bb6:	c4 f0       	brlt	.+48     	; 0x2be8 <main+0x2c8>
    2bb8:	8e 81       	ldd	r24, Y+6	; 0x06
    2bba:	9f 81       	ldd	r25, Y+7	; 0x07
    2bbc:	86 39       	cpi	r24, 0x96	; 150
    2bbe:	91 05       	cpc	r25, r1
    2bc0:	9c f4       	brge	.+38     	; 0x2be8 <main+0x2c8>
    2bc2:	0e 94 7e 14 	call	0x28fc	; 0x28fc <_Z7fanIsOnv>
    2bc6:	88 23       	and	r24, r24
    2bc8:	41 f0       	breq	.+16     	; 0x2bda <main+0x2ba>
    2bca:	8e 81       	ldd	r24, Y+6	; 0x06
    2bcc:	9f 81       	ldd	r25, Y+7	; 0x07
    2bce:	4f 97       	sbiw	r24, 0x1f	; 31
    2bd0:	5c f4       	brge	.+22     	; 0x2be8 <main+0x2c8>
    2bd2:	80 e0       	ldi	r24, 0x00	; 0
    2bd4:	0e 94 67 14 	call	0x28ce	; 0x28ce <_Z6setFanb>
    2bd8:	07 c0       	rjmp	.+14     	; 0x2be8 <main+0x2c8>
    2bda:	8e 81       	ldd	r24, Y+6	; 0x06
    2bdc:	9f 81       	ldd	r25, Y+7	; 0x07
    2bde:	83 97       	sbiw	r24, 0x23	; 35
    2be0:	1c f0       	brlt	.+6      	; 0x2be8 <main+0x2c8>
    2be2:	81 e0       	ldi	r24, 0x01	; 1
    2be4:	0e 94 67 14 	call	0x28ce	; 0x28ce <_Z6setFanb>
    2be8:	8a e0       	ldi	r24, 0x0A	; 10
    2bea:	90 e0       	ldi	r25, 0x00	; 0
    2bec:	80 93 3e 45 	sts	0x453E, r24	; 0x80453e <g_check_temperature>
    2bf0:	90 93 3f 45 	sts	0x453F, r25	; 0x80453f <g_check_temperature+0x1>
    2bf4:	80 91 3d 45 	lds	r24, 0x453D	; 0x80453d <g_long_button_press>
    2bf8:	88 23       	and	r24, r24
    2bfa:	89 f0       	breq	.+34     	; 0x2c1e <main+0x2fe>
    2bfc:	10 92 3d 45 	sts	0x453D, r1	; 0x80453d <g_long_button_press>
    2c00:	80 91 20 45 	lds	r24, 0x4520	; 0x804520 <g_event_enabled>
    2c04:	88 23       	and	r24, r24
    2c06:	19 f0       	breq	.+6      	; 0x2c0e <main+0x2ee>
    2c08:	0e 94 34 24 	call	0x4868	; 0x4868 <_Z12suspendEventv>
    2c0c:	03 c0       	rjmp	.+6      	; 0x2c14 <main+0x2f4>
    2c0e:	81 e0       	ldi	r24, 0x01	; 1
    2c10:	80 93 23 45 	sts	0x4523, r24	; 0x804523 <g_check_for_next_event>
    2c14:	68 e0       	ldi	r22, 0x08	; 8
    2c16:	82 e4       	ldi	r24, 0x42	; 66
    2c18:	95 e4       	ldi	r25, 0x45	; 69
    2c1a:	0e 94 ea 4e 	call	0x9dd4	; 0x9dd4 <_ZN4leds4initE7Blink_t>
    2c1e:	80 91 9d 44 	lds	r24, 0x449D	; 0x80449d <_ZL13g_start_event>
    2c22:	88 23       	and	r24, r24
    2c24:	41 f1       	breq	.+80     	; 0x2c76 <main+0x356>
    2c26:	10 92 9d 44 	sts	0x449D, r1	; 0x80449d <_ZL13g_start_event>
    2c2a:	1b 86       	std	Y+11, r1	; 0x0b
    2c2c:	ce 01       	movw	r24, r28
    2c2e:	0b 96       	adiw	r24, 0x0b	; 11
    2c30:	0e 94 6f 21 	call	0x42de	; 0x42de <_Z11launchEventP2SC>
    2c34:	80 93 98 44 	sts	0x4498, r24	; 0x804498 <_ZL17g_last_error_code>
    2c38:	90 91 09 40 	lds	r25, 0x4009	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    2c3c:	81 e0       	ldi	r24, 0x01	; 1
    2c3e:	99 23       	and	r25, r25
    2c40:	09 f4       	brne	.+2      	; 0x2c44 <main+0x324>
    2c42:	80 e0       	ldi	r24, 0x00	; 0
    2c44:	88 23       	and	r24, r24
    2c46:	b9 f0       	breq	.+46     	; 0x2c76 <main+0x356>
    2c48:	80 91 09 40 	lds	r24, 0x4009	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    2c4c:	8c 87       	std	Y+12, r24	; 0x0c
    2c4e:	8a e0       	ldi	r24, 0x0A	; 10
    2c50:	90 e0       	ldi	r25, 0x00	; 0
    2c52:	88 87       	std	Y+8, r24	; 0x08
    2c54:	99 87       	std	Y+9, r25	; 0x09
    2c56:	8c 85       	ldd	r24, Y+12	; 0x0c
    2c58:	28 2f       	mov	r18, r24
    2c5a:	30 e0       	ldi	r19, 0x00	; 0
    2c5c:	88 85       	ldd	r24, Y+8	; 0x08
    2c5e:	99 85       	ldd	r25, Y+9	; 0x09
    2c60:	28 17       	cp	r18, r24
    2c62:	39 07       	cpc	r19, r25
    2c64:	24 f0       	brlt	.+8      	; 0x2c6e <main+0x34e>
    2c66:	8c 85       	ldd	r24, Y+12	; 0x0c
    2c68:	88 2f       	mov	r24, r24
    2c6a:	90 e0       	ldi	r25, 0x00	; 0
    2c6c:	02 c0       	rjmp	.+4      	; 0x2c72 <main+0x352>
    2c6e:	88 85       	ldd	r24, Y+8	; 0x08
    2c70:	99 85       	ldd	r25, Y+9	; 0x09
    2c72:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    2c76:	80 91 9e 44 	lds	r24, 0x449E	; 0x80449e <_ZL11g_end_event>
    2c7a:	88 23       	and	r24, r24
    2c7c:	21 f0       	breq	.+8      	; 0x2c86 <main+0x366>
    2c7e:	10 92 9e 44 	sts	0x449E, r1	; 0x80449e <_ZL11g_end_event>
    2c82:	0e 94 34 24 	call	0x4868	; 0x4868 <_Z12suspendEventv>
    2c86:	80 91 a5 44 	lds	r24, 0x44A5	; 0x8044a5 <_ZL16g_report_seconds>
    2c8a:	88 23       	and	r24, r24
    2c8c:	61 f1       	breq	.+88     	; 0x2ce6 <main+0x3c6>
    2c8e:	10 92 a5 44 	sts	0x44A5, r1	; 0x8044a5 <_ZL16g_report_seconds>
    2c92:	80 e0       	ldi	r24, 0x00	; 0
    2c94:	90 e0       	ldi	r25, 0x00	; 0
    2c96:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <time>
    2c9a:	dc 01       	movw	r26, r24
    2c9c:	cb 01       	movw	r24, r22
    2c9e:	2b 2f       	mov	r18, r27
    2ca0:	2f 93       	push	r18
    2ca2:	2a 2f       	mov	r18, r26
    2ca4:	2f 93       	push	r18
    2ca6:	29 2f       	mov	r18, r25
    2ca8:	2f 93       	push	r18
    2caa:	8f 93       	push	r24
    2cac:	8d e8       	ldi	r24, 0x8D	; 141
    2cae:	90 e4       	ldi	r25, 0x40	; 64
    2cb0:	89 2f       	mov	r24, r25
    2cb2:	8f 93       	push	r24
    2cb4:	8d e8       	ldi	r24, 0x8D	; 141
    2cb6:	90 e4       	ldi	r25, 0x40	; 64
    2cb8:	8f 93       	push	r24
    2cba:	86 e6       	ldi	r24, 0x66	; 102
    2cbc:	94 e4       	ldi	r25, 0x44	; 68
    2cbe:	89 2f       	mov	r24, r25
    2cc0:	8f 93       	push	r24
    2cc2:	86 e6       	ldi	r24, 0x66	; 102
    2cc4:	94 e4       	ldi	r25, 0x44	; 68
    2cc6:	8f 93       	push	r24
    2cc8:	0e 94 0a 77 	call	0xee14	; 0xee14 <sprintf>
    2ccc:	2d b7       	in	r18, 0x3d	; 61
    2cce:	3e b7       	in	r19, 0x3e	; 62
    2cd0:	28 5f       	subi	r18, 0xF8	; 248
    2cd2:	3f 4f       	sbci	r19, 0xFF	; 255
    2cd4:	cd bf       	out	0x3d, r28	; 61
    2cd6:	de bf       	out	0x3e, r29	; 62
    2cd8:	46 e6       	ldi	r20, 0x66	; 102
    2cda:	54 e4       	ldi	r21, 0x44	; 68
    2cdc:	61 e9       	ldi	r22, 0x91	; 145
    2cde:	70 e4       	ldi	r23, 0x40	; 64
    2ce0:	83 e0       	ldi	r24, 0x03	; 3
    2ce2:	0e 94 2c 57 	call	0xae58	; 0xae58 <_Z11lb_send_msg13LBMessageTypePKcPc>
    2ce6:	90 91 98 44 	lds	r25, 0x4498	; 0x804498 <_ZL17g_last_error_code>
    2cea:	81 e0       	ldi	r24, 0x01	; 1
    2cec:	99 23       	and	r25, r25
    2cee:	09 f4       	brne	.+2      	; 0x2cf2 <main+0x3d2>
    2cf0:	80 e0       	ldi	r24, 0x00	; 0
    2cf2:	88 23       	and	r24, r24
    2cf4:	31 f1       	breq	.+76     	; 0x2d42 <main+0x422>
    2cf6:	80 91 98 44 	lds	r24, 0x4498	; 0x804498 <_ZL17g_last_error_code>
    2cfa:	88 2f       	mov	r24, r24
    2cfc:	90 e0       	ldi	r25, 0x00	; 0
    2cfe:	29 2f       	mov	r18, r25
    2d00:	2f 93       	push	r18
    2d02:	8f 93       	push	r24
    2d04:	85 e9       	ldi	r24, 0x95	; 149
    2d06:	90 e4       	ldi	r25, 0x40	; 64
    2d08:	89 2f       	mov	r24, r25
    2d0a:	8f 93       	push	r24
    2d0c:	85 e9       	ldi	r24, 0x95	; 149
    2d0e:	90 e4       	ldi	r25, 0x40	; 64
    2d10:	8f 93       	push	r24
    2d12:	86 e6       	ldi	r24, 0x66	; 102
    2d14:	94 e4       	ldi	r25, 0x44	; 68
    2d16:	89 2f       	mov	r24, r25
    2d18:	8f 93       	push	r24
    2d1a:	86 e6       	ldi	r24, 0x66	; 102
    2d1c:	94 e4       	ldi	r25, 0x44	; 68
    2d1e:	8f 93       	push	r24
    2d20:	0e 94 0a 77 	call	0xee14	; 0xee14 <sprintf>
    2d24:	0f 90       	pop	r0
    2d26:	0f 90       	pop	r0
    2d28:	0f 90       	pop	r0
    2d2a:	0f 90       	pop	r0
    2d2c:	0f 90       	pop	r0
    2d2e:	0f 90       	pop	r0
    2d30:	46 e6       	ldi	r20, 0x66	; 102
    2d32:	54 e4       	ldi	r21, 0x44	; 68
    2d34:	68 e9       	ldi	r22, 0x98	; 152
    2d36:	70 e4       	ldi	r23, 0x40	; 64
    2d38:	83 e0       	ldi	r24, 0x03	; 3
    2d3a:	0e 94 2c 57 	call	0xae58	; 0xae58 <_Z11lb_send_msg13LBMessageTypePKcPc>
    2d3e:	10 92 98 44 	sts	0x4498, r1	; 0x804498 <_ZL17g_last_error_code>
    2d42:	90 91 99 44 	lds	r25, 0x4499	; 0x804499 <_ZL18g_last_status_code>
    2d46:	81 e0       	ldi	r24, 0x01	; 1
    2d48:	99 23       	and	r25, r25
    2d4a:	09 f4       	brne	.+2      	; 0x2d4e <main+0x42e>
    2d4c:	80 e0       	ldi	r24, 0x00	; 0
    2d4e:	88 23       	and	r24, r24
    2d50:	31 f1       	breq	.+76     	; 0x2d9e <main+0x47e>
    2d52:	80 91 99 44 	lds	r24, 0x4499	; 0x804499 <_ZL18g_last_status_code>
    2d56:	88 2f       	mov	r24, r24
    2d58:	90 e0       	ldi	r25, 0x00	; 0
    2d5a:	29 2f       	mov	r18, r25
    2d5c:	2f 93       	push	r18
    2d5e:	8f 93       	push	r24
    2d60:	85 e9       	ldi	r24, 0x95	; 149
    2d62:	90 e4       	ldi	r25, 0x40	; 64
    2d64:	89 2f       	mov	r24, r25
    2d66:	8f 93       	push	r24
    2d68:	85 e9       	ldi	r24, 0x95	; 149
    2d6a:	90 e4       	ldi	r25, 0x40	; 64
    2d6c:	8f 93       	push	r24
    2d6e:	86 e6       	ldi	r24, 0x66	; 102
    2d70:	94 e4       	ldi	r25, 0x44	; 68
    2d72:	89 2f       	mov	r24, r25
    2d74:	8f 93       	push	r24
    2d76:	86 e6       	ldi	r24, 0x66	; 102
    2d78:	94 e4       	ldi	r25, 0x44	; 68
    2d7a:	8f 93       	push	r24
    2d7c:	0e 94 0a 77 	call	0xee14	; 0xee14 <sprintf>
    2d80:	0f 90       	pop	r0
    2d82:	0f 90       	pop	r0
    2d84:	0f 90       	pop	r0
    2d86:	0f 90       	pop	r0
    2d88:	0f 90       	pop	r0
    2d8a:	0f 90       	pop	r0
    2d8c:	46 e6       	ldi	r20, 0x66	; 102
    2d8e:	54 e4       	ldi	r21, 0x44	; 68
    2d90:	6b e9       	ldi	r22, 0x9B	; 155
    2d92:	70 e4       	ldi	r23, 0x40	; 64
    2d94:	83 e0       	ldi	r24, 0x03	; 3
    2d96:	0e 94 2c 57 	call	0xae58	; 0xae58 <_Z11lb_send_msg13LBMessageTypePKcPc>
    2d9a:	10 92 99 44 	sts	0x4499, r1	; 0x804499 <_ZL18g_last_status_code>
    2d9e:	80 91 23 45 	lds	r24, 0x4523	; 0x804523 <g_check_for_next_event>
    2da2:	88 23       	and	r24, r24
    2da4:	09 f4       	brne	.+2      	; 0x2da8 <main+0x488>
    2da6:	41 c0       	rjmp	.+130    	; 0x2e2a <main+0x50a>
    2da8:	80 91 a8 44 	lds	r24, 0x44A8	; 0x8044a8 <_ZL12g_wifi_ready>
    2dac:	88 23       	and	r24, r24
    2dae:	69 f1       	breq	.+90     	; 0x2e0a <main+0x4ea>
    2db0:	10 92 23 45 	sts	0x4523, r1	; 0x804523 <g_check_for_next_event>
    2db4:	81 e0       	ldi	r24, 0x01	; 1
    2db6:	80 93 24 45 	sts	0x4524, r24	; 0x804524 <g_waiting_for_next_event>
    2dba:	80 91 99 44 	lds	r24, 0x4499	; 0x804499 <_ZL18g_last_status_code>
    2dbe:	88 2f       	mov	r24, r24
    2dc0:	90 e0       	ldi	r25, 0x00	; 0
    2dc2:	29 2f       	mov	r18, r25
    2dc4:	2f 93       	push	r18
    2dc6:	8f 93       	push	r24
    2dc8:	85 e9       	ldi	r24, 0x95	; 149
    2dca:	90 e4       	ldi	r25, 0x40	; 64
    2dcc:	89 2f       	mov	r24, r25
    2dce:	8f 93       	push	r24
    2dd0:	85 e9       	ldi	r24, 0x95	; 149
    2dd2:	90 e4       	ldi	r25, 0x40	; 64
    2dd4:	8f 93       	push	r24
    2dd6:	86 e6       	ldi	r24, 0x66	; 102
    2dd8:	94 e4       	ldi	r25, 0x44	; 68
    2dda:	89 2f       	mov	r24, r25
    2ddc:	8f 93       	push	r24
    2dde:	86 e6       	ldi	r24, 0x66	; 102
    2de0:	94 e4       	ldi	r25, 0x44	; 68
    2de2:	8f 93       	push	r24
    2de4:	0e 94 0a 77 	call	0xee14	; 0xee14 <sprintf>
    2de8:	0f 90       	pop	r0
    2dea:	0f 90       	pop	r0
    2dec:	0f 90       	pop	r0
    2dee:	0f 90       	pop	r0
    2df0:	0f 90       	pop	r0
    2df2:	0f 90       	pop	r0
    2df4:	4e e9       	ldi	r20, 0x9E	; 158
    2df6:	50 e4       	ldi	r21, 0x40	; 64
    2df8:	65 e8       	ldi	r22, 0x85	; 133
    2dfa:	70 e4       	ldi	r23, 0x40	; 64
    2dfc:	83 e0       	ldi	r24, 0x03	; 3
    2dfe:	0e 94 2c 57 	call	0xae58	; 0xae58 <_Z11lb_send_msg13LBMessageTypePKcPc>
    2e02:	83 e0       	ldi	r24, 0x03	; 3
    2e04:	80 93 13 40 	sts	0x4013, r24	; 0x804013 <_ZL11g_sleepType>
    2e08:	10 c0       	rjmp	.+32     	; 0x2e2a <main+0x50a>
    2e0a:	80 91 09 40 	lds	r24, 0x4009	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    2e0e:	88 23       	and	r24, r24
    2e10:	31 f4       	brne	.+12     	; 0x2e1e <main+0x4fe>
    2e12:	80 91 a6 44 	lds	r24, 0x44A6	; 0x8044a6 <_ZL19g_wifi_enable_delay>
    2e16:	88 23       	and	r24, r24
    2e18:	11 f4       	brne	.+4      	; 0x2e1e <main+0x4fe>
    2e1a:	81 e0       	ldi	r24, 0x01	; 1
    2e1c:	01 c0       	rjmp	.+2      	; 0x2e20 <main+0x500>
    2e1e:	80 e0       	ldi	r24, 0x00	; 0
    2e20:	88 23       	and	r24, r24
    2e22:	19 f0       	breq	.+6      	; 0x2e2a <main+0x50a>
    2e24:	81 e0       	ldi	r24, 0x01	; 1
    2e26:	80 93 a6 44 	sts	0x44A6, r24	; 0x8044a6 <_ZL19g_wifi_enable_delay>
    2e2a:	80 91 06 40 	lds	r24, 0x4006	; 0x804006 <_ZL28g_antenna_connection_changed>
    2e2e:	88 23       	and	r24, r24
    2e30:	d1 f0       	breq	.+52     	; 0x2e66 <main+0x546>
    2e32:	10 92 06 40 	sts	0x4006, r1	; 0x804006 <_ZL28g_antenna_connection_changed>
    2e36:	0e 94 0c 24 	call	0x4818	; 0x4818 <_Z18antennaIsConnectedv>
    2e3a:	88 23       	and	r24, r24
    2e3c:	11 f0       	breq	.+4      	; 0x2e42 <main+0x522>
    2e3e:	82 e0       	ldi	r24, 0x02	; 2
    2e40:	01 c0       	rjmp	.+2      	; 0x2e44 <main+0x524>
    2e42:	81 e0       	ldi	r24, 0x01	; 1
    2e44:	80 93 9c 44 	sts	0x449C, r24	; 0x80449c <g_antenna_connect_state>
    2e48:	90 91 9c 44 	lds	r25, 0x449C	; 0x80449c <g_antenna_connect_state>
    2e4c:	81 e0       	ldi	r24, 0x01	; 1
    2e4e:	91 30       	cpi	r25, 0x01	; 1
    2e50:	09 f0       	breq	.+2      	; 0x2e54 <main+0x534>
    2e52:	80 e0       	ldi	r24, 0x00	; 0
    2e54:	88 23       	and	r24, r24
    2e56:	21 f0       	breq	.+8      	; 0x2e60 <main+0x540>
    2e58:	81 e0       	ldi	r24, 0x01	; 1
    2e5a:	0e 94 61 6d 	call	0xdac2	; 0xdac2 <_Z15inhibitRFOutputb>
    2e5e:	03 c0       	rjmp	.+6      	; 0x2e66 <main+0x546>
    2e60:	80 e0       	ldi	r24, 0x00	; 0
    2e62:	0e 94 61 6d 	call	0xdac2	; 0xdac2 <_Z15inhibitRFOutputb>
    2e66:	80 91 27 45 	lds	r24, 0x4527	; 0x804527 <_ZL17g_go_to_sleep_now>
    2e6a:	88 23       	and	r24, r24
    2e6c:	09 f4       	brne	.+2      	; 0x2e70 <main+0x550>
    2e6e:	1f ce       	rjmp	.-962    	; 0x2aae <main+0x18e>
    2e70:	60 e0       	ldi	r22, 0x00	; 0
    2e72:	82 e4       	ldi	r24, 0x42	; 66
    2e74:	95 e4       	ldi	r25, 0x45	; 69
    2e76:	0e 94 93 4f 	call	0x9f26	; 0x9f26 <_ZN4leds5blinkE7Blink_t>
    2e7a:	0e 94 68 56 	call	0xacd0	; 0xacd0 <_Z15linkbus_disablev>
    2e7e:	0e 94 90 6e 	call	0xdd20	; 0xdd20 <_Z20shutdown_transmitterv>
    2e82:	81 e0       	ldi	r24, 0x01	; 1
    2e84:	0e 94 58 48 	call	0x90b0	; 0x90b0 <_Z10wifi_resetb>
    2e88:	80 e0       	ldi	r24, 0x00	; 0
    2e8a:	0e 94 41 48 	call	0x9082	; 0x9082 <_Z10wifi_powerb>
    2e8e:	0e 94 41 14 	call	0x2882	; 0x2882 <_Z12powerDown3V3v>
    2e92:	80 e0       	ldi	r24, 0x00	; 0
    2e94:	0e 94 67 14 	call	0x28ce	; 0x28ce <_Z6setFanb>
    2e98:	0e 94 6c 35 	call	0x6ad8	; 0x6ad8 <system_sleep_settings>
    2e9c:	10 92 24 45 	sts	0x4524, r1	; 0x804524 <g_waiting_for_next_event>
    2ea0:	82 e0       	ldi	r24, 0x02	; 2
    2ea2:	0e 94 dc 69 	call	0xd3b8	; 0xd3b8 <SLPCTRL_set_sleep_mode>
    2ea6:	81 e0       	ldi	r24, 0x01	; 1
    2ea8:	80 93 28 45 	sts	0x4528, r24	; 0x804528 <_ZL10g_sleeping>
    2eac:	80 91 27 45 	lds	r24, 0x4527	; 0x804527 <_ZL17g_go_to_sleep_now>
    2eb0:	88 23       	and	r24, r24
    2eb2:	01 f1       	breq	.+64     	; 0x2ef4 <main+0x5d4>
    2eb4:	80 e5       	ldi	r24, 0x50	; 80
    2eb6:	90 e0       	ldi	r25, 0x00	; 0
    2eb8:	20 e5       	ldi	r18, 0x50	; 80
    2eba:	30 e0       	ldi	r19, 0x00	; 0
    2ebc:	f9 01       	movw	r30, r18
    2ebe:	20 81       	ld	r18, Z
    2ec0:	29 7f       	andi	r18, 0xF9	; 249
    2ec2:	22 60       	ori	r18, 0x02	; 2
    2ec4:	fc 01       	movw	r30, r24
    2ec6:	20 83       	st	Z, r18
    2ec8:	f8 94       	cli
    2eca:	80 e5       	ldi	r24, 0x50	; 80
    2ecc:	90 e0       	ldi	r25, 0x00	; 0
    2ece:	20 e5       	ldi	r18, 0x50	; 80
    2ed0:	30 e0       	ldi	r19, 0x00	; 0
    2ed2:	f9 01       	movw	r30, r18
    2ed4:	20 81       	ld	r18, Z
    2ed6:	21 60       	ori	r18, 0x01	; 1
    2ed8:	fc 01       	movw	r30, r24
    2eda:	20 83       	st	Z, r18
    2edc:	78 94       	sei
    2ede:	88 95       	sleep
    2ee0:	80 e5       	ldi	r24, 0x50	; 80
    2ee2:	90 e0       	ldi	r25, 0x00	; 0
    2ee4:	20 e5       	ldi	r18, 0x50	; 80
    2ee6:	30 e0       	ldi	r19, 0x00	; 0
    2ee8:	f9 01       	movw	r30, r18
    2eea:	20 81       	ld	r18, Z
    2eec:	2e 7f       	andi	r18, 0xFE	; 254
    2eee:	fc 01       	movw	r30, r24
    2ef0:	20 83       	st	Z, r18
    2ef2:	dc cf       	rjmp	.-72     	; 0x2eac <main+0x58c>
    2ef4:	10 92 28 45 	sts	0x4528, r1	; 0x804528 <_ZL10g_sleeping>
    2ef8:	0e 94 0f 03 	call	0x61e	; 0x61e <atmel_start_init>
    2efc:	0e 94 54 14 	call	0x28a8	; 0x28a8 <_Z10powerUp3V3v>
    2f00:	0e 94 c2 6e 	call	0xdd84	; 0xdd84 <_Z16init_transmitterv>
    2f04:	80 91 2d 45 	lds	r24, 0x452D	; 0x80452d <_ZL12g_awakenedBy>
    2f08:	83 30       	cpi	r24, 0x03	; 3
    2f0a:	41 f0       	breq	.+16     	; 0x2f1c <main+0x5fc>
    2f0c:	80 91 2d 45 	lds	r24, 0x452D	; 0x80452d <_ZL12g_awakenedBy>
    2f10:	82 30       	cpi	r24, 0x02	; 2
    2f12:	21 f0       	breq	.+8      	; 0x2f1c <main+0x5fc>
    2f14:	80 91 2d 45 	lds	r24, 0x452D	; 0x80452d <_ZL12g_awakenedBy>
    2f18:	88 23       	and	r24, r24
    2f1a:	11 f4       	brne	.+4      	; 0x2f20 <main+0x600>
    2f1c:	81 e0       	ldi	r24, 0x01	; 1
    2f1e:	01 c0       	rjmp	.+2      	; 0x2f22 <main+0x602>
    2f20:	80 e0       	ldi	r24, 0x00	; 0
    2f22:	88 23       	and	r24, r24
    2f24:	41 f0       	breq	.+16     	; 0x2f36 <main+0x616>
    2f26:	0e 94 0c 24 	call	0x4818	; 0x4818 <_Z18antennaIsConnectedv>
    2f2a:	0e 94 9d 56 	call	0xad3a	; 0xad3a <_Z14linkbus_enablev>
    2f2e:	82 e0       	ldi	r24, 0x02	; 2
    2f30:	80 93 a6 44 	sts	0x44A6, r24	; 0x8044a6 <_ZL19g_wifi_enable_delay>
    2f34:	20 c0       	rjmp	.+64     	; 0x2f76 <main+0x656>
    2f36:	90 91 2d 45 	lds	r25, 0x452D	; 0x80452d <_ZL12g_awakenedBy>
    2f3a:	81 e0       	ldi	r24, 0x01	; 1
    2f3c:	91 30       	cpi	r25, 0x01	; 1
    2f3e:	09 f0       	breq	.+2      	; 0x2f42 <main+0x622>
    2f40:	80 e0       	ldi	r24, 0x00	; 0
    2f42:	88 23       	and	r24, r24
    2f44:	c1 f0       	breq	.+48     	; 0x2f76 <main+0x656>
    2f46:	81 e0       	ldi	r24, 0x01	; 1
    2f48:	0e 94 e5 6c 	call	0xd9ca	; 0xd9ca <_Z18powerToTransmitterb>
    2f4c:	90 91 20 45 	lds	r25, 0x4520	; 0x804520 <g_event_enabled>
    2f50:	81 e0       	ldi	r24, 0x01	; 1
    2f52:	89 27       	eor	r24, r25
    2f54:	88 23       	and	r24, r24
    2f56:	79 f0       	breq	.+30     	; 0x2f76 <main+0x656>
    2f58:	0e 94 58 20 	call	0x40b0	; 0x40b0 <_Z12eventEnabledv>
    2f5c:	80 93 9d 44 	sts	0x449D, r24	; 0x80449d <_ZL13g_start_event>
    2f60:	90 91 9d 44 	lds	r25, 0x449D	; 0x80449d <_ZL13g_start_event>
    2f64:	81 e0       	ldi	r24, 0x01	; 1
    2f66:	89 27       	eor	r24, r25
    2f68:	88 23       	and	r24, r24
    2f6a:	29 f0       	breq	.+10     	; 0x2f76 <main+0x656>
    2f6c:	0e 94 9d 56 	call	0xad3a	; 0xad3a <_Z14linkbus_enablev>
    2f70:	82 e0       	ldi	r24, 0x02	; 2
    2f72:	80 93 a6 44 	sts	0x44A6, r24	; 0x8044a6 <_ZL19g_wifi_enable_delay>
    2f76:	0e 94 44 29 	call	0x5288	; 0x5288 <_Z14eventScheduledv>
    2f7a:	80 93 21 45 	sts	0x4521, r24	; 0x804521 <g_event_scheduled>
    2f7e:	8d ee       	ldi	r24, 0xED	; 237
    2f80:	80 93 99 44 	sts	0x4499, r24	; 0x804499 <_ZL18g_last_status_code>
    2f84:	94 cd       	rjmp	.-1240   	; 0x2aae <main+0x18e>

00002f86 <_Z17handleLinkBusMsgsv>:
    2f86:	0f 93       	push	r16
    2f88:	1f 93       	push	r17
    2f8a:	cf 93       	push	r28
    2f8c:	df 93       	push	r29
    2f8e:	cd b7       	in	r28, 0x3d	; 61
    2f90:	de b7       	in	r29, 0x3e	; 62
    2f92:	e7 97       	sbiw	r28, 0x37	; 55
    2f94:	cd bf       	out	0x3d, r28	; 61
    2f96:	de bf       	out	0x3e, r29	; 62
    2f98:	81 e0       	ldi	r24, 0x01	; 1
    2f9a:	89 83       	std	Y+1, r24	; 0x01
    2f9c:	0e 94 35 55 	call	0xaa6a	; 0xaa6a <_Z18nextFullLBRxBufferv>
    2fa0:	8c 87       	std	Y+12, r24	; 0x0c
    2fa2:	9d 87       	std	Y+13, r25	; 0x0d
    2fa4:	21 e0       	ldi	r18, 0x01	; 1
    2fa6:	8c 85       	ldd	r24, Y+12	; 0x0c
    2fa8:	9d 85       	ldd	r25, Y+13	; 0x0d
    2faa:	89 2b       	or	r24, r25
    2fac:	09 f4       	brne	.+2      	; 0x2fb0 <_Z17handleLinkBusMsgsv+0x2a>
    2fae:	20 e0       	ldi	r18, 0x00	; 0
    2fb0:	22 23       	and	r18, r18
    2fb2:	11 f4       	brne	.+4      	; 0x2fb8 <_Z17handleLinkBusMsgsv+0x32>
    2fb4:	0c 94 01 20 	jmp	0x4002	; 0x4002 <__DATA_REGION_LENGTH__+0x2>
    2fb8:	8c 85       	ldd	r24, Y+12	; 0x0c
    2fba:	9d 85       	ldd	r25, Y+13	; 0x0d
    2fbc:	fc 01       	movw	r30, r24
    2fbe:	81 81       	ldd	r24, Z+1	; 0x01
    2fc0:	92 81       	ldd	r25, Z+2	; 0x02
    2fc2:	8e 87       	std	Y+14, r24	; 0x0e
    2fc4:	9f 87       	std	Y+15, r25	; 0x0f
    2fc6:	8e 85       	ldd	r24, Y+14	; 0x0e
    2fc8:	9f 85       	ldd	r25, Y+15	; 0x0f
    2fca:	81 3d       	cpi	r24, 0xD1	; 209
    2fcc:	fe e1       	ldi	r31, 0x1E	; 30
    2fce:	9f 07       	cpc	r25, r31
    2fd0:	09 f4       	brne	.+2      	; 0x2fd4 <_Z17handleLinkBusMsgsv+0x4e>
    2fd2:	e8 c6       	rjmp	.+3536   	; 0x3da4 <_Z17handleLinkBusMsgsv+0xe1e>
    2fd4:	82 3d       	cpi	r24, 0xD2	; 210
    2fd6:	2e e1       	ldi	r18, 0x1E	; 30
    2fd8:	92 07       	cpc	r25, r18
    2fda:	08 f0       	brcs	.+2      	; 0x2fde <_Z17handleLinkBusMsgsv+0x58>
    2fdc:	3d c0       	rjmp	.+122    	; 0x3058 <_Z17handleLinkBusMsgsv+0xd2>
    2fde:	84 38       	cpi	r24, 0x84	; 132
    2fe0:	e3 e0       	ldi	r30, 0x03	; 3
    2fe2:	9e 07       	cpc	r25, r30
    2fe4:	09 f4       	brne	.+2      	; 0x2fe8 <_Z17handleLinkBusMsgsv+0x62>
    2fe6:	07 c3       	rjmp	.+1550   	; 0x35f6 <_Z17handleLinkBusMsgsv+0x670>
    2fe8:	85 38       	cpi	r24, 0x85	; 133
    2fea:	f3 e0       	ldi	r31, 0x03	; 3
    2fec:	9f 07       	cpc	r25, r31
    2fee:	d0 f4       	brcc	.+52     	; 0x3024 <_Z17handleLinkBusMsgsv+0x9e>
    2ff0:	85 31       	cpi	r24, 0x15	; 21
    2ff2:	23 e0       	ldi	r18, 0x03	; 3
    2ff4:	92 07       	cpc	r25, r18
    2ff6:	09 f4       	brne	.+2      	; 0x2ffa <_Z17handleLinkBusMsgsv+0x74>
    2ff8:	24 c2       	rjmp	.+1096   	; 0x3442 <_Z17handleLinkBusMsgsv+0x4bc>
    2ffa:	86 31       	cpi	r24, 0x16	; 22
    2ffc:	e3 e0       	ldi	r30, 0x03	; 3
    2ffe:	9e 07       	cpc	r25, r30
    3000:	30 f4       	brcc	.+12     	; 0x300e <_Z17handleLinkBusMsgsv+0x88>
    3002:	84 35       	cpi	r24, 0x54	; 84
    3004:	91 05       	cpc	r25, r1
    3006:	09 f4       	brne	.+2      	; 0x300a <_Z17handleLinkBusMsgsv+0x84>
    3008:	c0 c5       	rjmp	.+2944   	; 0x3b8a <_Z17handleLinkBusMsgsv+0xc04>
    300a:	0c 94 d4 1f 	jmp	0x3fa8	; 0x3fa8 <_Z17handleLinkBusMsgsv+0x1022>
    300e:	8e 31       	cpi	r24, 0x1E	; 30
    3010:	f3 e0       	ldi	r31, 0x03	; 3
    3012:	9f 07       	cpc	r25, r31
    3014:	09 f4       	brne	.+2      	; 0x3018 <_Z17handleLinkBusMsgsv+0x92>
    3016:	7c c4       	rjmp	.+2296   	; 0x3910 <_Z17handleLinkBusMsgsv+0x98a>
    3018:	81 36       	cpi	r24, 0x61	; 97
    301a:	93 40       	sbci	r25, 0x03	; 3
    301c:	09 f4       	brne	.+2      	; 0x3020 <_Z17handleLinkBusMsgsv+0x9a>
    301e:	98 c6       	rjmp	.+3376   	; 0x3d50 <_Z17handleLinkBusMsgsv+0xdca>
    3020:	0c 94 d4 1f 	jmp	0x3fa8	; 0x3fa8 <_Z17handleLinkBusMsgsv+0x1022>
    3024:	86 3a       	cpi	r24, 0xA6	; 166
    3026:	ec e1       	ldi	r30, 0x1C	; 28
    3028:	9e 07       	cpc	r25, r30
    302a:	09 f4       	brne	.+2      	; 0x302e <_Z17handleLinkBusMsgsv+0xa8>
    302c:	38 c7       	rjmp	.+3696   	; 0x3e9e <_Z17handleLinkBusMsgsv+0xf18>
    302e:	87 3a       	cpi	r24, 0xA7	; 167
    3030:	fc e1       	ldi	r31, 0x1C	; 28
    3032:	9f 07       	cpc	r25, r31
    3034:	30 f4       	brcc	.+12     	; 0x3042 <_Z17handleLinkBusMsgsv+0xbc>
    3036:	8f 3a       	cpi	r24, 0xAF	; 175
    3038:	93 40       	sbci	r25, 0x03	; 3
    303a:	09 f4       	brne	.+2      	; 0x303e <_Z17handleLinkBusMsgsv+0xb8>
    303c:	4a c0       	rjmp	.+148    	; 0x30d2 <_Z17handleLinkBusMsgsv+0x14c>
    303e:	0c 94 d4 1f 	jmp	0x3fa8	; 0x3fa8 <_Z17handleLinkBusMsgsv+0x1022>
    3042:	88 31       	cpi	r24, 0x18	; 24
    3044:	ed e1       	ldi	r30, 0x1D	; 29
    3046:	9e 07       	cpc	r25, r30
    3048:	09 f4       	brne	.+2      	; 0x304c <_Z17handleLinkBusMsgsv+0xc6>
    304a:	b4 c7       	rjmp	.+3944   	; 0x3fb4 <_Z17handleLinkBusMsgsv+0x102e>
    304c:	82 38       	cpi	r24, 0x82	; 130
    304e:	9e 41       	sbci	r25, 0x1E	; 30
    3050:	09 f4       	brne	.+2      	; 0x3054 <_Z17handleLinkBusMsgsv+0xce>
    3052:	0f c1       	rjmp	.+542    	; 0x3272 <_Z17handleLinkBusMsgsv+0x2ec>
    3054:	0c 94 d4 1f 	jmp	0x3fa8	; 0x3fa8 <_Z17handleLinkBusMsgsv+0x1022>
    3058:	8a 39       	cpi	r24, 0x9A	; 154
    305a:	23 e2       	ldi	r18, 0x23	; 35
    305c:	92 07       	cpc	r25, r18
    305e:	09 f4       	brne	.+2      	; 0x3062 <_Z17handleLinkBusMsgsv+0xdc>
    3060:	04 c1       	rjmp	.+520    	; 0x326a <_Z17handleLinkBusMsgsv+0x2e4>
    3062:	8b 39       	cpi	r24, 0x9B	; 155
    3064:	e3 e2       	ldi	r30, 0x23	; 35
    3066:	9e 07       	cpc	r25, r30
    3068:	d0 f4       	brcc	.+52     	; 0x309e <_Z17handleLinkBusMsgsv+0x118>
    306a:	8e 36       	cpi	r24, 0x6E	; 110
    306c:	f1 e2       	ldi	r31, 0x21	; 33
    306e:	9f 07       	cpc	r25, r31
    3070:	09 f4       	brne	.+2      	; 0x3074 <_Z17handleLinkBusMsgsv+0xee>
    3072:	a0 c7       	rjmp	.+3904   	; 0x3fb4 <_Z17handleLinkBusMsgsv+0x102e>
    3074:	8f 36       	cpi	r24, 0x6F	; 111
    3076:	21 e2       	ldi	r18, 0x21	; 33
    3078:	92 07       	cpc	r25, r18
    307a:	30 f4       	brcc	.+12     	; 0x3088 <_Z17handleLinkBusMsgsv+0x102>
    307c:	87 35       	cpi	r24, 0x57	; 87
    307e:	90 42       	sbci	r25, 0x20	; 32
    3080:	09 f4       	brne	.+2      	; 0x3084 <_Z17handleLinkBusMsgsv+0xfe>
    3082:	4b c0       	rjmp	.+150    	; 0x311a <_Z17handleLinkBusMsgsv+0x194>
    3084:	0c 94 d4 1f 	jmp	0x3fa8	; 0x3fa8 <_Z17handleLinkBusMsgsv+0x1022>
    3088:	8d 3a       	cpi	r24, 0xAD	; 173
    308a:	f2 e2       	ldi	r31, 0x22	; 34
    308c:	9f 07       	cpc	r25, r31
    308e:	09 f4       	brne	.+2      	; 0x3092 <_Z17handleLinkBusMsgsv+0x10c>
    3090:	5e c1       	rjmp	.+700    	; 0x334e <_Z17handleLinkBusMsgsv+0x3c8>
    3092:	81 3c       	cpi	r24, 0xC1	; 193
    3094:	92 42       	sbci	r25, 0x22	; 34
    3096:	09 f4       	brne	.+2      	; 0x309a <_Z17handleLinkBusMsgsv+0x114>
    3098:	cf c1       	rjmp	.+926    	; 0x3438 <_Z17handleLinkBusMsgsv+0x4b2>
    309a:	0c 94 d4 1f 	jmp	0x3fa8	; 0x3fa8 <_Z17handleLinkBusMsgsv+0x1022>
    309e:	80 3d       	cpi	r24, 0xD0	; 208
    30a0:	e3 e2       	ldi	r30, 0x23	; 35
    30a2:	9e 07       	cpc	r25, r30
    30a4:	09 f4       	brne	.+2      	; 0x30a8 <_Z17handleLinkBusMsgsv+0x122>
    30a6:	a2 c4       	rjmp	.+2372   	; 0x39ec <_Z17handleLinkBusMsgsv+0xa66>
    30a8:	81 3d       	cpi	r24, 0xD1	; 209
    30aa:	f3 e2       	ldi	r31, 0x23	; 35
    30ac:	9f 07       	cpc	r25, r31
    30ae:	30 f4       	brcc	.+12     	; 0x30bc <_Z17handleLinkBusMsgsv+0x136>
    30b0:	8f 3c       	cpi	r24, 0xCF	; 207
    30b2:	93 42       	sbci	r25, 0x23	; 35
    30b4:	09 f4       	brne	.+2      	; 0x30b8 <_Z17handleLinkBusMsgsv+0x132>
    30b6:	53 c7       	rjmp	.+3750   	; 0x3f5e <_Z17handleLinkBusMsgsv+0xfd8>
    30b8:	0c 94 d4 1f 	jmp	0x3fa8	; 0x3fa8 <_Z17handleLinkBusMsgsv+0x1022>
    30bc:	87 3f       	cpi	r24, 0xF7	; 247
    30be:	e3 e2       	ldi	r30, 0x23	; 35
    30c0:	9e 07       	cpc	r25, r30
    30c2:	09 f4       	brne	.+2      	; 0x30c6 <_Z17handleLinkBusMsgsv+0x140>
    30c4:	36 c3       	rjmp	.+1644   	; 0x3732 <_Z17handleLinkBusMsgsv+0x7ac>
    30c6:	8c 39       	cpi	r24, 0x9C	; 156
    30c8:	94 42       	sbci	r25, 0x24	; 36
    30ca:	09 f4       	brne	.+2      	; 0x30ce <_Z17handleLinkBusMsgsv+0x148>
    30cc:	65 c7       	rjmp	.+3786   	; 0x3f98 <_Z17handleLinkBusMsgsv+0x1012>
    30ce:	0c 94 d4 1f 	jmp	0x3fa8	; 0x3fa8 <_Z17handleLinkBusMsgsv+0x1022>
    30d2:	8c 85       	ldd	r24, Y+12	; 0x0c
    30d4:	9d 85       	ldd	r25, Y+13	; 0x0d
    30d6:	fc 01       	movw	r30, r24
    30d8:	83 81       	ldd	r24, Z+3	; 0x03
    30da:	88 23       	and	r24, r24
    30dc:	09 f4       	brne	.+2      	; 0x30e0 <_Z17handleLinkBusMsgsv+0x15a>
    30de:	6c c7       	rjmp	.+3800   	; 0x3fb8 <_Z17handleLinkBusMsgsv+0x1032>
    30e0:	8c 85       	ldd	r24, Y+12	; 0x0c
    30e2:	9d 85       	ldd	r25, Y+13	; 0x0d
    30e4:	03 96       	adiw	r24, 0x03	; 3
    30e6:	0e 94 78 76 	call	0xecf0	; 0xecf0 <atoi>
    30ea:	21 e0       	ldi	r18, 0x01	; 1
    30ec:	89 2b       	or	r24, r25
    30ee:	09 f4       	brne	.+2      	; 0x30f2 <_Z17handleLinkBusMsgsv+0x16c>
    30f0:	20 e0       	ldi	r18, 0x00	; 0
    30f2:	28 8b       	std	Y+16, r18	; 0x10
    30f4:	0e 94 34 24 	call	0x4868	; 0x4868 <_Z12suspendEventv>
    30f8:	0e 94 68 56 	call	0xacd0	; 0xacd0 <_Z15linkbus_disablev>
    30fc:	10 92 09 40 	sts	0x4009, r1	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    3100:	10 92 13 40 	sts	0x4013, r1	; 0x804013 <_ZL11g_sleepType>
    3104:	98 89       	ldd	r25, Y+16	; 0x10
    3106:	81 e0       	ldi	r24, 0x01	; 1
    3108:	89 27       	eor	r24, r25
    310a:	88 23       	and	r24, r24
    310c:	09 f4       	brne	.+2      	; 0x3110 <_Z17handleLinkBusMsgsv+0x18a>
    310e:	54 c7       	rjmp	.+3752   	; 0x3fb8 <_Z17handleLinkBusMsgsv+0x1032>
    3110:	80 e0       	ldi	r24, 0x00	; 0
    3112:	0e 94 41 48 	call	0x9082	; 0x9082 <_Z10wifi_powerb>
    3116:	0c 94 dc 1f 	jmp	0x3fb8	; 0x3fb8 <_Z17handleLinkBusMsgsv+0x1032>
    311a:	10 92 20 45 	sts	0x4520, r1	; 0x804520 <g_event_enabled>
    311e:	81 e0       	ldi	r24, 0x01	; 1
    3120:	80 93 58 45 	sts	0x4558, r24	; 0x804558 <g_enable_manual_transmissions>
    3124:	8c 85       	ldd	r24, Y+12	; 0x0c
    3126:	9d 85       	ldd	r25, Y+13	; 0x0d
    3128:	fc 01       	movw	r30, r24
    312a:	83 81       	ldd	r24, Z+3	; 0x03
    312c:	88 23       	and	r24, r24
    312e:	09 f4       	brne	.+2      	; 0x3132 <_Z17handleLinkBusMsgsv+0x1ac>
    3130:	45 c7       	rjmp	.+3722   	; 0x3fbc <_Z17handleLinkBusMsgsv+0x1036>
    3132:	8c 85       	ldd	r24, Y+12	; 0x0c
    3134:	9d 85       	ldd	r25, Y+13	; 0x0d
    3136:	03 96       	adiw	r24, 0x03	; 3
    3138:	89 8b       	std	Y+17, r24	; 0x11
    313a:	9a 8b       	std	Y+18, r25	; 0x12
    313c:	89 89       	ldd	r24, Y+17	; 0x11
    313e:	9a 89       	ldd	r25, Y+18	; 0x12
    3140:	0e 94 d5 76 	call	0xedaa	; 0xedaa <strlen>
    3144:	8b 8b       	std	Y+19, r24	; 0x13
    3146:	9c 8b       	std	Y+20, r25	; 0x14
    3148:	80 91 58 45 	lds	r24, 0x4558	; 0x804558 <g_enable_manual_transmissions>
    314c:	8d 8b       	std	Y+21, r24	; 0x15
    314e:	8b 89       	ldd	r24, Y+19	; 0x13
    3150:	9c 89       	ldd	r25, Y+20	; 0x14
    3152:	02 97       	sbiw	r24, 0x02	; 2
    3154:	b9 f4       	brne	.+46     	; 0x3184 <_Z17handleLinkBusMsgsv+0x1fe>
    3156:	89 89       	ldd	r24, Y+17	; 0x11
    3158:	9a 89       	ldd	r25, Y+18	; 0x12
    315a:	fc 01       	movw	r30, r24
    315c:	80 81       	ld	r24, Z
    315e:	8c 35       	cpi	r24, 0x5C	; 92
    3160:	89 f4       	brne	.+34     	; 0x3184 <_Z17handleLinkBusMsgsv+0x1fe>
    3162:	89 89       	ldd	r24, Y+17	; 0x11
    3164:	9a 89       	ldd	r25, Y+18	; 0x12
    3166:	01 96       	adiw	r24, 0x01	; 1
    3168:	fc 01       	movw	r30, r24
    316a:	80 81       	ld	r24, Z
    316c:	82 34       	cpi	r24, 0x42	; 66
    316e:	51 f4       	brne	.+20     	; 0x3184 <_Z17handleLinkBusMsgsv+0x1fe>
    3170:	10 92 58 45 	sts	0x4558, r1	; 0x804558 <g_enable_manual_transmissions>
    3174:	83 e4       	ldi	r24, 0x43	; 67
    3176:	95 e4       	ldi	r25, 0x45	; 69
    3178:	0e 94 c1 32 	call	0x6582	; 0x6582 <_ZN18CircularStringBuff3popEv>
    317c:	8d 89       	ldd	r24, Y+21	; 0x15
    317e:	80 93 58 45 	sts	0x4558, r24	; 0x804558 <g_enable_manual_transmissions>
    3182:	1c c7       	rjmp	.+3640   	; 0x3fbc <_Z17handleLinkBusMsgsv+0x1036>
    3184:	8b 89       	ldd	r24, Y+19	; 0x13
    3186:	9c 89       	ldd	r25, Y+20	; 0x14
    3188:	02 97       	sbiw	r24, 0x02	; 2
    318a:	ac f1       	brlt	.+106    	; 0x31f6 <_Z17handleLinkBusMsgsv+0x270>
    318c:	1a 82       	std	Y+2, r1	; 0x02
    318e:	1b 82       	std	Y+3, r1	; 0x03
    3190:	10 92 58 45 	sts	0x4558, r1	; 0x804558 <g_enable_manual_transmissions>
    3194:	83 e4       	ldi	r24, 0x43	; 67
    3196:	95 e4       	ldi	r25, 0x45	; 69
    3198:	0e 94 44 32 	call	0x6488	; 0x6488 <_ZNK18CircularStringBuff4fullEv>
    319c:	98 2f       	mov	r25, r24
    319e:	81 e0       	ldi	r24, 0x01	; 1
    31a0:	89 27       	eor	r24, r25
    31a2:	88 23       	and	r24, r24
    31a4:	69 f0       	breq	.+26     	; 0x31c0 <_Z17handleLinkBusMsgsv+0x23a>
    31a6:	2a 81       	ldd	r18, Y+2	; 0x02
    31a8:	3b 81       	ldd	r19, Y+3	; 0x03
    31aa:	8b 89       	ldd	r24, Y+19	; 0x13
    31ac:	9c 89       	ldd	r25, Y+20	; 0x14
    31ae:	28 17       	cp	r18, r24
    31b0:	39 07       	cpc	r19, r25
    31b2:	34 f4       	brge	.+12     	; 0x31c0 <_Z17handleLinkBusMsgsv+0x23a>
    31b4:	8a 81       	ldd	r24, Y+2	; 0x02
    31b6:	9b 81       	ldd	r25, Y+3	; 0x03
    31b8:	45 97       	sbiw	r24, 0x15	; 21
    31ba:	14 f4       	brge	.+4      	; 0x31c0 <_Z17handleLinkBusMsgsv+0x23a>
    31bc:	81 e0       	ldi	r24, 0x01	; 1
    31be:	01 c0       	rjmp	.+2      	; 0x31c2 <_Z17handleLinkBusMsgsv+0x23c>
    31c0:	80 e0       	ldi	r24, 0x00	; 0
    31c2:	88 23       	and	r24, r24
    31c4:	a1 f0       	breq	.+40     	; 0x31ee <_Z17handleLinkBusMsgsv+0x268>
    31c6:	8a 81       	ldd	r24, Y+2	; 0x02
    31c8:	9b 81       	ldd	r25, Y+3	; 0x03
    31ca:	9c 01       	movw	r18, r24
    31cc:	2f 5f       	subi	r18, 0xFF	; 255
    31ce:	3f 4f       	sbci	r19, 0xFF	; 255
    31d0:	2a 83       	std	Y+2, r18	; 0x02
    31d2:	3b 83       	std	Y+3, r19	; 0x03
    31d4:	2c 85       	ldd	r18, Y+12	; 0x0c
    31d6:	3d 85       	ldd	r19, Y+13	; 0x0d
    31d8:	82 0f       	add	r24, r18
    31da:	93 1f       	adc	r25, r19
    31dc:	03 96       	adiw	r24, 0x03	; 3
    31de:	fc 01       	movw	r30, r24
    31e0:	80 81       	ld	r24, Z
    31e2:	68 2f       	mov	r22, r24
    31e4:	83 e4       	ldi	r24, 0x43	; 67
    31e6:	95 e4       	ldi	r25, 0x45	; 69
    31e8:	0e 94 54 32 	call	0x64a8	; 0x64a8 <_ZN18CircularStringBuff3putEc>
    31ec:	d3 cf       	rjmp	.-90     	; 0x3194 <_Z17handleLinkBusMsgsv+0x20e>
    31ee:	8d 89       	ldd	r24, Y+21	; 0x15
    31f0:	80 93 58 45 	sts	0x4558, r24	; 0x804558 <g_enable_manual_transmissions>
    31f4:	e3 c6       	rjmp	.+3526   	; 0x3fbc <_Z17handleLinkBusMsgsv+0x1036>
    31f6:	8c 85       	ldd	r24, Y+12	; 0x0c
    31f8:	9d 85       	ldd	r25, Y+13	; 0x0d
    31fa:	fc 01       	movw	r30, r24
    31fc:	83 81       	ldd	r24, Z+3	; 0x03
    31fe:	8e 8b       	std	Y+22, r24	; 0x16
    3200:	8e 89       	ldd	r24, Y+22	; 0x16
    3202:	8b 35       	cpi	r24, 0x5B	; 91
    3204:	69 f4       	brne	.+26     	; 0x3220 <_Z17handleLinkBusMsgsv+0x29a>
    3206:	81 e0       	ldi	r24, 0x01	; 1
    3208:	0e 94 e5 6c 	call	0xd9ca	; 0xd9ca <_Z18powerToTransmitterb>
    320c:	41 e0       	ldi	r20, 0x01	; 1
    320e:	67 e0       	ldi	r22, 0x07	; 7
    3210:	82 e4       	ldi	r24, 0x42	; 66
    3212:	95 e4       	ldi	r25, 0x45	; 69
    3214:	0e 94 a9 4f 	call	0x9f52	; 0x9f52 <_ZN4leds5blinkE7Blink_tb>
    3218:	81 e0       	ldi	r24, 0x01	; 1
    321a:	0e 94 fe 6c 	call	0xd9fc	; 0xd9fc <_Z9txKeyDownb>
    321e:	ce c6       	rjmp	.+3484   	; 0x3fbc <_Z17handleLinkBusMsgsv+0x1036>
    3220:	8e 89       	ldd	r24, Y+22	; 0x16
    3222:	8d 35       	cpi	r24, 0x5D	; 93
    3224:	69 f4       	brne	.+26     	; 0x3240 <_Z17handleLinkBusMsgsv+0x2ba>
    3226:	80 e0       	ldi	r24, 0x00	; 0
    3228:	0e 94 fe 6c 	call	0xd9fc	; 0xd9fc <_Z9txKeyDownb>
    322c:	80 e0       	ldi	r24, 0x00	; 0
    322e:	0e 94 e5 6c 	call	0xd9ca	; 0xd9ca <_Z18powerToTransmitterb>
    3232:	41 e0       	ldi	r20, 0x01	; 1
    3234:	61 e0       	ldi	r22, 0x01	; 1
    3236:	82 e4       	ldi	r24, 0x42	; 66
    3238:	95 e4       	ldi	r25, 0x45	; 69
    323a:	0e 94 a9 4f 	call	0x9f52	; 0x9f52 <_ZN4leds5blinkE7Blink_tb>
    323e:	be c6       	rjmp	.+3452   	; 0x3fbc <_Z17handleLinkBusMsgsv+0x1036>
    3240:	8e 89       	ldd	r24, Y+22	; 0x16
    3242:	8e 35       	cpi	r24, 0x5E	; 94
    3244:	39 f4       	brne	.+14     	; 0x3254 <_Z17handleLinkBusMsgsv+0x2ce>
    3246:	0e 94 34 24 	call	0x4868	; 0x4868 <_Z12suspendEventv>
    324a:	10 92 09 40 	sts	0x4009, r1	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    324e:	10 92 13 40 	sts	0x4013, r1	; 0x804013 <_ZL11g_sleepType>
    3252:	b4 c6       	rjmp	.+3432   	; 0x3fbc <_Z17handleLinkBusMsgsv+0x1036>
    3254:	10 92 58 45 	sts	0x4558, r1	; 0x804558 <g_enable_manual_transmissions>
    3258:	6e 89       	ldd	r22, Y+22	; 0x16
    325a:	83 e4       	ldi	r24, 0x43	; 67
    325c:	95 e4       	ldi	r25, 0x45	; 69
    325e:	0e 94 54 32 	call	0x64a8	; 0x64a8 <_ZN18CircularStringBuff3putEc>
    3262:	8d 89       	ldd	r24, Y+21	; 0x15
    3264:	80 93 58 45 	sts	0x4558, r24	; 0x804558 <g_enable_manual_transmissions>
    3268:	a9 c6       	rjmp	.+3410   	; 0x3fbc <_Z17handleLinkBusMsgsv+0x1036>
    326a:	82 e0       	ldi	r24, 0x02	; 2
    326c:	0e 94 0a 21 	call	0x4214	; 0x4214 <_Z8wdt_init7WDReset>
    3270:	ff cf       	rjmp	.-2      	; 0x3270 <_Z17handleLinkBusMsgsv+0x2ea>
    3272:	8c 85       	ldd	r24, Y+12	; 0x0c
    3274:	9d 85       	ldd	r25, Y+13	; 0x0d
    3276:	fc 01       	movw	r30, r24
    3278:	83 81       	ldd	r24, Z+3	; 0x03
    327a:	8f 8b       	std	Y+23, r24	; 0x17
    327c:	81 e0       	ldi	r24, 0x01	; 1
    327e:	80 93 0a 40 	sts	0x400A, r24	; 0x80400a <_ZL13g_wifi_active>
    3282:	8f 89       	ldd	r24, Y+23	; 0x17
    3284:	8a 35       	cpi	r24, 0x5A	; 90
    3286:	21 f4       	brne	.+8      	; 0x3290 <_Z17handleLinkBusMsgsv+0x30a>
    3288:	88 e7       	ldi	r24, 0x78	; 120
    328a:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    328e:	98 c6       	rjmp	.+3376   	; 0x3fc0 <_Z17handleLinkBusMsgsv+0x103a>
    3290:	8f 89       	ldd	r24, Y+23	; 0x17
    3292:	80 33       	cpi	r24, 0x30	; 48
    3294:	c9 f5       	brne	.+114    	; 0x3308 <_Z17handleLinkBusMsgsv+0x382>
    3296:	81 e0       	ldi	r24, 0x01	; 1
    3298:	80 93 a8 44 	sts	0x44A8, r24	; 0x8044a8 <_ZL12g_wifi_ready>
    329c:	80 e0       	ldi	r24, 0x00	; 0
    329e:	90 e0       	ldi	r25, 0x00	; 0
    32a0:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <time>
    32a4:	dc 01       	movw	r26, r24
    32a6:	cb 01       	movw	r24, r22
    32a8:	2b 2f       	mov	r18, r27
    32aa:	2f 93       	push	r18
    32ac:	2a 2f       	mov	r18, r26
    32ae:	2f 93       	push	r18
    32b0:	29 2f       	mov	r18, r25
    32b2:	2f 93       	push	r18
    32b4:	8f 93       	push	r24
    32b6:	8d e8       	ldi	r24, 0x8D	; 141
    32b8:	90 e4       	ldi	r25, 0x40	; 64
    32ba:	89 2f       	mov	r24, r25
    32bc:	8f 93       	push	r24
    32be:	8d e8       	ldi	r24, 0x8D	; 141
    32c0:	90 e4       	ldi	r25, 0x40	; 64
    32c2:	8f 93       	push	r24
    32c4:	86 e6       	ldi	r24, 0x66	; 102
    32c6:	94 e4       	ldi	r25, 0x44	; 68
    32c8:	89 2f       	mov	r24, r25
    32ca:	8f 93       	push	r24
    32cc:	86 e6       	ldi	r24, 0x66	; 102
    32ce:	94 e4       	ldi	r25, 0x44	; 68
    32d0:	8f 93       	push	r24
    32d2:	0e 94 0a 77 	call	0xee14	; 0xee14 <sprintf>
    32d6:	8d b7       	in	r24, 0x3d	; 61
    32d8:	9e b7       	in	r25, 0x3e	; 62
    32da:	08 96       	adiw	r24, 0x08	; 8
    32dc:	cd bf       	out	0x3d, r28	; 61
    32de:	de bf       	out	0x3e, r29	; 62
    32e0:	46 e6       	ldi	r20, 0x66	; 102
    32e2:	54 e4       	ldi	r21, 0x44	; 68
    32e4:	61 e9       	ldi	r22, 0x91	; 145
    32e6:	70 e4       	ldi	r23, 0x40	; 64
    32e8:	83 e0       	ldi	r24, 0x03	; 3
    32ea:	0e 94 2c 57 	call	0xae58	; 0xae58 <_Z11lb_send_msg13LBMessageTypePKcPc>
    32ee:	80 91 24 45 	lds	r24, 0x4524	; 0x804524 <g_waiting_for_next_event>
    32f2:	88 23       	and	r24, r24
    32f4:	09 f4       	brne	.+2      	; 0x32f8 <_Z17handleLinkBusMsgsv+0x372>
    32f6:	64 c6       	rjmp	.+3272   	; 0x3fc0 <_Z17handleLinkBusMsgsv+0x103a>
    32f8:	4e e9       	ldi	r20, 0x9E	; 158
    32fa:	50 e4       	ldi	r21, 0x40	; 64
    32fc:	65 e8       	ldi	r22, 0x85	; 133
    32fe:	70 e4       	ldi	r23, 0x40	; 64
    3300:	83 e0       	ldi	r24, 0x03	; 3
    3302:	0e 94 2c 57 	call	0xae58	; 0xae58 <_Z11lb_send_msg13LBMessageTypePKcPc>
    3306:	5c c6       	rjmp	.+3256   	; 0x3fc0 <_Z17handleLinkBusMsgsv+0x103a>
    3308:	8f 89       	ldd	r24, Y+23	; 0x17
    330a:	82 33       	cpi	r24, 0x32	; 50
    330c:	79 f4       	brne	.+30     	; 0x332c <_Z17handleLinkBusMsgsv+0x3a6>
    330e:	81 e0       	ldi	r24, 0x01	; 1
    3310:	80 93 a6 44 	sts	0x44A6, r24	; 0x8044a6 <_ZL19g_wifi_enable_delay>
    3314:	90 91 20 45 	lds	r25, 0x4520	; 0x804520 <g_event_enabled>
    3318:	81 e0       	ldi	r24, 0x01	; 1
    331a:	89 27       	eor	r24, r25
    331c:	88 23       	and	r24, r24
    331e:	19 f0       	breq	.+6      	; 0x3326 <_Z17handleLinkBusMsgsv+0x3a0>
    3320:	81 e0       	ldi	r24, 0x01	; 1
    3322:	80 93 9d 44 	sts	0x449D, r24	; 0x80449d <_ZL13g_start_event>
    3326:	0e 94 0c 24 	call	0x4818	; 0x4818 <_Z18antennaIsConnectedv>
    332a:	4a c6       	rjmp	.+3220   	; 0x3fc0 <_Z17handleLinkBusMsgsv+0x103a>
    332c:	8f 89       	ldd	r24, Y+23	; 0x17
    332e:	83 33       	cpi	r24, 0x33	; 51
    3330:	09 f0       	breq	.+2      	; 0x3334 <_Z17handleLinkBusMsgsv+0x3ae>
    3332:	46 c6       	rjmp	.+3212   	; 0x3fc0 <_Z17handleLinkBusMsgsv+0x103a>
    3334:	10 92 a6 44 	sts	0x44A6, r1	; 0x8044a6 <_ZL19g_wifi_enable_delay>
    3338:	81 e0       	ldi	r24, 0x01	; 1
    333a:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    333e:	10 92 24 45 	sts	0x4524, r1	; 0x804524 <g_waiting_for_next_event>
    3342:	10 92 0a 40 	sts	0x400A, r1	; 0x80400a <_ZL13g_wifi_active>
    3346:	81 e0       	ldi	r24, 0x01	; 1
    3348:	80 93 a7 44 	sts	0x44A7, r24	; 0x8044a7 <_ZL20g_shutting_down_wifi>
    334c:	39 c6       	rjmp	.+3186   	; 0x3fc0 <_Z17handleLinkBusMsgsv+0x103a>
    334e:	8c 85       	ldd	r24, Y+12	; 0x0c
    3350:	9d 85       	ldd	r25, Y+13	; 0x0d
    3352:	fc 01       	movw	r30, r24
    3354:	83 81       	ldd	r24, Z+3	; 0x03
    3356:	88 23       	and	r24, r24
    3358:	09 f4       	brne	.+2      	; 0x335c <_Z17handleLinkBusMsgsv+0x3d6>
    335a:	34 c6       	rjmp	.+3176   	; 0x3fc4 <_Z17handleLinkBusMsgsv+0x103e>
    335c:	8c 85       	ldd	r24, Y+12	; 0x0c
    335e:	9d 85       	ldd	r25, Y+13	; 0x0d
    3360:	fc 01       	movw	r30, r24
    3362:	83 81       	ldd	r24, Z+3	; 0x03
    3364:	8d 34       	cpi	r24, 0x4D	; 77
    3366:	81 f4       	brne	.+32     	; 0x3388 <_Z17handleLinkBusMsgsv+0x402>
    3368:	8c 85       	ldd	r24, Y+12	; 0x0c
    336a:	9d 85       	ldd	r25, Y+13	; 0x0d
    336c:	fc 01       	movw	r30, r24
    336e:	80 8d       	ldd	r24, Z+24	; 0x18
    3370:	88 23       	and	r24, r24
    3372:	51 f0       	breq	.+20     	; 0x3388 <_Z17handleLinkBusMsgsv+0x402>
    3374:	8c 85       	ldd	r24, Y+12	; 0x0c
    3376:	9d 85       	ldd	r25, Y+13	; 0x0d
    3378:	48 96       	adiw	r24, 0x18	; 24
    337a:	0e 94 78 76 	call	0xecf0	; 0xecf0 <atoi>
    337e:	80 93 66 45 	sts	0x4566, r24	; 0x804566 <_ZZ17handleLinkBusMsgsvE6pwr_mW>
    3382:	90 93 67 45 	sts	0x4567, r25	; 0x804567 <_ZZ17handleLinkBusMsgsvE6pwr_mW+0x1>
    3386:	09 c0       	rjmp	.+18     	; 0x339a <_Z17handleLinkBusMsgsv+0x414>
    3388:	8c 85       	ldd	r24, Y+12	; 0x0c
    338a:	9d 85       	ldd	r25, Y+13	; 0x0d
    338c:	03 96       	adiw	r24, 0x03	; 3
    338e:	0e 94 78 76 	call	0xecf0	; 0xecf0 <atoi>
    3392:	80 93 66 45 	sts	0x4566, r24	; 0x804566 <_ZZ17handleLinkBusMsgsvE6pwr_mW>
    3396:	90 93 67 45 	sts	0x4567, r25	; 0x804567 <_ZZ17handleLinkBusMsgsvE6pwr_mW+0x1>
    339a:	0e 94 ee 6d 	call	0xdbdc	; 0xdbdc <_Z12txGetPowerMwv>
    339e:	9c 01       	movw	r18, r24
    33a0:	80 91 66 45 	lds	r24, 0x4566	; 0x804566 <_ZZ17handleLinkBusMsgsvE6pwr_mW>
    33a4:	90 91 67 45 	lds	r25, 0x4567	; 0x804567 <_ZZ17handleLinkBusMsgsvE6pwr_mW+0x1>
    33a8:	41 e0       	ldi	r20, 0x01	; 1
    33aa:	28 17       	cp	r18, r24
    33ac:	39 07       	cpc	r19, r25
    33ae:	09 f4       	brne	.+2      	; 0x33b2 <_Z17handleLinkBusMsgsv+0x42c>
    33b0:	40 e0       	ldi	r20, 0x00	; 0
    33b2:	44 23       	and	r20, r20
    33b4:	b9 f1       	breq	.+110    	; 0x3424 <_Z17handleLinkBusMsgsv+0x49e>
    33b6:	60 e0       	ldi	r22, 0x00	; 0
    33b8:	70 e0       	ldi	r23, 0x00	; 0
    33ba:	86 e6       	ldi	r24, 0x66	; 102
    33bc:	95 e4       	ldi	r25, 0x45	; 69
    33be:	0e 94 02 6e 	call	0xdc04	; 0xdc04 <_Z15txSetParametersPjPb>
    33c2:	88 8f       	std	Y+24, r24	; 0x18
    33c4:	88 8d       	ldd	r24, Y+24	; 0x18
    33c6:	88 23       	and	r24, r24
    33c8:	21 f0       	breq	.+8      	; 0x33d2 <_Z17handleLinkBusMsgsv+0x44c>
    33ca:	88 8d       	ldd	r24, Y+24	; 0x18
    33cc:	80 93 98 44 	sts	0x4498, r24	; 0x804498 <_ZL17g_last_error_code>
    33d0:	05 c0       	rjmp	.+10     	; 0x33dc <_Z17handleLinkBusMsgsv+0x456>
    33d2:	80 91 68 45 	lds	r24, 0x4568	; 0x804568 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    33d6:	8f 5f       	subi	r24, 0xFF	; 255
    33d8:	80 93 68 45 	sts	0x4568, r24	; 0x804568 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    33dc:	80 91 66 45 	lds	r24, 0x4566	; 0x804566 <_ZZ17handleLinkBusMsgsvE6pwr_mW>
    33e0:	90 91 67 45 	lds	r25, 0x4567	; 0x804567 <_ZZ17handleLinkBusMsgsvE6pwr_mW+0x1>
    33e4:	29 2f       	mov	r18, r25
    33e6:	2f 93       	push	r18
    33e8:	8f 93       	push	r24
    33ea:	8d e1       	ldi	r24, 0x1D	; 29
    33ec:	92 e4       	ldi	r25, 0x42	; 66
    33ee:	89 2f       	mov	r24, r25
    33f0:	8f 93       	push	r24
    33f2:	8d e1       	ldi	r24, 0x1D	; 29
    33f4:	92 e4       	ldi	r25, 0x42	; 66
    33f6:	8f 93       	push	r24
    33f8:	86 e6       	ldi	r24, 0x66	; 102
    33fa:	94 e4       	ldi	r25, 0x44	; 68
    33fc:	89 2f       	mov	r24, r25
    33fe:	8f 93       	push	r24
    3400:	86 e6       	ldi	r24, 0x66	; 102
    3402:	94 e4       	ldi	r25, 0x44	; 68
    3404:	8f 93       	push	r24
    3406:	0e 94 0a 77 	call	0xee14	; 0xee14 <sprintf>
    340a:	0f 90       	pop	r0
    340c:	0f 90       	pop	r0
    340e:	0f 90       	pop	r0
    3410:	0f 90       	pop	r0
    3412:	0f 90       	pop	r0
    3414:	0f 90       	pop	r0
    3416:	46 e6       	ldi	r20, 0x66	; 102
    3418:	54 e4       	ldi	r21, 0x44	; 68
    341a:	62 e2       	ldi	r22, 0x22	; 34
    341c:	72 e4       	ldi	r23, 0x42	; 66
    341e:	83 e0       	ldi	r24, 0x03	; 3
    3420:	0e 94 2c 57 	call	0xae58	; 0xae58 <_Z11lb_send_msg13LBMessageTypePKcPc>
    3424:	80 91 40 45 	lds	r24, 0x4540	; 0x804540 <g_Event_Configuration_Check>
    3428:	90 91 41 45 	lds	r25, 0x4541	; 0x804541 <g_Event_Configuration_Check+0x1>
    342c:	80 64       	ori	r24, 0x40	; 64
    342e:	80 93 40 45 	sts	0x4540, r24	; 0x804540 <g_Event_Configuration_Check>
    3432:	90 93 41 45 	sts	0x4541, r25	; 0x804541 <g_Event_Configuration_Check+0x1>
    3436:	c6 c5       	rjmp	.+2956   	; 0x3fc4 <_Z17handleLinkBusMsgsv+0x103e>
    3438:	8c e4       	ldi	r24, 0x4C	; 76
    343a:	95 e4       	ldi	r25, 0x45	; 69
    343c:	0e 94 83 3e 	call	0x7d06	; 0x7d06 <_ZN13EepromManager13saveAllEEPROMEv>
    3440:	d2 c5       	rjmp	.+2980   	; 0x3fe6 <_Z17handleLinkBusMsgsv+0x1060>
    3442:	8c 85       	ldd	r24, Y+12	; 0x0c
    3444:	9d 85       	ldd	r25, Y+13	; 0x0d
    3446:	fc 01       	movw	r30, r24
    3448:	83 81       	ldd	r24, Z+3	; 0x03
    344a:	89 8f       	std	Y+25, r24	; 0x19
    344c:	89 8d       	ldd	r24, Y+25	; 0x19
    344e:	81 33       	cpi	r24, 0x31	; 49
    3450:	21 f0       	breq	.+8      	; 0x345a <_Z17handleLinkBusMsgsv+0x4d4>
    3452:	89 8d       	ldd	r24, Y+25	; 0x19
    3454:	82 33       	cpi	r24, 0x32	; 50
    3456:	09 f0       	breq	.+2      	; 0x345a <_Z17handleLinkBusMsgsv+0x4d4>
    3458:	bc c0       	rjmp	.+376    	; 0x35d2 <_Z17handleLinkBusMsgsv+0x64c>
    345a:	80 91 9c 44 	lds	r24, 0x449C	; 0x80449c <g_antenna_connect_state>
    345e:	82 30       	cpi	r24, 0x02	; 2
    3460:	41 f0       	breq	.+16     	; 0x3472 <_Z17handleLinkBusMsgsv+0x4ec>
    3462:	90 91 5a 40 	lds	r25, 0x405A	; 0x80405a <g_tx_power_is_zero>
    3466:	81 e0       	ldi	r24, 0x01	; 1
    3468:	89 27       	eor	r24, r25
    346a:	88 23       	and	r24, r24
    346c:	11 f0       	breq	.+4      	; 0x3472 <_Z17handleLinkBusMsgsv+0x4ec>
    346e:	81 e0       	ldi	r24, 0x01	; 1
    3470:	01 c0       	rjmp	.+2      	; 0x3474 <_Z17handleLinkBusMsgsv+0x4ee>
    3472:	80 e0       	ldi	r24, 0x00	; 0
    3474:	88 23       	and	r24, r24
    3476:	21 f0       	breq	.+8      	; 0x3480 <_Z17handleLinkBusMsgsv+0x4fa>
    3478:	87 ef       	ldi	r24, 0xF7	; 247
    347a:	80 93 98 44 	sts	0x4498, r24	; 0x804498 <_ZL17g_last_error_code>
    347e:	b9 c0       	rjmp	.+370    	; 0x35f2 <_Z17handleLinkBusMsgsv+0x66c>
    3480:	89 8d       	ldd	r24, Y+25	; 0x19
    3482:	81 33       	cpi	r24, 0x31	; 49
    3484:	09 f0       	breq	.+2      	; 0x3488 <_Z17handleLinkBusMsgsv+0x502>
    3486:	69 c0       	rjmp	.+210    	; 0x355a <_Z17handleLinkBusMsgsv+0x5d4>
    3488:	80 91 9c 44 	lds	r24, 0x449C	; 0x80449c <g_antenna_connect_state>
    348c:	82 30       	cpi	r24, 0x02	; 2
    348e:	21 f0       	breq	.+8      	; 0x3498 <_Z17handleLinkBusMsgsv+0x512>
    3490:	80 91 5a 40 	lds	r24, 0x405A	; 0x80405a <g_tx_power_is_zero>
    3494:	88 23       	and	r24, r24
    3496:	11 f0       	breq	.+4      	; 0x349c <_Z17handleLinkBusMsgsv+0x516>
    3498:	81 e0       	ldi	r24, 0x01	; 1
    349a:	01 c0       	rjmp	.+2      	; 0x349e <_Z17handleLinkBusMsgsv+0x518>
    349c:	80 e0       	ldi	r24, 0x00	; 0
    349e:	88 23       	and	r24, r24
    34a0:	09 f4       	brne	.+2      	; 0x34a4 <_Z17handleLinkBusMsgsv+0x51e>
    34a2:	57 c0       	rjmp	.+174    	; 0x3552 <_Z17handleLinkBusMsgsv+0x5cc>
    34a4:	10 92 20 45 	sts	0x4520, r1	; 0x804520 <g_event_enabled>
    34a8:	81 e0       	ldi	r24, 0x01	; 1
    34aa:	0e 94 e5 6c 	call	0xd9ca	; 0xd9ca <_Z18powerToTransmitterb>
    34ae:	81 e0       	ldi	r24, 0x01	; 1
    34b0:	8a ab       	std	Y+50, r24	; 0x32
    34b2:	ce 01       	movw	r24, r28
    34b4:	c2 96       	adiw	r24, 0x32	; 50
    34b6:	40 e0       	ldi	r20, 0x00	; 0
    34b8:	50 e0       	ldi	r21, 0x00	; 0
    34ba:	bc 01       	movw	r22, r24
    34bc:	8b ea       	ldi	r24, 0xAB	; 171
    34be:	94 e4       	ldi	r25, 0x44	; 68
    34c0:	0e 94 b5 57 	call	0xaf6a	; 0xaf6a <_Z9makeMorsePcPbS0_>
    34c4:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    34c8:	0e 94 15 21 	call	0x422a	; 0x422a <_Z13throttleValueh>
    34cc:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    34d0:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    34d4:	81 e0       	ldi	r24, 0x01	; 1
    34d6:	90 e0       	ldi	r25, 0x00	; 0
    34d8:	a0 e0       	ldi	r26, 0x00	; 0
    34da:	b0 e0       	ldi	r27, 0x00	; 0
    34dc:	80 93 18 45 	sts	0x4518, r24	; 0x804518 <g_event_start_epoch>
    34e0:	90 93 19 45 	sts	0x4519, r25	; 0x804519 <g_event_start_epoch+0x1>
    34e4:	a0 93 1a 45 	sts	0x451A, r26	; 0x80451a <g_event_start_epoch+0x2>
    34e8:	b0 93 1b 45 	sts	0x451B, r27	; 0x80451b <g_event_start_epoch+0x3>
    34ec:	8f ef       	ldi	r24, 0xFF	; 255
    34ee:	9f ef       	ldi	r25, 0xFF	; 255
    34f0:	dc 01       	movw	r26, r24
    34f2:	80 93 1c 45 	sts	0x451C, r24	; 0x80451c <g_event_finish_epoch>
    34f6:	90 93 1d 45 	sts	0x451D, r25	; 0x80451d <g_event_finish_epoch+0x1>
    34fa:	a0 93 1e 45 	sts	0x451E, r26	; 0x80451e <g_event_finish_epoch+0x2>
    34fe:	b0 93 1f 45 	sts	0x451F, r27	; 0x80451f <g_event_finish_epoch+0x3>
    3502:	8f e0       	ldi	r24, 0x0F	; 15
    3504:	97 e2       	ldi	r25, 0x27	; 39
    3506:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_on_air_seconds>
    350a:	90 93 0e 40 	sts	0x400E, r25	; 0x80400e <g_on_air_seconds+0x1>
    350e:	10 92 0f 40 	sts	0x400F, r1	; 0x80400f <g_off_air_seconds>
    3512:	10 92 10 40 	sts	0x4010, r1	; 0x804010 <g_off_air_seconds+0x1>
    3516:	8f e0       	ldi	r24, 0x0F	; 15
    3518:	97 e2       	ldi	r25, 0x27	; 39
    351a:	a0 e0       	ldi	r26, 0x00	; 0
    351c:	b0 e0       	ldi	r27, 0x00	; 0
    351e:	80 93 9f 44 	sts	0x449F, r24	; 0x80449f <_ZL12g_on_the_air>
    3522:	90 93 a0 44 	sts	0x44A0, r25	; 0x8044a0 <_ZL12g_on_the_air+0x1>
    3526:	a0 93 a1 44 	sts	0x44A1, r26	; 0x8044a1 <_ZL12g_on_the_air+0x2>
    352a:	b0 93 a2 44 	sts	0x44A2, r27	; 0x8044a2 <_ZL12g_on_the_air+0x3>
    352e:	8f ef       	ldi	r24, 0xFF	; 255
    3530:	9f ef       	ldi	r25, 0xFF	; 255
    3532:	80 93 a3 44 	sts	0x44A3, r24	; 0x8044a3 <_ZL26g_sendID_seconds_countdown>
    3536:	90 93 a4 44 	sts	0x44A4, r25	; 0x8044a4 <_ZL26g_sendID_seconds_countdown+0x1>
    353a:	81 e0       	ldi	r24, 0x01	; 1
    353c:	80 93 22 45 	sts	0x4522, r24	; 0x804522 <g_event_commenced>
    3540:	81 e0       	ldi	r24, 0x01	; 1
    3542:	80 93 20 45 	sts	0x4520, r24	; 0x804520 <g_event_enabled>
    3546:	8d ef       	ldi	r24, 0xFD	; 253
    3548:	80 93 99 44 	sts	0x4499, r24	; 0x804499 <_ZL18g_last_status_code>
    354c:	0e 94 0c 24 	call	0x4818	; 0x4818 <_Z18antennaIsConnectedv>
    3550:	50 c0       	rjmp	.+160    	; 0x35f2 <_Z17handleLinkBusMsgsv+0x66c>
    3552:	87 ef       	ldi	r24, 0xF7	; 247
    3554:	80 93 98 44 	sts	0x4498, r24	; 0x804498 <_ZL17g_last_error_code>
    3558:	4c c0       	rjmp	.+152    	; 0x35f2 <_Z17handleLinkBusMsgsv+0x66c>
    355a:	89 8d       	ldd	r24, Y+25	; 0x19
    355c:	82 33       	cpi	r24, 0x32	; 50
    355e:	09 f0       	breq	.+2      	; 0x3562 <_Z17handleLinkBusMsgsv+0x5dc>
    3560:	48 c0       	rjmp	.+144    	; 0x35f2 <_Z17handleLinkBusMsgsv+0x66c>
    3562:	0e 94 44 29 	call	0x5288	; 0x5288 <_Z14eventScheduledv>
    3566:	80 93 21 45 	sts	0x4521, r24	; 0x804521 <g_event_scheduled>
    356a:	80 91 40 45 	lds	r24, 0x4540	; 0x804540 <g_Event_Configuration_Check>
    356e:	90 91 41 45 	lds	r25, 0x4541	; 0x804541 <g_Event_Configuration_Check+0x1>
    3572:	8f 3f       	cpi	r24, 0xFF	; 255
    3574:	9f 40       	sbci	r25, 0x0F	; 15
    3576:	21 f0       	breq	.+8      	; 0x3580 <_Z17handleLinkBusMsgsv+0x5fa>
    3578:	8d ec       	ldi	r24, 0xCD	; 205
    357a:	80 93 98 44 	sts	0x4498, r24	; 0x804498 <_ZL17g_last_error_code>
    357e:	39 c0       	rjmp	.+114    	; 0x35f2 <_Z17handleLinkBusMsgsv+0x66c>
    3580:	80 91 68 45 	lds	r24, 0x4568	; 0x804568 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    3584:	88 23       	and	r24, r24
    3586:	51 f0       	breq	.+20     	; 0x359c <_Z17handleLinkBusMsgsv+0x616>
    3588:	80 91 20 45 	lds	r24, 0x4520	; 0x804520 <g_event_enabled>
    358c:	88 23       	and	r24, r24
    358e:	11 f0       	breq	.+4      	; 0x3594 <_Z17handleLinkBusMsgsv+0x60e>
    3590:	0e 94 34 24 	call	0x4868	; 0x4868 <_Z12suspendEventv>
    3594:	8c e4       	ldi	r24, 0x4C	; 76
    3596:	95 e4       	ldi	r25, 0x45	; 69
    3598:	0e 94 83 3e 	call	0x7d06	; 0x7d06 <_ZN13EepromManager13saveAllEEPROMEv>
    359c:	90 91 20 45 	lds	r25, 0x4520	; 0x804520 <g_event_enabled>
    35a0:	81 e0       	ldi	r24, 0x01	; 1
    35a2:	89 27       	eor	r24, r25
    35a4:	88 23       	and	r24, r24
    35a6:	59 f0       	breq	.+22     	; 0x35be <_Z17handleLinkBusMsgsv+0x638>
    35a8:	1b aa       	std	Y+51, r1	; 0x33
    35aa:	ce 01       	movw	r24, r28
    35ac:	c3 96       	adiw	r24, 0x33	; 51
    35ae:	0e 94 6f 21 	call	0x42de	; 0x42de <_Z11launchEventP2SC>
    35b2:	80 93 98 44 	sts	0x4498, r24	; 0x804498 <_ZL17g_last_error_code>
    35b6:	82 e0       	ldi	r24, 0x02	; 2
    35b8:	80 93 a6 44 	sts	0x44A6, r24	; 0x8044a6 <_ZL19g_wifi_enable_delay>
    35bc:	03 c0       	rjmp	.+6      	; 0x35c4 <_Z17handleLinkBusMsgsv+0x63e>
    35be:	8c e3       	ldi	r24, 0x3C	; 60
    35c0:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    35c4:	10 92 68 45 	sts	0x4568, r1	; 0x804568 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    35c8:	10 92 40 45 	sts	0x4540, r1	; 0x804540 <g_Event_Configuration_Check>
    35cc:	10 92 41 45 	sts	0x4541, r1	; 0x804541 <g_Event_Configuration_Check+0x1>
    35d0:	10 c0       	rjmp	.+32     	; 0x35f2 <_Z17handleLinkBusMsgsv+0x66c>
    35d2:	89 8d       	ldd	r24, Y+25	; 0x19
    35d4:	80 33       	cpi	r24, 0x30	; 48
    35d6:	09 f0       	breq	.+2      	; 0x35da <_Z17handleLinkBusMsgsv+0x654>
    35d8:	f7 c4       	rjmp	.+2542   	; 0x3fc8 <_Z17handleLinkBusMsgsv+0x1042>
    35da:	10 92 68 45 	sts	0x4568, r1	; 0x804568 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    35de:	10 92 40 45 	sts	0x4540, r1	; 0x804540 <g_Event_Configuration_Check>
    35e2:	10 92 41 45 	sts	0x4541, r1	; 0x804541 <g_Event_Configuration_Check+0x1>
    35e6:	8c ee       	ldi	r24, 0xEC	; 236
    35e8:	80 93 99 44 	sts	0x4499, r24	; 0x804499 <_ZL18g_last_status_code>
    35ec:	10 92 58 45 	sts	0x4558, r1	; 0x804558 <g_enable_manual_transmissions>
    35f0:	eb c4       	rjmp	.+2518   	; 0x3fc8 <_Z17handleLinkBusMsgsv+0x1042>
    35f2:	00 00       	nop
    35f4:	e9 c4       	rjmp	.+2514   	; 0x3fc8 <_Z17handleLinkBusMsgsv+0x1042>
    35f6:	1c 82       	std	Y+4, r1	; 0x04
    35f8:	1d 82       	std	Y+5, r1	; 0x05
    35fa:	1e 82       	std	Y+6, r1	; 0x06
    35fc:	1f 82       	std	Y+7, r1	; 0x07
    35fe:	8c 85       	ldd	r24, Y+12	; 0x0c
    3600:	9d 85       	ldd	r25, Y+13	; 0x0d
    3602:	fc 01       	movw	r30, r24
    3604:	83 81       	ldd	r24, Z+3	; 0x03
    3606:	83 35       	cpi	r24, 0x53	; 83
    3608:	09 f0       	breq	.+2      	; 0x360c <_Z17handleLinkBusMsgsv+0x686>
    360a:	4b c0       	rjmp	.+150    	; 0x36a2 <_Z17handleLinkBusMsgsv+0x71c>
    360c:	8c 85       	ldd	r24, Y+12	; 0x0c
    360e:	9d 85       	ldd	r25, Y+13	; 0x0d
    3610:	fc 01       	movw	r30, r24
    3612:	80 8d       	ldd	r24, Z+24	; 0x18
    3614:	88 23       	and	r24, r24
    3616:	59 f0       	breq	.+22     	; 0x362e <_Z17handleLinkBusMsgsv+0x6a8>
    3618:	8c 85       	ldd	r24, Y+12	; 0x0c
    361a:	9d 85       	ldd	r25, Y+13	; 0x0d
    361c:	48 96       	adiw	r24, 0x18	; 24
    361e:	0e 94 96 76 	call	0xed2c	; 0xed2c <atol>
    3622:	dc 01       	movw	r26, r24
    3624:	cb 01       	movw	r24, r22
    3626:	8c 83       	std	Y+4, r24	; 0x04
    3628:	9d 83       	std	Y+5, r25	; 0x05
    362a:	ae 83       	std	Y+6, r26	; 0x06
    362c:	bf 83       	std	Y+7, r27	; 0x07
    362e:	80 91 18 45 	lds	r24, 0x4518	; 0x804518 <g_event_start_epoch>
    3632:	90 91 19 45 	lds	r25, 0x4519	; 0x804519 <g_event_start_epoch+0x1>
    3636:	a0 91 1a 45 	lds	r26, 0x451A	; 0x80451a <g_event_start_epoch+0x2>
    363a:	b0 91 1b 45 	lds	r27, 0x451B	; 0x80451b <g_event_start_epoch+0x3>
    363e:	61 e0       	ldi	r22, 0x01	; 1
    3640:	2c 81       	ldd	r18, Y+4	; 0x04
    3642:	3d 81       	ldd	r19, Y+5	; 0x05
    3644:	4e 81       	ldd	r20, Y+6	; 0x06
    3646:	5f 81       	ldd	r21, Y+7	; 0x07
    3648:	28 17       	cp	r18, r24
    364a:	39 07       	cpc	r19, r25
    364c:	4a 07       	cpc	r20, r26
    364e:	5b 07       	cpc	r21, r27
    3650:	09 f4       	brne	.+2      	; 0x3654 <_Z17handleLinkBusMsgsv+0x6ce>
    3652:	60 e0       	ldi	r22, 0x00	; 0
    3654:	66 23       	and	r22, r22
    3656:	d9 f0       	breq	.+54     	; 0x368e <_Z17handleLinkBusMsgsv+0x708>
    3658:	8c 81       	ldd	r24, Y+4	; 0x04
    365a:	9d 81       	ldd	r25, Y+5	; 0x05
    365c:	ae 81       	ldd	r26, Y+6	; 0x06
    365e:	bf 81       	ldd	r27, Y+7	; 0x07
    3660:	80 93 18 45 	sts	0x4518, r24	; 0x804518 <g_event_start_epoch>
    3664:	90 93 19 45 	sts	0x4519, r25	; 0x804519 <g_event_start_epoch+0x1>
    3668:	a0 93 1a 45 	sts	0x451A, r26	; 0x80451a <g_event_start_epoch+0x2>
    366c:	b0 93 1b 45 	sts	0x451B, r27	; 0x80451b <g_event_start_epoch+0x3>
    3670:	80 e0       	ldi	r24, 0x00	; 0
    3672:	90 e0       	ldi	r25, 0x00	; 0
    3674:	0e 94 94 35 	call	0x6b28	; 0x6b28 <ds3231_get_epoch>
    3678:	dc 01       	movw	r26, r24
    367a:	cb 01       	movw	r24, r22
    367c:	bc 01       	movw	r22, r24
    367e:	cd 01       	movw	r24, r26
    3680:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <set_system_time>
    3684:	80 91 68 45 	lds	r24, 0x4568	; 0x804568 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    3688:	8f 5f       	subi	r24, 0xFF	; 255
    368a:	80 93 68 45 	sts	0x4568, r24	; 0x804568 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    368e:	80 91 40 45 	lds	r24, 0x4540	; 0x804540 <g_Event_Configuration_Check>
    3692:	90 91 41 45 	lds	r25, 0x4541	; 0x804541 <g_Event_Configuration_Check+0x1>
    3696:	98 60       	ori	r25, 0x08	; 8
    3698:	80 93 40 45 	sts	0x4540, r24	; 0x804540 <g_Event_Configuration_Check>
    369c:	90 93 41 45 	sts	0x4541, r25	; 0x804541 <g_Event_Configuration_Check+0x1>
    36a0:	95 c4       	rjmp	.+2346   	; 0x3fcc <_Z17handleLinkBusMsgsv+0x1046>
    36a2:	8c 85       	ldd	r24, Y+12	; 0x0c
    36a4:	9d 85       	ldd	r25, Y+13	; 0x0d
    36a6:	fc 01       	movw	r30, r24
    36a8:	83 81       	ldd	r24, Z+3	; 0x03
    36aa:	86 34       	cpi	r24, 0x46	; 70
    36ac:	09 f0       	breq	.+2      	; 0x36b0 <_Z17handleLinkBusMsgsv+0x72a>
    36ae:	8e c4       	rjmp	.+2332   	; 0x3fcc <_Z17handleLinkBusMsgsv+0x1046>
    36b0:	8c 85       	ldd	r24, Y+12	; 0x0c
    36b2:	9d 85       	ldd	r25, Y+13	; 0x0d
    36b4:	fc 01       	movw	r30, r24
    36b6:	80 8d       	ldd	r24, Z+24	; 0x18
    36b8:	88 23       	and	r24, r24
    36ba:	59 f0       	breq	.+22     	; 0x36d2 <_Z17handleLinkBusMsgsv+0x74c>
    36bc:	8c 85       	ldd	r24, Y+12	; 0x0c
    36be:	9d 85       	ldd	r25, Y+13	; 0x0d
    36c0:	48 96       	adiw	r24, 0x18	; 24
    36c2:	0e 94 96 76 	call	0xed2c	; 0xed2c <atol>
    36c6:	dc 01       	movw	r26, r24
    36c8:	cb 01       	movw	r24, r22
    36ca:	8c 83       	std	Y+4, r24	; 0x04
    36cc:	9d 83       	std	Y+5, r25	; 0x05
    36ce:	ae 83       	std	Y+6, r26	; 0x06
    36d0:	bf 83       	std	Y+7, r27	; 0x07
    36d2:	80 91 1c 45 	lds	r24, 0x451C	; 0x80451c <g_event_finish_epoch>
    36d6:	90 91 1d 45 	lds	r25, 0x451D	; 0x80451d <g_event_finish_epoch+0x1>
    36da:	a0 91 1e 45 	lds	r26, 0x451E	; 0x80451e <g_event_finish_epoch+0x2>
    36de:	b0 91 1f 45 	lds	r27, 0x451F	; 0x80451f <g_event_finish_epoch+0x3>
    36e2:	61 e0       	ldi	r22, 0x01	; 1
    36e4:	2c 81       	ldd	r18, Y+4	; 0x04
    36e6:	3d 81       	ldd	r19, Y+5	; 0x05
    36e8:	4e 81       	ldd	r20, Y+6	; 0x06
    36ea:	5f 81       	ldd	r21, Y+7	; 0x07
    36ec:	28 17       	cp	r18, r24
    36ee:	39 07       	cpc	r19, r25
    36f0:	4a 07       	cpc	r20, r26
    36f2:	5b 07       	cpc	r21, r27
    36f4:	09 f4       	brne	.+2      	; 0x36f8 <_Z17handleLinkBusMsgsv+0x772>
    36f6:	60 e0       	ldi	r22, 0x00	; 0
    36f8:	66 23       	and	r22, r22
    36fa:	89 f0       	breq	.+34     	; 0x371e <_Z17handleLinkBusMsgsv+0x798>
    36fc:	8c 81       	ldd	r24, Y+4	; 0x04
    36fe:	9d 81       	ldd	r25, Y+5	; 0x05
    3700:	ae 81       	ldd	r26, Y+6	; 0x06
    3702:	bf 81       	ldd	r27, Y+7	; 0x07
    3704:	80 93 1c 45 	sts	0x451C, r24	; 0x80451c <g_event_finish_epoch>
    3708:	90 93 1d 45 	sts	0x451D, r25	; 0x80451d <g_event_finish_epoch+0x1>
    370c:	a0 93 1e 45 	sts	0x451E, r26	; 0x80451e <g_event_finish_epoch+0x2>
    3710:	b0 93 1f 45 	sts	0x451F, r27	; 0x80451f <g_event_finish_epoch+0x3>
    3714:	80 91 68 45 	lds	r24, 0x4568	; 0x804568 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    3718:	8f 5f       	subi	r24, 0xFF	; 255
    371a:	80 93 68 45 	sts	0x4568, r24	; 0x804568 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    371e:	80 91 40 45 	lds	r24, 0x4540	; 0x804540 <g_Event_Configuration_Check>
    3722:	90 91 41 45 	lds	r25, 0x4541	; 0x804541 <g_Event_Configuration_Check+0x1>
    3726:	81 60       	ori	r24, 0x01	; 1
    3728:	80 93 40 45 	sts	0x4540, r24	; 0x804540 <g_Event_Configuration_Check>
    372c:	90 93 41 45 	sts	0x4541, r25	; 0x804541 <g_Event_Configuration_Check+0x1>
    3730:	4d c4       	rjmp	.+2202   	; 0x3fcc <_Z17handleLinkBusMsgsv+0x1046>
    3732:	81 e0       	ldi	r24, 0x01	; 1
    3734:	80 93 0a 40 	sts	0x400A, r24	; 0x80400a <_ZL13g_wifi_active>
    3738:	8c 85       	ldd	r24, Y+12	; 0x0c
    373a:	9d 85       	ldd	r25, Y+13	; 0x0d
    373c:	fc 01       	movw	r30, r24
    373e:	80 81       	ld	r24, Z
    3740:	81 30       	cpi	r24, 0x01	; 1
    3742:	09 f0       	breq	.+2      	; 0x3746 <_Z17handleLinkBusMsgsv+0x7c0>
    3744:	4a c0       	rjmp	.+148    	; 0x37da <_Z17handleLinkBusMsgsv+0x854>
    3746:	8c 85       	ldd	r24, Y+12	; 0x0c
    3748:	9d 85       	ldd	r25, Y+13	; 0x0d
    374a:	fc 01       	movw	r30, r24
    374c:	83 81       	ldd	r24, Z+3	; 0x03
    374e:	88 23       	and	r24, r24
    3750:	d1 f0       	breq	.+52     	; 0x3786 <_Z17handleLinkBusMsgsv+0x800>
    3752:	8c 85       	ldd	r24, Y+12	; 0x0c
    3754:	9d 85       	ldd	r25, Y+13	; 0x0d
    3756:	03 96       	adiw	r24, 0x03	; 3
    3758:	44 e1       	ldi	r20, 0x14	; 20
    375a:	50 e0       	ldi	r21, 0x00	; 0
    375c:	bc 01       	movw	r22, r24
    375e:	86 e6       	ldi	r24, 0x66	; 102
    3760:	94 e4       	ldi	r25, 0x44	; 68
    3762:	0e 94 de 76 	call	0xedbc	; 0xedbc <strncpy>
    3766:	60 e0       	ldi	r22, 0x00	; 0
    3768:	86 e6       	ldi	r24, 0x66	; 102
    376a:	94 e4       	ldi	r25, 0x44	; 68
    376c:	0e 94 6e 37 	call	0x6edc	; 0x6edc <ds3231_set_date_time>
    3770:	80 e0       	ldi	r24, 0x00	; 0
    3772:	90 e0       	ldi	r25, 0x00	; 0
    3774:	0e 94 94 35 	call	0x6b28	; 0x6b28 <ds3231_get_epoch>
    3778:	dc 01       	movw	r26, r24
    377a:	cb 01       	movw	r24, r22
    377c:	bc 01       	movw	r22, r24
    377e:	cd 01       	movw	r24, r26
    3780:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <set_system_time>
    3784:	25 c4       	rjmp	.+2122   	; 0x3fd0 <_Z17handleLinkBusMsgsv+0x104a>
    3786:	80 e0       	ldi	r24, 0x00	; 0
    3788:	90 e0       	ldi	r25, 0x00	; 0
    378a:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <time>
    378e:	dc 01       	movw	r26, r24
    3790:	cb 01       	movw	r24, r22
    3792:	2b 2f       	mov	r18, r27
    3794:	2f 93       	push	r18
    3796:	2a 2f       	mov	r18, r26
    3798:	2f 93       	push	r18
    379a:	29 2f       	mov	r18, r25
    379c:	2f 93       	push	r18
    379e:	8f 93       	push	r24
    37a0:	8d e8       	ldi	r24, 0x8D	; 141
    37a2:	90 e4       	ldi	r25, 0x40	; 64
    37a4:	89 2f       	mov	r24, r25
    37a6:	8f 93       	push	r24
    37a8:	8d e8       	ldi	r24, 0x8D	; 141
    37aa:	90 e4       	ldi	r25, 0x40	; 64
    37ac:	8f 93       	push	r24
    37ae:	86 e6       	ldi	r24, 0x66	; 102
    37b0:	94 e4       	ldi	r25, 0x44	; 68
    37b2:	89 2f       	mov	r24, r25
    37b4:	8f 93       	push	r24
    37b6:	86 e6       	ldi	r24, 0x66	; 102
    37b8:	94 e4       	ldi	r25, 0x44	; 68
    37ba:	8f 93       	push	r24
    37bc:	0e 94 0a 77 	call	0xee14	; 0xee14 <sprintf>
    37c0:	8d b7       	in	r24, 0x3d	; 61
    37c2:	9e b7       	in	r25, 0x3e	; 62
    37c4:	08 96       	adiw	r24, 0x08	; 8
    37c6:	cd bf       	out	0x3d, r28	; 61
    37c8:	de bf       	out	0x3e, r29	; 62
    37ca:	46 e6       	ldi	r20, 0x66	; 102
    37cc:	54 e4       	ldi	r21, 0x44	; 68
    37ce:	61 e9       	ldi	r22, 0x91	; 145
    37d0:	70 e4       	ldi	r23, 0x40	; 64
    37d2:	83 e0       	ldi	r24, 0x03	; 3
    37d4:	0e 94 2c 57 	call	0xae58	; 0xae58 <_Z11lb_send_msg13LBMessageTypePKcPc>
    37d8:	fb c3       	rjmp	.+2038   	; 0x3fd0 <_Z17handleLinkBusMsgsv+0x104a>
    37da:	8c 85       	ldd	r24, Y+12	; 0x0c
    37dc:	9d 85       	ldd	r25, Y+13	; 0x0d
    37de:	fc 01       	movw	r30, r24
    37e0:	80 81       	ld	r24, Z
    37e2:	82 30       	cpi	r24, 0x02	; 2
    37e4:	09 f0       	breq	.+2      	; 0x37e8 <_Z17handleLinkBusMsgsv+0x862>
    37e6:	f4 c3       	rjmp	.+2024   	; 0x3fd0 <_Z17handleLinkBusMsgsv+0x104a>
    37e8:	8c 85       	ldd	r24, Y+12	; 0x0c
    37ea:	9d 85       	ldd	r25, Y+13	; 0x0d
    37ec:	fc 01       	movw	r30, r24
    37ee:	83 81       	ldd	r24, Z+3	; 0x03
    37f0:	88 35       	cpi	r24, 0x58	; 88
    37f2:	c9 f5       	brne	.+114    	; 0x3866 <_Z17handleLinkBusMsgsv+0x8e0>
    37f4:	1a 8e       	std	Y+26, r1	; 0x1a
    37f6:	8c 85       	ldd	r24, Y+12	; 0x0c
    37f8:	9d 85       	ldd	r25, Y+13	; 0x0d
    37fa:	fc 01       	movw	r30, r24
    37fc:	80 8d       	ldd	r24, Z+24	; 0x18
    37fe:	88 23       	and	r24, r24
    3800:	51 f0       	breq	.+20     	; 0x3816 <_Z17handleLinkBusMsgsv+0x890>
    3802:	8c 85       	ldd	r24, Y+12	; 0x0c
    3804:	9d 85       	ldd	r25, Y+13	; 0x0d
    3806:	48 96       	adiw	r24, 0x18	; 24
    3808:	0e 94 78 76 	call	0xecf0	; 0xecf0 <atoi>
    380c:	8a 8f       	std	Y+26, r24	; 0x1a
    380e:	8a 8d       	ldd	r24, Y+26	; 0x1a
    3810:	0e 94 c6 38 	call	0x718c	; 0x718c <ds3231_set_aging>
    3814:	dd c3       	rjmp	.+1978   	; 0x3fd0 <_Z17handleLinkBusMsgsv+0x104a>
    3816:	0e 94 f5 38 	call	0x71ea	; 0x71ea <ds3231_get_aging>
    381a:	8a 8f       	std	Y+26, r24	; 0x1a
    381c:	8a 8d       	ldd	r24, Y+26	; 0x1a
    381e:	08 2e       	mov	r0, r24
    3820:	00 0c       	add	r0, r0
    3822:	99 0b       	sbc	r25, r25
    3824:	29 2f       	mov	r18, r25
    3826:	2f 93       	push	r18
    3828:	8f 93       	push	r24
    382a:	86 e2       	ldi	r24, 0x26	; 38
    382c:	92 e4       	ldi	r25, 0x42	; 66
    382e:	89 2f       	mov	r24, r25
    3830:	8f 93       	push	r24
    3832:	86 e2       	ldi	r24, 0x26	; 38
    3834:	92 e4       	ldi	r25, 0x42	; 66
    3836:	8f 93       	push	r24
    3838:	86 e6       	ldi	r24, 0x66	; 102
    383a:	94 e4       	ldi	r25, 0x44	; 68
    383c:	89 2f       	mov	r24, r25
    383e:	8f 93       	push	r24
    3840:	86 e6       	ldi	r24, 0x66	; 102
    3842:	94 e4       	ldi	r25, 0x44	; 68
    3844:	8f 93       	push	r24
    3846:	0e 94 0a 77 	call	0xee14	; 0xee14 <sprintf>
    384a:	0f 90       	pop	r0
    384c:	0f 90       	pop	r0
    384e:	0f 90       	pop	r0
    3850:	0f 90       	pop	r0
    3852:	0f 90       	pop	r0
    3854:	0f 90       	pop	r0
    3856:	46 e6       	ldi	r20, 0x66	; 102
    3858:	54 e4       	ldi	r21, 0x44	; 68
    385a:	61 e9       	ldi	r22, 0x91	; 145
    385c:	70 e4       	ldi	r23, 0x40	; 64
    385e:	83 e0       	ldi	r24, 0x03	; 3
    3860:	0e 94 2c 57 	call	0xae58	; 0xae58 <_Z11lb_send_msg13LBMessageTypePKcPc>
    3864:	b5 c3       	rjmp	.+1898   	; 0x3fd0 <_Z17handleLinkBusMsgsv+0x104a>
    3866:	80 e0       	ldi	r24, 0x00	; 0
    3868:	90 e0       	ldi	r25, 0x00	; 0
    386a:	0e 94 94 35 	call	0x6b28	; 0x6b28 <ds3231_get_epoch>
    386e:	dc 01       	movw	r26, r24
    3870:	cb 01       	movw	r24, r22
    3872:	8b 8f       	std	Y+27, r24	; 0x1b
    3874:	9c 8f       	std	Y+28, r25	; 0x1c
    3876:	ad 8f       	std	Y+29, r26	; 0x1d
    3878:	be 8f       	std	Y+30, r27	; 0x1e
    387a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    387c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    387e:	ad 8d       	ldd	r26, Y+29	; 0x1d
    3880:	be 8d       	ldd	r27, Y+30	; 0x1e
    3882:	bc 01       	movw	r22, r24
    3884:	cd 01       	movw	r24, r26
    3886:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <set_system_time>
    388a:	80 91 69 45 	lds	r24, 0x4569	; 0x804569 <_ZZ17handleLinkBusMsgsvE8lastTime>
    388e:	90 91 6a 45 	lds	r25, 0x456A	; 0x80456a <_ZZ17handleLinkBusMsgsvE8lastTime+0x1>
    3892:	a0 91 6b 45 	lds	r26, 0x456B	; 0x80456b <_ZZ17handleLinkBusMsgsvE8lastTime+0x2>
    3896:	b0 91 6c 45 	lds	r27, 0x456C	; 0x80456c <_ZZ17handleLinkBusMsgsvE8lastTime+0x3>
    389a:	2b 8d       	ldd	r18, Y+27	; 0x1b
    389c:	3c 8d       	ldd	r19, Y+28	; 0x1c
    389e:	4d 8d       	ldd	r20, Y+29	; 0x1d
    38a0:	5e 8d       	ldd	r21, Y+30	; 0x1e
    38a2:	28 17       	cp	r18, r24
    38a4:	39 07       	cpc	r19, r25
    38a6:	4a 07       	cpc	r20, r26
    38a8:	5b 07       	cpc	r21, r27
    38aa:	09 f4       	brne	.+2      	; 0x38ae <_Z17handleLinkBusMsgsv+0x928>
    38ac:	91 c3       	rjmp	.+1826   	; 0x3fd0 <_Z17handleLinkBusMsgsv+0x104a>
    38ae:	8e 8d       	ldd	r24, Y+30	; 0x1e
    38b0:	8f 93       	push	r24
    38b2:	8d 8d       	ldd	r24, Y+29	; 0x1d
    38b4:	8f 93       	push	r24
    38b6:	8c 8d       	ldd	r24, Y+28	; 0x1c
    38b8:	8f 93       	push	r24
    38ba:	8b 8d       	ldd	r24, Y+27	; 0x1b
    38bc:	8f 93       	push	r24
    38be:	8d e8       	ldi	r24, 0x8D	; 141
    38c0:	90 e4       	ldi	r25, 0x40	; 64
    38c2:	89 2f       	mov	r24, r25
    38c4:	8f 93       	push	r24
    38c6:	8d e8       	ldi	r24, 0x8D	; 141
    38c8:	90 e4       	ldi	r25, 0x40	; 64
    38ca:	8f 93       	push	r24
    38cc:	86 e6       	ldi	r24, 0x66	; 102
    38ce:	94 e4       	ldi	r25, 0x44	; 68
    38d0:	89 2f       	mov	r24, r25
    38d2:	8f 93       	push	r24
    38d4:	86 e6       	ldi	r24, 0x66	; 102
    38d6:	94 e4       	ldi	r25, 0x44	; 68
    38d8:	8f 93       	push	r24
    38da:	0e 94 0a 77 	call	0xee14	; 0xee14 <sprintf>
    38de:	8d b7       	in	r24, 0x3d	; 61
    38e0:	9e b7       	in	r25, 0x3e	; 62
    38e2:	08 96       	adiw	r24, 0x08	; 8
    38e4:	cd bf       	out	0x3d, r28	; 61
    38e6:	de bf       	out	0x3e, r29	; 62
    38e8:	46 e6       	ldi	r20, 0x66	; 102
    38ea:	54 e4       	ldi	r21, 0x44	; 68
    38ec:	61 e9       	ldi	r22, 0x91	; 145
    38ee:	70 e4       	ldi	r23, 0x40	; 64
    38f0:	83 e0       	ldi	r24, 0x03	; 3
    38f2:	0e 94 2c 57 	call	0xae58	; 0xae58 <_Z11lb_send_msg13LBMessageTypePKcPc>
    38f6:	8b 8d       	ldd	r24, Y+27	; 0x1b
    38f8:	9c 8d       	ldd	r25, Y+28	; 0x1c
    38fa:	ad 8d       	ldd	r26, Y+29	; 0x1d
    38fc:	be 8d       	ldd	r27, Y+30	; 0x1e
    38fe:	80 93 69 45 	sts	0x4569, r24	; 0x804569 <_ZZ17handleLinkBusMsgsvE8lastTime>
    3902:	90 93 6a 45 	sts	0x456A, r25	; 0x80456a <_ZZ17handleLinkBusMsgsvE8lastTime+0x1>
    3906:	a0 93 6b 45 	sts	0x456B, r26	; 0x80456b <_ZZ17handleLinkBusMsgsvE8lastTime+0x2>
    390a:	b0 93 6c 45 	sts	0x456C, r27	; 0x80456c <_ZZ17handleLinkBusMsgsvE8lastTime+0x3>
    390e:	60 c3       	rjmp	.+1728   	; 0x3fd0 <_Z17handleLinkBusMsgsv+0x104a>
    3910:	8c 85       	ldd	r24, Y+12	; 0x0c
    3912:	9d 85       	ldd	r25, Y+13	; 0x0d
    3914:	fc 01       	movw	r30, r24
    3916:	80 81       	ld	r24, Z
    3918:	81 30       	cpi	r24, 0x01	; 1
    391a:	09 f0       	breq	.+2      	; 0x391e <_Z17handleLinkBusMsgsv+0x998>
    391c:	3f c0       	rjmp	.+126    	; 0x399c <_Z17handleLinkBusMsgsv+0xa16>
    391e:	8c 85       	ldd	r24, Y+12	; 0x0c
    3920:	9d 85       	ldd	r25, Y+13	; 0x0d
    3922:	fc 01       	movw	r30, r24
    3924:	83 81       	ldd	r24, Z+3	; 0x03
    3926:	88 23       	and	r24, r24
    3928:	01 f1       	breq	.+64     	; 0x396a <_Z17handleLinkBusMsgsv+0x9e4>
    392a:	8c 85       	ldd	r24, Y+12	; 0x0c
    392c:	9d 85       	ldd	r25, Y+13	; 0x0d
    392e:	03 96       	adiw	r24, 0x03	; 3
    3930:	bc 01       	movw	r22, r24
    3932:	8f ef       	ldi	r24, 0xFF	; 255
    3934:	94 e4       	ldi	r25, 0x44	; 68
    3936:	0e 94 cc 76 	call	0xed98	; 0xed98 <strcmp>
    393a:	89 2b       	or	r24, r25
    393c:	29 f1       	breq	.+74     	; 0x3988 <_Z17handleLinkBusMsgsv+0xa02>
    393e:	8c 85       	ldd	r24, Y+12	; 0x0c
    3940:	9d 85       	ldd	r25, Y+13	; 0x0d
    3942:	03 96       	adiw	r24, 0x03	; 3
    3944:	44 e1       	ldi	r20, 0x14	; 20
    3946:	50 e0       	ldi	r21, 0x00	; 0
    3948:	bc 01       	movw	r22, r24
    394a:	8f ef       	ldi	r24, 0xFF	; 255
    394c:	94 e4       	ldi	r25, 0x44	; 68
    394e:	0e 94 de 76 	call	0xedbc	; 0xedbc <strncpy>
    3952:	0e 94 5b 28 	call	0x50b6	; 0x50b6 <_Z15timeNeededForIDv>
    3956:	80 93 14 45 	sts	0x4514, r24	; 0x804514 <g_time_needed_for_ID>
    395a:	90 93 15 45 	sts	0x4515, r25	; 0x804515 <g_time_needed_for_ID+0x1>
    395e:	80 91 68 45 	lds	r24, 0x4568	; 0x804568 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    3962:	8f 5f       	subi	r24, 0xFF	; 255
    3964:	80 93 68 45 	sts	0x4568, r24	; 0x804568 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    3968:	0f c0       	rjmp	.+30     	; 0x3988 <_Z17handleLinkBusMsgsv+0xa02>
    396a:	80 91 ff 44 	lds	r24, 0x44FF	; 0x8044ff <g_messages_text+0x54>
    396e:	88 23       	and	r24, r24
    3970:	59 f0       	breq	.+22     	; 0x3988 <_Z17handleLinkBusMsgsv+0xa02>
    3972:	10 92 ff 44 	sts	0x44FF, r1	; 0x8044ff <g_messages_text+0x54>
    3976:	10 92 14 45 	sts	0x4514, r1	; 0x804514 <g_time_needed_for_ID>
    397a:	10 92 15 45 	sts	0x4515, r1	; 0x804515 <g_time_needed_for_ID+0x1>
    397e:	80 91 68 45 	lds	r24, 0x4568	; 0x804568 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    3982:	8f 5f       	subi	r24, 0xFF	; 255
    3984:	80 93 68 45 	sts	0x4568, r24	; 0x804568 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    3988:	80 91 40 45 	lds	r24, 0x4540	; 0x804540 <g_Event_Configuration_Check>
    398c:	90 91 41 45 	lds	r25, 0x4541	; 0x804541 <g_Event_Configuration_Check+0x1>
    3990:	91 60       	ori	r25, 0x01	; 1
    3992:	80 93 40 45 	sts	0x4540, r24	; 0x804540 <g_Event_Configuration_Check>
    3996:	90 93 41 45 	sts	0x4541, r25	; 0x804541 <g_Event_Configuration_Check+0x1>
    399a:	1c c3       	rjmp	.+1592   	; 0x3fd4 <_Z17handleLinkBusMsgsv+0x104e>
    399c:	80 91 ff 44 	lds	r24, 0x44FF	; 0x8044ff <g_messages_text+0x54>
    39a0:	88 23       	and	r24, r24
    39a2:	09 f4       	brne	.+2      	; 0x39a6 <_Z17handleLinkBusMsgsv+0xa20>
    39a4:	17 c3       	rjmp	.+1582   	; 0x3fd4 <_Z17handleLinkBusMsgsv+0x104e>
    39a6:	8f ef       	ldi	r24, 0xFF	; 255
    39a8:	94 e4       	ldi	r25, 0x44	; 68
    39aa:	89 2f       	mov	r24, r25
    39ac:	8f 93       	push	r24
    39ae:	8f ef       	ldi	r24, 0xFF	; 255
    39b0:	94 e4       	ldi	r25, 0x44	; 68
    39b2:	8f 93       	push	r24
    39b4:	8b e2       	ldi	r24, 0x2B	; 43
    39b6:	92 e4       	ldi	r25, 0x42	; 66
    39b8:	89 2f       	mov	r24, r25
    39ba:	8f 93       	push	r24
    39bc:	8b e2       	ldi	r24, 0x2B	; 43
    39be:	92 e4       	ldi	r25, 0x42	; 66
    39c0:	8f 93       	push	r24
    39c2:	86 e6       	ldi	r24, 0x66	; 102
    39c4:	94 e4       	ldi	r25, 0x44	; 68
    39c6:	89 2f       	mov	r24, r25
    39c8:	8f 93       	push	r24
    39ca:	86 e6       	ldi	r24, 0x66	; 102
    39cc:	94 e4       	ldi	r25, 0x44	; 68
    39ce:	8f 93       	push	r24
    39d0:	0e 94 0a 77 	call	0xee14	; 0xee14 <sprintf>
    39d4:	0f 90       	pop	r0
    39d6:	0f 90       	pop	r0
    39d8:	0f 90       	pop	r0
    39da:	0f 90       	pop	r0
    39dc:	0f 90       	pop	r0
    39de:	0f 90       	pop	r0
    39e0:	86 e6       	ldi	r24, 0x66	; 102
    39e2:	94 e4       	ldi	r25, 0x44	; 68
    39e4:	0e 94 cf 56 	call	0xad9e	; 0xad9e <_Z12lb_send_textPc>
    39e8:	19 82       	std	Y+1, r1	; 0x01
    39ea:	f4 c2       	rjmp	.+1512   	; 0x3fd4 <_Z17handleLinkBusMsgsv+0x104e>
    39ec:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    39f0:	8f 8f       	std	Y+31, r24	; 0x1f
    39f2:	8c 85       	ldd	r24, Y+12	; 0x0c
    39f4:	9d 85       	ldd	r25, Y+13	; 0x0d
    39f6:	fc 01       	movw	r30, r24
    39f8:	83 81       	ldd	r24, Z+3	; 0x03
    39fa:	89 34       	cpi	r24, 0x49	; 73
    39fc:	09 f0       	breq	.+2      	; 0x3a00 <_Z17handleLinkBusMsgsv+0xa7a>
    39fe:	60 c0       	rjmp	.+192    	; 0x3ac0 <_Z17handleLinkBusMsgsv+0xb3a>
    3a00:	8c 85       	ldd	r24, Y+12	; 0x0c
    3a02:	9d 85       	ldd	r25, Y+13	; 0x0d
    3a04:	fc 01       	movw	r30, r24
    3a06:	80 8d       	ldd	r24, Z+24	; 0x18
    3a08:	88 23       	and	r24, r24
    3a0a:	09 f4       	brne	.+2      	; 0x3a0e <_Z17handleLinkBusMsgsv+0xa88>
    3a0c:	e5 c2       	rjmp	.+1482   	; 0x3fd8 <_Z17handleLinkBusMsgsv+0x1052>
    3a0e:	8c 85       	ldd	r24, Y+12	; 0x0c
    3a10:	9d 85       	ldd	r25, Y+13	; 0x0d
    3a12:	48 96       	adiw	r24, 0x18	; 24
    3a14:	0e 94 96 76 	call	0xed2c	; 0xed2c <atol>
    3a18:	dc 01       	movw	r26, r24
    3a1a:	cb 01       	movw	r24, r22
    3a1c:	88 a3       	std	Y+32, r24	; 0x20
    3a1e:	99 a3       	std	Y+33, r25	; 0x21
    3a20:	aa a3       	std	Y+34, r26	; 0x22
    3a22:	bb a3       	std	Y+35, r27	; 0x23
    3a24:	85 e0       	ldi	r24, 0x05	; 5
    3a26:	8c a3       	std	Y+36, r24	; 0x24
    3a28:	84 e1       	ldi	r24, 0x14	; 20
    3a2a:	8d a3       	std	Y+37, r24	; 0x25
    3a2c:	8d a1       	ldd	r24, Y+37	; 0x25
    3a2e:	28 2f       	mov	r18, r24
    3a30:	30 e0       	ldi	r19, 0x00	; 0
    3a32:	40 e0       	ldi	r20, 0x00	; 0
    3a34:	50 e0       	ldi	r21, 0x00	; 0
    3a36:	88 a1       	ldd	r24, Y+32	; 0x20
    3a38:	99 a1       	ldd	r25, Y+33	; 0x21
    3a3a:	aa a1       	ldd	r26, Y+34	; 0x22
    3a3c:	bb a1       	ldd	r27, Y+35	; 0x23
    3a3e:	28 17       	cp	r18, r24
    3a40:	39 07       	cpc	r19, r25
    3a42:	4a 07       	cpc	r20, r26
    3a44:	5b 07       	cpc	r21, r27
    3a46:	34 f4       	brge	.+12     	; 0x3a54 <_Z17handleLinkBusMsgsv+0xace>
    3a48:	8d a1       	ldd	r24, Y+37	; 0x25
    3a4a:	88 2f       	mov	r24, r24
    3a4c:	90 e0       	ldi	r25, 0x00	; 0
    3a4e:	a0 e0       	ldi	r26, 0x00	; 0
    3a50:	b0 e0       	ldi	r27, 0x00	; 0
    3a52:	10 c0       	rjmp	.+32     	; 0x3a74 <_Z17handleLinkBusMsgsv+0xaee>
    3a54:	8c a1       	ldd	r24, Y+36	; 0x24
    3a56:	88 2f       	mov	r24, r24
    3a58:	90 e0       	ldi	r25, 0x00	; 0
    3a5a:	a0 e0       	ldi	r26, 0x00	; 0
    3a5c:	b0 e0       	ldi	r27, 0x00	; 0
    3a5e:	28 a1       	ldd	r18, Y+32	; 0x20
    3a60:	39 a1       	ldd	r19, Y+33	; 0x21
    3a62:	4a a1       	ldd	r20, Y+34	; 0x22
    3a64:	5b a1       	ldd	r21, Y+35	; 0x23
    3a66:	82 17       	cp	r24, r18
    3a68:	93 07       	cpc	r25, r19
    3a6a:	a4 07       	cpc	r26, r20
    3a6c:	b5 07       	cpc	r27, r21
    3a6e:	14 f4       	brge	.+4      	; 0x3a74 <_Z17handleLinkBusMsgsv+0xaee>
    3a70:	da 01       	movw	r26, r20
    3a72:	c9 01       	movw	r24, r18
    3a74:	8f 8f       	std	Y+31, r24	; 0x1f
    3a76:	90 91 0b 40 	lds	r25, 0x400B	; 0x80400b <g_id_codespeed>
    3a7a:	81 e0       	ldi	r24, 0x01	; 1
    3a7c:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3a7e:	29 17       	cp	r18, r25
    3a80:	09 f4       	brne	.+2      	; 0x3a84 <_Z17handleLinkBusMsgsv+0xafe>
    3a82:	80 e0       	ldi	r24, 0x00	; 0
    3a84:	88 23       	and	r24, r24
    3a86:	91 f0       	breq	.+36     	; 0x3aac <_Z17handleLinkBusMsgsv+0xb26>
    3a88:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3a8a:	80 93 0b 40 	sts	0x400B, r24	; 0x80400b <g_id_codespeed>
    3a8e:	80 91 68 45 	lds	r24, 0x4568	; 0x804568 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    3a92:	8f 5f       	subi	r24, 0xFF	; 255
    3a94:	80 93 68 45 	sts	0x4568, r24	; 0x804568 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    3a98:	80 91 ff 44 	lds	r24, 0x44FF	; 0x8044ff <g_messages_text+0x54>
    3a9c:	88 23       	and	r24, r24
    3a9e:	31 f0       	breq	.+12     	; 0x3aac <_Z17handleLinkBusMsgsv+0xb26>
    3aa0:	0e 94 5b 28 	call	0x50b6	; 0x50b6 <_Z15timeNeededForIDv>
    3aa4:	80 93 14 45 	sts	0x4514, r24	; 0x804514 <g_time_needed_for_ID>
    3aa8:	90 93 15 45 	sts	0x4515, r25	; 0x804515 <g_time_needed_for_ID+0x1>
    3aac:	80 91 40 45 	lds	r24, 0x4540	; 0x804540 <g_Event_Configuration_Check>
    3ab0:	90 91 41 45 	lds	r25, 0x4541	; 0x804541 <g_Event_Configuration_Check+0x1>
    3ab4:	92 60       	ori	r25, 0x02	; 2
    3ab6:	80 93 40 45 	sts	0x4540, r24	; 0x804540 <g_Event_Configuration_Check>
    3aba:	90 93 41 45 	sts	0x4541, r25	; 0x804541 <g_Event_Configuration_Check+0x1>
    3abe:	8c c2       	rjmp	.+1304   	; 0x3fd8 <_Z17handleLinkBusMsgsv+0x1052>
    3ac0:	8c 85       	ldd	r24, Y+12	; 0x0c
    3ac2:	9d 85       	ldd	r25, Y+13	; 0x0d
    3ac4:	fc 01       	movw	r30, r24
    3ac6:	83 81       	ldd	r24, Z+3	; 0x03
    3ac8:	80 35       	cpi	r24, 0x50	; 80
    3aca:	09 f0       	breq	.+2      	; 0x3ace <_Z17handleLinkBusMsgsv+0xb48>
    3acc:	85 c2       	rjmp	.+1290   	; 0x3fd8 <_Z17handleLinkBusMsgsv+0x1052>
    3ace:	8c 85       	ldd	r24, Y+12	; 0x0c
    3ad0:	9d 85       	ldd	r25, Y+13	; 0x0d
    3ad2:	fc 01       	movw	r30, r24
    3ad4:	80 8d       	ldd	r24, Z+24	; 0x18
    3ad6:	88 23       	and	r24, r24
    3ad8:	09 f4       	brne	.+2      	; 0x3adc <_Z17handleLinkBusMsgsv+0xb56>
    3ada:	7e c2       	rjmp	.+1276   	; 0x3fd8 <_Z17handleLinkBusMsgsv+0x1052>
    3adc:	8c 85       	ldd	r24, Y+12	; 0x0c
    3ade:	9d 85       	ldd	r25, Y+13	; 0x0d
    3ae0:	48 96       	adiw	r24, 0x18	; 24
    3ae2:	0e 94 96 76 	call	0xed2c	; 0xed2c <atol>
    3ae6:	dc 01       	movw	r26, r24
    3ae8:	cb 01       	movw	r24, r22
    3aea:	8e a3       	std	Y+38, r24	; 0x26
    3aec:	9f a3       	std	Y+39, r25	; 0x27
    3aee:	a8 a7       	std	Y+40, r26	; 0x28
    3af0:	b9 a7       	std	Y+41, r27	; 0x29
    3af2:	85 e0       	ldi	r24, 0x05	; 5
    3af4:	8a a7       	std	Y+42, r24	; 0x2a
    3af6:	84 e1       	ldi	r24, 0x14	; 20
    3af8:	8b a7       	std	Y+43, r24	; 0x2b
    3afa:	8b a5       	ldd	r24, Y+43	; 0x2b
    3afc:	28 2f       	mov	r18, r24
    3afe:	30 e0       	ldi	r19, 0x00	; 0
    3b00:	40 e0       	ldi	r20, 0x00	; 0
    3b02:	50 e0       	ldi	r21, 0x00	; 0
    3b04:	8e a1       	ldd	r24, Y+38	; 0x26
    3b06:	9f a1       	ldd	r25, Y+39	; 0x27
    3b08:	a8 a5       	ldd	r26, Y+40	; 0x28
    3b0a:	b9 a5       	ldd	r27, Y+41	; 0x29
    3b0c:	28 17       	cp	r18, r24
    3b0e:	39 07       	cpc	r19, r25
    3b10:	4a 07       	cpc	r20, r26
    3b12:	5b 07       	cpc	r21, r27
    3b14:	34 f4       	brge	.+12     	; 0x3b22 <_Z17handleLinkBusMsgsv+0xb9c>
    3b16:	8b a5       	ldd	r24, Y+43	; 0x2b
    3b18:	88 2f       	mov	r24, r24
    3b1a:	90 e0       	ldi	r25, 0x00	; 0
    3b1c:	a0 e0       	ldi	r26, 0x00	; 0
    3b1e:	b0 e0       	ldi	r27, 0x00	; 0
    3b20:	10 c0       	rjmp	.+32     	; 0x3b42 <_Z17handleLinkBusMsgsv+0xbbc>
    3b22:	8a a5       	ldd	r24, Y+42	; 0x2a
    3b24:	88 2f       	mov	r24, r24
    3b26:	90 e0       	ldi	r25, 0x00	; 0
    3b28:	a0 e0       	ldi	r26, 0x00	; 0
    3b2a:	b0 e0       	ldi	r27, 0x00	; 0
    3b2c:	2e a1       	ldd	r18, Y+38	; 0x26
    3b2e:	3f a1       	ldd	r19, Y+39	; 0x27
    3b30:	48 a5       	ldd	r20, Y+40	; 0x28
    3b32:	59 a5       	ldd	r21, Y+41	; 0x29
    3b34:	82 17       	cp	r24, r18
    3b36:	93 07       	cpc	r25, r19
    3b38:	a4 07       	cpc	r26, r20
    3b3a:	b5 07       	cpc	r27, r21
    3b3c:	14 f4       	brge	.+4      	; 0x3b42 <_Z17handleLinkBusMsgsv+0xbbc>
    3b3e:	da 01       	movw	r26, r20
    3b40:	c9 01       	movw	r24, r18
    3b42:	8f 8f       	std	Y+31, r24	; 0x1f
    3b44:	90 91 0c 40 	lds	r25, 0x400C	; 0x80400c <g_pattern_codespeed>
    3b48:	81 e0       	ldi	r24, 0x01	; 1
    3b4a:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3b4c:	29 17       	cp	r18, r25
    3b4e:	09 f4       	brne	.+2      	; 0x3b52 <_Z17handleLinkBusMsgsv+0xbcc>
    3b50:	80 e0       	ldi	r24, 0x00	; 0
    3b52:	88 23       	and	r24, r24
    3b54:	81 f0       	breq	.+32     	; 0x3b76 <_Z17handleLinkBusMsgsv+0xbf0>
    3b56:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3b58:	80 93 0c 40 	sts	0x400C, r24	; 0x80400c <g_pattern_codespeed>
    3b5c:	80 91 68 45 	lds	r24, 0x4568	; 0x804568 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    3b60:	8f 5f       	subi	r24, 0xFF	; 255
    3b62:	80 93 68 45 	sts	0x4568, r24	; 0x804568 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    3b66:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    3b6a:	0e 94 15 21 	call	0x422a	; 0x422a <_Z13throttleValueh>
    3b6e:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    3b72:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    3b76:	80 91 40 45 	lds	r24, 0x4540	; 0x804540 <g_Event_Configuration_Check>
    3b7a:	90 91 41 45 	lds	r25, 0x4541	; 0x804541 <g_Event_Configuration_Check+0x1>
    3b7e:	94 60       	ori	r25, 0x04	; 4
    3b80:	80 93 40 45 	sts	0x4540, r24	; 0x804540 <g_Event_Configuration_Check>
    3b84:	90 93 41 45 	sts	0x4541, r25	; 0x804541 <g_Event_Configuration_Check+0x1>
    3b88:	27 c2       	rjmp	.+1102   	; 0x3fd8 <_Z17handleLinkBusMsgsv+0x1052>
    3b8a:	1c a6       	std	Y+44, r1	; 0x2c
    3b8c:	1d a6       	std	Y+45, r1	; 0x2d
    3b8e:	8c 85       	ldd	r24, Y+12	; 0x0c
    3b90:	9d 85       	ldd	r25, Y+13	; 0x0d
    3b92:	fc 01       	movw	r30, r24
    3b94:	83 81       	ldd	r24, Z+3	; 0x03
    3b96:	80 33       	cpi	r24, 0x30	; 48
    3b98:	91 f5       	brne	.+100    	; 0x3bfe <_Z17handleLinkBusMsgsv+0xc78>
    3b9a:	8c 85       	ldd	r24, Y+12	; 0x0c
    3b9c:	9d 85       	ldd	r25, Y+13	; 0x0d
    3b9e:	fc 01       	movw	r30, r24
    3ba0:	80 8d       	ldd	r24, Z+24	; 0x18
    3ba2:	88 23       	and	r24, r24
    3ba4:	09 f4       	brne	.+2      	; 0x3ba8 <_Z17handleLinkBusMsgsv+0xc22>
    3ba6:	1a c2       	rjmp	.+1076   	; 0x3fdc <_Z17handleLinkBusMsgsv+0x1056>
    3ba8:	8c 85       	ldd	r24, Y+12	; 0x0c
    3baa:	9d 85       	ldd	r25, Y+13	; 0x0d
    3bac:	48 96       	adiw	r24, 0x18	; 24
    3bae:	0e 94 96 76 	call	0xed2c	; 0xed2c <atol>
    3bb2:	dc 01       	movw	r26, r24
    3bb4:	cb 01       	movw	r24, r22
    3bb6:	8c a7       	std	Y+44, r24	; 0x2c
    3bb8:	9d a7       	std	Y+45, r25	; 0x2d
    3bba:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_off_air_seconds>
    3bbe:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    3bc2:	41 e0       	ldi	r20, 0x01	; 1
    3bc4:	2c a5       	ldd	r18, Y+44	; 0x2c
    3bc6:	3d a5       	ldd	r19, Y+45	; 0x2d
    3bc8:	28 17       	cp	r18, r24
    3bca:	39 07       	cpc	r19, r25
    3bcc:	09 f4       	brne	.+2      	; 0x3bd0 <_Z17handleLinkBusMsgsv+0xc4a>
    3bce:	40 e0       	ldi	r20, 0x00	; 0
    3bd0:	44 23       	and	r20, r20
    3bd2:	59 f0       	breq	.+22     	; 0x3bea <_Z17handleLinkBusMsgsv+0xc64>
    3bd4:	8c a5       	ldd	r24, Y+44	; 0x2c
    3bd6:	9d a5       	ldd	r25, Y+45	; 0x2d
    3bd8:	80 93 0f 40 	sts	0x400F, r24	; 0x80400f <g_off_air_seconds>
    3bdc:	90 93 10 40 	sts	0x4010, r25	; 0x804010 <g_off_air_seconds+0x1>
    3be0:	80 91 68 45 	lds	r24, 0x4568	; 0x804568 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    3be4:	8f 5f       	subi	r24, 0xFF	; 255
    3be6:	80 93 68 45 	sts	0x4568, r24	; 0x804568 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    3bea:	80 91 40 45 	lds	r24, 0x4540	; 0x804540 <g_Event_Configuration_Check>
    3bee:	90 91 41 45 	lds	r25, 0x4541	; 0x804541 <g_Event_Configuration_Check+0x1>
    3bf2:	84 60       	ori	r24, 0x04	; 4
    3bf4:	80 93 40 45 	sts	0x4540, r24	; 0x804540 <g_Event_Configuration_Check>
    3bf8:	90 93 41 45 	sts	0x4541, r25	; 0x804541 <g_Event_Configuration_Check+0x1>
    3bfc:	ef c1       	rjmp	.+990    	; 0x3fdc <_Z17handleLinkBusMsgsv+0x1056>
    3bfe:	8c 85       	ldd	r24, Y+12	; 0x0c
    3c00:	9d 85       	ldd	r25, Y+13	; 0x0d
    3c02:	fc 01       	movw	r30, r24
    3c04:	83 81       	ldd	r24, Z+3	; 0x03
    3c06:	81 33       	cpi	r24, 0x31	; 49
    3c08:	91 f5       	brne	.+100    	; 0x3c6e <_Z17handleLinkBusMsgsv+0xce8>
    3c0a:	8c 85       	ldd	r24, Y+12	; 0x0c
    3c0c:	9d 85       	ldd	r25, Y+13	; 0x0d
    3c0e:	fc 01       	movw	r30, r24
    3c10:	80 8d       	ldd	r24, Z+24	; 0x18
    3c12:	88 23       	and	r24, r24
    3c14:	09 f4       	brne	.+2      	; 0x3c18 <_Z17handleLinkBusMsgsv+0xc92>
    3c16:	e2 c1       	rjmp	.+964    	; 0x3fdc <_Z17handleLinkBusMsgsv+0x1056>
    3c18:	8c 85       	ldd	r24, Y+12	; 0x0c
    3c1a:	9d 85       	ldd	r25, Y+13	; 0x0d
    3c1c:	48 96       	adiw	r24, 0x18	; 24
    3c1e:	0e 94 96 76 	call	0xed2c	; 0xed2c <atol>
    3c22:	dc 01       	movw	r26, r24
    3c24:	cb 01       	movw	r24, r22
    3c26:	8c a7       	std	Y+44, r24	; 0x2c
    3c28:	9d a7       	std	Y+45, r25	; 0x2d
    3c2a:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    3c2e:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    3c32:	41 e0       	ldi	r20, 0x01	; 1
    3c34:	2c a5       	ldd	r18, Y+44	; 0x2c
    3c36:	3d a5       	ldd	r19, Y+45	; 0x2d
    3c38:	28 17       	cp	r18, r24
    3c3a:	39 07       	cpc	r19, r25
    3c3c:	09 f4       	brne	.+2      	; 0x3c40 <_Z17handleLinkBusMsgsv+0xcba>
    3c3e:	40 e0       	ldi	r20, 0x00	; 0
    3c40:	44 23       	and	r20, r20
    3c42:	59 f0       	breq	.+22     	; 0x3c5a <_Z17handleLinkBusMsgsv+0xcd4>
    3c44:	8c a5       	ldd	r24, Y+44	; 0x2c
    3c46:	9d a5       	ldd	r25, Y+45	; 0x2d
    3c48:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_on_air_seconds>
    3c4c:	90 93 0e 40 	sts	0x400E, r25	; 0x80400e <g_on_air_seconds+0x1>
    3c50:	80 91 68 45 	lds	r24, 0x4568	; 0x804568 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    3c54:	8f 5f       	subi	r24, 0xFF	; 255
    3c56:	80 93 68 45 	sts	0x4568, r24	; 0x804568 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    3c5a:	80 91 40 45 	lds	r24, 0x4540	; 0x804540 <g_Event_Configuration_Check>
    3c5e:	90 91 41 45 	lds	r25, 0x4541	; 0x804541 <g_Event_Configuration_Check+0x1>
    3c62:	88 60       	ori	r24, 0x08	; 8
    3c64:	80 93 40 45 	sts	0x4540, r24	; 0x804540 <g_Event_Configuration_Check>
    3c68:	90 93 41 45 	sts	0x4541, r25	; 0x804541 <g_Event_Configuration_Check+0x1>
    3c6c:	b7 c1       	rjmp	.+878    	; 0x3fdc <_Z17handleLinkBusMsgsv+0x1056>
    3c6e:	8c 85       	ldd	r24, Y+12	; 0x0c
    3c70:	9d 85       	ldd	r25, Y+13	; 0x0d
    3c72:	fc 01       	movw	r30, r24
    3c74:	83 81       	ldd	r24, Z+3	; 0x03
    3c76:	89 34       	cpi	r24, 0x49	; 73
    3c78:	91 f5       	brne	.+100    	; 0x3cde <_Z17handleLinkBusMsgsv+0xd58>
    3c7a:	8c 85       	ldd	r24, Y+12	; 0x0c
    3c7c:	9d 85       	ldd	r25, Y+13	; 0x0d
    3c7e:	fc 01       	movw	r30, r24
    3c80:	80 8d       	ldd	r24, Z+24	; 0x18
    3c82:	88 23       	and	r24, r24
    3c84:	09 f4       	brne	.+2      	; 0x3c88 <_Z17handleLinkBusMsgsv+0xd02>
    3c86:	aa c1       	rjmp	.+852    	; 0x3fdc <_Z17handleLinkBusMsgsv+0x1056>
    3c88:	8c 85       	ldd	r24, Y+12	; 0x0c
    3c8a:	9d 85       	ldd	r25, Y+13	; 0x0d
    3c8c:	48 96       	adiw	r24, 0x18	; 24
    3c8e:	0e 94 96 76 	call	0xed2c	; 0xed2c <atol>
    3c92:	dc 01       	movw	r26, r24
    3c94:	cb 01       	movw	r24, r22
    3c96:	8c a7       	std	Y+44, r24	; 0x2c
    3c98:	9d a7       	std	Y+45, r25	; 0x2d
    3c9a:	80 91 11 40 	lds	r24, 0x4011	; 0x804011 <g_ID_period_seconds>
    3c9e:	90 91 12 40 	lds	r25, 0x4012	; 0x804012 <g_ID_period_seconds+0x1>
    3ca2:	41 e0       	ldi	r20, 0x01	; 1
    3ca4:	2c a5       	ldd	r18, Y+44	; 0x2c
    3ca6:	3d a5       	ldd	r19, Y+45	; 0x2d
    3ca8:	28 17       	cp	r18, r24
    3caa:	39 07       	cpc	r19, r25
    3cac:	09 f4       	brne	.+2      	; 0x3cb0 <_Z17handleLinkBusMsgsv+0xd2a>
    3cae:	40 e0       	ldi	r20, 0x00	; 0
    3cb0:	44 23       	and	r20, r20
    3cb2:	59 f0       	breq	.+22     	; 0x3cca <_Z17handleLinkBusMsgsv+0xd44>
    3cb4:	8c a5       	ldd	r24, Y+44	; 0x2c
    3cb6:	9d a5       	ldd	r25, Y+45	; 0x2d
    3cb8:	80 93 11 40 	sts	0x4011, r24	; 0x804011 <g_ID_period_seconds>
    3cbc:	90 93 12 40 	sts	0x4012, r25	; 0x804012 <g_ID_period_seconds+0x1>
    3cc0:	80 91 68 45 	lds	r24, 0x4568	; 0x804568 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    3cc4:	8f 5f       	subi	r24, 0xFF	; 255
    3cc6:	80 93 68 45 	sts	0x4568, r24	; 0x804568 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    3cca:	80 91 40 45 	lds	r24, 0x4540	; 0x804540 <g_Event_Configuration_Check>
    3cce:	90 91 41 45 	lds	r25, 0x4541	; 0x804541 <g_Event_Configuration_Check+0x1>
    3cd2:	80 62       	ori	r24, 0x20	; 32
    3cd4:	80 93 40 45 	sts	0x4540, r24	; 0x804540 <g_Event_Configuration_Check>
    3cd8:	90 93 41 45 	sts	0x4541, r25	; 0x804541 <g_Event_Configuration_Check+0x1>
    3cdc:	7f c1       	rjmp	.+766    	; 0x3fdc <_Z17handleLinkBusMsgsv+0x1056>
    3cde:	8c 85       	ldd	r24, Y+12	; 0x0c
    3ce0:	9d 85       	ldd	r25, Y+13	; 0x0d
    3ce2:	fc 01       	movw	r30, r24
    3ce4:	83 81       	ldd	r24, Z+3	; 0x03
    3ce6:	84 34       	cpi	r24, 0x44	; 68
    3ce8:	09 f0       	breq	.+2      	; 0x3cec <_Z17handleLinkBusMsgsv+0xd66>
    3cea:	78 c1       	rjmp	.+752    	; 0x3fdc <_Z17handleLinkBusMsgsv+0x1056>
    3cec:	8c 85       	ldd	r24, Y+12	; 0x0c
    3cee:	9d 85       	ldd	r25, Y+13	; 0x0d
    3cf0:	fc 01       	movw	r30, r24
    3cf2:	80 8d       	ldd	r24, Z+24	; 0x18
    3cf4:	88 23       	and	r24, r24
    3cf6:	09 f4       	brne	.+2      	; 0x3cfa <_Z17handleLinkBusMsgsv+0xd74>
    3cf8:	71 c1       	rjmp	.+738    	; 0x3fdc <_Z17handleLinkBusMsgsv+0x1056>
    3cfa:	8c 85       	ldd	r24, Y+12	; 0x0c
    3cfc:	9d 85       	ldd	r25, Y+13	; 0x0d
    3cfe:	48 96       	adiw	r24, 0x18	; 24
    3d00:	0e 94 96 76 	call	0xed2c	; 0xed2c <atol>
    3d04:	dc 01       	movw	r26, r24
    3d06:	cb 01       	movw	r24, r22
    3d08:	8c a7       	std	Y+44, r24	; 0x2c
    3d0a:	9d a7       	std	Y+45, r25	; 0x2d
    3d0c:	80 91 16 45 	lds	r24, 0x4516	; 0x804516 <g_intra_cycle_delay_time>
    3d10:	90 91 17 45 	lds	r25, 0x4517	; 0x804517 <g_intra_cycle_delay_time+0x1>
    3d14:	41 e0       	ldi	r20, 0x01	; 1
    3d16:	2c a5       	ldd	r18, Y+44	; 0x2c
    3d18:	3d a5       	ldd	r19, Y+45	; 0x2d
    3d1a:	28 17       	cp	r18, r24
    3d1c:	39 07       	cpc	r19, r25
    3d1e:	09 f4       	brne	.+2      	; 0x3d22 <_Z17handleLinkBusMsgsv+0xd9c>
    3d20:	40 e0       	ldi	r20, 0x00	; 0
    3d22:	44 23       	and	r20, r20
    3d24:	59 f0       	breq	.+22     	; 0x3d3c <_Z17handleLinkBusMsgsv+0xdb6>
    3d26:	8c a5       	ldd	r24, Y+44	; 0x2c
    3d28:	9d a5       	ldd	r25, Y+45	; 0x2d
    3d2a:	80 93 16 45 	sts	0x4516, r24	; 0x804516 <g_intra_cycle_delay_time>
    3d2e:	90 93 17 45 	sts	0x4517, r25	; 0x804517 <g_intra_cycle_delay_time+0x1>
    3d32:	80 91 68 45 	lds	r24, 0x4568	; 0x804568 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    3d36:	8f 5f       	subi	r24, 0xFF	; 255
    3d38:	80 93 68 45 	sts	0x4568, r24	; 0x804568 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    3d3c:	80 91 40 45 	lds	r24, 0x4540	; 0x804540 <g_Event_Configuration_Check>
    3d40:	90 91 41 45 	lds	r25, 0x4541	; 0x804541 <g_Event_Configuration_Check+0x1>
    3d44:	80 61       	ori	r24, 0x10	; 16
    3d46:	80 93 40 45 	sts	0x4540, r24	; 0x804540 <g_Event_Configuration_Check>
    3d4a:	90 93 41 45 	sts	0x4541, r25	; 0x804541 <g_Event_Configuration_Check+0x1>
    3d4e:	46 c1       	rjmp	.+652    	; 0x3fdc <_Z17handleLinkBusMsgsv+0x1056>
    3d50:	8c 85       	ldd	r24, Y+12	; 0x0c
    3d52:	9d 85       	ldd	r25, Y+13	; 0x0d
    3d54:	fc 01       	movw	r30, r24
    3d56:	83 81       	ldd	r24, Z+3	; 0x03
    3d58:	88 23       	and	r24, r24
    3d5a:	09 f4       	brne	.+2      	; 0x3d5e <_Z17handleLinkBusMsgsv+0xdd8>
    3d5c:	41 c1       	rjmp	.+642    	; 0x3fe0 <_Z17handleLinkBusMsgsv+0x105a>
    3d5e:	8c 85       	ldd	r24, Y+12	; 0x0c
    3d60:	9d 85       	ldd	r25, Y+13	; 0x0d
    3d62:	03 96       	adiw	r24, 0x03	; 3
    3d64:	bc 01       	movw	r22, r24
    3d66:	8b ea       	ldi	r24, 0xAB	; 171
    3d68:	94 e4       	ldi	r25, 0x44	; 68
    3d6a:	0e 94 cc 76 	call	0xed98	; 0xed98 <strcmp>
    3d6e:	89 2b       	or	r24, r25
    3d70:	79 f0       	breq	.+30     	; 0x3d90 <_Z17handleLinkBusMsgsv+0xe0a>
    3d72:	8c 85       	ldd	r24, Y+12	; 0x0c
    3d74:	9d 85       	ldd	r25, Y+13	; 0x0d
    3d76:	03 96       	adiw	r24, 0x03	; 3
    3d78:	44 e1       	ldi	r20, 0x14	; 20
    3d7a:	50 e0       	ldi	r21, 0x00	; 0
    3d7c:	bc 01       	movw	r22, r24
    3d7e:	8b ea       	ldi	r24, 0xAB	; 171
    3d80:	94 e4       	ldi	r25, 0x44	; 68
    3d82:	0e 94 de 76 	call	0xedbc	; 0xedbc <strncpy>
    3d86:	80 91 68 45 	lds	r24, 0x4568	; 0x804568 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    3d8a:	8f 5f       	subi	r24, 0xFF	; 255
    3d8c:	80 93 68 45 	sts	0x4568, r24	; 0x804568 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    3d90:	80 91 40 45 	lds	r24, 0x4540	; 0x804540 <g_Event_Configuration_Check>
    3d94:	90 91 41 45 	lds	r25, 0x4541	; 0x804541 <g_Event_Configuration_Check+0x1>
    3d98:	82 60       	ori	r24, 0x02	; 2
    3d9a:	80 93 40 45 	sts	0x4540, r24	; 0x804540 <g_Event_Configuration_Check>
    3d9e:	90 93 41 45 	sts	0x4541, r25	; 0x804541 <g_Event_Configuration_Check+0x1>
    3da2:	1e c1       	rjmp	.+572    	; 0x3fe0 <_Z17handleLinkBusMsgsv+0x105a>
    3da4:	18 86       	std	Y+8, r1	; 0x08
    3da6:	19 86       	std	Y+9, r1	; 0x09
    3da8:	1a 86       	std	Y+10, r1	; 0x0a
    3daa:	1b 86       	std	Y+11, r1	; 0x0b
    3dac:	8c 85       	ldd	r24, Y+12	; 0x0c
    3dae:	9d 85       	ldd	r25, Y+13	; 0x0d
    3db0:	fc 01       	movw	r30, r24
    3db2:	83 81       	ldd	r24, Z+3	; 0x03
    3db4:	88 23       	and	r24, r24
    3db6:	e9 f1       	breq	.+122    	; 0x3e32 <_Z17handleLinkBusMsgsv+0xeac>
    3db8:	8c 85       	ldd	r24, Y+12	; 0x0c
    3dba:	9d 85       	ldd	r25, Y+13	; 0x0d
    3dbc:	03 96       	adiw	r24, 0x03	; 3
    3dbe:	0e 94 96 76 	call	0xed2c	; 0xed2c <atol>
    3dc2:	dc 01       	movw	r26, r24
    3dc4:	cb 01       	movw	r24, r22
    3dc6:	8c ab       	std	Y+52, r24	; 0x34
    3dc8:	9d ab       	std	Y+53, r25	; 0x35
    3dca:	ae ab       	std	Y+54, r26	; 0x36
    3dcc:	bf ab       	std	Y+55, r27	; 0x37
    3dce:	0e 94 d4 6c 	call	0xd9a8	; 0xd9a8 <_Z14txGetFrequencyv>
    3dd2:	9b 01       	movw	r18, r22
    3dd4:	ac 01       	movw	r20, r24
    3dd6:	8c a9       	ldd	r24, Y+52	; 0x34
    3dd8:	9d a9       	ldd	r25, Y+53	; 0x35
    3dda:	ae a9       	ldd	r26, Y+54	; 0x36
    3ddc:	bf a9       	ldd	r27, Y+55	; 0x37
    3dde:	61 e0       	ldi	r22, 0x01	; 1
    3de0:	28 17       	cp	r18, r24
    3de2:	39 07       	cpc	r19, r25
    3de4:	4a 07       	cpc	r20, r26
    3de6:	5b 07       	cpc	r21, r27
    3de8:	09 f4       	brne	.+2      	; 0x3dec <_Z17handleLinkBusMsgsv+0xe66>
    3dea:	60 e0       	ldi	r22, 0x00	; 0
    3dec:	66 23       	and	r22, r22
    3dee:	b9 f0       	breq	.+46     	; 0x3e1e <_Z17handleLinkBusMsgsv+0xe98>
    3df0:	ce 01       	movw	r24, r28
    3df2:	c4 96       	adiw	r24, 0x34	; 52
    3df4:	61 e0       	ldi	r22, 0x01	; 1
    3df6:	0e 94 82 6c 	call	0xd904	; 0xd904 <_Z14txSetFrequencyPmb>
    3dfa:	98 2f       	mov	r25, r24
    3dfc:	81 e0       	ldi	r24, 0x01	; 1
    3dfe:	89 27       	eor	r24, r25
    3e00:	88 23       	and	r24, r24
    3e02:	69 f0       	breq	.+26     	; 0x3e1e <_Z17handleLinkBusMsgsv+0xe98>
    3e04:	8c a9       	ldd	r24, Y+52	; 0x34
    3e06:	9d a9       	ldd	r25, Y+53	; 0x35
    3e08:	ae a9       	ldd	r26, Y+54	; 0x36
    3e0a:	bf a9       	ldd	r27, Y+55	; 0x37
    3e0c:	88 87       	std	Y+8, r24	; 0x08
    3e0e:	99 87       	std	Y+9, r25	; 0x09
    3e10:	aa 87       	std	Y+10, r26	; 0x0a
    3e12:	bb 87       	std	Y+11, r27	; 0x0b
    3e14:	80 91 68 45 	lds	r24, 0x4568	; 0x804568 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    3e18:	8f 5f       	subi	r24, 0xFF	; 255
    3e1a:	80 93 68 45 	sts	0x4568, r24	; 0x804568 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    3e1e:	80 91 40 45 	lds	r24, 0x4540	; 0x804540 <g_Event_Configuration_Check>
    3e22:	90 91 41 45 	lds	r25, 0x4541	; 0x804541 <g_Event_Configuration_Check+0x1>
    3e26:	80 68       	ori	r24, 0x80	; 128
    3e28:	80 93 40 45 	sts	0x4540, r24	; 0x804540 <g_Event_Configuration_Check>
    3e2c:	90 93 41 45 	sts	0x4541, r25	; 0x804541 <g_Event_Configuration_Check+0x1>
    3e30:	08 c0       	rjmp	.+16     	; 0x3e42 <_Z17handleLinkBusMsgsv+0xebc>
    3e32:	0e 94 d4 6c 	call	0xd9a8	; 0xd9a8 <_Z14txGetFrequencyv>
    3e36:	dc 01       	movw	r26, r24
    3e38:	cb 01       	movw	r24, r22
    3e3a:	88 87       	std	Y+8, r24	; 0x08
    3e3c:	99 87       	std	Y+9, r25	; 0x09
    3e3e:	aa 87       	std	Y+10, r26	; 0x0a
    3e40:	bb 87       	std	Y+11, r27	; 0x0b
    3e42:	88 85       	ldd	r24, Y+8	; 0x08
    3e44:	99 85       	ldd	r25, Y+9	; 0x09
    3e46:	aa 85       	ldd	r26, Y+10	; 0x0a
    3e48:	bb 85       	ldd	r27, Y+11	; 0x0b
    3e4a:	89 2b       	or	r24, r25
    3e4c:	8a 2b       	or	r24, r26
    3e4e:	8b 2b       	or	r24, r27
    3e50:	09 f4       	brne	.+2      	; 0x3e54 <_Z17handleLinkBusMsgsv+0xece>
    3e52:	c8 c0       	rjmp	.+400    	; 0x3fe4 <_Z17handleLinkBusMsgsv+0x105e>
    3e54:	8b 85       	ldd	r24, Y+11	; 0x0b
    3e56:	8f 93       	push	r24
    3e58:	8a 85       	ldd	r24, Y+10	; 0x0a
    3e5a:	8f 93       	push	r24
    3e5c:	89 85       	ldd	r24, Y+9	; 0x09
    3e5e:	8f 93       	push	r24
    3e60:	88 85       	ldd	r24, Y+8	; 0x08
    3e62:	8f 93       	push	r24
    3e64:	84 e3       	ldi	r24, 0x34	; 52
    3e66:	92 e4       	ldi	r25, 0x42	; 66
    3e68:	89 2f       	mov	r24, r25
    3e6a:	8f 93       	push	r24
    3e6c:	84 e3       	ldi	r24, 0x34	; 52
    3e6e:	92 e4       	ldi	r25, 0x42	; 66
    3e70:	8f 93       	push	r24
    3e72:	86 e6       	ldi	r24, 0x66	; 102
    3e74:	94 e4       	ldi	r25, 0x44	; 68
    3e76:	89 2f       	mov	r24, r25
    3e78:	8f 93       	push	r24
    3e7a:	86 e6       	ldi	r24, 0x66	; 102
    3e7c:	94 e4       	ldi	r25, 0x44	; 68
    3e7e:	8f 93       	push	r24
    3e80:	0e 94 0a 77 	call	0xee14	; 0xee14 <sprintf>
    3e84:	8d b7       	in	r24, 0x3d	; 61
    3e86:	9e b7       	in	r25, 0x3e	; 62
    3e88:	08 96       	adiw	r24, 0x08	; 8
    3e8a:	cd bf       	out	0x3d, r28	; 61
    3e8c:	de bf       	out	0x3e, r29	; 62
    3e8e:	46 e6       	ldi	r20, 0x66	; 102
    3e90:	54 e4       	ldi	r21, 0x44	; 68
    3e92:	69 e3       	ldi	r22, 0x39	; 57
    3e94:	72 e4       	ldi	r23, 0x42	; 66
    3e96:	83 e0       	ldi	r24, 0x03	; 3
    3e98:	0e 94 2c 57 	call	0xae58	; 0xae58 <_Z11lb_send_msg13LBMessageTypePKcPc>
    3e9c:	a3 c0       	rjmp	.+326    	; 0x3fe4 <_Z17handleLinkBusMsgsv+0x105e>
    3e9e:	80 91 31 45 	lds	r24, 0x4531	; 0x804531 <_ZL22g_lastConversionResult>
    3ea2:	90 91 32 45 	lds	r25, 0x4532	; 0x804532 <_ZL22g_lastConversionResult+0x1>
    3ea6:	cc 01       	movw	r24, r24
    3ea8:	a0 e0       	ldi	r26, 0x00	; 0
    3eaa:	b0 e0       	ldi	r27, 0x00	; 0
    3eac:	bc 01       	movw	r22, r24
    3eae:	cd 01       	movw	r24, r26
    3eb0:	0e 94 77 73 	call	0xe6ee	; 0xe6ee <__floatunsisf>
    3eb4:	dc 01       	movw	r26, r24
    3eb6:	cb 01       	movw	r24, r22
    3eb8:	8e a7       	std	Y+46, r24	; 0x2e
    3eba:	9f a7       	std	Y+47, r25	; 0x2f
    3ebc:	a8 ab       	std	Y+48, r26	; 0x30
    3ebe:	b9 ab       	std	Y+49, r27	; 0x31
    3ec0:	20 e0       	ldi	r18, 0x00	; 0
    3ec2:	30 e0       	ldi	r19, 0x00	; 0
    3ec4:	4c e2       	ldi	r20, 0x2C	; 44
    3ec6:	53 e4       	ldi	r21, 0x43	; 67
    3ec8:	6e a5       	ldd	r22, Y+46	; 0x2e
    3eca:	7f a5       	ldd	r23, Y+47	; 0x2f
    3ecc:	88 a9       	ldd	r24, Y+48	; 0x30
    3ece:	99 a9       	ldd	r25, Y+49	; 0x31
    3ed0:	0e 94 2e 74 	call	0xe85c	; 0xe85c <__mulsf3>
    3ed4:	dc 01       	movw	r26, r24
    3ed6:	cb 01       	movw	r24, r22
    3ed8:	8e a7       	std	Y+46, r24	; 0x2e
    3eda:	9f a7       	std	Y+47, r25	; 0x2f
    3edc:	a8 ab       	std	Y+48, r26	; 0x30
    3ede:	b9 ab       	std	Y+49, r27	; 0x31
    3ee0:	2f e6       	ldi	r18, 0x6F	; 111
    3ee2:	32 e1       	ldi	r19, 0x12	; 18
    3ee4:	43 e0       	ldi	r20, 0x03	; 3
    3ee6:	5a e3       	ldi	r21, 0x3A	; 58
    3ee8:	6e a5       	ldd	r22, Y+46	; 0x2e
    3eea:	7f a5       	ldd	r23, Y+47	; 0x2f
    3eec:	88 a9       	ldd	r24, Y+48	; 0x30
    3eee:	99 a9       	ldd	r25, Y+49	; 0x31
    3ef0:	0e 94 2e 74 	call	0xe85c	; 0xe85c <__mulsf3>
    3ef4:	dc 01       	movw	r26, r24
    3ef6:	cb 01       	movw	r24, r22
    3ef8:	8e a7       	std	Y+46, r24	; 0x2e
    3efa:	9f a7       	std	Y+47, r25	; 0x2f
    3efc:	a8 ab       	std	Y+48, r26	; 0x30
    3efe:	b9 ab       	std	Y+49, r27	; 0x31
    3f00:	20 e0       	ldi	r18, 0x00	; 0
    3f02:	30 e0       	ldi	r19, 0x00	; 0
    3f04:	40 e8       	ldi	r20, 0x80	; 128
    3f06:	5f e3       	ldi	r21, 0x3F	; 63
    3f08:	6e a5       	ldd	r22, Y+46	; 0x2e
    3f0a:	7f a5       	ldd	r23, Y+47	; 0x2f
    3f0c:	88 a9       	ldd	r24, Y+48	; 0x30
    3f0e:	99 a9       	ldd	r25, Y+49	; 0x31
    3f10:	0e 94 5e 72 	call	0xe4bc	; 0xe4bc <__addsf3>
    3f14:	dc 01       	movw	r26, r24
    3f16:	cb 01       	movw	r24, r22
    3f18:	8e a7       	std	Y+46, r24	; 0x2e
    3f1a:	9f a7       	std	Y+47, r25	; 0x2f
    3f1c:	a8 ab       	std	Y+48, r26	; 0x30
    3f1e:	b9 ab       	std	Y+49, r27	; 0x31
    3f20:	8e a5       	ldd	r24, Y+46	; 0x2e
    3f22:	9f a5       	ldd	r25, Y+47	; 0x2f
    3f24:	a8 a9       	ldd	r26, Y+48	; 0x30
    3f26:	b9 a9       	ldd	r27, Y+49	; 0x31
    3f28:	06 e6       	ldi	r16, 0x66	; 102
    3f2a:	14 e4       	ldi	r17, 0x44	; 68
    3f2c:	20 e0       	ldi	r18, 0x00	; 0
    3f2e:	44 e0       	ldi	r20, 0x04	; 4
    3f30:	bc 01       	movw	r22, r24
    3f32:	cd 01       	movw	r24, r26
    3f34:	0e 94 37 75 	call	0xea6e	; 0xea6e <dtostrf>
    3f38:	10 92 6b 44 	sts	0x446B, r1	; 0x80446b <_ZL9g_tempStr+0x5>
    3f3c:	6d e3       	ldi	r22, 0x3D	; 61
    3f3e:	72 e4       	ldi	r23, 0x42	; 66
    3f40:	86 e6       	ldi	r24, 0x66	; 102
    3f42:	94 e4       	ldi	r25, 0x44	; 68
    3f44:	0e 94 7b 57 	call	0xaef6	; 0xaef6 <_Z16lb_broadcast_strPKcS0_>
    3f48:	80 e0       	ldi	r24, 0x00	; 0
    3f4a:	90 e0       	ldi	r25, 0x00	; 0
    3f4c:	0e 94 94 35 	call	0x6b28	; 0x6b28 <ds3231_get_epoch>
    3f50:	dc 01       	movw	r26, r24
    3f52:	cb 01       	movw	r24, r22
    3f54:	bc 01       	movw	r22, r24
    3f56:	cd 01       	movw	r24, r26
    3f58:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <set_system_time>
    3f5c:	44 c0       	rjmp	.+136    	; 0x3fe6 <_Z17handleLinkBusMsgsv+0x1060>
    3f5e:	0e 94 86 2a 	call	0x550c	; 0x550c <_Z12temperatureCv>
    3f62:	09 2e       	mov	r0, r25
    3f64:	00 0c       	add	r0, r0
    3f66:	aa 0b       	sbc	r26, r26
    3f68:	bb 0b       	sbc	r27, r27
    3f6a:	bc 01       	movw	r22, r24
    3f6c:	cd 01       	movw	r24, r26
    3f6e:	0e 94 79 73 	call	0xe6f2	; 0xe6f2 <__floatsisf>
    3f72:	dc 01       	movw	r26, r24
    3f74:	cb 01       	movw	r24, r22
    3f76:	06 e6       	ldi	r16, 0x66	; 102
    3f78:	14 e4       	ldi	r17, 0x44	; 68
    3f7a:	21 e0       	ldi	r18, 0x01	; 1
    3f7c:	44 e0       	ldi	r20, 0x04	; 4
    3f7e:	bc 01       	movw	r22, r24
    3f80:	cd 01       	movw	r24, r26
    3f82:	0e 94 37 75 	call	0xea6e	; 0xea6e <dtostrf>
    3f86:	10 92 6b 44 	sts	0x446B, r1	; 0x80446b <_ZL9g_tempStr+0x5>
    3f8a:	62 e4       	ldi	r22, 0x42	; 66
    3f8c:	72 e4       	ldi	r23, 0x42	; 66
    3f8e:	86 e6       	ldi	r24, 0x66	; 102
    3f90:	94 e4       	ldi	r25, 0x44	; 68
    3f92:	0e 94 7b 57 	call	0xaef6	; 0xaef6 <_Z16lb_broadcast_strPKcS0_>
    3f96:	27 c0       	rjmp	.+78     	; 0x3fe6 <_Z17handleLinkBusMsgsv+0x1060>
    3f98:	47 e4       	ldi	r20, 0x47	; 71
    3f9a:	52 e4       	ldi	r21, 0x42	; 66
    3f9c:	6c e4       	ldi	r22, 0x4C	; 76
    3f9e:	72 e4       	ldi	r23, 0x42	; 66
    3fa0:	83 e0       	ldi	r24, 0x03	; 3
    3fa2:	0e 94 2c 57 	call	0xae58	; 0xae58 <_Z11lb_send_msg13LBMessageTypePKcPc>
    3fa6:	1f c0       	rjmp	.+62     	; 0x3fe6 <_Z17handleLinkBusMsgsv+0x1060>
    3fa8:	19 82       	std	Y+1, r1	; 0x01
    3faa:	80 e5       	ldi	r24, 0x50	; 80
    3fac:	92 e4       	ldi	r25, 0x42	; 66
    3fae:	0e 94 cf 56 	call	0xad9e	; 0xad9e <_Z12lb_send_textPc>
    3fb2:	19 c0       	rjmp	.+50     	; 0x3fe6 <_Z17handleLinkBusMsgsv+0x1060>
    3fb4:	00 00       	nop
    3fb6:	17 c0       	rjmp	.+46     	; 0x3fe6 <_Z17handleLinkBusMsgsv+0x1060>
    3fb8:	00 00       	nop
    3fba:	15 c0       	rjmp	.+42     	; 0x3fe6 <_Z17handleLinkBusMsgsv+0x1060>
    3fbc:	00 00       	nop
    3fbe:	13 c0       	rjmp	.+38     	; 0x3fe6 <_Z17handleLinkBusMsgsv+0x1060>
    3fc0:	00 00       	nop
    3fc2:	11 c0       	rjmp	.+34     	; 0x3fe6 <_Z17handleLinkBusMsgsv+0x1060>
    3fc4:	00 00       	nop
    3fc6:	0f c0       	rjmp	.+30     	; 0x3fe6 <_Z17handleLinkBusMsgsv+0x1060>
    3fc8:	00 00       	nop
    3fca:	0d c0       	rjmp	.+26     	; 0x3fe6 <_Z17handleLinkBusMsgsv+0x1060>
    3fcc:	00 00       	nop
    3fce:	0b c0       	rjmp	.+22     	; 0x3fe6 <_Z17handleLinkBusMsgsv+0x1060>
    3fd0:	00 00       	nop
    3fd2:	09 c0       	rjmp	.+18     	; 0x3fe6 <_Z17handleLinkBusMsgsv+0x1060>
    3fd4:	00 00       	nop
    3fd6:	07 c0       	rjmp	.+14     	; 0x3fe6 <_Z17handleLinkBusMsgsv+0x1060>
    3fd8:	00 00       	nop
    3fda:	05 c0       	rjmp	.+10     	; 0x3fe6 <_Z17handleLinkBusMsgsv+0x1060>
    3fdc:	00 00       	nop
    3fde:	03 c0       	rjmp	.+6      	; 0x3fe6 <_Z17handleLinkBusMsgsv+0x1060>
    3fe0:	00 00       	nop
    3fe2:	01 c0       	rjmp	.+2      	; 0x3fe6 <_Z17handleLinkBusMsgsv+0x1060>
    3fe4:	00 00       	nop
    3fe6:	89 81       	ldd	r24, Y+1	; 0x01
    3fe8:	88 23       	and	r24, r24
    3fea:	21 f0       	breq	.+8      	; 0x3ff4 <_Z17handleLinkBusMsgsv+0x106e>
    3fec:	86 e5       	ldi	r24, 0x56	; 86
    3fee:	92 e4       	ldi	r25, 0x42	; 66
    3ff0:	0e 94 cf 56 	call	0xad9e	; 0xad9e <_Z12lb_send_textPc>
    3ff4:	8c 85       	ldd	r24, Y+12	; 0x0c
    3ff6:	9d 85       	ldd	r25, Y+13	; 0x0d
    3ff8:	fc 01       	movw	r30, r24
    3ffa:	11 82       	std	Z+1, r1	; 0x01
    3ffc:	12 82       	std	Z+2, r1	; 0x02
    3ffe:	0c 94 ce 17 	jmp	0x2f9c	; 0x2f9c <_Z17handleLinkBusMsgsv+0x16>
    4002:	00 00       	nop
    4004:	e7 96       	adiw	r28, 0x37	; 55
    4006:	cd bf       	out	0x3d, r28	; 61
    4008:	de bf       	out	0x3e, r29	; 62
    400a:	df 91       	pop	r29
    400c:	cf 91       	pop	r28
    400e:	1f 91       	pop	r17
    4010:	0f 91       	pop	r16
    4012:	08 95       	ret

00004014 <_Z19updateAntennaStatusv>:
    4014:	cf 93       	push	r28
    4016:	df 93       	push	r29
    4018:	1f 92       	push	r1
    401a:	cd b7       	in	r28, 0x3d	; 61
    401c:	de b7       	in	r29, 0x3e	; 62
    401e:	0e 94 0c 24 	call	0x4818	; 0x4818 <_Z18antennaIsConnectedv>
    4022:	89 83       	std	Y+1, r24	; 0x01
    4024:	99 81       	ldd	r25, Y+1	; 0x01
    4026:	81 e0       	ldi	r24, 0x01	; 1
    4028:	89 27       	eor	r24, r25
    402a:	88 23       	and	r24, r24
    402c:	91 f0       	breq	.+36     	; 0x4052 <_Z19updateAntennaStatusv+0x3e>
    402e:	90 91 9c 44 	lds	r25, 0x449C	; 0x80449c <g_antenna_connect_state>
    4032:	81 e0       	ldi	r24, 0x01	; 1
    4034:	91 30       	cpi	r25, 0x01	; 1
    4036:	09 f4       	brne	.+2      	; 0x403a <_Z19updateAntennaStatusv+0x26>
    4038:	80 e0       	ldi	r24, 0x00	; 0
    403a:	88 23       	and	r24, r24
    403c:	31 f0       	breq	.+12     	; 0x404a <_Z19updateAntennaStatusv+0x36>
    403e:	81 e0       	ldi	r24, 0x01	; 1
    4040:	80 93 9c 44 	sts	0x449C, r24	; 0x80449c <g_antenna_connect_state>
    4044:	81 e0       	ldi	r24, 0x01	; 1
    4046:	80 93 06 40 	sts	0x4006, r24	; 0x804006 <_ZL28g_antenna_connection_changed>
    404a:	83 e0       	ldi	r24, 0x03	; 3
    404c:	80 93 23 40 	sts	0x4023, r24	; 0x804023 <_ZZ19updateAntennaStatusvE16antennaReadCount>
    4050:	27 c0       	rjmp	.+78     	; 0x40a0 <_Z19updateAntennaStatusv+0x8c>
    4052:	90 91 9c 44 	lds	r25, 0x449C	; 0x80449c <g_antenna_connect_state>
    4056:	81 e0       	ldi	r24, 0x01	; 1
    4058:	92 30       	cpi	r25, 0x02	; 2
    405a:	09 f4       	brne	.+2      	; 0x405e <_Z19updateAntennaStatusv+0x4a>
    405c:	80 e0       	ldi	r24, 0x00	; 0
    405e:	88 23       	and	r24, r24
    4060:	f9 f0       	breq	.+62     	; 0x40a0 <_Z19updateAntennaStatusv+0x8c>
    4062:	80 91 6d 45 	lds	r24, 0x456D	; 0x80456d <_ZZ19updateAntennaStatusvE26lastAntennaConnectionState>
    4066:	99 81       	ldd	r25, Y+1	; 0x01
    4068:	98 17       	cp	r25, r24
    406a:	b9 f4       	brne	.+46     	; 0x409a <_Z19updateAntennaStatusv+0x86>
    406c:	80 91 23 40 	lds	r24, 0x4023	; 0x804023 <_ZZ19updateAntennaStatusvE16antennaReadCount>
    4070:	88 23       	and	r24, r24
    4072:	b1 f0       	breq	.+44     	; 0x40a0 <_Z19updateAntennaStatusv+0x8c>
    4074:	80 91 23 40 	lds	r24, 0x4023	; 0x804023 <_ZZ19updateAntennaStatusvE16antennaReadCount>
    4078:	81 50       	subi	r24, 0x01	; 1
    407a:	80 93 23 40 	sts	0x4023, r24	; 0x804023 <_ZZ19updateAntennaStatusvE16antennaReadCount>
    407e:	80 91 23 40 	lds	r24, 0x4023	; 0x804023 <_ZZ19updateAntennaStatusvE16antennaReadCount>
    4082:	88 23       	and	r24, r24
    4084:	69 f4       	brne	.+26     	; 0x40a0 <_Z19updateAntennaStatusv+0x8c>
    4086:	82 e0       	ldi	r24, 0x02	; 2
    4088:	80 93 9c 44 	sts	0x449C, r24	; 0x80449c <g_antenna_connect_state>
    408c:	81 e0       	ldi	r24, 0x01	; 1
    408e:	80 93 06 40 	sts	0x4006, r24	; 0x804006 <_ZL28g_antenna_connection_changed>
    4092:	83 e0       	ldi	r24, 0x03	; 3
    4094:	80 93 23 40 	sts	0x4023, r24	; 0x804023 <_ZZ19updateAntennaStatusvE16antennaReadCount>
    4098:	03 c0       	rjmp	.+6      	; 0x40a0 <_Z19updateAntennaStatusv+0x8c>
    409a:	83 e0       	ldi	r24, 0x03	; 3
    409c:	80 93 23 40 	sts	0x4023, r24	; 0x804023 <_ZZ19updateAntennaStatusvE16antennaReadCount>
    40a0:	89 81       	ldd	r24, Y+1	; 0x01
    40a2:	80 93 6d 45 	sts	0x456D, r24	; 0x80456d <_ZZ19updateAntennaStatusvE26lastAntennaConnectionState>
    40a6:	00 00       	nop
    40a8:	0f 90       	pop	r0
    40aa:	df 91       	pop	r29
    40ac:	cf 91       	pop	r28
    40ae:	08 95       	ret

000040b0 <_Z12eventEnabledv>:
    40b0:	cf 93       	push	r28
    40b2:	df 93       	push	r29
    40b4:	cd b7       	in	r28, 0x3d	; 61
    40b6:	de b7       	in	r29, 0x3e	; 62
    40b8:	28 97       	sbiw	r28, 0x08	; 8
    40ba:	cd bf       	out	0x3d, r28	; 61
    40bc:	de bf       	out	0x3e, r29	; 62
    40be:	20 91 18 45 	lds	r18, 0x4518	; 0x804518 <g_event_start_epoch>
    40c2:	30 91 19 45 	lds	r19, 0x4519	; 0x804519 <g_event_start_epoch+0x1>
    40c6:	40 91 1a 45 	lds	r20, 0x451A	; 0x80451a <g_event_start_epoch+0x2>
    40ca:	50 91 1b 45 	lds	r21, 0x451B	; 0x80451b <g_event_start_epoch+0x3>
    40ce:	80 91 1c 45 	lds	r24, 0x451C	; 0x80451c <g_event_finish_epoch>
    40d2:	90 91 1d 45 	lds	r25, 0x451D	; 0x80451d <g_event_finish_epoch+0x1>
    40d6:	a0 91 1e 45 	lds	r26, 0x451E	; 0x80451e <g_event_finish_epoch+0x2>
    40da:	b0 91 1f 45 	lds	r27, 0x451F	; 0x80451f <g_event_finish_epoch+0x3>
    40de:	bc 01       	movw	r22, r24
    40e0:	cd 01       	movw	r24, r26
    40e2:	0e 94 04 72 	call	0xe408	; 0xe408 <_Z7timeDifmm>
    40e6:	dc 01       	movw	r26, r24
    40e8:	cb 01       	movw	r24, r22
    40ea:	89 83       	std	Y+1, r24	; 0x01
    40ec:	9a 83       	std	Y+2, r25	; 0x02
    40ee:	ab 83       	std	Y+3, r26	; 0x03
    40f0:	bc 83       	std	Y+4, r27	; 0x04
    40f2:	80 e0       	ldi	r24, 0x00	; 0
    40f4:	90 e0       	ldi	r25, 0x00	; 0
    40f6:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <time>
    40fa:	dc 01       	movw	r26, r24
    40fc:	cb 01       	movw	r24, r22
    40fe:	8d 83       	std	Y+5, r24	; 0x05
    4100:	9e 83       	std	Y+6, r25	; 0x06
    4102:	af 83       	std	Y+7, r26	; 0x07
    4104:	b8 87       	std	Y+8, r27	; 0x08
    4106:	20 91 1c 45 	lds	r18, 0x451C	; 0x80451c <g_event_finish_epoch>
    410a:	30 91 1d 45 	lds	r19, 0x451D	; 0x80451d <g_event_finish_epoch+0x1>
    410e:	40 91 1e 45 	lds	r20, 0x451E	; 0x80451e <g_event_finish_epoch+0x2>
    4112:	50 91 1f 45 	lds	r21, 0x451F	; 0x80451f <g_event_finish_epoch+0x3>
    4116:	8d 81       	ldd	r24, Y+5	; 0x05
    4118:	9e 81       	ldd	r25, Y+6	; 0x06
    411a:	af 81       	ldd	r26, Y+7	; 0x07
    411c:	b8 85       	ldd	r27, Y+8	; 0x08
    411e:	bc 01       	movw	r22, r24
    4120:	cd 01       	movw	r24, r26
    4122:	0e 94 04 72 	call	0xe408	; 0xe408 <_Z7timeDifmm>
    4126:	dc 01       	movw	r26, r24
    4128:	cb 01       	movw	r24, r22
    412a:	89 83       	std	Y+1, r24	; 0x01
    412c:	9a 83       	std	Y+2, r25	; 0x02
    412e:	ab 83       	std	Y+3, r26	; 0x03
    4130:	bc 83       	std	Y+4, r27	; 0x04
    4132:	10 92 27 45 	sts	0x4527, r1	; 0x804527 <_ZL17g_go_to_sleep_now>
    4136:	89 81       	ldd	r24, Y+1	; 0x01
    4138:	9a 81       	ldd	r25, Y+2	; 0x02
    413a:	ab 81       	ldd	r26, Y+3	; 0x03
    413c:	bc 81       	ldd	r27, Y+4	; 0x04
    413e:	bb 23       	and	r27, r27
    4140:	9c f0       	brlt	.+38     	; 0x4168 <_Z12eventEnabledv+0xb8>
    4142:	83 e0       	ldi	r24, 0x03	; 3
    4144:	80 93 13 40 	sts	0x4013, r24	; 0x804013 <_ZL11g_sleepType>
    4148:	8f ef       	ldi	r24, 0xFF	; 255
    414a:	9f ef       	ldi	r25, 0xFF	; 255
    414c:	dc 01       	movw	r26, r24
    414e:	80 93 29 45 	sts	0x4529, r24	; 0x804529 <_ZL17g_time_to_wake_up>
    4152:	90 93 2a 45 	sts	0x452A, r25	; 0x80452a <_ZL17g_time_to_wake_up+0x1>
    4156:	a0 93 2b 45 	sts	0x452B, r26	; 0x80452b <_ZL17g_time_to_wake_up+0x2>
    415a:	b0 93 2c 45 	sts	0x452C, r27	; 0x80452c <_ZL17g_time_to_wake_up+0x3>
    415e:	82 e0       	ldi	r24, 0x02	; 2
    4160:	80 93 a6 44 	sts	0x44A6, r24	; 0x8044a6 <_ZL19g_wifi_enable_delay>
    4164:	80 e0       	ldi	r24, 0x00	; 0
    4166:	50 c0       	rjmp	.+160    	; 0x4208 <_Z12eventEnabledv+0x158>
    4168:	81 e0       	ldi	r24, 0x01	; 1
    416a:	0e 94 e5 6c 	call	0xd9ca	; 0xd9ca <_Z18powerToTransmitterb>
    416e:	20 91 18 45 	lds	r18, 0x4518	; 0x804518 <g_event_start_epoch>
    4172:	30 91 19 45 	lds	r19, 0x4519	; 0x804519 <g_event_start_epoch+0x1>
    4176:	40 91 1a 45 	lds	r20, 0x451A	; 0x80451a <g_event_start_epoch+0x2>
    417a:	50 91 1b 45 	lds	r21, 0x451B	; 0x80451b <g_event_start_epoch+0x3>
    417e:	8d 81       	ldd	r24, Y+5	; 0x05
    4180:	9e 81       	ldd	r25, Y+6	; 0x06
    4182:	af 81       	ldd	r26, Y+7	; 0x07
    4184:	b8 85       	ldd	r27, Y+8	; 0x08
    4186:	bc 01       	movw	r22, r24
    4188:	cd 01       	movw	r24, r26
    418a:	0e 94 04 72 	call	0xe408	; 0xe408 <_Z7timeDifmm>
    418e:	dc 01       	movw	r26, r24
    4190:	cb 01       	movw	r24, r22
    4192:	89 83       	std	Y+1, r24	; 0x01
    4194:	9a 83       	std	Y+2, r25	; 0x02
    4196:	ab 83       	std	Y+3, r26	; 0x03
    4198:	bc 83       	std	Y+4, r27	; 0x04
    419a:	89 81       	ldd	r24, Y+1	; 0x01
    419c:	9a 81       	ldd	r25, Y+2	; 0x02
    419e:	ab 81       	ldd	r26, Y+3	; 0x03
    41a0:	bc 81       	ldd	r27, Y+4	; 0x04
    41a2:	82 3e       	cpi	r24, 0xE2	; 226
    41a4:	9f 4f       	sbci	r25, 0xFF	; 255
    41a6:	af 4f       	sbci	r26, 0xFF	; 255
    41a8:	bf 4f       	sbci	r27, 0xFF	; 255
    41aa:	bc f0       	brlt	.+46     	; 0x41da <_Z12eventEnabledv+0x12a>
    41ac:	10 92 13 40 	sts	0x4013, r1	; 0x804013 <_ZL11g_sleepType>
    41b0:	80 91 18 45 	lds	r24, 0x4518	; 0x804518 <g_event_start_epoch>
    41b4:	90 91 19 45 	lds	r25, 0x4519	; 0x804519 <g_event_start_epoch+0x1>
    41b8:	a0 91 1a 45 	lds	r26, 0x451A	; 0x80451a <g_event_start_epoch+0x2>
    41bc:	b0 91 1b 45 	lds	r27, 0x451B	; 0x80451b <g_event_start_epoch+0x3>
    41c0:	05 97       	sbiw	r24, 0x05	; 5
    41c2:	a1 09       	sbc	r26, r1
    41c4:	b1 09       	sbc	r27, r1
    41c6:	80 93 29 45 	sts	0x4529, r24	; 0x804529 <_ZL17g_time_to_wake_up>
    41ca:	90 93 2a 45 	sts	0x452A, r25	; 0x80452a <_ZL17g_time_to_wake_up+0x1>
    41ce:	a0 93 2b 45 	sts	0x452B, r26	; 0x80452b <_ZL17g_time_to_wake_up+0x2>
    41d2:	b0 93 2c 45 	sts	0x452C, r27	; 0x80452c <_ZL17g_time_to_wake_up+0x3>
    41d6:	81 e0       	ldi	r24, 0x01	; 1
    41d8:	17 c0       	rjmp	.+46     	; 0x4208 <_Z12eventEnabledv+0x158>
    41da:	80 91 18 45 	lds	r24, 0x4518	; 0x804518 <g_event_start_epoch>
    41de:	90 91 19 45 	lds	r25, 0x4519	; 0x804519 <g_event_start_epoch+0x1>
    41e2:	a0 91 1a 45 	lds	r26, 0x451A	; 0x80451a <g_event_start_epoch+0x2>
    41e6:	b0 91 1b 45 	lds	r27, 0x451B	; 0x80451b <g_event_start_epoch+0x3>
    41ea:	05 97       	sbiw	r24, 0x05	; 5
    41ec:	a1 09       	sbc	r26, r1
    41ee:	b1 09       	sbc	r27, r1
    41f0:	80 93 29 45 	sts	0x4529, r24	; 0x804529 <_ZL17g_time_to_wake_up>
    41f4:	90 93 2a 45 	sts	0x452A, r25	; 0x80452a <_ZL17g_time_to_wake_up+0x1>
    41f8:	a0 93 2b 45 	sts	0x452B, r26	; 0x80452b <_ZL17g_time_to_wake_up+0x2>
    41fc:	b0 93 2c 45 	sts	0x452C, r27	; 0x80452c <_ZL17g_time_to_wake_up+0x3>
    4200:	81 e0       	ldi	r24, 0x01	; 1
    4202:	80 93 13 40 	sts	0x4013, r24	; 0x804013 <_ZL11g_sleepType>
    4206:	81 e0       	ldi	r24, 0x01	; 1
    4208:	28 96       	adiw	r28, 0x08	; 8
    420a:	cd bf       	out	0x3d, r28	; 61
    420c:	de bf       	out	0x3e, r29	; 62
    420e:	df 91       	pop	r29
    4210:	cf 91       	pop	r28
    4212:	08 95       	ret

00004214 <_Z8wdt_init7WDReset>:
    4214:	cf 93       	push	r28
    4216:	df 93       	push	r29
    4218:	1f 92       	push	r1
    421a:	cd b7       	in	r28, 0x3d	; 61
    421c:	de b7       	in	r29, 0x3e	; 62
    421e:	89 83       	std	Y+1, r24	; 0x01
    4220:	00 00       	nop
    4222:	0f 90       	pop	r0
    4224:	df 91       	pop	r29
    4226:	cf 91       	pop	r28
    4228:	08 95       	ret

0000422a <_Z13throttleValueh>:
    422a:	cf 93       	push	r28
    422c:	df 93       	push	r29
    422e:	cd b7       	in	r28, 0x3d	; 61
    4230:	de b7       	in	r29, 0x3e	; 62
    4232:	2a 97       	sbiw	r28, 0x0a	; 10
    4234:	cd bf       	out	0x3d, r28	; 61
    4236:	de bf       	out	0x3e, r29	; 62
    4238:	8a 87       	std	Y+10, r24	; 0x0a
    423a:	8a 85       	ldd	r24, Y+10	; 0x0a
    423c:	89 83       	std	Y+1, r24	; 0x01
    423e:	85 e0       	ldi	r24, 0x05	; 5
    4240:	90 e0       	ldi	r25, 0x00	; 0
    4242:	8a 83       	std	Y+2, r24	; 0x02
    4244:	9b 83       	std	Y+3, r25	; 0x03
    4246:	84 e1       	ldi	r24, 0x14	; 20
    4248:	90 e0       	ldi	r25, 0x00	; 0
    424a:	8c 83       	std	Y+4, r24	; 0x04
    424c:	9d 83       	std	Y+5, r25	; 0x05
    424e:	89 81       	ldd	r24, Y+1	; 0x01
    4250:	28 2f       	mov	r18, r24
    4252:	88 0f       	add	r24, r24
    4254:	33 0b       	sbc	r19, r19
    4256:	8c 81       	ldd	r24, Y+4	; 0x04
    4258:	9d 81       	ldd	r25, Y+5	; 0x05
    425a:	82 17       	cp	r24, r18
    425c:	93 07       	cpc	r25, r19
    425e:	5c f0       	brlt	.+22     	; 0x4276 <_Z13throttleValueh+0x4c>
    4260:	89 81       	ldd	r24, Y+1	; 0x01
    4262:	08 2e       	mov	r0, r24
    4264:	00 0c       	add	r0, r0
    4266:	99 0b       	sbc	r25, r25
    4268:	2a 81       	ldd	r18, Y+2	; 0x02
    426a:	3b 81       	ldd	r19, Y+3	; 0x03
    426c:	82 17       	cp	r24, r18
    426e:	93 07       	cpc	r25, r19
    4270:	24 f4       	brge	.+8      	; 0x427a <_Z13throttleValueh+0x50>
    4272:	c9 01       	movw	r24, r18
    4274:	02 c0       	rjmp	.+4      	; 0x427a <_Z13throttleValueh+0x50>
    4276:	8c 81       	ldd	r24, Y+4	; 0x04
    4278:	9d 81       	ldd	r25, Y+5	; 0x05
    427a:	8a 87       	std	Y+10, r24	; 0x0a
    427c:	8a 85       	ldd	r24, Y+10	; 0x0a
    427e:	28 2f       	mov	r18, r24
    4280:	30 e0       	ldi	r19, 0x00	; 0
    4282:	40 e0       	ldi	r20, 0x00	; 0
    4284:	50 e0       	ldi	r21, 0x00	; 0
    4286:	88 ed       	ldi	r24, 0xD8	; 216
    4288:	9d e0       	ldi	r25, 0x0D	; 13
    428a:	a0 e0       	ldi	r26, 0x00	; 0
    428c:	b0 e0       	ldi	r27, 0x00	; 0
    428e:	bc 01       	movw	r22, r24
    4290:	cd 01       	movw	r24, r26
    4292:	0e 94 f5 74 	call	0xe9ea	; 0xe9ea <__divmodsi4>
    4296:	da 01       	movw	r26, r20
    4298:	c9 01       	movw	r24, r18
    429a:	2a e0       	ldi	r18, 0x0A	; 10
    429c:	30 e0       	ldi	r19, 0x00	; 0
    429e:	40 e0       	ldi	r20, 0x00	; 0
    42a0:	50 e0       	ldi	r21, 0x00	; 0
    42a2:	bc 01       	movw	r22, r24
    42a4:	cd 01       	movw	r24, r26
    42a6:	0e 94 f5 74 	call	0xe9ea	; 0xe9ea <__divmodsi4>
    42aa:	da 01       	movw	r26, r20
    42ac:	c9 01       	movw	r24, r18
    42ae:	bc 01       	movw	r22, r24
    42b0:	cd 01       	movw	r24, r26
    42b2:	0e 94 79 73 	call	0xe6f2	; 0xe6f2 <__floatsisf>
    42b6:	dc 01       	movw	r26, r24
    42b8:	cb 01       	movw	r24, r22
    42ba:	8e 83       	std	Y+6, r24	; 0x06
    42bc:	9f 83       	std	Y+7, r25	; 0x07
    42be:	a8 87       	std	Y+8, r26	; 0x08
    42c0:	b9 87       	std	Y+9, r27	; 0x09
    42c2:	6e 81       	ldd	r22, Y+6	; 0x06
    42c4:	7f 81       	ldd	r23, Y+7	; 0x07
    42c6:	88 85       	ldd	r24, Y+8	; 0x08
    42c8:	99 85       	ldd	r25, Y+9	; 0x09
    42ca:	0e 94 48 73 	call	0xe690	; 0xe690 <__fixunssfsi>
    42ce:	dc 01       	movw	r26, r24
    42d0:	cb 01       	movw	r24, r22
    42d2:	2a 96       	adiw	r28, 0x0a	; 10
    42d4:	cd bf       	out	0x3d, r28	; 61
    42d6:	de bf       	out	0x3e, r29	; 62
    42d8:	df 91       	pop	r29
    42da:	cf 91       	pop	r28
    42dc:	08 95       	ret

000042de <_Z11launchEventP2SC>:
    42de:	cf 93       	push	r28
    42e0:	df 93       	push	r29
    42e2:	00 d0       	rcall	.+0      	; 0x42e4 <_Z11launchEventP2SC+0x6>
    42e4:	1f 92       	push	r1
    42e6:	cd b7       	in	r28, 0x3d	; 61
    42e8:	de b7       	in	r29, 0x3e	; 62
    42ea:	8a 83       	std	Y+2, r24	; 0x02
    42ec:	9b 83       	std	Y+3, r25	; 0x03
    42ee:	80 e0       	ldi	r24, 0x00	; 0
    42f0:	90 e0       	ldi	r25, 0x00	; 0
    42f2:	0e 94 94 35 	call	0x6b28	; 0x6b28 <ds3231_get_epoch>
    42f6:	dc 01       	movw	r26, r24
    42f8:	cb 01       	movw	r24, r22
    42fa:	bc 01       	movw	r22, r24
    42fc:	cd 01       	movw	r24, r26
    42fe:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <set_system_time>
    4302:	8a 81       	ldd	r24, Y+2	; 0x02
    4304:	9b 81       	ldd	r25, Y+3	; 0x03
    4306:	0e 94 a4 21 	call	0x4348	; 0x4348 <_Z33activateEventUsingCurrentSettingsP2SC>
    430a:	89 83       	std	Y+1, r24	; 0x01
    430c:	8a 81       	ldd	r24, Y+2	; 0x02
    430e:	9b 81       	ldd	r25, Y+3	; 0x03
    4310:	fc 01       	movw	r30, r24
    4312:	80 81       	ld	r24, Z
    4314:	88 23       	and	r24, r24
    4316:	31 f0       	breq	.+12     	; 0x4324 <_Z11launchEventP2SC+0x46>
    4318:	8a 81       	ldd	r24, Y+2	; 0x02
    431a:	9b 81       	ldd	r25, Y+3	; 0x03
    431c:	fc 01       	movw	r30, r24
    431e:	80 81       	ld	r24, Z
    4320:	80 93 99 44 	sts	0x4499, r24	; 0x804499 <_ZL18g_last_status_code>
    4324:	89 81       	ldd	r24, Y+1	; 0x01
    4326:	88 23       	and	r24, r24
    4328:	21 f0       	breq	.+8      	; 0x4332 <_Z11launchEventP2SC+0x54>
    432a:	89 81       	ldd	r24, Y+1	; 0x01
    432c:	80 93 98 44 	sts	0x4498, r24	; 0x804498 <_ZL17g_last_error_code>
    4330:	04 c0       	rjmp	.+8      	; 0x433a <_Z11launchEventP2SC+0x5c>
    4332:	0e 94 58 20 	call	0x40b0	; 0x40b0 <_Z12eventEnabledv>
    4336:	80 93 20 45 	sts	0x4520, r24	; 0x804520 <g_event_enabled>
    433a:	89 81       	ldd	r24, Y+1	; 0x01
    433c:	23 96       	adiw	r28, 0x03	; 3
    433e:	cd bf       	out	0x3d, r28	; 61
    4340:	de bf       	out	0x3e, r29	; 62
    4342:	df 91       	pop	r29
    4344:	cf 91       	pop	r28
    4346:	08 95       	ret

00004348 <_Z33activateEventUsingCurrentSettingsP2SC>:
    4348:	cf 93       	push	r28
    434a:	df 93       	push	r29
    434c:	cd b7       	in	r28, 0x3d	; 61
    434e:	de b7       	in	r29, 0x3e	; 62
    4350:	63 97       	sbiw	r28, 0x13	; 19
    4352:	cd bf       	out	0x3d, r28	; 61
    4354:	de bf       	out	0x3e, r29	; 62
    4356:	8a 8b       	std	Y+18, r24	; 0x12
    4358:	9b 8b       	std	Y+19, r25	; 0x13
    435a:	80 91 18 45 	lds	r24, 0x4518	; 0x804518 <g_event_start_epoch>
    435e:	90 91 19 45 	lds	r25, 0x4519	; 0x804519 <g_event_start_epoch+0x1>
    4362:	a0 91 1a 45 	lds	r26, 0x451A	; 0x80451a <g_event_start_epoch+0x2>
    4366:	b0 91 1b 45 	lds	r27, 0x451B	; 0x80451b <g_event_start_epoch+0x3>
    436a:	21 e0       	ldi	r18, 0x01	; 1
    436c:	89 2b       	or	r24, r25
    436e:	8a 2b       	or	r24, r26
    4370:	8b 2b       	or	r24, r27
    4372:	09 f0       	breq	.+2      	; 0x4376 <_Z33activateEventUsingCurrentSettingsP2SC+0x2e>
    4374:	20 e0       	ldi	r18, 0x00	; 0
    4376:	22 23       	and	r18, r18
    4378:	11 f0       	breq	.+4      	; 0x437e <_Z33activateEventUsingCurrentSettingsP2SC+0x36>
    437a:	8c ec       	ldi	r24, 0xCC	; 204
    437c:	fa c1       	rjmp	.+1012   	; 0x4772 <_Z33activateEventUsingCurrentSettingsP2SC+0x42a>
    437e:	20 91 18 45 	lds	r18, 0x4518	; 0x804518 <g_event_start_epoch>
    4382:	30 91 19 45 	lds	r19, 0x4519	; 0x804519 <g_event_start_epoch+0x1>
    4386:	40 91 1a 45 	lds	r20, 0x451A	; 0x80451a <g_event_start_epoch+0x2>
    438a:	50 91 1b 45 	lds	r21, 0x451B	; 0x80451b <g_event_start_epoch+0x3>
    438e:	80 91 1c 45 	lds	r24, 0x451C	; 0x80451c <g_event_finish_epoch>
    4392:	90 91 1d 45 	lds	r25, 0x451D	; 0x80451d <g_event_finish_epoch+0x1>
    4396:	a0 91 1e 45 	lds	r26, 0x451E	; 0x80451e <g_event_finish_epoch+0x2>
    439a:	b0 91 1f 45 	lds	r27, 0x451F	; 0x80451f <g_event_finish_epoch+0x3>
    439e:	61 e0       	ldi	r22, 0x01	; 1
    43a0:	28 17       	cp	r18, r24
    43a2:	39 07       	cpc	r19, r25
    43a4:	4a 07       	cpc	r20, r26
    43a6:	5b 07       	cpc	r21, r27
    43a8:	08 f4       	brcc	.+2      	; 0x43ac <_Z33activateEventUsingCurrentSettingsP2SC+0x64>
    43aa:	60 e0       	ldi	r22, 0x00	; 0
    43ac:	66 23       	and	r22, r22
    43ae:	11 f0       	breq	.+4      	; 0x43b4 <_Z33activateEventUsingCurrentSettingsP2SC+0x6c>
    43b0:	8d ec       	ldi	r24, 0xCD	; 205
    43b2:	df c1       	rjmp	.+958    	; 0x4772 <_Z33activateEventUsingCurrentSettingsP2SC+0x42a>
    43b4:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    43b8:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    43bc:	21 e0       	ldi	r18, 0x01	; 1
    43be:	89 2b       	or	r24, r25
    43c0:	09 f0       	breq	.+2      	; 0x43c4 <_Z33activateEventUsingCurrentSettingsP2SC+0x7c>
    43c2:	20 e0       	ldi	r18, 0x00	; 0
    43c4:	22 23       	and	r18, r18
    43c6:	11 f0       	breq	.+4      	; 0x43cc <_Z33activateEventUsingCurrentSettingsP2SC+0x84>
    43c8:	8b ec       	ldi	r24, 0xCB	; 203
    43ca:	d3 c1       	rjmp	.+934    	; 0x4772 <_Z33activateEventUsingCurrentSettingsP2SC+0x42a>
    43cc:	20 91 0f 40 	lds	r18, 0x400F	; 0x80400f <g_off_air_seconds>
    43d0:	30 91 10 40 	lds	r19, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    43d4:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    43d8:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    43dc:	28 0f       	add	r18, r24
    43de:	39 1f       	adc	r19, r25
    43e0:	80 91 16 45 	lds	r24, 0x4516	; 0x804516 <g_intra_cycle_delay_time>
    43e4:	90 91 17 45 	lds	r25, 0x4517	; 0x804517 <g_intra_cycle_delay_time+0x1>
    43e8:	41 e0       	ldi	r20, 0x01	; 1
    43ea:	28 17       	cp	r18, r24
    43ec:	39 07       	cpc	r19, r25
    43ee:	0c f0       	brlt	.+2      	; 0x43f2 <_Z33activateEventUsingCurrentSettingsP2SC+0xaa>
    43f0:	40 e0       	ldi	r20, 0x00	; 0
    43f2:	44 23       	and	r20, r20
    43f4:	11 f0       	breq	.+4      	; 0x43fa <_Z33activateEventUsingCurrentSettingsP2SC+0xb2>
    43f6:	8a ec       	ldi	r24, 0xCA	; 202
    43f8:	bc c1       	rjmp	.+888    	; 0x4772 <_Z33activateEventUsingCurrentSettingsP2SC+0x42a>
    43fa:	80 91 ab 44 	lds	r24, 0x44AB	; 0x8044ab <g_messages_text>
    43fe:	88 23       	and	r24, r24
    4400:	11 f4       	brne	.+4      	; 0x4406 <_Z33activateEventUsingCurrentSettingsP2SC+0xbe>
    4402:	89 ec       	ldi	r24, 0xC9	; 201
    4404:	b6 c1       	rjmp	.+876    	; 0x4772 <_Z33activateEventUsingCurrentSettingsP2SC+0x42a>
    4406:	90 91 0c 40 	lds	r25, 0x400C	; 0x80400c <g_pattern_codespeed>
    440a:	81 e0       	ldi	r24, 0x01	; 1
    440c:	99 23       	and	r25, r25
    440e:	09 f0       	breq	.+2      	; 0x4412 <_Z33activateEventUsingCurrentSettingsP2SC+0xca>
    4410:	80 e0       	ldi	r24, 0x00	; 0
    4412:	88 23       	and	r24, r24
    4414:	11 f0       	breq	.+4      	; 0x441a <_Z33activateEventUsingCurrentSettingsP2SC+0xd2>
    4416:	88 ec       	ldi	r24, 0xC8	; 200
    4418:	ac c1       	rjmp	.+856    	; 0x4772 <_Z33activateEventUsingCurrentSettingsP2SC+0x42a>
    441a:	80 91 ff 44 	lds	r24, 0x44FF	; 0x8044ff <g_messages_text+0x54>
    441e:	88 23       	and	r24, r24
    4420:	c1 f0       	breq	.+48     	; 0x4452 <_Z33activateEventUsingCurrentSettingsP2SC+0x10a>
    4422:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    4426:	88 23       	and	r24, r24
    4428:	31 f0       	breq	.+12     	; 0x4436 <_Z33activateEventUsingCurrentSettingsP2SC+0xee>
    442a:	80 91 11 40 	lds	r24, 0x4011	; 0x804011 <g_ID_period_seconds>
    442e:	90 91 12 40 	lds	r25, 0x4012	; 0x804012 <g_ID_period_seconds+0x1>
    4432:	89 2b       	or	r24, r25
    4434:	11 f4       	brne	.+4      	; 0x443a <_Z33activateEventUsingCurrentSettingsP2SC+0xf2>
    4436:	81 e0       	ldi	r24, 0x01	; 1
    4438:	01 c0       	rjmp	.+2      	; 0x443c <_Z33activateEventUsingCurrentSettingsP2SC+0xf4>
    443a:	80 e0       	ldi	r24, 0x00	; 0
    443c:	88 23       	and	r24, r24
    443e:	11 f0       	breq	.+4      	; 0x4444 <_Z33activateEventUsingCurrentSettingsP2SC+0xfc>
    4440:	87 ec       	ldi	r24, 0xC7	; 199
    4442:	97 c1       	rjmp	.+814    	; 0x4772 <_Z33activateEventUsingCurrentSettingsP2SC+0x42a>
    4444:	0e 94 5b 28 	call	0x50b6	; 0x50b6 <_Z15timeNeededForIDv>
    4448:	80 93 14 45 	sts	0x4514, r24	; 0x804514 <g_time_needed_for_ID>
    444c:	90 93 15 45 	sts	0x4515, r25	; 0x804515 <g_time_needed_for_ID+0x1>
    4450:	04 c0       	rjmp	.+8      	; 0x445a <_Z33activateEventUsingCurrentSettingsP2SC+0x112>
    4452:	10 92 14 45 	sts	0x4514, r1	; 0x804514 <g_time_needed_for_ID>
    4456:	10 92 15 45 	sts	0x4515, r1	; 0x804515 <g_time_needed_for_ID+0x1>
    445a:	80 e0       	ldi	r24, 0x00	; 0
    445c:	90 e0       	ldi	r25, 0x00	; 0
    445e:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <time>
    4462:	dc 01       	movw	r26, r24
    4464:	cb 01       	movw	r24, r22
    4466:	8a 83       	std	Y+2, r24	; 0x02
    4468:	9b 83       	std	Y+3, r25	; 0x03
    446a:	ac 83       	std	Y+4, r26	; 0x04
    446c:	bd 83       	std	Y+5, r27	; 0x05
    446e:	20 91 1c 45 	lds	r18, 0x451C	; 0x80451c <g_event_finish_epoch>
    4472:	30 91 1d 45 	lds	r19, 0x451D	; 0x80451d <g_event_finish_epoch+0x1>
    4476:	40 91 1e 45 	lds	r20, 0x451E	; 0x80451e <g_event_finish_epoch+0x2>
    447a:	50 91 1f 45 	lds	r21, 0x451F	; 0x80451f <g_event_finish_epoch+0x3>
    447e:	61 e0       	ldi	r22, 0x01	; 1
    4480:	8a 81       	ldd	r24, Y+2	; 0x02
    4482:	9b 81       	ldd	r25, Y+3	; 0x03
    4484:	ac 81       	ldd	r26, Y+4	; 0x04
    4486:	bd 81       	ldd	r27, Y+5	; 0x05
    4488:	28 17       	cp	r18, r24
    448a:	39 07       	cpc	r19, r25
    448c:	4a 07       	cpc	r20, r26
    448e:	5b 07       	cpc	r21, r27
    4490:	08 f0       	brcs	.+2      	; 0x4494 <_Z33activateEventUsingCurrentSettingsP2SC+0x14c>
    4492:	60 e0       	ldi	r22, 0x00	; 0
    4494:	66 23       	and	r22, r22
    4496:	59 f0       	breq	.+22     	; 0x44ae <_Z33activateEventUsingCurrentSettingsP2SC+0x166>
    4498:	8a 89       	ldd	r24, Y+18	; 0x12
    449a:	9b 89       	ldd	r25, Y+19	; 0x13
    449c:	89 2b       	or	r24, r25
    449e:	09 f4       	brne	.+2      	; 0x44a2 <_Z33activateEventUsingCurrentSettingsP2SC+0x15a>
    44a0:	67 c1       	rjmp	.+718    	; 0x4770 <_Z33activateEventUsingCurrentSettingsP2SC+0x428>
    44a2:	8a 89       	ldd	r24, Y+18	; 0x12
    44a4:	9b 89       	ldd	r25, Y+19	; 0x13
    44a6:	2a ef       	ldi	r18, 0xFA	; 250
    44a8:	fc 01       	movw	r30, r24
    44aa:	20 83       	st	Z, r18
    44ac:	61 c1       	rjmp	.+706    	; 0x4770 <_Z33activateEventUsingCurrentSettingsP2SC+0x428>
    44ae:	20 91 18 45 	lds	r18, 0x4518	; 0x804518 <g_event_start_epoch>
    44b2:	30 91 19 45 	lds	r19, 0x4519	; 0x804519 <g_event_start_epoch+0x1>
    44b6:	40 91 1a 45 	lds	r20, 0x451A	; 0x80451a <g_event_start_epoch+0x2>
    44ba:	50 91 1b 45 	lds	r21, 0x451B	; 0x80451b <g_event_start_epoch+0x3>
    44be:	8a 81       	ldd	r24, Y+2	; 0x02
    44c0:	9b 81       	ldd	r25, Y+3	; 0x03
    44c2:	ac 81       	ldd	r26, Y+4	; 0x04
    44c4:	bd 81       	ldd	r27, Y+5	; 0x05
    44c6:	bc 01       	movw	r22, r24
    44c8:	cd 01       	movw	r24, r26
    44ca:	0e 94 04 72 	call	0xe408	; 0xe408 <_Z7timeDifmm>
    44ce:	dc 01       	movw	r26, r24
    44d0:	cb 01       	movw	r24, r22
    44d2:	8e 83       	std	Y+6, r24	; 0x06
    44d4:	9f 83       	std	Y+7, r25	; 0x07
    44d6:	a8 87       	std	Y+8, r26	; 0x08
    44d8:	b9 87       	std	Y+9, r27	; 0x09
    44da:	8e 81       	ldd	r24, Y+6	; 0x06
    44dc:	9f 81       	ldd	r25, Y+7	; 0x07
    44de:	a8 85       	ldd	r26, Y+8	; 0x08
    44e0:	b9 85       	ldd	r27, Y+9	; 0x09
    44e2:	bb 23       	and	r27, r27
    44e4:	0c f4       	brge	.+2      	; 0x44e8 <_Z33activateEventUsingCurrentSettingsP2SC+0x1a0>
    44e6:	36 c1       	rjmp	.+620    	; 0x4754 <_Z33activateEventUsingCurrentSettingsP2SC+0x40c>
    44e8:	19 82       	std	Y+1, r1	; 0x01
    44ea:	20 91 0d 40 	lds	r18, 0x400D	; 0x80400d <g_on_air_seconds>
    44ee:	30 91 0e 40 	lds	r19, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    44f2:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_off_air_seconds>
    44f6:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    44fa:	82 0f       	add	r24, r18
    44fc:	93 1f       	adc	r25, r19
    44fe:	8a 87       	std	Y+10, r24	; 0x0a
    4500:	9b 87       	std	Y+11, r25	; 0x0b
    4502:	8a 85       	ldd	r24, Y+10	; 0x0a
    4504:	9b 85       	ldd	r25, Y+11	; 0x0b
    4506:	9c 01       	movw	r18, r24
    4508:	99 0f       	add	r25, r25
    450a:	44 0b       	sbc	r20, r20
    450c:	55 0b       	sbc	r21, r21
    450e:	8e 81       	ldd	r24, Y+6	; 0x06
    4510:	9f 81       	ldd	r25, Y+7	; 0x07
    4512:	a8 85       	ldd	r26, Y+8	; 0x08
    4514:	b9 85       	ldd	r27, Y+9	; 0x09
    4516:	bc 01       	movw	r22, r24
    4518:	cd 01       	movw	r24, r26
    451a:	0e 94 f5 74 	call	0xe9ea	; 0xe9ea <__divmodsi4>
    451e:	dc 01       	movw	r26, r24
    4520:	cb 01       	movw	r24, r22
    4522:	8c 87       	std	Y+12, r24	; 0x0c
    4524:	9d 87       	std	Y+13, r25	; 0x0d
    4526:	20 91 16 45 	lds	r18, 0x4516	; 0x804516 <g_intra_cycle_delay_time>
    452a:	30 91 17 45 	lds	r19, 0x4517	; 0x804517 <g_intra_cycle_delay_time+0x1>
    452e:	8c 85       	ldd	r24, Y+12	; 0x0c
    4530:	9d 85       	ldd	r25, Y+13	; 0x0d
    4532:	a9 01       	movw	r20, r18
    4534:	48 1b       	sub	r20, r24
    4536:	59 0b       	sbc	r21, r25
    4538:	ca 01       	movw	r24, r20
    453a:	8e 87       	std	Y+14, r24	; 0x0e
    453c:	9f 87       	std	Y+15, r25	; 0x0f
    453e:	8e 85       	ldd	r24, Y+14	; 0x0e
    4540:	9f 85       	ldd	r25, Y+15	; 0x0f
    4542:	18 16       	cp	r1, r24
    4544:	19 06       	cpc	r1, r25
    4546:	0c f4       	brge	.+2      	; 0x454a <_Z33activateEventUsingCurrentSettingsP2SC+0x202>
    4548:	a8 c0       	rjmp	.+336    	; 0x469a <_Z33activateEventUsingCurrentSettingsP2SC+0x352>
    454a:	8e 85       	ldd	r24, Y+14	; 0x0e
    454c:	9f 85       	ldd	r25, Y+15	; 0x0f
    454e:	22 27       	eor	r18, r18
    4550:	33 27       	eor	r19, r19
    4552:	28 1b       	sub	r18, r24
    4554:	39 0b       	sbc	r19, r25
    4556:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    455a:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    455e:	41 e0       	ldi	r20, 0x01	; 1
    4560:	28 17       	cp	r18, r24
    4562:	39 07       	cpc	r19, r25
    4564:	0c f4       	brge	.+2      	; 0x4568 <_Z33activateEventUsingCurrentSettingsP2SC+0x220>
    4566:	40 e0       	ldi	r20, 0x00	; 0
    4568:	44 23       	and	r20, r20
    456a:	09 f4       	brne	.+2      	; 0x456e <_Z33activateEventUsingCurrentSettingsP2SC+0x226>
    456c:	41 c0       	rjmp	.+130    	; 0x45f0 <_Z33activateEventUsingCurrentSettingsP2SC+0x2a8>
    456e:	2a 85       	ldd	r18, Y+10	; 0x0a
    4570:	3b 85       	ldd	r19, Y+11	; 0x0b
    4572:	8e 85       	ldd	r24, Y+14	; 0x0e
    4574:	9f 85       	ldd	r25, Y+15	; 0x0f
    4576:	82 0f       	add	r24, r18
    4578:	93 1f       	adc	r25, r19
    457a:	91 95       	neg	r25
    457c:	81 95       	neg	r24
    457e:	91 09       	sbc	r25, r1
    4580:	09 2e       	mov	r0, r25
    4582:	00 0c       	add	r0, r0
    4584:	aa 0b       	sbc	r26, r26
    4586:	bb 0b       	sbc	r27, r27
    4588:	80 93 9f 44 	sts	0x449F, r24	; 0x80449f <_ZL12g_on_the_air>
    458c:	90 93 a0 44 	sts	0x44A0, r25	; 0x8044a0 <_ZL12g_on_the_air+0x1>
    4590:	a0 93 a1 44 	sts	0x44A1, r26	; 0x8044a1 <_ZL12g_on_the_air+0x2>
    4594:	b0 93 a2 44 	sts	0x44A2, r27	; 0x8044a2 <_ZL12g_on_the_air+0x3>
    4598:	8a 89       	ldd	r24, Y+18	; 0x12
    459a:	9b 89       	ldd	r25, Y+19	; 0x13
    459c:	89 2b       	or	r24, r25
    459e:	29 f0       	breq	.+10     	; 0x45aa <_Z33activateEventUsingCurrentSettingsP2SC+0x262>
    45a0:	8a 89       	ldd	r24, Y+18	; 0x12
    45a2:	9b 89       	ldd	r25, Y+19	; 0x13
    45a4:	2e ef       	ldi	r18, 0xFE	; 254
    45a6:	fc 01       	movw	r30, r24
    45a8:	20 83       	st	Z, r18
    45aa:	90 91 20 45 	lds	r25, 0x4520	; 0x804520 <g_event_enabled>
    45ae:	81 e0       	ldi	r24, 0x01	; 1
    45b0:	89 27       	eor	r24, r25
    45b2:	88 23       	and	r24, r24
    45b4:	09 f4       	brne	.+2      	; 0x45b8 <_Z33activateEventUsingCurrentSettingsP2SC+0x270>
    45b6:	a6 c0       	rjmp	.+332    	; 0x4704 <_Z33activateEventUsingCurrentSettingsP2SC+0x3bc>
    45b8:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    45bc:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    45c0:	9c 01       	movw	r18, r24
    45c2:	80 91 9f 44 	lds	r24, 0x449F	; 0x80449f <_ZL12g_on_the_air>
    45c6:	90 91 a0 44 	lds	r25, 0x44A0	; 0x8044a0 <_ZL12g_on_the_air+0x1>
    45ca:	a0 91 a1 44 	lds	r26, 0x44A1	; 0x8044a1 <_ZL12g_on_the_air+0x2>
    45ce:	b0 91 a2 44 	lds	r27, 0x44A2	; 0x8044a2 <_ZL12g_on_the_air+0x3>
    45d2:	28 1b       	sub	r18, r24
    45d4:	39 0b       	sbc	r19, r25
    45d6:	80 91 14 45 	lds	r24, 0x4514	; 0x804514 <g_time_needed_for_ID>
    45da:	90 91 15 45 	lds	r25, 0x4515	; 0x804515 <g_time_needed_for_ID+0x1>
    45de:	a9 01       	movw	r20, r18
    45e0:	48 1b       	sub	r20, r24
    45e2:	59 0b       	sbc	r21, r25
    45e4:	ca 01       	movw	r24, r20
    45e6:	80 93 a3 44 	sts	0x44A3, r24	; 0x8044a3 <_ZL26g_sendID_seconds_countdown>
    45ea:	90 93 a4 44 	sts	0x44A4, r25	; 0x8044a4 <_ZL26g_sendID_seconds_countdown+0x1>
    45ee:	8a c0       	rjmp	.+276    	; 0x4704 <_Z33activateEventUsingCurrentSettingsP2SC+0x3bc>
    45f0:	20 91 0d 40 	lds	r18, 0x400D	; 0x80400d <g_on_air_seconds>
    45f4:	30 91 0e 40 	lds	r19, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    45f8:	8e 85       	ldd	r24, Y+14	; 0x0e
    45fa:	9f 85       	ldd	r25, Y+15	; 0x0f
    45fc:	82 0f       	add	r24, r18
    45fe:	93 1f       	adc	r25, r19
    4600:	09 2e       	mov	r0, r25
    4602:	00 0c       	add	r0, r0
    4604:	aa 0b       	sbc	r26, r26
    4606:	bb 0b       	sbc	r27, r27
    4608:	80 93 9f 44 	sts	0x449F, r24	; 0x80449f <_ZL12g_on_the_air>
    460c:	90 93 a0 44 	sts	0x44A0, r25	; 0x8044a0 <_ZL12g_on_the_air+0x1>
    4610:	a0 93 a1 44 	sts	0x44A1, r26	; 0x8044a1 <_ZL12g_on_the_air+0x2>
    4614:	b0 93 a2 44 	sts	0x44A2, r27	; 0x8044a2 <_ZL12g_on_the_air+0x3>
    4618:	81 e0       	ldi	r24, 0x01	; 1
    461a:	89 83       	std	Y+1, r24	; 0x01
    461c:	8a 89       	ldd	r24, Y+18	; 0x12
    461e:	9b 89       	ldd	r25, Y+19	; 0x13
    4620:	89 2b       	or	r24, r25
    4622:	29 f0       	breq	.+10     	; 0x462e <_Z33activateEventUsingCurrentSettingsP2SC+0x2e6>
    4624:	8a 89       	ldd	r24, Y+18	; 0x12
    4626:	9b 89       	ldd	r25, Y+19	; 0x13
    4628:	2d ef       	ldi	r18, 0xFD	; 253
    462a:	fc 01       	movw	r30, r24
    462c:	20 83       	st	Z, r18
    462e:	90 91 20 45 	lds	r25, 0x4520	; 0x804520 <g_event_enabled>
    4632:	81 e0       	ldi	r24, 0x01	; 1
    4634:	89 27       	eor	r24, r25
    4636:	88 23       	and	r24, r24
    4638:	09 f4       	brne	.+2      	; 0x463c <_Z33activateEventUsingCurrentSettingsP2SC+0x2f4>
    463a:	64 c0       	rjmp	.+200    	; 0x4704 <_Z33activateEventUsingCurrentSettingsP2SC+0x3bc>
    463c:	80 91 14 45 	lds	r24, 0x4514	; 0x804514 <g_time_needed_for_ID>
    4640:	90 91 15 45 	lds	r25, 0x4515	; 0x804515 <g_time_needed_for_ID+0x1>
    4644:	9c 01       	movw	r18, r24
    4646:	40 e0       	ldi	r20, 0x00	; 0
    4648:	50 e0       	ldi	r21, 0x00	; 0
    464a:	80 91 9f 44 	lds	r24, 0x449F	; 0x80449f <_ZL12g_on_the_air>
    464e:	90 91 a0 44 	lds	r25, 0x44A0	; 0x8044a0 <_ZL12g_on_the_air+0x1>
    4652:	a0 91 a1 44 	lds	r26, 0x44A1	; 0x8044a1 <_ZL12g_on_the_air+0x2>
    4656:	b0 91 a2 44 	lds	r27, 0x44A2	; 0x8044a2 <_ZL12g_on_the_air+0x3>
    465a:	61 e0       	ldi	r22, 0x01	; 1
    465c:	28 17       	cp	r18, r24
    465e:	39 07       	cpc	r19, r25
    4660:	4a 07       	cpc	r20, r26
    4662:	5b 07       	cpc	r21, r27
    4664:	0c f0       	brlt	.+2      	; 0x4668 <_Z33activateEventUsingCurrentSettingsP2SC+0x320>
    4666:	60 e0       	ldi	r22, 0x00	; 0
    4668:	66 23       	and	r22, r22
    466a:	09 f4       	brne	.+2      	; 0x466e <_Z33activateEventUsingCurrentSettingsP2SC+0x326>
    466c:	4b c0       	rjmp	.+150    	; 0x4704 <_Z33activateEventUsingCurrentSettingsP2SC+0x3bc>
    466e:	80 91 9f 44 	lds	r24, 0x449F	; 0x80449f <_ZL12g_on_the_air>
    4672:	90 91 a0 44 	lds	r25, 0x44A0	; 0x8044a0 <_ZL12g_on_the_air+0x1>
    4676:	a0 91 a1 44 	lds	r26, 0x44A1	; 0x8044a1 <_ZL12g_on_the_air+0x2>
    467a:	b0 91 a2 44 	lds	r27, 0x44A2	; 0x8044a2 <_ZL12g_on_the_air+0x3>
    467e:	9c 01       	movw	r18, r24
    4680:	80 91 14 45 	lds	r24, 0x4514	; 0x804514 <g_time_needed_for_ID>
    4684:	90 91 15 45 	lds	r25, 0x4515	; 0x804515 <g_time_needed_for_ID+0x1>
    4688:	a9 01       	movw	r20, r18
    468a:	48 1b       	sub	r20, r24
    468c:	59 0b       	sbc	r21, r25
    468e:	ca 01       	movw	r24, r20
    4690:	80 93 a3 44 	sts	0x44A3, r24	; 0x8044a3 <_ZL26g_sendID_seconds_countdown>
    4694:	90 93 a4 44 	sts	0x44A4, r25	; 0x8044a4 <_ZL26g_sendID_seconds_countdown+0x1>
    4698:	35 c0       	rjmp	.+106    	; 0x4704 <_Z33activateEventUsingCurrentSettingsP2SC+0x3bc>
    469a:	8e 85       	ldd	r24, Y+14	; 0x0e
    469c:	9f 85       	ldd	r25, Y+15	; 0x0f
    469e:	91 95       	neg	r25
    46a0:	81 95       	neg	r24
    46a2:	91 09       	sbc	r25, r1
    46a4:	09 2e       	mov	r0, r25
    46a6:	00 0c       	add	r0, r0
    46a8:	aa 0b       	sbc	r26, r26
    46aa:	bb 0b       	sbc	r27, r27
    46ac:	80 93 9f 44 	sts	0x449F, r24	; 0x80449f <_ZL12g_on_the_air>
    46b0:	90 93 a0 44 	sts	0x44A0, r25	; 0x8044a0 <_ZL12g_on_the_air+0x1>
    46b4:	a0 93 a1 44 	sts	0x44A1, r26	; 0x8044a1 <_ZL12g_on_the_air+0x2>
    46b8:	b0 93 a2 44 	sts	0x44A2, r27	; 0x8044a2 <_ZL12g_on_the_air+0x3>
    46bc:	8a 89       	ldd	r24, Y+18	; 0x12
    46be:	9b 89       	ldd	r25, Y+19	; 0x13
    46c0:	89 2b       	or	r24, r25
    46c2:	29 f0       	breq	.+10     	; 0x46ce <_Z33activateEventUsingCurrentSettingsP2SC+0x386>
    46c4:	8a 89       	ldd	r24, Y+18	; 0x12
    46c6:	9b 89       	ldd	r25, Y+19	; 0x13
    46c8:	2e ef       	ldi	r18, 0xFE	; 254
    46ca:	fc 01       	movw	r30, r24
    46cc:	20 83       	st	Z, r18
    46ce:	90 91 20 45 	lds	r25, 0x4520	; 0x804520 <g_event_enabled>
    46d2:	81 e0       	ldi	r24, 0x01	; 1
    46d4:	89 27       	eor	r24, r25
    46d6:	88 23       	and	r24, r24
    46d8:	a9 f0       	breq	.+42     	; 0x4704 <_Z33activateEventUsingCurrentSettingsP2SC+0x3bc>
    46da:	20 91 0d 40 	lds	r18, 0x400D	; 0x80400d <g_on_air_seconds>
    46de:	30 91 0e 40 	lds	r19, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    46e2:	8e 85       	ldd	r24, Y+14	; 0x0e
    46e4:	9f 85       	ldd	r25, Y+15	; 0x0f
    46e6:	82 0f       	add	r24, r18
    46e8:	93 1f       	adc	r25, r19
    46ea:	9c 01       	movw	r18, r24
    46ec:	80 91 14 45 	lds	r24, 0x4514	; 0x804514 <g_time_needed_for_ID>
    46f0:	90 91 15 45 	lds	r25, 0x4515	; 0x804515 <g_time_needed_for_ID+0x1>
    46f4:	a9 01       	movw	r20, r18
    46f6:	48 1b       	sub	r20, r24
    46f8:	59 0b       	sbc	r21, r25
    46fa:	ca 01       	movw	r24, r20
    46fc:	80 93 a3 44 	sts	0x44A3, r24	; 0x8044a3 <_ZL26g_sendID_seconds_countdown>
    4700:	90 93 a4 44 	sts	0x44A4, r25	; 0x8044a4 <_ZL26g_sendID_seconds_countdown+0x1>
    4704:	89 81       	ldd	r24, Y+1	; 0x01
    4706:	88 23       	and	r24, r24
    4708:	e1 f0       	breq	.+56     	; 0x4742 <_Z33activateEventUsingCurrentSettingsP2SC+0x3fa>
    470a:	80 91 20 45 	lds	r24, 0x4520	; 0x804520 <g_event_enabled>
    470e:	88 8b       	std	Y+16, r24	; 0x10
    4710:	10 92 20 45 	sts	0x4520, r1	; 0x804520 <g_event_enabled>
    4714:	81 e0       	ldi	r24, 0x01	; 1
    4716:	89 8b       	std	Y+17, r24	; 0x11
    4718:	ce 01       	movw	r24, r28
    471a:	41 96       	adiw	r24, 0x11	; 17
    471c:	40 e0       	ldi	r20, 0x00	; 0
    471e:	50 e0       	ldi	r21, 0x00	; 0
    4720:	bc 01       	movw	r22, r24
    4722:	8b ea       	ldi	r24, 0xAB	; 171
    4724:	94 e4       	ldi	r25, 0x44	; 68
    4726:	0e 94 b5 57 	call	0xaf6a	; 0xaf6a <_Z9makeMorsePcPbS0_>
    472a:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    472e:	0e 94 15 21 	call	0x422a	; 0x422a <_Z13throttleValueh>
    4732:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    4736:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    473a:	88 89       	ldd	r24, Y+16	; 0x10
    473c:	80 93 20 45 	sts	0x4520, r24	; 0x804520 <g_event_enabled>
    4740:	03 c0       	rjmp	.+6      	; 0x4748 <_Z33activateEventUsingCurrentSettingsP2SC+0x400>
    4742:	80 e0       	ldi	r24, 0x00	; 0
    4744:	0e 94 8c 6d 	call	0xdb18	; 0xdb18 <_Z14keyTransmitterb>
    4748:	81 e0       	ldi	r24, 0x01	; 1
    474a:	80 93 22 45 	sts	0x4522, r24	; 0x804522 <g_event_commenced>
    474e:	0e 94 0c 24 	call	0x4818	; 0x4818 <_Z18antennaIsConnectedv>
    4752:	0c c0       	rjmp	.+24     	; 0x476c <_Z33activateEventUsingCurrentSettingsP2SC+0x424>
    4754:	8a 89       	ldd	r24, Y+18	; 0x12
    4756:	9b 89       	ldd	r25, Y+19	; 0x13
    4758:	89 2b       	or	r24, r25
    475a:	29 f0       	breq	.+10     	; 0x4766 <_Z33activateEventUsingCurrentSettingsP2SC+0x41e>
    475c:	8a 89       	ldd	r24, Y+18	; 0x12
    475e:	9b 89       	ldd	r25, Y+19	; 0x13
    4760:	2f ef       	ldi	r18, 0xFF	; 255
    4762:	fc 01       	movw	r30, r24
    4764:	20 83       	st	Z, r18
    4766:	80 e0       	ldi	r24, 0x00	; 0
    4768:	0e 94 8c 6d 	call	0xdb18	; 0xdb18 <_Z14keyTransmitterb>
    476c:	10 92 24 45 	sts	0x4524, r1	; 0x804524 <g_waiting_for_next_event>
    4770:	80 e0       	ldi	r24, 0x00	; 0
    4772:	63 96       	adiw	r28, 0x13	; 19
    4774:	cd bf       	out	0x3d, r28	; 61
    4776:	de bf       	out	0x3e, r29	; 62
    4778:	df 91       	pop	r29
    477a:	cf 91       	pop	r28
    477c:	08 95       	ret

0000477e <_Z8rtc_initv>:
    477e:	cf 93       	push	r28
    4780:	df 93       	push	r29
    4782:	1f 92       	push	r1
    4784:	cd b7       	in	r28, 0x3d	; 61
    4786:	de b7       	in	r29, 0x3e	; 62
    4788:	81 e0       	ldi	r24, 0x01	; 1
    478a:	89 83       	std	Y+1, r24	; 0x01
    478c:	60 e0       	ldi	r22, 0x00	; 0
    478e:	70 e0       	ldi	r23, 0x00	; 0
    4790:	cb 01       	movw	r24, r22
    4792:	0e 94 5e 6a 	call	0xd4bc	; 0xd4bc <util_delay_ms>
    4796:	68 ee       	ldi	r22, 0xE8	; 232
    4798:	73 e0       	ldi	r23, 0x03	; 3
    479a:	80 e0       	ldi	r24, 0x00	; 0
    479c:	90 e0       	ldi	r25, 0x00	; 0
    479e:	0e 94 5e 6a 	call	0xd4bc	; 0xd4bc <util_delay_ms>
    47a2:	88 23       	and	r24, r24
    47a4:	29 f0       	breq	.+10     	; 0x47b0 <_Z8rtc_initv+0x32>
    47a6:	89 81       	ldd	r24, Y+1	; 0x01
    47a8:	88 23       	and	r24, r24
    47aa:	11 f0       	breq	.+4      	; 0x47b0 <_Z8rtc_initv+0x32>
    47ac:	81 e0       	ldi	r24, 0x01	; 1
    47ae:	01 c0       	rjmp	.+2      	; 0x47b2 <_Z8rtc_initv+0x34>
    47b0:	80 e0       	ldi	r24, 0x00	; 0
    47b2:	88 23       	and	r24, r24
    47b4:	21 f0       	breq	.+8      	; 0x47be <_Z8rtc_initv+0x40>
    47b6:	0e 94 86 35 	call	0x6b0c	; 0x6b0c <ds3231_init>
    47ba:	89 83       	std	Y+1, r24	; 0x01
    47bc:	ec cf       	rjmp	.-40     	; 0x4796 <_Z8rtc_initv+0x18>
    47be:	99 81       	ldd	r25, Y+1	; 0x01
    47c0:	81 e0       	ldi	r24, 0x01	; 1
    47c2:	89 27       	eor	r24, r25
    47c4:	88 23       	and	r24, r24
    47c6:	09 f1       	breq	.+66     	; 0x480a <_Z8rtc_initv+0x8c>
    47c8:	81 e0       	ldi	r24, 0x01	; 1
    47ca:	89 83       	std	Y+1, r24	; 0x01
    47cc:	60 e0       	ldi	r22, 0x00	; 0
    47ce:	70 e0       	ldi	r23, 0x00	; 0
    47d0:	cb 01       	movw	r24, r22
    47d2:	0e 94 5e 6a 	call	0xd4bc	; 0xd4bc <util_delay_ms>
    47d6:	68 ee       	ldi	r22, 0xE8	; 232
    47d8:	73 e0       	ldi	r23, 0x03	; 3
    47da:	80 e0       	ldi	r24, 0x00	; 0
    47dc:	90 e0       	ldi	r25, 0x00	; 0
    47de:	0e 94 5e 6a 	call	0xd4bc	; 0xd4bc <util_delay_ms>
    47e2:	88 23       	and	r24, r24
    47e4:	29 f0       	breq	.+10     	; 0x47f0 <_Z8rtc_initv+0x72>
    47e6:	89 81       	ldd	r24, Y+1	; 0x01
    47e8:	88 23       	and	r24, r24
    47ea:	11 f0       	breq	.+4      	; 0x47f0 <_Z8rtc_initv+0x72>
    47ec:	81 e0       	ldi	r24, 0x01	; 1
    47ee:	01 c0       	rjmp	.+2      	; 0x47f2 <_Z8rtc_initv+0x74>
    47f0:	80 e0       	ldi	r24, 0x00	; 0
    47f2:	88 23       	and	r24, r24
    47f4:	29 f0       	breq	.+10     	; 0x4800 <_Z8rtc_initv+0x82>
    47f6:	81 e0       	ldi	r24, 0x01	; 1
    47f8:	0e 94 92 38 	call	0x7124	; 0x7124 <ds3231_1s_sqw>
    47fc:	89 83       	std	Y+1, r24	; 0x01
    47fe:	eb cf       	rjmp	.-42     	; 0x47d6 <_Z8rtc_initv+0x58>
    4800:	89 81       	ldd	r24, Y+1	; 0x01
    4802:	88 23       	and	r24, r24
    4804:	21 f0       	breq	.+8      	; 0x480e <_Z8rtc_initv+0x90>
    4806:	8c ef       	ldi	r24, 0xFC	; 252
    4808:	03 c0       	rjmp	.+6      	; 0x4810 <_Z8rtc_initv+0x92>
    480a:	8c ef       	ldi	r24, 0xFC	; 252
    480c:	01 c0       	rjmp	.+2      	; 0x4810 <_Z8rtc_initv+0x92>
    480e:	80 e0       	ldi	r24, 0x00	; 0
    4810:	0f 90       	pop	r0
    4812:	df 91       	pop	r29
    4814:	cf 91       	pop	r28
    4816:	08 95       	ret

00004818 <_Z18antennaIsConnectedv>:
    4818:	cf 93       	push	r28
    481a:	df 93       	push	r29
    481c:	1f 92       	push	r1
    481e:	cd b7       	in	r28, 0x3d	; 61
    4820:	de b7       	in	r29, 0x3e	; 62
    4822:	81 e0       	ldi	r24, 0x01	; 1
    4824:	0e 94 ef 0a 	call	0x15de	; 0x15de <PORTD_get_pin_level>
    4828:	89 83       	std	Y+1, r24	; 0x01
    482a:	80 91 a9 44 	lds	r24, 0x44A9	; 0x8044a9 <_ZL16g_hardware_error>
    482e:	90 91 aa 44 	lds	r25, 0x44AA	; 0x8044aa <_ZL16g_hardware_error+0x1>
    4832:	21 e0       	ldi	r18, 0x01	; 1
    4834:	89 2b       	or	r24, r25
    4836:	09 f0       	breq	.+2      	; 0x483a <_Z18antennaIsConnectedv+0x22>
    4838:	20 e0       	ldi	r18, 0x00	; 0
    483a:	22 23       	and	r18, r18
    483c:	71 f0       	breq	.+28     	; 0x485a <_Z18antennaIsConnectedv+0x42>
    483e:	89 81       	ldd	r24, Y+1	; 0x01
    4840:	88 23       	and	r24, r24
    4842:	31 f0       	breq	.+12     	; 0x4850 <_Z18antennaIsConnectedv+0x38>
    4844:	62 e0       	ldi	r22, 0x02	; 2
    4846:	82 e4       	ldi	r24, 0x42	; 66
    4848:	95 e4       	ldi	r25, 0x45	; 69
    484a:	0e 94 93 4f 	call	0x9f26	; 0x9f26 <_ZN4leds5blinkE7Blink_t>
    484e:	05 c0       	rjmp	.+10     	; 0x485a <_Z18antennaIsConnectedv+0x42>
    4850:	68 e0       	ldi	r22, 0x08	; 8
    4852:	82 e4       	ldi	r24, 0x42	; 66
    4854:	95 e4       	ldi	r25, 0x45	; 69
    4856:	0e 94 93 4f 	call	0x9f26	; 0x9f26 <_ZN4leds5blinkE7Blink_t>
    485a:	99 81       	ldd	r25, Y+1	; 0x01
    485c:	81 e0       	ldi	r24, 0x01	; 1
    485e:	89 27       	eor	r24, r25
    4860:	0f 90       	pop	r0
    4862:	df 91       	pop	r29
    4864:	cf 91       	pop	r28
    4866:	08 95       	ret

00004868 <_Z12suspendEventv>:
    4868:	cf 93       	push	r28
    486a:	df 93       	push	r29
    486c:	1f 92       	push	r1
    486e:	cd b7       	in	r28, 0x3d	; 61
    4870:	de b7       	in	r29, 0x3e	; 62
    4872:	10 92 20 45 	sts	0x4520, r1	; 0x804520 <g_event_enabled>
    4876:	10 92 9f 44 	sts	0x449F, r1	; 0x80449f <_ZL12g_on_the_air>
    487a:	10 92 a0 44 	sts	0x44A0, r1	; 0x8044a0 <_ZL12g_on_the_air+0x1>
    487e:	10 92 a1 44 	sts	0x44A1, r1	; 0x8044a1 <_ZL12g_on_the_air+0x2>
    4882:	10 92 a2 44 	sts	0x44A2, r1	; 0x8044a2 <_ZL12g_on_the_air+0x3>
    4886:	10 92 22 45 	sts	0x4522, r1	; 0x804522 <g_event_commenced>
    488a:	80 e0       	ldi	r24, 0x00	; 0
    488c:	0e 94 8c 6d 	call	0xdb18	; 0xdb18 <_Z14keyTransmitterb>
    4890:	80 e0       	ldi	r24, 0x00	; 0
    4892:	0e 94 e5 6c 	call	0xd9ca	; 0xd9ca <_Z18powerToTransmitterb>
    4896:	19 82       	std	Y+1, r1	; 0x01
    4898:	40 e0       	ldi	r20, 0x00	; 0
    489a:	50 e0       	ldi	r21, 0x00	; 0
    489c:	ce 01       	movw	r24, r28
    489e:	01 96       	adiw	r24, 0x01	; 1
    48a0:	bc 01       	movw	r22, r24
    48a2:	8b e7       	ldi	r24, 0x7B	; 123
    48a4:	90 e4       	ldi	r25, 0x40	; 64
    48a6:	0e 94 b5 57 	call	0xaf6a	; 0xaf6a <_Z9makeMorsePcPbS0_>
    48aa:	00 00       	nop
    48ac:	0f 90       	pop	r0
    48ae:	df 91       	pop	r29
    48b0:	cf 91       	pop	r28
    48b2:	08 95       	ret

000048b4 <_Z13startEventNow19EventActionSource_t>:
    48b4:	cf 93       	push	r28
    48b6:	df 93       	push	r29
    48b8:	00 d0       	rcall	.+0      	; 0x48ba <_Z13startEventNow19EventActionSource_t+0x6>
    48ba:	cd b7       	in	r28, 0x3d	; 61
    48bc:	de b7       	in	r29, 0x3e	; 62
    48be:	8a 83       	std	Y+2, r24	; 0x02
    48c0:	0e 94 c1 27 	call	0x4f82	; 0x4f82 <_Z23clockConfigurationCheckv>
    48c4:	89 83       	std	Y+1, r24	; 0x01
    48c6:	8a 81       	ldd	r24, Y+2	; 0x02
    48c8:	88 23       	and	r24, r24
    48ca:	69 f4       	brne	.+26     	; 0x48e6 <_Z13startEventNow19EventActionSource_t+0x32>
    48cc:	89 81       	ldd	r24, Y+1	; 0x01
    48ce:	82 30       	cpi	r24, 0x02	; 2
    48d0:	29 f4       	brne	.+10     	; 0x48dc <_Z13startEventNow19EventActionSource_t+0x28>
    48d2:	60 e0       	ldi	r22, 0x00	; 0
    48d4:	85 e1       	ldi	r24, 0x15	; 21
    48d6:	0e 94 b3 24 	call	0x4966	; 0x4966 <_Z11setupForFox5Fox_t13EventAction_t>
    48da:	3f c0       	rjmp	.+126    	; 0x495a <_Z13startEventNow19EventActionSource_t+0xa6>
    48dc:	63 e0       	ldi	r22, 0x03	; 3
    48de:	85 e1       	ldi	r24, 0x15	; 21
    48e0:	0e 94 b3 24 	call	0x4966	; 0x4966 <_Z11setupForFox5Fox_t13EventAction_t>
    48e4:	3a c0       	rjmp	.+116    	; 0x495a <_Z13startEventNow19EventActionSource_t+0xa6>
    48e6:	8a 81       	ldd	r24, Y+2	; 0x02
    48e8:	82 30       	cpi	r24, 0x02	; 2
    48ea:	d9 f4       	brne	.+54     	; 0x4922 <_Z13startEventNow19EventActionSource_t+0x6e>
    48ec:	89 81       	ldd	r24, Y+1	; 0x01
    48ee:	82 30       	cpi	r24, 0x02	; 2
    48f0:	29 f4       	brne	.+10     	; 0x48fc <_Z13startEventNow19EventActionSource_t+0x48>
    48f2:	61 e0       	ldi	r22, 0x01	; 1
    48f4:	85 e1       	ldi	r24, 0x15	; 21
    48f6:	0e 94 b3 24 	call	0x4966	; 0x4966 <_Z11setupForFox5Fox_t13EventAction_t>
    48fa:	2f c0       	rjmp	.+94     	; 0x495a <_Z13startEventNow19EventActionSource_t+0xa6>
    48fc:	89 81       	ldd	r24, Y+1	; 0x01
    48fe:	81 30       	cpi	r24, 0x01	; 1
    4900:	31 f0       	breq	.+12     	; 0x490e <_Z13startEventNow19EventActionSource_t+0x5a>
    4902:	89 81       	ldd	r24, Y+1	; 0x01
    4904:	84 30       	cpi	r24, 0x04	; 4
    4906:	19 f0       	breq	.+6      	; 0x490e <_Z13startEventNow19EventActionSource_t+0x5a>
    4908:	89 81       	ldd	r24, Y+1	; 0x01
    490a:	83 30       	cpi	r24, 0x03	; 3
    490c:	29 f4       	brne	.+10     	; 0x4918 <_Z13startEventNow19EventActionSource_t+0x64>
    490e:	61 e0       	ldi	r22, 0x01	; 1
    4910:	85 e1       	ldi	r24, 0x15	; 21
    4912:	0e 94 b3 24 	call	0x4966	; 0x4966 <_Z11setupForFox5Fox_t13EventAction_t>
    4916:	21 c0       	rjmp	.+66     	; 0x495a <_Z13startEventNow19EventActionSource_t+0xa6>
    4918:	63 e0       	ldi	r22, 0x03	; 3
    491a:	85 e1       	ldi	r24, 0x15	; 21
    491c:	0e 94 b3 24 	call	0x4966	; 0x4966 <_Z11setupForFox5Fox_t13EventAction_t>
    4920:	1c c0       	rjmp	.+56     	; 0x495a <_Z13startEventNow19EventActionSource_t+0xa6>
    4922:	89 81       	ldd	r24, Y+1	; 0x01
    4924:	82 30       	cpi	r24, 0x02	; 2
    4926:	29 f4       	brne	.+10     	; 0x4932 <_Z13startEventNow19EventActionSource_t+0x7e>
    4928:	61 e0       	ldi	r22, 0x01	; 1
    492a:	85 e1       	ldi	r24, 0x15	; 21
    492c:	0e 94 b3 24 	call	0x4966	; 0x4966 <_Z11setupForFox5Fox_t13EventAction_t>
    4930:	14 c0       	rjmp	.+40     	; 0x495a <_Z13startEventNow19EventActionSource_t+0xa6>
    4932:	89 81       	ldd	r24, Y+1	; 0x01
    4934:	81 30       	cpi	r24, 0x01	; 1
    4936:	29 f4       	brne	.+10     	; 0x4942 <_Z13startEventNow19EventActionSource_t+0x8e>
    4938:	62 e0       	ldi	r22, 0x02	; 2
    493a:	85 e1       	ldi	r24, 0x15	; 21
    493c:	0e 94 b3 24 	call	0x4966	; 0x4966 <_Z11setupForFox5Fox_t13EventAction_t>
    4940:	0c c0       	rjmp	.+24     	; 0x495a <_Z13startEventNow19EventActionSource_t+0xa6>
    4942:	89 81       	ldd	r24, Y+1	; 0x01
    4944:	84 30       	cpi	r24, 0x04	; 4
    4946:	29 f4       	brne	.+10     	; 0x4952 <_Z13startEventNow19EventActionSource_t+0x9e>
    4948:	63 e0       	ldi	r22, 0x03	; 3
    494a:	85 e1       	ldi	r24, 0x15	; 21
    494c:	0e 94 b3 24 	call	0x4966	; 0x4966 <_Z11setupForFox5Fox_t13EventAction_t>
    4950:	04 c0       	rjmp	.+8      	; 0x495a <_Z13startEventNow19EventActionSource_t+0xa6>
    4952:	63 e0       	ldi	r22, 0x03	; 3
    4954:	85 e1       	ldi	r24, 0x15	; 21
    4956:	0e 94 b3 24 	call	0x4966	; 0x4966 <_Z11setupForFox5Fox_t13EventAction_t>
    495a:	00 00       	nop
    495c:	0f 90       	pop	r0
    495e:	0f 90       	pop	r0
    4960:	df 91       	pop	r29
    4962:	cf 91       	pop	r28
    4964:	08 95       	ret

00004966 <_Z11setupForFox5Fox_t13EventAction_t>:
    4966:	cf 93       	push	r28
    4968:	df 93       	push	r29
    496a:	cd b7       	in	r28, 0x3d	; 61
    496c:	de b7       	in	r29, 0x3e	; 62
    496e:	2a 97       	sbiw	r28, 0x0a	; 10
    4970:	cd bf       	out	0x3d, r28	; 61
    4972:	de bf       	out	0x3e, r29	; 62
    4974:	89 87       	std	Y+9, r24	; 0x09
    4976:	6a 87       	std	Y+10, r22	; 0x0a
    4978:	81 e0       	ldi	r24, 0x01	; 1
    497a:	89 83       	std	Y+1, r24	; 0x01
    497c:	89 85       	ldd	r24, Y+9	; 0x09
    497e:	85 31       	cpi	r24, 0x15	; 21
    4980:	19 f4       	brne	.+6      	; 0x4988 <_Z11setupForFox5Fox_t13EventAction_t+0x22>
    4982:	0e 94 84 28 	call	0x5108	; 0x5108 <_Z13getFoxSettingv>
    4986:	89 87       	std	Y+9, r24	; 0x09
    4988:	10 92 20 45 	sts	0x4520, r1	; 0x804520 <g_event_enabled>
    498c:	10 92 22 45 	sts	0x4522, r1	; 0x804522 <g_event_commenced>
    4990:	60 e0       	ldi	r22, 0x00	; 0
    4992:	82 e4       	ldi	r24, 0x42	; 66
    4994:	95 e4       	ldi	r25, 0x45	; 69
    4996:	0e 94 87 4e 	call	0x9d0e	; 0x9d0e <_ZN4leds6setRedEb>
    499a:	80 e0       	ldi	r24, 0x00	; 0
    499c:	90 e0       	ldi	r25, 0x00	; 0
    499e:	0e 94 94 35 	call	0x6b28	; 0x6b28 <ds3231_get_epoch>
    49a2:	dc 01       	movw	r26, r24
    49a4:	cb 01       	movw	r24, r22
    49a6:	bc 01       	movw	r22, r24
    49a8:	cd 01       	movw	r24, r26
    49aa:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <set_system_time>
    49ae:	89 85       	ldd	r24, Y+9	; 0x09
    49b0:	88 2f       	mov	r24, r24
    49b2:	90 e0       	ldi	r25, 0x00	; 0
    49b4:	09 2e       	mov	r0, r25
    49b6:	00 0c       	add	r0, r0
    49b8:	aa 0b       	sbc	r26, r26
    49ba:	bb 0b       	sbc	r27, r27
    49bc:	41 e0       	ldi	r20, 0x01	; 1
    49be:	50 e0       	ldi	r21, 0x00	; 0
    49c0:	23 e1       	ldi	r18, 0x13	; 19
    49c2:	30 e0       	ldi	r19, 0x00	; 0
    49c4:	84 1b       	sub	r24, r20
    49c6:	95 0b       	sbc	r25, r21
    49c8:	28 17       	cp	r18, r24
    49ca:	39 07       	cpc	r19, r25
    49cc:	08 f4       	brcc	.+2      	; 0x49d0 <_Z11setupForFox5Fox_t13EventAction_t+0x6a>
    49ce:	fb c1       	rjmp	.+1014   	; 0x4dc6 <_Z11setupForFox5Fox_t13EventAction_t+0x460>
    49d0:	8c 58       	subi	r24, 0x8C	; 140
    49d2:	9f 4f       	sbci	r25, 0xFF	; 255
    49d4:	fc 01       	movw	r30, r24
    49d6:	0c 94 14 75 	jmp	0xea28	; 0xea28 <__tablejump2__>
    49da:	89 81       	ldd	r24, Y+1	; 0x01
    49dc:	88 23       	and	r24, r24
    49de:	89 f0       	breq	.+34     	; 0x4a02 <_Z11setupForFox5Fox_t13EventAction_t+0x9c>
    49e0:	8d e4       	ldi	r24, 0x4D	; 77
    49e2:	9f e4       	ldi	r25, 0x4F	; 79
    49e4:	80 93 ab 44 	sts	0x44AB, r24	; 0x8044ab <g_messages_text>
    49e8:	90 93 ac 44 	sts	0x44AC, r25	; 0x8044ac <g_messages_text+0x1>
    49ec:	85 e4       	ldi	r24, 0x45	; 69
    49ee:	90 e0       	ldi	r25, 0x00	; 0
    49f0:	80 93 ad 44 	sts	0x44AD, r24	; 0x8044ad <g_messages_text+0x2>
    49f4:	90 93 ae 44 	sts	0x44AE, r25	; 0x8044ae <g_messages_text+0x3>
    49f8:	19 82       	std	Y+1, r1	; 0x01
    49fa:	10 92 16 45 	sts	0x4516, r1	; 0x804516 <g_intra_cycle_delay_time>
    49fe:	10 92 17 45 	sts	0x4517, r1	; 0x804517 <g_intra_cycle_delay_time+0x1>
    4a02:	89 81       	ldd	r24, Y+1	; 0x01
    4a04:	88 23       	and	r24, r24
    4a06:	99 f0       	breq	.+38     	; 0x4a2e <_Z11setupForFox5Fox_t13EventAction_t+0xc8>
    4a08:	8d e4       	ldi	r24, 0x4D	; 77
    4a0a:	9f e4       	ldi	r25, 0x4F	; 79
    4a0c:	80 93 ab 44 	sts	0x44AB, r24	; 0x8044ab <g_messages_text>
    4a10:	90 93 ac 44 	sts	0x44AC, r25	; 0x8044ac <g_messages_text+0x1>
    4a14:	89 e4       	ldi	r24, 0x49	; 73
    4a16:	90 e0       	ldi	r25, 0x00	; 0
    4a18:	80 93 ad 44 	sts	0x44AD, r24	; 0x8044ad <g_messages_text+0x2>
    4a1c:	90 93 ae 44 	sts	0x44AE, r25	; 0x8044ae <g_messages_text+0x3>
    4a20:	19 82       	std	Y+1, r1	; 0x01
    4a22:	8c e3       	ldi	r24, 0x3C	; 60
    4a24:	90 e0       	ldi	r25, 0x00	; 0
    4a26:	80 93 16 45 	sts	0x4516, r24	; 0x804516 <g_intra_cycle_delay_time>
    4a2a:	90 93 17 45 	sts	0x4517, r25	; 0x804517 <g_intra_cycle_delay_time+0x1>
    4a2e:	89 81       	ldd	r24, Y+1	; 0x01
    4a30:	88 23       	and	r24, r24
    4a32:	99 f0       	breq	.+38     	; 0x4a5a <_Z11setupForFox5Fox_t13EventAction_t+0xf4>
    4a34:	8d e4       	ldi	r24, 0x4D	; 77
    4a36:	9f e4       	ldi	r25, 0x4F	; 79
    4a38:	80 93 ab 44 	sts	0x44AB, r24	; 0x8044ab <g_messages_text>
    4a3c:	90 93 ac 44 	sts	0x44AC, r25	; 0x8044ac <g_messages_text+0x1>
    4a40:	83 e5       	ldi	r24, 0x53	; 83
    4a42:	90 e0       	ldi	r25, 0x00	; 0
    4a44:	80 93 ad 44 	sts	0x44AD, r24	; 0x8044ad <g_messages_text+0x2>
    4a48:	90 93 ae 44 	sts	0x44AE, r25	; 0x8044ae <g_messages_text+0x3>
    4a4c:	19 82       	std	Y+1, r1	; 0x01
    4a4e:	88 e7       	ldi	r24, 0x78	; 120
    4a50:	90 e0       	ldi	r25, 0x00	; 0
    4a52:	80 93 16 45 	sts	0x4516, r24	; 0x804516 <g_intra_cycle_delay_time>
    4a56:	90 93 17 45 	sts	0x4517, r25	; 0x804517 <g_intra_cycle_delay_time+0x1>
    4a5a:	89 81       	ldd	r24, Y+1	; 0x01
    4a5c:	88 23       	and	r24, r24
    4a5e:	99 f0       	breq	.+38     	; 0x4a86 <_Z11setupForFox5Fox_t13EventAction_t+0x120>
    4a60:	8d e4       	ldi	r24, 0x4D	; 77
    4a62:	9f e4       	ldi	r25, 0x4F	; 79
    4a64:	80 93 ab 44 	sts	0x44AB, r24	; 0x8044ab <g_messages_text>
    4a68:	90 93 ac 44 	sts	0x44AC, r25	; 0x8044ac <g_messages_text+0x1>
    4a6c:	88 e4       	ldi	r24, 0x48	; 72
    4a6e:	90 e0       	ldi	r25, 0x00	; 0
    4a70:	80 93 ad 44 	sts	0x44AD, r24	; 0x8044ad <g_messages_text+0x2>
    4a74:	90 93 ae 44 	sts	0x44AE, r25	; 0x8044ae <g_messages_text+0x3>
    4a78:	19 82       	std	Y+1, r1	; 0x01
    4a7a:	84 eb       	ldi	r24, 0xB4	; 180
    4a7c:	90 e0       	ldi	r25, 0x00	; 0
    4a7e:	80 93 16 45 	sts	0x4516, r24	; 0x804516 <g_intra_cycle_delay_time>
    4a82:	90 93 17 45 	sts	0x4517, r25	; 0x804517 <g_intra_cycle_delay_time+0x1>
    4a86:	89 81       	ldd	r24, Y+1	; 0x01
    4a88:	88 23       	and	r24, r24
    4a8a:	91 f0       	breq	.+36     	; 0x4ab0 <_Z11setupForFox5Fox_t13EventAction_t+0x14a>
    4a8c:	8d e4       	ldi	r24, 0x4D	; 77
    4a8e:	9f e4       	ldi	r25, 0x4F	; 79
    4a90:	80 93 ab 44 	sts	0x44AB, r24	; 0x8044ab <g_messages_text>
    4a94:	90 93 ac 44 	sts	0x44AC, r25	; 0x8044ac <g_messages_text+0x1>
    4a98:	85 e3       	ldi	r24, 0x35	; 53
    4a9a:	90 e0       	ldi	r25, 0x00	; 0
    4a9c:	80 93 ad 44 	sts	0x44AD, r24	; 0x8044ad <g_messages_text+0x2>
    4aa0:	90 93 ae 44 	sts	0x44AE, r25	; 0x8044ae <g_messages_text+0x3>
    4aa4:	80 ef       	ldi	r24, 0xF0	; 240
    4aa6:	90 e0       	ldi	r25, 0x00	; 0
    4aa8:	80 93 16 45 	sts	0x4516, r24	; 0x804516 <g_intra_cycle_delay_time>
    4aac:	90 93 17 45 	sts	0x4517, r25	; 0x804517 <g_intra_cycle_delay_time+0x1>
    4ab0:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    4ab4:	0e 94 15 21 	call	0x422a	; 0x422a <_Z13throttleValueh>
    4ab8:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    4abc:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    4ac0:	8c e3       	ldi	r24, 0x3C	; 60
    4ac2:	90 e0       	ldi	r25, 0x00	; 0
    4ac4:	80 93 a3 44 	sts	0x44A3, r24	; 0x8044a3 <_ZL26g_sendID_seconds_countdown>
    4ac8:	90 93 a4 44 	sts	0x44A4, r25	; 0x8044a4 <_ZL26g_sendID_seconds_countdown+0x1>
    4acc:	8c e3       	ldi	r24, 0x3C	; 60
    4ace:	90 e0       	ldi	r25, 0x00	; 0
    4ad0:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_on_air_seconds>
    4ad4:	90 93 0e 40 	sts	0x400E, r25	; 0x80400e <g_on_air_seconds+0x1>
    4ad8:	80 ef       	ldi	r24, 0xF0	; 240
    4ada:	90 e0       	ldi	r25, 0x00	; 0
    4adc:	80 93 0f 40 	sts	0x400F, r24	; 0x80400f <g_off_air_seconds>
    4ae0:	90 93 10 40 	sts	0x4010, r25	; 0x804010 <g_off_air_seconds+0x1>
    4ae4:	9b c1       	rjmp	.+822    	; 0x4e1c <_Z11setupForFox5Fox_t13EventAction_t+0x4b6>
    4ae6:	89 81       	ldd	r24, Y+1	; 0x01
    4ae8:	88 23       	and	r24, r24
    4aea:	69 f0       	breq	.+26     	; 0x4b06 <_Z11setupForFox5Fox_t13EventAction_t+0x1a0>
    4aec:	8d e4       	ldi	r24, 0x4D	; 77
    4aee:	95 e4       	ldi	r25, 0x45	; 69
    4af0:	80 93 ab 44 	sts	0x44AB, r24	; 0x8044ab <g_messages_text>
    4af4:	90 93 ac 44 	sts	0x44AC, r25	; 0x8044ac <g_messages_text+0x1>
    4af8:	10 92 ad 44 	sts	0x44AD, r1	; 0x8044ad <g_messages_text+0x2>
    4afc:	19 82       	std	Y+1, r1	; 0x01
    4afe:	10 92 16 45 	sts	0x4516, r1	; 0x804516 <g_intra_cycle_delay_time>
    4b02:	10 92 17 45 	sts	0x4517, r1	; 0x804517 <g_intra_cycle_delay_time+0x1>
    4b06:	89 81       	ldd	r24, Y+1	; 0x01
    4b08:	88 23       	and	r24, r24
    4b0a:	79 f0       	breq	.+30     	; 0x4b2a <_Z11setupForFox5Fox_t13EventAction_t+0x1c4>
    4b0c:	8d e4       	ldi	r24, 0x4D	; 77
    4b0e:	99 e4       	ldi	r25, 0x49	; 73
    4b10:	80 93 ab 44 	sts	0x44AB, r24	; 0x8044ab <g_messages_text>
    4b14:	90 93 ac 44 	sts	0x44AC, r25	; 0x8044ac <g_messages_text+0x1>
    4b18:	10 92 ad 44 	sts	0x44AD, r1	; 0x8044ad <g_messages_text+0x2>
    4b1c:	19 82       	std	Y+1, r1	; 0x01
    4b1e:	8c e0       	ldi	r24, 0x0C	; 12
    4b20:	90 e0       	ldi	r25, 0x00	; 0
    4b22:	80 93 16 45 	sts	0x4516, r24	; 0x804516 <g_intra_cycle_delay_time>
    4b26:	90 93 17 45 	sts	0x4517, r25	; 0x804517 <g_intra_cycle_delay_time+0x1>
    4b2a:	89 81       	ldd	r24, Y+1	; 0x01
    4b2c:	88 23       	and	r24, r24
    4b2e:	79 f0       	breq	.+30     	; 0x4b4e <_Z11setupForFox5Fox_t13EventAction_t+0x1e8>
    4b30:	8d e4       	ldi	r24, 0x4D	; 77
    4b32:	93 e5       	ldi	r25, 0x53	; 83
    4b34:	80 93 ab 44 	sts	0x44AB, r24	; 0x8044ab <g_messages_text>
    4b38:	90 93 ac 44 	sts	0x44AC, r25	; 0x8044ac <g_messages_text+0x1>
    4b3c:	10 92 ad 44 	sts	0x44AD, r1	; 0x8044ad <g_messages_text+0x2>
    4b40:	19 82       	std	Y+1, r1	; 0x01
    4b42:	88 e1       	ldi	r24, 0x18	; 24
    4b44:	90 e0       	ldi	r25, 0x00	; 0
    4b46:	80 93 16 45 	sts	0x4516, r24	; 0x804516 <g_intra_cycle_delay_time>
    4b4a:	90 93 17 45 	sts	0x4517, r25	; 0x804517 <g_intra_cycle_delay_time+0x1>
    4b4e:	89 81       	ldd	r24, Y+1	; 0x01
    4b50:	88 23       	and	r24, r24
    4b52:	79 f0       	breq	.+30     	; 0x4b72 <_Z11setupForFox5Fox_t13EventAction_t+0x20c>
    4b54:	8d e4       	ldi	r24, 0x4D	; 77
    4b56:	98 e4       	ldi	r25, 0x48	; 72
    4b58:	80 93 ab 44 	sts	0x44AB, r24	; 0x8044ab <g_messages_text>
    4b5c:	90 93 ac 44 	sts	0x44AC, r25	; 0x8044ac <g_messages_text+0x1>
    4b60:	10 92 ad 44 	sts	0x44AD, r1	; 0x8044ad <g_messages_text+0x2>
    4b64:	19 82       	std	Y+1, r1	; 0x01
    4b66:	84 e2       	ldi	r24, 0x24	; 36
    4b68:	90 e0       	ldi	r25, 0x00	; 0
    4b6a:	80 93 16 45 	sts	0x4516, r24	; 0x804516 <g_intra_cycle_delay_time>
    4b6e:	90 93 17 45 	sts	0x4517, r25	; 0x804517 <g_intra_cycle_delay_time+0x1>
    4b72:	89 81       	ldd	r24, Y+1	; 0x01
    4b74:	88 23       	and	r24, r24
    4b76:	71 f0       	breq	.+28     	; 0x4b94 <_Z11setupForFox5Fox_t13EventAction_t+0x22e>
    4b78:	8d e4       	ldi	r24, 0x4D	; 77
    4b7a:	95 e3       	ldi	r25, 0x35	; 53
    4b7c:	80 93 ab 44 	sts	0x44AB, r24	; 0x8044ab <g_messages_text>
    4b80:	90 93 ac 44 	sts	0x44AC, r25	; 0x8044ac <g_messages_text+0x1>
    4b84:	10 92 ad 44 	sts	0x44AD, r1	; 0x8044ad <g_messages_text+0x2>
    4b88:	80 e3       	ldi	r24, 0x30	; 48
    4b8a:	90 e0       	ldi	r25, 0x00	; 0
    4b8c:	80 93 16 45 	sts	0x4516, r24	; 0x804516 <g_intra_cycle_delay_time>
    4b90:	90 93 17 45 	sts	0x4517, r25	; 0x804517 <g_intra_cycle_delay_time+0x1>
    4b94:	88 e0       	ldi	r24, 0x08	; 8
    4b96:	80 93 0c 40 	sts	0x400C, r24	; 0x80400c <g_pattern_codespeed>
    4b9a:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    4b9e:	0e 94 15 21 	call	0x422a	; 0x422a <_Z13throttleValueh>
    4ba2:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    4ba6:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    4baa:	88 e5       	ldi	r24, 0x58	; 88
    4bac:	92 e0       	ldi	r25, 0x02	; 2
    4bae:	80 93 a3 44 	sts	0x44A3, r24	; 0x8044a3 <_ZL26g_sendID_seconds_countdown>
    4bb2:	90 93 a4 44 	sts	0x44A4, r25	; 0x8044a4 <_ZL26g_sendID_seconds_countdown+0x1>
    4bb6:	8c e0       	ldi	r24, 0x0C	; 12
    4bb8:	90 e0       	ldi	r25, 0x00	; 0
    4bba:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_on_air_seconds>
    4bbe:	90 93 0e 40 	sts	0x400E, r25	; 0x80400e <g_on_air_seconds+0x1>
    4bc2:	80 e3       	ldi	r24, 0x30	; 48
    4bc4:	90 e0       	ldi	r25, 0x00	; 0
    4bc6:	80 93 0f 40 	sts	0x400F, r24	; 0x80400f <g_off_air_seconds>
    4bca:	90 93 10 40 	sts	0x4010, r25	; 0x804010 <g_off_air_seconds+0x1>
    4bce:	26 c1       	rjmp	.+588    	; 0x4e1c <_Z11setupForFox5Fox_t13EventAction_t+0x4b6>
    4bd0:	89 81       	ldd	r24, Y+1	; 0x01
    4bd2:	88 23       	and	r24, r24
    4bd4:	69 f0       	breq	.+26     	; 0x4bf0 <_Z11setupForFox5Fox_t13EventAction_t+0x28a>
    4bd6:	8f e4       	ldi	r24, 0x4F	; 79
    4bd8:	95 e4       	ldi	r25, 0x45	; 69
    4bda:	80 93 ab 44 	sts	0x44AB, r24	; 0x8044ab <g_messages_text>
    4bde:	90 93 ac 44 	sts	0x44AC, r25	; 0x8044ac <g_messages_text+0x1>
    4be2:	10 92 ad 44 	sts	0x44AD, r1	; 0x8044ad <g_messages_text+0x2>
    4be6:	19 82       	std	Y+1, r1	; 0x01
    4be8:	10 92 16 45 	sts	0x4516, r1	; 0x804516 <g_intra_cycle_delay_time>
    4bec:	10 92 17 45 	sts	0x4517, r1	; 0x804517 <g_intra_cycle_delay_time+0x1>
    4bf0:	89 81       	ldd	r24, Y+1	; 0x01
    4bf2:	88 23       	and	r24, r24
    4bf4:	79 f0       	breq	.+30     	; 0x4c14 <_Z11setupForFox5Fox_t13EventAction_t+0x2ae>
    4bf6:	8f e4       	ldi	r24, 0x4F	; 79
    4bf8:	99 e4       	ldi	r25, 0x49	; 73
    4bfa:	80 93 ab 44 	sts	0x44AB, r24	; 0x8044ab <g_messages_text>
    4bfe:	90 93 ac 44 	sts	0x44AC, r25	; 0x8044ac <g_messages_text+0x1>
    4c02:	10 92 ad 44 	sts	0x44AD, r1	; 0x8044ad <g_messages_text+0x2>
    4c06:	19 82       	std	Y+1, r1	; 0x01
    4c08:	8c e0       	ldi	r24, 0x0C	; 12
    4c0a:	90 e0       	ldi	r25, 0x00	; 0
    4c0c:	80 93 16 45 	sts	0x4516, r24	; 0x804516 <g_intra_cycle_delay_time>
    4c10:	90 93 17 45 	sts	0x4517, r25	; 0x804517 <g_intra_cycle_delay_time+0x1>
    4c14:	89 81       	ldd	r24, Y+1	; 0x01
    4c16:	88 23       	and	r24, r24
    4c18:	79 f0       	breq	.+30     	; 0x4c38 <_Z11setupForFox5Fox_t13EventAction_t+0x2d2>
    4c1a:	8f e4       	ldi	r24, 0x4F	; 79
    4c1c:	93 e5       	ldi	r25, 0x53	; 83
    4c1e:	80 93 ab 44 	sts	0x44AB, r24	; 0x8044ab <g_messages_text>
    4c22:	90 93 ac 44 	sts	0x44AC, r25	; 0x8044ac <g_messages_text+0x1>
    4c26:	10 92 ad 44 	sts	0x44AD, r1	; 0x8044ad <g_messages_text+0x2>
    4c2a:	19 82       	std	Y+1, r1	; 0x01
    4c2c:	88 e1       	ldi	r24, 0x18	; 24
    4c2e:	90 e0       	ldi	r25, 0x00	; 0
    4c30:	80 93 16 45 	sts	0x4516, r24	; 0x804516 <g_intra_cycle_delay_time>
    4c34:	90 93 17 45 	sts	0x4517, r25	; 0x804517 <g_intra_cycle_delay_time+0x1>
    4c38:	89 81       	ldd	r24, Y+1	; 0x01
    4c3a:	88 23       	and	r24, r24
    4c3c:	79 f0       	breq	.+30     	; 0x4c5c <_Z11setupForFox5Fox_t13EventAction_t+0x2f6>
    4c3e:	8f e4       	ldi	r24, 0x4F	; 79
    4c40:	98 e4       	ldi	r25, 0x48	; 72
    4c42:	80 93 ab 44 	sts	0x44AB, r24	; 0x8044ab <g_messages_text>
    4c46:	90 93 ac 44 	sts	0x44AC, r25	; 0x8044ac <g_messages_text+0x1>
    4c4a:	10 92 ad 44 	sts	0x44AD, r1	; 0x8044ad <g_messages_text+0x2>
    4c4e:	19 82       	std	Y+1, r1	; 0x01
    4c50:	84 e2       	ldi	r24, 0x24	; 36
    4c52:	90 e0       	ldi	r25, 0x00	; 0
    4c54:	80 93 16 45 	sts	0x4516, r24	; 0x804516 <g_intra_cycle_delay_time>
    4c58:	90 93 17 45 	sts	0x4517, r25	; 0x804517 <g_intra_cycle_delay_time+0x1>
    4c5c:	89 81       	ldd	r24, Y+1	; 0x01
    4c5e:	88 23       	and	r24, r24
    4c60:	71 f0       	breq	.+28     	; 0x4c7e <_Z11setupForFox5Fox_t13EventAction_t+0x318>
    4c62:	8f e4       	ldi	r24, 0x4F	; 79
    4c64:	95 e3       	ldi	r25, 0x35	; 53
    4c66:	80 93 ab 44 	sts	0x44AB, r24	; 0x8044ab <g_messages_text>
    4c6a:	90 93 ac 44 	sts	0x44AC, r25	; 0x8044ac <g_messages_text+0x1>
    4c6e:	10 92 ad 44 	sts	0x44AD, r1	; 0x8044ad <g_messages_text+0x2>
    4c72:	80 e3       	ldi	r24, 0x30	; 48
    4c74:	90 e0       	ldi	r25, 0x00	; 0
    4c76:	80 93 16 45 	sts	0x4516, r24	; 0x804516 <g_intra_cycle_delay_time>
    4c7a:	90 93 17 45 	sts	0x4517, r25	; 0x804517 <g_intra_cycle_delay_time+0x1>
    4c7e:	8f e0       	ldi	r24, 0x0F	; 15
    4c80:	80 93 0c 40 	sts	0x400C, r24	; 0x80400c <g_pattern_codespeed>
    4c84:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    4c88:	0e 94 15 21 	call	0x422a	; 0x422a <_Z13throttleValueh>
    4c8c:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    4c90:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    4c94:	88 e5       	ldi	r24, 0x58	; 88
    4c96:	92 e0       	ldi	r25, 0x02	; 2
    4c98:	80 93 a3 44 	sts	0x44A3, r24	; 0x8044a3 <_ZL26g_sendID_seconds_countdown>
    4c9c:	90 93 a4 44 	sts	0x44A4, r25	; 0x8044a4 <_ZL26g_sendID_seconds_countdown+0x1>
    4ca0:	8c e0       	ldi	r24, 0x0C	; 12
    4ca2:	90 e0       	ldi	r25, 0x00	; 0
    4ca4:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_on_air_seconds>
    4ca8:	90 93 0e 40 	sts	0x400E, r25	; 0x80400e <g_on_air_seconds+0x1>
    4cac:	80 e3       	ldi	r24, 0x30	; 48
    4cae:	90 e0       	ldi	r25, 0x00	; 0
    4cb0:	80 93 0f 40 	sts	0x400F, r24	; 0x80400f <g_off_air_seconds>
    4cb4:	90 93 10 40 	sts	0x4010, r25	; 0x804010 <g_off_air_seconds+0x1>
    4cb8:	b1 c0       	rjmp	.+354    	; 0x4e1c <_Z11setupForFox5Fox_t13EventAction_t+0x4b6>
    4cba:	0e 94 e5 28 	call	0x51ca	; 0x51ca <_Z19getFrequencySettingv>
    4cbe:	dc 01       	movw	r26, r24
    4cc0:	cb 01       	movw	r24, r22
    4cc2:	bc 01       	movw	r22, r24
    4cc4:	cd 01       	movw	r24, r26
    4cc6:	0e 94 a4 6e 	call	0xdd48	; 0xdd48 <_Z16init_transmitterm>
    4cca:	19 82       	std	Y+1, r1	; 0x01
    4ccc:	10 92 16 45 	sts	0x4516, r1	; 0x804516 <g_intra_cycle_delay_time>
    4cd0:	10 92 17 45 	sts	0x4517, r1	; 0x804517 <g_intra_cycle_delay_time+0x1>
    4cd4:	88 e0       	ldi	r24, 0x08	; 8
    4cd6:	80 93 0c 40 	sts	0x400C, r24	; 0x80400c <g_pattern_codespeed>
    4cda:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    4cde:	0e 94 15 21 	call	0x422a	; 0x422a <_Z13throttleValueh>
    4ce2:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    4ce6:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    4cea:	88 e5       	ldi	r24, 0x58	; 88
    4cec:	92 e0       	ldi	r25, 0x02	; 2
    4cee:	80 93 a3 44 	sts	0x44A3, r24	; 0x8044a3 <_ZL26g_sendID_seconds_countdown>
    4cf2:	90 93 a4 44 	sts	0x44A4, r25	; 0x8044a4 <_ZL26g_sendID_seconds_countdown+0x1>
    4cf6:	8c e3       	ldi	r24, 0x3C	; 60
    4cf8:	90 e0       	ldi	r25, 0x00	; 0
    4cfa:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_on_air_seconds>
    4cfe:	90 93 0e 40 	sts	0x400E, r25	; 0x80400e <g_on_air_seconds+0x1>
    4d02:	10 92 0f 40 	sts	0x400F, r1	; 0x80400f <g_off_air_seconds>
    4d06:	10 92 10 40 	sts	0x4010, r1	; 0x804010 <g_off_air_seconds+0x1>
    4d0a:	88 c0       	rjmp	.+272    	; 0x4e1c <_Z11setupForFox5Fox_t13EventAction_t+0x4b6>
    4d0c:	0e 94 e5 28 	call	0x51ca	; 0x51ca <_Z19getFrequencySettingv>
    4d10:	dc 01       	movw	r26, r24
    4d12:	cb 01       	movw	r24, r22
    4d14:	bc 01       	movw	r22, r24
    4d16:	cd 01       	movw	r24, r26
    4d18:	0e 94 a4 6e 	call	0xdd48	; 0xdd48 <_Z16init_transmitterm>
    4d1c:	19 82       	std	Y+1, r1	; 0x01
    4d1e:	10 92 16 45 	sts	0x4516, r1	; 0x804516 <g_intra_cycle_delay_time>
    4d22:	10 92 17 45 	sts	0x4517, r1	; 0x804517 <g_intra_cycle_delay_time+0x1>
    4d26:	88 e0       	ldi	r24, 0x08	; 8
    4d28:	80 93 0c 40 	sts	0x400C, r24	; 0x80400c <g_pattern_codespeed>
    4d2c:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    4d30:	0e 94 15 21 	call	0x422a	; 0x422a <_Z13throttleValueh>
    4d34:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    4d38:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    4d3c:	88 e5       	ldi	r24, 0x58	; 88
    4d3e:	92 e0       	ldi	r25, 0x02	; 2
    4d40:	80 93 a3 44 	sts	0x44A3, r24	; 0x8044a3 <_ZL26g_sendID_seconds_countdown>
    4d44:	90 93 a4 44 	sts	0x44A4, r25	; 0x8044a4 <_ZL26g_sendID_seconds_countdown+0x1>
    4d48:	8c e3       	ldi	r24, 0x3C	; 60
    4d4a:	90 e0       	ldi	r25, 0x00	; 0
    4d4c:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_on_air_seconds>
    4d50:	90 93 0e 40 	sts	0x400E, r25	; 0x80400e <g_on_air_seconds+0x1>
    4d54:	10 92 0f 40 	sts	0x400F, r1	; 0x80400f <g_off_air_seconds>
    4d58:	10 92 10 40 	sts	0x4010, r1	; 0x804010 <g_off_air_seconds+0x1>
    4d5c:	5f c0       	rjmp	.+190    	; 0x4e1c <_Z11setupForFox5Fox_t13EventAction_t+0x4b6>
    4d5e:	0e 94 e5 28 	call	0x51ca	; 0x51ca <_Z19getFrequencySettingv>
    4d62:	dc 01       	movw	r26, r24
    4d64:	cb 01       	movw	r24, r22
    4d66:	bc 01       	movw	r22, r24
    4d68:	cd 01       	movw	r24, r26
    4d6a:	0e 94 a4 6e 	call	0xdd48	; 0xdd48 <_Z16init_transmitterm>
    4d6e:	19 82       	std	Y+1, r1	; 0x01
    4d70:	10 92 16 45 	sts	0x4516, r1	; 0x804516 <g_intra_cycle_delay_time>
    4d74:	10 92 17 45 	sts	0x4517, r1	; 0x804517 <g_intra_cycle_delay_time+0x1>
    4d78:	88 e0       	ldi	r24, 0x08	; 8
    4d7a:	80 93 0c 40 	sts	0x400C, r24	; 0x80400c <g_pattern_codespeed>
    4d7e:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    4d82:	0e 94 15 21 	call	0x422a	; 0x422a <_Z13throttleValueh>
    4d86:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    4d8a:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    4d8e:	88 e5       	ldi	r24, 0x58	; 88
    4d90:	92 e0       	ldi	r25, 0x02	; 2
    4d92:	80 93 a3 44 	sts	0x44A3, r24	; 0x8044a3 <_ZL26g_sendID_seconds_countdown>
    4d96:	90 93 a4 44 	sts	0x44A4, r25	; 0x8044a4 <_ZL26g_sendID_seconds_countdown+0x1>
    4d9a:	8c e3       	ldi	r24, 0x3C	; 60
    4d9c:	90 e0       	ldi	r25, 0x00	; 0
    4d9e:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_on_air_seconds>
    4da2:	90 93 0e 40 	sts	0x400E, r25	; 0x80400e <g_on_air_seconds+0x1>
    4da6:	10 92 0f 40 	sts	0x400F, r1	; 0x80400f <g_off_air_seconds>
    4daa:	10 92 10 40 	sts	0x4010, r1	; 0x804010 <g_off_air_seconds+0x1>
    4dae:	36 c0       	rjmp	.+108    	; 0x4e1c <_Z11setupForFox5Fox_t13EventAction_t+0x4b6>
    4db0:	83 e5       	ldi	r24, 0x53	; 83
    4db2:	90 e0       	ldi	r25, 0x00	; 0
    4db4:	80 93 ab 44 	sts	0x44AB, r24	; 0x8044ab <g_messages_text>
    4db8:	90 93 ac 44 	sts	0x44AC, r25	; 0x8044ac <g_messages_text+0x1>
    4dbc:	19 82       	std	Y+1, r1	; 0x01
    4dbe:	10 92 16 45 	sts	0x4516, r1	; 0x804516 <g_intra_cycle_delay_time>
    4dc2:	10 92 17 45 	sts	0x4517, r1	; 0x804517 <g_intra_cycle_delay_time+0x1>
    4dc6:	89 81       	ldd	r24, Y+1	; 0x01
    4dc8:	88 23       	and	r24, r24
    4dca:	41 f0       	breq	.+16     	; 0x4ddc <_Z11setupForFox5Fox_t13EventAction_t+0x476>
    4dcc:	8d e4       	ldi	r24, 0x4D	; 77
    4dce:	9f e4       	ldi	r25, 0x4F	; 79
    4dd0:	80 93 ab 44 	sts	0x44AB, r24	; 0x8044ab <g_messages_text>
    4dd4:	90 93 ac 44 	sts	0x44AC, r25	; 0x8044ac <g_messages_text+0x1>
    4dd8:	10 92 ad 44 	sts	0x44AD, r1	; 0x8044ad <g_messages_text+0x2>
    4ddc:	10 92 16 45 	sts	0x4516, r1	; 0x804516 <g_intra_cycle_delay_time>
    4de0:	10 92 17 45 	sts	0x4517, r1	; 0x804517 <g_intra_cycle_delay_time+0x1>
    4de4:	88 e0       	ldi	r24, 0x08	; 8
    4de6:	80 93 0c 40 	sts	0x400C, r24	; 0x80400c <g_pattern_codespeed>
    4dea:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    4dee:	0e 94 15 21 	call	0x422a	; 0x422a <_Z13throttleValueh>
    4df2:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    4df6:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    4dfa:	88 e5       	ldi	r24, 0x58	; 88
    4dfc:	92 e0       	ldi	r25, 0x02	; 2
    4dfe:	80 93 a3 44 	sts	0x44A3, r24	; 0x8044a3 <_ZL26g_sendID_seconds_countdown>
    4e02:	90 93 a4 44 	sts	0x44A4, r25	; 0x8044a4 <_ZL26g_sendID_seconds_countdown+0x1>
    4e06:	8c e3       	ldi	r24, 0x3C	; 60
    4e08:	90 e0       	ldi	r25, 0x00	; 0
    4e0a:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_on_air_seconds>
    4e0e:	90 93 0e 40 	sts	0x400E, r25	; 0x80400e <g_on_air_seconds+0x1>
    4e12:	10 92 0f 40 	sts	0x400F, r1	; 0x80400f <g_off_air_seconds>
    4e16:	10 92 10 40 	sts	0x4010, r1	; 0x804010 <g_off_air_seconds+0x1>
    4e1a:	00 00       	nop
    4e1c:	8a 85       	ldd	r24, Y+10	; 0x0a
    4e1e:	88 23       	and	r24, r24
    4e20:	a1 f4       	brne	.+40     	; 0x4e4a <_Z11setupForFox5Fox_t13EventAction_t+0x4e4>
    4e22:	10 92 22 45 	sts	0x4522, r1	; 0x804522 <g_event_commenced>
    4e26:	10 92 20 45 	sts	0x4520, r1	; 0x804520 <g_event_enabled>
    4e2a:	10 92 57 45 	sts	0x4557, r1	; 0x804557 <g_use_rtc_for_startstop>
    4e2e:	10 92 20 45 	sts	0x4520, r1	; 0x804520 <g_event_enabled>
    4e32:	80 e0       	ldi	r24, 0x00	; 0
    4e34:	0e 94 8c 6d 	call	0xdb18	; 0xdb18 <_Z14keyTransmitterb>
    4e38:	60 e0       	ldi	r22, 0x00	; 0
    4e3a:	82 e4       	ldi	r24, 0x42	; 66
    4e3c:	95 e4       	ldi	r25, 0x45	; 69
    4e3e:	0e 94 87 4e 	call	0x9d0e	; 0x9d0e <_ZN4leds6setRedEb>
    4e42:	80 e0       	ldi	r24, 0x00	; 0
    4e44:	0e 94 e5 6c 	call	0xd9ca	; 0xd9ca <_Z18powerToTransmitterb>
    4e48:	95 c0       	rjmp	.+298    	; 0x4f74 <_Z11setupForFox5Fox_t13EventAction_t+0x60e>
    4e4a:	8a 85       	ldd	r24, Y+10	; 0x0a
    4e4c:	81 30       	cpi	r24, 0x01	; 1
    4e4e:	09 f0       	breq	.+2      	; 0x4e52 <_Z11setupForFox5Fox_t13EventAction_t+0x4ec>
    4e50:	61 c0       	rjmp	.+194    	; 0x4f14 <_Z11setupForFox5Fox_t13EventAction_t+0x5ae>
    4e52:	ce 01       	movw	r24, r28
    4e54:	06 96       	adiw	r24, 0x06	; 6
    4e56:	0e 94 94 35 	call	0x6b28	; 0x6b28 <ds3231_get_epoch>
    4e5a:	dc 01       	movw	r26, r24
    4e5c:	cb 01       	movw	r24, r22
    4e5e:	bc 01       	movw	r22, r24
    4e60:	cd 01       	movw	r24, r26
    4e62:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <set_system_time>
    4e66:	80 e0       	ldi	r24, 0x00	; 0
    4e68:	90 e0       	ldi	r25, 0x00	; 0
    4e6a:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <time>
    4e6e:	dc 01       	movw	r26, r24
    4e70:	cb 01       	movw	r24, r22
    4e72:	8a 83       	std	Y+2, r24	; 0x02
    4e74:	9b 83       	std	Y+3, r25	; 0x03
    4e76:	ac 83       	std	Y+4, r26	; 0x04
    4e78:	bd 83       	std	Y+5, r27	; 0x05
    4e7a:	8e 81       	ldd	r24, Y+6	; 0x06
    4e7c:	88 23       	and	r24, r24
    4e7e:	c9 f5       	brne	.+114    	; 0x4ef2 <_Z11setupForFox5Fox_t13EventAction_t+0x58c>
    4e80:	8a 81       	ldd	r24, Y+2	; 0x02
    4e82:	9b 81       	ldd	r25, Y+3	; 0x03
    4e84:	ac 81       	ldd	r26, Y+4	; 0x04
    4e86:	bd 81       	ldd	r27, Y+5	; 0x05
    4e88:	80 93 18 45 	sts	0x4518, r24	; 0x804518 <g_event_start_epoch>
    4e8c:	90 93 19 45 	sts	0x4519, r25	; 0x804519 <g_event_start_epoch+0x1>
    4e90:	a0 93 1a 45 	sts	0x451A, r26	; 0x80451a <g_event_start_epoch+0x2>
    4e94:	b0 93 1b 45 	sts	0x451B, r27	; 0x80451b <g_event_start_epoch+0x3>
    4e98:	20 91 18 45 	lds	r18, 0x4518	; 0x804518 <g_event_start_epoch>
    4e9c:	30 91 19 45 	lds	r19, 0x4519	; 0x804519 <g_event_start_epoch+0x1>
    4ea0:	40 91 1a 45 	lds	r20, 0x451A	; 0x80451a <g_event_start_epoch+0x2>
    4ea4:	50 91 1b 45 	lds	r21, 0x451B	; 0x80451b <g_event_start_epoch+0x3>
    4ea8:	80 91 1c 45 	lds	r24, 0x451C	; 0x80451c <g_event_finish_epoch>
    4eac:	90 91 1d 45 	lds	r25, 0x451D	; 0x80451d <g_event_finish_epoch+0x1>
    4eb0:	a0 91 1e 45 	lds	r26, 0x451E	; 0x80451e <g_event_finish_epoch+0x2>
    4eb4:	b0 91 1f 45 	lds	r27, 0x451F	; 0x80451f <g_event_finish_epoch+0x3>
    4eb8:	61 e0       	ldi	r22, 0x01	; 1
    4eba:	82 17       	cp	r24, r18
    4ebc:	93 07       	cpc	r25, r19
    4ebe:	a4 07       	cpc	r26, r20
    4ec0:	b5 07       	cpc	r27, r21
    4ec2:	08 f0       	brcs	.+2      	; 0x4ec6 <_Z11setupForFox5Fox_t13EventAction_t+0x560>
    4ec4:	60 e0       	ldi	r22, 0x00	; 0
    4ec6:	66 23       	and	r22, r22
    4ec8:	a1 f0       	breq	.+40     	; 0x4ef2 <_Z11setupForFox5Fox_t13EventAction_t+0x58c>
    4eca:	80 91 18 45 	lds	r24, 0x4518	; 0x804518 <g_event_start_epoch>
    4ece:	90 91 19 45 	lds	r25, 0x4519	; 0x804519 <g_event_start_epoch+0x1>
    4ed2:	a0 91 1a 45 	lds	r26, 0x451A	; 0x80451a <g_event_start_epoch+0x2>
    4ed6:	b0 91 1b 45 	lds	r27, 0x451B	; 0x80451b <g_event_start_epoch+0x3>
    4eda:	80 58       	subi	r24, 0x80	; 128
    4edc:	9e 4a       	sbci	r25, 0xAE	; 174
    4ede:	ae 4f       	sbci	r26, 0xFE	; 254
    4ee0:	bf 4f       	sbci	r27, 0xFF	; 255
    4ee2:	80 93 1c 45 	sts	0x451C, r24	; 0x80451c <g_event_finish_epoch>
    4ee6:	90 93 1d 45 	sts	0x451D, r25	; 0x80451d <g_event_finish_epoch+0x1>
    4eea:	a0 93 1e 45 	sts	0x451E, r26	; 0x80451e <g_event_finish_epoch+0x2>
    4eee:	b0 93 1f 45 	sts	0x451F, r27	; 0x80451f <g_event_finish_epoch+0x3>
    4ef2:	1f 82       	std	Y+7, r1	; 0x07
    4ef4:	ce 01       	movw	r24, r28
    4ef6:	07 96       	adiw	r24, 0x07	; 7
    4ef8:	0e 94 6f 21 	call	0x42de	; 0x42de <_Z11launchEventP2SC>
    4efc:	8e 83       	std	Y+6, r24	; 0x06
    4efe:	82 e0       	ldi	r24, 0x02	; 2
    4f00:	80 93 a6 44 	sts	0x44A6, r24	; 0x8044a6 <_ZL19g_wifi_enable_delay>
    4f04:	8e 81       	ldd	r24, Y+6	; 0x06
    4f06:	88 23       	and	r24, r24
    4f08:	a9 f5       	brne	.+106    	; 0x4f74 <_Z11setupForFox5Fox_t13EventAction_t+0x60e>
    4f0a:	8c e4       	ldi	r24, 0x4C	; 76
    4f0c:	95 e4       	ldi	r25, 0x45	; 69
    4f0e:	0e 94 83 3e 	call	0x7d06	; 0x7d06 <_ZN13EepromManager13saveAllEEPROMEv>
    4f12:	30 c0       	rjmp	.+96     	; 0x4f74 <_Z11setupForFox5Fox_t13EventAction_t+0x60e>
    4f14:	8a 85       	ldd	r24, Y+10	; 0x0a
    4f16:	82 30       	cpi	r24, 0x02	; 2
    4f18:	49 f5       	brne	.+82     	; 0x4f6c <_Z11setupForFox5Fox_t13EventAction_t+0x606>
    4f1a:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    4f1e:	0e 94 15 21 	call	0x422a	; 0x422a <_Z13throttleValueh>
    4f22:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    4f26:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    4f2a:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    4f2e:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    4f32:	09 2e       	mov	r0, r25
    4f34:	00 0c       	add	r0, r0
    4f36:	aa 0b       	sbc	r26, r26
    4f38:	bb 0b       	sbc	r27, r27
    4f3a:	80 93 9f 44 	sts	0x449F, r24	; 0x80449f <_ZL12g_on_the_air>
    4f3e:	90 93 a0 44 	sts	0x44A0, r25	; 0x8044a0 <_ZL12g_on_the_air+0x1>
    4f42:	a0 93 a1 44 	sts	0x44A1, r26	; 0x8044a1 <_ZL12g_on_the_air+0x2>
    4f46:	b0 93 a2 44 	sts	0x44A2, r27	; 0x8044a2 <_ZL12g_on_the_air+0x3>
    4f4a:	81 e0       	ldi	r24, 0x01	; 1
    4f4c:	80 93 22 45 	sts	0x4522, r24	; 0x804522 <g_event_commenced>
    4f50:	81 e0       	ldi	r24, 0x01	; 1
    4f52:	80 93 20 45 	sts	0x4520, r24	; 0x804520 <g_event_enabled>
    4f56:	8d ef       	ldi	r24, 0xFD	; 253
    4f58:	80 93 99 44 	sts	0x4499, r24	; 0x804499 <_ZL18g_last_status_code>
    4f5c:	0e 94 0c 24 	call	0x4818	; 0x4818 <_Z18antennaIsConnectedv>
    4f60:	10 92 57 45 	sts	0x4557, r1	; 0x804557 <g_use_rtc_for_startstop>
    4f64:	81 e0       	ldi	r24, 0x01	; 1
    4f66:	80 93 20 45 	sts	0x4520, r24	; 0x804520 <g_event_enabled>
    4f6a:	04 c0       	rjmp	.+8      	; 0x4f74 <_Z11setupForFox5Fox_t13EventAction_t+0x60e>
    4f6c:	ce 01       	movw	r24, r28
    4f6e:	08 96       	adiw	r24, 0x08	; 8
    4f70:	0e 94 6f 21 	call	0x42de	; 0x42de <_Z11launchEventP2SC>
    4f74:	00 00       	nop
    4f76:	2a 96       	adiw	r28, 0x0a	; 10
    4f78:	cd bf       	out	0x3d, r28	; 61
    4f7a:	de bf       	out	0x3e, r29	; 62
    4f7c:	df 91       	pop	r29
    4f7e:	cf 91       	pop	r28
    4f80:	08 95       	ret

00004f82 <_Z23clockConfigurationCheckv>:
    4f82:	cf 93       	push	r28
    4f84:	df 93       	push	r29
    4f86:	00 d0       	rcall	.+0      	; 0x4f88 <_Z23clockConfigurationCheckv+0x6>
    4f88:	00 d0       	rcall	.+0      	; 0x4f8a <_Z23clockConfigurationCheckv+0x8>
    4f8a:	cd b7       	in	r28, 0x3d	; 61
    4f8c:	de b7       	in	r29, 0x3e	; 62
    4f8e:	80 e0       	ldi	r24, 0x00	; 0
    4f90:	90 e0       	ldi	r25, 0x00	; 0
    4f92:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <time>
    4f96:	dc 01       	movw	r26, r24
    4f98:	cb 01       	movw	r24, r22
    4f9a:	89 83       	std	Y+1, r24	; 0x01
    4f9c:	9a 83       	std	Y+2, r25	; 0x02
    4f9e:	ab 83       	std	Y+3, r26	; 0x03
    4fa0:	bc 83       	std	Y+4, r27	; 0x04
    4fa2:	80 91 1c 45 	lds	r24, 0x451C	; 0x80451c <g_event_finish_epoch>
    4fa6:	90 91 1d 45 	lds	r25, 0x451D	; 0x80451d <g_event_finish_epoch+0x1>
    4faa:	a0 91 1e 45 	lds	r26, 0x451E	; 0x80451e <g_event_finish_epoch+0x2>
    4fae:	b0 91 1f 45 	lds	r27, 0x451F	; 0x80451f <g_event_finish_epoch+0x3>
    4fb2:	81 30       	cpi	r24, 0x01	; 1
    4fb4:	96 46       	sbci	r25, 0x66	; 102
    4fb6:	ae 4e       	sbci	r26, 0xEE	; 238
    4fb8:	bf 45       	sbci	r27, 0x5F	; 95
    4fba:	b0 f0       	brcs	.+44     	; 0x4fe8 <_Z23clockConfigurationCheckv+0x66>
    4fbc:	80 91 18 45 	lds	r24, 0x4518	; 0x804518 <g_event_start_epoch>
    4fc0:	90 91 19 45 	lds	r25, 0x4519	; 0x804519 <g_event_start_epoch+0x1>
    4fc4:	a0 91 1a 45 	lds	r26, 0x451A	; 0x80451a <g_event_start_epoch+0x2>
    4fc8:	b0 91 1b 45 	lds	r27, 0x451B	; 0x80451b <g_event_start_epoch+0x3>
    4fcc:	81 30       	cpi	r24, 0x01	; 1
    4fce:	96 46       	sbci	r25, 0x66	; 102
    4fd0:	ae 4e       	sbci	r26, 0xEE	; 238
    4fd2:	bf 45       	sbci	r27, 0x5F	; 95
    4fd4:	48 f0       	brcs	.+18     	; 0x4fe8 <_Z23clockConfigurationCheckv+0x66>
    4fd6:	89 81       	ldd	r24, Y+1	; 0x01
    4fd8:	9a 81       	ldd	r25, Y+2	; 0x02
    4fda:	ab 81       	ldd	r26, Y+3	; 0x03
    4fdc:	bc 81       	ldd	r27, Y+4	; 0x04
    4fde:	81 30       	cpi	r24, 0x01	; 1
    4fe0:	96 46       	sbci	r25, 0x66	; 102
    4fe2:	ae 4e       	sbci	r26, 0xEE	; 238
    4fe4:	bf 45       	sbci	r27, 0x5F	; 95
    4fe6:	10 f4       	brcc	.+4      	; 0x4fec <_Z23clockConfigurationCheckv+0x6a>
    4fe8:	81 e0       	ldi	r24, 0x01	; 1
    4fea:	01 c0       	rjmp	.+2      	; 0x4fee <_Z23clockConfigurationCheckv+0x6c>
    4fec:	80 e0       	ldi	r24, 0x00	; 0
    4fee:	88 23       	and	r24, r24
    4ff0:	11 f0       	breq	.+4      	; 0x4ff6 <_Z23clockConfigurationCheckv+0x74>
    4ff2:	82 e0       	ldi	r24, 0x02	; 2
    4ff4:	5a c0       	rjmp	.+180    	; 0x50aa <_Z23clockConfigurationCheckv+0x128>
    4ff6:	20 91 1c 45 	lds	r18, 0x451C	; 0x80451c <g_event_finish_epoch>
    4ffa:	30 91 1d 45 	lds	r19, 0x451D	; 0x80451d <g_event_finish_epoch+0x1>
    4ffe:	40 91 1e 45 	lds	r20, 0x451E	; 0x80451e <g_event_finish_epoch+0x2>
    5002:	50 91 1f 45 	lds	r21, 0x451F	; 0x80451f <g_event_finish_epoch+0x3>
    5006:	80 91 18 45 	lds	r24, 0x4518	; 0x804518 <g_event_start_epoch>
    500a:	90 91 19 45 	lds	r25, 0x4519	; 0x804519 <g_event_start_epoch+0x1>
    500e:	a0 91 1a 45 	lds	r26, 0x451A	; 0x80451a <g_event_start_epoch+0x2>
    5012:	b0 91 1b 45 	lds	r27, 0x451B	; 0x80451b <g_event_start_epoch+0x3>
    5016:	61 e0       	ldi	r22, 0x01	; 1
    5018:	82 17       	cp	r24, r18
    501a:	93 07       	cpc	r25, r19
    501c:	a4 07       	cpc	r26, r20
    501e:	b5 07       	cpc	r27, r21
    5020:	08 f4       	brcc	.+2      	; 0x5024 <_Z23clockConfigurationCheckv+0xa2>
    5022:	60 e0       	ldi	r22, 0x00	; 0
    5024:	66 23       	and	r22, r22
    5026:	11 f0       	breq	.+4      	; 0x502c <_Z23clockConfigurationCheckv+0xaa>
    5028:	82 e0       	ldi	r24, 0x02	; 2
    502a:	3f c0       	rjmp	.+126    	; 0x50aa <_Z23clockConfigurationCheckv+0x128>
    502c:	80 91 1c 45 	lds	r24, 0x451C	; 0x80451c <g_event_finish_epoch>
    5030:	90 91 1d 45 	lds	r25, 0x451D	; 0x80451d <g_event_finish_epoch+0x1>
    5034:	a0 91 1e 45 	lds	r26, 0x451E	; 0x80451e <g_event_finish_epoch+0x2>
    5038:	b0 91 1f 45 	lds	r27, 0x451F	; 0x80451f <g_event_finish_epoch+0x3>
    503c:	61 e0       	ldi	r22, 0x01	; 1
    503e:	29 81       	ldd	r18, Y+1	; 0x01
    5040:	3a 81       	ldd	r19, Y+2	; 0x02
    5042:	4b 81       	ldd	r20, Y+3	; 0x03
    5044:	5c 81       	ldd	r21, Y+4	; 0x04
    5046:	82 17       	cp	r24, r18
    5048:	93 07       	cpc	r25, r19
    504a:	a4 07       	cpc	r26, r20
    504c:	b5 07       	cpc	r27, r21
    504e:	08 f0       	brcs	.+2      	; 0x5052 <_Z23clockConfigurationCheckv+0xd0>
    5050:	60 e0       	ldi	r22, 0x00	; 0
    5052:	66 23       	and	r22, r22
    5054:	11 f0       	breq	.+4      	; 0x505a <_Z23clockConfigurationCheckv+0xd8>
    5056:	82 e0       	ldi	r24, 0x02	; 2
    5058:	28 c0       	rjmp	.+80     	; 0x50aa <_Z23clockConfigurationCheckv+0x128>
    505a:	80 91 18 45 	lds	r24, 0x4518	; 0x804518 <g_event_start_epoch>
    505e:	90 91 19 45 	lds	r25, 0x4519	; 0x804519 <g_event_start_epoch+0x1>
    5062:	a0 91 1a 45 	lds	r26, 0x451A	; 0x80451a <g_event_start_epoch+0x2>
    5066:	b0 91 1b 45 	lds	r27, 0x451B	; 0x80451b <g_event_start_epoch+0x3>
    506a:	61 e0       	ldi	r22, 0x01	; 1
    506c:	29 81       	ldd	r18, Y+1	; 0x01
    506e:	3a 81       	ldd	r19, Y+2	; 0x02
    5070:	4b 81       	ldd	r20, Y+3	; 0x03
    5072:	5c 81       	ldd	r21, Y+4	; 0x04
    5074:	82 17       	cp	r24, r18
    5076:	93 07       	cpc	r25, r19
    5078:	a4 07       	cpc	r26, r20
    507a:	b5 07       	cpc	r27, r21
    507c:	08 f0       	brcs	.+2      	; 0x5080 <_Z23clockConfigurationCheckv+0xfe>
    507e:	60 e0       	ldi	r22, 0x00	; 0
    5080:	66 23       	and	r22, r22
    5082:	51 f0       	breq	.+20     	; 0x5098 <_Z23clockConfigurationCheckv+0x116>
    5084:	90 91 20 45 	lds	r25, 0x4520	; 0x804520 <g_event_enabled>
    5088:	81 e0       	ldi	r24, 0x01	; 1
    508a:	89 27       	eor	r24, r25
    508c:	88 23       	and	r24, r24
    508e:	11 f0       	breq	.+4      	; 0x5094 <_Z23clockConfigurationCheckv+0x112>
    5090:	83 e0       	ldi	r24, 0x03	; 3
    5092:	0b c0       	rjmp	.+22     	; 0x50aa <_Z23clockConfigurationCheckv+0x128>
    5094:	85 e0       	ldi	r24, 0x05	; 5
    5096:	09 c0       	rjmp	.+18     	; 0x50aa <_Z23clockConfigurationCheckv+0x128>
    5098:	90 91 57 45 	lds	r25, 0x4557	; 0x804557 <g_use_rtc_for_startstop>
    509c:	81 e0       	ldi	r24, 0x01	; 1
    509e:	89 27       	eor	r24, r25
    50a0:	88 23       	and	r24, r24
    50a2:	11 f0       	breq	.+4      	; 0x50a8 <_Z23clockConfigurationCheckv+0x126>
    50a4:	84 e0       	ldi	r24, 0x04	; 4
    50a6:	01 c0       	rjmp	.+2      	; 0x50aa <_Z23clockConfigurationCheckv+0x128>
    50a8:	81 e0       	ldi	r24, 0x01	; 1
    50aa:	24 96       	adiw	r28, 0x04	; 4
    50ac:	cd bf       	out	0x3d, r28	; 61
    50ae:	de bf       	out	0x3e, r29	; 62
    50b0:	df 91       	pop	r29
    50b2:	cf 91       	pop	r28
    50b4:	08 95       	ret

000050b6 <_Z15timeNeededForIDv>:

uint16_t timeNeededForID(void)
{
    50b6:	cf 93       	push	r28
    50b8:	df 93       	push	r29
    50ba:	cd b7       	in	r28, 0x3d	; 61
    50bc:	de b7       	in	r29, 0x3e	; 62
	return((uint16_t)(((float)timeRequiredToSendStrAtWPM((char*)g_messages_text[STATION_ID], g_id_codespeed)) / 1000.));
    50be:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    50c2:	88 2f       	mov	r24, r24
    50c4:	90 e0       	ldi	r25, 0x00	; 0
    50c6:	bc 01       	movw	r22, r24
    50c8:	8f ef       	ldi	r24, 0xFF	; 255
    50ca:	94 e4       	ldi	r25, 0x44	; 68
    50cc:	0e 94 0d 59 	call	0xb21a	; 0xb21a <_Z26timeRequiredToSendStrAtWPMPcj>
    50d0:	cc 01       	movw	r24, r24
    50d2:	a0 e0       	ldi	r26, 0x00	; 0
    50d4:	b0 e0       	ldi	r27, 0x00	; 0
    50d6:	bc 01       	movw	r22, r24
    50d8:	cd 01       	movw	r24, r26
    50da:	0e 94 77 73 	call	0xe6ee	; 0xe6ee <__floatunsisf>
    50de:	dc 01       	movw	r26, r24
    50e0:	cb 01       	movw	r24, r22
    50e2:	20 e0       	ldi	r18, 0x00	; 0
    50e4:	30 e0       	ldi	r19, 0x00	; 0
    50e6:	4a e7       	ldi	r20, 0x7A	; 122
    50e8:	54 e4       	ldi	r21, 0x44	; 68
    50ea:	bc 01       	movw	r22, r24
    50ec:	cd 01       	movw	r24, r26
    50ee:	0e 94 cf 72 	call	0xe59e	; 0xe59e <__divsf3>
    50f2:	dc 01       	movw	r26, r24
    50f4:	cb 01       	movw	r24, r22
    50f6:	bc 01       	movw	r22, r24
    50f8:	cd 01       	movw	r24, r26
    50fa:	0e 94 48 73 	call	0xe690	; 0xe690 <__fixunssfsi>
    50fe:	dc 01       	movw	r26, r24
    5100:	cb 01       	movw	r24, r22
}
    5102:	df 91       	pop	r29
    5104:	cf 91       	pop	r28
    5106:	08 95       	ret

00005108 <_Z13getFoxSettingv>:

Fox_t getFoxSetting(void)
{
    5108:	cf 93       	push	r28
    510a:	df 93       	push	r29
    510c:	1f 92       	push	r1
    510e:	cd b7       	in	r28, 0x3d	; 61
    5110:	de b7       	in	r29, 0x3e	; 62
	Fox_t fox;
	
	if(g_event == EVENT_FOXORING)
    5112:	80 91 71 45 	lds	r24, 0x4571	; 0x804571 <g_event>
    5116:	81 30       	cpi	r24, 0x01	; 1
    5118:	c9 f4       	brne	.+50     	; 0x514c <_Z13getFoxSettingv+0x44>
	{
		switch(g_foxoring_fox)
    511a:	80 91 34 40 	lds	r24, 0x4034	; 0x804034 <g_foxoring_fox>
    511e:	88 2f       	mov	r24, r24
    5120:	90 e0       	ldi	r25, 0x00	; 0
    5122:	83 31       	cpi	r24, 0x13	; 19
    5124:	91 05       	cpc	r25, r1
    5126:	41 f0       	breq	.+16     	; 0x5138 <_Z13getFoxSettingv+0x30>
    5128:	84 31       	cpi	r24, 0x14	; 20
    512a:	91 05       	cpc	r25, r1
    512c:	41 f0       	breq	.+16     	; 0x513e <_Z13getFoxSettingv+0x36>
    512e:	42 97       	sbiw	r24, 0x12	; 18
    5130:	49 f4       	brne	.+18     	; 0x5144 <_Z13getFoxSettingv+0x3c>
		{
			case FOXORING_EVENT_FOXA:
			{
				fox = FOXORING_EVENT_FOXA;
    5132:	82 e1       	ldi	r24, 0x12	; 18
    5134:	89 83       	std	Y+1, r24	; 0x01
			}
			break;
    5136:	0d c0       	rjmp	.+26     	; 0x5152 <_Z13getFoxSettingv+0x4a>
			
			case FOXORING_EVENT_FOXB:
			{
				fox = FOXORING_EVENT_FOXB;
    5138:	83 e1       	ldi	r24, 0x13	; 19
    513a:	89 83       	std	Y+1, r24	; 0x01
			}
			break;
    513c:	0a c0       	rjmp	.+20     	; 0x5152 <_Z13getFoxSettingv+0x4a>
			
			case FOXORING_EVENT_FOXC:
			{
				fox = FOXORING_EVENT_FOXC;
    513e:	84 e1       	ldi	r24, 0x14	; 20
    5140:	89 83       	std	Y+1, r24	; 0x01
			}
			break;
    5142:	07 c0       	rjmp	.+14     	; 0x5152 <_Z13getFoxSettingv+0x4a>
			
			default:
			{
				fox = INVALID_FOX;
    5144:	85 e1       	ldi	r24, 0x15	; 21
    5146:	89 83       	std	Y+1, r24	; 0x01
			}
			break;
    5148:	00 00       	nop
    514a:	03 c0       	rjmp	.+6      	; 0x5152 <_Z13getFoxSettingv+0x4a>
		}
	}
	else
	{
		fox = g_fox;
    514c:	80 91 1e 40 	lds	r24, 0x401E	; 0x80401e <g_fox>
    5150:	89 83       	std	Y+1, r24	; 0x01
	}
	
	return fox;
    5152:	89 81       	ldd	r24, Y+1	; 0x01
}
    5154:	0f 90       	pop	r0
    5156:	df 91       	pop	r29
    5158:	cf 91       	pop	r28
    515a:	08 95       	ret

0000515c <_Z14getPatternTextv>:

char* getPatternText(void)
{
    515c:	cf 93       	push	r28
    515e:	df 93       	push	r29
    5160:	00 d0       	rcall	.+0      	; 0x5162 <_Z14getPatternTextv+0x6>
    5162:	cd b7       	in	r28, 0x3d	; 61
    5164:	de b7       	in	r29, 0x3e	; 62
	char* txt = NULL;
    5166:	19 82       	std	Y+1, r1	; 0x01
    5168:	1a 82       	std	Y+2, r1	; 0x02
		
	if(g_event == EVENT_FOXORING)
    516a:	80 91 71 45 	lds	r24, 0x4571	; 0x804571 <g_event>
    516e:	81 30       	cpi	r24, 0x01	; 1
    5170:	09 f5       	brne	.+66     	; 0x51b4 <_Z14getPatternTextv+0x58>
	{
		switch(g_foxoring_fox)
    5172:	80 91 34 40 	lds	r24, 0x4034	; 0x804034 <g_foxoring_fox>
    5176:	88 2f       	mov	r24, r24
    5178:	90 e0       	ldi	r25, 0x00	; 0
    517a:	83 31       	cpi	r24, 0x13	; 19
    517c:	91 05       	cpc	r25, r1
    517e:	51 f0       	breq	.+20     	; 0x5194 <_Z14getPatternTextv+0x38>
    5180:	84 31       	cpi	r24, 0x14	; 20
    5182:	91 05       	cpc	r25, r1
    5184:	61 f0       	breq	.+24     	; 0x519e <_Z14getPatternTextv+0x42>
    5186:	42 97       	sbiw	r24, 0x12	; 18
    5188:	79 f4       	brne	.+30     	; 0x51a8 <_Z14getPatternTextv+0x4c>
		{
			case FOXORING_EVENT_FOXA:
			{
				txt = g_messages_text[FOXA_PATTERN_TEXT];
    518a:	80 ec       	ldi	r24, 0xC0	; 192
    518c:	94 e4       	ldi	r25, 0x44	; 68
    518e:	89 83       	std	Y+1, r24	; 0x01
    5190:	9a 83       	std	Y+2, r25	; 0x02
			}
			break;
    5192:	14 c0       	rjmp	.+40     	; 0x51bc <_Z14getPatternTextv+0x60>
				
			case FOXORING_EVENT_FOXB:
			{
				txt = g_messages_text[FOXB_PATTERN_TEXT];
    5194:	85 ed       	ldi	r24, 0xD5	; 213
    5196:	94 e4       	ldi	r25, 0x44	; 68
    5198:	89 83       	std	Y+1, r24	; 0x01
    519a:	9a 83       	std	Y+2, r25	; 0x02
			}
			break;
    519c:	0f c0       	rjmp	.+30     	; 0x51bc <_Z14getPatternTextv+0x60>
				
			case FOXORING_EVENT_FOXC:
			{
				txt = g_messages_text[FOXC_PATTERN_TEXT];
    519e:	8a ee       	ldi	r24, 0xEA	; 234
    51a0:	94 e4       	ldi	r25, 0x44	; 68
    51a2:	89 83       	std	Y+1, r24	; 0x01
    51a4:	9a 83       	std	Y+2, r25	; 0x02
			}
			break;
    51a6:	0a c0       	rjmp	.+20     	; 0x51bc <_Z14getPatternTextv+0x60>
				
			default:
			{
				txt = g_messages_text[FOXA_PATTERN_TEXT];
    51a8:	80 ec       	ldi	r24, 0xC0	; 192
    51aa:	94 e4       	ldi	r25, 0x44	; 68
    51ac:	89 83       	std	Y+1, r24	; 0x01
    51ae:	9a 83       	std	Y+2, r25	; 0x02
			}
			break;
    51b0:	00 00       	nop
    51b2:	04 c0       	rjmp	.+8      	; 0x51bc <_Z14getPatternTextv+0x60>
		}
	}
	else
	{
		txt = g_messages_text[PATTERN_TEXT];
    51b4:	8b ea       	ldi	r24, 0xAB	; 171
    51b6:	94 e4       	ldi	r25, 0x44	; 68
    51b8:	89 83       	std	Y+1, r24	; 0x01
    51ba:	9a 83       	std	Y+2, r25	; 0x02
	}
	
	return txt;
    51bc:	89 81       	ldd	r24, Y+1	; 0x01
    51be:	9a 81       	ldd	r25, Y+2	; 0x02
}
    51c0:	0f 90       	pop	r0
    51c2:	0f 90       	pop	r0
    51c4:	df 91       	pop	r29
    51c6:	cf 91       	pop	r28
    51c8:	08 95       	ret

000051ca <_Z19getFrequencySettingv>:

Frequency_Hz getFrequencySetting(void)
{
    51ca:	cf 93       	push	r28
    51cc:	df 93       	push	r29
    51ce:	00 d0       	rcall	.+0      	; 0x51d0 <_Z19getFrequencySettingv+0x6>
    51d0:	00 d0       	rcall	.+0      	; 0x51d2 <_Z19getFrequencySettingv+0x8>
    51d2:	cd b7       	in	r28, 0x3d	; 61
    51d4:	de b7       	in	r29, 0x3e	; 62
	Frequency_Hz freq;
		
	if(g_event == EVENT_FOXORING)
    51d6:	80 91 71 45 	lds	r24, 0x4571	; 0x804571 <g_event>
    51da:	81 30       	cpi	r24, 0x01	; 1
    51dc:	e9 f5       	brne	.+122    	; 0x5258 <_Z19getFrequencySettingv+0x8e>
	{
		switch(g_foxoring_fox)
    51de:	80 91 34 40 	lds	r24, 0x4034	; 0x804034 <g_foxoring_fox>
    51e2:	88 2f       	mov	r24, r24
    51e4:	90 e0       	ldi	r25, 0x00	; 0
    51e6:	83 31       	cpi	r24, 0x13	; 19
    51e8:	91 05       	cpc	r25, r1
    51ea:	91 f0       	breq	.+36     	; 0x5210 <_Z19getFrequencySettingv+0x46>
    51ec:	84 31       	cpi	r24, 0x14	; 20
    51ee:	91 05       	cpc	r25, r1
    51f0:	e1 f0       	breq	.+56     	; 0x522a <_Z19getFrequencySettingv+0x60>
    51f2:	42 97       	sbiw	r24, 0x12	; 18
    51f4:	39 f5       	brne	.+78     	; 0x5244 <_Z19getFrequencySettingv+0x7a>
		{
			case FOXORING_EVENT_FOXA:
			{
				freq = g_foxoring_frequencyA;
    51f6:	80 91 28 40 	lds	r24, 0x4028	; 0x804028 <g_foxoring_frequencyA>
    51fa:	90 91 29 40 	lds	r25, 0x4029	; 0x804029 <g_foxoring_frequencyA+0x1>
    51fe:	a0 91 2a 40 	lds	r26, 0x402A	; 0x80402a <g_foxoring_frequencyA+0x2>
    5202:	b0 91 2b 40 	lds	r27, 0x402B	; 0x80402b <g_foxoring_frequencyA+0x3>
    5206:	89 83       	std	Y+1, r24	; 0x01
    5208:	9a 83       	std	Y+2, r25	; 0x02
    520a:	ab 83       	std	Y+3, r26	; 0x03
    520c:	bc 83       	std	Y+4, r27	; 0x04
			}
			break;
    520e:	30 c0       	rjmp	.+96     	; 0x5270 <_Z19getFrequencySettingv+0xa6>
				
			case FOXORING_EVENT_FOXB:
			{
				freq = g_foxoring_frequencyB;
    5210:	80 91 2c 40 	lds	r24, 0x402C	; 0x80402c <g_foxoring_frequencyB>
    5214:	90 91 2d 40 	lds	r25, 0x402D	; 0x80402d <g_foxoring_frequencyB+0x1>
    5218:	a0 91 2e 40 	lds	r26, 0x402E	; 0x80402e <g_foxoring_frequencyB+0x2>
    521c:	b0 91 2f 40 	lds	r27, 0x402F	; 0x80402f <g_foxoring_frequencyB+0x3>
    5220:	89 83       	std	Y+1, r24	; 0x01
    5222:	9a 83       	std	Y+2, r25	; 0x02
    5224:	ab 83       	std	Y+3, r26	; 0x03
    5226:	bc 83       	std	Y+4, r27	; 0x04
			}
			break;
    5228:	23 c0       	rjmp	.+70     	; 0x5270 <_Z19getFrequencySettingv+0xa6>
				
			case FOXORING_EVENT_FOXC:
			{
				freq = g_foxoring_frequencyC;
    522a:	80 91 30 40 	lds	r24, 0x4030	; 0x804030 <g_foxoring_frequencyC>
    522e:	90 91 31 40 	lds	r25, 0x4031	; 0x804031 <g_foxoring_frequencyC+0x1>
    5232:	a0 91 32 40 	lds	r26, 0x4032	; 0x804032 <g_foxoring_frequencyC+0x2>
    5236:	b0 91 33 40 	lds	r27, 0x4033	; 0x804033 <g_foxoring_frequencyC+0x3>
    523a:	89 83       	std	Y+1, r24	; 0x01
    523c:	9a 83       	std	Y+2, r25	; 0x02
    523e:	ab 83       	std	Y+3, r26	; 0x03
    5240:	bc 83       	std	Y+4, r27	; 0x04
			}
			break;
    5242:	16 c0       	rjmp	.+44     	; 0x5270 <_Z19getFrequencySettingv+0xa6>
				
			default:
			{
				freq = EEPROM_FOXORING_FREQUENCYA_DEFAULT;
    5244:	80 e0       	ldi	r24, 0x00	; 0
    5246:	96 eb       	ldi	r25, 0xB6	; 182
    5248:	a5 e3       	ldi	r26, 0x35	; 53
    524a:	b0 e0       	ldi	r27, 0x00	; 0
    524c:	89 83       	std	Y+1, r24	; 0x01
    524e:	9a 83       	std	Y+2, r25	; 0x02
    5250:	ab 83       	std	Y+3, r26	; 0x03
    5252:	bc 83       	std	Y+4, r27	; 0x04
			}
			break;
    5254:	00 00       	nop
    5256:	0c c0       	rjmp	.+24     	; 0x5270 <_Z19getFrequencySettingv+0xa6>
		}
	}
	else
	{
		freq = g_80m_frequency;
    5258:	80 91 50 40 	lds	r24, 0x4050	; 0x804050 <g_80m_frequency>
    525c:	90 91 51 40 	lds	r25, 0x4051	; 0x804051 <g_80m_frequency+0x1>
    5260:	a0 91 52 40 	lds	r26, 0x4052	; 0x804052 <g_80m_frequency+0x2>
    5264:	b0 91 53 40 	lds	r27, 0x4053	; 0x804053 <g_80m_frequency+0x3>
    5268:	89 83       	std	Y+1, r24	; 0x01
    526a:	9a 83       	std	Y+2, r25	; 0x02
    526c:	ab 83       	std	Y+3, r26	; 0x03
    526e:	bc 83       	std	Y+4, r27	; 0x04
	}

	return(freq);
    5270:	89 81       	ldd	r24, Y+1	; 0x01
    5272:	9a 81       	ldd	r25, Y+2	; 0x02
    5274:	ab 81       	ldd	r26, Y+3	; 0x03
    5276:	bc 81       	ldd	r27, Y+4	; 0x04
}
    5278:	bc 01       	movw	r22, r24
    527a:	cd 01       	movw	r24, r26
    527c:	24 96       	adiw	r28, 0x04	; 4
    527e:	cd bf       	out	0x3d, r28	; 61
    5280:	de bf       	out	0x3e, r29	; 62
    5282:	df 91       	pop	r29
    5284:	cf 91       	pop	r28
    5286:	08 95       	ret

00005288 <_Z14eventScheduledv>:

bool eventScheduled(void)
{
    5288:	cf 93       	push	r28
    528a:	df 93       	push	r29
    528c:	cd b7       	in	r28, 0x3d	; 61
    528e:	de b7       	in	r29, 0x3e	; 62
    5290:	25 97       	sbiw	r28, 0x05	; 5
    5292:	cd bf       	out	0x3d, r28	; 61
    5294:	de bf       	out	0x3e, r29	; 62
	set_system_time(ds3231_get_epoch(null));
    5296:	80 e0       	ldi	r24, 0x00	; 0
    5298:	90 e0       	ldi	r25, 0x00	; 0
    529a:	0e 94 94 35 	call	0x6b28	; 0x6b28 <ds3231_get_epoch>
    529e:	dc 01       	movw	r26, r24
    52a0:	cb 01       	movw	r24, r22
    52a2:	bc 01       	movw	r22, r24
    52a4:	cd 01       	movw	r24, r26
    52a6:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <set_system_time>
	time_t now = time(null);	
    52aa:	80 e0       	ldi	r24, 0x00	; 0
    52ac:	90 e0       	ldi	r25, 0x00	; 0
    52ae:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <time>
    52b2:	dc 01       	movw	r26, r24
    52b4:	cb 01       	movw	r24, r22
    52b6:	89 83       	std	Y+1, r24	; 0x01
    52b8:	9a 83       	std	Y+2, r25	; 0x02
    52ba:	ab 83       	std	Y+3, r26	; 0x03
    52bc:	bc 83       	std	Y+4, r27	; 0x04
	bool result = ((now > MINIMUM_VALID_EPOCH) && (g_event_start_epoch > now) && (g_event_finish_epoch > g_event_start_epoch));
    52be:	89 81       	ldd	r24, Y+1	; 0x01
    52c0:	9a 81       	ldd	r25, Y+2	; 0x02
    52c2:	ab 81       	ldd	r26, Y+3	; 0x03
    52c4:	bc 81       	ldd	r27, Y+4	; 0x04
    52c6:	81 30       	cpi	r24, 0x01	; 1
    52c8:	96 46       	sbci	r25, 0x66	; 102
    52ca:	ae 4e       	sbci	r26, 0xEE	; 238
    52cc:	bf 45       	sbci	r27, 0x5F	; 95
    52ce:	40 f1       	brcs	.+80     	; 0x5320 <_Z14eventScheduledv+0x98>
    52d0:	20 91 18 45 	lds	r18, 0x4518	; 0x804518 <g_event_start_epoch>
    52d4:	30 91 19 45 	lds	r19, 0x4519	; 0x804519 <g_event_start_epoch+0x1>
    52d8:	40 91 1a 45 	lds	r20, 0x451A	; 0x80451a <g_event_start_epoch+0x2>
    52dc:	50 91 1b 45 	lds	r21, 0x451B	; 0x80451b <g_event_start_epoch+0x3>
    52e0:	89 81       	ldd	r24, Y+1	; 0x01
    52e2:	9a 81       	ldd	r25, Y+2	; 0x02
    52e4:	ab 81       	ldd	r26, Y+3	; 0x03
    52e6:	bc 81       	ldd	r27, Y+4	; 0x04
    52e8:	82 17       	cp	r24, r18
    52ea:	93 07       	cpc	r25, r19
    52ec:	a4 07       	cpc	r26, r20
    52ee:	b5 07       	cpc	r27, r21
    52f0:	b8 f4       	brcc	.+46     	; 0x5320 <_Z14eventScheduledv+0x98>
    52f2:	20 91 1c 45 	lds	r18, 0x451C	; 0x80451c <g_event_finish_epoch>
    52f6:	30 91 1d 45 	lds	r19, 0x451D	; 0x80451d <g_event_finish_epoch+0x1>
    52fa:	40 91 1e 45 	lds	r20, 0x451E	; 0x80451e <g_event_finish_epoch+0x2>
    52fe:	50 91 1f 45 	lds	r21, 0x451F	; 0x80451f <g_event_finish_epoch+0x3>
    5302:	80 91 18 45 	lds	r24, 0x4518	; 0x804518 <g_event_start_epoch>
    5306:	90 91 19 45 	lds	r25, 0x4519	; 0x804519 <g_event_start_epoch+0x1>
    530a:	a0 91 1a 45 	lds	r26, 0x451A	; 0x80451a <g_event_start_epoch+0x2>
    530e:	b0 91 1b 45 	lds	r27, 0x451B	; 0x80451b <g_event_start_epoch+0x3>
    5312:	82 17       	cp	r24, r18
    5314:	93 07       	cpc	r25, r19
    5316:	a4 07       	cpc	r26, r20
    5318:	b5 07       	cpc	r27, r21
    531a:	10 f4       	brcc	.+4      	; 0x5320 <_Z14eventScheduledv+0x98>
    531c:	81 e0       	ldi	r24, 0x01	; 1
    531e:	01 c0       	rjmp	.+2      	; 0x5322 <_Z14eventScheduledv+0x9a>
    5320:	80 e0       	ldi	r24, 0x00	; 0
    5322:	8d 83       	std	Y+5, r24	; 0x05
	return(result);
    5324:	8d 81       	ldd	r24, Y+5	; 0x05
    5326:	25 96       	adiw	r28, 0x05	; 5
    5328:	cd bf       	out	0x3d, r28	; 61
    532a:	de bf       	out	0x3e, r29	; 62
    532c:	df 91       	pop	r29
    532e:	cf 91       	pop	r28
    5330:	08 95       	ret

00005332 <_Z41__static_initialization_and_destruction_0ii>:
    5332:	cf 93       	push	r28
    5334:	df 93       	push	r29
    5336:	00 d0       	rcall	.+0      	; 0x5338 <_Z41__static_initialization_and_destruction_0ii+0x6>
    5338:	00 d0       	rcall	.+0      	; 0x533a <_Z41__static_initialization_and_destruction_0ii+0x8>
    533a:	cd b7       	in	r28, 0x3d	; 61
    533c:	de b7       	in	r29, 0x3e	; 62
    533e:	89 83       	std	Y+1, r24	; 0x01
    5340:	9a 83       	std	Y+2, r25	; 0x02
    5342:	6b 83       	std	Y+3, r22	; 0x03
    5344:	7c 83       	std	Y+4, r23	; 0x04
    5346:	89 81       	ldd	r24, Y+1	; 0x01
    5348:	9a 81       	ldd	r25, Y+2	; 0x02
    534a:	01 97       	sbiw	r24, 0x01	; 1
    534c:	91 f4       	brne	.+36     	; 0x5372 <_Z41__static_initialization_and_destruction_0ii+0x40>
    534e:	8b 81       	ldd	r24, Y+3	; 0x03
    5350:	9c 81       	ldd	r25, Y+4	; 0x04
    5352:	01 96       	adiw	r24, 0x01	; 1
    5354:	71 f4       	brne	.+28     	; 0x5372 <_Z41__static_initialization_and_destruction_0ii+0x40>

Enunciation_t g_enunciator = LED_ONLY;

uint16_t g_Event_Configuration_Check = 0;

leds LEDS = leds();
    5356:	82 e4       	ldi	r24, 0x42	; 66
    5358:	95 e4       	ldi	r25, 0x45	; 69
    535a:	0e 94 b3 4c 	call	0x9966	; 0x9966 <_ZN4ledsC1Ev>
CircularStringBuff g_text_buff = CircularStringBuff(TEXT_BUFF_SIZE);
    535e:	62 e3       	ldi	r22, 0x32	; 50
    5360:	70 e0       	ldi	r23, 0x00	; 0
    5362:	83 e4       	ldi	r24, 0x43	; 67
    5364:	95 e4       	ldi	r25, 0x45	; 69
    5366:	0e 94 c1 31 	call	0x6382	; 0x6382 <_ZN18CircularStringBuffC1Ej>

EepromManager g_ee_mgr;
    536a:	8c e4       	ldi	r24, 0x4C	; 76
    536c:	95 e4       	ldi	r25, 0x45	; 69
    536e:	0e 94 50 39 	call	0x72a0	; 0x72a0 <_ZN13EepromManagerC1Ev>
    5372:	89 81       	ldd	r24, Y+1	; 0x01
    5374:	9a 81       	ldd	r25, Y+2	; 0x02
    5376:	89 2b       	or	r24, r25
    5378:	81 f4       	brne	.+32     	; 0x539a <_Z41__static_initialization_and_destruction_0ii+0x68>
    537a:	8b 81       	ldd	r24, Y+3	; 0x03
    537c:	9c 81       	ldd	r25, Y+4	; 0x04
    537e:	01 96       	adiw	r24, 0x01	; 1
    5380:	61 f4       	brne	.+24     	; 0x539a <_Z41__static_initialization_and_destruction_0ii+0x68>
    5382:	8c e4       	ldi	r24, 0x4C	; 76
    5384:	95 e4       	ldi	r25, 0x45	; 69
    5386:	0e 94 5d 39 	call	0x72ba	; 0x72ba <_ZN13EepromManagerD1Ev>
Enunciation_t g_enunciator = LED_ONLY;

uint16_t g_Event_Configuration_Check = 0;

leds LEDS = leds();
CircularStringBuff g_text_buff = CircularStringBuff(TEXT_BUFF_SIZE);
    538a:	83 e4       	ldi	r24, 0x43	; 67
    538c:	95 e4       	ldi	r25, 0x45	; 69
    538e:	0e 94 f1 31 	call	0x63e2	; 0x63e2 <_ZN18CircularStringBuffD1Ev>

Enunciation_t g_enunciator = LED_ONLY;

uint16_t g_Event_Configuration_Check = 0;

leds LEDS = leds();
    5392:	82 e4       	ldi	r24, 0x42	; 66
    5394:	95 e4       	ldi	r25, 0x45	; 69
    5396:	0e 94 c0 4c 	call	0x9980	; 0x9980 <_ZN4ledsD1Ev>
{
	set_system_time(ds3231_get_epoch(null));
	time_t now = time(null);	
	bool result = ((now > MINIMUM_VALID_EPOCH) && (g_event_start_epoch > now) && (g_event_finish_epoch > g_event_start_epoch));
	return(result);
    539a:	00 00       	nop
    539c:	24 96       	adiw	r28, 0x04	; 4
    539e:	cd bf       	out	0x3d, r28	; 61
    53a0:	de bf       	out	0x3e, r29	; 62
    53a2:	df 91       	pop	r29
    53a4:	cf 91       	pop	r28
    53a6:	08 95       	ret

000053a8 <_GLOBAL__sub_I_g_antenna_connect_state>:
    53a8:	cf 93       	push	r28
    53aa:	df 93       	push	r29
    53ac:	cd b7       	in	r28, 0x3d	; 61
    53ae:	de b7       	in	r29, 0x3e	; 62
    53b0:	6f ef       	ldi	r22, 0xFF	; 255
    53b2:	7f ef       	ldi	r23, 0xFF	; 255
    53b4:	81 e0       	ldi	r24, 0x01	; 1
    53b6:	90 e0       	ldi	r25, 0x00	; 0
    53b8:	0e 94 99 29 	call	0x5332	; 0x5332 <_Z41__static_initialization_and_destruction_0ii>
    53bc:	df 91       	pop	r29
    53be:	cf 91       	pop	r28
    53c0:	08 95       	ret

000053c2 <_GLOBAL__sub_D_g_antenna_connect_state>:
    53c2:	cf 93       	push	r28
    53c4:	df 93       	push	r29
    53c6:	cd b7       	in	r28, 0x3d	; 61
    53c8:	de b7       	in	r29, 0x3e	; 62
    53ca:	6f ef       	ldi	r22, 0xFF	; 255
    53cc:	7f ef       	ldi	r23, 0xFF	; 255
    53ce:	80 e0       	ldi	r24, 0x00	; 0
    53d0:	90 e0       	ldi	r25, 0x00	; 0
    53d2:	0e 94 99 29 	call	0x5332	; 0x5332 <_Z41__static_initialization_and_destruction_0ii>
    53d6:	df 91       	pop	r29
    53d8:	cf 91       	pop	r28
    53da:	08 95       	ret

000053dc <_Z18ADC0_setADCChannel20ADC_Active_Channel_t>:
	} ADC_Init_t;
	
static ADC_Init_t g_adc_initialization = ADC_NOT_INITIALIZED;

void ADC0_setADCChannel(ADC_Active_Channel_t chan)
{
    53dc:	cf 93       	push	r28
    53de:	df 93       	push	r29
    53e0:	1f 92       	push	r1
    53e2:	cd b7       	in	r28, 0x3d	; 61
    53e4:	de b7       	in	r29, 0x3e	; 62
    53e6:	89 83       	std	Y+1, r24	; 0x01
	switch(chan)
    53e8:	89 81       	ldd	r24, Y+1	; 0x01
    53ea:	88 2f       	mov	r24, r24
    53ec:	90 e0       	ldi	r25, 0x00	; 0
    53ee:	82 30       	cpi	r24, 0x02	; 2
    53f0:	91 05       	cpc	r25, r1
    53f2:	41 f1       	breq	.+80     	; 0x5444 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x68>
    53f4:	83 30       	cpi	r24, 0x03	; 3
    53f6:	91 05       	cpc	r25, r1
    53f8:	2c f4       	brge	.+10     	; 0x5404 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x28>
    53fa:	00 97       	sbiw	r24, 0x00	; 0
    53fc:	49 f0       	breq	.+18     	; 0x5410 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x34>
    53fe:	01 97       	sbiw	r24, 0x01	; 1
    5400:	a1 f0       	breq	.+40     	; 0x542a <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x4e>
    5402:	47 c0       	rjmp	.+142    	; 0x5492 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0xb6>
    5404:	83 30       	cpi	r24, 0x03	; 3
    5406:	91 05       	cpc	r25, r1
    5408:	51 f1       	breq	.+84     	; 0x545e <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x82>
    540a:	04 97       	sbiw	r24, 0x04	; 4
    540c:	a9 f1       	breq	.+106    	; 0x5478 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x9c>
    540e:	41 c0       	rjmp	.+130    	; 0x5492 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0xb6>
	{
		case ADCAudioInput:
		{
			if(g_adc_initialization != ADC_FREE_RUN_INITIALIZED)
    5410:	80 91 6f 45 	lds	r24, 0x456F	; 0x80456f <_ZL20g_adc_initialization>
    5414:	81 30       	cpi	r24, 0x01	; 1
    5416:	19 f0       	breq	.+6      	; 0x541e <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x42>
			{
				ADC0_SYSTEM_init(FREE_RUNNING); 
    5418:	81 e0       	ldi	r24, 0x01	; 1
    541a:	0e 94 ef 2b 	call	0x57de	; 0x57de <_ZL16ADC0_SYSTEM_initb>
			}
			
			ADC0.MUXPOS = ADC_MUXPOS_AIN2_gc;
    541e:	80 e0       	ldi	r24, 0x00	; 0
    5420:	96 e0       	ldi	r25, 0x06	; 6
    5422:	22 e0       	ldi	r18, 0x02	; 2
    5424:	fc 01       	movw	r30, r24
    5426:	20 87       	std	Z+8, r18	; 0x08
		}
		break;
    5428:	37 c0       	rjmp	.+110    	; 0x5498 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0xbc>
		
		case ADCExternalBatteryVoltage:
		{
			if(g_adc_initialization != ADC_SINGLE_CONVERSION_INITIALIZED)
    542a:	80 91 6f 45 	lds	r24, 0x456F	; 0x80456f <_ZL20g_adc_initialization>
    542e:	82 30       	cpi	r24, 0x02	; 2
    5430:	19 f0       	breq	.+6      	; 0x5438 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x5c>
			{
				ADC0_SYSTEM_init(SINGLE_CONVERSION);
    5432:	80 e0       	ldi	r24, 0x00	; 0
    5434:	0e 94 ef 2b 	call	0x57de	; 0x57de <_ZL16ADC0_SYSTEM_initb>
			}
			
			ADC0.MUXPOS = ADC_MUXPOS_AIN3_gc;
    5438:	80 e0       	ldi	r24, 0x00	; 0
    543a:	96 e0       	ldi	r25, 0x06	; 6
    543c:	23 e0       	ldi	r18, 0x03	; 3
    543e:	fc 01       	movw	r30, r24
    5440:	20 87       	std	Z+8, r18	; 0x08
		}
		break;
    5442:	2a c0       	rjmp	.+84     	; 0x5498 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0xbc>
		
		case ADC12VRegulatedVoltage:
		{
			if(g_adc_initialization != ADC_SINGLE_CONVERSION_INITIALIZED)
    5444:	80 91 6f 45 	lds	r24, 0x456F	; 0x80456f <_ZL20g_adc_initialization>
    5448:	82 30       	cpi	r24, 0x02	; 2
    544a:	19 f0       	breq	.+6      	; 0x5452 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x76>
			{
				ADC0_SYSTEM_init(SINGLE_CONVERSION);
    544c:	80 e0       	ldi	r24, 0x00	; 0
    544e:	0e 94 ef 2b 	call	0x57de	; 0x57de <_ZL16ADC0_SYSTEM_initb>
			}
			
			ADC0.MUXPOS = ADC_MUXPOS_AIN4_gc;
    5452:	80 e0       	ldi	r24, 0x00	; 0
    5454:	96 e0       	ldi	r25, 0x06	; 6
    5456:	24 e0       	ldi	r18, 0x04	; 4
    5458:	fc 01       	movw	r30, r24
    545a:	20 87       	std	Z+8, r18	; 0x08
		}
		break;
    545c:	1d c0       	rjmp	.+58     	; 0x5498 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0xbc>
		
		case ADCTXAdjustableVoltage:
		{
			if(g_adc_initialization != ADC_SINGLE_CONVERSION_INITIALIZED)
    545e:	80 91 6f 45 	lds	r24, 0x456F	; 0x80456f <_ZL20g_adc_initialization>
    5462:	82 30       	cpi	r24, 0x02	; 2
    5464:	19 f0       	breq	.+6      	; 0x546c <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x90>
			{
				ADC0_SYSTEM_init(SINGLE_CONVERSION);
    5466:	80 e0       	ldi	r24, 0x00	; 0
    5468:	0e 94 ef 2b 	call	0x57de	; 0x57de <_ZL16ADC0_SYSTEM_initb>
			}
			
			ADC0.MUXPOS = ADC_MUXPOS_AIN5_gc;
    546c:	80 e0       	ldi	r24, 0x00	; 0
    546e:	96 e0       	ldi	r25, 0x06	; 6
    5470:	25 e0       	ldi	r18, 0x05	; 5
    5472:	fc 01       	movw	r30, r24
    5474:	20 87       	std	Z+8, r18	; 0x08
		}
		break;
    5476:	10 c0       	rjmp	.+32     	; 0x5498 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0xbc>
		
		case ADCTemperature:
		{
			if(g_adc_initialization != ADC_SINGLE_CONVERSION_INITIALIZED)
    5478:	80 91 6f 45 	lds	r24, 0x456F	; 0x80456f <_ZL20g_adc_initialization>
    547c:	82 30       	cpi	r24, 0x02	; 2
    547e:	19 f0       	breq	.+6      	; 0x5486 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0xaa>
			{
				ADC0_SYSTEM_init(SINGLE_CONVERSION);
    5480:	80 e0       	ldi	r24, 0x00	; 0
    5482:	0e 94 ef 2b 	call	0x57de	; 0x57de <_ZL16ADC0_SYSTEM_initb>
			}
			
			ADC0.MUXPOS = ADC_MUXPOS_TEMPSENSE_gc;
    5486:	80 e0       	ldi	r24, 0x00	; 0
    5488:	96 e0       	ldi	r25, 0x06	; 6
    548a:	22 e4       	ldi	r18, 0x42	; 66
    548c:	fc 01       	movw	r30, r24
    548e:	20 87       	std	Z+8, r18	; 0x08
		}
		break;
    5490:	03 c0       	rjmp	.+6      	; 0x5498 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0xbc>
		
		default:
		{
			ADC0_SYSTEM_shutdown();
    5492:	0e 94 01 2c 	call	0x5802	; 0x5802 <_ZL20ADC0_SYSTEM_shutdownv>
		}
		break;	
    5496:	00 00       	nop
	}
}
    5498:	00 00       	nop
    549a:	0f 90       	pop	r0
    549c:	df 91       	pop	r29
    549e:	cf 91       	pop	r28
    54a0:	08 95       	ret

000054a2 <_Z20ADC0_startConversionv>:

void ADC0_startConversion(void)
{
    54a2:	cf 93       	push	r28
    54a4:	df 93       	push	r29
    54a6:	cd b7       	in	r28, 0x3d	; 61
    54a8:	de b7       	in	r29, 0x3e	; 62
	if(g_adc_initialization != ADC_NOT_INITIALIZED)
    54aa:	80 91 6f 45 	lds	r24, 0x456F	; 0x80456f <_ZL20g_adc_initialization>
    54ae:	88 23       	and	r24, r24
    54b0:	49 f0       	breq	.+18     	; 0x54c4 <_Z20ADC0_startConversionv+0x22>
	{
		ADC0.INTCTRL = 0x00; /* Disable interrupt */
    54b2:	80 e0       	ldi	r24, 0x00	; 0
    54b4:	96 e0       	ldi	r25, 0x06	; 6
    54b6:	fc 01       	movw	r30, r24
    54b8:	14 86       	std	Z+12, r1	; 0x0c
		ADC0.COMMAND = ADC_STCONV_bm; /* Start conversion */
    54ba:	80 e0       	ldi	r24, 0x00	; 0
    54bc:	96 e0       	ldi	r25, 0x06	; 6
    54be:	21 e0       	ldi	r18, 0x01	; 1
    54c0:	fc 01       	movw	r30, r24
    54c2:	22 87       	std	Z+10, r18	; 0x0a
	}
}
    54c4:	00 00       	nop
    54c6:	df 91       	pop	r29
    54c8:	cf 91       	pop	r28
    54ca:	08 95       	ret

000054cc <_Z19ADC0_conversionDonev>:

bool ADC0_conversionDone(void)
{
    54cc:	cf 93       	push	r28
    54ce:	df 93       	push	r29
    54d0:	cd b7       	in	r28, 0x3d	; 61
    54d2:	de b7       	in	r29, 0x3e	; 62
	/* Check if the conversion is done  */
	return (ADC0.INTFLAGS & ADC_RESRDY_bm);
    54d4:	80 e0       	ldi	r24, 0x00	; 0
    54d6:	96 e0       	ldi	r25, 0x06	; 6
    54d8:	fc 01       	movw	r30, r24
    54da:	85 85       	ldd	r24, Z+13	; 0x0d
    54dc:	88 2f       	mov	r24, r24
    54de:	90 e0       	ldi	r25, 0x00	; 0
    54e0:	81 70       	andi	r24, 0x01	; 1
    54e2:	99 27       	eor	r25, r25
    54e4:	21 e0       	ldi	r18, 0x01	; 1
    54e6:	89 2b       	or	r24, r25
    54e8:	09 f4       	brne	.+2      	; 0x54ec <_Z19ADC0_conversionDonev+0x20>
    54ea:	20 e0       	ldi	r18, 0x00	; 0
    54ec:	82 2f       	mov	r24, r18
}
    54ee:	df 91       	pop	r29
    54f0:	cf 91       	pop	r28
    54f2:	08 95       	ret

000054f4 <_Z9ADC0_readv>:

int ADC0_read(void)
{
    54f4:	cf 93       	push	r28
    54f6:	df 93       	push	r29
    54f8:	cd b7       	in	r28, 0x3d	; 61
    54fa:	de b7       	in	r29, 0x3e	; 62
	return ADC0.RES; 	/* Reading the result also clears the interrupt flag */
    54fc:	80 e0       	ldi	r24, 0x00	; 0
    54fe:	96 e0       	ldi	r25, 0x06	; 6
    5500:	fc 01       	movw	r30, r24
    5502:	80 89       	ldd	r24, Z+16	; 0x10
    5504:	91 89       	ldd	r25, Z+17	; 0x11
}
    5506:	df 91       	pop	r29
    5508:	cf 91       	pop	r28
    550a:	08 95       	ret

0000550c <_Z12temperatureCv>:

int16_t temperatureC(void)
{
    550c:	cf 93       	push	r28
    550e:	df 93       	push	r29
    5510:	cd b7       	in	r28, 0x3d	; 61
    5512:	de b7       	in	r29, 0x3e	; 62
    5514:	2d 97       	sbiw	r28, 0x0d	; 13
    5516:	cd bf       	out	0x3d, r28	; 61
    5518:	de bf       	out	0x3e, r29	; 62
	uint16_t sigrow_offset = SIGROW.TEMPSENSE1; // Read unsigned value from signature row
    551a:	80 e0       	ldi	r24, 0x00	; 0
    551c:	91 e1       	ldi	r25, 0x11	; 17
    551e:	fc 01       	movw	r30, r24
    5520:	86 81       	ldd	r24, Z+6	; 0x06
    5522:	97 81       	ldd	r25, Z+7	; 0x07
    5524:	8b 83       	std	Y+3, r24	; 0x03
    5526:	9c 83       	std	Y+4, r25	; 0x04
	uint16_t sigrow_slope = SIGROW.TEMPSENSE0; // Read unsigned value from signature row
    5528:	80 e0       	ldi	r24, 0x00	; 0
    552a:	91 e1       	ldi	r25, 0x11	; 17
    552c:	fc 01       	movw	r30, r24
    552e:	84 81       	ldd	r24, Z+4	; 0x04
    5530:	95 81       	ldd	r25, Z+5	; 0x05
    5532:	8d 83       	std	Y+5, r24	; 0x05
    5534:	9e 83       	std	Y+6, r25	; 0x06
	static uint32_t wait = 10000;
	uint16_t adc_reading;
	int16_t temperature_in_C = -273.15;
    5536:	8f ee       	ldi	r24, 0xEF	; 239
    5538:	9e ef       	ldi	r25, 0xFE	; 254
    553a:	89 83       	std	Y+1, r24	; 0x01
    553c:	9a 83       	std	Y+2, r25	; 0x02
	uint8_t holdMux;
	
	holdMux = ADC0.MUXPOS;
    553e:	80 e0       	ldi	r24, 0x00	; 0
    5540:	96 e0       	ldi	r25, 0x06	; 6
    5542:	fc 01       	movw	r30, r24
    5544:	80 85       	ldd	r24, Z+8	; 0x08
    5546:	8f 83       	std	Y+7, r24	; 0x07
	ADC0_SYSTEM_init(SINGLE_CONVERSION);
    5548:	80 e0       	ldi	r24, 0x00	; 0
    554a:	0e 94 ef 2b 	call	0x57de	; 0x57de <_ZL16ADC0_SYSTEM_initb>
	ADC0.MUXPOS = ADC_MUXPOS_TEMPSENSE_gc;
    554e:	80 e0       	ldi	r24, 0x00	; 0
    5550:	96 e0       	ldi	r25, 0x06	; 6
    5552:	22 e4       	ldi	r18, 0x42	; 66
    5554:	fc 01       	movw	r30, r24
    5556:	20 87       	std	Z+8, r18	; 0x08
	ADC0_startConversion();
    5558:	0e 94 51 2a 	call	0x54a2	; 0x54a2 <_Z20ADC0_startConversionv>
	
	while((!ADC0_conversionDone()) && wait--);
    555c:	0e 94 66 2a 	call	0x54cc	; 0x54cc <_Z19ADC0_conversionDonev>
    5560:	98 2f       	mov	r25, r24
    5562:	81 e0       	ldi	r24, 0x01	; 1
    5564:	89 27       	eor	r24, r25
    5566:	88 23       	and	r24, r24
    5568:	e1 f0       	breq	.+56     	; 0x55a2 <_Z12temperatureCv+0x96>
    556a:	80 91 24 40 	lds	r24, 0x4024	; 0x804024 <_ZZ12temperatureCvE4wait>
    556e:	90 91 25 40 	lds	r25, 0x4025	; 0x804025 <_ZZ12temperatureCvE4wait+0x1>
    5572:	a0 91 26 40 	lds	r26, 0x4026	; 0x804026 <_ZZ12temperatureCvE4wait+0x2>
    5576:	b0 91 27 40 	lds	r27, 0x4027	; 0x804027 <_ZZ12temperatureCvE4wait+0x3>
    557a:	9c 01       	movw	r18, r24
    557c:	ad 01       	movw	r20, r26
    557e:	21 50       	subi	r18, 0x01	; 1
    5580:	31 09       	sbc	r19, r1
    5582:	41 09       	sbc	r20, r1
    5584:	51 09       	sbc	r21, r1
    5586:	20 93 24 40 	sts	0x4024, r18	; 0x804024 <_ZZ12temperatureCvE4wait>
    558a:	30 93 25 40 	sts	0x4025, r19	; 0x804025 <_ZZ12temperatureCvE4wait+0x1>
    558e:	40 93 26 40 	sts	0x4026, r20	; 0x804026 <_ZZ12temperatureCvE4wait+0x2>
    5592:	50 93 27 40 	sts	0x4027, r21	; 0x804027 <_ZZ12temperatureCvE4wait+0x3>
    5596:	89 2b       	or	r24, r25
    5598:	8a 2b       	or	r24, r26
    559a:	8b 2b       	or	r24, r27
    559c:	11 f0       	breq	.+4      	; 0x55a2 <_Z12temperatureCv+0x96>
    559e:	81 e0       	ldi	r24, 0x01	; 1
    55a0:	01 c0       	rjmp	.+2      	; 0x55a4 <_Z12temperatureCv+0x98>
    55a2:	80 e0       	ldi	r24, 0x00	; 0
    55a4:	88 23       	and	r24, r24
    55a6:	09 f0       	breq	.+2      	; 0x55aa <_Z12temperatureCv+0x9e>
    55a8:	d9 cf       	rjmp	.-78     	; 0x555c <_Z12temperatureCv+0x50>
	
	if(wait)
    55aa:	80 91 24 40 	lds	r24, 0x4024	; 0x804024 <_ZZ12temperatureCvE4wait>
    55ae:	90 91 25 40 	lds	r25, 0x4025	; 0x804025 <_ZZ12temperatureCvE4wait+0x1>
    55b2:	a0 91 26 40 	lds	r26, 0x4026	; 0x804026 <_ZZ12temperatureCvE4wait+0x2>
    55b6:	b0 91 27 40 	lds	r27, 0x4027	; 0x804027 <_ZZ12temperatureCvE4wait+0x3>
    55ba:	89 2b       	or	r24, r25
    55bc:	8a 2b       	or	r24, r26
    55be:	8b 2b       	or	r24, r27
    55c0:	09 f4       	brne	.+2      	; 0x55c4 <_Z12temperatureCv+0xb8>
    55c2:	4d c0       	rjmp	.+154    	; 0x565e <_Z12temperatureCv+0x152>
	{
		adc_reading = ADC0.RES;
    55c4:	80 e0       	ldi	r24, 0x00	; 0
    55c6:	96 e0       	ldi	r25, 0x06	; 6
    55c8:	fc 01       	movw	r30, r24
    55ca:	80 89       	ldd	r24, Z+16	; 0x10
    55cc:	91 89       	ldd	r25, Z+17	; 0x11
    55ce:	88 87       	std	Y+8, r24	; 0x08
    55d0:	99 87       	std	Y+9, r25	; 0x09
		int32_t temp = sigrow_offset - adc_reading;
    55d2:	2b 81       	ldd	r18, Y+3	; 0x03
    55d4:	3c 81       	ldd	r19, Y+4	; 0x04
    55d6:	88 85       	ldd	r24, Y+8	; 0x08
    55d8:	99 85       	ldd	r25, Y+9	; 0x09
    55da:	a9 01       	movw	r20, r18
    55dc:	48 1b       	sub	r20, r24
    55de:	59 0b       	sbc	r21, r25
    55e0:	ca 01       	movw	r24, r20
    55e2:	cc 01       	movw	r24, r24
    55e4:	a0 e0       	ldi	r26, 0x00	; 0
    55e6:	b0 e0       	ldi	r27, 0x00	; 0
    55e8:	8a 87       	std	Y+10, r24	; 0x0a
    55ea:	9b 87       	std	Y+11, r25	; 0x0b
    55ec:	ac 87       	std	Y+12, r26	; 0x0c
    55ee:	bd 87       	std	Y+13, r27	; 0x0d
		temp *= sigrow_slope; // Result will overflow 16-bit variable
    55f0:	8d 81       	ldd	r24, Y+5	; 0x05
    55f2:	9e 81       	ldd	r25, Y+6	; 0x06
    55f4:	cc 01       	movw	r24, r24
    55f6:	a0 e0       	ldi	r26, 0x00	; 0
    55f8:	b0 e0       	ldi	r27, 0x00	; 0
    55fa:	2a 85       	ldd	r18, Y+10	; 0x0a
    55fc:	3b 85       	ldd	r19, Y+11	; 0x0b
    55fe:	4c 85       	ldd	r20, Y+12	; 0x0c
    5600:	5d 85       	ldd	r21, Y+13	; 0x0d
    5602:	bc 01       	movw	r22, r24
    5604:	cd 01       	movw	r24, r26
    5606:	0e 94 9b 74 	call	0xe936	; 0xe936 <__mulsi3>
    560a:	dc 01       	movw	r26, r24
    560c:	cb 01       	movw	r24, r22
    560e:	8a 87       	std	Y+10, r24	; 0x0a
    5610:	9b 87       	std	Y+11, r25	; 0x0b
    5612:	ac 87       	std	Y+12, r26	; 0x0c
    5614:	bd 87       	std	Y+13, r27	; 0x0d
		temp += 0x0800; // Add 4096/2 to get correct rounding on division below
    5616:	8a 85       	ldd	r24, Y+10	; 0x0a
    5618:	9b 85       	ldd	r25, Y+11	; 0x0b
    561a:	ac 85       	ldd	r26, Y+12	; 0x0c
    561c:	bd 85       	ldd	r27, Y+13	; 0x0d
    561e:	98 5f       	subi	r25, 0xF8	; 248
    5620:	af 4f       	sbci	r26, 0xFF	; 255
    5622:	bf 4f       	sbci	r27, 0xFF	; 255
    5624:	8a 87       	std	Y+10, r24	; 0x0a
    5626:	9b 87       	std	Y+11, r25	; 0x0b
    5628:	ac 87       	std	Y+12, r26	; 0x0c
    562a:	bd 87       	std	Y+13, r27	; 0x0d
		temp >>= 12; // Round off to nearest degree in Kelvin, by dividing with 2^12 (4096)
    562c:	8a 85       	ldd	r24, Y+10	; 0x0a
    562e:	9b 85       	ldd	r25, Y+11	; 0x0b
    5630:	ac 85       	ldd	r26, Y+12	; 0x0c
    5632:	bd 85       	ldd	r27, Y+13	; 0x0d
    5634:	07 2e       	mov	r0, r23
    5636:	7c e0       	ldi	r23, 0x0C	; 12
    5638:	b5 95       	asr	r27
    563a:	a7 95       	ror	r26
    563c:	97 95       	ror	r25
    563e:	87 95       	ror	r24
    5640:	7a 95       	dec	r23
    5642:	d1 f7       	brne	.-12     	; 0x5638 <_Z12temperatureCv+0x12c>
    5644:	70 2d       	mov	r23, r0
    5646:	8a 87       	std	Y+10, r24	; 0x0a
    5648:	9b 87       	std	Y+11, r25	; 0x0b
    564a:	ac 87       	std	Y+12, r26	; 0x0c
    564c:	bd 87       	std	Y+13, r27	; 0x0d
		temperature_in_C += (int16_t)temp;
    564e:	8a 85       	ldd	r24, Y+10	; 0x0a
    5650:	9b 85       	ldd	r25, Y+11	; 0x0b
    5652:	29 81       	ldd	r18, Y+1	; 0x01
    5654:	3a 81       	ldd	r19, Y+2	; 0x02
    5656:	82 0f       	add	r24, r18
    5658:	93 1f       	adc	r25, r19
    565a:	89 83       	std	Y+1, r24	; 0x01
    565c:	9a 83       	std	Y+2, r25	; 0x02
	}
	
	ADC0.MUXPOS = holdMux; /* Restore ADC registers */
    565e:	80 e0       	ldi	r24, 0x00	; 0
    5660:	96 e0       	ldi	r25, 0x06	; 6
    5662:	2f 81       	ldd	r18, Y+7	; 0x07
    5664:	fc 01       	movw	r30, r24
    5666:	20 87       	std	Z+8, r18	; 0x08
	
	return(temperature_in_C);
    5668:	89 81       	ldd	r24, Y+1	; 0x01
    566a:	9a 81       	ldd	r25, Y+2	; 0x02
}
    566c:	2d 96       	adiw	r28, 0x0d	; 13
    566e:	cd bf       	out	0x3d, r28	; 61
    5670:	de bf       	out	0x3e, r29	; 62
    5672:	df 91       	pop	r29
    5674:	cf 91       	pop	r28
    5676:	08 95       	ret

00005678 <_ZL9PORT_initv>:


static void PORT_init(void)
{
    5678:	cf 93       	push	r28
    567a:	df 93       	push	r29
    567c:	cd b7       	in	r28, 0x3d	; 61
    567e:	de b7       	in	r29, 0x3e	; 62
	/* Disable interrupt and digital input buffer on PD2 */
	PORTD.PIN2CTRL &= ~PORT_ISC_gm;
    5680:	80 e6       	ldi	r24, 0x60	; 96
    5682:	94 e0       	ldi	r25, 0x04	; 4
    5684:	20 e6       	ldi	r18, 0x60	; 96
    5686:	34 e0       	ldi	r19, 0x04	; 4
    5688:	f9 01       	movw	r30, r18
    568a:	22 89       	ldd	r18, Z+18	; 0x12
    568c:	28 7f       	andi	r18, 0xF8	; 248
    568e:	fc 01       	movw	r30, r24
    5690:	22 8b       	std	Z+18, r18	; 0x12
	PORTD.PIN2CTRL |= PORT_ISC_INPUT_DISABLE_gc;
    5692:	80 e6       	ldi	r24, 0x60	; 96
    5694:	94 e0       	ldi	r25, 0x04	; 4
    5696:	20 e6       	ldi	r18, 0x60	; 96
    5698:	34 e0       	ldi	r19, 0x04	; 4
    569a:	f9 01       	movw	r30, r18
    569c:	22 89       	ldd	r18, Z+18	; 0x12
    569e:	24 60       	ori	r18, 0x04	; 4
    56a0:	fc 01       	movw	r30, r24
    56a2:	22 8b       	std	Z+18, r18	; 0x12
	/* Disable interrupt and digital input buffer on PD3 */
	PORTD.PIN3CTRL &= ~PORT_ISC_gm;
    56a4:	80 e6       	ldi	r24, 0x60	; 96
    56a6:	94 e0       	ldi	r25, 0x04	; 4
    56a8:	20 e6       	ldi	r18, 0x60	; 96
    56aa:	34 e0       	ldi	r19, 0x04	; 4
    56ac:	f9 01       	movw	r30, r18
    56ae:	23 89       	ldd	r18, Z+19	; 0x13
    56b0:	28 7f       	andi	r18, 0xF8	; 248
    56b2:	fc 01       	movw	r30, r24
    56b4:	23 8b       	std	Z+19, r18	; 0x13
	PORTD.PIN3CTRL |= PORT_ISC_INPUT_DISABLE_gc;
    56b6:	80 e6       	ldi	r24, 0x60	; 96
    56b8:	94 e0       	ldi	r25, 0x04	; 4
    56ba:	20 e6       	ldi	r18, 0x60	; 96
    56bc:	34 e0       	ldi	r19, 0x04	; 4
    56be:	f9 01       	movw	r30, r18
    56c0:	23 89       	ldd	r18, Z+19	; 0x13
    56c2:	24 60       	ori	r18, 0x04	; 4
    56c4:	fc 01       	movw	r30, r24
    56c6:	23 8b       	std	Z+19, r18	; 0x13
	/* Disable interrupt and digital input buffer on PD4 */
	PORTD.PIN4CTRL &= ~PORT_ISC_gm;
    56c8:	80 e6       	ldi	r24, 0x60	; 96
    56ca:	94 e0       	ldi	r25, 0x04	; 4
    56cc:	20 e6       	ldi	r18, 0x60	; 96
    56ce:	34 e0       	ldi	r19, 0x04	; 4
    56d0:	f9 01       	movw	r30, r18
    56d2:	24 89       	ldd	r18, Z+20	; 0x14
    56d4:	28 7f       	andi	r18, 0xF8	; 248
    56d6:	fc 01       	movw	r30, r24
    56d8:	24 8b       	std	Z+20, r18	; 0x14
	PORTD.PIN4CTRL |= PORT_ISC_INPUT_DISABLE_gc;
    56da:	80 e6       	ldi	r24, 0x60	; 96
    56dc:	94 e0       	ldi	r25, 0x04	; 4
    56de:	20 e6       	ldi	r18, 0x60	; 96
    56e0:	34 e0       	ldi	r19, 0x04	; 4
    56e2:	f9 01       	movw	r30, r18
    56e4:	24 89       	ldd	r18, Z+20	; 0x14
    56e6:	24 60       	ori	r18, 0x04	; 4
    56e8:	fc 01       	movw	r30, r24
    56ea:	24 8b       	std	Z+20, r18	; 0x14
	/* Disable interrupt and digital input buffer on PD5 */
	PORTD.PIN5CTRL &= ~PORT_ISC_gm;
    56ec:	80 e6       	ldi	r24, 0x60	; 96
    56ee:	94 e0       	ldi	r25, 0x04	; 4
    56f0:	20 e6       	ldi	r18, 0x60	; 96
    56f2:	34 e0       	ldi	r19, 0x04	; 4
    56f4:	f9 01       	movw	r30, r18
    56f6:	25 89       	ldd	r18, Z+21	; 0x15
    56f8:	28 7f       	andi	r18, 0xF8	; 248
    56fa:	fc 01       	movw	r30, r24
    56fc:	25 8b       	std	Z+21, r18	; 0x15
	PORTD.PIN5CTRL |= PORT_ISC_INPUT_DISABLE_gc;
    56fe:	80 e6       	ldi	r24, 0x60	; 96
    5700:	94 e0       	ldi	r25, 0x04	; 4
    5702:	20 e6       	ldi	r18, 0x60	; 96
    5704:	34 e0       	ldi	r19, 0x04	; 4
    5706:	f9 01       	movw	r30, r18
    5708:	25 89       	ldd	r18, Z+21	; 0x15
    570a:	24 60       	ori	r18, 0x04	; 4
    570c:	fc 01       	movw	r30, r24
    570e:	25 8b       	std	Z+21, r18	; 0x15
	
	/* Disable pull-up resistor */
	PORTD.PIN2CTRL &= ~PORT_PULLUPEN_bm;
    5710:	80 e6       	ldi	r24, 0x60	; 96
    5712:	94 e0       	ldi	r25, 0x04	; 4
    5714:	20 e6       	ldi	r18, 0x60	; 96
    5716:	34 e0       	ldi	r19, 0x04	; 4
    5718:	f9 01       	movw	r30, r18
    571a:	22 89       	ldd	r18, Z+18	; 0x12
    571c:	27 7f       	andi	r18, 0xF7	; 247
    571e:	fc 01       	movw	r30, r24
    5720:	22 8b       	std	Z+18, r18	; 0x12
	PORTD.PIN3CTRL &= ~PORT_PULLUPEN_bm;
    5722:	80 e6       	ldi	r24, 0x60	; 96
    5724:	94 e0       	ldi	r25, 0x04	; 4
    5726:	20 e6       	ldi	r18, 0x60	; 96
    5728:	34 e0       	ldi	r19, 0x04	; 4
    572a:	f9 01       	movw	r30, r18
    572c:	23 89       	ldd	r18, Z+19	; 0x13
    572e:	27 7f       	andi	r18, 0xF7	; 247
    5730:	fc 01       	movw	r30, r24
    5732:	23 8b       	std	Z+19, r18	; 0x13
	PORTD.PIN4CTRL &= ~PORT_PULLUPEN_bm;
    5734:	80 e6       	ldi	r24, 0x60	; 96
    5736:	94 e0       	ldi	r25, 0x04	; 4
    5738:	20 e6       	ldi	r18, 0x60	; 96
    573a:	34 e0       	ldi	r19, 0x04	; 4
    573c:	f9 01       	movw	r30, r18
    573e:	24 89       	ldd	r18, Z+20	; 0x14
    5740:	27 7f       	andi	r18, 0xF7	; 247
    5742:	fc 01       	movw	r30, r24
    5744:	24 8b       	std	Z+20, r18	; 0x14
	PORTD.PIN5CTRL &= ~PORT_PULLUPEN_bm;
    5746:	80 e6       	ldi	r24, 0x60	; 96
    5748:	94 e0       	ldi	r25, 0x04	; 4
    574a:	20 e6       	ldi	r18, 0x60	; 96
    574c:	34 e0       	ldi	r19, 0x04	; 4
    574e:	f9 01       	movw	r30, r18
    5750:	25 89       	ldd	r18, Z+21	; 0x15
    5752:	27 7f       	andi	r18, 0xF7	; 247
    5754:	fc 01       	movw	r30, r24
    5756:	25 8b       	std	Z+21, r18	; 0x15
}
    5758:	00 00       	nop
    575a:	df 91       	pop	r29
    575c:	cf 91       	pop	r28
    575e:	08 95       	ret

00005760 <_ZL10VREF0_initv>:

static void VREF0_init(void)
{
    5760:	cf 93       	push	r28
    5762:	df 93       	push	r29
    5764:	cd b7       	in	r28, 0x3d	; 61
    5766:	de b7       	in	r29, 0x3e	; 62
	VREF.ADC0REF = VREF_REFSEL_2V048_gc;  /* Internal 2.048V reference */
    5768:	80 ea       	ldi	r24, 0xA0	; 160
    576a:	90 e0       	ldi	r25, 0x00	; 0
    576c:	21 e0       	ldi	r18, 0x01	; 1
    576e:	fc 01       	movw	r30, r24
    5770:	20 83       	st	Z, r18
}
    5772:	00 00       	nop
    5774:	df 91       	pop	r29
    5776:	cf 91       	pop	r28
    5778:	08 95       	ret

0000577a <_ZL9ADC0_initb>:

static void ADC0_init(bool freerun)
{
    577a:	cf 93       	push	r28
    577c:	df 93       	push	r29
    577e:	1f 92       	push	r1
    5780:	cd b7       	in	r28, 0x3d	; 61
    5782:	de b7       	in	r29, 0x3e	; 62
    5784:	89 83       	std	Y+1, r24	; 0x01
	ADC0.CTRLC = ADC_PRESC_DIV64_gc;   /* CLK_PER divided by 4 => 24096 sps */
    5786:	80 e0       	ldi	r24, 0x00	; 0
    5788:	96 e0       	ldi	r25, 0x06	; 6
    578a:	2a e0       	ldi	r18, 0x0A	; 10
    578c:	fc 01       	movw	r30, r24
    578e:	22 83       	std	Z+2, r18	; 0x02
	
	if(freerun)
    5790:	89 81       	ldd	r24, Y+1	; 0x01
    5792:	88 23       	and	r24, r24
    5794:	99 f0       	breq	.+38     	; 0x57bc <_ZL9ADC0_initb+0x42>
	{
		ADC0.CTRLA = ADC_ENABLE_bm /* ADC Enable: enabled */
    5796:	80 e0       	ldi	r24, 0x00	; 0
    5798:	96 e0       	ldi	r25, 0x06	; 6
		| ADC_RESSEL_12BIT_gc      /* 12-bit mode */
		| ADC_FREERUN_bm;          /* Enable Free-Run mode */
    579a:	23 e0       	ldi	r18, 0x03	; 3
    579c:	fc 01       	movw	r30, r24
    579e:	20 83       	st	Z, r18
		
		ADC0.INTCTRL = 0x01; /* Enable interrupt */
    57a0:	80 e0       	ldi	r24, 0x00	; 0
    57a2:	96 e0       	ldi	r25, 0x06	; 6
    57a4:	21 e0       	ldi	r18, 0x01	; 1
    57a6:	fc 01       	movw	r30, r24
    57a8:	24 87       	std	Z+12, r18	; 0x0c
		
		ADC0.COMMAND = ADC_STCONV_bm; /* Start conversion */
    57aa:	80 e0       	ldi	r24, 0x00	; 0
    57ac:	96 e0       	ldi	r25, 0x06	; 6
    57ae:	21 e0       	ldi	r18, 0x01	; 1
    57b0:	fc 01       	movw	r30, r24
    57b2:	22 87       	std	Z+10, r18	; 0x0a
		g_adc_initialization = ADC_FREE_RUN_INITIALIZED;
    57b4:	81 e0       	ldi	r24, 0x01	; 1
    57b6:	80 93 6f 45 	sts	0x456F, r24	; 0x80456f <_ZL20g_adc_initialization>
	{
		ADC0.CTRLA = ADC_ENABLE_bm;  /* ADC Enable: enabled; 12-bit mode is default */
		ADC0.INTCTRL = 0x00; /* Disable interrupt */
		g_adc_initialization = ADC_SINGLE_CONVERSION_INITIALIZED;
	}
}
    57ba:	0c c0       	rjmp	.+24     	; 0x57d4 <_ZL9ADC0_initb+0x5a>
		ADC0.COMMAND = ADC_STCONV_bm; /* Start conversion */
		g_adc_initialization = ADC_FREE_RUN_INITIALIZED;
	}
	else
	{
		ADC0.CTRLA = ADC_ENABLE_bm;  /* ADC Enable: enabled; 12-bit mode is default */
    57bc:	80 e0       	ldi	r24, 0x00	; 0
    57be:	96 e0       	ldi	r25, 0x06	; 6
    57c0:	21 e0       	ldi	r18, 0x01	; 1
    57c2:	fc 01       	movw	r30, r24
    57c4:	20 83       	st	Z, r18
		ADC0.INTCTRL = 0x00; /* Disable interrupt */
    57c6:	80 e0       	ldi	r24, 0x00	; 0
    57c8:	96 e0       	ldi	r25, 0x06	; 6
    57ca:	fc 01       	movw	r30, r24
    57cc:	14 86       	std	Z+12, r1	; 0x0c
		g_adc_initialization = ADC_SINGLE_CONVERSION_INITIALIZED;
    57ce:	82 e0       	ldi	r24, 0x02	; 2
    57d0:	80 93 6f 45 	sts	0x456F, r24	; 0x80456f <_ZL20g_adc_initialization>
	}
}
    57d4:	00 00       	nop
    57d6:	0f 90       	pop	r0
    57d8:	df 91       	pop	r29
    57da:	cf 91       	pop	r28
    57dc:	08 95       	ret

000057de <_ZL16ADC0_SYSTEM_initb>:

static void ADC0_SYSTEM_init(bool freerun)
{
    57de:	cf 93       	push	r28
    57e0:	df 93       	push	r29
    57e2:	1f 92       	push	r1
    57e4:	cd b7       	in	r28, 0x3d	; 61
    57e6:	de b7       	in	r29, 0x3e	; 62
    57e8:	89 83       	std	Y+1, r24	; 0x01
	PORT_init();
    57ea:	0e 94 3c 2b 	call	0x5678	; 0x5678 <_ZL9PORT_initv>
	VREF0_init();
    57ee:	0e 94 b0 2b 	call	0x5760	; 0x5760 <_ZL10VREF0_initv>
	ADC0_init(freerun);
    57f2:	89 81       	ldd	r24, Y+1	; 0x01
    57f4:	0e 94 bd 2b 	call	0x577a	; 0x577a <_ZL9ADC0_initb>
}
    57f8:	00 00       	nop
    57fa:	0f 90       	pop	r0
    57fc:	df 91       	pop	r29
    57fe:	cf 91       	pop	r28
    5800:	08 95       	ret

00005802 <_ZL20ADC0_SYSTEM_shutdownv>:

static void ADC0_SYSTEM_shutdown(void)
{
    5802:	cf 93       	push	r28
    5804:	df 93       	push	r29
    5806:	cd b7       	in	r28, 0x3d	; 61
    5808:	de b7       	in	r29, 0x3e	; 62
	ADC0.INTCTRL = 0x00; /* Disable interrupt */
    580a:	80 e0       	ldi	r24, 0x00	; 0
    580c:	96 e0       	ldi	r25, 0x06	; 6
    580e:	fc 01       	movw	r30, r24
    5810:	14 86       	std	Z+12, r1	; 0x0c
	ADC0.CTRLA = ADC_RESSEL_12BIT_gc; /* Turn off ADC leaving 12-bit resolution set */
    5812:	80 e0       	ldi	r24, 0x00	; 0
    5814:	96 e0       	ldi	r25, 0x06	; 6
    5816:	fc 01       	movw	r30, r24
    5818:	10 82       	st	Z, r1
	g_adc_initialization = ADC_NOT_INITIALIZED;
    581a:	10 92 6f 45 	sts	0x456F, r1	; 0x80456f <_ZL20g_adc_initialization>
}
    581e:	00 00       	nop
    5820:	df 91       	pop	r29
    5822:	cf 91       	pop	r28
    5824:	08 95       	ret

00005826 <__vector_24>:

ISR(ADC0_RESRDY_vect)
{
    5826:	1f 92       	push	r1
    5828:	0f 92       	push	r0
    582a:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    582e:	0f 92       	push	r0
    5830:	11 24       	eor	r1, r1
    5832:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    5836:	0f 92       	push	r0
    5838:	2f 93       	push	r18
    583a:	3f 93       	push	r19
    583c:	4f 93       	push	r20
    583e:	5f 93       	push	r21
    5840:	6f 93       	push	r22
    5842:	7f 93       	push	r23
    5844:	8f 93       	push	r24
    5846:	9f 93       	push	r25
    5848:	af 93       	push	r26
    584a:	bf 93       	push	r27
    584c:	ef 93       	push	r30
    584e:	ff 93       	push	r31
    5850:	cf 93       	push	r28
    5852:	df 93       	push	r29
    5854:	00 d0       	rcall	.+0      	; 0x5856 <__vector_24+0x30>
    5856:	cd b7       	in	r28, 0x3d	; 61
    5858:	de b7       	in	r29, 0x3e	; 62
	/* Clear the interrupt flag by reading the result */
	int val = ADC0_read();
    585a:	0e 94 7a 2a 	call	0x54f4	; 0x54f4 <_Z9ADC0_readv>
    585e:	89 83       	std	Y+1, r24	; 0x01
    5860:	9a 83       	std	Y+2, r25	; 0x02
//	LED_toggle_level();
	if(g_goertzel.DataPoint(val))
    5862:	89 81       	ldd	r24, Y+1	; 0x01
    5864:	9a 81       	ldd	r25, Y+2	; 0x02
    5866:	bc 01       	movw	r22, r24
    5868:	8e e6       	ldi	r24, 0x6E	; 110
    586a:	95 e4       	ldi	r25, 0x45	; 69
    586c:	0e 94 be 47 	call	0x8f7c	; 0x8f7c <_ZN8Goertzel9DataPointEi>
    5870:	88 23       	and	r24, r24
    5872:	21 f0       	breq	.+8      	; 0x587c <__vector_24+0x56>
	{
		ADC0.INTCTRL = 0x00; /* disable ADC interrupt */
    5874:	80 e0       	ldi	r24, 0x00	; 0
    5876:	96 e0       	ldi	r25, 0x06	; 6
    5878:	fc 01       	movw	r30, r24
    587a:	14 86       	std	Z+12, r1	; 0x0c
	}
    587c:	00 00       	nop
    587e:	0f 90       	pop	r0
    5880:	0f 90       	pop	r0
    5882:	df 91       	pop	r29
    5884:	cf 91       	pop	r28
    5886:	ff 91       	pop	r31
    5888:	ef 91       	pop	r30
    588a:	bf 91       	pop	r27
    588c:	af 91       	pop	r26
    588e:	9f 91       	pop	r25
    5890:	8f 91       	pop	r24
    5892:	7f 91       	pop	r23
    5894:	6f 91       	pop	r22
    5896:	5f 91       	pop	r21
    5898:	4f 91       	pop	r20
    589a:	3f 91       	pop	r19
    589c:	2f 91       	pop	r18
    589e:	0f 90       	pop	r0
    58a0:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    58a4:	0f 90       	pop	r0
    58a6:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    58aa:	0f 90       	pop	r0
    58ac:	1f 90       	pop	r1
    58ae:	18 95       	reti

000058b0 <_Z41__static_initialization_and_destruction_0ii>:
    58b0:	0f 93       	push	r16
    58b2:	1f 93       	push	r17
    58b4:	cf 93       	push	r28
    58b6:	df 93       	push	r29
    58b8:	00 d0       	rcall	.+0      	; 0x58ba <_Z41__static_initialization_and_destruction_0ii+0xa>
    58ba:	00 d0       	rcall	.+0      	; 0x58bc <_Z41__static_initialization_and_destruction_0ii+0xc>
    58bc:	cd b7       	in	r28, 0x3d	; 61
    58be:	de b7       	in	r29, 0x3e	; 62
    58c0:	89 83       	std	Y+1, r24	; 0x01
    58c2:	9a 83       	std	Y+2, r25	; 0x02
    58c4:	6b 83       	std	Y+3, r22	; 0x03
    58c6:	7c 83       	std	Y+4, r23	; 0x04
    58c8:	89 81       	ldd	r24, Y+1	; 0x01
    58ca:	9a 81       	ldd	r25, Y+2	; 0x02
    58cc:	01 97       	sbiw	r24, 0x01	; 1
    58ce:	91 f4       	brne	.+36     	; 0x58f4 <_Z41__static_initialization_and_destruction_0ii+0x44>
    58d0:	8b 81       	ldd	r24, Y+3	; 0x03
    58d2:	9c 81       	ldd	r25, Y+4	; 0x04
    58d4:	01 96       	adiw	r24, 0x01	; 1
    58d6:	71 f4       	brne	.+28     	; 0x58f4 <_Z41__static_initialization_and_destruction_0ii+0x44>
	
#define FREE_RUNNING true
#define SINGLE_CONVERSION false
	
volatile int16_t g_adcVal;
Goertzel g_goertzel(N, sampling_freq);
    58d8:	80 e0       	ldi	r24, 0x00	; 0
    58da:	90 e4       	ldi	r25, 0x40	; 64
    58dc:	ac eb       	ldi	r26, 0xBC	; 188
    58de:	b6 e4       	ldi	r27, 0x46	; 70
    58e0:	8c 01       	movw	r16, r24
    58e2:	9d 01       	movw	r18, r26
    58e4:	40 e0       	ldi	r20, 0x00	; 0
    58e6:	50 e0       	ldi	r21, 0x00	; 0
    58e8:	69 e4       	ldi	r22, 0x49	; 73
    58ea:	73 e4       	ldi	r23, 0x43	; 67
    58ec:	8e e6       	ldi	r24, 0x6E	; 110
    58ee:	95 e4       	ldi	r25, 0x45	; 69
    58f0:	0e 94 13 47 	call	0x8e26	; 0x8e26 <_ZN8GoertzelC1Eff>
    58f4:	89 81       	ldd	r24, Y+1	; 0x01
    58f6:	9a 81       	ldd	r25, Y+2	; 0x02
    58f8:	89 2b       	or	r24, r25
    58fa:	41 f4       	brne	.+16     	; 0x590c <_Z41__static_initialization_and_destruction_0ii+0x5c>
    58fc:	8b 81       	ldd	r24, Y+3	; 0x03
    58fe:	9c 81       	ldd	r25, Y+4	; 0x04
    5900:	01 96       	adiw	r24, 0x01	; 1
    5902:	21 f4       	brne	.+8      	; 0x590c <_Z41__static_initialization_and_destruction_0ii+0x5c>
    5904:	8e e6       	ldi	r24, 0x6E	; 110
    5906:	95 e4       	ldi	r25, 0x45	; 69
    5908:	0e 94 ab 47 	call	0x8f56	; 0x8f56 <_ZN8GoertzelD1Ev>
//	LED_toggle_level();
	if(g_goertzel.DataPoint(val))
	{
		ADC0.INTCTRL = 0x00; /* disable ADC interrupt */
	}
    590c:	00 00       	nop
    590e:	24 96       	adiw	r28, 0x04	; 4
    5910:	cd bf       	out	0x3d, r28	; 61
    5912:	de bf       	out	0x3e, r29	; 62
    5914:	df 91       	pop	r29
    5916:	cf 91       	pop	r28
    5918:	1f 91       	pop	r17
    591a:	0f 91       	pop	r16
    591c:	08 95       	ret

0000591e <_GLOBAL__sub_I_g_adcVal>:
    591e:	cf 93       	push	r28
    5920:	df 93       	push	r29
    5922:	cd b7       	in	r28, 0x3d	; 61
    5924:	de b7       	in	r29, 0x3e	; 62
    5926:	6f ef       	ldi	r22, 0xFF	; 255
    5928:	7f ef       	ldi	r23, 0xFF	; 255
    592a:	81 e0       	ldi	r24, 0x01	; 1
    592c:	90 e0       	ldi	r25, 0x00	; 0
    592e:	0e 94 58 2c 	call	0x58b0	; 0x58b0 <_Z41__static_initialization_and_destruction_0ii>
    5932:	df 91       	pop	r29
    5934:	cf 91       	pop	r28
    5936:	08 95       	ret

00005938 <_GLOBAL__sub_D_g_adcVal>:
    5938:	cf 93       	push	r28
    593a:	df 93       	push	r29
    593c:	cd b7       	in	r28, 0x3d	; 61
    593e:	de b7       	in	r29, 0x3e	; 62
    5940:	6f ef       	ldi	r22, 0xFF	; 255
    5942:	7f ef       	ldi	r23, 0xFF	; 255
    5944:	80 e0       	ldi	r24, 0x00	; 0
    5946:	90 e0       	ldi	r25, 0x00	; 0
    5948:	0e 94 58 2c 	call	0x58b0	; 0x58b0 <_Z41__static_initialization_and_destruction_0ii>
    594c:	df 91       	pop	r29
    594e:	cf 91       	pop	r28
    5950:	08 95       	ret

00005952 <PORTA_set_pin_pull_mode>:
} //binio

// default destructor
binio::~binio()
{
} //~binio
    5952:	cf 93       	push	r28
    5954:	df 93       	push	r29
    5956:	00 d0       	rcall	.+0      	; 0x5958 <PORTA_set_pin_pull_mode+0x6>
    5958:	00 d0       	rcall	.+0      	; 0x595a <PORTA_set_pin_pull_mode+0x8>
    595a:	cd b7       	in	r28, 0x3d	; 61
    595c:	de b7       	in	r29, 0x3e	; 62
    595e:	8b 83       	std	Y+3, r24	; 0x03
    5960:	6c 83       	std	Y+4, r22	; 0x04
    5962:	8b 81       	ldd	r24, Y+3	; 0x03
    5964:	88 2f       	mov	r24, r24
    5966:	90 e0       	ldi	r25, 0x00	; 0
    5968:	80 5f       	subi	r24, 0xF0	; 240
    596a:	9b 4f       	sbci	r25, 0xFB	; 251
    596c:	89 83       	std	Y+1, r24	; 0x01
    596e:	9a 83       	std	Y+2, r25	; 0x02
    5970:	8c 81       	ldd	r24, Y+4	; 0x04
    5972:	81 30       	cpi	r24, 0x01	; 1
    5974:	59 f4       	brne	.+22     	; 0x598c <PORTA_set_pin_pull_mode+0x3a>
    5976:	89 81       	ldd	r24, Y+1	; 0x01
    5978:	9a 81       	ldd	r25, Y+2	; 0x02
    597a:	fc 01       	movw	r30, r24
    597c:	80 81       	ld	r24, Z
    597e:	28 2f       	mov	r18, r24
    5980:	28 60       	ori	r18, 0x08	; 8
    5982:	89 81       	ldd	r24, Y+1	; 0x01
    5984:	9a 81       	ldd	r25, Y+2	; 0x02
    5986:	fc 01       	movw	r30, r24
    5988:	20 83       	st	Z, r18
    598a:	0d c0       	rjmp	.+26     	; 0x59a6 <PORTA_set_pin_pull_mode+0x54>
    598c:	8c 81       	ldd	r24, Y+4	; 0x04
    598e:	88 23       	and	r24, r24
    5990:	51 f4       	brne	.+20     	; 0x59a6 <PORTA_set_pin_pull_mode+0x54>
    5992:	89 81       	ldd	r24, Y+1	; 0x01
    5994:	9a 81       	ldd	r25, Y+2	; 0x02
    5996:	fc 01       	movw	r30, r24
    5998:	80 81       	ld	r24, Z
    599a:	28 2f       	mov	r18, r24
    599c:	27 7f       	andi	r18, 0xF7	; 247
    599e:	89 81       	ldd	r24, Y+1	; 0x01
    59a0:	9a 81       	ldd	r25, Y+2	; 0x02
    59a2:	fc 01       	movw	r30, r24
    59a4:	20 83       	st	Z, r18
    59a6:	00 00       	nop
    59a8:	24 96       	adiw	r28, 0x04	; 4
    59aa:	cd bf       	out	0x3d, r28	; 61
    59ac:	de bf       	out	0x3e, r29	; 62
    59ae:	df 91       	pop	r29
    59b0:	cf 91       	pop	r28
    59b2:	08 95       	ret

000059b4 <PORTA_pin_set_isc>:
    59b4:	cf 93       	push	r28
    59b6:	df 93       	push	r29
    59b8:	00 d0       	rcall	.+0      	; 0x59ba <PORTA_pin_set_isc+0x6>
    59ba:	00 d0       	rcall	.+0      	; 0x59bc <PORTA_pin_set_isc+0x8>
    59bc:	cd b7       	in	r28, 0x3d	; 61
    59be:	de b7       	in	r29, 0x3e	; 62
    59c0:	8b 83       	std	Y+3, r24	; 0x03
    59c2:	6c 83       	std	Y+4, r22	; 0x04
    59c4:	8b 81       	ldd	r24, Y+3	; 0x03
    59c6:	88 2f       	mov	r24, r24
    59c8:	90 e0       	ldi	r25, 0x00	; 0
    59ca:	80 5f       	subi	r24, 0xF0	; 240
    59cc:	9b 4f       	sbci	r25, 0xFB	; 251
    59ce:	89 83       	std	Y+1, r24	; 0x01
    59d0:	9a 83       	std	Y+2, r25	; 0x02
    59d2:	89 81       	ldd	r24, Y+1	; 0x01
    59d4:	9a 81       	ldd	r25, Y+2	; 0x02
    59d6:	fc 01       	movw	r30, r24
    59d8:	80 81       	ld	r24, Z
    59da:	98 2f       	mov	r25, r24
    59dc:	98 7f       	andi	r25, 0xF8	; 248
    59de:	8c 81       	ldd	r24, Y+4	; 0x04
    59e0:	89 2b       	or	r24, r25
    59e2:	28 2f       	mov	r18, r24
    59e4:	89 81       	ldd	r24, Y+1	; 0x01
    59e6:	9a 81       	ldd	r25, Y+2	; 0x02
    59e8:	fc 01       	movw	r30, r24
    59ea:	20 83       	st	Z, r18
    59ec:	00 00       	nop
    59ee:	24 96       	adiw	r28, 0x04	; 4
    59f0:	cd bf       	out	0x3d, r28	; 61
    59f2:	de bf       	out	0x3e, r29	; 62
    59f4:	df 91       	pop	r29
    59f6:	cf 91       	pop	r28
    59f8:	08 95       	ret

000059fa <PORTA_set_pin_dir>:
    59fa:	cf 93       	push	r28
    59fc:	df 93       	push	r29
    59fe:	00 d0       	rcall	.+0      	; 0x5a00 <PORTA_set_pin_dir+0x6>
    5a00:	cd b7       	in	r28, 0x3d	; 61
    5a02:	de b7       	in	r29, 0x3e	; 62
    5a04:	89 83       	std	Y+1, r24	; 0x01
    5a06:	6a 83       	std	Y+2, r22	; 0x02
    5a08:	8a 81       	ldd	r24, Y+2	; 0x02
    5a0a:	88 2f       	mov	r24, r24
    5a0c:	90 e0       	ldi	r25, 0x00	; 0
    5a0e:	81 30       	cpi	r24, 0x01	; 1
    5a10:	91 05       	cpc	r25, r1
    5a12:	e1 f0       	breq	.+56     	; 0x5a4c <PORTA_set_pin_dir+0x52>
    5a14:	82 30       	cpi	r24, 0x02	; 2
    5a16:	91 05       	cpc	r25, r1
    5a18:	71 f1       	breq	.+92     	; 0x5a76 <PORTA_set_pin_dir+0x7c>
    5a1a:	89 2b       	or	r24, r25
    5a1c:	09 f0       	breq	.+2      	; 0x5a20 <PORTA_set_pin_dir+0x26>
    5a1e:	3b c0       	rjmp	.+118    	; 0x5a96 <PORTA_set_pin_dir+0x9c>
    5a20:	20 e0       	ldi	r18, 0x00	; 0
    5a22:	30 e0       	ldi	r19, 0x00	; 0
    5a24:	80 e0       	ldi	r24, 0x00	; 0
    5a26:	90 e0       	ldi	r25, 0x00	; 0
    5a28:	fc 01       	movw	r30, r24
    5a2a:	80 81       	ld	r24, Z
    5a2c:	68 2f       	mov	r22, r24
    5a2e:	89 81       	ldd	r24, Y+1	; 0x01
    5a30:	48 2f       	mov	r20, r24
    5a32:	50 e0       	ldi	r21, 0x00	; 0
    5a34:	81 e0       	ldi	r24, 0x01	; 1
    5a36:	90 e0       	ldi	r25, 0x00	; 0
    5a38:	02 c0       	rjmp	.+4      	; 0x5a3e <PORTA_set_pin_dir+0x44>
    5a3a:	88 0f       	add	r24, r24
    5a3c:	99 1f       	adc	r25, r25
    5a3e:	4a 95       	dec	r20
    5a40:	e2 f7       	brpl	.-8      	; 0x5a3a <PORTA_set_pin_dir+0x40>
    5a42:	80 95       	com	r24
    5a44:	86 23       	and	r24, r22
    5a46:	f9 01       	movw	r30, r18
    5a48:	80 83       	st	Z, r24
    5a4a:	25 c0       	rjmp	.+74     	; 0x5a96 <PORTA_set_pin_dir+0x9c>
    5a4c:	20 e0       	ldi	r18, 0x00	; 0
    5a4e:	30 e0       	ldi	r19, 0x00	; 0
    5a50:	80 e0       	ldi	r24, 0x00	; 0
    5a52:	90 e0       	ldi	r25, 0x00	; 0
    5a54:	fc 01       	movw	r30, r24
    5a56:	80 81       	ld	r24, Z
    5a58:	68 2f       	mov	r22, r24
    5a5a:	89 81       	ldd	r24, Y+1	; 0x01
    5a5c:	48 2f       	mov	r20, r24
    5a5e:	50 e0       	ldi	r21, 0x00	; 0
    5a60:	81 e0       	ldi	r24, 0x01	; 1
    5a62:	90 e0       	ldi	r25, 0x00	; 0
    5a64:	02 c0       	rjmp	.+4      	; 0x5a6a <PORTA_set_pin_dir+0x70>
    5a66:	88 0f       	add	r24, r24
    5a68:	99 1f       	adc	r25, r25
    5a6a:	4a 95       	dec	r20
    5a6c:	e2 f7       	brpl	.-8      	; 0x5a66 <PORTA_set_pin_dir+0x6c>
    5a6e:	86 2b       	or	r24, r22
    5a70:	f9 01       	movw	r30, r18
    5a72:	80 83       	st	Z, r24
    5a74:	10 c0       	rjmp	.+32     	; 0x5a96 <PORTA_set_pin_dir+0x9c>
    5a76:	89 81       	ldd	r24, Y+1	; 0x01
    5a78:	88 2f       	mov	r24, r24
    5a7a:	90 e0       	ldi	r25, 0x00	; 0
    5a7c:	80 5f       	subi	r24, 0xF0	; 240
    5a7e:	9b 4f       	sbci	r25, 0xFB	; 251
    5a80:	29 81       	ldd	r18, Y+1	; 0x01
    5a82:	22 2f       	mov	r18, r18
    5a84:	30 e0       	ldi	r19, 0x00	; 0
    5a86:	20 5f       	subi	r18, 0xF0	; 240
    5a88:	3b 4f       	sbci	r19, 0xFB	; 251
    5a8a:	f9 01       	movw	r30, r18
    5a8c:	20 81       	ld	r18, Z
    5a8e:	28 60       	ori	r18, 0x08	; 8
    5a90:	fc 01       	movw	r30, r24
    5a92:	20 83       	st	Z, r18
    5a94:	00 00       	nop
    5a96:	00 00       	nop
    5a98:	0f 90       	pop	r0
    5a9a:	0f 90       	pop	r0
    5a9c:	df 91       	pop	r29
    5a9e:	cf 91       	pop	r28
    5aa0:	08 95       	ret

00005aa2 <PORTA_set_pin_level>:
    5aa2:	cf 93       	push	r28
    5aa4:	df 93       	push	r29
    5aa6:	00 d0       	rcall	.+0      	; 0x5aa8 <PORTA_set_pin_level+0x6>
    5aa8:	cd b7       	in	r28, 0x3d	; 61
    5aaa:	de b7       	in	r29, 0x3e	; 62
    5aac:	89 83       	std	Y+1, r24	; 0x01
    5aae:	6a 83       	std	Y+2, r22	; 0x02
    5ab0:	8a 81       	ldd	r24, Y+2	; 0x02
    5ab2:	88 23       	and	r24, r24
    5ab4:	a9 f0       	breq	.+42     	; 0x5ae0 <PORTA_set_pin_level+0x3e>
    5ab6:	20 e0       	ldi	r18, 0x00	; 0
    5ab8:	30 e0       	ldi	r19, 0x00	; 0
    5aba:	80 e0       	ldi	r24, 0x00	; 0
    5abc:	90 e0       	ldi	r25, 0x00	; 0
    5abe:	fc 01       	movw	r30, r24
    5ac0:	81 81       	ldd	r24, Z+1	; 0x01
    5ac2:	68 2f       	mov	r22, r24
    5ac4:	89 81       	ldd	r24, Y+1	; 0x01
    5ac6:	48 2f       	mov	r20, r24
    5ac8:	50 e0       	ldi	r21, 0x00	; 0
    5aca:	81 e0       	ldi	r24, 0x01	; 1
    5acc:	90 e0       	ldi	r25, 0x00	; 0
    5ace:	02 c0       	rjmp	.+4      	; 0x5ad4 <PORTA_set_pin_level+0x32>
    5ad0:	88 0f       	add	r24, r24
    5ad2:	99 1f       	adc	r25, r25
    5ad4:	4a 95       	dec	r20
    5ad6:	e2 f7       	brpl	.-8      	; 0x5ad0 <PORTA_set_pin_level+0x2e>
    5ad8:	86 2b       	or	r24, r22
    5ada:	f9 01       	movw	r30, r18
    5adc:	81 83       	std	Z+1, r24	; 0x01
    5ade:	15 c0       	rjmp	.+42     	; 0x5b0a <PORTA_set_pin_level+0x68>
    5ae0:	20 e0       	ldi	r18, 0x00	; 0
    5ae2:	30 e0       	ldi	r19, 0x00	; 0
    5ae4:	80 e0       	ldi	r24, 0x00	; 0
    5ae6:	90 e0       	ldi	r25, 0x00	; 0
    5ae8:	fc 01       	movw	r30, r24
    5aea:	81 81       	ldd	r24, Z+1	; 0x01
    5aec:	68 2f       	mov	r22, r24
    5aee:	89 81       	ldd	r24, Y+1	; 0x01
    5af0:	48 2f       	mov	r20, r24
    5af2:	50 e0       	ldi	r21, 0x00	; 0
    5af4:	81 e0       	ldi	r24, 0x01	; 1
    5af6:	90 e0       	ldi	r25, 0x00	; 0
    5af8:	02 c0       	rjmp	.+4      	; 0x5afe <PORTA_set_pin_level+0x5c>
    5afa:	88 0f       	add	r24, r24
    5afc:	99 1f       	adc	r25, r25
    5afe:	4a 95       	dec	r20
    5b00:	e2 f7       	brpl	.-8      	; 0x5afa <PORTA_set_pin_level+0x58>
    5b02:	80 95       	com	r24
    5b04:	86 23       	and	r24, r22
    5b06:	f9 01       	movw	r30, r18
    5b08:	81 83       	std	Z+1, r24	; 0x01
    5b0a:	00 00       	nop
    5b0c:	0f 90       	pop	r0
    5b0e:	0f 90       	pop	r0
    5b10:	df 91       	pop	r29
    5b12:	cf 91       	pop	r28
    5b14:	08 95       	ret

00005b16 <PORTB_set_pin_dir>:
    5b16:	cf 93       	push	r28
    5b18:	df 93       	push	r29
    5b1a:	00 d0       	rcall	.+0      	; 0x5b1c <PORTB_set_pin_dir+0x6>
    5b1c:	cd b7       	in	r28, 0x3d	; 61
    5b1e:	de b7       	in	r29, 0x3e	; 62
    5b20:	89 83       	std	Y+1, r24	; 0x01
    5b22:	6a 83       	std	Y+2, r22	; 0x02
    5b24:	8a 81       	ldd	r24, Y+2	; 0x02
    5b26:	88 2f       	mov	r24, r24
    5b28:	90 e0       	ldi	r25, 0x00	; 0
    5b2a:	81 30       	cpi	r24, 0x01	; 1
    5b2c:	91 05       	cpc	r25, r1
    5b2e:	e1 f0       	breq	.+56     	; 0x5b68 <PORTB_set_pin_dir+0x52>
    5b30:	82 30       	cpi	r24, 0x02	; 2
    5b32:	91 05       	cpc	r25, r1
    5b34:	71 f1       	breq	.+92     	; 0x5b92 <PORTB_set_pin_dir+0x7c>
    5b36:	89 2b       	or	r24, r25
    5b38:	09 f0       	breq	.+2      	; 0x5b3c <PORTB_set_pin_dir+0x26>
    5b3a:	3b c0       	rjmp	.+118    	; 0x5bb2 <PORTB_set_pin_dir+0x9c>
    5b3c:	84 e0       	ldi	r24, 0x04	; 4
    5b3e:	90 e0       	ldi	r25, 0x00	; 0
    5b40:	24 e0       	ldi	r18, 0x04	; 4
    5b42:	30 e0       	ldi	r19, 0x00	; 0
    5b44:	f9 01       	movw	r30, r18
    5b46:	20 81       	ld	r18, Z
    5b48:	62 2f       	mov	r22, r18
    5b4a:	29 81       	ldd	r18, Y+1	; 0x01
    5b4c:	42 2f       	mov	r20, r18
    5b4e:	50 e0       	ldi	r21, 0x00	; 0
    5b50:	21 e0       	ldi	r18, 0x01	; 1
    5b52:	30 e0       	ldi	r19, 0x00	; 0
    5b54:	02 c0       	rjmp	.+4      	; 0x5b5a <PORTB_set_pin_dir+0x44>
    5b56:	22 0f       	add	r18, r18
    5b58:	33 1f       	adc	r19, r19
    5b5a:	4a 95       	dec	r20
    5b5c:	e2 f7       	brpl	.-8      	; 0x5b56 <PORTB_set_pin_dir+0x40>
    5b5e:	20 95       	com	r18
    5b60:	26 23       	and	r18, r22
    5b62:	fc 01       	movw	r30, r24
    5b64:	20 83       	st	Z, r18
    5b66:	25 c0       	rjmp	.+74     	; 0x5bb2 <PORTB_set_pin_dir+0x9c>
    5b68:	84 e0       	ldi	r24, 0x04	; 4
    5b6a:	90 e0       	ldi	r25, 0x00	; 0
    5b6c:	24 e0       	ldi	r18, 0x04	; 4
    5b6e:	30 e0       	ldi	r19, 0x00	; 0
    5b70:	f9 01       	movw	r30, r18
    5b72:	20 81       	ld	r18, Z
    5b74:	62 2f       	mov	r22, r18
    5b76:	29 81       	ldd	r18, Y+1	; 0x01
    5b78:	42 2f       	mov	r20, r18
    5b7a:	50 e0       	ldi	r21, 0x00	; 0
    5b7c:	21 e0       	ldi	r18, 0x01	; 1
    5b7e:	30 e0       	ldi	r19, 0x00	; 0
    5b80:	02 c0       	rjmp	.+4      	; 0x5b86 <PORTB_set_pin_dir+0x70>
    5b82:	22 0f       	add	r18, r18
    5b84:	33 1f       	adc	r19, r19
    5b86:	4a 95       	dec	r20
    5b88:	e2 f7       	brpl	.-8      	; 0x5b82 <PORTB_set_pin_dir+0x6c>
    5b8a:	26 2b       	or	r18, r22
    5b8c:	fc 01       	movw	r30, r24
    5b8e:	20 83       	st	Z, r18
    5b90:	10 c0       	rjmp	.+32     	; 0x5bb2 <PORTB_set_pin_dir+0x9c>
    5b92:	89 81       	ldd	r24, Y+1	; 0x01
    5b94:	88 2f       	mov	r24, r24
    5b96:	90 e0       	ldi	r25, 0x00	; 0
    5b98:	80 5d       	subi	r24, 0xD0	; 208
    5b9a:	9b 4f       	sbci	r25, 0xFB	; 251
    5b9c:	29 81       	ldd	r18, Y+1	; 0x01
    5b9e:	22 2f       	mov	r18, r18
    5ba0:	30 e0       	ldi	r19, 0x00	; 0
    5ba2:	20 5d       	subi	r18, 0xD0	; 208
    5ba4:	3b 4f       	sbci	r19, 0xFB	; 251
    5ba6:	f9 01       	movw	r30, r18
    5ba8:	20 81       	ld	r18, Z
    5baa:	28 60       	ori	r18, 0x08	; 8
    5bac:	fc 01       	movw	r30, r24
    5bae:	20 83       	st	Z, r18
    5bb0:	00 00       	nop
    5bb2:	00 00       	nop
    5bb4:	0f 90       	pop	r0
    5bb6:	0f 90       	pop	r0
    5bb8:	df 91       	pop	r29
    5bba:	cf 91       	pop	r28
    5bbc:	08 95       	ret

00005bbe <PORTB_set_pin_level>:
    5bbe:	cf 93       	push	r28
    5bc0:	df 93       	push	r29
    5bc2:	00 d0       	rcall	.+0      	; 0x5bc4 <PORTB_set_pin_level+0x6>
    5bc4:	cd b7       	in	r28, 0x3d	; 61
    5bc6:	de b7       	in	r29, 0x3e	; 62
    5bc8:	89 83       	std	Y+1, r24	; 0x01
    5bca:	6a 83       	std	Y+2, r22	; 0x02
    5bcc:	8a 81       	ldd	r24, Y+2	; 0x02
    5bce:	88 23       	and	r24, r24
    5bd0:	a9 f0       	breq	.+42     	; 0x5bfc <PORTB_set_pin_level+0x3e>
    5bd2:	84 e0       	ldi	r24, 0x04	; 4
    5bd4:	90 e0       	ldi	r25, 0x00	; 0
    5bd6:	24 e0       	ldi	r18, 0x04	; 4
    5bd8:	30 e0       	ldi	r19, 0x00	; 0
    5bda:	f9 01       	movw	r30, r18
    5bdc:	21 81       	ldd	r18, Z+1	; 0x01
    5bde:	62 2f       	mov	r22, r18
    5be0:	29 81       	ldd	r18, Y+1	; 0x01
    5be2:	42 2f       	mov	r20, r18
    5be4:	50 e0       	ldi	r21, 0x00	; 0
    5be6:	21 e0       	ldi	r18, 0x01	; 1
    5be8:	30 e0       	ldi	r19, 0x00	; 0
    5bea:	02 c0       	rjmp	.+4      	; 0x5bf0 <PORTB_set_pin_level+0x32>
    5bec:	22 0f       	add	r18, r18
    5bee:	33 1f       	adc	r19, r19
    5bf0:	4a 95       	dec	r20
    5bf2:	e2 f7       	brpl	.-8      	; 0x5bec <PORTB_set_pin_level+0x2e>
    5bf4:	26 2b       	or	r18, r22
    5bf6:	fc 01       	movw	r30, r24
    5bf8:	21 83       	std	Z+1, r18	; 0x01
    5bfa:	15 c0       	rjmp	.+42     	; 0x5c26 <PORTB_set_pin_level+0x68>
    5bfc:	84 e0       	ldi	r24, 0x04	; 4
    5bfe:	90 e0       	ldi	r25, 0x00	; 0
    5c00:	24 e0       	ldi	r18, 0x04	; 4
    5c02:	30 e0       	ldi	r19, 0x00	; 0
    5c04:	f9 01       	movw	r30, r18
    5c06:	21 81       	ldd	r18, Z+1	; 0x01
    5c08:	62 2f       	mov	r22, r18
    5c0a:	29 81       	ldd	r18, Y+1	; 0x01
    5c0c:	42 2f       	mov	r20, r18
    5c0e:	50 e0       	ldi	r21, 0x00	; 0
    5c10:	21 e0       	ldi	r18, 0x01	; 1
    5c12:	30 e0       	ldi	r19, 0x00	; 0
    5c14:	02 c0       	rjmp	.+4      	; 0x5c1a <PORTB_set_pin_level+0x5c>
    5c16:	22 0f       	add	r18, r18
    5c18:	33 1f       	adc	r19, r19
    5c1a:	4a 95       	dec	r20
    5c1c:	e2 f7       	brpl	.-8      	; 0x5c16 <PORTB_set_pin_level+0x58>
    5c1e:	20 95       	com	r18
    5c20:	26 23       	and	r18, r22
    5c22:	fc 01       	movw	r30, r24
    5c24:	21 83       	std	Z+1, r18	; 0x01
    5c26:	00 00       	nop
    5c28:	0f 90       	pop	r0
    5c2a:	0f 90       	pop	r0
    5c2c:	df 91       	pop	r29
    5c2e:	cf 91       	pop	r28
    5c30:	08 95       	ret

00005c32 <PORTC_set_pin_pull_mode>:
    5c32:	cf 93       	push	r28
    5c34:	df 93       	push	r29
    5c36:	00 d0       	rcall	.+0      	; 0x5c38 <PORTC_set_pin_pull_mode+0x6>
    5c38:	00 d0       	rcall	.+0      	; 0x5c3a <PORTC_set_pin_pull_mode+0x8>
    5c3a:	cd b7       	in	r28, 0x3d	; 61
    5c3c:	de b7       	in	r29, 0x3e	; 62
    5c3e:	8b 83       	std	Y+3, r24	; 0x03
    5c40:	6c 83       	std	Y+4, r22	; 0x04
    5c42:	8b 81       	ldd	r24, Y+3	; 0x03
    5c44:	88 2f       	mov	r24, r24
    5c46:	90 e0       	ldi	r25, 0x00	; 0
    5c48:	80 5b       	subi	r24, 0xB0	; 176
    5c4a:	9b 4f       	sbci	r25, 0xFB	; 251
    5c4c:	89 83       	std	Y+1, r24	; 0x01
    5c4e:	9a 83       	std	Y+2, r25	; 0x02
    5c50:	8c 81       	ldd	r24, Y+4	; 0x04
    5c52:	81 30       	cpi	r24, 0x01	; 1
    5c54:	59 f4       	brne	.+22     	; 0x5c6c <PORTC_set_pin_pull_mode+0x3a>
    5c56:	89 81       	ldd	r24, Y+1	; 0x01
    5c58:	9a 81       	ldd	r25, Y+2	; 0x02
    5c5a:	fc 01       	movw	r30, r24
    5c5c:	80 81       	ld	r24, Z
    5c5e:	28 2f       	mov	r18, r24
    5c60:	28 60       	ori	r18, 0x08	; 8
    5c62:	89 81       	ldd	r24, Y+1	; 0x01
    5c64:	9a 81       	ldd	r25, Y+2	; 0x02
    5c66:	fc 01       	movw	r30, r24
    5c68:	20 83       	st	Z, r18
    5c6a:	0d c0       	rjmp	.+26     	; 0x5c86 <PORTC_set_pin_pull_mode+0x54>
    5c6c:	8c 81       	ldd	r24, Y+4	; 0x04
    5c6e:	88 23       	and	r24, r24
    5c70:	51 f4       	brne	.+20     	; 0x5c86 <PORTC_set_pin_pull_mode+0x54>
    5c72:	89 81       	ldd	r24, Y+1	; 0x01
    5c74:	9a 81       	ldd	r25, Y+2	; 0x02
    5c76:	fc 01       	movw	r30, r24
    5c78:	80 81       	ld	r24, Z
    5c7a:	28 2f       	mov	r18, r24
    5c7c:	27 7f       	andi	r18, 0xF7	; 247
    5c7e:	89 81       	ldd	r24, Y+1	; 0x01
    5c80:	9a 81       	ldd	r25, Y+2	; 0x02
    5c82:	fc 01       	movw	r30, r24
    5c84:	20 83       	st	Z, r18
    5c86:	00 00       	nop
    5c88:	24 96       	adiw	r28, 0x04	; 4
    5c8a:	cd bf       	out	0x3d, r28	; 61
    5c8c:	de bf       	out	0x3e, r29	; 62
    5c8e:	df 91       	pop	r29
    5c90:	cf 91       	pop	r28
    5c92:	08 95       	ret

00005c94 <PORTC_pin_set_isc>:
    5c94:	cf 93       	push	r28
    5c96:	df 93       	push	r29
    5c98:	00 d0       	rcall	.+0      	; 0x5c9a <PORTC_pin_set_isc+0x6>
    5c9a:	00 d0       	rcall	.+0      	; 0x5c9c <PORTC_pin_set_isc+0x8>
    5c9c:	cd b7       	in	r28, 0x3d	; 61
    5c9e:	de b7       	in	r29, 0x3e	; 62
    5ca0:	8b 83       	std	Y+3, r24	; 0x03
    5ca2:	6c 83       	std	Y+4, r22	; 0x04
    5ca4:	8b 81       	ldd	r24, Y+3	; 0x03
    5ca6:	88 2f       	mov	r24, r24
    5ca8:	90 e0       	ldi	r25, 0x00	; 0
    5caa:	80 5b       	subi	r24, 0xB0	; 176
    5cac:	9b 4f       	sbci	r25, 0xFB	; 251
    5cae:	89 83       	std	Y+1, r24	; 0x01
    5cb0:	9a 83       	std	Y+2, r25	; 0x02
    5cb2:	89 81       	ldd	r24, Y+1	; 0x01
    5cb4:	9a 81       	ldd	r25, Y+2	; 0x02
    5cb6:	fc 01       	movw	r30, r24
    5cb8:	80 81       	ld	r24, Z
    5cba:	98 2f       	mov	r25, r24
    5cbc:	98 7f       	andi	r25, 0xF8	; 248
    5cbe:	8c 81       	ldd	r24, Y+4	; 0x04
    5cc0:	89 2b       	or	r24, r25
    5cc2:	28 2f       	mov	r18, r24
    5cc4:	89 81       	ldd	r24, Y+1	; 0x01
    5cc6:	9a 81       	ldd	r25, Y+2	; 0x02
    5cc8:	fc 01       	movw	r30, r24
    5cca:	20 83       	st	Z, r18
    5ccc:	00 00       	nop
    5cce:	24 96       	adiw	r28, 0x04	; 4
    5cd0:	cd bf       	out	0x3d, r28	; 61
    5cd2:	de bf       	out	0x3e, r29	; 62
    5cd4:	df 91       	pop	r29
    5cd6:	cf 91       	pop	r28
    5cd8:	08 95       	ret

00005cda <PORTC_set_pin_dir>:
    5cda:	cf 93       	push	r28
    5cdc:	df 93       	push	r29
    5cde:	00 d0       	rcall	.+0      	; 0x5ce0 <PORTC_set_pin_dir+0x6>
    5ce0:	cd b7       	in	r28, 0x3d	; 61
    5ce2:	de b7       	in	r29, 0x3e	; 62
    5ce4:	89 83       	std	Y+1, r24	; 0x01
    5ce6:	6a 83       	std	Y+2, r22	; 0x02
    5ce8:	8a 81       	ldd	r24, Y+2	; 0x02
    5cea:	88 2f       	mov	r24, r24
    5cec:	90 e0       	ldi	r25, 0x00	; 0
    5cee:	81 30       	cpi	r24, 0x01	; 1
    5cf0:	91 05       	cpc	r25, r1
    5cf2:	e1 f0       	breq	.+56     	; 0x5d2c <PORTC_set_pin_dir+0x52>
    5cf4:	82 30       	cpi	r24, 0x02	; 2
    5cf6:	91 05       	cpc	r25, r1
    5cf8:	71 f1       	breq	.+92     	; 0x5d56 <PORTC_set_pin_dir+0x7c>
    5cfa:	89 2b       	or	r24, r25
    5cfc:	09 f0       	breq	.+2      	; 0x5d00 <PORTC_set_pin_dir+0x26>
    5cfe:	3b c0       	rjmp	.+118    	; 0x5d76 <PORTC_set_pin_dir+0x9c>
    5d00:	88 e0       	ldi	r24, 0x08	; 8
    5d02:	90 e0       	ldi	r25, 0x00	; 0
    5d04:	28 e0       	ldi	r18, 0x08	; 8
    5d06:	30 e0       	ldi	r19, 0x00	; 0
    5d08:	f9 01       	movw	r30, r18
    5d0a:	20 81       	ld	r18, Z
    5d0c:	62 2f       	mov	r22, r18
    5d0e:	29 81       	ldd	r18, Y+1	; 0x01
    5d10:	42 2f       	mov	r20, r18
    5d12:	50 e0       	ldi	r21, 0x00	; 0
    5d14:	21 e0       	ldi	r18, 0x01	; 1
    5d16:	30 e0       	ldi	r19, 0x00	; 0
    5d18:	02 c0       	rjmp	.+4      	; 0x5d1e <PORTC_set_pin_dir+0x44>
    5d1a:	22 0f       	add	r18, r18
    5d1c:	33 1f       	adc	r19, r19
    5d1e:	4a 95       	dec	r20
    5d20:	e2 f7       	brpl	.-8      	; 0x5d1a <PORTC_set_pin_dir+0x40>
    5d22:	20 95       	com	r18
    5d24:	26 23       	and	r18, r22
    5d26:	fc 01       	movw	r30, r24
    5d28:	20 83       	st	Z, r18
    5d2a:	25 c0       	rjmp	.+74     	; 0x5d76 <PORTC_set_pin_dir+0x9c>
    5d2c:	88 e0       	ldi	r24, 0x08	; 8
    5d2e:	90 e0       	ldi	r25, 0x00	; 0
    5d30:	28 e0       	ldi	r18, 0x08	; 8
    5d32:	30 e0       	ldi	r19, 0x00	; 0
    5d34:	f9 01       	movw	r30, r18
    5d36:	20 81       	ld	r18, Z
    5d38:	62 2f       	mov	r22, r18
    5d3a:	29 81       	ldd	r18, Y+1	; 0x01
    5d3c:	42 2f       	mov	r20, r18
    5d3e:	50 e0       	ldi	r21, 0x00	; 0
    5d40:	21 e0       	ldi	r18, 0x01	; 1
    5d42:	30 e0       	ldi	r19, 0x00	; 0
    5d44:	02 c0       	rjmp	.+4      	; 0x5d4a <PORTC_set_pin_dir+0x70>
    5d46:	22 0f       	add	r18, r18
    5d48:	33 1f       	adc	r19, r19
    5d4a:	4a 95       	dec	r20
    5d4c:	e2 f7       	brpl	.-8      	; 0x5d46 <PORTC_set_pin_dir+0x6c>
    5d4e:	26 2b       	or	r18, r22
    5d50:	fc 01       	movw	r30, r24
    5d52:	20 83       	st	Z, r18
    5d54:	10 c0       	rjmp	.+32     	; 0x5d76 <PORTC_set_pin_dir+0x9c>
    5d56:	89 81       	ldd	r24, Y+1	; 0x01
    5d58:	88 2f       	mov	r24, r24
    5d5a:	90 e0       	ldi	r25, 0x00	; 0
    5d5c:	80 5b       	subi	r24, 0xB0	; 176
    5d5e:	9b 4f       	sbci	r25, 0xFB	; 251
    5d60:	29 81       	ldd	r18, Y+1	; 0x01
    5d62:	22 2f       	mov	r18, r18
    5d64:	30 e0       	ldi	r19, 0x00	; 0
    5d66:	20 5b       	subi	r18, 0xB0	; 176
    5d68:	3b 4f       	sbci	r19, 0xFB	; 251
    5d6a:	f9 01       	movw	r30, r18
    5d6c:	20 81       	ld	r18, Z
    5d6e:	28 60       	ori	r18, 0x08	; 8
    5d70:	fc 01       	movw	r30, r24
    5d72:	20 83       	st	Z, r18
    5d74:	00 00       	nop
    5d76:	00 00       	nop
    5d78:	0f 90       	pop	r0
    5d7a:	0f 90       	pop	r0
    5d7c:	df 91       	pop	r29
    5d7e:	cf 91       	pop	r28
    5d80:	08 95       	ret

00005d82 <PORTC_set_pin_level>:
    5d82:	cf 93       	push	r28
    5d84:	df 93       	push	r29
    5d86:	00 d0       	rcall	.+0      	; 0x5d88 <PORTC_set_pin_level+0x6>
    5d88:	cd b7       	in	r28, 0x3d	; 61
    5d8a:	de b7       	in	r29, 0x3e	; 62
    5d8c:	89 83       	std	Y+1, r24	; 0x01
    5d8e:	6a 83       	std	Y+2, r22	; 0x02
    5d90:	8a 81       	ldd	r24, Y+2	; 0x02
    5d92:	88 23       	and	r24, r24
    5d94:	a9 f0       	breq	.+42     	; 0x5dc0 <PORTC_set_pin_level+0x3e>
    5d96:	88 e0       	ldi	r24, 0x08	; 8
    5d98:	90 e0       	ldi	r25, 0x00	; 0
    5d9a:	28 e0       	ldi	r18, 0x08	; 8
    5d9c:	30 e0       	ldi	r19, 0x00	; 0
    5d9e:	f9 01       	movw	r30, r18
    5da0:	21 81       	ldd	r18, Z+1	; 0x01
    5da2:	62 2f       	mov	r22, r18
    5da4:	29 81       	ldd	r18, Y+1	; 0x01
    5da6:	42 2f       	mov	r20, r18
    5da8:	50 e0       	ldi	r21, 0x00	; 0
    5daa:	21 e0       	ldi	r18, 0x01	; 1
    5dac:	30 e0       	ldi	r19, 0x00	; 0
    5dae:	02 c0       	rjmp	.+4      	; 0x5db4 <PORTC_set_pin_level+0x32>
    5db0:	22 0f       	add	r18, r18
    5db2:	33 1f       	adc	r19, r19
    5db4:	4a 95       	dec	r20
    5db6:	e2 f7       	brpl	.-8      	; 0x5db0 <PORTC_set_pin_level+0x2e>
    5db8:	26 2b       	or	r18, r22
    5dba:	fc 01       	movw	r30, r24
    5dbc:	21 83       	std	Z+1, r18	; 0x01
    5dbe:	15 c0       	rjmp	.+42     	; 0x5dea <PORTC_set_pin_level+0x68>
    5dc0:	88 e0       	ldi	r24, 0x08	; 8
    5dc2:	90 e0       	ldi	r25, 0x00	; 0
    5dc4:	28 e0       	ldi	r18, 0x08	; 8
    5dc6:	30 e0       	ldi	r19, 0x00	; 0
    5dc8:	f9 01       	movw	r30, r18
    5dca:	21 81       	ldd	r18, Z+1	; 0x01
    5dcc:	62 2f       	mov	r22, r18
    5dce:	29 81       	ldd	r18, Y+1	; 0x01
    5dd0:	42 2f       	mov	r20, r18
    5dd2:	50 e0       	ldi	r21, 0x00	; 0
    5dd4:	21 e0       	ldi	r18, 0x01	; 1
    5dd6:	30 e0       	ldi	r19, 0x00	; 0
    5dd8:	02 c0       	rjmp	.+4      	; 0x5dde <PORTC_set_pin_level+0x5c>
    5dda:	22 0f       	add	r18, r18
    5ddc:	33 1f       	adc	r19, r19
    5dde:	4a 95       	dec	r20
    5de0:	e2 f7       	brpl	.-8      	; 0x5dda <PORTC_set_pin_level+0x58>
    5de2:	20 95       	com	r18
    5de4:	26 23       	and	r18, r22
    5de6:	fc 01       	movw	r30, r24
    5de8:	21 83       	std	Z+1, r18	; 0x01
    5dea:	00 00       	nop
    5dec:	0f 90       	pop	r0
    5dee:	0f 90       	pop	r0
    5df0:	df 91       	pop	r29
    5df2:	cf 91       	pop	r28
    5df4:	08 95       	ret

00005df6 <PORTD_set_pin_pull_mode>:
    5df6:	cf 93       	push	r28
    5df8:	df 93       	push	r29
    5dfa:	00 d0       	rcall	.+0      	; 0x5dfc <PORTD_set_pin_pull_mode+0x6>
    5dfc:	00 d0       	rcall	.+0      	; 0x5dfe <PORTD_set_pin_pull_mode+0x8>
    5dfe:	cd b7       	in	r28, 0x3d	; 61
    5e00:	de b7       	in	r29, 0x3e	; 62
    5e02:	8b 83       	std	Y+3, r24	; 0x03
    5e04:	6c 83       	std	Y+4, r22	; 0x04
    5e06:	8b 81       	ldd	r24, Y+3	; 0x03
    5e08:	88 2f       	mov	r24, r24
    5e0a:	90 e0       	ldi	r25, 0x00	; 0
    5e0c:	80 59       	subi	r24, 0x90	; 144
    5e0e:	9b 4f       	sbci	r25, 0xFB	; 251
    5e10:	89 83       	std	Y+1, r24	; 0x01
    5e12:	9a 83       	std	Y+2, r25	; 0x02
    5e14:	8c 81       	ldd	r24, Y+4	; 0x04
    5e16:	81 30       	cpi	r24, 0x01	; 1
    5e18:	59 f4       	brne	.+22     	; 0x5e30 <PORTD_set_pin_pull_mode+0x3a>
    5e1a:	89 81       	ldd	r24, Y+1	; 0x01
    5e1c:	9a 81       	ldd	r25, Y+2	; 0x02
    5e1e:	fc 01       	movw	r30, r24
    5e20:	80 81       	ld	r24, Z
    5e22:	28 2f       	mov	r18, r24
    5e24:	28 60       	ori	r18, 0x08	; 8
    5e26:	89 81       	ldd	r24, Y+1	; 0x01
    5e28:	9a 81       	ldd	r25, Y+2	; 0x02
    5e2a:	fc 01       	movw	r30, r24
    5e2c:	20 83       	st	Z, r18
    5e2e:	0d c0       	rjmp	.+26     	; 0x5e4a <PORTD_set_pin_pull_mode+0x54>
    5e30:	8c 81       	ldd	r24, Y+4	; 0x04
    5e32:	88 23       	and	r24, r24
    5e34:	51 f4       	brne	.+20     	; 0x5e4a <PORTD_set_pin_pull_mode+0x54>
    5e36:	89 81       	ldd	r24, Y+1	; 0x01
    5e38:	9a 81       	ldd	r25, Y+2	; 0x02
    5e3a:	fc 01       	movw	r30, r24
    5e3c:	80 81       	ld	r24, Z
    5e3e:	28 2f       	mov	r18, r24
    5e40:	27 7f       	andi	r18, 0xF7	; 247
    5e42:	89 81       	ldd	r24, Y+1	; 0x01
    5e44:	9a 81       	ldd	r25, Y+2	; 0x02
    5e46:	fc 01       	movw	r30, r24
    5e48:	20 83       	st	Z, r18
    5e4a:	00 00       	nop
    5e4c:	24 96       	adiw	r28, 0x04	; 4
    5e4e:	cd bf       	out	0x3d, r28	; 61
    5e50:	de bf       	out	0x3e, r29	; 62
    5e52:	df 91       	pop	r29
    5e54:	cf 91       	pop	r28
    5e56:	08 95       	ret

00005e58 <PORTD_pin_set_isc>:
    5e58:	cf 93       	push	r28
    5e5a:	df 93       	push	r29
    5e5c:	00 d0       	rcall	.+0      	; 0x5e5e <PORTD_pin_set_isc+0x6>
    5e5e:	00 d0       	rcall	.+0      	; 0x5e60 <PORTD_pin_set_isc+0x8>
    5e60:	cd b7       	in	r28, 0x3d	; 61
    5e62:	de b7       	in	r29, 0x3e	; 62
    5e64:	8b 83       	std	Y+3, r24	; 0x03
    5e66:	6c 83       	std	Y+4, r22	; 0x04
    5e68:	8b 81       	ldd	r24, Y+3	; 0x03
    5e6a:	88 2f       	mov	r24, r24
    5e6c:	90 e0       	ldi	r25, 0x00	; 0
    5e6e:	80 59       	subi	r24, 0x90	; 144
    5e70:	9b 4f       	sbci	r25, 0xFB	; 251
    5e72:	89 83       	std	Y+1, r24	; 0x01
    5e74:	9a 83       	std	Y+2, r25	; 0x02
    5e76:	89 81       	ldd	r24, Y+1	; 0x01
    5e78:	9a 81       	ldd	r25, Y+2	; 0x02
    5e7a:	fc 01       	movw	r30, r24
    5e7c:	80 81       	ld	r24, Z
    5e7e:	98 2f       	mov	r25, r24
    5e80:	98 7f       	andi	r25, 0xF8	; 248
    5e82:	8c 81       	ldd	r24, Y+4	; 0x04
    5e84:	89 2b       	or	r24, r25
    5e86:	28 2f       	mov	r18, r24
    5e88:	89 81       	ldd	r24, Y+1	; 0x01
    5e8a:	9a 81       	ldd	r25, Y+2	; 0x02
    5e8c:	fc 01       	movw	r30, r24
    5e8e:	20 83       	st	Z, r18
    5e90:	00 00       	nop
    5e92:	24 96       	adiw	r28, 0x04	; 4
    5e94:	cd bf       	out	0x3d, r28	; 61
    5e96:	de bf       	out	0x3e, r29	; 62
    5e98:	df 91       	pop	r29
    5e9a:	cf 91       	pop	r28
    5e9c:	08 95       	ret

00005e9e <PORTD_set_pin_dir>:
    5e9e:	cf 93       	push	r28
    5ea0:	df 93       	push	r29
    5ea2:	00 d0       	rcall	.+0      	; 0x5ea4 <PORTD_set_pin_dir+0x6>
    5ea4:	cd b7       	in	r28, 0x3d	; 61
    5ea6:	de b7       	in	r29, 0x3e	; 62
    5ea8:	89 83       	std	Y+1, r24	; 0x01
    5eaa:	6a 83       	std	Y+2, r22	; 0x02
    5eac:	8a 81       	ldd	r24, Y+2	; 0x02
    5eae:	88 2f       	mov	r24, r24
    5eb0:	90 e0       	ldi	r25, 0x00	; 0
    5eb2:	81 30       	cpi	r24, 0x01	; 1
    5eb4:	91 05       	cpc	r25, r1
    5eb6:	e1 f0       	breq	.+56     	; 0x5ef0 <PORTD_set_pin_dir+0x52>
    5eb8:	82 30       	cpi	r24, 0x02	; 2
    5eba:	91 05       	cpc	r25, r1
    5ebc:	71 f1       	breq	.+92     	; 0x5f1a <PORTD_set_pin_dir+0x7c>
    5ebe:	89 2b       	or	r24, r25
    5ec0:	09 f0       	breq	.+2      	; 0x5ec4 <PORTD_set_pin_dir+0x26>
    5ec2:	3b c0       	rjmp	.+118    	; 0x5f3a <PORTD_set_pin_dir+0x9c>
    5ec4:	8c e0       	ldi	r24, 0x0C	; 12
    5ec6:	90 e0       	ldi	r25, 0x00	; 0
    5ec8:	2c e0       	ldi	r18, 0x0C	; 12
    5eca:	30 e0       	ldi	r19, 0x00	; 0
    5ecc:	f9 01       	movw	r30, r18
    5ece:	20 81       	ld	r18, Z
    5ed0:	62 2f       	mov	r22, r18
    5ed2:	29 81       	ldd	r18, Y+1	; 0x01
    5ed4:	42 2f       	mov	r20, r18
    5ed6:	50 e0       	ldi	r21, 0x00	; 0
    5ed8:	21 e0       	ldi	r18, 0x01	; 1
    5eda:	30 e0       	ldi	r19, 0x00	; 0
    5edc:	02 c0       	rjmp	.+4      	; 0x5ee2 <PORTD_set_pin_dir+0x44>
    5ede:	22 0f       	add	r18, r18
    5ee0:	33 1f       	adc	r19, r19
    5ee2:	4a 95       	dec	r20
    5ee4:	e2 f7       	brpl	.-8      	; 0x5ede <PORTD_set_pin_dir+0x40>
    5ee6:	20 95       	com	r18
    5ee8:	26 23       	and	r18, r22
    5eea:	fc 01       	movw	r30, r24
    5eec:	20 83       	st	Z, r18
    5eee:	25 c0       	rjmp	.+74     	; 0x5f3a <PORTD_set_pin_dir+0x9c>
    5ef0:	8c e0       	ldi	r24, 0x0C	; 12
    5ef2:	90 e0       	ldi	r25, 0x00	; 0
    5ef4:	2c e0       	ldi	r18, 0x0C	; 12
    5ef6:	30 e0       	ldi	r19, 0x00	; 0
    5ef8:	f9 01       	movw	r30, r18
    5efa:	20 81       	ld	r18, Z
    5efc:	62 2f       	mov	r22, r18
    5efe:	29 81       	ldd	r18, Y+1	; 0x01
    5f00:	42 2f       	mov	r20, r18
    5f02:	50 e0       	ldi	r21, 0x00	; 0
    5f04:	21 e0       	ldi	r18, 0x01	; 1
    5f06:	30 e0       	ldi	r19, 0x00	; 0
    5f08:	02 c0       	rjmp	.+4      	; 0x5f0e <PORTD_set_pin_dir+0x70>
    5f0a:	22 0f       	add	r18, r18
    5f0c:	33 1f       	adc	r19, r19
    5f0e:	4a 95       	dec	r20
    5f10:	e2 f7       	brpl	.-8      	; 0x5f0a <PORTD_set_pin_dir+0x6c>
    5f12:	26 2b       	or	r18, r22
    5f14:	fc 01       	movw	r30, r24
    5f16:	20 83       	st	Z, r18
    5f18:	10 c0       	rjmp	.+32     	; 0x5f3a <PORTD_set_pin_dir+0x9c>
    5f1a:	89 81       	ldd	r24, Y+1	; 0x01
    5f1c:	88 2f       	mov	r24, r24
    5f1e:	90 e0       	ldi	r25, 0x00	; 0
    5f20:	80 59       	subi	r24, 0x90	; 144
    5f22:	9b 4f       	sbci	r25, 0xFB	; 251
    5f24:	29 81       	ldd	r18, Y+1	; 0x01
    5f26:	22 2f       	mov	r18, r18
    5f28:	30 e0       	ldi	r19, 0x00	; 0
    5f2a:	20 59       	subi	r18, 0x90	; 144
    5f2c:	3b 4f       	sbci	r19, 0xFB	; 251
    5f2e:	f9 01       	movw	r30, r18
    5f30:	20 81       	ld	r18, Z
    5f32:	28 60       	ori	r18, 0x08	; 8
    5f34:	fc 01       	movw	r30, r24
    5f36:	20 83       	st	Z, r18
    5f38:	00 00       	nop
    5f3a:	00 00       	nop
    5f3c:	0f 90       	pop	r0
    5f3e:	0f 90       	pop	r0
    5f40:	df 91       	pop	r29
    5f42:	cf 91       	pop	r28
    5f44:	08 95       	ret

00005f46 <PORTE_set_pin_dir>:
    5f46:	cf 93       	push	r28
    5f48:	df 93       	push	r29
    5f4a:	00 d0       	rcall	.+0      	; 0x5f4c <PORTE_set_pin_dir+0x6>
    5f4c:	cd b7       	in	r28, 0x3d	; 61
    5f4e:	de b7       	in	r29, 0x3e	; 62
    5f50:	89 83       	std	Y+1, r24	; 0x01
    5f52:	6a 83       	std	Y+2, r22	; 0x02
    5f54:	8a 81       	ldd	r24, Y+2	; 0x02
    5f56:	88 2f       	mov	r24, r24
    5f58:	90 e0       	ldi	r25, 0x00	; 0
    5f5a:	81 30       	cpi	r24, 0x01	; 1
    5f5c:	91 05       	cpc	r25, r1
    5f5e:	e1 f0       	breq	.+56     	; 0x5f98 <PORTE_set_pin_dir+0x52>
    5f60:	82 30       	cpi	r24, 0x02	; 2
    5f62:	91 05       	cpc	r25, r1
    5f64:	71 f1       	breq	.+92     	; 0x5fc2 <PORTE_set_pin_dir+0x7c>
    5f66:	89 2b       	or	r24, r25
    5f68:	09 f0       	breq	.+2      	; 0x5f6c <PORTE_set_pin_dir+0x26>
    5f6a:	3b c0       	rjmp	.+118    	; 0x5fe2 <PORTE_set_pin_dir+0x9c>
    5f6c:	80 e1       	ldi	r24, 0x10	; 16
    5f6e:	90 e0       	ldi	r25, 0x00	; 0
    5f70:	20 e1       	ldi	r18, 0x10	; 16
    5f72:	30 e0       	ldi	r19, 0x00	; 0
    5f74:	f9 01       	movw	r30, r18
    5f76:	20 81       	ld	r18, Z
    5f78:	62 2f       	mov	r22, r18
    5f7a:	29 81       	ldd	r18, Y+1	; 0x01
    5f7c:	42 2f       	mov	r20, r18
    5f7e:	50 e0       	ldi	r21, 0x00	; 0
    5f80:	21 e0       	ldi	r18, 0x01	; 1
    5f82:	30 e0       	ldi	r19, 0x00	; 0
    5f84:	02 c0       	rjmp	.+4      	; 0x5f8a <PORTE_set_pin_dir+0x44>
    5f86:	22 0f       	add	r18, r18
    5f88:	33 1f       	adc	r19, r19
    5f8a:	4a 95       	dec	r20
    5f8c:	e2 f7       	brpl	.-8      	; 0x5f86 <PORTE_set_pin_dir+0x40>
    5f8e:	20 95       	com	r18
    5f90:	26 23       	and	r18, r22
    5f92:	fc 01       	movw	r30, r24
    5f94:	20 83       	st	Z, r18
    5f96:	25 c0       	rjmp	.+74     	; 0x5fe2 <PORTE_set_pin_dir+0x9c>
    5f98:	80 e1       	ldi	r24, 0x10	; 16
    5f9a:	90 e0       	ldi	r25, 0x00	; 0
    5f9c:	20 e1       	ldi	r18, 0x10	; 16
    5f9e:	30 e0       	ldi	r19, 0x00	; 0
    5fa0:	f9 01       	movw	r30, r18
    5fa2:	20 81       	ld	r18, Z
    5fa4:	62 2f       	mov	r22, r18
    5fa6:	29 81       	ldd	r18, Y+1	; 0x01
    5fa8:	42 2f       	mov	r20, r18
    5faa:	50 e0       	ldi	r21, 0x00	; 0
    5fac:	21 e0       	ldi	r18, 0x01	; 1
    5fae:	30 e0       	ldi	r19, 0x00	; 0
    5fb0:	02 c0       	rjmp	.+4      	; 0x5fb6 <PORTE_set_pin_dir+0x70>
    5fb2:	22 0f       	add	r18, r18
    5fb4:	33 1f       	adc	r19, r19
    5fb6:	4a 95       	dec	r20
    5fb8:	e2 f7       	brpl	.-8      	; 0x5fb2 <PORTE_set_pin_dir+0x6c>
    5fba:	26 2b       	or	r18, r22
    5fbc:	fc 01       	movw	r30, r24
    5fbe:	20 83       	st	Z, r18
    5fc0:	10 c0       	rjmp	.+32     	; 0x5fe2 <PORTE_set_pin_dir+0x9c>
    5fc2:	89 81       	ldd	r24, Y+1	; 0x01
    5fc4:	88 2f       	mov	r24, r24
    5fc6:	90 e0       	ldi	r25, 0x00	; 0
    5fc8:	80 57       	subi	r24, 0x70	; 112
    5fca:	9b 4f       	sbci	r25, 0xFB	; 251
    5fcc:	29 81       	ldd	r18, Y+1	; 0x01
    5fce:	22 2f       	mov	r18, r18
    5fd0:	30 e0       	ldi	r19, 0x00	; 0
    5fd2:	20 57       	subi	r18, 0x70	; 112
    5fd4:	3b 4f       	sbci	r19, 0xFB	; 251
    5fd6:	f9 01       	movw	r30, r18
    5fd8:	20 81       	ld	r18, Z
    5fda:	28 60       	ori	r18, 0x08	; 8
    5fdc:	fc 01       	movw	r30, r24
    5fde:	20 83       	st	Z, r18
    5fe0:	00 00       	nop
    5fe2:	00 00       	nop
    5fe4:	0f 90       	pop	r0
    5fe6:	0f 90       	pop	r0
    5fe8:	df 91       	pop	r29
    5fea:	cf 91       	pop	r28
    5fec:	08 95       	ret

00005fee <PORTF_set_pin_dir>:
    5fee:	cf 93       	push	r28
    5ff0:	df 93       	push	r29
    5ff2:	00 d0       	rcall	.+0      	; 0x5ff4 <PORTF_set_pin_dir+0x6>
    5ff4:	cd b7       	in	r28, 0x3d	; 61
    5ff6:	de b7       	in	r29, 0x3e	; 62
    5ff8:	89 83       	std	Y+1, r24	; 0x01
    5ffa:	6a 83       	std	Y+2, r22	; 0x02
    5ffc:	8a 81       	ldd	r24, Y+2	; 0x02
    5ffe:	88 2f       	mov	r24, r24
    6000:	90 e0       	ldi	r25, 0x00	; 0
    6002:	81 30       	cpi	r24, 0x01	; 1
    6004:	91 05       	cpc	r25, r1
    6006:	e1 f0       	breq	.+56     	; 0x6040 <PORTF_set_pin_dir+0x52>
    6008:	82 30       	cpi	r24, 0x02	; 2
    600a:	91 05       	cpc	r25, r1
    600c:	71 f1       	breq	.+92     	; 0x606a <PORTF_set_pin_dir+0x7c>
    600e:	89 2b       	or	r24, r25
    6010:	09 f0       	breq	.+2      	; 0x6014 <PORTF_set_pin_dir+0x26>
    6012:	3b c0       	rjmp	.+118    	; 0x608a <PORTF_set_pin_dir+0x9c>
    6014:	84 e1       	ldi	r24, 0x14	; 20
    6016:	90 e0       	ldi	r25, 0x00	; 0
    6018:	24 e1       	ldi	r18, 0x14	; 20
    601a:	30 e0       	ldi	r19, 0x00	; 0
    601c:	f9 01       	movw	r30, r18
    601e:	20 81       	ld	r18, Z
    6020:	62 2f       	mov	r22, r18
    6022:	29 81       	ldd	r18, Y+1	; 0x01
    6024:	42 2f       	mov	r20, r18
    6026:	50 e0       	ldi	r21, 0x00	; 0
    6028:	21 e0       	ldi	r18, 0x01	; 1
    602a:	30 e0       	ldi	r19, 0x00	; 0
    602c:	02 c0       	rjmp	.+4      	; 0x6032 <PORTF_set_pin_dir+0x44>
    602e:	22 0f       	add	r18, r18
    6030:	33 1f       	adc	r19, r19
    6032:	4a 95       	dec	r20
    6034:	e2 f7       	brpl	.-8      	; 0x602e <PORTF_set_pin_dir+0x40>
    6036:	20 95       	com	r18
    6038:	26 23       	and	r18, r22
    603a:	fc 01       	movw	r30, r24
    603c:	20 83       	st	Z, r18
    603e:	25 c0       	rjmp	.+74     	; 0x608a <PORTF_set_pin_dir+0x9c>
    6040:	84 e1       	ldi	r24, 0x14	; 20
    6042:	90 e0       	ldi	r25, 0x00	; 0
    6044:	24 e1       	ldi	r18, 0x14	; 20
    6046:	30 e0       	ldi	r19, 0x00	; 0
    6048:	f9 01       	movw	r30, r18
    604a:	20 81       	ld	r18, Z
    604c:	62 2f       	mov	r22, r18
    604e:	29 81       	ldd	r18, Y+1	; 0x01
    6050:	42 2f       	mov	r20, r18
    6052:	50 e0       	ldi	r21, 0x00	; 0
    6054:	21 e0       	ldi	r18, 0x01	; 1
    6056:	30 e0       	ldi	r19, 0x00	; 0
    6058:	02 c0       	rjmp	.+4      	; 0x605e <PORTF_set_pin_dir+0x70>
    605a:	22 0f       	add	r18, r18
    605c:	33 1f       	adc	r19, r19
    605e:	4a 95       	dec	r20
    6060:	e2 f7       	brpl	.-8      	; 0x605a <PORTF_set_pin_dir+0x6c>
    6062:	26 2b       	or	r18, r22
    6064:	fc 01       	movw	r30, r24
    6066:	20 83       	st	Z, r18
    6068:	10 c0       	rjmp	.+32     	; 0x608a <PORTF_set_pin_dir+0x9c>
    606a:	89 81       	ldd	r24, Y+1	; 0x01
    606c:	88 2f       	mov	r24, r24
    606e:	90 e0       	ldi	r25, 0x00	; 0
    6070:	80 55       	subi	r24, 0x50	; 80
    6072:	9b 4f       	sbci	r25, 0xFB	; 251
    6074:	29 81       	ldd	r18, Y+1	; 0x01
    6076:	22 2f       	mov	r18, r18
    6078:	30 e0       	ldi	r19, 0x00	; 0
    607a:	20 55       	subi	r18, 0x50	; 80
    607c:	3b 4f       	sbci	r19, 0xFB	; 251
    607e:	f9 01       	movw	r30, r18
    6080:	20 81       	ld	r18, Z
    6082:	28 60       	ori	r18, 0x08	; 8
    6084:	fc 01       	movw	r30, r24
    6086:	20 83       	st	Z, r18
    6088:	00 00       	nop
    608a:	00 00       	nop
    608c:	0f 90       	pop	r0
    608e:	0f 90       	pop	r0
    6090:	df 91       	pop	r29
    6092:	cf 91       	pop	r28
    6094:	08 95       	ret

00006096 <_Z10BINIO_initv>:
// 	
// 	PORTA.INTFLAGS = 0xFF; /* Clear all flags */
// }

void BINIO_init(void)
{
    6096:	cf 93       	push	r28
    6098:	df 93       	push	r29
    609a:	cd b7       	in	r28, 0x3d	; 61
    609c:	de b7       	in	r29, 0x3e	; 62
	/* PORTA *************************************************************************************/
	
	/* PORTA.PIN0 = TXDO USART */
	/* PORTA.PIN1 = RXD0 USART */
	
	PORTA_set_pin_dir(FAN_ENABLE, PORT_DIR_OUT);
    609e:	61 e0       	ldi	r22, 0x01	; 1
    60a0:	81 e0       	ldi	r24, 0x01	; 1
    60a2:	0e 94 fd 2c 	call	0x59fa	; 0x59fa <PORTA_set_pin_dir>
	PORTA_set_pin_level(FAN_ENABLE, LOW);
    60a6:	60 e0       	ldi	r22, 0x00	; 0
    60a8:	81 e0       	ldi	r24, 0x01	; 1
    60aa:	0e 94 51 2d 	call	0x5aa2	; 0x5aa2 <PORTA_set_pin_level>
	
	PORTA_set_pin_dir(RTC_SQW, PORT_DIR_IN);
    60ae:	60 e0       	ldi	r22, 0x00	; 0
    60b0:	82 e0       	ldi	r24, 0x02	; 2
    60b2:	0e 94 fd 2c 	call	0x59fa	; 0x59fa <PORTA_set_pin_dir>
	PORTA_set_pin_pull_mode(RTC_SQW, PORT_PULL_UP);
    60b6:	61 e0       	ldi	r22, 0x01	; 1
    60b8:	82 e0       	ldi	r24, 0x02	; 2
    60ba:	0e 94 a9 2c 	call	0x5952	; 0x5952 <PORTA_set_pin_pull_mode>
	PORTA_pin_set_isc(RTC_SQW, PORT_ISC_RISING_gc);
    60be:	62 e0       	ldi	r22, 0x02	; 2
    60c0:	82 e0       	ldi	r24, 0x02	; 2
    60c2:	0e 94 da 2c 	call	0x59b4	; 0x59b4 <PORTA_pin_set_isc>
	
	PORTA_set_pin_dir(FET_DRIVER_ENABLE, PORT_DIR_OUT);
    60c6:	61 e0       	ldi	r22, 0x01	; 1
    60c8:	83 e0       	ldi	r24, 0x03	; 3
    60ca:	0e 94 fd 2c 	call	0x59fa	; 0x59fa <PORTA_set_pin_dir>
	PORTA_set_pin_level(FET_DRIVER_ENABLE, LOW);
    60ce:	60 e0       	ldi	r22, 0x00	; 0
    60d0:	83 e0       	ldi	r24, 0x03	; 3
    60d2:	0e 94 51 2d 	call	0x5aa2	; 0x5aa2 <PORTA_set_pin_level>
	
// 	PORTA_set_pin_dir(ANT_CONNECT_INT, PORT_DIR_IN);
// 	PORTA_set_pin_pull_mode(ANT_CONNECT_INT, PORT_PULL_UP);
// 	PORTA_pin_set_isc(ANT_CONNECT_INT, PORT_ISC_FALLING_gc);

	PORTA_set_pin_dir(WIFI_ENABLE, PORT_DIR_OUT);
    60d6:	61 e0       	ldi	r22, 0x01	; 1
    60d8:	85 e0       	ldi	r24, 0x05	; 5
    60da:	0e 94 fd 2c 	call	0x59fa	; 0x59fa <PORTA_set_pin_dir>
	PORTA_set_pin_level(WIFI_ENABLE, LOW);
    60de:	60 e0       	ldi	r22, 0x00	; 0
    60e0:	85 e0       	ldi	r24, 0x05	; 5
    60e2:	0e 94 51 2d 	call	0x5aa2	; 0x5aa2 <PORTA_set_pin_level>
	
	PORTA_set_pin_dir(WIFI_RESET, PORT_DIR_OUT);
    60e6:	61 e0       	ldi	r22, 0x01	; 1
    60e8:	86 e0       	ldi	r24, 0x06	; 6
    60ea:	0e 94 fd 2c 	call	0x59fa	; 0x59fa <PORTA_set_pin_dir>
	PORTA_set_pin_level(WIFI_RESET, LOW);
    60ee:	60 e0       	ldi	r22, 0x00	; 0
    60f0:	86 e0       	ldi	r24, 0x06	; 6
    60f2:	0e 94 51 2d 	call	0x5aa2	; 0x5aa2 <PORTA_set_pin_level>
	
	PORTA_set_pin_dir(V3V3_PWR_ENABLE, PORT_DIR_OUT);
    60f6:	61 e0       	ldi	r22, 0x01	; 1
    60f8:	87 e0       	ldi	r24, 0x07	; 7
    60fa:	0e 94 fd 2c 	call	0x59fa	; 0x59fa <PORTA_set_pin_dir>
	PORTA_set_pin_level(V3V3_PWR_ENABLE, LOW);
    60fe:	60 e0       	ldi	r22, 0x00	; 0
    6100:	87 e0       	ldi	r24, 0x07	; 7
    6102:	0e 94 51 2d 	call	0x5aa2	; 0x5aa2 <PORTA_set_pin_level>
	
	/* PORTB *************************************************************************************/

	PORTB_set_pin_dir(PROC_PTT_OUT, PORT_DIR_OUT);
    6106:	61 e0       	ldi	r22, 0x01	; 1
    6108:	80 e0       	ldi	r24, 0x00	; 0
    610a:	0e 94 8b 2d 	call	0x5b16	; 0x5b16 <PORTB_set_pin_dir>
	PORTB_set_pin_level(PROC_PTT_OUT, LOW);
    610e:	60 e0       	ldi	r22, 0x00	; 0
    6110:	80 e0       	ldi	r24, 0x00	; 0
    6112:	0e 94 df 2d 	call	0x5bbe	; 0x5bbe <PORTB_set_pin_level>
	
	PORTB_set_pin_dir(PROC_TONE_OUT, PORT_DIR_OUT);
    6116:	61 e0       	ldi	r22, 0x01	; 1
    6118:	81 e0       	ldi	r24, 0x01	; 1
    611a:	0e 94 8b 2d 	call	0x5b16	; 0x5b16 <PORTB_set_pin_dir>
	PORTB_set_pin_level(PROC_TONE_OUT, LOW);
    611e:	60 e0       	ldi	r22, 0x00	; 0
    6120:	81 e0       	ldi	r24, 0x01	; 1
    6122:	0e 94 df 2d 	call	0x5bbe	; 0x5bbe <PORTB_set_pin_level>
	
	/* PORTB.PIN2 = SDA1 I2C */
	/* PORTB.PIN3 = SCL1 I2C */
	PORTB_set_pin_dir(MAIN_PWR_ENABLE, PORT_DIR_OUT);
    6126:	61 e0       	ldi	r22, 0x01	; 1
    6128:	84 e0       	ldi	r24, 0x04	; 4
    612a:	0e 94 8b 2d 	call	0x5b16	; 0x5b16 <PORTB_set_pin_dir>
	PORTB_set_pin_level(MAIN_PWR_ENABLE, LOW);
    612e:	60 e0       	ldi	r22, 0x00	; 0
    6130:	84 e0       	ldi	r24, 0x04	; 4
    6132:	0e 94 df 2d 	call	0x5bbe	; 0x5bbe <PORTB_set_pin_level>
	
	PORTB_set_pin_dir(TX_FINAL_VOLTAGE_ENABLE, PORT_DIR_OUT);
    6136:	61 e0       	ldi	r22, 0x01	; 1
    6138:	85 e0       	ldi	r24, 0x05	; 5
    613a:	0e 94 8b 2d 	call	0x5b16	; 0x5b16 <PORTB_set_pin_dir>
	PORTB_set_pin_level(TX_FINAL_VOLTAGE_ENABLE, LOW);
    613e:	60 e0       	ldi	r22, 0x00	; 0
    6140:	85 e0       	ldi	r24, 0x05	; 5
    6142:	0e 94 df 2d 	call	0x5bbe	; 0x5bbe <PORTB_set_pin_level>
	/* PORTC.PIN0 = TXD1 USART TO_WIFI_RX */
	/* PORTC.PIN1 = RXD1 USART FROM_WIFI_TX */

	/* PORTC.PIN2 = SDA0 I2C */
	/* PORTC.PIN3 = SCL0 I2C */
	PORTC_set_pin_dir(RTC_SDA, PORT_DIR_IN);
    6146:	60 e0       	ldi	r22, 0x00	; 0
    6148:	82 e0       	ldi	r24, 0x02	; 2
    614a:	0e 94 6d 2e 	call	0x5cda	; 0x5cda <PORTC_set_pin_dir>
	PORTC_set_pin_pull_mode(RTC_SDA, PORT_PULL_UP);
    614e:	61 e0       	ldi	r22, 0x01	; 1
    6150:	82 e0       	ldi	r24, 0x02	; 2
    6152:	0e 94 19 2e 	call	0x5c32	; 0x5c32 <PORTC_set_pin_pull_mode>
	
	PORTC_set_pin_dir(RTC_SCL, PORT_DIR_IN);
    6156:	60 e0       	ldi	r22, 0x00	; 0
    6158:	83 e0       	ldi	r24, 0x03	; 3
    615a:	0e 94 6d 2e 	call	0x5cda	; 0x5cda <PORTC_set_pin_dir>
	PORTC_set_pin_pull_mode(RTC_SCL, PORT_PULL_UP);
    615e:	61 e0       	ldi	r22, 0x01	; 1
    6160:	83 e0       	ldi	r24, 0x03	; 3
    6162:	0e 94 19 2e 	call	0x5c32	; 0x5c32 <PORTC_set_pin_pull_mode>
// 	PORTC_set_pin_dir(RTC_SCL, PORT_DIR_OUT);
// 	PORTC_set_pin_level(RTC_SCL, HIGH);

	PORTC_set_pin_dir(LED_GREEN, PORT_DIR_OUT);
    6166:	61 e0       	ldi	r22, 0x01	; 1
    6168:	85 e0       	ldi	r24, 0x05	; 5
    616a:	0e 94 6d 2e 	call	0x5cda	; 0x5cda <PORTC_set_pin_dir>
	PORTC_set_pin_level(LED_GREEN, LOW);
    616e:	60 e0       	ldi	r22, 0x00	; 0
    6170:	85 e0       	ldi	r24, 0x05	; 5
    6172:	0e 94 c1 2e 	call	0x5d82	; 0x5d82 <PORTC_set_pin_level>
	
	PORTC_set_pin_dir(LED_RED, PORT_DIR_OUT);
    6176:	61 e0       	ldi	r22, 0x01	; 1
    6178:	86 e0       	ldi	r24, 0x06	; 6
    617a:	0e 94 6d 2e 	call	0x5cda	; 0x5cda <PORTC_set_pin_dir>
	PORTC_set_pin_level(LED_RED, LOW);
    617e:	60 e0       	ldi	r22, 0x00	; 0
    6180:	86 e0       	ldi	r24, 0x06	; 6
    6182:	0e 94 c1 2e 	call	0x5d82	; 0x5d82 <PORTC_set_pin_level>
	
	PORTC_set_pin_dir(SWITCH, PORT_DIR_IN);
    6186:	60 e0       	ldi	r22, 0x00	; 0
    6188:	87 e0       	ldi	r24, 0x07	; 7
    618a:	0e 94 6d 2e 	call	0x5cda	; 0x5cda <PORTC_set_pin_dir>
	PORTC_set_pin_pull_mode(SWITCH, PORT_PULL_UP);
    618e:	61 e0       	ldi	r22, 0x01	; 1
    6190:	87 e0       	ldi	r24, 0x07	; 7
    6192:	0e 94 19 2e 	call	0x5c32	; 0x5c32 <PORTC_set_pin_pull_mode>
	PORTC_pin_set_isc(SWITCH, PORT_ISC_RISING_gc);
    6196:	62 e0       	ldi	r22, 0x02	; 2
    6198:	87 e0       	ldi	r24, 0x07	; 7
    619a:	0e 94 4a 2e 	call	0x5c94	; 0x5c94 <PORTC_pin_set_isc>
	
	/* PORTD *************************************************************************************/
	PORTD_set_pin_dir(X80M_ANTENNA_DETECT_V, PORT_DIR_IN); /* use ADC for reading voltage at antenna detect pin */
    619e:	60 e0       	ldi	r22, 0x00	; 0
    61a0:	80 e0       	ldi	r24, 0x00	; 0
    61a2:	0e 94 4f 2f 	call	0x5e9e	; 0x5e9e <PORTD_set_pin_dir>
	
	PORTD_set_pin_dir(X80M_ANTENNA_DETECT, PORT_DIR_IN);
    61a6:	60 e0       	ldi	r22, 0x00	; 0
    61a8:	81 e0       	ldi	r24, 0x01	; 1
    61aa:	0e 94 4f 2f 	call	0x5e9e	; 0x5e9e <PORTD_set_pin_dir>
	PORTD_set_pin_pull_mode(X80M_ANTENNA_DETECT, PORT_PULL_UP);
    61ae:	61 e0       	ldi	r22, 0x01	; 1
    61b0:	81 e0       	ldi	r24, 0x01	; 1
    61b2:	0e 94 fb 2e 	call	0x5df6	; 0x5df6 <PORTD_set_pin_pull_mode>
	PORTD_pin_set_isc(X80M_ANTENNA_DETECT, PORT_ISC_BOTHEDGES_gc);
    61b6:	61 e0       	ldi	r22, 0x01	; 1
    61b8:	81 e0       	ldi	r24, 0x01	; 1
    61ba:	0e 94 2c 2f 	call	0x5e58	; 0x5e58 <PORTD_pin_set_isc>
	/* PORTD.PIN3 = ACD3 Audio in TX_BATTERY_VOLTAGE */
	/* PORTD.PIN4 = ACD4 Audio in TX_12_VOLTAGE */
	/* PORTD.PIN5 = ACD5 Audio in TX_PA_VOLTAGE */
	/* PORTD.PIN6 = DAC0 voltage out DAC_OUTPUT */
	
	PORTD_set_pin_dir(WIFI_MODULE_DETECT, PORT_DIR_IN); /* Detect presence of Huzzah module */
    61be:	60 e0       	ldi	r22, 0x00	; 0
    61c0:	87 e0       	ldi	r24, 0x07	; 7
    61c2:	0e 94 4f 2f 	call	0x5e9e	; 0x5e9e <PORTD_set_pin_dir>
	PORTD_set_pin_pull_mode(WIFI_MODULE_DETECT, PORT_PULL_OFF);
    61c6:	60 e0       	ldi	r22, 0x00	; 0
    61c8:	87 e0       	ldi	r24, 0x07	; 7
    61ca:	0e 94 fb 2e 	call	0x5df6	; 0x5df6 <PORTD_set_pin_pull_mode>

	/* PORTE *************************************************************************************/
	PORTE_set_pin_dir(0, PORT_DIR_OFF); /* Unused */
    61ce:	62 e0       	ldi	r22, 0x02	; 2
    61d0:	80 e0       	ldi	r24, 0x00	; 0
    61d2:	0e 94 a3 2f 	call	0x5f46	; 0x5f46 <PORTE_set_pin_dir>
	PORTE_set_pin_dir(1, PORT_DIR_OFF); /* Unused */
    61d6:	62 e0       	ldi	r22, 0x02	; 2
    61d8:	81 e0       	ldi	r24, 0x01	; 1
    61da:	0e 94 a3 2f 	call	0x5f46	; 0x5f46 <PORTE_set_pin_dir>
	PORTE_set_pin_dir(2, PORT_DIR_OFF); /* Unused */
    61de:	62 e0       	ldi	r22, 0x02	; 2
    61e0:	82 e0       	ldi	r24, 0x02	; 2
    61e2:	0e 94 a3 2f 	call	0x5f46	; 0x5f46 <PORTE_set_pin_dir>
	PORTE_set_pin_dir(3, PORT_DIR_OFF); /* Unused */
    61e6:	62 e0       	ldi	r22, 0x02	; 2
    61e8:	83 e0       	ldi	r24, 0x03	; 3
    61ea:	0e 94 a3 2f 	call	0x5f46	; 0x5f46 <PORTE_set_pin_dir>

	/* PORTF *************************************************************************************/
	PORTF_set_pin_dir(X32KHZ_SQUAREWAVE, PORT_DIR_OFF);	
    61ee:	62 e0       	ldi	r22, 0x02	; 2
    61f0:	80 e0       	ldi	r24, 0x00	; 0
    61f2:	0e 94 f7 2f 	call	0x5fee	; 0x5fee <PORTF_set_pin_dir>
	PORTF_set_pin_dir(1, PORT_DIR_OFF);	/* Unused */
    61f6:	62 e0       	ldi	r22, 0x02	; 2
    61f8:	81 e0       	ldi	r24, 0x01	; 1
    61fa:	0e 94 f7 2f 	call	0x5fee	; 0x5fee <PORTF_set_pin_dir>
	PORTF_set_pin_dir(2, PORT_DIR_OFF); /* Unused */
    61fe:	62 e0       	ldi	r22, 0x02	; 2
    6200:	82 e0       	ldi	r24, 0x02	; 2
    6202:	0e 94 f7 2f 	call	0x5fee	; 0x5fee <PORTF_set_pin_dir>
	PORTF_set_pin_dir(3, PORT_DIR_OFF); /* Unused */
    6206:	62 e0       	ldi	r22, 0x02	; 2
    6208:	83 e0       	ldi	r24, 0x03	; 3
    620a:	0e 94 f7 2f 	call	0x5fee	; 0x5fee <PORTF_set_pin_dir>
	PORTF_set_pin_dir(4, PORT_DIR_OFF); /* Unused */
    620e:	62 e0       	ldi	r22, 0x02	; 2
    6210:	84 e0       	ldi	r24, 0x04	; 4
    6212:	0e 94 f7 2f 	call	0x5fee	; 0x5fee <PORTF_set_pin_dir>
	PORTF_set_pin_dir(5, PORT_DIR_OFF); /* Unused */
    6216:	62 e0       	ldi	r22, 0x02	; 2
    6218:	85 e0       	ldi	r24, 0x05	; 5
    621a:	0e 94 f7 2f 	call	0x5fee	; 0x5fee <PORTF_set_pin_dir>
	PORTF_set_pin_dir(6, PORT_DIR_OFF); /* Reset */
    621e:	62 e0       	ldi	r22, 0x02	; 2
    6220:	86 e0       	ldi	r24, 0x06	; 6
    6222:	0e 94 f7 2f 	call	0x5fee	; 0x5fee <PORTF_set_pin_dir>
	
	/* PORT Pin Interrupts */
	PORTA.PIN2CTRL = 0x0A; /* Enable RTC SQW 1-sec interrupts */
    6226:	80 e0       	ldi	r24, 0x00	; 0
    6228:	94 e0       	ldi	r25, 0x04	; 4
    622a:	2a e0       	ldi	r18, 0x0A	; 10
    622c:	fc 01       	movw	r30, r24
    622e:	22 8b       	std	Z+18, r18	; 0x12
	PORTD.PIN1CTRL = 0x09; /* Enable antenna change interrupts */
    6230:	80 e6       	ldi	r24, 0x60	; 96
    6232:	94 e0       	ldi	r25, 0x04	; 4
    6234:	29 e0       	ldi	r18, 0x09	; 9
    6236:	fc 01       	movw	r30, r24
    6238:	21 8b       	std	Z+17, r18	; 0x11
}
    623a:	00 00       	nop
    623c:	df 91       	pop	r29
    623e:	cf 91       	pop	r28
    6240:	08 95       	ret

00006242 <_Z11BINIO_sleepv>:

void BINIO_sleep()
{
    6242:	cf 93       	push	r28
    6244:	df 93       	push	r29
    6246:	cd b7       	in	r28, 0x3d	; 61
    6248:	de b7       	in	r29, 0x3e	; 62
	/* PORTA *************************************************************************************/
	
	/* PORTA.PIN0 = TXDO USART */
	/* PORTA.PIN1 = RXD0 USART */
	
	PORTA_set_pin_dir(FAN_ENABLE, PORT_DIR_OUT);
    624a:	61 e0       	ldi	r22, 0x01	; 1
    624c:	81 e0       	ldi	r24, 0x01	; 1
    624e:	0e 94 fd 2c 	call	0x59fa	; 0x59fa <PORTA_set_pin_dir>
	PORTA_set_pin_level(FAN_ENABLE, LOW);
    6252:	60 e0       	ldi	r22, 0x00	; 0
    6254:	81 e0       	ldi	r24, 0x01	; 1
    6256:	0e 94 51 2d 	call	0x5aa2	; 0x5aa2 <PORTA_set_pin_level>
	
// 	PORTA_set_pin_dir(RTC_SQW, PORT_DIR_IN);
// 	PORTA_set_pin_pull_mode(RTC_SQW, PORT_PULL_UP);
// 	PORTA_pin_set_isc(RTC_SQW, PORT_ISC_RISING_gc);
	
	PORTA_set_pin_dir(FET_DRIVER_ENABLE, PORT_DIR_OUT);
    625a:	61 e0       	ldi	r22, 0x01	; 1
    625c:	83 e0       	ldi	r24, 0x03	; 3
    625e:	0e 94 fd 2c 	call	0x59fa	; 0x59fa <PORTA_set_pin_dir>
	PORTA_set_pin_level(FET_DRIVER_ENABLE, LOW);
    6262:	60 e0       	ldi	r22, 0x00	; 0
    6264:	83 e0       	ldi	r24, 0x03	; 3
    6266:	0e 94 51 2d 	call	0x5aa2	; 0x5aa2 <PORTA_set_pin_level>
	
	// 	PORTA_set_pin_dir(ANT_CONNECT_INT, PORT_DIR_IN);
	// 	PORTA_set_pin_pull_mode(ANT_CONNECT_INT, PORT_PULL_UP);
	// 	PORTA_pin_set_isc(ANT_CONNECT_INT, PORT_ISC_FALLING_gc);

	PORTA_set_pin_dir(WIFI_ENABLE, PORT_DIR_OUT);
    626a:	61 e0       	ldi	r22, 0x01	; 1
    626c:	85 e0       	ldi	r24, 0x05	; 5
    626e:	0e 94 fd 2c 	call	0x59fa	; 0x59fa <PORTA_set_pin_dir>
	PORTA_set_pin_level(WIFI_ENABLE, LOW);
    6272:	60 e0       	ldi	r22, 0x00	; 0
    6274:	85 e0       	ldi	r24, 0x05	; 5
    6276:	0e 94 51 2d 	call	0x5aa2	; 0x5aa2 <PORTA_set_pin_level>
	
	PORTA_set_pin_dir(WIFI_RESET, PORT_DIR_OUT);
    627a:	61 e0       	ldi	r22, 0x01	; 1
    627c:	86 e0       	ldi	r24, 0x06	; 6
    627e:	0e 94 fd 2c 	call	0x59fa	; 0x59fa <PORTA_set_pin_dir>
	PORTA_set_pin_level(WIFI_RESET, LOW);
    6282:	60 e0       	ldi	r22, 0x00	; 0
    6284:	86 e0       	ldi	r24, 0x06	; 6
    6286:	0e 94 51 2d 	call	0x5aa2	; 0x5aa2 <PORTA_set_pin_level>
	
	PORTA_set_pin_dir(V3V3_PWR_ENABLE, PORT_DIR_OUT);
    628a:	61 e0       	ldi	r22, 0x01	; 1
    628c:	87 e0       	ldi	r24, 0x07	; 7
    628e:	0e 94 fd 2c 	call	0x59fa	; 0x59fa <PORTA_set_pin_dir>
	PORTA_set_pin_level(V3V3_PWR_ENABLE, LOW);
    6292:	60 e0       	ldi	r22, 0x00	; 0
    6294:	87 e0       	ldi	r24, 0x07	; 7
    6296:	0e 94 51 2d 	call	0x5aa2	; 0x5aa2 <PORTA_set_pin_level>
	
	/* PORTB *************************************************************************************/

	PORTB_set_pin_dir(PROC_PTT_OUT, PORT_DIR_OUT);
    629a:	61 e0       	ldi	r22, 0x01	; 1
    629c:	80 e0       	ldi	r24, 0x00	; 0
    629e:	0e 94 8b 2d 	call	0x5b16	; 0x5b16 <PORTB_set_pin_dir>
	PORTB_set_pin_level(PROC_PTT_OUT, LOW);
    62a2:	60 e0       	ldi	r22, 0x00	; 0
    62a4:	80 e0       	ldi	r24, 0x00	; 0
    62a6:	0e 94 df 2d 	call	0x5bbe	; 0x5bbe <PORTB_set_pin_level>
	
	PORTB_set_pin_dir(PROC_TONE_OUT, PORT_DIR_OUT);
    62aa:	61 e0       	ldi	r22, 0x01	; 1
    62ac:	81 e0       	ldi	r24, 0x01	; 1
    62ae:	0e 94 8b 2d 	call	0x5b16	; 0x5b16 <PORTB_set_pin_dir>
	PORTB_set_pin_level(PROC_TONE_OUT, LOW);
    62b2:	60 e0       	ldi	r22, 0x00	; 0
    62b4:	81 e0       	ldi	r24, 0x01	; 1
    62b6:	0e 94 df 2d 	call	0x5bbe	; 0x5bbe <PORTB_set_pin_level>
	
	/* PORTB.PIN2 = SDA1 I2C */
	/* PORTB.PIN3 = SCL1 I2C */
	PORTB_set_pin_dir(MAIN_PWR_ENABLE, PORT_DIR_OUT);
    62ba:	61 e0       	ldi	r22, 0x01	; 1
    62bc:	84 e0       	ldi	r24, 0x04	; 4
    62be:	0e 94 8b 2d 	call	0x5b16	; 0x5b16 <PORTB_set_pin_dir>
	PORTB_set_pin_level(MAIN_PWR_ENABLE, LOW);
    62c2:	60 e0       	ldi	r22, 0x00	; 0
    62c4:	84 e0       	ldi	r24, 0x04	; 4
    62c6:	0e 94 df 2d 	call	0x5bbe	; 0x5bbe <PORTB_set_pin_level>
	
	PORTB_set_pin_dir(TX_FINAL_VOLTAGE_ENABLE, PORT_DIR_OUT);
    62ca:	61 e0       	ldi	r22, 0x01	; 1
    62cc:	85 e0       	ldi	r24, 0x05	; 5
    62ce:	0e 94 8b 2d 	call	0x5b16	; 0x5b16 <PORTB_set_pin_dir>
	PORTB_set_pin_level(TX_FINAL_VOLTAGE_ENABLE, LOW);
    62d2:	60 e0       	ldi	r22, 0x00	; 0
    62d4:	85 e0       	ldi	r24, 0x05	; 5
    62d6:	0e 94 df 2d 	call	0x5bbe	; 0x5bbe <PORTB_set_pin_level>
	/* PORTC.PIN0 = TXD1 USART TO_WIFI_RX */
	/* PORTC.PIN1 = RXD1 USART FROM_WIFI_TX */
	/* PORTC.PIN2 = SDA0 I2C */
	/* PORTC.PIN3 = SCL0 I2C */

	PORTC_set_pin_dir(LED_GREEN, PORT_DIR_OUT);
    62da:	61 e0       	ldi	r22, 0x01	; 1
    62dc:	85 e0       	ldi	r24, 0x05	; 5
    62de:	0e 94 6d 2e 	call	0x5cda	; 0x5cda <PORTC_set_pin_dir>
	PORTC_set_pin_level(LED_GREEN, LOW);
    62e2:	60 e0       	ldi	r22, 0x00	; 0
    62e4:	85 e0       	ldi	r24, 0x05	; 5
    62e6:	0e 94 c1 2e 	call	0x5d82	; 0x5d82 <PORTC_set_pin_level>
	
	PORTC_set_pin_dir(LED_RED, PORT_DIR_OUT);
    62ea:	61 e0       	ldi	r22, 0x01	; 1
    62ec:	86 e0       	ldi	r24, 0x06	; 6
    62ee:	0e 94 6d 2e 	call	0x5cda	; 0x5cda <PORTC_set_pin_dir>
	PORTC_set_pin_level(LED_RED, LOW);
    62f2:	60 e0       	ldi	r22, 0x00	; 0
    62f4:	86 e0       	ldi	r24, 0x06	; 6
    62f6:	0e 94 c1 2e 	call	0x5d82	; 0x5d82 <PORTC_set_pin_level>
	/* PORTD.PIN3 = ACD3 Audio in TX_BATTERY_VOLTAGE */
	/* PORTD.PIN4 = ACD4 Audio in TX_12_VOLTAGE */
	/* PORTD.PIN5 = ACD5 Audio in TX_PA_VOLTAGE */
	/* PORTD.PIN6 = DAC0 voltage out DAC_OUTPUT */
	
	PORTD_set_pin_dir(WIFI_MODULE_DETECT, PORT_DIR_IN); /* Detect presence of Huzzah module */
    62fa:	60 e0       	ldi	r22, 0x00	; 0
    62fc:	87 e0       	ldi	r24, 0x07	; 7
    62fe:	0e 94 4f 2f 	call	0x5e9e	; 0x5e9e <PORTD_set_pin_dir>
	PORTD_set_pin_pull_mode(WIFI_MODULE_DETECT, PORT_PULL_OFF);
    6302:	60 e0       	ldi	r22, 0x00	; 0
    6304:	87 e0       	ldi	r24, 0x07	; 7
    6306:	0e 94 fb 2e 	call	0x5df6	; 0x5df6 <PORTD_set_pin_pull_mode>

	/* PORTE *************************************************************************************/
	PORTE_set_pin_dir(0, PORT_DIR_OFF); /* Unused */
    630a:	62 e0       	ldi	r22, 0x02	; 2
    630c:	80 e0       	ldi	r24, 0x00	; 0
    630e:	0e 94 a3 2f 	call	0x5f46	; 0x5f46 <PORTE_set_pin_dir>
	PORTE_set_pin_dir(1, PORT_DIR_OFF); /* Unused */
    6312:	62 e0       	ldi	r22, 0x02	; 2
    6314:	81 e0       	ldi	r24, 0x01	; 1
    6316:	0e 94 a3 2f 	call	0x5f46	; 0x5f46 <PORTE_set_pin_dir>
	PORTE_set_pin_dir(2, PORT_DIR_OFF); /* Unused */
    631a:	62 e0       	ldi	r22, 0x02	; 2
    631c:	82 e0       	ldi	r24, 0x02	; 2
    631e:	0e 94 a3 2f 	call	0x5f46	; 0x5f46 <PORTE_set_pin_dir>
	PORTE_set_pin_dir(3, PORT_DIR_OFF); /* Unused */
    6322:	62 e0       	ldi	r22, 0x02	; 2
    6324:	83 e0       	ldi	r24, 0x03	; 3
    6326:	0e 94 a3 2f 	call	0x5f46	; 0x5f46 <PORTE_set_pin_dir>

	/* PORTF *************************************************************************************/
	PORTF_set_pin_dir(X32KHZ_SQUAREWAVE, PORT_DIR_OFF);
    632a:	62 e0       	ldi	r22, 0x02	; 2
    632c:	80 e0       	ldi	r24, 0x00	; 0
    632e:	0e 94 f7 2f 	call	0x5fee	; 0x5fee <PORTF_set_pin_dir>
	PORTF_set_pin_dir(1, PORT_DIR_OFF);	/* Unused */
    6332:	62 e0       	ldi	r22, 0x02	; 2
    6334:	81 e0       	ldi	r24, 0x01	; 1
    6336:	0e 94 f7 2f 	call	0x5fee	; 0x5fee <PORTF_set_pin_dir>
	PORTF_set_pin_dir(2, PORT_DIR_OFF); /* Unused */
    633a:	62 e0       	ldi	r22, 0x02	; 2
    633c:	82 e0       	ldi	r24, 0x02	; 2
    633e:	0e 94 f7 2f 	call	0x5fee	; 0x5fee <PORTF_set_pin_dir>
	PORTF_set_pin_dir(3, PORT_DIR_OFF); /* Unused */
    6342:	62 e0       	ldi	r22, 0x02	; 2
    6344:	83 e0       	ldi	r24, 0x03	; 3
    6346:	0e 94 f7 2f 	call	0x5fee	; 0x5fee <PORTF_set_pin_dir>
	PORTF_set_pin_dir(4, PORT_DIR_OFF); /* Unused */
    634a:	62 e0       	ldi	r22, 0x02	; 2
    634c:	84 e0       	ldi	r24, 0x04	; 4
    634e:	0e 94 f7 2f 	call	0x5fee	; 0x5fee <PORTF_set_pin_dir>
	PORTF_set_pin_dir(5, PORT_DIR_OFF); /* Unused */
    6352:	62 e0       	ldi	r22, 0x02	; 2
    6354:	85 e0       	ldi	r24, 0x05	; 5
    6356:	0e 94 f7 2f 	call	0x5fee	; 0x5fee <PORTF_set_pin_dir>
	PORTF_set_pin_dir(6, PORT_DIR_OFF); /* Reset */
    635a:	62 e0       	ldi	r22, 0x02	; 2
    635c:	86 e0       	ldi	r24, 0x06	; 6
    635e:	0e 94 f7 2f 	call	0x5fee	; 0x5fee <PORTF_set_pin_dir>
	
	/* PORT Pin Interrupts */
// 	PORTA.PIN2CTRL = 0x0A; /* Enable RTC SQW 1-sec interrupts */
// 	PORTD.PIN1CTRL = 0x09; /* Enable antenna change interrupts */
}
    6362:	00 00       	nop
    6364:	df 91       	pop	r29
    6366:	cf 91       	pop	r28
    6368:	08 95       	ret

0000636a <BOD_init>:
 * \brief Initialize Brownout Detector
 *
 * \return Initialization status.
 */
int8_t BOD_init()
{
    636a:	cf 93       	push	r28
    636c:	df 93       	push	r29
    636e:	cd b7       	in	r28, 0x3d	; 61
    6370:	de b7       	in	r29, 0x3e	; 62

	// ccp_write_io((void*)&(BOD.CTRLA),BOD_SLEEP_DIS_gc /* Disabled */);

	BOD.INTCTRL = 0 << BOD_VLMIE_bp        /* voltage level monitor interrrupt enable: disabled */
    6372:	80 e8       	ldi	r24, 0x80	; 128
    6374:	90 e0       	ldi	r25, 0x00	; 0
	              | BOD_VLMCFG_FALLING_gc; /* Interrupt when supply goes below VLM level */
    6376:	fc 01       	movw	r30, r24
    6378:	11 86       	std	Z+9, r1	; 0x09

	// BOD.VLMCTRLA = BOD_VLMLVL_5ABOVE_gc; /* VLM threshold 5% above BOD level */

	return 0;
    637a:	80 e0       	ldi	r24, 0x00	; 0
}
    637c:	df 91       	pop	r29
    637e:	cf 91       	pop	r28
    6380:	08 95       	ret

00006382 <_ZN18CircularStringBuffC1Ej>:
      size = max_size_ + head_ - tail_;
    }
  }

  return (size);
}
    6382:	cf 93       	push	r28
    6384:	df 93       	push	r29
    6386:	00 d0       	rcall	.+0      	; 0x6388 <_ZN18CircularStringBuffC1Ej+0x6>
    6388:	00 d0       	rcall	.+0      	; 0x638a <_ZN18CircularStringBuffC1Ej+0x8>
    638a:	cd b7       	in	r28, 0x3d	; 61
    638c:	de b7       	in	r29, 0x3e	; 62
    638e:	89 83       	std	Y+1, r24	; 0x01
    6390:	9a 83       	std	Y+2, r25	; 0x02
    6392:	6b 83       	std	Y+3, r22	; 0x03
    6394:	7c 83       	std	Y+4, r23	; 0x04
    6396:	8b 81       	ldd	r24, Y+3	; 0x03
    6398:	9c 81       	ldd	r25, Y+4	; 0x04
    639a:	0e 94 57 75 	call	0xeaae	; 0xeaae <malloc>
    639e:	9c 01       	movw	r18, r24
    63a0:	89 81       	ldd	r24, Y+1	; 0x01
    63a2:	9a 81       	ldd	r25, Y+2	; 0x02
    63a4:	fc 01       	movw	r30, r24
    63a6:	25 83       	std	Z+5, r18	; 0x05
    63a8:	36 83       	std	Z+6, r19	; 0x06
    63aa:	89 81       	ldd	r24, Y+1	; 0x01
    63ac:	9a 81       	ldd	r25, Y+2	; 0x02
    63ae:	2b 81       	ldd	r18, Y+3	; 0x03
    63b0:	3c 81       	ldd	r19, Y+4	; 0x04
    63b2:	fc 01       	movw	r30, r24
    63b4:	27 83       	std	Z+7, r18	; 0x07
    63b6:	30 87       	std	Z+8, r19	; 0x08
    63b8:	89 81       	ldd	r24, Y+1	; 0x01
    63ba:	9a 81       	ldd	r25, Y+2	; 0x02
    63bc:	fc 01       	movw	r30, r24
    63be:	10 82       	st	Z, r1
    63c0:	11 82       	std	Z+1, r1	; 0x01
    63c2:	89 81       	ldd	r24, Y+1	; 0x01
    63c4:	9a 81       	ldd	r25, Y+2	; 0x02
    63c6:	fc 01       	movw	r30, r24
    63c8:	12 82       	std	Z+2, r1	; 0x02
    63ca:	13 82       	std	Z+3, r1	; 0x03
    63cc:	89 81       	ldd	r24, Y+1	; 0x01
    63ce:	9a 81       	ldd	r25, Y+2	; 0x02
    63d0:	fc 01       	movw	r30, r24
    63d2:	14 82       	std	Z+4, r1	; 0x04
    63d4:	00 00       	nop
    63d6:	24 96       	adiw	r28, 0x04	; 4
    63d8:	cd bf       	out	0x3d, r28	; 61
    63da:	de bf       	out	0x3e, r29	; 62
    63dc:	df 91       	pop	r29
    63de:	cf 91       	pop	r28
    63e0:	08 95       	ret

000063e2 <_ZN18CircularStringBuffD1Ev>:
    63e2:	cf 93       	push	r28
    63e4:	df 93       	push	r29
    63e6:	00 d0       	rcall	.+0      	; 0x63e8 <_ZN18CircularStringBuffD1Ev+0x6>
    63e8:	cd b7       	in	r28, 0x3d	; 61
    63ea:	de b7       	in	r29, 0x3e	; 62
    63ec:	89 83       	std	Y+1, r24	; 0x01
    63ee:	9a 83       	std	Y+2, r25	; 0x02
    63f0:	89 81       	ldd	r24, Y+1	; 0x01
    63f2:	9a 81       	ldd	r25, Y+2	; 0x02
    63f4:	fc 01       	movw	r30, r24
    63f6:	85 81       	ldd	r24, Z+5	; 0x05
    63f8:	96 81       	ldd	r25, Z+6	; 0x06
    63fa:	0e 94 ef 75 	call	0xebde	; 0xebde <free>
    63fe:	00 00       	nop
    6400:	0f 90       	pop	r0
    6402:	0f 90       	pop	r0
    6404:	df 91       	pop	r29
    6406:	cf 91       	pop	r28
    6408:	08 95       	ret

0000640a <_ZN18CircularStringBuff5resetEv>:
    640a:	cf 93       	push	r28
    640c:	df 93       	push	r29
    640e:	00 d0       	rcall	.+0      	; 0x6410 <_ZN18CircularStringBuff5resetEv+0x6>
    6410:	cd b7       	in	r28, 0x3d	; 61
    6412:	de b7       	in	r29, 0x3e	; 62
    6414:	89 83       	std	Y+1, r24	; 0x01
    6416:	9a 83       	std	Y+2, r25	; 0x02
    6418:	89 81       	ldd	r24, Y+1	; 0x01
    641a:	9a 81       	ldd	r25, Y+2	; 0x02
    641c:	fc 01       	movw	r30, r24
    641e:	22 81       	ldd	r18, Z+2	; 0x02
    6420:	33 81       	ldd	r19, Z+3	; 0x03
    6422:	89 81       	ldd	r24, Y+1	; 0x01
    6424:	9a 81       	ldd	r25, Y+2	; 0x02
    6426:	fc 01       	movw	r30, r24
    6428:	20 83       	st	Z, r18
    642a:	31 83       	std	Z+1, r19	; 0x01
    642c:	89 81       	ldd	r24, Y+1	; 0x01
    642e:	9a 81       	ldd	r25, Y+2	; 0x02
    6430:	fc 01       	movw	r30, r24
    6432:	14 82       	std	Z+4, r1	; 0x04
    6434:	00 00       	nop
    6436:	0f 90       	pop	r0
    6438:	0f 90       	pop	r0
    643a:	df 91       	pop	r29
    643c:	cf 91       	pop	r28
    643e:	08 95       	ret

00006440 <_ZNK18CircularStringBuff5emptyEv>:
    6440:	cf 93       	push	r28
    6442:	df 93       	push	r29
    6444:	00 d0       	rcall	.+0      	; 0x6446 <_ZNK18CircularStringBuff5emptyEv+0x6>
    6446:	cd b7       	in	r28, 0x3d	; 61
    6448:	de b7       	in	r29, 0x3e	; 62
    644a:	89 83       	std	Y+1, r24	; 0x01
    644c:	9a 83       	std	Y+2, r25	; 0x02
    644e:	89 81       	ldd	r24, Y+1	; 0x01
    6450:	9a 81       	ldd	r25, Y+2	; 0x02
    6452:	fc 01       	movw	r30, r24
    6454:	94 81       	ldd	r25, Z+4	; 0x04
    6456:	81 e0       	ldi	r24, 0x01	; 1
    6458:	89 27       	eor	r24, r25
    645a:	88 23       	and	r24, r24
    645c:	79 f0       	breq	.+30     	; 0x647c <_ZNK18CircularStringBuff5emptyEv+0x3c>
    645e:	89 81       	ldd	r24, Y+1	; 0x01
    6460:	9a 81       	ldd	r25, Y+2	; 0x02
    6462:	fc 01       	movw	r30, r24
    6464:	20 81       	ld	r18, Z
    6466:	31 81       	ldd	r19, Z+1	; 0x01
    6468:	89 81       	ldd	r24, Y+1	; 0x01
    646a:	9a 81       	ldd	r25, Y+2	; 0x02
    646c:	fc 01       	movw	r30, r24
    646e:	82 81       	ldd	r24, Z+2	; 0x02
    6470:	93 81       	ldd	r25, Z+3	; 0x03
    6472:	28 17       	cp	r18, r24
    6474:	39 07       	cpc	r19, r25
    6476:	11 f4       	brne	.+4      	; 0x647c <_ZNK18CircularStringBuff5emptyEv+0x3c>
    6478:	81 e0       	ldi	r24, 0x01	; 1
    647a:	01 c0       	rjmp	.+2      	; 0x647e <_ZNK18CircularStringBuff5emptyEv+0x3e>
    647c:	80 e0       	ldi	r24, 0x00	; 0
    647e:	0f 90       	pop	r0
    6480:	0f 90       	pop	r0
    6482:	df 91       	pop	r29
    6484:	cf 91       	pop	r28
    6486:	08 95       	ret

00006488 <_ZNK18CircularStringBuff4fullEv>:
    6488:	cf 93       	push	r28
    648a:	df 93       	push	r29
    648c:	00 d0       	rcall	.+0      	; 0x648e <_ZNK18CircularStringBuff4fullEv+0x6>
    648e:	cd b7       	in	r28, 0x3d	; 61
    6490:	de b7       	in	r29, 0x3e	; 62
    6492:	89 83       	std	Y+1, r24	; 0x01
    6494:	9a 83       	std	Y+2, r25	; 0x02
    6496:	89 81       	ldd	r24, Y+1	; 0x01
    6498:	9a 81       	ldd	r25, Y+2	; 0x02
    649a:	fc 01       	movw	r30, r24
    649c:	84 81       	ldd	r24, Z+4	; 0x04
    649e:	0f 90       	pop	r0
    64a0:	0f 90       	pop	r0
    64a2:	df 91       	pop	r29
    64a4:	cf 91       	pop	r28
    64a6:	08 95       	ret

000064a8 <_ZN18CircularStringBuff3putEc>:

/** 
 * Place another item in the buffer
 */
void CircularStringBuff::put(char item)
{
    64a8:	0f 93       	push	r16
    64aa:	1f 93       	push	r17
    64ac:	cf 93       	push	r28
    64ae:	df 93       	push	r29
    64b0:	00 d0       	rcall	.+0      	; 0x64b2 <_ZN18CircularStringBuff3putEc+0xa>
    64b2:	1f 92       	push	r1
    64b4:	cd b7       	in	r28, 0x3d	; 61
    64b6:	de b7       	in	r29, 0x3e	; 62
    64b8:	89 83       	std	Y+1, r24	; 0x01
    64ba:	9a 83       	std	Y+2, r25	; 0x02
    64bc:	6b 83       	std	Y+3, r22	; 0x03
  buf_[head_] = toupper(item);
    64be:	89 81       	ldd	r24, Y+1	; 0x01
    64c0:	9a 81       	ldd	r25, Y+2	; 0x02
    64c2:	fc 01       	movw	r30, r24
    64c4:	85 81       	ldd	r24, Z+5	; 0x05
    64c6:	96 81       	ldd	r25, Z+6	; 0x06
    64c8:	29 81       	ldd	r18, Y+1	; 0x01
    64ca:	3a 81       	ldd	r19, Y+2	; 0x02
    64cc:	f9 01       	movw	r30, r18
    64ce:	20 81       	ld	r18, Z
    64d0:	31 81       	ldd	r19, Z+1	; 0x01
    64d2:	8c 01       	movw	r16, r24
    64d4:	02 0f       	add	r16, r18
    64d6:	13 1f       	adc	r17, r19
    64d8:	8b 81       	ldd	r24, Y+3	; 0x03
    64da:	88 2f       	mov	r24, r24
    64dc:	90 e0       	ldi	r25, 0x00	; 0
    64de:	0e 94 bd 76 	call	0xed7a	; 0xed7a <toupper>
    64e2:	f8 01       	movw	r30, r16
    64e4:	80 83       	st	Z, r24

  if (full_)
    64e6:	89 81       	ldd	r24, Y+1	; 0x01
    64e8:	9a 81       	ldd	r25, Y+2	; 0x02
    64ea:	fc 01       	movw	r30, r24
    64ec:	84 81       	ldd	r24, Z+4	; 0x04
    64ee:	88 23       	and	r24, r24
    64f0:	b1 f0       	breq	.+44     	; 0x651e <_ZN18CircularStringBuff3putEc+0x76>
  {
    tail_ = (tail_ + 1) % max_size_;
    64f2:	89 81       	ldd	r24, Y+1	; 0x01
    64f4:	9a 81       	ldd	r25, Y+2	; 0x02
    64f6:	fc 01       	movw	r30, r24
    64f8:	82 81       	ldd	r24, Z+2	; 0x02
    64fa:	93 81       	ldd	r25, Z+3	; 0x03
    64fc:	01 96       	adiw	r24, 0x01	; 1
    64fe:	ac 01       	movw	r20, r24
    6500:	89 81       	ldd	r24, Y+1	; 0x01
    6502:	9a 81       	ldd	r25, Y+2	; 0x02
    6504:	fc 01       	movw	r30, r24
    6506:	27 81       	ldd	r18, Z+7	; 0x07
    6508:	30 85       	ldd	r19, Z+8	; 0x08
    650a:	ca 01       	movw	r24, r20
    650c:	b9 01       	movw	r22, r18
    650e:	0e 94 ab 74 	call	0xe956	; 0xe956 <__udivmodhi4>
    6512:	9c 01       	movw	r18, r24
    6514:	89 81       	ldd	r24, Y+1	; 0x01
    6516:	9a 81       	ldd	r25, Y+2	; 0x02
    6518:	fc 01       	movw	r30, r24
    651a:	22 83       	std	Z+2, r18	; 0x02
    651c:	33 83       	std	Z+3, r19	; 0x03
  }

  head_ = (head_ + 1) % max_size_;
    651e:	89 81       	ldd	r24, Y+1	; 0x01
    6520:	9a 81       	ldd	r25, Y+2	; 0x02
    6522:	fc 01       	movw	r30, r24
    6524:	80 81       	ld	r24, Z
    6526:	91 81       	ldd	r25, Z+1	; 0x01
    6528:	01 96       	adiw	r24, 0x01	; 1
    652a:	ac 01       	movw	r20, r24
    652c:	89 81       	ldd	r24, Y+1	; 0x01
    652e:	9a 81       	ldd	r25, Y+2	; 0x02
    6530:	fc 01       	movw	r30, r24
    6532:	27 81       	ldd	r18, Z+7	; 0x07
    6534:	30 85       	ldd	r19, Z+8	; 0x08
    6536:	ca 01       	movw	r24, r20
    6538:	b9 01       	movw	r22, r18
    653a:	0e 94 ab 74 	call	0xe956	; 0xe956 <__udivmodhi4>
    653e:	9c 01       	movw	r18, r24
    6540:	89 81       	ldd	r24, Y+1	; 0x01
    6542:	9a 81       	ldd	r25, Y+2	; 0x02
    6544:	fc 01       	movw	r30, r24
    6546:	20 83       	st	Z, r18
    6548:	31 83       	std	Z+1, r19	; 0x01

  full_ = head_ == tail_;
    654a:	89 81       	ldd	r24, Y+1	; 0x01
    654c:	9a 81       	ldd	r25, Y+2	; 0x02
    654e:	fc 01       	movw	r30, r24
    6550:	20 81       	ld	r18, Z
    6552:	31 81       	ldd	r19, Z+1	; 0x01
    6554:	89 81       	ldd	r24, Y+1	; 0x01
    6556:	9a 81       	ldd	r25, Y+2	; 0x02
    6558:	fc 01       	movw	r30, r24
    655a:	82 81       	ldd	r24, Z+2	; 0x02
    655c:	93 81       	ldd	r25, Z+3	; 0x03
    655e:	41 e0       	ldi	r20, 0x01	; 1
    6560:	28 17       	cp	r18, r24
    6562:	39 07       	cpc	r19, r25
    6564:	09 f0       	breq	.+2      	; 0x6568 <_ZN18CircularStringBuff3putEc+0xc0>
    6566:	40 e0       	ldi	r20, 0x00	; 0
    6568:	89 81       	ldd	r24, Y+1	; 0x01
    656a:	9a 81       	ldd	r25, Y+2	; 0x02
    656c:	fc 01       	movw	r30, r24
    656e:	44 83       	std	Z+4, r20	; 0x04
}
    6570:	00 00       	nop
    6572:	23 96       	adiw	r28, 0x03	; 3
    6574:	cd bf       	out	0x3d, r28	; 61
    6576:	de bf       	out	0x3e, r29	; 62
    6578:	df 91       	pop	r29
    657a:	cf 91       	pop	r28
    657c:	1f 91       	pop	r17
    657e:	0f 91       	pop	r16
    6580:	08 95       	ret

00006582 <_ZN18CircularStringBuff3popEv>:

/** 
 * Return the last put item and remove it from the buffer
 */
char CircularStringBuff::pop()
{
    6582:	cf 93       	push	r28
    6584:	df 93       	push	r29
    6586:	00 d0       	rcall	.+0      	; 0x6588 <_ZN18CircularStringBuff3popEv+0x6>
    6588:	1f 92       	push	r1
    658a:	cd b7       	in	r28, 0x3d	; 61
    658c:	de b7       	in	r29, 0x3e	; 62
    658e:	8a 83       	std	Y+2, r24	; 0x02
    6590:	9b 83       	std	Y+3, r25	; 0x03
  if (empty())
    6592:	8a 81       	ldd	r24, Y+2	; 0x02
    6594:	9b 81       	ldd	r25, Y+3	; 0x03
    6596:	0e 94 20 32 	call	0x6440	; 0x6440 <_ZNK18CircularStringBuff5emptyEv>
    659a:	88 23       	and	r24, r24
    659c:	11 f0       	breq	.+4      	; 0x65a2 <_ZN18CircularStringBuff3popEv+0x20>
  {
	  return ('\0');
    659e:	80 e0       	ldi	r24, 0x00	; 0
    65a0:	35 c0       	rjmp	.+106    	; 0x660c <_ZN18CircularStringBuff3popEv+0x8a>
  }

  /*Read data and decrement the head (we now have one more free space) */
  char val = buf_[head_];
    65a2:	8a 81       	ldd	r24, Y+2	; 0x02
    65a4:	9b 81       	ldd	r25, Y+3	; 0x03
    65a6:	fc 01       	movw	r30, r24
    65a8:	85 81       	ldd	r24, Z+5	; 0x05
    65aa:	96 81       	ldd	r25, Z+6	; 0x06
    65ac:	2a 81       	ldd	r18, Y+2	; 0x02
    65ae:	3b 81       	ldd	r19, Y+3	; 0x03
    65b0:	f9 01       	movw	r30, r18
    65b2:	20 81       	ld	r18, Z
    65b4:	31 81       	ldd	r19, Z+1	; 0x01
    65b6:	82 0f       	add	r24, r18
    65b8:	93 1f       	adc	r25, r19
    65ba:	fc 01       	movw	r30, r24
    65bc:	80 81       	ld	r24, Z
    65be:	89 83       	std	Y+1, r24	; 0x01
  if(head_) 
    65c0:	8a 81       	ldd	r24, Y+2	; 0x02
    65c2:	9b 81       	ldd	r25, Y+3	; 0x03
    65c4:	fc 01       	movw	r30, r24
    65c6:	80 81       	ld	r24, Z
    65c8:	91 81       	ldd	r25, Z+1	; 0x01
    65ca:	89 2b       	or	r24, r25
    65cc:	71 f0       	breq	.+28     	; 0x65ea <_ZN18CircularStringBuff3popEv+0x68>
  {
	  head_--;
    65ce:	8a 81       	ldd	r24, Y+2	; 0x02
    65d0:	9b 81       	ldd	r25, Y+3	; 0x03
    65d2:	fc 01       	movw	r30, r24
    65d4:	80 81       	ld	r24, Z
    65d6:	91 81       	ldd	r25, Z+1	; 0x01
    65d8:	9c 01       	movw	r18, r24
    65da:	21 50       	subi	r18, 0x01	; 1
    65dc:	31 09       	sbc	r19, r1
    65de:	8a 81       	ldd	r24, Y+2	; 0x02
    65e0:	9b 81       	ldd	r25, Y+3	; 0x03
    65e2:	fc 01       	movw	r30, r24
    65e4:	20 83       	st	Z, r18
    65e6:	31 83       	std	Z+1, r19	; 0x01
    65e8:	0c c0       	rjmp	.+24     	; 0x6602 <_ZN18CircularStringBuff3popEv+0x80>
  }
  else
  {
	  head_ = (max_size_-1);
    65ea:	8a 81       	ldd	r24, Y+2	; 0x02
    65ec:	9b 81       	ldd	r25, Y+3	; 0x03
    65ee:	fc 01       	movw	r30, r24
    65f0:	87 81       	ldd	r24, Z+7	; 0x07
    65f2:	90 85       	ldd	r25, Z+8	; 0x08
    65f4:	01 97       	sbiw	r24, 0x01	; 1
    65f6:	9c 01       	movw	r18, r24
    65f8:	8a 81       	ldd	r24, Y+2	; 0x02
    65fa:	9b 81       	ldd	r25, Y+3	; 0x03
    65fc:	fc 01       	movw	r30, r24
    65fe:	20 83       	st	Z, r18
    6600:	31 83       	std	Z+1, r19	; 0x01
  }
  
  full_ = false;
    6602:	8a 81       	ldd	r24, Y+2	; 0x02
    6604:	9b 81       	ldd	r25, Y+3	; 0x03
    6606:	fc 01       	movw	r30, r24
    6608:	14 82       	std	Z+4, r1	; 0x04

  return (val);
    660a:	89 81       	ldd	r24, Y+1	; 0x01
}
    660c:	23 96       	adiw	r28, 0x03	; 3
    660e:	cd bf       	out	0x3d, r28	; 61
    6610:	de bf       	out	0x3e, r29	; 62
    6612:	df 91       	pop	r29
    6614:	cf 91       	pop	r28
    6616:	08 95       	ret

00006618 <_ZN18CircularStringBuff3getEv>:

/** 
 * Return the FIFO entry and delete it from the buffer
 */
char CircularStringBuff::get()
{
    6618:	cf 93       	push	r28
    661a:	df 93       	push	r29
    661c:	00 d0       	rcall	.+0      	; 0x661e <_ZN18CircularStringBuff3getEv+0x6>
    661e:	1f 92       	push	r1
    6620:	cd b7       	in	r28, 0x3d	; 61
    6622:	de b7       	in	r29, 0x3e	; 62
    6624:	8a 83       	std	Y+2, r24	; 0x02
    6626:	9b 83       	std	Y+3, r25	; 0x03
  if (empty())
    6628:	8a 81       	ldd	r24, Y+2	; 0x02
    662a:	9b 81       	ldd	r25, Y+3	; 0x03
    662c:	0e 94 20 32 	call	0x6440	; 0x6440 <_ZNK18CircularStringBuff5emptyEv>
    6630:	88 23       	and	r24, r24
    6632:	11 f0       	breq	.+4      	; 0x6638 <_ZN18CircularStringBuff3getEv+0x20>
  {
    return ('\0');
    6634:	80 e0       	ldi	r24, 0x00	; 0
    6636:	2a c0       	rjmp	.+84     	; 0x668c <_ZN18CircularStringBuff3getEv+0x74>
  }

  /*Read data and advance the tail (we now have a free space) */
  char val = buf_[tail_];
    6638:	8a 81       	ldd	r24, Y+2	; 0x02
    663a:	9b 81       	ldd	r25, Y+3	; 0x03
    663c:	fc 01       	movw	r30, r24
    663e:	85 81       	ldd	r24, Z+5	; 0x05
    6640:	96 81       	ldd	r25, Z+6	; 0x06
    6642:	2a 81       	ldd	r18, Y+2	; 0x02
    6644:	3b 81       	ldd	r19, Y+3	; 0x03
    6646:	f9 01       	movw	r30, r18
    6648:	22 81       	ldd	r18, Z+2	; 0x02
    664a:	33 81       	ldd	r19, Z+3	; 0x03
    664c:	82 0f       	add	r24, r18
    664e:	93 1f       	adc	r25, r19
    6650:	fc 01       	movw	r30, r24
    6652:	80 81       	ld	r24, Z
    6654:	89 83       	std	Y+1, r24	; 0x01
  full_ = false;
    6656:	8a 81       	ldd	r24, Y+2	; 0x02
    6658:	9b 81       	ldd	r25, Y+3	; 0x03
    665a:	fc 01       	movw	r30, r24
    665c:	14 82       	std	Z+4, r1	; 0x04
  tail_ = (tail_ + 1) % max_size_;
    665e:	8a 81       	ldd	r24, Y+2	; 0x02
    6660:	9b 81       	ldd	r25, Y+3	; 0x03
    6662:	fc 01       	movw	r30, r24
    6664:	82 81       	ldd	r24, Z+2	; 0x02
    6666:	93 81       	ldd	r25, Z+3	; 0x03
    6668:	01 96       	adiw	r24, 0x01	; 1
    666a:	ac 01       	movw	r20, r24
    666c:	8a 81       	ldd	r24, Y+2	; 0x02
    666e:	9b 81       	ldd	r25, Y+3	; 0x03
    6670:	fc 01       	movw	r30, r24
    6672:	27 81       	ldd	r18, Z+7	; 0x07
    6674:	30 85       	ldd	r19, Z+8	; 0x08
    6676:	ca 01       	movw	r24, r20
    6678:	b9 01       	movw	r22, r18
    667a:	0e 94 ab 74 	call	0xe956	; 0xe956 <__udivmodhi4>
    667e:	9c 01       	movw	r18, r24
    6680:	8a 81       	ldd	r24, Y+2	; 0x02
    6682:	9b 81       	ldd	r25, Y+3	; 0x03
    6684:	fc 01       	movw	r30, r24
    6686:	22 83       	std	Z+2, r18	; 0x02
    6688:	33 83       	std	Z+3, r19	; 0x03

  return (val);
    668a:	89 81       	ldd	r24, Y+1	; 0x01
}
    668c:	23 96       	adiw	r28, 0x03	; 3
    668e:	cd bf       	out	0x3d, r28	; 61
    6690:	de bf       	out	0x3e, r29	; 62
    6692:	df 91       	pop	r29
    6694:	cf 91       	pop	r28
    6696:	08 95       	ret

00006698 <ccp_write_io>:
 * \note Using IAR Embedded workbench, the choice of memory model has an impact
 *       on calling convention. The memory model is not visible to the
 *       preprocessor, so it must be defined in the Assembler preprocessor directives.
 */
static inline void ccp_write_io(void *addr, uint8_t value)
{
    6698:	cf 93       	push	r28
    669a:	df 93       	push	r29
    669c:	00 d0       	rcall	.+0      	; 0x669e <ccp_write_io+0x6>
    669e:	1f 92       	push	r1
    66a0:	cd b7       	in	r28, 0x3d	; 61
    66a2:	de b7       	in	r29, 0x3e	; 62
    66a4:	89 83       	std	Y+1, r24	; 0x01
    66a6:	9a 83       	std	Y+2, r25	; 0x02
    66a8:	6b 83       	std	Y+3, r22	; 0x03
	protected_write_io(addr, CCP_IOREG_gc, value);
    66aa:	89 81       	ldd	r24, Y+1	; 0x01
    66ac:	9a 81       	ldd	r25, Y+2	; 0x02
    66ae:	4b 81       	ldd	r20, Y+3	; 0x03
    66b0:	68 ed       	ldi	r22, 0xD8	; 216
    66b2:	0e 94 1a 5b 	call	0xb634	; 0xb634 <protected_write_io>
}
    66b6:	00 00       	nop
    66b8:	23 96       	adiw	r28, 0x03	; 3
    66ba:	cd bf       	out	0x3d, r28	; 61
    66bc:	de bf       	out	0x3e, r29	; 62
    66be:	df 91       	pop	r29
    66c0:	cf 91       	pop	r28
    66c2:	08 95       	ret

000066c4 <CLKCTRL_init>:
 * \brief Initialize clkctrl interface
 *
 * \return Initialization status.
 */
int8_t CLKCTRL_init()
{
    66c4:	cf 93       	push	r28
    66c6:	df 93       	push	r29
    66c8:	cd b7       	in	r28, 0x3d	; 61
    66ca:	de b7       	in	r29, 0x3e	; 62
	//		 | CLKCTRL_MULFAC_DISABLE_gc /* 1 */
	//		 | 0 << CLKCTRL_SOURCE_bp /* Select Source for PLL: disabled */);

	ccp_write_io((void*)&(CLKCTRL.OSCHFCTRLA),CLKCTRL_FRQSEL_24M_gc /* 4 */
			 | 0 << CLKCTRL_AUTOTUNE_bp /* Auto-Tune enable: disabled */
			 | 0 << CLKCTRL_RUNSTDBY_bp /* Run standby: disabled */);
    66cc:	64 e2       	ldi	r22, 0x24	; 36
    66ce:	88 e6       	ldi	r24, 0x68	; 104
    66d0:	90 e0       	ldi	r25, 0x00	; 0
    66d2:	0e 94 4c 33 	call	0x6698	; 0x6698 <ccp_write_io>
	// ccp_write_io((void*)&(CLKCTRL.MCLKCTRLA),CLKCTRL_CLKSEL_OSCHF_gc /* Internal high-frequency oscillator */
	//		 | 0 << CLKCTRL_CLKOUT_bp /* System clock out: disabled */);

	// ccp_write_io((void*)&(CLKCTRL.MCLKLOCK),0 << CLKCTRL_LOCKEN_bp /* lock enable: disabled */);

	return 0;
    66d6:	80 e0       	ldi	r24, 0x00	; 0
}
    66d8:	df 91       	pop	r29
    66da:	cf 91       	pop	r28
    66dc:	08 95       	ret

000066de <CPUINT_init>:
 * \brief Initialize cpuint interface
 *
 * \return Initialization status
 */
int8_t CPUINT_init()
{
    66de:	cf 93       	push	r28
    66e0:	df 93       	push	r29
    66e2:	cd b7       	in	r28, 0x3d	; 61
    66e4:	de b7       	in	r29, 0x3e	; 62

	// CPUINT.LVL0PRI = 0x0 << CPUINT_LVL0PRI_gp; /* Interrupt Level Priority: 0x0 */

	// CPUINT.LVL1VEC = 0x0 << CPUINT_LVL1VEC_gp; /* Interrupt Vector with High Priority: 0x0 */

	ENABLE_INTERRUPTS();
    66e6:	78 94       	sei

	return 0;
    66e8:	80 e0       	ldi	r24, 0x00	; 0
}
    66ea:	df 91       	pop	r29
    66ec:	cf 91       	pop	r28
    66ee:	08 95       	ret

000066f0 <_ZL9VREF_initv>:
#define LSB_MASK                 (0x03)



static void VREF_init(void)
{
    66f0:	cf 93       	push	r28
    66f2:	df 93       	push	r29
    66f4:	cd b7       	in	r28, 0x3d	; 61
    66f6:	de b7       	in	r29, 0x3e	; 62
//	VREF.DAC0REF = VREF_REFSEL_VDD_gc; /* Select the 2.048V Internal Voltage Reference for DAC */
//	VREF.DAC0REF = VREF_REFSEL_2V048_gc; /* Select the 2.048V Internal Voltage Reference for DAC */
	VREF.DAC0REF = VREF_REFSEL_2V500_gc; /* Select the 2.500V Internal Voltage Reference for DAC */
    66f8:	80 ea       	ldi	r24, 0xA0	; 160
    66fa:	90 e0       	ldi	r25, 0x00	; 0
    66fc:	23 e0       	ldi	r18, 0x03	; 3
    66fe:	fc 01       	movw	r30, r24
    6700:	22 83       	std	Z+2, r18	; 0x02
//	| VREF_ALWAYSON_bm;    /* Set the Voltage Reference in Always On mode */
//	VREF.DAC0REF = VREF_REFSEL_2V500_gc; /* Select the 2.048V Internal Voltage Reference for DAC */
	/* Wait VREF start-up time */
	while(util_delay_ms(VREF_STARTUP_TIME_MS));
    6702:	6a e0       	ldi	r22, 0x0A	; 10
    6704:	70 e0       	ldi	r23, 0x00	; 0
    6706:	80 e0       	ldi	r24, 0x00	; 0
    6708:	90 e0       	ldi	r25, 0x00	; 0
    670a:	0e 94 5e 6a 	call	0xd4bc	; 0xd4bc <util_delay_ms>
    670e:	88 23       	and	r24, r24
    6710:	09 f0       	breq	.+2      	; 0x6714 <_ZL9VREF_initv+0x24>
    6712:	f7 cf       	rjmp	.-18     	; 0x6702 <_ZL9VREF_initv+0x12>
}
    6714:	00 00       	nop
    6716:	df 91       	pop	r29
    6718:	cf 91       	pop	r28
    671a:	08 95       	ret

0000671c <_Z9DAC0_initv>:

void DAC0_init(void)
{
    671c:	cf 93       	push	r28
    671e:	df 93       	push	r29
    6720:	cd b7       	in	r28, 0x3d	; 61
    6722:	de b7       	in	r29, 0x3e	; 62
	VREF_init();
    6724:	0e 94 78 33 	call	0x66f0	; 0x66f0 <_ZL9VREF_initv>
	
    /* Disable digital input buffer */
    PORTD.PIN6CTRL &= ~PORT_ISC_gm;
    6728:	80 e6       	ldi	r24, 0x60	; 96
    672a:	94 e0       	ldi	r25, 0x04	; 4
    672c:	20 e6       	ldi	r18, 0x60	; 96
    672e:	34 e0       	ldi	r19, 0x04	; 4
    6730:	f9 01       	movw	r30, r18
    6732:	26 89       	ldd	r18, Z+22	; 0x16
    6734:	28 7f       	andi	r18, 0xF8	; 248
    6736:	fc 01       	movw	r30, r24
    6738:	26 8b       	std	Z+22, r18	; 0x16
    PORTD.PIN6CTRL |= PORT_ISC_INPUT_DISABLE_gc;
    673a:	80 e6       	ldi	r24, 0x60	; 96
    673c:	94 e0       	ldi	r25, 0x04	; 4
    673e:	20 e6       	ldi	r18, 0x60	; 96
    6740:	34 e0       	ldi	r19, 0x04	; 4
    6742:	f9 01       	movw	r30, r18
    6744:	26 89       	ldd	r18, Z+22	; 0x16
    6746:	24 60       	ori	r18, 0x04	; 4
    6748:	fc 01       	movw	r30, r24
    674a:	26 8b       	std	Z+22, r18	; 0x16
    /* Disable pull-up resistor */
    PORTD.PIN6CTRL &= ~PORT_PULLUPEN_bm;   
    674c:	80 e6       	ldi	r24, 0x60	; 96
    674e:	94 e0       	ldi	r25, 0x04	; 4
    6750:	20 e6       	ldi	r18, 0x60	; 96
    6752:	34 e0       	ldi	r19, 0x04	; 4
    6754:	f9 01       	movw	r30, r18
    6756:	26 89       	ldd	r18, Z+22	; 0x16
    6758:	27 7f       	andi	r18, 0xF7	; 247
    675a:	fc 01       	movw	r30, r24
    675c:	26 8b       	std	Z+22, r18	; 0x16
    DAC0.CTRLA = DAC_ENABLE_bm          /* Enable DAC */
    675e:	80 ea       	ldi	r24, 0xA0	; 160
    6760:	96 e0       	ldi	r25, 0x06	; 6
               | DAC_OUTEN_bm           /* Enable output buffer */
               | DAC_RUNSTDBY_bm;       /* Enable Run in Standby mode */
    6762:	21 ec       	ldi	r18, 0xC1	; 193
    6764:	fc 01       	movw	r30, r24
    6766:	20 83       	st	Z, r18
// 	PORTD.PIN6CTRL &= ~PORT_PULLUPEN_bm;
// 	DAC0.CTRLA = DAC_ENABLE_bm          /* Enable DAC */
// 	| DAC_OUTEN_bm;           /* Enable output buffer */
// 	
// 	DAC0_setVal(DAC_DEFAULT_VALUE);
}
    6768:	00 00       	nop
    676a:	df 91       	pop	r29
    676c:	cf 91       	pop	r28
    676e:	08 95       	ret

00006770 <_Z11DAC0_setValj>:

void DAC0_setVal(uint16_t value)
{
    6770:	cf 93       	push	r28
    6772:	df 93       	push	r29
    6774:	00 d0       	rcall	.+0      	; 0x6776 <_Z11DAC0_setValj+0x6>
    6776:	cd b7       	in	r28, 0x3d	; 61
    6778:	de b7       	in	r29, 0x3e	; 62
    677a:	89 83       	std	Y+1, r24	; 0x01
    677c:	9a 83       	std	Y+2, r25	; 0x02
	/* Store the two LSbs in DAC0.DATAL */
	DAC0.DATAL = (value & LSB_MASK) << 6;
    677e:	80 ea       	ldi	r24, 0xA0	; 160
    6780:	96 e0       	ldi	r25, 0x06	; 6
    6782:	29 81       	ldd	r18, Y+1	; 0x01
    6784:	22 95       	swap	r18
    6786:	22 0f       	add	r18, r18
    6788:	22 0f       	add	r18, r18
    678a:	20 7c       	andi	r18, 0xC0	; 192
    678c:	fc 01       	movw	r30, r24
    678e:	22 83       	std	Z+2, r18	; 0x02
	/* Store the eight MSbs in DAC0.DATAH */
	DAC0.DATAH = value >> 2;
    6790:	80 ea       	ldi	r24, 0xA0	; 160
    6792:	96 e0       	ldi	r25, 0x06	; 6
    6794:	29 81       	ldd	r18, Y+1	; 0x01
    6796:	3a 81       	ldd	r19, Y+2	; 0x02
    6798:	36 95       	lsr	r19
    679a:	27 95       	ror	r18
    679c:	36 95       	lsr	r19
    679e:	27 95       	ror	r18
    67a0:	fc 01       	movw	r30, r24
    67a2:	23 83       	std	Z+3, r18	; 0x03
}
    67a4:	00 00       	nop
    67a6:	0f 90       	pop	r0
    67a8:	0f 90       	pop	r0
    67aa:	df 91       	pop	r29
    67ac:	cf 91       	pop	r28
    67ae:	08 95       	ret

000067b0 <PORTC_set_pin_dir>:
 *                      PORT_DIR_OUT = Data direction out
 *                      PORT_DIR_OFF = Disables the pin
 *                      (low power state)
 */
static inline void PORTC_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
    67b0:	cf 93       	push	r28
    67b2:	df 93       	push	r29
    67b4:	00 d0       	rcall	.+0      	; 0x67b6 <PORTC_set_pin_dir+0x6>
    67b6:	cd b7       	in	r28, 0x3d	; 61
    67b8:	de b7       	in	r29, 0x3e	; 62
    67ba:	89 83       	std	Y+1, r24	; 0x01
    67bc:	6a 83       	std	Y+2, r22	; 0x02
	switch (dir) {
    67be:	8a 81       	ldd	r24, Y+2	; 0x02
    67c0:	88 2f       	mov	r24, r24
    67c2:	90 e0       	ldi	r25, 0x00	; 0
    67c4:	81 30       	cpi	r24, 0x01	; 1
    67c6:	91 05       	cpc	r25, r1
    67c8:	e1 f0       	breq	.+56     	; 0x6802 <PORTC_set_pin_dir+0x52>
    67ca:	82 30       	cpi	r24, 0x02	; 2
    67cc:	91 05       	cpc	r25, r1
    67ce:	71 f1       	breq	.+92     	; 0x682c <PORTC_set_pin_dir+0x7c>
    67d0:	89 2b       	or	r24, r25
    67d2:	09 f0       	breq	.+2      	; 0x67d6 <PORTC_set_pin_dir+0x26>
		break;
	case PORT_DIR_OFF:
		*((uint8_t *)&PORTC + 0x10 + pin) |= 1 << PORT_PULLUPEN_bp;
		break;
	default:
		break;
    67d4:	3b c0       	rjmp	.+118    	; 0x684c <PORTC_set_pin_dir+0x9c>
 */
static inline void PORTC_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTC.DIR &= ~(1 << pin);
    67d6:	88 e0       	ldi	r24, 0x08	; 8
    67d8:	90 e0       	ldi	r25, 0x00	; 0
    67da:	28 e0       	ldi	r18, 0x08	; 8
    67dc:	30 e0       	ldi	r19, 0x00	; 0
    67de:	f9 01       	movw	r30, r18
    67e0:	20 81       	ld	r18, Z
    67e2:	62 2f       	mov	r22, r18
    67e4:	29 81       	ldd	r18, Y+1	; 0x01
    67e6:	42 2f       	mov	r20, r18
    67e8:	50 e0       	ldi	r21, 0x00	; 0
    67ea:	21 e0       	ldi	r18, 0x01	; 1
    67ec:	30 e0       	ldi	r19, 0x00	; 0
    67ee:	02 c0       	rjmp	.+4      	; 0x67f4 <PORTC_set_pin_dir+0x44>
    67f0:	22 0f       	add	r18, r18
    67f2:	33 1f       	adc	r19, r19
    67f4:	4a 95       	dec	r20
    67f6:	e2 f7       	brpl	.-8      	; 0x67f0 <PORTC_set_pin_dir+0x40>
    67f8:	20 95       	com	r18
    67fa:	26 23       	and	r18, r22
    67fc:	fc 01       	movw	r30, r24
    67fe:	20 83       	st	Z, r18
		break;
    6800:	25 c0       	rjmp	.+74     	; 0x684c <PORTC_set_pin_dir+0x9c>
	case PORT_DIR_OUT:
		VPORTC.DIR |= (1 << pin);
    6802:	88 e0       	ldi	r24, 0x08	; 8
    6804:	90 e0       	ldi	r25, 0x00	; 0
    6806:	28 e0       	ldi	r18, 0x08	; 8
    6808:	30 e0       	ldi	r19, 0x00	; 0
    680a:	f9 01       	movw	r30, r18
    680c:	20 81       	ld	r18, Z
    680e:	62 2f       	mov	r22, r18
    6810:	29 81       	ldd	r18, Y+1	; 0x01
    6812:	42 2f       	mov	r20, r18
    6814:	50 e0       	ldi	r21, 0x00	; 0
    6816:	21 e0       	ldi	r18, 0x01	; 1
    6818:	30 e0       	ldi	r19, 0x00	; 0
    681a:	02 c0       	rjmp	.+4      	; 0x6820 <PORTC_set_pin_dir+0x70>
    681c:	22 0f       	add	r18, r18
    681e:	33 1f       	adc	r19, r19
    6820:	4a 95       	dec	r20
    6822:	e2 f7       	brpl	.-8      	; 0x681c <PORTC_set_pin_dir+0x6c>
    6824:	26 2b       	or	r18, r22
    6826:	fc 01       	movw	r30, r24
    6828:	20 83       	st	Z, r18
		break;
    682a:	10 c0       	rjmp	.+32     	; 0x684c <PORTC_set_pin_dir+0x9c>
	case PORT_DIR_OFF:
		*((uint8_t *)&PORTC + 0x10 + pin) |= 1 << PORT_PULLUPEN_bp;
    682c:	89 81       	ldd	r24, Y+1	; 0x01
    682e:	88 2f       	mov	r24, r24
    6830:	90 e0       	ldi	r25, 0x00	; 0
    6832:	80 5b       	subi	r24, 0xB0	; 176
    6834:	9b 4f       	sbci	r25, 0xFB	; 251
    6836:	29 81       	ldd	r18, Y+1	; 0x01
    6838:	22 2f       	mov	r18, r18
    683a:	30 e0       	ldi	r19, 0x00	; 0
    683c:	20 5b       	subi	r18, 0xB0	; 176
    683e:	3b 4f       	sbci	r19, 0xFB	; 251
    6840:	f9 01       	movw	r30, r18
    6842:	20 81       	ld	r18, Z
    6844:	28 60       	ori	r18, 0x08	; 8
    6846:	fc 01       	movw	r30, r24
    6848:	20 83       	st	Z, r18
		break;
    684a:	00 00       	nop
	default:
		break;
	}
}
    684c:	00 00       	nop
    684e:	0f 90       	pop	r0
    6850:	0f 90       	pop	r0
    6852:	df 91       	pop	r29
    6854:	cf 91       	pop	r28
    6856:	08 95       	ret

00006858 <PORTC_set_pin_level>:
 * \param[in] pin       The pin number within port
 * \param[in] level true  = Pin level set to "high" state
 *                  false = Pin level set to "low" state
 */
static inline void PORTC_set_pin_level(const uint8_t pin, const bool level)
{
    6858:	cf 93       	push	r28
    685a:	df 93       	push	r29
    685c:	00 d0       	rcall	.+0      	; 0x685e <PORTC_set_pin_level+0x6>
    685e:	cd b7       	in	r28, 0x3d	; 61
    6860:	de b7       	in	r29, 0x3e	; 62
    6862:	89 83       	std	Y+1, r24	; 0x01
    6864:	6a 83       	std	Y+2, r22	; 0x02
	if (level == true) {
    6866:	8a 81       	ldd	r24, Y+2	; 0x02
    6868:	88 23       	and	r24, r24
    686a:	a9 f0       	breq	.+42     	; 0x6896 <PORTC_set_pin_level+0x3e>
		VPORTC.OUT |= (1 << pin);
    686c:	88 e0       	ldi	r24, 0x08	; 8
    686e:	90 e0       	ldi	r25, 0x00	; 0
    6870:	28 e0       	ldi	r18, 0x08	; 8
    6872:	30 e0       	ldi	r19, 0x00	; 0
    6874:	f9 01       	movw	r30, r18
    6876:	21 81       	ldd	r18, Z+1	; 0x01
    6878:	62 2f       	mov	r22, r18
    687a:	29 81       	ldd	r18, Y+1	; 0x01
    687c:	42 2f       	mov	r20, r18
    687e:	50 e0       	ldi	r21, 0x00	; 0
    6880:	21 e0       	ldi	r18, 0x01	; 1
    6882:	30 e0       	ldi	r19, 0x00	; 0
    6884:	02 c0       	rjmp	.+4      	; 0x688a <PORTC_set_pin_level+0x32>
    6886:	22 0f       	add	r18, r18
    6888:	33 1f       	adc	r19, r19
    688a:	4a 95       	dec	r20
    688c:	e2 f7       	brpl	.-8      	; 0x6886 <PORTC_set_pin_level+0x2e>
    688e:	26 2b       	or	r18, r22
    6890:	fc 01       	movw	r30, r24
    6892:	21 83       	std	Z+1, r18	; 0x01
	} else {
		VPORTC.OUT &= ~(1 << pin);
	}
}
    6894:	15 c0       	rjmp	.+42     	; 0x68c0 <PORTC_set_pin_level+0x68>
static inline void PORTC_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTC.OUT |= (1 << pin);
	} else {
		VPORTC.OUT &= ~(1 << pin);
    6896:	88 e0       	ldi	r24, 0x08	; 8
    6898:	90 e0       	ldi	r25, 0x00	; 0
    689a:	28 e0       	ldi	r18, 0x08	; 8
    689c:	30 e0       	ldi	r19, 0x00	; 0
    689e:	f9 01       	movw	r30, r18
    68a0:	21 81       	ldd	r18, Z+1	; 0x01
    68a2:	62 2f       	mov	r22, r18
    68a4:	29 81       	ldd	r18, Y+1	; 0x01
    68a6:	42 2f       	mov	r20, r18
    68a8:	50 e0       	ldi	r21, 0x00	; 0
    68aa:	21 e0       	ldi	r18, 0x01	; 1
    68ac:	30 e0       	ldi	r19, 0x00	; 0
    68ae:	02 c0       	rjmp	.+4      	; 0x68b4 <PORTC_set_pin_level+0x5c>
    68b0:	22 0f       	add	r18, r18
    68b2:	33 1f       	adc	r19, r19
    68b4:	4a 95       	dec	r20
    68b6:	e2 f7       	brpl	.-8      	; 0x68b0 <PORTC_set_pin_level+0x58>
    68b8:	20 95       	com	r18
    68ba:	26 23       	and	r18, r22
    68bc:	fc 01       	movw	r30, r24
    68be:	21 83       	std	Z+1, r18	; 0x01
	}
}
    68c0:	00 00       	nop
    68c2:	0f 90       	pop	r0
    68c4:	0f 90       	pop	r0
    68c6:	df 91       	pop	r29
    68c8:	cf 91       	pop	r28
    68ca:	08 95       	ret

000068cc <_ZL15LED_set_RED_dir8port_dir>:
 *                      PORT_DIR_OUT = Data direction out
 *                      PORT_DIR_OFF = Disables the pin
 *                      (low power state)
 */
static inline void LED_set_RED_dir(const enum port_dir dir)
{
    68cc:	cf 93       	push	r28
    68ce:	df 93       	push	r29
    68d0:	1f 92       	push	r1
    68d2:	cd b7       	in	r28, 0x3d	; 61
    68d4:	de b7       	in	r29, 0x3e	; 62
    68d6:	89 83       	std	Y+1, r24	; 0x01
	PORTC_set_pin_dir(6, dir);
    68d8:	69 81       	ldd	r22, Y+1	; 0x01
    68da:	86 e0       	ldi	r24, 0x06	; 6
    68dc:	0e 94 d8 33 	call	0x67b0	; 0x67b0 <PORTC_set_pin_dir>
}
    68e0:	00 00       	nop
    68e2:	0f 90       	pop	r0
    68e4:	df 91       	pop	r29
    68e6:	cf 91       	pop	r28
    68e8:	08 95       	ret

000068ea <_ZL17LED_set_GREEN_dir8port_dir>:
 *                      PORT_DIR_OUT = Data direction out
 *                      PORT_DIR_OFF = Disables the pin
 *                      (low power state)
 */
static inline void LED_set_GREEN_dir(const enum port_dir dir)
{
    68ea:	cf 93       	push	r28
    68ec:	df 93       	push	r29
    68ee:	1f 92       	push	r1
    68f0:	cd b7       	in	r28, 0x3d	; 61
    68f2:	de b7       	in	r29, 0x3e	; 62
    68f4:	89 83       	std	Y+1, r24	; 0x01
	PORTC_set_pin_dir(5, dir);
    68f6:	69 81       	ldd	r22, Y+1	; 0x01
    68f8:	85 e0       	ldi	r24, 0x05	; 5
    68fa:	0e 94 d8 33 	call	0x67b0	; 0x67b0 <PORTC_set_pin_dir>
}
    68fe:	00 00       	nop
    6900:	0f 90       	pop	r0
    6902:	df 91       	pop	r29
    6904:	cf 91       	pop	r28
    6906:	08 95       	ret

00006908 <_ZL17LED_set_RED_levelb>:
 *
 * \param[in] level true  = Pin level set to "high" state
 *                  false = Pin level set to "low" state
 */
static inline void LED_set_RED_level(const bool level)
{
    6908:	cf 93       	push	r28
    690a:	df 93       	push	r29
    690c:	1f 92       	push	r1
    690e:	cd b7       	in	r28, 0x3d	; 61
    6910:	de b7       	in	r29, 0x3e	; 62
    6912:	89 83       	std	Y+1, r24	; 0x01
	PORTC_set_pin_level(6, level); /* Low == LED off */
    6914:	69 81       	ldd	r22, Y+1	; 0x01
    6916:	86 e0       	ldi	r24, 0x06	; 6
    6918:	0e 94 2c 34 	call	0x6858	; 0x6858 <PORTC_set_pin_level>
}
    691c:	00 00       	nop
    691e:	0f 90       	pop	r0
    6920:	df 91       	pop	r29
    6922:	cf 91       	pop	r28
    6924:	08 95       	ret

00006926 <_ZL19LED_set_GREEN_levelb>:
 *
 * \param[in] level true  = Pin level set to "high" state
 *                  false = Pin level set to "low" state
 */
static inline void LED_set_GREEN_level(const bool level)
{
    6926:	cf 93       	push	r28
    6928:	df 93       	push	r29
    692a:	1f 92       	push	r1
    692c:	cd b7       	in	r28, 0x3d	; 61
    692e:	de b7       	in	r29, 0x3e	; 62
    6930:	89 83       	std	Y+1, r24	; 0x01
	PORTC_set_pin_level(5, level); /* Low == LED off */
    6932:	69 81       	ldd	r22, Y+1	; 0x01
    6934:	85 e0       	ldi	r24, 0x05	; 5
    6936:	0e 94 2c 34 	call	0x6858	; 0x6858 <PORTC_set_pin_level>
}
    693a:	00 00       	nop
    693c:	0f 90       	pop	r0
    693e:	df 91       	pop	r29
    6940:	cf 91       	pop	r28
    6942:	08 95       	ret

00006944 <mcu_init>:
#ifdef __cplusplus
extern "C" {
#endif

void mcu_init(void)
{
    6944:	cf 93       	push	r28
    6946:	df 93       	push	r29
    6948:	cd b7       	in	r28, 0x3d	; 61
    694a:	de b7       	in	r29, 0x3e	; 62
    694c:	26 97       	sbiw	r28, 0x06	; 6
    694e:	cd bf       	out	0x3d, r28	; 61
    6950:	de bf       	out	0x3e, r29	; 62
	 * disables all peripherals to save power. Driver shall enable
	 * peripheral if used */

	/* Set all pins to low power mode */

	for (uint8_t i = 0; i < 8; i++) {
    6952:	19 82       	std	Y+1, r1	; 0x01
    6954:	89 81       	ldd	r24, Y+1	; 0x01
    6956:	88 30       	cpi	r24, 0x08	; 8
    6958:	98 f4       	brcc	.+38     	; 0x6980 <mcu_init+0x3c>
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    695a:	89 81       	ldd	r24, Y+1	; 0x01
    695c:	88 2f       	mov	r24, r24
    695e:	90 e0       	ldi	r25, 0x00	; 0
    6960:	80 5f       	subi	r24, 0xF0	; 240
    6962:	9b 4f       	sbci	r25, 0xFB	; 251
    6964:	29 81       	ldd	r18, Y+1	; 0x01
    6966:	22 2f       	mov	r18, r18
    6968:	30 e0       	ldi	r19, 0x00	; 0
    696a:	20 5f       	subi	r18, 0xF0	; 240
    696c:	3b 4f       	sbci	r19, 0xFB	; 251
    696e:	f9 01       	movw	r30, r18
    6970:	20 81       	ld	r18, Z
    6972:	28 60       	ori	r18, 0x08	; 8
    6974:	fc 01       	movw	r30, r24
    6976:	20 83       	st	Z, r18
	 * disables all peripherals to save power. Driver shall enable
	 * peripheral if used */

	/* Set all pins to low power mode */

	for (uint8_t i = 0; i < 8; i++) {
    6978:	89 81       	ldd	r24, Y+1	; 0x01
    697a:	8f 5f       	subi	r24, 0xFF	; 255
    697c:	89 83       	std	Y+1, r24	; 0x01
    697e:	ea cf       	rjmp	.-44     	; 0x6954 <mcu_init+0x10>
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    6980:	1a 82       	std	Y+2, r1	; 0x02
    6982:	8a 81       	ldd	r24, Y+2	; 0x02
    6984:	88 30       	cpi	r24, 0x08	; 8
    6986:	98 f4       	brcc	.+38     	; 0x69ae <mcu_init+0x6a>
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    6988:	8a 81       	ldd	r24, Y+2	; 0x02
    698a:	88 2f       	mov	r24, r24
    698c:	90 e0       	ldi	r25, 0x00	; 0
    698e:	80 5d       	subi	r24, 0xD0	; 208
    6990:	9b 4f       	sbci	r25, 0xFB	; 251
    6992:	2a 81       	ldd	r18, Y+2	; 0x02
    6994:	22 2f       	mov	r18, r18
    6996:	30 e0       	ldi	r19, 0x00	; 0
    6998:	20 5d       	subi	r18, 0xD0	; 208
    699a:	3b 4f       	sbci	r19, 0xFB	; 251
    699c:	f9 01       	movw	r30, r18
    699e:	20 81       	ld	r18, Z
    69a0:	28 60       	ori	r18, 0x08	; 8
    69a2:	fc 01       	movw	r30, r24
    69a4:	20 83       	st	Z, r18

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    69a6:	8a 81       	ldd	r24, Y+2	; 0x02
    69a8:	8f 5f       	subi	r24, 0xFF	; 255
    69aa:	8a 83       	std	Y+2, r24	; 0x02
    69ac:	ea cf       	rjmp	.-44     	; 0x6982 <mcu_init+0x3e>
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    69ae:	1b 82       	std	Y+3, r1	; 0x03
    69b0:	8b 81       	ldd	r24, Y+3	; 0x03
    69b2:	88 30       	cpi	r24, 0x08	; 8
    69b4:	98 f4       	brcc	.+38     	; 0x69dc <mcu_init+0x98>
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    69b6:	8b 81       	ldd	r24, Y+3	; 0x03
    69b8:	88 2f       	mov	r24, r24
    69ba:	90 e0       	ldi	r25, 0x00	; 0
    69bc:	80 5b       	subi	r24, 0xB0	; 176
    69be:	9b 4f       	sbci	r25, 0xFB	; 251
    69c0:	2b 81       	ldd	r18, Y+3	; 0x03
    69c2:	22 2f       	mov	r18, r18
    69c4:	30 e0       	ldi	r19, 0x00	; 0
    69c6:	20 5b       	subi	r18, 0xB0	; 176
    69c8:	3b 4f       	sbci	r19, 0xFB	; 251
    69ca:	f9 01       	movw	r30, r18
    69cc:	20 81       	ld	r18, Z
    69ce:	28 60       	ori	r18, 0x08	; 8
    69d0:	fc 01       	movw	r30, r24
    69d2:	20 83       	st	Z, r18

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    69d4:	8b 81       	ldd	r24, Y+3	; 0x03
    69d6:	8f 5f       	subi	r24, 0xFF	; 255
    69d8:	8b 83       	std	Y+3, r24	; 0x03
    69da:	ea cf       	rjmp	.-44     	; 0x69b0 <mcu_init+0x6c>
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    69dc:	1c 82       	std	Y+4, r1	; 0x04
    69de:	8c 81       	ldd	r24, Y+4	; 0x04
    69e0:	88 30       	cpi	r24, 0x08	; 8
    69e2:	98 f4       	brcc	.+38     	; 0x6a0a <mcu_init+0xc6>
		*((uint8_t *)&PORTD + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    69e4:	8c 81       	ldd	r24, Y+4	; 0x04
    69e6:	88 2f       	mov	r24, r24
    69e8:	90 e0       	ldi	r25, 0x00	; 0
    69ea:	80 59       	subi	r24, 0x90	; 144
    69ec:	9b 4f       	sbci	r25, 0xFB	; 251
    69ee:	2c 81       	ldd	r18, Y+4	; 0x04
    69f0:	22 2f       	mov	r18, r18
    69f2:	30 e0       	ldi	r19, 0x00	; 0
    69f4:	20 59       	subi	r18, 0x90	; 144
    69f6:	3b 4f       	sbci	r19, 0xFB	; 251
    69f8:	f9 01       	movw	r30, r18
    69fa:	20 81       	ld	r18, Z
    69fc:	28 60       	ori	r18, 0x08	; 8
    69fe:	fc 01       	movw	r30, r24
    6a00:	20 83       	st	Z, r18

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    6a02:	8c 81       	ldd	r24, Y+4	; 0x04
    6a04:	8f 5f       	subi	r24, 0xFF	; 255
    6a06:	8c 83       	std	Y+4, r24	; 0x04
    6a08:	ea cf       	rjmp	.-44     	; 0x69de <mcu_init+0x9a>
		*((uint8_t *)&PORTD + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    6a0a:	1d 82       	std	Y+5, r1	; 0x05
    6a0c:	8d 81       	ldd	r24, Y+5	; 0x05
    6a0e:	88 30       	cpi	r24, 0x08	; 8
    6a10:	98 f4       	brcc	.+38     	; 0x6a38 <mcu_init+0xf4>
		*((uint8_t *)&PORTE + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    6a12:	8d 81       	ldd	r24, Y+5	; 0x05
    6a14:	88 2f       	mov	r24, r24
    6a16:	90 e0       	ldi	r25, 0x00	; 0
    6a18:	80 57       	subi	r24, 0x70	; 112
    6a1a:	9b 4f       	sbci	r25, 0xFB	; 251
    6a1c:	2d 81       	ldd	r18, Y+5	; 0x05
    6a1e:	22 2f       	mov	r18, r18
    6a20:	30 e0       	ldi	r19, 0x00	; 0
    6a22:	20 57       	subi	r18, 0x70	; 112
    6a24:	3b 4f       	sbci	r19, 0xFB	; 251
    6a26:	f9 01       	movw	r30, r18
    6a28:	20 81       	ld	r18, Z
    6a2a:	28 60       	ori	r18, 0x08	; 8
    6a2c:	fc 01       	movw	r30, r24
    6a2e:	20 83       	st	Z, r18

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTD + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    6a30:	8d 81       	ldd	r24, Y+5	; 0x05
    6a32:	8f 5f       	subi	r24, 0xFF	; 255
    6a34:	8d 83       	std	Y+5, r24	; 0x05
    6a36:	ea cf       	rjmp	.-44     	; 0x6a0c <mcu_init+0xc8>
		*((uint8_t *)&PORTE + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    6a38:	1e 82       	std	Y+6, r1	; 0x06
    6a3a:	8e 81       	ldd	r24, Y+6	; 0x06
    6a3c:	88 30       	cpi	r24, 0x08	; 8
    6a3e:	98 f4       	brcc	.+38     	; 0x6a66 <mcu_init+0x122>
		*((uint8_t *)&PORTF + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    6a40:	8e 81       	ldd	r24, Y+6	; 0x06
    6a42:	88 2f       	mov	r24, r24
    6a44:	90 e0       	ldi	r25, 0x00	; 0
    6a46:	80 55       	subi	r24, 0x50	; 80
    6a48:	9b 4f       	sbci	r25, 0xFB	; 251
    6a4a:	2e 81       	ldd	r18, Y+6	; 0x06
    6a4c:	22 2f       	mov	r18, r18
    6a4e:	30 e0       	ldi	r19, 0x00	; 0
    6a50:	20 55       	subi	r18, 0x50	; 80
    6a52:	3b 4f       	sbci	r19, 0xFB	; 251
    6a54:	f9 01       	movw	r30, r18
    6a56:	20 81       	ld	r18, Z
    6a58:	28 60       	ori	r18, 0x08	; 8
    6a5a:	fc 01       	movw	r30, r24
    6a5c:	20 83       	st	Z, r18

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTE + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    6a5e:	8e 81       	ldd	r24, Y+6	; 0x06
    6a60:	8f 5f       	subi	r24, 0xFF	; 255
    6a62:	8e 83       	std	Y+6, r24	; 0x06
    6a64:	ea cf       	rjmp	.-44     	; 0x6a3a <mcu_init+0xf6>
		*((uint8_t *)&PORTF + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}
}
    6a66:	00 00       	nop
    6a68:	26 96       	adiw	r28, 0x06	; 6
    6a6a:	cd bf       	out	0x3d, r28	; 61
    6a6c:	de bf       	out	0x3e, r29	; 62
    6a6e:	df 91       	pop	r29
    6a70:	cf 91       	pop	r28
    6a72:	08 95       	ret

00006a74 <system_init>:

/**
 * \brief System initialization
 */
void system_init()
{
    6a74:	cf 93       	push	r28
    6a76:	df 93       	push	r29
    6a78:	cd b7       	in	r28, 0x3d	; 61
    6a7a:	de b7       	in	r29, 0x3e	; 62
	mcu_init();
    6a7c:	0e 94 a2 34 	call	0x6944	; 0x6944 <mcu_init>

	CLKCTRL_init(); /* Set CPU clock speed appropriately */
    6a80:	0e 94 62 33 	call	0x66c4	; 0x66c4 <CLKCTRL_init>
	TIMERB_init(); /* Timers must be initialized before utility_delay functions will work */
    6a84:	0e 94 f4 69 	call	0xd3e8	; 0xd3e8 <TIMERB_init>
	CPUINT_init(); /* Interrupts must also be enabled before timer interrupts will function */
    6a88:	0e 94 6f 33 	call	0x66de	; 0x66de <CPUINT_init>
	BINIO_init();
    6a8c:	0e 94 4b 30 	call	0x6096	; 0x6096 <_Z10BINIO_initv>

	LED_set_RED_dir(PORT_DIR_OUT);
    6a90:	81 e0       	ldi	r24, 0x01	; 1
    6a92:	0e 94 66 34 	call	0x68cc	; 0x68cc <_ZL15LED_set_RED_dir8port_dir>
	LED_set_RED_level(OFF);
    6a96:	80 e0       	ldi	r24, 0x00	; 0
    6a98:	0e 94 84 34 	call	0x6908	; 0x6908 <_ZL17LED_set_RED_levelb>
	LED_set_GREEN_dir(PORT_DIR_OUT);
    6a9c:	81 e0       	ldi	r24, 0x01	; 1
    6a9e:	0e 94 75 34 	call	0x68ea	; 0x68ea <_ZL17LED_set_GREEN_dir8port_dir>
	LED_set_GREEN_level(OFF);
    6aa2:	80 e0       	ldi	r24, 0x00	; 0
    6aa4:	0e 94 93 34 	call	0x6926	; 0x6926 <_ZL19LED_set_GREEN_levelb>

	SLPCTRL_init();
    6aa8:	0e 94 d0 69 	call	0xd3a0	; 0xd3a0 <SLPCTRL_init>
	
	DAC0_init();
    6aac:	0e 94 8e 33 	call	0x671c	; 0x671c <_Z9DAC0_initv>

	linkbus_init(LB_BAUD, LINKBUS_USART);
    6ab0:	41 e0       	ldi	r20, 0x01	; 1
    6ab2:	60 e8       	ldi	r22, 0x80	; 128
    6ab4:	75 e2       	ldi	r23, 0x25	; 37
    6ab6:	80 e0       	ldi	r24, 0x00	; 0
    6ab8:	90 e0       	ldi	r25, 0x00	; 0
    6aba:	0e 94 15 56 	call	0xac2a	; 0xac2a <_Z12linkbus_initm14USART_Number_t>
	serialbus_init(SB_BAUD, SERIALBUS_USART);
    6abe:	44 e0       	ldi	r20, 0x04	; 4
    6ac0:	60 e8       	ldi	r22, 0x80	; 128
    6ac2:	75 e2       	ldi	r23, 0x25	; 37
    6ac4:	80 e0       	ldi	r24, 0x00	; 0
    6ac6:	90 e0       	ldi	r25, 0x00	; 0
    6ac8:	0e 94 8f 5e 	call	0xbd1e	; 0xbd1e <serialbus_init>

	BOD_init();
    6acc:	0e 94 b5 31 	call	0x636a	; 0x636a <BOD_init>
}
    6ad0:	00 00       	nop
    6ad2:	df 91       	pop	r29
    6ad4:	cf 91       	pop	r28
    6ad6:	08 95       	ret

00006ad8 <system_sleep_settings>:

void system_sleep_settings()
{
    6ad8:	cf 93       	push	r28
    6ada:	df 93       	push	r29
    6adc:	cd b7       	in	r28, 0x3d	; 61
    6ade:	de b7       	in	r29, 0x3e	; 62
	mcu_init();
    6ae0:	0e 94 a2 34 	call	0x6944	; 0x6944 <mcu_init>

//	CLKCTRL_init(); /* Set CPU clock speed appropriately */
	TIMERB_sleep(); /* Timers must be initialized before utility_delay functions will work */
    6ae4:	0e 94 e6 6b 	call	0xd7cc	; 0xd7cc <TIMERB_sleep>
//	CPUINT_init(); /* Interrupts must also be enabled before timer interrupts will function */
	BINIO_sleep();
    6ae8:	0e 94 21 31 	call	0x6242	; 0x6242 <_Z11BINIO_sleepv>

	LED_set_RED_dir(PORT_DIR_OUT);
    6aec:	81 e0       	ldi	r24, 0x01	; 1
    6aee:	0e 94 66 34 	call	0x68cc	; 0x68cc <_ZL15LED_set_RED_dir8port_dir>
	LED_set_RED_level(OFF);
    6af2:	80 e0       	ldi	r24, 0x00	; 0
    6af4:	0e 94 84 34 	call	0x6908	; 0x6908 <_ZL17LED_set_RED_levelb>
	LED_set_GREEN_dir(PORT_DIR_OUT);
    6af8:	81 e0       	ldi	r24, 0x01	; 1
    6afa:	0e 94 75 34 	call	0x68ea	; 0x68ea <_ZL17LED_set_GREEN_dir8port_dir>
	LED_set_GREEN_level(OFF);
    6afe:	80 e0       	ldi	r24, 0x00	; 0
    6b00:	0e 94 93 34 	call	0x6926	; 0x6926 <_ZL19LED_set_GREEN_levelb>

}
    6b04:	00 00       	nop
    6b06:	df 91       	pop	r29
    6b08:	cf 91       	pop	r28
    6b0a:	08 95       	ret

00006b0c <ds3231_init>:
				*val = second + 10 * second10 + 60 * (int32_t)minute + 600 * (int32_t)minute10 +  3600 * (int32_t)hour + 36000 * (int32_t)hour10;
			}
		}
		
		return(failure);
	}
    6b0c:	cf 93       	push	r28
    6b0e:	df 93       	push	r29
    6b10:	cd b7       	in	r28, 0x3d	; 61
    6b12:	de b7       	in	r29, 0x3e	; 62
    6b14:	0e 94 d6 48 	call	0x91ac	; 0x91ac <I2C_0_Init>
    6b18:	0e 94 21 39 	call	0x7242	; 0x7242 <ds3231_responding>
    6b1c:	98 2f       	mov	r25, r24
    6b1e:	81 e0       	ldi	r24, 0x01	; 1
    6b20:	89 27       	eor	r24, r25
    6b22:	df 91       	pop	r29
    6b24:	cf 91       	pop	r28
    6b26:	08 95       	ret

00006b28 <ds3231_get_epoch>:
    6b28:	ef 92       	push	r14
    6b2a:	ff 92       	push	r15
    6b2c:	0f 93       	push	r16
    6b2e:	1f 93       	push	r17
    6b30:	cf 93       	push	r28
    6b32:	df 93       	push	r29
    6b34:	cd b7       	in	r28, 0x3d	; 61
    6b36:	de b7       	in	r29, 0x3e	; 62
    6b38:	a5 97       	sbiw	r28, 0x25	; 37
    6b3a:	cd bf       	out	0x3d, r28	; 61
    6b3c:	de bf       	out	0x3e, r29	; 62
    6b3e:	8c a3       	std	Y+36, r24	; 0x24
    6b40:	9d a3       	std	Y+37, r25	; 0x25
    6b42:	8a e0       	ldi	r24, 0x0A	; 10
    6b44:	89 83       	std	Y+1, r24	; 0x01
    6b46:	1a 82       	std	Y+2, r1	; 0x02
    6b48:	1b 82       	std	Y+3, r1	; 0x03
    6b4a:	1c 82       	std	Y+4, r1	; 0x04
    6b4c:	1d 82       	std	Y+5, r1	; 0x05
    6b4e:	27 e0       	ldi	r18, 0x07	; 7
    6b50:	ce 01       	movw	r24, r28
    6b52:	41 96       	adiw	r24, 0x11	; 17
    6b54:	fc 01       	movw	r30, r24
    6b56:	32 2f       	mov	r19, r18
    6b58:	11 92       	st	Z+, r1
    6b5a:	3a 95       	dec	r19
    6b5c:	e9 f7       	brne	.-6      	; 0x6b58 <ds3231_get_epoch+0x30>
    6b5e:	89 81       	ldd	r24, Y+1	; 0x01
    6b60:	9f ef       	ldi	r25, 0xFF	; 255
    6b62:	98 0f       	add	r25, r24
    6b64:	99 83       	std	Y+1, r25	; 0x01
    6b66:	88 23       	and	r24, r24
    6b68:	99 f0       	breq	.+38     	; 0x6b90 <ds3231_get_epoch+0x68>
    6b6a:	ce 01       	movw	r24, r28
    6b6c:	41 96       	adiw	r24, 0x11	; 17
    6b6e:	27 e0       	ldi	r18, 0x07	; 7
    6b70:	ac 01       	movw	r20, r24
    6b72:	60 e0       	ldi	r22, 0x00	; 0
    6b74:	80 ed       	ldi	r24, 0xD0	; 208
    6b76:	0e 94 0e 4a 	call	0x941c	; 0x941c <I2C_0_GetData>
    6b7a:	98 2f       	mov	r25, r24
    6b7c:	81 e0       	ldi	r24, 0x01	; 1
    6b7e:	97 30       	cpi	r25, 0x07	; 7
    6b80:	09 f4       	brne	.+2      	; 0x6b84 <ds3231_get_epoch+0x5c>
    6b82:	80 e0       	ldi	r24, 0x00	; 0
    6b84:	8e 83       	std	Y+6, r24	; 0x06
    6b86:	8e 81       	ldd	r24, Y+6	; 0x06
    6b88:	88 23       	and	r24, r24
    6b8a:	11 f0       	breq	.+4      	; 0x6b90 <ds3231_get_epoch+0x68>
    6b8c:	81 e0       	ldi	r24, 0x01	; 1
    6b8e:	01 c0       	rjmp	.+2      	; 0x6b92 <ds3231_get_epoch+0x6a>
    6b90:	80 e0       	ldi	r24, 0x00	; 0
    6b92:	88 23       	and	r24, r24
    6b94:	09 f0       	breq	.+2      	; 0x6b98 <ds3231_get_epoch+0x70>
    6b96:	e3 cf       	rjmp	.-58     	; 0x6b5e <ds3231_get_epoch+0x36>
    6b98:	9e 81       	ldd	r25, Y+6	; 0x06
    6b9a:	81 e0       	ldi	r24, 0x01	; 1
    6b9c:	89 27       	eor	r24, r25
    6b9e:	88 23       	and	r24, r24
    6ba0:	09 f4       	brne	.+2      	; 0x6ba4 <ds3231_get_epoch+0x7c>
    6ba2:	7e c1       	rjmp	.+764    	; 0x6ea0 <ds3231_get_epoch+0x378>
    6ba4:	2c e0       	ldi	r18, 0x0C	; 12
    6ba6:	ce 01       	movw	r24, r28
    6ba8:	48 96       	adiw	r24, 0x18	; 24
    6baa:	fc 01       	movw	r30, r24
    6bac:	32 2f       	mov	r19, r18
    6bae:	11 92       	st	Z+, r1
    6bb0:	3a 95       	dec	r19
    6bb2:	e9 f7       	brne	.-6      	; 0x6bae <ds3231_get_epoch+0x86>
    6bb4:	84 e6       	ldi	r24, 0x64	; 100
    6bb6:	90 e0       	ldi	r25, 0x00	; 0
    6bb8:	89 87       	std	Y+9, r24	; 0x09
    6bba:	9a 87       	std	Y+10, r25	; 0x0a
    6bbc:	8f 89       	ldd	r24, Y+23	; 0x17
    6bbe:	88 2f       	mov	r24, r24
    6bc0:	90 e0       	ldi	r25, 0x00	; 0
    6bc2:	8f 70       	andi	r24, 0x0F	; 15
    6bc4:	99 27       	eor	r25, r25
    6bc6:	29 85       	ldd	r18, Y+9	; 0x09
    6bc8:	3a 85       	ldd	r19, Y+10	; 0x0a
    6bca:	82 0f       	add	r24, r18
    6bcc:	93 1f       	adc	r25, r19
    6bce:	89 87       	std	Y+9, r24	; 0x09
    6bd0:	9a 87       	std	Y+10, r25	; 0x0a
    6bd2:	8f 89       	ldd	r24, Y+23	; 0x17
    6bd4:	82 95       	swap	r24
    6bd6:	8f 70       	andi	r24, 0x0F	; 15
    6bd8:	88 2f       	mov	r24, r24
    6bda:	90 e0       	ldi	r25, 0x00	; 0
    6bdc:	88 0f       	add	r24, r24
    6bde:	99 1f       	adc	r25, r25
    6be0:	9c 01       	movw	r18, r24
    6be2:	22 0f       	add	r18, r18
    6be4:	33 1f       	adc	r19, r19
    6be6:	22 0f       	add	r18, r18
    6be8:	33 1f       	adc	r19, r19
    6bea:	82 0f       	add	r24, r18
    6bec:	93 1f       	adc	r25, r19
    6bee:	29 85       	ldd	r18, Y+9	; 0x09
    6bf0:	3a 85       	ldd	r19, Y+10	; 0x0a
    6bf2:	82 0f       	add	r24, r18
    6bf4:	93 1f       	adc	r25, r19
    6bf6:	89 87       	std	Y+9, r24	; 0x09
    6bf8:	9a 87       	std	Y+10, r25	; 0x0a
    6bfa:	89 85       	ldd	r24, Y+9	; 0x09
    6bfc:	9a 85       	ldd	r25, Y+10	; 0x0a
    6bfe:	8e 8f       	std	Y+30, r24	; 0x1e
    6c00:	9f 8f       	std	Y+31, r25	; 0x1f
    6c02:	89 85       	ldd	r24, Y+9	; 0x09
    6c04:	9a 85       	ldd	r25, Y+10	; 0x0a
    6c06:	84 59       	subi	r24, 0x94	; 148
    6c08:	98 4f       	sbci	r25, 0xF8	; 248
    6c0a:	89 87       	std	Y+9, r24	; 0x09
    6c0c:	9a 87       	std	Y+10, r25	; 0x0a
    6c0e:	8e 89       	ldd	r24, Y+22	; 0x16
    6c10:	8f 70       	andi	r24, 0x0F	; 15
    6c12:	8b 87       	std	Y+11, r24	; 0x0b
    6c14:	8e 89       	ldd	r24, Y+22	; 0x16
    6c16:	82 95       	swap	r24
    6c18:	8f 70       	andi	r24, 0x0F	; 15
    6c1a:	88 0f       	add	r24, r24
    6c1c:	98 2f       	mov	r25, r24
    6c1e:	99 0f       	add	r25, r25
    6c20:	99 0f       	add	r25, r25
    6c22:	89 0f       	add	r24, r25
    6c24:	9b 85       	ldd	r25, Y+11	; 0x0b
    6c26:	89 0f       	add	r24, r25
    6c28:	8b 87       	std	Y+11, r24	; 0x0b
    6c2a:	8b 85       	ldd	r24, Y+11	; 0x0b
    6c2c:	81 50       	subi	r24, 0x01	; 1
    6c2e:	8d 8f       	std	Y+29, r24	; 0x1d
    6c30:	8d 89       	ldd	r24, Y+21	; 0x15
    6c32:	8f 70       	andi	r24, 0x0F	; 15
    6c34:	8c 87       	std	Y+12, r24	; 0x0c
    6c36:	8d 89       	ldd	r24, Y+21	; 0x15
    6c38:	82 95       	swap	r24
    6c3a:	8f 70       	andi	r24, 0x0F	; 15
    6c3c:	88 0f       	add	r24, r24
    6c3e:	98 2f       	mov	r25, r24
    6c40:	99 0f       	add	r25, r25
    6c42:	99 0f       	add	r25, r25
    6c44:	89 0f       	add	r24, r25
    6c46:	9c 85       	ldd	r25, Y+12	; 0x0c
    6c48:	89 0f       	add	r24, r25
    6c4a:	8c 87       	std	Y+12, r24	; 0x0c
    6c4c:	8c 85       	ldd	r24, Y+12	; 0x0c
    6c4e:	8b 8f       	std	Y+27, r24	; 0x1b
    6c50:	18 a2       	std	Y+32, r1	; 0x20
    6c52:	19 a2       	std	Y+33, r1	; 0x21
    6c54:	81 e0       	ldi	r24, 0x01	; 1
    6c56:	88 87       	std	Y+8, r24	; 0x08
    6c58:	98 85       	ldd	r25, Y+8	; 0x08
    6c5a:	8b 85       	ldd	r24, Y+11	; 0x0b
    6c5c:	98 17       	cp	r25, r24
    6c5e:	88 f4       	brcc	.+34     	; 0x6c82 <ds3231_get_epoch+0x15a>
    6c60:	89 85       	ldd	r24, Y+9	; 0x09
    6c62:	9a 85       	ldd	r25, Y+10	; 0x0a
    6c64:	68 85       	ldd	r22, Y+8	; 0x08
    6c66:	0e 94 c7 02 	call	0x58e	; 0x58e <month_length>
    6c6a:	28 a1       	ldd	r18, Y+32	; 0x20
    6c6c:	39 a1       	ldd	r19, Y+33	; 0x21
    6c6e:	88 2f       	mov	r24, r24
    6c70:	90 e0       	ldi	r25, 0x00	; 0
    6c72:	82 0f       	add	r24, r18
    6c74:	93 1f       	adc	r25, r19
    6c76:	88 a3       	std	Y+32, r24	; 0x20
    6c78:	99 a3       	std	Y+33, r25	; 0x21
    6c7a:	88 85       	ldd	r24, Y+8	; 0x08
    6c7c:	8f 5f       	subi	r24, 0xFF	; 255
    6c7e:	88 87       	std	Y+8, r24	; 0x08
    6c80:	eb cf       	rjmp	.-42     	; 0x6c58 <ds3231_get_epoch+0x130>
    6c82:	28 a1       	ldd	r18, Y+32	; 0x20
    6c84:	39 a1       	ldd	r19, Y+33	; 0x21
    6c86:	8b 8d       	ldd	r24, Y+27	; 0x1b
    6c88:	08 2e       	mov	r0, r24
    6c8a:	00 0c       	add	r0, r0
    6c8c:	99 0b       	sbc	r25, r25
    6c8e:	01 97       	sbiw	r24, 0x01	; 1
    6c90:	82 0f       	add	r24, r18
    6c92:	93 1f       	adc	r25, r19
    6c94:	88 a3       	std	Y+32, r24	; 0x20
    6c96:	99 a3       	std	Y+33, r25	; 0x21
    6c98:	89 89       	ldd	r24, Y+17	; 0x11
    6c9a:	82 95       	swap	r24
    6c9c:	8f 70       	andi	r24, 0x0F	; 15
    6c9e:	88 0f       	add	r24, r24
    6ca0:	98 2f       	mov	r25, r24
    6ca2:	99 0f       	add	r25, r25
    6ca4:	99 0f       	add	r25, r25
    6ca6:	89 0f       	add	r24, r25
    6ca8:	8d 87       	std	Y+13, r24	; 0x0d
    6caa:	89 89       	ldd	r24, Y+17	; 0x11
    6cac:	8f 70       	andi	r24, 0x0F	; 15
    6cae:	9d 85       	ldd	r25, Y+13	; 0x0d
    6cb0:	89 0f       	add	r24, r25
    6cb2:	8d 87       	std	Y+13, r24	; 0x0d
    6cb4:	8a 89       	ldd	r24, Y+18	; 0x12
    6cb6:	82 95       	swap	r24
    6cb8:	8f 70       	andi	r24, 0x0F	; 15
    6cba:	88 0f       	add	r24, r24
    6cbc:	98 2f       	mov	r25, r24
    6cbe:	99 0f       	add	r25, r25
    6cc0:	99 0f       	add	r25, r25
    6cc2:	89 0f       	add	r24, r25
    6cc4:	8e 87       	std	Y+14, r24	; 0x0e
    6cc6:	8a 89       	ldd	r24, Y+18	; 0x12
    6cc8:	8f 70       	andi	r24, 0x0F	; 15
    6cca:	9e 85       	ldd	r25, Y+14	; 0x0e
    6ccc:	89 0f       	add	r24, r25
    6cce:	8e 87       	std	Y+14, r24	; 0x0e
    6cd0:	8b 89       	ldd	r24, Y+19	; 0x13
    6cd2:	88 2f       	mov	r24, r24
    6cd4:	90 e0       	ldi	r25, 0x00	; 0
    6cd6:	80 72       	andi	r24, 0x20	; 32
    6cd8:	99 27       	eor	r25, r25
    6cda:	21 e0       	ldi	r18, 0x01	; 1
    6cdc:	89 2b       	or	r24, r25
    6cde:	09 f4       	brne	.+2      	; 0x6ce2 <ds3231_get_epoch+0x1ba>
    6ce0:	20 e0       	ldi	r18, 0x00	; 0
    6ce2:	2f 87       	std	Y+15, r18	; 0x0f
    6ce4:	8b 89       	ldd	r24, Y+19	; 0x13
    6ce6:	88 2f       	mov	r24, r24
    6ce8:	90 e0       	ldi	r25, 0x00	; 0
    6cea:	95 95       	asr	r25
    6cec:	87 95       	ror	r24
    6cee:	95 95       	asr	r25
    6cf0:	87 95       	ror	r24
    6cf2:	95 95       	asr	r25
    6cf4:	87 95       	ror	r24
    6cf6:	95 95       	asr	r25
    6cf8:	87 95       	ror	r24
    6cfa:	81 70       	andi	r24, 0x01	; 1
    6cfc:	88 0f       	add	r24, r24
    6cfe:	98 2f       	mov	r25, r24
    6d00:	99 0f       	add	r25, r25
    6d02:	99 0f       	add	r25, r25
    6d04:	89 0f       	add	r24, r25
    6d06:	8f 83       	std	Y+7, r24	; 0x07
    6d08:	8b 89       	ldd	r24, Y+19	; 0x13
    6d0a:	8f 70       	andi	r24, 0x0F	; 15
    6d0c:	9f 81       	ldd	r25, Y+7	; 0x07
    6d0e:	89 0f       	add	r24, r25
    6d10:	8f 83       	std	Y+7, r24	; 0x07
    6d12:	8b 89       	ldd	r24, Y+19	; 0x13
    6d14:	88 2f       	mov	r24, r24
    6d16:	90 e0       	ldi	r25, 0x00	; 0
    6d18:	80 74       	andi	r24, 0x40	; 64
    6d1a:	99 27       	eor	r25, r25
    6d1c:	21 e0       	ldi	r18, 0x01	; 1
    6d1e:	89 2b       	or	r24, r25
    6d20:	09 f4       	brne	.+2      	; 0x6d24 <ds3231_get_epoch+0x1fc>
    6d22:	20 e0       	ldi	r18, 0x00	; 0
    6d24:	28 8b       	std	Y+16, r18	; 0x10
    6d26:	88 89       	ldd	r24, Y+16	; 0x10
    6d28:	88 23       	and	r24, r24
    6d2a:	39 f0       	breq	.+14     	; 0x6d3a <ds3231_get_epoch+0x212>
    6d2c:	8f 85       	ldd	r24, Y+15	; 0x0f
    6d2e:	88 23       	and	r24, r24
    6d30:	51 f0       	breq	.+20     	; 0x6d46 <ds3231_get_epoch+0x21e>
    6d32:	8f 81       	ldd	r24, Y+7	; 0x07
    6d34:	84 5f       	subi	r24, 0xF4	; 244
    6d36:	8f 83       	std	Y+7, r24	; 0x07
    6d38:	06 c0       	rjmp	.+12     	; 0x6d46 <ds3231_get_epoch+0x21e>
    6d3a:	8f 85       	ldd	r24, Y+15	; 0x0f
    6d3c:	88 23       	and	r24, r24
    6d3e:	19 f0       	breq	.+6      	; 0x6d46 <ds3231_get_epoch+0x21e>
    6d40:	8f 81       	ldd	r24, Y+7	; 0x07
    6d42:	8c 5e       	subi	r24, 0xEC	; 236
    6d44:	8f 83       	std	Y+7, r24	; 0x07
    6d46:	8f 81       	ldd	r24, Y+7	; 0x07
    6d48:	8a 8f       	std	Y+26, r24	; 0x1a
    6d4a:	8e 85       	ldd	r24, Y+14	; 0x0e
    6d4c:	89 8f       	std	Y+25, r24	; 0x19
    6d4e:	8d 85       	ldd	r24, Y+13	; 0x0d
    6d50:	88 8f       	std	Y+24, r24	; 0x18
    6d52:	88 8d       	ldd	r24, Y+24	; 0x18
    6d54:	28 2f       	mov	r18, r24
    6d56:	88 0f       	add	r24, r24
    6d58:	33 0b       	sbc	r19, r19
    6d5a:	89 8d       	ldd	r24, Y+25	; 0x19
    6d5c:	48 2f       	mov	r20, r24
    6d5e:	88 0f       	add	r24, r24
    6d60:	55 0b       	sbc	r21, r21
    6d62:	6c e3       	ldi	r22, 0x3C	; 60
    6d64:	64 9f       	mul	r22, r20
    6d66:	c0 01       	movw	r24, r0
    6d68:	65 9f       	mul	r22, r21
    6d6a:	90 0d       	add	r25, r0
    6d6c:	11 24       	eor	r1, r1
    6d6e:	82 0f       	add	r24, r18
    6d70:	93 1f       	adc	r25, r19
    6d72:	7c 01       	movw	r14, r24
    6d74:	99 0f       	add	r25, r25
    6d76:	00 0b       	sbc	r16, r16
    6d78:	11 0b       	sbc	r17, r17
    6d7a:	8a 8d       	ldd	r24, Y+26	; 0x1a
    6d7c:	28 2f       	mov	r18, r24
    6d7e:	88 0f       	add	r24, r24
    6d80:	33 0b       	sbc	r19, r19
    6d82:	44 0b       	sbc	r20, r20
    6d84:	55 0b       	sbc	r21, r21
    6d86:	80 e1       	ldi	r24, 0x10	; 16
    6d88:	9e e0       	ldi	r25, 0x0E	; 14
    6d8a:	dc 01       	movw	r26, r24
    6d8c:	0e 94 1d 75 	call	0xea3a	; 0xea3a <__muluhisi3>
    6d90:	dc 01       	movw	r26, r24
    6d92:	cb 01       	movw	r24, r22
    6d94:	e8 0e       	add	r14, r24
    6d96:	f9 1e       	adc	r15, r25
    6d98:	0a 1f       	adc	r16, r26
    6d9a:	1b 1f       	adc	r17, r27
    6d9c:	88 a1       	ldd	r24, Y+32	; 0x20
    6d9e:	99 a1       	ldd	r25, Y+33	; 0x21
    6da0:	09 2e       	mov	r0, r25
    6da2:	00 0c       	add	r0, r0
    6da4:	aa 0b       	sbc	r26, r26
    6da6:	bb 0b       	sbc	r27, r27
    6da8:	9c 01       	movw	r18, r24
    6daa:	ad 01       	movw	r20, r26
    6dac:	60 e8       	ldi	r22, 0x80	; 128
    6dae:	71 e5       	ldi	r23, 0x51	; 81
    6db0:	81 e0       	ldi	r24, 0x01	; 1
    6db2:	90 e0       	ldi	r25, 0x00	; 0
    6db4:	0e 94 9b 74 	call	0xe936	; 0xe936 <__mulsi3>
    6db8:	dc 01       	movw	r26, r24
    6dba:	cb 01       	movw	r24, r22
    6dbc:	e8 0e       	add	r14, r24
    6dbe:	f9 1e       	adc	r15, r25
    6dc0:	0a 1f       	adc	r16, r26
    6dc2:	1b 1f       	adc	r17, r27
    6dc4:	8e 8d       	ldd	r24, Y+30	; 0x1e
    6dc6:	9f 8d       	ldd	r25, Y+31	; 0x1f
    6dc8:	86 54       	subi	r24, 0x46	; 70
    6dca:	91 09       	sbc	r25, r1
    6dcc:	09 2e       	mov	r0, r25
    6dce:	00 0c       	add	r0, r0
    6dd0:	aa 0b       	sbc	r26, r26
    6dd2:	bb 0b       	sbc	r27, r27
    6dd4:	9c 01       	movw	r18, r24
    6dd6:	ad 01       	movw	r20, r26
    6dd8:	60 e8       	ldi	r22, 0x80	; 128
    6dda:	73 e3       	ldi	r23, 0x33	; 51
    6ddc:	81 ee       	ldi	r24, 0xE1	; 225
    6dde:	91 e0       	ldi	r25, 0x01	; 1
    6de0:	0e 94 9b 74 	call	0xe936	; 0xe936 <__mulsi3>
    6de4:	dc 01       	movw	r26, r24
    6de6:	cb 01       	movw	r24, r22
    6de8:	e8 0e       	add	r14, r24
    6dea:	f9 1e       	adc	r15, r25
    6dec:	0a 1f       	adc	r16, r26
    6dee:	1b 1f       	adc	r17, r27
    6df0:	8e 8d       	ldd	r24, Y+30	; 0x1e
    6df2:	9f 8d       	ldd	r25, Y+31	; 0x1f
    6df4:	85 54       	subi	r24, 0x45	; 69
    6df6:	91 09       	sbc	r25, r1
    6df8:	99 23       	and	r25, r25
    6dfa:	0c f4       	brge	.+2      	; 0x6dfe <ds3231_get_epoch+0x2d6>
    6dfc:	03 96       	adiw	r24, 0x03	; 3
    6dfe:	95 95       	asr	r25
    6e00:	87 95       	ror	r24
    6e02:	95 95       	asr	r25
    6e04:	87 95       	ror	r24
    6e06:	09 2e       	mov	r0, r25
    6e08:	00 0c       	add	r0, r0
    6e0a:	aa 0b       	sbc	r26, r26
    6e0c:	bb 0b       	sbc	r27, r27
    6e0e:	9c 01       	movw	r18, r24
    6e10:	ad 01       	movw	r20, r26
    6e12:	60 e8       	ldi	r22, 0x80	; 128
    6e14:	71 e5       	ldi	r23, 0x51	; 81
    6e16:	81 e0       	ldi	r24, 0x01	; 1
    6e18:	90 e0       	ldi	r25, 0x00	; 0
    6e1a:	0e 94 9b 74 	call	0xe936	; 0xe936 <__mulsi3>
    6e1e:	dc 01       	movw	r26, r24
    6e20:	cb 01       	movw	r24, r22
    6e22:	e8 0e       	add	r14, r24
    6e24:	f9 1e       	adc	r15, r25
    6e26:	0a 1f       	adc	r16, r26
    6e28:	1b 1f       	adc	r17, r27
    6e2a:	8e 8d       	ldd	r24, Y+30	; 0x1e
    6e2c:	9f 8d       	ldd	r25, Y+31	; 0x1f
    6e2e:	01 97       	sbiw	r24, 0x01	; 1
    6e30:	24 e6       	ldi	r18, 0x64	; 100
    6e32:	30 e0       	ldi	r19, 0x00	; 0
    6e34:	b9 01       	movw	r22, r18
    6e36:	0e 94 bf 74 	call	0xe97e	; 0xe97e <__divmodhi4>
    6e3a:	cb 01       	movw	r24, r22
    6e3c:	09 2e       	mov	r0, r25
    6e3e:	00 0c       	add	r0, r0
    6e40:	aa 0b       	sbc	r26, r26
    6e42:	bb 0b       	sbc	r27, r27
    6e44:	9c 01       	movw	r18, r24
    6e46:	ad 01       	movw	r20, r26
    6e48:	60 e8       	ldi	r22, 0x80	; 128
    6e4a:	7e ea       	ldi	r23, 0xAE	; 174
    6e4c:	8e ef       	ldi	r24, 0xFE	; 254
    6e4e:	9f ef       	ldi	r25, 0xFF	; 255
    6e50:	0e 94 9b 74 	call	0xe936	; 0xe936 <__mulsi3>
    6e54:	dc 01       	movw	r26, r24
    6e56:	cb 01       	movw	r24, r22
    6e58:	e8 0e       	add	r14, r24
    6e5a:	f9 1e       	adc	r15, r25
    6e5c:	0a 1f       	adc	r16, r26
    6e5e:	1b 1f       	adc	r17, r27
    6e60:	8e 8d       	ldd	r24, Y+30	; 0x1e
    6e62:	9f 8d       	ldd	r25, Y+31	; 0x1f
    6e64:	85 5d       	subi	r24, 0xD5	; 213
    6e66:	9e 4f       	sbci	r25, 0xFE	; 254
    6e68:	20 e9       	ldi	r18, 0x90	; 144
    6e6a:	31 e0       	ldi	r19, 0x01	; 1
    6e6c:	b9 01       	movw	r22, r18
    6e6e:	0e 94 bf 74 	call	0xe97e	; 0xe97e <__divmodhi4>
    6e72:	cb 01       	movw	r24, r22
    6e74:	09 2e       	mov	r0, r25
    6e76:	00 0c       	add	r0, r0
    6e78:	aa 0b       	sbc	r26, r26
    6e7a:	bb 0b       	sbc	r27, r27
    6e7c:	9c 01       	movw	r18, r24
    6e7e:	ad 01       	movw	r20, r26
    6e80:	60 e8       	ldi	r22, 0x80	; 128
    6e82:	71 e5       	ldi	r23, 0x51	; 81
    6e84:	81 e0       	ldi	r24, 0x01	; 1
    6e86:	90 e0       	ldi	r25, 0x00	; 0
    6e88:	0e 94 9b 74 	call	0xe936	; 0xe936 <__mulsi3>
    6e8c:	dc 01       	movw	r26, r24
    6e8e:	cb 01       	movw	r24, r22
    6e90:	8e 0d       	add	r24, r14
    6e92:	9f 1d       	adc	r25, r15
    6e94:	a0 1f       	adc	r26, r16
    6e96:	b1 1f       	adc	r27, r17
    6e98:	8a 83       	std	Y+2, r24	; 0x02
    6e9a:	9b 83       	std	Y+3, r25	; 0x03
    6e9c:	ac 83       	std	Y+4, r26	; 0x04
    6e9e:	bd 83       	std	Y+5, r27	; 0x05
    6ea0:	8c a1       	ldd	r24, Y+36	; 0x24
    6ea2:	9d a1       	ldd	r25, Y+37	; 0x25
    6ea4:	89 2b       	or	r24, r25
    6ea6:	51 f0       	breq	.+20     	; 0x6ebc <ds3231_get_epoch+0x394>
    6ea8:	8e 81       	ldd	r24, Y+6	; 0x06
    6eaa:	88 23       	and	r24, r24
    6eac:	11 f0       	breq	.+4      	; 0x6eb2 <ds3231_get_epoch+0x38a>
    6eae:	2c ef       	ldi	r18, 0xFC	; 252
    6eb0:	01 c0       	rjmp	.+2      	; 0x6eb4 <ds3231_get_epoch+0x38c>
    6eb2:	20 e0       	ldi	r18, 0x00	; 0
    6eb4:	8c a1       	ldd	r24, Y+36	; 0x24
    6eb6:	9d a1       	ldd	r25, Y+37	; 0x25
    6eb8:	fc 01       	movw	r30, r24
    6eba:	20 83       	st	Z, r18
    6ebc:	8a 81       	ldd	r24, Y+2	; 0x02
    6ebe:	9b 81       	ldd	r25, Y+3	; 0x03
    6ec0:	ac 81       	ldd	r26, Y+4	; 0x04
    6ec2:	bd 81       	ldd	r27, Y+5	; 0x05
    6ec4:	bc 01       	movw	r22, r24
    6ec6:	cd 01       	movw	r24, r26
    6ec8:	a5 96       	adiw	r28, 0x25	; 37
    6eca:	cd bf       	out	0x3d, r28	; 61
    6ecc:	de bf       	out	0x3e, r29	; 62
    6ece:	df 91       	pop	r29
    6ed0:	cf 91       	pop	r28
    6ed2:	1f 91       	pop	r17
    6ed4:	0f 91       	pop	r16
    6ed6:	ff 90       	pop	r15
    6ed8:	ef 90       	pop	r14
    6eda:	08 95       	ret

00006edc <ds3231_set_date_time>:
    6edc:	cf 93       	push	r28
    6ede:	df 93       	push	r29
    6ee0:	cd b7       	in	r28, 0x3d	; 61
    6ee2:	de b7       	in	r29, 0x3e	; 62
    6ee4:	63 97       	sbiw	r28, 0x13	; 19
    6ee6:	cd bf       	out	0x3d, r28	; 61
    6ee8:	de bf       	out	0x3e, r29	; 62
    6eea:	89 8b       	std	Y+17, r24	; 0x11
    6eec:	9a 8b       	std	Y+18, r25	; 0x12
    6eee:	6b 8b       	std	Y+19, r22	; 0x13
    6ef0:	8a e0       	ldi	r24, 0x0A	; 10
    6ef2:	89 83       	std	Y+1, r24	; 0x01
    6ef4:	1a 86       	std	Y+10, r1	; 0x0a
    6ef6:	1b 86       	std	Y+11, r1	; 0x0b
    6ef8:	1c 86       	std	Y+12, r1	; 0x0c
    6efa:	81 e0       	ldi	r24, 0x01	; 1
    6efc:	8d 87       	std	Y+13, r24	; 0x0d
    6efe:	1e 86       	std	Y+14, r1	; 0x0e
    6f00:	1f 86       	std	Y+15, r1	; 0x0f
    6f02:	18 8a       	std	Y+16, r1	; 0x10
    6f04:	80 ed       	ldi	r24, 0xD0	; 208
    6f06:	97 e0       	ldi	r25, 0x07	; 7
    6f08:	8a 83       	std	Y+2, r24	; 0x02
    6f0a:	9b 83       	std	Y+3, r25	; 0x03
    6f0c:	89 89       	ldd	r24, Y+17	; 0x11
    6f0e:	9a 89       	ldd	r25, Y+18	; 0x12
    6f10:	42 96       	adiw	r24, 0x12	; 18
    6f12:	fc 01       	movw	r30, r24
    6f14:	80 81       	ld	r24, Z
    6f16:	80 53       	subi	r24, 0x30	; 48
    6f18:	8a 87       	std	Y+10, r24	; 0x0a
    6f1a:	8a 85       	ldd	r24, Y+10	; 0x0a
    6f1c:	28 2f       	mov	r18, r24
    6f1e:	89 89       	ldd	r24, Y+17	; 0x11
    6f20:	9a 89       	ldd	r25, Y+18	; 0x12
    6f22:	41 96       	adiw	r24, 0x11	; 17
    6f24:	fc 01       	movw	r30, r24
    6f26:	80 81       	ld	r24, Z
    6f28:	88 2f       	mov	r24, r24
    6f2a:	90 e0       	ldi	r25, 0x00	; 0
    6f2c:	c0 97       	sbiw	r24, 0x30	; 48
    6f2e:	82 95       	swap	r24
    6f30:	92 95       	swap	r25
    6f32:	90 7f       	andi	r25, 0xF0	; 240
    6f34:	98 27       	eor	r25, r24
    6f36:	80 7f       	andi	r24, 0xF0	; 240
    6f38:	98 27       	eor	r25, r24
    6f3a:	82 2b       	or	r24, r18
    6f3c:	8a 87       	std	Y+10, r24	; 0x0a
    6f3e:	89 89       	ldd	r24, Y+17	; 0x11
    6f40:	9a 89       	ldd	r25, Y+18	; 0x12
    6f42:	0f 96       	adiw	r24, 0x0f	; 15
    6f44:	fc 01       	movw	r30, r24
    6f46:	80 81       	ld	r24, Z
    6f48:	80 53       	subi	r24, 0x30	; 48
    6f4a:	8b 87       	std	Y+11, r24	; 0x0b
    6f4c:	8b 85       	ldd	r24, Y+11	; 0x0b
    6f4e:	28 2f       	mov	r18, r24
    6f50:	89 89       	ldd	r24, Y+17	; 0x11
    6f52:	9a 89       	ldd	r25, Y+18	; 0x12
    6f54:	0e 96       	adiw	r24, 0x0e	; 14
    6f56:	fc 01       	movw	r30, r24
    6f58:	80 81       	ld	r24, Z
    6f5a:	88 2f       	mov	r24, r24
    6f5c:	90 e0       	ldi	r25, 0x00	; 0
    6f5e:	c0 97       	sbiw	r24, 0x30	; 48
    6f60:	82 95       	swap	r24
    6f62:	92 95       	swap	r25
    6f64:	90 7f       	andi	r25, 0xF0	; 240
    6f66:	98 27       	eor	r25, r24
    6f68:	80 7f       	andi	r24, 0xF0	; 240
    6f6a:	98 27       	eor	r25, r24
    6f6c:	82 2b       	or	r24, r18
    6f6e:	8b 87       	std	Y+11, r24	; 0x0b
    6f70:	89 89       	ldd	r24, Y+17	; 0x11
    6f72:	9a 89       	ldd	r25, Y+18	; 0x12
    6f74:	0c 96       	adiw	r24, 0x0c	; 12
    6f76:	fc 01       	movw	r30, r24
    6f78:	80 81       	ld	r24, Z
    6f7a:	80 53       	subi	r24, 0x30	; 48
    6f7c:	8c 87       	std	Y+12, r24	; 0x0c
    6f7e:	8c 85       	ldd	r24, Y+12	; 0x0c
    6f80:	28 2f       	mov	r18, r24
    6f82:	89 89       	ldd	r24, Y+17	; 0x11
    6f84:	9a 89       	ldd	r25, Y+18	; 0x12
    6f86:	0b 96       	adiw	r24, 0x0b	; 11
    6f88:	fc 01       	movw	r30, r24
    6f8a:	80 81       	ld	r24, Z
    6f8c:	88 2f       	mov	r24, r24
    6f8e:	90 e0       	ldi	r25, 0x00	; 0
    6f90:	c0 97       	sbiw	r24, 0x30	; 48
    6f92:	82 95       	swap	r24
    6f94:	92 95       	swap	r25
    6f96:	90 7f       	andi	r25, 0xF0	; 240
    6f98:	98 27       	eor	r25, r24
    6f9a:	80 7f       	andi	r24, 0xF0	; 240
    6f9c:	98 27       	eor	r25, r24
    6f9e:	82 2b       	or	r24, r18
    6fa0:	8c 87       	std	Y+12, r24	; 0x0c
    6fa2:	89 89       	ldd	r24, Y+17	; 0x11
    6fa4:	9a 89       	ldd	r25, Y+18	; 0x12
    6fa6:	09 96       	adiw	r24, 0x09	; 9
    6fa8:	fc 01       	movw	r30, r24
    6faa:	80 81       	ld	r24, Z
    6fac:	80 53       	subi	r24, 0x30	; 48
    6fae:	8e 87       	std	Y+14, r24	; 0x0e
    6fb0:	8f 85       	ldd	r24, Y+15	; 0x0f
    6fb2:	88 2f       	mov	r24, r24
    6fb4:	90 e0       	ldi	r25, 0x00	; 0
    6fb6:	8c 83       	std	Y+4, r24	; 0x04
    6fb8:	9d 83       	std	Y+5, r25	; 0x05
    6fba:	89 89       	ldd	r24, Y+17	; 0x11
    6fbc:	9a 89       	ldd	r25, Y+18	; 0x12
    6fbe:	08 96       	adiw	r24, 0x08	; 8
    6fc0:	fc 01       	movw	r30, r24
    6fc2:	80 81       	ld	r24, Z
    6fc4:	88 2f       	mov	r24, r24
    6fc6:	90 e0       	ldi	r25, 0x00	; 0
    6fc8:	c0 97       	sbiw	r24, 0x30	; 48
    6fca:	8e 83       	std	Y+6, r24	; 0x06
    6fcc:	9f 83       	std	Y+7, r25	; 0x07
    6fce:	8e 81       	ldd	r24, Y+6	; 0x06
    6fd0:	9f 81       	ldd	r25, Y+7	; 0x07
    6fd2:	88 0f       	add	r24, r24
    6fd4:	99 1f       	adc	r25, r25
    6fd6:	9c 01       	movw	r18, r24
    6fd8:	22 0f       	add	r18, r18
    6fda:	33 1f       	adc	r19, r19
    6fdc:	22 0f       	add	r18, r18
    6fde:	33 1f       	adc	r19, r19
    6fe0:	82 0f       	add	r24, r18
    6fe2:	93 1f       	adc	r25, r19
    6fe4:	2c 81       	ldd	r18, Y+4	; 0x04
    6fe6:	3d 81       	ldd	r19, Y+5	; 0x05
    6fe8:	82 0f       	add	r24, r18
    6fea:	93 1f       	adc	r25, r19
    6fec:	8c 83       	std	Y+4, r24	; 0x04
    6fee:	9d 83       	std	Y+5, r25	; 0x05
    6ff0:	8e 85       	ldd	r24, Y+14	; 0x0e
    6ff2:	28 2f       	mov	r18, r24
    6ff4:	8e 81       	ldd	r24, Y+6	; 0x06
    6ff6:	9f 81       	ldd	r25, Y+7	; 0x07
    6ff8:	82 95       	swap	r24
    6ffa:	92 95       	swap	r25
    6ffc:	90 7f       	andi	r25, 0xF0	; 240
    6ffe:	98 27       	eor	r25, r24
    7000:	80 7f       	andi	r24, 0xF0	; 240
    7002:	98 27       	eor	r25, r24
    7004:	82 2b       	or	r24, r18
    7006:	8e 87       	std	Y+14, r24	; 0x0e
    7008:	89 89       	ldd	r24, Y+17	; 0x11
    700a:	9a 89       	ldd	r25, Y+18	; 0x12
    700c:	06 96       	adiw	r24, 0x06	; 6
    700e:	fc 01       	movw	r30, r24
    7010:	80 81       	ld	r24, Z
    7012:	80 53       	subi	r24, 0x30	; 48
    7014:	8f 87       	std	Y+15, r24	; 0x0f
    7016:	88 89       	ldd	r24, Y+16	; 0x10
    7018:	88 2f       	mov	r24, r24
    701a:	90 e0       	ldi	r25, 0x00	; 0
    701c:	88 87       	std	Y+8, r24	; 0x08
    701e:	99 87       	std	Y+9, r25	; 0x09
    7020:	89 89       	ldd	r24, Y+17	; 0x11
    7022:	9a 89       	ldd	r25, Y+18	; 0x12
    7024:	05 96       	adiw	r24, 0x05	; 5
    7026:	fc 01       	movw	r30, r24
    7028:	80 81       	ld	r24, Z
    702a:	88 2f       	mov	r24, r24
    702c:	90 e0       	ldi	r25, 0x00	; 0
    702e:	c0 97       	sbiw	r24, 0x30	; 48
    7030:	8e 83       	std	Y+6, r24	; 0x06
    7032:	9f 83       	std	Y+7, r25	; 0x07
    7034:	8e 81       	ldd	r24, Y+6	; 0x06
    7036:	9f 81       	ldd	r25, Y+7	; 0x07
    7038:	88 0f       	add	r24, r24
    703a:	99 1f       	adc	r25, r25
    703c:	9c 01       	movw	r18, r24
    703e:	22 0f       	add	r18, r18
    7040:	33 1f       	adc	r19, r19
    7042:	22 0f       	add	r18, r18
    7044:	33 1f       	adc	r19, r19
    7046:	82 0f       	add	r24, r18
    7048:	93 1f       	adc	r25, r19
    704a:	28 85       	ldd	r18, Y+8	; 0x08
    704c:	39 85       	ldd	r19, Y+9	; 0x09
    704e:	82 0f       	add	r24, r18
    7050:	93 1f       	adc	r25, r19
    7052:	88 87       	std	Y+8, r24	; 0x08
    7054:	99 87       	std	Y+9, r25	; 0x09
    7056:	8f 85       	ldd	r24, Y+15	; 0x0f
    7058:	28 2f       	mov	r18, r24
    705a:	8e 81       	ldd	r24, Y+6	; 0x06
    705c:	9f 81       	ldd	r25, Y+7	; 0x07
    705e:	82 95       	swap	r24
    7060:	92 95       	swap	r25
    7062:	90 7f       	andi	r25, 0xF0	; 240
    7064:	98 27       	eor	r25, r24
    7066:	80 7f       	andi	r24, 0xF0	; 240
    7068:	98 27       	eor	r25, r24
    706a:	82 2b       	or	r24, r18
    706c:	8f 87       	std	Y+15, r24	; 0x0f
    706e:	89 89       	ldd	r24, Y+17	; 0x11
    7070:	9a 89       	ldd	r25, Y+18	; 0x12
    7072:	03 96       	adiw	r24, 0x03	; 3
    7074:	fc 01       	movw	r30, r24
    7076:	80 81       	ld	r24, Z
    7078:	80 53       	subi	r24, 0x30	; 48
    707a:	88 8b       	std	Y+16, r24	; 0x10
    707c:	89 89       	ldd	r24, Y+17	; 0x11
    707e:	88 2f       	mov	r24, r24
    7080:	90 e0       	ldi	r25, 0x00	; 0
    7082:	2a 81       	ldd	r18, Y+2	; 0x02
    7084:	3b 81       	ldd	r19, Y+3	; 0x03
    7086:	82 0f       	add	r24, r18
    7088:	93 1f       	adc	r25, r19
    708a:	8a 83       	std	Y+2, r24	; 0x02
    708c:	9b 83       	std	Y+3, r25	; 0x03
    708e:	89 89       	ldd	r24, Y+17	; 0x11
    7090:	9a 89       	ldd	r25, Y+18	; 0x12
    7092:	02 96       	adiw	r24, 0x02	; 2
    7094:	fc 01       	movw	r30, r24
    7096:	80 81       	ld	r24, Z
    7098:	88 2f       	mov	r24, r24
    709a:	90 e0       	ldi	r25, 0x00	; 0
    709c:	c0 97       	sbiw	r24, 0x30	; 48
    709e:	8e 83       	std	Y+6, r24	; 0x06
    70a0:	9f 83       	std	Y+7, r25	; 0x07
    70a2:	8e 81       	ldd	r24, Y+6	; 0x06
    70a4:	9f 81       	ldd	r25, Y+7	; 0x07
    70a6:	88 0f       	add	r24, r24
    70a8:	99 1f       	adc	r25, r25
    70aa:	9c 01       	movw	r18, r24
    70ac:	22 0f       	add	r18, r18
    70ae:	33 1f       	adc	r19, r19
    70b0:	22 0f       	add	r18, r18
    70b2:	33 1f       	adc	r19, r19
    70b4:	82 0f       	add	r24, r18
    70b6:	93 1f       	adc	r25, r19
    70b8:	2a 81       	ldd	r18, Y+2	; 0x02
    70ba:	3b 81       	ldd	r19, Y+3	; 0x03
    70bc:	82 0f       	add	r24, r18
    70be:	93 1f       	adc	r25, r19
    70c0:	8a 83       	std	Y+2, r24	; 0x02
    70c2:	9b 83       	std	Y+3, r25	; 0x03
    70c4:	88 89       	ldd	r24, Y+16	; 0x10
    70c6:	28 2f       	mov	r18, r24
    70c8:	8e 81       	ldd	r24, Y+6	; 0x06
    70ca:	9f 81       	ldd	r25, Y+7	; 0x07
    70cc:	82 95       	swap	r24
    70ce:	92 95       	swap	r25
    70d0:	90 7f       	andi	r25, 0xF0	; 240
    70d2:	98 27       	eor	r25, r24
    70d4:	80 7f       	andi	r24, 0xF0	; 240
    70d6:	98 27       	eor	r25, r24
    70d8:	82 2b       	or	r24, r18
    70da:	88 8b       	std	Y+16, r24	; 0x10
    70dc:	89 81       	ldd	r24, Y+1	; 0x01
    70de:	9f ef       	ldi	r25, 0xFF	; 255
    70e0:	98 0f       	add	r25, r24
    70e2:	99 83       	std	Y+1, r25	; 0x01
    70e4:	88 23       	and	r24, r24
    70e6:	99 f0       	breq	.+38     	; 0x710e <ds3231_set_date_time+0x232>
    70e8:	9b 89       	ldd	r25, Y+19	; 0x13
    70ea:	89 2f       	mov	r24, r25
    70ec:	88 0f       	add	r24, r24
    70ee:	88 0f       	add	r24, r24
    70f0:	88 0f       	add	r24, r24
    70f2:	38 2f       	mov	r19, r24
    70f4:	39 1b       	sub	r19, r25
    70f6:	ce 01       	movw	r24, r28
    70f8:	0a 96       	adiw	r24, 0x0a	; 10
    70fa:	27 e0       	ldi	r18, 0x07	; 7
    70fc:	ac 01       	movw	r20, r24
    70fe:	63 2f       	mov	r22, r19
    7100:	80 ed       	ldi	r24, 0xD0	; 208
    7102:	0e 94 a6 49 	call	0x934c	; 0x934c <I2C_0_SendData>
    7106:	87 30       	cpi	r24, 0x07	; 7
    7108:	11 f0       	breq	.+4      	; 0x710e <ds3231_set_date_time+0x232>
    710a:	81 e0       	ldi	r24, 0x01	; 1
    710c:	01 c0       	rjmp	.+2      	; 0x7110 <ds3231_set_date_time+0x234>
    710e:	80 e0       	ldi	r24, 0x00	; 0
    7110:	88 23       	and	r24, r24
    7112:	09 f0       	breq	.+2      	; 0x7116 <ds3231_set_date_time+0x23a>
    7114:	e3 cf       	rjmp	.-58     	; 0x70dc <ds3231_set_date_time+0x200>
    7116:	00 00       	nop
    7118:	63 96       	adiw	r28, 0x13	; 19
    711a:	cd bf       	out	0x3d, r28	; 61
    711c:	de bf       	out	0x3e, r29	; 62
    711e:	df 91       	pop	r29
    7120:	cf 91       	pop	r28
    7122:	08 95       	ret

00007124 <ds3231_1s_sqw>:
#endif // DATE_STRING_SUPPORT_ENABLED
	
	bool ds3231_1s_sqw(bool enable)
	{
    7124:	cf 93       	push	r28
    7126:	df 93       	push	r29
    7128:	00 d0       	rcall	.+0      	; 0x712a <ds3231_1s_sqw+0x6>
    712a:	00 d0       	rcall	.+0      	; 0x712c <ds3231_1s_sqw+0x8>
    712c:	cd b7       	in	r28, 0x3d	; 61
    712e:	de b7       	in	r29, 0x3e	; 62
    7130:	8c 83       	std	Y+4, r24	; 0x04
		uint8_t tries = 10; /* try several times in case of transient bus issues */
    7132:	8a e0       	ldi	r24, 0x0A	; 10
    7134:	89 83       	std	Y+1, r24	; 0x01
		bool failure;
		uint8_t data[1];
		
		data[0] = enable ? 0x00:0x04;	
    7136:	8c 81       	ldd	r24, Y+4	; 0x04
    7138:	88 23       	and	r24, r24
    713a:	11 f0       	breq	.+4      	; 0x7140 <ds3231_1s_sqw+0x1c>
    713c:	80 e0       	ldi	r24, 0x00	; 0
    713e:	01 c0       	rjmp	.+2      	; 0x7142 <ds3231_1s_sqw+0x1e>
    7140:	84 e0       	ldi	r24, 0x04	; 4
    7142:	8b 83       	std	Y+3, r24	; 0x03
		while(tries-- && (failure = (I2C_0_SendData(DS3231_I2C_SLAVE_ADDR, RTC_CONTROL, data, 1) != 1)));
    7144:	89 81       	ldd	r24, Y+1	; 0x01
    7146:	9f ef       	ldi	r25, 0xFF	; 255
    7148:	98 0f       	add	r25, r24
    714a:	99 83       	std	Y+1, r25	; 0x01
    714c:	88 23       	and	r24, r24
    714e:	99 f0       	breq	.+38     	; 0x7176 <ds3231_1s_sqw+0x52>
    7150:	ce 01       	movw	r24, r28
    7152:	03 96       	adiw	r24, 0x03	; 3
    7154:	21 e0       	ldi	r18, 0x01	; 1
    7156:	ac 01       	movw	r20, r24
    7158:	6e e0       	ldi	r22, 0x0E	; 14
    715a:	80 ed       	ldi	r24, 0xD0	; 208
    715c:	0e 94 a6 49 	call	0x934c	; 0x934c <I2C_0_SendData>
    7160:	98 2f       	mov	r25, r24
    7162:	81 e0       	ldi	r24, 0x01	; 1
    7164:	91 30       	cpi	r25, 0x01	; 1
    7166:	09 f4       	brne	.+2      	; 0x716a <ds3231_1s_sqw+0x46>
    7168:	80 e0       	ldi	r24, 0x00	; 0
    716a:	8a 83       	std	Y+2, r24	; 0x02
    716c:	8a 81       	ldd	r24, Y+2	; 0x02
    716e:	88 23       	and	r24, r24
    7170:	11 f0       	breq	.+4      	; 0x7176 <ds3231_1s_sqw+0x52>
    7172:	81 e0       	ldi	r24, 0x01	; 1
    7174:	01 c0       	rjmp	.+2      	; 0x7178 <ds3231_1s_sqw+0x54>
    7176:	80 e0       	ldi	r24, 0x00	; 0
    7178:	88 23       	and	r24, r24
    717a:	09 f0       	breq	.+2      	; 0x717e <ds3231_1s_sqw+0x5a>
    717c:	e3 cf       	rjmp	.-58     	; 0x7144 <ds3231_1s_sqw+0x20>
		
		return(failure);
    717e:	8a 81       	ldd	r24, Y+2	; 0x02
	}
    7180:	24 96       	adiw	r28, 0x04	; 4
    7182:	cd bf       	out	0x3d, r28	; 61
    7184:	de bf       	out	0x3e, r29	; 62
    7186:	df 91       	pop	r29
    7188:	cf 91       	pop	r28
    718a:	08 95       	ret

0000718c <ds3231_set_aging>:


	bool ds3231_set_aging(int8_t data_in)
	{
    718c:	cf 93       	push	r28
    718e:	df 93       	push	r29
    7190:	00 d0       	rcall	.+0      	; 0x7192 <ds3231_set_aging+0x6>
    7192:	00 d0       	rcall	.+0      	; 0x7194 <ds3231_set_aging+0x8>
    7194:	cd b7       	in	r28, 0x3d	; 61
    7196:	de b7       	in	r29, 0x3e	; 62
    7198:	8c 83       	std	Y+4, r24	; 0x04
		uint8_t tries = 10; /* try several times in case of transient bus issues */
    719a:	8a e0       	ldi	r24, 0x0A	; 10
    719c:	89 83       	std	Y+1, r24	; 0x01
		bool failure;
		int8_t data[1];
		
		data[0] = data_in;
    719e:	8c 81       	ldd	r24, Y+4	; 0x04
    71a0:	8b 83       	std	Y+3, r24	; 0x03
		while(tries-- && (failure = (I2C_0_SendData(DS3231_I2C_SLAVE_ADDR, RTC_AGING, (uint8_t *)data, 1) != 1)));
    71a2:	89 81       	ldd	r24, Y+1	; 0x01
    71a4:	9f ef       	ldi	r25, 0xFF	; 255
    71a6:	98 0f       	add	r25, r24
    71a8:	99 83       	std	Y+1, r25	; 0x01
    71aa:	88 23       	and	r24, r24
    71ac:	99 f0       	breq	.+38     	; 0x71d4 <ds3231_set_aging+0x48>
    71ae:	ce 01       	movw	r24, r28
    71b0:	03 96       	adiw	r24, 0x03	; 3
    71b2:	21 e0       	ldi	r18, 0x01	; 1
    71b4:	ac 01       	movw	r20, r24
    71b6:	60 e1       	ldi	r22, 0x10	; 16
    71b8:	80 ed       	ldi	r24, 0xD0	; 208
    71ba:	0e 94 a6 49 	call	0x934c	; 0x934c <I2C_0_SendData>
    71be:	98 2f       	mov	r25, r24
    71c0:	81 e0       	ldi	r24, 0x01	; 1
    71c2:	91 30       	cpi	r25, 0x01	; 1
    71c4:	09 f4       	brne	.+2      	; 0x71c8 <ds3231_set_aging+0x3c>
    71c6:	80 e0       	ldi	r24, 0x00	; 0
    71c8:	8a 83       	std	Y+2, r24	; 0x02
    71ca:	8a 81       	ldd	r24, Y+2	; 0x02
    71cc:	88 23       	and	r24, r24
    71ce:	11 f0       	breq	.+4      	; 0x71d4 <ds3231_set_aging+0x48>
    71d0:	81 e0       	ldi	r24, 0x01	; 1
    71d2:	01 c0       	rjmp	.+2      	; 0x71d6 <ds3231_set_aging+0x4a>
    71d4:	80 e0       	ldi	r24, 0x00	; 0
    71d6:	88 23       	and	r24, r24
    71d8:	09 f0       	breq	.+2      	; 0x71dc <ds3231_set_aging+0x50>
    71da:	e3 cf       	rjmp	.-58     	; 0x71a2 <ds3231_set_aging+0x16>
		return(failure);
    71dc:	8a 81       	ldd	r24, Y+2	; 0x02
	}
    71de:	24 96       	adiw	r28, 0x04	; 4
    71e0:	cd bf       	out	0x3d, r28	; 61
    71e2:	de bf       	out	0x3e, r29	; 62
    71e4:	df 91       	pop	r29
    71e6:	cf 91       	pop	r28
    71e8:	08 95       	ret

000071ea <ds3231_get_aging>:


	int8_t ds3231_get_aging()
	{
    71ea:	cf 93       	push	r28
    71ec:	df 93       	push	r29
    71ee:	00 d0       	rcall	.+0      	; 0x71f0 <ds3231_get_aging+0x6>
    71f0:	1f 92       	push	r1
    71f2:	cd b7       	in	r28, 0x3d	; 61
    71f4:	de b7       	in	r29, 0x3e	; 62
		uint8_t tries = 10; /* try several times in case of transient bus issues */
    71f6:	8a e0       	ldi	r24, 0x0A	; 10
    71f8:	89 83       	std	Y+1, r24	; 0x01
		bool failure;
		int8_t data[1];
		
		while(tries-- && (failure = (I2C_0_GetData(DS3231_I2C_SLAVE_ADDR, RTC_AGING, (uint8_t *)data, 1) != 1)));
    71fa:	89 81       	ldd	r24, Y+1	; 0x01
    71fc:	9f ef       	ldi	r25, 0xFF	; 255
    71fe:	98 0f       	add	r25, r24
    7200:	99 83       	std	Y+1, r25	; 0x01
    7202:	88 23       	and	r24, r24
    7204:	99 f0       	breq	.+38     	; 0x722c <ds3231_get_aging+0x42>
    7206:	ce 01       	movw	r24, r28
    7208:	03 96       	adiw	r24, 0x03	; 3
    720a:	21 e0       	ldi	r18, 0x01	; 1
    720c:	ac 01       	movw	r20, r24
    720e:	60 e1       	ldi	r22, 0x10	; 16
    7210:	80 ed       	ldi	r24, 0xD0	; 208
    7212:	0e 94 0e 4a 	call	0x941c	; 0x941c <I2C_0_GetData>
    7216:	98 2f       	mov	r25, r24
    7218:	81 e0       	ldi	r24, 0x01	; 1
    721a:	91 30       	cpi	r25, 0x01	; 1
    721c:	09 f4       	brne	.+2      	; 0x7220 <ds3231_get_aging+0x36>
    721e:	80 e0       	ldi	r24, 0x00	; 0
    7220:	8a 83       	std	Y+2, r24	; 0x02
    7222:	8a 81       	ldd	r24, Y+2	; 0x02
    7224:	88 23       	and	r24, r24
    7226:	11 f0       	breq	.+4      	; 0x722c <ds3231_get_aging+0x42>
    7228:	81 e0       	ldi	r24, 0x01	; 1
    722a:	01 c0       	rjmp	.+2      	; 0x722e <ds3231_get_aging+0x44>
    722c:	80 e0       	ldi	r24, 0x00	; 0
    722e:	88 23       	and	r24, r24
    7230:	09 f0       	breq	.+2      	; 0x7234 <ds3231_get_aging+0x4a>
    7232:	e3 cf       	rjmp	.-58     	; 0x71fa <ds3231_get_aging+0x10>
		return(data[0]);
    7234:	8b 81       	ldd	r24, Y+3	; 0x03
	}
    7236:	23 96       	adiw	r28, 0x03	; 3
    7238:	cd bf       	out	0x3d, r28	; 61
    723a:	de bf       	out	0x3e, r29	; 62
    723c:	df 91       	pop	r29
    723e:	cf 91       	pop	r28
    7240:	08 95       	ret

00007242 <ds3231_responding>:

	bool ds3231_responding()
	{
    7242:	cf 93       	push	r28
    7244:	df 93       	push	r29
    7246:	00 d0       	rcall	.+0      	; 0x7248 <ds3231_responding+0x6>
    7248:	1f 92       	push	r1
    724a:	cd b7       	in	r28, 0x3d	; 61
    724c:	de b7       	in	r29, 0x3e	; 62
		bool responseReceived = false;
    724e:	19 82       	std	Y+1, r1	; 0x01
		uint8_t tries = 100;
    7250:	84 e6       	ldi	r24, 0x64	; 100
    7252:	8a 83       	std	Y+2, r24	; 0x02
		int8_t data[1];		
		while(tries-- && !(responseReceived = (I2C_0_GetData(DS3231_I2C_SLAVE_ADDR, RTC_AGING, (uint8_t *)data, 1) == 1)));
    7254:	8a 81       	ldd	r24, Y+2	; 0x02
    7256:	9f ef       	ldi	r25, 0xFF	; 255
    7258:	98 0f       	add	r25, r24
    725a:	9a 83       	std	Y+2, r25	; 0x02
    725c:	88 23       	and	r24, r24
    725e:	a9 f0       	breq	.+42     	; 0x728a <ds3231_responding+0x48>
    7260:	ce 01       	movw	r24, r28
    7262:	03 96       	adiw	r24, 0x03	; 3
    7264:	21 e0       	ldi	r18, 0x01	; 1
    7266:	ac 01       	movw	r20, r24
    7268:	60 e1       	ldi	r22, 0x10	; 16
    726a:	80 ed       	ldi	r24, 0xD0	; 208
    726c:	0e 94 0e 4a 	call	0x941c	; 0x941c <I2C_0_GetData>
    7270:	98 2f       	mov	r25, r24
    7272:	81 e0       	ldi	r24, 0x01	; 1
    7274:	91 30       	cpi	r25, 0x01	; 1
    7276:	09 f0       	breq	.+2      	; 0x727a <ds3231_responding+0x38>
    7278:	80 e0       	ldi	r24, 0x00	; 0
    727a:	89 83       	std	Y+1, r24	; 0x01
    727c:	99 81       	ldd	r25, Y+1	; 0x01
    727e:	81 e0       	ldi	r24, 0x01	; 1
    7280:	89 27       	eor	r24, r25
    7282:	88 23       	and	r24, r24
    7284:	11 f0       	breq	.+4      	; 0x728a <ds3231_responding+0x48>
    7286:	81 e0       	ldi	r24, 0x01	; 1
    7288:	01 c0       	rjmp	.+2      	; 0x728c <ds3231_responding+0x4a>
    728a:	80 e0       	ldi	r24, 0x00	; 0
    728c:	88 23       	and	r24, r24
    728e:	09 f0       	breq	.+2      	; 0x7292 <ds3231_responding+0x50>
    7290:	e1 cf       	rjmp	.-62     	; 0x7254 <ds3231_responding+0x12>
		return(responseReceived);
    7292:	89 81       	ldd	r24, Y+1	; 0x01
	}
    7294:	23 96       	adiw	r28, 0x03	; 3
    7296:	cd bf       	out	0x3d, r28	; 61
    7298:	de bf       	out	0x3e, r29	; 62
    729a:	df 91       	pop	r29
    729c:	cf 91       	pop	r28
    729e:	08 95       	ret

000072a0 <_ZN13EepromManagerC1Ev>:
uint16_t g_clock_calibration = EEPROM_CLOCK_CALIBRATION_DEFAULT;

extern char g_tempStr[];

/* default constructor */
EepromManager::EepromManager()
    72a0:	cf 93       	push	r28
    72a2:	df 93       	push	r29
    72a4:	00 d0       	rcall	.+0      	; 0x72a6 <_ZN13EepromManagerC1Ev+0x6>
    72a6:	cd b7       	in	r28, 0x3d	; 61
    72a8:	de b7       	in	r29, 0x3e	; 62
    72aa:	89 83       	std	Y+1, r24	; 0x01
    72ac:	9a 83       	std	Y+2, r25	; 0x02
{
}   /*EepromManager */
    72ae:	00 00       	nop
    72b0:	0f 90       	pop	r0
    72b2:	0f 90       	pop	r0
    72b4:	df 91       	pop	r29
    72b6:	cf 91       	pop	r28
    72b8:	08 95       	ret

000072ba <_ZN13EepromManagerD1Ev>:

/* default destructor */
EepromManager::~EepromManager()
    72ba:	cf 93       	push	r28
    72bc:	df 93       	push	r29
    72be:	00 d0       	rcall	.+0      	; 0x72c0 <_ZN13EepromManagerD1Ev+0x6>
    72c0:	cd b7       	in	r28, 0x3d	; 61
    72c2:	de b7       	in	r29, 0x3e	; 62
    72c4:	89 83       	std	Y+1, r24	; 0x01
    72c6:	9a 83       	std	Y+2, r25	; 0x02
{
}   /*~EepromManager */
    72c8:	00 00       	nop
    72ca:	0f 90       	pop	r0
    72cc:	0f 90       	pop	r0
    72ce:	df 91       	pop	r29
    72d0:	cf 91       	pop	r28
    72d2:	08 95       	ret

000072d4 <_Z21avr_eeprom_write_bytejh>:
#include <avr/io.h>

typedef uint16_t eeprom_addr_t;

// to write
void avr_eeprom_write_byte(eeprom_addr_t index, uint8_t in) {
    72d4:	cf 93       	push	r28
    72d6:	df 93       	push	r29
    72d8:	00 d0       	rcall	.+0      	; 0x72da <_Z21avr_eeprom_write_bytejh+0x6>
    72da:	1f 92       	push	r1
    72dc:	cd b7       	in	r28, 0x3d	; 61
    72de:	de b7       	in	r29, 0x3e	; 62
    72e0:	89 83       	std	Y+1, r24	; 0x01
    72e2:	9a 83       	std	Y+2, r25	; 0x02
    72e4:	6b 83       	std	Y+3, r22	; 0x03
	while (NVMCTRL.STATUS & NVMCTRL_EEBUSY_bm);
    72e6:	80 e0       	ldi	r24, 0x00	; 0
    72e8:	90 e1       	ldi	r25, 0x10	; 16
    72ea:	fc 01       	movw	r30, r24
    72ec:	82 81       	ldd	r24, Z+2	; 0x02
    72ee:	88 2f       	mov	r24, r24
    72f0:	90 e0       	ldi	r25, 0x00	; 0
    72f2:	82 70       	andi	r24, 0x02	; 2
    72f4:	99 27       	eor	r25, r25
    72f6:	21 e0       	ldi	r18, 0x01	; 1
    72f8:	89 2b       	or	r24, r25
    72fa:	09 f4       	brne	.+2      	; 0x72fe <_Z21avr_eeprom_write_bytejh+0x2a>
    72fc:	20 e0       	ldi	r18, 0x00	; 0
    72fe:	22 23       	and	r18, r18
    7300:	09 f0       	breq	.+2      	; 0x7304 <_Z21avr_eeprom_write_bytejh+0x30>
    7302:	f1 cf       	rjmp	.-30     	; 0x72e6 <_Z21avr_eeprom_write_bytejh+0x12>
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_EEERWR_gc);
    7304:	8d e9       	ldi	r24, 0x9D	; 157
    7306:	93 e1       	ldi	r25, 0x13	; 19
    7308:	84 bf       	out	0x34, r24	; 52
    730a:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
	*(uint8_t*)(eeprom_addr_t)(MAPPED_EEPROM_START+index) = in;
    730e:	89 81       	ldd	r24, Y+1	; 0x01
    7310:	9a 81       	ldd	r25, Y+2	; 0x02
    7312:	9c 5e       	subi	r25, 0xEC	; 236
    7314:	2b 81       	ldd	r18, Y+3	; 0x03
    7316:	fc 01       	movw	r30, r24
    7318:	20 83       	st	Z, r18
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_NONE_gc);
    731a:	8d e9       	ldi	r24, 0x9D	; 157
    731c:	90 e0       	ldi	r25, 0x00	; 0
    731e:	84 bf       	out	0x34, r24	; 52
    7320:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
}
    7324:	00 00       	nop
    7326:	23 96       	adiw	r28, 0x03	; 3
    7328:	cd bf       	out	0x3d, r28	; 61
    732a:	de bf       	out	0x3e, r29	; 62
    732c:	df 91       	pop	r29
    732e:	cf 91       	pop	r28
    7330:	08 95       	ret

00007332 <_Z21avr_eeprom_write_wordjj>:

void avr_eeprom_write_word(eeprom_addr_t index, uint16_t in) {
    7332:	cf 93       	push	r28
    7334:	df 93       	push	r29
    7336:	00 d0       	rcall	.+0      	; 0x7338 <_Z21avr_eeprom_write_wordjj+0x6>
    7338:	00 d0       	rcall	.+0      	; 0x733a <_Z21avr_eeprom_write_wordjj+0x8>
    733a:	cd b7       	in	r28, 0x3d	; 61
    733c:	de b7       	in	r29, 0x3e	; 62
    733e:	89 83       	std	Y+1, r24	; 0x01
    7340:	9a 83       	std	Y+2, r25	; 0x02
    7342:	6b 83       	std	Y+3, r22	; 0x03
    7344:	7c 83       	std	Y+4, r23	; 0x04
	while (NVMCTRL.STATUS & NVMCTRL_EEBUSY_bm);
    7346:	80 e0       	ldi	r24, 0x00	; 0
    7348:	90 e1       	ldi	r25, 0x10	; 16
    734a:	fc 01       	movw	r30, r24
    734c:	82 81       	ldd	r24, Z+2	; 0x02
    734e:	88 2f       	mov	r24, r24
    7350:	90 e0       	ldi	r25, 0x00	; 0
    7352:	82 70       	andi	r24, 0x02	; 2
    7354:	99 27       	eor	r25, r25
    7356:	21 e0       	ldi	r18, 0x01	; 1
    7358:	89 2b       	or	r24, r25
    735a:	09 f4       	brne	.+2      	; 0x735e <_Z21avr_eeprom_write_wordjj+0x2c>
    735c:	20 e0       	ldi	r18, 0x00	; 0
    735e:	22 23       	and	r18, r18
    7360:	09 f0       	breq	.+2      	; 0x7364 <_Z21avr_eeprom_write_wordjj+0x32>
    7362:	f1 cf       	rjmp	.-30     	; 0x7346 <_Z21avr_eeprom_write_wordjj+0x14>
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_EEERWR_gc);
    7364:	8d e9       	ldi	r24, 0x9D	; 157
    7366:	93 e1       	ldi	r25, 0x13	; 19
    7368:	84 bf       	out	0x34, r24	; 52
    736a:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
	*(uint16_t*)(eeprom_addr_t)(MAPPED_EEPROM_START+index) = in;
    736e:	89 81       	ldd	r24, Y+1	; 0x01
    7370:	9a 81       	ldd	r25, Y+2	; 0x02
    7372:	9c 5e       	subi	r25, 0xEC	; 236
    7374:	9c 01       	movw	r18, r24
    7376:	8b 81       	ldd	r24, Y+3	; 0x03
    7378:	9c 81       	ldd	r25, Y+4	; 0x04
    737a:	f9 01       	movw	r30, r18
    737c:	80 83       	st	Z, r24
    737e:	91 83       	std	Z+1, r25	; 0x01
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_NONE_gc);
    7380:	8d e9       	ldi	r24, 0x9D	; 157
    7382:	90 e0       	ldi	r25, 0x00	; 0
    7384:	84 bf       	out	0x34, r24	; 52
    7386:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
}
    738a:	00 00       	nop
    738c:	24 96       	adiw	r28, 0x04	; 4
    738e:	cd bf       	out	0x3d, r28	; 61
    7390:	de bf       	out	0x3e, r29	; 62
    7392:	df 91       	pop	r29
    7394:	cf 91       	pop	r28
    7396:	08 95       	ret

00007398 <_Z22avr_eeprom_write_dwordjm>:

void avr_eeprom_write_dword(eeprom_addr_t index, uint32_t in) {
    7398:	cf 93       	push	r28
    739a:	df 93       	push	r29
    739c:	cd b7       	in	r28, 0x3d	; 61
    739e:	de b7       	in	r29, 0x3e	; 62
    73a0:	26 97       	sbiw	r28, 0x06	; 6
    73a2:	cd bf       	out	0x3d, r28	; 61
    73a4:	de bf       	out	0x3e, r29	; 62
    73a6:	89 83       	std	Y+1, r24	; 0x01
    73a8:	9a 83       	std	Y+2, r25	; 0x02
    73aa:	4b 83       	std	Y+3, r20	; 0x03
    73ac:	5c 83       	std	Y+4, r21	; 0x04
    73ae:	6d 83       	std	Y+5, r22	; 0x05
    73b0:	7e 83       	std	Y+6, r23	; 0x06
	while (NVMCTRL.STATUS & NVMCTRL_EEBUSY_bm);
    73b2:	80 e0       	ldi	r24, 0x00	; 0
    73b4:	90 e1       	ldi	r25, 0x10	; 16
    73b6:	fc 01       	movw	r30, r24
    73b8:	82 81       	ldd	r24, Z+2	; 0x02
    73ba:	88 2f       	mov	r24, r24
    73bc:	90 e0       	ldi	r25, 0x00	; 0
    73be:	82 70       	andi	r24, 0x02	; 2
    73c0:	99 27       	eor	r25, r25
    73c2:	21 e0       	ldi	r18, 0x01	; 1
    73c4:	89 2b       	or	r24, r25
    73c6:	09 f4       	brne	.+2      	; 0x73ca <_Z22avr_eeprom_write_dwordjm+0x32>
    73c8:	20 e0       	ldi	r18, 0x00	; 0
    73ca:	22 23       	and	r18, r18
    73cc:	09 f0       	breq	.+2      	; 0x73d0 <_Z22avr_eeprom_write_dwordjm+0x38>
    73ce:	f1 cf       	rjmp	.-30     	; 0x73b2 <_Z22avr_eeprom_write_dwordjm+0x1a>
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_EEERWR_gc);
    73d0:	8d e9       	ldi	r24, 0x9D	; 157
    73d2:	93 e1       	ldi	r25, 0x13	; 19
    73d4:	84 bf       	out	0x34, r24	; 52
    73d6:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
	*(uint32_t*)(eeprom_addr_t)(MAPPED_EEPROM_START+index) = in;
    73da:	89 81       	ldd	r24, Y+1	; 0x01
    73dc:	9a 81       	ldd	r25, Y+2	; 0x02
    73de:	9c 5e       	subi	r25, 0xEC	; 236
    73e0:	9c 01       	movw	r18, r24
    73e2:	8b 81       	ldd	r24, Y+3	; 0x03
    73e4:	9c 81       	ldd	r25, Y+4	; 0x04
    73e6:	ad 81       	ldd	r26, Y+5	; 0x05
    73e8:	be 81       	ldd	r27, Y+6	; 0x06
    73ea:	f9 01       	movw	r30, r18
    73ec:	80 83       	st	Z, r24
    73ee:	91 83       	std	Z+1, r25	; 0x01
    73f0:	a2 83       	std	Z+2, r26	; 0x02
    73f2:	b3 83       	std	Z+3, r27	; 0x03
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_NONE_gc);
    73f4:	8d e9       	ldi	r24, 0x9D	; 157
    73f6:	90 e0       	ldi	r25, 0x00	; 0
    73f8:	84 bf       	out	0x34, r24	; 52
    73fa:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
}
    73fe:	00 00       	nop
    7400:	26 96       	adiw	r28, 0x06	; 6
    7402:	cd bf       	out	0x3d, r28	; 61
    7404:	de bf       	out	0x3e, r29	; 62
    7406:	df 91       	pop	r29
    7408:	cf 91       	pop	r28
    740a:	08 95       	ret

0000740c <_Z22avr_eeprom_write_floatjf>:

void avr_eeprom_write_float(eeprom_addr_t index, float in) {
    740c:	cf 93       	push	r28
    740e:	df 93       	push	r29
    7410:	cd b7       	in	r28, 0x3d	; 61
    7412:	de b7       	in	r29, 0x3e	; 62
    7414:	26 97       	sbiw	r28, 0x06	; 6
    7416:	cd bf       	out	0x3d, r28	; 61
    7418:	de bf       	out	0x3e, r29	; 62
    741a:	89 83       	std	Y+1, r24	; 0x01
    741c:	9a 83       	std	Y+2, r25	; 0x02
    741e:	4b 83       	std	Y+3, r20	; 0x03
    7420:	5c 83       	std	Y+4, r21	; 0x04
    7422:	6d 83       	std	Y+5, r22	; 0x05
    7424:	7e 83       	std	Y+6, r23	; 0x06
	while (NVMCTRL.STATUS & NVMCTRL_EEBUSY_bm);
    7426:	80 e0       	ldi	r24, 0x00	; 0
    7428:	90 e1       	ldi	r25, 0x10	; 16
    742a:	fc 01       	movw	r30, r24
    742c:	82 81       	ldd	r24, Z+2	; 0x02
    742e:	88 2f       	mov	r24, r24
    7430:	90 e0       	ldi	r25, 0x00	; 0
    7432:	82 70       	andi	r24, 0x02	; 2
    7434:	99 27       	eor	r25, r25
    7436:	21 e0       	ldi	r18, 0x01	; 1
    7438:	89 2b       	or	r24, r25
    743a:	09 f4       	brne	.+2      	; 0x743e <_Z22avr_eeprom_write_floatjf+0x32>
    743c:	20 e0       	ldi	r18, 0x00	; 0
    743e:	22 23       	and	r18, r18
    7440:	09 f0       	breq	.+2      	; 0x7444 <_Z22avr_eeprom_write_floatjf+0x38>
    7442:	f1 cf       	rjmp	.-30     	; 0x7426 <_Z22avr_eeprom_write_floatjf+0x1a>
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_EEERWR_gc);
    7444:	8d e9       	ldi	r24, 0x9D	; 157
    7446:	93 e1       	ldi	r25, 0x13	; 19
    7448:	84 bf       	out	0x34, r24	; 52
    744a:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
	*(float*)(eeprom_addr_t)(MAPPED_EEPROM_START+index) = in;
    744e:	89 81       	ldd	r24, Y+1	; 0x01
    7450:	9a 81       	ldd	r25, Y+2	; 0x02
    7452:	9c 5e       	subi	r25, 0xEC	; 236
    7454:	9c 01       	movw	r18, r24
    7456:	8b 81       	ldd	r24, Y+3	; 0x03
    7458:	9c 81       	ldd	r25, Y+4	; 0x04
    745a:	ad 81       	ldd	r26, Y+5	; 0x05
    745c:	be 81       	ldd	r27, Y+6	; 0x06
    745e:	f9 01       	movw	r30, r18
    7460:	80 83       	st	Z, r24
    7462:	91 83       	std	Z+1, r25	; 0x01
    7464:	a2 83       	std	Z+2, r26	; 0x02
    7466:	b3 83       	std	Z+3, r27	; 0x03
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_NONE_gc);
    7468:	8d e9       	ldi	r24, 0x9D	; 157
    746a:	90 e0       	ldi	r25, 0x00	; 0
    746c:	84 bf       	out	0x34, r24	; 52
    746e:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
}
    7472:	00 00       	nop
    7474:	26 96       	adiw	r28, 0x06	; 6
    7476:	cd bf       	out	0x3d, r28	; 61
    7478:	de bf       	out	0x3e, r29	; 62
    747a:	df 91       	pop	r29
    747c:	cf 91       	pop	r28
    747e:	08 95       	ret

00007480 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>:

void EepromManager::updateEEPROMVar(EE_var_t v, void* val)
{
    7480:	cf 92       	push	r12
    7482:	df 92       	push	r13
    7484:	ef 92       	push	r14
    7486:	ff 92       	push	r15
    7488:	0f 93       	push	r16
    748a:	1f 93       	push	r17
    748c:	cf 93       	push	r28
    748e:	df 93       	push	r29
    7490:	cd b7       	in	r28, 0x3d	; 61
    7492:	de b7       	in	r29, 0x3e	; 62
    7494:	e6 97       	sbiw	r28, 0x36	; 54
    7496:	cd bf       	out	0x3d, r28	; 61
    7498:	de bf       	out	0x3e, r29	; 62
    749a:	89 ab       	std	Y+49, r24	; 0x31
    749c:	9a ab       	std	Y+50, r25	; 0x32
    749e:	6b ab       	std	Y+51, r22	; 0x33
    74a0:	7c ab       	std	Y+52, r23	; 0x34
    74a2:	4d ab       	std	Y+53, r20	; 0x35
    74a4:	5e ab       	std	Y+54, r21	; 0x36
	if(!val)
    74a6:	8d a9       	ldd	r24, Y+53	; 0x35
    74a8:	9e a9       	ldd	r25, Y+54	; 0x36
    74aa:	89 2b       	or	r24, r25
    74ac:	09 f4       	brne	.+2      	; 0x74b0 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x30>
    74ae:	f2 c3       	rjmp	.+2020   	; 0x7c94 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x814>
	{
		return;
	}

	switch(v)
    74b0:	8b a9       	ldd	r24, Y+51	; 0x33
    74b2:	9c a9       	ldd	r25, Y+52	; 0x34
    74b4:	09 2e       	mov	r0, r25
    74b6:	00 0c       	add	r0, r0
    74b8:	aa 0b       	sbc	r26, r26
    74ba:	bb 0b       	sbc	r27, r27
    74bc:	40 e0       	ldi	r20, 0x00	; 0
    74be:	50 e0       	ldi	r21, 0x00	; 0
    74c0:	21 e1       	ldi	r18, 0x11	; 17
    74c2:	31 e0       	ldi	r19, 0x01	; 1
    74c4:	84 1b       	sub	r24, r20
    74c6:	95 0b       	sbc	r25, r21
    74c8:	28 17       	cp	r18, r24
    74ca:	39 07       	cpc	r19, r25
    74cc:	08 f4       	brcc	.+2      	; 0x74d0 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x50>
    74ce:	e4 c3       	rjmp	.+1992   	; 0x7c98 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x818>
    74d0:	88 57       	subi	r24, 0x78	; 120
    74d2:	9f 4f       	sbci	r25, 0xFF	; 255
    74d4:	fc 01       	movw	r30, r24
    74d6:	0c 94 14 75 	jmp	0xea28	; 0xea28 <__tablejump2__>
	{
		case Frequency:
		{
			if(*(uint32_t*)val != eeprom_read_dword(&(EepromManager::ee_vars.frequency)))
    74da:	8d a9       	ldd	r24, Y+53	; 0x35
    74dc:	9e a9       	ldd	r25, Y+54	; 0x36
    74de:	fc 01       	movw	r30, r24
    74e0:	c0 80       	ld	r12, Z
    74e2:	d1 80       	ldd	r13, Z+1	; 0x01
    74e4:	e2 80       	ldd	r14, Z+2	; 0x02
    74e6:	f3 80       	ldd	r15, Z+3	; 0x03
    74e8:	84 e6       	ldi	r24, 0x64	; 100
    74ea:	90 e0       	ldi	r25, 0x00	; 0
    74ec:	0e 94 38 7c 	call	0xf870	; 0xf870 <eeprom_read_dword>
    74f0:	dc 01       	movw	r26, r24
    74f2:	cb 01       	movw	r24, r22
    74f4:	c8 16       	cp	r12, r24
    74f6:	d9 06       	cpc	r13, r25
    74f8:	ea 06       	cpc	r14, r26
    74fa:	fb 06       	cpc	r15, r27
    74fc:	09 f4       	brne	.+2      	; 0x7500 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x80>
    74fe:	ce c3       	rjmp	.+1948   	; 0x7c9c <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x81c>
			{
				avr_eeprom_write_dword(Frequency, *(uint32_t*)val);
    7500:	8d a9       	ldd	r24, Y+53	; 0x35
    7502:	9e a9       	ldd	r25, Y+54	; 0x36
    7504:	fc 01       	movw	r30, r24
    7506:	80 81       	ld	r24, Z
    7508:	91 81       	ldd	r25, Z+1	; 0x01
    750a:	a2 81       	ldd	r26, Z+2	; 0x02
    750c:	b3 81       	ldd	r27, Z+3	; 0x03
    750e:	ac 01       	movw	r20, r24
    7510:	bd 01       	movw	r22, r26
    7512:	84 e6       	ldi	r24, 0x64	; 100
    7514:	90 e0       	ldi	r25, 0x00	; 0
    7516:	0e 94 cc 39 	call	0x7398	; 0x7398 <_Z22avr_eeprom_write_dwordjm>
			}	
		}
		break;
    751a:	c0 c3       	rjmp	.+1920   	; 0x7c9c <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x81c>
		
		case RTTY_offset:
		{
			if(*(uint32_t*)val != eeprom_read_dword(&(EepromManager::ee_vars.rtty_offset)))
    751c:	8d a9       	ldd	r24, Y+53	; 0x35
    751e:	9e a9       	ldd	r25, Y+54	; 0x36
    7520:	fc 01       	movw	r30, r24
    7522:	c0 80       	ld	r12, Z
    7524:	d1 80       	ldd	r13, Z+1	; 0x01
    7526:	e2 80       	ldd	r14, Z+2	; 0x02
    7528:	f3 80       	ldd	r15, Z+3	; 0x03
    752a:	8c e6       	ldi	r24, 0x6C	; 108
    752c:	90 e0       	ldi	r25, 0x00	; 0
    752e:	0e 94 38 7c 	call	0xf870	; 0xf870 <eeprom_read_dword>
    7532:	dc 01       	movw	r26, r24
    7534:	cb 01       	movw	r24, r22
    7536:	c8 16       	cp	r12, r24
    7538:	d9 06       	cpc	r13, r25
    753a:	ea 06       	cpc	r14, r26
    753c:	fb 06       	cpc	r15, r27
    753e:	09 f4       	brne	.+2      	; 0x7542 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0xc2>
    7540:	af c3       	rjmp	.+1886   	; 0x7ca0 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x820>
			{
				avr_eeprom_write_dword(RTTY_offset, *(uint32_t*)val);
    7542:	8d a9       	ldd	r24, Y+53	; 0x35
    7544:	9e a9       	ldd	r25, Y+54	; 0x36
    7546:	fc 01       	movw	r30, r24
    7548:	80 81       	ld	r24, Z
    754a:	91 81       	ldd	r25, Z+1	; 0x01
    754c:	a2 81       	ldd	r26, Z+2	; 0x02
    754e:	b3 81       	ldd	r27, Z+3	; 0x03
    7550:	ac 01       	movw	r20, r24
    7552:	bd 01       	movw	r22, r26
    7554:	8c e6       	ldi	r24, 0x6C	; 108
    7556:	90 e0       	ldi	r25, 0x00	; 0
    7558:	0e 94 cc 39 	call	0x7398	; 0x7398 <_Z22avr_eeprom_write_dwordjm>
			}
		}
		break;
    755c:	a1 c3       	rjmp	.+1858   	; 0x7ca0 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x820>
		
		case RF_Power:
		{
			if(*(uint16_t*)val != eeprom_read_word(&(EepromManager::ee_vars.rf_power)))
    755e:	8d a9       	ldd	r24, Y+53	; 0x35
    7560:	9e a9       	ldd	r25, Y+54	; 0x36
    7562:	fc 01       	movw	r30, r24
    7564:	00 81       	ld	r16, Z
    7566:	11 81       	ldd	r17, Z+1	; 0x01
    7568:	84 e7       	ldi	r24, 0x74	; 116
    756a:	90 e0       	ldi	r25, 0x00	; 0
    756c:	0e 94 3f 7c 	call	0xf87e	; 0xf87e <eeprom_read_word>
    7570:	08 17       	cp	r16, r24
    7572:	19 07       	cpc	r17, r25
    7574:	09 f4       	brne	.+2      	; 0x7578 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0xf8>
    7576:	96 c3       	rjmp	.+1836   	; 0x7ca4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x824>
			{
				avr_eeprom_write_word(RF_Power, *(uint16_t*)val);
    7578:	8d a9       	ldd	r24, Y+53	; 0x35
    757a:	9e a9       	ldd	r25, Y+54	; 0x36
    757c:	fc 01       	movw	r30, r24
    757e:	80 81       	ld	r24, Z
    7580:	91 81       	ldd	r25, Z+1	; 0x01
    7582:	bc 01       	movw	r22, r24
    7584:	84 e7       	ldi	r24, 0x74	; 116
    7586:	90 e0       	ldi	r25, 0x00	; 0
    7588:	0e 94 99 39 	call	0x7332	; 0x7332 <_Z21avr_eeprom_write_wordjj>
			}			
		}
		break;
    758c:	8b c3       	rjmp	.+1814   	; 0x7ca4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x824>
		
		case StationID_text:
		{
			int cnt = 0;
    758e:	19 82       	std	Y+1, r1	; 0x01
    7590:	1a 82       	std	Y+2, r1	; 0x02
			char* char_addr = (char*)val;
    7592:	8d a9       	ldd	r24, Y+53	; 0x35
    7594:	9e a9       	ldd	r25, Y+54	; 0x36
    7596:	8b 83       	std	Y+3, r24	; 0x03
    7598:	9c 83       	std	Y+4, r25	; 0x04
			char c = *char_addr++;
    759a:	8b 81       	ldd	r24, Y+3	; 0x03
    759c:	9c 81       	ldd	r25, Y+4	; 0x04
    759e:	9c 01       	movw	r18, r24
    75a0:	2f 5f       	subi	r18, 0xFF	; 255
    75a2:	3f 4f       	sbci	r19, 0xFF	; 255
    75a4:	2b 83       	std	Y+3, r18	; 0x03
    75a6:	3c 83       	std	Y+4, r19	; 0x04
    75a8:	fc 01       	movw	r30, r24
    75aa:	80 81       	ld	r24, Z
    75ac:	8d 83       	std	Y+5, r24	; 0x05
			char q;
			
			eeprom_addr_t j = (eeprom_addr_t)StationID_text;
    75ae:	86 e1       	ldi	r24, 0x16	; 22
    75b0:	90 e0       	ldi	r25, 0x00	; 0
    75b2:	8e 83       	std	Y+6, r24	; 0x06
    75b4:	9f 83       	std	Y+7, r25	; 0x07

			while(c && (cnt<MAX_PATTERN_TEXT_LENGTH))
    75b6:	8d 81       	ldd	r24, Y+5	; 0x05
    75b8:	88 23       	and	r24, r24
    75ba:	39 f1       	breq	.+78     	; 0x760a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x18a>
    75bc:	89 81       	ldd	r24, Y+1	; 0x01
    75be:	9a 81       	ldd	r25, Y+2	; 0x02
    75c0:	44 97       	sbiw	r24, 0x14	; 20
    75c2:	1c f5       	brge	.+70     	; 0x760a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x18a>
			{
				q = (char)eeprom_read_byte((uint8_t*)j);
    75c4:	8e 81       	ldd	r24, Y+6	; 0x06
    75c6:	9f 81       	ldd	r25, Y+7	; 0x07
    75c8:	0e 94 30 7c 	call	0xf860	; 0xf860 <eeprom_read_byte>
    75cc:	8b a7       	std	Y+43, r24	; 0x2b
				if(c != q)
    75ce:	9d 81       	ldd	r25, Y+5	; 0x05
    75d0:	8b a5       	ldd	r24, Y+43	; 0x2b
    75d2:	98 17       	cp	r25, r24
    75d4:	29 f0       	breq	.+10     	; 0x75e0 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x160>
				{
					avr_eeprom_write_byte(j, c);
    75d6:	8e 81       	ldd	r24, Y+6	; 0x06
    75d8:	9f 81       	ldd	r25, Y+7	; 0x07
    75da:	6d 81       	ldd	r22, Y+5	; 0x05
    75dc:	0e 94 6a 39 	call	0x72d4	; 0x72d4 <_Z21avr_eeprom_write_bytejh>
				}
				
				cnt++;
    75e0:	89 81       	ldd	r24, Y+1	; 0x01
    75e2:	9a 81       	ldd	r25, Y+2	; 0x02
    75e4:	01 96       	adiw	r24, 0x01	; 1
    75e6:	89 83       	std	Y+1, r24	; 0x01
    75e8:	9a 83       	std	Y+2, r25	; 0x02
				c = *char_addr++;
    75ea:	8b 81       	ldd	r24, Y+3	; 0x03
    75ec:	9c 81       	ldd	r25, Y+4	; 0x04
    75ee:	9c 01       	movw	r18, r24
    75f0:	2f 5f       	subi	r18, 0xFF	; 255
    75f2:	3f 4f       	sbci	r19, 0xFF	; 255
    75f4:	2b 83       	std	Y+3, r18	; 0x03
    75f6:	3c 83       	std	Y+4, r19	; 0x04
    75f8:	fc 01       	movw	r30, r24
    75fa:	80 81       	ld	r24, Z
    75fc:	8d 83       	std	Y+5, r24	; 0x05
				j++;
    75fe:	8e 81       	ldd	r24, Y+6	; 0x06
    7600:	9f 81       	ldd	r25, Y+7	; 0x07
    7602:	01 96       	adiw	r24, 0x01	; 1
    7604:	8e 83       	std	Y+6, r24	; 0x06
    7606:	9f 83       	std	Y+7, r25	; 0x07
			char c = *char_addr++;
			char q;
			
			eeprom_addr_t j = (eeprom_addr_t)StationID_text;

			while(c && (cnt<MAX_PATTERN_TEXT_LENGTH))
    7608:	d6 cf       	rjmp	.-84     	; 0x75b6 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x136>
				cnt++;
				c = *char_addr++;
				j++;
			}

			avr_eeprom_write_byte(j, 0);
    760a:	8e 81       	ldd	r24, Y+6	; 0x06
    760c:	9f 81       	ldd	r25, Y+7	; 0x07
    760e:	60 e0       	ldi	r22, 0x00	; 0
    7610:	0e 94 6a 39 	call	0x72d4	; 0x72d4 <_Z21avr_eeprom_write_bytejh>
		}
		break;
    7614:	6c c3       	rjmp	.+1752   	; 0x7cee <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x86e>

		case Pattern_text:
		{
			int cnt = 0;
    7616:	18 86       	std	Y+8, r1	; 0x08
    7618:	19 86       	std	Y+9, r1	; 0x09
			char* char_addr = (char*)val;
    761a:	8d a9       	ldd	r24, Y+53	; 0x35
    761c:	9e a9       	ldd	r25, Y+54	; 0x36
    761e:	8a 87       	std	Y+10, r24	; 0x0a
    7620:	9b 87       	std	Y+11, r25	; 0x0b
			char c = *char_addr++;
    7622:	8a 85       	ldd	r24, Y+10	; 0x0a
    7624:	9b 85       	ldd	r25, Y+11	; 0x0b
    7626:	9c 01       	movw	r18, r24
    7628:	2f 5f       	subi	r18, 0xFF	; 255
    762a:	3f 4f       	sbci	r19, 0xFF	; 255
    762c:	2a 87       	std	Y+10, r18	; 0x0a
    762e:	3b 87       	std	Y+11, r19	; 0x0b
    7630:	fc 01       	movw	r30, r24
    7632:	80 81       	ld	r24, Z
    7634:	8c 87       	std	Y+12, r24	; 0x0c
			char q;
			
			eeprom_addr_t j = (eeprom_addr_t)Pattern_text;
    7636:	8f e2       	ldi	r24, 0x2F	; 47
    7638:	90 e0       	ldi	r25, 0x00	; 0
    763a:	8d 87       	std	Y+13, r24	; 0x0d
    763c:	9e 87       	std	Y+14, r25	; 0x0e

			while(c && (cnt<MAX_PATTERN_TEXT_LENGTH))
    763e:	8c 85       	ldd	r24, Y+12	; 0x0c
    7640:	88 23       	and	r24, r24
    7642:	39 f1       	breq	.+78     	; 0x7692 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x212>
    7644:	88 85       	ldd	r24, Y+8	; 0x08
    7646:	99 85       	ldd	r25, Y+9	; 0x09
    7648:	44 97       	sbiw	r24, 0x14	; 20
    764a:	1c f5       	brge	.+70     	; 0x7692 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x212>
			{
				q = (char)eeprom_read_byte((uint8_t*)j);
    764c:	8d 85       	ldd	r24, Y+13	; 0x0d
    764e:	9e 85       	ldd	r25, Y+14	; 0x0e
    7650:	0e 94 30 7c 	call	0xf860	; 0xf860 <eeprom_read_byte>
    7654:	8c a7       	std	Y+44, r24	; 0x2c
				if(c != q)
    7656:	9c 85       	ldd	r25, Y+12	; 0x0c
    7658:	8c a5       	ldd	r24, Y+44	; 0x2c
    765a:	98 17       	cp	r25, r24
    765c:	29 f0       	breq	.+10     	; 0x7668 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x1e8>
				{
					avr_eeprom_write_byte(j, c);
    765e:	8d 85       	ldd	r24, Y+13	; 0x0d
    7660:	9e 85       	ldd	r25, Y+14	; 0x0e
    7662:	6c 85       	ldd	r22, Y+12	; 0x0c
    7664:	0e 94 6a 39 	call	0x72d4	; 0x72d4 <_Z21avr_eeprom_write_bytejh>
				}
				
				cnt++;
    7668:	88 85       	ldd	r24, Y+8	; 0x08
    766a:	99 85       	ldd	r25, Y+9	; 0x09
    766c:	01 96       	adiw	r24, 0x01	; 1
    766e:	88 87       	std	Y+8, r24	; 0x08
    7670:	99 87       	std	Y+9, r25	; 0x09
				c = *char_addr++;
    7672:	8a 85       	ldd	r24, Y+10	; 0x0a
    7674:	9b 85       	ldd	r25, Y+11	; 0x0b
    7676:	9c 01       	movw	r18, r24
    7678:	2f 5f       	subi	r18, 0xFF	; 255
    767a:	3f 4f       	sbci	r19, 0xFF	; 255
    767c:	2a 87       	std	Y+10, r18	; 0x0a
    767e:	3b 87       	std	Y+11, r19	; 0x0b
    7680:	fc 01       	movw	r30, r24
    7682:	80 81       	ld	r24, Z
    7684:	8c 87       	std	Y+12, r24	; 0x0c
				j++;
    7686:	8d 85       	ldd	r24, Y+13	; 0x0d
    7688:	9e 85       	ldd	r25, Y+14	; 0x0e
    768a:	01 96       	adiw	r24, 0x01	; 1
    768c:	8d 87       	std	Y+13, r24	; 0x0d
    768e:	9e 87       	std	Y+14, r25	; 0x0e
			char c = *char_addr++;
			char q;
			
			eeprom_addr_t j = (eeprom_addr_t)Pattern_text;

			while(c && (cnt<MAX_PATTERN_TEXT_LENGTH))
    7690:	d6 cf       	rjmp	.-84     	; 0x763e <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x1be>
				cnt++;
				c = *char_addr++;
				j++;
			}

			avr_eeprom_write_byte(j, 0);
    7692:	8d 85       	ldd	r24, Y+13	; 0x0d
    7694:	9e 85       	ldd	r25, Y+14	; 0x0e
    7696:	60 e0       	ldi	r22, 0x00	; 0
    7698:	0e 94 6a 39 	call	0x72d4	; 0x72d4 <_Z21avr_eeprom_write_bytejh>
		}
		break;
    769c:	28 c3       	rjmp	.+1616   	; 0x7cee <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x86e>

		case UnlockCode:
		{
			int cnt = 0;
    769e:	1f 86       	std	Y+15, r1	; 0x0f
    76a0:	18 8a       	std	Y+16, r1	; 0x10
			char* char_addr = (char*)val;
    76a2:	8d a9       	ldd	r24, Y+53	; 0x35
    76a4:	9e a9       	ldd	r25, Y+54	; 0x36
    76a6:	89 8b       	std	Y+17, r24	; 0x11
    76a8:	9a 8b       	std	Y+18, r25	; 0x12
			char c = *char_addr++;
    76aa:	89 89       	ldd	r24, Y+17	; 0x11
    76ac:	9a 89       	ldd	r25, Y+18	; 0x12
    76ae:	9c 01       	movw	r18, r24
    76b0:	2f 5f       	subi	r18, 0xFF	; 255
    76b2:	3f 4f       	sbci	r19, 0xFF	; 255
    76b4:	29 8b       	std	Y+17, r18	; 0x11
    76b6:	3a 8b       	std	Y+18, r19	; 0x12
    76b8:	fc 01       	movw	r30, r24
    76ba:	80 81       	ld	r24, Z
    76bc:	8b 8b       	std	Y+19, r24	; 0x13
			char q;
			
			eeprom_addr_t j = (eeprom_addr_t)UnlockCode;
    76be:	88 e4       	ldi	r24, 0x48	; 72
    76c0:	90 e0       	ldi	r25, 0x00	; 0
    76c2:	8c 8b       	std	Y+20, r24	; 0x14
    76c4:	9d 8b       	std	Y+21, r25	; 0x15

			while(c && (cnt<MAX_UNLOCK_CODE_LENGTH))
    76c6:	8b 89       	ldd	r24, Y+19	; 0x13
    76c8:	88 23       	and	r24, r24
    76ca:	39 f1       	breq	.+78     	; 0x771a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x29a>
    76cc:	8f 85       	ldd	r24, Y+15	; 0x0f
    76ce:	98 89       	ldd	r25, Y+16	; 0x10
    76d0:	08 97       	sbiw	r24, 0x08	; 8
    76d2:	1c f5       	brge	.+70     	; 0x771a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x29a>
			{
				q = (char)eeprom_read_byte((uint8_t*)j);
    76d4:	8c 89       	ldd	r24, Y+20	; 0x14
    76d6:	9d 89       	ldd	r25, Y+21	; 0x15
    76d8:	0e 94 30 7c 	call	0xf860	; 0xf860 <eeprom_read_byte>
    76dc:	8d a7       	std	Y+45, r24	; 0x2d
				if(c != q)
    76de:	9b 89       	ldd	r25, Y+19	; 0x13
    76e0:	8d a5       	ldd	r24, Y+45	; 0x2d
    76e2:	98 17       	cp	r25, r24
    76e4:	29 f0       	breq	.+10     	; 0x76f0 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x270>
				{
					avr_eeprom_write_byte(j, c);
    76e6:	8c 89       	ldd	r24, Y+20	; 0x14
    76e8:	9d 89       	ldd	r25, Y+21	; 0x15
    76ea:	6b 89       	ldd	r22, Y+19	; 0x13
    76ec:	0e 94 6a 39 	call	0x72d4	; 0x72d4 <_Z21avr_eeprom_write_bytejh>
				}
				
				cnt++;
    76f0:	8f 85       	ldd	r24, Y+15	; 0x0f
    76f2:	98 89       	ldd	r25, Y+16	; 0x10
    76f4:	01 96       	adiw	r24, 0x01	; 1
    76f6:	8f 87       	std	Y+15, r24	; 0x0f
    76f8:	98 8b       	std	Y+16, r25	; 0x10
				j++;
    76fa:	8c 89       	ldd	r24, Y+20	; 0x14
    76fc:	9d 89       	ldd	r25, Y+21	; 0x15
    76fe:	01 96       	adiw	r24, 0x01	; 1
    7700:	8c 8b       	std	Y+20, r24	; 0x14
    7702:	9d 8b       	std	Y+21, r25	; 0x15
				c = *char_addr++;
    7704:	89 89       	ldd	r24, Y+17	; 0x11
    7706:	9a 89       	ldd	r25, Y+18	; 0x12
    7708:	9c 01       	movw	r18, r24
    770a:	2f 5f       	subi	r18, 0xFF	; 255
    770c:	3f 4f       	sbci	r19, 0xFF	; 255
    770e:	29 8b       	std	Y+17, r18	; 0x11
    7710:	3a 8b       	std	Y+18, r19	; 0x12
    7712:	fc 01       	movw	r30, r24
    7714:	80 81       	ld	r24, Z
    7716:	8b 8b       	std	Y+19, r24	; 0x13
			char c = *char_addr++;
			char q;
			
			eeprom_addr_t j = (eeprom_addr_t)UnlockCode;

			while(c && (cnt<MAX_UNLOCK_CODE_LENGTH))
    7718:	d6 cf       	rjmp	.-84     	; 0x76c6 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x246>
				cnt++;
				j++;
				c = *char_addr++;
			}

			avr_eeprom_write_byte(j, 0);
    771a:	8c 89       	ldd	r24, Y+20	; 0x14
    771c:	9d 89       	ldd	r25, Y+21	; 0x15
    771e:	60 e0       	ldi	r22, 0x00	; 0
    7720:	0e 94 6a 39 	call	0x72d4	; 0x72d4 <_Z21avr_eeprom_write_bytejh>
		}
		break;
    7724:	e4 c2       	rjmp	.+1480   	; 0x7cee <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x86e>

		case Id_codespeed:
		{
			if(*(uint8_t*)val != eeprom_read_byte(&(EepromManager::ee_vars.id_codespeed)))
    7726:	8d a9       	ldd	r24, Y+53	; 0x35
    7728:	9e a9       	ldd	r25, Y+54	; 0x36
    772a:	fc 01       	movw	r30, r24
    772c:	10 81       	ld	r17, Z
    772e:	85 e5       	ldi	r24, 0x55	; 85
    7730:	90 e0       	ldi	r25, 0x00	; 0
    7732:	0e 94 30 7c 	call	0xf860	; 0xf860 <eeprom_read_byte>
    7736:	18 17       	cp	r17, r24
    7738:	09 f4       	brne	.+2      	; 0x773c <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2bc>
    773a:	b6 c2       	rjmp	.+1388   	; 0x7ca8 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x828>
			{
				avr_eeprom_write_byte(Id_codespeed, *(uint8_t*)val);
    773c:	8d a9       	ldd	r24, Y+53	; 0x35
    773e:	9e a9       	ldd	r25, Y+54	; 0x36
    7740:	fc 01       	movw	r30, r24
    7742:	80 81       	ld	r24, Z
    7744:	68 2f       	mov	r22, r24
    7746:	85 e5       	ldi	r24, 0x55	; 85
    7748:	90 e0       	ldi	r25, 0x00	; 0
    774a:	0e 94 6a 39 	call	0x72d4	; 0x72d4 <_Z21avr_eeprom_write_bytejh>
			}
		}
		break;
    774e:	ac c2       	rjmp	.+1368   	; 0x7ca8 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x828>

		case Fox_setting:
		{
			if(*(uint8_t*)val != eeprom_read_byte((uint8_t*)&(EepromManager::ee_vars.fox_setting)))
    7750:	8d a9       	ldd	r24, Y+53	; 0x35
    7752:	9e a9       	ldd	r25, Y+54	; 0x36
    7754:	fc 01       	movw	r30, r24
    7756:	10 81       	ld	r17, Z
    7758:	8a e5       	ldi	r24, 0x5A	; 90
    775a:	90 e0       	ldi	r25, 0x00	; 0
    775c:	0e 94 30 7c 	call	0xf860	; 0xf860 <eeprom_read_byte>
    7760:	18 17       	cp	r17, r24
    7762:	09 f4       	brne	.+2      	; 0x7766 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2e6>
    7764:	a3 c2       	rjmp	.+1350   	; 0x7cac <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x82c>
			{
				avr_eeprom_write_byte(Fox_setting, *(uint8_t*)val);
    7766:	8d a9       	ldd	r24, Y+53	; 0x35
    7768:	9e a9       	ldd	r25, Y+54	; 0x36
    776a:	fc 01       	movw	r30, r24
    776c:	80 81       	ld	r24, Z
    776e:	68 2f       	mov	r22, r24
    7770:	8a e5       	ldi	r24, 0x5A	; 90
    7772:	90 e0       	ldi	r25, 0x00	; 0
    7774:	0e 94 6a 39 	call	0x72d4	; 0x72d4 <_Z21avr_eeprom_write_bytejh>
			}			
		}
		break;
    7778:	99 c2       	rjmp	.+1330   	; 0x7cac <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x82c>
		
		case Master_setting:
		{
			if(*(uint8_t*)val != eeprom_read_byte((uint8_t*)&(EepromManager::ee_vars.master_setting)))
    777a:	8d a9       	ldd	r24, Y+53	; 0x35
    777c:	9e a9       	ldd	r25, Y+54	; 0x36
    777e:	fc 01       	movw	r30, r24
    7780:	10 81       	ld	r17, Z
    7782:	89 eb       	ldi	r24, 0xB9	; 185
    7784:	90 e0       	ldi	r25, 0x00	; 0
    7786:	0e 94 30 7c 	call	0xf860	; 0xf860 <eeprom_read_byte>
    778a:	18 17       	cp	r17, r24
    778c:	09 f4       	brne	.+2      	; 0x7790 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x310>
    778e:	90 c2       	rjmp	.+1312   	; 0x7cb0 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x830>
			{
				avr_eeprom_write_byte(Master_setting, *(uint8_t*)val);
    7790:	8d a9       	ldd	r24, Y+53	; 0x35
    7792:	9e a9       	ldd	r25, Y+54	; 0x36
    7794:	fc 01       	movw	r30, r24
    7796:	80 81       	ld	r24, Z
    7798:	68 2f       	mov	r22, r24
    779a:	89 eb       	ldi	r24, 0xB9	; 185
    779c:	90 e0       	ldi	r25, 0x00	; 0
    779e:	0e 94 6a 39 	call	0x72d4	; 0x72d4 <_Z21avr_eeprom_write_bytejh>
			}
		}
		break;
    77a2:	86 c2       	rjmp	.+1292   	; 0x7cb0 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x830>
		
		case Event_setting:
		{
			if(*(uint8_t*)val != eeprom_read_byte((uint8_t*)&(EepromManager::ee_vars.event_setting)))
    77a4:	8d a9       	ldd	r24, Y+53	; 0x35
    77a6:	9e a9       	ldd	r25, Y+54	; 0x36
    77a8:	fc 01       	movw	r30, r24
    77aa:	10 81       	ld	r17, Z
    77ac:	87 e9       	ldi	r24, 0x97	; 151
    77ae:	90 e0       	ldi	r25, 0x00	; 0
    77b0:	0e 94 30 7c 	call	0xf860	; 0xf860 <eeprom_read_byte>
    77b4:	18 17       	cp	r17, r24
    77b6:	09 f4       	brne	.+2      	; 0x77ba <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x33a>
    77b8:	7d c2       	rjmp	.+1274   	; 0x7cb4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x834>
			{
				avr_eeprom_write_byte(Event_setting, *(uint8_t*)val);
    77ba:	8d a9       	ldd	r24, Y+53	; 0x35
    77bc:	9e a9       	ldd	r25, Y+54	; 0x36
    77be:	fc 01       	movw	r30, r24
    77c0:	80 81       	ld	r24, Z
    77c2:	68 2f       	mov	r22, r24
    77c4:	87 e9       	ldi	r24, 0x97	; 151
    77c6:	90 e0       	ldi	r25, 0x00	; 0
    77c8:	0e 94 6a 39 	call	0x72d4	; 0x72d4 <_Z21avr_eeprom_write_bytejh>
			}
		}
		break;
    77cc:	73 c2       	rjmp	.+1254   	; 0x7cb4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x834>
		
		case Foxoring_FrequencyA:
		{
			if(*(uint32_t*)val != eeprom_read_dword(&(EepromManager::ee_vars.foxoring_frequencyA)))
    77ce:	8d a9       	ldd	r24, Y+53	; 0x35
    77d0:	9e a9       	ldd	r25, Y+54	; 0x36
    77d2:	fc 01       	movw	r30, r24
    77d4:	c0 80       	ld	r12, Z
    77d6:	d1 80       	ldd	r13, Z+1	; 0x01
    77d8:	e2 80       	ldd	r14, Z+2	; 0x02
    77da:	f3 80       	ldd	r15, Z+3	; 0x03
    77dc:	8c e9       	ldi	r24, 0x9C	; 156
    77de:	90 e0       	ldi	r25, 0x00	; 0
    77e0:	0e 94 38 7c 	call	0xf870	; 0xf870 <eeprom_read_dword>
    77e4:	dc 01       	movw	r26, r24
    77e6:	cb 01       	movw	r24, r22
    77e8:	c8 16       	cp	r12, r24
    77ea:	d9 06       	cpc	r13, r25
    77ec:	ea 06       	cpc	r14, r26
    77ee:	fb 06       	cpc	r15, r27
    77f0:	09 f4       	brne	.+2      	; 0x77f4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x374>
    77f2:	62 c2       	rjmp	.+1220   	; 0x7cb8 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x838>
			{
				avr_eeprom_write_dword(Foxoring_FrequencyA, *(uint32_t*)val);
    77f4:	8d a9       	ldd	r24, Y+53	; 0x35
    77f6:	9e a9       	ldd	r25, Y+54	; 0x36
    77f8:	fc 01       	movw	r30, r24
    77fa:	80 81       	ld	r24, Z
    77fc:	91 81       	ldd	r25, Z+1	; 0x01
    77fe:	a2 81       	ldd	r26, Z+2	; 0x02
    7800:	b3 81       	ldd	r27, Z+3	; 0x03
    7802:	ac 01       	movw	r20, r24
    7804:	bd 01       	movw	r22, r26
    7806:	8c e9       	ldi	r24, 0x9C	; 156
    7808:	90 e0       	ldi	r25, 0x00	; 0
    780a:	0e 94 cc 39 	call	0x7398	; 0x7398 <_Z22avr_eeprom_write_dwordjm>
			}		
		}
		break;
    780e:	54 c2       	rjmp	.+1192   	; 0x7cb8 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x838>
		
		case Foxoring_FrequencyB:
		{
			if(*(uint32_t*)val != eeprom_read_dword(&(EepromManager::ee_vars.foxoring_frequencyB)))
    7810:	8d a9       	ldd	r24, Y+53	; 0x35
    7812:	9e a9       	ldd	r25, Y+54	; 0x36
    7814:	fc 01       	movw	r30, r24
    7816:	c0 80       	ld	r12, Z
    7818:	d1 80       	ldd	r13, Z+1	; 0x01
    781a:	e2 80       	ldd	r14, Z+2	; 0x02
    781c:	f3 80       	ldd	r15, Z+3	; 0x03
    781e:	84 ea       	ldi	r24, 0xA4	; 164
    7820:	90 e0       	ldi	r25, 0x00	; 0
    7822:	0e 94 38 7c 	call	0xf870	; 0xf870 <eeprom_read_dword>
    7826:	dc 01       	movw	r26, r24
    7828:	cb 01       	movw	r24, r22
    782a:	c8 16       	cp	r12, r24
    782c:	d9 06       	cpc	r13, r25
    782e:	ea 06       	cpc	r14, r26
    7830:	fb 06       	cpc	r15, r27
    7832:	09 f4       	brne	.+2      	; 0x7836 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x3b6>
    7834:	43 c2       	rjmp	.+1158   	; 0x7cbc <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x83c>
			{
				avr_eeprom_write_dword(Foxoring_FrequencyB, *(uint32_t*)val);
    7836:	8d a9       	ldd	r24, Y+53	; 0x35
    7838:	9e a9       	ldd	r25, Y+54	; 0x36
    783a:	fc 01       	movw	r30, r24
    783c:	80 81       	ld	r24, Z
    783e:	91 81       	ldd	r25, Z+1	; 0x01
    7840:	a2 81       	ldd	r26, Z+2	; 0x02
    7842:	b3 81       	ldd	r27, Z+3	; 0x03
    7844:	ac 01       	movw	r20, r24
    7846:	bd 01       	movw	r22, r26
    7848:	84 ea       	ldi	r24, 0xA4	; 164
    784a:	90 e0       	ldi	r25, 0x00	; 0
    784c:	0e 94 cc 39 	call	0x7398	; 0x7398 <_Z22avr_eeprom_write_dwordjm>
			}
		}
		break;
    7850:	35 c2       	rjmp	.+1130   	; 0x7cbc <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x83c>
		
		case Foxoring_FrequencyC:
		{
			if(*(uint32_t*)val != eeprom_read_dword(&(EepromManager::ee_vars.foxoring_frequencyC)))
    7852:	8d a9       	ldd	r24, Y+53	; 0x35
    7854:	9e a9       	ldd	r25, Y+54	; 0x36
    7856:	fc 01       	movw	r30, r24
    7858:	c0 80       	ld	r12, Z
    785a:	d1 80       	ldd	r13, Z+1	; 0x01
    785c:	e2 80       	ldd	r14, Z+2	; 0x02
    785e:	f3 80       	ldd	r15, Z+3	; 0x03
    7860:	8c ea       	ldi	r24, 0xAC	; 172
    7862:	90 e0       	ldi	r25, 0x00	; 0
    7864:	0e 94 38 7c 	call	0xf870	; 0xf870 <eeprom_read_dword>
    7868:	dc 01       	movw	r26, r24
    786a:	cb 01       	movw	r24, r22
    786c:	c8 16       	cp	r12, r24
    786e:	d9 06       	cpc	r13, r25
    7870:	ea 06       	cpc	r14, r26
    7872:	fb 06       	cpc	r15, r27
    7874:	09 f4       	brne	.+2      	; 0x7878 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x3f8>
    7876:	24 c2       	rjmp	.+1096   	; 0x7cc0 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x840>
			{
				avr_eeprom_write_dword(Foxoring_FrequencyC, *(uint32_t*)val);
    7878:	8d a9       	ldd	r24, Y+53	; 0x35
    787a:	9e a9       	ldd	r25, Y+54	; 0x36
    787c:	fc 01       	movw	r30, r24
    787e:	80 81       	ld	r24, Z
    7880:	91 81       	ldd	r25, Z+1	; 0x01
    7882:	a2 81       	ldd	r26, Z+2	; 0x02
    7884:	b3 81       	ldd	r27, Z+3	; 0x03
    7886:	ac 01       	movw	r20, r24
    7888:	bd 01       	movw	r22, r26
    788a:	8c ea       	ldi	r24, 0xAC	; 172
    788c:	90 e0       	ldi	r25, 0x00	; 0
    788e:	0e 94 cc 39 	call	0x7398	; 0x7398 <_Z22avr_eeprom_write_dwordjm>
			}
		}
		break;
    7892:	16 c2       	rjmp	.+1068   	; 0x7cc0 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x840>

		case Foxoring_fox_setting:
		{
			if(*(uint8_t*)val != eeprom_read_byte((uint8_t*)&(EepromManager::ee_vars.foxoring_fox_setting)))
    7894:	8d a9       	ldd	r24, Y+53	; 0x35
    7896:	9e a9       	ldd	r25, Y+54	; 0x36
    7898:	fc 01       	movw	r30, r24
    789a:	10 81       	ld	r17, Z
    789c:	84 eb       	ldi	r24, 0xB4	; 180
    789e:	90 e0       	ldi	r25, 0x00	; 0
    78a0:	0e 94 30 7c 	call	0xf860	; 0xf860 <eeprom_read_byte>
    78a4:	18 17       	cp	r17, r24
    78a6:	09 f4       	brne	.+2      	; 0x78aa <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x42a>
    78a8:	0d c2       	rjmp	.+1050   	; 0x7cc4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x844>
			{
				avr_eeprom_write_byte(Foxoring_fox_setting, *(uint8_t*)val);
    78aa:	8d a9       	ldd	r24, Y+53	; 0x35
    78ac:	9e a9       	ldd	r25, Y+54	; 0x36
    78ae:	fc 01       	movw	r30, r24
    78b0:	80 81       	ld	r24, Z
    78b2:	68 2f       	mov	r22, r24
    78b4:	84 eb       	ldi	r24, 0xB4	; 180
    78b6:	90 e0       	ldi	r25, 0x00	; 0
    78b8:	0e 94 6a 39 	call	0x72d4	; 0x72d4 <_Z21avr_eeprom_write_bytejh>
			}		
		}
		break;
    78bc:	03 c2       	rjmp	.+1030   	; 0x7cc4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x844>

		case Event_start_epoch:
		{
			if(*(uint32_t*)val != eeprom_read_dword(&(EepromManager::ee_vars.event_start_epoch)))
    78be:	8d a9       	ldd	r24, Y+53	; 0x35
    78c0:	9e a9       	ldd	r25, Y+54	; 0x36
    78c2:	fc 01       	movw	r30, r24
    78c4:	c0 80       	ld	r12, Z
    78c6:	d1 80       	ldd	r13, Z+1	; 0x01
    78c8:	e2 80       	ldd	r14, Z+2	; 0x02
    78ca:	f3 80       	ldd	r15, Z+3	; 0x03
    78cc:	86 e0       	ldi	r24, 0x06	; 6
    78ce:	90 e0       	ldi	r25, 0x00	; 0
    78d0:	0e 94 38 7c 	call	0xf870	; 0xf870 <eeprom_read_dword>
    78d4:	dc 01       	movw	r26, r24
    78d6:	cb 01       	movw	r24, r22
    78d8:	c8 16       	cp	r12, r24
    78da:	d9 06       	cpc	r13, r25
    78dc:	ea 06       	cpc	r14, r26
    78de:	fb 06       	cpc	r15, r27
    78e0:	09 f4       	brne	.+2      	; 0x78e4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x464>
    78e2:	f2 c1       	rjmp	.+996    	; 0x7cc8 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x848>
			{
				avr_eeprom_write_dword(Event_start_epoch, *(uint32_t*)val);
    78e4:	8d a9       	ldd	r24, Y+53	; 0x35
    78e6:	9e a9       	ldd	r25, Y+54	; 0x36
    78e8:	fc 01       	movw	r30, r24
    78ea:	80 81       	ld	r24, Z
    78ec:	91 81       	ldd	r25, Z+1	; 0x01
    78ee:	a2 81       	ldd	r26, Z+2	; 0x02
    78f0:	b3 81       	ldd	r27, Z+3	; 0x03
    78f2:	ac 01       	movw	r20, r24
    78f4:	bd 01       	movw	r22, r26
    78f6:	86 e0       	ldi	r24, 0x06	; 6
    78f8:	90 e0       	ldi	r25, 0x00	; 0
    78fa:	0e 94 cc 39 	call	0x7398	; 0x7398 <_Z22avr_eeprom_write_dwordjm>
			}
		}
		break;
    78fe:	e4 c1       	rjmp	.+968    	; 0x7cc8 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x848>

		case Event_finish_epoch:
		{
			if(*(uint32_t*)val != eeprom_read_dword(&(EepromManager::ee_vars.event_finish_epoch)))
    7900:	8d a9       	ldd	r24, Y+53	; 0x35
    7902:	9e a9       	ldd	r25, Y+54	; 0x36
    7904:	fc 01       	movw	r30, r24
    7906:	c0 80       	ld	r12, Z
    7908:	d1 80       	ldd	r13, Z+1	; 0x01
    790a:	e2 80       	ldd	r14, Z+2	; 0x02
    790c:	f3 80       	ldd	r15, Z+3	; 0x03
    790e:	8e e0       	ldi	r24, 0x0E	; 14
    7910:	90 e0       	ldi	r25, 0x00	; 0
    7912:	0e 94 38 7c 	call	0xf870	; 0xf870 <eeprom_read_dword>
    7916:	dc 01       	movw	r26, r24
    7918:	cb 01       	movw	r24, r22
    791a:	c8 16       	cp	r12, r24
    791c:	d9 06       	cpc	r13, r25
    791e:	ea 06       	cpc	r14, r26
    7920:	fb 06       	cpc	r15, r27
    7922:	09 f4       	brne	.+2      	; 0x7926 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x4a6>
    7924:	d3 c1       	rjmp	.+934    	; 0x7ccc <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x84c>
			{
				avr_eeprom_write_dword(Event_finish_epoch, *(uint32_t*)val);
    7926:	8d a9       	ldd	r24, Y+53	; 0x35
    7928:	9e a9       	ldd	r25, Y+54	; 0x36
    792a:	fc 01       	movw	r30, r24
    792c:	80 81       	ld	r24, Z
    792e:	91 81       	ldd	r25, Z+1	; 0x01
    7930:	a2 81       	ldd	r26, Z+2	; 0x02
    7932:	b3 81       	ldd	r27, Z+3	; 0x03
    7934:	ac 01       	movw	r20, r24
    7936:	bd 01       	movw	r22, r26
    7938:	8e e0       	ldi	r24, 0x0E	; 14
    793a:	90 e0       	ldi	r25, 0x00	; 0
    793c:	0e 94 cc 39 	call	0x7398	; 0x7398 <_Z22avr_eeprom_write_dwordjm>
			}		
		}
		break;
    7940:	c5 c1       	rjmp	.+906    	; 0x7ccc <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x84c>

		case Utc_offset:
		{
			if(*(uint8_t*)val != eeprom_read_byte(&(EepromManager::ee_vars.utc_offset)))
    7942:	8d a9       	ldd	r24, Y+53	; 0x35
    7944:	9e a9       	ldd	r25, Y+54	; 0x36
    7946:	fc 01       	movw	r30, r24
    7948:	10 81       	ld	r17, Z
    794a:	8f e5       	ldi	r24, 0x5F	; 95
    794c:	90 e0       	ldi	r25, 0x00	; 0
    794e:	0e 94 30 7c 	call	0xf860	; 0xf860 <eeprom_read_byte>
    7952:	18 17       	cp	r17, r24
    7954:	09 f4       	brne	.+2      	; 0x7958 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x4d8>
    7956:	bc c1       	rjmp	.+888    	; 0x7cd0 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x850>
			{
				avr_eeprom_write_byte(Utc_offset, *(uint8_t*)val);
    7958:	8d a9       	ldd	r24, Y+53	; 0x35
    795a:	9e a9       	ldd	r25, Y+54	; 0x36
    795c:	fc 01       	movw	r30, r24
    795e:	80 81       	ld	r24, Z
    7960:	68 2f       	mov	r22, r24
    7962:	8f e5       	ldi	r24, 0x5F	; 95
    7964:	90 e0       	ldi	r25, 0x00	; 0
    7966:	0e 94 6a 39 	call	0x72d4	; 0x72d4 <_Z21avr_eeprom_write_bytejh>
			}		
		}
		break;
    796a:	b2 c1       	rjmp	.+868    	; 0x7cd0 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x850>
		
		case Pattern_Code_Speed:
		{
			if(*(uint8_t*)val != eeprom_read_byte(&(EepromManager::ee_vars.pattern_codespeed)))
    796c:	8d a9       	ldd	r24, Y+53	; 0x35
    796e:	9e a9       	ldd	r25, Y+54	; 0x36
    7970:	fc 01       	movw	r30, r24
    7972:	10 81       	ld	r17, Z
    7974:	8a e7       	ldi	r24, 0x7A	; 122
    7976:	90 e0       	ldi	r25, 0x00	; 0
    7978:	0e 94 30 7c 	call	0xf860	; 0xf860 <eeprom_read_byte>
    797c:	18 17       	cp	r17, r24
    797e:	09 f4       	brne	.+2      	; 0x7982 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x502>
    7980:	a9 c1       	rjmp	.+850    	; 0x7cd4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x854>
			{
				avr_eeprom_write_byte(Pattern_Code_Speed, *(uint8_t*)val);
    7982:	8d a9       	ldd	r24, Y+53	; 0x35
    7984:	9e a9       	ldd	r25, Y+54	; 0x36
    7986:	fc 01       	movw	r30, r24
    7988:	80 81       	ld	r24, Z
    798a:	68 2f       	mov	r22, r24
    798c:	8a e7       	ldi	r24, 0x7A	; 122
    798e:	90 e0       	ldi	r25, 0x00	; 0
    7990:	0e 94 6a 39 	call	0x72d4	; 0x72d4 <_Z21avr_eeprom_write_bytejh>
			}
		}
		break;
    7994:	9f c1       	rjmp	.+830    	; 0x7cd4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x854>

		case Off_Air_Seconds:
		{
			if(*(int16_t*)val != (int16_t)eeprom_read_word((const uint16_t *)&(EepromManager::ee_vars.off_air_seconds)))
    7996:	8d a9       	ldd	r24, Y+53	; 0x35
    7998:	9e a9       	ldd	r25, Y+54	; 0x36
    799a:	fc 01       	movw	r30, r24
    799c:	00 81       	ld	r16, Z
    799e:	11 81       	ldd	r17, Z+1	; 0x01
    79a0:	8f e7       	ldi	r24, 0x7F	; 127
    79a2:	90 e0       	ldi	r25, 0x00	; 0
    79a4:	0e 94 3f 7c 	call	0xf87e	; 0xf87e <eeprom_read_word>
    79a8:	08 17       	cp	r16, r24
    79aa:	19 07       	cpc	r17, r25
    79ac:	09 f4       	brne	.+2      	; 0x79b0 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x530>
    79ae:	94 c1       	rjmp	.+808    	; 0x7cd8 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x858>
			{
				avr_eeprom_write_word(Off_Air_Seconds, *(uint16_t*)val);
    79b0:	8d a9       	ldd	r24, Y+53	; 0x35
    79b2:	9e a9       	ldd	r25, Y+54	; 0x36
    79b4:	fc 01       	movw	r30, r24
    79b6:	80 81       	ld	r24, Z
    79b8:	91 81       	ldd	r25, Z+1	; 0x01
    79ba:	bc 01       	movw	r22, r24
    79bc:	8f e7       	ldi	r24, 0x7F	; 127
    79be:	90 e0       	ldi	r25, 0x00	; 0
    79c0:	0e 94 99 39 	call	0x7332	; 0x7332 <_Z21avr_eeprom_write_wordjj>
			}
		}
		break;
    79c4:	89 c1       	rjmp	.+786    	; 0x7cd8 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x858>
		
		case On_Air_Seconds:
		{
			if(*(int16_t*)val != (int16_t)eeprom_read_word((const uint16_t *)&(EepromManager::ee_vars.on_air_seconds)))
    79c6:	8d a9       	ldd	r24, Y+53	; 0x35
    79c8:	9e a9       	ldd	r25, Y+54	; 0x36
    79ca:	fc 01       	movw	r30, r24
    79cc:	00 81       	ld	r16, Z
    79ce:	11 81       	ldd	r17, Z+1	; 0x01
    79d0:	85 e8       	ldi	r24, 0x85	; 133
    79d2:	90 e0       	ldi	r25, 0x00	; 0
    79d4:	0e 94 3f 7c 	call	0xf87e	; 0xf87e <eeprom_read_word>
    79d8:	08 17       	cp	r16, r24
    79da:	19 07       	cpc	r17, r25
    79dc:	09 f4       	brne	.+2      	; 0x79e0 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x560>
    79de:	7e c1       	rjmp	.+764    	; 0x7cdc <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x85c>
			{
				avr_eeprom_write_word(On_Air_Seconds, *(uint16_t*)val);
    79e0:	8d a9       	ldd	r24, Y+53	; 0x35
    79e2:	9e a9       	ldd	r25, Y+54	; 0x36
    79e4:	fc 01       	movw	r30, r24
    79e6:	80 81       	ld	r24, Z
    79e8:	91 81       	ldd	r25, Z+1	; 0x01
    79ea:	bc 01       	movw	r22, r24
    79ec:	85 e8       	ldi	r24, 0x85	; 133
    79ee:	90 e0       	ldi	r25, 0x00	; 0
    79f0:	0e 94 99 39 	call	0x7332	; 0x7332 <_Z21avr_eeprom_write_wordjj>
			}
		}
		break;
    79f4:	73 c1       	rjmp	.+742    	; 0x7cdc <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x85c>
		
		case ID_Period_Seconds:
		{
			if(*(int16_t*)val != (int16_t)eeprom_read_word((const uint16_t *)&(EepromManager::ee_vars.ID_period_seconds)))
    79f6:	8d a9       	ldd	r24, Y+53	; 0x35
    79f8:	9e a9       	ldd	r25, Y+54	; 0x36
    79fa:	fc 01       	movw	r30, r24
    79fc:	00 81       	ld	r16, Z
    79fe:	11 81       	ldd	r17, Z+1	; 0x01
    7a00:	8b e8       	ldi	r24, 0x8B	; 139
    7a02:	90 e0       	ldi	r25, 0x00	; 0
    7a04:	0e 94 3f 7c 	call	0xf87e	; 0xf87e <eeprom_read_word>
    7a08:	08 17       	cp	r16, r24
    7a0a:	19 07       	cpc	r17, r25
    7a0c:	09 f4       	brne	.+2      	; 0x7a10 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x590>
    7a0e:	68 c1       	rjmp	.+720    	; 0x7ce0 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x860>
			{
				avr_eeprom_write_word(ID_Period_Seconds, *(uint16_t*)val);
    7a10:	8d a9       	ldd	r24, Y+53	; 0x35
    7a12:	9e a9       	ldd	r25, Y+54	; 0x36
    7a14:	fc 01       	movw	r30, r24
    7a16:	80 81       	ld	r24, Z
    7a18:	91 81       	ldd	r25, Z+1	; 0x01
    7a1a:	bc 01       	movw	r22, r24
    7a1c:	8b e8       	ldi	r24, 0x8B	; 139
    7a1e:	90 e0       	ldi	r25, 0x00	; 0
    7a20:	0e 94 99 39 	call	0x7332	; 0x7332 <_Z21avr_eeprom_write_wordjj>
			}
		}
		break;
    7a24:	5d c1       	rjmp	.+698    	; 0x7ce0 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x860>
		
		case Intra_Cycle_Delay_Seconds:
		{
			if(*(int16_t*)val != (int16_t)eeprom_read_word((const uint16_t *)&(EepromManager::ee_vars.intra_cycle_delay_time)))
    7a26:	8d a9       	ldd	r24, Y+53	; 0x35
    7a28:	9e a9       	ldd	r25, Y+54	; 0x36
    7a2a:	fc 01       	movw	r30, r24
    7a2c:	00 81       	ld	r16, Z
    7a2e:	11 81       	ldd	r17, Z+1	; 0x01
    7a30:	81 e9       	ldi	r24, 0x91	; 145
    7a32:	90 e0       	ldi	r25, 0x00	; 0
    7a34:	0e 94 3f 7c 	call	0xf87e	; 0xf87e <eeprom_read_word>
    7a38:	08 17       	cp	r16, r24
    7a3a:	19 07       	cpc	r17, r25
    7a3c:	09 f4       	brne	.+2      	; 0x7a40 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x5c0>
    7a3e:	52 c1       	rjmp	.+676    	; 0x7ce4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x864>
			{
				avr_eeprom_write_word(Intra_Cycle_Delay_Seconds, *(uint16_t*)val);
    7a40:	8d a9       	ldd	r24, Y+53	; 0x35
    7a42:	9e a9       	ldd	r25, Y+54	; 0x36
    7a44:	fc 01       	movw	r30, r24
    7a46:	80 81       	ld	r24, Z
    7a48:	91 81       	ldd	r25, Z+1	; 0x01
    7a4a:	bc 01       	movw	r22, r24
    7a4c:	81 e9       	ldi	r24, 0x91	; 145
    7a4e:	90 e0       	ldi	r25, 0x00	; 0
    7a50:	0e 94 99 39 	call	0x7332	; 0x7332 <_Z21avr_eeprom_write_wordjj>
			}		
		}
		break;
    7a54:	47 c1       	rjmp	.+654    	; 0x7ce4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x864>

		case Eeprom_initialization_flag:
		{
			if(*(int16_t*)val != (int16_t)eeprom_read_word((const uint16_t *)&(EepromManager::ee_vars.eeprom_initialization_flag)))
    7a56:	8d a9       	ldd	r24, Y+53	; 0x35
    7a58:	9e a9       	ldd	r25, Y+54	; 0x36
    7a5a:	fc 01       	movw	r30, r24
    7a5c:	00 81       	ld	r16, Z
    7a5e:	11 81       	ldd	r17, Z+1	; 0x01
    7a60:	80 e0       	ldi	r24, 0x00	; 0
    7a62:	90 e0       	ldi	r25, 0x00	; 0
    7a64:	0e 94 3f 7c 	call	0xf87e	; 0xf87e <eeprom_read_word>
    7a68:	08 17       	cp	r16, r24
    7a6a:	19 07       	cpc	r17, r25
    7a6c:	09 f4       	brne	.+2      	; 0x7a70 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x5f0>
    7a6e:	3c c1       	rjmp	.+632    	; 0x7ce8 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x868>
			{
				avr_eeprom_write_word(Eeprom_initialization_flag, *(uint16_t*)val);
    7a70:	8d a9       	ldd	r24, Y+53	; 0x35
    7a72:	9e a9       	ldd	r25, Y+54	; 0x36
    7a74:	fc 01       	movw	r30, r24
    7a76:	80 81       	ld	r24, Z
    7a78:	91 81       	ldd	r25, Z+1	; 0x01
    7a7a:	bc 01       	movw	r22, r24
    7a7c:	80 e0       	ldi	r24, 0x00	; 0
    7a7e:	90 e0       	ldi	r25, 0x00	; 0
    7a80:	0e 94 99 39 	call	0x7332	; 0x7332 <_Z21avr_eeprom_write_wordjj>
			}		
		}
		break;
    7a84:	31 c1       	rjmp	.+610    	; 0x7ce8 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x868>
		
		case FoxA_pattern_text:
		{
			int cnt = 0;
    7a86:	1e 8a       	std	Y+22, r1	; 0x16
    7a88:	1f 8a       	std	Y+23, r1	; 0x17
			char* char_addr = (char*)val;
    7a8a:	8d a9       	ldd	r24, Y+53	; 0x35
    7a8c:	9e a9       	ldd	r25, Y+54	; 0x36
    7a8e:	88 8f       	std	Y+24, r24	; 0x18
    7a90:	99 8f       	std	Y+25, r25	; 0x19
			char c = *char_addr++;
    7a92:	88 8d       	ldd	r24, Y+24	; 0x18
    7a94:	99 8d       	ldd	r25, Y+25	; 0x19
    7a96:	9c 01       	movw	r18, r24
    7a98:	2f 5f       	subi	r18, 0xFF	; 255
    7a9a:	3f 4f       	sbci	r19, 0xFF	; 255
    7a9c:	28 8f       	std	Y+24, r18	; 0x18
    7a9e:	39 8f       	std	Y+25, r19	; 0x19
    7aa0:	fc 01       	movw	r30, r24
    7aa2:	80 81       	ld	r24, Z
    7aa4:	8a 8f       	std	Y+26, r24	; 0x1a
			char q;
			
			eeprom_addr_t j = (eeprom_addr_t)FoxA_pattern_text;
    7aa6:	8e eb       	ldi	r24, 0xBE	; 190
    7aa8:	90 e0       	ldi	r25, 0x00	; 0
    7aaa:	8b 8f       	std	Y+27, r24	; 0x1b
    7aac:	9c 8f       	std	Y+28, r25	; 0x1c

			while(c && (cnt<MAX_PATTERN_TEXT_LENGTH))
    7aae:	8a 8d       	ldd	r24, Y+26	; 0x1a
    7ab0:	88 23       	and	r24, r24
    7ab2:	39 f1       	breq	.+78     	; 0x7b02 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x682>
    7ab4:	8e 89       	ldd	r24, Y+22	; 0x16
    7ab6:	9f 89       	ldd	r25, Y+23	; 0x17
    7ab8:	44 97       	sbiw	r24, 0x14	; 20
    7aba:	1c f5       	brge	.+70     	; 0x7b02 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x682>
			{
				q = (char)eeprom_read_byte((uint8_t*)j);
    7abc:	8b 8d       	ldd	r24, Y+27	; 0x1b
    7abe:	9c 8d       	ldd	r25, Y+28	; 0x1c
    7ac0:	0e 94 30 7c 	call	0xf860	; 0xf860 <eeprom_read_byte>
    7ac4:	8e a7       	std	Y+46, r24	; 0x2e
				if(c != q)
    7ac6:	9a 8d       	ldd	r25, Y+26	; 0x1a
    7ac8:	8e a5       	ldd	r24, Y+46	; 0x2e
    7aca:	98 17       	cp	r25, r24
    7acc:	29 f0       	breq	.+10     	; 0x7ad8 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x658>
				{
					avr_eeprom_write_byte(j, c);
    7ace:	8b 8d       	ldd	r24, Y+27	; 0x1b
    7ad0:	9c 8d       	ldd	r25, Y+28	; 0x1c
    7ad2:	6a 8d       	ldd	r22, Y+26	; 0x1a
    7ad4:	0e 94 6a 39 	call	0x72d4	; 0x72d4 <_Z21avr_eeprom_write_bytejh>
				}
				
				cnt++;
    7ad8:	8e 89       	ldd	r24, Y+22	; 0x16
    7ada:	9f 89       	ldd	r25, Y+23	; 0x17
    7adc:	01 96       	adiw	r24, 0x01	; 1
    7ade:	8e 8b       	std	Y+22, r24	; 0x16
    7ae0:	9f 8b       	std	Y+23, r25	; 0x17
				c = *char_addr++;
    7ae2:	88 8d       	ldd	r24, Y+24	; 0x18
    7ae4:	99 8d       	ldd	r25, Y+25	; 0x19
    7ae6:	9c 01       	movw	r18, r24
    7ae8:	2f 5f       	subi	r18, 0xFF	; 255
    7aea:	3f 4f       	sbci	r19, 0xFF	; 255
    7aec:	28 8f       	std	Y+24, r18	; 0x18
    7aee:	39 8f       	std	Y+25, r19	; 0x19
    7af0:	fc 01       	movw	r30, r24
    7af2:	80 81       	ld	r24, Z
    7af4:	8a 8f       	std	Y+26, r24	; 0x1a
				j++;
    7af6:	8b 8d       	ldd	r24, Y+27	; 0x1b
    7af8:	9c 8d       	ldd	r25, Y+28	; 0x1c
    7afa:	01 96       	adiw	r24, 0x01	; 1
    7afc:	8b 8f       	std	Y+27, r24	; 0x1b
    7afe:	9c 8f       	std	Y+28, r25	; 0x1c
			char c = *char_addr++;
			char q;
			
			eeprom_addr_t j = (eeprom_addr_t)FoxA_pattern_text;

			while(c && (cnt<MAX_PATTERN_TEXT_LENGTH))
    7b00:	d6 cf       	rjmp	.-84     	; 0x7aae <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x62e>
				cnt++;
				c = *char_addr++;
				j++;
			}

			avr_eeprom_write_byte(j, 0);
    7b02:	8b 8d       	ldd	r24, Y+27	; 0x1b
    7b04:	9c 8d       	ldd	r25, Y+28	; 0x1c
    7b06:	60 e0       	ldi	r22, 0x00	; 0
    7b08:	0e 94 6a 39 	call	0x72d4	; 0x72d4 <_Z21avr_eeprom_write_bytejh>
		}
		break;
    7b0c:	f0 c0       	rjmp	.+480    	; 0x7cee <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x86e>
		
		case FoxB_pattern_text:
		{
			int cnt = 0;
    7b0e:	1d 8e       	std	Y+29, r1	; 0x1d
    7b10:	1e 8e       	std	Y+30, r1	; 0x1e
			char* char_addr = (char*)val;
    7b12:	8d a9       	ldd	r24, Y+53	; 0x35
    7b14:	9e a9       	ldd	r25, Y+54	; 0x36
    7b16:	8f 8f       	std	Y+31, r24	; 0x1f
    7b18:	98 a3       	std	Y+32, r25	; 0x20
			char c = *char_addr++;
    7b1a:	8f 8d       	ldd	r24, Y+31	; 0x1f
    7b1c:	98 a1       	ldd	r25, Y+32	; 0x20
    7b1e:	9c 01       	movw	r18, r24
    7b20:	2f 5f       	subi	r18, 0xFF	; 255
    7b22:	3f 4f       	sbci	r19, 0xFF	; 255
    7b24:	2f 8f       	std	Y+31, r18	; 0x1f
    7b26:	38 a3       	std	Y+32, r19	; 0x20
    7b28:	fc 01       	movw	r30, r24
    7b2a:	80 81       	ld	r24, Z
    7b2c:	89 a3       	std	Y+33, r24	; 0x21
			char q;
			
			eeprom_addr_t j = (eeprom_addr_t)FoxB_pattern_text;
    7b2e:	87 ed       	ldi	r24, 0xD7	; 215
    7b30:	90 e0       	ldi	r25, 0x00	; 0
    7b32:	8a a3       	std	Y+34, r24	; 0x22
    7b34:	9b a3       	std	Y+35, r25	; 0x23

			while(c && (cnt<MAX_PATTERN_TEXT_LENGTH))
    7b36:	89 a1       	ldd	r24, Y+33	; 0x21
    7b38:	88 23       	and	r24, r24
    7b3a:	39 f1       	breq	.+78     	; 0x7b8a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x70a>
    7b3c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    7b3e:	9e 8d       	ldd	r25, Y+30	; 0x1e
    7b40:	44 97       	sbiw	r24, 0x14	; 20
    7b42:	1c f5       	brge	.+70     	; 0x7b8a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x70a>
			{
				q = (char)eeprom_read_byte((uint8_t*)j);
    7b44:	8a a1       	ldd	r24, Y+34	; 0x22
    7b46:	9b a1       	ldd	r25, Y+35	; 0x23
    7b48:	0e 94 30 7c 	call	0xf860	; 0xf860 <eeprom_read_byte>
    7b4c:	8f a7       	std	Y+47, r24	; 0x2f
				if(c != q)
    7b4e:	99 a1       	ldd	r25, Y+33	; 0x21
    7b50:	8f a5       	ldd	r24, Y+47	; 0x2f
    7b52:	98 17       	cp	r25, r24
    7b54:	29 f0       	breq	.+10     	; 0x7b60 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x6e0>
				{
					avr_eeprom_write_byte(j, c);
    7b56:	8a a1       	ldd	r24, Y+34	; 0x22
    7b58:	9b a1       	ldd	r25, Y+35	; 0x23
    7b5a:	69 a1       	ldd	r22, Y+33	; 0x21
    7b5c:	0e 94 6a 39 	call	0x72d4	; 0x72d4 <_Z21avr_eeprom_write_bytejh>
				}
				
				cnt++;
    7b60:	8d 8d       	ldd	r24, Y+29	; 0x1d
    7b62:	9e 8d       	ldd	r25, Y+30	; 0x1e
    7b64:	01 96       	adiw	r24, 0x01	; 1
    7b66:	8d 8f       	std	Y+29, r24	; 0x1d
    7b68:	9e 8f       	std	Y+30, r25	; 0x1e
				c = *char_addr++;
    7b6a:	8f 8d       	ldd	r24, Y+31	; 0x1f
    7b6c:	98 a1       	ldd	r25, Y+32	; 0x20
    7b6e:	9c 01       	movw	r18, r24
    7b70:	2f 5f       	subi	r18, 0xFF	; 255
    7b72:	3f 4f       	sbci	r19, 0xFF	; 255
    7b74:	2f 8f       	std	Y+31, r18	; 0x1f
    7b76:	38 a3       	std	Y+32, r19	; 0x20
    7b78:	fc 01       	movw	r30, r24
    7b7a:	80 81       	ld	r24, Z
    7b7c:	89 a3       	std	Y+33, r24	; 0x21
				j++;
    7b7e:	8a a1       	ldd	r24, Y+34	; 0x22
    7b80:	9b a1       	ldd	r25, Y+35	; 0x23
    7b82:	01 96       	adiw	r24, 0x01	; 1
    7b84:	8a a3       	std	Y+34, r24	; 0x22
    7b86:	9b a3       	std	Y+35, r25	; 0x23
			char c = *char_addr++;
			char q;
			
			eeprom_addr_t j = (eeprom_addr_t)FoxB_pattern_text;

			while(c && (cnt<MAX_PATTERN_TEXT_LENGTH))
    7b88:	d6 cf       	rjmp	.-84     	; 0x7b36 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x6b6>
				cnt++;
				c = *char_addr++;
				j++;
			}

			avr_eeprom_write_byte(j, 0);
    7b8a:	8a a1       	ldd	r24, Y+34	; 0x22
    7b8c:	9b a1       	ldd	r25, Y+35	; 0x23
    7b8e:	60 e0       	ldi	r22, 0x00	; 0
    7b90:	0e 94 6a 39 	call	0x72d4	; 0x72d4 <_Z21avr_eeprom_write_bytejh>
		}
		break;
    7b94:	ac c0       	rjmp	.+344    	; 0x7cee <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x86e>
		
		case FoxC_pattern_text:
		{
			int cnt = 0;
    7b96:	1c a2       	std	Y+36, r1	; 0x24
    7b98:	1d a2       	std	Y+37, r1	; 0x25
			char* char_addr = (char*)val;
    7b9a:	8d a9       	ldd	r24, Y+53	; 0x35
    7b9c:	9e a9       	ldd	r25, Y+54	; 0x36
    7b9e:	8e a3       	std	Y+38, r24	; 0x26
    7ba0:	9f a3       	std	Y+39, r25	; 0x27
			char c = *char_addr++;
    7ba2:	8e a1       	ldd	r24, Y+38	; 0x26
    7ba4:	9f a1       	ldd	r25, Y+39	; 0x27
    7ba6:	9c 01       	movw	r18, r24
    7ba8:	2f 5f       	subi	r18, 0xFF	; 255
    7baa:	3f 4f       	sbci	r19, 0xFF	; 255
    7bac:	2e a3       	std	Y+38, r18	; 0x26
    7bae:	3f a3       	std	Y+39, r19	; 0x27
    7bb0:	fc 01       	movw	r30, r24
    7bb2:	80 81       	ld	r24, Z
    7bb4:	88 a7       	std	Y+40, r24	; 0x28
			char q;
			
			eeprom_addr_t j = (eeprom_addr_t)FoxC_pattern_text;
    7bb6:	80 ef       	ldi	r24, 0xF0	; 240
    7bb8:	90 e0       	ldi	r25, 0x00	; 0
    7bba:	89 a7       	std	Y+41, r24	; 0x29
    7bbc:	9a a7       	std	Y+42, r25	; 0x2a

			while(c && (cnt<MAX_PATTERN_TEXT_LENGTH))
    7bbe:	88 a5       	ldd	r24, Y+40	; 0x28
    7bc0:	88 23       	and	r24, r24
    7bc2:	39 f1       	breq	.+78     	; 0x7c12 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x792>
    7bc4:	8c a1       	ldd	r24, Y+36	; 0x24
    7bc6:	9d a1       	ldd	r25, Y+37	; 0x25
    7bc8:	44 97       	sbiw	r24, 0x14	; 20
    7bca:	1c f5       	brge	.+70     	; 0x7c12 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x792>
			{
				q = (char)eeprom_read_byte((uint8_t*)j);
    7bcc:	89 a5       	ldd	r24, Y+41	; 0x29
    7bce:	9a a5       	ldd	r25, Y+42	; 0x2a
    7bd0:	0e 94 30 7c 	call	0xf860	; 0xf860 <eeprom_read_byte>
    7bd4:	88 ab       	std	Y+48, r24	; 0x30
				if(c != q)
    7bd6:	98 a5       	ldd	r25, Y+40	; 0x28
    7bd8:	88 a9       	ldd	r24, Y+48	; 0x30
    7bda:	98 17       	cp	r25, r24
    7bdc:	29 f0       	breq	.+10     	; 0x7be8 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x768>
				{
					avr_eeprom_write_byte(j, c);
    7bde:	89 a5       	ldd	r24, Y+41	; 0x29
    7be0:	9a a5       	ldd	r25, Y+42	; 0x2a
    7be2:	68 a5       	ldd	r22, Y+40	; 0x28
    7be4:	0e 94 6a 39 	call	0x72d4	; 0x72d4 <_Z21avr_eeprom_write_bytejh>
				}
				
				cnt++;
    7be8:	8c a1       	ldd	r24, Y+36	; 0x24
    7bea:	9d a1       	ldd	r25, Y+37	; 0x25
    7bec:	01 96       	adiw	r24, 0x01	; 1
    7bee:	8c a3       	std	Y+36, r24	; 0x24
    7bf0:	9d a3       	std	Y+37, r25	; 0x25
				c = *char_addr++;
    7bf2:	8e a1       	ldd	r24, Y+38	; 0x26
    7bf4:	9f a1       	ldd	r25, Y+39	; 0x27
    7bf6:	9c 01       	movw	r18, r24
    7bf8:	2f 5f       	subi	r18, 0xFF	; 255
    7bfa:	3f 4f       	sbci	r19, 0xFF	; 255
    7bfc:	2e a3       	std	Y+38, r18	; 0x26
    7bfe:	3f a3       	std	Y+39, r19	; 0x27
    7c00:	fc 01       	movw	r30, r24
    7c02:	80 81       	ld	r24, Z
    7c04:	88 a7       	std	Y+40, r24	; 0x28
				j++;
    7c06:	89 a5       	ldd	r24, Y+41	; 0x29
    7c08:	9a a5       	ldd	r25, Y+42	; 0x2a
    7c0a:	01 96       	adiw	r24, 0x01	; 1
    7c0c:	89 a7       	std	Y+41, r24	; 0x29
    7c0e:	9a a7       	std	Y+42, r25	; 0x2a
			char c = *char_addr++;
			char q;
			
			eeprom_addr_t j = (eeprom_addr_t)FoxC_pattern_text;

			while(c && (cnt<MAX_PATTERN_TEXT_LENGTH))
    7c10:	d6 cf       	rjmp	.-84     	; 0x7bbe <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x73e>
				cnt++;
				c = *char_addr++;
				j++;
			}

			avr_eeprom_write_byte(j, 0);
    7c12:	89 a5       	ldd	r24, Y+41	; 0x29
    7c14:	9a a5       	ldd	r25, Y+42	; 0x2a
    7c16:	60 e0       	ldi	r22, 0x00	; 0
    7c18:	0e 94 6a 39 	call	0x72d4	; 0x72d4 <_Z21avr_eeprom_write_bytejh>
		}
		break;
    7c1c:	68 c0       	rjmp	.+208    	; 0x7cee <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x86e>
		
		case Voltage_threshold:
		{
			if(*(float*)val != eeprom_read_float(&(EepromManager::ee_vars.voltage_threshold)))
    7c1e:	8d a9       	ldd	r24, Y+53	; 0x35
    7c20:	9e a9       	ldd	r25, Y+54	; 0x36
    7c22:	fc 01       	movw	r30, r24
    7c24:	c0 80       	ld	r12, Z
    7c26:	d1 80       	ldd	r13, Z+1	; 0x01
    7c28:	e2 80       	ldd	r14, Z+2	; 0x02
    7c2a:	f3 80       	ldd	r15, Z+3	; 0x03
    7c2c:	89 e0       	ldi	r24, 0x09	; 9
    7c2e:	91 e0       	ldi	r25, 0x01	; 1
    7c30:	0e 94 38 7c 	call	0xf870	; 0xf870 <eeprom_read_dword>
    7c34:	dc 01       	movw	r26, r24
    7c36:	cb 01       	movw	r24, r22
    7c38:	9c 01       	movw	r18, r24
    7c3a:	ad 01       	movw	r20, r26
    7c3c:	c7 01       	movw	r24, r14
    7c3e:	b6 01       	movw	r22, r12
    7c40:	0e 94 ca 72 	call	0xe594	; 0xe594 <__cmpsf2>
    7c44:	88 23       	and	r24, r24
    7c46:	09 f4       	brne	.+2      	; 0x7c4a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x7ca>
			{
				avr_eeprom_write_float(Voltage_threshold, *(float*)val);
			}
		}
		break;
    7c48:	52 c0       	rjmp	.+164    	; 0x7cee <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x86e>
		
		case Voltage_threshold:
		{
			if(*(float*)val != eeprom_read_float(&(EepromManager::ee_vars.voltage_threshold)))
			{
				avr_eeprom_write_float(Voltage_threshold, *(float*)val);
    7c4a:	8d a9       	ldd	r24, Y+53	; 0x35
    7c4c:	9e a9       	ldd	r25, Y+54	; 0x36
    7c4e:	fc 01       	movw	r30, r24
    7c50:	80 81       	ld	r24, Z
    7c52:	91 81       	ldd	r25, Z+1	; 0x01
    7c54:	a2 81       	ldd	r26, Z+2	; 0x02
    7c56:	b3 81       	ldd	r27, Z+3	; 0x03
    7c58:	ac 01       	movw	r20, r24
    7c5a:	bd 01       	movw	r22, r26
    7c5c:	89 e0       	ldi	r24, 0x09	; 9
    7c5e:	91 e0       	ldi	r25, 0x01	; 1
    7c60:	0e 94 06 3a 	call	0x740c	; 0x740c <_Z22avr_eeprom_write_floatjf>
			}
		}
		break;
    7c64:	44 c0       	rjmp	.+136    	; 0x7cee <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x86e>
		
		case Clock_calibration:
		{
			if(*(uint16_t*)val != eeprom_read_word(&(EepromManager::ee_vars.clock_calibration)))
    7c66:	8d a9       	ldd	r24, Y+53	; 0x35
    7c68:	9e a9       	ldd	r25, Y+54	; 0x36
    7c6a:	fc 01       	movw	r30, r24
    7c6c:	00 81       	ld	r16, Z
    7c6e:	11 81       	ldd	r17, Z+1	; 0x01
    7c70:	81 e1       	ldi	r24, 0x11	; 17
    7c72:	91 e0       	ldi	r25, 0x01	; 1
    7c74:	0e 94 3f 7c 	call	0xf87e	; 0xf87e <eeprom_read_word>
    7c78:	08 17       	cp	r16, r24
    7c7a:	19 07       	cpc	r17, r25
    7c7c:	b9 f1       	breq	.+110    	; 0x7cec <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x86c>
			{
				avr_eeprom_write_word(Clock_calibration, *(uint16_t*)val);
    7c7e:	8d a9       	ldd	r24, Y+53	; 0x35
    7c80:	9e a9       	ldd	r25, Y+54	; 0x36
    7c82:	fc 01       	movw	r30, r24
    7c84:	80 81       	ld	r24, Z
    7c86:	91 81       	ldd	r25, Z+1	; 0x01
    7c88:	bc 01       	movw	r22, r24
    7c8a:	81 e1       	ldi	r24, 0x11	; 17
    7c8c:	91 e0       	ldi	r25, 0x01	; 1
    7c8e:	0e 94 99 39 	call	0x7332	; 0x7332 <_Z21avr_eeprom_write_wordjj>
			}
		}
		break;
    7c92:	2c c0       	rjmp	.+88     	; 0x7cec <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x86c>

void EepromManager::updateEEPROMVar(EE_var_t v, void* val)
{
	if(!val)
	{
		return;
    7c94:	00 00       	nop
    7c96:	2b c0       	rjmp	.+86     	; 0x7cee <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x86e>

		default:
		{

		}
		break;
    7c98:	00 00       	nop
    7c9a:	29 c0       	rjmp	.+82     	; 0x7cee <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x86e>
			if(*(uint32_t*)val != eeprom_read_dword(&(EepromManager::ee_vars.frequency)))
			{
				avr_eeprom_write_dword(Frequency, *(uint32_t*)val);
			}	
		}
		break;
    7c9c:	00 00       	nop
    7c9e:	27 c0       	rjmp	.+78     	; 0x7cee <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x86e>
			if(*(uint32_t*)val != eeprom_read_dword(&(EepromManager::ee_vars.rtty_offset)))
			{
				avr_eeprom_write_dword(RTTY_offset, *(uint32_t*)val);
			}
		}
		break;
    7ca0:	00 00       	nop
    7ca2:	25 c0       	rjmp	.+74     	; 0x7cee <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x86e>
			if(*(uint16_t*)val != eeprom_read_word(&(EepromManager::ee_vars.rf_power)))
			{
				avr_eeprom_write_word(RF_Power, *(uint16_t*)val);
			}			
		}
		break;
    7ca4:	00 00       	nop
    7ca6:	23 c0       	rjmp	.+70     	; 0x7cee <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x86e>
			if(*(uint8_t*)val != eeprom_read_byte(&(EepromManager::ee_vars.id_codespeed)))
			{
				avr_eeprom_write_byte(Id_codespeed, *(uint8_t*)val);
			}
		}
		break;
    7ca8:	00 00       	nop
    7caa:	21 c0       	rjmp	.+66     	; 0x7cee <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x86e>
			if(*(uint8_t*)val != eeprom_read_byte((uint8_t*)&(EepromManager::ee_vars.fox_setting)))
			{
				avr_eeprom_write_byte(Fox_setting, *(uint8_t*)val);
			}			
		}
		break;
    7cac:	00 00       	nop
    7cae:	1f c0       	rjmp	.+62     	; 0x7cee <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x86e>
			if(*(uint8_t*)val != eeprom_read_byte((uint8_t*)&(EepromManager::ee_vars.master_setting)))
			{
				avr_eeprom_write_byte(Master_setting, *(uint8_t*)val);
			}
		}
		break;
    7cb0:	00 00       	nop
    7cb2:	1d c0       	rjmp	.+58     	; 0x7cee <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x86e>
			if(*(uint8_t*)val != eeprom_read_byte((uint8_t*)&(EepromManager::ee_vars.event_setting)))
			{
				avr_eeprom_write_byte(Event_setting, *(uint8_t*)val);
			}
		}
		break;
    7cb4:	00 00       	nop
    7cb6:	1b c0       	rjmp	.+54     	; 0x7cee <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x86e>
			if(*(uint32_t*)val != eeprom_read_dword(&(EepromManager::ee_vars.foxoring_frequencyA)))
			{
				avr_eeprom_write_dword(Foxoring_FrequencyA, *(uint32_t*)val);
			}		
		}
		break;
    7cb8:	00 00       	nop
    7cba:	19 c0       	rjmp	.+50     	; 0x7cee <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x86e>
			if(*(uint32_t*)val != eeprom_read_dword(&(EepromManager::ee_vars.foxoring_frequencyB)))
			{
				avr_eeprom_write_dword(Foxoring_FrequencyB, *(uint32_t*)val);
			}
		}
		break;
    7cbc:	00 00       	nop
    7cbe:	17 c0       	rjmp	.+46     	; 0x7cee <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x86e>
			if(*(uint32_t*)val != eeprom_read_dword(&(EepromManager::ee_vars.foxoring_frequencyC)))
			{
				avr_eeprom_write_dword(Foxoring_FrequencyC, *(uint32_t*)val);
			}
		}
		break;
    7cc0:	00 00       	nop
    7cc2:	15 c0       	rjmp	.+42     	; 0x7cee <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x86e>
			if(*(uint8_t*)val != eeprom_read_byte((uint8_t*)&(EepromManager::ee_vars.foxoring_fox_setting)))
			{
				avr_eeprom_write_byte(Foxoring_fox_setting, *(uint8_t*)val);
			}		
		}
		break;
    7cc4:	00 00       	nop
    7cc6:	13 c0       	rjmp	.+38     	; 0x7cee <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x86e>
			if(*(uint32_t*)val != eeprom_read_dword(&(EepromManager::ee_vars.event_start_epoch)))
			{
				avr_eeprom_write_dword(Event_start_epoch, *(uint32_t*)val);
			}
		}
		break;
    7cc8:	00 00       	nop
    7cca:	11 c0       	rjmp	.+34     	; 0x7cee <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x86e>
			if(*(uint32_t*)val != eeprom_read_dword(&(EepromManager::ee_vars.event_finish_epoch)))
			{
				avr_eeprom_write_dword(Event_finish_epoch, *(uint32_t*)val);
			}		
		}
		break;
    7ccc:	00 00       	nop
    7cce:	0f c0       	rjmp	.+30     	; 0x7cee <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x86e>
			if(*(uint8_t*)val != eeprom_read_byte(&(EepromManager::ee_vars.utc_offset)))
			{
				avr_eeprom_write_byte(Utc_offset, *(uint8_t*)val);
			}		
		}
		break;
    7cd0:	00 00       	nop
    7cd2:	0d c0       	rjmp	.+26     	; 0x7cee <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x86e>
			if(*(uint8_t*)val != eeprom_read_byte(&(EepromManager::ee_vars.pattern_codespeed)))
			{
				avr_eeprom_write_byte(Pattern_Code_Speed, *(uint8_t*)val);
			}
		}
		break;
    7cd4:	00 00       	nop
    7cd6:	0b c0       	rjmp	.+22     	; 0x7cee <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x86e>
			if(*(int16_t*)val != (int16_t)eeprom_read_word((const uint16_t *)&(EepromManager::ee_vars.off_air_seconds)))
			{
				avr_eeprom_write_word(Off_Air_Seconds, *(uint16_t*)val);
			}
		}
		break;
    7cd8:	00 00       	nop
    7cda:	09 c0       	rjmp	.+18     	; 0x7cee <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x86e>
			if(*(int16_t*)val != (int16_t)eeprom_read_word((const uint16_t *)&(EepromManager::ee_vars.on_air_seconds)))
			{
				avr_eeprom_write_word(On_Air_Seconds, *(uint16_t*)val);
			}
		}
		break;
    7cdc:	00 00       	nop
    7cde:	07 c0       	rjmp	.+14     	; 0x7cee <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x86e>
			if(*(int16_t*)val != (int16_t)eeprom_read_word((const uint16_t *)&(EepromManager::ee_vars.ID_period_seconds)))
			{
				avr_eeprom_write_word(ID_Period_Seconds, *(uint16_t*)val);
			}
		}
		break;
    7ce0:	00 00       	nop
    7ce2:	05 c0       	rjmp	.+10     	; 0x7cee <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x86e>
			if(*(int16_t*)val != (int16_t)eeprom_read_word((const uint16_t *)&(EepromManager::ee_vars.intra_cycle_delay_time)))
			{
				avr_eeprom_write_word(Intra_Cycle_Delay_Seconds, *(uint16_t*)val);
			}		
		}
		break;
    7ce4:	00 00       	nop
    7ce6:	03 c0       	rjmp	.+6      	; 0x7cee <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x86e>
			if(*(int16_t*)val != (int16_t)eeprom_read_word((const uint16_t *)&(EepromManager::ee_vars.eeprom_initialization_flag)))
			{
				avr_eeprom_write_word(Eeprom_initialization_flag, *(uint16_t*)val);
			}		
		}
		break;
    7ce8:	00 00       	nop
    7cea:	01 c0       	rjmp	.+2      	; 0x7cee <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x86e>
			if(*(uint16_t*)val != eeprom_read_word(&(EepromManager::ee_vars.clock_calibration)))
			{
				avr_eeprom_write_word(Clock_calibration, *(uint16_t*)val);
			}
		}
		break;
    7cec:	00 00       	nop
		{

		}
		break;
	}
}
    7cee:	e6 96       	adiw	r28, 0x36	; 54
    7cf0:	cd bf       	out	0x3d, r28	; 61
    7cf2:	de bf       	out	0x3e, r29	; 62
    7cf4:	df 91       	pop	r29
    7cf6:	cf 91       	pop	r28
    7cf8:	1f 91       	pop	r17
    7cfa:	0f 91       	pop	r16
    7cfc:	ff 90       	pop	r15
    7cfe:	ef 90       	pop	r14
    7d00:	df 90       	pop	r13
    7d02:	cf 90       	pop	r12
    7d04:	08 95       	ret

00007d06 <_ZN13EepromManager13saveAllEEPROMEv>:

/** 
 * Store any changed EEPROM variables
 */
void EepromManager::saveAllEEPROM(void)
{
    7d06:	cf 93       	push	r28
    7d08:	df 93       	push	r29
    7d0a:	00 d0       	rcall	.+0      	; 0x7d0c <_ZN13EepromManager13saveAllEEPROMEv+0x6>
    7d0c:	cd b7       	in	r28, 0x3d	; 61
    7d0e:	de b7       	in	r29, 0x3e	; 62
    7d10:	89 83       	std	Y+1, r24	; 0x01
    7d12:	9a 83       	std	Y+2, r25	; 0x02
	updateEEPROMVar(Id_codespeed, (void*)&g_id_codespeed);	
    7d14:	89 81       	ldd	r24, Y+1	; 0x01
    7d16:	9a 81       	ldd	r25, Y+2	; 0x02
    7d18:	4b e0       	ldi	r20, 0x0B	; 11
    7d1a:	50 e4       	ldi	r21, 0x40	; 64
    7d1c:	65 e5       	ldi	r22, 0x55	; 85
    7d1e:	70 e0       	ldi	r23, 0x00	; 0
    7d20:	0e 94 40 3a 	call	0x7480	; 0x7480 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(Fox_setting, (void*)&g_fox);
    7d24:	89 81       	ldd	r24, Y+1	; 0x01
    7d26:	9a 81       	ldd	r25, Y+2	; 0x02
    7d28:	4e e1       	ldi	r20, 0x1E	; 30
    7d2a:	50 e4       	ldi	r21, 0x40	; 64
    7d2c:	6a e5       	ldi	r22, 0x5A	; 90
    7d2e:	70 e0       	ldi	r23, 0x00	; 0
    7d30:	0e 94 40 3a 	call	0x7480	; 0x7480 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(Event_setting, (void*)&g_event);
    7d34:	89 81       	ldd	r24, Y+1	; 0x01
    7d36:	9a 81       	ldd	r25, Y+2	; 0x02
    7d38:	41 e7       	ldi	r20, 0x71	; 113
    7d3a:	55 e4       	ldi	r21, 0x45	; 69
    7d3c:	67 e9       	ldi	r22, 0x97	; 151
    7d3e:	70 e0       	ldi	r23, 0x00	; 0
    7d40:	0e 94 40 3a 	call	0x7480	; 0x7480 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(Foxoring_FrequencyA, (void*)&g_foxoring_frequencyA);
    7d44:	89 81       	ldd	r24, Y+1	; 0x01
    7d46:	9a 81       	ldd	r25, Y+2	; 0x02
    7d48:	48 e2       	ldi	r20, 0x28	; 40
    7d4a:	50 e4       	ldi	r21, 0x40	; 64
    7d4c:	6c e9       	ldi	r22, 0x9C	; 156
    7d4e:	70 e0       	ldi	r23, 0x00	; 0
    7d50:	0e 94 40 3a 	call	0x7480	; 0x7480 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(Foxoring_FrequencyB, (void*)&g_foxoring_frequencyB);
    7d54:	89 81       	ldd	r24, Y+1	; 0x01
    7d56:	9a 81       	ldd	r25, Y+2	; 0x02
    7d58:	4c e2       	ldi	r20, 0x2C	; 44
    7d5a:	50 e4       	ldi	r21, 0x40	; 64
    7d5c:	64 ea       	ldi	r22, 0xA4	; 164
    7d5e:	70 e0       	ldi	r23, 0x00	; 0
    7d60:	0e 94 40 3a 	call	0x7480	; 0x7480 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(Foxoring_FrequencyC, (void*)&g_foxoring_frequencyC);
    7d64:	89 81       	ldd	r24, Y+1	; 0x01
    7d66:	9a 81       	ldd	r25, Y+2	; 0x02
    7d68:	40 e3       	ldi	r20, 0x30	; 48
    7d6a:	50 e4       	ldi	r21, 0x40	; 64
    7d6c:	6c ea       	ldi	r22, 0xAC	; 172
    7d6e:	70 e0       	ldi	r23, 0x00	; 0
    7d70:	0e 94 40 3a 	call	0x7480	; 0x7480 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(Foxoring_fox_setting, (void*)&g_foxoring_fox);
    7d74:	89 81       	ldd	r24, Y+1	; 0x01
    7d76:	9a 81       	ldd	r25, Y+2	; 0x02
    7d78:	44 e3       	ldi	r20, 0x34	; 52
    7d7a:	50 e4       	ldi	r21, 0x40	; 64
    7d7c:	64 eb       	ldi	r22, 0xB4	; 180
    7d7e:	70 e0       	ldi	r23, 0x00	; 0
    7d80:	0e 94 40 3a 	call	0x7480	; 0x7480 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(Event_start_epoch, (void*)&g_event_start_epoch);
    7d84:	89 81       	ldd	r24, Y+1	; 0x01
    7d86:	9a 81       	ldd	r25, Y+2	; 0x02
    7d88:	48 e1       	ldi	r20, 0x18	; 24
    7d8a:	55 e4       	ldi	r21, 0x45	; 69
    7d8c:	66 e0       	ldi	r22, 0x06	; 6
    7d8e:	70 e0       	ldi	r23, 0x00	; 0
    7d90:	0e 94 40 3a 	call	0x7480	; 0x7480 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(Event_finish_epoch, (void*)&g_event_finish_epoch);
    7d94:	89 81       	ldd	r24, Y+1	; 0x01
    7d96:	9a 81       	ldd	r25, Y+2	; 0x02
    7d98:	4c e1       	ldi	r20, 0x1C	; 28
    7d9a:	55 e4       	ldi	r21, 0x45	; 69
    7d9c:	6e e0       	ldi	r22, 0x0E	; 14
    7d9e:	70 e0       	ldi	r23, 0x00	; 0
    7da0:	0e 94 40 3a 	call	0x7480	; 0x7480 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(Utc_offset, (void*)&g_utc_offset);
    7da4:	89 81       	ldd	r24, Y+1	; 0x01
    7da6:	9a 81       	ldd	r25, Y+2	; 0x02
    7da8:	4d e4       	ldi	r20, 0x4D	; 77
    7daa:	55 e4       	ldi	r21, 0x45	; 69
    7dac:	6f e5       	ldi	r22, 0x5F	; 95
    7dae:	70 e0       	ldi	r23, 0x00	; 0
    7db0:	0e 94 40 3a 	call	0x7480	; 0x7480 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(StationID_text, (void*)g_messages_text[STATION_ID]);
    7db4:	89 81       	ldd	r24, Y+1	; 0x01
    7db6:	9a 81       	ldd	r25, Y+2	; 0x02
    7db8:	4f ef       	ldi	r20, 0xFF	; 255
    7dba:	54 e4       	ldi	r21, 0x44	; 68
    7dbc:	66 e1       	ldi	r22, 0x16	; 22
    7dbe:	70 e0       	ldi	r23, 0x00	; 0
    7dc0:	0e 94 40 3a 	call	0x7480	; 0x7480 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(Pattern_text, (void*)g_messages_text[PATTERN_TEXT]);
    7dc4:	89 81       	ldd	r24, Y+1	; 0x01
    7dc6:	9a 81       	ldd	r25, Y+2	; 0x02
    7dc8:	4b ea       	ldi	r20, 0xAB	; 171
    7dca:	54 e4       	ldi	r21, 0x44	; 68
    7dcc:	6f e2       	ldi	r22, 0x2F	; 47
    7dce:	70 e0       	ldi	r23, 0x00	; 0
    7dd0:	0e 94 40 3a 	call	0x7480	; 0x7480 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(UnlockCode, (void*)g_unlockCode);
    7dd4:	89 81       	ldd	r24, Y+1	; 0x01
    7dd6:	9a 81       	ldd	r25, Y+2	; 0x02
    7dd8:	4e e4       	ldi	r20, 0x4E	; 78
    7dda:	55 e4       	ldi	r21, 0x45	; 69
    7ddc:	68 e4       	ldi	r22, 0x48	; 72
    7dde:	70 e0       	ldi	r23, 0x00	; 0
    7de0:	0e 94 40 3a 	call	0x7480	; 0x7480 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(Frequency, (void*)&g_80m_frequency);
    7de4:	89 81       	ldd	r24, Y+1	; 0x01
    7de6:	9a 81       	ldd	r25, Y+2	; 0x02
    7de8:	40 e5       	ldi	r20, 0x50	; 80
    7dea:	50 e4       	ldi	r21, 0x40	; 64
    7dec:	64 e6       	ldi	r22, 0x64	; 100
    7dee:	70 e0       	ldi	r23, 0x00	; 0
    7df0:	0e 94 40 3a 	call	0x7480	; 0x7480 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(RTTY_offset, (void*)&g_rtty_offset);
    7df4:	89 81       	ldd	r24, Y+1	; 0x01
    7df6:	9a 81       	ldd	r25, Y+2	; 0x02
    7df8:	46 e5       	ldi	r20, 0x56	; 86
    7dfa:	50 e4       	ldi	r21, 0x40	; 64
    7dfc:	6c e6       	ldi	r22, 0x6C	; 108
    7dfe:	70 e0       	ldi	r23, 0x00	; 0
    7e00:	0e 94 40 3a 	call	0x7480	; 0x7480 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(RF_Power, (void*)&g_80m_power_level_mW);
    7e04:	89 81       	ldd	r24, Y+1	; 0x01
    7e06:	9a 81       	ldd	r25, Y+2	; 0x02
    7e08:	44 e5       	ldi	r20, 0x54	; 84
    7e0a:	50 e4       	ldi	r21, 0x40	; 64
    7e0c:	64 e7       	ldi	r22, 0x74	; 116
    7e0e:	70 e0       	ldi	r23, 0x00	; 0
    7e10:	0e 94 40 3a 	call	0x7480	; 0x7480 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(Pattern_Code_Speed, (void*)&g_pattern_codespeed);
    7e14:	89 81       	ldd	r24, Y+1	; 0x01
    7e16:	9a 81       	ldd	r25, Y+2	; 0x02
    7e18:	4c e0       	ldi	r20, 0x0C	; 12
    7e1a:	50 e4       	ldi	r21, 0x40	; 64
    7e1c:	6a e7       	ldi	r22, 0x7A	; 122
    7e1e:	70 e0       	ldi	r23, 0x00	; 0
    7e20:	0e 94 40 3a 	call	0x7480	; 0x7480 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(Off_Air_Seconds, (void*)&g_off_air_seconds);
    7e24:	89 81       	ldd	r24, Y+1	; 0x01
    7e26:	9a 81       	ldd	r25, Y+2	; 0x02
    7e28:	4f e0       	ldi	r20, 0x0F	; 15
    7e2a:	50 e4       	ldi	r21, 0x40	; 64
    7e2c:	6f e7       	ldi	r22, 0x7F	; 127
    7e2e:	70 e0       	ldi	r23, 0x00	; 0
    7e30:	0e 94 40 3a 	call	0x7480	; 0x7480 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(On_Air_Seconds, (void*)&g_on_air_seconds);
    7e34:	89 81       	ldd	r24, Y+1	; 0x01
    7e36:	9a 81       	ldd	r25, Y+2	; 0x02
    7e38:	4d e0       	ldi	r20, 0x0D	; 13
    7e3a:	50 e4       	ldi	r21, 0x40	; 64
    7e3c:	65 e8       	ldi	r22, 0x85	; 133
    7e3e:	70 e0       	ldi	r23, 0x00	; 0
    7e40:	0e 94 40 3a 	call	0x7480	; 0x7480 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(ID_Period_Seconds, (void*)&g_ID_period_seconds);
    7e44:	89 81       	ldd	r24, Y+1	; 0x01
    7e46:	9a 81       	ldd	r25, Y+2	; 0x02
    7e48:	41 e1       	ldi	r20, 0x11	; 17
    7e4a:	50 e4       	ldi	r21, 0x40	; 64
    7e4c:	6b e8       	ldi	r22, 0x8B	; 139
    7e4e:	70 e0       	ldi	r23, 0x00	; 0
    7e50:	0e 94 40 3a 	call	0x7480	; 0x7480 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(Intra_Cycle_Delay_Seconds, (void*)&g_intra_cycle_delay_time);
    7e54:	89 81       	ldd	r24, Y+1	; 0x01
    7e56:	9a 81       	ldd	r25, Y+2	; 0x02
    7e58:	46 e1       	ldi	r20, 0x16	; 22
    7e5a:	55 e4       	ldi	r21, 0x45	; 69
    7e5c:	61 e9       	ldi	r22, 0x91	; 145
    7e5e:	70 e0       	ldi	r23, 0x00	; 0
    7e60:	0e 94 40 3a 	call	0x7480	; 0x7480 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(FoxA_pattern_text, (void*)g_messages_text[FOXA_PATTERN_TEXT]);
    7e64:	89 81       	ldd	r24, Y+1	; 0x01
    7e66:	9a 81       	ldd	r25, Y+2	; 0x02
    7e68:	40 ec       	ldi	r20, 0xC0	; 192
    7e6a:	54 e4       	ldi	r21, 0x44	; 68
    7e6c:	6e eb       	ldi	r22, 0xBE	; 190
    7e6e:	70 e0       	ldi	r23, 0x00	; 0
    7e70:	0e 94 40 3a 	call	0x7480	; 0x7480 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(FoxB_pattern_text, (void*)g_messages_text[FOXB_PATTERN_TEXT]);
    7e74:	89 81       	ldd	r24, Y+1	; 0x01
    7e76:	9a 81       	ldd	r25, Y+2	; 0x02
    7e78:	45 ed       	ldi	r20, 0xD5	; 213
    7e7a:	54 e4       	ldi	r21, 0x44	; 68
    7e7c:	67 ed       	ldi	r22, 0xD7	; 215
    7e7e:	70 e0       	ldi	r23, 0x00	; 0
    7e80:	0e 94 40 3a 	call	0x7480	; 0x7480 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(FoxC_pattern_text, (void*)g_messages_text[FOXC_PATTERN_TEXT]);
    7e84:	89 81       	ldd	r24, Y+1	; 0x01
    7e86:	9a 81       	ldd	r25, Y+2	; 0x02
    7e88:	4a ee       	ldi	r20, 0xEA	; 234
    7e8a:	54 e4       	ldi	r21, 0x44	; 68
    7e8c:	60 ef       	ldi	r22, 0xF0	; 240
    7e8e:	70 e0       	ldi	r23, 0x00	; 0
    7e90:	0e 94 40 3a 	call	0x7480	; 0x7480 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(Voltage_threshold, (void*)&g_voltage_threshold);
    7e94:	89 81       	ldd	r24, Y+1	; 0x01
    7e96:	9a 81       	ldd	r25, Y+2	; 0x02
    7e98:	45 e3       	ldi	r20, 0x35	; 53
    7e9a:	50 e4       	ldi	r21, 0x40	; 64
    7e9c:	69 e0       	ldi	r22, 0x09	; 9
    7e9e:	71 e0       	ldi	r23, 0x01	; 1
    7ea0:	0e 94 40 3a 	call	0x7480	; 0x7480 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(Clock_calibration, (void*)&g_clock_calibration);
    7ea4:	89 81       	ldd	r24, Y+1	; 0x01
    7ea6:	9a 81       	ldd	r25, Y+2	; 0x02
    7ea8:	49 e3       	ldi	r20, 0x39	; 57
    7eaa:	50 e4       	ldi	r21, 0x40	; 64
    7eac:	61 e1       	ldi	r22, 0x11	; 17
    7eae:	71 e0       	ldi	r23, 0x01	; 1
    7eb0:	0e 94 40 3a 	call	0x7480	; 0x7480 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
}
    7eb4:	00 00       	nop
    7eb6:	0f 90       	pop	r0
    7eb8:	0f 90       	pop	r0
    7eba:	df 91       	pop	r29
    7ebc:	cf 91       	pop	r28
    7ebe:	08 95       	ret

00007ec0 <_ZN13EepromManager11readNonVolsEv>:


bool EepromManager::readNonVols(void)
{
    7ec0:	0f 93       	push	r16
    7ec2:	1f 93       	push	r17
    7ec4:	cf 93       	push	r28
    7ec6:	df 93       	push	r29
    7ec8:	cd b7       	in	r28, 0x3d	; 61
    7eca:	de b7       	in	r29, 0x3e	; 62
    7ecc:	c5 57       	subi	r28, 0x75	; 117
    7ece:	d1 09       	sbc	r29, r1
    7ed0:	cd bf       	out	0x3d, r28	; 61
    7ed2:	de bf       	out	0x3e, r29	; 62
    7ed4:	9e 01       	movw	r18, r28
    7ed6:	2c 58       	subi	r18, 0x8C	; 140
    7ed8:	3f 4f       	sbci	r19, 0xFF	; 255
    7eda:	f9 01       	movw	r30, r18
    7edc:	80 83       	st	Z, r24
    7ede:	91 83       	std	Z+1, r25	; 0x01
	bool failure = true;
    7ee0:	81 e0       	ldi	r24, 0x01	; 1
    7ee2:	89 83       	std	Y+1, r24	; 0x01
	uint16_t i;
	uint16_t initialization_flag = eeprom_read_word(0);
    7ee4:	80 e0       	ldi	r24, 0x00	; 0
    7ee6:	90 e0       	ldi	r25, 0x00	; 0
    7ee8:	0e 94 3f 7c 	call	0xf87e	; 0xf87e <eeprom_read_word>
    7eec:	8a 87       	std	Y+10, r24	; 0x0a
    7eee:	9b 87       	std	Y+11, r25	; 0x0b

	if(initialization_flag == EEPROM_INITIALIZED_FLAG)  /* EEPROM is up to date */
    7ef0:	8a 85       	ldd	r24, Y+10	; 0x0a
    7ef2:	9b 85       	ldd	r25, Y+11	; 0x0b
    7ef4:	82 30       	cpi	r24, 0x02	; 2
    7ef6:	91 40       	sbci	r25, 0x01	; 1
    7ef8:	09 f0       	breq	.+2      	; 0x7efc <_ZN13EepromManager11readNonVolsEv+0x3c>
    7efa:	e6 c4       	rjmp	.+2508   	; 0x88c8 <__RODATA_PM_OFFSET__+0x8c8>
	{
		g_isMaster = EEPROM_MASTER_SETTING_DEFAULT; // (int8_t)eeprom_read_byte(&(EepromManager::ee_vars.master_setting));
    7efc:	10 92 70 45 	sts	0x4570, r1	; 0x804570 <g_isMaster>
		g_id_codespeed = CLAMP(MIN_CODE_SPEED_WPM, eeprom_read_byte(&(EepromManager::ee_vars.id_codespeed)), MAX_CODE_SPEED_WPM);
    7f00:	85 e5       	ldi	r24, 0x55	; 85
    7f02:	90 e0       	ldi	r25, 0x00	; 0
    7f04:	0e 94 30 7c 	call	0xf860	; 0xf860 <eeprom_read_byte>
    7f08:	8c 87       	std	Y+12, r24	; 0x0c
    7f0a:	85 e0       	ldi	r24, 0x05	; 5
    7f0c:	8d 87       	std	Y+13, r24	; 0x0d
    7f0e:	84 e1       	ldi	r24, 0x14	; 20
    7f10:	8e 87       	std	Y+14, r24	; 0x0e
    7f12:	9c 85       	ldd	r25, Y+12	; 0x0c
    7f14:	8e 85       	ldd	r24, Y+14	; 0x0e
    7f16:	89 17       	cp	r24, r25
    7f18:	40 f0       	brcs	.+16     	; 0x7f2a <_ZN13EepromManager11readNonVolsEv+0x6a>
    7f1a:	9c 85       	ldd	r25, Y+12	; 0x0c
    7f1c:	8d 85       	ldd	r24, Y+13	; 0x0d
    7f1e:	98 17       	cp	r25, r24
    7f20:	10 f4       	brcc	.+4      	; 0x7f26 <_ZN13EepromManager11readNonVolsEv+0x66>
    7f22:	8d 85       	ldd	r24, Y+13	; 0x0d
    7f24:	03 c0       	rjmp	.+6      	; 0x7f2c <_ZN13EepromManager11readNonVolsEv+0x6c>
    7f26:	8c 85       	ldd	r24, Y+12	; 0x0c
    7f28:	01 c0       	rjmp	.+2      	; 0x7f2c <_ZN13EepromManager11readNonVolsEv+0x6c>
    7f2a:	8e 85       	ldd	r24, Y+14	; 0x0e
    7f2c:	80 93 0b 40 	sts	0x400B, r24	; 0x80400b <g_id_codespeed>
		g_event = (Event_t)eeprom_read_byte((const uint8_t*)&(EepromManager::ee_vars.event_setting));
    7f30:	87 e9       	ldi	r24, 0x97	; 151
    7f32:	90 e0       	ldi	r25, 0x00	; 0
    7f34:	0e 94 30 7c 	call	0xf860	; 0xf860 <eeprom_read_byte>
    7f38:	80 93 71 45 	sts	0x4571, r24	; 0x804571 <g_event>
		g_foxoring_frequencyA = CLAMP(TX_MINIMUM_80M_FREQUENCY, eeprom_read_dword(&(EepromManager::ee_vars.foxoring_frequencyA)), TX_MAXIMUM_80M_FREQUENCY);
    7f3c:	8c e9       	ldi	r24, 0x9C	; 156
    7f3e:	90 e0       	ldi	r25, 0x00	; 0
    7f40:	0e 94 38 7c 	call	0xf870	; 0xf870 <eeprom_read_dword>
    7f44:	dc 01       	movw	r26, r24
    7f46:	cb 01       	movw	r24, r22
    7f48:	8f 87       	std	Y+15, r24	; 0x0f
    7f4a:	98 8b       	std	Y+16, r25	; 0x10
    7f4c:	a9 8b       	std	Y+17, r26	; 0x11
    7f4e:	ba 8b       	std	Y+18, r27	; 0x12
    7f50:	80 ee       	ldi	r24, 0xE0	; 224
    7f52:	97 e6       	ldi	r25, 0x67	; 103
    7f54:	a5 e3       	ldi	r26, 0x35	; 53
    7f56:	b0 e0       	ldi	r27, 0x00	; 0
    7f58:	8b 8b       	std	Y+19, r24	; 0x13
    7f5a:	9c 8b       	std	Y+20, r25	; 0x14
    7f5c:	ad 8b       	std	Y+21, r26	; 0x15
    7f5e:	be 8b       	std	Y+22, r27	; 0x16
    7f60:	80 e0       	ldi	r24, 0x00	; 0
    7f62:	99 e0       	ldi	r25, 0x09	; 9
    7f64:	ad e3       	ldi	r26, 0x3D	; 61
    7f66:	b0 e0       	ldi	r27, 0x00	; 0
    7f68:	8f 8b       	std	Y+23, r24	; 0x17
    7f6a:	98 8f       	std	Y+24, r25	; 0x18
    7f6c:	a9 8f       	std	Y+25, r26	; 0x19
    7f6e:	ba 8f       	std	Y+26, r27	; 0x1a
    7f70:	2f 85       	ldd	r18, Y+15	; 0x0f
    7f72:	38 89       	ldd	r19, Y+16	; 0x10
    7f74:	49 89       	ldd	r20, Y+17	; 0x11
    7f76:	5a 89       	ldd	r21, Y+18	; 0x12
    7f78:	8f 89       	ldd	r24, Y+23	; 0x17
    7f7a:	98 8d       	ldd	r25, Y+24	; 0x18
    7f7c:	a9 8d       	ldd	r26, Y+25	; 0x19
    7f7e:	ba 8d       	ldd	r27, Y+26	; 0x1a
    7f80:	82 17       	cp	r24, r18
    7f82:	93 07       	cpc	r25, r19
    7f84:	a4 07       	cpc	r26, r20
    7f86:	b5 07       	cpc	r27, r21
    7f88:	b8 f0       	brcs	.+46     	; 0x7fb8 <_ZN13EepromManager11readNonVolsEv+0xf8>
    7f8a:	2f 85       	ldd	r18, Y+15	; 0x0f
    7f8c:	38 89       	ldd	r19, Y+16	; 0x10
    7f8e:	49 89       	ldd	r20, Y+17	; 0x11
    7f90:	5a 89       	ldd	r21, Y+18	; 0x12
    7f92:	8b 89       	ldd	r24, Y+19	; 0x13
    7f94:	9c 89       	ldd	r25, Y+20	; 0x14
    7f96:	ad 89       	ldd	r26, Y+21	; 0x15
    7f98:	be 89       	ldd	r27, Y+22	; 0x16
    7f9a:	28 17       	cp	r18, r24
    7f9c:	39 07       	cpc	r19, r25
    7f9e:	4a 07       	cpc	r20, r26
    7fa0:	5b 07       	cpc	r21, r27
    7fa2:	28 f4       	brcc	.+10     	; 0x7fae <_ZN13EepromManager11readNonVolsEv+0xee>
    7fa4:	8b 89       	ldd	r24, Y+19	; 0x13
    7fa6:	9c 89       	ldd	r25, Y+20	; 0x14
    7fa8:	ad 89       	ldd	r26, Y+21	; 0x15
    7faa:	be 89       	ldd	r27, Y+22	; 0x16
    7fac:	09 c0       	rjmp	.+18     	; 0x7fc0 <_ZN13EepromManager11readNonVolsEv+0x100>
    7fae:	8f 85       	ldd	r24, Y+15	; 0x0f
    7fb0:	98 89       	ldd	r25, Y+16	; 0x10
    7fb2:	a9 89       	ldd	r26, Y+17	; 0x11
    7fb4:	ba 89       	ldd	r27, Y+18	; 0x12
    7fb6:	04 c0       	rjmp	.+8      	; 0x7fc0 <_ZN13EepromManager11readNonVolsEv+0x100>
    7fb8:	8f 89       	ldd	r24, Y+23	; 0x17
    7fba:	98 8d       	ldd	r25, Y+24	; 0x18
    7fbc:	a9 8d       	ldd	r26, Y+25	; 0x19
    7fbe:	ba 8d       	ldd	r27, Y+26	; 0x1a
    7fc0:	80 93 28 40 	sts	0x4028, r24	; 0x804028 <g_foxoring_frequencyA>
    7fc4:	90 93 29 40 	sts	0x4029, r25	; 0x804029 <g_foxoring_frequencyA+0x1>
    7fc8:	a0 93 2a 40 	sts	0x402A, r26	; 0x80402a <g_foxoring_frequencyA+0x2>
    7fcc:	b0 93 2b 40 	sts	0x402B, r27	; 0x80402b <g_foxoring_frequencyA+0x3>
		g_foxoring_frequencyB = CLAMP(TX_MINIMUM_80M_FREQUENCY, eeprom_read_dword(&(EepromManager::ee_vars.foxoring_frequencyB)), TX_MAXIMUM_80M_FREQUENCY);
    7fd0:	84 ea       	ldi	r24, 0xA4	; 164
    7fd2:	90 e0       	ldi	r25, 0x00	; 0
    7fd4:	0e 94 38 7c 	call	0xf870	; 0xf870 <eeprom_read_dword>
    7fd8:	dc 01       	movw	r26, r24
    7fda:	cb 01       	movw	r24, r22
    7fdc:	8b 8f       	std	Y+27, r24	; 0x1b
    7fde:	9c 8f       	std	Y+28, r25	; 0x1c
    7fe0:	ad 8f       	std	Y+29, r26	; 0x1d
    7fe2:	be 8f       	std	Y+30, r27	; 0x1e
    7fe4:	80 ee       	ldi	r24, 0xE0	; 224
    7fe6:	97 e6       	ldi	r25, 0x67	; 103
    7fe8:	a5 e3       	ldi	r26, 0x35	; 53
    7fea:	b0 e0       	ldi	r27, 0x00	; 0
    7fec:	8f 8f       	std	Y+31, r24	; 0x1f
    7fee:	98 a3       	std	Y+32, r25	; 0x20
    7ff0:	a9 a3       	std	Y+33, r26	; 0x21
    7ff2:	ba a3       	std	Y+34, r27	; 0x22
    7ff4:	80 e0       	ldi	r24, 0x00	; 0
    7ff6:	99 e0       	ldi	r25, 0x09	; 9
    7ff8:	ad e3       	ldi	r26, 0x3D	; 61
    7ffa:	b0 e0       	ldi	r27, 0x00	; 0
    7ffc:	8b a3       	std	Y+35, r24	; 0x23
    7ffe:	9c a3       	std	Y+36, r25	; 0x24
    8000:	ad a3       	std	Y+37, r26	; 0x25
    8002:	be a3       	std	Y+38, r27	; 0x26
    8004:	2b 8d       	ldd	r18, Y+27	; 0x1b
    8006:	3c 8d       	ldd	r19, Y+28	; 0x1c
    8008:	4d 8d       	ldd	r20, Y+29	; 0x1d
    800a:	5e 8d       	ldd	r21, Y+30	; 0x1e
    800c:	8b a1       	ldd	r24, Y+35	; 0x23
    800e:	9c a1       	ldd	r25, Y+36	; 0x24
    8010:	ad a1       	ldd	r26, Y+37	; 0x25
    8012:	be a1       	ldd	r27, Y+38	; 0x26
    8014:	82 17       	cp	r24, r18
    8016:	93 07       	cpc	r25, r19
    8018:	a4 07       	cpc	r26, r20
    801a:	b5 07       	cpc	r27, r21
    801c:	b8 f0       	brcs	.+46     	; 0x804c <__RODATA_PM_OFFSET__+0x4c>
    801e:	2b 8d       	ldd	r18, Y+27	; 0x1b
    8020:	3c 8d       	ldd	r19, Y+28	; 0x1c
    8022:	4d 8d       	ldd	r20, Y+29	; 0x1d
    8024:	5e 8d       	ldd	r21, Y+30	; 0x1e
    8026:	8f 8d       	ldd	r24, Y+31	; 0x1f
    8028:	98 a1       	ldd	r25, Y+32	; 0x20
    802a:	a9 a1       	ldd	r26, Y+33	; 0x21
    802c:	ba a1       	ldd	r27, Y+34	; 0x22
    802e:	28 17       	cp	r18, r24
    8030:	39 07       	cpc	r19, r25
    8032:	4a 07       	cpc	r20, r26
    8034:	5b 07       	cpc	r21, r27
    8036:	28 f4       	brcc	.+10     	; 0x8042 <__RODATA_PM_OFFSET__+0x42>
    8038:	8f 8d       	ldd	r24, Y+31	; 0x1f
    803a:	98 a1       	ldd	r25, Y+32	; 0x20
    803c:	a9 a1       	ldd	r26, Y+33	; 0x21
    803e:	ba a1       	ldd	r27, Y+34	; 0x22
    8040:	09 c0       	rjmp	.+18     	; 0x8054 <__RODATA_PM_OFFSET__+0x54>
    8042:	8b 8d       	ldd	r24, Y+27	; 0x1b
    8044:	9c 8d       	ldd	r25, Y+28	; 0x1c
    8046:	ad 8d       	ldd	r26, Y+29	; 0x1d
    8048:	be 8d       	ldd	r27, Y+30	; 0x1e
    804a:	04 c0       	rjmp	.+8      	; 0x8054 <__RODATA_PM_OFFSET__+0x54>
    804c:	8b a1       	ldd	r24, Y+35	; 0x23
    804e:	9c a1       	ldd	r25, Y+36	; 0x24
    8050:	ad a1       	ldd	r26, Y+37	; 0x25
    8052:	be a1       	ldd	r27, Y+38	; 0x26
    8054:	80 93 2c 40 	sts	0x402C, r24	; 0x80402c <g_foxoring_frequencyB>
    8058:	90 93 2d 40 	sts	0x402D, r25	; 0x80402d <g_foxoring_frequencyB+0x1>
    805c:	a0 93 2e 40 	sts	0x402E, r26	; 0x80402e <g_foxoring_frequencyB+0x2>
    8060:	b0 93 2f 40 	sts	0x402F, r27	; 0x80402f <g_foxoring_frequencyB+0x3>
		g_foxoring_frequencyC = CLAMP(TX_MINIMUM_80M_FREQUENCY, eeprom_read_dword(&(EepromManager::ee_vars.foxoring_frequencyC)), TX_MAXIMUM_80M_FREQUENCY);
    8064:	8c ea       	ldi	r24, 0xAC	; 172
    8066:	90 e0       	ldi	r25, 0x00	; 0
    8068:	0e 94 38 7c 	call	0xf870	; 0xf870 <eeprom_read_dword>
    806c:	dc 01       	movw	r26, r24
    806e:	cb 01       	movw	r24, r22
    8070:	8f a3       	std	Y+39, r24	; 0x27
    8072:	98 a7       	std	Y+40, r25	; 0x28
    8074:	a9 a7       	std	Y+41, r26	; 0x29
    8076:	ba a7       	std	Y+42, r27	; 0x2a
    8078:	80 ee       	ldi	r24, 0xE0	; 224
    807a:	97 e6       	ldi	r25, 0x67	; 103
    807c:	a5 e3       	ldi	r26, 0x35	; 53
    807e:	b0 e0       	ldi	r27, 0x00	; 0
    8080:	8b a7       	std	Y+43, r24	; 0x2b
    8082:	9c a7       	std	Y+44, r25	; 0x2c
    8084:	ad a7       	std	Y+45, r26	; 0x2d
    8086:	be a7       	std	Y+46, r27	; 0x2e
    8088:	80 e0       	ldi	r24, 0x00	; 0
    808a:	99 e0       	ldi	r25, 0x09	; 9
    808c:	ad e3       	ldi	r26, 0x3D	; 61
    808e:	b0 e0       	ldi	r27, 0x00	; 0
    8090:	8f a7       	std	Y+47, r24	; 0x2f
    8092:	98 ab       	std	Y+48, r25	; 0x30
    8094:	a9 ab       	std	Y+49, r26	; 0x31
    8096:	ba ab       	std	Y+50, r27	; 0x32
    8098:	2f a1       	ldd	r18, Y+39	; 0x27
    809a:	38 a5       	ldd	r19, Y+40	; 0x28
    809c:	49 a5       	ldd	r20, Y+41	; 0x29
    809e:	5a a5       	ldd	r21, Y+42	; 0x2a
    80a0:	8f a5       	ldd	r24, Y+47	; 0x2f
    80a2:	98 a9       	ldd	r25, Y+48	; 0x30
    80a4:	a9 a9       	ldd	r26, Y+49	; 0x31
    80a6:	ba a9       	ldd	r27, Y+50	; 0x32
    80a8:	82 17       	cp	r24, r18
    80aa:	93 07       	cpc	r25, r19
    80ac:	a4 07       	cpc	r26, r20
    80ae:	b5 07       	cpc	r27, r21
    80b0:	b8 f0       	brcs	.+46     	; 0x80e0 <__RODATA_PM_OFFSET__+0xe0>
    80b2:	2f a1       	ldd	r18, Y+39	; 0x27
    80b4:	38 a5       	ldd	r19, Y+40	; 0x28
    80b6:	49 a5       	ldd	r20, Y+41	; 0x29
    80b8:	5a a5       	ldd	r21, Y+42	; 0x2a
    80ba:	8b a5       	ldd	r24, Y+43	; 0x2b
    80bc:	9c a5       	ldd	r25, Y+44	; 0x2c
    80be:	ad a5       	ldd	r26, Y+45	; 0x2d
    80c0:	be a5       	ldd	r27, Y+46	; 0x2e
    80c2:	28 17       	cp	r18, r24
    80c4:	39 07       	cpc	r19, r25
    80c6:	4a 07       	cpc	r20, r26
    80c8:	5b 07       	cpc	r21, r27
    80ca:	28 f4       	brcc	.+10     	; 0x80d6 <__RODATA_PM_OFFSET__+0xd6>
    80cc:	8b a5       	ldd	r24, Y+43	; 0x2b
    80ce:	9c a5       	ldd	r25, Y+44	; 0x2c
    80d0:	ad a5       	ldd	r26, Y+45	; 0x2d
    80d2:	be a5       	ldd	r27, Y+46	; 0x2e
    80d4:	09 c0       	rjmp	.+18     	; 0x80e8 <__RODATA_PM_OFFSET__+0xe8>
    80d6:	8f a1       	ldd	r24, Y+39	; 0x27
    80d8:	98 a5       	ldd	r25, Y+40	; 0x28
    80da:	a9 a5       	ldd	r26, Y+41	; 0x29
    80dc:	ba a5       	ldd	r27, Y+42	; 0x2a
    80de:	04 c0       	rjmp	.+8      	; 0x80e8 <__RODATA_PM_OFFSET__+0xe8>
    80e0:	8f a5       	ldd	r24, Y+47	; 0x2f
    80e2:	98 a9       	ldd	r25, Y+48	; 0x30
    80e4:	a9 a9       	ldd	r26, Y+49	; 0x31
    80e6:	ba a9       	ldd	r27, Y+50	; 0x32
    80e8:	80 93 30 40 	sts	0x4030, r24	; 0x804030 <g_foxoring_frequencyC>
    80ec:	90 93 31 40 	sts	0x4031, r25	; 0x804031 <g_foxoring_frequencyC+0x1>
    80f0:	a0 93 32 40 	sts	0x4032, r26	; 0x804032 <g_foxoring_frequencyC+0x2>
    80f4:	b0 93 33 40 	sts	0x4033, r27	; 0x804033 <g_foxoring_frequencyC+0x3>
		g_foxoring_fox = (Fox_t)(CLAMP(FOXORING_EVENT_FOXA, eeprom_read_byte((uint8_t*)&(EepromManager::ee_vars.fox_setting)), FOXORING_EVENT_FOXC));
    80f8:	8a e5       	ldi	r24, 0x5A	; 90
    80fa:	90 e0       	ldi	r25, 0x00	; 0
    80fc:	0e 94 30 7c 	call	0xf860	; 0xf860 <eeprom_read_byte>
    8100:	8b ab       	std	Y+51, r24	; 0x33
    8102:	82 e1       	ldi	r24, 0x12	; 18
    8104:	8c ab       	std	Y+52, r24	; 0x34
    8106:	84 e1       	ldi	r24, 0x14	; 20
    8108:	8d ab       	std	Y+53, r24	; 0x35
    810a:	9b a9       	ldd	r25, Y+51	; 0x33
    810c:	8d a9       	ldd	r24, Y+53	; 0x35
    810e:	89 17       	cp	r24, r25
    8110:	20 f4       	brcc	.+8      	; 0x811a <__RODATA_PM_OFFSET__+0x11a>
    8112:	8d a9       	ldd	r24, Y+53	; 0x35
    8114:	88 2f       	mov	r24, r24
    8116:	90 e0       	ldi	r25, 0x00	; 0
    8118:	0b c0       	rjmp	.+22     	; 0x8130 <__RODATA_PM_OFFSET__+0x130>
    811a:	9b a9       	ldd	r25, Y+51	; 0x33
    811c:	8c a9       	ldd	r24, Y+52	; 0x34
    811e:	98 17       	cp	r25, r24
    8120:	20 f4       	brcc	.+8      	; 0x812a <__RODATA_PM_OFFSET__+0x12a>
    8122:	8c a9       	ldd	r24, Y+52	; 0x34
    8124:	88 2f       	mov	r24, r24
    8126:	90 e0       	ldi	r25, 0x00	; 0
    8128:	03 c0       	rjmp	.+6      	; 0x8130 <__RODATA_PM_OFFSET__+0x130>
    812a:	8b a9       	ldd	r24, Y+51	; 0x33
    812c:	88 2f       	mov	r24, r24
    812e:	90 e0       	ldi	r25, 0x00	; 0
    8130:	80 93 34 40 	sts	0x4034, r24	; 0x804034 <g_foxoring_fox>
		g_fox = (Fox_t)(CLAMP(BEACON, eeprom_read_byte((uint8_t*)&(EepromManager::ee_vars.fox_setting)), SPRINT_F5));
    8134:	8a e5       	ldi	r24, 0x5A	; 90
    8136:	90 e0       	ldi	r25, 0x00	; 0
    8138:	0e 94 30 7c 	call	0xf860	; 0xf860 <eeprom_read_byte>
    813c:	8e ab       	std	Y+54, r24	; 0x36
    813e:	1f aa       	std	Y+55, r1	; 0x37
    8140:	81 e1       	ldi	r24, 0x11	; 17
    8142:	88 af       	std	Y+56, r24	; 0x38
    8144:	9e a9       	ldd	r25, Y+54	; 0x36
    8146:	88 ad       	ldd	r24, Y+56	; 0x38
    8148:	89 17       	cp	r24, r25
    814a:	20 f4       	brcc	.+8      	; 0x8154 <__RODATA_PM_OFFSET__+0x154>
    814c:	88 ad       	ldd	r24, Y+56	; 0x38
    814e:	88 2f       	mov	r24, r24
    8150:	90 e0       	ldi	r25, 0x00	; 0
    8152:	0b c0       	rjmp	.+22     	; 0x816a <__RODATA_PM_OFFSET__+0x16a>
    8154:	9e a9       	ldd	r25, Y+54	; 0x36
    8156:	8f a9       	ldd	r24, Y+55	; 0x37
    8158:	98 17       	cp	r25, r24
    815a:	20 f4       	brcc	.+8      	; 0x8164 <__RODATA_PM_OFFSET__+0x164>
    815c:	8f a9       	ldd	r24, Y+55	; 0x37
    815e:	88 2f       	mov	r24, r24
    8160:	90 e0       	ldi	r25, 0x00	; 0
    8162:	03 c0       	rjmp	.+6      	; 0x816a <__RODATA_PM_OFFSET__+0x16a>
    8164:	8e a9       	ldd	r24, Y+54	; 0x36
    8166:	88 2f       	mov	r24, r24
    8168:	90 e0       	ldi	r25, 0x00	; 0
    816a:	80 93 1e 40 	sts	0x401E, r24	; 0x80401e <g_fox>
		g_event_start_epoch = eeprom_read_dword(&(EepromManager::ee_vars.event_start_epoch));
    816e:	86 e0       	ldi	r24, 0x06	; 6
    8170:	90 e0       	ldi	r25, 0x00	; 0
    8172:	0e 94 38 7c 	call	0xf870	; 0xf870 <eeprom_read_dword>
    8176:	dc 01       	movw	r26, r24
    8178:	cb 01       	movw	r24, r22
    817a:	80 93 18 45 	sts	0x4518, r24	; 0x804518 <g_event_start_epoch>
    817e:	90 93 19 45 	sts	0x4519, r25	; 0x804519 <g_event_start_epoch+0x1>
    8182:	a0 93 1a 45 	sts	0x451A, r26	; 0x80451a <g_event_start_epoch+0x2>
    8186:	b0 93 1b 45 	sts	0x451B, r27	; 0x80451b <g_event_start_epoch+0x3>
		g_event_finish_epoch = eeprom_read_dword(&(EepromManager::ee_vars.event_finish_epoch));
    818a:	8e e0       	ldi	r24, 0x0E	; 14
    818c:	90 e0       	ldi	r25, 0x00	; 0
    818e:	0e 94 38 7c 	call	0xf870	; 0xf870 <eeprom_read_dword>
    8192:	dc 01       	movw	r26, r24
    8194:	cb 01       	movw	r24, r22
    8196:	80 93 1c 45 	sts	0x451C, r24	; 0x80451c <g_event_finish_epoch>
    819a:	90 93 1d 45 	sts	0x451D, r25	; 0x80451d <g_event_finish_epoch+0x1>
    819e:	a0 93 1e 45 	sts	0x451E, r26	; 0x80451e <g_event_finish_epoch+0x2>
    81a2:	b0 93 1f 45 	sts	0x451F, r27	; 0x80451f <g_event_finish_epoch+0x3>
		g_utc_offset = (int8_t)eeprom_read_byte(&(EepromManager::ee_vars.utc_offset));
    81a6:	8f e5       	ldi	r24, 0x5F	; 95
    81a8:	90 e0       	ldi	r25, 0x00	; 0
    81aa:	0e 94 30 7c 	call	0xf860	; 0xf860 <eeprom_read_byte>
    81ae:	80 93 4d 45 	sts	0x454D, r24	; 0x80454d <g_utc_offset>

		for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    81b2:	1a 82       	std	Y+2, r1	; 0x02
    81b4:	1b 82       	std	Y+3, r1	; 0x03
    81b6:	8a 81       	ldd	r24, Y+2	; 0x02
    81b8:	9b 81       	ldd	r25, Y+3	; 0x03
    81ba:	44 97       	sbiw	r24, 0x14	; 20
    81bc:	e8 f4       	brcc	.+58     	; 0x81f8 <__RODATA_PM_OFFSET__+0x1f8>
		{
			char c = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.stationID_text[i])));
    81be:	8a 81       	ldd	r24, Y+2	; 0x02
    81c0:	9b 81       	ldd	r25, Y+3	; 0x03
    81c2:	46 96       	adiw	r24, 0x16	; 22
    81c4:	80 50       	subi	r24, 0x00	; 0
    81c6:	90 40       	sbci	r25, 0x00	; 0
    81c8:	0e 94 30 7c 	call	0xf860	; 0xf860 <eeprom_read_byte>
    81cc:	8c 83       	std	Y+4, r24	; 0x04
			if(c == 255) c= 0;
    81ce:	8c 81       	ldd	r24, Y+4	; 0x04
    81d0:	8f 3f       	cpi	r24, 0xFF	; 255
    81d2:	09 f4       	brne	.+2      	; 0x81d6 <__RODATA_PM_OFFSET__+0x1d6>
    81d4:	1c 82       	std	Y+4, r1	; 0x04
			g_messages_text[STATION_ID][i] = c;
    81d6:	8a 81       	ldd	r24, Y+2	; 0x02
    81d8:	9b 81       	ldd	r25, Y+3	; 0x03
    81da:	81 50       	subi	r24, 0x01	; 1
    81dc:	9b 4b       	sbci	r25, 0xBB	; 187
    81de:	2c 81       	ldd	r18, Y+4	; 0x04
    81e0:	fc 01       	movw	r30, r24
    81e2:	20 83       	st	Z, r18
			if(!c)
    81e4:	8c 81       	ldd	r24, Y+4	; 0x04
    81e6:	88 23       	and	r24, r24
    81e8:	31 f0       	breq	.+12     	; 0x81f6 <__RODATA_PM_OFFSET__+0x1f6>
		g_fox = (Fox_t)(CLAMP(BEACON, eeprom_read_byte((uint8_t*)&(EepromManager::ee_vars.fox_setting)), SPRINT_F5));
		g_event_start_epoch = eeprom_read_dword(&(EepromManager::ee_vars.event_start_epoch));
		g_event_finish_epoch = eeprom_read_dword(&(EepromManager::ee_vars.event_finish_epoch));
		g_utc_offset = (int8_t)eeprom_read_byte(&(EepromManager::ee_vars.utc_offset));

		for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    81ea:	8a 81       	ldd	r24, Y+2	; 0x02
    81ec:	9b 81       	ldd	r25, Y+3	; 0x03
    81ee:	01 96       	adiw	r24, 0x01	; 1
    81f0:	8a 83       	std	Y+2, r24	; 0x02
    81f2:	9b 83       	std	Y+3, r25	; 0x03
    81f4:	e0 cf       	rjmp	.-64     	; 0x81b6 <__RODATA_PM_OFFSET__+0x1b6>
			char c = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.stationID_text[i])));
			if(c == 255) c= 0;
			g_messages_text[STATION_ID][i] = c;
			if(!c)
			{
				break;
    81f6:	00 00       	nop
			}
		}

		for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    81f8:	1a 82       	std	Y+2, r1	; 0x02
    81fa:	1b 82       	std	Y+3, r1	; 0x03
    81fc:	8a 81       	ldd	r24, Y+2	; 0x02
    81fe:	9b 81       	ldd	r25, Y+3	; 0x03
    8200:	44 97       	sbiw	r24, 0x14	; 20
    8202:	e8 f4       	brcc	.+58     	; 0x823e <__RODATA_PM_OFFSET__+0x23e>
		{
			char c = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.pattern_text[i])));			
    8204:	8a 81       	ldd	r24, Y+2	; 0x02
    8206:	9b 81       	ldd	r25, Y+3	; 0x03
    8208:	8f 96       	adiw	r24, 0x2f	; 47
    820a:	80 50       	subi	r24, 0x00	; 0
    820c:	90 40       	sbci	r25, 0x00	; 0
    820e:	0e 94 30 7c 	call	0xf860	; 0xf860 <eeprom_read_byte>
    8212:	8d 83       	std	Y+5, r24	; 0x05
			if(c==255) c=0;
    8214:	8d 81       	ldd	r24, Y+5	; 0x05
    8216:	8f 3f       	cpi	r24, 0xFF	; 255
    8218:	09 f4       	brne	.+2      	; 0x821c <__RODATA_PM_OFFSET__+0x21c>
    821a:	1d 82       	std	Y+5, r1	; 0x05
			g_messages_text[PATTERN_TEXT][i] = c;
    821c:	8a 81       	ldd	r24, Y+2	; 0x02
    821e:	9b 81       	ldd	r25, Y+3	; 0x03
    8220:	85 55       	subi	r24, 0x55	; 85
    8222:	9b 4b       	sbci	r25, 0xBB	; 187
    8224:	2d 81       	ldd	r18, Y+5	; 0x05
    8226:	fc 01       	movw	r30, r24
    8228:	20 83       	st	Z, r18
			if(!c)
    822a:	8d 81       	ldd	r24, Y+5	; 0x05
    822c:	88 23       	and	r24, r24
    822e:	31 f0       	breq	.+12     	; 0x823c <__RODATA_PM_OFFSET__+0x23c>
			{
				break;
			}
		}

		for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    8230:	8a 81       	ldd	r24, Y+2	; 0x02
    8232:	9b 81       	ldd	r25, Y+3	; 0x03
    8234:	01 96       	adiw	r24, 0x01	; 1
    8236:	8a 83       	std	Y+2, r24	; 0x02
    8238:	9b 83       	std	Y+3, r25	; 0x03
    823a:	e0 cf       	rjmp	.-64     	; 0x81fc <__RODATA_PM_OFFSET__+0x1fc>
			char c = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.pattern_text[i])));			
			if(c==255) c=0;
			g_messages_text[PATTERN_TEXT][i] = c;
			if(!c)
			{
				break;
    823c:	00 00       	nop
			}
		}

		for(i = 0; i < MAX_UNLOCK_CODE_LENGTH; i++)
    823e:	1a 82       	std	Y+2, r1	; 0x02
    8240:	1b 82       	std	Y+3, r1	; 0x03
    8242:	8a 81       	ldd	r24, Y+2	; 0x02
    8244:	9b 81       	ldd	r25, Y+3	; 0x03
    8246:	08 97       	sbiw	r24, 0x08	; 8
    8248:	f0 f4       	brcc	.+60     	; 0x8286 <__RODATA_PM_OFFSET__+0x286>
		{
			char c = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.unlockCode[i])));	
    824a:	8a 81       	ldd	r24, Y+2	; 0x02
    824c:	9b 81       	ldd	r25, Y+3	; 0x03
    824e:	88 5b       	subi	r24, 0xB8	; 184
    8250:	9f 4f       	sbci	r25, 0xFF	; 255
    8252:	80 50       	subi	r24, 0x00	; 0
    8254:	90 40       	sbci	r25, 0x00	; 0
    8256:	0e 94 30 7c 	call	0xf860	; 0xf860 <eeprom_read_byte>
    825a:	8e 83       	std	Y+6, r24	; 0x06
			if(c==255) c=0;
    825c:	8e 81       	ldd	r24, Y+6	; 0x06
    825e:	8f 3f       	cpi	r24, 0xFF	; 255
    8260:	09 f4       	brne	.+2      	; 0x8264 <__RODATA_PM_OFFSET__+0x264>
    8262:	1e 82       	std	Y+6, r1	; 0x06
			g_unlockCode[i] = c;
    8264:	8a 81       	ldd	r24, Y+2	; 0x02
    8266:	9b 81       	ldd	r25, Y+3	; 0x03
    8268:	82 5b       	subi	r24, 0xB2	; 178
    826a:	9a 4b       	sbci	r25, 0xBA	; 186
    826c:	2e 81       	ldd	r18, Y+6	; 0x06
    826e:	fc 01       	movw	r30, r24
    8270:	20 83       	st	Z, r18
			if(!c)
    8272:	8e 81       	ldd	r24, Y+6	; 0x06
    8274:	88 23       	and	r24, r24
    8276:	31 f0       	breq	.+12     	; 0x8284 <__RODATA_PM_OFFSET__+0x284>
			{
				break;
			}
		}

		for(i = 0; i < MAX_UNLOCK_CODE_LENGTH; i++)
    8278:	8a 81       	ldd	r24, Y+2	; 0x02
    827a:	9b 81       	ldd	r25, Y+3	; 0x03
    827c:	01 96       	adiw	r24, 0x01	; 1
    827e:	8a 83       	std	Y+2, r24	; 0x02
    8280:	9b 83       	std	Y+3, r25	; 0x03
    8282:	df cf       	rjmp	.-66     	; 0x8242 <__RODATA_PM_OFFSET__+0x242>
			char c = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.unlockCode[i])));	
			if(c==255) c=0;
			g_unlockCode[i] = c;
			if(!c)
			{
				break;
    8284:	00 00       	nop
			}
		}
		
		g_80m_frequency = CLAMP(TX_MINIMUM_80M_FREQUENCY, eeprom_read_dword(&(EepromManager::ee_vars.frequency)), TX_MAXIMUM_80M_FREQUENCY);
    8286:	84 e6       	ldi	r24, 0x64	; 100
    8288:	90 e0       	ldi	r25, 0x00	; 0
    828a:	0e 94 38 7c 	call	0xf870	; 0xf870 <eeprom_read_dword>
    828e:	dc 01       	movw	r26, r24
    8290:	cb 01       	movw	r24, r22
    8292:	89 af       	std	Y+57, r24	; 0x39
    8294:	9a af       	std	Y+58, r25	; 0x3a
    8296:	ab af       	std	Y+59, r26	; 0x3b
    8298:	bc af       	std	Y+60, r27	; 0x3c
    829a:	80 ee       	ldi	r24, 0xE0	; 224
    829c:	97 e6       	ldi	r25, 0x67	; 103
    829e:	a5 e3       	ldi	r26, 0x35	; 53
    82a0:	b0 e0       	ldi	r27, 0x00	; 0
    82a2:	9e 01       	movw	r18, r28
    82a4:	23 5c       	subi	r18, 0xC3	; 195
    82a6:	3f 4f       	sbci	r19, 0xFF	; 255
    82a8:	f9 01       	movw	r30, r18
    82aa:	80 83       	st	Z, r24
    82ac:	91 83       	std	Z+1, r25	; 0x01
    82ae:	a2 83       	std	Z+2, r26	; 0x02
    82b0:	b3 83       	std	Z+3, r27	; 0x03
    82b2:	9e 01       	movw	r18, r28
    82b4:	2f 5b       	subi	r18, 0xBF	; 191
    82b6:	3f 4f       	sbci	r19, 0xFF	; 255
    82b8:	80 e0       	ldi	r24, 0x00	; 0
    82ba:	99 e0       	ldi	r25, 0x09	; 9
    82bc:	ad e3       	ldi	r26, 0x3D	; 61
    82be:	b0 e0       	ldi	r27, 0x00	; 0
    82c0:	f9 01       	movw	r30, r18
    82c2:	80 83       	st	Z, r24
    82c4:	91 83       	std	Z+1, r25	; 0x01
    82c6:	a2 83       	std	Z+2, r26	; 0x02
    82c8:	b3 83       	std	Z+3, r27	; 0x03
    82ca:	ce 01       	movw	r24, r28
    82cc:	8f 5b       	subi	r24, 0xBF	; 191
    82ce:	9f 4f       	sbci	r25, 0xFF	; 255
    82d0:	29 ad       	ldd	r18, Y+57	; 0x39
    82d2:	3a ad       	ldd	r19, Y+58	; 0x3a
    82d4:	4b ad       	ldd	r20, Y+59	; 0x3b
    82d6:	5c ad       	ldd	r21, Y+60	; 0x3c
    82d8:	fc 01       	movw	r30, r24
    82da:	80 81       	ld	r24, Z
    82dc:	91 81       	ldd	r25, Z+1	; 0x01
    82de:	a2 81       	ldd	r26, Z+2	; 0x02
    82e0:	b3 81       	ldd	r27, Z+3	; 0x03
    82e2:	82 17       	cp	r24, r18
    82e4:	93 07       	cpc	r25, r19
    82e6:	a4 07       	cpc	r26, r20
    82e8:	b5 07       	cpc	r27, r21
    82ea:	e8 f0       	brcs	.+58     	; 0x8326 <__RODATA_PM_OFFSET__+0x326>
    82ec:	29 ad       	ldd	r18, Y+57	; 0x39
    82ee:	3a ad       	ldd	r19, Y+58	; 0x3a
    82f0:	4b ad       	ldd	r20, Y+59	; 0x3b
    82f2:	5c ad       	ldd	r21, Y+60	; 0x3c
    82f4:	ce 01       	movw	r24, r28
    82f6:	cd 96       	adiw	r24, 0x3d	; 61
    82f8:	fc 01       	movw	r30, r24
    82fa:	80 81       	ld	r24, Z
    82fc:	91 81       	ldd	r25, Z+1	; 0x01
    82fe:	a2 81       	ldd	r26, Z+2	; 0x02
    8300:	b3 81       	ldd	r27, Z+3	; 0x03
    8302:	28 17       	cp	r18, r24
    8304:	39 07       	cpc	r19, r25
    8306:	4a 07       	cpc	r20, r26
    8308:	5b 07       	cpc	r21, r27
    830a:	40 f4       	brcc	.+16     	; 0x831c <__RODATA_PM_OFFSET__+0x31c>
    830c:	ce 01       	movw	r24, r28
    830e:	cd 96       	adiw	r24, 0x3d	; 61
    8310:	fc 01       	movw	r30, r24
    8312:	80 81       	ld	r24, Z
    8314:	91 81       	ldd	r25, Z+1	; 0x01
    8316:	a2 81       	ldd	r26, Z+2	; 0x02
    8318:	b3 81       	ldd	r27, Z+3	; 0x03
    831a:	0d c0       	rjmp	.+26     	; 0x8336 <__RODATA_PM_OFFSET__+0x336>
    831c:	89 ad       	ldd	r24, Y+57	; 0x39
    831e:	9a ad       	ldd	r25, Y+58	; 0x3a
    8320:	ab ad       	ldd	r26, Y+59	; 0x3b
    8322:	bc ad       	ldd	r27, Y+60	; 0x3c
    8324:	08 c0       	rjmp	.+16     	; 0x8336 <__RODATA_PM_OFFSET__+0x336>
    8326:	ce 01       	movw	r24, r28
    8328:	8f 5b       	subi	r24, 0xBF	; 191
    832a:	9f 4f       	sbci	r25, 0xFF	; 255
    832c:	fc 01       	movw	r30, r24
    832e:	80 81       	ld	r24, Z
    8330:	91 81       	ldd	r25, Z+1	; 0x01
    8332:	a2 81       	ldd	r26, Z+2	; 0x02
    8334:	b3 81       	ldd	r27, Z+3	; 0x03
    8336:	80 93 50 40 	sts	0x4050, r24	; 0x804050 <g_80m_frequency>
    833a:	90 93 51 40 	sts	0x4051, r25	; 0x804051 <g_80m_frequency+0x1>
    833e:	a0 93 52 40 	sts	0x4052, r26	; 0x804052 <g_80m_frequency+0x2>
    8342:	b0 93 53 40 	sts	0x4053, r27	; 0x804053 <g_80m_frequency+0x3>
		g_rtty_offset =eeprom_read_dword(&(EepromManager::ee_vars.rtty_offset));
    8346:	8c e6       	ldi	r24, 0x6C	; 108
    8348:	90 e0       	ldi	r25, 0x00	; 0
    834a:	0e 94 38 7c 	call	0xf870	; 0xf870 <eeprom_read_dword>
    834e:	dc 01       	movw	r26, r24
    8350:	cb 01       	movw	r24, r22
    8352:	80 93 56 40 	sts	0x4056, r24	; 0x804056 <g_rtty_offset>
    8356:	90 93 57 40 	sts	0x4057, r25	; 0x804057 <g_rtty_offset+0x1>
    835a:	a0 93 58 40 	sts	0x4058, r26	; 0x804058 <g_rtty_offset+0x2>
    835e:	b0 93 59 40 	sts	0x4059, r27	; 0x804059 <g_rtty_offset+0x3>
		g_80m_power_level_mW = CLAMP(MIN_RF_POWER_MW, eeprom_read_word(&(EepromManager::ee_vars.rf_power)), MAX_TX_POWER_80M_MW);
    8362:	8e 01       	movw	r16, r28
    8364:	0b 5b       	subi	r16, 0xBB	; 187
    8366:	1f 4f       	sbci	r17, 0xFF	; 255
    8368:	84 e7       	ldi	r24, 0x74	; 116
    836a:	90 e0       	ldi	r25, 0x00	; 0
    836c:	0e 94 3f 7c 	call	0xf87e	; 0xf87e <eeprom_read_word>
    8370:	f8 01       	movw	r30, r16
    8372:	80 83       	st	Z, r24
    8374:	91 83       	std	Z+1, r25	; 0x01
    8376:	ce 01       	movw	r24, r28
    8378:	89 5b       	subi	r24, 0xB9	; 185
    837a:	9f 4f       	sbci	r25, 0xFF	; 255
    837c:	fc 01       	movw	r30, r24
    837e:	10 82       	st	Z, r1
    8380:	11 82       	std	Z+1, r1	; 0x01
    8382:	ce 01       	movw	r24, r28
    8384:	87 5b       	subi	r24, 0xB7	; 183
    8386:	9f 4f       	sbci	r25, 0xFF	; 255
    8388:	28 e8       	ldi	r18, 0x88	; 136
    838a:	33 e1       	ldi	r19, 0x13	; 19
    838c:	fc 01       	movw	r30, r24
    838e:	20 83       	st	Z, r18
    8390:	31 83       	std	Z+1, r19	; 0x01
    8392:	9e 01       	movw	r18, r28
    8394:	2b 5b       	subi	r18, 0xBB	; 187
    8396:	3f 4f       	sbci	r19, 0xFF	; 255
    8398:	ce 01       	movw	r24, r28
    839a:	87 5b       	subi	r24, 0xB7	; 183
    839c:	9f 4f       	sbci	r25, 0xFF	; 255
    839e:	f9 01       	movw	r30, r18
    83a0:	20 81       	ld	r18, Z
    83a2:	31 81       	ldd	r19, Z+1	; 0x01
    83a4:	fc 01       	movw	r30, r24
    83a6:	80 81       	ld	r24, Z
    83a8:	91 81       	ldd	r25, Z+1	; 0x01
    83aa:	82 17       	cp	r24, r18
    83ac:	93 07       	cpc	r25, r19
    83ae:	e8 f0       	brcs	.+58     	; 0x83ea <__RODATA_PM_OFFSET__+0x3ea>
    83b0:	9e 01       	movw	r18, r28
    83b2:	2b 5b       	subi	r18, 0xBB	; 187
    83b4:	3f 4f       	sbci	r19, 0xFF	; 255
    83b6:	ce 01       	movw	r24, r28
    83b8:	89 5b       	subi	r24, 0xB9	; 185
    83ba:	9f 4f       	sbci	r25, 0xFF	; 255
    83bc:	f9 01       	movw	r30, r18
    83be:	20 81       	ld	r18, Z
    83c0:	31 81       	ldd	r19, Z+1	; 0x01
    83c2:	fc 01       	movw	r30, r24
    83c4:	80 81       	ld	r24, Z
    83c6:	91 81       	ldd	r25, Z+1	; 0x01
    83c8:	28 17       	cp	r18, r24
    83ca:	39 07       	cpc	r19, r25
    83cc:	38 f4       	brcc	.+14     	; 0x83dc <__RODATA_PM_OFFSET__+0x3dc>
    83ce:	ce 01       	movw	r24, r28
    83d0:	89 5b       	subi	r24, 0xB9	; 185
    83d2:	9f 4f       	sbci	r25, 0xFF	; 255
    83d4:	fc 01       	movw	r30, r24
    83d6:	80 81       	ld	r24, Z
    83d8:	91 81       	ldd	r25, Z+1	; 0x01
    83da:	0d c0       	rjmp	.+26     	; 0x83f6 <__RODATA_PM_OFFSET__+0x3f6>
    83dc:	ce 01       	movw	r24, r28
    83de:	8b 5b       	subi	r24, 0xBB	; 187
    83e0:	9f 4f       	sbci	r25, 0xFF	; 255
    83e2:	fc 01       	movw	r30, r24
    83e4:	80 81       	ld	r24, Z
    83e6:	91 81       	ldd	r25, Z+1	; 0x01
    83e8:	06 c0       	rjmp	.+12     	; 0x83f6 <__RODATA_PM_OFFSET__+0x3f6>
    83ea:	ce 01       	movw	r24, r28
    83ec:	87 5b       	subi	r24, 0xB7	; 183
    83ee:	9f 4f       	sbci	r25, 0xFF	; 255
    83f0:	fc 01       	movw	r30, r24
    83f2:	80 81       	ld	r24, Z
    83f4:	91 81       	ldd	r25, Z+1	; 0x01
    83f6:	80 93 54 40 	sts	0x4054, r24	; 0x804054 <g_80m_power_level_mW>
    83fa:	90 93 55 40 	sts	0x4055, r25	; 0x804055 <g_80m_power_level_mW+0x1>

		g_pattern_codespeed = CLAMP(5, eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.pattern_codespeed))), 20);
    83fe:	8e 01       	movw	r16, r28
    8400:	05 5b       	subi	r16, 0xB5	; 181
    8402:	1f 4f       	sbci	r17, 0xFF	; 255
    8404:	8a e7       	ldi	r24, 0x7A	; 122
    8406:	90 e0       	ldi	r25, 0x00	; 0
    8408:	0e 94 30 7c 	call	0xf860	; 0xf860 <eeprom_read_byte>
    840c:	f8 01       	movw	r30, r16
    840e:	80 83       	st	Z, r24
    8410:	ce 01       	movw	r24, r28
    8412:	84 5b       	subi	r24, 0xB4	; 180
    8414:	9f 4f       	sbci	r25, 0xFF	; 255
    8416:	25 e0       	ldi	r18, 0x05	; 5
    8418:	30 e0       	ldi	r19, 0x00	; 0
    841a:	fc 01       	movw	r30, r24
    841c:	20 83       	st	Z, r18
    841e:	31 83       	std	Z+1, r19	; 0x01
    8420:	ce 01       	movw	r24, r28
    8422:	82 5b       	subi	r24, 0xB2	; 178
    8424:	9f 4f       	sbci	r25, 0xFF	; 255
    8426:	24 e1       	ldi	r18, 0x14	; 20
    8428:	30 e0       	ldi	r19, 0x00	; 0
    842a:	fc 01       	movw	r30, r24
    842c:	20 83       	st	Z, r18
    842e:	31 83       	std	Z+1, r19	; 0x01
    8430:	ce 01       	movw	r24, r28
    8432:	85 5b       	subi	r24, 0xB5	; 181
    8434:	9f 4f       	sbci	r25, 0xFF	; 255
    8436:	fc 01       	movw	r30, r24
    8438:	80 81       	ld	r24, Z
    843a:	28 2f       	mov	r18, r24
    843c:	30 e0       	ldi	r19, 0x00	; 0
    843e:	ce 01       	movw	r24, r28
    8440:	82 5b       	subi	r24, 0xB2	; 178
    8442:	9f 4f       	sbci	r25, 0xFF	; 255
    8444:	fc 01       	movw	r30, r24
    8446:	80 81       	ld	r24, Z
    8448:	91 81       	ldd	r25, Z+1	; 0x01
    844a:	82 17       	cp	r24, r18
    844c:	93 07       	cpc	r25, r19
    844e:	9c f0       	brlt	.+38     	; 0x8476 <__RODATA_PM_OFFSET__+0x476>
    8450:	ce 01       	movw	r24, r28
    8452:	85 5b       	subi	r24, 0xB5	; 181
    8454:	9f 4f       	sbci	r25, 0xFF	; 255
    8456:	fc 01       	movw	r30, r24
    8458:	80 81       	ld	r24, Z
    845a:	48 2f       	mov	r20, r24
    845c:	50 e0       	ldi	r21, 0x00	; 0
    845e:	ce 01       	movw	r24, r28
    8460:	84 5b       	subi	r24, 0xB4	; 180
    8462:	9f 4f       	sbci	r25, 0xFF	; 255
    8464:	fc 01       	movw	r30, r24
    8466:	20 81       	ld	r18, Z
    8468:	31 81       	ldd	r19, Z+1	; 0x01
    846a:	ca 01       	movw	r24, r20
    846c:	82 17       	cp	r24, r18
    846e:	93 07       	cpc	r25, r19
    8470:	44 f4       	brge	.+16     	; 0x8482 <__RODATA_PM_OFFSET__+0x482>
    8472:	c9 01       	movw	r24, r18
    8474:	06 c0       	rjmp	.+12     	; 0x8482 <__RODATA_PM_OFFSET__+0x482>
    8476:	ce 01       	movw	r24, r28
    8478:	82 5b       	subi	r24, 0xB2	; 178
    847a:	9f 4f       	sbci	r25, 0xFF	; 255
    847c:	fc 01       	movw	r30, r24
    847e:	80 81       	ld	r24, Z
    8480:	91 81       	ldd	r25, Z+1	; 0x01
    8482:	80 93 0c 40 	sts	0x400C, r24	; 0x80400c <g_pattern_codespeed>
		g_off_air_seconds = CLAMP(0, (int16_t)eeprom_read_word((const uint16_t*)&(EepromManager::ee_vars.off_air_seconds)), 3600);
    8486:	8f e7       	ldi	r24, 0x7F	; 127
    8488:	90 e0       	ldi	r25, 0x00	; 0
    848a:	0e 94 3f 7c 	call	0xf87e	; 0xf87e <eeprom_read_word>
    848e:	9c 01       	movw	r18, r24
    8490:	ce 01       	movw	r24, r28
    8492:	80 5b       	subi	r24, 0xB0	; 176
    8494:	9f 4f       	sbci	r25, 0xFF	; 255
    8496:	fc 01       	movw	r30, r24
    8498:	20 83       	st	Z, r18
    849a:	31 83       	std	Z+1, r19	; 0x01
    849c:	ce 01       	movw	r24, r28
    849e:	8e 5a       	subi	r24, 0xAE	; 174
    84a0:	9f 4f       	sbci	r25, 0xFF	; 255
    84a2:	fc 01       	movw	r30, r24
    84a4:	10 82       	st	Z, r1
    84a6:	11 82       	std	Z+1, r1	; 0x01
    84a8:	ce 01       	movw	r24, r28
    84aa:	8c 5a       	subi	r24, 0xAC	; 172
    84ac:	9f 4f       	sbci	r25, 0xFF	; 255
    84ae:	20 e1       	ldi	r18, 0x10	; 16
    84b0:	3e e0       	ldi	r19, 0x0E	; 14
    84b2:	fc 01       	movw	r30, r24
    84b4:	20 83       	st	Z, r18
    84b6:	31 83       	std	Z+1, r19	; 0x01
    84b8:	9e 01       	movw	r18, r28
    84ba:	20 5b       	subi	r18, 0xB0	; 176
    84bc:	3f 4f       	sbci	r19, 0xFF	; 255
    84be:	ce 01       	movw	r24, r28
    84c0:	8c 5a       	subi	r24, 0xAC	; 172
    84c2:	9f 4f       	sbci	r25, 0xFF	; 255
    84c4:	f9 01       	movw	r30, r18
    84c6:	20 81       	ld	r18, Z
    84c8:	31 81       	ldd	r19, Z+1	; 0x01
    84ca:	fc 01       	movw	r30, r24
    84cc:	80 81       	ld	r24, Z
    84ce:	91 81       	ldd	r25, Z+1	; 0x01
    84d0:	82 17       	cp	r24, r18
    84d2:	93 07       	cpc	r25, r19
    84d4:	ec f0       	brlt	.+58     	; 0x8510 <__RODATA_PM_OFFSET__+0x510>
    84d6:	9e 01       	movw	r18, r28
    84d8:	20 5b       	subi	r18, 0xB0	; 176
    84da:	3f 4f       	sbci	r19, 0xFF	; 255
    84dc:	ce 01       	movw	r24, r28
    84de:	8e 5a       	subi	r24, 0xAE	; 174
    84e0:	9f 4f       	sbci	r25, 0xFF	; 255
    84e2:	f9 01       	movw	r30, r18
    84e4:	20 81       	ld	r18, Z
    84e6:	31 81       	ldd	r19, Z+1	; 0x01
    84e8:	fc 01       	movw	r30, r24
    84ea:	80 81       	ld	r24, Z
    84ec:	91 81       	ldd	r25, Z+1	; 0x01
    84ee:	28 17       	cp	r18, r24
    84f0:	39 07       	cpc	r19, r25
    84f2:	3c f4       	brge	.+14     	; 0x8502 <__RODATA_PM_OFFSET__+0x502>
    84f4:	ce 01       	movw	r24, r28
    84f6:	8e 5a       	subi	r24, 0xAE	; 174
    84f8:	9f 4f       	sbci	r25, 0xFF	; 255
    84fa:	fc 01       	movw	r30, r24
    84fc:	80 81       	ld	r24, Z
    84fe:	91 81       	ldd	r25, Z+1	; 0x01
    8500:	0d c0       	rjmp	.+26     	; 0x851c <__RODATA_PM_OFFSET__+0x51c>
    8502:	ce 01       	movw	r24, r28
    8504:	80 5b       	subi	r24, 0xB0	; 176
    8506:	9f 4f       	sbci	r25, 0xFF	; 255
    8508:	fc 01       	movw	r30, r24
    850a:	80 81       	ld	r24, Z
    850c:	91 81       	ldd	r25, Z+1	; 0x01
    850e:	06 c0       	rjmp	.+12     	; 0x851c <__RODATA_PM_OFFSET__+0x51c>
    8510:	ce 01       	movw	r24, r28
    8512:	8c 5a       	subi	r24, 0xAC	; 172
    8514:	9f 4f       	sbci	r25, 0xFF	; 255
    8516:	fc 01       	movw	r30, r24
    8518:	80 81       	ld	r24, Z
    851a:	91 81       	ldd	r25, Z+1	; 0x01
    851c:	80 93 0f 40 	sts	0x400F, r24	; 0x80400f <g_off_air_seconds>
    8520:	90 93 10 40 	sts	0x4010, r25	; 0x804010 <g_off_air_seconds+0x1>
		g_on_air_seconds = CLAMP(0, (int16_t)eeprom_read_word((const uint16_t*)&(EepromManager::ee_vars.on_air_seconds)), 3600);
    8524:	85 e8       	ldi	r24, 0x85	; 133
    8526:	90 e0       	ldi	r25, 0x00	; 0
    8528:	0e 94 3f 7c 	call	0xf87e	; 0xf87e <eeprom_read_word>
    852c:	9c 01       	movw	r18, r24
    852e:	ce 01       	movw	r24, r28
    8530:	8a 5a       	subi	r24, 0xAA	; 170
    8532:	9f 4f       	sbci	r25, 0xFF	; 255
    8534:	fc 01       	movw	r30, r24
    8536:	20 83       	st	Z, r18
    8538:	31 83       	std	Z+1, r19	; 0x01
    853a:	ce 01       	movw	r24, r28
    853c:	88 5a       	subi	r24, 0xA8	; 168
    853e:	9f 4f       	sbci	r25, 0xFF	; 255
    8540:	fc 01       	movw	r30, r24
    8542:	10 82       	st	Z, r1
    8544:	11 82       	std	Z+1, r1	; 0x01
    8546:	ce 01       	movw	r24, r28
    8548:	86 5a       	subi	r24, 0xA6	; 166
    854a:	9f 4f       	sbci	r25, 0xFF	; 255
    854c:	20 e1       	ldi	r18, 0x10	; 16
    854e:	3e e0       	ldi	r19, 0x0E	; 14
    8550:	fc 01       	movw	r30, r24
    8552:	20 83       	st	Z, r18
    8554:	31 83       	std	Z+1, r19	; 0x01
    8556:	9e 01       	movw	r18, r28
    8558:	2a 5a       	subi	r18, 0xAA	; 170
    855a:	3f 4f       	sbci	r19, 0xFF	; 255
    855c:	ce 01       	movw	r24, r28
    855e:	86 5a       	subi	r24, 0xA6	; 166
    8560:	9f 4f       	sbci	r25, 0xFF	; 255
    8562:	f9 01       	movw	r30, r18
    8564:	20 81       	ld	r18, Z
    8566:	31 81       	ldd	r19, Z+1	; 0x01
    8568:	fc 01       	movw	r30, r24
    856a:	80 81       	ld	r24, Z
    856c:	91 81       	ldd	r25, Z+1	; 0x01
    856e:	82 17       	cp	r24, r18
    8570:	93 07       	cpc	r25, r19
    8572:	ec f0       	brlt	.+58     	; 0x85ae <__RODATA_PM_OFFSET__+0x5ae>
    8574:	9e 01       	movw	r18, r28
    8576:	2a 5a       	subi	r18, 0xAA	; 170
    8578:	3f 4f       	sbci	r19, 0xFF	; 255
    857a:	ce 01       	movw	r24, r28
    857c:	88 5a       	subi	r24, 0xA8	; 168
    857e:	9f 4f       	sbci	r25, 0xFF	; 255
    8580:	f9 01       	movw	r30, r18
    8582:	20 81       	ld	r18, Z
    8584:	31 81       	ldd	r19, Z+1	; 0x01
    8586:	fc 01       	movw	r30, r24
    8588:	80 81       	ld	r24, Z
    858a:	91 81       	ldd	r25, Z+1	; 0x01
    858c:	28 17       	cp	r18, r24
    858e:	39 07       	cpc	r19, r25
    8590:	3c f4       	brge	.+14     	; 0x85a0 <__RODATA_PM_OFFSET__+0x5a0>
    8592:	ce 01       	movw	r24, r28
    8594:	88 5a       	subi	r24, 0xA8	; 168
    8596:	9f 4f       	sbci	r25, 0xFF	; 255
    8598:	fc 01       	movw	r30, r24
    859a:	80 81       	ld	r24, Z
    859c:	91 81       	ldd	r25, Z+1	; 0x01
    859e:	0d c0       	rjmp	.+26     	; 0x85ba <__RODATA_PM_OFFSET__+0x5ba>
    85a0:	ce 01       	movw	r24, r28
    85a2:	8a 5a       	subi	r24, 0xAA	; 170
    85a4:	9f 4f       	sbci	r25, 0xFF	; 255
    85a6:	fc 01       	movw	r30, r24
    85a8:	80 81       	ld	r24, Z
    85aa:	91 81       	ldd	r25, Z+1	; 0x01
    85ac:	06 c0       	rjmp	.+12     	; 0x85ba <__RODATA_PM_OFFSET__+0x5ba>
    85ae:	ce 01       	movw	r24, r28
    85b0:	86 5a       	subi	r24, 0xA6	; 166
    85b2:	9f 4f       	sbci	r25, 0xFF	; 255
    85b4:	fc 01       	movw	r30, r24
    85b6:	80 81       	ld	r24, Z
    85b8:	91 81       	ldd	r25, Z+1	; 0x01
    85ba:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_on_air_seconds>
    85be:	90 93 0e 40 	sts	0x400E, r25	; 0x80400e <g_on_air_seconds+0x1>
		g_ID_period_seconds = CLAMP(0, (int16_t)eeprom_read_word((const uint16_t*)&(EepromManager::ee_vars.ID_period_seconds)), 3600);
    85c2:	8b e8       	ldi	r24, 0x8B	; 139
    85c4:	90 e0       	ldi	r25, 0x00	; 0
    85c6:	0e 94 3f 7c 	call	0xf87e	; 0xf87e <eeprom_read_word>
    85ca:	9c 01       	movw	r18, r24
    85cc:	ce 01       	movw	r24, r28
    85ce:	84 5a       	subi	r24, 0xA4	; 164
    85d0:	9f 4f       	sbci	r25, 0xFF	; 255
    85d2:	fc 01       	movw	r30, r24
    85d4:	20 83       	st	Z, r18
    85d6:	31 83       	std	Z+1, r19	; 0x01
    85d8:	ce 01       	movw	r24, r28
    85da:	82 5a       	subi	r24, 0xA2	; 162
    85dc:	9f 4f       	sbci	r25, 0xFF	; 255
    85de:	fc 01       	movw	r30, r24
    85e0:	10 82       	st	Z, r1
    85e2:	11 82       	std	Z+1, r1	; 0x01
    85e4:	ce 01       	movw	r24, r28
    85e6:	80 5a       	subi	r24, 0xA0	; 160
    85e8:	9f 4f       	sbci	r25, 0xFF	; 255
    85ea:	20 e1       	ldi	r18, 0x10	; 16
    85ec:	3e e0       	ldi	r19, 0x0E	; 14
    85ee:	fc 01       	movw	r30, r24
    85f0:	20 83       	st	Z, r18
    85f2:	31 83       	std	Z+1, r19	; 0x01
    85f4:	9e 01       	movw	r18, r28
    85f6:	24 5a       	subi	r18, 0xA4	; 164
    85f8:	3f 4f       	sbci	r19, 0xFF	; 255
    85fa:	ce 01       	movw	r24, r28
    85fc:	80 5a       	subi	r24, 0xA0	; 160
    85fe:	9f 4f       	sbci	r25, 0xFF	; 255
    8600:	f9 01       	movw	r30, r18
    8602:	20 81       	ld	r18, Z
    8604:	31 81       	ldd	r19, Z+1	; 0x01
    8606:	fc 01       	movw	r30, r24
    8608:	80 81       	ld	r24, Z
    860a:	91 81       	ldd	r25, Z+1	; 0x01
    860c:	82 17       	cp	r24, r18
    860e:	93 07       	cpc	r25, r19
    8610:	ec f0       	brlt	.+58     	; 0x864c <__RODATA_PM_OFFSET__+0x64c>
    8612:	9e 01       	movw	r18, r28
    8614:	24 5a       	subi	r18, 0xA4	; 164
    8616:	3f 4f       	sbci	r19, 0xFF	; 255
    8618:	ce 01       	movw	r24, r28
    861a:	82 5a       	subi	r24, 0xA2	; 162
    861c:	9f 4f       	sbci	r25, 0xFF	; 255
    861e:	f9 01       	movw	r30, r18
    8620:	20 81       	ld	r18, Z
    8622:	31 81       	ldd	r19, Z+1	; 0x01
    8624:	fc 01       	movw	r30, r24
    8626:	80 81       	ld	r24, Z
    8628:	91 81       	ldd	r25, Z+1	; 0x01
    862a:	28 17       	cp	r18, r24
    862c:	39 07       	cpc	r19, r25
    862e:	3c f4       	brge	.+14     	; 0x863e <__RODATA_PM_OFFSET__+0x63e>
    8630:	ce 01       	movw	r24, r28
    8632:	82 5a       	subi	r24, 0xA2	; 162
    8634:	9f 4f       	sbci	r25, 0xFF	; 255
    8636:	fc 01       	movw	r30, r24
    8638:	80 81       	ld	r24, Z
    863a:	91 81       	ldd	r25, Z+1	; 0x01
    863c:	0d c0       	rjmp	.+26     	; 0x8658 <__RODATA_PM_OFFSET__+0x658>
    863e:	ce 01       	movw	r24, r28
    8640:	84 5a       	subi	r24, 0xA4	; 164
    8642:	9f 4f       	sbci	r25, 0xFF	; 255
    8644:	fc 01       	movw	r30, r24
    8646:	80 81       	ld	r24, Z
    8648:	91 81       	ldd	r25, Z+1	; 0x01
    864a:	06 c0       	rjmp	.+12     	; 0x8658 <__RODATA_PM_OFFSET__+0x658>
    864c:	ce 01       	movw	r24, r28
    864e:	80 5a       	subi	r24, 0xA0	; 160
    8650:	9f 4f       	sbci	r25, 0xFF	; 255
    8652:	fc 01       	movw	r30, r24
    8654:	80 81       	ld	r24, Z
    8656:	91 81       	ldd	r25, Z+1	; 0x01
    8658:	80 93 11 40 	sts	0x4011, r24	; 0x804011 <g_ID_period_seconds>
    865c:	90 93 12 40 	sts	0x4012, r25	; 0x804012 <g_ID_period_seconds+0x1>
		g_intra_cycle_delay_time = CLAMP(0, (int16_t)eeprom_read_word((const uint16_t*)&(EepromManager::ee_vars.intra_cycle_delay_time)), 3600);
    8660:	81 e9       	ldi	r24, 0x91	; 145
    8662:	90 e0       	ldi	r25, 0x00	; 0
    8664:	0e 94 3f 7c 	call	0xf87e	; 0xf87e <eeprom_read_word>
    8668:	9c 01       	movw	r18, r24
    866a:	ce 01       	movw	r24, r28
    866c:	8e 59       	subi	r24, 0x9E	; 158
    866e:	9f 4f       	sbci	r25, 0xFF	; 255
    8670:	fc 01       	movw	r30, r24
    8672:	20 83       	st	Z, r18
    8674:	31 83       	std	Z+1, r19	; 0x01
    8676:	ce 01       	movw	r24, r28
    8678:	8c 59       	subi	r24, 0x9C	; 156
    867a:	9f 4f       	sbci	r25, 0xFF	; 255
    867c:	fc 01       	movw	r30, r24
    867e:	10 82       	st	Z, r1
    8680:	11 82       	std	Z+1, r1	; 0x01
    8682:	ce 01       	movw	r24, r28
    8684:	8a 59       	subi	r24, 0x9A	; 154
    8686:	9f 4f       	sbci	r25, 0xFF	; 255
    8688:	20 e1       	ldi	r18, 0x10	; 16
    868a:	3e e0       	ldi	r19, 0x0E	; 14
    868c:	fc 01       	movw	r30, r24
    868e:	20 83       	st	Z, r18
    8690:	31 83       	std	Z+1, r19	; 0x01
    8692:	9e 01       	movw	r18, r28
    8694:	2e 59       	subi	r18, 0x9E	; 158
    8696:	3f 4f       	sbci	r19, 0xFF	; 255
    8698:	ce 01       	movw	r24, r28
    869a:	8a 59       	subi	r24, 0x9A	; 154
    869c:	9f 4f       	sbci	r25, 0xFF	; 255
    869e:	f9 01       	movw	r30, r18
    86a0:	20 81       	ld	r18, Z
    86a2:	31 81       	ldd	r19, Z+1	; 0x01
    86a4:	fc 01       	movw	r30, r24
    86a6:	80 81       	ld	r24, Z
    86a8:	91 81       	ldd	r25, Z+1	; 0x01
    86aa:	82 17       	cp	r24, r18
    86ac:	93 07       	cpc	r25, r19
    86ae:	ec f0       	brlt	.+58     	; 0x86ea <__RODATA_PM_OFFSET__+0x6ea>
    86b0:	9e 01       	movw	r18, r28
    86b2:	2e 59       	subi	r18, 0x9E	; 158
    86b4:	3f 4f       	sbci	r19, 0xFF	; 255
    86b6:	ce 01       	movw	r24, r28
    86b8:	8c 59       	subi	r24, 0x9C	; 156
    86ba:	9f 4f       	sbci	r25, 0xFF	; 255
    86bc:	f9 01       	movw	r30, r18
    86be:	20 81       	ld	r18, Z
    86c0:	31 81       	ldd	r19, Z+1	; 0x01
    86c2:	fc 01       	movw	r30, r24
    86c4:	80 81       	ld	r24, Z
    86c6:	91 81       	ldd	r25, Z+1	; 0x01
    86c8:	28 17       	cp	r18, r24
    86ca:	39 07       	cpc	r19, r25
    86cc:	3c f4       	brge	.+14     	; 0x86dc <__RODATA_PM_OFFSET__+0x6dc>
    86ce:	ce 01       	movw	r24, r28
    86d0:	8c 59       	subi	r24, 0x9C	; 156
    86d2:	9f 4f       	sbci	r25, 0xFF	; 255
    86d4:	fc 01       	movw	r30, r24
    86d6:	80 81       	ld	r24, Z
    86d8:	91 81       	ldd	r25, Z+1	; 0x01
    86da:	0d c0       	rjmp	.+26     	; 0x86f6 <__RODATA_PM_OFFSET__+0x6f6>
    86dc:	ce 01       	movw	r24, r28
    86de:	8e 59       	subi	r24, 0x9E	; 158
    86e0:	9f 4f       	sbci	r25, 0xFF	; 255
    86e2:	fc 01       	movw	r30, r24
    86e4:	80 81       	ld	r24, Z
    86e6:	91 81       	ldd	r25, Z+1	; 0x01
    86e8:	06 c0       	rjmp	.+12     	; 0x86f6 <__RODATA_PM_OFFSET__+0x6f6>
    86ea:	ce 01       	movw	r24, r28
    86ec:	8a 59       	subi	r24, 0x9A	; 154
    86ee:	9f 4f       	sbci	r25, 0xFF	; 255
    86f0:	fc 01       	movw	r30, r24
    86f2:	80 81       	ld	r24, Z
    86f4:	91 81       	ldd	r25, Z+1	; 0x01
    86f6:	80 93 16 45 	sts	0x4516, r24	; 0x804516 <g_intra_cycle_delay_time>
    86fa:	90 93 17 45 	sts	0x4517, r25	; 0x804517 <g_intra_cycle_delay_time+0x1>

		for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    86fe:	1a 82       	std	Y+2, r1	; 0x02
    8700:	1b 82       	std	Y+3, r1	; 0x03
    8702:	8a 81       	ldd	r24, Y+2	; 0x02
    8704:	9b 81       	ldd	r25, Y+3	; 0x03
    8706:	44 97       	sbiw	r24, 0x14	; 20
    8708:	f0 f4       	brcc	.+60     	; 0x8746 <__RODATA_PM_OFFSET__+0x746>
		{
			char c = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.foxA_pattern_text[i])));
    870a:	8a 81       	ldd	r24, Y+2	; 0x02
    870c:	9b 81       	ldd	r25, Y+3	; 0x03
    870e:	82 54       	subi	r24, 0x42	; 66
    8710:	9f 4f       	sbci	r25, 0xFF	; 255
    8712:	80 50       	subi	r24, 0x00	; 0
    8714:	90 40       	sbci	r25, 0x00	; 0
    8716:	0e 94 30 7c 	call	0xf860	; 0xf860 <eeprom_read_byte>
    871a:	8f 83       	std	Y+7, r24	; 0x07
			if(c==255) c=0;
    871c:	8f 81       	ldd	r24, Y+7	; 0x07
    871e:	8f 3f       	cpi	r24, 0xFF	; 255
    8720:	09 f4       	brne	.+2      	; 0x8724 <__RODATA_PM_OFFSET__+0x724>
    8722:	1f 82       	std	Y+7, r1	; 0x07
			g_messages_text[FOXA_PATTERN_TEXT][i] = c;
    8724:	8a 81       	ldd	r24, Y+2	; 0x02
    8726:	9b 81       	ldd	r25, Y+3	; 0x03
    8728:	80 54       	subi	r24, 0x40	; 64
    872a:	9b 4b       	sbci	r25, 0xBB	; 187
    872c:	2f 81       	ldd	r18, Y+7	; 0x07
    872e:	fc 01       	movw	r30, r24
    8730:	20 83       	st	Z, r18
			if(!c)
    8732:	8f 81       	ldd	r24, Y+7	; 0x07
    8734:	88 23       	and	r24, r24
    8736:	31 f0       	breq	.+12     	; 0x8744 <__RODATA_PM_OFFSET__+0x744>
		g_off_air_seconds = CLAMP(0, (int16_t)eeprom_read_word((const uint16_t*)&(EepromManager::ee_vars.off_air_seconds)), 3600);
		g_on_air_seconds = CLAMP(0, (int16_t)eeprom_read_word((const uint16_t*)&(EepromManager::ee_vars.on_air_seconds)), 3600);
		g_ID_period_seconds = CLAMP(0, (int16_t)eeprom_read_word((const uint16_t*)&(EepromManager::ee_vars.ID_period_seconds)), 3600);
		g_intra_cycle_delay_time = CLAMP(0, (int16_t)eeprom_read_word((const uint16_t*)&(EepromManager::ee_vars.intra_cycle_delay_time)), 3600);

		for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    8738:	8a 81       	ldd	r24, Y+2	; 0x02
    873a:	9b 81       	ldd	r25, Y+3	; 0x03
    873c:	01 96       	adiw	r24, 0x01	; 1
    873e:	8a 83       	std	Y+2, r24	; 0x02
    8740:	9b 83       	std	Y+3, r25	; 0x03
    8742:	df cf       	rjmp	.-66     	; 0x8702 <__RODATA_PM_OFFSET__+0x702>
			char c = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.foxA_pattern_text[i])));
			if(c==255) c=0;
			g_messages_text[FOXA_PATTERN_TEXT][i] = c;
			if(!c)
			{
				break;
    8744:	00 00       	nop
			}
		}

		for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    8746:	1a 82       	std	Y+2, r1	; 0x02
    8748:	1b 82       	std	Y+3, r1	; 0x03
    874a:	8a 81       	ldd	r24, Y+2	; 0x02
    874c:	9b 81       	ldd	r25, Y+3	; 0x03
    874e:	44 97       	sbiw	r24, 0x14	; 20
    8750:	f0 f4       	brcc	.+60     	; 0x878e <__RODATA_PM_OFFSET__+0x78e>
		{
			char c = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.foxB_pattern_text[i])));
    8752:	8a 81       	ldd	r24, Y+2	; 0x02
    8754:	9b 81       	ldd	r25, Y+3	; 0x03
    8756:	89 52       	subi	r24, 0x29	; 41
    8758:	9f 4f       	sbci	r25, 0xFF	; 255
    875a:	80 50       	subi	r24, 0x00	; 0
    875c:	90 40       	sbci	r25, 0x00	; 0
    875e:	0e 94 30 7c 	call	0xf860	; 0xf860 <eeprom_read_byte>
    8762:	88 87       	std	Y+8, r24	; 0x08
			if(c==255) c=0;
    8764:	88 85       	ldd	r24, Y+8	; 0x08
    8766:	8f 3f       	cpi	r24, 0xFF	; 255
    8768:	09 f4       	brne	.+2      	; 0x876c <__RODATA_PM_OFFSET__+0x76c>
    876a:	18 86       	std	Y+8, r1	; 0x08
			g_messages_text[FOXB_PATTERN_TEXT][i] = c;
    876c:	8a 81       	ldd	r24, Y+2	; 0x02
    876e:	9b 81       	ldd	r25, Y+3	; 0x03
    8770:	8b 52       	subi	r24, 0x2B	; 43
    8772:	9b 4b       	sbci	r25, 0xBB	; 187
    8774:	28 85       	ldd	r18, Y+8	; 0x08
    8776:	fc 01       	movw	r30, r24
    8778:	20 83       	st	Z, r18
			if(!c)
    877a:	88 85       	ldd	r24, Y+8	; 0x08
    877c:	88 23       	and	r24, r24
    877e:	31 f0       	breq	.+12     	; 0x878c <__RODATA_PM_OFFSET__+0x78c>
			{
				break;
			}
		}

		for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    8780:	8a 81       	ldd	r24, Y+2	; 0x02
    8782:	9b 81       	ldd	r25, Y+3	; 0x03
    8784:	01 96       	adiw	r24, 0x01	; 1
    8786:	8a 83       	std	Y+2, r24	; 0x02
    8788:	9b 83       	std	Y+3, r25	; 0x03
    878a:	df cf       	rjmp	.-66     	; 0x874a <__RODATA_PM_OFFSET__+0x74a>
			char c = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.foxB_pattern_text[i])));
			if(c==255) c=0;
			g_messages_text[FOXB_PATTERN_TEXT][i] = c;
			if(!c)
			{
				break;
    878c:	00 00       	nop
			}
		}

		for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    878e:	1a 82       	std	Y+2, r1	; 0x02
    8790:	1b 82       	std	Y+3, r1	; 0x03
    8792:	8a 81       	ldd	r24, Y+2	; 0x02
    8794:	9b 81       	ldd	r25, Y+3	; 0x03
    8796:	44 97       	sbiw	r24, 0x14	; 20
    8798:	f0 f4       	brcc	.+60     	; 0x87d6 <__RODATA_PM_OFFSET__+0x7d6>
		{
			char c = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.foxC_pattern_text[i])));
    879a:	8a 81       	ldd	r24, Y+2	; 0x02
    879c:	9b 81       	ldd	r25, Y+3	; 0x03
    879e:	80 51       	subi	r24, 0x10	; 16
    87a0:	9f 4f       	sbci	r25, 0xFF	; 255
    87a2:	80 50       	subi	r24, 0x00	; 0
    87a4:	90 40       	sbci	r25, 0x00	; 0
    87a6:	0e 94 30 7c 	call	0xf860	; 0xf860 <eeprom_read_byte>
    87aa:	89 87       	std	Y+9, r24	; 0x09
			if(c==255) c=0;
    87ac:	89 85       	ldd	r24, Y+9	; 0x09
    87ae:	8f 3f       	cpi	r24, 0xFF	; 255
    87b0:	09 f4       	brne	.+2      	; 0x87b4 <__RODATA_PM_OFFSET__+0x7b4>
    87b2:	19 86       	std	Y+9, r1	; 0x09
			g_messages_text[FOXC_PATTERN_TEXT][i] = c;
    87b4:	8a 81       	ldd	r24, Y+2	; 0x02
    87b6:	9b 81       	ldd	r25, Y+3	; 0x03
    87b8:	86 51       	subi	r24, 0x16	; 22
    87ba:	9b 4b       	sbci	r25, 0xBB	; 187
    87bc:	29 85       	ldd	r18, Y+9	; 0x09
    87be:	fc 01       	movw	r30, r24
    87c0:	20 83       	st	Z, r18
			if(!c)
    87c2:	89 85       	ldd	r24, Y+9	; 0x09
    87c4:	88 23       	and	r24, r24
    87c6:	31 f0       	breq	.+12     	; 0x87d4 <__RODATA_PM_OFFSET__+0x7d4>
			{
				break;
			}
		}

		for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    87c8:	8a 81       	ldd	r24, Y+2	; 0x02
    87ca:	9b 81       	ldd	r25, Y+3	; 0x03
    87cc:	01 96       	adiw	r24, 0x01	; 1
    87ce:	8a 83       	std	Y+2, r24	; 0x02
    87d0:	9b 83       	std	Y+3, r25	; 0x03
    87d2:	df cf       	rjmp	.-66     	; 0x8792 <__RODATA_PM_OFFSET__+0x792>
			char c = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.foxC_pattern_text[i])));
			if(c==255) c=0;
			g_messages_text[FOXC_PATTERN_TEXT][i] = c;
			if(!c)
			{
				break;
    87d4:	00 00       	nop
			}
		}
		
		g_voltage_threshold = CLAMP(0.1, eeprom_read_float(&(EepromManager::ee_vars.voltage_threshold)), 15.0);
    87d6:	8e 01       	movw	r16, r28
    87d8:	08 59       	subi	r16, 0x98	; 152
    87da:	1f 4f       	sbci	r17, 0xFF	; 255
    87dc:	89 e0       	ldi	r24, 0x09	; 9
    87de:	91 e0       	ldi	r25, 0x01	; 1
    87e0:	0e 94 38 7c 	call	0xf870	; 0xf870 <eeprom_read_dword>
    87e4:	dc 01       	movw	r26, r24
    87e6:	cb 01       	movw	r24, r22
    87e8:	f8 01       	movw	r30, r16
    87ea:	80 83       	st	Z, r24
    87ec:	91 83       	std	Z+1, r25	; 0x01
    87ee:	a2 83       	std	Z+2, r26	; 0x02
    87f0:	b3 83       	std	Z+3, r27	; 0x03
    87f2:	9e 01       	movw	r18, r28
    87f4:	24 59       	subi	r18, 0x94	; 148
    87f6:	3f 4f       	sbci	r19, 0xFF	; 255
    87f8:	8d ec       	ldi	r24, 0xCD	; 205
    87fa:	9c ec       	ldi	r25, 0xCC	; 204
    87fc:	ac ec       	ldi	r26, 0xCC	; 204
    87fe:	bd e3       	ldi	r27, 0x3D	; 61
    8800:	f9 01       	movw	r30, r18
    8802:	80 83       	st	Z, r24
    8804:	91 83       	std	Z+1, r25	; 0x01
    8806:	a2 83       	std	Z+2, r26	; 0x02
    8808:	b3 83       	std	Z+3, r27	; 0x03
    880a:	9e 01       	movw	r18, r28
    880c:	20 59       	subi	r18, 0x90	; 144
    880e:	3f 4f       	sbci	r19, 0xFF	; 255
    8810:	80 e0       	ldi	r24, 0x00	; 0
    8812:	90 e0       	ldi	r25, 0x00	; 0
    8814:	a0 e7       	ldi	r26, 0x70	; 112
    8816:	b1 e4       	ldi	r27, 0x41	; 65
    8818:	f9 01       	movw	r30, r18
    881a:	80 83       	st	Z, r24
    881c:	91 83       	std	Z+1, r25	; 0x01
    881e:	a2 83       	std	Z+2, r26	; 0x02
    8820:	b3 83       	std	Z+3, r27	; 0x03
    8822:	ce 01       	movw	r24, r28
    8824:	88 59       	subi	r24, 0x98	; 152
    8826:	9f 4f       	sbci	r25, 0xFF	; 255
    8828:	9e 01       	movw	r18, r28
    882a:	20 59       	subi	r18, 0x90	; 144
    882c:	3f 4f       	sbci	r19, 0xFF	; 255
    882e:	f9 01       	movw	r30, r18
    8830:	20 81       	ld	r18, Z
    8832:	31 81       	ldd	r19, Z+1	; 0x01
    8834:	42 81       	ldd	r20, Z+2	; 0x02
    8836:	53 81       	ldd	r21, Z+3	; 0x03
    8838:	fc 01       	movw	r30, r24
    883a:	60 81       	ld	r22, Z
    883c:	71 81       	ldd	r23, Z+1	; 0x01
    883e:	82 81       	ldd	r24, Z+2	; 0x02
    8840:	93 81       	ldd	r25, Z+3	; 0x03
    8842:	0e 94 29 74 	call	0xe852	; 0xe852 <__gesf2>
    8846:	18 16       	cp	r1, r24
    8848:	4c f4       	brge	.+18     	; 0x885c <__RODATA_PM_OFFSET__+0x85c>
    884a:	ce 01       	movw	r24, r28
    884c:	80 59       	subi	r24, 0x90	; 144
    884e:	9f 4f       	sbci	r25, 0xFF	; 255
    8850:	fc 01       	movw	r30, r24
    8852:	80 81       	ld	r24, Z
    8854:	91 81       	ldd	r25, Z+1	; 0x01
    8856:	a2 81       	ldd	r26, Z+2	; 0x02
    8858:	b3 81       	ldd	r27, Z+3	; 0x03
    885a:	25 c0       	rjmp	.+74     	; 0x88a6 <__RODATA_PM_OFFSET__+0x8a6>
    885c:	ce 01       	movw	r24, r28
    885e:	88 59       	subi	r24, 0x98	; 152
    8860:	9f 4f       	sbci	r25, 0xFF	; 255
    8862:	9e 01       	movw	r18, r28
    8864:	24 59       	subi	r18, 0x94	; 148
    8866:	3f 4f       	sbci	r19, 0xFF	; 255
    8868:	f9 01       	movw	r30, r18
    886a:	20 81       	ld	r18, Z
    886c:	31 81       	ldd	r19, Z+1	; 0x01
    886e:	42 81       	ldd	r20, Z+2	; 0x02
    8870:	53 81       	ldd	r21, Z+3	; 0x03
    8872:	fc 01       	movw	r30, r24
    8874:	60 81       	ld	r22, Z
    8876:	71 81       	ldd	r23, Z+1	; 0x01
    8878:	82 81       	ldd	r24, Z+2	; 0x02
    887a:	93 81       	ldd	r25, Z+3	; 0x03
    887c:	0e 94 ca 72 	call	0xe594	; 0xe594 <__cmpsf2>
    8880:	88 23       	and	r24, r24
    8882:	4c f4       	brge	.+18     	; 0x8896 <__RODATA_PM_OFFSET__+0x896>
    8884:	ce 01       	movw	r24, r28
    8886:	84 59       	subi	r24, 0x94	; 148
    8888:	9f 4f       	sbci	r25, 0xFF	; 255
    888a:	fc 01       	movw	r30, r24
    888c:	80 81       	ld	r24, Z
    888e:	91 81       	ldd	r25, Z+1	; 0x01
    8890:	a2 81       	ldd	r26, Z+2	; 0x02
    8892:	b3 81       	ldd	r27, Z+3	; 0x03
    8894:	08 c0       	rjmp	.+16     	; 0x88a6 <__RODATA_PM_OFFSET__+0x8a6>
    8896:	ce 01       	movw	r24, r28
    8898:	88 59       	subi	r24, 0x98	; 152
    889a:	9f 4f       	sbci	r25, 0xFF	; 255
    889c:	fc 01       	movw	r30, r24
    889e:	80 81       	ld	r24, Z
    88a0:	91 81       	ldd	r25, Z+1	; 0x01
    88a2:	a2 81       	ldd	r26, Z+2	; 0x02
    88a4:	b3 81       	ldd	r27, Z+3	; 0x03
    88a6:	80 93 35 40 	sts	0x4035, r24	; 0x804035 <g_voltage_threshold>
    88aa:	90 93 36 40 	sts	0x4036, r25	; 0x804036 <g_voltage_threshold+0x1>
    88ae:	a0 93 37 40 	sts	0x4037, r26	; 0x804037 <g_voltage_threshold+0x2>
    88b2:	b0 93 38 40 	sts	0x4038, r27	; 0x804038 <g_voltage_threshold+0x3>
		
		g_clock_calibration = eeprom_read_word(&(EepromManager::ee_vars.clock_calibration));
    88b6:	81 e1       	ldi	r24, 0x11	; 17
    88b8:	91 e0       	ldi	r25, 0x01	; 1
    88ba:	0e 94 3f 7c 	call	0xf87e	; 0xf87e <eeprom_read_word>
    88be:	80 93 39 40 	sts	0x4039, r24	; 0x804039 <g_clock_calibration>
    88c2:	90 93 3a 40 	sts	0x403A, r25	; 0x80403a <g_clock_calibration+0x1>

		failure = false;
    88c6:	19 82       	std	Y+1, r1	; 0x01
	}

	return( failure);
    88c8:	89 81       	ldd	r24, Y+1	; 0x01
}
    88ca:	cb 58       	subi	r28, 0x8B	; 139
    88cc:	df 4f       	sbci	r29, 0xFF	; 255
    88ce:	cd bf       	out	0x3d, r28	; 61
    88d0:	de bf       	out	0x3e, r29	; 62
    88d2:	df 91       	pop	r29
    88d4:	cf 91       	pop	r28
    88d6:	1f 91       	pop	r17
    88d8:	0f 91       	pop	r16
    88da:	08 95       	ret

000088dc <_ZN13EepromManager20initializeEEPROMVarsEv>:

/*
 * Set volatile variables to their values stored in EEPROM
 */
	bool EepromManager::initializeEEPROMVars(void)
	{
    88dc:	cf 93       	push	r28
    88de:	df 93       	push	r29
    88e0:	cd b7       	in	r28, 0x3d	; 61
    88e2:	de b7       	in	r29, 0x3e	; 62
    88e4:	2b 97       	sbiw	r28, 0x0b	; 11
    88e6:	cd bf       	out	0x3d, r28	; 61
    88e8:	de bf       	out	0x3e, r29	; 62
    88ea:	8a 87       	std	Y+10, r24	; 0x0a
    88ec:	9b 87       	std	Y+11, r25	; 0x0b
		bool err = false;
    88ee:	1f 82       	std	Y+7, r1	; 0x07
		uint16_t i, j;

		uint16_t initialization_flag = eeprom_read_word(0);
    88f0:	80 e0       	ldi	r24, 0x00	; 0
    88f2:	90 e0       	ldi	r25, 0x00	; 0
    88f4:	0e 94 3f 7c 	call	0xf87e	; 0xf87e <eeprom_read_word>
    88f8:	88 87       	std	Y+8, r24	; 0x08
    88fa:	99 87       	std	Y+9, r25	; 0x09

		if(initialization_flag != EEPROM_INITIALIZED_FLAG)
    88fc:	88 85       	ldd	r24, Y+8	; 0x08
    88fe:	99 85       	ldd	r25, Y+9	; 0x09
    8900:	82 30       	cpi	r24, 0x02	; 2
    8902:	91 40       	sbci	r25, 0x01	; 1
    8904:	09 f4       	brne	.+2      	; 0x8908 <_ZN13EepromManager20initializeEEPROMVarsEv+0x2c>
    8906:	88 c2       	rjmp	.+1296   	; 0x8e18 <_ZN13EepromManager20initializeEEPROMVarsEv+0x53c>
		{
			g_id_codespeed = EEPROM_ID_CODE_SPEED_DEFAULT;
    8908:	84 e1       	ldi	r24, 0x14	; 20
    890a:	80 93 0b 40 	sts	0x400B, r24	; 0x80400b <g_id_codespeed>
			avr_eeprom_write_byte(Id_codespeed, g_id_codespeed);
    890e:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    8912:	68 2f       	mov	r22, r24
    8914:	85 e5       	ldi	r24, 0x55	; 85
    8916:	90 e0       	ldi	r25, 0x00	; 0
    8918:	0e 94 6a 39 	call	0x72d4	; 0x72d4 <_Z21avr_eeprom_write_bytejh>
			
			g_isMaster = EEPROM_MASTER_SETTING_DEFAULT;
    891c:	10 92 70 45 	sts	0x4570, r1	; 0x804570 <g_isMaster>
			avr_eeprom_write_byte(Master_setting, g_isMaster);
    8920:	80 91 70 45 	lds	r24, 0x4570	; 0x804570 <g_isMaster>
    8924:	68 2f       	mov	r22, r24
    8926:	89 eb       	ldi	r24, 0xB9	; 185
    8928:	90 e0       	ldi	r25, 0x00	; 0
    892a:	0e 94 6a 39 	call	0x72d4	; 0x72d4 <_Z21avr_eeprom_write_bytejh>

			g_fox = EEPROM_FOX_SETTING_DEFAULT;
    892e:	81 e0       	ldi	r24, 0x01	; 1
    8930:	80 93 1e 40 	sts	0x401E, r24	; 0x80401e <g_fox>
			avr_eeprom_write_byte(Fox_setting, (uint8_t)g_fox);
    8934:	80 91 1e 40 	lds	r24, 0x401E	; 0x80401e <g_fox>
    8938:	68 2f       	mov	r22, r24
    893a:	8a e5       	ldi	r24, 0x5A	; 90
    893c:	90 e0       	ldi	r25, 0x00	; 0
    893e:	0e 94 6a 39 	call	0x72d4	; 0x72d4 <_Z21avr_eeprom_write_bytejh>
			
			g_event = EEPROM_EVENT_SETTING_DEFAULT;
    8942:	10 92 71 45 	sts	0x4571, r1	; 0x804571 <g_event>
			avr_eeprom_write_byte(Event_setting, (uint8_t)g_event);
    8946:	80 91 71 45 	lds	r24, 0x4571	; 0x804571 <g_event>
    894a:	68 2f       	mov	r22, r24
    894c:	87 e9       	ldi	r24, 0x97	; 151
    894e:	90 e0       	ldi	r25, 0x00	; 0
    8950:	0e 94 6a 39 	call	0x72d4	; 0x72d4 <_Z21avr_eeprom_write_bytejh>
			
			g_foxoring_frequencyA = EEPROM_FOXORING_FREQUENCYA_DEFAULT;
    8954:	80 e0       	ldi	r24, 0x00	; 0
    8956:	96 eb       	ldi	r25, 0xB6	; 182
    8958:	a5 e3       	ldi	r26, 0x35	; 53
    895a:	b0 e0       	ldi	r27, 0x00	; 0
    895c:	80 93 28 40 	sts	0x4028, r24	; 0x804028 <g_foxoring_frequencyA>
    8960:	90 93 29 40 	sts	0x4029, r25	; 0x804029 <g_foxoring_frequencyA+0x1>
    8964:	a0 93 2a 40 	sts	0x402A, r26	; 0x80402a <g_foxoring_frequencyA+0x2>
    8968:	b0 93 2b 40 	sts	0x402B, r27	; 0x80402b <g_foxoring_frequencyA+0x3>
			avr_eeprom_write_dword(Foxoring_FrequencyA, g_foxoring_frequencyA);
    896c:	80 91 28 40 	lds	r24, 0x4028	; 0x804028 <g_foxoring_frequencyA>
    8970:	90 91 29 40 	lds	r25, 0x4029	; 0x804029 <g_foxoring_frequencyA+0x1>
    8974:	a0 91 2a 40 	lds	r26, 0x402A	; 0x80402a <g_foxoring_frequencyA+0x2>
    8978:	b0 91 2b 40 	lds	r27, 0x402B	; 0x80402b <g_foxoring_frequencyA+0x3>
    897c:	ac 01       	movw	r20, r24
    897e:	bd 01       	movw	r22, r26
    8980:	8c e9       	ldi	r24, 0x9C	; 156
    8982:	90 e0       	ldi	r25, 0x00	; 0
    8984:	0e 94 cc 39 	call	0x7398	; 0x7398 <_Z22avr_eeprom_write_dwordjm>
			
			g_foxoring_frequencyB = EEPROM_FOXORING_FREQUENCYB_DEFAULT;
    8988:	80 e3       	ldi	r24, 0x30	; 48
    898a:	9b e2       	ldi	r25, 0x2B	; 43
    898c:	a6 e3       	ldi	r26, 0x36	; 54
    898e:	b0 e0       	ldi	r27, 0x00	; 0
    8990:	80 93 2c 40 	sts	0x402C, r24	; 0x80402c <g_foxoring_frequencyB>
    8994:	90 93 2d 40 	sts	0x402D, r25	; 0x80402d <g_foxoring_frequencyB+0x1>
    8998:	a0 93 2e 40 	sts	0x402E, r26	; 0x80402e <g_foxoring_frequencyB+0x2>
    899c:	b0 93 2f 40 	sts	0x402F, r27	; 0x80402f <g_foxoring_frequencyB+0x3>
			avr_eeprom_write_dword(Foxoring_FrequencyB, g_foxoring_frequencyB);
    89a0:	80 91 2c 40 	lds	r24, 0x402C	; 0x80402c <g_foxoring_frequencyB>
    89a4:	90 91 2d 40 	lds	r25, 0x402D	; 0x80402d <g_foxoring_frequencyB+0x1>
    89a8:	a0 91 2e 40 	lds	r26, 0x402E	; 0x80402e <g_foxoring_frequencyB+0x2>
    89ac:	b0 91 2f 40 	lds	r27, 0x402F	; 0x80402f <g_foxoring_frequencyB+0x3>
    89b0:	ac 01       	movw	r20, r24
    89b2:	bd 01       	movw	r22, r26
    89b4:	84 ea       	ldi	r24, 0xA4	; 164
    89b6:	90 e0       	ldi	r25, 0x00	; 0
    89b8:	0e 94 cc 39 	call	0x7398	; 0x7398 <_Z22avr_eeprom_write_dwordjm>
			
			g_foxoring_frequencyC = EEPROM_FOXORING_FREQUENCYC_DEFAULT;
    89bc:	80 e5       	ldi	r24, 0x50	; 80
    89be:	99 e7       	ldi	r25, 0x79	; 121
    89c0:	a6 e3       	ldi	r26, 0x36	; 54
    89c2:	b0 e0       	ldi	r27, 0x00	; 0
    89c4:	80 93 30 40 	sts	0x4030, r24	; 0x804030 <g_foxoring_frequencyC>
    89c8:	90 93 31 40 	sts	0x4031, r25	; 0x804031 <g_foxoring_frequencyC+0x1>
    89cc:	a0 93 32 40 	sts	0x4032, r26	; 0x804032 <g_foxoring_frequencyC+0x2>
    89d0:	b0 93 33 40 	sts	0x4033, r27	; 0x804033 <g_foxoring_frequencyC+0x3>
			avr_eeprom_write_dword(Foxoring_FrequencyC, g_foxoring_frequencyC);
    89d4:	80 91 30 40 	lds	r24, 0x4030	; 0x804030 <g_foxoring_frequencyC>
    89d8:	90 91 31 40 	lds	r25, 0x4031	; 0x804031 <g_foxoring_frequencyC+0x1>
    89dc:	a0 91 32 40 	lds	r26, 0x4032	; 0x804032 <g_foxoring_frequencyC+0x2>
    89e0:	b0 91 33 40 	lds	r27, 0x4033	; 0x804033 <g_foxoring_frequencyC+0x3>
    89e4:	ac 01       	movw	r20, r24
    89e6:	bd 01       	movw	r22, r26
    89e8:	8c ea       	ldi	r24, 0xAC	; 172
    89ea:	90 e0       	ldi	r25, 0x00	; 0
    89ec:	0e 94 cc 39 	call	0x7398	; 0x7398 <_Z22avr_eeprom_write_dwordjm>

			g_foxoring_fox = EEPROM_FOXORING_FOX_SETTING_DEFAULT;
    89f0:	82 e1       	ldi	r24, 0x12	; 18
    89f2:	80 93 34 40 	sts	0x4034, r24	; 0x804034 <g_foxoring_fox>
			avr_eeprom_write_byte(Foxoring_fox_setting, (uint8_t)g_foxoring_fox);
    89f6:	80 91 34 40 	lds	r24, 0x4034	; 0x804034 <g_foxoring_fox>
    89fa:	68 2f       	mov	r22, r24
    89fc:	84 eb       	ldi	r24, 0xB4	; 180
    89fe:	90 e0       	ldi	r25, 0x00	; 0
    8a00:	0e 94 6a 39 	call	0x72d4	; 0x72d4 <_Z21avr_eeprom_write_bytejh>

			g_event_start_epoch = EEPROM_START_EPOCH_DEFAULT;
    8a04:	10 92 18 45 	sts	0x4518, r1	; 0x804518 <g_event_start_epoch>
    8a08:	10 92 19 45 	sts	0x4519, r1	; 0x804519 <g_event_start_epoch+0x1>
    8a0c:	10 92 1a 45 	sts	0x451A, r1	; 0x80451a <g_event_start_epoch+0x2>
    8a10:	10 92 1b 45 	sts	0x451B, r1	; 0x80451b <g_event_start_epoch+0x3>
			avr_eeprom_write_dword(Event_start_epoch, g_event_start_epoch);
    8a14:	80 91 18 45 	lds	r24, 0x4518	; 0x804518 <g_event_start_epoch>
    8a18:	90 91 19 45 	lds	r25, 0x4519	; 0x804519 <g_event_start_epoch+0x1>
    8a1c:	a0 91 1a 45 	lds	r26, 0x451A	; 0x80451a <g_event_start_epoch+0x2>
    8a20:	b0 91 1b 45 	lds	r27, 0x451B	; 0x80451b <g_event_start_epoch+0x3>
    8a24:	ac 01       	movw	r20, r24
    8a26:	bd 01       	movw	r22, r26
    8a28:	86 e0       	ldi	r24, 0x06	; 6
    8a2a:	90 e0       	ldi	r25, 0x00	; 0
    8a2c:	0e 94 cc 39 	call	0x7398	; 0x7398 <_Z22avr_eeprom_write_dwordjm>

			g_event_finish_epoch = EEPROM_FINISH_EPOCH_DEFAULT;
    8a30:	10 92 1c 45 	sts	0x451C, r1	; 0x80451c <g_event_finish_epoch>
    8a34:	10 92 1d 45 	sts	0x451D, r1	; 0x80451d <g_event_finish_epoch+0x1>
    8a38:	10 92 1e 45 	sts	0x451E, r1	; 0x80451e <g_event_finish_epoch+0x2>
    8a3c:	10 92 1f 45 	sts	0x451F, r1	; 0x80451f <g_event_finish_epoch+0x3>
			avr_eeprom_write_dword(Event_finish_epoch, g_event_finish_epoch);
    8a40:	80 91 1c 45 	lds	r24, 0x451C	; 0x80451c <g_event_finish_epoch>
    8a44:	90 91 1d 45 	lds	r25, 0x451D	; 0x80451d <g_event_finish_epoch+0x1>
    8a48:	a0 91 1e 45 	lds	r26, 0x451E	; 0x80451e <g_event_finish_epoch+0x2>
    8a4c:	b0 91 1f 45 	lds	r27, 0x451F	; 0x80451f <g_event_finish_epoch+0x3>
    8a50:	ac 01       	movw	r20, r24
    8a52:	bd 01       	movw	r22, r26
    8a54:	8e e0       	ldi	r24, 0x0E	; 14
    8a56:	90 e0       	ldi	r25, 0x00	; 0
    8a58:	0e 94 cc 39 	call	0x7398	; 0x7398 <_Z22avr_eeprom_write_dwordjm>

			g_utc_offset = EEPROM_UTC_OFFSET_DEFAULT;
    8a5c:	10 92 4d 45 	sts	0x454D, r1	; 0x80454d <g_utc_offset>
			avr_eeprom_write_byte(Utc_offset, (uint8_t)g_utc_offset);
    8a60:	80 91 4d 45 	lds	r24, 0x454D	; 0x80454d <g_utc_offset>
    8a64:	68 2f       	mov	r22, r24
    8a66:	8f e5       	ldi	r24, 0x5F	; 95
    8a68:	90 e0       	ldi	r25, 0x00	; 0
    8a6a:	0e 94 6a 39 	call	0x72d4	; 0x72d4 <_Z21avr_eeprom_write_bytejh>

			g_messages_text[STATION_ID][0] = '\0';
    8a6e:	10 92 ff 44 	sts	0x44FF, r1	; 0x8044ff <g_messages_text+0x54>
			avr_eeprom_write_byte(StationID_text, 0);
    8a72:	60 e0       	ldi	r22, 0x00	; 0
    8a74:	86 e1       	ldi	r24, 0x16	; 22
    8a76:	90 e0       	ldi	r25, 0x00	; 0
    8a78:	0e 94 6a 39 	call	0x72d4	; 0x72d4 <_Z21avr_eeprom_write_bytejh>

			uint8_t *v = (uint8_t*)EEPROM_FOX_PATTERN_DEFAULT;
    8a7c:	8e ed       	ldi	r24, 0xDE	; 222
    8a7e:	93 e4       	ldi	r25, 0x43	; 67
    8a80:	8d 83       	std	Y+5, r24	; 0x05
    8a82:	9e 83       	std	Y+6, r25	; 0x06
			i = Pattern_text;
    8a84:	8f e2       	ldi	r24, 0x2F	; 47
    8a86:	90 e0       	ldi	r25, 0x00	; 0
    8a88:	89 83       	std	Y+1, r24	; 0x01
    8a8a:	9a 83       	std	Y+2, r25	; 0x02
			for(j = 0; j < strlen(EEPROM_FOX_PATTERN_DEFAULT); j++)
    8a8c:	1b 82       	std	Y+3, r1	; 0x03
    8a8e:	1c 82       	std	Y+4, r1	; 0x04
    8a90:	8b 81       	ldd	r24, Y+3	; 0x03
    8a92:	9c 81       	ldd	r25, Y+4	; 0x04
    8a94:	03 97       	sbiw	r24, 0x03	; 3
    8a96:	18 f5       	brcc	.+70     	; 0x8ade <_ZN13EepromManager20initializeEEPROMVarsEv+0x202>
			{
				g_messages_text[PATTERN_TEXT][j] = *v;
    8a98:	8d 81       	ldd	r24, Y+5	; 0x05
    8a9a:	9e 81       	ldd	r25, Y+6	; 0x06
    8a9c:	fc 01       	movw	r30, r24
    8a9e:	20 81       	ld	r18, Z
    8aa0:	8b 81       	ldd	r24, Y+3	; 0x03
    8aa2:	9c 81       	ldd	r25, Y+4	; 0x04
    8aa4:	85 55       	subi	r24, 0x55	; 85
    8aa6:	9b 4b       	sbci	r25, 0xBB	; 187
    8aa8:	fc 01       	movw	r30, r24
    8aaa:	20 83       	st	Z, r18
				avr_eeprom_write_byte(i++, *v++);
    8aac:	8d 81       	ldd	r24, Y+5	; 0x05
    8aae:	9e 81       	ldd	r25, Y+6	; 0x06
    8ab0:	9c 01       	movw	r18, r24
    8ab2:	2f 5f       	subi	r18, 0xFF	; 255
    8ab4:	3f 4f       	sbci	r19, 0xFF	; 255
    8ab6:	2d 83       	std	Y+5, r18	; 0x05
    8ab8:	3e 83       	std	Y+6, r19	; 0x06
    8aba:	fc 01       	movw	r30, r24
    8abc:	40 81       	ld	r20, Z
    8abe:	89 81       	ldd	r24, Y+1	; 0x01
    8ac0:	9a 81       	ldd	r25, Y+2	; 0x02
    8ac2:	9c 01       	movw	r18, r24
    8ac4:	2f 5f       	subi	r18, 0xFF	; 255
    8ac6:	3f 4f       	sbci	r19, 0xFF	; 255
    8ac8:	29 83       	std	Y+1, r18	; 0x01
    8aca:	3a 83       	std	Y+2, r19	; 0x02
    8acc:	64 2f       	mov	r22, r20
    8ace:	0e 94 6a 39 	call	0x72d4	; 0x72d4 <_Z21avr_eeprom_write_bytejh>
			g_messages_text[STATION_ID][0] = '\0';
			avr_eeprom_write_byte(StationID_text, 0);

			uint8_t *v = (uint8_t*)EEPROM_FOX_PATTERN_DEFAULT;
			i = Pattern_text;
			for(j = 0; j < strlen(EEPROM_FOX_PATTERN_DEFAULT); j++)
    8ad2:	8b 81       	ldd	r24, Y+3	; 0x03
    8ad4:	9c 81       	ldd	r25, Y+4	; 0x04
    8ad6:	01 96       	adiw	r24, 0x01	; 1
    8ad8:	8b 83       	std	Y+3, r24	; 0x03
    8ada:	9c 83       	std	Y+4, r25	; 0x04
    8adc:	d9 cf       	rjmp	.-78     	; 0x8a90 <_ZN13EepromManager20initializeEEPROMVarsEv+0x1b4>
			{
				g_messages_text[PATTERN_TEXT][j] = *v;
				avr_eeprom_write_byte(i++, *v++);
			}
			
			avr_eeprom_write_byte(i, '\0');
    8ade:	89 81       	ldd	r24, Y+1	; 0x01
    8ae0:	9a 81       	ldd	r25, Y+2	; 0x02
    8ae2:	60 e0       	ldi	r22, 0x00	; 0
    8ae4:	0e 94 6a 39 	call	0x72d4	; 0x72d4 <_Z21avr_eeprom_write_bytejh>

			v = (uint8_t*)EEPROM_DTMF_UNLOCK_CODE_DEFAULT;
    8ae8:	82 ee       	ldi	r24, 0xE2	; 226
    8aea:	93 e4       	ldi	r25, 0x43	; 67
    8aec:	8d 83       	std	Y+5, r24	; 0x05
    8aee:	9e 83       	std	Y+6, r25	; 0x06
			i = UnlockCode;
    8af0:	88 e4       	ldi	r24, 0x48	; 72
    8af2:	90 e0       	ldi	r25, 0x00	; 0
    8af4:	89 83       	std	Y+1, r24	; 0x01
    8af6:	9a 83       	std	Y+2, r25	; 0x02
			for(j = 0; j < strlen(EEPROM_DTMF_UNLOCK_CODE_DEFAULT); j++)
    8af8:	1b 82       	std	Y+3, r1	; 0x03
    8afa:	1c 82       	std	Y+4, r1	; 0x04
    8afc:	8b 81       	ldd	r24, Y+3	; 0x03
    8afe:	9c 81       	ldd	r25, Y+4	; 0x04
    8b00:	04 97       	sbiw	r24, 0x04	; 4
    8b02:	18 f5       	brcc	.+70     	; 0x8b4a <_ZN13EepromManager20initializeEEPROMVarsEv+0x26e>
			{
				g_unlockCode[j] = *v;
    8b04:	8d 81       	ldd	r24, Y+5	; 0x05
    8b06:	9e 81       	ldd	r25, Y+6	; 0x06
    8b08:	fc 01       	movw	r30, r24
    8b0a:	20 81       	ld	r18, Z
    8b0c:	8b 81       	ldd	r24, Y+3	; 0x03
    8b0e:	9c 81       	ldd	r25, Y+4	; 0x04
    8b10:	82 5b       	subi	r24, 0xB2	; 178
    8b12:	9a 4b       	sbci	r25, 0xBA	; 186
    8b14:	fc 01       	movw	r30, r24
    8b16:	20 83       	st	Z, r18
				avr_eeprom_write_byte(i++, *v++);
    8b18:	8d 81       	ldd	r24, Y+5	; 0x05
    8b1a:	9e 81       	ldd	r25, Y+6	; 0x06
    8b1c:	9c 01       	movw	r18, r24
    8b1e:	2f 5f       	subi	r18, 0xFF	; 255
    8b20:	3f 4f       	sbci	r19, 0xFF	; 255
    8b22:	2d 83       	std	Y+5, r18	; 0x05
    8b24:	3e 83       	std	Y+6, r19	; 0x06
    8b26:	fc 01       	movw	r30, r24
    8b28:	40 81       	ld	r20, Z
    8b2a:	89 81       	ldd	r24, Y+1	; 0x01
    8b2c:	9a 81       	ldd	r25, Y+2	; 0x02
    8b2e:	9c 01       	movw	r18, r24
    8b30:	2f 5f       	subi	r18, 0xFF	; 255
    8b32:	3f 4f       	sbci	r19, 0xFF	; 255
    8b34:	29 83       	std	Y+1, r18	; 0x01
    8b36:	3a 83       	std	Y+2, r19	; 0x02
    8b38:	64 2f       	mov	r22, r20
    8b3a:	0e 94 6a 39 	call	0x72d4	; 0x72d4 <_Z21avr_eeprom_write_bytejh>
			
			avr_eeprom_write_byte(i, '\0');

			v = (uint8_t*)EEPROM_DTMF_UNLOCK_CODE_DEFAULT;
			i = UnlockCode;
			for(j = 0; j < strlen(EEPROM_DTMF_UNLOCK_CODE_DEFAULT); j++)
    8b3e:	8b 81       	ldd	r24, Y+3	; 0x03
    8b40:	9c 81       	ldd	r25, Y+4	; 0x04
    8b42:	01 96       	adiw	r24, 0x01	; 1
    8b44:	8b 83       	std	Y+3, r24	; 0x03
    8b46:	9c 83       	std	Y+4, r25	; 0x04
    8b48:	d9 cf       	rjmp	.-78     	; 0x8afc <_ZN13EepromManager20initializeEEPROMVarsEv+0x220>
			{
				g_unlockCode[j] = *v;
				avr_eeprom_write_byte(i++, *v++);
			}

			avr_eeprom_write_byte(i, '\0');
    8b4a:	89 81       	ldd	r24, Y+1	; 0x01
    8b4c:	9a 81       	ldd	r25, Y+2	; 0x02
    8b4e:	60 e0       	ldi	r22, 0x00	; 0
    8b50:	0e 94 6a 39 	call	0x72d4	; 0x72d4 <_Z21avr_eeprom_write_bytejh>
			g_unlockCode[j] = '\0';
    8b54:	8b 81       	ldd	r24, Y+3	; 0x03
    8b56:	9c 81       	ldd	r25, Y+4	; 0x04
    8b58:	82 5b       	subi	r24, 0xB2	; 178
    8b5a:	9a 4b       	sbci	r25, 0xBA	; 186
    8b5c:	fc 01       	movw	r30, r24
    8b5e:	10 82       	st	Z, r1
			
			g_80m_frequency = EEPROM_TX_80M_FREQUENCY_DEFAULT;
    8b60:	80 e2       	ldi	r24, 0x20	; 32
    8b62:	94 e0       	ldi	r25, 0x04	; 4
    8b64:	a6 e3       	ldi	r26, 0x36	; 54
    8b66:	b0 e0       	ldi	r27, 0x00	; 0
    8b68:	80 93 50 40 	sts	0x4050, r24	; 0x804050 <g_80m_frequency>
    8b6c:	90 93 51 40 	sts	0x4051, r25	; 0x804051 <g_80m_frequency+0x1>
    8b70:	a0 93 52 40 	sts	0x4052, r26	; 0x804052 <g_80m_frequency+0x2>
    8b74:	b0 93 53 40 	sts	0x4053, r27	; 0x804053 <g_80m_frequency+0x3>
			avr_eeprom_write_dword(Frequency, g_80m_frequency);
    8b78:	80 91 50 40 	lds	r24, 0x4050	; 0x804050 <g_80m_frequency>
    8b7c:	90 91 51 40 	lds	r25, 0x4051	; 0x804051 <g_80m_frequency+0x1>
    8b80:	a0 91 52 40 	lds	r26, 0x4052	; 0x804052 <g_80m_frequency+0x2>
    8b84:	b0 91 53 40 	lds	r27, 0x4053	; 0x804053 <g_80m_frequency+0x3>
    8b88:	ac 01       	movw	r20, r24
    8b8a:	bd 01       	movw	r22, r26
    8b8c:	84 e6       	ldi	r24, 0x64	; 100
    8b8e:	90 e0       	ldi	r25, 0x00	; 0
    8b90:	0e 94 cc 39 	call	0x7398	; 0x7398 <_Z22avr_eeprom_write_dwordjm>

			g_rtty_offset = EEPROM_RTTY_OFFSET_FREQUENCY_DEFAULT;
    8b94:	8a ea       	ldi	r24, 0xAA	; 170
    8b96:	90 e0       	ldi	r25, 0x00	; 0
    8b98:	a0 e0       	ldi	r26, 0x00	; 0
    8b9a:	b0 e0       	ldi	r27, 0x00	; 0
    8b9c:	80 93 56 40 	sts	0x4056, r24	; 0x804056 <g_rtty_offset>
    8ba0:	90 93 57 40 	sts	0x4057, r25	; 0x804057 <g_rtty_offset+0x1>
    8ba4:	a0 93 58 40 	sts	0x4058, r26	; 0x804058 <g_rtty_offset+0x2>
    8ba8:	b0 93 59 40 	sts	0x4059, r27	; 0x804059 <g_rtty_offset+0x3>
			avr_eeprom_write_dword(Frequency, g_rtty_offset);
    8bac:	80 91 56 40 	lds	r24, 0x4056	; 0x804056 <g_rtty_offset>
    8bb0:	90 91 57 40 	lds	r25, 0x4057	; 0x804057 <g_rtty_offset+0x1>
    8bb4:	a0 91 58 40 	lds	r26, 0x4058	; 0x804058 <g_rtty_offset+0x2>
    8bb8:	b0 91 59 40 	lds	r27, 0x4059	; 0x804059 <g_rtty_offset+0x3>
    8bbc:	ac 01       	movw	r20, r24
    8bbe:	bd 01       	movw	r22, r26
    8bc0:	84 e6       	ldi	r24, 0x64	; 100
    8bc2:	90 e0       	ldi	r25, 0x00	; 0
    8bc4:	0e 94 cc 39 	call	0x7398	; 0x7398 <_Z22avr_eeprom_write_dwordjm>

			g_80m_power_level_mW = EEPROM_TX_80M_POWER_MW_DEFAULT;
    8bc8:	84 ef       	ldi	r24, 0xF4	; 244
    8bca:	91 e0       	ldi	r25, 0x01	; 1
    8bcc:	80 93 54 40 	sts	0x4054, r24	; 0x804054 <g_80m_power_level_mW>
    8bd0:	90 93 55 40 	sts	0x4055, r25	; 0x804055 <g_80m_power_level_mW+0x1>
			avr_eeprom_write_dword(RF_Power, g_80m_power_level_mW);
    8bd4:	80 91 54 40 	lds	r24, 0x4054	; 0x804054 <g_80m_power_level_mW>
    8bd8:	90 91 55 40 	lds	r25, 0x4055	; 0x804055 <g_80m_power_level_mW+0x1>
    8bdc:	cc 01       	movw	r24, r24
    8bde:	a0 e0       	ldi	r26, 0x00	; 0
    8be0:	b0 e0       	ldi	r27, 0x00	; 0
    8be2:	ac 01       	movw	r20, r24
    8be4:	bd 01       	movw	r22, r26
    8be6:	84 e7       	ldi	r24, 0x74	; 116
    8be8:	90 e0       	ldi	r25, 0x00	; 0
    8bea:	0e 94 cc 39 	call	0x7398	; 0x7398 <_Z22avr_eeprom_write_dwordjm>
			
			g_pattern_codespeed = EEPROM_PATTERN_CODE_SPEED_DEFAULT;
    8bee:	88 e0       	ldi	r24, 0x08	; 8
    8bf0:	80 93 0c 40 	sts	0x400C, r24	; 0x80400c <g_pattern_codespeed>
			avr_eeprom_write_byte(Pattern_Code_Speed, g_pattern_codespeed);
    8bf4:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    8bf8:	68 2f       	mov	r22, r24
    8bfa:	8a e7       	ldi	r24, 0x7A	; 122
    8bfc:	90 e0       	ldi	r25, 0x00	; 0
    8bfe:	0e 94 6a 39 	call	0x72d4	; 0x72d4 <_Z21avr_eeprom_write_bytejh>
			
			g_off_air_seconds = EEPROM_OFF_AIR_TIME_DEFAULT;
    8c02:	80 ef       	ldi	r24, 0xF0	; 240
    8c04:	90 e0       	ldi	r25, 0x00	; 0
    8c06:	80 93 0f 40 	sts	0x400F, r24	; 0x80400f <g_off_air_seconds>
    8c0a:	90 93 10 40 	sts	0x4010, r25	; 0x804010 <g_off_air_seconds+0x1>
			avr_eeprom_write_word(Off_Air_Seconds, g_off_air_seconds);
    8c0e:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_off_air_seconds>
    8c12:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    8c16:	bc 01       	movw	r22, r24
    8c18:	8f e7       	ldi	r24, 0x7F	; 127
    8c1a:	90 e0       	ldi	r25, 0x00	; 0
    8c1c:	0e 94 99 39 	call	0x7332	; 0x7332 <_Z21avr_eeprom_write_wordjj>
			
			g_on_air_seconds = EEPROM_ON_AIR_TIME_DEFAULT;
    8c20:	8c e3       	ldi	r24, 0x3C	; 60
    8c22:	90 e0       	ldi	r25, 0x00	; 0
    8c24:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_on_air_seconds>
    8c28:	90 93 0e 40 	sts	0x400E, r25	; 0x80400e <g_on_air_seconds+0x1>
			avr_eeprom_write_word(On_Air_Seconds, g_on_air_seconds);
    8c2c:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    8c30:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    8c34:	bc 01       	movw	r22, r24
    8c36:	85 e8       	ldi	r24, 0x85	; 133
    8c38:	90 e0       	ldi	r25, 0x00	; 0
    8c3a:	0e 94 99 39 	call	0x7332	; 0x7332 <_Z21avr_eeprom_write_wordjj>
			
			g_ID_period_seconds = EEPROM_ID_TIME_INTERVAL_DEFAULT;
    8c3e:	8c e2       	ldi	r24, 0x2C	; 44
    8c40:	91 e0       	ldi	r25, 0x01	; 1
    8c42:	80 93 11 40 	sts	0x4011, r24	; 0x804011 <g_ID_period_seconds>
    8c46:	90 93 12 40 	sts	0x4012, r25	; 0x804012 <g_ID_period_seconds+0x1>
			avr_eeprom_write_word(ID_Period_Seconds, g_ID_period_seconds);
    8c4a:	80 91 11 40 	lds	r24, 0x4011	; 0x804011 <g_ID_period_seconds>
    8c4e:	90 91 12 40 	lds	r25, 0x4012	; 0x804012 <g_ID_period_seconds+0x1>
    8c52:	bc 01       	movw	r22, r24
    8c54:	8b e8       	ldi	r24, 0x8B	; 139
    8c56:	90 e0       	ldi	r25, 0x00	; 0
    8c58:	0e 94 99 39 	call	0x7332	; 0x7332 <_Z21avr_eeprom_write_wordjj>
			
			g_intra_cycle_delay_time = EEPROM_INTRA_CYCLE_DELAY_TIME_DEFAULT;
    8c5c:	10 92 16 45 	sts	0x4516, r1	; 0x804516 <g_intra_cycle_delay_time>
    8c60:	10 92 17 45 	sts	0x4517, r1	; 0x804517 <g_intra_cycle_delay_time+0x1>
			avr_eeprom_write_word(Intra_Cycle_Delay_Seconds, g_intra_cycle_delay_time);
    8c64:	80 91 16 45 	lds	r24, 0x4516	; 0x804516 <g_intra_cycle_delay_time>
    8c68:	90 91 17 45 	lds	r25, 0x4517	; 0x804517 <g_intra_cycle_delay_time+0x1>
    8c6c:	bc 01       	movw	r22, r24
    8c6e:	81 e9       	ldi	r24, 0x91	; 145
    8c70:	90 e0       	ldi	r25, 0x00	; 0
    8c72:	0e 94 99 39 	call	0x7332	; 0x7332 <_Z21avr_eeprom_write_wordjj>

			v = (uint8_t*)EEPROM_FOXORING_FOXA_PATTERN_DEFAULT;
    8c76:	8e ed       	ldi	r24, 0xDE	; 222
    8c78:	93 e4       	ldi	r25, 0x43	; 67
    8c7a:	8d 83       	std	Y+5, r24	; 0x05
    8c7c:	9e 83       	std	Y+6, r25	; 0x06
			i = FoxA_pattern_text;
    8c7e:	8e eb       	ldi	r24, 0xBE	; 190
    8c80:	90 e0       	ldi	r25, 0x00	; 0
    8c82:	89 83       	std	Y+1, r24	; 0x01
    8c84:	9a 83       	std	Y+2, r25	; 0x02
			for(j = 0; j < strlen(EEPROM_FOXORING_FOXA_PATTERN_DEFAULT); j++)
    8c86:	1b 82       	std	Y+3, r1	; 0x03
    8c88:	1c 82       	std	Y+4, r1	; 0x04
    8c8a:	8b 81       	ldd	r24, Y+3	; 0x03
    8c8c:	9c 81       	ldd	r25, Y+4	; 0x04
    8c8e:	03 97       	sbiw	r24, 0x03	; 3
    8c90:	18 f5       	brcc	.+70     	; 0x8cd8 <_ZN13EepromManager20initializeEEPROMVarsEv+0x3fc>
			{
				g_messages_text[FOXA_PATTERN_TEXT][j] = *v;
    8c92:	8d 81       	ldd	r24, Y+5	; 0x05
    8c94:	9e 81       	ldd	r25, Y+6	; 0x06
    8c96:	fc 01       	movw	r30, r24
    8c98:	20 81       	ld	r18, Z
    8c9a:	8b 81       	ldd	r24, Y+3	; 0x03
    8c9c:	9c 81       	ldd	r25, Y+4	; 0x04
    8c9e:	80 54       	subi	r24, 0x40	; 64
    8ca0:	9b 4b       	sbci	r25, 0xBB	; 187
    8ca2:	fc 01       	movw	r30, r24
    8ca4:	20 83       	st	Z, r18
				avr_eeprom_write_byte(i++, *v++);
    8ca6:	8d 81       	ldd	r24, Y+5	; 0x05
    8ca8:	9e 81       	ldd	r25, Y+6	; 0x06
    8caa:	9c 01       	movw	r18, r24
    8cac:	2f 5f       	subi	r18, 0xFF	; 255
    8cae:	3f 4f       	sbci	r19, 0xFF	; 255
    8cb0:	2d 83       	std	Y+5, r18	; 0x05
    8cb2:	3e 83       	std	Y+6, r19	; 0x06
    8cb4:	fc 01       	movw	r30, r24
    8cb6:	40 81       	ld	r20, Z
    8cb8:	89 81       	ldd	r24, Y+1	; 0x01
    8cba:	9a 81       	ldd	r25, Y+2	; 0x02
    8cbc:	9c 01       	movw	r18, r24
    8cbe:	2f 5f       	subi	r18, 0xFF	; 255
    8cc0:	3f 4f       	sbci	r19, 0xFF	; 255
    8cc2:	29 83       	std	Y+1, r18	; 0x01
    8cc4:	3a 83       	std	Y+2, r19	; 0x02
    8cc6:	64 2f       	mov	r22, r20
    8cc8:	0e 94 6a 39 	call	0x72d4	; 0x72d4 <_Z21avr_eeprom_write_bytejh>
			g_intra_cycle_delay_time = EEPROM_INTRA_CYCLE_DELAY_TIME_DEFAULT;
			avr_eeprom_write_word(Intra_Cycle_Delay_Seconds, g_intra_cycle_delay_time);

			v = (uint8_t*)EEPROM_FOXORING_FOXA_PATTERN_DEFAULT;
			i = FoxA_pattern_text;
			for(j = 0; j < strlen(EEPROM_FOXORING_FOXA_PATTERN_DEFAULT); j++)
    8ccc:	8b 81       	ldd	r24, Y+3	; 0x03
    8cce:	9c 81       	ldd	r25, Y+4	; 0x04
    8cd0:	01 96       	adiw	r24, 0x01	; 1
    8cd2:	8b 83       	std	Y+3, r24	; 0x03
    8cd4:	9c 83       	std	Y+4, r25	; 0x04
    8cd6:	d9 cf       	rjmp	.-78     	; 0x8c8a <_ZN13EepromManager20initializeEEPROMVarsEv+0x3ae>
			{
				g_messages_text[FOXA_PATTERN_TEXT][j] = *v;
				avr_eeprom_write_byte(i++, *v++);
			}

			avr_eeprom_write_byte(i, '\0');
    8cd8:	89 81       	ldd	r24, Y+1	; 0x01
    8cda:	9a 81       	ldd	r25, Y+2	; 0x02
    8cdc:	60 e0       	ldi	r22, 0x00	; 0
    8cde:	0e 94 6a 39 	call	0x72d4	; 0x72d4 <_Z21avr_eeprom_write_bytejh>
			
			v = (uint8_t*)EEPROM_FOXORING_FOXB_PATTERN_DEFAULT;
    8ce2:	87 ee       	ldi	r24, 0xE7	; 231
    8ce4:	93 e4       	ldi	r25, 0x43	; 67
    8ce6:	8d 83       	std	Y+5, r24	; 0x05
    8ce8:	9e 83       	std	Y+6, r25	; 0x06
			i = FoxB_pattern_text;
    8cea:	87 ed       	ldi	r24, 0xD7	; 215
    8cec:	90 e0       	ldi	r25, 0x00	; 0
    8cee:	89 83       	std	Y+1, r24	; 0x01
    8cf0:	9a 83       	std	Y+2, r25	; 0x02
			for(j = 0; j < strlen(EEPROM_FOXORING_FOXB_PATTERN_DEFAULT); j++)
    8cf2:	1b 82       	std	Y+3, r1	; 0x03
    8cf4:	1c 82       	std	Y+4, r1	; 0x04
    8cf6:	8b 81       	ldd	r24, Y+3	; 0x03
    8cf8:	9c 81       	ldd	r25, Y+4	; 0x04
    8cfa:	03 97       	sbiw	r24, 0x03	; 3
    8cfc:	18 f5       	brcc	.+70     	; 0x8d44 <_ZN13EepromManager20initializeEEPROMVarsEv+0x468>
			{
				g_messages_text[FOXB_PATTERN_TEXT][j] = *v;
    8cfe:	8d 81       	ldd	r24, Y+5	; 0x05
    8d00:	9e 81       	ldd	r25, Y+6	; 0x06
    8d02:	fc 01       	movw	r30, r24
    8d04:	20 81       	ld	r18, Z
    8d06:	8b 81       	ldd	r24, Y+3	; 0x03
    8d08:	9c 81       	ldd	r25, Y+4	; 0x04
    8d0a:	8b 52       	subi	r24, 0x2B	; 43
    8d0c:	9b 4b       	sbci	r25, 0xBB	; 187
    8d0e:	fc 01       	movw	r30, r24
    8d10:	20 83       	st	Z, r18
				avr_eeprom_write_byte(i++, *v++);
    8d12:	8d 81       	ldd	r24, Y+5	; 0x05
    8d14:	9e 81       	ldd	r25, Y+6	; 0x06
    8d16:	9c 01       	movw	r18, r24
    8d18:	2f 5f       	subi	r18, 0xFF	; 255
    8d1a:	3f 4f       	sbci	r19, 0xFF	; 255
    8d1c:	2d 83       	std	Y+5, r18	; 0x05
    8d1e:	3e 83       	std	Y+6, r19	; 0x06
    8d20:	fc 01       	movw	r30, r24
    8d22:	40 81       	ld	r20, Z
    8d24:	89 81       	ldd	r24, Y+1	; 0x01
    8d26:	9a 81       	ldd	r25, Y+2	; 0x02
    8d28:	9c 01       	movw	r18, r24
    8d2a:	2f 5f       	subi	r18, 0xFF	; 255
    8d2c:	3f 4f       	sbci	r19, 0xFF	; 255
    8d2e:	29 83       	std	Y+1, r18	; 0x01
    8d30:	3a 83       	std	Y+2, r19	; 0x02
    8d32:	64 2f       	mov	r22, r20
    8d34:	0e 94 6a 39 	call	0x72d4	; 0x72d4 <_Z21avr_eeprom_write_bytejh>

			avr_eeprom_write_byte(i, '\0');
			
			v = (uint8_t*)EEPROM_FOXORING_FOXB_PATTERN_DEFAULT;
			i = FoxB_pattern_text;
			for(j = 0; j < strlen(EEPROM_FOXORING_FOXB_PATTERN_DEFAULT); j++)
    8d38:	8b 81       	ldd	r24, Y+3	; 0x03
    8d3a:	9c 81       	ldd	r25, Y+4	; 0x04
    8d3c:	01 96       	adiw	r24, 0x01	; 1
    8d3e:	8b 83       	std	Y+3, r24	; 0x03
    8d40:	9c 83       	std	Y+4, r25	; 0x04
    8d42:	d9 cf       	rjmp	.-78     	; 0x8cf6 <_ZN13EepromManager20initializeEEPROMVarsEv+0x41a>
			{
				g_messages_text[FOXB_PATTERN_TEXT][j] = *v;
				avr_eeprom_write_byte(i++, *v++);
			}
			
			avr_eeprom_write_byte(i, '\0');
    8d44:	89 81       	ldd	r24, Y+1	; 0x01
    8d46:	9a 81       	ldd	r25, Y+2	; 0x02
    8d48:	60 e0       	ldi	r22, 0x00	; 0
    8d4a:	0e 94 6a 39 	call	0x72d4	; 0x72d4 <_Z21avr_eeprom_write_bytejh>

			v = (uint8_t*)EEPROM_FOXORING_FOXC_PATTERN_DEFAULT;
    8d4e:	8b ee       	ldi	r24, 0xEB	; 235
    8d50:	93 e4       	ldi	r25, 0x43	; 67
    8d52:	8d 83       	std	Y+5, r24	; 0x05
    8d54:	9e 83       	std	Y+6, r25	; 0x06
			i = FoxC_pattern_text;
    8d56:	80 ef       	ldi	r24, 0xF0	; 240
    8d58:	90 e0       	ldi	r25, 0x00	; 0
    8d5a:	89 83       	std	Y+1, r24	; 0x01
    8d5c:	9a 83       	std	Y+2, r25	; 0x02
			for(j = 0; j < strlen(EEPROM_FOXORING_FOXC_PATTERN_DEFAULT); j++)
    8d5e:	1b 82       	std	Y+3, r1	; 0x03
    8d60:	1c 82       	std	Y+4, r1	; 0x04
    8d62:	8b 81       	ldd	r24, Y+3	; 0x03
    8d64:	9c 81       	ldd	r25, Y+4	; 0x04
    8d66:	03 97       	sbiw	r24, 0x03	; 3
    8d68:	18 f5       	brcc	.+70     	; 0x8db0 <_ZN13EepromManager20initializeEEPROMVarsEv+0x4d4>
			{
				g_messages_text[FOXC_PATTERN_TEXT][j] = *v;
    8d6a:	8d 81       	ldd	r24, Y+5	; 0x05
    8d6c:	9e 81       	ldd	r25, Y+6	; 0x06
    8d6e:	fc 01       	movw	r30, r24
    8d70:	20 81       	ld	r18, Z
    8d72:	8b 81       	ldd	r24, Y+3	; 0x03
    8d74:	9c 81       	ldd	r25, Y+4	; 0x04
    8d76:	86 51       	subi	r24, 0x16	; 22
    8d78:	9b 4b       	sbci	r25, 0xBB	; 187
    8d7a:	fc 01       	movw	r30, r24
    8d7c:	20 83       	st	Z, r18
				avr_eeprom_write_byte(i++, *v++);
    8d7e:	8d 81       	ldd	r24, Y+5	; 0x05
    8d80:	9e 81       	ldd	r25, Y+6	; 0x06
    8d82:	9c 01       	movw	r18, r24
    8d84:	2f 5f       	subi	r18, 0xFF	; 255
    8d86:	3f 4f       	sbci	r19, 0xFF	; 255
    8d88:	2d 83       	std	Y+5, r18	; 0x05
    8d8a:	3e 83       	std	Y+6, r19	; 0x06
    8d8c:	fc 01       	movw	r30, r24
    8d8e:	40 81       	ld	r20, Z
    8d90:	89 81       	ldd	r24, Y+1	; 0x01
    8d92:	9a 81       	ldd	r25, Y+2	; 0x02
    8d94:	9c 01       	movw	r18, r24
    8d96:	2f 5f       	subi	r18, 0xFF	; 255
    8d98:	3f 4f       	sbci	r19, 0xFF	; 255
    8d9a:	29 83       	std	Y+1, r18	; 0x01
    8d9c:	3a 83       	std	Y+2, r19	; 0x02
    8d9e:	64 2f       	mov	r22, r20
    8da0:	0e 94 6a 39 	call	0x72d4	; 0x72d4 <_Z21avr_eeprom_write_bytejh>
			
			avr_eeprom_write_byte(i, '\0');

			v = (uint8_t*)EEPROM_FOXORING_FOXC_PATTERN_DEFAULT;
			i = FoxC_pattern_text;
			for(j = 0; j < strlen(EEPROM_FOXORING_FOXC_PATTERN_DEFAULT); j++)
    8da4:	8b 81       	ldd	r24, Y+3	; 0x03
    8da6:	9c 81       	ldd	r25, Y+4	; 0x04
    8da8:	01 96       	adiw	r24, 0x01	; 1
    8daa:	8b 83       	std	Y+3, r24	; 0x03
    8dac:	9c 83       	std	Y+4, r25	; 0x04
    8dae:	d9 cf       	rjmp	.-78     	; 0x8d62 <_ZN13EepromManager20initializeEEPROMVarsEv+0x486>
			{
				g_messages_text[FOXC_PATTERN_TEXT][j] = *v;
				avr_eeprom_write_byte(i++, *v++);
			}
			
			avr_eeprom_write_byte(i, '\0');
    8db0:	89 81       	ldd	r24, Y+1	; 0x01
    8db2:	9a 81       	ldd	r25, Y+2	; 0x02
    8db4:	60 e0       	ldi	r22, 0x00	; 0
    8db6:	0e 94 6a 39 	call	0x72d4	; 0x72d4 <_Z21avr_eeprom_write_bytejh>

			g_voltage_threshold = EEPROM_BATTERY_THRESHOLD_V;
    8dba:	83 e3       	ldi	r24, 0x33	; 51
    8dbc:	93 e3       	ldi	r25, 0x33	; 51
    8dbe:	a3 e7       	ldi	r26, 0x73	; 115
    8dc0:	b0 e4       	ldi	r27, 0x40	; 64
    8dc2:	80 93 35 40 	sts	0x4035, r24	; 0x804035 <g_voltage_threshold>
    8dc6:	90 93 36 40 	sts	0x4036, r25	; 0x804036 <g_voltage_threshold+0x1>
    8dca:	a0 93 37 40 	sts	0x4037, r26	; 0x804037 <g_voltage_threshold+0x2>
    8dce:	b0 93 38 40 	sts	0x4038, r27	; 0x804038 <g_voltage_threshold+0x3>
			avr_eeprom_write_float(Voltage_threshold, g_voltage_threshold);
    8dd2:	80 91 35 40 	lds	r24, 0x4035	; 0x804035 <g_voltage_threshold>
    8dd6:	90 91 36 40 	lds	r25, 0x4036	; 0x804036 <g_voltage_threshold+0x1>
    8dda:	a0 91 37 40 	lds	r26, 0x4037	; 0x804037 <g_voltage_threshold+0x2>
    8dde:	b0 91 38 40 	lds	r27, 0x4038	; 0x804038 <g_voltage_threshold+0x3>
    8de2:	ac 01       	movw	r20, r24
    8de4:	bd 01       	movw	r22, r26
    8de6:	89 e0       	ldi	r24, 0x09	; 9
    8de8:	91 e0       	ldi	r25, 0x01	; 1
    8dea:	0e 94 06 3a 	call	0x740c	; 0x740c <_Z22avr_eeprom_write_floatjf>
			
			g_clock_calibration = EEPROM_CLOCK_CALIBRATION_DEFAULT;
    8dee:	8f ef       	ldi	r24, 0xFF	; 255
    8df0:	9f e7       	ldi	r25, 0x7F	; 127
    8df2:	80 93 39 40 	sts	0x4039, r24	; 0x804039 <g_clock_calibration>
    8df6:	90 93 3a 40 	sts	0x403A, r25	; 0x80403a <g_clock_calibration+0x1>
			avr_eeprom_write_word(Clock_calibration, g_clock_calibration);
    8dfa:	80 91 39 40 	lds	r24, 0x4039	; 0x804039 <g_clock_calibration>
    8dfe:	90 91 3a 40 	lds	r25, 0x403A	; 0x80403a <g_clock_calibration+0x1>
    8e02:	bc 01       	movw	r22, r24
    8e04:	81 e1       	ldi	r24, 0x11	; 17
    8e06:	91 e0       	ldi	r25, 0x01	; 1
    8e08:	0e 94 99 39 	call	0x7332	; 0x7332 <_Z21avr_eeprom_write_wordjj>

			/* Done */

			avr_eeprom_write_word(0, EEPROM_INITIALIZED_FLAG);
    8e0c:	62 e0       	ldi	r22, 0x02	; 2
    8e0e:	71 e0       	ldi	r23, 0x01	; 1
    8e10:	80 e0       	ldi	r24, 0x00	; 0
    8e12:	90 e0       	ldi	r25, 0x00	; 0
    8e14:	0e 94 99 39 	call	0x7332	; 0x7332 <_Z21avr_eeprom_write_wordjj>
		}
		
		return(err);
    8e18:	8f 81       	ldd	r24, Y+7	; 0x07
	}
    8e1a:	2b 96       	adiw	r28, 0x0b	; 11
    8e1c:	cd bf       	out	0x3d, r28	; 61
    8e1e:	de bf       	out	0x3e, r29	; 62
    8e20:	df 91       	pop	r29
    8e22:	cf 91       	pop	r28
    8e24:	08 95       	ret

00008e26 <_ZN8GoertzelC1Eff>:
		highValueCount++;
	}

	Q2 = Q1;
	Q1 = Q0;
}
    8e26:	0f 93       	push	r16
    8e28:	1f 93       	push	r17
    8e2a:	cf 93       	push	r28
    8e2c:	df 93       	push	r29
    8e2e:	cd b7       	in	r28, 0x3d	; 61
    8e30:	de b7       	in	r29, 0x3e	; 62
    8e32:	62 97       	sbiw	r28, 0x12	; 18
    8e34:	cd bf       	out	0x3d, r28	; 61
    8e36:	de bf       	out	0x3e, r29	; 62
    8e38:	89 87       	std	Y+9, r24	; 0x09
    8e3a:	9a 87       	std	Y+10, r25	; 0x0a
    8e3c:	4b 87       	std	Y+11, r20	; 0x0b
    8e3e:	5c 87       	std	Y+12, r21	; 0x0c
    8e40:	6d 87       	std	Y+13, r22	; 0x0d
    8e42:	7e 87       	std	Y+14, r23	; 0x0e
    8e44:	0f 87       	std	Y+15, r16	; 0x0f
    8e46:	18 8b       	std	Y+16, r17	; 0x10
    8e48:	29 8b       	std	Y+17, r18	; 0x11
    8e4a:	3a 8b       	std	Y+18, r19	; 0x12
    8e4c:	8f 85       	ldd	r24, Y+15	; 0x0f
    8e4e:	98 89       	ldd	r25, Y+16	; 0x10
    8e50:	a9 89       	ldd	r26, Y+17	; 0x11
    8e52:	ba 89       	ldd	r27, Y+18	; 0x12
    8e54:	80 93 72 45 	sts	0x4572, r24	; 0x804572 <_SAMPLING_FREQUENCY>
    8e58:	90 93 73 45 	sts	0x4573, r25	; 0x804573 <_SAMPLING_FREQUENCY+0x1>
    8e5c:	a0 93 74 45 	sts	0x4574, r26	; 0x804574 <_SAMPLING_FREQUENCY+0x2>
    8e60:	b0 93 75 45 	sts	0x4575, r27	; 0x804575 <_SAMPLING_FREQUENCY+0x3>
    8e64:	8b 85       	ldd	r24, Y+11	; 0x0b
    8e66:	9c 85       	ldd	r25, Y+12	; 0x0c
    8e68:	ad 85       	ldd	r26, Y+13	; 0x0d
    8e6a:	be 85       	ldd	r27, Y+14	; 0x0e
    8e6c:	89 83       	std	Y+1, r24	; 0x01
    8e6e:	9a 83       	std	Y+2, r25	; 0x02
    8e70:	ab 83       	std	Y+3, r26	; 0x03
    8e72:	bc 83       	std	Y+4, r27	; 0x04
    8e74:	84 e6       	ldi	r24, 0x64	; 100
    8e76:	90 e0       	ldi	r25, 0x00	; 0
    8e78:	8d 83       	std	Y+5, r24	; 0x05
    8e7a:	9e 83       	std	Y+6, r25	; 0x06
    8e7c:	81 ed       	ldi	r24, 0xD1	; 209
    8e7e:	90 e0       	ldi	r25, 0x00	; 0
    8e80:	8f 83       	std	Y+7, r24	; 0x07
    8e82:	98 87       	std	Y+8, r25	; 0x08
    8e84:	8f 81       	ldd	r24, Y+7	; 0x07
    8e86:	98 85       	ldd	r25, Y+8	; 0x08
    8e88:	09 2e       	mov	r0, r25
    8e8a:	00 0c       	add	r0, r0
    8e8c:	aa 0b       	sbc	r26, r26
    8e8e:	bb 0b       	sbc	r27, r27
    8e90:	bc 01       	movw	r22, r24
    8e92:	cd 01       	movw	r24, r26
    8e94:	0e 94 79 73 	call	0xe6f2	; 0xe6f2 <__floatsisf>
    8e98:	dc 01       	movw	r26, r24
    8e9a:	cb 01       	movw	r24, r22
    8e9c:	29 81       	ldd	r18, Y+1	; 0x01
    8e9e:	3a 81       	ldd	r19, Y+2	; 0x02
    8ea0:	4b 81       	ldd	r20, Y+3	; 0x03
    8ea2:	5c 81       	ldd	r21, Y+4	; 0x04
    8ea4:	bc 01       	movw	r22, r24
    8ea6:	cd 01       	movw	r24, r26
    8ea8:	0e 94 ca 72 	call	0xe594	; 0xe594 <__cmpsf2>
    8eac:	88 23       	and	r24, r24
    8eae:	6c f4       	brge	.+26     	; 0x8eca <_ZN8GoertzelC1Eff+0xa4>
    8eb0:	8f 81       	ldd	r24, Y+7	; 0x07
    8eb2:	98 85       	ldd	r25, Y+8	; 0x08
    8eb4:	09 2e       	mov	r0, r25
    8eb6:	00 0c       	add	r0, r0
    8eb8:	aa 0b       	sbc	r26, r26
    8eba:	bb 0b       	sbc	r27, r27
    8ebc:	bc 01       	movw	r22, r24
    8ebe:	cd 01       	movw	r24, r26
    8ec0:	0e 94 79 73 	call	0xe6f2	; 0xe6f2 <__floatsisf>
    8ec4:	dc 01       	movw	r26, r24
    8ec6:	cb 01       	movw	r24, r22
    8ec8:	27 c0       	rjmp	.+78     	; 0x8f18 <_ZN8GoertzelC1Eff+0xf2>
    8eca:	8d 81       	ldd	r24, Y+5	; 0x05
    8ecc:	9e 81       	ldd	r25, Y+6	; 0x06
    8ece:	09 2e       	mov	r0, r25
    8ed0:	00 0c       	add	r0, r0
    8ed2:	aa 0b       	sbc	r26, r26
    8ed4:	bb 0b       	sbc	r27, r27
    8ed6:	bc 01       	movw	r22, r24
    8ed8:	cd 01       	movw	r24, r26
    8eda:	0e 94 79 73 	call	0xe6f2	; 0xe6f2 <__floatsisf>
    8ede:	dc 01       	movw	r26, r24
    8ee0:	cb 01       	movw	r24, r22
    8ee2:	29 81       	ldd	r18, Y+1	; 0x01
    8ee4:	3a 81       	ldd	r19, Y+2	; 0x02
    8ee6:	4b 81       	ldd	r20, Y+3	; 0x03
    8ee8:	5c 81       	ldd	r21, Y+4	; 0x04
    8eea:	bc 01       	movw	r22, r24
    8eec:	cd 01       	movw	r24, r26
    8eee:	0e 94 29 74 	call	0xe852	; 0xe852 <__gesf2>
    8ef2:	18 16       	cp	r1, r24
    8ef4:	6c f4       	brge	.+26     	; 0x8f10 <_ZN8GoertzelC1Eff+0xea>
    8ef6:	8d 81       	ldd	r24, Y+5	; 0x05
    8ef8:	9e 81       	ldd	r25, Y+6	; 0x06
    8efa:	09 2e       	mov	r0, r25
    8efc:	00 0c       	add	r0, r0
    8efe:	aa 0b       	sbc	r26, r26
    8f00:	bb 0b       	sbc	r27, r27
    8f02:	bc 01       	movw	r22, r24
    8f04:	cd 01       	movw	r24, r26
    8f06:	0e 94 79 73 	call	0xe6f2	; 0xe6f2 <__floatsisf>
    8f0a:	dc 01       	movw	r26, r24
    8f0c:	cb 01       	movw	r24, r22
    8f0e:	04 c0       	rjmp	.+8      	; 0x8f18 <_ZN8GoertzelC1Eff+0xf2>
    8f10:	89 81       	ldd	r24, Y+1	; 0x01
    8f12:	9a 81       	ldd	r25, Y+2	; 0x02
    8f14:	ab 81       	ldd	r26, Y+3	; 0x03
    8f16:	bc 81       	ldd	r27, Y+4	; 0x04
    8f18:	bc 01       	movw	r22, r24
    8f1a:	cd 01       	movw	r24, r26
    8f1c:	0e 94 41 73 	call	0xe682	; 0xe682 <__fixsfsi>
    8f20:	dc 01       	movw	r26, r24
    8f22:	cb 01       	movw	r24, r22
    8f24:	80 93 76 45 	sts	0x4576, r24	; 0x804576 <_N>
    8f28:	90 93 77 45 	sts	0x4577, r25	; 0x804577 <_N+0x1>
    8f2c:	80 91 76 45 	lds	r24, 0x4576	; 0x804576 <_N>
    8f30:	90 91 77 45 	lds	r25, 0x4577	; 0x804577 <_N+0x1>
    8f34:	88 0f       	add	r24, r24
    8f36:	99 1f       	adc	r25, r25
    8f38:	0e 94 57 75 	call	0xeaae	; 0xeaae <malloc>
    8f3c:	80 93 7b 45 	sts	0x457B, r24	; 0x80457b <testData>
    8f40:	90 93 7c 45 	sts	0x457C, r25	; 0x80457c <testData+0x1>
    8f44:	00 00       	nop
    8f46:	62 96       	adiw	r28, 0x12	; 18
    8f48:	cd bf       	out	0x3d, r28	; 61
    8f4a:	de bf       	out	0x3e, r29	; 62
    8f4c:	df 91       	pop	r29
    8f4e:	cf 91       	pop	r28
    8f50:	1f 91       	pop	r17
    8f52:	0f 91       	pop	r16
    8f54:	08 95       	ret

00008f56 <_ZN8GoertzelD1Ev>:
    8f56:	cf 93       	push	r28
    8f58:	df 93       	push	r29
    8f5a:	00 d0       	rcall	.+0      	; 0x8f5c <_ZN8GoertzelD1Ev+0x6>
    8f5c:	cd b7       	in	r28, 0x3d	; 61
    8f5e:	de b7       	in	r29, 0x3e	; 62
    8f60:	89 83       	std	Y+1, r24	; 0x01
    8f62:	9a 83       	std	Y+2, r25	; 0x02
    8f64:	80 91 7b 45 	lds	r24, 0x457B	; 0x80457b <testData>
    8f68:	90 91 7c 45 	lds	r25, 0x457C	; 0x80457c <testData+0x1>
    8f6c:	0e 94 ef 75 	call	0xebde	; 0xebde <free>
    8f70:	00 00       	nop
    8f72:	0f 90       	pop	r0
    8f74:	0f 90       	pop	r0
    8f76:	df 91       	pop	r29
    8f78:	cf 91       	pop	r28
    8f7a:	08 95       	ret

00008f7c <_ZN8Goertzel9DataPointEi>:

bool Goertzel::DataPoint(int data)
{
    8f7c:	cf 93       	push	r28
    8f7e:	df 93       	push	r29
    8f80:	00 d0       	rcall	.+0      	; 0x8f82 <_ZN8Goertzel9DataPointEi+0x6>
    8f82:	00 d0       	rcall	.+0      	; 0x8f84 <_ZN8Goertzel9DataPointEi+0x8>
    8f84:	cd b7       	in	r28, 0x3d	; 61
    8f86:	de b7       	in	r29, 0x3e	; 62
    8f88:	89 83       	std	Y+1, r24	; 0x01
    8f8a:	9a 83       	std	Y+2, r25	; 0x02
    8f8c:	6b 83       	std	Y+3, r22	; 0x03
    8f8e:	7c 83       	std	Y+4, r23	; 0x04
	if(_samplesReady)
    8f90:	80 91 7a 45 	lds	r24, 0x457A	; 0x80457a <_samplesReady>
    8f94:	88 23       	and	r24, r24
    8f96:	19 f0       	breq	.+6      	; 0x8f9e <_ZN8Goertzel9DataPointEi+0x22>
	{
		return(_samplesReady);
    8f98:	80 91 7a 45 	lds	r24, 0x457A	; 0x80457a <_samplesReady>
    8f9c:	32 c0       	rjmp	.+100    	; 0x9002 <_ZN8Goertzel9DataPointEi+0x86>
	}

	testData[_index] = data;
    8f9e:	20 91 7b 45 	lds	r18, 0x457B	; 0x80457b <testData>
    8fa2:	30 91 7c 45 	lds	r19, 0x457C	; 0x80457c <testData+0x1>
    8fa6:	80 91 78 45 	lds	r24, 0x4578	; 0x804578 <_index>
    8faa:	90 91 79 45 	lds	r25, 0x4579	; 0x804579 <_index+0x1>
    8fae:	88 0f       	add	r24, r24
    8fb0:	99 1f       	adc	r25, r25
    8fb2:	82 0f       	add	r24, r18
    8fb4:	93 1f       	adc	r25, r19
    8fb6:	2b 81       	ldd	r18, Y+3	; 0x03
    8fb8:	3c 81       	ldd	r19, Y+4	; 0x04
    8fba:	fc 01       	movw	r30, r24
    8fbc:	20 83       	st	Z, r18
    8fbe:	31 83       	std	Z+1, r19	; 0x01
	_index++;
    8fc0:	80 91 78 45 	lds	r24, 0x4578	; 0x804578 <_index>
    8fc4:	90 91 79 45 	lds	r25, 0x4579	; 0x804579 <_index+0x1>
    8fc8:	01 96       	adiw	r24, 0x01	; 1
    8fca:	80 93 78 45 	sts	0x4578, r24	; 0x804578 <_index>
    8fce:	90 93 79 45 	sts	0x4579, r25	; 0x804579 <_index+0x1>
	if(_index >= _N)
    8fd2:	20 91 78 45 	lds	r18, 0x4578	; 0x804578 <_index>
    8fd6:	30 91 79 45 	lds	r19, 0x4579	; 0x804579 <_index+0x1>
    8fda:	80 91 76 45 	lds	r24, 0x4576	; 0x804576 <_N>
    8fde:	90 91 77 45 	lds	r25, 0x4577	; 0x804577 <_N+0x1>
    8fe2:	41 e0       	ldi	r20, 0x01	; 1
    8fe4:	28 17       	cp	r18, r24
    8fe6:	39 07       	cpc	r19, r25
    8fe8:	0c f4       	brge	.+2      	; 0x8fec <_ZN8Goertzel9DataPointEi+0x70>
    8fea:	40 e0       	ldi	r20, 0x00	; 0
    8fec:	44 23       	and	r20, r20
    8fee:	39 f0       	breq	.+14     	; 0x8ffe <_ZN8Goertzel9DataPointEi+0x82>
	{
		_index = 0;
    8ff0:	10 92 78 45 	sts	0x4578, r1	; 0x804578 <_index>
    8ff4:	10 92 79 45 	sts	0x4579, r1	; 0x804579 <_index+0x1>
		_samplesReady = true;
    8ff8:	81 e0       	ldi	r24, 0x01	; 1
    8ffa:	80 93 7a 45 	sts	0x457A, r24	; 0x80457a <_samplesReady>
	}

	return(_samplesReady);
    8ffe:	80 91 7a 45 	lds	r24, 0x457A	; 0x80457a <_samplesReady>
}
    9002:	24 96       	adiw	r28, 0x04	; 4
    9004:	cd bf       	out	0x3d, r28	; 61
    9006:	de bf       	out	0x3e, r29	; 62
    9008:	df 91       	pop	r29
    900a:	cf 91       	pop	r28
    900c:	08 95       	ret

0000900e <PORTA_set_pin_level>:
 * \param[in] pin       The pin number within port
 * \param[in] level true  = Pin level set to "high" state
 *                  false = Pin level set to "low" state
 */
static inline void PORTA_set_pin_level(const uint8_t pin, const bool level)
{
    900e:	cf 93       	push	r28
    9010:	df 93       	push	r29
    9012:	00 d0       	rcall	.+0      	; 0x9014 <PORTA_set_pin_level+0x6>
    9014:	cd b7       	in	r28, 0x3d	; 61
    9016:	de b7       	in	r29, 0x3e	; 62
    9018:	89 83       	std	Y+1, r24	; 0x01
    901a:	6a 83       	std	Y+2, r22	; 0x02
	if (level == true) {
    901c:	8a 81       	ldd	r24, Y+2	; 0x02
    901e:	88 23       	and	r24, r24
    9020:	a9 f0       	breq	.+42     	; 0x904c <PORTA_set_pin_level+0x3e>
		VPORTA.OUT |= (1 << pin);
    9022:	20 e0       	ldi	r18, 0x00	; 0
    9024:	30 e0       	ldi	r19, 0x00	; 0
    9026:	80 e0       	ldi	r24, 0x00	; 0
    9028:	90 e0       	ldi	r25, 0x00	; 0
    902a:	fc 01       	movw	r30, r24
    902c:	81 81       	ldd	r24, Z+1	; 0x01
    902e:	68 2f       	mov	r22, r24
    9030:	89 81       	ldd	r24, Y+1	; 0x01
    9032:	48 2f       	mov	r20, r24
    9034:	50 e0       	ldi	r21, 0x00	; 0
    9036:	81 e0       	ldi	r24, 0x01	; 1
    9038:	90 e0       	ldi	r25, 0x00	; 0
    903a:	02 c0       	rjmp	.+4      	; 0x9040 <PORTA_set_pin_level+0x32>
    903c:	88 0f       	add	r24, r24
    903e:	99 1f       	adc	r25, r25
    9040:	4a 95       	dec	r20
    9042:	e2 f7       	brpl	.-8      	; 0x903c <PORTA_set_pin_level+0x2e>
    9044:	86 2b       	or	r24, r22
    9046:	f9 01       	movw	r30, r18
    9048:	81 83       	std	Z+1, r24	; 0x01
	} else {
		VPORTA.OUT &= ~(1 << pin);
	}
}
    904a:	15 c0       	rjmp	.+42     	; 0x9076 <PORTA_set_pin_level+0x68>
static inline void PORTA_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTA.OUT |= (1 << pin);
	} else {
		VPORTA.OUT &= ~(1 << pin);
    904c:	20 e0       	ldi	r18, 0x00	; 0
    904e:	30 e0       	ldi	r19, 0x00	; 0
    9050:	80 e0       	ldi	r24, 0x00	; 0
    9052:	90 e0       	ldi	r25, 0x00	; 0
    9054:	fc 01       	movw	r30, r24
    9056:	81 81       	ldd	r24, Z+1	; 0x01
    9058:	68 2f       	mov	r22, r24
    905a:	89 81       	ldd	r24, Y+1	; 0x01
    905c:	48 2f       	mov	r20, r24
    905e:	50 e0       	ldi	r21, 0x00	; 0
    9060:	81 e0       	ldi	r24, 0x01	; 1
    9062:	90 e0       	ldi	r25, 0x00	; 0
    9064:	02 c0       	rjmp	.+4      	; 0x906a <PORTA_set_pin_level+0x5c>
    9066:	88 0f       	add	r24, r24
    9068:	99 1f       	adc	r25, r25
    906a:	4a 95       	dec	r20
    906c:	e2 f7       	brpl	.-8      	; 0x9066 <PORTA_set_pin_level+0x58>
    906e:	80 95       	com	r24
    9070:	86 23       	and	r24, r22
    9072:	f9 01       	movw	r30, r18
    9074:	81 83       	std	Z+1, r24	; 0x01
	}
}
    9076:	00 00       	nop
    9078:	0f 90       	pop	r0
    907a:	0f 90       	pop	r0
    907c:	df 91       	pop	r29
    907e:	cf 91       	pop	r28
    9080:	08 95       	ret

00009082 <_Z10wifi_powerb>:
#define WIFI_RESET_gc (1 << 6)  /* WiFi reset port pin on PORTA*/
#define WIFI_POWER_gc (1 << 5)  /* WiFi enable power port pin on PORTA */
#define WIFI_MODULE_DETECT_gc (1 << 7) /* WiFi module detect pin on PORTD */

void wifi_power(bool state)
{
    9082:	cf 93       	push	r28
    9084:	df 93       	push	r29
    9086:	1f 92       	push	r1
    9088:	cd b7       	in	r28, 0x3d	; 61
    908a:	de b7       	in	r29, 0x3e	; 62
    908c:	89 83       	std	Y+1, r24	; 0x01
	if(state == ON)
    908e:	89 81       	ldd	r24, Y+1	; 0x01
    9090:	88 23       	and	r24, r24
    9092:	29 f0       	breq	.+10     	; 0x909e <_Z10wifi_powerb+0x1c>
	{
		PORTA_set_pin_level(WIFI_ENABLE, HIGH);
    9094:	61 e0       	ldi	r22, 0x01	; 1
    9096:	85 e0       	ldi	r24, 0x05	; 5
    9098:	0e 94 07 48 	call	0x900e	; 0x900e <PORTA_set_pin_level>
	}
	else
	{
		PORTA_set_pin_level(WIFI_ENABLE, LOW);
	}
}
    909c:	04 c0       	rjmp	.+8      	; 0x90a6 <_Z10wifi_powerb+0x24>
	{
		PORTA_set_pin_level(WIFI_ENABLE, HIGH);
	}
	else
	{
		PORTA_set_pin_level(WIFI_ENABLE, LOW);
    909e:	60 e0       	ldi	r22, 0x00	; 0
    90a0:	85 e0       	ldi	r24, 0x05	; 5
    90a2:	0e 94 07 48 	call	0x900e	; 0x900e <PORTA_set_pin_level>
	}
}
    90a6:	00 00       	nop
    90a8:	0f 90       	pop	r0
    90aa:	df 91       	pop	r29
    90ac:	cf 91       	pop	r28
    90ae:	08 95       	ret

000090b0 <_Z10wifi_resetb>:

void wifi_reset(bool state)
{
    90b0:	cf 93       	push	r28
    90b2:	df 93       	push	r29
    90b4:	1f 92       	push	r1
    90b6:	cd b7       	in	r28, 0x3d	; 61
    90b8:	de b7       	in	r29, 0x3e	; 62
    90ba:	89 83       	std	Y+1, r24	; 0x01
	if(state == ON)
    90bc:	89 81       	ldd	r24, Y+1	; 0x01
    90be:	88 23       	and	r24, r24
    90c0:	29 f0       	breq	.+10     	; 0x90cc <_Z10wifi_resetb+0x1c>
	{
		PORTA_set_pin_level(WIFI_RESET, LOW);
    90c2:	60 e0       	ldi	r22, 0x00	; 0
    90c4:	86 e0       	ldi	r24, 0x06	; 6
    90c6:	0e 94 07 48 	call	0x900e	; 0x900e <PORTA_set_pin_level>
	}
	else
	{
		PORTA_set_pin_level(WIFI_RESET, HIGH);
	}
}
    90ca:	04 c0       	rjmp	.+8      	; 0x90d4 <_Z10wifi_resetb+0x24>
	{
		PORTA_set_pin_level(WIFI_RESET, LOW);
	}
	else
	{
		PORTA_set_pin_level(WIFI_RESET, HIGH);
    90cc:	61 e0       	ldi	r22, 0x01	; 1
    90ce:	86 e0       	ldi	r24, 0x06	; 6
    90d0:	0e 94 07 48 	call	0x900e	; 0x900e <PORTA_set_pin_level>
	}
}
    90d4:	00 00       	nop
    90d6:	0f 90       	pop	r0
    90d8:	df 91       	pop	r29
    90da:	cf 91       	pop	r28
    90dc:	08 95       	ret

000090de <_Z11wifiPresentv>:

bool wifiPresent(void)
{
    90de:	cf 93       	push	r28
    90e0:	df 93       	push	r29
    90e2:	cd b7       	in	r28, 0x3d	; 61
    90e4:	de b7       	in	r29, 0x3e	; 62
	return(VPORTD.IN & WIFI_MODULE_DETECT_gc);
    90e6:	8c e0       	ldi	r24, 0x0C	; 12
    90e8:	90 e0       	ldi	r25, 0x00	; 0
    90ea:	fc 01       	movw	r30, r24
    90ec:	82 81       	ldd	r24, Z+2	; 0x02
    90ee:	88 1f       	adc	r24, r24
    90f0:	88 27       	eor	r24, r24
    90f2:	88 1f       	adc	r24, r24
}
    90f4:	df 91       	pop	r29
    90f6:	cf 91       	pop	r28
    90f8:	08 95       	ret

000090fa <_Z11wifiEnabledv>:

bool wifiEnabled(void)
{
    90fa:	cf 93       	push	r28
    90fc:	df 93       	push	r29
    90fe:	cd b7       	in	r28, 0x3d	; 61
    9100:	de b7       	in	r29, 0x3e	; 62
	if(!(PORTA.OUT & (1 << WIFI_ENABLE))) /* read output setting on power-enable line */
    9102:	80 e0       	ldi	r24, 0x00	; 0
    9104:	94 e0       	ldi	r25, 0x04	; 4
    9106:	fc 01       	movw	r30, r24
    9108:	84 81       	ldd	r24, Z+4	; 0x04
    910a:	88 2f       	mov	r24, r24
    910c:	90 e0       	ldi	r25, 0x00	; 0
    910e:	80 72       	andi	r24, 0x20	; 32
    9110:	99 27       	eor	r25, r25
    9112:	21 e0       	ldi	r18, 0x01	; 1
    9114:	89 2b       	or	r24, r25
    9116:	09 f0       	breq	.+2      	; 0x911a <_Z11wifiEnabledv+0x20>
    9118:	20 e0       	ldi	r18, 0x00	; 0
    911a:	22 23       	and	r18, r18
    911c:	11 f0       	breq	.+4      	; 0x9122 <_Z11wifiEnabledv+0x28>
	{
		return false;
    911e:	80 e0       	ldi	r24, 0x00	; 0
    9120:	11 c0       	rjmp	.+34     	; 0x9144 <_Z11wifiEnabledv+0x4a>
	}
	
	if(!(PORTA.OUT & (1 << WIFI_RESET))) /* read output setting on reset line */
    9122:	80 e0       	ldi	r24, 0x00	; 0
    9124:	94 e0       	ldi	r25, 0x04	; 4
    9126:	fc 01       	movw	r30, r24
    9128:	84 81       	ldd	r24, Z+4	; 0x04
    912a:	88 2f       	mov	r24, r24
    912c:	90 e0       	ldi	r25, 0x00	; 0
    912e:	80 74       	andi	r24, 0x40	; 64
    9130:	99 27       	eor	r25, r25
    9132:	21 e0       	ldi	r18, 0x01	; 1
    9134:	89 2b       	or	r24, r25
    9136:	09 f0       	breq	.+2      	; 0x913a <_Z11wifiEnabledv+0x40>
    9138:	20 e0       	ldi	r18, 0x00	; 0
    913a:	22 23       	and	r18, r18
    913c:	11 f0       	breq	.+4      	; 0x9142 <_Z11wifiEnabledv+0x48>
	{
		return false;
    913e:	80 e0       	ldi	r24, 0x00	; 0
    9140:	01 c0       	rjmp	.+2      	; 0x9144 <_Z11wifiEnabledv+0x4a>
	}

	return true;
    9142:	81 e0       	ldi	r24, 0x01	; 1
}
    9144:	df 91       	pop	r29
    9146:	cf 91       	pop	r28
    9148:	08 95       	ret

0000914a <PORTB_set_pin_pull_mode>:
void I2C_0_Shutdown(void)
{
	/* Set bus state idle */
	TWI0.MSTATUS = TWI_BUSSTATE_IDLE_gc;
	TWI0.MCTRLA = 0;
}
    914a:	cf 93       	push	r28
    914c:	df 93       	push	r29
    914e:	00 d0       	rcall	.+0      	; 0x9150 <PORTB_set_pin_pull_mode+0x6>
    9150:	00 d0       	rcall	.+0      	; 0x9152 <PORTB_set_pin_pull_mode+0x8>
    9152:	cd b7       	in	r28, 0x3d	; 61
    9154:	de b7       	in	r29, 0x3e	; 62
    9156:	8b 83       	std	Y+3, r24	; 0x03
    9158:	6c 83       	std	Y+4, r22	; 0x04
    915a:	8b 81       	ldd	r24, Y+3	; 0x03
    915c:	88 2f       	mov	r24, r24
    915e:	90 e0       	ldi	r25, 0x00	; 0
    9160:	80 5d       	subi	r24, 0xD0	; 208
    9162:	9b 4f       	sbci	r25, 0xFB	; 251
    9164:	89 83       	std	Y+1, r24	; 0x01
    9166:	9a 83       	std	Y+2, r25	; 0x02
    9168:	8c 81       	ldd	r24, Y+4	; 0x04
    916a:	81 30       	cpi	r24, 0x01	; 1
    916c:	59 f4       	brne	.+22     	; 0x9184 <PORTB_set_pin_pull_mode+0x3a>
    916e:	89 81       	ldd	r24, Y+1	; 0x01
    9170:	9a 81       	ldd	r25, Y+2	; 0x02
    9172:	fc 01       	movw	r30, r24
    9174:	80 81       	ld	r24, Z
    9176:	28 2f       	mov	r18, r24
    9178:	28 60       	ori	r18, 0x08	; 8
    917a:	89 81       	ldd	r24, Y+1	; 0x01
    917c:	9a 81       	ldd	r25, Y+2	; 0x02
    917e:	fc 01       	movw	r30, r24
    9180:	20 83       	st	Z, r18
    9182:	0d c0       	rjmp	.+26     	; 0x919e <PORTB_set_pin_pull_mode+0x54>
    9184:	8c 81       	ldd	r24, Y+4	; 0x04
    9186:	88 23       	and	r24, r24
    9188:	51 f4       	brne	.+20     	; 0x919e <PORTB_set_pin_pull_mode+0x54>
    918a:	89 81       	ldd	r24, Y+1	; 0x01
    918c:	9a 81       	ldd	r25, Y+2	; 0x02
    918e:	fc 01       	movw	r30, r24
    9190:	80 81       	ld	r24, Z
    9192:	28 2f       	mov	r18, r24
    9194:	27 7f       	andi	r18, 0xF7	; 247
    9196:	89 81       	ldd	r24, Y+1	; 0x01
    9198:	9a 81       	ldd	r25, Y+2	; 0x02
    919a:	fc 01       	movw	r30, r24
    919c:	20 83       	st	Z, r18
    919e:	00 00       	nop
    91a0:	24 96       	adiw	r28, 0x04	; 4
    91a2:	cd bf       	out	0x3d, r28	; 61
    91a4:	de bf       	out	0x3e, r29	; 62
    91a6:	df 91       	pop	r29
    91a8:	cf 91       	pop	r28
    91aa:	08 95       	ret

000091ac <I2C_0_Init>:

void I2C_0_Init(void)
{
    91ac:	cf 93       	push	r28
    91ae:	df 93       	push	r29
    91b0:	cd b7       	in	r28, 0x3d	; 61
    91b2:	de b7       	in	r29, 0x3e	; 62
	PORTMUX.TWIROUTEA &= 0x0A;
    91b4:	80 ee       	ldi	r24, 0xE0	; 224
    91b6:	95 e0       	ldi	r25, 0x05	; 5
    91b8:	20 ee       	ldi	r18, 0xE0	; 224
    91ba:	35 e0       	ldi	r19, 0x05	; 5
    91bc:	f9 01       	movw	r30, r18
    91be:	25 81       	ldd	r18, Z+5	; 0x05
    91c0:	2a 70       	andi	r18, 0x0A	; 10
    91c2:	fc 01       	movw	r30, r24
    91c4:	25 83       	std	Z+5, r18	; 0x05
	PORTMUX.TWIROUTEA |= 0x02;
    91c6:	80 ee       	ldi	r24, 0xE0	; 224
    91c8:	95 e0       	ldi	r25, 0x05	; 5
    91ca:	20 ee       	ldi	r18, 0xE0	; 224
    91cc:	35 e0       	ldi	r19, 0x05	; 5
    91ce:	f9 01       	movw	r30, r18
    91d0:	25 81       	ldd	r18, Z+5	; 0x05
    91d2:	22 60       	ori	r18, 0x02	; 2
    91d4:	fc 01       	movw	r30, r24
    91d6:	25 83       	std	Z+5, r18	; 0x05
	
	/* Host Baud Rate Control */
//	TWI0.MBAUD = TWI0_BAUD((I2C_SCL_FREQ), 0.3);
	TWI0.MBAUD = (uint8_t)TWI0_BAUD(I2C_SCL_FREQ, 0);
    91d8:	80 e0       	ldi	r24, 0x00	; 0
    91da:	99 e0       	ldi	r25, 0x09	; 9
    91dc:	23 e7       	ldi	r18, 0x73	; 115
    91de:	fc 01       	movw	r30, r24
    91e0:	26 83       	std	Z+6, r18	; 0x06
	
	/* Enable TWI */
	TWI0.MCTRLA = TWI_ENABLE_bm;
    91e2:	80 e0       	ldi	r24, 0x00	; 0
    91e4:	99 e0       	ldi	r25, 0x09	; 9
    91e6:	21 e0       	ldi	r18, 0x01	; 1
    91e8:	fc 01       	movw	r30, r24
    91ea:	23 83       	std	Z+3, r18	; 0x03
	
	/* Initialize the address register */
	TWI0.MADDR = 0x00;
    91ec:	80 e0       	ldi	r24, 0x00	; 0
    91ee:	99 e0       	ldi	r25, 0x09	; 9
    91f0:	fc 01       	movw	r30, r24
    91f2:	17 82       	std	Z+7, r1	; 0x07
	
	/* Initialize the data register */
	TWI0.MDATA = 0x00;
    91f4:	80 e0       	ldi	r24, 0x00	; 0
    91f6:	99 e0       	ldi	r25, 0x09	; 9
    91f8:	fc 01       	movw	r30, r24
    91fa:	10 86       	std	Z+8, r1	; 0x08
	
	/* Set bus state idle */
	TWI0.MSTATUS = TWI_BUSSTATE_IDLE_gc;
    91fc:	80 e0       	ldi	r24, 0x00	; 0
    91fe:	99 e0       	ldi	r25, 0x09	; 9
    9200:	21 e0       	ldi	r18, 0x01	; 1
    9202:	fc 01       	movw	r30, r24
    9204:	25 83       	std	Z+5, r18	; 0x05
	/* Select I2C pins PC2/PC3 */
}
    9206:	00 00       	nop
    9208:	df 91       	pop	r29
    920a:	cf 91       	pop	r28
    920c:	08 95       	ret

0000920e <_ZL11i2c_0_WaitWv>:

static uint8_t i2c_0_WaitW(void)
{
    920e:	cf 93       	push	r28
    9210:	df 93       	push	r29
    9212:	1f 92       	push	r1
    9214:	cd b7       	in	r28, 0x3d	; 61
    9216:	de b7       	in	r29, 0x3e	; 62
	uint8_t state = I2C_INIT;
    9218:	19 82       	std	Y+1, r1	; 0x01
	
	g_i2c0_timeout_ticks = 50;
    921a:	82 e3       	ldi	r24, 0x32	; 50
    921c:	90 e0       	ldi	r25, 0x00	; 0
    921e:	80 93 3b 40 	sts	0x403B, r24	; 0x80403b <g_i2c0_timeout_ticks>
    9222:	90 93 3c 40 	sts	0x403C, r25	; 0x80403c <g_i2c0_timeout_ticks+0x1>
	
	do
	{
		if(TWI0.MSTATUS & (TWI_WIF_bm | TWI_RIF_bm))
    9226:	80 e0       	ldi	r24, 0x00	; 0
    9228:	99 e0       	ldi	r25, 0x09	; 9
    922a:	fc 01       	movw	r30, r24
    922c:	85 81       	ldd	r24, Z+5	; 0x05
    922e:	88 2f       	mov	r24, r24
    9230:	90 e0       	ldi	r25, 0x00	; 0
    9232:	80 7c       	andi	r24, 0xC0	; 192
    9234:	99 27       	eor	r25, r25
    9236:	21 e0       	ldi	r18, 0x01	; 1
    9238:	89 2b       	or	r24, r25
    923a:	09 f4       	brne	.+2      	; 0x923e <_ZL11i2c_0_WaitWv+0x30>
    923c:	20 e0       	ldi	r18, 0x00	; 0
    923e:	22 23       	and	r18, r18
    9240:	a1 f0       	breq	.+40     	; 0x926a <_ZL11i2c_0_WaitWv+0x5c>
		{
			if(!(TWI0.MSTATUS & TWI_RXACK_bm))
    9242:	80 e0       	ldi	r24, 0x00	; 0
    9244:	99 e0       	ldi	r25, 0x09	; 9
    9246:	fc 01       	movw	r30, r24
    9248:	85 81       	ldd	r24, Z+5	; 0x05
    924a:	88 2f       	mov	r24, r24
    924c:	90 e0       	ldi	r25, 0x00	; 0
    924e:	80 71       	andi	r24, 0x10	; 16
    9250:	99 27       	eor	r25, r25
    9252:	21 e0       	ldi	r18, 0x01	; 1
    9254:	89 2b       	or	r24, r25
    9256:	09 f0       	breq	.+2      	; 0x925a <_ZL11i2c_0_WaitWv+0x4c>
    9258:	20 e0       	ldi	r18, 0x00	; 0
    925a:	22 23       	and	r18, r18
    925c:	19 f0       	breq	.+6      	; 0x9264 <_ZL11i2c_0_WaitWv+0x56>
			{
				/* client responded with ack - TWI goes to M1 state */
				state = I2C_ACKED;
    925e:	81 e0       	ldi	r24, 0x01	; 1
    9260:	89 83       	std	Y+1, r24	; 0x01
    9262:	13 c0       	rjmp	.+38     	; 0x928a <_ZL11i2c_0_WaitWv+0x7c>
			}
			else
			{
				/* address sent but no ack received - TWI goes to M3 state */
				state = I2C_NACKED;
    9264:	82 e0       	ldi	r24, 0x02	; 2
    9266:	89 83       	std	Y+1, r24	; 0x01
    9268:	10 c0       	rjmp	.+32     	; 0x928a <_ZL11i2c_0_WaitWv+0x7c>
			}
		}
		else if(TWI0.MSTATUS & (TWI_BUSERR_bm | TWI_ARBLOST_bm))
    926a:	80 e0       	ldi	r24, 0x00	; 0
    926c:	99 e0       	ldi	r25, 0x09	; 9
    926e:	fc 01       	movw	r30, r24
    9270:	85 81       	ldd	r24, Z+5	; 0x05
    9272:	88 2f       	mov	r24, r24
    9274:	90 e0       	ldi	r25, 0x00	; 0
    9276:	8c 70       	andi	r24, 0x0C	; 12
    9278:	99 27       	eor	r25, r25
    927a:	21 e0       	ldi	r18, 0x01	; 1
    927c:	89 2b       	or	r24, r25
    927e:	09 f4       	brne	.+2      	; 0x9282 <_ZL11i2c_0_WaitWv+0x74>
    9280:	20 e0       	ldi	r18, 0x00	; 0
    9282:	22 23       	and	r18, r18
    9284:	11 f0       	breq	.+4      	; 0x928a <_ZL11i2c_0_WaitWv+0x7c>
		{
			/* get here only in case of bus error or arbitration lost - M4 state */
			state = I2C_ERROR;
    9286:	84 e0       	ldi	r24, 0x04	; 4
    9288:	89 83       	std	Y+1, r24	; 0x01
		}
	} while(!state && g_i2c0_timeout_ticks);
    928a:	89 81       	ldd	r24, Y+1	; 0x01
    928c:	88 23       	and	r24, r24
    928e:	41 f4       	brne	.+16     	; 0x92a0 <_ZL11i2c_0_WaitWv+0x92>
    9290:	80 91 3b 40 	lds	r24, 0x403B	; 0x80403b <g_i2c0_timeout_ticks>
    9294:	90 91 3c 40 	lds	r25, 0x403C	; 0x80403c <g_i2c0_timeout_ticks+0x1>
    9298:	89 2b       	or	r24, r25
    929a:	11 f0       	breq	.+4      	; 0x92a0 <_ZL11i2c_0_WaitWv+0x92>
    929c:	81 e0       	ldi	r24, 0x01	; 1
    929e:	01 c0       	rjmp	.+2      	; 0x92a2 <_ZL11i2c_0_WaitWv+0x94>
    92a0:	80 e0       	ldi	r24, 0x00	; 0
{
	uint8_t state = I2C_INIT;
	
	g_i2c0_timeout_ticks = 50;
	
	do
    92a2:	88 23       	and	r24, r24
    92a4:	09 f0       	breq	.+2      	; 0x92a8 <_ZL11i2c_0_WaitWv+0x9a>
    92a6:	bf cf       	rjmp	.-130    	; 0x9226 <_ZL11i2c_0_WaitWv+0x18>
			/* get here only in case of bus error or arbitration lost - M4 state */
			state = I2C_ERROR;
		}
	} while(!state && g_i2c0_timeout_ticks);
	
	if(!g_i2c0_timeout_ticks) 
    92a8:	80 91 3b 40 	lds	r24, 0x403B	; 0x80403b <g_i2c0_timeout_ticks>
    92ac:	90 91 3c 40 	lds	r25, 0x403C	; 0x80403c <g_i2c0_timeout_ticks+0x1>
    92b0:	21 e0       	ldi	r18, 0x01	; 1
    92b2:	89 2b       	or	r24, r25
    92b4:	09 f0       	breq	.+2      	; 0x92b8 <_ZL11i2c_0_WaitWv+0xaa>
    92b6:	20 e0       	ldi	r18, 0x00	; 0
    92b8:	22 23       	and	r18, r18
    92ba:	11 f0       	breq	.+4      	; 0x92c0 <_ZL11i2c_0_WaitWv+0xb2>
	{
		state = I2C_ERROR;
    92bc:	84 e0       	ldi	r24, 0x04	; 4
    92be:	89 83       	std	Y+1, r24	; 0x01
	}
	
	return state;
    92c0:	89 81       	ldd	r24, Y+1	; 0x01
}
    92c2:	0f 90       	pop	r0
    92c4:	df 91       	pop	r29
    92c6:	cf 91       	pop	r28
    92c8:	08 95       	ret

000092ca <_ZL11i2c_0_WaitRv>:

static uint8_t i2c_0_WaitR(void)
{
    92ca:	cf 93       	push	r28
    92cc:	df 93       	push	r29
    92ce:	1f 92       	push	r1
    92d0:	cd b7       	in	r28, 0x3d	; 61
    92d2:	de b7       	in	r29, 0x3e	; 62
	uint8_t state = I2C_INIT;
    92d4:	19 82       	std	Y+1, r1	; 0x01
	
	g_i2c0_timeout_ticks = 50;
    92d6:	82 e3       	ldi	r24, 0x32	; 50
    92d8:	90 e0       	ldi	r25, 0x00	; 0
    92da:	80 93 3b 40 	sts	0x403B, r24	; 0x80403b <g_i2c0_timeout_ticks>
    92de:	90 93 3c 40 	sts	0x403C, r25	; 0x80403c <g_i2c0_timeout_ticks+0x1>
	
	do
	{
		if(TWI0.MSTATUS & (TWI_WIF_bm | TWI_RIF_bm))
    92e2:	80 e0       	ldi	r24, 0x00	; 0
    92e4:	99 e0       	ldi	r25, 0x09	; 9
    92e6:	fc 01       	movw	r30, r24
    92e8:	85 81       	ldd	r24, Z+5	; 0x05
    92ea:	88 2f       	mov	r24, r24
    92ec:	90 e0       	ldi	r25, 0x00	; 0
    92ee:	80 7c       	andi	r24, 0xC0	; 192
    92f0:	99 27       	eor	r25, r25
    92f2:	21 e0       	ldi	r18, 0x01	; 1
    92f4:	89 2b       	or	r24, r25
    92f6:	09 f4       	brne	.+2      	; 0x92fa <_ZL11i2c_0_WaitRv+0x30>
    92f8:	20 e0       	ldi	r18, 0x00	; 0
    92fa:	22 23       	and	r18, r18
    92fc:	19 f0       	breq	.+6      	; 0x9304 <_ZL11i2c_0_WaitRv+0x3a>
		{
			state = I2C_READY;
    92fe:	83 e0       	ldi	r24, 0x03	; 3
    9300:	89 83       	std	Y+1, r24	; 0x01
    9302:	10 c0       	rjmp	.+32     	; 0x9324 <_ZL11i2c_0_WaitRv+0x5a>
		}
		else if(TWI0.MSTATUS & (TWI_BUSERR_bm | TWI_ARBLOST_bm))
    9304:	80 e0       	ldi	r24, 0x00	; 0
    9306:	99 e0       	ldi	r25, 0x09	; 9
    9308:	fc 01       	movw	r30, r24
    930a:	85 81       	ldd	r24, Z+5	; 0x05
    930c:	88 2f       	mov	r24, r24
    930e:	90 e0       	ldi	r25, 0x00	; 0
    9310:	8c 70       	andi	r24, 0x0C	; 12
    9312:	99 27       	eor	r25, r25
    9314:	21 e0       	ldi	r18, 0x01	; 1
    9316:	89 2b       	or	r24, r25
    9318:	09 f4       	brne	.+2      	; 0x931c <_ZL11i2c_0_WaitRv+0x52>
    931a:	20 e0       	ldi	r18, 0x00	; 0
    931c:	22 23       	and	r18, r18
    931e:	11 f0       	breq	.+4      	; 0x9324 <_ZL11i2c_0_WaitRv+0x5a>
		{
			/* get here only in case of bus error or arbitration lost - M4 state */
			state = I2C_ERROR;
    9320:	84 e0       	ldi	r24, 0x04	; 4
    9322:	89 83       	std	Y+1, r24	; 0x01
		}
	} while(!state && g_i2c0_timeout_ticks);
    9324:	89 81       	ldd	r24, Y+1	; 0x01
    9326:	88 23       	and	r24, r24
    9328:	41 f4       	brne	.+16     	; 0x933a <_ZL11i2c_0_WaitRv+0x70>
    932a:	80 91 3b 40 	lds	r24, 0x403B	; 0x80403b <g_i2c0_timeout_ticks>
    932e:	90 91 3c 40 	lds	r25, 0x403C	; 0x80403c <g_i2c0_timeout_ticks+0x1>
    9332:	89 2b       	or	r24, r25
    9334:	11 f0       	breq	.+4      	; 0x933a <_ZL11i2c_0_WaitRv+0x70>
    9336:	81 e0       	ldi	r24, 0x01	; 1
    9338:	01 c0       	rjmp	.+2      	; 0x933c <_ZL11i2c_0_WaitRv+0x72>
    933a:	80 e0       	ldi	r24, 0x00	; 0
{
	uint8_t state = I2C_INIT;
	
	g_i2c0_timeout_ticks = 50;
	
	do
    933c:	88 23       	and	r24, r24
    933e:	09 f0       	breq	.+2      	; 0x9342 <_ZL11i2c_0_WaitRv+0x78>
    9340:	d0 cf       	rjmp	.-96     	; 0x92e2 <_ZL11i2c_0_WaitRv+0x18>
			/* get here only in case of bus error or arbitration lost - M4 state */
			state = I2C_ERROR;
		}
	} while(!state && g_i2c0_timeout_ticks);
	
	return state;
    9342:	89 81       	ldd	r24, Y+1	; 0x01
}
    9344:	0f 90       	pop	r0
    9346:	df 91       	pop	r29
    9348:	cf 91       	pop	r28
    934a:	08 95       	ret

0000934c <I2C_0_SendData>:

/* Returns how many bytes have been sent, -1 means NACK at address, 0 means client ACKed to client address */
uint8_t I2C_0_SendData(uint8_t slaveAddr, uint8_t regAddr, uint8_t *pData, uint8_t len)
{
    934c:	cf 93       	push	r28
    934e:	df 93       	push	r29
    9350:	cd b7       	in	r28, 0x3d	; 61
    9352:	de b7       	in	r29, 0x3e	; 62
    9354:	26 97       	sbiw	r28, 0x06	; 6
    9356:	cd bf       	out	0x3d, r28	; 61
    9358:	de bf       	out	0x3e, r29	; 62
    935a:	8a 83       	std	Y+2, r24	; 0x02
    935c:	6b 83       	std	Y+3, r22	; 0x03
    935e:	4c 83       	std	Y+4, r20	; 0x04
    9360:	5d 83       	std	Y+5, r21	; 0x05
    9362:	2e 83       	std	Y+6, r18	; 0x06
	uint8_t retVal = (uint8_t) - 1;
    9364:	8f ef       	ldi	r24, 0xFF	; 255
    9366:	89 83       	std	Y+1, r24	; 0x01
	
	/* Send slave address */
	TWI0.MADDR = slaveAddr;
    9368:	80 e0       	ldi	r24, 0x00	; 0
    936a:	99 e0       	ldi	r25, 0x09	; 9
    936c:	2a 81       	ldd	r18, Y+2	; 0x02
    936e:	fc 01       	movw	r30, r24
    9370:	27 83       	std	Z+7, r18	; 0x07
	if(i2c_0_WaitW() != I2C_ACKED)
    9372:	0e 94 07 49 	call	0x920e	; 0x920e <_ZL11i2c_0_WaitWv>
    9376:	98 2f       	mov	r25, r24
    9378:	81 e0       	ldi	r24, 0x01	; 1
    937a:	91 30       	cpi	r25, 0x01	; 1
    937c:	09 f4       	brne	.+2      	; 0x9380 <I2C_0_SendData+0x34>
    937e:	80 e0       	ldi	r24, 0x00	; 0
    9380:	88 23       	and	r24, r24
    9382:	11 f0       	breq	.+4      	; 0x9388 <I2C_0_SendData+0x3c>
	{
		return retVal;
    9384:	89 81       	ldd	r24, Y+1	; 0x01
    9386:	44 c0       	rjmp	.+136    	; 0x9410 <I2C_0_SendData+0xc4>
	}
	
	/* Send the register address */
	TWI0.MDATA = regAddr;
    9388:	80 e0       	ldi	r24, 0x00	; 0
    938a:	99 e0       	ldi	r25, 0x09	; 9
    938c:	2b 81       	ldd	r18, Y+3	; 0x03
    938e:	fc 01       	movw	r30, r24
    9390:	20 87       	std	Z+8, r18	; 0x08
	if(i2c_0_WaitW() != I2C_ACKED)
    9392:	0e 94 07 49 	call	0x920e	; 0x920e <_ZL11i2c_0_WaitWv>
    9396:	98 2f       	mov	r25, r24
    9398:	81 e0       	ldi	r24, 0x01	; 1
    939a:	91 30       	cpi	r25, 0x01	; 1
    939c:	09 f4       	brne	.+2      	; 0x93a0 <I2C_0_SendData+0x54>
    939e:	80 e0       	ldi	r24, 0x00	; 0
    93a0:	88 23       	and	r24, r24
    93a2:	11 f0       	breq	.+4      	; 0x93a8 <I2C_0_SendData+0x5c>
	{
		return retVal;
    93a4:	89 81       	ldd	r24, Y+1	; 0x01
    93a6:	34 c0       	rjmp	.+104    	; 0x9410 <I2C_0_SendData+0xc4>
	}

	retVal = 0;
    93a8:	19 82       	std	Y+1, r1	; 0x01
	if((len != 0) && (pData != null))
    93aa:	8e 81       	ldd	r24, Y+6	; 0x06
    93ac:	88 23       	and	r24, r24
    93ae:	79 f1       	breq	.+94     	; 0x940e <I2C_0_SendData+0xc2>
    93b0:	8c 81       	ldd	r24, Y+4	; 0x04
    93b2:	9d 81       	ldd	r25, Y+5	; 0x05
    93b4:	89 2b       	or	r24, r25
    93b6:	59 f1       	breq	.+86     	; 0x940e <I2C_0_SendData+0xc2>
	{
		while(len--)
    93b8:	8e 81       	ldd	r24, Y+6	; 0x06
    93ba:	9f ef       	ldi	r25, 0xFF	; 255
    93bc:	98 0f       	add	r25, r24
    93be:	9e 83       	std	Y+6, r25	; 0x06
    93c0:	91 e0       	ldi	r25, 0x01	; 1
    93c2:	88 23       	and	r24, r24
    93c4:	09 f4       	brne	.+2      	; 0x93c8 <I2C_0_SendData+0x7c>
    93c6:	90 e0       	ldi	r25, 0x00	; 0
    93c8:	99 23       	and	r25, r25
    93ca:	09 f1       	breq	.+66     	; 0x940e <I2C_0_SendData+0xc2>
		{
			TWI0.MDATA = *pData;
    93cc:	80 e0       	ldi	r24, 0x00	; 0
    93ce:	99 e0       	ldi	r25, 0x09	; 9
    93d0:	2c 81       	ldd	r18, Y+4	; 0x04
    93d2:	3d 81       	ldd	r19, Y+5	; 0x05
    93d4:	f9 01       	movw	r30, r18
    93d6:	20 81       	ld	r18, Z
    93d8:	fc 01       	movw	r30, r24
    93da:	20 87       	std	Z+8, r18	; 0x08
			if(i2c_0_WaitW() == I2C_ACKED)
    93dc:	0e 94 07 49 	call	0x920e	; 0x920e <_ZL11i2c_0_WaitWv>
    93e0:	98 2f       	mov	r25, r24
    93e2:	81 e0       	ldi	r24, 0x01	; 1
    93e4:	91 30       	cpi	r25, 0x01	; 1
    93e6:	09 f0       	breq	.+2      	; 0x93ea <I2C_0_SendData+0x9e>
    93e8:	80 e0       	ldi	r24, 0x00	; 0
    93ea:	88 23       	and	r24, r24
    93ec:	79 f0       	breq	.+30     	; 0x940c <I2C_0_SendData+0xc0>
			{
				retVal++;
    93ee:	89 81       	ldd	r24, Y+1	; 0x01
    93f0:	8f 5f       	subi	r24, 0xFF	; 255
    93f2:	89 83       	std	Y+1, r24	; 0x01
				pData++;
    93f4:	8c 81       	ldd	r24, Y+4	; 0x04
    93f6:	9d 81       	ldd	r25, Y+5	; 0x05
    93f8:	01 96       	adiw	r24, 0x01	; 1
    93fa:	8c 83       	std	Y+4, r24	; 0x04
    93fc:	9d 83       	std	Y+5, r25	; 0x05
				if(!len) I2C_0_EndSession();
    93fe:	8e 81       	ldd	r24, Y+6	; 0x06
    9400:	88 23       	and	r24, r24
    9402:	11 f4       	brne	.+4      	; 0x9408 <I2C_0_SendData+0xbc>
    9404:	0e 94 8c 4a 	call	0x9518	; 0x9518 <I2C_0_EndSession>
				continue;
    9408:	00 00       	nop
	}

	retVal = 0;
	if((len != 0) && (pData != null))
	{
		while(len--)
    940a:	d6 cf       	rjmp	.-84     	; 0x93b8 <I2C_0_SendData+0x6c>
				if(!len) I2C_0_EndSession();
				continue;
			}
			else // did not get ACK after client address
			{
				break;
    940c:	00 00       	nop
			}
		}
	}
	
	return retVal;
    940e:	89 81       	ldd	r24, Y+1	; 0x01
}
    9410:	26 96       	adiw	r28, 0x06	; 6
    9412:	cd bf       	out	0x3d, r28	; 61
    9414:	de bf       	out	0x3e, r29	; 62
    9416:	df 91       	pop	r29
    9418:	cf 91       	pop	r28
    941a:	08 95       	ret

0000941c <I2C_0_GetData>:

/* Returns how many bytes have been received, -1 means NACK at address */
uint8_t I2C_0_GetData(uint8_t slaveAddr, uint8_t regAddr, uint8_t *pData, uint8_t len)
{
    941c:	cf 93       	push	r28
    941e:	df 93       	push	r29
    9420:	cd b7       	in	r28, 0x3d	; 61
    9422:	de b7       	in	r29, 0x3e	; 62
    9424:	26 97       	sbiw	r28, 0x06	; 6
    9426:	cd bf       	out	0x3d, r28	; 61
    9428:	de bf       	out	0x3e, r29	; 62
    942a:	8a 83       	std	Y+2, r24	; 0x02
    942c:	6b 83       	std	Y+3, r22	; 0x03
    942e:	4c 83       	std	Y+4, r20	; 0x04
    9430:	5d 83       	std	Y+5, r21	; 0x05
    9432:	2e 83       	std	Y+6, r18	; 0x06
	uint8_t retVal = (uint8_t) -1;
    9434:	8f ef       	ldi	r24, 0xFF	; 255
    9436:	89 83       	std	Y+1, r24	; 0x01
	
	/* Send the client address for write */
	TWI0.MADDR = slaveAddr;
    9438:	80 e0       	ldi	r24, 0x00	; 0
    943a:	99 e0       	ldi	r25, 0x09	; 9
    943c:	2a 81       	ldd	r18, Y+2	; 0x02
    943e:	fc 01       	movw	r30, r24
    9440:	27 83       	std	Z+7, r18	; 0x07
	if(i2c_0_WaitW() != I2C_ACKED)
    9442:	0e 94 07 49 	call	0x920e	; 0x920e <_ZL11i2c_0_WaitWv>
    9446:	98 2f       	mov	r25, r24
    9448:	81 e0       	ldi	r24, 0x01	; 1
    944a:	91 30       	cpi	r25, 0x01	; 1
    944c:	09 f4       	brne	.+2      	; 0x9450 <I2C_0_GetData+0x34>
    944e:	80 e0       	ldi	r24, 0x00	; 0
    9450:	88 23       	and	r24, r24
    9452:	11 f0       	breq	.+4      	; 0x9458 <I2C_0_GetData+0x3c>
	{
		return retVal;
    9454:	89 81       	ldd	r24, Y+1	; 0x01
    9456:	5a c0       	rjmp	.+180    	; 0x950c <I2C_0_GetData+0xf0>
	}
	
	/* Send the register address */
	TWI0.MDATA = regAddr;
    9458:	80 e0       	ldi	r24, 0x00	; 0
    945a:	99 e0       	ldi	r25, 0x09	; 9
    945c:	2b 81       	ldd	r18, Y+3	; 0x03
    945e:	fc 01       	movw	r30, r24
    9460:	20 87       	std	Z+8, r18	; 0x08
	if(i2c_0_WaitW() != I2C_ACKED)
    9462:	0e 94 07 49 	call	0x920e	; 0x920e <_ZL11i2c_0_WaitWv>
    9466:	98 2f       	mov	r25, r24
    9468:	81 e0       	ldi	r24, 0x01	; 1
    946a:	91 30       	cpi	r25, 0x01	; 1
    946c:	09 f4       	brne	.+2      	; 0x9470 <I2C_0_GetData+0x54>
    946e:	80 e0       	ldi	r24, 0x00	; 0
    9470:	88 23       	and	r24, r24
    9472:	11 f0       	breq	.+4      	; 0x9478 <I2C_0_GetData+0x5c>
	{
		return retVal;
    9474:	89 81       	ldd	r24, Y+1	; 0x01
    9476:	4a c0       	rjmp	.+148    	; 0x950c <I2C_0_GetData+0xf0>
	}
	
	/* Send the client address for read */
	TWI0.MADDR = slaveAddr | 0x01;
    9478:	80 e0       	ldi	r24, 0x00	; 0
    947a:	99 e0       	ldi	r25, 0x09	; 9
    947c:	2a 81       	ldd	r18, Y+2	; 0x02
    947e:	21 60       	ori	r18, 0x01	; 1
    9480:	fc 01       	movw	r30, r24
    9482:	27 83       	std	Z+7, r18	; 0x07
	if(i2c_0_WaitW() != I2C_ACKED)
    9484:	0e 94 07 49 	call	0x920e	; 0x920e <_ZL11i2c_0_WaitWv>
    9488:	98 2f       	mov	r25, r24
    948a:	81 e0       	ldi	r24, 0x01	; 1
    948c:	91 30       	cpi	r25, 0x01	; 1
    948e:	09 f4       	brne	.+2      	; 0x9492 <I2C_0_GetData+0x76>
    9490:	80 e0       	ldi	r24, 0x00	; 0
    9492:	88 23       	and	r24, r24
    9494:	11 f0       	breq	.+4      	; 0x949a <I2C_0_GetData+0x7e>
	{
		return retVal;
    9496:	89 81       	ldd	r24, Y+1	; 0x01
    9498:	39 c0       	rjmp	.+114    	; 0x950c <I2C_0_GetData+0xf0>
	}
	
	retVal = 0;
    949a:	19 82       	std	Y+1, r1	; 0x01
	if((len != 0) && (pData !=null ))
    949c:	8e 81       	ldd	r24, Y+6	; 0x06
    949e:	88 23       	and	r24, r24
    94a0:	a1 f1       	breq	.+104    	; 0x950a <I2C_0_GetData+0xee>
    94a2:	8c 81       	ldd	r24, Y+4	; 0x04
    94a4:	9d 81       	ldd	r25, Y+5	; 0x05
    94a6:	89 2b       	or	r24, r25
    94a8:	81 f1       	breq	.+96     	; 0x950a <I2C_0_GetData+0xee>
	{
		while(len--)
    94aa:	8e 81       	ldd	r24, Y+6	; 0x06
    94ac:	9f ef       	ldi	r25, 0xFF	; 255
    94ae:	98 0f       	add	r25, r24
    94b0:	9e 83       	std	Y+6, r25	; 0x06
    94b2:	91 e0       	ldi	r25, 0x01	; 1
    94b4:	88 23       	and	r24, r24
    94b6:	09 f4       	brne	.+2      	; 0x94ba <I2C_0_GetData+0x9e>
    94b8:	90 e0       	ldi	r25, 0x00	; 0
    94ba:	99 23       	and	r25, r25
    94bc:	31 f1       	breq	.+76     	; 0x950a <I2C_0_GetData+0xee>
		{
			if(i2c_0_WaitR() == I2C_READY)
    94be:	0e 94 65 49 	call	0x92ca	; 0x92ca <_ZL11i2c_0_WaitRv>
    94c2:	98 2f       	mov	r25, r24
    94c4:	81 e0       	ldi	r24, 0x01	; 1
    94c6:	93 30       	cpi	r25, 0x03	; 3
    94c8:	09 f0       	breq	.+2      	; 0x94cc <I2C_0_GetData+0xb0>
    94ca:	80 e0       	ldi	r24, 0x00	; 0
    94cc:	88 23       	and	r24, r24
    94ce:	e1 f0       	breq	.+56     	; 0x9508 <I2C_0_GetData+0xec>
			{
				*pData = TWI0.MDATA;
    94d0:	80 e0       	ldi	r24, 0x00	; 0
    94d2:	99 e0       	ldi	r25, 0x09	; 9
    94d4:	fc 01       	movw	r30, r24
    94d6:	20 85       	ldd	r18, Z+8	; 0x08
    94d8:	8c 81       	ldd	r24, Y+4	; 0x04
    94da:	9d 81       	ldd	r25, Y+5	; 0x05
    94dc:	fc 01       	movw	r30, r24
    94de:	20 83       	st	Z, r18
				TWI0.MCTRLB = (len == 0)? TWI_ACKACT_bm | TWI_MCMD_STOP_gc : TWI_MCMD_RECVTRANS_gc;
    94e0:	80 e0       	ldi	r24, 0x00	; 0
    94e2:	99 e0       	ldi	r25, 0x09	; 9
    94e4:	2e 81       	ldd	r18, Y+6	; 0x06
    94e6:	22 23       	and	r18, r18
    94e8:	11 f4       	brne	.+4      	; 0x94ee <I2C_0_GetData+0xd2>
    94ea:	27 e0       	ldi	r18, 0x07	; 7
    94ec:	01 c0       	rjmp	.+2      	; 0x94f0 <I2C_0_GetData+0xd4>
    94ee:	22 e0       	ldi	r18, 0x02	; 2
    94f0:	fc 01       	movw	r30, r24
    94f2:	24 83       	std	Z+4, r18	; 0x04
				retVal++;
    94f4:	89 81       	ldd	r24, Y+1	; 0x01
    94f6:	8f 5f       	subi	r24, 0xFF	; 255
    94f8:	89 83       	std	Y+1, r24	; 0x01
				pData++;
    94fa:	8c 81       	ldd	r24, Y+4	; 0x04
    94fc:	9d 81       	ldd	r25, Y+5	; 0x05
    94fe:	01 96       	adiw	r24, 0x01	; 1
    9500:	8c 83       	std	Y+4, r24	; 0x04
    9502:	9d 83       	std	Y+5, r25	; 0x05
				continue;
    9504:	00 00       	nop
	}
	
	retVal = 0;
	if((len != 0) && (pData !=null ))
	{
		while(len--)
    9506:	d1 cf       	rjmp	.-94     	; 0x94aa <I2C_0_GetData+0x8e>
				retVal++;
				pData++;
				continue;
			}
			else
			break;
    9508:	00 00       	nop
		}
	}
	
	return retVal;
    950a:	89 81       	ldd	r24, Y+1	; 0x01
}
    950c:	26 96       	adiw	r28, 0x06	; 6
    950e:	cd bf       	out	0x3d, r28	; 61
    9510:	de bf       	out	0x3e, r29	; 62
    9512:	df 91       	pop	r29
    9514:	cf 91       	pop	r28
    9516:	08 95       	ret

00009518 <I2C_0_EndSession>:

void I2C_0_EndSession(void)
{
    9518:	cf 93       	push	r28
    951a:	df 93       	push	r29
    951c:	cd b7       	in	r28, 0x3d	; 61
    951e:	de b7       	in	r29, 0x3e	; 62
	TWI0.MCTRLB = TWI_MCMD_STOP_gc;
    9520:	80 e0       	ldi	r24, 0x00	; 0
    9522:	99 e0       	ldi	r25, 0x09	; 9
    9524:	23 e0       	ldi	r18, 0x03	; 3
    9526:	fc 01       	movw	r30, r24
    9528:	24 83       	std	Z+4, r18	; 0x04
}
    952a:	00 00       	nop
    952c:	df 91       	pop	r29
    952e:	cf 91       	pop	r28
    9530:	08 95       	ret

00009532 <I2C_1_Shutdown>:
/************************************************************************/
/* I2C_1                                                               */
/************************************************************************/

void I2C_1_Shutdown(void)
{
    9532:	cf 93       	push	r28
    9534:	df 93       	push	r29
    9536:	cd b7       	in	r28, 0x3d	; 61
    9538:	de b7       	in	r29, 0x3e	; 62
	/* Set bus state idle */
	TWI1.MSTATUS = TWI_BUSSTATE_IDLE_gc;
    953a:	80 e2       	ldi	r24, 0x20	; 32
    953c:	99 e0       	ldi	r25, 0x09	; 9
    953e:	21 e0       	ldi	r18, 0x01	; 1
    9540:	fc 01       	movw	r30, r24
    9542:	25 83       	std	Z+5, r18	; 0x05
	TWI1.MCTRLA = 0;
    9544:	80 e2       	ldi	r24, 0x20	; 32
    9546:	99 e0       	ldi	r25, 0x09	; 9
    9548:	fc 01       	movw	r30, r24
    954a:	13 82       	std	Z+3, r1	; 0x03
}
    954c:	00 00       	nop
    954e:	df 91       	pop	r29
    9550:	cf 91       	pop	r28
    9552:	08 95       	ret

00009554 <I2C_1_Init>:

void I2C_1_Init(void)
{
    9554:	cf 93       	push	r28
    9556:	df 93       	push	r29
    9558:	cd b7       	in	r28, 0x3d	; 61
    955a:	de b7       	in	r29, 0x3e	; 62
	/* Select I2C pins PB2/PB3 */
	PORTMUX.TWIROUTEA &= 0x03;
    955c:	80 ee       	ldi	r24, 0xE0	; 224
    955e:	95 e0       	ldi	r25, 0x05	; 5
    9560:	20 ee       	ldi	r18, 0xE0	; 224
    9562:	35 e0       	ldi	r19, 0x05	; 5
    9564:	f9 01       	movw	r30, r18
    9566:	25 81       	ldd	r18, Z+5	; 0x05
    9568:	23 70       	andi	r18, 0x03	; 3
    956a:	fc 01       	movw	r30, r24
    956c:	25 83       	std	Z+5, r18	; 0x05
	PORTMUX.TWIROUTEA |= 0x08;
    956e:	80 ee       	ldi	r24, 0xE0	; 224
    9570:	95 e0       	ldi	r25, 0x05	; 5
    9572:	20 ee       	ldi	r18, 0xE0	; 224
    9574:	35 e0       	ldi	r19, 0x05	; 5
    9576:	f9 01       	movw	r30, r18
    9578:	25 81       	ldd	r18, Z+5	; 0x05
    957a:	28 60       	ori	r18, 0x08	; 8
    957c:	fc 01       	movw	r30, r24
    957e:	25 83       	std	Z+5, r18	; 0x05
	
	/* Host Baud Rate Control */
//	TWI1.MBAUD = TWI1_BAUD((I2C_SCL_FREQ), 0.3);
	TWI1.MBAUD = (uint8_t)TWI0_BAUD(I2C_SCL_FREQ, 0);
    9580:	80 e2       	ldi	r24, 0x20	; 32
    9582:	99 e0       	ldi	r25, 0x09	; 9
    9584:	23 e7       	ldi	r18, 0x73	; 115
    9586:	fc 01       	movw	r30, r24
    9588:	26 83       	std	Z+6, r18	; 0x06
		
	/* Enable TWI */
	TWI1.MCTRLA = TWI_ENABLE_bm;
    958a:	80 e2       	ldi	r24, 0x20	; 32
    958c:	99 e0       	ldi	r25, 0x09	; 9
    958e:	21 e0       	ldi	r18, 0x01	; 1
    9590:	fc 01       	movw	r30, r24
    9592:	23 83       	std	Z+3, r18	; 0x03
	
	/* Initialize the address register */
	TWI1.MADDR = 0x00;
    9594:	80 e2       	ldi	r24, 0x20	; 32
    9596:	99 e0       	ldi	r25, 0x09	; 9
    9598:	fc 01       	movw	r30, r24
    959a:	17 82       	std	Z+7, r1	; 0x07
	
	/* Initialize the data register */
	TWI1.MDATA = 0x00;
    959c:	80 e2       	ldi	r24, 0x20	; 32
    959e:	99 e0       	ldi	r25, 0x09	; 9
    95a0:	fc 01       	movw	r30, r24
    95a2:	10 86       	std	Z+8, r1	; 0x08
	
	/* Set bus state idle */
	TWI1.MSTATUS = TWI_BUSSTATE_IDLE_gc;
    95a4:	80 e2       	ldi	r24, 0x20	; 32
    95a6:	99 e0       	ldi	r25, 0x09	; 9
    95a8:	21 e0       	ldi	r18, 0x01	; 1
    95aa:	fc 01       	movw	r30, r24
    95ac:	25 83       	std	Z+5, r18	; 0x05
	
	PORTB_set_pin_pull_mode(2, PORT_PULL_UP);
    95ae:	61 e0       	ldi	r22, 0x01	; 1
    95b0:	82 e0       	ldi	r24, 0x02	; 2
    95b2:	0e 94 a5 48 	call	0x914a	; 0x914a <PORTB_set_pin_pull_mode>
	PORTB_set_pin_pull_mode(3, PORT_PULL_UP);
    95b6:	61 e0       	ldi	r22, 0x01	; 1
    95b8:	83 e0       	ldi	r24, 0x03	; 3
    95ba:	0e 94 a5 48 	call	0x914a	; 0x914a <PORTB_set_pin_pull_mode>
}
    95be:	00 00       	nop
    95c0:	df 91       	pop	r29
    95c2:	cf 91       	pop	r28
    95c4:	08 95       	ret

000095c6 <_ZL11i2c_1_WaitWv>:

static uint8_t i2c_1_WaitW(void)
{
    95c6:	cf 93       	push	r28
    95c8:	df 93       	push	r29
    95ca:	00 d0       	rcall	.+0      	; 0x95cc <_ZL11i2c_1_WaitWv+0x6>
    95cc:	cd b7       	in	r28, 0x3d	; 61
    95ce:	de b7       	in	r29, 0x3e	; 62
	uint8_t state = I2C_INIT;
    95d0:	19 82       	std	Y+1, r1	; 0x01
	
	g_i2c1_timeout_ticks = 50;
    95d2:	82 e3       	ldi	r24, 0x32	; 50
    95d4:	90 e0       	ldi	r25, 0x00	; 0
    95d6:	80 93 3d 40 	sts	0x403D, r24	; 0x80403d <g_i2c1_timeout_ticks>
    95da:	90 93 3e 40 	sts	0x403E, r25	; 0x80403e <g_i2c1_timeout_ticks+0x1>
	
	do
	{
		uint8_t stat = TWI1.MSTATUS;
    95de:	80 e2       	ldi	r24, 0x20	; 32
    95e0:	99 e0       	ldi	r25, 0x09	; 9
    95e2:	fc 01       	movw	r30, r24
    95e4:	85 81       	ldd	r24, Z+5	; 0x05
    95e6:	8a 83       	std	Y+2, r24	; 0x02
		if(stat & (TWI_WIF_bm | TWI_RIF_bm))
    95e8:	8a 81       	ldd	r24, Y+2	; 0x02
    95ea:	88 2f       	mov	r24, r24
    95ec:	90 e0       	ldi	r25, 0x00	; 0
    95ee:	80 7c       	andi	r24, 0xC0	; 192
    95f0:	99 27       	eor	r25, r25
    95f2:	89 2b       	or	r24, r25
    95f4:	69 f0       	breq	.+26     	; 0x9610 <_ZL11i2c_1_WaitWv+0x4a>
		{
			if(!(stat & TWI_RXACK_bm))
    95f6:	8a 81       	ldd	r24, Y+2	; 0x02
    95f8:	88 2f       	mov	r24, r24
    95fa:	90 e0       	ldi	r25, 0x00	; 0
    95fc:	80 71       	andi	r24, 0x10	; 16
    95fe:	99 27       	eor	r25, r25
    9600:	89 2b       	or	r24, r25
    9602:	19 f4       	brne	.+6      	; 0x960a <_ZL11i2c_1_WaitWv+0x44>
			{
				/* client responded with ack - TWI goes to M1 state */
				state = I2C_ACKED;
    9604:	81 e0       	ldi	r24, 0x01	; 1
    9606:	89 83       	std	Y+1, r24	; 0x01
    9608:	0c c0       	rjmp	.+24     	; 0x9622 <_ZL11i2c_1_WaitWv+0x5c>
			}
			else
			{
				/* address sent but no ack received - TWI goes to M3 state */
				state = I2C_NACKED;
    960a:	82 e0       	ldi	r24, 0x02	; 2
    960c:	89 83       	std	Y+1, r24	; 0x01
    960e:	09 c0       	rjmp	.+18     	; 0x9622 <_ZL11i2c_1_WaitWv+0x5c>
			}
		}
		else if(stat & (TWI_BUSERR_bm | TWI_ARBLOST_bm))
    9610:	8a 81       	ldd	r24, Y+2	; 0x02
    9612:	88 2f       	mov	r24, r24
    9614:	90 e0       	ldi	r25, 0x00	; 0
    9616:	8c 70       	andi	r24, 0x0C	; 12
    9618:	99 27       	eor	r25, r25
    961a:	89 2b       	or	r24, r25
    961c:	11 f0       	breq	.+4      	; 0x9622 <_ZL11i2c_1_WaitWv+0x5c>
		{
			/* get here only in case of bus error or arbitration lost - M4 state */
			state = I2C_ERROR;
    961e:	84 e0       	ldi	r24, 0x04	; 4
    9620:	89 83       	std	Y+1, r24	; 0x01
		}
	} while(!state && g_i2c1_timeout_ticks);
    9622:	89 81       	ldd	r24, Y+1	; 0x01
    9624:	88 23       	and	r24, r24
    9626:	41 f4       	brne	.+16     	; 0x9638 <_ZL11i2c_1_WaitWv+0x72>
    9628:	80 91 3d 40 	lds	r24, 0x403D	; 0x80403d <g_i2c1_timeout_ticks>
    962c:	90 91 3e 40 	lds	r25, 0x403E	; 0x80403e <g_i2c1_timeout_ticks+0x1>
    9630:	89 2b       	or	r24, r25
    9632:	11 f0       	breq	.+4      	; 0x9638 <_ZL11i2c_1_WaitWv+0x72>
    9634:	81 e0       	ldi	r24, 0x01	; 1
    9636:	01 c0       	rjmp	.+2      	; 0x963a <_ZL11i2c_1_WaitWv+0x74>
    9638:	80 e0       	ldi	r24, 0x00	; 0
{
	uint8_t state = I2C_INIT;
	
	g_i2c1_timeout_ticks = 50;
	
	do
    963a:	88 23       	and	r24, r24
    963c:	09 f0       	breq	.+2      	; 0x9640 <_ZL11i2c_1_WaitWv+0x7a>
    963e:	cf cf       	rjmp	.-98     	; 0x95de <_ZL11i2c_1_WaitWv+0x18>
			/* get here only in case of bus error or arbitration lost - M4 state */
			state = I2C_ERROR;
		}
	} while(!state && g_i2c1_timeout_ticks);
	
	return state;
    9640:	89 81       	ldd	r24, Y+1	; 0x01
}
    9642:	0f 90       	pop	r0
    9644:	0f 90       	pop	r0
    9646:	df 91       	pop	r29
    9648:	cf 91       	pop	r28
    964a:	08 95       	ret

0000964c <_ZL11I2C_1_WaitRv>:

static uint8_t I2C_1_WaitR(void)
{
    964c:	cf 93       	push	r28
    964e:	df 93       	push	r29
    9650:	1f 92       	push	r1
    9652:	cd b7       	in	r28, 0x3d	; 61
    9654:	de b7       	in	r29, 0x3e	; 62
	uint8_t state = I2C_INIT;
    9656:	19 82       	std	Y+1, r1	; 0x01
	
	g_i2c0_timeout_ticks = 50;
    9658:	82 e3       	ldi	r24, 0x32	; 50
    965a:	90 e0       	ldi	r25, 0x00	; 0
    965c:	80 93 3b 40 	sts	0x403B, r24	; 0x80403b <g_i2c0_timeout_ticks>
    9660:	90 93 3c 40 	sts	0x403C, r25	; 0x80403c <g_i2c0_timeout_ticks+0x1>
	
	do
	{
		if(TWI1.MSTATUS & (TWI_WIF_bm | TWI_RIF_bm))
    9664:	80 e2       	ldi	r24, 0x20	; 32
    9666:	99 e0       	ldi	r25, 0x09	; 9
    9668:	fc 01       	movw	r30, r24
    966a:	85 81       	ldd	r24, Z+5	; 0x05
    966c:	88 2f       	mov	r24, r24
    966e:	90 e0       	ldi	r25, 0x00	; 0
    9670:	80 7c       	andi	r24, 0xC0	; 192
    9672:	99 27       	eor	r25, r25
    9674:	21 e0       	ldi	r18, 0x01	; 1
    9676:	89 2b       	or	r24, r25
    9678:	09 f4       	brne	.+2      	; 0x967c <_ZL11I2C_1_WaitRv+0x30>
    967a:	20 e0       	ldi	r18, 0x00	; 0
    967c:	22 23       	and	r18, r18
    967e:	19 f0       	breq	.+6      	; 0x9686 <_ZL11I2C_1_WaitRv+0x3a>
		{
			state = I2C_READY;
    9680:	83 e0       	ldi	r24, 0x03	; 3
    9682:	89 83       	std	Y+1, r24	; 0x01
    9684:	10 c0       	rjmp	.+32     	; 0x96a6 <_ZL11I2C_1_WaitRv+0x5a>
		}
		else if(TWI1.MSTATUS & (TWI_BUSERR_bm | TWI_ARBLOST_bm))
    9686:	80 e2       	ldi	r24, 0x20	; 32
    9688:	99 e0       	ldi	r25, 0x09	; 9
    968a:	fc 01       	movw	r30, r24
    968c:	85 81       	ldd	r24, Z+5	; 0x05
    968e:	88 2f       	mov	r24, r24
    9690:	90 e0       	ldi	r25, 0x00	; 0
    9692:	8c 70       	andi	r24, 0x0C	; 12
    9694:	99 27       	eor	r25, r25
    9696:	21 e0       	ldi	r18, 0x01	; 1
    9698:	89 2b       	or	r24, r25
    969a:	09 f4       	brne	.+2      	; 0x969e <_ZL11I2C_1_WaitRv+0x52>
    969c:	20 e0       	ldi	r18, 0x00	; 0
    969e:	22 23       	and	r18, r18
    96a0:	11 f0       	breq	.+4      	; 0x96a6 <_ZL11I2C_1_WaitRv+0x5a>
		{
			/* get here only in case of bus error or arbitration lost - M4 state */
			state = I2C_ERROR;
    96a2:	84 e0       	ldi	r24, 0x04	; 4
    96a4:	89 83       	std	Y+1, r24	; 0x01
		}
	} while(!state && g_i2c0_timeout_ticks);
    96a6:	89 81       	ldd	r24, Y+1	; 0x01
    96a8:	88 23       	and	r24, r24
    96aa:	41 f4       	brne	.+16     	; 0x96bc <_ZL11I2C_1_WaitRv+0x70>
    96ac:	80 91 3b 40 	lds	r24, 0x403B	; 0x80403b <g_i2c0_timeout_ticks>
    96b0:	90 91 3c 40 	lds	r25, 0x403C	; 0x80403c <g_i2c0_timeout_ticks+0x1>
    96b4:	89 2b       	or	r24, r25
    96b6:	11 f0       	breq	.+4      	; 0x96bc <_ZL11I2C_1_WaitRv+0x70>
    96b8:	81 e0       	ldi	r24, 0x01	; 1
    96ba:	01 c0       	rjmp	.+2      	; 0x96be <_ZL11I2C_1_WaitRv+0x72>
    96bc:	80 e0       	ldi	r24, 0x00	; 0
{
	uint8_t state = I2C_INIT;
	
	g_i2c0_timeout_ticks = 50;
	
	do
    96be:	88 23       	and	r24, r24
    96c0:	09 f0       	breq	.+2      	; 0x96c4 <_ZL11I2C_1_WaitRv+0x78>
    96c2:	d0 cf       	rjmp	.-96     	; 0x9664 <_ZL11I2C_1_WaitRv+0x18>
			/* get here only in case of bus error or arbitration lost - M4 state */
			state = I2C_ERROR;
		}
	} while(!state && g_i2c0_timeout_ticks);
	
	return state;
    96c4:	89 81       	ldd	r24, Y+1	; 0x01
}
    96c6:	0f 90       	pop	r0
    96c8:	df 91       	pop	r29
    96ca:	cf 91       	pop	r28
    96cc:	08 95       	ret

000096ce <I2C_1_SendData>:

/* Returns how many bytes have been sent, -1 means NACK at address, 0 means client ACKed to client address */
uint8_t I2C_1_SendData(uint8_t slaveAddr, uint8_t regAddr, uint8_t *pData, uint8_t len)
{
    96ce:	cf 93       	push	r28
    96d0:	df 93       	push	r29
    96d2:	cd b7       	in	r28, 0x3d	; 61
    96d4:	de b7       	in	r29, 0x3e	; 62
    96d6:	26 97       	sbiw	r28, 0x06	; 6
    96d8:	cd bf       	out	0x3d, r28	; 61
    96da:	de bf       	out	0x3e, r29	; 62
    96dc:	8a 83       	std	Y+2, r24	; 0x02
    96de:	6b 83       	std	Y+3, r22	; 0x03
    96e0:	4c 83       	std	Y+4, r20	; 0x04
    96e2:	5d 83       	std	Y+5, r21	; 0x05
    96e4:	2e 83       	std	Y+6, r18	; 0x06
	uint8_t retVal = (uint8_t) - 1;
    96e6:	8f ef       	ldi	r24, 0xFF	; 255
    96e8:	89 83       	std	Y+1, r24	; 0x01
	
	/* Send the slave address */
	TWI1.MADDR = slaveAddr & ~0x01;
    96ea:	80 e2       	ldi	r24, 0x20	; 32
    96ec:	99 e0       	ldi	r25, 0x09	; 9
    96ee:	2a 81       	ldd	r18, Y+2	; 0x02
    96f0:	2e 7f       	andi	r18, 0xFE	; 254
    96f2:	fc 01       	movw	r30, r24
    96f4:	27 83       	std	Z+7, r18	; 0x07
	if(i2c_1_WaitW() != I2C_ACKED)
    96f6:	0e 94 e3 4a 	call	0x95c6	; 0x95c6 <_ZL11i2c_1_WaitWv>
    96fa:	98 2f       	mov	r25, r24
    96fc:	81 e0       	ldi	r24, 0x01	; 1
    96fe:	91 30       	cpi	r25, 0x01	; 1
    9700:	09 f4       	brne	.+2      	; 0x9704 <I2C_1_SendData+0x36>
    9702:	80 e0       	ldi	r24, 0x00	; 0
    9704:	88 23       	and	r24, r24
    9706:	11 f0       	breq	.+4      	; 0x970c <I2C_1_SendData+0x3e>
	{
		return retVal;
    9708:	89 81       	ldd	r24, Y+1	; 0x01
    970a:	44 c0       	rjmp	.+136    	; 0x9794 <I2C_1_SendData+0xc6>
	}
	
	/* Send the register address */
	TWI1.MDATA = regAddr;	
    970c:	80 e2       	ldi	r24, 0x20	; 32
    970e:	99 e0       	ldi	r25, 0x09	; 9
    9710:	2b 81       	ldd	r18, Y+3	; 0x03
    9712:	fc 01       	movw	r30, r24
    9714:	20 87       	std	Z+8, r18	; 0x08
	if(i2c_1_WaitW() != I2C_ACKED)
    9716:	0e 94 e3 4a 	call	0x95c6	; 0x95c6 <_ZL11i2c_1_WaitWv>
    971a:	98 2f       	mov	r25, r24
    971c:	81 e0       	ldi	r24, 0x01	; 1
    971e:	91 30       	cpi	r25, 0x01	; 1
    9720:	09 f4       	brne	.+2      	; 0x9724 <I2C_1_SendData+0x56>
    9722:	80 e0       	ldi	r24, 0x00	; 0
    9724:	88 23       	and	r24, r24
    9726:	11 f0       	breq	.+4      	; 0x972c <I2C_1_SendData+0x5e>
	{
		return retVal;
    9728:	89 81       	ldd	r24, Y+1	; 0x01
    972a:	34 c0       	rjmp	.+104    	; 0x9794 <I2C_1_SendData+0xc6>
	}	

	retVal = 0;
    972c:	19 82       	std	Y+1, r1	; 0x01
	if((len != 0) && (pData != null))
    972e:	8e 81       	ldd	r24, Y+6	; 0x06
    9730:	88 23       	and	r24, r24
    9732:	79 f1       	breq	.+94     	; 0x9792 <I2C_1_SendData+0xc4>
    9734:	8c 81       	ldd	r24, Y+4	; 0x04
    9736:	9d 81       	ldd	r25, Y+5	; 0x05
    9738:	89 2b       	or	r24, r25
    973a:	59 f1       	breq	.+86     	; 0x9792 <I2C_1_SendData+0xc4>
	{
		while(len--)
    973c:	8e 81       	ldd	r24, Y+6	; 0x06
    973e:	9f ef       	ldi	r25, 0xFF	; 255
    9740:	98 0f       	add	r25, r24
    9742:	9e 83       	std	Y+6, r25	; 0x06
    9744:	91 e0       	ldi	r25, 0x01	; 1
    9746:	88 23       	and	r24, r24
    9748:	09 f4       	brne	.+2      	; 0x974c <I2C_1_SendData+0x7e>
    974a:	90 e0       	ldi	r25, 0x00	; 0
    974c:	99 23       	and	r25, r25
    974e:	09 f1       	breq	.+66     	; 0x9792 <I2C_1_SendData+0xc4>
		{
			TWI1.MDATA = *pData;
    9750:	80 e2       	ldi	r24, 0x20	; 32
    9752:	99 e0       	ldi	r25, 0x09	; 9
    9754:	2c 81       	ldd	r18, Y+4	; 0x04
    9756:	3d 81       	ldd	r19, Y+5	; 0x05
    9758:	f9 01       	movw	r30, r18
    975a:	20 81       	ld	r18, Z
    975c:	fc 01       	movw	r30, r24
    975e:	20 87       	std	Z+8, r18	; 0x08
			if(i2c_1_WaitW() == I2C_ACKED)
    9760:	0e 94 e3 4a 	call	0x95c6	; 0x95c6 <_ZL11i2c_1_WaitWv>
    9764:	98 2f       	mov	r25, r24
    9766:	81 e0       	ldi	r24, 0x01	; 1
    9768:	91 30       	cpi	r25, 0x01	; 1
    976a:	09 f0       	breq	.+2      	; 0x976e <I2C_1_SendData+0xa0>
    976c:	80 e0       	ldi	r24, 0x00	; 0
    976e:	88 23       	and	r24, r24
    9770:	79 f0       	breq	.+30     	; 0x9790 <I2C_1_SendData+0xc2>
			{
				retVal++;
    9772:	89 81       	ldd	r24, Y+1	; 0x01
    9774:	8f 5f       	subi	r24, 0xFF	; 255
    9776:	89 83       	std	Y+1, r24	; 0x01
				pData++;
    9778:	8c 81       	ldd	r24, Y+4	; 0x04
    977a:	9d 81       	ldd	r25, Y+5	; 0x05
    977c:	01 96       	adiw	r24, 0x01	; 1
    977e:	8c 83       	std	Y+4, r24	; 0x04
    9780:	9d 83       	std	Y+5, r25	; 0x05
				if(!len) I2C_1_EndSession();
    9782:	8e 81       	ldd	r24, Y+6	; 0x06
    9784:	88 23       	and	r24, r24
    9786:	11 f4       	brne	.+4      	; 0x978c <I2C_1_SendData+0xbe>
    9788:	0e 94 4e 4c 	call	0x989c	; 0x989c <I2C_1_EndSession>
				continue;
    978c:	00 00       	nop
	}	

	retVal = 0;
	if((len != 0) && (pData != null))
	{
		while(len--)
    978e:	d6 cf       	rjmp	.-84     	; 0x973c <I2C_1_SendData+0x6e>
				if(!len) I2C_1_EndSession();
				continue;
			}
			else // did not get ACK after client address
			{
				break;
    9790:	00 00       	nop
			}
		}
	}
	
	return retVal;
    9792:	89 81       	ldd	r24, Y+1	; 0x01
}
    9794:	26 96       	adiw	r28, 0x06	; 6
    9796:	cd bf       	out	0x3d, r28	; 61
    9798:	de bf       	out	0x3e, r29	; 62
    979a:	df 91       	pop	r29
    979c:	cf 91       	pop	r28
    979e:	08 95       	ret

000097a0 <I2C_1_GetData>:


/* Returns how many bytes have been received, -1 means NACK at address */
uint8_t I2C_1_GetData(uint8_t slaveAddr, uint8_t regAddr, uint8_t *pData, uint8_t len)
{
    97a0:	cf 93       	push	r28
    97a2:	df 93       	push	r29
    97a4:	cd b7       	in	r28, 0x3d	; 61
    97a6:	de b7       	in	r29, 0x3e	; 62
    97a8:	26 97       	sbiw	r28, 0x06	; 6
    97aa:	cd bf       	out	0x3d, r28	; 61
    97ac:	de bf       	out	0x3e, r29	; 62
    97ae:	8a 83       	std	Y+2, r24	; 0x02
    97b0:	6b 83       	std	Y+3, r22	; 0x03
    97b2:	4c 83       	std	Y+4, r20	; 0x04
    97b4:	5d 83       	std	Y+5, r21	; 0x05
    97b6:	2e 83       	std	Y+6, r18	; 0x06
	uint8_t retVal = (uint8_t) -1;
    97b8:	8f ef       	ldi	r24, 0xFF	; 255
    97ba:	89 83       	std	Y+1, r24	; 0x01
	
	/* Send the client address for write */
	TWI1.MADDR = slaveAddr;
    97bc:	80 e2       	ldi	r24, 0x20	; 32
    97be:	99 e0       	ldi	r25, 0x09	; 9
    97c0:	2a 81       	ldd	r18, Y+2	; 0x02
    97c2:	fc 01       	movw	r30, r24
    97c4:	27 83       	std	Z+7, r18	; 0x07
	if(i2c_1_WaitW() != I2C_ACKED)
    97c6:	0e 94 e3 4a 	call	0x95c6	; 0x95c6 <_ZL11i2c_1_WaitWv>
    97ca:	98 2f       	mov	r25, r24
    97cc:	81 e0       	ldi	r24, 0x01	; 1
    97ce:	91 30       	cpi	r25, 0x01	; 1
    97d0:	09 f4       	brne	.+2      	; 0x97d4 <I2C_1_GetData+0x34>
    97d2:	80 e0       	ldi	r24, 0x00	; 0
    97d4:	88 23       	and	r24, r24
    97d6:	11 f0       	breq	.+4      	; 0x97dc <I2C_1_GetData+0x3c>
	{
		return retVal;
    97d8:	89 81       	ldd	r24, Y+1	; 0x01
    97da:	5a c0       	rjmp	.+180    	; 0x9890 <I2C_1_GetData+0xf0>
	}
	
	/* Send the register address */
	TWI1.MDATA = regAddr;	
    97dc:	80 e2       	ldi	r24, 0x20	; 32
    97de:	99 e0       	ldi	r25, 0x09	; 9
    97e0:	2b 81       	ldd	r18, Y+3	; 0x03
    97e2:	fc 01       	movw	r30, r24
    97e4:	20 87       	std	Z+8, r18	; 0x08
	if(i2c_1_WaitW() != I2C_ACKED)
    97e6:	0e 94 e3 4a 	call	0x95c6	; 0x95c6 <_ZL11i2c_1_WaitWv>
    97ea:	98 2f       	mov	r25, r24
    97ec:	81 e0       	ldi	r24, 0x01	; 1
    97ee:	91 30       	cpi	r25, 0x01	; 1
    97f0:	09 f4       	brne	.+2      	; 0x97f4 <I2C_1_GetData+0x54>
    97f2:	80 e0       	ldi	r24, 0x00	; 0
    97f4:	88 23       	and	r24, r24
    97f6:	11 f0       	breq	.+4      	; 0x97fc <I2C_1_GetData+0x5c>
	{
		return retVal;
    97f8:	89 81       	ldd	r24, Y+1	; 0x01
    97fa:	4a c0       	rjmp	.+148    	; 0x9890 <I2C_1_GetData+0xf0>
	}
	
	/* Send the client address for read */
	TWI1.MADDR = slaveAddr | 0x01;
    97fc:	80 e2       	ldi	r24, 0x20	; 32
    97fe:	99 e0       	ldi	r25, 0x09	; 9
    9800:	2a 81       	ldd	r18, Y+2	; 0x02
    9802:	21 60       	ori	r18, 0x01	; 1
    9804:	fc 01       	movw	r30, r24
    9806:	27 83       	std	Z+7, r18	; 0x07
	if(i2c_1_WaitW() != I2C_ACKED)
    9808:	0e 94 e3 4a 	call	0x95c6	; 0x95c6 <_ZL11i2c_1_WaitWv>
    980c:	98 2f       	mov	r25, r24
    980e:	81 e0       	ldi	r24, 0x01	; 1
    9810:	91 30       	cpi	r25, 0x01	; 1
    9812:	09 f4       	brne	.+2      	; 0x9816 <I2C_1_GetData+0x76>
    9814:	80 e0       	ldi	r24, 0x00	; 0
    9816:	88 23       	and	r24, r24
    9818:	11 f0       	breq	.+4      	; 0x981e <I2C_1_GetData+0x7e>
	{
		return retVal;	
    981a:	89 81       	ldd	r24, Y+1	; 0x01
    981c:	39 c0       	rjmp	.+114    	; 0x9890 <I2C_1_GetData+0xf0>
	}
	
	retVal = 0;
    981e:	19 82       	std	Y+1, r1	; 0x01
	if((len != 0) && (pData !=null ))
    9820:	8e 81       	ldd	r24, Y+6	; 0x06
    9822:	88 23       	and	r24, r24
    9824:	a1 f1       	breq	.+104    	; 0x988e <I2C_1_GetData+0xee>
    9826:	8c 81       	ldd	r24, Y+4	; 0x04
    9828:	9d 81       	ldd	r25, Y+5	; 0x05
    982a:	89 2b       	or	r24, r25
    982c:	81 f1       	breq	.+96     	; 0x988e <I2C_1_GetData+0xee>
	{
		while(len--)
    982e:	8e 81       	ldd	r24, Y+6	; 0x06
    9830:	9f ef       	ldi	r25, 0xFF	; 255
    9832:	98 0f       	add	r25, r24
    9834:	9e 83       	std	Y+6, r25	; 0x06
    9836:	91 e0       	ldi	r25, 0x01	; 1
    9838:	88 23       	and	r24, r24
    983a:	09 f4       	brne	.+2      	; 0x983e <I2C_1_GetData+0x9e>
    983c:	90 e0       	ldi	r25, 0x00	; 0
    983e:	99 23       	and	r25, r25
    9840:	31 f1       	breq	.+76     	; 0x988e <I2C_1_GetData+0xee>
		{
			if(I2C_1_WaitR() == I2C_READY)
    9842:	0e 94 26 4b 	call	0x964c	; 0x964c <_ZL11I2C_1_WaitRv>
    9846:	98 2f       	mov	r25, r24
    9848:	81 e0       	ldi	r24, 0x01	; 1
    984a:	93 30       	cpi	r25, 0x03	; 3
    984c:	09 f0       	breq	.+2      	; 0x9850 <I2C_1_GetData+0xb0>
    984e:	80 e0       	ldi	r24, 0x00	; 0
    9850:	88 23       	and	r24, r24
    9852:	e1 f0       	breq	.+56     	; 0x988c <I2C_1_GetData+0xec>
			{
				*pData = TWI1.MDATA;
    9854:	80 e2       	ldi	r24, 0x20	; 32
    9856:	99 e0       	ldi	r25, 0x09	; 9
    9858:	fc 01       	movw	r30, r24
    985a:	20 85       	ldd	r18, Z+8	; 0x08
    985c:	8c 81       	ldd	r24, Y+4	; 0x04
    985e:	9d 81       	ldd	r25, Y+5	; 0x05
    9860:	fc 01       	movw	r30, r24
    9862:	20 83       	st	Z, r18
				TWI1.MCTRLB = (len == 0)? TWI_ACKACT_bm | TWI_MCMD_STOP_gc : TWI_MCMD_RECVTRANS_gc;
    9864:	80 e2       	ldi	r24, 0x20	; 32
    9866:	99 e0       	ldi	r25, 0x09	; 9
    9868:	2e 81       	ldd	r18, Y+6	; 0x06
    986a:	22 23       	and	r18, r18
    986c:	11 f4       	brne	.+4      	; 0x9872 <I2C_1_GetData+0xd2>
    986e:	27 e0       	ldi	r18, 0x07	; 7
    9870:	01 c0       	rjmp	.+2      	; 0x9874 <I2C_1_GetData+0xd4>
    9872:	22 e0       	ldi	r18, 0x02	; 2
    9874:	fc 01       	movw	r30, r24
    9876:	24 83       	std	Z+4, r18	; 0x04
				retVal++;
    9878:	89 81       	ldd	r24, Y+1	; 0x01
    987a:	8f 5f       	subi	r24, 0xFF	; 255
    987c:	89 83       	std	Y+1, r24	; 0x01
				pData++;
    987e:	8c 81       	ldd	r24, Y+4	; 0x04
    9880:	9d 81       	ldd	r25, Y+5	; 0x05
    9882:	01 96       	adiw	r24, 0x01	; 1
    9884:	8c 83       	std	Y+4, r24	; 0x04
    9886:	9d 83       	std	Y+5, r25	; 0x05
				continue;
    9888:	00 00       	nop
	}
	
	retVal = 0;
	if((len != 0) && (pData !=null ))
	{
		while(len--)
    988a:	d1 cf       	rjmp	.-94     	; 0x982e <I2C_1_GetData+0x8e>
				retVal++;
				pData++;
				continue;
			}
			else
			break;
    988c:	00 00       	nop
		}
	}
	
	return retVal;
    988e:	89 81       	ldd	r24, Y+1	; 0x01
}
    9890:	26 96       	adiw	r28, 0x06	; 6
    9892:	cd bf       	out	0x3d, r28	; 61
    9894:	de bf       	out	0x3e, r29	; 62
    9896:	df 91       	pop	r29
    9898:	cf 91       	pop	r28
    989a:	08 95       	ret

0000989c <I2C_1_EndSession>:

void I2C_1_EndSession(void)
{
    989c:	cf 93       	push	r28
    989e:	df 93       	push	r29
    98a0:	cd b7       	in	r28, 0x3d	; 61
    98a2:	de b7       	in	r29, 0x3e	; 62
	TWI1.MCTRLB = TWI_MCMD_STOP_gc;
    98a4:	80 e2       	ldi	r24, 0x20	; 32
    98a6:	99 e0       	ldi	r25, 0x09	; 9
    98a8:	23 e0       	ldi	r18, 0x03	; 3
    98aa:	fc 01       	movw	r30, r24
    98ac:	24 83       	std	Z+4, r18	; 0x04
}
    98ae:	00 00       	nop
    98b0:	df 91       	pop	r29
    98b2:	cf 91       	pop	r28
    98b4:	08 95       	ret

000098b6 <PORTC_set_pin_level>:
	}
	else
	{
		LED_set_GREEN_level(OFF);
	}
}
    98b6:	cf 93       	push	r28
    98b8:	df 93       	push	r29
    98ba:	00 d0       	rcall	.+0      	; 0x98bc <PORTC_set_pin_level+0x6>
    98bc:	cd b7       	in	r28, 0x3d	; 61
    98be:	de b7       	in	r29, 0x3e	; 62
    98c0:	89 83       	std	Y+1, r24	; 0x01
    98c2:	6a 83       	std	Y+2, r22	; 0x02
    98c4:	8a 81       	ldd	r24, Y+2	; 0x02
    98c6:	88 23       	and	r24, r24
    98c8:	a9 f0       	breq	.+42     	; 0x98f4 <PORTC_set_pin_level+0x3e>
    98ca:	88 e0       	ldi	r24, 0x08	; 8
    98cc:	90 e0       	ldi	r25, 0x00	; 0
    98ce:	28 e0       	ldi	r18, 0x08	; 8
    98d0:	30 e0       	ldi	r19, 0x00	; 0
    98d2:	f9 01       	movw	r30, r18
    98d4:	21 81       	ldd	r18, Z+1	; 0x01
    98d6:	62 2f       	mov	r22, r18
    98d8:	29 81       	ldd	r18, Y+1	; 0x01
    98da:	42 2f       	mov	r20, r18
    98dc:	50 e0       	ldi	r21, 0x00	; 0
    98de:	21 e0       	ldi	r18, 0x01	; 1
    98e0:	30 e0       	ldi	r19, 0x00	; 0
    98e2:	02 c0       	rjmp	.+4      	; 0x98e8 <PORTC_set_pin_level+0x32>
    98e4:	22 0f       	add	r18, r18
    98e6:	33 1f       	adc	r19, r19
    98e8:	4a 95       	dec	r20
    98ea:	e2 f7       	brpl	.-8      	; 0x98e4 <PORTC_set_pin_level+0x2e>
    98ec:	26 2b       	or	r18, r22
    98ee:	fc 01       	movw	r30, r24
    98f0:	21 83       	std	Z+1, r18	; 0x01
    98f2:	15 c0       	rjmp	.+42     	; 0x991e <PORTC_set_pin_level+0x68>
    98f4:	88 e0       	ldi	r24, 0x08	; 8
    98f6:	90 e0       	ldi	r25, 0x00	; 0
    98f8:	28 e0       	ldi	r18, 0x08	; 8
    98fa:	30 e0       	ldi	r19, 0x00	; 0
    98fc:	f9 01       	movw	r30, r18
    98fe:	21 81       	ldd	r18, Z+1	; 0x01
    9900:	62 2f       	mov	r22, r18
    9902:	29 81       	ldd	r18, Y+1	; 0x01
    9904:	42 2f       	mov	r20, r18
    9906:	50 e0       	ldi	r21, 0x00	; 0
    9908:	21 e0       	ldi	r18, 0x01	; 1
    990a:	30 e0       	ldi	r19, 0x00	; 0
    990c:	02 c0       	rjmp	.+4      	; 0x9912 <PORTC_set_pin_level+0x5c>
    990e:	22 0f       	add	r18, r18
    9910:	33 1f       	adc	r19, r19
    9912:	4a 95       	dec	r20
    9914:	e2 f7       	brpl	.-8      	; 0x990e <PORTC_set_pin_level+0x58>
    9916:	20 95       	com	r18
    9918:	26 23       	and	r18, r22
    991a:	fc 01       	movw	r30, r24
    991c:	21 83       	std	Z+1, r18	; 0x01
    991e:	00 00       	nop
    9920:	0f 90       	pop	r0
    9922:	0f 90       	pop	r0
    9924:	df 91       	pop	r29
    9926:	cf 91       	pop	r28
    9928:	08 95       	ret

0000992a <_ZL17LED_set_RED_levelb>:
    992a:	cf 93       	push	r28
    992c:	df 93       	push	r29
    992e:	1f 92       	push	r1
    9930:	cd b7       	in	r28, 0x3d	; 61
    9932:	de b7       	in	r29, 0x3e	; 62
    9934:	89 83       	std	Y+1, r24	; 0x01
    9936:	69 81       	ldd	r22, Y+1	; 0x01
    9938:	86 e0       	ldi	r24, 0x06	; 6
    993a:	0e 94 5b 4c 	call	0x98b6	; 0x98b6 <PORTC_set_pin_level>
    993e:	00 00       	nop
    9940:	0f 90       	pop	r0
    9942:	df 91       	pop	r29
    9944:	cf 91       	pop	r28
    9946:	08 95       	ret

00009948 <_ZL19LED_set_GREEN_levelb>:
    9948:	cf 93       	push	r28
    994a:	df 93       	push	r29
    994c:	1f 92       	push	r1
    994e:	cd b7       	in	r28, 0x3d	; 61
    9950:	de b7       	in	r29, 0x3e	; 62
    9952:	89 83       	std	Y+1, r24	; 0x01
    9954:	69 81       	ldd	r22, Y+1	; 0x01
    9956:	85 e0       	ldi	r24, 0x05	; 5
    9958:	0e 94 5b 4c 	call	0x98b6	; 0x98b6 <PORTC_set_pin_level>
    995c:	00 00       	nop
    995e:	0f 90       	pop	r0
    9960:	df 91       	pop	r29
    9962:	cf 91       	pop	r28
    9964:	08 95       	ret

00009966 <_ZN4ledsC1Ev>:
    9966:	cf 93       	push	r28
    9968:	df 93       	push	r29
    996a:	00 d0       	rcall	.+0      	; 0x996c <_ZN4ledsC1Ev+0x6>
    996c:	cd b7       	in	r28, 0x3d	; 61
    996e:	de b7       	in	r29, 0x3e	; 62
    9970:	89 83       	std	Y+1, r24	; 0x01
    9972:	9a 83       	std	Y+2, r25	; 0x02
    9974:	00 00       	nop
    9976:	0f 90       	pop	r0
    9978:	0f 90       	pop	r0
    997a:	df 91       	pop	r29
    997c:	cf 91       	pop	r28
    997e:	08 95       	ret

00009980 <_ZN4ledsD1Ev>:
    9980:	cf 93       	push	r28
    9982:	df 93       	push	r29
    9984:	00 d0       	rcall	.+0      	; 0x9986 <_ZN4ledsD1Ev+0x6>
    9986:	cd b7       	in	r28, 0x3d	; 61
    9988:	de b7       	in	r29, 0x3e	; 62
    998a:	89 83       	std	Y+1, r24	; 0x01
    998c:	9a 83       	std	Y+2, r25	; 0x02
    998e:	00 00       	nop
    9990:	0f 90       	pop	r0
    9992:	0f 90       	pop	r0
    9994:	df 91       	pop	r29
    9996:	cf 91       	pop	r28
    9998:	08 95       	ret

0000999a <__vector_41>:
    999a:	1f 92       	push	r1
    999c:	0f 92       	push	r0
    999e:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    99a2:	0f 92       	push	r0
    99a4:	11 24       	eor	r1, r1
    99a6:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    99aa:	0f 92       	push	r0
    99ac:	2f 93       	push	r18
    99ae:	3f 93       	push	r19
    99b0:	4f 93       	push	r20
    99b2:	5f 93       	push	r21
    99b4:	6f 93       	push	r22
    99b6:	7f 93       	push	r23
    99b8:	8f 93       	push	r24
    99ba:	9f 93       	push	r25
    99bc:	af 93       	push	r26
    99be:	bf 93       	push	r27
    99c0:	ef 93       	push	r30
    99c2:	ff 93       	push	r31
    99c4:	cf 93       	push	r28
    99c6:	df 93       	push	r29
    99c8:	1f 92       	push	r1
    99ca:	cd b7       	in	r28, 0x3d	; 61
    99cc:	de b7       	in	r29, 0x3e	; 62
    99ce:	80 e3       	ldi	r24, 0x30	; 48
    99d0:	9b e0       	ldi	r25, 0x0B	; 11
    99d2:	fc 01       	movw	r30, r24
    99d4:	86 81       	ldd	r24, Z+6	; 0x06
    99d6:	89 83       	std	Y+1, r24	; 0x01
    99d8:	89 81       	ldd	r24, Y+1	; 0x01
    99da:	88 2f       	mov	r24, r24
    99dc:	90 e0       	ldi	r25, 0x00	; 0
    99de:	81 70       	andi	r24, 0x01	; 1
    99e0:	99 27       	eor	r25, r25
    99e2:	89 2b       	or	r24, r25
    99e4:	09 f4       	brne	.+2      	; 0x99e8 <__vector_41+0x4e>
    99e6:	50 c1       	rjmp	.+672    	; 0x9c88 <__vector_41+0x2ee>
    99e8:	80 91 3f 40 	lds	r24, 0x403F	; 0x80403f <_ZL17led_timeout_count>
    99ec:	90 91 40 40 	lds	r25, 0x4040	; 0x804040 <_ZL17led_timeout_count+0x1>
    99f0:	a0 91 41 40 	lds	r26, 0x4041	; 0x804041 <_ZL17led_timeout_count+0x2>
    99f4:	b0 91 42 40 	lds	r27, 0x4042	; 0x804042 <_ZL17led_timeout_count+0x3>
    99f8:	21 e0       	ldi	r18, 0x01	; 1
    99fa:	89 2b       	or	r24, r25
    99fc:	8a 2b       	or	r24, r26
    99fe:	8b 2b       	or	r24, r27
    9a00:	09 f4       	brne	.+2      	; 0x9a04 <__vector_41+0x6a>
    9a02:	20 e0       	ldi	r18, 0x00	; 0
    9a04:	22 23       	and	r18, r18
    9a06:	49 f1       	breq	.+82     	; 0x9a5a <__vector_41+0xc0>
    9a08:	80 91 3f 40 	lds	r24, 0x403F	; 0x80403f <_ZL17led_timeout_count>
    9a0c:	90 91 40 40 	lds	r25, 0x4040	; 0x804040 <_ZL17led_timeout_count+0x1>
    9a10:	a0 91 41 40 	lds	r26, 0x4041	; 0x804041 <_ZL17led_timeout_count+0x2>
    9a14:	b0 91 42 40 	lds	r27, 0x4042	; 0x804042 <_ZL17led_timeout_count+0x3>
    9a18:	01 97       	sbiw	r24, 0x01	; 1
    9a1a:	a1 09       	sbc	r26, r1
    9a1c:	b1 09       	sbc	r27, r1
    9a1e:	80 93 3f 40 	sts	0x403F, r24	; 0x80403f <_ZL17led_timeout_count>
    9a22:	90 93 40 40 	sts	0x4040, r25	; 0x804040 <_ZL17led_timeout_count+0x1>
    9a26:	a0 93 41 40 	sts	0x4041, r26	; 0x804041 <_ZL17led_timeout_count+0x2>
    9a2a:	b0 93 42 40 	sts	0x4042, r27	; 0x804042 <_ZL17led_timeout_count+0x3>
    9a2e:	80 91 3f 40 	lds	r24, 0x403F	; 0x80403f <_ZL17led_timeout_count>
    9a32:	90 91 40 40 	lds	r25, 0x4040	; 0x804040 <_ZL17led_timeout_count+0x1>
    9a36:	a0 91 41 40 	lds	r26, 0x4041	; 0x804041 <_ZL17led_timeout_count+0x2>
    9a3a:	b0 91 42 40 	lds	r27, 0x4042	; 0x804042 <_ZL17led_timeout_count+0x3>
    9a3e:	21 e0       	ldi	r18, 0x01	; 1
    9a40:	89 2b       	or	r24, r25
    9a42:	8a 2b       	or	r24, r26
    9a44:	8b 2b       	or	r24, r27
    9a46:	09 f0       	breq	.+2      	; 0x9a4a <__vector_41+0xb0>
    9a48:	20 e0       	ldi	r18, 0x00	; 0
    9a4a:	22 23       	and	r18, r18
    9a4c:	31 f0       	breq	.+12     	; 0x9a5a <__vector_41+0xc0>
    9a4e:	80 e0       	ldi	r24, 0x00	; 0
    9a50:	0e 94 95 4c 	call	0x992a	; 0x992a <_ZL17LED_set_RED_levelb>
    9a54:	80 e0       	ldi	r24, 0x00	; 0
    9a56:	0e 94 a4 4c 	call	0x9948	; 0x9948 <_ZL19LED_set_GREEN_levelb>
    9a5a:	90 91 7d 45 	lds	r25, 0x457D	; 0x80457d <_ZL19timer_blink_inhibit>
    9a5e:	81 e0       	ldi	r24, 0x01	; 1
    9a60:	89 27       	eor	r24, r25
    9a62:	88 23       	and	r24, r24
    9a64:	09 f4       	brne	.+2      	; 0x9a68 <__vector_41+0xce>
    9a66:	10 c1       	rjmp	.+544    	; 0x9c88 <__vector_41+0x2ee>
    9a68:	80 91 3f 40 	lds	r24, 0x403F	; 0x80403f <_ZL17led_timeout_count>
    9a6c:	90 91 40 40 	lds	r25, 0x4040	; 0x804040 <_ZL17led_timeout_count+0x1>
    9a70:	a0 91 41 40 	lds	r26, 0x4041	; 0x804041 <_ZL17led_timeout_count+0x2>
    9a74:	b0 91 42 40 	lds	r27, 0x4042	; 0x804042 <_ZL17led_timeout_count+0x3>
    9a78:	21 e0       	ldi	r18, 0x01	; 1
    9a7a:	89 2b       	or	r24, r25
    9a7c:	8a 2b       	or	r24, r26
    9a7e:	8b 2b       	or	r24, r27
    9a80:	09 f4       	brne	.+2      	; 0x9a84 <__vector_41+0xea>
    9a82:	20 e0       	ldi	r18, 0x00	; 0
    9a84:	22 23       	and	r18, r18
    9a86:	09 f4       	brne	.+2      	; 0x9a8a <__vector_41+0xf0>
    9a88:	f9 c0       	rjmp	.+498    	; 0x9c7c <__vector_41+0x2e2>
    9a8a:	80 91 89 45 	lds	r24, 0x4589	; 0x804589 <_ZL15red_blink_count>
    9a8e:	90 91 8a 45 	lds	r25, 0x458A	; 0x80458a <_ZL15red_blink_count+0x1>
    9a92:	21 e0       	ldi	r18, 0x01	; 1
    9a94:	89 2b       	or	r24, r25
    9a96:	09 f4       	brne	.+2      	; 0x9a9a <__vector_41+0x100>
    9a98:	20 e0       	ldi	r18, 0x00	; 0
    9a9a:	22 23       	and	r18, r18
    9a9c:	09 f4       	brne	.+2      	; 0x9aa0 <__vector_41+0x106>
    9a9e:	6a c0       	rjmp	.+212    	; 0x9b74 <__vector_41+0x1da>
    9aa0:	80 91 89 45 	lds	r24, 0x4589	; 0x804589 <_ZL15red_blink_count>
    9aa4:	90 91 8a 45 	lds	r25, 0x458A	; 0x80458a <_ZL15red_blink_count+0x1>
    9aa8:	21 e0       	ldi	r18, 0x01	; 1
    9aaa:	02 97       	sbiw	r24, 0x02	; 2
    9aac:	0c f4       	brge	.+2      	; 0x9ab0 <__vector_41+0x116>
    9aae:	20 e0       	ldi	r18, 0x00	; 0
    9ab0:	22 23       	and	r18, r18
    9ab2:	69 f0       	breq	.+26     	; 0x9ace <__vector_41+0x134>
    9ab4:	81 e0       	ldi	r24, 0x01	; 1
    9ab6:	0e 94 95 4c 	call	0x992a	; 0x992a <_ZL17LED_set_RED_levelb>
    9aba:	80 91 89 45 	lds	r24, 0x4589	; 0x804589 <_ZL15red_blink_count>
    9abe:	90 91 8a 45 	lds	r25, 0x458A	; 0x80458a <_ZL15red_blink_count+0x1>
    9ac2:	01 97       	sbiw	r24, 0x01	; 1
    9ac4:	80 93 89 45 	sts	0x4589, r24	; 0x804589 <_ZL15red_blink_count>
    9ac8:	90 93 8a 45 	sts	0x458A, r25	; 0x80458a <_ZL15red_blink_count+0x1>
    9acc:	17 c0       	rjmp	.+46     	; 0x9afc <__vector_41+0x162>
    9ace:	80 91 89 45 	lds	r24, 0x4589	; 0x804589 <_ZL15red_blink_count>
    9ad2:	90 91 8a 45 	lds	r25, 0x458A	; 0x80458a <_ZL15red_blink_count+0x1>
    9ad6:	21 e0       	ldi	r18, 0x01	; 1
    9ad8:	8f 3f       	cpi	r24, 0xFF	; 255
    9ada:	9f 4f       	sbci	r25, 0xFF	; 255
    9adc:	0c f0       	brlt	.+2      	; 0x9ae0 <__vector_41+0x146>
    9ade:	20 e0       	ldi	r18, 0x00	; 0
    9ae0:	22 23       	and	r18, r18
    9ae2:	61 f0       	breq	.+24     	; 0x9afc <__vector_41+0x162>
    9ae4:	80 e0       	ldi	r24, 0x00	; 0
    9ae6:	0e 94 95 4c 	call	0x992a	; 0x992a <_ZL17LED_set_RED_levelb>
    9aea:	80 91 89 45 	lds	r24, 0x4589	; 0x804589 <_ZL15red_blink_count>
    9aee:	90 91 8a 45 	lds	r25, 0x458A	; 0x80458a <_ZL15red_blink_count+0x1>
    9af2:	01 96       	adiw	r24, 0x01	; 1
    9af4:	80 93 89 45 	sts	0x4589, r24	; 0x804589 <_ZL15red_blink_count>
    9af8:	90 93 8a 45 	sts	0x458A, r25	; 0x80458a <_ZL15red_blink_count+0x1>
    9afc:	80 91 89 45 	lds	r24, 0x4589	; 0x804589 <_ZL15red_blink_count>
    9b00:	90 91 8a 45 	lds	r25, 0x458A	; 0x80458a <_ZL15red_blink_count+0x1>
    9b04:	21 e0       	ldi	r18, 0x01	; 1
    9b06:	01 97       	sbiw	r24, 0x01	; 1
    9b08:	09 f0       	breq	.+2      	; 0x9b0c <__vector_41+0x172>
    9b0a:	20 e0       	ldi	r18, 0x00	; 0
    9b0c:	22 23       	and	r18, r18
    9b0e:	f9 f0       	breq	.+62     	; 0x9b4e <__vector_41+0x1b4>
    9b10:	80 91 83 45 	lds	r24, 0x4583	; 0x804583 <_ZL20red_blink_off_period>
    9b14:	90 91 84 45 	lds	r25, 0x4584	; 0x804584 <_ZL20red_blink_off_period+0x1>
    9b18:	21 e0       	ldi	r18, 0x01	; 1
    9b1a:	89 2b       	or	r24, r25
    9b1c:	09 f4       	brne	.+2      	; 0x9b20 <__vector_41+0x186>
    9b1e:	20 e0       	ldi	r18, 0x00	; 0
    9b20:	22 23       	and	r18, r18
    9b22:	61 f0       	breq	.+24     	; 0x9b3c <__vector_41+0x1a2>
    9b24:	80 91 83 45 	lds	r24, 0x4583	; 0x804583 <_ZL20red_blink_off_period>
    9b28:	90 91 84 45 	lds	r25, 0x4584	; 0x804584 <_ZL20red_blink_off_period+0x1>
    9b2c:	91 95       	neg	r25
    9b2e:	81 95       	neg	r24
    9b30:	91 09       	sbc	r25, r1
    9b32:	80 93 89 45 	sts	0x4589, r24	; 0x804589 <_ZL15red_blink_count>
    9b36:	90 93 8a 45 	sts	0x458A, r25	; 0x80458a <_ZL15red_blink_count+0x1>
    9b3a:	23 c0       	rjmp	.+70     	; 0x9b82 <__vector_41+0x1e8>
    9b3c:	80 91 81 45 	lds	r24, 0x4581	; 0x804581 <_ZL19red_blink_on_period>
    9b40:	90 91 82 45 	lds	r25, 0x4582	; 0x804582 <_ZL19red_blink_on_period+0x1>
    9b44:	80 93 89 45 	sts	0x4589, r24	; 0x804589 <_ZL15red_blink_count>
    9b48:	90 93 8a 45 	sts	0x458A, r25	; 0x80458a <_ZL15red_blink_count+0x1>
    9b4c:	1a c0       	rjmp	.+52     	; 0x9b82 <__vector_41+0x1e8>
    9b4e:	80 91 89 45 	lds	r24, 0x4589	; 0x804589 <_ZL15red_blink_count>
    9b52:	90 91 8a 45 	lds	r25, 0x458A	; 0x80458a <_ZL15red_blink_count+0x1>
    9b56:	21 e0       	ldi	r18, 0x01	; 1
    9b58:	01 96       	adiw	r24, 0x01	; 1
    9b5a:	09 f0       	breq	.+2      	; 0x9b5e <__vector_41+0x1c4>
    9b5c:	20 e0       	ldi	r18, 0x00	; 0
    9b5e:	22 23       	and	r18, r18
    9b60:	81 f0       	breq	.+32     	; 0x9b82 <__vector_41+0x1e8>
    9b62:	80 91 81 45 	lds	r24, 0x4581	; 0x804581 <_ZL19red_blink_on_period>
    9b66:	90 91 82 45 	lds	r25, 0x4582	; 0x804582 <_ZL19red_blink_on_period+0x1>
    9b6a:	80 93 89 45 	sts	0x4589, r24	; 0x804589 <_ZL15red_blink_count>
    9b6e:	90 93 8a 45 	sts	0x458A, r25	; 0x80458a <_ZL15red_blink_count+0x1>
    9b72:	07 c0       	rjmp	.+14     	; 0x9b82 <__vector_41+0x1e8>
    9b74:	80 91 8d 45 	lds	r24, 0x458D	; 0x80458d <_ZL18red_led_configured>
    9b78:	88 23       	and	r24, r24
    9b7a:	19 f0       	breq	.+6      	; 0x9b82 <__vector_41+0x1e8>
    9b7c:	80 e0       	ldi	r24, 0x00	; 0
    9b7e:	0e 94 95 4c 	call	0x992a	; 0x992a <_ZL17LED_set_RED_levelb>
    9b82:	80 91 8b 45 	lds	r24, 0x458B	; 0x80458b <_ZL17green_blink_count>
    9b86:	90 91 8c 45 	lds	r25, 0x458C	; 0x80458c <_ZL17green_blink_count+0x1>
    9b8a:	21 e0       	ldi	r18, 0x01	; 1
    9b8c:	89 2b       	or	r24, r25
    9b8e:	09 f4       	brne	.+2      	; 0x9b92 <__vector_41+0x1f8>
    9b90:	20 e0       	ldi	r18, 0x00	; 0
    9b92:	22 23       	and	r18, r18
    9b94:	09 f4       	brne	.+2      	; 0x9b98 <__vector_41+0x1fe>
    9b96:	6a c0       	rjmp	.+212    	; 0x9c6c <__vector_41+0x2d2>
    9b98:	80 91 8b 45 	lds	r24, 0x458B	; 0x80458b <_ZL17green_blink_count>
    9b9c:	90 91 8c 45 	lds	r25, 0x458C	; 0x80458c <_ZL17green_blink_count+0x1>
    9ba0:	21 e0       	ldi	r18, 0x01	; 1
    9ba2:	02 97       	sbiw	r24, 0x02	; 2
    9ba4:	0c f4       	brge	.+2      	; 0x9ba8 <__vector_41+0x20e>
    9ba6:	20 e0       	ldi	r18, 0x00	; 0
    9ba8:	22 23       	and	r18, r18
    9baa:	69 f0       	breq	.+26     	; 0x9bc6 <__vector_41+0x22c>
    9bac:	81 e0       	ldi	r24, 0x01	; 1
    9bae:	0e 94 a4 4c 	call	0x9948	; 0x9948 <_ZL19LED_set_GREEN_levelb>
    9bb2:	80 91 8b 45 	lds	r24, 0x458B	; 0x80458b <_ZL17green_blink_count>
    9bb6:	90 91 8c 45 	lds	r25, 0x458C	; 0x80458c <_ZL17green_blink_count+0x1>
    9bba:	01 97       	sbiw	r24, 0x01	; 1
    9bbc:	80 93 8b 45 	sts	0x458B, r24	; 0x80458b <_ZL17green_blink_count>
    9bc0:	90 93 8c 45 	sts	0x458C, r25	; 0x80458c <_ZL17green_blink_count+0x1>
    9bc4:	17 c0       	rjmp	.+46     	; 0x9bf4 <__vector_41+0x25a>
    9bc6:	80 91 8b 45 	lds	r24, 0x458B	; 0x80458b <_ZL17green_blink_count>
    9bca:	90 91 8c 45 	lds	r25, 0x458C	; 0x80458c <_ZL17green_blink_count+0x1>
    9bce:	21 e0       	ldi	r18, 0x01	; 1
    9bd0:	8f 3f       	cpi	r24, 0xFF	; 255
    9bd2:	9f 4f       	sbci	r25, 0xFF	; 255
    9bd4:	0c f0       	brlt	.+2      	; 0x9bd8 <__vector_41+0x23e>
    9bd6:	20 e0       	ldi	r18, 0x00	; 0
    9bd8:	22 23       	and	r18, r18
    9bda:	61 f0       	breq	.+24     	; 0x9bf4 <__vector_41+0x25a>
    9bdc:	80 e0       	ldi	r24, 0x00	; 0
    9bde:	0e 94 a4 4c 	call	0x9948	; 0x9948 <_ZL19LED_set_GREEN_levelb>
    9be2:	80 91 8b 45 	lds	r24, 0x458B	; 0x80458b <_ZL17green_blink_count>
    9be6:	90 91 8c 45 	lds	r25, 0x458C	; 0x80458c <_ZL17green_blink_count+0x1>
    9bea:	01 96       	adiw	r24, 0x01	; 1
    9bec:	80 93 8b 45 	sts	0x458B, r24	; 0x80458b <_ZL17green_blink_count>
    9bf0:	90 93 8c 45 	sts	0x458C, r25	; 0x80458c <_ZL17green_blink_count+0x1>
    9bf4:	80 91 8b 45 	lds	r24, 0x458B	; 0x80458b <_ZL17green_blink_count>
    9bf8:	90 91 8c 45 	lds	r25, 0x458C	; 0x80458c <_ZL17green_blink_count+0x1>
    9bfc:	21 e0       	ldi	r18, 0x01	; 1
    9bfe:	01 97       	sbiw	r24, 0x01	; 1
    9c00:	09 f0       	breq	.+2      	; 0x9c04 <__vector_41+0x26a>
    9c02:	20 e0       	ldi	r18, 0x00	; 0
    9c04:	22 23       	and	r18, r18
    9c06:	f9 f0       	breq	.+62     	; 0x9c46 <__vector_41+0x2ac>
    9c08:	80 91 87 45 	lds	r24, 0x4587	; 0x804587 <_ZL22green_blink_off_period>
    9c0c:	90 91 88 45 	lds	r25, 0x4588	; 0x804588 <_ZL22green_blink_off_period+0x1>
    9c10:	21 e0       	ldi	r18, 0x01	; 1
    9c12:	89 2b       	or	r24, r25
    9c14:	09 f4       	brne	.+2      	; 0x9c18 <__vector_41+0x27e>
    9c16:	20 e0       	ldi	r18, 0x00	; 0
    9c18:	22 23       	and	r18, r18
    9c1a:	61 f0       	breq	.+24     	; 0x9c34 <__vector_41+0x29a>
    9c1c:	80 91 87 45 	lds	r24, 0x4587	; 0x804587 <_ZL22green_blink_off_period>
    9c20:	90 91 88 45 	lds	r25, 0x4588	; 0x804588 <_ZL22green_blink_off_period+0x1>
    9c24:	91 95       	neg	r25
    9c26:	81 95       	neg	r24
    9c28:	91 09       	sbc	r25, r1
    9c2a:	80 93 8b 45 	sts	0x458B, r24	; 0x80458b <_ZL17green_blink_count>
    9c2e:	90 93 8c 45 	sts	0x458C, r25	; 0x80458c <_ZL17green_blink_count+0x1>
    9c32:	2a c0       	rjmp	.+84     	; 0x9c88 <__vector_41+0x2ee>
    9c34:	80 91 85 45 	lds	r24, 0x4585	; 0x804585 <_ZL21green_blink_on_period>
    9c38:	90 91 86 45 	lds	r25, 0x4586	; 0x804586 <_ZL21green_blink_on_period+0x1>
    9c3c:	80 93 8b 45 	sts	0x458B, r24	; 0x80458b <_ZL17green_blink_count>
    9c40:	90 93 8c 45 	sts	0x458C, r25	; 0x80458c <_ZL17green_blink_count+0x1>
    9c44:	21 c0       	rjmp	.+66     	; 0x9c88 <__vector_41+0x2ee>
    9c46:	80 91 8b 45 	lds	r24, 0x458B	; 0x80458b <_ZL17green_blink_count>
    9c4a:	90 91 8c 45 	lds	r25, 0x458C	; 0x80458c <_ZL17green_blink_count+0x1>
    9c4e:	21 e0       	ldi	r18, 0x01	; 1
    9c50:	01 96       	adiw	r24, 0x01	; 1
    9c52:	09 f0       	breq	.+2      	; 0x9c56 <__vector_41+0x2bc>
    9c54:	20 e0       	ldi	r18, 0x00	; 0
    9c56:	22 23       	and	r18, r18
    9c58:	b9 f0       	breq	.+46     	; 0x9c88 <__vector_41+0x2ee>
    9c5a:	80 91 85 45 	lds	r24, 0x4585	; 0x804585 <_ZL21green_blink_on_period>
    9c5e:	90 91 86 45 	lds	r25, 0x4586	; 0x804586 <_ZL21green_blink_on_period+0x1>
    9c62:	80 93 8b 45 	sts	0x458B, r24	; 0x80458b <_ZL17green_blink_count>
    9c66:	90 93 8c 45 	sts	0x458C, r25	; 0x80458c <_ZL17green_blink_count+0x1>
    9c6a:	0e c0       	rjmp	.+28     	; 0x9c88 <__vector_41+0x2ee>
    9c6c:	80 91 8e 45 	lds	r24, 0x458E	; 0x80458e <_ZL20green_led_configured>
    9c70:	88 23       	and	r24, r24
    9c72:	51 f0       	breq	.+20     	; 0x9c88 <__vector_41+0x2ee>
    9c74:	80 e0       	ldi	r24, 0x00	; 0
    9c76:	0e 94 a4 4c 	call	0x9948	; 0x9948 <_ZL19LED_set_GREEN_levelb>
    9c7a:	06 c0       	rjmp	.+12     	; 0x9c88 <__vector_41+0x2ee>
    9c7c:	80 e0       	ldi	r24, 0x00	; 0
    9c7e:	0e 94 95 4c 	call	0x992a	; 0x992a <_ZL17LED_set_RED_levelb>
    9c82:	80 e0       	ldi	r24, 0x00	; 0
    9c84:	0e 94 a4 4c 	call	0x9948	; 0x9948 <_ZL19LED_set_GREEN_levelb>
    9c88:	80 e3       	ldi	r24, 0x30	; 48
    9c8a:	9b e0       	ldi	r25, 0x0B	; 11
    9c8c:	23 e0       	ldi	r18, 0x03	; 3
    9c8e:	fc 01       	movw	r30, r24
    9c90:	26 83       	std	Z+6, r18	; 0x06
    9c92:	00 00       	nop
    9c94:	0f 90       	pop	r0
    9c96:	df 91       	pop	r29
    9c98:	cf 91       	pop	r28
    9c9a:	ff 91       	pop	r31
    9c9c:	ef 91       	pop	r30
    9c9e:	bf 91       	pop	r27
    9ca0:	af 91       	pop	r26
    9ca2:	9f 91       	pop	r25
    9ca4:	8f 91       	pop	r24
    9ca6:	7f 91       	pop	r23
    9ca8:	6f 91       	pop	r22
    9caa:	5f 91       	pop	r21
    9cac:	4f 91       	pop	r20
    9cae:	3f 91       	pop	r19
    9cb0:	2f 91       	pop	r18
    9cb2:	0f 90       	pop	r0
    9cb4:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    9cb8:	0f 90       	pop	r0
    9cba:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    9cbe:	0f 90       	pop	r0
    9cc0:	1f 90       	pop	r1
    9cc2:	18 95       	reti

00009cc4 <_ZN4leds6activeEv>:
    9cc4:	cf 93       	push	r28
    9cc6:	df 93       	push	r29
    9cc8:	00 d0       	rcall	.+0      	; 0x9cca <_ZN4leds6activeEv+0x6>
    9cca:	cd b7       	in	r28, 0x3d	; 61
    9ccc:	de b7       	in	r29, 0x3e	; 62
    9cce:	89 83       	std	Y+1, r24	; 0x01
    9cd0:	9a 83       	std	Y+2, r25	; 0x02
    9cd2:	80 91 3f 40 	lds	r24, 0x403F	; 0x80403f <_ZL17led_timeout_count>
    9cd6:	90 91 40 40 	lds	r25, 0x4040	; 0x804040 <_ZL17led_timeout_count+0x1>
    9cda:	a0 91 41 40 	lds	r26, 0x4041	; 0x804041 <_ZL17led_timeout_count+0x2>
    9cde:	b0 91 42 40 	lds	r27, 0x4042	; 0x804042 <_ZL17led_timeout_count+0x3>
    9ce2:	89 2b       	or	r24, r25
    9ce4:	8a 2b       	or	r24, r26
    9ce6:	8b 2b       	or	r24, r27
    9ce8:	61 f0       	breq	.+24     	; 0x9d02 <_ZN4leds6activeEv+0x3e>
    9cea:	80 e3       	ldi	r24, 0x30	; 48
    9cec:	9b e0       	ldi	r25, 0x0B	; 11
    9cee:	fc 01       	movw	r30, r24
    9cf0:	85 81       	ldd	r24, Z+5	; 0x05
    9cf2:	88 2f       	mov	r24, r24
    9cf4:	90 e0       	ldi	r25, 0x00	; 0
    9cf6:	81 70       	andi	r24, 0x01	; 1
    9cf8:	99 27       	eor	r25, r25
    9cfa:	89 2b       	or	r24, r25
    9cfc:	11 f0       	breq	.+4      	; 0x9d02 <_ZN4leds6activeEv+0x3e>
    9cfe:	81 e0       	ldi	r24, 0x01	; 1
    9d00:	01 c0       	rjmp	.+2      	; 0x9d04 <_ZN4leds6activeEv+0x40>
    9d02:	80 e0       	ldi	r24, 0x00	; 0
    9d04:	0f 90       	pop	r0
    9d06:	0f 90       	pop	r0
    9d08:	df 91       	pop	r29
    9d0a:	cf 91       	pop	r28
    9d0c:	08 95       	ret

00009d0e <_ZN4leds6setRedEb>:
    9d0e:	cf 93       	push	r28
    9d10:	df 93       	push	r29
    9d12:	00 d0       	rcall	.+0      	; 0x9d14 <_ZN4leds6setRedEb+0x6>
    9d14:	1f 92       	push	r1
    9d16:	cd b7       	in	r28, 0x3d	; 61
    9d18:	de b7       	in	r29, 0x3e	; 62
    9d1a:	89 83       	std	Y+1, r24	; 0x01
    9d1c:	9a 83       	std	Y+2, r25	; 0x02
    9d1e:	6b 83       	std	Y+3, r22	; 0x03
    9d20:	80 91 3f 40 	lds	r24, 0x403F	; 0x80403f <_ZL17led_timeout_count>
    9d24:	90 91 40 40 	lds	r25, 0x4040	; 0x804040 <_ZL17led_timeout_count+0x1>
    9d28:	a0 91 41 40 	lds	r26, 0x4041	; 0x804041 <_ZL17led_timeout_count+0x2>
    9d2c:	b0 91 42 40 	lds	r27, 0x4042	; 0x804042 <_ZL17led_timeout_count+0x3>
    9d30:	21 e0       	ldi	r18, 0x01	; 1
    9d32:	89 2b       	or	r24, r25
    9d34:	8a 2b       	or	r24, r26
    9d36:	8b 2b       	or	r24, r27
    9d38:	09 f0       	breq	.+2      	; 0x9d3c <_ZN4leds6setRedEb+0x2e>
    9d3a:	20 e0       	ldi	r18, 0x00	; 0
    9d3c:	22 23       	and	r18, r18
    9d3e:	59 f4       	brne	.+22     	; 0x9d56 <_ZN4leds6setRedEb+0x48>
    9d40:	8b 81       	ldd	r24, Y+3	; 0x03
    9d42:	88 23       	and	r24, r24
    9d44:	21 f0       	breq	.+8      	; 0x9d4e <_ZN4leds6setRedEb+0x40>
    9d46:	81 e0       	ldi	r24, 0x01	; 1
    9d48:	0e 94 95 4c 	call	0x992a	; 0x992a <_ZL17LED_set_RED_levelb>
    9d4c:	05 c0       	rjmp	.+10     	; 0x9d58 <_ZN4leds6setRedEb+0x4a>
    9d4e:	80 e0       	ldi	r24, 0x00	; 0
    9d50:	0e 94 95 4c 	call	0x992a	; 0x992a <_ZL17LED_set_RED_levelb>
    9d54:	01 c0       	rjmp	.+2      	; 0x9d58 <_ZN4leds6setRedEb+0x4a>
    9d56:	00 00       	nop
    9d58:	23 96       	adiw	r28, 0x03	; 3
    9d5a:	cd bf       	out	0x3d, r28	; 61
    9d5c:	de bf       	out	0x3e, r29	; 62
    9d5e:	df 91       	pop	r29
    9d60:	cf 91       	pop	r28
    9d62:	08 95       	ret

00009d64 <_ZN4leds5resetEv>:

/* Turns off LEDs, resets the text buffer, and disables LED character transmissions. Re-enables LED timer blink functionality. */
void leds::reset(void)
{
    9d64:	cf 93       	push	r28
    9d66:	df 93       	push	r29
    9d68:	00 d0       	rcall	.+0      	; 0x9d6a <_ZN4leds5resetEv+0x6>
    9d6a:	cd b7       	in	r28, 0x3d	; 61
    9d6c:	de b7       	in	r29, 0x3e	; 62
    9d6e:	89 83       	std	Y+1, r24	; 0x01
    9d70:	9a 83       	std	Y+2, r25	; 0x02
	blink(LEDS_OFF);
    9d72:	89 81       	ldd	r24, Y+1	; 0x01
    9d74:	9a 81       	ldd	r25, Y+2	; 0x02
    9d76:	60 e0       	ldi	r22, 0x00	; 0
    9d78:	0e 94 93 4f 	call	0x9f26	; 0x9f26 <_ZN4leds5blinkE7Blink_t>
	g_text_buff.reset();
    9d7c:	83 e4       	ldi	r24, 0x43	; 67
    9d7e:	95 e4       	ldi	r25, 0x45	; 69
    9d80:	0e 94 05 32 	call	0x640a	; 0x640a <_ZN18CircularStringBuff5resetEv>
	g_enable_manual_transmissions = false;
    9d84:	10 92 58 45 	sts	0x4558, r1	; 0x804558 <g_enable_manual_transmissions>
	timer_blink_inhibit = false; /* Enable timer LED control */
    9d88:	10 92 7d 45 	sts	0x457D, r1	; 0x80457d <_ZL19timer_blink_inhibit>
	led_timeout_count = LED_TIMEOUT_DELAY;
    9d8c:	80 e2       	ldi	r24, 0x20	; 32
    9d8e:	9f eb       	ldi	r25, 0xBF	; 191
    9d90:	a2 e0       	ldi	r26, 0x02	; 2
    9d92:	b0 e0       	ldi	r27, 0x00	; 0
    9d94:	80 93 3f 40 	sts	0x403F, r24	; 0x80403f <_ZL17led_timeout_count>
    9d98:	90 93 40 40 	sts	0x4040, r25	; 0x804040 <_ZL17led_timeout_count+0x1>
    9d9c:	a0 93 41 40 	sts	0x4041, r26	; 0x804041 <_ZL17led_timeout_count+0x2>
    9da0:	b0 93 42 40 	sts	0x4042, r27	; 0x804042 <_ZL17led_timeout_count+0x3>
}
    9da4:	00 00       	nop
    9da6:	0f 90       	pop	r0
    9da8:	0f 90       	pop	r0
    9daa:	df 91       	pop	r29
    9dac:	cf 91       	pop	r28
    9dae:	08 95       	ret

00009db0 <_ZN4leds4initEv>:

/* Disables LED timer while resetting settings for interrupt safety. */
void leds::init(void)
{
    9db0:	cf 93       	push	r28
    9db2:	df 93       	push	r29
    9db4:	00 d0       	rcall	.+0      	; 0x9db6 <_ZN4leds4initEv+0x6>
    9db6:	cd b7       	in	r28, 0x3d	; 61
    9db8:	de b7       	in	r29, 0x3e	; 62
    9dba:	89 83       	std	Y+1, r24	; 0x01
    9dbc:	9a 83       	std	Y+2, r25	; 0x02
	init(LEDS_OFF);
    9dbe:	89 81       	ldd	r24, Y+1	; 0x01
    9dc0:	9a 81       	ldd	r25, Y+2	; 0x02
    9dc2:	60 e0       	ldi	r22, 0x00	; 0
    9dc4:	0e 94 ea 4e 	call	0x9dd4	; 0x9dd4 <_ZN4leds4initE7Blink_t>
}
    9dc8:	00 00       	nop
    9dca:	0f 90       	pop	r0
    9dcc:	0f 90       	pop	r0
    9dce:	df 91       	pop	r29
    9dd0:	cf 91       	pop	r28
    9dd2:	08 95       	ret

00009dd4 <_ZN4leds4initE7Blink_t>:

void leds::init(Blink_t setBlink)
{
    9dd4:	cf 93       	push	r28
    9dd6:	df 93       	push	r29
    9dd8:	00 d0       	rcall	.+0      	; 0x9dda <_ZN4leds4initE7Blink_t+0x6>
    9dda:	1f 92       	push	r1
    9ddc:	cd b7       	in	r28, 0x3d	; 61
    9dde:	de b7       	in	r29, 0x3e	; 62
    9de0:	89 83       	std	Y+1, r24	; 0x01
    9de2:	9a 83       	std	Y+2, r25	; 0x02
    9de4:	6b 83       	std	Y+3, r22	; 0x03
	TCB1.INTCTRL &= ~TCB_CAPT_bm; /* Disable timer interrupt */
    9de6:	80 e1       	ldi	r24, 0x10	; 16
    9de8:	9b e0       	ldi	r25, 0x0B	; 11
    9dea:	20 e1       	ldi	r18, 0x10	; 16
    9dec:	3b e0       	ldi	r19, 0x0B	; 11
    9dee:	f9 01       	movw	r30, r18
    9df0:	25 81       	ldd	r18, Z+5	; 0x05
    9df2:	2e 7f       	andi	r18, 0xFE	; 254
    9df4:	fc 01       	movw	r30, r24
    9df6:	25 83       	std	Z+5, r18	; 0x05
	reset();
    9df8:	89 81       	ldd	r24, Y+1	; 0x01
    9dfa:	9a 81       	ldd	r25, Y+2	; 0x02
    9dfc:	0e 94 b2 4e 	call	0x9d64	; 0x9d64 <_ZN4leds5resetEv>
	TCB1.INTCTRL |= TCB_CAPT_bm;   /* Capture or Timeout: enabled */
    9e00:	80 e1       	ldi	r24, 0x10	; 16
    9e02:	9b e0       	ldi	r25, 0x0B	; 11
    9e04:	20 e1       	ldi	r18, 0x10	; 16
    9e06:	3b e0       	ldi	r19, 0x0B	; 11
    9e08:	f9 01       	movw	r30, r18
    9e0a:	25 81       	ldd	r18, Z+5	; 0x05
    9e0c:	21 60       	ori	r18, 0x01	; 1
    9e0e:	fc 01       	movw	r30, r24
    9e10:	25 83       	std	Z+5, r18	; 0x05
	if(setBlink != LEDS_OFF) blink(setBlink, true);
    9e12:	8b 81       	ldd	r24, Y+3	; 0x03
    9e14:	88 23       	and	r24, r24
    9e16:	31 f0       	breq	.+12     	; 0x9e24 <_ZN4leds4initE7Blink_t+0x50>
    9e18:	89 81       	ldd	r24, Y+1	; 0x01
    9e1a:	9a 81       	ldd	r25, Y+2	; 0x02
    9e1c:	41 e0       	ldi	r20, 0x01	; 1
    9e1e:	6b 81       	ldd	r22, Y+3	; 0x03
    9e20:	0e 94 a9 4f 	call	0x9f52	; 0x9f52 <_ZN4leds5blinkE7Blink_tb>
}
    9e24:	00 00       	nop
    9e26:	23 96       	adiw	r28, 0x03	; 3
    9e28:	cd bf       	out	0x3d, r28	; 61
    9e2a:	de bf       	out	0x3e, r29	; 62
    9e2c:	df 91       	pop	r29
    9e2e:	cf 91       	pop	r28
    9e30:	08 95       	ret

00009e32 <_ZN4leds8sendCodeEPc>:

void leds::sendCode(char* str)
{
    9e32:	cf 93       	push	r28
    9e34:	df 93       	push	r29
    9e36:	cd b7       	in	r28, 0x3d	; 61
    9e38:	de b7       	in	r29, 0x3e	; 62
    9e3a:	2a 97       	sbiw	r28, 0x0a	; 10
    9e3c:	cd bf       	out	0x3d, r28	; 61
    9e3e:	de bf       	out	0x3e, r29	; 62
    9e40:	8f 83       	std	Y+7, r24	; 0x07
    9e42:	98 87       	std	Y+8, r25	; 0x08
    9e44:	69 87       	std	Y+9, r22	; 0x09
    9e46:	7a 87       	std	Y+10, r23	; 0x0a
	if(!led_timeout_count) return;
    9e48:	80 91 3f 40 	lds	r24, 0x403F	; 0x80403f <_ZL17led_timeout_count>
    9e4c:	90 91 40 40 	lds	r25, 0x4040	; 0x804040 <_ZL17led_timeout_count+0x1>
    9e50:	a0 91 41 40 	lds	r26, 0x4041	; 0x804041 <_ZL17led_timeout_count+0x2>
    9e54:	b0 91 42 40 	lds	r27, 0x4042	; 0x804042 <_ZL17led_timeout_count+0x3>
    9e58:	21 e0       	ldi	r18, 0x01	; 1
    9e5a:	89 2b       	or	r24, r25
    9e5c:	8a 2b       	or	r24, r26
    9e5e:	8b 2b       	or	r24, r27
    9e60:	09 f0       	breq	.+2      	; 0x9e64 <_ZN4leds8sendCodeEPc+0x32>
    9e62:	20 e0       	ldi	r18, 0x00	; 0
    9e64:	22 23       	and	r18, r18
    9e66:	09 f0       	breq	.+2      	; 0x9e6a <_ZN4leds8sendCodeEPc+0x38>
    9e68:	55 c0       	rjmp	.+170    	; 0x9f14 <_ZN4leds8sendCodeEPc+0xe2>
	
	if(!str || !strlen(str))
    9e6a:	89 85       	ldd	r24, Y+9	; 0x09
    9e6c:	9a 85       	ldd	r25, Y+10	; 0x0a
    9e6e:	89 2b       	or	r24, r25
    9e70:	09 f4       	brne	.+2      	; 0x9e74 <_ZN4leds8sendCodeEPc+0x42>
    9e72:	52 c0       	rjmp	.+164    	; 0x9f18 <_ZN4leds8sendCodeEPc+0xe6>
    9e74:	89 85       	ldd	r24, Y+9	; 0x09
    9e76:	9a 85       	ldd	r25, Y+10	; 0x0a
    9e78:	fc 01       	movw	r30, r24
    9e7a:	80 81       	ld	r24, Z
    9e7c:	88 23       	and	r24, r24
    9e7e:	09 f4       	brne	.+2      	; 0x9e82 <_ZN4leds8sendCodeEPc+0x50>
    9e80:	4b c0       	rjmp	.+150    	; 0x9f18 <_ZN4leds8sendCodeEPc+0xe6>
	{
		return;
	}

	int lenstr = strlen(str);					
    9e82:	89 85       	ldd	r24, Y+9	; 0x09
    9e84:	9a 85       	ldd	r25, Y+10	; 0x0a
    9e86:	0e 94 d5 76 	call	0xedaa	; 0xedaa <strlen>
    9e8a:	8b 83       	std	Y+3, r24	; 0x03
    9e8c:	9c 83       	std	Y+4, r25	; 0x04
	int i = 0;
    9e8e:	19 82       	std	Y+1, r1	; 0x01
    9e90:	1a 82       	std	Y+2, r1	; 0x02

	bool holdMan = g_enable_manual_transmissions;
    9e92:	80 91 58 45 	lds	r24, 0x4558	; 0x804558 <g_enable_manual_transmissions>
    9e96:	8d 83       	std	Y+5, r24	; 0x05
	bool holdEnum = g_enable_LED_enunciations;
    9e98:	80 91 1f 40 	lds	r24, 0x401F	; 0x80401f <g_enable_LED_enunciations>
    9e9c:	8e 83       	std	Y+6, r24	; 0x06
	g_enable_manual_transmissions = false; /* simple thread collision avoidance */
    9e9e:	10 92 58 45 	sts	0x4558, r1	; 0x804558 <g_enable_manual_transmissions>
	g_enable_LED_enunciations = false; /* simple thread collision avoidance */
    9ea2:	10 92 1f 40 	sts	0x401F, r1	; 0x80401f <g_enable_LED_enunciations>
	
	while(!g_text_buff.full() && i<lenstr && i<TEXT_BUFF_SIZE)
    9ea6:	83 e4       	ldi	r24, 0x43	; 67
    9ea8:	95 e4       	ldi	r25, 0x45	; 69
    9eaa:	0e 94 44 32 	call	0x6488	; 0x6488 <_ZNK18CircularStringBuff4fullEv>
    9eae:	98 2f       	mov	r25, r24
    9eb0:	81 e0       	ldi	r24, 0x01	; 1
    9eb2:	89 27       	eor	r24, r25
    9eb4:	88 23       	and	r24, r24
    9eb6:	69 f0       	breq	.+26     	; 0x9ed2 <_ZN4leds8sendCodeEPc+0xa0>
    9eb8:	29 81       	ldd	r18, Y+1	; 0x01
    9eba:	3a 81       	ldd	r19, Y+2	; 0x02
    9ebc:	8b 81       	ldd	r24, Y+3	; 0x03
    9ebe:	9c 81       	ldd	r25, Y+4	; 0x04
    9ec0:	28 17       	cp	r18, r24
    9ec2:	39 07       	cpc	r19, r25
    9ec4:	34 f4       	brge	.+12     	; 0x9ed2 <_ZN4leds8sendCodeEPc+0xa0>
    9ec6:	89 81       	ldd	r24, Y+1	; 0x01
    9ec8:	9a 81       	ldd	r25, Y+2	; 0x02
    9eca:	c2 97       	sbiw	r24, 0x32	; 50
    9ecc:	14 f4       	brge	.+4      	; 0x9ed2 <_ZN4leds8sendCodeEPc+0xa0>
    9ece:	81 e0       	ldi	r24, 0x01	; 1
    9ed0:	01 c0       	rjmp	.+2      	; 0x9ed4 <_ZN4leds8sendCodeEPc+0xa2>
    9ed2:	80 e0       	ldi	r24, 0x00	; 0
    9ed4:	88 23       	and	r24, r24
    9ed6:	a1 f0       	breq	.+40     	; 0x9f00 <_ZN4leds8sendCodeEPc+0xce>
	{
		g_text_buff.put(str[i++]);
    9ed8:	89 81       	ldd	r24, Y+1	; 0x01
    9eda:	9a 81       	ldd	r25, Y+2	; 0x02
    9edc:	9c 01       	movw	r18, r24
    9ede:	2f 5f       	subi	r18, 0xFF	; 255
    9ee0:	3f 4f       	sbci	r19, 0xFF	; 255
    9ee2:	29 83       	std	Y+1, r18	; 0x01
    9ee4:	3a 83       	std	Y+2, r19	; 0x02
    9ee6:	9c 01       	movw	r18, r24
    9ee8:	89 85       	ldd	r24, Y+9	; 0x09
    9eea:	9a 85       	ldd	r25, Y+10	; 0x0a
    9eec:	82 0f       	add	r24, r18
    9eee:	93 1f       	adc	r25, r19
    9ef0:	fc 01       	movw	r30, r24
    9ef2:	80 81       	ld	r24, Z
    9ef4:	68 2f       	mov	r22, r24
    9ef6:	83 e4       	ldi	r24, 0x43	; 67
    9ef8:	95 e4       	ldi	r25, 0x45	; 69
    9efa:	0e 94 54 32 	call	0x64a8	; 0x64a8 <_ZN18CircularStringBuff3putEc>
	bool holdMan = g_enable_manual_transmissions;
	bool holdEnum = g_enable_LED_enunciations;
	g_enable_manual_transmissions = false; /* simple thread collision avoidance */
	g_enable_LED_enunciations = false; /* simple thread collision avoidance */
	
	while(!g_text_buff.full() && i<lenstr && i<TEXT_BUFF_SIZE)
    9efe:	d3 cf       	rjmp	.-90     	; 0x9ea6 <_ZN4leds8sendCodeEPc+0x74>
	{
		g_text_buff.put(str[i++]);
	}
	
	timer_blink_inhibit = true; /* Prevent timer from controlling LED */
    9f00:	81 e0       	ldi	r24, 0x01	; 1
    9f02:	80 93 7d 45 	sts	0x457D, r24	; 0x80457d <_ZL19timer_blink_inhibit>
	g_enable_manual_transmissions = holdMan;
    9f06:	8d 81       	ldd	r24, Y+5	; 0x05
    9f08:	80 93 58 45 	sts	0x4558, r24	; 0x804558 <g_enable_manual_transmissions>
	g_enable_LED_enunciations = holdEnum;
    9f0c:	8e 81       	ldd	r24, Y+6	; 0x06
    9f0e:	80 93 1f 40 	sts	0x401F, r24	; 0x80401f <g_enable_LED_enunciations>
    9f12:	03 c0       	rjmp	.+6      	; 0x9f1a <_ZN4leds8sendCodeEPc+0xe8>
	if(setBlink != LEDS_OFF) blink(setBlink, true);
}

void leds::sendCode(char* str)
{
	if(!led_timeout_count) return;
    9f14:	00 00       	nop
    9f16:	01 c0       	rjmp	.+2      	; 0x9f1a <_ZN4leds8sendCodeEPc+0xe8>
	
	if(!str || !strlen(str))
	{
		return;
    9f18:	00 00       	nop
	}
	
	timer_blink_inhibit = true; /* Prevent timer from controlling LED */
	g_enable_manual_transmissions = holdMan;
	g_enable_LED_enunciations = holdEnum;
}
    9f1a:	2a 96       	adiw	r28, 0x0a	; 10
    9f1c:	cd bf       	out	0x3d, r28	; 61
    9f1e:	de bf       	out	0x3e, r29	; 62
    9f20:	df 91       	pop	r29
    9f22:	cf 91       	pop	r28
    9f24:	08 95       	ret

00009f26 <_ZN4leds5blinkE7Blink_t>:

void leds::blink(Blink_t blinkMode)
{
    9f26:	cf 93       	push	r28
    9f28:	df 93       	push	r29
    9f2a:	00 d0       	rcall	.+0      	; 0x9f2c <_ZN4leds5blinkE7Blink_t+0x6>
    9f2c:	1f 92       	push	r1
    9f2e:	cd b7       	in	r28, 0x3d	; 61
    9f30:	de b7       	in	r29, 0x3e	; 62
    9f32:	89 83       	std	Y+1, r24	; 0x01
    9f34:	9a 83       	std	Y+2, r25	; 0x02
    9f36:	6b 83       	std	Y+3, r22	; 0x03
	blink(blinkMode, false);
    9f38:	89 81       	ldd	r24, Y+1	; 0x01
    9f3a:	9a 81       	ldd	r25, Y+2	; 0x02
    9f3c:	40 e0       	ldi	r20, 0x00	; 0
    9f3e:	6b 81       	ldd	r22, Y+3	; 0x03
    9f40:	0e 94 a9 4f 	call	0x9f52	; 0x9f52 <_ZN4leds5blinkE7Blink_tb>
}
    9f44:	00 00       	nop
    9f46:	23 96       	adiw	r28, 0x03	; 3
    9f48:	cd bf       	out	0x3d, r28	; 61
    9f4a:	de bf       	out	0x3e, r29	; 62
    9f4c:	df 91       	pop	r29
    9f4e:	cf 91       	pop	r28
    9f50:	08 95       	ret

00009f52 <_ZN4leds5blinkE7Blink_tb>:

void leds::blink(Blink_t blinkMode, bool resetTimeout)
{
    9f52:	cf 93       	push	r28
    9f54:	df 93       	push	r29
    9f56:	00 d0       	rcall	.+0      	; 0x9f58 <_ZN4leds5blinkE7Blink_tb+0x6>
    9f58:	00 d0       	rcall	.+0      	; 0x9f5a <_ZN4leds5blinkE7Blink_tb+0x8>
    9f5a:	cd b7       	in	r28, 0x3d	; 61
    9f5c:	de b7       	in	r29, 0x3e	; 62
    9f5e:	89 83       	std	Y+1, r24	; 0x01
    9f60:	9a 83       	std	Y+2, r25	; 0x02
    9f62:	6b 83       	std	Y+3, r22	; 0x03
    9f64:	4c 83       	std	Y+4, r20	; 0x04
	if(resetTimeout)
    9f66:	8c 81       	ldd	r24, Y+4	; 0x04
    9f68:	88 23       	and	r24, r24
    9f6a:	61 f0       	breq	.+24     	; 0x9f84 <_ZN4leds5blinkE7Blink_tb+0x32>
	{
		led_timeout_count = LED_TIMEOUT_DELAY;
    9f6c:	80 e2       	ldi	r24, 0x20	; 32
    9f6e:	9f eb       	ldi	r25, 0xBF	; 191
    9f70:	a2 e0       	ldi	r26, 0x02	; 2
    9f72:	b0 e0       	ldi	r27, 0x00	; 0
    9f74:	80 93 3f 40 	sts	0x403F, r24	; 0x80403f <_ZL17led_timeout_count>
    9f78:	90 93 40 40 	sts	0x4040, r25	; 0x804040 <_ZL17led_timeout_count+0x1>
    9f7c:	a0 93 41 40 	sts	0x4041, r26	; 0x804041 <_ZL17led_timeout_count+0x2>
    9f80:	b0 93 42 40 	sts	0x4042, r27	; 0x804042 <_ZL17led_timeout_count+0x3>
	}
	
	if(!led_timeout_count && (blinkMode != LEDS_OFF)) return;
    9f84:	80 91 3f 40 	lds	r24, 0x403F	; 0x80403f <_ZL17led_timeout_count>
    9f88:	90 91 40 40 	lds	r25, 0x4040	; 0x804040 <_ZL17led_timeout_count+0x1>
    9f8c:	a0 91 41 40 	lds	r26, 0x4041	; 0x804041 <_ZL17led_timeout_count+0x2>
    9f90:	b0 91 42 40 	lds	r27, 0x4042	; 0x804042 <_ZL17led_timeout_count+0x3>
    9f94:	89 2b       	or	r24, r25
    9f96:	8a 2b       	or	r24, r26
    9f98:	8b 2b       	or	r24, r27
    9f9a:	29 f4       	brne	.+10     	; 0x9fa6 <_ZN4leds5blinkE7Blink_tb+0x54>
    9f9c:	8b 81       	ldd	r24, Y+3	; 0x03
    9f9e:	88 23       	and	r24, r24
    9fa0:	11 f0       	breq	.+4      	; 0x9fa6 <_ZN4leds5blinkE7Blink_tb+0x54>
    9fa2:	81 e0       	ldi	r24, 0x01	; 1
    9fa4:	01 c0       	rjmp	.+2      	; 0x9fa8 <_ZN4leds5blinkE7Blink_tb+0x56>
    9fa6:	80 e0       	ldi	r24, 0x00	; 0
    9fa8:	88 23       	and	r24, r24
    9faa:	09 f0       	breq	.+2      	; 0x9fae <_ZN4leds5blinkE7Blink_tb+0x5c>
    9fac:	8b c2       	rjmp	.+1302   	; 0xa4c4 <_ZN4leds5blinkE7Blink_tb+0x572>
	
	if(blinkMode != lastBlinkSetting)
    9fae:	90 91 7e 45 	lds	r25, 0x457E	; 0x80457e <_ZL16lastBlinkSetting>
    9fb2:	81 e0       	ldi	r24, 0x01	; 1
    9fb4:	2b 81       	ldd	r18, Y+3	; 0x03
    9fb6:	29 17       	cp	r18, r25
    9fb8:	09 f4       	brne	.+2      	; 0x9fbc <_ZN4leds5blinkE7Blink_tb+0x6a>
    9fba:	80 e0       	ldi	r24, 0x00	; 0
    9fbc:	88 23       	and	r24, r24
    9fbe:	09 f4       	brne	.+2      	; 0x9fc2 <_ZN4leds5blinkE7Blink_tb+0x70>
    9fc0:	7d c2       	rjmp	.+1274   	; 0xa4bc <_ZN4leds5blinkE7Blink_tb+0x56a>
	{
		TCB3.INTCTRL &= ~TCB_CAPT_bm;   /* Capture or Timeout: disabled */
    9fc2:	80 e3       	ldi	r24, 0x30	; 48
    9fc4:	9b e0       	ldi	r25, 0x0B	; 11
    9fc6:	20 e3       	ldi	r18, 0x30	; 48
    9fc8:	3b e0       	ldi	r19, 0x0B	; 11
    9fca:	f9 01       	movw	r30, r18
    9fcc:	25 81       	ldd	r18, Z+5	; 0x05
    9fce:	2e 7f       	andi	r18, 0xFE	; 254
    9fd0:	fc 01       	movw	r30, r24
    9fd2:	25 83       	std	Z+5, r18	; 0x05

		switch(blinkMode)
    9fd4:	8b 81       	ldd	r24, Y+3	; 0x03
    9fd6:	88 2f       	mov	r24, r24
    9fd8:	90 e0       	ldi	r25, 0x00	; 0
    9fda:	09 2e       	mov	r0, r25
    9fdc:	00 0c       	add	r0, r0
    9fde:	aa 0b       	sbc	r26, r26
    9fe0:	bb 0b       	sbc	r27, r27
    9fe2:	40 e0       	ldi	r20, 0x00	; 0
    9fe4:	50 e0       	ldi	r21, 0x00	; 0
    9fe6:	2c e0       	ldi	r18, 0x0C	; 12
    9fe8:	30 e0       	ldi	r19, 0x00	; 0
    9fea:	84 1b       	sub	r24, r20
    9fec:	95 0b       	sbc	r25, r21
    9fee:	28 17       	cp	r18, r24
    9ff0:	39 07       	cpc	r19, r25
    9ff2:	08 f4       	brcc	.+2      	; 0x9ff6 <_ZN4leds5blinkE7Blink_tb+0xa4>
    9ff4:	41 c2       	rjmp	.+1154   	; 0xa478 <_ZN4leds5blinkE7Blink_tb+0x526>
    9ff6:	86 56       	subi	r24, 0x66	; 102
    9ff8:	9e 4f       	sbci	r25, 0xFE	; 254
    9ffa:	fc 01       	movw	r30, r24
    9ffc:	0c 94 14 75 	jmp	0xea28	; 0xea28 <__tablejump2__>
		{
			case LEDS_OFF:
			{
				lastRedBlinkSetting = LEDS_OFF;
    a000:	10 92 7f 45 	sts	0x457F, r1	; 0x80457f <_ZL19lastRedBlinkSetting>
				lastGreenBlinkSetting = LEDS_OFF;
    a004:	10 92 80 45 	sts	0x4580, r1	; 0x804580 <_ZL21lastGreenBlinkSetting>
				red_blink_count = 0;
    a008:	10 92 89 45 	sts	0x4589, r1	; 0x804589 <_ZL15red_blink_count>
    a00c:	10 92 8a 45 	sts	0x458A, r1	; 0x80458a <_ZL15red_blink_count+0x1>
				green_blink_count = 0;
    a010:	10 92 8b 45 	sts	0x458B, r1	; 0x80458b <_ZL17green_blink_count>
    a014:	10 92 8c 45 	sts	0x458C, r1	; 0x80458c <_ZL17green_blink_count+0x1>
				LED_set_RED_level(OFF);
    a018:	80 e0       	ldi	r24, 0x00	; 0
    a01a:	0e 94 95 4c 	call	0x992a	; 0x992a <_ZL17LED_set_RED_levelb>
				LED_set_GREEN_level(OFF);
    a01e:	80 e0       	ldi	r24, 0x00	; 0
    a020:	0e 94 a4 4c 	call	0x9948	; 0x9948 <_ZL19LED_set_GREEN_levelb>
				red_led_configured = false;
    a024:	10 92 8d 45 	sts	0x458D, r1	; 0x80458d <_ZL18red_led_configured>
				green_led_configured = false;
    a028:	10 92 8e 45 	sts	0x458E, r1	; 0x80458e <_ZL20green_led_configured>
			}
			break;
    a02c:	3e c2       	rjmp	.+1148   	; 0xa4aa <_ZN4leds5blinkE7Blink_tb+0x558>
			
			case LEDS_RED_OFF:
			{
				if(lastRedBlinkSetting != LEDS_RED_OFF)
    a02e:	90 91 7f 45 	lds	r25, 0x457F	; 0x80457f <_ZL19lastRedBlinkSetting>
    a032:	81 e0       	ldi	r24, 0x01	; 1
    a034:	91 30       	cpi	r25, 0x01	; 1
    a036:	09 f4       	brne	.+2      	; 0xa03a <_ZN4leds5blinkE7Blink_tb+0xe8>
    a038:	80 e0       	ldi	r24, 0x00	; 0
    a03a:	88 23       	and	r24, r24
    a03c:	09 f4       	brne	.+2      	; 0xa040 <_ZN4leds5blinkE7Blink_tb+0xee>
    a03e:	1e c2       	rjmp	.+1084   	; 0xa47c <_ZN4leds5blinkE7Blink_tb+0x52a>
				{
					lastRedBlinkSetting = LEDS_RED_OFF;
    a040:	81 e0       	ldi	r24, 0x01	; 1
    a042:	80 93 7f 45 	sts	0x457F, r24	; 0x80457f <_ZL19lastRedBlinkSetting>
					LED_set_RED_level(OFF);
    a046:	80 e0       	ldi	r24, 0x00	; 0
    a048:	0e 94 95 4c 	call	0x992a	; 0x992a <_ZL17LED_set_RED_levelb>
					red_blink_count = 0;
    a04c:	10 92 89 45 	sts	0x4589, r1	; 0x804589 <_ZL15red_blink_count>
    a050:	10 92 8a 45 	sts	0x458A, r1	; 0x80458a <_ZL15red_blink_count+0x1>
					red_led_configured = false;
    a054:	10 92 8d 45 	sts	0x458D, r1	; 0x80458d <_ZL18red_led_configured>
				}
			}
			break;
    a058:	11 c2       	rjmp	.+1058   	; 0xa47c <_ZN4leds5blinkE7Blink_tb+0x52a>
			
			case LEDS_GREEN_OFF:
			{
				if(lastGreenBlinkSetting != LEDS_GREEN_OFF)
    a05a:	90 91 80 45 	lds	r25, 0x4580	; 0x804580 <_ZL21lastGreenBlinkSetting>
    a05e:	81 e0       	ldi	r24, 0x01	; 1
    a060:	92 30       	cpi	r25, 0x02	; 2
    a062:	09 f4       	brne	.+2      	; 0xa066 <_ZN4leds5blinkE7Blink_tb+0x114>
    a064:	80 e0       	ldi	r24, 0x00	; 0
    a066:	88 23       	and	r24, r24
    a068:	09 f4       	brne	.+2      	; 0xa06c <_ZN4leds5blinkE7Blink_tb+0x11a>
    a06a:	0a c2       	rjmp	.+1044   	; 0xa480 <_ZN4leds5blinkE7Blink_tb+0x52e>
				{
					lastGreenBlinkSetting = LEDS_GREEN_OFF;
    a06c:	82 e0       	ldi	r24, 0x02	; 2
    a06e:	80 93 80 45 	sts	0x4580, r24	; 0x804580 <_ZL21lastGreenBlinkSetting>
					LED_set_GREEN_level(OFF);
    a072:	80 e0       	ldi	r24, 0x00	; 0
    a074:	0e 94 a4 4c 	call	0x9948	; 0x9948 <_ZL19LED_set_GREEN_levelb>
					green_blink_count = 0;
    a078:	10 92 8b 45 	sts	0x458B, r1	; 0x80458b <_ZL17green_blink_count>
    a07c:	10 92 8c 45 	sts	0x458C, r1	; 0x80458c <_ZL17green_blink_count+0x1>
					green_led_configured = false;
    a080:	10 92 8e 45 	sts	0x458E, r1	; 0x80458e <_ZL20green_led_configured>
				}
			}
			break;
    a084:	fd c1       	rjmp	.+1018   	; 0xa480 <_ZN4leds5blinkE7Blink_tb+0x52e>
			
			case LEDS_RED_BLINK_FAST:
			{
				if(lastRedBlinkSetting != LEDS_RED_BLINK_FAST)
    a086:	90 91 7f 45 	lds	r25, 0x457F	; 0x80457f <_ZL19lastRedBlinkSetting>
    a08a:	81 e0       	ldi	r24, 0x01	; 1
    a08c:	93 30       	cpi	r25, 0x03	; 3
    a08e:	09 f4       	brne	.+2      	; 0xa092 <_ZN4leds5blinkE7Blink_tb+0x140>
    a090:	80 e0       	ldi	r24, 0x00	; 0
    a092:	88 23       	and	r24, r24
    a094:	09 f4       	brne	.+2      	; 0xa098 <_ZN4leds5blinkE7Blink_tb+0x146>
    a096:	f6 c1       	rjmp	.+1004   	; 0xa484 <_ZN4leds5blinkE7Blink_tb+0x532>
				{
					lastRedBlinkSetting = LEDS_RED_BLINK_FAST;
    a098:	83 e0       	ldi	r24, 0x03	; 3
    a09a:	80 93 7f 45 	sts	0x457F, r24	; 0x80457f <_ZL19lastRedBlinkSetting>
					red_blink_on_period = BRIEF_ON;
    a09e:	8f e0       	ldi	r24, 0x0F	; 15
    a0a0:	90 e0       	ldi	r25, 0x00	; 0
    a0a2:	80 93 81 45 	sts	0x4581, r24	; 0x804581 <_ZL19red_blink_on_period>
    a0a6:	90 93 82 45 	sts	0x4582, r25	; 0x804582 <_ZL19red_blink_on_period+0x1>
					red_blink_off_period = BRIEF_OFF;
    a0aa:	82 e3       	ldi	r24, 0x32	; 50
    a0ac:	90 e0       	ldi	r25, 0x00	; 0
    a0ae:	80 93 83 45 	sts	0x4583, r24	; 0x804583 <_ZL20red_blink_off_period>
    a0b2:	90 93 84 45 	sts	0x4584, r25	; 0x804584 <_ZL20red_blink_off_period+0x1>
					red_blink_count = red_blink_on_period;	
    a0b6:	80 91 81 45 	lds	r24, 0x4581	; 0x804581 <_ZL19red_blink_on_period>
    a0ba:	90 91 82 45 	lds	r25, 0x4582	; 0x804582 <_ZL19red_blink_on_period+0x1>
    a0be:	80 93 89 45 	sts	0x4589, r24	; 0x804589 <_ZL15red_blink_count>
    a0c2:	90 93 8a 45 	sts	0x458A, r25	; 0x80458a <_ZL15red_blink_count+0x1>
					red_led_configured = true;			
    a0c6:	81 e0       	ldi	r24, 0x01	; 1
    a0c8:	80 93 8d 45 	sts	0x458D, r24	; 0x80458d <_ZL18red_led_configured>
					timer_blink_inhibit = false; /* Enable timer LED control */
    a0cc:	10 92 7d 45 	sts	0x457D, r1	; 0x80457d <_ZL19timer_blink_inhibit>
				}
			}
			break;
    a0d0:	d9 c1       	rjmp	.+946    	; 0xa484 <_ZN4leds5blinkE7Blink_tb+0x532>
			
			case LEDS_GREEN_BLINK_FAST:
			{
				if(lastGreenBlinkSetting != LEDS_GREEN_BLINK_FAST)
    a0d2:	90 91 80 45 	lds	r25, 0x4580	; 0x804580 <_ZL21lastGreenBlinkSetting>
    a0d6:	81 e0       	ldi	r24, 0x01	; 1
    a0d8:	95 30       	cpi	r25, 0x05	; 5
    a0da:	09 f4       	brne	.+2      	; 0xa0de <_ZN4leds5blinkE7Blink_tb+0x18c>
    a0dc:	80 e0       	ldi	r24, 0x00	; 0
    a0de:	88 23       	and	r24, r24
    a0e0:	09 f4       	brne	.+2      	; 0xa0e4 <_ZN4leds5blinkE7Blink_tb+0x192>
    a0e2:	d2 c1       	rjmp	.+932    	; 0xa488 <_ZN4leds5blinkE7Blink_tb+0x536>
				{
					lastGreenBlinkSetting = LEDS_GREEN_BLINK_FAST;
    a0e4:	85 e0       	ldi	r24, 0x05	; 5
    a0e6:	80 93 80 45 	sts	0x4580, r24	; 0x804580 <_ZL21lastGreenBlinkSetting>
					green_blink_on_period = BRIEF_ON;
    a0ea:	8f e0       	ldi	r24, 0x0F	; 15
    a0ec:	90 e0       	ldi	r25, 0x00	; 0
    a0ee:	80 93 85 45 	sts	0x4585, r24	; 0x804585 <_ZL21green_blink_on_period>
    a0f2:	90 93 86 45 	sts	0x4586, r25	; 0x804586 <_ZL21green_blink_on_period+0x1>
					green_blink_off_period = BRIEF_OFF;	
    a0f6:	82 e3       	ldi	r24, 0x32	; 50
    a0f8:	90 e0       	ldi	r25, 0x00	; 0
    a0fa:	80 93 87 45 	sts	0x4587, r24	; 0x804587 <_ZL22green_blink_off_period>
    a0fe:	90 93 88 45 	sts	0x4588, r25	; 0x804588 <_ZL22green_blink_off_period+0x1>
					green_blink_count = green_blink_on_period;			
    a102:	80 91 85 45 	lds	r24, 0x4585	; 0x804585 <_ZL21green_blink_on_period>
    a106:	90 91 86 45 	lds	r25, 0x4586	; 0x804586 <_ZL21green_blink_on_period+0x1>
    a10a:	80 93 8b 45 	sts	0x458B, r24	; 0x80458b <_ZL17green_blink_count>
    a10e:	90 93 8c 45 	sts	0x458C, r25	; 0x80458c <_ZL17green_blink_count+0x1>
					green_led_configured = true;			
    a112:	81 e0       	ldi	r24, 0x01	; 1
    a114:	80 93 8e 45 	sts	0x458E, r24	; 0x80458e <_ZL20green_led_configured>
					timer_blink_inhibit = false; /* Enable timer LED control */
    a118:	10 92 7d 45 	sts	0x457D, r1	; 0x80457d <_ZL19timer_blink_inhibit>
				}
			}
			break;
    a11c:	b5 c1       	rjmp	.+874    	; 0xa488 <_ZN4leds5blinkE7Blink_tb+0x536>
			
			case LEDS_RED_BLINK_SLOW:
			{
				if(lastRedBlinkSetting != LEDS_RED_BLINK_SLOW)
    a11e:	90 91 7f 45 	lds	r25, 0x457F	; 0x80457f <_ZL19lastRedBlinkSetting>
    a122:	81 e0       	ldi	r24, 0x01	; 1
    a124:	94 30       	cpi	r25, 0x04	; 4
    a126:	09 f4       	brne	.+2      	; 0xa12a <_ZN4leds5blinkE7Blink_tb+0x1d8>
    a128:	80 e0       	ldi	r24, 0x00	; 0
    a12a:	88 23       	and	r24, r24
    a12c:	09 f4       	brne	.+2      	; 0xa130 <_ZN4leds5blinkE7Blink_tb+0x1de>
    a12e:	ae c1       	rjmp	.+860    	; 0xa48c <_ZN4leds5blinkE7Blink_tb+0x53a>
				{
					lastRedBlinkSetting = LEDS_RED_BLINK_SLOW;
    a130:	84 e0       	ldi	r24, 0x04	; 4
    a132:	80 93 7f 45 	sts	0x457F, r24	; 0x80457f <_ZL19lastRedBlinkSetting>
					red_blink_on_period = SLOW_ON;
    a136:	89 e1       	ldi	r24, 0x19	; 25
    a138:	90 e0       	ldi	r25, 0x00	; 0
    a13a:	80 93 81 45 	sts	0x4581, r24	; 0x804581 <_ZL19red_blink_on_period>
    a13e:	90 93 82 45 	sts	0x4582, r25	; 0x804582 <_ZL19red_blink_on_period+0x1>
					red_blink_off_period = SLOW_OFF;
    a142:	84 ef       	ldi	r24, 0xF4	; 244
    a144:	91 e0       	ldi	r25, 0x01	; 1
    a146:	80 93 83 45 	sts	0x4583, r24	; 0x804583 <_ZL20red_blink_off_period>
    a14a:	90 93 84 45 	sts	0x4584, r25	; 0x804584 <_ZL20red_blink_off_period+0x1>
					red_blink_count = red_blink_on_period;				
    a14e:	80 91 81 45 	lds	r24, 0x4581	; 0x804581 <_ZL19red_blink_on_period>
    a152:	90 91 82 45 	lds	r25, 0x4582	; 0x804582 <_ZL19red_blink_on_period+0x1>
    a156:	80 93 89 45 	sts	0x4589, r24	; 0x804589 <_ZL15red_blink_count>
    a15a:	90 93 8a 45 	sts	0x458A, r25	; 0x80458a <_ZL15red_blink_count+0x1>
					red_led_configured = true;			
    a15e:	81 e0       	ldi	r24, 0x01	; 1
    a160:	80 93 8d 45 	sts	0x458D, r24	; 0x80458d <_ZL18red_led_configured>
					timer_blink_inhibit = false; /* Enable timer LED control */
    a164:	10 92 7d 45 	sts	0x457D, r1	; 0x80457d <_ZL19timer_blink_inhibit>
				}
			}
			break;
    a168:	91 c1       	rjmp	.+802    	; 0xa48c <_ZN4leds5blinkE7Blink_tb+0x53a>
			
			case LEDS_GREEN_BLINK_SLOW:
			{
				if(lastGreenBlinkSetting != LEDS_GREEN_BLINK_SLOW)
    a16a:	90 91 80 45 	lds	r25, 0x4580	; 0x804580 <_ZL21lastGreenBlinkSetting>
    a16e:	81 e0       	ldi	r24, 0x01	; 1
    a170:	96 30       	cpi	r25, 0x06	; 6
    a172:	09 f4       	brne	.+2      	; 0xa176 <_ZN4leds5blinkE7Blink_tb+0x224>
    a174:	80 e0       	ldi	r24, 0x00	; 0
    a176:	88 23       	and	r24, r24
    a178:	09 f4       	brne	.+2      	; 0xa17c <_ZN4leds5blinkE7Blink_tb+0x22a>
    a17a:	8a c1       	rjmp	.+788    	; 0xa490 <_ZN4leds5blinkE7Blink_tb+0x53e>
				{
					lastGreenBlinkSetting = LEDS_GREEN_BLINK_SLOW;
    a17c:	86 e0       	ldi	r24, 0x06	; 6
    a17e:	80 93 80 45 	sts	0x4580, r24	; 0x804580 <_ZL21lastGreenBlinkSetting>
					green_blink_on_period = SLOW_ON;
    a182:	89 e1       	ldi	r24, 0x19	; 25
    a184:	90 e0       	ldi	r25, 0x00	; 0
    a186:	80 93 85 45 	sts	0x4585, r24	; 0x804585 <_ZL21green_blink_on_period>
    a18a:	90 93 86 45 	sts	0x4586, r25	; 0x804586 <_ZL21green_blink_on_period+0x1>
					green_blink_off_period = SLOW_OFF;	
    a18e:	84 ef       	ldi	r24, 0xF4	; 244
    a190:	91 e0       	ldi	r25, 0x01	; 1
    a192:	80 93 87 45 	sts	0x4587, r24	; 0x804587 <_ZL22green_blink_off_period>
    a196:	90 93 88 45 	sts	0x4588, r25	; 0x804588 <_ZL22green_blink_off_period+0x1>
					green_blink_count = green_blink_on_period;			
    a19a:	80 91 85 45 	lds	r24, 0x4585	; 0x804585 <_ZL21green_blink_on_period>
    a19e:	90 91 86 45 	lds	r25, 0x4586	; 0x804586 <_ZL21green_blink_on_period+0x1>
    a1a2:	80 93 8b 45 	sts	0x458B, r24	; 0x80458b <_ZL17green_blink_count>
    a1a6:	90 93 8c 45 	sts	0x458C, r25	; 0x80458c <_ZL17green_blink_count+0x1>
					green_led_configured = true;			
    a1aa:	81 e0       	ldi	r24, 0x01	; 1
    a1ac:	80 93 8e 45 	sts	0x458E, r24	; 0x80458e <_ZL20green_led_configured>
					timer_blink_inhibit = false; /* Enable timer LED control */
    a1b0:	10 92 7d 45 	sts	0x457D, r1	; 0x80457d <_ZL19timer_blink_inhibit>
				}
			}
			break;
    a1b4:	6d c1       	rjmp	.+730    	; 0xa490 <_ZN4leds5blinkE7Blink_tb+0x53e>
			
			case LEDS_RED_THEN_GREEN_BLINK_SLOW:
			{
				if((lastRedBlinkSetting != LEDS_RED_THEN_GREEN_BLINK_SLOW) || (lastGreenBlinkSetting != LEDS_RED_THEN_GREEN_BLINK_SLOW))
    a1b6:	80 91 7f 45 	lds	r24, 0x457F	; 0x80457f <_ZL19lastRedBlinkSetting>
    a1ba:	8c 30       	cpi	r24, 0x0C	; 12
    a1bc:	21 f4       	brne	.+8      	; 0xa1c6 <_ZN4leds5blinkE7Blink_tb+0x274>
    a1be:	80 91 80 45 	lds	r24, 0x4580	; 0x804580 <_ZL21lastGreenBlinkSetting>
    a1c2:	8c 30       	cpi	r24, 0x0C	; 12
    a1c4:	11 f0       	breq	.+4      	; 0xa1ca <_ZN4leds5blinkE7Blink_tb+0x278>
    a1c6:	81 e0       	ldi	r24, 0x01	; 1
    a1c8:	01 c0       	rjmp	.+2      	; 0xa1cc <_ZN4leds5blinkE7Blink_tb+0x27a>
    a1ca:	80 e0       	ldi	r24, 0x00	; 0
    a1cc:	88 23       	and	r24, r24
    a1ce:	09 f4       	brne	.+2      	; 0xa1d2 <_ZN4leds5blinkE7Blink_tb+0x280>
    a1d0:	61 c1       	rjmp	.+706    	; 0xa494 <_ZN4leds5blinkE7Blink_tb+0x542>
				{
					lastRedBlinkSetting = LEDS_RED_THEN_GREEN_BLINK_SLOW;
    a1d2:	8c e0       	ldi	r24, 0x0C	; 12
    a1d4:	80 93 7f 45 	sts	0x457F, r24	; 0x80457f <_ZL19lastRedBlinkSetting>
					lastGreenBlinkSetting = LEDS_RED_THEN_GREEN_BLINK_SLOW;
    a1d8:	8c e0       	ldi	r24, 0x0C	; 12
    a1da:	80 93 80 45 	sts	0x4580, r24	; 0x804580 <_ZL21lastGreenBlinkSetting>
					green_blink_on_period = SLOW_ON;
    a1de:	89 e1       	ldi	r24, 0x19	; 25
    a1e0:	90 e0       	ldi	r25, 0x00	; 0
    a1e2:	80 93 85 45 	sts	0x4585, r24	; 0x804585 <_ZL21green_blink_on_period>
    a1e6:	90 93 86 45 	sts	0x4586, r25	; 0x804586 <_ZL21green_blink_on_period+0x1>
					green_blink_off_period = SLOW_OFF;	
    a1ea:	84 ef       	ldi	r24, 0xF4	; 244
    a1ec:	91 e0       	ldi	r25, 0x01	; 1
    a1ee:	80 93 87 45 	sts	0x4587, r24	; 0x804587 <_ZL22green_blink_off_period>
    a1f2:	90 93 88 45 	sts	0x4588, r25	; 0x804588 <_ZL22green_blink_off_period+0x1>
					green_blink_count = -green_blink_on_period;			
    a1f6:	80 91 85 45 	lds	r24, 0x4585	; 0x804585 <_ZL21green_blink_on_period>
    a1fa:	90 91 86 45 	lds	r25, 0x4586	; 0x804586 <_ZL21green_blink_on_period+0x1>
    a1fe:	91 95       	neg	r25
    a200:	81 95       	neg	r24
    a202:	91 09       	sbc	r25, r1
    a204:	80 93 8b 45 	sts	0x458B, r24	; 0x80458b <_ZL17green_blink_count>
    a208:	90 93 8c 45 	sts	0x458C, r25	; 0x80458c <_ZL17green_blink_count+0x1>
					red_blink_on_period = SLOW_ON;
    a20c:	89 e1       	ldi	r24, 0x19	; 25
    a20e:	90 e0       	ldi	r25, 0x00	; 0
    a210:	80 93 81 45 	sts	0x4581, r24	; 0x804581 <_ZL19red_blink_on_period>
    a214:	90 93 82 45 	sts	0x4582, r25	; 0x804582 <_ZL19red_blink_on_period+0x1>
					red_blink_off_period = SLOW_OFF;
    a218:	84 ef       	ldi	r24, 0xF4	; 244
    a21a:	91 e0       	ldi	r25, 0x01	; 1
    a21c:	80 93 83 45 	sts	0x4583, r24	; 0x804583 <_ZL20red_blink_off_period>
    a220:	90 93 84 45 	sts	0x4584, r25	; 0x804584 <_ZL20red_blink_off_period+0x1>
					red_blink_count = red_blink_on_period;				
    a224:	80 91 81 45 	lds	r24, 0x4581	; 0x804581 <_ZL19red_blink_on_period>
    a228:	90 91 82 45 	lds	r25, 0x4582	; 0x804582 <_ZL19red_blink_on_period+0x1>
    a22c:	80 93 89 45 	sts	0x4589, r24	; 0x804589 <_ZL15red_blink_count>
    a230:	90 93 8a 45 	sts	0x458A, r25	; 0x80458a <_ZL15red_blink_count+0x1>
					red_led_configured = true;			
    a234:	81 e0       	ldi	r24, 0x01	; 1
    a236:	80 93 8d 45 	sts	0x458D, r24	; 0x80458d <_ZL18red_led_configured>
					green_led_configured = true;			
    a23a:	81 e0       	ldi	r24, 0x01	; 1
    a23c:	80 93 8e 45 	sts	0x458E, r24	; 0x80458e <_ZL20green_led_configured>
					timer_blink_inhibit = false; /* Enable timer LED control */
    a240:	10 92 7d 45 	sts	0x457D, r1	; 0x80457d <_ZL19timer_blink_inhibit>
				}
			}
			break;
    a244:	27 c1       	rjmp	.+590    	; 0xa494 <_ZN4leds5blinkE7Blink_tb+0x542>
			
			case LEDS_RED_THEN_GREEN_BLINK_FAST:
			{
				if((lastRedBlinkSetting != LEDS_RED_THEN_GREEN_BLINK_FAST) || (lastGreenBlinkSetting != LEDS_RED_THEN_GREEN_BLINK_FAST))
    a246:	80 91 7f 45 	lds	r24, 0x457F	; 0x80457f <_ZL19lastRedBlinkSetting>
    a24a:	8b 30       	cpi	r24, 0x0B	; 11
    a24c:	21 f4       	brne	.+8      	; 0xa256 <_ZN4leds5blinkE7Blink_tb+0x304>
    a24e:	80 91 80 45 	lds	r24, 0x4580	; 0x804580 <_ZL21lastGreenBlinkSetting>
    a252:	8b 30       	cpi	r24, 0x0B	; 11
    a254:	11 f0       	breq	.+4      	; 0xa25a <_ZN4leds5blinkE7Blink_tb+0x308>
    a256:	81 e0       	ldi	r24, 0x01	; 1
    a258:	01 c0       	rjmp	.+2      	; 0xa25c <_ZN4leds5blinkE7Blink_tb+0x30a>
    a25a:	80 e0       	ldi	r24, 0x00	; 0
    a25c:	88 23       	and	r24, r24
    a25e:	09 f4       	brne	.+2      	; 0xa262 <_ZN4leds5blinkE7Blink_tb+0x310>
    a260:	1b c1       	rjmp	.+566    	; 0xa498 <_ZN4leds5blinkE7Blink_tb+0x546>
				{
					lastRedBlinkSetting = LEDS_RED_THEN_GREEN_BLINK_FAST;
    a262:	8b e0       	ldi	r24, 0x0B	; 11
    a264:	80 93 7f 45 	sts	0x457F, r24	; 0x80457f <_ZL19lastRedBlinkSetting>
					lastGreenBlinkSetting = LEDS_RED_THEN_GREEN_BLINK_FAST;
    a268:	8b e0       	ldi	r24, 0x0B	; 11
    a26a:	80 93 80 45 	sts	0x4580, r24	; 0x804580 <_ZL21lastGreenBlinkSetting>
					green_blink_on_period = FAST_ON;
    a26e:	89 e1       	ldi	r24, 0x19	; 25
    a270:	90 e0       	ldi	r25, 0x00	; 0
    a272:	80 93 85 45 	sts	0x4585, r24	; 0x804585 <_ZL21green_blink_on_period>
    a276:	90 93 86 45 	sts	0x4586, r25	; 0x804586 <_ZL21green_blink_on_period+0x1>
					green_blink_off_period = FAST_OFF;	
    a27a:	89 e1       	ldi	r24, 0x19	; 25
    a27c:	90 e0       	ldi	r25, 0x00	; 0
    a27e:	80 93 87 45 	sts	0x4587, r24	; 0x804587 <_ZL22green_blink_off_period>
    a282:	90 93 88 45 	sts	0x4588, r25	; 0x804588 <_ZL22green_blink_off_period+0x1>
					green_blink_count = -green_blink_on_period;			
    a286:	80 91 85 45 	lds	r24, 0x4585	; 0x804585 <_ZL21green_blink_on_period>
    a28a:	90 91 86 45 	lds	r25, 0x4586	; 0x804586 <_ZL21green_blink_on_period+0x1>
    a28e:	91 95       	neg	r25
    a290:	81 95       	neg	r24
    a292:	91 09       	sbc	r25, r1
    a294:	80 93 8b 45 	sts	0x458B, r24	; 0x80458b <_ZL17green_blink_count>
    a298:	90 93 8c 45 	sts	0x458C, r25	; 0x80458c <_ZL17green_blink_count+0x1>
					red_blink_on_period = FAST_ON;
    a29c:	89 e1       	ldi	r24, 0x19	; 25
    a29e:	90 e0       	ldi	r25, 0x00	; 0
    a2a0:	80 93 81 45 	sts	0x4581, r24	; 0x804581 <_ZL19red_blink_on_period>
    a2a4:	90 93 82 45 	sts	0x4582, r25	; 0x804582 <_ZL19red_blink_on_period+0x1>
					red_blink_off_period = FAST_OFF;
    a2a8:	89 e1       	ldi	r24, 0x19	; 25
    a2aa:	90 e0       	ldi	r25, 0x00	; 0
    a2ac:	80 93 83 45 	sts	0x4583, r24	; 0x804583 <_ZL20red_blink_off_period>
    a2b0:	90 93 84 45 	sts	0x4584, r25	; 0x804584 <_ZL20red_blink_off_period+0x1>
					red_blink_count = red_blink_on_period;				
    a2b4:	80 91 81 45 	lds	r24, 0x4581	; 0x804581 <_ZL19red_blink_on_period>
    a2b8:	90 91 82 45 	lds	r25, 0x4582	; 0x804582 <_ZL19red_blink_on_period+0x1>
    a2bc:	80 93 89 45 	sts	0x4589, r24	; 0x804589 <_ZL15red_blink_count>
    a2c0:	90 93 8a 45 	sts	0x458A, r25	; 0x80458a <_ZL15red_blink_count+0x1>
					red_led_configured = true;			
    a2c4:	81 e0       	ldi	r24, 0x01	; 1
    a2c6:	80 93 8d 45 	sts	0x458D, r24	; 0x80458d <_ZL18red_led_configured>
					green_led_configured = true;			
    a2ca:	81 e0       	ldi	r24, 0x01	; 1
    a2cc:	80 93 8e 45 	sts	0x458E, r24	; 0x80458e <_ZL20green_led_configured>
					timer_blink_inhibit = false; /* Enable timer LED control */
    a2d0:	10 92 7d 45 	sts	0x457D, r1	; 0x80457d <_ZL19timer_blink_inhibit>
				}
			}
			break;
    a2d4:	e1 c0       	rjmp	.+450    	; 0xa498 <_ZN4leds5blinkE7Blink_tb+0x546>
			
			case LEDS_RED_AND_GREEN_BLINK_SLOW:
			{
				if((lastRedBlinkSetting != LEDS_RED_AND_GREEN_BLINK_SLOW) || (lastGreenBlinkSetting != LEDS_RED_AND_GREEN_BLINK_SLOW))
    a2d6:	80 91 7f 45 	lds	r24, 0x457F	; 0x80457f <_ZL19lastRedBlinkSetting>
    a2da:	8a 30       	cpi	r24, 0x0A	; 10
    a2dc:	21 f4       	brne	.+8      	; 0xa2e6 <_ZN4leds5blinkE7Blink_tb+0x394>
    a2de:	80 91 80 45 	lds	r24, 0x4580	; 0x804580 <_ZL21lastGreenBlinkSetting>
    a2e2:	8a 30       	cpi	r24, 0x0A	; 10
    a2e4:	11 f0       	breq	.+4      	; 0xa2ea <_ZN4leds5blinkE7Blink_tb+0x398>
    a2e6:	81 e0       	ldi	r24, 0x01	; 1
    a2e8:	01 c0       	rjmp	.+2      	; 0xa2ec <_ZN4leds5blinkE7Blink_tb+0x39a>
    a2ea:	80 e0       	ldi	r24, 0x00	; 0
    a2ec:	88 23       	and	r24, r24
    a2ee:	09 f4       	brne	.+2      	; 0xa2f2 <_ZN4leds5blinkE7Blink_tb+0x3a0>
    a2f0:	d5 c0       	rjmp	.+426    	; 0xa49c <_ZN4leds5blinkE7Blink_tb+0x54a>
				{
					lastRedBlinkSetting = LEDS_RED_AND_GREEN_BLINK_SLOW;
    a2f2:	8a e0       	ldi	r24, 0x0A	; 10
    a2f4:	80 93 7f 45 	sts	0x457F, r24	; 0x80457f <_ZL19lastRedBlinkSetting>
					lastGreenBlinkSetting = LEDS_RED_AND_GREEN_BLINK_SLOW;
    a2f8:	8a e0       	ldi	r24, 0x0A	; 10
    a2fa:	80 93 80 45 	sts	0x4580, r24	; 0x804580 <_ZL21lastGreenBlinkSetting>
					green_blink_on_period = SLOW_ON;
    a2fe:	89 e1       	ldi	r24, 0x19	; 25
    a300:	90 e0       	ldi	r25, 0x00	; 0
    a302:	80 93 85 45 	sts	0x4585, r24	; 0x804585 <_ZL21green_blink_on_period>
    a306:	90 93 86 45 	sts	0x4586, r25	; 0x804586 <_ZL21green_blink_on_period+0x1>
					green_blink_off_period = SLOW_OFF;	
    a30a:	84 ef       	ldi	r24, 0xF4	; 244
    a30c:	91 e0       	ldi	r25, 0x01	; 1
    a30e:	80 93 87 45 	sts	0x4587, r24	; 0x804587 <_ZL22green_blink_off_period>
    a312:	90 93 88 45 	sts	0x4588, r25	; 0x804588 <_ZL22green_blink_off_period+0x1>
					green_blink_count = green_blink_on_period;			
    a316:	80 91 85 45 	lds	r24, 0x4585	; 0x804585 <_ZL21green_blink_on_period>
    a31a:	90 91 86 45 	lds	r25, 0x4586	; 0x804586 <_ZL21green_blink_on_period+0x1>
    a31e:	80 93 8b 45 	sts	0x458B, r24	; 0x80458b <_ZL17green_blink_count>
    a322:	90 93 8c 45 	sts	0x458C, r25	; 0x80458c <_ZL17green_blink_count+0x1>
					red_blink_on_period = SLOW_ON;
    a326:	89 e1       	ldi	r24, 0x19	; 25
    a328:	90 e0       	ldi	r25, 0x00	; 0
    a32a:	80 93 81 45 	sts	0x4581, r24	; 0x804581 <_ZL19red_blink_on_period>
    a32e:	90 93 82 45 	sts	0x4582, r25	; 0x804582 <_ZL19red_blink_on_period+0x1>
					red_blink_off_period = SLOW_OFF;
    a332:	84 ef       	ldi	r24, 0xF4	; 244
    a334:	91 e0       	ldi	r25, 0x01	; 1
    a336:	80 93 83 45 	sts	0x4583, r24	; 0x804583 <_ZL20red_blink_off_period>
    a33a:	90 93 84 45 	sts	0x4584, r25	; 0x804584 <_ZL20red_blink_off_period+0x1>
					red_blink_count = red_blink_on_period;				
    a33e:	80 91 81 45 	lds	r24, 0x4581	; 0x804581 <_ZL19red_blink_on_period>
    a342:	90 91 82 45 	lds	r25, 0x4582	; 0x804582 <_ZL19red_blink_on_period+0x1>
    a346:	80 93 89 45 	sts	0x4589, r24	; 0x804589 <_ZL15red_blink_count>
    a34a:	90 93 8a 45 	sts	0x458A, r25	; 0x80458a <_ZL15red_blink_count+0x1>
					red_led_configured = true;			
    a34e:	81 e0       	ldi	r24, 0x01	; 1
    a350:	80 93 8d 45 	sts	0x458D, r24	; 0x80458d <_ZL18red_led_configured>
					green_led_configured = true;			
    a354:	81 e0       	ldi	r24, 0x01	; 1
    a356:	80 93 8e 45 	sts	0x458E, r24	; 0x80458e <_ZL20green_led_configured>
					timer_blink_inhibit = false; /* Enable timer LED control */
    a35a:	10 92 7d 45 	sts	0x457D, r1	; 0x80457d <_ZL19timer_blink_inhibit>
				}
			}
			break;
    a35e:	9e c0       	rjmp	.+316    	; 0xa49c <_ZN4leds5blinkE7Blink_tb+0x54a>
			
			case LEDS_RED_AND_GREEN_BLINK_FAST:
			{
				if((lastRedBlinkSetting != LEDS_RED_AND_GREEN_BLINK_FAST) || (lastGreenBlinkSetting != LEDS_RED_AND_GREEN_BLINK_FAST))
    a360:	80 91 7f 45 	lds	r24, 0x457F	; 0x80457f <_ZL19lastRedBlinkSetting>
    a364:	89 30       	cpi	r24, 0x09	; 9
    a366:	21 f4       	brne	.+8      	; 0xa370 <_ZN4leds5blinkE7Blink_tb+0x41e>
    a368:	80 91 80 45 	lds	r24, 0x4580	; 0x804580 <_ZL21lastGreenBlinkSetting>
    a36c:	89 30       	cpi	r24, 0x09	; 9
    a36e:	11 f0       	breq	.+4      	; 0xa374 <_ZN4leds5blinkE7Blink_tb+0x422>
    a370:	81 e0       	ldi	r24, 0x01	; 1
    a372:	01 c0       	rjmp	.+2      	; 0xa376 <_ZN4leds5blinkE7Blink_tb+0x424>
    a374:	80 e0       	ldi	r24, 0x00	; 0
    a376:	88 23       	and	r24, r24
    a378:	09 f4       	brne	.+2      	; 0xa37c <_ZN4leds5blinkE7Blink_tb+0x42a>
    a37a:	92 c0       	rjmp	.+292    	; 0xa4a0 <_ZN4leds5blinkE7Blink_tb+0x54e>
				{
					lastRedBlinkSetting = LEDS_RED_AND_GREEN_BLINK_FAST;
    a37c:	89 e0       	ldi	r24, 0x09	; 9
    a37e:	80 93 7f 45 	sts	0x457F, r24	; 0x80457f <_ZL19lastRedBlinkSetting>
					lastGreenBlinkSetting = LEDS_RED_AND_GREEN_BLINK_FAST;
    a382:	89 e0       	ldi	r24, 0x09	; 9
    a384:	80 93 80 45 	sts	0x4580, r24	; 0x804580 <_ZL21lastGreenBlinkSetting>
					green_blink_on_period = FAST_ON;
    a388:	89 e1       	ldi	r24, 0x19	; 25
    a38a:	90 e0       	ldi	r25, 0x00	; 0
    a38c:	80 93 85 45 	sts	0x4585, r24	; 0x804585 <_ZL21green_blink_on_period>
    a390:	90 93 86 45 	sts	0x4586, r25	; 0x804586 <_ZL21green_blink_on_period+0x1>
					green_blink_off_period = FAST_OFF;	
    a394:	89 e1       	ldi	r24, 0x19	; 25
    a396:	90 e0       	ldi	r25, 0x00	; 0
    a398:	80 93 87 45 	sts	0x4587, r24	; 0x804587 <_ZL22green_blink_off_period>
    a39c:	90 93 88 45 	sts	0x4588, r25	; 0x804588 <_ZL22green_blink_off_period+0x1>
					green_blink_count = green_blink_on_period;			
    a3a0:	80 91 85 45 	lds	r24, 0x4585	; 0x804585 <_ZL21green_blink_on_period>
    a3a4:	90 91 86 45 	lds	r25, 0x4586	; 0x804586 <_ZL21green_blink_on_period+0x1>
    a3a8:	80 93 8b 45 	sts	0x458B, r24	; 0x80458b <_ZL17green_blink_count>
    a3ac:	90 93 8c 45 	sts	0x458C, r25	; 0x80458c <_ZL17green_blink_count+0x1>
					red_blink_on_period = FAST_ON;
    a3b0:	89 e1       	ldi	r24, 0x19	; 25
    a3b2:	90 e0       	ldi	r25, 0x00	; 0
    a3b4:	80 93 81 45 	sts	0x4581, r24	; 0x804581 <_ZL19red_blink_on_period>
    a3b8:	90 93 82 45 	sts	0x4582, r25	; 0x804582 <_ZL19red_blink_on_period+0x1>
					red_blink_off_period = FAST_OFF;
    a3bc:	89 e1       	ldi	r24, 0x19	; 25
    a3be:	90 e0       	ldi	r25, 0x00	; 0
    a3c0:	80 93 83 45 	sts	0x4583, r24	; 0x804583 <_ZL20red_blink_off_period>
    a3c4:	90 93 84 45 	sts	0x4584, r25	; 0x804584 <_ZL20red_blink_off_period+0x1>
					red_blink_count = red_blink_on_period;				
    a3c8:	80 91 81 45 	lds	r24, 0x4581	; 0x804581 <_ZL19red_blink_on_period>
    a3cc:	90 91 82 45 	lds	r25, 0x4582	; 0x804582 <_ZL19red_blink_on_period+0x1>
    a3d0:	80 93 89 45 	sts	0x4589, r24	; 0x804589 <_ZL15red_blink_count>
    a3d4:	90 93 8a 45 	sts	0x458A, r25	; 0x80458a <_ZL15red_blink_count+0x1>
					red_led_configured = true;			
    a3d8:	81 e0       	ldi	r24, 0x01	; 1
    a3da:	80 93 8d 45 	sts	0x458D, r24	; 0x80458d <_ZL18red_led_configured>
					green_led_configured = true;			
    a3de:	81 e0       	ldi	r24, 0x01	; 1
    a3e0:	80 93 8e 45 	sts	0x458E, r24	; 0x80458e <_ZL20green_led_configured>
					timer_blink_inhibit = false; /* Enable timer LED control */
    a3e4:	10 92 7d 45 	sts	0x457D, r1	; 0x80457d <_ZL19timer_blink_inhibit>
				}
			}
			break;
    a3e8:	5b c0       	rjmp	.+182    	; 0xa4a0 <_ZN4leds5blinkE7Blink_tb+0x54e>
			
			case LEDS_RED_ON_CONSTANT:
			{
				if(lastRedBlinkSetting != LEDS_RED_ON_CONSTANT)
    a3ea:	90 91 7f 45 	lds	r25, 0x457F	; 0x80457f <_ZL19lastRedBlinkSetting>
    a3ee:	81 e0       	ldi	r24, 0x01	; 1
    a3f0:	97 30       	cpi	r25, 0x07	; 7
    a3f2:	09 f4       	brne	.+2      	; 0xa3f6 <_ZN4leds5blinkE7Blink_tb+0x4a4>
    a3f4:	80 e0       	ldi	r24, 0x00	; 0
    a3f6:	88 23       	and	r24, r24
    a3f8:	09 f4       	brne	.+2      	; 0xa3fc <_ZN4leds5blinkE7Blink_tb+0x4aa>
    a3fa:	54 c0       	rjmp	.+168    	; 0xa4a4 <_ZN4leds5blinkE7Blink_tb+0x552>
				{
					lastRedBlinkSetting = LEDS_RED_ON_CONSTANT;
    a3fc:	87 e0       	ldi	r24, 0x07	; 7
    a3fe:	80 93 7f 45 	sts	0x457F, r24	; 0x80457f <_ZL19lastRedBlinkSetting>
					red_blink_on_period = SLOW_ON;
    a402:	89 e1       	ldi	r24, 0x19	; 25
    a404:	90 e0       	ldi	r25, 0x00	; 0
    a406:	80 93 81 45 	sts	0x4581, r24	; 0x804581 <_ZL19red_blink_on_period>
    a40a:	90 93 82 45 	sts	0x4582, r25	; 0x804582 <_ZL19red_blink_on_period+0x1>
					red_blink_off_period = 0;
    a40e:	10 92 83 45 	sts	0x4583, r1	; 0x804583 <_ZL20red_blink_off_period>
    a412:	10 92 84 45 	sts	0x4584, r1	; 0x804584 <_ZL20red_blink_off_period+0x1>
					red_blink_count = red_blink_on_period;
    a416:	80 91 81 45 	lds	r24, 0x4581	; 0x804581 <_ZL19red_blink_on_period>
    a41a:	90 91 82 45 	lds	r25, 0x4582	; 0x804582 <_ZL19red_blink_on_period+0x1>
    a41e:	80 93 89 45 	sts	0x4589, r24	; 0x804589 <_ZL15red_blink_count>
    a422:	90 93 8a 45 	sts	0x458A, r25	; 0x80458a <_ZL15red_blink_count+0x1>
					red_led_configured = true;			
    a426:	81 e0       	ldi	r24, 0x01	; 1
    a428:	80 93 8d 45 	sts	0x458D, r24	; 0x80458d <_ZL18red_led_configured>
					timer_blink_inhibit = false; /* Enable timer LED control */
    a42c:	10 92 7d 45 	sts	0x457D, r1	; 0x80457d <_ZL19timer_blink_inhibit>
				}
			}
			break;
    a430:	39 c0       	rjmp	.+114    	; 0xa4a4 <_ZN4leds5blinkE7Blink_tb+0x552>
			
			case LEDS_GREEN_ON_CONSTANT:
			{
				if(lastGreenBlinkSetting != LEDS_GREEN_ON_CONSTANT)
    a432:	90 91 80 45 	lds	r25, 0x4580	; 0x804580 <_ZL21lastGreenBlinkSetting>
    a436:	81 e0       	ldi	r24, 0x01	; 1
    a438:	98 30       	cpi	r25, 0x08	; 8
    a43a:	09 f4       	brne	.+2      	; 0xa43e <_ZN4leds5blinkE7Blink_tb+0x4ec>
    a43c:	80 e0       	ldi	r24, 0x00	; 0
    a43e:	88 23       	and	r24, r24
    a440:	99 f1       	breq	.+102    	; 0xa4a8 <_ZN4leds5blinkE7Blink_tb+0x556>
				{
					lastGreenBlinkSetting = LEDS_GREEN_ON_CONSTANT;
    a442:	88 e0       	ldi	r24, 0x08	; 8
    a444:	80 93 80 45 	sts	0x4580, r24	; 0x804580 <_ZL21lastGreenBlinkSetting>
					green_blink_on_period = SLOW_ON;
    a448:	89 e1       	ldi	r24, 0x19	; 25
    a44a:	90 e0       	ldi	r25, 0x00	; 0
    a44c:	80 93 85 45 	sts	0x4585, r24	; 0x804585 <_ZL21green_blink_on_period>
    a450:	90 93 86 45 	sts	0x4586, r25	; 0x804586 <_ZL21green_blink_on_period+0x1>
					green_blink_off_period = 0;
    a454:	10 92 87 45 	sts	0x4587, r1	; 0x804587 <_ZL22green_blink_off_period>
    a458:	10 92 88 45 	sts	0x4588, r1	; 0x804588 <_ZL22green_blink_off_period+0x1>
					green_blink_count = green_blink_on_period;
    a45c:	80 91 85 45 	lds	r24, 0x4585	; 0x804585 <_ZL21green_blink_on_period>
    a460:	90 91 86 45 	lds	r25, 0x4586	; 0x804586 <_ZL21green_blink_on_period+0x1>
    a464:	80 93 8b 45 	sts	0x458B, r24	; 0x80458b <_ZL17green_blink_count>
    a468:	90 93 8c 45 	sts	0x458C, r25	; 0x80458c <_ZL17green_blink_count+0x1>
					green_led_configured = true;			
    a46c:	81 e0       	ldi	r24, 0x01	; 1
    a46e:	80 93 8e 45 	sts	0x458E, r24	; 0x80458e <_ZL20green_led_configured>
					timer_blink_inhibit = false; /* Enable timer LED control */
    a472:	10 92 7d 45 	sts	0x457D, r1	; 0x80457d <_ZL19timer_blink_inhibit>
				}
			}
			break;
    a476:	18 c0       	rjmp	.+48     	; 0xa4a8 <_ZN4leds5blinkE7Blink_tb+0x556>
			
			default:
			{
				
			}
			break;
    a478:	00 00       	nop
    a47a:	17 c0       	rjmp	.+46     	; 0xa4aa <_ZN4leds5blinkE7Blink_tb+0x558>
					LED_set_RED_level(OFF);
					red_blink_count = 0;
					red_led_configured = false;
				}
			}
			break;
    a47c:	00 00       	nop
    a47e:	15 c0       	rjmp	.+42     	; 0xa4aa <_ZN4leds5blinkE7Blink_tb+0x558>
					LED_set_GREEN_level(OFF);
					green_blink_count = 0;
					green_led_configured = false;
				}
			}
			break;
    a480:	00 00       	nop
    a482:	13 c0       	rjmp	.+38     	; 0xa4aa <_ZN4leds5blinkE7Blink_tb+0x558>
					red_blink_count = red_blink_on_period;	
					red_led_configured = true;			
					timer_blink_inhibit = false; /* Enable timer LED control */
				}
			}
			break;
    a484:	00 00       	nop
    a486:	11 c0       	rjmp	.+34     	; 0xa4aa <_ZN4leds5blinkE7Blink_tb+0x558>
					green_blink_count = green_blink_on_period;			
					green_led_configured = true;			
					timer_blink_inhibit = false; /* Enable timer LED control */
				}
			}
			break;
    a488:	00 00       	nop
    a48a:	0f c0       	rjmp	.+30     	; 0xa4aa <_ZN4leds5blinkE7Blink_tb+0x558>
					red_blink_count = red_blink_on_period;				
					red_led_configured = true;			
					timer_blink_inhibit = false; /* Enable timer LED control */
				}
			}
			break;
    a48c:	00 00       	nop
    a48e:	0d c0       	rjmp	.+26     	; 0xa4aa <_ZN4leds5blinkE7Blink_tb+0x558>
					green_blink_count = green_blink_on_period;			
					green_led_configured = true;			
					timer_blink_inhibit = false; /* Enable timer LED control */
				}
			}
			break;
    a490:	00 00       	nop
    a492:	0b c0       	rjmp	.+22     	; 0xa4aa <_ZN4leds5blinkE7Blink_tb+0x558>
					red_led_configured = true;			
					green_led_configured = true;			
					timer_blink_inhibit = false; /* Enable timer LED control */
				}
			}
			break;
    a494:	00 00       	nop
    a496:	09 c0       	rjmp	.+18     	; 0xa4aa <_ZN4leds5blinkE7Blink_tb+0x558>
					red_led_configured = true;			
					green_led_configured = true;			
					timer_blink_inhibit = false; /* Enable timer LED control */
				}
			}
			break;
    a498:	00 00       	nop
    a49a:	07 c0       	rjmp	.+14     	; 0xa4aa <_ZN4leds5blinkE7Blink_tb+0x558>
					red_led_configured = true;			
					green_led_configured = true;			
					timer_blink_inhibit = false; /* Enable timer LED control */
				}
			}
			break;
    a49c:	00 00       	nop
    a49e:	05 c0       	rjmp	.+10     	; 0xa4aa <_ZN4leds5blinkE7Blink_tb+0x558>
					red_led_configured = true;			
					green_led_configured = true;			
					timer_blink_inhibit = false; /* Enable timer LED control */
				}
			}
			break;
    a4a0:	00 00       	nop
    a4a2:	03 c0       	rjmp	.+6      	; 0xa4aa <_ZN4leds5blinkE7Blink_tb+0x558>
					red_blink_count = red_blink_on_period;
					red_led_configured = true;			
					timer_blink_inhibit = false; /* Enable timer LED control */
				}
			}
			break;
    a4a4:	00 00       	nop
    a4a6:	01 c0       	rjmp	.+2      	; 0xa4aa <_ZN4leds5blinkE7Blink_tb+0x558>
					green_blink_count = green_blink_on_period;
					green_led_configured = true;			
					timer_blink_inhibit = false; /* Enable timer LED control */
				}
			}
			break;
    a4a8:	00 00       	nop
				
			}
			break;
		}
		
		TCB3.INTCTRL |= TCB_CAPT_bm;   /* Capture or Timeout: enabled */
    a4aa:	80 e3       	ldi	r24, 0x30	; 48
    a4ac:	9b e0       	ldi	r25, 0x0B	; 11
    a4ae:	20 e3       	ldi	r18, 0x30	; 48
    a4b0:	3b e0       	ldi	r19, 0x0B	; 11
    a4b2:	f9 01       	movw	r30, r18
    a4b4:	25 81       	ldd	r18, Z+5	; 0x05
    a4b6:	21 60       	ori	r18, 0x01	; 1
    a4b8:	fc 01       	movw	r30, r24
    a4ba:	25 83       	std	Z+5, r18	; 0x05
	}
	
	lastBlinkSetting = blinkMode;
    a4bc:	8b 81       	ldd	r24, Y+3	; 0x03
    a4be:	80 93 7e 45 	sts	0x457E, r24	; 0x80457e <_ZL16lastBlinkSetting>
    a4c2:	01 c0       	rjmp	.+2      	; 0xa4c6 <_ZN4leds5blinkE7Blink_tb+0x574>
	if(resetTimeout)
	{
		led_timeout_count = LED_TIMEOUT_DELAY;
	}
	
	if(!led_timeout_count && (blinkMode != LEDS_OFF)) return;
    a4c4:	00 00       	nop
		
		TCB3.INTCTRL |= TCB_CAPT_bm;   /* Capture or Timeout: enabled */
	}
	
	lastBlinkSetting = blinkMode;
}
    a4c6:	24 96       	adiw	r28, 0x04	; 4
    a4c8:	cd bf       	out	0x3d, r28	; 61
    a4ca:	de bf       	out	0x3e, r29	; 62
    a4cc:	df 91       	pop	r29
    a4ce:	cf 91       	pop	r28
    a4d0:	08 95       	ret

0000a4d2 <PORTC_set_pin_pull_mode>:

void lb_send_sync(void)
{
	sprintf(g_tempMsgBuff, ".....");
	lb_send_text(g_tempMsgBuff);
}
    a4d2:	cf 93       	push	r28
    a4d4:	df 93       	push	r29
    a4d6:	00 d0       	rcall	.+0      	; 0xa4d8 <PORTC_set_pin_pull_mode+0x6>
    a4d8:	00 d0       	rcall	.+0      	; 0xa4da <PORTC_set_pin_pull_mode+0x8>
    a4da:	cd b7       	in	r28, 0x3d	; 61
    a4dc:	de b7       	in	r29, 0x3e	; 62
    a4de:	8b 83       	std	Y+3, r24	; 0x03
    a4e0:	6c 83       	std	Y+4, r22	; 0x04
    a4e2:	8b 81       	ldd	r24, Y+3	; 0x03
    a4e4:	88 2f       	mov	r24, r24
    a4e6:	90 e0       	ldi	r25, 0x00	; 0
    a4e8:	80 5b       	subi	r24, 0xB0	; 176
    a4ea:	9b 4f       	sbci	r25, 0xFB	; 251
    a4ec:	89 83       	std	Y+1, r24	; 0x01
    a4ee:	9a 83       	std	Y+2, r25	; 0x02
    a4f0:	8c 81       	ldd	r24, Y+4	; 0x04
    a4f2:	81 30       	cpi	r24, 0x01	; 1
    a4f4:	59 f4       	brne	.+22     	; 0xa50c <PORTC_set_pin_pull_mode+0x3a>
    a4f6:	89 81       	ldd	r24, Y+1	; 0x01
    a4f8:	9a 81       	ldd	r25, Y+2	; 0x02
    a4fa:	fc 01       	movw	r30, r24
    a4fc:	80 81       	ld	r24, Z
    a4fe:	28 2f       	mov	r18, r24
    a500:	28 60       	ori	r18, 0x08	; 8
    a502:	89 81       	ldd	r24, Y+1	; 0x01
    a504:	9a 81       	ldd	r25, Y+2	; 0x02
    a506:	fc 01       	movw	r30, r24
    a508:	20 83       	st	Z, r18
    a50a:	0d c0       	rjmp	.+26     	; 0xa526 <PORTC_set_pin_pull_mode+0x54>
    a50c:	8c 81       	ldd	r24, Y+4	; 0x04
    a50e:	88 23       	and	r24, r24
    a510:	51 f4       	brne	.+20     	; 0xa526 <PORTC_set_pin_pull_mode+0x54>
    a512:	89 81       	ldd	r24, Y+1	; 0x01
    a514:	9a 81       	ldd	r25, Y+2	; 0x02
    a516:	fc 01       	movw	r30, r24
    a518:	80 81       	ld	r24, Z
    a51a:	28 2f       	mov	r18, r24
    a51c:	27 7f       	andi	r18, 0xF7	; 247
    a51e:	89 81       	ldd	r24, Y+1	; 0x01
    a520:	9a 81       	ldd	r25, Y+2	; 0x02
    a522:	fc 01       	movw	r30, r24
    a524:	20 83       	st	Z, r18
    a526:	00 00       	nop
    a528:	24 96       	adiw	r28, 0x04	; 4
    a52a:	cd bf       	out	0x3d, r28	; 61
    a52c:	de bf       	out	0x3e, r29	; 62
    a52e:	df 91       	pop	r29
    a530:	cf 91       	pop	r28
    a532:	08 95       	ret

0000a534 <PORTC_set_pin_dir>:
    a534:	cf 93       	push	r28
    a536:	df 93       	push	r29
    a538:	00 d0       	rcall	.+0      	; 0xa53a <PORTC_set_pin_dir+0x6>
    a53a:	cd b7       	in	r28, 0x3d	; 61
    a53c:	de b7       	in	r29, 0x3e	; 62
    a53e:	89 83       	std	Y+1, r24	; 0x01
    a540:	6a 83       	std	Y+2, r22	; 0x02
    a542:	8a 81       	ldd	r24, Y+2	; 0x02
    a544:	88 2f       	mov	r24, r24
    a546:	90 e0       	ldi	r25, 0x00	; 0
    a548:	81 30       	cpi	r24, 0x01	; 1
    a54a:	91 05       	cpc	r25, r1
    a54c:	e1 f0       	breq	.+56     	; 0xa586 <PORTC_set_pin_dir+0x52>
    a54e:	82 30       	cpi	r24, 0x02	; 2
    a550:	91 05       	cpc	r25, r1
    a552:	71 f1       	breq	.+92     	; 0xa5b0 <PORTC_set_pin_dir+0x7c>
    a554:	89 2b       	or	r24, r25
    a556:	09 f0       	breq	.+2      	; 0xa55a <PORTC_set_pin_dir+0x26>
    a558:	3b c0       	rjmp	.+118    	; 0xa5d0 <PORTC_set_pin_dir+0x9c>
    a55a:	88 e0       	ldi	r24, 0x08	; 8
    a55c:	90 e0       	ldi	r25, 0x00	; 0
    a55e:	28 e0       	ldi	r18, 0x08	; 8
    a560:	30 e0       	ldi	r19, 0x00	; 0
    a562:	f9 01       	movw	r30, r18
    a564:	20 81       	ld	r18, Z
    a566:	62 2f       	mov	r22, r18
    a568:	29 81       	ldd	r18, Y+1	; 0x01
    a56a:	42 2f       	mov	r20, r18
    a56c:	50 e0       	ldi	r21, 0x00	; 0
    a56e:	21 e0       	ldi	r18, 0x01	; 1
    a570:	30 e0       	ldi	r19, 0x00	; 0
    a572:	02 c0       	rjmp	.+4      	; 0xa578 <PORTC_set_pin_dir+0x44>
    a574:	22 0f       	add	r18, r18
    a576:	33 1f       	adc	r19, r19
    a578:	4a 95       	dec	r20
    a57a:	e2 f7       	brpl	.-8      	; 0xa574 <PORTC_set_pin_dir+0x40>
    a57c:	20 95       	com	r18
    a57e:	26 23       	and	r18, r22
    a580:	fc 01       	movw	r30, r24
    a582:	20 83       	st	Z, r18
    a584:	25 c0       	rjmp	.+74     	; 0xa5d0 <PORTC_set_pin_dir+0x9c>
    a586:	88 e0       	ldi	r24, 0x08	; 8
    a588:	90 e0       	ldi	r25, 0x00	; 0
    a58a:	28 e0       	ldi	r18, 0x08	; 8
    a58c:	30 e0       	ldi	r19, 0x00	; 0
    a58e:	f9 01       	movw	r30, r18
    a590:	20 81       	ld	r18, Z
    a592:	62 2f       	mov	r22, r18
    a594:	29 81       	ldd	r18, Y+1	; 0x01
    a596:	42 2f       	mov	r20, r18
    a598:	50 e0       	ldi	r21, 0x00	; 0
    a59a:	21 e0       	ldi	r18, 0x01	; 1
    a59c:	30 e0       	ldi	r19, 0x00	; 0
    a59e:	02 c0       	rjmp	.+4      	; 0xa5a4 <PORTC_set_pin_dir+0x70>
    a5a0:	22 0f       	add	r18, r18
    a5a2:	33 1f       	adc	r19, r19
    a5a4:	4a 95       	dec	r20
    a5a6:	e2 f7       	brpl	.-8      	; 0xa5a0 <PORTC_set_pin_dir+0x6c>
    a5a8:	26 2b       	or	r18, r22
    a5aa:	fc 01       	movw	r30, r24
    a5ac:	20 83       	st	Z, r18
    a5ae:	10 c0       	rjmp	.+32     	; 0xa5d0 <PORTC_set_pin_dir+0x9c>
    a5b0:	89 81       	ldd	r24, Y+1	; 0x01
    a5b2:	88 2f       	mov	r24, r24
    a5b4:	90 e0       	ldi	r25, 0x00	; 0
    a5b6:	80 5b       	subi	r24, 0xB0	; 176
    a5b8:	9b 4f       	sbci	r25, 0xFB	; 251
    a5ba:	29 81       	ldd	r18, Y+1	; 0x01
    a5bc:	22 2f       	mov	r18, r18
    a5be:	30 e0       	ldi	r19, 0x00	; 0
    a5c0:	20 5b       	subi	r18, 0xB0	; 176
    a5c2:	3b 4f       	sbci	r19, 0xFB	; 251
    a5c4:	f9 01       	movw	r30, r18
    a5c6:	20 81       	ld	r18, Z
    a5c8:	28 60       	ori	r18, 0x08	; 8
    a5ca:	fc 01       	movw	r30, r24
    a5cc:	20 83       	st	Z, r18
    a5ce:	00 00       	nop
    a5d0:	00 00       	nop
    a5d2:	0f 90       	pop	r0
    a5d4:	0f 90       	pop	r0
    a5d6:	df 91       	pop	r29
    a5d8:	cf 91       	pop	r28
    a5da:	08 95       	ret

0000a5dc <PORTC_set_pin_level>:
    a5dc:	cf 93       	push	r28
    a5de:	df 93       	push	r29
    a5e0:	00 d0       	rcall	.+0      	; 0xa5e2 <PORTC_set_pin_level+0x6>
    a5e2:	cd b7       	in	r28, 0x3d	; 61
    a5e4:	de b7       	in	r29, 0x3e	; 62
    a5e6:	89 83       	std	Y+1, r24	; 0x01
    a5e8:	6a 83       	std	Y+2, r22	; 0x02
    a5ea:	8a 81       	ldd	r24, Y+2	; 0x02
    a5ec:	88 23       	and	r24, r24
    a5ee:	a9 f0       	breq	.+42     	; 0xa61a <PORTC_set_pin_level+0x3e>
    a5f0:	88 e0       	ldi	r24, 0x08	; 8
    a5f2:	90 e0       	ldi	r25, 0x00	; 0
    a5f4:	28 e0       	ldi	r18, 0x08	; 8
    a5f6:	30 e0       	ldi	r19, 0x00	; 0
    a5f8:	f9 01       	movw	r30, r18
    a5fa:	21 81       	ldd	r18, Z+1	; 0x01
    a5fc:	62 2f       	mov	r22, r18
    a5fe:	29 81       	ldd	r18, Y+1	; 0x01
    a600:	42 2f       	mov	r20, r18
    a602:	50 e0       	ldi	r21, 0x00	; 0
    a604:	21 e0       	ldi	r18, 0x01	; 1
    a606:	30 e0       	ldi	r19, 0x00	; 0
    a608:	02 c0       	rjmp	.+4      	; 0xa60e <PORTC_set_pin_level+0x32>
    a60a:	22 0f       	add	r18, r18
    a60c:	33 1f       	adc	r19, r19
    a60e:	4a 95       	dec	r20
    a610:	e2 f7       	brpl	.-8      	; 0xa60a <PORTC_set_pin_level+0x2e>
    a612:	26 2b       	or	r18, r22
    a614:	fc 01       	movw	r30, r24
    a616:	21 83       	std	Z+1, r18	; 0x01
    a618:	15 c0       	rjmp	.+42     	; 0xa644 <PORTC_set_pin_level+0x68>
    a61a:	88 e0       	ldi	r24, 0x08	; 8
    a61c:	90 e0       	ldi	r25, 0x00	; 0
    a61e:	28 e0       	ldi	r18, 0x08	; 8
    a620:	30 e0       	ldi	r19, 0x00	; 0
    a622:	f9 01       	movw	r30, r18
    a624:	21 81       	ldd	r18, Z+1	; 0x01
    a626:	62 2f       	mov	r22, r18
    a628:	29 81       	ldd	r18, Y+1	; 0x01
    a62a:	42 2f       	mov	r20, r18
    a62c:	50 e0       	ldi	r21, 0x00	; 0
    a62e:	21 e0       	ldi	r18, 0x01	; 1
    a630:	30 e0       	ldi	r19, 0x00	; 0
    a632:	02 c0       	rjmp	.+4      	; 0xa638 <PORTC_set_pin_level+0x5c>
    a634:	22 0f       	add	r18, r18
    a636:	33 1f       	adc	r19, r19
    a638:	4a 95       	dec	r20
    a63a:	e2 f7       	brpl	.-8      	; 0xa634 <PORTC_set_pin_level+0x58>
    a63c:	20 95       	com	r18
    a63e:	26 23       	and	r18, r22
    a640:	fc 01       	movw	r30, r24
    a642:	21 83       	std	Z+1, r18	; 0x01
    a644:	00 00       	nop
    a646:	0f 90       	pop	r0
    a648:	0f 90       	pop	r0
    a64a:	df 91       	pop	r29
    a64c:	cf 91       	pop	r28
    a64e:	08 95       	ret

0000a650 <PORTE_set_pin_pull_mode>:
    a650:	cf 93       	push	r28
    a652:	df 93       	push	r29
    a654:	00 d0       	rcall	.+0      	; 0xa656 <PORTE_set_pin_pull_mode+0x6>
    a656:	00 d0       	rcall	.+0      	; 0xa658 <PORTE_set_pin_pull_mode+0x8>
    a658:	cd b7       	in	r28, 0x3d	; 61
    a65a:	de b7       	in	r29, 0x3e	; 62
    a65c:	8b 83       	std	Y+3, r24	; 0x03
    a65e:	6c 83       	std	Y+4, r22	; 0x04
    a660:	8b 81       	ldd	r24, Y+3	; 0x03
    a662:	88 2f       	mov	r24, r24
    a664:	90 e0       	ldi	r25, 0x00	; 0
    a666:	80 57       	subi	r24, 0x70	; 112
    a668:	9b 4f       	sbci	r25, 0xFB	; 251
    a66a:	89 83       	std	Y+1, r24	; 0x01
    a66c:	9a 83       	std	Y+2, r25	; 0x02
    a66e:	8c 81       	ldd	r24, Y+4	; 0x04
    a670:	81 30       	cpi	r24, 0x01	; 1
    a672:	59 f4       	brne	.+22     	; 0xa68a <PORTE_set_pin_pull_mode+0x3a>
    a674:	89 81       	ldd	r24, Y+1	; 0x01
    a676:	9a 81       	ldd	r25, Y+2	; 0x02
    a678:	fc 01       	movw	r30, r24
    a67a:	80 81       	ld	r24, Z
    a67c:	28 2f       	mov	r18, r24
    a67e:	28 60       	ori	r18, 0x08	; 8
    a680:	89 81       	ldd	r24, Y+1	; 0x01
    a682:	9a 81       	ldd	r25, Y+2	; 0x02
    a684:	fc 01       	movw	r30, r24
    a686:	20 83       	st	Z, r18
    a688:	0d c0       	rjmp	.+26     	; 0xa6a4 <PORTE_set_pin_pull_mode+0x54>
    a68a:	8c 81       	ldd	r24, Y+4	; 0x04
    a68c:	88 23       	and	r24, r24
    a68e:	51 f4       	brne	.+20     	; 0xa6a4 <PORTE_set_pin_pull_mode+0x54>
    a690:	89 81       	ldd	r24, Y+1	; 0x01
    a692:	9a 81       	ldd	r25, Y+2	; 0x02
    a694:	fc 01       	movw	r30, r24
    a696:	80 81       	ld	r24, Z
    a698:	28 2f       	mov	r18, r24
    a69a:	27 7f       	andi	r18, 0xF7	; 247
    a69c:	89 81       	ldd	r24, Y+1	; 0x01
    a69e:	9a 81       	ldd	r25, Y+2	; 0x02
    a6a0:	fc 01       	movw	r30, r24
    a6a2:	20 83       	st	Z, r18
    a6a4:	00 00       	nop
    a6a6:	24 96       	adiw	r28, 0x04	; 4
    a6a8:	cd bf       	out	0x3d, r28	; 61
    a6aa:	de bf       	out	0x3e, r29	; 62
    a6ac:	df 91       	pop	r29
    a6ae:	cf 91       	pop	r28
    a6b0:	08 95       	ret

0000a6b2 <PORTE_set_pin_dir>:
    a6b2:	cf 93       	push	r28
    a6b4:	df 93       	push	r29
    a6b6:	00 d0       	rcall	.+0      	; 0xa6b8 <PORTE_set_pin_dir+0x6>
    a6b8:	cd b7       	in	r28, 0x3d	; 61
    a6ba:	de b7       	in	r29, 0x3e	; 62
    a6bc:	89 83       	std	Y+1, r24	; 0x01
    a6be:	6a 83       	std	Y+2, r22	; 0x02
    a6c0:	8a 81       	ldd	r24, Y+2	; 0x02
    a6c2:	88 2f       	mov	r24, r24
    a6c4:	90 e0       	ldi	r25, 0x00	; 0
    a6c6:	81 30       	cpi	r24, 0x01	; 1
    a6c8:	91 05       	cpc	r25, r1
    a6ca:	e1 f0       	breq	.+56     	; 0xa704 <PORTE_set_pin_dir+0x52>
    a6cc:	82 30       	cpi	r24, 0x02	; 2
    a6ce:	91 05       	cpc	r25, r1
    a6d0:	71 f1       	breq	.+92     	; 0xa72e <PORTE_set_pin_dir+0x7c>
    a6d2:	89 2b       	or	r24, r25
    a6d4:	09 f0       	breq	.+2      	; 0xa6d8 <PORTE_set_pin_dir+0x26>
    a6d6:	3b c0       	rjmp	.+118    	; 0xa74e <PORTE_set_pin_dir+0x9c>
    a6d8:	80 e1       	ldi	r24, 0x10	; 16
    a6da:	90 e0       	ldi	r25, 0x00	; 0
    a6dc:	20 e1       	ldi	r18, 0x10	; 16
    a6de:	30 e0       	ldi	r19, 0x00	; 0
    a6e0:	f9 01       	movw	r30, r18
    a6e2:	20 81       	ld	r18, Z
    a6e4:	62 2f       	mov	r22, r18
    a6e6:	29 81       	ldd	r18, Y+1	; 0x01
    a6e8:	42 2f       	mov	r20, r18
    a6ea:	50 e0       	ldi	r21, 0x00	; 0
    a6ec:	21 e0       	ldi	r18, 0x01	; 1
    a6ee:	30 e0       	ldi	r19, 0x00	; 0
    a6f0:	02 c0       	rjmp	.+4      	; 0xa6f6 <PORTE_set_pin_dir+0x44>
    a6f2:	22 0f       	add	r18, r18
    a6f4:	33 1f       	adc	r19, r19
    a6f6:	4a 95       	dec	r20
    a6f8:	e2 f7       	brpl	.-8      	; 0xa6f2 <PORTE_set_pin_dir+0x40>
    a6fa:	20 95       	com	r18
    a6fc:	26 23       	and	r18, r22
    a6fe:	fc 01       	movw	r30, r24
    a700:	20 83       	st	Z, r18
    a702:	25 c0       	rjmp	.+74     	; 0xa74e <PORTE_set_pin_dir+0x9c>
    a704:	80 e1       	ldi	r24, 0x10	; 16
    a706:	90 e0       	ldi	r25, 0x00	; 0
    a708:	20 e1       	ldi	r18, 0x10	; 16
    a70a:	30 e0       	ldi	r19, 0x00	; 0
    a70c:	f9 01       	movw	r30, r18
    a70e:	20 81       	ld	r18, Z
    a710:	62 2f       	mov	r22, r18
    a712:	29 81       	ldd	r18, Y+1	; 0x01
    a714:	42 2f       	mov	r20, r18
    a716:	50 e0       	ldi	r21, 0x00	; 0
    a718:	21 e0       	ldi	r18, 0x01	; 1
    a71a:	30 e0       	ldi	r19, 0x00	; 0
    a71c:	02 c0       	rjmp	.+4      	; 0xa722 <PORTE_set_pin_dir+0x70>
    a71e:	22 0f       	add	r18, r18
    a720:	33 1f       	adc	r19, r19
    a722:	4a 95       	dec	r20
    a724:	e2 f7       	brpl	.-8      	; 0xa71e <PORTE_set_pin_dir+0x6c>
    a726:	26 2b       	or	r18, r22
    a728:	fc 01       	movw	r30, r24
    a72a:	20 83       	st	Z, r18
    a72c:	10 c0       	rjmp	.+32     	; 0xa74e <PORTE_set_pin_dir+0x9c>
    a72e:	89 81       	ldd	r24, Y+1	; 0x01
    a730:	88 2f       	mov	r24, r24
    a732:	90 e0       	ldi	r25, 0x00	; 0
    a734:	80 57       	subi	r24, 0x70	; 112
    a736:	9b 4f       	sbci	r25, 0xFB	; 251
    a738:	29 81       	ldd	r18, Y+1	; 0x01
    a73a:	22 2f       	mov	r18, r18
    a73c:	30 e0       	ldi	r19, 0x00	; 0
    a73e:	20 57       	subi	r18, 0x70	; 112
    a740:	3b 4f       	sbci	r19, 0xFB	; 251
    a742:	f9 01       	movw	r30, r18
    a744:	20 81       	ld	r18, Z
    a746:	28 60       	ori	r18, 0x08	; 8
    a748:	fc 01       	movw	r30, r24
    a74a:	20 83       	st	Z, r18
    a74c:	00 00       	nop
    a74e:	00 00       	nop
    a750:	0f 90       	pop	r0
    a752:	0f 90       	pop	r0
    a754:	df 91       	pop	r29
    a756:	cf 91       	pop	r28
    a758:	08 95       	ret

0000a75a <PORTE_set_pin_level>:
    a75a:	cf 93       	push	r28
    a75c:	df 93       	push	r29
    a75e:	00 d0       	rcall	.+0      	; 0xa760 <PORTE_set_pin_level+0x6>
    a760:	cd b7       	in	r28, 0x3d	; 61
    a762:	de b7       	in	r29, 0x3e	; 62
    a764:	89 83       	std	Y+1, r24	; 0x01
    a766:	6a 83       	std	Y+2, r22	; 0x02
    a768:	8a 81       	ldd	r24, Y+2	; 0x02
    a76a:	88 23       	and	r24, r24
    a76c:	a9 f0       	breq	.+42     	; 0xa798 <PORTE_set_pin_level+0x3e>
    a76e:	80 e1       	ldi	r24, 0x10	; 16
    a770:	90 e0       	ldi	r25, 0x00	; 0
    a772:	20 e1       	ldi	r18, 0x10	; 16
    a774:	30 e0       	ldi	r19, 0x00	; 0
    a776:	f9 01       	movw	r30, r18
    a778:	21 81       	ldd	r18, Z+1	; 0x01
    a77a:	62 2f       	mov	r22, r18
    a77c:	29 81       	ldd	r18, Y+1	; 0x01
    a77e:	42 2f       	mov	r20, r18
    a780:	50 e0       	ldi	r21, 0x00	; 0
    a782:	21 e0       	ldi	r18, 0x01	; 1
    a784:	30 e0       	ldi	r19, 0x00	; 0
    a786:	02 c0       	rjmp	.+4      	; 0xa78c <PORTE_set_pin_level+0x32>
    a788:	22 0f       	add	r18, r18
    a78a:	33 1f       	adc	r19, r19
    a78c:	4a 95       	dec	r20
    a78e:	e2 f7       	brpl	.-8      	; 0xa788 <PORTE_set_pin_level+0x2e>
    a790:	26 2b       	or	r18, r22
    a792:	fc 01       	movw	r30, r24
    a794:	21 83       	std	Z+1, r18	; 0x01
    a796:	15 c0       	rjmp	.+42     	; 0xa7c2 <PORTE_set_pin_level+0x68>
    a798:	80 e1       	ldi	r24, 0x10	; 16
    a79a:	90 e0       	ldi	r25, 0x00	; 0
    a79c:	20 e1       	ldi	r18, 0x10	; 16
    a79e:	30 e0       	ldi	r19, 0x00	; 0
    a7a0:	f9 01       	movw	r30, r18
    a7a2:	21 81       	ldd	r18, Z+1	; 0x01
    a7a4:	62 2f       	mov	r22, r18
    a7a6:	29 81       	ldd	r18, Y+1	; 0x01
    a7a8:	42 2f       	mov	r20, r18
    a7aa:	50 e0       	ldi	r21, 0x00	; 0
    a7ac:	21 e0       	ldi	r18, 0x01	; 1
    a7ae:	30 e0       	ldi	r19, 0x00	; 0
    a7b0:	02 c0       	rjmp	.+4      	; 0xa7b6 <PORTE_set_pin_level+0x5c>
    a7b2:	22 0f       	add	r18, r18
    a7b4:	33 1f       	adc	r19, r19
    a7b6:	4a 95       	dec	r20
    a7b8:	e2 f7       	brpl	.-8      	; 0xa7b2 <PORTE_set_pin_level+0x58>
    a7ba:	20 95       	com	r18
    a7bc:	26 23       	and	r18, r22
    a7be:	fc 01       	movw	r30, r24
    a7c0:	21 83       	std	Z+1, r18	; 0x01
    a7c2:	00 00       	nop
    a7c4:	0f 90       	pop	r0
    a7c6:	0f 90       	pop	r0
    a7c8:	df 91       	pop	r29
    a7ca:	cf 91       	pop	r28
    a7cc:	08 95       	ret

0000a7ce <PC0_set_dir>:
    a7ce:	cf 93       	push	r28
    a7d0:	df 93       	push	r29
    a7d2:	1f 92       	push	r1
    a7d4:	cd b7       	in	r28, 0x3d	; 61
    a7d6:	de b7       	in	r29, 0x3e	; 62
    a7d8:	89 83       	std	Y+1, r24	; 0x01
    a7da:	69 81       	ldd	r22, Y+1	; 0x01
    a7dc:	80 e0       	ldi	r24, 0x00	; 0
    a7de:	0e 94 9a 52 	call	0xa534	; 0xa534 <PORTC_set_pin_dir>
    a7e2:	00 00       	nop
    a7e4:	0f 90       	pop	r0
    a7e6:	df 91       	pop	r29
    a7e8:	cf 91       	pop	r28
    a7ea:	08 95       	ret

0000a7ec <PC0_set_level>:
    a7ec:	cf 93       	push	r28
    a7ee:	df 93       	push	r29
    a7f0:	1f 92       	push	r1
    a7f2:	cd b7       	in	r28, 0x3d	; 61
    a7f4:	de b7       	in	r29, 0x3e	; 62
    a7f6:	89 83       	std	Y+1, r24	; 0x01
    a7f8:	69 81       	ldd	r22, Y+1	; 0x01
    a7fa:	80 e0       	ldi	r24, 0x00	; 0
    a7fc:	0e 94 ee 52 	call	0xa5dc	; 0xa5dc <PORTC_set_pin_level>
    a800:	00 00       	nop
    a802:	0f 90       	pop	r0
    a804:	df 91       	pop	r29
    a806:	cf 91       	pop	r28
    a808:	08 95       	ret

0000a80a <PC1_set_pull_mode>:
    a80a:	cf 93       	push	r28
    a80c:	df 93       	push	r29
    a80e:	1f 92       	push	r1
    a810:	cd b7       	in	r28, 0x3d	; 61
    a812:	de b7       	in	r29, 0x3e	; 62
    a814:	89 83       	std	Y+1, r24	; 0x01
    a816:	69 81       	ldd	r22, Y+1	; 0x01
    a818:	81 e0       	ldi	r24, 0x01	; 1
    a81a:	0e 94 69 52 	call	0xa4d2	; 0xa4d2 <PORTC_set_pin_pull_mode>
    a81e:	00 00       	nop
    a820:	0f 90       	pop	r0
    a822:	df 91       	pop	r29
    a824:	cf 91       	pop	r28
    a826:	08 95       	ret

0000a828 <PC1_set_dir>:
    a828:	cf 93       	push	r28
    a82a:	df 93       	push	r29
    a82c:	1f 92       	push	r1
    a82e:	cd b7       	in	r28, 0x3d	; 61
    a830:	de b7       	in	r29, 0x3e	; 62
    a832:	89 83       	std	Y+1, r24	; 0x01
    a834:	69 81       	ldd	r22, Y+1	; 0x01
    a836:	81 e0       	ldi	r24, 0x01	; 1
    a838:	0e 94 9a 52 	call	0xa534	; 0xa534 <PORTC_set_pin_dir>
    a83c:	00 00       	nop
    a83e:	0f 90       	pop	r0
    a840:	df 91       	pop	r29
    a842:	cf 91       	pop	r28
    a844:	08 95       	ret

0000a846 <PE0_set_dir>:
    a846:	cf 93       	push	r28
    a848:	df 93       	push	r29
    a84a:	1f 92       	push	r1
    a84c:	cd b7       	in	r28, 0x3d	; 61
    a84e:	de b7       	in	r29, 0x3e	; 62
    a850:	89 83       	std	Y+1, r24	; 0x01
    a852:	69 81       	ldd	r22, Y+1	; 0x01
    a854:	80 e0       	ldi	r24, 0x00	; 0
    a856:	0e 94 59 53 	call	0xa6b2	; 0xa6b2 <PORTE_set_pin_dir>
    a85a:	00 00       	nop
    a85c:	0f 90       	pop	r0
    a85e:	df 91       	pop	r29
    a860:	cf 91       	pop	r28
    a862:	08 95       	ret

0000a864 <PE0_set_level>:
    a864:	cf 93       	push	r28
    a866:	df 93       	push	r29
    a868:	1f 92       	push	r1
    a86a:	cd b7       	in	r28, 0x3d	; 61
    a86c:	de b7       	in	r29, 0x3e	; 62
    a86e:	89 83       	std	Y+1, r24	; 0x01
    a870:	69 81       	ldd	r22, Y+1	; 0x01
    a872:	80 e0       	ldi	r24, 0x00	; 0
    a874:	0e 94 ad 53 	call	0xa75a	; 0xa75a <PORTE_set_pin_level>
    a878:	00 00       	nop
    a87a:	0f 90       	pop	r0
    a87c:	df 91       	pop	r29
    a87e:	cf 91       	pop	r28
    a880:	08 95       	ret

0000a882 <PE1_set_pull_mode>:
    a882:	cf 93       	push	r28
    a884:	df 93       	push	r29
    a886:	1f 92       	push	r1
    a888:	cd b7       	in	r28, 0x3d	; 61
    a88a:	de b7       	in	r29, 0x3e	; 62
    a88c:	89 83       	std	Y+1, r24	; 0x01
    a88e:	69 81       	ldd	r22, Y+1	; 0x01
    a890:	81 e0       	ldi	r24, 0x01	; 1
    a892:	0e 94 28 53 	call	0xa650	; 0xa650 <PORTE_set_pin_pull_mode>
    a896:	00 00       	nop
    a898:	0f 90       	pop	r0
    a89a:	df 91       	pop	r29
    a89c:	cf 91       	pop	r28
    a89e:	08 95       	ret

0000a8a0 <PE1_set_dir>:
    a8a0:	cf 93       	push	r28
    a8a2:	df 93       	push	r29
    a8a4:	1f 92       	push	r1
    a8a6:	cd b7       	in	r28, 0x3d	; 61
    a8a8:	de b7       	in	r29, 0x3e	; 62
    a8aa:	89 83       	std	Y+1, r24	; 0x01
    a8ac:	69 81       	ldd	r22, Y+1	; 0x01
    a8ae:	81 e0       	ldi	r24, 0x01	; 1
    a8b0:	0e 94 59 53 	call	0xa6b2	; 0xa6b2 <PORTE_set_pin_dir>
    a8b4:	00 00       	nop
    a8b6:	0f 90       	pop	r0
    a8b8:	df 91       	pop	r29
    a8ba:	cf 91       	pop	r28
    a8bc:	08 95       	ret

0000a8be <_Z18nextFullLBTxBufferv>:
    a8be:	cf 93       	push	r28
    a8c0:	df 93       	push	r29
    a8c2:	00 d0       	rcall	.+0      	; 0xa8c4 <_Z18nextFullLBTxBufferv+0x6>
    a8c4:	cd b7       	in	r28, 0x3d	; 61
    a8c6:	de b7       	in	r29, 0x3e	; 62
    a8c8:	81 e0       	ldi	r24, 0x01	; 1
    a8ca:	89 83       	std	Y+1, r24	; 0x01
    a8cc:	1a 82       	std	Y+2, r1	; 0x02
    a8ce:	80 91 50 47 	lds	r24, 0x4750	; 0x804750 <_ZZ18nextFullLBTxBuffervE11bufferIndex>
    a8d2:	28 2f       	mov	r18, r24
    a8d4:	30 e0       	ldi	r19, 0x00	; 0
    a8d6:	42 e3       	ldi	r20, 0x32	; 50
    a8d8:	42 9f       	mul	r20, r18
    a8da:	c0 01       	movw	r24, r0
    a8dc:	43 9f       	mul	r20, r19
    a8de:	90 0d       	add	r25, r0
    a8e0:	11 24       	eor	r1, r1
    a8e2:	8e 53       	subi	r24, 0x3E	; 62
    a8e4:	9a 4b       	sbci	r25, 0xBA	; 186
    a8e6:	fc 01       	movw	r30, r24
    a8e8:	80 81       	ld	r24, Z
    a8ea:	88 23       	and	r24, r24
    a8ec:	c1 f4       	brne	.+48     	; 0xa91e <_Z18nextFullLBTxBufferv+0x60>
    a8ee:	8a 81       	ldd	r24, Y+2	; 0x02
    a8f0:	8f 5f       	subi	r24, 0xFF	; 255
    a8f2:	8a 83       	std	Y+2, r24	; 0x02
    a8f4:	81 e0       	ldi	r24, 0x01	; 1
    a8f6:	9a 81       	ldd	r25, Y+2	; 0x02
    a8f8:	94 30       	cpi	r25, 0x04	; 4
    a8fa:	08 f4       	brcc	.+2      	; 0xa8fe <_Z18nextFullLBTxBufferv+0x40>
    a8fc:	80 e0       	ldi	r24, 0x00	; 0
    a8fe:	88 23       	and	r24, r24
    a900:	11 f0       	breq	.+4      	; 0xa906 <_Z18nextFullLBTxBufferv+0x48>
    a902:	19 82       	std	Y+1, r1	; 0x01
    a904:	0c c0       	rjmp	.+24     	; 0xa91e <_Z18nextFullLBTxBufferv+0x60>
    a906:	80 91 50 47 	lds	r24, 0x4750	; 0x804750 <_ZZ18nextFullLBTxBuffervE11bufferIndex>
    a90a:	8f 5f       	subi	r24, 0xFF	; 255
    a90c:	80 93 50 47 	sts	0x4750, r24	; 0x804750 <_ZZ18nextFullLBTxBuffervE11bufferIndex>
    a910:	80 91 50 47 	lds	r24, 0x4750	; 0x804750 <_ZZ18nextFullLBTxBuffervE11bufferIndex>
    a914:	84 30       	cpi	r24, 0x04	; 4
    a916:	d8 f2       	brcs	.-74     	; 0xa8ce <_Z18nextFullLBTxBufferv+0x10>
    a918:	10 92 50 47 	sts	0x4750, r1	; 0x804750 <_ZZ18nextFullLBTxBuffervE11bufferIndex>
    a91c:	d8 cf       	rjmp	.-80     	; 0xa8ce <_Z18nextFullLBTxBufferv+0x10>
    a91e:	89 81       	ldd	r24, Y+1	; 0x01
    a920:	88 23       	and	r24, r24
    a922:	69 f0       	breq	.+26     	; 0xa93e <_Z18nextFullLBTxBufferv+0x80>
    a924:	80 91 50 47 	lds	r24, 0x4750	; 0x804750 <_ZZ18nextFullLBTxBuffervE11bufferIndex>
    a928:	28 2f       	mov	r18, r24
    a92a:	30 e0       	ldi	r19, 0x00	; 0
    a92c:	42 e3       	ldi	r20, 0x32	; 50
    a92e:	42 9f       	mul	r20, r18
    a930:	c0 01       	movw	r24, r0
    a932:	43 9f       	mul	r20, r19
    a934:	90 0d       	add	r25, r0
    a936:	11 24       	eor	r1, r1
    a938:	8e 53       	subi	r24, 0x3E	; 62
    a93a:	9a 4b       	sbci	r25, 0xBA	; 186
    a93c:	02 c0       	rjmp	.+4      	; 0xa942 <_Z18nextFullLBTxBufferv+0x84>
    a93e:	80 e0       	ldi	r24, 0x00	; 0
    a940:	90 e0       	ldi	r25, 0x00	; 0
    a942:	0f 90       	pop	r0
    a944:	0f 90       	pop	r0
    a946:	df 91       	pop	r29
    a948:	cf 91       	pop	r28
    a94a:	08 95       	ret

0000a94c <_Z19nextEmptyLBTxBufferv>:
    a94c:	cf 93       	push	r28
    a94e:	df 93       	push	r29
    a950:	00 d0       	rcall	.+0      	; 0xa952 <_Z19nextEmptyLBTxBufferv+0x6>
    a952:	cd b7       	in	r28, 0x3d	; 61
    a954:	de b7       	in	r29, 0x3e	; 62
    a956:	81 e0       	ldi	r24, 0x01	; 1
    a958:	89 83       	std	Y+1, r24	; 0x01
    a95a:	1a 82       	std	Y+2, r1	; 0x02
    a95c:	80 91 51 47 	lds	r24, 0x4751	; 0x804751 <_ZZ19nextEmptyLBTxBuffervE11bufferIndex>
    a960:	28 2f       	mov	r18, r24
    a962:	30 e0       	ldi	r19, 0x00	; 0
    a964:	42 e3       	ldi	r20, 0x32	; 50
    a966:	42 9f       	mul	r20, r18
    a968:	c0 01       	movw	r24, r0
    a96a:	43 9f       	mul	r20, r19
    a96c:	90 0d       	add	r25, r0
    a96e:	11 24       	eor	r1, r1
    a970:	8e 53       	subi	r24, 0x3E	; 62
    a972:	9a 4b       	sbci	r25, 0xBA	; 186
    a974:	fc 01       	movw	r30, r24
    a976:	80 81       	ld	r24, Z
    a978:	88 23       	and	r24, r24
    a97a:	c1 f0       	breq	.+48     	; 0xa9ac <_Z19nextEmptyLBTxBufferv+0x60>
    a97c:	8a 81       	ldd	r24, Y+2	; 0x02
    a97e:	8f 5f       	subi	r24, 0xFF	; 255
    a980:	8a 83       	std	Y+2, r24	; 0x02
    a982:	81 e0       	ldi	r24, 0x01	; 1
    a984:	9a 81       	ldd	r25, Y+2	; 0x02
    a986:	94 30       	cpi	r25, 0x04	; 4
    a988:	08 f4       	brcc	.+2      	; 0xa98c <_Z19nextEmptyLBTxBufferv+0x40>
    a98a:	80 e0       	ldi	r24, 0x00	; 0
    a98c:	88 23       	and	r24, r24
    a98e:	11 f0       	breq	.+4      	; 0xa994 <_Z19nextEmptyLBTxBufferv+0x48>
    a990:	19 82       	std	Y+1, r1	; 0x01
    a992:	0c c0       	rjmp	.+24     	; 0xa9ac <_Z19nextEmptyLBTxBufferv+0x60>
    a994:	80 91 51 47 	lds	r24, 0x4751	; 0x804751 <_ZZ19nextEmptyLBTxBuffervE11bufferIndex>
    a998:	8f 5f       	subi	r24, 0xFF	; 255
    a99a:	80 93 51 47 	sts	0x4751, r24	; 0x804751 <_ZZ19nextEmptyLBTxBuffervE11bufferIndex>
    a99e:	80 91 51 47 	lds	r24, 0x4751	; 0x804751 <_ZZ19nextEmptyLBTxBuffervE11bufferIndex>
    a9a2:	84 30       	cpi	r24, 0x04	; 4
    a9a4:	d8 f2       	brcs	.-74     	; 0xa95c <_Z19nextEmptyLBTxBufferv+0x10>
    a9a6:	10 92 51 47 	sts	0x4751, r1	; 0x804751 <_ZZ19nextEmptyLBTxBuffervE11bufferIndex>
    a9aa:	d8 cf       	rjmp	.-80     	; 0xa95c <_Z19nextEmptyLBTxBufferv+0x10>
    a9ac:	89 81       	ldd	r24, Y+1	; 0x01
    a9ae:	88 23       	and	r24, r24
    a9b0:	69 f0       	breq	.+26     	; 0xa9cc <_Z19nextEmptyLBTxBufferv+0x80>
    a9b2:	80 91 51 47 	lds	r24, 0x4751	; 0x804751 <_ZZ19nextEmptyLBTxBuffervE11bufferIndex>
    a9b6:	28 2f       	mov	r18, r24
    a9b8:	30 e0       	ldi	r19, 0x00	; 0
    a9ba:	42 e3       	ldi	r20, 0x32	; 50
    a9bc:	42 9f       	mul	r20, r18
    a9be:	c0 01       	movw	r24, r0
    a9c0:	43 9f       	mul	r20, r19
    a9c2:	90 0d       	add	r25, r0
    a9c4:	11 24       	eor	r1, r1
    a9c6:	8e 53       	subi	r24, 0x3E	; 62
    a9c8:	9a 4b       	sbci	r25, 0xBA	; 186
    a9ca:	02 c0       	rjmp	.+4      	; 0xa9d0 <_Z19nextEmptyLBTxBufferv+0x84>
    a9cc:	80 e0       	ldi	r24, 0x00	; 0
    a9ce:	90 e0       	ldi	r25, 0x00	; 0
    a9d0:	0f 90       	pop	r0
    a9d2:	0f 90       	pop	r0
    a9d4:	df 91       	pop	r29
    a9d6:	cf 91       	pop	r28
    a9d8:	08 95       	ret

0000a9da <_Z19nextEmptyLBRxBufferv>:
    a9da:	cf 93       	push	r28
    a9dc:	df 93       	push	r29
    a9de:	00 d0       	rcall	.+0      	; 0xa9e0 <_Z19nextEmptyLBRxBufferv+0x6>
    a9e0:	cd b7       	in	r28, 0x3d	; 61
    a9e2:	de b7       	in	r29, 0x3e	; 62
    a9e4:	81 e0       	ldi	r24, 0x01	; 1
    a9e6:	89 83       	std	Y+1, r24	; 0x01
    a9e8:	1a 82       	std	Y+2, r1	; 0x02
    a9ea:	80 91 52 47 	lds	r24, 0x4752	; 0x804752 <_ZZ19nextEmptyLBRxBuffervE11bufferIndex>
    a9ee:	28 2f       	mov	r18, r24
    a9f0:	30 e0       	ldi	r19, 0x00	; 0
    a9f2:	42 e4       	ldi	r20, 0x42	; 66
    a9f4:	42 9f       	mul	r20, r18
    a9f6:	c0 01       	movw	r24, r0
    a9f8:	43 9f       	mul	r20, r19
    a9fa:	90 0d       	add	r25, r0
    a9fc:	11 24       	eor	r1, r1
    a9fe:	85 57       	subi	r24, 0x75	; 117
    aa00:	99 4b       	sbci	r25, 0xB9	; 185
    aa02:	fc 01       	movw	r30, r24
    aa04:	80 81       	ld	r24, Z
    aa06:	91 81       	ldd	r25, Z+1	; 0x01
    aa08:	89 2b       	or	r24, r25
    aa0a:	c1 f0       	breq	.+48     	; 0xaa3c <_Z19nextEmptyLBRxBufferv+0x62>
    aa0c:	8a 81       	ldd	r24, Y+2	; 0x02
    aa0e:	8f 5f       	subi	r24, 0xFF	; 255
    aa10:	8a 83       	std	Y+2, r24	; 0x02
    aa12:	81 e0       	ldi	r24, 0x01	; 1
    aa14:	9a 81       	ldd	r25, Y+2	; 0x02
    aa16:	93 30       	cpi	r25, 0x03	; 3
    aa18:	08 f4       	brcc	.+2      	; 0xaa1c <_Z19nextEmptyLBRxBufferv+0x42>
    aa1a:	80 e0       	ldi	r24, 0x00	; 0
    aa1c:	88 23       	and	r24, r24
    aa1e:	11 f0       	breq	.+4      	; 0xaa24 <_Z19nextEmptyLBRxBufferv+0x4a>
    aa20:	19 82       	std	Y+1, r1	; 0x01
    aa22:	0c c0       	rjmp	.+24     	; 0xaa3c <_Z19nextEmptyLBRxBufferv+0x62>
    aa24:	80 91 52 47 	lds	r24, 0x4752	; 0x804752 <_ZZ19nextEmptyLBRxBuffervE11bufferIndex>
    aa28:	8f 5f       	subi	r24, 0xFF	; 255
    aa2a:	80 93 52 47 	sts	0x4752, r24	; 0x804752 <_ZZ19nextEmptyLBRxBuffervE11bufferIndex>
    aa2e:	80 91 52 47 	lds	r24, 0x4752	; 0x804752 <_ZZ19nextEmptyLBRxBuffervE11bufferIndex>
    aa32:	83 30       	cpi	r24, 0x03	; 3
    aa34:	d0 f2       	brcs	.-76     	; 0xa9ea <_Z19nextEmptyLBRxBufferv+0x10>
    aa36:	10 92 52 47 	sts	0x4752, r1	; 0x804752 <_ZZ19nextEmptyLBRxBuffervE11bufferIndex>
    aa3a:	d7 cf       	rjmp	.-82     	; 0xa9ea <_Z19nextEmptyLBRxBufferv+0x10>
    aa3c:	89 81       	ldd	r24, Y+1	; 0x01
    aa3e:	88 23       	and	r24, r24
    aa40:	69 f0       	breq	.+26     	; 0xaa5c <_Z19nextEmptyLBRxBufferv+0x82>
    aa42:	80 91 52 47 	lds	r24, 0x4752	; 0x804752 <_ZZ19nextEmptyLBRxBuffervE11bufferIndex>
    aa46:	28 2f       	mov	r18, r24
    aa48:	30 e0       	ldi	r19, 0x00	; 0
    aa4a:	42 e4       	ldi	r20, 0x42	; 66
    aa4c:	42 9f       	mul	r20, r18
    aa4e:	c0 01       	movw	r24, r0
    aa50:	43 9f       	mul	r20, r19
    aa52:	90 0d       	add	r25, r0
    aa54:	11 24       	eor	r1, r1
    aa56:	86 57       	subi	r24, 0x76	; 118
    aa58:	99 4b       	sbci	r25, 0xB9	; 185
    aa5a:	02 c0       	rjmp	.+4      	; 0xaa60 <_Z19nextEmptyLBRxBufferv+0x86>
    aa5c:	80 e0       	ldi	r24, 0x00	; 0
    aa5e:	90 e0       	ldi	r25, 0x00	; 0
    aa60:	0f 90       	pop	r0
    aa62:	0f 90       	pop	r0
    aa64:	df 91       	pop	r29
    aa66:	cf 91       	pop	r28
    aa68:	08 95       	ret

0000aa6a <_Z18nextFullLBRxBufferv>:
    aa6a:	cf 93       	push	r28
    aa6c:	df 93       	push	r29
    aa6e:	00 d0       	rcall	.+0      	; 0xaa70 <_Z18nextFullLBRxBufferv+0x6>
    aa70:	cd b7       	in	r28, 0x3d	; 61
    aa72:	de b7       	in	r29, 0x3e	; 62
    aa74:	81 e0       	ldi	r24, 0x01	; 1
    aa76:	89 83       	std	Y+1, r24	; 0x01
    aa78:	1a 82       	std	Y+2, r1	; 0x02
    aa7a:	80 91 53 47 	lds	r24, 0x4753	; 0x804753 <_ZZ18nextFullLBRxBuffervE11bufferIndex>
    aa7e:	28 2f       	mov	r18, r24
    aa80:	30 e0       	ldi	r19, 0x00	; 0
    aa82:	42 e4       	ldi	r20, 0x42	; 66
    aa84:	42 9f       	mul	r20, r18
    aa86:	c0 01       	movw	r24, r0
    aa88:	43 9f       	mul	r20, r19
    aa8a:	90 0d       	add	r25, r0
    aa8c:	11 24       	eor	r1, r1
    aa8e:	85 57       	subi	r24, 0x75	; 117
    aa90:	99 4b       	sbci	r25, 0xB9	; 185
    aa92:	fc 01       	movw	r30, r24
    aa94:	80 81       	ld	r24, Z
    aa96:	91 81       	ldd	r25, Z+1	; 0x01
    aa98:	89 2b       	or	r24, r25
    aa9a:	c1 f4       	brne	.+48     	; 0xaacc <_Z18nextFullLBRxBufferv+0x62>
    aa9c:	8a 81       	ldd	r24, Y+2	; 0x02
    aa9e:	8f 5f       	subi	r24, 0xFF	; 255
    aaa0:	8a 83       	std	Y+2, r24	; 0x02
    aaa2:	81 e0       	ldi	r24, 0x01	; 1
    aaa4:	9a 81       	ldd	r25, Y+2	; 0x02
    aaa6:	93 30       	cpi	r25, 0x03	; 3
    aaa8:	08 f4       	brcc	.+2      	; 0xaaac <_Z18nextFullLBRxBufferv+0x42>
    aaaa:	80 e0       	ldi	r24, 0x00	; 0
    aaac:	88 23       	and	r24, r24
    aaae:	11 f0       	breq	.+4      	; 0xaab4 <_Z18nextFullLBRxBufferv+0x4a>
    aab0:	19 82       	std	Y+1, r1	; 0x01
    aab2:	0c c0       	rjmp	.+24     	; 0xaacc <_Z18nextFullLBRxBufferv+0x62>
    aab4:	80 91 53 47 	lds	r24, 0x4753	; 0x804753 <_ZZ18nextFullLBRxBuffervE11bufferIndex>
    aab8:	8f 5f       	subi	r24, 0xFF	; 255
    aaba:	80 93 53 47 	sts	0x4753, r24	; 0x804753 <_ZZ18nextFullLBRxBuffervE11bufferIndex>
    aabe:	80 91 53 47 	lds	r24, 0x4753	; 0x804753 <_ZZ18nextFullLBRxBuffervE11bufferIndex>
    aac2:	83 30       	cpi	r24, 0x03	; 3
    aac4:	d0 f2       	brcs	.-76     	; 0xaa7a <_Z18nextFullLBRxBufferv+0x10>
    aac6:	10 92 53 47 	sts	0x4753, r1	; 0x804753 <_ZZ18nextFullLBRxBuffervE11bufferIndex>
    aaca:	d7 cf       	rjmp	.-82     	; 0xaa7a <_Z18nextFullLBRxBufferv+0x10>
    aacc:	89 81       	ldd	r24, Y+1	; 0x01
    aace:	88 23       	and	r24, r24
    aad0:	69 f0       	breq	.+26     	; 0xaaec <_Z18nextFullLBRxBufferv+0x82>
    aad2:	80 91 53 47 	lds	r24, 0x4753	; 0x804753 <_ZZ18nextFullLBRxBuffervE11bufferIndex>
    aad6:	28 2f       	mov	r18, r24
    aad8:	30 e0       	ldi	r19, 0x00	; 0
    aada:	42 e4       	ldi	r20, 0x42	; 66
    aadc:	42 9f       	mul	r20, r18
    aade:	c0 01       	movw	r24, r0
    aae0:	43 9f       	mul	r20, r19
    aae2:	90 0d       	add	r25, r0
    aae4:	11 24       	eor	r1, r1
    aae6:	86 57       	subi	r24, 0x76	; 118
    aae8:	99 4b       	sbci	r25, 0xB9	; 185
    aaea:	02 c0       	rjmp	.+4      	; 0xaaf0 <_Z18nextFullLBRxBufferv+0x86>
    aaec:	80 e0       	ldi	r24, 0x00	; 0
    aaee:	90 e0       	ldi	r25, 0x00	; 0
    aaf0:	0f 90       	pop	r0
    aaf2:	0f 90       	pop	r0
    aaf4:	df 91       	pop	r29
    aaf6:	cf 91       	pop	r28
    aaf8:	08 95       	ret

0000aafa <_Z19linkbusTxInProgressv>:
    aafa:	cf 93       	push	r28
    aafc:	df 93       	push	r29
    aafe:	cd b7       	in	r28, 0x3d	; 61
    ab00:	de b7       	in	r29, 0x3e	; 62
    ab02:	80 91 c1 45 	lds	r24, 0x45C1	; 0x8045c1 <_ZL17linkbus_tx_active>
    ab06:	df 91       	pop	r29
    ab08:	cf 91       	pop	r28
    ab0a:	08 95       	ret

0000ab0c <_ZL16linkbus_start_txv>:
    ab0c:	cf 93       	push	r28
    ab0e:	df 93       	push	r29
    ab10:	1f 92       	push	r1
    ab12:	cd b7       	in	r28, 0x3d	; 61
    ab14:	de b7       	in	r29, 0x3e	; 62
    ab16:	90 91 c1 45 	lds	r25, 0x45C1	; 0x8045c1 <_ZL17linkbus_tx_active>
    ab1a:	81 e0       	ldi	r24, 0x01	; 1
    ab1c:	89 27       	eor	r24, r25
    ab1e:	89 83       	std	Y+1, r24	; 0x01
    ab20:	89 81       	ldd	r24, Y+1	; 0x01
    ab22:	88 23       	and	r24, r24
    ab24:	61 f0       	breq	.+24     	; 0xab3e <_ZL16linkbus_start_txv+0x32>
    ab26:	81 e0       	ldi	r24, 0x01	; 1
    ab28:	80 93 c1 45 	sts	0x45C1, r24	; 0x8045c1 <_ZL17linkbus_tx_active>
    ab2c:	80 91 44 40 	lds	r24, 0x4044	; 0x804044 <g_linkbus_usart_number>
    ab30:	84 30       	cpi	r24, 0x04	; 4
    ab32:	19 f4       	brne	.+6      	; 0xab3a <_ZL16linkbus_start_txv+0x2e>
    ab34:	0e 94 ce 71 	call	0xe39c	; 0xe39c <USART4_enable_tx>
    ab38:	02 c0       	rjmp	.+4      	; 0xab3e <_ZL16linkbus_start_txv+0x32>
    ab3a:	0e 94 2c 71 	call	0xe258	; 0xe258 <USART1_enable_tx>
    ab3e:	89 81       	ldd	r24, Y+1	; 0x01
    ab40:	0f 90       	pop	r0
    ab42:	df 91       	pop	r29
    ab44:	cf 91       	pop	r28
    ab46:	08 95       	ret

0000ab48 <_Z14linkbus_end_txv>:
    ab48:	cf 93       	push	r28
    ab4a:	df 93       	push	r29
    ab4c:	cd b7       	in	r28, 0x3d	; 61
    ab4e:	de b7       	in	r29, 0x3e	; 62
    ab50:	80 91 c1 45 	lds	r24, 0x45C1	; 0x8045c1 <_ZL17linkbus_tx_active>
    ab54:	88 23       	and	r24, r24
    ab56:	c9 f0       	breq	.+50     	; 0xab8a <_Z14linkbus_end_txv+0x42>
    ab58:	80 91 44 40 	lds	r24, 0x4044	; 0x804044 <g_linkbus_usart_number>
    ab5c:	88 23       	and	r24, r24
    ab5e:	51 f4       	brne	.+20     	; 0xab74 <_Z14linkbus_end_txv+0x2c>
    ab60:	80 e8       	ldi	r24, 0x80	; 128
    ab62:	98 e0       	ldi	r25, 0x08	; 8
    ab64:	20 e8       	ldi	r18, 0x80	; 128
    ab66:	38 e0       	ldi	r19, 0x08	; 8
    ab68:	f9 01       	movw	r30, r18
    ab6a:	25 81       	ldd	r18, Z+5	; 0x05
    ab6c:	2f 7d       	andi	r18, 0xDF	; 223
    ab6e:	fc 01       	movw	r30, r24
    ab70:	25 83       	std	Z+5, r18	; 0x05
    ab72:	09 c0       	rjmp	.+18     	; 0xab86 <_Z14linkbus_end_txv+0x3e>
    ab74:	80 e2       	ldi	r24, 0x20	; 32
    ab76:	98 e0       	ldi	r25, 0x08	; 8
    ab78:	20 e2       	ldi	r18, 0x20	; 32
    ab7a:	38 e0       	ldi	r19, 0x08	; 8
    ab7c:	f9 01       	movw	r30, r18
    ab7e:	25 81       	ldd	r18, Z+5	; 0x05
    ab80:	2f 7d       	andi	r18, 0xDF	; 223
    ab82:	fc 01       	movw	r30, r24
    ab84:	25 83       	std	Z+5, r18	; 0x05
    ab86:	10 92 c1 45 	sts	0x45C1, r1	; 0x8045c1 <_ZL17linkbus_tx_active>
    ab8a:	00 00       	nop
    ab8c:	df 91       	pop	r29
    ab8e:	cf 91       	pop	r28
    ab90:	08 95       	ret

0000ab92 <_ZL21USART1_initializationm>:
    ab92:	cf 93       	push	r28
    ab94:	df 93       	push	r29
    ab96:	00 d0       	rcall	.+0      	; 0xab98 <_ZL21USART1_initializationm+0x6>
    ab98:	00 d0       	rcall	.+0      	; 0xab9a <_ZL21USART1_initializationm+0x8>
    ab9a:	cd b7       	in	r28, 0x3d	; 61
    ab9c:	de b7       	in	r29, 0x3e	; 62
    ab9e:	69 83       	std	Y+1, r22	; 0x01
    aba0:	7a 83       	std	Y+2, r23	; 0x02
    aba2:	8b 83       	std	Y+3, r24	; 0x03
    aba4:	9c 83       	std	Y+4, r25	; 0x04
    aba6:	80 e0       	ldi	r24, 0x00	; 0
    aba8:	0e 94 14 54 	call	0xa828	; 0xa828 <PC1_set_dir>
    abac:	80 e0       	ldi	r24, 0x00	; 0
    abae:	0e 94 05 54 	call	0xa80a	; 0xa80a <PC1_set_pull_mode>
    abb2:	81 e0       	ldi	r24, 0x01	; 1
    abb4:	0e 94 e7 53 	call	0xa7ce	; 0xa7ce <PC0_set_dir>
    abb8:	81 e0       	ldi	r24, 0x01	; 1
    abba:	0e 94 f6 53 	call	0xa7ec	; 0xa7ec <PC0_set_level>
    abbe:	89 81       	ldd	r24, Y+1	; 0x01
    abc0:	9a 81       	ldd	r25, Y+2	; 0x02
    abc2:	ab 81       	ldd	r26, Y+3	; 0x03
    abc4:	bc 81       	ldd	r27, Y+4	; 0x04
    abc6:	40 e0       	ldi	r20, 0x00	; 0
    abc8:	bc 01       	movw	r22, r24
    abca:	cd 01       	movw	r24, r26
    abcc:	0e 94 b9 70 	call	0xe172	; 0xe172 <USART1_init>
    abd0:	00 00       	nop
    abd2:	24 96       	adiw	r28, 0x04	; 4
    abd4:	cd bf       	out	0x3d, r28	; 61
    abd6:	de bf       	out	0x3e, r29	; 62
    abd8:	df 91       	pop	r29
    abda:	cf 91       	pop	r28
    abdc:	08 95       	ret

0000abde <_ZL21USART4_initializationm>:
    abde:	cf 93       	push	r28
    abe0:	df 93       	push	r29
    abe2:	00 d0       	rcall	.+0      	; 0xabe4 <_ZL21USART4_initializationm+0x6>
    abe4:	00 d0       	rcall	.+0      	; 0xabe6 <_ZL21USART4_initializationm+0x8>
    abe6:	cd b7       	in	r28, 0x3d	; 61
    abe8:	de b7       	in	r29, 0x3e	; 62
    abea:	69 83       	std	Y+1, r22	; 0x01
    abec:	7a 83       	std	Y+2, r23	; 0x02
    abee:	8b 83       	std	Y+3, r24	; 0x03
    abf0:	9c 83       	std	Y+4, r25	; 0x04
    abf2:	80 e0       	ldi	r24, 0x00	; 0
    abf4:	0e 94 50 54 	call	0xa8a0	; 0xa8a0 <PE1_set_dir>
    abf8:	80 e0       	ldi	r24, 0x00	; 0
    abfa:	0e 94 41 54 	call	0xa882	; 0xa882 <PE1_set_pull_mode>
    abfe:	81 e0       	ldi	r24, 0x01	; 1
    ac00:	0e 94 23 54 	call	0xa846	; 0xa846 <PE0_set_dir>
    ac04:	81 e0       	ldi	r24, 0x01	; 1
    ac06:	0e 94 32 54 	call	0xa864	; 0xa864 <PE0_set_level>
    ac0a:	89 81       	ldd	r24, Y+1	; 0x01
    ac0c:	9a 81       	ldd	r25, Y+2	; 0x02
    ac0e:	ab 81       	ldd	r26, Y+3	; 0x03
    ac10:	bc 81       	ldd	r27, Y+4	; 0x04
    ac12:	40 e0       	ldi	r20, 0x00	; 0
    ac14:	bc 01       	movw	r22, r24
    ac16:	cd 01       	movw	r24, r26
    ac18:	0e 94 62 71 	call	0xe2c4	; 0xe2c4 <USART4_init>
    ac1c:	00 00       	nop
    ac1e:	24 96       	adiw	r28, 0x04	; 4
    ac20:	cd bf       	out	0x3d, r28	; 61
    ac22:	de bf       	out	0x3e, r29	; 62
    ac24:	df 91       	pop	r29
    ac26:	cf 91       	pop	r28
    ac28:	08 95       	ret

0000ac2a <_Z12linkbus_initm14USART_Number_t>:
    ac2a:	cf 93       	push	r28
    ac2c:	df 93       	push	r29
    ac2e:	cd b7       	in	r28, 0x3d	; 61
    ac30:	de b7       	in	r29, 0x3e	; 62
    ac32:	27 97       	sbiw	r28, 0x07	; 7
    ac34:	cd bf       	out	0x3d, r28	; 61
    ac36:	de bf       	out	0x3e, r29	; 62
    ac38:	6b 83       	std	Y+3, r22	; 0x03
    ac3a:	7c 83       	std	Y+4, r23	; 0x04
    ac3c:	8d 83       	std	Y+5, r24	; 0x05
    ac3e:	9e 83       	std	Y+6, r25	; 0x06
    ac40:	4f 83       	std	Y+7, r20	; 0x07
    ac42:	46 ec       	ldi	r20, 0xC6	; 198
    ac44:	50 e0       	ldi	r21, 0x00	; 0
    ac46:	60 e0       	ldi	r22, 0x00	; 0
    ac48:	70 e0       	ldi	r23, 0x00	; 0
    ac4a:	8a e8       	ldi	r24, 0x8A	; 138
    ac4c:	96 e4       	ldi	r25, 0x46	; 70
    ac4e:	0e 94 c5 76 	call	0xed8a	; 0xed8a <memset>
    ac52:	19 82       	std	Y+1, r1	; 0x01
    ac54:	1a 82       	std	Y+2, r1	; 0x02
    ac56:	89 81       	ldd	r24, Y+1	; 0x01
    ac58:	9a 81       	ldd	r25, Y+2	; 0x02
    ac5a:	04 97       	sbiw	r24, 0x04	; 4
    ac5c:	94 f4       	brge	.+36     	; 0xac82 <_Z12linkbus_initm14USART_Number_t+0x58>
    ac5e:	29 81       	ldd	r18, Y+1	; 0x01
    ac60:	3a 81       	ldd	r19, Y+2	; 0x02
    ac62:	42 e3       	ldi	r20, 0x32	; 50
    ac64:	42 9f       	mul	r20, r18
    ac66:	c0 01       	movw	r24, r0
    ac68:	43 9f       	mul	r20, r19
    ac6a:	90 0d       	add	r25, r0
    ac6c:	11 24       	eor	r1, r1
    ac6e:	8e 53       	subi	r24, 0x3E	; 62
    ac70:	9a 4b       	sbci	r25, 0xBA	; 186
    ac72:	fc 01       	movw	r30, r24
    ac74:	10 82       	st	Z, r1
    ac76:	89 81       	ldd	r24, Y+1	; 0x01
    ac78:	9a 81       	ldd	r25, Y+2	; 0x02
    ac7a:	01 96       	adiw	r24, 0x01	; 1
    ac7c:	89 83       	std	Y+1, r24	; 0x01
    ac7e:	9a 83       	std	Y+2, r25	; 0x02
    ac80:	ea cf       	rjmp	.-44     	; 0xac56 <_Z12linkbus_initm14USART_Number_t+0x2c>
    ac82:	8f 81       	ldd	r24, Y+7	; 0x07
    ac84:	86 30       	cpi	r24, 0x06	; 6
    ac86:	21 f4       	brne	.+8      	; 0xac90 <_Z12linkbus_initm14USART_Number_t+0x66>
    ac88:	80 91 44 40 	lds	r24, 0x4044	; 0x804044 <g_linkbus_usart_number>
    ac8c:	87 30       	cpi	r24, 0x07	; 7
    ac8e:	b9 f4       	brne	.+46     	; 0xacbe <_Z12linkbus_initm14USART_Number_t+0x94>
    ac90:	8f 81       	ldd	r24, Y+7	; 0x07
    ac92:	84 30       	cpi	r24, 0x04	; 4
    ac94:	49 f4       	brne	.+18     	; 0xaca8 <_Z12linkbus_initm14USART_Number_t+0x7e>
    ac96:	8b 81       	ldd	r24, Y+3	; 0x03
    ac98:	9c 81       	ldd	r25, Y+4	; 0x04
    ac9a:	ad 81       	ldd	r26, Y+5	; 0x05
    ac9c:	be 81       	ldd	r27, Y+6	; 0x06
    ac9e:	bc 01       	movw	r22, r24
    aca0:	cd 01       	movw	r24, r26
    aca2:	0e 94 ef 55 	call	0xabde	; 0xabde <_ZL21USART4_initializationm>
    aca6:	08 c0       	rjmp	.+16     	; 0xacb8 <_Z12linkbus_initm14USART_Number_t+0x8e>
    aca8:	8b 81       	ldd	r24, Y+3	; 0x03
    acaa:	9c 81       	ldd	r25, Y+4	; 0x04
    acac:	ad 81       	ldd	r26, Y+5	; 0x05
    acae:	be 81       	ldd	r27, Y+6	; 0x06
    acb0:	bc 01       	movw	r22, r24
    acb2:	cd 01       	movw	r24, r26
    acb4:	0e 94 c9 55 	call	0xab92	; 0xab92 <_ZL21USART1_initializationm>
    acb8:	8f 81       	ldd	r24, Y+7	; 0x07
    acba:	80 93 44 40 	sts	0x4044, r24	; 0x804044 <g_linkbus_usart_number>
    acbe:	10 92 43 40 	sts	0x4043, r1	; 0x804043 <_ZL14g_bus_disabled>
    acc2:	00 00       	nop
    acc4:	27 96       	adiw	r28, 0x07	; 7
    acc6:	cd bf       	out	0x3d, r28	; 61
    acc8:	de bf       	out	0x3e, r29	; 62
    acca:	df 91       	pop	r29
    accc:	cf 91       	pop	r28
    acce:	08 95       	ret

0000acd0 <_Z15linkbus_disablev>:
    acd0:	cf 93       	push	r28
    acd2:	df 93       	push	r29
    acd4:	1f 92       	push	r1
    acd6:	cd b7       	in	r28, 0x3d	; 61
    acd8:	de b7       	in	r29, 0x3e	; 62
    acda:	81 e0       	ldi	r24, 0x01	; 1
    acdc:	80 93 43 40 	sts	0x4043, r24	; 0x804043 <_ZL14g_bus_disabled>
    ace0:	80 91 44 40 	lds	r24, 0x4044	; 0x804044 <g_linkbus_usart_number>
    ace4:	84 30       	cpi	r24, 0x04	; 4
    ace6:	19 f4       	brne	.+6      	; 0xacee <_Z15linkbus_disablev+0x1e>
    ace8:	0e 94 e8 71 	call	0xe3d0	; 0xe3d0 <USART4_disable>
    acec:	02 c0       	rjmp	.+4      	; 0xacf2 <_Z15linkbus_disablev+0x22>
    acee:	0e 94 46 71 	call	0xe28c	; 0xe28c <USART1_disable>
    acf2:	0e 94 a4 55 	call	0xab48	; 0xab48 <_Z14linkbus_end_txv>
    acf6:	46 ec       	ldi	r20, 0xC6	; 198
    acf8:	50 e0       	ldi	r21, 0x00	; 0
    acfa:	60 e0       	ldi	r22, 0x00	; 0
    acfc:	70 e0       	ldi	r23, 0x00	; 0
    acfe:	8a e8       	ldi	r24, 0x8A	; 138
    ad00:	96 e4       	ldi	r25, 0x46	; 70
    ad02:	0e 94 c5 76 	call	0xed8a	; 0xed8a <memset>
    ad06:	19 82       	std	Y+1, r1	; 0x01
    ad08:	89 81       	ldd	r24, Y+1	; 0x01
    ad0a:	84 30       	cpi	r24, 0x04	; 4
    ad0c:	88 f4       	brcc	.+34     	; 0xad30 <_Z15linkbus_disablev+0x60>
    ad0e:	89 81       	ldd	r24, Y+1	; 0x01
    ad10:	28 2f       	mov	r18, r24
    ad12:	30 e0       	ldi	r19, 0x00	; 0
    ad14:	42 e3       	ldi	r20, 0x32	; 50
    ad16:	42 9f       	mul	r20, r18
    ad18:	c0 01       	movw	r24, r0
    ad1a:	43 9f       	mul	r20, r19
    ad1c:	90 0d       	add	r25, r0
    ad1e:	11 24       	eor	r1, r1
    ad20:	8e 53       	subi	r24, 0x3E	; 62
    ad22:	9a 4b       	sbci	r25, 0xBA	; 186
    ad24:	fc 01       	movw	r30, r24
    ad26:	10 82       	st	Z, r1
    ad28:	89 81       	ldd	r24, Y+1	; 0x01
    ad2a:	8f 5f       	subi	r24, 0xFF	; 255
    ad2c:	89 83       	std	Y+1, r24	; 0x01
    ad2e:	ec cf       	rjmp	.-40     	; 0xad08 <_Z15linkbus_disablev+0x38>
    ad30:	00 00       	nop
    ad32:	0f 90       	pop	r0
    ad34:	df 91       	pop	r29
    ad36:	cf 91       	pop	r28
    ad38:	08 95       	ret

0000ad3a <_Z14linkbus_enablev>:
    ad3a:	cf 93       	push	r28
    ad3c:	df 93       	push	r29
    ad3e:	1f 92       	push	r1
    ad40:	cd b7       	in	r28, 0x3d	; 61
    ad42:	de b7       	in	r29, 0x3e	; 62
    ad44:	10 92 43 40 	sts	0x4043, r1	; 0x804043 <_ZL14g_bus_disabled>
    ad48:	80 91 44 40 	lds	r24, 0x4044	; 0x804044 <g_linkbus_usart_number>
    ad4c:	84 30       	cpi	r24, 0x04	; 4
    ad4e:	19 f4       	brne	.+6      	; 0xad56 <_Z14linkbus_enablev+0x1c>
    ad50:	0e 94 bd 71 	call	0xe37a	; 0xe37a <USART4_enable>
    ad54:	02 c0       	rjmp	.+4      	; 0xad5a <_Z14linkbus_enablev+0x20>
    ad56:	0e 94 1b 71 	call	0xe236	; 0xe236 <USART1_enable>
    ad5a:	46 ec       	ldi	r20, 0xC6	; 198
    ad5c:	50 e0       	ldi	r21, 0x00	; 0
    ad5e:	60 e0       	ldi	r22, 0x00	; 0
    ad60:	70 e0       	ldi	r23, 0x00	; 0
    ad62:	8a e8       	ldi	r24, 0x8A	; 138
    ad64:	96 e4       	ldi	r25, 0x46	; 70
    ad66:	0e 94 c5 76 	call	0xed8a	; 0xed8a <memset>
    ad6a:	19 82       	std	Y+1, r1	; 0x01
    ad6c:	89 81       	ldd	r24, Y+1	; 0x01
    ad6e:	84 30       	cpi	r24, 0x04	; 4
    ad70:	88 f4       	brcc	.+34     	; 0xad94 <_Z14linkbus_enablev+0x5a>
    ad72:	89 81       	ldd	r24, Y+1	; 0x01
    ad74:	28 2f       	mov	r18, r24
    ad76:	30 e0       	ldi	r19, 0x00	; 0
    ad78:	42 e3       	ldi	r20, 0x32	; 50
    ad7a:	42 9f       	mul	r20, r18
    ad7c:	c0 01       	movw	r24, r0
    ad7e:	43 9f       	mul	r20, r19
    ad80:	90 0d       	add	r25, r0
    ad82:	11 24       	eor	r1, r1
    ad84:	8e 53       	subi	r24, 0x3E	; 62
    ad86:	9a 4b       	sbci	r25, 0xBA	; 186
    ad88:	fc 01       	movw	r30, r24
    ad8a:	10 82       	st	Z, r1
    ad8c:	89 81       	ldd	r24, Y+1	; 0x01
    ad8e:	8f 5f       	subi	r24, 0xFF	; 255
    ad90:	89 83       	std	Y+1, r24	; 0x01
    ad92:	ec cf       	rjmp	.-40     	; 0xad6c <_Z14linkbus_enablev+0x32>
    ad94:	00 00       	nop
    ad96:	0f 90       	pop	r0
    ad98:	df 91       	pop	r29
    ad9a:	cf 91       	pop	r28
    ad9c:	08 95       	ret

0000ad9e <_Z12lb_send_textPc>:
    ad9e:	cf 93       	push	r28
    ada0:	df 93       	push	r29
    ada2:	cd b7       	in	r28, 0x3d	; 61
    ada4:	de b7       	in	r29, 0x3e	; 62
    ada6:	27 97       	sbiw	r28, 0x07	; 7
    ada8:	cd bf       	out	0x3d, r28	; 61
    adaa:	de bf       	out	0x3e, r29	; 62
    adac:	8e 83       	std	Y+6, r24	; 0x06
    adae:	9f 83       	std	Y+7, r25	; 0x07
    adb0:	81 e0       	ldi	r24, 0x01	; 1
    adb2:	89 83       	std	Y+1, r24	; 0x01
    adb4:	88 ec       	ldi	r24, 0xC8	; 200
    adb6:	90 e0       	ldi	r25, 0x00	; 0
    adb8:	8a 83       	std	Y+2, r24	; 0x02
    adba:	9b 83       	std	Y+3, r25	; 0x03
    adbc:	80 91 43 40 	lds	r24, 0x4043	; 0x804043 <_ZL14g_bus_disabled>
    adc0:	88 23       	and	r24, r24
    adc2:	11 f0       	breq	.+4      	; 0xadc8 <_Z12lb_send_textPc+0x2a>
    adc4:	89 81       	ldd	r24, Y+1	; 0x01
    adc6:	42 c0       	rjmp	.+132    	; 0xae4c <_Z12lb_send_textPc+0xae>
    adc8:	8e 81       	ldd	r24, Y+6	; 0x06
    adca:	9f 81       	ldd	r25, Y+7	; 0x07
    adcc:	89 2b       	or	r24, r25
    adce:	e9 f1       	breq	.+122    	; 0xae4a <_Z12lb_send_textPc+0xac>
    add0:	0e 94 a6 54 	call	0xa94c	; 0xa94c <_Z19nextEmptyLBTxBufferv>
    add4:	8c 83       	std	Y+4, r24	; 0x04
    add6:	9d 83       	std	Y+5, r25	; 0x05
    add8:	8c 81       	ldd	r24, Y+4	; 0x04
    adda:	9d 81       	ldd	r25, Y+5	; 0x05
    addc:	89 2b       	or	r24, r25
    adde:	01 f5       	brne	.+64     	; 0xae20 <_Z12lb_send_textPc+0x82>
    ade0:	8a 81       	ldd	r24, Y+2	; 0x02
    ade2:	9b 81       	ldd	r25, Y+3	; 0x03
    ade4:	89 2b       	or	r24, r25
    ade6:	e1 f0       	breq	.+56     	; 0xae20 <_Z12lb_send_textPc+0x82>
    ade8:	0e 94 7d 55 	call	0xaafa	; 0xaafa <_Z19linkbusTxInProgressv>
    adec:	88 23       	and	r24, r24
    adee:	31 f0       	breq	.+12     	; 0xadfc <_Z12lb_send_textPc+0x5e>
    adf0:	8a 81       	ldd	r24, Y+2	; 0x02
    adf2:	9b 81       	ldd	r25, Y+3	; 0x03
    adf4:	89 2b       	or	r24, r25
    adf6:	11 f0       	breq	.+4      	; 0xadfc <_Z12lb_send_textPc+0x5e>
    adf8:	81 e0       	ldi	r24, 0x01	; 1
    adfa:	01 c0       	rjmp	.+2      	; 0xadfe <_Z12lb_send_textPc+0x60>
    adfc:	80 e0       	ldi	r24, 0x00	; 0
    adfe:	88 23       	and	r24, r24
    ae00:	51 f0       	breq	.+20     	; 0xae16 <_Z12lb_send_textPc+0x78>
    ae02:	8a 81       	ldd	r24, Y+2	; 0x02
    ae04:	9b 81       	ldd	r25, Y+3	; 0x03
    ae06:	89 2b       	or	r24, r25
    ae08:	79 f3       	breq	.-34     	; 0xade8 <_Z12lb_send_textPc+0x4a>
    ae0a:	8a 81       	ldd	r24, Y+2	; 0x02
    ae0c:	9b 81       	ldd	r25, Y+3	; 0x03
    ae0e:	01 97       	sbiw	r24, 0x01	; 1
    ae10:	8a 83       	std	Y+2, r24	; 0x02
    ae12:	9b 83       	std	Y+3, r25	; 0x03
    ae14:	e9 cf       	rjmp	.-46     	; 0xade8 <_Z12lb_send_textPc+0x4a>
    ae16:	0e 94 a6 54 	call	0xa94c	; 0xa94c <_Z19nextEmptyLBTxBufferv>
    ae1a:	8c 83       	std	Y+4, r24	; 0x04
    ae1c:	9d 83       	std	Y+5, r25	; 0x05
    ae1e:	dc cf       	rjmp	.-72     	; 0xadd8 <_Z12lb_send_textPc+0x3a>
    ae20:	8c 81       	ldd	r24, Y+4	; 0x04
    ae22:	9d 81       	ldd	r25, Y+5	; 0x05
    ae24:	89 2b       	or	r24, r25
    ae26:	89 f0       	breq	.+34     	; 0xae4a <_Z12lb_send_textPc+0xac>
    ae28:	8f 81       	ldd	r24, Y+7	; 0x07
    ae2a:	8f 93       	push	r24
    ae2c:	8e 81       	ldd	r24, Y+6	; 0x06
    ae2e:	8f 93       	push	r24
    ae30:	8d 81       	ldd	r24, Y+5	; 0x05
    ae32:	8f 93       	push	r24
    ae34:	8c 81       	ldd	r24, Y+4	; 0x04
    ae36:	8f 93       	push	r24
    ae38:	0e 94 0a 77 	call	0xee14	; 0xee14 <sprintf>
    ae3c:	0f 90       	pop	r0
    ae3e:	0f 90       	pop	r0
    ae40:	0f 90       	pop	r0
    ae42:	0f 90       	pop	r0
    ae44:	0e 94 86 55 	call	0xab0c	; 0xab0c <_ZL16linkbus_start_txv>
    ae48:	19 82       	std	Y+1, r1	; 0x01
    ae4a:	89 81       	ldd	r24, Y+1	; 0x01
    ae4c:	27 96       	adiw	r28, 0x07	; 7
    ae4e:	cd bf       	out	0x3d, r28	; 61
    ae50:	de bf       	out	0x3e, r29	; 62
    ae52:	df 91       	pop	r29
    ae54:	cf 91       	pop	r28
    ae56:	08 95       	ret

0000ae58 <_Z11lb_send_msg13LBMessageTypePKcPc>:
    ae58:	cf 93       	push	r28
    ae5a:	df 93       	push	r29
    ae5c:	cd b7       	in	r28, 0x3d	; 61
    ae5e:	de b7       	in	r29, 0x3e	; 62
    ae60:	27 97       	sbiw	r28, 0x07	; 7
    ae62:	cd bf       	out	0x3d, r28	; 61
    ae64:	de bf       	out	0x3e, r29	; 62
    ae66:	8b 83       	std	Y+3, r24	; 0x03
    ae68:	6c 83       	std	Y+4, r22	; 0x04
    ae6a:	7d 83       	std	Y+5, r23	; 0x05
    ae6c:	4e 83       	std	Y+6, r20	; 0x06
    ae6e:	5f 83       	std	Y+7, r21	; 0x07
    ae70:	84 e2       	ldi	r24, 0x24	; 36
    ae72:	89 83       	std	Y+1, r24	; 0x01
    ae74:	8b e3       	ldi	r24, 0x3B	; 59
    ae76:	8a 83       	std	Y+2, r24	; 0x02
    ae78:	8b 81       	ldd	r24, Y+3	; 0x03
    ae7a:	83 30       	cpi	r24, 0x03	; 3
    ae7c:	19 f4       	brne	.+6      	; 0xae84 <_Z11lb_send_msg13LBMessageTypePKcPc+0x2c>
    ae7e:	81 e2       	ldi	r24, 0x21	; 33
    ae80:	89 83       	std	Y+1, r24	; 0x01
    ae82:	05 c0       	rjmp	.+10     	; 0xae8e <_Z11lb_send_msg13LBMessageTypePKcPc+0x36>
    ae84:	8b 81       	ldd	r24, Y+3	; 0x03
    ae86:	82 30       	cpi	r24, 0x02	; 2
    ae88:	11 f4       	brne	.+4      	; 0xae8e <_Z11lb_send_msg13LBMessageTypePKcPc+0x36>
    ae8a:	8f e3       	ldi	r24, 0x3F	; 63
    ae8c:	8a 83       	std	Y+2, r24	; 0x02
    ae8e:	8a 81       	ldd	r24, Y+2	; 0x02
    ae90:	28 2f       	mov	r18, r24
    ae92:	30 e0       	ldi	r19, 0x00	; 0
    ae94:	89 81       	ldd	r24, Y+1	; 0x01
    ae96:	88 2f       	mov	r24, r24
    ae98:	90 e0       	ldi	r25, 0x00	; 0
    ae9a:	43 2f       	mov	r20, r19
    ae9c:	4f 93       	push	r20
    ae9e:	2f 93       	push	r18
    aea0:	2f 81       	ldd	r18, Y+7	; 0x07
    aea2:	2f 93       	push	r18
    aea4:	2e 81       	ldd	r18, Y+6	; 0x06
    aea6:	2f 93       	push	r18
    aea8:	2d 81       	ldd	r18, Y+5	; 0x05
    aeaa:	2f 93       	push	r18
    aeac:	2c 81       	ldd	r18, Y+4	; 0x04
    aeae:	2f 93       	push	r18
    aeb0:	29 2f       	mov	r18, r25
    aeb2:	2f 93       	push	r18
    aeb4:	8f 93       	push	r24
    aeb6:	8f ee       	ldi	r24, 0xEF	; 239
    aeb8:	93 e4       	ldi	r25, 0x43	; 67
    aeba:	89 2f       	mov	r24, r25
    aebc:	8f 93       	push	r24
    aebe:	8f ee       	ldi	r24, 0xEF	; 239
    aec0:	93 e4       	ldi	r25, 0x43	; 67
    aec2:	8f 93       	push	r24
    aec4:	8f e8       	ldi	r24, 0x8F	; 143
    aec6:	95 e4       	ldi	r25, 0x45	; 69
    aec8:	89 2f       	mov	r24, r25
    aeca:	8f 93       	push	r24
    aecc:	8f e8       	ldi	r24, 0x8F	; 143
    aece:	95 e4       	ldi	r25, 0x45	; 69
    aed0:	8f 93       	push	r24
    aed2:	0e 94 0a 77 	call	0xee14	; 0xee14 <sprintf>
    aed6:	8d b7       	in	r24, 0x3d	; 61
    aed8:	9e b7       	in	r25, 0x3e	; 62
    aeda:	0c 96       	adiw	r24, 0x0c	; 12
    aedc:	cd bf       	out	0x3d, r28	; 61
    aede:	de bf       	out	0x3e, r29	; 62
    aee0:	8f e8       	ldi	r24, 0x8F	; 143
    aee2:	95 e4       	ldi	r25, 0x45	; 69
    aee4:	0e 94 cf 56 	call	0xad9e	; 0xad9e <_Z12lb_send_textPc>
    aee8:	00 00       	nop
    aeea:	27 96       	adiw	r28, 0x07	; 7
    aeec:	cd bf       	out	0x3d, r28	; 61
    aeee:	de bf       	out	0x3e, r29	; 62
    aef0:	df 91       	pop	r29
    aef2:	cf 91       	pop	r28
    aef4:	08 95       	ret

0000aef6 <_Z16lb_broadcast_strPKcS0_>:


void lb_broadcast_str(const char* data, const char* str)
{
    aef6:	cf 93       	push	r28
    aef8:	df 93       	push	r29
    aefa:	00 d0       	rcall	.+0      	; 0xaefc <_Z16lb_broadcast_strPKcS0_+0x6>
    aefc:	00 d0       	rcall	.+0      	; 0xaefe <_Z16lb_broadcast_strPKcS0_+0x8>
    aefe:	cd b7       	in	r28, 0x3d	; 61
    af00:	de b7       	in	r29, 0x3e	; 62
    af02:	89 83       	std	Y+1, r24	; 0x01
    af04:	9a 83       	std	Y+2, r25	; 0x02
    af06:	6b 83       	std	Y+3, r22	; 0x03
    af08:	7c 83       	std	Y+4, r23	; 0x04
	if(str)
    af0a:	8b 81       	ldd	r24, Y+3	; 0x03
    af0c:	9c 81       	ldd	r25, Y+4	; 0x04
    af0e:	89 2b       	or	r24, r25
    af10:	e9 f0       	breq	.+58     	; 0xaf4c <_Z16lb_broadcast_strPKcS0_+0x56>
	{
		sprintf(g_tempMsgBuff, "%s,%s;", str, data);
    af12:	8a 81       	ldd	r24, Y+2	; 0x02
    af14:	8f 93       	push	r24
    af16:	89 81       	ldd	r24, Y+1	; 0x01
    af18:	8f 93       	push	r24
    af1a:	8c 81       	ldd	r24, Y+4	; 0x04
    af1c:	8f 93       	push	r24
    af1e:	8b 81       	ldd	r24, Y+3	; 0x03
    af20:	8f 93       	push	r24
    af22:	8f ef       	ldi	r24, 0xFF	; 255
    af24:	93 e4       	ldi	r25, 0x43	; 67
    af26:	89 2f       	mov	r24, r25
    af28:	8f 93       	push	r24
    af2a:	8f ef       	ldi	r24, 0xFF	; 255
    af2c:	93 e4       	ldi	r25, 0x43	; 67
    af2e:	8f 93       	push	r24
    af30:	8f e8       	ldi	r24, 0x8F	; 143
    af32:	95 e4       	ldi	r25, 0x45	; 69
    af34:	89 2f       	mov	r24, r25
    af36:	8f 93       	push	r24
    af38:	8f e8       	ldi	r24, 0x8F	; 143
    af3a:	95 e4       	ldi	r25, 0x45	; 69
    af3c:	8f 93       	push	r24
    af3e:	0e 94 0a 77 	call	0xee14	; 0xee14 <sprintf>
    af42:	8d b7       	in	r24, 0x3d	; 61
    af44:	9e b7       	in	r25, 0x3e	; 62
    af46:	08 96       	adiw	r24, 0x08	; 8
    af48:	cd bf       	out	0x3d, r28	; 61
    af4a:	de bf       	out	0x3e, r29	; 62
	}

	if(g_tempMsgBuff[0]) lb_send_text(g_tempMsgBuff);
    af4c:	80 91 8f 45 	lds	r24, 0x458F	; 0x80458f <_ZL13g_tempMsgBuff>
    af50:	88 23       	and	r24, r24
    af52:	21 f0       	breq	.+8      	; 0xaf5c <_Z16lb_broadcast_strPKcS0_+0x66>
    af54:	8f e8       	ldi	r24, 0x8F	; 143
    af56:	95 e4       	ldi	r25, 0x45	; 69
    af58:	0e 94 cf 56 	call	0xad9e	; 0xad9e <_Z12lb_send_textPc>
}
    af5c:	00 00       	nop
    af5e:	24 96       	adiw	r28, 0x04	; 4
    af60:	cd bf       	out	0x3d, r28	; 61
    af62:	de bf       	out	0x3e, r29	; 62
    af64:	df 91       	pop	r29
    af66:	cf 91       	pop	r28
    af68:	08 95       	ret

0000af6a <_Z9makeMorsePcPbS0_>:
 *  Call this function with a NULL argument at intervals of 1 element of time to generate Morse code.
 *  Once loaded with a string each call to this function returns a bool indicating whether a CW carrier should be sent
 *  Pass in a pointer to a bool in the second and third arguments:
 */
bool makeMorse(char* s, bool* repeating, bool* finished)
{
    af6a:	cf 93       	push	r28
    af6c:	df 93       	push	r29
    af6e:	cd b7       	in	r28, 0x3d	; 61
    af70:	de b7       	in	r29, 0x3e	; 62
    af72:	28 97       	sbiw	r28, 0x08	; 8
    af74:	cd bf       	out	0x3d, r28	; 61
    af76:	de bf       	out	0x3e, r29	; 62
    af78:	8b 83       	std	Y+3, r24	; 0x03
    af7a:	9c 83       	std	Y+4, r25	; 0x04
    af7c:	6d 83       	std	Y+5, r22	; 0x05
    af7e:	7e 83       	std	Y+6, r23	; 0x06
    af80:	4f 83       	std	Y+7, r20	; 0x07
    af82:	58 87       	std	Y+8, r21	; 0x08
	static uint8_t addedSpace;      /* adds additional time to make an inter-character space */
	static bool completedString = true;
	static bool carrierOn = false;
	static bool holdKeyDown = false;

	if(s)   /* load a new NULL-terminated string to send */
    af84:	8b 81       	ldd	r24, Y+3	; 0x03
    af86:	9c 81       	ldd	r25, Y+4	; 0x04
    af88:	89 2b       	or	r24, r25
    af8a:	09 f4       	brne	.+2      	; 0xaf8e <_Z9makeMorsePcPbS0_+0x24>
    af8c:	4a c0       	rjmp	.+148    	; 0xb022 <_Z9makeMorsePcPbS0_+0xb8>
	{
		holdKeyDown = false;
    af8e:	10 92 54 47 	sts	0x4754, r1	; 0x804754 <_ZZ9makeMorsePcPbS0_E11holdKeyDown>

		if(repeating)
    af92:	8d 81       	ldd	r24, Y+5	; 0x05
    af94:	9e 81       	ldd	r25, Y+6	; 0x06
    af96:	89 2b       	or	r24, r25
    af98:	31 f0       	breq	.+12     	; 0xafa6 <_Z9makeMorsePcPbS0_+0x3c>
		{
			repeat = *repeating;
    af9a:	8d 81       	ldd	r24, Y+5	; 0x05
    af9c:	9e 81       	ldd	r25, Y+6	; 0x06
    af9e:	fc 01       	movw	r30, r24
    afa0:	80 81       	ld	r24, Z
    afa2:	80 93 45 40 	sts	0x4045, r24	; 0x804045 <_ZZ9makeMorsePcPbS0_E6repeat>
		}

		if(*s)
    afa6:	8b 81       	ldd	r24, Y+3	; 0x03
    afa8:	9c 81       	ldd	r25, Y+4	; 0x04
    afaa:	fc 01       	movw	r30, r24
    afac:	80 81       	ld	r24, Z
    afae:	88 23       	and	r24, r24
    afb0:	21 f1       	breq	.+72     	; 0xaffa <_Z9makeMorsePcPbS0_+0x90>
		{
			str = s;
    afb2:	8b 81       	ldd	r24, Y+3	; 0x03
    afb4:	9c 81       	ldd	r25, Y+4	; 0x04
    afb6:	80 93 55 47 	sts	0x4755, r24	; 0x804755 <_ZZ9makeMorsePcPbS0_E3str>
    afba:	90 93 56 47 	sts	0x4756, r25	; 0x804756 <_ZZ9makeMorsePcPbS0_E3str+0x1>
			c = ' ';
    afbe:	80 e2       	ldi	r24, 0x20	; 32
    afc0:	80 93 46 40 	sts	0x4046, r24	; 0x804046 <_ZZ9makeMorsePcPbS0_E1c>
			morseInProgress = getMorseChar(*str);
    afc4:	80 91 55 47 	lds	r24, 0x4755	; 0x804755 <_ZZ9makeMorsePcPbS0_E3str>
    afc8:	90 91 56 47 	lds	r25, 0x4756	; 0x804756 <_ZZ9makeMorsePcPbS0_E3str+0x1>
    afcc:	fc 01       	movw	r30, r24
    afce:	80 81       	ld	r24, Z
    afd0:	0e 94 5d 59 	call	0xb2ba	; 0xb2ba <_Z12getMorseCharc>
    afd4:	a8 2f       	mov	r26, r24
    afd6:	cb 01       	movw	r24, r22
    afd8:	80 93 57 47 	sts	0x4757, r24	; 0x804757 <_ZZ9makeMorsePcPbS0_E15morseInProgress>
    afdc:	90 93 58 47 	sts	0x4758, r25	; 0x804758 <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x1>
    afe0:	a0 93 59 47 	sts	0x4759, r26	; 0x804759 <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x2>
			charIndex = 0;
    afe4:	10 92 5a 47 	sts	0x475A, r1	; 0x80475a <_ZZ9makeMorsePcPbS0_E9charIndex>
			symbolIndex = 0;
    afe8:	10 92 5b 47 	sts	0x475B, r1	; 0x80475b <_ZZ9makeMorsePcPbS0_E11symbolIndex>
			elementIndex = 0;
    afec:	10 92 5c 47 	sts	0x475C, r1	; 0x80475c <_ZZ9makeMorsePcPbS0_E12elementIndex>
			addedSpace = 0;
    aff0:	10 92 5d 47 	sts	0x475D, r1	; 0x80475d <_ZZ9makeMorsePcPbS0_E10addedSpace>
			completedString = false;
    aff4:	10 92 47 40 	sts	0x4047, r1	; 0x804047 <_ZZ9makeMorsePcPbS0_E15completedString>
    aff8:	10 c0       	rjmp	.+32     	; 0xb01a <_Z9makeMorsePcPbS0_+0xb0>
		}
		else    /* a zero-length string shuts down makeMorse */
		{
			str = NULL;
    affa:	10 92 55 47 	sts	0x4755, r1	; 0x804755 <_ZZ9makeMorsePcPbS0_E3str>
    affe:	10 92 56 47 	sts	0x4756, r1	; 0x804756 <_ZZ9makeMorsePcPbS0_E3str+0x1>
			completedString = true;
    b002:	81 e0       	ldi	r24, 0x01	; 1
    b004:	80 93 47 40 	sts	0x4047, r24	; 0x804047 <_ZZ9makeMorsePcPbS0_E15completedString>
			if(finished)
    b008:	8f 81       	ldd	r24, Y+7	; 0x07
    b00a:	98 85       	ldd	r25, Y+8	; 0x08
    b00c:	89 2b       	or	r24, r25
    b00e:	29 f0       	breq	.+10     	; 0xb01a <_Z9makeMorsePcPbS0_+0xb0>
			{
				*finished = true;
    b010:	8f 81       	ldd	r24, Y+7	; 0x07
    b012:	98 85       	ldd	r25, Y+8	; 0x08
    b014:	21 e0       	ldi	r18, 0x01	; 1
    b016:	fc 01       	movw	r30, r24
    b018:	20 83       	st	Z, r18
			}
		}

		carrierOn = OFF;
    b01a:	10 92 5e 47 	sts	0x475E, r1	; 0x80475e <_ZZ9makeMorsePcPbS0_E9carrierOn>
		return( OFF);
    b01e:	80 e0       	ldi	r24, 0x00	; 0
    b020:	f6 c0       	rjmp	.+492    	; 0xb20e <_Z9makeMorsePcPbS0_+0x2a4>
	}
	else if(str)
    b022:	80 91 55 47 	lds	r24, 0x4755	; 0x804755 <_ZZ9makeMorsePcPbS0_E3str>
    b026:	90 91 56 47 	lds	r25, 0x4756	; 0x804756 <_ZZ9makeMorsePcPbS0_E3str+0x1>
    b02a:	89 2b       	or	r24, r25
    b02c:	09 f4       	brne	.+2      	; 0xb030 <_Z9makeMorsePcPbS0_+0xc6>
    b02e:	dd c0       	rjmp	.+442    	; 0xb1ea <_Z9makeMorsePcPbS0_+0x280>
	{
		if(repeating)
    b030:	8d 81       	ldd	r24, Y+5	; 0x05
    b032:	9e 81       	ldd	r25, Y+6	; 0x06
    b034:	89 2b       	or	r24, r25
    b036:	31 f0       	breq	.+12     	; 0xb044 <_Z9makeMorsePcPbS0_+0xda>
		{
			*repeating = repeat;
    b038:	20 91 45 40 	lds	r18, 0x4045	; 0x804045 <_ZZ9makeMorsePcPbS0_E6repeat>
    b03c:	8d 81       	ldd	r24, Y+5	; 0x05
    b03e:	9e 81       	ldd	r25, Y+6	; 0x06
    b040:	fc 01       	movw	r30, r24
    b042:	20 83       	st	Z, r18
		}

		if(completedString)
    b044:	80 91 47 40 	lds	r24, 0x4047	; 0x804047 <_ZZ9makeMorsePcPbS0_E15completedString>
    b048:	88 23       	and	r24, r24
    b04a:	69 f0       	breq	.+26     	; 0xb066 <_Z9makeMorsePcPbS0_+0xfc>
		{
			if(finished)
    b04c:	8f 81       	ldd	r24, Y+7	; 0x07
    b04e:	98 85       	ldd	r25, Y+8	; 0x08
    b050:	89 2b       	or	r24, r25
    b052:	39 f0       	breq	.+14     	; 0xb062 <_Z9makeMorsePcPbS0_+0xf8>
			{
				*finished = true;
    b054:	8f 81       	ldd	r24, Y+7	; 0x07
    b056:	98 85       	ldd	r25, Y+8	; 0x08
    b058:	21 e0       	ldi	r18, 0x01	; 1
    b05a:	fc 01       	movw	r30, r24
    b05c:	20 83       	st	Z, r18
				holdKeyDown = false;
    b05e:	10 92 54 47 	sts	0x4754, r1	; 0x804754 <_ZZ9makeMorsePcPbS0_E11holdKeyDown>
			}
			return( OFF);
    b062:	80 e0       	ldi	r24, 0x00	; 0
    b064:	d4 c0       	rjmp	.+424    	; 0xb20e <_Z9makeMorsePcPbS0_+0x2a4>
		}

		if(elementIndex)
    b066:	80 91 5c 47 	lds	r24, 0x475C	; 0x80475c <_ZZ9makeMorsePcPbS0_E12elementIndex>
    b06a:	88 23       	and	r24, r24
    b06c:	31 f0       	breq	.+12     	; 0xb07a <_Z9makeMorsePcPbS0_+0x110>
		{
			elementIndex--;
    b06e:	80 91 5c 47 	lds	r24, 0x475C	; 0x80475c <_ZZ9makeMorsePcPbS0_E12elementIndex>
    b072:	81 50       	subi	r24, 0x01	; 1
    b074:	80 93 5c 47 	sts	0x475C, r24	; 0x80475c <_ZZ9makeMorsePcPbS0_E12elementIndex>
    b078:	ae c0       	rjmp	.+348    	; 0xb1d6 <_Z9makeMorsePcPbS0_+0x26c>
		}
		else if(carrierOn && !holdKeyDown)  /* carrier is on, so turn it off and wait appropriate amount of space */
    b07a:	80 91 5e 47 	lds	r24, 0x475E	; 0x80475e <_ZZ9makeMorsePcPbS0_E9carrierOn>
    b07e:	88 23       	and	r24, r24
    b080:	a1 f0       	breq	.+40     	; 0xb0aa <_Z9makeMorsePcPbS0_+0x140>
    b082:	90 91 54 47 	lds	r25, 0x4754	; 0x804754 <_ZZ9makeMorsePcPbS0_E11holdKeyDown>
    b086:	81 e0       	ldi	r24, 0x01	; 1
    b088:	89 27       	eor	r24, r25
    b08a:	88 23       	and	r24, r24
    b08c:	71 f0       	breq	.+28     	; 0xb0aa <_Z9makeMorsePcPbS0_+0x140>
		{
			carrierOn = false;
    b08e:	10 92 5e 47 	sts	0x475E, r1	; 0x80475e <_ZZ9makeMorsePcPbS0_E9carrierOn>
			/* wait one element = inter-symbol space */
			if(addedSpace)
    b092:	80 91 5d 47 	lds	r24, 0x475D	; 0x80475d <_ZZ9makeMorsePcPbS0_E10addedSpace>
    b096:	88 23       	and	r24, r24
    b098:	09 f4       	brne	.+2      	; 0xb09c <_Z9makeMorsePcPbS0_+0x132>
    b09a:	9d c0       	rjmp	.+314    	; 0xb1d6 <_Z9makeMorsePcPbS0_+0x26c>
			{
				elementIndex = addedSpace;
    b09c:	80 91 5d 47 	lds	r24, 0x475D	; 0x80475d <_ZZ9makeMorsePcPbS0_E10addedSpace>
    b0a0:	80 93 5c 47 	sts	0x475C, r24	; 0x80475c <_ZZ9makeMorsePcPbS0_E12elementIndex>
				addedSpace = 0;
    b0a4:	10 92 5d 47 	sts	0x475D, r1	; 0x80475d <_ZZ9makeMorsePcPbS0_E10addedSpace>
		}
		else if(carrierOn && !holdKeyDown)  /* carrier is on, so turn it off and wait appropriate amount of space */
		{
			carrierOn = false;
			/* wait one element = inter-symbol space */
			if(addedSpace)
    b0a8:	96 c0       	rjmp	.+300    	; 0xb1d6 <_Z9makeMorsePcPbS0_+0x26c>
			}
			/* wait inter-character space */
		}
		else    /* carrier is off, so turn it on and get next symbol */
		{
			if(symbolIndex >= morseInProgress.lengthInSymbols)
    b0aa:	90 91 58 47 	lds	r25, 0x4758	; 0x804758 <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x1>
    b0ae:	80 91 5b 47 	lds	r24, 0x475B	; 0x80475b <_ZZ9makeMorsePcPbS0_E11symbolIndex>
    b0b2:	89 17       	cp	r24, r25
    b0b4:	08 f4       	brcc	.+2      	; 0xb0b8 <_Z9makeMorsePcPbS0_+0x14e>
    b0b6:	4a c0       	rjmp	.+148    	; 0xb14c <_Z9makeMorsePcPbS0_+0x1e2>
			{
				c = (*(str + ++charIndex));
    b0b8:	20 91 55 47 	lds	r18, 0x4755	; 0x804755 <_ZZ9makeMorsePcPbS0_E3str>
    b0bc:	30 91 56 47 	lds	r19, 0x4756	; 0x804756 <_ZZ9makeMorsePcPbS0_E3str+0x1>
    b0c0:	80 91 5a 47 	lds	r24, 0x475A	; 0x80475a <_ZZ9makeMorsePcPbS0_E9charIndex>
    b0c4:	8f 5f       	subi	r24, 0xFF	; 255
    b0c6:	80 93 5a 47 	sts	0x475A, r24	; 0x80475a <_ZZ9makeMorsePcPbS0_E9charIndex>
    b0ca:	80 91 5a 47 	lds	r24, 0x475A	; 0x80475a <_ZZ9makeMorsePcPbS0_E9charIndex>
    b0ce:	88 2f       	mov	r24, r24
    b0d0:	90 e0       	ldi	r25, 0x00	; 0
    b0d2:	82 0f       	add	r24, r18
    b0d4:	93 1f       	adc	r25, r19
    b0d6:	fc 01       	movw	r30, r24
    b0d8:	80 81       	ld	r24, Z
    b0da:	80 93 46 40 	sts	0x4046, r24	; 0x804046 <_ZZ9makeMorsePcPbS0_E1c>

				if(!c)  /* wrap to beginning of text */
    b0de:	80 91 46 40 	lds	r24, 0x4046	; 0x804046 <_ZZ9makeMorsePcPbS0_E1c>
    b0e2:	88 23       	and	r24, r24
    b0e4:	29 f5       	brne	.+74     	; 0xb130 <_Z9makeMorsePcPbS0_+0x1c6>
				{
					if(repeat)
    b0e6:	80 91 45 40 	lds	r24, 0x4045	; 0x804045 <_ZZ9makeMorsePcPbS0_E6repeat>
    b0ea:	88 23       	and	r24, r24
    b0ec:	59 f0       	breq	.+22     	; 0xb104 <_Z9makeMorsePcPbS0_+0x19a>
					{
						c = *str;
    b0ee:	80 91 55 47 	lds	r24, 0x4755	; 0x804755 <_ZZ9makeMorsePcPbS0_E3str>
    b0f2:	90 91 56 47 	lds	r25, 0x4756	; 0x804756 <_ZZ9makeMorsePcPbS0_E3str+0x1>
    b0f6:	fc 01       	movw	r30, r24
    b0f8:	80 81       	ld	r24, Z
    b0fa:	80 93 46 40 	sts	0x4046, r24	; 0x804046 <_ZZ9makeMorsePcPbS0_E1c>
						charIndex = 0;
    b0fe:	10 92 5a 47 	sts	0x475A, r1	; 0x80475a <_ZZ9makeMorsePcPbS0_E9charIndex>
    b102:	16 c0       	rjmp	.+44     	; 0xb130 <_Z9makeMorsePcPbS0_+0x1c6>
					}
					else
					{
						str = NULL;
    b104:	10 92 55 47 	sts	0x4755, r1	; 0x804755 <_ZZ9makeMorsePcPbS0_E3str>
    b108:	10 92 56 47 	sts	0x4756, r1	; 0x804756 <_ZZ9makeMorsePcPbS0_E3str+0x1>
						carrierOn = OFF;
    b10c:	10 92 5e 47 	sts	0x475E, r1	; 0x80475e <_ZZ9makeMorsePcPbS0_E9carrierOn>
						completedString = true;
    b110:	81 e0       	ldi	r24, 0x01	; 1
    b112:	80 93 47 40 	sts	0x4047, r24	; 0x804047 <_ZZ9makeMorsePcPbS0_E15completedString>
						if(finished)
    b116:	8f 81       	ldd	r24, Y+7	; 0x07
    b118:	98 85       	ldd	r25, Y+8	; 0x08
    b11a:	89 2b       	or	r24, r25
    b11c:	29 f0       	breq	.+10     	; 0xb128 <_Z9makeMorsePcPbS0_+0x1be>
						{
							*finished = true;
    b11e:	8f 81       	ldd	r24, Y+7	; 0x07
    b120:	98 85       	ldd	r25, Y+8	; 0x08
    b122:	21 e0       	ldi	r18, 0x01	; 1
    b124:	fc 01       	movw	r30, r24
    b126:	20 83       	st	Z, r18
						}
						holdKeyDown = false;
    b128:	10 92 54 47 	sts	0x4754, r1	; 0x804754 <_ZZ9makeMorsePcPbS0_E11holdKeyDown>
						return( OFF );
    b12c:	80 e0       	ldi	r24, 0x00	; 0
    b12e:	6f c0       	rjmp	.+222    	; 0xb20e <_Z9makeMorsePcPbS0_+0x2a4>
					}
				}

				morseInProgress = getMorseChar(c);
    b130:	80 91 46 40 	lds	r24, 0x4046	; 0x804046 <_ZZ9makeMorsePcPbS0_E1c>
    b134:	0e 94 5d 59 	call	0xb2ba	; 0xb2ba <_Z12getMorseCharc>
    b138:	a8 2f       	mov	r26, r24
    b13a:	cb 01       	movw	r24, r22
    b13c:	80 93 57 47 	sts	0x4757, r24	; 0x804757 <_ZZ9makeMorsePcPbS0_E15morseInProgress>
    b140:	90 93 58 47 	sts	0x4758, r25	; 0x804758 <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x1>
    b144:	a0 93 59 47 	sts	0x4759, r26	; 0x804759 <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x2>
				symbolIndex = 0;
    b148:	10 92 5b 47 	sts	0x475B, r1	; 0x80475b <_ZZ9makeMorsePcPbS0_E11symbolIndex>
			}

			if(morseInProgress.pattern < INTER_WORD_SPACE)
    b14c:	80 91 57 47 	lds	r24, 0x4757	; 0x804757 <_ZZ9makeMorsePcPbS0_E15morseInProgress>
    b150:	8d 3f       	cpi	r24, 0xFD	; 253
    b152:	70 f5       	brcc	.+92     	; 0xb1b0 <_Z9makeMorsePcPbS0_+0x246>
			{
				bool isDah = morseInProgress.pattern & (1 << symbolIndex++);
    b154:	80 91 57 47 	lds	r24, 0x4757	; 0x804757 <_ZZ9makeMorsePcPbS0_E15morseInProgress>
    b158:	88 2f       	mov	r24, r24
    b15a:	90 e0       	ldi	r25, 0x00	; 0
    b15c:	20 91 5b 47 	lds	r18, 0x475B	; 0x80475b <_ZZ9makeMorsePcPbS0_E11symbolIndex>
    b160:	31 e0       	ldi	r19, 0x01	; 1
    b162:	32 0f       	add	r19, r18
    b164:	30 93 5b 47 	sts	0x475B, r19	; 0x80475b <_ZZ9makeMorsePcPbS0_E11symbolIndex>
    b168:	22 2f       	mov	r18, r18
    b16a:	30 e0       	ldi	r19, 0x00	; 0
    b16c:	02 c0       	rjmp	.+4      	; 0xb172 <_Z9makeMorsePcPbS0_+0x208>
    b16e:	95 95       	asr	r25
    b170:	87 95       	ror	r24
    b172:	2a 95       	dec	r18
    b174:	e2 f7       	brpl	.-8      	; 0xb16e <_Z9makeMorsePcPbS0_+0x204>
    b176:	81 70       	andi	r24, 0x01	; 1
    b178:	99 27       	eor	r25, r25
    b17a:	21 e0       	ldi	r18, 0x01	; 1
    b17c:	89 2b       	or	r24, r25
    b17e:	09 f4       	brne	.+2      	; 0xb182 <_Z9makeMorsePcPbS0_+0x218>
    b180:	20 e0       	ldi	r18, 0x00	; 0
    b182:	29 83       	std	Y+1, r18	; 0x01

				if(isDah)
    b184:	89 81       	ldd	r24, Y+1	; 0x01
    b186:	88 23       	and	r24, r24
    b188:	21 f0       	breq	.+8      	; 0xb192 <_Z9makeMorsePcPbS0_+0x228>
				{
					elementIndex = 2;
    b18a:	82 e0       	ldi	r24, 0x02	; 2
    b18c:	80 93 5c 47 	sts	0x475C, r24	; 0x80475c <_ZZ9makeMorsePcPbS0_E12elementIndex>
    b190:	02 c0       	rjmp	.+4      	; 0xb196 <_Z9makeMorsePcPbS0_+0x22c>
				}
				else
				{
					elementIndex = 0;
    b192:	10 92 5c 47 	sts	0x475C, r1	; 0x80475c <_ZZ9makeMorsePcPbS0_E12elementIndex>
				}

				carrierOn = true;
    b196:	81 e0       	ldi	r24, 0x01	; 1
    b198:	80 93 5e 47 	sts	0x475E, r24	; 0x80475e <_ZZ9makeMorsePcPbS0_E9carrierOn>

				if(symbolIndex >= morseInProgress.lengthInSymbols)
    b19c:	90 91 58 47 	lds	r25, 0x4758	; 0x804758 <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x1>
    b1a0:	80 91 5b 47 	lds	r24, 0x475B	; 0x80475b <_ZZ9makeMorsePcPbS0_E11symbolIndex>
    b1a4:	89 17       	cp	r24, r25
    b1a6:	b8 f0       	brcs	.+46     	; 0xb1d6 <_Z9makeMorsePcPbS0_+0x26c>
				{
					addedSpace = 2;
    b1a8:	82 e0       	ldi	r24, 0x02	; 2
    b1aa:	80 93 5d 47 	sts	0x475D, r24	; 0x80475d <_ZZ9makeMorsePcPbS0_E10addedSpace>
    b1ae:	13 c0       	rjmp	.+38     	; 0xb1d6 <_Z9makeMorsePcPbS0_+0x26c>
				}
			}
			else
			{
				uint8_t sym = morseInProgress.lengthInSymbols;
    b1b0:	80 91 58 47 	lds	r24, 0x4758	; 0x804758 <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x1>
    b1b4:	8a 83       	std	Y+2, r24	; 0x02
				symbolIndex = 255;  /* ensure the next character gets read */
    b1b6:	8f ef       	ldi	r24, 0xFF	; 255
    b1b8:	80 93 5b 47 	sts	0x475B, r24	; 0x80475b <_ZZ9makeMorsePcPbS0_E11symbolIndex>
				carrierOn = false;
    b1bc:	10 92 5e 47 	sts	0x475E, r1	; 0x80475e <_ZZ9makeMorsePcPbS0_E9carrierOn>
				if(sym >= 4 )
    b1c0:	8a 81       	ldd	r24, Y+2	; 0x02
    b1c2:	84 30       	cpi	r24, 0x04	; 4
    b1c4:	30 f0       	brcs	.+12     	; 0xb1d2 <_Z9makeMorsePcPbS0_+0x268>
				{
					elementIndex = morseInProgress.lengthInSymbols - 4;
    b1c6:	80 91 58 47 	lds	r24, 0x4758	; 0x804758 <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x1>
    b1ca:	84 50       	subi	r24, 0x04	; 4
    b1cc:	80 93 5c 47 	sts	0x475C, r24	; 0x80475c <_ZZ9makeMorsePcPbS0_E12elementIndex>
    b1d0:	02 c0       	rjmp	.+4      	; 0xb1d6 <_Z9makeMorsePcPbS0_+0x26c>
				}
				else
				{
					elementIndex = 0;
    b1d2:	10 92 5c 47 	sts	0x475C, r1	; 0x80475c <_ZZ9makeMorsePcPbS0_E12elementIndex>
				}
			}
		}

		/* Overrides for key on and key off special characters */
		if(c == '<')    /* constant tone */
    b1d6:	80 91 46 40 	lds	r24, 0x4046	; 0x804046 <_ZZ9makeMorsePcPbS0_E1c>
    b1da:	8c 33       	cpi	r24, 0x3C	; 60
    b1dc:	21 f4       	brne	.+8      	; 0xb1e6 <_Z9makeMorsePcPbS0_+0x27c>
		{
			holdKeyDown = true;
    b1de:	81 e0       	ldi	r24, 0x01	; 1
    b1e0:	80 93 54 47 	sts	0x4754, r24	; 0x804754 <_ZZ9makeMorsePcPbS0_E11holdKeyDown>
    b1e4:	02 c0       	rjmp	.+4      	; 0xb1ea <_Z9makeMorsePcPbS0_+0x280>
		}
		else
		{
			holdKeyDown = false;
    b1e6:	10 92 54 47 	sts	0x4754, r1	; 0x804754 <_ZZ9makeMorsePcPbS0_E11holdKeyDown>
		}
	}

	if(finished)
    b1ea:	8f 81       	ldd	r24, Y+7	; 0x07
    b1ec:	98 85       	ldd	r25, Y+8	; 0x08
    b1ee:	89 2b       	or	r24, r25
    b1f0:	31 f0       	breq	.+12     	; 0xb1fe <_Z9makeMorsePcPbS0_+0x294>
	{
		*finished = completedString;
    b1f2:	20 91 47 40 	lds	r18, 0x4047	; 0x804047 <_ZZ9makeMorsePcPbS0_E15completedString>
    b1f6:	8f 81       	ldd	r24, Y+7	; 0x07
    b1f8:	98 85       	ldd	r25, Y+8	; 0x08
    b1fa:	fc 01       	movw	r30, r24
    b1fc:	20 83       	st	Z, r18
	}

	if(holdKeyDown)
    b1fe:	80 91 54 47 	lds	r24, 0x4754	; 0x804754 <_ZZ9makeMorsePcPbS0_E11holdKeyDown>
    b202:	88 23       	and	r24, r24
    b204:	11 f0       	breq	.+4      	; 0xb20a <_Z9makeMorsePcPbS0_+0x2a0>
	{
		return(true);
    b206:	81 e0       	ldi	r24, 0x01	; 1
    b208:	02 c0       	rjmp	.+4      	; 0xb20e <_Z9makeMorsePcPbS0_+0x2a4>
	}
	else
	{
		return( carrierOn);
    b20a:	80 91 5e 47 	lds	r24, 0x475E	; 0x80475e <_ZZ9makeMorsePcPbS0_E9carrierOn>
	}
}
    b20e:	28 96       	adiw	r28, 0x08	; 8
    b210:	cd bf       	out	0x3d, r28	; 61
    b212:	de bf       	out	0x3e, r29	; 62
    b214:	df 91       	pop	r29
    b216:	cf 91       	pop	r28
    b218:	08 95       	ret

0000b21a <_Z26timeRequiredToSendStrAtWPMPcj>:
/**
 *  Returns the number of milliseconds required to send the string pointed to by the first argument at the WPM code speed
 *  passed in the second argument.
 */
uint16_t timeRequiredToSendStrAtWPM(char* str, uint16_t spd)
{
    b21a:	cf 93       	push	r28
    b21c:	df 93       	push	r29
    b21e:	cd b7       	in	r28, 0x3d	; 61
    b220:	de b7       	in	r29, 0x3e	; 62
    b222:	2b 97       	sbiw	r28, 0x0b	; 11
    b224:	cd bf       	out	0x3d, r28	; 61
    b226:	de bf       	out	0x3e, r29	; 62
    b228:	88 87       	std	Y+8, r24	; 0x08
    b22a:	99 87       	std	Y+9, r25	; 0x09
    b22c:	6a 87       	std	Y+10, r22	; 0x0a
    b22e:	7b 87       	std	Y+11, r23	; 0x0b
	uint8_t elements = 0;
    b230:	19 82       	std	Y+1, r1	; 0x01
	MorseCharacter m;
	char c;

	for(int i = 0; i < 20; i++)
    b232:	1a 82       	std	Y+2, r1	; 0x02
    b234:	1b 82       	std	Y+3, r1	; 0x03
    b236:	8a 81       	ldd	r24, Y+2	; 0x02
    b238:	9b 81       	ldd	r25, Y+3	; 0x03
    b23a:	44 97       	sbiw	r24, 0x14	; 20
    b23c:	2c f5       	brge	.+74     	; 0xb288 <_Z26timeRequiredToSendStrAtWPMPcj+0x6e>
	{
		c = str[i];
    b23e:	8a 81       	ldd	r24, Y+2	; 0x02
    b240:	9b 81       	ldd	r25, Y+3	; 0x03
    b242:	28 85       	ldd	r18, Y+8	; 0x08
    b244:	39 85       	ldd	r19, Y+9	; 0x09
    b246:	82 0f       	add	r24, r18
    b248:	93 1f       	adc	r25, r19
    b24a:	fc 01       	movw	r30, r24
    b24c:	80 81       	ld	r24, Z
    b24e:	8c 83       	std	Y+4, r24	; 0x04
		if(!c)
    b250:	8c 81       	ldd	r24, Y+4	; 0x04
    b252:	88 23       	and	r24, r24
    b254:	c1 f0       	breq	.+48     	; 0xb286 <_Z26timeRequiredToSendStrAtWPMPcj+0x6c>
		{
			break;
		}
		m = getMorseChar(c);
    b256:	8c 81       	ldd	r24, Y+4	; 0x04
    b258:	0e 94 5d 59 	call	0xb2ba	; 0xb2ba <_Z12getMorseCharc>
    b25c:	a8 2f       	mov	r26, r24
    b25e:	cb 01       	movw	r24, r22
    b260:	8d 83       	std	Y+5, r24	; 0x05
    b262:	9e 83       	std	Y+6, r25	; 0x06
    b264:	af 83       	std	Y+7, r26	; 0x07
		if(m.pattern < INTER_WORD_SPACE)
    b266:	8d 81       	ldd	r24, Y+5	; 0x05
    b268:	8d 3f       	cpi	r24, 0xFD	; 253
    b26a:	18 f4       	brcc	.+6      	; 0xb272 <_Z26timeRequiredToSendStrAtWPMPcj+0x58>
		{
			elements += 3;
    b26c:	89 81       	ldd	r24, Y+1	; 0x01
    b26e:	8d 5f       	subi	r24, 0xFD	; 253
    b270:	89 83       	std	Y+1, r24	; 0x01
		}
		elements += m.lengthInElements;
    b272:	8f 81       	ldd	r24, Y+7	; 0x07
    b274:	99 81       	ldd	r25, Y+1	; 0x01
    b276:	89 0f       	add	r24, r25
    b278:	89 83       	std	Y+1, r24	; 0x01
{
	uint8_t elements = 0;
	MorseCharacter m;
	char c;

	for(int i = 0; i < 20; i++)
    b27a:	8a 81       	ldd	r24, Y+2	; 0x02
    b27c:	9b 81       	ldd	r25, Y+3	; 0x03
    b27e:	01 96       	adiw	r24, 0x01	; 1
    b280:	8a 83       	std	Y+2, r24	; 0x02
    b282:	9b 83       	std	Y+3, r25	; 0x03
    b284:	d8 cf       	rjmp	.-80     	; 0xb236 <_Z26timeRequiredToSendStrAtWPMPcj+0x1c>
	{
		c = str[i];
		if(!c)
		{
			break;
    b286:	00 00       	nop
			elements += 3;
		}
		elements += m.lengthInElements;
	}

	return(elements * WPM_TO_MS_PER_DOT(spd));
    b288:	89 81       	ldd	r24, Y+1	; 0x01
    b28a:	28 2f       	mov	r18, r24
    b28c:	30 e0       	ldi	r19, 0x00	; 0
    b28e:	80 eb       	ldi	r24, 0xB0	; 176
    b290:	94 e0       	ldi	r25, 0x04	; 4
    b292:	4a 85       	ldd	r20, Y+10	; 0x0a
    b294:	5b 85       	ldd	r21, Y+11	; 0x0b
    b296:	ba 01       	movw	r22, r20
    b298:	0e 94 ab 74 	call	0xe956	; 0xe956 <__udivmodhi4>
    b29c:	cb 01       	movw	r24, r22
    b29e:	ac 01       	movw	r20, r24
    b2a0:	24 9f       	mul	r18, r20
    b2a2:	c0 01       	movw	r24, r0
    b2a4:	25 9f       	mul	r18, r21
    b2a6:	90 0d       	add	r25, r0
    b2a8:	34 9f       	mul	r19, r20
    b2aa:	90 0d       	add	r25, r0
    b2ac:	11 24       	eor	r1, r1
}
    b2ae:	2b 96       	adiw	r28, 0x0b	; 11
    b2b0:	cd bf       	out	0x3d, r28	; 61
    b2b2:	de bf       	out	0x3e, r29	; 62
    b2b4:	df 91       	pop	r29
    b2b6:	cf 91       	pop	r28
    b2b8:	08 95       	ret

0000b2ba <_Z12getMorseCharc>:
 *  pattern = a sequence of up to 8 dit and dah symbols contained in an unsigned byte, sequentially read from LSB to MSB (first symbol is bit 0)
 *  lengthInSymbols = how many symbols (dits and dahs) the character contains; this is how many pattern bits are used to represent the character
 *  lengthInElements = how long (measured in "dit lengths") is the total character including all inter-symbol spaces.
 */
MorseCharacter getMorseChar(char c)
{
    b2ba:	cf 93       	push	r28
    b2bc:	df 93       	push	r29
    b2be:	00 d0       	rcall	.+0      	; 0xb2c0 <_Z12getMorseCharc+0x6>
    b2c0:	00 d0       	rcall	.+0      	; 0xb2c2 <_Z12getMorseCharc+0x8>
    b2c2:	cd b7       	in	r28, 0x3d	; 61
    b2c4:	de b7       	in	r29, 0x3e	; 62
    b2c6:	8c 83       	std	Y+4, r24	; 0x04
	MorseCharacter morse;

	switch( c )
    b2c8:	8c 81       	ldd	r24, Y+4	; 0x04
    b2ca:	88 2f       	mov	r24, r24
    b2cc:	90 e0       	ldi	r25, 0x00	; 0
    b2ce:	09 2e       	mov	r0, r25
    b2d0:	00 0c       	add	r0, r0
    b2d2:	aa 0b       	sbc	r26, r26
    b2d4:	bb 0b       	sbc	r27, r27
    b2d6:	40 e2       	ldi	r20, 0x20	; 32
    b2d8:	50 e0       	ldi	r21, 0x00	; 0
    b2da:	2e e5       	ldi	r18, 0x5E	; 94
    b2dc:	30 e0       	ldi	r19, 0x00	; 0
    b2de:	84 1b       	sub	r24, r20
    b2e0:	95 0b       	sbc	r25, r21
    b2e2:	28 17       	cp	r18, r24
    b2e4:	39 07       	cpc	r19, r25
    b2e6:	08 f4       	brcc	.+2      	; 0xb2ea <_Z12getMorseCharc+0x30>
    b2e8:	96 c1       	rjmp	.+812    	; 0xb616 <_Z12getMorseCharc+0x35c>
    b2ea:	89 55       	subi	r24, 0x59	; 89
    b2ec:	9e 4f       	sbci	r25, 0xFE	; 254
    b2ee:	fc 01       	movw	r30, r24
    b2f0:	0c 94 14 75 	jmp	0xea28	; 0xea28 <__tablejump2__>
	{
		case 'A':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
    b2f4:	82 e0       	ldi	r24, 0x02	; 2
    b2f6:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 2;
    b2f8:	82 e0       	ldi	r24, 0x02	; 2
    b2fa:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 5;
    b2fc:	85 e0       	ldi	r24, 0x05	; 5
    b2fe:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b300:	8e c1       	rjmp	.+796    	; 0xb61e <_Z12getMorseCharc+0x364>

		case 'B':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    b302:	81 e0       	ldi	r24, 0x01	; 1
    b304:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    b306:	84 e0       	ldi	r24, 0x04	; 4
    b308:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    b30a:	89 e0       	ldi	r24, 0x09	; 9
    b30c:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b30e:	87 c1       	rjmp	.+782    	; 0xb61e <_Z12getMorseCharc+0x364>

		case 'C':
		{
			morse.pattern = 0x05;   /* 0000 0101; */
    b310:	85 e0       	ldi	r24, 0x05	; 5
    b312:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    b314:	84 e0       	ldi	r24, 0x04	; 4
    b316:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    b318:	8b e0       	ldi	r24, 0x0B	; 11
    b31a:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b31c:	80 c1       	rjmp	.+768    	; 0xb61e <_Z12getMorseCharc+0x364>

		case 'D':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    b31e:	81 e0       	ldi	r24, 0x01	; 1
    b320:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 3;
    b322:	83 e0       	ldi	r24, 0x03	; 3
    b324:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 7;
    b326:	87 e0       	ldi	r24, 0x07	; 7
    b328:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b32a:	79 c1       	rjmp	.+754    	; 0xb61e <_Z12getMorseCharc+0x364>

		case 'E':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    b32c:	19 82       	std	Y+1, r1	; 0x01
			morse.lengthInSymbols = 1;
    b32e:	81 e0       	ldi	r24, 0x01	; 1
    b330:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 1;
    b332:	81 e0       	ldi	r24, 0x01	; 1
    b334:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b336:	73 c1       	rjmp	.+742    	; 0xb61e <_Z12getMorseCharc+0x364>

		case 'F':
		{
			morse.pattern = 0x04;   /* 0000 0100; */
    b338:	84 e0       	ldi	r24, 0x04	; 4
    b33a:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    b33c:	84 e0       	ldi	r24, 0x04	; 4
    b33e:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    b340:	89 e0       	ldi	r24, 0x09	; 9
    b342:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b344:	6c c1       	rjmp	.+728    	; 0xb61e <_Z12getMorseCharc+0x364>

		case 'G':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
    b346:	83 e0       	ldi	r24, 0x03	; 3
    b348:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 3;
    b34a:	83 e0       	ldi	r24, 0x03	; 3
    b34c:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    b34e:	89 e0       	ldi	r24, 0x09	; 9
    b350:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b352:	65 c1       	rjmp	.+714    	; 0xb61e <_Z12getMorseCharc+0x364>

		case 'H':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    b354:	19 82       	std	Y+1, r1	; 0x01
			morse.lengthInSymbols = 4;
    b356:	84 e0       	ldi	r24, 0x04	; 4
    b358:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 7;
    b35a:	87 e0       	ldi	r24, 0x07	; 7
    b35c:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b35e:	5f c1       	rjmp	.+702    	; 0xb61e <_Z12getMorseCharc+0x364>

		case 'I':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    b360:	19 82       	std	Y+1, r1	; 0x01
			morse.lengthInSymbols = 2;
    b362:	82 e0       	ldi	r24, 0x02	; 2
    b364:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 3;
    b366:	83 e0       	ldi	r24, 0x03	; 3
    b368:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b36a:	59 c1       	rjmp	.+690    	; 0xb61e <_Z12getMorseCharc+0x364>

		case 'J':
		{
			morse.pattern = 0x0e;   /* 0000 1110; */
    b36c:	8e e0       	ldi	r24, 0x0E	; 14
    b36e:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    b370:	84 e0       	ldi	r24, 0x04	; 4
    b372:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    b374:	8d e0       	ldi	r24, 0x0D	; 13
    b376:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b378:	52 c1       	rjmp	.+676    	; 0xb61e <_Z12getMorseCharc+0x364>

		case 'K':
		{
			morse.pattern = 0x05;   /* 0000 0101; */
    b37a:	85 e0       	ldi	r24, 0x05	; 5
    b37c:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 3;
    b37e:	83 e0       	ldi	r24, 0x03	; 3
    b380:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    b382:	89 e0       	ldi	r24, 0x09	; 9
    b384:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b386:	4b c1       	rjmp	.+662    	; 0xb61e <_Z12getMorseCharc+0x364>

		case 'L':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
    b388:	82 e0       	ldi	r24, 0x02	; 2
    b38a:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    b38c:	84 e0       	ldi	r24, 0x04	; 4
    b38e:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    b390:	89 e0       	ldi	r24, 0x09	; 9
    b392:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b394:	44 c1       	rjmp	.+648    	; 0xb61e <_Z12getMorseCharc+0x364>

		case 'M':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
    b396:	83 e0       	ldi	r24, 0x03	; 3
    b398:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 2;
    b39a:	82 e0       	ldi	r24, 0x02	; 2
    b39c:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 7;
    b39e:	87 e0       	ldi	r24, 0x07	; 7
    b3a0:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b3a2:	3d c1       	rjmp	.+634    	; 0xb61e <_Z12getMorseCharc+0x364>

		case 'N':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    b3a4:	81 e0       	ldi	r24, 0x01	; 1
    b3a6:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 2;
    b3a8:	82 e0       	ldi	r24, 0x02	; 2
    b3aa:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 5;
    b3ac:	85 e0       	ldi	r24, 0x05	; 5
    b3ae:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b3b0:	36 c1       	rjmp	.+620    	; 0xb61e <_Z12getMorseCharc+0x364>

		case 'O':
		{
			morse.pattern = 0x07;   /* 0000 0111; */
    b3b2:	87 e0       	ldi	r24, 0x07	; 7
    b3b4:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 3;
    b3b6:	83 e0       	ldi	r24, 0x03	; 3
    b3b8:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    b3ba:	8b e0       	ldi	r24, 0x0B	; 11
    b3bc:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b3be:	2f c1       	rjmp	.+606    	; 0xb61e <_Z12getMorseCharc+0x364>

		case 'P':
		{
			morse.pattern = 0x06;   /* 0000 0110; */
    b3c0:	86 e0       	ldi	r24, 0x06	; 6
    b3c2:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    b3c4:	84 e0       	ldi	r24, 0x04	; 4
    b3c6:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    b3c8:	8b e0       	ldi	r24, 0x0B	; 11
    b3ca:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b3cc:	28 c1       	rjmp	.+592    	; 0xb61e <_Z12getMorseCharc+0x364>

		case 'Q':
		{
			morse.pattern = 0x0b;   /* 0000 1011; */
    b3ce:	8b e0       	ldi	r24, 0x0B	; 11
    b3d0:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    b3d2:	84 e0       	ldi	r24, 0x04	; 4
    b3d4:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    b3d6:	8d e0       	ldi	r24, 0x0D	; 13
    b3d8:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b3da:	21 c1       	rjmp	.+578    	; 0xb61e <_Z12getMorseCharc+0x364>

		case 'R':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
    b3dc:	82 e0       	ldi	r24, 0x02	; 2
    b3de:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 3;
    b3e0:	83 e0       	ldi	r24, 0x03	; 3
    b3e2:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 7;
    b3e4:	87 e0       	ldi	r24, 0x07	; 7
    b3e6:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b3e8:	1a c1       	rjmp	.+564    	; 0xb61e <_Z12getMorseCharc+0x364>

		case 'S':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    b3ea:	19 82       	std	Y+1, r1	; 0x01
			morse.lengthInSymbols = 3;
    b3ec:	83 e0       	ldi	r24, 0x03	; 3
    b3ee:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 5;
    b3f0:	85 e0       	ldi	r24, 0x05	; 5
    b3f2:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b3f4:	14 c1       	rjmp	.+552    	; 0xb61e <_Z12getMorseCharc+0x364>

		case 'T':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    b3f6:	81 e0       	ldi	r24, 0x01	; 1
    b3f8:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 1;
    b3fa:	81 e0       	ldi	r24, 0x01	; 1
    b3fc:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 3;
    b3fe:	83 e0       	ldi	r24, 0x03	; 3
    b400:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b402:	0d c1       	rjmp	.+538    	; 0xb61e <_Z12getMorseCharc+0x364>

		case 'U':
		{
			morse.pattern = 0x04;   /* 0000 0100; */
    b404:	84 e0       	ldi	r24, 0x04	; 4
    b406:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 3;
    b408:	83 e0       	ldi	r24, 0x03	; 3
    b40a:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 7;
    b40c:	87 e0       	ldi	r24, 0x07	; 7
    b40e:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b410:	06 c1       	rjmp	.+524    	; 0xb61e <_Z12getMorseCharc+0x364>

		case 'V':
		{
			morse.pattern = 0x08;   /* 0000 1000; */
    b412:	88 e0       	ldi	r24, 0x08	; 8
    b414:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    b416:	84 e0       	ldi	r24, 0x04	; 4
    b418:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    b41a:	89 e0       	ldi	r24, 0x09	; 9
    b41c:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b41e:	ff c0       	rjmp	.+510    	; 0xb61e <_Z12getMorseCharc+0x364>

		case 'W':
		{
			morse.pattern = 0x06;   /* 0000 0110; */
    b420:	86 e0       	ldi	r24, 0x06	; 6
    b422:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 3;
    b424:	83 e0       	ldi	r24, 0x03	; 3
    b426:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    b428:	89 e0       	ldi	r24, 0x09	; 9
    b42a:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b42c:	f8 c0       	rjmp	.+496    	; 0xb61e <_Z12getMorseCharc+0x364>

		case 'X':
		{
			morse.pattern = 0x09;   /* 0000 1001; */
    b42e:	89 e0       	ldi	r24, 0x09	; 9
    b430:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    b432:	84 e0       	ldi	r24, 0x04	; 4
    b434:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    b436:	8b e0       	ldi	r24, 0x0B	; 11
    b438:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b43a:	f1 c0       	rjmp	.+482    	; 0xb61e <_Z12getMorseCharc+0x364>

		case 'Y':
		{
			morse.pattern = 0x0d;   /* 0000 1101; */
    b43c:	8d e0       	ldi	r24, 0x0D	; 13
    b43e:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    b440:	84 e0       	ldi	r24, 0x04	; 4
    b442:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    b444:	8d e0       	ldi	r24, 0x0D	; 13
    b446:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b448:	ea c0       	rjmp	.+468    	; 0xb61e <_Z12getMorseCharc+0x364>

		case 'Z':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
    b44a:	83 e0       	ldi	r24, 0x03	; 3
    b44c:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    b44e:	84 e0       	ldi	r24, 0x04	; 4
    b450:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    b452:	8b e0       	ldi	r24, 0x0B	; 11
    b454:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b456:	e3 c0       	rjmp	.+454    	; 0xb61e <_Z12getMorseCharc+0x364>

		case '0':
		{
			morse.pattern = 0x1f;   /* 0001 1111; */
    b458:	8f e1       	ldi	r24, 0x1F	; 31
    b45a:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    b45c:	85 e0       	ldi	r24, 0x05	; 5
    b45e:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 19;
    b460:	83 e1       	ldi	r24, 0x13	; 19
    b462:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b464:	dc c0       	rjmp	.+440    	; 0xb61e <_Z12getMorseCharc+0x364>

		case '1':
		{
			morse.pattern = 0x1e;   /* 0001 1110; */
    b466:	8e e1       	ldi	r24, 0x1E	; 30
    b468:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    b46a:	85 e0       	ldi	r24, 0x05	; 5
    b46c:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 17;
    b46e:	81 e1       	ldi	r24, 0x11	; 17
    b470:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b472:	d5 c0       	rjmp	.+426    	; 0xb61e <_Z12getMorseCharc+0x364>

		case '2':
		{
			morse.pattern = 0x1c;   /* 0001 1100; */
    b474:	8c e1       	ldi	r24, 0x1C	; 28
    b476:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    b478:	85 e0       	ldi	r24, 0x05	; 5
    b47a:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 15;
    b47c:	8f e0       	ldi	r24, 0x0F	; 15
    b47e:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b480:	ce c0       	rjmp	.+412    	; 0xb61e <_Z12getMorseCharc+0x364>

		case '3':
		{
			morse.pattern = 0x18;   /* 0001 1000; */
    b482:	88 e1       	ldi	r24, 0x18	; 24
    b484:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    b486:	85 e0       	ldi	r24, 0x05	; 5
    b488:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    b48a:	8d e0       	ldi	r24, 0x0D	; 13
    b48c:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b48e:	c7 c0       	rjmp	.+398    	; 0xb61e <_Z12getMorseCharc+0x364>

		case '4':
		{
			morse.pattern = 0x10;   /* 0001 0000; */
    b490:	80 e1       	ldi	r24, 0x10	; 16
    b492:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    b494:	85 e0       	ldi	r24, 0x05	; 5
    b496:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    b498:	8b e0       	ldi	r24, 0x0B	; 11
    b49a:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b49c:	c0 c0       	rjmp	.+384    	; 0xb61e <_Z12getMorseCharc+0x364>

		case '5':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    b49e:	19 82       	std	Y+1, r1	; 0x01
			morse.lengthInSymbols = 5;
    b4a0:	85 e0       	ldi	r24, 0x05	; 5
    b4a2:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    b4a4:	89 e0       	ldi	r24, 0x09	; 9
    b4a6:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b4a8:	ba c0       	rjmp	.+372    	; 0xb61e <_Z12getMorseCharc+0x364>

		case '6':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    b4aa:	81 e0       	ldi	r24, 0x01	; 1
    b4ac:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    b4ae:	85 e0       	ldi	r24, 0x05	; 5
    b4b0:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    b4b2:	8b e0       	ldi	r24, 0x0B	; 11
    b4b4:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b4b6:	b3 c0       	rjmp	.+358    	; 0xb61e <_Z12getMorseCharc+0x364>

		case '7':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
    b4b8:	83 e0       	ldi	r24, 0x03	; 3
    b4ba:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    b4bc:	85 e0       	ldi	r24, 0x05	; 5
    b4be:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    b4c0:	8d e0       	ldi	r24, 0x0D	; 13
    b4c2:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b4c4:	ac c0       	rjmp	.+344    	; 0xb61e <_Z12getMorseCharc+0x364>

		case '8':
		{
			morse.pattern = 0x07;   /* 0000 0111; */
    b4c6:	87 e0       	ldi	r24, 0x07	; 7
    b4c8:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    b4ca:	85 e0       	ldi	r24, 0x05	; 5
    b4cc:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 15;
    b4ce:	8f e0       	ldi	r24, 0x0F	; 15
    b4d0:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b4d2:	a5 c0       	rjmp	.+330    	; 0xb61e <_Z12getMorseCharc+0x364>

		case '9':
		{
			morse.pattern = 0x0f;   /* 0000 1111; */
    b4d4:	8f e0       	ldi	r24, 0x0F	; 15
    b4d6:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    b4d8:	85 e0       	ldi	r24, 0x05	; 5
    b4da:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 17;
    b4dc:	81 e1       	ldi	r24, 0x11	; 17
    b4de:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b4e0:	9e c0       	rjmp	.+316    	; 0xb61e <_Z12getMorseCharc+0x364>

		case '.':
		{
			morse.pattern = 0x2a;   /* 0010 1010; */
    b4e2:	8a e2       	ldi	r24, 0x2A	; 42
    b4e4:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    b4e6:	86 e0       	ldi	r24, 0x06	; 6
    b4e8:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 17;
    b4ea:	81 e1       	ldi	r24, 0x11	; 17
    b4ec:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b4ee:	97 c0       	rjmp	.+302    	; 0xb61e <_Z12getMorseCharc+0x364>

		case ',':
		{
			morse.pattern = 0x33;   /* 0011 0011; */
    b4f0:	83 e3       	ldi	r24, 0x33	; 51
    b4f2:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    b4f4:	86 e0       	ldi	r24, 0x06	; 6
    b4f6:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 19;
    b4f8:	83 e1       	ldi	r24, 0x13	; 19
    b4fa:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b4fc:	90 c0       	rjmp	.+288    	; 0xb61e <_Z12getMorseCharc+0x364>

		case '?':
		{
			morse.pattern = 0x0c;   /* 0000 1100; */
    b4fe:	8c e0       	ldi	r24, 0x0C	; 12
    b500:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    b502:	86 e0       	ldi	r24, 0x06	; 6
    b504:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 15;
    b506:	8f e0       	ldi	r24, 0x0F	; 15
    b508:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b50a:	89 c0       	rjmp	.+274    	; 0xb61e <_Z12getMorseCharc+0x364>

		case '\'':
		{
			morse.pattern = 0x1e;   /* 0001 1110; */
    b50c:	8e e1       	ldi	r24, 0x1E	; 30
    b50e:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    b510:	86 e0       	ldi	r24, 0x06	; 6
    b512:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 19;
    b514:	83 e1       	ldi	r24, 0x13	; 19
    b516:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b518:	82 c0       	rjmp	.+260    	; 0xb61e <_Z12getMorseCharc+0x364>

		case '!':
		{
			morse.pattern = 0x35;   /* 0011 0101; */
    b51a:	85 e3       	ldi	r24, 0x35	; 53
    b51c:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    b51e:	86 e0       	ldi	r24, 0x06	; 6
    b520:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 19;
    b522:	83 e1       	ldi	r24, 0x13	; 19
    b524:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b526:	7b c0       	rjmp	.+246    	; 0xb61e <_Z12getMorseCharc+0x364>

		case '/':
		{
			morse.pattern = 0x09;   /* 0000 1001; */
    b528:	89 e0       	ldi	r24, 0x09	; 9
    b52a:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    b52c:	85 e0       	ldi	r24, 0x05	; 5
    b52e:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    b530:	8d e0       	ldi	r24, 0x0D	; 13
    b532:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b534:	74 c0       	rjmp	.+232    	; 0xb61e <_Z12getMorseCharc+0x364>

		case '(':
		{
			morse.pattern = 0x0d;   /* 0000 1101; */
    b536:	8d e0       	ldi	r24, 0x0D	; 13
    b538:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    b53a:	85 e0       	ldi	r24, 0x05	; 5
    b53c:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 15;
    b53e:	8f e0       	ldi	r24, 0x0F	; 15
    b540:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b542:	6d c0       	rjmp	.+218    	; 0xb61e <_Z12getMorseCharc+0x364>

		case ')':
		{
			morse.pattern = 0x2d;   /* 0010 1101; */
    b544:	8d e2       	ldi	r24, 0x2D	; 45
    b546:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    b548:	86 e0       	ldi	r24, 0x06	; 6
    b54a:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 19;
    b54c:	83 e1       	ldi	r24, 0x13	; 19
    b54e:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b550:	66 c0       	rjmp	.+204    	; 0xb61e <_Z12getMorseCharc+0x364>

		case '&':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
    b552:	82 e0       	ldi	r24, 0x02	; 2
    b554:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    b556:	85 e0       	ldi	r24, 0x05	; 5
    b558:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    b55a:	8b e0       	ldi	r24, 0x0B	; 11
    b55c:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b55e:	5f c0       	rjmp	.+190    	; 0xb61e <_Z12getMorseCharc+0x364>

		case ':':
		{
			morse.pattern = 0x07;   /* 0000 0111; */
    b560:	87 e0       	ldi	r24, 0x07	; 7
    b562:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    b564:	86 e0       	ldi	r24, 0x06	; 6
    b566:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 17;
    b568:	81 e1       	ldi	r24, 0x11	; 17
    b56a:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b56c:	58 c0       	rjmp	.+176    	; 0xb61e <_Z12getMorseCharc+0x364>

		case ';':
		{
			morse.pattern = 0x15;   /* 0001 0101; */
    b56e:	85 e1       	ldi	r24, 0x15	; 21
    b570:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    b572:	86 e0       	ldi	r24, 0x06	; 6
    b574:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 12;
    b576:	8c e0       	ldi	r24, 0x0C	; 12
    b578:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b57a:	51 c0       	rjmp	.+162    	; 0xb61e <_Z12getMorseCharc+0x364>

		case '=':
		{
			morse.pattern = 0x11;   /* 0001 0001; */
    b57c:	81 e1       	ldi	r24, 0x11	; 17
    b57e:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    b580:	85 e0       	ldi	r24, 0x05	; 5
    b582:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    b584:	8d e0       	ldi	r24, 0x0D	; 13
    b586:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b588:	4a c0       	rjmp	.+148    	; 0xb61e <_Z12getMorseCharc+0x364>

		case '+': /* AR */
		{
			morse.pattern = 0x0a;   /* 0000 1010; */
    b58a:	8a e0       	ldi	r24, 0x0A	; 10
    b58c:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    b58e:	85 e0       	ldi	r24, 0x05	; 5
    b590:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    b592:	8d e0       	ldi	r24, 0x0D	; 13
    b594:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b596:	43 c0       	rjmp	.+134    	; 0xb61e <_Z12getMorseCharc+0x364>

		case '~': /* SK */
		{
			morse.pattern = 0x28;   /* 0010 1000; */
    b598:	88 e2       	ldi	r24, 0x28	; 40
    b59a:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    b59c:	86 e0       	ldi	r24, 0x06	; 6
    b59e:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 15;
    b5a0:	8f e0       	ldi	r24, 0x0F	; 15
    b5a2:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b5a4:	3c c0       	rjmp	.+120    	; 0xb61e <_Z12getMorseCharc+0x364>

		case '-':
		{
			morse.pattern = 0x21;   /* 0010 0001; */
    b5a6:	81 e2       	ldi	r24, 0x21	; 33
    b5a8:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    b5aa:	86 e0       	ldi	r24, 0x06	; 6
    b5ac:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 15;
    b5ae:	8f e0       	ldi	r24, 0x0F	; 15
    b5b0:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b5b2:	35 c0       	rjmp	.+106    	; 0xb61e <_Z12getMorseCharc+0x364>

		case '_':
		{
			morse.pattern = 0x2c;   /* 0010 1100; */
    b5b4:	8c e2       	ldi	r24, 0x2C	; 44
    b5b6:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    b5b8:	86 e0       	ldi	r24, 0x06	; 6
    b5ba:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 17;
    b5bc:	81 e1       	ldi	r24, 0x11	; 17
    b5be:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b5c0:	2e c0       	rjmp	.+92     	; 0xb61e <_Z12getMorseCharc+0x364>

		case '"':
		{
			morse.pattern = 0x12;   /* 0001 0010; */
    b5c2:	82 e1       	ldi	r24, 0x12	; 18
    b5c4:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    b5c6:	86 e0       	ldi	r24, 0x06	; 6
    b5c8:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 15;
    b5ca:	8f e0       	ldi	r24, 0x0F	; 15
    b5cc:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b5ce:	27 c0       	rjmp	.+78     	; 0xb61e <_Z12getMorseCharc+0x364>

		case '$':
		{
			morse.pattern = 0x48;   /* 0100 1000; */
    b5d0:	88 e4       	ldi	r24, 0x48	; 72
    b5d2:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 7;
    b5d4:	87 e0       	ldi	r24, 0x07	; 7
    b5d6:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 17;
    b5d8:	81 e1       	ldi	r24, 0x11	; 17
    b5da:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b5dc:	20 c0       	rjmp	.+64     	; 0xb61e <_Z12getMorseCharc+0x364>

		case '@':
		{
			morse.pattern = 0x16;   /* 0001 0110; */
    b5de:	86 e1       	ldi	r24, 0x16	; 22
    b5e0:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    b5e2:	86 e0       	ldi	r24, 0x06	; 6
    b5e4:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 17;
    b5e6:	81 e1       	ldi	r24, 0x11	; 17
    b5e8:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b5ea:	19 c0       	rjmp	.+50     	; 0xb61e <_Z12getMorseCharc+0x364>

		case '|':                       /* inter-word space */
		{ morse.pattern = 0xff;         /* 1000 0000; */
    b5ec:	8f ef       	ldi	r24, 0xFF	; 255
    b5ee:	89 83       	std	Y+1, r24	; 0x01
		  morse.lengthInSymbols = 7;
    b5f0:	87 e0       	ldi	r24, 0x07	; 7
    b5f2:	8a 83       	std	Y+2, r24	; 0x02
		  morse.lengthInElements = 4;   /* adjusted by -3 to account for inter-character space */
    b5f4:	84 e0       	ldi	r24, 0x04	; 4
    b5f6:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b5f8:	12 c0       	rjmp	.+36     	; 0xb61e <_Z12getMorseCharc+0x364>

		case ' ':                       /* inter-word space */
		{ morse.pattern = 0xfe;         /* 1000 0000; */
    b5fa:	8e ef       	ldi	r24, 0xFE	; 254
    b5fc:	89 83       	std	Y+1, r24	; 0x01
		  morse.lengthInSymbols = 7;
    b5fe:	87 e0       	ldi	r24, 0x07	; 7
    b600:	8a 83       	std	Y+2, r24	; 0x02
		  morse.lengthInElements = 7;   /* 4 + 3 (character space) = 7 */
    b602:	87 e0       	ldi	r24, 0x07	; 7
    b604:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b606:	0b c0       	rjmp	.+22     	; 0xb61e <_Z12getMorseCharc+0x364>

		case '<':                       /* long keydown */
		{
			morse.pattern = 0x1f;       /* 0001 1111; */
    b608:	8f e1       	ldi	r24, 0x1F	; 31
    b60a:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    b60c:	85 e0       	ldi	r24, 0x05	; 5
    b60e:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 19;
    b610:	83 e1       	ldi	r24, 0x13	; 19
    b612:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b614:	04 c0       	rjmp	.+8      	; 0xb61e <_Z12getMorseCharc+0x364>

		default:
		{
			morse.pattern = 0x0000; /* 0000 0000; */
    b616:	19 82       	std	Y+1, r1	; 0x01
			morse.lengthInSymbols = 0;
    b618:	1a 82       	std	Y+2, r1	; 0x02
			morse.lengthInElements = 0;
    b61a:	1b 82       	std	Y+3, r1	; 0x03
		}
		break;
    b61c:	00 00       	nop
	}

	return( morse);
    b61e:	89 81       	ldd	r24, Y+1	; 0x01
    b620:	9a 81       	ldd	r25, Y+2	; 0x02
    b622:	ab 81       	ldd	r26, Y+3	; 0x03
}
    b624:	bc 01       	movw	r22, r24
    b626:	8a 2f       	mov	r24, r26
    b628:	24 96       	adiw	r28, 0x04	; 4
    b62a:	cd bf       	out	0x3d, r28	; 61
    b62c:	de bf       	out	0x3e, r29	; 62
    b62e:	df 91       	pop	r29
    b630:	cf 91       	pop	r28
    b632:	08 95       	ret

0000b634 <protected_write_io>:
	PUBLIC_FUNCTION(protected_write_io)

#if defined(__GNUC__)
  
#ifdef RAMPZ
	out     _SFR_IO_ADDR(RAMPZ), r1         // Clear bits 23:16 of Z
    b634:	1b be       	out	0x3b, r1	; 59
#endif
	movw    r30, r24                // Load addr into Z
    b636:	fc 01       	movw	r30, r24
	out     CCP, r22                // Start CCP handshake
    b638:	64 bf       	out	0x34, r22	; 52
	st      Z, r20                  // Write value to I/O register
    b63a:	40 83       	st	Z, r20
	ret                             // Return to caller
    b63c:	08 95       	ret

0000b63e <PORTC_set_pin_pull_mode>:

	while(serialbus_send_text((char*)textPrompt))
	{
		;
	}
}
    b63e:	cf 93       	push	r28
    b640:	df 93       	push	r29
    b642:	00 d0       	rcall	.+0      	; 0xb644 <PORTC_set_pin_pull_mode+0x6>
    b644:	00 d0       	rcall	.+0      	; 0xb646 <PORTC_set_pin_pull_mode+0x8>
    b646:	cd b7       	in	r28, 0x3d	; 61
    b648:	de b7       	in	r29, 0x3e	; 62
    b64a:	8b 83       	std	Y+3, r24	; 0x03
    b64c:	6c 83       	std	Y+4, r22	; 0x04
    b64e:	8b 81       	ldd	r24, Y+3	; 0x03
    b650:	88 2f       	mov	r24, r24
    b652:	90 e0       	ldi	r25, 0x00	; 0
    b654:	80 5b       	subi	r24, 0xB0	; 176
    b656:	9b 4f       	sbci	r25, 0xFB	; 251
    b658:	89 83       	std	Y+1, r24	; 0x01
    b65a:	9a 83       	std	Y+2, r25	; 0x02
    b65c:	8c 81       	ldd	r24, Y+4	; 0x04
    b65e:	81 30       	cpi	r24, 0x01	; 1
    b660:	59 f4       	brne	.+22     	; 0xb678 <PORTC_set_pin_pull_mode+0x3a>
    b662:	89 81       	ldd	r24, Y+1	; 0x01
    b664:	9a 81       	ldd	r25, Y+2	; 0x02
    b666:	fc 01       	movw	r30, r24
    b668:	80 81       	ld	r24, Z
    b66a:	28 2f       	mov	r18, r24
    b66c:	28 60       	ori	r18, 0x08	; 8
    b66e:	89 81       	ldd	r24, Y+1	; 0x01
    b670:	9a 81       	ldd	r25, Y+2	; 0x02
    b672:	fc 01       	movw	r30, r24
    b674:	20 83       	st	Z, r18
    b676:	0d c0       	rjmp	.+26     	; 0xb692 <PORTC_set_pin_pull_mode+0x54>
    b678:	8c 81       	ldd	r24, Y+4	; 0x04
    b67a:	88 23       	and	r24, r24
    b67c:	51 f4       	brne	.+20     	; 0xb692 <PORTC_set_pin_pull_mode+0x54>
    b67e:	89 81       	ldd	r24, Y+1	; 0x01
    b680:	9a 81       	ldd	r25, Y+2	; 0x02
    b682:	fc 01       	movw	r30, r24
    b684:	80 81       	ld	r24, Z
    b686:	28 2f       	mov	r18, r24
    b688:	27 7f       	andi	r18, 0xF7	; 247
    b68a:	89 81       	ldd	r24, Y+1	; 0x01
    b68c:	9a 81       	ldd	r25, Y+2	; 0x02
    b68e:	fc 01       	movw	r30, r24
    b690:	20 83       	st	Z, r18
    b692:	00 00       	nop
    b694:	24 96       	adiw	r28, 0x04	; 4
    b696:	cd bf       	out	0x3d, r28	; 61
    b698:	de bf       	out	0x3e, r29	; 62
    b69a:	df 91       	pop	r29
    b69c:	cf 91       	pop	r28
    b69e:	08 95       	ret

0000b6a0 <PORTC_set_pin_dir>:
    b6a0:	cf 93       	push	r28
    b6a2:	df 93       	push	r29
    b6a4:	00 d0       	rcall	.+0      	; 0xb6a6 <PORTC_set_pin_dir+0x6>
    b6a6:	cd b7       	in	r28, 0x3d	; 61
    b6a8:	de b7       	in	r29, 0x3e	; 62
    b6aa:	89 83       	std	Y+1, r24	; 0x01
    b6ac:	6a 83       	std	Y+2, r22	; 0x02
    b6ae:	8a 81       	ldd	r24, Y+2	; 0x02
    b6b0:	88 2f       	mov	r24, r24
    b6b2:	90 e0       	ldi	r25, 0x00	; 0
    b6b4:	81 30       	cpi	r24, 0x01	; 1
    b6b6:	91 05       	cpc	r25, r1
    b6b8:	e1 f0       	breq	.+56     	; 0xb6f2 <PORTC_set_pin_dir+0x52>
    b6ba:	82 30       	cpi	r24, 0x02	; 2
    b6bc:	91 05       	cpc	r25, r1
    b6be:	71 f1       	breq	.+92     	; 0xb71c <PORTC_set_pin_dir+0x7c>
    b6c0:	89 2b       	or	r24, r25
    b6c2:	09 f0       	breq	.+2      	; 0xb6c6 <PORTC_set_pin_dir+0x26>
    b6c4:	3b c0       	rjmp	.+118    	; 0xb73c <PORTC_set_pin_dir+0x9c>
    b6c6:	88 e0       	ldi	r24, 0x08	; 8
    b6c8:	90 e0       	ldi	r25, 0x00	; 0
    b6ca:	28 e0       	ldi	r18, 0x08	; 8
    b6cc:	30 e0       	ldi	r19, 0x00	; 0
    b6ce:	f9 01       	movw	r30, r18
    b6d0:	20 81       	ld	r18, Z
    b6d2:	62 2f       	mov	r22, r18
    b6d4:	29 81       	ldd	r18, Y+1	; 0x01
    b6d6:	42 2f       	mov	r20, r18
    b6d8:	50 e0       	ldi	r21, 0x00	; 0
    b6da:	21 e0       	ldi	r18, 0x01	; 1
    b6dc:	30 e0       	ldi	r19, 0x00	; 0
    b6de:	02 c0       	rjmp	.+4      	; 0xb6e4 <PORTC_set_pin_dir+0x44>
    b6e0:	22 0f       	add	r18, r18
    b6e2:	33 1f       	adc	r19, r19
    b6e4:	4a 95       	dec	r20
    b6e6:	e2 f7       	brpl	.-8      	; 0xb6e0 <PORTC_set_pin_dir+0x40>
    b6e8:	20 95       	com	r18
    b6ea:	26 23       	and	r18, r22
    b6ec:	fc 01       	movw	r30, r24
    b6ee:	20 83       	st	Z, r18
    b6f0:	25 c0       	rjmp	.+74     	; 0xb73c <PORTC_set_pin_dir+0x9c>
    b6f2:	88 e0       	ldi	r24, 0x08	; 8
    b6f4:	90 e0       	ldi	r25, 0x00	; 0
    b6f6:	28 e0       	ldi	r18, 0x08	; 8
    b6f8:	30 e0       	ldi	r19, 0x00	; 0
    b6fa:	f9 01       	movw	r30, r18
    b6fc:	20 81       	ld	r18, Z
    b6fe:	62 2f       	mov	r22, r18
    b700:	29 81       	ldd	r18, Y+1	; 0x01
    b702:	42 2f       	mov	r20, r18
    b704:	50 e0       	ldi	r21, 0x00	; 0
    b706:	21 e0       	ldi	r18, 0x01	; 1
    b708:	30 e0       	ldi	r19, 0x00	; 0
    b70a:	02 c0       	rjmp	.+4      	; 0xb710 <PORTC_set_pin_dir+0x70>
    b70c:	22 0f       	add	r18, r18
    b70e:	33 1f       	adc	r19, r19
    b710:	4a 95       	dec	r20
    b712:	e2 f7       	brpl	.-8      	; 0xb70c <PORTC_set_pin_dir+0x6c>
    b714:	26 2b       	or	r18, r22
    b716:	fc 01       	movw	r30, r24
    b718:	20 83       	st	Z, r18
    b71a:	10 c0       	rjmp	.+32     	; 0xb73c <PORTC_set_pin_dir+0x9c>
    b71c:	89 81       	ldd	r24, Y+1	; 0x01
    b71e:	88 2f       	mov	r24, r24
    b720:	90 e0       	ldi	r25, 0x00	; 0
    b722:	80 5b       	subi	r24, 0xB0	; 176
    b724:	9b 4f       	sbci	r25, 0xFB	; 251
    b726:	29 81       	ldd	r18, Y+1	; 0x01
    b728:	22 2f       	mov	r18, r18
    b72a:	30 e0       	ldi	r19, 0x00	; 0
    b72c:	20 5b       	subi	r18, 0xB0	; 176
    b72e:	3b 4f       	sbci	r19, 0xFB	; 251
    b730:	f9 01       	movw	r30, r18
    b732:	20 81       	ld	r18, Z
    b734:	28 60       	ori	r18, 0x08	; 8
    b736:	fc 01       	movw	r30, r24
    b738:	20 83       	st	Z, r18
    b73a:	00 00       	nop
    b73c:	00 00       	nop
    b73e:	0f 90       	pop	r0
    b740:	0f 90       	pop	r0
    b742:	df 91       	pop	r29
    b744:	cf 91       	pop	r28
    b746:	08 95       	ret

0000b748 <PORTC_set_pin_level>:
    b748:	cf 93       	push	r28
    b74a:	df 93       	push	r29
    b74c:	00 d0       	rcall	.+0      	; 0xb74e <PORTC_set_pin_level+0x6>
    b74e:	cd b7       	in	r28, 0x3d	; 61
    b750:	de b7       	in	r29, 0x3e	; 62
    b752:	89 83       	std	Y+1, r24	; 0x01
    b754:	6a 83       	std	Y+2, r22	; 0x02
    b756:	8a 81       	ldd	r24, Y+2	; 0x02
    b758:	88 23       	and	r24, r24
    b75a:	a9 f0       	breq	.+42     	; 0xb786 <PORTC_set_pin_level+0x3e>
    b75c:	88 e0       	ldi	r24, 0x08	; 8
    b75e:	90 e0       	ldi	r25, 0x00	; 0
    b760:	28 e0       	ldi	r18, 0x08	; 8
    b762:	30 e0       	ldi	r19, 0x00	; 0
    b764:	f9 01       	movw	r30, r18
    b766:	21 81       	ldd	r18, Z+1	; 0x01
    b768:	62 2f       	mov	r22, r18
    b76a:	29 81       	ldd	r18, Y+1	; 0x01
    b76c:	42 2f       	mov	r20, r18
    b76e:	50 e0       	ldi	r21, 0x00	; 0
    b770:	21 e0       	ldi	r18, 0x01	; 1
    b772:	30 e0       	ldi	r19, 0x00	; 0
    b774:	02 c0       	rjmp	.+4      	; 0xb77a <PORTC_set_pin_level+0x32>
    b776:	22 0f       	add	r18, r18
    b778:	33 1f       	adc	r19, r19
    b77a:	4a 95       	dec	r20
    b77c:	e2 f7       	brpl	.-8      	; 0xb776 <PORTC_set_pin_level+0x2e>
    b77e:	26 2b       	or	r18, r22
    b780:	fc 01       	movw	r30, r24
    b782:	21 83       	std	Z+1, r18	; 0x01
    b784:	15 c0       	rjmp	.+42     	; 0xb7b0 <PORTC_set_pin_level+0x68>
    b786:	88 e0       	ldi	r24, 0x08	; 8
    b788:	90 e0       	ldi	r25, 0x00	; 0
    b78a:	28 e0       	ldi	r18, 0x08	; 8
    b78c:	30 e0       	ldi	r19, 0x00	; 0
    b78e:	f9 01       	movw	r30, r18
    b790:	21 81       	ldd	r18, Z+1	; 0x01
    b792:	62 2f       	mov	r22, r18
    b794:	29 81       	ldd	r18, Y+1	; 0x01
    b796:	42 2f       	mov	r20, r18
    b798:	50 e0       	ldi	r21, 0x00	; 0
    b79a:	21 e0       	ldi	r18, 0x01	; 1
    b79c:	30 e0       	ldi	r19, 0x00	; 0
    b79e:	02 c0       	rjmp	.+4      	; 0xb7a4 <PORTC_set_pin_level+0x5c>
    b7a0:	22 0f       	add	r18, r18
    b7a2:	33 1f       	adc	r19, r19
    b7a4:	4a 95       	dec	r20
    b7a6:	e2 f7       	brpl	.-8      	; 0xb7a0 <PORTC_set_pin_level+0x58>
    b7a8:	20 95       	com	r18
    b7aa:	26 23       	and	r18, r22
    b7ac:	fc 01       	movw	r30, r24
    b7ae:	21 83       	std	Z+1, r18	; 0x01
    b7b0:	00 00       	nop
    b7b2:	0f 90       	pop	r0
    b7b4:	0f 90       	pop	r0
    b7b6:	df 91       	pop	r29
    b7b8:	cf 91       	pop	r28
    b7ba:	08 95       	ret

0000b7bc <PORTE_set_pin_pull_mode>:
    b7bc:	cf 93       	push	r28
    b7be:	df 93       	push	r29
    b7c0:	00 d0       	rcall	.+0      	; 0xb7c2 <PORTE_set_pin_pull_mode+0x6>
    b7c2:	00 d0       	rcall	.+0      	; 0xb7c4 <PORTE_set_pin_pull_mode+0x8>
    b7c4:	cd b7       	in	r28, 0x3d	; 61
    b7c6:	de b7       	in	r29, 0x3e	; 62
    b7c8:	8b 83       	std	Y+3, r24	; 0x03
    b7ca:	6c 83       	std	Y+4, r22	; 0x04
    b7cc:	8b 81       	ldd	r24, Y+3	; 0x03
    b7ce:	88 2f       	mov	r24, r24
    b7d0:	90 e0       	ldi	r25, 0x00	; 0
    b7d2:	80 57       	subi	r24, 0x70	; 112
    b7d4:	9b 4f       	sbci	r25, 0xFB	; 251
    b7d6:	89 83       	std	Y+1, r24	; 0x01
    b7d8:	9a 83       	std	Y+2, r25	; 0x02
    b7da:	8c 81       	ldd	r24, Y+4	; 0x04
    b7dc:	81 30       	cpi	r24, 0x01	; 1
    b7de:	59 f4       	brne	.+22     	; 0xb7f6 <PORTE_set_pin_pull_mode+0x3a>
    b7e0:	89 81       	ldd	r24, Y+1	; 0x01
    b7e2:	9a 81       	ldd	r25, Y+2	; 0x02
    b7e4:	fc 01       	movw	r30, r24
    b7e6:	80 81       	ld	r24, Z
    b7e8:	28 2f       	mov	r18, r24
    b7ea:	28 60       	ori	r18, 0x08	; 8
    b7ec:	89 81       	ldd	r24, Y+1	; 0x01
    b7ee:	9a 81       	ldd	r25, Y+2	; 0x02
    b7f0:	fc 01       	movw	r30, r24
    b7f2:	20 83       	st	Z, r18
    b7f4:	0d c0       	rjmp	.+26     	; 0xb810 <PORTE_set_pin_pull_mode+0x54>
    b7f6:	8c 81       	ldd	r24, Y+4	; 0x04
    b7f8:	88 23       	and	r24, r24
    b7fa:	51 f4       	brne	.+20     	; 0xb810 <PORTE_set_pin_pull_mode+0x54>
    b7fc:	89 81       	ldd	r24, Y+1	; 0x01
    b7fe:	9a 81       	ldd	r25, Y+2	; 0x02
    b800:	fc 01       	movw	r30, r24
    b802:	80 81       	ld	r24, Z
    b804:	28 2f       	mov	r18, r24
    b806:	27 7f       	andi	r18, 0xF7	; 247
    b808:	89 81       	ldd	r24, Y+1	; 0x01
    b80a:	9a 81       	ldd	r25, Y+2	; 0x02
    b80c:	fc 01       	movw	r30, r24
    b80e:	20 83       	st	Z, r18
    b810:	00 00       	nop
    b812:	24 96       	adiw	r28, 0x04	; 4
    b814:	cd bf       	out	0x3d, r28	; 61
    b816:	de bf       	out	0x3e, r29	; 62
    b818:	df 91       	pop	r29
    b81a:	cf 91       	pop	r28
    b81c:	08 95       	ret

0000b81e <PORTE_set_pin_dir>:
    b81e:	cf 93       	push	r28
    b820:	df 93       	push	r29
    b822:	00 d0       	rcall	.+0      	; 0xb824 <PORTE_set_pin_dir+0x6>
    b824:	cd b7       	in	r28, 0x3d	; 61
    b826:	de b7       	in	r29, 0x3e	; 62
    b828:	89 83       	std	Y+1, r24	; 0x01
    b82a:	6a 83       	std	Y+2, r22	; 0x02
    b82c:	8a 81       	ldd	r24, Y+2	; 0x02
    b82e:	88 2f       	mov	r24, r24
    b830:	90 e0       	ldi	r25, 0x00	; 0
    b832:	81 30       	cpi	r24, 0x01	; 1
    b834:	91 05       	cpc	r25, r1
    b836:	e1 f0       	breq	.+56     	; 0xb870 <PORTE_set_pin_dir+0x52>
    b838:	82 30       	cpi	r24, 0x02	; 2
    b83a:	91 05       	cpc	r25, r1
    b83c:	71 f1       	breq	.+92     	; 0xb89a <PORTE_set_pin_dir+0x7c>
    b83e:	89 2b       	or	r24, r25
    b840:	09 f0       	breq	.+2      	; 0xb844 <PORTE_set_pin_dir+0x26>
    b842:	3b c0       	rjmp	.+118    	; 0xb8ba <PORTE_set_pin_dir+0x9c>
    b844:	80 e1       	ldi	r24, 0x10	; 16
    b846:	90 e0       	ldi	r25, 0x00	; 0
    b848:	20 e1       	ldi	r18, 0x10	; 16
    b84a:	30 e0       	ldi	r19, 0x00	; 0
    b84c:	f9 01       	movw	r30, r18
    b84e:	20 81       	ld	r18, Z
    b850:	62 2f       	mov	r22, r18
    b852:	29 81       	ldd	r18, Y+1	; 0x01
    b854:	42 2f       	mov	r20, r18
    b856:	50 e0       	ldi	r21, 0x00	; 0
    b858:	21 e0       	ldi	r18, 0x01	; 1
    b85a:	30 e0       	ldi	r19, 0x00	; 0
    b85c:	02 c0       	rjmp	.+4      	; 0xb862 <PORTE_set_pin_dir+0x44>
    b85e:	22 0f       	add	r18, r18
    b860:	33 1f       	adc	r19, r19
    b862:	4a 95       	dec	r20
    b864:	e2 f7       	brpl	.-8      	; 0xb85e <PORTE_set_pin_dir+0x40>
    b866:	20 95       	com	r18
    b868:	26 23       	and	r18, r22
    b86a:	fc 01       	movw	r30, r24
    b86c:	20 83       	st	Z, r18
    b86e:	25 c0       	rjmp	.+74     	; 0xb8ba <PORTE_set_pin_dir+0x9c>
    b870:	80 e1       	ldi	r24, 0x10	; 16
    b872:	90 e0       	ldi	r25, 0x00	; 0
    b874:	20 e1       	ldi	r18, 0x10	; 16
    b876:	30 e0       	ldi	r19, 0x00	; 0
    b878:	f9 01       	movw	r30, r18
    b87a:	20 81       	ld	r18, Z
    b87c:	62 2f       	mov	r22, r18
    b87e:	29 81       	ldd	r18, Y+1	; 0x01
    b880:	42 2f       	mov	r20, r18
    b882:	50 e0       	ldi	r21, 0x00	; 0
    b884:	21 e0       	ldi	r18, 0x01	; 1
    b886:	30 e0       	ldi	r19, 0x00	; 0
    b888:	02 c0       	rjmp	.+4      	; 0xb88e <PORTE_set_pin_dir+0x70>
    b88a:	22 0f       	add	r18, r18
    b88c:	33 1f       	adc	r19, r19
    b88e:	4a 95       	dec	r20
    b890:	e2 f7       	brpl	.-8      	; 0xb88a <PORTE_set_pin_dir+0x6c>
    b892:	26 2b       	or	r18, r22
    b894:	fc 01       	movw	r30, r24
    b896:	20 83       	st	Z, r18
    b898:	10 c0       	rjmp	.+32     	; 0xb8ba <PORTE_set_pin_dir+0x9c>
    b89a:	89 81       	ldd	r24, Y+1	; 0x01
    b89c:	88 2f       	mov	r24, r24
    b89e:	90 e0       	ldi	r25, 0x00	; 0
    b8a0:	80 57       	subi	r24, 0x70	; 112
    b8a2:	9b 4f       	sbci	r25, 0xFB	; 251
    b8a4:	29 81       	ldd	r18, Y+1	; 0x01
    b8a6:	22 2f       	mov	r18, r18
    b8a8:	30 e0       	ldi	r19, 0x00	; 0
    b8aa:	20 57       	subi	r18, 0x70	; 112
    b8ac:	3b 4f       	sbci	r19, 0xFB	; 251
    b8ae:	f9 01       	movw	r30, r18
    b8b0:	20 81       	ld	r18, Z
    b8b2:	28 60       	ori	r18, 0x08	; 8
    b8b4:	fc 01       	movw	r30, r24
    b8b6:	20 83       	st	Z, r18
    b8b8:	00 00       	nop
    b8ba:	00 00       	nop
    b8bc:	0f 90       	pop	r0
    b8be:	0f 90       	pop	r0
    b8c0:	df 91       	pop	r29
    b8c2:	cf 91       	pop	r28
    b8c4:	08 95       	ret

0000b8c6 <PORTE_set_pin_level>:
    b8c6:	cf 93       	push	r28
    b8c8:	df 93       	push	r29
    b8ca:	00 d0       	rcall	.+0      	; 0xb8cc <PORTE_set_pin_level+0x6>
    b8cc:	cd b7       	in	r28, 0x3d	; 61
    b8ce:	de b7       	in	r29, 0x3e	; 62
    b8d0:	89 83       	std	Y+1, r24	; 0x01
    b8d2:	6a 83       	std	Y+2, r22	; 0x02
    b8d4:	8a 81       	ldd	r24, Y+2	; 0x02
    b8d6:	88 23       	and	r24, r24
    b8d8:	a9 f0       	breq	.+42     	; 0xb904 <PORTE_set_pin_level+0x3e>
    b8da:	80 e1       	ldi	r24, 0x10	; 16
    b8dc:	90 e0       	ldi	r25, 0x00	; 0
    b8de:	20 e1       	ldi	r18, 0x10	; 16
    b8e0:	30 e0       	ldi	r19, 0x00	; 0
    b8e2:	f9 01       	movw	r30, r18
    b8e4:	21 81       	ldd	r18, Z+1	; 0x01
    b8e6:	62 2f       	mov	r22, r18
    b8e8:	29 81       	ldd	r18, Y+1	; 0x01
    b8ea:	42 2f       	mov	r20, r18
    b8ec:	50 e0       	ldi	r21, 0x00	; 0
    b8ee:	21 e0       	ldi	r18, 0x01	; 1
    b8f0:	30 e0       	ldi	r19, 0x00	; 0
    b8f2:	02 c0       	rjmp	.+4      	; 0xb8f8 <PORTE_set_pin_level+0x32>
    b8f4:	22 0f       	add	r18, r18
    b8f6:	33 1f       	adc	r19, r19
    b8f8:	4a 95       	dec	r20
    b8fa:	e2 f7       	brpl	.-8      	; 0xb8f4 <PORTE_set_pin_level+0x2e>
    b8fc:	26 2b       	or	r18, r22
    b8fe:	fc 01       	movw	r30, r24
    b900:	21 83       	std	Z+1, r18	; 0x01
    b902:	15 c0       	rjmp	.+42     	; 0xb92e <PORTE_set_pin_level+0x68>
    b904:	80 e1       	ldi	r24, 0x10	; 16
    b906:	90 e0       	ldi	r25, 0x00	; 0
    b908:	20 e1       	ldi	r18, 0x10	; 16
    b90a:	30 e0       	ldi	r19, 0x00	; 0
    b90c:	f9 01       	movw	r30, r18
    b90e:	21 81       	ldd	r18, Z+1	; 0x01
    b910:	62 2f       	mov	r22, r18
    b912:	29 81       	ldd	r18, Y+1	; 0x01
    b914:	42 2f       	mov	r20, r18
    b916:	50 e0       	ldi	r21, 0x00	; 0
    b918:	21 e0       	ldi	r18, 0x01	; 1
    b91a:	30 e0       	ldi	r19, 0x00	; 0
    b91c:	02 c0       	rjmp	.+4      	; 0xb922 <PORTE_set_pin_level+0x5c>
    b91e:	22 0f       	add	r18, r18
    b920:	33 1f       	adc	r19, r19
    b922:	4a 95       	dec	r20
    b924:	e2 f7       	brpl	.-8      	; 0xb91e <PORTE_set_pin_level+0x58>
    b926:	20 95       	com	r18
    b928:	26 23       	and	r18, r22
    b92a:	fc 01       	movw	r30, r24
    b92c:	21 83       	std	Z+1, r18	; 0x01
    b92e:	00 00       	nop
    b930:	0f 90       	pop	r0
    b932:	0f 90       	pop	r0
    b934:	df 91       	pop	r29
    b936:	cf 91       	pop	r28
    b938:	08 95       	ret

0000b93a <PC0_set_dir>:
    b93a:	cf 93       	push	r28
    b93c:	df 93       	push	r29
    b93e:	1f 92       	push	r1
    b940:	cd b7       	in	r28, 0x3d	; 61
    b942:	de b7       	in	r29, 0x3e	; 62
    b944:	89 83       	std	Y+1, r24	; 0x01
    b946:	69 81       	ldd	r22, Y+1	; 0x01
    b948:	80 e0       	ldi	r24, 0x00	; 0
    b94a:	0e 94 50 5b 	call	0xb6a0	; 0xb6a0 <PORTC_set_pin_dir>
    b94e:	00 00       	nop
    b950:	0f 90       	pop	r0
    b952:	df 91       	pop	r29
    b954:	cf 91       	pop	r28
    b956:	08 95       	ret

0000b958 <PC0_set_level>:
    b958:	cf 93       	push	r28
    b95a:	df 93       	push	r29
    b95c:	1f 92       	push	r1
    b95e:	cd b7       	in	r28, 0x3d	; 61
    b960:	de b7       	in	r29, 0x3e	; 62
    b962:	89 83       	std	Y+1, r24	; 0x01
    b964:	69 81       	ldd	r22, Y+1	; 0x01
    b966:	80 e0       	ldi	r24, 0x00	; 0
    b968:	0e 94 a4 5b 	call	0xb748	; 0xb748 <PORTC_set_pin_level>
    b96c:	00 00       	nop
    b96e:	0f 90       	pop	r0
    b970:	df 91       	pop	r29
    b972:	cf 91       	pop	r28
    b974:	08 95       	ret

0000b976 <PC1_set_pull_mode>:
    b976:	cf 93       	push	r28
    b978:	df 93       	push	r29
    b97a:	1f 92       	push	r1
    b97c:	cd b7       	in	r28, 0x3d	; 61
    b97e:	de b7       	in	r29, 0x3e	; 62
    b980:	89 83       	std	Y+1, r24	; 0x01
    b982:	69 81       	ldd	r22, Y+1	; 0x01
    b984:	81 e0       	ldi	r24, 0x01	; 1
    b986:	0e 94 1f 5b 	call	0xb63e	; 0xb63e <PORTC_set_pin_pull_mode>
    b98a:	00 00       	nop
    b98c:	0f 90       	pop	r0
    b98e:	df 91       	pop	r29
    b990:	cf 91       	pop	r28
    b992:	08 95       	ret

0000b994 <PC1_set_dir>:
    b994:	cf 93       	push	r28
    b996:	df 93       	push	r29
    b998:	1f 92       	push	r1
    b99a:	cd b7       	in	r28, 0x3d	; 61
    b99c:	de b7       	in	r29, 0x3e	; 62
    b99e:	89 83       	std	Y+1, r24	; 0x01
    b9a0:	69 81       	ldd	r22, Y+1	; 0x01
    b9a2:	81 e0       	ldi	r24, 0x01	; 1
    b9a4:	0e 94 50 5b 	call	0xb6a0	; 0xb6a0 <PORTC_set_pin_dir>
    b9a8:	00 00       	nop
    b9aa:	0f 90       	pop	r0
    b9ac:	df 91       	pop	r29
    b9ae:	cf 91       	pop	r28
    b9b0:	08 95       	ret

0000b9b2 <PE0_set_dir>:
    b9b2:	cf 93       	push	r28
    b9b4:	df 93       	push	r29
    b9b6:	1f 92       	push	r1
    b9b8:	cd b7       	in	r28, 0x3d	; 61
    b9ba:	de b7       	in	r29, 0x3e	; 62
    b9bc:	89 83       	std	Y+1, r24	; 0x01
    b9be:	69 81       	ldd	r22, Y+1	; 0x01
    b9c0:	80 e0       	ldi	r24, 0x00	; 0
    b9c2:	0e 94 0f 5c 	call	0xb81e	; 0xb81e <PORTE_set_pin_dir>
    b9c6:	00 00       	nop
    b9c8:	0f 90       	pop	r0
    b9ca:	df 91       	pop	r29
    b9cc:	cf 91       	pop	r28
    b9ce:	08 95       	ret

0000b9d0 <PE0_set_level>:
    b9d0:	cf 93       	push	r28
    b9d2:	df 93       	push	r29
    b9d4:	1f 92       	push	r1
    b9d6:	cd b7       	in	r28, 0x3d	; 61
    b9d8:	de b7       	in	r29, 0x3e	; 62
    b9da:	89 83       	std	Y+1, r24	; 0x01
    b9dc:	69 81       	ldd	r22, Y+1	; 0x01
    b9de:	80 e0       	ldi	r24, 0x00	; 0
    b9e0:	0e 94 63 5c 	call	0xb8c6	; 0xb8c6 <PORTE_set_pin_level>
    b9e4:	00 00       	nop
    b9e6:	0f 90       	pop	r0
    b9e8:	df 91       	pop	r29
    b9ea:	cf 91       	pop	r28
    b9ec:	08 95       	ret

0000b9ee <PE1_set_pull_mode>:
    b9ee:	cf 93       	push	r28
    b9f0:	df 93       	push	r29
    b9f2:	1f 92       	push	r1
    b9f4:	cd b7       	in	r28, 0x3d	; 61
    b9f6:	de b7       	in	r29, 0x3e	; 62
    b9f8:	89 83       	std	Y+1, r24	; 0x01
    b9fa:	69 81       	ldd	r22, Y+1	; 0x01
    b9fc:	81 e0       	ldi	r24, 0x01	; 1
    b9fe:	0e 94 de 5b 	call	0xb7bc	; 0xb7bc <PORTE_set_pin_pull_mode>
    ba02:	00 00       	nop
    ba04:	0f 90       	pop	r0
    ba06:	df 91       	pop	r29
    ba08:	cf 91       	pop	r28
    ba0a:	08 95       	ret

0000ba0c <PE1_set_dir>:
    ba0c:	cf 93       	push	r28
    ba0e:	df 93       	push	r29
    ba10:	1f 92       	push	r1
    ba12:	cd b7       	in	r28, 0x3d	; 61
    ba14:	de b7       	in	r29, 0x3e	; 62
    ba16:	89 83       	std	Y+1, r24	; 0x01
    ba18:	69 81       	ldd	r22, Y+1	; 0x01
    ba1a:	81 e0       	ldi	r24, 0x01	; 1
    ba1c:	0e 94 0f 5c 	call	0xb81e	; 0xb81e <PORTE_set_pin_dir>
    ba20:	00 00       	nop
    ba22:	0f 90       	pop	r0
    ba24:	df 91       	pop	r29
    ba26:	cf 91       	pop	r28
    ba28:	08 95       	ret

0000ba2a <nextFullSBTxBuffer>:
    ba2a:	cf 93       	push	r28
    ba2c:	df 93       	push	r29
    ba2e:	00 d0       	rcall	.+0      	; 0xba30 <nextFullSBTxBuffer+0x6>
    ba30:	cd b7       	in	r28, 0x3d	; 61
    ba32:	de b7       	in	r29, 0x3e	; 62
    ba34:	81 e0       	ldi	r24, 0x01	; 1
    ba36:	89 83       	std	Y+1, r24	; 0x01
    ba38:	1a 82       	std	Y+2, r1	; 0x02
    ba3a:	80 91 8b 48 	lds	r24, 0x488B	; 0x80488b <_ZZ18nextFullSBTxBufferE11bufferIndex>
    ba3e:	28 2f       	mov	r18, r24
    ba40:	30 e0       	ldi	r19, 0x00	; 0
    ba42:	49 e2       	ldi	r20, 0x29	; 41
    ba44:	42 9f       	mul	r20, r18
    ba46:	c0 01       	movw	r24, r0
    ba48:	43 9f       	mul	r20, r19
    ba4a:	90 0d       	add	r25, r0
    ba4c:	11 24       	eor	r1, r1
    ba4e:	8e 56       	subi	r24, 0x6E	; 110
    ba50:	98 4b       	sbci	r25, 0xB8	; 184
    ba52:	fc 01       	movw	r30, r24
    ba54:	90 81       	ld	r25, Z
    ba56:	81 e0       	ldi	r24, 0x01	; 1
    ba58:	99 23       	and	r25, r25
    ba5a:	09 f0       	breq	.+2      	; 0xba5e <nextFullSBTxBuffer+0x34>
    ba5c:	80 e0       	ldi	r24, 0x00	; 0
    ba5e:	88 23       	and	r24, r24
    ba60:	c1 f0       	breq	.+48     	; 0xba92 <nextFullSBTxBuffer+0x68>
    ba62:	8a 81       	ldd	r24, Y+2	; 0x02
    ba64:	8f 5f       	subi	r24, 0xFF	; 255
    ba66:	8a 83       	std	Y+2, r24	; 0x02
    ba68:	81 e0       	ldi	r24, 0x01	; 1
    ba6a:	9a 81       	ldd	r25, Y+2	; 0x02
    ba6c:	93 30       	cpi	r25, 0x03	; 3
    ba6e:	08 f4       	brcc	.+2      	; 0xba72 <nextFullSBTxBuffer+0x48>
    ba70:	80 e0       	ldi	r24, 0x00	; 0
    ba72:	88 23       	and	r24, r24
    ba74:	11 f0       	breq	.+4      	; 0xba7a <nextFullSBTxBuffer+0x50>
    ba76:	19 82       	std	Y+1, r1	; 0x01
    ba78:	0c c0       	rjmp	.+24     	; 0xba92 <nextFullSBTxBuffer+0x68>
    ba7a:	80 91 8b 48 	lds	r24, 0x488B	; 0x80488b <_ZZ18nextFullSBTxBufferE11bufferIndex>
    ba7e:	8f 5f       	subi	r24, 0xFF	; 255
    ba80:	80 93 8b 48 	sts	0x488B, r24	; 0x80488b <_ZZ18nextFullSBTxBufferE11bufferIndex>
    ba84:	80 91 8b 48 	lds	r24, 0x488B	; 0x80488b <_ZZ18nextFullSBTxBufferE11bufferIndex>
    ba88:	83 30       	cpi	r24, 0x03	; 3
    ba8a:	b8 f2       	brcs	.-82     	; 0xba3a <nextFullSBTxBuffer+0x10>
    ba8c:	10 92 8b 48 	sts	0x488B, r1	; 0x80488b <_ZZ18nextFullSBTxBufferE11bufferIndex>
    ba90:	d4 cf       	rjmp	.-88     	; 0xba3a <nextFullSBTxBuffer+0x10>
    ba92:	89 81       	ldd	r24, Y+1	; 0x01
    ba94:	88 23       	and	r24, r24
    ba96:	69 f0       	breq	.+26     	; 0xbab2 <nextFullSBTxBuffer+0x88>
    ba98:	80 91 8b 48 	lds	r24, 0x488B	; 0x80488b <_ZZ18nextFullSBTxBufferE11bufferIndex>
    ba9c:	28 2f       	mov	r18, r24
    ba9e:	30 e0       	ldi	r19, 0x00	; 0
    baa0:	49 e2       	ldi	r20, 0x29	; 41
    baa2:	42 9f       	mul	r20, r18
    baa4:	c0 01       	movw	r24, r0
    baa6:	43 9f       	mul	r20, r19
    baa8:	90 0d       	add	r25, r0
    baaa:	11 24       	eor	r1, r1
    baac:	8e 56       	subi	r24, 0x6E	; 110
    baae:	98 4b       	sbci	r25, 0xB8	; 184
    bab0:	02 c0       	rjmp	.+4      	; 0xbab6 <nextFullSBTxBuffer+0x8c>
    bab2:	80 e0       	ldi	r24, 0x00	; 0
    bab4:	90 e0       	ldi	r25, 0x00	; 0
    bab6:	0f 90       	pop	r0
    bab8:	0f 90       	pop	r0
    baba:	df 91       	pop	r29
    babc:	cf 91       	pop	r28
    babe:	08 95       	ret

0000bac0 <nextEmptySBTxBuffer>:
    bac0:	cf 93       	push	r28
    bac2:	df 93       	push	r29
    bac4:	00 d0       	rcall	.+0      	; 0xbac6 <nextEmptySBTxBuffer+0x6>
    bac6:	cd b7       	in	r28, 0x3d	; 61
    bac8:	de b7       	in	r29, 0x3e	; 62
    baca:	81 e0       	ldi	r24, 0x01	; 1
    bacc:	89 83       	std	Y+1, r24	; 0x01
    bace:	1a 82       	std	Y+2, r1	; 0x02
    bad0:	80 91 8c 48 	lds	r24, 0x488C	; 0x80488c <_ZZ19nextEmptySBTxBufferE11bufferIndex>
    bad4:	28 2f       	mov	r18, r24
    bad6:	30 e0       	ldi	r19, 0x00	; 0
    bad8:	49 e2       	ldi	r20, 0x29	; 41
    bada:	42 9f       	mul	r20, r18
    badc:	c0 01       	movw	r24, r0
    bade:	43 9f       	mul	r20, r19
    bae0:	90 0d       	add	r25, r0
    bae2:	11 24       	eor	r1, r1
    bae4:	8e 56       	subi	r24, 0x6E	; 110
    bae6:	98 4b       	sbci	r25, 0xB8	; 184
    bae8:	fc 01       	movw	r30, r24
    baea:	90 81       	ld	r25, Z
    baec:	81 e0       	ldi	r24, 0x01	; 1
    baee:	99 23       	and	r25, r25
    baf0:	09 f4       	brne	.+2      	; 0xbaf4 <nextEmptySBTxBuffer+0x34>
    baf2:	80 e0       	ldi	r24, 0x00	; 0
    baf4:	88 23       	and	r24, r24
    baf6:	c1 f0       	breq	.+48     	; 0xbb28 <nextEmptySBTxBuffer+0x68>
    baf8:	8a 81       	ldd	r24, Y+2	; 0x02
    bafa:	8f 5f       	subi	r24, 0xFF	; 255
    bafc:	8a 83       	std	Y+2, r24	; 0x02
    bafe:	81 e0       	ldi	r24, 0x01	; 1
    bb00:	9a 81       	ldd	r25, Y+2	; 0x02
    bb02:	93 30       	cpi	r25, 0x03	; 3
    bb04:	08 f4       	brcc	.+2      	; 0xbb08 <nextEmptySBTxBuffer+0x48>
    bb06:	80 e0       	ldi	r24, 0x00	; 0
    bb08:	88 23       	and	r24, r24
    bb0a:	11 f0       	breq	.+4      	; 0xbb10 <nextEmptySBTxBuffer+0x50>
    bb0c:	19 82       	std	Y+1, r1	; 0x01
    bb0e:	0c c0       	rjmp	.+24     	; 0xbb28 <nextEmptySBTxBuffer+0x68>
    bb10:	80 91 8c 48 	lds	r24, 0x488C	; 0x80488c <_ZZ19nextEmptySBTxBufferE11bufferIndex>
    bb14:	8f 5f       	subi	r24, 0xFF	; 255
    bb16:	80 93 8c 48 	sts	0x488C, r24	; 0x80488c <_ZZ19nextEmptySBTxBufferE11bufferIndex>
    bb1a:	80 91 8c 48 	lds	r24, 0x488C	; 0x80488c <_ZZ19nextEmptySBTxBufferE11bufferIndex>
    bb1e:	83 30       	cpi	r24, 0x03	; 3
    bb20:	b8 f2       	brcs	.-82     	; 0xbad0 <nextEmptySBTxBuffer+0x10>
    bb22:	10 92 8c 48 	sts	0x488C, r1	; 0x80488c <_ZZ19nextEmptySBTxBufferE11bufferIndex>
    bb26:	d4 cf       	rjmp	.-88     	; 0xbad0 <nextEmptySBTxBuffer+0x10>
    bb28:	89 81       	ldd	r24, Y+1	; 0x01
    bb2a:	88 23       	and	r24, r24
    bb2c:	69 f0       	breq	.+26     	; 0xbb48 <nextEmptySBTxBuffer+0x88>
    bb2e:	80 91 8c 48 	lds	r24, 0x488C	; 0x80488c <_ZZ19nextEmptySBTxBufferE11bufferIndex>
    bb32:	28 2f       	mov	r18, r24
    bb34:	30 e0       	ldi	r19, 0x00	; 0
    bb36:	49 e2       	ldi	r20, 0x29	; 41
    bb38:	42 9f       	mul	r20, r18
    bb3a:	c0 01       	movw	r24, r0
    bb3c:	43 9f       	mul	r20, r19
    bb3e:	90 0d       	add	r25, r0
    bb40:	11 24       	eor	r1, r1
    bb42:	8e 56       	subi	r24, 0x6E	; 110
    bb44:	98 4b       	sbci	r25, 0xB8	; 184
    bb46:	02 c0       	rjmp	.+4      	; 0xbb4c <nextEmptySBTxBuffer+0x8c>
    bb48:	80 e0       	ldi	r24, 0x00	; 0
    bb4a:	90 e0       	ldi	r25, 0x00	; 0
    bb4c:	0f 90       	pop	r0
    bb4e:	0f 90       	pop	r0
    bb50:	df 91       	pop	r29
    bb52:	cf 91       	pop	r28
    bb54:	08 95       	ret

0000bb56 <nextEmptySBRxBuffer>:
    bb56:	cf 93       	push	r28
    bb58:	df 93       	push	r29
    bb5a:	00 d0       	rcall	.+0      	; 0xbb5c <nextEmptySBRxBuffer+0x6>
    bb5c:	cd b7       	in	r28, 0x3d	; 61
    bb5e:	de b7       	in	r29, 0x3e	; 62
    bb60:	81 e0       	ldi	r24, 0x01	; 1
    bb62:	89 83       	std	Y+1, r24	; 0x01
    bb64:	1a 82       	std	Y+2, r1	; 0x02
    bb66:	80 91 8d 48 	lds	r24, 0x488D	; 0x80488d <_ZZ19nextEmptySBRxBufferE11bufferIndex>
    bb6a:	28 2f       	mov	r18, r24
    bb6c:	30 e0       	ldi	r19, 0x00	; 0
    bb6e:	4f e3       	ldi	r20, 0x3F	; 63
    bb70:	42 9f       	mul	r20, r18
    bb72:	c0 01       	movw	r24, r0
    bb74:	43 9f       	mul	r20, r19
    bb76:	90 0d       	add	r25, r0
    bb78:	11 24       	eor	r1, r1
    bb7a:	82 5f       	subi	r24, 0xF2	; 242
    bb7c:	97 4b       	sbci	r25, 0xB7	; 183
    bb7e:	fc 01       	movw	r30, r24
    bb80:	80 81       	ld	r24, Z
    bb82:	91 81       	ldd	r25, Z+1	; 0x01
    bb84:	21 e0       	ldi	r18, 0x01	; 1
    bb86:	89 2b       	or	r24, r25
    bb88:	09 f4       	brne	.+2      	; 0xbb8c <nextEmptySBRxBuffer+0x36>
    bb8a:	20 e0       	ldi	r18, 0x00	; 0
    bb8c:	22 23       	and	r18, r18
    bb8e:	c1 f0       	breq	.+48     	; 0xbbc0 <nextEmptySBRxBuffer+0x6a>
    bb90:	8a 81       	ldd	r24, Y+2	; 0x02
    bb92:	8f 5f       	subi	r24, 0xFF	; 255
    bb94:	8a 83       	std	Y+2, r24	; 0x02
    bb96:	81 e0       	ldi	r24, 0x01	; 1
    bb98:	9a 81       	ldd	r25, Y+2	; 0x02
    bb9a:	92 30       	cpi	r25, 0x02	; 2
    bb9c:	08 f4       	brcc	.+2      	; 0xbba0 <nextEmptySBRxBuffer+0x4a>
    bb9e:	80 e0       	ldi	r24, 0x00	; 0
    bba0:	88 23       	and	r24, r24
    bba2:	11 f0       	breq	.+4      	; 0xbba8 <nextEmptySBRxBuffer+0x52>
    bba4:	19 82       	std	Y+1, r1	; 0x01
    bba6:	0c c0       	rjmp	.+24     	; 0xbbc0 <nextEmptySBRxBuffer+0x6a>
    bba8:	80 91 8d 48 	lds	r24, 0x488D	; 0x80488d <_ZZ19nextEmptySBRxBufferE11bufferIndex>
    bbac:	8f 5f       	subi	r24, 0xFF	; 255
    bbae:	80 93 8d 48 	sts	0x488D, r24	; 0x80488d <_ZZ19nextEmptySBRxBufferE11bufferIndex>
    bbb2:	80 91 8d 48 	lds	r24, 0x488D	; 0x80488d <_ZZ19nextEmptySBRxBufferE11bufferIndex>
    bbb6:	82 30       	cpi	r24, 0x02	; 2
    bbb8:	b0 f2       	brcs	.-84     	; 0xbb66 <nextEmptySBRxBuffer+0x10>
    bbba:	10 92 8d 48 	sts	0x488D, r1	; 0x80488d <_ZZ19nextEmptySBRxBufferE11bufferIndex>
    bbbe:	d3 cf       	rjmp	.-90     	; 0xbb66 <nextEmptySBRxBuffer+0x10>
    bbc0:	89 81       	ldd	r24, Y+1	; 0x01
    bbc2:	88 23       	and	r24, r24
    bbc4:	69 f0       	breq	.+26     	; 0xbbe0 <nextEmptySBRxBuffer+0x8a>
    bbc6:	80 91 8d 48 	lds	r24, 0x488D	; 0x80488d <_ZZ19nextEmptySBRxBufferE11bufferIndex>
    bbca:	28 2f       	mov	r18, r24
    bbcc:	30 e0       	ldi	r19, 0x00	; 0
    bbce:	4f e3       	ldi	r20, 0x3F	; 63
    bbd0:	42 9f       	mul	r20, r18
    bbd2:	c0 01       	movw	r24, r0
    bbd4:	43 9f       	mul	r20, r19
    bbd6:	90 0d       	add	r25, r0
    bbd8:	11 24       	eor	r1, r1
    bbda:	83 5f       	subi	r24, 0xF3	; 243
    bbdc:	97 4b       	sbci	r25, 0xB7	; 183
    bbde:	02 c0       	rjmp	.+4      	; 0xbbe4 <nextEmptySBRxBuffer+0x8e>
    bbe0:	80 e0       	ldi	r24, 0x00	; 0
    bbe2:	90 e0       	ldi	r25, 0x00	; 0
    bbe4:	0f 90       	pop	r0
    bbe6:	0f 90       	pop	r0
    bbe8:	df 91       	pop	r29
    bbea:	cf 91       	pop	r28
    bbec:	08 95       	ret

0000bbee <serialbusTxInProgress>:
    bbee:	cf 93       	push	r28
    bbf0:	df 93       	push	r29
    bbf2:	cd b7       	in	r28, 0x3d	; 61
    bbf4:	de b7       	in	r29, 0x3e	; 62
    bbf6:	80 91 91 47 	lds	r24, 0x4791	; 0x804791 <_ZL19serialbus_tx_active>
    bbfa:	df 91       	pop	r29
    bbfc:	cf 91       	pop	r28
    bbfe:	08 95       	ret

0000bc00 <_Z18serialbus_start_txv>:
    bc00:	cf 93       	push	r28
    bc02:	df 93       	push	r29
    bc04:	1f 92       	push	r1
    bc06:	cd b7       	in	r28, 0x3d	; 61
    bc08:	de b7       	in	r29, 0x3e	; 62
    bc0a:	90 91 91 47 	lds	r25, 0x4791	; 0x804791 <_ZL19serialbus_tx_active>
    bc0e:	81 e0       	ldi	r24, 0x01	; 1
    bc10:	89 27       	eor	r24, r25
    bc12:	89 83       	std	Y+1, r24	; 0x01
    bc14:	89 81       	ldd	r24, Y+1	; 0x01
    bc16:	88 23       	and	r24, r24
    bc18:	61 f0       	breq	.+24     	; 0xbc32 <_Z18serialbus_start_txv+0x32>
    bc1a:	81 e0       	ldi	r24, 0x01	; 1
    bc1c:	80 93 91 47 	sts	0x4791, r24	; 0x804791 <_ZL19serialbus_tx_active>
    bc20:	80 91 4a 40 	lds	r24, 0x404A	; 0x80404a <g_serialbus_usart_number>
    bc24:	88 23       	and	r24, r24
    bc26:	19 f4       	brne	.+6      	; 0xbc2e <_Z18serialbus_start_txv+0x2e>
    bc28:	0e 94 ce 71 	call	0xe39c	; 0xe39c <USART4_enable_tx>
    bc2c:	02 c0       	rjmp	.+4      	; 0xbc32 <_Z18serialbus_start_txv+0x32>
    bc2e:	0e 94 2c 71 	call	0xe258	; 0xe258 <USART1_enable_tx>
    bc32:	89 81       	ldd	r24, Y+1	; 0x01
    bc34:	0f 90       	pop	r0
    bc36:	df 91       	pop	r29
    bc38:	cf 91       	pop	r28
    bc3a:	08 95       	ret

0000bc3c <serialbus_end_tx>:
    bc3c:	cf 93       	push	r28
    bc3e:	df 93       	push	r29
    bc40:	cd b7       	in	r28, 0x3d	; 61
    bc42:	de b7       	in	r29, 0x3e	; 62
    bc44:	80 91 91 47 	lds	r24, 0x4791	; 0x804791 <_ZL19serialbus_tx_active>
    bc48:	88 23       	and	r24, r24
    bc4a:	c9 f0       	breq	.+50     	; 0xbc7e <serialbus_end_tx+0x42>
    bc4c:	80 91 4a 40 	lds	r24, 0x404A	; 0x80404a <g_serialbus_usart_number>
    bc50:	84 30       	cpi	r24, 0x04	; 4
    bc52:	51 f4       	brne	.+20     	; 0xbc68 <serialbus_end_tx+0x2c>
    bc54:	80 e8       	ldi	r24, 0x80	; 128
    bc56:	98 e0       	ldi	r25, 0x08	; 8
    bc58:	20 e8       	ldi	r18, 0x80	; 128
    bc5a:	38 e0       	ldi	r19, 0x08	; 8
    bc5c:	f9 01       	movw	r30, r18
    bc5e:	25 81       	ldd	r18, Z+5	; 0x05
    bc60:	2f 7d       	andi	r18, 0xDF	; 223
    bc62:	fc 01       	movw	r30, r24
    bc64:	25 83       	std	Z+5, r18	; 0x05
    bc66:	09 c0       	rjmp	.+18     	; 0xbc7a <serialbus_end_tx+0x3e>
    bc68:	80 e2       	ldi	r24, 0x20	; 32
    bc6a:	98 e0       	ldi	r25, 0x08	; 8
    bc6c:	20 e2       	ldi	r18, 0x20	; 32
    bc6e:	38 e0       	ldi	r19, 0x08	; 8
    bc70:	f9 01       	movw	r30, r18
    bc72:	25 81       	ldd	r18, Z+5	; 0x05
    bc74:	2f 7d       	andi	r18, 0xDF	; 223
    bc76:	fc 01       	movw	r30, r24
    bc78:	25 83       	std	Z+5, r18	; 0x05
    bc7a:	10 92 91 47 	sts	0x4791, r1	; 0x804791 <_ZL19serialbus_tx_active>
    bc7e:	00 00       	nop
    bc80:	df 91       	pop	r29
    bc82:	cf 91       	pop	r28
    bc84:	08 95       	ret

0000bc86 <_ZL21USART1_initializationm>:
    bc86:	cf 93       	push	r28
    bc88:	df 93       	push	r29
    bc8a:	00 d0       	rcall	.+0      	; 0xbc8c <_ZL21USART1_initializationm+0x6>
    bc8c:	00 d0       	rcall	.+0      	; 0xbc8e <_ZL21USART1_initializationm+0x8>
    bc8e:	cd b7       	in	r28, 0x3d	; 61
    bc90:	de b7       	in	r29, 0x3e	; 62
    bc92:	69 83       	std	Y+1, r22	; 0x01
    bc94:	7a 83       	std	Y+2, r23	; 0x02
    bc96:	8b 83       	std	Y+3, r24	; 0x03
    bc98:	9c 83       	std	Y+4, r25	; 0x04
    bc9a:	80 e0       	ldi	r24, 0x00	; 0
    bc9c:	0e 94 ca 5c 	call	0xb994	; 0xb994 <PC1_set_dir>
    bca0:	80 e0       	ldi	r24, 0x00	; 0
    bca2:	0e 94 bb 5c 	call	0xb976	; 0xb976 <PC1_set_pull_mode>
    bca6:	81 e0       	ldi	r24, 0x01	; 1
    bca8:	0e 94 9d 5c 	call	0xb93a	; 0xb93a <PC0_set_dir>
    bcac:	81 e0       	ldi	r24, 0x01	; 1
    bcae:	0e 94 ac 5c 	call	0xb958	; 0xb958 <PC0_set_level>
    bcb2:	89 81       	ldd	r24, Y+1	; 0x01
    bcb4:	9a 81       	ldd	r25, Y+2	; 0x02
    bcb6:	ab 81       	ldd	r26, Y+3	; 0x03
    bcb8:	bc 81       	ldd	r27, Y+4	; 0x04
    bcba:	40 e0       	ldi	r20, 0x00	; 0
    bcbc:	bc 01       	movw	r22, r24
    bcbe:	cd 01       	movw	r24, r26
    bcc0:	0e 94 b9 70 	call	0xe172	; 0xe172 <USART1_init>
    bcc4:	00 00       	nop
    bcc6:	24 96       	adiw	r28, 0x04	; 4
    bcc8:	cd bf       	out	0x3d, r28	; 61
    bcca:	de bf       	out	0x3e, r29	; 62
    bccc:	df 91       	pop	r29
    bcce:	cf 91       	pop	r28
    bcd0:	08 95       	ret

0000bcd2 <_ZL21USART4_initializationm>:
    bcd2:	cf 93       	push	r28
    bcd4:	df 93       	push	r29
    bcd6:	00 d0       	rcall	.+0      	; 0xbcd8 <_ZL21USART4_initializationm+0x6>
    bcd8:	00 d0       	rcall	.+0      	; 0xbcda <_ZL21USART4_initializationm+0x8>
    bcda:	cd b7       	in	r28, 0x3d	; 61
    bcdc:	de b7       	in	r29, 0x3e	; 62
    bcde:	69 83       	std	Y+1, r22	; 0x01
    bce0:	7a 83       	std	Y+2, r23	; 0x02
    bce2:	8b 83       	std	Y+3, r24	; 0x03
    bce4:	9c 83       	std	Y+4, r25	; 0x04
    bce6:	80 e0       	ldi	r24, 0x00	; 0
    bce8:	0e 94 06 5d 	call	0xba0c	; 0xba0c <PE1_set_dir>
    bcec:	80 e0       	ldi	r24, 0x00	; 0
    bcee:	0e 94 f7 5c 	call	0xb9ee	; 0xb9ee <PE1_set_pull_mode>
    bcf2:	81 e0       	ldi	r24, 0x01	; 1
    bcf4:	0e 94 d9 5c 	call	0xb9b2	; 0xb9b2 <PE0_set_dir>
    bcf8:	81 e0       	ldi	r24, 0x01	; 1
    bcfa:	0e 94 e8 5c 	call	0xb9d0	; 0xb9d0 <PE0_set_level>
    bcfe:	89 81       	ldd	r24, Y+1	; 0x01
    bd00:	9a 81       	ldd	r25, Y+2	; 0x02
    bd02:	ab 81       	ldd	r26, Y+3	; 0x03
    bd04:	bc 81       	ldd	r27, Y+4	; 0x04
    bd06:	40 e0       	ldi	r20, 0x00	; 0
    bd08:	bc 01       	movw	r22, r24
    bd0a:	cd 01       	movw	r24, r26
    bd0c:	0e 94 62 71 	call	0xe2c4	; 0xe2c4 <USART4_init>
    bd10:	00 00       	nop
    bd12:	24 96       	adiw	r28, 0x04	; 4
    bd14:	cd bf       	out	0x3d, r28	; 61
    bd16:	de bf       	out	0x3e, r29	; 62
    bd18:	df 91       	pop	r29
    bd1a:	cf 91       	pop	r28
    bd1c:	08 95       	ret

0000bd1e <serialbus_init>:
    bd1e:	cf 93       	push	r28
    bd20:	df 93       	push	r29
    bd22:	cd b7       	in	r28, 0x3d	; 61
    bd24:	de b7       	in	r29, 0x3e	; 62
    bd26:	27 97       	sbiw	r28, 0x07	; 7
    bd28:	cd bf       	out	0x3d, r28	; 61
    bd2a:	de bf       	out	0x3e, r29	; 62
    bd2c:	6b 83       	std	Y+3, r22	; 0x03
    bd2e:	7c 83       	std	Y+4, r23	; 0x04
    bd30:	8d 83       	std	Y+5, r24	; 0x05
    bd32:	9e 83       	std	Y+6, r25	; 0x06
    bd34:	4f 83       	std	Y+7, r20	; 0x07
    bd36:	4f e3       	ldi	r20, 0x3F	; 63
    bd38:	50 e0       	ldi	r21, 0x00	; 0
    bd3a:	60 e0       	ldi	r22, 0x00	; 0
    bd3c:	70 e0       	ldi	r23, 0x00	; 0
    bd3e:	8d e0       	ldi	r24, 0x0D	; 13
    bd40:	98 e4       	ldi	r25, 0x48	; 72
    bd42:	0e 94 c5 76 	call	0xed8a	; 0xed8a <memset>
    bd46:	0e 94 1e 5e 	call	0xbc3c	; 0xbc3c <serialbus_end_tx>
    bd4a:	19 82       	std	Y+1, r1	; 0x01
    bd4c:	1a 82       	std	Y+2, r1	; 0x02
    bd4e:	89 81       	ldd	r24, Y+1	; 0x01
    bd50:	9a 81       	ldd	r25, Y+2	; 0x02
    bd52:	03 97       	sbiw	r24, 0x03	; 3
    bd54:	94 f4       	brge	.+36     	; 0xbd7a <serialbus_init+0x5c>
    bd56:	29 81       	ldd	r18, Y+1	; 0x01
    bd58:	3a 81       	ldd	r19, Y+2	; 0x02
    bd5a:	49 e2       	ldi	r20, 0x29	; 41
    bd5c:	42 9f       	mul	r20, r18
    bd5e:	c0 01       	movw	r24, r0
    bd60:	43 9f       	mul	r20, r19
    bd62:	90 0d       	add	r25, r0
    bd64:	11 24       	eor	r1, r1
    bd66:	8e 56       	subi	r24, 0x6E	; 110
    bd68:	98 4b       	sbci	r25, 0xB8	; 184
    bd6a:	fc 01       	movw	r30, r24
    bd6c:	10 82       	st	Z, r1
    bd6e:	89 81       	ldd	r24, Y+1	; 0x01
    bd70:	9a 81       	ldd	r25, Y+2	; 0x02
    bd72:	01 96       	adiw	r24, 0x01	; 1
    bd74:	89 83       	std	Y+1, r24	; 0x01
    bd76:	9a 83       	std	Y+2, r25	; 0x02
    bd78:	ea cf       	rjmp	.-44     	; 0xbd4e <serialbus_init+0x30>
    bd7a:	8f 81       	ldd	r24, Y+7	; 0x07
    bd7c:	86 30       	cpi	r24, 0x06	; 6
    bd7e:	21 f4       	brne	.+8      	; 0xbd88 <serialbus_init+0x6a>
    bd80:	80 91 4a 40 	lds	r24, 0x404A	; 0x80404a <g_serialbus_usart_number>
    bd84:	87 30       	cpi	r24, 0x07	; 7
    bd86:	b9 f4       	brne	.+46     	; 0xbdb6 <serialbus_init+0x98>
    bd88:	8f 81       	ldd	r24, Y+7	; 0x07
    bd8a:	84 30       	cpi	r24, 0x04	; 4
    bd8c:	49 f4       	brne	.+18     	; 0xbda0 <serialbus_init+0x82>
    bd8e:	8b 81       	ldd	r24, Y+3	; 0x03
    bd90:	9c 81       	ldd	r25, Y+4	; 0x04
    bd92:	ad 81       	ldd	r26, Y+5	; 0x05
    bd94:	be 81       	ldd	r27, Y+6	; 0x06
    bd96:	bc 01       	movw	r22, r24
    bd98:	cd 01       	movw	r24, r26
    bd9a:	0e 94 69 5e 	call	0xbcd2	; 0xbcd2 <_ZL21USART4_initializationm>
    bd9e:	08 c0       	rjmp	.+16     	; 0xbdb0 <serialbus_init+0x92>
    bda0:	8b 81       	ldd	r24, Y+3	; 0x03
    bda2:	9c 81       	ldd	r25, Y+4	; 0x04
    bda4:	ad 81       	ldd	r26, Y+5	; 0x05
    bda6:	be 81       	ldd	r27, Y+6	; 0x06
    bda8:	bc 01       	movw	r22, r24
    bdaa:	cd 01       	movw	r24, r26
    bdac:	0e 94 43 5e 	call	0xbc86	; 0xbc86 <_ZL21USART1_initializationm>
    bdb0:	8f 81       	ldd	r24, Y+7	; 0x07
    bdb2:	80 93 4a 40 	sts	0x404A, r24	; 0x80404a <g_serialbus_usart_number>
    bdb6:	10 92 4b 40 	sts	0x404B, r1	; 0x80404b <_ZL14g_bus_disabled>
    bdba:	00 00       	nop
    bdbc:	27 96       	adiw	r28, 0x07	; 7
    bdbe:	cd bf       	out	0x3d, r28	; 61
    bdc0:	de bf       	out	0x3e, r29	; 62
    bdc2:	df 91       	pop	r29
    bdc4:	cf 91       	pop	r28
    bdc6:	08 95       	ret

0000bdc8 <_Z19serialbus_send_textPc>:
    bdc8:	cf 93       	push	r28
    bdca:	df 93       	push	r29
    bdcc:	cd b7       	in	r28, 0x3d	; 61
    bdce:	de b7       	in	r29, 0x3e	; 62
    bdd0:	29 97       	sbiw	r28, 0x09	; 9
    bdd2:	cd bf       	out	0x3d, r28	; 61
    bdd4:	de bf       	out	0x3e, r29	; 62
    bdd6:	88 87       	std	Y+8, r24	; 0x08
    bdd8:	99 87       	std	Y+9, r25	; 0x09
    bdda:	81 e0       	ldi	r24, 0x01	; 1
    bddc:	89 83       	std	Y+1, r24	; 0x01
    bdde:	80 91 4b 40 	lds	r24, 0x404B	; 0x80404b <_ZL14g_bus_disabled>
    bde2:	88 23       	and	r24, r24
    bde4:	11 f0       	breq	.+4      	; 0xbdea <_Z19serialbus_send_textPc+0x22>
    bde6:	89 81       	ldd	r24, Y+1	; 0x01
    bde8:	51 c0       	rjmp	.+162    	; 0xbe8c <_Z19serialbus_send_textPc+0xc4>
    bdea:	88 85       	ldd	r24, Y+8	; 0x08
    bdec:	99 85       	ldd	r25, Y+9	; 0x09
    bdee:	89 2b       	or	r24, r25
    bdf0:	09 f4       	brne	.+2      	; 0xbdf4 <_Z19serialbus_send_textPc+0x2c>
    bdf2:	4b c0       	rjmp	.+150    	; 0xbe8a <_Z19serialbus_send_textPc+0xc2>
    bdf4:	0e 94 60 5d 	call	0xbac0	; 0xbac0 <nextEmptySBTxBuffer>
    bdf8:	8c 83       	std	Y+4, r24	; 0x04
    bdfa:	9d 83       	std	Y+5, r25	; 0x05
    bdfc:	88 ec       	ldi	r24, 0xC8	; 200
    bdfe:	90 e0       	ldi	r25, 0x00	; 0
    be00:	8a 83       	std	Y+2, r24	; 0x02
    be02:	9b 83       	std	Y+3, r25	; 0x03
    be04:	8c 81       	ldd	r24, Y+4	; 0x04
    be06:	9d 81       	ldd	r25, Y+5	; 0x05
    be08:	89 2b       	or	r24, r25
    be0a:	59 f4       	brne	.+22     	; 0xbe22 <_Z19serialbus_send_textPc+0x5a>
    be0c:	8a 81       	ldd	r24, Y+2	; 0x02
    be0e:	9b 81       	ldd	r25, Y+3	; 0x03
    be10:	9c 01       	movw	r18, r24
    be12:	21 50       	subi	r18, 0x01	; 1
    be14:	31 09       	sbc	r19, r1
    be16:	2a 83       	std	Y+2, r18	; 0x02
    be18:	3b 83       	std	Y+3, r19	; 0x03
    be1a:	89 2b       	or	r24, r25
    be1c:	11 f0       	breq	.+4      	; 0xbe22 <_Z19serialbus_send_textPc+0x5a>
    be1e:	81 e0       	ldi	r24, 0x01	; 1
    be20:	01 c0       	rjmp	.+2      	; 0xbe24 <_Z19serialbus_send_textPc+0x5c>
    be22:	80 e0       	ldi	r24, 0x00	; 0
    be24:	88 23       	and	r24, r24
    be26:	e1 f0       	breq	.+56     	; 0xbe60 <_Z19serialbus_send_textPc+0x98>
    be28:	84 ef       	ldi	r24, 0xF4	; 244
    be2a:	91 e0       	ldi	r25, 0x01	; 1
    be2c:	8e 83       	std	Y+6, r24	; 0x06
    be2e:	9f 83       	std	Y+7, r25	; 0x07
    be30:	0e 94 f7 5d 	call	0xbbee	; 0xbbee <serialbusTxInProgress>
    be34:	88 23       	and	r24, r24
    be36:	59 f0       	breq	.+22     	; 0xbe4e <_Z19serialbus_send_textPc+0x86>
    be38:	8e 81       	ldd	r24, Y+6	; 0x06
    be3a:	9f 81       	ldd	r25, Y+7	; 0x07
    be3c:	9c 01       	movw	r18, r24
    be3e:	21 50       	subi	r18, 0x01	; 1
    be40:	31 09       	sbc	r19, r1
    be42:	2e 83       	std	Y+6, r18	; 0x06
    be44:	3f 83       	std	Y+7, r19	; 0x07
    be46:	89 2b       	or	r24, r25
    be48:	11 f0       	breq	.+4      	; 0xbe4e <_Z19serialbus_send_textPc+0x86>
    be4a:	81 e0       	ldi	r24, 0x01	; 1
    be4c:	01 c0       	rjmp	.+2      	; 0xbe50 <_Z19serialbus_send_textPc+0x88>
    be4e:	80 e0       	ldi	r24, 0x00	; 0
    be50:	88 23       	and	r24, r24
    be52:	09 f0       	breq	.+2      	; 0xbe56 <_Z19serialbus_send_textPc+0x8e>
    be54:	ed cf       	rjmp	.-38     	; 0xbe30 <_Z19serialbus_send_textPc+0x68>
    be56:	0e 94 60 5d 	call	0xbac0	; 0xbac0 <nextEmptySBTxBuffer>
    be5a:	8c 83       	std	Y+4, r24	; 0x04
    be5c:	9d 83       	std	Y+5, r25	; 0x05
    be5e:	d2 cf       	rjmp	.-92     	; 0xbe04 <_Z19serialbus_send_textPc+0x3c>
    be60:	8c 81       	ldd	r24, Y+4	; 0x04
    be62:	9d 81       	ldd	r25, Y+5	; 0x05
    be64:	89 2b       	or	r24, r25
    be66:	89 f0       	breq	.+34     	; 0xbe8a <_Z19serialbus_send_textPc+0xc2>
    be68:	89 85       	ldd	r24, Y+9	; 0x09
    be6a:	8f 93       	push	r24
    be6c:	88 85       	ldd	r24, Y+8	; 0x08
    be6e:	8f 93       	push	r24
    be70:	8d 81       	ldd	r24, Y+5	; 0x05
    be72:	8f 93       	push	r24
    be74:	8c 81       	ldd	r24, Y+4	; 0x04
    be76:	8f 93       	push	r24
    be78:	0e 94 0a 77 	call	0xee14	; 0xee14 <sprintf>
    be7c:	0f 90       	pop	r0
    be7e:	0f 90       	pop	r0
    be80:	0f 90       	pop	r0
    be82:	0f 90       	pop	r0
    be84:	0e 94 00 5e 	call	0xbc00	; 0xbc00 <_Z18serialbus_start_txv>
    be88:	19 82       	std	Y+1, r1	; 0x01
    be8a:	89 81       	ldd	r24, Y+1	; 0x01
    be8c:	29 96       	adiw	r28, 0x09	; 9
    be8e:	cd bf       	out	0x3d, r28	; 61
    be90:	de bf       	out	0x3e, r29	; 62
    be92:	df 91       	pop	r29
    be94:	cf 91       	pop	r28
    be96:	08 95       	ret

0000be98 <sb_send_NewLine>:

void sb_send_NewLine(void)
{
    be98:	cf 93       	push	r28
    be9a:	df 93       	push	r29
    be9c:	cd b7       	in	r28, 0x3d	; 61
    be9e:	de b7       	in	r29, 0x3e	; 62
	if(g_bus_disabled)
    bea0:	80 91 4b 40 	lds	r24, 0x404B	; 0x80404b <_ZL14g_bus_disabled>
    bea4:	88 23       	and	r24, r24
    bea6:	29 f4       	brne	.+10     	; 0xbeb2 <sb_send_NewLine+0x1a>
	{
		return;
	}
	serialbus_send_text((char*)crlf);
    bea8:	8c e0       	ldi	r24, 0x0C	; 12
    beaa:	94 e4       	ldi	r25, 0x44	; 68
    beac:	0e 94 e4 5e 	call	0xbdc8	; 0xbdc8 <_Z19serialbus_send_textPc>
    beb0:	01 c0       	rjmp	.+2      	; 0xbeb4 <sb_send_NewLine+0x1c>

void sb_send_NewLine(void)
{
	if(g_bus_disabled)
	{
		return;
    beb2:	00 00       	nop
	}
	serialbus_send_text((char*)crlf);
}
    beb4:	df 91       	pop	r29
    beb6:	cf 91       	pop	r28
    beb8:	08 95       	ret

0000beba <sb_echo_char>:

void sb_echo_char(uint8_t c)
{
    beba:	cf 93       	push	r28
    bebc:	df 93       	push	r29
    bebe:	1f 92       	push	r1
    bec0:	cd b7       	in	r28, 0x3d	; 61
    bec2:	de b7       	in	r29, 0x3e	; 62
    bec4:	89 83       	std	Y+1, r24	; 0x01
	if(g_bus_disabled)
    bec6:	80 91 4b 40 	lds	r24, 0x404B	; 0x80404b <_ZL14g_bus_disabled>
    beca:	88 23       	and	r24, r24
    becc:	51 f4       	brne	.+20     	; 0xbee2 <sb_echo_char+0x28>
	{
		return;
	}
	g_tempMsgBuff[0] = c;
    bece:	89 81       	ldd	r24, Y+1	; 0x01
    bed0:	80 93 5f 47 	sts	0x475F, r24	; 0x80475f <_ZL13g_tempMsgBuff>
	g_tempMsgBuff[1] = '\0';
    bed4:	10 92 60 47 	sts	0x4760, r1	; 0x804760 <_ZL13g_tempMsgBuff+0x1>
	serialbus_send_text(g_tempMsgBuff);
    bed8:	8f e5       	ldi	r24, 0x5F	; 95
    beda:	97 e4       	ldi	r25, 0x47	; 71
    bedc:	0e 94 e4 5e 	call	0xbdc8	; 0xbdc8 <_Z19serialbus_send_textPc>
    bee0:	01 c0       	rjmp	.+2      	; 0xbee4 <sb_echo_char+0x2a>

void sb_echo_char(uint8_t c)
{
	if(g_bus_disabled)
	{
		return;
    bee2:	00 00       	nop
	}
	g_tempMsgBuff[0] = c;
	g_tempMsgBuff[1] = '\0';
	serialbus_send_text(g_tempMsgBuff);
}
    bee4:	0f 90       	pop	r0
    bee6:	df 91       	pop	r29
    bee8:	cf 91       	pop	r28
    beea:	08 95       	ret

0000beec <si5351_shutdown_comms>:
	void si5351_set_vcoB_freq(Frequency_Hz freq_VCO)
	{
		freqVCOB = freq_VCO;
		set_pll(freq_VCO, SI5351_PLLB);
		return;
	}
    beec:	cf 93       	push	r28
    beee:	df 93       	push	r29
    bef0:	cd b7       	in	r28, 0x3d	; 61
    bef2:	de b7       	in	r29, 0x3e	; 62
    bef4:	0e 94 99 4a 	call	0x9532	; 0x9532 <I2C_1_Shutdown>
    bef8:	00 00       	nop
    befa:	df 91       	pop	r29
    befc:	cf 91       	pop	r28
    befe:	08 95       	ret

0000bf00 <si5351_start_comms>:
    bf00:	cf 93       	push	r28
    bf02:	df 93       	push	r29
    bf04:	cd b7       	in	r28, 0x3d	; 61
    bf06:	de b7       	in	r29, 0x3e	; 62
    bf08:	0e 94 aa 4a 	call	0x9554	; 0x9554 <I2C_1_Init>
    bf0c:	00 00       	nop
    bf0e:	df 91       	pop	r29
    bf10:	cf 91       	pop	r28
    bf12:	08 95       	ret

0000bf14 <si5351_init>:
    bf14:	cf 93       	push	r28
    bf16:	df 93       	push	r29
    bf18:	cd b7       	in	r28, 0x3d	; 61
    bf1a:	de b7       	in	r29, 0x3e	; 62
    bf1c:	28 97       	sbiw	r28, 0x08	; 8
    bf1e:	cd bf       	out	0x3d, r28	; 61
    bf20:	de bf       	out	0x3e, r29	; 62
    bf22:	8c 83       	std	Y+4, r24	; 0x04
    bf24:	4d 83       	std	Y+5, r20	; 0x05
    bf26:	5e 83       	std	Y+6, r21	; 0x06
    bf28:	6f 83       	std	Y+7, r22	; 0x07
    bf2a:	78 87       	std	Y+8, r23	; 0x08
    bf2c:	0e 94 aa 4a 	call	0x9554	; 0x9554 <I2C_1_Init>
    bf30:	10 92 8e 48 	sts	0x488E, r1	; 0x80488e <_ZL8freqVCOB>
    bf34:	10 92 8f 48 	sts	0x488F, r1	; 0x80488f <_ZL8freqVCOB+0x1>
    bf38:	10 92 90 48 	sts	0x4890, r1	; 0x804890 <_ZL8freqVCOB+0x2>
    bf3c:	10 92 91 48 	sts	0x4891, r1	; 0x804891 <_ZL8freqVCOB+0x3>
    bf40:	80 e4       	ldi	r24, 0x40	; 64
    bf42:	98 e7       	ldi	r25, 0x78	; 120
    bf44:	ad e7       	ldi	r26, 0x7D	; 125
    bf46:	b1 e0       	ldi	r27, 0x01	; 1
    bf48:	80 93 4c 40 	sts	0x404C, r24	; 0x80404c <_ZL9xtal_freq>
    bf4c:	90 93 4d 40 	sts	0x404D, r25	; 0x80404d <_ZL9xtal_freq+0x1>
    bf50:	a0 93 4e 40 	sts	0x404E, r26	; 0x80404e <_ZL9xtal_freq+0x2>
    bf54:	b0 93 4f 40 	sts	0x404F, r27	; 0x80404f <_ZL9xtal_freq+0x3>
    bf58:	10 92 92 48 	sts	0x4892, r1	; 0x804892 <_ZL17enabledClocksMask>
    bf5c:	8f ef       	ldi	r24, 0xFF	; 255
    bf5e:	8a 83       	std	Y+2, r24	; 0x02
    bf60:	ce 01       	movw	r24, r28
    bf62:	02 96       	adiw	r24, 0x02	; 2
    bf64:	41 e0       	ldi	r20, 0x01	; 1
    bf66:	bc 01       	movw	r22, r24
    bf68:	83 e0       	ldi	r24, 0x03	; 3
    bf6a:	0e 94 8e 67 	call	0xcf1c	; 0xcf1c <_Z17si5351_write_bulkhPhh>
    bf6e:	80 93 a0 48 	sts	0x48A0, r24	; 0x8048a0 <_ZZ11si5351_initE3err>
    bf72:	80 91 a0 48 	lds	r24, 0x48A0	; 0x8048a0 <_ZZ11si5351_initE3err>
    bf76:	88 23       	and	r24, r24
    bf78:	19 f0       	breq	.+6      	; 0xbf80 <si5351_init+0x6c>
    bf7a:	80 91 a0 48 	lds	r24, 0x48A0	; 0x8048a0 <_ZZ11si5351_initE3err>
    bf7e:	92 c0       	rjmp	.+292    	; 0xc0a4 <si5351_init+0x190>
    bf80:	8c ec       	ldi	r24, 0xCC	; 204
    bf82:	8a 83       	std	Y+2, r24	; 0x02
    bf84:	ce 01       	movw	r24, r28
    bf86:	02 96       	adiw	r24, 0x02	; 2
    bf88:	41 e0       	ldi	r20, 0x01	; 1
    bf8a:	bc 01       	movw	r22, r24
    bf8c:	80 e1       	ldi	r24, 0x10	; 16
    bf8e:	0e 94 8e 67 	call	0xcf1c	; 0xcf1c <_Z17si5351_write_bulkhPhh>
    bf92:	98 2f       	mov	r25, r24
    bf94:	80 91 a0 48 	lds	r24, 0x48A0	; 0x8048a0 <_ZZ11si5351_initE3err>
    bf98:	89 2b       	or	r24, r25
    bf9a:	80 93 a0 48 	sts	0x48A0, r24	; 0x8048a0 <_ZZ11si5351_initE3err>
    bf9e:	ce 01       	movw	r24, r28
    bfa0:	02 96       	adiw	r24, 0x02	; 2
    bfa2:	41 e0       	ldi	r20, 0x01	; 1
    bfa4:	bc 01       	movw	r22, r24
    bfa6:	81 e1       	ldi	r24, 0x11	; 17
    bfa8:	0e 94 8e 67 	call	0xcf1c	; 0xcf1c <_Z17si5351_write_bulkhPhh>
    bfac:	98 2f       	mov	r25, r24
    bfae:	80 91 a0 48 	lds	r24, 0x48A0	; 0x8048a0 <_ZZ11si5351_initE3err>
    bfb2:	89 2b       	or	r24, r25
    bfb4:	80 93 a0 48 	sts	0x48A0, r24	; 0x8048a0 <_ZZ11si5351_initE3err>
    bfb8:	ce 01       	movw	r24, r28
    bfba:	02 96       	adiw	r24, 0x02	; 2
    bfbc:	41 e0       	ldi	r20, 0x01	; 1
    bfbe:	bc 01       	movw	r22, r24
    bfc0:	82 e1       	ldi	r24, 0x12	; 18
    bfc2:	0e 94 8e 67 	call	0xcf1c	; 0xcf1c <_Z17si5351_write_bulkhPhh>
    bfc6:	98 2f       	mov	r25, r24
    bfc8:	80 91 a0 48 	lds	r24, 0x48A0	; 0x8048a0 <_ZZ11si5351_initE3err>
    bfcc:	89 2b       	or	r24, r25
    bfce:	80 93 a0 48 	sts	0x48A0, r24	; 0x8048a0 <_ZZ11si5351_initE3err>
    bfd2:	82 e1       	ldi	r24, 0x12	; 18
    bfd4:	89 83       	std	Y+1, r24	; 0x01
    bfd6:	99 81       	ldd	r25, Y+1	; 0x01
    bfd8:	8c 81       	ldd	r24, Y+4	; 0x04
    bfda:	89 2b       	or	r24, r25
    bfdc:	89 83       	std	Y+1, r24	; 0x01
    bfde:	89 81       	ldd	r24, Y+1	; 0x01
    bfe0:	8a 83       	std	Y+2, r24	; 0x02
    bfe2:	ce 01       	movw	r24, r28
    bfe4:	02 96       	adiw	r24, 0x02	; 2
    bfe6:	41 e0       	ldi	r20, 0x01	; 1
    bfe8:	bc 01       	movw	r22, r24
    bfea:	87 eb       	ldi	r24, 0xB7	; 183
    bfec:	0e 94 8e 67 	call	0xcf1c	; 0xcf1c <_Z17si5351_write_bulkhPhh>
    bff0:	98 2f       	mov	r25, r24
    bff2:	80 91 a0 48 	lds	r24, 0x48A0	; 0x8048a0 <_ZZ11si5351_initE3err>
    bff6:	89 2b       	or	r24, r25
    bff8:	80 93 a0 48 	sts	0x48A0, r24	; 0x8048a0 <_ZZ11si5351_initE3err>
    bffc:	8d 81       	ldd	r24, Y+5	; 0x05
    bffe:	9e 81       	ldd	r25, Y+6	; 0x06
    c000:	af 81       	ldd	r26, Y+7	; 0x07
    c002:	b8 85       	ldd	r27, Y+8	; 0x08
    c004:	89 2b       	or	r24, r25
    c006:	8a 2b       	or	r24, r26
    c008:	8b 2b       	or	r24, r27
    c00a:	41 f4       	brne	.+16     	; 0xc01c <si5351_init+0x108>
    c00c:	80 e4       	ldi	r24, 0x40	; 64
    c00e:	98 e7       	ldi	r25, 0x78	; 120
    c010:	ad e7       	ldi	r26, 0x7D	; 125
    c012:	b1 e0       	ldi	r27, 0x01	; 1
    c014:	8d 83       	std	Y+5, r24	; 0x05
    c016:	9e 83       	std	Y+6, r25	; 0x06
    c018:	af 83       	std	Y+7, r26	; 0x07
    c01a:	b8 87       	std	Y+8, r27	; 0x08
    c01c:	80 91 4c 40 	lds	r24, 0x404C	; 0x80404c <_ZL9xtal_freq>
    c020:	90 91 4d 40 	lds	r25, 0x404D	; 0x80404d <_ZL9xtal_freq+0x1>
    c024:	a0 91 4e 40 	lds	r26, 0x404E	; 0x80404e <_ZL9xtal_freq+0x2>
    c028:	b0 91 4f 40 	lds	r27, 0x404F	; 0x80404f <_ZL9xtal_freq+0x3>
    c02c:	2d 81       	ldd	r18, Y+5	; 0x05
    c02e:	3e 81       	ldd	r19, Y+6	; 0x06
    c030:	4f 81       	ldd	r20, Y+7	; 0x07
    c032:	58 85       	ldd	r21, Y+8	; 0x08
    c034:	28 17       	cp	r18, r24
    c036:	39 07       	cpc	r19, r25
    c038:	4a 07       	cpc	r20, r26
    c03a:	5b 07       	cpc	r21, r27
    c03c:	59 f1       	breq	.+86     	; 0xc094 <si5351_init+0x180>
    c03e:	ce 01       	movw	r24, r28
    c040:	02 96       	adiw	r24, 0x02	; 2
    c042:	41 e0       	ldi	r20, 0x01	; 1
    c044:	bc 01       	movw	r22, r24
    c046:	8f e0       	ldi	r24, 0x0F	; 15
    c048:	0e 94 c0 67 	call	0xcf80	; 0xcf80 <_Z16si5351_read_bulkhPhh>
    c04c:	88 23       	and	r24, r24
    c04e:	11 f0       	breq	.+4      	; 0xc054 <si5351_init+0x140>
    c050:	81 e0       	ldi	r24, 0x01	; 1
    c052:	28 c0       	rjmp	.+80     	; 0xc0a4 <si5351_init+0x190>
    c054:	8a 81       	ldd	r24, Y+2	; 0x02
    c056:	89 83       	std	Y+1, r24	; 0x01
    c058:	89 81       	ldd	r24, Y+1	; 0x01
    c05a:	8f 73       	andi	r24, 0x3F	; 63
    c05c:	89 83       	std	Y+1, r24	; 0x01
    c05e:	8d 81       	ldd	r24, Y+5	; 0x05
    c060:	9e 81       	ldd	r25, Y+6	; 0x06
    c062:	af 81       	ldd	r26, Y+7	; 0x07
    c064:	b8 85       	ldd	r27, Y+8	; 0x08
    c066:	80 93 4c 40 	sts	0x404C, r24	; 0x80404c <_ZL9xtal_freq>
    c06a:	90 93 4d 40 	sts	0x404D, r25	; 0x80404d <_ZL9xtal_freq+0x1>
    c06e:	a0 93 4e 40 	sts	0x404E, r26	; 0x80404e <_ZL9xtal_freq+0x2>
    c072:	b0 93 4f 40 	sts	0x404F, r27	; 0x80404f <_ZL9xtal_freq+0x3>
    c076:	89 81       	ldd	r24, Y+1	; 0x01
    c078:	8a 83       	std	Y+2, r24	; 0x02
    c07a:	ce 01       	movw	r24, r28
    c07c:	02 96       	adiw	r24, 0x02	; 2
    c07e:	41 e0       	ldi	r20, 0x01	; 1
    c080:	bc 01       	movw	r22, r24
    c082:	8f e0       	ldi	r24, 0x0F	; 15
    c084:	0e 94 8e 67 	call	0xcf1c	; 0xcf1c <_Z17si5351_write_bulkhPhh>
    c088:	98 2f       	mov	r25, r24
    c08a:	80 91 a0 48 	lds	r24, 0x48A0	; 0x8048a0 <_ZZ11si5351_initE3err>
    c08e:	89 2b       	or	r24, r25
    c090:	80 93 a0 48 	sts	0x48A0, r24	; 0x8048a0 <_ZZ11si5351_initE3err>
    c094:	90 91 a0 48 	lds	r25, 0x48A0	; 0x8048a0 <_ZZ11si5351_initE3err>
    c098:	81 e0       	ldi	r24, 0x01	; 1
    c09a:	89 27       	eor	r24, r25
    c09c:	80 93 9f 48 	sts	0x489F, r24	; 0x80489f <g_si5351_initialized>
    c0a0:	80 91 a0 48 	lds	r24, 0x48A0	; 0x8048a0 <_ZZ11si5351_initE3err>
    c0a4:	28 96       	adiw	r28, 0x08	; 8
    c0a6:	cd bf       	out	0x3d, r28	; 61
    c0a8:	de bf       	out	0x3e, r29	; 62
    c0aa:	df 91       	pop	r29
    c0ac:	cf 91       	pop	r28
    c0ae:	08 95       	ret

0000c0b0 <si5351_set_freq>:
    c0b0:	8f 92       	push	r8
    c0b2:	af 92       	push	r10
    c0b4:	cf 92       	push	r12
    c0b6:	df 92       	push	r13
    c0b8:	ef 92       	push	r14
    c0ba:	ff 92       	push	r15
    c0bc:	0f 93       	push	r16
    c0be:	1f 93       	push	r17
    c0c0:	cf 93       	push	r28
    c0c2:	df 93       	push	r29
    c0c4:	cd b7       	in	r28, 0x3d	; 61
    c0c6:	de b7       	in	r29, 0x3e	; 62
    c0c8:	6d 97       	sbiw	r28, 0x1d	; 29
    c0ca:	cd bf       	out	0x3d, r28	; 61
    c0cc:	de bf       	out	0x3e, r29	; 62
    c0ce:	68 8f       	std	Y+24, r22	; 0x18
    c0d0:	79 8f       	std	Y+25, r23	; 0x19
    c0d2:	8a 8f       	std	Y+26, r24	; 0x1a
    c0d4:	9b 8f       	std	Y+27, r25	; 0x1b
    c0d6:	4c 8f       	std	Y+28, r20	; 0x1c
    c0d8:	2d 8f       	std	Y+29, r18	; 0x1d
    c0da:	19 82       	std	Y+1, r1	; 0x01
    c0dc:	1a 82       	std	Y+2, r1	; 0x02
    c0de:	1b 82       	std	Y+3, r1	; 0x03
    c0e0:	1c 82       	std	Y+4, r1	; 0x04
    c0e2:	1f 82       	std	Y+7, r1	; 0x07
    c0e4:	1c 8a       	std	Y+20, r1	; 0x14
    c0e6:	1d 8a       	std	Y+21, r1	; 0x15
    c0e8:	90 91 9f 48 	lds	r25, 0x489F	; 0x80489f <g_si5351_initialized>
    c0ec:	81 e0       	ldi	r24, 0x01	; 1
    c0ee:	89 27       	eor	r24, r25
    c0f0:	88 23       	and	r24, r24
    c0f2:	11 f0       	breq	.+4      	; 0xc0f8 <si5351_set_freq+0x48>
    c0f4:	81 e0       	ldi	r24, 0x01	; 1
    c0f6:	6f c1       	rjmp	.+734    	; 0xc3d6 <si5351_set_freq+0x326>
    c0f8:	88 8d       	ldd	r24, Y+24	; 0x18
    c0fa:	99 8d       	ldd	r25, Y+25	; 0x19
    c0fc:	aa 8d       	ldd	r26, Y+26	; 0x1a
    c0fe:	bb 8d       	ldd	r27, Y+27	; 0x1b
    c100:	80 34       	cpi	r24, 0x40	; 64
    c102:	92 44       	sbci	r25, 0x42	; 66
    c104:	af 40       	sbci	r26, 0x0F	; 15
    c106:	b1 05       	cpc	r27, r1
    c108:	08 f1       	brcs	.+66     	; 0xc14c <si5351_set_freq+0x9c>
    c10a:	88 8d       	ldd	r24, Y+24	; 0x18
    c10c:	99 8d       	ldd	r25, Y+25	; 0x19
    c10e:	aa 8d       	ldd	r26, Y+26	; 0x1a
    c110:	bb 8d       	ldd	r27, Y+27	; 0x1b
    c112:	24 e6       	ldi	r18, 0x64	; 100
    c114:	30 e0       	ldi	r19, 0x00	; 0
    c116:	40 e0       	ldi	r20, 0x00	; 0
    c118:	50 e0       	ldi	r21, 0x00	; 0
    c11a:	bc 01       	movw	r22, r24
    c11c:	cd 01       	movw	r24, r26
    c11e:	0e 94 d3 74 	call	0xe9a6	; 0xe9a6 <__udivmodsi4>
    c122:	da 01       	movw	r26, r20
    c124:	c9 01       	movw	r24, r18
    c126:	88 8f       	std	Y+24, r24	; 0x18
    c128:	99 8f       	std	Y+25, r25	; 0x19
    c12a:	aa 8f       	std	Y+26, r26	; 0x1a
    c12c:	bb 8f       	std	Y+27, r27	; 0x1b
    c12e:	28 8d       	ldd	r18, Y+24	; 0x18
    c130:	39 8d       	ldd	r19, Y+25	; 0x19
    c132:	4a 8d       	ldd	r20, Y+26	; 0x1a
    c134:	5b 8d       	ldd	r21, Y+27	; 0x1b
    c136:	84 e6       	ldi	r24, 0x64	; 100
    c138:	90 e0       	ldi	r25, 0x00	; 0
    c13a:	dc 01       	movw	r26, r24
    c13c:	0e 94 1d 75 	call	0xea3a	; 0xea3a <__muluhisi3>
    c140:	dc 01       	movw	r26, r24
    c142:	cb 01       	movw	r24, r22
    c144:	88 8f       	std	Y+24, r24	; 0x18
    c146:	99 8f       	std	Y+25, r25	; 0x19
    c148:	aa 8f       	std	Y+26, r26	; 0x1a
    c14a:	bb 8f       	std	Y+27, r27	; 0x1b
    c14c:	8c 8d       	ldd	r24, Y+28	; 0x1c
    c14e:	88 2f       	mov	r24, r24
    c150:	90 e0       	ldi	r25, 0x00	; 0
    c152:	81 30       	cpi	r24, 0x01	; 1
    c154:	91 05       	cpc	r25, r1
    c156:	e9 f0       	breq	.+58     	; 0xc192 <si5351_set_freq+0xe2>
    c158:	82 30       	cpi	r24, 0x02	; 2
    c15a:	91 05       	cpc	r25, r1
    c15c:	09 f4       	brne	.+2      	; 0xc160 <si5351_set_freq+0xb0>
    c15e:	3f c0       	rjmp	.+126    	; 0xc1de <si5351_set_freq+0x12e>
    c160:	89 2b       	or	r24, r25
    c162:	09 f0       	breq	.+2      	; 0xc166 <si5351_set_freq+0xb6>
    c164:	62 c0       	rjmp	.+196    	; 0xc22a <si5351_set_freq+0x17a>
    c166:	80 91 92 48 	lds	r24, 0x4892	; 0x804892 <_ZL17enabledClocksMask>
    c16a:	81 60       	ori	r24, 0x01	; 1
    c16c:	80 93 92 48 	sts	0x4892, r24	; 0x804892 <_ZL17enabledClocksMask>
    c170:	80 e1       	ldi	r24, 0x10	; 16
    c172:	8e 83       	std	Y+6, r24	; 0x06
    c174:	81 e0       	ldi	r24, 0x01	; 1
    c176:	8d 83       	std	Y+5, r24	; 0x05
    c178:	88 8d       	ldd	r24, Y+24	; 0x18
    c17a:	99 8d       	ldd	r25, Y+25	; 0x19
    c17c:	aa 8d       	ldd	r26, Y+26	; 0x1a
    c17e:	bb 8d       	ldd	r27, Y+27	; 0x1b
    c180:	80 93 93 48 	sts	0x4893, r24	; 0x804893 <_ZL9clock_out>
    c184:	90 93 94 48 	sts	0x4894, r25	; 0x804894 <_ZL9clock_out+0x1>
    c188:	a0 93 95 48 	sts	0x4895, r26	; 0x804895 <_ZL9clock_out+0x2>
    c18c:	b0 93 96 48 	sts	0x4896, r27	; 0x804896 <_ZL9clock_out+0x3>
    c190:	4e c0       	rjmp	.+156    	; 0xc22e <si5351_set_freq+0x17e>
    c192:	80 91 92 48 	lds	r24, 0x4892	; 0x804892 <_ZL17enabledClocksMask>
    c196:	82 60       	ori	r24, 0x02	; 2
    c198:	80 93 92 48 	sts	0x4892, r24	; 0x804892 <_ZL17enabledClocksMask>
    c19c:	81 e1       	ldi	r24, 0x11	; 17
    c19e:	8e 83       	std	Y+6, r24	; 0x06
    c1a0:	80 91 92 48 	lds	r24, 0x4892	; 0x804892 <_ZL17enabledClocksMask>
    c1a4:	80 95       	com	r24
    c1a6:	8a 6f       	ori	r24, 0xFA	; 250
    c1a8:	8e 8b       	std	Y+22, r24	; 0x16
    c1aa:	ce 01       	movw	r24, r28
    c1ac:	46 96       	adiw	r24, 0x16	; 22
    c1ae:	41 e0       	ldi	r20, 0x01	; 1
    c1b0:	bc 01       	movw	r22, r24
    c1b2:	83 e0       	ldi	r24, 0x03	; 3
    c1b4:	0e 94 8e 67 	call	0xcf1c	; 0xcf1c <_Z17si5351_write_bulkhPhh>
    c1b8:	88 23       	and	r24, r24
    c1ba:	11 f0       	breq	.+4      	; 0xc1c0 <si5351_set_freq+0x110>
    c1bc:	81 e0       	ldi	r24, 0x01	; 1
    c1be:	0b c1       	rjmp	.+534    	; 0xc3d6 <si5351_set_freq+0x326>
    c1c0:	82 e0       	ldi	r24, 0x02	; 2
    c1c2:	8d 83       	std	Y+5, r24	; 0x05
    c1c4:	88 8d       	ldd	r24, Y+24	; 0x18
    c1c6:	99 8d       	ldd	r25, Y+25	; 0x19
    c1c8:	aa 8d       	ldd	r26, Y+26	; 0x1a
    c1ca:	bb 8d       	ldd	r27, Y+27	; 0x1b
    c1cc:	80 93 97 48 	sts	0x4897, r24	; 0x804897 <_ZL9clock_out+0x4>
    c1d0:	90 93 98 48 	sts	0x4898, r25	; 0x804898 <_ZL9clock_out+0x5>
    c1d4:	a0 93 99 48 	sts	0x4899, r26	; 0x804899 <_ZL9clock_out+0x6>
    c1d8:	b0 93 9a 48 	sts	0x489A, r27	; 0x80489a <_ZL9clock_out+0x7>
    c1dc:	28 c0       	rjmp	.+80     	; 0xc22e <si5351_set_freq+0x17e>
    c1de:	80 91 92 48 	lds	r24, 0x4892	; 0x804892 <_ZL17enabledClocksMask>
    c1e2:	84 60       	ori	r24, 0x04	; 4
    c1e4:	80 93 92 48 	sts	0x4892, r24	; 0x804892 <_ZL17enabledClocksMask>
    c1e8:	82 e1       	ldi	r24, 0x12	; 18
    c1ea:	8e 83       	std	Y+6, r24	; 0x06
    c1ec:	80 91 92 48 	lds	r24, 0x4892	; 0x804892 <_ZL17enabledClocksMask>
    c1f0:	80 95       	com	r24
    c1f2:	8c 6f       	ori	r24, 0xFC	; 252
    c1f4:	8e 8b       	std	Y+22, r24	; 0x16
    c1f6:	ce 01       	movw	r24, r28
    c1f8:	46 96       	adiw	r24, 0x16	; 22
    c1fa:	41 e0       	ldi	r20, 0x01	; 1
    c1fc:	bc 01       	movw	r22, r24
    c1fe:	83 e0       	ldi	r24, 0x03	; 3
    c200:	0e 94 8e 67 	call	0xcf1c	; 0xcf1c <_Z17si5351_write_bulkhPhh>
    c204:	88 23       	and	r24, r24
    c206:	11 f0       	breq	.+4      	; 0xc20c <si5351_set_freq+0x15c>
    c208:	81 e0       	ldi	r24, 0x01	; 1
    c20a:	e5 c0       	rjmp	.+458    	; 0xc3d6 <si5351_set_freq+0x326>
    c20c:	82 e0       	ldi	r24, 0x02	; 2
    c20e:	8d 83       	std	Y+5, r24	; 0x05
    c210:	88 8d       	ldd	r24, Y+24	; 0x18
    c212:	99 8d       	ldd	r25, Y+25	; 0x19
    c214:	aa 8d       	ldd	r26, Y+26	; 0x1a
    c216:	bb 8d       	ldd	r27, Y+27	; 0x1b
    c218:	80 93 9b 48 	sts	0x489B, r24	; 0x80489b <_ZL9clock_out+0x8>
    c21c:	90 93 9c 48 	sts	0x489C, r25	; 0x80489c <_ZL9clock_out+0x9>
    c220:	a0 93 9d 48 	sts	0x489D, r26	; 0x80489d <_ZL9clock_out+0xa>
    c224:	b0 93 9e 48 	sts	0x489E, r27	; 0x80489e <_ZL9clock_out+0xb>
    c228:	02 c0       	rjmp	.+4      	; 0xc22e <si5351_set_freq+0x17e>
    c22a:	81 e0       	ldi	r24, 0x01	; 1
    c22c:	d4 c0       	rjmp	.+424    	; 0xc3d6 <si5351_set_freq+0x326>
    c22e:	8d 81       	ldd	r24, Y+5	; 0x05
    c230:	81 30       	cpi	r24, 0x01	; 1
    c232:	61 f0       	breq	.+24     	; 0xc24c <si5351_set_freq+0x19c>
    c234:	80 91 8e 48 	lds	r24, 0x488E	; 0x80488e <_ZL8freqVCOB>
    c238:	90 91 8f 48 	lds	r25, 0x488F	; 0x80488f <_ZL8freqVCOB+0x1>
    c23c:	a0 91 90 48 	lds	r26, 0x4890	; 0x804890 <_ZL8freqVCOB+0x2>
    c240:	b0 91 91 48 	lds	r27, 0x4891	; 0x804891 <_ZL8freqVCOB+0x3>
    c244:	89 2b       	or	r24, r25
    c246:	8a 2b       	or	r24, r26
    c248:	8b 2b       	or	r24, r27
    c24a:	c9 f4       	brne	.+50     	; 0xc27e <si5351_set_freq+0x1ce>
    c24c:	be 01       	movw	r22, r28
    c24e:	6b 5e       	subi	r22, 0xEB	; 235
    c250:	7f 4f       	sbci	r23, 0xFF	; 255
    c252:	9e 01       	movw	r18, r28
    c254:	2c 5e       	subi	r18, 0xEC	; 236
    c256:	3f 4f       	sbci	r19, 0xFF	; 255
    c258:	ae 01       	movw	r20, r28
    c25a:	48 5f       	subi	r20, 0xF8	; 248
    c25c:	5f 4f       	sbci	r21, 0xFF	; 255
    c25e:	88 8d       	ldd	r24, Y+24	; 0x18
    c260:	99 8d       	ldd	r25, Y+25	; 0x19
    c262:	aa 8d       	ldd	r26, Y+26	; 0x1a
    c264:	bb 8d       	ldd	r27, Y+27	; 0x1b
    c266:	8b 01       	movw	r16, r22
    c268:	bc 01       	movw	r22, r24
    c26a:	cd 01       	movw	r24, r26
    c26c:	0e 94 03 65 	call	0xca06	; 0xca06 <_Z15multisynth_calcmP13u_si5351_regsPbS1_>
    c270:	dc 01       	movw	r26, r24
    c272:	cb 01       	movw	r24, r22
    c274:	89 83       	std	Y+1, r24	; 0x01
    c276:	9a 83       	std	Y+2, r25	; 0x02
    c278:	ab 83       	std	Y+3, r26	; 0x03
    c27a:	bc 83       	std	Y+4, r27	; 0x04
    c27c:	18 c0       	rjmp	.+48     	; 0xc2ae <si5351_set_freq+0x1fe>
    c27e:	be 01       	movw	r22, r28
    c280:	6b 5e       	subi	r22, 0xEB	; 235
    c282:	7f 4f       	sbci	r23, 0xFF	; 255
    c284:	9e 01       	movw	r18, r28
    c286:	2c 5e       	subi	r18, 0xEC	; 236
    c288:	3f 4f       	sbci	r19, 0xFF	; 255
    c28a:	ae 01       	movw	r20, r28
    c28c:	48 5f       	subi	r20, 0xF8	; 248
    c28e:	5f 4f       	sbci	r21, 0xFF	; 255
    c290:	88 8d       	ldd	r24, Y+24	; 0x18
    c292:	99 8d       	ldd	r25, Y+25	; 0x19
    c294:	aa 8d       	ldd	r26, Y+26	; 0x1a
    c296:	bb 8d       	ldd	r27, Y+27	; 0x1b
    c298:	8b 01       	movw	r16, r22
    c29a:	bc 01       	movw	r22, r24
    c29c:	cd 01       	movw	r24, r26
    c29e:	0e 94 0d 66 	call	0xcc1a	; 0xcc1a <_Z19multisynth_estimatemP13u_si5351_regsPbS1_>
    c2a2:	dc 01       	movw	r26, r24
    c2a4:	cb 01       	movw	r24, r22
    c2a6:	88 8f       	std	Y+24, r24	; 0x18
    c2a8:	99 8f       	std	Y+25, r25	; 0x19
    c2aa:	aa 8f       	std	Y+26, r26	; 0x1a
    c2ac:	bb 8f       	std	Y+27, r27	; 0x1b
    c2ae:	6d 81       	ldd	r22, Y+5	; 0x05
    c2b0:	8c 8d       	ldd	r24, Y+28	; 0x1c
    c2b2:	0e 94 f2 67 	call	0xcfe4	; 0xcfe4 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll>
    c2b6:	88 23       	and	r24, r24
    c2b8:	11 f0       	breq	.+4      	; 0xc2be <si5351_set_freq+0x20e>
    c2ba:	81 e0       	ldi	r24, 0x01	; 1
    c2bc:	8c c0       	rjmp	.+280    	; 0xc3d6 <si5351_set_freq+0x326>
    c2be:	8d 89       	ldd	r24, Y+21	; 0x15
    c2c0:	9c 89       	ldd	r25, Y+20	; 0x14
    c2c2:	8f 93       	push	r24
    c2c4:	8f 80       	ldd	r8, Y+7	; 0x07
    c2c6:	a9 2e       	mov	r10, r25
    c2c8:	c8 84       	ldd	r12, Y+8	; 0x08
    c2ca:	d9 84       	ldd	r13, Y+9	; 0x09
    c2cc:	ea 84       	ldd	r14, Y+10	; 0x0a
    c2ce:	fb 84       	ldd	r15, Y+11	; 0x0b
    c2d0:	0c 85       	ldd	r16, Y+12	; 0x0c
    c2d2:	1d 85       	ldd	r17, Y+13	; 0x0d
    c2d4:	2e 85       	ldd	r18, Y+14	; 0x0e
    c2d6:	3f 85       	ldd	r19, Y+15	; 0x0f
    c2d8:	48 89       	ldd	r20, Y+16	; 0x10
    c2da:	59 89       	ldd	r21, Y+17	; 0x11
    c2dc:	6a 89       	ldd	r22, Y+18	; 0x12
    c2de:	7b 89       	ldd	r23, Y+19	; 0x13
    c2e0:	8c 8d       	ldd	r24, Y+28	; 0x1c
    c2e2:	0e 94 2f 68 	call	0xd05e	; 0xd05e <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb>
    c2e6:	0f 90       	pop	r0
    c2e8:	88 23       	and	r24, r24
    c2ea:	11 f0       	breq	.+4      	; 0xc2f0 <si5351_set_freq+0x240>
    c2ec:	81 e0       	ldi	r24, 0x01	; 1
    c2ee:	73 c0       	rjmp	.+230    	; 0xc3d6 <si5351_set_freq+0x326>
    c2f0:	89 81       	ldd	r24, Y+1	; 0x01
    c2f2:	9a 81       	ldd	r25, Y+2	; 0x02
    c2f4:	ab 81       	ldd	r26, Y+3	; 0x03
    c2f6:	bc 81       	ldd	r27, Y+4	; 0x04
    c2f8:	89 2b       	or	r24, r25
    c2fa:	8a 2b       	or	r24, r26
    c2fc:	8b 2b       	or	r24, r27
    c2fe:	49 f0       	breq	.+18     	; 0xc312 <si5351_set_freq+0x262>
    c300:	89 81       	ldd	r24, Y+1	; 0x01
    c302:	9a 81       	ldd	r25, Y+2	; 0x02
    c304:	ab 81       	ldd	r26, Y+3	; 0x03
    c306:	bc 81       	ldd	r27, Y+4	; 0x04
    c308:	4d 81       	ldd	r20, Y+5	; 0x05
    c30a:	bc 01       	movw	r22, r24
    c30c:	cd 01       	movw	r24, r26
    c30e:	0e 94 a1 62 	call	0xc542	; 0xc542 <_Z7set_pllm10si5351_pll>
    c312:	8d 8d       	ldd	r24, Y+29	; 0x1d
    c314:	88 23       	and	r24, r24
    c316:	71 f0       	breq	.+28     	; 0xc334 <si5351_set_freq+0x284>
    c318:	80 91 92 48 	lds	r24, 0x4892	; 0x804892 <_ZL17enabledClocksMask>
    c31c:	8e 8b       	std	Y+22, r24	; 0x16
    c31e:	ce 01       	movw	r24, r28
    c320:	46 96       	adiw	r24, 0x16	; 22
    c322:	41 e0       	ldi	r20, 0x01	; 1
    c324:	bc 01       	movw	r22, r24
    c326:	83 e0       	ldi	r24, 0x03	; 3
    c328:	0e 94 8e 67 	call	0xcf1c	; 0xcf1c <_Z17si5351_write_bulkhPhh>
    c32c:	88 23       	and	r24, r24
    c32e:	89 f0       	breq	.+34     	; 0xc352 <si5351_set_freq+0x2a2>
    c330:	81 e0       	ldi	r24, 0x01	; 1
    c332:	51 c0       	rjmp	.+162    	; 0xc3d6 <si5351_set_freq+0x326>
    c334:	80 91 92 48 	lds	r24, 0x4892	; 0x804892 <_ZL17enabledClocksMask>
    c338:	80 95       	com	r24
    c33a:	8e 8b       	std	Y+22, r24	; 0x16
    c33c:	ce 01       	movw	r24, r28
    c33e:	46 96       	adiw	r24, 0x16	; 22
    c340:	41 e0       	ldi	r20, 0x01	; 1
    c342:	bc 01       	movw	r22, r24
    c344:	83 e0       	ldi	r24, 0x03	; 3
    c346:	0e 94 8e 67 	call	0xcf1c	; 0xcf1c <_Z17si5351_write_bulkhPhh>
    c34a:	88 23       	and	r24, r24
    c34c:	11 f0       	breq	.+4      	; 0xc352 <si5351_set_freq+0x2a2>
    c34e:	81 e0       	ldi	r24, 0x01	; 1
    c350:	42 c0       	rjmp	.+132    	; 0xc3d6 <si5351_set_freq+0x326>
    c352:	8d 81       	ldd	r24, Y+5	; 0x05
    c354:	81 30       	cpi	r24, 0x01	; 1
    c356:	69 f4       	brne	.+26     	; 0xc372 <si5351_set_freq+0x2c2>
    c358:	8c e4       	ldi	r24, 0x4C	; 76
    c35a:	8e 8b       	std	Y+22, r24	; 0x16
    c35c:	ce 01       	movw	r24, r28
    c35e:	46 96       	adiw	r24, 0x16	; 22
    c360:	41 e0       	ldi	r20, 0x01	; 1
    c362:	bc 01       	movw	r22, r24
    c364:	8e 81       	ldd	r24, Y+6	; 0x06
    c366:	0e 94 8e 67 	call	0xcf1c	; 0xcf1c <_Z17si5351_write_bulkhPhh>
    c36a:	88 23       	and	r24, r24
    c36c:	99 f1       	breq	.+102    	; 0xc3d4 <si5351_set_freq+0x324>
    c36e:	81 e0       	ldi	r24, 0x01	; 1
    c370:	32 c0       	rjmp	.+100    	; 0xc3d6 <si5351_set_freq+0x326>
    c372:	8c 89       	ldd	r24, Y+20	; 0x14
    c374:	88 23       	and	r24, r24
    c376:	69 f0       	breq	.+26     	; 0xc392 <si5351_set_freq+0x2e2>
    c378:	8c e6       	ldi	r24, 0x6C	; 108
    c37a:	8e 8b       	std	Y+22, r24	; 0x16
    c37c:	ce 01       	movw	r24, r28
    c37e:	46 96       	adiw	r24, 0x16	; 22
    c380:	41 e0       	ldi	r20, 0x01	; 1
    c382:	bc 01       	movw	r22, r24
    c384:	8e 81       	ldd	r24, Y+6	; 0x06
    c386:	0e 94 8e 67 	call	0xcf1c	; 0xcf1c <_Z17si5351_write_bulkhPhh>
    c38a:	88 23       	and	r24, r24
    c38c:	79 f0       	breq	.+30     	; 0xc3ac <si5351_set_freq+0x2fc>
    c38e:	81 e0       	ldi	r24, 0x01	; 1
    c390:	22 c0       	rjmp	.+68     	; 0xc3d6 <si5351_set_freq+0x326>
    c392:	8c e2       	ldi	r24, 0x2C	; 44
    c394:	8e 8b       	std	Y+22, r24	; 0x16
    c396:	ce 01       	movw	r24, r28
    c398:	46 96       	adiw	r24, 0x16	; 22
    c39a:	41 e0       	ldi	r20, 0x01	; 1
    c39c:	bc 01       	movw	r22, r24
    c39e:	8e 81       	ldd	r24, Y+6	; 0x06
    c3a0:	0e 94 8e 67 	call	0xcf1c	; 0xcf1c <_Z17si5351_write_bulkhPhh>
    c3a4:	88 23       	and	r24, r24
    c3a6:	11 f0       	breq	.+4      	; 0xc3ac <si5351_set_freq+0x2fc>
    c3a8:	81 e0       	ldi	r24, 0x01	; 1
    c3aa:	15 c0       	rjmp	.+42     	; 0xc3d6 <si5351_set_freq+0x326>
    c3ac:	89 81       	ldd	r24, Y+1	; 0x01
    c3ae:	9a 81       	ldd	r25, Y+2	; 0x02
    c3b0:	ab 81       	ldd	r26, Y+3	; 0x03
    c3b2:	bc 81       	ldd	r27, Y+4	; 0x04
    c3b4:	89 2b       	or	r24, r25
    c3b6:	8a 2b       	or	r24, r26
    c3b8:	8b 2b       	or	r24, r27
    c3ba:	61 f0       	breq	.+24     	; 0xc3d4 <si5351_set_freq+0x324>
    c3bc:	89 81       	ldd	r24, Y+1	; 0x01
    c3be:	9a 81       	ldd	r25, Y+2	; 0x02
    c3c0:	ab 81       	ldd	r26, Y+3	; 0x03
    c3c2:	bc 81       	ldd	r27, Y+4	; 0x04
    c3c4:	80 93 8e 48 	sts	0x488E, r24	; 0x80488e <_ZL8freqVCOB>
    c3c8:	90 93 8f 48 	sts	0x488F, r25	; 0x80488f <_ZL8freqVCOB+0x1>
    c3cc:	a0 93 90 48 	sts	0x4890, r26	; 0x804890 <_ZL8freqVCOB+0x2>
    c3d0:	b0 93 91 48 	sts	0x4891, r27	; 0x804891 <_ZL8freqVCOB+0x3>
    c3d4:	80 e0       	ldi	r24, 0x00	; 0
    c3d6:	6d 96       	adiw	r28, 0x1d	; 29
    c3d8:	cd bf       	out	0x3d, r28	; 61
    c3da:	de bf       	out	0x3e, r29	; 62
    c3dc:	df 91       	pop	r29
    c3de:	cf 91       	pop	r28
    c3e0:	1f 91       	pop	r17
    c3e2:	0f 91       	pop	r16
    c3e4:	ff 90       	pop	r15
    c3e6:	ef 90       	pop	r14
    c3e8:	df 90       	pop	r13
    c3ea:	cf 90       	pop	r12
    c3ec:	af 90       	pop	r10
    c3ee:	8f 90       	pop	r8
    c3f0:	08 95       	ret

0000c3f2 <si5351_clock_enable>:
    c3f2:	cf 93       	push	r28
    c3f4:	df 93       	push	r29
    c3f6:	cd b7       	in	r28, 0x3d	; 61
    c3f8:	de b7       	in	r29, 0x3e	; 62
    c3fa:	25 97       	sbiw	r28, 0x05	; 5
    c3fc:	cd bf       	out	0x3d, r28	; 61
    c3fe:	de bf       	out	0x3e, r29	; 62
    c400:	8c 83       	std	Y+4, r24	; 0x04
    c402:	6d 83       	std	Y+5, r22	; 0x05
    c404:	ce 01       	movw	r24, r28
    c406:	02 96       	adiw	r24, 0x02	; 2
    c408:	41 e0       	ldi	r20, 0x01	; 1
    c40a:	bc 01       	movw	r22, r24
    c40c:	83 e0       	ldi	r24, 0x03	; 3
    c40e:	0e 94 c0 67 	call	0xcf80	; 0xcf80 <_Z16si5351_read_bulkhPhh>
    c412:	88 23       	and	r24, r24
    c414:	11 f0       	breq	.+4      	; 0xc41a <si5351_clock_enable+0x28>
    c416:	8c ef       	ldi	r24, 0xFC	; 252
    c418:	31 c0       	rjmp	.+98     	; 0xc47c <si5351_clock_enable+0x8a>
    c41a:	8a 81       	ldd	r24, Y+2	; 0x02
    c41c:	89 83       	std	Y+1, r24	; 0x01
    c41e:	8d 81       	ldd	r24, Y+5	; 0x05
    c420:	88 23       	and	r24, r24
    c422:	81 f0       	breq	.+32     	; 0xc444 <si5351_clock_enable+0x52>
    c424:	8c 81       	ldd	r24, Y+4	; 0x04
    c426:	28 2f       	mov	r18, r24
    c428:	30 e0       	ldi	r19, 0x00	; 0
    c42a:	81 e0       	ldi	r24, 0x01	; 1
    c42c:	90 e0       	ldi	r25, 0x00	; 0
    c42e:	02 c0       	rjmp	.+4      	; 0xc434 <si5351_clock_enable+0x42>
    c430:	88 0f       	add	r24, r24
    c432:	99 1f       	adc	r25, r25
    c434:	2a 95       	dec	r18
    c436:	e2 f7       	brpl	.-8      	; 0xc430 <si5351_clock_enable+0x3e>
    c438:	98 2f       	mov	r25, r24
    c43a:	90 95       	com	r25
    c43c:	89 81       	ldd	r24, Y+1	; 0x01
    c43e:	89 23       	and	r24, r25
    c440:	89 83       	std	Y+1, r24	; 0x01
    c442:	0e c0       	rjmp	.+28     	; 0xc460 <si5351_clock_enable+0x6e>
    c444:	8c 81       	ldd	r24, Y+4	; 0x04
    c446:	28 2f       	mov	r18, r24
    c448:	30 e0       	ldi	r19, 0x00	; 0
    c44a:	81 e0       	ldi	r24, 0x01	; 1
    c44c:	90 e0       	ldi	r25, 0x00	; 0
    c44e:	02 c0       	rjmp	.+4      	; 0xc454 <si5351_clock_enable+0x62>
    c450:	88 0f       	add	r24, r24
    c452:	99 1f       	adc	r25, r25
    c454:	2a 95       	dec	r18
    c456:	e2 f7       	brpl	.-8      	; 0xc450 <si5351_clock_enable+0x5e>
    c458:	98 2f       	mov	r25, r24
    c45a:	89 81       	ldd	r24, Y+1	; 0x01
    c45c:	89 2b       	or	r24, r25
    c45e:	89 83       	std	Y+1, r24	; 0x01
    c460:	89 81       	ldd	r24, Y+1	; 0x01
    c462:	8a 83       	std	Y+2, r24	; 0x02
    c464:	ce 01       	movw	r24, r28
    c466:	02 96       	adiw	r24, 0x02	; 2
    c468:	41 e0       	ldi	r20, 0x01	; 1
    c46a:	bc 01       	movw	r22, r24
    c46c:	83 e0       	ldi	r24, 0x03	; 3
    c46e:	0e 94 8e 67 	call	0xcf1c	; 0xcf1c <_Z17si5351_write_bulkhPhh>
    c472:	88 23       	and	r24, r24
    c474:	11 f0       	breq	.+4      	; 0xc47a <si5351_clock_enable+0x88>
    c476:	8c ef       	ldi	r24, 0xFC	; 252
    c478:	01 c0       	rjmp	.+2      	; 0xc47c <si5351_clock_enable+0x8a>
    c47a:	80 e0       	ldi	r24, 0x00	; 0
    c47c:	25 96       	adiw	r28, 0x05	; 5
    c47e:	cd bf       	out	0x3d, r28	; 61
    c480:	de bf       	out	0x3e, r29	; 62
    c482:	df 91       	pop	r29
    c484:	cf 91       	pop	r28
    c486:	08 95       	ret

0000c488 <si5351_drive_strength>:
    c488:	cf 93       	push	r28
    c48a:	df 93       	push	r29
    c48c:	cd b7       	in	r28, 0x3d	; 61
    c48e:	de b7       	in	r29, 0x3e	; 62
    c490:	26 97       	sbiw	r28, 0x06	; 6
    c492:	cd bf       	out	0x3d, r28	; 61
    c494:	de bf       	out	0x3e, r29	; 62
    c496:	8d 83       	std	Y+5, r24	; 0x05
    c498:	6e 83       	std	Y+6, r22	; 0x06
    c49a:	83 e0       	ldi	r24, 0x03	; 3
    c49c:	8a 83       	std	Y+2, r24	; 0x02
    c49e:	8d 81       	ldd	r24, Y+5	; 0x05
    c4a0:	20 e1       	ldi	r18, 0x10	; 16
    c4a2:	28 0f       	add	r18, r24
    c4a4:	ce 01       	movw	r24, r28
    c4a6:	03 96       	adiw	r24, 0x03	; 3
    c4a8:	41 e0       	ldi	r20, 0x01	; 1
    c4aa:	bc 01       	movw	r22, r24
    c4ac:	82 2f       	mov	r24, r18
    c4ae:	0e 94 c0 67 	call	0xcf80	; 0xcf80 <_Z16si5351_read_bulkhPhh>
    c4b2:	88 23       	and	r24, r24
    c4b4:	11 f0       	breq	.+4      	; 0xc4ba <si5351_drive_strength+0x32>
    c4b6:	8b ef       	ldi	r24, 0xFB	; 251
    c4b8:	3e c0       	rjmp	.+124    	; 0xc536 <si5351_drive_strength+0xae>
    c4ba:	8b 81       	ldd	r24, Y+3	; 0x03
    c4bc:	89 83       	std	Y+1, r24	; 0x01
    c4be:	8e 81       	ldd	r24, Y+6	; 0x06
    c4c0:	88 2f       	mov	r24, r24
    c4c2:	90 e0       	ldi	r25, 0x00	; 0
    c4c4:	81 30       	cpi	r24, 0x01	; 1
    c4c6:	91 05       	cpc	r25, r1
    c4c8:	81 f0       	breq	.+32     	; 0xc4ea <si5351_drive_strength+0x62>
    c4ca:	82 30       	cpi	r24, 0x02	; 2
    c4cc:	91 05       	cpc	r25, r1
    c4ce:	1c f4       	brge	.+6      	; 0xc4d6 <si5351_drive_strength+0x4e>
    c4d0:	89 2b       	or	r24, r25
    c4d2:	39 f0       	breq	.+14     	; 0xc4e2 <si5351_drive_strength+0x5a>
    c4d4:	1f c0       	rjmp	.+62     	; 0xc514 <si5351_drive_strength+0x8c>
    c4d6:	82 30       	cpi	r24, 0x02	; 2
    c4d8:	91 05       	cpc	r25, r1
    c4da:	71 f0       	breq	.+28     	; 0xc4f8 <si5351_drive_strength+0x70>
    c4dc:	03 97       	sbiw	r24, 0x03	; 3
    c4de:	99 f0       	breq	.+38     	; 0xc506 <si5351_drive_strength+0x7e>
    c4e0:	19 c0       	rjmp	.+50     	; 0xc514 <si5351_drive_strength+0x8c>
    c4e2:	89 81       	ldd	r24, Y+1	; 0x01
    c4e4:	8c 7f       	andi	r24, 0xFC	; 252
    c4e6:	89 83       	std	Y+1, r24	; 0x01
    c4e8:	15 c0       	rjmp	.+42     	; 0xc514 <si5351_drive_strength+0x8c>
    c4ea:	89 81       	ldd	r24, Y+1	; 0x01
    c4ec:	8c 7f       	andi	r24, 0xFC	; 252
    c4ee:	89 83       	std	Y+1, r24	; 0x01
    c4f0:	89 81       	ldd	r24, Y+1	; 0x01
    c4f2:	81 60       	ori	r24, 0x01	; 1
    c4f4:	89 83       	std	Y+1, r24	; 0x01
    c4f6:	0e c0       	rjmp	.+28     	; 0xc514 <si5351_drive_strength+0x8c>
    c4f8:	89 81       	ldd	r24, Y+1	; 0x01
    c4fa:	8c 7f       	andi	r24, 0xFC	; 252
    c4fc:	89 83       	std	Y+1, r24	; 0x01
    c4fe:	89 81       	ldd	r24, Y+1	; 0x01
    c500:	82 60       	ori	r24, 0x02	; 2
    c502:	89 83       	std	Y+1, r24	; 0x01
    c504:	07 c0       	rjmp	.+14     	; 0xc514 <si5351_drive_strength+0x8c>
    c506:	89 81       	ldd	r24, Y+1	; 0x01
    c508:	8c 7f       	andi	r24, 0xFC	; 252
    c50a:	89 83       	std	Y+1, r24	; 0x01
    c50c:	89 81       	ldd	r24, Y+1	; 0x01
    c50e:	83 60       	ori	r24, 0x03	; 3
    c510:	89 83       	std	Y+1, r24	; 0x01
    c512:	00 00       	nop
    c514:	89 81       	ldd	r24, Y+1	; 0x01
    c516:	8b 83       	std	Y+3, r24	; 0x03
    c518:	8d 81       	ldd	r24, Y+5	; 0x05
    c51a:	20 e1       	ldi	r18, 0x10	; 16
    c51c:	28 0f       	add	r18, r24
    c51e:	ce 01       	movw	r24, r28
    c520:	03 96       	adiw	r24, 0x03	; 3
    c522:	41 e0       	ldi	r20, 0x01	; 1
    c524:	bc 01       	movw	r22, r24
    c526:	82 2f       	mov	r24, r18
    c528:	0e 94 8e 67 	call	0xcf1c	; 0xcf1c <_Z17si5351_write_bulkhPhh>
    c52c:	88 23       	and	r24, r24
    c52e:	11 f0       	breq	.+4      	; 0xc534 <si5351_drive_strength+0xac>
    c530:	8b ef       	ldi	r24, 0xFB	; 251
    c532:	01 c0       	rjmp	.+2      	; 0xc536 <si5351_drive_strength+0xae>
    c534:	80 e0       	ldi	r24, 0x00	; 0
    c536:	26 96       	adiw	r28, 0x06	; 6
    c538:	cd bf       	out	0x3d, r28	; 61
    c53a:	de bf       	out	0x3e, r29	; 62
    c53c:	df 91       	pop	r29
    c53e:	cf 91       	pop	r28
    c540:	08 95       	ret

0000c542 <_Z7set_pllm10si5351_pll>:
    c542:	cf 93       	push	r28
    c544:	df 93       	push	r29
    c546:	cd b7       	in	r28, 0x3d	; 61
    c548:	de b7       	in	r29, 0x3e	; 62
    c54a:	6c 97       	sbiw	r28, 0x1c	; 28
    c54c:	cd bf       	out	0x3d, r28	; 61
    c54e:	de bf       	out	0x3e, r29	; 62
    c550:	68 8f       	std	Y+24, r22	; 0x18
    c552:	79 8f       	std	Y+25, r23	; 0x19
    c554:	8a 8f       	std	Y+26, r24	; 0x1a
    c556:	9b 8f       	std	Y+27, r25	; 0x1b
    c558:	4c 8f       	std	Y+28, r20	; 0x1c
    c55a:	9e 01       	movw	r18, r28
    c55c:	2e 5f       	subi	r18, 0xFE	; 254
    c55e:	3f 4f       	sbci	r19, 0xFF	; 255
    c560:	88 8d       	ldd	r24, Y+24	; 0x18
    c562:	99 8d       	ldd	r25, Y+25	; 0x19
    c564:	aa 8d       	ldd	r26, Y+26	; 0x1a
    c566:	bb 8d       	ldd	r27, Y+27	; 0x1b
    c568:	a9 01       	movw	r20, r18
    c56a:	bc 01       	movw	r22, r24
    c56c:	cd 01       	movw	r24, r26
    c56e:	0e 94 6a 63 	call	0xc6d4	; 0xc6d4 <_Z8pll_calcmP13u_si5351_regs>
    c572:	88 23       	and	r24, r24
    c574:	11 f0       	breq	.+4      	; 0xc57a <_Z7set_pllm10si5351_pll+0x38>
    c576:	81 e0       	ldi	r24, 0x01	; 1
    c578:	a7 c0       	rjmp	.+334    	; 0xc6c8 <_Z7set_pllm10si5351_pll+0x186>
    c57a:	19 82       	std	Y+1, r1	; 0x01
    c57c:	89 81       	ldd	r24, Y+1	; 0x01
    c57e:	91 e0       	ldi	r25, 0x01	; 1
    c580:	98 0f       	add	r25, r24
    c582:	99 83       	std	Y+1, r25	; 0x01
    c584:	88 2f       	mov	r24, r24
    c586:	90 e0       	ldi	r25, 0x00	; 0
    c588:	4b 85       	ldd	r20, Y+11	; 0x0b
    c58a:	9e 01       	movw	r18, r28
    c58c:	22 5f       	subi	r18, 0xF2	; 242
    c58e:	3f 4f       	sbci	r19, 0xFF	; 255
    c590:	82 0f       	add	r24, r18
    c592:	93 1f       	adc	r25, r19
    c594:	fc 01       	movw	r30, r24
    c596:	40 83       	st	Z, r20
    c598:	89 81       	ldd	r24, Y+1	; 0x01
    c59a:	91 e0       	ldi	r25, 0x01	; 1
    c59c:	98 0f       	add	r25, r24
    c59e:	99 83       	std	Y+1, r25	; 0x01
    c5a0:	88 2f       	mov	r24, r24
    c5a2:	90 e0       	ldi	r25, 0x00	; 0
    c5a4:	4a 85       	ldd	r20, Y+10	; 0x0a
    c5a6:	9e 01       	movw	r18, r28
    c5a8:	22 5f       	subi	r18, 0xF2	; 242
    c5aa:	3f 4f       	sbci	r19, 0xFF	; 255
    c5ac:	82 0f       	add	r24, r18
    c5ae:	93 1f       	adc	r25, r19
    c5b0:	fc 01       	movw	r30, r24
    c5b2:	40 83       	st	Z, r20
    c5b4:	89 81       	ldd	r24, Y+1	; 0x01
    c5b6:	91 e0       	ldi	r25, 0x01	; 1
    c5b8:	98 0f       	add	r25, r24
    c5ba:	99 83       	std	Y+1, r25	; 0x01
    c5bc:	88 2f       	mov	r24, r24
    c5be:	90 e0       	ldi	r25, 0x00	; 0
    c5c0:	2c 81       	ldd	r18, Y+4	; 0x04
    c5c2:	42 2f       	mov	r20, r18
    c5c4:	43 70       	andi	r20, 0x03	; 3
    c5c6:	9e 01       	movw	r18, r28
    c5c8:	22 5f       	subi	r18, 0xF2	; 242
    c5ca:	3f 4f       	sbci	r19, 0xFF	; 255
    c5cc:	82 0f       	add	r24, r18
    c5ce:	93 1f       	adc	r25, r19
    c5d0:	fc 01       	movw	r30, r24
    c5d2:	40 83       	st	Z, r20
    c5d4:	89 81       	ldd	r24, Y+1	; 0x01
    c5d6:	91 e0       	ldi	r25, 0x01	; 1
    c5d8:	98 0f       	add	r25, r24
    c5da:	99 83       	std	Y+1, r25	; 0x01
    c5dc:	88 2f       	mov	r24, r24
    c5de:	90 e0       	ldi	r25, 0x00	; 0
    c5e0:	4b 81       	ldd	r20, Y+3	; 0x03
    c5e2:	9e 01       	movw	r18, r28
    c5e4:	22 5f       	subi	r18, 0xF2	; 242
    c5e6:	3f 4f       	sbci	r19, 0xFF	; 255
    c5e8:	82 0f       	add	r24, r18
    c5ea:	93 1f       	adc	r25, r19
    c5ec:	fc 01       	movw	r30, r24
    c5ee:	40 83       	st	Z, r20
    c5f0:	89 81       	ldd	r24, Y+1	; 0x01
    c5f2:	91 e0       	ldi	r25, 0x01	; 1
    c5f4:	98 0f       	add	r25, r24
    c5f6:	99 83       	std	Y+1, r25	; 0x01
    c5f8:	88 2f       	mov	r24, r24
    c5fa:	90 e0       	ldi	r25, 0x00	; 0
    c5fc:	4a 81       	ldd	r20, Y+2	; 0x02
    c5fe:	9e 01       	movw	r18, r28
    c600:	22 5f       	subi	r18, 0xF2	; 242
    c602:	3f 4f       	sbci	r19, 0xFF	; 255
    c604:	82 0f       	add	r24, r18
    c606:	93 1f       	adc	r25, r19
    c608:	fc 01       	movw	r30, r24
    c60a:	40 83       	st	Z, r20
    c60c:	89 81       	ldd	r24, Y+1	; 0x01
    c60e:	88 2f       	mov	r24, r24
    c610:	90 e0       	ldi	r25, 0x00	; 0
    c612:	2c 85       	ldd	r18, Y+12	; 0x0c
    c614:	42 2f       	mov	r20, r18
    c616:	42 95       	swap	r20
    c618:	40 7f       	andi	r20, 0xF0	; 240
    c61a:	9e 01       	movw	r18, r28
    c61c:	22 5f       	subi	r18, 0xF2	; 242
    c61e:	3f 4f       	sbci	r19, 0xFF	; 255
    c620:	82 0f       	add	r24, r18
    c622:	93 1f       	adc	r25, r19
    c624:	fc 01       	movw	r30, r24
    c626:	40 83       	st	Z, r20
    c628:	29 81       	ldd	r18, Y+1	; 0x01
    c62a:	81 e0       	ldi	r24, 0x01	; 1
    c62c:	82 0f       	add	r24, r18
    c62e:	89 83       	std	Y+1, r24	; 0x01
    c630:	82 2f       	mov	r24, r18
    c632:	90 e0       	ldi	r25, 0x00	; 0
    c634:	22 2f       	mov	r18, r18
    c636:	30 e0       	ldi	r19, 0x00	; 0
    c638:	ae 01       	movw	r20, r28
    c63a:	42 5f       	subi	r20, 0xF2	; 242
    c63c:	5f 4f       	sbci	r21, 0xFF	; 255
    c63e:	24 0f       	add	r18, r20
    c640:	35 1f       	adc	r19, r21
    c642:	f9 01       	movw	r30, r18
    c644:	30 81       	ld	r19, Z
    c646:	28 85       	ldd	r18, Y+8	; 0x08
    c648:	2f 70       	andi	r18, 0x0F	; 15
    c64a:	43 2f       	mov	r20, r19
    c64c:	42 0f       	add	r20, r18
    c64e:	9e 01       	movw	r18, r28
    c650:	22 5f       	subi	r18, 0xF2	; 242
    c652:	3f 4f       	sbci	r19, 0xFF	; 255
    c654:	82 0f       	add	r24, r18
    c656:	93 1f       	adc	r25, r19
    c658:	fc 01       	movw	r30, r24
    c65a:	40 83       	st	Z, r20
    c65c:	89 81       	ldd	r24, Y+1	; 0x01
    c65e:	91 e0       	ldi	r25, 0x01	; 1
    c660:	98 0f       	add	r25, r24
    c662:	99 83       	std	Y+1, r25	; 0x01
    c664:	88 2f       	mov	r24, r24
    c666:	90 e0       	ldi	r25, 0x00	; 0
    c668:	4f 81       	ldd	r20, Y+7	; 0x07
    c66a:	9e 01       	movw	r18, r28
    c66c:	22 5f       	subi	r18, 0xF2	; 242
    c66e:	3f 4f       	sbci	r19, 0xFF	; 255
    c670:	82 0f       	add	r24, r18
    c672:	93 1f       	adc	r25, r19
    c674:	fc 01       	movw	r30, r24
    c676:	40 83       	st	Z, r20
    c678:	89 81       	ldd	r24, Y+1	; 0x01
    c67a:	91 e0       	ldi	r25, 0x01	; 1
    c67c:	98 0f       	add	r25, r24
    c67e:	99 83       	std	Y+1, r25	; 0x01
    c680:	88 2f       	mov	r24, r24
    c682:	90 e0       	ldi	r25, 0x00	; 0
    c684:	4e 81       	ldd	r20, Y+6	; 0x06
    c686:	9e 01       	movw	r18, r28
    c688:	22 5f       	subi	r18, 0xF2	; 242
    c68a:	3f 4f       	sbci	r19, 0xFF	; 255
    c68c:	82 0f       	add	r24, r18
    c68e:	93 1f       	adc	r25, r19
    c690:	fc 01       	movw	r30, r24
    c692:	40 83       	st	Z, r20
    c694:	8c 8d       	ldd	r24, Y+28	; 0x1c
    c696:	81 30       	cpi	r24, 0x01	; 1
    c698:	59 f4       	brne	.+22     	; 0xc6b0 <_Z7set_pllm10si5351_pll+0x16e>
    c69a:	ce 01       	movw	r24, r28
    c69c:	0e 96       	adiw	r24, 0x0e	; 14
    c69e:	49 81       	ldd	r20, Y+1	; 0x01
    c6a0:	bc 01       	movw	r22, r24
    c6a2:	8a e1       	ldi	r24, 0x1A	; 26
    c6a4:	0e 94 8e 67 	call	0xcf1c	; 0xcf1c <_Z17si5351_write_bulkhPhh>
    c6a8:	88 23       	and	r24, r24
    c6aa:	69 f0       	breq	.+26     	; 0xc6c6 <_Z7set_pllm10si5351_pll+0x184>
    c6ac:	81 e0       	ldi	r24, 0x01	; 1
    c6ae:	0c c0       	rjmp	.+24     	; 0xc6c8 <_Z7set_pllm10si5351_pll+0x186>
    c6b0:	ce 01       	movw	r24, r28
    c6b2:	0e 96       	adiw	r24, 0x0e	; 14
    c6b4:	49 81       	ldd	r20, Y+1	; 0x01
    c6b6:	bc 01       	movw	r22, r24
    c6b8:	82 e2       	ldi	r24, 0x22	; 34
    c6ba:	0e 94 8e 67 	call	0xcf1c	; 0xcf1c <_Z17si5351_write_bulkhPhh>
    c6be:	88 23       	and	r24, r24
    c6c0:	11 f0       	breq	.+4      	; 0xc6c6 <_Z7set_pllm10si5351_pll+0x184>
    c6c2:	81 e0       	ldi	r24, 0x01	; 1
    c6c4:	01 c0       	rjmp	.+2      	; 0xc6c8 <_Z7set_pllm10si5351_pll+0x186>
    c6c6:	80 e0       	ldi	r24, 0x00	; 0
    c6c8:	6c 96       	adiw	r28, 0x1c	; 28
    c6ca:	cd bf       	out	0x3d, r28	; 61
    c6cc:	de bf       	out	0x3e, r29	; 62
    c6ce:	df 91       	pop	r29
    c6d0:	cf 91       	pop	r28
    c6d2:	08 95       	ret

0000c6d4 <_Z8pll_calcmP13u_si5351_regs>:
    c6d4:	cf 93       	push	r28
    c6d6:	df 93       	push	r29
    c6d8:	cd b7       	in	r28, 0x3d	; 61
    c6da:	de b7       	in	r29, 0x3e	; 62
    c6dc:	6e 97       	sbiw	r28, 0x1e	; 30
    c6de:	cd bf       	out	0x3d, r28	; 61
    c6e0:	de bf       	out	0x3e, r29	; 62
    c6e2:	69 8f       	std	Y+25, r22	; 0x19
    c6e4:	7a 8f       	std	Y+26, r23	; 0x1a
    c6e6:	8b 8f       	std	Y+27, r24	; 0x1b
    c6e8:	9c 8f       	std	Y+28, r25	; 0x1c
    c6ea:	4d 8f       	std	Y+29, r20	; 0x1d
    c6ec:	5e 8f       	std	Y+30, r21	; 0x1e
    c6ee:	80 91 4c 40 	lds	r24, 0x404C	; 0x80404c <_ZL9xtal_freq>
    c6f2:	90 91 4d 40 	lds	r25, 0x404D	; 0x80404d <_ZL9xtal_freq+0x1>
    c6f6:	a0 91 4e 40 	lds	r26, 0x404E	; 0x80404e <_ZL9xtal_freq+0x2>
    c6fa:	b0 91 4f 40 	lds	r27, 0x404F	; 0x80404f <_ZL9xtal_freq+0x3>
    c6fe:	89 83       	std	Y+1, r24	; 0x01
    c700:	9a 83       	std	Y+2, r25	; 0x02
    c702:	ab 83       	std	Y+3, r26	; 0x03
    c704:	bc 83       	std	Y+4, r27	; 0x04
    c706:	89 8d       	ldd	r24, Y+25	; 0x19
    c708:	9a 8d       	ldd	r25, Y+26	; 0x1a
    c70a:	ab 8d       	ldd	r26, Y+27	; 0x1b
    c70c:	bc 8d       	ldd	r27, Y+28	; 0x1c
    c70e:	29 81       	ldd	r18, Y+1	; 0x01
    c710:	3a 81       	ldd	r19, Y+2	; 0x02
    c712:	4b 81       	ldd	r20, Y+3	; 0x03
    c714:	5c 81       	ldd	r21, Y+4	; 0x04
    c716:	bc 01       	movw	r22, r24
    c718:	cd 01       	movw	r24, r26
    c71a:	0e 94 d3 74 	call	0xe9a6	; 0xe9a6 <__udivmodsi4>
    c71e:	da 01       	movw	r26, r20
    c720:	c9 01       	movw	r24, r18
    c722:	8d 83       	std	Y+5, r24	; 0x05
    c724:	9e 83       	std	Y+6, r25	; 0x06
    c726:	af 83       	std	Y+7, r26	; 0x07
    c728:	b8 87       	std	Y+8, r27	; 0x08
    c72a:	89 8d       	ldd	r24, Y+25	; 0x19
    c72c:	9a 8d       	ldd	r25, Y+26	; 0x1a
    c72e:	ab 8d       	ldd	r26, Y+27	; 0x1b
    c730:	bc 8d       	ldd	r27, Y+28	; 0x1c
    c732:	29 81       	ldd	r18, Y+1	; 0x01
    c734:	3a 81       	ldd	r19, Y+2	; 0x02
    c736:	4b 81       	ldd	r20, Y+3	; 0x03
    c738:	5c 81       	ldd	r21, Y+4	; 0x04
    c73a:	bc 01       	movw	r22, r24
    c73c:	cd 01       	movw	r24, r26
    c73e:	0e 94 d3 74 	call	0xe9a6	; 0xe9a6 <__udivmodsi4>
    c742:	dc 01       	movw	r26, r24
    c744:	cb 01       	movw	r24, r22
    c746:	89 8b       	std	Y+17, r24	; 0x11
    c748:	9a 8b       	std	Y+18, r25	; 0x12
    c74a:	ab 8b       	std	Y+19, r26	; 0x13
    c74c:	bc 8b       	std	Y+20, r27	; 0x14
    c74e:	89 81       	ldd	r24, Y+1	; 0x01
    c750:	9a 81       	ldd	r25, Y+2	; 0x02
    c752:	ab 81       	ldd	r26, Y+3	; 0x03
    c754:	bc 81       	ldd	r27, Y+4	; 0x04
    c756:	8d 8b       	std	Y+21, r24	; 0x15
    c758:	9e 8b       	std	Y+22, r25	; 0x16
    c75a:	af 8b       	std	Y+23, r26	; 0x17
    c75c:	b8 8f       	std	Y+24, r27	; 0x18
    c75e:	9e 01       	movw	r18, r28
    c760:	2b 5e       	subi	r18, 0xEB	; 235
    c762:	3f 4f       	sbci	r19, 0xFF	; 255
    c764:	ce 01       	movw	r24, r28
    c766:	41 96       	adiw	r24, 0x11	; 17
    c768:	b9 01       	movw	r22, r18
    c76a:	0e 94 50 64 	call	0xc8a0	; 0xc8a0 <_Z13reduce_by_gcdPmS_>
    c76e:	89 89       	ldd	r24, Y+17	; 0x11
    c770:	9a 89       	ldd	r25, Y+18	; 0x12
    c772:	ab 89       	ldd	r26, Y+19	; 0x13
    c774:	bc 89       	ldd	r27, Y+20	; 0x14
    c776:	88 0f       	add	r24, r24
    c778:	99 1f       	adc	r25, r25
    c77a:	aa 1f       	adc	r26, r26
    c77c:	bb 1f       	adc	r27, r27
    c77e:	88 0f       	add	r24, r24
    c780:	99 1f       	adc	r25, r25
    c782:	aa 1f       	adc	r26, r26
    c784:	bb 1f       	adc	r27, r27
    c786:	88 0f       	add	r24, r24
    c788:	99 1f       	adc	r25, r25
    c78a:	aa 1f       	adc	r26, r26
    c78c:	bb 1f       	adc	r27, r27
    c78e:	88 0f       	add	r24, r24
    c790:	99 1f       	adc	r25, r25
    c792:	aa 1f       	adc	r26, r26
    c794:	bb 1f       	adc	r27, r27
    c796:	88 0f       	add	r24, r24
    c798:	99 1f       	adc	r25, r25
    c79a:	aa 1f       	adc	r26, r26
    c79c:	bb 1f       	adc	r27, r27
    c79e:	88 0f       	add	r24, r24
    c7a0:	99 1f       	adc	r25, r25
    c7a2:	aa 1f       	adc	r26, r26
    c7a4:	bb 1f       	adc	r27, r27
    c7a6:	88 0f       	add	r24, r24
    c7a8:	99 1f       	adc	r25, r25
    c7aa:	aa 1f       	adc	r26, r26
    c7ac:	bb 1f       	adc	r27, r27
    c7ae:	89 87       	std	Y+9, r24	; 0x09
    c7b0:	9a 87       	std	Y+10, r25	; 0x0a
    c7b2:	ab 87       	std	Y+11, r26	; 0x0b
    c7b4:	bc 87       	std	Y+12, r27	; 0x0c
    c7b6:	2d 89       	ldd	r18, Y+21	; 0x15
    c7b8:	3e 89       	ldd	r19, Y+22	; 0x16
    c7ba:	4f 89       	ldd	r20, Y+23	; 0x17
    c7bc:	58 8d       	ldd	r21, Y+24	; 0x18
    c7be:	89 85       	ldd	r24, Y+9	; 0x09
    c7c0:	9a 85       	ldd	r25, Y+10	; 0x0a
    c7c2:	ab 85       	ldd	r26, Y+11	; 0x0b
    c7c4:	bc 85       	ldd	r27, Y+12	; 0x0c
    c7c6:	bc 01       	movw	r22, r24
    c7c8:	cd 01       	movw	r24, r26
    c7ca:	0e 94 d3 74 	call	0xe9a6	; 0xe9a6 <__udivmodsi4>
    c7ce:	da 01       	movw	r26, r20
    c7d0:	c9 01       	movw	r24, r18
    c7d2:	8d 87       	std	Y+13, r24	; 0x0d
    c7d4:	9e 87       	std	Y+14, r25	; 0x0e
    c7d6:	af 87       	std	Y+15, r26	; 0x0f
    c7d8:	b8 8b       	std	Y+16, r27	; 0x10
    c7da:	8d 81       	ldd	r24, Y+5	; 0x05
    c7dc:	9e 81       	ldd	r25, Y+6	; 0x06
    c7de:	af 81       	ldd	r26, Y+7	; 0x07
    c7e0:	b8 85       	ldd	r27, Y+8	; 0x08
    c7e2:	88 0f       	add	r24, r24
    c7e4:	99 1f       	adc	r25, r25
    c7e6:	aa 1f       	adc	r26, r26
    c7e8:	bb 1f       	adc	r27, r27
    c7ea:	88 0f       	add	r24, r24
    c7ec:	99 1f       	adc	r25, r25
    c7ee:	aa 1f       	adc	r26, r26
    c7f0:	bb 1f       	adc	r27, r27
    c7f2:	88 0f       	add	r24, r24
    c7f4:	99 1f       	adc	r25, r25
    c7f6:	aa 1f       	adc	r26, r26
    c7f8:	bb 1f       	adc	r27, r27
    c7fa:	88 0f       	add	r24, r24
    c7fc:	99 1f       	adc	r25, r25
    c7fe:	aa 1f       	adc	r26, r26
    c800:	bb 1f       	adc	r27, r27
    c802:	88 0f       	add	r24, r24
    c804:	99 1f       	adc	r25, r25
    c806:	aa 1f       	adc	r26, r26
    c808:	bb 1f       	adc	r27, r27
    c80a:	88 0f       	add	r24, r24
    c80c:	99 1f       	adc	r25, r25
    c80e:	aa 1f       	adc	r26, r26
    c810:	bb 1f       	adc	r27, r27
    c812:	88 0f       	add	r24, r24
    c814:	99 1f       	adc	r25, r25
    c816:	aa 1f       	adc	r26, r26
    c818:	bb 1f       	adc	r27, r27
    c81a:	9c 01       	movw	r18, r24
    c81c:	ad 01       	movw	r20, r26
    c81e:	8d 85       	ldd	r24, Y+13	; 0x0d
    c820:	9e 85       	ldd	r25, Y+14	; 0x0e
    c822:	af 85       	ldd	r26, Y+15	; 0x0f
    c824:	b8 89       	ldd	r27, Y+16	; 0x10
    c826:	82 0f       	add	r24, r18
    c828:	93 1f       	adc	r25, r19
    c82a:	a4 1f       	adc	r26, r20
    c82c:	b5 1f       	adc	r27, r21
    c82e:	92 50       	subi	r25, 0x02	; 2
    c830:	a1 09       	sbc	r26, r1
    c832:	b1 09       	sbc	r27, r1
    c834:	2d 8d       	ldd	r18, Y+29	; 0x1d
    c836:	3e 8d       	ldd	r19, Y+30	; 0x1e
    c838:	f9 01       	movw	r30, r18
    c83a:	80 83       	st	Z, r24
    c83c:	91 83       	std	Z+1, r25	; 0x01
    c83e:	a2 83       	std	Z+2, r26	; 0x02
    c840:	b3 83       	std	Z+3, r27	; 0x03
    c842:	2d 89       	ldd	r18, Y+21	; 0x15
    c844:	3e 89       	ldd	r19, Y+22	; 0x16
    c846:	4f 89       	ldd	r20, Y+23	; 0x17
    c848:	58 8d       	ldd	r21, Y+24	; 0x18
    c84a:	8d 85       	ldd	r24, Y+13	; 0x0d
    c84c:	9e 85       	ldd	r25, Y+14	; 0x0e
    c84e:	af 85       	ldd	r26, Y+15	; 0x0f
    c850:	b8 89       	ldd	r27, Y+16	; 0x10
    c852:	bc 01       	movw	r22, r24
    c854:	cd 01       	movw	r24, r26
    c856:	0e 94 9b 74 	call	0xe936	; 0xe936 <__mulsi3>
    c85a:	9b 01       	movw	r18, r22
    c85c:	ac 01       	movw	r20, r24
    c85e:	89 85       	ldd	r24, Y+9	; 0x09
    c860:	9a 85       	ldd	r25, Y+10	; 0x0a
    c862:	ab 85       	ldd	r26, Y+11	; 0x0b
    c864:	bc 85       	ldd	r27, Y+12	; 0x0c
    c866:	82 1b       	sub	r24, r18
    c868:	93 0b       	sbc	r25, r19
    c86a:	a4 0b       	sbc	r26, r20
    c86c:	b5 0b       	sbc	r27, r21
    c86e:	2d 8d       	ldd	r18, Y+29	; 0x1d
    c870:	3e 8d       	ldd	r19, Y+30	; 0x1e
    c872:	f9 01       	movw	r30, r18
    c874:	84 83       	std	Z+4, r24	; 0x04
    c876:	95 83       	std	Z+5, r25	; 0x05
    c878:	a6 83       	std	Z+6, r26	; 0x06
    c87a:	b7 83       	std	Z+7, r27	; 0x07
    c87c:	8d 89       	ldd	r24, Y+21	; 0x15
    c87e:	9e 89       	ldd	r25, Y+22	; 0x16
    c880:	af 89       	ldd	r26, Y+23	; 0x17
    c882:	b8 8d       	ldd	r27, Y+24	; 0x18
    c884:	2d 8d       	ldd	r18, Y+29	; 0x1d
    c886:	3e 8d       	ldd	r19, Y+30	; 0x1e
    c888:	f9 01       	movw	r30, r18
    c88a:	80 87       	std	Z+8, r24	; 0x08
    c88c:	91 87       	std	Z+9, r25	; 0x09
    c88e:	a2 87       	std	Z+10, r26	; 0x0a
    c890:	b3 87       	std	Z+11, r27	; 0x0b
    c892:	80 e0       	ldi	r24, 0x00	; 0
    c894:	6e 96       	adiw	r28, 0x1e	; 30
    c896:	cd bf       	out	0x3d, r28	; 61
    c898:	de bf       	out	0x3e, r29	; 62
    c89a:	df 91       	pop	r29
    c89c:	cf 91       	pop	r28
    c89e:	08 95       	ret

0000c8a0 <_Z13reduce_by_gcdPmS_>:
    c8a0:	cf 93       	push	r28
    c8a2:	df 93       	push	r29
    c8a4:	cd b7       	in	r28, 0x3d	; 61
    c8a6:	de b7       	in	r29, 0x3e	; 62
    c8a8:	60 97       	sbiw	r28, 0x10	; 16
    c8aa:	cd bf       	out	0x3d, r28	; 61
    c8ac:	de bf       	out	0x3e, r29	; 62
    c8ae:	8d 87       	std	Y+13, r24	; 0x0d
    c8b0:	9e 87       	std	Y+14, r25	; 0x0e
    c8b2:	6f 87       	std	Y+15, r22	; 0x0f
    c8b4:	78 8b       	std	Y+16, r23	; 0x10
    c8b6:	8d 85       	ldd	r24, Y+13	; 0x0d
    c8b8:	9e 85       	ldd	r25, Y+14	; 0x0e
    c8ba:	fc 01       	movw	r30, r24
    c8bc:	80 81       	ld	r24, Z
    c8be:	91 81       	ldd	r25, Z+1	; 0x01
    c8c0:	a2 81       	ldd	r26, Z+2	; 0x02
    c8c2:	b3 81       	ldd	r27, Z+3	; 0x03
    c8c4:	89 87       	std	Y+9, r24	; 0x09
    c8c6:	9a 87       	std	Y+10, r25	; 0x0a
    c8c8:	ab 87       	std	Y+11, r26	; 0x0b
    c8ca:	bc 87       	std	Y+12, r27	; 0x0c
    c8cc:	8f 85       	ldd	r24, Y+15	; 0x0f
    c8ce:	98 89       	ldd	r25, Y+16	; 0x10
    c8d0:	fc 01       	movw	r30, r24
    c8d2:	80 81       	ld	r24, Z
    c8d4:	91 81       	ldd	r25, Z+1	; 0x01
    c8d6:	a2 81       	ldd	r26, Z+2	; 0x02
    c8d8:	b3 81       	ldd	r27, Z+3	; 0x03
    c8da:	8d 83       	std	Y+5, r24	; 0x05
    c8dc:	9e 83       	std	Y+6, r25	; 0x06
    c8de:	af 83       	std	Y+7, r26	; 0x07
    c8e0:	b8 87       	std	Y+8, r27	; 0x08
    c8e2:	89 85       	ldd	r24, Y+9	; 0x09
    c8e4:	9a 85       	ldd	r25, Y+10	; 0x0a
    c8e6:	ab 85       	ldd	r26, Y+11	; 0x0b
    c8e8:	bc 85       	ldd	r27, Y+12	; 0x0c
    c8ea:	89 2b       	or	r24, r25
    c8ec:	8a 2b       	or	r24, r26
    c8ee:	8b 2b       	or	r24, r27
    c8f0:	09 f4       	brne	.+2      	; 0xc8f4 <_Z13reduce_by_gcdPmS_+0x54>
    c8f2:	80 c0       	rjmp	.+256    	; 0xc9f4 <_Z13reduce_by_gcdPmS_+0x154>
    c8f4:	8d 81       	ldd	r24, Y+5	; 0x05
    c8f6:	9e 81       	ldd	r25, Y+6	; 0x06
    c8f8:	af 81       	ldd	r26, Y+7	; 0x07
    c8fa:	b8 85       	ldd	r27, Y+8	; 0x08
    c8fc:	89 2b       	or	r24, r25
    c8fe:	8a 2b       	or	r24, r26
    c900:	8b 2b       	or	r24, r27
    c902:	09 f4       	brne	.+2      	; 0xc906 <_Z13reduce_by_gcdPmS_+0x66>
    c904:	77 c0       	rjmp	.+238    	; 0xc9f4 <_Z13reduce_by_gcdPmS_+0x154>
    c906:	89 85       	ldd	r24, Y+9	; 0x09
    c908:	9a 85       	ldd	r25, Y+10	; 0x0a
    c90a:	ab 85       	ldd	r26, Y+11	; 0x0b
    c90c:	bc 85       	ldd	r27, Y+12	; 0x0c
    c90e:	2d 81       	ldd	r18, Y+5	; 0x05
    c910:	3e 81       	ldd	r19, Y+6	; 0x06
    c912:	4f 81       	ldd	r20, Y+7	; 0x07
    c914:	58 85       	ldd	r21, Y+8	; 0x08
    c916:	bc 01       	movw	r22, r24
    c918:	cd 01       	movw	r24, r26
    c91a:	0e 94 d3 74 	call	0xe9a6	; 0xe9a6 <__udivmodsi4>
    c91e:	dc 01       	movw	r26, r24
    c920:	cb 01       	movw	r24, r22
    c922:	89 83       	std	Y+1, r24	; 0x01
    c924:	9a 83       	std	Y+2, r25	; 0x02
    c926:	ab 83       	std	Y+3, r26	; 0x03
    c928:	bc 83       	std	Y+4, r27	; 0x04
    c92a:	89 81       	ldd	r24, Y+1	; 0x01
    c92c:	9a 81       	ldd	r25, Y+2	; 0x02
    c92e:	ab 81       	ldd	r26, Y+3	; 0x03
    c930:	bc 81       	ldd	r27, Y+4	; 0x04
    c932:	89 2b       	or	r24, r25
    c934:	8a 2b       	or	r24, r26
    c936:	8b 2b       	or	r24, r27
    c938:	19 f1       	breq	.+70     	; 0xc980 <_Z13reduce_by_gcdPmS_+0xe0>
    c93a:	8d 81       	ldd	r24, Y+5	; 0x05
    c93c:	9e 81       	ldd	r25, Y+6	; 0x06
    c93e:	af 81       	ldd	r26, Y+7	; 0x07
    c940:	b8 85       	ldd	r27, Y+8	; 0x08
    c942:	89 87       	std	Y+9, r24	; 0x09
    c944:	9a 87       	std	Y+10, r25	; 0x0a
    c946:	ab 87       	std	Y+11, r26	; 0x0b
    c948:	bc 87       	std	Y+12, r27	; 0x0c
    c94a:	89 81       	ldd	r24, Y+1	; 0x01
    c94c:	9a 81       	ldd	r25, Y+2	; 0x02
    c94e:	ab 81       	ldd	r26, Y+3	; 0x03
    c950:	bc 81       	ldd	r27, Y+4	; 0x04
    c952:	8d 83       	std	Y+5, r24	; 0x05
    c954:	9e 83       	std	Y+6, r25	; 0x06
    c956:	af 83       	std	Y+7, r26	; 0x07
    c958:	b8 87       	std	Y+8, r27	; 0x08
    c95a:	89 85       	ldd	r24, Y+9	; 0x09
    c95c:	9a 85       	ldd	r25, Y+10	; 0x0a
    c95e:	ab 85       	ldd	r26, Y+11	; 0x0b
    c960:	bc 85       	ldd	r27, Y+12	; 0x0c
    c962:	2d 81       	ldd	r18, Y+5	; 0x05
    c964:	3e 81       	ldd	r19, Y+6	; 0x06
    c966:	4f 81       	ldd	r20, Y+7	; 0x07
    c968:	58 85       	ldd	r21, Y+8	; 0x08
    c96a:	bc 01       	movw	r22, r24
    c96c:	cd 01       	movw	r24, r26
    c96e:	0e 94 d3 74 	call	0xe9a6	; 0xe9a6 <__udivmodsi4>
    c972:	dc 01       	movw	r26, r24
    c974:	cb 01       	movw	r24, r22
    c976:	89 83       	std	Y+1, r24	; 0x01
    c978:	9a 83       	std	Y+2, r25	; 0x02
    c97a:	ab 83       	std	Y+3, r26	; 0x03
    c97c:	bc 83       	std	Y+4, r27	; 0x04
    c97e:	d5 cf       	rjmp	.-86     	; 0xc92a <_Z13reduce_by_gcdPmS_+0x8a>
    c980:	8d 81       	ldd	r24, Y+5	; 0x05
    c982:	9e 81       	ldd	r25, Y+6	; 0x06
    c984:	af 81       	ldd	r26, Y+7	; 0x07
    c986:	b8 85       	ldd	r27, Y+8	; 0x08
    c988:	02 97       	sbiw	r24, 0x02	; 2
    c98a:	a1 05       	cpc	r26, r1
    c98c:	b1 05       	cpc	r27, r1
    c98e:	a0 f1       	brcs	.+104    	; 0xc9f8 <_Z13reduce_by_gcdPmS_+0x158>
    c990:	8d 85       	ldd	r24, Y+13	; 0x0d
    c992:	9e 85       	ldd	r25, Y+14	; 0x0e
    c994:	fc 01       	movw	r30, r24
    c996:	80 81       	ld	r24, Z
    c998:	91 81       	ldd	r25, Z+1	; 0x01
    c99a:	a2 81       	ldd	r26, Z+2	; 0x02
    c99c:	b3 81       	ldd	r27, Z+3	; 0x03
    c99e:	2d 81       	ldd	r18, Y+5	; 0x05
    c9a0:	3e 81       	ldd	r19, Y+6	; 0x06
    c9a2:	4f 81       	ldd	r20, Y+7	; 0x07
    c9a4:	58 85       	ldd	r21, Y+8	; 0x08
    c9a6:	bc 01       	movw	r22, r24
    c9a8:	cd 01       	movw	r24, r26
    c9aa:	0e 94 d3 74 	call	0xe9a6	; 0xe9a6 <__udivmodsi4>
    c9ae:	da 01       	movw	r26, r20
    c9b0:	c9 01       	movw	r24, r18
    c9b2:	2d 85       	ldd	r18, Y+13	; 0x0d
    c9b4:	3e 85       	ldd	r19, Y+14	; 0x0e
    c9b6:	f9 01       	movw	r30, r18
    c9b8:	80 83       	st	Z, r24
    c9ba:	91 83       	std	Z+1, r25	; 0x01
    c9bc:	a2 83       	std	Z+2, r26	; 0x02
    c9be:	b3 83       	std	Z+3, r27	; 0x03
    c9c0:	8f 85       	ldd	r24, Y+15	; 0x0f
    c9c2:	98 89       	ldd	r25, Y+16	; 0x10
    c9c4:	fc 01       	movw	r30, r24
    c9c6:	80 81       	ld	r24, Z
    c9c8:	91 81       	ldd	r25, Z+1	; 0x01
    c9ca:	a2 81       	ldd	r26, Z+2	; 0x02
    c9cc:	b3 81       	ldd	r27, Z+3	; 0x03
    c9ce:	2d 81       	ldd	r18, Y+5	; 0x05
    c9d0:	3e 81       	ldd	r19, Y+6	; 0x06
    c9d2:	4f 81       	ldd	r20, Y+7	; 0x07
    c9d4:	58 85       	ldd	r21, Y+8	; 0x08
    c9d6:	bc 01       	movw	r22, r24
    c9d8:	cd 01       	movw	r24, r26
    c9da:	0e 94 d3 74 	call	0xe9a6	; 0xe9a6 <__udivmodsi4>
    c9de:	da 01       	movw	r26, r20
    c9e0:	c9 01       	movw	r24, r18
    c9e2:	2f 85       	ldd	r18, Y+15	; 0x0f
    c9e4:	38 89       	ldd	r19, Y+16	; 0x10
    c9e6:	f9 01       	movw	r30, r18
    c9e8:	80 83       	st	Z, r24
    c9ea:	91 83       	std	Z+1, r25	; 0x01
    c9ec:	a2 83       	std	Z+2, r26	; 0x02
    c9ee:	b3 83       	std	Z+3, r27	; 0x03
    c9f0:	00 00       	nop
    c9f2:	02 c0       	rjmp	.+4      	; 0xc9f8 <_Z13reduce_by_gcdPmS_+0x158>
    c9f4:	00 00       	nop
    c9f6:	01 c0       	rjmp	.+2      	; 0xc9fa <_Z13reduce_by_gcdPmS_+0x15a>
    c9f8:	00 00       	nop
    c9fa:	60 96       	adiw	r28, 0x10	; 16
    c9fc:	cd bf       	out	0x3d, r28	; 61
    c9fe:	de bf       	out	0x3e, r29	; 62
    ca00:	df 91       	pop	r29
    ca02:	cf 91       	pop	r28
    ca04:	08 95       	ret

0000ca06 <_Z15multisynth_calcmP13u_si5351_regsPbS1_>:
    ca06:	0f 93       	push	r16
    ca08:	1f 93       	push	r17
    ca0a:	cf 93       	push	r28
    ca0c:	df 93       	push	r29
    ca0e:	cd b7       	in	r28, 0x3d	; 61
    ca10:	de b7       	in	r29, 0x3e	; 62
    ca12:	69 97       	sbiw	r28, 0x19	; 25
    ca14:	cd bf       	out	0x3d, r28	; 61
    ca16:	de bf       	out	0x3e, r29	; 62
    ca18:	68 8b       	std	Y+16, r22	; 0x10
    ca1a:	79 8b       	std	Y+17, r23	; 0x11
    ca1c:	8a 8b       	std	Y+18, r24	; 0x12
    ca1e:	9b 8b       	std	Y+19, r25	; 0x13
    ca20:	4c 8b       	std	Y+20, r20	; 0x14
    ca22:	5d 8b       	std	Y+21, r21	; 0x15
    ca24:	2e 8b       	std	Y+22, r18	; 0x16
    ca26:	3f 8b       	std	Y+23, r19	; 0x17
    ca28:	08 8f       	std	Y+24, r16	; 0x18
    ca2a:	19 8f       	std	Y+25, r17	; 0x19
    ca2c:	19 82       	std	Y+1, r1	; 0x01
    ca2e:	1a 82       	std	Y+2, r1	; 0x02
    ca30:	1b 82       	std	Y+3, r1	; 0x03
    ca32:	1c 82       	std	Y+4, r1	; 0x04
    ca34:	1d 82       	std	Y+5, r1	; 0x05
    ca36:	1e 82       	std	Y+6, r1	; 0x06
    ca38:	1f 82       	std	Y+7, r1	; 0x07
    ca3a:	18 86       	std	Y+8, r1	; 0x08
    ca3c:	8e 89       	ldd	r24, Y+22	; 0x16
    ca3e:	9f 89       	ldd	r25, Y+23	; 0x17
    ca40:	21 e0       	ldi	r18, 0x01	; 1
    ca42:	fc 01       	movw	r30, r24
    ca44:	20 83       	st	Z, r18
    ca46:	88 89       	ldd	r24, Y+16	; 0x10
    ca48:	99 89       	ldd	r25, Y+17	; 0x11
    ca4a:	aa 89       	ldd	r26, Y+18	; 0x12
    ca4c:	bb 89       	ldd	r27, Y+19	; 0x13
    ca4e:	80 38       	cpi	r24, 0x80	; 128
    ca50:	91 4d       	sbci	r25, 0xD1	; 209
    ca52:	a0 4f       	sbci	r26, 0xF0	; 240
    ca54:	b8 40       	sbci	r27, 0x08	; 8
    ca56:	d8 f0       	brcs	.+54     	; 0xca8e <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x88>
    ca58:	84 e0       	ldi	r24, 0x04	; 4
    ca5a:	90 e0       	ldi	r25, 0x00	; 0
    ca5c:	a0 e0       	ldi	r26, 0x00	; 0
    ca5e:	b0 e0       	ldi	r27, 0x00	; 0
    ca60:	89 83       	std	Y+1, r24	; 0x01
    ca62:	9a 83       	std	Y+2, r25	; 0x02
    ca64:	ab 83       	std	Y+3, r26	; 0x03
    ca66:	bc 83       	std	Y+4, r27	; 0x04
    ca68:	29 81       	ldd	r18, Y+1	; 0x01
    ca6a:	3a 81       	ldd	r19, Y+2	; 0x02
    ca6c:	4b 81       	ldd	r20, Y+3	; 0x03
    ca6e:	5c 81       	ldd	r21, Y+4	; 0x04
    ca70:	88 89       	ldd	r24, Y+16	; 0x10
    ca72:	99 89       	ldd	r25, Y+17	; 0x11
    ca74:	aa 89       	ldd	r26, Y+18	; 0x12
    ca76:	bb 89       	ldd	r27, Y+19	; 0x13
    ca78:	bc 01       	movw	r22, r24
    ca7a:	cd 01       	movw	r24, r26
    ca7c:	0e 94 9b 74 	call	0xe936	; 0xe936 <__mulsi3>
    ca80:	dc 01       	movw	r26, r24
    ca82:	cb 01       	movw	r24, r22
    ca84:	8d 83       	std	Y+5, r24	; 0x05
    ca86:	9e 83       	std	Y+6, r25	; 0x06
    ca88:	af 83       	std	Y+7, r26	; 0x07
    ca8a:	b8 87       	std	Y+8, r27	; 0x08
    ca8c:	6e c0       	rjmp	.+220    	; 0xcb6a <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x164>
    ca8e:	19 86       	std	Y+9, r1	; 0x09
    ca90:	1a 86       	std	Y+10, r1	; 0x0a
    ca92:	1b 86       	std	Y+11, r1	; 0x0b
    ca94:	89 85       	ldd	r24, Y+9	; 0x09
    ca96:	88 23       	and	r24, r24
    ca98:	09 f0       	breq	.+2      	; 0xca9c <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x96>
    ca9a:	52 c0       	rjmp	.+164    	; 0xcb40 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x13a>
    ca9c:	8b 85       	ldd	r24, Y+11	; 0x0b
    ca9e:	28 2f       	mov	r18, r24
    caa0:	30 e0       	ldi	r19, 0x00	; 0
    caa2:	40 e0       	ldi	r20, 0x00	; 0
    caa4:	50 e0       	ldi	r21, 0x00	; 0
    caa6:	88 89       	ldd	r24, Y+16	; 0x10
    caa8:	99 89       	ldd	r25, Y+17	; 0x11
    caaa:	aa 89       	ldd	r26, Y+18	; 0x12
    caac:	bb 89       	ldd	r27, Y+19	; 0x13
    caae:	bc 01       	movw	r22, r24
    cab0:	cd 01       	movw	r24, r26
    cab2:	0e 94 9b 74 	call	0xe936	; 0xe936 <__mulsi3>
    cab6:	9b 01       	movw	r18, r22
    cab8:	ac 01       	movw	r20, r24
    caba:	80 e0       	ldi	r24, 0x00	; 0
    cabc:	99 ee       	ldi	r25, 0xE9	; 233
    cabe:	a4 ea       	ldi	r26, 0xA4	; 164
    cac0:	b5 e3       	ldi	r27, 0x35	; 53
    cac2:	82 1b       	sub	r24, r18
    cac4:	93 0b       	sbc	r25, r19
    cac6:	a4 0b       	sbc	r26, r20
    cac8:	b5 0b       	sbc	r27, r21
    caca:	8c 87       	std	Y+12, r24	; 0x0c
    cacc:	9d 87       	std	Y+13, r25	; 0x0d
    cace:	ae 87       	std	Y+14, r26	; 0x0e
    cad0:	bf 87       	std	Y+15, r27	; 0x0f
    cad2:	8b 85       	ldd	r24, Y+11	; 0x0b
    cad4:	8e 5f       	subi	r24, 0xFE	; 254
    cad6:	8b 87       	std	Y+11, r24	; 0x0b
    cad8:	8c 85       	ldd	r24, Y+12	; 0x0c
    cada:	9d 85       	ldd	r25, Y+13	; 0x0d
    cadc:	ae 85       	ldd	r26, Y+14	; 0x0e
    cade:	bf 85       	ldd	r27, Y+15	; 0x0f
    cae0:	81 15       	cp	r24, r1
    cae2:	96 44       	sbci	r25, 0x46	; 70
    cae4:	a3 4c       	sbci	r26, 0xC3	; 195
    cae6:	b3 42       	sbci	r27, 0x23	; 35
    cae8:	40 f1       	brcs	.+80     	; 0xcb3a <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x134>
    caea:	8c 85       	ldd	r24, Y+12	; 0x0c
    caec:	9d 85       	ldd	r25, Y+13	; 0x0d
    caee:	ae 85       	ldd	r26, Y+14	; 0x0e
    caf0:	bf 85       	ldd	r27, Y+15	; 0x0f
    caf2:	28 89       	ldd	r18, Y+16	; 0x10
    caf4:	39 89       	ldd	r19, Y+17	; 0x11
    caf6:	4a 89       	ldd	r20, Y+18	; 0x12
    caf8:	5b 89       	ldd	r21, Y+19	; 0x13
    cafa:	bc 01       	movw	r22, r24
    cafc:	cd 01       	movw	r24, r26
    cafe:	0e 94 d3 74 	call	0xe9a6	; 0xe9a6 <__udivmodsi4>
    cb02:	da 01       	movw	r26, r20
    cb04:	c9 01       	movw	r24, r18
    cb06:	8c 87       	std	Y+12, r24	; 0x0c
    cb08:	9d 87       	std	Y+13, r25	; 0x0d
    cb0a:	ae 87       	std	Y+14, r26	; 0x0e
    cb0c:	bf 87       	std	Y+15, r27	; 0x0f
    cb0e:	8c 85       	ldd	r24, Y+12	; 0x0c
    cb10:	9d 85       	ldd	r25, Y+13	; 0x0d
    cb12:	ae 85       	ldd	r26, Y+14	; 0x0e
    cb14:	bf 85       	ldd	r27, Y+15	; 0x0f
    cb16:	04 97       	sbiw	r24, 0x04	; 4
    cb18:	a1 05       	cpc	r26, r1
    cb1a:	b1 05       	cpc	r27, r1
    cb1c:	08 f4       	brcc	.+2      	; 0xcb20 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x11a>
    cb1e:	ba cf       	rjmp	.-140    	; 0xca94 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x8e>
    cb20:	81 e0       	ldi	r24, 0x01	; 1
    cb22:	89 87       	std	Y+9, r24	; 0x09
    cb24:	81 e0       	ldi	r24, 0x01	; 1
    cb26:	8a 87       	std	Y+10, r24	; 0x0a
    cb28:	8c 85       	ldd	r24, Y+12	; 0x0c
    cb2a:	9d 85       	ldd	r25, Y+13	; 0x0d
    cb2c:	ae 85       	ldd	r26, Y+14	; 0x0e
    cb2e:	bf 85       	ldd	r27, Y+15	; 0x0f
    cb30:	89 83       	std	Y+1, r24	; 0x01
    cb32:	9a 83       	std	Y+2, r25	; 0x02
    cb34:	ab 83       	std	Y+3, r26	; 0x03
    cb36:	bc 83       	std	Y+4, r27	; 0x04
    cb38:	ad cf       	rjmp	.-166    	; 0xca94 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x8e>
    cb3a:	81 e0       	ldi	r24, 0x01	; 1
    cb3c:	89 87       	std	Y+9, r24	; 0x09
    cb3e:	aa cf       	rjmp	.-172    	; 0xca94 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x8e>
    cb40:	8a 85       	ldd	r24, Y+10	; 0x0a
    cb42:	88 23       	and	r24, r24
    cb44:	91 f0       	breq	.+36     	; 0xcb6a <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x164>
    cb46:	29 81       	ldd	r18, Y+1	; 0x01
    cb48:	3a 81       	ldd	r19, Y+2	; 0x02
    cb4a:	4b 81       	ldd	r20, Y+3	; 0x03
    cb4c:	5c 81       	ldd	r21, Y+4	; 0x04
    cb4e:	88 89       	ldd	r24, Y+16	; 0x10
    cb50:	99 89       	ldd	r25, Y+17	; 0x11
    cb52:	aa 89       	ldd	r26, Y+18	; 0x12
    cb54:	bb 89       	ldd	r27, Y+19	; 0x13
    cb56:	bc 01       	movw	r22, r24
    cb58:	cd 01       	movw	r24, r26
    cb5a:	0e 94 9b 74 	call	0xe936	; 0xe936 <__mulsi3>
    cb5e:	dc 01       	movw	r26, r24
    cb60:	cb 01       	movw	r24, r22
    cb62:	8d 83       	std	Y+5, r24	; 0x05
    cb64:	9e 83       	std	Y+6, r25	; 0x06
    cb66:	af 83       	std	Y+7, r26	; 0x07
    cb68:	b8 87       	std	Y+8, r27	; 0x08
    cb6a:	21 e0       	ldi	r18, 0x01	; 1
    cb6c:	89 81       	ldd	r24, Y+1	; 0x01
    cb6e:	9a 81       	ldd	r25, Y+2	; 0x02
    cb70:	ab 81       	ldd	r26, Y+3	; 0x03
    cb72:	bc 81       	ldd	r27, Y+4	; 0x04
    cb74:	04 97       	sbiw	r24, 0x04	; 4
    cb76:	a1 05       	cpc	r26, r1
    cb78:	b1 05       	cpc	r27, r1
    cb7a:	09 f0       	breq	.+2      	; 0xcb7e <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x178>
    cb7c:	20 e0       	ldi	r18, 0x00	; 0
    cb7e:	88 8d       	ldd	r24, Y+24	; 0x18
    cb80:	99 8d       	ldd	r25, Y+25	; 0x19
    cb82:	fc 01       	movw	r30, r24
    cb84:	20 83       	st	Z, r18
    cb86:	89 81       	ldd	r24, Y+1	; 0x01
    cb88:	9a 81       	ldd	r25, Y+2	; 0x02
    cb8a:	ab 81       	ldd	r26, Y+3	; 0x03
    cb8c:	bc 81       	ldd	r27, Y+4	; 0x04
    cb8e:	88 0f       	add	r24, r24
    cb90:	99 1f       	adc	r25, r25
    cb92:	aa 1f       	adc	r26, r26
    cb94:	bb 1f       	adc	r27, r27
    cb96:	88 0f       	add	r24, r24
    cb98:	99 1f       	adc	r25, r25
    cb9a:	aa 1f       	adc	r26, r26
    cb9c:	bb 1f       	adc	r27, r27
    cb9e:	88 0f       	add	r24, r24
    cba0:	99 1f       	adc	r25, r25
    cba2:	aa 1f       	adc	r26, r26
    cba4:	bb 1f       	adc	r27, r27
    cba6:	88 0f       	add	r24, r24
    cba8:	99 1f       	adc	r25, r25
    cbaa:	aa 1f       	adc	r26, r26
    cbac:	bb 1f       	adc	r27, r27
    cbae:	88 0f       	add	r24, r24
    cbb0:	99 1f       	adc	r25, r25
    cbb2:	aa 1f       	adc	r26, r26
    cbb4:	bb 1f       	adc	r27, r27
    cbb6:	88 0f       	add	r24, r24
    cbb8:	99 1f       	adc	r25, r25
    cbba:	aa 1f       	adc	r26, r26
    cbbc:	bb 1f       	adc	r27, r27
    cbbe:	88 0f       	add	r24, r24
    cbc0:	99 1f       	adc	r25, r25
    cbc2:	aa 1f       	adc	r26, r26
    cbc4:	bb 1f       	adc	r27, r27
    cbc6:	92 50       	subi	r25, 0x02	; 2
    cbc8:	a1 09       	sbc	r26, r1
    cbca:	b1 09       	sbc	r27, r1
    cbcc:	2c 89       	ldd	r18, Y+20	; 0x14
    cbce:	3d 89       	ldd	r19, Y+21	; 0x15
    cbd0:	f9 01       	movw	r30, r18
    cbd2:	80 83       	st	Z, r24
    cbd4:	91 83       	std	Z+1, r25	; 0x01
    cbd6:	a2 83       	std	Z+2, r26	; 0x02
    cbd8:	b3 83       	std	Z+3, r27	; 0x03
    cbda:	8c 89       	ldd	r24, Y+20	; 0x14
    cbdc:	9d 89       	ldd	r25, Y+21	; 0x15
    cbde:	fc 01       	movw	r30, r24
    cbe0:	14 82       	std	Z+4, r1	; 0x04
    cbe2:	15 82       	std	Z+5, r1	; 0x05
    cbe4:	16 82       	std	Z+6, r1	; 0x06
    cbe6:	17 82       	std	Z+7, r1	; 0x07
    cbe8:	2c 89       	ldd	r18, Y+20	; 0x14
    cbea:	3d 89       	ldd	r19, Y+21	; 0x15
    cbec:	81 e0       	ldi	r24, 0x01	; 1
    cbee:	90 e0       	ldi	r25, 0x00	; 0
    cbf0:	a0 e0       	ldi	r26, 0x00	; 0
    cbf2:	b0 e0       	ldi	r27, 0x00	; 0
    cbf4:	f9 01       	movw	r30, r18
    cbf6:	80 87       	std	Z+8, r24	; 0x08
    cbf8:	91 87       	std	Z+9, r25	; 0x09
    cbfa:	a2 87       	std	Z+10, r26	; 0x0a
    cbfc:	b3 87       	std	Z+11, r27	; 0x0b
    cbfe:	8d 81       	ldd	r24, Y+5	; 0x05
    cc00:	9e 81       	ldd	r25, Y+6	; 0x06
    cc02:	af 81       	ldd	r26, Y+7	; 0x07
    cc04:	b8 85       	ldd	r27, Y+8	; 0x08
    cc06:	bc 01       	movw	r22, r24
    cc08:	cd 01       	movw	r24, r26
    cc0a:	69 96       	adiw	r28, 0x19	; 25
    cc0c:	cd bf       	out	0x3d, r28	; 61
    cc0e:	de bf       	out	0x3e, r29	; 62
    cc10:	df 91       	pop	r29
    cc12:	cf 91       	pop	r28
    cc14:	1f 91       	pop	r17
    cc16:	0f 91       	pop	r16
    cc18:	08 95       	ret

0000cc1a <_Z19multisynth_estimatemP13u_si5351_regsPbS1_>:
 * Frequency_Hz multisynth_estimate(Frequency_Hz freq_Fout, Union_si5351_regs *reg, bool *int_mode, bool *divBy4)
 *
 * Note: do not call this function with global value freqVCOB == zero
 */
	Frequency_Hz multisynth_estimate(Frequency_Hz freq_Fout, Union_si5351_regs *reg, bool *int_mode, bool *divBy4)
	{
    cc1a:	0f 93       	push	r16
    cc1c:	1f 93       	push	r17
    cc1e:	cf 93       	push	r28
    cc20:	df 93       	push	r29
    cc22:	cd b7       	in	r28, 0x3d	; 61
    cc24:	de b7       	in	r29, 0x3e	; 62
    cc26:	6e 97       	sbiw	r28, 0x1e	; 30
    cc28:	cd bf       	out	0x3d, r28	; 61
    cc2a:	de bf       	out	0x3e, r29	; 62
    cc2c:	6d 8b       	std	Y+21, r22	; 0x15
    cc2e:	7e 8b       	std	Y+22, r23	; 0x16
    cc30:	8f 8b       	std	Y+23, r24	; 0x17
    cc32:	98 8f       	std	Y+24, r25	; 0x18
    cc34:	49 8f       	std	Y+25, r20	; 0x19
    cc36:	5a 8f       	std	Y+26, r21	; 0x1a
    cc38:	2b 8f       	std	Y+27, r18	; 0x1b
    cc3a:	3c 8f       	std	Y+28, r19	; 0x1c
    cc3c:	0d 8f       	std	Y+29, r16	; 0x1d
    cc3e:	1e 8f       	std	Y+30, r17	; 0x1e
				return(0);
			}
#endif  /* DO_BOUNDS_CHECKING */

		/* Determine integer part of feedback equation */
		a = freqVCOB / freq_Fout;
    cc40:	80 91 8e 48 	lds	r24, 0x488E	; 0x80488e <_ZL8freqVCOB>
    cc44:	90 91 8f 48 	lds	r25, 0x488F	; 0x80488f <_ZL8freqVCOB+0x1>
    cc48:	a0 91 90 48 	lds	r26, 0x4890	; 0x804890 <_ZL8freqVCOB+0x2>
    cc4c:	b0 91 91 48 	lds	r27, 0x4891	; 0x804891 <_ZL8freqVCOB+0x3>
    cc50:	2d 89       	ldd	r18, Y+21	; 0x15
    cc52:	3e 89       	ldd	r19, Y+22	; 0x16
    cc54:	4f 89       	ldd	r20, Y+23	; 0x17
    cc56:	58 8d       	ldd	r21, Y+24	; 0x18
    cc58:	bc 01       	movw	r22, r24
    cc5a:	cd 01       	movw	r24, r26
    cc5c:	0e 94 d3 74 	call	0xe9a6	; 0xe9a6 <__udivmodsi4>
    cc60:	da 01       	movw	r26, r20
    cc62:	c9 01       	movw	r24, r18
    cc64:	89 83       	std	Y+1, r24	; 0x01
    cc66:	9a 83       	std	Y+2, r25	; 0x02
    cc68:	ab 83       	std	Y+3, r26	; 0x03
    cc6a:	bc 83       	std	Y+4, r27	; 0x04
		b = freqVCOB % freq_Fout;
    cc6c:	80 91 8e 48 	lds	r24, 0x488E	; 0x80488e <_ZL8freqVCOB>
    cc70:	90 91 8f 48 	lds	r25, 0x488F	; 0x80488f <_ZL8freqVCOB+0x1>
    cc74:	a0 91 90 48 	lds	r26, 0x4890	; 0x804890 <_ZL8freqVCOB+0x2>
    cc78:	b0 91 91 48 	lds	r27, 0x4891	; 0x804891 <_ZL8freqVCOB+0x3>
    cc7c:	2d 89       	ldd	r18, Y+21	; 0x15
    cc7e:	3e 89       	ldd	r19, Y+22	; 0x16
    cc80:	4f 89       	ldd	r20, Y+23	; 0x17
    cc82:	58 8d       	ldd	r21, Y+24	; 0x18
    cc84:	bc 01       	movw	r22, r24
    cc86:	cd 01       	movw	r24, r26
    cc88:	0e 94 d3 74 	call	0xe9a6	; 0xe9a6 <__udivmodsi4>
    cc8c:	dc 01       	movw	r26, r24
    cc8e:	cb 01       	movw	r24, r22
    cc90:	8d 87       	std	Y+13, r24	; 0x0d
    cc92:	9e 87       	std	Y+14, r25	; 0x0e
    cc94:	af 87       	std	Y+15, r26	; 0x0f
    cc96:	b8 8b       	std	Y+16, r27	; 0x10
		c = freq_Fout;
    cc98:	8d 89       	ldd	r24, Y+21	; 0x15
    cc9a:	9e 89       	ldd	r25, Y+22	; 0x16
    cc9c:	af 89       	ldd	r26, Y+23	; 0x17
    cc9e:	b8 8d       	ldd	r27, Y+24	; 0x18
    cca0:	89 8b       	std	Y+17, r24	; 0x11
    cca2:	9a 8b       	std	Y+18, r25	; 0x12
    cca4:	ab 8b       	std	Y+19, r26	; 0x13
    cca6:	bc 8b       	std	Y+20, r27	; 0x14
		reduce_by_gcd(&b, &c);  /* prevents overflow conditions and makes results agree with ClockBuilder */
    cca8:	9e 01       	movw	r18, r28
    ccaa:	2f 5e       	subi	r18, 0xEF	; 239
    ccac:	3f 4f       	sbci	r19, 0xFF	; 255
    ccae:	ce 01       	movw	r24, r28
    ccb0:	0d 96       	adiw	r24, 0x0d	; 13
    ccb2:	b9 01       	movw	r22, r18
    ccb4:	0e 94 50 64 	call	0xc8a0	; 0xc8a0 <_Z13reduce_by_gcdPmS_>

		/* Calculate the approximated output frequency given by fOUT = fvco / (a + b/c) */
		freq_Fout = freqVCOB;
    ccb8:	80 91 8e 48 	lds	r24, 0x488E	; 0x80488e <_ZL8freqVCOB>
    ccbc:	90 91 8f 48 	lds	r25, 0x488F	; 0x80488f <_ZL8freqVCOB+0x1>
    ccc0:	a0 91 90 48 	lds	r26, 0x4890	; 0x804890 <_ZL8freqVCOB+0x2>
    ccc4:	b0 91 91 48 	lds	r27, 0x4891	; 0x804891 <_ZL8freqVCOB+0x3>
    ccc8:	8d 8b       	std	Y+21, r24	; 0x15
    ccca:	9e 8b       	std	Y+22, r25	; 0x16
    cccc:	af 8b       	std	Y+23, r26	; 0x17
    ccce:	b8 8f       	std	Y+24, r27	; 0x18
		freq_Fout /= (a * c + b);
    ccd0:	29 89       	ldd	r18, Y+17	; 0x11
    ccd2:	3a 89       	ldd	r19, Y+18	; 0x12
    ccd4:	4b 89       	ldd	r20, Y+19	; 0x13
    ccd6:	5c 89       	ldd	r21, Y+20	; 0x14
    ccd8:	89 81       	ldd	r24, Y+1	; 0x01
    ccda:	9a 81       	ldd	r25, Y+2	; 0x02
    ccdc:	ab 81       	ldd	r26, Y+3	; 0x03
    ccde:	bc 81       	ldd	r27, Y+4	; 0x04
    cce0:	bc 01       	movw	r22, r24
    cce2:	cd 01       	movw	r24, r26
    cce4:	0e 94 9b 74 	call	0xe936	; 0xe936 <__mulsi3>
    cce8:	9b 01       	movw	r18, r22
    ccea:	ac 01       	movw	r20, r24
    ccec:	8d 85       	ldd	r24, Y+13	; 0x0d
    ccee:	9e 85       	ldd	r25, Y+14	; 0x0e
    ccf0:	af 85       	ldd	r26, Y+15	; 0x0f
    ccf2:	b8 89       	ldd	r27, Y+16	; 0x10
    ccf4:	28 0f       	add	r18, r24
    ccf6:	39 1f       	adc	r19, r25
    ccf8:	4a 1f       	adc	r20, r26
    ccfa:	5b 1f       	adc	r21, r27
    ccfc:	8d 89       	ldd	r24, Y+21	; 0x15
    ccfe:	9e 89       	ldd	r25, Y+22	; 0x16
    cd00:	af 89       	ldd	r26, Y+23	; 0x17
    cd02:	b8 8d       	ldd	r27, Y+24	; 0x18
    cd04:	bc 01       	movw	r22, r24
    cd06:	cd 01       	movw	r24, r26
    cd08:	0e 94 d3 74 	call	0xe9a6	; 0xe9a6 <__udivmodsi4>
    cd0c:	da 01       	movw	r26, r20
    cd0e:	c9 01       	movw	r24, r18
    cd10:	8d 8b       	std	Y+21, r24	; 0x15
    cd12:	9e 8b       	std	Y+22, r25	; 0x16
    cd14:	af 8b       	std	Y+23, r26	; 0x17
    cd16:	b8 8f       	std	Y+24, r27	; 0x18
		freq_Fout *= c;
    cd18:	89 89       	ldd	r24, Y+17	; 0x11
    cd1a:	9a 89       	ldd	r25, Y+18	; 0x12
    cd1c:	ab 89       	ldd	r26, Y+19	; 0x13
    cd1e:	bc 89       	ldd	r27, Y+20	; 0x14
    cd20:	2d 89       	ldd	r18, Y+21	; 0x15
    cd22:	3e 89       	ldd	r19, Y+22	; 0x16
    cd24:	4f 89       	ldd	r20, Y+23	; 0x17
    cd26:	58 8d       	ldd	r21, Y+24	; 0x18
    cd28:	bc 01       	movw	r22, r24
    cd2a:	cd 01       	movw	r24, r26
    cd2c:	0e 94 9b 74 	call	0xe936	; 0xe936 <__mulsi3>
    cd30:	dc 01       	movw	r26, r24
    cd32:	cb 01       	movw	r24, r22
    cd34:	8d 8b       	std	Y+21, r24	; 0x15
    cd36:	9e 8b       	std	Y+22, r25	; 0x16
    cd38:	af 8b       	std	Y+23, r26	; 0x17
    cd3a:	b8 8f       	std	Y+24, r27	; 0x18

		*int_mode = (b == 0) && !(a % 2);
    cd3c:	8d 85       	ldd	r24, Y+13	; 0x0d
    cd3e:	9e 85       	ldd	r25, Y+14	; 0x0e
    cd40:	af 85       	ldd	r26, Y+15	; 0x0f
    cd42:	b8 89       	ldd	r27, Y+16	; 0x10
    cd44:	89 2b       	or	r24, r25
    cd46:	8a 2b       	or	r24, r26
    cd48:	8b 2b       	or	r24, r27
    cd4a:	71 f4       	brne	.+28     	; 0xcd68 <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x14e>
    cd4c:	89 81       	ldd	r24, Y+1	; 0x01
    cd4e:	9a 81       	ldd	r25, Y+2	; 0x02
    cd50:	ab 81       	ldd	r26, Y+3	; 0x03
    cd52:	bc 81       	ldd	r27, Y+4	; 0x04
    cd54:	81 70       	andi	r24, 0x01	; 1
    cd56:	99 27       	eor	r25, r25
    cd58:	aa 27       	eor	r26, r26
    cd5a:	bb 27       	eor	r27, r27
    cd5c:	89 2b       	or	r24, r25
    cd5e:	8a 2b       	or	r24, r26
    cd60:	8b 2b       	or	r24, r27
    cd62:	11 f4       	brne	.+4      	; 0xcd68 <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x14e>
    cd64:	21 e0       	ldi	r18, 0x01	; 1
    cd66:	01 c0       	rjmp	.+2      	; 0xcd6a <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x150>
    cd68:	20 e0       	ldi	r18, 0x00	; 0
    cd6a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    cd6c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    cd6e:	fc 01       	movw	r30, r24
    cd70:	20 83       	st	Z, r18
		*divBy4 = (a == 4) && *int_mode;
    cd72:	89 81       	ldd	r24, Y+1	; 0x01
    cd74:	9a 81       	ldd	r25, Y+2	; 0x02
    cd76:	ab 81       	ldd	r26, Y+3	; 0x03
    cd78:	bc 81       	ldd	r27, Y+4	; 0x04
    cd7a:	04 97       	sbiw	r24, 0x04	; 4
    cd7c:	a1 05       	cpc	r26, r1
    cd7e:	b1 05       	cpc	r27, r1
    cd80:	41 f4       	brne	.+16     	; 0xcd92 <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x178>
    cd82:	8b 8d       	ldd	r24, Y+27	; 0x1b
    cd84:	9c 8d       	ldd	r25, Y+28	; 0x1c
    cd86:	fc 01       	movw	r30, r24
    cd88:	80 81       	ld	r24, Z
    cd8a:	88 23       	and	r24, r24
    cd8c:	11 f0       	breq	.+4      	; 0xcd92 <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x178>
    cd8e:	21 e0       	ldi	r18, 0x01	; 1
    cd90:	01 c0       	rjmp	.+2      	; 0xcd94 <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x17a>
    cd92:	20 e0       	ldi	r18, 0x00	; 0
    cd94:	8d 8d       	ldd	r24, Y+29	; 0x1d
    cd96:	9e 8d       	ldd	r25, Y+30	; 0x1e
    cd98:	fc 01       	movw	r30, r24
    cd9a:	20 83       	st	Z, r18

		/* Calculate parameters */
		if(*divBy4)
    cd9c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    cd9e:	9e 8d       	ldd	r25, Y+30	; 0x1e
    cda0:	fc 01       	movw	r30, r24
    cda2:	80 81       	ld	r24, Z
    cda4:	88 23       	and	r24, r24
    cda6:	d1 f0       	breq	.+52     	; 0xcddc <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x1c2>
		{
			reg->ms.p1 = 0;
    cda8:	89 8d       	ldd	r24, Y+25	; 0x19
    cdaa:	9a 8d       	ldd	r25, Y+26	; 0x1a
    cdac:	fc 01       	movw	r30, r24
    cdae:	10 82       	st	Z, r1
    cdb0:	11 82       	std	Z+1, r1	; 0x01
    cdb2:	12 82       	std	Z+2, r1	; 0x02
    cdb4:	13 82       	std	Z+3, r1	; 0x03
			reg->ms.p2 = 0;
    cdb6:	89 8d       	ldd	r24, Y+25	; 0x19
    cdb8:	9a 8d       	ldd	r25, Y+26	; 0x1a
    cdba:	fc 01       	movw	r30, r24
    cdbc:	14 82       	std	Z+4, r1	; 0x04
    cdbe:	15 82       	std	Z+5, r1	; 0x05
    cdc0:	16 82       	std	Z+6, r1	; 0x06
    cdc2:	17 82       	std	Z+7, r1	; 0x07
			reg->ms.p3 = 1;
    cdc4:	29 8d       	ldd	r18, Y+25	; 0x19
    cdc6:	3a 8d       	ldd	r19, Y+26	; 0x1a
    cdc8:	81 e0       	ldi	r24, 0x01	; 1
    cdca:	90 e0       	ldi	r25, 0x00	; 0
    cdcc:	a0 e0       	ldi	r26, 0x00	; 0
    cdce:	b0 e0       	ldi	r27, 0x00	; 0
    cdd0:	f9 01       	movw	r30, r18
    cdd2:	80 87       	std	Z+8, r24	; 0x08
    cdd4:	91 87       	std	Z+9, r25	; 0x09
    cdd6:	a2 87       	std	Z+10, r26	; 0x0a
    cdd8:	b3 87       	std	Z+11, r27	; 0x0b
    cdda:	92 c0       	rjmp	.+292    	; 0xcf00 <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x2e6>
		}
		else
		{
			uint32_t bx128 = b << 7;
    cddc:	8d 85       	ldd	r24, Y+13	; 0x0d
    cdde:	9e 85       	ldd	r25, Y+14	; 0x0e
    cde0:	af 85       	ldd	r26, Y+15	; 0x0f
    cde2:	b8 89       	ldd	r27, Y+16	; 0x10
    cde4:	88 0f       	add	r24, r24
    cde6:	99 1f       	adc	r25, r25
    cde8:	aa 1f       	adc	r26, r26
    cdea:	bb 1f       	adc	r27, r27
    cdec:	88 0f       	add	r24, r24
    cdee:	99 1f       	adc	r25, r25
    cdf0:	aa 1f       	adc	r26, r26
    cdf2:	bb 1f       	adc	r27, r27
    cdf4:	88 0f       	add	r24, r24
    cdf6:	99 1f       	adc	r25, r25
    cdf8:	aa 1f       	adc	r26, r26
    cdfa:	bb 1f       	adc	r27, r27
    cdfc:	88 0f       	add	r24, r24
    cdfe:	99 1f       	adc	r25, r25
    ce00:	aa 1f       	adc	r26, r26
    ce02:	bb 1f       	adc	r27, r27
    ce04:	88 0f       	add	r24, r24
    ce06:	99 1f       	adc	r25, r25
    ce08:	aa 1f       	adc	r26, r26
    ce0a:	bb 1f       	adc	r27, r27
    ce0c:	88 0f       	add	r24, r24
    ce0e:	99 1f       	adc	r25, r25
    ce10:	aa 1f       	adc	r26, r26
    ce12:	bb 1f       	adc	r27, r27
    ce14:	88 0f       	add	r24, r24
    ce16:	99 1f       	adc	r25, r25
    ce18:	aa 1f       	adc	r26, r26
    ce1a:	bb 1f       	adc	r27, r27
    ce1c:	8d 83       	std	Y+5, r24	; 0x05
    ce1e:	9e 83       	std	Y+6, r25	; 0x06
    ce20:	af 83       	std	Y+7, r26	; 0x07
    ce22:	b8 87       	std	Y+8, r27	; 0x08
			uint32_t bx128overc = bx128 / c;
    ce24:	29 89       	ldd	r18, Y+17	; 0x11
    ce26:	3a 89       	ldd	r19, Y+18	; 0x12
    ce28:	4b 89       	ldd	r20, Y+19	; 0x13
    ce2a:	5c 89       	ldd	r21, Y+20	; 0x14
    ce2c:	8d 81       	ldd	r24, Y+5	; 0x05
    ce2e:	9e 81       	ldd	r25, Y+6	; 0x06
    ce30:	af 81       	ldd	r26, Y+7	; 0x07
    ce32:	b8 85       	ldd	r27, Y+8	; 0x08
    ce34:	bc 01       	movw	r22, r24
    ce36:	cd 01       	movw	r24, r26
    ce38:	0e 94 d3 74 	call	0xe9a6	; 0xe9a6 <__udivmodsi4>
    ce3c:	da 01       	movw	r26, r20
    ce3e:	c9 01       	movw	r24, r18
    ce40:	89 87       	std	Y+9, r24	; 0x09
    ce42:	9a 87       	std	Y+10, r25	; 0x0a
    ce44:	ab 87       	std	Y+11, r26	; 0x0b
    ce46:	bc 87       	std	Y+12, r27	; 0x0c
			reg->ms.p1 = (uint32_t)((a << 7) + bx128overc) - 512;   /* 128 * a + floor((128 * b) / c) - 512 */
    ce48:	89 81       	ldd	r24, Y+1	; 0x01
    ce4a:	9a 81       	ldd	r25, Y+2	; 0x02
    ce4c:	ab 81       	ldd	r26, Y+3	; 0x03
    ce4e:	bc 81       	ldd	r27, Y+4	; 0x04
    ce50:	88 0f       	add	r24, r24
    ce52:	99 1f       	adc	r25, r25
    ce54:	aa 1f       	adc	r26, r26
    ce56:	bb 1f       	adc	r27, r27
    ce58:	88 0f       	add	r24, r24
    ce5a:	99 1f       	adc	r25, r25
    ce5c:	aa 1f       	adc	r26, r26
    ce5e:	bb 1f       	adc	r27, r27
    ce60:	88 0f       	add	r24, r24
    ce62:	99 1f       	adc	r25, r25
    ce64:	aa 1f       	adc	r26, r26
    ce66:	bb 1f       	adc	r27, r27
    ce68:	88 0f       	add	r24, r24
    ce6a:	99 1f       	adc	r25, r25
    ce6c:	aa 1f       	adc	r26, r26
    ce6e:	bb 1f       	adc	r27, r27
    ce70:	88 0f       	add	r24, r24
    ce72:	99 1f       	adc	r25, r25
    ce74:	aa 1f       	adc	r26, r26
    ce76:	bb 1f       	adc	r27, r27
    ce78:	88 0f       	add	r24, r24
    ce7a:	99 1f       	adc	r25, r25
    ce7c:	aa 1f       	adc	r26, r26
    ce7e:	bb 1f       	adc	r27, r27
    ce80:	88 0f       	add	r24, r24
    ce82:	99 1f       	adc	r25, r25
    ce84:	aa 1f       	adc	r26, r26
    ce86:	bb 1f       	adc	r27, r27
    ce88:	9c 01       	movw	r18, r24
    ce8a:	ad 01       	movw	r20, r26
    ce8c:	89 85       	ldd	r24, Y+9	; 0x09
    ce8e:	9a 85       	ldd	r25, Y+10	; 0x0a
    ce90:	ab 85       	ldd	r26, Y+11	; 0x0b
    ce92:	bc 85       	ldd	r27, Y+12	; 0x0c
    ce94:	82 0f       	add	r24, r18
    ce96:	93 1f       	adc	r25, r19
    ce98:	a4 1f       	adc	r26, r20
    ce9a:	b5 1f       	adc	r27, r21
    ce9c:	92 50       	subi	r25, 0x02	; 2
    ce9e:	a1 09       	sbc	r26, r1
    cea0:	b1 09       	sbc	r27, r1
    cea2:	29 8d       	ldd	r18, Y+25	; 0x19
    cea4:	3a 8d       	ldd	r19, Y+26	; 0x1a
    cea6:	f9 01       	movw	r30, r18
    cea8:	80 83       	st	Z, r24
    ceaa:	91 83       	std	Z+1, r25	; 0x01
    ceac:	a2 83       	std	Z+2, r26	; 0x02
    ceae:	b3 83       	std	Z+3, r27	; 0x03
			reg->ms.p2 = (uint32_t)bx128 - (c * bx128overc);        /* 128 * b - c * floor((128 * b) / c) */
    ceb0:	29 89       	ldd	r18, Y+17	; 0x11
    ceb2:	3a 89       	ldd	r19, Y+18	; 0x12
    ceb4:	4b 89       	ldd	r20, Y+19	; 0x13
    ceb6:	5c 89       	ldd	r21, Y+20	; 0x14
    ceb8:	89 85       	ldd	r24, Y+9	; 0x09
    ceba:	9a 85       	ldd	r25, Y+10	; 0x0a
    cebc:	ab 85       	ldd	r26, Y+11	; 0x0b
    cebe:	bc 85       	ldd	r27, Y+12	; 0x0c
    cec0:	bc 01       	movw	r22, r24
    cec2:	cd 01       	movw	r24, r26
    cec4:	0e 94 9b 74 	call	0xe936	; 0xe936 <__mulsi3>
    cec8:	9b 01       	movw	r18, r22
    ceca:	ac 01       	movw	r20, r24
    cecc:	8d 81       	ldd	r24, Y+5	; 0x05
    cece:	9e 81       	ldd	r25, Y+6	; 0x06
    ced0:	af 81       	ldd	r26, Y+7	; 0x07
    ced2:	b8 85       	ldd	r27, Y+8	; 0x08
    ced4:	82 1b       	sub	r24, r18
    ced6:	93 0b       	sbc	r25, r19
    ced8:	a4 0b       	sbc	r26, r20
    ceda:	b5 0b       	sbc	r27, r21
    cedc:	29 8d       	ldd	r18, Y+25	; 0x19
    cede:	3a 8d       	ldd	r19, Y+26	; 0x1a
    cee0:	f9 01       	movw	r30, r18
    cee2:	84 83       	std	Z+4, r24	; 0x04
    cee4:	95 83       	std	Z+5, r25	; 0x05
    cee6:	a6 83       	std	Z+6, r26	; 0x06
    cee8:	b7 83       	std	Z+7, r27	; 0x07
			reg->ms.p3 = c;
    ceea:	89 89       	ldd	r24, Y+17	; 0x11
    ceec:	9a 89       	ldd	r25, Y+18	; 0x12
    ceee:	ab 89       	ldd	r26, Y+19	; 0x13
    cef0:	bc 89       	ldd	r27, Y+20	; 0x14
    cef2:	29 8d       	ldd	r18, Y+25	; 0x19
    cef4:	3a 8d       	ldd	r19, Y+26	; 0x1a
    cef6:	f9 01       	movw	r30, r18
    cef8:	80 87       	std	Z+8, r24	; 0x08
    cefa:	91 87       	std	Z+9, r25	; 0x09
    cefc:	a2 87       	std	Z+10, r26	; 0x0a
    cefe:	b3 87       	std	Z+11, r27	; 0x0b
		}

		return(freq_Fout);
    cf00:	8d 89       	ldd	r24, Y+21	; 0x15
    cf02:	9e 89       	ldd	r25, Y+22	; 0x16
    cf04:	af 89       	ldd	r26, Y+23	; 0x17
    cf06:	b8 8d       	ldd	r27, Y+24	; 0x18
	}
    cf08:	bc 01       	movw	r22, r24
    cf0a:	cd 01       	movw	r24, r26
    cf0c:	6e 96       	adiw	r28, 0x1e	; 30
    cf0e:	cd bf       	out	0x3d, r28	; 61
    cf10:	de bf       	out	0x3e, r29	; 62
    cf12:	df 91       	pop	r29
    cf14:	cf 91       	pop	r28
    cf16:	1f 91       	pop	r17
    cf18:	0f 91       	pop	r16
    cf1a:	08 95       	ret

0000cf1c <_Z17si5351_write_bulkhPhh>:


	bool si5351_write_bulk(uint8_t regAddr, uint8_t *data, uint8_t bytes)
	{
    cf1c:	cf 93       	push	r28
    cf1e:	df 93       	push	r29
    cf20:	cd b7       	in	r28, 0x3d	; 61
    cf22:	de b7       	in	r29, 0x3e	; 62
    cf24:	26 97       	sbiw	r28, 0x06	; 6
    cf26:	cd bf       	out	0x3d, r28	; 61
    cf28:	de bf       	out	0x3e, r29	; 62
    cf2a:	8b 83       	std	Y+3, r24	; 0x03
    cf2c:	6c 83       	std	Y+4, r22	; 0x04
    cf2e:	7d 83       	std	Y+5, r23	; 0x05
    cf30:	4e 83       	std	Y+6, r20	; 0x06
		uint8_t tries = 5;
    cf32:	85 e0       	ldi	r24, 0x05	; 5
    cf34:	89 83       	std	Y+1, r24	; 0x01
		bool fail;
		while(tries-- && (fail = I2C_1_SendData(SI5351_I2C_SLAVE_ADDR, regAddr, data, bytes) != bytes));
    cf36:	89 81       	ldd	r24, Y+1	; 0x01
    cf38:	9f ef       	ldi	r25, 0xFF	; 255
    cf3a:	98 0f       	add	r25, r24
    cf3c:	99 83       	std	Y+1, r25	; 0x01
    cf3e:	88 23       	and	r24, r24
    cf40:	a1 f0       	breq	.+40     	; 0xcf6a <_Z17si5351_write_bulkhPhh+0x4e>
    cf42:	8c 81       	ldd	r24, Y+4	; 0x04
    cf44:	9d 81       	ldd	r25, Y+5	; 0x05
    cf46:	2e 81       	ldd	r18, Y+6	; 0x06
    cf48:	ac 01       	movw	r20, r24
    cf4a:	6b 81       	ldd	r22, Y+3	; 0x03
    cf4c:	80 ec       	ldi	r24, 0xC0	; 192
    cf4e:	0e 94 67 4b 	call	0x96ce	; 0x96ce <I2C_1_SendData>
    cf52:	28 2f       	mov	r18, r24
    cf54:	81 e0       	ldi	r24, 0x01	; 1
    cf56:	9e 81       	ldd	r25, Y+6	; 0x06
    cf58:	29 17       	cp	r18, r25
    cf5a:	09 f4       	brne	.+2      	; 0xcf5e <_Z17si5351_write_bulkhPhh+0x42>
    cf5c:	80 e0       	ldi	r24, 0x00	; 0
    cf5e:	8a 83       	std	Y+2, r24	; 0x02
    cf60:	8a 81       	ldd	r24, Y+2	; 0x02
    cf62:	88 23       	and	r24, r24
    cf64:	11 f0       	breq	.+4      	; 0xcf6a <_Z17si5351_write_bulkhPhh+0x4e>
    cf66:	81 e0       	ldi	r24, 0x01	; 1
    cf68:	01 c0       	rjmp	.+2      	; 0xcf6c <_Z17si5351_write_bulkhPhh+0x50>
    cf6a:	80 e0       	ldi	r24, 0x00	; 0
    cf6c:	88 23       	and	r24, r24
    cf6e:	09 f0       	breq	.+2      	; 0xcf72 <_Z17si5351_write_bulkhPhh+0x56>
    cf70:	e2 cf       	rjmp	.-60     	; 0xcf36 <_Z17si5351_write_bulkhPhh+0x1a>
		return(fail);
    cf72:	8a 81       	ldd	r24, Y+2	; 0x02
	}
    cf74:	26 96       	adiw	r28, 0x06	; 6
    cf76:	cd bf       	out	0x3d, r28	; 61
    cf78:	de bf       	out	0x3e, r29	; 62
    cf7a:	df 91       	pop	r29
    cf7c:	cf 91       	pop	r28
    cf7e:	08 95       	ret

0000cf80 <_Z16si5351_read_bulkhPhh>:

	bool si5351_read_bulk(uint8_t regAddr, uint8_t *data, uint8_t bytes)
	{
    cf80:	cf 93       	push	r28
    cf82:	df 93       	push	r29
    cf84:	cd b7       	in	r28, 0x3d	; 61
    cf86:	de b7       	in	r29, 0x3e	; 62
    cf88:	26 97       	sbiw	r28, 0x06	; 6
    cf8a:	cd bf       	out	0x3d, r28	; 61
    cf8c:	de bf       	out	0x3e, r29	; 62
    cf8e:	8b 83       	std	Y+3, r24	; 0x03
    cf90:	6c 83       	std	Y+4, r22	; 0x04
    cf92:	7d 83       	std	Y+5, r23	; 0x05
    cf94:	4e 83       	std	Y+6, r20	; 0x06
		uint8_t tries = 5;
    cf96:	85 e0       	ldi	r24, 0x05	; 5
    cf98:	89 83       	std	Y+1, r24	; 0x01
		bool fail;
		while(tries-- && (fail = I2C_1_GetData(SI5351_I2C_SLAVE_ADDR, regAddr, data, bytes) != bytes));
    cf9a:	89 81       	ldd	r24, Y+1	; 0x01
    cf9c:	9f ef       	ldi	r25, 0xFF	; 255
    cf9e:	98 0f       	add	r25, r24
    cfa0:	99 83       	std	Y+1, r25	; 0x01
    cfa2:	88 23       	and	r24, r24
    cfa4:	a1 f0       	breq	.+40     	; 0xcfce <_Z16si5351_read_bulkhPhh+0x4e>
    cfa6:	8c 81       	ldd	r24, Y+4	; 0x04
    cfa8:	9d 81       	ldd	r25, Y+5	; 0x05
    cfaa:	2e 81       	ldd	r18, Y+6	; 0x06
    cfac:	ac 01       	movw	r20, r24
    cfae:	6b 81       	ldd	r22, Y+3	; 0x03
    cfb0:	80 ec       	ldi	r24, 0xC0	; 192
    cfb2:	0e 94 d0 4b 	call	0x97a0	; 0x97a0 <I2C_1_GetData>
    cfb6:	28 2f       	mov	r18, r24
    cfb8:	81 e0       	ldi	r24, 0x01	; 1
    cfba:	9e 81       	ldd	r25, Y+6	; 0x06
    cfbc:	29 17       	cp	r18, r25
    cfbe:	09 f4       	brne	.+2      	; 0xcfc2 <_Z16si5351_read_bulkhPhh+0x42>
    cfc0:	80 e0       	ldi	r24, 0x00	; 0
    cfc2:	8a 83       	std	Y+2, r24	; 0x02
    cfc4:	8a 81       	ldd	r24, Y+2	; 0x02
    cfc6:	88 23       	and	r24, r24
    cfc8:	11 f0       	breq	.+4      	; 0xcfce <_Z16si5351_read_bulkhPhh+0x4e>
    cfca:	81 e0       	ldi	r24, 0x01	; 1
    cfcc:	01 c0       	rjmp	.+2      	; 0xcfd0 <_Z16si5351_read_bulkhPhh+0x50>
    cfce:	80 e0       	ldi	r24, 0x00	; 0
    cfd0:	88 23       	and	r24, r24
    cfd2:	09 f0       	breq	.+2      	; 0xcfd6 <_Z16si5351_read_bulkhPhh+0x56>
    cfd4:	e2 cf       	rjmp	.-60     	; 0xcf9a <_Z16si5351_read_bulkhPhh+0x1a>
		return(fail);
    cfd6:	8a 81       	ldd	r24, Y+2	; 0x02
	}
    cfd8:	26 96       	adiw	r28, 0x06	; 6
    cfda:	cd bf       	out	0x3d, r28	; 61
    cfdc:	de bf       	out	0x3e, r29	; 62
    cfde:	df 91       	pop	r29
    cfe0:	cf 91       	pop	r28
    cfe2:	08 95       	ret

0000cfe4 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll>:
 *
 * Set the desired PLL source for a multisynth.
 *
 */
	bool set_multisynth_registers_source(Si5351_clock clk, Si5351_pll pll)
	{
    cfe4:	cf 93       	push	r28
    cfe6:	df 93       	push	r29
    cfe8:	cd b7       	in	r28, 0x3d	; 61
    cfea:	de b7       	in	r29, 0x3e	; 62
    cfec:	25 97       	sbiw	r28, 0x05	; 5
    cfee:	cd bf       	out	0x3d, r28	; 61
    cff0:	de bf       	out	0x3e, r29	; 62
    cff2:	8c 83       	std	Y+4, r24	; 0x04
    cff4:	6d 83       	std	Y+5, r22	; 0x05
		uint8_t reg_val;
		uint8_t data[2];
		
		if(si5351_read_bulk(SI5351_CLK0_CTRL + (uint8_t)clk, data, 1))
    cff6:	8c 81       	ldd	r24, Y+4	; 0x04
    cff8:	20 e1       	ldi	r18, 0x10	; 16
    cffa:	28 0f       	add	r18, r24
    cffc:	ce 01       	movw	r24, r28
    cffe:	02 96       	adiw	r24, 0x02	; 2
    d000:	41 e0       	ldi	r20, 0x01	; 1
    d002:	bc 01       	movw	r22, r24
    d004:	82 2f       	mov	r24, r18
    d006:	0e 94 c0 67 	call	0xcf80	; 0xcf80 <_Z16si5351_read_bulkhPhh>
    d00a:	88 23       	and	r24, r24
    d00c:	11 f0       	breq	.+4      	; 0xd012 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x2e>
		{
			return(true);
    d00e:	81 e0       	ldi	r24, 0x01	; 1
    d010:	20 c0       	rjmp	.+64     	; 0xd052 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x6e>
		}
		
		reg_val = data[0];
    d012:	8a 81       	ldd	r24, Y+2	; 0x02
    d014:	89 83       	std	Y+1, r24	; 0x01

		if(pll == SI5351_PLLA)
    d016:	8d 81       	ldd	r24, Y+5	; 0x05
    d018:	81 30       	cpi	r24, 0x01	; 1
    d01a:	21 f4       	brne	.+8      	; 0xd024 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x40>
		{
			reg_val &= ~(SI5351_CLK_PLL_SELECT);
    d01c:	89 81       	ldd	r24, Y+1	; 0x01
    d01e:	8f 7d       	andi	r24, 0xDF	; 223
    d020:	89 83       	std	Y+1, r24	; 0x01
    d022:	06 c0       	rjmp	.+12     	; 0xd030 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x4c>
		}
		else if(pll == SI5351_PLLB)
    d024:	8d 81       	ldd	r24, Y+5	; 0x05
    d026:	82 30       	cpi	r24, 0x02	; 2
    d028:	19 f4       	brne	.+6      	; 0xd030 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x4c>
		{
			reg_val |= SI5351_CLK_PLL_SELECT;
    d02a:	89 81       	ldd	r24, Y+1	; 0x01
    d02c:	80 62       	ori	r24, 0x20	; 32
    d02e:	89 83       	std	Y+1, r24	; 0x01
		}

		data[0] = reg_val;
    d030:	89 81       	ldd	r24, Y+1	; 0x01
    d032:	8a 83       	std	Y+2, r24	; 0x02
		if(si5351_write_bulk(SI5351_CLK0_CTRL + (uint8_t)clk, data, 1))
    d034:	8c 81       	ldd	r24, Y+4	; 0x04
    d036:	20 e1       	ldi	r18, 0x10	; 16
    d038:	28 0f       	add	r18, r24
    d03a:	ce 01       	movw	r24, r28
    d03c:	02 96       	adiw	r24, 0x02	; 2
    d03e:	41 e0       	ldi	r20, 0x01	; 1
    d040:	bc 01       	movw	r22, r24
    d042:	82 2f       	mov	r24, r18
    d044:	0e 94 8e 67 	call	0xcf1c	; 0xcf1c <_Z17si5351_write_bulkhPhh>
    d048:	88 23       	and	r24, r24
    d04a:	11 f0       	breq	.+4      	; 0xd050 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x6c>
		{
			return(true);
    d04c:	81 e0       	ldi	r24, 0x01	; 1
    d04e:	01 c0       	rjmp	.+2      	; 0xd052 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x6e>
		}
		
		return(false);
    d050:	80 e0       	ldi	r24, 0x00	; 0
	}
    d052:	25 96       	adiw	r28, 0x05	; 5
    d054:	cd bf       	out	0x3d, r28	; 61
    d056:	de bf       	out	0x3e, r29	; 62
    d058:	df 91       	pop	r29
    d05a:	cf 91       	pop	r28
    d05c:	08 95       	ret

0000d05e <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb>:
 * r_div - Desired r_div ratio
 * div_by_4 - 1 Divide By 4 mode: 0 to disable
 *
 */
	bool set_multisynth_registers(Si5351_clock clk, Union_si5351_regs ms_reg, bool int_mode, uint8_t r_div, bool div_by_4)
	{
    d05e:	8f 92       	push	r8
    d060:	af 92       	push	r10
    d062:	cf 92       	push	r12
    d064:	df 92       	push	r13
    d066:	ef 92       	push	r14
    d068:	ff 92       	push	r15
    d06a:	0f 93       	push	r16
    d06c:	1f 93       	push	r17
    d06e:	cf 93       	push	r28
    d070:	df 93       	push	r29
    d072:	cd b7       	in	r28, 0x3d	; 61
    d074:	de b7       	in	r29, 0x3e	; 62
    d076:	6e 97       	sbiw	r28, 0x1e	; 30
    d078:	cd bf       	out	0x3d, r28	; 61
    d07a:	de bf       	out	0x3e, r29	; 62
    d07c:	88 8b       	std	Y+16, r24	; 0x10
    d07e:	c9 8a       	std	Y+17, r12	; 0x11
    d080:	da 8a       	std	Y+18, r13	; 0x12
    d082:	eb 8a       	std	Y+19, r14	; 0x13
    d084:	fc 8a       	std	Y+20, r15	; 0x14
    d086:	0d 8b       	std	Y+21, r16	; 0x15
    d088:	1e 8b       	std	Y+22, r17	; 0x16
    d08a:	2f 8b       	std	Y+23, r18	; 0x17
    d08c:	38 8f       	std	Y+24, r19	; 0x18
    d08e:	49 8f       	std	Y+25, r20	; 0x19
    d090:	5a 8f       	std	Y+26, r21	; 0x1a
    d092:	6b 8f       	std	Y+27, r22	; 0x1b
    d094:	7c 8f       	std	Y+28, r23	; 0x1c
    d096:	ad 8e       	std	Y+29, r10	; 0x1d
    d098:	8e 8e       	std	Y+30, r8	; 0x1e
		uint8_t params[11];
		uint8_t i = 0;
    d09a:	19 82       	std	Y+1, r1	; 0x01
		uint8_t reg_val;
		uint8_t data[2];

		/* Registers 42-43 for CLK0; 50-51 for CLK1 */
		params[i++] = ms_reg.reg.p3_1;
    d09c:	89 81       	ldd	r24, Y+1	; 0x01
    d09e:	91 e0       	ldi	r25, 0x01	; 1
    d0a0:	98 0f       	add	r25, r24
    d0a2:	99 83       	std	Y+1, r25	; 0x01
    d0a4:	88 2f       	mov	r24, r24
    d0a6:	90 e0       	ldi	r25, 0x00	; 0
    d0a8:	4a 8d       	ldd	r20, Y+26	; 0x1a
    d0aa:	9e 01       	movw	r18, r28
    d0ac:	2d 5f       	subi	r18, 0xFD	; 253
    d0ae:	3f 4f       	sbci	r19, 0xFF	; 255
    d0b0:	82 0f       	add	r24, r18
    d0b2:	93 1f       	adc	r25, r19
    d0b4:	fc 01       	movw	r30, r24
    d0b6:	40 83       	st	Z, r20
		params[i++] = ms_reg.reg.p3_0;
    d0b8:	89 81       	ldd	r24, Y+1	; 0x01
    d0ba:	91 e0       	ldi	r25, 0x01	; 1
    d0bc:	98 0f       	add	r25, r24
    d0be:	99 83       	std	Y+1, r25	; 0x01
    d0c0:	88 2f       	mov	r24, r24
    d0c2:	90 e0       	ldi	r25, 0x00	; 0
    d0c4:	49 8d       	ldd	r20, Y+25	; 0x19
    d0c6:	9e 01       	movw	r18, r28
    d0c8:	2d 5f       	subi	r18, 0xFD	; 253
    d0ca:	3f 4f       	sbci	r19, 0xFF	; 255
    d0cc:	82 0f       	add	r24, r18
    d0ce:	93 1f       	adc	r25, r19
    d0d0:	fc 01       	movw	r30, r24
    d0d2:	40 83       	st	Z, r20

		/* Register 44 for CLK0; 52 for CLK1 */
		if(si5351_read_bulk((SI5351_CLK0_PARAMETERS + 2) + (clk * 8), data, 1))
    d0d4:	88 89       	ldd	r24, Y+16	; 0x10
    d0d6:	88 0f       	add	r24, r24
    d0d8:	88 0f       	add	r24, r24
    d0da:	88 0f       	add	r24, r24
    d0dc:	2c e2       	ldi	r18, 0x2C	; 44
    d0de:	28 0f       	add	r18, r24
    d0e0:	ce 01       	movw	r24, r28
    d0e2:	0e 96       	adiw	r24, 0x0e	; 14
    d0e4:	41 e0       	ldi	r20, 0x01	; 1
    d0e6:	bc 01       	movw	r22, r24
    d0e8:	82 2f       	mov	r24, r18
    d0ea:	0e 94 c0 67 	call	0xcf80	; 0xcf80 <_Z16si5351_read_bulkhPhh>
    d0ee:	88 23       	and	r24, r24
    d0f0:	11 f0       	breq	.+4      	; 0xd0f6 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x98>
		{
			return(true);
    d0f2:	81 e0       	ldi	r24, 0x01	; 1
    d0f4:	bc c0       	rjmp	.+376    	; 0xd26e <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x210>
		}
		
		reg_val = data[0];
    d0f6:	8e 85       	ldd	r24, Y+14	; 0x0e
    d0f8:	8a 83       	std	Y+2, r24	; 0x02

		reg_val &= 0xFC;    /*~(0x03); */
    d0fa:	8a 81       	ldd	r24, Y+2	; 0x02
    d0fc:	8c 7f       	andi	r24, 0xFC	; 252
    d0fe:	8a 83       	std	Y+2, r24	; 0x02
		params[i++] = reg_val | (ms_reg.reg.p1_2 & 0x03);
    d100:	89 81       	ldd	r24, Y+1	; 0x01
    d102:	91 e0       	ldi	r25, 0x01	; 1
    d104:	98 0f       	add	r25, r24
    d106:	99 83       	std	Y+1, r25	; 0x01
    d108:	88 2f       	mov	r24, r24
    d10a:	90 e0       	ldi	r25, 0x00	; 0
    d10c:	2b 89       	ldd	r18, Y+19	; 0x13
    d10e:	32 2f       	mov	r19, r18
    d110:	33 70       	andi	r19, 0x03	; 3
    d112:	2a 81       	ldd	r18, Y+2	; 0x02
    d114:	23 2b       	or	r18, r19
    d116:	42 2f       	mov	r20, r18
    d118:	9e 01       	movw	r18, r28
    d11a:	2d 5f       	subi	r18, 0xFD	; 253
    d11c:	3f 4f       	sbci	r19, 0xFF	; 255
    d11e:	82 0f       	add	r24, r18
    d120:	93 1f       	adc	r25, r19
    d122:	fc 01       	movw	r30, r24
    d124:	40 83       	st	Z, r20

		/* Registers 45-46 for CLK0 */
		params[i++] = ms_reg.reg.p1_1;
    d126:	89 81       	ldd	r24, Y+1	; 0x01
    d128:	91 e0       	ldi	r25, 0x01	; 1
    d12a:	98 0f       	add	r25, r24
    d12c:	99 83       	std	Y+1, r25	; 0x01
    d12e:	88 2f       	mov	r24, r24
    d130:	90 e0       	ldi	r25, 0x00	; 0
    d132:	4a 89       	ldd	r20, Y+18	; 0x12
    d134:	9e 01       	movw	r18, r28
    d136:	2d 5f       	subi	r18, 0xFD	; 253
    d138:	3f 4f       	sbci	r19, 0xFF	; 255
    d13a:	82 0f       	add	r24, r18
    d13c:	93 1f       	adc	r25, r19
    d13e:	fc 01       	movw	r30, r24
    d140:	40 83       	st	Z, r20
		params[i++] = ms_reg.reg.p1_0;
    d142:	89 81       	ldd	r24, Y+1	; 0x01
    d144:	91 e0       	ldi	r25, 0x01	; 1
    d146:	98 0f       	add	r25, r24
    d148:	99 83       	std	Y+1, r25	; 0x01
    d14a:	88 2f       	mov	r24, r24
    d14c:	90 e0       	ldi	r25, 0x00	; 0
    d14e:	49 89       	ldd	r20, Y+17	; 0x11
    d150:	9e 01       	movw	r18, r28
    d152:	2d 5f       	subi	r18, 0xFD	; 253
    d154:	3f 4f       	sbci	r19, 0xFF	; 255
    d156:	82 0f       	add	r24, r18
    d158:	93 1f       	adc	r25, r19
    d15a:	fc 01       	movw	r30, r24
    d15c:	40 83       	st	Z, r20

		/* Register 47 for CLK0 */
		params[i] = (ms_reg.reg.p3_2 << 4);
    d15e:	89 81       	ldd	r24, Y+1	; 0x01
    d160:	88 2f       	mov	r24, r24
    d162:	90 e0       	ldi	r25, 0x00	; 0
    d164:	2b 8d       	ldd	r18, Y+27	; 0x1b
    d166:	42 2f       	mov	r20, r18
    d168:	42 95       	swap	r20
    d16a:	40 7f       	andi	r20, 0xF0	; 240
    d16c:	9e 01       	movw	r18, r28
    d16e:	2d 5f       	subi	r18, 0xFD	; 253
    d170:	3f 4f       	sbci	r19, 0xFF	; 255
    d172:	82 0f       	add	r24, r18
    d174:	93 1f       	adc	r25, r19
    d176:	fc 01       	movw	r30, r24
    d178:	40 83       	st	Z, r20
		params[i++] += (ms_reg.reg.p2_2 & 0x0F);
    d17a:	29 81       	ldd	r18, Y+1	; 0x01
    d17c:	81 e0       	ldi	r24, 0x01	; 1
    d17e:	82 0f       	add	r24, r18
    d180:	89 83       	std	Y+1, r24	; 0x01
    d182:	82 2f       	mov	r24, r18
    d184:	90 e0       	ldi	r25, 0x00	; 0
    d186:	22 2f       	mov	r18, r18
    d188:	30 e0       	ldi	r19, 0x00	; 0
    d18a:	ae 01       	movw	r20, r28
    d18c:	4d 5f       	subi	r20, 0xFD	; 253
    d18e:	5f 4f       	sbci	r21, 0xFF	; 255
    d190:	24 0f       	add	r18, r20
    d192:	35 1f       	adc	r19, r21
    d194:	f9 01       	movw	r30, r18
    d196:	30 81       	ld	r19, Z
    d198:	2f 89       	ldd	r18, Y+23	; 0x17
    d19a:	2f 70       	andi	r18, 0x0F	; 15
    d19c:	43 2f       	mov	r20, r19
    d19e:	42 0f       	add	r20, r18
    d1a0:	9e 01       	movw	r18, r28
    d1a2:	2d 5f       	subi	r18, 0xFD	; 253
    d1a4:	3f 4f       	sbci	r19, 0xFF	; 255
    d1a6:	82 0f       	add	r24, r18
    d1a8:	93 1f       	adc	r25, r19
    d1aa:	fc 01       	movw	r30, r24
    d1ac:	40 83       	st	Z, r20

		/* Registers 48-49 for CLK0 */
		params[i++] = ms_reg.reg.p2_1;
    d1ae:	89 81       	ldd	r24, Y+1	; 0x01
    d1b0:	91 e0       	ldi	r25, 0x01	; 1
    d1b2:	98 0f       	add	r25, r24
    d1b4:	99 83       	std	Y+1, r25	; 0x01
    d1b6:	88 2f       	mov	r24, r24
    d1b8:	90 e0       	ldi	r25, 0x00	; 0
    d1ba:	4e 89       	ldd	r20, Y+22	; 0x16
    d1bc:	9e 01       	movw	r18, r28
    d1be:	2d 5f       	subi	r18, 0xFD	; 253
    d1c0:	3f 4f       	sbci	r19, 0xFF	; 255
    d1c2:	82 0f       	add	r24, r18
    d1c4:	93 1f       	adc	r25, r19
    d1c6:	fc 01       	movw	r30, r24
    d1c8:	40 83       	st	Z, r20
		params[i++] = ms_reg.reg.p2_0;
    d1ca:	89 81       	ldd	r24, Y+1	; 0x01
    d1cc:	91 e0       	ldi	r25, 0x01	; 1
    d1ce:	98 0f       	add	r25, r24
    d1d0:	99 83       	std	Y+1, r25	; 0x01
    d1d2:	88 2f       	mov	r24, r24
    d1d4:	90 e0       	ldi	r25, 0x00	; 0
    d1d6:	4d 89       	ldd	r20, Y+21	; 0x15
    d1d8:	9e 01       	movw	r18, r28
    d1da:	2d 5f       	subi	r18, 0xFD	; 253
    d1dc:	3f 4f       	sbci	r19, 0xFF	; 255
    d1de:	82 0f       	add	r24, r18
    d1e0:	93 1f       	adc	r25, r19
    d1e2:	fc 01       	movw	r30, r24
    d1e4:	40 83       	st	Z, r20

		/* Write the parameters */
		switch(clk)
    d1e6:	88 89       	ldd	r24, Y+16	; 0x10
    d1e8:	88 2f       	mov	r24, r24
    d1ea:	90 e0       	ldi	r25, 0x00	; 0
    d1ec:	81 30       	cpi	r24, 0x01	; 1
    d1ee:	91 05       	cpc	r25, r1
    d1f0:	89 f0       	breq	.+34     	; 0xd214 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1b6>
    d1f2:	82 30       	cpi	r24, 0x02	; 2
    d1f4:	91 05       	cpc	r25, r1
    d1f6:	c9 f0       	breq	.+50     	; 0xd22a <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1cc>
    d1f8:	89 2b       	or	r24, r25
    d1fa:	09 f0       	breq	.+2      	; 0xd1fe <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1a0>
			break;

			default:
			{
			}
			break;
    d1fc:	26 c0       	rjmp	.+76     	; 0xd24a <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1ec>
		/* Write the parameters */
		switch(clk)
		{
			case SI5351_CLK0:
			{
				if(si5351_write_bulk(SI5351_CLK0_PARAMETERS, params, i))
    d1fe:	ce 01       	movw	r24, r28
    d200:	03 96       	adiw	r24, 0x03	; 3
    d202:	49 81       	ldd	r20, Y+1	; 0x01
    d204:	bc 01       	movw	r22, r24
    d206:	8a e2       	ldi	r24, 0x2A	; 42
    d208:	0e 94 8e 67 	call	0xcf1c	; 0xcf1c <_Z17si5351_write_bulkhPhh>
    d20c:	88 23       	and	r24, r24
    d20e:	c1 f0       	breq	.+48     	; 0xd240 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1e2>
				{
					return(true);
    d210:	81 e0       	ldi	r24, 0x01	; 1
    d212:	2d c0       	rjmp	.+90     	; 0xd26e <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x210>
			}
			break;

			case SI5351_CLK1:
			{
				if(si5351_write_bulk(SI5351_CLK1_PARAMETERS, params, i))
    d214:	ce 01       	movw	r24, r28
    d216:	03 96       	adiw	r24, 0x03	; 3
    d218:	49 81       	ldd	r20, Y+1	; 0x01
    d21a:	bc 01       	movw	r22, r24
    d21c:	82 e3       	ldi	r24, 0x32	; 50
    d21e:	0e 94 8e 67 	call	0xcf1c	; 0xcf1c <_Z17si5351_write_bulkhPhh>
    d222:	88 23       	and	r24, r24
    d224:	79 f0       	breq	.+30     	; 0xd244 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1e6>
				{
					return(true);
    d226:	81 e0       	ldi	r24, 0x01	; 1
    d228:	22 c0       	rjmp	.+68     	; 0xd26e <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x210>
			}
			break;

			case SI5351_CLK2:
			{
				if(si5351_write_bulk(SI5351_CLK2_PARAMETERS, params, i))
    d22a:	ce 01       	movw	r24, r28
    d22c:	03 96       	adiw	r24, 0x03	; 3
    d22e:	49 81       	ldd	r20, Y+1	; 0x01
    d230:	bc 01       	movw	r22, r24
    d232:	8a e3       	ldi	r24, 0x3A	; 58
    d234:	0e 94 8e 67 	call	0xcf1c	; 0xcf1c <_Z17si5351_write_bulkhPhh>
    d238:	88 23       	and	r24, r24
    d23a:	31 f0       	breq	.+12     	; 0xd248 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1ea>
				{
					return(true);
    d23c:	81 e0       	ldi	r24, 0x01	; 1
    d23e:	17 c0       	rjmp	.+46     	; 0xd26e <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x210>
				if(si5351_write_bulk(SI5351_CLK0_PARAMETERS, params, i))
				{
					return(true);
				}
			}
			break;
    d240:	00 00       	nop
    d242:	03 c0       	rjmp	.+6      	; 0xd24a <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1ec>
				if(si5351_write_bulk(SI5351_CLK1_PARAMETERS, params, i))
				{
					return(true);
				}
			}
			break;
    d244:	00 00       	nop
    d246:	01 c0       	rjmp	.+2      	; 0xd24a <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1ec>
				if(si5351_write_bulk(SI5351_CLK2_PARAMETERS, params, i))
				{
					return(true);
				}
			}
			break;
    d248:	00 00       	nop
			{
			}
			break;
		}

		if(set_integer_mode(clk, int_mode))
    d24a:	6d 8d       	ldd	r22, Y+29	; 0x1d
    d24c:	88 89       	ldd	r24, Y+16	; 0x10
    d24e:	0e 94 45 69 	call	0xd28a	; 0xd28a <_Z16set_integer_mode12si5351_clockb>
    d252:	88 23       	and	r24, r24
    d254:	11 f0       	breq	.+4      	; 0xd25a <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1fc>
		{
			return(true);
    d256:	81 e0       	ldi	r24, 0x01	; 1
    d258:	0a c0       	rjmp	.+20     	; 0xd26e <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x210>
		}
		
		if(ms_div(clk, r_div, div_by_4))
    d25a:	4b a5       	ldd	r20, Y+43	; 0x2b
    d25c:	6e 8d       	ldd	r22, Y+30	; 0x1e
    d25e:	88 89       	ldd	r24, Y+16	; 0x10
    d260:	0e 94 7a 69 	call	0xd2f4	; 0xd2f4 <_Z6ms_div12si5351_clockhb>
    d264:	88 23       	and	r24, r24
    d266:	11 f0       	breq	.+4      	; 0xd26c <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x20e>
		{
			return(true);
    d268:	81 e0       	ldi	r24, 0x01	; 1
    d26a:	01 c0       	rjmp	.+2      	; 0xd26e <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x210>
		}
		
		return(false);
    d26c:	80 e0       	ldi	r24, 0x00	; 0
	}
    d26e:	6e 96       	adiw	r28, 0x1e	; 30
    d270:	cd bf       	out	0x3d, r28	; 61
    d272:	de bf       	out	0x3e, r29	; 62
    d274:	df 91       	pop	r29
    d276:	cf 91       	pop	r28
    d278:	1f 91       	pop	r17
    d27a:	0f 91       	pop	r16
    d27c:	ff 90       	pop	r15
    d27e:	ef 90       	pop	r14
    d280:	df 90       	pop	r13
    d282:	cf 90       	pop	r12
    d284:	af 90       	pop	r10
    d286:	8f 90       	pop	r8
    d288:	08 95       	ret

0000d28a <_Z16set_integer_mode12si5351_clockb>:
 * enable - 1 to enable, 0 to disable
 *
 * Set the indicated multisynth into integer mode.
 */
	bool set_integer_mode(Si5351_clock clk, bool enable)
	{
    d28a:	cf 93       	push	r28
    d28c:	df 93       	push	r29
    d28e:	cd b7       	in	r28, 0x3d	; 61
    d290:	de b7       	in	r29, 0x3e	; 62
    d292:	25 97       	sbiw	r28, 0x05	; 5
    d294:	cd bf       	out	0x3d, r28	; 61
    d296:	de bf       	out	0x3e, r29	; 62
    d298:	8c 83       	std	Y+4, r24	; 0x04
    d29a:	6d 83       	std	Y+5, r22	; 0x05
		uint8_t reg_val;
		uint8_t data[2];

		if(si5351_read_bulk(SI5351_CLK0_CTRL + (uint8_t)clk, data, 1))
    d29c:	8c 81       	ldd	r24, Y+4	; 0x04
    d29e:	20 e1       	ldi	r18, 0x10	; 16
    d2a0:	28 0f       	add	r18, r24
    d2a2:	ce 01       	movw	r24, r28
    d2a4:	02 96       	adiw	r24, 0x02	; 2
    d2a6:	41 e0       	ldi	r20, 0x01	; 1
    d2a8:	bc 01       	movw	r22, r24
    d2aa:	82 2f       	mov	r24, r18
    d2ac:	0e 94 c0 67 	call	0xcf80	; 0xcf80 <_Z16si5351_read_bulkhPhh>
    d2b0:	88 23       	and	r24, r24
    d2b2:	11 f0       	breq	.+4      	; 0xd2b8 <_Z16set_integer_mode12si5351_clockb+0x2e>
		{
			return(true);
    d2b4:	81 e0       	ldi	r24, 0x01	; 1
    d2b6:	18 c0       	rjmp	.+48     	; 0xd2e8 <_Z16set_integer_mode12si5351_clockb+0x5e>
		}
		
		reg_val = data[0];
    d2b8:	8a 81       	ldd	r24, Y+2	; 0x02
    d2ba:	89 83       	std	Y+1, r24	; 0x01

		if(enable)
    d2bc:	8d 81       	ldd	r24, Y+5	; 0x05
    d2be:	88 23       	and	r24, r24
    d2c0:	21 f0       	breq	.+8      	; 0xd2ca <_Z16set_integer_mode12si5351_clockb+0x40>
		{
			reg_val |= (SI5351_CLK_INTEGER_MODE);
    d2c2:	89 81       	ldd	r24, Y+1	; 0x01
    d2c4:	80 64       	ori	r24, 0x40	; 64
    d2c6:	89 83       	std	Y+1, r24	; 0x01
    d2c8:	03 c0       	rjmp	.+6      	; 0xd2d0 <_Z16set_integer_mode12si5351_clockb+0x46>
		}
		else
		{
			reg_val &= ~(SI5351_CLK_INTEGER_MODE);
    d2ca:	89 81       	ldd	r24, Y+1	; 0x01
    d2cc:	8f 7b       	andi	r24, 0xBF	; 191
    d2ce:	89 83       	std	Y+1, r24	; 0x01
		}

		data[0] = reg_val;
    d2d0:	89 81       	ldd	r24, Y+1	; 0x01
    d2d2:	8a 83       	std	Y+2, r24	; 0x02
		return(si5351_write_bulk(SI5351_CLK0_CTRL + (uint8_t)clk, data, 1));
    d2d4:	8c 81       	ldd	r24, Y+4	; 0x04
    d2d6:	20 e1       	ldi	r18, 0x10	; 16
    d2d8:	28 0f       	add	r18, r24
    d2da:	ce 01       	movw	r24, r28
    d2dc:	02 96       	adiw	r24, 0x02	; 2
    d2de:	41 e0       	ldi	r20, 0x01	; 1
    d2e0:	bc 01       	movw	r22, r24
    d2e2:	82 2f       	mov	r24, r18
    d2e4:	0e 94 8e 67 	call	0xcf1c	; 0xcf1c <_Z17si5351_write_bulkhPhh>
	}
    d2e8:	25 96       	adiw	r28, 0x05	; 5
    d2ea:	cd bf       	out	0x3d, r28	; 61
    d2ec:	de bf       	out	0x3e, r29	; 62
    d2ee:	df 91       	pop	r29
    d2f0:	cf 91       	pop	r28
    d2f2:	08 95       	ret

0000d2f4 <_Z6ms_div12si5351_clockhb>:


	bool ms_div(Si5351_clock clk, uint8_t r_div, bool div_by_4)
	{
    d2f4:	cf 93       	push	r28
    d2f6:	df 93       	push	r29
    d2f8:	cd b7       	in	r28, 0x3d	; 61
    d2fa:	de b7       	in	r29, 0x3e	; 62
    d2fc:	27 97       	sbiw	r28, 0x07	; 7
    d2fe:	cd bf       	out	0x3d, r28	; 61
    d300:	de bf       	out	0x3e, r29	; 62
    d302:	8d 83       	std	Y+5, r24	; 0x05
    d304:	6e 83       	std	Y+6, r22	; 0x06
    d306:	4f 83       	std	Y+7, r20	; 0x07
		uint8_t reg_val, reg_addr;
		uint8_t data[2];

		switch(clk)
    d308:	8d 81       	ldd	r24, Y+5	; 0x05
    d30a:	88 2f       	mov	r24, r24
    d30c:	90 e0       	ldi	r25, 0x00	; 0
    d30e:	81 30       	cpi	r24, 0x01	; 1
    d310:	91 05       	cpc	r25, r1
    d312:	41 f0       	breq	.+16     	; 0xd324 <_Z6ms_div12si5351_clockhb+0x30>
    d314:	82 30       	cpi	r24, 0x02	; 2
    d316:	91 05       	cpc	r25, r1
    d318:	41 f0       	breq	.+16     	; 0xd32a <_Z6ms_div12si5351_clockhb+0x36>
    d31a:	89 2b       	or	r24, r25
    d31c:	49 f4       	brne	.+18     	; 0xd330 <_Z6ms_div12si5351_clockhb+0x3c>
		{
			case SI5351_CLK0:
			{
				reg_addr = SI5351_CLK0_PARAMETERS + 2;
    d31e:	8c e2       	ldi	r24, 0x2C	; 44
    d320:	8a 83       	std	Y+2, r24	; 0x02
			}
			break;
    d322:	08 c0       	rjmp	.+16     	; 0xd334 <_Z6ms_div12si5351_clockhb+0x40>

			case SI5351_CLK1:
			{
				reg_addr = SI5351_CLK1_PARAMETERS + 2;
    d324:	84 e3       	ldi	r24, 0x34	; 52
    d326:	8a 83       	std	Y+2, r24	; 0x02
			}
			break;
    d328:	05 c0       	rjmp	.+10     	; 0xd334 <_Z6ms_div12si5351_clockhb+0x40>

			case SI5351_CLK2:
			{
				reg_addr = SI5351_CLK2_PARAMETERS + 2;
    d32a:	8c e3       	ldi	r24, 0x3C	; 60
    d32c:	8a 83       	std	Y+2, r24	; 0x02
			}
			break;
    d32e:	02 c0       	rjmp	.+4      	; 0xd334 <_Z6ms_div12si5351_clockhb+0x40>

			default:
				return(true);
    d330:	81 e0       	ldi	r24, 0x01	; 1
    d332:	30 c0       	rjmp	.+96     	; 0xd394 <_Z6ms_div12si5351_clockhb+0xa0>
		}

		if(si5351_read_bulk(reg_addr, data, 1))
    d334:	ce 01       	movw	r24, r28
    d336:	03 96       	adiw	r24, 0x03	; 3
    d338:	41 e0       	ldi	r20, 0x01	; 1
    d33a:	bc 01       	movw	r22, r24
    d33c:	8a 81       	ldd	r24, Y+2	; 0x02
    d33e:	0e 94 c0 67 	call	0xcf80	; 0xcf80 <_Z16si5351_read_bulkhPhh>
    d342:	88 23       	and	r24, r24
    d344:	11 f0       	breq	.+4      	; 0xd34a <_Z6ms_div12si5351_clockhb+0x56>
		{
			return(true);
    d346:	81 e0       	ldi	r24, 0x01	; 1
    d348:	25 c0       	rjmp	.+74     	; 0xd394 <_Z6ms_div12si5351_clockhb+0xa0>
		}
		
		reg_val = data[0];
    d34a:	8b 81       	ldd	r24, Y+3	; 0x03
    d34c:	89 83       	std	Y+1, r24	; 0x01

		/* Clear the appropriate bits */
		reg_val &= ~(0x7c);
    d34e:	89 81       	ldd	r24, Y+1	; 0x01
    d350:	83 78       	andi	r24, 0x83	; 131
    d352:	89 83       	std	Y+1, r24	; 0x01

		if(div_by_4)
    d354:	8f 81       	ldd	r24, Y+7	; 0x07
    d356:	88 23       	and	r24, r24
    d358:	21 f0       	breq	.+8      	; 0xd362 <_Z6ms_div12si5351_clockhb+0x6e>
		{
			reg_val |= (SI5351_OUTPUT_CLK_DIVBY4);
    d35a:	89 81       	ldd	r24, Y+1	; 0x01
    d35c:	8c 60       	ori	r24, 0x0C	; 12
    d35e:	89 83       	std	Y+1, r24	; 0x01
    d360:	03 c0       	rjmp	.+6      	; 0xd368 <_Z6ms_div12si5351_clockhb+0x74>
		}
		else
		{
			reg_val &= ~(SI5351_OUTPUT_CLK_DIVBY4);
    d362:	89 81       	ldd	r24, Y+1	; 0x01
    d364:	83 7f       	andi	r24, 0xF3	; 243
    d366:	89 83       	std	Y+1, r24	; 0x01
		}

		reg_val |= (r_div << SI5351_OUTPUT_CLK_DIV_SHIFT);
    d368:	8e 81       	ldd	r24, Y+6	; 0x06
    d36a:	88 2f       	mov	r24, r24
    d36c:	90 e0       	ldi	r25, 0x00	; 0
    d36e:	82 95       	swap	r24
    d370:	92 95       	swap	r25
    d372:	90 7f       	andi	r25, 0xF0	; 240
    d374:	98 27       	eor	r25, r24
    d376:	80 7f       	andi	r24, 0xF0	; 240
    d378:	98 27       	eor	r25, r24
    d37a:	98 2f       	mov	r25, r24
    d37c:	89 81       	ldd	r24, Y+1	; 0x01
    d37e:	89 2b       	or	r24, r25
    d380:	89 83       	std	Y+1, r24	; 0x01

		data[0] = reg_val;
    d382:	89 81       	ldd	r24, Y+1	; 0x01
    d384:	8b 83       	std	Y+3, r24	; 0x03
		return(si5351_write_bulk(reg_addr, data, 1));
    d386:	ce 01       	movw	r24, r28
    d388:	03 96       	adiw	r24, 0x03	; 3
    d38a:	41 e0       	ldi	r20, 0x01	; 1
    d38c:	bc 01       	movw	r22, r24
    d38e:	8a 81       	ldd	r24, Y+2	; 0x02
    d390:	0e 94 8e 67 	call	0xcf1c	; 0xcf1c <_Z17si5351_write_bulkhPhh>
	}
    d394:	27 96       	adiw	r28, 0x07	; 7
    d396:	cd bf       	out	0x3d, r28	; 61
    d398:	de bf       	out	0x3e, r29	; 62
    d39a:	df 91       	pop	r29
    d39c:	cf 91       	pop	r28
    d39e:	08 95       	ret

0000d3a0 <SLPCTRL_init>:
 * \brief Initialize Sleep Controller
 *
 * \return Initialization status.
 */
int8_t SLPCTRL_init()
{
    d3a0:	cf 93       	push	r28
    d3a2:	df 93       	push	r29
    d3a4:	cd b7       	in	r28, 0x3d	; 61
    d3a6:	de b7       	in	r29, 0x3e	; 62

	SLPCTRL.CTRLA = 0 << SLPCTRL_SEN_bp; /* Sleep enable: disabled */
    d3a8:	80 e5       	ldi	r24, 0x50	; 80
    d3aa:	90 e0       	ldi	r25, 0x00	; 0
    d3ac:	fc 01       	movw	r30, r24
    d3ae:	10 82       	st	Z, r1
//			 | SLPCTRL_SMODE_IDLE_gc;  /* Idle mode */
//			 | SLPCTRL_SMODE_STDBY_gc; /* Standby Mode */
//			 | SLPCTRL_SMODE_PDOWN_gc; /* Power-down Mode */

	return 0;
    d3b0:	80 e0       	ldi	r24, 0x00	; 0
}
    d3b2:	df 91       	pop	r29
    d3b4:	cf 91       	pop	r28
    d3b6:	08 95       	ret

0000d3b8 <SLPCTRL_set_sleep_mode>:

void SLPCTRL_set_sleep_mode(SLPCTRL_SMODE_t setmode)
{
    d3b8:	cf 93       	push	r28
    d3ba:	df 93       	push	r29
    d3bc:	1f 92       	push	r1
    d3be:	cd b7       	in	r28, 0x3d	; 61
    d3c0:	de b7       	in	r29, 0x3e	; 62
    d3c2:	89 83       	std	Y+1, r24	; 0x01
	SLPCTRL.CTRLA = (SLPCTRL.CTRLA & ~SLPCTRL_SMODE_gm) | (setmode & SLPCTRL_SMODE_gm);
    d3c4:	80 e5       	ldi	r24, 0x50	; 80
    d3c6:	90 e0       	ldi	r25, 0x00	; 0
    d3c8:	20 e5       	ldi	r18, 0x50	; 80
    d3ca:	30 e0       	ldi	r19, 0x00	; 0
    d3cc:	f9 01       	movw	r30, r18
    d3ce:	20 81       	ld	r18, Z
    d3d0:	32 2f       	mov	r19, r18
    d3d2:	39 7f       	andi	r19, 0xF9	; 249
    d3d4:	29 81       	ldd	r18, Y+1	; 0x01
    d3d6:	26 70       	andi	r18, 0x06	; 6
    d3d8:	23 2b       	or	r18, r19
    d3da:	fc 01       	movw	r30, r24
    d3dc:	20 83       	st	Z, r18
}
    d3de:	00 00       	nop
    d3e0:	0f 90       	pop	r0
    d3e2:	df 91       	pop	r29
    d3e4:	cf 91       	pop	r28
    d3e6:	08 95       	ret

0000d3e8 <TIMERB_init>:
 * \brief Initialize tcb interface
 *
 * \return Initialization status.
 */
int8_t TIMERB_init()
{
    d3e8:	cf 93       	push	r28
    d3ea:	df 93       	push	r29
    d3ec:	cd b7       	in	r28, 0x3d	; 61
    d3ee:	de b7       	in	r29, 0x3e	; 62
TCB0.INTCTRL = 1 << TCB_CAPT_bp   /* Capture or Timeout: enabled */
    d3f0:	80 e0       	ldi	r24, 0x00	; 0
    d3f2:	9b e0       	ldi	r25, 0x0B	; 11
| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    d3f4:	21 e0       	ldi	r18, 0x01	; 1
    d3f6:	fc 01       	movw	r30, r24
    d3f8:	25 83       	std	Z+5, r18	; 0x05

// Set TOP
TCB0.CCMP = 0x9C40;
    d3fa:	80 e0       	ldi	r24, 0x00	; 0
    d3fc:	9b e0       	ldi	r25, 0x0B	; 11
    d3fe:	20 e4       	ldi	r18, 0x40	; 64
    d400:	3c e9       	ldi	r19, 0x9C	; 156
    d402:	fc 01       	movw	r30, r24
    d404:	24 87       	std	Z+12, r18	; 0x0c
    d406:	35 87       	std	Z+13, r19	; 0x0d

TCB0.CTRLA = TCB_CLKSEL_DIV2_gc     /* CLK_PER */
    d408:	80 e0       	ldi	r24, 0x00	; 0
    d40a:	9b e0       	ldi	r25, 0x0B	; 11
| 1 << TCB_ENABLE_bp   /* Enable: enabled */
| 0 << TCB_RUNSTDBY_bp /* Run Standby: disabled */
| 0 << TCB_SYNCUPD_bp  /* Synchronize Update: disabled */
| 0 << TCB_CASCADE_bp; /* Cascade Two Timer/Counters: disabled */
    d40c:	23 e0       	ldi	r18, 0x03	; 3
    d40e:	fc 01       	movw	r30, r24
    d410:	20 83       	st	Z, r18

TCB0.INTFLAGS = (TCB_CAPT_bm | TCB_OVF_bm); /* Clear flag */
    d412:	80 e0       	ldi	r24, 0x00	; 0
    d414:	9b e0       	ldi	r25, 0x0B	; 11
    d416:	23 e0       	ldi	r18, 0x03	; 3
    d418:	fc 01       	movw	r30, r24
    d41a:	26 83       	std	Z+6, r18	; 0x06

/********************************************************************************/

TCB1.INTCTRL = 1 << TCB_CAPT_bp   /* Capture or Timeout: enabled */
    d41c:	80 e1       	ldi	r24, 0x10	; 16
    d41e:	9b e0       	ldi	r25, 0x0B	; 11
| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    d420:	21 e0       	ldi	r18, 0x01	; 1
    d422:	fc 01       	movw	r30, r24
    d424:	25 83       	std	Z+5, r18	; 0x05

// Set TOP
TCB1.CCMP = 0x5DC0;
    d426:	80 e1       	ldi	r24, 0x10	; 16
    d428:	9b e0       	ldi	r25, 0x0B	; 11
    d42a:	20 ec       	ldi	r18, 0xC0	; 192
    d42c:	3d e5       	ldi	r19, 0x5D	; 93
    d42e:	fc 01       	movw	r30, r24
    d430:	24 87       	std	Z+12, r18	; 0x0c
    d432:	35 87       	std	Z+13, r19	; 0x0d

TCB1.CTRLA = TCB_CLKSEL_DIV1_gc     /* CLK_PER */
    d434:	80 e1       	ldi	r24, 0x10	; 16
    d436:	9b e0       	ldi	r25, 0x0B	; 11
| 1 << TCB_ENABLE_bp   /* Enable: enabled */
| 0 << TCB_RUNSTDBY_bp /* Run Standby: disabled */
| 0 << TCB_SYNCUPD_bp  /* Synchronize Update: disabled */
| 0 << TCB_CASCADE_bp; /* Cascade Two Timer/Counters: disabled */
    d438:	21 e0       	ldi	r18, 0x01	; 1
    d43a:	fc 01       	movw	r30, r24
    d43c:	20 83       	st	Z, r18

TCB1.INTFLAGS = TCB_CAPT_bm; /* Clear flag */
    d43e:	80 e1       	ldi	r24, 0x10	; 16
    d440:	9b e0       	ldi	r25, 0x0B	; 11
    d442:	21 e0       	ldi	r18, 0x01	; 1
    d444:	fc 01       	movw	r30, r24
    d446:	26 83       	std	Z+6, r18	; 0x06


/********************************************************************************/

CPUINT.LVL1VEC = 30; /* Set to level 1 - highest priority interrupt */
    d448:	80 e1       	ldi	r24, 0x10	; 16
    d44a:	91 e0       	ldi	r25, 0x01	; 1
    d44c:	2e e1       	ldi	r18, 0x1E	; 30
    d44e:	fc 01       	movw	r30, r24
    d450:	23 83       	std	Z+3, r18	; 0x03
TCB2.INTCTRL = 1 << TCB_CAPT_bp   /* Capture or Timeout: enabled */
    d452:	80 e2       	ldi	r24, 0x20	; 32
    d454:	9b e0       	ldi	r25, 0x0B	; 11
| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    d456:	21 e0       	ldi	r18, 0x01	; 1
    d458:	fc 01       	movw	r30, r24
    d45a:	25 83       	std	Z+5, r18	; 0x05

// Set TOP
TCB2.CCMP = 0xFFFF;
    d45c:	80 e2       	ldi	r24, 0x20	; 32
    d45e:	9b e0       	ldi	r25, 0x0B	; 11
    d460:	2f ef       	ldi	r18, 0xFF	; 255
    d462:	3f ef       	ldi	r19, 0xFF	; 255
    d464:	fc 01       	movw	r30, r24
    d466:	24 87       	std	Z+12, r18	; 0x0c
    d468:	35 87       	std	Z+13, r19	; 0x0d

TCB2.CTRLA = TCB_CLKSEL_DIV2_gc     /* CLK_PER */
    d46a:	80 e2       	ldi	r24, 0x20	; 32
    d46c:	9b e0       	ldi	r25, 0x0B	; 11
| 1 << TCB_ENABLE_bp   /* Enable: enabled */
| 0 << TCB_RUNSTDBY_bp /* Run Standby: disabled */
| 0 << TCB_SYNCUPD_bp  /* Synchronize Update: disabled */
| 0 << TCB_CASCADE_bp; /* Cascade Two Timer/Counters: disabled */
    d46e:	23 e0       	ldi	r18, 0x03	; 3
    d470:	fc 01       	movw	r30, r24
    d472:	20 83       	st	Z, r18

TCB2.INTFLAGS = TCB_CAPT_bm; /* Clear flag */
    d474:	80 e2       	ldi	r24, 0x20	; 32
    d476:	9b e0       	ldi	r25, 0x0B	; 11
    d478:	21 e0       	ldi	r18, 0x01	; 1
    d47a:	fc 01       	movw	r30, r24
    d47c:	26 83       	std	Z+6, r18	; 0x06
CPUINT.LVL1VEC = 30; /* Set to level 1 - highest priority interrupt */
    d47e:	80 e1       	ldi	r24, 0x10	; 16
    d480:	91 e0       	ldi	r25, 0x01	; 1
    d482:	2e e1       	ldi	r18, 0x1E	; 30
    d484:	fc 01       	movw	r30, r24
    d486:	23 83       	std	Z+3, r18	; 0x03


/********************************************************************************/

TCB3.INTCTRL = 1 << TCB_CAPT_bp   /* Capture or Timeout: enabled */
    d488:	80 e3       	ldi	r24, 0x30	; 48
    d48a:	9b e0       	ldi	r25, 0x0B	; 11
| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    d48c:	21 e0       	ldi	r18, 0x01	; 1
    d48e:	fc 01       	movw	r30, r24
    d490:	25 83       	std	Z+5, r18	; 0x05

// Set TOP
TCB3.CCMP = 0x9C40;
    d492:	80 e3       	ldi	r24, 0x30	; 48
    d494:	9b e0       	ldi	r25, 0x0B	; 11
    d496:	20 e4       	ldi	r18, 0x40	; 64
    d498:	3c e9       	ldi	r19, 0x9C	; 156
    d49a:	fc 01       	movw	r30, r24
    d49c:	24 87       	std	Z+12, r18	; 0x0c
    d49e:	35 87       	std	Z+13, r19	; 0x0d

TCB3.CTRLA = TCB_CLKSEL_DIV2_gc     /* CLK_PER */
    d4a0:	80 e3       	ldi	r24, 0x30	; 48
    d4a2:	9b e0       	ldi	r25, 0x0B	; 11
| 1 << TCB_ENABLE_bp   /* Enable: enabled */
| 0 << TCB_RUNSTDBY_bp /* Run Standby: disabled */
| 0 << TCB_SYNCUPD_bp  /* Synchronize Update: disabled */
| 0 << TCB_CASCADE_bp; /* Cascade Two Timer/Counters: disabled */
    d4a4:	23 e0       	ldi	r18, 0x03	; 3
    d4a6:	fc 01       	movw	r30, r24
    d4a8:	20 83       	st	Z, r18

TCB3.INTFLAGS = TCB_CAPT_bm; /* Clear flag */
    d4aa:	80 e3       	ldi	r24, 0x30	; 48
    d4ac:	9b e0       	ldi	r25, 0x0B	; 11
    d4ae:	21 e0       	ldi	r18, 0x01	; 1
    d4b0:	fc 01       	movw	r30, r24
    d4b2:	26 83       	std	Z+6, r18	; 0x06

	return 0;
    d4b4:	80 e0       	ldi	r24, 0x00	; 0
}
    d4b6:	df 91       	pop	r29
    d4b8:	cf 91       	pop	r28
    d4ba:	08 95       	ret

0000d4bc <util_delay_ms>:


bool util_delay_ms(uint32_t delayValue)
{
    d4bc:	cf 93       	push	r28
    d4be:	df 93       	push	r29
    d4c0:	00 d0       	rcall	.+0      	; 0xd4c2 <util_delay_ms+0x6>
    d4c2:	00 d0       	rcall	.+0      	; 0xd4c4 <util_delay_ms+0x8>
    d4c4:	cd b7       	in	r28, 0x3d	; 61
    d4c6:	de b7       	in	r29, 0x3e	; 62
    d4c8:	69 83       	std	Y+1, r22	; 0x01
    d4ca:	7a 83       	std	Y+2, r23	; 0x02
    d4cc:	8b 83       	std	Y+3, r24	; 0x03
    d4ce:	9c 83       	std	Y+4, r25	; 0x04
	static uint32_t countdownValue=0;
	static bool counting = false;
	
	if(delayValue)
    d4d0:	89 81       	ldd	r24, Y+1	; 0x01
    d4d2:	9a 81       	ldd	r25, Y+2	; 0x02
    d4d4:	ab 81       	ldd	r26, Y+3	; 0x03
    d4d6:	bc 81       	ldd	r27, Y+4	; 0x04
    d4d8:	89 2b       	or	r24, r25
    d4da:	8a 2b       	or	r24, r26
    d4dc:	8b 2b       	or	r24, r27
    d4de:	09 f4       	brne	.+2      	; 0xd4e2 <util_delay_ms+0x26>
    d4e0:	84 c0       	rjmp	.+264    	; 0xd5ea <util_delay_ms+0x12e>
	{
		if(counting)
    d4e2:	80 91 a5 48 	lds	r24, 0x48A5	; 0x8048a5 <_ZZ13util_delay_msE8counting>
    d4e6:	88 23       	and	r24, r24
    d4e8:	09 f4       	brne	.+2      	; 0xd4ec <util_delay_ms+0x30>
    d4ea:	4d c0       	rjmp	.+154    	; 0xd586 <util_delay_ms+0xca>
		{
			if(!g_ms_counter)
    d4ec:	80 91 a1 48 	lds	r24, 0x48A1	; 0x8048a1 <_ZL12g_ms_counter>
    d4f0:	90 91 a2 48 	lds	r25, 0x48A2	; 0x8048a2 <_ZL12g_ms_counter+0x1>
    d4f4:	a0 91 a3 48 	lds	r26, 0x48A3	; 0x8048a3 <_ZL12g_ms_counter+0x2>
    d4f8:	b0 91 a4 48 	lds	r27, 0x48A4	; 0x8048a4 <_ZL12g_ms_counter+0x3>
    d4fc:	89 2b       	or	r24, r25
    d4fe:	8a 2b       	or	r24, r26
    d500:	8b 2b       	or	r24, r27
    d502:	81 f4       	brne	.+32     	; 0xd524 <util_delay_ms+0x68>
			{
				TCB1.INTCTRL = 0 << TCB_CAPT_bp   /* Capture or Timeout: disabled */
    d504:	80 e1       	ldi	r24, 0x10	; 16
    d506:	9b e0       	ldi	r25, 0x0B	; 11
				| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    d508:	fc 01       	movw	r30, r24
    d50a:	15 82       	std	Z+5, r1	; 0x05

				counting = false;
    d50c:	10 92 a5 48 	sts	0x48A5, r1	; 0x8048a5 <_ZZ13util_delay_msE8counting>
				countdownValue = 0;
    d510:	10 92 a6 48 	sts	0x48A6, r1	; 0x8048a6 <_ZZ13util_delay_msE14countdownValue>
    d514:	10 92 a7 48 	sts	0x48A7, r1	; 0x8048a7 <_ZZ13util_delay_msE14countdownValue+0x1>
    d518:	10 92 a8 48 	sts	0x48A8, r1	; 0x8048a8 <_ZZ13util_delay_msE14countdownValue+0x2>
    d51c:	10 92 a9 48 	sts	0x48A9, r1	; 0x8048a9 <_ZZ13util_delay_msE14countdownValue+0x3>
				return(false); /* time expired */
    d520:	80 e0       	ldi	r24, 0x00	; 0
    d522:	81 c0       	rjmp	.+258    	; 0xd626 <util_delay_ms+0x16a>
			}
			else if(delayValue != countdownValue) /* countdown delay changed */
    d524:	80 91 a6 48 	lds	r24, 0x48A6	; 0x8048a6 <_ZZ13util_delay_msE14countdownValue>
    d528:	90 91 a7 48 	lds	r25, 0x48A7	; 0x8048a7 <_ZZ13util_delay_msE14countdownValue+0x1>
    d52c:	a0 91 a8 48 	lds	r26, 0x48A8	; 0x8048a8 <_ZZ13util_delay_msE14countdownValue+0x2>
    d530:	b0 91 a9 48 	lds	r27, 0x48A9	; 0x8048a9 <_ZZ13util_delay_msE14countdownValue+0x3>
    d534:	29 81       	ldd	r18, Y+1	; 0x01
    d536:	3a 81       	ldd	r19, Y+2	; 0x02
    d538:	4b 81       	ldd	r20, Y+3	; 0x03
    d53a:	5c 81       	ldd	r21, Y+4	; 0x04
    d53c:	28 17       	cp	r18, r24
    d53e:	39 07       	cpc	r19, r25
    d540:	4a 07       	cpc	r20, r26
    d542:	5b 07       	cpc	r21, r27
    d544:	09 f4       	brne	.+2      	; 0xd548 <util_delay_ms+0x8c>
    d546:	69 c0       	rjmp	.+210    	; 0xd61a <util_delay_ms+0x15e>
			{
				TCB1.CNT = 0x0000;
    d548:	80 e1       	ldi	r24, 0x10	; 16
    d54a:	9b e0       	ldi	r25, 0x0B	; 11
    d54c:	fc 01       	movw	r30, r24
    d54e:	12 86       	std	Z+10, r1	; 0x0a
    d550:	13 86       	std	Z+11, r1	; 0x0b
				countdownValue = delayValue;
    d552:	89 81       	ldd	r24, Y+1	; 0x01
    d554:	9a 81       	ldd	r25, Y+2	; 0x02
    d556:	ab 81       	ldd	r26, Y+3	; 0x03
    d558:	bc 81       	ldd	r27, Y+4	; 0x04
    d55a:	80 93 a6 48 	sts	0x48A6, r24	; 0x8048a6 <_ZZ13util_delay_msE14countdownValue>
    d55e:	90 93 a7 48 	sts	0x48A7, r25	; 0x8048a7 <_ZZ13util_delay_msE14countdownValue+0x1>
    d562:	a0 93 a8 48 	sts	0x48A8, r26	; 0x8048a8 <_ZZ13util_delay_msE14countdownValue+0x2>
    d566:	b0 93 a9 48 	sts	0x48A9, r27	; 0x8048a9 <_ZZ13util_delay_msE14countdownValue+0x3>
				g_ms_counter = delayValue;
    d56a:	89 81       	ldd	r24, Y+1	; 0x01
    d56c:	9a 81       	ldd	r25, Y+2	; 0x02
    d56e:	ab 81       	ldd	r26, Y+3	; 0x03
    d570:	bc 81       	ldd	r27, Y+4	; 0x04
    d572:	80 93 a1 48 	sts	0x48A1, r24	; 0x8048a1 <_ZL12g_ms_counter>
    d576:	90 93 a2 48 	sts	0x48A2, r25	; 0x8048a2 <_ZL12g_ms_counter+0x1>
    d57a:	a0 93 a3 48 	sts	0x48A3, r26	; 0x8048a3 <_ZL12g_ms_counter+0x2>
    d57e:	b0 93 a4 48 	sts	0x48A4, r27	; 0x8048a4 <_ZL12g_ms_counter+0x3>
				return(false);
    d582:	80 e0       	ldi	r24, 0x00	; 0
    d584:	50 c0       	rjmp	.+160    	; 0xd626 <util_delay_ms+0x16a>
			}
		}
		else if(delayValue != countdownValue)
    d586:	80 91 a6 48 	lds	r24, 0x48A6	; 0x8048a6 <_ZZ13util_delay_msE14countdownValue>
    d58a:	90 91 a7 48 	lds	r25, 0x48A7	; 0x8048a7 <_ZZ13util_delay_msE14countdownValue+0x1>
    d58e:	a0 91 a8 48 	lds	r26, 0x48A8	; 0x8048a8 <_ZZ13util_delay_msE14countdownValue+0x2>
    d592:	b0 91 a9 48 	lds	r27, 0x48A9	; 0x8048a9 <_ZZ13util_delay_msE14countdownValue+0x3>
    d596:	29 81       	ldd	r18, Y+1	; 0x01
    d598:	3a 81       	ldd	r19, Y+2	; 0x02
    d59a:	4b 81       	ldd	r20, Y+3	; 0x03
    d59c:	5c 81       	ldd	r21, Y+4	; 0x04
    d59e:	28 17       	cp	r18, r24
    d5a0:	39 07       	cpc	r19, r25
    d5a2:	4a 07       	cpc	r20, r26
    d5a4:	5b 07       	cpc	r21, r27
    d5a6:	c9 f1       	breq	.+114    	; 0xd61a <util_delay_ms+0x15e>
		{
			TCB1.CNT = 0x0000;
    d5a8:	80 e1       	ldi	r24, 0x10	; 16
    d5aa:	9b e0       	ldi	r25, 0x0B	; 11
    d5ac:	fc 01       	movw	r30, r24
    d5ae:	12 86       	std	Z+10, r1	; 0x0a
    d5b0:	13 86       	std	Z+11, r1	; 0x0b
			countdownValue = delayValue;
    d5b2:	89 81       	ldd	r24, Y+1	; 0x01
    d5b4:	9a 81       	ldd	r25, Y+2	; 0x02
    d5b6:	ab 81       	ldd	r26, Y+3	; 0x03
    d5b8:	bc 81       	ldd	r27, Y+4	; 0x04
    d5ba:	80 93 a6 48 	sts	0x48A6, r24	; 0x8048a6 <_ZZ13util_delay_msE14countdownValue>
    d5be:	90 93 a7 48 	sts	0x48A7, r25	; 0x8048a7 <_ZZ13util_delay_msE14countdownValue+0x1>
    d5c2:	a0 93 a8 48 	sts	0x48A8, r26	; 0x8048a8 <_ZZ13util_delay_msE14countdownValue+0x2>
    d5c6:	b0 93 a9 48 	sts	0x48A9, r27	; 0x8048a9 <_ZZ13util_delay_msE14countdownValue+0x3>
			g_ms_counter = delayValue;
    d5ca:	89 81       	ldd	r24, Y+1	; 0x01
    d5cc:	9a 81       	ldd	r25, Y+2	; 0x02
    d5ce:	ab 81       	ldd	r26, Y+3	; 0x03
    d5d0:	bc 81       	ldd	r27, Y+4	; 0x04
    d5d2:	80 93 a1 48 	sts	0x48A1, r24	; 0x8048a1 <_ZL12g_ms_counter>
    d5d6:	90 93 a2 48 	sts	0x48A2, r25	; 0x8048a2 <_ZL12g_ms_counter+0x1>
    d5da:	a0 93 a3 48 	sts	0x48A3, r26	; 0x8048a3 <_ZL12g_ms_counter+0x2>
    d5de:	b0 93 a4 48 	sts	0x48A4, r27	; 0x8048a4 <_ZL12g_ms_counter+0x3>
			counting = true;
    d5e2:	81 e0       	ldi	r24, 0x01	; 1
    d5e4:	80 93 a5 48 	sts	0x48A5, r24	; 0x8048a5 <_ZZ13util_delay_msE8counting>
    d5e8:	18 c0       	rjmp	.+48     	; 0xd61a <util_delay_ms+0x15e>
		}
	}
	else
	{
		TCB1.INTCTRL = 0 << TCB_CAPT_bp   /* Capture or Timeout: disabled */
    d5ea:	80 e1       	ldi	r24, 0x10	; 16
    d5ec:	9b e0       	ldi	r25, 0x0B	; 11
		| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    d5ee:	fc 01       	movw	r30, r24
    d5f0:	15 82       	std	Z+5, r1	; 0x05

		counting = false;
    d5f2:	10 92 a5 48 	sts	0x48A5, r1	; 0x8048a5 <_ZZ13util_delay_msE8counting>
		countdownValue = 0;
    d5f6:	10 92 a6 48 	sts	0x48A6, r1	; 0x8048a6 <_ZZ13util_delay_msE14countdownValue>
    d5fa:	10 92 a7 48 	sts	0x48A7, r1	; 0x8048a7 <_ZZ13util_delay_msE14countdownValue+0x1>
    d5fe:	10 92 a8 48 	sts	0x48A8, r1	; 0x8048a8 <_ZZ13util_delay_msE14countdownValue+0x2>
    d602:	10 92 a9 48 	sts	0x48A9, r1	; 0x8048a9 <_ZZ13util_delay_msE14countdownValue+0x3>
		g_ms_counter = 0;
    d606:	10 92 a1 48 	sts	0x48A1, r1	; 0x8048a1 <_ZL12g_ms_counter>
    d60a:	10 92 a2 48 	sts	0x48A2, r1	; 0x8048a2 <_ZL12g_ms_counter+0x1>
    d60e:	10 92 a3 48 	sts	0x48A3, r1	; 0x8048a3 <_ZL12g_ms_counter+0x2>
    d612:	10 92 a4 48 	sts	0x48A4, r1	; 0x8048a4 <_ZL12g_ms_counter+0x3>
		return(false); /* timer reset */
    d616:	80 e0       	ldi	r24, 0x00	; 0
    d618:	06 c0       	rjmp	.+12     	; 0xd626 <util_delay_ms+0x16a>
	}
	
	TCB1.INTCTRL = 1 << TCB_CAPT_bp   /* Capture or Timeout: enabled */
    d61a:	80 e1       	ldi	r24, 0x10	; 16
    d61c:	9b e0       	ldi	r25, 0x0B	; 11
	| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    d61e:	21 e0       	ldi	r18, 0x01	; 1
    d620:	fc 01       	movw	r30, r24
    d622:	25 83       	std	Z+5, r18	; 0x05
	
	return(true);
    d624:	81 e0       	ldi	r24, 0x01	; 1
}
    d626:	24 96       	adiw	r28, 0x04	; 4
    d628:	cd bf       	out	0x3d, r28	; 61
    d62a:	de bf       	out	0x3e, r29	; 62
    d62c:	df 91       	pop	r29
    d62e:	cf 91       	pop	r28
    d630:	08 95       	ret

0000d632 <__vector_30>:

ISR(TCB2_INT_vect)
{
    d632:	1f 92       	push	r1
    d634:	0f 92       	push	r0
    d636:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    d63a:	0f 92       	push	r0
    d63c:	11 24       	eor	r1, r1
    d63e:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    d642:	0f 92       	push	r0
    d644:	2f 93       	push	r18
    d646:	8f 93       	push	r24
    d648:	9f 93       	push	r25
    d64a:	ef 93       	push	r30
    d64c:	ff 93       	push	r31
    d64e:	cf 93       	push	r28
    d650:	df 93       	push	r29
    d652:	cd b7       	in	r28, 0x3d	; 61
    d654:	de b7       	in	r29, 0x3e	; 62
	if(TCB2.INTFLAGS & TCB_CAPT_bm)
    d656:	80 e2       	ldi	r24, 0x20	; 32
    d658:	9b e0       	ldi	r25, 0x0B	; 11
    d65a:	fc 01       	movw	r30, r24
    d65c:	86 81       	ldd	r24, Z+6	; 0x06
    d65e:	88 2f       	mov	r24, r24
    d660:	90 e0       	ldi	r25, 0x00	; 0
    d662:	81 70       	andi	r24, 0x01	; 1
    d664:	99 27       	eor	r25, r25
    d666:	21 e0       	ldi	r18, 0x01	; 1
    d668:	89 2b       	or	r24, r25
    d66a:	09 f4       	brne	.+2      	; 0xd66e <__vector_30+0x3c>
    d66c:	20 e0       	ldi	r18, 0x00	; 0
    d66e:	22 23       	and	r18, r18
    d670:	c9 f1       	breq	.+114    	; 0xd6e4 <__vector_30+0xb2>
	{
		if(g_i2c1_timeout_ticks) g_i2c1_timeout_ticks--;
    d672:	80 91 3d 40 	lds	r24, 0x403D	; 0x80403d <g_i2c1_timeout_ticks>
    d676:	90 91 3e 40 	lds	r25, 0x403E	; 0x80403e <g_i2c1_timeout_ticks+0x1>
    d67a:	21 e0       	ldi	r18, 0x01	; 1
    d67c:	89 2b       	or	r24, r25
    d67e:	09 f4       	brne	.+2      	; 0xd682 <__vector_30+0x50>
    d680:	20 e0       	ldi	r18, 0x00	; 0
    d682:	22 23       	and	r18, r18
    d684:	49 f0       	breq	.+18     	; 0xd698 <__vector_30+0x66>
    d686:	80 91 3d 40 	lds	r24, 0x403D	; 0x80403d <g_i2c1_timeout_ticks>
    d68a:	90 91 3e 40 	lds	r25, 0x403E	; 0x80403e <g_i2c1_timeout_ticks+0x1>
    d68e:	01 97       	sbiw	r24, 0x01	; 1
    d690:	80 93 3d 40 	sts	0x403D, r24	; 0x80403d <g_i2c1_timeout_ticks>
    d694:	90 93 3e 40 	sts	0x403E, r25	; 0x80403e <g_i2c1_timeout_ticks+0x1>
		if(g_i2c0_timeout_ticks) g_i2c0_timeout_ticks--;
    d698:	80 91 3b 40 	lds	r24, 0x403B	; 0x80403b <g_i2c0_timeout_ticks>
    d69c:	90 91 3c 40 	lds	r25, 0x403C	; 0x80403c <g_i2c0_timeout_ticks+0x1>
    d6a0:	21 e0       	ldi	r18, 0x01	; 1
    d6a2:	89 2b       	or	r24, r25
    d6a4:	09 f4       	brne	.+2      	; 0xd6a8 <__vector_30+0x76>
    d6a6:	20 e0       	ldi	r18, 0x00	; 0
    d6a8:	22 23       	and	r18, r18
    d6aa:	49 f0       	breq	.+18     	; 0xd6be <__vector_30+0x8c>
    d6ac:	80 91 3b 40 	lds	r24, 0x403B	; 0x80403b <g_i2c0_timeout_ticks>
    d6b0:	90 91 3c 40 	lds	r25, 0x403C	; 0x80403c <g_i2c0_timeout_ticks+0x1>
    d6b4:	01 97       	sbiw	r24, 0x01	; 1
    d6b6:	80 93 3b 40 	sts	0x403B, r24	; 0x80403b <g_i2c0_timeout_ticks>
    d6ba:	90 93 3c 40 	sts	0x403C, r25	; 0x80403c <g_i2c0_timeout_ticks+0x1>
		if(g_serial_timeout_ticks) g_serial_timeout_ticks--;
    d6be:	80 91 48 40 	lds	r24, 0x4048	; 0x804048 <g_serial_timeout_ticks>
    d6c2:	90 91 49 40 	lds	r25, 0x4049	; 0x804049 <g_serial_timeout_ticks+0x1>
    d6c6:	21 e0       	ldi	r18, 0x01	; 1
    d6c8:	89 2b       	or	r24, r25
    d6ca:	09 f4       	brne	.+2      	; 0xd6ce <__vector_30+0x9c>
    d6cc:	20 e0       	ldi	r18, 0x00	; 0
    d6ce:	22 23       	and	r18, r18
    d6d0:	49 f0       	breq	.+18     	; 0xd6e4 <__vector_30+0xb2>
    d6d2:	80 91 48 40 	lds	r24, 0x4048	; 0x804048 <g_serial_timeout_ticks>
    d6d6:	90 91 49 40 	lds	r25, 0x4049	; 0x804049 <g_serial_timeout_ticks+0x1>
    d6da:	01 97       	sbiw	r24, 0x01	; 1
    d6dc:	80 93 48 40 	sts	0x4048, r24	; 0x804048 <g_serial_timeout_ticks>
    d6e0:	90 93 49 40 	sts	0x4049, r25	; 0x804049 <g_serial_timeout_ticks+0x1>
	}
	TCB2.INTFLAGS = TCB_CAPT_bm | TCB_OVF_bm; /* Clear flags */
    d6e4:	80 e2       	ldi	r24, 0x20	; 32
    d6e6:	9b e0       	ldi	r25, 0x0B	; 11
    d6e8:	23 e0       	ldi	r18, 0x03	; 3
    d6ea:	fc 01       	movw	r30, r24
    d6ec:	26 83       	std	Z+6, r18	; 0x06
}
    d6ee:	00 00       	nop
    d6f0:	df 91       	pop	r29
    d6f2:	cf 91       	pop	r28
    d6f4:	ff 91       	pop	r31
    d6f6:	ef 91       	pop	r30
    d6f8:	9f 91       	pop	r25
    d6fa:	8f 91       	pop	r24
    d6fc:	2f 91       	pop	r18
    d6fe:	0f 90       	pop	r0
    d700:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    d704:	0f 90       	pop	r0
    d706:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    d70a:	0f 90       	pop	r0
    d70c:	1f 90       	pop	r1
    d70e:	18 95       	reti

0000d710 <__vector_13>:

/**
One millisecond utility counter based on CPU clock.
*/
ISR(TCB1_INT_vect)
{
    d710:	1f 92       	push	r1
    d712:	0f 92       	push	r0
    d714:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    d718:	0f 92       	push	r0
    d71a:	11 24       	eor	r1, r1
    d71c:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    d720:	0f 92       	push	r0
    d722:	2f 93       	push	r18
    d724:	8f 93       	push	r24
    d726:	9f 93       	push	r25
    d728:	af 93       	push	r26
    d72a:	bf 93       	push	r27
    d72c:	ef 93       	push	r30
    d72e:	ff 93       	push	r31
    d730:	cf 93       	push	r28
    d732:	df 93       	push	r29
    d734:	cd b7       	in	r28, 0x3d	; 61
    d736:	de b7       	in	r29, 0x3e	; 62
    if(TCB1.INTFLAGS & TCB_CAPT_bm)
    d738:	80 e1       	ldi	r24, 0x10	; 16
    d73a:	9b e0       	ldi	r25, 0x0B	; 11
    d73c:	fc 01       	movw	r30, r24
    d73e:	86 81       	ldd	r24, Z+6	; 0x06
    d740:	88 2f       	mov	r24, r24
    d742:	90 e0       	ldi	r25, 0x00	; 0
    d744:	81 70       	andi	r24, 0x01	; 1
    d746:	99 27       	eor	r25, r25
    d748:	21 e0       	ldi	r18, 0x01	; 1
    d74a:	89 2b       	or	r24, r25
    d74c:	09 f4       	brne	.+2      	; 0xd750 <__vector_13+0x40>
    d74e:	20 e0       	ldi	r18, 0x00	; 0
    d750:	22 23       	and	r18, r18
    d752:	21 f1       	breq	.+72     	; 0xd79c <__vector_13+0x8c>
    {
		if(g_ms_counter) /* check for 1-second interval */
    d754:	80 91 a1 48 	lds	r24, 0x48A1	; 0x8048a1 <_ZL12g_ms_counter>
    d758:	90 91 a2 48 	lds	r25, 0x48A2	; 0x8048a2 <_ZL12g_ms_counter+0x1>
    d75c:	a0 91 a3 48 	lds	r26, 0x48A3	; 0x8048a3 <_ZL12g_ms_counter+0x2>
    d760:	b0 91 a4 48 	lds	r27, 0x48A4	; 0x8048a4 <_ZL12g_ms_counter+0x3>
    d764:	89 2b       	or	r24, r25
    d766:	8a 2b       	or	r24, r26
    d768:	8b 2b       	or	r24, r27
    d76a:	a1 f0       	breq	.+40     	; 0xd794 <__vector_13+0x84>
		{
			g_ms_counter--;	
    d76c:	80 91 a1 48 	lds	r24, 0x48A1	; 0x8048a1 <_ZL12g_ms_counter>
    d770:	90 91 a2 48 	lds	r25, 0x48A2	; 0x8048a2 <_ZL12g_ms_counter+0x1>
    d774:	a0 91 a3 48 	lds	r26, 0x48A3	; 0x8048a3 <_ZL12g_ms_counter+0x2>
    d778:	b0 91 a4 48 	lds	r27, 0x48A4	; 0x8048a4 <_ZL12g_ms_counter+0x3>
    d77c:	01 97       	sbiw	r24, 0x01	; 1
    d77e:	a1 09       	sbc	r26, r1
    d780:	b1 09       	sbc	r27, r1
    d782:	80 93 a1 48 	sts	0x48A1, r24	; 0x8048a1 <_ZL12g_ms_counter>
    d786:	90 93 a2 48 	sts	0x48A2, r25	; 0x8048a2 <_ZL12g_ms_counter+0x1>
    d78a:	a0 93 a3 48 	sts	0x48A3, r26	; 0x8048a3 <_ZL12g_ms_counter+0x2>
    d78e:	b0 93 a4 48 	sts	0x48A4, r27	; 0x8048a4 <_ZL12g_ms_counter+0x3>
    d792:	04 c0       	rjmp	.+8      	; 0xd79c <__vector_13+0x8c>
		}
		else
		{
			TCB1.INTCTRL = 0 << TCB_CAPT_bp   /* Capture or Timeout: disabled */
    d794:	80 e1       	ldi	r24, 0x10	; 16
    d796:	9b e0       	ldi	r25, 0x0B	; 11
			| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    d798:	fc 01       	movw	r30, r24
    d79a:	15 82       	std	Z+5, r1	; 0x05
		}
    }

    TCB1.INTFLAGS = TCB_CAPT_bm | TCB_OVF_bm; /* clear interrupt flags */
    d79c:	80 e1       	ldi	r24, 0x10	; 16
    d79e:	9b e0       	ldi	r25, 0x0B	; 11
    d7a0:	23 e0       	ldi	r18, 0x03	; 3
    d7a2:	fc 01       	movw	r30, r24
    d7a4:	26 83       	std	Z+6, r18	; 0x06
}
    d7a6:	00 00       	nop
    d7a8:	df 91       	pop	r29
    d7aa:	cf 91       	pop	r28
    d7ac:	ff 91       	pop	r31
    d7ae:	ef 91       	pop	r30
    d7b0:	bf 91       	pop	r27
    d7b2:	af 91       	pop	r26
    d7b4:	9f 91       	pop	r25
    d7b6:	8f 91       	pop	r24
    d7b8:	2f 91       	pop	r18
    d7ba:	0f 90       	pop	r0
    d7bc:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    d7c0:	0f 90       	pop	r0
    d7c2:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    d7c6:	0f 90       	pop	r0
    d7c8:	1f 90       	pop	r1
    d7ca:	18 95       	reti

0000d7cc <TIMERB_sleep>:

int8_t TIMERB_sleep()
{
    d7cc:	cf 93       	push	r28
    d7ce:	df 93       	push	r29
    d7d0:	cd b7       	in	r28, 0x3d	; 61
    d7d2:	de b7       	in	r29, 0x3e	; 62
	TCB0.INTCTRL = 0;   /* Capture or Timeout: disable interrupts */
    d7d4:	80 e0       	ldi	r24, 0x00	; 0
    d7d6:	9b e0       	ldi	r25, 0x0B	; 11
    d7d8:	fc 01       	movw	r30, r24
    d7da:	15 82       	std	Z+5, r1	; 0x05
	TCB0.CTRLA = 0; /* Disable timer */
    d7dc:	80 e0       	ldi	r24, 0x00	; 0
    d7de:	9b e0       	ldi	r25, 0x0B	; 11
    d7e0:	fc 01       	movw	r30, r24
    d7e2:	10 82       	st	Z, r1

	/********************************************************************************/

	TCB1.INTCTRL = 0; /* OverFlow Interrupt: disabled */
    d7e4:	80 e1       	ldi	r24, 0x10	; 16
    d7e6:	9b e0       	ldi	r25, 0x0B	; 11
    d7e8:	fc 01       	movw	r30, r24
    d7ea:	15 82       	std	Z+5, r1	; 0x05
	TCB1.CTRLA = 0; /* Disable timer */
    d7ec:	80 e1       	ldi	r24, 0x10	; 16
    d7ee:	9b e0       	ldi	r25, 0x0B	; 11
    d7f0:	fc 01       	movw	r30, r24
    d7f2:	10 82       	st	Z, r1

	/********************************************************************************/

	TCB2.INTCTRL = 0; /* OverFlow Interrupt: disabled */
    d7f4:	80 e2       	ldi	r24, 0x20	; 32
    d7f6:	9b e0       	ldi	r25, 0x0B	; 11
    d7f8:	fc 01       	movw	r30, r24
    d7fa:	15 82       	std	Z+5, r1	; 0x05
	TCB2.CTRLA = 0; /* Disable timer */
    d7fc:	80 e2       	ldi	r24, 0x20	; 32
    d7fe:	9b e0       	ldi	r25, 0x0B	; 11
    d800:	fc 01       	movw	r30, r24
    d802:	10 82       	st	Z, r1

	/********************************************************************************/

	TCB3.INTCTRL = 0; /* OverFlow Interrupt: disabled */
    d804:	80 e3       	ldi	r24, 0x30	; 48
    d806:	9b e0       	ldi	r25, 0x0B	; 11
    d808:	fc 01       	movw	r30, r24
    d80a:	15 82       	std	Z+5, r1	; 0x05
	TCB3.CTRLA = 0; /* Disable timer */
    d80c:	80 e3       	ldi	r24, 0x30	; 48
    d80e:	9b e0       	ldi	r25, 0x0B	; 11
    d810:	fc 01       	movw	r30, r24
    d812:	10 82       	st	Z, r1


	return 0;
    d814:	80 e0       	ldi	r24, 0x00	; 0
}
    d816:	df 91       	pop	r29
    d818:	cf 91       	pop	r28
    d81a:	08 95       	ret

0000d81c <PORTA_set_pin_level>:
 * \param[in] pin       The pin number within port
 * \param[in] level true  = Pin level set to "high" state
 *                  false = Pin level set to "low" state
 */
static inline void PORTA_set_pin_level(const uint8_t pin, const bool level)
{
    d81c:	cf 93       	push	r28
    d81e:	df 93       	push	r29
    d820:	00 d0       	rcall	.+0      	; 0xd822 <PORTA_set_pin_level+0x6>
    d822:	cd b7       	in	r28, 0x3d	; 61
    d824:	de b7       	in	r29, 0x3e	; 62
    d826:	89 83       	std	Y+1, r24	; 0x01
    d828:	6a 83       	std	Y+2, r22	; 0x02
	if (level == true) {
    d82a:	8a 81       	ldd	r24, Y+2	; 0x02
    d82c:	88 23       	and	r24, r24
    d82e:	a9 f0       	breq	.+42     	; 0xd85a <PORTA_set_pin_level+0x3e>
		VPORTA.OUT |= (1 << pin);
    d830:	20 e0       	ldi	r18, 0x00	; 0
    d832:	30 e0       	ldi	r19, 0x00	; 0
    d834:	80 e0       	ldi	r24, 0x00	; 0
    d836:	90 e0       	ldi	r25, 0x00	; 0
    d838:	fc 01       	movw	r30, r24
    d83a:	81 81       	ldd	r24, Z+1	; 0x01
    d83c:	68 2f       	mov	r22, r24
    d83e:	89 81       	ldd	r24, Y+1	; 0x01
    d840:	48 2f       	mov	r20, r24
    d842:	50 e0       	ldi	r21, 0x00	; 0
    d844:	81 e0       	ldi	r24, 0x01	; 1
    d846:	90 e0       	ldi	r25, 0x00	; 0
    d848:	02 c0       	rjmp	.+4      	; 0xd84e <PORTA_set_pin_level+0x32>
    d84a:	88 0f       	add	r24, r24
    d84c:	99 1f       	adc	r25, r25
    d84e:	4a 95       	dec	r20
    d850:	e2 f7       	brpl	.-8      	; 0xd84a <PORTA_set_pin_level+0x2e>
    d852:	86 2b       	or	r24, r22
    d854:	f9 01       	movw	r30, r18
    d856:	81 83       	std	Z+1, r24	; 0x01
	} else {
		VPORTA.OUT &= ~(1 << pin);
	}
}
    d858:	15 c0       	rjmp	.+42     	; 0xd884 <PORTA_set_pin_level+0x68>
static inline void PORTA_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTA.OUT |= (1 << pin);
	} else {
		VPORTA.OUT &= ~(1 << pin);
    d85a:	20 e0       	ldi	r18, 0x00	; 0
    d85c:	30 e0       	ldi	r19, 0x00	; 0
    d85e:	80 e0       	ldi	r24, 0x00	; 0
    d860:	90 e0       	ldi	r25, 0x00	; 0
    d862:	fc 01       	movw	r30, r24
    d864:	81 81       	ldd	r24, Z+1	; 0x01
    d866:	68 2f       	mov	r22, r24
    d868:	89 81       	ldd	r24, Y+1	; 0x01
    d86a:	48 2f       	mov	r20, r24
    d86c:	50 e0       	ldi	r21, 0x00	; 0
    d86e:	81 e0       	ldi	r24, 0x01	; 1
    d870:	90 e0       	ldi	r25, 0x00	; 0
    d872:	02 c0       	rjmp	.+4      	; 0xd878 <PORTA_set_pin_level+0x5c>
    d874:	88 0f       	add	r24, r24
    d876:	99 1f       	adc	r25, r25
    d878:	4a 95       	dec	r20
    d87a:	e2 f7       	brpl	.-8      	; 0xd874 <PORTA_set_pin_level+0x58>
    d87c:	80 95       	com	r24
    d87e:	86 23       	and	r24, r22
    d880:	f9 01       	movw	r30, r18
    d882:	81 83       	std	Z+1, r24	; 0x01
	}
}
    d884:	00 00       	nop
    d886:	0f 90       	pop	r0
    d888:	0f 90       	pop	r0
    d88a:	df 91       	pop	r29
    d88c:	cf 91       	pop	r28
    d88e:	08 95       	ret

0000d890 <PORTB_set_pin_level>:
 * \param[in] pin       The pin number within port
 * \param[in] level true  = Pin level set to "high" state
 *                  false = Pin level set to "low" state
 */
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
    d890:	cf 93       	push	r28
    d892:	df 93       	push	r29
    d894:	00 d0       	rcall	.+0      	; 0xd896 <PORTB_set_pin_level+0x6>
    d896:	cd b7       	in	r28, 0x3d	; 61
    d898:	de b7       	in	r29, 0x3e	; 62
    d89a:	89 83       	std	Y+1, r24	; 0x01
    d89c:	6a 83       	std	Y+2, r22	; 0x02
	if (level == true) {
    d89e:	8a 81       	ldd	r24, Y+2	; 0x02
    d8a0:	88 23       	and	r24, r24
    d8a2:	a9 f0       	breq	.+42     	; 0xd8ce <PORTB_set_pin_level+0x3e>
		VPORTB.OUT |= (1 << pin);
    d8a4:	84 e0       	ldi	r24, 0x04	; 4
    d8a6:	90 e0       	ldi	r25, 0x00	; 0
    d8a8:	24 e0       	ldi	r18, 0x04	; 4
    d8aa:	30 e0       	ldi	r19, 0x00	; 0
    d8ac:	f9 01       	movw	r30, r18
    d8ae:	21 81       	ldd	r18, Z+1	; 0x01
    d8b0:	62 2f       	mov	r22, r18
    d8b2:	29 81       	ldd	r18, Y+1	; 0x01
    d8b4:	42 2f       	mov	r20, r18
    d8b6:	50 e0       	ldi	r21, 0x00	; 0
    d8b8:	21 e0       	ldi	r18, 0x01	; 1
    d8ba:	30 e0       	ldi	r19, 0x00	; 0
    d8bc:	02 c0       	rjmp	.+4      	; 0xd8c2 <PORTB_set_pin_level+0x32>
    d8be:	22 0f       	add	r18, r18
    d8c0:	33 1f       	adc	r19, r19
    d8c2:	4a 95       	dec	r20
    d8c4:	e2 f7       	brpl	.-8      	; 0xd8be <PORTB_set_pin_level+0x2e>
    d8c6:	26 2b       	or	r18, r22
    d8c8:	fc 01       	movw	r30, r24
    d8ca:	21 83       	std	Z+1, r18	; 0x01
	} else {
		VPORTB.OUT &= ~(1 << pin);
	}
}
    d8cc:	15 c0       	rjmp	.+42     	; 0xd8f8 <PORTB_set_pin_level+0x68>
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTB.OUT |= (1 << pin);
	} else {
		VPORTB.OUT &= ~(1 << pin);
    d8ce:	84 e0       	ldi	r24, 0x04	; 4
    d8d0:	90 e0       	ldi	r25, 0x00	; 0
    d8d2:	24 e0       	ldi	r18, 0x04	; 4
    d8d4:	30 e0       	ldi	r19, 0x00	; 0
    d8d6:	f9 01       	movw	r30, r18
    d8d8:	21 81       	ldd	r18, Z+1	; 0x01
    d8da:	62 2f       	mov	r22, r18
    d8dc:	29 81       	ldd	r18, Y+1	; 0x01
    d8de:	42 2f       	mov	r20, r18
    d8e0:	50 e0       	ldi	r21, 0x00	; 0
    d8e2:	21 e0       	ldi	r18, 0x01	; 1
    d8e4:	30 e0       	ldi	r19, 0x00	; 0
    d8e6:	02 c0       	rjmp	.+4      	; 0xd8ec <PORTB_set_pin_level+0x5c>
    d8e8:	22 0f       	add	r18, r18
    d8ea:	33 1f       	adc	r19, r19
    d8ec:	4a 95       	dec	r20
    d8ee:	e2 f7       	brpl	.-8      	; 0xd8e8 <PORTB_set_pin_level+0x58>
    d8f0:	20 95       	com	r18
    d8f2:	26 23       	and	r18, r22
    d8f4:	fc 01       	movw	r30, r24
    d8f6:	21 83       	std	Z+1, r18	; 0x01
	}
}
    d8f8:	00 00       	nop
    d8fa:	0f 90       	pop	r0
    d8fc:	0f 90       	pop	r0
    d8fe:	df 91       	pop	r29
    d900:	cf 91       	pop	r28
    d902:	08 95       	ret

0000d904 <_Z14txSetFrequencyPmb>:
 *       This function sets the VFO frequency (CLK0 of the Si5351) based on the intended frequency passed in by the parameter (freq),
 *       and the VFO configuration in effect. The VFO  frequency might be above or below the intended  frequency, depending on the VFO
 *       configuration setting in effect for the radio band of the frequency.
 */
	bool txSetFrequency(Frequency_Hz *freq, bool leaveClockOff)
	{
    d904:	cf 93       	push	r28
    d906:	df 93       	push	r29
    d908:	00 d0       	rcall	.+0      	; 0xd90a <_Z14txSetFrequencyPmb+0x6>
    d90a:	00 d0       	rcall	.+0      	; 0xd90c <_Z14txSetFrequencyPmb+0x8>
    d90c:	cd b7       	in	r28, 0x3d	; 61
    d90e:	de b7       	in	r29, 0x3e	; 62
    d910:	8a 83       	std	Y+2, r24	; 0x02
    d912:	9b 83       	std	Y+3, r25	; 0x03
    d914:	6c 83       	std	Y+4, r22	; 0x04
		bool err = true;
    d916:	81 e0       	ldi	r24, 0x01	; 1
    d918:	89 83       	std	Y+1, r24	; 0x01

		if(!freq) return(err);
    d91a:	8a 81       	ldd	r24, Y+2	; 0x02
    d91c:	9b 81       	ldd	r25, Y+3	; 0x03
    d91e:	89 2b       	or	r24, r25
    d920:	11 f4       	brne	.+4      	; 0xd926 <_Z14txSetFrequencyPmb+0x22>
    d922:	89 81       	ldd	r24, Y+1	; 0x01
    d924:	3b c0       	rjmp	.+118    	; 0xd99c <_Z14txSetFrequencyPmb+0x98>
		
		if((*freq < TX_MAXIMUM_80M_FREQUENCY) && (*freq > TX_MINIMUM_80M_FREQUENCY))    /* 80m */
    d926:	8a 81       	ldd	r24, Y+2	; 0x02
    d928:	9b 81       	ldd	r25, Y+3	; 0x03
    d92a:	fc 01       	movw	r30, r24
    d92c:	80 81       	ld	r24, Z
    d92e:	91 81       	ldd	r25, Z+1	; 0x01
    d930:	a2 81       	ldd	r26, Z+2	; 0x02
    d932:	b3 81       	ldd	r27, Z+3	; 0x03
    d934:	81 15       	cp	r24, r1
    d936:	99 40       	sbci	r25, 0x09	; 9
    d938:	ad 43       	sbci	r26, 0x3D	; 61
    d93a:	b1 05       	cpc	r27, r1
    d93c:	70 f5       	brcc	.+92     	; 0xd99a <_Z14txSetFrequencyPmb+0x96>
    d93e:	8a 81       	ldd	r24, Y+2	; 0x02
    d940:	9b 81       	ldd	r25, Y+3	; 0x03
    d942:	fc 01       	movw	r30, r24
    d944:	80 81       	ld	r24, Z
    d946:	91 81       	ldd	r25, Z+1	; 0x01
    d948:	a2 81       	ldd	r26, Z+2	; 0x02
    d94a:	b3 81       	ldd	r27, Z+3	; 0x03
    d94c:	81 3e       	cpi	r24, 0xE1	; 225
    d94e:	97 46       	sbci	r25, 0x67	; 103
    d950:	a5 43       	sbci	r26, 0x35	; 53
    d952:	b1 05       	cpc	r27, r1
    d954:	10 f1       	brcs	.+68     	; 0xd99a <_Z14txSetFrequencyPmb+0x96>
		{
			if(!si5351_set_freq(*freq, TX_CLOCK_HF_0, leaveClockOff))
    d956:	8a 81       	ldd	r24, Y+2	; 0x02
    d958:	9b 81       	ldd	r25, Y+3	; 0x03
    d95a:	fc 01       	movw	r30, r24
    d95c:	80 81       	ld	r24, Z
    d95e:	91 81       	ldd	r25, Z+1	; 0x01
    d960:	a2 81       	ldd	r26, Z+2	; 0x02
    d962:	b3 81       	ldd	r27, Z+3	; 0x03
    d964:	2c 81       	ldd	r18, Y+4	; 0x04
    d966:	41 e0       	ldi	r20, 0x01	; 1
    d968:	bc 01       	movw	r22, r24
    d96a:	cd 01       	movw	r24, r26
    d96c:	0e 94 58 60 	call	0xc0b0	; 0xc0b0 <si5351_set_freq>
    d970:	98 2f       	mov	r25, r24
    d972:	81 e0       	ldi	r24, 0x01	; 1
    d974:	89 27       	eor	r24, r25
    d976:	88 23       	and	r24, r24
    d978:	81 f0       	breq	.+32     	; 0xd99a <_Z14txSetFrequencyPmb+0x96>
			{
				g_80m_frequency = *freq;
    d97a:	8a 81       	ldd	r24, Y+2	; 0x02
    d97c:	9b 81       	ldd	r25, Y+3	; 0x03
    d97e:	fc 01       	movw	r30, r24
    d980:	80 81       	ld	r24, Z
    d982:	91 81       	ldd	r25, Z+1	; 0x01
    d984:	a2 81       	ldd	r26, Z+2	; 0x02
    d986:	b3 81       	ldd	r27, Z+3	; 0x03
    d988:	80 93 50 40 	sts	0x4050, r24	; 0x804050 <g_80m_frequency>
    d98c:	90 93 51 40 	sts	0x4051, r25	; 0x804051 <g_80m_frequency+0x1>
    d990:	a0 93 52 40 	sts	0x4052, r26	; 0x804052 <g_80m_frequency+0x2>
    d994:	b0 93 53 40 	sts	0x4053, r27	; 0x804053 <g_80m_frequency+0x3>
				err = false;
    d998:	19 82       	std	Y+1, r1	; 0x01
			}
		}

		return(err);
    d99a:	89 81       	ldd	r24, Y+1	; 0x01
	}
    d99c:	24 96       	adiw	r28, 0x04	; 4
    d99e:	cd bf       	out	0x3d, r28	; 61
    d9a0:	de bf       	out	0x3e, r29	; 62
    d9a2:	df 91       	pop	r29
    d9a4:	cf 91       	pop	r28
    d9a6:	08 95       	ret

0000d9a8 <_Z14txGetFrequencyv>:

	Frequency_Hz txGetFrequency(void)
	{
    d9a8:	cf 93       	push	r28
    d9aa:	df 93       	push	r29
    d9ac:	cd b7       	in	r28, 0x3d	; 61
    d9ae:	de b7       	in	r29, 0x3e	; 62
		return( g_80m_frequency);
    d9b0:	80 91 50 40 	lds	r24, 0x4050	; 0x804050 <g_80m_frequency>
    d9b4:	90 91 51 40 	lds	r25, 0x4051	; 0x804051 <g_80m_frequency+0x1>
    d9b8:	a0 91 52 40 	lds	r26, 0x4052	; 0x804052 <g_80m_frequency+0x2>
    d9bc:	b0 91 53 40 	lds	r27, 0x4053	; 0x804053 <g_80m_frequency+0x3>
	}
    d9c0:	bc 01       	movw	r22, r24
    d9c2:	cd 01       	movw	r24, r26
    d9c4:	df 91       	pop	r29
    d9c6:	cf 91       	pop	r28
    d9c8:	08 95       	ret

0000d9ca <_Z18powerToTransmitterb>:

	EC powerToTransmitter(bool state)
	{
    d9ca:	cf 93       	push	r28
    d9cc:	df 93       	push	r29
    d9ce:	1f 92       	push	r1
    d9d0:	cd b7       	in	r28, 0x3d	; 61
    d9d2:	de b7       	in	r29, 0x3e	; 62
    d9d4:	89 83       	std	Y+1, r24	; 0x01
		g_final_output_setting = state;
    d9d6:	89 81       	ldd	r24, Y+1	; 0x01
    d9d8:	80 93 ac 48 	sts	0x48AC, r24	; 0x8048ac <_ZL22g_final_output_setting>
		
		if(g_rf_output_inhibited)
    d9dc:	80 91 ad 48 	lds	r24, 0x48AD	; 0x8048ad <_ZL21g_rf_output_inhibited>
    d9e0:	88 23       	and	r24, r24
    d9e2:	21 f0       	breq	.+8      	; 0xd9ec <_Z18powerToTransmitterb+0x22>
		{
			final_drain_voltage(OFF);
    d9e4:	80 e0       	ldi	r24, 0x00	; 0
    d9e6:	0e 94 41 6d 	call	0xda82	; 0xda82 <_Z19final_drain_voltageb>
    d9ea:	03 c0       	rjmp	.+6      	; 0xd9f2 <_Z18powerToTransmitterb+0x28>
		}
		else
		{
			final_drain_voltage(state);
    d9ec:	89 81       	ldd	r24, Y+1	; 0x01
    d9ee:	0e 94 41 6d 	call	0xda82	; 0xda82 <_Z19final_drain_voltageb>
		}

		return(ERROR_CODE_NO_ERROR);
    d9f2:	80 e0       	ldi	r24, 0x00	; 0
	}
    d9f4:	0f 90       	pop	r0
    d9f6:	df 91       	pop	r29
    d9f8:	cf 91       	pop	r28
    d9fa:	08 95       	ret

0000d9fc <_Z9txKeyDownb>:
	
	void txKeyDown(bool key)
	{
    d9fc:	cf 93       	push	r28
    d9fe:	df 93       	push	r29
    da00:	00 d0       	rcall	.+0      	; 0xda02 <_Z9txKeyDownb+0x6>
    da02:	1f 92       	push	r1
    da04:	cd b7       	in	r28, 0x3d	; 61
    da06:	de b7       	in	r29, 0x3e	; 62
    da08:	8b 83       	std	Y+3, r24	; 0x03
		if(g_tx_initialized)
    da0a:	80 91 aa 48 	lds	r24, 0x48AA	; 0x8048aa <_ZL16g_tx_initialized>
    da0e:	88 23       	and	r24, r24
    da10:	d1 f0       	breq	.+52     	; 0xda46 <_Z9txKeyDownb+0x4a>
		{
			int tries = 10;
    da12:	8a e0       	ldi	r24, 0x0A	; 10
    da14:	90 e0       	ldi	r25, 0x00	; 0
    da16:	89 83       	std	Y+1, r24	; 0x01
    da18:	9a 83       	std	Y+2, r25	; 0x02
			while(tries-- && (key != keyTransmitter(key)));
    da1a:	89 81       	ldd	r24, Y+1	; 0x01
    da1c:	9a 81       	ldd	r25, Y+2	; 0x02
    da1e:	9c 01       	movw	r18, r24
    da20:	21 50       	subi	r18, 0x01	; 1
    da22:	31 09       	sbc	r19, r1
    da24:	29 83       	std	Y+1, r18	; 0x01
    da26:	3a 83       	std	Y+2, r19	; 0x02
    da28:	89 2b       	or	r24, r25
    da2a:	49 f0       	breq	.+18     	; 0xda3e <_Z9txKeyDownb+0x42>
    da2c:	8b 81       	ldd	r24, Y+3	; 0x03
    da2e:	0e 94 8c 6d 	call	0xdb18	; 0xdb18 <_Z14keyTransmitterb>
    da32:	98 2f       	mov	r25, r24
    da34:	8b 81       	ldd	r24, Y+3	; 0x03
    da36:	98 17       	cp	r25, r24
    da38:	11 f0       	breq	.+4      	; 0xda3e <_Z9txKeyDownb+0x42>
    da3a:	81 e0       	ldi	r24, 0x01	; 1
    da3c:	01 c0       	rjmp	.+2      	; 0xda40 <_Z9txKeyDownb+0x44>
    da3e:	80 e0       	ldi	r24, 0x00	; 0
    da40:	88 23       	and	r24, r24
    da42:	09 f0       	breq	.+2      	; 0xda46 <_Z9txKeyDownb+0x4a>
    da44:	ea cf       	rjmp	.-44     	; 0xda1a <_Z9txKeyDownb+0x1e>
		}
	}
    da46:	00 00       	nop
    da48:	23 96       	adiw	r28, 0x03	; 3
    da4a:	cd bf       	out	0x3d, r28	; 61
    da4c:	de bf       	out	0x3e, r29	; 62
    da4e:	df 91       	pop	r29
    da50:	cf 91       	pop	r28
    da52:	08 95       	ret

0000da54 <_Z10fet_driverb>:
	
	void fet_driver(bool state)
	{
    da54:	cf 93       	push	r28
    da56:	df 93       	push	r29
    da58:	1f 92       	push	r1
    da5a:	cd b7       	in	r28, 0x3d	; 61
    da5c:	de b7       	in	r29, 0x3e	; 62
    da5e:	89 83       	std	Y+1, r24	; 0x01
		if(state == ON)
    da60:	89 81       	ldd	r24, Y+1	; 0x01
    da62:	88 23       	and	r24, r24
    da64:	29 f0       	breq	.+10     	; 0xda70 <_Z10fet_driverb+0x1c>
		{
			PORTA_set_pin_level(FET_DRIVER_ENABLE, HIGH);
    da66:	61 e0       	ldi	r22, 0x01	; 1
    da68:	83 e0       	ldi	r24, 0x03	; 3
    da6a:	0e 94 0e 6c 	call	0xd81c	; 0xd81c <PORTA_set_pin_level>
		}
		else
		{
			PORTA_set_pin_level(FET_DRIVER_ENABLE, LOW);
		}
	}
    da6e:	04 c0       	rjmp	.+8      	; 0xda78 <_Z10fet_driverb+0x24>
		{
			PORTA_set_pin_level(FET_DRIVER_ENABLE, HIGH);
		}
		else
		{
			PORTA_set_pin_level(FET_DRIVER_ENABLE, LOW);
    da70:	60 e0       	ldi	r22, 0x00	; 0
    da72:	83 e0       	ldi	r24, 0x03	; 3
    da74:	0e 94 0e 6c 	call	0xd81c	; 0xd81c <PORTA_set_pin_level>
		}
	}
    da78:	00 00       	nop
    da7a:	0f 90       	pop	r0
    da7c:	df 91       	pop	r29
    da7e:	cf 91       	pop	r28
    da80:	08 95       	ret

0000da82 <_Z19final_drain_voltageb>:

	void final_drain_voltage(bool state)
	{
    da82:	cf 93       	push	r28
    da84:	df 93       	push	r29
    da86:	1f 92       	push	r1
    da88:	cd b7       	in	r28, 0x3d	; 61
    da8a:	de b7       	in	r29, 0x3e	; 62
    da8c:	89 83       	std	Y+1, r24	; 0x01
		g_drain_voltage_enabled = state;
    da8e:	89 81       	ldd	r24, Y+1	; 0x01
    da90:	80 93 ab 48 	sts	0x48AB, r24	; 0x8048ab <_ZL23g_drain_voltage_enabled>

		if(state == ON)
    da94:	89 81       	ldd	r24, Y+1	; 0x01
    da96:	88 23       	and	r24, r24
    da98:	59 f0       	breq	.+22     	; 0xdab0 <_Z19final_drain_voltageb+0x2e>
		{
			if(!g_rf_output_inhibited)
    da9a:	90 91 ad 48 	lds	r25, 0x48AD	; 0x8048ad <_ZL21g_rf_output_inhibited>
    da9e:	81 e0       	ldi	r24, 0x01	; 1
    daa0:	89 27       	eor	r24, r25
    daa2:	88 23       	and	r24, r24
    daa4:	49 f0       	breq	.+18     	; 0xdab8 <_Z19final_drain_voltageb+0x36>
			{
				PORTB_set_pin_level(TX_FINAL_VOLTAGE_ENABLE, HIGH);
    daa6:	61 e0       	ldi	r22, 0x01	; 1
    daa8:	85 e0       	ldi	r24, 0x05	; 5
    daaa:	0e 94 48 6c 	call	0xd890	; 0xd890 <PORTB_set_pin_level>
		}
		else
		{
			PORTB_set_pin_level(TX_FINAL_VOLTAGE_ENABLE, LOW);
		}
	}
    daae:	04 c0       	rjmp	.+8      	; 0xdab8 <_Z19final_drain_voltageb+0x36>
				PORTB_set_pin_level(TX_FINAL_VOLTAGE_ENABLE, HIGH);
			}
		}
		else
		{
			PORTB_set_pin_level(TX_FINAL_VOLTAGE_ENABLE, LOW);
    dab0:	60 e0       	ldi	r22, 0x00	; 0
    dab2:	85 e0       	ldi	r24, 0x05	; 5
    dab4:	0e 94 48 6c 	call	0xd890	; 0xd890 <PORTB_set_pin_level>
		}
	}
    dab8:	00 00       	nop
    daba:	0f 90       	pop	r0
    dabc:	df 91       	pop	r29
    dabe:	cf 91       	pop	r28
    dac0:	08 95       	ret

0000dac2 <_Z15inhibitRFOutputb>:

	
	void inhibitRFOutput(bool inhibit)
	{
    dac2:	cf 93       	push	r28
    dac4:	df 93       	push	r29
    dac6:	00 d0       	rcall	.+0      	; 0xdac8 <_Z15inhibitRFOutputb+0x6>
    dac8:	1f 92       	push	r1
    daca:	cd b7       	in	r28, 0x3d	; 61
    dacc:	de b7       	in	r29, 0x3e	; 62
    dace:	8b 83       	std	Y+3, r24	; 0x03
		g_rf_output_inhibited = inhibit;
    dad0:	8b 81       	ldd	r24, Y+3	; 0x03
    dad2:	80 93 ad 48 	sts	0x48AD, r24	; 0x8048ad <_ZL21g_rf_output_inhibited>
		
		if(inhibit)
    dad6:	8b 81       	ldd	r24, Y+3	; 0x03
    dad8:	88 23       	and	r24, r24
    dada:	29 f0       	breq	.+10     	; 0xdae6 <_Z15inhibitRFOutputb+0x24>
		{
			PORTB_set_pin_level(TX_FINAL_VOLTAGE_ENABLE, LOW);
    dadc:	60 e0       	ldi	r22, 0x00	; 0
    dade:	85 e0       	ldi	r24, 0x05	; 5
    dae0:	0e 94 48 6c 	call	0xd890	; 0xd890 <PORTB_set_pin_level>
		{
			uint16_t pwr_mW = g_80m_power_level_mW;
			txSetParameters(&pwr_mW, NULL);
			PORTB_set_pin_level(TX_FINAL_VOLTAGE_ENABLE, g_final_output_setting);
		}
	}
    dae4:	12 c0       	rjmp	.+36     	; 0xdb0a <_Z15inhibitRFOutputb+0x48>
		{
			PORTB_set_pin_level(TX_FINAL_VOLTAGE_ENABLE, LOW);
		}
		else
		{
			uint16_t pwr_mW = g_80m_power_level_mW;
    dae6:	80 91 54 40 	lds	r24, 0x4054	; 0x804054 <g_80m_power_level_mW>
    daea:	90 91 55 40 	lds	r25, 0x4055	; 0x804055 <g_80m_power_level_mW+0x1>
    daee:	89 83       	std	Y+1, r24	; 0x01
    daf0:	9a 83       	std	Y+2, r25	; 0x02
			txSetParameters(&pwr_mW, NULL);
    daf2:	60 e0       	ldi	r22, 0x00	; 0
    daf4:	70 e0       	ldi	r23, 0x00	; 0
    daf6:	ce 01       	movw	r24, r28
    daf8:	01 96       	adiw	r24, 0x01	; 1
    dafa:	0e 94 02 6e 	call	0xdc04	; 0xdc04 <_Z15txSetParametersPjPb>
			PORTB_set_pin_level(TX_FINAL_VOLTAGE_ENABLE, g_final_output_setting);
    dafe:	80 91 ac 48 	lds	r24, 0x48AC	; 0x8048ac <_ZL22g_final_output_setting>
    db02:	68 2f       	mov	r22, r24
    db04:	85 e0       	ldi	r24, 0x05	; 5
    db06:	0e 94 48 6c 	call	0xd890	; 0xd890 <PORTB_set_pin_level>
		}
	}
    db0a:	00 00       	nop
    db0c:	23 96       	adiw	r28, 0x03	; 3
    db0e:	cd bf       	out	0x3d, r28	; 61
    db10:	de bf       	out	0x3e, r29	; 62
    db12:	df 91       	pop	r29
    db14:	cf 91       	pop	r28
    db16:	08 95       	ret

0000db18 <_Z14keyTransmitterb>:

	bool keyTransmitter(bool on)
	{
    db18:	cf 93       	push	r28
    db1a:	df 93       	push	r29
    db1c:	00 d0       	rcall	.+0      	; 0xdb1e <_Z14keyTransmitterb+0x6>
    db1e:	1f 92       	push	r1
    db20:	cd b7       	in	r28, 0x3d	; 61
    db22:	de b7       	in	r29, 0x3e	; 62
    db24:	8b 83       	std	Y+3, r24	; 0x03
		static volatile bool transmitter_keyed = false;
		
		if(g_tx_initialized)
    db26:	80 91 aa 48 	lds	r24, 0x48AA	; 0x8048aa <_ZL16g_tx_initialized>
    db2a:	88 23       	and	r24, r24
    db2c:	09 f4       	brne	.+2      	; 0xdb30 <_Z14keyTransmitterb+0x18>
    db2e:	4e c0       	rjmp	.+156    	; 0xdbcc <_Z14keyTransmitterb+0xb4>
		{			
			int tries = 5;
    db30:	85 e0       	ldi	r24, 0x05	; 5
    db32:	90 e0       	ldi	r25, 0x00	; 0
    db34:	89 83       	std	Y+1, r24	; 0x01
    db36:	9a 83       	std	Y+2, r25	; 0x02
			
			if(on)
    db38:	8b 81       	ldd	r24, Y+3	; 0x03
    db3a:	88 23       	and	r24, r24
    db3c:	41 f1       	breq	.+80     	; 0xdb8e <_Z14keyTransmitterb+0x76>
			{
				if(!transmitter_keyed)
    db3e:	90 91 ae 48 	lds	r25, 0x48AE	; 0x8048ae <_ZZ14keyTransmitterbE17transmitter_keyed>
    db42:	81 e0       	ldi	r24, 0x01	; 1
    db44:	89 27       	eor	r24, r25
    db46:	88 23       	and	r24, r24
    db48:	09 f4       	brne	.+2      	; 0xdb4c <_Z14keyTransmitterb+0x34>
    db4a:	40 c0       	rjmp	.+128    	; 0xdbcc <_Z14keyTransmitterb+0xb4>
				{
					while(tries-- && (si5351_clock_enable(TX_CLOCK_HF_0, SI5351_CLK_ENABLED) != ERROR_CODE_NO_ERROR))
    db4c:	89 81       	ldd	r24, Y+1	; 0x01
    db4e:	9a 81       	ldd	r25, Y+2	; 0x02
    db50:	9c 01       	movw	r18, r24
    db52:	21 50       	subi	r18, 0x01	; 1
    db54:	31 09       	sbc	r19, r1
    db56:	29 83       	std	Y+1, r18	; 0x01
    db58:	3a 83       	std	Y+2, r19	; 0x02
    db5a:	89 2b       	or	r24, r25
    db5c:	41 f0       	breq	.+16     	; 0xdb6e <_Z14keyTransmitterb+0x56>
    db5e:	61 e0       	ldi	r22, 0x01	; 1
    db60:	81 e0       	ldi	r24, 0x01	; 1
    db62:	0e 94 f9 61 	call	0xc3f2	; 0xc3f2 <si5351_clock_enable>
    db66:	88 23       	and	r24, r24
    db68:	11 f0       	breq	.+4      	; 0xdb6e <_Z14keyTransmitterb+0x56>
    db6a:	81 e0       	ldi	r24, 0x01	; 1
    db6c:	01 c0       	rjmp	.+2      	; 0xdb70 <_Z14keyTransmitterb+0x58>
    db6e:	80 e0       	ldi	r24, 0x00	; 0
    db70:	88 23       	and	r24, r24
    db72:	29 f0       	breq	.+10     	; 0xdb7e <_Z14keyTransmitterb+0x66>
					{
						shutdown_transmitter();
    db74:	0e 94 90 6e 	call	0xdd20	; 0xdd20 <_Z20shutdown_transmitterv>
						restart_transmitter();
    db78:	0e 94 9a 6e 	call	0xdd34	; 0xdd34 <_Z19restart_transmitterv>
			
			if(on)
			{
				if(!transmitter_keyed)
				{
					while(tries-- && (si5351_clock_enable(TX_CLOCK_HF_0, SI5351_CLK_ENABLED) != ERROR_CODE_NO_ERROR))
    db7c:	e7 cf       	rjmp	.-50     	; 0xdb4c <_Z14keyTransmitterb+0x34>
					{
						shutdown_transmitter();
						restart_transmitter();
					}
					
					if(tries)
    db7e:	89 81       	ldd	r24, Y+1	; 0x01
    db80:	9a 81       	ldd	r25, Y+2	; 0x02
    db82:	89 2b       	or	r24, r25
    db84:	19 f1       	breq	.+70     	; 0xdbcc <_Z14keyTransmitterb+0xb4>
					{
						transmitter_keyed = true;
    db86:	81 e0       	ldi	r24, 0x01	; 1
    db88:	80 93 ae 48 	sts	0x48AE, r24	; 0x8048ae <_ZZ14keyTransmitterbE17transmitter_keyed>
    db8c:	1f c0       	rjmp	.+62     	; 0xdbcc <_Z14keyTransmitterb+0xb4>
					}
				}
			}
			else
			{
				while(tries-- && (si5351_clock_enable(TX_CLOCK_HF_0, SI5351_CLK_DISABLED) != ERROR_CODE_NO_ERROR))
    db8e:	89 81       	ldd	r24, Y+1	; 0x01
    db90:	9a 81       	ldd	r25, Y+2	; 0x02
    db92:	9c 01       	movw	r18, r24
    db94:	21 50       	subi	r18, 0x01	; 1
    db96:	31 09       	sbc	r19, r1
    db98:	29 83       	std	Y+1, r18	; 0x01
    db9a:	3a 83       	std	Y+2, r19	; 0x02
    db9c:	89 2b       	or	r24, r25
    db9e:	41 f0       	breq	.+16     	; 0xdbb0 <_Z14keyTransmitterb+0x98>
    dba0:	60 e0       	ldi	r22, 0x00	; 0
    dba2:	81 e0       	ldi	r24, 0x01	; 1
    dba4:	0e 94 f9 61 	call	0xc3f2	; 0xc3f2 <si5351_clock_enable>
    dba8:	88 23       	and	r24, r24
    dbaa:	11 f0       	breq	.+4      	; 0xdbb0 <_Z14keyTransmitterb+0x98>
    dbac:	81 e0       	ldi	r24, 0x01	; 1
    dbae:	01 c0       	rjmp	.+2      	; 0xdbb2 <_Z14keyTransmitterb+0x9a>
    dbb0:	80 e0       	ldi	r24, 0x00	; 0
    dbb2:	88 23       	and	r24, r24
    dbb4:	29 f0       	breq	.+10     	; 0xdbc0 <_Z14keyTransmitterb+0xa8>
				{
					shutdown_transmitter();
    dbb6:	0e 94 90 6e 	call	0xdd20	; 0xdd20 <_Z20shutdown_transmitterv>
					restart_transmitter();
    dbba:	0e 94 9a 6e 	call	0xdd34	; 0xdd34 <_Z19restart_transmitterv>
					}
				}
			}
			else
			{
				while(tries-- && (si5351_clock_enable(TX_CLOCK_HF_0, SI5351_CLK_DISABLED) != ERROR_CODE_NO_ERROR))
    dbbe:	e7 cf       	rjmp	.-50     	; 0xdb8e <_Z14keyTransmitterb+0x76>
				{
					shutdown_transmitter();
					restart_transmitter();
				}
					
				if(tries)
    dbc0:	89 81       	ldd	r24, Y+1	; 0x01
    dbc2:	9a 81       	ldd	r25, Y+2	; 0x02
    dbc4:	89 2b       	or	r24, r25
    dbc6:	11 f0       	breq	.+4      	; 0xdbcc <_Z14keyTransmitterb+0xb4>
				{
					transmitter_keyed = false;
    dbc8:	10 92 ae 48 	sts	0x48AE, r1	; 0x8048ae <_ZZ14keyTransmitterbE17transmitter_keyed>
				}
			}
		}
		
		return(transmitter_keyed);
    dbcc:	80 91 ae 48 	lds	r24, 0x48AE	; 0x8048ae <_ZZ14keyTransmitterbE17transmitter_keyed>
	}
    dbd0:	23 96       	adiw	r28, 0x03	; 3
    dbd2:	cd bf       	out	0x3d, r28	; 61
    dbd4:	de bf       	out	0x3e, r29	; 62
    dbd6:	df 91       	pop	r29
    dbd8:	cf 91       	pop	r28
    dbda:	08 95       	ret

0000dbdc <_Z12txGetPowerMwv>:

	uint16_t txGetPowerMw(void)
	{
    dbdc:	cf 93       	push	r28
    dbde:	df 93       	push	r29
    dbe0:	cd b7       	in	r28, 0x3d	; 61
    dbe2:	de b7       	in	r29, 0x3e	; 62
		return( g_80m_power_level_mW);
    dbe4:	80 91 54 40 	lds	r24, 0x4054	; 0x804054 <g_80m_power_level_mW>
    dbe8:	90 91 55 40 	lds	r25, 0x4055	; 0x804055 <g_80m_power_level_mW+0x1>
	}
    dbec:	df 91       	pop	r29
    dbee:	cf 91       	pop	r28
    dbf0:	08 95       	ret

0000dbf2 <_Z15txIsInitializedv>:
	
	bool txIsInitialized(void)
	{
    dbf2:	cf 93       	push	r28
    dbf4:	df 93       	push	r29
    dbf6:	cd b7       	in	r28, 0x3d	; 61
    dbf8:	de b7       	in	r29, 0x3e	; 62
		return g_tx_initialized;
    dbfa:	80 91 aa 48 	lds	r24, 0x48AA	; 0x8048aa <_ZL16g_tx_initialized>
	}
    dbfe:	df 91       	pop	r29
    dc00:	cf 91       	pop	r28
    dc02:	08 95       	ret

0000dc04 <_Z15txSetParametersPjPb>:

	EC __attribute__((optimize("O0"))) txSetParameters(uint16_t* power_mW, bool* setEnabled)
/*	EC txSetParameters(uint16_t* power_mW, bool* setEnabled) */
	{
    dc04:	cf 93       	push	r28
    dc06:	df 93       	push	r29
    dc08:	cd b7       	in	r28, 0x3d	; 61
    dc0a:	de b7       	in	r29, 0x3e	; 62
    dc0c:	2a 97       	sbiw	r28, 0x0a	; 10
    dc0e:	cd bf       	out	0x3d, r28	; 61
    dc10:	de bf       	out	0x3e, r29	; 62
    dc12:	8f 83       	std	Y+7, r24	; 0x07
    dc14:	98 87       	std	Y+8, r25	; 0x08
    dc16:	69 87       	std	Y+9, r22	; 0x09
    dc18:	7a 87       	std	Y+10, r23	; 0x0a
		bool err = false;
    dc1a:	19 82       	std	Y+1, r1	; 0x01
		EC code = ERROR_CODE_NO_ERROR;
    dc1c:	1a 82       	std	Y+2, r1	; 0x02
		uint16_t power = 0;
    dc1e:	1b 82       	std	Y+3, r1	; 0x03
    dc20:	1c 82       	std	Y+4, r1	; 0x04

		if(power_mW != null)
    dc22:	8f 81       	ldd	r24, Y+7	; 0x07
    dc24:	98 85       	ldd	r25, Y+8	; 0x08
    dc26:	89 2b       	or	r24, r25
    dc28:	09 f4       	brne	.+2      	; 0xdc2c <_Z15txSetParametersPjPb+0x28>
    dc2a:	64 c0       	rjmp	.+200    	; 0xdcf4 <_Z15txSetParametersPjPb+0xf0>
		{
			power = *power_mW;
    dc2c:	8f 81       	ldd	r24, Y+7	; 0x07
    dc2e:	98 85       	ldd	r25, Y+8	; 0x08
    dc30:	fc 01       	movw	r30, r24
    dc32:	80 81       	ld	r24, Z
    dc34:	91 81       	ldd	r25, Z+1	; 0x01
    dc36:	8b 83       	std	Y+3, r24	; 0x03
    dc38:	9c 83       	std	Y+4, r25	; 0x04

			if(power <= MAX_TX_POWER_80M_MW)
    dc3a:	8b 81       	ldd	r24, Y+3	; 0x03
    dc3c:	9c 81       	ldd	r25, Y+4	; 0x04
    dc3e:	89 38       	cpi	r24, 0x89	; 137
    dc40:	93 41       	sbci	r25, 0x13	; 19
    dc42:	08 f0       	brcs	.+2      	; 0xdc46 <_Z15txSetParametersPjPb+0x42>
    dc44:	53 c0       	rjmp	.+166    	; 0xdcec <_Z15txSetParametersPjPb+0xe8>
			{
				uint16_t drainVoltageDAC;
				code = txMilliwattsToSettings(&power, &drainVoltageDAC);
    dc46:	9e 01       	movw	r18, r28
    dc48:	2b 5f       	subi	r18, 0xFB	; 251
    dc4a:	3f 4f       	sbci	r19, 0xFF	; 255
    dc4c:	ce 01       	movw	r24, r28
    dc4e:	03 96       	adiw	r24, 0x03	; 3
    dc50:	b9 01       	movw	r22, r18
    dc52:	0e 94 20 6f 	call	0xde40	; 0xde40 <_Z22txMilliwattsToSettingsPjS_>
    dc56:	8a 83       	std	Y+2, r24	; 0x02
				err = (code == ERROR_CODE_SW_LOGIC_ERROR);
    dc58:	81 e0       	ldi	r24, 0x01	; 1
    dc5a:	9a 81       	ldd	r25, Y+2	; 0x02
    dc5c:	9f 3c       	cpi	r25, 0xCF	; 207
    dc5e:	09 f0       	breq	.+2      	; 0xdc62 <_Z15txSetParametersPjPb+0x5e>
    dc60:	80 e0       	ldi	r24, 0x00	; 0
    dc62:	89 83       	std	Y+1, r24	; 0x01

				g_tx_power_is_zero = (power == 0);
    dc64:	8b 81       	ldd	r24, Y+3	; 0x03
    dc66:	9c 81       	ldd	r25, Y+4	; 0x04
    dc68:	21 e0       	ldi	r18, 0x01	; 1
    dc6a:	89 2b       	or	r24, r25
    dc6c:	09 f0       	breq	.+2      	; 0xdc70 <_Z15txSetParametersPjPb+0x6c>
    dc6e:	20 e0       	ldi	r18, 0x00	; 0
    dc70:	20 93 5a 40 	sts	0x405A, r18	; 0x80405a <g_tx_power_is_zero>

				if(!err)
    dc74:	99 81       	ldd	r25, Y+1	; 0x01
    dc76:	81 e0       	ldi	r24, 0x01	; 1
    dc78:	89 27       	eor	r24, r25
    dc7a:	88 23       	and	r24, r24
    dc7c:	79 f1       	breq	.+94     	; 0xdcdc <_Z15txSetParametersPjPb+0xd8>
				{
					g_80m_power_level_mW = power;
    dc7e:	8b 81       	ldd	r24, Y+3	; 0x03
    dc80:	9c 81       	ldd	r25, Y+4	; 0x04
    dc82:	80 93 54 40 	sts	0x4054, r24	; 0x804054 <g_80m_power_level_mW>
    dc86:	90 93 55 40 	sts	0x4055, r25	; 0x804055 <g_80m_power_level_mW+0x1>
					
					if(g_antenna_connect_state != ANT_CONNECTED)
    dc8a:	90 91 9c 44 	lds	r25, 0x449C	; 0x80449c <g_antenna_connect_state>
    dc8e:	81 e0       	ldi	r24, 0x01	; 1
    dc90:	92 30       	cpi	r25, 0x02	; 2
    dc92:	09 f4       	brne	.+2      	; 0xdc96 <_Z15txSetParametersPjPb+0x92>
    dc94:	80 e0       	ldi	r24, 0x00	; 0
    dc96:	88 23       	and	r24, r24
    dc98:	51 f0       	breq	.+20     	; 0xdcae <_Z15txSetParametersPjPb+0xaa>
					{
						inhibitRFOutput(true);
    dc9a:	81 e0       	ldi	r24, 0x01	; 1
    dc9c:	0e 94 61 6d 	call	0xdac2	; 0xdac2 <_Z15inhibitRFOutputb>
						g_tx_power_is_zero = true;
    dca0:	81 e0       	ldi	r24, 0x01	; 1
    dca2:	80 93 5a 40 	sts	0x405A, r24	; 0x80405a <g_tx_power_is_zero>
						err = true;
    dca6:	81 e0       	ldi	r24, 0x01	; 1
    dca8:	89 83       	std	Y+1, r24	; 0x01
						code = ERROR_CODE_NO_ANTENNA_PREVENTS_POWER_SETTING;
    dcaa:	86 ef       	ldi	r24, 0xF6	; 246
    dcac:	8a 83       	std	Y+2, r24	; 0x02
					}

					DAC0_setVal(drainVoltageDAC);
    dcae:	8d 81       	ldd	r24, Y+5	; 0x05
    dcb0:	9e 81       	ldd	r25, Y+6	; 0x06
    dcb2:	0e 94 b8 33 	call	0x6770	; 0x6770 <_Z11DAC0_setValj>

					if(g_tx_power_is_zero || (drainVoltageDAC == 0))
    dcb6:	80 91 5a 40 	lds	r24, 0x405A	; 0x80405a <g_tx_power_is_zero>
    dcba:	88 23       	and	r24, r24
    dcbc:	21 f4       	brne	.+8      	; 0xdcc6 <_Z15txSetParametersPjPb+0xc2>
    dcbe:	8d 81       	ldd	r24, Y+5	; 0x05
    dcc0:	9e 81       	ldd	r25, Y+6	; 0x06
    dcc2:	89 2b       	or	r24, r25
    dcc4:	11 f4       	brne	.+4      	; 0xdcca <_Z15txSetParametersPjPb+0xc6>
    dcc6:	81 e0       	ldi	r24, 0x01	; 1
    dcc8:	01 c0       	rjmp	.+2      	; 0xdccc <_Z15txSetParametersPjPb+0xc8>
    dcca:	80 e0       	ldi	r24, 0x00	; 0
    dccc:	88 23       	and	r24, r24
    dcce:	31 f0       	breq	.+12     	; 0xdcdc <_Z15txSetParametersPjPb+0xd8>
					{
						final_drain_voltage(OFF);
    dcd0:	80 e0       	ldi	r24, 0x00	; 0
    dcd2:	0e 94 41 6d 	call	0xda82	; 0xda82 <_Z19final_drain_voltageb>
						fet_driver(ON);
    dcd6:	81 e0       	ldi	r24, 0x01	; 1
    dcd8:	0e 94 2a 6d 	call	0xda54	; 0xda54 <_Z10fet_driverb>
					}
				}

				*power_mW = power;
    dcdc:	2b 81       	ldd	r18, Y+3	; 0x03
    dcde:	3c 81       	ldd	r19, Y+4	; 0x04
    dce0:	8f 81       	ldd	r24, Y+7	; 0x07
    dce2:	98 85       	ldd	r25, Y+8	; 0x08
    dce4:	fc 01       	movw	r30, r24
    dce6:	20 83       	st	Z, r18
    dce8:	31 83       	std	Z+1, r19	; 0x01
    dcea:	04 c0       	rjmp	.+8      	; 0xdcf4 <_Z15txSetParametersPjPb+0xf0>
			}
			else
			{
				err = true;
    dcec:	81 e0       	ldi	r24, 0x01	; 1
    dcee:	89 83       	std	Y+1, r24	; 0x01
				code = ERROR_CODE_POWER_LEVEL_NOT_SUPPORTED;
    dcf0:	85 ef       	ldi	r24, 0xF5	; 245
    dcf2:	8a 83       	std	Y+2, r24	; 0x02
			}
		}

		if(!err)
    dcf4:	99 81       	ldd	r25, Y+1	; 0x01
    dcf6:	81 e0       	ldi	r24, 0x01	; 1
    dcf8:	89 27       	eor	r24, r25
    dcfa:	88 23       	and	r24, r24
    dcfc:	51 f0       	breq	.+20     	; 0xdd12 <_Z15txSetParametersPjPb+0x10e>
		{
			if(setEnabled != NULL)
    dcfe:	89 85       	ldd	r24, Y+9	; 0x09
    dd00:	9a 85       	ldd	r25, Y+10	; 0x0a
    dd02:	89 2b       	or	r24, r25
    dd04:	31 f0       	breq	.+12     	; 0xdd12 <_Z15txSetParametersPjPb+0x10e>
			{
				powerToTransmitter(*setEnabled);
    dd06:	89 85       	ldd	r24, Y+9	; 0x09
    dd08:	9a 85       	ldd	r25, Y+10	; 0x0a
    dd0a:	fc 01       	movw	r30, r24
    dd0c:	80 81       	ld	r24, Z
    dd0e:	0e 94 e5 6c 	call	0xd9ca	; 0xd9ca <_Z18powerToTransmitterb>
			}
		}

		return(code);
    dd12:	8a 81       	ldd	r24, Y+2	; 0x02
	}
    dd14:	2a 96       	adiw	r28, 0x0a	; 10
    dd16:	cd bf       	out	0x3d, r28	; 61
    dd18:	de bf       	out	0x3e, r29	; 62
    dd1a:	df 91       	pop	r29
    dd1c:	cf 91       	pop	r28
    dd1e:	08 95       	ret

0000dd20 <_Z20shutdown_transmitterv>:

	void shutdown_transmitter(void)
	{
    dd20:	cf 93       	push	r28
    dd22:	df 93       	push	r29
    dd24:	cd b7       	in	r28, 0x3d	; 61
    dd26:	de b7       	in	r29, 0x3e	; 62
		si5351_shutdown_comms();	
    dd28:	0e 94 76 5f 	call	0xbeec	; 0xbeec <si5351_shutdown_comms>
	}
    dd2c:	00 00       	nop
    dd2e:	df 91       	pop	r29
    dd30:	cf 91       	pop	r28
    dd32:	08 95       	ret

0000dd34 <_Z19restart_transmitterv>:
	
	void restart_transmitter(void)
	{
    dd34:	cf 93       	push	r28
    dd36:	df 93       	push	r29
    dd38:	cd b7       	in	r28, 0x3d	; 61
    dd3a:	de b7       	in	r29, 0x3e	; 62
		si5351_start_comms();
    dd3c:	0e 94 80 5f 	call	0xbf00	; 0xbf00 <si5351_start_comms>
	}
    dd40:	00 00       	nop
    dd42:	df 91       	pop	r29
    dd44:	cf 91       	pop	r28
    dd46:	08 95       	ret

0000dd48 <_Z16init_transmitterm>:

	EC init_transmitter(Frequency_Hz freq)
	{
    dd48:	cf 93       	push	r28
    dd4a:	df 93       	push	r29
    dd4c:	00 d0       	rcall	.+0      	; 0xdd4e <_Z16init_transmitterm+0x6>
    dd4e:	00 d0       	rcall	.+0      	; 0xdd50 <_Z16init_transmitterm+0x8>
    dd50:	cd b7       	in	r28, 0x3d	; 61
    dd52:	de b7       	in	r29, 0x3e	; 62
    dd54:	69 83       	std	Y+1, r22	; 0x01
    dd56:	7a 83       	std	Y+2, r23	; 0x02
    dd58:	8b 83       	std	Y+3, r24	; 0x03
    dd5a:	9c 83       	std	Y+4, r25	; 0x04
		g_80m_frequency = freq;
    dd5c:	89 81       	ldd	r24, Y+1	; 0x01
    dd5e:	9a 81       	ldd	r25, Y+2	; 0x02
    dd60:	ab 81       	ldd	r26, Y+3	; 0x03
    dd62:	bc 81       	ldd	r27, Y+4	; 0x04
    dd64:	80 93 50 40 	sts	0x4050, r24	; 0x804050 <g_80m_frequency>
    dd68:	90 93 51 40 	sts	0x4051, r25	; 0x804051 <g_80m_frequency+0x1>
    dd6c:	a0 93 52 40 	sts	0x4052, r26	; 0x804052 <g_80m_frequency+0x2>
    dd70:	b0 93 53 40 	sts	0x4053, r27	; 0x804053 <g_80m_frequency+0x3>
		return init_transmitter();
    dd74:	0e 94 c2 6e 	call	0xdd84	; 0xdd84 <_Z16init_transmitterv>
	}
    dd78:	24 96       	adiw	r28, 0x04	; 4
    dd7a:	cd bf       	out	0x3d, r28	; 61
    dd7c:	de bf       	out	0x3e, r29	; 62
    dd7e:	df 91       	pop	r29
    dd80:	cf 91       	pop	r28
    dd82:	08 95       	ret

0000dd84 <_Z16init_transmitterv>:
	
	EC init_transmitter(void)
	{
    dd84:	cf 93       	push	r28
    dd86:	df 93       	push	r29
    dd88:	00 d0       	rcall	.+0      	; 0xdd8a <_Z16init_transmitterv+0x6>
    dd8a:	00 d0       	rcall	.+0      	; 0xdd8c <_Z16init_transmitterv+0x8>
    dd8c:	cd b7       	in	r28, 0x3d	; 61
    dd8e:	de b7       	in	r29, 0x3e	; 62
		EC code;
		bool err;
		
		fet_driver(OFF);		
    dd90:	80 e0       	ldi	r24, 0x00	; 0
    dd92:	0e 94 2a 6d 	call	0xda54	; 0xda54 <_Z10fet_driverb>
		DAC0_init();
    dd96:	0e 94 8e 33 	call	0x671c	; 0x671c <_Z9DAC0_initv>

		if((err = si5351_init(SI5351_CRYSTAL_LOAD_6PF, 0)))
    dd9a:	40 e0       	ldi	r20, 0x00	; 0
    dd9c:	50 e0       	ldi	r21, 0x00	; 0
    dd9e:	ba 01       	movw	r22, r20
    dda0:	80 e4       	ldi	r24, 0x40	; 64
    dda2:	0e 94 8a 5f 	call	0xbf14	; 0xbf14 <si5351_init>
    dda6:	8a 83       	std	Y+2, r24	; 0x02
    dda8:	8a 81       	ldd	r24, Y+2	; 0x02
    ddaa:	88 23       	and	r24, r24
    ddac:	11 f0       	breq	.+4      	; 0xddb2 <_Z16init_transmitterv+0x2e>
		{
			return(ERROR_CODE_RF_OSCILLATOR_ERROR);
    ddae:	82 ed       	ldi	r24, 0xD2	; 210
    ddb0:	41 c0       	rjmp	.+130    	; 0xde34 <_Z16init_transmitterv+0xb0>
		}

		if((code = si5351_drive_strength(TX_CLOCK_HF_0, SI5351_DRIVE_8MA)))
    ddb2:	63 e0       	ldi	r22, 0x03	; 3
    ddb4:	81 e0       	ldi	r24, 0x01	; 1
    ddb6:	0e 94 44 62 	call	0xc488	; 0xc488 <si5351_drive_strength>
    ddba:	89 83       	std	Y+1, r24	; 0x01
    ddbc:	81 e0       	ldi	r24, 0x01	; 1
    ddbe:	99 81       	ldd	r25, Y+1	; 0x01
    ddc0:	99 23       	and	r25, r25
    ddc2:	09 f4       	brne	.+2      	; 0xddc6 <_Z16init_transmitterv+0x42>
    ddc4:	80 e0       	ldi	r24, 0x00	; 0
    ddc6:	88 23       	and	r24, r24
    ddc8:	11 f0       	breq	.+4      	; 0xddce <_Z16init_transmitterv+0x4a>
		{
			return( code);
    ddca:	89 81       	ldd	r24, Y+1	; 0x01
    ddcc:	33 c0       	rjmp	.+102    	; 0xde34 <_Z16init_transmitterv+0xb0>
		}
		
		if((code = si5351_clock_enable(TX_CLOCK_HF_0, SI5351_CLK_DISABLED)))
    ddce:	60 e0       	ldi	r22, 0x00	; 0
    ddd0:	81 e0       	ldi	r24, 0x01	; 1
    ddd2:	0e 94 f9 61 	call	0xc3f2	; 0xc3f2 <si5351_clock_enable>
    ddd6:	89 83       	std	Y+1, r24	; 0x01
    ddd8:	81 e0       	ldi	r24, 0x01	; 1
    ddda:	99 81       	ldd	r25, Y+1	; 0x01
    dddc:	99 23       	and	r25, r25
    ddde:	09 f4       	brne	.+2      	; 0xdde2 <_Z16init_transmitterv+0x5e>
    dde0:	80 e0       	ldi	r24, 0x00	; 0
    dde2:	88 23       	and	r24, r24
    dde4:	11 f0       	breq	.+4      	; 0xddea <_Z16init_transmitterv+0x66>
		{
			return( code);
    dde6:	89 81       	ldd	r24, Y+1	; 0x01
    dde8:	25 c0       	rjmp	.+74     	; 0xde34 <_Z16init_transmitterv+0xb0>
		}

		uint16_t pwr_mW = g_80m_power_level_mW;
    ddea:	80 91 54 40 	lds	r24, 0x4054	; 0x804054 <g_80m_power_level_mW>
    ddee:	90 91 55 40 	lds	r25, 0x4055	; 0x804055 <g_80m_power_level_mW+0x1>
    ddf2:	8b 83       	std	Y+3, r24	; 0x03
    ddf4:	9c 83       	std	Y+4, r25	; 0x04
		
		err = txSetFrequency((Frequency_Hz*)&g_80m_frequency, true);
    ddf6:	61 e0       	ldi	r22, 0x01	; 1
    ddf8:	80 e5       	ldi	r24, 0x50	; 80
    ddfa:	90 e4       	ldi	r25, 0x40	; 64
    ddfc:	0e 94 82 6c 	call	0xd904	; 0xd904 <_Z14txSetFrequencyPmb>
    de00:	8a 83       	std	Y+2, r24	; 0x02
		if(!err)
    de02:	9a 81       	ldd	r25, Y+2	; 0x02
    de04:	81 e0       	ldi	r24, 0x01	; 1
    de06:	89 27       	eor	r24, r25
    de08:	88 23       	and	r24, r24
    de0a:	81 f0       	breq	.+32     	; 0xde2c <_Z16init_transmitterv+0xa8>
		{
			code = txSetParameters(&pwr_mW, NULL);
    de0c:	ce 01       	movw	r24, r28
    de0e:	03 96       	adiw	r24, 0x03	; 3
    de10:	60 e0       	ldi	r22, 0x00	; 0
    de12:	70 e0       	ldi	r23, 0x00	; 0
    de14:	0e 94 02 6e 	call	0xdc04	; 0xdc04 <_Z15txSetParametersPjPb>
    de18:	89 83       	std	Y+1, r24	; 0x01
			if((code == ERROR_CODE_NO_ERROR) || (code == ERROR_CODE_NO_ANTENNA_PREVENTS_POWER_SETTING))
    de1a:	89 81       	ldd	r24, Y+1	; 0x01
    de1c:	88 23       	and	r24, r24
    de1e:	19 f0       	breq	.+6      	; 0xde26 <_Z16init_transmitterv+0xa2>
    de20:	89 81       	ldd	r24, Y+1	; 0x01
    de22:	86 3f       	cpi	r24, 0xF6	; 246
    de24:	19 f4       	brne	.+6      	; 0xde2c <_Z16init_transmitterv+0xa8>
			{
				g_tx_initialized = true;
    de26:	81 e0       	ldi	r24, 0x01	; 1
    de28:	80 93 aa 48 	sts	0x48AA, r24	; 0x8048aa <_ZL16g_tx_initialized>
			}
		}
		
		fet_driver(ON);
    de2c:	81 e0       	ldi	r24, 0x01	; 1
    de2e:	0e 94 2a 6d 	call	0xda54	; 0xda54 <_Z10fet_driverb>

		return( code);
    de32:	89 81       	ldd	r24, Y+1	; 0x01
	}
    de34:	24 96       	adiw	r28, 0x04	; 4
    de36:	cd bf       	out	0x3d, r28	; 61
    de38:	de bf       	out	0x3e, r29	; 62
    de3a:	df 91       	pop	r29
    de3c:	cf 91       	pop	r28
    de3e:	08 95       	ret

0000de40 <_Z22txMilliwattsToSettingsPjS_>:


EC txMilliwattsToSettings(uint16_t* powerMW, uint16_t* driveLevel)
{
    de40:	cf 93       	push	r28
    de42:	df 93       	push	r29
    de44:	cd b7       	in	r28, 0x3d	; 61
    de46:	de b7       	in	r29, 0x3e	; 62
    de48:	62 97       	sbiw	r28, 0x12	; 18
    de4a:	cd bf       	out	0x3d, r28	; 61
    de4c:	de bf       	out	0x3e, r29	; 62
    de4e:	8f 87       	std	Y+15, r24	; 0x0f
    de50:	98 8b       	std	Y+16, r25	; 0x10
    de52:	69 8b       	std	Y+17, r22	; 0x11
    de54:	7a 8b       	std	Y+18, r23	; 0x12
	EC ec = ERROR_CODE_NO_ERROR;
    de56:	19 82       	std	Y+1, r1	; 0x01
	uint16_t maxPwr;
	uint8_t index;

	if(powerMW == NULL)
    de58:	8f 85       	ldd	r24, Y+15	; 0x0f
    de5a:	98 89       	ldd	r25, Y+16	; 0x10
    de5c:	89 2b       	or	r24, r25
    de5e:	11 f4       	brne	.+4      	; 0xde64 <_Z22txMilliwattsToSettingsPjS_+0x24>
	{
		return(ERROR_CODE_SW_LOGIC_ERROR);
    de60:	8f ec       	ldi	r24, 0xCF	; 207
    de62:	76 c1       	rjmp	.+748    	; 0xe150 <_Z22txMilliwattsToSettingsPjS_+0x310>
	}

	maxPwr = MAX_TX_POWER_80M_MW;
    de64:	88 e8       	ldi	r24, 0x88	; 136
    de66:	93 e1       	ldi	r25, 0x13	; 19
    de68:	8b 83       	std	Y+3, r24	; 0x03
    de6a:	9c 83       	std	Y+4, r25	; 0x04

	if(*powerMW > maxPwr)
    de6c:	8f 85       	ldd	r24, Y+15	; 0x0f
    de6e:	98 89       	ldd	r25, Y+16	; 0x10
    de70:	fc 01       	movw	r30, r24
    de72:	20 81       	ld	r18, Z
    de74:	31 81       	ldd	r19, Z+1	; 0x01
    de76:	8b 81       	ldd	r24, Y+3	; 0x03
    de78:	9c 81       	ldd	r25, Y+4	; 0x04
    de7a:	82 17       	cp	r24, r18
    de7c:	93 07       	cpc	r25, r19
    de7e:	10 f4       	brcc	.+4      	; 0xde84 <_Z22txMilliwattsToSettingsPjS_+0x44>
	{
		ec = ERROR_CODE_POWER_LEVEL_NOT_SUPPORTED;
    de80:	85 ef       	ldi	r24, 0xF5	; 245
    de82:	89 83       	std	Y+1, r24	; 0x01
	}

	*powerMW = CLAMP((uint16_t)0, *powerMW, maxPwr);
    de84:	8f 85       	ldd	r24, Y+15	; 0x0f
    de86:	98 89       	ldd	r25, Y+16	; 0x10
    de88:	fc 01       	movw	r30, r24
    de8a:	80 81       	ld	r24, Z
    de8c:	91 81       	ldd	r25, Z+1	; 0x01
    de8e:	8d 83       	std	Y+5, r24	; 0x05
    de90:	9e 83       	std	Y+6, r25	; 0x06
    de92:	1f 82       	std	Y+7, r1	; 0x07
    de94:	18 86       	std	Y+8, r1	; 0x08
    de96:	8b 81       	ldd	r24, Y+3	; 0x03
    de98:	9c 81       	ldd	r25, Y+4	; 0x04
    de9a:	89 87       	std	Y+9, r24	; 0x09
    de9c:	9a 87       	std	Y+10, r25	; 0x0a
    de9e:	2d 81       	ldd	r18, Y+5	; 0x05
    dea0:	3e 81       	ldd	r19, Y+6	; 0x06
    dea2:	89 85       	ldd	r24, Y+9	; 0x09
    dea4:	9a 85       	ldd	r25, Y+10	; 0x0a
    dea6:	82 17       	cp	r24, r18
    dea8:	93 07       	cpc	r25, r19
    deaa:	68 f0       	brcs	.+26     	; 0xdec6 <_Z22txMilliwattsToSettingsPjS_+0x86>
    deac:	2d 81       	ldd	r18, Y+5	; 0x05
    deae:	3e 81       	ldd	r19, Y+6	; 0x06
    deb0:	8f 81       	ldd	r24, Y+7	; 0x07
    deb2:	98 85       	ldd	r25, Y+8	; 0x08
    deb4:	28 17       	cp	r18, r24
    deb6:	39 07       	cpc	r19, r25
    deb8:	18 f4       	brcc	.+6      	; 0xdec0 <_Z22txMilliwattsToSettingsPjS_+0x80>
    deba:	8f 81       	ldd	r24, Y+7	; 0x07
    debc:	98 85       	ldd	r25, Y+8	; 0x08
    debe:	05 c0       	rjmp	.+10     	; 0xdeca <_Z22txMilliwattsToSettingsPjS_+0x8a>
    dec0:	8d 81       	ldd	r24, Y+5	; 0x05
    dec2:	9e 81       	ldd	r25, Y+6	; 0x06
    dec4:	02 c0       	rjmp	.+4      	; 0xdeca <_Z22txMilliwattsToSettingsPjS_+0x8a>
    dec6:	89 85       	ldd	r24, Y+9	; 0x09
    dec8:	9a 85       	ldd	r25, Y+10	; 0x0a
    deca:	2f 85       	ldd	r18, Y+15	; 0x0f
    decc:	38 89       	ldd	r19, Y+16	; 0x10
    dece:	f9 01       	movw	r30, r18
    ded0:	80 83       	st	Z, r24
    ded2:	91 83       	std	Z+1, r25	; 0x01

	if(*powerMW < 5)
    ded4:	8f 85       	ldd	r24, Y+15	; 0x0f
    ded6:	98 89       	ldd	r25, Y+16	; 0x10
    ded8:	fc 01       	movw	r30, r24
    deda:	80 81       	ld	r24, Z
    dedc:	91 81       	ldd	r25, Z+1	; 0x01
    dede:	05 97       	sbiw	r24, 0x05	; 5
    dee0:	38 f4       	brcc	.+14     	; 0xdef0 <_Z22txMilliwattsToSettingsPjS_+0xb0>
	{
		index = 0;
    dee2:	1a 82       	std	Y+2, r1	; 0x02
		*powerMW = 0;
    dee4:	8f 85       	ldd	r24, Y+15	; 0x0f
    dee6:	98 89       	ldd	r25, Y+16	; 0x10
    dee8:	fc 01       	movw	r30, r24
    deea:	10 82       	st	Z, r1
    deec:	11 82       	std	Z+1, r1	; 0x01
    deee:	04 c1       	rjmp	.+520    	; 0xe0f8 <_Z22txMilliwattsToSettingsPjS_+0x2b8>
	}
	else if(*powerMW < 50)
    def0:	8f 85       	ldd	r24, Y+15	; 0x0f
    def2:	98 89       	ldd	r25, Y+16	; 0x10
    def4:	fc 01       	movw	r30, r24
    def6:	80 81       	ld	r24, Z
    def8:	91 81       	ldd	r25, Z+1	; 0x01
    defa:	c2 97       	sbiw	r24, 0x32	; 50
    defc:	50 f4       	brcc	.+20     	; 0xdf12 <_Z22txMilliwattsToSettingsPjS_+0xd2>
	{
		index = 1;
    defe:	81 e0       	ldi	r24, 0x01	; 1
    df00:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 10;
    df02:	8f 85       	ldd	r24, Y+15	; 0x0f
    df04:	98 89       	ldd	r25, Y+16	; 0x10
    df06:	2a e0       	ldi	r18, 0x0A	; 10
    df08:	30 e0       	ldi	r19, 0x00	; 0
    df0a:	fc 01       	movw	r30, r24
    df0c:	20 83       	st	Z, r18
    df0e:	31 83       	std	Z+1, r19	; 0x01
    df10:	f3 c0       	rjmp	.+486    	; 0xe0f8 <_Z22txMilliwattsToSettingsPjS_+0x2b8>
	}
	else if(*powerMW < 150)
    df12:	8f 85       	ldd	r24, Y+15	; 0x0f
    df14:	98 89       	ldd	r25, Y+16	; 0x10
    df16:	fc 01       	movw	r30, r24
    df18:	80 81       	ld	r24, Z
    df1a:	91 81       	ldd	r25, Z+1	; 0x01
    df1c:	86 39       	cpi	r24, 0x96	; 150
    df1e:	91 05       	cpc	r25, r1
    df20:	50 f4       	brcc	.+20     	; 0xdf36 <_Z22txMilliwattsToSettingsPjS_+0xf6>
	{
		index = 2;
    df22:	82 e0       	ldi	r24, 0x02	; 2
    df24:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 100;
    df26:	8f 85       	ldd	r24, Y+15	; 0x0f
    df28:	98 89       	ldd	r25, Y+16	; 0x10
    df2a:	24 e6       	ldi	r18, 0x64	; 100
    df2c:	30 e0       	ldi	r19, 0x00	; 0
    df2e:	fc 01       	movw	r30, r24
    df30:	20 83       	st	Z, r18
    df32:	31 83       	std	Z+1, r19	; 0x01
    df34:	e1 c0       	rjmp	.+450    	; 0xe0f8 <_Z22txMilliwattsToSettingsPjS_+0x2b8>
	}
	else if(*powerMW < 250)
    df36:	8f 85       	ldd	r24, Y+15	; 0x0f
    df38:	98 89       	ldd	r25, Y+16	; 0x10
    df3a:	fc 01       	movw	r30, r24
    df3c:	80 81       	ld	r24, Z
    df3e:	91 81       	ldd	r25, Z+1	; 0x01
    df40:	8a 3f       	cpi	r24, 0xFA	; 250
    df42:	91 05       	cpc	r25, r1
    df44:	50 f4       	brcc	.+20     	; 0xdf5a <_Z22txMilliwattsToSettingsPjS_+0x11a>
	{
		index = 3;
    df46:	83 e0       	ldi	r24, 0x03	; 3
    df48:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 200;
    df4a:	8f 85       	ldd	r24, Y+15	; 0x0f
    df4c:	98 89       	ldd	r25, Y+16	; 0x10
    df4e:	28 ec       	ldi	r18, 0xC8	; 200
    df50:	30 e0       	ldi	r19, 0x00	; 0
    df52:	fc 01       	movw	r30, r24
    df54:	20 83       	st	Z, r18
    df56:	31 83       	std	Z+1, r19	; 0x01
    df58:	cf c0       	rjmp	.+414    	; 0xe0f8 <_Z22txMilliwattsToSettingsPjS_+0x2b8>
	}
	else if(*powerMW < 350)
    df5a:	8f 85       	ldd	r24, Y+15	; 0x0f
    df5c:	98 89       	ldd	r25, Y+16	; 0x10
    df5e:	fc 01       	movw	r30, r24
    df60:	80 81       	ld	r24, Z
    df62:	91 81       	ldd	r25, Z+1	; 0x01
    df64:	8e 35       	cpi	r24, 0x5E	; 94
    df66:	91 40       	sbci	r25, 0x01	; 1
    df68:	50 f4       	brcc	.+20     	; 0xdf7e <_Z22txMilliwattsToSettingsPjS_+0x13e>
	{
		index = 4;
    df6a:	84 e0       	ldi	r24, 0x04	; 4
    df6c:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 300;
    df6e:	8f 85       	ldd	r24, Y+15	; 0x0f
    df70:	98 89       	ldd	r25, Y+16	; 0x10
    df72:	2c e2       	ldi	r18, 0x2C	; 44
    df74:	31 e0       	ldi	r19, 0x01	; 1
    df76:	fc 01       	movw	r30, r24
    df78:	20 83       	st	Z, r18
    df7a:	31 83       	std	Z+1, r19	; 0x01
    df7c:	bd c0       	rjmp	.+378    	; 0xe0f8 <_Z22txMilliwattsToSettingsPjS_+0x2b8>
	}
	else if(*powerMW < 450)
    df7e:	8f 85       	ldd	r24, Y+15	; 0x0f
    df80:	98 89       	ldd	r25, Y+16	; 0x10
    df82:	fc 01       	movw	r30, r24
    df84:	80 81       	ld	r24, Z
    df86:	91 81       	ldd	r25, Z+1	; 0x01
    df88:	82 3c       	cpi	r24, 0xC2	; 194
    df8a:	91 40       	sbci	r25, 0x01	; 1
    df8c:	50 f4       	brcc	.+20     	; 0xdfa2 <_Z22txMilliwattsToSettingsPjS_+0x162>
	{
		index = 5;
    df8e:	85 e0       	ldi	r24, 0x05	; 5
    df90:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 400;
    df92:	8f 85       	ldd	r24, Y+15	; 0x0f
    df94:	98 89       	ldd	r25, Y+16	; 0x10
    df96:	20 e9       	ldi	r18, 0x90	; 144
    df98:	31 e0       	ldi	r19, 0x01	; 1
    df9a:	fc 01       	movw	r30, r24
    df9c:	20 83       	st	Z, r18
    df9e:	31 83       	std	Z+1, r19	; 0x01
    dfa0:	ab c0       	rjmp	.+342    	; 0xe0f8 <_Z22txMilliwattsToSettingsPjS_+0x2b8>
	}
	else if(*powerMW < 550)
    dfa2:	8f 85       	ldd	r24, Y+15	; 0x0f
    dfa4:	98 89       	ldd	r25, Y+16	; 0x10
    dfa6:	fc 01       	movw	r30, r24
    dfa8:	80 81       	ld	r24, Z
    dfaa:	91 81       	ldd	r25, Z+1	; 0x01
    dfac:	86 32       	cpi	r24, 0x26	; 38
    dfae:	92 40       	sbci	r25, 0x02	; 2
    dfb0:	50 f4       	brcc	.+20     	; 0xdfc6 <_Z22txMilliwattsToSettingsPjS_+0x186>
	{
		index = 6;
    dfb2:	86 e0       	ldi	r24, 0x06	; 6
    dfb4:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 500;
    dfb6:	8f 85       	ldd	r24, Y+15	; 0x0f
    dfb8:	98 89       	ldd	r25, Y+16	; 0x10
    dfba:	24 ef       	ldi	r18, 0xF4	; 244
    dfbc:	31 e0       	ldi	r19, 0x01	; 1
    dfbe:	fc 01       	movw	r30, r24
    dfc0:	20 83       	st	Z, r18
    dfc2:	31 83       	std	Z+1, r19	; 0x01
    dfc4:	99 c0       	rjmp	.+306    	; 0xe0f8 <_Z22txMilliwattsToSettingsPjS_+0x2b8>
	}
	else if(*powerMW < 650)
    dfc6:	8f 85       	ldd	r24, Y+15	; 0x0f
    dfc8:	98 89       	ldd	r25, Y+16	; 0x10
    dfca:	fc 01       	movw	r30, r24
    dfcc:	80 81       	ld	r24, Z
    dfce:	91 81       	ldd	r25, Z+1	; 0x01
    dfd0:	8a 38       	cpi	r24, 0x8A	; 138
    dfd2:	92 40       	sbci	r25, 0x02	; 2
    dfd4:	50 f4       	brcc	.+20     	; 0xdfea <_Z22txMilliwattsToSettingsPjS_+0x1aa>
	{
		index = 7;
    dfd6:	87 e0       	ldi	r24, 0x07	; 7
    dfd8:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 600;
    dfda:	8f 85       	ldd	r24, Y+15	; 0x0f
    dfdc:	98 89       	ldd	r25, Y+16	; 0x10
    dfde:	28 e5       	ldi	r18, 0x58	; 88
    dfe0:	32 e0       	ldi	r19, 0x02	; 2
    dfe2:	fc 01       	movw	r30, r24
    dfe4:	20 83       	st	Z, r18
    dfe6:	31 83       	std	Z+1, r19	; 0x01
    dfe8:	87 c0       	rjmp	.+270    	; 0xe0f8 <_Z22txMilliwattsToSettingsPjS_+0x2b8>
	}
	else if(*powerMW < 900)
    dfea:	8f 85       	ldd	r24, Y+15	; 0x0f
    dfec:	98 89       	ldd	r25, Y+16	; 0x10
    dfee:	fc 01       	movw	r30, r24
    dff0:	80 81       	ld	r24, Z
    dff2:	91 81       	ldd	r25, Z+1	; 0x01
    dff4:	84 38       	cpi	r24, 0x84	; 132
    dff6:	93 40       	sbci	r25, 0x03	; 3
    dff8:	50 f4       	brcc	.+20     	; 0xe00e <_Z22txMilliwattsToSettingsPjS_+0x1ce>
	{
		index = 8;
    dffa:	88 e0       	ldi	r24, 0x08	; 8
    dffc:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 800;
    dffe:	8f 85       	ldd	r24, Y+15	; 0x0f
    e000:	98 89       	ldd	r25, Y+16	; 0x10
    e002:	20 e2       	ldi	r18, 0x20	; 32
    e004:	33 e0       	ldi	r19, 0x03	; 3
    e006:	fc 01       	movw	r30, r24
    e008:	20 83       	st	Z, r18
    e00a:	31 83       	std	Z+1, r19	; 0x01
    e00c:	75 c0       	rjmp	.+234    	; 0xe0f8 <_Z22txMilliwattsToSettingsPjS_+0x2b8>
	}
	else if(*powerMW < 1250)
    e00e:	8f 85       	ldd	r24, Y+15	; 0x0f
    e010:	98 89       	ldd	r25, Y+16	; 0x10
    e012:	fc 01       	movw	r30, r24
    e014:	80 81       	ld	r24, Z
    e016:	91 81       	ldd	r25, Z+1	; 0x01
    e018:	82 3e       	cpi	r24, 0xE2	; 226
    e01a:	94 40       	sbci	r25, 0x04	; 4
    e01c:	50 f4       	brcc	.+20     	; 0xe032 <_Z22txMilliwattsToSettingsPjS_+0x1f2>
	{
		index = 9;
    e01e:	89 e0       	ldi	r24, 0x09	; 9
    e020:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 1000;
    e022:	8f 85       	ldd	r24, Y+15	; 0x0f
    e024:	98 89       	ldd	r25, Y+16	; 0x10
    e026:	28 ee       	ldi	r18, 0xE8	; 232
    e028:	33 e0       	ldi	r19, 0x03	; 3
    e02a:	fc 01       	movw	r30, r24
    e02c:	20 83       	st	Z, r18
    e02e:	31 83       	std	Z+1, r19	; 0x01
    e030:	63 c0       	rjmp	.+198    	; 0xe0f8 <_Z22txMilliwattsToSettingsPjS_+0x2b8>
	}
	else if(*powerMW < 1750)
    e032:	8f 85       	ldd	r24, Y+15	; 0x0f
    e034:	98 89       	ldd	r25, Y+16	; 0x10
    e036:	fc 01       	movw	r30, r24
    e038:	80 81       	ld	r24, Z
    e03a:	91 81       	ldd	r25, Z+1	; 0x01
    e03c:	86 3d       	cpi	r24, 0xD6	; 214
    e03e:	96 40       	sbci	r25, 0x06	; 6
    e040:	50 f4       	brcc	.+20     	; 0xe056 <_Z22txMilliwattsToSettingsPjS_+0x216>
	{
		index = 10;
    e042:	8a e0       	ldi	r24, 0x0A	; 10
    e044:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 1500;
    e046:	8f 85       	ldd	r24, Y+15	; 0x0f
    e048:	98 89       	ldd	r25, Y+16	; 0x10
    e04a:	2c ed       	ldi	r18, 0xDC	; 220
    e04c:	35 e0       	ldi	r19, 0x05	; 5
    e04e:	fc 01       	movw	r30, r24
    e050:	20 83       	st	Z, r18
    e052:	31 83       	std	Z+1, r19	; 0x01
    e054:	51 c0       	rjmp	.+162    	; 0xe0f8 <_Z22txMilliwattsToSettingsPjS_+0x2b8>
	}
	else if(*powerMW < 2250)
    e056:	8f 85       	ldd	r24, Y+15	; 0x0f
    e058:	98 89       	ldd	r25, Y+16	; 0x10
    e05a:	fc 01       	movw	r30, r24
    e05c:	80 81       	ld	r24, Z
    e05e:	91 81       	ldd	r25, Z+1	; 0x01
    e060:	8a 3c       	cpi	r24, 0xCA	; 202
    e062:	98 40       	sbci	r25, 0x08	; 8
    e064:	50 f4       	brcc	.+20     	; 0xe07a <_Z22txMilliwattsToSettingsPjS_+0x23a>
	{
		index = 11;
    e066:	8b e0       	ldi	r24, 0x0B	; 11
    e068:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 2000;
    e06a:	8f 85       	ldd	r24, Y+15	; 0x0f
    e06c:	98 89       	ldd	r25, Y+16	; 0x10
    e06e:	20 ed       	ldi	r18, 0xD0	; 208
    e070:	37 e0       	ldi	r19, 0x07	; 7
    e072:	fc 01       	movw	r30, r24
    e074:	20 83       	st	Z, r18
    e076:	31 83       	std	Z+1, r19	; 0x01
    e078:	3f c0       	rjmp	.+126    	; 0xe0f8 <_Z22txMilliwattsToSettingsPjS_+0x2b8>
	}
	else if(*powerMW < 2750)
    e07a:	8f 85       	ldd	r24, Y+15	; 0x0f
    e07c:	98 89       	ldd	r25, Y+16	; 0x10
    e07e:	fc 01       	movw	r30, r24
    e080:	80 81       	ld	r24, Z
    e082:	91 81       	ldd	r25, Z+1	; 0x01
    e084:	8e 3b       	cpi	r24, 0xBE	; 190
    e086:	9a 40       	sbci	r25, 0x0A	; 10
    e088:	50 f4       	brcc	.+20     	; 0xe09e <_Z22txMilliwattsToSettingsPjS_+0x25e>
	{
		index = 12;
    e08a:	8c e0       	ldi	r24, 0x0C	; 12
    e08c:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 2500;
    e08e:	8f 85       	ldd	r24, Y+15	; 0x0f
    e090:	98 89       	ldd	r25, Y+16	; 0x10
    e092:	24 ec       	ldi	r18, 0xC4	; 196
    e094:	39 e0       	ldi	r19, 0x09	; 9
    e096:	fc 01       	movw	r30, r24
    e098:	20 83       	st	Z, r18
    e09a:	31 83       	std	Z+1, r19	; 0x01
    e09c:	2d c0       	rjmp	.+90     	; 0xe0f8 <_Z22txMilliwattsToSettingsPjS_+0x2b8>
	}
	else if(*powerMW < 3500)
    e09e:	8f 85       	ldd	r24, Y+15	; 0x0f
    e0a0:	98 89       	ldd	r25, Y+16	; 0x10
    e0a2:	fc 01       	movw	r30, r24
    e0a4:	80 81       	ld	r24, Z
    e0a6:	91 81       	ldd	r25, Z+1	; 0x01
    e0a8:	8c 3a       	cpi	r24, 0xAC	; 172
    e0aa:	9d 40       	sbci	r25, 0x0D	; 13
    e0ac:	50 f4       	brcc	.+20     	; 0xe0c2 <_Z22txMilliwattsToSettingsPjS_+0x282>
	{
		index = 13;
    e0ae:	8d e0       	ldi	r24, 0x0D	; 13
    e0b0:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 3000;
    e0b2:	8f 85       	ldd	r24, Y+15	; 0x0f
    e0b4:	98 89       	ldd	r25, Y+16	; 0x10
    e0b6:	28 eb       	ldi	r18, 0xB8	; 184
    e0b8:	3b e0       	ldi	r19, 0x0B	; 11
    e0ba:	fc 01       	movw	r30, r24
    e0bc:	20 83       	st	Z, r18
    e0be:	31 83       	std	Z+1, r19	; 0x01
    e0c0:	1b c0       	rjmp	.+54     	; 0xe0f8 <_Z22txMilliwattsToSettingsPjS_+0x2b8>
	}
	else if(*powerMW < 4500)
    e0c2:	8f 85       	ldd	r24, Y+15	; 0x0f
    e0c4:	98 89       	ldd	r25, Y+16	; 0x10
    e0c6:	fc 01       	movw	r30, r24
    e0c8:	80 81       	ld	r24, Z
    e0ca:	91 81       	ldd	r25, Z+1	; 0x01
    e0cc:	84 39       	cpi	r24, 0x94	; 148
    e0ce:	91 41       	sbci	r25, 0x11	; 17
    e0d0:	50 f4       	brcc	.+20     	; 0xe0e6 <_Z22txMilliwattsToSettingsPjS_+0x2a6>
	{
		index = 14;
    e0d2:	8e e0       	ldi	r24, 0x0E	; 14
    e0d4:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 4000;
    e0d6:	8f 85       	ldd	r24, Y+15	; 0x0f
    e0d8:	98 89       	ldd	r25, Y+16	; 0x10
    e0da:	20 ea       	ldi	r18, 0xA0	; 160
    e0dc:	3f e0       	ldi	r19, 0x0F	; 15
    e0de:	fc 01       	movw	r30, r24
    e0e0:	20 83       	st	Z, r18
    e0e2:	31 83       	std	Z+1, r19	; 0x01
    e0e4:	09 c0       	rjmp	.+18     	; 0xe0f8 <_Z22txMilliwattsToSettingsPjS_+0x2b8>
	}
	else
	{
		index = 15;
    e0e6:	8f e0       	ldi	r24, 0x0F	; 15
    e0e8:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 5000;
    e0ea:	8f 85       	ldd	r24, Y+15	; 0x0f
    e0ec:	98 89       	ldd	r25, Y+16	; 0x10
    e0ee:	28 e8       	ldi	r18, 0x88	; 136
    e0f0:	33 e1       	ldi	r19, 0x13	; 19
    e0f2:	fc 01       	movw	r30, r24
    e0f4:	20 83       	st	Z, r18
    e0f6:	31 83       	std	Z+1, r19	; 0x01
	}

	*driveLevel = g_80m_power_table[index];
    e0f8:	8a 81       	ldd	r24, Y+2	; 0x02
    e0fa:	88 2f       	mov	r24, r24
    e0fc:	90 e0       	ldi	r25, 0x00	; 0
    e0fe:	88 0f       	add	r24, r24
    e100:	99 1f       	adc	r25, r25
    e102:	85 5a       	subi	r24, 0xA5	; 165
    e104:	9f 4b       	sbci	r25, 0xBF	; 191
    e106:	fc 01       	movw	r30, r24
    e108:	20 81       	ld	r18, Z
    e10a:	31 81       	ldd	r19, Z+1	; 0x01
    e10c:	89 89       	ldd	r24, Y+17	; 0x11
    e10e:	9a 89       	ldd	r25, Y+18	; 0x12
    e110:	fc 01       	movw	r30, r24
    e112:	20 83       	st	Z, r18
    e114:	31 83       	std	Z+1, r19	; 0x01
	*driveLevel = MIN(*driveLevel, MAX_80M_PWR_SETTING);
    e116:	89 89       	ldd	r24, Y+17	; 0x11
    e118:	9a 89       	ldd	r25, Y+18	; 0x12
    e11a:	fc 01       	movw	r30, r24
    e11c:	80 81       	ld	r24, Z
    e11e:	91 81       	ldd	r25, Z+1	; 0x01
    e120:	8b 87       	std	Y+11, r24	; 0x0b
    e122:	9c 87       	std	Y+12, r25	; 0x0c
    e124:	80 e0       	ldi	r24, 0x00	; 0
    e126:	94 e0       	ldi	r25, 0x04	; 4
    e128:	8d 87       	std	Y+13, r24	; 0x0d
    e12a:	9e 87       	std	Y+14, r25	; 0x0e
    e12c:	2b 85       	ldd	r18, Y+11	; 0x0b
    e12e:	3c 85       	ldd	r19, Y+12	; 0x0c
    e130:	8d 85       	ldd	r24, Y+13	; 0x0d
    e132:	9e 85       	ldd	r25, Y+14	; 0x0e
    e134:	28 17       	cp	r18, r24
    e136:	39 07       	cpc	r19, r25
    e138:	18 f4       	brcc	.+6      	; 0xe140 <_Z22txMilliwattsToSettingsPjS_+0x300>
    e13a:	8b 85       	ldd	r24, Y+11	; 0x0b
    e13c:	9c 85       	ldd	r25, Y+12	; 0x0c
    e13e:	02 c0       	rjmp	.+4      	; 0xe144 <_Z22txMilliwattsToSettingsPjS_+0x304>
    e140:	8d 85       	ldd	r24, Y+13	; 0x0d
    e142:	9e 85       	ldd	r25, Y+14	; 0x0e
    e144:	29 89       	ldd	r18, Y+17	; 0x11
    e146:	3a 89       	ldd	r19, Y+18	; 0x12
    e148:	f9 01       	movw	r30, r18
    e14a:	80 83       	st	Z, r24
    e14c:	91 83       	std	Z+1, r25	; 0x01

	return(ec);
    e14e:	89 81       	ldd	r24, Y+1	; 0x01
    e150:	62 96       	adiw	r28, 0x12	; 18
    e152:	cd bf       	out	0x3d, r28	; 61
    e154:	de bf       	out	0x3e, r29	; 62
    e156:	df 91       	pop	r29
    e158:	cf 91       	pop	r28
    e15a:	08 95       	ret

0000e15c <USART0_get_data>:
 * \return Nothing
 */
void USART4_enable_rx()
{
	USART4.CTRLB |= USART_RXEN_bm;
}
    e15c:	cf 93       	push	r28
    e15e:	df 93       	push	r29
    e160:	cd b7       	in	r28, 0x3d	; 61
    e162:	de b7       	in	r29, 0x3e	; 62
    e164:	80 e0       	ldi	r24, 0x00	; 0
    e166:	98 e0       	ldi	r25, 0x08	; 8
    e168:	fc 01       	movw	r30, r24
    e16a:	80 81       	ld	r24, Z
    e16c:	df 91       	pop	r29
    e16e:	cf 91       	pop	r28
    e170:	08 95       	ret

0000e172 <USART1_init>:
    e172:	0f 93       	push	r16
    e174:	1f 93       	push	r17
    e176:	cf 93       	push	r28
    e178:	df 93       	push	r29
    e17a:	cd b7       	in	r28, 0x3d	; 61
    e17c:	de b7       	in	r29, 0x3e	; 62
    e17e:	25 97       	sbiw	r28, 0x05	; 5
    e180:	cd bf       	out	0x3d, r28	; 61
    e182:	de bf       	out	0x3e, r29	; 62
    e184:	69 83       	std	Y+1, r22	; 0x01
    e186:	7a 83       	std	Y+2, r23	; 0x02
    e188:	8b 83       	std	Y+3, r24	; 0x03
    e18a:	9c 83       	std	Y+4, r25	; 0x04
    e18c:	4d 83       	std	Y+5, r20	; 0x05
    e18e:	f8 94       	cli
    e190:	00 e2       	ldi	r16, 0x20	; 32
    e192:	18 e0       	ldi	r17, 0x08	; 8
    e194:	69 81       	ldd	r22, Y+1	; 0x01
    e196:	7a 81       	ldd	r23, Y+2	; 0x02
    e198:	8b 81       	ldd	r24, Y+3	; 0x03
    e19a:	9c 81       	ldd	r25, Y+4	; 0x04
    e19c:	0e 94 77 73 	call	0xe6ee	; 0xe6ee <__floatunsisf>
    e1a0:	dc 01       	movw	r26, r24
    e1a2:	cb 01       	movw	r24, r22
    e1a4:	20 e0       	ldi	r18, 0x00	; 0
    e1a6:	30 e0       	ldi	r19, 0x00	; 0
    e1a8:	40 e8       	ldi	r20, 0x80	; 128
    e1aa:	51 e4       	ldi	r21, 0x41	; 65
    e1ac:	bc 01       	movw	r22, r24
    e1ae:	cd 01       	movw	r24, r26
    e1b0:	0e 94 2e 74 	call	0xe85c	; 0xe85c <__mulsf3>
    e1b4:	dc 01       	movw	r26, r24
    e1b6:	cb 01       	movw	r24, r22
    e1b8:	9c 01       	movw	r18, r24
    e1ba:	ad 01       	movw	r20, r26
    e1bc:	60 e0       	ldi	r22, 0x00	; 0
    e1be:	7b e1       	ldi	r23, 0x1B	; 27
    e1c0:	87 eb       	ldi	r24, 0xB7	; 183
    e1c2:	9e e4       	ldi	r25, 0x4E	; 78
    e1c4:	0e 94 cf 72 	call	0xe59e	; 0xe59e <__divsf3>
    e1c8:	dc 01       	movw	r26, r24
    e1ca:	cb 01       	movw	r24, r22
    e1cc:	20 e0       	ldi	r18, 0x00	; 0
    e1ce:	30 e0       	ldi	r19, 0x00	; 0
    e1d0:	40 e0       	ldi	r20, 0x00	; 0
    e1d2:	5f e3       	ldi	r21, 0x3F	; 63
    e1d4:	bc 01       	movw	r22, r24
    e1d6:	cd 01       	movw	r24, r26
    e1d8:	0e 94 5e 72 	call	0xe4bc	; 0xe4bc <__addsf3>
    e1dc:	dc 01       	movw	r26, r24
    e1de:	cb 01       	movw	r24, r22
    e1e0:	bc 01       	movw	r22, r24
    e1e2:	cd 01       	movw	r24, r26
    e1e4:	0e 94 48 73 	call	0xe690	; 0xe690 <__fixunssfsi>
    e1e8:	dc 01       	movw	r26, r24
    e1ea:	cb 01       	movw	r24, r22
    e1ec:	f8 01       	movw	r30, r16
    e1ee:	80 87       	std	Z+8, r24	; 0x08
    e1f0:	91 87       	std	Z+9, r25	; 0x09
    e1f2:	80 e2       	ldi	r24, 0x20	; 32
    e1f4:	98 e0       	ldi	r25, 0x08	; 8
    e1f6:	20 e8       	ldi	r18, 0x80	; 128
    e1f8:	fc 01       	movw	r30, r24
    e1fa:	25 83       	std	Z+5, r18	; 0x05
    e1fc:	80 e2       	ldi	r24, 0x20	; 32
    e1fe:	98 e0       	ldi	r25, 0x08	; 8
    e200:	23 e0       	ldi	r18, 0x03	; 3
    e202:	fc 01       	movw	r30, r24
    e204:	27 83       	std	Z+7, r18	; 0x07
    e206:	8d 81       	ldd	r24, Y+5	; 0x05
    e208:	88 23       	and	r24, r24
    e20a:	31 f0       	breq	.+12     	; 0xe218 <USART1_init+0xa6>
    e20c:	80 e2       	ldi	r24, 0x20	; 32
    e20e:	98 e0       	ldi	r25, 0x08	; 8
    e210:	24 ec       	ldi	r18, 0xC4	; 196
    e212:	fc 01       	movw	r30, r24
    e214:	26 83       	std	Z+6, r18	; 0x06
    e216:	05 c0       	rjmp	.+10     	; 0xe222 <USART1_init+0xb0>
    e218:	80 e2       	ldi	r24, 0x20	; 32
    e21a:	98 e0       	ldi	r25, 0x08	; 8
    e21c:	20 ec       	ldi	r18, 0xC0	; 192
    e21e:	fc 01       	movw	r30, r24
    e220:	26 83       	std	Z+6, r18	; 0x06
    e222:	78 94       	sei
    e224:	80 e0       	ldi	r24, 0x00	; 0
    e226:	25 96       	adiw	r28, 0x05	; 5
    e228:	cd bf       	out	0x3d, r28	; 61
    e22a:	de bf       	out	0x3e, r29	; 62
    e22c:	df 91       	pop	r29
    e22e:	cf 91       	pop	r28
    e230:	1f 91       	pop	r17
    e232:	0f 91       	pop	r16
    e234:	08 95       	ret

0000e236 <USART1_enable>:
    e236:	cf 93       	push	r28
    e238:	df 93       	push	r29
    e23a:	cd b7       	in	r28, 0x3d	; 61
    e23c:	de b7       	in	r29, 0x3e	; 62
    e23e:	80 e2       	ldi	r24, 0x20	; 32
    e240:	98 e0       	ldi	r25, 0x08	; 8
    e242:	20 e2       	ldi	r18, 0x20	; 32
    e244:	38 e0       	ldi	r19, 0x08	; 8
    e246:	f9 01       	movw	r30, r18
    e248:	26 81       	ldd	r18, Z+6	; 0x06
    e24a:	20 6c       	ori	r18, 0xC0	; 192
    e24c:	fc 01       	movw	r30, r24
    e24e:	26 83       	std	Z+6, r18	; 0x06
    e250:	00 00       	nop
    e252:	df 91       	pop	r29
    e254:	cf 91       	pop	r28
    e256:	08 95       	ret

0000e258 <USART1_enable_tx>:
    e258:	cf 93       	push	r28
    e25a:	df 93       	push	r29
    e25c:	cd b7       	in	r28, 0x3d	; 61
    e25e:	de b7       	in	r29, 0x3e	; 62
    e260:	80 e2       	ldi	r24, 0x20	; 32
    e262:	98 e0       	ldi	r25, 0x08	; 8
    e264:	20 e2       	ldi	r18, 0x20	; 32
    e266:	38 e0       	ldi	r19, 0x08	; 8
    e268:	f9 01       	movw	r30, r18
    e26a:	26 81       	ldd	r18, Z+6	; 0x06
    e26c:	20 64       	ori	r18, 0x40	; 64
    e26e:	fc 01       	movw	r30, r24
    e270:	26 83       	std	Z+6, r18	; 0x06
    e272:	80 e2       	ldi	r24, 0x20	; 32
    e274:	98 e0       	ldi	r25, 0x08	; 8
    e276:	20 e2       	ldi	r18, 0x20	; 32
    e278:	38 e0       	ldi	r19, 0x08	; 8
    e27a:	f9 01       	movw	r30, r18
    e27c:	25 81       	ldd	r18, Z+5	; 0x05
    e27e:	20 62       	ori	r18, 0x20	; 32
    e280:	fc 01       	movw	r30, r24
    e282:	25 83       	std	Z+5, r18	; 0x05
    e284:	00 00       	nop
    e286:	df 91       	pop	r29
    e288:	cf 91       	pop	r28
    e28a:	08 95       	ret

0000e28c <USART1_disable>:
    e28c:	cf 93       	push	r28
    e28e:	df 93       	push	r29
    e290:	cd b7       	in	r28, 0x3d	; 61
    e292:	de b7       	in	r29, 0x3e	; 62
    e294:	80 e2       	ldi	r24, 0x20	; 32
    e296:	98 e0       	ldi	r25, 0x08	; 8
    e298:	20 e2       	ldi	r18, 0x20	; 32
    e29a:	38 e0       	ldi	r19, 0x08	; 8
    e29c:	f9 01       	movw	r30, r18
    e29e:	26 81       	ldd	r18, Z+6	; 0x06
    e2a0:	2f 73       	andi	r18, 0x3F	; 63
    e2a2:	fc 01       	movw	r30, r24
    e2a4:	26 83       	std	Z+6, r18	; 0x06
    e2a6:	00 00       	nop
    e2a8:	df 91       	pop	r29
    e2aa:	cf 91       	pop	r28
    e2ac:	08 95       	ret

0000e2ae <USART1_get_data>:
    e2ae:	cf 93       	push	r28
    e2b0:	df 93       	push	r29
    e2b2:	cd b7       	in	r28, 0x3d	; 61
    e2b4:	de b7       	in	r29, 0x3e	; 62
    e2b6:	80 e2       	ldi	r24, 0x20	; 32
    e2b8:	98 e0       	ldi	r25, 0x08	; 8
    e2ba:	fc 01       	movw	r30, r24
    e2bc:	80 81       	ld	r24, Z
    e2be:	df 91       	pop	r29
    e2c0:	cf 91       	pop	r28
    e2c2:	08 95       	ret

0000e2c4 <USART4_init>:
    e2c4:	0f 93       	push	r16
    e2c6:	1f 93       	push	r17
    e2c8:	cf 93       	push	r28
    e2ca:	df 93       	push	r29
    e2cc:	cd b7       	in	r28, 0x3d	; 61
    e2ce:	de b7       	in	r29, 0x3e	; 62
    e2d0:	25 97       	sbiw	r28, 0x05	; 5
    e2d2:	cd bf       	out	0x3d, r28	; 61
    e2d4:	de bf       	out	0x3e, r29	; 62
    e2d6:	69 83       	std	Y+1, r22	; 0x01
    e2d8:	7a 83       	std	Y+2, r23	; 0x02
    e2da:	8b 83       	std	Y+3, r24	; 0x03
    e2dc:	9c 83       	std	Y+4, r25	; 0x04
    e2de:	4d 83       	std	Y+5, r20	; 0x05
    e2e0:	00 e8       	ldi	r16, 0x80	; 128
    e2e2:	18 e0       	ldi	r17, 0x08	; 8
    e2e4:	69 81       	ldd	r22, Y+1	; 0x01
    e2e6:	7a 81       	ldd	r23, Y+2	; 0x02
    e2e8:	8b 81       	ldd	r24, Y+3	; 0x03
    e2ea:	9c 81       	ldd	r25, Y+4	; 0x04
    e2ec:	0e 94 77 73 	call	0xe6ee	; 0xe6ee <__floatunsisf>
    e2f0:	dc 01       	movw	r26, r24
    e2f2:	cb 01       	movw	r24, r22
    e2f4:	20 e0       	ldi	r18, 0x00	; 0
    e2f6:	30 e0       	ldi	r19, 0x00	; 0
    e2f8:	40 e8       	ldi	r20, 0x80	; 128
    e2fa:	51 e4       	ldi	r21, 0x41	; 65
    e2fc:	bc 01       	movw	r22, r24
    e2fe:	cd 01       	movw	r24, r26
    e300:	0e 94 2e 74 	call	0xe85c	; 0xe85c <__mulsf3>
    e304:	dc 01       	movw	r26, r24
    e306:	cb 01       	movw	r24, r22
    e308:	9c 01       	movw	r18, r24
    e30a:	ad 01       	movw	r20, r26
    e30c:	60 e0       	ldi	r22, 0x00	; 0
    e30e:	7b e1       	ldi	r23, 0x1B	; 27
    e310:	87 eb       	ldi	r24, 0xB7	; 183
    e312:	9e e4       	ldi	r25, 0x4E	; 78
    e314:	0e 94 cf 72 	call	0xe59e	; 0xe59e <__divsf3>
    e318:	dc 01       	movw	r26, r24
    e31a:	cb 01       	movw	r24, r22
    e31c:	20 e0       	ldi	r18, 0x00	; 0
    e31e:	30 e0       	ldi	r19, 0x00	; 0
    e320:	40 e0       	ldi	r20, 0x00	; 0
    e322:	5f e3       	ldi	r21, 0x3F	; 63
    e324:	bc 01       	movw	r22, r24
    e326:	cd 01       	movw	r24, r26
    e328:	0e 94 5e 72 	call	0xe4bc	; 0xe4bc <__addsf3>
    e32c:	dc 01       	movw	r26, r24
    e32e:	cb 01       	movw	r24, r22
    e330:	bc 01       	movw	r22, r24
    e332:	cd 01       	movw	r24, r26
    e334:	0e 94 48 73 	call	0xe690	; 0xe690 <__fixunssfsi>
    e338:	dc 01       	movw	r26, r24
    e33a:	cb 01       	movw	r24, r22
    e33c:	f8 01       	movw	r30, r16
    e33e:	80 87       	std	Z+8, r24	; 0x08
    e340:	91 87       	std	Z+9, r25	; 0x09
    e342:	80 e8       	ldi	r24, 0x80	; 128
    e344:	98 e0       	ldi	r25, 0x08	; 8
    e346:	20 e8       	ldi	r18, 0x80	; 128
    e348:	fc 01       	movw	r30, r24
    e34a:	25 83       	std	Z+5, r18	; 0x05
    e34c:	8d 81       	ldd	r24, Y+5	; 0x05
    e34e:	88 23       	and	r24, r24
    e350:	31 f0       	breq	.+12     	; 0xe35e <USART4_init+0x9a>
    e352:	80 e8       	ldi	r24, 0x80	; 128
    e354:	98 e0       	ldi	r25, 0x08	; 8
    e356:	24 ec       	ldi	r18, 0xC4	; 196
    e358:	fc 01       	movw	r30, r24
    e35a:	26 83       	std	Z+6, r18	; 0x06
    e35c:	05 c0       	rjmp	.+10     	; 0xe368 <USART4_init+0xa4>
    e35e:	80 e8       	ldi	r24, 0x80	; 128
    e360:	98 e0       	ldi	r25, 0x08	; 8
    e362:	20 ec       	ldi	r18, 0xC0	; 192
    e364:	fc 01       	movw	r30, r24
    e366:	26 83       	std	Z+6, r18	; 0x06
    e368:	80 e0       	ldi	r24, 0x00	; 0
    e36a:	25 96       	adiw	r28, 0x05	; 5
    e36c:	cd bf       	out	0x3d, r28	; 61
    e36e:	de bf       	out	0x3e, r29	; 62
    e370:	df 91       	pop	r29
    e372:	cf 91       	pop	r28
    e374:	1f 91       	pop	r17
    e376:	0f 91       	pop	r16
    e378:	08 95       	ret

0000e37a <USART4_enable>:
    e37a:	cf 93       	push	r28
    e37c:	df 93       	push	r29
    e37e:	cd b7       	in	r28, 0x3d	; 61
    e380:	de b7       	in	r29, 0x3e	; 62
    e382:	80 e8       	ldi	r24, 0x80	; 128
    e384:	98 e0       	ldi	r25, 0x08	; 8
    e386:	20 e8       	ldi	r18, 0x80	; 128
    e388:	38 e0       	ldi	r19, 0x08	; 8
    e38a:	f9 01       	movw	r30, r18
    e38c:	26 81       	ldd	r18, Z+6	; 0x06
    e38e:	20 6c       	ori	r18, 0xC0	; 192
    e390:	fc 01       	movw	r30, r24
    e392:	26 83       	std	Z+6, r18	; 0x06
    e394:	00 00       	nop
    e396:	df 91       	pop	r29
    e398:	cf 91       	pop	r28
    e39a:	08 95       	ret

0000e39c <USART4_enable_tx>:
 * 2. Enables the USART module by setting the TX enable-bit in the USART control register
 *
 * \return Nothing
 */
void USART4_enable_tx()
{
    e39c:	cf 93       	push	r28
    e39e:	df 93       	push	r29
    e3a0:	cd b7       	in	r28, 0x3d	; 61
    e3a2:	de b7       	in	r29, 0x3e	; 62
	USART4.CTRLB |= USART_TXEN_bm;
    e3a4:	80 e8       	ldi	r24, 0x80	; 128
    e3a6:	98 e0       	ldi	r25, 0x08	; 8
    e3a8:	20 e8       	ldi	r18, 0x80	; 128
    e3aa:	38 e0       	ldi	r19, 0x08	; 8
    e3ac:	f9 01       	movw	r30, r18
    e3ae:	26 81       	ldd	r18, Z+6	; 0x06
    e3b0:	20 64       	ori	r18, 0x40	; 64
    e3b2:	fc 01       	movw	r30, r24
    e3b4:	26 83       	std	Z+6, r18	; 0x06
	USART4.CTRLA |= 1 << USART_DREIE_bp; /* Transmit Data Ready Interrupt Enable: enable */
    e3b6:	80 e8       	ldi	r24, 0x80	; 128
    e3b8:	98 e0       	ldi	r25, 0x08	; 8
    e3ba:	20 e8       	ldi	r18, 0x80	; 128
    e3bc:	38 e0       	ldi	r19, 0x08	; 8
    e3be:	f9 01       	movw	r30, r18
    e3c0:	25 81       	ldd	r18, Z+5	; 0x05
    e3c2:	20 62       	ori	r18, 0x20	; 32
    e3c4:	fc 01       	movw	r30, r24
    e3c6:	25 83       	std	Z+5, r18	; 0x05
//	USART4.STATUS |= 1 << USART_TXEN_bp; /* Clear any existing flag setting */
}
    e3c8:	00 00       	nop
    e3ca:	df 91       	pop	r29
    e3cc:	cf 91       	pop	r28
    e3ce:	08 95       	ret

0000e3d0 <USART4_disable>:
 * 2. If supported by the clock system, disables the clock to the USART
 *
 * \return Nothing
 */
void USART4_disable()
{
    e3d0:	cf 93       	push	r28
    e3d2:	df 93       	push	r29
    e3d4:	cd b7       	in	r28, 0x3d	; 61
    e3d6:	de b7       	in	r29, 0x3e	; 62
	USART4.CTRLB &= ~(USART_RXEN_bm | USART_TXEN_bm);
    e3d8:	80 e8       	ldi	r24, 0x80	; 128
    e3da:	98 e0       	ldi	r25, 0x08	; 8
    e3dc:	20 e8       	ldi	r18, 0x80	; 128
    e3de:	38 e0       	ldi	r19, 0x08	; 8
    e3e0:	f9 01       	movw	r30, r18
    e3e2:	26 81       	ldd	r18, Z+6	; 0x06
    e3e4:	2f 73       	andi	r18, 0x3F	; 63
    e3e6:	fc 01       	movw	r30, r24
    e3e8:	26 83       	std	Z+6, r18	; 0x06
}
    e3ea:	00 00       	nop
    e3ec:	df 91       	pop	r29
    e3ee:	cf 91       	pop	r28
    e3f0:	08 95       	ret

0000e3f2 <USART4_get_data>:
 * \brief Get recieved data from USART4
 *
 * \return Data register from USART4 module
 */
uint8_t USART4_get_data()
{
    e3f2:	cf 93       	push	r28
    e3f4:	df 93       	push	r29
    e3f6:	cd b7       	in	r28, 0x3d	; 61
    e3f8:	de b7       	in	r29, 0x3e	; 62
	return USART4.RXDATAL;
    e3fa:	80 e8       	ldi	r24, 0x80	; 128
    e3fc:	98 e0       	ldi	r25, 0x08	; 8
    e3fe:	fc 01       	movw	r30, r24
    e400:	80 81       	ld	r24, Z
}
    e402:	df 91       	pop	r29
    e404:	cf 91       	pop	r28
    e406:	08 95       	ret

0000e408 <_Z7timeDifmm>:
/**
 * Returns a-b
 * It appears difftime might not be handling subtraction of unsigned arguments correctly with current compiler. This function avoids any problems.
 */
int32_t timeDif(time_t a, time_t b)
{
    e408:	ef 92       	push	r14
    e40a:	ff 92       	push	r15
    e40c:	0f 93       	push	r16
    e40e:	1f 93       	push	r17
    e410:	cf 93       	push	r28
    e412:	df 93       	push	r29
    e414:	cd b7       	in	r28, 0x3d	; 61
    e416:	de b7       	in	r29, 0x3e	; 62
    e418:	2c 97       	sbiw	r28, 0x0c	; 12
    e41a:	cd bf       	out	0x3d, r28	; 61
    e41c:	de bf       	out	0x3e, r29	; 62
    e41e:	6d 83       	std	Y+5, r22	; 0x05
    e420:	7e 83       	std	Y+6, r23	; 0x06
    e422:	8f 83       	std	Y+7, r24	; 0x07
    e424:	98 87       	std	Y+8, r25	; 0x08
    e426:	29 87       	std	Y+9, r18	; 0x09
    e428:	3a 87       	std	Y+10, r19	; 0x0a
    e42a:	4b 87       	std	Y+11, r20	; 0x0b
    e42c:	5c 87       	std	Y+12, r21	; 0x0c
	int32_t dif; // = difftime(now, g_event_start_epoch); // returns arg1 - arg2
	if(a > b)
    e42e:	2d 81       	ldd	r18, Y+5	; 0x05
    e430:	3e 81       	ldd	r19, Y+6	; 0x06
    e432:	4f 81       	ldd	r20, Y+7	; 0x07
    e434:	58 85       	ldd	r21, Y+8	; 0x08
    e436:	89 85       	ldd	r24, Y+9	; 0x09
    e438:	9a 85       	ldd	r25, Y+10	; 0x0a
    e43a:	ab 85       	ldd	r26, Y+11	; 0x0b
    e43c:	bc 85       	ldd	r27, Y+12	; 0x0c
    e43e:	82 17       	cp	r24, r18
    e440:	93 07       	cpc	r25, r19
    e442:	a4 07       	cpc	r26, r20
    e444:	b5 07       	cpc	r27, r21
    e446:	a8 f4       	brcc	.+42     	; 0xe472 <_Z7timeDifmm+0x6a>
		dif = a - b;
    e448:	2d 81       	ldd	r18, Y+5	; 0x05
    e44a:	3e 81       	ldd	r19, Y+6	; 0x06
    e44c:	4f 81       	ldd	r20, Y+7	; 0x07
    e44e:	58 85       	ldd	r21, Y+8	; 0x08
    e450:	89 85       	ldd	r24, Y+9	; 0x09
    e452:	9a 85       	ldd	r25, Y+10	; 0x0a
    e454:	ab 85       	ldd	r26, Y+11	; 0x0b
    e456:	bc 85       	ldd	r27, Y+12	; 0x0c
    e458:	79 01       	movw	r14, r18
    e45a:	8a 01       	movw	r16, r20
    e45c:	e8 1a       	sub	r14, r24
    e45e:	f9 0a       	sbc	r15, r25
    e460:	0a 0b       	sbc	r16, r26
    e462:	1b 0b       	sbc	r17, r27
    e464:	d8 01       	movw	r26, r16
    e466:	c7 01       	movw	r24, r14
    e468:	89 83       	std	Y+1, r24	; 0x01
    e46a:	9a 83       	std	Y+2, r25	; 0x02
    e46c:	ab 83       	std	Y+3, r26	; 0x03
    e46e:	bc 83       	std	Y+4, r27	; 0x04
    e470:	14 c0       	rjmp	.+40     	; 0xe49a <_Z7timeDifmm+0x92>
	else
		dif = -(b - a);
    e472:	2d 81       	ldd	r18, Y+5	; 0x05
    e474:	3e 81       	ldd	r19, Y+6	; 0x06
    e476:	4f 81       	ldd	r20, Y+7	; 0x07
    e478:	58 85       	ldd	r21, Y+8	; 0x08
    e47a:	89 85       	ldd	r24, Y+9	; 0x09
    e47c:	9a 85       	ldd	r25, Y+10	; 0x0a
    e47e:	ab 85       	ldd	r26, Y+11	; 0x0b
    e480:	bc 85       	ldd	r27, Y+12	; 0x0c
    e482:	79 01       	movw	r14, r18
    e484:	8a 01       	movw	r16, r20
    e486:	e8 1a       	sub	r14, r24
    e488:	f9 0a       	sbc	r15, r25
    e48a:	0a 0b       	sbc	r16, r26
    e48c:	1b 0b       	sbc	r17, r27
    e48e:	d8 01       	movw	r26, r16
    e490:	c7 01       	movw	r24, r14
    e492:	89 83       	std	Y+1, r24	; 0x01
    e494:	9a 83       	std	Y+2, r25	; 0x02
    e496:	ab 83       	std	Y+3, r26	; 0x03
    e498:	bc 83       	std	Y+4, r27	; 0x04

	return dif;
    e49a:	89 81       	ldd	r24, Y+1	; 0x01
    e49c:	9a 81       	ldd	r25, Y+2	; 0x02
    e49e:	ab 81       	ldd	r26, Y+3	; 0x03
    e4a0:	bc 81       	ldd	r27, Y+4	; 0x04
}
    e4a2:	bc 01       	movw	r22, r24
    e4a4:	cd 01       	movw	r24, r26
    e4a6:	2c 96       	adiw	r28, 0x0c	; 12
    e4a8:	cd bf       	out	0x3d, r28	; 61
    e4aa:	de bf       	out	0x3e, r29	; 62
    e4ac:	df 91       	pop	r29
    e4ae:	cf 91       	pop	r28
    e4b0:	1f 91       	pop	r17
    e4b2:	0f 91       	pop	r16
    e4b4:	ff 90       	pop	r15
    e4b6:	ef 90       	pop	r14
    e4b8:	08 95       	ret

0000e4ba <__subsf3>:
    e4ba:	50 58       	subi	r21, 0x80	; 128

0000e4bc <__addsf3>:
    e4bc:	bb 27       	eor	r27, r27
    e4be:	aa 27       	eor	r26, r26
    e4c0:	0e 94 75 72 	call	0xe4ea	; 0xe4ea <__addsf3x>
    e4c4:	0c 94 ef 73 	jmp	0xe7de	; 0xe7de <__fp_round>
    e4c8:	0e 94 e1 73 	call	0xe7c2	; 0xe7c2 <__fp_pscA>
    e4cc:	38 f0       	brcs	.+14     	; 0xe4dc <__addsf3+0x20>
    e4ce:	0e 94 e8 73 	call	0xe7d0	; 0xe7d0 <__fp_pscB>
    e4d2:	20 f0       	brcs	.+8      	; 0xe4dc <__addsf3+0x20>
    e4d4:	39 f4       	brne	.+14     	; 0xe4e4 <__addsf3+0x28>
    e4d6:	9f 3f       	cpi	r25, 0xFF	; 255
    e4d8:	19 f4       	brne	.+6      	; 0xe4e0 <__addsf3+0x24>
    e4da:	26 f4       	brtc	.+8      	; 0xe4e4 <__addsf3+0x28>
    e4dc:	0c 94 de 73 	jmp	0xe7bc	; 0xe7bc <__fp_nan>
    e4e0:	0e f4       	brtc	.+2      	; 0xe4e4 <__addsf3+0x28>
    e4e2:	e0 95       	com	r30
    e4e4:	e7 fb       	bst	r30, 7
    e4e6:	0c 94 d8 73 	jmp	0xe7b0	; 0xe7b0 <__fp_inf>

0000e4ea <__addsf3x>:
    e4ea:	e9 2f       	mov	r30, r25
    e4ec:	0e 94 00 74 	call	0xe800	; 0xe800 <__fp_split3>
    e4f0:	58 f3       	brcs	.-42     	; 0xe4c8 <__addsf3+0xc>
    e4f2:	ba 17       	cp	r27, r26
    e4f4:	62 07       	cpc	r22, r18
    e4f6:	73 07       	cpc	r23, r19
    e4f8:	84 07       	cpc	r24, r20
    e4fa:	95 07       	cpc	r25, r21
    e4fc:	20 f0       	brcs	.+8      	; 0xe506 <__addsf3x+0x1c>
    e4fe:	79 f4       	brne	.+30     	; 0xe51e <__addsf3x+0x34>
    e500:	a6 f5       	brtc	.+104    	; 0xe56a <__addsf3x+0x80>
    e502:	0c 94 22 74 	jmp	0xe844	; 0xe844 <__fp_zero>
    e506:	0e f4       	brtc	.+2      	; 0xe50a <__addsf3x+0x20>
    e508:	e0 95       	com	r30
    e50a:	0b 2e       	mov	r0, r27
    e50c:	ba 2f       	mov	r27, r26
    e50e:	a0 2d       	mov	r26, r0
    e510:	0b 01       	movw	r0, r22
    e512:	b9 01       	movw	r22, r18
    e514:	90 01       	movw	r18, r0
    e516:	0c 01       	movw	r0, r24
    e518:	ca 01       	movw	r24, r20
    e51a:	a0 01       	movw	r20, r0
    e51c:	11 24       	eor	r1, r1
    e51e:	ff 27       	eor	r31, r31
    e520:	59 1b       	sub	r21, r25
    e522:	99 f0       	breq	.+38     	; 0xe54a <__addsf3x+0x60>
    e524:	59 3f       	cpi	r21, 0xF9	; 249
    e526:	50 f4       	brcc	.+20     	; 0xe53c <__addsf3x+0x52>
    e528:	50 3e       	cpi	r21, 0xE0	; 224
    e52a:	68 f1       	brcs	.+90     	; 0xe586 <__addsf3x+0x9c>
    e52c:	1a 16       	cp	r1, r26
    e52e:	f0 40       	sbci	r31, 0x00	; 0
    e530:	a2 2f       	mov	r26, r18
    e532:	23 2f       	mov	r18, r19
    e534:	34 2f       	mov	r19, r20
    e536:	44 27       	eor	r20, r20
    e538:	58 5f       	subi	r21, 0xF8	; 248
    e53a:	f3 cf       	rjmp	.-26     	; 0xe522 <__addsf3x+0x38>
    e53c:	46 95       	lsr	r20
    e53e:	37 95       	ror	r19
    e540:	27 95       	ror	r18
    e542:	a7 95       	ror	r26
    e544:	f0 40       	sbci	r31, 0x00	; 0
    e546:	53 95       	inc	r21
    e548:	c9 f7       	brne	.-14     	; 0xe53c <__addsf3x+0x52>
    e54a:	7e f4       	brtc	.+30     	; 0xe56a <__addsf3x+0x80>
    e54c:	1f 16       	cp	r1, r31
    e54e:	ba 0b       	sbc	r27, r26
    e550:	62 0b       	sbc	r22, r18
    e552:	73 0b       	sbc	r23, r19
    e554:	84 0b       	sbc	r24, r20
    e556:	ba f0       	brmi	.+46     	; 0xe586 <__addsf3x+0x9c>
    e558:	91 50       	subi	r25, 0x01	; 1
    e55a:	a1 f0       	breq	.+40     	; 0xe584 <__addsf3x+0x9a>
    e55c:	ff 0f       	add	r31, r31
    e55e:	bb 1f       	adc	r27, r27
    e560:	66 1f       	adc	r22, r22
    e562:	77 1f       	adc	r23, r23
    e564:	88 1f       	adc	r24, r24
    e566:	c2 f7       	brpl	.-16     	; 0xe558 <__addsf3x+0x6e>
    e568:	0e c0       	rjmp	.+28     	; 0xe586 <__addsf3x+0x9c>
    e56a:	ba 0f       	add	r27, r26
    e56c:	62 1f       	adc	r22, r18
    e56e:	73 1f       	adc	r23, r19
    e570:	84 1f       	adc	r24, r20
    e572:	48 f4       	brcc	.+18     	; 0xe586 <__addsf3x+0x9c>
    e574:	87 95       	ror	r24
    e576:	77 95       	ror	r23
    e578:	67 95       	ror	r22
    e57a:	b7 95       	ror	r27
    e57c:	f7 95       	ror	r31
    e57e:	9e 3f       	cpi	r25, 0xFE	; 254
    e580:	08 f0       	brcs	.+2      	; 0xe584 <__addsf3x+0x9a>
    e582:	b0 cf       	rjmp	.-160    	; 0xe4e4 <__addsf3+0x28>
    e584:	93 95       	inc	r25
    e586:	88 0f       	add	r24, r24
    e588:	08 f0       	brcs	.+2      	; 0xe58c <__addsf3x+0xa2>
    e58a:	99 27       	eor	r25, r25
    e58c:	ee 0f       	add	r30, r30
    e58e:	97 95       	ror	r25
    e590:	87 95       	ror	r24
    e592:	08 95       	ret

0000e594 <__cmpsf2>:
    e594:	0e 94 b4 73 	call	0xe768	; 0xe768 <__fp_cmp>
    e598:	08 f4       	brcc	.+2      	; 0xe59c <__cmpsf2+0x8>
    e59a:	81 e0       	ldi	r24, 0x01	; 1
    e59c:	08 95       	ret

0000e59e <__divsf3>:
    e59e:	0e 94 e3 72 	call	0xe5c6	; 0xe5c6 <__divsf3x>
    e5a2:	0c 94 ef 73 	jmp	0xe7de	; 0xe7de <__fp_round>
    e5a6:	0e 94 e8 73 	call	0xe7d0	; 0xe7d0 <__fp_pscB>
    e5aa:	58 f0       	brcs	.+22     	; 0xe5c2 <__divsf3+0x24>
    e5ac:	0e 94 e1 73 	call	0xe7c2	; 0xe7c2 <__fp_pscA>
    e5b0:	40 f0       	brcs	.+16     	; 0xe5c2 <__divsf3+0x24>
    e5b2:	29 f4       	brne	.+10     	; 0xe5be <__divsf3+0x20>
    e5b4:	5f 3f       	cpi	r21, 0xFF	; 255
    e5b6:	29 f0       	breq	.+10     	; 0xe5c2 <__divsf3+0x24>
    e5b8:	0c 94 d8 73 	jmp	0xe7b0	; 0xe7b0 <__fp_inf>
    e5bc:	51 11       	cpse	r21, r1
    e5be:	0c 94 23 74 	jmp	0xe846	; 0xe846 <__fp_szero>
    e5c2:	0c 94 de 73 	jmp	0xe7bc	; 0xe7bc <__fp_nan>

0000e5c6 <__divsf3x>:
    e5c6:	0e 94 00 74 	call	0xe800	; 0xe800 <__fp_split3>
    e5ca:	68 f3       	brcs	.-38     	; 0xe5a6 <__divsf3+0x8>

0000e5cc <__divsf3_pse>:
    e5cc:	99 23       	and	r25, r25
    e5ce:	b1 f3       	breq	.-20     	; 0xe5bc <__divsf3+0x1e>
    e5d0:	55 23       	and	r21, r21
    e5d2:	91 f3       	breq	.-28     	; 0xe5b8 <__divsf3+0x1a>
    e5d4:	95 1b       	sub	r25, r21
    e5d6:	55 0b       	sbc	r21, r21
    e5d8:	bb 27       	eor	r27, r27
    e5da:	aa 27       	eor	r26, r26
    e5dc:	62 17       	cp	r22, r18
    e5de:	73 07       	cpc	r23, r19
    e5e0:	84 07       	cpc	r24, r20
    e5e2:	38 f0       	brcs	.+14     	; 0xe5f2 <__divsf3_pse+0x26>
    e5e4:	9f 5f       	subi	r25, 0xFF	; 255
    e5e6:	5f 4f       	sbci	r21, 0xFF	; 255
    e5e8:	22 0f       	add	r18, r18
    e5ea:	33 1f       	adc	r19, r19
    e5ec:	44 1f       	adc	r20, r20
    e5ee:	aa 1f       	adc	r26, r26
    e5f0:	a9 f3       	breq	.-22     	; 0xe5dc <__divsf3_pse+0x10>
    e5f2:	35 d0       	rcall	.+106    	; 0xe65e <__divsf3_pse+0x92>
    e5f4:	0e 2e       	mov	r0, r30
    e5f6:	3a f0       	brmi	.+14     	; 0xe606 <__divsf3_pse+0x3a>
    e5f8:	e0 e8       	ldi	r30, 0x80	; 128
    e5fa:	32 d0       	rcall	.+100    	; 0xe660 <__divsf3_pse+0x94>
    e5fc:	91 50       	subi	r25, 0x01	; 1
    e5fe:	50 40       	sbci	r21, 0x00	; 0
    e600:	e6 95       	lsr	r30
    e602:	00 1c       	adc	r0, r0
    e604:	ca f7       	brpl	.-14     	; 0xe5f8 <__divsf3_pse+0x2c>
    e606:	2b d0       	rcall	.+86     	; 0xe65e <__divsf3_pse+0x92>
    e608:	fe 2f       	mov	r31, r30
    e60a:	29 d0       	rcall	.+82     	; 0xe65e <__divsf3_pse+0x92>
    e60c:	66 0f       	add	r22, r22
    e60e:	77 1f       	adc	r23, r23
    e610:	88 1f       	adc	r24, r24
    e612:	bb 1f       	adc	r27, r27
    e614:	26 17       	cp	r18, r22
    e616:	37 07       	cpc	r19, r23
    e618:	48 07       	cpc	r20, r24
    e61a:	ab 07       	cpc	r26, r27
    e61c:	b0 e8       	ldi	r27, 0x80	; 128
    e61e:	09 f0       	breq	.+2      	; 0xe622 <__divsf3_pse+0x56>
    e620:	bb 0b       	sbc	r27, r27
    e622:	80 2d       	mov	r24, r0
    e624:	bf 01       	movw	r22, r30
    e626:	ff 27       	eor	r31, r31
    e628:	93 58       	subi	r25, 0x83	; 131
    e62a:	5f 4f       	sbci	r21, 0xFF	; 255
    e62c:	3a f0       	brmi	.+14     	; 0xe63c <__divsf3_pse+0x70>
    e62e:	9e 3f       	cpi	r25, 0xFE	; 254
    e630:	51 05       	cpc	r21, r1
    e632:	78 f0       	brcs	.+30     	; 0xe652 <__divsf3_pse+0x86>
    e634:	0c 94 d8 73 	jmp	0xe7b0	; 0xe7b0 <__fp_inf>
    e638:	0c 94 23 74 	jmp	0xe846	; 0xe846 <__fp_szero>
    e63c:	5f 3f       	cpi	r21, 0xFF	; 255
    e63e:	e4 f3       	brlt	.-8      	; 0xe638 <__divsf3_pse+0x6c>
    e640:	98 3e       	cpi	r25, 0xE8	; 232
    e642:	d4 f3       	brlt	.-12     	; 0xe638 <__divsf3_pse+0x6c>
    e644:	86 95       	lsr	r24
    e646:	77 95       	ror	r23
    e648:	67 95       	ror	r22
    e64a:	b7 95       	ror	r27
    e64c:	f7 95       	ror	r31
    e64e:	9f 5f       	subi	r25, 0xFF	; 255
    e650:	c9 f7       	brne	.-14     	; 0xe644 <__divsf3_pse+0x78>
    e652:	88 0f       	add	r24, r24
    e654:	91 1d       	adc	r25, r1
    e656:	96 95       	lsr	r25
    e658:	87 95       	ror	r24
    e65a:	97 f9       	bld	r25, 7
    e65c:	08 95       	ret
    e65e:	e1 e0       	ldi	r30, 0x01	; 1
    e660:	66 0f       	add	r22, r22
    e662:	77 1f       	adc	r23, r23
    e664:	88 1f       	adc	r24, r24
    e666:	bb 1f       	adc	r27, r27
    e668:	62 17       	cp	r22, r18
    e66a:	73 07       	cpc	r23, r19
    e66c:	84 07       	cpc	r24, r20
    e66e:	ba 07       	cpc	r27, r26
    e670:	20 f0       	brcs	.+8      	; 0xe67a <__divsf3_pse+0xae>
    e672:	62 1b       	sub	r22, r18
    e674:	73 0b       	sbc	r23, r19
    e676:	84 0b       	sbc	r24, r20
    e678:	ba 0b       	sbc	r27, r26
    e67a:	ee 1f       	adc	r30, r30
    e67c:	88 f7       	brcc	.-30     	; 0xe660 <__divsf3_pse+0x94>
    e67e:	e0 95       	com	r30
    e680:	08 95       	ret

0000e682 <__fixsfsi>:
    e682:	0e 94 48 73 	call	0xe690	; 0xe690 <__fixunssfsi>
    e686:	68 94       	set
    e688:	b1 11       	cpse	r27, r1
    e68a:	0c 94 23 74 	jmp	0xe846	; 0xe846 <__fp_szero>
    e68e:	08 95       	ret

0000e690 <__fixunssfsi>:
    e690:	0e 94 08 74 	call	0xe810	; 0xe810 <__fp_splitA>
    e694:	88 f0       	brcs	.+34     	; 0xe6b8 <__fixunssfsi+0x28>
    e696:	9f 57       	subi	r25, 0x7F	; 127
    e698:	98 f0       	brcs	.+38     	; 0xe6c0 <__fixunssfsi+0x30>
    e69a:	b9 2f       	mov	r27, r25
    e69c:	99 27       	eor	r25, r25
    e69e:	b7 51       	subi	r27, 0x17	; 23
    e6a0:	b0 f0       	brcs	.+44     	; 0xe6ce <__fixunssfsi+0x3e>
    e6a2:	e1 f0       	breq	.+56     	; 0xe6dc <__fixunssfsi+0x4c>
    e6a4:	66 0f       	add	r22, r22
    e6a6:	77 1f       	adc	r23, r23
    e6a8:	88 1f       	adc	r24, r24
    e6aa:	99 1f       	adc	r25, r25
    e6ac:	1a f0       	brmi	.+6      	; 0xe6b4 <__fixunssfsi+0x24>
    e6ae:	ba 95       	dec	r27
    e6b0:	c9 f7       	brne	.-14     	; 0xe6a4 <__fixunssfsi+0x14>
    e6b2:	14 c0       	rjmp	.+40     	; 0xe6dc <__fixunssfsi+0x4c>
    e6b4:	b1 30       	cpi	r27, 0x01	; 1
    e6b6:	91 f0       	breq	.+36     	; 0xe6dc <__fixunssfsi+0x4c>
    e6b8:	0e 94 22 74 	call	0xe844	; 0xe844 <__fp_zero>
    e6bc:	b1 e0       	ldi	r27, 0x01	; 1
    e6be:	08 95       	ret
    e6c0:	0c 94 22 74 	jmp	0xe844	; 0xe844 <__fp_zero>
    e6c4:	67 2f       	mov	r22, r23
    e6c6:	78 2f       	mov	r23, r24
    e6c8:	88 27       	eor	r24, r24
    e6ca:	b8 5f       	subi	r27, 0xF8	; 248
    e6cc:	39 f0       	breq	.+14     	; 0xe6dc <__fixunssfsi+0x4c>
    e6ce:	b9 3f       	cpi	r27, 0xF9	; 249
    e6d0:	cc f3       	brlt	.-14     	; 0xe6c4 <__fixunssfsi+0x34>
    e6d2:	86 95       	lsr	r24
    e6d4:	77 95       	ror	r23
    e6d6:	67 95       	ror	r22
    e6d8:	b3 95       	inc	r27
    e6da:	d9 f7       	brne	.-10     	; 0xe6d2 <__fixunssfsi+0x42>
    e6dc:	3e f4       	brtc	.+14     	; 0xe6ec <__fixunssfsi+0x5c>
    e6de:	90 95       	com	r25
    e6e0:	80 95       	com	r24
    e6e2:	70 95       	com	r23
    e6e4:	61 95       	neg	r22
    e6e6:	7f 4f       	sbci	r23, 0xFF	; 255
    e6e8:	8f 4f       	sbci	r24, 0xFF	; 255
    e6ea:	9f 4f       	sbci	r25, 0xFF	; 255
    e6ec:	08 95       	ret

0000e6ee <__floatunsisf>:
    e6ee:	e8 94       	clt
    e6f0:	09 c0       	rjmp	.+18     	; 0xe704 <__floatsisf+0x12>

0000e6f2 <__floatsisf>:
    e6f2:	97 fb       	bst	r25, 7
    e6f4:	3e f4       	brtc	.+14     	; 0xe704 <__floatsisf+0x12>
    e6f6:	90 95       	com	r25
    e6f8:	80 95       	com	r24
    e6fa:	70 95       	com	r23
    e6fc:	61 95       	neg	r22
    e6fe:	7f 4f       	sbci	r23, 0xFF	; 255
    e700:	8f 4f       	sbci	r24, 0xFF	; 255
    e702:	9f 4f       	sbci	r25, 0xFF	; 255
    e704:	99 23       	and	r25, r25
    e706:	a9 f0       	breq	.+42     	; 0xe732 <__floatsisf+0x40>
    e708:	f9 2f       	mov	r31, r25
    e70a:	96 e9       	ldi	r25, 0x96	; 150
    e70c:	bb 27       	eor	r27, r27
    e70e:	93 95       	inc	r25
    e710:	f6 95       	lsr	r31
    e712:	87 95       	ror	r24
    e714:	77 95       	ror	r23
    e716:	67 95       	ror	r22
    e718:	b7 95       	ror	r27
    e71a:	f1 11       	cpse	r31, r1
    e71c:	f8 cf       	rjmp	.-16     	; 0xe70e <__floatsisf+0x1c>
    e71e:	fa f4       	brpl	.+62     	; 0xe75e <__floatsisf+0x6c>
    e720:	bb 0f       	add	r27, r27
    e722:	11 f4       	brne	.+4      	; 0xe728 <__floatsisf+0x36>
    e724:	60 ff       	sbrs	r22, 0
    e726:	1b c0       	rjmp	.+54     	; 0xe75e <__floatsisf+0x6c>
    e728:	6f 5f       	subi	r22, 0xFF	; 255
    e72a:	7f 4f       	sbci	r23, 0xFF	; 255
    e72c:	8f 4f       	sbci	r24, 0xFF	; 255
    e72e:	9f 4f       	sbci	r25, 0xFF	; 255
    e730:	16 c0       	rjmp	.+44     	; 0xe75e <__floatsisf+0x6c>
    e732:	88 23       	and	r24, r24
    e734:	11 f0       	breq	.+4      	; 0xe73a <__floatsisf+0x48>
    e736:	96 e9       	ldi	r25, 0x96	; 150
    e738:	11 c0       	rjmp	.+34     	; 0xe75c <__floatsisf+0x6a>
    e73a:	77 23       	and	r23, r23
    e73c:	21 f0       	breq	.+8      	; 0xe746 <__floatsisf+0x54>
    e73e:	9e e8       	ldi	r25, 0x8E	; 142
    e740:	87 2f       	mov	r24, r23
    e742:	76 2f       	mov	r23, r22
    e744:	05 c0       	rjmp	.+10     	; 0xe750 <__floatsisf+0x5e>
    e746:	66 23       	and	r22, r22
    e748:	71 f0       	breq	.+28     	; 0xe766 <__floatsisf+0x74>
    e74a:	96 e8       	ldi	r25, 0x86	; 134
    e74c:	86 2f       	mov	r24, r22
    e74e:	70 e0       	ldi	r23, 0x00	; 0
    e750:	60 e0       	ldi	r22, 0x00	; 0
    e752:	2a f0       	brmi	.+10     	; 0xe75e <__floatsisf+0x6c>
    e754:	9a 95       	dec	r25
    e756:	66 0f       	add	r22, r22
    e758:	77 1f       	adc	r23, r23
    e75a:	88 1f       	adc	r24, r24
    e75c:	da f7       	brpl	.-10     	; 0xe754 <__floatsisf+0x62>
    e75e:	88 0f       	add	r24, r24
    e760:	96 95       	lsr	r25
    e762:	87 95       	ror	r24
    e764:	97 f9       	bld	r25, 7
    e766:	08 95       	ret

0000e768 <__fp_cmp>:
    e768:	99 0f       	add	r25, r25
    e76a:	00 08       	sbc	r0, r0
    e76c:	55 0f       	add	r21, r21
    e76e:	aa 0b       	sbc	r26, r26
    e770:	e0 e8       	ldi	r30, 0x80	; 128
    e772:	fe ef       	ldi	r31, 0xFE	; 254
    e774:	16 16       	cp	r1, r22
    e776:	17 06       	cpc	r1, r23
    e778:	e8 07       	cpc	r30, r24
    e77a:	f9 07       	cpc	r31, r25
    e77c:	c0 f0       	brcs	.+48     	; 0xe7ae <__fp_cmp+0x46>
    e77e:	12 16       	cp	r1, r18
    e780:	13 06       	cpc	r1, r19
    e782:	e4 07       	cpc	r30, r20
    e784:	f5 07       	cpc	r31, r21
    e786:	98 f0       	brcs	.+38     	; 0xe7ae <__fp_cmp+0x46>
    e788:	62 1b       	sub	r22, r18
    e78a:	73 0b       	sbc	r23, r19
    e78c:	84 0b       	sbc	r24, r20
    e78e:	95 0b       	sbc	r25, r21
    e790:	39 f4       	brne	.+14     	; 0xe7a0 <__fp_cmp+0x38>
    e792:	0a 26       	eor	r0, r26
    e794:	61 f0       	breq	.+24     	; 0xe7ae <__fp_cmp+0x46>
    e796:	23 2b       	or	r18, r19
    e798:	24 2b       	or	r18, r20
    e79a:	25 2b       	or	r18, r21
    e79c:	21 f4       	brne	.+8      	; 0xe7a6 <__fp_cmp+0x3e>
    e79e:	08 95       	ret
    e7a0:	0a 26       	eor	r0, r26
    e7a2:	09 f4       	brne	.+2      	; 0xe7a6 <__fp_cmp+0x3e>
    e7a4:	a1 40       	sbci	r26, 0x01	; 1
    e7a6:	a6 95       	lsr	r26
    e7a8:	8f ef       	ldi	r24, 0xFF	; 255
    e7aa:	81 1d       	adc	r24, r1
    e7ac:	81 1d       	adc	r24, r1
    e7ae:	08 95       	ret

0000e7b0 <__fp_inf>:
    e7b0:	97 f9       	bld	r25, 7
    e7b2:	9f 67       	ori	r25, 0x7F	; 127
    e7b4:	80 e8       	ldi	r24, 0x80	; 128
    e7b6:	70 e0       	ldi	r23, 0x00	; 0
    e7b8:	60 e0       	ldi	r22, 0x00	; 0
    e7ba:	08 95       	ret

0000e7bc <__fp_nan>:
    e7bc:	9f ef       	ldi	r25, 0xFF	; 255
    e7be:	80 ec       	ldi	r24, 0xC0	; 192
    e7c0:	08 95       	ret

0000e7c2 <__fp_pscA>:
    e7c2:	00 24       	eor	r0, r0
    e7c4:	0a 94       	dec	r0
    e7c6:	16 16       	cp	r1, r22
    e7c8:	17 06       	cpc	r1, r23
    e7ca:	18 06       	cpc	r1, r24
    e7cc:	09 06       	cpc	r0, r25
    e7ce:	08 95       	ret

0000e7d0 <__fp_pscB>:
    e7d0:	00 24       	eor	r0, r0
    e7d2:	0a 94       	dec	r0
    e7d4:	12 16       	cp	r1, r18
    e7d6:	13 06       	cpc	r1, r19
    e7d8:	14 06       	cpc	r1, r20
    e7da:	05 06       	cpc	r0, r21
    e7dc:	08 95       	ret

0000e7de <__fp_round>:
    e7de:	09 2e       	mov	r0, r25
    e7e0:	03 94       	inc	r0
    e7e2:	00 0c       	add	r0, r0
    e7e4:	11 f4       	brne	.+4      	; 0xe7ea <__fp_round+0xc>
    e7e6:	88 23       	and	r24, r24
    e7e8:	52 f0       	brmi	.+20     	; 0xe7fe <__fp_round+0x20>
    e7ea:	bb 0f       	add	r27, r27
    e7ec:	40 f4       	brcc	.+16     	; 0xe7fe <__fp_round+0x20>
    e7ee:	bf 2b       	or	r27, r31
    e7f0:	11 f4       	brne	.+4      	; 0xe7f6 <__fp_round+0x18>
    e7f2:	60 ff       	sbrs	r22, 0
    e7f4:	04 c0       	rjmp	.+8      	; 0xe7fe <__fp_round+0x20>
    e7f6:	6f 5f       	subi	r22, 0xFF	; 255
    e7f8:	7f 4f       	sbci	r23, 0xFF	; 255
    e7fa:	8f 4f       	sbci	r24, 0xFF	; 255
    e7fc:	9f 4f       	sbci	r25, 0xFF	; 255
    e7fe:	08 95       	ret

0000e800 <__fp_split3>:
    e800:	57 fd       	sbrc	r21, 7
    e802:	90 58       	subi	r25, 0x80	; 128
    e804:	44 0f       	add	r20, r20
    e806:	55 1f       	adc	r21, r21
    e808:	59 f0       	breq	.+22     	; 0xe820 <__fp_splitA+0x10>
    e80a:	5f 3f       	cpi	r21, 0xFF	; 255
    e80c:	71 f0       	breq	.+28     	; 0xe82a <__fp_splitA+0x1a>
    e80e:	47 95       	ror	r20

0000e810 <__fp_splitA>:
    e810:	88 0f       	add	r24, r24
    e812:	97 fb       	bst	r25, 7
    e814:	99 1f       	adc	r25, r25
    e816:	61 f0       	breq	.+24     	; 0xe830 <__fp_splitA+0x20>
    e818:	9f 3f       	cpi	r25, 0xFF	; 255
    e81a:	79 f0       	breq	.+30     	; 0xe83a <__fp_splitA+0x2a>
    e81c:	87 95       	ror	r24
    e81e:	08 95       	ret
    e820:	12 16       	cp	r1, r18
    e822:	13 06       	cpc	r1, r19
    e824:	14 06       	cpc	r1, r20
    e826:	55 1f       	adc	r21, r21
    e828:	f2 cf       	rjmp	.-28     	; 0xe80e <__fp_split3+0xe>
    e82a:	46 95       	lsr	r20
    e82c:	f1 df       	rcall	.-30     	; 0xe810 <__fp_splitA>
    e82e:	08 c0       	rjmp	.+16     	; 0xe840 <__fp_splitA+0x30>
    e830:	16 16       	cp	r1, r22
    e832:	17 06       	cpc	r1, r23
    e834:	18 06       	cpc	r1, r24
    e836:	99 1f       	adc	r25, r25
    e838:	f1 cf       	rjmp	.-30     	; 0xe81c <__fp_splitA+0xc>
    e83a:	86 95       	lsr	r24
    e83c:	71 05       	cpc	r23, r1
    e83e:	61 05       	cpc	r22, r1
    e840:	08 94       	sec
    e842:	08 95       	ret

0000e844 <__fp_zero>:
    e844:	e8 94       	clt

0000e846 <__fp_szero>:
    e846:	bb 27       	eor	r27, r27
    e848:	66 27       	eor	r22, r22
    e84a:	77 27       	eor	r23, r23
    e84c:	cb 01       	movw	r24, r22
    e84e:	97 f9       	bld	r25, 7
    e850:	08 95       	ret

0000e852 <__gesf2>:
    e852:	0e 94 b4 73 	call	0xe768	; 0xe768 <__fp_cmp>
    e856:	08 f4       	brcc	.+2      	; 0xe85a <__gesf2+0x8>
    e858:	8f ef       	ldi	r24, 0xFF	; 255
    e85a:	08 95       	ret

0000e85c <__mulsf3>:
    e85c:	0e 94 41 74 	call	0xe882	; 0xe882 <__mulsf3x>
    e860:	0c 94 ef 73 	jmp	0xe7de	; 0xe7de <__fp_round>
    e864:	0e 94 e1 73 	call	0xe7c2	; 0xe7c2 <__fp_pscA>
    e868:	38 f0       	brcs	.+14     	; 0xe878 <__mulsf3+0x1c>
    e86a:	0e 94 e8 73 	call	0xe7d0	; 0xe7d0 <__fp_pscB>
    e86e:	20 f0       	brcs	.+8      	; 0xe878 <__mulsf3+0x1c>
    e870:	95 23       	and	r25, r21
    e872:	11 f0       	breq	.+4      	; 0xe878 <__mulsf3+0x1c>
    e874:	0c 94 d8 73 	jmp	0xe7b0	; 0xe7b0 <__fp_inf>
    e878:	0c 94 de 73 	jmp	0xe7bc	; 0xe7bc <__fp_nan>
    e87c:	11 24       	eor	r1, r1
    e87e:	0c 94 23 74 	jmp	0xe846	; 0xe846 <__fp_szero>

0000e882 <__mulsf3x>:
    e882:	0e 94 00 74 	call	0xe800	; 0xe800 <__fp_split3>
    e886:	70 f3       	brcs	.-36     	; 0xe864 <__mulsf3+0x8>

0000e888 <__mulsf3_pse>:
    e888:	95 9f       	mul	r25, r21
    e88a:	c1 f3       	breq	.-16     	; 0xe87c <__mulsf3+0x20>
    e88c:	95 0f       	add	r25, r21
    e88e:	50 e0       	ldi	r21, 0x00	; 0
    e890:	55 1f       	adc	r21, r21
    e892:	62 9f       	mul	r22, r18
    e894:	f0 01       	movw	r30, r0
    e896:	72 9f       	mul	r23, r18
    e898:	bb 27       	eor	r27, r27
    e89a:	f0 0d       	add	r31, r0
    e89c:	b1 1d       	adc	r27, r1
    e89e:	63 9f       	mul	r22, r19
    e8a0:	aa 27       	eor	r26, r26
    e8a2:	f0 0d       	add	r31, r0
    e8a4:	b1 1d       	adc	r27, r1
    e8a6:	aa 1f       	adc	r26, r26
    e8a8:	64 9f       	mul	r22, r20
    e8aa:	66 27       	eor	r22, r22
    e8ac:	b0 0d       	add	r27, r0
    e8ae:	a1 1d       	adc	r26, r1
    e8b0:	66 1f       	adc	r22, r22
    e8b2:	82 9f       	mul	r24, r18
    e8b4:	22 27       	eor	r18, r18
    e8b6:	b0 0d       	add	r27, r0
    e8b8:	a1 1d       	adc	r26, r1
    e8ba:	62 1f       	adc	r22, r18
    e8bc:	73 9f       	mul	r23, r19
    e8be:	b0 0d       	add	r27, r0
    e8c0:	a1 1d       	adc	r26, r1
    e8c2:	62 1f       	adc	r22, r18
    e8c4:	83 9f       	mul	r24, r19
    e8c6:	a0 0d       	add	r26, r0
    e8c8:	61 1d       	adc	r22, r1
    e8ca:	22 1f       	adc	r18, r18
    e8cc:	74 9f       	mul	r23, r20
    e8ce:	33 27       	eor	r19, r19
    e8d0:	a0 0d       	add	r26, r0
    e8d2:	61 1d       	adc	r22, r1
    e8d4:	23 1f       	adc	r18, r19
    e8d6:	84 9f       	mul	r24, r20
    e8d8:	60 0d       	add	r22, r0
    e8da:	21 1d       	adc	r18, r1
    e8dc:	82 2f       	mov	r24, r18
    e8de:	76 2f       	mov	r23, r22
    e8e0:	6a 2f       	mov	r22, r26
    e8e2:	11 24       	eor	r1, r1
    e8e4:	9f 57       	subi	r25, 0x7F	; 127
    e8e6:	50 40       	sbci	r21, 0x00	; 0
    e8e8:	9a f0       	brmi	.+38     	; 0xe910 <__mulsf3_pse+0x88>
    e8ea:	f1 f0       	breq	.+60     	; 0xe928 <__mulsf3_pse+0xa0>
    e8ec:	88 23       	and	r24, r24
    e8ee:	4a f0       	brmi	.+18     	; 0xe902 <__mulsf3_pse+0x7a>
    e8f0:	ee 0f       	add	r30, r30
    e8f2:	ff 1f       	adc	r31, r31
    e8f4:	bb 1f       	adc	r27, r27
    e8f6:	66 1f       	adc	r22, r22
    e8f8:	77 1f       	adc	r23, r23
    e8fa:	88 1f       	adc	r24, r24
    e8fc:	91 50       	subi	r25, 0x01	; 1
    e8fe:	50 40       	sbci	r21, 0x00	; 0
    e900:	a9 f7       	brne	.-22     	; 0xe8ec <__mulsf3_pse+0x64>
    e902:	9e 3f       	cpi	r25, 0xFE	; 254
    e904:	51 05       	cpc	r21, r1
    e906:	80 f0       	brcs	.+32     	; 0xe928 <__mulsf3_pse+0xa0>
    e908:	0c 94 d8 73 	jmp	0xe7b0	; 0xe7b0 <__fp_inf>
    e90c:	0c 94 23 74 	jmp	0xe846	; 0xe846 <__fp_szero>
    e910:	5f 3f       	cpi	r21, 0xFF	; 255
    e912:	e4 f3       	brlt	.-8      	; 0xe90c <__mulsf3_pse+0x84>
    e914:	98 3e       	cpi	r25, 0xE8	; 232
    e916:	d4 f3       	brlt	.-12     	; 0xe90c <__mulsf3_pse+0x84>
    e918:	86 95       	lsr	r24
    e91a:	77 95       	ror	r23
    e91c:	67 95       	ror	r22
    e91e:	b7 95       	ror	r27
    e920:	f7 95       	ror	r31
    e922:	e7 95       	ror	r30
    e924:	9f 5f       	subi	r25, 0xFF	; 255
    e926:	c1 f7       	brne	.-16     	; 0xe918 <__mulsf3_pse+0x90>
    e928:	fe 2b       	or	r31, r30
    e92a:	88 0f       	add	r24, r24
    e92c:	91 1d       	adc	r25, r1
    e92e:	96 95       	lsr	r25
    e930:	87 95       	ror	r24
    e932:	97 f9       	bld	r25, 7
    e934:	08 95       	ret

0000e936 <__mulsi3>:
    e936:	db 01       	movw	r26, r22
    e938:	8f 93       	push	r24
    e93a:	9f 93       	push	r25
    e93c:	0e 94 1d 75 	call	0xea3a	; 0xea3a <__muluhisi3>
    e940:	bf 91       	pop	r27
    e942:	af 91       	pop	r26
    e944:	a2 9f       	mul	r26, r18
    e946:	80 0d       	add	r24, r0
    e948:	91 1d       	adc	r25, r1
    e94a:	a3 9f       	mul	r26, r19
    e94c:	90 0d       	add	r25, r0
    e94e:	b2 9f       	mul	r27, r18
    e950:	90 0d       	add	r25, r0
    e952:	11 24       	eor	r1, r1
    e954:	08 95       	ret

0000e956 <__udivmodhi4>:
    e956:	aa 1b       	sub	r26, r26
    e958:	bb 1b       	sub	r27, r27
    e95a:	51 e1       	ldi	r21, 0x11	; 17
    e95c:	07 c0       	rjmp	.+14     	; 0xe96c <__udivmodhi4_ep>

0000e95e <__udivmodhi4_loop>:
    e95e:	aa 1f       	adc	r26, r26
    e960:	bb 1f       	adc	r27, r27
    e962:	a6 17       	cp	r26, r22
    e964:	b7 07       	cpc	r27, r23
    e966:	10 f0       	brcs	.+4      	; 0xe96c <__udivmodhi4_ep>
    e968:	a6 1b       	sub	r26, r22
    e96a:	b7 0b       	sbc	r27, r23

0000e96c <__udivmodhi4_ep>:
    e96c:	88 1f       	adc	r24, r24
    e96e:	99 1f       	adc	r25, r25
    e970:	5a 95       	dec	r21
    e972:	a9 f7       	brne	.-22     	; 0xe95e <__udivmodhi4_loop>
    e974:	80 95       	com	r24
    e976:	90 95       	com	r25
    e978:	bc 01       	movw	r22, r24
    e97a:	cd 01       	movw	r24, r26
    e97c:	08 95       	ret

0000e97e <__divmodhi4>:
    e97e:	97 fb       	bst	r25, 7
    e980:	07 2e       	mov	r0, r23
    e982:	16 f4       	brtc	.+4      	; 0xe988 <__divmodhi4+0xa>
    e984:	00 94       	com	r0
    e986:	07 d0       	rcall	.+14     	; 0xe996 <__divmodhi4_neg1>
    e988:	77 fd       	sbrc	r23, 7
    e98a:	09 d0       	rcall	.+18     	; 0xe99e <__divmodhi4_neg2>
    e98c:	0e 94 ab 74 	call	0xe956	; 0xe956 <__udivmodhi4>
    e990:	07 fc       	sbrc	r0, 7
    e992:	05 d0       	rcall	.+10     	; 0xe99e <__divmodhi4_neg2>
    e994:	3e f4       	brtc	.+14     	; 0xe9a4 <__divmodhi4_exit>

0000e996 <__divmodhi4_neg1>:
    e996:	90 95       	com	r25
    e998:	81 95       	neg	r24
    e99a:	9f 4f       	sbci	r25, 0xFF	; 255
    e99c:	08 95       	ret

0000e99e <__divmodhi4_neg2>:
    e99e:	70 95       	com	r23
    e9a0:	61 95       	neg	r22
    e9a2:	7f 4f       	sbci	r23, 0xFF	; 255

0000e9a4 <__divmodhi4_exit>:
    e9a4:	08 95       	ret

0000e9a6 <__udivmodsi4>:
    e9a6:	a1 e2       	ldi	r26, 0x21	; 33
    e9a8:	1a 2e       	mov	r1, r26
    e9aa:	aa 1b       	sub	r26, r26
    e9ac:	bb 1b       	sub	r27, r27
    e9ae:	fd 01       	movw	r30, r26
    e9b0:	0d c0       	rjmp	.+26     	; 0xe9cc <__udivmodsi4_ep>

0000e9b2 <__udivmodsi4_loop>:
    e9b2:	aa 1f       	adc	r26, r26
    e9b4:	bb 1f       	adc	r27, r27
    e9b6:	ee 1f       	adc	r30, r30
    e9b8:	ff 1f       	adc	r31, r31
    e9ba:	a2 17       	cp	r26, r18
    e9bc:	b3 07       	cpc	r27, r19
    e9be:	e4 07       	cpc	r30, r20
    e9c0:	f5 07       	cpc	r31, r21
    e9c2:	20 f0       	brcs	.+8      	; 0xe9cc <__udivmodsi4_ep>
    e9c4:	a2 1b       	sub	r26, r18
    e9c6:	b3 0b       	sbc	r27, r19
    e9c8:	e4 0b       	sbc	r30, r20
    e9ca:	f5 0b       	sbc	r31, r21

0000e9cc <__udivmodsi4_ep>:
    e9cc:	66 1f       	adc	r22, r22
    e9ce:	77 1f       	adc	r23, r23
    e9d0:	88 1f       	adc	r24, r24
    e9d2:	99 1f       	adc	r25, r25
    e9d4:	1a 94       	dec	r1
    e9d6:	69 f7       	brne	.-38     	; 0xe9b2 <__udivmodsi4_loop>
    e9d8:	60 95       	com	r22
    e9da:	70 95       	com	r23
    e9dc:	80 95       	com	r24
    e9de:	90 95       	com	r25
    e9e0:	9b 01       	movw	r18, r22
    e9e2:	ac 01       	movw	r20, r24
    e9e4:	bd 01       	movw	r22, r26
    e9e6:	cf 01       	movw	r24, r30
    e9e8:	08 95       	ret

0000e9ea <__divmodsi4>:
    e9ea:	05 2e       	mov	r0, r21
    e9ec:	97 fb       	bst	r25, 7
    e9ee:	1e f4       	brtc	.+6      	; 0xe9f6 <__divmodsi4+0xc>
    e9f0:	00 94       	com	r0
    e9f2:	0e 94 0c 75 	call	0xea18	; 0xea18 <__negsi2>
    e9f6:	57 fd       	sbrc	r21, 7
    e9f8:	07 d0       	rcall	.+14     	; 0xea08 <__divmodsi4_neg2>
    e9fa:	0e 94 d3 74 	call	0xe9a6	; 0xe9a6 <__udivmodsi4>
    e9fe:	07 fc       	sbrc	r0, 7
    ea00:	03 d0       	rcall	.+6      	; 0xea08 <__divmodsi4_neg2>
    ea02:	4e f4       	brtc	.+18     	; 0xea16 <__divmodsi4_exit>
    ea04:	0c 94 0c 75 	jmp	0xea18	; 0xea18 <__negsi2>

0000ea08 <__divmodsi4_neg2>:
    ea08:	50 95       	com	r21
    ea0a:	40 95       	com	r20
    ea0c:	30 95       	com	r19
    ea0e:	21 95       	neg	r18
    ea10:	3f 4f       	sbci	r19, 0xFF	; 255
    ea12:	4f 4f       	sbci	r20, 0xFF	; 255
    ea14:	5f 4f       	sbci	r21, 0xFF	; 255

0000ea16 <__divmodsi4_exit>:
    ea16:	08 95       	ret

0000ea18 <__negsi2>:
    ea18:	90 95       	com	r25
    ea1a:	80 95       	com	r24
    ea1c:	70 95       	com	r23
    ea1e:	61 95       	neg	r22
    ea20:	7f 4f       	sbci	r23, 0xFF	; 255
    ea22:	8f 4f       	sbci	r24, 0xFF	; 255
    ea24:	9f 4f       	sbci	r25, 0xFF	; 255
    ea26:	08 95       	ret

0000ea28 <__tablejump2__>:
    ea28:	ee 0f       	add	r30, r30
    ea2a:	ff 1f       	adc	r31, r31
    ea2c:	00 24       	eor	r0, r0
    ea2e:	00 1c       	adc	r0, r0
    ea30:	0b be       	out	0x3b, r0	; 59
    ea32:	07 90       	elpm	r0, Z+
    ea34:	f6 91       	elpm	r31, Z
    ea36:	e0 2d       	mov	r30, r0
    ea38:	09 94       	ijmp

0000ea3a <__muluhisi3>:
    ea3a:	0e 94 28 75 	call	0xea50	; 0xea50 <__umulhisi3>
    ea3e:	a5 9f       	mul	r26, r21
    ea40:	90 0d       	add	r25, r0
    ea42:	b4 9f       	mul	r27, r20
    ea44:	90 0d       	add	r25, r0
    ea46:	a4 9f       	mul	r26, r20
    ea48:	80 0d       	add	r24, r0
    ea4a:	91 1d       	adc	r25, r1
    ea4c:	11 24       	eor	r1, r1
    ea4e:	08 95       	ret

0000ea50 <__umulhisi3>:
    ea50:	a2 9f       	mul	r26, r18
    ea52:	b0 01       	movw	r22, r0
    ea54:	b3 9f       	mul	r27, r19
    ea56:	c0 01       	movw	r24, r0
    ea58:	a3 9f       	mul	r26, r19
    ea5a:	70 0d       	add	r23, r0
    ea5c:	81 1d       	adc	r24, r1
    ea5e:	11 24       	eor	r1, r1
    ea60:	91 1d       	adc	r25, r1
    ea62:	b2 9f       	mul	r27, r18
    ea64:	70 0d       	add	r23, r0
    ea66:	81 1d       	adc	r24, r1
    ea68:	11 24       	eor	r1, r1
    ea6a:	91 1d       	adc	r25, r1
    ea6c:	08 95       	ret

0000ea6e <dtostrf>:
    ea6e:	ef 92       	push	r14
    ea70:	0f 93       	push	r16
    ea72:	1f 93       	push	r17
    ea74:	cf 93       	push	r28
    ea76:	df 93       	push	r29
    ea78:	e8 01       	movw	r28, r16
    ea7a:	47 fd       	sbrc	r20, 7
    ea7c:	02 c0       	rjmp	.+4      	; 0xea82 <dtostrf+0x14>
    ea7e:	34 e0       	ldi	r19, 0x04	; 4
    ea80:	01 c0       	rjmp	.+2      	; 0xea84 <dtostrf+0x16>
    ea82:	34 e1       	ldi	r19, 0x14	; 20
    ea84:	04 2e       	mov	r0, r20
    ea86:	00 0c       	add	r0, r0
    ea88:	55 0b       	sbc	r21, r21
    ea8a:	57 ff       	sbrs	r21, 7
    ea8c:	03 c0       	rjmp	.+6      	; 0xea94 <dtostrf+0x26>
    ea8e:	51 95       	neg	r21
    ea90:	41 95       	neg	r20
    ea92:	51 09       	sbc	r21, r1
    ea94:	e3 2e       	mov	r14, r19
    ea96:	02 2f       	mov	r16, r18
    ea98:	24 2f       	mov	r18, r20
    ea9a:	ae 01       	movw	r20, r28
    ea9c:	0e 94 37 79 	call	0xf26e	; 0xf26e <dtoa_prf>
    eaa0:	ce 01       	movw	r24, r28
    eaa2:	df 91       	pop	r29
    eaa4:	cf 91       	pop	r28
    eaa6:	1f 91       	pop	r17
    eaa8:	0f 91       	pop	r16
    eaaa:	ef 90       	pop	r14
    eaac:	08 95       	ret

0000eaae <malloc>:
    eaae:	0f 93       	push	r16
    eab0:	1f 93       	push	r17
    eab2:	cf 93       	push	r28
    eab4:	df 93       	push	r29
    eab6:	82 30       	cpi	r24, 0x02	; 2
    eab8:	91 05       	cpc	r25, r1
    eaba:	10 f4       	brcc	.+4      	; 0xeac0 <malloc+0x12>
    eabc:	82 e0       	ldi	r24, 0x02	; 2
    eabe:	90 e0       	ldi	r25, 0x00	; 0
    eac0:	e0 91 b1 48 	lds	r30, 0x48B1	; 0x8048b1 <__flp>
    eac4:	f0 91 b2 48 	lds	r31, 0x48B2	; 0x8048b2 <__flp+0x1>
    eac8:	20 e0       	ldi	r18, 0x00	; 0
    eaca:	30 e0       	ldi	r19, 0x00	; 0
    eacc:	a0 e0       	ldi	r26, 0x00	; 0
    eace:	b0 e0       	ldi	r27, 0x00	; 0
    ead0:	30 97       	sbiw	r30, 0x00	; 0
    ead2:	19 f1       	breq	.+70     	; 0xeb1a <malloc+0x6c>
    ead4:	40 81       	ld	r20, Z
    ead6:	51 81       	ldd	r21, Z+1	; 0x01
    ead8:	02 81       	ldd	r16, Z+2	; 0x02
    eada:	13 81       	ldd	r17, Z+3	; 0x03
    eadc:	48 17       	cp	r20, r24
    eade:	59 07       	cpc	r21, r25
    eae0:	c8 f0       	brcs	.+50     	; 0xeb14 <malloc+0x66>
    eae2:	84 17       	cp	r24, r20
    eae4:	95 07       	cpc	r25, r21
    eae6:	69 f4       	brne	.+26     	; 0xeb02 <malloc+0x54>
    eae8:	10 97       	sbiw	r26, 0x00	; 0
    eaea:	31 f0       	breq	.+12     	; 0xeaf8 <malloc+0x4a>
    eaec:	12 96       	adiw	r26, 0x02	; 2
    eaee:	0c 93       	st	X, r16
    eaf0:	12 97       	sbiw	r26, 0x02	; 2
    eaf2:	13 96       	adiw	r26, 0x03	; 3
    eaf4:	1c 93       	st	X, r17
    eaf6:	27 c0       	rjmp	.+78     	; 0xeb46 <malloc+0x98>
    eaf8:	00 93 b1 48 	sts	0x48B1, r16	; 0x8048b1 <__flp>
    eafc:	10 93 b2 48 	sts	0x48B2, r17	; 0x8048b2 <__flp+0x1>
    eb00:	22 c0       	rjmp	.+68     	; 0xeb46 <malloc+0x98>
    eb02:	21 15       	cp	r18, r1
    eb04:	31 05       	cpc	r19, r1
    eb06:	19 f0       	breq	.+6      	; 0xeb0e <malloc+0x60>
    eb08:	42 17       	cp	r20, r18
    eb0a:	53 07       	cpc	r21, r19
    eb0c:	18 f4       	brcc	.+6      	; 0xeb14 <malloc+0x66>
    eb0e:	9a 01       	movw	r18, r20
    eb10:	bd 01       	movw	r22, r26
    eb12:	ef 01       	movw	r28, r30
    eb14:	df 01       	movw	r26, r30
    eb16:	f8 01       	movw	r30, r16
    eb18:	db cf       	rjmp	.-74     	; 0xead0 <malloc+0x22>
    eb1a:	21 15       	cp	r18, r1
    eb1c:	31 05       	cpc	r19, r1
    eb1e:	f9 f0       	breq	.+62     	; 0xeb5e <malloc+0xb0>
    eb20:	28 1b       	sub	r18, r24
    eb22:	39 0b       	sbc	r19, r25
    eb24:	24 30       	cpi	r18, 0x04	; 4
    eb26:	31 05       	cpc	r19, r1
    eb28:	80 f4       	brcc	.+32     	; 0xeb4a <malloc+0x9c>
    eb2a:	8a 81       	ldd	r24, Y+2	; 0x02
    eb2c:	9b 81       	ldd	r25, Y+3	; 0x03
    eb2e:	61 15       	cp	r22, r1
    eb30:	71 05       	cpc	r23, r1
    eb32:	21 f0       	breq	.+8      	; 0xeb3c <malloc+0x8e>
    eb34:	fb 01       	movw	r30, r22
    eb36:	82 83       	std	Z+2, r24	; 0x02
    eb38:	93 83       	std	Z+3, r25	; 0x03
    eb3a:	04 c0       	rjmp	.+8      	; 0xeb44 <malloc+0x96>
    eb3c:	80 93 b1 48 	sts	0x48B1, r24	; 0x8048b1 <__flp>
    eb40:	90 93 b2 48 	sts	0x48B2, r25	; 0x8048b2 <__flp+0x1>
    eb44:	fe 01       	movw	r30, r28
    eb46:	32 96       	adiw	r30, 0x02	; 2
    eb48:	44 c0       	rjmp	.+136    	; 0xebd2 <malloc+0x124>
    eb4a:	fe 01       	movw	r30, r28
    eb4c:	e2 0f       	add	r30, r18
    eb4e:	f3 1f       	adc	r31, r19
    eb50:	81 93       	st	Z+, r24
    eb52:	91 93       	st	Z+, r25
    eb54:	22 50       	subi	r18, 0x02	; 2
    eb56:	31 09       	sbc	r19, r1
    eb58:	28 83       	st	Y, r18
    eb5a:	39 83       	std	Y+1, r19	; 0x01
    eb5c:	3a c0       	rjmp	.+116    	; 0xebd2 <malloc+0x124>
    eb5e:	20 91 af 48 	lds	r18, 0x48AF	; 0x8048af <__brkval>
    eb62:	30 91 b0 48 	lds	r19, 0x48B0	; 0x8048b0 <__brkval+0x1>
    eb66:	23 2b       	or	r18, r19
    eb68:	41 f4       	brne	.+16     	; 0xeb7a <malloc+0xcc>
    eb6a:	20 91 02 40 	lds	r18, 0x4002	; 0x804002 <__malloc_heap_start>
    eb6e:	30 91 03 40 	lds	r19, 0x4003	; 0x804003 <__malloc_heap_start+0x1>
    eb72:	20 93 af 48 	sts	0x48AF, r18	; 0x8048af <__brkval>
    eb76:	30 93 b0 48 	sts	0x48B0, r19	; 0x8048b0 <__brkval+0x1>
    eb7a:	20 91 00 40 	lds	r18, 0x4000	; 0x804000 <__DATA_REGION_ORIGIN__>
    eb7e:	30 91 01 40 	lds	r19, 0x4001	; 0x804001 <__DATA_REGION_ORIGIN__+0x1>
    eb82:	21 15       	cp	r18, r1
    eb84:	31 05       	cpc	r19, r1
    eb86:	41 f4       	brne	.+16     	; 0xeb98 <malloc+0xea>
    eb88:	2d b7       	in	r18, 0x3d	; 61
    eb8a:	3e b7       	in	r19, 0x3e	; 62
    eb8c:	40 91 04 40 	lds	r20, 0x4004	; 0x804004 <__malloc_margin>
    eb90:	50 91 05 40 	lds	r21, 0x4005	; 0x804005 <__malloc_margin+0x1>
    eb94:	24 1b       	sub	r18, r20
    eb96:	35 0b       	sbc	r19, r21
    eb98:	e0 91 af 48 	lds	r30, 0x48AF	; 0x8048af <__brkval>
    eb9c:	f0 91 b0 48 	lds	r31, 0x48B0	; 0x8048b0 <__brkval+0x1>
    eba0:	e2 17       	cp	r30, r18
    eba2:	f3 07       	cpc	r31, r19
    eba4:	a0 f4       	brcc	.+40     	; 0xebce <malloc+0x120>
    eba6:	2e 1b       	sub	r18, r30
    eba8:	3f 0b       	sbc	r19, r31
    ebaa:	28 17       	cp	r18, r24
    ebac:	39 07       	cpc	r19, r25
    ebae:	78 f0       	brcs	.+30     	; 0xebce <malloc+0x120>
    ebb0:	ac 01       	movw	r20, r24
    ebb2:	4e 5f       	subi	r20, 0xFE	; 254
    ebb4:	5f 4f       	sbci	r21, 0xFF	; 255
    ebb6:	24 17       	cp	r18, r20
    ebb8:	35 07       	cpc	r19, r21
    ebba:	48 f0       	brcs	.+18     	; 0xebce <malloc+0x120>
    ebbc:	4e 0f       	add	r20, r30
    ebbe:	5f 1f       	adc	r21, r31
    ebc0:	40 93 af 48 	sts	0x48AF, r20	; 0x8048af <__brkval>
    ebc4:	50 93 b0 48 	sts	0x48B0, r21	; 0x8048b0 <__brkval+0x1>
    ebc8:	81 93       	st	Z+, r24
    ebca:	91 93       	st	Z+, r25
    ebcc:	02 c0       	rjmp	.+4      	; 0xebd2 <malloc+0x124>
    ebce:	e0 e0       	ldi	r30, 0x00	; 0
    ebd0:	f0 e0       	ldi	r31, 0x00	; 0
    ebd2:	cf 01       	movw	r24, r30
    ebd4:	df 91       	pop	r29
    ebd6:	cf 91       	pop	r28
    ebd8:	1f 91       	pop	r17
    ebda:	0f 91       	pop	r16
    ebdc:	08 95       	ret

0000ebde <free>:
    ebde:	cf 93       	push	r28
    ebe0:	df 93       	push	r29
    ebe2:	00 97       	sbiw	r24, 0x00	; 0
    ebe4:	09 f4       	brne	.+2      	; 0xebe8 <free+0xa>
    ebe6:	81 c0       	rjmp	.+258    	; 0xecea <free+0x10c>
    ebe8:	fc 01       	movw	r30, r24
    ebea:	32 97       	sbiw	r30, 0x02	; 2
    ebec:	12 82       	std	Z+2, r1	; 0x02
    ebee:	13 82       	std	Z+3, r1	; 0x03
    ebf0:	a0 91 b1 48 	lds	r26, 0x48B1	; 0x8048b1 <__flp>
    ebf4:	b0 91 b2 48 	lds	r27, 0x48B2	; 0x8048b2 <__flp+0x1>
    ebf8:	10 97       	sbiw	r26, 0x00	; 0
    ebfa:	81 f4       	brne	.+32     	; 0xec1c <free+0x3e>
    ebfc:	20 81       	ld	r18, Z
    ebfe:	31 81       	ldd	r19, Z+1	; 0x01
    ec00:	82 0f       	add	r24, r18
    ec02:	93 1f       	adc	r25, r19
    ec04:	20 91 af 48 	lds	r18, 0x48AF	; 0x8048af <__brkval>
    ec08:	30 91 b0 48 	lds	r19, 0x48B0	; 0x8048b0 <__brkval+0x1>
    ec0c:	28 17       	cp	r18, r24
    ec0e:	39 07       	cpc	r19, r25
    ec10:	51 f5       	brne	.+84     	; 0xec66 <free+0x88>
    ec12:	e0 93 af 48 	sts	0x48AF, r30	; 0x8048af <__brkval>
    ec16:	f0 93 b0 48 	sts	0x48B0, r31	; 0x8048b0 <__brkval+0x1>
    ec1a:	67 c0       	rjmp	.+206    	; 0xecea <free+0x10c>
    ec1c:	ed 01       	movw	r28, r26
    ec1e:	20 e0       	ldi	r18, 0x00	; 0
    ec20:	30 e0       	ldi	r19, 0x00	; 0
    ec22:	ce 17       	cp	r28, r30
    ec24:	df 07       	cpc	r29, r31
    ec26:	40 f4       	brcc	.+16     	; 0xec38 <free+0x5a>
    ec28:	4a 81       	ldd	r20, Y+2	; 0x02
    ec2a:	5b 81       	ldd	r21, Y+3	; 0x03
    ec2c:	9e 01       	movw	r18, r28
    ec2e:	41 15       	cp	r20, r1
    ec30:	51 05       	cpc	r21, r1
    ec32:	f1 f0       	breq	.+60     	; 0xec70 <free+0x92>
    ec34:	ea 01       	movw	r28, r20
    ec36:	f5 cf       	rjmp	.-22     	; 0xec22 <free+0x44>
    ec38:	c2 83       	std	Z+2, r28	; 0x02
    ec3a:	d3 83       	std	Z+3, r29	; 0x03
    ec3c:	40 81       	ld	r20, Z
    ec3e:	51 81       	ldd	r21, Z+1	; 0x01
    ec40:	84 0f       	add	r24, r20
    ec42:	95 1f       	adc	r25, r21
    ec44:	c8 17       	cp	r28, r24
    ec46:	d9 07       	cpc	r29, r25
    ec48:	59 f4       	brne	.+22     	; 0xec60 <free+0x82>
    ec4a:	88 81       	ld	r24, Y
    ec4c:	99 81       	ldd	r25, Y+1	; 0x01
    ec4e:	84 0f       	add	r24, r20
    ec50:	95 1f       	adc	r25, r21
    ec52:	02 96       	adiw	r24, 0x02	; 2
    ec54:	80 83       	st	Z, r24
    ec56:	91 83       	std	Z+1, r25	; 0x01
    ec58:	8a 81       	ldd	r24, Y+2	; 0x02
    ec5a:	9b 81       	ldd	r25, Y+3	; 0x03
    ec5c:	82 83       	std	Z+2, r24	; 0x02
    ec5e:	93 83       	std	Z+3, r25	; 0x03
    ec60:	21 15       	cp	r18, r1
    ec62:	31 05       	cpc	r19, r1
    ec64:	29 f4       	brne	.+10     	; 0xec70 <free+0x92>
    ec66:	e0 93 b1 48 	sts	0x48B1, r30	; 0x8048b1 <__flp>
    ec6a:	f0 93 b2 48 	sts	0x48B2, r31	; 0x8048b2 <__flp+0x1>
    ec6e:	3d c0       	rjmp	.+122    	; 0xecea <free+0x10c>
    ec70:	e9 01       	movw	r28, r18
    ec72:	ea 83       	std	Y+2, r30	; 0x02
    ec74:	fb 83       	std	Y+3, r31	; 0x03
    ec76:	49 91       	ld	r20, Y+
    ec78:	59 91       	ld	r21, Y+
    ec7a:	c4 0f       	add	r28, r20
    ec7c:	d5 1f       	adc	r29, r21
    ec7e:	ec 17       	cp	r30, r28
    ec80:	fd 07       	cpc	r31, r29
    ec82:	61 f4       	brne	.+24     	; 0xec9c <free+0xbe>
    ec84:	80 81       	ld	r24, Z
    ec86:	91 81       	ldd	r25, Z+1	; 0x01
    ec88:	84 0f       	add	r24, r20
    ec8a:	95 1f       	adc	r25, r21
    ec8c:	02 96       	adiw	r24, 0x02	; 2
    ec8e:	e9 01       	movw	r28, r18
    ec90:	88 83       	st	Y, r24
    ec92:	99 83       	std	Y+1, r25	; 0x01
    ec94:	82 81       	ldd	r24, Z+2	; 0x02
    ec96:	93 81       	ldd	r25, Z+3	; 0x03
    ec98:	8a 83       	std	Y+2, r24	; 0x02
    ec9a:	9b 83       	std	Y+3, r25	; 0x03
    ec9c:	e0 e0       	ldi	r30, 0x00	; 0
    ec9e:	f0 e0       	ldi	r31, 0x00	; 0
    eca0:	12 96       	adiw	r26, 0x02	; 2
    eca2:	8d 91       	ld	r24, X+
    eca4:	9c 91       	ld	r25, X
    eca6:	13 97       	sbiw	r26, 0x03	; 3
    eca8:	00 97       	sbiw	r24, 0x00	; 0
    ecaa:	19 f0       	breq	.+6      	; 0xecb2 <free+0xd4>
    ecac:	fd 01       	movw	r30, r26
    ecae:	dc 01       	movw	r26, r24
    ecb0:	f7 cf       	rjmp	.-18     	; 0xeca0 <free+0xc2>
    ecb2:	8d 91       	ld	r24, X+
    ecb4:	9c 91       	ld	r25, X
    ecb6:	11 97       	sbiw	r26, 0x01	; 1
    ecb8:	9d 01       	movw	r18, r26
    ecba:	2e 5f       	subi	r18, 0xFE	; 254
    ecbc:	3f 4f       	sbci	r19, 0xFF	; 255
    ecbe:	82 0f       	add	r24, r18
    ecc0:	93 1f       	adc	r25, r19
    ecc2:	20 91 af 48 	lds	r18, 0x48AF	; 0x8048af <__brkval>
    ecc6:	30 91 b0 48 	lds	r19, 0x48B0	; 0x8048b0 <__brkval+0x1>
    ecca:	28 17       	cp	r18, r24
    eccc:	39 07       	cpc	r19, r25
    ecce:	69 f4       	brne	.+26     	; 0xecea <free+0x10c>
    ecd0:	30 97       	sbiw	r30, 0x00	; 0
    ecd2:	29 f4       	brne	.+10     	; 0xecde <free+0x100>
    ecd4:	10 92 b1 48 	sts	0x48B1, r1	; 0x8048b1 <__flp>
    ecd8:	10 92 b2 48 	sts	0x48B2, r1	; 0x8048b2 <__flp+0x1>
    ecdc:	02 c0       	rjmp	.+4      	; 0xece2 <free+0x104>
    ecde:	12 82       	std	Z+2, r1	; 0x02
    ece0:	13 82       	std	Z+3, r1	; 0x03
    ece2:	a0 93 af 48 	sts	0x48AF, r26	; 0x8048af <__brkval>
    ece6:	b0 93 b0 48 	sts	0x48B0, r27	; 0x8048b0 <__brkval+0x1>
    ecea:	df 91       	pop	r29
    ecec:	cf 91       	pop	r28
    ecee:	08 95       	ret

0000ecf0 <atoi>:
    ecf0:	fc 01       	movw	r30, r24
    ecf2:	88 27       	eor	r24, r24
    ecf4:	99 27       	eor	r25, r25
    ecf6:	e8 94       	clt
    ecf8:	21 91       	ld	r18, Z+
    ecfa:	20 32       	cpi	r18, 0x20	; 32
    ecfc:	e9 f3       	breq	.-6      	; 0xecf8 <atoi+0x8>
    ecfe:	29 30       	cpi	r18, 0x09	; 9
    ed00:	10 f0       	brcs	.+4      	; 0xed06 <atoi+0x16>
    ed02:	2e 30       	cpi	r18, 0x0E	; 14
    ed04:	c8 f3       	brcs	.-14     	; 0xecf8 <atoi+0x8>
    ed06:	2b 32       	cpi	r18, 0x2B	; 43
    ed08:	41 f0       	breq	.+16     	; 0xed1a <atoi+0x2a>
    ed0a:	2d 32       	cpi	r18, 0x2D	; 45
    ed0c:	39 f4       	brne	.+14     	; 0xed1c <atoi+0x2c>
    ed0e:	68 94       	set
    ed10:	04 c0       	rjmp	.+8      	; 0xed1a <atoi+0x2a>
    ed12:	0e 94 02 77 	call	0xee04	; 0xee04 <__mulhi_const_10>
    ed16:	82 0f       	add	r24, r18
    ed18:	91 1d       	adc	r25, r1
    ed1a:	21 91       	ld	r18, Z+
    ed1c:	20 53       	subi	r18, 0x30	; 48
    ed1e:	2a 30       	cpi	r18, 0x0A	; 10
    ed20:	c0 f3       	brcs	.-16     	; 0xed12 <atoi+0x22>
    ed22:	1e f4       	brtc	.+6      	; 0xed2a <atoi+0x3a>
    ed24:	90 95       	com	r25
    ed26:	81 95       	neg	r24
    ed28:	9f 4f       	sbci	r25, 0xFF	; 255
    ed2a:	08 95       	ret

0000ed2c <atol>:
    ed2c:	1f 93       	push	r17
    ed2e:	fc 01       	movw	r30, r24
    ed30:	99 27       	eor	r25, r25
    ed32:	88 27       	eor	r24, r24
    ed34:	bc 01       	movw	r22, r24
    ed36:	e8 94       	clt
    ed38:	11 91       	ld	r17, Z+
    ed3a:	10 32       	cpi	r17, 0x20	; 32
    ed3c:	e9 f3       	breq	.-6      	; 0xed38 <atol+0xc>
    ed3e:	19 30       	cpi	r17, 0x09	; 9
    ed40:	10 f0       	brcs	.+4      	; 0xed46 <atol+0x1a>
    ed42:	1e 30       	cpi	r17, 0x0E	; 14
    ed44:	c8 f3       	brcs	.-14     	; 0xed38 <atol+0xc>
    ed46:	1b 32       	cpi	r17, 0x2B	; 43
    ed48:	51 f0       	breq	.+20     	; 0xed5e <atol+0x32>
    ed4a:	1d 32       	cpi	r17, 0x2D	; 45
    ed4c:	49 f4       	brne	.+18     	; 0xed60 <atol+0x34>
    ed4e:	68 94       	set
    ed50:	06 c0       	rjmp	.+12     	; 0xed5e <atol+0x32>
    ed52:	0e 94 ed 76 	call	0xedda	; 0xedda <__mulsi_const_10>
    ed56:	61 0f       	add	r22, r17
    ed58:	71 1d       	adc	r23, r1
    ed5a:	81 1d       	adc	r24, r1
    ed5c:	91 1d       	adc	r25, r1
    ed5e:	11 91       	ld	r17, Z+
    ed60:	10 53       	subi	r17, 0x30	; 48
    ed62:	1a 30       	cpi	r17, 0x0A	; 10
    ed64:	b0 f3       	brcs	.-20     	; 0xed52 <atol+0x26>
    ed66:	3e f4       	brtc	.+14     	; 0xed76 <atol+0x4a>
    ed68:	90 95       	com	r25
    ed6a:	80 95       	com	r24
    ed6c:	70 95       	com	r23
    ed6e:	61 95       	neg	r22
    ed70:	7f 4f       	sbci	r23, 0xFF	; 255
    ed72:	8f 4f       	sbci	r24, 0xFF	; 255
    ed74:	9f 4f       	sbci	r25, 0xFF	; 255
    ed76:	1f 91       	pop	r17
    ed78:	08 95       	ret

0000ed7a <toupper>:
    ed7a:	91 11       	cpse	r25, r1
    ed7c:	08 95       	ret
    ed7e:	81 56       	subi	r24, 0x61	; 97
    ed80:	8a 51       	subi	r24, 0x1A	; 26
    ed82:	08 f4       	brcc	.+2      	; 0xed86 <toupper+0xc>
    ed84:	80 52       	subi	r24, 0x20	; 32
    ed86:	85 58       	subi	r24, 0x85	; 133
    ed88:	08 95       	ret

0000ed8a <memset>:
    ed8a:	dc 01       	movw	r26, r24
    ed8c:	01 c0       	rjmp	.+2      	; 0xed90 <memset+0x6>
    ed8e:	6d 93       	st	X+, r22
    ed90:	41 50       	subi	r20, 0x01	; 1
    ed92:	50 40       	sbci	r21, 0x00	; 0
    ed94:	e0 f7       	brcc	.-8      	; 0xed8e <memset+0x4>
    ed96:	08 95       	ret

0000ed98 <strcmp>:
    ed98:	fb 01       	movw	r30, r22
    ed9a:	dc 01       	movw	r26, r24
    ed9c:	8d 91       	ld	r24, X+
    ed9e:	01 90       	ld	r0, Z+
    eda0:	80 19       	sub	r24, r0
    eda2:	01 10       	cpse	r0, r1
    eda4:	d9 f3       	breq	.-10     	; 0xed9c <strcmp+0x4>
    eda6:	99 0b       	sbc	r25, r25
    eda8:	08 95       	ret

0000edaa <strlen>:
    edaa:	fc 01       	movw	r30, r24
    edac:	01 90       	ld	r0, Z+
    edae:	00 20       	and	r0, r0
    edb0:	e9 f7       	brne	.-6      	; 0xedac <strlen+0x2>
    edb2:	80 95       	com	r24
    edb4:	90 95       	com	r25
    edb6:	8e 0f       	add	r24, r30
    edb8:	9f 1f       	adc	r25, r31
    edba:	08 95       	ret

0000edbc <strncpy>:
    edbc:	fb 01       	movw	r30, r22
    edbe:	dc 01       	movw	r26, r24
    edc0:	41 50       	subi	r20, 0x01	; 1
    edc2:	50 40       	sbci	r21, 0x00	; 0
    edc4:	48 f0       	brcs	.+18     	; 0xedd8 <strncpy+0x1c>
    edc6:	01 90       	ld	r0, Z+
    edc8:	0d 92       	st	X+, r0
    edca:	00 20       	and	r0, r0
    edcc:	c9 f7       	brne	.-14     	; 0xedc0 <strncpy+0x4>
    edce:	01 c0       	rjmp	.+2      	; 0xedd2 <strncpy+0x16>
    edd0:	1d 92       	st	X+, r1
    edd2:	41 50       	subi	r20, 0x01	; 1
    edd4:	50 40       	sbci	r21, 0x00	; 0
    edd6:	e0 f7       	brcc	.-8      	; 0xedd0 <strncpy+0x14>
    edd8:	08 95       	ret

0000edda <__mulsi_const_10>:
    edda:	59 2f       	mov	r21, r25
    eddc:	48 2f       	mov	r20, r24
    edde:	37 2f       	mov	r19, r23
    ede0:	26 2f       	mov	r18, r22
    ede2:	66 0f       	add	r22, r22
    ede4:	77 1f       	adc	r23, r23
    ede6:	88 1f       	adc	r24, r24
    ede8:	99 1f       	adc	r25, r25
    edea:	66 0f       	add	r22, r22
    edec:	77 1f       	adc	r23, r23
    edee:	88 1f       	adc	r24, r24
    edf0:	99 1f       	adc	r25, r25
    edf2:	62 0f       	add	r22, r18
    edf4:	73 1f       	adc	r23, r19
    edf6:	84 1f       	adc	r24, r20
    edf8:	95 1f       	adc	r25, r21
    edfa:	66 0f       	add	r22, r22
    edfc:	77 1f       	adc	r23, r23
    edfe:	88 1f       	adc	r24, r24
    ee00:	99 1f       	adc	r25, r25
    ee02:	08 95       	ret

0000ee04 <__mulhi_const_10>:
    ee04:	7a e0       	ldi	r23, 0x0A	; 10
    ee06:	97 9f       	mul	r25, r23
    ee08:	90 2d       	mov	r25, r0
    ee0a:	87 9f       	mul	r24, r23
    ee0c:	80 2d       	mov	r24, r0
    ee0e:	91 0d       	add	r25, r1
    ee10:	11 24       	eor	r1, r1
    ee12:	08 95       	ret

0000ee14 <sprintf>:
    ee14:	0f 93       	push	r16
    ee16:	1f 93       	push	r17
    ee18:	cf 93       	push	r28
    ee1a:	df 93       	push	r29
    ee1c:	cd b7       	in	r28, 0x3d	; 61
    ee1e:	de b7       	in	r29, 0x3e	; 62
    ee20:	2e 97       	sbiw	r28, 0x0e	; 14
    ee22:	cd bf       	out	0x3d, r28	; 61
    ee24:	de bf       	out	0x3e, r29	; 62
    ee26:	0d 89       	ldd	r16, Y+21	; 0x15
    ee28:	1e 89       	ldd	r17, Y+22	; 0x16
    ee2a:	86 e0       	ldi	r24, 0x06	; 6
    ee2c:	8c 83       	std	Y+4, r24	; 0x04
    ee2e:	09 83       	std	Y+1, r16	; 0x01
    ee30:	1a 83       	std	Y+2, r17	; 0x02
    ee32:	8f ef       	ldi	r24, 0xFF	; 255
    ee34:	9f e7       	ldi	r25, 0x7F	; 127
    ee36:	8d 83       	std	Y+5, r24	; 0x05
    ee38:	9e 83       	std	Y+6, r25	; 0x06
    ee3a:	ae 01       	movw	r20, r28
    ee3c:	47 5e       	subi	r20, 0xE7	; 231
    ee3e:	5f 4f       	sbci	r21, 0xFF	; 255
    ee40:	6f 89       	ldd	r22, Y+23	; 0x17
    ee42:	78 8d       	ldd	r23, Y+24	; 0x18
    ee44:	ce 01       	movw	r24, r28
    ee46:	01 96       	adiw	r24, 0x01	; 1
    ee48:	0e 94 33 77 	call	0xee66	; 0xee66 <vfprintf>
    ee4c:	ef 81       	ldd	r30, Y+7	; 0x07
    ee4e:	f8 85       	ldd	r31, Y+8	; 0x08
    ee50:	e0 0f       	add	r30, r16
    ee52:	f1 1f       	adc	r31, r17
    ee54:	10 82       	st	Z, r1
    ee56:	2e 96       	adiw	r28, 0x0e	; 14
    ee58:	cd bf       	out	0x3d, r28	; 61
    ee5a:	de bf       	out	0x3e, r29	; 62
    ee5c:	df 91       	pop	r29
    ee5e:	cf 91       	pop	r28
    ee60:	1f 91       	pop	r17
    ee62:	0f 91       	pop	r16
    ee64:	08 95       	ret

0000ee66 <vfprintf>:
    ee66:	2f 92       	push	r2
    ee68:	3f 92       	push	r3
    ee6a:	4f 92       	push	r4
    ee6c:	5f 92       	push	r5
    ee6e:	6f 92       	push	r6
    ee70:	7f 92       	push	r7
    ee72:	8f 92       	push	r8
    ee74:	9f 92       	push	r9
    ee76:	af 92       	push	r10
    ee78:	bf 92       	push	r11
    ee7a:	cf 92       	push	r12
    ee7c:	df 92       	push	r13
    ee7e:	ef 92       	push	r14
    ee80:	ff 92       	push	r15
    ee82:	0f 93       	push	r16
    ee84:	1f 93       	push	r17
    ee86:	cf 93       	push	r28
    ee88:	df 93       	push	r29
    ee8a:	cd b7       	in	r28, 0x3d	; 61
    ee8c:	de b7       	in	r29, 0x3e	; 62
    ee8e:	2b 97       	sbiw	r28, 0x0b	; 11
    ee90:	cd bf       	out	0x3d, r28	; 61
    ee92:	de bf       	out	0x3e, r29	; 62
    ee94:	6c 01       	movw	r12, r24
    ee96:	7b 01       	movw	r14, r22
    ee98:	8a 01       	movw	r16, r20
    ee9a:	fc 01       	movw	r30, r24
    ee9c:	16 82       	std	Z+6, r1	; 0x06
    ee9e:	17 82       	std	Z+7, r1	; 0x07
    eea0:	83 81       	ldd	r24, Z+3	; 0x03
    eea2:	81 ff       	sbrs	r24, 1
    eea4:	cc c1       	rjmp	.+920    	; 0xf23e <vfprintf+0x3d8>
    eea6:	ce 01       	movw	r24, r28
    eea8:	01 96       	adiw	r24, 0x01	; 1
    eeaa:	3c 01       	movw	r6, r24
    eeac:	f6 01       	movw	r30, r12
    eeae:	93 81       	ldd	r25, Z+3	; 0x03
    eeb0:	f7 01       	movw	r30, r14
    eeb2:	93 fd       	sbrc	r25, 3
    eeb4:	85 91       	lpm	r24, Z+
    eeb6:	93 ff       	sbrs	r25, 3
    eeb8:	81 91       	ld	r24, Z+
    eeba:	7f 01       	movw	r14, r30
    eebc:	88 23       	and	r24, r24
    eebe:	09 f4       	brne	.+2      	; 0xeec2 <vfprintf+0x5c>
    eec0:	ba c1       	rjmp	.+884    	; 0xf236 <vfprintf+0x3d0>
    eec2:	85 32       	cpi	r24, 0x25	; 37
    eec4:	39 f4       	brne	.+14     	; 0xeed4 <vfprintf+0x6e>
    eec6:	93 fd       	sbrc	r25, 3
    eec8:	85 91       	lpm	r24, Z+
    eeca:	93 ff       	sbrs	r25, 3
    eecc:	81 91       	ld	r24, Z+
    eece:	7f 01       	movw	r14, r30
    eed0:	85 32       	cpi	r24, 0x25	; 37
    eed2:	29 f4       	brne	.+10     	; 0xeede <vfprintf+0x78>
    eed4:	b6 01       	movw	r22, r12
    eed6:	90 e0       	ldi	r25, 0x00	; 0
    eed8:	0e 94 96 7b 	call	0xf72c	; 0xf72c <fputc>
    eedc:	e7 cf       	rjmp	.-50     	; 0xeeac <vfprintf+0x46>
    eede:	91 2c       	mov	r9, r1
    eee0:	21 2c       	mov	r2, r1
    eee2:	31 2c       	mov	r3, r1
    eee4:	ff e1       	ldi	r31, 0x1F	; 31
    eee6:	f3 15       	cp	r31, r3
    eee8:	d8 f0       	brcs	.+54     	; 0xef20 <vfprintf+0xba>
    eeea:	8b 32       	cpi	r24, 0x2B	; 43
    eeec:	79 f0       	breq	.+30     	; 0xef0c <vfprintf+0xa6>
    eeee:	38 f4       	brcc	.+14     	; 0xeefe <vfprintf+0x98>
    eef0:	80 32       	cpi	r24, 0x20	; 32
    eef2:	79 f0       	breq	.+30     	; 0xef12 <vfprintf+0xac>
    eef4:	83 32       	cpi	r24, 0x23	; 35
    eef6:	a1 f4       	brne	.+40     	; 0xef20 <vfprintf+0xba>
    eef8:	23 2d       	mov	r18, r3
    eefa:	20 61       	ori	r18, 0x10	; 16
    eefc:	1d c0       	rjmp	.+58     	; 0xef38 <vfprintf+0xd2>
    eefe:	8d 32       	cpi	r24, 0x2D	; 45
    ef00:	61 f0       	breq	.+24     	; 0xef1a <vfprintf+0xb4>
    ef02:	80 33       	cpi	r24, 0x30	; 48
    ef04:	69 f4       	brne	.+26     	; 0xef20 <vfprintf+0xba>
    ef06:	23 2d       	mov	r18, r3
    ef08:	21 60       	ori	r18, 0x01	; 1
    ef0a:	16 c0       	rjmp	.+44     	; 0xef38 <vfprintf+0xd2>
    ef0c:	83 2d       	mov	r24, r3
    ef0e:	82 60       	ori	r24, 0x02	; 2
    ef10:	38 2e       	mov	r3, r24
    ef12:	e3 2d       	mov	r30, r3
    ef14:	e4 60       	ori	r30, 0x04	; 4
    ef16:	3e 2e       	mov	r3, r30
    ef18:	2a c0       	rjmp	.+84     	; 0xef6e <vfprintf+0x108>
    ef1a:	f3 2d       	mov	r31, r3
    ef1c:	f8 60       	ori	r31, 0x08	; 8
    ef1e:	1d c0       	rjmp	.+58     	; 0xef5a <vfprintf+0xf4>
    ef20:	37 fc       	sbrc	r3, 7
    ef22:	2d c0       	rjmp	.+90     	; 0xef7e <vfprintf+0x118>
    ef24:	20 ed       	ldi	r18, 0xD0	; 208
    ef26:	28 0f       	add	r18, r24
    ef28:	2a 30       	cpi	r18, 0x0A	; 10
    ef2a:	40 f0       	brcs	.+16     	; 0xef3c <vfprintf+0xd6>
    ef2c:	8e 32       	cpi	r24, 0x2E	; 46
    ef2e:	b9 f4       	brne	.+46     	; 0xef5e <vfprintf+0xf8>
    ef30:	36 fc       	sbrc	r3, 6
    ef32:	81 c1       	rjmp	.+770    	; 0xf236 <vfprintf+0x3d0>
    ef34:	23 2d       	mov	r18, r3
    ef36:	20 64       	ori	r18, 0x40	; 64
    ef38:	32 2e       	mov	r3, r18
    ef3a:	19 c0       	rjmp	.+50     	; 0xef6e <vfprintf+0x108>
    ef3c:	36 fe       	sbrs	r3, 6
    ef3e:	06 c0       	rjmp	.+12     	; 0xef4c <vfprintf+0xe6>
    ef40:	8a e0       	ldi	r24, 0x0A	; 10
    ef42:	98 9e       	mul	r9, r24
    ef44:	20 0d       	add	r18, r0
    ef46:	11 24       	eor	r1, r1
    ef48:	92 2e       	mov	r9, r18
    ef4a:	11 c0       	rjmp	.+34     	; 0xef6e <vfprintf+0x108>
    ef4c:	ea e0       	ldi	r30, 0x0A	; 10
    ef4e:	2e 9e       	mul	r2, r30
    ef50:	20 0d       	add	r18, r0
    ef52:	11 24       	eor	r1, r1
    ef54:	22 2e       	mov	r2, r18
    ef56:	f3 2d       	mov	r31, r3
    ef58:	f0 62       	ori	r31, 0x20	; 32
    ef5a:	3f 2e       	mov	r3, r31
    ef5c:	08 c0       	rjmp	.+16     	; 0xef6e <vfprintf+0x108>
    ef5e:	8c 36       	cpi	r24, 0x6C	; 108
    ef60:	21 f4       	brne	.+8      	; 0xef6a <vfprintf+0x104>
    ef62:	83 2d       	mov	r24, r3
    ef64:	80 68       	ori	r24, 0x80	; 128
    ef66:	38 2e       	mov	r3, r24
    ef68:	02 c0       	rjmp	.+4      	; 0xef6e <vfprintf+0x108>
    ef6a:	88 36       	cpi	r24, 0x68	; 104
    ef6c:	41 f4       	brne	.+16     	; 0xef7e <vfprintf+0x118>
    ef6e:	f7 01       	movw	r30, r14
    ef70:	93 fd       	sbrc	r25, 3
    ef72:	85 91       	lpm	r24, Z+
    ef74:	93 ff       	sbrs	r25, 3
    ef76:	81 91       	ld	r24, Z+
    ef78:	7f 01       	movw	r14, r30
    ef7a:	81 11       	cpse	r24, r1
    ef7c:	b3 cf       	rjmp	.-154    	; 0xeee4 <vfprintf+0x7e>
    ef7e:	98 2f       	mov	r25, r24
    ef80:	9f 7d       	andi	r25, 0xDF	; 223
    ef82:	95 54       	subi	r25, 0x45	; 69
    ef84:	93 30       	cpi	r25, 0x03	; 3
    ef86:	28 f4       	brcc	.+10     	; 0xef92 <vfprintf+0x12c>
    ef88:	0c 5f       	subi	r16, 0xFC	; 252
    ef8a:	1f 4f       	sbci	r17, 0xFF	; 255
    ef8c:	9f e3       	ldi	r25, 0x3F	; 63
    ef8e:	99 83       	std	Y+1, r25	; 0x01
    ef90:	0d c0       	rjmp	.+26     	; 0xefac <vfprintf+0x146>
    ef92:	83 36       	cpi	r24, 0x63	; 99
    ef94:	31 f0       	breq	.+12     	; 0xefa2 <vfprintf+0x13c>
    ef96:	83 37       	cpi	r24, 0x73	; 115
    ef98:	71 f0       	breq	.+28     	; 0xefb6 <vfprintf+0x150>
    ef9a:	83 35       	cpi	r24, 0x53	; 83
    ef9c:	09 f0       	breq	.+2      	; 0xefa0 <vfprintf+0x13a>
    ef9e:	59 c0       	rjmp	.+178    	; 0xf052 <vfprintf+0x1ec>
    efa0:	21 c0       	rjmp	.+66     	; 0xefe4 <vfprintf+0x17e>
    efa2:	f8 01       	movw	r30, r16
    efa4:	80 81       	ld	r24, Z
    efa6:	89 83       	std	Y+1, r24	; 0x01
    efa8:	0e 5f       	subi	r16, 0xFE	; 254
    efaa:	1f 4f       	sbci	r17, 0xFF	; 255
    efac:	88 24       	eor	r8, r8
    efae:	83 94       	inc	r8
    efb0:	91 2c       	mov	r9, r1
    efb2:	53 01       	movw	r10, r6
    efb4:	13 c0       	rjmp	.+38     	; 0xefdc <vfprintf+0x176>
    efb6:	28 01       	movw	r4, r16
    efb8:	f2 e0       	ldi	r31, 0x02	; 2
    efba:	4f 0e       	add	r4, r31
    efbc:	51 1c       	adc	r5, r1
    efbe:	f8 01       	movw	r30, r16
    efc0:	a0 80       	ld	r10, Z
    efc2:	b1 80       	ldd	r11, Z+1	; 0x01
    efc4:	36 fe       	sbrs	r3, 6
    efc6:	03 c0       	rjmp	.+6      	; 0xefce <vfprintf+0x168>
    efc8:	69 2d       	mov	r22, r9
    efca:	70 e0       	ldi	r23, 0x00	; 0
    efcc:	02 c0       	rjmp	.+4      	; 0xefd2 <vfprintf+0x16c>
    efce:	6f ef       	ldi	r22, 0xFF	; 255
    efd0:	7f ef       	ldi	r23, 0xFF	; 255
    efd2:	c5 01       	movw	r24, r10
    efd4:	0e 94 8b 7b 	call	0xf716	; 0xf716 <strnlen>
    efd8:	4c 01       	movw	r8, r24
    efda:	82 01       	movw	r16, r4
    efdc:	f3 2d       	mov	r31, r3
    efde:	ff 77       	andi	r31, 0x7F	; 127
    efe0:	3f 2e       	mov	r3, r31
    efe2:	16 c0       	rjmp	.+44     	; 0xf010 <vfprintf+0x1aa>
    efe4:	28 01       	movw	r4, r16
    efe6:	22 e0       	ldi	r18, 0x02	; 2
    efe8:	42 0e       	add	r4, r18
    efea:	51 1c       	adc	r5, r1
    efec:	f8 01       	movw	r30, r16
    efee:	a0 80       	ld	r10, Z
    eff0:	b1 80       	ldd	r11, Z+1	; 0x01
    eff2:	36 fe       	sbrs	r3, 6
    eff4:	03 c0       	rjmp	.+6      	; 0xeffc <vfprintf+0x196>
    eff6:	69 2d       	mov	r22, r9
    eff8:	70 e0       	ldi	r23, 0x00	; 0
    effa:	02 c0       	rjmp	.+4      	; 0xf000 <vfprintf+0x19a>
    effc:	6f ef       	ldi	r22, 0xFF	; 255
    effe:	7f ef       	ldi	r23, 0xFF	; 255
    f000:	c5 01       	movw	r24, r10
    f002:	0e 94 80 7b 	call	0xf700	; 0xf700 <strnlen_P>
    f006:	4c 01       	movw	r8, r24
    f008:	f3 2d       	mov	r31, r3
    f00a:	f0 68       	ori	r31, 0x80	; 128
    f00c:	3f 2e       	mov	r3, r31
    f00e:	82 01       	movw	r16, r4
    f010:	33 fc       	sbrc	r3, 3
    f012:	1b c0       	rjmp	.+54     	; 0xf04a <vfprintf+0x1e4>
    f014:	82 2d       	mov	r24, r2
    f016:	90 e0       	ldi	r25, 0x00	; 0
    f018:	88 16       	cp	r8, r24
    f01a:	99 06       	cpc	r9, r25
    f01c:	b0 f4       	brcc	.+44     	; 0xf04a <vfprintf+0x1e4>
    f01e:	b6 01       	movw	r22, r12
    f020:	80 e2       	ldi	r24, 0x20	; 32
    f022:	90 e0       	ldi	r25, 0x00	; 0
    f024:	0e 94 96 7b 	call	0xf72c	; 0xf72c <fputc>
    f028:	2a 94       	dec	r2
    f02a:	f4 cf       	rjmp	.-24     	; 0xf014 <vfprintf+0x1ae>
    f02c:	f5 01       	movw	r30, r10
    f02e:	37 fc       	sbrc	r3, 7
    f030:	85 91       	lpm	r24, Z+
    f032:	37 fe       	sbrs	r3, 7
    f034:	81 91       	ld	r24, Z+
    f036:	5f 01       	movw	r10, r30
    f038:	b6 01       	movw	r22, r12
    f03a:	90 e0       	ldi	r25, 0x00	; 0
    f03c:	0e 94 96 7b 	call	0xf72c	; 0xf72c <fputc>
    f040:	21 10       	cpse	r2, r1
    f042:	2a 94       	dec	r2
    f044:	21 e0       	ldi	r18, 0x01	; 1
    f046:	82 1a       	sub	r8, r18
    f048:	91 08       	sbc	r9, r1
    f04a:	81 14       	cp	r8, r1
    f04c:	91 04       	cpc	r9, r1
    f04e:	71 f7       	brne	.-36     	; 0xf02c <vfprintf+0x1c6>
    f050:	e8 c0       	rjmp	.+464    	; 0xf222 <vfprintf+0x3bc>
    f052:	84 36       	cpi	r24, 0x64	; 100
    f054:	11 f0       	breq	.+4      	; 0xf05a <vfprintf+0x1f4>
    f056:	89 36       	cpi	r24, 0x69	; 105
    f058:	41 f5       	brne	.+80     	; 0xf0aa <vfprintf+0x244>
    f05a:	f8 01       	movw	r30, r16
    f05c:	37 fe       	sbrs	r3, 7
    f05e:	07 c0       	rjmp	.+14     	; 0xf06e <vfprintf+0x208>
    f060:	60 81       	ld	r22, Z
    f062:	71 81       	ldd	r23, Z+1	; 0x01
    f064:	82 81       	ldd	r24, Z+2	; 0x02
    f066:	93 81       	ldd	r25, Z+3	; 0x03
    f068:	0c 5f       	subi	r16, 0xFC	; 252
    f06a:	1f 4f       	sbci	r17, 0xFF	; 255
    f06c:	08 c0       	rjmp	.+16     	; 0xf07e <vfprintf+0x218>
    f06e:	60 81       	ld	r22, Z
    f070:	71 81       	ldd	r23, Z+1	; 0x01
    f072:	07 2e       	mov	r0, r23
    f074:	00 0c       	add	r0, r0
    f076:	88 0b       	sbc	r24, r24
    f078:	99 0b       	sbc	r25, r25
    f07a:	0e 5f       	subi	r16, 0xFE	; 254
    f07c:	1f 4f       	sbci	r17, 0xFF	; 255
    f07e:	f3 2d       	mov	r31, r3
    f080:	ff 76       	andi	r31, 0x6F	; 111
    f082:	3f 2e       	mov	r3, r31
    f084:	97 ff       	sbrs	r25, 7
    f086:	09 c0       	rjmp	.+18     	; 0xf09a <vfprintf+0x234>
    f088:	90 95       	com	r25
    f08a:	80 95       	com	r24
    f08c:	70 95       	com	r23
    f08e:	61 95       	neg	r22
    f090:	7f 4f       	sbci	r23, 0xFF	; 255
    f092:	8f 4f       	sbci	r24, 0xFF	; 255
    f094:	9f 4f       	sbci	r25, 0xFF	; 255
    f096:	f0 68       	ori	r31, 0x80	; 128
    f098:	3f 2e       	mov	r3, r31
    f09a:	2a e0       	ldi	r18, 0x0A	; 10
    f09c:	30 e0       	ldi	r19, 0x00	; 0
    f09e:	a3 01       	movw	r20, r6
    f0a0:	0e 94 d2 7b 	call	0xf7a4	; 0xf7a4 <__ultoa_invert>
    f0a4:	88 2e       	mov	r8, r24
    f0a6:	86 18       	sub	r8, r6
    f0a8:	45 c0       	rjmp	.+138    	; 0xf134 <vfprintf+0x2ce>
    f0aa:	85 37       	cpi	r24, 0x75	; 117
    f0ac:	31 f4       	brne	.+12     	; 0xf0ba <vfprintf+0x254>
    f0ae:	23 2d       	mov	r18, r3
    f0b0:	2f 7e       	andi	r18, 0xEF	; 239
    f0b2:	b2 2e       	mov	r11, r18
    f0b4:	2a e0       	ldi	r18, 0x0A	; 10
    f0b6:	30 e0       	ldi	r19, 0x00	; 0
    f0b8:	25 c0       	rjmp	.+74     	; 0xf104 <vfprintf+0x29e>
    f0ba:	93 2d       	mov	r25, r3
    f0bc:	99 7f       	andi	r25, 0xF9	; 249
    f0be:	b9 2e       	mov	r11, r25
    f0c0:	8f 36       	cpi	r24, 0x6F	; 111
    f0c2:	c1 f0       	breq	.+48     	; 0xf0f4 <vfprintf+0x28e>
    f0c4:	18 f4       	brcc	.+6      	; 0xf0cc <vfprintf+0x266>
    f0c6:	88 35       	cpi	r24, 0x58	; 88
    f0c8:	79 f0       	breq	.+30     	; 0xf0e8 <vfprintf+0x282>
    f0ca:	b5 c0       	rjmp	.+362    	; 0xf236 <vfprintf+0x3d0>
    f0cc:	80 37       	cpi	r24, 0x70	; 112
    f0ce:	19 f0       	breq	.+6      	; 0xf0d6 <vfprintf+0x270>
    f0d0:	88 37       	cpi	r24, 0x78	; 120
    f0d2:	21 f0       	breq	.+8      	; 0xf0dc <vfprintf+0x276>
    f0d4:	b0 c0       	rjmp	.+352    	; 0xf236 <vfprintf+0x3d0>
    f0d6:	e9 2f       	mov	r30, r25
    f0d8:	e0 61       	ori	r30, 0x10	; 16
    f0da:	be 2e       	mov	r11, r30
    f0dc:	b4 fe       	sbrs	r11, 4
    f0de:	0d c0       	rjmp	.+26     	; 0xf0fa <vfprintf+0x294>
    f0e0:	fb 2d       	mov	r31, r11
    f0e2:	f4 60       	ori	r31, 0x04	; 4
    f0e4:	bf 2e       	mov	r11, r31
    f0e6:	09 c0       	rjmp	.+18     	; 0xf0fa <vfprintf+0x294>
    f0e8:	34 fe       	sbrs	r3, 4
    f0ea:	0a c0       	rjmp	.+20     	; 0xf100 <vfprintf+0x29a>
    f0ec:	29 2f       	mov	r18, r25
    f0ee:	26 60       	ori	r18, 0x06	; 6
    f0f0:	b2 2e       	mov	r11, r18
    f0f2:	06 c0       	rjmp	.+12     	; 0xf100 <vfprintf+0x29a>
    f0f4:	28 e0       	ldi	r18, 0x08	; 8
    f0f6:	30 e0       	ldi	r19, 0x00	; 0
    f0f8:	05 c0       	rjmp	.+10     	; 0xf104 <vfprintf+0x29e>
    f0fa:	20 e1       	ldi	r18, 0x10	; 16
    f0fc:	30 e0       	ldi	r19, 0x00	; 0
    f0fe:	02 c0       	rjmp	.+4      	; 0xf104 <vfprintf+0x29e>
    f100:	20 e1       	ldi	r18, 0x10	; 16
    f102:	32 e0       	ldi	r19, 0x02	; 2
    f104:	f8 01       	movw	r30, r16
    f106:	b7 fe       	sbrs	r11, 7
    f108:	07 c0       	rjmp	.+14     	; 0xf118 <vfprintf+0x2b2>
    f10a:	60 81       	ld	r22, Z
    f10c:	71 81       	ldd	r23, Z+1	; 0x01
    f10e:	82 81       	ldd	r24, Z+2	; 0x02
    f110:	93 81       	ldd	r25, Z+3	; 0x03
    f112:	0c 5f       	subi	r16, 0xFC	; 252
    f114:	1f 4f       	sbci	r17, 0xFF	; 255
    f116:	06 c0       	rjmp	.+12     	; 0xf124 <vfprintf+0x2be>
    f118:	60 81       	ld	r22, Z
    f11a:	71 81       	ldd	r23, Z+1	; 0x01
    f11c:	80 e0       	ldi	r24, 0x00	; 0
    f11e:	90 e0       	ldi	r25, 0x00	; 0
    f120:	0e 5f       	subi	r16, 0xFE	; 254
    f122:	1f 4f       	sbci	r17, 0xFF	; 255
    f124:	a3 01       	movw	r20, r6
    f126:	0e 94 d2 7b 	call	0xf7a4	; 0xf7a4 <__ultoa_invert>
    f12a:	88 2e       	mov	r8, r24
    f12c:	86 18       	sub	r8, r6
    f12e:	fb 2d       	mov	r31, r11
    f130:	ff 77       	andi	r31, 0x7F	; 127
    f132:	3f 2e       	mov	r3, r31
    f134:	36 fe       	sbrs	r3, 6
    f136:	0d c0       	rjmp	.+26     	; 0xf152 <vfprintf+0x2ec>
    f138:	23 2d       	mov	r18, r3
    f13a:	2e 7f       	andi	r18, 0xFE	; 254
    f13c:	a2 2e       	mov	r10, r18
    f13e:	89 14       	cp	r8, r9
    f140:	58 f4       	brcc	.+22     	; 0xf158 <vfprintf+0x2f2>
    f142:	34 fe       	sbrs	r3, 4
    f144:	0b c0       	rjmp	.+22     	; 0xf15c <vfprintf+0x2f6>
    f146:	32 fc       	sbrc	r3, 2
    f148:	09 c0       	rjmp	.+18     	; 0xf15c <vfprintf+0x2f6>
    f14a:	83 2d       	mov	r24, r3
    f14c:	8e 7e       	andi	r24, 0xEE	; 238
    f14e:	a8 2e       	mov	r10, r24
    f150:	05 c0       	rjmp	.+10     	; 0xf15c <vfprintf+0x2f6>
    f152:	b8 2c       	mov	r11, r8
    f154:	a3 2c       	mov	r10, r3
    f156:	03 c0       	rjmp	.+6      	; 0xf15e <vfprintf+0x2f8>
    f158:	b8 2c       	mov	r11, r8
    f15a:	01 c0       	rjmp	.+2      	; 0xf15e <vfprintf+0x2f8>
    f15c:	b9 2c       	mov	r11, r9
    f15e:	a4 fe       	sbrs	r10, 4
    f160:	0f c0       	rjmp	.+30     	; 0xf180 <vfprintf+0x31a>
    f162:	fe 01       	movw	r30, r28
    f164:	e8 0d       	add	r30, r8
    f166:	f1 1d       	adc	r31, r1
    f168:	80 81       	ld	r24, Z
    f16a:	80 33       	cpi	r24, 0x30	; 48
    f16c:	21 f4       	brne	.+8      	; 0xf176 <vfprintf+0x310>
    f16e:	9a 2d       	mov	r25, r10
    f170:	99 7e       	andi	r25, 0xE9	; 233
    f172:	a9 2e       	mov	r10, r25
    f174:	09 c0       	rjmp	.+18     	; 0xf188 <vfprintf+0x322>
    f176:	a2 fe       	sbrs	r10, 2
    f178:	06 c0       	rjmp	.+12     	; 0xf186 <vfprintf+0x320>
    f17a:	b3 94       	inc	r11
    f17c:	b3 94       	inc	r11
    f17e:	04 c0       	rjmp	.+8      	; 0xf188 <vfprintf+0x322>
    f180:	8a 2d       	mov	r24, r10
    f182:	86 78       	andi	r24, 0x86	; 134
    f184:	09 f0       	breq	.+2      	; 0xf188 <vfprintf+0x322>
    f186:	b3 94       	inc	r11
    f188:	a3 fc       	sbrc	r10, 3
    f18a:	11 c0       	rjmp	.+34     	; 0xf1ae <vfprintf+0x348>
    f18c:	a0 fe       	sbrs	r10, 0
    f18e:	06 c0       	rjmp	.+12     	; 0xf19c <vfprintf+0x336>
    f190:	b2 14       	cp	r11, r2
    f192:	88 f4       	brcc	.+34     	; 0xf1b6 <vfprintf+0x350>
    f194:	28 0c       	add	r2, r8
    f196:	92 2c       	mov	r9, r2
    f198:	9b 18       	sub	r9, r11
    f19a:	0e c0       	rjmp	.+28     	; 0xf1b8 <vfprintf+0x352>
    f19c:	b2 14       	cp	r11, r2
    f19e:	60 f4       	brcc	.+24     	; 0xf1b8 <vfprintf+0x352>
    f1a0:	b6 01       	movw	r22, r12
    f1a2:	80 e2       	ldi	r24, 0x20	; 32
    f1a4:	90 e0       	ldi	r25, 0x00	; 0
    f1a6:	0e 94 96 7b 	call	0xf72c	; 0xf72c <fputc>
    f1aa:	b3 94       	inc	r11
    f1ac:	f7 cf       	rjmp	.-18     	; 0xf19c <vfprintf+0x336>
    f1ae:	b2 14       	cp	r11, r2
    f1b0:	18 f4       	brcc	.+6      	; 0xf1b8 <vfprintf+0x352>
    f1b2:	2b 18       	sub	r2, r11
    f1b4:	02 c0       	rjmp	.+4      	; 0xf1ba <vfprintf+0x354>
    f1b6:	98 2c       	mov	r9, r8
    f1b8:	21 2c       	mov	r2, r1
    f1ba:	a4 fe       	sbrs	r10, 4
    f1bc:	10 c0       	rjmp	.+32     	; 0xf1de <vfprintf+0x378>
    f1be:	b6 01       	movw	r22, r12
    f1c0:	80 e3       	ldi	r24, 0x30	; 48
    f1c2:	90 e0       	ldi	r25, 0x00	; 0
    f1c4:	0e 94 96 7b 	call	0xf72c	; 0xf72c <fputc>
    f1c8:	a2 fe       	sbrs	r10, 2
    f1ca:	17 c0       	rjmp	.+46     	; 0xf1fa <vfprintf+0x394>
    f1cc:	a1 fc       	sbrc	r10, 1
    f1ce:	03 c0       	rjmp	.+6      	; 0xf1d6 <vfprintf+0x370>
    f1d0:	88 e7       	ldi	r24, 0x78	; 120
    f1d2:	90 e0       	ldi	r25, 0x00	; 0
    f1d4:	02 c0       	rjmp	.+4      	; 0xf1da <vfprintf+0x374>
    f1d6:	88 e5       	ldi	r24, 0x58	; 88
    f1d8:	90 e0       	ldi	r25, 0x00	; 0
    f1da:	b6 01       	movw	r22, r12
    f1dc:	0c c0       	rjmp	.+24     	; 0xf1f6 <vfprintf+0x390>
    f1de:	8a 2d       	mov	r24, r10
    f1e0:	86 78       	andi	r24, 0x86	; 134
    f1e2:	59 f0       	breq	.+22     	; 0xf1fa <vfprintf+0x394>
    f1e4:	a1 fe       	sbrs	r10, 1
    f1e6:	02 c0       	rjmp	.+4      	; 0xf1ec <vfprintf+0x386>
    f1e8:	8b e2       	ldi	r24, 0x2B	; 43
    f1ea:	01 c0       	rjmp	.+2      	; 0xf1ee <vfprintf+0x388>
    f1ec:	80 e2       	ldi	r24, 0x20	; 32
    f1ee:	a7 fc       	sbrc	r10, 7
    f1f0:	8d e2       	ldi	r24, 0x2D	; 45
    f1f2:	b6 01       	movw	r22, r12
    f1f4:	90 e0       	ldi	r25, 0x00	; 0
    f1f6:	0e 94 96 7b 	call	0xf72c	; 0xf72c <fputc>
    f1fa:	89 14       	cp	r8, r9
    f1fc:	38 f4       	brcc	.+14     	; 0xf20c <vfprintf+0x3a6>
    f1fe:	b6 01       	movw	r22, r12
    f200:	80 e3       	ldi	r24, 0x30	; 48
    f202:	90 e0       	ldi	r25, 0x00	; 0
    f204:	0e 94 96 7b 	call	0xf72c	; 0xf72c <fputc>
    f208:	9a 94       	dec	r9
    f20a:	f7 cf       	rjmp	.-18     	; 0xf1fa <vfprintf+0x394>
    f20c:	8a 94       	dec	r8
    f20e:	f3 01       	movw	r30, r6
    f210:	e8 0d       	add	r30, r8
    f212:	f1 1d       	adc	r31, r1
    f214:	80 81       	ld	r24, Z
    f216:	b6 01       	movw	r22, r12
    f218:	90 e0       	ldi	r25, 0x00	; 0
    f21a:	0e 94 96 7b 	call	0xf72c	; 0xf72c <fputc>
    f21e:	81 10       	cpse	r8, r1
    f220:	f5 cf       	rjmp	.-22     	; 0xf20c <vfprintf+0x3a6>
    f222:	22 20       	and	r2, r2
    f224:	09 f4       	brne	.+2      	; 0xf228 <vfprintf+0x3c2>
    f226:	42 ce       	rjmp	.-892    	; 0xeeac <vfprintf+0x46>
    f228:	b6 01       	movw	r22, r12
    f22a:	80 e2       	ldi	r24, 0x20	; 32
    f22c:	90 e0       	ldi	r25, 0x00	; 0
    f22e:	0e 94 96 7b 	call	0xf72c	; 0xf72c <fputc>
    f232:	2a 94       	dec	r2
    f234:	f6 cf       	rjmp	.-20     	; 0xf222 <vfprintf+0x3bc>
    f236:	f6 01       	movw	r30, r12
    f238:	86 81       	ldd	r24, Z+6	; 0x06
    f23a:	97 81       	ldd	r25, Z+7	; 0x07
    f23c:	02 c0       	rjmp	.+4      	; 0xf242 <vfprintf+0x3dc>
    f23e:	8f ef       	ldi	r24, 0xFF	; 255
    f240:	9f ef       	ldi	r25, 0xFF	; 255
    f242:	2b 96       	adiw	r28, 0x0b	; 11
    f244:	cd bf       	out	0x3d, r28	; 61
    f246:	de bf       	out	0x3e, r29	; 62
    f248:	df 91       	pop	r29
    f24a:	cf 91       	pop	r28
    f24c:	1f 91       	pop	r17
    f24e:	0f 91       	pop	r16
    f250:	ff 90       	pop	r15
    f252:	ef 90       	pop	r14
    f254:	df 90       	pop	r13
    f256:	cf 90       	pop	r12
    f258:	bf 90       	pop	r11
    f25a:	af 90       	pop	r10
    f25c:	9f 90       	pop	r9
    f25e:	8f 90       	pop	r8
    f260:	7f 90       	pop	r7
    f262:	6f 90       	pop	r6
    f264:	5f 90       	pop	r5
    f266:	4f 90       	pop	r4
    f268:	3f 90       	pop	r3
    f26a:	2f 90       	pop	r2
    f26c:	08 95       	ret

0000f26e <dtoa_prf>:
    f26e:	8f 92       	push	r8
    f270:	9f 92       	push	r9
    f272:	af 92       	push	r10
    f274:	bf 92       	push	r11
    f276:	cf 92       	push	r12
    f278:	df 92       	push	r13
    f27a:	ef 92       	push	r14
    f27c:	ff 92       	push	r15
    f27e:	0f 93       	push	r16
    f280:	1f 93       	push	r17
    f282:	cf 93       	push	r28
    f284:	df 93       	push	r29
    f286:	cd b7       	in	r28, 0x3d	; 61
    f288:	de b7       	in	r29, 0x3e	; 62
    f28a:	29 97       	sbiw	r28, 0x09	; 9
    f28c:	cd bf       	out	0x3d, r28	; 61
    f28e:	de bf       	out	0x3e, r29	; 62
    f290:	6a 01       	movw	r12, r20
    f292:	12 2f       	mov	r17, r18
    f294:	b0 2e       	mov	r11, r16
    f296:	2b e3       	ldi	r18, 0x3B	; 59
    f298:	20 17       	cp	r18, r16
    f29a:	20 f0       	brcs	.+8      	; 0xf2a4 <dtoa_prf+0x36>
    f29c:	ff 24       	eor	r15, r15
    f29e:	f3 94       	inc	r15
    f2a0:	f0 0e       	add	r15, r16
    f2a2:	02 c0       	rjmp	.+4      	; 0xf2a8 <dtoa_prf+0x3a>
    f2a4:	2c e3       	ldi	r18, 0x3C	; 60
    f2a6:	f2 2e       	mov	r15, r18
    f2a8:	0f 2d       	mov	r16, r15
    f2aa:	27 e0       	ldi	r18, 0x07	; 7
    f2ac:	ae 01       	movw	r20, r28
    f2ae:	4f 5f       	subi	r20, 0xFF	; 255
    f2b0:	5f 4f       	sbci	r21, 0xFF	; 255
    f2b2:	0e 94 a8 7a 	call	0xf550	; 0xf550 <__ftoa_engine>
    f2b6:	bc 01       	movw	r22, r24
    f2b8:	49 81       	ldd	r20, Y+1	; 0x01
    f2ba:	84 2f       	mov	r24, r20
    f2bc:	89 70       	andi	r24, 0x09	; 9
    f2be:	81 30       	cpi	r24, 0x01	; 1
    f2c0:	31 f0       	breq	.+12     	; 0xf2ce <dtoa_prf+0x60>
    f2c2:	e1 fc       	sbrc	r14, 1
    f2c4:	06 c0       	rjmp	.+12     	; 0xf2d2 <dtoa_prf+0x64>
    f2c6:	e0 fe       	sbrs	r14, 0
    f2c8:	06 c0       	rjmp	.+12     	; 0xf2d6 <dtoa_prf+0x68>
    f2ca:	90 e2       	ldi	r25, 0x20	; 32
    f2cc:	05 c0       	rjmp	.+10     	; 0xf2d8 <dtoa_prf+0x6a>
    f2ce:	9d e2       	ldi	r25, 0x2D	; 45
    f2d0:	03 c0       	rjmp	.+6      	; 0xf2d8 <dtoa_prf+0x6a>
    f2d2:	9b e2       	ldi	r25, 0x2B	; 43
    f2d4:	01 c0       	rjmp	.+2      	; 0xf2d8 <dtoa_prf+0x6a>
    f2d6:	90 e0       	ldi	r25, 0x00	; 0
    f2d8:	5e 2d       	mov	r21, r14
    f2da:	50 71       	andi	r21, 0x10	; 16
    f2dc:	43 ff       	sbrs	r20, 3
    f2de:	3c c0       	rjmp	.+120    	; 0xf358 <dtoa_prf+0xea>
    f2e0:	91 11       	cpse	r25, r1
    f2e2:	02 c0       	rjmp	.+4      	; 0xf2e8 <dtoa_prf+0x7a>
    f2e4:	83 e0       	ldi	r24, 0x03	; 3
    f2e6:	01 c0       	rjmp	.+2      	; 0xf2ea <dtoa_prf+0x7c>
    f2e8:	84 e0       	ldi	r24, 0x04	; 4
    f2ea:	81 17       	cp	r24, r17
    f2ec:	18 f4       	brcc	.+6      	; 0xf2f4 <dtoa_prf+0x86>
    f2ee:	21 2f       	mov	r18, r17
    f2f0:	28 1b       	sub	r18, r24
    f2f2:	01 c0       	rjmp	.+2      	; 0xf2f6 <dtoa_prf+0x88>
    f2f4:	20 e0       	ldi	r18, 0x00	; 0
    f2f6:	51 11       	cpse	r21, r1
    f2f8:	0b c0       	rjmp	.+22     	; 0xf310 <dtoa_prf+0xa2>
    f2fa:	f6 01       	movw	r30, r12
    f2fc:	82 2f       	mov	r24, r18
    f2fe:	30 e2       	ldi	r19, 0x20	; 32
    f300:	88 23       	and	r24, r24
    f302:	19 f0       	breq	.+6      	; 0xf30a <dtoa_prf+0x9c>
    f304:	31 93       	st	Z+, r19
    f306:	81 50       	subi	r24, 0x01	; 1
    f308:	fb cf       	rjmp	.-10     	; 0xf300 <dtoa_prf+0x92>
    f30a:	c2 0e       	add	r12, r18
    f30c:	d1 1c       	adc	r13, r1
    f30e:	20 e0       	ldi	r18, 0x00	; 0
    f310:	99 23       	and	r25, r25
    f312:	29 f0       	breq	.+10     	; 0xf31e <dtoa_prf+0xb0>
    f314:	d6 01       	movw	r26, r12
    f316:	9c 93       	st	X, r25
    f318:	f6 01       	movw	r30, r12
    f31a:	31 96       	adiw	r30, 0x01	; 1
    f31c:	6f 01       	movw	r12, r30
    f31e:	c6 01       	movw	r24, r12
    f320:	03 96       	adiw	r24, 0x03	; 3
    f322:	e2 fe       	sbrs	r14, 2
    f324:	0a c0       	rjmp	.+20     	; 0xf33a <dtoa_prf+0xcc>
    f326:	3e e4       	ldi	r19, 0x4E	; 78
    f328:	d6 01       	movw	r26, r12
    f32a:	3c 93       	st	X, r19
    f32c:	41 e4       	ldi	r20, 0x41	; 65
    f32e:	11 96       	adiw	r26, 0x01	; 1
    f330:	4c 93       	st	X, r20
    f332:	11 97       	sbiw	r26, 0x01	; 1
    f334:	12 96       	adiw	r26, 0x02	; 2
    f336:	3c 93       	st	X, r19
    f338:	06 c0       	rjmp	.+12     	; 0xf346 <dtoa_prf+0xd8>
    f33a:	3e e6       	ldi	r19, 0x6E	; 110
    f33c:	f6 01       	movw	r30, r12
    f33e:	30 83       	st	Z, r19
    f340:	41 e6       	ldi	r20, 0x61	; 97
    f342:	41 83       	std	Z+1, r20	; 0x01
    f344:	32 83       	std	Z+2, r19	; 0x02
    f346:	fc 01       	movw	r30, r24
    f348:	32 2f       	mov	r19, r18
    f34a:	40 e2       	ldi	r20, 0x20	; 32
    f34c:	33 23       	and	r19, r19
    f34e:	09 f4       	brne	.+2      	; 0xf352 <dtoa_prf+0xe4>
    f350:	42 c0       	rjmp	.+132    	; 0xf3d6 <dtoa_prf+0x168>
    f352:	41 93       	st	Z+, r20
    f354:	31 50       	subi	r19, 0x01	; 1
    f356:	fa cf       	rjmp	.-12     	; 0xf34c <dtoa_prf+0xde>
    f358:	42 ff       	sbrs	r20, 2
    f35a:	44 c0       	rjmp	.+136    	; 0xf3e4 <dtoa_prf+0x176>
    f35c:	91 11       	cpse	r25, r1
    f35e:	02 c0       	rjmp	.+4      	; 0xf364 <dtoa_prf+0xf6>
    f360:	83 e0       	ldi	r24, 0x03	; 3
    f362:	01 c0       	rjmp	.+2      	; 0xf366 <dtoa_prf+0xf8>
    f364:	84 e0       	ldi	r24, 0x04	; 4
    f366:	81 17       	cp	r24, r17
    f368:	18 f4       	brcc	.+6      	; 0xf370 <dtoa_prf+0x102>
    f36a:	21 2f       	mov	r18, r17
    f36c:	28 1b       	sub	r18, r24
    f36e:	01 c0       	rjmp	.+2      	; 0xf372 <dtoa_prf+0x104>
    f370:	20 e0       	ldi	r18, 0x00	; 0
    f372:	51 11       	cpse	r21, r1
    f374:	0b c0       	rjmp	.+22     	; 0xf38c <dtoa_prf+0x11e>
    f376:	f6 01       	movw	r30, r12
    f378:	82 2f       	mov	r24, r18
    f37a:	30 e2       	ldi	r19, 0x20	; 32
    f37c:	88 23       	and	r24, r24
    f37e:	19 f0       	breq	.+6      	; 0xf386 <dtoa_prf+0x118>
    f380:	31 93       	st	Z+, r19
    f382:	81 50       	subi	r24, 0x01	; 1
    f384:	fb cf       	rjmp	.-10     	; 0xf37c <dtoa_prf+0x10e>
    f386:	c2 0e       	add	r12, r18
    f388:	d1 1c       	adc	r13, r1
    f38a:	20 e0       	ldi	r18, 0x00	; 0
    f38c:	99 23       	and	r25, r25
    f38e:	29 f0       	breq	.+10     	; 0xf39a <dtoa_prf+0x12c>
    f390:	d6 01       	movw	r26, r12
    f392:	9c 93       	st	X, r25
    f394:	f6 01       	movw	r30, r12
    f396:	31 96       	adiw	r30, 0x01	; 1
    f398:	6f 01       	movw	r12, r30
    f39a:	c6 01       	movw	r24, r12
    f39c:	03 96       	adiw	r24, 0x03	; 3
    f39e:	e2 fe       	sbrs	r14, 2
    f3a0:	0b c0       	rjmp	.+22     	; 0xf3b8 <dtoa_prf+0x14a>
    f3a2:	39 e4       	ldi	r19, 0x49	; 73
    f3a4:	d6 01       	movw	r26, r12
    f3a6:	3c 93       	st	X, r19
    f3a8:	3e e4       	ldi	r19, 0x4E	; 78
    f3aa:	11 96       	adiw	r26, 0x01	; 1
    f3ac:	3c 93       	st	X, r19
    f3ae:	11 97       	sbiw	r26, 0x01	; 1
    f3b0:	36 e4       	ldi	r19, 0x46	; 70
    f3b2:	12 96       	adiw	r26, 0x02	; 2
    f3b4:	3c 93       	st	X, r19
    f3b6:	07 c0       	rjmp	.+14     	; 0xf3c6 <dtoa_prf+0x158>
    f3b8:	39 e6       	ldi	r19, 0x69	; 105
    f3ba:	f6 01       	movw	r30, r12
    f3bc:	30 83       	st	Z, r19
    f3be:	3e e6       	ldi	r19, 0x6E	; 110
    f3c0:	31 83       	std	Z+1, r19	; 0x01
    f3c2:	36 e6       	ldi	r19, 0x66	; 102
    f3c4:	32 83       	std	Z+2, r19	; 0x02
    f3c6:	fc 01       	movw	r30, r24
    f3c8:	32 2f       	mov	r19, r18
    f3ca:	40 e2       	ldi	r20, 0x20	; 32
    f3cc:	33 23       	and	r19, r19
    f3ce:	19 f0       	breq	.+6      	; 0xf3d6 <dtoa_prf+0x168>
    f3d0:	41 93       	st	Z+, r20
    f3d2:	31 50       	subi	r19, 0x01	; 1
    f3d4:	fb cf       	rjmp	.-10     	; 0xf3cc <dtoa_prf+0x15e>
    f3d6:	fc 01       	movw	r30, r24
    f3d8:	e2 0f       	add	r30, r18
    f3da:	f1 1d       	adc	r31, r1
    f3dc:	10 82       	st	Z, r1
    f3de:	8e ef       	ldi	r24, 0xFE	; 254
    f3e0:	9f ef       	ldi	r25, 0xFF	; 255
    f3e2:	a6 c0       	rjmp	.+332    	; 0xf530 <dtoa_prf+0x2c2>
    f3e4:	21 e0       	ldi	r18, 0x01	; 1
    f3e6:	30 e0       	ldi	r19, 0x00	; 0
    f3e8:	91 11       	cpse	r25, r1
    f3ea:	02 c0       	rjmp	.+4      	; 0xf3f0 <dtoa_prf+0x182>
    f3ec:	20 e0       	ldi	r18, 0x00	; 0
    f3ee:	30 e0       	ldi	r19, 0x00	; 0
    f3f0:	16 16       	cp	r1, r22
    f3f2:	17 06       	cpc	r1, r23
    f3f4:	1c f4       	brge	.+6      	; 0xf3fc <dtoa_prf+0x18e>
    f3f6:	fb 01       	movw	r30, r22
    f3f8:	31 96       	adiw	r30, 0x01	; 1
    f3fa:	02 c0       	rjmp	.+4      	; 0xf400 <dtoa_prf+0x192>
    f3fc:	e1 e0       	ldi	r30, 0x01	; 1
    f3fe:	f0 e0       	ldi	r31, 0x00	; 0
    f400:	2e 0f       	add	r18, r30
    f402:	3f 1f       	adc	r19, r31
    f404:	bb 20       	and	r11, r11
    f406:	21 f0       	breq	.+8      	; 0xf410 <dtoa_prf+0x1a2>
    f408:	eb 2d       	mov	r30, r11
    f40a:	f0 e0       	ldi	r31, 0x00	; 0
    f40c:	31 96       	adiw	r30, 0x01	; 1
    f40e:	02 c0       	rjmp	.+4      	; 0xf414 <dtoa_prf+0x1a6>
    f410:	e0 e0       	ldi	r30, 0x00	; 0
    f412:	f0 e0       	ldi	r31, 0x00	; 0
    f414:	2e 0f       	add	r18, r30
    f416:	3f 1f       	adc	r19, r31
    f418:	e1 2f       	mov	r30, r17
    f41a:	f0 e0       	ldi	r31, 0x00	; 0
    f41c:	2e 17       	cp	r18, r30
    f41e:	3f 07       	cpc	r19, r31
    f420:	1c f4       	brge	.+6      	; 0xf428 <dtoa_prf+0x1ba>
    f422:	12 1b       	sub	r17, r18
    f424:	21 2f       	mov	r18, r17
    f426:	01 c0       	rjmp	.+2      	; 0xf42a <dtoa_prf+0x1bc>
    f428:	20 e0       	ldi	r18, 0x00	; 0
    f42a:	8e 2d       	mov	r24, r14
    f42c:	88 71       	andi	r24, 0x18	; 24
    f42e:	59 f4       	brne	.+22     	; 0xf446 <dtoa_prf+0x1d8>
    f430:	f6 01       	movw	r30, r12
    f432:	82 2f       	mov	r24, r18
    f434:	30 e2       	ldi	r19, 0x20	; 32
    f436:	88 23       	and	r24, r24
    f438:	19 f0       	breq	.+6      	; 0xf440 <dtoa_prf+0x1d2>
    f43a:	31 93       	st	Z+, r19
    f43c:	81 50       	subi	r24, 0x01	; 1
    f43e:	fb cf       	rjmp	.-10     	; 0xf436 <dtoa_prf+0x1c8>
    f440:	c2 0e       	add	r12, r18
    f442:	d1 1c       	adc	r13, r1
    f444:	20 e0       	ldi	r18, 0x00	; 0
    f446:	99 23       	and	r25, r25
    f448:	29 f0       	breq	.+10     	; 0xf454 <dtoa_prf+0x1e6>
    f44a:	d6 01       	movw	r26, r12
    f44c:	9c 93       	st	X, r25
    f44e:	f6 01       	movw	r30, r12
    f450:	31 96       	adiw	r30, 0x01	; 1
    f452:	6f 01       	movw	r12, r30
    f454:	51 11       	cpse	r21, r1
    f456:	0b c0       	rjmp	.+22     	; 0xf46e <dtoa_prf+0x200>
    f458:	f6 01       	movw	r30, r12
    f45a:	82 2f       	mov	r24, r18
    f45c:	90 e3       	ldi	r25, 0x30	; 48
    f45e:	88 23       	and	r24, r24
    f460:	19 f0       	breq	.+6      	; 0xf468 <dtoa_prf+0x1fa>
    f462:	91 93       	st	Z+, r25
    f464:	81 50       	subi	r24, 0x01	; 1
    f466:	fb cf       	rjmp	.-10     	; 0xf45e <dtoa_prf+0x1f0>
    f468:	c2 0e       	add	r12, r18
    f46a:	d1 1c       	adc	r13, r1
    f46c:	20 e0       	ldi	r18, 0x00	; 0
    f46e:	0f 2d       	mov	r16, r15
    f470:	06 0f       	add	r16, r22
    f472:	9a 81       	ldd	r25, Y+2	; 0x02
    f474:	34 2f       	mov	r19, r20
    f476:	30 71       	andi	r19, 0x10	; 16
    f478:	44 ff       	sbrs	r20, 4
    f47a:	03 c0       	rjmp	.+6      	; 0xf482 <dtoa_prf+0x214>
    f47c:	91 33       	cpi	r25, 0x31	; 49
    f47e:	09 f4       	brne	.+2      	; 0xf482 <dtoa_prf+0x214>
    f480:	01 50       	subi	r16, 0x01	; 1
    f482:	10 16       	cp	r1, r16
    f484:	24 f4       	brge	.+8      	; 0xf48e <dtoa_prf+0x220>
    f486:	09 30       	cpi	r16, 0x09	; 9
    f488:	18 f0       	brcs	.+6      	; 0xf490 <dtoa_prf+0x222>
    f48a:	08 e0       	ldi	r16, 0x08	; 8
    f48c:	01 c0       	rjmp	.+2      	; 0xf490 <dtoa_prf+0x222>
    f48e:	01 e0       	ldi	r16, 0x01	; 1
    f490:	ab 01       	movw	r20, r22
    f492:	77 ff       	sbrs	r23, 7
    f494:	02 c0       	rjmp	.+4      	; 0xf49a <dtoa_prf+0x22c>
    f496:	40 e0       	ldi	r20, 0x00	; 0
    f498:	50 e0       	ldi	r21, 0x00	; 0
    f49a:	fb 01       	movw	r30, r22
    f49c:	e4 1b       	sub	r30, r20
    f49e:	f5 0b       	sbc	r31, r21
    f4a0:	a1 e0       	ldi	r26, 0x01	; 1
    f4a2:	b0 e0       	ldi	r27, 0x00	; 0
    f4a4:	ac 0f       	add	r26, r28
    f4a6:	bd 1f       	adc	r27, r29
    f4a8:	ea 0f       	add	r30, r26
    f4aa:	fb 1f       	adc	r31, r27
    f4ac:	8e e2       	ldi	r24, 0x2E	; 46
    f4ae:	a8 2e       	mov	r10, r24
    f4b0:	4b 01       	movw	r8, r22
    f4b2:	80 1a       	sub	r8, r16
    f4b4:	91 08       	sbc	r9, r1
    f4b6:	0b 2d       	mov	r16, r11
    f4b8:	10 e0       	ldi	r17, 0x00	; 0
    f4ba:	11 95       	neg	r17
    f4bc:	01 95       	neg	r16
    f4be:	11 09       	sbc	r17, r1
    f4c0:	4f 3f       	cpi	r20, 0xFF	; 255
    f4c2:	bf ef       	ldi	r27, 0xFF	; 255
    f4c4:	5b 07       	cpc	r21, r27
    f4c6:	21 f4       	brne	.+8      	; 0xf4d0 <dtoa_prf+0x262>
    f4c8:	d6 01       	movw	r26, r12
    f4ca:	ac 92       	st	X, r10
    f4cc:	11 96       	adiw	r26, 0x01	; 1
    f4ce:	6d 01       	movw	r12, r26
    f4d0:	64 17       	cp	r22, r20
    f4d2:	75 07       	cpc	r23, r21
    f4d4:	2c f0       	brlt	.+10     	; 0xf4e0 <dtoa_prf+0x272>
    f4d6:	84 16       	cp	r8, r20
    f4d8:	95 06       	cpc	r9, r21
    f4da:	14 f4       	brge	.+4      	; 0xf4e0 <dtoa_prf+0x272>
    f4dc:	81 81       	ldd	r24, Z+1	; 0x01
    f4de:	01 c0       	rjmp	.+2      	; 0xf4e2 <dtoa_prf+0x274>
    f4e0:	80 e3       	ldi	r24, 0x30	; 48
    f4e2:	41 50       	subi	r20, 0x01	; 1
    f4e4:	51 09       	sbc	r21, r1
    f4e6:	31 96       	adiw	r30, 0x01	; 1
    f4e8:	d6 01       	movw	r26, r12
    f4ea:	11 96       	adiw	r26, 0x01	; 1
    f4ec:	7d 01       	movw	r14, r26
    f4ee:	40 17       	cp	r20, r16
    f4f0:	51 07       	cpc	r21, r17
    f4f2:	24 f0       	brlt	.+8      	; 0xf4fc <dtoa_prf+0x28e>
    f4f4:	d6 01       	movw	r26, r12
    f4f6:	8c 93       	st	X, r24
    f4f8:	67 01       	movw	r12, r14
    f4fa:	e2 cf       	rjmp	.-60     	; 0xf4c0 <dtoa_prf+0x252>
    f4fc:	64 17       	cp	r22, r20
    f4fe:	75 07       	cpc	r23, r21
    f500:	39 f4       	brne	.+14     	; 0xf510 <dtoa_prf+0x2a2>
    f502:	96 33       	cpi	r25, 0x36	; 54
    f504:	20 f4       	brcc	.+8      	; 0xf50e <dtoa_prf+0x2a0>
    f506:	95 33       	cpi	r25, 0x35	; 53
    f508:	19 f4       	brne	.+6      	; 0xf510 <dtoa_prf+0x2a2>
    f50a:	31 11       	cpse	r19, r1
    f50c:	01 c0       	rjmp	.+2      	; 0xf510 <dtoa_prf+0x2a2>
    f50e:	81 e3       	ldi	r24, 0x31	; 49
    f510:	f6 01       	movw	r30, r12
    f512:	80 83       	st	Z, r24
    f514:	f7 01       	movw	r30, r14
    f516:	82 2f       	mov	r24, r18
    f518:	90 e2       	ldi	r25, 0x20	; 32
    f51a:	88 23       	and	r24, r24
    f51c:	19 f0       	breq	.+6      	; 0xf524 <dtoa_prf+0x2b6>
    f51e:	91 93       	st	Z+, r25
    f520:	81 50       	subi	r24, 0x01	; 1
    f522:	fb cf       	rjmp	.-10     	; 0xf51a <dtoa_prf+0x2ac>
    f524:	f7 01       	movw	r30, r14
    f526:	e2 0f       	add	r30, r18
    f528:	f1 1d       	adc	r31, r1
    f52a:	10 82       	st	Z, r1
    f52c:	80 e0       	ldi	r24, 0x00	; 0
    f52e:	90 e0       	ldi	r25, 0x00	; 0
    f530:	29 96       	adiw	r28, 0x09	; 9
    f532:	cd bf       	out	0x3d, r28	; 61
    f534:	de bf       	out	0x3e, r29	; 62
    f536:	df 91       	pop	r29
    f538:	cf 91       	pop	r28
    f53a:	1f 91       	pop	r17
    f53c:	0f 91       	pop	r16
    f53e:	ff 90       	pop	r15
    f540:	ef 90       	pop	r14
    f542:	df 90       	pop	r13
    f544:	cf 90       	pop	r12
    f546:	bf 90       	pop	r11
    f548:	af 90       	pop	r10
    f54a:	9f 90       	pop	r9
    f54c:	8f 90       	pop	r8
    f54e:	08 95       	ret

0000f550 <__ftoa_engine>:
    f550:	28 30       	cpi	r18, 0x08	; 8
    f552:	08 f0       	brcs	.+2      	; 0xf556 <__ftoa_engine+0x6>
    f554:	27 e0       	ldi	r18, 0x07	; 7
    f556:	33 27       	eor	r19, r19
    f558:	da 01       	movw	r26, r20
    f55a:	99 0f       	add	r25, r25
    f55c:	31 1d       	adc	r19, r1
    f55e:	87 fd       	sbrc	r24, 7
    f560:	91 60       	ori	r25, 0x01	; 1
    f562:	00 96       	adiw	r24, 0x00	; 0
    f564:	61 05       	cpc	r22, r1
    f566:	71 05       	cpc	r23, r1
    f568:	39 f4       	brne	.+14     	; 0xf578 <__ftoa_engine+0x28>
    f56a:	32 60       	ori	r19, 0x02	; 2
    f56c:	2e 5f       	subi	r18, 0xFE	; 254
    f56e:	3d 93       	st	X+, r19
    f570:	30 e3       	ldi	r19, 0x30	; 48
    f572:	2a 95       	dec	r18
    f574:	e1 f7       	brne	.-8      	; 0xf56e <__ftoa_engine+0x1e>
    f576:	08 95       	ret
    f578:	9f 3f       	cpi	r25, 0xFF	; 255
    f57a:	30 f0       	brcs	.+12     	; 0xf588 <__ftoa_engine+0x38>
    f57c:	80 38       	cpi	r24, 0x80	; 128
    f57e:	71 05       	cpc	r23, r1
    f580:	61 05       	cpc	r22, r1
    f582:	09 f0       	breq	.+2      	; 0xf586 <__ftoa_engine+0x36>
    f584:	3c 5f       	subi	r19, 0xFC	; 252
    f586:	3c 5f       	subi	r19, 0xFC	; 252
    f588:	3d 93       	st	X+, r19
    f58a:	91 30       	cpi	r25, 0x01	; 1
    f58c:	08 f0       	brcs	.+2      	; 0xf590 <__ftoa_engine+0x40>
    f58e:	80 68       	ori	r24, 0x80	; 128
    f590:	91 1d       	adc	r25, r1
    f592:	df 93       	push	r29
    f594:	cf 93       	push	r28
    f596:	1f 93       	push	r17
    f598:	0f 93       	push	r16
    f59a:	ff 92       	push	r15
    f59c:	ef 92       	push	r14
    f59e:	19 2f       	mov	r17, r25
    f5a0:	98 7f       	andi	r25, 0xF8	; 248
    f5a2:	96 95       	lsr	r25
    f5a4:	e9 2f       	mov	r30, r25
    f5a6:	96 95       	lsr	r25
    f5a8:	96 95       	lsr	r25
    f5aa:	e9 0f       	add	r30, r25
    f5ac:	ff 27       	eor	r31, r31
    f5ae:	ea 59       	subi	r30, 0x9A	; 154
    f5b0:	fb 4f       	sbci	r31, 0xFB	; 251
    f5b2:	99 27       	eor	r25, r25
    f5b4:	33 27       	eor	r19, r19
    f5b6:	ee 24       	eor	r14, r14
    f5b8:	ff 24       	eor	r15, r15
    f5ba:	a7 01       	movw	r20, r14
    f5bc:	e7 01       	movw	r28, r14
    f5be:	05 90       	lpm	r0, Z+
    f5c0:	08 94       	sec
    f5c2:	07 94       	ror	r0
    f5c4:	28 f4       	brcc	.+10     	; 0xf5d0 <__ftoa_engine+0x80>
    f5c6:	36 0f       	add	r19, r22
    f5c8:	e7 1e       	adc	r14, r23
    f5ca:	f8 1e       	adc	r15, r24
    f5cc:	49 1f       	adc	r20, r25
    f5ce:	51 1d       	adc	r21, r1
    f5d0:	66 0f       	add	r22, r22
    f5d2:	77 1f       	adc	r23, r23
    f5d4:	88 1f       	adc	r24, r24
    f5d6:	99 1f       	adc	r25, r25
    f5d8:	06 94       	lsr	r0
    f5da:	a1 f7       	brne	.-24     	; 0xf5c4 <__ftoa_engine+0x74>
    f5dc:	05 90       	lpm	r0, Z+
    f5de:	07 94       	ror	r0
    f5e0:	28 f4       	brcc	.+10     	; 0xf5ec <__ftoa_engine+0x9c>
    f5e2:	e7 0e       	add	r14, r23
    f5e4:	f8 1e       	adc	r15, r24
    f5e6:	49 1f       	adc	r20, r25
    f5e8:	56 1f       	adc	r21, r22
    f5ea:	c1 1d       	adc	r28, r1
    f5ec:	77 0f       	add	r23, r23
    f5ee:	88 1f       	adc	r24, r24
    f5f0:	99 1f       	adc	r25, r25
    f5f2:	66 1f       	adc	r22, r22
    f5f4:	06 94       	lsr	r0
    f5f6:	a1 f7       	brne	.-24     	; 0xf5e0 <__ftoa_engine+0x90>
    f5f8:	05 90       	lpm	r0, Z+
    f5fa:	07 94       	ror	r0
    f5fc:	28 f4       	brcc	.+10     	; 0xf608 <__ftoa_engine+0xb8>
    f5fe:	f8 0e       	add	r15, r24
    f600:	49 1f       	adc	r20, r25
    f602:	56 1f       	adc	r21, r22
    f604:	c7 1f       	adc	r28, r23
    f606:	d1 1d       	adc	r29, r1
    f608:	88 0f       	add	r24, r24
    f60a:	99 1f       	adc	r25, r25
    f60c:	66 1f       	adc	r22, r22
    f60e:	77 1f       	adc	r23, r23
    f610:	06 94       	lsr	r0
    f612:	a1 f7       	brne	.-24     	; 0xf5fc <__ftoa_engine+0xac>
    f614:	05 90       	lpm	r0, Z+
    f616:	07 94       	ror	r0
    f618:	20 f4       	brcc	.+8      	; 0xf622 <__ftoa_engine+0xd2>
    f61a:	49 0f       	add	r20, r25
    f61c:	56 1f       	adc	r21, r22
    f61e:	c7 1f       	adc	r28, r23
    f620:	d8 1f       	adc	r29, r24
    f622:	99 0f       	add	r25, r25
    f624:	66 1f       	adc	r22, r22
    f626:	77 1f       	adc	r23, r23
    f628:	88 1f       	adc	r24, r24
    f62a:	06 94       	lsr	r0
    f62c:	a9 f7       	brne	.-22     	; 0xf618 <__ftoa_engine+0xc8>
    f62e:	84 91       	lpm	r24, Z
    f630:	10 95       	com	r17
    f632:	17 70       	andi	r17, 0x07	; 7
    f634:	41 f0       	breq	.+16     	; 0xf646 <__ftoa_engine+0xf6>
    f636:	d6 95       	lsr	r29
    f638:	c7 95       	ror	r28
    f63a:	57 95       	ror	r21
    f63c:	47 95       	ror	r20
    f63e:	f7 94       	ror	r15
    f640:	e7 94       	ror	r14
    f642:	1a 95       	dec	r17
    f644:	c1 f7       	brne	.-16     	; 0xf636 <__ftoa_engine+0xe6>
    f646:	ec e0       	ldi	r30, 0x0C	; 12
    f648:	f4 e0       	ldi	r31, 0x04	; 4
    f64a:	68 94       	set
    f64c:	15 90       	lpm	r1, Z+
    f64e:	15 91       	lpm	r17, Z+
    f650:	35 91       	lpm	r19, Z+
    f652:	65 91       	lpm	r22, Z+
    f654:	95 91       	lpm	r25, Z+
    f656:	05 90       	lpm	r0, Z+
    f658:	7f e2       	ldi	r23, 0x2F	; 47
    f65a:	73 95       	inc	r23
    f65c:	e1 18       	sub	r14, r1
    f65e:	f1 0a       	sbc	r15, r17
    f660:	43 0b       	sbc	r20, r19
    f662:	56 0b       	sbc	r21, r22
    f664:	c9 0b       	sbc	r28, r25
    f666:	d0 09       	sbc	r29, r0
    f668:	c0 f7       	brcc	.-16     	; 0xf65a <__ftoa_engine+0x10a>
    f66a:	e1 0c       	add	r14, r1
    f66c:	f1 1e       	adc	r15, r17
    f66e:	43 1f       	adc	r20, r19
    f670:	56 1f       	adc	r21, r22
    f672:	c9 1f       	adc	r28, r25
    f674:	d0 1d       	adc	r29, r0
    f676:	7e f4       	brtc	.+30     	; 0xf696 <__ftoa_engine+0x146>
    f678:	70 33       	cpi	r23, 0x30	; 48
    f67a:	11 f4       	brne	.+4      	; 0xf680 <__ftoa_engine+0x130>
    f67c:	8a 95       	dec	r24
    f67e:	e6 cf       	rjmp	.-52     	; 0xf64c <__ftoa_engine+0xfc>
    f680:	e8 94       	clt
    f682:	01 50       	subi	r16, 0x01	; 1
    f684:	30 f0       	brcs	.+12     	; 0xf692 <__ftoa_engine+0x142>
    f686:	08 0f       	add	r16, r24
    f688:	0a f4       	brpl	.+2      	; 0xf68c <__ftoa_engine+0x13c>
    f68a:	00 27       	eor	r16, r16
    f68c:	02 17       	cp	r16, r18
    f68e:	08 f4       	brcc	.+2      	; 0xf692 <__ftoa_engine+0x142>
    f690:	20 2f       	mov	r18, r16
    f692:	23 95       	inc	r18
    f694:	02 2f       	mov	r16, r18
    f696:	7a 33       	cpi	r23, 0x3A	; 58
    f698:	28 f0       	brcs	.+10     	; 0xf6a4 <__ftoa_engine+0x154>
    f69a:	79 e3       	ldi	r23, 0x39	; 57
    f69c:	7d 93       	st	X+, r23
    f69e:	2a 95       	dec	r18
    f6a0:	e9 f7       	brne	.-6      	; 0xf69c <__ftoa_engine+0x14c>
    f6a2:	10 c0       	rjmp	.+32     	; 0xf6c4 <__ftoa_engine+0x174>
    f6a4:	7d 93       	st	X+, r23
    f6a6:	2a 95       	dec	r18
    f6a8:	89 f6       	brne	.-94     	; 0xf64c <__ftoa_engine+0xfc>
    f6aa:	06 94       	lsr	r0
    f6ac:	97 95       	ror	r25
    f6ae:	67 95       	ror	r22
    f6b0:	37 95       	ror	r19
    f6b2:	17 95       	ror	r17
    f6b4:	17 94       	ror	r1
    f6b6:	e1 18       	sub	r14, r1
    f6b8:	f1 0a       	sbc	r15, r17
    f6ba:	43 0b       	sbc	r20, r19
    f6bc:	56 0b       	sbc	r21, r22
    f6be:	c9 0b       	sbc	r28, r25
    f6c0:	d0 09       	sbc	r29, r0
    f6c2:	98 f0       	brcs	.+38     	; 0xf6ea <__ftoa_engine+0x19a>
    f6c4:	23 95       	inc	r18
    f6c6:	7e 91       	ld	r23, -X
    f6c8:	73 95       	inc	r23
    f6ca:	7a 33       	cpi	r23, 0x3A	; 58
    f6cc:	08 f0       	brcs	.+2      	; 0xf6d0 <__ftoa_engine+0x180>
    f6ce:	70 e3       	ldi	r23, 0x30	; 48
    f6d0:	7c 93       	st	X, r23
    f6d2:	20 13       	cpse	r18, r16
    f6d4:	b8 f7       	brcc	.-18     	; 0xf6c4 <__ftoa_engine+0x174>
    f6d6:	7e 91       	ld	r23, -X
    f6d8:	70 61       	ori	r23, 0x10	; 16
    f6da:	7d 93       	st	X+, r23
    f6dc:	30 f0       	brcs	.+12     	; 0xf6ea <__ftoa_engine+0x19a>
    f6de:	83 95       	inc	r24
    f6e0:	71 e3       	ldi	r23, 0x31	; 49
    f6e2:	7d 93       	st	X+, r23
    f6e4:	70 e3       	ldi	r23, 0x30	; 48
    f6e6:	2a 95       	dec	r18
    f6e8:	e1 f7       	brne	.-8      	; 0xf6e2 <__ftoa_engine+0x192>
    f6ea:	11 24       	eor	r1, r1
    f6ec:	ef 90       	pop	r14
    f6ee:	ff 90       	pop	r15
    f6f0:	0f 91       	pop	r16
    f6f2:	1f 91       	pop	r17
    f6f4:	cf 91       	pop	r28
    f6f6:	df 91       	pop	r29
    f6f8:	99 27       	eor	r25, r25
    f6fa:	87 fd       	sbrc	r24, 7
    f6fc:	90 95       	com	r25
    f6fe:	08 95       	ret

0000f700 <strnlen_P>:
    f700:	fc 01       	movw	r30, r24
    f702:	05 90       	lpm	r0, Z+
    f704:	61 50       	subi	r22, 0x01	; 1
    f706:	70 40       	sbci	r23, 0x00	; 0
    f708:	01 10       	cpse	r0, r1
    f70a:	d8 f7       	brcc	.-10     	; 0xf702 <strnlen_P+0x2>
    f70c:	80 95       	com	r24
    f70e:	90 95       	com	r25
    f710:	8e 0f       	add	r24, r30
    f712:	9f 1f       	adc	r25, r31
    f714:	08 95       	ret

0000f716 <strnlen>:
    f716:	fc 01       	movw	r30, r24
    f718:	61 50       	subi	r22, 0x01	; 1
    f71a:	70 40       	sbci	r23, 0x00	; 0
    f71c:	01 90       	ld	r0, Z+
    f71e:	01 10       	cpse	r0, r1
    f720:	d8 f7       	brcc	.-10     	; 0xf718 <strnlen+0x2>
    f722:	80 95       	com	r24
    f724:	90 95       	com	r25
    f726:	8e 0f       	add	r24, r30
    f728:	9f 1f       	adc	r25, r31
    f72a:	08 95       	ret

0000f72c <fputc>:
    f72c:	0f 93       	push	r16
    f72e:	1f 93       	push	r17
    f730:	cf 93       	push	r28
    f732:	df 93       	push	r29
    f734:	fb 01       	movw	r30, r22
    f736:	23 81       	ldd	r18, Z+3	; 0x03
    f738:	21 fd       	sbrc	r18, 1
    f73a:	03 c0       	rjmp	.+6      	; 0xf742 <fputc+0x16>
    f73c:	8f ef       	ldi	r24, 0xFF	; 255
    f73e:	9f ef       	ldi	r25, 0xFF	; 255
    f740:	2c c0       	rjmp	.+88     	; 0xf79a <fputc+0x6e>
    f742:	22 ff       	sbrs	r18, 2
    f744:	16 c0       	rjmp	.+44     	; 0xf772 <fputc+0x46>
    f746:	46 81       	ldd	r20, Z+6	; 0x06
    f748:	57 81       	ldd	r21, Z+7	; 0x07
    f74a:	24 81       	ldd	r18, Z+4	; 0x04
    f74c:	35 81       	ldd	r19, Z+5	; 0x05
    f74e:	42 17       	cp	r20, r18
    f750:	53 07       	cpc	r21, r19
    f752:	44 f4       	brge	.+16     	; 0xf764 <fputc+0x38>
    f754:	a0 81       	ld	r26, Z
    f756:	b1 81       	ldd	r27, Z+1	; 0x01
    f758:	9d 01       	movw	r18, r26
    f75a:	2f 5f       	subi	r18, 0xFF	; 255
    f75c:	3f 4f       	sbci	r19, 0xFF	; 255
    f75e:	20 83       	st	Z, r18
    f760:	31 83       	std	Z+1, r19	; 0x01
    f762:	8c 93       	st	X, r24
    f764:	26 81       	ldd	r18, Z+6	; 0x06
    f766:	37 81       	ldd	r19, Z+7	; 0x07
    f768:	2f 5f       	subi	r18, 0xFF	; 255
    f76a:	3f 4f       	sbci	r19, 0xFF	; 255
    f76c:	26 83       	std	Z+6, r18	; 0x06
    f76e:	37 83       	std	Z+7, r19	; 0x07
    f770:	14 c0       	rjmp	.+40     	; 0xf79a <fputc+0x6e>
    f772:	8b 01       	movw	r16, r22
    f774:	ec 01       	movw	r28, r24
    f776:	fb 01       	movw	r30, r22
    f778:	00 84       	ldd	r0, Z+8	; 0x08
    f77a:	f1 85       	ldd	r31, Z+9	; 0x09
    f77c:	e0 2d       	mov	r30, r0
    f77e:	09 95       	icall
    f780:	89 2b       	or	r24, r25
    f782:	e1 f6       	brne	.-72     	; 0xf73c <fputc+0x10>
    f784:	d8 01       	movw	r26, r16
    f786:	16 96       	adiw	r26, 0x06	; 6
    f788:	8d 91       	ld	r24, X+
    f78a:	9c 91       	ld	r25, X
    f78c:	17 97       	sbiw	r26, 0x07	; 7
    f78e:	01 96       	adiw	r24, 0x01	; 1
    f790:	16 96       	adiw	r26, 0x06	; 6
    f792:	8d 93       	st	X+, r24
    f794:	9c 93       	st	X, r25
    f796:	17 97       	sbiw	r26, 0x07	; 7
    f798:	ce 01       	movw	r24, r28
    f79a:	df 91       	pop	r29
    f79c:	cf 91       	pop	r28
    f79e:	1f 91       	pop	r17
    f7a0:	0f 91       	pop	r16
    f7a2:	08 95       	ret

0000f7a4 <__ultoa_invert>:
    f7a4:	fa 01       	movw	r30, r20
    f7a6:	aa 27       	eor	r26, r26
    f7a8:	28 30       	cpi	r18, 0x08	; 8
    f7aa:	51 f1       	breq	.+84     	; 0xf800 <__ultoa_invert+0x5c>
    f7ac:	20 31       	cpi	r18, 0x10	; 16
    f7ae:	81 f1       	breq	.+96     	; 0xf810 <__ultoa_invert+0x6c>
    f7b0:	e8 94       	clt
    f7b2:	6f 93       	push	r22
    f7b4:	6e 7f       	andi	r22, 0xFE	; 254
    f7b6:	6e 5f       	subi	r22, 0xFE	; 254
    f7b8:	7f 4f       	sbci	r23, 0xFF	; 255
    f7ba:	8f 4f       	sbci	r24, 0xFF	; 255
    f7bc:	9f 4f       	sbci	r25, 0xFF	; 255
    f7be:	af 4f       	sbci	r26, 0xFF	; 255
    f7c0:	b1 e0       	ldi	r27, 0x01	; 1
    f7c2:	3e d0       	rcall	.+124    	; 0xf840 <__ultoa_invert+0x9c>
    f7c4:	b4 e0       	ldi	r27, 0x04	; 4
    f7c6:	3c d0       	rcall	.+120    	; 0xf840 <__ultoa_invert+0x9c>
    f7c8:	67 0f       	add	r22, r23
    f7ca:	78 1f       	adc	r23, r24
    f7cc:	89 1f       	adc	r24, r25
    f7ce:	9a 1f       	adc	r25, r26
    f7d0:	a1 1d       	adc	r26, r1
    f7d2:	68 0f       	add	r22, r24
    f7d4:	79 1f       	adc	r23, r25
    f7d6:	8a 1f       	adc	r24, r26
    f7d8:	91 1d       	adc	r25, r1
    f7da:	a1 1d       	adc	r26, r1
    f7dc:	6a 0f       	add	r22, r26
    f7de:	71 1d       	adc	r23, r1
    f7e0:	81 1d       	adc	r24, r1
    f7e2:	91 1d       	adc	r25, r1
    f7e4:	a1 1d       	adc	r26, r1
    f7e6:	20 d0       	rcall	.+64     	; 0xf828 <__ultoa_invert+0x84>
    f7e8:	09 f4       	brne	.+2      	; 0xf7ec <__ultoa_invert+0x48>
    f7ea:	68 94       	set
    f7ec:	3f 91       	pop	r19
    f7ee:	2a e0       	ldi	r18, 0x0A	; 10
    f7f0:	26 9f       	mul	r18, r22
    f7f2:	11 24       	eor	r1, r1
    f7f4:	30 19       	sub	r19, r0
    f7f6:	30 5d       	subi	r19, 0xD0	; 208
    f7f8:	31 93       	st	Z+, r19
    f7fa:	de f6       	brtc	.-74     	; 0xf7b2 <__ultoa_invert+0xe>
    f7fc:	cf 01       	movw	r24, r30
    f7fe:	08 95       	ret
    f800:	46 2f       	mov	r20, r22
    f802:	47 70       	andi	r20, 0x07	; 7
    f804:	40 5d       	subi	r20, 0xD0	; 208
    f806:	41 93       	st	Z+, r20
    f808:	b3 e0       	ldi	r27, 0x03	; 3
    f80a:	0f d0       	rcall	.+30     	; 0xf82a <__ultoa_invert+0x86>
    f80c:	c9 f7       	brne	.-14     	; 0xf800 <__ultoa_invert+0x5c>
    f80e:	f6 cf       	rjmp	.-20     	; 0xf7fc <__ultoa_invert+0x58>
    f810:	46 2f       	mov	r20, r22
    f812:	4f 70       	andi	r20, 0x0F	; 15
    f814:	40 5d       	subi	r20, 0xD0	; 208
    f816:	4a 33       	cpi	r20, 0x3A	; 58
    f818:	18 f0       	brcs	.+6      	; 0xf820 <__ultoa_invert+0x7c>
    f81a:	49 5d       	subi	r20, 0xD9	; 217
    f81c:	31 fd       	sbrc	r19, 1
    f81e:	40 52       	subi	r20, 0x20	; 32
    f820:	41 93       	st	Z+, r20
    f822:	02 d0       	rcall	.+4      	; 0xf828 <__ultoa_invert+0x84>
    f824:	a9 f7       	brne	.-22     	; 0xf810 <__ultoa_invert+0x6c>
    f826:	ea cf       	rjmp	.-44     	; 0xf7fc <__ultoa_invert+0x58>
    f828:	b4 e0       	ldi	r27, 0x04	; 4
    f82a:	a6 95       	lsr	r26
    f82c:	97 95       	ror	r25
    f82e:	87 95       	ror	r24
    f830:	77 95       	ror	r23
    f832:	67 95       	ror	r22
    f834:	ba 95       	dec	r27
    f836:	c9 f7       	brne	.-14     	; 0xf82a <__ultoa_invert+0x86>
    f838:	00 97       	sbiw	r24, 0x00	; 0
    f83a:	61 05       	cpc	r22, r1
    f83c:	71 05       	cpc	r23, r1
    f83e:	08 95       	ret
    f840:	9b 01       	movw	r18, r22
    f842:	ac 01       	movw	r20, r24
    f844:	0a 2e       	mov	r0, r26
    f846:	06 94       	lsr	r0
    f848:	57 95       	ror	r21
    f84a:	47 95       	ror	r20
    f84c:	37 95       	ror	r19
    f84e:	27 95       	ror	r18
    f850:	ba 95       	dec	r27
    f852:	c9 f7       	brne	.-14     	; 0xf846 <__ultoa_invert+0xa2>
    f854:	62 0f       	add	r22, r18
    f856:	73 1f       	adc	r23, r19
    f858:	84 1f       	adc	r24, r20
    f85a:	95 1f       	adc	r25, r21
    f85c:	a0 1d       	adc	r26, r0
    f85e:	08 95       	ret

0000f860 <eeprom_read_byte>:
    f860:	03 d0       	rcall	.+6      	; 0xf868 <eeprom_mapen>
    f862:	80 81       	ld	r24, Z
    f864:	99 27       	eor	r25, r25
    f866:	08 95       	ret

0000f868 <eeprom_mapen>:
    f868:	fc 01       	movw	r30, r24
    f86a:	e0 50       	subi	r30, 0x00	; 0
    f86c:	fc 4e       	sbci	r31, 0xEC	; 236
    f86e:	08 95       	ret

0000f870 <eeprom_read_dword>:
    f870:	0e 94 34 7c 	call	0xf868	; 0xf868 <eeprom_mapen>
    f874:	60 81       	ld	r22, Z
    f876:	71 81       	ldd	r23, Z+1	; 0x01
    f878:	82 81       	ldd	r24, Z+2	; 0x02
    f87a:	93 81       	ldd	r25, Z+3	; 0x03
    f87c:	08 95       	ret

0000f87e <eeprom_read_word>:
    f87e:	0e 94 34 7c 	call	0xf868	; 0xf868 <eeprom_mapen>
    f882:	80 81       	ld	r24, Z
    f884:	91 81       	ldd	r25, Z+1	; 0x01
    f886:	08 95       	ret

0000f888 <__do_global_dtors>:
    f888:	12 e0       	ldi	r17, 0x02	; 2
    f88a:	c5 e8       	ldi	r28, 0x85	; 133
    f88c:	d2 e0       	ldi	r29, 0x02	; 2
    f88e:	04 c0       	rjmp	.+8      	; 0xf898 <__do_global_dtors+0x10>
    f890:	fe 01       	movw	r30, r28
    f892:	0e 94 14 75 	call	0xea28	; 0xea28 <__tablejump2__>
    f896:	21 96       	adiw	r28, 0x01	; 1
    f898:	c7 38       	cpi	r28, 0x87	; 135
    f89a:	d1 07       	cpc	r29, r17
    f89c:	c9 f7       	brne	.-14     	; 0xf890 <__do_global_dtors+0x8>
    f89e:	f8 94       	cli

0000f8a0 <__stop_program>:
    f8a0:	ff cf       	rjmp	.-2      	; 0xf8a0 <__stop_program>
