
FlexFox80.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000506  00804000  00010a16  00010aca  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00010a16  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000004f7  00804506  00804506  00010fd0  2**0
                  ALLOC
  3 .eeprom       00000117  00810000  00810000  00010fd0  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .comment      0000005c  00000000  00000000  000110e7  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00011144  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 00000db0  00000000  00000000  00011188  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00010b3b  00000000  00000000  00011f38  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00005a3c  00000000  00000000  00022a73  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000c192  00000000  00000000  000284af  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00003294  00000000  00000000  00034644  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000719a  00000000  00000000  000378d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000069eb  00000000  00000000  0003ea72  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000dd0  00000000  00000000  0004545d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 ed 02 	jmp	0x5da	; 0x5da <__dtors_end>
       4:	0c 94 17 03 	jmp	0x62e	; 0x62e <__bad_interrupt>
       8:	0c 94 17 03 	jmp	0x62e	; 0x62e <__bad_interrupt>
       c:	0c 94 17 03 	jmp	0x62e	; 0x62e <__bad_interrupt>
      10:	0c 94 17 03 	jmp	0x62e	; 0x62e <__bad_interrupt>
      14:	0c 94 17 03 	jmp	0x62e	; 0x62e <__bad_interrupt>
      18:	0c 94 df 10 	jmp	0x21be	; 0x21be <__vector_6>
      1c:	0c 94 17 03 	jmp	0x62e	; 0x62e <__bad_interrupt>
      20:	0c 94 17 03 	jmp	0x62e	; 0x62e <__bad_interrupt>
      24:	0c 94 17 03 	jmp	0x62e	; 0x62e <__bad_interrupt>
      28:	0c 94 17 03 	jmp	0x62e	; 0x62e <__bad_interrupt>
      2c:	0c 94 17 03 	jmp	0x62e	; 0x62e <__bad_interrupt>
      30:	0c 94 f8 15 	jmp	0x2bf0	; 0x2bf0 <__vector_12>
      34:	0c 94 f3 73 	jmp	0xe7e6	; 0xe7e6 <__vector_13>
      38:	0c 94 17 03 	jmp	0x62e	; 0x62e <__bad_interrupt>
      3c:	0c 94 17 03 	jmp	0x62e	; 0x62e <__bad_interrupt>
      40:	0c 94 17 03 	jmp	0x62e	; 0x62e <__bad_interrupt>
      44:	0c 94 17 03 	jmp	0x62e	; 0x62e <__bad_interrupt>
      48:	0c 94 17 03 	jmp	0x62e	; 0x62e <__bad_interrupt>
      4c:	0c 94 28 09 	jmp	0x1250	; 0x1250 <__vector_19>
      50:	0c 94 35 0c 	jmp	0x186a	; 0x186a <__vector_20>
      54:	0c 94 17 03 	jmp	0x62e	; 0x62e <__bad_interrupt>
      58:	0c 94 b5 15 	jmp	0x2b6a	; 0x2b6a <__vector_22>
      5c:	0c 94 17 03 	jmp	0x62e	; 0x62e <__bad_interrupt>
      60:	0c 94 b3 33 	jmp	0x6766	; 0x6766 <__vector_24>
      64:	0c 94 17 03 	jmp	0x62e	; 0x62e <__bad_interrupt>
      68:	0c 94 17 03 	jmp	0x62e	; 0x62e <__bad_interrupt>
      6c:	0c 94 17 03 	jmp	0x62e	; 0x62e <__bad_interrupt>
      70:	0c 94 17 03 	jmp	0x62e	; 0x62e <__bad_interrupt>
      74:	0c 94 f7 19 	jmp	0x33ee	; 0x33ee <__vector_29>
      78:	0c 94 84 73 	jmp	0xe708	; 0xe708 <__vector_30>
      7c:	0c 94 bf 0d 	jmp	0x1b7e	; 0x1b7e <__vector_31>
      80:	0c 94 87 0f 	jmp	0x1f0e	; 0x1f0e <__vector_32>
      84:	0c 94 17 03 	jmp	0x62e	; 0x62e <__bad_interrupt>
      88:	0c 94 17 03 	jmp	0x62e	; 0x62e <__bad_interrupt>
      8c:	0c 94 17 03 	jmp	0x62e	; 0x62e <__bad_interrupt>
      90:	0c 94 17 03 	jmp	0x62e	; 0x62e <__bad_interrupt>
      94:	0c 94 17 03 	jmp	0x62e	; 0x62e <__bad_interrupt>
      98:	0c 94 17 03 	jmp	0x62e	; 0x62e <__bad_interrupt>
      9c:	0c 94 17 03 	jmp	0x62e	; 0x62e <__bad_interrupt>
      a0:	0c 94 17 03 	jmp	0x62e	; 0x62e <__bad_interrupt>
      a4:	0c 94 29 55 	jmp	0xaa52	; 0xaa52 <__vector_41>
      a8:	0c 94 17 03 	jmp	0x62e	; 0x62e <__bad_interrupt>
      ac:	0c 94 17 03 	jmp	0x62e	; 0x62e <__bad_interrupt>
      b0:	0c 94 17 03 	jmp	0x62e	; 0x62e <__bad_interrupt>
      b4:	0c 94 17 03 	jmp	0x62e	; 0x62e <__bad_interrupt>
      b8:	0c 94 17 03 	jmp	0x62e	; 0x62e <__bad_interrupt>
      bc:	0c 94 17 03 	jmp	0x62e	; 0x62e <__bad_interrupt>
      c0:	0c 94 17 03 	jmp	0x62e	; 0x62e <__bad_interrupt>
      c4:	0c 94 17 03 	jmp	0x62e	; 0x62e <__bad_interrupt>
      c8:	0c 94 17 03 	jmp	0x62e	; 0x62e <__bad_interrupt>
      cc:	0c 94 17 03 	jmp	0x62e	; 0x62e <__bad_interrupt>
      d0:	0c 94 17 03 	jmp	0x62e	; 0x62e <__bad_interrupt>
      d4:	0c 94 17 03 	jmp	0x62e	; 0x62e <__bad_interrupt>
      d8:	0c 94 17 03 	jmp	0x62e	; 0x62e <__bad_interrupt>
      dc:	0c 94 6c 09 	jmp	0x12d8	; 0x12d8 <__vector_55>
      e0:	0c 94 fa 0c 	jmp	0x19f4	; 0x19f4 <__vector_56>
      e4:	0c 94 17 03 	jmp	0x62e	; 0x62e <__bad_interrupt>
      e8:	60 2b       	or	r22, r16
      ea:	74 2b       	or	r23, r20
      ec:	8a 2b       	or	r24, r26
      ee:	a0 2b       	or	r26, r16
      f0:	b6 2b       	or	r27, r22
      f2:	56 2d       	mov	r21, r6
      f4:	4b 2d       	mov	r20, r11
      f6:	e6 2b       	or	r30, r22
      f8:	f6 2b       	or	r31, r22
      fa:	08 2c       	mov	r0, r8
      fc:	1a 2c       	mov	r1, r10
      fe:	2c 2c       	mov	r2, r12
     100:	5b 2c       	mov	r5, r11
     102:	6b 2c       	mov	r6, r11
     104:	7d 2c       	mov	r7, r13
     106:	8f 2c       	mov	r8, r15
     108:	a1 2c       	mov	r10, r1
     10a:	d0 2c       	mov	r13, r0
     10c:	f9 2c       	mov	r15, r9
     10e:	22 2d       	mov	r18, r2
     110:	af 45       	sbci	r26, 0x5F	; 95
     112:	d0 46       	sbci	r29, 0x60	; 96
     114:	d0 46       	sbci	r29, 0x60	; 96
     116:	d0 46       	sbci	r29, 0x60	; 96
     118:	d0 46       	sbci	r29, 0x60	; 96
     11a:	d0 46       	sbci	r29, 0x60	; 96
     11c:	e3 44       	sbci	r30, 0x43	; 67
     11e:	d0 46       	sbci	r29, 0x60	; 96
     120:	d0 46       	sbci	r29, 0x60	; 96
     122:	d0 46       	sbci	r29, 0x60	; 96
     124:	d0 46       	sbci	r29, 0x60	; 96
     126:	d0 46       	sbci	r29, 0x60	; 96
     128:	d0 46       	sbci	r29, 0x60	; 96
     12a:	d0 46       	sbci	r29, 0x60	; 96
     12c:	04 45       	sbci	r16, 0x54	; 84
     12e:	d0 46       	sbci	r29, 0x60	; 96
     130:	d0 46       	sbci	r29, 0x60	; 96
     132:	d0 46       	sbci	r29, 0x60	; 96
     134:	d0 46       	sbci	r29, 0x60	; 96
     136:	d0 46       	sbci	r29, 0x60	; 96
     138:	d0 46       	sbci	r29, 0x60	; 96
     13a:	d0 46       	sbci	r29, 0x60	; 96
     13c:	4b 43       	sbci	r20, 0x3B	; 59
     13e:	d0 46       	sbci	r29, 0x60	; 96
     140:	d0 46       	sbci	r29, 0x60	; 96
     142:	d0 46       	sbci	r29, 0x60	; 96
     144:	d0 46       	sbci	r29, 0x60	; 96
     146:	d0 46       	sbci	r29, 0x60	; 96
     148:	d0 46       	sbci	r29, 0x60	; 96
     14a:	d0 46       	sbci	r29, 0x60	; 96
     14c:	d0 46       	sbci	r29, 0x60	; 96
     14e:	d0 46       	sbci	r29, 0x60	; 96
     150:	d0 46       	sbci	r29, 0x60	; 96
     152:	d0 46       	sbci	r29, 0x60	; 96
     154:	d0 46       	sbci	r29, 0x60	; 96
     156:	d0 46       	sbci	r29, 0x60	; 96
     158:	d0 46       	sbci	r29, 0x60	; 96
     15a:	d0 46       	sbci	r29, 0x60	; 96
     15c:	d0 46       	sbci	r29, 0x60	; 96
     15e:	d0 46       	sbci	r29, 0x60	; 96
     160:	d0 46       	sbci	r29, 0x60	; 96
     162:	d0 46       	sbci	r29, 0x60	; 96
     164:	d0 46       	sbci	r29, 0x60	; 96
     166:	d0 46       	sbci	r29, 0x60	; 96
     168:	d0 46       	sbci	r29, 0x60	; 96
     16a:	d0 46       	sbci	r29, 0x60	; 96
     16c:	d0 46       	sbci	r29, 0x60	; 96
     16e:	8f 43       	sbci	r24, 0x3F	; 63
     170:	d0 46       	sbci	r29, 0x60	; 96
     172:	d0 46       	sbci	r29, 0x60	; 96
     174:	d0 46       	sbci	r29, 0x60	; 96
     176:	d0 46       	sbci	r29, 0x60	; 96
     178:	d0 46       	sbci	r29, 0x60	; 96
     17a:	d0 46       	sbci	r29, 0x60	; 96
     17c:	d0 46       	sbci	r29, 0x60	; 96
     17e:	d0 46       	sbci	r29, 0x60	; 96
     180:	d0 46       	sbci	r29, 0x60	; 96
     182:	d0 46       	sbci	r29, 0x60	; 96
     184:	d0 46       	sbci	r29, 0x60	; 96
     186:	d0 46       	sbci	r29, 0x60	; 96
     188:	d0 46       	sbci	r29, 0x60	; 96
     18a:	d0 46       	sbci	r29, 0x60	; 96
     18c:	d0 46       	sbci	r29, 0x60	; 96
     18e:	d0 46       	sbci	r29, 0x60	; 96
     190:	d0 46       	sbci	r29, 0x60	; 96
     192:	d0 46       	sbci	r29, 0x60	; 96
     194:	d0 46       	sbci	r29, 0x60	; 96
     196:	d0 46       	sbci	r29, 0x60	; 96
     198:	d0 46       	sbci	r29, 0x60	; 96
     19a:	d0 46       	sbci	r29, 0x60	; 96
     19c:	d0 46       	sbci	r29, 0x60	; 96
     19e:	d0 46       	sbci	r29, 0x60	; 96
     1a0:	d3 43       	sbci	r29, 0x33	; 51
     1a2:	d0 46       	sbci	r29, 0x60	; 96
     1a4:	d0 46       	sbci	r29, 0x60	; 96
     1a6:	d0 46       	sbci	r29, 0x60	; 96
     1a8:	d0 46       	sbci	r29, 0x60	; 96
     1aa:	d0 46       	sbci	r29, 0x60	; 96
     1ac:	d0 46       	sbci	r29, 0x60	; 96
     1ae:	d0 46       	sbci	r29, 0x60	; 96
     1b0:	d0 46       	sbci	r29, 0x60	; 96
     1b2:	d0 46       	sbci	r29, 0x60	; 96
     1b4:	d0 46       	sbci	r29, 0x60	; 96
     1b6:	d0 46       	sbci	r29, 0x60	; 96
     1b8:	d0 46       	sbci	r29, 0x60	; 96
     1ba:	17 44       	sbci	r17, 0x47	; 71
     1bc:	d0 46       	sbci	r29, 0x60	; 96
     1be:	d0 46       	sbci	r29, 0x60	; 96
     1c0:	d0 46       	sbci	r29, 0x60	; 96
     1c2:	d0 46       	sbci	r29, 0x60	; 96
     1c4:	2c 44       	sbci	r18, 0x4C	; 76
     1c6:	d0 46       	sbci	r29, 0x60	; 96
     1c8:	d0 46       	sbci	r29, 0x60	; 96
     1ca:	d0 46       	sbci	r29, 0x60	; 96
     1cc:	d0 46       	sbci	r29, 0x60	; 96
     1ce:	25 45       	sbci	r18, 0x55	; 85
     1d0:	d0 46       	sbci	r29, 0x60	; 96
     1d2:	d0 46       	sbci	r29, 0x60	; 96
     1d4:	d0 46       	sbci	r29, 0x60	; 96
     1d6:	d0 46       	sbci	r29, 0x60	; 96
     1d8:	f1 42       	sbci	r31, 0x21	; 33
     1da:	d0 46       	sbci	r29, 0x60	; 96
     1dc:	d0 46       	sbci	r29, 0x60	; 96
     1de:	d0 46       	sbci	r29, 0x60	; 96
     1e0:	d0 46       	sbci	r29, 0x60	; 96
     1e2:	d0 46       	sbci	r29, 0x60	; 96
     1e4:	d0 46       	sbci	r29, 0x60	; 96
     1e6:	d0 46       	sbci	r29, 0x60	; 96
     1e8:	12 43       	sbci	r17, 0x32	; 50
     1ea:	d0 46       	sbci	r29, 0x60	; 96
     1ec:	d0 46       	sbci	r29, 0x60	; 96
     1ee:	d0 46       	sbci	r29, 0x60	; 96
     1f0:	d0 46       	sbci	r29, 0x60	; 96
     1f2:	d0 46       	sbci	r29, 0x60	; 96
     1f4:	d0 46       	sbci	r29, 0x60	; 96
     1f6:	d0 46       	sbci	r29, 0x60	; 96
     1f8:	33 43       	sbci	r19, 0x33	; 51
     1fa:	d0 46       	sbci	r29, 0x60	; 96
     1fc:	d0 46       	sbci	r29, 0x60	; 96
     1fe:	d0 46       	sbci	r29, 0x60	; 96
     200:	d0 46       	sbci	r29, 0x60	; 96
     202:	d0 46       	sbci	r29, 0x60	; 96
     204:	3a 45       	sbci	r19, 0x5A	; 90
     206:	d0 46       	sbci	r29, 0x60	; 96
     208:	d0 46       	sbci	r29, 0x60	; 96
     20a:	d0 46       	sbci	r29, 0x60	; 96
     20c:	d0 46       	sbci	r29, 0x60	; 96
     20e:	4f 45       	sbci	r20, 0x5F	; 95
     210:	d0 46       	sbci	r29, 0x60	; 96
     212:	d0 46       	sbci	r29, 0x60	; 96
     214:	d0 46       	sbci	r29, 0x60	; 96
     216:	d0 46       	sbci	r29, 0x60	; 96
     218:	d0 46       	sbci	r29, 0x60	; 96
     21a:	67 45       	sbci	r22, 0x57	; 87
     21c:	d0 46       	sbci	r29, 0x60	; 96
     21e:	d0 46       	sbci	r29, 0x60	; 96
     220:	d0 46       	sbci	r29, 0x60	; 96
     222:	d0 46       	sbci	r29, 0x60	; 96
     224:	d0 46       	sbci	r29, 0x60	; 96
     226:	7f 45       	sbci	r23, 0x5F	; 95
     228:	d0 46       	sbci	r29, 0x60	; 96
     22a:	d0 46       	sbci	r29, 0x60	; 96
     22c:	d0 46       	sbci	r29, 0x60	; 96
     22e:	d0 46       	sbci	r29, 0x60	; 96
     230:	d0 46       	sbci	r29, 0x60	; 96
     232:	97 45       	sbci	r25, 0x57	; 87
     234:	d0 46       	sbci	r29, 0x60	; 96
     236:	d0 46       	sbci	r29, 0x60	; 96
     238:	d0 46       	sbci	r29, 0x60	; 96
     23a:	d0 46       	sbci	r29, 0x60	; 96
     23c:	d0 46       	sbci	r29, 0x60	; 96
     23e:	56 44       	sbci	r21, 0x46	; 70
     240:	d0 46       	sbci	r29, 0x60	; 96
     242:	d0 46       	sbci	r29, 0x60	; 96
     244:	d0 46       	sbci	r29, 0x60	; 96
     246:	d0 46       	sbci	r29, 0x60	; 96
     248:	6b 44       	sbci	r22, 0x4B	; 75
     24a:	d0 46       	sbci	r29, 0x60	; 96
     24c:	d0 46       	sbci	r29, 0x60	; 96
     24e:	d0 46       	sbci	r29, 0x60	; 96
     250:	d0 46       	sbci	r29, 0x60	; 96
     252:	d0 46       	sbci	r29, 0x60	; 96
     254:	d0 46       	sbci	r29, 0x60	; 96
     256:	d0 46       	sbci	r29, 0x60	; 96
     258:	8c 44       	sbci	r24, 0x4C	; 76
     25a:	d0 46       	sbci	r29, 0x60	; 96
     25c:	d0 46       	sbci	r29, 0x60	; 96
     25e:	d0 46       	sbci	r29, 0x60	; 96
     260:	d0 46       	sbci	r29, 0x60	; 96
     262:	d0 46       	sbci	r29, 0x60	; 96
     264:	d0 46       	sbci	r29, 0x60	; 96
     266:	d0 46       	sbci	r29, 0x60	; 96
     268:	ad 44       	sbci	r26, 0x4D	; 77
     26a:	d0 46       	sbci	r29, 0x60	; 96
     26c:	d0 46       	sbci	r29, 0x60	; 96
     26e:	d0 46       	sbci	r29, 0x60	; 96
     270:	d0 46       	sbci	r29, 0x60	; 96
     272:	d0 46       	sbci	r29, 0x60	; 96
     274:	d0 46       	sbci	r29, 0x60	; 96
     276:	d0 46       	sbci	r29, 0x60	; 96
     278:	ce 44       	sbci	r28, 0x4E	; 78
     27a:	d0 46       	sbci	r29, 0x60	; 96
     27c:	d0 46       	sbci	r29, 0x60	; 96
     27e:	d0 46       	sbci	r29, 0x60	; 96
     280:	d0 46       	sbci	r29, 0x60	; 96
     282:	41 44       	sbci	r20, 0x41	; 65
     284:	d0 46       	sbci	r29, 0x60	; 96
     286:	d0 46       	sbci	r29, 0x60	; 96
     288:	d0 46       	sbci	r29, 0x60	; 96
     28a:	d0 46       	sbci	r29, 0x60	; 96
     28c:	c7 45       	sbci	r28, 0x57	; 87
     28e:	d0 46       	sbci	r29, 0x60	; 96
     290:	d0 46       	sbci	r29, 0x60	; 96
     292:	d0 46       	sbci	r29, 0x60	; 96
     294:	d0 46       	sbci	r29, 0x60	; 96
     296:	d0 46       	sbci	r29, 0x60	; 96
     298:	d0 46       	sbci	r29, 0x60	; 96
     29a:	d0 46       	sbci	r29, 0x60	; 96
     29c:	d0 46       	sbci	r29, 0x60	; 96
     29e:	d0 46       	sbci	r29, 0x60	; 96
     2a0:	d0 46       	sbci	r29, 0x60	; 96
     2a2:	d0 46       	sbci	r29, 0x60	; 96
     2a4:	d0 46       	sbci	r29, 0x60	; 96
     2a6:	d0 46       	sbci	r29, 0x60	; 96
     2a8:	d0 46       	sbci	r29, 0x60	; 96
     2aa:	d0 46       	sbci	r29, 0x60	; 96
     2ac:	d0 46       	sbci	r29, 0x60	; 96
     2ae:	d0 46       	sbci	r29, 0x60	; 96
     2b0:	d0 46       	sbci	r29, 0x60	; 96
     2b2:	d0 46       	sbci	r29, 0x60	; 96
     2b4:	d0 46       	sbci	r29, 0x60	; 96
     2b6:	d0 46       	sbci	r29, 0x60	; 96
     2b8:	d0 46       	sbci	r29, 0x60	; 96
     2ba:	d0 46       	sbci	r29, 0x60	; 96
     2bc:	d0 46       	sbci	r29, 0x60	; 96
     2be:	0b 46       	sbci	r16, 0x6B	; 107
     2c0:	d0 46       	sbci	r29, 0x60	; 96
     2c2:	d0 46       	sbci	r29, 0x60	; 96
     2c4:	d0 46       	sbci	r29, 0x60	; 96
     2c6:	d0 46       	sbci	r29, 0x60	; 96
     2c8:	d0 46       	sbci	r29, 0x60	; 96
     2ca:	d0 46       	sbci	r29, 0x60	; 96
     2cc:	d0 46       	sbci	r29, 0x60	; 96
     2ce:	d0 46       	sbci	r29, 0x60	; 96
     2d0:	d0 46       	sbci	r29, 0x60	; 96
     2d2:	d0 46       	sbci	r29, 0x60	; 96
     2d4:	d0 46       	sbci	r29, 0x60	; 96
     2d6:	d0 46       	sbci	r29, 0x60	; 96
     2d8:	d0 46       	sbci	r29, 0x60	; 96
     2da:	d0 46       	sbci	r29, 0x60	; 96
     2dc:	d0 46       	sbci	r29, 0x60	; 96
     2de:	d0 46       	sbci	r29, 0x60	; 96
     2e0:	d0 46       	sbci	r29, 0x60	; 96
     2e2:	d0 46       	sbci	r29, 0x60	; 96
     2e4:	d0 46       	sbci	r29, 0x60	; 96
     2e6:	d0 46       	sbci	r29, 0x60	; 96
     2e8:	d0 46       	sbci	r29, 0x60	; 96
     2ea:	d0 46       	sbci	r29, 0x60	; 96
     2ec:	d0 46       	sbci	r29, 0x60	; 96
     2ee:	d0 46       	sbci	r29, 0x60	; 96
     2f0:	4f 46       	sbci	r20, 0x6F	; 111
     2f2:	d0 46       	sbci	r29, 0x60	; 96
     2f4:	d0 46       	sbci	r29, 0x60	; 96
     2f6:	d0 46       	sbci	r29, 0x60	; 96
     2f8:	d0 46       	sbci	r29, 0x60	; 96
     2fa:	d0 46       	sbci	r29, 0x60	; 96
     2fc:	d0 46       	sbci	r29, 0x60	; 96
     2fe:	d0 46       	sbci	r29, 0x60	; 96
     300:	d0 46       	sbci	r29, 0x60	; 96
     302:	d0 46       	sbci	r29, 0x60	; 96
     304:	d0 46       	sbci	r29, 0x60	; 96
     306:	d0 46       	sbci	r29, 0x60	; 96
     308:	d0 46       	sbci	r29, 0x60	; 96
     30a:	d0 46       	sbci	r29, 0x60	; 96
     30c:	d0 46       	sbci	r29, 0x60	; 96
     30e:	d0 46       	sbci	r29, 0x60	; 96
     310:	d0 46       	sbci	r29, 0x60	; 96
     312:	d0 46       	sbci	r29, 0x60	; 96
     314:	d0 46       	sbci	r29, 0x60	; 96
     316:	d0 46       	sbci	r29, 0x60	; 96
     318:	d0 46       	sbci	r29, 0x60	; 96
     31a:	d0 46       	sbci	r29, 0x60	; 96
     31c:	d0 46       	sbci	r29, 0x60	; 96
     31e:	d0 46       	sbci	r29, 0x60	; 96
     320:	d0 46       	sbci	r29, 0x60	; 96
     322:	93 46       	sbci	r25, 0x63	; 99
     324:	d0 46       	sbci	r29, 0x60	; 96
     326:	d0 46       	sbci	r29, 0x60	; 96
     328:	d0 46       	sbci	r29, 0x60	; 96
     32a:	d0 46       	sbci	r29, 0x60	; 96
     32c:	d0 46       	sbci	r29, 0x60	; 96
     32e:	d0 46       	sbci	r29, 0x60	; 96
     330:	d0 46       	sbci	r29, 0x60	; 96
     332:	b7 46       	sbci	r27, 0x67	; 103
     334:	66 58       	subi	r22, 0x86	; 134
     336:	7d 58       	subi	r23, 0x8D	; 141
     338:	93 58       	subi	r25, 0x83	; 131
     33a:	a9 58       	subi	r26, 0x89	; 137
     33c:	f5 58       	subi	r31, 0x85	; 133
     33e:	cf 58       	subi	r28, 0x8F	; 143
     340:	1b 59       	subi	r17, 0x9B	; 155
     342:	5b 5a       	subi	r21, 0xAB	; 171
     344:	7f 5a       	subi	r23, 0xAF	; 175
     346:	16 5a       	subi	r17, 0xA6	; 166
     348:	d1 59       	subi	r29, 0x91	; 145
     34a:	89 59       	subi	r24, 0x99	; 153
     34c:	41 59       	subi	r20, 0x91	; 145
     34e:	68 63       	ori	r22, 0x38	; 56
     350:	f8 62       	ori	r31, 0x28	; 40
     352:	4c 63       	ori	r20, 0x3C	; 60
     354:	76 63       	ori	r23, 0x36	; 54
     356:	53 63       	ori	r21, 0x33	; 51
     358:	76 63       	ori	r23, 0x36	; 54
     35a:	14 63       	ori	r17, 0x34	; 52
     35c:	f1 62       	ori	r31, 0x21	; 33
     35e:	06 63       	ori	r16, 0x36	; 54
     360:	0d 63       	ori	r16, 0x3D	; 61
     362:	76 63       	ori	r23, 0x36	; 54
     364:	30 63       	ori	r19, 0x30	; 48
     366:	e3 62       	ori	r30, 0x23	; 35
     368:	3e 63       	ori	r19, 0x3E	; 62
     36a:	dc 62       	ori	r29, 0x2C	; 44
     36c:	ff 62       	ori	r31, 0x2F	; 47
     36e:	97 62       	ori	r25, 0x27	; 39
     370:	9e 62       	ori	r25, 0x2E	; 46
     372:	a5 62       	ori	r26, 0x25	; 37
     374:	ac 62       	ori	r26, 0x2C	; 44
     376:	b3 62       	ori	r27, 0x23	; 35
     378:	ba 62       	ori	r27, 0x2A	; 42
     37a:	c0 62       	ori	r28, 0x20	; 32
     37c:	c7 62       	ori	r28, 0x27	; 39
     37e:	ce 62       	ori	r28, 0x2E	; 46
     380:	d5 62       	ori	r29, 0x25	; 37
     382:	1b 63       	ori	r17, 0x3B	; 59
     384:	22 63       	ori	r18, 0x32	; 50
     386:	6f 63       	ori	r22, 0x3F	; 63
     388:	29 63       	ori	r18, 0x39	; 57
     38a:	76 63       	ori	r23, 0x36	; 54
     38c:	ea 62       	ori	r30, 0x2A	; 42
     38e:	5a 63       	ori	r21, 0x3A	; 58
     390:	e5 61       	ori	r30, 0x15	; 21
     392:	ec 61       	ori	r30, 0x1C	; 28
     394:	f3 61       	ori	r31, 0x13	; 19
     396:	fa 61       	ori	r31, 0x1A	; 26
     398:	01 62       	ori	r16, 0x21	; 33
     39a:	07 62       	ori	r16, 0x27	; 39
     39c:	0e 62       	ori	r16, 0x2E	; 46
     39e:	15 62       	ori	r17, 0x25	; 37
     3a0:	1b 62       	ori	r17, 0x2B	; 43
     3a2:	21 62       	ori	r18, 0x21	; 33
     3a4:	28 62       	ori	r18, 0x28	; 40
     3a6:	2f 62       	ori	r18, 0x2F	; 47
     3a8:	36 62       	ori	r19, 0x26	; 38
     3aa:	3d 62       	ori	r19, 0x2D	; 45
     3ac:	44 62       	ori	r20, 0x24	; 36
     3ae:	4b 62       	ori	r20, 0x2B	; 43
     3b0:	52 62       	ori	r21, 0x22	; 34
     3b2:	59 62       	ori	r21, 0x29	; 41
     3b4:	60 62       	ori	r22, 0x20	; 32
     3b6:	66 62       	ori	r22, 0x26	; 38
     3b8:	6d 62       	ori	r22, 0x2D	; 45
     3ba:	74 62       	ori	r23, 0x24	; 36
     3bc:	7b 62       	ori	r23, 0x2B	; 43
     3be:	82 62       	ori	r24, 0x22	; 34
     3c0:	89 62       	ori	r24, 0x29	; 41
     3c2:	90 62       	ori	r25, 0x20	; 32
     3c4:	76 63       	ori	r23, 0x36	; 54
     3c6:	76 63       	ori	r23, 0x36	; 54
     3c8:	76 63       	ori	r23, 0x36	; 54
     3ca:	76 63       	ori	r23, 0x36	; 54
     3cc:	45 63       	ori	r20, 0x35	; 53
     3ce:	76 63       	ori	r23, 0x36	; 54
     3d0:	76 63       	ori	r23, 0x36	; 54
     3d2:	76 63       	ori	r23, 0x36	; 54
     3d4:	76 63       	ori	r23, 0x36	; 54
     3d6:	76 63       	ori	r23, 0x36	; 54
     3d8:	76 63       	ori	r23, 0x36	; 54
     3da:	76 63       	ori	r23, 0x36	; 54
     3dc:	76 63       	ori	r23, 0x36	; 54
     3de:	76 63       	ori	r23, 0x36	; 54
     3e0:	76 63       	ori	r23, 0x36	; 54
     3e2:	76 63       	ori	r23, 0x36	; 54
     3e4:	76 63       	ori	r23, 0x36	; 54
     3e6:	76 63       	ori	r23, 0x36	; 54
     3e8:	76 63       	ori	r23, 0x36	; 54
     3ea:	76 63       	ori	r23, 0x36	; 54
     3ec:	76 63       	ori	r23, 0x36	; 54
     3ee:	76 63       	ori	r23, 0x36	; 54
     3f0:	76 63       	ori	r23, 0x36	; 54
     3f2:	76 63       	ori	r23, 0x36	; 54
     3f4:	76 63       	ori	r23, 0x36	; 54
     3f6:	76 63       	ori	r23, 0x36	; 54
     3f8:	76 63       	ori	r23, 0x36	; 54
     3fa:	76 63       	ori	r23, 0x36	; 54
     3fc:	76 63       	ori	r23, 0x36	; 54
     3fe:	76 63       	ori	r23, 0x36	; 54
     400:	76 63       	ori	r23, 0x36	; 54
     402:	76 63       	ori	r23, 0x36	; 54
     404:	76 63       	ori	r23, 0x36	; 54
     406:	61 63       	ori	r22, 0x31	; 49
     408:	76 63       	ori	r23, 0x36	; 54
     40a:	37 63       	ori	r19, 0x37	; 55

0000040c <__trampolines_end>:
     40c:	00 40       	sbci	r16, 0x00	; 0
     40e:	7a 10       	cpse	r7, r10
     410:	f3 5a       	subi	r31, 0xA3	; 163
     412:	00 a0       	ldd	r0, Z+32	; 0x20
     414:	72 4e       	sbci	r23, 0xE2	; 226
     416:	18 09       	sbc	r17, r8
     418:	00 10       	cpse	r0, r0
     41a:	a5 d4       	rcall	.+2378   	; 0xd66 <strftime+0x5ba>
     41c:	e8 00       	.word	0x00e8	; ????
     41e:	00 e8       	ldi	r16, 0x80	; 128
     420:	76 48       	sbci	r23, 0x86	; 134
     422:	17 00       	.word	0x0017	; ????
     424:	00 e4       	ldi	r16, 0x40	; 64
     426:	0b 54       	subi	r16, 0x4B	; 75
     428:	02 00       	.word	0x0002	; ????
     42a:	00 ca       	rjmp	.-3072   	; 0xfffff82c <__eeprom_end+0xff7ef715>
     42c:	9a 3b       	cpi	r25, 0xBA	; 186
     42e:	00 00       	nop
     430:	00 e1       	ldi	r16, 0x10	; 16
     432:	f5 05       	cpc	r31, r5
     434:	00 00       	nop
     436:	80 96       	adiw	r24, 0x20	; 32
     438:	98 00       	.word	0x0098	; ????
     43a:	00 00       	nop
     43c:	40 42       	sbci	r20, 0x20	; 32
     43e:	0f 00       	.word	0x000f	; ????
     440:	00 00       	nop
     442:	a0 86       	std	Z+8, r10	; 0x08
     444:	01 00       	.word	0x0001	; ????
     446:	00 00       	nop
     448:	10 27       	eor	r17, r16
     44a:	00 00       	nop
     44c:	00 00       	nop
     44e:	e8 03       	fmulsu	r22, r16
     450:	00 00       	nop
     452:	00 00       	nop
     454:	64 00       	.word	0x0064	; ????
     456:	00 00       	nop
     458:	00 00       	nop
     45a:	0a 00       	.word	0x000a	; ????
     45c:	00 00       	nop
     45e:	00 00       	nop
     460:	01 00       	.word	0x0001	; ????
     462:	00 00       	nop
     464:	00 00       	nop
     466:	2c 76       	andi	r18, 0x6C	; 108
     468:	d8 88       	ldd	r13, Y+16	; 0x10
     46a:	dc 67       	ori	r29, 0x7C	; 124
     46c:	4f 08       	sbc	r4, r15
     46e:	23 df       	rcall	.-442    	; 0x2b6 <__EEPROM_REGION_LENGTH__+0xb6>
     470:	c1 df       	rcall	.-126    	; 0x3f4 <__EEPROM_REGION_LENGTH__+0x1f4>
     472:	ae 59       	subi	r26, 0x9E	; 158
     474:	e1 b1       	in	r30, 0x01	; 1
     476:	b7 96       	adiw	r30, 0x27	; 39
     478:	e5 e3       	ldi	r30, 0x35	; 53
     47a:	e4 53       	subi	r30, 0x34	; 52
     47c:	c6 3a       	cpi	r28, 0xA6	; 166
     47e:	e6 51       	subi	r30, 0x16	; 22
     480:	99 76       	andi	r25, 0x69	; 105
     482:	96 e8       	ldi	r25, 0x86	; 134
     484:	e6 c2       	rjmp	.+1484   	; 0xa52 <strftime+0x2a6>
     486:	84 26       	eor	r8, r20
     488:	eb 89       	ldd	r30, Y+19	; 0x13
     48a:	8c 9b       	sbis	0x11, 4	; 17
     48c:	62 ed       	ldi	r22, 0xD2	; 210
     48e:	40 7c       	andi	r20, 0xC0	; 192
     490:	6f fc       	.word	0xfc6f	; ????
     492:	ef bc       	out	0x2f, r14	; 47
     494:	9c 9f       	mul	r25, r28
     496:	40 f2       	brcs	.-112    	; 0x428 <__trampolines_end+0x1c>
     498:	ba a5       	ldd	r27, Y+42	; 0x2a
     49a:	6f a5       	ldd	r22, Y+47	; 0x2f
     49c:	f4 90       	lpm	r15, Z
     49e:	05 5a       	subi	r16, 0xA5	; 165
     4a0:	2a f7       	brpl	.-54     	; 0x46c <__trampolines_end+0x60>
     4a2:	5c 93       	st	X, r21
     4a4:	6b 6c       	ori	r22, 0xCB	; 203
     4a6:	f9 67       	ori	r31, 0x79	; 121
     4a8:	6d c1       	rjmp	.+730    	; 0x784 <pgm_copystring+0x4a>
     4aa:	1b fc       	.word	0xfc1b	; ????
     4ac:	e0 e4       	ldi	r30, 0x40	; 64
     4ae:	0d 47       	sbci	r16, 0x7D	; 125
     4b0:	fe f5       	brtc	.+126    	; 0x530 <strfmonths+0x2a>
     4b2:	20 e6       	ldi	r18, 0x60	; 96
     4b4:	b5 00       	.word	0x00b5	; ????
     4b6:	d0 ed       	ldi	r29, 0xD0	; 208
     4b8:	90 2e       	mov	r9, r16
     4ba:	03 00       	.word	0x0003	; ????
     4bc:	94 35       	cpi	r25, 0x54	; 84
     4be:	77 05       	cpc	r23, r7
     4c0:	00 80       	ld	r0, Z
     4c2:	84 1e       	adc	r8, r20
     4c4:	08 00       	.word	0x0008	; ????
     4c6:	00 20       	and	r0, r0
     4c8:	4e 0a       	sbc	r4, r30
     4ca:	00 00       	nop
     4cc:	00 c8       	rjmp	.-4096   	; 0xfffff4ce <__eeprom_end+0xff7ef3b7>
     4ce:	0c 33       	cpi	r16, 0x3C	; 60
     4d0:	33 33       	cpi	r19, 0x33	; 51
     4d2:	33 0f       	add	r19, r19
     4d4:	98 6e       	ori	r25, 0xE8	; 232
     4d6:	12 83       	std	Z+2, r17	; 0x02
     4d8:	11 41       	sbci	r17, 0x11	; 17
     4da:	ef 8d       	ldd	r30, Y+31	; 0x1f
     4dc:	21 14       	cp	r2, r1
     4de:	89 3b       	cpi	r24, 0xB9	; 185
     4e0:	e6 55       	subi	r30, 0x56	; 86
     4e2:	16 cf       	rjmp	.-468    	; 0x310 <__EEPROM_REGION_LENGTH__+0x110>
     4e4:	fe e6       	ldi	r31, 0x6E	; 110
     4e6:	db 18       	sub	r13, r11
     4e8:	d1 84       	ldd	r13, Z+9	; 0x09
     4ea:	4b 38       	cpi	r20, 0x8B	; 139
     4ec:	1b f7       	brvc	.-58     	; 0x4b4 <__trampolines_end+0xa8>
     4ee:	7c 1d       	adc	r23, r12
     4f0:	90 1d       	adc	r25, r0
     4f2:	a4 bb       	out	0x14, r26	; 20
     4f4:	e4 24       	eor	r14, r4
     4f6:	20 32       	cpi	r18, 0x20	; 32
     4f8:	84 72       	andi	r24, 0x24	; 36
     4fa:	5e 22       	and	r5, r30
     4fc:	81 00       	.word	0x0081	; ????
     4fe:	c9 f1       	breq	.+114    	; 0x572 <strfwkdays+0x15>
     500:	24 ec       	ldi	r18, 0xC4	; 196
     502:	a1 e5       	ldi	r26, 0x51	; 81
     504:	3d 27       	eor	r19, r29

00000506 <strfmonths>:
     506:	4a 61 6e 75 61 72 79 20 46 65 62 72 75 61 72 79     January February
     516:	20 4d 61 72 63 68 20 41 70 72 69 6c 20 4d 61 79      March April May
     526:	20 4a 75 6e 65 20 4a 75 6c 79 20 41 75 67 75 73      June July Augus
     536:	74 20 53 65 70 74 65 6d 62 65 72 20 4f 63 74 6f     t September Octo
     546:	62 65 72 20 4e 6f 76 65 6d 62 65 72 20 44 65 63     ber November Dec
     556:	65 6d 62 65 72 20 00                                ember .

0000055d <strfwkdays>:
     55d:	53 75 6e 64 61 79 20 4d 6f 6e 64 61 79 20 54 75     Sunday Monday Tu
     56d:	65 73 64 61 79 20 57 65 64 6e 65 73 64 61 79 20     esday Wednesday 
     57d:	54 68 75 72 73 64 61 79 20 46 72 69 64 61 79 20     Thursday Friday 
     58d:	53 61 74 75 72 64 61 79 20 00                       Saturday .

00000597 <ascdays>:
     597:	53 75 6e 4d 6f 6e 54 75 65 57 65 64 54 68 75 46     SunMonTueWedThuF
     5a7:	72 69 53 61 74 00                                   riSat.

000005ad <ascmonths>:
     5ad:	4a 61 6e 46 65 62 4d 61 72 41 70 72 4d 61 79 4a     JanFebMarAprMayJ
     5bd:	75 6e 4a 75 6c 41 75 67 53 65 70 4f 63 74 4e 6f     unJulAugSepOctNo
     5cd:	76 44 65 63 00                                      vDec.

000005d2 <__ctors_start>:
     5d2:	74 31       	cpi	r23, 0x14	; 20
     5d4:	2f 34       	cpi	r18, 0x4F	; 79

000005d6 <__ctors_end>:
     5d6:	81 31       	cpi	r24, 0x11	; 17
     5d8:	3c 34       	cpi	r19, 0x4C	; 76

000005da <__dtors_end>:
     5da:	11 24       	eor	r1, r1
     5dc:	1f be       	out	0x3f, r1	; 63
     5de:	cf ef       	ldi	r28, 0xFF	; 255
     5e0:	cd bf       	out	0x3d, r28	; 61
     5e2:	df e7       	ldi	r29, 0x7F	; 127
     5e4:	de bf       	out	0x3e, r29	; 62

000005e6 <__do_copy_data>:
     5e6:	15 e4       	ldi	r17, 0x45	; 69
     5e8:	a0 e0       	ldi	r26, 0x00	; 0
     5ea:	b0 e4       	ldi	r27, 0x40	; 64
     5ec:	e6 e1       	ldi	r30, 0x16	; 22
     5ee:	fa e0       	ldi	r31, 0x0A	; 10
     5f0:	01 e0       	ldi	r16, 0x01	; 1
     5f2:	0b bf       	out	0x3b, r16	; 59
     5f4:	02 c0       	rjmp	.+4      	; 0x5fa <__do_copy_data+0x14>
     5f6:	07 90       	elpm	r0, Z+
     5f8:	0d 92       	st	X+, r0
     5fa:	a6 30       	cpi	r26, 0x06	; 6
     5fc:	b1 07       	cpc	r27, r17
     5fe:	d9 f7       	brne	.-10     	; 0x5f6 <__do_copy_data+0x10>

00000600 <__do_clear_bss>:
     600:	29 e4       	ldi	r18, 0x49	; 73
     602:	a6 e0       	ldi	r26, 0x06	; 6
     604:	b5 e4       	ldi	r27, 0x45	; 69
     606:	01 c0       	rjmp	.+2      	; 0x60a <.do_clear_bss_start>

00000608 <.do_clear_bss_loop>:
     608:	1d 92       	st	X+, r1

0000060a <.do_clear_bss_start>:
     60a:	ad 3f       	cpi	r26, 0xFD	; 253
     60c:	b2 07       	cpc	r27, r18
     60e:	e1 f7       	brne	.-8      	; 0x608 <.do_clear_bss_loop>

00000610 <__do_global_ctors>:
     610:	12 e0       	ldi	r17, 0x02	; 2
     612:	cb ee       	ldi	r28, 0xEB	; 235
     614:	d2 e0       	ldi	r29, 0x02	; 2
     616:	04 c0       	rjmp	.+8      	; 0x620 <__do_global_ctors+0x10>
     618:	21 97       	sbiw	r28, 0x01	; 1
     61a:	fe 01       	movw	r30, r28
     61c:	0e 94 7f 7d 	call	0xfafe	; 0xfafe <__tablejump2__>
     620:	c9 3e       	cpi	r28, 0xE9	; 233
     622:	d1 07       	cpc	r29, r17
     624:	c9 f7       	brne	.-14     	; 0x618 <__do_global_ctors+0x8>
     626:	0e 94 85 1a 	call	0x350a	; 0x350a <main>
     62a:	0c 94 fe 84 	jmp	0x109fc	; 0x109fc <__do_global_dtors>

0000062e <__bad_interrupt>:
     62e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000632 <is_leap_year>:
     632:	9c 01       	movw	r18, r24
     634:	23 70       	andi	r18, 0x03	; 3
     636:	33 27       	eor	r19, r19
     638:	23 2b       	or	r18, r19
     63a:	59 f4       	brne	.+22     	; 0x652 <is_leap_year+0x20>
     63c:	64 e6       	ldi	r22, 0x64	; 100
     63e:	70 e0       	ldi	r23, 0x00	; 0
     640:	0e 94 2a 7d 	call	0xfa54	; 0xfa54 <__divmodhi4>
     644:	89 2b       	or	r24, r25
     646:	39 f4       	brne	.+14     	; 0x656 <is_leap_year+0x24>
     648:	63 70       	andi	r22, 0x03	; 3
     64a:	77 27       	eor	r23, r23
     64c:	81 e0       	ldi	r24, 0x01	; 1
     64e:	67 2b       	or	r22, r23
     650:	19 f0       	breq	.+6      	; 0x658 <is_leap_year+0x26>
     652:	80 e0       	ldi	r24, 0x00	; 0
     654:	08 95       	ret
     656:	81 e0       	ldi	r24, 0x01	; 1
     658:	08 95       	ret

0000065a <localtime>:
     65a:	6b ee       	ldi	r22, 0xEB	; 235
     65c:	79 e4       	ldi	r23, 0x49	; 73
     65e:	0e 94 34 03 	call	0x668	; 0x668 <localtime_r>
     662:	8b ee       	ldi	r24, 0xEB	; 235
     664:	99 e4       	ldi	r25, 0x49	; 73
     666:	08 95       	ret

00000668 <localtime_r>:
     668:	cf 92       	push	r12
     66a:	df 92       	push	r13
     66c:	ef 92       	push	r14
     66e:	ff 92       	push	r15
     670:	0f 93       	push	r16
     672:	1f 93       	push	r17
     674:	cf 93       	push	r28
     676:	df 93       	push	r29
     678:	00 d0       	rcall	.+0      	; 0x67a <localtime_r+0x12>
     67a:	00 d0       	rcall	.+0      	; 0x67c <localtime_r+0x14>
     67c:	cd b7       	in	r28, 0x3d	; 61
     67e:	de b7       	in	r29, 0x3e	; 62
     680:	6c 01       	movw	r12, r24
     682:	7b 01       	movw	r14, r22
     684:	e0 91 fb 49 	lds	r30, 0x49FB	; 0x8049fb <__dst_ptr>
     688:	f0 91 fc 49 	lds	r31, 0x49FC	; 0x8049fc <__dst_ptr+0x1>
     68c:	30 97       	sbiw	r30, 0x00	; 0
     68e:	29 f0       	breq	.+10     	; 0x69a <localtime_r+0x32>
     690:	67 ef       	ldi	r22, 0xF7	; 247
     692:	79 e4       	ldi	r23, 0x49	; 73
     694:	09 95       	icall
     696:	8c 01       	movw	r16, r24
     698:	02 c0       	rjmp	.+4      	; 0x69e <localtime_r+0x36>
     69a:	0f ef       	ldi	r16, 0xFF	; 255
     69c:	1f ef       	ldi	r17, 0xFF	; 255
     69e:	f6 01       	movw	r30, r12
     6a0:	40 81       	ld	r20, Z
     6a2:	51 81       	ldd	r21, Z+1	; 0x01
     6a4:	62 81       	ldd	r22, Z+2	; 0x02
     6a6:	73 81       	ldd	r23, Z+3	; 0x03
     6a8:	80 91 f7 49 	lds	r24, 0x49F7	; 0x8049f7 <__utc_offset>
     6ac:	90 91 f8 49 	lds	r25, 0x49F8	; 0x8049f8 <__utc_offset+0x1>
     6b0:	a0 91 f9 49 	lds	r26, 0x49F9	; 0x8049f9 <__utc_offset+0x2>
     6b4:	b0 91 fa 49 	lds	r27, 0x49FA	; 0x8049fa <__utc_offset+0x3>
     6b8:	84 0f       	add	r24, r20
     6ba:	95 1f       	adc	r25, r21
     6bc:	a6 1f       	adc	r26, r22
     6be:	b7 1f       	adc	r27, r23
     6c0:	10 16       	cp	r1, r16
     6c2:	11 06       	cpc	r1, r17
     6c4:	4c f4       	brge	.+18     	; 0x6d8 <localtime_r+0x70>
     6c6:	a8 01       	movw	r20, r16
     6c8:	01 2e       	mov	r0, r17
     6ca:	00 0c       	add	r0, r0
     6cc:	66 0b       	sbc	r22, r22
     6ce:	77 0b       	sbc	r23, r23
     6d0:	84 0f       	add	r24, r20
     6d2:	95 1f       	adc	r25, r21
     6d4:	a6 1f       	adc	r26, r22
     6d6:	b7 1f       	adc	r27, r23
     6d8:	89 83       	std	Y+1, r24	; 0x01
     6da:	9a 83       	std	Y+2, r25	; 0x02
     6dc:	ab 83       	std	Y+3, r26	; 0x03
     6de:	bc 83       	std	Y+4, r27	; 0x04
     6e0:	b7 01       	movw	r22, r14
     6e2:	ce 01       	movw	r24, r28
     6e4:	01 96       	adiw	r24, 0x01	; 1
     6e6:	0e 94 bc 07 	call	0xf78	; 0xf78 <gmtime_r>
     6ea:	f7 01       	movw	r30, r14
     6ec:	02 87       	std	Z+10, r16	; 0x0a
     6ee:	13 87       	std	Z+11, r17	; 0x0b
     6f0:	24 96       	adiw	r28, 0x04	; 4
     6f2:	cd bf       	out	0x3d, r28	; 61
     6f4:	de bf       	out	0x3e, r29	; 62
     6f6:	df 91       	pop	r29
     6f8:	cf 91       	pop	r28
     6fa:	1f 91       	pop	r17
     6fc:	0f 91       	pop	r16
     6fe:	ff 90       	pop	r15
     700:	ef 90       	pop	r14
     702:	df 90       	pop	r13
     704:	cf 90       	pop	r12
     706:	08 95       	ret

00000708 <month_length>:
     708:	62 30       	cpi	r22, 0x02	; 2
     70a:	21 f4       	brne	.+8      	; 0x714 <month_length+0xc>
     70c:	0e 94 19 03 	call	0x632	; 0x632 <is_leap_year>
     710:	84 5e       	subi	r24, 0xE4	; 228
     712:	08 95       	ret
     714:	68 30       	cpi	r22, 0x08	; 8
     716:	08 f0       	brcs	.+2      	; 0x71a <month_length+0x12>
     718:	6f 5f       	subi	r22, 0xFF	; 255
     71a:	61 70       	andi	r22, 0x01	; 1
     71c:	8e e1       	ldi	r24, 0x1E	; 30
     71e:	86 0f       	add	r24, r22
     720:	08 95       	ret

00000722 <set_system_time>:
     722:	0f b6       	in	r0, 0x3f	; 63
     724:	f8 94       	cli
     726:	60 93 e7 49 	sts	0x49E7, r22	; 0x8049e7 <__system_time>
     72a:	70 93 e8 49 	sts	0x49E8, r23	; 0x8049e8 <__system_time+0x1>
     72e:	80 93 e9 49 	sts	0x49E9, r24	; 0x8049e9 <__system_time+0x2>
     732:	90 93 ea 49 	sts	0x49EA, r25	; 0x8049ea <__system_time+0x3>
     736:	0f be       	out	0x3f, r0	; 63
     738:	08 95       	ret

0000073a <pgm_copystring>:
     73a:	cf 92       	push	r12
     73c:	df 92       	push	r13
     73e:	ef 92       	push	r14
     740:	0f 93       	push	r16
     742:	6b 01       	movw	r12, r22
     744:	e8 2e       	mov	r14, r24
     746:	7c 2d       	mov	r23, r12
     748:	6d 2d       	mov	r22, r13
     74a:	5e 2d       	mov	r21, r14
     74c:	ae 2d       	mov	r26, r14
     74e:	c6 01       	movw	r24, r12
     750:	01 96       	adiw	r24, 0x01	; 1
     752:	a1 1d       	adc	r26, r1
     754:	44 23       	and	r20, r20
     756:	51 f0       	breq	.+20     	; 0x76c <pgm_copystring+0x32>
     758:	6c 01       	movw	r12, r24
     75a:	ea 2e       	mov	r14, r26
     75c:	e7 2f       	mov	r30, r23
     75e:	f6 2f       	mov	r31, r22
     760:	0e 94 eb 84 	call	0x109d6	; 0x109d6 <__xload_1>
     764:	60 32       	cpi	r22, 0x20	; 32
     766:	79 f7       	brne	.-34     	; 0x746 <pgm_copystring+0xc>
     768:	41 50       	subi	r20, 0x01	; 1
     76a:	ed cf       	rjmp	.-38     	; 0x746 <pgm_copystring+0xc>
     76c:	f6 01       	movw	r30, r12
     76e:	0e 94 eb 84 	call	0x109d6	; 0x109d6 <__xload_1>
     772:	6c 01       	movw	r12, r24
     774:	ea 2e       	mov	r14, r26
     776:	80 e0       	ldi	r24, 0x00	; 0
     778:	60 32       	cpi	r22, 0x20	; 32
     77a:	39 f4       	brne	.+14     	; 0x78a <pgm_copystring+0x50>
     77c:	f9 01       	movw	r30, r18
     77e:	10 82       	st	Z, r1
     780:	0f 91       	pop	r16
     782:	ef 90       	pop	r14
     784:	df 90       	pop	r13
     786:	cf 90       	pop	r12
     788:	08 95       	ret
     78a:	80 17       	cp	r24, r16
     78c:	b9 f3       	breq	.-18     	; 0x77c <pgm_copystring+0x42>
     78e:	2f 5f       	subi	r18, 0xFF	; 255
     790:	3f 4f       	sbci	r19, 0xFF	; 255
     792:	f9 01       	movw	r30, r18
     794:	31 97       	sbiw	r30, 0x01	; 1
     796:	60 83       	st	Z, r22
     798:	8f 5f       	subi	r24, 0xFF	; 255
     79a:	f6 01       	movw	r30, r12
     79c:	5e 2d       	mov	r21, r14
     79e:	0e 94 eb 84 	call	0x109d6	; 0x109d6 <__xload_1>
     7a2:	9f ef       	ldi	r25, 0xFF	; 255
     7a4:	c9 1a       	sub	r12, r25
     7a6:	d9 0a       	sbc	r13, r25
     7a8:	e9 0a       	sbc	r14, r25
     7aa:	e6 cf       	rjmp	.-52     	; 0x778 <pgm_copystring+0x3e>

000007ac <strftime>:
     7ac:	2f 92       	push	r2
     7ae:	3f 92       	push	r3
     7b0:	4f 92       	push	r4
     7b2:	5f 92       	push	r5
     7b4:	6f 92       	push	r6
     7b6:	7f 92       	push	r7
     7b8:	8f 92       	push	r8
     7ba:	9f 92       	push	r9
     7bc:	af 92       	push	r10
     7be:	bf 92       	push	r11
     7c0:	cf 92       	push	r12
     7c2:	df 92       	push	r13
     7c4:	ef 92       	push	r14
     7c6:	ff 92       	push	r15
     7c8:	0f 93       	push	r16
     7ca:	1f 93       	push	r17
     7cc:	cf 93       	push	r28
     7ce:	df 93       	push	r29
     7d0:	cd b7       	in	r28, 0x3d	; 61
     7d2:	de b7       	in	r29, 0x3e	; 62
     7d4:	a2 97       	sbiw	r28, 0x22	; 34
     7d6:	cd bf       	out	0x3d, r28	; 61
     7d8:	de bf       	out	0x3e, r29	; 62
     7da:	2c 01       	movw	r4, r24
     7dc:	69 a3       	std	Y+33, r22	; 0x21
     7de:	7a a3       	std	Y+34, r23	; 0x22
     7e0:	4a 01       	movw	r8, r20
     7e2:	79 01       	movw	r14, r18
     7e4:	61 2c       	mov	r6, r1
     7e6:	71 2c       	mov	r7, r1
     7e8:	9e 01       	movw	r18, r28
     7ea:	2f 5f       	subi	r18, 0xFF	; 255
     7ec:	3f 4f       	sbci	r19, 0xFF	; 255
     7ee:	69 01       	movw	r12, r18
     7f0:	84 e6       	ldi	r24, 0x64	; 100
     7f2:	28 2e       	mov	r2, r24
     7f4:	31 2c       	mov	r3, r1
     7f6:	95 ea       	ldi	r25, 0xA5	; 165
     7f8:	a9 2e       	mov	r10, r25
     7fa:	94 e4       	ldi	r25, 0x44	; 68
     7fc:	b9 2e       	mov	r11, r25
     7fe:	29 a1       	ldd	r18, Y+33	; 0x21
     800:	3a a1       	ldd	r19, Y+34	; 0x22
     802:	62 16       	cp	r6, r18
     804:	73 06       	cpc	r7, r19
     806:	08 f0       	brcs	.+2      	; 0x80a <strftime+0x5e>
     808:	cd c2       	rjmp	.+1434   	; 0xda4 <strftime+0x5f8>
     80a:	d4 01       	movw	r26, r8
     80c:	8c 91       	ld	r24, X
     80e:	85 32       	cpi	r24, 0x25	; 37
     810:	09 f0       	breq	.+2      	; 0x814 <strftime+0x68>
     812:	bc c2       	rjmp	.+1400   	; 0xd8c <strftime+0x5e0>
     814:	11 96       	adiw	r26, 0x01	; 1
     816:	1c 91       	ld	r17, X
     818:	15 34       	cpi	r17, 0x45	; 69
     81a:	31 f0       	breq	.+12     	; 0x828 <strftime+0x7c>
     81c:	1f 34       	cpi	r17, 0x4F	; 79
     81e:	21 f0       	breq	.+8      	; 0x828 <strftime+0x7c>
     820:	b2 e0       	ldi	r27, 0x02	; 2
     822:	8b 0e       	add	r8, r27
     824:	91 1c       	adc	r9, r1
     826:	06 c0       	rjmp	.+12     	; 0x834 <strftime+0x88>
     828:	f4 01       	movw	r30, r8
     82a:	12 81       	ldd	r17, Z+2	; 0x02
     82c:	94 01       	movw	r18, r8
     82e:	2d 5f       	subi	r18, 0xFD	; 253
     830:	3f 4f       	sbci	r19, 0xFF	; 255
     832:	49 01       	movw	r8, r18
     834:	19 35       	cpi	r17, 0x59	; 89
     836:	09 f4       	brne	.+2      	; 0x83a <strftime+0x8e>
     838:	32 c2       	rjmp	.+1124   	; 0xc9e <strftime+0x4f2>
     83a:	0c f0       	brlt	.+2      	; 0x83e <strftime+0x92>
     83c:	60 c0       	rjmp	.+192    	; 0x8fe <strftime+0x152>
     83e:	19 34       	cpi	r17, 0x49	; 73
     840:	09 f4       	brne	.+2      	; 0x844 <strftime+0x98>
     842:	3f c1       	rjmp	.+638    	; 0xac2 <strftime+0x316>
     844:	44 f5       	brge	.+80     	; 0x896 <strftime+0xea>
     846:	13 34       	cpi	r17, 0x43	; 67
     848:	09 f4       	brne	.+2      	; 0x84c <strftime+0xa0>
     84a:	e7 c0       	rjmp	.+462    	; 0xa1a <strftime+0x26e>
     84c:	54 f4       	brge	.+20     	; 0x862 <strftime+0xb6>
     84e:	11 34       	cpi	r17, 0x41	; 65
     850:	09 f4       	brne	.+2      	; 0x854 <strftime+0xa8>
     852:	be c0       	rjmp	.+380    	; 0x9d0 <strftime+0x224>
     854:	0c f0       	brlt	.+2      	; 0x858 <strftime+0xac>
     856:	ca c0       	rjmp	.+404    	; 0x9ec <strftime+0x240>
     858:	15 32       	cpi	r17, 0x25	; 37
     85a:	09 f0       	breq	.+2      	; 0x85e <strftime+0xb2>
     85c:	74 c2       	rjmp	.+1256   	; 0xd46 <strftime+0x59a>
     85e:	19 83       	std	Y+1, r17	; 0x01
     860:	75 c2       	rjmp	.+1258   	; 0xd4c <strftime+0x5a0>
     862:	16 34       	cpi	r17, 0x46	; 70
     864:	09 f4       	brne	.+2      	; 0x868 <strftime+0xbc>
     866:	ea c0       	rjmp	.+468    	; 0xa3c <strftime+0x290>
     868:	64 f4       	brge	.+24     	; 0x882 <strftime+0xd6>
     86a:	14 34       	cpi	r17, 0x44	; 68
     86c:	09 f0       	breq	.+2      	; 0x870 <strftime+0xc4>
     86e:	6b c2       	rjmp	.+1238   	; 0xd46 <strftime+0x59a>
     870:	f7 01       	movw	r30, r14
     872:	86 81       	ldd	r24, Z+6	; 0x06
     874:	97 81       	ldd	r25, Z+7	; 0x07
     876:	b1 01       	movw	r22, r2
     878:	0e 94 2a 7d 	call	0xfa54	; 0xfa54 <__divmodhi4>
     87c:	9f 93       	push	r25
     87e:	8f 93       	push	r24
     880:	e7 c1       	rjmp	.+974    	; 0xc50 <strftime+0x4a4>
     882:	17 34       	cpi	r17, 0x47	; 71
     884:	09 f4       	brne	.+2      	; 0x888 <strftime+0xdc>
     886:	f8 c0       	rjmp	.+496    	; 0xa78 <strftime+0x2cc>
     888:	18 34       	cpi	r17, 0x48	; 72
     88a:	09 f0       	breq	.+2      	; 0x88e <strftime+0xe2>
     88c:	5c c2       	rjmp	.+1208   	; 0xd46 <strftime+0x59a>
     88e:	d7 01       	movw	r26, r14
     890:	12 96       	adiw	r26, 0x02	; 2
     892:	8c 91       	ld	r24, X
     894:	30 c1       	rjmp	.+608    	; 0xaf6 <strftime+0x34a>
     896:	14 35       	cpi	r17, 0x54	; 84
     898:	09 f4       	brne	.+2      	; 0x89c <strftime+0xf0>
     89a:	89 c1       	rjmp	.+786    	; 0xbae <strftime+0x402>
     89c:	64 f4       	brge	.+24     	; 0x8b6 <strftime+0x10a>
     89e:	12 35       	cpi	r17, 0x52	; 82
     8a0:	09 f4       	brne	.+2      	; 0x8a4 <strftime+0xf8>
     8a2:	6e c1       	rjmp	.+732    	; 0xb80 <strftime+0x3d4>
     8a4:	0c f0       	brlt	.+2      	; 0x8a8 <strftime+0xfc>
     8a6:	25 c1       	rjmp	.+586    	; 0xaf2 <strftime+0x346>
     8a8:	1d 34       	cpi	r17, 0x4D	; 77
     8aa:	09 f0       	breq	.+2      	; 0x8ae <strftime+0x102>
     8ac:	4c c2       	rjmp	.+1176   	; 0xd46 <strftime+0x59a>
     8ae:	d7 01       	movw	r26, r14
     8b0:	11 96       	adiw	r26, 0x01	; 1
     8b2:	8c 91       	ld	r24, X
     8b4:	20 c1       	rjmp	.+576    	; 0xaf6 <strftime+0x34a>
     8b6:	16 35       	cpi	r17, 0x56	; 86
     8b8:	09 f4       	brne	.+2      	; 0x8bc <strftime+0x110>
     8ba:	a5 c1       	rjmp	.+842    	; 0xc06 <strftime+0x45a>
     8bc:	0c f4       	brge	.+2      	; 0x8c0 <strftime+0x114>
     8be:	a1 c1       	rjmp	.+834    	; 0xc02 <strftime+0x456>
     8c0:	17 35       	cpi	r17, 0x57	; 87
     8c2:	09 f4       	brne	.+2      	; 0x8c6 <strftime+0x11a>
     8c4:	b4 c1       	rjmp	.+872    	; 0xc2e <strftime+0x482>
     8c6:	18 35       	cpi	r17, 0x58	; 88
     8c8:	09 f0       	breq	.+2      	; 0x8cc <strftime+0x120>
     8ca:	3d c2       	rjmp	.+1146   	; 0xd46 <strftime+0x59a>
     8cc:	f7 01       	movw	r30, r14
     8ce:	80 81       	ld	r24, Z
     8d0:	28 2f       	mov	r18, r24
     8d2:	08 2e       	mov	r0, r24
     8d4:	00 0c       	add	r0, r0
     8d6:	33 0b       	sbc	r19, r19
     8d8:	3f 93       	push	r19
     8da:	8f 93       	push	r24
     8dc:	81 81       	ldd	r24, Z+1	; 0x01
     8de:	28 2f       	mov	r18, r24
     8e0:	08 2e       	mov	r0, r24
     8e2:	00 0c       	add	r0, r0
     8e4:	33 0b       	sbc	r19, r19
     8e6:	3f 93       	push	r19
     8e8:	8f 93       	push	r24
     8ea:	82 81       	ldd	r24, Z+2	; 0x02
     8ec:	28 2f       	mov	r18, r24
     8ee:	08 2e       	mov	r0, r24
     8f0:	00 0c       	add	r0, r0
     8f2:	33 0b       	sbc	r19, r19
     8f4:	3f 93       	push	r19
     8f6:	8f 93       	push	r24
     8f8:	8d ee       	ldi	r24, 0xED	; 237
     8fa:	94 e4       	ldi	r25, 0x44	; 68
     8fc:	c0 c1       	rjmp	.+896    	; 0xc7e <strftime+0x4d2>
     8fe:	1d 36       	cpi	r17, 0x6D	; 109
     900:	09 f4       	brne	.+2      	; 0x904 <strftime+0x158>
     902:	f0 c0       	rjmp	.+480    	; 0xae4 <strftime+0x338>
     904:	ac f5       	brge	.+106    	; 0x970 <strftime+0x1c4>
     906:	14 36       	cpi	r17, 0x64	; 100
     908:	09 f4       	brne	.+2      	; 0x90c <strftime+0x160>
     90a:	94 c0       	rjmp	.+296    	; 0xa34 <strftime+0x288>
     90c:	74 f4       	brge	.+28     	; 0x92a <strftime+0x17e>
     90e:	12 36       	cpi	r17, 0x62	; 98
     910:	09 f4       	brne	.+2      	; 0x914 <strftime+0x168>
     912:	66 c0       	rjmp	.+204    	; 0x9e0 <strftime+0x234>
     914:	0c f0       	brlt	.+2      	; 0x918 <strftime+0x16c>
     916:	75 c0       	rjmp	.+234    	; 0xa02 <strftime+0x256>
     918:	11 36       	cpi	r17, 0x61	; 97
     91a:	09 f0       	breq	.+2      	; 0x91e <strftime+0x172>
     91c:	14 c2       	rjmp	.+1064   	; 0xd46 <strftime+0x59a>
     91e:	03 e0       	ldi	r16, 0x03	; 3
     920:	96 01       	movw	r18, r12
     922:	d7 01       	movw	r26, r14
     924:	14 96       	adiw	r26, 0x04	; 4
     926:	4c 91       	ld	r20, X
     928:	57 c0       	rjmp	.+174    	; 0x9d8 <strftime+0x22c>
     92a:	17 36       	cpi	r17, 0x67	; 103
     92c:	09 f4       	brne	.+2      	; 0x930 <strftime+0x184>
     92e:	a4 c0       	rjmp	.+328    	; 0xa78 <strftime+0x2cc>
     930:	74 f4       	brge	.+28     	; 0x94e <strftime+0x1a2>
     932:	15 36       	cpi	r17, 0x65	; 101
     934:	09 f0       	breq	.+2      	; 0x938 <strftime+0x18c>
     936:	07 c2       	rjmp	.+1038   	; 0xd46 <strftime+0x59a>
     938:	f7 01       	movw	r30, r14
     93a:	83 81       	ldd	r24, Z+3	; 0x03
     93c:	28 2f       	mov	r18, r24
     93e:	08 2e       	mov	r0, r24
     940:	00 0c       	add	r0, r0
     942:	33 0b       	sbc	r19, r19
     944:	3f 93       	push	r19
     946:	8f 93       	push	r24
     948:	8a ea       	ldi	r24, 0xAA	; 170
     94a:	94 e4       	ldi	r25, 0x44	; 68
     94c:	c8 c0       	rjmp	.+400    	; 0xade <strftime+0x332>
     94e:	18 36       	cpi	r17, 0x68	; 104
     950:	09 f4       	brne	.+2      	; 0x954 <strftime+0x1a8>
     952:	46 c0       	rjmp	.+140    	; 0x9e0 <strftime+0x234>
     954:	1a 36       	cpi	r17, 0x6A	; 106
     956:	09 f0       	breq	.+2      	; 0x95a <strftime+0x1ae>
     958:	f6 c1       	rjmp	.+1004   	; 0xd46 <strftime+0x59a>
     95a:	d7 01       	movw	r26, r14
     95c:	18 96       	adiw	r26, 0x08	; 8
     95e:	8d 91       	ld	r24, X+
     960:	9c 91       	ld	r25, X
     962:	19 97       	sbiw	r26, 0x09	; 9
     964:	01 96       	adiw	r24, 0x01	; 1
     966:	9f 93       	push	r25
     968:	8f 93       	push	r24
     96a:	80 ec       	ldi	r24, 0xC0	; 192
     96c:	94 e4       	ldi	r25, 0x44	; 68
     96e:	b7 c0       	rjmp	.+366    	; 0xade <strftime+0x332>
     970:	15 37       	cpi	r17, 0x75	; 117
     972:	09 f4       	brne	.+2      	; 0x976 <strftime+0x1ca>
     974:	35 c1       	rjmp	.+618    	; 0xbe0 <strftime+0x434>
     976:	b4 f4       	brge	.+44     	; 0x9a4 <strftime+0x1f8>
     978:	10 37       	cpi	r17, 0x70	; 112
     97a:	09 f4       	brne	.+2      	; 0x97e <strftime+0x1d2>
     97c:	c2 c0       	rjmp	.+388    	; 0xb02 <strftime+0x356>
     97e:	34 f4       	brge	.+12     	; 0x98c <strftime+0x1e0>
     980:	1e 36       	cpi	r17, 0x6E	; 110
     982:	09 f0       	breq	.+2      	; 0x986 <strftime+0x1da>
     984:	e0 c1       	rjmp	.+960    	; 0xd46 <strftime+0x59a>
     986:	8a e0       	ldi	r24, 0x0A	; 10
     988:	89 83       	std	Y+1, r24	; 0x01
     98a:	e0 c1       	rjmp	.+960    	; 0xd4c <strftime+0x5a0>
     98c:	12 37       	cpi	r17, 0x72	; 114
     98e:	09 f4       	brne	.+2      	; 0x992 <strftime+0x1e6>
     990:	c6 c0       	rjmp	.+396    	; 0xb1e <strftime+0x372>
     992:	14 37       	cpi	r17, 0x74	; 116
     994:	09 f0       	breq	.+2      	; 0x998 <strftime+0x1ec>
     996:	d7 c1       	rjmp	.+942    	; 0xd46 <strftime+0x59a>
     998:	66 ed       	ldi	r22, 0xD6	; 214
     99a:	74 e4       	ldi	r23, 0x44	; 68
     99c:	c6 01       	movw	r24, r12
     99e:	0e 94 1d 84 	call	0x1083a	; 0x1083a <strcpy>
     9a2:	d4 c1       	rjmp	.+936    	; 0xd4c <strftime+0x5a0>
     9a4:	18 37       	cpi	r17, 0x78	; 120
     9a6:	09 f4       	brne	.+2      	; 0x9aa <strftime+0x1fe>
     9a8:	48 c1       	rjmp	.+656    	; 0xc3a <strftime+0x48e>
     9aa:	5c f4       	brge	.+22     	; 0x9c2 <strftime+0x216>
     9ac:	17 37       	cpi	r17, 0x77	; 119
     9ae:	09 f0       	breq	.+2      	; 0x9b2 <strftime+0x206>
     9b0:	ca c1       	rjmp	.+916    	; 0xd46 <strftime+0x59a>
     9b2:	f7 01       	movw	r30, r14
     9b4:	84 81       	ldd	r24, Z+4	; 0x04
     9b6:	28 2f       	mov	r18, r24
     9b8:	08 2e       	mov	r0, r24
     9ba:	00 0c       	add	r0, r0
     9bc:	33 0b       	sbc	r19, r19
     9be:	3f 93       	push	r19
     9c0:	74 c1       	rjmp	.+744    	; 0xcaa <strftime+0x4fe>
     9c2:	19 37       	cpi	r17, 0x79	; 121
     9c4:	09 f4       	brne	.+2      	; 0x9c8 <strftime+0x21c>
     9c6:	5e c1       	rjmp	.+700    	; 0xc84 <strftime+0x4d8>
     9c8:	1a 37       	cpi	r17, 0x7A	; 122
     9ca:	09 f4       	brne	.+2      	; 0x9ce <strftime+0x222>
     9cc:	7e c1       	rjmp	.+764    	; 0xcca <strftime+0x51e>
     9ce:	bb c1       	rjmp	.+886    	; 0xd46 <strftime+0x59a>
     9d0:	0f ef       	ldi	r16, 0xFF	; 255
     9d2:	96 01       	movw	r18, r12
     9d4:	f7 01       	movw	r30, r14
     9d6:	44 81       	ldd	r20, Z+4	; 0x04
     9d8:	6d e5       	ldi	r22, 0x5D	; 93
     9da:	75 e0       	ldi	r23, 0x05	; 5
     9dc:	80 e0       	ldi	r24, 0x00	; 0
     9de:	0d c0       	rjmp	.+26     	; 0x9fa <strftime+0x24e>
     9e0:	03 e0       	ldi	r16, 0x03	; 3
     9e2:	96 01       	movw	r18, r12
     9e4:	d7 01       	movw	r26, r14
     9e6:	15 96       	adiw	r26, 0x05	; 5
     9e8:	4c 91       	ld	r20, X
     9ea:	04 c0       	rjmp	.+8      	; 0x9f4 <strftime+0x248>
     9ec:	0f ef       	ldi	r16, 0xFF	; 255
     9ee:	96 01       	movw	r18, r12
     9f0:	f7 01       	movw	r30, r14
     9f2:	45 81       	ldd	r20, Z+5	; 0x05
     9f4:	66 e0       	ldi	r22, 0x06	; 6
     9f6:	75 e0       	ldi	r23, 0x05	; 5
     9f8:	80 e0       	ldi	r24, 0x00	; 0
     9fa:	0e 94 9d 03 	call	0x73a	; 0x73a <pgm_copystring>
     9fe:	90 e0       	ldi	r25, 0x00	; 0
     a00:	a7 c1       	rjmp	.+846    	; 0xd50 <strftime+0x5a4>
     a02:	b6 01       	movw	r22, r12
     a04:	c7 01       	movw	r24, r14
     a06:	0e 94 39 07 	call	0xe72	; 0xe72 <asctime_r>
     a0a:	f6 01       	movw	r30, r12
     a0c:	cf 01       	movw	r24, r30
     a0e:	8c 19       	sub	r24, r12
     a10:	9d 09       	sbc	r25, r13
     a12:	21 91       	ld	r18, Z+
     a14:	21 11       	cpse	r18, r1
     a16:	fa cf       	rjmp	.-12     	; 0xa0c <strftime+0x260>
     a18:	9b c1       	rjmp	.+822    	; 0xd50 <strftime+0x5a4>
     a1a:	d7 01       	movw	r26, r14
     a1c:	16 96       	adiw	r26, 0x06	; 6
     a1e:	8d 91       	ld	r24, X+
     a20:	9c 91       	ld	r25, X
     a22:	17 97       	sbiw	r26, 0x07	; 7
     a24:	84 59       	subi	r24, 0x94	; 148
     a26:	98 4f       	sbci	r25, 0xF8	; 248
     a28:	b1 01       	movw	r22, r2
     a2a:	0e 94 2a 7d 	call	0xfa54	; 0xfa54 <__divmodhi4>
     a2e:	7f 93       	push	r23
     a30:	6f 93       	push	r22
     a32:	3b c0       	rjmp	.+118    	; 0xaaa <strftime+0x2fe>
     a34:	d7 01       	movw	r26, r14
     a36:	13 96       	adiw	r26, 0x03	; 3
     a38:	8c 91       	ld	r24, X
     a3a:	5d c0       	rjmp	.+186    	; 0xaf6 <strftime+0x34a>
     a3c:	d7 01       	movw	r26, r14
     a3e:	13 96       	adiw	r26, 0x03	; 3
     a40:	8c 91       	ld	r24, X
     a42:	13 97       	sbiw	r26, 0x03	; 3
     a44:	28 2f       	mov	r18, r24
     a46:	08 2e       	mov	r0, r24
     a48:	00 0c       	add	r0, r0
     a4a:	33 0b       	sbc	r19, r19
     a4c:	3f 93       	push	r19
     a4e:	8f 93       	push	r24
     a50:	15 96       	adiw	r26, 0x05	; 5
     a52:	8c 91       	ld	r24, X
     a54:	15 97       	sbiw	r26, 0x05	; 5
     a56:	08 2e       	mov	r0, r24
     a58:	00 0c       	add	r0, r0
     a5a:	99 0b       	sbc	r25, r25
     a5c:	01 96       	adiw	r24, 0x01	; 1
     a5e:	9f 93       	push	r25
     a60:	8f 93       	push	r24
     a62:	16 96       	adiw	r26, 0x06	; 6
     a64:	8d 91       	ld	r24, X+
     a66:	9c 91       	ld	r25, X
     a68:	17 97       	sbiw	r26, 0x07	; 7
     a6a:	84 59       	subi	r24, 0x94	; 148
     a6c:	98 4f       	sbci	r25, 0xF8	; 248
     a6e:	9f 93       	push	r25
     a70:	8f 93       	push	r24
     a72:	8e ea       	ldi	r24, 0xAE	; 174
     a74:	94 e4       	ldi	r25, 0x44	; 68
     a76:	03 c1       	rjmp	.+518    	; 0xc7e <strftime+0x4d2>
     a78:	d7 01       	movw	r26, r14
     a7a:	18 96       	adiw	r26, 0x08	; 8
     a7c:	6d 91       	ld	r22, X+
     a7e:	7c 91       	ld	r23, X
     a80:	19 97       	sbiw	r26, 0x09	; 9
     a82:	16 96       	adiw	r26, 0x06	; 6
     a84:	8d 91       	ld	r24, X+
     a86:	9c 91       	ld	r25, X
     a88:	17 97       	sbiw	r26, 0x07	; 7
     a8a:	ae 01       	movw	r20, r28
     a8c:	45 5e       	subi	r20, 0xE5	; 229
     a8e:	5f 4f       	sbci	r21, 0xFF	; 255
     a90:	84 59       	subi	r24, 0x94	; 148
     a92:	98 4f       	sbci	r25, 0xF8	; 248
     a94:	0e 94 92 08 	call	0x1124	; 0x1124 <iso_week_date_r>
     a98:	17 36       	cpi	r17, 0x67	; 103
     a9a:	51 f4       	brne	.+20     	; 0xab0 <strftime+0x304>
     a9c:	8b 8d       	ldd	r24, Y+27	; 0x1b
     a9e:	9c 8d       	ldd	r25, Y+28	; 0x1c
     aa0:	b1 01       	movw	r22, r2
     aa2:	0e 94 2a 7d 	call	0xfa54	; 0xfa54 <__divmodhi4>
     aa6:	9f 93       	push	r25
     aa8:	8f 93       	push	r24
     aaa:	e6 eb       	ldi	r30, 0xB6	; 182
     aac:	f4 e4       	ldi	r31, 0x44	; 68
     aae:	a6 c0       	rjmp	.+332    	; 0xbfc <strftime+0x450>
     ab0:	8c 8d       	ldd	r24, Y+28	; 0x1c
     ab2:	8f 93       	push	r24
     ab4:	8b 8d       	ldd	r24, Y+27	; 0x1b
     ab6:	8f 93       	push	r24
     ab8:	4b eb       	ldi	r20, 0xBB	; 187
     aba:	54 e4       	ldi	r21, 0x44	; 68
     abc:	5f 93       	push	r21
     abe:	4f 93       	push	r20
     ac0:	f9 c0       	rjmp	.+498    	; 0xcb4 <strftime+0x508>
     ac2:	f7 01       	movw	r30, r14
     ac4:	82 81       	ldd	r24, Z+2	; 0x02
     ac6:	6c e0       	ldi	r22, 0x0C	; 12
     ac8:	0e 94 dd 84 	call	0x109ba	; 0x109ba <__divmodqi4>
     acc:	99 23       	and	r25, r25
     ace:	21 f0       	breq	.+8      	; 0xad8 <strftime+0x32c>
     ad0:	89 2f       	mov	r24, r25
     ad2:	99 0f       	add	r25, r25
     ad4:	99 0b       	sbc	r25, r25
     ad6:	de c0       	rjmp	.+444    	; 0xc94 <strftime+0x4e8>
     ad8:	8c e0       	ldi	r24, 0x0C	; 12
     ada:	90 e0       	ldi	r25, 0x00	; 0
     adc:	db c0       	rjmp	.+438    	; 0xc94 <strftime+0x4e8>
     ade:	9f 93       	push	r25
     ae0:	8f 93       	push	r24
     ae2:	e8 c0       	rjmp	.+464    	; 0xcb4 <strftime+0x508>
     ae4:	f7 01       	movw	r30, r14
     ae6:	85 81       	ldd	r24, Z+5	; 0x05
     ae8:	08 2e       	mov	r0, r24
     aea:	00 0c       	add	r0, r0
     aec:	99 0b       	sbc	r25, r25
     aee:	01 96       	adiw	r24, 0x01	; 1
     af0:	d1 c0       	rjmp	.+418    	; 0xc94 <strftime+0x4e8>
     af2:	d7 01       	movw	r26, r14
     af4:	8c 91       	ld	r24, X
     af6:	28 2f       	mov	r18, r24
     af8:	08 2e       	mov	r0, r24
     afa:	00 0c       	add	r0, r0
     afc:	33 0b       	sbc	r19, r19
     afe:	3f 93       	push	r19
     b00:	ca c0       	rjmp	.+404    	; 0xc96 <strftime+0x4ea>
     b02:	81 e4       	ldi	r24, 0x41	; 65
     b04:	89 83       	std	Y+1, r24	; 0x01
     b06:	f7 01       	movw	r30, r14
     b08:	82 81       	ldd	r24, Z+2	; 0x02
     b0a:	8c 30       	cpi	r24, 0x0C	; 12
     b0c:	14 f0       	brlt	.+4      	; 0xb12 <strftime+0x366>
     b0e:	80 e5       	ldi	r24, 0x50	; 80
     b10:	89 83       	std	Y+1, r24	; 0x01
     b12:	8d e4       	ldi	r24, 0x4D	; 77
     b14:	8a 83       	std	Y+2, r24	; 0x02
     b16:	1b 82       	std	Y+3, r1	; 0x03
     b18:	82 e0       	ldi	r24, 0x02	; 2
     b1a:	90 e0       	ldi	r25, 0x00	; 0
     b1c:	19 c1       	rjmp	.+562    	; 0xd50 <strftime+0x5a4>
     b1e:	d7 01       	movw	r26, r14
     b20:	12 96       	adiw	r26, 0x02	; 2
     b22:	8c 91       	ld	r24, X
     b24:	6c e0       	ldi	r22, 0x0C	; 12
     b26:	0e 94 dd 84 	call	0x109ba	; 0x109ba <__divmodqi4>
     b2a:	99 23       	and	r25, r25
     b2c:	21 f0       	breq	.+8      	; 0xb36 <strftime+0x38a>
     b2e:	89 2f       	mov	r24, r25
     b30:	99 0f       	add	r25, r25
     b32:	99 0b       	sbc	r25, r25
     b34:	02 c0       	rjmp	.+4      	; 0xb3a <strftime+0x38e>
     b36:	8c e0       	ldi	r24, 0x0C	; 12
     b38:	90 e0       	ldi	r25, 0x00	; 0
     b3a:	f7 01       	movw	r30, r14
     b3c:	20 81       	ld	r18, Z
     b3e:	42 2f       	mov	r20, r18
     b40:	02 2e       	mov	r0, r18
     b42:	00 0c       	add	r0, r0
     b44:	55 0b       	sbc	r21, r21
     b46:	5f 93       	push	r21
     b48:	2f 93       	push	r18
     b4a:	21 81       	ldd	r18, Z+1	; 0x01
     b4c:	42 2f       	mov	r20, r18
     b4e:	02 2e       	mov	r0, r18
     b50:	00 0c       	add	r0, r0
     b52:	55 0b       	sbc	r21, r21
     b54:	5f 93       	push	r21
     b56:	2f 93       	push	r18
     b58:	9f 93       	push	r25
     b5a:	8f 93       	push	r24
     b5c:	25 ec       	ldi	r18, 0xC5	; 197
     b5e:	34 e4       	ldi	r19, 0x44	; 68
     b60:	3f 93       	push	r19
     b62:	2f 93       	push	r18
     b64:	df 92       	push	r13
     b66:	cf 92       	push	r12
     b68:	0e 94 99 7f 	call	0xff32	; 0xff32 <sprintf>
     b6c:	cd bf       	out	0x3d, r28	; 61
     b6e:	de bf       	out	0x3e, r29	; 62
     b70:	f7 01       	movw	r30, r14
     b72:	22 81       	ldd	r18, Z+2	; 0x02
     b74:	2c 30       	cpi	r18, 0x0C	; 12
     b76:	0c f4       	brge	.+2      	; 0xb7a <strftime+0x3ce>
     b78:	eb c0       	rjmp	.+470    	; 0xd50 <strftime+0x5a4>
     b7a:	20 e5       	ldi	r18, 0x50	; 80
     b7c:	2b 87       	std	Y+11, r18	; 0x0b
     b7e:	e8 c0       	rjmp	.+464    	; 0xd50 <strftime+0x5a4>
     b80:	d7 01       	movw	r26, r14
     b82:	11 96       	adiw	r26, 0x01	; 1
     b84:	8c 91       	ld	r24, X
     b86:	11 97       	sbiw	r26, 0x01	; 1
     b88:	28 2f       	mov	r18, r24
     b8a:	08 2e       	mov	r0, r24
     b8c:	00 0c       	add	r0, r0
     b8e:	33 0b       	sbc	r19, r19
     b90:	3f 93       	push	r19
     b92:	8f 93       	push	r24
     b94:	12 96       	adiw	r26, 0x02	; 2
     b96:	8c 91       	ld	r24, X
     b98:	28 2f       	mov	r18, r24
     b9a:	08 2e       	mov	r0, r24
     b9c:	00 0c       	add	r0, r0
     b9e:	33 0b       	sbc	r19, r19
     ba0:	3f 93       	push	r19
     ba2:	8f 93       	push	r24
     ba4:	8d ed       	ldi	r24, 0xDD	; 221
     ba6:	94 e4       	ldi	r25, 0x44	; 68
     ba8:	9f 93       	push	r25
     baa:	8f 93       	push	r24
     bac:	c5 c0       	rjmp	.+394    	; 0xd38 <strftime+0x58c>
     bae:	f7 01       	movw	r30, r14
     bb0:	80 81       	ld	r24, Z
     bb2:	28 2f       	mov	r18, r24
     bb4:	08 2e       	mov	r0, r24
     bb6:	00 0c       	add	r0, r0
     bb8:	33 0b       	sbc	r19, r19
     bba:	3f 93       	push	r19
     bbc:	8f 93       	push	r24
     bbe:	81 81       	ldd	r24, Z+1	; 0x01
     bc0:	28 2f       	mov	r18, r24
     bc2:	08 2e       	mov	r0, r24
     bc4:	00 0c       	add	r0, r0
     bc6:	33 0b       	sbc	r19, r19
     bc8:	3f 93       	push	r19
     bca:	8f 93       	push	r24
     bcc:	82 81       	ldd	r24, Z+2	; 0x02
     bce:	28 2f       	mov	r18, r24
     bd0:	08 2e       	mov	r0, r24
     bd2:	00 0c       	add	r0, r0
     bd4:	33 0b       	sbc	r19, r19
     bd6:	3f 93       	push	r19
     bd8:	8f 93       	push	r24
     bda:	88 ed       	ldi	r24, 0xD8	; 216
     bdc:	94 e4       	ldi	r25, 0x44	; 68
     bde:	4f c0       	rjmp	.+158    	; 0xc7e <strftime+0x4d2>
     be0:	d7 01       	movw	r26, r14
     be2:	14 96       	adiw	r26, 0x04	; 4
     be4:	8c 91       	ld	r24, X
     be6:	08 2e       	mov	r0, r24
     be8:	00 0c       	add	r0, r0
     bea:	99 0b       	sbc	r25, r25
     bec:	00 97       	sbiw	r24, 0x00	; 0
     bee:	11 f4       	brne	.+4      	; 0xbf4 <strftime+0x448>
     bf0:	87 e0       	ldi	r24, 0x07	; 7
     bf2:	90 e0       	ldi	r25, 0x00	; 0
     bf4:	9f 93       	push	r25
     bf6:	8f 93       	push	r24
     bf8:	e7 ee       	ldi	r30, 0xE7	; 231
     bfa:	f4 e4       	ldi	r31, 0x44	; 68
     bfc:	ff 93       	push	r31
     bfe:	ef 93       	push	r30
     c00:	59 c0       	rjmp	.+178    	; 0xcb4 <strftime+0x508>
     c02:	60 e0       	ldi	r22, 0x00	; 0
     c04:	15 c0       	rjmp	.+42     	; 0xc30 <strftime+0x484>
     c06:	d7 01       	movw	r26, r14
     c08:	18 96       	adiw	r26, 0x08	; 8
     c0a:	6d 91       	ld	r22, X+
     c0c:	7c 91       	ld	r23, X
     c0e:	19 97       	sbiw	r26, 0x09	; 9
     c10:	16 96       	adiw	r26, 0x06	; 6
     c12:	8d 91       	ld	r24, X+
     c14:	9c 91       	ld	r25, X
     c16:	17 97       	sbiw	r26, 0x07	; 7
     c18:	ae 01       	movw	r20, r28
     c1a:	45 5e       	subi	r20, 0xE5	; 229
     c1c:	5f 4f       	sbci	r21, 0xFF	; 255
     c1e:	84 59       	subi	r24, 0x94	; 148
     c20:	98 4f       	sbci	r25, 0xF8	; 248
     c22:	0e 94 92 08 	call	0x1124	; 0x1124 <iso_week_date_r>
     c26:	8e 8d       	ldd	r24, Y+30	; 0x1e
     c28:	8f 93       	push	r24
     c2a:	8d 8d       	ldd	r24, Y+29	; 0x1d
     c2c:	34 c0       	rjmp	.+104    	; 0xc96 <strftime+0x4ea>
     c2e:	61 e0       	ldi	r22, 0x01	; 1
     c30:	c7 01       	movw	r24, r14
     c32:	0e 94 fe 06 	call	0xdfc	; 0xdfc <week_of_year>
     c36:	1f 92       	push	r1
     c38:	2e c0       	rjmp	.+92     	; 0xc96 <strftime+0x4ea>
     c3a:	d7 01       	movw	r26, r14
     c3c:	16 96       	adiw	r26, 0x06	; 6
     c3e:	8d 91       	ld	r24, X+
     c40:	9c 91       	ld	r25, X
     c42:	17 97       	sbiw	r26, 0x07	; 7
     c44:	b1 01       	movw	r22, r2
     c46:	0e 94 2a 7d 	call	0xfa54	; 0xfa54 <__divmodhi4>
     c4a:	9f 93       	push	r25
     c4c:	8f 93       	push	r24
     c4e:	f7 01       	movw	r30, r14
     c50:	83 81       	ldd	r24, Z+3	; 0x03
     c52:	28 2f       	mov	r18, r24
     c54:	08 2e       	mov	r0, r24
     c56:	00 0c       	add	r0, r0
     c58:	33 0b       	sbc	r19, r19
     c5a:	3f 93       	push	r19
     c5c:	8f 93       	push	r24
     c5e:	85 81       	ldd	r24, Z+5	; 0x05
     c60:	08 2e       	mov	r0, r24
     c62:	00 0c       	add	r0, r0
     c64:	99 0b       	sbc	r25, r25
     c66:	01 96       	adiw	r24, 0x01	; 1
     c68:	9f 93       	push	r25
     c6a:	8f 93       	push	r24
     c6c:	2b e9       	ldi	r18, 0x9B	; 155
     c6e:	34 e4       	ldi	r19, 0x44	; 68
     c70:	3f 93       	push	r19
     c72:	2f 93       	push	r18
     c74:	df 92       	push	r13
     c76:	cf 92       	push	r12
     c78:	0e 94 99 7f 	call	0xff32	; 0xff32 <sprintf>
     c7c:	61 c0       	rjmp	.+194    	; 0xd40 <strftime+0x594>
     c7e:	9f 93       	push	r25
     c80:	8f 93       	push	r24
     c82:	f8 cf       	rjmp	.-16     	; 0xc74 <strftime+0x4c8>
     c84:	d7 01       	movw	r26, r14
     c86:	16 96       	adiw	r26, 0x06	; 6
     c88:	8d 91       	ld	r24, X+
     c8a:	9c 91       	ld	r25, X
     c8c:	17 97       	sbiw	r26, 0x07	; 7
     c8e:	b1 01       	movw	r22, r2
     c90:	0e 94 2a 7d 	call	0xfa54	; 0xfa54 <__divmodhi4>
     c94:	9f 93       	push	r25
     c96:	8f 93       	push	r24
     c98:	bf 92       	push	r11
     c9a:	af 92       	push	r10
     c9c:	0b c0       	rjmp	.+22     	; 0xcb4 <strftime+0x508>
     c9e:	f7 01       	movw	r30, r14
     ca0:	86 81       	ldd	r24, Z+6	; 0x06
     ca2:	97 81       	ldd	r25, Z+7	; 0x07
     ca4:	84 59       	subi	r24, 0x94	; 148
     ca6:	98 4f       	sbci	r25, 0xF8	; 248
     ca8:	9f 93       	push	r25
     caa:	8f 93       	push	r24
     cac:	2a ee       	ldi	r18, 0xEA	; 234
     cae:	34 e4       	ldi	r19, 0x44	; 68
     cb0:	3f 93       	push	r19
     cb2:	2f 93       	push	r18
     cb4:	df 92       	push	r13
     cb6:	cf 92       	push	r12
     cb8:	0e 94 99 7f 	call	0xff32	; 0xff32 <sprintf>
     cbc:	0f 90       	pop	r0
     cbe:	0f 90       	pop	r0
     cc0:	0f 90       	pop	r0
     cc2:	0f 90       	pop	r0
     cc4:	0f 90       	pop	r0
     cc6:	0f 90       	pop	r0
     cc8:	43 c0       	rjmp	.+134    	; 0xd50 <strftime+0x5a4>
     cca:	60 91 f7 49 	lds	r22, 0x49F7	; 0x8049f7 <__utc_offset>
     cce:	70 91 f8 49 	lds	r23, 0x49F8	; 0x8049f8 <__utc_offset+0x1>
     cd2:	80 91 f9 49 	lds	r24, 0x49F9	; 0x8049f9 <__utc_offset+0x2>
     cd6:	90 91 fa 49 	lds	r25, 0x49FA	; 0x8049fa <__utc_offset+0x3>
     cda:	2c e3       	ldi	r18, 0x3C	; 60
     cdc:	30 e0       	ldi	r19, 0x00	; 0
     cde:	40 e0       	ldi	r20, 0x00	; 0
     ce0:	50 e0       	ldi	r21, 0x00	; 0
     ce2:	0e 94 60 7d 	call	0xfac0	; 0xfac0 <__divmodsi4>
     ce6:	89 01       	movw	r16, r18
     ce8:	9a 01       	movw	r18, r20
     cea:	f8 01       	movw	r30, r16
     cec:	d7 01       	movw	r26, r14
     cee:	1a 96       	adiw	r26, 0x0a	; 10
     cf0:	8d 91       	ld	r24, X+
     cf2:	9c 91       	ld	r25, X
     cf4:	1b 97       	sbiw	r26, 0x0b	; 11
     cf6:	6c e3       	ldi	r22, 0x3C	; 60
     cf8:	70 e0       	ldi	r23, 0x00	; 0
     cfa:	0e 94 2a 7d 	call	0xfa54	; 0xfa54 <__divmodhi4>
     cfe:	16 16       	cp	r1, r22
     d00:	17 06       	cpc	r1, r23
     d02:	1c f4       	brge	.+6      	; 0xd0a <strftime+0x55e>
     d04:	fb 01       	movw	r30, r22
     d06:	e0 0f       	add	r30, r16
     d08:	f1 1f       	adc	r31, r17
     d0a:	cf 01       	movw	r24, r30
     d0c:	6c e3       	ldi	r22, 0x3C	; 60
     d0e:	70 e0       	ldi	r23, 0x00	; 0
     d10:	0e 94 2a 7d 	call	0xfa54	; 0xfa54 <__divmodhi4>
     d14:	97 ff       	sbrs	r25, 7
     d16:	03 c0       	rjmp	.+6      	; 0xd1e <strftime+0x572>
     d18:	91 95       	neg	r25
     d1a:	81 95       	neg	r24
     d1c:	91 09       	sbc	r25, r1
     d1e:	9f 93       	push	r25
     d20:	8f 93       	push	r24
     d22:	cf 01       	movw	r24, r30
     d24:	6c e3       	ldi	r22, 0x3C	; 60
     d26:	70 e0       	ldi	r23, 0x00	; 0
     d28:	0e 94 2a 7d 	call	0xfa54	; 0xfa54 <__divmodhi4>
     d2c:	7f 93       	push	r23
     d2e:	6f 93       	push	r22
     d30:	ec ef       	ldi	r30, 0xFC	; 252
     d32:	f4 e4       	ldi	r31, 0x44	; 68
     d34:	ff 93       	push	r31
     d36:	ef 93       	push	r30
     d38:	df 92       	push	r13
     d3a:	cf 92       	push	r12
     d3c:	0e 94 99 7f 	call	0xff32	; 0xff32 <sprintf>
     d40:	cd bf       	out	0x3d, r28	; 61
     d42:	de bf       	out	0x3e, r29	; 62
     d44:	05 c0       	rjmp	.+10     	; 0xd50 <strftime+0x5a4>
     d46:	8f e3       	ldi	r24, 0x3F	; 63
     d48:	89 83       	std	Y+1, r24	; 0x01
     d4a:	1a 82       	std	Y+2, r1	; 0x02
     d4c:	81 e0       	ldi	r24, 0x01	; 1
     d4e:	90 e0       	ldi	r25, 0x00	; 0
     d50:	93 01       	movw	r18, r6
     d52:	28 0f       	add	r18, r24
     d54:	39 1f       	adc	r19, r25
     d56:	a9 a1       	ldd	r26, Y+33	; 0x21
     d58:	ba a1       	ldd	r27, Y+34	; 0x22
     d5a:	2a 17       	cp	r18, r26
     d5c:	3b 07       	cpc	r19, r27
     d5e:	98 f4       	brcc	.+38     	; 0xd86 <strftime+0x5da>
     d60:	d2 01       	movw	r26, r4
     d62:	f6 01       	movw	r30, r12
     d64:	af 01       	movw	r20, r30
     d66:	4c 19       	sub	r20, r12
     d68:	5d 09       	sbc	r21, r13
     d6a:	48 17       	cp	r20, r24
     d6c:	59 07       	cpc	r21, r25
     d6e:	1c f4       	brge	.+6      	; 0xd76 <strftime+0x5ca>
     d70:	41 91       	ld	r20, Z+
     d72:	4d 93       	st	X+, r20
     d74:	f7 cf       	rjmp	.-18     	; 0xd64 <strftime+0x5b8>
     d76:	97 ff       	sbrs	r25, 7
     d78:	02 c0       	rjmp	.+4      	; 0xd7e <strftime+0x5d2>
     d7a:	80 e0       	ldi	r24, 0x00	; 0
     d7c:	90 e0       	ldi	r25, 0x00	; 0
     d7e:	48 0e       	add	r4, r24
     d80:	59 1e       	adc	r5, r25
     d82:	39 01       	movw	r6, r18
     d84:	3c cd       	rjmp	.-1416   	; 0x7fe <strftime+0x52>
     d86:	f2 01       	movw	r30, r4
     d88:	10 82       	st	Z, r1
     d8a:	0e c0       	rjmp	.+28     	; 0xda8 <strftime+0x5fc>
     d8c:	d2 01       	movw	r26, r4
     d8e:	8d 93       	st	X+, r24
     d90:	2d 01       	movw	r4, r26
     d92:	bf ef       	ldi	r27, 0xFF	; 255
     d94:	6b 1a       	sub	r6, r27
     d96:	7b 0a       	sbc	r7, r27
     d98:	88 23       	and	r24, r24
     d9a:	31 f0       	breq	.+12     	; 0xda8 <strftime+0x5fc>
     d9c:	ef ef       	ldi	r30, 0xFF	; 255
     d9e:	8e 1a       	sub	r8, r30
     da0:	9e 0a       	sbc	r9, r30
     da2:	2d cd       	rjmp	.-1446   	; 0x7fe <strftime+0x52>
     da4:	d2 01       	movw	r26, r4
     da6:	1c 92       	st	X, r1
     da8:	c3 01       	movw	r24, r6
     daa:	a2 96       	adiw	r28, 0x22	; 34
     dac:	cd bf       	out	0x3d, r28	; 61
     dae:	de bf       	out	0x3e, r29	; 62
     db0:	df 91       	pop	r29
     db2:	cf 91       	pop	r28
     db4:	1f 91       	pop	r17
     db6:	0f 91       	pop	r16
     db8:	ff 90       	pop	r15
     dba:	ef 90       	pop	r14
     dbc:	df 90       	pop	r13
     dbe:	cf 90       	pop	r12
     dc0:	bf 90       	pop	r11
     dc2:	af 90       	pop	r10
     dc4:	9f 90       	pop	r9
     dc6:	8f 90       	pop	r8
     dc8:	7f 90       	pop	r7
     dca:	6f 90       	pop	r6
     dcc:	5f 90       	pop	r5
     dce:	4f 90       	pop	r4
     dd0:	3f 90       	pop	r3
     dd2:	2f 90       	pop	r2
     dd4:	08 95       	ret

00000dd6 <time>:
     dd6:	fc 01       	movw	r30, r24
     dd8:	0f b6       	in	r0, 0x3f	; 63
     dda:	f8 94       	cli
     ddc:	60 91 e7 49 	lds	r22, 0x49E7	; 0x8049e7 <__system_time>
     de0:	70 91 e8 49 	lds	r23, 0x49E8	; 0x8049e8 <__system_time+0x1>
     de4:	80 91 e9 49 	lds	r24, 0x49E9	; 0x8049e9 <__system_time+0x2>
     de8:	90 91 ea 49 	lds	r25, 0x49EA	; 0x8049ea <__system_time+0x3>
     dec:	0f be       	out	0x3f, r0	; 63
     dee:	30 97       	sbiw	r30, 0x00	; 0
     df0:	21 f0       	breq	.+8      	; 0xdfa <time+0x24>
     df2:	60 83       	st	Z, r22
     df4:	71 83       	std	Z+1, r23	; 0x01
     df6:	82 83       	std	Z+2, r24	; 0x02
     df8:	93 83       	std	Z+3, r25	; 0x03
     dfa:	08 95       	ret

00000dfc <week_of_year>:
     dfc:	fc 01       	movw	r30, r24
     dfe:	20 85       	ldd	r18, Z+8	; 0x08
     e00:	31 85       	ldd	r19, Z+9	; 0x09
     e02:	c9 01       	movw	r24, r18
     e04:	07 96       	adiw	r24, 0x07	; 7
     e06:	44 81       	ldd	r20, Z+4	; 0x04
     e08:	84 1b       	sub	r24, r20
     e0a:	91 09       	sbc	r25, r1
     e0c:	47 fd       	sbrc	r20, 7
     e0e:	93 95       	inc	r25
     e10:	86 0f       	add	r24, r22
     e12:	91 1d       	adc	r25, r1
     e14:	e7 e0       	ldi	r30, 0x07	; 7
     e16:	f0 e0       	ldi	r31, 0x00	; 0
     e18:	bf 01       	movw	r22, r30
     e1a:	0e 94 2a 7d 	call	0xfa54	; 0xfa54 <__divmodhi4>
     e1e:	a9 01       	movw	r20, r18
     e20:	48 1b       	sub	r20, r24
     e22:	59 0b       	sbc	r21, r25
     e24:	ca 01       	movw	r24, r20
     e26:	57 fd       	sbrc	r21, 7
     e28:	06 c0       	rjmp	.+12     	; 0xe36 <week_of_year+0x3a>
     e2a:	bf 01       	movw	r22, r30
     e2c:	0e 94 2a 7d 	call	0xfa54	; 0xfa54 <__divmodhi4>
     e30:	81 e0       	ldi	r24, 0x01	; 1
     e32:	86 0f       	add	r24, r22
     e34:	08 95       	ret
     e36:	80 e0       	ldi	r24, 0x00	; 0
     e38:	08 95       	ret

00000e3a <system_tick>:
     e3a:	8f 93       	push	r24
     e3c:	8f b7       	in	r24, 0x3f	; 63
     e3e:	8f 93       	push	r24
     e40:	f8 94       	cli
     e42:	80 91 e7 49 	lds	r24, 0x49E7	; 0x8049e7 <__system_time>
     e46:	8f 5f       	subi	r24, 0xFF	; 255
     e48:	80 93 e7 49 	sts	0x49E7, r24	; 0x8049e7 <__system_time>
     e4c:	80 91 e8 49 	lds	r24, 0x49E8	; 0x8049e8 <__system_time+0x1>
     e50:	8f 4f       	sbci	r24, 0xFF	; 255
     e52:	80 93 e8 49 	sts	0x49E8, r24	; 0x8049e8 <__system_time+0x1>
     e56:	80 91 e9 49 	lds	r24, 0x49E9	; 0x8049e9 <__system_time+0x2>
     e5a:	8f 4f       	sbci	r24, 0xFF	; 255
     e5c:	80 93 e9 49 	sts	0x49E9, r24	; 0x8049e9 <__system_time+0x2>
     e60:	80 91 ea 49 	lds	r24, 0x49EA	; 0x8049ea <__system_time+0x3>
     e64:	8f 4f       	sbci	r24, 0xFF	; 255
     e66:	80 93 ea 49 	sts	0x49EA, r24	; 0x8049ea <__system_time+0x3>
     e6a:	8f 91       	pop	r24
     e6c:	8f bf       	out	0x3f, r24	; 63
     e6e:	8f 91       	pop	r24
     e70:	08 95       	ret

00000e72 <asctime_r>:
     e72:	cf 92       	push	r12
     e74:	df 92       	push	r13
     e76:	ef 92       	push	r14
     e78:	ff 92       	push	r15
     e7a:	0f 93       	push	r16
     e7c:	1f 93       	push	r17
     e7e:	cf 93       	push	r28
     e80:	df 93       	push	r29
     e82:	8c 01       	movw	r16, r24
     e84:	eb 01       	movw	r28, r22
     e86:	fc 01       	movw	r30, r24
     e88:	84 81       	ldd	r24, Z+4	; 0x04
     e8a:	b8 2f       	mov	r27, r24
     e8c:	bb 0f       	add	r27, r27
     e8e:	b8 0f       	add	r27, r24
     e90:	85 81       	ldd	r24, Z+5	; 0x05
     e92:	78 2f       	mov	r23, r24
     e94:	77 0f       	add	r23, r23
     e96:	78 0f       	add	r23, r24
     e98:	9e 01       	movw	r18, r28
     e9a:	40 e0       	ldi	r20, 0x00	; 0
     e9c:	8b 2f       	mov	r24, r27
     e9e:	84 0f       	add	r24, r20
     ea0:	90 e0       	ldi	r25, 0x00	; 0
     ea2:	a0 e0       	ldi	r26, 0x00	; 0
     ea4:	89 56       	subi	r24, 0x69	; 105
     ea6:	9a 4f       	sbci	r25, 0xFA	; 250
     ea8:	af 4f       	sbci	r26, 0xFF	; 255
     eaa:	fc 01       	movw	r30, r24
     eac:	5a 2f       	mov	r21, r26
     eae:	0e 94 eb 84 	call	0x109d6	; 0x109d6 <__xload_1>
     eb2:	f9 01       	movw	r30, r18
     eb4:	61 93       	st	Z+, r22
     eb6:	9f 01       	movw	r18, r30
     eb8:	87 2f       	mov	r24, r23
     eba:	84 0f       	add	r24, r20
     ebc:	90 e0       	ldi	r25, 0x00	; 0
     ebe:	a0 e0       	ldi	r26, 0x00	; 0
     ec0:	83 55       	subi	r24, 0x53	; 83
     ec2:	9a 4f       	sbci	r25, 0xFA	; 250
     ec4:	af 4f       	sbci	r26, 0xFF	; 255
     ec6:	fc 01       	movw	r30, r24
     ec8:	5a 2f       	mov	r21, r26
     eca:	0e 94 eb 84 	call	0x109d6	; 0x109d6 <__xload_1>
     ece:	f9 01       	movw	r30, r18
     ed0:	63 83       	std	Z+3, r22	; 0x03
     ed2:	4f 5f       	subi	r20, 0xFF	; 255
     ed4:	43 30       	cpi	r20, 0x03	; 3
     ed6:	11 f7       	brne	.-60     	; 0xe9c <asctime_r+0x2a>
     ed8:	80 e2       	ldi	r24, 0x20	; 32
     eda:	8f 83       	std	Y+7, r24	; 0x07
     edc:	8b 83       	std	Y+3, r24	; 0x03
     ede:	be 01       	movw	r22, r28
     ee0:	68 5f       	subi	r22, 0xF8	; 248
     ee2:	7f 4f       	sbci	r23, 0xFF	; 255
     ee4:	f8 01       	movw	r30, r16
     ee6:	83 81       	ldd	r24, Z+3	; 0x03
     ee8:	40 e2       	ldi	r20, 0x20	; 32
     eea:	08 2e       	mov	r0, r24
     eec:	00 0c       	add	r0, r0
     eee:	99 0b       	sbc	r25, r25
     ef0:	0e 94 0c 09 	call	0x1218	; 0x1218 <__print_lz>
     ef4:	be 01       	movw	r22, r28
     ef6:	65 5f       	subi	r22, 0xF5	; 245
     ef8:	7f 4f       	sbci	r23, 0xFF	; 255
     efa:	f8 01       	movw	r30, r16
     efc:	82 81       	ldd	r24, Z+2	; 0x02
     efe:	4a e3       	ldi	r20, 0x3A	; 58
     f00:	08 2e       	mov	r0, r24
     f02:	00 0c       	add	r0, r0
     f04:	99 0b       	sbc	r25, r25
     f06:	0e 94 0c 09 	call	0x1218	; 0x1218 <__print_lz>
     f0a:	be 01       	movw	r22, r28
     f0c:	62 5f       	subi	r22, 0xF2	; 242
     f0e:	7f 4f       	sbci	r23, 0xFF	; 255
     f10:	f8 01       	movw	r30, r16
     f12:	81 81       	ldd	r24, Z+1	; 0x01
     f14:	4a e3       	ldi	r20, 0x3A	; 58
     f16:	08 2e       	mov	r0, r24
     f18:	00 0c       	add	r0, r0
     f1a:	99 0b       	sbc	r25, r25
     f1c:	0e 94 0c 09 	call	0x1218	; 0x1218 <__print_lz>
     f20:	be 01       	movw	r22, r28
     f22:	6f 5e       	subi	r22, 0xEF	; 239
     f24:	7f 4f       	sbci	r23, 0xFF	; 255
     f26:	f8 01       	movw	r30, r16
     f28:	80 81       	ld	r24, Z
     f2a:	40 e2       	ldi	r20, 0x20	; 32
     f2c:	08 2e       	mov	r0, r24
     f2e:	00 0c       	add	r0, r0
     f30:	99 0b       	sbc	r25, r25
     f32:	0e 94 0c 09 	call	0x1218	; 0x1218 <__print_lz>
     f36:	f8 01       	movw	r30, r16
     f38:	86 81       	ldd	r24, Z+6	; 0x06
     f3a:	97 81       	ldd	r25, Z+7	; 0x07
     f3c:	64 e6       	ldi	r22, 0x64	; 100
     f3e:	70 e0       	ldi	r23, 0x00	; 0
     f40:	84 59       	subi	r24, 0x94	; 148
     f42:	98 4f       	sbci	r25, 0xF8	; 248
     f44:	0e 94 2a 7d 	call	0xfa54	; 0xfa54 <__divmodhi4>
     f48:	6b 01       	movw	r12, r22
     f4a:	7c 01       	movw	r14, r24
     f4c:	be 01       	movw	r22, r28
     f4e:	6c 5e       	subi	r22, 0xEC	; 236
     f50:	7f 4f       	sbci	r23, 0xFF	; 255
     f52:	40 e2       	ldi	r20, 0x20	; 32
     f54:	c6 01       	movw	r24, r12
     f56:	0e 94 0c 09 	call	0x1218	; 0x1218 <__print_lz>
     f5a:	be 01       	movw	r22, r28
     f5c:	6a 5e       	subi	r22, 0xEA	; 234
     f5e:	7f 4f       	sbci	r23, 0xFF	; 255
     f60:	40 e0       	ldi	r20, 0x00	; 0
     f62:	c7 01       	movw	r24, r14
     f64:	df 91       	pop	r29
     f66:	cf 91       	pop	r28
     f68:	1f 91       	pop	r17
     f6a:	0f 91       	pop	r16
     f6c:	ff 90       	pop	r15
     f6e:	ef 90       	pop	r14
     f70:	df 90       	pop	r13
     f72:	cf 90       	pop	r12
     f74:	0c 94 0c 09 	jmp	0x1218	; 0x1218 <__print_lz>

00000f78 <gmtime_r>:
     f78:	cf 92       	push	r12
     f7a:	df 92       	push	r13
     f7c:	ef 92       	push	r14
     f7e:	ff 92       	push	r15
     f80:	0f 93       	push	r16
     f82:	1f 93       	push	r17
     f84:	cf 93       	push	r28
     f86:	df 93       	push	r29
     f88:	cd b7       	in	r28, 0x3d	; 61
     f8a:	de b7       	in	r29, 0x3e	; 62
     f8c:	28 97       	sbiw	r28, 0x08	; 8
     f8e:	cd bf       	out	0x3d, r28	; 61
     f90:	de bf       	out	0x3e, r29	; 62
     f92:	8b 01       	movw	r16, r22
     f94:	fc 01       	movw	r30, r24
     f96:	60 81       	ld	r22, Z
     f98:	71 81       	ldd	r23, Z+1	; 0x01
     f9a:	82 81       	ldd	r24, Z+2	; 0x02
     f9c:	93 81       	ldd	r25, Z+3	; 0x03
     f9e:	20 e8       	ldi	r18, 0x80	; 128
     fa0:	31 e5       	ldi	r19, 0x51	; 81
     fa2:	41 e0       	ldi	r20, 0x01	; 1
     fa4:	50 e0       	ldi	r21, 0x00	; 0
     fa6:	0e 94 3e 7d 	call	0xfa7c	; 0xfa7c <__udivmodsi4>
     faa:	69 01       	movw	r12, r18
     fac:	7a 01       	movw	r14, r20
     fae:	2c e3       	ldi	r18, 0x3C	; 60
     fb0:	30 e0       	ldi	r19, 0x00	; 0
     fb2:	40 e0       	ldi	r20, 0x00	; 0
     fb4:	50 e0       	ldi	r21, 0x00	; 0
     fb6:	0e 94 60 7d 	call	0xfac0	; 0xfac0 <__divmodsi4>
     fba:	29 83       	std	Y+1, r18	; 0x01
     fbc:	3a 83       	std	Y+2, r19	; 0x02
     fbe:	4b 83       	std	Y+3, r20	; 0x03
     fc0:	5c 83       	std	Y+4, r21	; 0x04
     fc2:	89 81       	ldd	r24, Y+1	; 0x01
     fc4:	9a 81       	ldd	r25, Y+2	; 0x02
     fc6:	ab 81       	ldd	r26, Y+3	; 0x03
     fc8:	bc 81       	ldd	r27, Y+4	; 0x04
     fca:	f8 01       	movw	r30, r16
     fcc:	60 83       	st	Z, r22
     fce:	6c e3       	ldi	r22, 0x3C	; 60
     fd0:	70 e0       	ldi	r23, 0x00	; 0
     fd2:	0e 94 2a 7d 	call	0xfa54	; 0xfa54 <__divmodhi4>
     fd6:	dc 01       	movw	r26, r24
     fd8:	cb 01       	movw	r24, r22
     fda:	f8 01       	movw	r30, r16
     fdc:	a1 83       	std	Z+1, r26	; 0x01
     fde:	82 83       	std	Z+2, r24	; 0x02
     fe0:	c6 01       	movw	r24, r12
     fe2:	06 96       	adiw	r24, 0x06	; 6
     fe4:	67 e0       	ldi	r22, 0x07	; 7
     fe6:	70 e0       	ldi	r23, 0x00	; 0
     fe8:	0e 94 16 7d 	call	0xfa2c	; 0xfa2c <__udivmodhi4>
     fec:	84 83       	std	Z+4, r24	; 0x04
     fee:	2d ea       	ldi	r18, 0xAD	; 173
     ff0:	3e e8       	ldi	r19, 0x8E	; 142
     ff2:	40 e0       	ldi	r20, 0x00	; 0
     ff4:	50 e0       	ldi	r21, 0x00	; 0
     ff6:	c7 01       	movw	r24, r14
     ff8:	b6 01       	movw	r22, r12
     ffa:	0e 94 60 7d 	call	0xfac0	; 0xfac0 <__divmodsi4>
     ffe:	29 83       	std	Y+1, r18	; 0x01
    1000:	3a 83       	std	Y+2, r19	; 0x02
    1002:	6d 83       	std	Y+5, r22	; 0x05
    1004:	7e 83       	std	Y+6, r23	; 0x06
    1006:	8f 83       	std	Y+7, r24	; 0x07
    1008:	98 87       	std	Y+8, r25	; 0x08
    100a:	89 81       	ldd	r24, Y+1	; 0x01
    100c:	9a 81       	ldd	r25, Y+2	; 0x02
    100e:	24 e6       	ldi	r18, 0x64	; 100
    1010:	28 9f       	mul	r18, r24
    1012:	60 01       	movw	r12, r0
    1014:	29 9f       	mul	r18, r25
    1016:	d0 0c       	add	r13, r0
    1018:	11 24       	eor	r1, r1
    101a:	6d 81       	ldd	r22, Y+5	; 0x05
    101c:	7e 81       	ldd	r23, Y+6	; 0x06
    101e:	8f 81       	ldd	r24, Y+7	; 0x07
    1020:	98 85       	ldd	r25, Y+8	; 0x08
    1022:	25 eb       	ldi	r18, 0xB5	; 181
    1024:	35 e0       	ldi	r19, 0x05	; 5
    1026:	40 e0       	ldi	r20, 0x00	; 0
    1028:	50 e0       	ldi	r21, 0x00	; 0
    102a:	0e 94 60 7d 	call	0xfac0	; 0xfac0 <__divmodsi4>
    102e:	29 83       	std	Y+1, r18	; 0x01
    1030:	3a 83       	std	Y+2, r19	; 0x02
    1032:	6d 83       	std	Y+5, r22	; 0x05
    1034:	7e 83       	std	Y+6, r23	; 0x06
    1036:	e9 80       	ldd	r14, Y+1	; 0x01
    1038:	fa 80       	ldd	r15, Y+2	; 0x02
    103a:	ee 0c       	add	r14, r14
    103c:	ff 1c       	adc	r15, r15
    103e:	ee 0c       	add	r14, r14
    1040:	ff 1c       	adc	r15, r15
    1042:	ec 0c       	add	r14, r12
    1044:	fd 1c       	adc	r15, r13
    1046:	8d 81       	ldd	r24, Y+5	; 0x05
    1048:	9e 81       	ldd	r25, Y+6	; 0x06
    104a:	f5 e6       	ldi	r31, 0x65	; 101
    104c:	ef 16       	cp	r14, r31
    104e:	f1 04       	cpc	r15, r1
    1050:	10 f0       	brcs	.+4      	; 0x1056 <gmtime_r+0xde>
    1052:	01 96       	adiw	r24, 0x01	; 1
    1054:	04 c0       	rjmp	.+8      	; 0x105e <gmtime_r+0xe6>
    1056:	24 e6       	ldi	r18, 0x64	; 100
    1058:	e2 16       	cp	r14, r18
    105a:	f1 04       	cpc	r15, r1
    105c:	19 f0       	breq	.+6      	; 0x1064 <gmtime_r+0xec>
    105e:	21 e0       	ldi	r18, 0x01	; 1
    1060:	30 e0       	ldi	r19, 0x00	; 0
    1062:	02 c0       	rjmp	.+4      	; 0x1068 <gmtime_r+0xf0>
    1064:	20 e0       	ldi	r18, 0x00	; 0
    1066:	30 e0       	ldi	r19, 0x00	; 0
    1068:	a9 01       	movw	r20, r18
    106a:	44 59       	subi	r20, 0x94	; 148
    106c:	5e 4f       	sbci	r21, 0xFE	; 254
    106e:	48 17       	cp	r20, r24
    1070:	59 07       	cpc	r21, r25
    1072:	68 f4       	brcc	.+26     	; 0x108e <gmtime_r+0x116>
    1074:	6d e6       	ldi	r22, 0x6D	; 109
    1076:	71 e0       	ldi	r23, 0x01	; 1
    1078:	82 1b       	sub	r24, r18
    107a:	93 0b       	sbc	r25, r19
    107c:	0e 94 2a 7d 	call	0xfa54	; 0xfa54 <__divmodhi4>
    1080:	dc 01       	movw	r26, r24
    1082:	cb 01       	movw	r24, r22
    1084:	e8 0e       	add	r14, r24
    1086:	f9 1e       	adc	r15, r25
    1088:	cd 01       	movw	r24, r26
    108a:	20 e0       	ldi	r18, 0x00	; 0
    108c:	30 e0       	ldi	r19, 0x00	; 0
    108e:	44 e6       	ldi	r20, 0x64	; 100
    1090:	e4 0e       	add	r14, r20
    1092:	f1 1c       	adc	r15, r1
    1094:	f8 01       	movw	r30, r16
    1096:	e6 82       	std	Z+6, r14	; 0x06
    1098:	f7 82       	std	Z+7, r15	; 0x07
    109a:	80 87       	std	Z+8, r24	; 0x08
    109c:	91 87       	std	Z+9, r25	; 0x09
    109e:	25 5c       	subi	r18, 0xC5	; 197
    10a0:	3f 4f       	sbci	r19, 0xFF	; 255
    10a2:	82 17       	cp	r24, r18
    10a4:	93 07       	cpc	r25, r19
    10a6:	48 f4       	brcc	.+18     	; 0x10ba <gmtime_r+0x142>
    10a8:	6f e1       	ldi	r22, 0x1F	; 31
    10aa:	70 e0       	ldi	r23, 0x00	; 0
    10ac:	0e 94 2a 7d 	call	0xfa54	; 0xfa54 <__divmodhi4>
    10b0:	dc 01       	movw	r26, r24
    10b2:	cb 01       	movw	r24, r22
    10b4:	f8 01       	movw	r30, r16
    10b6:	85 83       	std	Z+5, r24	; 0x05
    10b8:	22 c0       	rjmp	.+68     	; 0x10fe <gmtime_r+0x186>
    10ba:	69 e9       	ldi	r22, 0x99	; 153
    10bc:	70 e0       	ldi	r23, 0x00	; 0
    10be:	82 1b       	sub	r24, r18
    10c0:	93 0b       	sbc	r25, r19
    10c2:	0e 94 2a 7d 	call	0xfa54	; 0xfa54 <__divmodhi4>
    10c6:	dc 01       	movw	r26, r24
    10c8:	cb 01       	movw	r24, r22
    10ca:	f8 2e       	mov	r15, r24
    10cc:	ff 0c       	add	r15, r15
    10ce:	ff 0c       	add	r15, r15
    10d0:	f8 0e       	add	r15, r24
    10d2:	6d e3       	ldi	r22, 0x3D	; 61
    10d4:	70 e0       	ldi	r23, 0x00	; 0
    10d6:	cd 01       	movw	r24, r26
    10d8:	0e 94 2a 7d 	call	0xfa54	; 0xfa54 <__divmodhi4>
    10dc:	dc 01       	movw	r26, r24
    10de:	cb 01       	movw	r24, r22
    10e0:	e8 2e       	mov	r14, r24
    10e2:	ee 0c       	add	r14, r14
    10e4:	6f e1       	ldi	r22, 0x1F	; 31
    10e6:	70 e0       	ldi	r23, 0x00	; 0
    10e8:	cd 01       	movw	r24, r26
    10ea:	0e 94 2a 7d 	call	0xfa54	; 0xfa54 <__divmodhi4>
    10ee:	dc 01       	movw	r26, r24
    10f0:	cb 01       	movw	r24, r22
    10f2:	22 e0       	ldi	r18, 0x02	; 2
    10f4:	28 0f       	add	r18, r24
    10f6:	f2 0e       	add	r15, r18
    10f8:	fe 0c       	add	r15, r14
    10fa:	f8 01       	movw	r30, r16
    10fc:	f5 82       	std	Z+5, r15	; 0x05
    10fe:	a3 83       	std	Z+3, r26	; 0x03
    1100:	f8 01       	movw	r30, r16
    1102:	12 86       	std	Z+10, r1	; 0x0a
    1104:	13 86       	std	Z+11, r1	; 0x0b
    1106:	83 81       	ldd	r24, Z+3	; 0x03
    1108:	8f 5f       	subi	r24, 0xFF	; 255
    110a:	83 83       	std	Z+3, r24	; 0x03
    110c:	28 96       	adiw	r28, 0x08	; 8
    110e:	cd bf       	out	0x3d, r28	; 61
    1110:	de bf       	out	0x3e, r29	; 62
    1112:	df 91       	pop	r29
    1114:	cf 91       	pop	r28
    1116:	1f 91       	pop	r17
    1118:	0f 91       	pop	r16
    111a:	ff 90       	pop	r15
    111c:	ef 90       	pop	r14
    111e:	df 90       	pop	r13
    1120:	cf 90       	pop	r12
    1122:	08 95       	ret

00001124 <iso_week_date_r>:
    1124:	cf 92       	push	r12
    1126:	df 92       	push	r13
    1128:	ef 92       	push	r14
    112a:	ff 92       	push	r15
    112c:	0f 93       	push	r16
    112e:	1f 93       	push	r17
    1130:	cf 93       	push	r28
    1132:	df 93       	push	r29
    1134:	8c 01       	movw	r16, r24
    1136:	7b 01       	movw	r14, r22
    1138:	ea 01       	movw	r28, r20
    113a:	88 83       	st	Y, r24
    113c:	99 83       	std	Y+1, r25	; 0x01
    113e:	0e 94 19 03 	call	0x632	; 0x632 <is_leap_year>
    1142:	28 2f       	mov	r18, r24
    1144:	a8 01       	movw	r20, r16
    1146:	40 5d       	subi	r20, 0xD0	; 208
    1148:	57 40       	sbci	r21, 0x07	; 7
    114a:	6d e6       	ldi	r22, 0x6D	; 109
    114c:	71 e0       	ldi	r23, 0x01	; 1
    114e:	46 9f       	mul	r20, r22
    1150:	c0 01       	movw	r24, r0
    1152:	47 9f       	mul	r20, r23
    1154:	90 0d       	add	r25, r0
    1156:	56 9f       	mul	r21, r22
    1158:	90 0d       	add	r25, r0
    115a:	11 24       	eor	r1, r1
    115c:	8e 0d       	add	r24, r14
    115e:	9f 1d       	adc	r25, r15
    1160:	41 15       	cp	r20, r1
    1162:	51 05       	cpc	r21, r1
    1164:	79 f0       	breq	.+30     	; 0x1184 <iso_week_date_r+0x60>
    1166:	ba 01       	movw	r22, r20
    1168:	76 95       	lsr	r23
    116a:	67 95       	ror	r22
    116c:	76 95       	lsr	r23
    116e:	67 95       	ror	r22
    1170:	6f 5f       	subi	r22, 0xFF	; 255
    1172:	7f 4f       	sbci	r23, 0xFF	; 255
    1174:	86 0f       	add	r24, r22
    1176:	97 1f       	adc	r25, r23
    1178:	82 1b       	sub	r24, r18
    117a:	91 09       	sbc	r25, r1
    117c:	45 36       	cpi	r20, 0x65	; 101
    117e:	51 05       	cpc	r21, r1
    1180:	08 f0       	brcs	.+2      	; 0x1184 <iso_week_date_r+0x60>
    1182:	01 97       	sbiw	r24, 0x01	; 1
    1184:	06 96       	adiw	r24, 0x06	; 6
    1186:	67 e0       	ldi	r22, 0x07	; 7
    1188:	70 e0       	ldi	r23, 0x00	; 0
    118a:	0e 94 16 7d 	call	0xfa2c	; 0xfa2c <__udivmodhi4>
    118e:	6c 01       	movw	r12, r24
    1190:	89 2b       	or	r24, r25
    1192:	19 f4       	brne	.+6      	; 0x119a <iso_week_date_r+0x76>
    1194:	87 e0       	ldi	r24, 0x07	; 7
    1196:	c8 2e       	mov	r12, r24
    1198:	d1 2c       	mov	r13, r1
    119a:	cc 82       	std	Y+4, r12	; 0x04
    119c:	dd 82       	std	Y+5, r13	; 0x05
    119e:	c7 01       	movw	r24, r14
    11a0:	0b 96       	adiw	r24, 0x0b	; 11
    11a2:	8c 19       	sub	r24, r12
    11a4:	9d 09       	sbc	r25, r13
    11a6:	67 e0       	ldi	r22, 0x07	; 7
    11a8:	70 e0       	ldi	r23, 0x00	; 0
    11aa:	0e 94 2a 7d 	call	0xfa54	; 0xfa54 <__divmodhi4>
    11ae:	65 33       	cpi	r22, 0x35	; 53
    11b0:	71 05       	cpc	r23, r1
    11b2:	b1 f4       	brne	.+44     	; 0x11e0 <iso_week_date_r+0xbc>
    11b4:	81 e0       	ldi	r24, 0x01	; 1
    11b6:	c8 1a       	sub	r12, r24
    11b8:	d1 08       	sbc	r13, r1
    11ba:	ec 18       	sub	r14, r12
    11bc:	fd 08       	sbc	r15, r13
    11be:	82 2f       	mov	r24, r18
    11c0:	90 e0       	ldi	r25, 0x00	; 0
    11c2:	84 59       	subi	r24, 0x94	; 148
    11c4:	9e 4f       	sbci	r25, 0xFE	; 254
    11c6:	23 e0       	ldi	r18, 0x03	; 3
    11c8:	e2 0e       	add	r14, r18
    11ca:	f1 1c       	adc	r15, r1
    11cc:	8e 15       	cp	r24, r14
    11ce:	9f 05       	cpc	r25, r15
    11d0:	3c f4       	brge	.+14     	; 0x11e0 <iso_week_date_r+0xbc>
    11d2:	88 81       	ld	r24, Y
    11d4:	99 81       	ldd	r25, Y+1	; 0x01
    11d6:	01 96       	adiw	r24, 0x01	; 1
    11d8:	88 83       	st	Y, r24
    11da:	99 83       	std	Y+1, r25	; 0x01
    11dc:	61 e0       	ldi	r22, 0x01	; 1
    11de:	70 e0       	ldi	r23, 0x00	; 0
    11e0:	6a 83       	std	Y+2, r22	; 0x02
    11e2:	7b 83       	std	Y+3, r23	; 0x03
    11e4:	67 2b       	or	r22, r23
    11e6:	79 f4       	brne	.+30     	; 0x1206 <iso_week_date_r+0xe2>
    11e8:	01 50       	subi	r16, 0x01	; 1
    11ea:	11 09       	sbc	r17, r1
    11ec:	c8 01       	movw	r24, r16
    11ee:	0e 94 19 03 	call	0x632	; 0x632 <is_leap_year>
    11f2:	68 2f       	mov	r22, r24
    11f4:	70 e0       	ldi	r23, 0x00	; 0
    11f6:	64 59       	subi	r22, 0x94	; 148
    11f8:	7e 4f       	sbci	r23, 0xFE	; 254
    11fa:	ae 01       	movw	r20, r28
    11fc:	c8 01       	movw	r24, r16
    11fe:	0e 94 92 08 	call	0x1124	; 0x1124 <iso_week_date_r>
    1202:	cc 82       	std	Y+4, r12	; 0x04
    1204:	dd 82       	std	Y+5, r13	; 0x05
    1206:	df 91       	pop	r29
    1208:	cf 91       	pop	r28
    120a:	1f 91       	pop	r17
    120c:	0f 91       	pop	r16
    120e:	ff 90       	pop	r15
    1210:	ef 90       	pop	r14
    1212:	df 90       	pop	r13
    1214:	cf 90       	pop	r12
    1216:	08 95       	ret

00001218 <__print_lz>:
    1218:	1f 93       	push	r17
    121a:	cf 93       	push	r28
    121c:	df 93       	push	r29
    121e:	eb 01       	movw	r28, r22
    1220:	14 2f       	mov	r17, r20
    1222:	6a e0       	ldi	r22, 0x0A	; 10
    1224:	70 e0       	ldi	r23, 0x00	; 0
    1226:	0e 94 2a 7d 	call	0xfa54	; 0xfa54 <__divmodhi4>
    122a:	60 5d       	subi	r22, 0xD0	; 208
    122c:	68 83       	st	Y, r22
    122e:	80 5d       	subi	r24, 0xD0	; 208
    1230:	89 83       	std	Y+1, r24	; 0x01
    1232:	1a 83       	std	Y+2, r17	; 0x02
    1234:	df 91       	pop	r29
    1236:	cf 91       	pop	r28
    1238:	1f 91       	pop	r17
    123a:	08 95       	ret

0000123c <atmel_start_init>:

/**
 * Initializes MCU, drivers and middleware in the project
 **/
void atmel_start_init(void)
{
    123c:	cf 93       	push	r28
    123e:	df 93       	push	r29
    1240:	cd b7       	in	r28, 0x3d	; 61
    1242:	de b7       	in	r29, 0x3e	; 62
	system_init();
    1244:	0e 94 83 3d 	call	0x7b06	; 0x7b06 <system_init>
}
    1248:	00 00       	nop
    124a:	df 91       	pop	r29
    124c:	cf 91       	pop	r28
    124e:	08 95       	ret

00001250 <__vector_19>:

extern USART_Number_t g_serialbus_usart_number;
extern USART_Number_t g_linkbus_usart_number;

ISR(USART0_RXC_vect)
{
    1250:	1f 92       	push	r1
    1252:	0f 92       	push	r0
    1254:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    1258:	0f 92       	push	r0
    125a:	11 24       	eor	r1, r1
    125c:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    1260:	0f 92       	push	r0
    1262:	2f 93       	push	r18
    1264:	3f 93       	push	r19
    1266:	4f 93       	push	r20
    1268:	5f 93       	push	r21
    126a:	6f 93       	push	r22
    126c:	7f 93       	push	r23
    126e:	8f 93       	push	r24
    1270:	9f 93       	push	r25
    1272:	af 93       	push	r26
    1274:	bf 93       	push	r27
    1276:	ef 93       	push	r30
    1278:	ff 93       	push	r31
    127a:	cf 93       	push	r28
    127c:	df 93       	push	r29
    127e:	1f 92       	push	r1
    1280:	cd b7       	in	r28, 0x3d	; 61
    1282:	de b7       	in	r29, 0x3e	; 62
	uint8_t rx_char = USART0_get_data();
    1284:	0e 94 19 79 	call	0xf232	; 0xf232 <USART0_get_data>
    1288:	89 83       	std	Y+1, r24	; 0x01
	
	if(g_linkbus_usart_number == USART_0)
    128a:	80 91 4e 40 	lds	r24, 0x404E	; 0x80404e <g_linkbus_usart_number>
    128e:	88 23       	and	r24, r24
    1290:	19 f4       	brne	.+6      	; 0x1298 <__vector_19+0x48>
	{
		linkbus_Rx(rx_char);
    1292:	89 81       	ldd	r24, Y+1	; 0x01
    1294:	0e 94 03 0e 	call	0x1c06	; 0x1c06 <_Z10linkbus_Rxh>
	}
	
	if(g_serialbus_usart_number == USART_0)
    1298:	80 91 54 40 	lds	r24, 0x4054	; 0x804054 <g_serialbus_usart_number>
    129c:	88 23       	and	r24, r24
    129e:	19 f4       	brne	.+6      	; 0x12a6 <__vector_19+0x56>
	{
		serial_Rx(rx_char);
    12a0:	89 81       	ldd	r24, Y+1	; 0x01
    12a2:	0e 94 b0 09 	call	0x1360	; 0x1360 <_Z9serial_Rxh>
	}
}
    12a6:	00 00       	nop
    12a8:	0f 90       	pop	r0
    12aa:	df 91       	pop	r29
    12ac:	cf 91       	pop	r28
    12ae:	ff 91       	pop	r31
    12b0:	ef 91       	pop	r30
    12b2:	bf 91       	pop	r27
    12b4:	af 91       	pop	r26
    12b6:	9f 91       	pop	r25
    12b8:	8f 91       	pop	r24
    12ba:	7f 91       	pop	r23
    12bc:	6f 91       	pop	r22
    12be:	5f 91       	pop	r21
    12c0:	4f 91       	pop	r20
    12c2:	3f 91       	pop	r19
    12c4:	2f 91       	pop	r18
    12c6:	0f 90       	pop	r0
    12c8:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    12cc:	0f 90       	pop	r0
    12ce:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    12d2:	0f 90       	pop	r0
    12d4:	1f 90       	pop	r1
    12d6:	18 95       	reti

000012d8 <__vector_55>:

ISR(USART4_RXC_vect)
{
    12d8:	1f 92       	push	r1
    12da:	0f 92       	push	r0
    12dc:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    12e0:	0f 92       	push	r0
    12e2:	11 24       	eor	r1, r1
    12e4:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    12e8:	0f 92       	push	r0
    12ea:	2f 93       	push	r18
    12ec:	3f 93       	push	r19
    12ee:	4f 93       	push	r20
    12f0:	5f 93       	push	r21
    12f2:	6f 93       	push	r22
    12f4:	7f 93       	push	r23
    12f6:	8f 93       	push	r24
    12f8:	9f 93       	push	r25
    12fa:	af 93       	push	r26
    12fc:	bf 93       	push	r27
    12fe:	ef 93       	push	r30
    1300:	ff 93       	push	r31
    1302:	cf 93       	push	r28
    1304:	df 93       	push	r29
    1306:	1f 92       	push	r1
    1308:	cd b7       	in	r28, 0x3d	; 61
    130a:	de b7       	in	r29, 0x3e	; 62
	uint8_t rx_char = USART4_get_data();
    130c:	0e 94 64 7a 	call	0xf4c8	; 0xf4c8 <USART4_get_data>
    1310:	89 83       	std	Y+1, r24	; 0x01
	
	if(g_linkbus_usart_number == USART_4)
    1312:	80 91 4e 40 	lds	r24, 0x404E	; 0x80404e <g_linkbus_usart_number>
    1316:	84 30       	cpi	r24, 0x04	; 4
    1318:	19 f4       	brne	.+6      	; 0x1320 <__vector_55+0x48>
	{
		linkbus_Rx(rx_char);
    131a:	89 81       	ldd	r24, Y+1	; 0x01
    131c:	0e 94 03 0e 	call	0x1c06	; 0x1c06 <_Z10linkbus_Rxh>
	}
	
	if(g_serialbus_usart_number == USART_4)
    1320:	80 91 54 40 	lds	r24, 0x4054	; 0x804054 <g_serialbus_usart_number>
    1324:	84 30       	cpi	r24, 0x04	; 4
    1326:	19 f4       	brne	.+6      	; 0x132e <__vector_55+0x56>
	{
		serial_Rx(rx_char);
    1328:	89 81       	ldd	r24, Y+1	; 0x01
    132a:	0e 94 b0 09 	call	0x1360	; 0x1360 <_Z9serial_Rxh>
	}
}
    132e:	00 00       	nop
    1330:	0f 90       	pop	r0
    1332:	df 91       	pop	r29
    1334:	cf 91       	pop	r28
    1336:	ff 91       	pop	r31
    1338:	ef 91       	pop	r30
    133a:	bf 91       	pop	r27
    133c:	af 91       	pop	r26
    133e:	9f 91       	pop	r25
    1340:	8f 91       	pop	r24
    1342:	7f 91       	pop	r23
    1344:	6f 91       	pop	r22
    1346:	5f 91       	pop	r21
    1348:	4f 91       	pop	r20
    134a:	3f 91       	pop	r19
    134c:	2f 91       	pop	r18
    134e:	0f 90       	pop	r0
    1350:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    1354:	0f 90       	pop	r0
    1356:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    135a:	0f 90       	pop	r0
    135c:	1f 90       	pop	r1
    135e:	18 95       	reti

00001360 <_Z9serial_Rxh>:

void serial_Rx(uint8_t rx_char)
{
    1360:	cf 93       	push	r28
    1362:	df 93       	push	r29
    1364:	cd b7       	in	r28, 0x3d	; 61
    1366:	de b7       	in	r29, 0x3e	; 62
    1368:	2a 97       	sbiw	r28, 0x0a	; 10
    136a:	cd bf       	out	0x3d, r28	; 61
    136c:	de bf       	out	0x3e, r29	; 62
    136e:	8a 87       	std	Y+10, r24	; 0x0a
	static uint8_t field_index = 0;
	static uint8_t field_len = 0;
	static int msg_ID = 0;
	static bool receiving_msg = false;

	if(!buff)
    1370:	80 91 06 45 	lds	r24, 0x4506	; 0x804506 <__data_end>
    1374:	90 91 07 45 	lds	r25, 0x4507	; 0x804507 <__data_end+0x1>
    1378:	89 2b       	or	r24, r25
    137a:	31 f4       	brne	.+12     	; 0x1388 <_Z9serial_Rxh+0x28>
	{
		buff = nextEmptySBRxBuffer();
    137c:	0e 94 16 66 	call	0xcc2c	; 0xcc2c <nextEmptySBRxBuffer>
    1380:	80 93 06 45 	sts	0x4506, r24	; 0x804506 <__data_end>
    1384:	90 93 07 45 	sts	0x4507, r25	; 0x804507 <__data_end+0x1>
	}

	if(buff)
    1388:	80 91 06 45 	lds	r24, 0x4506	; 0x804506 <__data_end>
    138c:	90 91 07 45 	lds	r25, 0x4507	; 0x804507 <__data_end+0x1>
    1390:	89 2b       	or	r24, r25
    1392:	09 f4       	brne	.+2      	; 0x1396 <_Z9serial_Rxh+0x36>
    1394:	63 c2       	rjmp	.+1222   	; 0x185c <_Z9serial_Rxh+0x4fc>
	{
		static uint8_t ignoreCount = 0;
		rx_char = toupper(rx_char);
    1396:	8a 85       	ldd	r24, Y+10	; 0x0a
    1398:	88 2f       	mov	r24, r24
    139a:	90 e0       	ldi	r25, 0x00	; 0
    139c:	0e 94 31 7f 	call	0xfe62	; 0xfe62 <toupper>
    13a0:	8a 87       	std	Y+10, r24	; 0x0a
		if(rx_char == '\n') rx_char = '\r';
    13a2:	8a 85       	ldd	r24, Y+10	; 0x0a
    13a4:	8a 30       	cpi	r24, 0x0A	; 10
    13a6:	11 f4       	brne	.+4      	; 0x13ac <_Z9serial_Rxh+0x4c>
    13a8:	8d e0       	ldi	r24, 0x0D	; 13
    13aa:	8a 87       	std	Y+10, r24	; 0x0a

		if(ignoreCount)
    13ac:	80 91 08 45 	lds	r24, 0x4508	; 0x804508 <_ZZ9serial_RxhE11ignoreCount>
    13b0:	88 23       	and	r24, r24
    13b2:	39 f0       	breq	.+14     	; 0x13c2 <_Z9serial_Rxh+0x62>
		{
			rx_char = '\0';
    13b4:	1a 86       	std	Y+10, r1	; 0x0a
			ignoreCount--;
    13b6:	80 91 08 45 	lds	r24, 0x4508	; 0x804508 <_ZZ9serial_RxhE11ignoreCount>
    13ba:	81 50       	subi	r24, 0x01	; 1
    13bc:	80 93 08 45 	sts	0x4508, r24	; 0x804508 <_ZZ9serial_RxhE11ignoreCount>
			{
				sb_echo_char(rx_char);
			}
		}
	}	
}
    13c0:	4d c2       	rjmp	.+1178   	; 0x185c <_Z9serial_Rxh+0x4fc>
		if(ignoreCount)
		{
			rx_char = '\0';
			ignoreCount--;
		}
		else if(rx_char == 0x1B)    /* Ignore ESC sequences */
    13c2:	8a 85       	ldd	r24, Y+10	; 0x0a
    13c4:	8b 31       	cpi	r24, 0x1B	; 27
    13c6:	91 f4       	brne	.+36     	; 0x13ec <_Z9serial_Rxh+0x8c>
		{
			rx_char = '\0';
    13c8:	1a 86       	std	Y+10, r1	; 0x0a

			if(charIndex < SERIALBUS_MAX_MSG_FIELD_LENGTH)
    13ca:	80 91 09 45 	lds	r24, 0x4509	; 0x804509 <_ZZ9serial_RxhE9charIndex>
    13ce:	84 31       	cpi	r24, 0x14	; 20
    13d0:	48 f4       	brcc	.+18     	; 0x13e4 <_Z9serial_Rxh+0x84>
			{
				rx_char = textBuff[charIndex];
    13d2:	80 91 09 45 	lds	r24, 0x4509	; 0x804509 <_ZZ9serial_RxhE9charIndex>
    13d6:	88 2f       	mov	r24, r24
    13d8:	90 e0       	ldi	r25, 0x00	; 0
    13da:	86 5f       	subi	r24, 0xF6	; 246
    13dc:	9a 4b       	sbci	r25, 0xBA	; 186
    13de:	fc 01       	movw	r30, r24
    13e0:	80 81       	ld	r24, Z
    13e2:	8a 87       	std	Y+10, r24	; 0x0a
			}

			ignoreCount = 2;        /* throw out the next two characters */
    13e4:	82 e0       	ldi	r24, 0x02	; 2
    13e6:	80 93 08 45 	sts	0x4508, r24	; 0x804508 <_ZZ9serial_RxhE11ignoreCount>
			{
				sb_echo_char(rx_char);
			}
		}
	}	
}
    13ea:	38 c2       	rjmp	.+1136   	; 0x185c <_Z9serial_Rxh+0x4fc>
				rx_char = textBuff[charIndex];
			}

			ignoreCount = 2;        /* throw out the next two characters */
		}
		else if(rx_char == '\r')    /* Handle carriage return */
    13ec:	8a 85       	ldd	r24, Y+10	; 0x0a
    13ee:	8d 30       	cpi	r24, 0x0D	; 13
    13f0:	09 f0       	breq	.+2      	; 0x13f4 <_Z9serial_Rxh+0x94>
    13f2:	60 c0       	rjmp	.+192    	; 0x14b4 <_Z9serial_Rxh+0x154>
		{
			if(receiving_msg)
    13f4:	80 91 3c 45 	lds	r24, 0x453C	; 0x80453c <_ZZ9serial_RxhE13receiving_msg>
    13f8:	88 23       	and	r24, r24
    13fa:	09 f4       	brne	.+2      	; 0x13fe <_Z9serial_Rxh+0x9e>
    13fc:	41 c0       	rjmp	.+130    	; 0x1480 <_Z9serial_Rxh+0x120>
			{
				if(charIndex > 0)
    13fe:	80 91 09 45 	lds	r24, 0x4509	; 0x804509 <_ZZ9serial_RxhE9charIndex>
    1402:	88 23       	and	r24, r24
    1404:	d1 f1       	breq	.+116    	; 0x147a <_Z9serial_Rxh+0x11a>
				{
					buff->type = SERIALBUS_MSG_QUERY;
    1406:	80 91 06 45 	lds	r24, 0x4506	; 0x804506 <__data_end>
    140a:	90 91 07 45 	lds	r25, 0x4507	; 0x804507 <__data_end+0x1>
    140e:	22 e0       	ldi	r18, 0x02	; 2
    1410:	fc 01       	movw	r30, r24
    1412:	20 83       	st	Z, r18
					buff->id = (SBMessageID)msg_ID;
    1414:	80 91 06 45 	lds	r24, 0x4506	; 0x804506 <__data_end>
    1418:	90 91 07 45 	lds	r25, 0x4507	; 0x804507 <__data_end+0x1>
    141c:	20 91 3d 45 	lds	r18, 0x453D	; 0x80453d <_ZZ9serial_RxhE6msg_ID>
    1420:	30 91 3e 45 	lds	r19, 0x453E	; 0x80453e <_ZZ9serial_RxhE6msg_ID+0x1>
    1424:	fc 01       	movw	r30, r24
    1426:	21 83       	std	Z+1, r18	; 0x01
    1428:	32 83       	std	Z+2, r19	; 0x02

					if(field_index > 0) /* terminate the last field */
    142a:	80 91 3f 45 	lds	r24, 0x453F	; 0x80453f <_ZZ9serial_RxhE11field_index>
    142e:	88 23       	and	r24, r24
    1430:	e1 f0       	breq	.+56     	; 0x146a <_Z9serial_Rxh+0x10a>
					{
						buff->fields[field_index - 1][field_len] = 0;
    1432:	40 91 06 45 	lds	r20, 0x4506	; 0x804506 <__data_end>
    1436:	50 91 07 45 	lds	r21, 0x4507	; 0x804507 <__data_end+0x1>
    143a:	80 91 3f 45 	lds	r24, 0x453F	; 0x80453f <_ZZ9serial_RxhE11field_index>
    143e:	88 2f       	mov	r24, r24
    1440:	90 e0       	ldi	r25, 0x00	; 0
    1442:	bc 01       	movw	r22, r24
    1444:	61 50       	subi	r22, 0x01	; 1
    1446:	71 09       	sbc	r23, r1
    1448:	80 91 40 45 	lds	r24, 0x4540	; 0x804540 <_ZZ9serial_RxhE9field_len>
    144c:	88 2f       	mov	r24, r24
    144e:	90 e0       	ldi	r25, 0x00	; 0
    1450:	e4 e1       	ldi	r30, 0x14	; 20
    1452:	e6 9f       	mul	r30, r22
    1454:	90 01       	movw	r18, r0
    1456:	e7 9f       	mul	r30, r23
    1458:	30 0d       	add	r19, r0
    145a:	11 24       	eor	r1, r1
    145c:	24 0f       	add	r18, r20
    145e:	35 1f       	adc	r19, r21
    1460:	82 0f       	add	r24, r18
    1462:	93 1f       	adc	r25, r19
    1464:	03 96       	adiw	r24, 0x03	; 3
    1466:	fc 01       	movw	r30, r24
    1468:	10 82       	st	Z, r1
					}

					textBuff[charIndex] = '\0'; /* terminate last-message buffer */
    146a:	80 91 09 45 	lds	r24, 0x4509	; 0x804509 <_ZZ9serial_RxhE9charIndex>
    146e:	88 2f       	mov	r24, r24
    1470:	90 e0       	ldi	r25, 0x00	; 0
    1472:	86 5f       	subi	r24, 0xF6	; 246
    1474:	9a 4b       	sbci	r25, 0xBA	; 186
    1476:	fc 01       	movw	r30, r24
    1478:	10 82       	st	Z, r1
				}

				sb_send_NewLine();
    147a:	0e 94 b7 67 	call	0xcf6e	; 0xcf6e <sb_send_NewLine>
    147e:	09 c0       	rjmp	.+18     	; 0x1492 <_Z9serial_Rxh+0x132>
			}
			else
			{
				buff->id = SB_INVALID_MESSAGE; /* print help message */
    1480:	80 91 06 45 	lds	r24, 0x4506	; 0x804506 <__data_end>
    1484:	90 91 07 45 	lds	r25, 0x4507	; 0x804507 <__data_end+0x1>
    1488:	2f ef       	ldi	r18, 0xFF	; 255
    148a:	3f ef       	ldi	r19, 0xFF	; 255
    148c:	fc 01       	movw	r30, r24
    148e:	21 83       	std	Z+1, r18	; 0x01
    1490:	32 83       	std	Z+2, r19	; 0x02
			}

			charIndex = 0;
    1492:	10 92 09 45 	sts	0x4509, r1	; 0x804509 <_ZZ9serial_RxhE9charIndex>
			field_len = 0;
    1496:	10 92 40 45 	sts	0x4540, r1	; 0x804540 <_ZZ9serial_RxhE9field_len>
			msg_ID = LB_MESSAGE_EMPTY;
    149a:	10 92 3d 45 	sts	0x453D, r1	; 0x80453d <_ZZ9serial_RxhE6msg_ID>
    149e:	10 92 3e 45 	sts	0x453E, r1	; 0x80453e <_ZZ9serial_RxhE6msg_ID+0x1>

			field_index = 0;
    14a2:	10 92 3f 45 	sts	0x453F, r1	; 0x80453f <_ZZ9serial_RxhE11field_index>
			buff = NULL;
    14a6:	10 92 06 45 	sts	0x4506, r1	; 0x804506 <__data_end>
    14aa:	10 92 07 45 	sts	0x4507, r1	; 0x804507 <__data_end+0x1>

			receiving_msg = false;
    14ae:	10 92 3c 45 	sts	0x453C, r1	; 0x80453c <_ZZ9serial_RxhE13receiving_msg>
			{
				sb_echo_char(rx_char);
			}
		}
	}	
}
    14b2:	d4 c1       	rjmp	.+936    	; 0x185c <_Z9serial_Rxh+0x4fc>
			field_index = 0;
			buff = NULL;

			receiving_msg = false;
		}
		else if(rx_char)
    14b4:	8a 85       	ldd	r24, Y+10	; 0x0a
    14b6:	88 23       	and	r24, r24
    14b8:	09 f4       	brne	.+2      	; 0x14bc <_Z9serial_Rxh+0x15c>
    14ba:	d0 c1       	rjmp	.+928    	; 0x185c <_Z9serial_Rxh+0x4fc>
		{
			textBuff[charIndex] = rx_char;  /* hold the characters for re-use */
    14bc:	80 91 09 45 	lds	r24, 0x4509	; 0x804509 <_ZZ9serial_RxhE9charIndex>
    14c0:	88 2f       	mov	r24, r24
    14c2:	90 e0       	ldi	r25, 0x00	; 0
    14c4:	86 5f       	subi	r24, 0xF6	; 246
    14c6:	9a 4b       	sbci	r25, 0xBA	; 186
    14c8:	2a 85       	ldd	r18, Y+10	; 0x0a
    14ca:	fc 01       	movw	r30, r24
    14cc:	20 83       	st	Z, r18

			if(charIndex)
    14ce:	80 91 09 45 	lds	r24, 0x4509	; 0x804509 <_ZZ9serial_RxhE9charIndex>
    14d2:	88 23       	and	r24, r24
    14d4:	09 f4       	brne	.+2      	; 0x14d8 <_Z9serial_Rxh+0x178>
    14d6:	7c c1       	rjmp	.+760    	; 0x17d0 <_Z9serial_Rxh+0x470>
			{
				if(rx_char == 0x7F)         /* Handle backspace */
    14d8:	8a 85       	ldd	r24, Y+10	; 0x0a
    14da:	8f 37       	cpi	r24, 0x7F	; 127
    14dc:	09 f0       	breq	.+2      	; 0x14e0 <_Z9serial_Rxh+0x180>
    14de:	a1 c0       	rjmp	.+322    	; 0x1622 <_Z9serial_Rxh+0x2c2>
				{
					charIndex--;
    14e0:	80 91 09 45 	lds	r24, 0x4509	; 0x804509 <_ZZ9serial_RxhE9charIndex>
    14e4:	81 50       	subi	r24, 0x01	; 1
    14e6:	80 93 09 45 	sts	0x4509, r24	; 0x804509 <_ZZ9serial_RxhE9charIndex>
					if(field_index == 0)
    14ea:	80 91 3f 45 	lds	r24, 0x453F	; 0x80453f <_ZZ9serial_RxhE11field_index>
    14ee:	88 23       	and	r24, r24
    14f0:	29 f5       	brne	.+74     	; 0x153c <_Z9serial_Rxh+0x1dc>
					{
						msg_ID -= textBuff[charIndex];
    14f2:	20 91 3d 45 	lds	r18, 0x453D	; 0x80453d <_ZZ9serial_RxhE6msg_ID>
    14f6:	30 91 3e 45 	lds	r19, 0x453E	; 0x80453e <_ZZ9serial_RxhE6msg_ID+0x1>
    14fa:	80 91 09 45 	lds	r24, 0x4509	; 0x804509 <_ZZ9serial_RxhE9charIndex>
    14fe:	88 2f       	mov	r24, r24
    1500:	90 e0       	ldi	r25, 0x00	; 0
    1502:	86 5f       	subi	r24, 0xF6	; 246
    1504:	9a 4b       	sbci	r25, 0xBA	; 186
    1506:	fc 01       	movw	r30, r24
    1508:	80 81       	ld	r24, Z
    150a:	88 2f       	mov	r24, r24
    150c:	90 e0       	ldi	r25, 0x00	; 0
    150e:	a9 01       	movw	r20, r18
    1510:	48 1b       	sub	r20, r24
    1512:	59 0b       	sbc	r21, r25
    1514:	ca 01       	movw	r24, r20
    1516:	80 93 3d 45 	sts	0x453D, r24	; 0x80453d <_ZZ9serial_RxhE6msg_ID>
    151a:	90 93 3e 45 	sts	0x453E, r25	; 0x80453e <_ZZ9serial_RxhE6msg_ID+0x1>
						msg_ID /= 10;
    151e:	80 91 3d 45 	lds	r24, 0x453D	; 0x80453d <_ZZ9serial_RxhE6msg_ID>
    1522:	90 91 3e 45 	lds	r25, 0x453E	; 0x80453e <_ZZ9serial_RxhE6msg_ID+0x1>
    1526:	2a e0       	ldi	r18, 0x0A	; 10
    1528:	30 e0       	ldi	r19, 0x00	; 0
    152a:	b9 01       	movw	r22, r18
    152c:	0e 94 2a 7d 	call	0xfa54	; 0xfa54 <__divmodhi4>
    1530:	cb 01       	movw	r24, r22
    1532:	80 93 3d 45 	sts	0x453D, r24	; 0x80453d <_ZZ9serial_RxhE6msg_ID>
    1536:	90 93 3e 45 	sts	0x453E, r25	; 0x80453e <_ZZ9serial_RxhE6msg_ID+0x1>
    153a:	63 c0       	rjmp	.+198    	; 0x1602 <_Z9serial_Rxh+0x2a2>
					}
					else if(field_len)
    153c:	80 91 40 45 	lds	r24, 0x4540	; 0x804540 <_ZZ9serial_RxhE9field_len>
    1540:	88 23       	and	r24, r24
    1542:	11 f1       	breq	.+68     	; 0x1588 <_Z9serial_Rxh+0x228>
					{
						field_len--;
    1544:	80 91 40 45 	lds	r24, 0x4540	; 0x804540 <_ZZ9serial_RxhE9field_len>
    1548:	81 50       	subi	r24, 0x01	; 1
    154a:	80 93 40 45 	sts	0x4540, r24	; 0x804540 <_ZZ9serial_RxhE9field_len>
						buff->fields[field_index - 1][field_len] = '\0';
    154e:	40 91 06 45 	lds	r20, 0x4506	; 0x804506 <__data_end>
    1552:	50 91 07 45 	lds	r21, 0x4507	; 0x804507 <__data_end+0x1>
    1556:	80 91 3f 45 	lds	r24, 0x453F	; 0x80453f <_ZZ9serial_RxhE11field_index>
    155a:	88 2f       	mov	r24, r24
    155c:	90 e0       	ldi	r25, 0x00	; 0
    155e:	bc 01       	movw	r22, r24
    1560:	61 50       	subi	r22, 0x01	; 1
    1562:	71 09       	sbc	r23, r1
    1564:	80 91 40 45 	lds	r24, 0x4540	; 0x804540 <_ZZ9serial_RxhE9field_len>
    1568:	88 2f       	mov	r24, r24
    156a:	90 e0       	ldi	r25, 0x00	; 0
    156c:	e4 e1       	ldi	r30, 0x14	; 20
    156e:	e6 9f       	mul	r30, r22
    1570:	90 01       	movw	r18, r0
    1572:	e7 9f       	mul	r30, r23
    1574:	30 0d       	add	r19, r0
    1576:	11 24       	eor	r1, r1
    1578:	24 0f       	add	r18, r20
    157a:	35 1f       	adc	r19, r21
    157c:	82 0f       	add	r24, r18
    157e:	93 1f       	adc	r25, r19
    1580:	03 96       	adiw	r24, 0x03	; 3
    1582:	fc 01       	movw	r30, r24
    1584:	10 82       	st	Z, r1
    1586:	3d c0       	rjmp	.+122    	; 0x1602 <_Z9serial_Rxh+0x2a2>
					}
					else if(textBuff[charIndex] == ' ')
    1588:	80 91 09 45 	lds	r24, 0x4509	; 0x804509 <_ZZ9serial_RxhE9charIndex>
    158c:	88 2f       	mov	r24, r24
    158e:	90 e0       	ldi	r25, 0x00	; 0
    1590:	86 5f       	subi	r24, 0xF6	; 246
    1592:	9a 4b       	sbci	r25, 0xBA	; 186
    1594:	fc 01       	movw	r30, r24
    1596:	80 81       	ld	r24, Z
    1598:	80 32       	cpi	r24, 0x20	; 32
    159a:	d9 f4       	brne	.+54     	; 0x15d2 <_Z9serial_Rxh+0x272>
					{
						field_index--;
    159c:	80 91 3f 45 	lds	r24, 0x453F	; 0x80453f <_ZZ9serial_RxhE11field_index>
    15a0:	81 50       	subi	r24, 0x01	; 1
    15a2:	80 93 3f 45 	sts	0x453F, r24	; 0x80453f <_ZZ9serial_RxhE11field_index>
						field_len = strlen(buff->fields[field_index]);
    15a6:	20 91 06 45 	lds	r18, 0x4506	; 0x804506 <__data_end>
    15aa:	30 91 07 45 	lds	r19, 0x4507	; 0x804507 <__data_end+0x1>
    15ae:	80 91 3f 45 	lds	r24, 0x453F	; 0x80453f <_ZZ9serial_RxhE11field_index>
    15b2:	48 2f       	mov	r20, r24
    15b4:	50 e0       	ldi	r21, 0x00	; 0
    15b6:	64 e1       	ldi	r22, 0x14	; 20
    15b8:	64 9f       	mul	r22, r20
    15ba:	c0 01       	movw	r24, r0
    15bc:	65 9f       	mul	r22, r21
    15be:	90 0d       	add	r25, r0
    15c0:	11 24       	eor	r1, r1
    15c2:	03 96       	adiw	r24, 0x03	; 3
    15c4:	82 0f       	add	r24, r18
    15c6:	93 1f       	adc	r25, r19
    15c8:	0e 94 54 7f 	call	0xfea8	; 0xfea8 <strlen>
    15cc:	80 93 40 45 	sts	0x4540, r24	; 0x804540 <_ZZ9serial_RxhE9field_len>
    15d0:	18 c0       	rjmp	.+48     	; 0x1602 <_Z9serial_Rxh+0x2a2>
					}
					else
					{
						buff->fields[field_index][0] = '\0';
    15d2:	20 91 06 45 	lds	r18, 0x4506	; 0x804506 <__data_end>
    15d6:	30 91 07 45 	lds	r19, 0x4507	; 0x804507 <__data_end+0x1>
    15da:	80 91 3f 45 	lds	r24, 0x453F	; 0x80453f <_ZZ9serial_RxhE11field_index>
    15de:	48 2f       	mov	r20, r24
    15e0:	50 e0       	ldi	r21, 0x00	; 0
    15e2:	64 e1       	ldi	r22, 0x14	; 20
    15e4:	64 9f       	mul	r22, r20
    15e6:	c0 01       	movw	r24, r0
    15e8:	65 9f       	mul	r22, r21
    15ea:	90 0d       	add	r25, r0
    15ec:	11 24       	eor	r1, r1
    15ee:	82 0f       	add	r24, r18
    15f0:	93 1f       	adc	r25, r19
    15f2:	03 96       	adiw	r24, 0x03	; 3
    15f4:	fc 01       	movw	r30, r24
    15f6:	10 82       	st	Z, r1
						field_index--;
    15f8:	80 91 3f 45 	lds	r24, 0x453F	; 0x80453f <_ZZ9serial_RxhE11field_index>
    15fc:	81 50       	subi	r24, 0x01	; 1
    15fe:	80 93 3f 45 	sts	0x453F, r24	; 0x80453f <_ZZ9serial_RxhE11field_index>
					}

					textBuff[charIndex] = '\0'; /* replace deleted char with null */
    1602:	80 91 09 45 	lds	r24, 0x4509	; 0x804509 <_ZZ9serial_RxhE9charIndex>
    1606:	88 2f       	mov	r24, r24
    1608:	90 e0       	ldi	r25, 0x00	; 0
    160a:	86 5f       	subi	r24, 0xF6	; 246
    160c:	9a 4b       	sbci	r25, 0xBA	; 186
    160e:	fc 01       	movw	r30, r24
    1610:	10 82       	st	Z, r1

					if(charIndex == 0)
    1612:	80 91 09 45 	lds	r24, 0x4509	; 0x804509 <_ZZ9serial_RxhE9charIndex>
    1616:	88 23       	and	r24, r24
    1618:	09 f0       	breq	.+2      	; 0x161c <_Z9serial_Rxh+0x2bc>
    161a:	1a c1       	rjmp	.+564    	; 0x1850 <_Z9serial_Rxh+0x4f0>
					{
						receiving_msg = false;
    161c:	10 92 3c 45 	sts	0x453C, r1	; 0x80453c <_ZZ9serial_RxhE13receiving_msg>
    1620:	17 c1       	rjmp	.+558    	; 0x1850 <_Z9serial_Rxh+0x4f0>
					}
				}
				else
				{
					if(rx_char == ' ')
    1622:	8a 85       	ldd	r24, Y+10	; 0x0a
    1624:	80 32       	cpi	r24, 0x20	; 32
    1626:	09 f0       	breq	.+2      	; 0x162a <_Z9serial_Rxh+0x2ca>
    1628:	55 c0       	rjmp	.+170    	; 0x16d4 <_Z9serial_Rxh+0x374>
					{
						if((textBuff[charIndex - 1] == ' ') || ((field_index + 1) >= LINKBUS_MAX_MSG_NUMBER_OF_FIELDS))
    162a:	80 91 09 45 	lds	r24, 0x4509	; 0x804509 <_ZZ9serial_RxhE9charIndex>
    162e:	88 2f       	mov	r24, r24
    1630:	90 e0       	ldi	r25, 0x00	; 0
    1632:	01 97       	sbiw	r24, 0x01	; 1
    1634:	86 5f       	subi	r24, 0xF6	; 246
    1636:	9a 4b       	sbci	r25, 0xBA	; 186
    1638:	fc 01       	movw	r30, r24
    163a:	80 81       	ld	r24, Z
    163c:	80 32       	cpi	r24, 0x20	; 32
    163e:	39 f0       	breq	.+14     	; 0x164e <_Z9serial_Rxh+0x2ee>
    1640:	80 91 3f 45 	lds	r24, 0x453F	; 0x80453f <_ZZ9serial_RxhE11field_index>
    1644:	88 2f       	mov	r24, r24
    1646:	90 e0       	ldi	r25, 0x00	; 0
    1648:	01 96       	adiw	r24, 0x01	; 1
    164a:	03 97       	sbiw	r24, 0x03	; 3
    164c:	14 f0       	brlt	.+4      	; 0x1652 <_Z9serial_Rxh+0x2f2>
						{
							rx_char = '\0';
    164e:	1a 86       	std	Y+10, r1	; 0x0a
    1650:	ff c0       	rjmp	.+510    	; 0x1850 <_Z9serial_Rxh+0x4f0>
						}
						else
						{
							if(field_index > 0)
    1652:	80 91 3f 45 	lds	r24, 0x453F	; 0x80453f <_ZZ9serial_RxhE11field_index>
    1656:	88 23       	and	r24, r24
    1658:	e1 f0       	breq	.+56     	; 0x1692 <_Z9serial_Rxh+0x332>
							{
								buff->fields[field_index - 1][field_len] = '\0';
    165a:	40 91 06 45 	lds	r20, 0x4506	; 0x804506 <__data_end>
    165e:	50 91 07 45 	lds	r21, 0x4507	; 0x804507 <__data_end+0x1>
    1662:	80 91 3f 45 	lds	r24, 0x453F	; 0x80453f <_ZZ9serial_RxhE11field_index>
    1666:	88 2f       	mov	r24, r24
    1668:	90 e0       	ldi	r25, 0x00	; 0
    166a:	bc 01       	movw	r22, r24
    166c:	61 50       	subi	r22, 0x01	; 1
    166e:	71 09       	sbc	r23, r1
    1670:	80 91 40 45 	lds	r24, 0x4540	; 0x804540 <_ZZ9serial_RxhE9field_len>
    1674:	88 2f       	mov	r24, r24
    1676:	90 e0       	ldi	r25, 0x00	; 0
    1678:	e4 e1       	ldi	r30, 0x14	; 20
    167a:	e6 9f       	mul	r30, r22
    167c:	90 01       	movw	r18, r0
    167e:	e7 9f       	mul	r30, r23
    1680:	30 0d       	add	r19, r0
    1682:	11 24       	eor	r1, r1
    1684:	24 0f       	add	r18, r20
    1686:	35 1f       	adc	r19, r21
    1688:	82 0f       	add	r24, r18
    168a:	93 1f       	adc	r25, r19
    168c:	03 96       	adiw	r24, 0x03	; 3
    168e:	fc 01       	movw	r30, r24
    1690:	10 82       	st	Z, r1
							}

							field_index++;
    1692:	80 91 3f 45 	lds	r24, 0x453F	; 0x80453f <_ZZ9serial_RxhE11field_index>
    1696:	8f 5f       	subi	r24, 0xFF	; 255
    1698:	80 93 3f 45 	sts	0x453F, r24	; 0x80453f <_ZZ9serial_RxhE11field_index>
							field_len = 0;
    169c:	10 92 40 45 	sts	0x4540, r1	; 0x804540 <_ZZ9serial_RxhE9field_len>
							charIndex = MIN(charIndex + 1, (LINKBUS_MAX_MSG_LENGTH - 1));
    16a0:	80 91 09 45 	lds	r24, 0x4509	; 0x804509 <_ZZ9serial_RxhE9charIndex>
    16a4:	88 2f       	mov	r24, r24
    16a6:	90 e0       	ldi	r25, 0x00	; 0
    16a8:	01 96       	adiw	r24, 0x01	; 1
    16aa:	8a 83       	std	Y+2, r24	; 0x02
    16ac:	9b 83       	std	Y+3, r25	; 0x03
    16ae:	81 e3       	ldi	r24, 0x31	; 49
    16b0:	90 e0       	ldi	r25, 0x00	; 0
    16b2:	8c 83       	std	Y+4, r24	; 0x04
    16b4:	9d 83       	std	Y+5, r25	; 0x05
    16b6:	2a 81       	ldd	r18, Y+2	; 0x02
    16b8:	3b 81       	ldd	r19, Y+3	; 0x03
    16ba:	8c 81       	ldd	r24, Y+4	; 0x04
    16bc:	9d 81       	ldd	r25, Y+5	; 0x05
    16be:	28 17       	cp	r18, r24
    16c0:	39 07       	cpc	r19, r25
    16c2:	1c f4       	brge	.+6      	; 0x16ca <_Z9serial_Rxh+0x36a>
    16c4:	8a 81       	ldd	r24, Y+2	; 0x02
    16c6:	9b 81       	ldd	r25, Y+3	; 0x03
    16c8:	02 c0       	rjmp	.+4      	; 0x16ce <_Z9serial_Rxh+0x36e>
    16ca:	8c 81       	ldd	r24, Y+4	; 0x04
    16cc:	9d 81       	ldd	r25, Y+5	; 0x05
    16ce:	80 93 09 45 	sts	0x4509, r24	; 0x804509 <_ZZ9serial_RxhE9charIndex>
    16d2:	be c0       	rjmp	.+380    	; 0x1850 <_Z9serial_Rxh+0x4f0>
						}
					}
					else if(field_len < LINKBUS_MAX_MSG_FIELD_LENGTH)
    16d4:	80 91 40 45 	lds	r24, 0x4540	; 0x804540 <_ZZ9serial_RxhE9field_len>
    16d8:	85 31       	cpi	r24, 0x15	; 21
    16da:	08 f0       	brcs	.+2      	; 0x16de <_Z9serial_Rxh+0x37e>
    16dc:	77 c0       	rjmp	.+238    	; 0x17cc <_Z9serial_Rxh+0x46c>
					{
						if(field_index == 0)    /* message ID received */
    16de:	80 91 3f 45 	lds	r24, 0x453F	; 0x80453f <_ZZ9serial_RxhE11field_index>
    16e2:	88 23       	and	r24, r24
    16e4:	e1 f4       	brne	.+56     	; 0x171e <_Z9serial_Rxh+0x3be>
						{
							msg_ID = msg_ID * 10 + rx_char;
    16e6:	80 91 3d 45 	lds	r24, 0x453D	; 0x80453d <_ZZ9serial_RxhE6msg_ID>
    16ea:	90 91 3e 45 	lds	r25, 0x453E	; 0x80453e <_ZZ9serial_RxhE6msg_ID+0x1>
    16ee:	88 0f       	add	r24, r24
    16f0:	99 1f       	adc	r25, r25
    16f2:	9c 01       	movw	r18, r24
    16f4:	22 0f       	add	r18, r18
    16f6:	33 1f       	adc	r19, r19
    16f8:	22 0f       	add	r18, r18
    16fa:	33 1f       	adc	r19, r19
    16fc:	28 0f       	add	r18, r24
    16fe:	39 1f       	adc	r19, r25
    1700:	8a 85       	ldd	r24, Y+10	; 0x0a
    1702:	88 2f       	mov	r24, r24
    1704:	90 e0       	ldi	r25, 0x00	; 0
    1706:	82 0f       	add	r24, r18
    1708:	93 1f       	adc	r25, r19
    170a:	80 93 3d 45 	sts	0x453D, r24	; 0x80453d <_ZZ9serial_RxhE6msg_ID>
    170e:	90 93 3e 45 	sts	0x453E, r25	; 0x80453e <_ZZ9serial_RxhE6msg_ID+0x1>
							field_len++;
    1712:	80 91 40 45 	lds	r24, 0x4540	; 0x804540 <_ZZ9serial_RxhE9field_len>
    1716:	8f 5f       	subi	r24, 0xFF	; 255
    1718:	80 93 40 45 	sts	0x4540, r24	; 0x804540 <_ZZ9serial_RxhE9field_len>
    171c:	3d c0       	rjmp	.+122    	; 0x1798 <_Z9serial_Rxh+0x438>
						}
						else
						{
							buff->fields[field_index - 1][field_len++] = rx_char;
    171e:	40 91 06 45 	lds	r20, 0x4506	; 0x804506 <__data_end>
    1722:	50 91 07 45 	lds	r21, 0x4507	; 0x804507 <__data_end+0x1>
    1726:	80 91 3f 45 	lds	r24, 0x453F	; 0x80453f <_ZZ9serial_RxhE11field_index>
    172a:	88 2f       	mov	r24, r24
    172c:	90 e0       	ldi	r25, 0x00	; 0
    172e:	bc 01       	movw	r22, r24
    1730:	61 50       	subi	r22, 0x01	; 1
    1732:	71 09       	sbc	r23, r1
    1734:	80 91 40 45 	lds	r24, 0x4540	; 0x804540 <_ZZ9serial_RxhE9field_len>
    1738:	91 e0       	ldi	r25, 0x01	; 1
    173a:	98 0f       	add	r25, r24
    173c:	90 93 40 45 	sts	0x4540, r25	; 0x804540 <_ZZ9serial_RxhE9field_len>
    1740:	88 2f       	mov	r24, r24
    1742:	90 e0       	ldi	r25, 0x00	; 0
    1744:	e4 e1       	ldi	r30, 0x14	; 20
    1746:	e6 9f       	mul	r30, r22
    1748:	90 01       	movw	r18, r0
    174a:	e7 9f       	mul	r30, r23
    174c:	30 0d       	add	r19, r0
    174e:	11 24       	eor	r1, r1
    1750:	24 0f       	add	r18, r20
    1752:	35 1f       	adc	r19, r21
    1754:	82 0f       	add	r24, r18
    1756:	93 1f       	adc	r25, r19
    1758:	03 96       	adiw	r24, 0x03	; 3
    175a:	2a 85       	ldd	r18, Y+10	; 0x0a
    175c:	fc 01       	movw	r30, r24
    175e:	20 83       	st	Z, r18
							buff->fields[field_index - 1][field_len] = '\0';
    1760:	40 91 06 45 	lds	r20, 0x4506	; 0x804506 <__data_end>
    1764:	50 91 07 45 	lds	r21, 0x4507	; 0x804507 <__data_end+0x1>
    1768:	80 91 3f 45 	lds	r24, 0x453F	; 0x80453f <_ZZ9serial_RxhE11field_index>
    176c:	88 2f       	mov	r24, r24
    176e:	90 e0       	ldi	r25, 0x00	; 0
    1770:	bc 01       	movw	r22, r24
    1772:	61 50       	subi	r22, 0x01	; 1
    1774:	71 09       	sbc	r23, r1
    1776:	80 91 40 45 	lds	r24, 0x4540	; 0x804540 <_ZZ9serial_RxhE9field_len>
    177a:	88 2f       	mov	r24, r24
    177c:	90 e0       	ldi	r25, 0x00	; 0
    177e:	e4 e1       	ldi	r30, 0x14	; 20
    1780:	e6 9f       	mul	r30, r22
    1782:	90 01       	movw	r18, r0
    1784:	e7 9f       	mul	r30, r23
    1786:	30 0d       	add	r19, r0
    1788:	11 24       	eor	r1, r1
    178a:	24 0f       	add	r18, r20
    178c:	35 1f       	adc	r19, r21
    178e:	82 0f       	add	r24, r18
    1790:	93 1f       	adc	r25, r19
    1792:	03 96       	adiw	r24, 0x03	; 3
    1794:	fc 01       	movw	r30, r24
    1796:	10 82       	st	Z, r1
						}

						charIndex = MIN(charIndex + 1, (LINKBUS_MAX_MSG_LENGTH - 1));
    1798:	80 91 09 45 	lds	r24, 0x4509	; 0x804509 <_ZZ9serial_RxhE9charIndex>
    179c:	88 2f       	mov	r24, r24
    179e:	90 e0       	ldi	r25, 0x00	; 0
    17a0:	01 96       	adiw	r24, 0x01	; 1
    17a2:	8e 83       	std	Y+6, r24	; 0x06
    17a4:	9f 83       	std	Y+7, r25	; 0x07
    17a6:	81 e3       	ldi	r24, 0x31	; 49
    17a8:	90 e0       	ldi	r25, 0x00	; 0
    17aa:	88 87       	std	Y+8, r24	; 0x08
    17ac:	99 87       	std	Y+9, r25	; 0x09
    17ae:	2e 81       	ldd	r18, Y+6	; 0x06
    17b0:	3f 81       	ldd	r19, Y+7	; 0x07
    17b2:	88 85       	ldd	r24, Y+8	; 0x08
    17b4:	99 85       	ldd	r25, Y+9	; 0x09
    17b6:	28 17       	cp	r18, r24
    17b8:	39 07       	cpc	r19, r25
    17ba:	1c f4       	brge	.+6      	; 0x17c2 <_Z9serial_Rxh+0x462>
    17bc:	8e 81       	ldd	r24, Y+6	; 0x06
    17be:	9f 81       	ldd	r25, Y+7	; 0x07
    17c0:	02 c0       	rjmp	.+4      	; 0x17c6 <_Z9serial_Rxh+0x466>
    17c2:	88 85       	ldd	r24, Y+8	; 0x08
    17c4:	99 85       	ldd	r25, Y+9	; 0x09
    17c6:	80 93 09 45 	sts	0x4509, r24	; 0x804509 <_ZZ9serial_RxhE9charIndex>
    17ca:	42 c0       	rjmp	.+132    	; 0x1850 <_Z9serial_Rxh+0x4f0>
					}
					else
					{
						rx_char = '\0';
    17cc:	1a 86       	std	Y+10, r1	; 0x0a
    17ce:	40 c0       	rjmp	.+128    	; 0x1850 <_Z9serial_Rxh+0x4f0>
					}
				}
			}
			else
			{
				if(rx_char == 0x7F) /* Handle Backspace */
    17d0:	8a 85       	ldd	r24, Y+10	; 0x0a
    17d2:	8f 37       	cpi	r24, 0x7F	; 127
    17d4:	69 f4       	brne	.+26     	; 0x17f0 <_Z9serial_Rxh+0x490>
				{
					if(msg_ID <= 0)
    17d6:	80 91 3d 45 	lds	r24, 0x453D	; 0x80453d <_ZZ9serial_RxhE6msg_ID>
    17da:	90 91 3e 45 	lds	r25, 0x453E	; 0x80453e <_ZZ9serial_RxhE6msg_ID+0x1>
    17de:	18 16       	cp	r1, r24
    17e0:	19 06       	cpc	r1, r25
    17e2:	0c f0       	brlt	.+2      	; 0x17e6 <_Z9serial_Rxh+0x486>
					{
						rx_char = '\0';
    17e4:	1a 86       	std	Y+10, r1	; 0x0a
					}

					msg_ID = 0;
    17e6:	10 92 3d 45 	sts	0x453D, r1	; 0x80453d <_ZZ9serial_RxhE6msg_ID>
    17ea:	10 92 3e 45 	sts	0x453E, r1	; 0x80453e <_ZZ9serial_RxhE6msg_ID+0x1>
    17ee:	30 c0       	rjmp	.+96     	; 0x1850 <_Z9serial_Rxh+0x4f0>
				}
				else if(rx_char == ' ') /* Handle Space */
    17f0:	8a 85       	ldd	r24, Y+10	; 0x0a
    17f2:	80 32       	cpi	r24, 0x20	; 32
    17f4:	11 f4       	brne	.+4      	; 0x17fa <_Z9serial_Rxh+0x49a>
				{
					rx_char = '\0';
    17f6:	1a 86       	std	Y+10, r1	; 0x0a
    17f8:	2b c0       	rjmp	.+86     	; 0x1850 <_Z9serial_Rxh+0x4f0>
				}
				else                    /* start of new message */
				{
					uint8_t i;
					field_index = 0;
    17fa:	10 92 3f 45 	sts	0x453F, r1	; 0x80453f <_ZZ9serial_RxhE11field_index>
					msg_ID = rx_char;
    17fe:	8a 85       	ldd	r24, Y+10	; 0x0a
    1800:	88 2f       	mov	r24, r24
    1802:	90 e0       	ldi	r25, 0x00	; 0
    1804:	80 93 3d 45 	sts	0x453D, r24	; 0x80453d <_ZZ9serial_RxhE6msg_ID>
    1808:	90 93 3e 45 	sts	0x453E, r25	; 0x80453e <_ZZ9serial_RxhE6msg_ID+0x1>

					/* Empty the field buffers */
					for(i = 0; i < LINKBUS_MAX_MSG_NUMBER_OF_FIELDS; i++)
    180c:	19 82       	std	Y+1, r1	; 0x01
    180e:	89 81       	ldd	r24, Y+1	; 0x01
    1810:	83 30       	cpi	r24, 0x03	; 3
    1812:	b0 f4       	brcc	.+44     	; 0x1840 <_Z9serial_Rxh+0x4e0>
					{
						buff->fields[i][0] = '\0';
    1814:	20 91 06 45 	lds	r18, 0x4506	; 0x804506 <__data_end>
    1818:	30 91 07 45 	lds	r19, 0x4507	; 0x804507 <__data_end+0x1>
    181c:	89 81       	ldd	r24, Y+1	; 0x01
    181e:	48 2f       	mov	r20, r24
    1820:	50 e0       	ldi	r21, 0x00	; 0
    1822:	64 e1       	ldi	r22, 0x14	; 20
    1824:	64 9f       	mul	r22, r20
    1826:	c0 01       	movw	r24, r0
    1828:	65 9f       	mul	r22, r21
    182a:	90 0d       	add	r25, r0
    182c:	11 24       	eor	r1, r1
    182e:	82 0f       	add	r24, r18
    1830:	93 1f       	adc	r25, r19
    1832:	03 96       	adiw	r24, 0x03	; 3
    1834:	fc 01       	movw	r30, r24
    1836:	10 82       	st	Z, r1
					uint8_t i;
					field_index = 0;
					msg_ID = rx_char;

					/* Empty the field buffers */
					for(i = 0; i < LINKBUS_MAX_MSG_NUMBER_OF_FIELDS; i++)
    1838:	89 81       	ldd	r24, Y+1	; 0x01
    183a:	8f 5f       	subi	r24, 0xFF	; 255
    183c:	89 83       	std	Y+1, r24	; 0x01
    183e:	e7 cf       	rjmp	.-50     	; 0x180e <_Z9serial_Rxh+0x4ae>
					{
						buff->fields[i][0] = '\0';
					}

					receiving_msg = true;
    1840:	81 e0       	ldi	r24, 0x01	; 1
    1842:	80 93 3c 45 	sts	0x453C, r24	; 0x80453c <_ZZ9serial_RxhE13receiving_msg>
					charIndex++;
    1846:	80 91 09 45 	lds	r24, 0x4509	; 0x804509 <_ZZ9serial_RxhE9charIndex>
    184a:	8f 5f       	subi	r24, 0xFF	; 255
    184c:	80 93 09 45 	sts	0x4509, r24	; 0x804509 <_ZZ9serial_RxhE9charIndex>
				}
			}

			if(rx_char)
    1850:	8a 85       	ldd	r24, Y+10	; 0x0a
    1852:	88 23       	and	r24, r24
    1854:	19 f0       	breq	.+6      	; 0x185c <_Z9serial_Rxh+0x4fc>
			{
				sb_echo_char(rx_char);
    1856:	8a 85       	ldd	r24, Y+10	; 0x0a
    1858:	0e 94 c8 67 	call	0xcf90	; 0xcf90 <sb_echo_char>
			}
		}
	}	
}
    185c:	00 00       	nop
    185e:	2a 96       	adiw	r28, 0x0a	; 10
    1860:	cd bf       	out	0x3d, r28	; 61
    1862:	de bf       	out	0x3e, r29	; 62
    1864:	df 91       	pop	r29
    1866:	cf 91       	pop	r28
    1868:	08 95       	ret

0000186a <__vector_20>:

/**

*/
ISR(USART0_DRE_vect)
{
    186a:	1f 92       	push	r1
    186c:	0f 92       	push	r0
    186e:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    1872:	0f 92       	push	r0
    1874:	11 24       	eor	r1, r1
    1876:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    187a:	0f 92       	push	r0
    187c:	2f 93       	push	r18
    187e:	3f 93       	push	r19
    1880:	4f 93       	push	r20
    1882:	5f 93       	push	r21
    1884:	6f 93       	push	r22
    1886:	7f 93       	push	r23
    1888:	8f 93       	push	r24
    188a:	9f 93       	push	r25
    188c:	af 93       	push	r26
    188e:	bf 93       	push	r27
    1890:	ef 93       	push	r30
    1892:	ff 93       	push	r31
    1894:	cf 93       	push	r28
    1896:	df 93       	push	r29
    1898:	cd b7       	in	r28, 0x3d	; 61
    189a:	de b7       	in	r29, 0x3e	; 62
	if(g_linkbus_usart_number == USART_0)
    189c:	80 91 4e 40 	lds	r24, 0x404E	; 0x80404e <g_linkbus_usart_number>
    18a0:	88 23       	and	r24, r24
    18a2:	09 f0       	breq	.+2      	; 0x18a6 <__vector_20+0x3c>
    18a4:	45 c0       	rjmp	.+138    	; 0x1930 <__vector_20+0xc6>
	{
		static LinkbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
    18a6:	80 91 41 45 	lds	r24, 0x4541	; 0x804541 <_ZZ11__vector_20E4buff>
    18aa:	90 91 42 45 	lds	r25, 0x4542	; 0x804542 <_ZZ11__vector_20E4buff+0x1>
    18ae:	89 2b       	or	r24, r25
    18b0:	31 f4       	brne	.+12     	; 0x18be <__vector_20+0x54>
		{
			buff = nextFullLBTxBuffer();
    18b2:	0e 94 c5 5c 	call	0xb98a	; 0xb98a <_Z18nextFullLBTxBufferv>
    18b6:	80 93 41 45 	sts	0x4541, r24	; 0x804541 <_ZZ11__vector_20E4buff>
    18ba:	90 93 42 45 	sts	0x4542, r25	; 0x804542 <_ZZ11__vector_20E4buff+0x1>
		}

		if((*buff)[charIndex])
    18be:	20 91 41 45 	lds	r18, 0x4541	; 0x804541 <_ZZ11__vector_20E4buff>
    18c2:	30 91 42 45 	lds	r19, 0x4542	; 0x804542 <_ZZ11__vector_20E4buff+0x1>
    18c6:	80 91 43 45 	lds	r24, 0x4543	; 0x804543 <_ZZ11__vector_20E9charIndex>
    18ca:	88 2f       	mov	r24, r24
    18cc:	90 e0       	ldi	r25, 0x00	; 0
    18ce:	82 0f       	add	r24, r18
    18d0:	93 1f       	adc	r25, r19
    18d2:	fc 01       	movw	r30, r24
    18d4:	80 81       	ld	r24, Z
    18d6:	88 23       	and	r24, r24
    18d8:	a9 f0       	breq	.+42     	; 0x1904 <__vector_20+0x9a>
		{
			/* Put data into buffer, sends the data */
			USART0.TXDATAL = (*buff)[charIndex++];
    18da:	80 e0       	ldi	r24, 0x00	; 0
    18dc:	98 e0       	ldi	r25, 0x08	; 8
    18de:	40 91 41 45 	lds	r20, 0x4541	; 0x804541 <_ZZ11__vector_20E4buff>
    18e2:	50 91 42 45 	lds	r21, 0x4542	; 0x804542 <_ZZ11__vector_20E4buff+0x1>
    18e6:	20 91 43 45 	lds	r18, 0x4543	; 0x804543 <_ZZ11__vector_20E9charIndex>
    18ea:	31 e0       	ldi	r19, 0x01	; 1
    18ec:	32 0f       	add	r19, r18
    18ee:	30 93 43 45 	sts	0x4543, r19	; 0x804543 <_ZZ11__vector_20E9charIndex>
    18f2:	22 2f       	mov	r18, r18
    18f4:	30 e0       	ldi	r19, 0x00	; 0
    18f6:	24 0f       	add	r18, r20
    18f8:	35 1f       	adc	r19, r21
    18fa:	f9 01       	movw	r30, r18
    18fc:	20 81       	ld	r18, Z
    18fe:	fc 01       	movw	r30, r24
    1900:	22 83       	std	Z+2, r18	; 0x02
    1902:	16 c0       	rjmp	.+44     	; 0x1930 <__vector_20+0xc6>
		}
		else
		{
			charIndex = 0;
    1904:	10 92 43 45 	sts	0x4543, r1	; 0x804543 <_ZZ11__vector_20E9charIndex>
			(*buff)[0] = '\0';
    1908:	80 91 41 45 	lds	r24, 0x4541	; 0x804541 <_ZZ11__vector_20E4buff>
    190c:	90 91 42 45 	lds	r25, 0x4542	; 0x804542 <_ZZ11__vector_20E4buff+0x1>
    1910:	fc 01       	movw	r30, r24
    1912:	10 82       	st	Z, r1
			buff = nextFullLBTxBuffer();
    1914:	0e 94 c5 5c 	call	0xb98a	; 0xb98a <_Z18nextFullLBTxBufferv>
    1918:	80 93 41 45 	sts	0x4541, r24	; 0x804541 <_ZZ11__vector_20E4buff>
    191c:	90 93 42 45 	sts	0x4542, r25	; 0x804542 <_ZZ11__vector_20E4buff+0x1>
			if(!buff)
    1920:	80 91 41 45 	lds	r24, 0x4541	; 0x804541 <_ZZ11__vector_20E4buff>
    1924:	90 91 42 45 	lds	r25, 0x4542	; 0x804542 <_ZZ11__vector_20E4buff+0x1>
    1928:	89 2b       	or	r24, r25
    192a:	11 f4       	brne	.+4      	; 0x1930 <__vector_20+0xc6>
			{
				linkbus_end_tx();
    192c:	0e 94 0a 5e 	call	0xbc14	; 0xbc14 <_Z14linkbus_end_txv>
			}
		}
	}
	
	if(g_serialbus_usart_number == USART_0)
    1930:	80 91 54 40 	lds	r24, 0x4054	; 0x804054 <g_serialbus_usart_number>
    1934:	88 23       	and	r24, r24
    1936:	09 f0       	breq	.+2      	; 0x193a <__vector_20+0xd0>
    1938:	45 c0       	rjmp	.+138    	; 0x19c4 <__vector_20+0x15a>
	{
		static SerialbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
    193a:	80 91 44 45 	lds	r24, 0x4544	; 0x804544 <_ZZ11__vector_20E4buff_0>
    193e:	90 91 45 45 	lds	r25, 0x4545	; 0x804545 <_ZZ11__vector_20E4buff_0+0x1>
    1942:	89 2b       	or	r24, r25
    1944:	31 f4       	brne	.+12     	; 0x1952 <__vector_20+0xe8>
		{
			buff = nextFullSBTxBuffer();
    1946:	0e 94 80 65 	call	0xcb00	; 0xcb00 <nextFullSBTxBuffer>
    194a:	80 93 44 45 	sts	0x4544, r24	; 0x804544 <_ZZ11__vector_20E4buff_0>
    194e:	90 93 45 45 	sts	0x4545, r25	; 0x804545 <_ZZ11__vector_20E4buff_0+0x1>
		}

		if((*buff)[charIndex])
    1952:	20 91 44 45 	lds	r18, 0x4544	; 0x804544 <_ZZ11__vector_20E4buff_0>
    1956:	30 91 45 45 	lds	r19, 0x4545	; 0x804545 <_ZZ11__vector_20E4buff_0+0x1>
    195a:	80 91 46 45 	lds	r24, 0x4546	; 0x804546 <_ZZ11__vector_20E9charIndex_0>
    195e:	88 2f       	mov	r24, r24
    1960:	90 e0       	ldi	r25, 0x00	; 0
    1962:	82 0f       	add	r24, r18
    1964:	93 1f       	adc	r25, r19
    1966:	fc 01       	movw	r30, r24
    1968:	80 81       	ld	r24, Z
    196a:	88 23       	and	r24, r24
    196c:	a9 f0       	breq	.+42     	; 0x1998 <__vector_20+0x12e>
		{
			/* Put data into buffer, sends the data */
			USART0.TXDATAL = (*buff)[charIndex++];
    196e:	80 e0       	ldi	r24, 0x00	; 0
    1970:	98 e0       	ldi	r25, 0x08	; 8
    1972:	40 91 44 45 	lds	r20, 0x4544	; 0x804544 <_ZZ11__vector_20E4buff_0>
    1976:	50 91 45 45 	lds	r21, 0x4545	; 0x804545 <_ZZ11__vector_20E4buff_0+0x1>
    197a:	20 91 46 45 	lds	r18, 0x4546	; 0x804546 <_ZZ11__vector_20E9charIndex_0>
    197e:	31 e0       	ldi	r19, 0x01	; 1
    1980:	32 0f       	add	r19, r18
    1982:	30 93 46 45 	sts	0x4546, r19	; 0x804546 <_ZZ11__vector_20E9charIndex_0>
    1986:	22 2f       	mov	r18, r18
    1988:	30 e0       	ldi	r19, 0x00	; 0
    198a:	24 0f       	add	r18, r20
    198c:	35 1f       	adc	r19, r21
    198e:	f9 01       	movw	r30, r18
    1990:	20 81       	ld	r18, Z
    1992:	fc 01       	movw	r30, r24
    1994:	22 83       	std	Z+2, r18	; 0x02
			{
				serialbus_end_tx();
			}
		}
	}
}
    1996:	16 c0       	rjmp	.+44     	; 0x19c4 <__vector_20+0x15a>
			/* Put data into buffer, sends the data */
			USART0.TXDATAL = (*buff)[charIndex++];
		}
		else
		{
			charIndex = 0;
    1998:	10 92 46 45 	sts	0x4546, r1	; 0x804546 <_ZZ11__vector_20E9charIndex_0>
			(*buff)[0] = '\0';
    199c:	80 91 44 45 	lds	r24, 0x4544	; 0x804544 <_ZZ11__vector_20E4buff_0>
    19a0:	90 91 45 45 	lds	r25, 0x4545	; 0x804545 <_ZZ11__vector_20E4buff_0+0x1>
    19a4:	fc 01       	movw	r30, r24
    19a6:	10 82       	st	Z, r1
			buff = nextFullSBTxBuffer();
    19a8:	0e 94 80 65 	call	0xcb00	; 0xcb00 <nextFullSBTxBuffer>
    19ac:	80 93 44 45 	sts	0x4544, r24	; 0x804544 <_ZZ11__vector_20E4buff_0>
    19b0:	90 93 45 45 	sts	0x4545, r25	; 0x804545 <_ZZ11__vector_20E4buff_0+0x1>
			if(!buff)
    19b4:	80 91 44 45 	lds	r24, 0x4544	; 0x804544 <_ZZ11__vector_20E4buff_0>
    19b8:	90 91 45 45 	lds	r25, 0x4545	; 0x804545 <_ZZ11__vector_20E4buff_0+0x1>
    19bc:	89 2b       	or	r24, r25
    19be:	11 f4       	brne	.+4      	; 0x19c4 <__vector_20+0x15a>
			{
				serialbus_end_tx();
    19c0:	0e 94 89 66 	call	0xcd12	; 0xcd12 <serialbus_end_tx>
			}
		}
	}
}
    19c4:	00 00       	nop
    19c6:	df 91       	pop	r29
    19c8:	cf 91       	pop	r28
    19ca:	ff 91       	pop	r31
    19cc:	ef 91       	pop	r30
    19ce:	bf 91       	pop	r27
    19d0:	af 91       	pop	r26
    19d2:	9f 91       	pop	r25
    19d4:	8f 91       	pop	r24
    19d6:	7f 91       	pop	r23
    19d8:	6f 91       	pop	r22
    19da:	5f 91       	pop	r21
    19dc:	4f 91       	pop	r20
    19de:	3f 91       	pop	r19
    19e0:	2f 91       	pop	r18
    19e2:	0f 90       	pop	r0
    19e4:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    19e8:	0f 90       	pop	r0
    19ea:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    19ee:	0f 90       	pop	r0
    19f0:	1f 90       	pop	r1
    19f2:	18 95       	reti

000019f4 <__vector_56>:

/**

*/
ISR(USART4_DRE_vect)
{
    19f4:	1f 92       	push	r1
    19f6:	0f 92       	push	r0
    19f8:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    19fc:	0f 92       	push	r0
    19fe:	11 24       	eor	r1, r1
    1a00:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    1a04:	0f 92       	push	r0
    1a06:	2f 93       	push	r18
    1a08:	3f 93       	push	r19
    1a0a:	4f 93       	push	r20
    1a0c:	5f 93       	push	r21
    1a0e:	6f 93       	push	r22
    1a10:	7f 93       	push	r23
    1a12:	8f 93       	push	r24
    1a14:	9f 93       	push	r25
    1a16:	af 93       	push	r26
    1a18:	bf 93       	push	r27
    1a1a:	ef 93       	push	r30
    1a1c:	ff 93       	push	r31
    1a1e:	cf 93       	push	r28
    1a20:	df 93       	push	r29
    1a22:	cd b7       	in	r28, 0x3d	; 61
    1a24:	de b7       	in	r29, 0x3e	; 62
	if(g_linkbus_usart_number == USART_4)
    1a26:	80 91 4e 40 	lds	r24, 0x404E	; 0x80404e <g_linkbus_usart_number>
    1a2a:	84 30       	cpi	r24, 0x04	; 4
    1a2c:	09 f0       	breq	.+2      	; 0x1a30 <__vector_56+0x3c>
    1a2e:	45 c0       	rjmp	.+138    	; 0x1aba <__vector_56+0xc6>
	{
		static LinkbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
    1a30:	80 91 47 45 	lds	r24, 0x4547	; 0x804547 <_ZZ11__vector_56E4buff>
    1a34:	90 91 48 45 	lds	r25, 0x4548	; 0x804548 <_ZZ11__vector_56E4buff+0x1>
    1a38:	89 2b       	or	r24, r25
    1a3a:	31 f4       	brne	.+12     	; 0x1a48 <__vector_56+0x54>
		{
			buff = nextFullLBTxBuffer();
    1a3c:	0e 94 c5 5c 	call	0xb98a	; 0xb98a <_Z18nextFullLBTxBufferv>
    1a40:	80 93 47 45 	sts	0x4547, r24	; 0x804547 <_ZZ11__vector_56E4buff>
    1a44:	90 93 48 45 	sts	0x4548, r25	; 0x804548 <_ZZ11__vector_56E4buff+0x1>
		}

		if((*buff)[charIndex])
    1a48:	20 91 47 45 	lds	r18, 0x4547	; 0x804547 <_ZZ11__vector_56E4buff>
    1a4c:	30 91 48 45 	lds	r19, 0x4548	; 0x804548 <_ZZ11__vector_56E4buff+0x1>
    1a50:	80 91 49 45 	lds	r24, 0x4549	; 0x804549 <_ZZ11__vector_56E9charIndex>
    1a54:	88 2f       	mov	r24, r24
    1a56:	90 e0       	ldi	r25, 0x00	; 0
    1a58:	82 0f       	add	r24, r18
    1a5a:	93 1f       	adc	r25, r19
    1a5c:	fc 01       	movw	r30, r24
    1a5e:	80 81       	ld	r24, Z
    1a60:	88 23       	and	r24, r24
    1a62:	a9 f0       	breq	.+42     	; 0x1a8e <__vector_56+0x9a>
		{
			/* Put data into buffer, sends the data */
			USART4.TXDATAL = (*buff)[charIndex++];
    1a64:	80 e8       	ldi	r24, 0x80	; 128
    1a66:	98 e0       	ldi	r25, 0x08	; 8
    1a68:	40 91 47 45 	lds	r20, 0x4547	; 0x804547 <_ZZ11__vector_56E4buff>
    1a6c:	50 91 48 45 	lds	r21, 0x4548	; 0x804548 <_ZZ11__vector_56E4buff+0x1>
    1a70:	20 91 49 45 	lds	r18, 0x4549	; 0x804549 <_ZZ11__vector_56E9charIndex>
    1a74:	31 e0       	ldi	r19, 0x01	; 1
    1a76:	32 0f       	add	r19, r18
    1a78:	30 93 49 45 	sts	0x4549, r19	; 0x804549 <_ZZ11__vector_56E9charIndex>
    1a7c:	22 2f       	mov	r18, r18
    1a7e:	30 e0       	ldi	r19, 0x00	; 0
    1a80:	24 0f       	add	r18, r20
    1a82:	35 1f       	adc	r19, r21
    1a84:	f9 01       	movw	r30, r18
    1a86:	20 81       	ld	r18, Z
    1a88:	fc 01       	movw	r30, r24
    1a8a:	22 83       	std	Z+2, r18	; 0x02
    1a8c:	16 c0       	rjmp	.+44     	; 0x1aba <__vector_56+0xc6>
		}
		else
		{
			charIndex = 0;
    1a8e:	10 92 49 45 	sts	0x4549, r1	; 0x804549 <_ZZ11__vector_56E9charIndex>
			(*buff)[0] = '\0';
    1a92:	80 91 47 45 	lds	r24, 0x4547	; 0x804547 <_ZZ11__vector_56E4buff>
    1a96:	90 91 48 45 	lds	r25, 0x4548	; 0x804548 <_ZZ11__vector_56E4buff+0x1>
    1a9a:	fc 01       	movw	r30, r24
    1a9c:	10 82       	st	Z, r1
			buff = nextFullLBTxBuffer();
    1a9e:	0e 94 c5 5c 	call	0xb98a	; 0xb98a <_Z18nextFullLBTxBufferv>
    1aa2:	80 93 47 45 	sts	0x4547, r24	; 0x804547 <_ZZ11__vector_56E4buff>
    1aa6:	90 93 48 45 	sts	0x4548, r25	; 0x804548 <_ZZ11__vector_56E4buff+0x1>
			if(!buff)
    1aaa:	80 91 47 45 	lds	r24, 0x4547	; 0x804547 <_ZZ11__vector_56E4buff>
    1aae:	90 91 48 45 	lds	r25, 0x4548	; 0x804548 <_ZZ11__vector_56E4buff+0x1>
    1ab2:	89 2b       	or	r24, r25
    1ab4:	11 f4       	brne	.+4      	; 0x1aba <__vector_56+0xc6>
			{
				linkbus_end_tx();
    1ab6:	0e 94 0a 5e 	call	0xbc14	; 0xbc14 <_Z14linkbus_end_txv>
			}
		}
	}
	
	if(g_serialbus_usart_number == USART_4)
    1aba:	80 91 54 40 	lds	r24, 0x4054	; 0x804054 <g_serialbus_usart_number>
    1abe:	84 30       	cpi	r24, 0x04	; 4
    1ac0:	09 f0       	breq	.+2      	; 0x1ac4 <__vector_56+0xd0>
    1ac2:	45 c0       	rjmp	.+138    	; 0x1b4e <__vector_56+0x15a>
	{
		static SerialbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
    1ac4:	80 91 4a 45 	lds	r24, 0x454A	; 0x80454a <_ZZ11__vector_56E4buff_0>
    1ac8:	90 91 4b 45 	lds	r25, 0x454B	; 0x80454b <_ZZ11__vector_56E4buff_0+0x1>
    1acc:	89 2b       	or	r24, r25
    1ace:	31 f4       	brne	.+12     	; 0x1adc <__vector_56+0xe8>
		{
			buff = nextFullSBTxBuffer();
    1ad0:	0e 94 80 65 	call	0xcb00	; 0xcb00 <nextFullSBTxBuffer>
    1ad4:	80 93 4a 45 	sts	0x454A, r24	; 0x80454a <_ZZ11__vector_56E4buff_0>
    1ad8:	90 93 4b 45 	sts	0x454B, r25	; 0x80454b <_ZZ11__vector_56E4buff_0+0x1>
		}

		if((*buff)[charIndex])
    1adc:	20 91 4a 45 	lds	r18, 0x454A	; 0x80454a <_ZZ11__vector_56E4buff_0>
    1ae0:	30 91 4b 45 	lds	r19, 0x454B	; 0x80454b <_ZZ11__vector_56E4buff_0+0x1>
    1ae4:	80 91 4c 45 	lds	r24, 0x454C	; 0x80454c <_ZZ11__vector_56E9charIndex_0>
    1ae8:	88 2f       	mov	r24, r24
    1aea:	90 e0       	ldi	r25, 0x00	; 0
    1aec:	82 0f       	add	r24, r18
    1aee:	93 1f       	adc	r25, r19
    1af0:	fc 01       	movw	r30, r24
    1af2:	80 81       	ld	r24, Z
    1af4:	88 23       	and	r24, r24
    1af6:	a9 f0       	breq	.+42     	; 0x1b22 <__vector_56+0x12e>
		{
			/* Put data into buffer, sends the data */
			USART4.TXDATAL = (*buff)[charIndex++];
    1af8:	80 e8       	ldi	r24, 0x80	; 128
    1afa:	98 e0       	ldi	r25, 0x08	; 8
    1afc:	40 91 4a 45 	lds	r20, 0x454A	; 0x80454a <_ZZ11__vector_56E4buff_0>
    1b00:	50 91 4b 45 	lds	r21, 0x454B	; 0x80454b <_ZZ11__vector_56E4buff_0+0x1>
    1b04:	20 91 4c 45 	lds	r18, 0x454C	; 0x80454c <_ZZ11__vector_56E9charIndex_0>
    1b08:	31 e0       	ldi	r19, 0x01	; 1
    1b0a:	32 0f       	add	r19, r18
    1b0c:	30 93 4c 45 	sts	0x454C, r19	; 0x80454c <_ZZ11__vector_56E9charIndex_0>
    1b10:	22 2f       	mov	r18, r18
    1b12:	30 e0       	ldi	r19, 0x00	; 0
    1b14:	24 0f       	add	r18, r20
    1b16:	35 1f       	adc	r19, r21
    1b18:	f9 01       	movw	r30, r18
    1b1a:	20 81       	ld	r18, Z
    1b1c:	fc 01       	movw	r30, r24
    1b1e:	22 83       	std	Z+2, r18	; 0x02
			{
				serialbus_end_tx();
			}
		}
	}
}
    1b20:	16 c0       	rjmp	.+44     	; 0x1b4e <__vector_56+0x15a>
			/* Put data into buffer, sends the data */
			USART4.TXDATAL = (*buff)[charIndex++];
		}
		else
		{
			charIndex = 0;
    1b22:	10 92 4c 45 	sts	0x454C, r1	; 0x80454c <_ZZ11__vector_56E9charIndex_0>
			(*buff)[0] = '\0';
    1b26:	80 91 4a 45 	lds	r24, 0x454A	; 0x80454a <_ZZ11__vector_56E4buff_0>
    1b2a:	90 91 4b 45 	lds	r25, 0x454B	; 0x80454b <_ZZ11__vector_56E4buff_0+0x1>
    1b2e:	fc 01       	movw	r30, r24
    1b30:	10 82       	st	Z, r1
			buff = nextFullSBTxBuffer();
    1b32:	0e 94 80 65 	call	0xcb00	; 0xcb00 <nextFullSBTxBuffer>
    1b36:	80 93 4a 45 	sts	0x454A, r24	; 0x80454a <_ZZ11__vector_56E4buff_0>
    1b3a:	90 93 4b 45 	sts	0x454B, r25	; 0x80454b <_ZZ11__vector_56E4buff_0+0x1>
			if(!buff)
    1b3e:	80 91 4a 45 	lds	r24, 0x454A	; 0x80454a <_ZZ11__vector_56E4buff_0>
    1b42:	90 91 4b 45 	lds	r25, 0x454B	; 0x80454b <_ZZ11__vector_56E4buff_0+0x1>
    1b46:	89 2b       	or	r24, r25
    1b48:	11 f4       	brne	.+4      	; 0x1b4e <__vector_56+0x15a>
			{
				serialbus_end_tx();
    1b4a:	0e 94 89 66 	call	0xcd12	; 0xcd12 <serialbus_end_tx>
			}
		}
	}
}
    1b4e:	00 00       	nop
    1b50:	df 91       	pop	r29
    1b52:	cf 91       	pop	r28
    1b54:	ff 91       	pop	r31
    1b56:	ef 91       	pop	r30
    1b58:	bf 91       	pop	r27
    1b5a:	af 91       	pop	r26
    1b5c:	9f 91       	pop	r25
    1b5e:	8f 91       	pop	r24
    1b60:	7f 91       	pop	r23
    1b62:	6f 91       	pop	r22
    1b64:	5f 91       	pop	r21
    1b66:	4f 91       	pop	r20
    1b68:	3f 91       	pop	r19
    1b6a:	2f 91       	pop	r18
    1b6c:	0f 90       	pop	r0
    1b6e:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    1b72:	0f 90       	pop	r0
    1b74:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    1b78:	0f 90       	pop	r0
    1b7a:	1f 90       	pop	r1
    1b7c:	18 95       	reti

00001b7e <__vector_31>:

/**

*/
ISR(USART1_RXC_vect)
{
    1b7e:	1f 92       	push	r1
    1b80:	0f 92       	push	r0
    1b82:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    1b86:	0f 92       	push	r0
    1b88:	11 24       	eor	r1, r1
    1b8a:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    1b8e:	0f 92       	push	r0
    1b90:	2f 93       	push	r18
    1b92:	3f 93       	push	r19
    1b94:	4f 93       	push	r20
    1b96:	5f 93       	push	r21
    1b98:	6f 93       	push	r22
    1b9a:	7f 93       	push	r23
    1b9c:	8f 93       	push	r24
    1b9e:	9f 93       	push	r25
    1ba0:	af 93       	push	r26
    1ba2:	bf 93       	push	r27
    1ba4:	ef 93       	push	r30
    1ba6:	ff 93       	push	r31
    1ba8:	cf 93       	push	r28
    1baa:	df 93       	push	r29
    1bac:	1f 92       	push	r1
    1bae:	cd b7       	in	r28, 0x3d	; 61
    1bb0:	de b7       	in	r29, 0x3e	; 62
	uint8_t rx_char = USART1_get_data();	
    1bb2:	0e 94 c2 79 	call	0xf384	; 0xf384 <USART1_get_data>
    1bb6:	89 83       	std	Y+1, r24	; 0x01
	
	if(g_linkbus_usart_number == USART_1)
    1bb8:	80 91 4e 40 	lds	r24, 0x404E	; 0x80404e <g_linkbus_usart_number>
    1bbc:	81 30       	cpi	r24, 0x01	; 1
    1bbe:	19 f4       	brne	.+6      	; 0x1bc6 <__vector_31+0x48>
	{
		linkbus_Rx(rx_char);
    1bc0:	89 81       	ldd	r24, Y+1	; 0x01
    1bc2:	0e 94 03 0e 	call	0x1c06	; 0x1c06 <_Z10linkbus_Rxh>
	}
	
	if(g_serialbus_usart_number == USART_1)
    1bc6:	80 91 54 40 	lds	r24, 0x4054	; 0x804054 <g_serialbus_usart_number>
    1bca:	81 30       	cpi	r24, 0x01	; 1
    1bcc:	19 f4       	brne	.+6      	; 0x1bd4 <__vector_31+0x56>
	{
		serial_Rx(rx_char);
    1bce:	89 81       	ldd	r24, Y+1	; 0x01
    1bd0:	0e 94 b0 09 	call	0x1360	; 0x1360 <_Z9serial_Rxh>
	}
}
    1bd4:	00 00       	nop
    1bd6:	0f 90       	pop	r0
    1bd8:	df 91       	pop	r29
    1bda:	cf 91       	pop	r28
    1bdc:	ff 91       	pop	r31
    1bde:	ef 91       	pop	r30
    1be0:	bf 91       	pop	r27
    1be2:	af 91       	pop	r26
    1be4:	9f 91       	pop	r25
    1be6:	8f 91       	pop	r24
    1be8:	7f 91       	pop	r23
    1bea:	6f 91       	pop	r22
    1bec:	5f 91       	pop	r21
    1bee:	4f 91       	pop	r20
    1bf0:	3f 91       	pop	r19
    1bf2:	2f 91       	pop	r18
    1bf4:	0f 90       	pop	r0
    1bf6:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    1bfa:	0f 90       	pop	r0
    1bfc:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    1c00:	0f 90       	pop	r0
    1c02:	1f 90       	pop	r1
    1c04:	18 95       	reti

00001c06 <_Z10linkbus_Rxh>:

void linkbus_Rx(uint8_t rx_char)
{
    1c06:	cf 93       	push	r28
    1c08:	df 93       	push	r29
    1c0a:	1f 92       	push	r1
    1c0c:	cd b7       	in	r28, 0x3d	; 61
    1c0e:	de b7       	in	r29, 0x3e	; 62
    1c10:	89 83       	std	Y+1, r24	; 0x01
	static uint8_t field_len = 0;
	static uint32_t tempMsg_ID = 0;
	static bool receiving_msg = false;
	static bool escapeNext = false;

	if(!buff)
    1c12:	80 91 4d 45 	lds	r24, 0x454D	; 0x80454d <_ZZ10linkbus_RxhE4buff>
    1c16:	90 91 4e 45 	lds	r25, 0x454E	; 0x80454e <_ZZ10linkbus_RxhE4buff+0x1>
    1c1a:	89 2b       	or	r24, r25
    1c1c:	31 f4       	brne	.+12     	; 0x1c2a <_Z10linkbus_Rxh+0x24>
	{
		buff = nextEmptyLBRxBuffer();
    1c1e:	0e 94 53 5d 	call	0xbaa6	; 0xbaa6 <_Z19nextEmptyLBRxBufferv>
    1c22:	80 93 4d 45 	sts	0x454D, r24	; 0x80454d <_ZZ10linkbus_RxhE4buff>
    1c26:	90 93 4e 45 	sts	0x454E, r25	; 0x80454e <_ZZ10linkbus_RxhE4buff+0x1>
	}

	if(buff)
    1c2a:	80 91 4d 45 	lds	r24, 0x454D	; 0x80454d <_ZZ10linkbus_RxhE4buff>
    1c2e:	90 91 4e 45 	lds	r25, 0x454E	; 0x80454e <_ZZ10linkbus_RxhE4buff+0x1>
    1c32:	89 2b       	or	r24, r25
    1c34:	09 f4       	brne	.+2      	; 0x1c38 <_Z10linkbus_Rxh+0x32>
    1c36:	66 c1       	rjmp	.+716    	; 0x1f04 <_Z10linkbus_Rxh+0x2fe>
	{
		rx_char = toupper(rx_char);
    1c38:	89 81       	ldd	r24, Y+1	; 0x01
    1c3a:	88 2f       	mov	r24, r24
    1c3c:	90 e0       	ldi	r25, 0x00	; 0
    1c3e:	0e 94 31 7f 	call	0xfe62	; 0xfe62 <toupper>
    1c42:	89 83       	std	Y+1, r24	; 0x01
		
		if(!escapeNext && (rx_char == '\\'))
    1c44:	90 91 4f 45 	lds	r25, 0x454F	; 0x80454f <_ZZ10linkbus_RxhE10escapeNext>
    1c48:	81 e0       	ldi	r24, 0x01	; 1
    1c4a:	89 27       	eor	r24, r25
    1c4c:	88 23       	and	r24, r24
    1c4e:	39 f0       	breq	.+14     	; 0x1c5e <_Z10linkbus_Rxh+0x58>
    1c50:	89 81       	ldd	r24, Y+1	; 0x01
    1c52:	8c 35       	cpi	r24, 0x5C	; 92
    1c54:	21 f4       	brne	.+8      	; 0x1c5e <_Z10linkbus_Rxh+0x58>
		{
			escapeNext = true;
    1c56:	81 e0       	ldi	r24, 0x01	; 1
    1c58:	80 93 4f 45 	sts	0x454F, r24	; 0x80454f <_ZZ10linkbus_RxhE10escapeNext>
    1c5c:	3c c1       	rjmp	.+632    	; 0x1ed6 <_Z10linkbus_Rxh+0x2d0>
		}
		else if(!escapeNext && ((rx_char == '$') || (rx_char == '!')))    /* start of new message = $ */
    1c5e:	90 91 4f 45 	lds	r25, 0x454F	; 0x80454f <_ZZ10linkbus_RxhE10escapeNext>
    1c62:	81 e0       	ldi	r24, 0x01	; 1
    1c64:	89 27       	eor	r24, r25
    1c66:	88 23       	and	r24, r24
    1c68:	09 f4       	brne	.+2      	; 0x1c6c <_Z10linkbus_Rxh+0x66>
    1c6a:	43 c0       	rjmp	.+134    	; 0x1cf2 <_Z10linkbus_Rxh+0xec>
    1c6c:	89 81       	ldd	r24, Y+1	; 0x01
    1c6e:	84 32       	cpi	r24, 0x24	; 36
    1c70:	19 f0       	breq	.+6      	; 0x1c78 <_Z10linkbus_Rxh+0x72>
    1c72:	89 81       	ldd	r24, Y+1	; 0x01
    1c74:	81 32       	cpi	r24, 0x21	; 33
    1c76:	e9 f5       	brne	.+122    	; 0x1cf2 <_Z10linkbus_Rxh+0xec>
		{
			charIndex = 0;
    1c78:	10 92 50 45 	sts	0x4550, r1	; 0x804550 <_ZZ10linkbus_RxhE9charIndex>
			buff->type = (rx_char == '!') ? LINKBUS_MSG_REPLY : LINKBUS_MSG_COMMAND;
    1c7c:	80 91 4d 45 	lds	r24, 0x454D	; 0x80454d <_ZZ10linkbus_RxhE4buff>
    1c80:	90 91 4e 45 	lds	r25, 0x454E	; 0x80454e <_ZZ10linkbus_RxhE4buff+0x1>
    1c84:	29 81       	ldd	r18, Y+1	; 0x01
    1c86:	21 32       	cpi	r18, 0x21	; 33
    1c88:	11 f4       	brne	.+4      	; 0x1c8e <_Z10linkbus_Rxh+0x88>
    1c8a:	23 e0       	ldi	r18, 0x03	; 3
    1c8c:	01 c0       	rjmp	.+2      	; 0x1c90 <_Z10linkbus_Rxh+0x8a>
    1c8e:	21 e0       	ldi	r18, 0x01	; 1
    1c90:	fc 01       	movw	r30, r24
    1c92:	20 83       	st	Z, r18
			field_len = 0;
    1c94:	10 92 51 45 	sts	0x4551, r1	; 0x804551 <_ZZ10linkbus_RxhE9field_len>
			tempMsg_ID = 0;
    1c98:	10 92 52 45 	sts	0x4552, r1	; 0x804552 <_ZZ10linkbus_RxhE10tempMsg_ID>
    1c9c:	10 92 53 45 	sts	0x4553, r1	; 0x804553 <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
    1ca0:	10 92 54 45 	sts	0x4554, r1	; 0x804554 <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
    1ca4:	10 92 55 45 	sts	0x4555, r1	; 0x804555 <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
			receiving_msg = true;
    1ca8:	81 e0       	ldi	r24, 0x01	; 1
    1caa:	80 93 56 45 	sts	0x4556, r24	; 0x804556 <_ZZ10linkbus_RxhE13receiving_msg>

			/* Empty the field buffers */
			for(field_index = 0; field_index < LINKBUS_MAX_MSG_NUMBER_OF_FIELDS; field_index++)
    1cae:	10 92 57 45 	sts	0x4557, r1	; 0x804557 <_ZZ10linkbus_RxhE11field_index>
    1cb2:	80 91 57 45 	lds	r24, 0x4557	; 0x804557 <_ZZ10linkbus_RxhE11field_index>
    1cb6:	83 30       	cpi	r24, 0x03	; 3
    1cb8:	c8 f4       	brcc	.+50     	; 0x1cec <_Z10linkbus_Rxh+0xe6>
			{
				buff->fields[field_index][0] = '\0';
    1cba:	20 91 4d 45 	lds	r18, 0x454D	; 0x80454d <_ZZ10linkbus_RxhE4buff>
    1cbe:	30 91 4e 45 	lds	r19, 0x454E	; 0x80454e <_ZZ10linkbus_RxhE4buff+0x1>
    1cc2:	80 91 57 45 	lds	r24, 0x4557	; 0x804557 <_ZZ10linkbus_RxhE11field_index>
    1cc6:	48 2f       	mov	r20, r24
    1cc8:	50 e0       	ldi	r21, 0x00	; 0
    1cca:	65 e1       	ldi	r22, 0x15	; 21
    1ccc:	64 9f       	mul	r22, r20
    1cce:	c0 01       	movw	r24, r0
    1cd0:	65 9f       	mul	r22, r21
    1cd2:	90 0d       	add	r25, r0
    1cd4:	11 24       	eor	r1, r1
    1cd6:	82 0f       	add	r24, r18
    1cd8:	93 1f       	adc	r25, r19
    1cda:	03 96       	adiw	r24, 0x03	; 3
    1cdc:	fc 01       	movw	r30, r24
    1cde:	10 82       	st	Z, r1
			field_len = 0;
			tempMsg_ID = 0;
			receiving_msg = true;

			/* Empty the field buffers */
			for(field_index = 0; field_index < LINKBUS_MAX_MSG_NUMBER_OF_FIELDS; field_index++)
    1ce0:	80 91 57 45 	lds	r24, 0x4557	; 0x804557 <_ZZ10linkbus_RxhE11field_index>
    1ce4:	8f 5f       	subi	r24, 0xFF	; 255
    1ce6:	80 93 57 45 	sts	0x4557, r24	; 0x804557 <_ZZ10linkbus_RxhE11field_index>
    1cea:	e3 cf       	rjmp	.-58     	; 0x1cb2 <_Z10linkbus_Rxh+0xac>
			{
				buff->fields[field_index][0] = '\0';
			}

			field_index = 0;
    1cec:	10 92 57 45 	sts	0x4557, r1	; 0x804557 <_ZZ10linkbus_RxhE11field_index>
    1cf0:	f2 c0       	rjmp	.+484    	; 0x1ed6 <_Z10linkbus_Rxh+0x2d0>
		}
		else if(receiving_msg)
    1cf2:	80 91 56 45 	lds	r24, 0x4556	; 0x804556 <_ZZ10linkbus_RxhE13receiving_msg>
    1cf6:	88 23       	and	r24, r24
    1cf8:	09 f4       	brne	.+2      	; 0x1cfc <_Z10linkbus_Rxh+0xf6>
    1cfa:	d0 c0       	rjmp	.+416    	; 0x1e9c <_Z10linkbus_Rxh+0x296>
		{
			if(!escapeNext && ((rx_char == ',') || (rx_char == ';') || (rx_char == '?')))   /* new field = ,; end of message = ; */
    1cfc:	90 91 4f 45 	lds	r25, 0x454F	; 0x80454f <_ZZ10linkbus_RxhE10escapeNext>
    1d00:	81 e0       	ldi	r24, 0x01	; 1
    1d02:	89 27       	eor	r24, r25
    1d04:	88 23       	and	r24, r24
    1d06:	09 f4       	brne	.+2      	; 0x1d0a <_Z10linkbus_Rxh+0x104>
    1d08:	75 c0       	rjmp	.+234    	; 0x1df4 <_Z10linkbus_Rxh+0x1ee>
    1d0a:	89 81       	ldd	r24, Y+1	; 0x01
    1d0c:	8c 32       	cpi	r24, 0x2C	; 44
    1d0e:	39 f0       	breq	.+14     	; 0x1d1e <_Z10linkbus_Rxh+0x118>
    1d10:	89 81       	ldd	r24, Y+1	; 0x01
    1d12:	8b 33       	cpi	r24, 0x3B	; 59
    1d14:	21 f0       	breq	.+8      	; 0x1d1e <_Z10linkbus_Rxh+0x118>
    1d16:	89 81       	ldd	r24, Y+1	; 0x01
    1d18:	8f 33       	cpi	r24, 0x3F	; 63
    1d1a:	09 f0       	breq	.+2      	; 0x1d1e <_Z10linkbus_Rxh+0x118>
    1d1c:	6b c0       	rjmp	.+214    	; 0x1df4 <_Z10linkbus_Rxh+0x1ee>
			{
				/* if(field_index == 0) // message ID received */
				if(field_index > 0)
    1d1e:	80 91 57 45 	lds	r24, 0x4557	; 0x804557 <_ZZ10linkbus_RxhE11field_index>
    1d22:	88 23       	and	r24, r24
    1d24:	e1 f0       	breq	.+56     	; 0x1d5e <_Z10linkbus_Rxh+0x158>
				{
					buff->fields[field_index - 1][field_len] = 0;
    1d26:	40 91 4d 45 	lds	r20, 0x454D	; 0x80454d <_ZZ10linkbus_RxhE4buff>
    1d2a:	50 91 4e 45 	lds	r21, 0x454E	; 0x80454e <_ZZ10linkbus_RxhE4buff+0x1>
    1d2e:	80 91 57 45 	lds	r24, 0x4557	; 0x804557 <_ZZ10linkbus_RxhE11field_index>
    1d32:	88 2f       	mov	r24, r24
    1d34:	90 e0       	ldi	r25, 0x00	; 0
    1d36:	bc 01       	movw	r22, r24
    1d38:	61 50       	subi	r22, 0x01	; 1
    1d3a:	71 09       	sbc	r23, r1
    1d3c:	80 91 51 45 	lds	r24, 0x4551	; 0x804551 <_ZZ10linkbus_RxhE9field_len>
    1d40:	88 2f       	mov	r24, r24
    1d42:	90 e0       	ldi	r25, 0x00	; 0
    1d44:	e5 e1       	ldi	r30, 0x15	; 21
    1d46:	e6 9f       	mul	r30, r22
    1d48:	90 01       	movw	r18, r0
    1d4a:	e7 9f       	mul	r30, r23
    1d4c:	30 0d       	add	r19, r0
    1d4e:	11 24       	eor	r1, r1
    1d50:	24 0f       	add	r18, r20
    1d52:	35 1f       	adc	r19, r21
    1d54:	82 0f       	add	r24, r18
    1d56:	93 1f       	adc	r25, r19
    1d58:	03 96       	adiw	r24, 0x03	; 3
    1d5a:	fc 01       	movw	r30, r24
    1d5c:	10 82       	st	Z, r1
				}

				field_index++;
    1d5e:	80 91 57 45 	lds	r24, 0x4557	; 0x804557 <_ZZ10linkbus_RxhE11field_index>
    1d62:	8f 5f       	subi	r24, 0xFF	; 255
    1d64:	80 93 57 45 	sts	0x4557, r24	; 0x804557 <_ZZ10linkbus_RxhE11field_index>
				field_len = 0;
    1d68:	10 92 51 45 	sts	0x4551, r1	; 0x804551 <_ZZ10linkbus_RxhE9field_len>

				if(rx_char == ';')
    1d6c:	89 81       	ldd	r24, Y+1	; 0x01
    1d6e:	8b 33       	cpi	r24, 0x3B	; 59
    1d70:	b1 f4       	brne	.+44     	; 0x1d9e <_Z10linkbus_Rxh+0x198>
				{
					if(charIndex > LINKBUS_MIN_MSG_LENGTH)
    1d72:	80 91 50 45 	lds	r24, 0x4550	; 0x804550 <_ZZ10linkbus_RxhE9charIndex>
    1d76:	84 30       	cpi	r24, 0x04	; 4
    1d78:	78 f0       	brcs	.+30     	; 0x1d98 <_Z10linkbus_Rxh+0x192>
					{
						buff->id = (LBMessageID)tempMsg_ID;
    1d7a:	20 91 4d 45 	lds	r18, 0x454D	; 0x80454d <_ZZ10linkbus_RxhE4buff>
    1d7e:	30 91 4e 45 	lds	r19, 0x454E	; 0x80454e <_ZZ10linkbus_RxhE4buff+0x1>
    1d82:	80 91 52 45 	lds	r24, 0x4552	; 0x804552 <_ZZ10linkbus_RxhE10tempMsg_ID>
    1d86:	90 91 53 45 	lds	r25, 0x4553	; 0x804553 <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
    1d8a:	a0 91 54 45 	lds	r26, 0x4554	; 0x804554 <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
    1d8e:	b0 91 55 45 	lds	r27, 0x4555	; 0x804555 <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
    1d92:	f9 01       	movw	r30, r18
    1d94:	81 83       	std	Z+1, r24	; 0x01
    1d96:	92 83       	std	Z+2, r25	; 0x02
					}
					receiving_msg = false;
    1d98:	10 92 56 45 	sts	0x4556, r1	; 0x804556 <_ZZ10linkbus_RxhE13receiving_msg>
    1d9c:	1f c0       	rjmp	.+62     	; 0x1ddc <_Z10linkbus_Rxh+0x1d6>
				}
				else if(rx_char == '?')
    1d9e:	89 81       	ldd	r24, Y+1	; 0x01
    1da0:	8f 33       	cpi	r24, 0x3F	; 63
    1da2:	e1 f4       	brne	.+56     	; 0x1ddc <_Z10linkbus_Rxh+0x1d6>
				{
					buff->type = LINKBUS_MSG_QUERY;
    1da4:	80 91 4d 45 	lds	r24, 0x454D	; 0x80454d <_ZZ10linkbus_RxhE4buff>
    1da8:	90 91 4e 45 	lds	r25, 0x454E	; 0x80454e <_ZZ10linkbus_RxhE4buff+0x1>
    1dac:	22 e0       	ldi	r18, 0x02	; 2
    1dae:	fc 01       	movw	r30, r24
    1db0:	20 83       	st	Z, r18
					if(charIndex >= LINKBUS_MIN_MSG_LENGTH)
    1db2:	80 91 50 45 	lds	r24, 0x4550	; 0x804550 <_ZZ10linkbus_RxhE9charIndex>
    1db6:	83 30       	cpi	r24, 0x03	; 3
    1db8:	78 f0       	brcs	.+30     	; 0x1dd8 <_Z10linkbus_Rxh+0x1d2>
					{
						buff->id = (LBMessageID)tempMsg_ID;
    1dba:	20 91 4d 45 	lds	r18, 0x454D	; 0x80454d <_ZZ10linkbus_RxhE4buff>
    1dbe:	30 91 4e 45 	lds	r19, 0x454E	; 0x80454e <_ZZ10linkbus_RxhE4buff+0x1>
    1dc2:	80 91 52 45 	lds	r24, 0x4552	; 0x804552 <_ZZ10linkbus_RxhE10tempMsg_ID>
    1dc6:	90 91 53 45 	lds	r25, 0x4553	; 0x804553 <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
    1dca:	a0 91 54 45 	lds	r26, 0x4554	; 0x804554 <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
    1dce:	b0 91 55 45 	lds	r27, 0x4555	; 0x804555 <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
    1dd2:	f9 01       	movw	r30, r18
    1dd4:	81 83       	std	Z+1, r24	; 0x01
    1dd6:	92 83       	std	Z+2, r25	; 0x02
					}
					receiving_msg = false;
    1dd8:	10 92 56 45 	sts	0x4556, r1	; 0x804556 <_ZZ10linkbus_RxhE13receiving_msg>
				}

				if(!receiving_msg)
    1ddc:	90 91 56 45 	lds	r25, 0x4556	; 0x804556 <_ZZ10linkbus_RxhE13receiving_msg>
    1de0:	81 e0       	ldi	r24, 0x01	; 1
    1de2:	89 27       	eor	r24, r25
    1de4:	88 23       	and	r24, r24
    1de6:	09 f4       	brne	.+2      	; 0x1dea <_Z10linkbus_Rxh+0x1e4>
    1de8:	76 c0       	rjmp	.+236    	; 0x1ed6 <_Z10linkbus_Rxh+0x2d0>
				{
					buff = 0;
    1dea:	10 92 4d 45 	sts	0x454D, r1	; 0x80454d <_ZZ10linkbus_RxhE4buff>
    1dee:	10 92 4e 45 	sts	0x454E, r1	; 0x80454e <_ZZ10linkbus_RxhE4buff+0x1>
						buff->id = (LBMessageID)tempMsg_ID;
					}
					receiving_msg = false;
				}

				if(!receiving_msg)
    1df2:	71 c0       	rjmp	.+226    	; 0x1ed6 <_Z10linkbus_Rxh+0x2d0>
					buff = 0;
				}
			}
			else
			{
				if(field_index == 0)    /* message ID received */
    1df4:	80 91 57 45 	lds	r24, 0x4557	; 0x804557 <_ZZ10linkbus_RxhE11field_index>
    1df8:	88 23       	and	r24, r24
    1dfa:	61 f5       	brne	.+88     	; 0x1e54 <_Z10linkbus_Rxh+0x24e>
				{
					tempMsg_ID = tempMsg_ID * 10 + rx_char;
    1dfc:	80 91 52 45 	lds	r24, 0x4552	; 0x804552 <_ZZ10linkbus_RxhE10tempMsg_ID>
    1e00:	90 91 53 45 	lds	r25, 0x4553	; 0x804553 <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
    1e04:	a0 91 54 45 	lds	r26, 0x4554	; 0x804554 <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
    1e08:	b0 91 55 45 	lds	r27, 0x4555	; 0x804555 <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
    1e0c:	88 0f       	add	r24, r24
    1e0e:	99 1f       	adc	r25, r25
    1e10:	aa 1f       	adc	r26, r26
    1e12:	bb 1f       	adc	r27, r27
    1e14:	9c 01       	movw	r18, r24
    1e16:	ad 01       	movw	r20, r26
    1e18:	22 0f       	add	r18, r18
    1e1a:	33 1f       	adc	r19, r19
    1e1c:	44 1f       	adc	r20, r20
    1e1e:	55 1f       	adc	r21, r21
    1e20:	22 0f       	add	r18, r18
    1e22:	33 1f       	adc	r19, r19
    1e24:	44 1f       	adc	r20, r20
    1e26:	55 1f       	adc	r21, r21
    1e28:	28 0f       	add	r18, r24
    1e2a:	39 1f       	adc	r19, r25
    1e2c:	4a 1f       	adc	r20, r26
    1e2e:	5b 1f       	adc	r21, r27
    1e30:	89 81       	ldd	r24, Y+1	; 0x01
    1e32:	88 2f       	mov	r24, r24
    1e34:	90 e0       	ldi	r25, 0x00	; 0
    1e36:	a0 e0       	ldi	r26, 0x00	; 0
    1e38:	b0 e0       	ldi	r27, 0x00	; 0
    1e3a:	82 0f       	add	r24, r18
    1e3c:	93 1f       	adc	r25, r19
    1e3e:	a4 1f       	adc	r26, r20
    1e40:	b5 1f       	adc	r27, r21
    1e42:	80 93 52 45 	sts	0x4552, r24	; 0x804552 <_ZZ10linkbus_RxhE10tempMsg_ID>
    1e46:	90 93 53 45 	sts	0x4553, r25	; 0x804553 <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
    1e4a:	a0 93 54 45 	sts	0x4554, r26	; 0x804554 <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
    1e4e:	b0 93 55 45 	sts	0x4555, r27	; 0x804555 <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
    1e52:	21 c0       	rjmp	.+66     	; 0x1e96 <_Z10linkbus_Rxh+0x290>
				}
				else
				{
					buff->fields[field_index - 1][field_len++] = rx_char;
    1e54:	40 91 4d 45 	lds	r20, 0x454D	; 0x80454d <_ZZ10linkbus_RxhE4buff>
    1e58:	50 91 4e 45 	lds	r21, 0x454E	; 0x80454e <_ZZ10linkbus_RxhE4buff+0x1>
    1e5c:	80 91 57 45 	lds	r24, 0x4557	; 0x804557 <_ZZ10linkbus_RxhE11field_index>
    1e60:	88 2f       	mov	r24, r24
    1e62:	90 e0       	ldi	r25, 0x00	; 0
    1e64:	bc 01       	movw	r22, r24
    1e66:	61 50       	subi	r22, 0x01	; 1
    1e68:	71 09       	sbc	r23, r1
    1e6a:	80 91 51 45 	lds	r24, 0x4551	; 0x804551 <_ZZ10linkbus_RxhE9field_len>
    1e6e:	91 e0       	ldi	r25, 0x01	; 1
    1e70:	98 0f       	add	r25, r24
    1e72:	90 93 51 45 	sts	0x4551, r25	; 0x804551 <_ZZ10linkbus_RxhE9field_len>
    1e76:	88 2f       	mov	r24, r24
    1e78:	90 e0       	ldi	r25, 0x00	; 0
    1e7a:	e5 e1       	ldi	r30, 0x15	; 21
    1e7c:	e6 9f       	mul	r30, r22
    1e7e:	90 01       	movw	r18, r0
    1e80:	e7 9f       	mul	r30, r23
    1e82:	30 0d       	add	r19, r0
    1e84:	11 24       	eor	r1, r1
    1e86:	24 0f       	add	r18, r20
    1e88:	35 1f       	adc	r19, r21
    1e8a:	82 0f       	add	r24, r18
    1e8c:	93 1f       	adc	r25, r19
    1e8e:	03 96       	adiw	r24, 0x03	; 3
    1e90:	29 81       	ldd	r18, Y+1	; 0x01
    1e92:	fc 01       	movw	r30, r24
    1e94:	20 83       	st	Z, r18
				}
				
				escapeNext = false;
    1e96:	10 92 4f 45 	sts	0x454F, r1	; 0x80454f <_ZZ10linkbus_RxhE10escapeNext>
    1e9a:	1d c0       	rjmp	.+58     	; 0x1ed6 <_Z10linkbus_Rxh+0x2d0>
			}
		}
		else if(rx_char == 0x0D)    /* Carriage return resets any message in progress */
    1e9c:	89 81       	ldd	r24, Y+1	; 0x01
    1e9e:	8d 30       	cpi	r24, 0x0D	; 13
    1ea0:	d1 f4       	brne	.+52     	; 0x1ed6 <_Z10linkbus_Rxh+0x2d0>
		{
			buff->id = LB_MESSAGE_EMPTY;
    1ea2:	80 91 4d 45 	lds	r24, 0x454D	; 0x80454d <_ZZ10linkbus_RxhE4buff>
    1ea6:	90 91 4e 45 	lds	r25, 0x454E	; 0x80454e <_ZZ10linkbus_RxhE4buff+0x1>
    1eaa:	fc 01       	movw	r30, r24
    1eac:	11 82       	std	Z+1, r1	; 0x01
    1eae:	12 82       	std	Z+2, r1	; 0x02
			charIndex = LINKBUS_MAX_MSG_LENGTH;
    1eb0:	82 e3       	ldi	r24, 0x32	; 50
    1eb2:	80 93 50 45 	sts	0x4550, r24	; 0x804550 <_ZZ10linkbus_RxhE9charIndex>
			field_len = 0;
    1eb6:	10 92 51 45 	sts	0x4551, r1	; 0x804551 <_ZZ10linkbus_RxhE9field_len>
			tempMsg_ID = 0;
    1eba:	10 92 52 45 	sts	0x4552, r1	; 0x804552 <_ZZ10linkbus_RxhE10tempMsg_ID>
    1ebe:	10 92 53 45 	sts	0x4553, r1	; 0x804553 <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
    1ec2:	10 92 54 45 	sts	0x4554, r1	; 0x804554 <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
    1ec6:	10 92 55 45 	sts	0x4555, r1	; 0x804555 <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
			field_index = 0;
    1eca:	10 92 57 45 	sts	0x4557, r1	; 0x804557 <_ZZ10linkbus_RxhE11field_index>
			buff = NULL;
    1ece:	10 92 4d 45 	sts	0x454D, r1	; 0x80454d <_ZZ10linkbus_RxhE4buff>
    1ed2:	10 92 4e 45 	sts	0x454E, r1	; 0x80454e <_ZZ10linkbus_RxhE4buff+0x1>
		}

		if(!escapeNext)
    1ed6:	90 91 4f 45 	lds	r25, 0x454F	; 0x80454f <_ZZ10linkbus_RxhE10escapeNext>
    1eda:	81 e0       	ldi	r24, 0x01	; 1
    1edc:	89 27       	eor	r24, r25
    1ede:	88 23       	and	r24, r24
    1ee0:	89 f0       	breq	.+34     	; 0x1f04 <_Z10linkbus_Rxh+0x2fe>
		{
			if(++charIndex >= LINKBUS_MAX_MSG_LENGTH)
    1ee2:	80 91 50 45 	lds	r24, 0x4550	; 0x804550 <_ZZ10linkbus_RxhE9charIndex>
    1ee6:	8f 5f       	subi	r24, 0xFF	; 255
    1ee8:	80 93 50 45 	sts	0x4550, r24	; 0x804550 <_ZZ10linkbus_RxhE9charIndex>
    1eec:	90 91 50 45 	lds	r25, 0x4550	; 0x804550 <_ZZ10linkbus_RxhE9charIndex>
    1ef0:	81 e0       	ldi	r24, 0x01	; 1
    1ef2:	92 33       	cpi	r25, 0x32	; 50
    1ef4:	08 f4       	brcc	.+2      	; 0x1ef8 <_Z10linkbus_Rxh+0x2f2>
    1ef6:	80 e0       	ldi	r24, 0x00	; 0
    1ef8:	88 23       	and	r24, r24
    1efa:	21 f0       	breq	.+8      	; 0x1f04 <_Z10linkbus_Rxh+0x2fe>
			{
				receiving_msg = false;
    1efc:	10 92 56 45 	sts	0x4556, r1	; 0x804556 <_ZZ10linkbus_RxhE13receiving_msg>
				charIndex = 0;
    1f00:	10 92 50 45 	sts	0x4550, r1	; 0x804550 <_ZZ10linkbus_RxhE9charIndex>
			}
		}
	}
}
    1f04:	00 00       	nop
    1f06:	0f 90       	pop	r0
    1f08:	df 91       	pop	r29
    1f0a:	cf 91       	pop	r28
    1f0c:	08 95       	ret

00001f0e <__vector_32>:

/**

*/
ISR(USART1_DRE_vect)
{
    1f0e:	1f 92       	push	r1
    1f10:	0f 92       	push	r0
    1f12:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    1f16:	0f 92       	push	r0
    1f18:	11 24       	eor	r1, r1
    1f1a:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    1f1e:	0f 92       	push	r0
    1f20:	2f 93       	push	r18
    1f22:	3f 93       	push	r19
    1f24:	4f 93       	push	r20
    1f26:	5f 93       	push	r21
    1f28:	6f 93       	push	r22
    1f2a:	7f 93       	push	r23
    1f2c:	8f 93       	push	r24
    1f2e:	9f 93       	push	r25
    1f30:	af 93       	push	r26
    1f32:	bf 93       	push	r27
    1f34:	ef 93       	push	r30
    1f36:	ff 93       	push	r31
    1f38:	cf 93       	push	r28
    1f3a:	df 93       	push	r29
    1f3c:	cd b7       	in	r28, 0x3d	; 61
    1f3e:	de b7       	in	r29, 0x3e	; 62
	if(g_serialbus_usart_number == USART_1)
    1f40:	80 91 54 40 	lds	r24, 0x4054	; 0x804054 <g_serialbus_usart_number>
    1f44:	81 30       	cpi	r24, 0x01	; 1
    1f46:	09 f0       	breq	.+2      	; 0x1f4a <__vector_32+0x3c>
    1f48:	45 c0       	rjmp	.+138    	; 0x1fd4 <__vector_32+0xc6>
	{
		static SerialbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
    1f4a:	80 91 58 45 	lds	r24, 0x4558	; 0x804558 <_ZZ11__vector_32E4buff>
    1f4e:	90 91 59 45 	lds	r25, 0x4559	; 0x804559 <_ZZ11__vector_32E4buff+0x1>
    1f52:	89 2b       	or	r24, r25
    1f54:	31 f4       	brne	.+12     	; 0x1f62 <__vector_32+0x54>
		{
			buff = nextFullSBTxBuffer();
    1f56:	0e 94 80 65 	call	0xcb00	; 0xcb00 <nextFullSBTxBuffer>
    1f5a:	80 93 58 45 	sts	0x4558, r24	; 0x804558 <_ZZ11__vector_32E4buff>
    1f5e:	90 93 59 45 	sts	0x4559, r25	; 0x804559 <_ZZ11__vector_32E4buff+0x1>
		}

		if((*buff)[charIndex])
    1f62:	20 91 58 45 	lds	r18, 0x4558	; 0x804558 <_ZZ11__vector_32E4buff>
    1f66:	30 91 59 45 	lds	r19, 0x4559	; 0x804559 <_ZZ11__vector_32E4buff+0x1>
    1f6a:	80 91 5a 45 	lds	r24, 0x455A	; 0x80455a <_ZZ11__vector_32E9charIndex>
    1f6e:	88 2f       	mov	r24, r24
    1f70:	90 e0       	ldi	r25, 0x00	; 0
    1f72:	82 0f       	add	r24, r18
    1f74:	93 1f       	adc	r25, r19
    1f76:	fc 01       	movw	r30, r24
    1f78:	80 81       	ld	r24, Z
    1f7a:	88 23       	and	r24, r24
    1f7c:	a9 f0       	breq	.+42     	; 0x1fa8 <__vector_32+0x9a>
		{
			/* Put data into buffer, sends the data */
			USART1.TXDATAL = (*buff)[charIndex++];
    1f7e:	80 e2       	ldi	r24, 0x20	; 32
    1f80:	98 e0       	ldi	r25, 0x08	; 8
    1f82:	40 91 58 45 	lds	r20, 0x4558	; 0x804558 <_ZZ11__vector_32E4buff>
    1f86:	50 91 59 45 	lds	r21, 0x4559	; 0x804559 <_ZZ11__vector_32E4buff+0x1>
    1f8a:	20 91 5a 45 	lds	r18, 0x455A	; 0x80455a <_ZZ11__vector_32E9charIndex>
    1f8e:	31 e0       	ldi	r19, 0x01	; 1
    1f90:	32 0f       	add	r19, r18
    1f92:	30 93 5a 45 	sts	0x455A, r19	; 0x80455a <_ZZ11__vector_32E9charIndex>
    1f96:	22 2f       	mov	r18, r18
    1f98:	30 e0       	ldi	r19, 0x00	; 0
    1f9a:	24 0f       	add	r18, r20
    1f9c:	35 1f       	adc	r19, r21
    1f9e:	f9 01       	movw	r30, r18
    1fa0:	20 81       	ld	r18, Z
    1fa2:	fc 01       	movw	r30, r24
    1fa4:	22 83       	std	Z+2, r18	; 0x02
    1fa6:	16 c0       	rjmp	.+44     	; 0x1fd4 <__vector_32+0xc6>
		}
		else
		{
			charIndex = 0;
    1fa8:	10 92 5a 45 	sts	0x455A, r1	; 0x80455a <_ZZ11__vector_32E9charIndex>
			(*buff)[0] = '\0';
    1fac:	80 91 58 45 	lds	r24, 0x4558	; 0x804558 <_ZZ11__vector_32E4buff>
    1fb0:	90 91 59 45 	lds	r25, 0x4559	; 0x804559 <_ZZ11__vector_32E4buff+0x1>
    1fb4:	fc 01       	movw	r30, r24
    1fb6:	10 82       	st	Z, r1
			buff = nextFullSBTxBuffer();
    1fb8:	0e 94 80 65 	call	0xcb00	; 0xcb00 <nextFullSBTxBuffer>
    1fbc:	80 93 58 45 	sts	0x4558, r24	; 0x804558 <_ZZ11__vector_32E4buff>
    1fc0:	90 93 59 45 	sts	0x4559, r25	; 0x804559 <_ZZ11__vector_32E4buff+0x1>
			if(!buff)
    1fc4:	80 91 58 45 	lds	r24, 0x4558	; 0x804558 <_ZZ11__vector_32E4buff>
    1fc8:	90 91 59 45 	lds	r25, 0x4559	; 0x804559 <_ZZ11__vector_32E4buff+0x1>
    1fcc:	89 2b       	or	r24, r25
    1fce:	11 f4       	brne	.+4      	; 0x1fd4 <__vector_32+0xc6>
			{
				serialbus_end_tx();
    1fd0:	0e 94 89 66 	call	0xcd12	; 0xcd12 <serialbus_end_tx>
			}
		}
	}
	
	if(g_linkbus_usart_number == USART_1)
    1fd4:	80 91 4e 40 	lds	r24, 0x404E	; 0x80404e <g_linkbus_usart_number>
    1fd8:	81 30       	cpi	r24, 0x01	; 1
    1fda:	09 f0       	breq	.+2      	; 0x1fde <__vector_32+0xd0>
    1fdc:	45 c0       	rjmp	.+138    	; 0x2068 <__vector_32+0x15a>
	{
		static LinkbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
    1fde:	80 91 5b 45 	lds	r24, 0x455B	; 0x80455b <_ZZ11__vector_32E4buff_0>
    1fe2:	90 91 5c 45 	lds	r25, 0x455C	; 0x80455c <_ZZ11__vector_32E4buff_0+0x1>
    1fe6:	89 2b       	or	r24, r25
    1fe8:	31 f4       	brne	.+12     	; 0x1ff6 <__vector_32+0xe8>
		{
			buff = nextFullLBTxBuffer();
    1fea:	0e 94 c5 5c 	call	0xb98a	; 0xb98a <_Z18nextFullLBTxBufferv>
    1fee:	80 93 5b 45 	sts	0x455B, r24	; 0x80455b <_ZZ11__vector_32E4buff_0>
    1ff2:	90 93 5c 45 	sts	0x455C, r25	; 0x80455c <_ZZ11__vector_32E4buff_0+0x1>
		}

		if((*buff)[charIndex])
    1ff6:	20 91 5b 45 	lds	r18, 0x455B	; 0x80455b <_ZZ11__vector_32E4buff_0>
    1ffa:	30 91 5c 45 	lds	r19, 0x455C	; 0x80455c <_ZZ11__vector_32E4buff_0+0x1>
    1ffe:	80 91 5d 45 	lds	r24, 0x455D	; 0x80455d <_ZZ11__vector_32E9charIndex_0>
    2002:	88 2f       	mov	r24, r24
    2004:	90 e0       	ldi	r25, 0x00	; 0
    2006:	82 0f       	add	r24, r18
    2008:	93 1f       	adc	r25, r19
    200a:	fc 01       	movw	r30, r24
    200c:	80 81       	ld	r24, Z
    200e:	88 23       	and	r24, r24
    2010:	a9 f0       	breq	.+42     	; 0x203c <__vector_32+0x12e>
		{
			/* Put data into buffer, sends the data */
			USART1.TXDATAL = (*buff)[charIndex++];
    2012:	80 e2       	ldi	r24, 0x20	; 32
    2014:	98 e0       	ldi	r25, 0x08	; 8
    2016:	40 91 5b 45 	lds	r20, 0x455B	; 0x80455b <_ZZ11__vector_32E4buff_0>
    201a:	50 91 5c 45 	lds	r21, 0x455C	; 0x80455c <_ZZ11__vector_32E4buff_0+0x1>
    201e:	20 91 5d 45 	lds	r18, 0x455D	; 0x80455d <_ZZ11__vector_32E9charIndex_0>
    2022:	31 e0       	ldi	r19, 0x01	; 1
    2024:	32 0f       	add	r19, r18
    2026:	30 93 5d 45 	sts	0x455D, r19	; 0x80455d <_ZZ11__vector_32E9charIndex_0>
    202a:	22 2f       	mov	r18, r18
    202c:	30 e0       	ldi	r19, 0x00	; 0
    202e:	24 0f       	add	r18, r20
    2030:	35 1f       	adc	r19, r21
    2032:	f9 01       	movw	r30, r18
    2034:	20 81       	ld	r18, Z
    2036:	fc 01       	movw	r30, r24
    2038:	22 83       	std	Z+2, r18	; 0x02
			{
				linkbus_end_tx();
			}
		}
	}
}
    203a:	16 c0       	rjmp	.+44     	; 0x2068 <__vector_32+0x15a>
			/* Put data into buffer, sends the data */
			USART1.TXDATAL = (*buff)[charIndex++];
		}
		else
		{
			charIndex = 0;
    203c:	10 92 5d 45 	sts	0x455D, r1	; 0x80455d <_ZZ11__vector_32E9charIndex_0>
			(*buff)[0] = '\0';
    2040:	80 91 5b 45 	lds	r24, 0x455B	; 0x80455b <_ZZ11__vector_32E4buff_0>
    2044:	90 91 5c 45 	lds	r25, 0x455C	; 0x80455c <_ZZ11__vector_32E4buff_0+0x1>
    2048:	fc 01       	movw	r30, r24
    204a:	10 82       	st	Z, r1
			buff = nextFullLBTxBuffer();
    204c:	0e 94 c5 5c 	call	0xb98a	; 0xb98a <_Z18nextFullLBTxBufferv>
    2050:	80 93 5b 45 	sts	0x455B, r24	; 0x80455b <_ZZ11__vector_32E4buff_0>
    2054:	90 93 5c 45 	sts	0x455C, r25	; 0x80455c <_ZZ11__vector_32E4buff_0+0x1>
			if(!buff)
    2058:	80 91 5b 45 	lds	r24, 0x455B	; 0x80455b <_ZZ11__vector_32E4buff_0>
    205c:	90 91 5c 45 	lds	r25, 0x455C	; 0x80455c <_ZZ11__vector_32E4buff_0+0x1>
    2060:	89 2b       	or	r24, r25
    2062:	11 f4       	brne	.+4      	; 0x2068 <__vector_32+0x15a>
			{
				linkbus_end_tx();
    2064:	0e 94 0a 5e 	call	0xbc14	; 0xbc14 <_Z14linkbus_end_txv>
			}
		}
	}
}
    2068:	00 00       	nop
    206a:	df 91       	pop	r29
    206c:	cf 91       	pop	r28
    206e:	ff 91       	pop	r31
    2070:	ef 91       	pop	r30
    2072:	bf 91       	pop	r27
    2074:	af 91       	pop	r26
    2076:	9f 91       	pop	r25
    2078:	8f 91       	pop	r24
    207a:	7f 91       	pop	r23
    207c:	6f 91       	pop	r22
    207e:	5f 91       	pop	r21
    2080:	4f 91       	pop	r20
    2082:	3f 91       	pop	r19
    2084:	2f 91       	pop	r18
    2086:	0f 90       	pop	r0
    2088:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    208c:	0f 90       	pop	r0
    208e:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    2092:	0f 90       	pop	r0
    2094:	1f 90       	pop	r1
    2096:	18 95       	reti

00002098 <PORTA_set_pin_level>:
		else
		{
			sb_send_string((char*)"Event running...\n");
		}
	}
}
    2098:	cf 93       	push	r28
    209a:	df 93       	push	r29
    209c:	00 d0       	rcall	.+0      	; 0x209e <PORTA_set_pin_level+0x6>
    209e:	cd b7       	in	r28, 0x3d	; 61
    20a0:	de b7       	in	r29, 0x3e	; 62
    20a2:	89 83       	std	Y+1, r24	; 0x01
    20a4:	6a 83       	std	Y+2, r22	; 0x02
    20a6:	8a 81       	ldd	r24, Y+2	; 0x02
    20a8:	88 23       	and	r24, r24
    20aa:	a9 f0       	breq	.+42     	; 0x20d6 <PORTA_set_pin_level+0x3e>
    20ac:	20 e0       	ldi	r18, 0x00	; 0
    20ae:	30 e0       	ldi	r19, 0x00	; 0
    20b0:	80 e0       	ldi	r24, 0x00	; 0
    20b2:	90 e0       	ldi	r25, 0x00	; 0
    20b4:	fc 01       	movw	r30, r24
    20b6:	81 81       	ldd	r24, Z+1	; 0x01
    20b8:	68 2f       	mov	r22, r24
    20ba:	89 81       	ldd	r24, Y+1	; 0x01
    20bc:	48 2f       	mov	r20, r24
    20be:	50 e0       	ldi	r21, 0x00	; 0
    20c0:	81 e0       	ldi	r24, 0x01	; 1
    20c2:	90 e0       	ldi	r25, 0x00	; 0
    20c4:	02 c0       	rjmp	.+4      	; 0x20ca <PORTA_set_pin_level+0x32>
    20c6:	88 0f       	add	r24, r24
    20c8:	99 1f       	adc	r25, r25
    20ca:	4a 95       	dec	r20
    20cc:	e2 f7       	brpl	.-8      	; 0x20c6 <PORTA_set_pin_level+0x2e>
    20ce:	86 2b       	or	r24, r22
    20d0:	f9 01       	movw	r30, r18
    20d2:	81 83       	std	Z+1, r24	; 0x01
    20d4:	15 c0       	rjmp	.+42     	; 0x2100 <PORTA_set_pin_level+0x68>
    20d6:	20 e0       	ldi	r18, 0x00	; 0
    20d8:	30 e0       	ldi	r19, 0x00	; 0
    20da:	80 e0       	ldi	r24, 0x00	; 0
    20dc:	90 e0       	ldi	r25, 0x00	; 0
    20de:	fc 01       	movw	r30, r24
    20e0:	81 81       	ldd	r24, Z+1	; 0x01
    20e2:	68 2f       	mov	r22, r24
    20e4:	89 81       	ldd	r24, Y+1	; 0x01
    20e6:	48 2f       	mov	r20, r24
    20e8:	50 e0       	ldi	r21, 0x00	; 0
    20ea:	81 e0       	ldi	r24, 0x01	; 1
    20ec:	90 e0       	ldi	r25, 0x00	; 0
    20ee:	02 c0       	rjmp	.+4      	; 0x20f4 <PORTA_set_pin_level+0x5c>
    20f0:	88 0f       	add	r24, r24
    20f2:	99 1f       	adc	r25, r25
    20f4:	4a 95       	dec	r20
    20f6:	e2 f7       	brpl	.-8      	; 0x20f0 <PORTA_set_pin_level+0x58>
    20f8:	80 95       	com	r24
    20fa:	86 23       	and	r24, r22
    20fc:	f9 01       	movw	r30, r18
    20fe:	81 83       	std	Z+1, r24	; 0x01
    2100:	00 00       	nop
    2102:	0f 90       	pop	r0
    2104:	0f 90       	pop	r0
    2106:	df 91       	pop	r29
    2108:	cf 91       	pop	r28
    210a:	08 95       	ret

0000210c <PORTA_get_pin_level>:
    210c:	cf 93       	push	r28
    210e:	df 93       	push	r29
    2110:	1f 92       	push	r1
    2112:	cd b7       	in	r28, 0x3d	; 61
    2114:	de b7       	in	r29, 0x3e	; 62
    2116:	89 83       	std	Y+1, r24	; 0x01
    2118:	80 e0       	ldi	r24, 0x00	; 0
    211a:	90 e0       	ldi	r25, 0x00	; 0
    211c:	fc 01       	movw	r30, r24
    211e:	82 81       	ldd	r24, Z+2	; 0x02
    2120:	88 2f       	mov	r24, r24
    2122:	90 e0       	ldi	r25, 0x00	; 0
    2124:	29 81       	ldd	r18, Y+1	; 0x01
    2126:	22 2f       	mov	r18, r18
    2128:	30 e0       	ldi	r19, 0x00	; 0
    212a:	02 c0       	rjmp	.+4      	; 0x2130 <PORTA_get_pin_level+0x24>
    212c:	95 95       	asr	r25
    212e:	87 95       	ror	r24
    2130:	2a 95       	dec	r18
    2132:	e2 f7       	brpl	.-8      	; 0x212c <PORTA_get_pin_level+0x20>
    2134:	81 70       	andi	r24, 0x01	; 1
    2136:	99 27       	eor	r25, r25
    2138:	21 e0       	ldi	r18, 0x01	; 1
    213a:	89 2b       	or	r24, r25
    213c:	09 f4       	brne	.+2      	; 0x2140 <PORTA_get_pin_level+0x34>
    213e:	20 e0       	ldi	r18, 0x00	; 0
    2140:	82 2f       	mov	r24, r18
    2142:	0f 90       	pop	r0
    2144:	df 91       	pop	r29
    2146:	cf 91       	pop	r28
    2148:	08 95       	ret

0000214a <PORTB_set_pin_level>:
    214a:	cf 93       	push	r28
    214c:	df 93       	push	r29
    214e:	00 d0       	rcall	.+0      	; 0x2150 <PORTB_set_pin_level+0x6>
    2150:	cd b7       	in	r28, 0x3d	; 61
    2152:	de b7       	in	r29, 0x3e	; 62
    2154:	89 83       	std	Y+1, r24	; 0x01
    2156:	6a 83       	std	Y+2, r22	; 0x02
    2158:	8a 81       	ldd	r24, Y+2	; 0x02
    215a:	88 23       	and	r24, r24
    215c:	a9 f0       	breq	.+42     	; 0x2188 <PORTB_set_pin_level+0x3e>
    215e:	84 e0       	ldi	r24, 0x04	; 4
    2160:	90 e0       	ldi	r25, 0x00	; 0
    2162:	24 e0       	ldi	r18, 0x04	; 4
    2164:	30 e0       	ldi	r19, 0x00	; 0
    2166:	f9 01       	movw	r30, r18
    2168:	21 81       	ldd	r18, Z+1	; 0x01
    216a:	62 2f       	mov	r22, r18
    216c:	29 81       	ldd	r18, Y+1	; 0x01
    216e:	42 2f       	mov	r20, r18
    2170:	50 e0       	ldi	r21, 0x00	; 0
    2172:	21 e0       	ldi	r18, 0x01	; 1
    2174:	30 e0       	ldi	r19, 0x00	; 0
    2176:	02 c0       	rjmp	.+4      	; 0x217c <PORTB_set_pin_level+0x32>
    2178:	22 0f       	add	r18, r18
    217a:	33 1f       	adc	r19, r19
    217c:	4a 95       	dec	r20
    217e:	e2 f7       	brpl	.-8      	; 0x2178 <PORTB_set_pin_level+0x2e>
    2180:	26 2b       	or	r18, r22
    2182:	fc 01       	movw	r30, r24
    2184:	21 83       	std	Z+1, r18	; 0x01
    2186:	15 c0       	rjmp	.+42     	; 0x21b2 <PORTB_set_pin_level+0x68>
    2188:	84 e0       	ldi	r24, 0x04	; 4
    218a:	90 e0       	ldi	r25, 0x00	; 0
    218c:	24 e0       	ldi	r18, 0x04	; 4
    218e:	30 e0       	ldi	r19, 0x00	; 0
    2190:	f9 01       	movw	r30, r18
    2192:	21 81       	ldd	r18, Z+1	; 0x01
    2194:	62 2f       	mov	r22, r18
    2196:	29 81       	ldd	r18, Y+1	; 0x01
    2198:	42 2f       	mov	r20, r18
    219a:	50 e0       	ldi	r21, 0x00	; 0
    219c:	21 e0       	ldi	r18, 0x01	; 1
    219e:	30 e0       	ldi	r19, 0x00	; 0
    21a0:	02 c0       	rjmp	.+4      	; 0x21a6 <PORTB_set_pin_level+0x5c>
    21a2:	22 0f       	add	r18, r18
    21a4:	33 1f       	adc	r19, r19
    21a6:	4a 95       	dec	r20
    21a8:	e2 f7       	brpl	.-8      	; 0x21a2 <PORTB_set_pin_level+0x58>
    21aa:	20 95       	com	r18
    21ac:	26 23       	and	r18, r22
    21ae:	fc 01       	movw	r30, r24
    21b0:	21 83       	std	Z+1, r18	; 0x01
    21b2:	00 00       	nop
    21b4:	0f 90       	pop	r0
    21b6:	0f 90       	pop	r0
    21b8:	df 91       	pop	r29
    21ba:	cf 91       	pop	r28
    21bc:	08 95       	ret

000021be <__vector_6>:
    21be:	1f 92       	push	r1
    21c0:	0f 92       	push	r0
    21c2:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    21c6:	0f 92       	push	r0
    21c8:	11 24       	eor	r1, r1
    21ca:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    21ce:	0f 92       	push	r0
    21d0:	2f 93       	push	r18
    21d2:	3f 93       	push	r19
    21d4:	4f 93       	push	r20
    21d6:	5f 93       	push	r21
    21d8:	6f 93       	push	r22
    21da:	7f 93       	push	r23
    21dc:	8f 93       	push	r24
    21de:	9f 93       	push	r25
    21e0:	af 93       	push	r26
    21e2:	bf 93       	push	r27
    21e4:	ef 93       	push	r30
    21e6:	ff 93       	push	r31
    21e8:	cf 93       	push	r28
    21ea:	df 93       	push	r29
    21ec:	1f 92       	push	r1
    21ee:	cd b7       	in	r28, 0x3d	; 61
    21f0:	de b7       	in	r29, 0x3e	; 62
    21f2:	80 e0       	ldi	r24, 0x00	; 0
    21f4:	90 e0       	ldi	r25, 0x00	; 0
    21f6:	fc 01       	movw	r30, r24
    21f8:	83 81       	ldd	r24, Z+3	; 0x03
    21fa:	89 83       	std	Y+1, r24	; 0x01
    21fc:	89 81       	ldd	r24, Y+1	; 0x01
    21fe:	88 2f       	mov	r24, r24
    2200:	90 e0       	ldi	r25, 0x00	; 0
    2202:	84 70       	andi	r24, 0x04	; 4
    2204:	99 27       	eor	r25, r25
    2206:	89 2b       	or	r24, r25
    2208:	09 f4       	brne	.+2      	; 0x220c <__vector_6+0x4e>
    220a:	81 c0       	rjmp	.+258    	; 0x230e <__vector_6+0x150>
    220c:	0e 94 1d 07 	call	0xe3a	; 0xe3a <system_tick>
    2210:	80 91 50 46 	lds	r24, 0x4650	; 0x804650 <_ZL10g_sleeping>
    2214:	88 23       	and	r24, r24
    2216:	09 f4       	brne	.+2      	; 0x221a <__vector_6+0x5c>
    2218:	78 c0       	rjmp	.+240    	; 0x230a <__vector_6+0x14c>
    221a:	90 91 15 40 	lds	r25, 0x4015	; 0x804015 <_ZL11g_sleepType>
    221e:	81 e0       	ldi	r24, 0x01	; 1
    2220:	92 30       	cpi	r25, 0x02	; 2
    2222:	09 f0       	breq	.+2      	; 0x2226 <__vector_6+0x68>
    2224:	80 e0       	ldi	r24, 0x00	; 0
    2226:	88 23       	and	r24, r24
    2228:	09 f4       	brne	.+2      	; 0x222c <__vector_6+0x6e>
    222a:	50 c0       	rjmp	.+160    	; 0x22cc <__vector_6+0x10e>
    222c:	80 91 c7 45 	lds	r24, 0x45C7	; 0x8045c7 <_ZL12g_on_the_air>
    2230:	90 91 c8 45 	lds	r25, 0x45C8	; 0x8045c8 <_ZL12g_on_the_air+0x1>
    2234:	a0 91 c9 45 	lds	r26, 0x45C9	; 0x8045c9 <_ZL12g_on_the_air+0x2>
    2238:	b0 91 ca 45 	lds	r27, 0x45CA	; 0x8045ca <_ZL12g_on_the_air+0x3>
    223c:	88 27       	eor	r24, r24
    223e:	b7 fd       	sbrc	r27, 7
    2240:	83 95       	inc	r24
    2242:	99 27       	eor	r25, r25
    2244:	aa 27       	eor	r26, r26
    2246:	bb 27       	eor	r27, r27
    2248:	88 23       	and	r24, r24
    224a:	99 f0       	breq	.+38     	; 0x2272 <__vector_6+0xb4>
    224c:	80 91 c7 45 	lds	r24, 0x45C7	; 0x8045c7 <_ZL12g_on_the_air>
    2250:	90 91 c8 45 	lds	r25, 0x45C8	; 0x8045c8 <_ZL12g_on_the_air+0x1>
    2254:	a0 91 c9 45 	lds	r26, 0x45C9	; 0x8045c9 <_ZL12g_on_the_air+0x2>
    2258:	b0 91 ca 45 	lds	r27, 0x45CA	; 0x8045ca <_ZL12g_on_the_air+0x3>
    225c:	01 96       	adiw	r24, 0x01	; 1
    225e:	a1 1d       	adc	r26, r1
    2260:	b1 1d       	adc	r27, r1
    2262:	80 93 c7 45 	sts	0x45C7, r24	; 0x8045c7 <_ZL12g_on_the_air>
    2266:	90 93 c8 45 	sts	0x45C8, r25	; 0x8045c8 <_ZL12g_on_the_air+0x1>
    226a:	a0 93 c9 45 	sts	0x45C9, r26	; 0x8045c9 <_ZL12g_on_the_air+0x2>
    226e:	b0 93 ca 45 	sts	0x45CA, r27	; 0x8045ca <_ZL12g_on_the_air+0x3>
    2272:	80 91 c7 45 	lds	r24, 0x45C7	; 0x8045c7 <_ZL12g_on_the_air>
    2276:	90 91 c8 45 	lds	r25, 0x45C8	; 0x8045c8 <_ZL12g_on_the_air+0x1>
    227a:	a0 91 c9 45 	lds	r26, 0x45C9	; 0x8045c9 <_ZL12g_on_the_air+0x2>
    227e:	b0 91 ca 45 	lds	r27, 0x45CA	; 0x8045ca <_ZL12g_on_the_air+0x3>
    2282:	8b 3f       	cpi	r24, 0xFB	; 251
    2284:	9f 4f       	sbci	r25, 0xFF	; 255
    2286:	af 4f       	sbci	r26, 0xFF	; 255
    2288:	bf 4f       	sbci	r27, 0xFF	; 255
    228a:	9c f4       	brge	.+38     	; 0x22b2 <__vector_6+0xf4>
    228c:	80 e0       	ldi	r24, 0x00	; 0
    228e:	90 e0       	ldi	r25, 0x00	; 0
    2290:	0e 94 eb 06 	call	0xdd6	; 0xdd6 <time>
    2294:	9b 01       	movw	r18, r22
    2296:	ac 01       	movw	r20, r24
    2298:	80 91 51 46 	lds	r24, 0x4651	; 0x804651 <_ZL17g_time_to_wake_up>
    229c:	90 91 52 46 	lds	r25, 0x4652	; 0x804652 <_ZL17g_time_to_wake_up+0x1>
    22a0:	a0 91 53 46 	lds	r26, 0x4653	; 0x804653 <_ZL17g_time_to_wake_up+0x2>
    22a4:	b0 91 54 46 	lds	r27, 0x4654	; 0x804654 <_ZL17g_time_to_wake_up+0x3>
    22a8:	28 17       	cp	r18, r24
    22aa:	39 07       	cpc	r19, r25
    22ac:	4a 07       	cpc	r20, r26
    22ae:	5b 07       	cpc	r21, r27
    22b0:	10 f0       	brcs	.+4      	; 0x22b6 <__vector_6+0xf8>
    22b2:	81 e0       	ldi	r24, 0x01	; 1
    22b4:	01 c0       	rjmp	.+2      	; 0x22b8 <__vector_6+0xfa>
    22b6:	80 e0       	ldi	r24, 0x00	; 0
    22b8:	88 23       	and	r24, r24
    22ba:	49 f1       	breq	.+82     	; 0x230e <__vector_6+0x150>
    22bc:	10 92 4f 46 	sts	0x464F, r1	; 0x80464f <_ZL17g_go_to_sleep_now>
    22c0:	10 92 50 46 	sts	0x4650, r1	; 0x804650 <_ZL10g_sleeping>
    22c4:	81 e0       	ldi	r24, 0x01	; 1
    22c6:	80 93 55 46 	sts	0x4655, r24	; 0x804655 <_ZL12g_awakenedBy>
    22ca:	21 c0       	rjmp	.+66     	; 0x230e <__vector_6+0x150>
    22cc:	80 e0       	ldi	r24, 0x00	; 0
    22ce:	90 e0       	ldi	r25, 0x00	; 0
    22d0:	0e 94 eb 06 	call	0xdd6	; 0xdd6 <time>
    22d4:	9b 01       	movw	r18, r22
    22d6:	ac 01       	movw	r20, r24
    22d8:	80 91 51 46 	lds	r24, 0x4651	; 0x804651 <_ZL17g_time_to_wake_up>
    22dc:	90 91 52 46 	lds	r25, 0x4652	; 0x804652 <_ZL17g_time_to_wake_up+0x1>
    22e0:	a0 91 53 46 	lds	r26, 0x4653	; 0x804653 <_ZL17g_time_to_wake_up+0x2>
    22e4:	b0 91 54 46 	lds	r27, 0x4654	; 0x804654 <_ZL17g_time_to_wake_up+0x3>
    22e8:	61 e0       	ldi	r22, 0x01	; 1
    22ea:	28 17       	cp	r18, r24
    22ec:	39 07       	cpc	r19, r25
    22ee:	4a 07       	cpc	r20, r26
    22f0:	5b 07       	cpc	r21, r27
    22f2:	08 f4       	brcc	.+2      	; 0x22f6 <__vector_6+0x138>
    22f4:	60 e0       	ldi	r22, 0x00	; 0
    22f6:	66 23       	and	r22, r22
    22f8:	51 f0       	breq	.+20     	; 0x230e <__vector_6+0x150>
    22fa:	10 92 4f 46 	sts	0x464F, r1	; 0x80464f <_ZL17g_go_to_sleep_now>
    22fe:	10 92 50 46 	sts	0x4650, r1	; 0x804650 <_ZL10g_sleeping>
    2302:	81 e0       	ldi	r24, 0x01	; 1
    2304:	80 93 55 46 	sts	0x4655, r24	; 0x804655 <_ZL12g_awakenedBy>
    2308:	02 c0       	rjmp	.+4      	; 0x230e <__vector_6+0x150>
    230a:	0e 94 a5 11 	call	0x234a	; 0x234a <_Z17handle_1sec_tasksv>
    230e:	80 e0       	ldi	r24, 0x00	; 0
    2310:	90 e0       	ldi	r25, 0x00	; 0
    2312:	2f ef       	ldi	r18, 0xFF	; 255
    2314:	fc 01       	movw	r30, r24
    2316:	23 83       	std	Z+3, r18	; 0x03
    2318:	00 00       	nop
    231a:	0f 90       	pop	r0
    231c:	df 91       	pop	r29
    231e:	cf 91       	pop	r28
    2320:	ff 91       	pop	r31
    2322:	ef 91       	pop	r30
    2324:	bf 91       	pop	r27
    2326:	af 91       	pop	r26
    2328:	9f 91       	pop	r25
    232a:	8f 91       	pop	r24
    232c:	7f 91       	pop	r23
    232e:	6f 91       	pop	r22
    2330:	5f 91       	pop	r21
    2332:	4f 91       	pop	r20
    2334:	3f 91       	pop	r19
    2336:	2f 91       	pop	r18
    2338:	0f 90       	pop	r0
    233a:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    233e:	0f 90       	pop	r0
    2340:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    2344:	0f 90       	pop	r0
    2346:	1f 90       	pop	r1
    2348:	18 95       	reti

0000234a <_Z17handle_1sec_tasksv>:
    234a:	ef 92       	push	r14
    234c:	ff 92       	push	r15
    234e:	0f 93       	push	r16
    2350:	1f 93       	push	r17
    2352:	cf 93       	push	r28
    2354:	df 93       	push	r29
    2356:	cd b7       	in	r28, 0x3d	; 61
    2358:	de b7       	in	r29, 0x3e	; 62
    235a:	63 97       	sbiw	r28, 0x13	; 19
    235c:	cd bf       	out	0x3d, r28	; 61
    235e:	de bf       	out	0x3e, r29	; 62
    2360:	1d 82       	std	Y+5, r1	; 0x05
    2362:	1e 82       	std	Y+6, r1	; 0x06
    2364:	1f 82       	std	Y+7, r1	; 0x07
    2366:	18 86       	std	Y+8, r1	; 0x08
    2368:	80 91 66 46 	lds	r24, 0x4666	; 0x804666 <g_check_temperature>
    236c:	90 91 67 46 	lds	r25, 0x4667	; 0x804667 <g_check_temperature+0x1>
    2370:	21 e0       	ldi	r18, 0x01	; 1
    2372:	89 2b       	or	r24, r25
    2374:	09 f4       	brne	.+2      	; 0x2378 <_Z17handle_1sec_tasksv+0x2e>
    2376:	20 e0       	ldi	r18, 0x00	; 0
    2378:	22 23       	and	r18, r18
    237a:	49 f0       	breq	.+18     	; 0x238e <_Z17handle_1sec_tasksv+0x44>
    237c:	80 91 66 46 	lds	r24, 0x4666	; 0x804666 <g_check_temperature>
    2380:	90 91 67 46 	lds	r25, 0x4667	; 0x804667 <g_check_temperature+0x1>
    2384:	01 97       	sbiw	r24, 0x01	; 1
    2386:	80 93 66 46 	sts	0x4666, r24	; 0x804666 <g_check_temperature>
    238a:	90 93 67 46 	sts	0x4667, r25	; 0x804667 <g_check_temperature+0x1>
    238e:	80 91 4a 46 	lds	r24, 0x464A	; 0x80464a <g_event_commenced>
    2392:	88 23       	and	r24, r24
    2394:	09 f4       	brne	.+2      	; 0x2398 <_Z17handle_1sec_tasksv+0x4e>
    2396:	69 c0       	rjmp	.+210    	; 0x246a <_Z17handle_1sec_tasksv+0x120>
    2398:	80 91 44 46 	lds	r24, 0x4644	; 0x804644 <g_event_finish_epoch>
    239c:	90 91 45 46 	lds	r25, 0x4645	; 0x804645 <g_event_finish_epoch+0x1>
    23a0:	a0 91 46 46 	lds	r26, 0x4646	; 0x804646 <g_event_finish_epoch+0x2>
    23a4:	b0 91 47 46 	lds	r27, 0x4647	; 0x804647 <g_event_finish_epoch+0x3>
    23a8:	89 2b       	or	r24, r25
    23aa:	8a 2b       	or	r24, r26
    23ac:	8b 2b       	or	r24, r27
    23ae:	71 f0       	breq	.+28     	; 0x23cc <_Z17handle_1sec_tasksv+0x82>
    23b0:	90 91 4b 46 	lds	r25, 0x464B	; 0x80464b <g_check_for_next_event>
    23b4:	81 e0       	ldi	r24, 0x01	; 1
    23b6:	89 27       	eor	r24, r25
    23b8:	88 23       	and	r24, r24
    23ba:	41 f0       	breq	.+16     	; 0x23cc <_Z17handle_1sec_tasksv+0x82>
    23bc:	90 91 cf 45 	lds	r25, 0x45CF	; 0x8045cf <_ZL20g_shutting_down_wifi>
    23c0:	81 e0       	ldi	r24, 0x01	; 1
    23c2:	89 27       	eor	r24, r25
    23c4:	88 23       	and	r24, r24
    23c6:	11 f0       	breq	.+4      	; 0x23cc <_Z17handle_1sec_tasksv+0x82>
    23c8:	81 e0       	ldi	r24, 0x01	; 1
    23ca:	01 c0       	rjmp	.+2      	; 0x23ce <_Z17handle_1sec_tasksv+0x84>
    23cc:	80 e0       	ldi	r24, 0x00	; 0
    23ce:	88 23       	and	r24, r24
    23d0:	09 f4       	brne	.+2      	; 0x23d4 <_Z17handle_1sec_tasksv+0x8a>
    23d2:	4b c0       	rjmp	.+150    	; 0x246a <_Z17handle_1sec_tasksv+0x120>
    23d4:	80 e0       	ldi	r24, 0x00	; 0
    23d6:	90 e0       	ldi	r25, 0x00	; 0
    23d8:	0e 94 eb 06 	call	0xdd6	; 0xdd6 <time>
    23dc:	dc 01       	movw	r26, r24
    23de:	cb 01       	movw	r24, r22
    23e0:	8d 83       	std	Y+5, r24	; 0x05
    23e2:	9e 83       	std	Y+6, r25	; 0x06
    23e4:	af 83       	std	Y+7, r26	; 0x07
    23e6:	b8 87       	std	Y+8, r27	; 0x08
    23e8:	80 91 44 46 	lds	r24, 0x4644	; 0x804644 <g_event_finish_epoch>
    23ec:	90 91 45 46 	lds	r25, 0x4645	; 0x804645 <g_event_finish_epoch+0x1>
    23f0:	a0 91 46 46 	lds	r26, 0x4646	; 0x804646 <g_event_finish_epoch+0x2>
    23f4:	b0 91 47 46 	lds	r27, 0x4647	; 0x804647 <g_event_finish_epoch+0x3>
    23f8:	61 e0       	ldi	r22, 0x01	; 1
    23fa:	2d 81       	ldd	r18, Y+5	; 0x05
    23fc:	3e 81       	ldd	r19, Y+6	; 0x06
    23fe:	4f 81       	ldd	r20, Y+7	; 0x07
    2400:	58 85       	ldd	r21, Y+8	; 0x08
    2402:	28 17       	cp	r18, r24
    2404:	39 07       	cpc	r19, r25
    2406:	4a 07       	cpc	r20, r26
    2408:	5b 07       	cpc	r21, r27
    240a:	08 f4       	brcc	.+2      	; 0x240e <_Z17handle_1sec_tasksv+0xc4>
    240c:	60 e0       	ldi	r22, 0x00	; 0
    240e:	66 23       	and	r22, r22
    2410:	61 f1       	breq	.+88     	; 0x246a <_Z17handle_1sec_tasksv+0x120>
    2412:	8c ef       	ldi	r24, 0xFC	; 252
    2414:	80 93 c3 45 	sts	0x45C3, r24	; 0x8045c3 <_ZL18g_last_status_code>
    2418:	10 92 c7 45 	sts	0x45C7, r1	; 0x8045c7 <_ZL12g_on_the_air>
    241c:	10 92 c8 45 	sts	0x45C8, r1	; 0x8045c8 <_ZL12g_on_the_air+0x1>
    2420:	10 92 c9 45 	sts	0x45C9, r1	; 0x8045c9 <_ZL12g_on_the_air+0x2>
    2424:	10 92 ca 45 	sts	0x45CA, r1	; 0x8045ca <_ZL12g_on_the_air+0x3>
    2428:	80 e0       	ldi	r24, 0x00	; 0
    242a:	0e 94 f7 75 	call	0xebee	; 0xebee <_Z14keyTransmitterb>
    242e:	10 92 48 46 	sts	0x4648, r1	; 0x804648 <g_event_enabled>
    2432:	10 92 4a 46 	sts	0x464A, r1	; 0x80464a <g_event_commenced>
    2436:	81 e0       	ldi	r24, 0x01	; 1
    2438:	80 93 4b 46 	sts	0x464B, r24	; 0x80464b <g_check_for_next_event>
    243c:	82 e0       	ldi	r24, 0x02	; 2
    243e:	80 93 ce 45 	sts	0x45CE, r24	; 0x8045ce <_ZL19g_wifi_enable_delay>
    2442:	83 e0       	ldi	r24, 0x03	; 3
    2444:	80 93 15 40 	sts	0x4015, r24	; 0x804015 <_ZL11g_sleepType>
    2448:	80 91 d1 45 	lds	r24, 0x45D1	; 0x8045d1 <_ZL16g_hardware_error>
    244c:	90 91 d2 45 	lds	r25, 0x45D2	; 0x8045d2 <_ZL16g_hardware_error+0x1>
    2450:	84 70       	andi	r24, 0x04	; 4
    2452:	99 27       	eor	r25, r25
    2454:	21 e0       	ldi	r18, 0x01	; 1
    2456:	89 2b       	or	r24, r25
    2458:	09 f4       	brne	.+2      	; 0x245c <_Z17handle_1sec_tasksv+0x112>
    245a:	20 e0       	ldi	r18, 0x00	; 0
    245c:	22 23       	and	r18, r18
    245e:	29 f0       	breq	.+10     	; 0x246a <_Z17handle_1sec_tasksv+0x120>
    2460:	10 92 4b 46 	sts	0x464B, r1	; 0x80464b <g_check_for_next_event>
    2464:	81 e0       	ldi	r24, 0x01	; 1
    2466:	80 93 4f 46 	sts	0x464F, r24	; 0x80464f <_ZL17g_go_to_sleep_now>
    246a:	80 91 48 46 	lds	r24, 0x4648	; 0x804648 <g_event_enabled>
    246e:	88 23       	and	r24, r24
    2470:	09 f4       	brne	.+2      	; 0x2474 <_Z17handle_1sec_tasksv+0x12a>
    2472:	01 c3       	rjmp	.+1538   	; 0x2a76 <_Z17handle_1sec_tasksv+0x72c>
    2474:	80 91 4a 46 	lds	r24, 0x464A	; 0x80464a <g_event_commenced>
    2478:	88 23       	and	r24, r24
    247a:	09 f4       	brne	.+2      	; 0x247e <_Z17handle_1sec_tasksv+0x134>
    247c:	4f c2       	rjmp	.+1182   	; 0x291c <_Z17handle_1sec_tasksv+0x5d2>
    247e:	80 91 cb 45 	lds	r24, 0x45CB	; 0x8045cb <_ZL26g_sendID_seconds_countdown>
    2482:	90 91 cc 45 	lds	r25, 0x45CC	; 0x8045cc <_ZL26g_sendID_seconds_countdown+0x1>
    2486:	21 e0       	ldi	r18, 0x01	; 1
    2488:	89 2b       	or	r24, r25
    248a:	09 f4       	brne	.+2      	; 0x248e <_Z17handle_1sec_tasksv+0x144>
    248c:	20 e0       	ldi	r18, 0x00	; 0
    248e:	22 23       	and	r18, r18
    2490:	49 f0       	breq	.+18     	; 0x24a4 <_Z17handle_1sec_tasksv+0x15a>
    2492:	80 91 cb 45 	lds	r24, 0x45CB	; 0x8045cb <_ZL26g_sendID_seconds_countdown>
    2496:	90 91 cc 45 	lds	r25, 0x45CC	; 0x8045cc <_ZL26g_sendID_seconds_countdown+0x1>
    249a:	01 97       	sbiw	r24, 0x01	; 1
    249c:	80 93 cb 45 	sts	0x45CB, r24	; 0x8045cb <_ZL26g_sendID_seconds_countdown>
    24a0:	90 93 cc 45 	sts	0x45CC, r25	; 0x8045cc <_ZL26g_sendID_seconds_countdown+0x1>
    24a4:	80 91 c7 45 	lds	r24, 0x45C7	; 0x8045c7 <_ZL12g_on_the_air>
    24a8:	90 91 c8 45 	lds	r25, 0x45C8	; 0x8045c8 <_ZL12g_on_the_air+0x1>
    24ac:	a0 91 c9 45 	lds	r26, 0x45C9	; 0x8045c9 <_ZL12g_on_the_air+0x2>
    24b0:	b0 91 ca 45 	lds	r27, 0x45CA	; 0x8045ca <_ZL12g_on_the_air+0x3>
    24b4:	21 e0       	ldi	r18, 0x01	; 1
    24b6:	89 2b       	or	r24, r25
    24b8:	8a 2b       	or	r24, r26
    24ba:	8b 2b       	or	r24, r27
    24bc:	09 f4       	brne	.+2      	; 0x24c0 <_Z17handle_1sec_tasksv+0x176>
    24be:	20 e0       	ldi	r18, 0x00	; 0
    24c0:	22 23       	and	r18, r18
    24c2:	09 f4       	brne	.+2      	; 0x24c6 <_Z17handle_1sec_tasksv+0x17c>
    24c4:	d8 c2       	rjmp	.+1456   	; 0x2a76 <_Z17handle_1sec_tasksv+0x72c>
    24c6:	80 91 c7 45 	lds	r24, 0x45C7	; 0x8045c7 <_ZL12g_on_the_air>
    24ca:	90 91 c8 45 	lds	r25, 0x45C8	; 0x8045c8 <_ZL12g_on_the_air+0x1>
    24ce:	a0 91 c9 45 	lds	r26, 0x45C9	; 0x8045c9 <_ZL12g_on_the_air+0x2>
    24d2:	b0 91 ca 45 	lds	r27, 0x45CA	; 0x8045ca <_ZL12g_on_the_air+0x3>
    24d6:	21 e0       	ldi	r18, 0x01	; 1
    24d8:	18 16       	cp	r1, r24
    24da:	19 06       	cpc	r1, r25
    24dc:	1a 06       	cpc	r1, r26
    24de:	1b 06       	cpc	r1, r27
    24e0:	0c f0       	brlt	.+2      	; 0x24e4 <_Z17handle_1sec_tasksv+0x19a>
    24e2:	20 e0       	ldi	r18, 0x00	; 0
    24e4:	22 23       	and	r18, r18
    24e6:	09 f4       	brne	.+2      	; 0x24ea <_Z17handle_1sec_tasksv+0x1a0>
    24e8:	b9 c1       	rjmp	.+882    	; 0x285c <_Z17handle_1sec_tasksv+0x512>
    24ea:	80 91 c7 45 	lds	r24, 0x45C7	; 0x8045c7 <_ZL12g_on_the_air>
    24ee:	90 91 c8 45 	lds	r25, 0x45C8	; 0x8045c8 <_ZL12g_on_the_air+0x1>
    24f2:	a0 91 c9 45 	lds	r26, 0x45C9	; 0x8045c9 <_ZL12g_on_the_air+0x2>
    24f6:	b0 91 ca 45 	lds	r27, 0x45CA	; 0x8045ca <_ZL12g_on_the_air+0x3>
    24fa:	01 97       	sbiw	r24, 0x01	; 1
    24fc:	a1 09       	sbc	r26, r1
    24fe:	b1 09       	sbc	r27, r1
    2500:	80 93 c7 45 	sts	0x45C7, r24	; 0x8045c7 <_ZL12g_on_the_air>
    2504:	90 93 c8 45 	sts	0x45C8, r25	; 0x8045c8 <_ZL12g_on_the_air+0x1>
    2508:	a0 93 c9 45 	sts	0x45C9, r26	; 0x8045c9 <_ZL12g_on_the_air+0x2>
    250c:	b0 93 ca 45 	sts	0x45CA, r27	; 0x8045ca <_ZL12g_on_the_air+0x3>
    2510:	80 91 cb 45 	lds	r24, 0x45CB	; 0x8045cb <_ZL26g_sendID_seconds_countdown>
    2514:	90 91 cc 45 	lds	r25, 0x45CC	; 0x8045cc <_ZL26g_sendID_seconds_countdown+0x1>
    2518:	89 2b       	or	r24, r25
    251a:	41 f4       	brne	.+16     	; 0x252c <_Z17handle_1sec_tasksv+0x1e2>
    251c:	80 91 3c 46 	lds	r24, 0x463C	; 0x80463c <g_time_needed_for_ID>
    2520:	90 91 3d 46 	lds	r25, 0x463D	; 0x80463d <g_time_needed_for_ID+0x1>
    2524:	89 2b       	or	r24, r25
    2526:	11 f0       	breq	.+4      	; 0x252c <_Z17handle_1sec_tasksv+0x1e2>
    2528:	81 e0       	ldi	r24, 0x01	; 1
    252a:	01 c0       	rjmp	.+2      	; 0x252e <_Z17handle_1sec_tasksv+0x1e4>
    252c:	80 e0       	ldi	r24, 0x00	; 0
    252e:	88 23       	and	r24, r24
    2530:	e1 f1       	breq	.+120    	; 0x25aa <_Z17handle_1sec_tasksv+0x260>
    2532:	80 91 3c 46 	lds	r24, 0x463C	; 0x80463c <g_time_needed_for_ID>
    2536:	90 91 3d 46 	lds	r25, 0x463D	; 0x80463d <g_time_needed_for_ID+0x1>
    253a:	9c 01       	movw	r18, r24
    253c:	40 e0       	ldi	r20, 0x00	; 0
    253e:	50 e0       	ldi	r21, 0x00	; 0
    2540:	80 91 c7 45 	lds	r24, 0x45C7	; 0x8045c7 <_ZL12g_on_the_air>
    2544:	90 91 c8 45 	lds	r25, 0x45C8	; 0x8045c8 <_ZL12g_on_the_air+0x1>
    2548:	a0 91 c9 45 	lds	r26, 0x45C9	; 0x8045c9 <_ZL12g_on_the_air+0x2>
    254c:	b0 91 ca 45 	lds	r27, 0x45CA	; 0x8045ca <_ZL12g_on_the_air+0x3>
    2550:	61 e0       	ldi	r22, 0x01	; 1
    2552:	28 17       	cp	r18, r24
    2554:	39 07       	cpc	r19, r25
    2556:	4a 07       	cpc	r20, r26
    2558:	5b 07       	cpc	r21, r27
    255a:	09 f0       	breq	.+2      	; 0x255e <_Z17handle_1sec_tasksv+0x214>
    255c:	60 e0       	ldi	r22, 0x00	; 0
    255e:	66 23       	and	r22, r22
    2560:	21 f1       	breq	.+72     	; 0x25aa <_Z17handle_1sec_tasksv+0x260>
    2562:	8f ee       	ldi	r24, 0xEF	; 239
    2564:	80 93 c3 45 	sts	0x45C3, r24	; 0x8045c3 <_ZL18g_last_status_code>
    2568:	80 91 13 40 	lds	r24, 0x4013	; 0x804013 <g_ID_period_seconds>
    256c:	90 91 14 40 	lds	r25, 0x4014	; 0x804014 <g_ID_period_seconds+0x1>
    2570:	80 93 cb 45 	sts	0x45CB, r24	; 0x8045cb <_ZL26g_sendID_seconds_countdown>
    2574:	90 93 cc 45 	sts	0x45CC, r25	; 0x8045cc <_ZL26g_sendID_seconds_countdown+0x1>
    2578:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_id_codespeed>
    257c:	0e 94 89 27 	call	0x4f12	; 0x4f12 <_Z13throttleValueh>
    2580:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    2584:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    2588:	19 8a       	std	Y+17, r1	; 0x11
    258a:	ce 01       	movw	r24, r28
    258c:	41 96       	adiw	r24, 0x11	; 17
    258e:	40 e0       	ldi	r20, 0x00	; 0
    2590:	50 e0       	ldi	r21, 0x00	; 0
    2592:	bc 01       	movw	r22, r24
    2594:	87 e2       	ldi	r24, 0x27	; 39
    2596:	96 e4       	ldi	r25, 0x46	; 70
    2598:	0e 94 1b 60 	call	0xc036	; 0xc036 <_Z9makeMorsePcPbS0_>
    259c:	81 e0       	ldi	r24, 0x01	; 1
    259e:	80 93 4d 46 	sts	0x464D, r24	; 0x80464d <g_sending_station_ID>
    25a2:	10 92 85 46 	sts	0x4685, r1	; 0x804685 <_ZZ17handle_1sec_tasksvE17extendedOnAirTime>
    25a6:	10 92 86 46 	sts	0x4686, r1	; 0x804686 <_ZZ17handle_1sec_tasksvE17extendedOnAirTime+0x1>
    25aa:	80 91 c7 45 	lds	r24, 0x45C7	; 0x8045c7 <_ZL12g_on_the_air>
    25ae:	90 91 c8 45 	lds	r25, 0x45C8	; 0x8045c8 <_ZL12g_on_the_air+0x1>
    25b2:	a0 91 c9 45 	lds	r26, 0x45C9	; 0x8045c9 <_ZL12g_on_the_air+0x2>
    25b6:	b0 91 ca 45 	lds	r27, 0x45CA	; 0x8045ca <_ZL12g_on_the_air+0x3>
    25ba:	21 e0       	ldi	r18, 0x01	; 1
    25bc:	89 2b       	or	r24, r25
    25be:	8a 2b       	or	r24, r26
    25c0:	8b 2b       	or	r24, r27
    25c2:	09 f0       	breq	.+2      	; 0x25c6 <_Z17handle_1sec_tasksv+0x27c>
    25c4:	20 e0       	ldi	r18, 0x00	; 0
    25c6:	22 23       	and	r18, r18
    25c8:	09 f4       	brne	.+2      	; 0x25cc <_Z17handle_1sec_tasksv+0x282>
    25ca:	55 c2       	rjmp	.+1194   	; 0x2a76 <_Z17handle_1sec_tasksv+0x72c>
    25cc:	80 91 4d 46 	lds	r24, 0x464D	; 0x80464d <g_sending_station_ID>
    25d0:	88 23       	and	r24, r24
    25d2:	e9 f0       	breq	.+58     	; 0x260e <_Z17handle_1sec_tasksv+0x2c4>
    25d4:	80 91 c7 45 	lds	r24, 0x45C7	; 0x8045c7 <_ZL12g_on_the_air>
    25d8:	90 91 c8 45 	lds	r25, 0x45C8	; 0x8045c8 <_ZL12g_on_the_air+0x1>
    25dc:	a0 91 c9 45 	lds	r26, 0x45C9	; 0x8045c9 <_ZL12g_on_the_air+0x2>
    25e0:	b0 91 ca 45 	lds	r27, 0x45CA	; 0x8045ca <_ZL12g_on_the_air+0x3>
    25e4:	01 96       	adiw	r24, 0x01	; 1
    25e6:	a1 1d       	adc	r26, r1
    25e8:	b1 1d       	adc	r27, r1
    25ea:	80 93 c7 45 	sts	0x45C7, r24	; 0x8045c7 <_ZL12g_on_the_air>
    25ee:	90 93 c8 45 	sts	0x45C8, r25	; 0x8045c8 <_ZL12g_on_the_air+0x1>
    25f2:	a0 93 c9 45 	sts	0x45C9, r26	; 0x8045c9 <_ZL12g_on_the_air+0x2>
    25f6:	b0 93 ca 45 	sts	0x45CA, r27	; 0x8045ca <_ZL12g_on_the_air+0x3>
    25fa:	80 91 85 46 	lds	r24, 0x4685	; 0x804685 <_ZZ17handle_1sec_tasksvE17extendedOnAirTime>
    25fe:	90 91 86 46 	lds	r25, 0x4686	; 0x804686 <_ZZ17handle_1sec_tasksvE17extendedOnAirTime+0x1>
    2602:	01 96       	adiw	r24, 0x01	; 1
    2604:	80 93 85 46 	sts	0x4685, r24	; 0x804685 <_ZZ17handle_1sec_tasksvE17extendedOnAirTime>
    2608:	90 93 86 46 	sts	0x4686, r25	; 0x804686 <_ZZ17handle_1sec_tasksvE17extendedOnAirTime+0x1>
    260c:	34 c2       	rjmp	.+1128   	; 0x2a76 <_Z17handle_1sec_tasksv+0x72c>
    260e:	80 91 11 40 	lds	r24, 0x4011	; 0x804011 <g_off_air_seconds>
    2612:	90 91 12 40 	lds	r25, 0x4012	; 0x804012 <g_off_air_seconds+0x1>
    2616:	21 e0       	ldi	r18, 0x01	; 1
    2618:	89 2b       	or	r24, r25
    261a:	09 f4       	brne	.+2      	; 0x261e <_Z17handle_1sec_tasksv+0x2d4>
    261c:	20 e0       	ldi	r18, 0x00	; 0
    261e:	22 23       	and	r18, r18
    2620:	09 f4       	brne	.+2      	; 0x2624 <_Z17handle_1sec_tasksv+0x2da>
    2622:	03 c1       	rjmp	.+518    	; 0x282a <_Z17handle_1sec_tasksv+0x4e0>
    2624:	80 e0       	ldi	r24, 0x00	; 0
    2626:	0e 94 f7 75 	call	0xebee	; 0xebee <_Z14keyTransmitterb>
    262a:	80 91 11 40 	lds	r24, 0x4011	; 0x804011 <g_off_air_seconds>
    262e:	90 91 12 40 	lds	r25, 0x4012	; 0x804012 <g_off_air_seconds+0x1>
    2632:	20 91 c7 45 	lds	r18, 0x45C7	; 0x8045c7 <_ZL12g_on_the_air>
    2636:	30 91 c8 45 	lds	r19, 0x45C8	; 0x8045c8 <_ZL12g_on_the_air+0x1>
    263a:	40 91 c9 45 	lds	r20, 0x45C9	; 0x8045c9 <_ZL12g_on_the_air+0x2>
    263e:	50 91 ca 45 	lds	r21, 0x45CA	; 0x8045ca <_ZL12g_on_the_air+0x3>
    2642:	09 2e       	mov	r0, r25
    2644:	00 0c       	add	r0, r0
    2646:	aa 0b       	sbc	r26, r26
    2648:	bb 0b       	sbc	r27, r27
    264a:	79 01       	movw	r14, r18
    264c:	8a 01       	movw	r16, r20
    264e:	e8 1a       	sub	r14, r24
    2650:	f9 0a       	sbc	r15, r25
    2652:	0a 0b       	sbc	r16, r26
    2654:	1b 0b       	sbc	r17, r27
    2656:	d8 01       	movw	r26, r16
    2658:	c7 01       	movw	r24, r14
    265a:	80 93 c7 45 	sts	0x45C7, r24	; 0x8045c7 <_ZL12g_on_the_air>
    265e:	90 93 c8 45 	sts	0x45C8, r25	; 0x8045c8 <_ZL12g_on_the_air+0x1>
    2662:	a0 93 c9 45 	sts	0x45C9, r26	; 0x8045c9 <_ZL12g_on_the_air+0x2>
    2666:	b0 93 ca 45 	sts	0x45CA, r27	; 0x8045ca <_ZL12g_on_the_air+0x3>
    266a:	80 91 85 46 	lds	r24, 0x4685	; 0x804685 <_ZZ17handle_1sec_tasksvE17extendedOnAirTime>
    266e:	90 91 86 46 	lds	r25, 0x4686	; 0x804686 <_ZZ17handle_1sec_tasksvE17extendedOnAirTime+0x1>
    2672:	9c 01       	movw	r18, r24
    2674:	40 e0       	ldi	r20, 0x00	; 0
    2676:	50 e0       	ldi	r21, 0x00	; 0
    2678:	80 91 c7 45 	lds	r24, 0x45C7	; 0x8045c7 <_ZL12g_on_the_air>
    267c:	90 91 c8 45 	lds	r25, 0x45C8	; 0x8045c8 <_ZL12g_on_the_air+0x1>
    2680:	a0 91 c9 45 	lds	r26, 0x45C9	; 0x8045c9 <_ZL12g_on_the_air+0x2>
    2684:	b0 91 ca 45 	lds	r27, 0x45CA	; 0x8045ca <_ZL12g_on_the_air+0x3>
    2688:	82 0f       	add	r24, r18
    268a:	93 1f       	adc	r25, r19
    268c:	a4 1f       	adc	r26, r20
    268e:	b5 1f       	adc	r27, r21
    2690:	80 93 c7 45 	sts	0x45C7, r24	; 0x8045c7 <_ZL12g_on_the_air>
    2694:	90 93 c8 45 	sts	0x45C8, r25	; 0x8045c8 <_ZL12g_on_the_air+0x1>
    2698:	a0 93 c9 45 	sts	0x45C9, r26	; 0x8045c9 <_ZL12g_on_the_air+0x2>
    269c:	b0 93 ca 45 	sts	0x45CA, r27	; 0x8045ca <_ZL12g_on_the_air+0x3>
    26a0:	10 92 85 46 	sts	0x4685, r1	; 0x804685 <_ZZ17handle_1sec_tasksvE17extendedOnAirTime>
    26a4:	10 92 86 46 	sts	0x4686, r1	; 0x804686 <_ZZ17handle_1sec_tasksvE17extendedOnAirTime+0x1>
    26a8:	81 e0       	ldi	r24, 0x01	; 1
    26aa:	89 8b       	std	Y+17, r24	; 0x11
    26ac:	0e 94 1f 2f 	call	0x5e3e	; 0x5e3e <_Z14getPatternTextv>
    26b0:	9c 01       	movw	r18, r24
    26b2:	ce 01       	movw	r24, r28
    26b4:	41 96       	adiw	r24, 0x11	; 17
    26b6:	40 e0       	ldi	r20, 0x00	; 0
    26b8:	50 e0       	ldi	r21, 0x00	; 0
    26ba:	bc 01       	movw	r22, r24
    26bc:	c9 01       	movw	r24, r18
    26be:	0e 94 1b 60 	call	0xc036	; 0xc036 <_Z9makeMorsePcPbS0_>
    26c2:	8e ef       	ldi	r24, 0xFE	; 254
    26c4:	80 93 c3 45 	sts	0x45C3, r24	; 0x8045c3 <_ZL18g_last_status_code>
    26c8:	60 e0       	ldi	r22, 0x00	; 0
    26ca:	8b e6       	ldi	r24, 0x6B	; 107
    26cc:	96 e4       	ldi	r25, 0x46	; 70
    26ce:	0e 94 e3 56 	call	0xadc6	; 0xadc6 <_ZN4leds6setRedEb>
    26d2:	19 82       	std	Y+1, r1	; 0x01
    26d4:	1a 82       	std	Y+2, r1	; 0x02
    26d6:	1b 82       	std	Y+3, r1	; 0x03
    26d8:	1c 82       	std	Y+4, r1	; 0x04
    26da:	80 e0       	ldi	r24, 0x00	; 0
    26dc:	90 e0       	ldi	r25, 0x00	; 0
    26de:	0e 94 eb 06 	call	0xdd6	; 0xdd6 <time>
    26e2:	dc 01       	movw	r26, r24
    26e4:	cb 01       	movw	r24, r22
    26e6:	8d 83       	std	Y+5, r24	; 0x05
    26e8:	9e 83       	std	Y+6, r25	; 0x06
    26ea:	af 83       	std	Y+7, r26	; 0x07
    26ec:	b8 87       	std	Y+8, r27	; 0x08
    26ee:	80 91 44 46 	lds	r24, 0x4644	; 0x804644 <g_event_finish_epoch>
    26f2:	90 91 45 46 	lds	r25, 0x4645	; 0x804645 <g_event_finish_epoch+0x1>
    26f6:	a0 91 46 46 	lds	r26, 0x4646	; 0x804646 <g_event_finish_epoch+0x2>
    26fa:	b0 91 47 46 	lds	r27, 0x4647	; 0x804647 <g_event_finish_epoch+0x3>
    26fe:	61 e0       	ldi	r22, 0x01	; 1
    2700:	2d 81       	ldd	r18, Y+5	; 0x05
    2702:	3e 81       	ldd	r19, Y+6	; 0x06
    2704:	4f 81       	ldd	r20, Y+7	; 0x07
    2706:	58 85       	ldd	r21, Y+8	; 0x08
    2708:	28 17       	cp	r18, r24
    270a:	39 07       	cpc	r19, r25
    270c:	4a 07       	cpc	r20, r26
    270e:	5b 07       	cpc	r21, r27
    2710:	08 f0       	brcs	.+2      	; 0x2714 <_Z17handle_1sec_tasksv+0x3ca>
    2712:	60 e0       	ldi	r22, 0x00	; 0
    2714:	66 23       	and	r22, r22
    2716:	b1 f0       	breq	.+44     	; 0x2744 <_Z17handle_1sec_tasksv+0x3fa>
    2718:	80 91 44 46 	lds	r24, 0x4644	; 0x804644 <g_event_finish_epoch>
    271c:	90 91 45 46 	lds	r25, 0x4645	; 0x804645 <g_event_finish_epoch+0x1>
    2720:	a0 91 46 46 	lds	r26, 0x4646	; 0x804646 <g_event_finish_epoch+0x2>
    2724:	b0 91 47 46 	lds	r27, 0x4647	; 0x804647 <g_event_finish_epoch+0x3>
    2728:	2d 81       	ldd	r18, Y+5	; 0x05
    272a:	3e 81       	ldd	r19, Y+6	; 0x06
    272c:	4f 81       	ldd	r20, Y+7	; 0x07
    272e:	58 85       	ldd	r21, Y+8	; 0x08
    2730:	bc 01       	movw	r22, r24
    2732:	cd 01       	movw	r24, r26
    2734:	0e 94 6f 7a 	call	0xf4de	; 0xf4de <_Z7timeDifmm>
    2738:	dc 01       	movw	r26, r24
    273a:	cb 01       	movw	r24, r22
    273c:	89 83       	std	Y+1, r24	; 0x01
    273e:	9a 83       	std	Y+2, r25	; 0x02
    2740:	ab 83       	std	Y+3, r26	; 0x03
    2742:	bc 83       	std	Y+4, r27	; 0x04
    2744:	20 91 11 40 	lds	r18, 0x4011	; 0x804011 <g_off_air_seconds>
    2748:	30 91 12 40 	lds	r19, 0x4012	; 0x804012 <g_off_air_seconds+0x1>
    274c:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_on_air_seconds>
    2750:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_on_air_seconds+0x1>
    2754:	82 0f       	add	r24, r18
    2756:	93 1f       	adc	r25, r19
    2758:	0f 96       	adiw	r24, 0x0f	; 15
    275a:	9c 01       	movw	r18, r24
    275c:	99 0f       	add	r25, r25
    275e:	44 0b       	sbc	r20, r20
    2760:	55 0b       	sbc	r21, r21
    2762:	61 e0       	ldi	r22, 0x01	; 1
    2764:	89 81       	ldd	r24, Y+1	; 0x01
    2766:	9a 81       	ldd	r25, Y+2	; 0x02
    2768:	ab 81       	ldd	r26, Y+3	; 0x03
    276a:	bc 81       	ldd	r27, Y+4	; 0x04
    276c:	28 17       	cp	r18, r24
    276e:	39 07       	cpc	r19, r25
    2770:	4a 07       	cpc	r20, r26
    2772:	5b 07       	cpc	r21, r27
    2774:	0c f0       	brlt	.+2      	; 0x2778 <_Z17handle_1sec_tasksv+0x42e>
    2776:	60 e0       	ldi	r22, 0x00	; 0
    2778:	66 23       	and	r22, r22
    277a:	09 f4       	brne	.+2      	; 0x277e <_Z17handle_1sec_tasksv+0x434>
    277c:	7c c1       	rjmp	.+760    	; 0x2a76 <_Z17handle_1sec_tasksv+0x72c>
    277e:	80 91 11 40 	lds	r24, 0x4011	; 0x804011 <g_off_air_seconds>
    2782:	90 91 12 40 	lds	r25, 0x4012	; 0x804012 <g_off_air_seconds+0x1>
    2786:	40 97       	sbiw	r24, 0x10	; 16
    2788:	34 f0       	brlt	.+12     	; 0x2796 <_Z17handle_1sec_tasksv+0x44c>
    278a:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <_ZL23g_WiFi_shutdown_seconds>
    278e:	88 23       	and	r24, r24
    2790:	11 f4       	brne	.+4      	; 0x2796 <_Z17handle_1sec_tasksv+0x44c>
    2792:	81 e0       	ldi	r24, 0x01	; 1
    2794:	01 c0       	rjmp	.+2      	; 0x2798 <_Z17handle_1sec_tasksv+0x44e>
    2796:	80 e0       	ldi	r24, 0x00	; 0
    2798:	88 23       	and	r24, r24
    279a:	09 f4       	brne	.+2      	; 0x279e <_Z17handle_1sec_tasksv+0x454>
    279c:	6c c1       	rjmp	.+728    	; 0x2a76 <_Z17handle_1sec_tasksv+0x72c>
    279e:	80 91 11 40 	lds	r24, 0x4011	; 0x804011 <g_off_air_seconds>
    27a2:	90 91 12 40 	lds	r25, 0x4012	; 0x804012 <g_off_air_seconds+0x1>
    27a6:	0a 97       	sbiw	r24, 0x0a	; 10
    27a8:	09 2e       	mov	r0, r25
    27aa:	00 0c       	add	r0, r0
    27ac:	aa 0b       	sbc	r26, r26
    27ae:	bb 0b       	sbc	r27, r27
    27b0:	89 87       	std	Y+9, r24	; 0x09
    27b2:	9a 87       	std	Y+10, r25	; 0x0a
    27b4:	ab 87       	std	Y+11, r26	; 0x0b
    27b6:	bc 87       	std	Y+12, r27	; 0x0c
    27b8:	2d 81       	ldd	r18, Y+5	; 0x05
    27ba:	3e 81       	ldd	r19, Y+6	; 0x06
    27bc:	4f 81       	ldd	r20, Y+7	; 0x07
    27be:	58 85       	ldd	r21, Y+8	; 0x08
    27c0:	89 85       	ldd	r24, Y+9	; 0x09
    27c2:	9a 85       	ldd	r25, Y+10	; 0x0a
    27c4:	ab 85       	ldd	r26, Y+11	; 0x0b
    27c6:	bc 85       	ldd	r27, Y+12	; 0x0c
    27c8:	82 0f       	add	r24, r18
    27ca:	93 1f       	adc	r25, r19
    27cc:	a4 1f       	adc	r26, r20
    27ce:	b5 1f       	adc	r27, r21
    27d0:	80 93 51 46 	sts	0x4651, r24	; 0x804651 <_ZL17g_time_to_wake_up>
    27d4:	90 93 52 46 	sts	0x4652, r25	; 0x804652 <_ZL17g_time_to_wake_up+0x1>
    27d8:	a0 93 53 46 	sts	0x4653, r26	; 0x804653 <_ZL17g_time_to_wake_up+0x2>
    27dc:	b0 93 54 46 	sts	0x4654, r27	; 0x804654 <_ZL17g_time_to_wake_up+0x3>
    27e0:	82 e0       	ldi	r24, 0x02	; 2
    27e2:	80 93 15 40 	sts	0x4015, r24	; 0x804015 <_ZL11g_sleepType>
    27e6:	81 e0       	ldi	r24, 0x01	; 1
    27e8:	80 93 4f 46 	sts	0x464F, r24	; 0x80464f <_ZL17g_go_to_sleep_now>
    27ec:	1d 86       	std	Y+13, r1	; 0x0d
    27ee:	1e 86       	std	Y+14, r1	; 0x0e
    27f0:	20 91 cb 45 	lds	r18, 0x45CB	; 0x8045cb <_ZL26g_sendID_seconds_countdown>
    27f4:	30 91 cc 45 	lds	r19, 0x45CC	; 0x8045cc <_ZL26g_sendID_seconds_countdown+0x1>
    27f8:	89 85       	ldd	r24, Y+9	; 0x09
    27fa:	9a 85       	ldd	r25, Y+10	; 0x0a
    27fc:	89 01       	movw	r16, r18
    27fe:	08 1b       	sub	r16, r24
    2800:	19 0b       	sbc	r17, r25
    2802:	c8 01       	movw	r24, r16
    2804:	8f 87       	std	Y+15, r24	; 0x0f
    2806:	98 8b       	std	Y+16, r25	; 0x10
    2808:	2d 85       	ldd	r18, Y+13	; 0x0d
    280a:	3e 85       	ldd	r19, Y+14	; 0x0e
    280c:	8f 85       	ldd	r24, Y+15	; 0x0f
    280e:	98 89       	ldd	r25, Y+16	; 0x10
    2810:	28 17       	cp	r18, r24
    2812:	39 07       	cpc	r19, r25
    2814:	1c f4       	brge	.+6      	; 0x281c <_Z17handle_1sec_tasksv+0x4d2>
    2816:	8f 85       	ldd	r24, Y+15	; 0x0f
    2818:	98 89       	ldd	r25, Y+16	; 0x10
    281a:	02 c0       	rjmp	.+4      	; 0x2820 <_Z17handle_1sec_tasksv+0x4d6>
    281c:	8d 85       	ldd	r24, Y+13	; 0x0d
    281e:	9e 85       	ldd	r25, Y+14	; 0x0e
    2820:	80 93 cb 45 	sts	0x45CB, r24	; 0x8045cb <_ZL26g_sendID_seconds_countdown>
    2824:	90 93 cc 45 	sts	0x45CC, r25	; 0x8045cc <_ZL26g_sendID_seconds_countdown+0x1>
    2828:	26 c1       	rjmp	.+588    	; 0x2a76 <_Z17handle_1sec_tasksv+0x72c>
    282a:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_on_air_seconds>
    282e:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_on_air_seconds+0x1>
    2832:	09 2e       	mov	r0, r25
    2834:	00 0c       	add	r0, r0
    2836:	aa 0b       	sbc	r26, r26
    2838:	bb 0b       	sbc	r27, r27
    283a:	80 93 c7 45 	sts	0x45C7, r24	; 0x8045c7 <_ZL12g_on_the_air>
    283e:	90 93 c8 45 	sts	0x45C8, r25	; 0x8045c8 <_ZL12g_on_the_air+0x1>
    2842:	a0 93 c9 45 	sts	0x45C9, r26	; 0x8045c9 <_ZL12g_on_the_air+0x2>
    2846:	b0 93 ca 45 	sts	0x45CA, r27	; 0x8045ca <_ZL12g_on_the_air+0x3>
    284a:	80 91 0e 40 	lds	r24, 0x400E	; 0x80400e <g_pattern_codespeed>
    284e:	0e 94 89 27 	call	0x4f12	; 0x4f12 <_Z13throttleValueh>
    2852:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    2856:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    285a:	0d c1       	rjmp	.+538    	; 0x2a76 <_Z17handle_1sec_tasksv+0x72c>
    285c:	80 91 c7 45 	lds	r24, 0x45C7	; 0x8045c7 <_ZL12g_on_the_air>
    2860:	90 91 c8 45 	lds	r25, 0x45C8	; 0x8045c8 <_ZL12g_on_the_air+0x1>
    2864:	a0 91 c9 45 	lds	r26, 0x45C9	; 0x8045c9 <_ZL12g_on_the_air+0x2>
    2868:	b0 91 ca 45 	lds	r27, 0x45CA	; 0x8045ca <_ZL12g_on_the_air+0x3>
    286c:	88 27       	eor	r24, r24
    286e:	b7 fd       	sbrc	r27, 7
    2870:	83 95       	inc	r24
    2872:	99 27       	eor	r25, r25
    2874:	aa 27       	eor	r26, r26
    2876:	bb 27       	eor	r27, r27
    2878:	88 23       	and	r24, r24
    287a:	09 f4       	brne	.+2      	; 0x287e <_Z17handle_1sec_tasksv+0x534>
    287c:	fc c0       	rjmp	.+504    	; 0x2a76 <_Z17handle_1sec_tasksv+0x72c>
    287e:	80 91 c7 45 	lds	r24, 0x45C7	; 0x8045c7 <_ZL12g_on_the_air>
    2882:	90 91 c8 45 	lds	r25, 0x45C8	; 0x8045c8 <_ZL12g_on_the_air+0x1>
    2886:	a0 91 c9 45 	lds	r26, 0x45C9	; 0x8045c9 <_ZL12g_on_the_air+0x2>
    288a:	b0 91 ca 45 	lds	r27, 0x45CA	; 0x8045ca <_ZL12g_on_the_air+0x3>
    288e:	01 96       	adiw	r24, 0x01	; 1
    2890:	a1 1d       	adc	r26, r1
    2892:	b1 1d       	adc	r27, r1
    2894:	80 93 c7 45 	sts	0x45C7, r24	; 0x8045c7 <_ZL12g_on_the_air>
    2898:	90 93 c8 45 	sts	0x45C8, r25	; 0x8045c8 <_ZL12g_on_the_air+0x1>
    289c:	a0 93 c9 45 	sts	0x45C9, r26	; 0x8045c9 <_ZL12g_on_the_air+0x2>
    28a0:	b0 93 ca 45 	sts	0x45CA, r27	; 0x8045ca <_ZL12g_on_the_air+0x3>
    28a4:	80 91 c7 45 	lds	r24, 0x45C7	; 0x8045c7 <_ZL12g_on_the_air>
    28a8:	90 91 c8 45 	lds	r25, 0x45C8	; 0x8045c8 <_ZL12g_on_the_air+0x1>
    28ac:	a0 91 c9 45 	lds	r26, 0x45C9	; 0x8045c9 <_ZL12g_on_the_air+0x2>
    28b0:	b0 91 ca 45 	lds	r27, 0x45CA	; 0x8045ca <_ZL12g_on_the_air+0x3>
    28b4:	21 e0       	ldi	r18, 0x01	; 1
    28b6:	89 2b       	or	r24, r25
    28b8:	8a 2b       	or	r24, r26
    28ba:	8b 2b       	or	r24, r27
    28bc:	09 f0       	breq	.+2      	; 0x28c0 <_Z17handle_1sec_tasksv+0x576>
    28be:	20 e0       	ldi	r18, 0x00	; 0
    28c0:	22 23       	and	r18, r18
    28c2:	09 f4       	brne	.+2      	; 0x28c6 <_Z17handle_1sec_tasksv+0x57c>
    28c4:	d8 c0       	rjmp	.+432    	; 0x2a76 <_Z17handle_1sec_tasksv+0x72c>
    28c6:	10 92 4e 46 	sts	0x464E, r1	; 0x80464e <g_muteAfterID>
    28ca:	8d ef       	ldi	r24, 0xFD	; 253
    28cc:	80 93 c3 45 	sts	0x45C3, r24	; 0x8045c3 <_ZL18g_last_status_code>
    28d0:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_on_air_seconds>
    28d4:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_on_air_seconds+0x1>
    28d8:	09 2e       	mov	r0, r25
    28da:	00 0c       	add	r0, r0
    28dc:	aa 0b       	sbc	r26, r26
    28de:	bb 0b       	sbc	r27, r27
    28e0:	80 93 c7 45 	sts	0x45C7, r24	; 0x8045c7 <_ZL12g_on_the_air>
    28e4:	90 93 c8 45 	sts	0x45C8, r25	; 0x8045c8 <_ZL12g_on_the_air+0x1>
    28e8:	a0 93 c9 45 	sts	0x45C9, r26	; 0x8045c9 <_ZL12g_on_the_air+0x2>
    28ec:	b0 93 ca 45 	sts	0x45CA, r27	; 0x8045ca <_ZL12g_on_the_air+0x3>
    28f0:	80 91 0e 40 	lds	r24, 0x400E	; 0x80400e <g_pattern_codespeed>
    28f4:	0e 94 89 27 	call	0x4f12	; 0x4f12 <_Z13throttleValueh>
    28f8:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    28fc:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    2900:	81 e0       	ldi	r24, 0x01	; 1
    2902:	8a 8b       	std	Y+18, r24	; 0x12
    2904:	0e 94 1f 2f 	call	0x5e3e	; 0x5e3e <_Z14getPatternTextv>
    2908:	9c 01       	movw	r18, r24
    290a:	ce 01       	movw	r24, r28
    290c:	42 96       	adiw	r24, 0x12	; 18
    290e:	40 e0       	ldi	r20, 0x00	; 0
    2910:	50 e0       	ldi	r21, 0x00	; 0
    2912:	bc 01       	movw	r22, r24
    2914:	c9 01       	movw	r24, r18
    2916:	0e 94 1b 60 	call	0xc036	; 0xc036 <_Z9makeMorsePcPbS0_>
    291a:	ad c0       	rjmp	.+346    	; 0x2a76 <_Z17handle_1sec_tasksv+0x72c>
    291c:	80 91 40 46 	lds	r24, 0x4640	; 0x804640 <g_event_start_epoch>
    2920:	90 91 41 46 	lds	r25, 0x4641	; 0x804641 <g_event_start_epoch+0x1>
    2924:	a0 91 42 46 	lds	r26, 0x4642	; 0x804642 <g_event_start_epoch+0x2>
    2928:	b0 91 43 46 	lds	r27, 0x4643	; 0x804643 <g_event_start_epoch+0x3>
    292c:	21 e0       	ldi	r18, 0x01	; 1
    292e:	81 30       	cpi	r24, 0x01	; 1
    2930:	96 46       	sbci	r25, 0x66	; 102
    2932:	ae 4e       	sbci	r26, 0xEE	; 238
    2934:	bf 45       	sbci	r27, 0x5F	; 95
    2936:	08 f4       	brcc	.+2      	; 0x293a <_Z17handle_1sec_tasksv+0x5f0>
    2938:	20 e0       	ldi	r18, 0x00	; 0
    293a:	22 23       	and	r18, r18
    293c:	09 f4       	brne	.+2      	; 0x2940 <_Z17handle_1sec_tasksv+0x5f6>
    293e:	9b c0       	rjmp	.+310    	; 0x2a76 <_Z17handle_1sec_tasksv+0x72c>
    2940:	80 e0       	ldi	r24, 0x00	; 0
    2942:	90 e0       	ldi	r25, 0x00	; 0
    2944:	0e 94 eb 06 	call	0xdd6	; 0xdd6 <time>
    2948:	dc 01       	movw	r26, r24
    294a:	cb 01       	movw	r24, r22
    294c:	8d 83       	std	Y+5, r24	; 0x05
    294e:	9e 83       	std	Y+6, r25	; 0x06
    2950:	af 83       	std	Y+7, r26	; 0x07
    2952:	b8 87       	std	Y+8, r27	; 0x08
    2954:	80 91 40 46 	lds	r24, 0x4640	; 0x804640 <g_event_start_epoch>
    2958:	90 91 41 46 	lds	r25, 0x4641	; 0x804641 <g_event_start_epoch+0x1>
    295c:	a0 91 42 46 	lds	r26, 0x4642	; 0x804642 <g_event_start_epoch+0x2>
    2960:	b0 91 43 46 	lds	r27, 0x4643	; 0x804643 <g_event_start_epoch+0x3>
    2964:	61 e0       	ldi	r22, 0x01	; 1
    2966:	2d 81       	ldd	r18, Y+5	; 0x05
    2968:	3e 81       	ldd	r19, Y+6	; 0x06
    296a:	4f 81       	ldd	r20, Y+7	; 0x07
    296c:	58 85       	ldd	r21, Y+8	; 0x08
    296e:	28 17       	cp	r18, r24
    2970:	39 07       	cpc	r19, r25
    2972:	4a 07       	cpc	r20, r26
    2974:	5b 07       	cpc	r21, r27
    2976:	08 f4       	brcc	.+2      	; 0x297a <_Z17handle_1sec_tasksv+0x630>
    2978:	60 e0       	ldi	r22, 0x00	; 0
    297a:	66 23       	and	r22, r22
    297c:	09 f4       	brne	.+2      	; 0x2980 <_Z17handle_1sec_tasksv+0x636>
    297e:	7b c0       	rjmp	.+246    	; 0x2a76 <_Z17handle_1sec_tasksv+0x72c>
    2980:	81 e0       	ldi	r24, 0x01	; 1
    2982:	0e 94 50 75 	call	0xeaa0	; 0xeaa0 <_Z18powerToTransmitterb>
    2986:	80 91 3e 46 	lds	r24, 0x463E	; 0x80463e <g_intra_cycle_delay_time>
    298a:	90 91 3f 46 	lds	r25, 0x463F	; 0x80463f <g_intra_cycle_delay_time+0x1>
    298e:	21 e0       	ldi	r18, 0x01	; 1
    2990:	89 2b       	or	r24, r25
    2992:	09 f4       	brne	.+2      	; 0x2996 <_Z17handle_1sec_tasksv+0x64c>
    2994:	20 e0       	ldi	r18, 0x00	; 0
    2996:	22 23       	and	r18, r18
    2998:	71 f1       	breq	.+92     	; 0x29f6 <_Z17handle_1sec_tasksv+0x6ac>
    299a:	8e ef       	ldi	r24, 0xFE	; 254
    299c:	80 93 c3 45 	sts	0x45C3, r24	; 0x8045c3 <_ZL18g_last_status_code>
    29a0:	80 91 3e 46 	lds	r24, 0x463E	; 0x80463e <g_intra_cycle_delay_time>
    29a4:	90 91 3f 46 	lds	r25, 0x463F	; 0x80463f <g_intra_cycle_delay_time+0x1>
    29a8:	91 95       	neg	r25
    29aa:	81 95       	neg	r24
    29ac:	91 09       	sbc	r25, r1
    29ae:	09 2e       	mov	r0, r25
    29b0:	00 0c       	add	r0, r0
    29b2:	aa 0b       	sbc	r26, r26
    29b4:	bb 0b       	sbc	r27, r27
    29b6:	80 93 c7 45 	sts	0x45C7, r24	; 0x8045c7 <_ZL12g_on_the_air>
    29ba:	90 93 c8 45 	sts	0x45C8, r25	; 0x8045c8 <_ZL12g_on_the_air+0x1>
    29be:	a0 93 c9 45 	sts	0x45C9, r26	; 0x8045c9 <_ZL12g_on_the_air+0x2>
    29c2:	b0 93 ca 45 	sts	0x45CA, r27	; 0x8045ca <_ZL12g_on_the_air+0x3>
    29c6:	20 91 3e 46 	lds	r18, 0x463E	; 0x80463e <g_intra_cycle_delay_time>
    29ca:	30 91 3f 46 	lds	r19, 0x463F	; 0x80463f <g_intra_cycle_delay_time+0x1>
    29ce:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_on_air_seconds>
    29d2:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_on_air_seconds+0x1>
    29d6:	82 0f       	add	r24, r18
    29d8:	93 1f       	adc	r25, r19
    29da:	9c 01       	movw	r18, r24
    29dc:	80 91 3c 46 	lds	r24, 0x463C	; 0x80463c <g_time_needed_for_ID>
    29e0:	90 91 3d 46 	lds	r25, 0x463D	; 0x80463d <g_time_needed_for_ID+0x1>
    29e4:	a9 01       	movw	r20, r18
    29e6:	48 1b       	sub	r20, r24
    29e8:	59 0b       	sbc	r21, r25
    29ea:	ca 01       	movw	r24, r20
    29ec:	80 93 cb 45 	sts	0x45CB, r24	; 0x8045cb <_ZL26g_sendID_seconds_countdown>
    29f0:	90 93 cc 45 	sts	0x45CC, r25	; 0x8045cc <_ZL26g_sendID_seconds_countdown+0x1>
    29f4:	39 c0       	rjmp	.+114    	; 0x2a68 <_Z17handle_1sec_tasksv+0x71e>
    29f6:	8d ef       	ldi	r24, 0xFD	; 253
    29f8:	80 93 c3 45 	sts	0x45C3, r24	; 0x8045c3 <_ZL18g_last_status_code>
    29fc:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_on_air_seconds>
    2a00:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_on_air_seconds+0x1>
    2a04:	09 2e       	mov	r0, r25
    2a06:	00 0c       	add	r0, r0
    2a08:	aa 0b       	sbc	r26, r26
    2a0a:	bb 0b       	sbc	r27, r27
    2a0c:	80 93 c7 45 	sts	0x45C7, r24	; 0x8045c7 <_ZL12g_on_the_air>
    2a10:	90 93 c8 45 	sts	0x45C8, r25	; 0x8045c8 <_ZL12g_on_the_air+0x1>
    2a14:	a0 93 c9 45 	sts	0x45C9, r26	; 0x8045c9 <_ZL12g_on_the_air+0x2>
    2a18:	b0 93 ca 45 	sts	0x45CA, r27	; 0x8045ca <_ZL12g_on_the_air+0x3>
    2a1c:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_on_air_seconds>
    2a20:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_on_air_seconds+0x1>
    2a24:	9c 01       	movw	r18, r24
    2a26:	80 91 3c 46 	lds	r24, 0x463C	; 0x80463c <g_time_needed_for_ID>
    2a2a:	90 91 3d 46 	lds	r25, 0x463D	; 0x80463d <g_time_needed_for_ID+0x1>
    2a2e:	79 01       	movw	r14, r18
    2a30:	e8 1a       	sub	r14, r24
    2a32:	f9 0a       	sbc	r15, r25
    2a34:	c7 01       	movw	r24, r14
    2a36:	80 93 cb 45 	sts	0x45CB, r24	; 0x8045cb <_ZL26g_sendID_seconds_countdown>
    2a3a:	90 93 cc 45 	sts	0x45CC, r25	; 0x8045cc <_ZL26g_sendID_seconds_countdown+0x1>
    2a3e:	80 91 0e 40 	lds	r24, 0x400E	; 0x80400e <g_pattern_codespeed>
    2a42:	0e 94 89 27 	call	0x4f12	; 0x4f12 <_Z13throttleValueh>
    2a46:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    2a4a:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    2a4e:	81 e0       	ldi	r24, 0x01	; 1
    2a50:	8b 8b       	std	Y+19, r24	; 0x13
    2a52:	0e 94 1f 2f 	call	0x5e3e	; 0x5e3e <_Z14getPatternTextv>
    2a56:	9c 01       	movw	r18, r24
    2a58:	ce 01       	movw	r24, r28
    2a5a:	43 96       	adiw	r24, 0x13	; 19
    2a5c:	40 e0       	ldi	r20, 0x00	; 0
    2a5e:	50 e0       	ldi	r21, 0x00	; 0
    2a60:	bc 01       	movw	r22, r24
    2a62:	c9 01       	movw	r24, r18
    2a64:	0e 94 1b 60 	call	0xc036	; 0xc036 <_Z9makeMorsePcPbS0_>
    2a68:	81 e0       	ldi	r24, 0x01	; 1
    2a6a:	80 93 4a 46 	sts	0x464A, r24	; 0x80464a <g_event_commenced>
    2a6e:	8b e6       	ldi	r24, 0x6B	; 107
    2a70:	96 e4       	ldi	r25, 0x46	; 70
    2a72:	0e 94 34 57 	call	0xae68	; 0xae68 <_ZN4leds4initEv>
    2a76:	90 91 ce 45 	lds	r25, 0x45CE	; 0x8045ce <_ZL19g_wifi_enable_delay>
    2a7a:	81 e0       	ldi	r24, 0x01	; 1
    2a7c:	99 23       	and	r25, r25
    2a7e:	09 f4       	brne	.+2      	; 0x2a82 <_Z17handle_1sec_tasksv+0x738>
    2a80:	80 e0       	ldi	r24, 0x00	; 0
    2a82:	88 23       	and	r24, r24
    2a84:	c1 f0       	breq	.+48     	; 0x2ab6 <_Z17handle_1sec_tasksv+0x76c>
    2a86:	80 91 ce 45 	lds	r24, 0x45CE	; 0x8045ce <_ZL19g_wifi_enable_delay>
    2a8a:	81 50       	subi	r24, 0x01	; 1
    2a8c:	80 93 ce 45 	sts	0x45CE, r24	; 0x8045ce <_ZL19g_wifi_enable_delay>
    2a90:	90 91 ce 45 	lds	r25, 0x45CE	; 0x8045ce <_ZL19g_wifi_enable_delay>
    2a94:	81 e0       	ldi	r24, 0x01	; 1
    2a96:	99 23       	and	r25, r25
    2a98:	09 f0       	breq	.+2      	; 0x2a9c <_Z17handle_1sec_tasksv+0x752>
    2a9a:	80 e0       	ldi	r24, 0x00	; 0
    2a9c:	88 23       	and	r24, r24
    2a9e:	09 f4       	brne	.+2      	; 0x2aa2 <_Z17handle_1sec_tasksv+0x758>
    2aa0:	59 c0       	rjmp	.+178    	; 0x2b54 <_Z17handle_1sec_tasksv+0x80a>
    2aa2:	81 e0       	ldi	r24, 0x01	; 1
    2aa4:	0e 94 c5 50 	call	0xa18a	; 0xa18a <_Z10wifi_powerb>
    2aa8:	80 e0       	ldi	r24, 0x00	; 0
    2aaa:	0e 94 dc 50 	call	0xa1b8	; 0xa1b8 <_Z10wifi_resetb>
    2aae:	88 e7       	ldi	r24, 0x78	; 120
    2ab0:	80 93 0b 40 	sts	0x400B, r24	; 0x80400b <_ZL23g_WiFi_shutdown_seconds>
    2ab4:	4f c0       	rjmp	.+158    	; 0x2b54 <_Z17handle_1sec_tasksv+0x80a>
    2ab6:	80 91 cf 45 	lds	r24, 0x45CF	; 0x8045cf <_ZL20g_shutting_down_wifi>
    2aba:	88 23       	and	r24, r24
    2abc:	61 f4       	brne	.+24     	; 0x2ad6 <_Z17handle_1sec_tasksv+0x78c>
    2abe:	90 91 4b 46 	lds	r25, 0x464B	; 0x80464b <g_check_for_next_event>
    2ac2:	81 e0       	ldi	r24, 0x01	; 1
    2ac4:	89 27       	eor	r24, r25
    2ac6:	88 23       	and	r24, r24
    2ac8:	41 f0       	breq	.+16     	; 0x2ada <_Z17handle_1sec_tasksv+0x790>
    2aca:	90 91 4c 46 	lds	r25, 0x464C	; 0x80464c <g_waiting_for_next_event>
    2ace:	81 e0       	ldi	r24, 0x01	; 1
    2ad0:	89 27       	eor	r24, r25
    2ad2:	88 23       	and	r24, r24
    2ad4:	11 f0       	breq	.+4      	; 0x2ada <_Z17handle_1sec_tasksv+0x790>
    2ad6:	81 e0       	ldi	r24, 0x01	; 1
    2ad8:	01 c0       	rjmp	.+2      	; 0x2adc <_Z17handle_1sec_tasksv+0x792>
    2ada:	80 e0       	ldi	r24, 0x00	; 0
    2adc:	88 23       	and	r24, r24
    2ade:	99 f1       	breq	.+102    	; 0x2b46 <_Z17handle_1sec_tasksv+0x7fc>
    2ae0:	90 91 0b 40 	lds	r25, 0x400B	; 0x80400b <_ZL23g_WiFi_shutdown_seconds>
    2ae4:	81 e0       	ldi	r24, 0x01	; 1
    2ae6:	99 23       	and	r25, r25
    2ae8:	09 f4       	brne	.+2      	; 0x2aec <_Z17handle_1sec_tasksv+0x7a2>
    2aea:	80 e0       	ldi	r24, 0x00	; 0
    2aec:	88 23       	and	r24, r24
    2aee:	59 f1       	breq	.+86     	; 0x2b46 <_Z17handle_1sec_tasksv+0x7fc>
    2af0:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <_ZL23g_WiFi_shutdown_seconds>
    2af4:	81 50       	subi	r24, 0x01	; 1
    2af6:	80 93 0b 40 	sts	0x400B, r24	; 0x80400b <_ZL23g_WiFi_shutdown_seconds>
    2afa:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <_ZL23g_WiFi_shutdown_seconds>
    2afe:	88 23       	and	r24, r24
    2b00:	41 f4       	brne	.+16     	; 0x2b12 <_Z17handle_1sec_tasksv+0x7c8>
    2b02:	90 91 82 46 	lds	r25, 0x4682	; 0x804682 <g_enable_manual_transmissions>
    2b06:	81 e0       	ldi	r24, 0x01	; 1
    2b08:	89 27       	eor	r24, r25
    2b0a:	88 23       	and	r24, r24
    2b0c:	11 f0       	breq	.+4      	; 0x2b12 <_Z17handle_1sec_tasksv+0x7c8>
    2b0e:	81 e0       	ldi	r24, 0x01	; 1
    2b10:	01 c0       	rjmp	.+2      	; 0x2b14 <_Z17handle_1sec_tasksv+0x7ca>
    2b12:	80 e0       	ldi	r24, 0x00	; 0
    2b14:	88 23       	and	r24, r24
    2b16:	b9 f0       	breq	.+46     	; 0x2b46 <_Z17handle_1sec_tasksv+0x7fc>
    2b18:	10 92 d0 45 	sts	0x45D0, r1	; 0x8045d0 <_ZL12g_wifi_ready>
    2b1c:	81 e0       	ldi	r24, 0x01	; 1
    2b1e:	0e 94 dc 50 	call	0xa1b8	; 0xa1b8 <_Z10wifi_resetb>
    2b22:	80 e0       	ldi	r24, 0x00	; 0
    2b24:	0e 94 c5 50 	call	0xa18a	; 0xa18a <_Z10wifi_powerb>
    2b28:	10 92 cf 45 	sts	0x45CF, r1	; 0x8045cf <_ZL20g_shutting_down_wifi>
    2b2c:	10 92 0c 40 	sts	0x400C, r1	; 0x80400c <_ZL13g_wifi_active>
    2b30:	90 91 15 40 	lds	r25, 0x4015	; 0x804015 <_ZL11g_sleepType>
    2b34:	81 e0       	ldi	r24, 0x01	; 1
    2b36:	99 23       	and	r25, r25
    2b38:	09 f4       	brne	.+2      	; 0x2b3c <_Z17handle_1sec_tasksv+0x7f2>
    2b3a:	80 e0       	ldi	r24, 0x00	; 0
    2b3c:	88 23       	and	r24, r24
    2b3e:	19 f0       	breq	.+6      	; 0x2b46 <_Z17handle_1sec_tasksv+0x7fc>
    2b40:	81 e0       	ldi	r24, 0x01	; 1
    2b42:	80 93 4f 46 	sts	0x464F, r24	; 0x80464f <_ZL17g_go_to_sleep_now>
    2b46:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <_ZL13g_wifi_active>
    2b4a:	88 23       	and	r24, r24
    2b4c:	19 f0       	breq	.+6      	; 0x2b54 <_Z17handle_1sec_tasksv+0x80a>
    2b4e:	81 e0       	ldi	r24, 0x01	; 1
    2b50:	80 93 cd 45 	sts	0x45CD, r24	; 0x8045cd <_ZL16g_report_seconds>
    2b54:	00 00       	nop
    2b56:	63 96       	adiw	r28, 0x13	; 19
    2b58:	cd bf       	out	0x3d, r28	; 61
    2b5a:	de bf       	out	0x3e, r29	; 62
    2b5c:	df 91       	pop	r29
    2b5e:	cf 91       	pop	r28
    2b60:	1f 91       	pop	r17
    2b62:	0f 91       	pop	r16
    2b64:	ff 90       	pop	r15
    2b66:	ef 90       	pop	r14
    2b68:	08 95       	ret

00002b6a <__vector_22>:
    2b6a:	1f 92       	push	r1
    2b6c:	0f 92       	push	r0
    2b6e:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    2b72:	0f 92       	push	r0
    2b74:	11 24       	eor	r1, r1
    2b76:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    2b7a:	0f 92       	push	r0
    2b7c:	2f 93       	push	r18
    2b7e:	8f 93       	push	r24
    2b80:	9f 93       	push	r25
    2b82:	ef 93       	push	r30
    2b84:	ff 93       	push	r31
    2b86:	cf 93       	push	r28
    2b88:	df 93       	push	r29
    2b8a:	1f 92       	push	r1
    2b8c:	cd b7       	in	r28, 0x3d	; 61
    2b8e:	de b7       	in	r29, 0x3e	; 62
    2b90:	8c e0       	ldi	r24, 0x0C	; 12
    2b92:	90 e0       	ldi	r25, 0x00	; 0
    2b94:	fc 01       	movw	r30, r24
    2b96:	83 81       	ldd	r24, Z+3	; 0x03
    2b98:	89 83       	std	Y+1, r24	; 0x01
    2b9a:	89 81       	ldd	r24, Y+1	; 0x01
    2b9c:	88 2f       	mov	r24, r24
    2b9e:	90 e0       	ldi	r25, 0x00	; 0
    2ba0:	82 70       	andi	r24, 0x02	; 2
    2ba2:	99 27       	eor	r25, r25
    2ba4:	89 2b       	or	r24, r25
    2ba6:	69 f0       	breq	.+26     	; 0x2bc2 <__vector_22+0x58>
    2ba8:	80 91 50 46 	lds	r24, 0x4650	; 0x804650 <_ZL10g_sleeping>
    2bac:	88 23       	and	r24, r24
    2bae:	31 f0       	breq	.+12     	; 0x2bbc <__vector_22+0x52>
    2bb0:	10 92 4f 46 	sts	0x464F, r1	; 0x80464f <_ZL17g_go_to_sleep_now>
    2bb4:	10 92 50 46 	sts	0x4650, r1	; 0x804650 <_ZL10g_sleeping>
    2bb8:	10 92 4c 46 	sts	0x464C, r1	; 0x80464c <g_waiting_for_next_event>
    2bbc:	82 e0       	ldi	r24, 0x02	; 2
    2bbe:	80 93 55 46 	sts	0x4655, r24	; 0x804655 <_ZL12g_awakenedBy>
    2bc2:	8c e0       	ldi	r24, 0x0C	; 12
    2bc4:	90 e0       	ldi	r25, 0x00	; 0
    2bc6:	2f ef       	ldi	r18, 0xFF	; 255
    2bc8:	fc 01       	movw	r30, r24
    2bca:	23 83       	std	Z+3, r18	; 0x03
    2bcc:	00 00       	nop
    2bce:	0f 90       	pop	r0
    2bd0:	df 91       	pop	r29
    2bd2:	cf 91       	pop	r28
    2bd4:	ff 91       	pop	r31
    2bd6:	ef 91       	pop	r30
    2bd8:	9f 91       	pop	r25
    2bda:	8f 91       	pop	r24
    2bdc:	2f 91       	pop	r18
    2bde:	0f 90       	pop	r0
    2be0:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    2be4:	0f 90       	pop	r0
    2be6:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    2bea:	0f 90       	pop	r0
    2bec:	1f 90       	pop	r1
    2bee:	18 95       	reti

00002bf0 <__vector_12>:
    2bf0:	1f 92       	push	r1
    2bf2:	0f 92       	push	r0
    2bf4:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    2bf8:	0f 92       	push	r0
    2bfa:	11 24       	eor	r1, r1
    2bfc:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    2c00:	0f 92       	push	r0
    2c02:	0f 93       	push	r16
    2c04:	1f 93       	push	r17
    2c06:	2f 93       	push	r18
    2c08:	3f 93       	push	r19
    2c0a:	4f 93       	push	r20
    2c0c:	5f 93       	push	r21
    2c0e:	6f 93       	push	r22
    2c10:	7f 93       	push	r23
    2c12:	8f 93       	push	r24
    2c14:	9f 93       	push	r25
    2c16:	af 93       	push	r26
    2c18:	bf 93       	push	r27
    2c1a:	ef 93       	push	r30
    2c1c:	ff 93       	push	r31
    2c1e:	cf 93       	push	r28
    2c20:	df 93       	push	r29
    2c22:	cd b7       	in	r28, 0x3d	; 61
    2c24:	de b7       	in	r29, 0x3e	; 62
    2c26:	2e 97       	sbiw	r28, 0x0e	; 14
    2c28:	cd bf       	out	0x3d, r28	; 61
    2c2a:	de bf       	out	0x3e, r29	; 62
    2c2c:	80 e0       	ldi	r24, 0x00	; 0
    2c2e:	9b e0       	ldi	r25, 0x0B	; 11
    2c30:	fc 01       	movw	r30, r24
    2c32:	86 81       	ldd	r24, Z+6	; 0x06
    2c34:	8b 83       	std	Y+3, r24	; 0x03
    2c36:	8b 81       	ldd	r24, Y+3	; 0x03
    2c38:	88 2f       	mov	r24, r24
    2c3a:	90 e0       	ldi	r25, 0x00	; 0
    2c3c:	81 70       	andi	r24, 0x01	; 1
    2c3e:	99 27       	eor	r25, r25
    2c40:	89 2b       	or	r24, r25
    2c42:	09 f4       	brne	.+2      	; 0x2c46 <__vector_12+0x56>
    2c44:	b2 c3       	rjmp	.+1892   	; 0x33aa <__vector_12+0x7ba>
    2c46:	80 91 83 46 	lds	r24, 0x4683	; 0x804683 <g_delay_before_powerup_xmsn>
    2c4a:	90 91 84 46 	lds	r25, 0x4684	; 0x804684 <g_delay_before_powerup_xmsn+0x1>
    2c4e:	21 e0       	ldi	r18, 0x01	; 1
    2c50:	89 2b       	or	r24, r25
    2c52:	09 f4       	brne	.+2      	; 0x2c56 <__vector_12+0x66>
    2c54:	20 e0       	ldi	r18, 0x00	; 0
    2c56:	22 23       	and	r18, r18
    2c58:	49 f0       	breq	.+18     	; 0x2c6c <__vector_12+0x7c>
    2c5a:	80 91 83 46 	lds	r24, 0x4683	; 0x804683 <g_delay_before_powerup_xmsn>
    2c5e:	90 91 84 46 	lds	r25, 0x4684	; 0x804684 <g_delay_before_powerup_xmsn+0x1>
    2c62:	01 97       	sbiw	r24, 0x01	; 1
    2c64:	80 93 83 46 	sts	0x4683, r24	; 0x804683 <g_delay_before_powerup_xmsn>
    2c68:	90 93 84 46 	sts	0x4684, r25	; 0x804684 <g_delay_before_powerup_xmsn+0x1>
    2c6c:	80 91 22 40 	lds	r24, 0x4022	; 0x804022 <_ZZ11__vector_12E7fiftyMS>
    2c70:	8f 5f       	subi	r24, 0xFF	; 255
    2c72:	80 93 22 40 	sts	0x4022, r24	; 0x804022 <_ZZ11__vector_12E7fiftyMS>
    2c76:	20 91 22 40 	lds	r18, 0x4022	; 0x804022 <_ZZ11__vector_12E7fiftyMS>
    2c7a:	8b ea       	ldi	r24, 0xAB	; 171
    2c7c:	28 9f       	mul	r18, r24
    2c7e:	81 2d       	mov	r24, r1
    2c80:	11 24       	eor	r1, r1
    2c82:	98 2f       	mov	r25, r24
    2c84:	96 95       	lsr	r25
    2c86:	96 95       	lsr	r25
    2c88:	89 2f       	mov	r24, r25
    2c8a:	88 0f       	add	r24, r24
    2c8c:	89 0f       	add	r24, r25
    2c8e:	88 0f       	add	r24, r24
    2c90:	92 2f       	mov	r25, r18
    2c92:	98 1b       	sub	r25, r24
    2c94:	99 23       	and	r25, r25
    2c96:	09 f0       	breq	.+2      	; 0x2c9a <__vector_12+0xaa>
    2c98:	ee c0       	rjmp	.+476    	; 0x2e76 <__vector_12+0x286>
    2c9a:	0e 94 4d 38 	call	0x709a	; 0x709a <_Z18portCdebouncedValsv>
    2c9e:	80 78       	andi	r24, 0x80	; 128
    2ca0:	8c 83       	std	Y+4, r24	; 0x04
    2ca2:	0e 94 01 38 	call	0x7002	; 0x7002 <_Z8debouncev>
    2ca6:	8c 81       	ldd	r24, Y+4	; 0x04
    2ca8:	08 2f       	mov	r16, r24
    2caa:	10 e0       	ldi	r17, 0x00	; 0
    2cac:	0e 94 4d 38 	call	0x709a	; 0x709a <_Z18portCdebouncedValsv>
    2cb0:	88 2f       	mov	r24, r24
    2cb2:	90 e0       	ldi	r25, 0x00	; 0
    2cb4:	80 78       	andi	r24, 0x80	; 128
    2cb6:	99 27       	eor	r25, r25
    2cb8:	21 e0       	ldi	r18, 0x01	; 1
    2cba:	08 17       	cp	r16, r24
    2cbc:	19 07       	cpc	r17, r25
    2cbe:	09 f4       	brne	.+2      	; 0x2cc2 <__vector_12+0xd2>
    2cc0:	20 e0       	ldi	r18, 0x00	; 0
    2cc2:	22 23       	and	r18, r18
    2cc4:	41 f1       	breq	.+80     	; 0x2d16 <__vector_12+0x126>
    2cc6:	8c 81       	ldd	r24, Y+4	; 0x04
    2cc8:	88 23       	and	r24, r24
    2cca:	d1 f0       	breq	.+52     	; 0x2d00 <__vector_12+0x110>
    2ccc:	8b e6       	ldi	r24, 0x6B	; 107
    2cce:	96 e4       	ldi	r25, 0x46	; 70
    2cd0:	0e 94 be 56 	call	0xad7c	; 0xad7c <_ZN4leds6activeEv>
    2cd4:	98 2f       	mov	r25, r24
    2cd6:	81 e0       	ldi	r24, 0x01	; 1
    2cd8:	89 27       	eor	r24, r25
    2cda:	88 23       	and	r24, r24
    2cdc:	29 f0       	breq	.+10     	; 0x2ce8 <__vector_12+0xf8>
    2cde:	8b e6       	ldi	r24, 0x6B	; 107
    2ce0:	96 e4       	ldi	r25, 0x46	; 70
    2ce2:	0e 94 34 57 	call	0xae68	; 0xae68 <_ZN4leds4initEv>
    2ce6:	46 c0       	rjmp	.+140    	; 0x2d74 <__vector_12+0x184>
    2ce8:	80 91 63 46 	lds	r24, 0x4663	; 0x804663 <g_switch_presses_count>
    2cec:	90 91 64 46 	lds	r25, 0x4664	; 0x804664 <g_switch_presses_count+0x1>
    2cf0:	01 96       	adiw	r24, 0x01	; 1
    2cf2:	80 93 63 46 	sts	0x4663, r24	; 0x804663 <g_switch_presses_count>
    2cf6:	90 93 64 46 	sts	0x4664, r25	; 0x804664 <g_switch_presses_count+0x1>
    2cfa:	10 92 87 46 	sts	0x4687, r1	; 0x804687 <_ZZ11__vector_12E14buttonReleased>
    2cfe:	3a c0       	rjmp	.+116    	; 0x2d74 <__vector_12+0x184>
    2d00:	10 92 5f 46 	sts	0x465F, r1	; 0x80465f <g_switch_closed_count>
    2d04:	10 92 60 46 	sts	0x4660, r1	; 0x804660 <g_switch_closed_count+0x1>
    2d08:	81 e0       	ldi	r24, 0x01	; 1
    2d0a:	80 93 87 46 	sts	0x4687, r24	; 0x804687 <_ZZ11__vector_12E14buttonReleased>
    2d0e:	81 e0       	ldi	r24, 0x01	; 1
    2d10:	80 93 23 40 	sts	0x4023, r24	; 0x804023 <_ZZ11__vector_12E16longPressEnabled>
    2d14:	2f c0       	rjmp	.+94     	; 0x2d74 <__vector_12+0x184>
    2d16:	8c 81       	ldd	r24, Y+4	; 0x04
    2d18:	88 23       	and	r24, r24
    2d1a:	61 f5       	brne	.+88     	; 0x2d74 <__vector_12+0x184>
    2d1c:	90 91 65 46 	lds	r25, 0x4665	; 0x804665 <g_long_button_press>
    2d20:	81 e0       	ldi	r24, 0x01	; 1
    2d22:	89 27       	eor	r24, r25
    2d24:	88 23       	and	r24, r24
    2d26:	31 f0       	breq	.+12     	; 0x2d34 <__vector_12+0x144>
    2d28:	80 91 23 40 	lds	r24, 0x4023	; 0x804023 <_ZZ11__vector_12E16longPressEnabled>
    2d2c:	88 23       	and	r24, r24
    2d2e:	11 f0       	breq	.+4      	; 0x2d34 <__vector_12+0x144>
    2d30:	81 e0       	ldi	r24, 0x01	; 1
    2d32:	01 c0       	rjmp	.+2      	; 0x2d36 <__vector_12+0x146>
    2d34:	80 e0       	ldi	r24, 0x00	; 0
    2d36:	88 23       	and	r24, r24
    2d38:	e9 f0       	breq	.+58     	; 0x2d74 <__vector_12+0x184>
    2d3a:	80 91 5f 46 	lds	r24, 0x465F	; 0x80465f <g_switch_closed_count>
    2d3e:	90 91 60 46 	lds	r25, 0x4660	; 0x804660 <g_switch_closed_count+0x1>
    2d42:	01 96       	adiw	r24, 0x01	; 1
    2d44:	80 93 5f 46 	sts	0x465F, r24	; 0x80465f <g_switch_closed_count>
    2d48:	90 93 60 46 	sts	0x4660, r25	; 0x804660 <g_switch_closed_count+0x1>
    2d4c:	21 e0       	ldi	r18, 0x01	; 1
    2d4e:	88 3c       	cpi	r24, 0xC8	; 200
    2d50:	91 05       	cpc	r25, r1
    2d52:	08 f4       	brcc	.+2      	; 0x2d56 <__vector_12+0x166>
    2d54:	20 e0       	ldi	r18, 0x00	; 0
    2d56:	22 23       	and	r18, r18
    2d58:	69 f0       	breq	.+26     	; 0x2d74 <__vector_12+0x184>
    2d5a:	81 e0       	ldi	r24, 0x01	; 1
    2d5c:	80 93 65 46 	sts	0x4665, r24	; 0x804665 <g_long_button_press>
    2d60:	10 92 5f 46 	sts	0x465F, r1	; 0x80465f <g_switch_closed_count>
    2d64:	10 92 60 46 	sts	0x4660, r1	; 0x804660 <g_switch_closed_count+0x1>
    2d68:	10 92 63 46 	sts	0x4663, r1	; 0x804663 <g_switch_presses_count>
    2d6c:	10 92 64 46 	sts	0x4664, r1	; 0x804664 <g_switch_presses_count+0x1>
    2d70:	10 92 23 40 	sts	0x4023, r1	; 0x804023 <_ZZ11__vector_12E16longPressEnabled>
    2d74:	80 91 88 46 	lds	r24, 0x4688	; 0x804688 <_ZZ11__vector_12E28switch_closures_count_period>
    2d78:	90 91 89 46 	lds	r25, 0x4689	; 0x804689 <_ZZ11__vector_12E28switch_closures_count_period+0x1>
    2d7c:	89 2b       	or	r24, r25
    2d7e:	71 f1       	breq	.+92     	; 0x2ddc <__vector_12+0x1ec>
    2d80:	80 91 88 46 	lds	r24, 0x4688	; 0x804688 <_ZZ11__vector_12E28switch_closures_count_period>
    2d84:	90 91 89 46 	lds	r25, 0x4689	; 0x804689 <_ZZ11__vector_12E28switch_closures_count_period+0x1>
    2d88:	01 97       	sbiw	r24, 0x01	; 1
    2d8a:	80 93 88 46 	sts	0x4688, r24	; 0x804688 <_ZZ11__vector_12E28switch_closures_count_period>
    2d8e:	90 93 89 46 	sts	0x4689, r25	; 0x804689 <_ZZ11__vector_12E28switch_closures_count_period+0x1>
    2d92:	80 91 88 46 	lds	r24, 0x4688	; 0x804688 <_ZZ11__vector_12E28switch_closures_count_period>
    2d96:	90 91 89 46 	lds	r25, 0x4689	; 0x804689 <_ZZ11__vector_12E28switch_closures_count_period+0x1>
    2d9a:	89 2b       	or	r24, r25
    2d9c:	09 f0       	breq	.+2      	; 0x2da0 <__vector_12+0x1b0>
    2d9e:	42 c0       	rjmp	.+132    	; 0x2e24 <__vector_12+0x234>
    2da0:	80 91 63 46 	lds	r24, 0x4663	; 0x804663 <g_switch_presses_count>
    2da4:	90 91 64 46 	lds	r25, 0x4664	; 0x804664 <g_switch_presses_count+0x1>
    2da8:	89 2b       	or	r24, r25
    2daa:	41 f0       	breq	.+16     	; 0x2dbc <__vector_12+0x1cc>
    2dac:	80 91 63 46 	lds	r24, 0x4663	; 0x804663 <g_switch_presses_count>
    2db0:	90 91 64 46 	lds	r25, 0x4664	; 0x804664 <g_switch_presses_count+0x1>
    2db4:	03 97       	sbiw	r24, 0x03	; 3
    2db6:	10 f4       	brcc	.+4      	; 0x2dbc <__vector_12+0x1cc>
    2db8:	81 e0       	ldi	r24, 0x01	; 1
    2dba:	01 c0       	rjmp	.+2      	; 0x2dbe <__vector_12+0x1ce>
    2dbc:	80 e0       	ldi	r24, 0x00	; 0
    2dbe:	88 23       	and	r24, r24
    2dc0:	41 f0       	breq	.+16     	; 0x2dd2 <__vector_12+0x1e2>
    2dc2:	80 91 63 46 	lds	r24, 0x4663	; 0x804663 <g_switch_presses_count>
    2dc6:	90 91 64 46 	lds	r25, 0x4664	; 0x804664 <g_switch_presses_count+0x1>
    2dca:	80 93 61 46 	sts	0x4661, r24	; 0x804661 <g_handle_counted_presses>
    2dce:	90 93 62 46 	sts	0x4662, r25	; 0x804662 <g_handle_counted_presses+0x1>
    2dd2:	10 92 63 46 	sts	0x4663, r1	; 0x804663 <g_switch_presses_count>
    2dd6:	10 92 64 46 	sts	0x4664, r1	; 0x804664 <g_switch_presses_count+0x1>
    2dda:	24 c0       	rjmp	.+72     	; 0x2e24 <__vector_12+0x234>
    2ddc:	80 91 63 46 	lds	r24, 0x4663	; 0x804663 <g_switch_presses_count>
    2de0:	90 91 64 46 	lds	r25, 0x4664	; 0x804664 <g_switch_presses_count+0x1>
    2de4:	01 97       	sbiw	r24, 0x01	; 1
    2de6:	31 f4       	brne	.+12     	; 0x2df4 <__vector_12+0x204>
    2de8:	80 91 87 46 	lds	r24, 0x4687	; 0x804687 <_ZZ11__vector_12E14buttonReleased>
    2dec:	88 23       	and	r24, r24
    2dee:	11 f0       	breq	.+4      	; 0x2df4 <__vector_12+0x204>
    2df0:	81 e0       	ldi	r24, 0x01	; 1
    2df2:	01 c0       	rjmp	.+2      	; 0x2df6 <__vector_12+0x206>
    2df4:	80 e0       	ldi	r24, 0x00	; 0
    2df6:	88 23       	and	r24, r24
    2df8:	39 f0       	breq	.+14     	; 0x2e08 <__vector_12+0x218>
    2dfa:	82 e3       	ldi	r24, 0x32	; 50
    2dfc:	90 e0       	ldi	r25, 0x00	; 0
    2dfe:	80 93 88 46 	sts	0x4688, r24	; 0x804688 <_ZZ11__vector_12E28switch_closures_count_period>
    2e02:	90 93 89 46 	sts	0x4689, r25	; 0x804689 <_ZZ11__vector_12E28switch_closures_count_period+0x1>
    2e06:	0e c0       	rjmp	.+28     	; 0x2e24 <__vector_12+0x234>
    2e08:	80 91 63 46 	lds	r24, 0x4663	; 0x804663 <g_switch_presses_count>
    2e0c:	90 91 64 46 	lds	r25, 0x4664	; 0x804664 <g_switch_presses_count+0x1>
    2e10:	21 e0       	ldi	r18, 0x01	; 1
    2e12:	03 97       	sbiw	r24, 0x03	; 3
    2e14:	08 f4       	brcc	.+2      	; 0x2e18 <__vector_12+0x228>
    2e16:	20 e0       	ldi	r18, 0x00	; 0
    2e18:	22 23       	and	r18, r18
    2e1a:	21 f0       	breq	.+8      	; 0x2e24 <__vector_12+0x234>
    2e1c:	10 92 63 46 	sts	0x4663, r1	; 0x804663 <g_switch_presses_count>
    2e20:	10 92 64 46 	sts	0x4664, r1	; 0x804664 <g_switch_presses_count+0x1>
    2e24:	0e 94 56 38 	call	0x70ac	; 0x70ac <_Z18portDdebouncedValsv>
    2e28:	88 2f       	mov	r24, r24
    2e2a:	90 e0       	ldi	r25, 0x00	; 0
    2e2c:	82 70       	andi	r24, 0x02	; 2
    2e2e:	99 27       	eor	r25, r25
    2e30:	21 e0       	ldi	r18, 0x01	; 1
    2e32:	89 2b       	or	r24, r25
    2e34:	09 f4       	brne	.+2      	; 0x2e38 <__vector_12+0x248>
    2e36:	20 e0       	ldi	r18, 0x00	; 0
    2e38:	22 23       	and	r18, r18
    2e3a:	79 f0       	breq	.+30     	; 0x2e5a <__vector_12+0x26a>
    2e3c:	90 91 c4 45 	lds	r25, 0x45C4	; 0x8045c4 <g_antenna_connect_state>
    2e40:	81 e0       	ldi	r24, 0x01	; 1
    2e42:	91 30       	cpi	r25, 0x01	; 1
    2e44:	09 f4       	brne	.+2      	; 0x2e48 <__vector_12+0x258>
    2e46:	80 e0       	ldi	r24, 0x00	; 0
    2e48:	88 23       	and	r24, r24
    2e4a:	a9 f0       	breq	.+42     	; 0x2e76 <__vector_12+0x286>
    2e4c:	81 e0       	ldi	r24, 0x01	; 1
    2e4e:	80 93 c4 45 	sts	0x45C4, r24	; 0x8045c4 <g_antenna_connect_state>
    2e52:	81 e0       	ldi	r24, 0x01	; 1
    2e54:	80 93 06 40 	sts	0x4006, r24	; 0x804006 <_ZL28g_antenna_connection_changed>
    2e58:	0e c0       	rjmp	.+28     	; 0x2e76 <__vector_12+0x286>
    2e5a:	90 91 c4 45 	lds	r25, 0x45C4	; 0x8045c4 <g_antenna_connect_state>
    2e5e:	81 e0       	ldi	r24, 0x01	; 1
    2e60:	92 30       	cpi	r25, 0x02	; 2
    2e62:	09 f4       	brne	.+2      	; 0x2e66 <__vector_12+0x276>
    2e64:	80 e0       	ldi	r24, 0x00	; 0
    2e66:	88 23       	and	r24, r24
    2e68:	31 f0       	breq	.+12     	; 0x2e76 <__vector_12+0x286>
    2e6a:	82 e0       	ldi	r24, 0x02	; 2
    2e6c:	80 93 c4 45 	sts	0x45C4, r24	; 0x8045c4 <g_antenna_connect_state>
    2e70:	81 e0       	ldi	r24, 0x01	; 1
    2e72:	80 93 06 40 	sts	0x4006, r24	; 0x804006 <_ZL28g_antenna_connection_changed>
    2e76:	80 91 48 46 	lds	r24, 0x4648	; 0x804648 <g_event_enabled>
    2e7a:	88 23       	and	r24, r24
    2e7c:	31 f0       	breq	.+12     	; 0x2e8a <__vector_12+0x29a>
    2e7e:	80 91 4a 46 	lds	r24, 0x464A	; 0x80464a <g_event_commenced>
    2e82:	88 23       	and	r24, r24
    2e84:	11 f0       	breq	.+4      	; 0x2e8a <__vector_12+0x29a>
    2e86:	81 e0       	ldi	r24, 0x01	; 1
    2e88:	01 c0       	rjmp	.+2      	; 0x2e8c <__vector_12+0x29c>
    2e8a:	80 e0       	ldi	r24, 0x00	; 0
    2e8c:	88 23       	and	r24, r24
    2e8e:	09 f4       	brne	.+2      	; 0x2e92 <__vector_12+0x2a2>
    2e90:	bd c0       	rjmp	.+378    	; 0x300c <__vector_12+0x41c>
    2e92:	81 e0       	ldi	r24, 0x01	; 1
    2e94:	80 93 24 40 	sts	0x4024, r24	; 0x804024 <_ZZ11__vector_12E29initializeManualTransmissions>
    2e98:	80 91 c7 45 	lds	r24, 0x45C7	; 0x8045c7 <_ZL12g_on_the_air>
    2e9c:	90 91 c8 45 	lds	r25, 0x45C8	; 0x8045c8 <_ZL12g_on_the_air+0x1>
    2ea0:	a0 91 c9 45 	lds	r26, 0x45C9	; 0x8045c9 <_ZL12g_on_the_air+0x2>
    2ea4:	b0 91 ca 45 	lds	r27, 0x45CA	; 0x8045ca <_ZL12g_on_the_air+0x3>
    2ea8:	21 e0       	ldi	r18, 0x01	; 1
    2eaa:	18 16       	cp	r1, r24
    2eac:	19 06       	cpc	r1, r25
    2eae:	1a 06       	cpc	r1, r26
    2eb0:	1b 06       	cpc	r1, r27
    2eb2:	0c f0       	brlt	.+2      	; 0x2eb6 <__vector_12+0x2c6>
    2eb4:	20 e0       	ldi	r18, 0x00	; 0
    2eb6:	22 23       	and	r18, r18
    2eb8:	09 f4       	brne	.+2      	; 0x2ebc <__vector_12+0x2cc>
    2eba:	7f c0       	rjmp	.+254    	; 0x2fba <__vector_12+0x3ca>
    2ebc:	80 91 8a 46 	lds	r24, 0x468A	; 0x80468a <_ZZ11__vector_12E7codeInc>
    2ec0:	90 91 8b 46 	lds	r25, 0x468B	; 0x80468b <_ZZ11__vector_12E7codeInc+0x1>
    2ec4:	89 2b       	or	r24, r25
    2ec6:	09 f4       	brne	.+2      	; 0x2eca <__vector_12+0x2da>
    2ec8:	5e c0       	rjmp	.+188    	; 0x2f86 <__vector_12+0x396>
    2eca:	80 91 8a 46 	lds	r24, 0x468A	; 0x80468a <_ZZ11__vector_12E7codeInc>
    2ece:	90 91 8b 46 	lds	r25, 0x468B	; 0x80468b <_ZZ11__vector_12E7codeInc+0x1>
    2ed2:	01 97       	sbiw	r24, 0x01	; 1
    2ed4:	80 93 8a 46 	sts	0x468A, r24	; 0x80468a <_ZZ11__vector_12E7codeInc>
    2ed8:	90 93 8b 46 	sts	0x468B, r25	; 0x80468b <_ZZ11__vector_12E7codeInc+0x1>
    2edc:	80 91 8a 46 	lds	r24, 0x468A	; 0x80468a <_ZZ11__vector_12E7codeInc>
    2ee0:	90 91 8b 46 	lds	r25, 0x468B	; 0x80468b <_ZZ11__vector_12E7codeInc+0x1>
    2ee4:	89 2b       	or	r24, r25
    2ee6:	09 f0       	breq	.+2      	; 0x2eea <__vector_12+0x2fa>
    2ee8:	94 c1       	rjmp	.+808    	; 0x3212 <__vector_12+0x622>
    2eea:	9e 01       	movw	r18, r28
    2eec:	26 5f       	subi	r18, 0xF6	; 246
    2eee:	3f 4f       	sbci	r19, 0xFF	; 255
    2ef0:	ce 01       	movw	r24, r28
    2ef2:	09 96       	adiw	r24, 0x09	; 9
    2ef4:	a9 01       	movw	r20, r18
    2ef6:	bc 01       	movw	r22, r24
    2ef8:	80 e0       	ldi	r24, 0x00	; 0
    2efa:	90 e0       	ldi	r25, 0x00	; 0
    2efc:	0e 94 1b 60 	call	0xc036	; 0xc036 <_Z9makeMorsePcPbS0_>
    2f00:	80 93 8c 46 	sts	0x468C, r24	; 0x80468c <_ZZ11__vector_12E3key>
    2f04:	99 85       	ldd	r25, Y+9	; 0x09
    2f06:	81 e0       	ldi	r24, 0x01	; 1
    2f08:	89 27       	eor	r24, r25
    2f0a:	88 23       	and	r24, r24
    2f0c:	09 f4       	brne	.+2      	; 0x2f10 <__vector_12+0x320>
    2f0e:	81 c1       	rjmp	.+770    	; 0x3212 <__vector_12+0x622>
    2f10:	8a 85       	ldd	r24, Y+10	; 0x0a
    2f12:	88 23       	and	r24, r24
    2f14:	09 f4       	brne	.+2      	; 0x2f18 <__vector_12+0x328>
    2f16:	7d c1       	rjmp	.+762    	; 0x3212 <__vector_12+0x622>
    2f18:	8d ef       	ldi	r24, 0xFD	; 253
    2f1a:	80 93 c3 45 	sts	0x45C3, r24	; 0x8045c3 <_ZL18g_last_status_code>
    2f1e:	80 91 0e 40 	lds	r24, 0x400E	; 0x80400e <g_pattern_codespeed>
    2f22:	0e 94 89 27 	call	0x4f12	; 0x4f12 <_Z13throttleValueh>
    2f26:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    2f2a:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    2f2e:	81 e0       	ldi	r24, 0x01	; 1
    2f30:	89 87       	std	Y+9, r24	; 0x09
    2f32:	0e 94 1f 2f 	call	0x5e3e	; 0x5e3e <_Z14getPatternTextv>
    2f36:	9c 01       	movw	r18, r24
    2f38:	ce 01       	movw	r24, r28
    2f3a:	09 96       	adiw	r24, 0x09	; 9
    2f3c:	40 e0       	ldi	r20, 0x00	; 0
    2f3e:	50 e0       	ldi	r21, 0x00	; 0
    2f40:	bc 01       	movw	r22, r24
    2f42:	c9 01       	movw	r24, r18
    2f44:	0e 94 1b 60 	call	0xc036	; 0xc036 <_Z9makeMorsePcPbS0_>
    2f48:	9e 01       	movw	r18, r28
    2f4a:	26 5f       	subi	r18, 0xF6	; 246
    2f4c:	3f 4f       	sbci	r19, 0xFF	; 255
    2f4e:	ce 01       	movw	r24, r28
    2f50:	09 96       	adiw	r24, 0x09	; 9
    2f52:	a9 01       	movw	r20, r18
    2f54:	bc 01       	movw	r22, r24
    2f56:	80 e0       	ldi	r24, 0x00	; 0
    2f58:	90 e0       	ldi	r25, 0x00	; 0
    2f5a:	0e 94 1b 60 	call	0xc036	; 0xc036 <_Z9makeMorsePcPbS0_>
    2f5e:	80 93 8c 46 	sts	0x468C, r24	; 0x80468c <_ZZ11__vector_12E3key>
    2f62:	80 91 4d 46 	lds	r24, 0x464D	; 0x80464d <g_sending_station_ID>
    2f66:	88 23       	and	r24, r24
    2f68:	41 f0       	breq	.+16     	; 0x2f7a <__vector_12+0x38a>
    2f6a:	80 91 11 40 	lds	r24, 0x4011	; 0x804011 <g_off_air_seconds>
    2f6e:	90 91 12 40 	lds	r25, 0x4012	; 0x804012 <g_off_air_seconds+0x1>
    2f72:	89 2b       	or	r24, r25
    2f74:	11 f0       	breq	.+4      	; 0x2f7a <__vector_12+0x38a>
    2f76:	81 e0       	ldi	r24, 0x01	; 1
    2f78:	01 c0       	rjmp	.+2      	; 0x2f7c <__vector_12+0x38c>
    2f7a:	80 e0       	ldi	r24, 0x00	; 0
    2f7c:	80 93 4e 46 	sts	0x464E, r24	; 0x80464e <g_muteAfterID>
    2f80:	10 92 4d 46 	sts	0x464D, r1	; 0x80464d <g_sending_station_ID>
    2f84:	46 c1       	rjmp	.+652    	; 0x3212 <__vector_12+0x622>
    2f86:	80 91 4e 46 	lds	r24, 0x464E	; 0x80464e <g_muteAfterID>
    2f8a:	88 23       	and	r24, r24
    2f8c:	11 f0       	breq	.+4      	; 0x2f92 <__vector_12+0x3a2>
    2f8e:	10 92 8c 46 	sts	0x468C, r1	; 0x80468c <_ZZ11__vector_12E3key>
    2f92:	80 91 8c 46 	lds	r24, 0x468C	; 0x80468c <_ZZ11__vector_12E3key>
    2f96:	0e 94 f7 75 	call	0xebee	; 0xebee <_Z14keyTransmitterb>
    2f9a:	80 91 8c 46 	lds	r24, 0x468C	; 0x80468c <_ZZ11__vector_12E3key>
    2f9e:	68 2f       	mov	r22, r24
    2fa0:	8b e6       	ldi	r24, 0x6B	; 107
    2fa2:	96 e4       	ldi	r25, 0x46	; 70
    2fa4:	0e 94 e3 56 	call	0xadc6	; 0xadc6 <_ZN4leds6setRedEb>
    2fa8:	80 91 07 40 	lds	r24, 0x4007	; 0x804007 <_ZL15g_code_throttle>
    2fac:	90 91 08 40 	lds	r25, 0x4008	; 0x804008 <_ZL15g_code_throttle+0x1>
    2fb0:	80 93 8a 46 	sts	0x468A, r24	; 0x80468a <_ZZ11__vector_12E7codeInc>
    2fb4:	90 93 8b 46 	sts	0x468B, r25	; 0x80468b <_ZZ11__vector_12E7codeInc+0x1>
    2fb8:	2c c1       	rjmp	.+600    	; 0x3212 <__vector_12+0x622>
    2fba:	80 91 c7 45 	lds	r24, 0x45C7	; 0x8045c7 <_ZL12g_on_the_air>
    2fbe:	90 91 c8 45 	lds	r25, 0x45C8	; 0x8045c8 <_ZL12g_on_the_air+0x1>
    2fc2:	a0 91 c9 45 	lds	r26, 0x45C9	; 0x8045c9 <_ZL12g_on_the_air+0x2>
    2fc6:	b0 91 ca 45 	lds	r27, 0x45CA	; 0x8045ca <_ZL12g_on_the_air+0x3>
    2fca:	21 e0       	ldi	r18, 0x01	; 1
    2fcc:	89 2b       	or	r24, r25
    2fce:	8a 2b       	or	r24, r26
    2fd0:	8b 2b       	or	r24, r27
    2fd2:	09 f0       	breq	.+2      	; 0x2fd6 <__vector_12+0x3e6>
    2fd4:	20 e0       	ldi	r18, 0x00	; 0
    2fd6:	22 23       	and	r18, r18
    2fd8:	09 f4       	brne	.+2      	; 0x2fdc <__vector_12+0x3ec>
    2fda:	1b c1       	rjmp	.+566    	; 0x3212 <__vector_12+0x622>
    2fdc:	10 92 4e 46 	sts	0x464E, r1	; 0x80464e <g_muteAfterID>
    2fe0:	80 91 8c 46 	lds	r24, 0x468C	; 0x80468c <_ZZ11__vector_12E3key>
    2fe4:	88 23       	and	r24, r24
    2fe6:	09 f4       	brne	.+2      	; 0x2fea <__vector_12+0x3fa>
    2fe8:	14 c1       	rjmp	.+552    	; 0x3212 <__vector_12+0x622>
    2fea:	10 92 8c 46 	sts	0x468C, r1	; 0x80468c <_ZZ11__vector_12E3key>
    2fee:	80 e0       	ldi	r24, 0x00	; 0
    2ff0:	0e 94 f7 75 	call	0xebee	; 0xebee <_Z14keyTransmitterb>
    2ff4:	60 e0       	ldi	r22, 0x00	; 0
    2ff6:	8b e6       	ldi	r24, 0x6B	; 107
    2ff8:	96 e4       	ldi	r25, 0x46	; 70
    2ffa:	0e 94 e3 56 	call	0xadc6	; 0xadc6 <_ZN4leds6setRedEb>
    2ffe:	80 e0       	ldi	r24, 0x00	; 0
    3000:	0e 94 50 75 	call	0xeaa0	; 0xeaa0 <_Z18powerToTransmitterb>
    3004:	8e ef       	ldi	r24, 0xFE	; 254
    3006:	80 93 c3 45 	sts	0x45C3, r24	; 0x8045c3 <_ZL18g_last_status_code>
    300a:	03 c1       	rjmp	.+518    	; 0x3212 <__vector_12+0x622>
    300c:	80 91 82 46 	lds	r24, 0x4682	; 0x804682 <g_enable_manual_transmissions>
    3010:	88 23       	and	r24, r24
    3012:	21 f4       	brne	.+8      	; 0x301c <__vector_12+0x42c>
    3014:	80 91 21 40 	lds	r24, 0x4021	; 0x804021 <g_enable_LED_enunciations>
    3018:	88 23       	and	r24, r24
    301a:	11 f0       	breq	.+4      	; 0x3020 <__vector_12+0x430>
    301c:	81 e0       	ldi	r24, 0x01	; 1
    301e:	01 c0       	rjmp	.+2      	; 0x3022 <__vector_12+0x432>
    3020:	80 e0       	ldi	r24, 0x00	; 0
    3022:	88 23       	and	r24, r24
    3024:	09 f4       	brne	.+2      	; 0x3028 <__vector_12+0x438>
    3026:	f5 c0       	rjmp	.+490    	; 0x3212 <__vector_12+0x622>
    3028:	8c e6       	ldi	r24, 0x6C	; 108
    302a:	96 e4       	ldi	r25, 0x46	; 70
    302c:	0e 94 3c 3a 	call	0x7478	; 0x7478 <_ZNK18CircularStringBuff5emptyEv>
    3030:	89 83       	std	Y+1, r24	; 0x01
    3032:	19 86       	std	Y+9, r1	; 0x09
    3034:	80 91 24 40 	lds	r24, 0x4024	; 0x804024 <_ZZ11__vector_12E29initializeManualTransmissions>
    3038:	88 23       	and	r24, r24
    303a:	a1 f0       	breq	.+40     	; 0x3064 <__vector_12+0x474>
    303c:	10 92 24 40 	sts	0x4024, r1	; 0x804024 <_ZZ11__vector_12E29initializeManualTransmissions>
    3040:	8c e6       	ldi	r24, 0x6C	; 108
    3042:	96 e4       	ldi	r25, 0x46	; 70
    3044:	0e 94 1d 3a 	call	0x743a	; 0x743a <_ZN18CircularStringBuff5resetEv>
    3048:	ce 01       	movw	r24, r28
    304a:	09 96       	adiw	r24, 0x09	; 9
    304c:	40 e0       	ldi	r20, 0x00	; 0
    304e:	50 e0       	ldi	r21, 0x00	; 0
    3050:	bc 01       	movw	r22, r24
    3052:	85 e8       	ldi	r24, 0x85	; 133
    3054:	90 e4       	ldi	r25, 0x40	; 64
    3056:	0e 94 1b 60 	call	0xc036	; 0xc036 <_Z9makeMorsePcPbS0_>
    305a:	81 e0       	ldi	r24, 0x01	; 1
    305c:	89 83       	std	Y+1, r24	; 0x01
    305e:	81 e0       	ldi	r24, 0x01	; 1
    3060:	80 93 25 40 	sts	0x4025, r24	; 0x804025 <_ZZ11__vector_12E12charFinished>
    3064:	89 81       	ldd	r24, Y+1	; 0x01
    3066:	88 23       	and	r24, r24
    3068:	b1 f1       	breq	.+108    	; 0x30d6 <__vector_12+0x4e6>
    306a:	80 91 25 40 	lds	r24, 0x4025	; 0x804025 <_ZZ11__vector_12E12charFinished>
    306e:	88 23       	and	r24, r24
    3070:	91 f1       	breq	.+100    	; 0x30d6 <__vector_12+0x4e6>
    3072:	90 91 26 40 	lds	r25, 0x4026	; 0x804026 <_ZZ11__vector_12E4idle>
    3076:	81 e0       	ldi	r24, 0x01	; 1
    3078:	89 27       	eor	r24, r25
    307a:	88 23       	and	r24, r24
    307c:	09 f4       	brne	.+2      	; 0x3080 <__vector_12+0x490>
    307e:	c9 c0       	rjmp	.+402    	; 0x3212 <__vector_12+0x622>
    3080:	80 91 8c 46 	lds	r24, 0x468C	; 0x80468c <_ZZ11__vector_12E3key>
    3084:	88 23       	and	r24, r24
    3086:	69 f0       	breq	.+26     	; 0x30a2 <__vector_12+0x4b2>
    3088:	10 92 8c 46 	sts	0x468C, r1	; 0x80468c <_ZZ11__vector_12E3key>
    308c:	80 e0       	ldi	r24, 0x00	; 0
    308e:	0e 94 f7 75 	call	0xebee	; 0xebee <_Z14keyTransmitterb>
    3092:	60 e0       	ldi	r22, 0x00	; 0
    3094:	8b e6       	ldi	r24, 0x6B	; 107
    3096:	96 e4       	ldi	r25, 0x46	; 70
    3098:	0e 94 e3 56 	call	0xadc6	; 0xadc6 <_ZN4leds6setRedEb>
    309c:	80 e0       	ldi	r24, 0x00	; 0
    309e:	0e 94 50 75 	call	0xeaa0	; 0xeaa0 <_Z18powerToTransmitterb>
    30a2:	60 e0       	ldi	r22, 0x00	; 0
    30a4:	8c e6       	ldi	r24, 0x6C	; 108
    30a6:	96 e4       	ldi	r25, 0x46	; 70
    30a8:	0e 94 60 3a 	call	0x74c0	; 0x74c0 <_ZN18CircularStringBuff7setBusyEb>
    30ac:	80 91 09 40 	lds	r24, 0x4009	; 0x804009 <_ZL27g_enunciation_code_throttle>
    30b0:	90 91 0a 40 	lds	r25, 0x400A	; 0x80400a <_ZL27g_enunciation_code_throttle+0x1>
    30b4:	80 93 8a 46 	sts	0x468A, r24	; 0x80468a <_ZZ11__vector_12E7codeInc>
    30b8:	90 93 8b 46 	sts	0x468B, r25	; 0x80468b <_ZZ11__vector_12E7codeInc+0x1>
    30bc:	ce 01       	movw	r24, r28
    30be:	09 96       	adiw	r24, 0x09	; 9
    30c0:	40 e0       	ldi	r20, 0x00	; 0
    30c2:	50 e0       	ldi	r21, 0x00	; 0
    30c4:	bc 01       	movw	r22, r24
    30c6:	85 e8       	ldi	r24, 0x85	; 133
    30c8:	90 e4       	ldi	r25, 0x40	; 64
    30ca:	0e 94 1b 60 	call	0xc036	; 0xc036 <_Z9makeMorsePcPbS0_>
    30ce:	81 e0       	ldi	r24, 0x01	; 1
    30d0:	80 93 26 40 	sts	0x4026, r24	; 0x804026 <_ZZ11__vector_12E4idle>
    30d4:	9e c0       	rjmp	.+316    	; 0x3212 <__vector_12+0x622>
    30d6:	10 92 26 40 	sts	0x4026, r1	; 0x804026 <_ZZ11__vector_12E4idle>
    30da:	80 91 8a 46 	lds	r24, 0x468A	; 0x80468a <_ZZ11__vector_12E7codeInc>
    30de:	90 91 8b 46 	lds	r25, 0x468B	; 0x80468b <_ZZ11__vector_12E7codeInc+0x1>
    30e2:	89 2b       	or	r24, r25
    30e4:	09 f4       	brne	.+2      	; 0x30e8 <__vector_12+0x4f8>
    30e6:	7e c0       	rjmp	.+252    	; 0x31e4 <__vector_12+0x5f4>
    30e8:	80 91 8a 46 	lds	r24, 0x468A	; 0x80468a <_ZZ11__vector_12E7codeInc>
    30ec:	90 91 8b 46 	lds	r25, 0x468B	; 0x80468b <_ZZ11__vector_12E7codeInc+0x1>
    30f0:	01 97       	sbiw	r24, 0x01	; 1
    30f2:	80 93 8a 46 	sts	0x468A, r24	; 0x80468a <_ZZ11__vector_12E7codeInc>
    30f6:	90 93 8b 46 	sts	0x468B, r25	; 0x80468b <_ZZ11__vector_12E7codeInc+0x1>
    30fa:	80 91 8a 46 	lds	r24, 0x468A	; 0x80468a <_ZZ11__vector_12E7codeInc>
    30fe:	90 91 8b 46 	lds	r25, 0x468B	; 0x80468b <_ZZ11__vector_12E7codeInc+0x1>
    3102:	89 2b       	or	r24, r25
    3104:	09 f0       	breq	.+2      	; 0x3108 <__vector_12+0x518>
    3106:	85 c0       	rjmp	.+266    	; 0x3212 <__vector_12+0x622>
    3108:	ce 01       	movw	r24, r28
    310a:	09 96       	adiw	r24, 0x09	; 9
    310c:	45 e2       	ldi	r20, 0x25	; 37
    310e:	50 e4       	ldi	r21, 0x40	; 64
    3110:	bc 01       	movw	r22, r24
    3112:	80 e0       	ldi	r24, 0x00	; 0
    3114:	90 e0       	ldi	r25, 0x00	; 0
    3116:	0e 94 1b 60 	call	0xc036	; 0xc036 <_Z9makeMorsePcPbS0_>
    311a:	80 93 8c 46 	sts	0x468C, r24	; 0x80468c <_ZZ11__vector_12E3key>
    311e:	80 91 25 40 	lds	r24, 0x4025	; 0x804025 <_ZZ11__vector_12E12charFinished>
    3122:	88 23       	and	r24, r24
    3124:	09 f4       	brne	.+2      	; 0x3128 <__vector_12+0x538>
    3126:	46 c0       	rjmp	.+140    	; 0x31b4 <__vector_12+0x5c4>
    3128:	8c e6       	ldi	r24, 0x6C	; 108
    312a:	96 e4       	ldi	r25, 0x46	; 70
    312c:	0e 94 3c 3a 	call	0x7478	; 0x7478 <_ZNK18CircularStringBuff5emptyEv>
    3130:	98 2f       	mov	r25, r24
    3132:	81 e0       	ldi	r24, 0x01	; 1
    3134:	89 27       	eor	r24, r25
    3136:	88 23       	and	r24, r24
    3138:	e9 f1       	breq	.+122    	; 0x31b4 <__vector_12+0x5c4>
    313a:	80 91 09 40 	lds	r24, 0x4009	; 0x804009 <_ZL27g_enunciation_code_throttle>
    313e:	90 91 0a 40 	lds	r25, 0x400A	; 0x80400a <_ZL27g_enunciation_code_throttle+0x1>
    3142:	8b 87       	std	Y+11, r24	; 0x0b
    3144:	9c 87       	std	Y+12, r25	; 0x0c
    3146:	80 91 0e 40 	lds	r24, 0x400E	; 0x80400e <g_pattern_codespeed>
    314a:	0e 94 89 27 	call	0x4f12	; 0x4f12 <_Z13throttleValueh>
    314e:	8d 87       	std	Y+13, r24	; 0x0d
    3150:	9e 87       	std	Y+14, r25	; 0x0e
    3152:	2b 85       	ldd	r18, Y+11	; 0x0b
    3154:	3c 85       	ldd	r19, Y+12	; 0x0c
    3156:	8d 85       	ldd	r24, Y+13	; 0x0d
    3158:	9e 85       	ldd	r25, Y+14	; 0x0e
    315a:	28 17       	cp	r18, r24
    315c:	39 07       	cpc	r19, r25
    315e:	18 f0       	brcs	.+6      	; 0x3166 <__vector_12+0x576>
    3160:	8d 85       	ldd	r24, Y+13	; 0x0d
    3162:	9e 85       	ldd	r25, Y+14	; 0x0e
    3164:	02 c0       	rjmp	.+4      	; 0x316a <__vector_12+0x57a>
    3166:	8b 85       	ldd	r24, Y+11	; 0x0b
    3168:	9c 85       	ldd	r25, Y+12	; 0x0c
    316a:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL27g_enunciation_code_throttle>
    316e:	90 93 0a 40 	sts	0x400A, r25	; 0x80400a <_ZL27g_enunciation_code_throttle+0x1>
    3172:	8c e6       	ldi	r24, 0x6C	; 108
    3174:	96 e4       	ldi	r25, 0x46	; 70
    3176:	0e 94 55 3b 	call	0x76aa	; 0x76aa <_ZN18CircularStringBuff3getEv>
    317a:	80 93 8d 46 	sts	0x468D, r24	; 0x80468d <_ZZ11__vector_12E2cc>
    317e:	10 92 8e 46 	sts	0x468E, r1	; 0x80468e <_ZZ11__vector_12E2cc+0x1>
    3182:	ce 01       	movw	r24, r28
    3184:	09 96       	adiw	r24, 0x09	; 9
    3186:	40 e0       	ldi	r20, 0x00	; 0
    3188:	50 e0       	ldi	r21, 0x00	; 0
    318a:	bc 01       	movw	r22, r24
    318c:	8d e8       	ldi	r24, 0x8D	; 141
    318e:	96 e4       	ldi	r25, 0x46	; 70
    3190:	0e 94 1b 60 	call	0xc036	; 0xc036 <_Z9makeMorsePcPbS0_>
    3194:	ce 01       	movw	r24, r28
    3196:	09 96       	adiw	r24, 0x09	; 9
    3198:	45 e2       	ldi	r20, 0x25	; 37
    319a:	50 e4       	ldi	r21, 0x40	; 64
    319c:	bc 01       	movw	r22, r24
    319e:	80 e0       	ldi	r24, 0x00	; 0
    31a0:	90 e0       	ldi	r25, 0x00	; 0
    31a2:	0e 94 1b 60 	call	0xc036	; 0xc036 <_Z9makeMorsePcPbS0_>
    31a6:	80 93 8c 46 	sts	0x468C, r24	; 0x80468c <_ZZ11__vector_12E3key>
    31aa:	61 e0       	ldi	r22, 0x01	; 1
    31ac:	8c e6       	ldi	r24, 0x6C	; 108
    31ae:	96 e4       	ldi	r25, 0x46	; 70
    31b0:	0e 94 60 3a 	call	0x74c0	; 0x74c0 <_ZN18CircularStringBuff7setBusyEb>
    31b4:	80 91 1f 40 	lds	r24, 0x401F	; 0x80401f <g_enunciator>
    31b8:	81 30       	cpi	r24, 0x01	; 1
    31ba:	21 f4       	brne	.+8      	; 0x31c4 <__vector_12+0x5d4>
    31bc:	80 91 8c 46 	lds	r24, 0x468C	; 0x80468c <_ZZ11__vector_12E3key>
    31c0:	0e 94 f7 75 	call	0xebee	; 0xebee <_Z14keyTransmitterb>
    31c4:	80 91 8c 46 	lds	r24, 0x468C	; 0x80468c <_ZZ11__vector_12E3key>
    31c8:	68 2f       	mov	r22, r24
    31ca:	8b e6       	ldi	r24, 0x6B	; 107
    31cc:	96 e4       	ldi	r25, 0x46	; 70
    31ce:	0e 94 e3 56 	call	0xadc6	; 0xadc6 <_ZN4leds6setRedEb>
    31d2:	80 91 09 40 	lds	r24, 0x4009	; 0x804009 <_ZL27g_enunciation_code_throttle>
    31d6:	90 91 0a 40 	lds	r25, 0x400A	; 0x80400a <_ZL27g_enunciation_code_throttle+0x1>
    31da:	80 93 8a 46 	sts	0x468A, r24	; 0x80468a <_ZZ11__vector_12E7codeInc>
    31de:	90 93 8b 46 	sts	0x468B, r25	; 0x80468b <_ZZ11__vector_12E7codeInc+0x1>
    31e2:	17 c0       	rjmp	.+46     	; 0x3212 <__vector_12+0x622>
    31e4:	80 91 1f 40 	lds	r24, 0x401F	; 0x80401f <g_enunciator>
    31e8:	81 30       	cpi	r24, 0x01	; 1
    31ea:	21 f4       	brne	.+8      	; 0x31f4 <__vector_12+0x604>
    31ec:	80 91 8c 46 	lds	r24, 0x468C	; 0x80468c <_ZZ11__vector_12E3key>
    31f0:	0e 94 f7 75 	call	0xebee	; 0xebee <_Z14keyTransmitterb>
    31f4:	80 91 8c 46 	lds	r24, 0x468C	; 0x80468c <_ZZ11__vector_12E3key>
    31f8:	68 2f       	mov	r22, r24
    31fa:	8b e6       	ldi	r24, 0x6B	; 107
    31fc:	96 e4       	ldi	r25, 0x46	; 70
    31fe:	0e 94 e3 56 	call	0xadc6	; 0xadc6 <_ZN4leds6setRedEb>
    3202:	80 91 09 40 	lds	r24, 0x4009	; 0x804009 <_ZL27g_enunciation_code_throttle>
    3206:	90 91 0a 40 	lds	r25, 0x400A	; 0x80400a <_ZL27g_enunciation_code_throttle+0x1>
    320a:	80 93 8a 46 	sts	0x468A, r24	; 0x80468a <_ZZ11__vector_12E7codeInc>
    320e:	90 93 8b 46 	sts	0x468B, r25	; 0x80468b <_ZZ11__vector_12E7codeInc+0x1>
    3212:	90 91 8f 46 	lds	r25, 0x468F	; 0x80468f <_ZZ11__vector_12E19conversionInProcess>
    3216:	81 e0       	ldi	r24, 0x01	; 1
    3218:	89 27       	eor	r24, r25
    321a:	88 23       	and	r24, r24
    321c:	09 f4       	brne	.+2      	; 0x3220 <__vector_12+0x630>
    321e:	70 c0       	rjmp	.+224    	; 0x3300 <__vector_12+0x710>
    3220:	8f ef       	ldi	r24, 0xFF	; 255
    3222:	80 93 90 46 	sts	0x4690, r24	; 0x804690 <_ZZ11__vector_12E24indexConversionInProcess>
    3226:	1a 82       	std	Y+2, r1	; 0x02
    3228:	8a 81       	ldd	r24, Y+2	; 0x02
    322a:	83 30       	cpi	r24, 0x03	; 3
    322c:	d8 f5       	brcc	.+118    	; 0x32a4 <__vector_12+0x6b4>
    322e:	8a 81       	ldd	r24, Y+2	; 0x02
    3230:	88 2f       	mov	r24, r24
    3232:	90 e0       	ldi	r25, 0x00	; 0
    3234:	88 0f       	add	r24, r24
    3236:	99 1f       	adc	r25, r25
    3238:	87 5e       	subi	r24, 0xE7	; 231
    323a:	9f 4b       	sbci	r25, 0xBF	; 191
    323c:	fc 01       	movw	r30, r24
    323e:	80 81       	ld	r24, Z
    3240:	91 81       	ldd	r25, Z+1	; 0x01
    3242:	21 e0       	ldi	r18, 0x01	; 1
    3244:	89 2b       	or	r24, r25
    3246:	09 f4       	brne	.+2      	; 0x324a <__vector_12+0x65a>
    3248:	20 e0       	ldi	r18, 0x00	; 0
    324a:	22 23       	and	r18, r18
    324c:	a1 f0       	breq	.+40     	; 0x3276 <__vector_12+0x686>
    324e:	8a 81       	ldd	r24, Y+2	; 0x02
    3250:	88 2f       	mov	r24, r24
    3252:	90 e0       	ldi	r25, 0x00	; 0
    3254:	9c 01       	movw	r18, r24
    3256:	22 0f       	add	r18, r18
    3258:	33 1f       	adc	r19, r19
    325a:	27 5e       	subi	r18, 0xE7	; 231
    325c:	3f 4b       	sbci	r19, 0xBF	; 191
    325e:	f9 01       	movw	r30, r18
    3260:	20 81       	ld	r18, Z
    3262:	31 81       	ldd	r19, Z+1	; 0x01
    3264:	21 50       	subi	r18, 0x01	; 1
    3266:	31 09       	sbc	r19, r1
    3268:	88 0f       	add	r24, r24
    326a:	99 1f       	adc	r25, r25
    326c:	87 5e       	subi	r24, 0xE7	; 231
    326e:	9f 4b       	sbci	r25, 0xBF	; 191
    3270:	fc 01       	movw	r30, r24
    3272:	20 83       	st	Z, r18
    3274:	31 83       	std	Z+1, r19	; 0x01
    3276:	8a 81       	ldd	r24, Y+2	; 0x02
    3278:	88 2f       	mov	r24, r24
    327a:	90 e0       	ldi	r25, 0x00	; 0
    327c:	88 0f       	add	r24, r24
    327e:	99 1f       	adc	r25, r25
    3280:	87 5e       	subi	r24, 0xE7	; 231
    3282:	9f 4b       	sbci	r25, 0xBF	; 191
    3284:	fc 01       	movw	r30, r24
    3286:	80 81       	ld	r24, Z
    3288:	91 81       	ldd	r25, Z+1	; 0x01
    328a:	21 e0       	ldi	r18, 0x01	; 1
    328c:	89 2b       	or	r24, r25
    328e:	09 f0       	breq	.+2      	; 0x3292 <__vector_12+0x6a2>
    3290:	20 e0       	ldi	r18, 0x00	; 0
    3292:	22 23       	and	r18, r18
    3294:	19 f0       	breq	.+6      	; 0x329c <__vector_12+0x6ac>
    3296:	8a 81       	ldd	r24, Y+2	; 0x02
    3298:	80 93 90 46 	sts	0x4690, r24	; 0x804690 <_ZZ11__vector_12E24indexConversionInProcess>
    329c:	8a 81       	ldd	r24, Y+2	; 0x02
    329e:	8f 5f       	subi	r24, 0xFF	; 255
    32a0:	8a 83       	std	Y+2, r24	; 0x02
    32a2:	c2 cf       	rjmp	.-124    	; 0x3228 <__vector_12+0x638>
    32a4:	80 91 90 46 	lds	r24, 0x4690	; 0x804690 <_ZZ11__vector_12E24indexConversionInProcess>
    32a8:	88 23       	and	r24, r24
    32aa:	0c f4       	brge	.+2      	; 0x32ae <__vector_12+0x6be>
    32ac:	7e c0       	rjmp	.+252    	; 0x33aa <__vector_12+0x7ba>
    32ae:	80 91 90 46 	lds	r24, 0x4690	; 0x804690 <_ZZ11__vector_12E24indexConversionInProcess>
    32b2:	08 2e       	mov	r0, r24
    32b4:	00 0c       	add	r0, r0
    32b6:	99 0b       	sbc	r25, r25
    32b8:	20 91 90 46 	lds	r18, 0x4690	; 0x804690 <_ZZ11__vector_12E24indexConversionInProcess>
    32bc:	02 2e       	mov	r0, r18
    32be:	00 0c       	add	r0, r0
    32c0:	33 0b       	sbc	r19, r19
    32c2:	22 0f       	add	r18, r18
    32c4:	33 1f       	adc	r19, r19
    32c6:	2d 56       	subi	r18, 0x6D	; 109
    32c8:	3b 4b       	sbci	r19, 0xBB	; 187
    32ca:	f9 01       	movw	r30, r18
    32cc:	20 81       	ld	r18, Z
    32ce:	31 81       	ldd	r19, Z+1	; 0x01
    32d0:	88 0f       	add	r24, r24
    32d2:	99 1f       	adc	r25, r25
    32d4:	87 5e       	subi	r24, 0xE7	; 231
    32d6:	9f 4b       	sbci	r25, 0xBF	; 191
    32d8:	fc 01       	movw	r30, r24
    32da:	20 83       	st	Z, r18
    32dc:	31 83       	std	Z+1, r19	; 0x01
    32de:	80 91 90 46 	lds	r24, 0x4690	; 0x804690 <_ZZ11__vector_12E24indexConversionInProcess>
    32e2:	08 2e       	mov	r0, r24
    32e4:	00 0c       	add	r0, r0
    32e6:	99 0b       	sbc	r25, r25
    32e8:	8a 5e       	subi	r24, 0xEA	; 234
    32ea:	9f 4b       	sbci	r25, 0xBF	; 191
    32ec:	fc 01       	movw	r30, r24
    32ee:	80 81       	ld	r24, Z
    32f0:	0e 94 8e 31 	call	0x631c	; 0x631c <_Z18ADC0_setADCChannel20ADC_Active_Channel_t>
    32f4:	0e 94 f1 31 	call	0x63e2	; 0x63e2 <_Z20ADC0_startConversionv>
    32f8:	81 e0       	ldi	r24, 0x01	; 1
    32fa:	80 93 8f 46 	sts	0x468F, r24	; 0x80468f <_ZZ11__vector_12E19conversionInProcess>
    32fe:	55 c0       	rjmp	.+170    	; 0x33aa <__vector_12+0x7ba>
    3300:	0e 94 06 32 	call	0x640c	; 0x640c <_Z19ADC0_conversionDonev>
    3304:	88 23       	and	r24, r24
    3306:	09 f4       	brne	.+2      	; 0x330a <__vector_12+0x71a>
    3308:	50 c0       	rjmp	.+160    	; 0x33aa <__vector_12+0x7ba>
    330a:	0e 94 1a 32 	call	0x6434	; 0x6434 <_Z9ADC0_readv>
    330e:	8d 83       	std	Y+5, r24	; 0x05
    3310:	9e 83       	std	Y+6, r25	; 0x06
    3312:	8d 81       	ldd	r24, Y+5	; 0x05
    3314:	9e 81       	ldd	r25, Y+6	; 0x06
    3316:	0b 97       	sbiw	r24, 0x0b	; 11
    3318:	c0 f1       	brcs	.+112    	; 0x338a <__vector_12+0x79a>
    331a:	8d 81       	ldd	r24, Y+5	; 0x05
    331c:	9e 81       	ldd	r25, Y+6	; 0x06
    331e:	8a 3f       	cpi	r24, 0xFA	; 250
    3320:	9f 40       	sbci	r25, 0x0F	; 15
    3322:	98 f5       	brcc	.+102    	; 0x338a <__vector_12+0x79a>
    3324:	8d 81       	ldd	r24, Y+5	; 0x05
    3326:	9e 81       	ldd	r25, Y+6	; 0x06
    3328:	80 93 91 46 	sts	0x4691, r24	; 0x804691 <_ZZ11__vector_12E20holdConversionResult>
    332c:	90 93 92 46 	sts	0x4692, r25	; 0x804692 <_ZZ11__vector_12E20holdConversionResult+0x1>
    3330:	80 91 90 46 	lds	r24, 0x4690	; 0x804690 <_ZZ11__vector_12E24indexConversionInProcess>
    3334:	08 2e       	mov	r0, r24
    3336:	00 0c       	add	r0, r0
    3338:	99 0b       	sbc	r25, r25
    333a:	88 0f       	add	r24, r24
    333c:	99 1f       	adc	r25, r25
    333e:	87 5a       	subi	r24, 0xA7	; 167
    3340:	99 4b       	sbci	r25, 0xB9	; 185
    3342:	fc 01       	movw	r30, r24
    3344:	80 81       	ld	r24, Z
    3346:	91 81       	ldd	r25, Z+1	; 0x01
    3348:	8f 83       	std	Y+7, r24	; 0x07
    334a:	98 87       	std	Y+8, r25	; 0x08
    334c:	80 91 90 46 	lds	r24, 0x4690	; 0x804690 <_ZZ11__vector_12E24indexConversionInProcess>
    3350:	08 2e       	mov	r0, r24
    3352:	00 0c       	add	r0, r0
    3354:	99 0b       	sbc	r25, r25
    3356:	8a 5a       	subi	r24, 0xAA	; 170
    3358:	99 4b       	sbci	r25, 0xB9	; 185
    335a:	21 e0       	ldi	r18, 0x01	; 1
    335c:	fc 01       	movw	r30, r24
    335e:	20 83       	st	Z, r18
    3360:	80 91 91 46 	lds	r24, 0x4691	; 0x804691 <_ZZ11__vector_12E20holdConversionResult>
    3364:	90 91 92 46 	lds	r25, 0x4692	; 0x804692 <_ZZ11__vector_12E20holdConversionResult+0x1>
    3368:	8f 83       	std	Y+7, r24	; 0x07
    336a:	98 87       	std	Y+8, r25	; 0x08
    336c:	80 91 90 46 	lds	r24, 0x4690	; 0x804690 <_ZZ11__vector_12E24indexConversionInProcess>
    3370:	08 2e       	mov	r0, r24
    3372:	00 0c       	add	r0, r0
    3374:	99 0b       	sbc	r25, r25
    3376:	88 0f       	add	r24, r24
    3378:	99 1f       	adc	r25, r25
    337a:	87 5a       	subi	r24, 0xA7	; 167
    337c:	99 4b       	sbci	r25, 0xB9	; 185
    337e:	2f 81       	ldd	r18, Y+7	; 0x07
    3380:	38 85       	ldd	r19, Y+8	; 0x08
    3382:	fc 01       	movw	r30, r24
    3384:	20 83       	st	Z, r18
    3386:	31 83       	std	Z+1, r19	; 0x01
    3388:	0e c0       	rjmp	.+28     	; 0x33a6 <__vector_12+0x7b6>
    338a:	80 91 90 46 	lds	r24, 0x4690	; 0x804690 <_ZZ11__vector_12E24indexConversionInProcess>
    338e:	08 2e       	mov	r0, r24
    3390:	00 0c       	add	r0, r0
    3392:	99 0b       	sbc	r25, r25
    3394:	88 0f       	add	r24, r24
    3396:	99 1f       	adc	r25, r25
    3398:	87 5a       	subi	r24, 0xA7	; 167
    339a:	99 4b       	sbci	r25, 0xB9	; 185
    339c:	fc 01       	movw	r30, r24
    339e:	80 81       	ld	r24, Z
    33a0:	91 81       	ldd	r25, Z+1	; 0x01
    33a2:	8d 83       	std	Y+5, r24	; 0x05
    33a4:	9e 83       	std	Y+6, r25	; 0x06
    33a6:	10 92 8f 46 	sts	0x468F, r1	; 0x80468f <_ZZ11__vector_12E19conversionInProcess>
    33aa:	80 e0       	ldi	r24, 0x00	; 0
    33ac:	9b e0       	ldi	r25, 0x0B	; 11
    33ae:	21 e0       	ldi	r18, 0x01	; 1
    33b0:	fc 01       	movw	r30, r24
    33b2:	26 83       	std	Z+6, r18	; 0x06
    33b4:	00 00       	nop
    33b6:	2e 96       	adiw	r28, 0x0e	; 14
    33b8:	cd bf       	out	0x3d, r28	; 61
    33ba:	de bf       	out	0x3e, r29	; 62
    33bc:	df 91       	pop	r29
    33be:	cf 91       	pop	r28
    33c0:	ff 91       	pop	r31
    33c2:	ef 91       	pop	r30
    33c4:	bf 91       	pop	r27
    33c6:	af 91       	pop	r26
    33c8:	9f 91       	pop	r25
    33ca:	8f 91       	pop	r24
    33cc:	7f 91       	pop	r23
    33ce:	6f 91       	pop	r22
    33d0:	5f 91       	pop	r21
    33d2:	4f 91       	pop	r20
    33d4:	3f 91       	pop	r19
    33d6:	2f 91       	pop	r18
    33d8:	1f 91       	pop	r17
    33da:	0f 91       	pop	r16
    33dc:	0f 90       	pop	r0
    33de:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    33e2:	0f 90       	pop	r0
    33e4:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    33e8:	0f 90       	pop	r0
    33ea:	1f 90       	pop	r1
    33ec:	18 95       	reti

000033ee <__vector_29>:
    33ee:	1f 92       	push	r1
    33f0:	0f 92       	push	r0
    33f2:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    33f6:	0f 92       	push	r0
    33f8:	11 24       	eor	r1, r1
    33fa:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    33fe:	0f 92       	push	r0
    3400:	2f 93       	push	r18
    3402:	8f 93       	push	r24
    3404:	9f 93       	push	r25
    3406:	ef 93       	push	r30
    3408:	ff 93       	push	r31
    340a:	cf 93       	push	r28
    340c:	df 93       	push	r29
    340e:	1f 92       	push	r1
    3410:	cd b7       	in	r28, 0x3d	; 61
    3412:	de b7       	in	r29, 0x3e	; 62
    3414:	88 e0       	ldi	r24, 0x08	; 8
    3416:	90 e0       	ldi	r25, 0x00	; 0
    3418:	fc 01       	movw	r30, r24
    341a:	83 81       	ldd	r24, Z+3	; 0x03
    341c:	89 83       	std	Y+1, r24	; 0x01
    341e:	89 81       	ldd	r24, Y+1	; 0x01
    3420:	88 23       	and	r24, r24
    3422:	6c f4       	brge	.+26     	; 0x343e <__vector_29+0x50>
    3424:	80 91 50 46 	lds	r24, 0x4650	; 0x804650 <_ZL10g_sleeping>
    3428:	88 23       	and	r24, r24
    342a:	49 f0       	breq	.+18     	; 0x343e <__vector_29+0x50>
    342c:	10 92 4f 46 	sts	0x464F, r1	; 0x80464f <_ZL17g_go_to_sleep_now>
    3430:	10 92 50 46 	sts	0x4650, r1	; 0x804650 <_ZL10g_sleeping>
    3434:	83 e0       	ldi	r24, 0x03	; 3
    3436:	80 93 55 46 	sts	0x4655, r24	; 0x804655 <_ZL12g_awakenedBy>
    343a:	10 92 4c 46 	sts	0x464C, r1	; 0x80464c <g_waiting_for_next_event>
    343e:	88 e0       	ldi	r24, 0x08	; 8
    3440:	90 e0       	ldi	r25, 0x00	; 0
    3442:	2f ef       	ldi	r18, 0xFF	; 255
    3444:	fc 01       	movw	r30, r24
    3446:	23 83       	std	Z+3, r18	; 0x03
    3448:	00 00       	nop
    344a:	0f 90       	pop	r0
    344c:	df 91       	pop	r29
    344e:	cf 91       	pop	r28
    3450:	ff 91       	pop	r31
    3452:	ef 91       	pop	r30
    3454:	9f 91       	pop	r25
    3456:	8f 91       	pop	r24
    3458:	2f 91       	pop	r18
    345a:	0f 90       	pop	r0
    345c:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    3460:	0f 90       	pop	r0
    3462:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    3466:	0f 90       	pop	r0
    3468:	1f 90       	pop	r1
    346a:	18 95       	reti

0000346c <_Z12powerDown3V3v>:
    346c:	cf 93       	push	r28
    346e:	df 93       	push	r29
    3470:	cd b7       	in	r28, 0x3d	; 61
    3472:	de b7       	in	r29, 0x3e	; 62
    3474:	80 e0       	ldi	r24, 0x00	; 0
    3476:	0e 94 50 75 	call	0xeaa0	; 0xeaa0 <_Z18powerToTransmitterb>
    347a:	60 e0       	ldi	r22, 0x00	; 0
    347c:	87 e0       	ldi	r24, 0x07	; 7
    347e:	0e 94 4c 10 	call	0x2098	; 0x2098 <PORTA_set_pin_level>
    3482:	60 e0       	ldi	r22, 0x00	; 0
    3484:	84 e0       	ldi	r24, 0x04	; 4
    3486:	0e 94 a5 10 	call	0x214a	; 0x214a <PORTB_set_pin_level>
    348a:	00 00       	nop
    348c:	df 91       	pop	r29
    348e:	cf 91       	pop	r28
    3490:	08 95       	ret

00003492 <_Z10powerUp3V3v>:
    3492:	cf 93       	push	r28
    3494:	df 93       	push	r29
    3496:	cd b7       	in	r28, 0x3d	; 61
    3498:	de b7       	in	r29, 0x3e	; 62
    349a:	80 e0       	ldi	r24, 0x00	; 0
    349c:	0e 94 50 75 	call	0xeaa0	; 0xeaa0 <_Z18powerToTransmitterb>
    34a0:	61 e0       	ldi	r22, 0x01	; 1
    34a2:	84 e0       	ldi	r24, 0x04	; 4
    34a4:	0e 94 a5 10 	call	0x214a	; 0x214a <PORTB_set_pin_level>
    34a8:	61 e0       	ldi	r22, 0x01	; 1
    34aa:	87 e0       	ldi	r24, 0x07	; 7
    34ac:	0e 94 4c 10 	call	0x2098	; 0x2098 <PORTA_set_pin_level>
    34b0:	00 00       	nop
    34b2:	df 91       	pop	r29
    34b4:	cf 91       	pop	r28
    34b6:	08 95       	ret

000034b8 <_Z6setFanb>:
    34b8:	cf 93       	push	r28
    34ba:	df 93       	push	r29
    34bc:	1f 92       	push	r1
    34be:	cd b7       	in	r28, 0x3d	; 61
    34c0:	de b7       	in	r29, 0x3e	; 62
    34c2:	89 83       	std	Y+1, r24	; 0x01
    34c4:	89 81       	ldd	r24, Y+1	; 0x01
    34c6:	88 23       	and	r24, r24
    34c8:	29 f0       	breq	.+10     	; 0x34d4 <_Z6setFanb+0x1c>
    34ca:	61 e0       	ldi	r22, 0x01	; 1
    34cc:	81 e0       	ldi	r24, 0x01	; 1
    34ce:	0e 94 4c 10 	call	0x2098	; 0x2098 <PORTA_set_pin_level>
    34d2:	04 c0       	rjmp	.+8      	; 0x34dc <_Z6setFanb+0x24>
    34d4:	60 e0       	ldi	r22, 0x00	; 0
    34d6:	81 e0       	ldi	r24, 0x01	; 1
    34d8:	0e 94 4c 10 	call	0x2098	; 0x2098 <PORTA_set_pin_level>
    34dc:	00 00       	nop
    34de:	0f 90       	pop	r0
    34e0:	df 91       	pop	r29
    34e2:	cf 91       	pop	r28
    34e4:	08 95       	ret

000034e6 <_Z7fanIsOnv>:
    34e6:	cf 93       	push	r28
    34e8:	df 93       	push	r29
    34ea:	cd b7       	in	r28, 0x3d	; 61
    34ec:	de b7       	in	r29, 0x3e	; 62
    34ee:	81 e0       	ldi	r24, 0x01	; 1
    34f0:	0e 94 86 10 	call	0x210c	; 0x210c <PORTA_get_pin_level>
    34f4:	88 2f       	mov	r24, r24
    34f6:	90 e0       	ldi	r25, 0x00	; 0
    34f8:	21 e0       	ldi	r18, 0x01	; 1
    34fa:	18 16       	cp	r1, r24
    34fc:	19 06       	cpc	r1, r25
    34fe:	0c f0       	brlt	.+2      	; 0x3502 <_Z7fanIsOnv+0x1c>
    3500:	20 e0       	ldi	r18, 0x00	; 0
    3502:	82 2f       	mov	r24, r18
    3504:	df 91       	pop	r29
    3506:	cf 91       	pop	r28
    3508:	08 95       	ret

0000350a <main>:
    350a:	0f 93       	push	r16
    350c:	1f 93       	push	r17
    350e:	cf 93       	push	r28
    3510:	df 93       	push	r29
    3512:	cd b7       	in	r28, 0x3d	; 61
    3514:	de b7       	in	r29, 0x3e	; 62
    3516:	c6 54       	subi	r28, 0x46	; 70
    3518:	d1 09       	sbc	r29, r1
    351a:	cd bf       	out	0x3d, r28	; 61
    351c:	de bf       	out	0x3e, r29	; 62
    351e:	0e 94 1e 09 	call	0x123c	; 0x123c <atmel_start_init>
    3522:	41 e0       	ldi	r20, 0x01	; 1
    3524:	60 e0       	ldi	r22, 0x00	; 0
    3526:	8b e6       	ldi	r24, 0x6B	; 107
    3528:	96 e4       	ldi	r25, 0x46	; 70
    352a:	0e 94 0f 58 	call	0xb01e	; 0xb01e <_ZN4leds5blinkE7Blink_tb>
    352e:	0e 94 49 1a 	call	0x3492	; 0x3492 <_Z10powerUp3V3v>
    3532:	81 e0       	ldi	r24, 0x01	; 1
    3534:	0e 94 5c 1a 	call	0x34b8	; 0x34b8 <_Z6setFanb>
    3538:	86 e7       	ldi	r24, 0x76	; 118
    353a:	96 e4       	ldi	r25, 0x46	; 70
    353c:	0e 94 f2 4c 	call	0x99e4	; 0x99e4 <_ZN13EepromManager20initializeEEPROMVarsEv>
    3540:	86 e7       	ldi	r24, 0x76	; 118
    3542:	96 e4       	ldi	r25, 0x46	; 70
    3544:	0e 94 e4 47 	call	0x8fc8	; 0x8fc8 <_ZN13EepromManager11readNonVolsEv>
    3548:	81 e0       	ldi	r24, 0x01	; 1
    354a:	0e 94 dc 50 	call	0xa1b8	; 0xa1b8 <_Z10wifi_resetb>
    354e:	81 e0       	ldi	r24, 0x01	; 1
    3550:	0e 94 c5 50 	call	0xa18a	; 0xa18a <_Z10wifi_powerb>
    3554:	60 e0       	ldi	r22, 0x00	; 0
    3556:	70 e0       	ldi	r23, 0x00	; 0
    3558:	cb 01       	movw	r24, r22
    355a:	0e 94 c9 72 	call	0xe592	; 0xe592 <util_delay_ms>
    355e:	68 ee       	ldi	r22, 0xE8	; 232
    3560:	73 e0       	ldi	r23, 0x03	; 3
    3562:	80 e0       	ldi	r24, 0x00	; 0
    3564:	90 e0       	ldi	r25, 0x00	; 0
    3566:	0e 94 c9 72 	call	0xe592	; 0xe592 <util_delay_ms>
    356a:	88 23       	and	r24, r24
    356c:	49 f0       	breq	.+18     	; 0x3580 <main+0x76>
    356e:	0e 94 f3 50 	call	0xa1e6	; 0xa1e6 <_Z11wifiPresentv>
    3572:	98 2f       	mov	r25, r24
    3574:	81 e0       	ldi	r24, 0x01	; 1
    3576:	89 27       	eor	r24, r25
    3578:	88 23       	and	r24, r24
    357a:	11 f0       	breq	.+4      	; 0x3580 <main+0x76>
    357c:	81 e0       	ldi	r24, 0x01	; 1
    357e:	01 c0       	rjmp	.+2      	; 0x3582 <main+0x78>
    3580:	80 e0       	ldi	r24, 0x00	; 0
    3582:	88 23       	and	r24, r24
    3584:	09 f0       	breq	.+2      	; 0x3588 <main+0x7e>
    3586:	eb cf       	rjmp	.-42     	; 0x355e <main+0x54>
    3588:	0e 94 f3 50 	call	0xa1e6	; 0xa1e6 <_Z11wifiPresentv>
    358c:	88 23       	and	r24, r24
    358e:	21 f0       	breq	.+8      	; 0x3598 <main+0x8e>
    3590:	80 e0       	ldi	r24, 0x00	; 0
    3592:	0e 94 c5 50 	call	0xa18a	; 0xa18a <_Z10wifi_powerb>
    3596:	13 c0       	rjmp	.+38     	; 0x35be <main+0xb4>
    3598:	80 e0       	ldi	r24, 0x00	; 0
    359a:	0e 94 c5 50 	call	0xa18a	; 0xa18a <_Z10wifi_powerb>
    359e:	81 e0       	ldi	r24, 0x01	; 1
    35a0:	0e 94 dc 50 	call	0xa1b8	; 0xa1b8 <_Z10wifi_resetb>
    35a4:	10 92 ce 45 	sts	0x45CE, r1	; 0x8045ce <_ZL19g_wifi_enable_delay>
    35a8:	10 92 0b 40 	sts	0x400B, r1	; 0x80400b <_ZL23g_WiFi_shutdown_seconds>
    35ac:	80 91 d1 45 	lds	r24, 0x45D1	; 0x8045d1 <_ZL16g_hardware_error>
    35b0:	90 91 d2 45 	lds	r25, 0x45D2	; 0x8045d2 <_ZL16g_hardware_error+0x1>
    35b4:	84 60       	ori	r24, 0x04	; 4
    35b6:	80 93 d1 45 	sts	0x45D1, r24	; 0x8045d1 <_ZL16g_hardware_error>
    35ba:	90 93 d2 45 	sts	0x45D2, r25	; 0x8045d2 <_ZL16g_hardware_error+0x1>
    35be:	0e 94 2d 77 	call	0xee5a	; 0xee5a <_Z16init_transmitterv>
    35c2:	98 2f       	mov	r25, r24
    35c4:	81 e0       	ldi	r24, 0x01	; 1
    35c6:	99 23       	and	r25, r25
    35c8:	09 f4       	brne	.+2      	; 0x35cc <main+0xc2>
    35ca:	80 e0       	ldi	r24, 0x00	; 0
    35cc:	88 23       	and	r24, r24
    35ce:	81 f0       	breq	.+32     	; 0x35f0 <main+0xe6>
    35d0:	0e 94 64 76 	call	0xecc8	; 0xecc8 <_Z15txIsInitializedv>
    35d4:	98 2f       	mov	r25, r24
    35d6:	81 e0       	ldi	r24, 0x01	; 1
    35d8:	89 27       	eor	r24, r25
    35da:	88 23       	and	r24, r24
    35dc:	49 f0       	breq	.+18     	; 0x35f0 <main+0xe6>
    35de:	80 91 d1 45 	lds	r24, 0x45D1	; 0x8045d1 <_ZL16g_hardware_error>
    35e2:	90 91 d2 45 	lds	r25, 0x45D2	; 0x8045d2 <_ZL16g_hardware_error+0x1>
    35e6:	82 60       	ori	r24, 0x02	; 2
    35e8:	80 93 d1 45 	sts	0x45D1, r24	; 0x8045d1 <_ZL16g_hardware_error>
    35ec:	90 93 d2 45 	sts	0x45D2, r25	; 0x8045d2 <_ZL16g_hardware_error+0x1>
    35f0:	60 e0       	ldi	r22, 0x00	; 0
    35f2:	70 e0       	ldi	r23, 0x00	; 0
    35f4:	cb 01       	movw	r24, r22
    35f6:	0e 94 c9 72 	call	0xe592	; 0xe592 <util_delay_ms>
    35fa:	68 ee       	ldi	r22, 0xE8	; 232
    35fc:	73 e0       	ldi	r23, 0x03	; 3
    35fe:	80 e0       	ldi	r24, 0x00	; 0
    3600:	90 e0       	ldi	r25, 0x00	; 0
    3602:	0e 94 c9 72 	call	0xe592	; 0xe592 <util_delay_ms>
    3606:	88 23       	and	r24, r24
    3608:	09 f0       	breq	.+2      	; 0x360c <main+0x102>
    360a:	f7 cf       	rjmp	.-18     	; 0x35fa <main+0xf0>
    360c:	0e 94 31 2a 	call	0x5462	; 0x5462 <_Z8rtc_initv>
    3610:	89 83       	std	Y+1, r24	; 0x01
    3612:	60 e0       	ldi	r22, 0x00	; 0
    3614:	70 e0       	ldi	r23, 0x00	; 0
    3616:	cb 01       	movw	r24, r22
    3618:	0e 94 c9 72 	call	0xe592	; 0xe592 <util_delay_ms>
    361c:	68 e5       	ldi	r22, 0x58	; 88
    361e:	7b e1       	ldi	r23, 0x1B	; 27
    3620:	80 e0       	ldi	r24, 0x00	; 0
    3622:	90 e0       	ldi	r25, 0x00	; 0
    3624:	0e 94 c9 72 	call	0xe592	; 0xe592 <util_delay_ms>
    3628:	88 23       	and	r24, r24
    362a:	29 f0       	breq	.+10     	; 0x3636 <main+0x12c>
    362c:	89 81       	ldd	r24, Y+1	; 0x01
    362e:	8c 3f       	cpi	r24, 0xFC	; 252
    3630:	11 f4       	brne	.+4      	; 0x3636 <main+0x12c>
    3632:	81 e0       	ldi	r24, 0x01	; 1
    3634:	01 c0       	rjmp	.+2      	; 0x3638 <main+0x12e>
    3636:	80 e0       	ldi	r24, 0x00	; 0
    3638:	88 23       	and	r24, r24
    363a:	21 f0       	breq	.+8      	; 0x3644 <main+0x13a>
    363c:	0e 94 31 2a 	call	0x5462	; 0x5462 <_Z8rtc_initv>
    3640:	89 83       	std	Y+1, r24	; 0x01
    3642:	ec cf       	rjmp	.-40     	; 0x361c <main+0x112>
    3644:	89 81       	ldd	r24, Y+1	; 0x01
    3646:	8c 3f       	cpi	r24, 0xFC	; 252
    3648:	51 f4       	brne	.+20     	; 0x365e <main+0x154>
    364a:	80 91 d1 45 	lds	r24, 0x45D1	; 0x8045d1 <_ZL16g_hardware_error>
    364e:	90 91 d2 45 	lds	r25, 0x45D2	; 0x8045d2 <_ZL16g_hardware_error+0x1>
    3652:	81 60       	ori	r24, 0x01	; 1
    3654:	80 93 d1 45 	sts	0x45D1, r24	; 0x8045d1 <_ZL16g_hardware_error>
    3658:	90 93 d2 45 	sts	0x45D2, r25	; 0x8045d2 <_ZL16g_hardware_error+0x1>
    365c:	19 c0       	rjmp	.+50     	; 0x3690 <main+0x186>
    365e:	ce 01       	movw	r24, r28
    3660:	41 96       	adiw	r24, 0x11	; 17
    3662:	0e 94 dd 3d 	call	0x7bba	; 0x7bba <ds3231_get_epoch>
    3666:	dc 01       	movw	r26, r24
    3668:	cb 01       	movw	r24, r22
    366a:	8a 83       	std	Y+2, r24	; 0x02
    366c:	9b 83       	std	Y+3, r25	; 0x03
    366e:	ac 83       	std	Y+4, r26	; 0x04
    3670:	bd 83       	std	Y+5, r27	; 0x05
    3672:	89 89       	ldd	r24, Y+17	; 0x11
    3674:	88 23       	and	r24, r24
    3676:	41 f4       	brne	.+16     	; 0x3688 <main+0x17e>
    3678:	8a 81       	ldd	r24, Y+2	; 0x02
    367a:	9b 81       	ldd	r25, Y+3	; 0x03
    367c:	ac 81       	ldd	r26, Y+4	; 0x04
    367e:	bd 81       	ldd	r27, Y+5	; 0x05
    3680:	bc 01       	movw	r22, r24
    3682:	cd 01       	movw	r24, r26
    3684:	0e 94 91 03 	call	0x722	; 0x722 <set_system_time>
    3688:	0e 94 b5 2f 	call	0x5f6a	; 0x5f6a <_Z14eventScheduledv>
    368c:	80 93 49 46 	sts	0x4649, r24	; 0x804649 <g_event_scheduled>
    3690:	83 e0       	ldi	r24, 0x03	; 3
    3692:	80 93 ce 45 	sts	0x45CE, r24	; 0x8045ce <_ZL19g_wifi_enable_delay>
    3696:	0e 94 cc 26 	call	0x4d98	; 0x4d98 <_Z12eventEnabledv>
    369a:	80 93 c5 45 	sts	0x45C5, r24	; 0x8045c5 <_ZL13g_start_event>
    369e:	0e 94 e7 1e 	call	0x3dce	; 0x3dce <_Z17handleLinkBusMsgsv>
    36a2:	80 91 61 46 	lds	r24, 0x4661	; 0x804661 <g_handle_counted_presses>
    36a6:	90 91 62 46 	lds	r25, 0x4662	; 0x804662 <g_handle_counted_presses+0x1>
    36aa:	21 e0       	ldi	r18, 0x01	; 1
    36ac:	89 2b       	or	r24, r25
    36ae:	09 f4       	brne	.+2      	; 0x36b2 <main+0x1a8>
    36b0:	20 e0       	ldi	r18, 0x00	; 0
    36b2:	22 23       	and	r18, r18
    36b4:	f1 f0       	breq	.+60     	; 0x36f2 <main+0x1e8>
    36b6:	80 91 61 46 	lds	r24, 0x4661	; 0x804661 <g_handle_counted_presses>
    36ba:	90 91 62 46 	lds	r25, 0x4662	; 0x804662 <g_handle_counted_presses+0x1>
    36be:	21 e0       	ldi	r18, 0x01	; 1
    36c0:	01 97       	sbiw	r24, 0x01	; 1
    36c2:	09 f0       	breq	.+2      	; 0x36c6 <main+0x1bc>
    36c4:	20 e0       	ldi	r18, 0x00	; 0
    36c6:	22 23       	and	r18, r18
    36c8:	21 f0       	breq	.+8      	; 0x36d2 <main+0x1c8>
    36ca:	82 e0       	ldi	r24, 0x02	; 2
    36cc:	0e 94 cd 2a 	call	0x559a	; 0x559a <_Z13startEventNow19EventActionSource_t>
    36d0:	0c c0       	rjmp	.+24     	; 0x36ea <main+0x1e0>
    36d2:	80 91 61 46 	lds	r24, 0x4661	; 0x804661 <g_handle_counted_presses>
    36d6:	90 91 62 46 	lds	r25, 0x4662	; 0x804662 <g_handle_counted_presses+0x1>
    36da:	21 e0       	ldi	r18, 0x01	; 1
    36dc:	02 97       	sbiw	r24, 0x02	; 2
    36de:	09 f0       	breq	.+2      	; 0x36e2 <main+0x1d8>
    36e0:	20 e0       	ldi	r18, 0x00	; 0
    36e2:	22 23       	and	r18, r18
    36e4:	11 f0       	breq	.+4      	; 0x36ea <main+0x1e0>
    36e6:	0e 94 a7 2a 	call	0x554e	; 0x554e <_Z12suspendEventv>
    36ea:	10 92 61 46 	sts	0x4661, r1	; 0x804661 <g_handle_counted_presses>
    36ee:	10 92 62 46 	sts	0x4662, r1	; 0x804662 <g_handle_counted_presses+0x1>
    36f2:	80 91 5f 46 	lds	r24, 0x465F	; 0x80465f <g_switch_closed_count>
    36f6:	90 91 60 46 	lds	r25, 0x4660	; 0x804660 <g_switch_closed_count+0x1>
    36fa:	21 e0       	ldi	r18, 0x01	; 1
    36fc:	88 3e       	cpi	r24, 0xE8	; 232
    36fe:	93 40       	sbci	r25, 0x03	; 3
    3700:	08 f4       	brcc	.+2      	; 0x3704 <main+0x1fa>
    3702:	20 e0       	ldi	r18, 0x00	; 0
    3704:	22 23       	and	r18, r18
    3706:	59 f0       	breq	.+22     	; 0x371e <main+0x214>
    3708:	68 e0       	ldi	r22, 0x08	; 8
    370a:	8b e6       	ldi	r24, 0x6B	; 107
    370c:	96 e4       	ldi	r25, 0x46	; 70
    370e:	0e 94 f9 57 	call	0xaff2	; 0xaff2 <_ZN4leds5blinkE7Blink_t>
    3712:	67 e0       	ldi	r22, 0x07	; 7
    3714:	8b e6       	ldi	r24, 0x6B	; 107
    3716:	96 e4       	ldi	r25, 0x46	; 70
    3718:	0e 94 f9 57 	call	0xaff2	; 0xaff2 <_ZN4leds5blinkE7Blink_t>
    371c:	3e c1       	rjmp	.+636    	; 0x399a <main+0x490>
    371e:	8c e6       	ldi	r24, 0x6C	; 108
    3720:	96 e4       	ldi	r25, 0x46	; 70
    3722:	0e 94 7d 3a 	call	0x74fa	; 0x74fa <_ZN18CircularStringBuff6isBusyEv>
    3726:	98 2f       	mov	r25, r24
    3728:	81 e0       	ldi	r24, 0x01	; 1
    372a:	89 27       	eor	r24, r25
    372c:	88 23       	and	r24, r24
    372e:	41 f0       	breq	.+16     	; 0x3740 <main+0x236>
    3730:	8c e6       	ldi	r24, 0x6C	; 108
    3732:	96 e4       	ldi	r25, 0x46	; 70
    3734:	0e 94 3c 3a 	call	0x7478	; 0x7478 <_ZNK18CircularStringBuff5emptyEv>
    3738:	88 23       	and	r24, r24
    373a:	11 f0       	breq	.+4      	; 0x3740 <main+0x236>
    373c:	81 e0       	ldi	r24, 0x01	; 1
    373e:	01 c0       	rjmp	.+2      	; 0x3742 <main+0x238>
    3740:	80 e0       	ldi	r24, 0x00	; 0
    3742:	88 23       	and	r24, r24
    3744:	09 f4       	brne	.+2      	; 0x3748 <main+0x23e>
    3746:	29 c1       	rjmp	.+594    	; 0x399a <main+0x490>
    3748:	82 e0       	ldi	r24, 0x02	; 2
    374a:	80 93 1f 40 	sts	0x401F, r24	; 0x80401f <g_enunciator>
    374e:	80 91 d1 45 	lds	r24, 0x45D1	; 0x8045d1 <_ZL16g_hardware_error>
    3752:	90 91 d2 45 	lds	r25, 0x45D2	; 0x8045d2 <_ZL16g_hardware_error+0x1>
    3756:	21 e0       	ldi	r18, 0x01	; 1
    3758:	89 2b       	or	r24, r25
    375a:	09 f4       	brne	.+2      	; 0x375e <main+0x254>
    375c:	20 e0       	ldi	r18, 0x00	; 0
    375e:	22 23       	and	r18, r18
    3760:	31 f0       	breq	.+12     	; 0x376e <main+0x264>
    3762:	69 e0       	ldi	r22, 0x09	; 9
    3764:	8b e6       	ldi	r24, 0x6B	; 107
    3766:	96 e4       	ldi	r25, 0x46	; 70
    3768:	0e 94 f9 57 	call	0xaff2	; 0xaff2 <_ZN4leds5blinkE7Blink_t>
    376c:	16 c1       	rjmp	.+556    	; 0x399a <main+0x490>
    376e:	80 91 68 46 	lds	r24, 0x4668	; 0x804668 <_ZL17g_do_powerup_xmsn>
    3772:	88 23       	and	r24, r24
    3774:	09 f4       	brne	.+2      	; 0x3778 <main+0x26e>
    3776:	f0 c0       	rjmp	.+480    	; 0x3958 <main+0x44e>
    3778:	80 91 83 46 	lds	r24, 0x4683	; 0x804683 <g_delay_before_powerup_xmsn>
    377c:	90 91 84 46 	lds	r25, 0x4684	; 0x804684 <g_delay_before_powerup_xmsn+0x1>
    3780:	21 e0       	ldi	r18, 0x01	; 1
    3782:	89 2b       	or	r24, r25
    3784:	09 f0       	breq	.+2      	; 0x3788 <main+0x27e>
    3786:	20 e0       	ldi	r18, 0x00	; 0
    3788:	22 23       	and	r18, r18
    378a:	09 f4       	brne	.+2      	; 0x378e <main+0x284>
    378c:	06 c1       	rjmp	.+524    	; 0x399a <main+0x490>
    378e:	80 e0       	ldi	r24, 0x00	; 0
    3790:	90 e0       	ldi	r25, 0x00	; 0
    3792:	0e 94 eb 06 	call	0xdd6	; 0xdd6 <time>
    3796:	dc 01       	movw	r26, r24
    3798:	cb 01       	movw	r24, r22
    379a:	8e 83       	std	Y+6, r24	; 0x06
    379c:	9f 83       	std	Y+7, r25	; 0x07
    379e:	a8 87       	std	Y+8, r26	; 0x08
    37a0:	b9 87       	std	Y+9, r27	; 0x09
    37a2:	0e 94 32 2e 	call	0x5c64	; 0x5c64 <_Z23clockConfigurationCheckv>
    37a6:	8a 87       	std	Y+10, r24	; 0x0a
    37a8:	8a 85       	ldd	r24, Y+10	; 0x0a
    37aa:	82 30       	cpi	r24, 0x02	; 2
    37ac:	99 f0       	breq	.+38     	; 0x37d4 <main+0x2ca>
    37ae:	80 91 40 46 	lds	r24, 0x4640	; 0x804640 <g_event_start_epoch>
    37b2:	90 91 41 46 	lds	r25, 0x4641	; 0x804641 <g_event_start_epoch+0x1>
    37b6:	a0 91 42 46 	lds	r26, 0x4642	; 0x804642 <g_event_start_epoch+0x2>
    37ba:	b0 91 43 46 	lds	r27, 0x4643	; 0x804643 <g_event_start_epoch+0x3>
    37be:	2e 81       	ldd	r18, Y+6	; 0x06
    37c0:	3f 81       	ldd	r19, Y+7	; 0x07
    37c2:	48 85       	ldd	r20, Y+8	; 0x08
    37c4:	59 85       	ldd	r21, Y+9	; 0x09
    37c6:	28 17       	cp	r18, r24
    37c8:	39 07       	cpc	r19, r25
    37ca:	4a 07       	cpc	r20, r26
    37cc:	5b 07       	cpc	r21, r27
    37ce:	10 f4       	brcc	.+4      	; 0x37d4 <main+0x2ca>
    37d0:	81 e0       	ldi	r24, 0x01	; 1
    37d2:	01 c0       	rjmp	.+2      	; 0x37d6 <main+0x2cc>
    37d4:	80 e0       	ldi	r24, 0x00	; 0
    37d6:	88 23       	and	r24, r24
    37d8:	09 f4       	brne	.+2      	; 0x37dc <main+0x2d2>
    37da:	bb c0       	rjmp	.+374    	; 0x3952 <main+0x448>
    37dc:	8c e3       	ldi	r24, 0x3C	; 60
    37de:	90 e0       	ldi	r25, 0x00	; 0
    37e0:	8b 87       	std	Y+11, r24	; 0x0b
    37e2:	9c 87       	std	Y+12, r25	; 0x0c
    37e4:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <_ZL23g_WiFi_shutdown_seconds>
    37e8:	8a 8b       	std	Y+18, r24	; 0x12
    37ea:	8a 89       	ldd	r24, Y+18	; 0x12
    37ec:	28 2f       	mov	r18, r24
    37ee:	30 e0       	ldi	r19, 0x00	; 0
    37f0:	8b 85       	ldd	r24, Y+11	; 0x0b
    37f2:	9c 85       	ldd	r25, Y+12	; 0x0c
    37f4:	82 17       	cp	r24, r18
    37f6:	93 07       	cpc	r25, r19
    37f8:	24 f4       	brge	.+8      	; 0x3802 <main+0x2f8>
    37fa:	8a 89       	ldd	r24, Y+18	; 0x12
    37fc:	88 2f       	mov	r24, r24
    37fe:	90 e0       	ldi	r25, 0x00	; 0
    3800:	02 c0       	rjmp	.+4      	; 0x3806 <main+0x2fc>
    3802:	8b 85       	ldd	r24, Y+11	; 0x0b
    3804:	9c 85       	ldd	r25, Y+12	; 0x0c
    3806:	80 93 0b 40 	sts	0x400B, r24	; 0x80400b <_ZL23g_WiFi_shutdown_seconds>
    380a:	81 e0       	ldi	r24, 0x01	; 1
    380c:	0e 94 0a 30 	call	0x6014	; 0x6014 <_Z15externBatStringb>
    3810:	8c 01       	movw	r16, r24
    3812:	80 91 40 46 	lds	r24, 0x4640	; 0x804640 <g_event_start_epoch>
    3816:	90 91 41 46 	lds	r25, 0x4641	; 0x804641 <g_event_start_epoch+0x1>
    381a:	a0 91 42 46 	lds	r26, 0x4642	; 0x804642 <g_event_start_epoch+0x2>
    381e:	b0 91 43 46 	lds	r27, 0x4643	; 0x804643 <g_event_start_epoch+0x3>
    3822:	ae 01       	movw	r20, r28
    3824:	4b 5e       	subi	r20, 0xEB	; 235
    3826:	5f 4f       	sbci	r21, 0xFF	; 255
    3828:	22 e3       	ldi	r18, 0x32	; 50
    382a:	30 e0       	ldi	r19, 0x00	; 0
    382c:	bc 01       	movw	r22, r24
    382e:	cd 01       	movw	r24, r26
    3830:	0e 94 99 41 	call	0x8332	; 0x8332 <convertEpochToTimeString>
    3834:	21 2f       	mov	r18, r17
    3836:	2f 93       	push	r18
    3838:	20 2f       	mov	r18, r16
    383a:	2f 93       	push	r18
    383c:	29 2f       	mov	r18, r25
    383e:	2f 93       	push	r18
    3840:	8f 93       	push	r24
    3842:	87 e8       	ldi	r24, 0x87	; 135
    3844:	90 e4       	ldi	r25, 0x40	; 64
    3846:	89 2f       	mov	r24, r25
    3848:	8f 93       	push	r24
    384a:	87 e8       	ldi	r24, 0x87	; 135
    384c:	90 e4       	ldi	r25, 0x40	; 64
    384e:	8f 93       	push	r24
    3850:	8e e5       	ldi	r24, 0x5E	; 94
    3852:	95 e4       	ldi	r25, 0x45	; 69
    3854:	89 2f       	mov	r24, r25
    3856:	8f 93       	push	r24
    3858:	8e e5       	ldi	r24, 0x5E	; 94
    385a:	95 e4       	ldi	r25, 0x45	; 69
    385c:	8f 93       	push	r24
    385e:	0e 94 99 7f 	call	0xff32	; 0xff32 <sprintf>
    3862:	8d b7       	in	r24, 0x3d	; 61
    3864:	9e b7       	in	r25, 0x3e	; 62
    3866:	08 96       	adiw	r24, 0x08	; 8
    3868:	cd bf       	out	0x3d, r28	; 61
    386a:	de bf       	out	0x3e, r29	; 62
    386c:	42 e7       	ldi	r20, 0x72	; 114
    386e:	6e e2       	ldi	r22, 0x2E	; 46
    3870:	8e e5       	ldi	r24, 0x5E	; 94
    3872:	95 e4       	ldi	r25, 0x45	; 69
    3874:	0e 94 ae 30 	call	0x615c	; 0x615c <_Z7repCharPccc>
    3878:	40 e2       	ldi	r20, 0x20	; 32
    387a:	6d e2       	ldi	r22, 0x2D	; 45
    387c:	8e e5       	ldi	r24, 0x5E	; 94
    387e:	95 e4       	ldi	r25, 0x45	; 69
    3880:	0e 94 ae 30 	call	0x615c	; 0x615c <_Z7repCharPccc>
    3884:	42 e7       	ldi	r20, 0x72	; 114
    3886:	6a e3       	ldi	r22, 0x3A	; 58
    3888:	8e e5       	ldi	r24, 0x5E	; 94
    388a:	95 e4       	ldi	r25, 0x45	; 69
    388c:	0e 94 ae 30 	call	0x615c	; 0x615c <_Z7repCharPccc>
    3890:	8e e5       	ldi	r24, 0x5E	; 94
    3892:	95 e4       	ldi	r25, 0x45	; 69
    3894:	0e 94 54 7f 	call	0xfea8	; 0xfea8 <strlen>
    3898:	80 35       	cpi	r24, 0x50	; 80
    389a:	91 05       	cpc	r25, r1
    389c:	60 f4       	brcc	.+24     	; 0x38b6 <main+0x3ac>
    389e:	80 91 d3 45 	lds	r24, 0x45D3	; 0x8045d3 <g_messages_text>
    38a2:	88 23       	and	r24, r24
    38a4:	41 f0       	breq	.+16     	; 0x38b6 <main+0x3ac>
    38a6:	44 e1       	ldi	r20, 0x14	; 20
    38a8:	50 e0       	ldi	r21, 0x00	; 0
    38aa:	63 ed       	ldi	r22, 0xD3	; 211
    38ac:	75 e4       	ldi	r23, 0x45	; 69
    38ae:	8e e5       	ldi	r24, 0x5E	; 94
    38b0:	95 e4       	ldi	r25, 0x45	; 69
    38b2:	0e 94 5d 7f 	call	0xfeba	; 0xfeba <strncat>
    38b6:	8e e5       	ldi	r24, 0x5E	; 94
    38b8:	95 e4       	ldi	r25, 0x45	; 69
    38ba:	0e 94 54 7f 	call	0xfea8	; 0xfea8 <strlen>
    38be:	85 35       	cpi	r24, 0x55	; 85
    38c0:	91 05       	cpc	r25, r1
    38c2:	b8 f5       	brcc	.+110    	; 0x3932 <main+0x428>
    38c4:	80 91 27 46 	lds	r24, 0x4627	; 0x804627 <g_messages_text+0x54>
    38c8:	88 23       	and	r24, r24
    38ca:	99 f1       	breq	.+102    	; 0x3932 <main+0x428>
    38cc:	8e e5       	ldi	r24, 0x5E	; 94
    38ce:	95 e4       	ldi	r25, 0x45	; 69
    38d0:	9c 01       	movw	r18, r24
    38d2:	f9 01       	movw	r30, r18
    38d4:	01 90       	ld	r0, Z+
    38d6:	00 20       	and	r0, r0
    38d8:	e9 f7       	brne	.-6      	; 0x38d4 <main+0x3ca>
    38da:	cf 01       	movw	r24, r30
    38dc:	01 97       	sbiw	r24, 0x01	; 1
    38de:	82 1b       	sub	r24, r18
    38e0:	93 0b       	sbc	r25, r19
    38e2:	82 5a       	subi	r24, 0xA2	; 162
    38e4:	9a 4b       	sbci	r25, 0xBA	; 186
    38e6:	20 e2       	ldi	r18, 0x20	; 32
    38e8:	3d e3       	ldi	r19, 0x3D	; 61
    38ea:	fc 01       	movw	r30, r24
    38ec:	20 83       	st	Z, r18
    38ee:	31 83       	std	Z+1, r19	; 0x01
    38f0:	20 e2       	ldi	r18, 0x20	; 32
    38f2:	30 e0       	ldi	r19, 0x00	; 0
    38f4:	fc 01       	movw	r30, r24
    38f6:	22 83       	std	Z+2, r18	; 0x02
    38f8:	33 83       	std	Z+3, r19	; 0x03
    38fa:	44 e1       	ldi	r20, 0x14	; 20
    38fc:	50 e0       	ldi	r21, 0x00	; 0
    38fe:	67 e2       	ldi	r22, 0x27	; 39
    3900:	76 e4       	ldi	r23, 0x46	; 70
    3902:	8e e5       	ldi	r24, 0x5E	; 94
    3904:	95 e4       	ldi	r25, 0x45	; 69
    3906:	0e 94 5d 7f 	call	0xfeba	; 0xfeba <strncat>
    390a:	8e e5       	ldi	r24, 0x5E	; 94
    390c:	95 e4       	ldi	r25, 0x45	; 69
    390e:	9c 01       	movw	r18, r24
    3910:	f9 01       	movw	r30, r18
    3912:	01 90       	ld	r0, Z+
    3914:	00 20       	and	r0, r0
    3916:	e9 f7       	brne	.-6      	; 0x3912 <main+0x408>
    3918:	cf 01       	movw	r24, r30
    391a:	01 97       	sbiw	r24, 0x01	; 1
    391c:	82 1b       	sub	r24, r18
    391e:	93 0b       	sbc	r25, r19
    3920:	82 5a       	subi	r24, 0xA2	; 162
    3922:	9a 4b       	sbci	r25, 0xBA	; 186
    3924:	20 e2       	ldi	r18, 0x20	; 32
    3926:	3e e7       	ldi	r19, 0x7E	; 126
    3928:	fc 01       	movw	r30, r24
    392a:	20 83       	st	Z, r18
    392c:	31 83       	std	Z+1, r19	; 0x01
    392e:	fc 01       	movw	r30, r24
    3930:	12 82       	std	Z+2, r1	; 0x02
    3932:	8f e0       	ldi	r24, 0x0F	; 15
    3934:	0e 94 89 27 	call	0x4f12	; 0x4f12 <_Z13throttleValueh>
    3938:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL27g_enunciation_code_throttle>
    393c:	90 93 0a 40 	sts	0x400A, r25	; 0x80400a <_ZL27g_enunciation_code_throttle+0x1>
    3940:	6e e5       	ldi	r22, 0x5E	; 94
    3942:	75 e4       	ldi	r23, 0x45	; 69
    3944:	8b e6       	ldi	r24, 0x6B	; 107
    3946:	96 e4       	ldi	r25, 0x46	; 70
    3948:	0e 94 75 57 	call	0xaeea	; 0xaeea <_ZN4leds8sendCodeEPc>
    394c:	81 e0       	ldi	r24, 0x01	; 1
    394e:	80 93 1f 40 	sts	0x401F, r24	; 0x80401f <g_enunciator>
    3952:	10 92 68 46 	sts	0x4668, r1	; 0x804668 <_ZL17g_do_powerup_xmsn>
    3956:	21 c0       	rjmp	.+66     	; 0x399a <main+0x490>
    3958:	80 91 49 46 	lds	r24, 0x4649	; 0x804649 <g_event_scheduled>
    395c:	88 23       	and	r24, r24
    395e:	71 f0       	breq	.+28     	; 0x397c <main+0x472>
    3960:	88 e0       	ldi	r24, 0x08	; 8
    3962:	0e 94 89 27 	call	0x4f12	; 0x4f12 <_Z13throttleValueh>
    3966:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL27g_enunciation_code_throttle>
    396a:	90 93 0a 40 	sts	0x400A, r25	; 0x80400a <_ZL27g_enunciation_code_throttle+0x1>
    396e:	6a e9       	ldi	r22, 0x9A	; 154
    3970:	70 e4       	ldi	r23, 0x40	; 64
    3972:	8b e6       	ldi	r24, 0x6B	; 107
    3974:	96 e4       	ldi	r25, 0x46	; 70
    3976:	0e 94 75 57 	call	0xaeea	; 0xaeea <_ZN4leds8sendCodeEPc>
    397a:	0f c0       	rjmp	.+30     	; 0x399a <main+0x490>
    397c:	80 91 48 46 	lds	r24, 0x4648	; 0x804648 <g_event_enabled>
    3980:	88 23       	and	r24, r24
    3982:	31 f0       	breq	.+12     	; 0x3990 <main+0x486>
    3984:	61 e0       	ldi	r22, 0x01	; 1
    3986:	8b e6       	ldi	r24, 0x6B	; 107
    3988:	96 e4       	ldi	r25, 0x46	; 70
    398a:	0e 94 f9 57 	call	0xaff2	; 0xaff2 <_ZN4leds5blinkE7Blink_t>
    398e:	05 c0       	rjmp	.+10     	; 0x399a <main+0x490>
    3990:	63 e0       	ldi	r22, 0x03	; 3
    3992:	8b e6       	ldi	r24, 0x6B	; 107
    3994:	96 e4       	ldi	r25, 0x46	; 70
    3996:	0e 94 f9 57 	call	0xaff2	; 0xaff2 <_ZN4leds5blinkE7Blink_t>
    399a:	80 91 66 46 	lds	r24, 0x4666	; 0x804666 <g_check_temperature>
    399e:	90 91 67 46 	lds	r25, 0x4667	; 0x804667 <g_check_temperature+0x1>
    39a2:	21 e0       	ldi	r18, 0x01	; 1
    39a4:	89 2b       	or	r24, r25
    39a6:	09 f0       	breq	.+2      	; 0x39aa <main+0x4a0>
    39a8:	20 e0       	ldi	r18, 0x00	; 0
    39aa:	22 23       	and	r18, r18
    39ac:	39 f1       	breq	.+78     	; 0x39fc <main+0x4f2>
    39ae:	0e 94 26 32 	call	0x644c	; 0x644c <_Z12temperatureCv>
    39b2:	8d 87       	std	Y+13, r24	; 0x0d
    39b4:	9e 87       	std	Y+14, r25	; 0x0e
    39b6:	8d 85       	ldd	r24, Y+13	; 0x0d
    39b8:	9e 85       	ldd	r25, Y+14	; 0x0e
    39ba:	89 33       	cpi	r24, 0x39	; 57
    39bc:	9f 4f       	sbci	r25, 0xFF	; 255
    39be:	c4 f0       	brlt	.+48     	; 0x39f0 <main+0x4e6>
    39c0:	8d 85       	ldd	r24, Y+13	; 0x0d
    39c2:	9e 85       	ldd	r25, Y+14	; 0x0e
    39c4:	86 39       	cpi	r24, 0x96	; 150
    39c6:	91 05       	cpc	r25, r1
    39c8:	9c f4       	brge	.+38     	; 0x39f0 <main+0x4e6>
    39ca:	0e 94 73 1a 	call	0x34e6	; 0x34e6 <_Z7fanIsOnv>
    39ce:	88 23       	and	r24, r24
    39d0:	41 f0       	breq	.+16     	; 0x39e2 <main+0x4d8>
    39d2:	8d 85       	ldd	r24, Y+13	; 0x0d
    39d4:	9e 85       	ldd	r25, Y+14	; 0x0e
    39d6:	4f 97       	sbiw	r24, 0x1f	; 31
    39d8:	5c f4       	brge	.+22     	; 0x39f0 <main+0x4e6>
    39da:	80 e0       	ldi	r24, 0x00	; 0
    39dc:	0e 94 5c 1a 	call	0x34b8	; 0x34b8 <_Z6setFanb>
    39e0:	07 c0       	rjmp	.+14     	; 0x39f0 <main+0x4e6>
    39e2:	8d 85       	ldd	r24, Y+13	; 0x0d
    39e4:	9e 85       	ldd	r25, Y+14	; 0x0e
    39e6:	83 97       	sbiw	r24, 0x23	; 35
    39e8:	1c f0       	brlt	.+6      	; 0x39f0 <main+0x4e6>
    39ea:	81 e0       	ldi	r24, 0x01	; 1
    39ec:	0e 94 5c 1a 	call	0x34b8	; 0x34b8 <_Z6setFanb>
    39f0:	8a e0       	ldi	r24, 0x0A	; 10
    39f2:	90 e0       	ldi	r25, 0x00	; 0
    39f4:	80 93 66 46 	sts	0x4666, r24	; 0x804666 <g_check_temperature>
    39f8:	90 93 67 46 	sts	0x4667, r25	; 0x804667 <g_check_temperature+0x1>
    39fc:	80 91 65 46 	lds	r24, 0x4665	; 0x804665 <g_long_button_press>
    3a00:	88 23       	and	r24, r24
    3a02:	89 f0       	breq	.+34     	; 0x3a26 <main+0x51c>
    3a04:	10 92 65 46 	sts	0x4665, r1	; 0x804665 <g_long_button_press>
    3a08:	80 91 48 46 	lds	r24, 0x4648	; 0x804648 <g_event_enabled>
    3a0c:	88 23       	and	r24, r24
    3a0e:	19 f0       	breq	.+6      	; 0x3a16 <main+0x50c>
    3a10:	0e 94 a7 2a 	call	0x554e	; 0x554e <_Z12suspendEventv>
    3a14:	03 c0       	rjmp	.+6      	; 0x3a1c <main+0x512>
    3a16:	81 e0       	ldi	r24, 0x01	; 1
    3a18:	80 93 4b 46 	sts	0x464B, r24	; 0x80464b <g_check_for_next_event>
    3a1c:	68 e0       	ldi	r22, 0x08	; 8
    3a1e:	8b e6       	ldi	r24, 0x6B	; 107
    3a20:	96 e4       	ldi	r25, 0x46	; 70
    3a22:	0e 94 46 57 	call	0xae8c	; 0xae8c <_ZN4leds4initE7Blink_t>
    3a26:	80 91 c5 45 	lds	r24, 0x45C5	; 0x8045c5 <_ZL13g_start_event>
    3a2a:	88 23       	and	r24, r24
    3a2c:	41 f1       	breq	.+80     	; 0x3a7e <main+0x574>
    3a2e:	10 92 c5 45 	sts	0x45C5, r1	; 0x8045c5 <_ZL13g_start_event>
    3a32:	1b 8a       	std	Y+19, r1	; 0x13
    3a34:	ce 01       	movw	r24, r28
    3a36:	43 96       	adiw	r24, 0x13	; 19
    3a38:	0e 94 e3 27 	call	0x4fc6	; 0x4fc6 <_Z11launchEventP2SC>
    3a3c:	80 93 c2 45 	sts	0x45C2, r24	; 0x8045c2 <_ZL17g_last_error_code>
    3a40:	90 91 0b 40 	lds	r25, 0x400B	; 0x80400b <_ZL23g_WiFi_shutdown_seconds>
    3a44:	81 e0       	ldi	r24, 0x01	; 1
    3a46:	99 23       	and	r25, r25
    3a48:	09 f4       	brne	.+2      	; 0x3a4c <main+0x542>
    3a4a:	80 e0       	ldi	r24, 0x00	; 0
    3a4c:	88 23       	and	r24, r24
    3a4e:	b9 f0       	breq	.+46     	; 0x3a7e <main+0x574>
    3a50:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <_ZL23g_WiFi_shutdown_seconds>
    3a54:	8c 8b       	std	Y+20, r24	; 0x14
    3a56:	8a e0       	ldi	r24, 0x0A	; 10
    3a58:	90 e0       	ldi	r25, 0x00	; 0
    3a5a:	8f 87       	std	Y+15, r24	; 0x0f
    3a5c:	98 8b       	std	Y+16, r25	; 0x10
    3a5e:	8c 89       	ldd	r24, Y+20	; 0x14
    3a60:	28 2f       	mov	r18, r24
    3a62:	30 e0       	ldi	r19, 0x00	; 0
    3a64:	8f 85       	ldd	r24, Y+15	; 0x0f
    3a66:	98 89       	ldd	r25, Y+16	; 0x10
    3a68:	28 17       	cp	r18, r24
    3a6a:	39 07       	cpc	r19, r25
    3a6c:	24 f0       	brlt	.+8      	; 0x3a76 <main+0x56c>
    3a6e:	8c 89       	ldd	r24, Y+20	; 0x14
    3a70:	88 2f       	mov	r24, r24
    3a72:	90 e0       	ldi	r25, 0x00	; 0
    3a74:	02 c0       	rjmp	.+4      	; 0x3a7a <main+0x570>
    3a76:	8f 85       	ldd	r24, Y+15	; 0x0f
    3a78:	98 89       	ldd	r25, Y+16	; 0x10
    3a7a:	80 93 0b 40 	sts	0x400B, r24	; 0x80400b <_ZL23g_WiFi_shutdown_seconds>
    3a7e:	80 91 c6 45 	lds	r24, 0x45C6	; 0x8045c6 <_ZL11g_end_event>
    3a82:	88 23       	and	r24, r24
    3a84:	21 f0       	breq	.+8      	; 0x3a8e <main+0x584>
    3a86:	10 92 c6 45 	sts	0x45C6, r1	; 0x8045c6 <_ZL11g_end_event>
    3a8a:	0e 94 a7 2a 	call	0x554e	; 0x554e <_Z12suspendEventv>
    3a8e:	80 91 cd 45 	lds	r24, 0x45CD	; 0x8045cd <_ZL16g_report_seconds>
    3a92:	88 23       	and	r24, r24
    3a94:	61 f1       	breq	.+88     	; 0x3aee <main+0x5e4>
    3a96:	10 92 cd 45 	sts	0x45CD, r1	; 0x8045cd <_ZL16g_report_seconds>
    3a9a:	80 e0       	ldi	r24, 0x00	; 0
    3a9c:	90 e0       	ldi	r25, 0x00	; 0
    3a9e:	0e 94 eb 06 	call	0xdd6	; 0xdd6 <time>
    3aa2:	dc 01       	movw	r26, r24
    3aa4:	cb 01       	movw	r24, r22
    3aa6:	2b 2f       	mov	r18, r27
    3aa8:	2f 93       	push	r18
    3aaa:	2a 2f       	mov	r18, r26
    3aac:	2f 93       	push	r18
    3aae:	29 2f       	mov	r18, r25
    3ab0:	2f 93       	push	r18
    3ab2:	8f 93       	push	r24
    3ab4:	8e e9       	ldi	r24, 0x9E	; 158
    3ab6:	90 e4       	ldi	r25, 0x40	; 64
    3ab8:	89 2f       	mov	r24, r25
    3aba:	8f 93       	push	r24
    3abc:	8e e9       	ldi	r24, 0x9E	; 158
    3abe:	90 e4       	ldi	r25, 0x40	; 64
    3ac0:	8f 93       	push	r24
    3ac2:	8e e5       	ldi	r24, 0x5E	; 94
    3ac4:	95 e4       	ldi	r25, 0x45	; 69
    3ac6:	89 2f       	mov	r24, r25
    3ac8:	8f 93       	push	r24
    3aca:	8e e5       	ldi	r24, 0x5E	; 94
    3acc:	95 e4       	ldi	r25, 0x45	; 69
    3ace:	8f 93       	push	r24
    3ad0:	0e 94 99 7f 	call	0xff32	; 0xff32 <sprintf>
    3ad4:	2d b7       	in	r18, 0x3d	; 61
    3ad6:	3e b7       	in	r19, 0x3e	; 62
    3ad8:	28 5f       	subi	r18, 0xF8	; 248
    3ada:	3f 4f       	sbci	r19, 0xFF	; 255
    3adc:	cd bf       	out	0x3d, r28	; 61
    3ade:	de bf       	out	0x3e, r29	; 62
    3ae0:	4e e5       	ldi	r20, 0x5E	; 94
    3ae2:	55 e4       	ldi	r21, 0x45	; 69
    3ae4:	62 ea       	ldi	r22, 0xA2	; 162
    3ae6:	70 e4       	ldi	r23, 0x40	; 64
    3ae8:	83 e0       	ldi	r24, 0x03	; 3
    3aea:	0e 94 92 5f 	call	0xbf24	; 0xbf24 <_Z11lb_send_msg13LBMessageTypePKcPc>
    3aee:	90 91 c2 45 	lds	r25, 0x45C2	; 0x8045c2 <_ZL17g_last_error_code>
    3af2:	81 e0       	ldi	r24, 0x01	; 1
    3af4:	99 23       	and	r25, r25
    3af6:	09 f4       	brne	.+2      	; 0x3afa <main+0x5f0>
    3af8:	80 e0       	ldi	r24, 0x00	; 0
    3afa:	88 23       	and	r24, r24
    3afc:	31 f1       	breq	.+76     	; 0x3b4a <main+0x640>
    3afe:	80 91 c2 45 	lds	r24, 0x45C2	; 0x8045c2 <_ZL17g_last_error_code>
    3b02:	88 2f       	mov	r24, r24
    3b04:	90 e0       	ldi	r25, 0x00	; 0
    3b06:	29 2f       	mov	r18, r25
    3b08:	2f 93       	push	r18
    3b0a:	8f 93       	push	r24
    3b0c:	86 ea       	ldi	r24, 0xA6	; 166
    3b0e:	90 e4       	ldi	r25, 0x40	; 64
    3b10:	89 2f       	mov	r24, r25
    3b12:	8f 93       	push	r24
    3b14:	86 ea       	ldi	r24, 0xA6	; 166
    3b16:	90 e4       	ldi	r25, 0x40	; 64
    3b18:	8f 93       	push	r24
    3b1a:	8e e5       	ldi	r24, 0x5E	; 94
    3b1c:	95 e4       	ldi	r25, 0x45	; 69
    3b1e:	89 2f       	mov	r24, r25
    3b20:	8f 93       	push	r24
    3b22:	8e e5       	ldi	r24, 0x5E	; 94
    3b24:	95 e4       	ldi	r25, 0x45	; 69
    3b26:	8f 93       	push	r24
    3b28:	0e 94 99 7f 	call	0xff32	; 0xff32 <sprintf>
    3b2c:	0f 90       	pop	r0
    3b2e:	0f 90       	pop	r0
    3b30:	0f 90       	pop	r0
    3b32:	0f 90       	pop	r0
    3b34:	0f 90       	pop	r0
    3b36:	0f 90       	pop	r0
    3b38:	4e e5       	ldi	r20, 0x5E	; 94
    3b3a:	55 e4       	ldi	r21, 0x45	; 69
    3b3c:	69 ea       	ldi	r22, 0xA9	; 169
    3b3e:	70 e4       	ldi	r23, 0x40	; 64
    3b40:	83 e0       	ldi	r24, 0x03	; 3
    3b42:	0e 94 92 5f 	call	0xbf24	; 0xbf24 <_Z11lb_send_msg13LBMessageTypePKcPc>
    3b46:	10 92 c2 45 	sts	0x45C2, r1	; 0x8045c2 <_ZL17g_last_error_code>
    3b4a:	90 91 c3 45 	lds	r25, 0x45C3	; 0x8045c3 <_ZL18g_last_status_code>
    3b4e:	81 e0       	ldi	r24, 0x01	; 1
    3b50:	99 23       	and	r25, r25
    3b52:	09 f4       	brne	.+2      	; 0x3b56 <main+0x64c>
    3b54:	80 e0       	ldi	r24, 0x00	; 0
    3b56:	88 23       	and	r24, r24
    3b58:	31 f1       	breq	.+76     	; 0x3ba6 <main+0x69c>
    3b5a:	80 91 c3 45 	lds	r24, 0x45C3	; 0x8045c3 <_ZL18g_last_status_code>
    3b5e:	88 2f       	mov	r24, r24
    3b60:	90 e0       	ldi	r25, 0x00	; 0
    3b62:	29 2f       	mov	r18, r25
    3b64:	2f 93       	push	r18
    3b66:	8f 93       	push	r24
    3b68:	86 ea       	ldi	r24, 0xA6	; 166
    3b6a:	90 e4       	ldi	r25, 0x40	; 64
    3b6c:	89 2f       	mov	r24, r25
    3b6e:	8f 93       	push	r24
    3b70:	86 ea       	ldi	r24, 0xA6	; 166
    3b72:	90 e4       	ldi	r25, 0x40	; 64
    3b74:	8f 93       	push	r24
    3b76:	8e e5       	ldi	r24, 0x5E	; 94
    3b78:	95 e4       	ldi	r25, 0x45	; 69
    3b7a:	89 2f       	mov	r24, r25
    3b7c:	8f 93       	push	r24
    3b7e:	8e e5       	ldi	r24, 0x5E	; 94
    3b80:	95 e4       	ldi	r25, 0x45	; 69
    3b82:	8f 93       	push	r24
    3b84:	0e 94 99 7f 	call	0xff32	; 0xff32 <sprintf>
    3b88:	0f 90       	pop	r0
    3b8a:	0f 90       	pop	r0
    3b8c:	0f 90       	pop	r0
    3b8e:	0f 90       	pop	r0
    3b90:	0f 90       	pop	r0
    3b92:	0f 90       	pop	r0
    3b94:	4e e5       	ldi	r20, 0x5E	; 94
    3b96:	55 e4       	ldi	r21, 0x45	; 69
    3b98:	6c ea       	ldi	r22, 0xAC	; 172
    3b9a:	70 e4       	ldi	r23, 0x40	; 64
    3b9c:	83 e0       	ldi	r24, 0x03	; 3
    3b9e:	0e 94 92 5f 	call	0xbf24	; 0xbf24 <_Z11lb_send_msg13LBMessageTypePKcPc>
    3ba2:	10 92 c3 45 	sts	0x45C3, r1	; 0x8045c3 <_ZL18g_last_status_code>
    3ba6:	80 91 4b 46 	lds	r24, 0x464B	; 0x80464b <g_check_for_next_event>
    3baa:	88 23       	and	r24, r24
    3bac:	09 f4       	brne	.+2      	; 0x3bb0 <main+0x6a6>
    3bae:	41 c0       	rjmp	.+130    	; 0x3c32 <main+0x728>
    3bb0:	80 91 d0 45 	lds	r24, 0x45D0	; 0x8045d0 <_ZL12g_wifi_ready>
    3bb4:	88 23       	and	r24, r24
    3bb6:	69 f1       	breq	.+90     	; 0x3c12 <main+0x708>
    3bb8:	10 92 4b 46 	sts	0x464B, r1	; 0x80464b <g_check_for_next_event>
    3bbc:	81 e0       	ldi	r24, 0x01	; 1
    3bbe:	80 93 4c 46 	sts	0x464C, r24	; 0x80464c <g_waiting_for_next_event>
    3bc2:	80 91 c3 45 	lds	r24, 0x45C3	; 0x8045c3 <_ZL18g_last_status_code>
    3bc6:	88 2f       	mov	r24, r24
    3bc8:	90 e0       	ldi	r25, 0x00	; 0
    3bca:	29 2f       	mov	r18, r25
    3bcc:	2f 93       	push	r18
    3bce:	8f 93       	push	r24
    3bd0:	86 ea       	ldi	r24, 0xA6	; 166
    3bd2:	90 e4       	ldi	r25, 0x40	; 64
    3bd4:	89 2f       	mov	r24, r25
    3bd6:	8f 93       	push	r24
    3bd8:	86 ea       	ldi	r24, 0xA6	; 166
    3bda:	90 e4       	ldi	r25, 0x40	; 64
    3bdc:	8f 93       	push	r24
    3bde:	8e e5       	ldi	r24, 0x5E	; 94
    3be0:	95 e4       	ldi	r25, 0x45	; 69
    3be2:	89 2f       	mov	r24, r25
    3be4:	8f 93       	push	r24
    3be6:	8e e5       	ldi	r24, 0x5E	; 94
    3be8:	95 e4       	ldi	r25, 0x45	; 69
    3bea:	8f 93       	push	r24
    3bec:	0e 94 99 7f 	call	0xff32	; 0xff32 <sprintf>
    3bf0:	0f 90       	pop	r0
    3bf2:	0f 90       	pop	r0
    3bf4:	0f 90       	pop	r0
    3bf6:	0f 90       	pop	r0
    3bf8:	0f 90       	pop	r0
    3bfa:	0f 90       	pop	r0
    3bfc:	4f ea       	ldi	r20, 0xAF	; 175
    3bfe:	50 e4       	ldi	r21, 0x40	; 64
    3c00:	61 eb       	ldi	r22, 0xB1	; 177
    3c02:	70 e4       	ldi	r23, 0x40	; 64
    3c04:	83 e0       	ldi	r24, 0x03	; 3
    3c06:	0e 94 92 5f 	call	0xbf24	; 0xbf24 <_Z11lb_send_msg13LBMessageTypePKcPc>
    3c0a:	83 e0       	ldi	r24, 0x03	; 3
    3c0c:	80 93 15 40 	sts	0x4015, r24	; 0x804015 <_ZL11g_sleepType>
    3c10:	10 c0       	rjmp	.+32     	; 0x3c32 <main+0x728>
    3c12:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <_ZL23g_WiFi_shutdown_seconds>
    3c16:	88 23       	and	r24, r24
    3c18:	31 f4       	brne	.+12     	; 0x3c26 <main+0x71c>
    3c1a:	80 91 ce 45 	lds	r24, 0x45CE	; 0x8045ce <_ZL19g_wifi_enable_delay>
    3c1e:	88 23       	and	r24, r24
    3c20:	11 f4       	brne	.+4      	; 0x3c26 <main+0x71c>
    3c22:	81 e0       	ldi	r24, 0x01	; 1
    3c24:	01 c0       	rjmp	.+2      	; 0x3c28 <main+0x71e>
    3c26:	80 e0       	ldi	r24, 0x00	; 0
    3c28:	88 23       	and	r24, r24
    3c2a:	19 f0       	breq	.+6      	; 0x3c32 <main+0x728>
    3c2c:	81 e0       	ldi	r24, 0x01	; 1
    3c2e:	80 93 ce 45 	sts	0x45CE, r24	; 0x8045ce <_ZL19g_wifi_enable_delay>
    3c32:	80 91 06 40 	lds	r24, 0x4006	; 0x804006 <_ZL28g_antenna_connection_changed>
    3c36:	88 23       	and	r24, r24
    3c38:	d1 f1       	breq	.+116    	; 0x3cae <main+0x7a4>
    3c3a:	10 92 06 40 	sts	0x4006, r1	; 0x804006 <_ZL28g_antenna_connection_changed>
    3c3e:	90 91 c4 45 	lds	r25, 0x45C4	; 0x8045c4 <g_antenna_connect_state>
    3c42:	81 e0       	ldi	r24, 0x01	; 1
    3c44:	91 30       	cpi	r25, 0x01	; 1
    3c46:	09 f0       	breq	.+2      	; 0x3c4a <main+0x740>
    3c48:	80 e0       	ldi	r24, 0x00	; 0
    3c4a:	88 23       	and	r24, r24
    3c4c:	39 f0       	breq	.+14     	; 0x3c5c <main+0x752>
    3c4e:	81 e0       	ldi	r24, 0x01	; 1
    3c50:	0e 94 cc 75 	call	0xeb98	; 0xeb98 <_Z15inhibitRFOutputb>
    3c54:	87 ef       	ldi	r24, 0xF7	; 247
    3c56:	80 93 c2 45 	sts	0x45C2, r24	; 0x8045c2 <_ZL17g_last_error_code>
    3c5a:	27 c0       	rjmp	.+78     	; 0x3caa <main+0x7a0>
    3c5c:	90 91 c4 45 	lds	r25, 0x45C4	; 0x8045c4 <g_antenna_connect_state>
    3c60:	81 e0       	ldi	r24, 0x01	; 1
    3c62:	92 30       	cpi	r25, 0x02	; 2
    3c64:	09 f0       	breq	.+2      	; 0x3c68 <main+0x75e>
    3c66:	80 e0       	ldi	r24, 0x00	; 0
    3c68:	88 23       	and	r24, r24
    3c6a:	f9 f0       	breq	.+62     	; 0x3caa <main+0x7a0>
    3c6c:	80 e0       	ldi	r24, 0x00	; 0
    3c6e:	0e 94 cc 75 	call	0xeb98	; 0xeb98 <_Z15inhibitRFOutputb>
    3c72:	8b e6       	ldi	r24, 0x6B	; 107
    3c74:	96 e4       	ldi	r25, 0x46	; 70
    3c76:	0e 94 34 57 	call	0xae68	; 0xae68 <_ZN4leds4initEv>
    3c7a:	0e 94 cc 26 	call	0x4d98	; 0x4d98 <_Z12eventEnabledv>
    3c7e:	80 91 15 40 	lds	r24, 0x4015	; 0x804015 <_ZL11g_sleepType>
    3c82:	81 30       	cpi	r24, 0x01	; 1
    3c84:	31 f4       	brne	.+12     	; 0x3c92 <main+0x788>
    3c86:	80 91 55 46 	lds	r24, 0x4655	; 0x804655 <_ZL12g_awakenedBy>
    3c8a:	88 23       	and	r24, r24
    3c8c:	11 f0       	breq	.+4      	; 0x3c92 <main+0x788>
    3c8e:	81 e0       	ldi	r24, 0x01	; 1
    3c90:	01 c0       	rjmp	.+2      	; 0x3c94 <main+0x78a>
    3c92:	80 e0       	ldi	r24, 0x00	; 0
    3c94:	88 23       	and	r24, r24
    3c96:	49 f0       	breq	.+18     	; 0x3caa <main+0x7a0>
    3c98:	81 e0       	ldi	r24, 0x01	; 1
    3c9a:	80 93 68 46 	sts	0x4668, r24	; 0x804668 <_ZL17g_do_powerup_xmsn>
    3c9e:	88 ee       	ldi	r24, 0xE8	; 232
    3ca0:	93 e0       	ldi	r25, 0x03	; 3
    3ca2:	80 93 83 46 	sts	0x4683, r24	; 0x804683 <g_delay_before_powerup_xmsn>
    3ca6:	90 93 84 46 	sts	0x4684, r25	; 0x804684 <g_delay_before_powerup_xmsn+0x1>
    3caa:	0e 94 7e 2a 	call	0x54fc	; 0x54fc <_Z25setAntennaStateEnunciatorv>
    3cae:	80 91 4f 46 	lds	r24, 0x464F	; 0x80464f <_ZL17g_go_to_sleep_now>
    3cb2:	88 23       	and	r24, r24
    3cb4:	09 f4       	brne	.+2      	; 0x3cb8 <main+0x7ae>
    3cb6:	f3 cc       	rjmp	.-1562   	; 0x369e <main+0x194>
    3cb8:	60 e0       	ldi	r22, 0x00	; 0
    3cba:	8b e6       	ldi	r24, 0x6B	; 107
    3cbc:	96 e4       	ldi	r25, 0x46	; 70
    3cbe:	0e 94 f9 57 	call	0xaff2	; 0xaff2 <_ZN4leds5blinkE7Blink_t>
    3cc2:	0e 94 ce 5e 	call	0xbd9c	; 0xbd9c <_Z15linkbus_disablev>
    3cc6:	0e 94 fb 76 	call	0xedf6	; 0xedf6 <_Z20shutdown_transmitterv>
    3cca:	81 e0       	ldi	r24, 0x01	; 1
    3ccc:	0e 94 dc 50 	call	0xa1b8	; 0xa1b8 <_Z10wifi_resetb>
    3cd0:	80 e0       	ldi	r24, 0x00	; 0
    3cd2:	0e 94 c5 50 	call	0xa18a	; 0xa18a <_Z10wifi_powerb>
    3cd6:	0e 94 36 1a 	call	0x346c	; 0x346c <_Z12powerDown3V3v>
    3cda:	80 e0       	ldi	r24, 0x00	; 0
    3cdc:	0e 94 5c 1a 	call	0x34b8	; 0x34b8 <_Z6setFanb>
    3ce0:	0e 94 b5 3d 	call	0x7b6a	; 0x7b6a <system_sleep_settings>
    3ce4:	10 92 4c 46 	sts	0x464C, r1	; 0x80464c <g_waiting_for_next_event>
    3ce8:	82 e0       	ldi	r24, 0x02	; 2
    3cea:	0e 94 47 72 	call	0xe48e	; 0xe48e <SLPCTRL_set_sleep_mode>
    3cee:	81 e0       	ldi	r24, 0x01	; 1
    3cf0:	80 93 50 46 	sts	0x4650, r24	; 0x804650 <_ZL10g_sleeping>
    3cf4:	80 91 4f 46 	lds	r24, 0x464F	; 0x80464f <_ZL17g_go_to_sleep_now>
    3cf8:	88 23       	and	r24, r24
    3cfa:	01 f1       	breq	.+64     	; 0x3d3c <main+0x832>
    3cfc:	80 e5       	ldi	r24, 0x50	; 80
    3cfe:	90 e0       	ldi	r25, 0x00	; 0
    3d00:	20 e5       	ldi	r18, 0x50	; 80
    3d02:	30 e0       	ldi	r19, 0x00	; 0
    3d04:	f9 01       	movw	r30, r18
    3d06:	20 81       	ld	r18, Z
    3d08:	29 7f       	andi	r18, 0xF9	; 249
    3d0a:	22 60       	ori	r18, 0x02	; 2
    3d0c:	fc 01       	movw	r30, r24
    3d0e:	20 83       	st	Z, r18
    3d10:	f8 94       	cli
    3d12:	80 e5       	ldi	r24, 0x50	; 80
    3d14:	90 e0       	ldi	r25, 0x00	; 0
    3d16:	20 e5       	ldi	r18, 0x50	; 80
    3d18:	30 e0       	ldi	r19, 0x00	; 0
    3d1a:	f9 01       	movw	r30, r18
    3d1c:	20 81       	ld	r18, Z
    3d1e:	21 60       	ori	r18, 0x01	; 1
    3d20:	fc 01       	movw	r30, r24
    3d22:	20 83       	st	Z, r18
    3d24:	78 94       	sei
    3d26:	88 95       	sleep
    3d28:	80 e5       	ldi	r24, 0x50	; 80
    3d2a:	90 e0       	ldi	r25, 0x00	; 0
    3d2c:	20 e5       	ldi	r18, 0x50	; 80
    3d2e:	30 e0       	ldi	r19, 0x00	; 0
    3d30:	f9 01       	movw	r30, r18
    3d32:	20 81       	ld	r18, Z
    3d34:	2e 7f       	andi	r18, 0xFE	; 254
    3d36:	fc 01       	movw	r30, r24
    3d38:	20 83       	st	Z, r18
    3d3a:	dc cf       	rjmp	.-72     	; 0x3cf4 <main+0x7ea>
    3d3c:	10 92 50 46 	sts	0x4650, r1	; 0x804650 <_ZL10g_sleeping>
    3d40:	0e 94 1e 09 	call	0x123c	; 0x123c <atmel_start_init>
    3d44:	0e 94 49 1a 	call	0x3492	; 0x3492 <_Z10powerUp3V3v>
    3d48:	0e 94 2d 77 	call	0xee5a	; 0xee5a <_Z16init_transmitterv>
    3d4c:	80 91 55 46 	lds	r24, 0x4655	; 0x804655 <_ZL12g_awakenedBy>
    3d50:	83 30       	cpi	r24, 0x03	; 3
    3d52:	41 f0       	breq	.+16     	; 0x3d64 <main+0x85a>
    3d54:	80 91 55 46 	lds	r24, 0x4655	; 0x804655 <_ZL12g_awakenedBy>
    3d58:	82 30       	cpi	r24, 0x02	; 2
    3d5a:	21 f0       	breq	.+8      	; 0x3d64 <main+0x85a>
    3d5c:	80 91 55 46 	lds	r24, 0x4655	; 0x804655 <_ZL12g_awakenedBy>
    3d60:	88 23       	and	r24, r24
    3d62:	11 f4       	brne	.+4      	; 0x3d68 <main+0x85e>
    3d64:	81 e0       	ldi	r24, 0x01	; 1
    3d66:	01 c0       	rjmp	.+2      	; 0x3d6a <main+0x860>
    3d68:	80 e0       	ldi	r24, 0x00	; 0
    3d6a:	88 23       	and	r24, r24
    3d6c:	41 f0       	breq	.+16     	; 0x3d7e <main+0x874>
    3d6e:	0e 94 7e 2a 	call	0x54fc	; 0x54fc <_Z25setAntennaStateEnunciatorv>
    3d72:	0e 94 03 5f 	call	0xbe06	; 0xbe06 <_Z14linkbus_enablev>
    3d76:	82 e0       	ldi	r24, 0x02	; 2
    3d78:	80 93 ce 45 	sts	0x45CE, r24	; 0x8045ce <_ZL19g_wifi_enable_delay>
    3d7c:	20 c0       	rjmp	.+64     	; 0x3dbe <main+0x8b4>
    3d7e:	90 91 55 46 	lds	r25, 0x4655	; 0x804655 <_ZL12g_awakenedBy>
    3d82:	81 e0       	ldi	r24, 0x01	; 1
    3d84:	91 30       	cpi	r25, 0x01	; 1
    3d86:	09 f0       	breq	.+2      	; 0x3d8a <main+0x880>
    3d88:	80 e0       	ldi	r24, 0x00	; 0
    3d8a:	88 23       	and	r24, r24
    3d8c:	c1 f0       	breq	.+48     	; 0x3dbe <main+0x8b4>
    3d8e:	81 e0       	ldi	r24, 0x01	; 1
    3d90:	0e 94 50 75 	call	0xeaa0	; 0xeaa0 <_Z18powerToTransmitterb>
    3d94:	90 91 48 46 	lds	r25, 0x4648	; 0x804648 <g_event_enabled>
    3d98:	81 e0       	ldi	r24, 0x01	; 1
    3d9a:	89 27       	eor	r24, r25
    3d9c:	88 23       	and	r24, r24
    3d9e:	79 f0       	breq	.+30     	; 0x3dbe <main+0x8b4>
    3da0:	0e 94 cc 26 	call	0x4d98	; 0x4d98 <_Z12eventEnabledv>
    3da4:	80 93 c5 45 	sts	0x45C5, r24	; 0x8045c5 <_ZL13g_start_event>
    3da8:	90 91 c5 45 	lds	r25, 0x45C5	; 0x8045c5 <_ZL13g_start_event>
    3dac:	81 e0       	ldi	r24, 0x01	; 1
    3dae:	89 27       	eor	r24, r25
    3db0:	88 23       	and	r24, r24
    3db2:	29 f0       	breq	.+10     	; 0x3dbe <main+0x8b4>
    3db4:	0e 94 03 5f 	call	0xbe06	; 0xbe06 <_Z14linkbus_enablev>
    3db8:	82 e0       	ldi	r24, 0x02	; 2
    3dba:	80 93 ce 45 	sts	0x45CE, r24	; 0x8045ce <_ZL19g_wifi_enable_delay>
    3dbe:	0e 94 b5 2f 	call	0x5f6a	; 0x5f6a <_Z14eventScheduledv>
    3dc2:	80 93 49 46 	sts	0x4649, r24	; 0x804649 <g_event_scheduled>
    3dc6:	8d ee       	ldi	r24, 0xED	; 237
    3dc8:	80 93 c3 45 	sts	0x45C3, r24	; 0x8045c3 <_ZL18g_last_status_code>
    3dcc:	68 cc       	rjmp	.-1840   	; 0x369e <main+0x194>

00003dce <_Z17handleLinkBusMsgsv>:
    3dce:	0f 93       	push	r16
    3dd0:	1f 93       	push	r17
    3dd2:	cf 93       	push	r28
    3dd4:	df 93       	push	r29
    3dd6:	cd b7       	in	r28, 0x3d	; 61
    3dd8:	de b7       	in	r29, 0x3e	; 62
    3dda:	e3 97       	sbiw	r28, 0x33	; 51
    3ddc:	cd bf       	out	0x3d, r28	; 61
    3dde:	de bf       	out	0x3e, r29	; 62
    3de0:	81 e0       	ldi	r24, 0x01	; 1
    3de2:	89 83       	std	Y+1, r24	; 0x01
    3de4:	0e 94 9b 5d 	call	0xbb36	; 0xbb36 <_Z18nextFullLBRxBufferv>
    3de8:	8c 87       	std	Y+12, r24	; 0x0c
    3dea:	9d 87       	std	Y+13, r25	; 0x0d
    3dec:	21 e0       	ldi	r18, 0x01	; 1
    3dee:	8c 85       	ldd	r24, Y+12	; 0x0c
    3df0:	9d 85       	ldd	r25, Y+13	; 0x0d
    3df2:	89 2b       	or	r24, r25
    3df4:	09 f4       	brne	.+2      	; 0x3df8 <_Z17handleLinkBusMsgsv+0x2a>
    3df6:	20 e0       	ldi	r18, 0x00	; 0
    3df8:	22 23       	and	r18, r18
    3dfa:	09 f4       	brne	.+2      	; 0x3dfe <_Z17handleLinkBusMsgsv+0x30>
    3dfc:	c4 c7       	rjmp	.+3976   	; 0x4d86 <__DATA_REGION_LENGTH__+0xd86>
    3dfe:	8c 85       	ldd	r24, Y+12	; 0x0c
    3e00:	9d 85       	ldd	r25, Y+13	; 0x0d
    3e02:	fc 01       	movw	r30, r24
    3e04:	81 81       	ldd	r24, Z+1	; 0x01
    3e06:	92 81       	ldd	r25, Z+2	; 0x02
    3e08:	8e 87       	std	Y+14, r24	; 0x0e
    3e0a:	9f 87       	std	Y+15, r25	; 0x0f
    3e0c:	8e 85       	ldd	r24, Y+14	; 0x0e
    3e0e:	9f 85       	ldd	r25, Y+15	; 0x0f
    3e10:	81 3d       	cpi	r24, 0xD1	; 209
    3e12:	fe e1       	ldi	r31, 0x1E	; 30
    3e14:	9f 07       	cpc	r25, r31
    3e16:	09 f4       	brne	.+2      	; 0x3e1a <_Z17handleLinkBusMsgsv+0x4c>
    3e18:	d6 c6       	rjmp	.+3500   	; 0x4bc6 <__DATA_REGION_LENGTH__+0xbc6>
    3e1a:	82 3d       	cpi	r24, 0xD2	; 210
    3e1c:	2e e1       	ldi	r18, 0x1E	; 30
    3e1e:	92 07       	cpc	r25, r18
    3e20:	08 f0       	brcs	.+2      	; 0x3e24 <_Z17handleLinkBusMsgsv+0x56>
    3e22:	3d c0       	rjmp	.+122    	; 0x3e9e <_Z17handleLinkBusMsgsv+0xd0>
    3e24:	84 38       	cpi	r24, 0x84	; 132
    3e26:	e3 e0       	ldi	r30, 0x03	; 3
    3e28:	9e 07       	cpc	r25, r30
    3e2a:	09 f4       	brne	.+2      	; 0x3e2e <_Z17handleLinkBusMsgsv+0x60>
    3e2c:	f5 c2       	rjmp	.+1514   	; 0x4418 <__DATA_REGION_LENGTH__+0x418>
    3e2e:	85 38       	cpi	r24, 0x85	; 133
    3e30:	f3 e0       	ldi	r31, 0x03	; 3
    3e32:	9f 07       	cpc	r25, r31
    3e34:	d0 f4       	brcc	.+52     	; 0x3e6a <_Z17handleLinkBusMsgsv+0x9c>
    3e36:	85 31       	cpi	r24, 0x15	; 21
    3e38:	23 e0       	ldi	r18, 0x03	; 3
    3e3a:	92 07       	cpc	r25, r18
    3e3c:	09 f4       	brne	.+2      	; 0x3e40 <_Z17handleLinkBusMsgsv+0x72>
    3e3e:	20 c2       	rjmp	.+1088   	; 0x4280 <__DATA_REGION_LENGTH__+0x280>
    3e40:	86 31       	cpi	r24, 0x16	; 22
    3e42:	e3 e0       	ldi	r30, 0x03	; 3
    3e44:	9e 07       	cpc	r25, r30
    3e46:	30 f4       	brcc	.+12     	; 0x3e54 <_Z17handleLinkBusMsgsv+0x86>
    3e48:	84 35       	cpi	r24, 0x54	; 84
    3e4a:	91 05       	cpc	r25, r1
    3e4c:	09 f4       	brne	.+2      	; 0x3e50 <_Z17handleLinkBusMsgsv+0x82>
    3e4e:	ae c5       	rjmp	.+2908   	; 0x49ac <__DATA_REGION_LENGTH__+0x9ac>
    3e50:	0c 94 97 26 	jmp	0x4d2e	; 0x4d2e <__DATA_REGION_LENGTH__+0xd2e>
    3e54:	8e 31       	cpi	r24, 0x1E	; 30
    3e56:	f3 e0       	ldi	r31, 0x03	; 3
    3e58:	9f 07       	cpc	r25, r31
    3e5a:	09 f4       	brne	.+2      	; 0x3e5e <_Z17handleLinkBusMsgsv+0x90>
    3e5c:	6a c4       	rjmp	.+2260   	; 0x4732 <__DATA_REGION_LENGTH__+0x732>
    3e5e:	81 36       	cpi	r24, 0x61	; 97
    3e60:	93 40       	sbci	r25, 0x03	; 3
    3e62:	09 f4       	brne	.+2      	; 0x3e66 <_Z17handleLinkBusMsgsv+0x98>
    3e64:	86 c6       	rjmp	.+3340   	; 0x4b72 <__DATA_REGION_LENGTH__+0xb72>
    3e66:	0c 94 97 26 	jmp	0x4d2e	; 0x4d2e <__DATA_REGION_LENGTH__+0xd2e>
    3e6a:	86 3a       	cpi	r24, 0xA6	; 166
    3e6c:	ec e1       	ldi	r30, 0x1C	; 28
    3e6e:	9e 07       	cpc	r25, r30
    3e70:	09 f4       	brne	.+2      	; 0x3e74 <_Z17handleLinkBusMsgsv+0xa6>
    3e72:	26 c7       	rjmp	.+3660   	; 0x4cc0 <__DATA_REGION_LENGTH__+0xcc0>
    3e74:	87 3a       	cpi	r24, 0xA7	; 167
    3e76:	fc e1       	ldi	r31, 0x1C	; 28
    3e78:	9f 07       	cpc	r25, r31
    3e7a:	30 f4       	brcc	.+12     	; 0x3e88 <_Z17handleLinkBusMsgsv+0xba>
    3e7c:	8f 3a       	cpi	r24, 0xAF	; 175
    3e7e:	93 40       	sbci	r25, 0x03	; 3
    3e80:	09 f4       	brne	.+2      	; 0x3e84 <_Z17handleLinkBusMsgsv+0xb6>
    3e82:	48 c0       	rjmp	.+144    	; 0x3f14 <_Z17handleLinkBusMsgsv+0x146>
    3e84:	0c 94 97 26 	jmp	0x4d2e	; 0x4d2e <__DATA_REGION_LENGTH__+0xd2e>
    3e88:	88 31       	cpi	r24, 0x18	; 24
    3e8a:	ed e1       	ldi	r30, 0x1D	; 29
    3e8c:	9e 07       	cpc	r25, r30
    3e8e:	09 f4       	brne	.+2      	; 0x3e92 <_Z17handleLinkBusMsgsv+0xc4>
    3e90:	54 c7       	rjmp	.+3752   	; 0x4d3a <__DATA_REGION_LENGTH__+0xd3a>
    3e92:	82 38       	cpi	r24, 0x82	; 130
    3e94:	9e 41       	sbci	r25, 0x1E	; 30
    3e96:	09 f4       	brne	.+2      	; 0x3e9a <_Z17handleLinkBusMsgsv+0xcc>
    3e98:	0c c1       	rjmp	.+536    	; 0x40b2 <__DATA_REGION_LENGTH__+0xb2>
    3e9a:	0c 94 97 26 	jmp	0x4d2e	; 0x4d2e <__DATA_REGION_LENGTH__+0xd2e>
    3e9e:	8a 39       	cpi	r24, 0x9A	; 154
    3ea0:	23 e2       	ldi	r18, 0x23	; 35
    3ea2:	92 07       	cpc	r25, r18
    3ea4:	09 f4       	brne	.+2      	; 0x3ea8 <_Z17handleLinkBusMsgsv+0xda>
    3ea6:	01 c1       	rjmp	.+514    	; 0x40aa <__DATA_REGION_LENGTH__+0xaa>
    3ea8:	8b 39       	cpi	r24, 0x9B	; 155
    3eaa:	e3 e2       	ldi	r30, 0x23	; 35
    3eac:	9e 07       	cpc	r25, r30
    3eae:	d0 f4       	brcc	.+52     	; 0x3ee4 <_Z17handleLinkBusMsgsv+0x116>
    3eb0:	8e 36       	cpi	r24, 0x6E	; 110
    3eb2:	f1 e2       	ldi	r31, 0x21	; 33
    3eb4:	9f 07       	cpc	r25, r31
    3eb6:	09 f4       	brne	.+2      	; 0x3eba <_Z17handleLinkBusMsgsv+0xec>
    3eb8:	40 c7       	rjmp	.+3712   	; 0x4d3a <__DATA_REGION_LENGTH__+0xd3a>
    3eba:	8f 36       	cpi	r24, 0x6F	; 111
    3ebc:	21 e2       	ldi	r18, 0x21	; 33
    3ebe:	92 07       	cpc	r25, r18
    3ec0:	30 f4       	brcc	.+12     	; 0x3ece <_Z17handleLinkBusMsgsv+0x100>
    3ec2:	87 35       	cpi	r24, 0x57	; 87
    3ec4:	90 42       	sbci	r25, 0x20	; 32
    3ec6:	09 f4       	brne	.+2      	; 0x3eca <_Z17handleLinkBusMsgsv+0xfc>
    3ec8:	48 c0       	rjmp	.+144    	; 0x3f5a <_Z17handleLinkBusMsgsv+0x18c>
    3eca:	0c 94 97 26 	jmp	0x4d2e	; 0x4d2e <__DATA_REGION_LENGTH__+0xd2e>
    3ece:	8d 3a       	cpi	r24, 0xAD	; 173
    3ed0:	f2 e2       	ldi	r31, 0x22	; 34
    3ed2:	9f 07       	cpc	r25, r31
    3ed4:	09 f4       	brne	.+2      	; 0x3ed8 <_Z17handleLinkBusMsgsv+0x10a>
    3ed6:	5a c1       	rjmp	.+692    	; 0x418c <__DATA_REGION_LENGTH__+0x18c>
    3ed8:	81 3c       	cpi	r24, 0xC1	; 193
    3eda:	92 42       	sbci	r25, 0x22	; 34
    3edc:	09 f4       	brne	.+2      	; 0x3ee0 <_Z17handleLinkBusMsgsv+0x112>
    3ede:	cb c1       	rjmp	.+918    	; 0x4276 <__DATA_REGION_LENGTH__+0x276>
    3ee0:	0c 94 97 26 	jmp	0x4d2e	; 0x4d2e <__DATA_REGION_LENGTH__+0xd2e>
    3ee4:	80 3d       	cpi	r24, 0xD0	; 208
    3ee6:	e3 e2       	ldi	r30, 0x23	; 35
    3ee8:	9e 07       	cpc	r25, r30
    3eea:	09 f4       	brne	.+2      	; 0x3eee <_Z17handleLinkBusMsgsv+0x120>
    3eec:	90 c4       	rjmp	.+2336   	; 0x480e <__DATA_REGION_LENGTH__+0x80e>
    3eee:	81 3d       	cpi	r24, 0xD1	; 209
    3ef0:	f3 e2       	ldi	r31, 0x23	; 35
    3ef2:	9f 07       	cpc	r25, r31
    3ef4:	28 f4       	brcc	.+10     	; 0x3f00 <_Z17handleLinkBusMsgsv+0x132>
    3ef6:	8f 3c       	cpi	r24, 0xCF	; 207
    3ef8:	93 42       	sbci	r25, 0x23	; 35
    3efa:	09 f4       	brne	.+2      	; 0x3efe <_Z17handleLinkBusMsgsv+0x130>
    3efc:	f3 c6       	rjmp	.+3558   	; 0x4ce4 <__DATA_REGION_LENGTH__+0xce4>
    3efe:	17 c7       	rjmp	.+3630   	; 0x4d2e <__DATA_REGION_LENGTH__+0xd2e>
    3f00:	87 3f       	cpi	r24, 0xF7	; 247
    3f02:	e3 e2       	ldi	r30, 0x23	; 35
    3f04:	9e 07       	cpc	r25, r30
    3f06:	09 f4       	brne	.+2      	; 0x3f0a <_Z17handleLinkBusMsgsv+0x13c>
    3f08:	25 c3       	rjmp	.+1610   	; 0x4554 <__DATA_REGION_LENGTH__+0x554>
    3f0a:	8c 39       	cpi	r24, 0x9C	; 156
    3f0c:	94 42       	sbci	r25, 0x24	; 36
    3f0e:	09 f4       	brne	.+2      	; 0x3f12 <_Z17handleLinkBusMsgsv+0x144>
    3f10:	06 c7       	rjmp	.+3596   	; 0x4d1e <__DATA_REGION_LENGTH__+0xd1e>
    3f12:	0d c7       	rjmp	.+3610   	; 0x4d2e <__DATA_REGION_LENGTH__+0xd2e>
    3f14:	8c 85       	ldd	r24, Y+12	; 0x0c
    3f16:	9d 85       	ldd	r25, Y+13	; 0x0d
    3f18:	fc 01       	movw	r30, r24
    3f1a:	83 81       	ldd	r24, Z+3	; 0x03
    3f1c:	88 23       	and	r24, r24
    3f1e:	09 f4       	brne	.+2      	; 0x3f22 <_Z17handleLinkBusMsgsv+0x154>
    3f20:	0e c7       	rjmp	.+3612   	; 0x4d3e <__DATA_REGION_LENGTH__+0xd3e>
    3f22:	8c 85       	ldd	r24, Y+12	; 0x0c
    3f24:	9d 85       	ldd	r25, Y+13	; 0x0d
    3f26:	03 96       	adiw	r24, 0x03	; 3
    3f28:	0e 94 e3 7e 	call	0xfdc6	; 0xfdc6 <atoi>
    3f2c:	21 e0       	ldi	r18, 0x01	; 1
    3f2e:	89 2b       	or	r24, r25
    3f30:	09 f4       	brne	.+2      	; 0x3f34 <_Z17handleLinkBusMsgsv+0x166>
    3f32:	20 e0       	ldi	r18, 0x00	; 0
    3f34:	28 8b       	std	Y+16, r18	; 0x10
    3f36:	0e 94 a7 2a 	call	0x554e	; 0x554e <_Z12suspendEventv>
    3f3a:	0e 94 ce 5e 	call	0xbd9c	; 0xbd9c <_Z15linkbus_disablev>
    3f3e:	10 92 0b 40 	sts	0x400B, r1	; 0x80400b <_ZL23g_WiFi_shutdown_seconds>
    3f42:	10 92 15 40 	sts	0x4015, r1	; 0x804015 <_ZL11g_sleepType>
    3f46:	98 89       	ldd	r25, Y+16	; 0x10
    3f48:	81 e0       	ldi	r24, 0x01	; 1
    3f4a:	89 27       	eor	r24, r25
    3f4c:	88 23       	and	r24, r24
    3f4e:	09 f4       	brne	.+2      	; 0x3f52 <_Z17handleLinkBusMsgsv+0x184>
    3f50:	f6 c6       	rjmp	.+3564   	; 0x4d3e <__DATA_REGION_LENGTH__+0xd3e>
    3f52:	80 e0       	ldi	r24, 0x00	; 0
    3f54:	0e 94 c5 50 	call	0xa18a	; 0xa18a <_Z10wifi_powerb>
    3f58:	f2 c6       	rjmp	.+3556   	; 0x4d3e <__DATA_REGION_LENGTH__+0xd3e>
    3f5a:	10 92 48 46 	sts	0x4648, r1	; 0x804648 <g_event_enabled>
    3f5e:	81 e0       	ldi	r24, 0x01	; 1
    3f60:	80 93 82 46 	sts	0x4682, r24	; 0x804682 <g_enable_manual_transmissions>
    3f64:	8c 85       	ldd	r24, Y+12	; 0x0c
    3f66:	9d 85       	ldd	r25, Y+13	; 0x0d
    3f68:	fc 01       	movw	r30, r24
    3f6a:	83 81       	ldd	r24, Z+3	; 0x03
    3f6c:	88 23       	and	r24, r24
    3f6e:	09 f4       	brne	.+2      	; 0x3f72 <_Z17handleLinkBusMsgsv+0x1a4>
    3f70:	e8 c6       	rjmp	.+3536   	; 0x4d42 <__DATA_REGION_LENGTH__+0xd42>
    3f72:	8c 85       	ldd	r24, Y+12	; 0x0c
    3f74:	9d 85       	ldd	r25, Y+13	; 0x0d
    3f76:	03 96       	adiw	r24, 0x03	; 3
    3f78:	89 8b       	std	Y+17, r24	; 0x11
    3f7a:	9a 8b       	std	Y+18, r25	; 0x12
    3f7c:	89 89       	ldd	r24, Y+17	; 0x11
    3f7e:	9a 89       	ldd	r25, Y+18	; 0x12
    3f80:	0e 94 54 7f 	call	0xfea8	; 0xfea8 <strlen>
    3f84:	8b 8b       	std	Y+19, r24	; 0x13
    3f86:	9c 8b       	std	Y+20, r25	; 0x14
    3f88:	80 91 82 46 	lds	r24, 0x4682	; 0x804682 <g_enable_manual_transmissions>
    3f8c:	8d 8b       	std	Y+21, r24	; 0x15
    3f8e:	8b 89       	ldd	r24, Y+19	; 0x13
    3f90:	9c 89       	ldd	r25, Y+20	; 0x14
    3f92:	02 97       	sbiw	r24, 0x02	; 2
    3f94:	b9 f4       	brne	.+46     	; 0x3fc4 <_Z17handleLinkBusMsgsv+0x1f6>
    3f96:	89 89       	ldd	r24, Y+17	; 0x11
    3f98:	9a 89       	ldd	r25, Y+18	; 0x12
    3f9a:	fc 01       	movw	r30, r24
    3f9c:	80 81       	ld	r24, Z
    3f9e:	8c 35       	cpi	r24, 0x5C	; 92
    3fa0:	89 f4       	brne	.+34     	; 0x3fc4 <_Z17handleLinkBusMsgsv+0x1f6>
    3fa2:	89 89       	ldd	r24, Y+17	; 0x11
    3fa4:	9a 89       	ldd	r25, Y+18	; 0x12
    3fa6:	01 96       	adiw	r24, 0x01	; 1
    3fa8:	fc 01       	movw	r30, r24
    3faa:	80 81       	ld	r24, Z
    3fac:	82 34       	cpi	r24, 0x42	; 66
    3fae:	51 f4       	brne	.+20     	; 0x3fc4 <_Z17handleLinkBusMsgsv+0x1f6>
    3fb0:	10 92 82 46 	sts	0x4682, r1	; 0x804682 <g_enable_manual_transmissions>
    3fb4:	8c e6       	ldi	r24, 0x6C	; 108
    3fb6:	96 e4       	ldi	r25, 0x46	; 70
    3fb8:	0e 94 0a 3b 	call	0x7614	; 0x7614 <_ZN18CircularStringBuff3popEv>
    3fbc:	8d 89       	ldd	r24, Y+21	; 0x15
    3fbe:	80 93 82 46 	sts	0x4682, r24	; 0x804682 <g_enable_manual_transmissions>
    3fc2:	bf c6       	rjmp	.+3454   	; 0x4d42 <__DATA_REGION_LENGTH__+0xd42>
    3fc4:	8b 89       	ldd	r24, Y+19	; 0x13
    3fc6:	9c 89       	ldd	r25, Y+20	; 0x14
    3fc8:	02 97       	sbiw	r24, 0x02	; 2
    3fca:	ac f1       	brlt	.+106    	; 0x4036 <__DATA_REGION_LENGTH__+0x36>
    3fcc:	1a 82       	std	Y+2, r1	; 0x02
    3fce:	1b 82       	std	Y+3, r1	; 0x03
    3fd0:	10 92 82 46 	sts	0x4682, r1	; 0x804682 <g_enable_manual_transmissions>
    3fd4:	8c e6       	ldi	r24, 0x6C	; 108
    3fd6:	96 e4       	ldi	r25, 0x46	; 70
    3fd8:	0e 94 8d 3a 	call	0x751a	; 0x751a <_ZNK18CircularStringBuff4fullEv>
    3fdc:	98 2f       	mov	r25, r24
    3fde:	81 e0       	ldi	r24, 0x01	; 1
    3fe0:	89 27       	eor	r24, r25
    3fe2:	88 23       	and	r24, r24
    3fe4:	69 f0       	breq	.+26     	; 0x4000 <__DATA_REGION_LENGTH__>
    3fe6:	2a 81       	ldd	r18, Y+2	; 0x02
    3fe8:	3b 81       	ldd	r19, Y+3	; 0x03
    3fea:	8b 89       	ldd	r24, Y+19	; 0x13
    3fec:	9c 89       	ldd	r25, Y+20	; 0x14
    3fee:	28 17       	cp	r18, r24
    3ff0:	39 07       	cpc	r19, r25
    3ff2:	34 f4       	brge	.+12     	; 0x4000 <__DATA_REGION_LENGTH__>
    3ff4:	8a 81       	ldd	r24, Y+2	; 0x02
    3ff6:	9b 81       	ldd	r25, Y+3	; 0x03
    3ff8:	45 97       	sbiw	r24, 0x15	; 21
    3ffa:	14 f4       	brge	.+4      	; 0x4000 <__DATA_REGION_LENGTH__>
    3ffc:	81 e0       	ldi	r24, 0x01	; 1
    3ffe:	01 c0       	rjmp	.+2      	; 0x4002 <__DATA_REGION_LENGTH__+0x2>
    4000:	80 e0       	ldi	r24, 0x00	; 0
    4002:	88 23       	and	r24, r24
    4004:	a1 f0       	breq	.+40     	; 0x402e <__DATA_REGION_LENGTH__+0x2e>
    4006:	8a 81       	ldd	r24, Y+2	; 0x02
    4008:	9b 81       	ldd	r25, Y+3	; 0x03
    400a:	9c 01       	movw	r18, r24
    400c:	2f 5f       	subi	r18, 0xFF	; 255
    400e:	3f 4f       	sbci	r19, 0xFF	; 255
    4010:	2a 83       	std	Y+2, r18	; 0x02
    4012:	3b 83       	std	Y+3, r19	; 0x03
    4014:	2c 85       	ldd	r18, Y+12	; 0x0c
    4016:	3d 85       	ldd	r19, Y+13	; 0x0d
    4018:	82 0f       	add	r24, r18
    401a:	93 1f       	adc	r25, r19
    401c:	03 96       	adiw	r24, 0x03	; 3
    401e:	fc 01       	movw	r30, r24
    4020:	80 81       	ld	r24, Z
    4022:	68 2f       	mov	r22, r24
    4024:	8c e6       	ldi	r24, 0x6C	; 108
    4026:	96 e4       	ldi	r25, 0x46	; 70
    4028:	0e 94 9d 3a 	call	0x753a	; 0x753a <_ZN18CircularStringBuff3putEc>
    402c:	d3 cf       	rjmp	.-90     	; 0x3fd4 <_Z17handleLinkBusMsgsv+0x206>
    402e:	8d 89       	ldd	r24, Y+21	; 0x15
    4030:	80 93 82 46 	sts	0x4682, r24	; 0x804682 <g_enable_manual_transmissions>
    4034:	86 c6       	rjmp	.+3340   	; 0x4d42 <__DATA_REGION_LENGTH__+0xd42>
    4036:	8c 85       	ldd	r24, Y+12	; 0x0c
    4038:	9d 85       	ldd	r25, Y+13	; 0x0d
    403a:	fc 01       	movw	r30, r24
    403c:	83 81       	ldd	r24, Z+3	; 0x03
    403e:	8e 8b       	std	Y+22, r24	; 0x16
    4040:	8e 89       	ldd	r24, Y+22	; 0x16
    4042:	8b 35       	cpi	r24, 0x5B	; 91
    4044:	69 f4       	brne	.+26     	; 0x4060 <__DATA_REGION_LENGTH__+0x60>
    4046:	81 e0       	ldi	r24, 0x01	; 1
    4048:	0e 94 50 75 	call	0xeaa0	; 0xeaa0 <_Z18powerToTransmitterb>
    404c:	41 e0       	ldi	r20, 0x01	; 1
    404e:	67 e0       	ldi	r22, 0x07	; 7
    4050:	8b e6       	ldi	r24, 0x6B	; 107
    4052:	96 e4       	ldi	r25, 0x46	; 70
    4054:	0e 94 0f 58 	call	0xb01e	; 0xb01e <_ZN4leds5blinkE7Blink_tb>
    4058:	81 e0       	ldi	r24, 0x01	; 1
    405a:	0e 94 69 75 	call	0xead2	; 0xead2 <_Z9txKeyDownb>
    405e:	71 c6       	rjmp	.+3298   	; 0x4d42 <__DATA_REGION_LENGTH__+0xd42>
    4060:	8e 89       	ldd	r24, Y+22	; 0x16
    4062:	8d 35       	cpi	r24, 0x5D	; 93
    4064:	69 f4       	brne	.+26     	; 0x4080 <__DATA_REGION_LENGTH__+0x80>
    4066:	80 e0       	ldi	r24, 0x00	; 0
    4068:	0e 94 69 75 	call	0xead2	; 0xead2 <_Z9txKeyDownb>
    406c:	80 e0       	ldi	r24, 0x00	; 0
    406e:	0e 94 50 75 	call	0xeaa0	; 0xeaa0 <_Z18powerToTransmitterb>
    4072:	41 e0       	ldi	r20, 0x01	; 1
    4074:	61 e0       	ldi	r22, 0x01	; 1
    4076:	8b e6       	ldi	r24, 0x6B	; 107
    4078:	96 e4       	ldi	r25, 0x46	; 70
    407a:	0e 94 0f 58 	call	0xb01e	; 0xb01e <_ZN4leds5blinkE7Blink_tb>
    407e:	61 c6       	rjmp	.+3266   	; 0x4d42 <__DATA_REGION_LENGTH__+0xd42>
    4080:	8e 89       	ldd	r24, Y+22	; 0x16
    4082:	8e 35       	cpi	r24, 0x5E	; 94
    4084:	39 f4       	brne	.+14     	; 0x4094 <__DATA_REGION_LENGTH__+0x94>
    4086:	0e 94 a7 2a 	call	0x554e	; 0x554e <_Z12suspendEventv>
    408a:	10 92 0b 40 	sts	0x400B, r1	; 0x80400b <_ZL23g_WiFi_shutdown_seconds>
    408e:	10 92 15 40 	sts	0x4015, r1	; 0x804015 <_ZL11g_sleepType>
    4092:	57 c6       	rjmp	.+3246   	; 0x4d42 <__DATA_REGION_LENGTH__+0xd42>
    4094:	10 92 82 46 	sts	0x4682, r1	; 0x804682 <g_enable_manual_transmissions>
    4098:	6e 89       	ldd	r22, Y+22	; 0x16
    409a:	8c e6       	ldi	r24, 0x6C	; 108
    409c:	96 e4       	ldi	r25, 0x46	; 70
    409e:	0e 94 9d 3a 	call	0x753a	; 0x753a <_ZN18CircularStringBuff3putEc>
    40a2:	8d 89       	ldd	r24, Y+21	; 0x15
    40a4:	80 93 82 46 	sts	0x4682, r24	; 0x804682 <g_enable_manual_transmissions>
    40a8:	4c c6       	rjmp	.+3224   	; 0x4d42 <__DATA_REGION_LENGTH__+0xd42>
    40aa:	82 e0       	ldi	r24, 0x02	; 2
    40ac:	0e 94 7e 27 	call	0x4efc	; 0x4efc <_Z8wdt_init7WDReset>
    40b0:	ff cf       	rjmp	.-2      	; 0x40b0 <__DATA_REGION_LENGTH__+0xb0>
    40b2:	8c 85       	ldd	r24, Y+12	; 0x0c
    40b4:	9d 85       	ldd	r25, Y+13	; 0x0d
    40b6:	fc 01       	movw	r30, r24
    40b8:	83 81       	ldd	r24, Z+3	; 0x03
    40ba:	8f 8b       	std	Y+23, r24	; 0x17
    40bc:	81 e0       	ldi	r24, 0x01	; 1
    40be:	80 93 0c 40 	sts	0x400C, r24	; 0x80400c <_ZL13g_wifi_active>
    40c2:	8f 89       	ldd	r24, Y+23	; 0x17
    40c4:	8a 35       	cpi	r24, 0x5A	; 90
    40c6:	21 f4       	brne	.+8      	; 0x40d0 <__DATA_REGION_LENGTH__+0xd0>
    40c8:	88 e7       	ldi	r24, 0x78	; 120
    40ca:	80 93 0b 40 	sts	0x400B, r24	; 0x80400b <_ZL23g_WiFi_shutdown_seconds>
    40ce:	3b c6       	rjmp	.+3190   	; 0x4d46 <__DATA_REGION_LENGTH__+0xd46>
    40d0:	8f 89       	ldd	r24, Y+23	; 0x17
    40d2:	80 33       	cpi	r24, 0x30	; 48
    40d4:	c9 f5       	brne	.+114    	; 0x4148 <__DATA_REGION_LENGTH__+0x148>
    40d6:	81 e0       	ldi	r24, 0x01	; 1
    40d8:	80 93 d0 45 	sts	0x45D0, r24	; 0x8045d0 <_ZL12g_wifi_ready>
    40dc:	80 e0       	ldi	r24, 0x00	; 0
    40de:	90 e0       	ldi	r25, 0x00	; 0
    40e0:	0e 94 eb 06 	call	0xdd6	; 0xdd6 <time>
    40e4:	dc 01       	movw	r26, r24
    40e6:	cb 01       	movw	r24, r22
    40e8:	2b 2f       	mov	r18, r27
    40ea:	2f 93       	push	r18
    40ec:	2a 2f       	mov	r18, r26
    40ee:	2f 93       	push	r18
    40f0:	29 2f       	mov	r18, r25
    40f2:	2f 93       	push	r18
    40f4:	8f 93       	push	r24
    40f6:	8e e9       	ldi	r24, 0x9E	; 158
    40f8:	90 e4       	ldi	r25, 0x40	; 64
    40fa:	89 2f       	mov	r24, r25
    40fc:	8f 93       	push	r24
    40fe:	8e e9       	ldi	r24, 0x9E	; 158
    4100:	90 e4       	ldi	r25, 0x40	; 64
    4102:	8f 93       	push	r24
    4104:	8e e5       	ldi	r24, 0x5E	; 94
    4106:	95 e4       	ldi	r25, 0x45	; 69
    4108:	89 2f       	mov	r24, r25
    410a:	8f 93       	push	r24
    410c:	8e e5       	ldi	r24, 0x5E	; 94
    410e:	95 e4       	ldi	r25, 0x45	; 69
    4110:	8f 93       	push	r24
    4112:	0e 94 99 7f 	call	0xff32	; 0xff32 <sprintf>
    4116:	8d b7       	in	r24, 0x3d	; 61
    4118:	9e b7       	in	r25, 0x3e	; 62
    411a:	08 96       	adiw	r24, 0x08	; 8
    411c:	cd bf       	out	0x3d, r28	; 61
    411e:	de bf       	out	0x3e, r29	; 62
    4120:	4e e5       	ldi	r20, 0x5E	; 94
    4122:	55 e4       	ldi	r21, 0x45	; 69
    4124:	62 ea       	ldi	r22, 0xA2	; 162
    4126:	70 e4       	ldi	r23, 0x40	; 64
    4128:	83 e0       	ldi	r24, 0x03	; 3
    412a:	0e 94 92 5f 	call	0xbf24	; 0xbf24 <_Z11lb_send_msg13LBMessageTypePKcPc>
    412e:	80 91 4c 46 	lds	r24, 0x464C	; 0x80464c <g_waiting_for_next_event>
    4132:	88 23       	and	r24, r24
    4134:	09 f4       	brne	.+2      	; 0x4138 <__DATA_REGION_LENGTH__+0x138>
    4136:	07 c6       	rjmp	.+3086   	; 0x4d46 <__DATA_REGION_LENGTH__+0xd46>
    4138:	4f ea       	ldi	r20, 0xAF	; 175
    413a:	50 e4       	ldi	r21, 0x40	; 64
    413c:	61 eb       	ldi	r22, 0xB1	; 177
    413e:	70 e4       	ldi	r23, 0x40	; 64
    4140:	83 e0       	ldi	r24, 0x03	; 3
    4142:	0e 94 92 5f 	call	0xbf24	; 0xbf24 <_Z11lb_send_msg13LBMessageTypePKcPc>
    4146:	ff c5       	rjmp	.+3070   	; 0x4d46 <__DATA_REGION_LENGTH__+0xd46>
    4148:	8f 89       	ldd	r24, Y+23	; 0x17
    414a:	82 33       	cpi	r24, 0x32	; 50
    414c:	71 f4       	brne	.+28     	; 0x416a <__DATA_REGION_LENGTH__+0x16a>
    414e:	81 e0       	ldi	r24, 0x01	; 1
    4150:	80 93 ce 45 	sts	0x45CE, r24	; 0x8045ce <_ZL19g_wifi_enable_delay>
    4154:	90 91 48 46 	lds	r25, 0x4648	; 0x804648 <g_event_enabled>
    4158:	81 e0       	ldi	r24, 0x01	; 1
    415a:	89 27       	eor	r24, r25
    415c:	88 23       	and	r24, r24
    415e:	09 f4       	brne	.+2      	; 0x4162 <__DATA_REGION_LENGTH__+0x162>
    4160:	f2 c5       	rjmp	.+3044   	; 0x4d46 <__DATA_REGION_LENGTH__+0xd46>
    4162:	81 e0       	ldi	r24, 0x01	; 1
    4164:	80 93 c5 45 	sts	0x45C5, r24	; 0x8045c5 <_ZL13g_start_event>
    4168:	ee c5       	rjmp	.+3036   	; 0x4d46 <__DATA_REGION_LENGTH__+0xd46>
    416a:	8f 89       	ldd	r24, Y+23	; 0x17
    416c:	83 33       	cpi	r24, 0x33	; 51
    416e:	09 f0       	breq	.+2      	; 0x4172 <__DATA_REGION_LENGTH__+0x172>
    4170:	ea c5       	rjmp	.+3028   	; 0x4d46 <__DATA_REGION_LENGTH__+0xd46>
    4172:	10 92 ce 45 	sts	0x45CE, r1	; 0x8045ce <_ZL19g_wifi_enable_delay>
    4176:	81 e0       	ldi	r24, 0x01	; 1
    4178:	80 93 0b 40 	sts	0x400B, r24	; 0x80400b <_ZL23g_WiFi_shutdown_seconds>
    417c:	10 92 4c 46 	sts	0x464C, r1	; 0x80464c <g_waiting_for_next_event>
    4180:	10 92 0c 40 	sts	0x400C, r1	; 0x80400c <_ZL13g_wifi_active>
    4184:	81 e0       	ldi	r24, 0x01	; 1
    4186:	80 93 cf 45 	sts	0x45CF, r24	; 0x8045cf <_ZL20g_shutting_down_wifi>
    418a:	dd c5       	rjmp	.+3002   	; 0x4d46 <__DATA_REGION_LENGTH__+0xd46>
    418c:	8c 85       	ldd	r24, Y+12	; 0x0c
    418e:	9d 85       	ldd	r25, Y+13	; 0x0d
    4190:	fc 01       	movw	r30, r24
    4192:	83 81       	ldd	r24, Z+3	; 0x03
    4194:	88 23       	and	r24, r24
    4196:	09 f4       	brne	.+2      	; 0x419a <__DATA_REGION_LENGTH__+0x19a>
    4198:	d8 c5       	rjmp	.+2992   	; 0x4d4a <__DATA_REGION_LENGTH__+0xd4a>
    419a:	8c 85       	ldd	r24, Y+12	; 0x0c
    419c:	9d 85       	ldd	r25, Y+13	; 0x0d
    419e:	fc 01       	movw	r30, r24
    41a0:	83 81       	ldd	r24, Z+3	; 0x03
    41a2:	8d 34       	cpi	r24, 0x4D	; 77
    41a4:	81 f4       	brne	.+32     	; 0x41c6 <__DATA_REGION_LENGTH__+0x1c6>
    41a6:	8c 85       	ldd	r24, Y+12	; 0x0c
    41a8:	9d 85       	ldd	r25, Y+13	; 0x0d
    41aa:	fc 01       	movw	r30, r24
    41ac:	80 8d       	ldd	r24, Z+24	; 0x18
    41ae:	88 23       	and	r24, r24
    41b0:	51 f0       	breq	.+20     	; 0x41c6 <__DATA_REGION_LENGTH__+0x1c6>
    41b2:	8c 85       	ldd	r24, Y+12	; 0x0c
    41b4:	9d 85       	ldd	r25, Y+13	; 0x0d
    41b6:	48 96       	adiw	r24, 0x18	; 24
    41b8:	0e 94 e3 7e 	call	0xfdc6	; 0xfdc6 <atoi>
    41bc:	80 93 93 46 	sts	0x4693, r24	; 0x804693 <_ZZ17handleLinkBusMsgsvE6pwr_mW>
    41c0:	90 93 94 46 	sts	0x4694, r25	; 0x804694 <_ZZ17handleLinkBusMsgsvE6pwr_mW+0x1>
    41c4:	09 c0       	rjmp	.+18     	; 0x41d8 <__DATA_REGION_LENGTH__+0x1d8>
    41c6:	8c 85       	ldd	r24, Y+12	; 0x0c
    41c8:	9d 85       	ldd	r25, Y+13	; 0x0d
    41ca:	03 96       	adiw	r24, 0x03	; 3
    41cc:	0e 94 e3 7e 	call	0xfdc6	; 0xfdc6 <atoi>
    41d0:	80 93 93 46 	sts	0x4693, r24	; 0x804693 <_ZZ17handleLinkBusMsgsvE6pwr_mW>
    41d4:	90 93 94 46 	sts	0x4694, r25	; 0x804694 <_ZZ17handleLinkBusMsgsvE6pwr_mW+0x1>
    41d8:	0e 94 59 76 	call	0xecb2	; 0xecb2 <_Z12txGetPowerMwv>
    41dc:	9c 01       	movw	r18, r24
    41de:	80 91 93 46 	lds	r24, 0x4693	; 0x804693 <_ZZ17handleLinkBusMsgsvE6pwr_mW>
    41e2:	90 91 94 46 	lds	r25, 0x4694	; 0x804694 <_ZZ17handleLinkBusMsgsvE6pwr_mW+0x1>
    41e6:	41 e0       	ldi	r20, 0x01	; 1
    41e8:	28 17       	cp	r18, r24
    41ea:	39 07       	cpc	r19, r25
    41ec:	09 f4       	brne	.+2      	; 0x41f0 <__DATA_REGION_LENGTH__+0x1f0>
    41ee:	40 e0       	ldi	r20, 0x00	; 0
    41f0:	44 23       	and	r20, r20
    41f2:	b9 f1       	breq	.+110    	; 0x4262 <__DATA_REGION_LENGTH__+0x262>
    41f4:	60 e0       	ldi	r22, 0x00	; 0
    41f6:	70 e0       	ldi	r23, 0x00	; 0
    41f8:	83 e9       	ldi	r24, 0x93	; 147
    41fa:	96 e4       	ldi	r25, 0x46	; 70
    41fc:	0e 94 6d 76 	call	0xecda	; 0xecda <_Z15txSetParametersPjPb>
    4200:	88 8f       	std	Y+24, r24	; 0x18
    4202:	88 8d       	ldd	r24, Y+24	; 0x18
    4204:	88 23       	and	r24, r24
    4206:	21 f0       	breq	.+8      	; 0x4210 <__DATA_REGION_LENGTH__+0x210>
    4208:	88 8d       	ldd	r24, Y+24	; 0x18
    420a:	80 93 c2 45 	sts	0x45C2, r24	; 0x8045c2 <_ZL17g_last_error_code>
    420e:	05 c0       	rjmp	.+10     	; 0x421a <__DATA_REGION_LENGTH__+0x21a>
    4210:	80 91 95 46 	lds	r24, 0x4695	; 0x804695 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4214:	8f 5f       	subi	r24, 0xFF	; 255
    4216:	80 93 95 46 	sts	0x4695, r24	; 0x804695 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    421a:	80 91 93 46 	lds	r24, 0x4693	; 0x804693 <_ZZ17handleLinkBusMsgsvE6pwr_mW>
    421e:	90 91 94 46 	lds	r25, 0x4694	; 0x804694 <_ZZ17handleLinkBusMsgsvE6pwr_mW+0x1>
    4222:	29 2f       	mov	r18, r25
    4224:	2f 93       	push	r18
    4226:	8f 93       	push	r24
    4228:	82 e3       	ldi	r24, 0x32	; 50
    422a:	92 e4       	ldi	r25, 0x42	; 66
    422c:	89 2f       	mov	r24, r25
    422e:	8f 93       	push	r24
    4230:	82 e3       	ldi	r24, 0x32	; 50
    4232:	92 e4       	ldi	r25, 0x42	; 66
    4234:	8f 93       	push	r24
    4236:	8e e5       	ldi	r24, 0x5E	; 94
    4238:	95 e4       	ldi	r25, 0x45	; 69
    423a:	89 2f       	mov	r24, r25
    423c:	8f 93       	push	r24
    423e:	8e e5       	ldi	r24, 0x5E	; 94
    4240:	95 e4       	ldi	r25, 0x45	; 69
    4242:	8f 93       	push	r24
    4244:	0e 94 99 7f 	call	0xff32	; 0xff32 <sprintf>
    4248:	0f 90       	pop	r0
    424a:	0f 90       	pop	r0
    424c:	0f 90       	pop	r0
    424e:	0f 90       	pop	r0
    4250:	0f 90       	pop	r0
    4252:	0f 90       	pop	r0
    4254:	4e e5       	ldi	r20, 0x5E	; 94
    4256:	55 e4       	ldi	r21, 0x45	; 69
    4258:	67 e3       	ldi	r22, 0x37	; 55
    425a:	72 e4       	ldi	r23, 0x42	; 66
    425c:	83 e0       	ldi	r24, 0x03	; 3
    425e:	0e 94 92 5f 	call	0xbf24	; 0xbf24 <_Z11lb_send_msg13LBMessageTypePKcPc>
    4262:	80 91 69 46 	lds	r24, 0x4669	; 0x804669 <g_Event_Configuration_Check>
    4266:	90 91 6a 46 	lds	r25, 0x466A	; 0x80466a <g_Event_Configuration_Check+0x1>
    426a:	80 64       	ori	r24, 0x40	; 64
    426c:	80 93 69 46 	sts	0x4669, r24	; 0x804669 <g_Event_Configuration_Check>
    4270:	90 93 6a 46 	sts	0x466A, r25	; 0x80466a <g_Event_Configuration_Check+0x1>
    4274:	6a c5       	rjmp	.+2772   	; 0x4d4a <__DATA_REGION_LENGTH__+0xd4a>
    4276:	86 e7       	ldi	r24, 0x76	; 118
    4278:	96 e4       	ldi	r25, 0x46	; 70
    427a:	0e 94 07 47 	call	0x8e0e	; 0x8e0e <_ZN13EepromManager13saveAllEEPROMEv>
    427e:	76 c5       	rjmp	.+2796   	; 0x4d6c <__DATA_REGION_LENGTH__+0xd6c>
    4280:	8c 85       	ldd	r24, Y+12	; 0x0c
    4282:	9d 85       	ldd	r25, Y+13	; 0x0d
    4284:	fc 01       	movw	r30, r24
    4286:	83 81       	ldd	r24, Z+3	; 0x03
    4288:	89 8f       	std	Y+25, r24	; 0x19
    428a:	89 8d       	ldd	r24, Y+25	; 0x19
    428c:	81 33       	cpi	r24, 0x31	; 49
    428e:	21 f0       	breq	.+8      	; 0x4298 <__DATA_REGION_LENGTH__+0x298>
    4290:	89 8d       	ldd	r24, Y+25	; 0x19
    4292:	82 33       	cpi	r24, 0x32	; 50
    4294:	09 f0       	breq	.+2      	; 0x4298 <__DATA_REGION_LENGTH__+0x298>
    4296:	ae c0       	rjmp	.+348    	; 0x43f4 <__DATA_REGION_LENGTH__+0x3f4>
    4298:	90 91 c4 45 	lds	r25, 0x45C4	; 0x8045c4 <g_antenna_connect_state>
    429c:	81 e0       	ldi	r24, 0x01	; 1
    429e:	92 30       	cpi	r25, 0x02	; 2
    42a0:	09 f4       	brne	.+2      	; 0x42a4 <__DATA_REGION_LENGTH__+0x2a4>
    42a2:	80 e0       	ldi	r24, 0x00	; 0
    42a4:	88 23       	and	r24, r24
    42a6:	19 f0       	breq	.+6      	; 0x42ae <__DATA_REGION_LENGTH__+0x2ae>
    42a8:	87 ef       	ldi	r24, 0xF7	; 247
    42aa:	80 93 c2 45 	sts	0x45C2, r24	; 0x8045c2 <_ZL17g_last_error_code>
    42ae:	89 8d       	ldd	r24, Y+25	; 0x19
    42b0:	81 33       	cpi	r24, 0x31	; 49
    42b2:	09 f0       	breq	.+2      	; 0x42b6 <__DATA_REGION_LENGTH__+0x2b6>
    42b4:	63 c0       	rjmp	.+198    	; 0x437c <__DATA_REGION_LENGTH__+0x37c>
    42b6:	80 91 c4 45 	lds	r24, 0x45C4	; 0x8045c4 <g_antenna_connect_state>
    42ba:	82 30       	cpi	r24, 0x02	; 2
    42bc:	21 f0       	breq	.+8      	; 0x42c6 <__DATA_REGION_LENGTH__+0x2c6>
    42be:	80 91 64 40 	lds	r24, 0x4064	; 0x804064 <g_tx_power_is_zero>
    42c2:	88 23       	and	r24, r24
    42c4:	11 f0       	breq	.+4      	; 0x42ca <__DATA_REGION_LENGTH__+0x2ca>
    42c6:	81 e0       	ldi	r24, 0x01	; 1
    42c8:	01 c0       	rjmp	.+2      	; 0x42cc <__DATA_REGION_LENGTH__+0x2cc>
    42ca:	80 e0       	ldi	r24, 0x00	; 0
    42cc:	88 23       	and	r24, r24
    42ce:	09 f4       	brne	.+2      	; 0x42d2 <__DATA_REGION_LENGTH__+0x2d2>
    42d0:	a1 c0       	rjmp	.+322    	; 0x4414 <__DATA_REGION_LENGTH__+0x414>
    42d2:	10 92 48 46 	sts	0x4648, r1	; 0x804648 <g_event_enabled>
    42d6:	81 e0       	ldi	r24, 0x01	; 1
    42d8:	0e 94 50 75 	call	0xeaa0	; 0xeaa0 <_Z18powerToTransmitterb>
    42dc:	81 e0       	ldi	r24, 0x01	; 1
    42de:	8e a7       	std	Y+46, r24	; 0x2e
    42e0:	ce 01       	movw	r24, r28
    42e2:	8e 96       	adiw	r24, 0x2e	; 46
    42e4:	40 e0       	ldi	r20, 0x00	; 0
    42e6:	50 e0       	ldi	r21, 0x00	; 0
    42e8:	bc 01       	movw	r22, r24
    42ea:	83 ed       	ldi	r24, 0xD3	; 211
    42ec:	95 e4       	ldi	r25, 0x45	; 69
    42ee:	0e 94 1b 60 	call	0xc036	; 0xc036 <_Z9makeMorsePcPbS0_>
    42f2:	80 91 0e 40 	lds	r24, 0x400E	; 0x80400e <g_pattern_codespeed>
    42f6:	0e 94 89 27 	call	0x4f12	; 0x4f12 <_Z13throttleValueh>
    42fa:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    42fe:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    4302:	81 e0       	ldi	r24, 0x01	; 1
    4304:	90 e0       	ldi	r25, 0x00	; 0
    4306:	a0 e0       	ldi	r26, 0x00	; 0
    4308:	b0 e0       	ldi	r27, 0x00	; 0
    430a:	80 93 40 46 	sts	0x4640, r24	; 0x804640 <g_event_start_epoch>
    430e:	90 93 41 46 	sts	0x4641, r25	; 0x804641 <g_event_start_epoch+0x1>
    4312:	a0 93 42 46 	sts	0x4642, r26	; 0x804642 <g_event_start_epoch+0x2>
    4316:	b0 93 43 46 	sts	0x4643, r27	; 0x804643 <g_event_start_epoch+0x3>
    431a:	8f ef       	ldi	r24, 0xFF	; 255
    431c:	9f ef       	ldi	r25, 0xFF	; 255
    431e:	dc 01       	movw	r26, r24
    4320:	80 93 44 46 	sts	0x4644, r24	; 0x804644 <g_event_finish_epoch>
    4324:	90 93 45 46 	sts	0x4645, r25	; 0x804645 <g_event_finish_epoch+0x1>
    4328:	a0 93 46 46 	sts	0x4646, r26	; 0x804646 <g_event_finish_epoch+0x2>
    432c:	b0 93 47 46 	sts	0x4647, r27	; 0x804647 <g_event_finish_epoch+0x3>
    4330:	8f e0       	ldi	r24, 0x0F	; 15
    4332:	97 e2       	ldi	r25, 0x27	; 39
    4334:	80 93 0f 40 	sts	0x400F, r24	; 0x80400f <g_on_air_seconds>
    4338:	90 93 10 40 	sts	0x4010, r25	; 0x804010 <g_on_air_seconds+0x1>
    433c:	10 92 11 40 	sts	0x4011, r1	; 0x804011 <g_off_air_seconds>
    4340:	10 92 12 40 	sts	0x4012, r1	; 0x804012 <g_off_air_seconds+0x1>
    4344:	8f e0       	ldi	r24, 0x0F	; 15
    4346:	97 e2       	ldi	r25, 0x27	; 39
    4348:	a0 e0       	ldi	r26, 0x00	; 0
    434a:	b0 e0       	ldi	r27, 0x00	; 0
    434c:	80 93 c7 45 	sts	0x45C7, r24	; 0x8045c7 <_ZL12g_on_the_air>
    4350:	90 93 c8 45 	sts	0x45C8, r25	; 0x8045c8 <_ZL12g_on_the_air+0x1>
    4354:	a0 93 c9 45 	sts	0x45C9, r26	; 0x8045c9 <_ZL12g_on_the_air+0x2>
    4358:	b0 93 ca 45 	sts	0x45CA, r27	; 0x8045ca <_ZL12g_on_the_air+0x3>
    435c:	8f ef       	ldi	r24, 0xFF	; 255
    435e:	9f ef       	ldi	r25, 0xFF	; 255
    4360:	80 93 cb 45 	sts	0x45CB, r24	; 0x8045cb <_ZL26g_sendID_seconds_countdown>
    4364:	90 93 cc 45 	sts	0x45CC, r25	; 0x8045cc <_ZL26g_sendID_seconds_countdown+0x1>
    4368:	81 e0       	ldi	r24, 0x01	; 1
    436a:	80 93 4a 46 	sts	0x464A, r24	; 0x80464a <g_event_commenced>
    436e:	81 e0       	ldi	r24, 0x01	; 1
    4370:	80 93 48 46 	sts	0x4648, r24	; 0x804648 <g_event_enabled>
    4374:	8d ef       	ldi	r24, 0xFD	; 253
    4376:	80 93 c3 45 	sts	0x45C3, r24	; 0x8045c3 <_ZL18g_last_status_code>
    437a:	4c c0       	rjmp	.+152    	; 0x4414 <__DATA_REGION_LENGTH__+0x414>
    437c:	89 8d       	ldd	r24, Y+25	; 0x19
    437e:	82 33       	cpi	r24, 0x32	; 50
    4380:	09 f0       	breq	.+2      	; 0x4384 <__DATA_REGION_LENGTH__+0x384>
    4382:	48 c0       	rjmp	.+144    	; 0x4414 <__DATA_REGION_LENGTH__+0x414>
    4384:	0e 94 b5 2f 	call	0x5f6a	; 0x5f6a <_Z14eventScheduledv>
    4388:	80 93 49 46 	sts	0x4649, r24	; 0x804649 <g_event_scheduled>
    438c:	80 91 69 46 	lds	r24, 0x4669	; 0x804669 <g_Event_Configuration_Check>
    4390:	90 91 6a 46 	lds	r25, 0x466A	; 0x80466a <g_Event_Configuration_Check+0x1>
    4394:	8f 3f       	cpi	r24, 0xFF	; 255
    4396:	9f 40       	sbci	r25, 0x0F	; 15
    4398:	21 f0       	breq	.+8      	; 0x43a2 <__DATA_REGION_LENGTH__+0x3a2>
    439a:	8d ec       	ldi	r24, 0xCD	; 205
    439c:	80 93 c2 45 	sts	0x45C2, r24	; 0x8045c2 <_ZL17g_last_error_code>
    43a0:	39 c0       	rjmp	.+114    	; 0x4414 <__DATA_REGION_LENGTH__+0x414>
    43a2:	80 91 95 46 	lds	r24, 0x4695	; 0x804695 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    43a6:	88 23       	and	r24, r24
    43a8:	51 f0       	breq	.+20     	; 0x43be <__DATA_REGION_LENGTH__+0x3be>
    43aa:	80 91 48 46 	lds	r24, 0x4648	; 0x804648 <g_event_enabled>
    43ae:	88 23       	and	r24, r24
    43b0:	11 f0       	breq	.+4      	; 0x43b6 <__DATA_REGION_LENGTH__+0x3b6>
    43b2:	0e 94 a7 2a 	call	0x554e	; 0x554e <_Z12suspendEventv>
    43b6:	86 e7       	ldi	r24, 0x76	; 118
    43b8:	96 e4       	ldi	r25, 0x46	; 70
    43ba:	0e 94 07 47 	call	0x8e0e	; 0x8e0e <_ZN13EepromManager13saveAllEEPROMEv>
    43be:	90 91 48 46 	lds	r25, 0x4648	; 0x804648 <g_event_enabled>
    43c2:	81 e0       	ldi	r24, 0x01	; 1
    43c4:	89 27       	eor	r24, r25
    43c6:	88 23       	and	r24, r24
    43c8:	59 f0       	breq	.+22     	; 0x43e0 <__DATA_REGION_LENGTH__+0x3e0>
    43ca:	1f a6       	std	Y+47, r1	; 0x2f
    43cc:	ce 01       	movw	r24, r28
    43ce:	8f 96       	adiw	r24, 0x2f	; 47
    43d0:	0e 94 e3 27 	call	0x4fc6	; 0x4fc6 <_Z11launchEventP2SC>
    43d4:	80 93 c2 45 	sts	0x45C2, r24	; 0x8045c2 <_ZL17g_last_error_code>
    43d8:	82 e0       	ldi	r24, 0x02	; 2
    43da:	80 93 ce 45 	sts	0x45CE, r24	; 0x8045ce <_ZL19g_wifi_enable_delay>
    43de:	03 c0       	rjmp	.+6      	; 0x43e6 <__DATA_REGION_LENGTH__+0x3e6>
    43e0:	8c e3       	ldi	r24, 0x3C	; 60
    43e2:	80 93 0b 40 	sts	0x400B, r24	; 0x80400b <_ZL23g_WiFi_shutdown_seconds>
    43e6:	10 92 95 46 	sts	0x4695, r1	; 0x804695 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    43ea:	10 92 69 46 	sts	0x4669, r1	; 0x804669 <g_Event_Configuration_Check>
    43ee:	10 92 6a 46 	sts	0x466A, r1	; 0x80466a <g_Event_Configuration_Check+0x1>
    43f2:	10 c0       	rjmp	.+32     	; 0x4414 <__DATA_REGION_LENGTH__+0x414>
    43f4:	89 8d       	ldd	r24, Y+25	; 0x19
    43f6:	80 33       	cpi	r24, 0x30	; 48
    43f8:	09 f0       	breq	.+2      	; 0x43fc <__DATA_REGION_LENGTH__+0x3fc>
    43fa:	a9 c4       	rjmp	.+2386   	; 0x4d4e <__DATA_REGION_LENGTH__+0xd4e>
    43fc:	10 92 95 46 	sts	0x4695, r1	; 0x804695 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4400:	10 92 69 46 	sts	0x4669, r1	; 0x804669 <g_Event_Configuration_Check>
    4404:	10 92 6a 46 	sts	0x466A, r1	; 0x80466a <g_Event_Configuration_Check+0x1>
    4408:	8c ee       	ldi	r24, 0xEC	; 236
    440a:	80 93 c3 45 	sts	0x45C3, r24	; 0x8045c3 <_ZL18g_last_status_code>
    440e:	10 92 82 46 	sts	0x4682, r1	; 0x804682 <g_enable_manual_transmissions>
    4412:	9d c4       	rjmp	.+2362   	; 0x4d4e <__DATA_REGION_LENGTH__+0xd4e>
    4414:	00 00       	nop
    4416:	9b c4       	rjmp	.+2358   	; 0x4d4e <__DATA_REGION_LENGTH__+0xd4e>
    4418:	1c 82       	std	Y+4, r1	; 0x04
    441a:	1d 82       	std	Y+5, r1	; 0x05
    441c:	1e 82       	std	Y+6, r1	; 0x06
    441e:	1f 82       	std	Y+7, r1	; 0x07
    4420:	8c 85       	ldd	r24, Y+12	; 0x0c
    4422:	9d 85       	ldd	r25, Y+13	; 0x0d
    4424:	fc 01       	movw	r30, r24
    4426:	83 81       	ldd	r24, Z+3	; 0x03
    4428:	83 35       	cpi	r24, 0x53	; 83
    442a:	09 f0       	breq	.+2      	; 0x442e <__DATA_REGION_LENGTH__+0x42e>
    442c:	4b c0       	rjmp	.+150    	; 0x44c4 <__DATA_REGION_LENGTH__+0x4c4>
    442e:	8c 85       	ldd	r24, Y+12	; 0x0c
    4430:	9d 85       	ldd	r25, Y+13	; 0x0d
    4432:	fc 01       	movw	r30, r24
    4434:	80 8d       	ldd	r24, Z+24	; 0x18
    4436:	88 23       	and	r24, r24
    4438:	59 f0       	breq	.+22     	; 0x4450 <__DATA_REGION_LENGTH__+0x450>
    443a:	8c 85       	ldd	r24, Y+12	; 0x0c
    443c:	9d 85       	ldd	r25, Y+13	; 0x0d
    443e:	48 96       	adiw	r24, 0x18	; 24
    4440:	0e 94 01 7f 	call	0xfe02	; 0xfe02 <atol>
    4444:	dc 01       	movw	r26, r24
    4446:	cb 01       	movw	r24, r22
    4448:	8c 83       	std	Y+4, r24	; 0x04
    444a:	9d 83       	std	Y+5, r25	; 0x05
    444c:	ae 83       	std	Y+6, r26	; 0x06
    444e:	bf 83       	std	Y+7, r27	; 0x07
    4450:	80 91 40 46 	lds	r24, 0x4640	; 0x804640 <g_event_start_epoch>
    4454:	90 91 41 46 	lds	r25, 0x4641	; 0x804641 <g_event_start_epoch+0x1>
    4458:	a0 91 42 46 	lds	r26, 0x4642	; 0x804642 <g_event_start_epoch+0x2>
    445c:	b0 91 43 46 	lds	r27, 0x4643	; 0x804643 <g_event_start_epoch+0x3>
    4460:	61 e0       	ldi	r22, 0x01	; 1
    4462:	2c 81       	ldd	r18, Y+4	; 0x04
    4464:	3d 81       	ldd	r19, Y+5	; 0x05
    4466:	4e 81       	ldd	r20, Y+6	; 0x06
    4468:	5f 81       	ldd	r21, Y+7	; 0x07
    446a:	28 17       	cp	r18, r24
    446c:	39 07       	cpc	r19, r25
    446e:	4a 07       	cpc	r20, r26
    4470:	5b 07       	cpc	r21, r27
    4472:	09 f4       	brne	.+2      	; 0x4476 <__DATA_REGION_LENGTH__+0x476>
    4474:	60 e0       	ldi	r22, 0x00	; 0
    4476:	66 23       	and	r22, r22
    4478:	d9 f0       	breq	.+54     	; 0x44b0 <__DATA_REGION_LENGTH__+0x4b0>
    447a:	8c 81       	ldd	r24, Y+4	; 0x04
    447c:	9d 81       	ldd	r25, Y+5	; 0x05
    447e:	ae 81       	ldd	r26, Y+6	; 0x06
    4480:	bf 81       	ldd	r27, Y+7	; 0x07
    4482:	80 93 40 46 	sts	0x4640, r24	; 0x804640 <g_event_start_epoch>
    4486:	90 93 41 46 	sts	0x4641, r25	; 0x804641 <g_event_start_epoch+0x1>
    448a:	a0 93 42 46 	sts	0x4642, r26	; 0x804642 <g_event_start_epoch+0x2>
    448e:	b0 93 43 46 	sts	0x4643, r27	; 0x804643 <g_event_start_epoch+0x3>
    4492:	80 e0       	ldi	r24, 0x00	; 0
    4494:	90 e0       	ldi	r25, 0x00	; 0
    4496:	0e 94 dd 3d 	call	0x7bba	; 0x7bba <ds3231_get_epoch>
    449a:	dc 01       	movw	r26, r24
    449c:	cb 01       	movw	r24, r22
    449e:	bc 01       	movw	r22, r24
    44a0:	cd 01       	movw	r24, r26
    44a2:	0e 94 91 03 	call	0x722	; 0x722 <set_system_time>
    44a6:	80 91 95 46 	lds	r24, 0x4695	; 0x804695 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    44aa:	8f 5f       	subi	r24, 0xFF	; 255
    44ac:	80 93 95 46 	sts	0x4695, r24	; 0x804695 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    44b0:	80 91 69 46 	lds	r24, 0x4669	; 0x804669 <g_Event_Configuration_Check>
    44b4:	90 91 6a 46 	lds	r25, 0x466A	; 0x80466a <g_Event_Configuration_Check+0x1>
    44b8:	98 60       	ori	r25, 0x08	; 8
    44ba:	80 93 69 46 	sts	0x4669, r24	; 0x804669 <g_Event_Configuration_Check>
    44be:	90 93 6a 46 	sts	0x466A, r25	; 0x80466a <g_Event_Configuration_Check+0x1>
    44c2:	47 c4       	rjmp	.+2190   	; 0x4d52 <__DATA_REGION_LENGTH__+0xd52>
    44c4:	8c 85       	ldd	r24, Y+12	; 0x0c
    44c6:	9d 85       	ldd	r25, Y+13	; 0x0d
    44c8:	fc 01       	movw	r30, r24
    44ca:	83 81       	ldd	r24, Z+3	; 0x03
    44cc:	86 34       	cpi	r24, 0x46	; 70
    44ce:	09 f0       	breq	.+2      	; 0x44d2 <__DATA_REGION_LENGTH__+0x4d2>
    44d0:	40 c4       	rjmp	.+2176   	; 0x4d52 <__DATA_REGION_LENGTH__+0xd52>
    44d2:	8c 85       	ldd	r24, Y+12	; 0x0c
    44d4:	9d 85       	ldd	r25, Y+13	; 0x0d
    44d6:	fc 01       	movw	r30, r24
    44d8:	80 8d       	ldd	r24, Z+24	; 0x18
    44da:	88 23       	and	r24, r24
    44dc:	59 f0       	breq	.+22     	; 0x44f4 <__DATA_REGION_LENGTH__+0x4f4>
    44de:	8c 85       	ldd	r24, Y+12	; 0x0c
    44e0:	9d 85       	ldd	r25, Y+13	; 0x0d
    44e2:	48 96       	adiw	r24, 0x18	; 24
    44e4:	0e 94 01 7f 	call	0xfe02	; 0xfe02 <atol>
    44e8:	dc 01       	movw	r26, r24
    44ea:	cb 01       	movw	r24, r22
    44ec:	8c 83       	std	Y+4, r24	; 0x04
    44ee:	9d 83       	std	Y+5, r25	; 0x05
    44f0:	ae 83       	std	Y+6, r26	; 0x06
    44f2:	bf 83       	std	Y+7, r27	; 0x07
    44f4:	80 91 44 46 	lds	r24, 0x4644	; 0x804644 <g_event_finish_epoch>
    44f8:	90 91 45 46 	lds	r25, 0x4645	; 0x804645 <g_event_finish_epoch+0x1>
    44fc:	a0 91 46 46 	lds	r26, 0x4646	; 0x804646 <g_event_finish_epoch+0x2>
    4500:	b0 91 47 46 	lds	r27, 0x4647	; 0x804647 <g_event_finish_epoch+0x3>
    4504:	61 e0       	ldi	r22, 0x01	; 1
    4506:	2c 81       	ldd	r18, Y+4	; 0x04
    4508:	3d 81       	ldd	r19, Y+5	; 0x05
    450a:	4e 81       	ldd	r20, Y+6	; 0x06
    450c:	5f 81       	ldd	r21, Y+7	; 0x07
    450e:	28 17       	cp	r18, r24
    4510:	39 07       	cpc	r19, r25
    4512:	4a 07       	cpc	r20, r26
    4514:	5b 07       	cpc	r21, r27
    4516:	09 f4       	brne	.+2      	; 0x451a <__DATA_REGION_LENGTH__+0x51a>
    4518:	60 e0       	ldi	r22, 0x00	; 0
    451a:	66 23       	and	r22, r22
    451c:	89 f0       	breq	.+34     	; 0x4540 <__DATA_REGION_LENGTH__+0x540>
    451e:	8c 81       	ldd	r24, Y+4	; 0x04
    4520:	9d 81       	ldd	r25, Y+5	; 0x05
    4522:	ae 81       	ldd	r26, Y+6	; 0x06
    4524:	bf 81       	ldd	r27, Y+7	; 0x07
    4526:	80 93 44 46 	sts	0x4644, r24	; 0x804644 <g_event_finish_epoch>
    452a:	90 93 45 46 	sts	0x4645, r25	; 0x804645 <g_event_finish_epoch+0x1>
    452e:	a0 93 46 46 	sts	0x4646, r26	; 0x804646 <g_event_finish_epoch+0x2>
    4532:	b0 93 47 46 	sts	0x4647, r27	; 0x804647 <g_event_finish_epoch+0x3>
    4536:	80 91 95 46 	lds	r24, 0x4695	; 0x804695 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    453a:	8f 5f       	subi	r24, 0xFF	; 255
    453c:	80 93 95 46 	sts	0x4695, r24	; 0x804695 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4540:	80 91 69 46 	lds	r24, 0x4669	; 0x804669 <g_Event_Configuration_Check>
    4544:	90 91 6a 46 	lds	r25, 0x466A	; 0x80466a <g_Event_Configuration_Check+0x1>
    4548:	81 60       	ori	r24, 0x01	; 1
    454a:	80 93 69 46 	sts	0x4669, r24	; 0x804669 <g_Event_Configuration_Check>
    454e:	90 93 6a 46 	sts	0x466A, r25	; 0x80466a <g_Event_Configuration_Check+0x1>
    4552:	ff c3       	rjmp	.+2046   	; 0x4d52 <__DATA_REGION_LENGTH__+0xd52>
    4554:	81 e0       	ldi	r24, 0x01	; 1
    4556:	80 93 0c 40 	sts	0x400C, r24	; 0x80400c <_ZL13g_wifi_active>
    455a:	8c 85       	ldd	r24, Y+12	; 0x0c
    455c:	9d 85       	ldd	r25, Y+13	; 0x0d
    455e:	fc 01       	movw	r30, r24
    4560:	80 81       	ld	r24, Z
    4562:	81 30       	cpi	r24, 0x01	; 1
    4564:	09 f0       	breq	.+2      	; 0x4568 <__DATA_REGION_LENGTH__+0x568>
    4566:	4a c0       	rjmp	.+148    	; 0x45fc <__DATA_REGION_LENGTH__+0x5fc>
    4568:	8c 85       	ldd	r24, Y+12	; 0x0c
    456a:	9d 85       	ldd	r25, Y+13	; 0x0d
    456c:	fc 01       	movw	r30, r24
    456e:	83 81       	ldd	r24, Z+3	; 0x03
    4570:	88 23       	and	r24, r24
    4572:	d1 f0       	breq	.+52     	; 0x45a8 <__DATA_REGION_LENGTH__+0x5a8>
    4574:	8c 85       	ldd	r24, Y+12	; 0x0c
    4576:	9d 85       	ldd	r25, Y+13	; 0x0d
    4578:	03 96       	adiw	r24, 0x03	; 3
    457a:	44 e1       	ldi	r20, 0x14	; 20
    457c:	50 e0       	ldi	r21, 0x00	; 0
    457e:	bc 01       	movw	r22, r24
    4580:	8e e5       	ldi	r24, 0x5E	; 94
    4582:	95 e4       	ldi	r25, 0x45	; 69
    4584:	0e 94 6d 7f 	call	0xfeda	; 0xfeda <strncpy>
    4588:	60 e0       	ldi	r22, 0x00	; 0
    458a:	8e e5       	ldi	r24, 0x5E	; 94
    458c:	95 e4       	ldi	r25, 0x45	; 69
    458e:	0e 94 b7 3f 	call	0x7f6e	; 0x7f6e <ds3231_set_date_time>
    4592:	80 e0       	ldi	r24, 0x00	; 0
    4594:	90 e0       	ldi	r25, 0x00	; 0
    4596:	0e 94 dd 3d 	call	0x7bba	; 0x7bba <ds3231_get_epoch>
    459a:	dc 01       	movw	r26, r24
    459c:	cb 01       	movw	r24, r22
    459e:	bc 01       	movw	r22, r24
    45a0:	cd 01       	movw	r24, r26
    45a2:	0e 94 91 03 	call	0x722	; 0x722 <set_system_time>
    45a6:	d7 c3       	rjmp	.+1966   	; 0x4d56 <__DATA_REGION_LENGTH__+0xd56>
    45a8:	80 e0       	ldi	r24, 0x00	; 0
    45aa:	90 e0       	ldi	r25, 0x00	; 0
    45ac:	0e 94 eb 06 	call	0xdd6	; 0xdd6 <time>
    45b0:	dc 01       	movw	r26, r24
    45b2:	cb 01       	movw	r24, r22
    45b4:	2b 2f       	mov	r18, r27
    45b6:	2f 93       	push	r18
    45b8:	2a 2f       	mov	r18, r26
    45ba:	2f 93       	push	r18
    45bc:	29 2f       	mov	r18, r25
    45be:	2f 93       	push	r18
    45c0:	8f 93       	push	r24
    45c2:	8e e9       	ldi	r24, 0x9E	; 158
    45c4:	90 e4       	ldi	r25, 0x40	; 64
    45c6:	89 2f       	mov	r24, r25
    45c8:	8f 93       	push	r24
    45ca:	8e e9       	ldi	r24, 0x9E	; 158
    45cc:	90 e4       	ldi	r25, 0x40	; 64
    45ce:	8f 93       	push	r24
    45d0:	8e e5       	ldi	r24, 0x5E	; 94
    45d2:	95 e4       	ldi	r25, 0x45	; 69
    45d4:	89 2f       	mov	r24, r25
    45d6:	8f 93       	push	r24
    45d8:	8e e5       	ldi	r24, 0x5E	; 94
    45da:	95 e4       	ldi	r25, 0x45	; 69
    45dc:	8f 93       	push	r24
    45de:	0e 94 99 7f 	call	0xff32	; 0xff32 <sprintf>
    45e2:	8d b7       	in	r24, 0x3d	; 61
    45e4:	9e b7       	in	r25, 0x3e	; 62
    45e6:	08 96       	adiw	r24, 0x08	; 8
    45e8:	cd bf       	out	0x3d, r28	; 61
    45ea:	de bf       	out	0x3e, r29	; 62
    45ec:	4e e5       	ldi	r20, 0x5E	; 94
    45ee:	55 e4       	ldi	r21, 0x45	; 69
    45f0:	62 ea       	ldi	r22, 0xA2	; 162
    45f2:	70 e4       	ldi	r23, 0x40	; 64
    45f4:	83 e0       	ldi	r24, 0x03	; 3
    45f6:	0e 94 92 5f 	call	0xbf24	; 0xbf24 <_Z11lb_send_msg13LBMessageTypePKcPc>
    45fa:	ad c3       	rjmp	.+1882   	; 0x4d56 <__DATA_REGION_LENGTH__+0xd56>
    45fc:	8c 85       	ldd	r24, Y+12	; 0x0c
    45fe:	9d 85       	ldd	r25, Y+13	; 0x0d
    4600:	fc 01       	movw	r30, r24
    4602:	80 81       	ld	r24, Z
    4604:	82 30       	cpi	r24, 0x02	; 2
    4606:	09 f0       	breq	.+2      	; 0x460a <__DATA_REGION_LENGTH__+0x60a>
    4608:	a6 c3       	rjmp	.+1868   	; 0x4d56 <__DATA_REGION_LENGTH__+0xd56>
    460a:	8c 85       	ldd	r24, Y+12	; 0x0c
    460c:	9d 85       	ldd	r25, Y+13	; 0x0d
    460e:	fc 01       	movw	r30, r24
    4610:	83 81       	ldd	r24, Z+3	; 0x03
    4612:	88 35       	cpi	r24, 0x58	; 88
    4614:	c9 f5       	brne	.+114    	; 0x4688 <__DATA_REGION_LENGTH__+0x688>
    4616:	1a 8e       	std	Y+26, r1	; 0x1a
    4618:	8c 85       	ldd	r24, Y+12	; 0x0c
    461a:	9d 85       	ldd	r25, Y+13	; 0x0d
    461c:	fc 01       	movw	r30, r24
    461e:	80 8d       	ldd	r24, Z+24	; 0x18
    4620:	88 23       	and	r24, r24
    4622:	51 f0       	breq	.+20     	; 0x4638 <__DATA_REGION_LENGTH__+0x638>
    4624:	8c 85       	ldd	r24, Y+12	; 0x0c
    4626:	9d 85       	ldd	r25, Y+13	; 0x0d
    4628:	48 96       	adiw	r24, 0x18	; 24
    462a:	0e 94 e3 7e 	call	0xfdc6	; 0xfdc6 <atoi>
    462e:	8a 8f       	std	Y+26, r24	; 0x1a
    4630:	8a 8d       	ldd	r24, Y+26	; 0x1a
    4632:	0e 94 0f 41 	call	0x821e	; 0x821e <ds3231_set_aging>
    4636:	8f c3       	rjmp	.+1822   	; 0x4d56 <__DATA_REGION_LENGTH__+0xd56>
    4638:	0e 94 3e 41 	call	0x827c	; 0x827c <ds3231_get_aging>
    463c:	8a 8f       	std	Y+26, r24	; 0x1a
    463e:	8a 8d       	ldd	r24, Y+26	; 0x1a
    4640:	08 2e       	mov	r0, r24
    4642:	00 0c       	add	r0, r0
    4644:	99 0b       	sbc	r25, r25
    4646:	29 2f       	mov	r18, r25
    4648:	2f 93       	push	r18
    464a:	8f 93       	push	r24
    464c:	8b e3       	ldi	r24, 0x3B	; 59
    464e:	92 e4       	ldi	r25, 0x42	; 66
    4650:	89 2f       	mov	r24, r25
    4652:	8f 93       	push	r24
    4654:	8b e3       	ldi	r24, 0x3B	; 59
    4656:	92 e4       	ldi	r25, 0x42	; 66
    4658:	8f 93       	push	r24
    465a:	8e e5       	ldi	r24, 0x5E	; 94
    465c:	95 e4       	ldi	r25, 0x45	; 69
    465e:	89 2f       	mov	r24, r25
    4660:	8f 93       	push	r24
    4662:	8e e5       	ldi	r24, 0x5E	; 94
    4664:	95 e4       	ldi	r25, 0x45	; 69
    4666:	8f 93       	push	r24
    4668:	0e 94 99 7f 	call	0xff32	; 0xff32 <sprintf>
    466c:	0f 90       	pop	r0
    466e:	0f 90       	pop	r0
    4670:	0f 90       	pop	r0
    4672:	0f 90       	pop	r0
    4674:	0f 90       	pop	r0
    4676:	0f 90       	pop	r0
    4678:	4e e5       	ldi	r20, 0x5E	; 94
    467a:	55 e4       	ldi	r21, 0x45	; 69
    467c:	62 ea       	ldi	r22, 0xA2	; 162
    467e:	70 e4       	ldi	r23, 0x40	; 64
    4680:	83 e0       	ldi	r24, 0x03	; 3
    4682:	0e 94 92 5f 	call	0xbf24	; 0xbf24 <_Z11lb_send_msg13LBMessageTypePKcPc>
    4686:	67 c3       	rjmp	.+1742   	; 0x4d56 <__DATA_REGION_LENGTH__+0xd56>
    4688:	80 e0       	ldi	r24, 0x00	; 0
    468a:	90 e0       	ldi	r25, 0x00	; 0
    468c:	0e 94 dd 3d 	call	0x7bba	; 0x7bba <ds3231_get_epoch>
    4690:	dc 01       	movw	r26, r24
    4692:	cb 01       	movw	r24, r22
    4694:	8b 8f       	std	Y+27, r24	; 0x1b
    4696:	9c 8f       	std	Y+28, r25	; 0x1c
    4698:	ad 8f       	std	Y+29, r26	; 0x1d
    469a:	be 8f       	std	Y+30, r27	; 0x1e
    469c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    469e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    46a0:	ad 8d       	ldd	r26, Y+29	; 0x1d
    46a2:	be 8d       	ldd	r27, Y+30	; 0x1e
    46a4:	bc 01       	movw	r22, r24
    46a6:	cd 01       	movw	r24, r26
    46a8:	0e 94 91 03 	call	0x722	; 0x722 <set_system_time>
    46ac:	80 91 96 46 	lds	r24, 0x4696	; 0x804696 <_ZZ17handleLinkBusMsgsvE8lastTime>
    46b0:	90 91 97 46 	lds	r25, 0x4697	; 0x804697 <_ZZ17handleLinkBusMsgsvE8lastTime+0x1>
    46b4:	a0 91 98 46 	lds	r26, 0x4698	; 0x804698 <_ZZ17handleLinkBusMsgsvE8lastTime+0x2>
    46b8:	b0 91 99 46 	lds	r27, 0x4699	; 0x804699 <_ZZ17handleLinkBusMsgsvE8lastTime+0x3>
    46bc:	2b 8d       	ldd	r18, Y+27	; 0x1b
    46be:	3c 8d       	ldd	r19, Y+28	; 0x1c
    46c0:	4d 8d       	ldd	r20, Y+29	; 0x1d
    46c2:	5e 8d       	ldd	r21, Y+30	; 0x1e
    46c4:	28 17       	cp	r18, r24
    46c6:	39 07       	cpc	r19, r25
    46c8:	4a 07       	cpc	r20, r26
    46ca:	5b 07       	cpc	r21, r27
    46cc:	09 f4       	brne	.+2      	; 0x46d0 <__DATA_REGION_LENGTH__+0x6d0>
    46ce:	43 c3       	rjmp	.+1670   	; 0x4d56 <__DATA_REGION_LENGTH__+0xd56>
    46d0:	8e 8d       	ldd	r24, Y+30	; 0x1e
    46d2:	8f 93       	push	r24
    46d4:	8d 8d       	ldd	r24, Y+29	; 0x1d
    46d6:	8f 93       	push	r24
    46d8:	8c 8d       	ldd	r24, Y+28	; 0x1c
    46da:	8f 93       	push	r24
    46dc:	8b 8d       	ldd	r24, Y+27	; 0x1b
    46de:	8f 93       	push	r24
    46e0:	8e e9       	ldi	r24, 0x9E	; 158
    46e2:	90 e4       	ldi	r25, 0x40	; 64
    46e4:	89 2f       	mov	r24, r25
    46e6:	8f 93       	push	r24
    46e8:	8e e9       	ldi	r24, 0x9E	; 158
    46ea:	90 e4       	ldi	r25, 0x40	; 64
    46ec:	8f 93       	push	r24
    46ee:	8e e5       	ldi	r24, 0x5E	; 94
    46f0:	95 e4       	ldi	r25, 0x45	; 69
    46f2:	89 2f       	mov	r24, r25
    46f4:	8f 93       	push	r24
    46f6:	8e e5       	ldi	r24, 0x5E	; 94
    46f8:	95 e4       	ldi	r25, 0x45	; 69
    46fa:	8f 93       	push	r24
    46fc:	0e 94 99 7f 	call	0xff32	; 0xff32 <sprintf>
    4700:	8d b7       	in	r24, 0x3d	; 61
    4702:	9e b7       	in	r25, 0x3e	; 62
    4704:	08 96       	adiw	r24, 0x08	; 8
    4706:	cd bf       	out	0x3d, r28	; 61
    4708:	de bf       	out	0x3e, r29	; 62
    470a:	4e e5       	ldi	r20, 0x5E	; 94
    470c:	55 e4       	ldi	r21, 0x45	; 69
    470e:	62 ea       	ldi	r22, 0xA2	; 162
    4710:	70 e4       	ldi	r23, 0x40	; 64
    4712:	83 e0       	ldi	r24, 0x03	; 3
    4714:	0e 94 92 5f 	call	0xbf24	; 0xbf24 <_Z11lb_send_msg13LBMessageTypePKcPc>
    4718:	8b 8d       	ldd	r24, Y+27	; 0x1b
    471a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    471c:	ad 8d       	ldd	r26, Y+29	; 0x1d
    471e:	be 8d       	ldd	r27, Y+30	; 0x1e
    4720:	80 93 96 46 	sts	0x4696, r24	; 0x804696 <_ZZ17handleLinkBusMsgsvE8lastTime>
    4724:	90 93 97 46 	sts	0x4697, r25	; 0x804697 <_ZZ17handleLinkBusMsgsvE8lastTime+0x1>
    4728:	a0 93 98 46 	sts	0x4698, r26	; 0x804698 <_ZZ17handleLinkBusMsgsvE8lastTime+0x2>
    472c:	b0 93 99 46 	sts	0x4699, r27	; 0x804699 <_ZZ17handleLinkBusMsgsvE8lastTime+0x3>
    4730:	12 c3       	rjmp	.+1572   	; 0x4d56 <__DATA_REGION_LENGTH__+0xd56>
    4732:	8c 85       	ldd	r24, Y+12	; 0x0c
    4734:	9d 85       	ldd	r25, Y+13	; 0x0d
    4736:	fc 01       	movw	r30, r24
    4738:	80 81       	ld	r24, Z
    473a:	81 30       	cpi	r24, 0x01	; 1
    473c:	09 f0       	breq	.+2      	; 0x4740 <__DATA_REGION_LENGTH__+0x740>
    473e:	3f c0       	rjmp	.+126    	; 0x47be <__DATA_REGION_LENGTH__+0x7be>
    4740:	8c 85       	ldd	r24, Y+12	; 0x0c
    4742:	9d 85       	ldd	r25, Y+13	; 0x0d
    4744:	fc 01       	movw	r30, r24
    4746:	83 81       	ldd	r24, Z+3	; 0x03
    4748:	88 23       	and	r24, r24
    474a:	01 f1       	breq	.+64     	; 0x478c <__DATA_REGION_LENGTH__+0x78c>
    474c:	8c 85       	ldd	r24, Y+12	; 0x0c
    474e:	9d 85       	ldd	r25, Y+13	; 0x0d
    4750:	03 96       	adiw	r24, 0x03	; 3
    4752:	bc 01       	movw	r22, r24
    4754:	87 e2       	ldi	r24, 0x27	; 39
    4756:	96 e4       	ldi	r25, 0x46	; 70
    4758:	0e 94 4b 7f 	call	0xfe96	; 0xfe96 <strcmp>
    475c:	89 2b       	or	r24, r25
    475e:	29 f1       	breq	.+74     	; 0x47aa <__DATA_REGION_LENGTH__+0x7aa>
    4760:	8c 85       	ldd	r24, Y+12	; 0x0c
    4762:	9d 85       	ldd	r25, Y+13	; 0x0d
    4764:	03 96       	adiw	r24, 0x03	; 3
    4766:	44 e1       	ldi	r20, 0x14	; 20
    4768:	50 e0       	ldi	r21, 0x00	; 0
    476a:	bc 01       	movw	r22, r24
    476c:	87 e2       	ldi	r24, 0x27	; 39
    476e:	96 e4       	ldi	r25, 0x46	; 70
    4770:	0e 94 6d 7f 	call	0xfeda	; 0xfeda <strncpy>
    4774:	0e 94 cc 2e 	call	0x5d98	; 0x5d98 <_Z15timeNeededForIDv>
    4778:	80 93 3c 46 	sts	0x463C, r24	; 0x80463c <g_time_needed_for_ID>
    477c:	90 93 3d 46 	sts	0x463D, r25	; 0x80463d <g_time_needed_for_ID+0x1>
    4780:	80 91 95 46 	lds	r24, 0x4695	; 0x804695 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4784:	8f 5f       	subi	r24, 0xFF	; 255
    4786:	80 93 95 46 	sts	0x4695, r24	; 0x804695 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    478a:	0f c0       	rjmp	.+30     	; 0x47aa <__DATA_REGION_LENGTH__+0x7aa>
    478c:	80 91 27 46 	lds	r24, 0x4627	; 0x804627 <g_messages_text+0x54>
    4790:	88 23       	and	r24, r24
    4792:	59 f0       	breq	.+22     	; 0x47aa <__DATA_REGION_LENGTH__+0x7aa>
    4794:	10 92 27 46 	sts	0x4627, r1	; 0x804627 <g_messages_text+0x54>
    4798:	10 92 3c 46 	sts	0x463C, r1	; 0x80463c <g_time_needed_for_ID>
    479c:	10 92 3d 46 	sts	0x463D, r1	; 0x80463d <g_time_needed_for_ID+0x1>
    47a0:	80 91 95 46 	lds	r24, 0x4695	; 0x804695 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    47a4:	8f 5f       	subi	r24, 0xFF	; 255
    47a6:	80 93 95 46 	sts	0x4695, r24	; 0x804695 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    47aa:	80 91 69 46 	lds	r24, 0x4669	; 0x804669 <g_Event_Configuration_Check>
    47ae:	90 91 6a 46 	lds	r25, 0x466A	; 0x80466a <g_Event_Configuration_Check+0x1>
    47b2:	91 60       	ori	r25, 0x01	; 1
    47b4:	80 93 69 46 	sts	0x4669, r24	; 0x804669 <g_Event_Configuration_Check>
    47b8:	90 93 6a 46 	sts	0x466A, r25	; 0x80466a <g_Event_Configuration_Check+0x1>
    47bc:	ce c2       	rjmp	.+1436   	; 0x4d5a <__DATA_REGION_LENGTH__+0xd5a>
    47be:	80 91 27 46 	lds	r24, 0x4627	; 0x804627 <g_messages_text+0x54>
    47c2:	88 23       	and	r24, r24
    47c4:	09 f4       	brne	.+2      	; 0x47c8 <__DATA_REGION_LENGTH__+0x7c8>
    47c6:	c9 c2       	rjmp	.+1426   	; 0x4d5a <__DATA_REGION_LENGTH__+0xd5a>
    47c8:	87 e2       	ldi	r24, 0x27	; 39
    47ca:	96 e4       	ldi	r25, 0x46	; 70
    47cc:	89 2f       	mov	r24, r25
    47ce:	8f 93       	push	r24
    47d0:	87 e2       	ldi	r24, 0x27	; 39
    47d2:	96 e4       	ldi	r25, 0x46	; 70
    47d4:	8f 93       	push	r24
    47d6:	80 e4       	ldi	r24, 0x40	; 64
    47d8:	92 e4       	ldi	r25, 0x42	; 66
    47da:	89 2f       	mov	r24, r25
    47dc:	8f 93       	push	r24
    47de:	80 e4       	ldi	r24, 0x40	; 64
    47e0:	92 e4       	ldi	r25, 0x42	; 66
    47e2:	8f 93       	push	r24
    47e4:	8e e5       	ldi	r24, 0x5E	; 94
    47e6:	95 e4       	ldi	r25, 0x45	; 69
    47e8:	89 2f       	mov	r24, r25
    47ea:	8f 93       	push	r24
    47ec:	8e e5       	ldi	r24, 0x5E	; 94
    47ee:	95 e4       	ldi	r25, 0x45	; 69
    47f0:	8f 93       	push	r24
    47f2:	0e 94 99 7f 	call	0xff32	; 0xff32 <sprintf>
    47f6:	0f 90       	pop	r0
    47f8:	0f 90       	pop	r0
    47fa:	0f 90       	pop	r0
    47fc:	0f 90       	pop	r0
    47fe:	0f 90       	pop	r0
    4800:	0f 90       	pop	r0
    4802:	8e e5       	ldi	r24, 0x5E	; 94
    4804:	95 e4       	ldi	r25, 0x45	; 69
    4806:	0e 94 35 5f 	call	0xbe6a	; 0xbe6a <_Z12lb_send_textPc>
    480a:	19 82       	std	Y+1, r1	; 0x01
    480c:	a6 c2       	rjmp	.+1356   	; 0x4d5a <__DATA_REGION_LENGTH__+0xd5a>
    480e:	80 91 0e 40 	lds	r24, 0x400E	; 0x80400e <g_pattern_codespeed>
    4812:	8f 8f       	std	Y+31, r24	; 0x1f
    4814:	8c 85       	ldd	r24, Y+12	; 0x0c
    4816:	9d 85       	ldd	r25, Y+13	; 0x0d
    4818:	fc 01       	movw	r30, r24
    481a:	83 81       	ldd	r24, Z+3	; 0x03
    481c:	89 34       	cpi	r24, 0x49	; 73
    481e:	09 f0       	breq	.+2      	; 0x4822 <__DATA_REGION_LENGTH__+0x822>
    4820:	60 c0       	rjmp	.+192    	; 0x48e2 <__DATA_REGION_LENGTH__+0x8e2>
    4822:	8c 85       	ldd	r24, Y+12	; 0x0c
    4824:	9d 85       	ldd	r25, Y+13	; 0x0d
    4826:	fc 01       	movw	r30, r24
    4828:	80 8d       	ldd	r24, Z+24	; 0x18
    482a:	88 23       	and	r24, r24
    482c:	09 f4       	brne	.+2      	; 0x4830 <__DATA_REGION_LENGTH__+0x830>
    482e:	97 c2       	rjmp	.+1326   	; 0x4d5e <__DATA_REGION_LENGTH__+0xd5e>
    4830:	8c 85       	ldd	r24, Y+12	; 0x0c
    4832:	9d 85       	ldd	r25, Y+13	; 0x0d
    4834:	48 96       	adiw	r24, 0x18	; 24
    4836:	0e 94 01 7f 	call	0xfe02	; 0xfe02 <atol>
    483a:	dc 01       	movw	r26, r24
    483c:	cb 01       	movw	r24, r22
    483e:	88 a3       	std	Y+32, r24	; 0x20
    4840:	99 a3       	std	Y+33, r25	; 0x21
    4842:	aa a3       	std	Y+34, r26	; 0x22
    4844:	bb a3       	std	Y+35, r27	; 0x23
    4846:	85 e0       	ldi	r24, 0x05	; 5
    4848:	8c a3       	std	Y+36, r24	; 0x24
    484a:	84 e1       	ldi	r24, 0x14	; 20
    484c:	8d a3       	std	Y+37, r24	; 0x25
    484e:	8d a1       	ldd	r24, Y+37	; 0x25
    4850:	28 2f       	mov	r18, r24
    4852:	30 e0       	ldi	r19, 0x00	; 0
    4854:	40 e0       	ldi	r20, 0x00	; 0
    4856:	50 e0       	ldi	r21, 0x00	; 0
    4858:	88 a1       	ldd	r24, Y+32	; 0x20
    485a:	99 a1       	ldd	r25, Y+33	; 0x21
    485c:	aa a1       	ldd	r26, Y+34	; 0x22
    485e:	bb a1       	ldd	r27, Y+35	; 0x23
    4860:	28 17       	cp	r18, r24
    4862:	39 07       	cpc	r19, r25
    4864:	4a 07       	cpc	r20, r26
    4866:	5b 07       	cpc	r21, r27
    4868:	34 f4       	brge	.+12     	; 0x4876 <__DATA_REGION_LENGTH__+0x876>
    486a:	8d a1       	ldd	r24, Y+37	; 0x25
    486c:	88 2f       	mov	r24, r24
    486e:	90 e0       	ldi	r25, 0x00	; 0
    4870:	a0 e0       	ldi	r26, 0x00	; 0
    4872:	b0 e0       	ldi	r27, 0x00	; 0
    4874:	10 c0       	rjmp	.+32     	; 0x4896 <__DATA_REGION_LENGTH__+0x896>
    4876:	8c a1       	ldd	r24, Y+36	; 0x24
    4878:	88 2f       	mov	r24, r24
    487a:	90 e0       	ldi	r25, 0x00	; 0
    487c:	a0 e0       	ldi	r26, 0x00	; 0
    487e:	b0 e0       	ldi	r27, 0x00	; 0
    4880:	28 a1       	ldd	r18, Y+32	; 0x20
    4882:	39 a1       	ldd	r19, Y+33	; 0x21
    4884:	4a a1       	ldd	r20, Y+34	; 0x22
    4886:	5b a1       	ldd	r21, Y+35	; 0x23
    4888:	82 17       	cp	r24, r18
    488a:	93 07       	cpc	r25, r19
    488c:	a4 07       	cpc	r26, r20
    488e:	b5 07       	cpc	r27, r21
    4890:	14 f4       	brge	.+4      	; 0x4896 <__DATA_REGION_LENGTH__+0x896>
    4892:	da 01       	movw	r26, r20
    4894:	c9 01       	movw	r24, r18
    4896:	8f 8f       	std	Y+31, r24	; 0x1f
    4898:	90 91 0d 40 	lds	r25, 0x400D	; 0x80400d <g_id_codespeed>
    489c:	81 e0       	ldi	r24, 0x01	; 1
    489e:	2f 8d       	ldd	r18, Y+31	; 0x1f
    48a0:	29 17       	cp	r18, r25
    48a2:	09 f4       	brne	.+2      	; 0x48a6 <__DATA_REGION_LENGTH__+0x8a6>
    48a4:	80 e0       	ldi	r24, 0x00	; 0
    48a6:	88 23       	and	r24, r24
    48a8:	91 f0       	breq	.+36     	; 0x48ce <__DATA_REGION_LENGTH__+0x8ce>
    48aa:	8f 8d       	ldd	r24, Y+31	; 0x1f
    48ac:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_id_codespeed>
    48b0:	80 91 95 46 	lds	r24, 0x4695	; 0x804695 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    48b4:	8f 5f       	subi	r24, 0xFF	; 255
    48b6:	80 93 95 46 	sts	0x4695, r24	; 0x804695 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    48ba:	80 91 27 46 	lds	r24, 0x4627	; 0x804627 <g_messages_text+0x54>
    48be:	88 23       	and	r24, r24
    48c0:	31 f0       	breq	.+12     	; 0x48ce <__DATA_REGION_LENGTH__+0x8ce>
    48c2:	0e 94 cc 2e 	call	0x5d98	; 0x5d98 <_Z15timeNeededForIDv>
    48c6:	80 93 3c 46 	sts	0x463C, r24	; 0x80463c <g_time_needed_for_ID>
    48ca:	90 93 3d 46 	sts	0x463D, r25	; 0x80463d <g_time_needed_for_ID+0x1>
    48ce:	80 91 69 46 	lds	r24, 0x4669	; 0x804669 <g_Event_Configuration_Check>
    48d2:	90 91 6a 46 	lds	r25, 0x466A	; 0x80466a <g_Event_Configuration_Check+0x1>
    48d6:	92 60       	ori	r25, 0x02	; 2
    48d8:	80 93 69 46 	sts	0x4669, r24	; 0x804669 <g_Event_Configuration_Check>
    48dc:	90 93 6a 46 	sts	0x466A, r25	; 0x80466a <g_Event_Configuration_Check+0x1>
    48e0:	3e c2       	rjmp	.+1148   	; 0x4d5e <__DATA_REGION_LENGTH__+0xd5e>
    48e2:	8c 85       	ldd	r24, Y+12	; 0x0c
    48e4:	9d 85       	ldd	r25, Y+13	; 0x0d
    48e6:	fc 01       	movw	r30, r24
    48e8:	83 81       	ldd	r24, Z+3	; 0x03
    48ea:	80 35       	cpi	r24, 0x50	; 80
    48ec:	09 f0       	breq	.+2      	; 0x48f0 <__DATA_REGION_LENGTH__+0x8f0>
    48ee:	37 c2       	rjmp	.+1134   	; 0x4d5e <__DATA_REGION_LENGTH__+0xd5e>
    48f0:	8c 85       	ldd	r24, Y+12	; 0x0c
    48f2:	9d 85       	ldd	r25, Y+13	; 0x0d
    48f4:	fc 01       	movw	r30, r24
    48f6:	80 8d       	ldd	r24, Z+24	; 0x18
    48f8:	88 23       	and	r24, r24
    48fa:	09 f4       	brne	.+2      	; 0x48fe <__DATA_REGION_LENGTH__+0x8fe>
    48fc:	30 c2       	rjmp	.+1120   	; 0x4d5e <__DATA_REGION_LENGTH__+0xd5e>
    48fe:	8c 85       	ldd	r24, Y+12	; 0x0c
    4900:	9d 85       	ldd	r25, Y+13	; 0x0d
    4902:	48 96       	adiw	r24, 0x18	; 24
    4904:	0e 94 01 7f 	call	0xfe02	; 0xfe02 <atol>
    4908:	dc 01       	movw	r26, r24
    490a:	cb 01       	movw	r24, r22
    490c:	8e a3       	std	Y+38, r24	; 0x26
    490e:	9f a3       	std	Y+39, r25	; 0x27
    4910:	a8 a7       	std	Y+40, r26	; 0x28
    4912:	b9 a7       	std	Y+41, r27	; 0x29
    4914:	85 e0       	ldi	r24, 0x05	; 5
    4916:	8a a7       	std	Y+42, r24	; 0x2a
    4918:	84 e1       	ldi	r24, 0x14	; 20
    491a:	8b a7       	std	Y+43, r24	; 0x2b
    491c:	8b a5       	ldd	r24, Y+43	; 0x2b
    491e:	28 2f       	mov	r18, r24
    4920:	30 e0       	ldi	r19, 0x00	; 0
    4922:	40 e0       	ldi	r20, 0x00	; 0
    4924:	50 e0       	ldi	r21, 0x00	; 0
    4926:	8e a1       	ldd	r24, Y+38	; 0x26
    4928:	9f a1       	ldd	r25, Y+39	; 0x27
    492a:	a8 a5       	ldd	r26, Y+40	; 0x28
    492c:	b9 a5       	ldd	r27, Y+41	; 0x29
    492e:	28 17       	cp	r18, r24
    4930:	39 07       	cpc	r19, r25
    4932:	4a 07       	cpc	r20, r26
    4934:	5b 07       	cpc	r21, r27
    4936:	34 f4       	brge	.+12     	; 0x4944 <__DATA_REGION_LENGTH__+0x944>
    4938:	8b a5       	ldd	r24, Y+43	; 0x2b
    493a:	88 2f       	mov	r24, r24
    493c:	90 e0       	ldi	r25, 0x00	; 0
    493e:	a0 e0       	ldi	r26, 0x00	; 0
    4940:	b0 e0       	ldi	r27, 0x00	; 0
    4942:	10 c0       	rjmp	.+32     	; 0x4964 <__DATA_REGION_LENGTH__+0x964>
    4944:	8a a5       	ldd	r24, Y+42	; 0x2a
    4946:	88 2f       	mov	r24, r24
    4948:	90 e0       	ldi	r25, 0x00	; 0
    494a:	a0 e0       	ldi	r26, 0x00	; 0
    494c:	b0 e0       	ldi	r27, 0x00	; 0
    494e:	2e a1       	ldd	r18, Y+38	; 0x26
    4950:	3f a1       	ldd	r19, Y+39	; 0x27
    4952:	48 a5       	ldd	r20, Y+40	; 0x28
    4954:	59 a5       	ldd	r21, Y+41	; 0x29
    4956:	82 17       	cp	r24, r18
    4958:	93 07       	cpc	r25, r19
    495a:	a4 07       	cpc	r26, r20
    495c:	b5 07       	cpc	r27, r21
    495e:	14 f4       	brge	.+4      	; 0x4964 <__DATA_REGION_LENGTH__+0x964>
    4960:	da 01       	movw	r26, r20
    4962:	c9 01       	movw	r24, r18
    4964:	8f 8f       	std	Y+31, r24	; 0x1f
    4966:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_pattern_codespeed>
    496a:	81 e0       	ldi	r24, 0x01	; 1
    496c:	2f 8d       	ldd	r18, Y+31	; 0x1f
    496e:	29 17       	cp	r18, r25
    4970:	09 f4       	brne	.+2      	; 0x4974 <__DATA_REGION_LENGTH__+0x974>
    4972:	80 e0       	ldi	r24, 0x00	; 0
    4974:	88 23       	and	r24, r24
    4976:	81 f0       	breq	.+32     	; 0x4998 <__DATA_REGION_LENGTH__+0x998>
    4978:	8f 8d       	ldd	r24, Y+31	; 0x1f
    497a:	80 93 0e 40 	sts	0x400E, r24	; 0x80400e <g_pattern_codespeed>
    497e:	80 91 95 46 	lds	r24, 0x4695	; 0x804695 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4982:	8f 5f       	subi	r24, 0xFF	; 255
    4984:	80 93 95 46 	sts	0x4695, r24	; 0x804695 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4988:	80 91 0e 40 	lds	r24, 0x400E	; 0x80400e <g_pattern_codespeed>
    498c:	0e 94 89 27 	call	0x4f12	; 0x4f12 <_Z13throttleValueh>
    4990:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    4994:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    4998:	80 91 69 46 	lds	r24, 0x4669	; 0x804669 <g_Event_Configuration_Check>
    499c:	90 91 6a 46 	lds	r25, 0x466A	; 0x80466a <g_Event_Configuration_Check+0x1>
    49a0:	94 60       	ori	r25, 0x04	; 4
    49a2:	80 93 69 46 	sts	0x4669, r24	; 0x804669 <g_Event_Configuration_Check>
    49a6:	90 93 6a 46 	sts	0x466A, r25	; 0x80466a <g_Event_Configuration_Check+0x1>
    49aa:	d9 c1       	rjmp	.+946    	; 0x4d5e <__DATA_REGION_LENGTH__+0xd5e>
    49ac:	1c a6       	std	Y+44, r1	; 0x2c
    49ae:	1d a6       	std	Y+45, r1	; 0x2d
    49b0:	8c 85       	ldd	r24, Y+12	; 0x0c
    49b2:	9d 85       	ldd	r25, Y+13	; 0x0d
    49b4:	fc 01       	movw	r30, r24
    49b6:	83 81       	ldd	r24, Z+3	; 0x03
    49b8:	80 33       	cpi	r24, 0x30	; 48
    49ba:	91 f5       	brne	.+100    	; 0x4a20 <__DATA_REGION_LENGTH__+0xa20>
    49bc:	8c 85       	ldd	r24, Y+12	; 0x0c
    49be:	9d 85       	ldd	r25, Y+13	; 0x0d
    49c0:	fc 01       	movw	r30, r24
    49c2:	80 8d       	ldd	r24, Z+24	; 0x18
    49c4:	88 23       	and	r24, r24
    49c6:	09 f4       	brne	.+2      	; 0x49ca <__DATA_REGION_LENGTH__+0x9ca>
    49c8:	cc c1       	rjmp	.+920    	; 0x4d62 <__DATA_REGION_LENGTH__+0xd62>
    49ca:	8c 85       	ldd	r24, Y+12	; 0x0c
    49cc:	9d 85       	ldd	r25, Y+13	; 0x0d
    49ce:	48 96       	adiw	r24, 0x18	; 24
    49d0:	0e 94 01 7f 	call	0xfe02	; 0xfe02 <atol>
    49d4:	dc 01       	movw	r26, r24
    49d6:	cb 01       	movw	r24, r22
    49d8:	8c a7       	std	Y+44, r24	; 0x2c
    49da:	9d a7       	std	Y+45, r25	; 0x2d
    49dc:	80 91 11 40 	lds	r24, 0x4011	; 0x804011 <g_off_air_seconds>
    49e0:	90 91 12 40 	lds	r25, 0x4012	; 0x804012 <g_off_air_seconds+0x1>
    49e4:	41 e0       	ldi	r20, 0x01	; 1
    49e6:	2c a5       	ldd	r18, Y+44	; 0x2c
    49e8:	3d a5       	ldd	r19, Y+45	; 0x2d
    49ea:	28 17       	cp	r18, r24
    49ec:	39 07       	cpc	r19, r25
    49ee:	09 f4       	brne	.+2      	; 0x49f2 <__DATA_REGION_LENGTH__+0x9f2>
    49f0:	40 e0       	ldi	r20, 0x00	; 0
    49f2:	44 23       	and	r20, r20
    49f4:	59 f0       	breq	.+22     	; 0x4a0c <__DATA_REGION_LENGTH__+0xa0c>
    49f6:	8c a5       	ldd	r24, Y+44	; 0x2c
    49f8:	9d a5       	ldd	r25, Y+45	; 0x2d
    49fa:	80 93 11 40 	sts	0x4011, r24	; 0x804011 <g_off_air_seconds>
    49fe:	90 93 12 40 	sts	0x4012, r25	; 0x804012 <g_off_air_seconds+0x1>
    4a02:	80 91 95 46 	lds	r24, 0x4695	; 0x804695 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4a06:	8f 5f       	subi	r24, 0xFF	; 255
    4a08:	80 93 95 46 	sts	0x4695, r24	; 0x804695 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4a0c:	80 91 69 46 	lds	r24, 0x4669	; 0x804669 <g_Event_Configuration_Check>
    4a10:	90 91 6a 46 	lds	r25, 0x466A	; 0x80466a <g_Event_Configuration_Check+0x1>
    4a14:	84 60       	ori	r24, 0x04	; 4
    4a16:	80 93 69 46 	sts	0x4669, r24	; 0x804669 <g_Event_Configuration_Check>
    4a1a:	90 93 6a 46 	sts	0x466A, r25	; 0x80466a <g_Event_Configuration_Check+0x1>
    4a1e:	a1 c1       	rjmp	.+834    	; 0x4d62 <__DATA_REGION_LENGTH__+0xd62>
    4a20:	8c 85       	ldd	r24, Y+12	; 0x0c
    4a22:	9d 85       	ldd	r25, Y+13	; 0x0d
    4a24:	fc 01       	movw	r30, r24
    4a26:	83 81       	ldd	r24, Z+3	; 0x03
    4a28:	81 33       	cpi	r24, 0x31	; 49
    4a2a:	91 f5       	brne	.+100    	; 0x4a90 <__DATA_REGION_LENGTH__+0xa90>
    4a2c:	8c 85       	ldd	r24, Y+12	; 0x0c
    4a2e:	9d 85       	ldd	r25, Y+13	; 0x0d
    4a30:	fc 01       	movw	r30, r24
    4a32:	80 8d       	ldd	r24, Z+24	; 0x18
    4a34:	88 23       	and	r24, r24
    4a36:	09 f4       	brne	.+2      	; 0x4a3a <__DATA_REGION_LENGTH__+0xa3a>
    4a38:	94 c1       	rjmp	.+808    	; 0x4d62 <__DATA_REGION_LENGTH__+0xd62>
    4a3a:	8c 85       	ldd	r24, Y+12	; 0x0c
    4a3c:	9d 85       	ldd	r25, Y+13	; 0x0d
    4a3e:	48 96       	adiw	r24, 0x18	; 24
    4a40:	0e 94 01 7f 	call	0xfe02	; 0xfe02 <atol>
    4a44:	dc 01       	movw	r26, r24
    4a46:	cb 01       	movw	r24, r22
    4a48:	8c a7       	std	Y+44, r24	; 0x2c
    4a4a:	9d a7       	std	Y+45, r25	; 0x2d
    4a4c:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_on_air_seconds>
    4a50:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_on_air_seconds+0x1>
    4a54:	41 e0       	ldi	r20, 0x01	; 1
    4a56:	2c a5       	ldd	r18, Y+44	; 0x2c
    4a58:	3d a5       	ldd	r19, Y+45	; 0x2d
    4a5a:	28 17       	cp	r18, r24
    4a5c:	39 07       	cpc	r19, r25
    4a5e:	09 f4       	brne	.+2      	; 0x4a62 <__DATA_REGION_LENGTH__+0xa62>
    4a60:	40 e0       	ldi	r20, 0x00	; 0
    4a62:	44 23       	and	r20, r20
    4a64:	59 f0       	breq	.+22     	; 0x4a7c <__DATA_REGION_LENGTH__+0xa7c>
    4a66:	8c a5       	ldd	r24, Y+44	; 0x2c
    4a68:	9d a5       	ldd	r25, Y+45	; 0x2d
    4a6a:	80 93 0f 40 	sts	0x400F, r24	; 0x80400f <g_on_air_seconds>
    4a6e:	90 93 10 40 	sts	0x4010, r25	; 0x804010 <g_on_air_seconds+0x1>
    4a72:	80 91 95 46 	lds	r24, 0x4695	; 0x804695 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4a76:	8f 5f       	subi	r24, 0xFF	; 255
    4a78:	80 93 95 46 	sts	0x4695, r24	; 0x804695 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4a7c:	80 91 69 46 	lds	r24, 0x4669	; 0x804669 <g_Event_Configuration_Check>
    4a80:	90 91 6a 46 	lds	r25, 0x466A	; 0x80466a <g_Event_Configuration_Check+0x1>
    4a84:	88 60       	ori	r24, 0x08	; 8
    4a86:	80 93 69 46 	sts	0x4669, r24	; 0x804669 <g_Event_Configuration_Check>
    4a8a:	90 93 6a 46 	sts	0x466A, r25	; 0x80466a <g_Event_Configuration_Check+0x1>
    4a8e:	69 c1       	rjmp	.+722    	; 0x4d62 <__DATA_REGION_LENGTH__+0xd62>
    4a90:	8c 85       	ldd	r24, Y+12	; 0x0c
    4a92:	9d 85       	ldd	r25, Y+13	; 0x0d
    4a94:	fc 01       	movw	r30, r24
    4a96:	83 81       	ldd	r24, Z+3	; 0x03
    4a98:	89 34       	cpi	r24, 0x49	; 73
    4a9a:	91 f5       	brne	.+100    	; 0x4b00 <__DATA_REGION_LENGTH__+0xb00>
    4a9c:	8c 85       	ldd	r24, Y+12	; 0x0c
    4a9e:	9d 85       	ldd	r25, Y+13	; 0x0d
    4aa0:	fc 01       	movw	r30, r24
    4aa2:	80 8d       	ldd	r24, Z+24	; 0x18
    4aa4:	88 23       	and	r24, r24
    4aa6:	09 f4       	brne	.+2      	; 0x4aaa <__DATA_REGION_LENGTH__+0xaaa>
    4aa8:	5c c1       	rjmp	.+696    	; 0x4d62 <__DATA_REGION_LENGTH__+0xd62>
    4aaa:	8c 85       	ldd	r24, Y+12	; 0x0c
    4aac:	9d 85       	ldd	r25, Y+13	; 0x0d
    4aae:	48 96       	adiw	r24, 0x18	; 24
    4ab0:	0e 94 01 7f 	call	0xfe02	; 0xfe02 <atol>
    4ab4:	dc 01       	movw	r26, r24
    4ab6:	cb 01       	movw	r24, r22
    4ab8:	8c a7       	std	Y+44, r24	; 0x2c
    4aba:	9d a7       	std	Y+45, r25	; 0x2d
    4abc:	80 91 13 40 	lds	r24, 0x4013	; 0x804013 <g_ID_period_seconds>
    4ac0:	90 91 14 40 	lds	r25, 0x4014	; 0x804014 <g_ID_period_seconds+0x1>
    4ac4:	41 e0       	ldi	r20, 0x01	; 1
    4ac6:	2c a5       	ldd	r18, Y+44	; 0x2c
    4ac8:	3d a5       	ldd	r19, Y+45	; 0x2d
    4aca:	28 17       	cp	r18, r24
    4acc:	39 07       	cpc	r19, r25
    4ace:	09 f4       	brne	.+2      	; 0x4ad2 <__DATA_REGION_LENGTH__+0xad2>
    4ad0:	40 e0       	ldi	r20, 0x00	; 0
    4ad2:	44 23       	and	r20, r20
    4ad4:	59 f0       	breq	.+22     	; 0x4aec <__DATA_REGION_LENGTH__+0xaec>
    4ad6:	8c a5       	ldd	r24, Y+44	; 0x2c
    4ad8:	9d a5       	ldd	r25, Y+45	; 0x2d
    4ada:	80 93 13 40 	sts	0x4013, r24	; 0x804013 <g_ID_period_seconds>
    4ade:	90 93 14 40 	sts	0x4014, r25	; 0x804014 <g_ID_period_seconds+0x1>
    4ae2:	80 91 95 46 	lds	r24, 0x4695	; 0x804695 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4ae6:	8f 5f       	subi	r24, 0xFF	; 255
    4ae8:	80 93 95 46 	sts	0x4695, r24	; 0x804695 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4aec:	80 91 69 46 	lds	r24, 0x4669	; 0x804669 <g_Event_Configuration_Check>
    4af0:	90 91 6a 46 	lds	r25, 0x466A	; 0x80466a <g_Event_Configuration_Check+0x1>
    4af4:	80 62       	ori	r24, 0x20	; 32
    4af6:	80 93 69 46 	sts	0x4669, r24	; 0x804669 <g_Event_Configuration_Check>
    4afa:	90 93 6a 46 	sts	0x466A, r25	; 0x80466a <g_Event_Configuration_Check+0x1>
    4afe:	31 c1       	rjmp	.+610    	; 0x4d62 <__DATA_REGION_LENGTH__+0xd62>
    4b00:	8c 85       	ldd	r24, Y+12	; 0x0c
    4b02:	9d 85       	ldd	r25, Y+13	; 0x0d
    4b04:	fc 01       	movw	r30, r24
    4b06:	83 81       	ldd	r24, Z+3	; 0x03
    4b08:	84 34       	cpi	r24, 0x44	; 68
    4b0a:	09 f0       	breq	.+2      	; 0x4b0e <__DATA_REGION_LENGTH__+0xb0e>
    4b0c:	2a c1       	rjmp	.+596    	; 0x4d62 <__DATA_REGION_LENGTH__+0xd62>
    4b0e:	8c 85       	ldd	r24, Y+12	; 0x0c
    4b10:	9d 85       	ldd	r25, Y+13	; 0x0d
    4b12:	fc 01       	movw	r30, r24
    4b14:	80 8d       	ldd	r24, Z+24	; 0x18
    4b16:	88 23       	and	r24, r24
    4b18:	09 f4       	brne	.+2      	; 0x4b1c <__DATA_REGION_LENGTH__+0xb1c>
    4b1a:	23 c1       	rjmp	.+582    	; 0x4d62 <__DATA_REGION_LENGTH__+0xd62>
    4b1c:	8c 85       	ldd	r24, Y+12	; 0x0c
    4b1e:	9d 85       	ldd	r25, Y+13	; 0x0d
    4b20:	48 96       	adiw	r24, 0x18	; 24
    4b22:	0e 94 01 7f 	call	0xfe02	; 0xfe02 <atol>
    4b26:	dc 01       	movw	r26, r24
    4b28:	cb 01       	movw	r24, r22
    4b2a:	8c a7       	std	Y+44, r24	; 0x2c
    4b2c:	9d a7       	std	Y+45, r25	; 0x2d
    4b2e:	80 91 3e 46 	lds	r24, 0x463E	; 0x80463e <g_intra_cycle_delay_time>
    4b32:	90 91 3f 46 	lds	r25, 0x463F	; 0x80463f <g_intra_cycle_delay_time+0x1>
    4b36:	41 e0       	ldi	r20, 0x01	; 1
    4b38:	2c a5       	ldd	r18, Y+44	; 0x2c
    4b3a:	3d a5       	ldd	r19, Y+45	; 0x2d
    4b3c:	28 17       	cp	r18, r24
    4b3e:	39 07       	cpc	r19, r25
    4b40:	09 f4       	brne	.+2      	; 0x4b44 <__DATA_REGION_LENGTH__+0xb44>
    4b42:	40 e0       	ldi	r20, 0x00	; 0
    4b44:	44 23       	and	r20, r20
    4b46:	59 f0       	breq	.+22     	; 0x4b5e <__DATA_REGION_LENGTH__+0xb5e>
    4b48:	8c a5       	ldd	r24, Y+44	; 0x2c
    4b4a:	9d a5       	ldd	r25, Y+45	; 0x2d
    4b4c:	80 93 3e 46 	sts	0x463E, r24	; 0x80463e <g_intra_cycle_delay_time>
    4b50:	90 93 3f 46 	sts	0x463F, r25	; 0x80463f <g_intra_cycle_delay_time+0x1>
    4b54:	80 91 95 46 	lds	r24, 0x4695	; 0x804695 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4b58:	8f 5f       	subi	r24, 0xFF	; 255
    4b5a:	80 93 95 46 	sts	0x4695, r24	; 0x804695 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4b5e:	80 91 69 46 	lds	r24, 0x4669	; 0x804669 <g_Event_Configuration_Check>
    4b62:	90 91 6a 46 	lds	r25, 0x466A	; 0x80466a <g_Event_Configuration_Check+0x1>
    4b66:	80 61       	ori	r24, 0x10	; 16
    4b68:	80 93 69 46 	sts	0x4669, r24	; 0x804669 <g_Event_Configuration_Check>
    4b6c:	90 93 6a 46 	sts	0x466A, r25	; 0x80466a <g_Event_Configuration_Check+0x1>
    4b70:	f8 c0       	rjmp	.+496    	; 0x4d62 <__DATA_REGION_LENGTH__+0xd62>
    4b72:	8c 85       	ldd	r24, Y+12	; 0x0c
    4b74:	9d 85       	ldd	r25, Y+13	; 0x0d
    4b76:	fc 01       	movw	r30, r24
    4b78:	83 81       	ldd	r24, Z+3	; 0x03
    4b7a:	88 23       	and	r24, r24
    4b7c:	09 f4       	brne	.+2      	; 0x4b80 <__DATA_REGION_LENGTH__+0xb80>
    4b7e:	f3 c0       	rjmp	.+486    	; 0x4d66 <__DATA_REGION_LENGTH__+0xd66>
    4b80:	8c 85       	ldd	r24, Y+12	; 0x0c
    4b82:	9d 85       	ldd	r25, Y+13	; 0x0d
    4b84:	03 96       	adiw	r24, 0x03	; 3
    4b86:	bc 01       	movw	r22, r24
    4b88:	83 ed       	ldi	r24, 0xD3	; 211
    4b8a:	95 e4       	ldi	r25, 0x45	; 69
    4b8c:	0e 94 4b 7f 	call	0xfe96	; 0xfe96 <strcmp>
    4b90:	89 2b       	or	r24, r25
    4b92:	79 f0       	breq	.+30     	; 0x4bb2 <__DATA_REGION_LENGTH__+0xbb2>
    4b94:	8c 85       	ldd	r24, Y+12	; 0x0c
    4b96:	9d 85       	ldd	r25, Y+13	; 0x0d
    4b98:	03 96       	adiw	r24, 0x03	; 3
    4b9a:	44 e1       	ldi	r20, 0x14	; 20
    4b9c:	50 e0       	ldi	r21, 0x00	; 0
    4b9e:	bc 01       	movw	r22, r24
    4ba0:	83 ed       	ldi	r24, 0xD3	; 211
    4ba2:	95 e4       	ldi	r25, 0x45	; 69
    4ba4:	0e 94 6d 7f 	call	0xfeda	; 0xfeda <strncpy>
    4ba8:	80 91 95 46 	lds	r24, 0x4695	; 0x804695 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4bac:	8f 5f       	subi	r24, 0xFF	; 255
    4bae:	80 93 95 46 	sts	0x4695, r24	; 0x804695 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4bb2:	80 91 69 46 	lds	r24, 0x4669	; 0x804669 <g_Event_Configuration_Check>
    4bb6:	90 91 6a 46 	lds	r25, 0x466A	; 0x80466a <g_Event_Configuration_Check+0x1>
    4bba:	82 60       	ori	r24, 0x02	; 2
    4bbc:	80 93 69 46 	sts	0x4669, r24	; 0x804669 <g_Event_Configuration_Check>
    4bc0:	90 93 6a 46 	sts	0x466A, r25	; 0x80466a <g_Event_Configuration_Check+0x1>
    4bc4:	d0 c0       	rjmp	.+416    	; 0x4d66 <__DATA_REGION_LENGTH__+0xd66>
    4bc6:	18 86       	std	Y+8, r1	; 0x08
    4bc8:	19 86       	std	Y+9, r1	; 0x09
    4bca:	1a 86       	std	Y+10, r1	; 0x0a
    4bcc:	1b 86       	std	Y+11, r1	; 0x0b
    4bce:	8c 85       	ldd	r24, Y+12	; 0x0c
    4bd0:	9d 85       	ldd	r25, Y+13	; 0x0d
    4bd2:	fc 01       	movw	r30, r24
    4bd4:	83 81       	ldd	r24, Z+3	; 0x03
    4bd6:	88 23       	and	r24, r24
    4bd8:	e9 f1       	breq	.+122    	; 0x4c54 <__DATA_REGION_LENGTH__+0xc54>
    4bda:	8c 85       	ldd	r24, Y+12	; 0x0c
    4bdc:	9d 85       	ldd	r25, Y+13	; 0x0d
    4bde:	03 96       	adiw	r24, 0x03	; 3
    4be0:	0e 94 01 7f 	call	0xfe02	; 0xfe02 <atol>
    4be4:	dc 01       	movw	r26, r24
    4be6:	cb 01       	movw	r24, r22
    4be8:	88 ab       	std	Y+48, r24	; 0x30
    4bea:	99 ab       	std	Y+49, r25	; 0x31
    4bec:	aa ab       	std	Y+50, r26	; 0x32
    4bee:	bb ab       	std	Y+51, r27	; 0x33
    4bf0:	0e 94 3f 75 	call	0xea7e	; 0xea7e <_Z14txGetFrequencyv>
    4bf4:	9b 01       	movw	r18, r22
    4bf6:	ac 01       	movw	r20, r24
    4bf8:	88 a9       	ldd	r24, Y+48	; 0x30
    4bfa:	99 a9       	ldd	r25, Y+49	; 0x31
    4bfc:	aa a9       	ldd	r26, Y+50	; 0x32
    4bfe:	bb a9       	ldd	r27, Y+51	; 0x33
    4c00:	61 e0       	ldi	r22, 0x01	; 1
    4c02:	28 17       	cp	r18, r24
    4c04:	39 07       	cpc	r19, r25
    4c06:	4a 07       	cpc	r20, r26
    4c08:	5b 07       	cpc	r21, r27
    4c0a:	09 f4       	brne	.+2      	; 0x4c0e <__DATA_REGION_LENGTH__+0xc0e>
    4c0c:	60 e0       	ldi	r22, 0x00	; 0
    4c0e:	66 23       	and	r22, r22
    4c10:	b9 f0       	breq	.+46     	; 0x4c40 <__DATA_REGION_LENGTH__+0xc40>
    4c12:	ce 01       	movw	r24, r28
    4c14:	c0 96       	adiw	r24, 0x30	; 48
    4c16:	61 e0       	ldi	r22, 0x01	; 1
    4c18:	0e 94 ed 74 	call	0xe9da	; 0xe9da <_Z14txSetFrequencyPmb>
    4c1c:	98 2f       	mov	r25, r24
    4c1e:	81 e0       	ldi	r24, 0x01	; 1
    4c20:	89 27       	eor	r24, r25
    4c22:	88 23       	and	r24, r24
    4c24:	69 f0       	breq	.+26     	; 0x4c40 <__DATA_REGION_LENGTH__+0xc40>
    4c26:	88 a9       	ldd	r24, Y+48	; 0x30
    4c28:	99 a9       	ldd	r25, Y+49	; 0x31
    4c2a:	aa a9       	ldd	r26, Y+50	; 0x32
    4c2c:	bb a9       	ldd	r27, Y+51	; 0x33
    4c2e:	88 87       	std	Y+8, r24	; 0x08
    4c30:	99 87       	std	Y+9, r25	; 0x09
    4c32:	aa 87       	std	Y+10, r26	; 0x0a
    4c34:	bb 87       	std	Y+11, r27	; 0x0b
    4c36:	80 91 95 46 	lds	r24, 0x4695	; 0x804695 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4c3a:	8f 5f       	subi	r24, 0xFF	; 255
    4c3c:	80 93 95 46 	sts	0x4695, r24	; 0x804695 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4c40:	80 91 69 46 	lds	r24, 0x4669	; 0x804669 <g_Event_Configuration_Check>
    4c44:	90 91 6a 46 	lds	r25, 0x466A	; 0x80466a <g_Event_Configuration_Check+0x1>
    4c48:	80 68       	ori	r24, 0x80	; 128
    4c4a:	80 93 69 46 	sts	0x4669, r24	; 0x804669 <g_Event_Configuration_Check>
    4c4e:	90 93 6a 46 	sts	0x466A, r25	; 0x80466a <g_Event_Configuration_Check+0x1>
    4c52:	08 c0       	rjmp	.+16     	; 0x4c64 <__DATA_REGION_LENGTH__+0xc64>
    4c54:	0e 94 3f 75 	call	0xea7e	; 0xea7e <_Z14txGetFrequencyv>
    4c58:	dc 01       	movw	r26, r24
    4c5a:	cb 01       	movw	r24, r22
    4c5c:	88 87       	std	Y+8, r24	; 0x08
    4c5e:	99 87       	std	Y+9, r25	; 0x09
    4c60:	aa 87       	std	Y+10, r26	; 0x0a
    4c62:	bb 87       	std	Y+11, r27	; 0x0b
    4c64:	88 85       	ldd	r24, Y+8	; 0x08
    4c66:	99 85       	ldd	r25, Y+9	; 0x09
    4c68:	aa 85       	ldd	r26, Y+10	; 0x0a
    4c6a:	bb 85       	ldd	r27, Y+11	; 0x0b
    4c6c:	89 2b       	or	r24, r25
    4c6e:	8a 2b       	or	r24, r26
    4c70:	8b 2b       	or	r24, r27
    4c72:	09 f4       	brne	.+2      	; 0x4c76 <__DATA_REGION_LENGTH__+0xc76>
    4c74:	7a c0       	rjmp	.+244    	; 0x4d6a <__DATA_REGION_LENGTH__+0xd6a>
    4c76:	8b 85       	ldd	r24, Y+11	; 0x0b
    4c78:	8f 93       	push	r24
    4c7a:	8a 85       	ldd	r24, Y+10	; 0x0a
    4c7c:	8f 93       	push	r24
    4c7e:	89 85       	ldd	r24, Y+9	; 0x09
    4c80:	8f 93       	push	r24
    4c82:	88 85       	ldd	r24, Y+8	; 0x08
    4c84:	8f 93       	push	r24
    4c86:	89 e4       	ldi	r24, 0x49	; 73
    4c88:	92 e4       	ldi	r25, 0x42	; 66
    4c8a:	89 2f       	mov	r24, r25
    4c8c:	8f 93       	push	r24
    4c8e:	89 e4       	ldi	r24, 0x49	; 73
    4c90:	92 e4       	ldi	r25, 0x42	; 66
    4c92:	8f 93       	push	r24
    4c94:	8e e5       	ldi	r24, 0x5E	; 94
    4c96:	95 e4       	ldi	r25, 0x45	; 69
    4c98:	89 2f       	mov	r24, r25
    4c9a:	8f 93       	push	r24
    4c9c:	8e e5       	ldi	r24, 0x5E	; 94
    4c9e:	95 e4       	ldi	r25, 0x45	; 69
    4ca0:	8f 93       	push	r24
    4ca2:	0e 94 99 7f 	call	0xff32	; 0xff32 <sprintf>
    4ca6:	8d b7       	in	r24, 0x3d	; 61
    4ca8:	9e b7       	in	r25, 0x3e	; 62
    4caa:	08 96       	adiw	r24, 0x08	; 8
    4cac:	cd bf       	out	0x3d, r28	; 61
    4cae:	de bf       	out	0x3e, r29	; 62
    4cb0:	4e e5       	ldi	r20, 0x5E	; 94
    4cb2:	55 e4       	ldi	r21, 0x45	; 69
    4cb4:	6e e4       	ldi	r22, 0x4E	; 78
    4cb6:	72 e4       	ldi	r23, 0x42	; 66
    4cb8:	83 e0       	ldi	r24, 0x03	; 3
    4cba:	0e 94 92 5f 	call	0xbf24	; 0xbf24 <_Z11lb_send_msg13LBMessageTypePKcPc>
    4cbe:	55 c0       	rjmp	.+170    	; 0x4d6a <__DATA_REGION_LENGTH__+0xd6a>
    4cc0:	80 e0       	ldi	r24, 0x00	; 0
    4cc2:	0e 94 0a 30 	call	0x6014	; 0x6014 <_Z15externBatStringb>
    4cc6:	62 e5       	ldi	r22, 0x52	; 82
    4cc8:	72 e4       	ldi	r23, 0x42	; 66
    4cca:	0e 94 e1 5f 	call	0xbfc2	; 0xbfc2 <_Z16lb_broadcast_strPKcS0_>
    4cce:	80 e0       	ldi	r24, 0x00	; 0
    4cd0:	90 e0       	ldi	r25, 0x00	; 0
    4cd2:	0e 94 dd 3d 	call	0x7bba	; 0x7bba <ds3231_get_epoch>
    4cd6:	dc 01       	movw	r26, r24
    4cd8:	cb 01       	movw	r24, r22
    4cda:	bc 01       	movw	r22, r24
    4cdc:	cd 01       	movw	r24, r26
    4cde:	0e 94 91 03 	call	0x722	; 0x722 <set_system_time>
    4ce2:	44 c0       	rjmp	.+136    	; 0x4d6c <__DATA_REGION_LENGTH__+0xd6c>
    4ce4:	0e 94 26 32 	call	0x644c	; 0x644c <_Z12temperatureCv>
    4ce8:	09 2e       	mov	r0, r25
    4cea:	00 0c       	add	r0, r0
    4cec:	aa 0b       	sbc	r26, r26
    4cee:	bb 0b       	sbc	r27, r27
    4cf0:	bc 01       	movw	r22, r24
    4cf2:	cd 01       	movw	r24, r26
    4cf4:	0e 94 e4 7b 	call	0xf7c8	; 0xf7c8 <__floatsisf>
    4cf8:	dc 01       	movw	r26, r24
    4cfa:	cb 01       	movw	r24, r22
    4cfc:	0e e5       	ldi	r16, 0x5E	; 94
    4cfe:	15 e4       	ldi	r17, 0x45	; 69
    4d00:	21 e0       	ldi	r18, 0x01	; 1
    4d02:	44 e0       	ldi	r20, 0x04	; 4
    4d04:	bc 01       	movw	r22, r24
    4d06:	cd 01       	movw	r24, r26
    4d08:	0e 94 a2 7d 	call	0xfb44	; 0xfb44 <dtostrf>
    4d0c:	10 92 63 45 	sts	0x4563, r1	; 0x804563 <_ZL9g_tempStr+0x5>
    4d10:	67 e5       	ldi	r22, 0x57	; 87
    4d12:	72 e4       	ldi	r23, 0x42	; 66
    4d14:	8e e5       	ldi	r24, 0x5E	; 94
    4d16:	95 e4       	ldi	r25, 0x45	; 69
    4d18:	0e 94 e1 5f 	call	0xbfc2	; 0xbfc2 <_Z16lb_broadcast_strPKcS0_>
    4d1c:	27 c0       	rjmp	.+78     	; 0x4d6c <__DATA_REGION_LENGTH__+0xd6c>
    4d1e:	4c e5       	ldi	r20, 0x5C	; 92
    4d20:	52 e4       	ldi	r21, 0x42	; 66
    4d22:	61 e6       	ldi	r22, 0x61	; 97
    4d24:	72 e4       	ldi	r23, 0x42	; 66
    4d26:	83 e0       	ldi	r24, 0x03	; 3
    4d28:	0e 94 92 5f 	call	0xbf24	; 0xbf24 <_Z11lb_send_msg13LBMessageTypePKcPc>
    4d2c:	1f c0       	rjmp	.+62     	; 0x4d6c <__DATA_REGION_LENGTH__+0xd6c>
    4d2e:	19 82       	std	Y+1, r1	; 0x01
    4d30:	85 e6       	ldi	r24, 0x65	; 101
    4d32:	92 e4       	ldi	r25, 0x42	; 66
    4d34:	0e 94 35 5f 	call	0xbe6a	; 0xbe6a <_Z12lb_send_textPc>
    4d38:	19 c0       	rjmp	.+50     	; 0x4d6c <__DATA_REGION_LENGTH__+0xd6c>
    4d3a:	00 00       	nop
    4d3c:	17 c0       	rjmp	.+46     	; 0x4d6c <__DATA_REGION_LENGTH__+0xd6c>
    4d3e:	00 00       	nop
    4d40:	15 c0       	rjmp	.+42     	; 0x4d6c <__DATA_REGION_LENGTH__+0xd6c>
    4d42:	00 00       	nop
    4d44:	13 c0       	rjmp	.+38     	; 0x4d6c <__DATA_REGION_LENGTH__+0xd6c>
    4d46:	00 00       	nop
    4d48:	11 c0       	rjmp	.+34     	; 0x4d6c <__DATA_REGION_LENGTH__+0xd6c>
    4d4a:	00 00       	nop
    4d4c:	0f c0       	rjmp	.+30     	; 0x4d6c <__DATA_REGION_LENGTH__+0xd6c>
    4d4e:	00 00       	nop
    4d50:	0d c0       	rjmp	.+26     	; 0x4d6c <__DATA_REGION_LENGTH__+0xd6c>
    4d52:	00 00       	nop
    4d54:	0b c0       	rjmp	.+22     	; 0x4d6c <__DATA_REGION_LENGTH__+0xd6c>
    4d56:	00 00       	nop
    4d58:	09 c0       	rjmp	.+18     	; 0x4d6c <__DATA_REGION_LENGTH__+0xd6c>
    4d5a:	00 00       	nop
    4d5c:	07 c0       	rjmp	.+14     	; 0x4d6c <__DATA_REGION_LENGTH__+0xd6c>
    4d5e:	00 00       	nop
    4d60:	05 c0       	rjmp	.+10     	; 0x4d6c <__DATA_REGION_LENGTH__+0xd6c>
    4d62:	00 00       	nop
    4d64:	03 c0       	rjmp	.+6      	; 0x4d6c <__DATA_REGION_LENGTH__+0xd6c>
    4d66:	00 00       	nop
    4d68:	01 c0       	rjmp	.+2      	; 0x4d6c <__DATA_REGION_LENGTH__+0xd6c>
    4d6a:	00 00       	nop
    4d6c:	89 81       	ldd	r24, Y+1	; 0x01
    4d6e:	88 23       	and	r24, r24
    4d70:	21 f0       	breq	.+8      	; 0x4d7a <__DATA_REGION_LENGTH__+0xd7a>
    4d72:	8b e6       	ldi	r24, 0x6B	; 107
    4d74:	92 e4       	ldi	r25, 0x42	; 66
    4d76:	0e 94 35 5f 	call	0xbe6a	; 0xbe6a <_Z12lb_send_textPc>
    4d7a:	8c 85       	ldd	r24, Y+12	; 0x0c
    4d7c:	9d 85       	ldd	r25, Y+13	; 0x0d
    4d7e:	fc 01       	movw	r30, r24
    4d80:	11 82       	std	Z+1, r1	; 0x01
    4d82:	12 82       	std	Z+2, r1	; 0x02
    4d84:	2f c8       	rjmp	.-4002   	; 0x3de4 <_Z17handleLinkBusMsgsv+0x16>
    4d86:	00 00       	nop
    4d88:	e3 96       	adiw	r28, 0x33	; 51
    4d8a:	cd bf       	out	0x3d, r28	; 61
    4d8c:	de bf       	out	0x3e, r29	; 62
    4d8e:	df 91       	pop	r29
    4d90:	cf 91       	pop	r28
    4d92:	1f 91       	pop	r17
    4d94:	0f 91       	pop	r16
    4d96:	08 95       	ret

00004d98 <_Z12eventEnabledv>:
    4d98:	cf 93       	push	r28
    4d9a:	df 93       	push	r29
    4d9c:	cd b7       	in	r28, 0x3d	; 61
    4d9e:	de b7       	in	r29, 0x3e	; 62
    4da0:	28 97       	sbiw	r28, 0x08	; 8
    4da2:	cd bf       	out	0x3d, r28	; 61
    4da4:	de bf       	out	0x3e, r29	; 62
    4da6:	20 91 40 46 	lds	r18, 0x4640	; 0x804640 <g_event_start_epoch>
    4daa:	30 91 41 46 	lds	r19, 0x4641	; 0x804641 <g_event_start_epoch+0x1>
    4dae:	40 91 42 46 	lds	r20, 0x4642	; 0x804642 <g_event_start_epoch+0x2>
    4db2:	50 91 43 46 	lds	r21, 0x4643	; 0x804643 <g_event_start_epoch+0x3>
    4db6:	80 91 44 46 	lds	r24, 0x4644	; 0x804644 <g_event_finish_epoch>
    4dba:	90 91 45 46 	lds	r25, 0x4645	; 0x804645 <g_event_finish_epoch+0x1>
    4dbe:	a0 91 46 46 	lds	r26, 0x4646	; 0x804646 <g_event_finish_epoch+0x2>
    4dc2:	b0 91 47 46 	lds	r27, 0x4647	; 0x804647 <g_event_finish_epoch+0x3>
    4dc6:	bc 01       	movw	r22, r24
    4dc8:	cd 01       	movw	r24, r26
    4dca:	0e 94 6f 7a 	call	0xf4de	; 0xf4de <_Z7timeDifmm>
    4dce:	dc 01       	movw	r26, r24
    4dd0:	cb 01       	movw	r24, r22
    4dd2:	89 83       	std	Y+1, r24	; 0x01
    4dd4:	9a 83       	std	Y+2, r25	; 0x02
    4dd6:	ab 83       	std	Y+3, r26	; 0x03
    4dd8:	bc 83       	std	Y+4, r27	; 0x04
    4dda:	80 e0       	ldi	r24, 0x00	; 0
    4ddc:	90 e0       	ldi	r25, 0x00	; 0
    4dde:	0e 94 eb 06 	call	0xdd6	; 0xdd6 <time>
    4de2:	dc 01       	movw	r26, r24
    4de4:	cb 01       	movw	r24, r22
    4de6:	8d 83       	std	Y+5, r24	; 0x05
    4de8:	9e 83       	std	Y+6, r25	; 0x06
    4dea:	af 83       	std	Y+7, r26	; 0x07
    4dec:	b8 87       	std	Y+8, r27	; 0x08
    4dee:	20 91 44 46 	lds	r18, 0x4644	; 0x804644 <g_event_finish_epoch>
    4df2:	30 91 45 46 	lds	r19, 0x4645	; 0x804645 <g_event_finish_epoch+0x1>
    4df6:	40 91 46 46 	lds	r20, 0x4646	; 0x804646 <g_event_finish_epoch+0x2>
    4dfa:	50 91 47 46 	lds	r21, 0x4647	; 0x804647 <g_event_finish_epoch+0x3>
    4dfe:	8d 81       	ldd	r24, Y+5	; 0x05
    4e00:	9e 81       	ldd	r25, Y+6	; 0x06
    4e02:	af 81       	ldd	r26, Y+7	; 0x07
    4e04:	b8 85       	ldd	r27, Y+8	; 0x08
    4e06:	bc 01       	movw	r22, r24
    4e08:	cd 01       	movw	r24, r26
    4e0a:	0e 94 6f 7a 	call	0xf4de	; 0xf4de <_Z7timeDifmm>
    4e0e:	dc 01       	movw	r26, r24
    4e10:	cb 01       	movw	r24, r22
    4e12:	89 83       	std	Y+1, r24	; 0x01
    4e14:	9a 83       	std	Y+2, r25	; 0x02
    4e16:	ab 83       	std	Y+3, r26	; 0x03
    4e18:	bc 83       	std	Y+4, r27	; 0x04
    4e1a:	10 92 4f 46 	sts	0x464F, r1	; 0x80464f <_ZL17g_go_to_sleep_now>
    4e1e:	89 81       	ldd	r24, Y+1	; 0x01
    4e20:	9a 81       	ldd	r25, Y+2	; 0x02
    4e22:	ab 81       	ldd	r26, Y+3	; 0x03
    4e24:	bc 81       	ldd	r27, Y+4	; 0x04
    4e26:	bb 23       	and	r27, r27
    4e28:	9c f0       	brlt	.+38     	; 0x4e50 <_Z12eventEnabledv+0xb8>
    4e2a:	83 e0       	ldi	r24, 0x03	; 3
    4e2c:	80 93 15 40 	sts	0x4015, r24	; 0x804015 <_ZL11g_sleepType>
    4e30:	8f ef       	ldi	r24, 0xFF	; 255
    4e32:	9f ef       	ldi	r25, 0xFF	; 255
    4e34:	dc 01       	movw	r26, r24
    4e36:	80 93 51 46 	sts	0x4651, r24	; 0x804651 <_ZL17g_time_to_wake_up>
    4e3a:	90 93 52 46 	sts	0x4652, r25	; 0x804652 <_ZL17g_time_to_wake_up+0x1>
    4e3e:	a0 93 53 46 	sts	0x4653, r26	; 0x804653 <_ZL17g_time_to_wake_up+0x2>
    4e42:	b0 93 54 46 	sts	0x4654, r27	; 0x804654 <_ZL17g_time_to_wake_up+0x3>
    4e46:	82 e0       	ldi	r24, 0x02	; 2
    4e48:	80 93 ce 45 	sts	0x45CE, r24	; 0x8045ce <_ZL19g_wifi_enable_delay>
    4e4c:	80 e0       	ldi	r24, 0x00	; 0
    4e4e:	50 c0       	rjmp	.+160    	; 0x4ef0 <_Z12eventEnabledv+0x158>
    4e50:	81 e0       	ldi	r24, 0x01	; 1
    4e52:	0e 94 50 75 	call	0xeaa0	; 0xeaa0 <_Z18powerToTransmitterb>
    4e56:	20 91 40 46 	lds	r18, 0x4640	; 0x804640 <g_event_start_epoch>
    4e5a:	30 91 41 46 	lds	r19, 0x4641	; 0x804641 <g_event_start_epoch+0x1>
    4e5e:	40 91 42 46 	lds	r20, 0x4642	; 0x804642 <g_event_start_epoch+0x2>
    4e62:	50 91 43 46 	lds	r21, 0x4643	; 0x804643 <g_event_start_epoch+0x3>
    4e66:	8d 81       	ldd	r24, Y+5	; 0x05
    4e68:	9e 81       	ldd	r25, Y+6	; 0x06
    4e6a:	af 81       	ldd	r26, Y+7	; 0x07
    4e6c:	b8 85       	ldd	r27, Y+8	; 0x08
    4e6e:	bc 01       	movw	r22, r24
    4e70:	cd 01       	movw	r24, r26
    4e72:	0e 94 6f 7a 	call	0xf4de	; 0xf4de <_Z7timeDifmm>
    4e76:	dc 01       	movw	r26, r24
    4e78:	cb 01       	movw	r24, r22
    4e7a:	89 83       	std	Y+1, r24	; 0x01
    4e7c:	9a 83       	std	Y+2, r25	; 0x02
    4e7e:	ab 83       	std	Y+3, r26	; 0x03
    4e80:	bc 83       	std	Y+4, r27	; 0x04
    4e82:	89 81       	ldd	r24, Y+1	; 0x01
    4e84:	9a 81       	ldd	r25, Y+2	; 0x02
    4e86:	ab 81       	ldd	r26, Y+3	; 0x03
    4e88:	bc 81       	ldd	r27, Y+4	; 0x04
    4e8a:	88 38       	cpi	r24, 0x88	; 136
    4e8c:	9f 4f       	sbci	r25, 0xFF	; 255
    4e8e:	af 4f       	sbci	r26, 0xFF	; 255
    4e90:	bf 4f       	sbci	r27, 0xFF	; 255
    4e92:	bc f0       	brlt	.+46     	; 0x4ec2 <_Z12eventEnabledv+0x12a>
    4e94:	10 92 15 40 	sts	0x4015, r1	; 0x804015 <_ZL11g_sleepType>
    4e98:	80 91 40 46 	lds	r24, 0x4640	; 0x804640 <g_event_start_epoch>
    4e9c:	90 91 41 46 	lds	r25, 0x4641	; 0x804641 <g_event_start_epoch+0x1>
    4ea0:	a0 91 42 46 	lds	r26, 0x4642	; 0x804642 <g_event_start_epoch+0x2>
    4ea4:	b0 91 43 46 	lds	r27, 0x4643	; 0x804643 <g_event_start_epoch+0x3>
    4ea8:	05 97       	sbiw	r24, 0x05	; 5
    4eaa:	a1 09       	sbc	r26, r1
    4eac:	b1 09       	sbc	r27, r1
    4eae:	80 93 51 46 	sts	0x4651, r24	; 0x804651 <_ZL17g_time_to_wake_up>
    4eb2:	90 93 52 46 	sts	0x4652, r25	; 0x804652 <_ZL17g_time_to_wake_up+0x1>
    4eb6:	a0 93 53 46 	sts	0x4653, r26	; 0x804653 <_ZL17g_time_to_wake_up+0x2>
    4eba:	b0 93 54 46 	sts	0x4654, r27	; 0x804654 <_ZL17g_time_to_wake_up+0x3>
    4ebe:	81 e0       	ldi	r24, 0x01	; 1
    4ec0:	17 c0       	rjmp	.+46     	; 0x4ef0 <_Z12eventEnabledv+0x158>
    4ec2:	80 91 40 46 	lds	r24, 0x4640	; 0x804640 <g_event_start_epoch>
    4ec6:	90 91 41 46 	lds	r25, 0x4641	; 0x804641 <g_event_start_epoch+0x1>
    4eca:	a0 91 42 46 	lds	r26, 0x4642	; 0x804642 <g_event_start_epoch+0x2>
    4ece:	b0 91 43 46 	lds	r27, 0x4643	; 0x804643 <g_event_start_epoch+0x3>
    4ed2:	05 97       	sbiw	r24, 0x05	; 5
    4ed4:	a1 09       	sbc	r26, r1
    4ed6:	b1 09       	sbc	r27, r1
    4ed8:	80 93 51 46 	sts	0x4651, r24	; 0x804651 <_ZL17g_time_to_wake_up>
    4edc:	90 93 52 46 	sts	0x4652, r25	; 0x804652 <_ZL17g_time_to_wake_up+0x1>
    4ee0:	a0 93 53 46 	sts	0x4653, r26	; 0x804653 <_ZL17g_time_to_wake_up+0x2>
    4ee4:	b0 93 54 46 	sts	0x4654, r27	; 0x804654 <_ZL17g_time_to_wake_up+0x3>
    4ee8:	81 e0       	ldi	r24, 0x01	; 1
    4eea:	80 93 15 40 	sts	0x4015, r24	; 0x804015 <_ZL11g_sleepType>
    4eee:	81 e0       	ldi	r24, 0x01	; 1
    4ef0:	28 96       	adiw	r28, 0x08	; 8
    4ef2:	cd bf       	out	0x3d, r28	; 61
    4ef4:	de bf       	out	0x3e, r29	; 62
    4ef6:	df 91       	pop	r29
    4ef8:	cf 91       	pop	r28
    4efa:	08 95       	ret

00004efc <_Z8wdt_init7WDReset>:
    4efc:	cf 93       	push	r28
    4efe:	df 93       	push	r29
    4f00:	1f 92       	push	r1
    4f02:	cd b7       	in	r28, 0x3d	; 61
    4f04:	de b7       	in	r29, 0x3e	; 62
    4f06:	89 83       	std	Y+1, r24	; 0x01
    4f08:	00 00       	nop
    4f0a:	0f 90       	pop	r0
    4f0c:	df 91       	pop	r29
    4f0e:	cf 91       	pop	r28
    4f10:	08 95       	ret

00004f12 <_Z13throttleValueh>:
    4f12:	cf 93       	push	r28
    4f14:	df 93       	push	r29
    4f16:	cd b7       	in	r28, 0x3d	; 61
    4f18:	de b7       	in	r29, 0x3e	; 62
    4f1a:	2a 97       	sbiw	r28, 0x0a	; 10
    4f1c:	cd bf       	out	0x3d, r28	; 61
    4f1e:	de bf       	out	0x3e, r29	; 62
    4f20:	8a 87       	std	Y+10, r24	; 0x0a
    4f22:	8a 85       	ldd	r24, Y+10	; 0x0a
    4f24:	89 83       	std	Y+1, r24	; 0x01
    4f26:	85 e0       	ldi	r24, 0x05	; 5
    4f28:	90 e0       	ldi	r25, 0x00	; 0
    4f2a:	8a 83       	std	Y+2, r24	; 0x02
    4f2c:	9b 83       	std	Y+3, r25	; 0x03
    4f2e:	84 e1       	ldi	r24, 0x14	; 20
    4f30:	90 e0       	ldi	r25, 0x00	; 0
    4f32:	8c 83       	std	Y+4, r24	; 0x04
    4f34:	9d 83       	std	Y+5, r25	; 0x05
    4f36:	89 81       	ldd	r24, Y+1	; 0x01
    4f38:	28 2f       	mov	r18, r24
    4f3a:	88 0f       	add	r24, r24
    4f3c:	33 0b       	sbc	r19, r19
    4f3e:	8c 81       	ldd	r24, Y+4	; 0x04
    4f40:	9d 81       	ldd	r25, Y+5	; 0x05
    4f42:	82 17       	cp	r24, r18
    4f44:	93 07       	cpc	r25, r19
    4f46:	5c f0       	brlt	.+22     	; 0x4f5e <_Z13throttleValueh+0x4c>
    4f48:	89 81       	ldd	r24, Y+1	; 0x01
    4f4a:	08 2e       	mov	r0, r24
    4f4c:	00 0c       	add	r0, r0
    4f4e:	99 0b       	sbc	r25, r25
    4f50:	2a 81       	ldd	r18, Y+2	; 0x02
    4f52:	3b 81       	ldd	r19, Y+3	; 0x03
    4f54:	82 17       	cp	r24, r18
    4f56:	93 07       	cpc	r25, r19
    4f58:	24 f4       	brge	.+8      	; 0x4f62 <_Z13throttleValueh+0x50>
    4f5a:	c9 01       	movw	r24, r18
    4f5c:	02 c0       	rjmp	.+4      	; 0x4f62 <_Z13throttleValueh+0x50>
    4f5e:	8c 81       	ldd	r24, Y+4	; 0x04
    4f60:	9d 81       	ldd	r25, Y+5	; 0x05
    4f62:	8a 87       	std	Y+10, r24	; 0x0a
    4f64:	8a 85       	ldd	r24, Y+10	; 0x0a
    4f66:	28 2f       	mov	r18, r24
    4f68:	30 e0       	ldi	r19, 0x00	; 0
    4f6a:	40 e0       	ldi	r20, 0x00	; 0
    4f6c:	50 e0       	ldi	r21, 0x00	; 0
    4f6e:	88 ed       	ldi	r24, 0xD8	; 216
    4f70:	9d e0       	ldi	r25, 0x0D	; 13
    4f72:	a0 e0       	ldi	r26, 0x00	; 0
    4f74:	b0 e0       	ldi	r27, 0x00	; 0
    4f76:	bc 01       	movw	r22, r24
    4f78:	cd 01       	movw	r24, r26
    4f7a:	0e 94 60 7d 	call	0xfac0	; 0xfac0 <__divmodsi4>
    4f7e:	da 01       	movw	r26, r20
    4f80:	c9 01       	movw	r24, r18
    4f82:	2a e0       	ldi	r18, 0x0A	; 10
    4f84:	30 e0       	ldi	r19, 0x00	; 0
    4f86:	40 e0       	ldi	r20, 0x00	; 0
    4f88:	50 e0       	ldi	r21, 0x00	; 0
    4f8a:	bc 01       	movw	r22, r24
    4f8c:	cd 01       	movw	r24, r26
    4f8e:	0e 94 60 7d 	call	0xfac0	; 0xfac0 <__divmodsi4>
    4f92:	da 01       	movw	r26, r20
    4f94:	c9 01       	movw	r24, r18
    4f96:	bc 01       	movw	r22, r24
    4f98:	cd 01       	movw	r24, r26
    4f9a:	0e 94 e4 7b 	call	0xf7c8	; 0xf7c8 <__floatsisf>
    4f9e:	dc 01       	movw	r26, r24
    4fa0:	cb 01       	movw	r24, r22
    4fa2:	8e 83       	std	Y+6, r24	; 0x06
    4fa4:	9f 83       	std	Y+7, r25	; 0x07
    4fa6:	a8 87       	std	Y+8, r26	; 0x08
    4fa8:	b9 87       	std	Y+9, r27	; 0x09
    4faa:	6e 81       	ldd	r22, Y+6	; 0x06
    4fac:	7f 81       	ldd	r23, Y+7	; 0x07
    4fae:	88 85       	ldd	r24, Y+8	; 0x08
    4fb0:	99 85       	ldd	r25, Y+9	; 0x09
    4fb2:	0e 94 b3 7b 	call	0xf766	; 0xf766 <__fixunssfsi>
    4fb6:	dc 01       	movw	r26, r24
    4fb8:	cb 01       	movw	r24, r22
    4fba:	2a 96       	adiw	r28, 0x0a	; 10
    4fbc:	cd bf       	out	0x3d, r28	; 61
    4fbe:	de bf       	out	0x3e, r29	; 62
    4fc0:	df 91       	pop	r29
    4fc2:	cf 91       	pop	r28
    4fc4:	08 95       	ret

00004fc6 <_Z11launchEventP2SC>:
    4fc6:	cf 93       	push	r28
    4fc8:	df 93       	push	r29
    4fca:	00 d0       	rcall	.+0      	; 0x4fcc <_Z11launchEventP2SC+0x6>
    4fcc:	1f 92       	push	r1
    4fce:	cd b7       	in	r28, 0x3d	; 61
    4fd0:	de b7       	in	r29, 0x3e	; 62
    4fd2:	8a 83       	std	Y+2, r24	; 0x02
    4fd4:	9b 83       	std	Y+3, r25	; 0x03
    4fd6:	80 e0       	ldi	r24, 0x00	; 0
    4fd8:	90 e0       	ldi	r25, 0x00	; 0
    4fda:	0e 94 dd 3d 	call	0x7bba	; 0x7bba <ds3231_get_epoch>
    4fde:	dc 01       	movw	r26, r24
    4fe0:	cb 01       	movw	r24, r22
    4fe2:	bc 01       	movw	r22, r24
    4fe4:	cd 01       	movw	r24, r26
    4fe6:	0e 94 91 03 	call	0x722	; 0x722 <set_system_time>
    4fea:	8a 81       	ldd	r24, Y+2	; 0x02
    4fec:	9b 81       	ldd	r25, Y+3	; 0x03
    4fee:	0e 94 18 28 	call	0x5030	; 0x5030 <_Z33activateEventUsingCurrentSettingsP2SC>
    4ff2:	89 83       	std	Y+1, r24	; 0x01
    4ff4:	8a 81       	ldd	r24, Y+2	; 0x02
    4ff6:	9b 81       	ldd	r25, Y+3	; 0x03
    4ff8:	fc 01       	movw	r30, r24
    4ffa:	80 81       	ld	r24, Z
    4ffc:	88 23       	and	r24, r24
    4ffe:	31 f0       	breq	.+12     	; 0x500c <_Z11launchEventP2SC+0x46>
    5000:	8a 81       	ldd	r24, Y+2	; 0x02
    5002:	9b 81       	ldd	r25, Y+3	; 0x03
    5004:	fc 01       	movw	r30, r24
    5006:	80 81       	ld	r24, Z
    5008:	80 93 c3 45 	sts	0x45C3, r24	; 0x8045c3 <_ZL18g_last_status_code>
    500c:	89 81       	ldd	r24, Y+1	; 0x01
    500e:	88 23       	and	r24, r24
    5010:	21 f0       	breq	.+8      	; 0x501a <_Z11launchEventP2SC+0x54>
    5012:	89 81       	ldd	r24, Y+1	; 0x01
    5014:	80 93 c2 45 	sts	0x45C2, r24	; 0x8045c2 <_ZL17g_last_error_code>
    5018:	04 c0       	rjmp	.+8      	; 0x5022 <_Z11launchEventP2SC+0x5c>
    501a:	0e 94 cc 26 	call	0x4d98	; 0x4d98 <_Z12eventEnabledv>
    501e:	80 93 48 46 	sts	0x4648, r24	; 0x804648 <g_event_enabled>
    5022:	89 81       	ldd	r24, Y+1	; 0x01
    5024:	23 96       	adiw	r28, 0x03	; 3
    5026:	cd bf       	out	0x3d, r28	; 61
    5028:	de bf       	out	0x3e, r29	; 62
    502a:	df 91       	pop	r29
    502c:	cf 91       	pop	r28
    502e:	08 95       	ret

00005030 <_Z33activateEventUsingCurrentSettingsP2SC>:
    5030:	cf 93       	push	r28
    5032:	df 93       	push	r29
    5034:	cd b7       	in	r28, 0x3d	; 61
    5036:	de b7       	in	r29, 0x3e	; 62
    5038:	63 97       	sbiw	r28, 0x13	; 19
    503a:	cd bf       	out	0x3d, r28	; 61
    503c:	de bf       	out	0x3e, r29	; 62
    503e:	8a 8b       	std	Y+18, r24	; 0x12
    5040:	9b 8b       	std	Y+19, r25	; 0x13
    5042:	80 91 40 46 	lds	r24, 0x4640	; 0x804640 <g_event_start_epoch>
    5046:	90 91 41 46 	lds	r25, 0x4641	; 0x804641 <g_event_start_epoch+0x1>
    504a:	a0 91 42 46 	lds	r26, 0x4642	; 0x804642 <g_event_start_epoch+0x2>
    504e:	b0 91 43 46 	lds	r27, 0x4643	; 0x804643 <g_event_start_epoch+0x3>
    5052:	21 e0       	ldi	r18, 0x01	; 1
    5054:	89 2b       	or	r24, r25
    5056:	8a 2b       	or	r24, r26
    5058:	8b 2b       	or	r24, r27
    505a:	09 f0       	breq	.+2      	; 0x505e <_Z33activateEventUsingCurrentSettingsP2SC+0x2e>
    505c:	20 e0       	ldi	r18, 0x00	; 0
    505e:	22 23       	and	r18, r18
    5060:	11 f0       	breq	.+4      	; 0x5066 <_Z33activateEventUsingCurrentSettingsP2SC+0x36>
    5062:	8c ec       	ldi	r24, 0xCC	; 204
    5064:	f8 c1       	rjmp	.+1008   	; 0x5456 <_Z33activateEventUsingCurrentSettingsP2SC+0x426>
    5066:	20 91 40 46 	lds	r18, 0x4640	; 0x804640 <g_event_start_epoch>
    506a:	30 91 41 46 	lds	r19, 0x4641	; 0x804641 <g_event_start_epoch+0x1>
    506e:	40 91 42 46 	lds	r20, 0x4642	; 0x804642 <g_event_start_epoch+0x2>
    5072:	50 91 43 46 	lds	r21, 0x4643	; 0x804643 <g_event_start_epoch+0x3>
    5076:	80 91 44 46 	lds	r24, 0x4644	; 0x804644 <g_event_finish_epoch>
    507a:	90 91 45 46 	lds	r25, 0x4645	; 0x804645 <g_event_finish_epoch+0x1>
    507e:	a0 91 46 46 	lds	r26, 0x4646	; 0x804646 <g_event_finish_epoch+0x2>
    5082:	b0 91 47 46 	lds	r27, 0x4647	; 0x804647 <g_event_finish_epoch+0x3>
    5086:	61 e0       	ldi	r22, 0x01	; 1
    5088:	28 17       	cp	r18, r24
    508a:	39 07       	cpc	r19, r25
    508c:	4a 07       	cpc	r20, r26
    508e:	5b 07       	cpc	r21, r27
    5090:	08 f4       	brcc	.+2      	; 0x5094 <_Z33activateEventUsingCurrentSettingsP2SC+0x64>
    5092:	60 e0       	ldi	r22, 0x00	; 0
    5094:	66 23       	and	r22, r22
    5096:	11 f0       	breq	.+4      	; 0x509c <_Z33activateEventUsingCurrentSettingsP2SC+0x6c>
    5098:	8d ec       	ldi	r24, 0xCD	; 205
    509a:	dd c1       	rjmp	.+954    	; 0x5456 <_Z33activateEventUsingCurrentSettingsP2SC+0x426>
    509c:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_on_air_seconds>
    50a0:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_on_air_seconds+0x1>
    50a4:	21 e0       	ldi	r18, 0x01	; 1
    50a6:	89 2b       	or	r24, r25
    50a8:	09 f0       	breq	.+2      	; 0x50ac <_Z33activateEventUsingCurrentSettingsP2SC+0x7c>
    50aa:	20 e0       	ldi	r18, 0x00	; 0
    50ac:	22 23       	and	r18, r18
    50ae:	11 f0       	breq	.+4      	; 0x50b4 <_Z33activateEventUsingCurrentSettingsP2SC+0x84>
    50b0:	8b ec       	ldi	r24, 0xCB	; 203
    50b2:	d1 c1       	rjmp	.+930    	; 0x5456 <_Z33activateEventUsingCurrentSettingsP2SC+0x426>
    50b4:	20 91 11 40 	lds	r18, 0x4011	; 0x804011 <g_off_air_seconds>
    50b8:	30 91 12 40 	lds	r19, 0x4012	; 0x804012 <g_off_air_seconds+0x1>
    50bc:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_on_air_seconds>
    50c0:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_on_air_seconds+0x1>
    50c4:	28 0f       	add	r18, r24
    50c6:	39 1f       	adc	r19, r25
    50c8:	80 91 3e 46 	lds	r24, 0x463E	; 0x80463e <g_intra_cycle_delay_time>
    50cc:	90 91 3f 46 	lds	r25, 0x463F	; 0x80463f <g_intra_cycle_delay_time+0x1>
    50d0:	41 e0       	ldi	r20, 0x01	; 1
    50d2:	28 17       	cp	r18, r24
    50d4:	39 07       	cpc	r19, r25
    50d6:	0c f0       	brlt	.+2      	; 0x50da <_Z33activateEventUsingCurrentSettingsP2SC+0xaa>
    50d8:	40 e0       	ldi	r20, 0x00	; 0
    50da:	44 23       	and	r20, r20
    50dc:	11 f0       	breq	.+4      	; 0x50e2 <_Z33activateEventUsingCurrentSettingsP2SC+0xb2>
    50de:	8a ec       	ldi	r24, 0xCA	; 202
    50e0:	ba c1       	rjmp	.+884    	; 0x5456 <_Z33activateEventUsingCurrentSettingsP2SC+0x426>
    50e2:	80 91 d3 45 	lds	r24, 0x45D3	; 0x8045d3 <g_messages_text>
    50e6:	88 23       	and	r24, r24
    50e8:	11 f4       	brne	.+4      	; 0x50ee <_Z33activateEventUsingCurrentSettingsP2SC+0xbe>
    50ea:	89 ec       	ldi	r24, 0xC9	; 201
    50ec:	b4 c1       	rjmp	.+872    	; 0x5456 <_Z33activateEventUsingCurrentSettingsP2SC+0x426>
    50ee:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_pattern_codespeed>
    50f2:	81 e0       	ldi	r24, 0x01	; 1
    50f4:	99 23       	and	r25, r25
    50f6:	09 f0       	breq	.+2      	; 0x50fa <_Z33activateEventUsingCurrentSettingsP2SC+0xca>
    50f8:	80 e0       	ldi	r24, 0x00	; 0
    50fa:	88 23       	and	r24, r24
    50fc:	11 f0       	breq	.+4      	; 0x5102 <_Z33activateEventUsingCurrentSettingsP2SC+0xd2>
    50fe:	88 ec       	ldi	r24, 0xC8	; 200
    5100:	aa c1       	rjmp	.+852    	; 0x5456 <_Z33activateEventUsingCurrentSettingsP2SC+0x426>
    5102:	80 91 27 46 	lds	r24, 0x4627	; 0x804627 <g_messages_text+0x54>
    5106:	88 23       	and	r24, r24
    5108:	c1 f0       	breq	.+48     	; 0x513a <_Z33activateEventUsingCurrentSettingsP2SC+0x10a>
    510a:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_id_codespeed>
    510e:	88 23       	and	r24, r24
    5110:	31 f0       	breq	.+12     	; 0x511e <_Z33activateEventUsingCurrentSettingsP2SC+0xee>
    5112:	80 91 13 40 	lds	r24, 0x4013	; 0x804013 <g_ID_period_seconds>
    5116:	90 91 14 40 	lds	r25, 0x4014	; 0x804014 <g_ID_period_seconds+0x1>
    511a:	89 2b       	or	r24, r25
    511c:	11 f4       	brne	.+4      	; 0x5122 <_Z33activateEventUsingCurrentSettingsP2SC+0xf2>
    511e:	81 e0       	ldi	r24, 0x01	; 1
    5120:	01 c0       	rjmp	.+2      	; 0x5124 <_Z33activateEventUsingCurrentSettingsP2SC+0xf4>
    5122:	80 e0       	ldi	r24, 0x00	; 0
    5124:	88 23       	and	r24, r24
    5126:	11 f0       	breq	.+4      	; 0x512c <_Z33activateEventUsingCurrentSettingsP2SC+0xfc>
    5128:	87 ec       	ldi	r24, 0xC7	; 199
    512a:	95 c1       	rjmp	.+810    	; 0x5456 <_Z33activateEventUsingCurrentSettingsP2SC+0x426>
    512c:	0e 94 cc 2e 	call	0x5d98	; 0x5d98 <_Z15timeNeededForIDv>
    5130:	80 93 3c 46 	sts	0x463C, r24	; 0x80463c <g_time_needed_for_ID>
    5134:	90 93 3d 46 	sts	0x463D, r25	; 0x80463d <g_time_needed_for_ID+0x1>
    5138:	04 c0       	rjmp	.+8      	; 0x5142 <_Z33activateEventUsingCurrentSettingsP2SC+0x112>
    513a:	10 92 3c 46 	sts	0x463C, r1	; 0x80463c <g_time_needed_for_ID>
    513e:	10 92 3d 46 	sts	0x463D, r1	; 0x80463d <g_time_needed_for_ID+0x1>
    5142:	80 e0       	ldi	r24, 0x00	; 0
    5144:	90 e0       	ldi	r25, 0x00	; 0
    5146:	0e 94 eb 06 	call	0xdd6	; 0xdd6 <time>
    514a:	dc 01       	movw	r26, r24
    514c:	cb 01       	movw	r24, r22
    514e:	8a 83       	std	Y+2, r24	; 0x02
    5150:	9b 83       	std	Y+3, r25	; 0x03
    5152:	ac 83       	std	Y+4, r26	; 0x04
    5154:	bd 83       	std	Y+5, r27	; 0x05
    5156:	20 91 44 46 	lds	r18, 0x4644	; 0x804644 <g_event_finish_epoch>
    515a:	30 91 45 46 	lds	r19, 0x4645	; 0x804645 <g_event_finish_epoch+0x1>
    515e:	40 91 46 46 	lds	r20, 0x4646	; 0x804646 <g_event_finish_epoch+0x2>
    5162:	50 91 47 46 	lds	r21, 0x4647	; 0x804647 <g_event_finish_epoch+0x3>
    5166:	61 e0       	ldi	r22, 0x01	; 1
    5168:	8a 81       	ldd	r24, Y+2	; 0x02
    516a:	9b 81       	ldd	r25, Y+3	; 0x03
    516c:	ac 81       	ldd	r26, Y+4	; 0x04
    516e:	bd 81       	ldd	r27, Y+5	; 0x05
    5170:	28 17       	cp	r18, r24
    5172:	39 07       	cpc	r19, r25
    5174:	4a 07       	cpc	r20, r26
    5176:	5b 07       	cpc	r21, r27
    5178:	08 f0       	brcs	.+2      	; 0x517c <_Z33activateEventUsingCurrentSettingsP2SC+0x14c>
    517a:	60 e0       	ldi	r22, 0x00	; 0
    517c:	66 23       	and	r22, r22
    517e:	59 f0       	breq	.+22     	; 0x5196 <_Z33activateEventUsingCurrentSettingsP2SC+0x166>
    5180:	8a 89       	ldd	r24, Y+18	; 0x12
    5182:	9b 89       	ldd	r25, Y+19	; 0x13
    5184:	89 2b       	or	r24, r25
    5186:	09 f4       	brne	.+2      	; 0x518a <_Z33activateEventUsingCurrentSettingsP2SC+0x15a>
    5188:	65 c1       	rjmp	.+714    	; 0x5454 <_Z33activateEventUsingCurrentSettingsP2SC+0x424>
    518a:	8a 89       	ldd	r24, Y+18	; 0x12
    518c:	9b 89       	ldd	r25, Y+19	; 0x13
    518e:	2a ef       	ldi	r18, 0xFA	; 250
    5190:	fc 01       	movw	r30, r24
    5192:	20 83       	st	Z, r18
    5194:	5f c1       	rjmp	.+702    	; 0x5454 <_Z33activateEventUsingCurrentSettingsP2SC+0x424>
    5196:	20 91 40 46 	lds	r18, 0x4640	; 0x804640 <g_event_start_epoch>
    519a:	30 91 41 46 	lds	r19, 0x4641	; 0x804641 <g_event_start_epoch+0x1>
    519e:	40 91 42 46 	lds	r20, 0x4642	; 0x804642 <g_event_start_epoch+0x2>
    51a2:	50 91 43 46 	lds	r21, 0x4643	; 0x804643 <g_event_start_epoch+0x3>
    51a6:	8a 81       	ldd	r24, Y+2	; 0x02
    51a8:	9b 81       	ldd	r25, Y+3	; 0x03
    51aa:	ac 81       	ldd	r26, Y+4	; 0x04
    51ac:	bd 81       	ldd	r27, Y+5	; 0x05
    51ae:	bc 01       	movw	r22, r24
    51b0:	cd 01       	movw	r24, r26
    51b2:	0e 94 6f 7a 	call	0xf4de	; 0xf4de <_Z7timeDifmm>
    51b6:	dc 01       	movw	r26, r24
    51b8:	cb 01       	movw	r24, r22
    51ba:	8e 83       	std	Y+6, r24	; 0x06
    51bc:	9f 83       	std	Y+7, r25	; 0x07
    51be:	a8 87       	std	Y+8, r26	; 0x08
    51c0:	b9 87       	std	Y+9, r27	; 0x09
    51c2:	8e 81       	ldd	r24, Y+6	; 0x06
    51c4:	9f 81       	ldd	r25, Y+7	; 0x07
    51c6:	a8 85       	ldd	r26, Y+8	; 0x08
    51c8:	b9 85       	ldd	r27, Y+9	; 0x09
    51ca:	bb 23       	and	r27, r27
    51cc:	0c f4       	brge	.+2      	; 0x51d0 <_Z33activateEventUsingCurrentSettingsP2SC+0x1a0>
    51ce:	34 c1       	rjmp	.+616    	; 0x5438 <_Z33activateEventUsingCurrentSettingsP2SC+0x408>
    51d0:	19 82       	std	Y+1, r1	; 0x01
    51d2:	20 91 0f 40 	lds	r18, 0x400F	; 0x80400f <g_on_air_seconds>
    51d6:	30 91 10 40 	lds	r19, 0x4010	; 0x804010 <g_on_air_seconds+0x1>
    51da:	80 91 11 40 	lds	r24, 0x4011	; 0x804011 <g_off_air_seconds>
    51de:	90 91 12 40 	lds	r25, 0x4012	; 0x804012 <g_off_air_seconds+0x1>
    51e2:	82 0f       	add	r24, r18
    51e4:	93 1f       	adc	r25, r19
    51e6:	8a 87       	std	Y+10, r24	; 0x0a
    51e8:	9b 87       	std	Y+11, r25	; 0x0b
    51ea:	8a 85       	ldd	r24, Y+10	; 0x0a
    51ec:	9b 85       	ldd	r25, Y+11	; 0x0b
    51ee:	9c 01       	movw	r18, r24
    51f0:	99 0f       	add	r25, r25
    51f2:	44 0b       	sbc	r20, r20
    51f4:	55 0b       	sbc	r21, r21
    51f6:	8e 81       	ldd	r24, Y+6	; 0x06
    51f8:	9f 81       	ldd	r25, Y+7	; 0x07
    51fa:	a8 85       	ldd	r26, Y+8	; 0x08
    51fc:	b9 85       	ldd	r27, Y+9	; 0x09
    51fe:	bc 01       	movw	r22, r24
    5200:	cd 01       	movw	r24, r26
    5202:	0e 94 60 7d 	call	0xfac0	; 0xfac0 <__divmodsi4>
    5206:	dc 01       	movw	r26, r24
    5208:	cb 01       	movw	r24, r22
    520a:	8c 87       	std	Y+12, r24	; 0x0c
    520c:	9d 87       	std	Y+13, r25	; 0x0d
    520e:	20 91 3e 46 	lds	r18, 0x463E	; 0x80463e <g_intra_cycle_delay_time>
    5212:	30 91 3f 46 	lds	r19, 0x463F	; 0x80463f <g_intra_cycle_delay_time+0x1>
    5216:	8c 85       	ldd	r24, Y+12	; 0x0c
    5218:	9d 85       	ldd	r25, Y+13	; 0x0d
    521a:	a9 01       	movw	r20, r18
    521c:	48 1b       	sub	r20, r24
    521e:	59 0b       	sbc	r21, r25
    5220:	ca 01       	movw	r24, r20
    5222:	8e 87       	std	Y+14, r24	; 0x0e
    5224:	9f 87       	std	Y+15, r25	; 0x0f
    5226:	8e 85       	ldd	r24, Y+14	; 0x0e
    5228:	9f 85       	ldd	r25, Y+15	; 0x0f
    522a:	18 16       	cp	r1, r24
    522c:	19 06       	cpc	r1, r25
    522e:	0c f4       	brge	.+2      	; 0x5232 <_Z33activateEventUsingCurrentSettingsP2SC+0x202>
    5230:	a8 c0       	rjmp	.+336    	; 0x5382 <_Z33activateEventUsingCurrentSettingsP2SC+0x352>
    5232:	8e 85       	ldd	r24, Y+14	; 0x0e
    5234:	9f 85       	ldd	r25, Y+15	; 0x0f
    5236:	22 27       	eor	r18, r18
    5238:	33 27       	eor	r19, r19
    523a:	28 1b       	sub	r18, r24
    523c:	39 0b       	sbc	r19, r25
    523e:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_on_air_seconds>
    5242:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_on_air_seconds+0x1>
    5246:	41 e0       	ldi	r20, 0x01	; 1
    5248:	28 17       	cp	r18, r24
    524a:	39 07       	cpc	r19, r25
    524c:	0c f4       	brge	.+2      	; 0x5250 <_Z33activateEventUsingCurrentSettingsP2SC+0x220>
    524e:	40 e0       	ldi	r20, 0x00	; 0
    5250:	44 23       	and	r20, r20
    5252:	09 f4       	brne	.+2      	; 0x5256 <_Z33activateEventUsingCurrentSettingsP2SC+0x226>
    5254:	41 c0       	rjmp	.+130    	; 0x52d8 <_Z33activateEventUsingCurrentSettingsP2SC+0x2a8>
    5256:	2a 85       	ldd	r18, Y+10	; 0x0a
    5258:	3b 85       	ldd	r19, Y+11	; 0x0b
    525a:	8e 85       	ldd	r24, Y+14	; 0x0e
    525c:	9f 85       	ldd	r25, Y+15	; 0x0f
    525e:	82 0f       	add	r24, r18
    5260:	93 1f       	adc	r25, r19
    5262:	91 95       	neg	r25
    5264:	81 95       	neg	r24
    5266:	91 09       	sbc	r25, r1
    5268:	09 2e       	mov	r0, r25
    526a:	00 0c       	add	r0, r0
    526c:	aa 0b       	sbc	r26, r26
    526e:	bb 0b       	sbc	r27, r27
    5270:	80 93 c7 45 	sts	0x45C7, r24	; 0x8045c7 <_ZL12g_on_the_air>
    5274:	90 93 c8 45 	sts	0x45C8, r25	; 0x8045c8 <_ZL12g_on_the_air+0x1>
    5278:	a0 93 c9 45 	sts	0x45C9, r26	; 0x8045c9 <_ZL12g_on_the_air+0x2>
    527c:	b0 93 ca 45 	sts	0x45CA, r27	; 0x8045ca <_ZL12g_on_the_air+0x3>
    5280:	8a 89       	ldd	r24, Y+18	; 0x12
    5282:	9b 89       	ldd	r25, Y+19	; 0x13
    5284:	89 2b       	or	r24, r25
    5286:	29 f0       	breq	.+10     	; 0x5292 <_Z33activateEventUsingCurrentSettingsP2SC+0x262>
    5288:	8a 89       	ldd	r24, Y+18	; 0x12
    528a:	9b 89       	ldd	r25, Y+19	; 0x13
    528c:	2e ef       	ldi	r18, 0xFE	; 254
    528e:	fc 01       	movw	r30, r24
    5290:	20 83       	st	Z, r18
    5292:	90 91 48 46 	lds	r25, 0x4648	; 0x804648 <g_event_enabled>
    5296:	81 e0       	ldi	r24, 0x01	; 1
    5298:	89 27       	eor	r24, r25
    529a:	88 23       	and	r24, r24
    529c:	09 f4       	brne	.+2      	; 0x52a0 <_Z33activateEventUsingCurrentSettingsP2SC+0x270>
    529e:	a6 c0       	rjmp	.+332    	; 0x53ec <_Z33activateEventUsingCurrentSettingsP2SC+0x3bc>
    52a0:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_on_air_seconds>
    52a4:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_on_air_seconds+0x1>
    52a8:	9c 01       	movw	r18, r24
    52aa:	80 91 c7 45 	lds	r24, 0x45C7	; 0x8045c7 <_ZL12g_on_the_air>
    52ae:	90 91 c8 45 	lds	r25, 0x45C8	; 0x8045c8 <_ZL12g_on_the_air+0x1>
    52b2:	a0 91 c9 45 	lds	r26, 0x45C9	; 0x8045c9 <_ZL12g_on_the_air+0x2>
    52b6:	b0 91 ca 45 	lds	r27, 0x45CA	; 0x8045ca <_ZL12g_on_the_air+0x3>
    52ba:	28 1b       	sub	r18, r24
    52bc:	39 0b       	sbc	r19, r25
    52be:	80 91 3c 46 	lds	r24, 0x463C	; 0x80463c <g_time_needed_for_ID>
    52c2:	90 91 3d 46 	lds	r25, 0x463D	; 0x80463d <g_time_needed_for_ID+0x1>
    52c6:	a9 01       	movw	r20, r18
    52c8:	48 1b       	sub	r20, r24
    52ca:	59 0b       	sbc	r21, r25
    52cc:	ca 01       	movw	r24, r20
    52ce:	80 93 cb 45 	sts	0x45CB, r24	; 0x8045cb <_ZL26g_sendID_seconds_countdown>
    52d2:	90 93 cc 45 	sts	0x45CC, r25	; 0x8045cc <_ZL26g_sendID_seconds_countdown+0x1>
    52d6:	8a c0       	rjmp	.+276    	; 0x53ec <_Z33activateEventUsingCurrentSettingsP2SC+0x3bc>
    52d8:	20 91 0f 40 	lds	r18, 0x400F	; 0x80400f <g_on_air_seconds>
    52dc:	30 91 10 40 	lds	r19, 0x4010	; 0x804010 <g_on_air_seconds+0x1>
    52e0:	8e 85       	ldd	r24, Y+14	; 0x0e
    52e2:	9f 85       	ldd	r25, Y+15	; 0x0f
    52e4:	82 0f       	add	r24, r18
    52e6:	93 1f       	adc	r25, r19
    52e8:	09 2e       	mov	r0, r25
    52ea:	00 0c       	add	r0, r0
    52ec:	aa 0b       	sbc	r26, r26
    52ee:	bb 0b       	sbc	r27, r27
    52f0:	80 93 c7 45 	sts	0x45C7, r24	; 0x8045c7 <_ZL12g_on_the_air>
    52f4:	90 93 c8 45 	sts	0x45C8, r25	; 0x8045c8 <_ZL12g_on_the_air+0x1>
    52f8:	a0 93 c9 45 	sts	0x45C9, r26	; 0x8045c9 <_ZL12g_on_the_air+0x2>
    52fc:	b0 93 ca 45 	sts	0x45CA, r27	; 0x8045ca <_ZL12g_on_the_air+0x3>
    5300:	81 e0       	ldi	r24, 0x01	; 1
    5302:	89 83       	std	Y+1, r24	; 0x01
    5304:	8a 89       	ldd	r24, Y+18	; 0x12
    5306:	9b 89       	ldd	r25, Y+19	; 0x13
    5308:	89 2b       	or	r24, r25
    530a:	29 f0       	breq	.+10     	; 0x5316 <_Z33activateEventUsingCurrentSettingsP2SC+0x2e6>
    530c:	8a 89       	ldd	r24, Y+18	; 0x12
    530e:	9b 89       	ldd	r25, Y+19	; 0x13
    5310:	2d ef       	ldi	r18, 0xFD	; 253
    5312:	fc 01       	movw	r30, r24
    5314:	20 83       	st	Z, r18
    5316:	90 91 48 46 	lds	r25, 0x4648	; 0x804648 <g_event_enabled>
    531a:	81 e0       	ldi	r24, 0x01	; 1
    531c:	89 27       	eor	r24, r25
    531e:	88 23       	and	r24, r24
    5320:	09 f4       	brne	.+2      	; 0x5324 <_Z33activateEventUsingCurrentSettingsP2SC+0x2f4>
    5322:	64 c0       	rjmp	.+200    	; 0x53ec <_Z33activateEventUsingCurrentSettingsP2SC+0x3bc>
    5324:	80 91 3c 46 	lds	r24, 0x463C	; 0x80463c <g_time_needed_for_ID>
    5328:	90 91 3d 46 	lds	r25, 0x463D	; 0x80463d <g_time_needed_for_ID+0x1>
    532c:	9c 01       	movw	r18, r24
    532e:	40 e0       	ldi	r20, 0x00	; 0
    5330:	50 e0       	ldi	r21, 0x00	; 0
    5332:	80 91 c7 45 	lds	r24, 0x45C7	; 0x8045c7 <_ZL12g_on_the_air>
    5336:	90 91 c8 45 	lds	r25, 0x45C8	; 0x8045c8 <_ZL12g_on_the_air+0x1>
    533a:	a0 91 c9 45 	lds	r26, 0x45C9	; 0x8045c9 <_ZL12g_on_the_air+0x2>
    533e:	b0 91 ca 45 	lds	r27, 0x45CA	; 0x8045ca <_ZL12g_on_the_air+0x3>
    5342:	61 e0       	ldi	r22, 0x01	; 1
    5344:	28 17       	cp	r18, r24
    5346:	39 07       	cpc	r19, r25
    5348:	4a 07       	cpc	r20, r26
    534a:	5b 07       	cpc	r21, r27
    534c:	0c f0       	brlt	.+2      	; 0x5350 <_Z33activateEventUsingCurrentSettingsP2SC+0x320>
    534e:	60 e0       	ldi	r22, 0x00	; 0
    5350:	66 23       	and	r22, r22
    5352:	09 f4       	brne	.+2      	; 0x5356 <_Z33activateEventUsingCurrentSettingsP2SC+0x326>
    5354:	4b c0       	rjmp	.+150    	; 0x53ec <_Z33activateEventUsingCurrentSettingsP2SC+0x3bc>
    5356:	80 91 c7 45 	lds	r24, 0x45C7	; 0x8045c7 <_ZL12g_on_the_air>
    535a:	90 91 c8 45 	lds	r25, 0x45C8	; 0x8045c8 <_ZL12g_on_the_air+0x1>
    535e:	a0 91 c9 45 	lds	r26, 0x45C9	; 0x8045c9 <_ZL12g_on_the_air+0x2>
    5362:	b0 91 ca 45 	lds	r27, 0x45CA	; 0x8045ca <_ZL12g_on_the_air+0x3>
    5366:	9c 01       	movw	r18, r24
    5368:	80 91 3c 46 	lds	r24, 0x463C	; 0x80463c <g_time_needed_for_ID>
    536c:	90 91 3d 46 	lds	r25, 0x463D	; 0x80463d <g_time_needed_for_ID+0x1>
    5370:	a9 01       	movw	r20, r18
    5372:	48 1b       	sub	r20, r24
    5374:	59 0b       	sbc	r21, r25
    5376:	ca 01       	movw	r24, r20
    5378:	80 93 cb 45 	sts	0x45CB, r24	; 0x8045cb <_ZL26g_sendID_seconds_countdown>
    537c:	90 93 cc 45 	sts	0x45CC, r25	; 0x8045cc <_ZL26g_sendID_seconds_countdown+0x1>
    5380:	35 c0       	rjmp	.+106    	; 0x53ec <_Z33activateEventUsingCurrentSettingsP2SC+0x3bc>
    5382:	8e 85       	ldd	r24, Y+14	; 0x0e
    5384:	9f 85       	ldd	r25, Y+15	; 0x0f
    5386:	91 95       	neg	r25
    5388:	81 95       	neg	r24
    538a:	91 09       	sbc	r25, r1
    538c:	09 2e       	mov	r0, r25
    538e:	00 0c       	add	r0, r0
    5390:	aa 0b       	sbc	r26, r26
    5392:	bb 0b       	sbc	r27, r27
    5394:	80 93 c7 45 	sts	0x45C7, r24	; 0x8045c7 <_ZL12g_on_the_air>
    5398:	90 93 c8 45 	sts	0x45C8, r25	; 0x8045c8 <_ZL12g_on_the_air+0x1>
    539c:	a0 93 c9 45 	sts	0x45C9, r26	; 0x8045c9 <_ZL12g_on_the_air+0x2>
    53a0:	b0 93 ca 45 	sts	0x45CA, r27	; 0x8045ca <_ZL12g_on_the_air+0x3>
    53a4:	8a 89       	ldd	r24, Y+18	; 0x12
    53a6:	9b 89       	ldd	r25, Y+19	; 0x13
    53a8:	89 2b       	or	r24, r25
    53aa:	29 f0       	breq	.+10     	; 0x53b6 <_Z33activateEventUsingCurrentSettingsP2SC+0x386>
    53ac:	8a 89       	ldd	r24, Y+18	; 0x12
    53ae:	9b 89       	ldd	r25, Y+19	; 0x13
    53b0:	2e ef       	ldi	r18, 0xFE	; 254
    53b2:	fc 01       	movw	r30, r24
    53b4:	20 83       	st	Z, r18
    53b6:	90 91 48 46 	lds	r25, 0x4648	; 0x804648 <g_event_enabled>
    53ba:	81 e0       	ldi	r24, 0x01	; 1
    53bc:	89 27       	eor	r24, r25
    53be:	88 23       	and	r24, r24
    53c0:	a9 f0       	breq	.+42     	; 0x53ec <_Z33activateEventUsingCurrentSettingsP2SC+0x3bc>
    53c2:	20 91 0f 40 	lds	r18, 0x400F	; 0x80400f <g_on_air_seconds>
    53c6:	30 91 10 40 	lds	r19, 0x4010	; 0x804010 <g_on_air_seconds+0x1>
    53ca:	8e 85       	ldd	r24, Y+14	; 0x0e
    53cc:	9f 85       	ldd	r25, Y+15	; 0x0f
    53ce:	82 0f       	add	r24, r18
    53d0:	93 1f       	adc	r25, r19
    53d2:	9c 01       	movw	r18, r24
    53d4:	80 91 3c 46 	lds	r24, 0x463C	; 0x80463c <g_time_needed_for_ID>
    53d8:	90 91 3d 46 	lds	r25, 0x463D	; 0x80463d <g_time_needed_for_ID+0x1>
    53dc:	a9 01       	movw	r20, r18
    53de:	48 1b       	sub	r20, r24
    53e0:	59 0b       	sbc	r21, r25
    53e2:	ca 01       	movw	r24, r20
    53e4:	80 93 cb 45 	sts	0x45CB, r24	; 0x8045cb <_ZL26g_sendID_seconds_countdown>
    53e8:	90 93 cc 45 	sts	0x45CC, r25	; 0x8045cc <_ZL26g_sendID_seconds_countdown+0x1>
    53ec:	89 81       	ldd	r24, Y+1	; 0x01
    53ee:	88 23       	and	r24, r24
    53f0:	e1 f0       	breq	.+56     	; 0x542a <_Z33activateEventUsingCurrentSettingsP2SC+0x3fa>
    53f2:	80 91 48 46 	lds	r24, 0x4648	; 0x804648 <g_event_enabled>
    53f6:	88 8b       	std	Y+16, r24	; 0x10
    53f8:	10 92 48 46 	sts	0x4648, r1	; 0x804648 <g_event_enabled>
    53fc:	81 e0       	ldi	r24, 0x01	; 1
    53fe:	89 8b       	std	Y+17, r24	; 0x11
    5400:	ce 01       	movw	r24, r28
    5402:	41 96       	adiw	r24, 0x11	; 17
    5404:	40 e0       	ldi	r20, 0x00	; 0
    5406:	50 e0       	ldi	r21, 0x00	; 0
    5408:	bc 01       	movw	r22, r24
    540a:	83 ed       	ldi	r24, 0xD3	; 211
    540c:	95 e4       	ldi	r25, 0x45	; 69
    540e:	0e 94 1b 60 	call	0xc036	; 0xc036 <_Z9makeMorsePcPbS0_>
    5412:	80 91 0e 40 	lds	r24, 0x400E	; 0x80400e <g_pattern_codespeed>
    5416:	0e 94 89 27 	call	0x4f12	; 0x4f12 <_Z13throttleValueh>
    541a:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    541e:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    5422:	88 89       	ldd	r24, Y+16	; 0x10
    5424:	80 93 48 46 	sts	0x4648, r24	; 0x804648 <g_event_enabled>
    5428:	03 c0       	rjmp	.+6      	; 0x5430 <_Z33activateEventUsingCurrentSettingsP2SC+0x400>
    542a:	80 e0       	ldi	r24, 0x00	; 0
    542c:	0e 94 f7 75 	call	0xebee	; 0xebee <_Z14keyTransmitterb>
    5430:	81 e0       	ldi	r24, 0x01	; 1
    5432:	80 93 4a 46 	sts	0x464A, r24	; 0x80464a <g_event_commenced>
    5436:	0c c0       	rjmp	.+24     	; 0x5450 <_Z33activateEventUsingCurrentSettingsP2SC+0x420>
    5438:	8a 89       	ldd	r24, Y+18	; 0x12
    543a:	9b 89       	ldd	r25, Y+19	; 0x13
    543c:	89 2b       	or	r24, r25
    543e:	29 f0       	breq	.+10     	; 0x544a <_Z33activateEventUsingCurrentSettingsP2SC+0x41a>
    5440:	8a 89       	ldd	r24, Y+18	; 0x12
    5442:	9b 89       	ldd	r25, Y+19	; 0x13
    5444:	2f ef       	ldi	r18, 0xFF	; 255
    5446:	fc 01       	movw	r30, r24
    5448:	20 83       	st	Z, r18
    544a:	80 e0       	ldi	r24, 0x00	; 0
    544c:	0e 94 f7 75 	call	0xebee	; 0xebee <_Z14keyTransmitterb>
    5450:	10 92 4c 46 	sts	0x464C, r1	; 0x80464c <g_waiting_for_next_event>
    5454:	80 e0       	ldi	r24, 0x00	; 0
    5456:	63 96       	adiw	r28, 0x13	; 19
    5458:	cd bf       	out	0x3d, r28	; 61
    545a:	de bf       	out	0x3e, r29	; 62
    545c:	df 91       	pop	r29
    545e:	cf 91       	pop	r28
    5460:	08 95       	ret

00005462 <_Z8rtc_initv>:
    5462:	cf 93       	push	r28
    5464:	df 93       	push	r29
    5466:	1f 92       	push	r1
    5468:	cd b7       	in	r28, 0x3d	; 61
    546a:	de b7       	in	r29, 0x3e	; 62
    546c:	81 e0       	ldi	r24, 0x01	; 1
    546e:	89 83       	std	Y+1, r24	; 0x01
    5470:	60 e0       	ldi	r22, 0x00	; 0
    5472:	70 e0       	ldi	r23, 0x00	; 0
    5474:	cb 01       	movw	r24, r22
    5476:	0e 94 c9 72 	call	0xe592	; 0xe592 <util_delay_ms>
    547a:	68 ee       	ldi	r22, 0xE8	; 232
    547c:	73 e0       	ldi	r23, 0x03	; 3
    547e:	80 e0       	ldi	r24, 0x00	; 0
    5480:	90 e0       	ldi	r25, 0x00	; 0
    5482:	0e 94 c9 72 	call	0xe592	; 0xe592 <util_delay_ms>
    5486:	88 23       	and	r24, r24
    5488:	29 f0       	breq	.+10     	; 0x5494 <_Z8rtc_initv+0x32>
    548a:	89 81       	ldd	r24, Y+1	; 0x01
    548c:	88 23       	and	r24, r24
    548e:	11 f0       	breq	.+4      	; 0x5494 <_Z8rtc_initv+0x32>
    5490:	81 e0       	ldi	r24, 0x01	; 1
    5492:	01 c0       	rjmp	.+2      	; 0x5496 <_Z8rtc_initv+0x34>
    5494:	80 e0       	ldi	r24, 0x00	; 0
    5496:	88 23       	and	r24, r24
    5498:	21 f0       	breq	.+8      	; 0x54a2 <_Z8rtc_initv+0x40>
    549a:	0e 94 cf 3d 	call	0x7b9e	; 0x7b9e <ds3231_init>
    549e:	89 83       	std	Y+1, r24	; 0x01
    54a0:	ec cf       	rjmp	.-40     	; 0x547a <_Z8rtc_initv+0x18>
    54a2:	99 81       	ldd	r25, Y+1	; 0x01
    54a4:	81 e0       	ldi	r24, 0x01	; 1
    54a6:	89 27       	eor	r24, r25
    54a8:	88 23       	and	r24, r24
    54aa:	09 f1       	breq	.+66     	; 0x54ee <_Z8rtc_initv+0x8c>
    54ac:	81 e0       	ldi	r24, 0x01	; 1
    54ae:	89 83       	std	Y+1, r24	; 0x01
    54b0:	60 e0       	ldi	r22, 0x00	; 0
    54b2:	70 e0       	ldi	r23, 0x00	; 0
    54b4:	cb 01       	movw	r24, r22
    54b6:	0e 94 c9 72 	call	0xe592	; 0xe592 <util_delay_ms>
    54ba:	68 ee       	ldi	r22, 0xE8	; 232
    54bc:	73 e0       	ldi	r23, 0x03	; 3
    54be:	80 e0       	ldi	r24, 0x00	; 0
    54c0:	90 e0       	ldi	r25, 0x00	; 0
    54c2:	0e 94 c9 72 	call	0xe592	; 0xe592 <util_delay_ms>
    54c6:	88 23       	and	r24, r24
    54c8:	29 f0       	breq	.+10     	; 0x54d4 <_Z8rtc_initv+0x72>
    54ca:	89 81       	ldd	r24, Y+1	; 0x01
    54cc:	88 23       	and	r24, r24
    54ce:	11 f0       	breq	.+4      	; 0x54d4 <_Z8rtc_initv+0x72>
    54d0:	81 e0       	ldi	r24, 0x01	; 1
    54d2:	01 c0       	rjmp	.+2      	; 0x54d6 <_Z8rtc_initv+0x74>
    54d4:	80 e0       	ldi	r24, 0x00	; 0
    54d6:	88 23       	and	r24, r24
    54d8:	29 f0       	breq	.+10     	; 0x54e4 <_Z8rtc_initv+0x82>
    54da:	81 e0       	ldi	r24, 0x01	; 1
    54dc:	0e 94 db 40 	call	0x81b6	; 0x81b6 <ds3231_1s_sqw>
    54e0:	89 83       	std	Y+1, r24	; 0x01
    54e2:	eb cf       	rjmp	.-42     	; 0x54ba <_Z8rtc_initv+0x58>
    54e4:	89 81       	ldd	r24, Y+1	; 0x01
    54e6:	88 23       	and	r24, r24
    54e8:	21 f0       	breq	.+8      	; 0x54f2 <_Z8rtc_initv+0x90>
    54ea:	8c ef       	ldi	r24, 0xFC	; 252
    54ec:	03 c0       	rjmp	.+6      	; 0x54f4 <_Z8rtc_initv+0x92>
    54ee:	8c ef       	ldi	r24, 0xFC	; 252
    54f0:	01 c0       	rjmp	.+2      	; 0x54f4 <_Z8rtc_initv+0x92>
    54f2:	80 e0       	ldi	r24, 0x00	; 0
    54f4:	0f 90       	pop	r0
    54f6:	df 91       	pop	r29
    54f8:	cf 91       	pop	r28
    54fa:	08 95       	ret

000054fc <_Z25setAntennaStateEnunciatorv>:
    54fc:	cf 93       	push	r28
    54fe:	df 93       	push	r29
    5500:	1f 92       	push	r1
    5502:	cd b7       	in	r28, 0x3d	; 61
    5504:	de b7       	in	r29, 0x3e	; 62
    5506:	90 91 c4 45 	lds	r25, 0x45C4	; 0x8045c4 <g_antenna_connect_state>
    550a:	81 e0       	ldi	r24, 0x01	; 1
    550c:	92 30       	cpi	r25, 0x02	; 2
    550e:	09 f0       	breq	.+2      	; 0x5512 <_Z25setAntennaStateEnunciatorv+0x16>
    5510:	80 e0       	ldi	r24, 0x00	; 0
    5512:	89 83       	std	Y+1, r24	; 0x01
    5514:	80 91 d1 45 	lds	r24, 0x45D1	; 0x8045d1 <_ZL16g_hardware_error>
    5518:	90 91 d2 45 	lds	r25, 0x45D2	; 0x8045d2 <_ZL16g_hardware_error+0x1>
    551c:	21 e0       	ldi	r18, 0x01	; 1
    551e:	89 2b       	or	r24, r25
    5520:	09 f0       	breq	.+2      	; 0x5524 <_Z25setAntennaStateEnunciatorv+0x28>
    5522:	20 e0       	ldi	r18, 0x00	; 0
    5524:	22 23       	and	r18, r18
    5526:	71 f0       	breq	.+28     	; 0x5544 <_Z25setAntennaStateEnunciatorv+0x48>
    5528:	89 81       	ldd	r24, Y+1	; 0x01
    552a:	88 23       	and	r24, r24
    552c:	31 f0       	breq	.+12     	; 0x553a <_Z25setAntennaStateEnunciatorv+0x3e>
    552e:	68 e0       	ldi	r22, 0x08	; 8
    5530:	8b e6       	ldi	r24, 0x6B	; 107
    5532:	96 e4       	ldi	r25, 0x46	; 70
    5534:	0e 94 f9 57 	call	0xaff2	; 0xaff2 <_ZN4leds5blinkE7Blink_t>
    5538:	05 c0       	rjmp	.+10     	; 0x5544 <_Z25setAntennaStateEnunciatorv+0x48>
    553a:	62 e0       	ldi	r22, 0x02	; 2
    553c:	8b e6       	ldi	r24, 0x6B	; 107
    553e:	96 e4       	ldi	r25, 0x46	; 70
    5540:	0e 94 f9 57 	call	0xaff2	; 0xaff2 <_ZN4leds5blinkE7Blink_t>
    5544:	89 81       	ldd	r24, Y+1	; 0x01
    5546:	0f 90       	pop	r0
    5548:	df 91       	pop	r29
    554a:	cf 91       	pop	r28
    554c:	08 95       	ret

0000554e <_Z12suspendEventv>:
    554e:	cf 93       	push	r28
    5550:	df 93       	push	r29
    5552:	1f 92       	push	r1
    5554:	cd b7       	in	r28, 0x3d	; 61
    5556:	de b7       	in	r29, 0x3e	; 62
    5558:	10 92 48 46 	sts	0x4648, r1	; 0x804648 <g_event_enabled>
    555c:	10 92 c7 45 	sts	0x45C7, r1	; 0x8045c7 <_ZL12g_on_the_air>
    5560:	10 92 c8 45 	sts	0x45C8, r1	; 0x8045c8 <_ZL12g_on_the_air+0x1>
    5564:	10 92 c9 45 	sts	0x45C9, r1	; 0x8045c9 <_ZL12g_on_the_air+0x2>
    5568:	10 92 ca 45 	sts	0x45CA, r1	; 0x8045ca <_ZL12g_on_the_air+0x3>
    556c:	10 92 4a 46 	sts	0x464A, r1	; 0x80464a <g_event_commenced>
    5570:	80 e0       	ldi	r24, 0x00	; 0
    5572:	0e 94 f7 75 	call	0xebee	; 0xebee <_Z14keyTransmitterb>
    5576:	80 e0       	ldi	r24, 0x00	; 0
    5578:	0e 94 50 75 	call	0xeaa0	; 0xeaa0 <_Z18powerToTransmitterb>
    557c:	19 82       	std	Y+1, r1	; 0x01
    557e:	40 e0       	ldi	r20, 0x00	; 0
    5580:	50 e0       	ldi	r21, 0x00	; 0
    5582:	ce 01       	movw	r24, r28
    5584:	01 96       	adiw	r24, 0x01	; 1
    5586:	bc 01       	movw	r22, r24
    5588:	85 e8       	ldi	r24, 0x85	; 133
    558a:	90 e4       	ldi	r25, 0x40	; 64
    558c:	0e 94 1b 60 	call	0xc036	; 0xc036 <_Z9makeMorsePcPbS0_>
    5590:	00 00       	nop
    5592:	0f 90       	pop	r0
    5594:	df 91       	pop	r29
    5596:	cf 91       	pop	r28
    5598:	08 95       	ret

0000559a <_Z13startEventNow19EventActionSource_t>:
    559a:	cf 93       	push	r28
    559c:	df 93       	push	r29
    559e:	00 d0       	rcall	.+0      	; 0x55a0 <_Z13startEventNow19EventActionSource_t+0x6>
    55a0:	cd b7       	in	r28, 0x3d	; 61
    55a2:	de b7       	in	r29, 0x3e	; 62
    55a4:	8a 83       	std	Y+2, r24	; 0x02
    55a6:	0e 94 32 2e 	call	0x5c64	; 0x5c64 <_Z23clockConfigurationCheckv>
    55aa:	89 83       	std	Y+1, r24	; 0x01
    55ac:	8a 81       	ldd	r24, Y+2	; 0x02
    55ae:	88 23       	and	r24, r24
    55b0:	69 f4       	brne	.+26     	; 0x55cc <_Z13startEventNow19EventActionSource_t+0x32>
    55b2:	89 81       	ldd	r24, Y+1	; 0x01
    55b4:	82 30       	cpi	r24, 0x02	; 2
    55b6:	29 f4       	brne	.+10     	; 0x55c2 <_Z13startEventNow19EventActionSource_t+0x28>
    55b8:	60 e0       	ldi	r22, 0x00	; 0
    55ba:	85 e1       	ldi	r24, 0x15	; 21
    55bc:	0e 94 26 2b 	call	0x564c	; 0x564c <_Z11setupForFox5Fox_t13EventAction_t>
    55c0:	3f c0       	rjmp	.+126    	; 0x5640 <_Z13startEventNow19EventActionSource_t+0xa6>
    55c2:	63 e0       	ldi	r22, 0x03	; 3
    55c4:	85 e1       	ldi	r24, 0x15	; 21
    55c6:	0e 94 26 2b 	call	0x564c	; 0x564c <_Z11setupForFox5Fox_t13EventAction_t>
    55ca:	3a c0       	rjmp	.+116    	; 0x5640 <_Z13startEventNow19EventActionSource_t+0xa6>
    55cc:	8a 81       	ldd	r24, Y+2	; 0x02
    55ce:	82 30       	cpi	r24, 0x02	; 2
    55d0:	d9 f4       	brne	.+54     	; 0x5608 <_Z13startEventNow19EventActionSource_t+0x6e>
    55d2:	89 81       	ldd	r24, Y+1	; 0x01
    55d4:	82 30       	cpi	r24, 0x02	; 2
    55d6:	29 f4       	brne	.+10     	; 0x55e2 <_Z13startEventNow19EventActionSource_t+0x48>
    55d8:	61 e0       	ldi	r22, 0x01	; 1
    55da:	85 e1       	ldi	r24, 0x15	; 21
    55dc:	0e 94 26 2b 	call	0x564c	; 0x564c <_Z11setupForFox5Fox_t13EventAction_t>
    55e0:	2f c0       	rjmp	.+94     	; 0x5640 <_Z13startEventNow19EventActionSource_t+0xa6>
    55e2:	89 81       	ldd	r24, Y+1	; 0x01
    55e4:	81 30       	cpi	r24, 0x01	; 1
    55e6:	31 f0       	breq	.+12     	; 0x55f4 <_Z13startEventNow19EventActionSource_t+0x5a>
    55e8:	89 81       	ldd	r24, Y+1	; 0x01
    55ea:	84 30       	cpi	r24, 0x04	; 4
    55ec:	19 f0       	breq	.+6      	; 0x55f4 <_Z13startEventNow19EventActionSource_t+0x5a>
    55ee:	89 81       	ldd	r24, Y+1	; 0x01
    55f0:	83 30       	cpi	r24, 0x03	; 3
    55f2:	29 f4       	brne	.+10     	; 0x55fe <_Z13startEventNow19EventActionSource_t+0x64>
    55f4:	61 e0       	ldi	r22, 0x01	; 1
    55f6:	85 e1       	ldi	r24, 0x15	; 21
    55f8:	0e 94 26 2b 	call	0x564c	; 0x564c <_Z11setupForFox5Fox_t13EventAction_t>
    55fc:	21 c0       	rjmp	.+66     	; 0x5640 <_Z13startEventNow19EventActionSource_t+0xa6>
    55fe:	63 e0       	ldi	r22, 0x03	; 3
    5600:	85 e1       	ldi	r24, 0x15	; 21
    5602:	0e 94 26 2b 	call	0x564c	; 0x564c <_Z11setupForFox5Fox_t13EventAction_t>
    5606:	1c c0       	rjmp	.+56     	; 0x5640 <_Z13startEventNow19EventActionSource_t+0xa6>
    5608:	89 81       	ldd	r24, Y+1	; 0x01
    560a:	82 30       	cpi	r24, 0x02	; 2
    560c:	29 f4       	brne	.+10     	; 0x5618 <_Z13startEventNow19EventActionSource_t+0x7e>
    560e:	61 e0       	ldi	r22, 0x01	; 1
    5610:	85 e1       	ldi	r24, 0x15	; 21
    5612:	0e 94 26 2b 	call	0x564c	; 0x564c <_Z11setupForFox5Fox_t13EventAction_t>
    5616:	14 c0       	rjmp	.+40     	; 0x5640 <_Z13startEventNow19EventActionSource_t+0xa6>
    5618:	89 81       	ldd	r24, Y+1	; 0x01
    561a:	81 30       	cpi	r24, 0x01	; 1
    561c:	29 f4       	brne	.+10     	; 0x5628 <_Z13startEventNow19EventActionSource_t+0x8e>
    561e:	62 e0       	ldi	r22, 0x02	; 2
    5620:	85 e1       	ldi	r24, 0x15	; 21
    5622:	0e 94 26 2b 	call	0x564c	; 0x564c <_Z11setupForFox5Fox_t13EventAction_t>
    5626:	0c c0       	rjmp	.+24     	; 0x5640 <_Z13startEventNow19EventActionSource_t+0xa6>
    5628:	89 81       	ldd	r24, Y+1	; 0x01
    562a:	84 30       	cpi	r24, 0x04	; 4
    562c:	29 f4       	brne	.+10     	; 0x5638 <_Z13startEventNow19EventActionSource_t+0x9e>
    562e:	63 e0       	ldi	r22, 0x03	; 3
    5630:	85 e1       	ldi	r24, 0x15	; 21
    5632:	0e 94 26 2b 	call	0x564c	; 0x564c <_Z11setupForFox5Fox_t13EventAction_t>
    5636:	04 c0       	rjmp	.+8      	; 0x5640 <_Z13startEventNow19EventActionSource_t+0xa6>
    5638:	63 e0       	ldi	r22, 0x03	; 3
    563a:	85 e1       	ldi	r24, 0x15	; 21
    563c:	0e 94 26 2b 	call	0x564c	; 0x564c <_Z11setupForFox5Fox_t13EventAction_t>
    5640:	00 00       	nop
    5642:	0f 90       	pop	r0
    5644:	0f 90       	pop	r0
    5646:	df 91       	pop	r29
    5648:	cf 91       	pop	r28
    564a:	08 95       	ret

0000564c <_Z11setupForFox5Fox_t13EventAction_t>:
    564c:	cf 93       	push	r28
    564e:	df 93       	push	r29
    5650:	cd b7       	in	r28, 0x3d	; 61
    5652:	de b7       	in	r29, 0x3e	; 62
    5654:	2a 97       	sbiw	r28, 0x0a	; 10
    5656:	cd bf       	out	0x3d, r28	; 61
    5658:	de bf       	out	0x3e, r29	; 62
    565a:	89 87       	std	Y+9, r24	; 0x09
    565c:	6a 87       	std	Y+10, r22	; 0x0a
    565e:	81 e0       	ldi	r24, 0x01	; 1
    5660:	89 83       	std	Y+1, r24	; 0x01
    5662:	89 85       	ldd	r24, Y+9	; 0x09
    5664:	85 31       	cpi	r24, 0x15	; 21
    5666:	19 f4       	brne	.+6      	; 0x566e <_Z11setupForFox5Fox_t13EventAction_t+0x22>
    5668:	0e 94 f5 2e 	call	0x5dea	; 0x5dea <_Z13getFoxSettingv>
    566c:	89 87       	std	Y+9, r24	; 0x09
    566e:	10 92 48 46 	sts	0x4648, r1	; 0x804648 <g_event_enabled>
    5672:	10 92 4a 46 	sts	0x464A, r1	; 0x80464a <g_event_commenced>
    5676:	60 e0       	ldi	r22, 0x00	; 0
    5678:	8b e6       	ldi	r24, 0x6B	; 107
    567a:	96 e4       	ldi	r25, 0x46	; 70
    567c:	0e 94 e3 56 	call	0xadc6	; 0xadc6 <_ZN4leds6setRedEb>
    5680:	80 e0       	ldi	r24, 0x00	; 0
    5682:	90 e0       	ldi	r25, 0x00	; 0
    5684:	0e 94 dd 3d 	call	0x7bba	; 0x7bba <ds3231_get_epoch>
    5688:	dc 01       	movw	r26, r24
    568a:	cb 01       	movw	r24, r22
    568c:	bc 01       	movw	r22, r24
    568e:	cd 01       	movw	r24, r26
    5690:	0e 94 91 03 	call	0x722	; 0x722 <set_system_time>
    5694:	89 85       	ldd	r24, Y+9	; 0x09
    5696:	88 2f       	mov	r24, r24
    5698:	90 e0       	ldi	r25, 0x00	; 0
    569a:	09 2e       	mov	r0, r25
    569c:	00 0c       	add	r0, r0
    569e:	aa 0b       	sbc	r26, r26
    56a0:	bb 0b       	sbc	r27, r27
    56a2:	41 e0       	ldi	r20, 0x01	; 1
    56a4:	50 e0       	ldi	r21, 0x00	; 0
    56a6:	23 e1       	ldi	r18, 0x13	; 19
    56a8:	30 e0       	ldi	r19, 0x00	; 0
    56aa:	84 1b       	sub	r24, r20
    56ac:	95 0b       	sbc	r25, r21
    56ae:	28 17       	cp	r18, r24
    56b0:	39 07       	cpc	r19, r25
    56b2:	08 f4       	brcc	.+2      	; 0x56b6 <_Z11setupForFox5Fox_t13EventAction_t+0x6a>
    56b4:	fb c1       	rjmp	.+1014   	; 0x5aac <_Z11setupForFox5Fox_t13EventAction_t+0x460>
    56b6:	8c 58       	subi	r24, 0x8C	; 140
    56b8:	9f 4f       	sbci	r25, 0xFF	; 255
    56ba:	fc 01       	movw	r30, r24
    56bc:	0c 94 7f 7d 	jmp	0xfafe	; 0xfafe <__tablejump2__>
    56c0:	89 81       	ldd	r24, Y+1	; 0x01
    56c2:	88 23       	and	r24, r24
    56c4:	89 f0       	breq	.+34     	; 0x56e8 <_Z11setupForFox5Fox_t13EventAction_t+0x9c>
    56c6:	8d e4       	ldi	r24, 0x4D	; 77
    56c8:	9f e4       	ldi	r25, 0x4F	; 79
    56ca:	80 93 d3 45 	sts	0x45D3, r24	; 0x8045d3 <g_messages_text>
    56ce:	90 93 d4 45 	sts	0x45D4, r25	; 0x8045d4 <g_messages_text+0x1>
    56d2:	85 e4       	ldi	r24, 0x45	; 69
    56d4:	90 e0       	ldi	r25, 0x00	; 0
    56d6:	80 93 d5 45 	sts	0x45D5, r24	; 0x8045d5 <g_messages_text+0x2>
    56da:	90 93 d6 45 	sts	0x45D6, r25	; 0x8045d6 <g_messages_text+0x3>
    56de:	19 82       	std	Y+1, r1	; 0x01
    56e0:	10 92 3e 46 	sts	0x463E, r1	; 0x80463e <g_intra_cycle_delay_time>
    56e4:	10 92 3f 46 	sts	0x463F, r1	; 0x80463f <g_intra_cycle_delay_time+0x1>
    56e8:	89 81       	ldd	r24, Y+1	; 0x01
    56ea:	88 23       	and	r24, r24
    56ec:	99 f0       	breq	.+38     	; 0x5714 <_Z11setupForFox5Fox_t13EventAction_t+0xc8>
    56ee:	8d e4       	ldi	r24, 0x4D	; 77
    56f0:	9f e4       	ldi	r25, 0x4F	; 79
    56f2:	80 93 d3 45 	sts	0x45D3, r24	; 0x8045d3 <g_messages_text>
    56f6:	90 93 d4 45 	sts	0x45D4, r25	; 0x8045d4 <g_messages_text+0x1>
    56fa:	89 e4       	ldi	r24, 0x49	; 73
    56fc:	90 e0       	ldi	r25, 0x00	; 0
    56fe:	80 93 d5 45 	sts	0x45D5, r24	; 0x8045d5 <g_messages_text+0x2>
    5702:	90 93 d6 45 	sts	0x45D6, r25	; 0x8045d6 <g_messages_text+0x3>
    5706:	19 82       	std	Y+1, r1	; 0x01
    5708:	8c e3       	ldi	r24, 0x3C	; 60
    570a:	90 e0       	ldi	r25, 0x00	; 0
    570c:	80 93 3e 46 	sts	0x463E, r24	; 0x80463e <g_intra_cycle_delay_time>
    5710:	90 93 3f 46 	sts	0x463F, r25	; 0x80463f <g_intra_cycle_delay_time+0x1>
    5714:	89 81       	ldd	r24, Y+1	; 0x01
    5716:	88 23       	and	r24, r24
    5718:	99 f0       	breq	.+38     	; 0x5740 <_Z11setupForFox5Fox_t13EventAction_t+0xf4>
    571a:	8d e4       	ldi	r24, 0x4D	; 77
    571c:	9f e4       	ldi	r25, 0x4F	; 79
    571e:	80 93 d3 45 	sts	0x45D3, r24	; 0x8045d3 <g_messages_text>
    5722:	90 93 d4 45 	sts	0x45D4, r25	; 0x8045d4 <g_messages_text+0x1>
    5726:	83 e5       	ldi	r24, 0x53	; 83
    5728:	90 e0       	ldi	r25, 0x00	; 0
    572a:	80 93 d5 45 	sts	0x45D5, r24	; 0x8045d5 <g_messages_text+0x2>
    572e:	90 93 d6 45 	sts	0x45D6, r25	; 0x8045d6 <g_messages_text+0x3>
    5732:	19 82       	std	Y+1, r1	; 0x01
    5734:	88 e7       	ldi	r24, 0x78	; 120
    5736:	90 e0       	ldi	r25, 0x00	; 0
    5738:	80 93 3e 46 	sts	0x463E, r24	; 0x80463e <g_intra_cycle_delay_time>
    573c:	90 93 3f 46 	sts	0x463F, r25	; 0x80463f <g_intra_cycle_delay_time+0x1>
    5740:	89 81       	ldd	r24, Y+1	; 0x01
    5742:	88 23       	and	r24, r24
    5744:	99 f0       	breq	.+38     	; 0x576c <_Z11setupForFox5Fox_t13EventAction_t+0x120>
    5746:	8d e4       	ldi	r24, 0x4D	; 77
    5748:	9f e4       	ldi	r25, 0x4F	; 79
    574a:	80 93 d3 45 	sts	0x45D3, r24	; 0x8045d3 <g_messages_text>
    574e:	90 93 d4 45 	sts	0x45D4, r25	; 0x8045d4 <g_messages_text+0x1>
    5752:	88 e4       	ldi	r24, 0x48	; 72
    5754:	90 e0       	ldi	r25, 0x00	; 0
    5756:	80 93 d5 45 	sts	0x45D5, r24	; 0x8045d5 <g_messages_text+0x2>
    575a:	90 93 d6 45 	sts	0x45D6, r25	; 0x8045d6 <g_messages_text+0x3>
    575e:	19 82       	std	Y+1, r1	; 0x01
    5760:	84 eb       	ldi	r24, 0xB4	; 180
    5762:	90 e0       	ldi	r25, 0x00	; 0
    5764:	80 93 3e 46 	sts	0x463E, r24	; 0x80463e <g_intra_cycle_delay_time>
    5768:	90 93 3f 46 	sts	0x463F, r25	; 0x80463f <g_intra_cycle_delay_time+0x1>
    576c:	89 81       	ldd	r24, Y+1	; 0x01
    576e:	88 23       	and	r24, r24
    5770:	91 f0       	breq	.+36     	; 0x5796 <_Z11setupForFox5Fox_t13EventAction_t+0x14a>
    5772:	8d e4       	ldi	r24, 0x4D	; 77
    5774:	9f e4       	ldi	r25, 0x4F	; 79
    5776:	80 93 d3 45 	sts	0x45D3, r24	; 0x8045d3 <g_messages_text>
    577a:	90 93 d4 45 	sts	0x45D4, r25	; 0x8045d4 <g_messages_text+0x1>
    577e:	85 e3       	ldi	r24, 0x35	; 53
    5780:	90 e0       	ldi	r25, 0x00	; 0
    5782:	80 93 d5 45 	sts	0x45D5, r24	; 0x8045d5 <g_messages_text+0x2>
    5786:	90 93 d6 45 	sts	0x45D6, r25	; 0x8045d6 <g_messages_text+0x3>
    578a:	80 ef       	ldi	r24, 0xF0	; 240
    578c:	90 e0       	ldi	r25, 0x00	; 0
    578e:	80 93 3e 46 	sts	0x463E, r24	; 0x80463e <g_intra_cycle_delay_time>
    5792:	90 93 3f 46 	sts	0x463F, r25	; 0x80463f <g_intra_cycle_delay_time+0x1>
    5796:	80 91 0e 40 	lds	r24, 0x400E	; 0x80400e <g_pattern_codespeed>
    579a:	0e 94 89 27 	call	0x4f12	; 0x4f12 <_Z13throttleValueh>
    579e:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    57a2:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    57a6:	8c e3       	ldi	r24, 0x3C	; 60
    57a8:	90 e0       	ldi	r25, 0x00	; 0
    57aa:	80 93 cb 45 	sts	0x45CB, r24	; 0x8045cb <_ZL26g_sendID_seconds_countdown>
    57ae:	90 93 cc 45 	sts	0x45CC, r25	; 0x8045cc <_ZL26g_sendID_seconds_countdown+0x1>
    57b2:	8c e3       	ldi	r24, 0x3C	; 60
    57b4:	90 e0       	ldi	r25, 0x00	; 0
    57b6:	80 93 0f 40 	sts	0x400F, r24	; 0x80400f <g_on_air_seconds>
    57ba:	90 93 10 40 	sts	0x4010, r25	; 0x804010 <g_on_air_seconds+0x1>
    57be:	80 ef       	ldi	r24, 0xF0	; 240
    57c0:	90 e0       	ldi	r25, 0x00	; 0
    57c2:	80 93 11 40 	sts	0x4011, r24	; 0x804011 <g_off_air_seconds>
    57c6:	90 93 12 40 	sts	0x4012, r25	; 0x804012 <g_off_air_seconds+0x1>
    57ca:	9b c1       	rjmp	.+822    	; 0x5b02 <_Z11setupForFox5Fox_t13EventAction_t+0x4b6>
    57cc:	89 81       	ldd	r24, Y+1	; 0x01
    57ce:	88 23       	and	r24, r24
    57d0:	69 f0       	breq	.+26     	; 0x57ec <_Z11setupForFox5Fox_t13EventAction_t+0x1a0>
    57d2:	8d e4       	ldi	r24, 0x4D	; 77
    57d4:	95 e4       	ldi	r25, 0x45	; 69
    57d6:	80 93 d3 45 	sts	0x45D3, r24	; 0x8045d3 <g_messages_text>
    57da:	90 93 d4 45 	sts	0x45D4, r25	; 0x8045d4 <g_messages_text+0x1>
    57de:	10 92 d5 45 	sts	0x45D5, r1	; 0x8045d5 <g_messages_text+0x2>
    57e2:	19 82       	std	Y+1, r1	; 0x01
    57e4:	10 92 3e 46 	sts	0x463E, r1	; 0x80463e <g_intra_cycle_delay_time>
    57e8:	10 92 3f 46 	sts	0x463F, r1	; 0x80463f <g_intra_cycle_delay_time+0x1>
    57ec:	89 81       	ldd	r24, Y+1	; 0x01
    57ee:	88 23       	and	r24, r24
    57f0:	79 f0       	breq	.+30     	; 0x5810 <_Z11setupForFox5Fox_t13EventAction_t+0x1c4>
    57f2:	8d e4       	ldi	r24, 0x4D	; 77
    57f4:	99 e4       	ldi	r25, 0x49	; 73
    57f6:	80 93 d3 45 	sts	0x45D3, r24	; 0x8045d3 <g_messages_text>
    57fa:	90 93 d4 45 	sts	0x45D4, r25	; 0x8045d4 <g_messages_text+0x1>
    57fe:	10 92 d5 45 	sts	0x45D5, r1	; 0x8045d5 <g_messages_text+0x2>
    5802:	19 82       	std	Y+1, r1	; 0x01
    5804:	8c e0       	ldi	r24, 0x0C	; 12
    5806:	90 e0       	ldi	r25, 0x00	; 0
    5808:	80 93 3e 46 	sts	0x463E, r24	; 0x80463e <g_intra_cycle_delay_time>
    580c:	90 93 3f 46 	sts	0x463F, r25	; 0x80463f <g_intra_cycle_delay_time+0x1>
    5810:	89 81       	ldd	r24, Y+1	; 0x01
    5812:	88 23       	and	r24, r24
    5814:	79 f0       	breq	.+30     	; 0x5834 <_Z11setupForFox5Fox_t13EventAction_t+0x1e8>
    5816:	8d e4       	ldi	r24, 0x4D	; 77
    5818:	93 e5       	ldi	r25, 0x53	; 83
    581a:	80 93 d3 45 	sts	0x45D3, r24	; 0x8045d3 <g_messages_text>
    581e:	90 93 d4 45 	sts	0x45D4, r25	; 0x8045d4 <g_messages_text+0x1>
    5822:	10 92 d5 45 	sts	0x45D5, r1	; 0x8045d5 <g_messages_text+0x2>
    5826:	19 82       	std	Y+1, r1	; 0x01
    5828:	88 e1       	ldi	r24, 0x18	; 24
    582a:	90 e0       	ldi	r25, 0x00	; 0
    582c:	80 93 3e 46 	sts	0x463E, r24	; 0x80463e <g_intra_cycle_delay_time>
    5830:	90 93 3f 46 	sts	0x463F, r25	; 0x80463f <g_intra_cycle_delay_time+0x1>
    5834:	89 81       	ldd	r24, Y+1	; 0x01
    5836:	88 23       	and	r24, r24
    5838:	79 f0       	breq	.+30     	; 0x5858 <_Z11setupForFox5Fox_t13EventAction_t+0x20c>
    583a:	8d e4       	ldi	r24, 0x4D	; 77
    583c:	98 e4       	ldi	r25, 0x48	; 72
    583e:	80 93 d3 45 	sts	0x45D3, r24	; 0x8045d3 <g_messages_text>
    5842:	90 93 d4 45 	sts	0x45D4, r25	; 0x8045d4 <g_messages_text+0x1>
    5846:	10 92 d5 45 	sts	0x45D5, r1	; 0x8045d5 <g_messages_text+0x2>
    584a:	19 82       	std	Y+1, r1	; 0x01
    584c:	84 e2       	ldi	r24, 0x24	; 36
    584e:	90 e0       	ldi	r25, 0x00	; 0
    5850:	80 93 3e 46 	sts	0x463E, r24	; 0x80463e <g_intra_cycle_delay_time>
    5854:	90 93 3f 46 	sts	0x463F, r25	; 0x80463f <g_intra_cycle_delay_time+0x1>
    5858:	89 81       	ldd	r24, Y+1	; 0x01
    585a:	88 23       	and	r24, r24
    585c:	71 f0       	breq	.+28     	; 0x587a <_Z11setupForFox5Fox_t13EventAction_t+0x22e>
    585e:	8d e4       	ldi	r24, 0x4D	; 77
    5860:	95 e3       	ldi	r25, 0x35	; 53
    5862:	80 93 d3 45 	sts	0x45D3, r24	; 0x8045d3 <g_messages_text>
    5866:	90 93 d4 45 	sts	0x45D4, r25	; 0x8045d4 <g_messages_text+0x1>
    586a:	10 92 d5 45 	sts	0x45D5, r1	; 0x8045d5 <g_messages_text+0x2>
    586e:	80 e3       	ldi	r24, 0x30	; 48
    5870:	90 e0       	ldi	r25, 0x00	; 0
    5872:	80 93 3e 46 	sts	0x463E, r24	; 0x80463e <g_intra_cycle_delay_time>
    5876:	90 93 3f 46 	sts	0x463F, r25	; 0x80463f <g_intra_cycle_delay_time+0x1>
    587a:	88 e0       	ldi	r24, 0x08	; 8
    587c:	80 93 0e 40 	sts	0x400E, r24	; 0x80400e <g_pattern_codespeed>
    5880:	80 91 0e 40 	lds	r24, 0x400E	; 0x80400e <g_pattern_codespeed>
    5884:	0e 94 89 27 	call	0x4f12	; 0x4f12 <_Z13throttleValueh>
    5888:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    588c:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    5890:	88 e5       	ldi	r24, 0x58	; 88
    5892:	92 e0       	ldi	r25, 0x02	; 2
    5894:	80 93 cb 45 	sts	0x45CB, r24	; 0x8045cb <_ZL26g_sendID_seconds_countdown>
    5898:	90 93 cc 45 	sts	0x45CC, r25	; 0x8045cc <_ZL26g_sendID_seconds_countdown+0x1>
    589c:	8c e0       	ldi	r24, 0x0C	; 12
    589e:	90 e0       	ldi	r25, 0x00	; 0
    58a0:	80 93 0f 40 	sts	0x400F, r24	; 0x80400f <g_on_air_seconds>
    58a4:	90 93 10 40 	sts	0x4010, r25	; 0x804010 <g_on_air_seconds+0x1>
    58a8:	80 e3       	ldi	r24, 0x30	; 48
    58aa:	90 e0       	ldi	r25, 0x00	; 0
    58ac:	80 93 11 40 	sts	0x4011, r24	; 0x804011 <g_off_air_seconds>
    58b0:	90 93 12 40 	sts	0x4012, r25	; 0x804012 <g_off_air_seconds+0x1>
    58b4:	26 c1       	rjmp	.+588    	; 0x5b02 <_Z11setupForFox5Fox_t13EventAction_t+0x4b6>
    58b6:	89 81       	ldd	r24, Y+1	; 0x01
    58b8:	88 23       	and	r24, r24
    58ba:	69 f0       	breq	.+26     	; 0x58d6 <_Z11setupForFox5Fox_t13EventAction_t+0x28a>
    58bc:	8f e4       	ldi	r24, 0x4F	; 79
    58be:	95 e4       	ldi	r25, 0x45	; 69
    58c0:	80 93 d3 45 	sts	0x45D3, r24	; 0x8045d3 <g_messages_text>
    58c4:	90 93 d4 45 	sts	0x45D4, r25	; 0x8045d4 <g_messages_text+0x1>
    58c8:	10 92 d5 45 	sts	0x45D5, r1	; 0x8045d5 <g_messages_text+0x2>
    58cc:	19 82       	std	Y+1, r1	; 0x01
    58ce:	10 92 3e 46 	sts	0x463E, r1	; 0x80463e <g_intra_cycle_delay_time>
    58d2:	10 92 3f 46 	sts	0x463F, r1	; 0x80463f <g_intra_cycle_delay_time+0x1>
    58d6:	89 81       	ldd	r24, Y+1	; 0x01
    58d8:	88 23       	and	r24, r24
    58da:	79 f0       	breq	.+30     	; 0x58fa <_Z11setupForFox5Fox_t13EventAction_t+0x2ae>
    58dc:	8f e4       	ldi	r24, 0x4F	; 79
    58de:	99 e4       	ldi	r25, 0x49	; 73
    58e0:	80 93 d3 45 	sts	0x45D3, r24	; 0x8045d3 <g_messages_text>
    58e4:	90 93 d4 45 	sts	0x45D4, r25	; 0x8045d4 <g_messages_text+0x1>
    58e8:	10 92 d5 45 	sts	0x45D5, r1	; 0x8045d5 <g_messages_text+0x2>
    58ec:	19 82       	std	Y+1, r1	; 0x01
    58ee:	8c e0       	ldi	r24, 0x0C	; 12
    58f0:	90 e0       	ldi	r25, 0x00	; 0
    58f2:	80 93 3e 46 	sts	0x463E, r24	; 0x80463e <g_intra_cycle_delay_time>
    58f6:	90 93 3f 46 	sts	0x463F, r25	; 0x80463f <g_intra_cycle_delay_time+0x1>
    58fa:	89 81       	ldd	r24, Y+1	; 0x01
    58fc:	88 23       	and	r24, r24
    58fe:	79 f0       	breq	.+30     	; 0x591e <_Z11setupForFox5Fox_t13EventAction_t+0x2d2>
    5900:	8f e4       	ldi	r24, 0x4F	; 79
    5902:	93 e5       	ldi	r25, 0x53	; 83
    5904:	80 93 d3 45 	sts	0x45D3, r24	; 0x8045d3 <g_messages_text>
    5908:	90 93 d4 45 	sts	0x45D4, r25	; 0x8045d4 <g_messages_text+0x1>
    590c:	10 92 d5 45 	sts	0x45D5, r1	; 0x8045d5 <g_messages_text+0x2>
    5910:	19 82       	std	Y+1, r1	; 0x01
    5912:	88 e1       	ldi	r24, 0x18	; 24
    5914:	90 e0       	ldi	r25, 0x00	; 0
    5916:	80 93 3e 46 	sts	0x463E, r24	; 0x80463e <g_intra_cycle_delay_time>
    591a:	90 93 3f 46 	sts	0x463F, r25	; 0x80463f <g_intra_cycle_delay_time+0x1>
    591e:	89 81       	ldd	r24, Y+1	; 0x01
    5920:	88 23       	and	r24, r24
    5922:	79 f0       	breq	.+30     	; 0x5942 <_Z11setupForFox5Fox_t13EventAction_t+0x2f6>
    5924:	8f e4       	ldi	r24, 0x4F	; 79
    5926:	98 e4       	ldi	r25, 0x48	; 72
    5928:	80 93 d3 45 	sts	0x45D3, r24	; 0x8045d3 <g_messages_text>
    592c:	90 93 d4 45 	sts	0x45D4, r25	; 0x8045d4 <g_messages_text+0x1>
    5930:	10 92 d5 45 	sts	0x45D5, r1	; 0x8045d5 <g_messages_text+0x2>
    5934:	19 82       	std	Y+1, r1	; 0x01
    5936:	84 e2       	ldi	r24, 0x24	; 36
    5938:	90 e0       	ldi	r25, 0x00	; 0
    593a:	80 93 3e 46 	sts	0x463E, r24	; 0x80463e <g_intra_cycle_delay_time>
    593e:	90 93 3f 46 	sts	0x463F, r25	; 0x80463f <g_intra_cycle_delay_time+0x1>
    5942:	89 81       	ldd	r24, Y+1	; 0x01
    5944:	88 23       	and	r24, r24
    5946:	71 f0       	breq	.+28     	; 0x5964 <_Z11setupForFox5Fox_t13EventAction_t+0x318>
    5948:	8f e4       	ldi	r24, 0x4F	; 79
    594a:	95 e3       	ldi	r25, 0x35	; 53
    594c:	80 93 d3 45 	sts	0x45D3, r24	; 0x8045d3 <g_messages_text>
    5950:	90 93 d4 45 	sts	0x45D4, r25	; 0x8045d4 <g_messages_text+0x1>
    5954:	10 92 d5 45 	sts	0x45D5, r1	; 0x8045d5 <g_messages_text+0x2>
    5958:	80 e3       	ldi	r24, 0x30	; 48
    595a:	90 e0       	ldi	r25, 0x00	; 0
    595c:	80 93 3e 46 	sts	0x463E, r24	; 0x80463e <g_intra_cycle_delay_time>
    5960:	90 93 3f 46 	sts	0x463F, r25	; 0x80463f <g_intra_cycle_delay_time+0x1>
    5964:	8f e0       	ldi	r24, 0x0F	; 15
    5966:	80 93 0e 40 	sts	0x400E, r24	; 0x80400e <g_pattern_codespeed>
    596a:	80 91 0e 40 	lds	r24, 0x400E	; 0x80400e <g_pattern_codespeed>
    596e:	0e 94 89 27 	call	0x4f12	; 0x4f12 <_Z13throttleValueh>
    5972:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    5976:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    597a:	88 e5       	ldi	r24, 0x58	; 88
    597c:	92 e0       	ldi	r25, 0x02	; 2
    597e:	80 93 cb 45 	sts	0x45CB, r24	; 0x8045cb <_ZL26g_sendID_seconds_countdown>
    5982:	90 93 cc 45 	sts	0x45CC, r25	; 0x8045cc <_ZL26g_sendID_seconds_countdown+0x1>
    5986:	8c e0       	ldi	r24, 0x0C	; 12
    5988:	90 e0       	ldi	r25, 0x00	; 0
    598a:	80 93 0f 40 	sts	0x400F, r24	; 0x80400f <g_on_air_seconds>
    598e:	90 93 10 40 	sts	0x4010, r25	; 0x804010 <g_on_air_seconds+0x1>
    5992:	80 e3       	ldi	r24, 0x30	; 48
    5994:	90 e0       	ldi	r25, 0x00	; 0
    5996:	80 93 11 40 	sts	0x4011, r24	; 0x804011 <g_off_air_seconds>
    599a:	90 93 12 40 	sts	0x4012, r25	; 0x804012 <g_off_air_seconds+0x1>
    599e:	b1 c0       	rjmp	.+354    	; 0x5b02 <_Z11setupForFox5Fox_t13EventAction_t+0x4b6>
    59a0:	0e 94 56 2f 	call	0x5eac	; 0x5eac <_Z19getFrequencySettingv>
    59a4:	dc 01       	movw	r26, r24
    59a6:	cb 01       	movw	r24, r22
    59a8:	bc 01       	movw	r22, r24
    59aa:	cd 01       	movw	r24, r26
    59ac:	0e 94 0f 77 	call	0xee1e	; 0xee1e <_Z16init_transmitterm>
    59b0:	19 82       	std	Y+1, r1	; 0x01
    59b2:	10 92 3e 46 	sts	0x463E, r1	; 0x80463e <g_intra_cycle_delay_time>
    59b6:	10 92 3f 46 	sts	0x463F, r1	; 0x80463f <g_intra_cycle_delay_time+0x1>
    59ba:	88 e0       	ldi	r24, 0x08	; 8
    59bc:	80 93 0e 40 	sts	0x400E, r24	; 0x80400e <g_pattern_codespeed>
    59c0:	80 91 0e 40 	lds	r24, 0x400E	; 0x80400e <g_pattern_codespeed>
    59c4:	0e 94 89 27 	call	0x4f12	; 0x4f12 <_Z13throttleValueh>
    59c8:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    59cc:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    59d0:	88 e5       	ldi	r24, 0x58	; 88
    59d2:	92 e0       	ldi	r25, 0x02	; 2
    59d4:	80 93 cb 45 	sts	0x45CB, r24	; 0x8045cb <_ZL26g_sendID_seconds_countdown>
    59d8:	90 93 cc 45 	sts	0x45CC, r25	; 0x8045cc <_ZL26g_sendID_seconds_countdown+0x1>
    59dc:	8c e3       	ldi	r24, 0x3C	; 60
    59de:	90 e0       	ldi	r25, 0x00	; 0
    59e0:	80 93 0f 40 	sts	0x400F, r24	; 0x80400f <g_on_air_seconds>
    59e4:	90 93 10 40 	sts	0x4010, r25	; 0x804010 <g_on_air_seconds+0x1>
    59e8:	10 92 11 40 	sts	0x4011, r1	; 0x804011 <g_off_air_seconds>
    59ec:	10 92 12 40 	sts	0x4012, r1	; 0x804012 <g_off_air_seconds+0x1>
    59f0:	88 c0       	rjmp	.+272    	; 0x5b02 <_Z11setupForFox5Fox_t13EventAction_t+0x4b6>
    59f2:	0e 94 56 2f 	call	0x5eac	; 0x5eac <_Z19getFrequencySettingv>
    59f6:	dc 01       	movw	r26, r24
    59f8:	cb 01       	movw	r24, r22
    59fa:	bc 01       	movw	r22, r24
    59fc:	cd 01       	movw	r24, r26
    59fe:	0e 94 0f 77 	call	0xee1e	; 0xee1e <_Z16init_transmitterm>
    5a02:	19 82       	std	Y+1, r1	; 0x01
    5a04:	10 92 3e 46 	sts	0x463E, r1	; 0x80463e <g_intra_cycle_delay_time>
    5a08:	10 92 3f 46 	sts	0x463F, r1	; 0x80463f <g_intra_cycle_delay_time+0x1>
    5a0c:	88 e0       	ldi	r24, 0x08	; 8
    5a0e:	80 93 0e 40 	sts	0x400E, r24	; 0x80400e <g_pattern_codespeed>
    5a12:	80 91 0e 40 	lds	r24, 0x400E	; 0x80400e <g_pattern_codespeed>
    5a16:	0e 94 89 27 	call	0x4f12	; 0x4f12 <_Z13throttleValueh>
    5a1a:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    5a1e:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    5a22:	88 e5       	ldi	r24, 0x58	; 88
    5a24:	92 e0       	ldi	r25, 0x02	; 2
    5a26:	80 93 cb 45 	sts	0x45CB, r24	; 0x8045cb <_ZL26g_sendID_seconds_countdown>
    5a2a:	90 93 cc 45 	sts	0x45CC, r25	; 0x8045cc <_ZL26g_sendID_seconds_countdown+0x1>
    5a2e:	8c e3       	ldi	r24, 0x3C	; 60
    5a30:	90 e0       	ldi	r25, 0x00	; 0
    5a32:	80 93 0f 40 	sts	0x400F, r24	; 0x80400f <g_on_air_seconds>
    5a36:	90 93 10 40 	sts	0x4010, r25	; 0x804010 <g_on_air_seconds+0x1>
    5a3a:	10 92 11 40 	sts	0x4011, r1	; 0x804011 <g_off_air_seconds>
    5a3e:	10 92 12 40 	sts	0x4012, r1	; 0x804012 <g_off_air_seconds+0x1>
    5a42:	5f c0       	rjmp	.+190    	; 0x5b02 <_Z11setupForFox5Fox_t13EventAction_t+0x4b6>
    5a44:	0e 94 56 2f 	call	0x5eac	; 0x5eac <_Z19getFrequencySettingv>
    5a48:	dc 01       	movw	r26, r24
    5a4a:	cb 01       	movw	r24, r22
    5a4c:	bc 01       	movw	r22, r24
    5a4e:	cd 01       	movw	r24, r26
    5a50:	0e 94 0f 77 	call	0xee1e	; 0xee1e <_Z16init_transmitterm>
    5a54:	19 82       	std	Y+1, r1	; 0x01
    5a56:	10 92 3e 46 	sts	0x463E, r1	; 0x80463e <g_intra_cycle_delay_time>
    5a5a:	10 92 3f 46 	sts	0x463F, r1	; 0x80463f <g_intra_cycle_delay_time+0x1>
    5a5e:	88 e0       	ldi	r24, 0x08	; 8
    5a60:	80 93 0e 40 	sts	0x400E, r24	; 0x80400e <g_pattern_codespeed>
    5a64:	80 91 0e 40 	lds	r24, 0x400E	; 0x80400e <g_pattern_codespeed>
    5a68:	0e 94 89 27 	call	0x4f12	; 0x4f12 <_Z13throttleValueh>
    5a6c:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    5a70:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    5a74:	88 e5       	ldi	r24, 0x58	; 88
    5a76:	92 e0       	ldi	r25, 0x02	; 2
    5a78:	80 93 cb 45 	sts	0x45CB, r24	; 0x8045cb <_ZL26g_sendID_seconds_countdown>
    5a7c:	90 93 cc 45 	sts	0x45CC, r25	; 0x8045cc <_ZL26g_sendID_seconds_countdown+0x1>
    5a80:	8c e3       	ldi	r24, 0x3C	; 60
    5a82:	90 e0       	ldi	r25, 0x00	; 0
    5a84:	80 93 0f 40 	sts	0x400F, r24	; 0x80400f <g_on_air_seconds>
    5a88:	90 93 10 40 	sts	0x4010, r25	; 0x804010 <g_on_air_seconds+0x1>
    5a8c:	10 92 11 40 	sts	0x4011, r1	; 0x804011 <g_off_air_seconds>
    5a90:	10 92 12 40 	sts	0x4012, r1	; 0x804012 <g_off_air_seconds+0x1>
    5a94:	36 c0       	rjmp	.+108    	; 0x5b02 <_Z11setupForFox5Fox_t13EventAction_t+0x4b6>
    5a96:	83 e5       	ldi	r24, 0x53	; 83
    5a98:	90 e0       	ldi	r25, 0x00	; 0
    5a9a:	80 93 d3 45 	sts	0x45D3, r24	; 0x8045d3 <g_messages_text>
    5a9e:	90 93 d4 45 	sts	0x45D4, r25	; 0x8045d4 <g_messages_text+0x1>
    5aa2:	19 82       	std	Y+1, r1	; 0x01
    5aa4:	10 92 3e 46 	sts	0x463E, r1	; 0x80463e <g_intra_cycle_delay_time>
    5aa8:	10 92 3f 46 	sts	0x463F, r1	; 0x80463f <g_intra_cycle_delay_time+0x1>
    5aac:	89 81       	ldd	r24, Y+1	; 0x01
    5aae:	88 23       	and	r24, r24
    5ab0:	41 f0       	breq	.+16     	; 0x5ac2 <_Z11setupForFox5Fox_t13EventAction_t+0x476>
    5ab2:	8d e4       	ldi	r24, 0x4D	; 77
    5ab4:	9f e4       	ldi	r25, 0x4F	; 79
    5ab6:	80 93 d3 45 	sts	0x45D3, r24	; 0x8045d3 <g_messages_text>
    5aba:	90 93 d4 45 	sts	0x45D4, r25	; 0x8045d4 <g_messages_text+0x1>
    5abe:	10 92 d5 45 	sts	0x45D5, r1	; 0x8045d5 <g_messages_text+0x2>
    5ac2:	10 92 3e 46 	sts	0x463E, r1	; 0x80463e <g_intra_cycle_delay_time>
    5ac6:	10 92 3f 46 	sts	0x463F, r1	; 0x80463f <g_intra_cycle_delay_time+0x1>
    5aca:	88 e0       	ldi	r24, 0x08	; 8
    5acc:	80 93 0e 40 	sts	0x400E, r24	; 0x80400e <g_pattern_codespeed>
    5ad0:	80 91 0e 40 	lds	r24, 0x400E	; 0x80400e <g_pattern_codespeed>
    5ad4:	0e 94 89 27 	call	0x4f12	; 0x4f12 <_Z13throttleValueh>
    5ad8:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    5adc:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    5ae0:	88 e5       	ldi	r24, 0x58	; 88
    5ae2:	92 e0       	ldi	r25, 0x02	; 2
    5ae4:	80 93 cb 45 	sts	0x45CB, r24	; 0x8045cb <_ZL26g_sendID_seconds_countdown>
    5ae8:	90 93 cc 45 	sts	0x45CC, r25	; 0x8045cc <_ZL26g_sendID_seconds_countdown+0x1>
    5aec:	8c e3       	ldi	r24, 0x3C	; 60
    5aee:	90 e0       	ldi	r25, 0x00	; 0
    5af0:	80 93 0f 40 	sts	0x400F, r24	; 0x80400f <g_on_air_seconds>
    5af4:	90 93 10 40 	sts	0x4010, r25	; 0x804010 <g_on_air_seconds+0x1>
    5af8:	10 92 11 40 	sts	0x4011, r1	; 0x804011 <g_off_air_seconds>
    5afc:	10 92 12 40 	sts	0x4012, r1	; 0x804012 <g_off_air_seconds+0x1>
    5b00:	00 00       	nop
    5b02:	8a 85       	ldd	r24, Y+10	; 0x0a
    5b04:	88 23       	and	r24, r24
    5b06:	a1 f4       	brne	.+40     	; 0x5b30 <_Z11setupForFox5Fox_t13EventAction_t+0x4e4>
    5b08:	10 92 4a 46 	sts	0x464A, r1	; 0x80464a <g_event_commenced>
    5b0c:	10 92 48 46 	sts	0x4648, r1	; 0x804648 <g_event_enabled>
    5b10:	10 92 81 46 	sts	0x4681, r1	; 0x804681 <g_use_rtc_for_startstop>
    5b14:	10 92 48 46 	sts	0x4648, r1	; 0x804648 <g_event_enabled>
    5b18:	80 e0       	ldi	r24, 0x00	; 0
    5b1a:	0e 94 f7 75 	call	0xebee	; 0xebee <_Z14keyTransmitterb>
    5b1e:	60 e0       	ldi	r22, 0x00	; 0
    5b20:	8b e6       	ldi	r24, 0x6B	; 107
    5b22:	96 e4       	ldi	r25, 0x46	; 70
    5b24:	0e 94 e3 56 	call	0xadc6	; 0xadc6 <_ZN4leds6setRedEb>
    5b28:	80 e0       	ldi	r24, 0x00	; 0
    5b2a:	0e 94 50 75 	call	0xeaa0	; 0xeaa0 <_Z18powerToTransmitterb>
    5b2e:	93 c0       	rjmp	.+294    	; 0x5c56 <_Z11setupForFox5Fox_t13EventAction_t+0x60a>
    5b30:	8a 85       	ldd	r24, Y+10	; 0x0a
    5b32:	81 30       	cpi	r24, 0x01	; 1
    5b34:	09 f0       	breq	.+2      	; 0x5b38 <_Z11setupForFox5Fox_t13EventAction_t+0x4ec>
    5b36:	61 c0       	rjmp	.+194    	; 0x5bfa <_Z11setupForFox5Fox_t13EventAction_t+0x5ae>
    5b38:	ce 01       	movw	r24, r28
    5b3a:	06 96       	adiw	r24, 0x06	; 6
    5b3c:	0e 94 dd 3d 	call	0x7bba	; 0x7bba <ds3231_get_epoch>
    5b40:	dc 01       	movw	r26, r24
    5b42:	cb 01       	movw	r24, r22
    5b44:	bc 01       	movw	r22, r24
    5b46:	cd 01       	movw	r24, r26
    5b48:	0e 94 91 03 	call	0x722	; 0x722 <set_system_time>
    5b4c:	80 e0       	ldi	r24, 0x00	; 0
    5b4e:	90 e0       	ldi	r25, 0x00	; 0
    5b50:	0e 94 eb 06 	call	0xdd6	; 0xdd6 <time>
    5b54:	dc 01       	movw	r26, r24
    5b56:	cb 01       	movw	r24, r22
    5b58:	8a 83       	std	Y+2, r24	; 0x02
    5b5a:	9b 83       	std	Y+3, r25	; 0x03
    5b5c:	ac 83       	std	Y+4, r26	; 0x04
    5b5e:	bd 83       	std	Y+5, r27	; 0x05
    5b60:	8e 81       	ldd	r24, Y+6	; 0x06
    5b62:	88 23       	and	r24, r24
    5b64:	c9 f5       	brne	.+114    	; 0x5bd8 <_Z11setupForFox5Fox_t13EventAction_t+0x58c>
    5b66:	8a 81       	ldd	r24, Y+2	; 0x02
    5b68:	9b 81       	ldd	r25, Y+3	; 0x03
    5b6a:	ac 81       	ldd	r26, Y+4	; 0x04
    5b6c:	bd 81       	ldd	r27, Y+5	; 0x05
    5b6e:	80 93 40 46 	sts	0x4640, r24	; 0x804640 <g_event_start_epoch>
    5b72:	90 93 41 46 	sts	0x4641, r25	; 0x804641 <g_event_start_epoch+0x1>
    5b76:	a0 93 42 46 	sts	0x4642, r26	; 0x804642 <g_event_start_epoch+0x2>
    5b7a:	b0 93 43 46 	sts	0x4643, r27	; 0x804643 <g_event_start_epoch+0x3>
    5b7e:	20 91 40 46 	lds	r18, 0x4640	; 0x804640 <g_event_start_epoch>
    5b82:	30 91 41 46 	lds	r19, 0x4641	; 0x804641 <g_event_start_epoch+0x1>
    5b86:	40 91 42 46 	lds	r20, 0x4642	; 0x804642 <g_event_start_epoch+0x2>
    5b8a:	50 91 43 46 	lds	r21, 0x4643	; 0x804643 <g_event_start_epoch+0x3>
    5b8e:	80 91 44 46 	lds	r24, 0x4644	; 0x804644 <g_event_finish_epoch>
    5b92:	90 91 45 46 	lds	r25, 0x4645	; 0x804645 <g_event_finish_epoch+0x1>
    5b96:	a0 91 46 46 	lds	r26, 0x4646	; 0x804646 <g_event_finish_epoch+0x2>
    5b9a:	b0 91 47 46 	lds	r27, 0x4647	; 0x804647 <g_event_finish_epoch+0x3>
    5b9e:	61 e0       	ldi	r22, 0x01	; 1
    5ba0:	82 17       	cp	r24, r18
    5ba2:	93 07       	cpc	r25, r19
    5ba4:	a4 07       	cpc	r26, r20
    5ba6:	b5 07       	cpc	r27, r21
    5ba8:	08 f0       	brcs	.+2      	; 0x5bac <_Z11setupForFox5Fox_t13EventAction_t+0x560>
    5baa:	60 e0       	ldi	r22, 0x00	; 0
    5bac:	66 23       	and	r22, r22
    5bae:	a1 f0       	breq	.+40     	; 0x5bd8 <_Z11setupForFox5Fox_t13EventAction_t+0x58c>
    5bb0:	80 91 40 46 	lds	r24, 0x4640	; 0x804640 <g_event_start_epoch>
    5bb4:	90 91 41 46 	lds	r25, 0x4641	; 0x804641 <g_event_start_epoch+0x1>
    5bb8:	a0 91 42 46 	lds	r26, 0x4642	; 0x804642 <g_event_start_epoch+0x2>
    5bbc:	b0 91 43 46 	lds	r27, 0x4643	; 0x804643 <g_event_start_epoch+0x3>
    5bc0:	80 58       	subi	r24, 0x80	; 128
    5bc2:	9e 4a       	sbci	r25, 0xAE	; 174
    5bc4:	ae 4f       	sbci	r26, 0xFE	; 254
    5bc6:	bf 4f       	sbci	r27, 0xFF	; 255
    5bc8:	80 93 44 46 	sts	0x4644, r24	; 0x804644 <g_event_finish_epoch>
    5bcc:	90 93 45 46 	sts	0x4645, r25	; 0x804645 <g_event_finish_epoch+0x1>
    5bd0:	a0 93 46 46 	sts	0x4646, r26	; 0x804646 <g_event_finish_epoch+0x2>
    5bd4:	b0 93 47 46 	sts	0x4647, r27	; 0x804647 <g_event_finish_epoch+0x3>
    5bd8:	1f 82       	std	Y+7, r1	; 0x07
    5bda:	ce 01       	movw	r24, r28
    5bdc:	07 96       	adiw	r24, 0x07	; 7
    5bde:	0e 94 e3 27 	call	0x4fc6	; 0x4fc6 <_Z11launchEventP2SC>
    5be2:	8e 83       	std	Y+6, r24	; 0x06
    5be4:	82 e0       	ldi	r24, 0x02	; 2
    5be6:	80 93 ce 45 	sts	0x45CE, r24	; 0x8045ce <_ZL19g_wifi_enable_delay>
    5bea:	8e 81       	ldd	r24, Y+6	; 0x06
    5bec:	88 23       	and	r24, r24
    5bee:	99 f5       	brne	.+102    	; 0x5c56 <_Z11setupForFox5Fox_t13EventAction_t+0x60a>
    5bf0:	86 e7       	ldi	r24, 0x76	; 118
    5bf2:	96 e4       	ldi	r25, 0x46	; 70
    5bf4:	0e 94 07 47 	call	0x8e0e	; 0x8e0e <_ZN13EepromManager13saveAllEEPROMEv>
    5bf8:	2e c0       	rjmp	.+92     	; 0x5c56 <_Z11setupForFox5Fox_t13EventAction_t+0x60a>
    5bfa:	8a 85       	ldd	r24, Y+10	; 0x0a
    5bfc:	82 30       	cpi	r24, 0x02	; 2
    5bfe:	39 f5       	brne	.+78     	; 0x5c4e <_Z11setupForFox5Fox_t13EventAction_t+0x602>
    5c00:	80 91 0e 40 	lds	r24, 0x400E	; 0x80400e <g_pattern_codespeed>
    5c04:	0e 94 89 27 	call	0x4f12	; 0x4f12 <_Z13throttleValueh>
    5c08:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    5c0c:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    5c10:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_on_air_seconds>
    5c14:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_on_air_seconds+0x1>
    5c18:	09 2e       	mov	r0, r25
    5c1a:	00 0c       	add	r0, r0
    5c1c:	aa 0b       	sbc	r26, r26
    5c1e:	bb 0b       	sbc	r27, r27
    5c20:	80 93 c7 45 	sts	0x45C7, r24	; 0x8045c7 <_ZL12g_on_the_air>
    5c24:	90 93 c8 45 	sts	0x45C8, r25	; 0x8045c8 <_ZL12g_on_the_air+0x1>
    5c28:	a0 93 c9 45 	sts	0x45C9, r26	; 0x8045c9 <_ZL12g_on_the_air+0x2>
    5c2c:	b0 93 ca 45 	sts	0x45CA, r27	; 0x8045ca <_ZL12g_on_the_air+0x3>
    5c30:	81 e0       	ldi	r24, 0x01	; 1
    5c32:	80 93 4a 46 	sts	0x464A, r24	; 0x80464a <g_event_commenced>
    5c36:	81 e0       	ldi	r24, 0x01	; 1
    5c38:	80 93 48 46 	sts	0x4648, r24	; 0x804648 <g_event_enabled>
    5c3c:	8d ef       	ldi	r24, 0xFD	; 253
    5c3e:	80 93 c3 45 	sts	0x45C3, r24	; 0x8045c3 <_ZL18g_last_status_code>
    5c42:	10 92 81 46 	sts	0x4681, r1	; 0x804681 <g_use_rtc_for_startstop>
    5c46:	81 e0       	ldi	r24, 0x01	; 1
    5c48:	80 93 48 46 	sts	0x4648, r24	; 0x804648 <g_event_enabled>
    5c4c:	04 c0       	rjmp	.+8      	; 0x5c56 <_Z11setupForFox5Fox_t13EventAction_t+0x60a>
    5c4e:	ce 01       	movw	r24, r28
    5c50:	08 96       	adiw	r24, 0x08	; 8
    5c52:	0e 94 e3 27 	call	0x4fc6	; 0x4fc6 <_Z11launchEventP2SC>
    5c56:	00 00       	nop
    5c58:	2a 96       	adiw	r28, 0x0a	; 10
    5c5a:	cd bf       	out	0x3d, r28	; 61
    5c5c:	de bf       	out	0x3e, r29	; 62
    5c5e:	df 91       	pop	r29
    5c60:	cf 91       	pop	r28
    5c62:	08 95       	ret

00005c64 <_Z23clockConfigurationCheckv>:
    5c64:	cf 93       	push	r28
    5c66:	df 93       	push	r29
    5c68:	00 d0       	rcall	.+0      	; 0x5c6a <_Z23clockConfigurationCheckv+0x6>
    5c6a:	00 d0       	rcall	.+0      	; 0x5c6c <_Z23clockConfigurationCheckv+0x8>
    5c6c:	cd b7       	in	r28, 0x3d	; 61
    5c6e:	de b7       	in	r29, 0x3e	; 62
    5c70:	80 e0       	ldi	r24, 0x00	; 0
    5c72:	90 e0       	ldi	r25, 0x00	; 0
    5c74:	0e 94 eb 06 	call	0xdd6	; 0xdd6 <time>
    5c78:	dc 01       	movw	r26, r24
    5c7a:	cb 01       	movw	r24, r22
    5c7c:	89 83       	std	Y+1, r24	; 0x01
    5c7e:	9a 83       	std	Y+2, r25	; 0x02
    5c80:	ab 83       	std	Y+3, r26	; 0x03
    5c82:	bc 83       	std	Y+4, r27	; 0x04
    5c84:	80 91 44 46 	lds	r24, 0x4644	; 0x804644 <g_event_finish_epoch>
    5c88:	90 91 45 46 	lds	r25, 0x4645	; 0x804645 <g_event_finish_epoch+0x1>
    5c8c:	a0 91 46 46 	lds	r26, 0x4646	; 0x804646 <g_event_finish_epoch+0x2>
    5c90:	b0 91 47 46 	lds	r27, 0x4647	; 0x804647 <g_event_finish_epoch+0x3>
    5c94:	81 30       	cpi	r24, 0x01	; 1
    5c96:	96 46       	sbci	r25, 0x66	; 102
    5c98:	ae 4e       	sbci	r26, 0xEE	; 238
    5c9a:	bf 45       	sbci	r27, 0x5F	; 95
    5c9c:	b0 f0       	brcs	.+44     	; 0x5cca <_Z23clockConfigurationCheckv+0x66>
    5c9e:	80 91 40 46 	lds	r24, 0x4640	; 0x804640 <g_event_start_epoch>
    5ca2:	90 91 41 46 	lds	r25, 0x4641	; 0x804641 <g_event_start_epoch+0x1>
    5ca6:	a0 91 42 46 	lds	r26, 0x4642	; 0x804642 <g_event_start_epoch+0x2>
    5caa:	b0 91 43 46 	lds	r27, 0x4643	; 0x804643 <g_event_start_epoch+0x3>
    5cae:	81 30       	cpi	r24, 0x01	; 1
    5cb0:	96 46       	sbci	r25, 0x66	; 102
    5cb2:	ae 4e       	sbci	r26, 0xEE	; 238
    5cb4:	bf 45       	sbci	r27, 0x5F	; 95
    5cb6:	48 f0       	brcs	.+18     	; 0x5cca <_Z23clockConfigurationCheckv+0x66>
    5cb8:	89 81       	ldd	r24, Y+1	; 0x01
    5cba:	9a 81       	ldd	r25, Y+2	; 0x02
    5cbc:	ab 81       	ldd	r26, Y+3	; 0x03
    5cbe:	bc 81       	ldd	r27, Y+4	; 0x04
    5cc0:	81 30       	cpi	r24, 0x01	; 1
    5cc2:	96 46       	sbci	r25, 0x66	; 102
    5cc4:	ae 4e       	sbci	r26, 0xEE	; 238
    5cc6:	bf 45       	sbci	r27, 0x5F	; 95
    5cc8:	10 f4       	brcc	.+4      	; 0x5cce <_Z23clockConfigurationCheckv+0x6a>
    5cca:	81 e0       	ldi	r24, 0x01	; 1
    5ccc:	01 c0       	rjmp	.+2      	; 0x5cd0 <_Z23clockConfigurationCheckv+0x6c>
    5cce:	80 e0       	ldi	r24, 0x00	; 0
    5cd0:	88 23       	and	r24, r24
    5cd2:	11 f0       	breq	.+4      	; 0x5cd8 <_Z23clockConfigurationCheckv+0x74>
    5cd4:	82 e0       	ldi	r24, 0x02	; 2
    5cd6:	5a c0       	rjmp	.+180    	; 0x5d8c <_Z23clockConfigurationCheckv+0x128>
    5cd8:	20 91 44 46 	lds	r18, 0x4644	; 0x804644 <g_event_finish_epoch>
    5cdc:	30 91 45 46 	lds	r19, 0x4645	; 0x804645 <g_event_finish_epoch+0x1>
    5ce0:	40 91 46 46 	lds	r20, 0x4646	; 0x804646 <g_event_finish_epoch+0x2>
    5ce4:	50 91 47 46 	lds	r21, 0x4647	; 0x804647 <g_event_finish_epoch+0x3>
    5ce8:	80 91 40 46 	lds	r24, 0x4640	; 0x804640 <g_event_start_epoch>
    5cec:	90 91 41 46 	lds	r25, 0x4641	; 0x804641 <g_event_start_epoch+0x1>
    5cf0:	a0 91 42 46 	lds	r26, 0x4642	; 0x804642 <g_event_start_epoch+0x2>
    5cf4:	b0 91 43 46 	lds	r27, 0x4643	; 0x804643 <g_event_start_epoch+0x3>
    5cf8:	61 e0       	ldi	r22, 0x01	; 1
    5cfa:	82 17       	cp	r24, r18
    5cfc:	93 07       	cpc	r25, r19
    5cfe:	a4 07       	cpc	r26, r20
    5d00:	b5 07       	cpc	r27, r21
    5d02:	08 f4       	brcc	.+2      	; 0x5d06 <_Z23clockConfigurationCheckv+0xa2>
    5d04:	60 e0       	ldi	r22, 0x00	; 0
    5d06:	66 23       	and	r22, r22
    5d08:	11 f0       	breq	.+4      	; 0x5d0e <_Z23clockConfigurationCheckv+0xaa>
    5d0a:	82 e0       	ldi	r24, 0x02	; 2
    5d0c:	3f c0       	rjmp	.+126    	; 0x5d8c <_Z23clockConfigurationCheckv+0x128>
    5d0e:	80 91 44 46 	lds	r24, 0x4644	; 0x804644 <g_event_finish_epoch>
    5d12:	90 91 45 46 	lds	r25, 0x4645	; 0x804645 <g_event_finish_epoch+0x1>
    5d16:	a0 91 46 46 	lds	r26, 0x4646	; 0x804646 <g_event_finish_epoch+0x2>
    5d1a:	b0 91 47 46 	lds	r27, 0x4647	; 0x804647 <g_event_finish_epoch+0x3>
    5d1e:	61 e0       	ldi	r22, 0x01	; 1
    5d20:	29 81       	ldd	r18, Y+1	; 0x01
    5d22:	3a 81       	ldd	r19, Y+2	; 0x02
    5d24:	4b 81       	ldd	r20, Y+3	; 0x03
    5d26:	5c 81       	ldd	r21, Y+4	; 0x04
    5d28:	82 17       	cp	r24, r18
    5d2a:	93 07       	cpc	r25, r19
    5d2c:	a4 07       	cpc	r26, r20
    5d2e:	b5 07       	cpc	r27, r21
    5d30:	08 f0       	brcs	.+2      	; 0x5d34 <_Z23clockConfigurationCheckv+0xd0>
    5d32:	60 e0       	ldi	r22, 0x00	; 0
    5d34:	66 23       	and	r22, r22
    5d36:	11 f0       	breq	.+4      	; 0x5d3c <_Z23clockConfigurationCheckv+0xd8>
    5d38:	82 e0       	ldi	r24, 0x02	; 2
    5d3a:	28 c0       	rjmp	.+80     	; 0x5d8c <_Z23clockConfigurationCheckv+0x128>
    5d3c:	80 91 40 46 	lds	r24, 0x4640	; 0x804640 <g_event_start_epoch>
    5d40:	90 91 41 46 	lds	r25, 0x4641	; 0x804641 <g_event_start_epoch+0x1>
    5d44:	a0 91 42 46 	lds	r26, 0x4642	; 0x804642 <g_event_start_epoch+0x2>
    5d48:	b0 91 43 46 	lds	r27, 0x4643	; 0x804643 <g_event_start_epoch+0x3>
    5d4c:	61 e0       	ldi	r22, 0x01	; 1
    5d4e:	29 81       	ldd	r18, Y+1	; 0x01
    5d50:	3a 81       	ldd	r19, Y+2	; 0x02
    5d52:	4b 81       	ldd	r20, Y+3	; 0x03
    5d54:	5c 81       	ldd	r21, Y+4	; 0x04
    5d56:	82 17       	cp	r24, r18
    5d58:	93 07       	cpc	r25, r19
    5d5a:	a4 07       	cpc	r26, r20
    5d5c:	b5 07       	cpc	r27, r21
    5d5e:	08 f0       	brcs	.+2      	; 0x5d62 <_Z23clockConfigurationCheckv+0xfe>
    5d60:	60 e0       	ldi	r22, 0x00	; 0
    5d62:	66 23       	and	r22, r22
    5d64:	51 f0       	breq	.+20     	; 0x5d7a <_Z23clockConfigurationCheckv+0x116>
    5d66:	90 91 48 46 	lds	r25, 0x4648	; 0x804648 <g_event_enabled>
    5d6a:	81 e0       	ldi	r24, 0x01	; 1
    5d6c:	89 27       	eor	r24, r25
    5d6e:	88 23       	and	r24, r24
    5d70:	11 f0       	breq	.+4      	; 0x5d76 <_Z23clockConfigurationCheckv+0x112>
    5d72:	83 e0       	ldi	r24, 0x03	; 3
    5d74:	0b c0       	rjmp	.+22     	; 0x5d8c <_Z23clockConfigurationCheckv+0x128>
    5d76:	85 e0       	ldi	r24, 0x05	; 5
    5d78:	09 c0       	rjmp	.+18     	; 0x5d8c <_Z23clockConfigurationCheckv+0x128>
    5d7a:	90 91 81 46 	lds	r25, 0x4681	; 0x804681 <g_use_rtc_for_startstop>
    5d7e:	81 e0       	ldi	r24, 0x01	; 1
    5d80:	89 27       	eor	r24, r25
    5d82:	88 23       	and	r24, r24
    5d84:	11 f0       	breq	.+4      	; 0x5d8a <_Z23clockConfigurationCheckv+0x126>
    5d86:	84 e0       	ldi	r24, 0x04	; 4
    5d88:	01 c0       	rjmp	.+2      	; 0x5d8c <_Z23clockConfigurationCheckv+0x128>
    5d8a:	81 e0       	ldi	r24, 0x01	; 1
    5d8c:	24 96       	adiw	r28, 0x04	; 4
    5d8e:	cd bf       	out	0x3d, r28	; 61
    5d90:	de bf       	out	0x3e, r29	; 62
    5d92:	df 91       	pop	r29
    5d94:	cf 91       	pop	r28
    5d96:	08 95       	ret

00005d98 <_Z15timeNeededForIDv>:

uint16_t timeNeededForID(void)
{
    5d98:	cf 93       	push	r28
    5d9a:	df 93       	push	r29
    5d9c:	cd b7       	in	r28, 0x3d	; 61
    5d9e:	de b7       	in	r29, 0x3e	; 62
	return((uint16_t)(((float)timeRequiredToSendStrAtWPM((char*)g_messages_text[STATION_ID], g_id_codespeed)) / 1000.));
    5da0:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_id_codespeed>
    5da4:	88 2f       	mov	r24, r24
    5da6:	90 e0       	ldi	r25, 0x00	; 0
    5da8:	bc 01       	movw	r22, r24
    5daa:	87 e2       	ldi	r24, 0x27	; 39
    5dac:	96 e4       	ldi	r25, 0x46	; 70
    5dae:	0e 94 78 61 	call	0xc2f0	; 0xc2f0 <_Z26timeRequiredToSendStrAtWPMPcj>
    5db2:	cc 01       	movw	r24, r24
    5db4:	a0 e0       	ldi	r26, 0x00	; 0
    5db6:	b0 e0       	ldi	r27, 0x00	; 0
    5db8:	bc 01       	movw	r22, r24
    5dba:	cd 01       	movw	r24, r26
    5dbc:	0e 94 e2 7b 	call	0xf7c4	; 0xf7c4 <__floatunsisf>
    5dc0:	dc 01       	movw	r26, r24
    5dc2:	cb 01       	movw	r24, r22
    5dc4:	20 e0       	ldi	r18, 0x00	; 0
    5dc6:	30 e0       	ldi	r19, 0x00	; 0
    5dc8:	4a e7       	ldi	r20, 0x7A	; 122
    5dca:	54 e4       	ldi	r21, 0x44	; 68
    5dcc:	bc 01       	movw	r22, r24
    5dce:	cd 01       	movw	r24, r26
    5dd0:	0e 94 3a 7b 	call	0xf674	; 0xf674 <__divsf3>
    5dd4:	dc 01       	movw	r26, r24
    5dd6:	cb 01       	movw	r24, r22
    5dd8:	bc 01       	movw	r22, r24
    5dda:	cd 01       	movw	r24, r26
    5ddc:	0e 94 b3 7b 	call	0xf766	; 0xf766 <__fixunssfsi>
    5de0:	dc 01       	movw	r26, r24
    5de2:	cb 01       	movw	r24, r22
}
    5de4:	df 91       	pop	r29
    5de6:	cf 91       	pop	r28
    5de8:	08 95       	ret

00005dea <_Z13getFoxSettingv>:

Fox_t getFoxSetting(void)
{
    5dea:	cf 93       	push	r28
    5dec:	df 93       	push	r29
    5dee:	1f 92       	push	r1
    5df0:	cd b7       	in	r28, 0x3d	; 61
    5df2:	de b7       	in	r29, 0x3e	; 62
	Fox_t fox;
	
	if(g_event == EVENT_FOXORING)
    5df4:	80 91 a5 46 	lds	r24, 0x46A5	; 0x8046a5 <g_event>
    5df8:	81 30       	cpi	r24, 0x01	; 1
    5dfa:	c9 f4       	brne	.+50     	; 0x5e2e <_Z13getFoxSettingv+0x44>
	{
		switch(g_foxoring_fox)
    5dfc:	80 91 3e 40 	lds	r24, 0x403E	; 0x80403e <g_foxoring_fox>
    5e00:	88 2f       	mov	r24, r24
    5e02:	90 e0       	ldi	r25, 0x00	; 0
    5e04:	83 31       	cpi	r24, 0x13	; 19
    5e06:	91 05       	cpc	r25, r1
    5e08:	41 f0       	breq	.+16     	; 0x5e1a <_Z13getFoxSettingv+0x30>
    5e0a:	84 31       	cpi	r24, 0x14	; 20
    5e0c:	91 05       	cpc	r25, r1
    5e0e:	41 f0       	breq	.+16     	; 0x5e20 <_Z13getFoxSettingv+0x36>
    5e10:	42 97       	sbiw	r24, 0x12	; 18
    5e12:	49 f4       	brne	.+18     	; 0x5e26 <_Z13getFoxSettingv+0x3c>
		{
			case FOXORING_EVENT_FOXA:
			{
				fox = FOXORING_EVENT_FOXA;
    5e14:	82 e1       	ldi	r24, 0x12	; 18
    5e16:	89 83       	std	Y+1, r24	; 0x01
			}
			break;
    5e18:	0d c0       	rjmp	.+26     	; 0x5e34 <_Z13getFoxSettingv+0x4a>
			
			case FOXORING_EVENT_FOXB:
			{
				fox = FOXORING_EVENT_FOXB;
    5e1a:	83 e1       	ldi	r24, 0x13	; 19
    5e1c:	89 83       	std	Y+1, r24	; 0x01
			}
			break;
    5e1e:	0a c0       	rjmp	.+20     	; 0x5e34 <_Z13getFoxSettingv+0x4a>
			
			case FOXORING_EVENT_FOXC:
			{
				fox = FOXORING_EVENT_FOXC;
    5e20:	84 e1       	ldi	r24, 0x14	; 20
    5e22:	89 83       	std	Y+1, r24	; 0x01
			}
			break;
    5e24:	07 c0       	rjmp	.+14     	; 0x5e34 <_Z13getFoxSettingv+0x4a>
			
			default:
			{
				fox = INVALID_FOX;
    5e26:	85 e1       	ldi	r24, 0x15	; 21
    5e28:	89 83       	std	Y+1, r24	; 0x01
			}
			break;
    5e2a:	00 00       	nop
    5e2c:	03 c0       	rjmp	.+6      	; 0x5e34 <_Z13getFoxSettingv+0x4a>
		}
	}
	else
	{
		fox = g_fox;
    5e2e:	80 91 20 40 	lds	r24, 0x4020	; 0x804020 <g_fox>
    5e32:	89 83       	std	Y+1, r24	; 0x01
	}
	
	return fox;
    5e34:	89 81       	ldd	r24, Y+1	; 0x01
}
    5e36:	0f 90       	pop	r0
    5e38:	df 91       	pop	r29
    5e3a:	cf 91       	pop	r28
    5e3c:	08 95       	ret

00005e3e <_Z14getPatternTextv>:

char* getPatternText(void)
{
    5e3e:	cf 93       	push	r28
    5e40:	df 93       	push	r29
    5e42:	00 d0       	rcall	.+0      	; 0x5e44 <_Z14getPatternTextv+0x6>
    5e44:	cd b7       	in	r28, 0x3d	; 61
    5e46:	de b7       	in	r29, 0x3e	; 62
	char* txt = NULL;
    5e48:	19 82       	std	Y+1, r1	; 0x01
    5e4a:	1a 82       	std	Y+2, r1	; 0x02
		
	if(g_event == EVENT_FOXORING)
    5e4c:	80 91 a5 46 	lds	r24, 0x46A5	; 0x8046a5 <g_event>
    5e50:	81 30       	cpi	r24, 0x01	; 1
    5e52:	09 f5       	brne	.+66     	; 0x5e96 <_Z14getPatternTextv+0x58>
	{
		switch(g_foxoring_fox)
    5e54:	80 91 3e 40 	lds	r24, 0x403E	; 0x80403e <g_foxoring_fox>
    5e58:	88 2f       	mov	r24, r24
    5e5a:	90 e0       	ldi	r25, 0x00	; 0
    5e5c:	83 31       	cpi	r24, 0x13	; 19
    5e5e:	91 05       	cpc	r25, r1
    5e60:	51 f0       	breq	.+20     	; 0x5e76 <_Z14getPatternTextv+0x38>
    5e62:	84 31       	cpi	r24, 0x14	; 20
    5e64:	91 05       	cpc	r25, r1
    5e66:	61 f0       	breq	.+24     	; 0x5e80 <_Z14getPatternTextv+0x42>
    5e68:	42 97       	sbiw	r24, 0x12	; 18
    5e6a:	79 f4       	brne	.+30     	; 0x5e8a <_Z14getPatternTextv+0x4c>
		{
			case FOXORING_EVENT_FOXA:
			{
				txt = g_messages_text[FOXA_PATTERN_TEXT];
    5e6c:	88 ee       	ldi	r24, 0xE8	; 232
    5e6e:	95 e4       	ldi	r25, 0x45	; 69
    5e70:	89 83       	std	Y+1, r24	; 0x01
    5e72:	9a 83       	std	Y+2, r25	; 0x02
			}
			break;
    5e74:	14 c0       	rjmp	.+40     	; 0x5e9e <_Z14getPatternTextv+0x60>
				
			case FOXORING_EVENT_FOXB:
			{
				txt = g_messages_text[FOXB_PATTERN_TEXT];
    5e76:	8d ef       	ldi	r24, 0xFD	; 253
    5e78:	95 e4       	ldi	r25, 0x45	; 69
    5e7a:	89 83       	std	Y+1, r24	; 0x01
    5e7c:	9a 83       	std	Y+2, r25	; 0x02
			}
			break;
    5e7e:	0f c0       	rjmp	.+30     	; 0x5e9e <_Z14getPatternTextv+0x60>
				
			case FOXORING_EVENT_FOXC:
			{
				txt = g_messages_text[FOXC_PATTERN_TEXT];
    5e80:	82 e1       	ldi	r24, 0x12	; 18
    5e82:	96 e4       	ldi	r25, 0x46	; 70
    5e84:	89 83       	std	Y+1, r24	; 0x01
    5e86:	9a 83       	std	Y+2, r25	; 0x02
			}
			break;
    5e88:	0a c0       	rjmp	.+20     	; 0x5e9e <_Z14getPatternTextv+0x60>
				
			default:
			{
				txt = g_messages_text[FOXA_PATTERN_TEXT];
    5e8a:	88 ee       	ldi	r24, 0xE8	; 232
    5e8c:	95 e4       	ldi	r25, 0x45	; 69
    5e8e:	89 83       	std	Y+1, r24	; 0x01
    5e90:	9a 83       	std	Y+2, r25	; 0x02
			}
			break;
    5e92:	00 00       	nop
    5e94:	04 c0       	rjmp	.+8      	; 0x5e9e <_Z14getPatternTextv+0x60>
		}
	}
	else
	{
		txt = g_messages_text[PATTERN_TEXT];
    5e96:	83 ed       	ldi	r24, 0xD3	; 211
    5e98:	95 e4       	ldi	r25, 0x45	; 69
    5e9a:	89 83       	std	Y+1, r24	; 0x01
    5e9c:	9a 83       	std	Y+2, r25	; 0x02
	}
	
	return txt;
    5e9e:	89 81       	ldd	r24, Y+1	; 0x01
    5ea0:	9a 81       	ldd	r25, Y+2	; 0x02
}
    5ea2:	0f 90       	pop	r0
    5ea4:	0f 90       	pop	r0
    5ea6:	df 91       	pop	r29
    5ea8:	cf 91       	pop	r28
    5eaa:	08 95       	ret

00005eac <_Z19getFrequencySettingv>:

Frequency_Hz getFrequencySetting(void)
{
    5eac:	cf 93       	push	r28
    5eae:	df 93       	push	r29
    5eb0:	00 d0       	rcall	.+0      	; 0x5eb2 <_Z19getFrequencySettingv+0x6>
    5eb2:	00 d0       	rcall	.+0      	; 0x5eb4 <_Z19getFrequencySettingv+0x8>
    5eb4:	cd b7       	in	r28, 0x3d	; 61
    5eb6:	de b7       	in	r29, 0x3e	; 62
	Frequency_Hz freq;
		
	if(g_event == EVENT_FOXORING)
    5eb8:	80 91 a5 46 	lds	r24, 0x46A5	; 0x8046a5 <g_event>
    5ebc:	81 30       	cpi	r24, 0x01	; 1
    5ebe:	e9 f5       	brne	.+122    	; 0x5f3a <_Z19getFrequencySettingv+0x8e>
	{
		switch(g_foxoring_fox)
    5ec0:	80 91 3e 40 	lds	r24, 0x403E	; 0x80403e <g_foxoring_fox>
    5ec4:	88 2f       	mov	r24, r24
    5ec6:	90 e0       	ldi	r25, 0x00	; 0
    5ec8:	83 31       	cpi	r24, 0x13	; 19
    5eca:	91 05       	cpc	r25, r1
    5ecc:	91 f0       	breq	.+36     	; 0x5ef2 <_Z19getFrequencySettingv+0x46>
    5ece:	84 31       	cpi	r24, 0x14	; 20
    5ed0:	91 05       	cpc	r25, r1
    5ed2:	e1 f0       	breq	.+56     	; 0x5f0c <_Z19getFrequencySettingv+0x60>
    5ed4:	42 97       	sbiw	r24, 0x12	; 18
    5ed6:	39 f5       	brne	.+78     	; 0x5f26 <_Z19getFrequencySettingv+0x7a>
		{
			case FOXORING_EVENT_FOXA:
			{
				freq = g_foxoring_frequencyA;
    5ed8:	80 91 32 40 	lds	r24, 0x4032	; 0x804032 <g_foxoring_frequencyA>
    5edc:	90 91 33 40 	lds	r25, 0x4033	; 0x804033 <g_foxoring_frequencyA+0x1>
    5ee0:	a0 91 34 40 	lds	r26, 0x4034	; 0x804034 <g_foxoring_frequencyA+0x2>
    5ee4:	b0 91 35 40 	lds	r27, 0x4035	; 0x804035 <g_foxoring_frequencyA+0x3>
    5ee8:	89 83       	std	Y+1, r24	; 0x01
    5eea:	9a 83       	std	Y+2, r25	; 0x02
    5eec:	ab 83       	std	Y+3, r26	; 0x03
    5eee:	bc 83       	std	Y+4, r27	; 0x04
			}
			break;
    5ef0:	30 c0       	rjmp	.+96     	; 0x5f52 <_Z19getFrequencySettingv+0xa6>
				
			case FOXORING_EVENT_FOXB:
			{
				freq = g_foxoring_frequencyB;
    5ef2:	80 91 36 40 	lds	r24, 0x4036	; 0x804036 <g_foxoring_frequencyB>
    5ef6:	90 91 37 40 	lds	r25, 0x4037	; 0x804037 <g_foxoring_frequencyB+0x1>
    5efa:	a0 91 38 40 	lds	r26, 0x4038	; 0x804038 <g_foxoring_frequencyB+0x2>
    5efe:	b0 91 39 40 	lds	r27, 0x4039	; 0x804039 <g_foxoring_frequencyB+0x3>
    5f02:	89 83       	std	Y+1, r24	; 0x01
    5f04:	9a 83       	std	Y+2, r25	; 0x02
    5f06:	ab 83       	std	Y+3, r26	; 0x03
    5f08:	bc 83       	std	Y+4, r27	; 0x04
			}
			break;
    5f0a:	23 c0       	rjmp	.+70     	; 0x5f52 <_Z19getFrequencySettingv+0xa6>
				
			case FOXORING_EVENT_FOXC:
			{
				freq = g_foxoring_frequencyC;
    5f0c:	80 91 3a 40 	lds	r24, 0x403A	; 0x80403a <g_foxoring_frequencyC>
    5f10:	90 91 3b 40 	lds	r25, 0x403B	; 0x80403b <g_foxoring_frequencyC+0x1>
    5f14:	a0 91 3c 40 	lds	r26, 0x403C	; 0x80403c <g_foxoring_frequencyC+0x2>
    5f18:	b0 91 3d 40 	lds	r27, 0x403D	; 0x80403d <g_foxoring_frequencyC+0x3>
    5f1c:	89 83       	std	Y+1, r24	; 0x01
    5f1e:	9a 83       	std	Y+2, r25	; 0x02
    5f20:	ab 83       	std	Y+3, r26	; 0x03
    5f22:	bc 83       	std	Y+4, r27	; 0x04
			}
			break;
    5f24:	16 c0       	rjmp	.+44     	; 0x5f52 <_Z19getFrequencySettingv+0xa6>
				
			default:
			{
				freq = EEPROM_FOXORING_FREQUENCYA_DEFAULT;
    5f26:	80 e0       	ldi	r24, 0x00	; 0
    5f28:	96 eb       	ldi	r25, 0xB6	; 182
    5f2a:	a5 e3       	ldi	r26, 0x35	; 53
    5f2c:	b0 e0       	ldi	r27, 0x00	; 0
    5f2e:	89 83       	std	Y+1, r24	; 0x01
    5f30:	9a 83       	std	Y+2, r25	; 0x02
    5f32:	ab 83       	std	Y+3, r26	; 0x03
    5f34:	bc 83       	std	Y+4, r27	; 0x04
			}
			break;
    5f36:	00 00       	nop
    5f38:	0c c0       	rjmp	.+24     	; 0x5f52 <_Z19getFrequencySettingv+0xa6>
		}
	}
	else
	{
		freq = g_80m_frequency;
    5f3a:	80 91 5a 40 	lds	r24, 0x405A	; 0x80405a <g_80m_frequency>
    5f3e:	90 91 5b 40 	lds	r25, 0x405B	; 0x80405b <g_80m_frequency+0x1>
    5f42:	a0 91 5c 40 	lds	r26, 0x405C	; 0x80405c <g_80m_frequency+0x2>
    5f46:	b0 91 5d 40 	lds	r27, 0x405D	; 0x80405d <g_80m_frequency+0x3>
    5f4a:	89 83       	std	Y+1, r24	; 0x01
    5f4c:	9a 83       	std	Y+2, r25	; 0x02
    5f4e:	ab 83       	std	Y+3, r26	; 0x03
    5f50:	bc 83       	std	Y+4, r27	; 0x04
	}

	return(freq);
    5f52:	89 81       	ldd	r24, Y+1	; 0x01
    5f54:	9a 81       	ldd	r25, Y+2	; 0x02
    5f56:	ab 81       	ldd	r26, Y+3	; 0x03
    5f58:	bc 81       	ldd	r27, Y+4	; 0x04
}
    5f5a:	bc 01       	movw	r22, r24
    5f5c:	cd 01       	movw	r24, r26
    5f5e:	24 96       	adiw	r28, 0x04	; 4
    5f60:	cd bf       	out	0x3d, r28	; 61
    5f62:	de bf       	out	0x3e, r29	; 62
    5f64:	df 91       	pop	r29
    5f66:	cf 91       	pop	r28
    5f68:	08 95       	ret

00005f6a <_Z14eventScheduledv>:

bool eventScheduled(void)
{
    5f6a:	cf 93       	push	r28
    5f6c:	df 93       	push	r29
    5f6e:	cd b7       	in	r28, 0x3d	; 61
    5f70:	de b7       	in	r29, 0x3e	; 62
    5f72:	25 97       	sbiw	r28, 0x05	; 5
    5f74:	cd bf       	out	0x3d, r28	; 61
    5f76:	de bf       	out	0x3e, r29	; 62
	set_system_time(ds3231_get_epoch(null));
    5f78:	80 e0       	ldi	r24, 0x00	; 0
    5f7a:	90 e0       	ldi	r25, 0x00	; 0
    5f7c:	0e 94 dd 3d 	call	0x7bba	; 0x7bba <ds3231_get_epoch>
    5f80:	dc 01       	movw	r26, r24
    5f82:	cb 01       	movw	r24, r22
    5f84:	bc 01       	movw	r22, r24
    5f86:	cd 01       	movw	r24, r26
    5f88:	0e 94 91 03 	call	0x722	; 0x722 <set_system_time>
	time_t now = time(null);	
    5f8c:	80 e0       	ldi	r24, 0x00	; 0
    5f8e:	90 e0       	ldi	r25, 0x00	; 0
    5f90:	0e 94 eb 06 	call	0xdd6	; 0xdd6 <time>
    5f94:	dc 01       	movw	r26, r24
    5f96:	cb 01       	movw	r24, r22
    5f98:	89 83       	std	Y+1, r24	; 0x01
    5f9a:	9a 83       	std	Y+2, r25	; 0x02
    5f9c:	ab 83       	std	Y+3, r26	; 0x03
    5f9e:	bc 83       	std	Y+4, r27	; 0x04
	bool result = ((now > MINIMUM_VALID_EPOCH) && (g_event_start_epoch > now) && (g_event_finish_epoch > g_event_start_epoch));
    5fa0:	89 81       	ldd	r24, Y+1	; 0x01
    5fa2:	9a 81       	ldd	r25, Y+2	; 0x02
    5fa4:	ab 81       	ldd	r26, Y+3	; 0x03
    5fa6:	bc 81       	ldd	r27, Y+4	; 0x04
    5fa8:	81 30       	cpi	r24, 0x01	; 1
    5faa:	96 46       	sbci	r25, 0x66	; 102
    5fac:	ae 4e       	sbci	r26, 0xEE	; 238
    5fae:	bf 45       	sbci	r27, 0x5F	; 95
    5fb0:	40 f1       	brcs	.+80     	; 0x6002 <_Z14eventScheduledv+0x98>
    5fb2:	20 91 40 46 	lds	r18, 0x4640	; 0x804640 <g_event_start_epoch>
    5fb6:	30 91 41 46 	lds	r19, 0x4641	; 0x804641 <g_event_start_epoch+0x1>
    5fba:	40 91 42 46 	lds	r20, 0x4642	; 0x804642 <g_event_start_epoch+0x2>
    5fbe:	50 91 43 46 	lds	r21, 0x4643	; 0x804643 <g_event_start_epoch+0x3>
    5fc2:	89 81       	ldd	r24, Y+1	; 0x01
    5fc4:	9a 81       	ldd	r25, Y+2	; 0x02
    5fc6:	ab 81       	ldd	r26, Y+3	; 0x03
    5fc8:	bc 81       	ldd	r27, Y+4	; 0x04
    5fca:	82 17       	cp	r24, r18
    5fcc:	93 07       	cpc	r25, r19
    5fce:	a4 07       	cpc	r26, r20
    5fd0:	b5 07       	cpc	r27, r21
    5fd2:	b8 f4       	brcc	.+46     	; 0x6002 <_Z14eventScheduledv+0x98>
    5fd4:	20 91 44 46 	lds	r18, 0x4644	; 0x804644 <g_event_finish_epoch>
    5fd8:	30 91 45 46 	lds	r19, 0x4645	; 0x804645 <g_event_finish_epoch+0x1>
    5fdc:	40 91 46 46 	lds	r20, 0x4646	; 0x804646 <g_event_finish_epoch+0x2>
    5fe0:	50 91 47 46 	lds	r21, 0x4647	; 0x804647 <g_event_finish_epoch+0x3>
    5fe4:	80 91 40 46 	lds	r24, 0x4640	; 0x804640 <g_event_start_epoch>
    5fe8:	90 91 41 46 	lds	r25, 0x4641	; 0x804641 <g_event_start_epoch+0x1>
    5fec:	a0 91 42 46 	lds	r26, 0x4642	; 0x804642 <g_event_start_epoch+0x2>
    5ff0:	b0 91 43 46 	lds	r27, 0x4643	; 0x804643 <g_event_start_epoch+0x3>
    5ff4:	82 17       	cp	r24, r18
    5ff6:	93 07       	cpc	r25, r19
    5ff8:	a4 07       	cpc	r26, r20
    5ffa:	b5 07       	cpc	r27, r21
    5ffc:	10 f4       	brcc	.+4      	; 0x6002 <_Z14eventScheduledv+0x98>
    5ffe:	81 e0       	ldi	r24, 0x01	; 1
    6000:	01 c0       	rjmp	.+2      	; 0x6004 <_Z14eventScheduledv+0x9a>
    6002:	80 e0       	ldi	r24, 0x00	; 0
    6004:	8d 83       	std	Y+5, r24	; 0x05
	return(result);
    6006:	8d 81       	ldd	r24, Y+5	; 0x05
}
    6008:	25 96       	adiw	r28, 0x05	; 5
    600a:	cd bf       	out	0x3d, r28	; 61
    600c:	de bf       	out	0x3e, r29	; 62
    600e:	df 91       	pop	r29
    6010:	cf 91       	pop	r28
    6012:	08 95       	ret

00006014 <_Z15externBatStringb>:

// Caller must provide a pointer to a string of length 6 or greater.
char* externBatString(bool volts)
{
    6014:	0f 93       	push	r16
    6016:	1f 93       	push	r17
    6018:	cf 93       	push	r28
    601a:	df 93       	push	r29
    601c:	cd b7       	in	r28, 0x3d	; 61
    601e:	de b7       	in	r29, 0x3e	; 62
    6020:	27 97       	sbiw	r28, 0x07	; 7
    6022:	cd bf       	out	0x3d, r28	; 61
    6024:	de bf       	out	0x3e, r29	; 62
    6026:	8f 83       	std	Y+7, r24	; 0x07
	static char str[7] = "?";
	char* pstr = str;
    6028:	87 e2       	ldi	r24, 0x27	; 39
    602a:	90 e4       	ldi	r25, 0x40	; 64
    602c:	89 83       	std	Y+1, r24	; 0x01
    602e:	9a 83       	std	Y+2, r25	; 0x02
	float bat = (float)g_lastConversionResult[EXTERNAL_BATTERY_VOLTAGE];
    6030:	80 91 59 46 	lds	r24, 0x4659	; 0x804659 <_ZL22g_lastConversionResult>
    6034:	90 91 5a 46 	lds	r25, 0x465A	; 0x80465a <_ZL22g_lastConversionResult+0x1>
    6038:	cc 01       	movw	r24, r24
    603a:	a0 e0       	ldi	r26, 0x00	; 0
    603c:	b0 e0       	ldi	r27, 0x00	; 0
    603e:	bc 01       	movw	r22, r24
    6040:	cd 01       	movw	r24, r26
    6042:	0e 94 e2 7b 	call	0xf7c4	; 0xf7c4 <__floatunsisf>
    6046:	dc 01       	movw	r26, r24
    6048:	cb 01       	movw	r24, r22
    604a:	8b 83       	std	Y+3, r24	; 0x03
    604c:	9c 83       	std	Y+4, r25	; 0x04
    604e:	ad 83       	std	Y+5, r26	; 0x05
    6050:	be 83       	std	Y+6, r27	; 0x06
	bat *= 172.;
    6052:	20 e0       	ldi	r18, 0x00	; 0
    6054:	30 e0       	ldi	r19, 0x00	; 0
    6056:	4c e2       	ldi	r20, 0x2C	; 44
    6058:	53 e4       	ldi	r21, 0x43	; 67
    605a:	6b 81       	ldd	r22, Y+3	; 0x03
    605c:	7c 81       	ldd	r23, Y+4	; 0x04
    605e:	8d 81       	ldd	r24, Y+5	; 0x05
    6060:	9e 81       	ldd	r25, Y+6	; 0x06
    6062:	0e 94 99 7c 	call	0xf932	; 0xf932 <__mulsf3>
    6066:	dc 01       	movw	r26, r24
    6068:	cb 01       	movw	r24, r22
    606a:	8b 83       	std	Y+3, r24	; 0x03
    606c:	9c 83       	std	Y+4, r25	; 0x04
    606e:	ad 83       	std	Y+5, r26	; 0x05
    6070:	be 83       	std	Y+6, r27	; 0x06
	bat *= 0.0005;
    6072:	2f e6       	ldi	r18, 0x6F	; 111
    6074:	32 e1       	ldi	r19, 0x12	; 18
    6076:	43 e0       	ldi	r20, 0x03	; 3
    6078:	5a e3       	ldi	r21, 0x3A	; 58
    607a:	6b 81       	ldd	r22, Y+3	; 0x03
    607c:	7c 81       	ldd	r23, Y+4	; 0x04
    607e:	8d 81       	ldd	r24, Y+5	; 0x05
    6080:	9e 81       	ldd	r25, Y+6	; 0x06
    6082:	0e 94 99 7c 	call	0xf932	; 0xf932 <__mulsf3>
    6086:	dc 01       	movw	r26, r24
    6088:	cb 01       	movw	r24, r22
    608a:	8b 83       	std	Y+3, r24	; 0x03
    608c:	9c 83       	std	Y+4, r25	; 0x04
    608e:	ad 83       	std	Y+5, r26	; 0x05
    6090:	be 83       	std	Y+6, r27	; 0x06
	bat += 1.;
    6092:	20 e0       	ldi	r18, 0x00	; 0
    6094:	30 e0       	ldi	r19, 0x00	; 0
    6096:	40 e8       	ldi	r20, 0x80	; 128
    6098:	5f e3       	ldi	r21, 0x3F	; 63
    609a:	6b 81       	ldd	r22, Y+3	; 0x03
    609c:	7c 81       	ldd	r23, Y+4	; 0x04
    609e:	8d 81       	ldd	r24, Y+5	; 0x05
    60a0:	9e 81       	ldd	r25, Y+6	; 0x06
    60a2:	0e 94 c9 7a 	call	0xf592	; 0xf592 <__addsf3>
    60a6:	dc 01       	movw	r26, r24
    60a8:	cb 01       	movw	r24, r22
    60aa:	8b 83       	std	Y+3, r24	; 0x03
    60ac:	9c 83       	std	Y+4, r25	; 0x04
    60ae:	ad 83       	std	Y+5, r26	; 0x05
    60b0:	be 83       	std	Y+6, r27	; 0x06
	
	if((bat >= 0.) && (bat <= 180.))
    60b2:	20 e0       	ldi	r18, 0x00	; 0
    60b4:	30 e0       	ldi	r19, 0x00	; 0
    60b6:	a9 01       	movw	r20, r18
    60b8:	6b 81       	ldd	r22, Y+3	; 0x03
    60ba:	7c 81       	ldd	r23, Y+4	; 0x04
    60bc:	8d 81       	ldd	r24, Y+5	; 0x05
    60be:	9e 81       	ldd	r25, Y+6	; 0x06
    60c0:	0e 94 94 7c 	call	0xf928	; 0xf928 <__gesf2>
    60c4:	88 23       	and	r24, r24
    60c6:	0c f4       	brge	.+2      	; 0x60ca <_Z15externBatStringb+0xb6>
    60c8:	3f c0       	rjmp	.+126    	; 0x6148 <_Z15externBatStringb+0x134>
    60ca:	20 e0       	ldi	r18, 0x00	; 0
    60cc:	30 e0       	ldi	r19, 0x00	; 0
    60ce:	44 e3       	ldi	r20, 0x34	; 52
    60d0:	53 e4       	ldi	r21, 0x43	; 67
    60d2:	6b 81       	ldd	r22, Y+3	; 0x03
    60d4:	7c 81       	ldd	r23, Y+4	; 0x04
    60d6:	8d 81       	ldd	r24, Y+5	; 0x05
    60d8:	9e 81       	ldd	r25, Y+6	; 0x06
    60da:	0e 94 35 7b 	call	0xf66a	; 0xf66a <__cmpsf2>
    60de:	18 16       	cp	r1, r24
    60e0:	9c f1       	brlt	.+102    	; 0x6148 <_Z15externBatStringb+0x134>
	{
		if(volts)
    60e2:	8f 81       	ldd	r24, Y+7	; 0x07
    60e4:	88 23       	and	r24, r24
    60e6:	f9 f0       	breq	.+62     	; 0x6126 <_Z15externBatStringb+0x112>
		{
			dtostrf(bat/10., 5, 1, str);
    60e8:	20 e0       	ldi	r18, 0x00	; 0
    60ea:	30 e0       	ldi	r19, 0x00	; 0
    60ec:	40 e2       	ldi	r20, 0x20	; 32
    60ee:	51 e4       	ldi	r21, 0x41	; 65
    60f0:	6b 81       	ldd	r22, Y+3	; 0x03
    60f2:	7c 81       	ldd	r23, Y+4	; 0x04
    60f4:	8d 81       	ldd	r24, Y+5	; 0x05
    60f6:	9e 81       	ldd	r25, Y+6	; 0x06
    60f8:	0e 94 3a 7b 	call	0xf674	; 0xf674 <__divsf3>
    60fc:	dc 01       	movw	r26, r24
    60fe:	cb 01       	movw	r24, r22
    6100:	07 e2       	ldi	r16, 0x27	; 39
    6102:	10 e4       	ldi	r17, 0x40	; 64
    6104:	21 e0       	ldi	r18, 0x01	; 1
    6106:	45 e0       	ldi	r20, 0x05	; 5
    6108:	bc 01       	movw	r22, r24
    610a:	cd 01       	movw	r24, r26
    610c:	0e 94 a2 7d 	call	0xfb44	; 0xfb44 <dtostrf>
			str[6] = '\0';
    6110:	10 92 2d 40 	sts	0x402D, r1	; 0x80402d <_ZZ15externBatStringbE3str+0x6>
			pstr = trimwhitespace(str);
    6114:	87 e2       	ldi	r24, 0x27	; 39
    6116:	90 e4       	ldi	r25, 0x40	; 64
    6118:	0e 94 e9 30 	call	0x61d2	; 0x61d2 <_Z14trimwhitespacePc>
    611c:	89 83       	std	Y+1, r24	; 0x01
    611e:	9a 83       	std	Y+2, r25	; 0x02
			return pstr;
    6120:	89 81       	ldd	r24, Y+1	; 0x01
    6122:	9a 81       	ldd	r25, Y+2	; 0x02
    6124:	13 c0       	rjmp	.+38     	; 0x614c <_Z15externBatStringb+0x138>
		}
		else
		{
			dtostrf(bat, 4, 0, str);		
    6126:	8b 81       	ldd	r24, Y+3	; 0x03
    6128:	9c 81       	ldd	r25, Y+4	; 0x04
    612a:	ad 81       	ldd	r26, Y+5	; 0x05
    612c:	be 81       	ldd	r27, Y+6	; 0x06
    612e:	07 e2       	ldi	r16, 0x27	; 39
    6130:	10 e4       	ldi	r17, 0x40	; 64
    6132:	20 e0       	ldi	r18, 0x00	; 0
    6134:	44 e0       	ldi	r20, 0x04	; 4
    6136:	bc 01       	movw	r22, r24
    6138:	cd 01       	movw	r24, r26
    613a:	0e 94 a2 7d 	call	0xfb44	; 0xfb44 <dtostrf>
			str[5] = '\0';
    613e:	10 92 2c 40 	sts	0x402C, r1	; 0x80402c <_ZZ15externBatStringbE3str+0x5>
			return str;
    6142:	87 e2       	ldi	r24, 0x27	; 39
    6144:	90 e4       	ldi	r25, 0x40	; 64
    6146:	02 c0       	rjmp	.+4      	; 0x614c <_Z15externBatStringb+0x138>
		}
	}
				
	return str;
    6148:	87 e2       	ldi	r24, 0x27	; 39
    614a:	90 e4       	ldi	r25, 0x40	; 64
}
    614c:	27 96       	adiw	r28, 0x07	; 7
    614e:	cd bf       	out	0x3d, r28	; 61
    6150:	de bf       	out	0x3e, r29	; 62
    6152:	df 91       	pop	r29
    6154:	cf 91       	pop	r28
    6156:	1f 91       	pop	r17
    6158:	0f 91       	pop	r16
    615a:	08 95       	ret

0000615c <_Z7repCharPccc>:

int repChar(char *str, char orig, char rep) 
{
    615c:	cf 93       	push	r28
    615e:	df 93       	push	r29
    6160:	cd b7       	in	r28, 0x3d	; 61
    6162:	de b7       	in	r29, 0x3e	; 62
    6164:	28 97       	sbiw	r28, 0x08	; 8
    6166:	cd bf       	out	0x3d, r28	; 61
    6168:	de bf       	out	0x3e, r29	; 62
    616a:	8d 83       	std	Y+5, r24	; 0x05
    616c:	9e 83       	std	Y+6, r25	; 0x06
    616e:	6f 83       	std	Y+7, r22	; 0x07
    6170:	48 87       	std	Y+8, r20	; 0x08
	char *p = str;
    6172:	8d 81       	ldd	r24, Y+5	; 0x05
    6174:	9e 81       	ldd	r25, Y+6	; 0x06
    6176:	89 83       	std	Y+1, r24	; 0x01
    6178:	9a 83       	std	Y+2, r25	; 0x02
	int n = 0;
    617a:	1b 82       	std	Y+3, r1	; 0x03
    617c:	1c 82       	std	Y+4, r1	; 0x04
	while((p = strchr(p, orig)) != NULL) 
    617e:	8f 81       	ldd	r24, Y+7	; 0x07
    6180:	28 2f       	mov	r18, r24
    6182:	30 e0       	ldi	r19, 0x00	; 0
    6184:	89 81       	ldd	r24, Y+1	; 0x01
    6186:	9a 81       	ldd	r25, Y+2	; 0x02
    6188:	b9 01       	movw	r22, r18
    618a:	0e 94 40 7f 	call	0xfe80	; 0xfe80 <strchr>
    618e:	89 83       	std	Y+1, r24	; 0x01
    6190:	9a 83       	std	Y+2, r25	; 0x02
    6192:	21 e0       	ldi	r18, 0x01	; 1
    6194:	89 81       	ldd	r24, Y+1	; 0x01
    6196:	9a 81       	ldd	r25, Y+2	; 0x02
    6198:	89 2b       	or	r24, r25
    619a:	09 f4       	brne	.+2      	; 0x619e <_Z7repCharPccc+0x42>
    619c:	20 e0       	ldi	r18, 0x00	; 0
    619e:	22 23       	and	r18, r18
    61a0:	81 f0       	breq	.+32     	; 0x61c2 <_Z7repCharPccc+0x66>
	{
		*p++ = rep;
    61a2:	89 81       	ldd	r24, Y+1	; 0x01
    61a4:	9a 81       	ldd	r25, Y+2	; 0x02
    61a6:	9c 01       	movw	r18, r24
    61a8:	2f 5f       	subi	r18, 0xFF	; 255
    61aa:	3f 4f       	sbci	r19, 0xFF	; 255
    61ac:	29 83       	std	Y+1, r18	; 0x01
    61ae:	3a 83       	std	Y+2, r19	; 0x02
    61b0:	28 85       	ldd	r18, Y+8	; 0x08
    61b2:	fc 01       	movw	r30, r24
    61b4:	20 83       	st	Z, r18
		n++;
    61b6:	8b 81       	ldd	r24, Y+3	; 0x03
    61b8:	9c 81       	ldd	r25, Y+4	; 0x04
    61ba:	01 96       	adiw	r24, 0x01	; 1
    61bc:	8b 83       	std	Y+3, r24	; 0x03
    61be:	9c 83       	std	Y+4, r25	; 0x04

int repChar(char *str, char orig, char rep) 
{
	char *p = str;
	int n = 0;
	while((p = strchr(p, orig)) != NULL) 
    61c0:	de cf       	rjmp	.-68     	; 0x617e <_Z7repCharPccc+0x22>
	{
		*p++ = rep;
		n++;
	}
	return n;
    61c2:	8b 81       	ldd	r24, Y+3	; 0x03
    61c4:	9c 81       	ldd	r25, Y+4	; 0x04
}
    61c6:	28 96       	adiw	r28, 0x08	; 8
    61c8:	cd bf       	out	0x3d, r28	; 61
    61ca:	de bf       	out	0x3e, r29	; 62
    61cc:	df 91       	pop	r29
    61ce:	cf 91       	pop	r28
    61d0:	08 95       	ret

000061d2 <_Z14trimwhitespacePc>:

char *trimwhitespace(char *str)
{
    61d2:	cf 93       	push	r28
    61d4:	df 93       	push	r29
    61d6:	00 d0       	rcall	.+0      	; 0x61d8 <_Z14trimwhitespacePc+0x6>
    61d8:	00 d0       	rcall	.+0      	; 0x61da <_Z14trimwhitespacePc+0x8>
    61da:	cd b7       	in	r28, 0x3d	; 61
    61dc:	de b7       	in	r29, 0x3e	; 62
    61de:	8b 83       	std	Y+3, r24	; 0x03
    61e0:	9c 83       	std	Y+4, r25	; 0x04
  char *end;

  // Trim leading space
  while(isspace((unsigned char)*str)) str++;
    61e2:	8b 81       	ldd	r24, Y+3	; 0x03
    61e4:	9c 81       	ldd	r25, Y+4	; 0x04
    61e6:	fc 01       	movw	r30, r24
    61e8:	80 81       	ld	r24, Z
    61ea:	88 2f       	mov	r24, r24
    61ec:	90 e0       	ldi	r25, 0x00	; 0
    61ee:	0e 94 28 7f 	call	0xfe50	; 0xfe50 <isspace>
    61f2:	89 2b       	or	r24, r25
    61f4:	31 f0       	breq	.+12     	; 0x6202 <_Z14trimwhitespacePc+0x30>
    61f6:	8b 81       	ldd	r24, Y+3	; 0x03
    61f8:	9c 81       	ldd	r25, Y+4	; 0x04
    61fa:	01 96       	adiw	r24, 0x01	; 1
    61fc:	8b 83       	std	Y+3, r24	; 0x03
    61fe:	9c 83       	std	Y+4, r25	; 0x04
    6200:	f0 cf       	rjmp	.-32     	; 0x61e2 <_Z14trimwhitespacePc+0x10>

  if(*str == '\0')  // All spaces?
    6202:	8b 81       	ldd	r24, Y+3	; 0x03
    6204:	9c 81       	ldd	r25, Y+4	; 0x04
    6206:	fc 01       	movw	r30, r24
    6208:	80 81       	ld	r24, Z
    620a:	88 23       	and	r24, r24
    620c:	19 f4       	brne	.+6      	; 0x6214 <_Z14trimwhitespacePc+0x42>
    return str;
    620e:	8b 81       	ldd	r24, Y+3	; 0x03
    6210:	9c 81       	ldd	r25, Y+4	; 0x04
    6212:	29 c0       	rjmp	.+82     	; 0x6266 <_Z14trimwhitespacePc+0x94>

  // Trim trailing space
  end = str + strlen(str) - 1;
    6214:	8b 81       	ldd	r24, Y+3	; 0x03
    6216:	9c 81       	ldd	r25, Y+4	; 0x04
    6218:	0e 94 54 7f 	call	0xfea8	; 0xfea8 <strlen>
    621c:	01 97       	sbiw	r24, 0x01	; 1
    621e:	2b 81       	ldd	r18, Y+3	; 0x03
    6220:	3c 81       	ldd	r19, Y+4	; 0x04
    6222:	82 0f       	add	r24, r18
    6224:	93 1f       	adc	r25, r19
    6226:	89 83       	std	Y+1, r24	; 0x01
    6228:	9a 83       	std	Y+2, r25	; 0x02
  while(end > str && isspace((unsigned char)*end)) end--;
    622a:	29 81       	ldd	r18, Y+1	; 0x01
    622c:	3a 81       	ldd	r19, Y+2	; 0x02
    622e:	8b 81       	ldd	r24, Y+3	; 0x03
    6230:	9c 81       	ldd	r25, Y+4	; 0x04
    6232:	82 17       	cp	r24, r18
    6234:	93 07       	cpc	r25, r19
    6236:	80 f4       	brcc	.+32     	; 0x6258 <_Z14trimwhitespacePc+0x86>
    6238:	89 81       	ldd	r24, Y+1	; 0x01
    623a:	9a 81       	ldd	r25, Y+2	; 0x02
    623c:	fc 01       	movw	r30, r24
    623e:	80 81       	ld	r24, Z
    6240:	88 2f       	mov	r24, r24
    6242:	90 e0       	ldi	r25, 0x00	; 0
    6244:	0e 94 28 7f 	call	0xfe50	; 0xfe50 <isspace>
    6248:	89 2b       	or	r24, r25
    624a:	31 f0       	breq	.+12     	; 0x6258 <_Z14trimwhitespacePc+0x86>
    624c:	89 81       	ldd	r24, Y+1	; 0x01
    624e:	9a 81       	ldd	r25, Y+2	; 0x02
    6250:	01 97       	sbiw	r24, 0x01	; 1
    6252:	89 83       	std	Y+1, r24	; 0x01
    6254:	9a 83       	std	Y+2, r25	; 0x02
    6256:	e9 cf       	rjmp	.-46     	; 0x622a <_Z14trimwhitespacePc+0x58>

  // Write new null terminator character
  end[1] = '\0';
    6258:	89 81       	ldd	r24, Y+1	; 0x01
    625a:	9a 81       	ldd	r25, Y+2	; 0x02
    625c:	01 96       	adiw	r24, 0x01	; 1
    625e:	fc 01       	movw	r30, r24
    6260:	10 82       	st	Z, r1

  return str;
    6262:	8b 81       	ldd	r24, Y+3	; 0x03
    6264:	9c 81       	ldd	r25, Y+4	; 0x04
    6266:	24 96       	adiw	r28, 0x04	; 4
    6268:	cd bf       	out	0x3d, r28	; 61
    626a:	de bf       	out	0x3e, r29	; 62
    626c:	df 91       	pop	r29
    626e:	cf 91       	pop	r28
    6270:	08 95       	ret

00006272 <_Z41__static_initialization_and_destruction_0ii>:
    6272:	cf 93       	push	r28
    6274:	df 93       	push	r29
    6276:	00 d0       	rcall	.+0      	; 0x6278 <_Z41__static_initialization_and_destruction_0ii+0x6>
    6278:	00 d0       	rcall	.+0      	; 0x627a <_Z41__static_initialization_and_destruction_0ii+0x8>
    627a:	cd b7       	in	r28, 0x3d	; 61
    627c:	de b7       	in	r29, 0x3e	; 62
    627e:	89 83       	std	Y+1, r24	; 0x01
    6280:	9a 83       	std	Y+2, r25	; 0x02
    6282:	6b 83       	std	Y+3, r22	; 0x03
    6284:	7c 83       	std	Y+4, r23	; 0x04
    6286:	89 81       	ldd	r24, Y+1	; 0x01
    6288:	9a 81       	ldd	r25, Y+2	; 0x02
    628a:	01 97       	sbiw	r24, 0x01	; 1
    628c:	91 f4       	brne	.+36     	; 0x62b2 <_Z41__static_initialization_and_destruction_0ii+0x40>
    628e:	8b 81       	ldd	r24, Y+3	; 0x03
    6290:	9c 81       	ldd	r25, Y+4	; 0x04
    6292:	01 96       	adiw	r24, 0x01	; 1
    6294:	71 f4       	brne	.+28     	; 0x62b2 <_Z41__static_initialization_and_destruction_0ii+0x40>
Enunciation_t g_enunciator = LED_ONLY;
static volatile bool g_do_powerup_xmsn = false;

uint16_t g_Event_Configuration_Check = 0;

leds LEDS = leds();
    6296:	8b e6       	ldi	r24, 0x6B	; 107
    6298:	96 e4       	ldi	r25, 0x46	; 70
    629a:	0e 94 0f 55 	call	0xaa1e	; 0xaa1e <_ZN4ledsC1Ev>
CircularStringBuff g_text_buff = CircularStringBuff(TEXT_BUFF_SIZE);
    629e:	64 e6       	ldi	r22, 0x64	; 100
    62a0:	70 e0       	ldi	r23, 0x00	; 0
    62a2:	8c e6       	ldi	r24, 0x6C	; 108
    62a4:	96 e4       	ldi	r25, 0x46	; 70
    62a6:	0e 94 d5 39 	call	0x73aa	; 0x73aa <_ZN18CircularStringBuffC1Ej>

EepromManager g_ee_mgr;
    62aa:	86 e7       	ldi	r24, 0x76	; 118
    62ac:	96 e4       	ldi	r25, 0x46	; 70
    62ae:	0e 94 d4 41 	call	0x83a8	; 0x83a8 <_ZN13EepromManagerC1Ev>
    62b2:	89 81       	ldd	r24, Y+1	; 0x01
    62b4:	9a 81       	ldd	r25, Y+2	; 0x02
    62b6:	89 2b       	or	r24, r25
    62b8:	81 f4       	brne	.+32     	; 0x62da <_Z41__static_initialization_and_destruction_0ii+0x68>
    62ba:	8b 81       	ldd	r24, Y+3	; 0x03
    62bc:	9c 81       	ldd	r25, Y+4	; 0x04
    62be:	01 96       	adiw	r24, 0x01	; 1
    62c0:	61 f4       	brne	.+24     	; 0x62da <_Z41__static_initialization_and_destruction_0ii+0x68>
    62c2:	86 e7       	ldi	r24, 0x76	; 118
    62c4:	96 e4       	ldi	r25, 0x46	; 70
    62c6:	0e 94 e1 41 	call	0x83c2	; 0x83c2 <_ZN13EepromManagerD1Ev>
static volatile bool g_do_powerup_xmsn = false;

uint16_t g_Event_Configuration_Check = 0;

leds LEDS = leds();
CircularStringBuff g_text_buff = CircularStringBuff(TEXT_BUFF_SIZE);
    62ca:	8c e6       	ldi	r24, 0x6C	; 108
    62cc:	96 e4       	ldi	r25, 0x46	; 70
    62ce:	0e 94 09 3a 	call	0x7412	; 0x7412 <_ZN18CircularStringBuffD1Ev>
Enunciation_t g_enunciator = LED_ONLY;
static volatile bool g_do_powerup_xmsn = false;

uint16_t g_Event_Configuration_Check = 0;

leds LEDS = leds();
    62d2:	8b e6       	ldi	r24, 0x6B	; 107
    62d4:	96 e4       	ldi	r25, 0x46	; 70
    62d6:	0e 94 1c 55 	call	0xaa38	; 0xaa38 <_ZN4ledsD1Ev>

  // Write new null terminator character
  end[1] = '\0';

  return str;
    62da:	00 00       	nop
    62dc:	24 96       	adiw	r28, 0x04	; 4
    62de:	cd bf       	out	0x3d, r28	; 61
    62e0:	de bf       	out	0x3e, r29	; 62
    62e2:	df 91       	pop	r29
    62e4:	cf 91       	pop	r28
    62e6:	08 95       	ret

000062e8 <_GLOBAL__sub_I_g_antenna_connect_state>:
    62e8:	cf 93       	push	r28
    62ea:	df 93       	push	r29
    62ec:	cd b7       	in	r28, 0x3d	; 61
    62ee:	de b7       	in	r29, 0x3e	; 62
    62f0:	6f ef       	ldi	r22, 0xFF	; 255
    62f2:	7f ef       	ldi	r23, 0xFF	; 255
    62f4:	81 e0       	ldi	r24, 0x01	; 1
    62f6:	90 e0       	ldi	r25, 0x00	; 0
    62f8:	0e 94 39 31 	call	0x6272	; 0x6272 <_Z41__static_initialization_and_destruction_0ii>
    62fc:	df 91       	pop	r29
    62fe:	cf 91       	pop	r28
    6300:	08 95       	ret

00006302 <_GLOBAL__sub_D_g_antenna_connect_state>:
    6302:	cf 93       	push	r28
    6304:	df 93       	push	r29
    6306:	cd b7       	in	r28, 0x3d	; 61
    6308:	de b7       	in	r29, 0x3e	; 62
    630a:	6f ef       	ldi	r22, 0xFF	; 255
    630c:	7f ef       	ldi	r23, 0xFF	; 255
    630e:	80 e0       	ldi	r24, 0x00	; 0
    6310:	90 e0       	ldi	r25, 0x00	; 0
    6312:	0e 94 39 31 	call	0x6272	; 0x6272 <_Z41__static_initialization_and_destruction_0ii>
    6316:	df 91       	pop	r29
    6318:	cf 91       	pop	r28
    631a:	08 95       	ret

0000631c <_Z18ADC0_setADCChannel20ADC_Active_Channel_t>:
	} ADC_Init_t;
	
static ADC_Init_t g_adc_initialization = ADC_NOT_INITIALIZED;

void ADC0_setADCChannel(ADC_Active_Channel_t chan)
{
    631c:	cf 93       	push	r28
    631e:	df 93       	push	r29
    6320:	1f 92       	push	r1
    6322:	cd b7       	in	r28, 0x3d	; 61
    6324:	de b7       	in	r29, 0x3e	; 62
    6326:	89 83       	std	Y+1, r24	; 0x01
	switch(chan)
    6328:	89 81       	ldd	r24, Y+1	; 0x01
    632a:	88 2f       	mov	r24, r24
    632c:	90 e0       	ldi	r25, 0x00	; 0
    632e:	82 30       	cpi	r24, 0x02	; 2
    6330:	91 05       	cpc	r25, r1
    6332:	41 f1       	breq	.+80     	; 0x6384 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x68>
    6334:	83 30       	cpi	r24, 0x03	; 3
    6336:	91 05       	cpc	r25, r1
    6338:	2c f4       	brge	.+10     	; 0x6344 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x28>
    633a:	00 97       	sbiw	r24, 0x00	; 0
    633c:	49 f0       	breq	.+18     	; 0x6350 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x34>
    633e:	01 97       	sbiw	r24, 0x01	; 1
    6340:	a1 f0       	breq	.+40     	; 0x636a <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x4e>
    6342:	47 c0       	rjmp	.+142    	; 0x63d2 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0xb6>
    6344:	83 30       	cpi	r24, 0x03	; 3
    6346:	91 05       	cpc	r25, r1
    6348:	51 f1       	breq	.+84     	; 0x639e <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x82>
    634a:	04 97       	sbiw	r24, 0x04	; 4
    634c:	a9 f1       	breq	.+106    	; 0x63b8 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x9c>
    634e:	41 c0       	rjmp	.+130    	; 0x63d2 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0xb6>
	{
		case ADCAudioInput:
		{
			if(g_adc_initialization != ADC_FREE_RUN_INITIALIZED)
    6350:	80 91 9b 46 	lds	r24, 0x469B	; 0x80469b <_ZL20g_adc_initialization>
    6354:	81 30       	cpi	r24, 0x01	; 1
    6356:	19 f0       	breq	.+6      	; 0x635e <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x42>
			{
				ADC0_SYSTEM_init(FREE_RUNNING); 
    6358:	81 e0       	ldi	r24, 0x01	; 1
    635a:	0e 94 8f 33 	call	0x671e	; 0x671e <_ZL16ADC0_SYSTEM_initb>
			}
			
			ADC0.MUXPOS = ADC_MUXPOS_AIN2_gc;
    635e:	80 e0       	ldi	r24, 0x00	; 0
    6360:	96 e0       	ldi	r25, 0x06	; 6
    6362:	22 e0       	ldi	r18, 0x02	; 2
    6364:	fc 01       	movw	r30, r24
    6366:	20 87       	std	Z+8, r18	; 0x08
		}
		break;
    6368:	37 c0       	rjmp	.+110    	; 0x63d8 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0xbc>
		
		case ADCExternalBatteryVoltage:
		{
			if(g_adc_initialization != ADC_SINGLE_CONVERSION_INITIALIZED)
    636a:	80 91 9b 46 	lds	r24, 0x469B	; 0x80469b <_ZL20g_adc_initialization>
    636e:	82 30       	cpi	r24, 0x02	; 2
    6370:	19 f0       	breq	.+6      	; 0x6378 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x5c>
			{
				ADC0_SYSTEM_init(SINGLE_CONVERSION);
    6372:	80 e0       	ldi	r24, 0x00	; 0
    6374:	0e 94 8f 33 	call	0x671e	; 0x671e <_ZL16ADC0_SYSTEM_initb>
			}
			
			ADC0.MUXPOS = ADC_MUXPOS_AIN3_gc;
    6378:	80 e0       	ldi	r24, 0x00	; 0
    637a:	96 e0       	ldi	r25, 0x06	; 6
    637c:	23 e0       	ldi	r18, 0x03	; 3
    637e:	fc 01       	movw	r30, r24
    6380:	20 87       	std	Z+8, r18	; 0x08
		}
		break;
    6382:	2a c0       	rjmp	.+84     	; 0x63d8 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0xbc>
		
		case ADC12VRegulatedVoltage:
		{
			if(g_adc_initialization != ADC_SINGLE_CONVERSION_INITIALIZED)
    6384:	80 91 9b 46 	lds	r24, 0x469B	; 0x80469b <_ZL20g_adc_initialization>
    6388:	82 30       	cpi	r24, 0x02	; 2
    638a:	19 f0       	breq	.+6      	; 0x6392 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x76>
			{
				ADC0_SYSTEM_init(SINGLE_CONVERSION);
    638c:	80 e0       	ldi	r24, 0x00	; 0
    638e:	0e 94 8f 33 	call	0x671e	; 0x671e <_ZL16ADC0_SYSTEM_initb>
			}
			
			ADC0.MUXPOS = ADC_MUXPOS_AIN4_gc;
    6392:	80 e0       	ldi	r24, 0x00	; 0
    6394:	96 e0       	ldi	r25, 0x06	; 6
    6396:	24 e0       	ldi	r18, 0x04	; 4
    6398:	fc 01       	movw	r30, r24
    639a:	20 87       	std	Z+8, r18	; 0x08
		}
		break;
    639c:	1d c0       	rjmp	.+58     	; 0x63d8 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0xbc>
		
		case ADCTXAdjustableVoltage:
		{
			if(g_adc_initialization != ADC_SINGLE_CONVERSION_INITIALIZED)
    639e:	80 91 9b 46 	lds	r24, 0x469B	; 0x80469b <_ZL20g_adc_initialization>
    63a2:	82 30       	cpi	r24, 0x02	; 2
    63a4:	19 f0       	breq	.+6      	; 0x63ac <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x90>
			{
				ADC0_SYSTEM_init(SINGLE_CONVERSION);
    63a6:	80 e0       	ldi	r24, 0x00	; 0
    63a8:	0e 94 8f 33 	call	0x671e	; 0x671e <_ZL16ADC0_SYSTEM_initb>
			}
			
			ADC0.MUXPOS = ADC_MUXPOS_AIN5_gc;
    63ac:	80 e0       	ldi	r24, 0x00	; 0
    63ae:	96 e0       	ldi	r25, 0x06	; 6
    63b0:	25 e0       	ldi	r18, 0x05	; 5
    63b2:	fc 01       	movw	r30, r24
    63b4:	20 87       	std	Z+8, r18	; 0x08
		}
		break;
    63b6:	10 c0       	rjmp	.+32     	; 0x63d8 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0xbc>
		
		case ADCTemperature:
		{
			if(g_adc_initialization != ADC_SINGLE_CONVERSION_INITIALIZED)
    63b8:	80 91 9b 46 	lds	r24, 0x469B	; 0x80469b <_ZL20g_adc_initialization>
    63bc:	82 30       	cpi	r24, 0x02	; 2
    63be:	19 f0       	breq	.+6      	; 0x63c6 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0xaa>
			{
				ADC0_SYSTEM_init(SINGLE_CONVERSION);
    63c0:	80 e0       	ldi	r24, 0x00	; 0
    63c2:	0e 94 8f 33 	call	0x671e	; 0x671e <_ZL16ADC0_SYSTEM_initb>
			}
			
			ADC0.MUXPOS = ADC_MUXPOS_TEMPSENSE_gc;
    63c6:	80 e0       	ldi	r24, 0x00	; 0
    63c8:	96 e0       	ldi	r25, 0x06	; 6
    63ca:	22 e4       	ldi	r18, 0x42	; 66
    63cc:	fc 01       	movw	r30, r24
    63ce:	20 87       	std	Z+8, r18	; 0x08
		}
		break;
    63d0:	03 c0       	rjmp	.+6      	; 0x63d8 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0xbc>
		
		default:
		{
			ADC0_SYSTEM_shutdown();
    63d2:	0e 94 a1 33 	call	0x6742	; 0x6742 <_ZL20ADC0_SYSTEM_shutdownv>
		}
		break;	
    63d6:	00 00       	nop
	}
}
    63d8:	00 00       	nop
    63da:	0f 90       	pop	r0
    63dc:	df 91       	pop	r29
    63de:	cf 91       	pop	r28
    63e0:	08 95       	ret

000063e2 <_Z20ADC0_startConversionv>:

void ADC0_startConversion(void)
{
    63e2:	cf 93       	push	r28
    63e4:	df 93       	push	r29
    63e6:	cd b7       	in	r28, 0x3d	; 61
    63e8:	de b7       	in	r29, 0x3e	; 62
	if(g_adc_initialization != ADC_NOT_INITIALIZED)
    63ea:	80 91 9b 46 	lds	r24, 0x469B	; 0x80469b <_ZL20g_adc_initialization>
    63ee:	88 23       	and	r24, r24
    63f0:	49 f0       	breq	.+18     	; 0x6404 <_Z20ADC0_startConversionv+0x22>
	{
		ADC0.INTCTRL = 0x00; /* Disable interrupt */
    63f2:	80 e0       	ldi	r24, 0x00	; 0
    63f4:	96 e0       	ldi	r25, 0x06	; 6
    63f6:	fc 01       	movw	r30, r24
    63f8:	14 86       	std	Z+12, r1	; 0x0c
		ADC0.COMMAND = ADC_STCONV_bm; /* Start conversion */
    63fa:	80 e0       	ldi	r24, 0x00	; 0
    63fc:	96 e0       	ldi	r25, 0x06	; 6
    63fe:	21 e0       	ldi	r18, 0x01	; 1
    6400:	fc 01       	movw	r30, r24
    6402:	22 87       	std	Z+10, r18	; 0x0a
	}
}
    6404:	00 00       	nop
    6406:	df 91       	pop	r29
    6408:	cf 91       	pop	r28
    640a:	08 95       	ret

0000640c <_Z19ADC0_conversionDonev>:

bool ADC0_conversionDone(void)
{
    640c:	cf 93       	push	r28
    640e:	df 93       	push	r29
    6410:	cd b7       	in	r28, 0x3d	; 61
    6412:	de b7       	in	r29, 0x3e	; 62
	/* Check if the conversion is done  */
	return (ADC0.INTFLAGS & ADC_RESRDY_bm);
    6414:	80 e0       	ldi	r24, 0x00	; 0
    6416:	96 e0       	ldi	r25, 0x06	; 6
    6418:	fc 01       	movw	r30, r24
    641a:	85 85       	ldd	r24, Z+13	; 0x0d
    641c:	88 2f       	mov	r24, r24
    641e:	90 e0       	ldi	r25, 0x00	; 0
    6420:	81 70       	andi	r24, 0x01	; 1
    6422:	99 27       	eor	r25, r25
    6424:	21 e0       	ldi	r18, 0x01	; 1
    6426:	89 2b       	or	r24, r25
    6428:	09 f4       	brne	.+2      	; 0x642c <_Z19ADC0_conversionDonev+0x20>
    642a:	20 e0       	ldi	r18, 0x00	; 0
    642c:	82 2f       	mov	r24, r18
}
    642e:	df 91       	pop	r29
    6430:	cf 91       	pop	r28
    6432:	08 95       	ret

00006434 <_Z9ADC0_readv>:

int ADC0_read(void)
{
    6434:	cf 93       	push	r28
    6436:	df 93       	push	r29
    6438:	cd b7       	in	r28, 0x3d	; 61
    643a:	de b7       	in	r29, 0x3e	; 62
	return ADC0.RES; 	/* Reading the result also clears the interrupt flag */
    643c:	80 e0       	ldi	r24, 0x00	; 0
    643e:	96 e0       	ldi	r25, 0x06	; 6
    6440:	fc 01       	movw	r30, r24
    6442:	80 89       	ldd	r24, Z+16	; 0x10
    6444:	91 89       	ldd	r25, Z+17	; 0x11
}
    6446:	df 91       	pop	r29
    6448:	cf 91       	pop	r28
    644a:	08 95       	ret

0000644c <_Z12temperatureCv>:

int16_t temperatureC(void)
{
    644c:	cf 93       	push	r28
    644e:	df 93       	push	r29
    6450:	cd b7       	in	r28, 0x3d	; 61
    6452:	de b7       	in	r29, 0x3e	; 62
    6454:	2d 97       	sbiw	r28, 0x0d	; 13
    6456:	cd bf       	out	0x3d, r28	; 61
    6458:	de bf       	out	0x3e, r29	; 62
	uint16_t sigrow_offset = SIGROW.TEMPSENSE1; // Read unsigned value from signature row
    645a:	80 e0       	ldi	r24, 0x00	; 0
    645c:	91 e1       	ldi	r25, 0x11	; 17
    645e:	fc 01       	movw	r30, r24
    6460:	86 81       	ldd	r24, Z+6	; 0x06
    6462:	97 81       	ldd	r25, Z+7	; 0x07
    6464:	8b 83       	std	Y+3, r24	; 0x03
    6466:	9c 83       	std	Y+4, r25	; 0x04
	uint16_t sigrow_slope = SIGROW.TEMPSENSE0; // Read unsigned value from signature row
    6468:	80 e0       	ldi	r24, 0x00	; 0
    646a:	91 e1       	ldi	r25, 0x11	; 17
    646c:	fc 01       	movw	r30, r24
    646e:	84 81       	ldd	r24, Z+4	; 0x04
    6470:	95 81       	ldd	r25, Z+5	; 0x05
    6472:	8d 83       	std	Y+5, r24	; 0x05
    6474:	9e 83       	std	Y+6, r25	; 0x06
	static uint32_t wait = 10000;
	uint16_t adc_reading;
	int16_t temperature_in_C = -273.15;
    6476:	8f ee       	ldi	r24, 0xEF	; 239
    6478:	9e ef       	ldi	r25, 0xFE	; 254
    647a:	89 83       	std	Y+1, r24	; 0x01
    647c:	9a 83       	std	Y+2, r25	; 0x02
	uint8_t holdMux;
	
	holdMux = ADC0.MUXPOS;
    647e:	80 e0       	ldi	r24, 0x00	; 0
    6480:	96 e0       	ldi	r25, 0x06	; 6
    6482:	fc 01       	movw	r30, r24
    6484:	80 85       	ldd	r24, Z+8	; 0x08
    6486:	8f 83       	std	Y+7, r24	; 0x07
	ADC0_SYSTEM_init(SINGLE_CONVERSION);
    6488:	80 e0       	ldi	r24, 0x00	; 0
    648a:	0e 94 8f 33 	call	0x671e	; 0x671e <_ZL16ADC0_SYSTEM_initb>
	ADC0.MUXPOS = ADC_MUXPOS_TEMPSENSE_gc;
    648e:	80 e0       	ldi	r24, 0x00	; 0
    6490:	96 e0       	ldi	r25, 0x06	; 6
    6492:	22 e4       	ldi	r18, 0x42	; 66
    6494:	fc 01       	movw	r30, r24
    6496:	20 87       	std	Z+8, r18	; 0x08
	ADC0_startConversion();
    6498:	0e 94 f1 31 	call	0x63e2	; 0x63e2 <_Z20ADC0_startConversionv>
	
	while((!ADC0_conversionDone()) && wait--);
    649c:	0e 94 06 32 	call	0x640c	; 0x640c <_Z19ADC0_conversionDonev>
    64a0:	98 2f       	mov	r25, r24
    64a2:	81 e0       	ldi	r24, 0x01	; 1
    64a4:	89 27       	eor	r24, r25
    64a6:	88 23       	and	r24, r24
    64a8:	e1 f0       	breq	.+56     	; 0x64e2 <_Z12temperatureCv+0x96>
    64aa:	80 91 2e 40 	lds	r24, 0x402E	; 0x80402e <_ZZ12temperatureCvE4wait>
    64ae:	90 91 2f 40 	lds	r25, 0x402F	; 0x80402f <_ZZ12temperatureCvE4wait+0x1>
    64b2:	a0 91 30 40 	lds	r26, 0x4030	; 0x804030 <_ZZ12temperatureCvE4wait+0x2>
    64b6:	b0 91 31 40 	lds	r27, 0x4031	; 0x804031 <_ZZ12temperatureCvE4wait+0x3>
    64ba:	9c 01       	movw	r18, r24
    64bc:	ad 01       	movw	r20, r26
    64be:	21 50       	subi	r18, 0x01	; 1
    64c0:	31 09       	sbc	r19, r1
    64c2:	41 09       	sbc	r20, r1
    64c4:	51 09       	sbc	r21, r1
    64c6:	20 93 2e 40 	sts	0x402E, r18	; 0x80402e <_ZZ12temperatureCvE4wait>
    64ca:	30 93 2f 40 	sts	0x402F, r19	; 0x80402f <_ZZ12temperatureCvE4wait+0x1>
    64ce:	40 93 30 40 	sts	0x4030, r20	; 0x804030 <_ZZ12temperatureCvE4wait+0x2>
    64d2:	50 93 31 40 	sts	0x4031, r21	; 0x804031 <_ZZ12temperatureCvE4wait+0x3>
    64d6:	89 2b       	or	r24, r25
    64d8:	8a 2b       	or	r24, r26
    64da:	8b 2b       	or	r24, r27
    64dc:	11 f0       	breq	.+4      	; 0x64e2 <_Z12temperatureCv+0x96>
    64de:	81 e0       	ldi	r24, 0x01	; 1
    64e0:	01 c0       	rjmp	.+2      	; 0x64e4 <_Z12temperatureCv+0x98>
    64e2:	80 e0       	ldi	r24, 0x00	; 0
    64e4:	88 23       	and	r24, r24
    64e6:	09 f0       	breq	.+2      	; 0x64ea <_Z12temperatureCv+0x9e>
    64e8:	d9 cf       	rjmp	.-78     	; 0x649c <_Z12temperatureCv+0x50>
	
	if(wait)
    64ea:	80 91 2e 40 	lds	r24, 0x402E	; 0x80402e <_ZZ12temperatureCvE4wait>
    64ee:	90 91 2f 40 	lds	r25, 0x402F	; 0x80402f <_ZZ12temperatureCvE4wait+0x1>
    64f2:	a0 91 30 40 	lds	r26, 0x4030	; 0x804030 <_ZZ12temperatureCvE4wait+0x2>
    64f6:	b0 91 31 40 	lds	r27, 0x4031	; 0x804031 <_ZZ12temperatureCvE4wait+0x3>
    64fa:	89 2b       	or	r24, r25
    64fc:	8a 2b       	or	r24, r26
    64fe:	8b 2b       	or	r24, r27
    6500:	09 f4       	brne	.+2      	; 0x6504 <_Z12temperatureCv+0xb8>
    6502:	4d c0       	rjmp	.+154    	; 0x659e <_Z12temperatureCv+0x152>
	{
		adc_reading = ADC0.RES;
    6504:	80 e0       	ldi	r24, 0x00	; 0
    6506:	96 e0       	ldi	r25, 0x06	; 6
    6508:	fc 01       	movw	r30, r24
    650a:	80 89       	ldd	r24, Z+16	; 0x10
    650c:	91 89       	ldd	r25, Z+17	; 0x11
    650e:	88 87       	std	Y+8, r24	; 0x08
    6510:	99 87       	std	Y+9, r25	; 0x09
		int32_t temp = sigrow_offset - adc_reading;
    6512:	2b 81       	ldd	r18, Y+3	; 0x03
    6514:	3c 81       	ldd	r19, Y+4	; 0x04
    6516:	88 85       	ldd	r24, Y+8	; 0x08
    6518:	99 85       	ldd	r25, Y+9	; 0x09
    651a:	a9 01       	movw	r20, r18
    651c:	48 1b       	sub	r20, r24
    651e:	59 0b       	sbc	r21, r25
    6520:	ca 01       	movw	r24, r20
    6522:	cc 01       	movw	r24, r24
    6524:	a0 e0       	ldi	r26, 0x00	; 0
    6526:	b0 e0       	ldi	r27, 0x00	; 0
    6528:	8a 87       	std	Y+10, r24	; 0x0a
    652a:	9b 87       	std	Y+11, r25	; 0x0b
    652c:	ac 87       	std	Y+12, r26	; 0x0c
    652e:	bd 87       	std	Y+13, r27	; 0x0d
		temp *= sigrow_slope; // Result will overflow 16-bit variable
    6530:	8d 81       	ldd	r24, Y+5	; 0x05
    6532:	9e 81       	ldd	r25, Y+6	; 0x06
    6534:	cc 01       	movw	r24, r24
    6536:	a0 e0       	ldi	r26, 0x00	; 0
    6538:	b0 e0       	ldi	r27, 0x00	; 0
    653a:	2a 85       	ldd	r18, Y+10	; 0x0a
    653c:	3b 85       	ldd	r19, Y+11	; 0x0b
    653e:	4c 85       	ldd	r20, Y+12	; 0x0c
    6540:	5d 85       	ldd	r21, Y+13	; 0x0d
    6542:	bc 01       	movw	r22, r24
    6544:	cd 01       	movw	r24, r26
    6546:	0e 94 06 7d 	call	0xfa0c	; 0xfa0c <__mulsi3>
    654a:	dc 01       	movw	r26, r24
    654c:	cb 01       	movw	r24, r22
    654e:	8a 87       	std	Y+10, r24	; 0x0a
    6550:	9b 87       	std	Y+11, r25	; 0x0b
    6552:	ac 87       	std	Y+12, r26	; 0x0c
    6554:	bd 87       	std	Y+13, r27	; 0x0d
		temp += 0x0800; // Add 4096/2 to get correct rounding on division below
    6556:	8a 85       	ldd	r24, Y+10	; 0x0a
    6558:	9b 85       	ldd	r25, Y+11	; 0x0b
    655a:	ac 85       	ldd	r26, Y+12	; 0x0c
    655c:	bd 85       	ldd	r27, Y+13	; 0x0d
    655e:	98 5f       	subi	r25, 0xF8	; 248
    6560:	af 4f       	sbci	r26, 0xFF	; 255
    6562:	bf 4f       	sbci	r27, 0xFF	; 255
    6564:	8a 87       	std	Y+10, r24	; 0x0a
    6566:	9b 87       	std	Y+11, r25	; 0x0b
    6568:	ac 87       	std	Y+12, r26	; 0x0c
    656a:	bd 87       	std	Y+13, r27	; 0x0d
		temp >>= 12; // Round off to nearest degree in Kelvin, by dividing with 2^12 (4096)
    656c:	8a 85       	ldd	r24, Y+10	; 0x0a
    656e:	9b 85       	ldd	r25, Y+11	; 0x0b
    6570:	ac 85       	ldd	r26, Y+12	; 0x0c
    6572:	bd 85       	ldd	r27, Y+13	; 0x0d
    6574:	07 2e       	mov	r0, r23
    6576:	7c e0       	ldi	r23, 0x0C	; 12
    6578:	b5 95       	asr	r27
    657a:	a7 95       	ror	r26
    657c:	97 95       	ror	r25
    657e:	87 95       	ror	r24
    6580:	7a 95       	dec	r23
    6582:	d1 f7       	brne	.-12     	; 0x6578 <_Z12temperatureCv+0x12c>
    6584:	70 2d       	mov	r23, r0
    6586:	8a 87       	std	Y+10, r24	; 0x0a
    6588:	9b 87       	std	Y+11, r25	; 0x0b
    658a:	ac 87       	std	Y+12, r26	; 0x0c
    658c:	bd 87       	std	Y+13, r27	; 0x0d
		temperature_in_C += (int16_t)temp;
    658e:	8a 85       	ldd	r24, Y+10	; 0x0a
    6590:	9b 85       	ldd	r25, Y+11	; 0x0b
    6592:	29 81       	ldd	r18, Y+1	; 0x01
    6594:	3a 81       	ldd	r19, Y+2	; 0x02
    6596:	82 0f       	add	r24, r18
    6598:	93 1f       	adc	r25, r19
    659a:	89 83       	std	Y+1, r24	; 0x01
    659c:	9a 83       	std	Y+2, r25	; 0x02
	}
	
	ADC0.MUXPOS = holdMux; /* Restore ADC registers */
    659e:	80 e0       	ldi	r24, 0x00	; 0
    65a0:	96 e0       	ldi	r25, 0x06	; 6
    65a2:	2f 81       	ldd	r18, Y+7	; 0x07
    65a4:	fc 01       	movw	r30, r24
    65a6:	20 87       	std	Z+8, r18	; 0x08
	
	return(temperature_in_C);
    65a8:	89 81       	ldd	r24, Y+1	; 0x01
    65aa:	9a 81       	ldd	r25, Y+2	; 0x02
}
    65ac:	2d 96       	adiw	r28, 0x0d	; 13
    65ae:	cd bf       	out	0x3d, r28	; 61
    65b0:	de bf       	out	0x3e, r29	; 62
    65b2:	df 91       	pop	r29
    65b4:	cf 91       	pop	r28
    65b6:	08 95       	ret

000065b8 <_ZL9PORT_initv>:


static void PORT_init(void)
{
    65b8:	cf 93       	push	r28
    65ba:	df 93       	push	r29
    65bc:	cd b7       	in	r28, 0x3d	; 61
    65be:	de b7       	in	r29, 0x3e	; 62
	/* Disable interrupt and digital input buffer on PD2 */
	PORTD.PIN2CTRL &= ~PORT_ISC_gm;
    65c0:	80 e6       	ldi	r24, 0x60	; 96
    65c2:	94 e0       	ldi	r25, 0x04	; 4
    65c4:	20 e6       	ldi	r18, 0x60	; 96
    65c6:	34 e0       	ldi	r19, 0x04	; 4
    65c8:	f9 01       	movw	r30, r18
    65ca:	22 89       	ldd	r18, Z+18	; 0x12
    65cc:	28 7f       	andi	r18, 0xF8	; 248
    65ce:	fc 01       	movw	r30, r24
    65d0:	22 8b       	std	Z+18, r18	; 0x12
	PORTD.PIN2CTRL |= PORT_ISC_INPUT_DISABLE_gc;
    65d2:	80 e6       	ldi	r24, 0x60	; 96
    65d4:	94 e0       	ldi	r25, 0x04	; 4
    65d6:	20 e6       	ldi	r18, 0x60	; 96
    65d8:	34 e0       	ldi	r19, 0x04	; 4
    65da:	f9 01       	movw	r30, r18
    65dc:	22 89       	ldd	r18, Z+18	; 0x12
    65de:	24 60       	ori	r18, 0x04	; 4
    65e0:	fc 01       	movw	r30, r24
    65e2:	22 8b       	std	Z+18, r18	; 0x12
	/* Disable interrupt and digital input buffer on PD3 */
	PORTD.PIN3CTRL &= ~PORT_ISC_gm;
    65e4:	80 e6       	ldi	r24, 0x60	; 96
    65e6:	94 e0       	ldi	r25, 0x04	; 4
    65e8:	20 e6       	ldi	r18, 0x60	; 96
    65ea:	34 e0       	ldi	r19, 0x04	; 4
    65ec:	f9 01       	movw	r30, r18
    65ee:	23 89       	ldd	r18, Z+19	; 0x13
    65f0:	28 7f       	andi	r18, 0xF8	; 248
    65f2:	fc 01       	movw	r30, r24
    65f4:	23 8b       	std	Z+19, r18	; 0x13
	PORTD.PIN3CTRL |= PORT_ISC_INPUT_DISABLE_gc;
    65f6:	80 e6       	ldi	r24, 0x60	; 96
    65f8:	94 e0       	ldi	r25, 0x04	; 4
    65fa:	20 e6       	ldi	r18, 0x60	; 96
    65fc:	34 e0       	ldi	r19, 0x04	; 4
    65fe:	f9 01       	movw	r30, r18
    6600:	23 89       	ldd	r18, Z+19	; 0x13
    6602:	24 60       	ori	r18, 0x04	; 4
    6604:	fc 01       	movw	r30, r24
    6606:	23 8b       	std	Z+19, r18	; 0x13
	/* Disable interrupt and digital input buffer on PD4 */
	PORTD.PIN4CTRL &= ~PORT_ISC_gm;
    6608:	80 e6       	ldi	r24, 0x60	; 96
    660a:	94 e0       	ldi	r25, 0x04	; 4
    660c:	20 e6       	ldi	r18, 0x60	; 96
    660e:	34 e0       	ldi	r19, 0x04	; 4
    6610:	f9 01       	movw	r30, r18
    6612:	24 89       	ldd	r18, Z+20	; 0x14
    6614:	28 7f       	andi	r18, 0xF8	; 248
    6616:	fc 01       	movw	r30, r24
    6618:	24 8b       	std	Z+20, r18	; 0x14
	PORTD.PIN4CTRL |= PORT_ISC_INPUT_DISABLE_gc;
    661a:	80 e6       	ldi	r24, 0x60	; 96
    661c:	94 e0       	ldi	r25, 0x04	; 4
    661e:	20 e6       	ldi	r18, 0x60	; 96
    6620:	34 e0       	ldi	r19, 0x04	; 4
    6622:	f9 01       	movw	r30, r18
    6624:	24 89       	ldd	r18, Z+20	; 0x14
    6626:	24 60       	ori	r18, 0x04	; 4
    6628:	fc 01       	movw	r30, r24
    662a:	24 8b       	std	Z+20, r18	; 0x14
	/* Disable interrupt and digital input buffer on PD5 */
	PORTD.PIN5CTRL &= ~PORT_ISC_gm;
    662c:	80 e6       	ldi	r24, 0x60	; 96
    662e:	94 e0       	ldi	r25, 0x04	; 4
    6630:	20 e6       	ldi	r18, 0x60	; 96
    6632:	34 e0       	ldi	r19, 0x04	; 4
    6634:	f9 01       	movw	r30, r18
    6636:	25 89       	ldd	r18, Z+21	; 0x15
    6638:	28 7f       	andi	r18, 0xF8	; 248
    663a:	fc 01       	movw	r30, r24
    663c:	25 8b       	std	Z+21, r18	; 0x15
	PORTD.PIN5CTRL |= PORT_ISC_INPUT_DISABLE_gc;
    663e:	80 e6       	ldi	r24, 0x60	; 96
    6640:	94 e0       	ldi	r25, 0x04	; 4
    6642:	20 e6       	ldi	r18, 0x60	; 96
    6644:	34 e0       	ldi	r19, 0x04	; 4
    6646:	f9 01       	movw	r30, r18
    6648:	25 89       	ldd	r18, Z+21	; 0x15
    664a:	24 60       	ori	r18, 0x04	; 4
    664c:	fc 01       	movw	r30, r24
    664e:	25 8b       	std	Z+21, r18	; 0x15
	
	/* Disable pull-up resistor */
	PORTD.PIN2CTRL &= ~PORT_PULLUPEN_bm;
    6650:	80 e6       	ldi	r24, 0x60	; 96
    6652:	94 e0       	ldi	r25, 0x04	; 4
    6654:	20 e6       	ldi	r18, 0x60	; 96
    6656:	34 e0       	ldi	r19, 0x04	; 4
    6658:	f9 01       	movw	r30, r18
    665a:	22 89       	ldd	r18, Z+18	; 0x12
    665c:	27 7f       	andi	r18, 0xF7	; 247
    665e:	fc 01       	movw	r30, r24
    6660:	22 8b       	std	Z+18, r18	; 0x12
	PORTD.PIN3CTRL &= ~PORT_PULLUPEN_bm;
    6662:	80 e6       	ldi	r24, 0x60	; 96
    6664:	94 e0       	ldi	r25, 0x04	; 4
    6666:	20 e6       	ldi	r18, 0x60	; 96
    6668:	34 e0       	ldi	r19, 0x04	; 4
    666a:	f9 01       	movw	r30, r18
    666c:	23 89       	ldd	r18, Z+19	; 0x13
    666e:	27 7f       	andi	r18, 0xF7	; 247
    6670:	fc 01       	movw	r30, r24
    6672:	23 8b       	std	Z+19, r18	; 0x13
	PORTD.PIN4CTRL &= ~PORT_PULLUPEN_bm;
    6674:	80 e6       	ldi	r24, 0x60	; 96
    6676:	94 e0       	ldi	r25, 0x04	; 4
    6678:	20 e6       	ldi	r18, 0x60	; 96
    667a:	34 e0       	ldi	r19, 0x04	; 4
    667c:	f9 01       	movw	r30, r18
    667e:	24 89       	ldd	r18, Z+20	; 0x14
    6680:	27 7f       	andi	r18, 0xF7	; 247
    6682:	fc 01       	movw	r30, r24
    6684:	24 8b       	std	Z+20, r18	; 0x14
	PORTD.PIN5CTRL &= ~PORT_PULLUPEN_bm;
    6686:	80 e6       	ldi	r24, 0x60	; 96
    6688:	94 e0       	ldi	r25, 0x04	; 4
    668a:	20 e6       	ldi	r18, 0x60	; 96
    668c:	34 e0       	ldi	r19, 0x04	; 4
    668e:	f9 01       	movw	r30, r18
    6690:	25 89       	ldd	r18, Z+21	; 0x15
    6692:	27 7f       	andi	r18, 0xF7	; 247
    6694:	fc 01       	movw	r30, r24
    6696:	25 8b       	std	Z+21, r18	; 0x15
}
    6698:	00 00       	nop
    669a:	df 91       	pop	r29
    669c:	cf 91       	pop	r28
    669e:	08 95       	ret

000066a0 <_ZL10VREF0_initv>:

static void VREF0_init(void)
{
    66a0:	cf 93       	push	r28
    66a2:	df 93       	push	r29
    66a4:	cd b7       	in	r28, 0x3d	; 61
    66a6:	de b7       	in	r29, 0x3e	; 62
	VREF.ADC0REF = VREF_REFSEL_2V048_gc;  /* Internal 2.048V reference */
    66a8:	80 ea       	ldi	r24, 0xA0	; 160
    66aa:	90 e0       	ldi	r25, 0x00	; 0
    66ac:	21 e0       	ldi	r18, 0x01	; 1
    66ae:	fc 01       	movw	r30, r24
    66b0:	20 83       	st	Z, r18
}
    66b2:	00 00       	nop
    66b4:	df 91       	pop	r29
    66b6:	cf 91       	pop	r28
    66b8:	08 95       	ret

000066ba <_ZL9ADC0_initb>:

static void ADC0_init(bool freerun)
{
    66ba:	cf 93       	push	r28
    66bc:	df 93       	push	r29
    66be:	1f 92       	push	r1
    66c0:	cd b7       	in	r28, 0x3d	; 61
    66c2:	de b7       	in	r29, 0x3e	; 62
    66c4:	89 83       	std	Y+1, r24	; 0x01
	ADC0.CTRLC = ADC_PRESC_DIV64_gc;   /* CLK_PER divided by 4 => 24096 sps */
    66c6:	80 e0       	ldi	r24, 0x00	; 0
    66c8:	96 e0       	ldi	r25, 0x06	; 6
    66ca:	2a e0       	ldi	r18, 0x0A	; 10
    66cc:	fc 01       	movw	r30, r24
    66ce:	22 83       	std	Z+2, r18	; 0x02
	
	if(freerun)
    66d0:	89 81       	ldd	r24, Y+1	; 0x01
    66d2:	88 23       	and	r24, r24
    66d4:	99 f0       	breq	.+38     	; 0x66fc <_ZL9ADC0_initb+0x42>
	{
		ADC0.CTRLA = ADC_ENABLE_bm /* ADC Enable: enabled */
    66d6:	80 e0       	ldi	r24, 0x00	; 0
    66d8:	96 e0       	ldi	r25, 0x06	; 6
		| ADC_RESSEL_12BIT_gc      /* 12-bit mode */
		| ADC_FREERUN_bm;          /* Enable Free-Run mode */
    66da:	23 e0       	ldi	r18, 0x03	; 3
    66dc:	fc 01       	movw	r30, r24
    66de:	20 83       	st	Z, r18
		
		ADC0.INTCTRL = 0x01; /* Enable interrupt */
    66e0:	80 e0       	ldi	r24, 0x00	; 0
    66e2:	96 e0       	ldi	r25, 0x06	; 6
    66e4:	21 e0       	ldi	r18, 0x01	; 1
    66e6:	fc 01       	movw	r30, r24
    66e8:	24 87       	std	Z+12, r18	; 0x0c
		
		ADC0.COMMAND = ADC_STCONV_bm; /* Start conversion */
    66ea:	80 e0       	ldi	r24, 0x00	; 0
    66ec:	96 e0       	ldi	r25, 0x06	; 6
    66ee:	21 e0       	ldi	r18, 0x01	; 1
    66f0:	fc 01       	movw	r30, r24
    66f2:	22 87       	std	Z+10, r18	; 0x0a
		g_adc_initialization = ADC_FREE_RUN_INITIALIZED;
    66f4:	81 e0       	ldi	r24, 0x01	; 1
    66f6:	80 93 9b 46 	sts	0x469B, r24	; 0x80469b <_ZL20g_adc_initialization>
	{
		ADC0.CTRLA = ADC_ENABLE_bm;  /* ADC Enable: enabled; 12-bit mode is default */
		ADC0.INTCTRL = 0x00; /* Disable interrupt */
		g_adc_initialization = ADC_SINGLE_CONVERSION_INITIALIZED;
	}
}
    66fa:	0c c0       	rjmp	.+24     	; 0x6714 <_ZL9ADC0_initb+0x5a>
		ADC0.COMMAND = ADC_STCONV_bm; /* Start conversion */
		g_adc_initialization = ADC_FREE_RUN_INITIALIZED;
	}
	else
	{
		ADC0.CTRLA = ADC_ENABLE_bm;  /* ADC Enable: enabled; 12-bit mode is default */
    66fc:	80 e0       	ldi	r24, 0x00	; 0
    66fe:	96 e0       	ldi	r25, 0x06	; 6
    6700:	21 e0       	ldi	r18, 0x01	; 1
    6702:	fc 01       	movw	r30, r24
    6704:	20 83       	st	Z, r18
		ADC0.INTCTRL = 0x00; /* Disable interrupt */
    6706:	80 e0       	ldi	r24, 0x00	; 0
    6708:	96 e0       	ldi	r25, 0x06	; 6
    670a:	fc 01       	movw	r30, r24
    670c:	14 86       	std	Z+12, r1	; 0x0c
		g_adc_initialization = ADC_SINGLE_CONVERSION_INITIALIZED;
    670e:	82 e0       	ldi	r24, 0x02	; 2
    6710:	80 93 9b 46 	sts	0x469B, r24	; 0x80469b <_ZL20g_adc_initialization>
	}
}
    6714:	00 00       	nop
    6716:	0f 90       	pop	r0
    6718:	df 91       	pop	r29
    671a:	cf 91       	pop	r28
    671c:	08 95       	ret

0000671e <_ZL16ADC0_SYSTEM_initb>:

static void ADC0_SYSTEM_init(bool freerun)
{
    671e:	cf 93       	push	r28
    6720:	df 93       	push	r29
    6722:	1f 92       	push	r1
    6724:	cd b7       	in	r28, 0x3d	; 61
    6726:	de b7       	in	r29, 0x3e	; 62
    6728:	89 83       	std	Y+1, r24	; 0x01
	PORT_init();
    672a:	0e 94 dc 32 	call	0x65b8	; 0x65b8 <_ZL9PORT_initv>
	VREF0_init();
    672e:	0e 94 50 33 	call	0x66a0	; 0x66a0 <_ZL10VREF0_initv>
	ADC0_init(freerun);
    6732:	89 81       	ldd	r24, Y+1	; 0x01
    6734:	0e 94 5d 33 	call	0x66ba	; 0x66ba <_ZL9ADC0_initb>
}
    6738:	00 00       	nop
    673a:	0f 90       	pop	r0
    673c:	df 91       	pop	r29
    673e:	cf 91       	pop	r28
    6740:	08 95       	ret

00006742 <_ZL20ADC0_SYSTEM_shutdownv>:

static void ADC0_SYSTEM_shutdown(void)
{
    6742:	cf 93       	push	r28
    6744:	df 93       	push	r29
    6746:	cd b7       	in	r28, 0x3d	; 61
    6748:	de b7       	in	r29, 0x3e	; 62
	ADC0.INTCTRL = 0x00; /* Disable interrupt */
    674a:	80 e0       	ldi	r24, 0x00	; 0
    674c:	96 e0       	ldi	r25, 0x06	; 6
    674e:	fc 01       	movw	r30, r24
    6750:	14 86       	std	Z+12, r1	; 0x0c
	ADC0.CTRLA = ADC_RESSEL_12BIT_gc; /* Turn off ADC leaving 12-bit resolution set */
    6752:	80 e0       	ldi	r24, 0x00	; 0
    6754:	96 e0       	ldi	r25, 0x06	; 6
    6756:	fc 01       	movw	r30, r24
    6758:	10 82       	st	Z, r1
	g_adc_initialization = ADC_NOT_INITIALIZED;
    675a:	10 92 9b 46 	sts	0x469B, r1	; 0x80469b <_ZL20g_adc_initialization>
}
    675e:	00 00       	nop
    6760:	df 91       	pop	r29
    6762:	cf 91       	pop	r28
    6764:	08 95       	ret

00006766 <__vector_24>:

ISR(ADC0_RESRDY_vect)
{
    6766:	1f 92       	push	r1
    6768:	0f 92       	push	r0
    676a:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    676e:	0f 92       	push	r0
    6770:	11 24       	eor	r1, r1
    6772:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    6776:	0f 92       	push	r0
    6778:	2f 93       	push	r18
    677a:	3f 93       	push	r19
    677c:	4f 93       	push	r20
    677e:	5f 93       	push	r21
    6780:	6f 93       	push	r22
    6782:	7f 93       	push	r23
    6784:	8f 93       	push	r24
    6786:	9f 93       	push	r25
    6788:	af 93       	push	r26
    678a:	bf 93       	push	r27
    678c:	ef 93       	push	r30
    678e:	ff 93       	push	r31
    6790:	cf 93       	push	r28
    6792:	df 93       	push	r29
    6794:	00 d0       	rcall	.+0      	; 0x6796 <__vector_24+0x30>
    6796:	cd b7       	in	r28, 0x3d	; 61
    6798:	de b7       	in	r29, 0x3e	; 62
	/* Clear the interrupt flag by reading the result */
	int val = ADC0_read();
    679a:	0e 94 1a 32 	call	0x6434	; 0x6434 <_Z9ADC0_readv>
    679e:	89 83       	std	Y+1, r24	; 0x01
    67a0:	9a 83       	std	Y+2, r25	; 0x02
//	LED_toggle_level();
	if(g_goertzel.DataPoint(val))
    67a2:	89 81       	ldd	r24, Y+1	; 0x01
    67a4:	9a 81       	ldd	r25, Y+2	; 0x02
    67a6:	bc 01       	movw	r22, r24
    67a8:	8a e9       	ldi	r24, 0x9A	; 154
    67aa:	96 e4       	ldi	r25, 0x46	; 70
    67ac:	0e 94 42 50 	call	0xa084	; 0xa084 <_ZN8Goertzel9DataPointEi>
    67b0:	88 23       	and	r24, r24
    67b2:	21 f0       	breq	.+8      	; 0x67bc <__vector_24+0x56>
	{
		ADC0.INTCTRL = 0x00; /* disable ADC interrupt */
    67b4:	80 e0       	ldi	r24, 0x00	; 0
    67b6:	96 e0       	ldi	r25, 0x06	; 6
    67b8:	fc 01       	movw	r30, r24
    67ba:	14 86       	std	Z+12, r1	; 0x0c
	}
    67bc:	00 00       	nop
    67be:	0f 90       	pop	r0
    67c0:	0f 90       	pop	r0
    67c2:	df 91       	pop	r29
    67c4:	cf 91       	pop	r28
    67c6:	ff 91       	pop	r31
    67c8:	ef 91       	pop	r30
    67ca:	bf 91       	pop	r27
    67cc:	af 91       	pop	r26
    67ce:	9f 91       	pop	r25
    67d0:	8f 91       	pop	r24
    67d2:	7f 91       	pop	r23
    67d4:	6f 91       	pop	r22
    67d6:	5f 91       	pop	r21
    67d8:	4f 91       	pop	r20
    67da:	3f 91       	pop	r19
    67dc:	2f 91       	pop	r18
    67de:	0f 90       	pop	r0
    67e0:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    67e4:	0f 90       	pop	r0
    67e6:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    67ea:	0f 90       	pop	r0
    67ec:	1f 90       	pop	r1
    67ee:	18 95       	reti

000067f0 <_Z41__static_initialization_and_destruction_0ii>:
    67f0:	0f 93       	push	r16
    67f2:	1f 93       	push	r17
    67f4:	cf 93       	push	r28
    67f6:	df 93       	push	r29
    67f8:	00 d0       	rcall	.+0      	; 0x67fa <_Z41__static_initialization_and_destruction_0ii+0xa>
    67fa:	00 d0       	rcall	.+0      	; 0x67fc <_Z41__static_initialization_and_destruction_0ii+0xc>
    67fc:	cd b7       	in	r28, 0x3d	; 61
    67fe:	de b7       	in	r29, 0x3e	; 62
    6800:	89 83       	std	Y+1, r24	; 0x01
    6802:	9a 83       	std	Y+2, r25	; 0x02
    6804:	6b 83       	std	Y+3, r22	; 0x03
    6806:	7c 83       	std	Y+4, r23	; 0x04
    6808:	89 81       	ldd	r24, Y+1	; 0x01
    680a:	9a 81       	ldd	r25, Y+2	; 0x02
    680c:	01 97       	sbiw	r24, 0x01	; 1
    680e:	91 f4       	brne	.+36     	; 0x6834 <_Z41__static_initialization_and_destruction_0ii+0x44>
    6810:	8b 81       	ldd	r24, Y+3	; 0x03
    6812:	9c 81       	ldd	r25, Y+4	; 0x04
    6814:	01 96       	adiw	r24, 0x01	; 1
    6816:	71 f4       	brne	.+28     	; 0x6834 <_Z41__static_initialization_and_destruction_0ii+0x44>
	
#define FREE_RUNNING true
#define SINGLE_CONVERSION false
	
volatile int16_t g_adcVal;
Goertzel g_goertzel(N, sampling_freq);
    6818:	80 e0       	ldi	r24, 0x00	; 0
    681a:	90 e4       	ldi	r25, 0x40	; 64
    681c:	ac eb       	ldi	r26, 0xBC	; 188
    681e:	b6 e4       	ldi	r27, 0x46	; 70
    6820:	8c 01       	movw	r16, r24
    6822:	9d 01       	movw	r18, r26
    6824:	40 e0       	ldi	r20, 0x00	; 0
    6826:	50 e0       	ldi	r21, 0x00	; 0
    6828:	69 e4       	ldi	r22, 0x49	; 73
    682a:	73 e4       	ldi	r23, 0x43	; 67
    682c:	8a e9       	ldi	r24, 0x9A	; 154
    682e:	96 e4       	ldi	r25, 0x46	; 70
    6830:	0e 94 97 4f 	call	0x9f2e	; 0x9f2e <_ZN8GoertzelC1Eff>
    6834:	89 81       	ldd	r24, Y+1	; 0x01
    6836:	9a 81       	ldd	r25, Y+2	; 0x02
    6838:	89 2b       	or	r24, r25
    683a:	41 f4       	brne	.+16     	; 0x684c <_Z41__static_initialization_and_destruction_0ii+0x5c>
    683c:	8b 81       	ldd	r24, Y+3	; 0x03
    683e:	9c 81       	ldd	r25, Y+4	; 0x04
    6840:	01 96       	adiw	r24, 0x01	; 1
    6842:	21 f4       	brne	.+8      	; 0x684c <_Z41__static_initialization_and_destruction_0ii+0x5c>
    6844:	8a e9       	ldi	r24, 0x9A	; 154
    6846:	96 e4       	ldi	r25, 0x46	; 70
    6848:	0e 94 2f 50 	call	0xa05e	; 0xa05e <_ZN8GoertzelD1Ev>
//	LED_toggle_level();
	if(g_goertzel.DataPoint(val))
	{
		ADC0.INTCTRL = 0x00; /* disable ADC interrupt */
	}
    684c:	00 00       	nop
    684e:	24 96       	adiw	r28, 0x04	; 4
    6850:	cd bf       	out	0x3d, r28	; 61
    6852:	de bf       	out	0x3e, r29	; 62
    6854:	df 91       	pop	r29
    6856:	cf 91       	pop	r28
    6858:	1f 91       	pop	r17
    685a:	0f 91       	pop	r16
    685c:	08 95       	ret

0000685e <_GLOBAL__sub_I_g_adcVal>:
    685e:	cf 93       	push	r28
    6860:	df 93       	push	r29
    6862:	cd b7       	in	r28, 0x3d	; 61
    6864:	de b7       	in	r29, 0x3e	; 62
    6866:	6f ef       	ldi	r22, 0xFF	; 255
    6868:	7f ef       	ldi	r23, 0xFF	; 255
    686a:	81 e0       	ldi	r24, 0x01	; 1
    686c:	90 e0       	ldi	r25, 0x00	; 0
    686e:	0e 94 f8 33 	call	0x67f0	; 0x67f0 <_Z41__static_initialization_and_destruction_0ii>
    6872:	df 91       	pop	r29
    6874:	cf 91       	pop	r28
    6876:	08 95       	ret

00006878 <_GLOBAL__sub_D_g_adcVal>:
    6878:	cf 93       	push	r28
    687a:	df 93       	push	r29
    687c:	cd b7       	in	r28, 0x3d	; 61
    687e:	de b7       	in	r29, 0x3e	; 62
    6880:	6f ef       	ldi	r22, 0xFF	; 255
    6882:	7f ef       	ldi	r23, 0xFF	; 255
    6884:	80 e0       	ldi	r24, 0x00	; 0
    6886:	90 e0       	ldi	r25, 0x00	; 0
    6888:	0e 94 f8 33 	call	0x67f0	; 0x67f0 <_Z41__static_initialization_and_destruction_0ii>
    688c:	df 91       	pop	r29
    688e:	cf 91       	pop	r28
    6890:	08 95       	ret

00006892 <PORTA_set_pin_pull_mode>:
} //binio

// default destructor
binio::~binio()
{
} //~binio
    6892:	cf 93       	push	r28
    6894:	df 93       	push	r29
    6896:	00 d0       	rcall	.+0      	; 0x6898 <PORTA_set_pin_pull_mode+0x6>
    6898:	00 d0       	rcall	.+0      	; 0x689a <PORTA_set_pin_pull_mode+0x8>
    689a:	cd b7       	in	r28, 0x3d	; 61
    689c:	de b7       	in	r29, 0x3e	; 62
    689e:	8b 83       	std	Y+3, r24	; 0x03
    68a0:	6c 83       	std	Y+4, r22	; 0x04
    68a2:	8b 81       	ldd	r24, Y+3	; 0x03
    68a4:	88 2f       	mov	r24, r24
    68a6:	90 e0       	ldi	r25, 0x00	; 0
    68a8:	80 5f       	subi	r24, 0xF0	; 240
    68aa:	9b 4f       	sbci	r25, 0xFB	; 251
    68ac:	89 83       	std	Y+1, r24	; 0x01
    68ae:	9a 83       	std	Y+2, r25	; 0x02
    68b0:	8c 81       	ldd	r24, Y+4	; 0x04
    68b2:	81 30       	cpi	r24, 0x01	; 1
    68b4:	59 f4       	brne	.+22     	; 0x68cc <PORTA_set_pin_pull_mode+0x3a>
    68b6:	89 81       	ldd	r24, Y+1	; 0x01
    68b8:	9a 81       	ldd	r25, Y+2	; 0x02
    68ba:	fc 01       	movw	r30, r24
    68bc:	80 81       	ld	r24, Z
    68be:	28 2f       	mov	r18, r24
    68c0:	28 60       	ori	r18, 0x08	; 8
    68c2:	89 81       	ldd	r24, Y+1	; 0x01
    68c4:	9a 81       	ldd	r25, Y+2	; 0x02
    68c6:	fc 01       	movw	r30, r24
    68c8:	20 83       	st	Z, r18
    68ca:	0d c0       	rjmp	.+26     	; 0x68e6 <PORTA_set_pin_pull_mode+0x54>
    68cc:	8c 81       	ldd	r24, Y+4	; 0x04
    68ce:	88 23       	and	r24, r24
    68d0:	51 f4       	brne	.+20     	; 0x68e6 <PORTA_set_pin_pull_mode+0x54>
    68d2:	89 81       	ldd	r24, Y+1	; 0x01
    68d4:	9a 81       	ldd	r25, Y+2	; 0x02
    68d6:	fc 01       	movw	r30, r24
    68d8:	80 81       	ld	r24, Z
    68da:	28 2f       	mov	r18, r24
    68dc:	27 7f       	andi	r18, 0xF7	; 247
    68de:	89 81       	ldd	r24, Y+1	; 0x01
    68e0:	9a 81       	ldd	r25, Y+2	; 0x02
    68e2:	fc 01       	movw	r30, r24
    68e4:	20 83       	st	Z, r18
    68e6:	00 00       	nop
    68e8:	24 96       	adiw	r28, 0x04	; 4
    68ea:	cd bf       	out	0x3d, r28	; 61
    68ec:	de bf       	out	0x3e, r29	; 62
    68ee:	df 91       	pop	r29
    68f0:	cf 91       	pop	r28
    68f2:	08 95       	ret

000068f4 <PORTA_pin_set_isc>:
    68f4:	cf 93       	push	r28
    68f6:	df 93       	push	r29
    68f8:	00 d0       	rcall	.+0      	; 0x68fa <PORTA_pin_set_isc+0x6>
    68fa:	00 d0       	rcall	.+0      	; 0x68fc <PORTA_pin_set_isc+0x8>
    68fc:	cd b7       	in	r28, 0x3d	; 61
    68fe:	de b7       	in	r29, 0x3e	; 62
    6900:	8b 83       	std	Y+3, r24	; 0x03
    6902:	6c 83       	std	Y+4, r22	; 0x04
    6904:	8b 81       	ldd	r24, Y+3	; 0x03
    6906:	88 2f       	mov	r24, r24
    6908:	90 e0       	ldi	r25, 0x00	; 0
    690a:	80 5f       	subi	r24, 0xF0	; 240
    690c:	9b 4f       	sbci	r25, 0xFB	; 251
    690e:	89 83       	std	Y+1, r24	; 0x01
    6910:	9a 83       	std	Y+2, r25	; 0x02
    6912:	89 81       	ldd	r24, Y+1	; 0x01
    6914:	9a 81       	ldd	r25, Y+2	; 0x02
    6916:	fc 01       	movw	r30, r24
    6918:	80 81       	ld	r24, Z
    691a:	98 2f       	mov	r25, r24
    691c:	98 7f       	andi	r25, 0xF8	; 248
    691e:	8c 81       	ldd	r24, Y+4	; 0x04
    6920:	89 2b       	or	r24, r25
    6922:	28 2f       	mov	r18, r24
    6924:	89 81       	ldd	r24, Y+1	; 0x01
    6926:	9a 81       	ldd	r25, Y+2	; 0x02
    6928:	fc 01       	movw	r30, r24
    692a:	20 83       	st	Z, r18
    692c:	00 00       	nop
    692e:	24 96       	adiw	r28, 0x04	; 4
    6930:	cd bf       	out	0x3d, r28	; 61
    6932:	de bf       	out	0x3e, r29	; 62
    6934:	df 91       	pop	r29
    6936:	cf 91       	pop	r28
    6938:	08 95       	ret

0000693a <PORTA_set_pin_dir>:
    693a:	cf 93       	push	r28
    693c:	df 93       	push	r29
    693e:	00 d0       	rcall	.+0      	; 0x6940 <PORTA_set_pin_dir+0x6>
    6940:	cd b7       	in	r28, 0x3d	; 61
    6942:	de b7       	in	r29, 0x3e	; 62
    6944:	89 83       	std	Y+1, r24	; 0x01
    6946:	6a 83       	std	Y+2, r22	; 0x02
    6948:	8a 81       	ldd	r24, Y+2	; 0x02
    694a:	88 2f       	mov	r24, r24
    694c:	90 e0       	ldi	r25, 0x00	; 0
    694e:	81 30       	cpi	r24, 0x01	; 1
    6950:	91 05       	cpc	r25, r1
    6952:	e1 f0       	breq	.+56     	; 0x698c <PORTA_set_pin_dir+0x52>
    6954:	82 30       	cpi	r24, 0x02	; 2
    6956:	91 05       	cpc	r25, r1
    6958:	71 f1       	breq	.+92     	; 0x69b6 <PORTA_set_pin_dir+0x7c>
    695a:	89 2b       	or	r24, r25
    695c:	09 f0       	breq	.+2      	; 0x6960 <PORTA_set_pin_dir+0x26>
    695e:	3b c0       	rjmp	.+118    	; 0x69d6 <PORTA_set_pin_dir+0x9c>
    6960:	20 e0       	ldi	r18, 0x00	; 0
    6962:	30 e0       	ldi	r19, 0x00	; 0
    6964:	80 e0       	ldi	r24, 0x00	; 0
    6966:	90 e0       	ldi	r25, 0x00	; 0
    6968:	fc 01       	movw	r30, r24
    696a:	80 81       	ld	r24, Z
    696c:	68 2f       	mov	r22, r24
    696e:	89 81       	ldd	r24, Y+1	; 0x01
    6970:	48 2f       	mov	r20, r24
    6972:	50 e0       	ldi	r21, 0x00	; 0
    6974:	81 e0       	ldi	r24, 0x01	; 1
    6976:	90 e0       	ldi	r25, 0x00	; 0
    6978:	02 c0       	rjmp	.+4      	; 0x697e <PORTA_set_pin_dir+0x44>
    697a:	88 0f       	add	r24, r24
    697c:	99 1f       	adc	r25, r25
    697e:	4a 95       	dec	r20
    6980:	e2 f7       	brpl	.-8      	; 0x697a <PORTA_set_pin_dir+0x40>
    6982:	80 95       	com	r24
    6984:	86 23       	and	r24, r22
    6986:	f9 01       	movw	r30, r18
    6988:	80 83       	st	Z, r24
    698a:	25 c0       	rjmp	.+74     	; 0x69d6 <PORTA_set_pin_dir+0x9c>
    698c:	20 e0       	ldi	r18, 0x00	; 0
    698e:	30 e0       	ldi	r19, 0x00	; 0
    6990:	80 e0       	ldi	r24, 0x00	; 0
    6992:	90 e0       	ldi	r25, 0x00	; 0
    6994:	fc 01       	movw	r30, r24
    6996:	80 81       	ld	r24, Z
    6998:	68 2f       	mov	r22, r24
    699a:	89 81       	ldd	r24, Y+1	; 0x01
    699c:	48 2f       	mov	r20, r24
    699e:	50 e0       	ldi	r21, 0x00	; 0
    69a0:	81 e0       	ldi	r24, 0x01	; 1
    69a2:	90 e0       	ldi	r25, 0x00	; 0
    69a4:	02 c0       	rjmp	.+4      	; 0x69aa <PORTA_set_pin_dir+0x70>
    69a6:	88 0f       	add	r24, r24
    69a8:	99 1f       	adc	r25, r25
    69aa:	4a 95       	dec	r20
    69ac:	e2 f7       	brpl	.-8      	; 0x69a6 <PORTA_set_pin_dir+0x6c>
    69ae:	86 2b       	or	r24, r22
    69b0:	f9 01       	movw	r30, r18
    69b2:	80 83       	st	Z, r24
    69b4:	10 c0       	rjmp	.+32     	; 0x69d6 <PORTA_set_pin_dir+0x9c>
    69b6:	89 81       	ldd	r24, Y+1	; 0x01
    69b8:	88 2f       	mov	r24, r24
    69ba:	90 e0       	ldi	r25, 0x00	; 0
    69bc:	80 5f       	subi	r24, 0xF0	; 240
    69be:	9b 4f       	sbci	r25, 0xFB	; 251
    69c0:	29 81       	ldd	r18, Y+1	; 0x01
    69c2:	22 2f       	mov	r18, r18
    69c4:	30 e0       	ldi	r19, 0x00	; 0
    69c6:	20 5f       	subi	r18, 0xF0	; 240
    69c8:	3b 4f       	sbci	r19, 0xFB	; 251
    69ca:	f9 01       	movw	r30, r18
    69cc:	20 81       	ld	r18, Z
    69ce:	28 60       	ori	r18, 0x08	; 8
    69d0:	fc 01       	movw	r30, r24
    69d2:	20 83       	st	Z, r18
    69d4:	00 00       	nop
    69d6:	00 00       	nop
    69d8:	0f 90       	pop	r0
    69da:	0f 90       	pop	r0
    69dc:	df 91       	pop	r29
    69de:	cf 91       	pop	r28
    69e0:	08 95       	ret

000069e2 <PORTA_set_pin_level>:
    69e2:	cf 93       	push	r28
    69e4:	df 93       	push	r29
    69e6:	00 d0       	rcall	.+0      	; 0x69e8 <PORTA_set_pin_level+0x6>
    69e8:	cd b7       	in	r28, 0x3d	; 61
    69ea:	de b7       	in	r29, 0x3e	; 62
    69ec:	89 83       	std	Y+1, r24	; 0x01
    69ee:	6a 83       	std	Y+2, r22	; 0x02
    69f0:	8a 81       	ldd	r24, Y+2	; 0x02
    69f2:	88 23       	and	r24, r24
    69f4:	a9 f0       	breq	.+42     	; 0x6a20 <PORTA_set_pin_level+0x3e>
    69f6:	20 e0       	ldi	r18, 0x00	; 0
    69f8:	30 e0       	ldi	r19, 0x00	; 0
    69fa:	80 e0       	ldi	r24, 0x00	; 0
    69fc:	90 e0       	ldi	r25, 0x00	; 0
    69fe:	fc 01       	movw	r30, r24
    6a00:	81 81       	ldd	r24, Z+1	; 0x01
    6a02:	68 2f       	mov	r22, r24
    6a04:	89 81       	ldd	r24, Y+1	; 0x01
    6a06:	48 2f       	mov	r20, r24
    6a08:	50 e0       	ldi	r21, 0x00	; 0
    6a0a:	81 e0       	ldi	r24, 0x01	; 1
    6a0c:	90 e0       	ldi	r25, 0x00	; 0
    6a0e:	02 c0       	rjmp	.+4      	; 0x6a14 <PORTA_set_pin_level+0x32>
    6a10:	88 0f       	add	r24, r24
    6a12:	99 1f       	adc	r25, r25
    6a14:	4a 95       	dec	r20
    6a16:	e2 f7       	brpl	.-8      	; 0x6a10 <PORTA_set_pin_level+0x2e>
    6a18:	86 2b       	or	r24, r22
    6a1a:	f9 01       	movw	r30, r18
    6a1c:	81 83       	std	Z+1, r24	; 0x01
    6a1e:	15 c0       	rjmp	.+42     	; 0x6a4a <PORTA_set_pin_level+0x68>
    6a20:	20 e0       	ldi	r18, 0x00	; 0
    6a22:	30 e0       	ldi	r19, 0x00	; 0
    6a24:	80 e0       	ldi	r24, 0x00	; 0
    6a26:	90 e0       	ldi	r25, 0x00	; 0
    6a28:	fc 01       	movw	r30, r24
    6a2a:	81 81       	ldd	r24, Z+1	; 0x01
    6a2c:	68 2f       	mov	r22, r24
    6a2e:	89 81       	ldd	r24, Y+1	; 0x01
    6a30:	48 2f       	mov	r20, r24
    6a32:	50 e0       	ldi	r21, 0x00	; 0
    6a34:	81 e0       	ldi	r24, 0x01	; 1
    6a36:	90 e0       	ldi	r25, 0x00	; 0
    6a38:	02 c0       	rjmp	.+4      	; 0x6a3e <PORTA_set_pin_level+0x5c>
    6a3a:	88 0f       	add	r24, r24
    6a3c:	99 1f       	adc	r25, r25
    6a3e:	4a 95       	dec	r20
    6a40:	e2 f7       	brpl	.-8      	; 0x6a3a <PORTA_set_pin_level+0x58>
    6a42:	80 95       	com	r24
    6a44:	86 23       	and	r24, r22
    6a46:	f9 01       	movw	r30, r18
    6a48:	81 83       	std	Z+1, r24	; 0x01
    6a4a:	00 00       	nop
    6a4c:	0f 90       	pop	r0
    6a4e:	0f 90       	pop	r0
    6a50:	df 91       	pop	r29
    6a52:	cf 91       	pop	r28
    6a54:	08 95       	ret

00006a56 <PORTB_set_pin_dir>:
    6a56:	cf 93       	push	r28
    6a58:	df 93       	push	r29
    6a5a:	00 d0       	rcall	.+0      	; 0x6a5c <PORTB_set_pin_dir+0x6>
    6a5c:	cd b7       	in	r28, 0x3d	; 61
    6a5e:	de b7       	in	r29, 0x3e	; 62
    6a60:	89 83       	std	Y+1, r24	; 0x01
    6a62:	6a 83       	std	Y+2, r22	; 0x02
    6a64:	8a 81       	ldd	r24, Y+2	; 0x02
    6a66:	88 2f       	mov	r24, r24
    6a68:	90 e0       	ldi	r25, 0x00	; 0
    6a6a:	81 30       	cpi	r24, 0x01	; 1
    6a6c:	91 05       	cpc	r25, r1
    6a6e:	e1 f0       	breq	.+56     	; 0x6aa8 <PORTB_set_pin_dir+0x52>
    6a70:	82 30       	cpi	r24, 0x02	; 2
    6a72:	91 05       	cpc	r25, r1
    6a74:	71 f1       	breq	.+92     	; 0x6ad2 <PORTB_set_pin_dir+0x7c>
    6a76:	89 2b       	or	r24, r25
    6a78:	09 f0       	breq	.+2      	; 0x6a7c <PORTB_set_pin_dir+0x26>
    6a7a:	3b c0       	rjmp	.+118    	; 0x6af2 <PORTB_set_pin_dir+0x9c>
    6a7c:	84 e0       	ldi	r24, 0x04	; 4
    6a7e:	90 e0       	ldi	r25, 0x00	; 0
    6a80:	24 e0       	ldi	r18, 0x04	; 4
    6a82:	30 e0       	ldi	r19, 0x00	; 0
    6a84:	f9 01       	movw	r30, r18
    6a86:	20 81       	ld	r18, Z
    6a88:	62 2f       	mov	r22, r18
    6a8a:	29 81       	ldd	r18, Y+1	; 0x01
    6a8c:	42 2f       	mov	r20, r18
    6a8e:	50 e0       	ldi	r21, 0x00	; 0
    6a90:	21 e0       	ldi	r18, 0x01	; 1
    6a92:	30 e0       	ldi	r19, 0x00	; 0
    6a94:	02 c0       	rjmp	.+4      	; 0x6a9a <PORTB_set_pin_dir+0x44>
    6a96:	22 0f       	add	r18, r18
    6a98:	33 1f       	adc	r19, r19
    6a9a:	4a 95       	dec	r20
    6a9c:	e2 f7       	brpl	.-8      	; 0x6a96 <PORTB_set_pin_dir+0x40>
    6a9e:	20 95       	com	r18
    6aa0:	26 23       	and	r18, r22
    6aa2:	fc 01       	movw	r30, r24
    6aa4:	20 83       	st	Z, r18
    6aa6:	25 c0       	rjmp	.+74     	; 0x6af2 <PORTB_set_pin_dir+0x9c>
    6aa8:	84 e0       	ldi	r24, 0x04	; 4
    6aaa:	90 e0       	ldi	r25, 0x00	; 0
    6aac:	24 e0       	ldi	r18, 0x04	; 4
    6aae:	30 e0       	ldi	r19, 0x00	; 0
    6ab0:	f9 01       	movw	r30, r18
    6ab2:	20 81       	ld	r18, Z
    6ab4:	62 2f       	mov	r22, r18
    6ab6:	29 81       	ldd	r18, Y+1	; 0x01
    6ab8:	42 2f       	mov	r20, r18
    6aba:	50 e0       	ldi	r21, 0x00	; 0
    6abc:	21 e0       	ldi	r18, 0x01	; 1
    6abe:	30 e0       	ldi	r19, 0x00	; 0
    6ac0:	02 c0       	rjmp	.+4      	; 0x6ac6 <PORTB_set_pin_dir+0x70>
    6ac2:	22 0f       	add	r18, r18
    6ac4:	33 1f       	adc	r19, r19
    6ac6:	4a 95       	dec	r20
    6ac8:	e2 f7       	brpl	.-8      	; 0x6ac2 <PORTB_set_pin_dir+0x6c>
    6aca:	26 2b       	or	r18, r22
    6acc:	fc 01       	movw	r30, r24
    6ace:	20 83       	st	Z, r18
    6ad0:	10 c0       	rjmp	.+32     	; 0x6af2 <PORTB_set_pin_dir+0x9c>
    6ad2:	89 81       	ldd	r24, Y+1	; 0x01
    6ad4:	88 2f       	mov	r24, r24
    6ad6:	90 e0       	ldi	r25, 0x00	; 0
    6ad8:	80 5d       	subi	r24, 0xD0	; 208
    6ada:	9b 4f       	sbci	r25, 0xFB	; 251
    6adc:	29 81       	ldd	r18, Y+1	; 0x01
    6ade:	22 2f       	mov	r18, r18
    6ae0:	30 e0       	ldi	r19, 0x00	; 0
    6ae2:	20 5d       	subi	r18, 0xD0	; 208
    6ae4:	3b 4f       	sbci	r19, 0xFB	; 251
    6ae6:	f9 01       	movw	r30, r18
    6ae8:	20 81       	ld	r18, Z
    6aea:	28 60       	ori	r18, 0x08	; 8
    6aec:	fc 01       	movw	r30, r24
    6aee:	20 83       	st	Z, r18
    6af0:	00 00       	nop
    6af2:	00 00       	nop
    6af4:	0f 90       	pop	r0
    6af6:	0f 90       	pop	r0
    6af8:	df 91       	pop	r29
    6afa:	cf 91       	pop	r28
    6afc:	08 95       	ret

00006afe <PORTB_set_pin_level>:
    6afe:	cf 93       	push	r28
    6b00:	df 93       	push	r29
    6b02:	00 d0       	rcall	.+0      	; 0x6b04 <PORTB_set_pin_level+0x6>
    6b04:	cd b7       	in	r28, 0x3d	; 61
    6b06:	de b7       	in	r29, 0x3e	; 62
    6b08:	89 83       	std	Y+1, r24	; 0x01
    6b0a:	6a 83       	std	Y+2, r22	; 0x02
    6b0c:	8a 81       	ldd	r24, Y+2	; 0x02
    6b0e:	88 23       	and	r24, r24
    6b10:	a9 f0       	breq	.+42     	; 0x6b3c <PORTB_set_pin_level+0x3e>
    6b12:	84 e0       	ldi	r24, 0x04	; 4
    6b14:	90 e0       	ldi	r25, 0x00	; 0
    6b16:	24 e0       	ldi	r18, 0x04	; 4
    6b18:	30 e0       	ldi	r19, 0x00	; 0
    6b1a:	f9 01       	movw	r30, r18
    6b1c:	21 81       	ldd	r18, Z+1	; 0x01
    6b1e:	62 2f       	mov	r22, r18
    6b20:	29 81       	ldd	r18, Y+1	; 0x01
    6b22:	42 2f       	mov	r20, r18
    6b24:	50 e0       	ldi	r21, 0x00	; 0
    6b26:	21 e0       	ldi	r18, 0x01	; 1
    6b28:	30 e0       	ldi	r19, 0x00	; 0
    6b2a:	02 c0       	rjmp	.+4      	; 0x6b30 <PORTB_set_pin_level+0x32>
    6b2c:	22 0f       	add	r18, r18
    6b2e:	33 1f       	adc	r19, r19
    6b30:	4a 95       	dec	r20
    6b32:	e2 f7       	brpl	.-8      	; 0x6b2c <PORTB_set_pin_level+0x2e>
    6b34:	26 2b       	or	r18, r22
    6b36:	fc 01       	movw	r30, r24
    6b38:	21 83       	std	Z+1, r18	; 0x01
    6b3a:	15 c0       	rjmp	.+42     	; 0x6b66 <PORTB_set_pin_level+0x68>
    6b3c:	84 e0       	ldi	r24, 0x04	; 4
    6b3e:	90 e0       	ldi	r25, 0x00	; 0
    6b40:	24 e0       	ldi	r18, 0x04	; 4
    6b42:	30 e0       	ldi	r19, 0x00	; 0
    6b44:	f9 01       	movw	r30, r18
    6b46:	21 81       	ldd	r18, Z+1	; 0x01
    6b48:	62 2f       	mov	r22, r18
    6b4a:	29 81       	ldd	r18, Y+1	; 0x01
    6b4c:	42 2f       	mov	r20, r18
    6b4e:	50 e0       	ldi	r21, 0x00	; 0
    6b50:	21 e0       	ldi	r18, 0x01	; 1
    6b52:	30 e0       	ldi	r19, 0x00	; 0
    6b54:	02 c0       	rjmp	.+4      	; 0x6b5a <PORTB_set_pin_level+0x5c>
    6b56:	22 0f       	add	r18, r18
    6b58:	33 1f       	adc	r19, r19
    6b5a:	4a 95       	dec	r20
    6b5c:	e2 f7       	brpl	.-8      	; 0x6b56 <PORTB_set_pin_level+0x58>
    6b5e:	20 95       	com	r18
    6b60:	26 23       	and	r18, r22
    6b62:	fc 01       	movw	r30, r24
    6b64:	21 83       	std	Z+1, r18	; 0x01
    6b66:	00 00       	nop
    6b68:	0f 90       	pop	r0
    6b6a:	0f 90       	pop	r0
    6b6c:	df 91       	pop	r29
    6b6e:	cf 91       	pop	r28
    6b70:	08 95       	ret

00006b72 <PORTC_set_pin_pull_mode>:
    6b72:	cf 93       	push	r28
    6b74:	df 93       	push	r29
    6b76:	00 d0       	rcall	.+0      	; 0x6b78 <PORTC_set_pin_pull_mode+0x6>
    6b78:	00 d0       	rcall	.+0      	; 0x6b7a <PORTC_set_pin_pull_mode+0x8>
    6b7a:	cd b7       	in	r28, 0x3d	; 61
    6b7c:	de b7       	in	r29, 0x3e	; 62
    6b7e:	8b 83       	std	Y+3, r24	; 0x03
    6b80:	6c 83       	std	Y+4, r22	; 0x04
    6b82:	8b 81       	ldd	r24, Y+3	; 0x03
    6b84:	88 2f       	mov	r24, r24
    6b86:	90 e0       	ldi	r25, 0x00	; 0
    6b88:	80 5b       	subi	r24, 0xB0	; 176
    6b8a:	9b 4f       	sbci	r25, 0xFB	; 251
    6b8c:	89 83       	std	Y+1, r24	; 0x01
    6b8e:	9a 83       	std	Y+2, r25	; 0x02
    6b90:	8c 81       	ldd	r24, Y+4	; 0x04
    6b92:	81 30       	cpi	r24, 0x01	; 1
    6b94:	59 f4       	brne	.+22     	; 0x6bac <PORTC_set_pin_pull_mode+0x3a>
    6b96:	89 81       	ldd	r24, Y+1	; 0x01
    6b98:	9a 81       	ldd	r25, Y+2	; 0x02
    6b9a:	fc 01       	movw	r30, r24
    6b9c:	80 81       	ld	r24, Z
    6b9e:	28 2f       	mov	r18, r24
    6ba0:	28 60       	ori	r18, 0x08	; 8
    6ba2:	89 81       	ldd	r24, Y+1	; 0x01
    6ba4:	9a 81       	ldd	r25, Y+2	; 0x02
    6ba6:	fc 01       	movw	r30, r24
    6ba8:	20 83       	st	Z, r18
    6baa:	0d c0       	rjmp	.+26     	; 0x6bc6 <PORTC_set_pin_pull_mode+0x54>
    6bac:	8c 81       	ldd	r24, Y+4	; 0x04
    6bae:	88 23       	and	r24, r24
    6bb0:	51 f4       	brne	.+20     	; 0x6bc6 <PORTC_set_pin_pull_mode+0x54>
    6bb2:	89 81       	ldd	r24, Y+1	; 0x01
    6bb4:	9a 81       	ldd	r25, Y+2	; 0x02
    6bb6:	fc 01       	movw	r30, r24
    6bb8:	80 81       	ld	r24, Z
    6bba:	28 2f       	mov	r18, r24
    6bbc:	27 7f       	andi	r18, 0xF7	; 247
    6bbe:	89 81       	ldd	r24, Y+1	; 0x01
    6bc0:	9a 81       	ldd	r25, Y+2	; 0x02
    6bc2:	fc 01       	movw	r30, r24
    6bc4:	20 83       	st	Z, r18
    6bc6:	00 00       	nop
    6bc8:	24 96       	adiw	r28, 0x04	; 4
    6bca:	cd bf       	out	0x3d, r28	; 61
    6bcc:	de bf       	out	0x3e, r29	; 62
    6bce:	df 91       	pop	r29
    6bd0:	cf 91       	pop	r28
    6bd2:	08 95       	ret

00006bd4 <PORTC_pin_set_isc>:
    6bd4:	cf 93       	push	r28
    6bd6:	df 93       	push	r29
    6bd8:	00 d0       	rcall	.+0      	; 0x6bda <PORTC_pin_set_isc+0x6>
    6bda:	00 d0       	rcall	.+0      	; 0x6bdc <PORTC_pin_set_isc+0x8>
    6bdc:	cd b7       	in	r28, 0x3d	; 61
    6bde:	de b7       	in	r29, 0x3e	; 62
    6be0:	8b 83       	std	Y+3, r24	; 0x03
    6be2:	6c 83       	std	Y+4, r22	; 0x04
    6be4:	8b 81       	ldd	r24, Y+3	; 0x03
    6be6:	88 2f       	mov	r24, r24
    6be8:	90 e0       	ldi	r25, 0x00	; 0
    6bea:	80 5b       	subi	r24, 0xB0	; 176
    6bec:	9b 4f       	sbci	r25, 0xFB	; 251
    6bee:	89 83       	std	Y+1, r24	; 0x01
    6bf0:	9a 83       	std	Y+2, r25	; 0x02
    6bf2:	89 81       	ldd	r24, Y+1	; 0x01
    6bf4:	9a 81       	ldd	r25, Y+2	; 0x02
    6bf6:	fc 01       	movw	r30, r24
    6bf8:	80 81       	ld	r24, Z
    6bfa:	98 2f       	mov	r25, r24
    6bfc:	98 7f       	andi	r25, 0xF8	; 248
    6bfe:	8c 81       	ldd	r24, Y+4	; 0x04
    6c00:	89 2b       	or	r24, r25
    6c02:	28 2f       	mov	r18, r24
    6c04:	89 81       	ldd	r24, Y+1	; 0x01
    6c06:	9a 81       	ldd	r25, Y+2	; 0x02
    6c08:	fc 01       	movw	r30, r24
    6c0a:	20 83       	st	Z, r18
    6c0c:	00 00       	nop
    6c0e:	24 96       	adiw	r28, 0x04	; 4
    6c10:	cd bf       	out	0x3d, r28	; 61
    6c12:	de bf       	out	0x3e, r29	; 62
    6c14:	df 91       	pop	r29
    6c16:	cf 91       	pop	r28
    6c18:	08 95       	ret

00006c1a <PORTC_set_pin_dir>:
    6c1a:	cf 93       	push	r28
    6c1c:	df 93       	push	r29
    6c1e:	00 d0       	rcall	.+0      	; 0x6c20 <PORTC_set_pin_dir+0x6>
    6c20:	cd b7       	in	r28, 0x3d	; 61
    6c22:	de b7       	in	r29, 0x3e	; 62
    6c24:	89 83       	std	Y+1, r24	; 0x01
    6c26:	6a 83       	std	Y+2, r22	; 0x02
    6c28:	8a 81       	ldd	r24, Y+2	; 0x02
    6c2a:	88 2f       	mov	r24, r24
    6c2c:	90 e0       	ldi	r25, 0x00	; 0
    6c2e:	81 30       	cpi	r24, 0x01	; 1
    6c30:	91 05       	cpc	r25, r1
    6c32:	e1 f0       	breq	.+56     	; 0x6c6c <PORTC_set_pin_dir+0x52>
    6c34:	82 30       	cpi	r24, 0x02	; 2
    6c36:	91 05       	cpc	r25, r1
    6c38:	71 f1       	breq	.+92     	; 0x6c96 <PORTC_set_pin_dir+0x7c>
    6c3a:	89 2b       	or	r24, r25
    6c3c:	09 f0       	breq	.+2      	; 0x6c40 <PORTC_set_pin_dir+0x26>
    6c3e:	3b c0       	rjmp	.+118    	; 0x6cb6 <PORTC_set_pin_dir+0x9c>
    6c40:	88 e0       	ldi	r24, 0x08	; 8
    6c42:	90 e0       	ldi	r25, 0x00	; 0
    6c44:	28 e0       	ldi	r18, 0x08	; 8
    6c46:	30 e0       	ldi	r19, 0x00	; 0
    6c48:	f9 01       	movw	r30, r18
    6c4a:	20 81       	ld	r18, Z
    6c4c:	62 2f       	mov	r22, r18
    6c4e:	29 81       	ldd	r18, Y+1	; 0x01
    6c50:	42 2f       	mov	r20, r18
    6c52:	50 e0       	ldi	r21, 0x00	; 0
    6c54:	21 e0       	ldi	r18, 0x01	; 1
    6c56:	30 e0       	ldi	r19, 0x00	; 0
    6c58:	02 c0       	rjmp	.+4      	; 0x6c5e <PORTC_set_pin_dir+0x44>
    6c5a:	22 0f       	add	r18, r18
    6c5c:	33 1f       	adc	r19, r19
    6c5e:	4a 95       	dec	r20
    6c60:	e2 f7       	brpl	.-8      	; 0x6c5a <PORTC_set_pin_dir+0x40>
    6c62:	20 95       	com	r18
    6c64:	26 23       	and	r18, r22
    6c66:	fc 01       	movw	r30, r24
    6c68:	20 83       	st	Z, r18
    6c6a:	25 c0       	rjmp	.+74     	; 0x6cb6 <PORTC_set_pin_dir+0x9c>
    6c6c:	88 e0       	ldi	r24, 0x08	; 8
    6c6e:	90 e0       	ldi	r25, 0x00	; 0
    6c70:	28 e0       	ldi	r18, 0x08	; 8
    6c72:	30 e0       	ldi	r19, 0x00	; 0
    6c74:	f9 01       	movw	r30, r18
    6c76:	20 81       	ld	r18, Z
    6c78:	62 2f       	mov	r22, r18
    6c7a:	29 81       	ldd	r18, Y+1	; 0x01
    6c7c:	42 2f       	mov	r20, r18
    6c7e:	50 e0       	ldi	r21, 0x00	; 0
    6c80:	21 e0       	ldi	r18, 0x01	; 1
    6c82:	30 e0       	ldi	r19, 0x00	; 0
    6c84:	02 c0       	rjmp	.+4      	; 0x6c8a <PORTC_set_pin_dir+0x70>
    6c86:	22 0f       	add	r18, r18
    6c88:	33 1f       	adc	r19, r19
    6c8a:	4a 95       	dec	r20
    6c8c:	e2 f7       	brpl	.-8      	; 0x6c86 <PORTC_set_pin_dir+0x6c>
    6c8e:	26 2b       	or	r18, r22
    6c90:	fc 01       	movw	r30, r24
    6c92:	20 83       	st	Z, r18
    6c94:	10 c0       	rjmp	.+32     	; 0x6cb6 <PORTC_set_pin_dir+0x9c>
    6c96:	89 81       	ldd	r24, Y+1	; 0x01
    6c98:	88 2f       	mov	r24, r24
    6c9a:	90 e0       	ldi	r25, 0x00	; 0
    6c9c:	80 5b       	subi	r24, 0xB0	; 176
    6c9e:	9b 4f       	sbci	r25, 0xFB	; 251
    6ca0:	29 81       	ldd	r18, Y+1	; 0x01
    6ca2:	22 2f       	mov	r18, r18
    6ca4:	30 e0       	ldi	r19, 0x00	; 0
    6ca6:	20 5b       	subi	r18, 0xB0	; 176
    6ca8:	3b 4f       	sbci	r19, 0xFB	; 251
    6caa:	f9 01       	movw	r30, r18
    6cac:	20 81       	ld	r18, Z
    6cae:	28 60       	ori	r18, 0x08	; 8
    6cb0:	fc 01       	movw	r30, r24
    6cb2:	20 83       	st	Z, r18
    6cb4:	00 00       	nop
    6cb6:	00 00       	nop
    6cb8:	0f 90       	pop	r0
    6cba:	0f 90       	pop	r0
    6cbc:	df 91       	pop	r29
    6cbe:	cf 91       	pop	r28
    6cc0:	08 95       	ret

00006cc2 <PORTC_set_pin_level>:
    6cc2:	cf 93       	push	r28
    6cc4:	df 93       	push	r29
    6cc6:	00 d0       	rcall	.+0      	; 0x6cc8 <PORTC_set_pin_level+0x6>
    6cc8:	cd b7       	in	r28, 0x3d	; 61
    6cca:	de b7       	in	r29, 0x3e	; 62
    6ccc:	89 83       	std	Y+1, r24	; 0x01
    6cce:	6a 83       	std	Y+2, r22	; 0x02
    6cd0:	8a 81       	ldd	r24, Y+2	; 0x02
    6cd2:	88 23       	and	r24, r24
    6cd4:	a9 f0       	breq	.+42     	; 0x6d00 <PORTC_set_pin_level+0x3e>
    6cd6:	88 e0       	ldi	r24, 0x08	; 8
    6cd8:	90 e0       	ldi	r25, 0x00	; 0
    6cda:	28 e0       	ldi	r18, 0x08	; 8
    6cdc:	30 e0       	ldi	r19, 0x00	; 0
    6cde:	f9 01       	movw	r30, r18
    6ce0:	21 81       	ldd	r18, Z+1	; 0x01
    6ce2:	62 2f       	mov	r22, r18
    6ce4:	29 81       	ldd	r18, Y+1	; 0x01
    6ce6:	42 2f       	mov	r20, r18
    6ce8:	50 e0       	ldi	r21, 0x00	; 0
    6cea:	21 e0       	ldi	r18, 0x01	; 1
    6cec:	30 e0       	ldi	r19, 0x00	; 0
    6cee:	02 c0       	rjmp	.+4      	; 0x6cf4 <PORTC_set_pin_level+0x32>
    6cf0:	22 0f       	add	r18, r18
    6cf2:	33 1f       	adc	r19, r19
    6cf4:	4a 95       	dec	r20
    6cf6:	e2 f7       	brpl	.-8      	; 0x6cf0 <PORTC_set_pin_level+0x2e>
    6cf8:	26 2b       	or	r18, r22
    6cfa:	fc 01       	movw	r30, r24
    6cfc:	21 83       	std	Z+1, r18	; 0x01
    6cfe:	15 c0       	rjmp	.+42     	; 0x6d2a <PORTC_set_pin_level+0x68>
    6d00:	88 e0       	ldi	r24, 0x08	; 8
    6d02:	90 e0       	ldi	r25, 0x00	; 0
    6d04:	28 e0       	ldi	r18, 0x08	; 8
    6d06:	30 e0       	ldi	r19, 0x00	; 0
    6d08:	f9 01       	movw	r30, r18
    6d0a:	21 81       	ldd	r18, Z+1	; 0x01
    6d0c:	62 2f       	mov	r22, r18
    6d0e:	29 81       	ldd	r18, Y+1	; 0x01
    6d10:	42 2f       	mov	r20, r18
    6d12:	50 e0       	ldi	r21, 0x00	; 0
    6d14:	21 e0       	ldi	r18, 0x01	; 1
    6d16:	30 e0       	ldi	r19, 0x00	; 0
    6d18:	02 c0       	rjmp	.+4      	; 0x6d1e <PORTC_set_pin_level+0x5c>
    6d1a:	22 0f       	add	r18, r18
    6d1c:	33 1f       	adc	r19, r19
    6d1e:	4a 95       	dec	r20
    6d20:	e2 f7       	brpl	.-8      	; 0x6d1a <PORTC_set_pin_level+0x58>
    6d22:	20 95       	com	r18
    6d24:	26 23       	and	r18, r22
    6d26:	fc 01       	movw	r30, r24
    6d28:	21 83       	std	Z+1, r18	; 0x01
    6d2a:	00 00       	nop
    6d2c:	0f 90       	pop	r0
    6d2e:	0f 90       	pop	r0
    6d30:	df 91       	pop	r29
    6d32:	cf 91       	pop	r28
    6d34:	08 95       	ret

00006d36 <PORTC_get_port_level>:
    6d36:	cf 93       	push	r28
    6d38:	df 93       	push	r29
    6d3a:	cd b7       	in	r28, 0x3d	; 61
    6d3c:	de b7       	in	r29, 0x3e	; 62
    6d3e:	88 e0       	ldi	r24, 0x08	; 8
    6d40:	90 e0       	ldi	r25, 0x00	; 0
    6d42:	fc 01       	movw	r30, r24
    6d44:	82 81       	ldd	r24, Z+2	; 0x02
    6d46:	df 91       	pop	r29
    6d48:	cf 91       	pop	r28
    6d4a:	08 95       	ret

00006d4c <PORTD_set_pin_pull_mode>:
    6d4c:	cf 93       	push	r28
    6d4e:	df 93       	push	r29
    6d50:	00 d0       	rcall	.+0      	; 0x6d52 <PORTD_set_pin_pull_mode+0x6>
    6d52:	00 d0       	rcall	.+0      	; 0x6d54 <PORTD_set_pin_pull_mode+0x8>
    6d54:	cd b7       	in	r28, 0x3d	; 61
    6d56:	de b7       	in	r29, 0x3e	; 62
    6d58:	8b 83       	std	Y+3, r24	; 0x03
    6d5a:	6c 83       	std	Y+4, r22	; 0x04
    6d5c:	8b 81       	ldd	r24, Y+3	; 0x03
    6d5e:	88 2f       	mov	r24, r24
    6d60:	90 e0       	ldi	r25, 0x00	; 0
    6d62:	80 59       	subi	r24, 0x90	; 144
    6d64:	9b 4f       	sbci	r25, 0xFB	; 251
    6d66:	89 83       	std	Y+1, r24	; 0x01
    6d68:	9a 83       	std	Y+2, r25	; 0x02
    6d6a:	8c 81       	ldd	r24, Y+4	; 0x04
    6d6c:	81 30       	cpi	r24, 0x01	; 1
    6d6e:	59 f4       	brne	.+22     	; 0x6d86 <PORTD_set_pin_pull_mode+0x3a>
    6d70:	89 81       	ldd	r24, Y+1	; 0x01
    6d72:	9a 81       	ldd	r25, Y+2	; 0x02
    6d74:	fc 01       	movw	r30, r24
    6d76:	80 81       	ld	r24, Z
    6d78:	28 2f       	mov	r18, r24
    6d7a:	28 60       	ori	r18, 0x08	; 8
    6d7c:	89 81       	ldd	r24, Y+1	; 0x01
    6d7e:	9a 81       	ldd	r25, Y+2	; 0x02
    6d80:	fc 01       	movw	r30, r24
    6d82:	20 83       	st	Z, r18
    6d84:	0d c0       	rjmp	.+26     	; 0x6da0 <PORTD_set_pin_pull_mode+0x54>
    6d86:	8c 81       	ldd	r24, Y+4	; 0x04
    6d88:	88 23       	and	r24, r24
    6d8a:	51 f4       	brne	.+20     	; 0x6da0 <PORTD_set_pin_pull_mode+0x54>
    6d8c:	89 81       	ldd	r24, Y+1	; 0x01
    6d8e:	9a 81       	ldd	r25, Y+2	; 0x02
    6d90:	fc 01       	movw	r30, r24
    6d92:	80 81       	ld	r24, Z
    6d94:	28 2f       	mov	r18, r24
    6d96:	27 7f       	andi	r18, 0xF7	; 247
    6d98:	89 81       	ldd	r24, Y+1	; 0x01
    6d9a:	9a 81       	ldd	r25, Y+2	; 0x02
    6d9c:	fc 01       	movw	r30, r24
    6d9e:	20 83       	st	Z, r18
    6da0:	00 00       	nop
    6da2:	24 96       	adiw	r28, 0x04	; 4
    6da4:	cd bf       	out	0x3d, r28	; 61
    6da6:	de bf       	out	0x3e, r29	; 62
    6da8:	df 91       	pop	r29
    6daa:	cf 91       	pop	r28
    6dac:	08 95       	ret

00006dae <PORTD_pin_set_isc>:
    6dae:	cf 93       	push	r28
    6db0:	df 93       	push	r29
    6db2:	00 d0       	rcall	.+0      	; 0x6db4 <PORTD_pin_set_isc+0x6>
    6db4:	00 d0       	rcall	.+0      	; 0x6db6 <PORTD_pin_set_isc+0x8>
    6db6:	cd b7       	in	r28, 0x3d	; 61
    6db8:	de b7       	in	r29, 0x3e	; 62
    6dba:	8b 83       	std	Y+3, r24	; 0x03
    6dbc:	6c 83       	std	Y+4, r22	; 0x04
    6dbe:	8b 81       	ldd	r24, Y+3	; 0x03
    6dc0:	88 2f       	mov	r24, r24
    6dc2:	90 e0       	ldi	r25, 0x00	; 0
    6dc4:	80 59       	subi	r24, 0x90	; 144
    6dc6:	9b 4f       	sbci	r25, 0xFB	; 251
    6dc8:	89 83       	std	Y+1, r24	; 0x01
    6dca:	9a 83       	std	Y+2, r25	; 0x02
    6dcc:	89 81       	ldd	r24, Y+1	; 0x01
    6dce:	9a 81       	ldd	r25, Y+2	; 0x02
    6dd0:	fc 01       	movw	r30, r24
    6dd2:	80 81       	ld	r24, Z
    6dd4:	98 2f       	mov	r25, r24
    6dd6:	98 7f       	andi	r25, 0xF8	; 248
    6dd8:	8c 81       	ldd	r24, Y+4	; 0x04
    6dda:	89 2b       	or	r24, r25
    6ddc:	28 2f       	mov	r18, r24
    6dde:	89 81       	ldd	r24, Y+1	; 0x01
    6de0:	9a 81       	ldd	r25, Y+2	; 0x02
    6de2:	fc 01       	movw	r30, r24
    6de4:	20 83       	st	Z, r18
    6de6:	00 00       	nop
    6de8:	24 96       	adiw	r28, 0x04	; 4
    6dea:	cd bf       	out	0x3d, r28	; 61
    6dec:	de bf       	out	0x3e, r29	; 62
    6dee:	df 91       	pop	r29
    6df0:	cf 91       	pop	r28
    6df2:	08 95       	ret

00006df4 <PORTD_set_pin_dir>:
    6df4:	cf 93       	push	r28
    6df6:	df 93       	push	r29
    6df8:	00 d0       	rcall	.+0      	; 0x6dfa <PORTD_set_pin_dir+0x6>
    6dfa:	cd b7       	in	r28, 0x3d	; 61
    6dfc:	de b7       	in	r29, 0x3e	; 62
    6dfe:	89 83       	std	Y+1, r24	; 0x01
    6e00:	6a 83       	std	Y+2, r22	; 0x02
    6e02:	8a 81       	ldd	r24, Y+2	; 0x02
    6e04:	88 2f       	mov	r24, r24
    6e06:	90 e0       	ldi	r25, 0x00	; 0
    6e08:	81 30       	cpi	r24, 0x01	; 1
    6e0a:	91 05       	cpc	r25, r1
    6e0c:	e1 f0       	breq	.+56     	; 0x6e46 <PORTD_set_pin_dir+0x52>
    6e0e:	82 30       	cpi	r24, 0x02	; 2
    6e10:	91 05       	cpc	r25, r1
    6e12:	71 f1       	breq	.+92     	; 0x6e70 <PORTD_set_pin_dir+0x7c>
    6e14:	89 2b       	or	r24, r25
    6e16:	09 f0       	breq	.+2      	; 0x6e1a <PORTD_set_pin_dir+0x26>
    6e18:	3b c0       	rjmp	.+118    	; 0x6e90 <PORTD_set_pin_dir+0x9c>
    6e1a:	8c e0       	ldi	r24, 0x0C	; 12
    6e1c:	90 e0       	ldi	r25, 0x00	; 0
    6e1e:	2c e0       	ldi	r18, 0x0C	; 12
    6e20:	30 e0       	ldi	r19, 0x00	; 0
    6e22:	f9 01       	movw	r30, r18
    6e24:	20 81       	ld	r18, Z
    6e26:	62 2f       	mov	r22, r18
    6e28:	29 81       	ldd	r18, Y+1	; 0x01
    6e2a:	42 2f       	mov	r20, r18
    6e2c:	50 e0       	ldi	r21, 0x00	; 0
    6e2e:	21 e0       	ldi	r18, 0x01	; 1
    6e30:	30 e0       	ldi	r19, 0x00	; 0
    6e32:	02 c0       	rjmp	.+4      	; 0x6e38 <PORTD_set_pin_dir+0x44>
    6e34:	22 0f       	add	r18, r18
    6e36:	33 1f       	adc	r19, r19
    6e38:	4a 95       	dec	r20
    6e3a:	e2 f7       	brpl	.-8      	; 0x6e34 <PORTD_set_pin_dir+0x40>
    6e3c:	20 95       	com	r18
    6e3e:	26 23       	and	r18, r22
    6e40:	fc 01       	movw	r30, r24
    6e42:	20 83       	st	Z, r18
    6e44:	25 c0       	rjmp	.+74     	; 0x6e90 <PORTD_set_pin_dir+0x9c>
    6e46:	8c e0       	ldi	r24, 0x0C	; 12
    6e48:	90 e0       	ldi	r25, 0x00	; 0
    6e4a:	2c e0       	ldi	r18, 0x0C	; 12
    6e4c:	30 e0       	ldi	r19, 0x00	; 0
    6e4e:	f9 01       	movw	r30, r18
    6e50:	20 81       	ld	r18, Z
    6e52:	62 2f       	mov	r22, r18
    6e54:	29 81       	ldd	r18, Y+1	; 0x01
    6e56:	42 2f       	mov	r20, r18
    6e58:	50 e0       	ldi	r21, 0x00	; 0
    6e5a:	21 e0       	ldi	r18, 0x01	; 1
    6e5c:	30 e0       	ldi	r19, 0x00	; 0
    6e5e:	02 c0       	rjmp	.+4      	; 0x6e64 <PORTD_set_pin_dir+0x70>
    6e60:	22 0f       	add	r18, r18
    6e62:	33 1f       	adc	r19, r19
    6e64:	4a 95       	dec	r20
    6e66:	e2 f7       	brpl	.-8      	; 0x6e60 <PORTD_set_pin_dir+0x6c>
    6e68:	26 2b       	or	r18, r22
    6e6a:	fc 01       	movw	r30, r24
    6e6c:	20 83       	st	Z, r18
    6e6e:	10 c0       	rjmp	.+32     	; 0x6e90 <PORTD_set_pin_dir+0x9c>
    6e70:	89 81       	ldd	r24, Y+1	; 0x01
    6e72:	88 2f       	mov	r24, r24
    6e74:	90 e0       	ldi	r25, 0x00	; 0
    6e76:	80 59       	subi	r24, 0x90	; 144
    6e78:	9b 4f       	sbci	r25, 0xFB	; 251
    6e7a:	29 81       	ldd	r18, Y+1	; 0x01
    6e7c:	22 2f       	mov	r18, r18
    6e7e:	30 e0       	ldi	r19, 0x00	; 0
    6e80:	20 59       	subi	r18, 0x90	; 144
    6e82:	3b 4f       	sbci	r19, 0xFB	; 251
    6e84:	f9 01       	movw	r30, r18
    6e86:	20 81       	ld	r18, Z
    6e88:	28 60       	ori	r18, 0x08	; 8
    6e8a:	fc 01       	movw	r30, r24
    6e8c:	20 83       	st	Z, r18
    6e8e:	00 00       	nop
    6e90:	00 00       	nop
    6e92:	0f 90       	pop	r0
    6e94:	0f 90       	pop	r0
    6e96:	df 91       	pop	r29
    6e98:	cf 91       	pop	r28
    6e9a:	08 95       	ret

00006e9c <PORTD_get_port_level>:
    6e9c:	cf 93       	push	r28
    6e9e:	df 93       	push	r29
    6ea0:	cd b7       	in	r28, 0x3d	; 61
    6ea2:	de b7       	in	r29, 0x3e	; 62
    6ea4:	8c e0       	ldi	r24, 0x0C	; 12
    6ea6:	90 e0       	ldi	r25, 0x00	; 0
    6ea8:	fc 01       	movw	r30, r24
    6eaa:	82 81       	ldd	r24, Z+2	; 0x02
    6eac:	df 91       	pop	r29
    6eae:	cf 91       	pop	r28
    6eb0:	08 95       	ret

00006eb2 <PORTE_set_pin_dir>:
    6eb2:	cf 93       	push	r28
    6eb4:	df 93       	push	r29
    6eb6:	00 d0       	rcall	.+0      	; 0x6eb8 <PORTE_set_pin_dir+0x6>
    6eb8:	cd b7       	in	r28, 0x3d	; 61
    6eba:	de b7       	in	r29, 0x3e	; 62
    6ebc:	89 83       	std	Y+1, r24	; 0x01
    6ebe:	6a 83       	std	Y+2, r22	; 0x02
    6ec0:	8a 81       	ldd	r24, Y+2	; 0x02
    6ec2:	88 2f       	mov	r24, r24
    6ec4:	90 e0       	ldi	r25, 0x00	; 0
    6ec6:	81 30       	cpi	r24, 0x01	; 1
    6ec8:	91 05       	cpc	r25, r1
    6eca:	e1 f0       	breq	.+56     	; 0x6f04 <PORTE_set_pin_dir+0x52>
    6ecc:	82 30       	cpi	r24, 0x02	; 2
    6ece:	91 05       	cpc	r25, r1
    6ed0:	71 f1       	breq	.+92     	; 0x6f2e <PORTE_set_pin_dir+0x7c>
    6ed2:	89 2b       	or	r24, r25
    6ed4:	09 f0       	breq	.+2      	; 0x6ed8 <PORTE_set_pin_dir+0x26>
    6ed6:	3b c0       	rjmp	.+118    	; 0x6f4e <PORTE_set_pin_dir+0x9c>
    6ed8:	80 e1       	ldi	r24, 0x10	; 16
    6eda:	90 e0       	ldi	r25, 0x00	; 0
    6edc:	20 e1       	ldi	r18, 0x10	; 16
    6ede:	30 e0       	ldi	r19, 0x00	; 0
    6ee0:	f9 01       	movw	r30, r18
    6ee2:	20 81       	ld	r18, Z
    6ee4:	62 2f       	mov	r22, r18
    6ee6:	29 81       	ldd	r18, Y+1	; 0x01
    6ee8:	42 2f       	mov	r20, r18
    6eea:	50 e0       	ldi	r21, 0x00	; 0
    6eec:	21 e0       	ldi	r18, 0x01	; 1
    6eee:	30 e0       	ldi	r19, 0x00	; 0
    6ef0:	02 c0       	rjmp	.+4      	; 0x6ef6 <PORTE_set_pin_dir+0x44>
    6ef2:	22 0f       	add	r18, r18
    6ef4:	33 1f       	adc	r19, r19
    6ef6:	4a 95       	dec	r20
    6ef8:	e2 f7       	brpl	.-8      	; 0x6ef2 <PORTE_set_pin_dir+0x40>
    6efa:	20 95       	com	r18
    6efc:	26 23       	and	r18, r22
    6efe:	fc 01       	movw	r30, r24
    6f00:	20 83       	st	Z, r18
    6f02:	25 c0       	rjmp	.+74     	; 0x6f4e <PORTE_set_pin_dir+0x9c>
    6f04:	80 e1       	ldi	r24, 0x10	; 16
    6f06:	90 e0       	ldi	r25, 0x00	; 0
    6f08:	20 e1       	ldi	r18, 0x10	; 16
    6f0a:	30 e0       	ldi	r19, 0x00	; 0
    6f0c:	f9 01       	movw	r30, r18
    6f0e:	20 81       	ld	r18, Z
    6f10:	62 2f       	mov	r22, r18
    6f12:	29 81       	ldd	r18, Y+1	; 0x01
    6f14:	42 2f       	mov	r20, r18
    6f16:	50 e0       	ldi	r21, 0x00	; 0
    6f18:	21 e0       	ldi	r18, 0x01	; 1
    6f1a:	30 e0       	ldi	r19, 0x00	; 0
    6f1c:	02 c0       	rjmp	.+4      	; 0x6f22 <PORTE_set_pin_dir+0x70>
    6f1e:	22 0f       	add	r18, r18
    6f20:	33 1f       	adc	r19, r19
    6f22:	4a 95       	dec	r20
    6f24:	e2 f7       	brpl	.-8      	; 0x6f1e <PORTE_set_pin_dir+0x6c>
    6f26:	26 2b       	or	r18, r22
    6f28:	fc 01       	movw	r30, r24
    6f2a:	20 83       	st	Z, r18
    6f2c:	10 c0       	rjmp	.+32     	; 0x6f4e <PORTE_set_pin_dir+0x9c>
    6f2e:	89 81       	ldd	r24, Y+1	; 0x01
    6f30:	88 2f       	mov	r24, r24
    6f32:	90 e0       	ldi	r25, 0x00	; 0
    6f34:	80 57       	subi	r24, 0x70	; 112
    6f36:	9b 4f       	sbci	r25, 0xFB	; 251
    6f38:	29 81       	ldd	r18, Y+1	; 0x01
    6f3a:	22 2f       	mov	r18, r18
    6f3c:	30 e0       	ldi	r19, 0x00	; 0
    6f3e:	20 57       	subi	r18, 0x70	; 112
    6f40:	3b 4f       	sbci	r19, 0xFB	; 251
    6f42:	f9 01       	movw	r30, r18
    6f44:	20 81       	ld	r18, Z
    6f46:	28 60       	ori	r18, 0x08	; 8
    6f48:	fc 01       	movw	r30, r24
    6f4a:	20 83       	st	Z, r18
    6f4c:	00 00       	nop
    6f4e:	00 00       	nop
    6f50:	0f 90       	pop	r0
    6f52:	0f 90       	pop	r0
    6f54:	df 91       	pop	r29
    6f56:	cf 91       	pop	r28
    6f58:	08 95       	ret

00006f5a <PORTF_set_pin_dir>:
    6f5a:	cf 93       	push	r28
    6f5c:	df 93       	push	r29
    6f5e:	00 d0       	rcall	.+0      	; 0x6f60 <PORTF_set_pin_dir+0x6>
    6f60:	cd b7       	in	r28, 0x3d	; 61
    6f62:	de b7       	in	r29, 0x3e	; 62
    6f64:	89 83       	std	Y+1, r24	; 0x01
    6f66:	6a 83       	std	Y+2, r22	; 0x02
    6f68:	8a 81       	ldd	r24, Y+2	; 0x02
    6f6a:	88 2f       	mov	r24, r24
    6f6c:	90 e0       	ldi	r25, 0x00	; 0
    6f6e:	81 30       	cpi	r24, 0x01	; 1
    6f70:	91 05       	cpc	r25, r1
    6f72:	e1 f0       	breq	.+56     	; 0x6fac <PORTF_set_pin_dir+0x52>
    6f74:	82 30       	cpi	r24, 0x02	; 2
    6f76:	91 05       	cpc	r25, r1
    6f78:	71 f1       	breq	.+92     	; 0x6fd6 <PORTF_set_pin_dir+0x7c>
    6f7a:	89 2b       	or	r24, r25
    6f7c:	09 f0       	breq	.+2      	; 0x6f80 <PORTF_set_pin_dir+0x26>
    6f7e:	3b c0       	rjmp	.+118    	; 0x6ff6 <PORTF_set_pin_dir+0x9c>
    6f80:	84 e1       	ldi	r24, 0x14	; 20
    6f82:	90 e0       	ldi	r25, 0x00	; 0
    6f84:	24 e1       	ldi	r18, 0x14	; 20
    6f86:	30 e0       	ldi	r19, 0x00	; 0
    6f88:	f9 01       	movw	r30, r18
    6f8a:	20 81       	ld	r18, Z
    6f8c:	62 2f       	mov	r22, r18
    6f8e:	29 81       	ldd	r18, Y+1	; 0x01
    6f90:	42 2f       	mov	r20, r18
    6f92:	50 e0       	ldi	r21, 0x00	; 0
    6f94:	21 e0       	ldi	r18, 0x01	; 1
    6f96:	30 e0       	ldi	r19, 0x00	; 0
    6f98:	02 c0       	rjmp	.+4      	; 0x6f9e <PORTF_set_pin_dir+0x44>
    6f9a:	22 0f       	add	r18, r18
    6f9c:	33 1f       	adc	r19, r19
    6f9e:	4a 95       	dec	r20
    6fa0:	e2 f7       	brpl	.-8      	; 0x6f9a <PORTF_set_pin_dir+0x40>
    6fa2:	20 95       	com	r18
    6fa4:	26 23       	and	r18, r22
    6fa6:	fc 01       	movw	r30, r24
    6fa8:	20 83       	st	Z, r18
    6faa:	25 c0       	rjmp	.+74     	; 0x6ff6 <PORTF_set_pin_dir+0x9c>
    6fac:	84 e1       	ldi	r24, 0x14	; 20
    6fae:	90 e0       	ldi	r25, 0x00	; 0
    6fb0:	24 e1       	ldi	r18, 0x14	; 20
    6fb2:	30 e0       	ldi	r19, 0x00	; 0
    6fb4:	f9 01       	movw	r30, r18
    6fb6:	20 81       	ld	r18, Z
    6fb8:	62 2f       	mov	r22, r18
    6fba:	29 81       	ldd	r18, Y+1	; 0x01
    6fbc:	42 2f       	mov	r20, r18
    6fbe:	50 e0       	ldi	r21, 0x00	; 0
    6fc0:	21 e0       	ldi	r18, 0x01	; 1
    6fc2:	30 e0       	ldi	r19, 0x00	; 0
    6fc4:	02 c0       	rjmp	.+4      	; 0x6fca <PORTF_set_pin_dir+0x70>
    6fc6:	22 0f       	add	r18, r18
    6fc8:	33 1f       	adc	r19, r19
    6fca:	4a 95       	dec	r20
    6fcc:	e2 f7       	brpl	.-8      	; 0x6fc6 <PORTF_set_pin_dir+0x6c>
    6fce:	26 2b       	or	r18, r22
    6fd0:	fc 01       	movw	r30, r24
    6fd2:	20 83       	st	Z, r18
    6fd4:	10 c0       	rjmp	.+32     	; 0x6ff6 <PORTF_set_pin_dir+0x9c>
    6fd6:	89 81       	ldd	r24, Y+1	; 0x01
    6fd8:	88 2f       	mov	r24, r24
    6fda:	90 e0       	ldi	r25, 0x00	; 0
    6fdc:	80 55       	subi	r24, 0x50	; 80
    6fde:	9b 4f       	sbci	r25, 0xFB	; 251
    6fe0:	29 81       	ldd	r18, Y+1	; 0x01
    6fe2:	22 2f       	mov	r18, r18
    6fe4:	30 e0       	ldi	r19, 0x00	; 0
    6fe6:	20 55       	subi	r18, 0x50	; 80
    6fe8:	3b 4f       	sbci	r19, 0xFB	; 251
    6fea:	f9 01       	movw	r30, r18
    6fec:	20 81       	ld	r18, Z
    6fee:	28 60       	ori	r18, 0x08	; 8
    6ff0:	fc 01       	movw	r30, r24
    6ff2:	20 83       	st	Z, r18
    6ff4:	00 00       	nop
    6ff6:	00 00       	nop
    6ff8:	0f 90       	pop	r0
    6ffa:	0f 90       	pop	r0
    6ffc:	df 91       	pop	r29
    6ffe:	cf 91       	pop	r28
    7000:	08 95       	ret

00007002 <_Z8debouncev>:


// This function is called approximately each 1/60 to 1/30 sec.
void debounce(void)
{
    7002:	cf 93       	push	r28
    7004:	df 93       	push	r29
    7006:	cd b7       	in	r28, 0x3d	; 61
    7008:	de b7       	in	r29, 0x3e	; 62
	// Move previously sampled raw input bits one step down the line.
	portDpinReadings[2] = portDpinReadings[1];
    700a:	80 91 a0 46 	lds	r24, 0x46A0	; 0x8046a0 <portDpinReadings+0x1>
    700e:	80 93 a1 46 	sts	0x46A1, r24	; 0x8046a1 <portDpinReadings+0x2>
	portDpinReadings[1] = portDpinReadings[0];
    7012:	80 91 9f 46 	lds	r24, 0x469F	; 0x80469f <portDpinReadings>
    7016:	80 93 a0 46 	sts	0x46A0, r24	; 0x8046a0 <portDpinReadings+0x1>
	
	portCpinReadings[2] = portCpinReadings[1];
    701a:	80 91 9d 46 	lds	r24, 0x469D	; 0x80469d <portCpinReadings+0x1>
    701e:	80 93 9e 46 	sts	0x469E, r24	; 0x80469e <portCpinReadings+0x2>
	portCpinReadings[1] = portCpinReadings[0];
    7022:	80 91 9c 46 	lds	r24, 0x469C	; 0x80469c <portCpinReadings>
    7026:	80 93 9d 46 	sts	0x469D, r24	; 0x80469d <portCpinReadings+0x1>
	
	// Sample new raw input bits from PORT_A.
	portCpinReadings[0] = PORTC_get_port_level();
    702a:	0e 94 9b 36 	call	0x6d36	; 0x6d36 <PORTC_get_port_level>
    702e:	80 93 9c 46 	sts	0x469C, r24	; 0x80469c <portCpinReadings>
	portDpinReadings[0] = PORTD_get_port_level();
    7032:	0e 94 4e 37 	call	0x6e9c	; 0x6e9c <PORTD_get_port_level>
    7036:	80 93 9f 46 	sts	0x469F, r24	; 0x80469f <portDpinReadings>

	// Debounce output bits using low-pass filtering.
	portCdebounced = portCdebounced ^ (
	(portCdebounced ^ portCpinReadings[0])
    703a:	90 91 9c 46 	lds	r25, 0x469C	; 0x80469c <portCpinReadings>
	& (portCdebounced ^ portCpinReadings[1])
	& (portCdebounced ^ portCpinReadings[2]));
    703e:	80 91 a2 46 	lds	r24, 0x46A2	; 0x8046a2 <portCdebounced>
    7042:	98 27       	eor	r25, r24
	portDpinReadings[0] = PORTD_get_port_level();

	// Debounce output bits using low-pass filtering.
	portCdebounced = portCdebounced ^ (
	(portCdebounced ^ portCpinReadings[0])
	& (portCdebounced ^ portCpinReadings[1])
    7044:	20 91 9d 46 	lds	r18, 0x469D	; 0x80469d <portCpinReadings+0x1>
	& (portCdebounced ^ portCpinReadings[2]));
    7048:	80 91 a2 46 	lds	r24, 0x46A2	; 0x8046a2 <portCdebounced>
    704c:	82 27       	eor	r24, r18
    704e:	98 23       	and	r25, r24
    7050:	20 91 9e 46 	lds	r18, 0x469E	; 0x80469e <portCpinReadings+0x2>
    7054:	80 91 a2 46 	lds	r24, 0x46A2	; 0x8046a2 <portCdebounced>
    7058:	82 27       	eor	r24, r18
    705a:	98 23       	and	r25, r24
    705c:	80 91 a2 46 	lds	r24, 0x46A2	; 0x8046a2 <portCdebounced>
    7060:	89 27       	eor	r24, r25
    7062:	80 93 a2 46 	sts	0x46A2, r24	; 0x8046a2 <portCdebounced>
	
	portDdebounced = portDdebounced ^ (
	(portDdebounced ^ portDpinReadings[0])
    7066:	90 91 9f 46 	lds	r25, 0x469F	; 0x80469f <portDpinReadings>
	& (portDdebounced ^ portDpinReadings[1])
	& (portDdebounced ^ portDpinReadings[2]));
    706a:	80 91 a3 46 	lds	r24, 0x46A3	; 0x8046a3 <portDdebounced>
    706e:	98 27       	eor	r25, r24
	& (portCdebounced ^ portCpinReadings[1])
	& (portCdebounced ^ portCpinReadings[2]));
	
	portDdebounced = portDdebounced ^ (
	(portDdebounced ^ portDpinReadings[0])
	& (portDdebounced ^ portDpinReadings[1])
    7070:	20 91 a0 46 	lds	r18, 0x46A0	; 0x8046a0 <portDpinReadings+0x1>
	& (portDdebounced ^ portDpinReadings[2]));
    7074:	80 91 a3 46 	lds	r24, 0x46A3	; 0x8046a3 <portDdebounced>
    7078:	82 27       	eor	r24, r18
    707a:	98 23       	and	r25, r24
    707c:	20 91 a1 46 	lds	r18, 0x46A1	; 0x8046a1 <portDpinReadings+0x2>
    7080:	80 91 a3 46 	lds	r24, 0x46A3	; 0x8046a3 <portDdebounced>
    7084:	82 27       	eor	r24, r18
    7086:	98 23       	and	r25, r24
    7088:	80 91 a3 46 	lds	r24, 0x46A3	; 0x8046a3 <portDdebounced>
    708c:	89 27       	eor	r24, r25
    708e:	80 93 a3 46 	sts	0x46A3, r24	; 0x8046a3 <portDdebounced>
}
    7092:	00 00       	nop
    7094:	df 91       	pop	r29
    7096:	cf 91       	pop	r28
    7098:	08 95       	ret

0000709a <_Z18portCdebouncedValsv>:

uint8_t portCdebouncedVals(void)
{
    709a:	cf 93       	push	r28
    709c:	df 93       	push	r29
    709e:	cd b7       	in	r28, 0x3d	; 61
    70a0:	de b7       	in	r29, 0x3e	; 62
	return portCdebounced;
    70a2:	80 91 a2 46 	lds	r24, 0x46A2	; 0x8046a2 <portCdebounced>
}
    70a6:	df 91       	pop	r29
    70a8:	cf 91       	pop	r28
    70aa:	08 95       	ret

000070ac <_Z18portDdebouncedValsv>:

uint8_t portDdebouncedVals(void)
{
    70ac:	cf 93       	push	r28
    70ae:	df 93       	push	r29
    70b0:	cd b7       	in	r28, 0x3d	; 61
    70b2:	de b7       	in	r29, 0x3e	; 62
	return portDdebounced;
    70b4:	80 91 a3 46 	lds	r24, 0x46A3	; 0x8046a3 <portDdebounced>
}
    70b8:	df 91       	pop	r29
    70ba:	cf 91       	pop	r28
    70bc:	08 95       	ret

000070be <_Z10BINIO_initv>:
// 	
// 	PORTA.INTFLAGS = 0xFF; /* Clear all flags */
// }

void BINIO_init(void)
{
    70be:	cf 93       	push	r28
    70c0:	df 93       	push	r29
    70c2:	cd b7       	in	r28, 0x3d	; 61
    70c4:	de b7       	in	r29, 0x3e	; 62
	/* PORTA *************************************************************************************/
	
	/* PORTA.PIN0 = TXDO USART */
	/* PORTA.PIN1 = RXD0 USART */
	
	PORTA_set_pin_dir(FAN_ENABLE, PORT_DIR_OUT);
    70c6:	61 e0       	ldi	r22, 0x01	; 1
    70c8:	81 e0       	ldi	r24, 0x01	; 1
    70ca:	0e 94 9d 34 	call	0x693a	; 0x693a <PORTA_set_pin_dir>
	PORTA_set_pin_level(FAN_ENABLE, LOW);
    70ce:	60 e0       	ldi	r22, 0x00	; 0
    70d0:	81 e0       	ldi	r24, 0x01	; 1
    70d2:	0e 94 f1 34 	call	0x69e2	; 0x69e2 <PORTA_set_pin_level>
	
	PORTA_set_pin_dir(RTC_SQW, PORT_DIR_IN);
    70d6:	60 e0       	ldi	r22, 0x00	; 0
    70d8:	82 e0       	ldi	r24, 0x02	; 2
    70da:	0e 94 9d 34 	call	0x693a	; 0x693a <PORTA_set_pin_dir>
	PORTA_set_pin_pull_mode(RTC_SQW, PORT_PULL_UP);
    70de:	61 e0       	ldi	r22, 0x01	; 1
    70e0:	82 e0       	ldi	r24, 0x02	; 2
    70e2:	0e 94 49 34 	call	0x6892	; 0x6892 <PORTA_set_pin_pull_mode>
	PORTA_pin_set_isc(RTC_SQW, PORT_ISC_RISING_gc);
    70e6:	62 e0       	ldi	r22, 0x02	; 2
    70e8:	82 e0       	ldi	r24, 0x02	; 2
    70ea:	0e 94 7a 34 	call	0x68f4	; 0x68f4 <PORTA_pin_set_isc>
	
	PORTA_set_pin_dir(FET_DRIVER_ENABLE, PORT_DIR_OUT);
    70ee:	61 e0       	ldi	r22, 0x01	; 1
    70f0:	83 e0       	ldi	r24, 0x03	; 3
    70f2:	0e 94 9d 34 	call	0x693a	; 0x693a <PORTA_set_pin_dir>
	PORTA_set_pin_level(FET_DRIVER_ENABLE, LOW);
    70f6:	60 e0       	ldi	r22, 0x00	; 0
    70f8:	83 e0       	ldi	r24, 0x03	; 3
    70fa:	0e 94 f1 34 	call	0x69e2	; 0x69e2 <PORTA_set_pin_level>
	
// 	PORTA_set_pin_dir(ANT_CONNECT_INT, PORT_DIR_IN);
// 	PORTA_set_pin_pull_mode(ANT_CONNECT_INT, PORT_PULL_UP);
// 	PORTA_pin_set_isc(ANT_CONNECT_INT, PORT_ISC_FALLING_gc);

	PORTA_set_pin_dir(WIFI_ENABLE, PORT_DIR_OUT);
    70fe:	61 e0       	ldi	r22, 0x01	; 1
    7100:	85 e0       	ldi	r24, 0x05	; 5
    7102:	0e 94 9d 34 	call	0x693a	; 0x693a <PORTA_set_pin_dir>
	PORTA_set_pin_level(WIFI_ENABLE, LOW);
    7106:	60 e0       	ldi	r22, 0x00	; 0
    7108:	85 e0       	ldi	r24, 0x05	; 5
    710a:	0e 94 f1 34 	call	0x69e2	; 0x69e2 <PORTA_set_pin_level>
	
	PORTA_set_pin_dir(WIFI_RESET, PORT_DIR_OUT);
    710e:	61 e0       	ldi	r22, 0x01	; 1
    7110:	86 e0       	ldi	r24, 0x06	; 6
    7112:	0e 94 9d 34 	call	0x693a	; 0x693a <PORTA_set_pin_dir>
	PORTA_set_pin_level(WIFI_RESET, LOW);
    7116:	60 e0       	ldi	r22, 0x00	; 0
    7118:	86 e0       	ldi	r24, 0x06	; 6
    711a:	0e 94 f1 34 	call	0x69e2	; 0x69e2 <PORTA_set_pin_level>
	
	PORTA_set_pin_dir(V3V3_PWR_ENABLE, PORT_DIR_OUT);
    711e:	61 e0       	ldi	r22, 0x01	; 1
    7120:	87 e0       	ldi	r24, 0x07	; 7
    7122:	0e 94 9d 34 	call	0x693a	; 0x693a <PORTA_set_pin_dir>
	PORTA_set_pin_level(V3V3_PWR_ENABLE, LOW);
    7126:	60 e0       	ldi	r22, 0x00	; 0
    7128:	87 e0       	ldi	r24, 0x07	; 7
    712a:	0e 94 f1 34 	call	0x69e2	; 0x69e2 <PORTA_set_pin_level>
	
	/* PORTB *************************************************************************************/

	PORTB_set_pin_dir(PROC_PTT_OUT, PORT_DIR_OUT);
    712e:	61 e0       	ldi	r22, 0x01	; 1
    7130:	80 e0       	ldi	r24, 0x00	; 0
    7132:	0e 94 2b 35 	call	0x6a56	; 0x6a56 <PORTB_set_pin_dir>
	PORTB_set_pin_level(PROC_PTT_OUT, LOW);
    7136:	60 e0       	ldi	r22, 0x00	; 0
    7138:	80 e0       	ldi	r24, 0x00	; 0
    713a:	0e 94 7f 35 	call	0x6afe	; 0x6afe <PORTB_set_pin_level>
	
	PORTB_set_pin_dir(PROC_TONE_OUT, PORT_DIR_OUT);
    713e:	61 e0       	ldi	r22, 0x01	; 1
    7140:	81 e0       	ldi	r24, 0x01	; 1
    7142:	0e 94 2b 35 	call	0x6a56	; 0x6a56 <PORTB_set_pin_dir>
	PORTB_set_pin_level(PROC_TONE_OUT, LOW);
    7146:	60 e0       	ldi	r22, 0x00	; 0
    7148:	81 e0       	ldi	r24, 0x01	; 1
    714a:	0e 94 7f 35 	call	0x6afe	; 0x6afe <PORTB_set_pin_level>
	
	/* PORTB.PIN2 = SDA1 I2C */
	/* PORTB.PIN3 = SCL1 I2C */
	PORTB_set_pin_dir(MAIN_PWR_ENABLE, PORT_DIR_OUT);
    714e:	61 e0       	ldi	r22, 0x01	; 1
    7150:	84 e0       	ldi	r24, 0x04	; 4
    7152:	0e 94 2b 35 	call	0x6a56	; 0x6a56 <PORTB_set_pin_dir>
	PORTB_set_pin_level(MAIN_PWR_ENABLE, LOW);
    7156:	60 e0       	ldi	r22, 0x00	; 0
    7158:	84 e0       	ldi	r24, 0x04	; 4
    715a:	0e 94 7f 35 	call	0x6afe	; 0x6afe <PORTB_set_pin_level>
	
	PORTB_set_pin_dir(TX_FINAL_VOLTAGE_ENABLE, PORT_DIR_OUT);
    715e:	61 e0       	ldi	r22, 0x01	; 1
    7160:	85 e0       	ldi	r24, 0x05	; 5
    7162:	0e 94 2b 35 	call	0x6a56	; 0x6a56 <PORTB_set_pin_dir>
	PORTB_set_pin_level(TX_FINAL_VOLTAGE_ENABLE, LOW);
    7166:	60 e0       	ldi	r22, 0x00	; 0
    7168:	85 e0       	ldi	r24, 0x05	; 5
    716a:	0e 94 7f 35 	call	0x6afe	; 0x6afe <PORTB_set_pin_level>
	/* PORTC.PIN0 = TXD1 USART TO_WIFI_RX */
	/* PORTC.PIN1 = RXD1 USART FROM_WIFI_TX */

	/* PORTC.PIN2 = SDA0 I2C */
	/* PORTC.PIN3 = SCL0 I2C */
	PORTC_set_pin_dir(RTC_SDA, PORT_DIR_IN);
    716e:	60 e0       	ldi	r22, 0x00	; 0
    7170:	82 e0       	ldi	r24, 0x02	; 2
    7172:	0e 94 0d 36 	call	0x6c1a	; 0x6c1a <PORTC_set_pin_dir>
	PORTC_set_pin_pull_mode(RTC_SDA, PORT_PULL_UP);
    7176:	61 e0       	ldi	r22, 0x01	; 1
    7178:	82 e0       	ldi	r24, 0x02	; 2
    717a:	0e 94 b9 35 	call	0x6b72	; 0x6b72 <PORTC_set_pin_pull_mode>
	
	PORTC_set_pin_dir(RTC_SCL, PORT_DIR_IN);
    717e:	60 e0       	ldi	r22, 0x00	; 0
    7180:	83 e0       	ldi	r24, 0x03	; 3
    7182:	0e 94 0d 36 	call	0x6c1a	; 0x6c1a <PORTC_set_pin_dir>
	PORTC_set_pin_pull_mode(RTC_SCL, PORT_PULL_UP);
    7186:	61 e0       	ldi	r22, 0x01	; 1
    7188:	83 e0       	ldi	r24, 0x03	; 3
    718a:	0e 94 b9 35 	call	0x6b72	; 0x6b72 <PORTC_set_pin_pull_mode>

	PORTC_set_pin_dir(LED_GREEN, PORT_DIR_OUT);
    718e:	61 e0       	ldi	r22, 0x01	; 1
    7190:	85 e0       	ldi	r24, 0x05	; 5
    7192:	0e 94 0d 36 	call	0x6c1a	; 0x6c1a <PORTC_set_pin_dir>
	PORTC_set_pin_level(LED_GREEN, LOW);
    7196:	60 e0       	ldi	r22, 0x00	; 0
    7198:	85 e0       	ldi	r24, 0x05	; 5
    719a:	0e 94 61 36 	call	0x6cc2	; 0x6cc2 <PORTC_set_pin_level>
	
	PORTC_set_pin_dir(LED_RED, PORT_DIR_OUT);
    719e:	61 e0       	ldi	r22, 0x01	; 1
    71a0:	86 e0       	ldi	r24, 0x06	; 6
    71a2:	0e 94 0d 36 	call	0x6c1a	; 0x6c1a <PORTC_set_pin_dir>
	PORTC_set_pin_level(LED_RED, LOW);
    71a6:	60 e0       	ldi	r22, 0x00	; 0
    71a8:	86 e0       	ldi	r24, 0x06	; 6
    71aa:	0e 94 61 36 	call	0x6cc2	; 0x6cc2 <PORTC_set_pin_level>
	
	PORTC_set_pin_dir(SWITCH, PORT_DIR_IN);
    71ae:	60 e0       	ldi	r22, 0x00	; 0
    71b0:	87 e0       	ldi	r24, 0x07	; 7
    71b2:	0e 94 0d 36 	call	0x6c1a	; 0x6c1a <PORTC_set_pin_dir>
	PORTC_set_pin_pull_mode(SWITCH, PORT_PULL_UP);
    71b6:	61 e0       	ldi	r22, 0x01	; 1
    71b8:	87 e0       	ldi	r24, 0x07	; 7
    71ba:	0e 94 b9 35 	call	0x6b72	; 0x6b72 <PORTC_set_pin_pull_mode>
	PORTC_pin_set_isc(SWITCH, PORT_ISC_RISING_gc);
    71be:	62 e0       	ldi	r22, 0x02	; 2
    71c0:	87 e0       	ldi	r24, 0x07	; 7
    71c2:	0e 94 ea 35 	call	0x6bd4	; 0x6bd4 <PORTC_pin_set_isc>
	
	/* PORTD *************************************************************************************/
	PORTD_set_pin_dir(X80M_ANTENNA_DETECT_V, PORT_DIR_IN); /* use ADC for reading voltage at antenna detect pin */
    71c6:	60 e0       	ldi	r22, 0x00	; 0
    71c8:	80 e0       	ldi	r24, 0x00	; 0
    71ca:	0e 94 fa 36 	call	0x6df4	; 0x6df4 <PORTD_set_pin_dir>
	
	PORTD_set_pin_dir(X80M_ANTENNA_DETECT, PORT_DIR_IN);
    71ce:	60 e0       	ldi	r22, 0x00	; 0
    71d0:	81 e0       	ldi	r24, 0x01	; 1
    71d2:	0e 94 fa 36 	call	0x6df4	; 0x6df4 <PORTD_set_pin_dir>
	PORTD_set_pin_pull_mode(X80M_ANTENNA_DETECT, PORT_PULL_UP);
    71d6:	61 e0       	ldi	r22, 0x01	; 1
    71d8:	81 e0       	ldi	r24, 0x01	; 1
    71da:	0e 94 a6 36 	call	0x6d4c	; 0x6d4c <PORTD_set_pin_pull_mode>
	PORTD_pin_set_isc(X80M_ANTENNA_DETECT, PORT_ISC_BOTHEDGES_gc);
    71de:	61 e0       	ldi	r22, 0x01	; 1
    71e0:	81 e0       	ldi	r24, 0x01	; 1
    71e2:	0e 94 d7 36 	call	0x6dae	; 0x6dae <PORTD_pin_set_isc>
	/* PORTD.PIN3 = ACD3 Audio in TX_BATTERY_VOLTAGE */
	/* PORTD.PIN4 = ACD4 Audio in TX_12_VOLTAGE */
	/* PORTD.PIN5 = ACD5 Audio in TX_PA_VOLTAGE */
	/* PORTD.PIN6 = DAC0 voltage out DAC_OUTPUT */
	
	PORTD_set_pin_dir(WIFI_MODULE_DETECT, PORT_DIR_IN); /* Detect presence of Huzzah module */
    71e6:	60 e0       	ldi	r22, 0x00	; 0
    71e8:	87 e0       	ldi	r24, 0x07	; 7
    71ea:	0e 94 fa 36 	call	0x6df4	; 0x6df4 <PORTD_set_pin_dir>
	PORTD_set_pin_pull_mode(WIFI_MODULE_DETECT, PORT_PULL_OFF);
    71ee:	60 e0       	ldi	r22, 0x00	; 0
    71f0:	87 e0       	ldi	r24, 0x07	; 7
    71f2:	0e 94 a6 36 	call	0x6d4c	; 0x6d4c <PORTD_set_pin_pull_mode>

	/* PORTE *************************************************************************************/
	PORTE_set_pin_dir(0, PORT_DIR_OFF); /* Unused */
    71f6:	62 e0       	ldi	r22, 0x02	; 2
    71f8:	80 e0       	ldi	r24, 0x00	; 0
    71fa:	0e 94 59 37 	call	0x6eb2	; 0x6eb2 <PORTE_set_pin_dir>
	PORTE_set_pin_dir(1, PORT_DIR_OFF); /* Unused */
    71fe:	62 e0       	ldi	r22, 0x02	; 2
    7200:	81 e0       	ldi	r24, 0x01	; 1
    7202:	0e 94 59 37 	call	0x6eb2	; 0x6eb2 <PORTE_set_pin_dir>
	PORTE_set_pin_dir(2, PORT_DIR_OFF); /* Unused */
    7206:	62 e0       	ldi	r22, 0x02	; 2
    7208:	82 e0       	ldi	r24, 0x02	; 2
    720a:	0e 94 59 37 	call	0x6eb2	; 0x6eb2 <PORTE_set_pin_dir>
	PORTE_set_pin_dir(3, PORT_DIR_OFF); /* Unused */
    720e:	62 e0       	ldi	r22, 0x02	; 2
    7210:	83 e0       	ldi	r24, 0x03	; 3
    7212:	0e 94 59 37 	call	0x6eb2	; 0x6eb2 <PORTE_set_pin_dir>

	/* PORTF *************************************************************************************/
	PORTF_set_pin_dir(X32KHZ_SQUAREWAVE, PORT_DIR_OFF);	
    7216:	62 e0       	ldi	r22, 0x02	; 2
    7218:	80 e0       	ldi	r24, 0x00	; 0
    721a:	0e 94 ad 37 	call	0x6f5a	; 0x6f5a <PORTF_set_pin_dir>
	PORTF_set_pin_dir(1, PORT_DIR_OFF);	/* Unused */
    721e:	62 e0       	ldi	r22, 0x02	; 2
    7220:	81 e0       	ldi	r24, 0x01	; 1
    7222:	0e 94 ad 37 	call	0x6f5a	; 0x6f5a <PORTF_set_pin_dir>
	PORTF_set_pin_dir(2, PORT_DIR_OFF); /* Unused */
    7226:	62 e0       	ldi	r22, 0x02	; 2
    7228:	82 e0       	ldi	r24, 0x02	; 2
    722a:	0e 94 ad 37 	call	0x6f5a	; 0x6f5a <PORTF_set_pin_dir>
	PORTF_set_pin_dir(3, PORT_DIR_OFF); /* Unused */
    722e:	62 e0       	ldi	r22, 0x02	; 2
    7230:	83 e0       	ldi	r24, 0x03	; 3
    7232:	0e 94 ad 37 	call	0x6f5a	; 0x6f5a <PORTF_set_pin_dir>
	PORTF_set_pin_dir(4, PORT_DIR_OFF); /* Unused */
    7236:	62 e0       	ldi	r22, 0x02	; 2
    7238:	84 e0       	ldi	r24, 0x04	; 4
    723a:	0e 94 ad 37 	call	0x6f5a	; 0x6f5a <PORTF_set_pin_dir>
	PORTF_set_pin_dir(5, PORT_DIR_OFF); /* Unused */
    723e:	62 e0       	ldi	r22, 0x02	; 2
    7240:	85 e0       	ldi	r24, 0x05	; 5
    7242:	0e 94 ad 37 	call	0x6f5a	; 0x6f5a <PORTF_set_pin_dir>
	PORTF_set_pin_dir(6, PORT_DIR_OFF); /* Reset */
    7246:	62 e0       	ldi	r22, 0x02	; 2
    7248:	86 e0       	ldi	r24, 0x06	; 6
    724a:	0e 94 ad 37 	call	0x6f5a	; 0x6f5a <PORTF_set_pin_dir>
	
	/* PORT Pin Interrupts */
	PORTA.PIN2CTRL = 0x0A; /* Enable RTC SQW 1-sec interrupts */
    724e:	80 e0       	ldi	r24, 0x00	; 0
    7250:	94 e0       	ldi	r25, 0x04	; 4
    7252:	2a e0       	ldi	r18, 0x0A	; 10
    7254:	fc 01       	movw	r30, r24
    7256:	22 8b       	std	Z+18, r18	; 0x12
	PORTD.PIN1CTRL = 0x09; /* Enable antenna change interrupts */
    7258:	80 e6       	ldi	r24, 0x60	; 96
    725a:	94 e0       	ldi	r25, 0x04	; 4
    725c:	29 e0       	ldi	r18, 0x09	; 9
    725e:	fc 01       	movw	r30, r24
    7260:	21 8b       	std	Z+17, r18	; 0x11
}
    7262:	00 00       	nop
    7264:	df 91       	pop	r29
    7266:	cf 91       	pop	r28
    7268:	08 95       	ret

0000726a <_Z11BINIO_sleepv>:

void BINIO_sleep()
{
    726a:	cf 93       	push	r28
    726c:	df 93       	push	r29
    726e:	cd b7       	in	r28, 0x3d	; 61
    7270:	de b7       	in	r29, 0x3e	; 62
	/* PORTA *************************************************************************************/
	
	/* PORTA.PIN0 = TXDO USART */
	/* PORTA.PIN1 = RXD0 USART */
	
	PORTA_set_pin_dir(FAN_ENABLE, PORT_DIR_OUT);
    7272:	61 e0       	ldi	r22, 0x01	; 1
    7274:	81 e0       	ldi	r24, 0x01	; 1
    7276:	0e 94 9d 34 	call	0x693a	; 0x693a <PORTA_set_pin_dir>
	PORTA_set_pin_level(FAN_ENABLE, LOW);
    727a:	60 e0       	ldi	r22, 0x00	; 0
    727c:	81 e0       	ldi	r24, 0x01	; 1
    727e:	0e 94 f1 34 	call	0x69e2	; 0x69e2 <PORTA_set_pin_level>
	
// 	PORTA_set_pin_dir(RTC_SQW, PORT_DIR_IN);
// 	PORTA_set_pin_pull_mode(RTC_SQW, PORT_PULL_UP);
// 	PORTA_pin_set_isc(RTC_SQW, PORT_ISC_RISING_gc);
	
	PORTA_set_pin_dir(FET_DRIVER_ENABLE, PORT_DIR_OUT);
    7282:	61 e0       	ldi	r22, 0x01	; 1
    7284:	83 e0       	ldi	r24, 0x03	; 3
    7286:	0e 94 9d 34 	call	0x693a	; 0x693a <PORTA_set_pin_dir>
	PORTA_set_pin_level(FET_DRIVER_ENABLE, LOW);
    728a:	60 e0       	ldi	r22, 0x00	; 0
    728c:	83 e0       	ldi	r24, 0x03	; 3
    728e:	0e 94 f1 34 	call	0x69e2	; 0x69e2 <PORTA_set_pin_level>
	
	// 	PORTA_set_pin_dir(ANT_CONNECT_INT, PORT_DIR_IN);
	// 	PORTA_set_pin_pull_mode(ANT_CONNECT_INT, PORT_PULL_UP);
	// 	PORTA_pin_set_isc(ANT_CONNECT_INT, PORT_ISC_FALLING_gc);

	PORTA_set_pin_dir(WIFI_ENABLE, PORT_DIR_OUT);
    7292:	61 e0       	ldi	r22, 0x01	; 1
    7294:	85 e0       	ldi	r24, 0x05	; 5
    7296:	0e 94 9d 34 	call	0x693a	; 0x693a <PORTA_set_pin_dir>
	PORTA_set_pin_level(WIFI_ENABLE, LOW);
    729a:	60 e0       	ldi	r22, 0x00	; 0
    729c:	85 e0       	ldi	r24, 0x05	; 5
    729e:	0e 94 f1 34 	call	0x69e2	; 0x69e2 <PORTA_set_pin_level>
	
	PORTA_set_pin_dir(WIFI_RESET, PORT_DIR_OUT);
    72a2:	61 e0       	ldi	r22, 0x01	; 1
    72a4:	86 e0       	ldi	r24, 0x06	; 6
    72a6:	0e 94 9d 34 	call	0x693a	; 0x693a <PORTA_set_pin_dir>
	PORTA_set_pin_level(WIFI_RESET, LOW);
    72aa:	60 e0       	ldi	r22, 0x00	; 0
    72ac:	86 e0       	ldi	r24, 0x06	; 6
    72ae:	0e 94 f1 34 	call	0x69e2	; 0x69e2 <PORTA_set_pin_level>
	
	PORTA_set_pin_dir(V3V3_PWR_ENABLE, PORT_DIR_OUT);
    72b2:	61 e0       	ldi	r22, 0x01	; 1
    72b4:	87 e0       	ldi	r24, 0x07	; 7
    72b6:	0e 94 9d 34 	call	0x693a	; 0x693a <PORTA_set_pin_dir>
	PORTA_set_pin_level(V3V3_PWR_ENABLE, LOW);
    72ba:	60 e0       	ldi	r22, 0x00	; 0
    72bc:	87 e0       	ldi	r24, 0x07	; 7
    72be:	0e 94 f1 34 	call	0x69e2	; 0x69e2 <PORTA_set_pin_level>
	
	/* PORTB *************************************************************************************/

	PORTB_set_pin_dir(PROC_PTT_OUT, PORT_DIR_OUT);
    72c2:	61 e0       	ldi	r22, 0x01	; 1
    72c4:	80 e0       	ldi	r24, 0x00	; 0
    72c6:	0e 94 2b 35 	call	0x6a56	; 0x6a56 <PORTB_set_pin_dir>
	PORTB_set_pin_level(PROC_PTT_OUT, LOW);
    72ca:	60 e0       	ldi	r22, 0x00	; 0
    72cc:	80 e0       	ldi	r24, 0x00	; 0
    72ce:	0e 94 7f 35 	call	0x6afe	; 0x6afe <PORTB_set_pin_level>
	
	PORTB_set_pin_dir(PROC_TONE_OUT, PORT_DIR_OUT);
    72d2:	61 e0       	ldi	r22, 0x01	; 1
    72d4:	81 e0       	ldi	r24, 0x01	; 1
    72d6:	0e 94 2b 35 	call	0x6a56	; 0x6a56 <PORTB_set_pin_dir>
	PORTB_set_pin_level(PROC_TONE_OUT, LOW);
    72da:	60 e0       	ldi	r22, 0x00	; 0
    72dc:	81 e0       	ldi	r24, 0x01	; 1
    72de:	0e 94 7f 35 	call	0x6afe	; 0x6afe <PORTB_set_pin_level>
	
	/* PORTB.PIN2 = SDA1 I2C */
	/* PORTB.PIN3 = SCL1 I2C */
	PORTB_set_pin_dir(MAIN_PWR_ENABLE, PORT_DIR_OUT);
    72e2:	61 e0       	ldi	r22, 0x01	; 1
    72e4:	84 e0       	ldi	r24, 0x04	; 4
    72e6:	0e 94 2b 35 	call	0x6a56	; 0x6a56 <PORTB_set_pin_dir>
	PORTB_set_pin_level(MAIN_PWR_ENABLE, LOW);
    72ea:	60 e0       	ldi	r22, 0x00	; 0
    72ec:	84 e0       	ldi	r24, 0x04	; 4
    72ee:	0e 94 7f 35 	call	0x6afe	; 0x6afe <PORTB_set_pin_level>
	
	PORTB_set_pin_dir(TX_FINAL_VOLTAGE_ENABLE, PORT_DIR_OUT);
    72f2:	61 e0       	ldi	r22, 0x01	; 1
    72f4:	85 e0       	ldi	r24, 0x05	; 5
    72f6:	0e 94 2b 35 	call	0x6a56	; 0x6a56 <PORTB_set_pin_dir>
	PORTB_set_pin_level(TX_FINAL_VOLTAGE_ENABLE, LOW);
    72fa:	60 e0       	ldi	r22, 0x00	; 0
    72fc:	85 e0       	ldi	r24, 0x05	; 5
    72fe:	0e 94 7f 35 	call	0x6afe	; 0x6afe <PORTB_set_pin_level>
	/* PORTC.PIN0 = TXD1 USART TO_WIFI_RX */
	/* PORTC.PIN1 = RXD1 USART FROM_WIFI_TX */
	/* PORTC.PIN2 = SDA0 I2C */
	/* PORTC.PIN3 = SCL0 I2C */

	PORTC_set_pin_dir(LED_GREEN, PORT_DIR_OUT);
    7302:	61 e0       	ldi	r22, 0x01	; 1
    7304:	85 e0       	ldi	r24, 0x05	; 5
    7306:	0e 94 0d 36 	call	0x6c1a	; 0x6c1a <PORTC_set_pin_dir>
	PORTC_set_pin_level(LED_GREEN, LOW);
    730a:	60 e0       	ldi	r22, 0x00	; 0
    730c:	85 e0       	ldi	r24, 0x05	; 5
    730e:	0e 94 61 36 	call	0x6cc2	; 0x6cc2 <PORTC_set_pin_level>
	
	PORTC_set_pin_dir(LED_RED, PORT_DIR_OUT);
    7312:	61 e0       	ldi	r22, 0x01	; 1
    7314:	86 e0       	ldi	r24, 0x06	; 6
    7316:	0e 94 0d 36 	call	0x6c1a	; 0x6c1a <PORTC_set_pin_dir>
	PORTC_set_pin_level(LED_RED, LOW);
    731a:	60 e0       	ldi	r22, 0x00	; 0
    731c:	86 e0       	ldi	r24, 0x06	; 6
    731e:	0e 94 61 36 	call	0x6cc2	; 0x6cc2 <PORTC_set_pin_level>
	/* PORTD.PIN3 = ACD3 Audio in TX_BATTERY_VOLTAGE */
	/* PORTD.PIN4 = ACD4 Audio in TX_12_VOLTAGE */
	/* PORTD.PIN5 = ACD5 Audio in TX_PA_VOLTAGE */
	/* PORTD.PIN6 = DAC0 voltage out DAC_OUTPUT */
	
	PORTD_set_pin_dir(WIFI_MODULE_DETECT, PORT_DIR_IN); /* Detect presence of Huzzah module */
    7322:	60 e0       	ldi	r22, 0x00	; 0
    7324:	87 e0       	ldi	r24, 0x07	; 7
    7326:	0e 94 fa 36 	call	0x6df4	; 0x6df4 <PORTD_set_pin_dir>
	PORTD_set_pin_pull_mode(WIFI_MODULE_DETECT, PORT_PULL_OFF);
    732a:	60 e0       	ldi	r22, 0x00	; 0
    732c:	87 e0       	ldi	r24, 0x07	; 7
    732e:	0e 94 a6 36 	call	0x6d4c	; 0x6d4c <PORTD_set_pin_pull_mode>

	/* PORTE *************************************************************************************/
	PORTE_set_pin_dir(0, PORT_DIR_OFF); /* Unused */
    7332:	62 e0       	ldi	r22, 0x02	; 2
    7334:	80 e0       	ldi	r24, 0x00	; 0
    7336:	0e 94 59 37 	call	0x6eb2	; 0x6eb2 <PORTE_set_pin_dir>
	PORTE_set_pin_dir(1, PORT_DIR_OFF); /* Unused */
    733a:	62 e0       	ldi	r22, 0x02	; 2
    733c:	81 e0       	ldi	r24, 0x01	; 1
    733e:	0e 94 59 37 	call	0x6eb2	; 0x6eb2 <PORTE_set_pin_dir>
	PORTE_set_pin_dir(2, PORT_DIR_OFF); /* Unused */
    7342:	62 e0       	ldi	r22, 0x02	; 2
    7344:	82 e0       	ldi	r24, 0x02	; 2
    7346:	0e 94 59 37 	call	0x6eb2	; 0x6eb2 <PORTE_set_pin_dir>
	PORTE_set_pin_dir(3, PORT_DIR_OFF); /* Unused */
    734a:	62 e0       	ldi	r22, 0x02	; 2
    734c:	83 e0       	ldi	r24, 0x03	; 3
    734e:	0e 94 59 37 	call	0x6eb2	; 0x6eb2 <PORTE_set_pin_dir>

	/* PORTF *************************************************************************************/
	PORTF_set_pin_dir(X32KHZ_SQUAREWAVE, PORT_DIR_OFF);
    7352:	62 e0       	ldi	r22, 0x02	; 2
    7354:	80 e0       	ldi	r24, 0x00	; 0
    7356:	0e 94 ad 37 	call	0x6f5a	; 0x6f5a <PORTF_set_pin_dir>
	PORTF_set_pin_dir(1, PORT_DIR_OFF);	/* Unused */
    735a:	62 e0       	ldi	r22, 0x02	; 2
    735c:	81 e0       	ldi	r24, 0x01	; 1
    735e:	0e 94 ad 37 	call	0x6f5a	; 0x6f5a <PORTF_set_pin_dir>
	PORTF_set_pin_dir(2, PORT_DIR_OFF); /* Unused */
    7362:	62 e0       	ldi	r22, 0x02	; 2
    7364:	82 e0       	ldi	r24, 0x02	; 2
    7366:	0e 94 ad 37 	call	0x6f5a	; 0x6f5a <PORTF_set_pin_dir>
	PORTF_set_pin_dir(3, PORT_DIR_OFF); /* Unused */
    736a:	62 e0       	ldi	r22, 0x02	; 2
    736c:	83 e0       	ldi	r24, 0x03	; 3
    736e:	0e 94 ad 37 	call	0x6f5a	; 0x6f5a <PORTF_set_pin_dir>
	PORTF_set_pin_dir(4, PORT_DIR_OFF); /* Unused */
    7372:	62 e0       	ldi	r22, 0x02	; 2
    7374:	84 e0       	ldi	r24, 0x04	; 4
    7376:	0e 94 ad 37 	call	0x6f5a	; 0x6f5a <PORTF_set_pin_dir>
	PORTF_set_pin_dir(5, PORT_DIR_OFF); /* Unused */
    737a:	62 e0       	ldi	r22, 0x02	; 2
    737c:	85 e0       	ldi	r24, 0x05	; 5
    737e:	0e 94 ad 37 	call	0x6f5a	; 0x6f5a <PORTF_set_pin_dir>
	PORTF_set_pin_dir(6, PORT_DIR_OFF); /* Reset */
    7382:	62 e0       	ldi	r22, 0x02	; 2
    7384:	86 e0       	ldi	r24, 0x06	; 6
    7386:	0e 94 ad 37 	call	0x6f5a	; 0x6f5a <PORTF_set_pin_dir>
	
	/* PORT Pin Interrupts */
// 	PORTA.PIN2CTRL = 0x0A; /* Enable RTC SQW 1-sec interrupts */
// 	PORTD.PIN1CTRL = 0x09; /* Enable antenna change interrupts */
}
    738a:	00 00       	nop
    738c:	df 91       	pop	r29
    738e:	cf 91       	pop	r28
    7390:	08 95       	ret

00007392 <BOD_init>:
 * \brief Initialize Brownout Detector
 *
 * \return Initialization status.
 */
int8_t BOD_init()
{
    7392:	cf 93       	push	r28
    7394:	df 93       	push	r29
    7396:	cd b7       	in	r28, 0x3d	; 61
    7398:	de b7       	in	r29, 0x3e	; 62

	// ccp_write_io((void*)&(BOD.CTRLA),BOD_SLEEP_DIS_gc /* Disabled */);

	BOD.INTCTRL = 0 << BOD_VLMIE_bp        /* voltage level monitor interrrupt enable: disabled */
    739a:	80 e8       	ldi	r24, 0x80	; 128
    739c:	90 e0       	ldi	r25, 0x00	; 0
	              | BOD_VLMCFG_FALLING_gc; /* Interrupt when supply goes below VLM level */
    739e:	fc 01       	movw	r30, r24
    73a0:	11 86       	std	Z+9, r1	; 0x09

	// BOD.VLMCTRLA = BOD_VLMLVL_5ABOVE_gc; /* VLM threshold 5% above BOD level */

	return 0;
    73a2:	80 e0       	ldi	r24, 0x00	; 0
}
    73a4:	df 91       	pop	r29
    73a6:	cf 91       	pop	r28
    73a8:	08 95       	ret

000073aa <_ZN18CircularStringBuffC1Ej>:
      size = max_size_ + head_ - tail_;
    }
  }

  return (size);
}
    73aa:	cf 93       	push	r28
    73ac:	df 93       	push	r29
    73ae:	00 d0       	rcall	.+0      	; 0x73b0 <_ZN18CircularStringBuffC1Ej+0x6>
    73b0:	00 d0       	rcall	.+0      	; 0x73b2 <_ZN18CircularStringBuffC1Ej+0x8>
    73b2:	cd b7       	in	r28, 0x3d	; 61
    73b4:	de b7       	in	r29, 0x3e	; 62
    73b6:	89 83       	std	Y+1, r24	; 0x01
    73b8:	9a 83       	std	Y+2, r25	; 0x02
    73ba:	6b 83       	std	Y+3, r22	; 0x03
    73bc:	7c 83       	std	Y+4, r23	; 0x04
    73be:	8b 81       	ldd	r24, Y+3	; 0x03
    73c0:	9c 81       	ldd	r25, Y+4	; 0x04
    73c2:	0e 94 c2 7d 	call	0xfb84	; 0xfb84 <malloc>
    73c6:	9c 01       	movw	r18, r24
    73c8:	89 81       	ldd	r24, Y+1	; 0x01
    73ca:	9a 81       	ldd	r25, Y+2	; 0x02
    73cc:	fc 01       	movw	r30, r24
    73ce:	25 83       	std	Z+5, r18	; 0x05
    73d0:	36 83       	std	Z+6, r19	; 0x06
    73d2:	89 81       	ldd	r24, Y+1	; 0x01
    73d4:	9a 81       	ldd	r25, Y+2	; 0x02
    73d6:	2b 81       	ldd	r18, Y+3	; 0x03
    73d8:	3c 81       	ldd	r19, Y+4	; 0x04
    73da:	fc 01       	movw	r30, r24
    73dc:	27 83       	std	Z+7, r18	; 0x07
    73de:	30 87       	std	Z+8, r19	; 0x08
    73e0:	89 81       	ldd	r24, Y+1	; 0x01
    73e2:	9a 81       	ldd	r25, Y+2	; 0x02
    73e4:	fc 01       	movw	r30, r24
    73e6:	10 82       	st	Z, r1
    73e8:	11 82       	std	Z+1, r1	; 0x01
    73ea:	89 81       	ldd	r24, Y+1	; 0x01
    73ec:	9a 81       	ldd	r25, Y+2	; 0x02
    73ee:	fc 01       	movw	r30, r24
    73f0:	12 82       	std	Z+2, r1	; 0x02
    73f2:	13 82       	std	Z+3, r1	; 0x03
    73f4:	89 81       	ldd	r24, Y+1	; 0x01
    73f6:	9a 81       	ldd	r25, Y+2	; 0x02
    73f8:	fc 01       	movw	r30, r24
    73fa:	14 82       	std	Z+4, r1	; 0x04
    73fc:	89 81       	ldd	r24, Y+1	; 0x01
    73fe:	9a 81       	ldd	r25, Y+2	; 0x02
    7400:	fc 01       	movw	r30, r24
    7402:	11 86       	std	Z+9, r1	; 0x09
    7404:	00 00       	nop
    7406:	24 96       	adiw	r28, 0x04	; 4
    7408:	cd bf       	out	0x3d, r28	; 61
    740a:	de bf       	out	0x3e, r29	; 62
    740c:	df 91       	pop	r29
    740e:	cf 91       	pop	r28
    7410:	08 95       	ret

00007412 <_ZN18CircularStringBuffD1Ev>:
    7412:	cf 93       	push	r28
    7414:	df 93       	push	r29
    7416:	00 d0       	rcall	.+0      	; 0x7418 <_ZN18CircularStringBuffD1Ev+0x6>
    7418:	cd b7       	in	r28, 0x3d	; 61
    741a:	de b7       	in	r29, 0x3e	; 62
    741c:	89 83       	std	Y+1, r24	; 0x01
    741e:	9a 83       	std	Y+2, r25	; 0x02
    7420:	89 81       	ldd	r24, Y+1	; 0x01
    7422:	9a 81       	ldd	r25, Y+2	; 0x02
    7424:	fc 01       	movw	r30, r24
    7426:	85 81       	ldd	r24, Z+5	; 0x05
    7428:	96 81       	ldd	r25, Z+6	; 0x06
    742a:	0e 94 5a 7e 	call	0xfcb4	; 0xfcb4 <free>
    742e:	00 00       	nop
    7430:	0f 90       	pop	r0
    7432:	0f 90       	pop	r0
    7434:	df 91       	pop	r29
    7436:	cf 91       	pop	r28
    7438:	08 95       	ret

0000743a <_ZN18CircularStringBuff5resetEv>:
    743a:	cf 93       	push	r28
    743c:	df 93       	push	r29
    743e:	00 d0       	rcall	.+0      	; 0x7440 <_ZN18CircularStringBuff5resetEv+0x6>
    7440:	cd b7       	in	r28, 0x3d	; 61
    7442:	de b7       	in	r29, 0x3e	; 62
    7444:	89 83       	std	Y+1, r24	; 0x01
    7446:	9a 83       	std	Y+2, r25	; 0x02
    7448:	89 81       	ldd	r24, Y+1	; 0x01
    744a:	9a 81       	ldd	r25, Y+2	; 0x02
    744c:	fc 01       	movw	r30, r24
    744e:	22 81       	ldd	r18, Z+2	; 0x02
    7450:	33 81       	ldd	r19, Z+3	; 0x03
    7452:	89 81       	ldd	r24, Y+1	; 0x01
    7454:	9a 81       	ldd	r25, Y+2	; 0x02
    7456:	fc 01       	movw	r30, r24
    7458:	20 83       	st	Z, r18
    745a:	31 83       	std	Z+1, r19	; 0x01
    745c:	89 81       	ldd	r24, Y+1	; 0x01
    745e:	9a 81       	ldd	r25, Y+2	; 0x02
    7460:	fc 01       	movw	r30, r24
    7462:	14 82       	std	Z+4, r1	; 0x04
    7464:	89 81       	ldd	r24, Y+1	; 0x01
    7466:	9a 81       	ldd	r25, Y+2	; 0x02
    7468:	fc 01       	movw	r30, r24
    746a:	11 86       	std	Z+9, r1	; 0x09
    746c:	00 00       	nop
    746e:	0f 90       	pop	r0
    7470:	0f 90       	pop	r0
    7472:	df 91       	pop	r29
    7474:	cf 91       	pop	r28
    7476:	08 95       	ret

00007478 <_ZNK18CircularStringBuff5emptyEv>:
    7478:	cf 93       	push	r28
    747a:	df 93       	push	r29
    747c:	00 d0       	rcall	.+0      	; 0x747e <_ZNK18CircularStringBuff5emptyEv+0x6>
    747e:	cd b7       	in	r28, 0x3d	; 61
    7480:	de b7       	in	r29, 0x3e	; 62
    7482:	89 83       	std	Y+1, r24	; 0x01
    7484:	9a 83       	std	Y+2, r25	; 0x02
    7486:	89 81       	ldd	r24, Y+1	; 0x01
    7488:	9a 81       	ldd	r25, Y+2	; 0x02
    748a:	fc 01       	movw	r30, r24
    748c:	94 81       	ldd	r25, Z+4	; 0x04
    748e:	81 e0       	ldi	r24, 0x01	; 1
    7490:	89 27       	eor	r24, r25
    7492:	88 23       	and	r24, r24
    7494:	79 f0       	breq	.+30     	; 0x74b4 <_ZNK18CircularStringBuff5emptyEv+0x3c>
    7496:	89 81       	ldd	r24, Y+1	; 0x01
    7498:	9a 81       	ldd	r25, Y+2	; 0x02
    749a:	fc 01       	movw	r30, r24
    749c:	20 81       	ld	r18, Z
    749e:	31 81       	ldd	r19, Z+1	; 0x01
    74a0:	89 81       	ldd	r24, Y+1	; 0x01
    74a2:	9a 81       	ldd	r25, Y+2	; 0x02
    74a4:	fc 01       	movw	r30, r24
    74a6:	82 81       	ldd	r24, Z+2	; 0x02
    74a8:	93 81       	ldd	r25, Z+3	; 0x03
    74aa:	28 17       	cp	r18, r24
    74ac:	39 07       	cpc	r19, r25
    74ae:	11 f4       	brne	.+4      	; 0x74b4 <_ZNK18CircularStringBuff5emptyEv+0x3c>
    74b0:	81 e0       	ldi	r24, 0x01	; 1
    74b2:	01 c0       	rjmp	.+2      	; 0x74b6 <_ZNK18CircularStringBuff5emptyEv+0x3e>
    74b4:	80 e0       	ldi	r24, 0x00	; 0
    74b6:	0f 90       	pop	r0
    74b8:	0f 90       	pop	r0
    74ba:	df 91       	pop	r29
    74bc:	cf 91       	pop	r28
    74be:	08 95       	ret

000074c0 <_ZN18CircularStringBuff7setBusyEb>:
    74c0:	cf 93       	push	r28
    74c2:	df 93       	push	r29
    74c4:	00 d0       	rcall	.+0      	; 0x74c6 <_ZN18CircularStringBuff7setBusyEb+0x6>
    74c6:	1f 92       	push	r1
    74c8:	cd b7       	in	r28, 0x3d	; 61
    74ca:	de b7       	in	r29, 0x3e	; 62
    74cc:	89 83       	std	Y+1, r24	; 0x01
    74ce:	9a 83       	std	Y+2, r25	; 0x02
    74d0:	6b 83       	std	Y+3, r22	; 0x03
    74d2:	8b 81       	ldd	r24, Y+3	; 0x03
    74d4:	88 23       	and	r24, r24
    74d6:	31 f0       	breq	.+12     	; 0x74e4 <_ZN18CircularStringBuff7setBusyEb+0x24>
    74d8:	89 81       	ldd	r24, Y+1	; 0x01
    74da:	9a 81       	ldd	r25, Y+2	; 0x02
    74dc:	21 e0       	ldi	r18, 0x01	; 1
    74de:	fc 01       	movw	r30, r24
    74e0:	21 87       	std	Z+9, r18	; 0x09
    74e2:	04 c0       	rjmp	.+8      	; 0x74ec <_ZN18CircularStringBuff7setBusyEb+0x2c>
    74e4:	89 81       	ldd	r24, Y+1	; 0x01
    74e6:	9a 81       	ldd	r25, Y+2	; 0x02
    74e8:	fc 01       	movw	r30, r24
    74ea:	11 86       	std	Z+9, r1	; 0x09
    74ec:	00 00       	nop
    74ee:	23 96       	adiw	r28, 0x03	; 3
    74f0:	cd bf       	out	0x3d, r28	; 61
    74f2:	de bf       	out	0x3e, r29	; 62
    74f4:	df 91       	pop	r29
    74f6:	cf 91       	pop	r28
    74f8:	08 95       	ret

000074fa <_ZN18CircularStringBuff6isBusyEv>:
    74fa:	cf 93       	push	r28
    74fc:	df 93       	push	r29
    74fe:	00 d0       	rcall	.+0      	; 0x7500 <_ZN18CircularStringBuff6isBusyEv+0x6>
    7500:	cd b7       	in	r28, 0x3d	; 61
    7502:	de b7       	in	r29, 0x3e	; 62
    7504:	89 83       	std	Y+1, r24	; 0x01
    7506:	9a 83       	std	Y+2, r25	; 0x02
    7508:	89 81       	ldd	r24, Y+1	; 0x01
    750a:	9a 81       	ldd	r25, Y+2	; 0x02
    750c:	fc 01       	movw	r30, r24
    750e:	81 85       	ldd	r24, Z+9	; 0x09
    7510:	0f 90       	pop	r0
    7512:	0f 90       	pop	r0
    7514:	df 91       	pop	r29
    7516:	cf 91       	pop	r28
    7518:	08 95       	ret

0000751a <_ZNK18CircularStringBuff4fullEv>:
    751a:	cf 93       	push	r28
    751c:	df 93       	push	r29
    751e:	00 d0       	rcall	.+0      	; 0x7520 <_ZNK18CircularStringBuff4fullEv+0x6>
    7520:	cd b7       	in	r28, 0x3d	; 61
    7522:	de b7       	in	r29, 0x3e	; 62
    7524:	89 83       	std	Y+1, r24	; 0x01
    7526:	9a 83       	std	Y+2, r25	; 0x02
    7528:	89 81       	ldd	r24, Y+1	; 0x01
    752a:	9a 81       	ldd	r25, Y+2	; 0x02
    752c:	fc 01       	movw	r30, r24
    752e:	84 81       	ldd	r24, Z+4	; 0x04
    7530:	0f 90       	pop	r0
    7532:	0f 90       	pop	r0
    7534:	df 91       	pop	r29
    7536:	cf 91       	pop	r28
    7538:	08 95       	ret

0000753a <_ZN18CircularStringBuff3putEc>:

/** 
 * Place another item in the buffer
 */
void CircularStringBuff::put(char item)
{
    753a:	0f 93       	push	r16
    753c:	1f 93       	push	r17
    753e:	cf 93       	push	r28
    7540:	df 93       	push	r29
    7542:	00 d0       	rcall	.+0      	; 0x7544 <_ZN18CircularStringBuff3putEc+0xa>
    7544:	1f 92       	push	r1
    7546:	cd b7       	in	r28, 0x3d	; 61
    7548:	de b7       	in	r29, 0x3e	; 62
    754a:	89 83       	std	Y+1, r24	; 0x01
    754c:	9a 83       	std	Y+2, r25	; 0x02
    754e:	6b 83       	std	Y+3, r22	; 0x03
  buf_[head_] = toupper(item);
    7550:	89 81       	ldd	r24, Y+1	; 0x01
    7552:	9a 81       	ldd	r25, Y+2	; 0x02
    7554:	fc 01       	movw	r30, r24
    7556:	85 81       	ldd	r24, Z+5	; 0x05
    7558:	96 81       	ldd	r25, Z+6	; 0x06
    755a:	29 81       	ldd	r18, Y+1	; 0x01
    755c:	3a 81       	ldd	r19, Y+2	; 0x02
    755e:	f9 01       	movw	r30, r18
    7560:	20 81       	ld	r18, Z
    7562:	31 81       	ldd	r19, Z+1	; 0x01
    7564:	8c 01       	movw	r16, r24
    7566:	02 0f       	add	r16, r18
    7568:	13 1f       	adc	r17, r19
    756a:	8b 81       	ldd	r24, Y+3	; 0x03
    756c:	88 2f       	mov	r24, r24
    756e:	90 e0       	ldi	r25, 0x00	; 0
    7570:	0e 94 31 7f 	call	0xfe62	; 0xfe62 <toupper>
    7574:	f8 01       	movw	r30, r16
    7576:	80 83       	st	Z, r24

  if (full_)
    7578:	89 81       	ldd	r24, Y+1	; 0x01
    757a:	9a 81       	ldd	r25, Y+2	; 0x02
    757c:	fc 01       	movw	r30, r24
    757e:	84 81       	ldd	r24, Z+4	; 0x04
    7580:	88 23       	and	r24, r24
    7582:	b1 f0       	breq	.+44     	; 0x75b0 <_ZN18CircularStringBuff3putEc+0x76>
  {
    tail_ = (tail_ + 1) % max_size_;
    7584:	89 81       	ldd	r24, Y+1	; 0x01
    7586:	9a 81       	ldd	r25, Y+2	; 0x02
    7588:	fc 01       	movw	r30, r24
    758a:	82 81       	ldd	r24, Z+2	; 0x02
    758c:	93 81       	ldd	r25, Z+3	; 0x03
    758e:	01 96       	adiw	r24, 0x01	; 1
    7590:	ac 01       	movw	r20, r24
    7592:	89 81       	ldd	r24, Y+1	; 0x01
    7594:	9a 81       	ldd	r25, Y+2	; 0x02
    7596:	fc 01       	movw	r30, r24
    7598:	27 81       	ldd	r18, Z+7	; 0x07
    759a:	30 85       	ldd	r19, Z+8	; 0x08
    759c:	ca 01       	movw	r24, r20
    759e:	b9 01       	movw	r22, r18
    75a0:	0e 94 16 7d 	call	0xfa2c	; 0xfa2c <__udivmodhi4>
    75a4:	9c 01       	movw	r18, r24
    75a6:	89 81       	ldd	r24, Y+1	; 0x01
    75a8:	9a 81       	ldd	r25, Y+2	; 0x02
    75aa:	fc 01       	movw	r30, r24
    75ac:	22 83       	std	Z+2, r18	; 0x02
    75ae:	33 83       	std	Z+3, r19	; 0x03
  }

  head_ = (head_ + 1) % max_size_;
    75b0:	89 81       	ldd	r24, Y+1	; 0x01
    75b2:	9a 81       	ldd	r25, Y+2	; 0x02
    75b4:	fc 01       	movw	r30, r24
    75b6:	80 81       	ld	r24, Z
    75b8:	91 81       	ldd	r25, Z+1	; 0x01
    75ba:	01 96       	adiw	r24, 0x01	; 1
    75bc:	ac 01       	movw	r20, r24
    75be:	89 81       	ldd	r24, Y+1	; 0x01
    75c0:	9a 81       	ldd	r25, Y+2	; 0x02
    75c2:	fc 01       	movw	r30, r24
    75c4:	27 81       	ldd	r18, Z+7	; 0x07
    75c6:	30 85       	ldd	r19, Z+8	; 0x08
    75c8:	ca 01       	movw	r24, r20
    75ca:	b9 01       	movw	r22, r18
    75cc:	0e 94 16 7d 	call	0xfa2c	; 0xfa2c <__udivmodhi4>
    75d0:	9c 01       	movw	r18, r24
    75d2:	89 81       	ldd	r24, Y+1	; 0x01
    75d4:	9a 81       	ldd	r25, Y+2	; 0x02
    75d6:	fc 01       	movw	r30, r24
    75d8:	20 83       	st	Z, r18
    75da:	31 83       	std	Z+1, r19	; 0x01

  full_ = head_ == tail_;
    75dc:	89 81       	ldd	r24, Y+1	; 0x01
    75de:	9a 81       	ldd	r25, Y+2	; 0x02
    75e0:	fc 01       	movw	r30, r24
    75e2:	20 81       	ld	r18, Z
    75e4:	31 81       	ldd	r19, Z+1	; 0x01
    75e6:	89 81       	ldd	r24, Y+1	; 0x01
    75e8:	9a 81       	ldd	r25, Y+2	; 0x02
    75ea:	fc 01       	movw	r30, r24
    75ec:	82 81       	ldd	r24, Z+2	; 0x02
    75ee:	93 81       	ldd	r25, Z+3	; 0x03
    75f0:	41 e0       	ldi	r20, 0x01	; 1
    75f2:	28 17       	cp	r18, r24
    75f4:	39 07       	cpc	r19, r25
    75f6:	09 f0       	breq	.+2      	; 0x75fa <_ZN18CircularStringBuff3putEc+0xc0>
    75f8:	40 e0       	ldi	r20, 0x00	; 0
    75fa:	89 81       	ldd	r24, Y+1	; 0x01
    75fc:	9a 81       	ldd	r25, Y+2	; 0x02
    75fe:	fc 01       	movw	r30, r24
    7600:	44 83       	std	Z+4, r20	; 0x04
}
    7602:	00 00       	nop
    7604:	23 96       	adiw	r28, 0x03	; 3
    7606:	cd bf       	out	0x3d, r28	; 61
    7608:	de bf       	out	0x3e, r29	; 62
    760a:	df 91       	pop	r29
    760c:	cf 91       	pop	r28
    760e:	1f 91       	pop	r17
    7610:	0f 91       	pop	r16
    7612:	08 95       	ret

00007614 <_ZN18CircularStringBuff3popEv>:

/** 
 * Return the last put item and remove it from the buffer
 */
char CircularStringBuff::pop()
{
    7614:	cf 93       	push	r28
    7616:	df 93       	push	r29
    7618:	00 d0       	rcall	.+0      	; 0x761a <_ZN18CircularStringBuff3popEv+0x6>
    761a:	1f 92       	push	r1
    761c:	cd b7       	in	r28, 0x3d	; 61
    761e:	de b7       	in	r29, 0x3e	; 62
    7620:	8a 83       	std	Y+2, r24	; 0x02
    7622:	9b 83       	std	Y+3, r25	; 0x03
  if (empty())
    7624:	8a 81       	ldd	r24, Y+2	; 0x02
    7626:	9b 81       	ldd	r25, Y+3	; 0x03
    7628:	0e 94 3c 3a 	call	0x7478	; 0x7478 <_ZNK18CircularStringBuff5emptyEv>
    762c:	88 23       	and	r24, r24
    762e:	11 f0       	breq	.+4      	; 0x7634 <_ZN18CircularStringBuff3popEv+0x20>
  {
	  return ('\0');
    7630:	80 e0       	ldi	r24, 0x00	; 0
    7632:	35 c0       	rjmp	.+106    	; 0x769e <_ZN18CircularStringBuff3popEv+0x8a>
  }

  /*Read data and decrement the head (we now have one more free space) */
  char val = buf_[head_];
    7634:	8a 81       	ldd	r24, Y+2	; 0x02
    7636:	9b 81       	ldd	r25, Y+3	; 0x03
    7638:	fc 01       	movw	r30, r24
    763a:	85 81       	ldd	r24, Z+5	; 0x05
    763c:	96 81       	ldd	r25, Z+6	; 0x06
    763e:	2a 81       	ldd	r18, Y+2	; 0x02
    7640:	3b 81       	ldd	r19, Y+3	; 0x03
    7642:	f9 01       	movw	r30, r18
    7644:	20 81       	ld	r18, Z
    7646:	31 81       	ldd	r19, Z+1	; 0x01
    7648:	82 0f       	add	r24, r18
    764a:	93 1f       	adc	r25, r19
    764c:	fc 01       	movw	r30, r24
    764e:	80 81       	ld	r24, Z
    7650:	89 83       	std	Y+1, r24	; 0x01
  if(head_) 
    7652:	8a 81       	ldd	r24, Y+2	; 0x02
    7654:	9b 81       	ldd	r25, Y+3	; 0x03
    7656:	fc 01       	movw	r30, r24
    7658:	80 81       	ld	r24, Z
    765a:	91 81       	ldd	r25, Z+1	; 0x01
    765c:	89 2b       	or	r24, r25
    765e:	71 f0       	breq	.+28     	; 0x767c <_ZN18CircularStringBuff3popEv+0x68>
  {
	  head_--;
    7660:	8a 81       	ldd	r24, Y+2	; 0x02
    7662:	9b 81       	ldd	r25, Y+3	; 0x03
    7664:	fc 01       	movw	r30, r24
    7666:	80 81       	ld	r24, Z
    7668:	91 81       	ldd	r25, Z+1	; 0x01
    766a:	9c 01       	movw	r18, r24
    766c:	21 50       	subi	r18, 0x01	; 1
    766e:	31 09       	sbc	r19, r1
    7670:	8a 81       	ldd	r24, Y+2	; 0x02
    7672:	9b 81       	ldd	r25, Y+3	; 0x03
    7674:	fc 01       	movw	r30, r24
    7676:	20 83       	st	Z, r18
    7678:	31 83       	std	Z+1, r19	; 0x01
    767a:	0c c0       	rjmp	.+24     	; 0x7694 <_ZN18CircularStringBuff3popEv+0x80>
  }
  else
  {
	  head_ = (max_size_-1);
    767c:	8a 81       	ldd	r24, Y+2	; 0x02
    767e:	9b 81       	ldd	r25, Y+3	; 0x03
    7680:	fc 01       	movw	r30, r24
    7682:	87 81       	ldd	r24, Z+7	; 0x07
    7684:	90 85       	ldd	r25, Z+8	; 0x08
    7686:	01 97       	sbiw	r24, 0x01	; 1
    7688:	9c 01       	movw	r18, r24
    768a:	8a 81       	ldd	r24, Y+2	; 0x02
    768c:	9b 81       	ldd	r25, Y+3	; 0x03
    768e:	fc 01       	movw	r30, r24
    7690:	20 83       	st	Z, r18
    7692:	31 83       	std	Z+1, r19	; 0x01
  }
  
  full_ = false;
    7694:	8a 81       	ldd	r24, Y+2	; 0x02
    7696:	9b 81       	ldd	r25, Y+3	; 0x03
    7698:	fc 01       	movw	r30, r24
    769a:	14 82       	std	Z+4, r1	; 0x04

  return (val);
    769c:	89 81       	ldd	r24, Y+1	; 0x01
}
    769e:	23 96       	adiw	r28, 0x03	; 3
    76a0:	cd bf       	out	0x3d, r28	; 61
    76a2:	de bf       	out	0x3e, r29	; 62
    76a4:	df 91       	pop	r29
    76a6:	cf 91       	pop	r28
    76a8:	08 95       	ret

000076aa <_ZN18CircularStringBuff3getEv>:

/** 
 * Return the FIFO entry and delete it from the buffer
 */
char CircularStringBuff::get()
{
    76aa:	cf 93       	push	r28
    76ac:	df 93       	push	r29
    76ae:	00 d0       	rcall	.+0      	; 0x76b0 <_ZN18CircularStringBuff3getEv+0x6>
    76b0:	1f 92       	push	r1
    76b2:	cd b7       	in	r28, 0x3d	; 61
    76b4:	de b7       	in	r29, 0x3e	; 62
    76b6:	8a 83       	std	Y+2, r24	; 0x02
    76b8:	9b 83       	std	Y+3, r25	; 0x03
  if (empty())
    76ba:	8a 81       	ldd	r24, Y+2	; 0x02
    76bc:	9b 81       	ldd	r25, Y+3	; 0x03
    76be:	0e 94 3c 3a 	call	0x7478	; 0x7478 <_ZNK18CircularStringBuff5emptyEv>
    76c2:	88 23       	and	r24, r24
    76c4:	11 f0       	breq	.+4      	; 0x76ca <_ZN18CircularStringBuff3getEv+0x20>
  {
    return ('\0');
    76c6:	80 e0       	ldi	r24, 0x00	; 0
    76c8:	2a c0       	rjmp	.+84     	; 0x771e <_ZN18CircularStringBuff3getEv+0x74>
  }

  /*Read data and advance the tail (we now have a free space) */
  char val = buf_[tail_];
    76ca:	8a 81       	ldd	r24, Y+2	; 0x02
    76cc:	9b 81       	ldd	r25, Y+3	; 0x03
    76ce:	fc 01       	movw	r30, r24
    76d0:	85 81       	ldd	r24, Z+5	; 0x05
    76d2:	96 81       	ldd	r25, Z+6	; 0x06
    76d4:	2a 81       	ldd	r18, Y+2	; 0x02
    76d6:	3b 81       	ldd	r19, Y+3	; 0x03
    76d8:	f9 01       	movw	r30, r18
    76da:	22 81       	ldd	r18, Z+2	; 0x02
    76dc:	33 81       	ldd	r19, Z+3	; 0x03
    76de:	82 0f       	add	r24, r18
    76e0:	93 1f       	adc	r25, r19
    76e2:	fc 01       	movw	r30, r24
    76e4:	80 81       	ld	r24, Z
    76e6:	89 83       	std	Y+1, r24	; 0x01
  full_ = false;
    76e8:	8a 81       	ldd	r24, Y+2	; 0x02
    76ea:	9b 81       	ldd	r25, Y+3	; 0x03
    76ec:	fc 01       	movw	r30, r24
    76ee:	14 82       	std	Z+4, r1	; 0x04
  tail_ = (tail_ + 1) % max_size_;
    76f0:	8a 81       	ldd	r24, Y+2	; 0x02
    76f2:	9b 81       	ldd	r25, Y+3	; 0x03
    76f4:	fc 01       	movw	r30, r24
    76f6:	82 81       	ldd	r24, Z+2	; 0x02
    76f8:	93 81       	ldd	r25, Z+3	; 0x03
    76fa:	01 96       	adiw	r24, 0x01	; 1
    76fc:	ac 01       	movw	r20, r24
    76fe:	8a 81       	ldd	r24, Y+2	; 0x02
    7700:	9b 81       	ldd	r25, Y+3	; 0x03
    7702:	fc 01       	movw	r30, r24
    7704:	27 81       	ldd	r18, Z+7	; 0x07
    7706:	30 85       	ldd	r19, Z+8	; 0x08
    7708:	ca 01       	movw	r24, r20
    770a:	b9 01       	movw	r22, r18
    770c:	0e 94 16 7d 	call	0xfa2c	; 0xfa2c <__udivmodhi4>
    7710:	9c 01       	movw	r18, r24
    7712:	8a 81       	ldd	r24, Y+2	; 0x02
    7714:	9b 81       	ldd	r25, Y+3	; 0x03
    7716:	fc 01       	movw	r30, r24
    7718:	22 83       	std	Z+2, r18	; 0x02
    771a:	33 83       	std	Z+3, r19	; 0x03

  return (val);
    771c:	89 81       	ldd	r24, Y+1	; 0x01
}
    771e:	23 96       	adiw	r28, 0x03	; 3
    7720:	cd bf       	out	0x3d, r28	; 61
    7722:	de bf       	out	0x3e, r29	; 62
    7724:	df 91       	pop	r29
    7726:	cf 91       	pop	r28
    7728:	08 95       	ret

0000772a <ccp_write_io>:
 * \note Using IAR Embedded workbench, the choice of memory model has an impact
 *       on calling convention. The memory model is not visible to the
 *       preprocessor, so it must be defined in the Assembler preprocessor directives.
 */
static inline void ccp_write_io(void *addr, uint8_t value)
{
    772a:	cf 93       	push	r28
    772c:	df 93       	push	r29
    772e:	00 d0       	rcall	.+0      	; 0x7730 <ccp_write_io+0x6>
    7730:	1f 92       	push	r1
    7732:	cd b7       	in	r28, 0x3d	; 61
    7734:	de b7       	in	r29, 0x3e	; 62
    7736:	89 83       	std	Y+1, r24	; 0x01
    7738:	9a 83       	std	Y+2, r25	; 0x02
    773a:	6b 83       	std	Y+3, r22	; 0x03
	protected_write_io(addr, CCP_IOREG_gc, value);
    773c:	89 81       	ldd	r24, Y+1	; 0x01
    773e:	9a 81       	ldd	r25, Y+2	; 0x02
    7740:	4b 81       	ldd	r20, Y+3	; 0x03
    7742:	68 ed       	ldi	r22, 0xD8	; 216
    7744:	0e 94 85 63 	call	0xc70a	; 0xc70a <protected_write_io>
}
    7748:	00 00       	nop
    774a:	23 96       	adiw	r28, 0x03	; 3
    774c:	cd bf       	out	0x3d, r28	; 61
    774e:	de bf       	out	0x3e, r29	; 62
    7750:	df 91       	pop	r29
    7752:	cf 91       	pop	r28
    7754:	08 95       	ret

00007756 <CLKCTRL_init>:
 * \brief Initialize clkctrl interface
 *
 * \return Initialization status.
 */
int8_t CLKCTRL_init()
{
    7756:	cf 93       	push	r28
    7758:	df 93       	push	r29
    775a:	cd b7       	in	r28, 0x3d	; 61
    775c:	de b7       	in	r29, 0x3e	; 62
	//		 | CLKCTRL_MULFAC_DISABLE_gc /* 1 */
	//		 | 0 << CLKCTRL_SOURCE_bp /* Select Source for PLL: disabled */);

	ccp_write_io((void*)&(CLKCTRL.OSCHFCTRLA),CLKCTRL_FRQSEL_24M_gc /* 4 */
			 | 0 << CLKCTRL_AUTOTUNE_bp /* Auto-Tune enable: disabled */
			 | 0 << CLKCTRL_RUNSTDBY_bp /* Run standby: disabled */);
    775e:	64 e2       	ldi	r22, 0x24	; 36
    7760:	88 e6       	ldi	r24, 0x68	; 104
    7762:	90 e0       	ldi	r25, 0x00	; 0
    7764:	0e 94 95 3b 	call	0x772a	; 0x772a <ccp_write_io>
	// ccp_write_io((void*)&(CLKCTRL.MCLKCTRLA),CLKCTRL_CLKSEL_OSCHF_gc /* Internal high-frequency oscillator */
	//		 | 0 << CLKCTRL_CLKOUT_bp /* System clock out: disabled */);

	// ccp_write_io((void*)&(CLKCTRL.MCLKLOCK),0 << CLKCTRL_LOCKEN_bp /* lock enable: disabled */);

	return 0;
    7768:	80 e0       	ldi	r24, 0x00	; 0
}
    776a:	df 91       	pop	r29
    776c:	cf 91       	pop	r28
    776e:	08 95       	ret

00007770 <CPUINT_init>:
 * \brief Initialize cpuint interface
 *
 * \return Initialization status
 */
int8_t CPUINT_init()
{
    7770:	cf 93       	push	r28
    7772:	df 93       	push	r29
    7774:	cd b7       	in	r28, 0x3d	; 61
    7776:	de b7       	in	r29, 0x3e	; 62

	// CPUINT.LVL0PRI = 0x0 << CPUINT_LVL0PRI_gp; /* Interrupt Level Priority: 0x0 */

	// CPUINT.LVL1VEC = 0x0 << CPUINT_LVL1VEC_gp; /* Interrupt Vector with High Priority: 0x0 */

	ENABLE_INTERRUPTS();
    7778:	78 94       	sei

	return 0;
    777a:	80 e0       	ldi	r24, 0x00	; 0
}
    777c:	df 91       	pop	r29
    777e:	cf 91       	pop	r28
    7780:	08 95       	ret

00007782 <_ZL9VREF_initv>:
#define LSB_MASK                 (0x03)



static void VREF_init(void)
{
    7782:	cf 93       	push	r28
    7784:	df 93       	push	r29
    7786:	cd b7       	in	r28, 0x3d	; 61
    7788:	de b7       	in	r29, 0x3e	; 62
//	VREF.DAC0REF = VREF_REFSEL_VDD_gc; /* Select the 2.048V Internal Voltage Reference for DAC */
//	VREF.DAC0REF = VREF_REFSEL_2V048_gc; /* Select the 2.048V Internal Voltage Reference for DAC */
	VREF.DAC0REF = VREF_REFSEL_2V500_gc; /* Select the 2.500V Internal Voltage Reference for DAC */
    778a:	80 ea       	ldi	r24, 0xA0	; 160
    778c:	90 e0       	ldi	r25, 0x00	; 0
    778e:	23 e0       	ldi	r18, 0x03	; 3
    7790:	fc 01       	movw	r30, r24
    7792:	22 83       	std	Z+2, r18	; 0x02
//	| VREF_ALWAYSON_bm;    /* Set the Voltage Reference in Always On mode */
//	VREF.DAC0REF = VREF_REFSEL_2V500_gc; /* Select the 2.048V Internal Voltage Reference for DAC */
	/* Wait VREF start-up time */
	while(util_delay_ms(VREF_STARTUP_TIME_MS));
    7794:	6a e0       	ldi	r22, 0x0A	; 10
    7796:	70 e0       	ldi	r23, 0x00	; 0
    7798:	80 e0       	ldi	r24, 0x00	; 0
    779a:	90 e0       	ldi	r25, 0x00	; 0
    779c:	0e 94 c9 72 	call	0xe592	; 0xe592 <util_delay_ms>
    77a0:	88 23       	and	r24, r24
    77a2:	09 f0       	breq	.+2      	; 0x77a6 <_ZL9VREF_initv+0x24>
    77a4:	f7 cf       	rjmp	.-18     	; 0x7794 <_ZL9VREF_initv+0x12>
}
    77a6:	00 00       	nop
    77a8:	df 91       	pop	r29
    77aa:	cf 91       	pop	r28
    77ac:	08 95       	ret

000077ae <_Z9DAC0_initv>:

void DAC0_init(void)
{
    77ae:	cf 93       	push	r28
    77b0:	df 93       	push	r29
    77b2:	cd b7       	in	r28, 0x3d	; 61
    77b4:	de b7       	in	r29, 0x3e	; 62
	VREF_init();
    77b6:	0e 94 c1 3b 	call	0x7782	; 0x7782 <_ZL9VREF_initv>
	
    /* Disable digital input buffer */
    PORTD.PIN6CTRL &= ~PORT_ISC_gm;
    77ba:	80 e6       	ldi	r24, 0x60	; 96
    77bc:	94 e0       	ldi	r25, 0x04	; 4
    77be:	20 e6       	ldi	r18, 0x60	; 96
    77c0:	34 e0       	ldi	r19, 0x04	; 4
    77c2:	f9 01       	movw	r30, r18
    77c4:	26 89       	ldd	r18, Z+22	; 0x16
    77c6:	28 7f       	andi	r18, 0xF8	; 248
    77c8:	fc 01       	movw	r30, r24
    77ca:	26 8b       	std	Z+22, r18	; 0x16
    PORTD.PIN6CTRL |= PORT_ISC_INPUT_DISABLE_gc;
    77cc:	80 e6       	ldi	r24, 0x60	; 96
    77ce:	94 e0       	ldi	r25, 0x04	; 4
    77d0:	20 e6       	ldi	r18, 0x60	; 96
    77d2:	34 e0       	ldi	r19, 0x04	; 4
    77d4:	f9 01       	movw	r30, r18
    77d6:	26 89       	ldd	r18, Z+22	; 0x16
    77d8:	24 60       	ori	r18, 0x04	; 4
    77da:	fc 01       	movw	r30, r24
    77dc:	26 8b       	std	Z+22, r18	; 0x16
    /* Disable pull-up resistor */
    PORTD.PIN6CTRL &= ~PORT_PULLUPEN_bm;   
    77de:	80 e6       	ldi	r24, 0x60	; 96
    77e0:	94 e0       	ldi	r25, 0x04	; 4
    77e2:	20 e6       	ldi	r18, 0x60	; 96
    77e4:	34 e0       	ldi	r19, 0x04	; 4
    77e6:	f9 01       	movw	r30, r18
    77e8:	26 89       	ldd	r18, Z+22	; 0x16
    77ea:	27 7f       	andi	r18, 0xF7	; 247
    77ec:	fc 01       	movw	r30, r24
    77ee:	26 8b       	std	Z+22, r18	; 0x16
    DAC0.CTRLA = DAC_ENABLE_bm          /* Enable DAC */
    77f0:	80 ea       	ldi	r24, 0xA0	; 160
    77f2:	96 e0       	ldi	r25, 0x06	; 6
               | DAC_OUTEN_bm           /* Enable output buffer */
               | DAC_RUNSTDBY_bm;       /* Enable Run in Standby mode */
    77f4:	21 ec       	ldi	r18, 0xC1	; 193
    77f6:	fc 01       	movw	r30, r24
    77f8:	20 83       	st	Z, r18
// 	PORTD.PIN6CTRL &= ~PORT_PULLUPEN_bm;
// 	DAC0.CTRLA = DAC_ENABLE_bm          /* Enable DAC */
// 	| DAC_OUTEN_bm;           /* Enable output buffer */
// 	
// 	DAC0_setVal(DAC_DEFAULT_VALUE);
}
    77fa:	00 00       	nop
    77fc:	df 91       	pop	r29
    77fe:	cf 91       	pop	r28
    7800:	08 95       	ret

00007802 <_Z11DAC0_setValj>:

void DAC0_setVal(uint16_t value)
{
    7802:	cf 93       	push	r28
    7804:	df 93       	push	r29
    7806:	00 d0       	rcall	.+0      	; 0x7808 <_Z11DAC0_setValj+0x6>
    7808:	cd b7       	in	r28, 0x3d	; 61
    780a:	de b7       	in	r29, 0x3e	; 62
    780c:	89 83       	std	Y+1, r24	; 0x01
    780e:	9a 83       	std	Y+2, r25	; 0x02
	/* Store the two LSbs in DAC0.DATAL */
	DAC0.DATAL = (value & LSB_MASK) << 6;
    7810:	80 ea       	ldi	r24, 0xA0	; 160
    7812:	96 e0       	ldi	r25, 0x06	; 6
    7814:	29 81       	ldd	r18, Y+1	; 0x01
    7816:	22 95       	swap	r18
    7818:	22 0f       	add	r18, r18
    781a:	22 0f       	add	r18, r18
    781c:	20 7c       	andi	r18, 0xC0	; 192
    781e:	fc 01       	movw	r30, r24
    7820:	22 83       	std	Z+2, r18	; 0x02
	/* Store the eight MSbs in DAC0.DATAH */
	DAC0.DATAH = value >> 2;
    7822:	80 ea       	ldi	r24, 0xA0	; 160
    7824:	96 e0       	ldi	r25, 0x06	; 6
    7826:	29 81       	ldd	r18, Y+1	; 0x01
    7828:	3a 81       	ldd	r19, Y+2	; 0x02
    782a:	36 95       	lsr	r19
    782c:	27 95       	ror	r18
    782e:	36 95       	lsr	r19
    7830:	27 95       	ror	r18
    7832:	fc 01       	movw	r30, r24
    7834:	23 83       	std	Z+3, r18	; 0x03
}
    7836:	00 00       	nop
    7838:	0f 90       	pop	r0
    783a:	0f 90       	pop	r0
    783c:	df 91       	pop	r29
    783e:	cf 91       	pop	r28
    7840:	08 95       	ret

00007842 <PORTC_set_pin_dir>:
 *                      PORT_DIR_OUT = Data direction out
 *                      PORT_DIR_OFF = Disables the pin
 *                      (low power state)
 */
static inline void PORTC_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
    7842:	cf 93       	push	r28
    7844:	df 93       	push	r29
    7846:	00 d0       	rcall	.+0      	; 0x7848 <PORTC_set_pin_dir+0x6>
    7848:	cd b7       	in	r28, 0x3d	; 61
    784a:	de b7       	in	r29, 0x3e	; 62
    784c:	89 83       	std	Y+1, r24	; 0x01
    784e:	6a 83       	std	Y+2, r22	; 0x02
	switch (dir) {
    7850:	8a 81       	ldd	r24, Y+2	; 0x02
    7852:	88 2f       	mov	r24, r24
    7854:	90 e0       	ldi	r25, 0x00	; 0
    7856:	81 30       	cpi	r24, 0x01	; 1
    7858:	91 05       	cpc	r25, r1
    785a:	e1 f0       	breq	.+56     	; 0x7894 <PORTC_set_pin_dir+0x52>
    785c:	82 30       	cpi	r24, 0x02	; 2
    785e:	91 05       	cpc	r25, r1
    7860:	71 f1       	breq	.+92     	; 0x78be <PORTC_set_pin_dir+0x7c>
    7862:	89 2b       	or	r24, r25
    7864:	09 f0       	breq	.+2      	; 0x7868 <PORTC_set_pin_dir+0x26>
		break;
	case PORT_DIR_OFF:
		*((uint8_t *)&PORTC + 0x10 + pin) |= 1 << PORT_PULLUPEN_bp;
		break;
	default:
		break;
    7866:	3b c0       	rjmp	.+118    	; 0x78de <PORTC_set_pin_dir+0x9c>
 */
static inline void PORTC_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTC.DIR &= ~(1 << pin);
    7868:	88 e0       	ldi	r24, 0x08	; 8
    786a:	90 e0       	ldi	r25, 0x00	; 0
    786c:	28 e0       	ldi	r18, 0x08	; 8
    786e:	30 e0       	ldi	r19, 0x00	; 0
    7870:	f9 01       	movw	r30, r18
    7872:	20 81       	ld	r18, Z
    7874:	62 2f       	mov	r22, r18
    7876:	29 81       	ldd	r18, Y+1	; 0x01
    7878:	42 2f       	mov	r20, r18
    787a:	50 e0       	ldi	r21, 0x00	; 0
    787c:	21 e0       	ldi	r18, 0x01	; 1
    787e:	30 e0       	ldi	r19, 0x00	; 0
    7880:	02 c0       	rjmp	.+4      	; 0x7886 <PORTC_set_pin_dir+0x44>
    7882:	22 0f       	add	r18, r18
    7884:	33 1f       	adc	r19, r19
    7886:	4a 95       	dec	r20
    7888:	e2 f7       	brpl	.-8      	; 0x7882 <PORTC_set_pin_dir+0x40>
    788a:	20 95       	com	r18
    788c:	26 23       	and	r18, r22
    788e:	fc 01       	movw	r30, r24
    7890:	20 83       	st	Z, r18
		break;
    7892:	25 c0       	rjmp	.+74     	; 0x78de <PORTC_set_pin_dir+0x9c>
	case PORT_DIR_OUT:
		VPORTC.DIR |= (1 << pin);
    7894:	88 e0       	ldi	r24, 0x08	; 8
    7896:	90 e0       	ldi	r25, 0x00	; 0
    7898:	28 e0       	ldi	r18, 0x08	; 8
    789a:	30 e0       	ldi	r19, 0x00	; 0
    789c:	f9 01       	movw	r30, r18
    789e:	20 81       	ld	r18, Z
    78a0:	62 2f       	mov	r22, r18
    78a2:	29 81       	ldd	r18, Y+1	; 0x01
    78a4:	42 2f       	mov	r20, r18
    78a6:	50 e0       	ldi	r21, 0x00	; 0
    78a8:	21 e0       	ldi	r18, 0x01	; 1
    78aa:	30 e0       	ldi	r19, 0x00	; 0
    78ac:	02 c0       	rjmp	.+4      	; 0x78b2 <PORTC_set_pin_dir+0x70>
    78ae:	22 0f       	add	r18, r18
    78b0:	33 1f       	adc	r19, r19
    78b2:	4a 95       	dec	r20
    78b4:	e2 f7       	brpl	.-8      	; 0x78ae <PORTC_set_pin_dir+0x6c>
    78b6:	26 2b       	or	r18, r22
    78b8:	fc 01       	movw	r30, r24
    78ba:	20 83       	st	Z, r18
		break;
    78bc:	10 c0       	rjmp	.+32     	; 0x78de <PORTC_set_pin_dir+0x9c>
	case PORT_DIR_OFF:
		*((uint8_t *)&PORTC + 0x10 + pin) |= 1 << PORT_PULLUPEN_bp;
    78be:	89 81       	ldd	r24, Y+1	; 0x01
    78c0:	88 2f       	mov	r24, r24
    78c2:	90 e0       	ldi	r25, 0x00	; 0
    78c4:	80 5b       	subi	r24, 0xB0	; 176
    78c6:	9b 4f       	sbci	r25, 0xFB	; 251
    78c8:	29 81       	ldd	r18, Y+1	; 0x01
    78ca:	22 2f       	mov	r18, r18
    78cc:	30 e0       	ldi	r19, 0x00	; 0
    78ce:	20 5b       	subi	r18, 0xB0	; 176
    78d0:	3b 4f       	sbci	r19, 0xFB	; 251
    78d2:	f9 01       	movw	r30, r18
    78d4:	20 81       	ld	r18, Z
    78d6:	28 60       	ori	r18, 0x08	; 8
    78d8:	fc 01       	movw	r30, r24
    78da:	20 83       	st	Z, r18
		break;
    78dc:	00 00       	nop
	default:
		break;
	}
}
    78de:	00 00       	nop
    78e0:	0f 90       	pop	r0
    78e2:	0f 90       	pop	r0
    78e4:	df 91       	pop	r29
    78e6:	cf 91       	pop	r28
    78e8:	08 95       	ret

000078ea <PORTC_set_pin_level>:
 * \param[in] pin       The pin number within port
 * \param[in] level true  = Pin level set to "high" state
 *                  false = Pin level set to "low" state
 */
static inline void PORTC_set_pin_level(const uint8_t pin, const bool level)
{
    78ea:	cf 93       	push	r28
    78ec:	df 93       	push	r29
    78ee:	00 d0       	rcall	.+0      	; 0x78f0 <PORTC_set_pin_level+0x6>
    78f0:	cd b7       	in	r28, 0x3d	; 61
    78f2:	de b7       	in	r29, 0x3e	; 62
    78f4:	89 83       	std	Y+1, r24	; 0x01
    78f6:	6a 83       	std	Y+2, r22	; 0x02
	if (level == true) {
    78f8:	8a 81       	ldd	r24, Y+2	; 0x02
    78fa:	88 23       	and	r24, r24
    78fc:	a9 f0       	breq	.+42     	; 0x7928 <PORTC_set_pin_level+0x3e>
		VPORTC.OUT |= (1 << pin);
    78fe:	88 e0       	ldi	r24, 0x08	; 8
    7900:	90 e0       	ldi	r25, 0x00	; 0
    7902:	28 e0       	ldi	r18, 0x08	; 8
    7904:	30 e0       	ldi	r19, 0x00	; 0
    7906:	f9 01       	movw	r30, r18
    7908:	21 81       	ldd	r18, Z+1	; 0x01
    790a:	62 2f       	mov	r22, r18
    790c:	29 81       	ldd	r18, Y+1	; 0x01
    790e:	42 2f       	mov	r20, r18
    7910:	50 e0       	ldi	r21, 0x00	; 0
    7912:	21 e0       	ldi	r18, 0x01	; 1
    7914:	30 e0       	ldi	r19, 0x00	; 0
    7916:	02 c0       	rjmp	.+4      	; 0x791c <PORTC_set_pin_level+0x32>
    7918:	22 0f       	add	r18, r18
    791a:	33 1f       	adc	r19, r19
    791c:	4a 95       	dec	r20
    791e:	e2 f7       	brpl	.-8      	; 0x7918 <PORTC_set_pin_level+0x2e>
    7920:	26 2b       	or	r18, r22
    7922:	fc 01       	movw	r30, r24
    7924:	21 83       	std	Z+1, r18	; 0x01
	} else {
		VPORTC.OUT &= ~(1 << pin);
	}
}
    7926:	15 c0       	rjmp	.+42     	; 0x7952 <PORTC_set_pin_level+0x68>
static inline void PORTC_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTC.OUT |= (1 << pin);
	} else {
		VPORTC.OUT &= ~(1 << pin);
    7928:	88 e0       	ldi	r24, 0x08	; 8
    792a:	90 e0       	ldi	r25, 0x00	; 0
    792c:	28 e0       	ldi	r18, 0x08	; 8
    792e:	30 e0       	ldi	r19, 0x00	; 0
    7930:	f9 01       	movw	r30, r18
    7932:	21 81       	ldd	r18, Z+1	; 0x01
    7934:	62 2f       	mov	r22, r18
    7936:	29 81       	ldd	r18, Y+1	; 0x01
    7938:	42 2f       	mov	r20, r18
    793a:	50 e0       	ldi	r21, 0x00	; 0
    793c:	21 e0       	ldi	r18, 0x01	; 1
    793e:	30 e0       	ldi	r19, 0x00	; 0
    7940:	02 c0       	rjmp	.+4      	; 0x7946 <PORTC_set_pin_level+0x5c>
    7942:	22 0f       	add	r18, r18
    7944:	33 1f       	adc	r19, r19
    7946:	4a 95       	dec	r20
    7948:	e2 f7       	brpl	.-8      	; 0x7942 <PORTC_set_pin_level+0x58>
    794a:	20 95       	com	r18
    794c:	26 23       	and	r18, r22
    794e:	fc 01       	movw	r30, r24
    7950:	21 83       	std	Z+1, r18	; 0x01
	}
}
    7952:	00 00       	nop
    7954:	0f 90       	pop	r0
    7956:	0f 90       	pop	r0
    7958:	df 91       	pop	r29
    795a:	cf 91       	pop	r28
    795c:	08 95       	ret

0000795e <_ZL15LED_set_RED_dir8port_dir>:
 *                      PORT_DIR_OUT = Data direction out
 *                      PORT_DIR_OFF = Disables the pin
 *                      (low power state)
 */
static inline void LED_set_RED_dir(const enum port_dir dir)
{
    795e:	cf 93       	push	r28
    7960:	df 93       	push	r29
    7962:	1f 92       	push	r1
    7964:	cd b7       	in	r28, 0x3d	; 61
    7966:	de b7       	in	r29, 0x3e	; 62
    7968:	89 83       	std	Y+1, r24	; 0x01
	PORTC_set_pin_dir(6, dir);
    796a:	69 81       	ldd	r22, Y+1	; 0x01
    796c:	86 e0       	ldi	r24, 0x06	; 6
    796e:	0e 94 21 3c 	call	0x7842	; 0x7842 <PORTC_set_pin_dir>
}
    7972:	00 00       	nop
    7974:	0f 90       	pop	r0
    7976:	df 91       	pop	r29
    7978:	cf 91       	pop	r28
    797a:	08 95       	ret

0000797c <_ZL17LED_set_GREEN_dir8port_dir>:
 *                      PORT_DIR_OUT = Data direction out
 *                      PORT_DIR_OFF = Disables the pin
 *                      (low power state)
 */
static inline void LED_set_GREEN_dir(const enum port_dir dir)
{
    797c:	cf 93       	push	r28
    797e:	df 93       	push	r29
    7980:	1f 92       	push	r1
    7982:	cd b7       	in	r28, 0x3d	; 61
    7984:	de b7       	in	r29, 0x3e	; 62
    7986:	89 83       	std	Y+1, r24	; 0x01
	PORTC_set_pin_dir(5, dir);
    7988:	69 81       	ldd	r22, Y+1	; 0x01
    798a:	85 e0       	ldi	r24, 0x05	; 5
    798c:	0e 94 21 3c 	call	0x7842	; 0x7842 <PORTC_set_pin_dir>
}
    7990:	00 00       	nop
    7992:	0f 90       	pop	r0
    7994:	df 91       	pop	r29
    7996:	cf 91       	pop	r28
    7998:	08 95       	ret

0000799a <_ZL17LED_set_RED_levelb>:
 *
 * \param[in] level true  = Pin level set to "high" state
 *                  false = Pin level set to "low" state
 */
static inline void LED_set_RED_level(const bool level)
{
    799a:	cf 93       	push	r28
    799c:	df 93       	push	r29
    799e:	1f 92       	push	r1
    79a0:	cd b7       	in	r28, 0x3d	; 61
    79a2:	de b7       	in	r29, 0x3e	; 62
    79a4:	89 83       	std	Y+1, r24	; 0x01
	PORTC_set_pin_level(6, level); /* Low == LED off */
    79a6:	69 81       	ldd	r22, Y+1	; 0x01
    79a8:	86 e0       	ldi	r24, 0x06	; 6
    79aa:	0e 94 75 3c 	call	0x78ea	; 0x78ea <PORTC_set_pin_level>
}
    79ae:	00 00       	nop
    79b0:	0f 90       	pop	r0
    79b2:	df 91       	pop	r29
    79b4:	cf 91       	pop	r28
    79b6:	08 95       	ret

000079b8 <_ZL19LED_set_GREEN_levelb>:
 *
 * \param[in] level true  = Pin level set to "high" state
 *                  false = Pin level set to "low" state
 */
static inline void LED_set_GREEN_level(const bool level)
{
    79b8:	cf 93       	push	r28
    79ba:	df 93       	push	r29
    79bc:	1f 92       	push	r1
    79be:	cd b7       	in	r28, 0x3d	; 61
    79c0:	de b7       	in	r29, 0x3e	; 62
    79c2:	89 83       	std	Y+1, r24	; 0x01
	PORTC_set_pin_level(5, level); /* Low == LED off */
    79c4:	69 81       	ldd	r22, Y+1	; 0x01
    79c6:	85 e0       	ldi	r24, 0x05	; 5
    79c8:	0e 94 75 3c 	call	0x78ea	; 0x78ea <PORTC_set_pin_level>
}
    79cc:	00 00       	nop
    79ce:	0f 90       	pop	r0
    79d0:	df 91       	pop	r29
    79d2:	cf 91       	pop	r28
    79d4:	08 95       	ret

000079d6 <mcu_init>:
#ifdef __cplusplus
extern "C" {
#endif

void mcu_init(void)
{
    79d6:	cf 93       	push	r28
    79d8:	df 93       	push	r29
    79da:	cd b7       	in	r28, 0x3d	; 61
    79dc:	de b7       	in	r29, 0x3e	; 62
    79de:	26 97       	sbiw	r28, 0x06	; 6
    79e0:	cd bf       	out	0x3d, r28	; 61
    79e2:	de bf       	out	0x3e, r29	; 62
	 * disables all peripherals to save power. Driver shall enable
	 * peripheral if used */

	/* Set all pins to low power mode */

	for (uint8_t i = 0; i < 8; i++) {
    79e4:	19 82       	std	Y+1, r1	; 0x01
    79e6:	89 81       	ldd	r24, Y+1	; 0x01
    79e8:	88 30       	cpi	r24, 0x08	; 8
    79ea:	98 f4       	brcc	.+38     	; 0x7a12 <mcu_init+0x3c>
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    79ec:	89 81       	ldd	r24, Y+1	; 0x01
    79ee:	88 2f       	mov	r24, r24
    79f0:	90 e0       	ldi	r25, 0x00	; 0
    79f2:	80 5f       	subi	r24, 0xF0	; 240
    79f4:	9b 4f       	sbci	r25, 0xFB	; 251
    79f6:	29 81       	ldd	r18, Y+1	; 0x01
    79f8:	22 2f       	mov	r18, r18
    79fa:	30 e0       	ldi	r19, 0x00	; 0
    79fc:	20 5f       	subi	r18, 0xF0	; 240
    79fe:	3b 4f       	sbci	r19, 0xFB	; 251
    7a00:	f9 01       	movw	r30, r18
    7a02:	20 81       	ld	r18, Z
    7a04:	28 60       	ori	r18, 0x08	; 8
    7a06:	fc 01       	movw	r30, r24
    7a08:	20 83       	st	Z, r18
	 * disables all peripherals to save power. Driver shall enable
	 * peripheral if used */

	/* Set all pins to low power mode */

	for (uint8_t i = 0; i < 8; i++) {
    7a0a:	89 81       	ldd	r24, Y+1	; 0x01
    7a0c:	8f 5f       	subi	r24, 0xFF	; 255
    7a0e:	89 83       	std	Y+1, r24	; 0x01
    7a10:	ea cf       	rjmp	.-44     	; 0x79e6 <mcu_init+0x10>
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    7a12:	1a 82       	std	Y+2, r1	; 0x02
    7a14:	8a 81       	ldd	r24, Y+2	; 0x02
    7a16:	88 30       	cpi	r24, 0x08	; 8
    7a18:	98 f4       	brcc	.+38     	; 0x7a40 <mcu_init+0x6a>
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    7a1a:	8a 81       	ldd	r24, Y+2	; 0x02
    7a1c:	88 2f       	mov	r24, r24
    7a1e:	90 e0       	ldi	r25, 0x00	; 0
    7a20:	80 5d       	subi	r24, 0xD0	; 208
    7a22:	9b 4f       	sbci	r25, 0xFB	; 251
    7a24:	2a 81       	ldd	r18, Y+2	; 0x02
    7a26:	22 2f       	mov	r18, r18
    7a28:	30 e0       	ldi	r19, 0x00	; 0
    7a2a:	20 5d       	subi	r18, 0xD0	; 208
    7a2c:	3b 4f       	sbci	r19, 0xFB	; 251
    7a2e:	f9 01       	movw	r30, r18
    7a30:	20 81       	ld	r18, Z
    7a32:	28 60       	ori	r18, 0x08	; 8
    7a34:	fc 01       	movw	r30, r24
    7a36:	20 83       	st	Z, r18

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    7a38:	8a 81       	ldd	r24, Y+2	; 0x02
    7a3a:	8f 5f       	subi	r24, 0xFF	; 255
    7a3c:	8a 83       	std	Y+2, r24	; 0x02
    7a3e:	ea cf       	rjmp	.-44     	; 0x7a14 <mcu_init+0x3e>
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    7a40:	1b 82       	std	Y+3, r1	; 0x03
    7a42:	8b 81       	ldd	r24, Y+3	; 0x03
    7a44:	88 30       	cpi	r24, 0x08	; 8
    7a46:	98 f4       	brcc	.+38     	; 0x7a6e <mcu_init+0x98>
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    7a48:	8b 81       	ldd	r24, Y+3	; 0x03
    7a4a:	88 2f       	mov	r24, r24
    7a4c:	90 e0       	ldi	r25, 0x00	; 0
    7a4e:	80 5b       	subi	r24, 0xB0	; 176
    7a50:	9b 4f       	sbci	r25, 0xFB	; 251
    7a52:	2b 81       	ldd	r18, Y+3	; 0x03
    7a54:	22 2f       	mov	r18, r18
    7a56:	30 e0       	ldi	r19, 0x00	; 0
    7a58:	20 5b       	subi	r18, 0xB0	; 176
    7a5a:	3b 4f       	sbci	r19, 0xFB	; 251
    7a5c:	f9 01       	movw	r30, r18
    7a5e:	20 81       	ld	r18, Z
    7a60:	28 60       	ori	r18, 0x08	; 8
    7a62:	fc 01       	movw	r30, r24
    7a64:	20 83       	st	Z, r18

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    7a66:	8b 81       	ldd	r24, Y+3	; 0x03
    7a68:	8f 5f       	subi	r24, 0xFF	; 255
    7a6a:	8b 83       	std	Y+3, r24	; 0x03
    7a6c:	ea cf       	rjmp	.-44     	; 0x7a42 <mcu_init+0x6c>
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    7a6e:	1c 82       	std	Y+4, r1	; 0x04
    7a70:	8c 81       	ldd	r24, Y+4	; 0x04
    7a72:	88 30       	cpi	r24, 0x08	; 8
    7a74:	98 f4       	brcc	.+38     	; 0x7a9c <mcu_init+0xc6>
		*((uint8_t *)&PORTD + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    7a76:	8c 81       	ldd	r24, Y+4	; 0x04
    7a78:	88 2f       	mov	r24, r24
    7a7a:	90 e0       	ldi	r25, 0x00	; 0
    7a7c:	80 59       	subi	r24, 0x90	; 144
    7a7e:	9b 4f       	sbci	r25, 0xFB	; 251
    7a80:	2c 81       	ldd	r18, Y+4	; 0x04
    7a82:	22 2f       	mov	r18, r18
    7a84:	30 e0       	ldi	r19, 0x00	; 0
    7a86:	20 59       	subi	r18, 0x90	; 144
    7a88:	3b 4f       	sbci	r19, 0xFB	; 251
    7a8a:	f9 01       	movw	r30, r18
    7a8c:	20 81       	ld	r18, Z
    7a8e:	28 60       	ori	r18, 0x08	; 8
    7a90:	fc 01       	movw	r30, r24
    7a92:	20 83       	st	Z, r18

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    7a94:	8c 81       	ldd	r24, Y+4	; 0x04
    7a96:	8f 5f       	subi	r24, 0xFF	; 255
    7a98:	8c 83       	std	Y+4, r24	; 0x04
    7a9a:	ea cf       	rjmp	.-44     	; 0x7a70 <mcu_init+0x9a>
		*((uint8_t *)&PORTD + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    7a9c:	1d 82       	std	Y+5, r1	; 0x05
    7a9e:	8d 81       	ldd	r24, Y+5	; 0x05
    7aa0:	88 30       	cpi	r24, 0x08	; 8
    7aa2:	98 f4       	brcc	.+38     	; 0x7aca <mcu_init+0xf4>
		*((uint8_t *)&PORTE + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    7aa4:	8d 81       	ldd	r24, Y+5	; 0x05
    7aa6:	88 2f       	mov	r24, r24
    7aa8:	90 e0       	ldi	r25, 0x00	; 0
    7aaa:	80 57       	subi	r24, 0x70	; 112
    7aac:	9b 4f       	sbci	r25, 0xFB	; 251
    7aae:	2d 81       	ldd	r18, Y+5	; 0x05
    7ab0:	22 2f       	mov	r18, r18
    7ab2:	30 e0       	ldi	r19, 0x00	; 0
    7ab4:	20 57       	subi	r18, 0x70	; 112
    7ab6:	3b 4f       	sbci	r19, 0xFB	; 251
    7ab8:	f9 01       	movw	r30, r18
    7aba:	20 81       	ld	r18, Z
    7abc:	28 60       	ori	r18, 0x08	; 8
    7abe:	fc 01       	movw	r30, r24
    7ac0:	20 83       	st	Z, r18

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTD + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    7ac2:	8d 81       	ldd	r24, Y+5	; 0x05
    7ac4:	8f 5f       	subi	r24, 0xFF	; 255
    7ac6:	8d 83       	std	Y+5, r24	; 0x05
    7ac8:	ea cf       	rjmp	.-44     	; 0x7a9e <mcu_init+0xc8>
		*((uint8_t *)&PORTE + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    7aca:	1e 82       	std	Y+6, r1	; 0x06
    7acc:	8e 81       	ldd	r24, Y+6	; 0x06
    7ace:	88 30       	cpi	r24, 0x08	; 8
    7ad0:	98 f4       	brcc	.+38     	; 0x7af8 <mcu_init+0x122>
		*((uint8_t *)&PORTF + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    7ad2:	8e 81       	ldd	r24, Y+6	; 0x06
    7ad4:	88 2f       	mov	r24, r24
    7ad6:	90 e0       	ldi	r25, 0x00	; 0
    7ad8:	80 55       	subi	r24, 0x50	; 80
    7ada:	9b 4f       	sbci	r25, 0xFB	; 251
    7adc:	2e 81       	ldd	r18, Y+6	; 0x06
    7ade:	22 2f       	mov	r18, r18
    7ae0:	30 e0       	ldi	r19, 0x00	; 0
    7ae2:	20 55       	subi	r18, 0x50	; 80
    7ae4:	3b 4f       	sbci	r19, 0xFB	; 251
    7ae6:	f9 01       	movw	r30, r18
    7ae8:	20 81       	ld	r18, Z
    7aea:	28 60       	ori	r18, 0x08	; 8
    7aec:	fc 01       	movw	r30, r24
    7aee:	20 83       	st	Z, r18

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTE + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    7af0:	8e 81       	ldd	r24, Y+6	; 0x06
    7af2:	8f 5f       	subi	r24, 0xFF	; 255
    7af4:	8e 83       	std	Y+6, r24	; 0x06
    7af6:	ea cf       	rjmp	.-44     	; 0x7acc <mcu_init+0xf6>
		*((uint8_t *)&PORTF + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}
}
    7af8:	00 00       	nop
    7afa:	26 96       	adiw	r28, 0x06	; 6
    7afc:	cd bf       	out	0x3d, r28	; 61
    7afe:	de bf       	out	0x3e, r29	; 62
    7b00:	df 91       	pop	r29
    7b02:	cf 91       	pop	r28
    7b04:	08 95       	ret

00007b06 <system_init>:

/**
 * \brief System initialization
 */
void system_init()
{
    7b06:	cf 93       	push	r28
    7b08:	df 93       	push	r29
    7b0a:	cd b7       	in	r28, 0x3d	; 61
    7b0c:	de b7       	in	r29, 0x3e	; 62
	mcu_init();
    7b0e:	0e 94 eb 3c 	call	0x79d6	; 0x79d6 <mcu_init>

	CLKCTRL_init(); /* Set CPU clock speed appropriately */
    7b12:	0e 94 ab 3b 	call	0x7756	; 0x7756 <CLKCTRL_init>
	TIMERB_init(); /* Timers must be initialized before utility_delay functions will work */
    7b16:	0e 94 5f 72 	call	0xe4be	; 0xe4be <TIMERB_init>
	CPUINT_init(); /* Interrupts must also be enabled before timer interrupts will function */
    7b1a:	0e 94 b8 3b 	call	0x7770	; 0x7770 <CPUINT_init>
	BINIO_init();
    7b1e:	0e 94 5f 38 	call	0x70be	; 0x70be <_Z10BINIO_initv>

	LED_set_RED_dir(PORT_DIR_OUT);
    7b22:	81 e0       	ldi	r24, 0x01	; 1
    7b24:	0e 94 af 3c 	call	0x795e	; 0x795e <_ZL15LED_set_RED_dir8port_dir>
	LED_set_RED_level(OFF);
    7b28:	80 e0       	ldi	r24, 0x00	; 0
    7b2a:	0e 94 cd 3c 	call	0x799a	; 0x799a <_ZL17LED_set_RED_levelb>
	LED_set_GREEN_dir(PORT_DIR_OUT);
    7b2e:	81 e0       	ldi	r24, 0x01	; 1
    7b30:	0e 94 be 3c 	call	0x797c	; 0x797c <_ZL17LED_set_GREEN_dir8port_dir>
	LED_set_GREEN_level(OFF);
    7b34:	80 e0       	ldi	r24, 0x00	; 0
    7b36:	0e 94 dc 3c 	call	0x79b8	; 0x79b8 <_ZL19LED_set_GREEN_levelb>

	SLPCTRL_init();
    7b3a:	0e 94 3b 72 	call	0xe476	; 0xe476 <SLPCTRL_init>
	
	DAC0_init();
    7b3e:	0e 94 d7 3b 	call	0x77ae	; 0x77ae <_Z9DAC0_initv>

	linkbus_init(LB_BAUD, LINKBUS_USART);
    7b42:	41 e0       	ldi	r20, 0x01	; 1
    7b44:	60 e8       	ldi	r22, 0x80	; 128
    7b46:	75 e2       	ldi	r23, 0x25	; 37
    7b48:	80 e0       	ldi	r24, 0x00	; 0
    7b4a:	90 e0       	ldi	r25, 0x00	; 0
    7b4c:	0e 94 7b 5e 	call	0xbcf6	; 0xbcf6 <_Z12linkbus_initm14USART_Number_t>
	serialbus_init(SB_BAUD, SERIALBUS_USART);
    7b50:	44 e0       	ldi	r20, 0x04	; 4
    7b52:	60 e8       	ldi	r22, 0x80	; 128
    7b54:	75 e2       	ldi	r23, 0x25	; 37
    7b56:	80 e0       	ldi	r24, 0x00	; 0
    7b58:	90 e0       	ldi	r25, 0x00	; 0
    7b5a:	0e 94 fa 66 	call	0xcdf4	; 0xcdf4 <serialbus_init>

	BOD_init();
    7b5e:	0e 94 c9 39 	call	0x7392	; 0x7392 <BOD_init>
}
    7b62:	00 00       	nop
    7b64:	df 91       	pop	r29
    7b66:	cf 91       	pop	r28
    7b68:	08 95       	ret

00007b6a <system_sleep_settings>:

void system_sleep_settings()
{
    7b6a:	cf 93       	push	r28
    7b6c:	df 93       	push	r29
    7b6e:	cd b7       	in	r28, 0x3d	; 61
    7b70:	de b7       	in	r29, 0x3e	; 62
	mcu_init();
    7b72:	0e 94 eb 3c 	call	0x79d6	; 0x79d6 <mcu_init>

//	CLKCTRL_init(); /* Set CPU clock speed appropriately */
	TIMERB_sleep(); /* Timers must be initialized before utility_delay functions will work */
    7b76:	0e 94 51 74 	call	0xe8a2	; 0xe8a2 <TIMERB_sleep>
//	CPUINT_init(); /* Interrupts must also be enabled before timer interrupts will function */
	BINIO_sleep();
    7b7a:	0e 94 35 39 	call	0x726a	; 0x726a <_Z11BINIO_sleepv>

	LED_set_RED_dir(PORT_DIR_OUT);
    7b7e:	81 e0       	ldi	r24, 0x01	; 1
    7b80:	0e 94 af 3c 	call	0x795e	; 0x795e <_ZL15LED_set_RED_dir8port_dir>
	LED_set_RED_level(OFF);
    7b84:	80 e0       	ldi	r24, 0x00	; 0
    7b86:	0e 94 cd 3c 	call	0x799a	; 0x799a <_ZL17LED_set_RED_levelb>
	LED_set_GREEN_dir(PORT_DIR_OUT);
    7b8a:	81 e0       	ldi	r24, 0x01	; 1
    7b8c:	0e 94 be 3c 	call	0x797c	; 0x797c <_ZL17LED_set_GREEN_dir8port_dir>
	LED_set_GREEN_level(OFF);
    7b90:	80 e0       	ldi	r24, 0x00	; 0
    7b92:	0e 94 dc 3c 	call	0x79b8	; 0x79b8 <_ZL19LED_set_GREEN_levelb>

}
    7b96:	00 00       	nop
    7b98:	df 91       	pop	r29
    7b9a:	cf 91       	pop	r28
    7b9c:	08 95       	ret

00007b9e <ds3231_init>:
			while(tries-- && (err = (I2C_0_SendData(DS3231_I2C_SLAVE_ADDR, RTC_SECONDS, (uint8_t *)data, 4) != 4)));
		}
	}

	return err;
}
    7b9e:	cf 93       	push	r28
    7ba0:	df 93       	push	r29
    7ba2:	cd b7       	in	r28, 0x3d	; 61
    7ba4:	de b7       	in	r29, 0x3e	; 62
    7ba6:	0e 94 32 51 	call	0xa264	; 0xa264 <I2C_0_Init>
    7baa:	0e 94 6a 41 	call	0x82d4	; 0x82d4 <ds3231_responding>
    7bae:	98 2f       	mov	r25, r24
    7bb0:	81 e0       	ldi	r24, 0x01	; 1
    7bb2:	89 27       	eor	r24, r25
    7bb4:	df 91       	pop	r29
    7bb6:	cf 91       	pop	r28
    7bb8:	08 95       	ret

00007bba <ds3231_get_epoch>:
    7bba:	ef 92       	push	r14
    7bbc:	ff 92       	push	r15
    7bbe:	0f 93       	push	r16
    7bc0:	1f 93       	push	r17
    7bc2:	cf 93       	push	r28
    7bc4:	df 93       	push	r29
    7bc6:	cd b7       	in	r28, 0x3d	; 61
    7bc8:	de b7       	in	r29, 0x3e	; 62
    7bca:	a5 97       	sbiw	r28, 0x25	; 37
    7bcc:	cd bf       	out	0x3d, r28	; 61
    7bce:	de bf       	out	0x3e, r29	; 62
    7bd0:	8c a3       	std	Y+36, r24	; 0x24
    7bd2:	9d a3       	std	Y+37, r25	; 0x25
    7bd4:	8a e0       	ldi	r24, 0x0A	; 10
    7bd6:	89 83       	std	Y+1, r24	; 0x01
    7bd8:	1a 82       	std	Y+2, r1	; 0x02
    7bda:	1b 82       	std	Y+3, r1	; 0x03
    7bdc:	1c 82       	std	Y+4, r1	; 0x04
    7bde:	1d 82       	std	Y+5, r1	; 0x05
    7be0:	27 e0       	ldi	r18, 0x07	; 7
    7be2:	ce 01       	movw	r24, r28
    7be4:	41 96       	adiw	r24, 0x11	; 17
    7be6:	fc 01       	movw	r30, r24
    7be8:	32 2f       	mov	r19, r18
    7bea:	11 92       	st	Z+, r1
    7bec:	3a 95       	dec	r19
    7bee:	e9 f7       	brne	.-6      	; 0x7bea <ds3231_get_epoch+0x30>
    7bf0:	89 81       	ldd	r24, Y+1	; 0x01
    7bf2:	9f ef       	ldi	r25, 0xFF	; 255
    7bf4:	98 0f       	add	r25, r24
    7bf6:	99 83       	std	Y+1, r25	; 0x01
    7bf8:	88 23       	and	r24, r24
    7bfa:	99 f0       	breq	.+38     	; 0x7c22 <ds3231_get_epoch+0x68>
    7bfc:	ce 01       	movw	r24, r28
    7bfe:	41 96       	adiw	r24, 0x11	; 17
    7c00:	27 e0       	ldi	r18, 0x07	; 7
    7c02:	ac 01       	movw	r20, r24
    7c04:	60 e0       	ldi	r22, 0x00	; 0
    7c06:	80 ed       	ldi	r24, 0xD0	; 208
    7c08:	0e 94 6a 52 	call	0xa4d4	; 0xa4d4 <I2C_0_GetData>
    7c0c:	98 2f       	mov	r25, r24
    7c0e:	81 e0       	ldi	r24, 0x01	; 1
    7c10:	97 30       	cpi	r25, 0x07	; 7
    7c12:	09 f4       	brne	.+2      	; 0x7c16 <ds3231_get_epoch+0x5c>
    7c14:	80 e0       	ldi	r24, 0x00	; 0
    7c16:	8e 83       	std	Y+6, r24	; 0x06
    7c18:	8e 81       	ldd	r24, Y+6	; 0x06
    7c1a:	88 23       	and	r24, r24
    7c1c:	11 f0       	breq	.+4      	; 0x7c22 <ds3231_get_epoch+0x68>
    7c1e:	81 e0       	ldi	r24, 0x01	; 1
    7c20:	01 c0       	rjmp	.+2      	; 0x7c24 <ds3231_get_epoch+0x6a>
    7c22:	80 e0       	ldi	r24, 0x00	; 0
    7c24:	88 23       	and	r24, r24
    7c26:	09 f0       	breq	.+2      	; 0x7c2a <ds3231_get_epoch+0x70>
    7c28:	e3 cf       	rjmp	.-58     	; 0x7bf0 <ds3231_get_epoch+0x36>
    7c2a:	9e 81       	ldd	r25, Y+6	; 0x06
    7c2c:	81 e0       	ldi	r24, 0x01	; 1
    7c2e:	89 27       	eor	r24, r25
    7c30:	88 23       	and	r24, r24
    7c32:	09 f4       	brne	.+2      	; 0x7c36 <ds3231_get_epoch+0x7c>
    7c34:	7e c1       	rjmp	.+764    	; 0x7f32 <ds3231_get_epoch+0x378>
    7c36:	2c e0       	ldi	r18, 0x0C	; 12
    7c38:	ce 01       	movw	r24, r28
    7c3a:	48 96       	adiw	r24, 0x18	; 24
    7c3c:	fc 01       	movw	r30, r24
    7c3e:	32 2f       	mov	r19, r18
    7c40:	11 92       	st	Z+, r1
    7c42:	3a 95       	dec	r19
    7c44:	e9 f7       	brne	.-6      	; 0x7c40 <ds3231_get_epoch+0x86>
    7c46:	84 e6       	ldi	r24, 0x64	; 100
    7c48:	90 e0       	ldi	r25, 0x00	; 0
    7c4a:	89 87       	std	Y+9, r24	; 0x09
    7c4c:	9a 87       	std	Y+10, r25	; 0x0a
    7c4e:	8f 89       	ldd	r24, Y+23	; 0x17
    7c50:	88 2f       	mov	r24, r24
    7c52:	90 e0       	ldi	r25, 0x00	; 0
    7c54:	8f 70       	andi	r24, 0x0F	; 15
    7c56:	99 27       	eor	r25, r25
    7c58:	29 85       	ldd	r18, Y+9	; 0x09
    7c5a:	3a 85       	ldd	r19, Y+10	; 0x0a
    7c5c:	82 0f       	add	r24, r18
    7c5e:	93 1f       	adc	r25, r19
    7c60:	89 87       	std	Y+9, r24	; 0x09
    7c62:	9a 87       	std	Y+10, r25	; 0x0a
    7c64:	8f 89       	ldd	r24, Y+23	; 0x17
    7c66:	82 95       	swap	r24
    7c68:	8f 70       	andi	r24, 0x0F	; 15
    7c6a:	88 2f       	mov	r24, r24
    7c6c:	90 e0       	ldi	r25, 0x00	; 0
    7c6e:	88 0f       	add	r24, r24
    7c70:	99 1f       	adc	r25, r25
    7c72:	9c 01       	movw	r18, r24
    7c74:	22 0f       	add	r18, r18
    7c76:	33 1f       	adc	r19, r19
    7c78:	22 0f       	add	r18, r18
    7c7a:	33 1f       	adc	r19, r19
    7c7c:	82 0f       	add	r24, r18
    7c7e:	93 1f       	adc	r25, r19
    7c80:	29 85       	ldd	r18, Y+9	; 0x09
    7c82:	3a 85       	ldd	r19, Y+10	; 0x0a
    7c84:	82 0f       	add	r24, r18
    7c86:	93 1f       	adc	r25, r19
    7c88:	89 87       	std	Y+9, r24	; 0x09
    7c8a:	9a 87       	std	Y+10, r25	; 0x0a
    7c8c:	89 85       	ldd	r24, Y+9	; 0x09
    7c8e:	9a 85       	ldd	r25, Y+10	; 0x0a
    7c90:	8e 8f       	std	Y+30, r24	; 0x1e
    7c92:	9f 8f       	std	Y+31, r25	; 0x1f
    7c94:	89 85       	ldd	r24, Y+9	; 0x09
    7c96:	9a 85       	ldd	r25, Y+10	; 0x0a
    7c98:	84 59       	subi	r24, 0x94	; 148
    7c9a:	98 4f       	sbci	r25, 0xF8	; 248
    7c9c:	89 87       	std	Y+9, r24	; 0x09
    7c9e:	9a 87       	std	Y+10, r25	; 0x0a
    7ca0:	8e 89       	ldd	r24, Y+22	; 0x16
    7ca2:	8f 70       	andi	r24, 0x0F	; 15
    7ca4:	8b 87       	std	Y+11, r24	; 0x0b
    7ca6:	8e 89       	ldd	r24, Y+22	; 0x16
    7ca8:	82 95       	swap	r24
    7caa:	8f 70       	andi	r24, 0x0F	; 15
    7cac:	88 0f       	add	r24, r24
    7cae:	98 2f       	mov	r25, r24
    7cb0:	99 0f       	add	r25, r25
    7cb2:	99 0f       	add	r25, r25
    7cb4:	89 0f       	add	r24, r25
    7cb6:	9b 85       	ldd	r25, Y+11	; 0x0b
    7cb8:	89 0f       	add	r24, r25
    7cba:	8b 87       	std	Y+11, r24	; 0x0b
    7cbc:	8b 85       	ldd	r24, Y+11	; 0x0b
    7cbe:	81 50       	subi	r24, 0x01	; 1
    7cc0:	8d 8f       	std	Y+29, r24	; 0x1d
    7cc2:	8d 89       	ldd	r24, Y+21	; 0x15
    7cc4:	8f 70       	andi	r24, 0x0F	; 15
    7cc6:	8c 87       	std	Y+12, r24	; 0x0c
    7cc8:	8d 89       	ldd	r24, Y+21	; 0x15
    7cca:	82 95       	swap	r24
    7ccc:	8f 70       	andi	r24, 0x0F	; 15
    7cce:	88 0f       	add	r24, r24
    7cd0:	98 2f       	mov	r25, r24
    7cd2:	99 0f       	add	r25, r25
    7cd4:	99 0f       	add	r25, r25
    7cd6:	89 0f       	add	r24, r25
    7cd8:	9c 85       	ldd	r25, Y+12	; 0x0c
    7cda:	89 0f       	add	r24, r25
    7cdc:	8c 87       	std	Y+12, r24	; 0x0c
    7cde:	8c 85       	ldd	r24, Y+12	; 0x0c
    7ce0:	8b 8f       	std	Y+27, r24	; 0x1b
    7ce2:	18 a2       	std	Y+32, r1	; 0x20
    7ce4:	19 a2       	std	Y+33, r1	; 0x21
    7ce6:	81 e0       	ldi	r24, 0x01	; 1
    7ce8:	88 87       	std	Y+8, r24	; 0x08
    7cea:	98 85       	ldd	r25, Y+8	; 0x08
    7cec:	8b 85       	ldd	r24, Y+11	; 0x0b
    7cee:	98 17       	cp	r25, r24
    7cf0:	88 f4       	brcc	.+34     	; 0x7d14 <ds3231_get_epoch+0x15a>
    7cf2:	89 85       	ldd	r24, Y+9	; 0x09
    7cf4:	9a 85       	ldd	r25, Y+10	; 0x0a
    7cf6:	68 85       	ldd	r22, Y+8	; 0x08
    7cf8:	0e 94 84 03 	call	0x708	; 0x708 <month_length>
    7cfc:	28 a1       	ldd	r18, Y+32	; 0x20
    7cfe:	39 a1       	ldd	r19, Y+33	; 0x21
    7d00:	88 2f       	mov	r24, r24
    7d02:	90 e0       	ldi	r25, 0x00	; 0
    7d04:	82 0f       	add	r24, r18
    7d06:	93 1f       	adc	r25, r19
    7d08:	88 a3       	std	Y+32, r24	; 0x20
    7d0a:	99 a3       	std	Y+33, r25	; 0x21
    7d0c:	88 85       	ldd	r24, Y+8	; 0x08
    7d0e:	8f 5f       	subi	r24, 0xFF	; 255
    7d10:	88 87       	std	Y+8, r24	; 0x08
    7d12:	eb cf       	rjmp	.-42     	; 0x7cea <ds3231_get_epoch+0x130>
    7d14:	28 a1       	ldd	r18, Y+32	; 0x20
    7d16:	39 a1       	ldd	r19, Y+33	; 0x21
    7d18:	8b 8d       	ldd	r24, Y+27	; 0x1b
    7d1a:	08 2e       	mov	r0, r24
    7d1c:	00 0c       	add	r0, r0
    7d1e:	99 0b       	sbc	r25, r25
    7d20:	01 97       	sbiw	r24, 0x01	; 1
    7d22:	82 0f       	add	r24, r18
    7d24:	93 1f       	adc	r25, r19
    7d26:	88 a3       	std	Y+32, r24	; 0x20
    7d28:	99 a3       	std	Y+33, r25	; 0x21
    7d2a:	89 89       	ldd	r24, Y+17	; 0x11
    7d2c:	82 95       	swap	r24
    7d2e:	8f 70       	andi	r24, 0x0F	; 15
    7d30:	88 0f       	add	r24, r24
    7d32:	98 2f       	mov	r25, r24
    7d34:	99 0f       	add	r25, r25
    7d36:	99 0f       	add	r25, r25
    7d38:	89 0f       	add	r24, r25
    7d3a:	8d 87       	std	Y+13, r24	; 0x0d
    7d3c:	89 89       	ldd	r24, Y+17	; 0x11
    7d3e:	8f 70       	andi	r24, 0x0F	; 15
    7d40:	9d 85       	ldd	r25, Y+13	; 0x0d
    7d42:	89 0f       	add	r24, r25
    7d44:	8d 87       	std	Y+13, r24	; 0x0d
    7d46:	8a 89       	ldd	r24, Y+18	; 0x12
    7d48:	82 95       	swap	r24
    7d4a:	8f 70       	andi	r24, 0x0F	; 15
    7d4c:	88 0f       	add	r24, r24
    7d4e:	98 2f       	mov	r25, r24
    7d50:	99 0f       	add	r25, r25
    7d52:	99 0f       	add	r25, r25
    7d54:	89 0f       	add	r24, r25
    7d56:	8e 87       	std	Y+14, r24	; 0x0e
    7d58:	8a 89       	ldd	r24, Y+18	; 0x12
    7d5a:	8f 70       	andi	r24, 0x0F	; 15
    7d5c:	9e 85       	ldd	r25, Y+14	; 0x0e
    7d5e:	89 0f       	add	r24, r25
    7d60:	8e 87       	std	Y+14, r24	; 0x0e
    7d62:	8b 89       	ldd	r24, Y+19	; 0x13
    7d64:	88 2f       	mov	r24, r24
    7d66:	90 e0       	ldi	r25, 0x00	; 0
    7d68:	80 72       	andi	r24, 0x20	; 32
    7d6a:	99 27       	eor	r25, r25
    7d6c:	21 e0       	ldi	r18, 0x01	; 1
    7d6e:	89 2b       	or	r24, r25
    7d70:	09 f4       	brne	.+2      	; 0x7d74 <ds3231_get_epoch+0x1ba>
    7d72:	20 e0       	ldi	r18, 0x00	; 0
    7d74:	2f 87       	std	Y+15, r18	; 0x0f
    7d76:	8b 89       	ldd	r24, Y+19	; 0x13
    7d78:	88 2f       	mov	r24, r24
    7d7a:	90 e0       	ldi	r25, 0x00	; 0
    7d7c:	95 95       	asr	r25
    7d7e:	87 95       	ror	r24
    7d80:	95 95       	asr	r25
    7d82:	87 95       	ror	r24
    7d84:	95 95       	asr	r25
    7d86:	87 95       	ror	r24
    7d88:	95 95       	asr	r25
    7d8a:	87 95       	ror	r24
    7d8c:	81 70       	andi	r24, 0x01	; 1
    7d8e:	88 0f       	add	r24, r24
    7d90:	98 2f       	mov	r25, r24
    7d92:	99 0f       	add	r25, r25
    7d94:	99 0f       	add	r25, r25
    7d96:	89 0f       	add	r24, r25
    7d98:	8f 83       	std	Y+7, r24	; 0x07
    7d9a:	8b 89       	ldd	r24, Y+19	; 0x13
    7d9c:	8f 70       	andi	r24, 0x0F	; 15
    7d9e:	9f 81       	ldd	r25, Y+7	; 0x07
    7da0:	89 0f       	add	r24, r25
    7da2:	8f 83       	std	Y+7, r24	; 0x07
    7da4:	8b 89       	ldd	r24, Y+19	; 0x13
    7da6:	88 2f       	mov	r24, r24
    7da8:	90 e0       	ldi	r25, 0x00	; 0
    7daa:	80 74       	andi	r24, 0x40	; 64
    7dac:	99 27       	eor	r25, r25
    7dae:	21 e0       	ldi	r18, 0x01	; 1
    7db0:	89 2b       	or	r24, r25
    7db2:	09 f4       	brne	.+2      	; 0x7db6 <ds3231_get_epoch+0x1fc>
    7db4:	20 e0       	ldi	r18, 0x00	; 0
    7db6:	28 8b       	std	Y+16, r18	; 0x10
    7db8:	88 89       	ldd	r24, Y+16	; 0x10
    7dba:	88 23       	and	r24, r24
    7dbc:	39 f0       	breq	.+14     	; 0x7dcc <ds3231_get_epoch+0x212>
    7dbe:	8f 85       	ldd	r24, Y+15	; 0x0f
    7dc0:	88 23       	and	r24, r24
    7dc2:	51 f0       	breq	.+20     	; 0x7dd8 <ds3231_get_epoch+0x21e>
    7dc4:	8f 81       	ldd	r24, Y+7	; 0x07
    7dc6:	84 5f       	subi	r24, 0xF4	; 244
    7dc8:	8f 83       	std	Y+7, r24	; 0x07
    7dca:	06 c0       	rjmp	.+12     	; 0x7dd8 <ds3231_get_epoch+0x21e>
    7dcc:	8f 85       	ldd	r24, Y+15	; 0x0f
    7dce:	88 23       	and	r24, r24
    7dd0:	19 f0       	breq	.+6      	; 0x7dd8 <ds3231_get_epoch+0x21e>
    7dd2:	8f 81       	ldd	r24, Y+7	; 0x07
    7dd4:	8c 5e       	subi	r24, 0xEC	; 236
    7dd6:	8f 83       	std	Y+7, r24	; 0x07
    7dd8:	8f 81       	ldd	r24, Y+7	; 0x07
    7dda:	8a 8f       	std	Y+26, r24	; 0x1a
    7ddc:	8e 85       	ldd	r24, Y+14	; 0x0e
    7dde:	89 8f       	std	Y+25, r24	; 0x19
    7de0:	8d 85       	ldd	r24, Y+13	; 0x0d
    7de2:	88 8f       	std	Y+24, r24	; 0x18
    7de4:	88 8d       	ldd	r24, Y+24	; 0x18
    7de6:	28 2f       	mov	r18, r24
    7de8:	88 0f       	add	r24, r24
    7dea:	33 0b       	sbc	r19, r19
    7dec:	89 8d       	ldd	r24, Y+25	; 0x19
    7dee:	48 2f       	mov	r20, r24
    7df0:	88 0f       	add	r24, r24
    7df2:	55 0b       	sbc	r21, r21
    7df4:	6c e3       	ldi	r22, 0x3C	; 60
    7df6:	64 9f       	mul	r22, r20
    7df8:	c0 01       	movw	r24, r0
    7dfa:	65 9f       	mul	r22, r21
    7dfc:	90 0d       	add	r25, r0
    7dfe:	11 24       	eor	r1, r1
    7e00:	82 0f       	add	r24, r18
    7e02:	93 1f       	adc	r25, r19
    7e04:	7c 01       	movw	r14, r24
    7e06:	99 0f       	add	r25, r25
    7e08:	00 0b       	sbc	r16, r16
    7e0a:	11 0b       	sbc	r17, r17
    7e0c:	8a 8d       	ldd	r24, Y+26	; 0x1a
    7e0e:	28 2f       	mov	r18, r24
    7e10:	88 0f       	add	r24, r24
    7e12:	33 0b       	sbc	r19, r19
    7e14:	44 0b       	sbc	r20, r20
    7e16:	55 0b       	sbc	r21, r21
    7e18:	80 e1       	ldi	r24, 0x10	; 16
    7e1a:	9e e0       	ldi	r25, 0x0E	; 14
    7e1c:	dc 01       	movw	r26, r24
    7e1e:	0e 94 88 7d 	call	0xfb10	; 0xfb10 <__muluhisi3>
    7e22:	dc 01       	movw	r26, r24
    7e24:	cb 01       	movw	r24, r22
    7e26:	e8 0e       	add	r14, r24
    7e28:	f9 1e       	adc	r15, r25
    7e2a:	0a 1f       	adc	r16, r26
    7e2c:	1b 1f       	adc	r17, r27
    7e2e:	88 a1       	ldd	r24, Y+32	; 0x20
    7e30:	99 a1       	ldd	r25, Y+33	; 0x21
    7e32:	09 2e       	mov	r0, r25
    7e34:	00 0c       	add	r0, r0
    7e36:	aa 0b       	sbc	r26, r26
    7e38:	bb 0b       	sbc	r27, r27
    7e3a:	9c 01       	movw	r18, r24
    7e3c:	ad 01       	movw	r20, r26
    7e3e:	60 e8       	ldi	r22, 0x80	; 128
    7e40:	71 e5       	ldi	r23, 0x51	; 81
    7e42:	81 e0       	ldi	r24, 0x01	; 1
    7e44:	90 e0       	ldi	r25, 0x00	; 0
    7e46:	0e 94 06 7d 	call	0xfa0c	; 0xfa0c <__mulsi3>
    7e4a:	dc 01       	movw	r26, r24
    7e4c:	cb 01       	movw	r24, r22
    7e4e:	e8 0e       	add	r14, r24
    7e50:	f9 1e       	adc	r15, r25
    7e52:	0a 1f       	adc	r16, r26
    7e54:	1b 1f       	adc	r17, r27
    7e56:	8e 8d       	ldd	r24, Y+30	; 0x1e
    7e58:	9f 8d       	ldd	r25, Y+31	; 0x1f
    7e5a:	86 54       	subi	r24, 0x46	; 70
    7e5c:	91 09       	sbc	r25, r1
    7e5e:	09 2e       	mov	r0, r25
    7e60:	00 0c       	add	r0, r0
    7e62:	aa 0b       	sbc	r26, r26
    7e64:	bb 0b       	sbc	r27, r27
    7e66:	9c 01       	movw	r18, r24
    7e68:	ad 01       	movw	r20, r26
    7e6a:	60 e8       	ldi	r22, 0x80	; 128
    7e6c:	73 e3       	ldi	r23, 0x33	; 51
    7e6e:	81 ee       	ldi	r24, 0xE1	; 225
    7e70:	91 e0       	ldi	r25, 0x01	; 1
    7e72:	0e 94 06 7d 	call	0xfa0c	; 0xfa0c <__mulsi3>
    7e76:	dc 01       	movw	r26, r24
    7e78:	cb 01       	movw	r24, r22
    7e7a:	e8 0e       	add	r14, r24
    7e7c:	f9 1e       	adc	r15, r25
    7e7e:	0a 1f       	adc	r16, r26
    7e80:	1b 1f       	adc	r17, r27
    7e82:	8e 8d       	ldd	r24, Y+30	; 0x1e
    7e84:	9f 8d       	ldd	r25, Y+31	; 0x1f
    7e86:	85 54       	subi	r24, 0x45	; 69
    7e88:	91 09       	sbc	r25, r1
    7e8a:	99 23       	and	r25, r25
    7e8c:	0c f4       	brge	.+2      	; 0x7e90 <ds3231_get_epoch+0x2d6>
    7e8e:	03 96       	adiw	r24, 0x03	; 3
    7e90:	95 95       	asr	r25
    7e92:	87 95       	ror	r24
    7e94:	95 95       	asr	r25
    7e96:	87 95       	ror	r24
    7e98:	09 2e       	mov	r0, r25
    7e9a:	00 0c       	add	r0, r0
    7e9c:	aa 0b       	sbc	r26, r26
    7e9e:	bb 0b       	sbc	r27, r27
    7ea0:	9c 01       	movw	r18, r24
    7ea2:	ad 01       	movw	r20, r26
    7ea4:	60 e8       	ldi	r22, 0x80	; 128
    7ea6:	71 e5       	ldi	r23, 0x51	; 81
    7ea8:	81 e0       	ldi	r24, 0x01	; 1
    7eaa:	90 e0       	ldi	r25, 0x00	; 0
    7eac:	0e 94 06 7d 	call	0xfa0c	; 0xfa0c <__mulsi3>
    7eb0:	dc 01       	movw	r26, r24
    7eb2:	cb 01       	movw	r24, r22
    7eb4:	e8 0e       	add	r14, r24
    7eb6:	f9 1e       	adc	r15, r25
    7eb8:	0a 1f       	adc	r16, r26
    7eba:	1b 1f       	adc	r17, r27
    7ebc:	8e 8d       	ldd	r24, Y+30	; 0x1e
    7ebe:	9f 8d       	ldd	r25, Y+31	; 0x1f
    7ec0:	01 97       	sbiw	r24, 0x01	; 1
    7ec2:	24 e6       	ldi	r18, 0x64	; 100
    7ec4:	30 e0       	ldi	r19, 0x00	; 0
    7ec6:	b9 01       	movw	r22, r18
    7ec8:	0e 94 2a 7d 	call	0xfa54	; 0xfa54 <__divmodhi4>
    7ecc:	cb 01       	movw	r24, r22
    7ece:	09 2e       	mov	r0, r25
    7ed0:	00 0c       	add	r0, r0
    7ed2:	aa 0b       	sbc	r26, r26
    7ed4:	bb 0b       	sbc	r27, r27
    7ed6:	9c 01       	movw	r18, r24
    7ed8:	ad 01       	movw	r20, r26
    7eda:	60 e8       	ldi	r22, 0x80	; 128
    7edc:	7e ea       	ldi	r23, 0xAE	; 174
    7ede:	8e ef       	ldi	r24, 0xFE	; 254
    7ee0:	9f ef       	ldi	r25, 0xFF	; 255
    7ee2:	0e 94 06 7d 	call	0xfa0c	; 0xfa0c <__mulsi3>
    7ee6:	dc 01       	movw	r26, r24
    7ee8:	cb 01       	movw	r24, r22
    7eea:	e8 0e       	add	r14, r24
    7eec:	f9 1e       	adc	r15, r25
    7eee:	0a 1f       	adc	r16, r26
    7ef0:	1b 1f       	adc	r17, r27
    7ef2:	8e 8d       	ldd	r24, Y+30	; 0x1e
    7ef4:	9f 8d       	ldd	r25, Y+31	; 0x1f
    7ef6:	85 5d       	subi	r24, 0xD5	; 213
    7ef8:	9e 4f       	sbci	r25, 0xFE	; 254
    7efa:	20 e9       	ldi	r18, 0x90	; 144
    7efc:	31 e0       	ldi	r19, 0x01	; 1
    7efe:	b9 01       	movw	r22, r18
    7f00:	0e 94 2a 7d 	call	0xfa54	; 0xfa54 <__divmodhi4>
    7f04:	cb 01       	movw	r24, r22
    7f06:	09 2e       	mov	r0, r25
    7f08:	00 0c       	add	r0, r0
    7f0a:	aa 0b       	sbc	r26, r26
    7f0c:	bb 0b       	sbc	r27, r27
    7f0e:	9c 01       	movw	r18, r24
    7f10:	ad 01       	movw	r20, r26
    7f12:	60 e8       	ldi	r22, 0x80	; 128
    7f14:	71 e5       	ldi	r23, 0x51	; 81
    7f16:	81 e0       	ldi	r24, 0x01	; 1
    7f18:	90 e0       	ldi	r25, 0x00	; 0
    7f1a:	0e 94 06 7d 	call	0xfa0c	; 0xfa0c <__mulsi3>
    7f1e:	dc 01       	movw	r26, r24
    7f20:	cb 01       	movw	r24, r22
    7f22:	8e 0d       	add	r24, r14
    7f24:	9f 1d       	adc	r25, r15
    7f26:	a0 1f       	adc	r26, r16
    7f28:	b1 1f       	adc	r27, r17
    7f2a:	8a 83       	std	Y+2, r24	; 0x02
    7f2c:	9b 83       	std	Y+3, r25	; 0x03
    7f2e:	ac 83       	std	Y+4, r26	; 0x04
    7f30:	bd 83       	std	Y+5, r27	; 0x05
    7f32:	8c a1       	ldd	r24, Y+36	; 0x24
    7f34:	9d a1       	ldd	r25, Y+37	; 0x25
    7f36:	89 2b       	or	r24, r25
    7f38:	51 f0       	breq	.+20     	; 0x7f4e <ds3231_get_epoch+0x394>
    7f3a:	8e 81       	ldd	r24, Y+6	; 0x06
    7f3c:	88 23       	and	r24, r24
    7f3e:	11 f0       	breq	.+4      	; 0x7f44 <ds3231_get_epoch+0x38a>
    7f40:	2c ef       	ldi	r18, 0xFC	; 252
    7f42:	01 c0       	rjmp	.+2      	; 0x7f46 <ds3231_get_epoch+0x38c>
    7f44:	20 e0       	ldi	r18, 0x00	; 0
    7f46:	8c a1       	ldd	r24, Y+36	; 0x24
    7f48:	9d a1       	ldd	r25, Y+37	; 0x25
    7f4a:	fc 01       	movw	r30, r24
    7f4c:	20 83       	st	Z, r18
    7f4e:	8a 81       	ldd	r24, Y+2	; 0x02
    7f50:	9b 81       	ldd	r25, Y+3	; 0x03
    7f52:	ac 81       	ldd	r26, Y+4	; 0x04
    7f54:	bd 81       	ldd	r27, Y+5	; 0x05
    7f56:	bc 01       	movw	r22, r24
    7f58:	cd 01       	movw	r24, r26
    7f5a:	a5 96       	adiw	r28, 0x25	; 37
    7f5c:	cd bf       	out	0x3d, r28	; 61
    7f5e:	de bf       	out	0x3e, r29	; 62
    7f60:	df 91       	pop	r29
    7f62:	cf 91       	pop	r28
    7f64:	1f 91       	pop	r17
    7f66:	0f 91       	pop	r16
    7f68:	ff 90       	pop	r15
    7f6a:	ef 90       	pop	r14
    7f6c:	08 95       	ret

00007f6e <ds3231_set_date_time>:
    7f6e:	cf 93       	push	r28
    7f70:	df 93       	push	r29
    7f72:	cd b7       	in	r28, 0x3d	; 61
    7f74:	de b7       	in	r29, 0x3e	; 62
    7f76:	63 97       	sbiw	r28, 0x13	; 19
    7f78:	cd bf       	out	0x3d, r28	; 61
    7f7a:	de bf       	out	0x3e, r29	; 62
    7f7c:	89 8b       	std	Y+17, r24	; 0x11
    7f7e:	9a 8b       	std	Y+18, r25	; 0x12
    7f80:	6b 8b       	std	Y+19, r22	; 0x13
    7f82:	8a e0       	ldi	r24, 0x0A	; 10
    7f84:	89 83       	std	Y+1, r24	; 0x01
    7f86:	1a 86       	std	Y+10, r1	; 0x0a
    7f88:	1b 86       	std	Y+11, r1	; 0x0b
    7f8a:	1c 86       	std	Y+12, r1	; 0x0c
    7f8c:	81 e0       	ldi	r24, 0x01	; 1
    7f8e:	8d 87       	std	Y+13, r24	; 0x0d
    7f90:	1e 86       	std	Y+14, r1	; 0x0e
    7f92:	1f 86       	std	Y+15, r1	; 0x0f
    7f94:	18 8a       	std	Y+16, r1	; 0x10
    7f96:	80 ed       	ldi	r24, 0xD0	; 208
    7f98:	97 e0       	ldi	r25, 0x07	; 7
    7f9a:	8a 83       	std	Y+2, r24	; 0x02
    7f9c:	9b 83       	std	Y+3, r25	; 0x03
    7f9e:	89 89       	ldd	r24, Y+17	; 0x11
    7fa0:	9a 89       	ldd	r25, Y+18	; 0x12
    7fa2:	42 96       	adiw	r24, 0x12	; 18
    7fa4:	fc 01       	movw	r30, r24
    7fa6:	80 81       	ld	r24, Z
    7fa8:	80 53       	subi	r24, 0x30	; 48
    7faa:	8a 87       	std	Y+10, r24	; 0x0a
    7fac:	8a 85       	ldd	r24, Y+10	; 0x0a
    7fae:	28 2f       	mov	r18, r24
    7fb0:	89 89       	ldd	r24, Y+17	; 0x11
    7fb2:	9a 89       	ldd	r25, Y+18	; 0x12
    7fb4:	41 96       	adiw	r24, 0x11	; 17
    7fb6:	fc 01       	movw	r30, r24
    7fb8:	80 81       	ld	r24, Z
    7fba:	88 2f       	mov	r24, r24
    7fbc:	90 e0       	ldi	r25, 0x00	; 0
    7fbe:	c0 97       	sbiw	r24, 0x30	; 48
    7fc0:	82 95       	swap	r24
    7fc2:	92 95       	swap	r25
    7fc4:	90 7f       	andi	r25, 0xF0	; 240
    7fc6:	98 27       	eor	r25, r24
    7fc8:	80 7f       	andi	r24, 0xF0	; 240
    7fca:	98 27       	eor	r25, r24
    7fcc:	82 2b       	or	r24, r18
    7fce:	8a 87       	std	Y+10, r24	; 0x0a
    7fd0:	89 89       	ldd	r24, Y+17	; 0x11
    7fd2:	9a 89       	ldd	r25, Y+18	; 0x12
    7fd4:	0f 96       	adiw	r24, 0x0f	; 15
    7fd6:	fc 01       	movw	r30, r24
    7fd8:	80 81       	ld	r24, Z
    7fda:	80 53       	subi	r24, 0x30	; 48
    7fdc:	8b 87       	std	Y+11, r24	; 0x0b
    7fde:	8b 85       	ldd	r24, Y+11	; 0x0b
    7fe0:	28 2f       	mov	r18, r24
    7fe2:	89 89       	ldd	r24, Y+17	; 0x11
    7fe4:	9a 89       	ldd	r25, Y+18	; 0x12
    7fe6:	0e 96       	adiw	r24, 0x0e	; 14
    7fe8:	fc 01       	movw	r30, r24
    7fea:	80 81       	ld	r24, Z
    7fec:	88 2f       	mov	r24, r24
    7fee:	90 e0       	ldi	r25, 0x00	; 0
    7ff0:	c0 97       	sbiw	r24, 0x30	; 48
    7ff2:	82 95       	swap	r24
    7ff4:	92 95       	swap	r25
    7ff6:	90 7f       	andi	r25, 0xF0	; 240
    7ff8:	98 27       	eor	r25, r24
    7ffa:	80 7f       	andi	r24, 0xF0	; 240
    7ffc:	98 27       	eor	r25, r24
    7ffe:	82 2b       	or	r24, r18
    8000:	8b 87       	std	Y+11, r24	; 0x0b
    8002:	89 89       	ldd	r24, Y+17	; 0x11
    8004:	9a 89       	ldd	r25, Y+18	; 0x12
    8006:	0c 96       	adiw	r24, 0x0c	; 12
    8008:	fc 01       	movw	r30, r24
    800a:	80 81       	ld	r24, Z
    800c:	80 53       	subi	r24, 0x30	; 48
    800e:	8c 87       	std	Y+12, r24	; 0x0c
    8010:	8c 85       	ldd	r24, Y+12	; 0x0c
    8012:	28 2f       	mov	r18, r24
    8014:	89 89       	ldd	r24, Y+17	; 0x11
    8016:	9a 89       	ldd	r25, Y+18	; 0x12
    8018:	0b 96       	adiw	r24, 0x0b	; 11
    801a:	fc 01       	movw	r30, r24
    801c:	80 81       	ld	r24, Z
    801e:	88 2f       	mov	r24, r24
    8020:	90 e0       	ldi	r25, 0x00	; 0
    8022:	c0 97       	sbiw	r24, 0x30	; 48
    8024:	82 95       	swap	r24
    8026:	92 95       	swap	r25
    8028:	90 7f       	andi	r25, 0xF0	; 240
    802a:	98 27       	eor	r25, r24
    802c:	80 7f       	andi	r24, 0xF0	; 240
    802e:	98 27       	eor	r25, r24
    8030:	82 2b       	or	r24, r18
    8032:	8c 87       	std	Y+12, r24	; 0x0c
    8034:	89 89       	ldd	r24, Y+17	; 0x11
    8036:	9a 89       	ldd	r25, Y+18	; 0x12
    8038:	09 96       	adiw	r24, 0x09	; 9
    803a:	fc 01       	movw	r30, r24
    803c:	80 81       	ld	r24, Z
    803e:	80 53       	subi	r24, 0x30	; 48
    8040:	8e 87       	std	Y+14, r24	; 0x0e
    8042:	8f 85       	ldd	r24, Y+15	; 0x0f
    8044:	88 2f       	mov	r24, r24
    8046:	90 e0       	ldi	r25, 0x00	; 0
    8048:	8c 83       	std	Y+4, r24	; 0x04
    804a:	9d 83       	std	Y+5, r25	; 0x05
    804c:	89 89       	ldd	r24, Y+17	; 0x11
    804e:	9a 89       	ldd	r25, Y+18	; 0x12
    8050:	08 96       	adiw	r24, 0x08	; 8
    8052:	fc 01       	movw	r30, r24
    8054:	80 81       	ld	r24, Z
    8056:	88 2f       	mov	r24, r24
    8058:	90 e0       	ldi	r25, 0x00	; 0
    805a:	c0 97       	sbiw	r24, 0x30	; 48
    805c:	8e 83       	std	Y+6, r24	; 0x06
    805e:	9f 83       	std	Y+7, r25	; 0x07
    8060:	8e 81       	ldd	r24, Y+6	; 0x06
    8062:	9f 81       	ldd	r25, Y+7	; 0x07
    8064:	88 0f       	add	r24, r24
    8066:	99 1f       	adc	r25, r25
    8068:	9c 01       	movw	r18, r24
    806a:	22 0f       	add	r18, r18
    806c:	33 1f       	adc	r19, r19
    806e:	22 0f       	add	r18, r18
    8070:	33 1f       	adc	r19, r19
    8072:	82 0f       	add	r24, r18
    8074:	93 1f       	adc	r25, r19
    8076:	2c 81       	ldd	r18, Y+4	; 0x04
    8078:	3d 81       	ldd	r19, Y+5	; 0x05
    807a:	82 0f       	add	r24, r18
    807c:	93 1f       	adc	r25, r19
    807e:	8c 83       	std	Y+4, r24	; 0x04
    8080:	9d 83       	std	Y+5, r25	; 0x05
    8082:	8e 85       	ldd	r24, Y+14	; 0x0e
    8084:	28 2f       	mov	r18, r24
    8086:	8e 81       	ldd	r24, Y+6	; 0x06
    8088:	9f 81       	ldd	r25, Y+7	; 0x07
    808a:	82 95       	swap	r24
    808c:	92 95       	swap	r25
    808e:	90 7f       	andi	r25, 0xF0	; 240
    8090:	98 27       	eor	r25, r24
    8092:	80 7f       	andi	r24, 0xF0	; 240
    8094:	98 27       	eor	r25, r24
    8096:	82 2b       	or	r24, r18
    8098:	8e 87       	std	Y+14, r24	; 0x0e
    809a:	89 89       	ldd	r24, Y+17	; 0x11
    809c:	9a 89       	ldd	r25, Y+18	; 0x12
    809e:	06 96       	adiw	r24, 0x06	; 6
    80a0:	fc 01       	movw	r30, r24
    80a2:	80 81       	ld	r24, Z
    80a4:	80 53       	subi	r24, 0x30	; 48
    80a6:	8f 87       	std	Y+15, r24	; 0x0f
    80a8:	88 89       	ldd	r24, Y+16	; 0x10
    80aa:	88 2f       	mov	r24, r24
    80ac:	90 e0       	ldi	r25, 0x00	; 0
    80ae:	88 87       	std	Y+8, r24	; 0x08
    80b0:	99 87       	std	Y+9, r25	; 0x09
    80b2:	89 89       	ldd	r24, Y+17	; 0x11
    80b4:	9a 89       	ldd	r25, Y+18	; 0x12
    80b6:	05 96       	adiw	r24, 0x05	; 5
    80b8:	fc 01       	movw	r30, r24
    80ba:	80 81       	ld	r24, Z
    80bc:	88 2f       	mov	r24, r24
    80be:	90 e0       	ldi	r25, 0x00	; 0
    80c0:	c0 97       	sbiw	r24, 0x30	; 48
    80c2:	8e 83       	std	Y+6, r24	; 0x06
    80c4:	9f 83       	std	Y+7, r25	; 0x07
    80c6:	8e 81       	ldd	r24, Y+6	; 0x06
    80c8:	9f 81       	ldd	r25, Y+7	; 0x07
    80ca:	88 0f       	add	r24, r24
    80cc:	99 1f       	adc	r25, r25
    80ce:	9c 01       	movw	r18, r24
    80d0:	22 0f       	add	r18, r18
    80d2:	33 1f       	adc	r19, r19
    80d4:	22 0f       	add	r18, r18
    80d6:	33 1f       	adc	r19, r19
    80d8:	82 0f       	add	r24, r18
    80da:	93 1f       	adc	r25, r19
    80dc:	28 85       	ldd	r18, Y+8	; 0x08
    80de:	39 85       	ldd	r19, Y+9	; 0x09
    80e0:	82 0f       	add	r24, r18
    80e2:	93 1f       	adc	r25, r19
    80e4:	88 87       	std	Y+8, r24	; 0x08
    80e6:	99 87       	std	Y+9, r25	; 0x09
    80e8:	8f 85       	ldd	r24, Y+15	; 0x0f
    80ea:	28 2f       	mov	r18, r24
    80ec:	8e 81       	ldd	r24, Y+6	; 0x06
    80ee:	9f 81       	ldd	r25, Y+7	; 0x07
    80f0:	82 95       	swap	r24
    80f2:	92 95       	swap	r25
    80f4:	90 7f       	andi	r25, 0xF0	; 240
    80f6:	98 27       	eor	r25, r24
    80f8:	80 7f       	andi	r24, 0xF0	; 240
    80fa:	98 27       	eor	r25, r24
    80fc:	82 2b       	or	r24, r18
    80fe:	8f 87       	std	Y+15, r24	; 0x0f
    8100:	89 89       	ldd	r24, Y+17	; 0x11
    8102:	9a 89       	ldd	r25, Y+18	; 0x12
    8104:	03 96       	adiw	r24, 0x03	; 3
    8106:	fc 01       	movw	r30, r24
    8108:	80 81       	ld	r24, Z
    810a:	80 53       	subi	r24, 0x30	; 48
    810c:	88 8b       	std	Y+16, r24	; 0x10
    810e:	89 89       	ldd	r24, Y+17	; 0x11
    8110:	88 2f       	mov	r24, r24
    8112:	90 e0       	ldi	r25, 0x00	; 0
    8114:	2a 81       	ldd	r18, Y+2	; 0x02
    8116:	3b 81       	ldd	r19, Y+3	; 0x03
    8118:	82 0f       	add	r24, r18
    811a:	93 1f       	adc	r25, r19
    811c:	8a 83       	std	Y+2, r24	; 0x02
    811e:	9b 83       	std	Y+3, r25	; 0x03
    8120:	89 89       	ldd	r24, Y+17	; 0x11
    8122:	9a 89       	ldd	r25, Y+18	; 0x12
    8124:	02 96       	adiw	r24, 0x02	; 2
    8126:	fc 01       	movw	r30, r24
    8128:	80 81       	ld	r24, Z
    812a:	88 2f       	mov	r24, r24
    812c:	90 e0       	ldi	r25, 0x00	; 0
    812e:	c0 97       	sbiw	r24, 0x30	; 48
    8130:	8e 83       	std	Y+6, r24	; 0x06
    8132:	9f 83       	std	Y+7, r25	; 0x07
    8134:	8e 81       	ldd	r24, Y+6	; 0x06
    8136:	9f 81       	ldd	r25, Y+7	; 0x07
    8138:	88 0f       	add	r24, r24
    813a:	99 1f       	adc	r25, r25
    813c:	9c 01       	movw	r18, r24
    813e:	22 0f       	add	r18, r18
    8140:	33 1f       	adc	r19, r19
    8142:	22 0f       	add	r18, r18
    8144:	33 1f       	adc	r19, r19
    8146:	82 0f       	add	r24, r18
    8148:	93 1f       	adc	r25, r19
    814a:	2a 81       	ldd	r18, Y+2	; 0x02
    814c:	3b 81       	ldd	r19, Y+3	; 0x03
    814e:	82 0f       	add	r24, r18
    8150:	93 1f       	adc	r25, r19
    8152:	8a 83       	std	Y+2, r24	; 0x02
    8154:	9b 83       	std	Y+3, r25	; 0x03
    8156:	88 89       	ldd	r24, Y+16	; 0x10
    8158:	28 2f       	mov	r18, r24
    815a:	8e 81       	ldd	r24, Y+6	; 0x06
    815c:	9f 81       	ldd	r25, Y+7	; 0x07
    815e:	82 95       	swap	r24
    8160:	92 95       	swap	r25
    8162:	90 7f       	andi	r25, 0xF0	; 240
    8164:	98 27       	eor	r25, r24
    8166:	80 7f       	andi	r24, 0xF0	; 240
    8168:	98 27       	eor	r25, r24
    816a:	82 2b       	or	r24, r18
    816c:	88 8b       	std	Y+16, r24	; 0x10
    816e:	89 81       	ldd	r24, Y+1	; 0x01
    8170:	9f ef       	ldi	r25, 0xFF	; 255
    8172:	98 0f       	add	r25, r24
    8174:	99 83       	std	Y+1, r25	; 0x01
    8176:	88 23       	and	r24, r24
    8178:	99 f0       	breq	.+38     	; 0x81a0 <__RODATA_PM_OFFSET__+0x1a0>
    817a:	9b 89       	ldd	r25, Y+19	; 0x13
    817c:	89 2f       	mov	r24, r25
    817e:	88 0f       	add	r24, r24
    8180:	88 0f       	add	r24, r24
    8182:	88 0f       	add	r24, r24
    8184:	38 2f       	mov	r19, r24
    8186:	39 1b       	sub	r19, r25
    8188:	ce 01       	movw	r24, r28
    818a:	0a 96       	adiw	r24, 0x0a	; 10
    818c:	27 e0       	ldi	r18, 0x07	; 7
    818e:	ac 01       	movw	r20, r24
    8190:	63 2f       	mov	r22, r19
    8192:	80 ed       	ldi	r24, 0xD0	; 208
    8194:	0e 94 02 52 	call	0xa404	; 0xa404 <I2C_0_SendData>
    8198:	87 30       	cpi	r24, 0x07	; 7
    819a:	11 f0       	breq	.+4      	; 0x81a0 <__RODATA_PM_OFFSET__+0x1a0>
    819c:	81 e0       	ldi	r24, 0x01	; 1
    819e:	01 c0       	rjmp	.+2      	; 0x81a2 <__RODATA_PM_OFFSET__+0x1a2>
    81a0:	80 e0       	ldi	r24, 0x00	; 0
    81a2:	88 23       	and	r24, r24
    81a4:	09 f0       	breq	.+2      	; 0x81a8 <__RODATA_PM_OFFSET__+0x1a8>
    81a6:	e3 cf       	rjmp	.-58     	; 0x816e <__RODATA_PM_OFFSET__+0x16e>
    81a8:	00 00       	nop
    81aa:	63 96       	adiw	r28, 0x13	; 19
    81ac:	cd bf       	out	0x3d, r28	; 61
    81ae:	de bf       	out	0x3e, r29	; 62
    81b0:	df 91       	pop	r29
    81b2:	cf 91       	pop	r28
    81b4:	08 95       	ret

000081b6 <ds3231_1s_sqw>:
    81b6:	cf 93       	push	r28
    81b8:	df 93       	push	r29
    81ba:	00 d0       	rcall	.+0      	; 0x81bc <ds3231_1s_sqw+0x6>
    81bc:	00 d0       	rcall	.+0      	; 0x81be <ds3231_1s_sqw+0x8>
    81be:	cd b7       	in	r28, 0x3d	; 61
    81c0:	de b7       	in	r29, 0x3e	; 62
    81c2:	8c 83       	std	Y+4, r24	; 0x04
    81c4:	8a e0       	ldi	r24, 0x0A	; 10
    81c6:	89 83       	std	Y+1, r24	; 0x01
    81c8:	8c 81       	ldd	r24, Y+4	; 0x04
    81ca:	88 23       	and	r24, r24
    81cc:	11 f0       	breq	.+4      	; 0x81d2 <ds3231_1s_sqw+0x1c>
    81ce:	80 e0       	ldi	r24, 0x00	; 0
    81d0:	01 c0       	rjmp	.+2      	; 0x81d4 <ds3231_1s_sqw+0x1e>
    81d2:	84 e0       	ldi	r24, 0x04	; 4
    81d4:	8b 83       	std	Y+3, r24	; 0x03
    81d6:	89 81       	ldd	r24, Y+1	; 0x01
    81d8:	9f ef       	ldi	r25, 0xFF	; 255
    81da:	98 0f       	add	r25, r24
    81dc:	99 83       	std	Y+1, r25	; 0x01
    81de:	88 23       	and	r24, r24
    81e0:	99 f0       	breq	.+38     	; 0x8208 <ds3231_1s_sqw+0x52>
    81e2:	ce 01       	movw	r24, r28
    81e4:	03 96       	adiw	r24, 0x03	; 3
    81e6:	21 e0       	ldi	r18, 0x01	; 1
    81e8:	ac 01       	movw	r20, r24
    81ea:	6e e0       	ldi	r22, 0x0E	; 14
    81ec:	80 ed       	ldi	r24, 0xD0	; 208
    81ee:	0e 94 02 52 	call	0xa404	; 0xa404 <I2C_0_SendData>
    81f2:	98 2f       	mov	r25, r24
    81f4:	81 e0       	ldi	r24, 0x01	; 1
    81f6:	91 30       	cpi	r25, 0x01	; 1
    81f8:	09 f4       	brne	.+2      	; 0x81fc <ds3231_1s_sqw+0x46>
    81fa:	80 e0       	ldi	r24, 0x00	; 0
    81fc:	8a 83       	std	Y+2, r24	; 0x02
    81fe:	8a 81       	ldd	r24, Y+2	; 0x02
    8200:	88 23       	and	r24, r24
    8202:	11 f0       	breq	.+4      	; 0x8208 <ds3231_1s_sqw+0x52>
    8204:	81 e0       	ldi	r24, 0x01	; 1
    8206:	01 c0       	rjmp	.+2      	; 0x820a <ds3231_1s_sqw+0x54>
    8208:	80 e0       	ldi	r24, 0x00	; 0
    820a:	88 23       	and	r24, r24
    820c:	09 f0       	breq	.+2      	; 0x8210 <ds3231_1s_sqw+0x5a>
    820e:	e3 cf       	rjmp	.-58     	; 0x81d6 <ds3231_1s_sqw+0x20>
    8210:	8a 81       	ldd	r24, Y+2	; 0x02
    8212:	24 96       	adiw	r28, 0x04	; 4
    8214:	cd bf       	out	0x3d, r28	; 61
    8216:	de bf       	out	0x3e, r29	; 62
    8218:	df 91       	pop	r29
    821a:	cf 91       	pop	r28
    821c:	08 95       	ret

0000821e <ds3231_set_aging>:
    821e:	cf 93       	push	r28
    8220:	df 93       	push	r29
    8222:	00 d0       	rcall	.+0      	; 0x8224 <ds3231_set_aging+0x6>
    8224:	00 d0       	rcall	.+0      	; 0x8226 <ds3231_set_aging+0x8>
    8226:	cd b7       	in	r28, 0x3d	; 61
    8228:	de b7       	in	r29, 0x3e	; 62
    822a:	8c 83       	std	Y+4, r24	; 0x04
    822c:	8a e0       	ldi	r24, 0x0A	; 10
    822e:	89 83       	std	Y+1, r24	; 0x01
    8230:	8c 81       	ldd	r24, Y+4	; 0x04
    8232:	8b 83       	std	Y+3, r24	; 0x03
    8234:	89 81       	ldd	r24, Y+1	; 0x01
    8236:	9f ef       	ldi	r25, 0xFF	; 255
    8238:	98 0f       	add	r25, r24
    823a:	99 83       	std	Y+1, r25	; 0x01
    823c:	88 23       	and	r24, r24
    823e:	99 f0       	breq	.+38     	; 0x8266 <ds3231_set_aging+0x48>
    8240:	ce 01       	movw	r24, r28
    8242:	03 96       	adiw	r24, 0x03	; 3
    8244:	21 e0       	ldi	r18, 0x01	; 1
    8246:	ac 01       	movw	r20, r24
    8248:	60 e1       	ldi	r22, 0x10	; 16
    824a:	80 ed       	ldi	r24, 0xD0	; 208
    824c:	0e 94 02 52 	call	0xa404	; 0xa404 <I2C_0_SendData>
    8250:	98 2f       	mov	r25, r24
    8252:	81 e0       	ldi	r24, 0x01	; 1
    8254:	91 30       	cpi	r25, 0x01	; 1
    8256:	09 f4       	brne	.+2      	; 0x825a <ds3231_set_aging+0x3c>
    8258:	80 e0       	ldi	r24, 0x00	; 0
    825a:	8a 83       	std	Y+2, r24	; 0x02
    825c:	8a 81       	ldd	r24, Y+2	; 0x02
    825e:	88 23       	and	r24, r24
    8260:	11 f0       	breq	.+4      	; 0x8266 <ds3231_set_aging+0x48>
    8262:	81 e0       	ldi	r24, 0x01	; 1
    8264:	01 c0       	rjmp	.+2      	; 0x8268 <ds3231_set_aging+0x4a>
    8266:	80 e0       	ldi	r24, 0x00	; 0
    8268:	88 23       	and	r24, r24
    826a:	09 f0       	breq	.+2      	; 0x826e <ds3231_set_aging+0x50>
    826c:	e3 cf       	rjmp	.-58     	; 0x8234 <ds3231_set_aging+0x16>
    826e:	8a 81       	ldd	r24, Y+2	; 0x02
    8270:	24 96       	adiw	r28, 0x04	; 4
    8272:	cd bf       	out	0x3d, r28	; 61
    8274:	de bf       	out	0x3e, r29	; 62
    8276:	df 91       	pop	r29
    8278:	cf 91       	pop	r28
    827a:	08 95       	ret

0000827c <ds3231_get_aging>:
    827c:	cf 93       	push	r28
    827e:	df 93       	push	r29
    8280:	00 d0       	rcall	.+0      	; 0x8282 <ds3231_get_aging+0x6>
    8282:	1f 92       	push	r1
    8284:	cd b7       	in	r28, 0x3d	; 61
    8286:	de b7       	in	r29, 0x3e	; 62
    8288:	8a e0       	ldi	r24, 0x0A	; 10
    828a:	89 83       	std	Y+1, r24	; 0x01
    828c:	89 81       	ldd	r24, Y+1	; 0x01
    828e:	9f ef       	ldi	r25, 0xFF	; 255
    8290:	98 0f       	add	r25, r24
    8292:	99 83       	std	Y+1, r25	; 0x01
    8294:	88 23       	and	r24, r24
    8296:	99 f0       	breq	.+38     	; 0x82be <ds3231_get_aging+0x42>
    8298:	ce 01       	movw	r24, r28
    829a:	03 96       	adiw	r24, 0x03	; 3
    829c:	21 e0       	ldi	r18, 0x01	; 1
    829e:	ac 01       	movw	r20, r24
    82a0:	60 e1       	ldi	r22, 0x10	; 16
    82a2:	80 ed       	ldi	r24, 0xD0	; 208
    82a4:	0e 94 6a 52 	call	0xa4d4	; 0xa4d4 <I2C_0_GetData>
    82a8:	98 2f       	mov	r25, r24
    82aa:	81 e0       	ldi	r24, 0x01	; 1
    82ac:	91 30       	cpi	r25, 0x01	; 1
    82ae:	09 f4       	brne	.+2      	; 0x82b2 <ds3231_get_aging+0x36>
    82b0:	80 e0       	ldi	r24, 0x00	; 0
    82b2:	8a 83       	std	Y+2, r24	; 0x02
    82b4:	8a 81       	ldd	r24, Y+2	; 0x02
    82b6:	88 23       	and	r24, r24
    82b8:	11 f0       	breq	.+4      	; 0x82be <ds3231_get_aging+0x42>
    82ba:	81 e0       	ldi	r24, 0x01	; 1
    82bc:	01 c0       	rjmp	.+2      	; 0x82c0 <ds3231_get_aging+0x44>
    82be:	80 e0       	ldi	r24, 0x00	; 0
    82c0:	88 23       	and	r24, r24
    82c2:	09 f0       	breq	.+2      	; 0x82c6 <ds3231_get_aging+0x4a>
    82c4:	e3 cf       	rjmp	.-58     	; 0x828c <ds3231_get_aging+0x10>
    82c6:	8b 81       	ldd	r24, Y+3	; 0x03
    82c8:	23 96       	adiw	r28, 0x03	; 3
    82ca:	cd bf       	out	0x3d, r28	; 61
    82cc:	de bf       	out	0x3e, r29	; 62
    82ce:	df 91       	pop	r29
    82d0:	cf 91       	pop	r28
    82d2:	08 95       	ret

000082d4 <ds3231_responding>:
    82d4:	cf 93       	push	r28
    82d6:	df 93       	push	r29
    82d8:	00 d0       	rcall	.+0      	; 0x82da <ds3231_responding+0x6>
    82da:	1f 92       	push	r1
    82dc:	cd b7       	in	r28, 0x3d	; 61
    82de:	de b7       	in	r29, 0x3e	; 62
    82e0:	19 82       	std	Y+1, r1	; 0x01
    82e2:	84 e6       	ldi	r24, 0x64	; 100
    82e4:	8a 83       	std	Y+2, r24	; 0x02
    82e6:	8a 81       	ldd	r24, Y+2	; 0x02
    82e8:	9f ef       	ldi	r25, 0xFF	; 255
    82ea:	98 0f       	add	r25, r24
    82ec:	9a 83       	std	Y+2, r25	; 0x02
    82ee:	88 23       	and	r24, r24
    82f0:	a9 f0       	breq	.+42     	; 0x831c <ds3231_responding+0x48>
    82f2:	ce 01       	movw	r24, r28
    82f4:	03 96       	adiw	r24, 0x03	; 3
    82f6:	21 e0       	ldi	r18, 0x01	; 1
    82f8:	ac 01       	movw	r20, r24
    82fa:	60 e1       	ldi	r22, 0x10	; 16
    82fc:	80 ed       	ldi	r24, 0xD0	; 208
    82fe:	0e 94 6a 52 	call	0xa4d4	; 0xa4d4 <I2C_0_GetData>
    8302:	98 2f       	mov	r25, r24
    8304:	81 e0       	ldi	r24, 0x01	; 1
    8306:	91 30       	cpi	r25, 0x01	; 1
    8308:	09 f0       	breq	.+2      	; 0x830c <ds3231_responding+0x38>
    830a:	80 e0       	ldi	r24, 0x00	; 0
    830c:	89 83       	std	Y+1, r24	; 0x01
    830e:	99 81       	ldd	r25, Y+1	; 0x01
    8310:	81 e0       	ldi	r24, 0x01	; 1
    8312:	89 27       	eor	r24, r25
    8314:	88 23       	and	r24, r24
    8316:	11 f0       	breq	.+4      	; 0x831c <ds3231_responding+0x48>
    8318:	81 e0       	ldi	r24, 0x01	; 1
    831a:	01 c0       	rjmp	.+2      	; 0x831e <ds3231_responding+0x4a>
    831c:	80 e0       	ldi	r24, 0x00	; 0
    831e:	88 23       	and	r24, r24
    8320:	09 f0       	breq	.+2      	; 0x8324 <ds3231_responding+0x50>
    8322:	e1 cf       	rjmp	.-62     	; 0x82e6 <ds3231_responding+0x12>
    8324:	89 81       	ldd	r24, Y+1	; 0x01
    8326:	23 96       	adiw	r28, 0x03	; 3
    8328:	cd bf       	out	0x3d, r28	; 61
    832a:	de bf       	out	0x3e, r29	; 62
    832c:	df 91       	pop	r29
    832e:	cf 91       	pop	r28
    8330:	08 95       	ret

00008332 <convertEpochToTimeString>:
/**
 *   Converts an epoch (seconds since 1900)  into a string with format "ddd dd-mon-yyyy hh:mm:ss zzz"
 */
#define THIRTY_YEARS 946684800
char* convertEpochToTimeString(time_t epoch, char* buf, size_t size)
 {
    8332:	cf 93       	push	r28
    8334:	df 93       	push	r29
    8336:	cd b7       	in	r28, 0x3d	; 61
    8338:	de b7       	in	r29, 0x3e	; 62
    833a:	68 97       	sbiw	r28, 0x18	; 24
    833c:	cd bf       	out	0x3d, r28	; 61
    833e:	de bf       	out	0x3e, r29	; 62
    8340:	69 8b       	std	Y+17, r22	; 0x11
    8342:	7a 8b       	std	Y+18, r23	; 0x12
    8344:	8b 8b       	std	Y+19, r24	; 0x13
    8346:	9c 8b       	std	Y+20, r25	; 0x14
    8348:	4d 8b       	std	Y+21, r20	; 0x15
    834a:	5e 8b       	std	Y+22, r21	; 0x16
    834c:	2f 8b       	std	Y+23, r18	; 0x17
    834e:	38 8f       	std	Y+24, r19	; 0x18
   struct tm  ts;
	time_t t = epoch - THIRTY_YEARS;
    8350:	89 89       	ldd	r24, Y+17	; 0x11
    8352:	9a 89       	ldd	r25, Y+18	; 0x12
    8354:	ab 89       	ldd	r26, Y+19	; 0x13
    8356:	bc 89       	ldd	r27, Y+20	; 0x14
    8358:	80 58       	subi	r24, 0x80	; 128
    835a:	93 44       	sbci	r25, 0x43	; 67
    835c:	ad 46       	sbci	r26, 0x6D	; 109
    835e:	b8 43       	sbci	r27, 0x38	; 56
    8360:	8d 87       	std	Y+13, r24	; 0x0d
    8362:	9e 87       	std	Y+14, r25	; 0x0e
    8364:	af 87       	std	Y+15, r26	; 0x0f
    8366:	b8 8b       	std	Y+16, r27	; 0x10

    // Format time, "ddd dd-mon-yyyy hh:mm:ss zzz"
    ts = *localtime(&t);
    8368:	ce 01       	movw	r24, r28
    836a:	0d 96       	adiw	r24, 0x0d	; 13
    836c:	0e 94 2d 03 	call	0x65a	; 0x65a <localtime>
    8370:	2c e0       	ldi	r18, 0x0C	; 12
    8372:	fc 01       	movw	r30, r24
    8374:	ce 01       	movw	r24, r28
    8376:	01 96       	adiw	r24, 0x01	; 1
    8378:	dc 01       	movw	r26, r24
    837a:	01 90       	ld	r0, Z+
    837c:	0d 92       	st	X+, r0
    837e:	2a 95       	dec	r18
    8380:	e1 f7       	brne	.-8      	; 0x837a <convertEpochToTimeString+0x48>
    strftime(buf, size, "%a %d-%b-%Y %H:%M:%S", &ts);
    8382:	6f 89       	ldd	r22, Y+23	; 0x17
    8384:	78 8d       	ldd	r23, Y+24	; 0x18
    8386:	8d 89       	ldd	r24, Y+21	; 0x15
    8388:	9e 89       	ldd	r25, Y+22	; 0x16
    838a:	9e 01       	movw	r18, r28
    838c:	2f 5f       	subi	r18, 0xFF	; 255
    838e:	3f 4f       	sbci	r19, 0xFF	; 255
    8390:	46 e5       	ldi	r20, 0x56	; 86
    8392:	54 e4       	ldi	r21, 0x44	; 68
    8394:	0e 94 d6 03 	call	0x7ac	; 0x7ac <strftime>
   return buf;
    8398:	8d 89       	ldd	r24, Y+21	; 0x15
    839a:	9e 89       	ldd	r25, Y+22	; 0x16
 }
    839c:	68 96       	adiw	r28, 0x18	; 24
    839e:	cd bf       	out	0x3d, r28	; 61
    83a0:	de bf       	out	0x3e, r29	; 62
    83a2:	df 91       	pop	r29
    83a4:	cf 91       	pop	r28
    83a6:	08 95       	ret

000083a8 <_ZN13EepromManagerC1Ev>:
uint16_t g_clock_calibration = EEPROM_CLOCK_CALIBRATION_DEFAULT;

extern char g_tempStr[];

/* default constructor */
EepromManager::EepromManager()
    83a8:	cf 93       	push	r28
    83aa:	df 93       	push	r29
    83ac:	00 d0       	rcall	.+0      	; 0x83ae <_ZN13EepromManagerC1Ev+0x6>
    83ae:	cd b7       	in	r28, 0x3d	; 61
    83b0:	de b7       	in	r29, 0x3e	; 62
    83b2:	89 83       	std	Y+1, r24	; 0x01
    83b4:	9a 83       	std	Y+2, r25	; 0x02
{
}   /*EepromManager */
    83b6:	00 00       	nop
    83b8:	0f 90       	pop	r0
    83ba:	0f 90       	pop	r0
    83bc:	df 91       	pop	r29
    83be:	cf 91       	pop	r28
    83c0:	08 95       	ret

000083c2 <_ZN13EepromManagerD1Ev>:

/* default destructor */
EepromManager::~EepromManager()
    83c2:	cf 93       	push	r28
    83c4:	df 93       	push	r29
    83c6:	00 d0       	rcall	.+0      	; 0x83c8 <_ZN13EepromManagerD1Ev+0x6>
    83c8:	cd b7       	in	r28, 0x3d	; 61
    83ca:	de b7       	in	r29, 0x3e	; 62
    83cc:	89 83       	std	Y+1, r24	; 0x01
    83ce:	9a 83       	std	Y+2, r25	; 0x02
{
}   /*~EepromManager */
    83d0:	00 00       	nop
    83d2:	0f 90       	pop	r0
    83d4:	0f 90       	pop	r0
    83d6:	df 91       	pop	r29
    83d8:	cf 91       	pop	r28
    83da:	08 95       	ret

000083dc <_Z21avr_eeprom_write_bytejh>:
#include <avr/io.h>

typedef uint16_t eeprom_addr_t;

// to write
void avr_eeprom_write_byte(eeprom_addr_t index, uint8_t in) {
    83dc:	cf 93       	push	r28
    83de:	df 93       	push	r29
    83e0:	00 d0       	rcall	.+0      	; 0x83e2 <_Z21avr_eeprom_write_bytejh+0x6>
    83e2:	1f 92       	push	r1
    83e4:	cd b7       	in	r28, 0x3d	; 61
    83e6:	de b7       	in	r29, 0x3e	; 62
    83e8:	89 83       	std	Y+1, r24	; 0x01
    83ea:	9a 83       	std	Y+2, r25	; 0x02
    83ec:	6b 83       	std	Y+3, r22	; 0x03
	while (NVMCTRL.STATUS & NVMCTRL_EEBUSY_bm);
    83ee:	80 e0       	ldi	r24, 0x00	; 0
    83f0:	90 e1       	ldi	r25, 0x10	; 16
    83f2:	fc 01       	movw	r30, r24
    83f4:	82 81       	ldd	r24, Z+2	; 0x02
    83f6:	88 2f       	mov	r24, r24
    83f8:	90 e0       	ldi	r25, 0x00	; 0
    83fa:	82 70       	andi	r24, 0x02	; 2
    83fc:	99 27       	eor	r25, r25
    83fe:	21 e0       	ldi	r18, 0x01	; 1
    8400:	89 2b       	or	r24, r25
    8402:	09 f4       	brne	.+2      	; 0x8406 <_Z21avr_eeprom_write_bytejh+0x2a>
    8404:	20 e0       	ldi	r18, 0x00	; 0
    8406:	22 23       	and	r18, r18
    8408:	09 f0       	breq	.+2      	; 0x840c <_Z21avr_eeprom_write_bytejh+0x30>
    840a:	f1 cf       	rjmp	.-30     	; 0x83ee <_Z21avr_eeprom_write_bytejh+0x12>
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_EEERWR_gc);
    840c:	8d e9       	ldi	r24, 0x9D	; 157
    840e:	93 e1       	ldi	r25, 0x13	; 19
    8410:	84 bf       	out	0x34, r24	; 52
    8412:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
	*(uint8_t*)(eeprom_addr_t)(MAPPED_EEPROM_START+index) = in;
    8416:	89 81       	ldd	r24, Y+1	; 0x01
    8418:	9a 81       	ldd	r25, Y+2	; 0x02
    841a:	9c 5e       	subi	r25, 0xEC	; 236
    841c:	2b 81       	ldd	r18, Y+3	; 0x03
    841e:	fc 01       	movw	r30, r24
    8420:	20 83       	st	Z, r18
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_NONE_gc);
    8422:	8d e9       	ldi	r24, 0x9D	; 157
    8424:	90 e0       	ldi	r25, 0x00	; 0
    8426:	84 bf       	out	0x34, r24	; 52
    8428:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
}
    842c:	00 00       	nop
    842e:	23 96       	adiw	r28, 0x03	; 3
    8430:	cd bf       	out	0x3d, r28	; 61
    8432:	de bf       	out	0x3e, r29	; 62
    8434:	df 91       	pop	r29
    8436:	cf 91       	pop	r28
    8438:	08 95       	ret

0000843a <_Z21avr_eeprom_write_wordjj>:

void avr_eeprom_write_word(eeprom_addr_t index, uint16_t in) {
    843a:	cf 93       	push	r28
    843c:	df 93       	push	r29
    843e:	00 d0       	rcall	.+0      	; 0x8440 <_Z21avr_eeprom_write_wordjj+0x6>
    8440:	00 d0       	rcall	.+0      	; 0x8442 <_Z21avr_eeprom_write_wordjj+0x8>
    8442:	cd b7       	in	r28, 0x3d	; 61
    8444:	de b7       	in	r29, 0x3e	; 62
    8446:	89 83       	std	Y+1, r24	; 0x01
    8448:	9a 83       	std	Y+2, r25	; 0x02
    844a:	6b 83       	std	Y+3, r22	; 0x03
    844c:	7c 83       	std	Y+4, r23	; 0x04
	while (NVMCTRL.STATUS & NVMCTRL_EEBUSY_bm);
    844e:	80 e0       	ldi	r24, 0x00	; 0
    8450:	90 e1       	ldi	r25, 0x10	; 16
    8452:	fc 01       	movw	r30, r24
    8454:	82 81       	ldd	r24, Z+2	; 0x02
    8456:	88 2f       	mov	r24, r24
    8458:	90 e0       	ldi	r25, 0x00	; 0
    845a:	82 70       	andi	r24, 0x02	; 2
    845c:	99 27       	eor	r25, r25
    845e:	21 e0       	ldi	r18, 0x01	; 1
    8460:	89 2b       	or	r24, r25
    8462:	09 f4       	brne	.+2      	; 0x8466 <_Z21avr_eeprom_write_wordjj+0x2c>
    8464:	20 e0       	ldi	r18, 0x00	; 0
    8466:	22 23       	and	r18, r18
    8468:	09 f0       	breq	.+2      	; 0x846c <_Z21avr_eeprom_write_wordjj+0x32>
    846a:	f1 cf       	rjmp	.-30     	; 0x844e <_Z21avr_eeprom_write_wordjj+0x14>
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_EEERWR_gc);
    846c:	8d e9       	ldi	r24, 0x9D	; 157
    846e:	93 e1       	ldi	r25, 0x13	; 19
    8470:	84 bf       	out	0x34, r24	; 52
    8472:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
	*(uint16_t*)(eeprom_addr_t)(MAPPED_EEPROM_START+index) = in;
    8476:	89 81       	ldd	r24, Y+1	; 0x01
    8478:	9a 81       	ldd	r25, Y+2	; 0x02
    847a:	9c 5e       	subi	r25, 0xEC	; 236
    847c:	9c 01       	movw	r18, r24
    847e:	8b 81       	ldd	r24, Y+3	; 0x03
    8480:	9c 81       	ldd	r25, Y+4	; 0x04
    8482:	f9 01       	movw	r30, r18
    8484:	80 83       	st	Z, r24
    8486:	91 83       	std	Z+1, r25	; 0x01
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_NONE_gc);
    8488:	8d e9       	ldi	r24, 0x9D	; 157
    848a:	90 e0       	ldi	r25, 0x00	; 0
    848c:	84 bf       	out	0x34, r24	; 52
    848e:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
}
    8492:	00 00       	nop
    8494:	24 96       	adiw	r28, 0x04	; 4
    8496:	cd bf       	out	0x3d, r28	; 61
    8498:	de bf       	out	0x3e, r29	; 62
    849a:	df 91       	pop	r29
    849c:	cf 91       	pop	r28
    849e:	08 95       	ret

000084a0 <_Z22avr_eeprom_write_dwordjm>:

void avr_eeprom_write_dword(eeprom_addr_t index, uint32_t in) {
    84a0:	cf 93       	push	r28
    84a2:	df 93       	push	r29
    84a4:	cd b7       	in	r28, 0x3d	; 61
    84a6:	de b7       	in	r29, 0x3e	; 62
    84a8:	26 97       	sbiw	r28, 0x06	; 6
    84aa:	cd bf       	out	0x3d, r28	; 61
    84ac:	de bf       	out	0x3e, r29	; 62
    84ae:	89 83       	std	Y+1, r24	; 0x01
    84b0:	9a 83       	std	Y+2, r25	; 0x02
    84b2:	4b 83       	std	Y+3, r20	; 0x03
    84b4:	5c 83       	std	Y+4, r21	; 0x04
    84b6:	6d 83       	std	Y+5, r22	; 0x05
    84b8:	7e 83       	std	Y+6, r23	; 0x06
	while (NVMCTRL.STATUS & NVMCTRL_EEBUSY_bm);
    84ba:	80 e0       	ldi	r24, 0x00	; 0
    84bc:	90 e1       	ldi	r25, 0x10	; 16
    84be:	fc 01       	movw	r30, r24
    84c0:	82 81       	ldd	r24, Z+2	; 0x02
    84c2:	88 2f       	mov	r24, r24
    84c4:	90 e0       	ldi	r25, 0x00	; 0
    84c6:	82 70       	andi	r24, 0x02	; 2
    84c8:	99 27       	eor	r25, r25
    84ca:	21 e0       	ldi	r18, 0x01	; 1
    84cc:	89 2b       	or	r24, r25
    84ce:	09 f4       	brne	.+2      	; 0x84d2 <_Z22avr_eeprom_write_dwordjm+0x32>
    84d0:	20 e0       	ldi	r18, 0x00	; 0
    84d2:	22 23       	and	r18, r18
    84d4:	09 f0       	breq	.+2      	; 0x84d8 <_Z22avr_eeprom_write_dwordjm+0x38>
    84d6:	f1 cf       	rjmp	.-30     	; 0x84ba <_Z22avr_eeprom_write_dwordjm+0x1a>
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_EEERWR_gc);
    84d8:	8d e9       	ldi	r24, 0x9D	; 157
    84da:	93 e1       	ldi	r25, 0x13	; 19
    84dc:	84 bf       	out	0x34, r24	; 52
    84de:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
	*(uint32_t*)(eeprom_addr_t)(MAPPED_EEPROM_START+index) = in;
    84e2:	89 81       	ldd	r24, Y+1	; 0x01
    84e4:	9a 81       	ldd	r25, Y+2	; 0x02
    84e6:	9c 5e       	subi	r25, 0xEC	; 236
    84e8:	9c 01       	movw	r18, r24
    84ea:	8b 81       	ldd	r24, Y+3	; 0x03
    84ec:	9c 81       	ldd	r25, Y+4	; 0x04
    84ee:	ad 81       	ldd	r26, Y+5	; 0x05
    84f0:	be 81       	ldd	r27, Y+6	; 0x06
    84f2:	f9 01       	movw	r30, r18
    84f4:	80 83       	st	Z, r24
    84f6:	91 83       	std	Z+1, r25	; 0x01
    84f8:	a2 83       	std	Z+2, r26	; 0x02
    84fa:	b3 83       	std	Z+3, r27	; 0x03
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_NONE_gc);
    84fc:	8d e9       	ldi	r24, 0x9D	; 157
    84fe:	90 e0       	ldi	r25, 0x00	; 0
    8500:	84 bf       	out	0x34, r24	; 52
    8502:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
}
    8506:	00 00       	nop
    8508:	26 96       	adiw	r28, 0x06	; 6
    850a:	cd bf       	out	0x3d, r28	; 61
    850c:	de bf       	out	0x3e, r29	; 62
    850e:	df 91       	pop	r29
    8510:	cf 91       	pop	r28
    8512:	08 95       	ret

00008514 <_Z22avr_eeprom_write_floatjf>:

void avr_eeprom_write_float(eeprom_addr_t index, float in) {
    8514:	cf 93       	push	r28
    8516:	df 93       	push	r29
    8518:	cd b7       	in	r28, 0x3d	; 61
    851a:	de b7       	in	r29, 0x3e	; 62
    851c:	26 97       	sbiw	r28, 0x06	; 6
    851e:	cd bf       	out	0x3d, r28	; 61
    8520:	de bf       	out	0x3e, r29	; 62
    8522:	89 83       	std	Y+1, r24	; 0x01
    8524:	9a 83       	std	Y+2, r25	; 0x02
    8526:	4b 83       	std	Y+3, r20	; 0x03
    8528:	5c 83       	std	Y+4, r21	; 0x04
    852a:	6d 83       	std	Y+5, r22	; 0x05
    852c:	7e 83       	std	Y+6, r23	; 0x06
	while (NVMCTRL.STATUS & NVMCTRL_EEBUSY_bm);
    852e:	80 e0       	ldi	r24, 0x00	; 0
    8530:	90 e1       	ldi	r25, 0x10	; 16
    8532:	fc 01       	movw	r30, r24
    8534:	82 81       	ldd	r24, Z+2	; 0x02
    8536:	88 2f       	mov	r24, r24
    8538:	90 e0       	ldi	r25, 0x00	; 0
    853a:	82 70       	andi	r24, 0x02	; 2
    853c:	99 27       	eor	r25, r25
    853e:	21 e0       	ldi	r18, 0x01	; 1
    8540:	89 2b       	or	r24, r25
    8542:	09 f4       	brne	.+2      	; 0x8546 <_Z22avr_eeprom_write_floatjf+0x32>
    8544:	20 e0       	ldi	r18, 0x00	; 0
    8546:	22 23       	and	r18, r18
    8548:	09 f0       	breq	.+2      	; 0x854c <_Z22avr_eeprom_write_floatjf+0x38>
    854a:	f1 cf       	rjmp	.-30     	; 0x852e <_Z22avr_eeprom_write_floatjf+0x1a>
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_EEERWR_gc);
    854c:	8d e9       	ldi	r24, 0x9D	; 157
    854e:	93 e1       	ldi	r25, 0x13	; 19
    8550:	84 bf       	out	0x34, r24	; 52
    8552:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
	*(float*)(eeprom_addr_t)(MAPPED_EEPROM_START+index) = in;
    8556:	89 81       	ldd	r24, Y+1	; 0x01
    8558:	9a 81       	ldd	r25, Y+2	; 0x02
    855a:	9c 5e       	subi	r25, 0xEC	; 236
    855c:	9c 01       	movw	r18, r24
    855e:	8b 81       	ldd	r24, Y+3	; 0x03
    8560:	9c 81       	ldd	r25, Y+4	; 0x04
    8562:	ad 81       	ldd	r26, Y+5	; 0x05
    8564:	be 81       	ldd	r27, Y+6	; 0x06
    8566:	f9 01       	movw	r30, r18
    8568:	80 83       	st	Z, r24
    856a:	91 83       	std	Z+1, r25	; 0x01
    856c:	a2 83       	std	Z+2, r26	; 0x02
    856e:	b3 83       	std	Z+3, r27	; 0x03
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_NONE_gc);
    8570:	8d e9       	ldi	r24, 0x9D	; 157
    8572:	90 e0       	ldi	r25, 0x00	; 0
    8574:	84 bf       	out	0x34, r24	; 52
    8576:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
}
    857a:	00 00       	nop
    857c:	26 96       	adiw	r28, 0x06	; 6
    857e:	cd bf       	out	0x3d, r28	; 61
    8580:	de bf       	out	0x3e, r29	; 62
    8582:	df 91       	pop	r29
    8584:	cf 91       	pop	r28
    8586:	08 95       	ret

00008588 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>:

void EepromManager::updateEEPROMVar(EE_var_t v, void* val)
{
    8588:	cf 92       	push	r12
    858a:	df 92       	push	r13
    858c:	ef 92       	push	r14
    858e:	ff 92       	push	r15
    8590:	0f 93       	push	r16
    8592:	1f 93       	push	r17
    8594:	cf 93       	push	r28
    8596:	df 93       	push	r29
    8598:	cd b7       	in	r28, 0x3d	; 61
    859a:	de b7       	in	r29, 0x3e	; 62
    859c:	e6 97       	sbiw	r28, 0x36	; 54
    859e:	cd bf       	out	0x3d, r28	; 61
    85a0:	de bf       	out	0x3e, r29	; 62
    85a2:	89 ab       	std	Y+49, r24	; 0x31
    85a4:	9a ab       	std	Y+50, r25	; 0x32
    85a6:	6b ab       	std	Y+51, r22	; 0x33
    85a8:	7c ab       	std	Y+52, r23	; 0x34
    85aa:	4d ab       	std	Y+53, r20	; 0x35
    85ac:	5e ab       	std	Y+54, r21	; 0x36
	if(!val)
    85ae:	8d a9       	ldd	r24, Y+53	; 0x35
    85b0:	9e a9       	ldd	r25, Y+54	; 0x36
    85b2:	89 2b       	or	r24, r25
    85b4:	09 f4       	brne	.+2      	; 0x85b8 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x30>
    85b6:	f2 c3       	rjmp	.+2020   	; 0x8d9c <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x814>
	{
		return;
	}

	switch(v)
    85b8:	8b a9       	ldd	r24, Y+51	; 0x33
    85ba:	9c a9       	ldd	r25, Y+52	; 0x34
    85bc:	09 2e       	mov	r0, r25
    85be:	00 0c       	add	r0, r0
    85c0:	aa 0b       	sbc	r26, r26
    85c2:	bb 0b       	sbc	r27, r27
    85c4:	40 e0       	ldi	r20, 0x00	; 0
    85c6:	50 e0       	ldi	r21, 0x00	; 0
    85c8:	21 e1       	ldi	r18, 0x11	; 17
    85ca:	31 e0       	ldi	r19, 0x01	; 1
    85cc:	84 1b       	sub	r24, r20
    85ce:	95 0b       	sbc	r25, r21
    85d0:	28 17       	cp	r18, r24
    85d2:	39 07       	cpc	r19, r25
    85d4:	08 f4       	brcc	.+2      	; 0x85d8 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x50>
    85d6:	e4 c3       	rjmp	.+1992   	; 0x8da0 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x818>
    85d8:	88 57       	subi	r24, 0x78	; 120
    85da:	9f 4f       	sbci	r25, 0xFF	; 255
    85dc:	fc 01       	movw	r30, r24
    85de:	0c 94 7f 7d 	jmp	0xfafe	; 0xfafe <__tablejump2__>
	{
		case Frequency:
		{
			if(*(uint32_t*)val != eeprom_read_dword(&(EepromManager::ee_vars.frequency)))
    85e2:	8d a9       	ldd	r24, Y+53	; 0x35
    85e4:	9e a9       	ldd	r25, Y+54	; 0x36
    85e6:	fc 01       	movw	r30, r24
    85e8:	c0 80       	ld	r12, Z
    85ea:	d1 80       	ldd	r13, Z+1	; 0x01
    85ec:	e2 80       	ldd	r14, Z+2	; 0x02
    85ee:	f3 80       	ldd	r15, Z+3	; 0x03
    85f0:	84 e6       	ldi	r24, 0x64	; 100
    85f2:	90 e0       	ldi	r25, 0x00	; 0
    85f4:	0e 94 d1 84 	call	0x109a2	; 0x109a2 <eeprom_read_dword>
    85f8:	dc 01       	movw	r26, r24
    85fa:	cb 01       	movw	r24, r22
    85fc:	c8 16       	cp	r12, r24
    85fe:	d9 06       	cpc	r13, r25
    8600:	ea 06       	cpc	r14, r26
    8602:	fb 06       	cpc	r15, r27
    8604:	09 f4       	brne	.+2      	; 0x8608 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x80>
    8606:	ce c3       	rjmp	.+1948   	; 0x8da4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x81c>
			{
				avr_eeprom_write_dword(Frequency, *(uint32_t*)val);
    8608:	8d a9       	ldd	r24, Y+53	; 0x35
    860a:	9e a9       	ldd	r25, Y+54	; 0x36
    860c:	fc 01       	movw	r30, r24
    860e:	80 81       	ld	r24, Z
    8610:	91 81       	ldd	r25, Z+1	; 0x01
    8612:	a2 81       	ldd	r26, Z+2	; 0x02
    8614:	b3 81       	ldd	r27, Z+3	; 0x03
    8616:	ac 01       	movw	r20, r24
    8618:	bd 01       	movw	r22, r26
    861a:	84 e6       	ldi	r24, 0x64	; 100
    861c:	90 e0       	ldi	r25, 0x00	; 0
    861e:	0e 94 50 42 	call	0x84a0	; 0x84a0 <_Z22avr_eeprom_write_dwordjm>
			}	
		}
		break;
    8622:	c0 c3       	rjmp	.+1920   	; 0x8da4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x81c>
		
		case RTTY_offset:
		{
			if(*(uint32_t*)val != eeprom_read_dword(&(EepromManager::ee_vars.rtty_offset)))
    8624:	8d a9       	ldd	r24, Y+53	; 0x35
    8626:	9e a9       	ldd	r25, Y+54	; 0x36
    8628:	fc 01       	movw	r30, r24
    862a:	c0 80       	ld	r12, Z
    862c:	d1 80       	ldd	r13, Z+1	; 0x01
    862e:	e2 80       	ldd	r14, Z+2	; 0x02
    8630:	f3 80       	ldd	r15, Z+3	; 0x03
    8632:	8c e6       	ldi	r24, 0x6C	; 108
    8634:	90 e0       	ldi	r25, 0x00	; 0
    8636:	0e 94 d1 84 	call	0x109a2	; 0x109a2 <eeprom_read_dword>
    863a:	dc 01       	movw	r26, r24
    863c:	cb 01       	movw	r24, r22
    863e:	c8 16       	cp	r12, r24
    8640:	d9 06       	cpc	r13, r25
    8642:	ea 06       	cpc	r14, r26
    8644:	fb 06       	cpc	r15, r27
    8646:	09 f4       	brne	.+2      	; 0x864a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0xc2>
    8648:	af c3       	rjmp	.+1886   	; 0x8da8 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x820>
			{
				avr_eeprom_write_dword(RTTY_offset, *(uint32_t*)val);
    864a:	8d a9       	ldd	r24, Y+53	; 0x35
    864c:	9e a9       	ldd	r25, Y+54	; 0x36
    864e:	fc 01       	movw	r30, r24
    8650:	80 81       	ld	r24, Z
    8652:	91 81       	ldd	r25, Z+1	; 0x01
    8654:	a2 81       	ldd	r26, Z+2	; 0x02
    8656:	b3 81       	ldd	r27, Z+3	; 0x03
    8658:	ac 01       	movw	r20, r24
    865a:	bd 01       	movw	r22, r26
    865c:	8c e6       	ldi	r24, 0x6C	; 108
    865e:	90 e0       	ldi	r25, 0x00	; 0
    8660:	0e 94 50 42 	call	0x84a0	; 0x84a0 <_Z22avr_eeprom_write_dwordjm>
			}
		}
		break;
    8664:	a1 c3       	rjmp	.+1858   	; 0x8da8 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x820>
		
		case RF_Power:
		{
			if(*(uint16_t*)val != eeprom_read_word(&(EepromManager::ee_vars.rf_power)))
    8666:	8d a9       	ldd	r24, Y+53	; 0x35
    8668:	9e a9       	ldd	r25, Y+54	; 0x36
    866a:	fc 01       	movw	r30, r24
    866c:	00 81       	ld	r16, Z
    866e:	11 81       	ldd	r17, Z+1	; 0x01
    8670:	84 e7       	ldi	r24, 0x74	; 116
    8672:	90 e0       	ldi	r25, 0x00	; 0
    8674:	0e 94 d8 84 	call	0x109b0	; 0x109b0 <eeprom_read_word>
    8678:	08 17       	cp	r16, r24
    867a:	19 07       	cpc	r17, r25
    867c:	09 f4       	brne	.+2      	; 0x8680 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0xf8>
    867e:	96 c3       	rjmp	.+1836   	; 0x8dac <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x824>
			{
				avr_eeprom_write_word(RF_Power, *(uint16_t*)val);
    8680:	8d a9       	ldd	r24, Y+53	; 0x35
    8682:	9e a9       	ldd	r25, Y+54	; 0x36
    8684:	fc 01       	movw	r30, r24
    8686:	80 81       	ld	r24, Z
    8688:	91 81       	ldd	r25, Z+1	; 0x01
    868a:	bc 01       	movw	r22, r24
    868c:	84 e7       	ldi	r24, 0x74	; 116
    868e:	90 e0       	ldi	r25, 0x00	; 0
    8690:	0e 94 1d 42 	call	0x843a	; 0x843a <_Z21avr_eeprom_write_wordjj>
			}			
		}
		break;
    8694:	8b c3       	rjmp	.+1814   	; 0x8dac <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x824>
		
		case StationID_text:
		{
			int cnt = 0;
    8696:	19 82       	std	Y+1, r1	; 0x01
    8698:	1a 82       	std	Y+2, r1	; 0x02
			char* char_addr = (char*)val;
    869a:	8d a9       	ldd	r24, Y+53	; 0x35
    869c:	9e a9       	ldd	r25, Y+54	; 0x36
    869e:	8b 83       	std	Y+3, r24	; 0x03
    86a0:	9c 83       	std	Y+4, r25	; 0x04
			char c = *char_addr++;
    86a2:	8b 81       	ldd	r24, Y+3	; 0x03
    86a4:	9c 81       	ldd	r25, Y+4	; 0x04
    86a6:	9c 01       	movw	r18, r24
    86a8:	2f 5f       	subi	r18, 0xFF	; 255
    86aa:	3f 4f       	sbci	r19, 0xFF	; 255
    86ac:	2b 83       	std	Y+3, r18	; 0x03
    86ae:	3c 83       	std	Y+4, r19	; 0x04
    86b0:	fc 01       	movw	r30, r24
    86b2:	80 81       	ld	r24, Z
    86b4:	8d 83       	std	Y+5, r24	; 0x05
			char q;
			
			eeprom_addr_t j = (eeprom_addr_t)StationID_text;
    86b6:	86 e1       	ldi	r24, 0x16	; 22
    86b8:	90 e0       	ldi	r25, 0x00	; 0
    86ba:	8e 83       	std	Y+6, r24	; 0x06
    86bc:	9f 83       	std	Y+7, r25	; 0x07

			while(c && (cnt<MAX_PATTERN_TEXT_LENGTH))
    86be:	8d 81       	ldd	r24, Y+5	; 0x05
    86c0:	88 23       	and	r24, r24
    86c2:	39 f1       	breq	.+78     	; 0x8712 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x18a>
    86c4:	89 81       	ldd	r24, Y+1	; 0x01
    86c6:	9a 81       	ldd	r25, Y+2	; 0x02
    86c8:	44 97       	sbiw	r24, 0x14	; 20
    86ca:	1c f5       	brge	.+70     	; 0x8712 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x18a>
			{
				q = (char)eeprom_read_byte((uint8_t*)j);
    86cc:	8e 81       	ldd	r24, Y+6	; 0x06
    86ce:	9f 81       	ldd	r25, Y+7	; 0x07
    86d0:	0e 94 c9 84 	call	0x10992	; 0x10992 <eeprom_read_byte>
    86d4:	8b a7       	std	Y+43, r24	; 0x2b
				if(c != q)
    86d6:	9d 81       	ldd	r25, Y+5	; 0x05
    86d8:	8b a5       	ldd	r24, Y+43	; 0x2b
    86da:	98 17       	cp	r25, r24
    86dc:	29 f0       	breq	.+10     	; 0x86e8 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x160>
				{
					avr_eeprom_write_byte(j, c);
    86de:	8e 81       	ldd	r24, Y+6	; 0x06
    86e0:	9f 81       	ldd	r25, Y+7	; 0x07
    86e2:	6d 81       	ldd	r22, Y+5	; 0x05
    86e4:	0e 94 ee 41 	call	0x83dc	; 0x83dc <_Z21avr_eeprom_write_bytejh>
				}
				
				cnt++;
    86e8:	89 81       	ldd	r24, Y+1	; 0x01
    86ea:	9a 81       	ldd	r25, Y+2	; 0x02
    86ec:	01 96       	adiw	r24, 0x01	; 1
    86ee:	89 83       	std	Y+1, r24	; 0x01
    86f0:	9a 83       	std	Y+2, r25	; 0x02
				c = *char_addr++;
    86f2:	8b 81       	ldd	r24, Y+3	; 0x03
    86f4:	9c 81       	ldd	r25, Y+4	; 0x04
    86f6:	9c 01       	movw	r18, r24
    86f8:	2f 5f       	subi	r18, 0xFF	; 255
    86fa:	3f 4f       	sbci	r19, 0xFF	; 255
    86fc:	2b 83       	std	Y+3, r18	; 0x03
    86fe:	3c 83       	std	Y+4, r19	; 0x04
    8700:	fc 01       	movw	r30, r24
    8702:	80 81       	ld	r24, Z
    8704:	8d 83       	std	Y+5, r24	; 0x05
				j++;
    8706:	8e 81       	ldd	r24, Y+6	; 0x06
    8708:	9f 81       	ldd	r25, Y+7	; 0x07
    870a:	01 96       	adiw	r24, 0x01	; 1
    870c:	8e 83       	std	Y+6, r24	; 0x06
    870e:	9f 83       	std	Y+7, r25	; 0x07
			char c = *char_addr++;
			char q;
			
			eeprom_addr_t j = (eeprom_addr_t)StationID_text;

			while(c && (cnt<MAX_PATTERN_TEXT_LENGTH))
    8710:	d6 cf       	rjmp	.-84     	; 0x86be <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x136>
				cnt++;
				c = *char_addr++;
				j++;
			}

			avr_eeprom_write_byte(j, 0);
    8712:	8e 81       	ldd	r24, Y+6	; 0x06
    8714:	9f 81       	ldd	r25, Y+7	; 0x07
    8716:	60 e0       	ldi	r22, 0x00	; 0
    8718:	0e 94 ee 41 	call	0x83dc	; 0x83dc <_Z21avr_eeprom_write_bytejh>
		}
		break;
    871c:	6c c3       	rjmp	.+1752   	; 0x8df6 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x86e>

		case Pattern_text:
		{
			int cnt = 0;
    871e:	18 86       	std	Y+8, r1	; 0x08
    8720:	19 86       	std	Y+9, r1	; 0x09
			char* char_addr = (char*)val;
    8722:	8d a9       	ldd	r24, Y+53	; 0x35
    8724:	9e a9       	ldd	r25, Y+54	; 0x36
    8726:	8a 87       	std	Y+10, r24	; 0x0a
    8728:	9b 87       	std	Y+11, r25	; 0x0b
			char c = *char_addr++;
    872a:	8a 85       	ldd	r24, Y+10	; 0x0a
    872c:	9b 85       	ldd	r25, Y+11	; 0x0b
    872e:	9c 01       	movw	r18, r24
    8730:	2f 5f       	subi	r18, 0xFF	; 255
    8732:	3f 4f       	sbci	r19, 0xFF	; 255
    8734:	2a 87       	std	Y+10, r18	; 0x0a
    8736:	3b 87       	std	Y+11, r19	; 0x0b
    8738:	fc 01       	movw	r30, r24
    873a:	80 81       	ld	r24, Z
    873c:	8c 87       	std	Y+12, r24	; 0x0c
			char q;
			
			eeprom_addr_t j = (eeprom_addr_t)Pattern_text;
    873e:	8f e2       	ldi	r24, 0x2F	; 47
    8740:	90 e0       	ldi	r25, 0x00	; 0
    8742:	8d 87       	std	Y+13, r24	; 0x0d
    8744:	9e 87       	std	Y+14, r25	; 0x0e

			while(c && (cnt<MAX_PATTERN_TEXT_LENGTH))
    8746:	8c 85       	ldd	r24, Y+12	; 0x0c
    8748:	88 23       	and	r24, r24
    874a:	39 f1       	breq	.+78     	; 0x879a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x212>
    874c:	88 85       	ldd	r24, Y+8	; 0x08
    874e:	99 85       	ldd	r25, Y+9	; 0x09
    8750:	44 97       	sbiw	r24, 0x14	; 20
    8752:	1c f5       	brge	.+70     	; 0x879a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x212>
			{
				q = (char)eeprom_read_byte((uint8_t*)j);
    8754:	8d 85       	ldd	r24, Y+13	; 0x0d
    8756:	9e 85       	ldd	r25, Y+14	; 0x0e
    8758:	0e 94 c9 84 	call	0x10992	; 0x10992 <eeprom_read_byte>
    875c:	8c a7       	std	Y+44, r24	; 0x2c
				if(c != q)
    875e:	9c 85       	ldd	r25, Y+12	; 0x0c
    8760:	8c a5       	ldd	r24, Y+44	; 0x2c
    8762:	98 17       	cp	r25, r24
    8764:	29 f0       	breq	.+10     	; 0x8770 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x1e8>
				{
					avr_eeprom_write_byte(j, c);
    8766:	8d 85       	ldd	r24, Y+13	; 0x0d
    8768:	9e 85       	ldd	r25, Y+14	; 0x0e
    876a:	6c 85       	ldd	r22, Y+12	; 0x0c
    876c:	0e 94 ee 41 	call	0x83dc	; 0x83dc <_Z21avr_eeprom_write_bytejh>
				}
				
				cnt++;
    8770:	88 85       	ldd	r24, Y+8	; 0x08
    8772:	99 85       	ldd	r25, Y+9	; 0x09
    8774:	01 96       	adiw	r24, 0x01	; 1
    8776:	88 87       	std	Y+8, r24	; 0x08
    8778:	99 87       	std	Y+9, r25	; 0x09
				c = *char_addr++;
    877a:	8a 85       	ldd	r24, Y+10	; 0x0a
    877c:	9b 85       	ldd	r25, Y+11	; 0x0b
    877e:	9c 01       	movw	r18, r24
    8780:	2f 5f       	subi	r18, 0xFF	; 255
    8782:	3f 4f       	sbci	r19, 0xFF	; 255
    8784:	2a 87       	std	Y+10, r18	; 0x0a
    8786:	3b 87       	std	Y+11, r19	; 0x0b
    8788:	fc 01       	movw	r30, r24
    878a:	80 81       	ld	r24, Z
    878c:	8c 87       	std	Y+12, r24	; 0x0c
				j++;
    878e:	8d 85       	ldd	r24, Y+13	; 0x0d
    8790:	9e 85       	ldd	r25, Y+14	; 0x0e
    8792:	01 96       	adiw	r24, 0x01	; 1
    8794:	8d 87       	std	Y+13, r24	; 0x0d
    8796:	9e 87       	std	Y+14, r25	; 0x0e
			char c = *char_addr++;
			char q;
			
			eeprom_addr_t j = (eeprom_addr_t)Pattern_text;

			while(c && (cnt<MAX_PATTERN_TEXT_LENGTH))
    8798:	d6 cf       	rjmp	.-84     	; 0x8746 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x1be>
				cnt++;
				c = *char_addr++;
				j++;
			}

			avr_eeprom_write_byte(j, 0);
    879a:	8d 85       	ldd	r24, Y+13	; 0x0d
    879c:	9e 85       	ldd	r25, Y+14	; 0x0e
    879e:	60 e0       	ldi	r22, 0x00	; 0
    87a0:	0e 94 ee 41 	call	0x83dc	; 0x83dc <_Z21avr_eeprom_write_bytejh>
		}
		break;
    87a4:	28 c3       	rjmp	.+1616   	; 0x8df6 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x86e>

		case UnlockCode:
		{
			int cnt = 0;
    87a6:	1f 86       	std	Y+15, r1	; 0x0f
    87a8:	18 8a       	std	Y+16, r1	; 0x10
			char* char_addr = (char*)val;
    87aa:	8d a9       	ldd	r24, Y+53	; 0x35
    87ac:	9e a9       	ldd	r25, Y+54	; 0x36
    87ae:	89 8b       	std	Y+17, r24	; 0x11
    87b0:	9a 8b       	std	Y+18, r25	; 0x12
			char c = *char_addr++;
    87b2:	89 89       	ldd	r24, Y+17	; 0x11
    87b4:	9a 89       	ldd	r25, Y+18	; 0x12
    87b6:	9c 01       	movw	r18, r24
    87b8:	2f 5f       	subi	r18, 0xFF	; 255
    87ba:	3f 4f       	sbci	r19, 0xFF	; 255
    87bc:	29 8b       	std	Y+17, r18	; 0x11
    87be:	3a 8b       	std	Y+18, r19	; 0x12
    87c0:	fc 01       	movw	r30, r24
    87c2:	80 81       	ld	r24, Z
    87c4:	8b 8b       	std	Y+19, r24	; 0x13
			char q;
			
			eeprom_addr_t j = (eeprom_addr_t)UnlockCode;
    87c6:	88 e4       	ldi	r24, 0x48	; 72
    87c8:	90 e0       	ldi	r25, 0x00	; 0
    87ca:	8c 8b       	std	Y+20, r24	; 0x14
    87cc:	9d 8b       	std	Y+21, r25	; 0x15

			while(c && (cnt<MAX_UNLOCK_CODE_LENGTH))
    87ce:	8b 89       	ldd	r24, Y+19	; 0x13
    87d0:	88 23       	and	r24, r24
    87d2:	39 f1       	breq	.+78     	; 0x8822 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x29a>
    87d4:	8f 85       	ldd	r24, Y+15	; 0x0f
    87d6:	98 89       	ldd	r25, Y+16	; 0x10
    87d8:	08 97       	sbiw	r24, 0x08	; 8
    87da:	1c f5       	brge	.+70     	; 0x8822 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x29a>
			{
				q = (char)eeprom_read_byte((uint8_t*)j);
    87dc:	8c 89       	ldd	r24, Y+20	; 0x14
    87de:	9d 89       	ldd	r25, Y+21	; 0x15
    87e0:	0e 94 c9 84 	call	0x10992	; 0x10992 <eeprom_read_byte>
    87e4:	8d a7       	std	Y+45, r24	; 0x2d
				if(c != q)
    87e6:	9b 89       	ldd	r25, Y+19	; 0x13
    87e8:	8d a5       	ldd	r24, Y+45	; 0x2d
    87ea:	98 17       	cp	r25, r24
    87ec:	29 f0       	breq	.+10     	; 0x87f8 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x270>
				{
					avr_eeprom_write_byte(j, c);
    87ee:	8c 89       	ldd	r24, Y+20	; 0x14
    87f0:	9d 89       	ldd	r25, Y+21	; 0x15
    87f2:	6b 89       	ldd	r22, Y+19	; 0x13
    87f4:	0e 94 ee 41 	call	0x83dc	; 0x83dc <_Z21avr_eeprom_write_bytejh>
				}
				
				cnt++;
    87f8:	8f 85       	ldd	r24, Y+15	; 0x0f
    87fa:	98 89       	ldd	r25, Y+16	; 0x10
    87fc:	01 96       	adiw	r24, 0x01	; 1
    87fe:	8f 87       	std	Y+15, r24	; 0x0f
    8800:	98 8b       	std	Y+16, r25	; 0x10
				j++;
    8802:	8c 89       	ldd	r24, Y+20	; 0x14
    8804:	9d 89       	ldd	r25, Y+21	; 0x15
    8806:	01 96       	adiw	r24, 0x01	; 1
    8808:	8c 8b       	std	Y+20, r24	; 0x14
    880a:	9d 8b       	std	Y+21, r25	; 0x15
				c = *char_addr++;
    880c:	89 89       	ldd	r24, Y+17	; 0x11
    880e:	9a 89       	ldd	r25, Y+18	; 0x12
    8810:	9c 01       	movw	r18, r24
    8812:	2f 5f       	subi	r18, 0xFF	; 255
    8814:	3f 4f       	sbci	r19, 0xFF	; 255
    8816:	29 8b       	std	Y+17, r18	; 0x11
    8818:	3a 8b       	std	Y+18, r19	; 0x12
    881a:	fc 01       	movw	r30, r24
    881c:	80 81       	ld	r24, Z
    881e:	8b 8b       	std	Y+19, r24	; 0x13
			char c = *char_addr++;
			char q;
			
			eeprom_addr_t j = (eeprom_addr_t)UnlockCode;

			while(c && (cnt<MAX_UNLOCK_CODE_LENGTH))
    8820:	d6 cf       	rjmp	.-84     	; 0x87ce <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x246>
				cnt++;
				j++;
				c = *char_addr++;
			}

			avr_eeprom_write_byte(j, 0);
    8822:	8c 89       	ldd	r24, Y+20	; 0x14
    8824:	9d 89       	ldd	r25, Y+21	; 0x15
    8826:	60 e0       	ldi	r22, 0x00	; 0
    8828:	0e 94 ee 41 	call	0x83dc	; 0x83dc <_Z21avr_eeprom_write_bytejh>
		}
		break;
    882c:	e4 c2       	rjmp	.+1480   	; 0x8df6 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x86e>

		case Id_codespeed:
		{
			if(*(uint8_t*)val != eeprom_read_byte(&(EepromManager::ee_vars.id_codespeed)))
    882e:	8d a9       	ldd	r24, Y+53	; 0x35
    8830:	9e a9       	ldd	r25, Y+54	; 0x36
    8832:	fc 01       	movw	r30, r24
    8834:	10 81       	ld	r17, Z
    8836:	85 e5       	ldi	r24, 0x55	; 85
    8838:	90 e0       	ldi	r25, 0x00	; 0
    883a:	0e 94 c9 84 	call	0x10992	; 0x10992 <eeprom_read_byte>
    883e:	18 17       	cp	r17, r24
    8840:	09 f4       	brne	.+2      	; 0x8844 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2bc>
    8842:	b6 c2       	rjmp	.+1388   	; 0x8db0 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x828>
			{
				avr_eeprom_write_byte(Id_codespeed, *(uint8_t*)val);
    8844:	8d a9       	ldd	r24, Y+53	; 0x35
    8846:	9e a9       	ldd	r25, Y+54	; 0x36
    8848:	fc 01       	movw	r30, r24
    884a:	80 81       	ld	r24, Z
    884c:	68 2f       	mov	r22, r24
    884e:	85 e5       	ldi	r24, 0x55	; 85
    8850:	90 e0       	ldi	r25, 0x00	; 0
    8852:	0e 94 ee 41 	call	0x83dc	; 0x83dc <_Z21avr_eeprom_write_bytejh>
			}
		}
		break;
    8856:	ac c2       	rjmp	.+1368   	; 0x8db0 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x828>

		case Fox_setting:
		{
			if(*(uint8_t*)val != eeprom_read_byte((uint8_t*)&(EepromManager::ee_vars.fox_setting)))
    8858:	8d a9       	ldd	r24, Y+53	; 0x35
    885a:	9e a9       	ldd	r25, Y+54	; 0x36
    885c:	fc 01       	movw	r30, r24
    885e:	10 81       	ld	r17, Z
    8860:	8a e5       	ldi	r24, 0x5A	; 90
    8862:	90 e0       	ldi	r25, 0x00	; 0
    8864:	0e 94 c9 84 	call	0x10992	; 0x10992 <eeprom_read_byte>
    8868:	18 17       	cp	r17, r24
    886a:	09 f4       	brne	.+2      	; 0x886e <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2e6>
    886c:	a3 c2       	rjmp	.+1350   	; 0x8db4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x82c>
			{
				avr_eeprom_write_byte(Fox_setting, *(uint8_t*)val);
    886e:	8d a9       	ldd	r24, Y+53	; 0x35
    8870:	9e a9       	ldd	r25, Y+54	; 0x36
    8872:	fc 01       	movw	r30, r24
    8874:	80 81       	ld	r24, Z
    8876:	68 2f       	mov	r22, r24
    8878:	8a e5       	ldi	r24, 0x5A	; 90
    887a:	90 e0       	ldi	r25, 0x00	; 0
    887c:	0e 94 ee 41 	call	0x83dc	; 0x83dc <_Z21avr_eeprom_write_bytejh>
			}			
		}
		break;
    8880:	99 c2       	rjmp	.+1330   	; 0x8db4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x82c>
		
		case Master_setting:
		{
			if(*(uint8_t*)val != eeprom_read_byte((uint8_t*)&(EepromManager::ee_vars.master_setting)))
    8882:	8d a9       	ldd	r24, Y+53	; 0x35
    8884:	9e a9       	ldd	r25, Y+54	; 0x36
    8886:	fc 01       	movw	r30, r24
    8888:	10 81       	ld	r17, Z
    888a:	89 eb       	ldi	r24, 0xB9	; 185
    888c:	90 e0       	ldi	r25, 0x00	; 0
    888e:	0e 94 c9 84 	call	0x10992	; 0x10992 <eeprom_read_byte>
    8892:	18 17       	cp	r17, r24
    8894:	09 f4       	brne	.+2      	; 0x8898 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x310>
    8896:	90 c2       	rjmp	.+1312   	; 0x8db8 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x830>
			{
				avr_eeprom_write_byte(Master_setting, *(uint8_t*)val);
    8898:	8d a9       	ldd	r24, Y+53	; 0x35
    889a:	9e a9       	ldd	r25, Y+54	; 0x36
    889c:	fc 01       	movw	r30, r24
    889e:	80 81       	ld	r24, Z
    88a0:	68 2f       	mov	r22, r24
    88a2:	89 eb       	ldi	r24, 0xB9	; 185
    88a4:	90 e0       	ldi	r25, 0x00	; 0
    88a6:	0e 94 ee 41 	call	0x83dc	; 0x83dc <_Z21avr_eeprom_write_bytejh>
			}
		}
		break;
    88aa:	86 c2       	rjmp	.+1292   	; 0x8db8 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x830>
		
		case Event_setting:
		{
			if(*(uint8_t*)val != eeprom_read_byte((uint8_t*)&(EepromManager::ee_vars.event_setting)))
    88ac:	8d a9       	ldd	r24, Y+53	; 0x35
    88ae:	9e a9       	ldd	r25, Y+54	; 0x36
    88b0:	fc 01       	movw	r30, r24
    88b2:	10 81       	ld	r17, Z
    88b4:	87 e9       	ldi	r24, 0x97	; 151
    88b6:	90 e0       	ldi	r25, 0x00	; 0
    88b8:	0e 94 c9 84 	call	0x10992	; 0x10992 <eeprom_read_byte>
    88bc:	18 17       	cp	r17, r24
    88be:	09 f4       	brne	.+2      	; 0x88c2 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x33a>
    88c0:	7d c2       	rjmp	.+1274   	; 0x8dbc <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x834>
			{
				avr_eeprom_write_byte(Event_setting, *(uint8_t*)val);
    88c2:	8d a9       	ldd	r24, Y+53	; 0x35
    88c4:	9e a9       	ldd	r25, Y+54	; 0x36
    88c6:	fc 01       	movw	r30, r24
    88c8:	80 81       	ld	r24, Z
    88ca:	68 2f       	mov	r22, r24
    88cc:	87 e9       	ldi	r24, 0x97	; 151
    88ce:	90 e0       	ldi	r25, 0x00	; 0
    88d0:	0e 94 ee 41 	call	0x83dc	; 0x83dc <_Z21avr_eeprom_write_bytejh>
			}
		}
		break;
    88d4:	73 c2       	rjmp	.+1254   	; 0x8dbc <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x834>
		
		case Foxoring_FrequencyA:
		{
			if(*(uint32_t*)val != eeprom_read_dword(&(EepromManager::ee_vars.foxoring_frequencyA)))
    88d6:	8d a9       	ldd	r24, Y+53	; 0x35
    88d8:	9e a9       	ldd	r25, Y+54	; 0x36
    88da:	fc 01       	movw	r30, r24
    88dc:	c0 80       	ld	r12, Z
    88de:	d1 80       	ldd	r13, Z+1	; 0x01
    88e0:	e2 80       	ldd	r14, Z+2	; 0x02
    88e2:	f3 80       	ldd	r15, Z+3	; 0x03
    88e4:	8c e9       	ldi	r24, 0x9C	; 156
    88e6:	90 e0       	ldi	r25, 0x00	; 0
    88e8:	0e 94 d1 84 	call	0x109a2	; 0x109a2 <eeprom_read_dword>
    88ec:	dc 01       	movw	r26, r24
    88ee:	cb 01       	movw	r24, r22
    88f0:	c8 16       	cp	r12, r24
    88f2:	d9 06       	cpc	r13, r25
    88f4:	ea 06       	cpc	r14, r26
    88f6:	fb 06       	cpc	r15, r27
    88f8:	09 f4       	brne	.+2      	; 0x88fc <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x374>
    88fa:	62 c2       	rjmp	.+1220   	; 0x8dc0 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x838>
			{
				avr_eeprom_write_dword(Foxoring_FrequencyA, *(uint32_t*)val);
    88fc:	8d a9       	ldd	r24, Y+53	; 0x35
    88fe:	9e a9       	ldd	r25, Y+54	; 0x36
    8900:	fc 01       	movw	r30, r24
    8902:	80 81       	ld	r24, Z
    8904:	91 81       	ldd	r25, Z+1	; 0x01
    8906:	a2 81       	ldd	r26, Z+2	; 0x02
    8908:	b3 81       	ldd	r27, Z+3	; 0x03
    890a:	ac 01       	movw	r20, r24
    890c:	bd 01       	movw	r22, r26
    890e:	8c e9       	ldi	r24, 0x9C	; 156
    8910:	90 e0       	ldi	r25, 0x00	; 0
    8912:	0e 94 50 42 	call	0x84a0	; 0x84a0 <_Z22avr_eeprom_write_dwordjm>
			}		
		}
		break;
    8916:	54 c2       	rjmp	.+1192   	; 0x8dc0 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x838>
		
		case Foxoring_FrequencyB:
		{
			if(*(uint32_t*)val != eeprom_read_dword(&(EepromManager::ee_vars.foxoring_frequencyB)))
    8918:	8d a9       	ldd	r24, Y+53	; 0x35
    891a:	9e a9       	ldd	r25, Y+54	; 0x36
    891c:	fc 01       	movw	r30, r24
    891e:	c0 80       	ld	r12, Z
    8920:	d1 80       	ldd	r13, Z+1	; 0x01
    8922:	e2 80       	ldd	r14, Z+2	; 0x02
    8924:	f3 80       	ldd	r15, Z+3	; 0x03
    8926:	84 ea       	ldi	r24, 0xA4	; 164
    8928:	90 e0       	ldi	r25, 0x00	; 0
    892a:	0e 94 d1 84 	call	0x109a2	; 0x109a2 <eeprom_read_dword>
    892e:	dc 01       	movw	r26, r24
    8930:	cb 01       	movw	r24, r22
    8932:	c8 16       	cp	r12, r24
    8934:	d9 06       	cpc	r13, r25
    8936:	ea 06       	cpc	r14, r26
    8938:	fb 06       	cpc	r15, r27
    893a:	09 f4       	brne	.+2      	; 0x893e <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x3b6>
    893c:	43 c2       	rjmp	.+1158   	; 0x8dc4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x83c>
			{
				avr_eeprom_write_dword(Foxoring_FrequencyB, *(uint32_t*)val);
    893e:	8d a9       	ldd	r24, Y+53	; 0x35
    8940:	9e a9       	ldd	r25, Y+54	; 0x36
    8942:	fc 01       	movw	r30, r24
    8944:	80 81       	ld	r24, Z
    8946:	91 81       	ldd	r25, Z+1	; 0x01
    8948:	a2 81       	ldd	r26, Z+2	; 0x02
    894a:	b3 81       	ldd	r27, Z+3	; 0x03
    894c:	ac 01       	movw	r20, r24
    894e:	bd 01       	movw	r22, r26
    8950:	84 ea       	ldi	r24, 0xA4	; 164
    8952:	90 e0       	ldi	r25, 0x00	; 0
    8954:	0e 94 50 42 	call	0x84a0	; 0x84a0 <_Z22avr_eeprom_write_dwordjm>
			}
		}
		break;
    8958:	35 c2       	rjmp	.+1130   	; 0x8dc4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x83c>
		
		case Foxoring_FrequencyC:
		{
			if(*(uint32_t*)val != eeprom_read_dword(&(EepromManager::ee_vars.foxoring_frequencyC)))
    895a:	8d a9       	ldd	r24, Y+53	; 0x35
    895c:	9e a9       	ldd	r25, Y+54	; 0x36
    895e:	fc 01       	movw	r30, r24
    8960:	c0 80       	ld	r12, Z
    8962:	d1 80       	ldd	r13, Z+1	; 0x01
    8964:	e2 80       	ldd	r14, Z+2	; 0x02
    8966:	f3 80       	ldd	r15, Z+3	; 0x03
    8968:	8c ea       	ldi	r24, 0xAC	; 172
    896a:	90 e0       	ldi	r25, 0x00	; 0
    896c:	0e 94 d1 84 	call	0x109a2	; 0x109a2 <eeprom_read_dword>
    8970:	dc 01       	movw	r26, r24
    8972:	cb 01       	movw	r24, r22
    8974:	c8 16       	cp	r12, r24
    8976:	d9 06       	cpc	r13, r25
    8978:	ea 06       	cpc	r14, r26
    897a:	fb 06       	cpc	r15, r27
    897c:	09 f4       	brne	.+2      	; 0x8980 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x3f8>
    897e:	24 c2       	rjmp	.+1096   	; 0x8dc8 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x840>
			{
				avr_eeprom_write_dword(Foxoring_FrequencyC, *(uint32_t*)val);
    8980:	8d a9       	ldd	r24, Y+53	; 0x35
    8982:	9e a9       	ldd	r25, Y+54	; 0x36
    8984:	fc 01       	movw	r30, r24
    8986:	80 81       	ld	r24, Z
    8988:	91 81       	ldd	r25, Z+1	; 0x01
    898a:	a2 81       	ldd	r26, Z+2	; 0x02
    898c:	b3 81       	ldd	r27, Z+3	; 0x03
    898e:	ac 01       	movw	r20, r24
    8990:	bd 01       	movw	r22, r26
    8992:	8c ea       	ldi	r24, 0xAC	; 172
    8994:	90 e0       	ldi	r25, 0x00	; 0
    8996:	0e 94 50 42 	call	0x84a0	; 0x84a0 <_Z22avr_eeprom_write_dwordjm>
			}
		}
		break;
    899a:	16 c2       	rjmp	.+1068   	; 0x8dc8 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x840>

		case Foxoring_fox_setting:
		{
			if(*(uint8_t*)val != eeprom_read_byte((uint8_t*)&(EepromManager::ee_vars.foxoring_fox_setting)))
    899c:	8d a9       	ldd	r24, Y+53	; 0x35
    899e:	9e a9       	ldd	r25, Y+54	; 0x36
    89a0:	fc 01       	movw	r30, r24
    89a2:	10 81       	ld	r17, Z
    89a4:	84 eb       	ldi	r24, 0xB4	; 180
    89a6:	90 e0       	ldi	r25, 0x00	; 0
    89a8:	0e 94 c9 84 	call	0x10992	; 0x10992 <eeprom_read_byte>
    89ac:	18 17       	cp	r17, r24
    89ae:	09 f4       	brne	.+2      	; 0x89b2 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x42a>
    89b0:	0d c2       	rjmp	.+1050   	; 0x8dcc <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x844>
			{
				avr_eeprom_write_byte(Foxoring_fox_setting, *(uint8_t*)val);
    89b2:	8d a9       	ldd	r24, Y+53	; 0x35
    89b4:	9e a9       	ldd	r25, Y+54	; 0x36
    89b6:	fc 01       	movw	r30, r24
    89b8:	80 81       	ld	r24, Z
    89ba:	68 2f       	mov	r22, r24
    89bc:	84 eb       	ldi	r24, 0xB4	; 180
    89be:	90 e0       	ldi	r25, 0x00	; 0
    89c0:	0e 94 ee 41 	call	0x83dc	; 0x83dc <_Z21avr_eeprom_write_bytejh>
			}		
		}
		break;
    89c4:	03 c2       	rjmp	.+1030   	; 0x8dcc <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x844>

		case Event_start_epoch:
		{
			if(*(uint32_t*)val != eeprom_read_dword(&(EepromManager::ee_vars.event_start_epoch)))
    89c6:	8d a9       	ldd	r24, Y+53	; 0x35
    89c8:	9e a9       	ldd	r25, Y+54	; 0x36
    89ca:	fc 01       	movw	r30, r24
    89cc:	c0 80       	ld	r12, Z
    89ce:	d1 80       	ldd	r13, Z+1	; 0x01
    89d0:	e2 80       	ldd	r14, Z+2	; 0x02
    89d2:	f3 80       	ldd	r15, Z+3	; 0x03
    89d4:	86 e0       	ldi	r24, 0x06	; 6
    89d6:	90 e0       	ldi	r25, 0x00	; 0
    89d8:	0e 94 d1 84 	call	0x109a2	; 0x109a2 <eeprom_read_dword>
    89dc:	dc 01       	movw	r26, r24
    89de:	cb 01       	movw	r24, r22
    89e0:	c8 16       	cp	r12, r24
    89e2:	d9 06       	cpc	r13, r25
    89e4:	ea 06       	cpc	r14, r26
    89e6:	fb 06       	cpc	r15, r27
    89e8:	09 f4       	brne	.+2      	; 0x89ec <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x464>
    89ea:	f2 c1       	rjmp	.+996    	; 0x8dd0 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x848>
			{
				avr_eeprom_write_dword(Event_start_epoch, *(uint32_t*)val);
    89ec:	8d a9       	ldd	r24, Y+53	; 0x35
    89ee:	9e a9       	ldd	r25, Y+54	; 0x36
    89f0:	fc 01       	movw	r30, r24
    89f2:	80 81       	ld	r24, Z
    89f4:	91 81       	ldd	r25, Z+1	; 0x01
    89f6:	a2 81       	ldd	r26, Z+2	; 0x02
    89f8:	b3 81       	ldd	r27, Z+3	; 0x03
    89fa:	ac 01       	movw	r20, r24
    89fc:	bd 01       	movw	r22, r26
    89fe:	86 e0       	ldi	r24, 0x06	; 6
    8a00:	90 e0       	ldi	r25, 0x00	; 0
    8a02:	0e 94 50 42 	call	0x84a0	; 0x84a0 <_Z22avr_eeprom_write_dwordjm>
			}
		}
		break;
    8a06:	e4 c1       	rjmp	.+968    	; 0x8dd0 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x848>

		case Event_finish_epoch:
		{
			if(*(uint32_t*)val != eeprom_read_dword(&(EepromManager::ee_vars.event_finish_epoch)))
    8a08:	8d a9       	ldd	r24, Y+53	; 0x35
    8a0a:	9e a9       	ldd	r25, Y+54	; 0x36
    8a0c:	fc 01       	movw	r30, r24
    8a0e:	c0 80       	ld	r12, Z
    8a10:	d1 80       	ldd	r13, Z+1	; 0x01
    8a12:	e2 80       	ldd	r14, Z+2	; 0x02
    8a14:	f3 80       	ldd	r15, Z+3	; 0x03
    8a16:	8e e0       	ldi	r24, 0x0E	; 14
    8a18:	90 e0       	ldi	r25, 0x00	; 0
    8a1a:	0e 94 d1 84 	call	0x109a2	; 0x109a2 <eeprom_read_dword>
    8a1e:	dc 01       	movw	r26, r24
    8a20:	cb 01       	movw	r24, r22
    8a22:	c8 16       	cp	r12, r24
    8a24:	d9 06       	cpc	r13, r25
    8a26:	ea 06       	cpc	r14, r26
    8a28:	fb 06       	cpc	r15, r27
    8a2a:	09 f4       	brne	.+2      	; 0x8a2e <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x4a6>
    8a2c:	d3 c1       	rjmp	.+934    	; 0x8dd4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x84c>
			{
				avr_eeprom_write_dword(Event_finish_epoch, *(uint32_t*)val);
    8a2e:	8d a9       	ldd	r24, Y+53	; 0x35
    8a30:	9e a9       	ldd	r25, Y+54	; 0x36
    8a32:	fc 01       	movw	r30, r24
    8a34:	80 81       	ld	r24, Z
    8a36:	91 81       	ldd	r25, Z+1	; 0x01
    8a38:	a2 81       	ldd	r26, Z+2	; 0x02
    8a3a:	b3 81       	ldd	r27, Z+3	; 0x03
    8a3c:	ac 01       	movw	r20, r24
    8a3e:	bd 01       	movw	r22, r26
    8a40:	8e e0       	ldi	r24, 0x0E	; 14
    8a42:	90 e0       	ldi	r25, 0x00	; 0
    8a44:	0e 94 50 42 	call	0x84a0	; 0x84a0 <_Z22avr_eeprom_write_dwordjm>
			}		
		}
		break;
    8a48:	c5 c1       	rjmp	.+906    	; 0x8dd4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x84c>

		case Utc_offset:
		{
			if(*(uint8_t*)val != eeprom_read_byte(&(EepromManager::ee_vars.utc_offset)))
    8a4a:	8d a9       	ldd	r24, Y+53	; 0x35
    8a4c:	9e a9       	ldd	r25, Y+54	; 0x36
    8a4e:	fc 01       	movw	r30, r24
    8a50:	10 81       	ld	r17, Z
    8a52:	8f e5       	ldi	r24, 0x5F	; 95
    8a54:	90 e0       	ldi	r25, 0x00	; 0
    8a56:	0e 94 c9 84 	call	0x10992	; 0x10992 <eeprom_read_byte>
    8a5a:	18 17       	cp	r17, r24
    8a5c:	09 f4       	brne	.+2      	; 0x8a60 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x4d8>
    8a5e:	bc c1       	rjmp	.+888    	; 0x8dd8 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x850>
			{
				avr_eeprom_write_byte(Utc_offset, *(uint8_t*)val);
    8a60:	8d a9       	ldd	r24, Y+53	; 0x35
    8a62:	9e a9       	ldd	r25, Y+54	; 0x36
    8a64:	fc 01       	movw	r30, r24
    8a66:	80 81       	ld	r24, Z
    8a68:	68 2f       	mov	r22, r24
    8a6a:	8f e5       	ldi	r24, 0x5F	; 95
    8a6c:	90 e0       	ldi	r25, 0x00	; 0
    8a6e:	0e 94 ee 41 	call	0x83dc	; 0x83dc <_Z21avr_eeprom_write_bytejh>
			}		
		}
		break;
    8a72:	b2 c1       	rjmp	.+868    	; 0x8dd8 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x850>
		
		case Pattern_Code_Speed:
		{
			if(*(uint8_t*)val != eeprom_read_byte(&(EepromManager::ee_vars.pattern_codespeed)))
    8a74:	8d a9       	ldd	r24, Y+53	; 0x35
    8a76:	9e a9       	ldd	r25, Y+54	; 0x36
    8a78:	fc 01       	movw	r30, r24
    8a7a:	10 81       	ld	r17, Z
    8a7c:	8a e7       	ldi	r24, 0x7A	; 122
    8a7e:	90 e0       	ldi	r25, 0x00	; 0
    8a80:	0e 94 c9 84 	call	0x10992	; 0x10992 <eeprom_read_byte>
    8a84:	18 17       	cp	r17, r24
    8a86:	09 f4       	brne	.+2      	; 0x8a8a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x502>
    8a88:	a9 c1       	rjmp	.+850    	; 0x8ddc <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x854>
			{
				avr_eeprom_write_byte(Pattern_Code_Speed, *(uint8_t*)val);
    8a8a:	8d a9       	ldd	r24, Y+53	; 0x35
    8a8c:	9e a9       	ldd	r25, Y+54	; 0x36
    8a8e:	fc 01       	movw	r30, r24
    8a90:	80 81       	ld	r24, Z
    8a92:	68 2f       	mov	r22, r24
    8a94:	8a e7       	ldi	r24, 0x7A	; 122
    8a96:	90 e0       	ldi	r25, 0x00	; 0
    8a98:	0e 94 ee 41 	call	0x83dc	; 0x83dc <_Z21avr_eeprom_write_bytejh>
			}
		}
		break;
    8a9c:	9f c1       	rjmp	.+830    	; 0x8ddc <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x854>

		case Off_Air_Seconds:
		{
			if(*(int16_t*)val != (int16_t)eeprom_read_word((const uint16_t *)&(EepromManager::ee_vars.off_air_seconds)))
    8a9e:	8d a9       	ldd	r24, Y+53	; 0x35
    8aa0:	9e a9       	ldd	r25, Y+54	; 0x36
    8aa2:	fc 01       	movw	r30, r24
    8aa4:	00 81       	ld	r16, Z
    8aa6:	11 81       	ldd	r17, Z+1	; 0x01
    8aa8:	8f e7       	ldi	r24, 0x7F	; 127
    8aaa:	90 e0       	ldi	r25, 0x00	; 0
    8aac:	0e 94 d8 84 	call	0x109b0	; 0x109b0 <eeprom_read_word>
    8ab0:	08 17       	cp	r16, r24
    8ab2:	19 07       	cpc	r17, r25
    8ab4:	09 f4       	brne	.+2      	; 0x8ab8 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x530>
    8ab6:	94 c1       	rjmp	.+808    	; 0x8de0 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x858>
			{
				avr_eeprom_write_word(Off_Air_Seconds, *(uint16_t*)val);
    8ab8:	8d a9       	ldd	r24, Y+53	; 0x35
    8aba:	9e a9       	ldd	r25, Y+54	; 0x36
    8abc:	fc 01       	movw	r30, r24
    8abe:	80 81       	ld	r24, Z
    8ac0:	91 81       	ldd	r25, Z+1	; 0x01
    8ac2:	bc 01       	movw	r22, r24
    8ac4:	8f e7       	ldi	r24, 0x7F	; 127
    8ac6:	90 e0       	ldi	r25, 0x00	; 0
    8ac8:	0e 94 1d 42 	call	0x843a	; 0x843a <_Z21avr_eeprom_write_wordjj>
			}
		}
		break;
    8acc:	89 c1       	rjmp	.+786    	; 0x8de0 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x858>
		
		case On_Air_Seconds:
		{
			if(*(int16_t*)val != (int16_t)eeprom_read_word((const uint16_t *)&(EepromManager::ee_vars.on_air_seconds)))
    8ace:	8d a9       	ldd	r24, Y+53	; 0x35
    8ad0:	9e a9       	ldd	r25, Y+54	; 0x36
    8ad2:	fc 01       	movw	r30, r24
    8ad4:	00 81       	ld	r16, Z
    8ad6:	11 81       	ldd	r17, Z+1	; 0x01
    8ad8:	85 e8       	ldi	r24, 0x85	; 133
    8ada:	90 e0       	ldi	r25, 0x00	; 0
    8adc:	0e 94 d8 84 	call	0x109b0	; 0x109b0 <eeprom_read_word>
    8ae0:	08 17       	cp	r16, r24
    8ae2:	19 07       	cpc	r17, r25
    8ae4:	09 f4       	brne	.+2      	; 0x8ae8 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x560>
    8ae6:	7e c1       	rjmp	.+764    	; 0x8de4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x85c>
			{
				avr_eeprom_write_word(On_Air_Seconds, *(uint16_t*)val);
    8ae8:	8d a9       	ldd	r24, Y+53	; 0x35
    8aea:	9e a9       	ldd	r25, Y+54	; 0x36
    8aec:	fc 01       	movw	r30, r24
    8aee:	80 81       	ld	r24, Z
    8af0:	91 81       	ldd	r25, Z+1	; 0x01
    8af2:	bc 01       	movw	r22, r24
    8af4:	85 e8       	ldi	r24, 0x85	; 133
    8af6:	90 e0       	ldi	r25, 0x00	; 0
    8af8:	0e 94 1d 42 	call	0x843a	; 0x843a <_Z21avr_eeprom_write_wordjj>
			}
		}
		break;
    8afc:	73 c1       	rjmp	.+742    	; 0x8de4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x85c>
		
		case ID_Period_Seconds:
		{
			if(*(int16_t*)val != (int16_t)eeprom_read_word((const uint16_t *)&(EepromManager::ee_vars.ID_period_seconds)))
    8afe:	8d a9       	ldd	r24, Y+53	; 0x35
    8b00:	9e a9       	ldd	r25, Y+54	; 0x36
    8b02:	fc 01       	movw	r30, r24
    8b04:	00 81       	ld	r16, Z
    8b06:	11 81       	ldd	r17, Z+1	; 0x01
    8b08:	8b e8       	ldi	r24, 0x8B	; 139
    8b0a:	90 e0       	ldi	r25, 0x00	; 0
    8b0c:	0e 94 d8 84 	call	0x109b0	; 0x109b0 <eeprom_read_word>
    8b10:	08 17       	cp	r16, r24
    8b12:	19 07       	cpc	r17, r25
    8b14:	09 f4       	brne	.+2      	; 0x8b18 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x590>
    8b16:	68 c1       	rjmp	.+720    	; 0x8de8 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x860>
			{
				avr_eeprom_write_word(ID_Period_Seconds, *(uint16_t*)val);
    8b18:	8d a9       	ldd	r24, Y+53	; 0x35
    8b1a:	9e a9       	ldd	r25, Y+54	; 0x36
    8b1c:	fc 01       	movw	r30, r24
    8b1e:	80 81       	ld	r24, Z
    8b20:	91 81       	ldd	r25, Z+1	; 0x01
    8b22:	bc 01       	movw	r22, r24
    8b24:	8b e8       	ldi	r24, 0x8B	; 139
    8b26:	90 e0       	ldi	r25, 0x00	; 0
    8b28:	0e 94 1d 42 	call	0x843a	; 0x843a <_Z21avr_eeprom_write_wordjj>
			}
		}
		break;
    8b2c:	5d c1       	rjmp	.+698    	; 0x8de8 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x860>
		
		case Intra_Cycle_Delay_Seconds:
		{
			if(*(int16_t*)val != (int16_t)eeprom_read_word((const uint16_t *)&(EepromManager::ee_vars.intra_cycle_delay_time)))
    8b2e:	8d a9       	ldd	r24, Y+53	; 0x35
    8b30:	9e a9       	ldd	r25, Y+54	; 0x36
    8b32:	fc 01       	movw	r30, r24
    8b34:	00 81       	ld	r16, Z
    8b36:	11 81       	ldd	r17, Z+1	; 0x01
    8b38:	81 e9       	ldi	r24, 0x91	; 145
    8b3a:	90 e0       	ldi	r25, 0x00	; 0
    8b3c:	0e 94 d8 84 	call	0x109b0	; 0x109b0 <eeprom_read_word>
    8b40:	08 17       	cp	r16, r24
    8b42:	19 07       	cpc	r17, r25
    8b44:	09 f4       	brne	.+2      	; 0x8b48 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x5c0>
    8b46:	52 c1       	rjmp	.+676    	; 0x8dec <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x864>
			{
				avr_eeprom_write_word(Intra_Cycle_Delay_Seconds, *(uint16_t*)val);
    8b48:	8d a9       	ldd	r24, Y+53	; 0x35
    8b4a:	9e a9       	ldd	r25, Y+54	; 0x36
    8b4c:	fc 01       	movw	r30, r24
    8b4e:	80 81       	ld	r24, Z
    8b50:	91 81       	ldd	r25, Z+1	; 0x01
    8b52:	bc 01       	movw	r22, r24
    8b54:	81 e9       	ldi	r24, 0x91	; 145
    8b56:	90 e0       	ldi	r25, 0x00	; 0
    8b58:	0e 94 1d 42 	call	0x843a	; 0x843a <_Z21avr_eeprom_write_wordjj>
			}		
		}
		break;
    8b5c:	47 c1       	rjmp	.+654    	; 0x8dec <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x864>

		case Eeprom_initialization_flag:
		{
			if(*(int16_t*)val != (int16_t)eeprom_read_word((const uint16_t *)&(EepromManager::ee_vars.eeprom_initialization_flag)))
    8b5e:	8d a9       	ldd	r24, Y+53	; 0x35
    8b60:	9e a9       	ldd	r25, Y+54	; 0x36
    8b62:	fc 01       	movw	r30, r24
    8b64:	00 81       	ld	r16, Z
    8b66:	11 81       	ldd	r17, Z+1	; 0x01
    8b68:	80 e0       	ldi	r24, 0x00	; 0
    8b6a:	90 e0       	ldi	r25, 0x00	; 0
    8b6c:	0e 94 d8 84 	call	0x109b0	; 0x109b0 <eeprom_read_word>
    8b70:	08 17       	cp	r16, r24
    8b72:	19 07       	cpc	r17, r25
    8b74:	09 f4       	brne	.+2      	; 0x8b78 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x5f0>
    8b76:	3c c1       	rjmp	.+632    	; 0x8df0 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x868>
			{
				avr_eeprom_write_word(Eeprom_initialization_flag, *(uint16_t*)val);
    8b78:	8d a9       	ldd	r24, Y+53	; 0x35
    8b7a:	9e a9       	ldd	r25, Y+54	; 0x36
    8b7c:	fc 01       	movw	r30, r24
    8b7e:	80 81       	ld	r24, Z
    8b80:	91 81       	ldd	r25, Z+1	; 0x01
    8b82:	bc 01       	movw	r22, r24
    8b84:	80 e0       	ldi	r24, 0x00	; 0
    8b86:	90 e0       	ldi	r25, 0x00	; 0
    8b88:	0e 94 1d 42 	call	0x843a	; 0x843a <_Z21avr_eeprom_write_wordjj>
			}		
		}
		break;
    8b8c:	31 c1       	rjmp	.+610    	; 0x8df0 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x868>
		
		case FoxA_pattern_text:
		{
			int cnt = 0;
    8b8e:	1e 8a       	std	Y+22, r1	; 0x16
    8b90:	1f 8a       	std	Y+23, r1	; 0x17
			char* char_addr = (char*)val;
    8b92:	8d a9       	ldd	r24, Y+53	; 0x35
    8b94:	9e a9       	ldd	r25, Y+54	; 0x36
    8b96:	88 8f       	std	Y+24, r24	; 0x18
    8b98:	99 8f       	std	Y+25, r25	; 0x19
			char c = *char_addr++;
    8b9a:	88 8d       	ldd	r24, Y+24	; 0x18
    8b9c:	99 8d       	ldd	r25, Y+25	; 0x19
    8b9e:	9c 01       	movw	r18, r24
    8ba0:	2f 5f       	subi	r18, 0xFF	; 255
    8ba2:	3f 4f       	sbci	r19, 0xFF	; 255
    8ba4:	28 8f       	std	Y+24, r18	; 0x18
    8ba6:	39 8f       	std	Y+25, r19	; 0x19
    8ba8:	fc 01       	movw	r30, r24
    8baa:	80 81       	ld	r24, Z
    8bac:	8a 8f       	std	Y+26, r24	; 0x1a
			char q;
			
			eeprom_addr_t j = (eeprom_addr_t)FoxA_pattern_text;
    8bae:	8e eb       	ldi	r24, 0xBE	; 190
    8bb0:	90 e0       	ldi	r25, 0x00	; 0
    8bb2:	8b 8f       	std	Y+27, r24	; 0x1b
    8bb4:	9c 8f       	std	Y+28, r25	; 0x1c

			while(c && (cnt<MAX_PATTERN_TEXT_LENGTH))
    8bb6:	8a 8d       	ldd	r24, Y+26	; 0x1a
    8bb8:	88 23       	and	r24, r24
    8bba:	39 f1       	breq	.+78     	; 0x8c0a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x682>
    8bbc:	8e 89       	ldd	r24, Y+22	; 0x16
    8bbe:	9f 89       	ldd	r25, Y+23	; 0x17
    8bc0:	44 97       	sbiw	r24, 0x14	; 20
    8bc2:	1c f5       	brge	.+70     	; 0x8c0a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x682>
			{
				q = (char)eeprom_read_byte((uint8_t*)j);
    8bc4:	8b 8d       	ldd	r24, Y+27	; 0x1b
    8bc6:	9c 8d       	ldd	r25, Y+28	; 0x1c
    8bc8:	0e 94 c9 84 	call	0x10992	; 0x10992 <eeprom_read_byte>
    8bcc:	8e a7       	std	Y+46, r24	; 0x2e
				if(c != q)
    8bce:	9a 8d       	ldd	r25, Y+26	; 0x1a
    8bd0:	8e a5       	ldd	r24, Y+46	; 0x2e
    8bd2:	98 17       	cp	r25, r24
    8bd4:	29 f0       	breq	.+10     	; 0x8be0 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x658>
				{
					avr_eeprom_write_byte(j, c);
    8bd6:	8b 8d       	ldd	r24, Y+27	; 0x1b
    8bd8:	9c 8d       	ldd	r25, Y+28	; 0x1c
    8bda:	6a 8d       	ldd	r22, Y+26	; 0x1a
    8bdc:	0e 94 ee 41 	call	0x83dc	; 0x83dc <_Z21avr_eeprom_write_bytejh>
				}
				
				cnt++;
    8be0:	8e 89       	ldd	r24, Y+22	; 0x16
    8be2:	9f 89       	ldd	r25, Y+23	; 0x17
    8be4:	01 96       	adiw	r24, 0x01	; 1
    8be6:	8e 8b       	std	Y+22, r24	; 0x16
    8be8:	9f 8b       	std	Y+23, r25	; 0x17
				c = *char_addr++;
    8bea:	88 8d       	ldd	r24, Y+24	; 0x18
    8bec:	99 8d       	ldd	r25, Y+25	; 0x19
    8bee:	9c 01       	movw	r18, r24
    8bf0:	2f 5f       	subi	r18, 0xFF	; 255
    8bf2:	3f 4f       	sbci	r19, 0xFF	; 255
    8bf4:	28 8f       	std	Y+24, r18	; 0x18
    8bf6:	39 8f       	std	Y+25, r19	; 0x19
    8bf8:	fc 01       	movw	r30, r24
    8bfa:	80 81       	ld	r24, Z
    8bfc:	8a 8f       	std	Y+26, r24	; 0x1a
				j++;
    8bfe:	8b 8d       	ldd	r24, Y+27	; 0x1b
    8c00:	9c 8d       	ldd	r25, Y+28	; 0x1c
    8c02:	01 96       	adiw	r24, 0x01	; 1
    8c04:	8b 8f       	std	Y+27, r24	; 0x1b
    8c06:	9c 8f       	std	Y+28, r25	; 0x1c
			char c = *char_addr++;
			char q;
			
			eeprom_addr_t j = (eeprom_addr_t)FoxA_pattern_text;

			while(c && (cnt<MAX_PATTERN_TEXT_LENGTH))
    8c08:	d6 cf       	rjmp	.-84     	; 0x8bb6 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x62e>
				cnt++;
				c = *char_addr++;
				j++;
			}

			avr_eeprom_write_byte(j, 0);
    8c0a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    8c0c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    8c0e:	60 e0       	ldi	r22, 0x00	; 0
    8c10:	0e 94 ee 41 	call	0x83dc	; 0x83dc <_Z21avr_eeprom_write_bytejh>
		}
		break;
    8c14:	f0 c0       	rjmp	.+480    	; 0x8df6 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x86e>
		
		case FoxB_pattern_text:
		{
			int cnt = 0;
    8c16:	1d 8e       	std	Y+29, r1	; 0x1d
    8c18:	1e 8e       	std	Y+30, r1	; 0x1e
			char* char_addr = (char*)val;
    8c1a:	8d a9       	ldd	r24, Y+53	; 0x35
    8c1c:	9e a9       	ldd	r25, Y+54	; 0x36
    8c1e:	8f 8f       	std	Y+31, r24	; 0x1f
    8c20:	98 a3       	std	Y+32, r25	; 0x20
			char c = *char_addr++;
    8c22:	8f 8d       	ldd	r24, Y+31	; 0x1f
    8c24:	98 a1       	ldd	r25, Y+32	; 0x20
    8c26:	9c 01       	movw	r18, r24
    8c28:	2f 5f       	subi	r18, 0xFF	; 255
    8c2a:	3f 4f       	sbci	r19, 0xFF	; 255
    8c2c:	2f 8f       	std	Y+31, r18	; 0x1f
    8c2e:	38 a3       	std	Y+32, r19	; 0x20
    8c30:	fc 01       	movw	r30, r24
    8c32:	80 81       	ld	r24, Z
    8c34:	89 a3       	std	Y+33, r24	; 0x21
			char q;
			
			eeprom_addr_t j = (eeprom_addr_t)FoxB_pattern_text;
    8c36:	87 ed       	ldi	r24, 0xD7	; 215
    8c38:	90 e0       	ldi	r25, 0x00	; 0
    8c3a:	8a a3       	std	Y+34, r24	; 0x22
    8c3c:	9b a3       	std	Y+35, r25	; 0x23

			while(c && (cnt<MAX_PATTERN_TEXT_LENGTH))
    8c3e:	89 a1       	ldd	r24, Y+33	; 0x21
    8c40:	88 23       	and	r24, r24
    8c42:	39 f1       	breq	.+78     	; 0x8c92 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x70a>
    8c44:	8d 8d       	ldd	r24, Y+29	; 0x1d
    8c46:	9e 8d       	ldd	r25, Y+30	; 0x1e
    8c48:	44 97       	sbiw	r24, 0x14	; 20
    8c4a:	1c f5       	brge	.+70     	; 0x8c92 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x70a>
			{
				q = (char)eeprom_read_byte((uint8_t*)j);
    8c4c:	8a a1       	ldd	r24, Y+34	; 0x22
    8c4e:	9b a1       	ldd	r25, Y+35	; 0x23
    8c50:	0e 94 c9 84 	call	0x10992	; 0x10992 <eeprom_read_byte>
    8c54:	8f a7       	std	Y+47, r24	; 0x2f
				if(c != q)
    8c56:	99 a1       	ldd	r25, Y+33	; 0x21
    8c58:	8f a5       	ldd	r24, Y+47	; 0x2f
    8c5a:	98 17       	cp	r25, r24
    8c5c:	29 f0       	breq	.+10     	; 0x8c68 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x6e0>
				{
					avr_eeprom_write_byte(j, c);
    8c5e:	8a a1       	ldd	r24, Y+34	; 0x22
    8c60:	9b a1       	ldd	r25, Y+35	; 0x23
    8c62:	69 a1       	ldd	r22, Y+33	; 0x21
    8c64:	0e 94 ee 41 	call	0x83dc	; 0x83dc <_Z21avr_eeprom_write_bytejh>
				}
				
				cnt++;
    8c68:	8d 8d       	ldd	r24, Y+29	; 0x1d
    8c6a:	9e 8d       	ldd	r25, Y+30	; 0x1e
    8c6c:	01 96       	adiw	r24, 0x01	; 1
    8c6e:	8d 8f       	std	Y+29, r24	; 0x1d
    8c70:	9e 8f       	std	Y+30, r25	; 0x1e
				c = *char_addr++;
    8c72:	8f 8d       	ldd	r24, Y+31	; 0x1f
    8c74:	98 a1       	ldd	r25, Y+32	; 0x20
    8c76:	9c 01       	movw	r18, r24
    8c78:	2f 5f       	subi	r18, 0xFF	; 255
    8c7a:	3f 4f       	sbci	r19, 0xFF	; 255
    8c7c:	2f 8f       	std	Y+31, r18	; 0x1f
    8c7e:	38 a3       	std	Y+32, r19	; 0x20
    8c80:	fc 01       	movw	r30, r24
    8c82:	80 81       	ld	r24, Z
    8c84:	89 a3       	std	Y+33, r24	; 0x21
				j++;
    8c86:	8a a1       	ldd	r24, Y+34	; 0x22
    8c88:	9b a1       	ldd	r25, Y+35	; 0x23
    8c8a:	01 96       	adiw	r24, 0x01	; 1
    8c8c:	8a a3       	std	Y+34, r24	; 0x22
    8c8e:	9b a3       	std	Y+35, r25	; 0x23
			char c = *char_addr++;
			char q;
			
			eeprom_addr_t j = (eeprom_addr_t)FoxB_pattern_text;

			while(c && (cnt<MAX_PATTERN_TEXT_LENGTH))
    8c90:	d6 cf       	rjmp	.-84     	; 0x8c3e <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x6b6>
				cnt++;
				c = *char_addr++;
				j++;
			}

			avr_eeprom_write_byte(j, 0);
    8c92:	8a a1       	ldd	r24, Y+34	; 0x22
    8c94:	9b a1       	ldd	r25, Y+35	; 0x23
    8c96:	60 e0       	ldi	r22, 0x00	; 0
    8c98:	0e 94 ee 41 	call	0x83dc	; 0x83dc <_Z21avr_eeprom_write_bytejh>
		}
		break;
    8c9c:	ac c0       	rjmp	.+344    	; 0x8df6 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x86e>
		
		case FoxC_pattern_text:
		{
			int cnt = 0;
    8c9e:	1c a2       	std	Y+36, r1	; 0x24
    8ca0:	1d a2       	std	Y+37, r1	; 0x25
			char* char_addr = (char*)val;
    8ca2:	8d a9       	ldd	r24, Y+53	; 0x35
    8ca4:	9e a9       	ldd	r25, Y+54	; 0x36
    8ca6:	8e a3       	std	Y+38, r24	; 0x26
    8ca8:	9f a3       	std	Y+39, r25	; 0x27
			char c = *char_addr++;
    8caa:	8e a1       	ldd	r24, Y+38	; 0x26
    8cac:	9f a1       	ldd	r25, Y+39	; 0x27
    8cae:	9c 01       	movw	r18, r24
    8cb0:	2f 5f       	subi	r18, 0xFF	; 255
    8cb2:	3f 4f       	sbci	r19, 0xFF	; 255
    8cb4:	2e a3       	std	Y+38, r18	; 0x26
    8cb6:	3f a3       	std	Y+39, r19	; 0x27
    8cb8:	fc 01       	movw	r30, r24
    8cba:	80 81       	ld	r24, Z
    8cbc:	88 a7       	std	Y+40, r24	; 0x28
			char q;
			
			eeprom_addr_t j = (eeprom_addr_t)FoxC_pattern_text;
    8cbe:	80 ef       	ldi	r24, 0xF0	; 240
    8cc0:	90 e0       	ldi	r25, 0x00	; 0
    8cc2:	89 a7       	std	Y+41, r24	; 0x29
    8cc4:	9a a7       	std	Y+42, r25	; 0x2a

			while(c && (cnt<MAX_PATTERN_TEXT_LENGTH))
    8cc6:	88 a5       	ldd	r24, Y+40	; 0x28
    8cc8:	88 23       	and	r24, r24
    8cca:	39 f1       	breq	.+78     	; 0x8d1a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x792>
    8ccc:	8c a1       	ldd	r24, Y+36	; 0x24
    8cce:	9d a1       	ldd	r25, Y+37	; 0x25
    8cd0:	44 97       	sbiw	r24, 0x14	; 20
    8cd2:	1c f5       	brge	.+70     	; 0x8d1a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x792>
			{
				q = (char)eeprom_read_byte((uint8_t*)j);
    8cd4:	89 a5       	ldd	r24, Y+41	; 0x29
    8cd6:	9a a5       	ldd	r25, Y+42	; 0x2a
    8cd8:	0e 94 c9 84 	call	0x10992	; 0x10992 <eeprom_read_byte>
    8cdc:	88 ab       	std	Y+48, r24	; 0x30
				if(c != q)
    8cde:	98 a5       	ldd	r25, Y+40	; 0x28
    8ce0:	88 a9       	ldd	r24, Y+48	; 0x30
    8ce2:	98 17       	cp	r25, r24
    8ce4:	29 f0       	breq	.+10     	; 0x8cf0 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x768>
				{
					avr_eeprom_write_byte(j, c);
    8ce6:	89 a5       	ldd	r24, Y+41	; 0x29
    8ce8:	9a a5       	ldd	r25, Y+42	; 0x2a
    8cea:	68 a5       	ldd	r22, Y+40	; 0x28
    8cec:	0e 94 ee 41 	call	0x83dc	; 0x83dc <_Z21avr_eeprom_write_bytejh>
				}
				
				cnt++;
    8cf0:	8c a1       	ldd	r24, Y+36	; 0x24
    8cf2:	9d a1       	ldd	r25, Y+37	; 0x25
    8cf4:	01 96       	adiw	r24, 0x01	; 1
    8cf6:	8c a3       	std	Y+36, r24	; 0x24
    8cf8:	9d a3       	std	Y+37, r25	; 0x25
				c = *char_addr++;
    8cfa:	8e a1       	ldd	r24, Y+38	; 0x26
    8cfc:	9f a1       	ldd	r25, Y+39	; 0x27
    8cfe:	9c 01       	movw	r18, r24
    8d00:	2f 5f       	subi	r18, 0xFF	; 255
    8d02:	3f 4f       	sbci	r19, 0xFF	; 255
    8d04:	2e a3       	std	Y+38, r18	; 0x26
    8d06:	3f a3       	std	Y+39, r19	; 0x27
    8d08:	fc 01       	movw	r30, r24
    8d0a:	80 81       	ld	r24, Z
    8d0c:	88 a7       	std	Y+40, r24	; 0x28
				j++;
    8d0e:	89 a5       	ldd	r24, Y+41	; 0x29
    8d10:	9a a5       	ldd	r25, Y+42	; 0x2a
    8d12:	01 96       	adiw	r24, 0x01	; 1
    8d14:	89 a7       	std	Y+41, r24	; 0x29
    8d16:	9a a7       	std	Y+42, r25	; 0x2a
			char c = *char_addr++;
			char q;
			
			eeprom_addr_t j = (eeprom_addr_t)FoxC_pattern_text;

			while(c && (cnt<MAX_PATTERN_TEXT_LENGTH))
    8d18:	d6 cf       	rjmp	.-84     	; 0x8cc6 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x73e>
				cnt++;
				c = *char_addr++;
				j++;
			}

			avr_eeprom_write_byte(j, 0);
    8d1a:	89 a5       	ldd	r24, Y+41	; 0x29
    8d1c:	9a a5       	ldd	r25, Y+42	; 0x2a
    8d1e:	60 e0       	ldi	r22, 0x00	; 0
    8d20:	0e 94 ee 41 	call	0x83dc	; 0x83dc <_Z21avr_eeprom_write_bytejh>
		}
		break;
    8d24:	68 c0       	rjmp	.+208    	; 0x8df6 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x86e>
		
		case Voltage_threshold:
		{
			if(*(float*)val != eeprom_read_float(&(EepromManager::ee_vars.voltage_threshold)))
    8d26:	8d a9       	ldd	r24, Y+53	; 0x35
    8d28:	9e a9       	ldd	r25, Y+54	; 0x36
    8d2a:	fc 01       	movw	r30, r24
    8d2c:	c0 80       	ld	r12, Z
    8d2e:	d1 80       	ldd	r13, Z+1	; 0x01
    8d30:	e2 80       	ldd	r14, Z+2	; 0x02
    8d32:	f3 80       	ldd	r15, Z+3	; 0x03
    8d34:	89 e0       	ldi	r24, 0x09	; 9
    8d36:	91 e0       	ldi	r25, 0x01	; 1
    8d38:	0e 94 d1 84 	call	0x109a2	; 0x109a2 <eeprom_read_dword>
    8d3c:	dc 01       	movw	r26, r24
    8d3e:	cb 01       	movw	r24, r22
    8d40:	9c 01       	movw	r18, r24
    8d42:	ad 01       	movw	r20, r26
    8d44:	c7 01       	movw	r24, r14
    8d46:	b6 01       	movw	r22, r12
    8d48:	0e 94 35 7b 	call	0xf66a	; 0xf66a <__cmpsf2>
    8d4c:	88 23       	and	r24, r24
    8d4e:	09 f4       	brne	.+2      	; 0x8d52 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x7ca>
			{
				avr_eeprom_write_float(Voltage_threshold, *(float*)val);
			}
		}
		break;
    8d50:	52 c0       	rjmp	.+164    	; 0x8df6 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x86e>
		
		case Voltage_threshold:
		{
			if(*(float*)val != eeprom_read_float(&(EepromManager::ee_vars.voltage_threshold)))
			{
				avr_eeprom_write_float(Voltage_threshold, *(float*)val);
    8d52:	8d a9       	ldd	r24, Y+53	; 0x35
    8d54:	9e a9       	ldd	r25, Y+54	; 0x36
    8d56:	fc 01       	movw	r30, r24
    8d58:	80 81       	ld	r24, Z
    8d5a:	91 81       	ldd	r25, Z+1	; 0x01
    8d5c:	a2 81       	ldd	r26, Z+2	; 0x02
    8d5e:	b3 81       	ldd	r27, Z+3	; 0x03
    8d60:	ac 01       	movw	r20, r24
    8d62:	bd 01       	movw	r22, r26
    8d64:	89 e0       	ldi	r24, 0x09	; 9
    8d66:	91 e0       	ldi	r25, 0x01	; 1
    8d68:	0e 94 8a 42 	call	0x8514	; 0x8514 <_Z22avr_eeprom_write_floatjf>
			}
		}
		break;
    8d6c:	44 c0       	rjmp	.+136    	; 0x8df6 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x86e>
		
		case Clock_calibration:
		{
			if(*(uint16_t*)val != eeprom_read_word(&(EepromManager::ee_vars.clock_calibration)))
    8d6e:	8d a9       	ldd	r24, Y+53	; 0x35
    8d70:	9e a9       	ldd	r25, Y+54	; 0x36
    8d72:	fc 01       	movw	r30, r24
    8d74:	00 81       	ld	r16, Z
    8d76:	11 81       	ldd	r17, Z+1	; 0x01
    8d78:	81 e1       	ldi	r24, 0x11	; 17
    8d7a:	91 e0       	ldi	r25, 0x01	; 1
    8d7c:	0e 94 d8 84 	call	0x109b0	; 0x109b0 <eeprom_read_word>
    8d80:	08 17       	cp	r16, r24
    8d82:	19 07       	cpc	r17, r25
    8d84:	b9 f1       	breq	.+110    	; 0x8df4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x86c>
			{
				avr_eeprom_write_word(Clock_calibration, *(uint16_t*)val);
    8d86:	8d a9       	ldd	r24, Y+53	; 0x35
    8d88:	9e a9       	ldd	r25, Y+54	; 0x36
    8d8a:	fc 01       	movw	r30, r24
    8d8c:	80 81       	ld	r24, Z
    8d8e:	91 81       	ldd	r25, Z+1	; 0x01
    8d90:	bc 01       	movw	r22, r24
    8d92:	81 e1       	ldi	r24, 0x11	; 17
    8d94:	91 e0       	ldi	r25, 0x01	; 1
    8d96:	0e 94 1d 42 	call	0x843a	; 0x843a <_Z21avr_eeprom_write_wordjj>
			}
		}
		break;
    8d9a:	2c c0       	rjmp	.+88     	; 0x8df4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x86c>

void EepromManager::updateEEPROMVar(EE_var_t v, void* val)
{
	if(!val)
	{
		return;
    8d9c:	00 00       	nop
    8d9e:	2b c0       	rjmp	.+86     	; 0x8df6 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x86e>

		default:
		{

		}
		break;
    8da0:	00 00       	nop
    8da2:	29 c0       	rjmp	.+82     	; 0x8df6 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x86e>
			if(*(uint32_t*)val != eeprom_read_dword(&(EepromManager::ee_vars.frequency)))
			{
				avr_eeprom_write_dword(Frequency, *(uint32_t*)val);
			}	
		}
		break;
    8da4:	00 00       	nop
    8da6:	27 c0       	rjmp	.+78     	; 0x8df6 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x86e>
			if(*(uint32_t*)val != eeprom_read_dword(&(EepromManager::ee_vars.rtty_offset)))
			{
				avr_eeprom_write_dword(RTTY_offset, *(uint32_t*)val);
			}
		}
		break;
    8da8:	00 00       	nop
    8daa:	25 c0       	rjmp	.+74     	; 0x8df6 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x86e>
			if(*(uint16_t*)val != eeprom_read_word(&(EepromManager::ee_vars.rf_power)))
			{
				avr_eeprom_write_word(RF_Power, *(uint16_t*)val);
			}			
		}
		break;
    8dac:	00 00       	nop
    8dae:	23 c0       	rjmp	.+70     	; 0x8df6 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x86e>
			if(*(uint8_t*)val != eeprom_read_byte(&(EepromManager::ee_vars.id_codespeed)))
			{
				avr_eeprom_write_byte(Id_codespeed, *(uint8_t*)val);
			}
		}
		break;
    8db0:	00 00       	nop
    8db2:	21 c0       	rjmp	.+66     	; 0x8df6 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x86e>
			if(*(uint8_t*)val != eeprom_read_byte((uint8_t*)&(EepromManager::ee_vars.fox_setting)))
			{
				avr_eeprom_write_byte(Fox_setting, *(uint8_t*)val);
			}			
		}
		break;
    8db4:	00 00       	nop
    8db6:	1f c0       	rjmp	.+62     	; 0x8df6 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x86e>
			if(*(uint8_t*)val != eeprom_read_byte((uint8_t*)&(EepromManager::ee_vars.master_setting)))
			{
				avr_eeprom_write_byte(Master_setting, *(uint8_t*)val);
			}
		}
		break;
    8db8:	00 00       	nop
    8dba:	1d c0       	rjmp	.+58     	; 0x8df6 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x86e>
			if(*(uint8_t*)val != eeprom_read_byte((uint8_t*)&(EepromManager::ee_vars.event_setting)))
			{
				avr_eeprom_write_byte(Event_setting, *(uint8_t*)val);
			}
		}
		break;
    8dbc:	00 00       	nop
    8dbe:	1b c0       	rjmp	.+54     	; 0x8df6 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x86e>
			if(*(uint32_t*)val != eeprom_read_dword(&(EepromManager::ee_vars.foxoring_frequencyA)))
			{
				avr_eeprom_write_dword(Foxoring_FrequencyA, *(uint32_t*)val);
			}		
		}
		break;
    8dc0:	00 00       	nop
    8dc2:	19 c0       	rjmp	.+50     	; 0x8df6 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x86e>
			if(*(uint32_t*)val != eeprom_read_dword(&(EepromManager::ee_vars.foxoring_frequencyB)))
			{
				avr_eeprom_write_dword(Foxoring_FrequencyB, *(uint32_t*)val);
			}
		}
		break;
    8dc4:	00 00       	nop
    8dc6:	17 c0       	rjmp	.+46     	; 0x8df6 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x86e>
			if(*(uint32_t*)val != eeprom_read_dword(&(EepromManager::ee_vars.foxoring_frequencyC)))
			{
				avr_eeprom_write_dword(Foxoring_FrequencyC, *(uint32_t*)val);
			}
		}
		break;
    8dc8:	00 00       	nop
    8dca:	15 c0       	rjmp	.+42     	; 0x8df6 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x86e>
			if(*(uint8_t*)val != eeprom_read_byte((uint8_t*)&(EepromManager::ee_vars.foxoring_fox_setting)))
			{
				avr_eeprom_write_byte(Foxoring_fox_setting, *(uint8_t*)val);
			}		
		}
		break;
    8dcc:	00 00       	nop
    8dce:	13 c0       	rjmp	.+38     	; 0x8df6 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x86e>
			if(*(uint32_t*)val != eeprom_read_dword(&(EepromManager::ee_vars.event_start_epoch)))
			{
				avr_eeprom_write_dword(Event_start_epoch, *(uint32_t*)val);
			}
		}
		break;
    8dd0:	00 00       	nop
    8dd2:	11 c0       	rjmp	.+34     	; 0x8df6 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x86e>
			if(*(uint32_t*)val != eeprom_read_dword(&(EepromManager::ee_vars.event_finish_epoch)))
			{
				avr_eeprom_write_dword(Event_finish_epoch, *(uint32_t*)val);
			}		
		}
		break;
    8dd4:	00 00       	nop
    8dd6:	0f c0       	rjmp	.+30     	; 0x8df6 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x86e>
			if(*(uint8_t*)val != eeprom_read_byte(&(EepromManager::ee_vars.utc_offset)))
			{
				avr_eeprom_write_byte(Utc_offset, *(uint8_t*)val);
			}		
		}
		break;
    8dd8:	00 00       	nop
    8dda:	0d c0       	rjmp	.+26     	; 0x8df6 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x86e>
			if(*(uint8_t*)val != eeprom_read_byte(&(EepromManager::ee_vars.pattern_codespeed)))
			{
				avr_eeprom_write_byte(Pattern_Code_Speed, *(uint8_t*)val);
			}
		}
		break;
    8ddc:	00 00       	nop
    8dde:	0b c0       	rjmp	.+22     	; 0x8df6 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x86e>
			if(*(int16_t*)val != (int16_t)eeprom_read_word((const uint16_t *)&(EepromManager::ee_vars.off_air_seconds)))
			{
				avr_eeprom_write_word(Off_Air_Seconds, *(uint16_t*)val);
			}
		}
		break;
    8de0:	00 00       	nop
    8de2:	09 c0       	rjmp	.+18     	; 0x8df6 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x86e>
			if(*(int16_t*)val != (int16_t)eeprom_read_word((const uint16_t *)&(EepromManager::ee_vars.on_air_seconds)))
			{
				avr_eeprom_write_word(On_Air_Seconds, *(uint16_t*)val);
			}
		}
		break;
    8de4:	00 00       	nop
    8de6:	07 c0       	rjmp	.+14     	; 0x8df6 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x86e>
			if(*(int16_t*)val != (int16_t)eeprom_read_word((const uint16_t *)&(EepromManager::ee_vars.ID_period_seconds)))
			{
				avr_eeprom_write_word(ID_Period_Seconds, *(uint16_t*)val);
			}
		}
		break;
    8de8:	00 00       	nop
    8dea:	05 c0       	rjmp	.+10     	; 0x8df6 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x86e>
			if(*(int16_t*)val != (int16_t)eeprom_read_word((const uint16_t *)&(EepromManager::ee_vars.intra_cycle_delay_time)))
			{
				avr_eeprom_write_word(Intra_Cycle_Delay_Seconds, *(uint16_t*)val);
			}		
		}
		break;
    8dec:	00 00       	nop
    8dee:	03 c0       	rjmp	.+6      	; 0x8df6 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x86e>
			if(*(int16_t*)val != (int16_t)eeprom_read_word((const uint16_t *)&(EepromManager::ee_vars.eeprom_initialization_flag)))
			{
				avr_eeprom_write_word(Eeprom_initialization_flag, *(uint16_t*)val);
			}		
		}
		break;
    8df0:	00 00       	nop
    8df2:	01 c0       	rjmp	.+2      	; 0x8df6 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x86e>
			if(*(uint16_t*)val != eeprom_read_word(&(EepromManager::ee_vars.clock_calibration)))
			{
				avr_eeprom_write_word(Clock_calibration, *(uint16_t*)val);
			}
		}
		break;
    8df4:	00 00       	nop
		{

		}
		break;
	}
}
    8df6:	e6 96       	adiw	r28, 0x36	; 54
    8df8:	cd bf       	out	0x3d, r28	; 61
    8dfa:	de bf       	out	0x3e, r29	; 62
    8dfc:	df 91       	pop	r29
    8dfe:	cf 91       	pop	r28
    8e00:	1f 91       	pop	r17
    8e02:	0f 91       	pop	r16
    8e04:	ff 90       	pop	r15
    8e06:	ef 90       	pop	r14
    8e08:	df 90       	pop	r13
    8e0a:	cf 90       	pop	r12
    8e0c:	08 95       	ret

00008e0e <_ZN13EepromManager13saveAllEEPROMEv>:

/** 
 * Store any changed EEPROM variables
 */
void EepromManager::saveAllEEPROM(void)
{
    8e0e:	cf 93       	push	r28
    8e10:	df 93       	push	r29
    8e12:	00 d0       	rcall	.+0      	; 0x8e14 <_ZN13EepromManager13saveAllEEPROMEv+0x6>
    8e14:	cd b7       	in	r28, 0x3d	; 61
    8e16:	de b7       	in	r29, 0x3e	; 62
    8e18:	89 83       	std	Y+1, r24	; 0x01
    8e1a:	9a 83       	std	Y+2, r25	; 0x02
	updateEEPROMVar(Id_codespeed, (void*)&g_id_codespeed);	
    8e1c:	89 81       	ldd	r24, Y+1	; 0x01
    8e1e:	9a 81       	ldd	r25, Y+2	; 0x02
    8e20:	4d e0       	ldi	r20, 0x0D	; 13
    8e22:	50 e4       	ldi	r21, 0x40	; 64
    8e24:	65 e5       	ldi	r22, 0x55	; 85
    8e26:	70 e0       	ldi	r23, 0x00	; 0
    8e28:	0e 94 c4 42 	call	0x8588	; 0x8588 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(Fox_setting, (void*)&g_fox);
    8e2c:	89 81       	ldd	r24, Y+1	; 0x01
    8e2e:	9a 81       	ldd	r25, Y+2	; 0x02
    8e30:	40 e2       	ldi	r20, 0x20	; 32
    8e32:	50 e4       	ldi	r21, 0x40	; 64
    8e34:	6a e5       	ldi	r22, 0x5A	; 90
    8e36:	70 e0       	ldi	r23, 0x00	; 0
    8e38:	0e 94 c4 42 	call	0x8588	; 0x8588 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(Event_setting, (void*)&g_event);
    8e3c:	89 81       	ldd	r24, Y+1	; 0x01
    8e3e:	9a 81       	ldd	r25, Y+2	; 0x02
    8e40:	45 ea       	ldi	r20, 0xA5	; 165
    8e42:	56 e4       	ldi	r21, 0x46	; 70
    8e44:	67 e9       	ldi	r22, 0x97	; 151
    8e46:	70 e0       	ldi	r23, 0x00	; 0
    8e48:	0e 94 c4 42 	call	0x8588	; 0x8588 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(Foxoring_FrequencyA, (void*)&g_foxoring_frequencyA);
    8e4c:	89 81       	ldd	r24, Y+1	; 0x01
    8e4e:	9a 81       	ldd	r25, Y+2	; 0x02
    8e50:	42 e3       	ldi	r20, 0x32	; 50
    8e52:	50 e4       	ldi	r21, 0x40	; 64
    8e54:	6c e9       	ldi	r22, 0x9C	; 156
    8e56:	70 e0       	ldi	r23, 0x00	; 0
    8e58:	0e 94 c4 42 	call	0x8588	; 0x8588 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(Foxoring_FrequencyB, (void*)&g_foxoring_frequencyB);
    8e5c:	89 81       	ldd	r24, Y+1	; 0x01
    8e5e:	9a 81       	ldd	r25, Y+2	; 0x02
    8e60:	46 e3       	ldi	r20, 0x36	; 54
    8e62:	50 e4       	ldi	r21, 0x40	; 64
    8e64:	64 ea       	ldi	r22, 0xA4	; 164
    8e66:	70 e0       	ldi	r23, 0x00	; 0
    8e68:	0e 94 c4 42 	call	0x8588	; 0x8588 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(Foxoring_FrequencyC, (void*)&g_foxoring_frequencyC);
    8e6c:	89 81       	ldd	r24, Y+1	; 0x01
    8e6e:	9a 81       	ldd	r25, Y+2	; 0x02
    8e70:	4a e3       	ldi	r20, 0x3A	; 58
    8e72:	50 e4       	ldi	r21, 0x40	; 64
    8e74:	6c ea       	ldi	r22, 0xAC	; 172
    8e76:	70 e0       	ldi	r23, 0x00	; 0
    8e78:	0e 94 c4 42 	call	0x8588	; 0x8588 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(Foxoring_fox_setting, (void*)&g_foxoring_fox);
    8e7c:	89 81       	ldd	r24, Y+1	; 0x01
    8e7e:	9a 81       	ldd	r25, Y+2	; 0x02
    8e80:	4e e3       	ldi	r20, 0x3E	; 62
    8e82:	50 e4       	ldi	r21, 0x40	; 64
    8e84:	64 eb       	ldi	r22, 0xB4	; 180
    8e86:	70 e0       	ldi	r23, 0x00	; 0
    8e88:	0e 94 c4 42 	call	0x8588	; 0x8588 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(Event_start_epoch, (void*)&g_event_start_epoch);
    8e8c:	89 81       	ldd	r24, Y+1	; 0x01
    8e8e:	9a 81       	ldd	r25, Y+2	; 0x02
    8e90:	40 e4       	ldi	r20, 0x40	; 64
    8e92:	56 e4       	ldi	r21, 0x46	; 70
    8e94:	66 e0       	ldi	r22, 0x06	; 6
    8e96:	70 e0       	ldi	r23, 0x00	; 0
    8e98:	0e 94 c4 42 	call	0x8588	; 0x8588 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(Event_finish_epoch, (void*)&g_event_finish_epoch);
    8e9c:	89 81       	ldd	r24, Y+1	; 0x01
    8e9e:	9a 81       	ldd	r25, Y+2	; 0x02
    8ea0:	44 e4       	ldi	r20, 0x44	; 68
    8ea2:	56 e4       	ldi	r21, 0x46	; 70
    8ea4:	6e e0       	ldi	r22, 0x0E	; 14
    8ea6:	70 e0       	ldi	r23, 0x00	; 0
    8ea8:	0e 94 c4 42 	call	0x8588	; 0x8588 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(Utc_offset, (void*)&g_utc_offset);
    8eac:	89 81       	ldd	r24, Y+1	; 0x01
    8eae:	9a 81       	ldd	r25, Y+2	; 0x02
    8eb0:	47 e7       	ldi	r20, 0x77	; 119
    8eb2:	56 e4       	ldi	r21, 0x46	; 70
    8eb4:	6f e5       	ldi	r22, 0x5F	; 95
    8eb6:	70 e0       	ldi	r23, 0x00	; 0
    8eb8:	0e 94 c4 42 	call	0x8588	; 0x8588 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(StationID_text, (void*)g_messages_text[STATION_ID]);
    8ebc:	89 81       	ldd	r24, Y+1	; 0x01
    8ebe:	9a 81       	ldd	r25, Y+2	; 0x02
    8ec0:	47 e2       	ldi	r20, 0x27	; 39
    8ec2:	56 e4       	ldi	r21, 0x46	; 70
    8ec4:	66 e1       	ldi	r22, 0x16	; 22
    8ec6:	70 e0       	ldi	r23, 0x00	; 0
    8ec8:	0e 94 c4 42 	call	0x8588	; 0x8588 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(Pattern_text, (void*)g_messages_text[PATTERN_TEXT]);
    8ecc:	89 81       	ldd	r24, Y+1	; 0x01
    8ece:	9a 81       	ldd	r25, Y+2	; 0x02
    8ed0:	43 ed       	ldi	r20, 0xD3	; 211
    8ed2:	55 e4       	ldi	r21, 0x45	; 69
    8ed4:	6f e2       	ldi	r22, 0x2F	; 47
    8ed6:	70 e0       	ldi	r23, 0x00	; 0
    8ed8:	0e 94 c4 42 	call	0x8588	; 0x8588 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(UnlockCode, (void*)g_unlockCode);
    8edc:	89 81       	ldd	r24, Y+1	; 0x01
    8ede:	9a 81       	ldd	r25, Y+2	; 0x02
    8ee0:	48 e7       	ldi	r20, 0x78	; 120
    8ee2:	56 e4       	ldi	r21, 0x46	; 70
    8ee4:	68 e4       	ldi	r22, 0x48	; 72
    8ee6:	70 e0       	ldi	r23, 0x00	; 0
    8ee8:	0e 94 c4 42 	call	0x8588	; 0x8588 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(Frequency, (void*)&g_80m_frequency);
    8eec:	89 81       	ldd	r24, Y+1	; 0x01
    8eee:	9a 81       	ldd	r25, Y+2	; 0x02
    8ef0:	4a e5       	ldi	r20, 0x5A	; 90
    8ef2:	50 e4       	ldi	r21, 0x40	; 64
    8ef4:	64 e6       	ldi	r22, 0x64	; 100
    8ef6:	70 e0       	ldi	r23, 0x00	; 0
    8ef8:	0e 94 c4 42 	call	0x8588	; 0x8588 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(RTTY_offset, (void*)&g_rtty_offset);
    8efc:	89 81       	ldd	r24, Y+1	; 0x01
    8efe:	9a 81       	ldd	r25, Y+2	; 0x02
    8f00:	40 e6       	ldi	r20, 0x60	; 96
    8f02:	50 e4       	ldi	r21, 0x40	; 64
    8f04:	6c e6       	ldi	r22, 0x6C	; 108
    8f06:	70 e0       	ldi	r23, 0x00	; 0
    8f08:	0e 94 c4 42 	call	0x8588	; 0x8588 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(RF_Power, (void*)&g_80m_power_level_mW);
    8f0c:	89 81       	ldd	r24, Y+1	; 0x01
    8f0e:	9a 81       	ldd	r25, Y+2	; 0x02
    8f10:	4e e5       	ldi	r20, 0x5E	; 94
    8f12:	50 e4       	ldi	r21, 0x40	; 64
    8f14:	64 e7       	ldi	r22, 0x74	; 116
    8f16:	70 e0       	ldi	r23, 0x00	; 0
    8f18:	0e 94 c4 42 	call	0x8588	; 0x8588 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(Pattern_Code_Speed, (void*)&g_pattern_codespeed);
    8f1c:	89 81       	ldd	r24, Y+1	; 0x01
    8f1e:	9a 81       	ldd	r25, Y+2	; 0x02
    8f20:	4e e0       	ldi	r20, 0x0E	; 14
    8f22:	50 e4       	ldi	r21, 0x40	; 64
    8f24:	6a e7       	ldi	r22, 0x7A	; 122
    8f26:	70 e0       	ldi	r23, 0x00	; 0
    8f28:	0e 94 c4 42 	call	0x8588	; 0x8588 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(Off_Air_Seconds, (void*)&g_off_air_seconds);
    8f2c:	89 81       	ldd	r24, Y+1	; 0x01
    8f2e:	9a 81       	ldd	r25, Y+2	; 0x02
    8f30:	41 e1       	ldi	r20, 0x11	; 17
    8f32:	50 e4       	ldi	r21, 0x40	; 64
    8f34:	6f e7       	ldi	r22, 0x7F	; 127
    8f36:	70 e0       	ldi	r23, 0x00	; 0
    8f38:	0e 94 c4 42 	call	0x8588	; 0x8588 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(On_Air_Seconds, (void*)&g_on_air_seconds);
    8f3c:	89 81       	ldd	r24, Y+1	; 0x01
    8f3e:	9a 81       	ldd	r25, Y+2	; 0x02
    8f40:	4f e0       	ldi	r20, 0x0F	; 15
    8f42:	50 e4       	ldi	r21, 0x40	; 64
    8f44:	65 e8       	ldi	r22, 0x85	; 133
    8f46:	70 e0       	ldi	r23, 0x00	; 0
    8f48:	0e 94 c4 42 	call	0x8588	; 0x8588 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(ID_Period_Seconds, (void*)&g_ID_period_seconds);
    8f4c:	89 81       	ldd	r24, Y+1	; 0x01
    8f4e:	9a 81       	ldd	r25, Y+2	; 0x02
    8f50:	43 e1       	ldi	r20, 0x13	; 19
    8f52:	50 e4       	ldi	r21, 0x40	; 64
    8f54:	6b e8       	ldi	r22, 0x8B	; 139
    8f56:	70 e0       	ldi	r23, 0x00	; 0
    8f58:	0e 94 c4 42 	call	0x8588	; 0x8588 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(Intra_Cycle_Delay_Seconds, (void*)&g_intra_cycle_delay_time);
    8f5c:	89 81       	ldd	r24, Y+1	; 0x01
    8f5e:	9a 81       	ldd	r25, Y+2	; 0x02
    8f60:	4e e3       	ldi	r20, 0x3E	; 62
    8f62:	56 e4       	ldi	r21, 0x46	; 70
    8f64:	61 e9       	ldi	r22, 0x91	; 145
    8f66:	70 e0       	ldi	r23, 0x00	; 0
    8f68:	0e 94 c4 42 	call	0x8588	; 0x8588 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(FoxA_pattern_text, (void*)g_messages_text[FOXA_PATTERN_TEXT]);
    8f6c:	89 81       	ldd	r24, Y+1	; 0x01
    8f6e:	9a 81       	ldd	r25, Y+2	; 0x02
    8f70:	48 ee       	ldi	r20, 0xE8	; 232
    8f72:	55 e4       	ldi	r21, 0x45	; 69
    8f74:	6e eb       	ldi	r22, 0xBE	; 190
    8f76:	70 e0       	ldi	r23, 0x00	; 0
    8f78:	0e 94 c4 42 	call	0x8588	; 0x8588 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(FoxB_pattern_text, (void*)g_messages_text[FOXB_PATTERN_TEXT]);
    8f7c:	89 81       	ldd	r24, Y+1	; 0x01
    8f7e:	9a 81       	ldd	r25, Y+2	; 0x02
    8f80:	4d ef       	ldi	r20, 0xFD	; 253
    8f82:	55 e4       	ldi	r21, 0x45	; 69
    8f84:	67 ed       	ldi	r22, 0xD7	; 215
    8f86:	70 e0       	ldi	r23, 0x00	; 0
    8f88:	0e 94 c4 42 	call	0x8588	; 0x8588 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(FoxC_pattern_text, (void*)g_messages_text[FOXC_PATTERN_TEXT]);
    8f8c:	89 81       	ldd	r24, Y+1	; 0x01
    8f8e:	9a 81       	ldd	r25, Y+2	; 0x02
    8f90:	42 e1       	ldi	r20, 0x12	; 18
    8f92:	56 e4       	ldi	r21, 0x46	; 70
    8f94:	60 ef       	ldi	r22, 0xF0	; 240
    8f96:	70 e0       	ldi	r23, 0x00	; 0
    8f98:	0e 94 c4 42 	call	0x8588	; 0x8588 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(Voltage_threshold, (void*)&g_voltage_threshold);
    8f9c:	89 81       	ldd	r24, Y+1	; 0x01
    8f9e:	9a 81       	ldd	r25, Y+2	; 0x02
    8fa0:	4f e3       	ldi	r20, 0x3F	; 63
    8fa2:	50 e4       	ldi	r21, 0x40	; 64
    8fa4:	69 e0       	ldi	r22, 0x09	; 9
    8fa6:	71 e0       	ldi	r23, 0x01	; 1
    8fa8:	0e 94 c4 42 	call	0x8588	; 0x8588 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(Clock_calibration, (void*)&g_clock_calibration);
    8fac:	89 81       	ldd	r24, Y+1	; 0x01
    8fae:	9a 81       	ldd	r25, Y+2	; 0x02
    8fb0:	43 e4       	ldi	r20, 0x43	; 67
    8fb2:	50 e4       	ldi	r21, 0x40	; 64
    8fb4:	61 e1       	ldi	r22, 0x11	; 17
    8fb6:	71 e0       	ldi	r23, 0x01	; 1
    8fb8:	0e 94 c4 42 	call	0x8588	; 0x8588 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
}
    8fbc:	00 00       	nop
    8fbe:	0f 90       	pop	r0
    8fc0:	0f 90       	pop	r0
    8fc2:	df 91       	pop	r29
    8fc4:	cf 91       	pop	r28
    8fc6:	08 95       	ret

00008fc8 <_ZN13EepromManager11readNonVolsEv>:


bool EepromManager::readNonVols(void)
{
    8fc8:	0f 93       	push	r16
    8fca:	1f 93       	push	r17
    8fcc:	cf 93       	push	r28
    8fce:	df 93       	push	r29
    8fd0:	cd b7       	in	r28, 0x3d	; 61
    8fd2:	de b7       	in	r29, 0x3e	; 62
    8fd4:	c5 57       	subi	r28, 0x75	; 117
    8fd6:	d1 09       	sbc	r29, r1
    8fd8:	cd bf       	out	0x3d, r28	; 61
    8fda:	de bf       	out	0x3e, r29	; 62
    8fdc:	9e 01       	movw	r18, r28
    8fde:	2c 58       	subi	r18, 0x8C	; 140
    8fe0:	3f 4f       	sbci	r19, 0xFF	; 255
    8fe2:	f9 01       	movw	r30, r18
    8fe4:	80 83       	st	Z, r24
    8fe6:	91 83       	std	Z+1, r25	; 0x01
	bool failure = true;
    8fe8:	81 e0       	ldi	r24, 0x01	; 1
    8fea:	89 83       	std	Y+1, r24	; 0x01
	uint16_t i;
	uint16_t initialization_flag = eeprom_read_word(0);
    8fec:	80 e0       	ldi	r24, 0x00	; 0
    8fee:	90 e0       	ldi	r25, 0x00	; 0
    8ff0:	0e 94 d8 84 	call	0x109b0	; 0x109b0 <eeprom_read_word>
    8ff4:	8a 87       	std	Y+10, r24	; 0x0a
    8ff6:	9b 87       	std	Y+11, r25	; 0x0b

	if(initialization_flag == EEPROM_INITIALIZED_FLAG)  /* EEPROM is up to date */
    8ff8:	8a 85       	ldd	r24, Y+10	; 0x0a
    8ffa:	9b 85       	ldd	r25, Y+11	; 0x0b
    8ffc:	82 30       	cpi	r24, 0x02	; 2
    8ffe:	91 40       	sbci	r25, 0x01	; 1
    9000:	09 f0       	breq	.+2      	; 0x9004 <_ZN13EepromManager11readNonVolsEv+0x3c>
    9002:	e6 c4       	rjmp	.+2508   	; 0x99d0 <_ZN13EepromManager11readNonVolsEv+0xa08>
	{
		g_isMaster = EEPROM_MASTER_SETTING_DEFAULT; // (int8_t)eeprom_read_byte(&(EepromManager::ee_vars.master_setting));
    9004:	10 92 a4 46 	sts	0x46A4, r1	; 0x8046a4 <g_isMaster>
		g_id_codespeed = CLAMP(MIN_CODE_SPEED_WPM, eeprom_read_byte(&(EepromManager::ee_vars.id_codespeed)), MAX_CODE_SPEED_WPM);
    9008:	85 e5       	ldi	r24, 0x55	; 85
    900a:	90 e0       	ldi	r25, 0x00	; 0
    900c:	0e 94 c9 84 	call	0x10992	; 0x10992 <eeprom_read_byte>
    9010:	8c 87       	std	Y+12, r24	; 0x0c
    9012:	85 e0       	ldi	r24, 0x05	; 5
    9014:	8d 87       	std	Y+13, r24	; 0x0d
    9016:	84 e1       	ldi	r24, 0x14	; 20
    9018:	8e 87       	std	Y+14, r24	; 0x0e
    901a:	9c 85       	ldd	r25, Y+12	; 0x0c
    901c:	8e 85       	ldd	r24, Y+14	; 0x0e
    901e:	89 17       	cp	r24, r25
    9020:	40 f0       	brcs	.+16     	; 0x9032 <_ZN13EepromManager11readNonVolsEv+0x6a>
    9022:	9c 85       	ldd	r25, Y+12	; 0x0c
    9024:	8d 85       	ldd	r24, Y+13	; 0x0d
    9026:	98 17       	cp	r25, r24
    9028:	10 f4       	brcc	.+4      	; 0x902e <_ZN13EepromManager11readNonVolsEv+0x66>
    902a:	8d 85       	ldd	r24, Y+13	; 0x0d
    902c:	03 c0       	rjmp	.+6      	; 0x9034 <_ZN13EepromManager11readNonVolsEv+0x6c>
    902e:	8c 85       	ldd	r24, Y+12	; 0x0c
    9030:	01 c0       	rjmp	.+2      	; 0x9034 <_ZN13EepromManager11readNonVolsEv+0x6c>
    9032:	8e 85       	ldd	r24, Y+14	; 0x0e
    9034:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_id_codespeed>
		g_event = (Event_t)eeprom_read_byte((const uint8_t*)&(EepromManager::ee_vars.event_setting));
    9038:	87 e9       	ldi	r24, 0x97	; 151
    903a:	90 e0       	ldi	r25, 0x00	; 0
    903c:	0e 94 c9 84 	call	0x10992	; 0x10992 <eeprom_read_byte>
    9040:	80 93 a5 46 	sts	0x46A5, r24	; 0x8046a5 <g_event>
		g_foxoring_frequencyA = CLAMP(TX_MINIMUM_80M_FREQUENCY, eeprom_read_dword(&(EepromManager::ee_vars.foxoring_frequencyA)), TX_MAXIMUM_80M_FREQUENCY);
    9044:	8c e9       	ldi	r24, 0x9C	; 156
    9046:	90 e0       	ldi	r25, 0x00	; 0
    9048:	0e 94 d1 84 	call	0x109a2	; 0x109a2 <eeprom_read_dword>
    904c:	dc 01       	movw	r26, r24
    904e:	cb 01       	movw	r24, r22
    9050:	8f 87       	std	Y+15, r24	; 0x0f
    9052:	98 8b       	std	Y+16, r25	; 0x10
    9054:	a9 8b       	std	Y+17, r26	; 0x11
    9056:	ba 8b       	std	Y+18, r27	; 0x12
    9058:	80 ee       	ldi	r24, 0xE0	; 224
    905a:	97 e6       	ldi	r25, 0x67	; 103
    905c:	a5 e3       	ldi	r26, 0x35	; 53
    905e:	b0 e0       	ldi	r27, 0x00	; 0
    9060:	8b 8b       	std	Y+19, r24	; 0x13
    9062:	9c 8b       	std	Y+20, r25	; 0x14
    9064:	ad 8b       	std	Y+21, r26	; 0x15
    9066:	be 8b       	std	Y+22, r27	; 0x16
    9068:	80 e0       	ldi	r24, 0x00	; 0
    906a:	99 e0       	ldi	r25, 0x09	; 9
    906c:	ad e3       	ldi	r26, 0x3D	; 61
    906e:	b0 e0       	ldi	r27, 0x00	; 0
    9070:	8f 8b       	std	Y+23, r24	; 0x17
    9072:	98 8f       	std	Y+24, r25	; 0x18
    9074:	a9 8f       	std	Y+25, r26	; 0x19
    9076:	ba 8f       	std	Y+26, r27	; 0x1a
    9078:	2f 85       	ldd	r18, Y+15	; 0x0f
    907a:	38 89       	ldd	r19, Y+16	; 0x10
    907c:	49 89       	ldd	r20, Y+17	; 0x11
    907e:	5a 89       	ldd	r21, Y+18	; 0x12
    9080:	8f 89       	ldd	r24, Y+23	; 0x17
    9082:	98 8d       	ldd	r25, Y+24	; 0x18
    9084:	a9 8d       	ldd	r26, Y+25	; 0x19
    9086:	ba 8d       	ldd	r27, Y+26	; 0x1a
    9088:	82 17       	cp	r24, r18
    908a:	93 07       	cpc	r25, r19
    908c:	a4 07       	cpc	r26, r20
    908e:	b5 07       	cpc	r27, r21
    9090:	b8 f0       	brcs	.+46     	; 0x90c0 <_ZN13EepromManager11readNonVolsEv+0xf8>
    9092:	2f 85       	ldd	r18, Y+15	; 0x0f
    9094:	38 89       	ldd	r19, Y+16	; 0x10
    9096:	49 89       	ldd	r20, Y+17	; 0x11
    9098:	5a 89       	ldd	r21, Y+18	; 0x12
    909a:	8b 89       	ldd	r24, Y+19	; 0x13
    909c:	9c 89       	ldd	r25, Y+20	; 0x14
    909e:	ad 89       	ldd	r26, Y+21	; 0x15
    90a0:	be 89       	ldd	r27, Y+22	; 0x16
    90a2:	28 17       	cp	r18, r24
    90a4:	39 07       	cpc	r19, r25
    90a6:	4a 07       	cpc	r20, r26
    90a8:	5b 07       	cpc	r21, r27
    90aa:	28 f4       	brcc	.+10     	; 0x90b6 <_ZN13EepromManager11readNonVolsEv+0xee>
    90ac:	8b 89       	ldd	r24, Y+19	; 0x13
    90ae:	9c 89       	ldd	r25, Y+20	; 0x14
    90b0:	ad 89       	ldd	r26, Y+21	; 0x15
    90b2:	be 89       	ldd	r27, Y+22	; 0x16
    90b4:	09 c0       	rjmp	.+18     	; 0x90c8 <_ZN13EepromManager11readNonVolsEv+0x100>
    90b6:	8f 85       	ldd	r24, Y+15	; 0x0f
    90b8:	98 89       	ldd	r25, Y+16	; 0x10
    90ba:	a9 89       	ldd	r26, Y+17	; 0x11
    90bc:	ba 89       	ldd	r27, Y+18	; 0x12
    90be:	04 c0       	rjmp	.+8      	; 0x90c8 <_ZN13EepromManager11readNonVolsEv+0x100>
    90c0:	8f 89       	ldd	r24, Y+23	; 0x17
    90c2:	98 8d       	ldd	r25, Y+24	; 0x18
    90c4:	a9 8d       	ldd	r26, Y+25	; 0x19
    90c6:	ba 8d       	ldd	r27, Y+26	; 0x1a
    90c8:	80 93 32 40 	sts	0x4032, r24	; 0x804032 <g_foxoring_frequencyA>
    90cc:	90 93 33 40 	sts	0x4033, r25	; 0x804033 <g_foxoring_frequencyA+0x1>
    90d0:	a0 93 34 40 	sts	0x4034, r26	; 0x804034 <g_foxoring_frequencyA+0x2>
    90d4:	b0 93 35 40 	sts	0x4035, r27	; 0x804035 <g_foxoring_frequencyA+0x3>
		g_foxoring_frequencyB = CLAMP(TX_MINIMUM_80M_FREQUENCY, eeprom_read_dword(&(EepromManager::ee_vars.foxoring_frequencyB)), TX_MAXIMUM_80M_FREQUENCY);
    90d8:	84 ea       	ldi	r24, 0xA4	; 164
    90da:	90 e0       	ldi	r25, 0x00	; 0
    90dc:	0e 94 d1 84 	call	0x109a2	; 0x109a2 <eeprom_read_dword>
    90e0:	dc 01       	movw	r26, r24
    90e2:	cb 01       	movw	r24, r22
    90e4:	8b 8f       	std	Y+27, r24	; 0x1b
    90e6:	9c 8f       	std	Y+28, r25	; 0x1c
    90e8:	ad 8f       	std	Y+29, r26	; 0x1d
    90ea:	be 8f       	std	Y+30, r27	; 0x1e
    90ec:	80 ee       	ldi	r24, 0xE0	; 224
    90ee:	97 e6       	ldi	r25, 0x67	; 103
    90f0:	a5 e3       	ldi	r26, 0x35	; 53
    90f2:	b0 e0       	ldi	r27, 0x00	; 0
    90f4:	8f 8f       	std	Y+31, r24	; 0x1f
    90f6:	98 a3       	std	Y+32, r25	; 0x20
    90f8:	a9 a3       	std	Y+33, r26	; 0x21
    90fa:	ba a3       	std	Y+34, r27	; 0x22
    90fc:	80 e0       	ldi	r24, 0x00	; 0
    90fe:	99 e0       	ldi	r25, 0x09	; 9
    9100:	ad e3       	ldi	r26, 0x3D	; 61
    9102:	b0 e0       	ldi	r27, 0x00	; 0
    9104:	8b a3       	std	Y+35, r24	; 0x23
    9106:	9c a3       	std	Y+36, r25	; 0x24
    9108:	ad a3       	std	Y+37, r26	; 0x25
    910a:	be a3       	std	Y+38, r27	; 0x26
    910c:	2b 8d       	ldd	r18, Y+27	; 0x1b
    910e:	3c 8d       	ldd	r19, Y+28	; 0x1c
    9110:	4d 8d       	ldd	r20, Y+29	; 0x1d
    9112:	5e 8d       	ldd	r21, Y+30	; 0x1e
    9114:	8b a1       	ldd	r24, Y+35	; 0x23
    9116:	9c a1       	ldd	r25, Y+36	; 0x24
    9118:	ad a1       	ldd	r26, Y+37	; 0x25
    911a:	be a1       	ldd	r27, Y+38	; 0x26
    911c:	82 17       	cp	r24, r18
    911e:	93 07       	cpc	r25, r19
    9120:	a4 07       	cpc	r26, r20
    9122:	b5 07       	cpc	r27, r21
    9124:	b8 f0       	brcs	.+46     	; 0x9154 <_ZN13EepromManager11readNonVolsEv+0x18c>
    9126:	2b 8d       	ldd	r18, Y+27	; 0x1b
    9128:	3c 8d       	ldd	r19, Y+28	; 0x1c
    912a:	4d 8d       	ldd	r20, Y+29	; 0x1d
    912c:	5e 8d       	ldd	r21, Y+30	; 0x1e
    912e:	8f 8d       	ldd	r24, Y+31	; 0x1f
    9130:	98 a1       	ldd	r25, Y+32	; 0x20
    9132:	a9 a1       	ldd	r26, Y+33	; 0x21
    9134:	ba a1       	ldd	r27, Y+34	; 0x22
    9136:	28 17       	cp	r18, r24
    9138:	39 07       	cpc	r19, r25
    913a:	4a 07       	cpc	r20, r26
    913c:	5b 07       	cpc	r21, r27
    913e:	28 f4       	brcc	.+10     	; 0x914a <_ZN13EepromManager11readNonVolsEv+0x182>
    9140:	8f 8d       	ldd	r24, Y+31	; 0x1f
    9142:	98 a1       	ldd	r25, Y+32	; 0x20
    9144:	a9 a1       	ldd	r26, Y+33	; 0x21
    9146:	ba a1       	ldd	r27, Y+34	; 0x22
    9148:	09 c0       	rjmp	.+18     	; 0x915c <_ZN13EepromManager11readNonVolsEv+0x194>
    914a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    914c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    914e:	ad 8d       	ldd	r26, Y+29	; 0x1d
    9150:	be 8d       	ldd	r27, Y+30	; 0x1e
    9152:	04 c0       	rjmp	.+8      	; 0x915c <_ZN13EepromManager11readNonVolsEv+0x194>
    9154:	8b a1       	ldd	r24, Y+35	; 0x23
    9156:	9c a1       	ldd	r25, Y+36	; 0x24
    9158:	ad a1       	ldd	r26, Y+37	; 0x25
    915a:	be a1       	ldd	r27, Y+38	; 0x26
    915c:	80 93 36 40 	sts	0x4036, r24	; 0x804036 <g_foxoring_frequencyB>
    9160:	90 93 37 40 	sts	0x4037, r25	; 0x804037 <g_foxoring_frequencyB+0x1>
    9164:	a0 93 38 40 	sts	0x4038, r26	; 0x804038 <g_foxoring_frequencyB+0x2>
    9168:	b0 93 39 40 	sts	0x4039, r27	; 0x804039 <g_foxoring_frequencyB+0x3>
		g_foxoring_frequencyC = CLAMP(TX_MINIMUM_80M_FREQUENCY, eeprom_read_dword(&(EepromManager::ee_vars.foxoring_frequencyC)), TX_MAXIMUM_80M_FREQUENCY);
    916c:	8c ea       	ldi	r24, 0xAC	; 172
    916e:	90 e0       	ldi	r25, 0x00	; 0
    9170:	0e 94 d1 84 	call	0x109a2	; 0x109a2 <eeprom_read_dword>
    9174:	dc 01       	movw	r26, r24
    9176:	cb 01       	movw	r24, r22
    9178:	8f a3       	std	Y+39, r24	; 0x27
    917a:	98 a7       	std	Y+40, r25	; 0x28
    917c:	a9 a7       	std	Y+41, r26	; 0x29
    917e:	ba a7       	std	Y+42, r27	; 0x2a
    9180:	80 ee       	ldi	r24, 0xE0	; 224
    9182:	97 e6       	ldi	r25, 0x67	; 103
    9184:	a5 e3       	ldi	r26, 0x35	; 53
    9186:	b0 e0       	ldi	r27, 0x00	; 0
    9188:	8b a7       	std	Y+43, r24	; 0x2b
    918a:	9c a7       	std	Y+44, r25	; 0x2c
    918c:	ad a7       	std	Y+45, r26	; 0x2d
    918e:	be a7       	std	Y+46, r27	; 0x2e
    9190:	80 e0       	ldi	r24, 0x00	; 0
    9192:	99 e0       	ldi	r25, 0x09	; 9
    9194:	ad e3       	ldi	r26, 0x3D	; 61
    9196:	b0 e0       	ldi	r27, 0x00	; 0
    9198:	8f a7       	std	Y+47, r24	; 0x2f
    919a:	98 ab       	std	Y+48, r25	; 0x30
    919c:	a9 ab       	std	Y+49, r26	; 0x31
    919e:	ba ab       	std	Y+50, r27	; 0x32
    91a0:	2f a1       	ldd	r18, Y+39	; 0x27
    91a2:	38 a5       	ldd	r19, Y+40	; 0x28
    91a4:	49 a5       	ldd	r20, Y+41	; 0x29
    91a6:	5a a5       	ldd	r21, Y+42	; 0x2a
    91a8:	8f a5       	ldd	r24, Y+47	; 0x2f
    91aa:	98 a9       	ldd	r25, Y+48	; 0x30
    91ac:	a9 a9       	ldd	r26, Y+49	; 0x31
    91ae:	ba a9       	ldd	r27, Y+50	; 0x32
    91b0:	82 17       	cp	r24, r18
    91b2:	93 07       	cpc	r25, r19
    91b4:	a4 07       	cpc	r26, r20
    91b6:	b5 07       	cpc	r27, r21
    91b8:	b8 f0       	brcs	.+46     	; 0x91e8 <_ZN13EepromManager11readNonVolsEv+0x220>
    91ba:	2f a1       	ldd	r18, Y+39	; 0x27
    91bc:	38 a5       	ldd	r19, Y+40	; 0x28
    91be:	49 a5       	ldd	r20, Y+41	; 0x29
    91c0:	5a a5       	ldd	r21, Y+42	; 0x2a
    91c2:	8b a5       	ldd	r24, Y+43	; 0x2b
    91c4:	9c a5       	ldd	r25, Y+44	; 0x2c
    91c6:	ad a5       	ldd	r26, Y+45	; 0x2d
    91c8:	be a5       	ldd	r27, Y+46	; 0x2e
    91ca:	28 17       	cp	r18, r24
    91cc:	39 07       	cpc	r19, r25
    91ce:	4a 07       	cpc	r20, r26
    91d0:	5b 07       	cpc	r21, r27
    91d2:	28 f4       	brcc	.+10     	; 0x91de <_ZN13EepromManager11readNonVolsEv+0x216>
    91d4:	8b a5       	ldd	r24, Y+43	; 0x2b
    91d6:	9c a5       	ldd	r25, Y+44	; 0x2c
    91d8:	ad a5       	ldd	r26, Y+45	; 0x2d
    91da:	be a5       	ldd	r27, Y+46	; 0x2e
    91dc:	09 c0       	rjmp	.+18     	; 0x91f0 <_ZN13EepromManager11readNonVolsEv+0x228>
    91de:	8f a1       	ldd	r24, Y+39	; 0x27
    91e0:	98 a5       	ldd	r25, Y+40	; 0x28
    91e2:	a9 a5       	ldd	r26, Y+41	; 0x29
    91e4:	ba a5       	ldd	r27, Y+42	; 0x2a
    91e6:	04 c0       	rjmp	.+8      	; 0x91f0 <_ZN13EepromManager11readNonVolsEv+0x228>
    91e8:	8f a5       	ldd	r24, Y+47	; 0x2f
    91ea:	98 a9       	ldd	r25, Y+48	; 0x30
    91ec:	a9 a9       	ldd	r26, Y+49	; 0x31
    91ee:	ba a9       	ldd	r27, Y+50	; 0x32
    91f0:	80 93 3a 40 	sts	0x403A, r24	; 0x80403a <g_foxoring_frequencyC>
    91f4:	90 93 3b 40 	sts	0x403B, r25	; 0x80403b <g_foxoring_frequencyC+0x1>
    91f8:	a0 93 3c 40 	sts	0x403C, r26	; 0x80403c <g_foxoring_frequencyC+0x2>
    91fc:	b0 93 3d 40 	sts	0x403D, r27	; 0x80403d <g_foxoring_frequencyC+0x3>
		g_foxoring_fox = (Fox_t)(CLAMP(FOXORING_EVENT_FOXA, eeprom_read_byte((uint8_t*)&(EepromManager::ee_vars.fox_setting)), FOXORING_EVENT_FOXC));
    9200:	8a e5       	ldi	r24, 0x5A	; 90
    9202:	90 e0       	ldi	r25, 0x00	; 0
    9204:	0e 94 c9 84 	call	0x10992	; 0x10992 <eeprom_read_byte>
    9208:	8b ab       	std	Y+51, r24	; 0x33
    920a:	82 e1       	ldi	r24, 0x12	; 18
    920c:	8c ab       	std	Y+52, r24	; 0x34
    920e:	84 e1       	ldi	r24, 0x14	; 20
    9210:	8d ab       	std	Y+53, r24	; 0x35
    9212:	9b a9       	ldd	r25, Y+51	; 0x33
    9214:	8d a9       	ldd	r24, Y+53	; 0x35
    9216:	89 17       	cp	r24, r25
    9218:	20 f4       	brcc	.+8      	; 0x9222 <_ZN13EepromManager11readNonVolsEv+0x25a>
    921a:	8d a9       	ldd	r24, Y+53	; 0x35
    921c:	88 2f       	mov	r24, r24
    921e:	90 e0       	ldi	r25, 0x00	; 0
    9220:	0b c0       	rjmp	.+22     	; 0x9238 <_ZN13EepromManager11readNonVolsEv+0x270>
    9222:	9b a9       	ldd	r25, Y+51	; 0x33
    9224:	8c a9       	ldd	r24, Y+52	; 0x34
    9226:	98 17       	cp	r25, r24
    9228:	20 f4       	brcc	.+8      	; 0x9232 <_ZN13EepromManager11readNonVolsEv+0x26a>
    922a:	8c a9       	ldd	r24, Y+52	; 0x34
    922c:	88 2f       	mov	r24, r24
    922e:	90 e0       	ldi	r25, 0x00	; 0
    9230:	03 c0       	rjmp	.+6      	; 0x9238 <_ZN13EepromManager11readNonVolsEv+0x270>
    9232:	8b a9       	ldd	r24, Y+51	; 0x33
    9234:	88 2f       	mov	r24, r24
    9236:	90 e0       	ldi	r25, 0x00	; 0
    9238:	80 93 3e 40 	sts	0x403E, r24	; 0x80403e <g_foxoring_fox>
		g_fox = (Fox_t)(CLAMP(BEACON, eeprom_read_byte((uint8_t*)&(EepromManager::ee_vars.fox_setting)), SPRINT_F5));
    923c:	8a e5       	ldi	r24, 0x5A	; 90
    923e:	90 e0       	ldi	r25, 0x00	; 0
    9240:	0e 94 c9 84 	call	0x10992	; 0x10992 <eeprom_read_byte>
    9244:	8e ab       	std	Y+54, r24	; 0x36
    9246:	1f aa       	std	Y+55, r1	; 0x37
    9248:	81 e1       	ldi	r24, 0x11	; 17
    924a:	88 af       	std	Y+56, r24	; 0x38
    924c:	9e a9       	ldd	r25, Y+54	; 0x36
    924e:	88 ad       	ldd	r24, Y+56	; 0x38
    9250:	89 17       	cp	r24, r25
    9252:	20 f4       	brcc	.+8      	; 0x925c <_ZN13EepromManager11readNonVolsEv+0x294>
    9254:	88 ad       	ldd	r24, Y+56	; 0x38
    9256:	88 2f       	mov	r24, r24
    9258:	90 e0       	ldi	r25, 0x00	; 0
    925a:	0b c0       	rjmp	.+22     	; 0x9272 <_ZN13EepromManager11readNonVolsEv+0x2aa>
    925c:	9e a9       	ldd	r25, Y+54	; 0x36
    925e:	8f a9       	ldd	r24, Y+55	; 0x37
    9260:	98 17       	cp	r25, r24
    9262:	20 f4       	brcc	.+8      	; 0x926c <_ZN13EepromManager11readNonVolsEv+0x2a4>
    9264:	8f a9       	ldd	r24, Y+55	; 0x37
    9266:	88 2f       	mov	r24, r24
    9268:	90 e0       	ldi	r25, 0x00	; 0
    926a:	03 c0       	rjmp	.+6      	; 0x9272 <_ZN13EepromManager11readNonVolsEv+0x2aa>
    926c:	8e a9       	ldd	r24, Y+54	; 0x36
    926e:	88 2f       	mov	r24, r24
    9270:	90 e0       	ldi	r25, 0x00	; 0
    9272:	80 93 20 40 	sts	0x4020, r24	; 0x804020 <g_fox>
		g_event_start_epoch = eeprom_read_dword(&(EepromManager::ee_vars.event_start_epoch));
    9276:	86 e0       	ldi	r24, 0x06	; 6
    9278:	90 e0       	ldi	r25, 0x00	; 0
    927a:	0e 94 d1 84 	call	0x109a2	; 0x109a2 <eeprom_read_dword>
    927e:	dc 01       	movw	r26, r24
    9280:	cb 01       	movw	r24, r22
    9282:	80 93 40 46 	sts	0x4640, r24	; 0x804640 <g_event_start_epoch>
    9286:	90 93 41 46 	sts	0x4641, r25	; 0x804641 <g_event_start_epoch+0x1>
    928a:	a0 93 42 46 	sts	0x4642, r26	; 0x804642 <g_event_start_epoch+0x2>
    928e:	b0 93 43 46 	sts	0x4643, r27	; 0x804643 <g_event_start_epoch+0x3>
		g_event_finish_epoch = eeprom_read_dword(&(EepromManager::ee_vars.event_finish_epoch));
    9292:	8e e0       	ldi	r24, 0x0E	; 14
    9294:	90 e0       	ldi	r25, 0x00	; 0
    9296:	0e 94 d1 84 	call	0x109a2	; 0x109a2 <eeprom_read_dword>
    929a:	dc 01       	movw	r26, r24
    929c:	cb 01       	movw	r24, r22
    929e:	80 93 44 46 	sts	0x4644, r24	; 0x804644 <g_event_finish_epoch>
    92a2:	90 93 45 46 	sts	0x4645, r25	; 0x804645 <g_event_finish_epoch+0x1>
    92a6:	a0 93 46 46 	sts	0x4646, r26	; 0x804646 <g_event_finish_epoch+0x2>
    92aa:	b0 93 47 46 	sts	0x4647, r27	; 0x804647 <g_event_finish_epoch+0x3>
		g_utc_offset = (int8_t)eeprom_read_byte(&(EepromManager::ee_vars.utc_offset));
    92ae:	8f e5       	ldi	r24, 0x5F	; 95
    92b0:	90 e0       	ldi	r25, 0x00	; 0
    92b2:	0e 94 c9 84 	call	0x10992	; 0x10992 <eeprom_read_byte>
    92b6:	80 93 77 46 	sts	0x4677, r24	; 0x804677 <g_utc_offset>

		for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    92ba:	1a 82       	std	Y+2, r1	; 0x02
    92bc:	1b 82       	std	Y+3, r1	; 0x03
    92be:	8a 81       	ldd	r24, Y+2	; 0x02
    92c0:	9b 81       	ldd	r25, Y+3	; 0x03
    92c2:	44 97       	sbiw	r24, 0x14	; 20
    92c4:	e8 f4       	brcc	.+58     	; 0x9300 <_ZN13EepromManager11readNonVolsEv+0x338>
		{
			char c = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.stationID_text[i])));
    92c6:	8a 81       	ldd	r24, Y+2	; 0x02
    92c8:	9b 81       	ldd	r25, Y+3	; 0x03
    92ca:	46 96       	adiw	r24, 0x16	; 22
    92cc:	80 50       	subi	r24, 0x00	; 0
    92ce:	90 40       	sbci	r25, 0x00	; 0
    92d0:	0e 94 c9 84 	call	0x10992	; 0x10992 <eeprom_read_byte>
    92d4:	8c 83       	std	Y+4, r24	; 0x04
			if(c == 255) c= 0;
    92d6:	8c 81       	ldd	r24, Y+4	; 0x04
    92d8:	8f 3f       	cpi	r24, 0xFF	; 255
    92da:	09 f4       	brne	.+2      	; 0x92de <_ZN13EepromManager11readNonVolsEv+0x316>
    92dc:	1c 82       	std	Y+4, r1	; 0x04
			g_messages_text[STATION_ID][i] = c;
    92de:	8a 81       	ldd	r24, Y+2	; 0x02
    92e0:	9b 81       	ldd	r25, Y+3	; 0x03
    92e2:	89 5d       	subi	r24, 0xD9	; 217
    92e4:	99 4b       	sbci	r25, 0xB9	; 185
    92e6:	2c 81       	ldd	r18, Y+4	; 0x04
    92e8:	fc 01       	movw	r30, r24
    92ea:	20 83       	st	Z, r18
			if(!c)
    92ec:	8c 81       	ldd	r24, Y+4	; 0x04
    92ee:	88 23       	and	r24, r24
    92f0:	31 f0       	breq	.+12     	; 0x92fe <_ZN13EepromManager11readNonVolsEv+0x336>
		g_fox = (Fox_t)(CLAMP(BEACON, eeprom_read_byte((uint8_t*)&(EepromManager::ee_vars.fox_setting)), SPRINT_F5));
		g_event_start_epoch = eeprom_read_dword(&(EepromManager::ee_vars.event_start_epoch));
		g_event_finish_epoch = eeprom_read_dword(&(EepromManager::ee_vars.event_finish_epoch));
		g_utc_offset = (int8_t)eeprom_read_byte(&(EepromManager::ee_vars.utc_offset));

		for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    92f2:	8a 81       	ldd	r24, Y+2	; 0x02
    92f4:	9b 81       	ldd	r25, Y+3	; 0x03
    92f6:	01 96       	adiw	r24, 0x01	; 1
    92f8:	8a 83       	std	Y+2, r24	; 0x02
    92fa:	9b 83       	std	Y+3, r25	; 0x03
    92fc:	e0 cf       	rjmp	.-64     	; 0x92be <_ZN13EepromManager11readNonVolsEv+0x2f6>
			char c = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.stationID_text[i])));
			if(c == 255) c= 0;
			g_messages_text[STATION_ID][i] = c;
			if(!c)
			{
				break;
    92fe:	00 00       	nop
			}
		}

		for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    9300:	1a 82       	std	Y+2, r1	; 0x02
    9302:	1b 82       	std	Y+3, r1	; 0x03
    9304:	8a 81       	ldd	r24, Y+2	; 0x02
    9306:	9b 81       	ldd	r25, Y+3	; 0x03
    9308:	44 97       	sbiw	r24, 0x14	; 20
    930a:	e8 f4       	brcc	.+58     	; 0x9346 <_ZN13EepromManager11readNonVolsEv+0x37e>
		{
			char c = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.pattern_text[i])));			
    930c:	8a 81       	ldd	r24, Y+2	; 0x02
    930e:	9b 81       	ldd	r25, Y+3	; 0x03
    9310:	8f 96       	adiw	r24, 0x2f	; 47
    9312:	80 50       	subi	r24, 0x00	; 0
    9314:	90 40       	sbci	r25, 0x00	; 0
    9316:	0e 94 c9 84 	call	0x10992	; 0x10992 <eeprom_read_byte>
    931a:	8d 83       	std	Y+5, r24	; 0x05
			if(c==255) c=0;
    931c:	8d 81       	ldd	r24, Y+5	; 0x05
    931e:	8f 3f       	cpi	r24, 0xFF	; 255
    9320:	09 f4       	brne	.+2      	; 0x9324 <_ZN13EepromManager11readNonVolsEv+0x35c>
    9322:	1d 82       	std	Y+5, r1	; 0x05
			g_messages_text[PATTERN_TEXT][i] = c;
    9324:	8a 81       	ldd	r24, Y+2	; 0x02
    9326:	9b 81       	ldd	r25, Y+3	; 0x03
    9328:	8d 52       	subi	r24, 0x2D	; 45
    932a:	9a 4b       	sbci	r25, 0xBA	; 186
    932c:	2d 81       	ldd	r18, Y+5	; 0x05
    932e:	fc 01       	movw	r30, r24
    9330:	20 83       	st	Z, r18
			if(!c)
    9332:	8d 81       	ldd	r24, Y+5	; 0x05
    9334:	88 23       	and	r24, r24
    9336:	31 f0       	breq	.+12     	; 0x9344 <_ZN13EepromManager11readNonVolsEv+0x37c>
			{
				break;
			}
		}

		for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    9338:	8a 81       	ldd	r24, Y+2	; 0x02
    933a:	9b 81       	ldd	r25, Y+3	; 0x03
    933c:	01 96       	adiw	r24, 0x01	; 1
    933e:	8a 83       	std	Y+2, r24	; 0x02
    9340:	9b 83       	std	Y+3, r25	; 0x03
    9342:	e0 cf       	rjmp	.-64     	; 0x9304 <_ZN13EepromManager11readNonVolsEv+0x33c>
			char c = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.pattern_text[i])));			
			if(c==255) c=0;
			g_messages_text[PATTERN_TEXT][i] = c;
			if(!c)
			{
				break;
    9344:	00 00       	nop
			}
		}

		for(i = 0; i < MAX_UNLOCK_CODE_LENGTH; i++)
    9346:	1a 82       	std	Y+2, r1	; 0x02
    9348:	1b 82       	std	Y+3, r1	; 0x03
    934a:	8a 81       	ldd	r24, Y+2	; 0x02
    934c:	9b 81       	ldd	r25, Y+3	; 0x03
    934e:	08 97       	sbiw	r24, 0x08	; 8
    9350:	f0 f4       	brcc	.+60     	; 0x938e <_ZN13EepromManager11readNonVolsEv+0x3c6>
		{
			char c = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.unlockCode[i])));	
    9352:	8a 81       	ldd	r24, Y+2	; 0x02
    9354:	9b 81       	ldd	r25, Y+3	; 0x03
    9356:	88 5b       	subi	r24, 0xB8	; 184
    9358:	9f 4f       	sbci	r25, 0xFF	; 255
    935a:	80 50       	subi	r24, 0x00	; 0
    935c:	90 40       	sbci	r25, 0x00	; 0
    935e:	0e 94 c9 84 	call	0x10992	; 0x10992 <eeprom_read_byte>
    9362:	8e 83       	std	Y+6, r24	; 0x06
			if(c==255) c=0;
    9364:	8e 81       	ldd	r24, Y+6	; 0x06
    9366:	8f 3f       	cpi	r24, 0xFF	; 255
    9368:	09 f4       	brne	.+2      	; 0x936c <_ZN13EepromManager11readNonVolsEv+0x3a4>
    936a:	1e 82       	std	Y+6, r1	; 0x06
			g_unlockCode[i] = c;
    936c:	8a 81       	ldd	r24, Y+2	; 0x02
    936e:	9b 81       	ldd	r25, Y+3	; 0x03
    9370:	88 58       	subi	r24, 0x88	; 136
    9372:	99 4b       	sbci	r25, 0xB9	; 185
    9374:	2e 81       	ldd	r18, Y+6	; 0x06
    9376:	fc 01       	movw	r30, r24
    9378:	20 83       	st	Z, r18
			if(!c)
    937a:	8e 81       	ldd	r24, Y+6	; 0x06
    937c:	88 23       	and	r24, r24
    937e:	31 f0       	breq	.+12     	; 0x938c <_ZN13EepromManager11readNonVolsEv+0x3c4>
			{
				break;
			}
		}

		for(i = 0; i < MAX_UNLOCK_CODE_LENGTH; i++)
    9380:	8a 81       	ldd	r24, Y+2	; 0x02
    9382:	9b 81       	ldd	r25, Y+3	; 0x03
    9384:	01 96       	adiw	r24, 0x01	; 1
    9386:	8a 83       	std	Y+2, r24	; 0x02
    9388:	9b 83       	std	Y+3, r25	; 0x03
    938a:	df cf       	rjmp	.-66     	; 0x934a <_ZN13EepromManager11readNonVolsEv+0x382>
			char c = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.unlockCode[i])));	
			if(c==255) c=0;
			g_unlockCode[i] = c;
			if(!c)
			{
				break;
    938c:	00 00       	nop
			}
		}
		
		g_80m_frequency = CLAMP(TX_MINIMUM_80M_FREQUENCY, eeprom_read_dword(&(EepromManager::ee_vars.frequency)), TX_MAXIMUM_80M_FREQUENCY);
    938e:	84 e6       	ldi	r24, 0x64	; 100
    9390:	90 e0       	ldi	r25, 0x00	; 0
    9392:	0e 94 d1 84 	call	0x109a2	; 0x109a2 <eeprom_read_dword>
    9396:	dc 01       	movw	r26, r24
    9398:	cb 01       	movw	r24, r22
    939a:	89 af       	std	Y+57, r24	; 0x39
    939c:	9a af       	std	Y+58, r25	; 0x3a
    939e:	ab af       	std	Y+59, r26	; 0x3b
    93a0:	bc af       	std	Y+60, r27	; 0x3c
    93a2:	80 ee       	ldi	r24, 0xE0	; 224
    93a4:	97 e6       	ldi	r25, 0x67	; 103
    93a6:	a5 e3       	ldi	r26, 0x35	; 53
    93a8:	b0 e0       	ldi	r27, 0x00	; 0
    93aa:	9e 01       	movw	r18, r28
    93ac:	23 5c       	subi	r18, 0xC3	; 195
    93ae:	3f 4f       	sbci	r19, 0xFF	; 255
    93b0:	f9 01       	movw	r30, r18
    93b2:	80 83       	st	Z, r24
    93b4:	91 83       	std	Z+1, r25	; 0x01
    93b6:	a2 83       	std	Z+2, r26	; 0x02
    93b8:	b3 83       	std	Z+3, r27	; 0x03
    93ba:	9e 01       	movw	r18, r28
    93bc:	2f 5b       	subi	r18, 0xBF	; 191
    93be:	3f 4f       	sbci	r19, 0xFF	; 255
    93c0:	80 e0       	ldi	r24, 0x00	; 0
    93c2:	99 e0       	ldi	r25, 0x09	; 9
    93c4:	ad e3       	ldi	r26, 0x3D	; 61
    93c6:	b0 e0       	ldi	r27, 0x00	; 0
    93c8:	f9 01       	movw	r30, r18
    93ca:	80 83       	st	Z, r24
    93cc:	91 83       	std	Z+1, r25	; 0x01
    93ce:	a2 83       	std	Z+2, r26	; 0x02
    93d0:	b3 83       	std	Z+3, r27	; 0x03
    93d2:	ce 01       	movw	r24, r28
    93d4:	8f 5b       	subi	r24, 0xBF	; 191
    93d6:	9f 4f       	sbci	r25, 0xFF	; 255
    93d8:	29 ad       	ldd	r18, Y+57	; 0x39
    93da:	3a ad       	ldd	r19, Y+58	; 0x3a
    93dc:	4b ad       	ldd	r20, Y+59	; 0x3b
    93de:	5c ad       	ldd	r21, Y+60	; 0x3c
    93e0:	fc 01       	movw	r30, r24
    93e2:	80 81       	ld	r24, Z
    93e4:	91 81       	ldd	r25, Z+1	; 0x01
    93e6:	a2 81       	ldd	r26, Z+2	; 0x02
    93e8:	b3 81       	ldd	r27, Z+3	; 0x03
    93ea:	82 17       	cp	r24, r18
    93ec:	93 07       	cpc	r25, r19
    93ee:	a4 07       	cpc	r26, r20
    93f0:	b5 07       	cpc	r27, r21
    93f2:	e8 f0       	brcs	.+58     	; 0x942e <_ZN13EepromManager11readNonVolsEv+0x466>
    93f4:	29 ad       	ldd	r18, Y+57	; 0x39
    93f6:	3a ad       	ldd	r19, Y+58	; 0x3a
    93f8:	4b ad       	ldd	r20, Y+59	; 0x3b
    93fa:	5c ad       	ldd	r21, Y+60	; 0x3c
    93fc:	ce 01       	movw	r24, r28
    93fe:	cd 96       	adiw	r24, 0x3d	; 61
    9400:	fc 01       	movw	r30, r24
    9402:	80 81       	ld	r24, Z
    9404:	91 81       	ldd	r25, Z+1	; 0x01
    9406:	a2 81       	ldd	r26, Z+2	; 0x02
    9408:	b3 81       	ldd	r27, Z+3	; 0x03
    940a:	28 17       	cp	r18, r24
    940c:	39 07       	cpc	r19, r25
    940e:	4a 07       	cpc	r20, r26
    9410:	5b 07       	cpc	r21, r27
    9412:	40 f4       	brcc	.+16     	; 0x9424 <_ZN13EepromManager11readNonVolsEv+0x45c>
    9414:	ce 01       	movw	r24, r28
    9416:	cd 96       	adiw	r24, 0x3d	; 61
    9418:	fc 01       	movw	r30, r24
    941a:	80 81       	ld	r24, Z
    941c:	91 81       	ldd	r25, Z+1	; 0x01
    941e:	a2 81       	ldd	r26, Z+2	; 0x02
    9420:	b3 81       	ldd	r27, Z+3	; 0x03
    9422:	0d c0       	rjmp	.+26     	; 0x943e <_ZN13EepromManager11readNonVolsEv+0x476>
    9424:	89 ad       	ldd	r24, Y+57	; 0x39
    9426:	9a ad       	ldd	r25, Y+58	; 0x3a
    9428:	ab ad       	ldd	r26, Y+59	; 0x3b
    942a:	bc ad       	ldd	r27, Y+60	; 0x3c
    942c:	08 c0       	rjmp	.+16     	; 0x943e <_ZN13EepromManager11readNonVolsEv+0x476>
    942e:	ce 01       	movw	r24, r28
    9430:	8f 5b       	subi	r24, 0xBF	; 191
    9432:	9f 4f       	sbci	r25, 0xFF	; 255
    9434:	fc 01       	movw	r30, r24
    9436:	80 81       	ld	r24, Z
    9438:	91 81       	ldd	r25, Z+1	; 0x01
    943a:	a2 81       	ldd	r26, Z+2	; 0x02
    943c:	b3 81       	ldd	r27, Z+3	; 0x03
    943e:	80 93 5a 40 	sts	0x405A, r24	; 0x80405a <g_80m_frequency>
    9442:	90 93 5b 40 	sts	0x405B, r25	; 0x80405b <g_80m_frequency+0x1>
    9446:	a0 93 5c 40 	sts	0x405C, r26	; 0x80405c <g_80m_frequency+0x2>
    944a:	b0 93 5d 40 	sts	0x405D, r27	; 0x80405d <g_80m_frequency+0x3>
		g_rtty_offset =eeprom_read_dword(&(EepromManager::ee_vars.rtty_offset));
    944e:	8c e6       	ldi	r24, 0x6C	; 108
    9450:	90 e0       	ldi	r25, 0x00	; 0
    9452:	0e 94 d1 84 	call	0x109a2	; 0x109a2 <eeprom_read_dword>
    9456:	dc 01       	movw	r26, r24
    9458:	cb 01       	movw	r24, r22
    945a:	80 93 60 40 	sts	0x4060, r24	; 0x804060 <g_rtty_offset>
    945e:	90 93 61 40 	sts	0x4061, r25	; 0x804061 <g_rtty_offset+0x1>
    9462:	a0 93 62 40 	sts	0x4062, r26	; 0x804062 <g_rtty_offset+0x2>
    9466:	b0 93 63 40 	sts	0x4063, r27	; 0x804063 <g_rtty_offset+0x3>
		g_80m_power_level_mW = CLAMP(MIN_RF_POWER_MW, eeprom_read_word(&(EepromManager::ee_vars.rf_power)), MAX_TX_POWER_80M_MW);
    946a:	8e 01       	movw	r16, r28
    946c:	0b 5b       	subi	r16, 0xBB	; 187
    946e:	1f 4f       	sbci	r17, 0xFF	; 255
    9470:	84 e7       	ldi	r24, 0x74	; 116
    9472:	90 e0       	ldi	r25, 0x00	; 0
    9474:	0e 94 d8 84 	call	0x109b0	; 0x109b0 <eeprom_read_word>
    9478:	f8 01       	movw	r30, r16
    947a:	80 83       	st	Z, r24
    947c:	91 83       	std	Z+1, r25	; 0x01
    947e:	ce 01       	movw	r24, r28
    9480:	89 5b       	subi	r24, 0xB9	; 185
    9482:	9f 4f       	sbci	r25, 0xFF	; 255
    9484:	fc 01       	movw	r30, r24
    9486:	10 82       	st	Z, r1
    9488:	11 82       	std	Z+1, r1	; 0x01
    948a:	ce 01       	movw	r24, r28
    948c:	87 5b       	subi	r24, 0xB7	; 183
    948e:	9f 4f       	sbci	r25, 0xFF	; 255
    9490:	28 e8       	ldi	r18, 0x88	; 136
    9492:	33 e1       	ldi	r19, 0x13	; 19
    9494:	fc 01       	movw	r30, r24
    9496:	20 83       	st	Z, r18
    9498:	31 83       	std	Z+1, r19	; 0x01
    949a:	9e 01       	movw	r18, r28
    949c:	2b 5b       	subi	r18, 0xBB	; 187
    949e:	3f 4f       	sbci	r19, 0xFF	; 255
    94a0:	ce 01       	movw	r24, r28
    94a2:	87 5b       	subi	r24, 0xB7	; 183
    94a4:	9f 4f       	sbci	r25, 0xFF	; 255
    94a6:	f9 01       	movw	r30, r18
    94a8:	20 81       	ld	r18, Z
    94aa:	31 81       	ldd	r19, Z+1	; 0x01
    94ac:	fc 01       	movw	r30, r24
    94ae:	80 81       	ld	r24, Z
    94b0:	91 81       	ldd	r25, Z+1	; 0x01
    94b2:	82 17       	cp	r24, r18
    94b4:	93 07       	cpc	r25, r19
    94b6:	e8 f0       	brcs	.+58     	; 0x94f2 <_ZN13EepromManager11readNonVolsEv+0x52a>
    94b8:	9e 01       	movw	r18, r28
    94ba:	2b 5b       	subi	r18, 0xBB	; 187
    94bc:	3f 4f       	sbci	r19, 0xFF	; 255
    94be:	ce 01       	movw	r24, r28
    94c0:	89 5b       	subi	r24, 0xB9	; 185
    94c2:	9f 4f       	sbci	r25, 0xFF	; 255
    94c4:	f9 01       	movw	r30, r18
    94c6:	20 81       	ld	r18, Z
    94c8:	31 81       	ldd	r19, Z+1	; 0x01
    94ca:	fc 01       	movw	r30, r24
    94cc:	80 81       	ld	r24, Z
    94ce:	91 81       	ldd	r25, Z+1	; 0x01
    94d0:	28 17       	cp	r18, r24
    94d2:	39 07       	cpc	r19, r25
    94d4:	38 f4       	brcc	.+14     	; 0x94e4 <_ZN13EepromManager11readNonVolsEv+0x51c>
    94d6:	ce 01       	movw	r24, r28
    94d8:	89 5b       	subi	r24, 0xB9	; 185
    94da:	9f 4f       	sbci	r25, 0xFF	; 255
    94dc:	fc 01       	movw	r30, r24
    94de:	80 81       	ld	r24, Z
    94e0:	91 81       	ldd	r25, Z+1	; 0x01
    94e2:	0d c0       	rjmp	.+26     	; 0x94fe <_ZN13EepromManager11readNonVolsEv+0x536>
    94e4:	ce 01       	movw	r24, r28
    94e6:	8b 5b       	subi	r24, 0xBB	; 187
    94e8:	9f 4f       	sbci	r25, 0xFF	; 255
    94ea:	fc 01       	movw	r30, r24
    94ec:	80 81       	ld	r24, Z
    94ee:	91 81       	ldd	r25, Z+1	; 0x01
    94f0:	06 c0       	rjmp	.+12     	; 0x94fe <_ZN13EepromManager11readNonVolsEv+0x536>
    94f2:	ce 01       	movw	r24, r28
    94f4:	87 5b       	subi	r24, 0xB7	; 183
    94f6:	9f 4f       	sbci	r25, 0xFF	; 255
    94f8:	fc 01       	movw	r30, r24
    94fa:	80 81       	ld	r24, Z
    94fc:	91 81       	ldd	r25, Z+1	; 0x01
    94fe:	80 93 5e 40 	sts	0x405E, r24	; 0x80405e <g_80m_power_level_mW>
    9502:	90 93 5f 40 	sts	0x405F, r25	; 0x80405f <g_80m_power_level_mW+0x1>

		g_pattern_codespeed = CLAMP(5, eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.pattern_codespeed))), 20);
    9506:	8e 01       	movw	r16, r28
    9508:	05 5b       	subi	r16, 0xB5	; 181
    950a:	1f 4f       	sbci	r17, 0xFF	; 255
    950c:	8a e7       	ldi	r24, 0x7A	; 122
    950e:	90 e0       	ldi	r25, 0x00	; 0
    9510:	0e 94 c9 84 	call	0x10992	; 0x10992 <eeprom_read_byte>
    9514:	f8 01       	movw	r30, r16
    9516:	80 83       	st	Z, r24
    9518:	ce 01       	movw	r24, r28
    951a:	84 5b       	subi	r24, 0xB4	; 180
    951c:	9f 4f       	sbci	r25, 0xFF	; 255
    951e:	25 e0       	ldi	r18, 0x05	; 5
    9520:	30 e0       	ldi	r19, 0x00	; 0
    9522:	fc 01       	movw	r30, r24
    9524:	20 83       	st	Z, r18
    9526:	31 83       	std	Z+1, r19	; 0x01
    9528:	ce 01       	movw	r24, r28
    952a:	82 5b       	subi	r24, 0xB2	; 178
    952c:	9f 4f       	sbci	r25, 0xFF	; 255
    952e:	24 e1       	ldi	r18, 0x14	; 20
    9530:	30 e0       	ldi	r19, 0x00	; 0
    9532:	fc 01       	movw	r30, r24
    9534:	20 83       	st	Z, r18
    9536:	31 83       	std	Z+1, r19	; 0x01
    9538:	ce 01       	movw	r24, r28
    953a:	85 5b       	subi	r24, 0xB5	; 181
    953c:	9f 4f       	sbci	r25, 0xFF	; 255
    953e:	fc 01       	movw	r30, r24
    9540:	80 81       	ld	r24, Z
    9542:	28 2f       	mov	r18, r24
    9544:	30 e0       	ldi	r19, 0x00	; 0
    9546:	ce 01       	movw	r24, r28
    9548:	82 5b       	subi	r24, 0xB2	; 178
    954a:	9f 4f       	sbci	r25, 0xFF	; 255
    954c:	fc 01       	movw	r30, r24
    954e:	80 81       	ld	r24, Z
    9550:	91 81       	ldd	r25, Z+1	; 0x01
    9552:	82 17       	cp	r24, r18
    9554:	93 07       	cpc	r25, r19
    9556:	9c f0       	brlt	.+38     	; 0x957e <_ZN13EepromManager11readNonVolsEv+0x5b6>
    9558:	ce 01       	movw	r24, r28
    955a:	85 5b       	subi	r24, 0xB5	; 181
    955c:	9f 4f       	sbci	r25, 0xFF	; 255
    955e:	fc 01       	movw	r30, r24
    9560:	80 81       	ld	r24, Z
    9562:	48 2f       	mov	r20, r24
    9564:	50 e0       	ldi	r21, 0x00	; 0
    9566:	ce 01       	movw	r24, r28
    9568:	84 5b       	subi	r24, 0xB4	; 180
    956a:	9f 4f       	sbci	r25, 0xFF	; 255
    956c:	fc 01       	movw	r30, r24
    956e:	20 81       	ld	r18, Z
    9570:	31 81       	ldd	r19, Z+1	; 0x01
    9572:	ca 01       	movw	r24, r20
    9574:	82 17       	cp	r24, r18
    9576:	93 07       	cpc	r25, r19
    9578:	44 f4       	brge	.+16     	; 0x958a <_ZN13EepromManager11readNonVolsEv+0x5c2>
    957a:	c9 01       	movw	r24, r18
    957c:	06 c0       	rjmp	.+12     	; 0x958a <_ZN13EepromManager11readNonVolsEv+0x5c2>
    957e:	ce 01       	movw	r24, r28
    9580:	82 5b       	subi	r24, 0xB2	; 178
    9582:	9f 4f       	sbci	r25, 0xFF	; 255
    9584:	fc 01       	movw	r30, r24
    9586:	80 81       	ld	r24, Z
    9588:	91 81       	ldd	r25, Z+1	; 0x01
    958a:	80 93 0e 40 	sts	0x400E, r24	; 0x80400e <g_pattern_codespeed>
		g_off_air_seconds = CLAMP(0, (int16_t)eeprom_read_word((const uint16_t*)&(EepromManager::ee_vars.off_air_seconds)), 3600);
    958e:	8f e7       	ldi	r24, 0x7F	; 127
    9590:	90 e0       	ldi	r25, 0x00	; 0
    9592:	0e 94 d8 84 	call	0x109b0	; 0x109b0 <eeprom_read_word>
    9596:	9c 01       	movw	r18, r24
    9598:	ce 01       	movw	r24, r28
    959a:	80 5b       	subi	r24, 0xB0	; 176
    959c:	9f 4f       	sbci	r25, 0xFF	; 255
    959e:	fc 01       	movw	r30, r24
    95a0:	20 83       	st	Z, r18
    95a2:	31 83       	std	Z+1, r19	; 0x01
    95a4:	ce 01       	movw	r24, r28
    95a6:	8e 5a       	subi	r24, 0xAE	; 174
    95a8:	9f 4f       	sbci	r25, 0xFF	; 255
    95aa:	fc 01       	movw	r30, r24
    95ac:	10 82       	st	Z, r1
    95ae:	11 82       	std	Z+1, r1	; 0x01
    95b0:	ce 01       	movw	r24, r28
    95b2:	8c 5a       	subi	r24, 0xAC	; 172
    95b4:	9f 4f       	sbci	r25, 0xFF	; 255
    95b6:	20 e1       	ldi	r18, 0x10	; 16
    95b8:	3e e0       	ldi	r19, 0x0E	; 14
    95ba:	fc 01       	movw	r30, r24
    95bc:	20 83       	st	Z, r18
    95be:	31 83       	std	Z+1, r19	; 0x01
    95c0:	9e 01       	movw	r18, r28
    95c2:	20 5b       	subi	r18, 0xB0	; 176
    95c4:	3f 4f       	sbci	r19, 0xFF	; 255
    95c6:	ce 01       	movw	r24, r28
    95c8:	8c 5a       	subi	r24, 0xAC	; 172
    95ca:	9f 4f       	sbci	r25, 0xFF	; 255
    95cc:	f9 01       	movw	r30, r18
    95ce:	20 81       	ld	r18, Z
    95d0:	31 81       	ldd	r19, Z+1	; 0x01
    95d2:	fc 01       	movw	r30, r24
    95d4:	80 81       	ld	r24, Z
    95d6:	91 81       	ldd	r25, Z+1	; 0x01
    95d8:	82 17       	cp	r24, r18
    95da:	93 07       	cpc	r25, r19
    95dc:	ec f0       	brlt	.+58     	; 0x9618 <_ZN13EepromManager11readNonVolsEv+0x650>
    95de:	9e 01       	movw	r18, r28
    95e0:	20 5b       	subi	r18, 0xB0	; 176
    95e2:	3f 4f       	sbci	r19, 0xFF	; 255
    95e4:	ce 01       	movw	r24, r28
    95e6:	8e 5a       	subi	r24, 0xAE	; 174
    95e8:	9f 4f       	sbci	r25, 0xFF	; 255
    95ea:	f9 01       	movw	r30, r18
    95ec:	20 81       	ld	r18, Z
    95ee:	31 81       	ldd	r19, Z+1	; 0x01
    95f0:	fc 01       	movw	r30, r24
    95f2:	80 81       	ld	r24, Z
    95f4:	91 81       	ldd	r25, Z+1	; 0x01
    95f6:	28 17       	cp	r18, r24
    95f8:	39 07       	cpc	r19, r25
    95fa:	3c f4       	brge	.+14     	; 0x960a <_ZN13EepromManager11readNonVolsEv+0x642>
    95fc:	ce 01       	movw	r24, r28
    95fe:	8e 5a       	subi	r24, 0xAE	; 174
    9600:	9f 4f       	sbci	r25, 0xFF	; 255
    9602:	fc 01       	movw	r30, r24
    9604:	80 81       	ld	r24, Z
    9606:	91 81       	ldd	r25, Z+1	; 0x01
    9608:	0d c0       	rjmp	.+26     	; 0x9624 <_ZN13EepromManager11readNonVolsEv+0x65c>
    960a:	ce 01       	movw	r24, r28
    960c:	80 5b       	subi	r24, 0xB0	; 176
    960e:	9f 4f       	sbci	r25, 0xFF	; 255
    9610:	fc 01       	movw	r30, r24
    9612:	80 81       	ld	r24, Z
    9614:	91 81       	ldd	r25, Z+1	; 0x01
    9616:	06 c0       	rjmp	.+12     	; 0x9624 <_ZN13EepromManager11readNonVolsEv+0x65c>
    9618:	ce 01       	movw	r24, r28
    961a:	8c 5a       	subi	r24, 0xAC	; 172
    961c:	9f 4f       	sbci	r25, 0xFF	; 255
    961e:	fc 01       	movw	r30, r24
    9620:	80 81       	ld	r24, Z
    9622:	91 81       	ldd	r25, Z+1	; 0x01
    9624:	80 93 11 40 	sts	0x4011, r24	; 0x804011 <g_off_air_seconds>
    9628:	90 93 12 40 	sts	0x4012, r25	; 0x804012 <g_off_air_seconds+0x1>
		g_on_air_seconds = CLAMP(0, (int16_t)eeprom_read_word((const uint16_t*)&(EepromManager::ee_vars.on_air_seconds)), 3600);
    962c:	85 e8       	ldi	r24, 0x85	; 133
    962e:	90 e0       	ldi	r25, 0x00	; 0
    9630:	0e 94 d8 84 	call	0x109b0	; 0x109b0 <eeprom_read_word>
    9634:	9c 01       	movw	r18, r24
    9636:	ce 01       	movw	r24, r28
    9638:	8a 5a       	subi	r24, 0xAA	; 170
    963a:	9f 4f       	sbci	r25, 0xFF	; 255
    963c:	fc 01       	movw	r30, r24
    963e:	20 83       	st	Z, r18
    9640:	31 83       	std	Z+1, r19	; 0x01
    9642:	ce 01       	movw	r24, r28
    9644:	88 5a       	subi	r24, 0xA8	; 168
    9646:	9f 4f       	sbci	r25, 0xFF	; 255
    9648:	fc 01       	movw	r30, r24
    964a:	10 82       	st	Z, r1
    964c:	11 82       	std	Z+1, r1	; 0x01
    964e:	ce 01       	movw	r24, r28
    9650:	86 5a       	subi	r24, 0xA6	; 166
    9652:	9f 4f       	sbci	r25, 0xFF	; 255
    9654:	20 e1       	ldi	r18, 0x10	; 16
    9656:	3e e0       	ldi	r19, 0x0E	; 14
    9658:	fc 01       	movw	r30, r24
    965a:	20 83       	st	Z, r18
    965c:	31 83       	std	Z+1, r19	; 0x01
    965e:	9e 01       	movw	r18, r28
    9660:	2a 5a       	subi	r18, 0xAA	; 170
    9662:	3f 4f       	sbci	r19, 0xFF	; 255
    9664:	ce 01       	movw	r24, r28
    9666:	86 5a       	subi	r24, 0xA6	; 166
    9668:	9f 4f       	sbci	r25, 0xFF	; 255
    966a:	f9 01       	movw	r30, r18
    966c:	20 81       	ld	r18, Z
    966e:	31 81       	ldd	r19, Z+1	; 0x01
    9670:	fc 01       	movw	r30, r24
    9672:	80 81       	ld	r24, Z
    9674:	91 81       	ldd	r25, Z+1	; 0x01
    9676:	82 17       	cp	r24, r18
    9678:	93 07       	cpc	r25, r19
    967a:	ec f0       	brlt	.+58     	; 0x96b6 <_ZN13EepromManager11readNonVolsEv+0x6ee>
    967c:	9e 01       	movw	r18, r28
    967e:	2a 5a       	subi	r18, 0xAA	; 170
    9680:	3f 4f       	sbci	r19, 0xFF	; 255
    9682:	ce 01       	movw	r24, r28
    9684:	88 5a       	subi	r24, 0xA8	; 168
    9686:	9f 4f       	sbci	r25, 0xFF	; 255
    9688:	f9 01       	movw	r30, r18
    968a:	20 81       	ld	r18, Z
    968c:	31 81       	ldd	r19, Z+1	; 0x01
    968e:	fc 01       	movw	r30, r24
    9690:	80 81       	ld	r24, Z
    9692:	91 81       	ldd	r25, Z+1	; 0x01
    9694:	28 17       	cp	r18, r24
    9696:	39 07       	cpc	r19, r25
    9698:	3c f4       	brge	.+14     	; 0x96a8 <_ZN13EepromManager11readNonVolsEv+0x6e0>
    969a:	ce 01       	movw	r24, r28
    969c:	88 5a       	subi	r24, 0xA8	; 168
    969e:	9f 4f       	sbci	r25, 0xFF	; 255
    96a0:	fc 01       	movw	r30, r24
    96a2:	80 81       	ld	r24, Z
    96a4:	91 81       	ldd	r25, Z+1	; 0x01
    96a6:	0d c0       	rjmp	.+26     	; 0x96c2 <_ZN13EepromManager11readNonVolsEv+0x6fa>
    96a8:	ce 01       	movw	r24, r28
    96aa:	8a 5a       	subi	r24, 0xAA	; 170
    96ac:	9f 4f       	sbci	r25, 0xFF	; 255
    96ae:	fc 01       	movw	r30, r24
    96b0:	80 81       	ld	r24, Z
    96b2:	91 81       	ldd	r25, Z+1	; 0x01
    96b4:	06 c0       	rjmp	.+12     	; 0x96c2 <_ZN13EepromManager11readNonVolsEv+0x6fa>
    96b6:	ce 01       	movw	r24, r28
    96b8:	86 5a       	subi	r24, 0xA6	; 166
    96ba:	9f 4f       	sbci	r25, 0xFF	; 255
    96bc:	fc 01       	movw	r30, r24
    96be:	80 81       	ld	r24, Z
    96c0:	91 81       	ldd	r25, Z+1	; 0x01
    96c2:	80 93 0f 40 	sts	0x400F, r24	; 0x80400f <g_on_air_seconds>
    96c6:	90 93 10 40 	sts	0x4010, r25	; 0x804010 <g_on_air_seconds+0x1>
		g_ID_period_seconds = CLAMP(0, (int16_t)eeprom_read_word((const uint16_t*)&(EepromManager::ee_vars.ID_period_seconds)), 3600);
    96ca:	8b e8       	ldi	r24, 0x8B	; 139
    96cc:	90 e0       	ldi	r25, 0x00	; 0
    96ce:	0e 94 d8 84 	call	0x109b0	; 0x109b0 <eeprom_read_word>
    96d2:	9c 01       	movw	r18, r24
    96d4:	ce 01       	movw	r24, r28
    96d6:	84 5a       	subi	r24, 0xA4	; 164
    96d8:	9f 4f       	sbci	r25, 0xFF	; 255
    96da:	fc 01       	movw	r30, r24
    96dc:	20 83       	st	Z, r18
    96de:	31 83       	std	Z+1, r19	; 0x01
    96e0:	ce 01       	movw	r24, r28
    96e2:	82 5a       	subi	r24, 0xA2	; 162
    96e4:	9f 4f       	sbci	r25, 0xFF	; 255
    96e6:	fc 01       	movw	r30, r24
    96e8:	10 82       	st	Z, r1
    96ea:	11 82       	std	Z+1, r1	; 0x01
    96ec:	ce 01       	movw	r24, r28
    96ee:	80 5a       	subi	r24, 0xA0	; 160
    96f0:	9f 4f       	sbci	r25, 0xFF	; 255
    96f2:	20 e1       	ldi	r18, 0x10	; 16
    96f4:	3e e0       	ldi	r19, 0x0E	; 14
    96f6:	fc 01       	movw	r30, r24
    96f8:	20 83       	st	Z, r18
    96fa:	31 83       	std	Z+1, r19	; 0x01
    96fc:	9e 01       	movw	r18, r28
    96fe:	24 5a       	subi	r18, 0xA4	; 164
    9700:	3f 4f       	sbci	r19, 0xFF	; 255
    9702:	ce 01       	movw	r24, r28
    9704:	80 5a       	subi	r24, 0xA0	; 160
    9706:	9f 4f       	sbci	r25, 0xFF	; 255
    9708:	f9 01       	movw	r30, r18
    970a:	20 81       	ld	r18, Z
    970c:	31 81       	ldd	r19, Z+1	; 0x01
    970e:	fc 01       	movw	r30, r24
    9710:	80 81       	ld	r24, Z
    9712:	91 81       	ldd	r25, Z+1	; 0x01
    9714:	82 17       	cp	r24, r18
    9716:	93 07       	cpc	r25, r19
    9718:	ec f0       	brlt	.+58     	; 0x9754 <_ZN13EepromManager11readNonVolsEv+0x78c>
    971a:	9e 01       	movw	r18, r28
    971c:	24 5a       	subi	r18, 0xA4	; 164
    971e:	3f 4f       	sbci	r19, 0xFF	; 255
    9720:	ce 01       	movw	r24, r28
    9722:	82 5a       	subi	r24, 0xA2	; 162
    9724:	9f 4f       	sbci	r25, 0xFF	; 255
    9726:	f9 01       	movw	r30, r18
    9728:	20 81       	ld	r18, Z
    972a:	31 81       	ldd	r19, Z+1	; 0x01
    972c:	fc 01       	movw	r30, r24
    972e:	80 81       	ld	r24, Z
    9730:	91 81       	ldd	r25, Z+1	; 0x01
    9732:	28 17       	cp	r18, r24
    9734:	39 07       	cpc	r19, r25
    9736:	3c f4       	brge	.+14     	; 0x9746 <_ZN13EepromManager11readNonVolsEv+0x77e>
    9738:	ce 01       	movw	r24, r28
    973a:	82 5a       	subi	r24, 0xA2	; 162
    973c:	9f 4f       	sbci	r25, 0xFF	; 255
    973e:	fc 01       	movw	r30, r24
    9740:	80 81       	ld	r24, Z
    9742:	91 81       	ldd	r25, Z+1	; 0x01
    9744:	0d c0       	rjmp	.+26     	; 0x9760 <_ZN13EepromManager11readNonVolsEv+0x798>
    9746:	ce 01       	movw	r24, r28
    9748:	84 5a       	subi	r24, 0xA4	; 164
    974a:	9f 4f       	sbci	r25, 0xFF	; 255
    974c:	fc 01       	movw	r30, r24
    974e:	80 81       	ld	r24, Z
    9750:	91 81       	ldd	r25, Z+1	; 0x01
    9752:	06 c0       	rjmp	.+12     	; 0x9760 <_ZN13EepromManager11readNonVolsEv+0x798>
    9754:	ce 01       	movw	r24, r28
    9756:	80 5a       	subi	r24, 0xA0	; 160
    9758:	9f 4f       	sbci	r25, 0xFF	; 255
    975a:	fc 01       	movw	r30, r24
    975c:	80 81       	ld	r24, Z
    975e:	91 81       	ldd	r25, Z+1	; 0x01
    9760:	80 93 13 40 	sts	0x4013, r24	; 0x804013 <g_ID_period_seconds>
    9764:	90 93 14 40 	sts	0x4014, r25	; 0x804014 <g_ID_period_seconds+0x1>
		g_intra_cycle_delay_time = CLAMP(0, (int16_t)eeprom_read_word((const uint16_t*)&(EepromManager::ee_vars.intra_cycle_delay_time)), 3600);
    9768:	81 e9       	ldi	r24, 0x91	; 145
    976a:	90 e0       	ldi	r25, 0x00	; 0
    976c:	0e 94 d8 84 	call	0x109b0	; 0x109b0 <eeprom_read_word>
    9770:	9c 01       	movw	r18, r24
    9772:	ce 01       	movw	r24, r28
    9774:	8e 59       	subi	r24, 0x9E	; 158
    9776:	9f 4f       	sbci	r25, 0xFF	; 255
    9778:	fc 01       	movw	r30, r24
    977a:	20 83       	st	Z, r18
    977c:	31 83       	std	Z+1, r19	; 0x01
    977e:	ce 01       	movw	r24, r28
    9780:	8c 59       	subi	r24, 0x9C	; 156
    9782:	9f 4f       	sbci	r25, 0xFF	; 255
    9784:	fc 01       	movw	r30, r24
    9786:	10 82       	st	Z, r1
    9788:	11 82       	std	Z+1, r1	; 0x01
    978a:	ce 01       	movw	r24, r28
    978c:	8a 59       	subi	r24, 0x9A	; 154
    978e:	9f 4f       	sbci	r25, 0xFF	; 255
    9790:	20 e1       	ldi	r18, 0x10	; 16
    9792:	3e e0       	ldi	r19, 0x0E	; 14
    9794:	fc 01       	movw	r30, r24
    9796:	20 83       	st	Z, r18
    9798:	31 83       	std	Z+1, r19	; 0x01
    979a:	9e 01       	movw	r18, r28
    979c:	2e 59       	subi	r18, 0x9E	; 158
    979e:	3f 4f       	sbci	r19, 0xFF	; 255
    97a0:	ce 01       	movw	r24, r28
    97a2:	8a 59       	subi	r24, 0x9A	; 154
    97a4:	9f 4f       	sbci	r25, 0xFF	; 255
    97a6:	f9 01       	movw	r30, r18
    97a8:	20 81       	ld	r18, Z
    97aa:	31 81       	ldd	r19, Z+1	; 0x01
    97ac:	fc 01       	movw	r30, r24
    97ae:	80 81       	ld	r24, Z
    97b0:	91 81       	ldd	r25, Z+1	; 0x01
    97b2:	82 17       	cp	r24, r18
    97b4:	93 07       	cpc	r25, r19
    97b6:	ec f0       	brlt	.+58     	; 0x97f2 <_ZN13EepromManager11readNonVolsEv+0x82a>
    97b8:	9e 01       	movw	r18, r28
    97ba:	2e 59       	subi	r18, 0x9E	; 158
    97bc:	3f 4f       	sbci	r19, 0xFF	; 255
    97be:	ce 01       	movw	r24, r28
    97c0:	8c 59       	subi	r24, 0x9C	; 156
    97c2:	9f 4f       	sbci	r25, 0xFF	; 255
    97c4:	f9 01       	movw	r30, r18
    97c6:	20 81       	ld	r18, Z
    97c8:	31 81       	ldd	r19, Z+1	; 0x01
    97ca:	fc 01       	movw	r30, r24
    97cc:	80 81       	ld	r24, Z
    97ce:	91 81       	ldd	r25, Z+1	; 0x01
    97d0:	28 17       	cp	r18, r24
    97d2:	39 07       	cpc	r19, r25
    97d4:	3c f4       	brge	.+14     	; 0x97e4 <_ZN13EepromManager11readNonVolsEv+0x81c>
    97d6:	ce 01       	movw	r24, r28
    97d8:	8c 59       	subi	r24, 0x9C	; 156
    97da:	9f 4f       	sbci	r25, 0xFF	; 255
    97dc:	fc 01       	movw	r30, r24
    97de:	80 81       	ld	r24, Z
    97e0:	91 81       	ldd	r25, Z+1	; 0x01
    97e2:	0d c0       	rjmp	.+26     	; 0x97fe <_ZN13EepromManager11readNonVolsEv+0x836>
    97e4:	ce 01       	movw	r24, r28
    97e6:	8e 59       	subi	r24, 0x9E	; 158
    97e8:	9f 4f       	sbci	r25, 0xFF	; 255
    97ea:	fc 01       	movw	r30, r24
    97ec:	80 81       	ld	r24, Z
    97ee:	91 81       	ldd	r25, Z+1	; 0x01
    97f0:	06 c0       	rjmp	.+12     	; 0x97fe <_ZN13EepromManager11readNonVolsEv+0x836>
    97f2:	ce 01       	movw	r24, r28
    97f4:	8a 59       	subi	r24, 0x9A	; 154
    97f6:	9f 4f       	sbci	r25, 0xFF	; 255
    97f8:	fc 01       	movw	r30, r24
    97fa:	80 81       	ld	r24, Z
    97fc:	91 81       	ldd	r25, Z+1	; 0x01
    97fe:	80 93 3e 46 	sts	0x463E, r24	; 0x80463e <g_intra_cycle_delay_time>
    9802:	90 93 3f 46 	sts	0x463F, r25	; 0x80463f <g_intra_cycle_delay_time+0x1>

		for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    9806:	1a 82       	std	Y+2, r1	; 0x02
    9808:	1b 82       	std	Y+3, r1	; 0x03
    980a:	8a 81       	ldd	r24, Y+2	; 0x02
    980c:	9b 81       	ldd	r25, Y+3	; 0x03
    980e:	44 97       	sbiw	r24, 0x14	; 20
    9810:	f0 f4       	brcc	.+60     	; 0x984e <_ZN13EepromManager11readNonVolsEv+0x886>
		{
			char c = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.foxA_pattern_text[i])));
    9812:	8a 81       	ldd	r24, Y+2	; 0x02
    9814:	9b 81       	ldd	r25, Y+3	; 0x03
    9816:	82 54       	subi	r24, 0x42	; 66
    9818:	9f 4f       	sbci	r25, 0xFF	; 255
    981a:	80 50       	subi	r24, 0x00	; 0
    981c:	90 40       	sbci	r25, 0x00	; 0
    981e:	0e 94 c9 84 	call	0x10992	; 0x10992 <eeprom_read_byte>
    9822:	8f 83       	std	Y+7, r24	; 0x07
			if(c==255) c=0;
    9824:	8f 81       	ldd	r24, Y+7	; 0x07
    9826:	8f 3f       	cpi	r24, 0xFF	; 255
    9828:	09 f4       	brne	.+2      	; 0x982c <_ZN13EepromManager11readNonVolsEv+0x864>
    982a:	1f 82       	std	Y+7, r1	; 0x07
			g_messages_text[FOXA_PATTERN_TEXT][i] = c;
    982c:	8a 81       	ldd	r24, Y+2	; 0x02
    982e:	9b 81       	ldd	r25, Y+3	; 0x03
    9830:	88 51       	subi	r24, 0x18	; 24
    9832:	9a 4b       	sbci	r25, 0xBA	; 186
    9834:	2f 81       	ldd	r18, Y+7	; 0x07
    9836:	fc 01       	movw	r30, r24
    9838:	20 83       	st	Z, r18
			if(!c)
    983a:	8f 81       	ldd	r24, Y+7	; 0x07
    983c:	88 23       	and	r24, r24
    983e:	31 f0       	breq	.+12     	; 0x984c <_ZN13EepromManager11readNonVolsEv+0x884>
		g_off_air_seconds = CLAMP(0, (int16_t)eeprom_read_word((const uint16_t*)&(EepromManager::ee_vars.off_air_seconds)), 3600);
		g_on_air_seconds = CLAMP(0, (int16_t)eeprom_read_word((const uint16_t*)&(EepromManager::ee_vars.on_air_seconds)), 3600);
		g_ID_period_seconds = CLAMP(0, (int16_t)eeprom_read_word((const uint16_t*)&(EepromManager::ee_vars.ID_period_seconds)), 3600);
		g_intra_cycle_delay_time = CLAMP(0, (int16_t)eeprom_read_word((const uint16_t*)&(EepromManager::ee_vars.intra_cycle_delay_time)), 3600);

		for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    9840:	8a 81       	ldd	r24, Y+2	; 0x02
    9842:	9b 81       	ldd	r25, Y+3	; 0x03
    9844:	01 96       	adiw	r24, 0x01	; 1
    9846:	8a 83       	std	Y+2, r24	; 0x02
    9848:	9b 83       	std	Y+3, r25	; 0x03
    984a:	df cf       	rjmp	.-66     	; 0x980a <_ZN13EepromManager11readNonVolsEv+0x842>
			char c = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.foxA_pattern_text[i])));
			if(c==255) c=0;
			g_messages_text[FOXA_PATTERN_TEXT][i] = c;
			if(!c)
			{
				break;
    984c:	00 00       	nop
			}
		}

		for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    984e:	1a 82       	std	Y+2, r1	; 0x02
    9850:	1b 82       	std	Y+3, r1	; 0x03
    9852:	8a 81       	ldd	r24, Y+2	; 0x02
    9854:	9b 81       	ldd	r25, Y+3	; 0x03
    9856:	44 97       	sbiw	r24, 0x14	; 20
    9858:	f0 f4       	brcc	.+60     	; 0x9896 <_ZN13EepromManager11readNonVolsEv+0x8ce>
		{
			char c = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.foxB_pattern_text[i])));
    985a:	8a 81       	ldd	r24, Y+2	; 0x02
    985c:	9b 81       	ldd	r25, Y+3	; 0x03
    985e:	89 52       	subi	r24, 0x29	; 41
    9860:	9f 4f       	sbci	r25, 0xFF	; 255
    9862:	80 50       	subi	r24, 0x00	; 0
    9864:	90 40       	sbci	r25, 0x00	; 0
    9866:	0e 94 c9 84 	call	0x10992	; 0x10992 <eeprom_read_byte>
    986a:	88 87       	std	Y+8, r24	; 0x08
			if(c==255) c=0;
    986c:	88 85       	ldd	r24, Y+8	; 0x08
    986e:	8f 3f       	cpi	r24, 0xFF	; 255
    9870:	09 f4       	brne	.+2      	; 0x9874 <_ZN13EepromManager11readNonVolsEv+0x8ac>
    9872:	18 86       	std	Y+8, r1	; 0x08
			g_messages_text[FOXB_PATTERN_TEXT][i] = c;
    9874:	8a 81       	ldd	r24, Y+2	; 0x02
    9876:	9b 81       	ldd	r25, Y+3	; 0x03
    9878:	83 50       	subi	r24, 0x03	; 3
    987a:	9a 4b       	sbci	r25, 0xBA	; 186
    987c:	28 85       	ldd	r18, Y+8	; 0x08
    987e:	fc 01       	movw	r30, r24
    9880:	20 83       	st	Z, r18
			if(!c)
    9882:	88 85       	ldd	r24, Y+8	; 0x08
    9884:	88 23       	and	r24, r24
    9886:	31 f0       	breq	.+12     	; 0x9894 <_ZN13EepromManager11readNonVolsEv+0x8cc>
			{
				break;
			}
		}

		for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    9888:	8a 81       	ldd	r24, Y+2	; 0x02
    988a:	9b 81       	ldd	r25, Y+3	; 0x03
    988c:	01 96       	adiw	r24, 0x01	; 1
    988e:	8a 83       	std	Y+2, r24	; 0x02
    9890:	9b 83       	std	Y+3, r25	; 0x03
    9892:	df cf       	rjmp	.-66     	; 0x9852 <_ZN13EepromManager11readNonVolsEv+0x88a>
			char c = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.foxB_pattern_text[i])));
			if(c==255) c=0;
			g_messages_text[FOXB_PATTERN_TEXT][i] = c;
			if(!c)
			{
				break;
    9894:	00 00       	nop
			}
		}

		for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    9896:	1a 82       	std	Y+2, r1	; 0x02
    9898:	1b 82       	std	Y+3, r1	; 0x03
    989a:	8a 81       	ldd	r24, Y+2	; 0x02
    989c:	9b 81       	ldd	r25, Y+3	; 0x03
    989e:	44 97       	sbiw	r24, 0x14	; 20
    98a0:	f0 f4       	brcc	.+60     	; 0x98de <_ZN13EepromManager11readNonVolsEv+0x916>
		{
			char c = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.foxC_pattern_text[i])));
    98a2:	8a 81       	ldd	r24, Y+2	; 0x02
    98a4:	9b 81       	ldd	r25, Y+3	; 0x03
    98a6:	80 51       	subi	r24, 0x10	; 16
    98a8:	9f 4f       	sbci	r25, 0xFF	; 255
    98aa:	80 50       	subi	r24, 0x00	; 0
    98ac:	90 40       	sbci	r25, 0x00	; 0
    98ae:	0e 94 c9 84 	call	0x10992	; 0x10992 <eeprom_read_byte>
    98b2:	89 87       	std	Y+9, r24	; 0x09
			if(c==255) c=0;
    98b4:	89 85       	ldd	r24, Y+9	; 0x09
    98b6:	8f 3f       	cpi	r24, 0xFF	; 255
    98b8:	09 f4       	brne	.+2      	; 0x98bc <_ZN13EepromManager11readNonVolsEv+0x8f4>
    98ba:	19 86       	std	Y+9, r1	; 0x09
			g_messages_text[FOXC_PATTERN_TEXT][i] = c;
    98bc:	8a 81       	ldd	r24, Y+2	; 0x02
    98be:	9b 81       	ldd	r25, Y+3	; 0x03
    98c0:	8e 5e       	subi	r24, 0xEE	; 238
    98c2:	99 4b       	sbci	r25, 0xB9	; 185
    98c4:	29 85       	ldd	r18, Y+9	; 0x09
    98c6:	fc 01       	movw	r30, r24
    98c8:	20 83       	st	Z, r18
			if(!c)
    98ca:	89 85       	ldd	r24, Y+9	; 0x09
    98cc:	88 23       	and	r24, r24
    98ce:	31 f0       	breq	.+12     	; 0x98dc <_ZN13EepromManager11readNonVolsEv+0x914>
			{
				break;
			}
		}

		for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    98d0:	8a 81       	ldd	r24, Y+2	; 0x02
    98d2:	9b 81       	ldd	r25, Y+3	; 0x03
    98d4:	01 96       	adiw	r24, 0x01	; 1
    98d6:	8a 83       	std	Y+2, r24	; 0x02
    98d8:	9b 83       	std	Y+3, r25	; 0x03
    98da:	df cf       	rjmp	.-66     	; 0x989a <_ZN13EepromManager11readNonVolsEv+0x8d2>
			char c = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.foxC_pattern_text[i])));
			if(c==255) c=0;
			g_messages_text[FOXC_PATTERN_TEXT][i] = c;
			if(!c)
			{
				break;
    98dc:	00 00       	nop
			}
		}
		
		g_voltage_threshold = CLAMP(0.1, eeprom_read_float(&(EepromManager::ee_vars.voltage_threshold)), 15.0);
    98de:	8e 01       	movw	r16, r28
    98e0:	08 59       	subi	r16, 0x98	; 152
    98e2:	1f 4f       	sbci	r17, 0xFF	; 255
    98e4:	89 e0       	ldi	r24, 0x09	; 9
    98e6:	91 e0       	ldi	r25, 0x01	; 1
    98e8:	0e 94 d1 84 	call	0x109a2	; 0x109a2 <eeprom_read_dword>
    98ec:	dc 01       	movw	r26, r24
    98ee:	cb 01       	movw	r24, r22
    98f0:	f8 01       	movw	r30, r16
    98f2:	80 83       	st	Z, r24
    98f4:	91 83       	std	Z+1, r25	; 0x01
    98f6:	a2 83       	std	Z+2, r26	; 0x02
    98f8:	b3 83       	std	Z+3, r27	; 0x03
    98fa:	9e 01       	movw	r18, r28
    98fc:	24 59       	subi	r18, 0x94	; 148
    98fe:	3f 4f       	sbci	r19, 0xFF	; 255
    9900:	8d ec       	ldi	r24, 0xCD	; 205
    9902:	9c ec       	ldi	r25, 0xCC	; 204
    9904:	ac ec       	ldi	r26, 0xCC	; 204
    9906:	bd e3       	ldi	r27, 0x3D	; 61
    9908:	f9 01       	movw	r30, r18
    990a:	80 83       	st	Z, r24
    990c:	91 83       	std	Z+1, r25	; 0x01
    990e:	a2 83       	std	Z+2, r26	; 0x02
    9910:	b3 83       	std	Z+3, r27	; 0x03
    9912:	9e 01       	movw	r18, r28
    9914:	20 59       	subi	r18, 0x90	; 144
    9916:	3f 4f       	sbci	r19, 0xFF	; 255
    9918:	80 e0       	ldi	r24, 0x00	; 0
    991a:	90 e0       	ldi	r25, 0x00	; 0
    991c:	a0 e7       	ldi	r26, 0x70	; 112
    991e:	b1 e4       	ldi	r27, 0x41	; 65
    9920:	f9 01       	movw	r30, r18
    9922:	80 83       	st	Z, r24
    9924:	91 83       	std	Z+1, r25	; 0x01
    9926:	a2 83       	std	Z+2, r26	; 0x02
    9928:	b3 83       	std	Z+3, r27	; 0x03
    992a:	ce 01       	movw	r24, r28
    992c:	88 59       	subi	r24, 0x98	; 152
    992e:	9f 4f       	sbci	r25, 0xFF	; 255
    9930:	9e 01       	movw	r18, r28
    9932:	20 59       	subi	r18, 0x90	; 144
    9934:	3f 4f       	sbci	r19, 0xFF	; 255
    9936:	f9 01       	movw	r30, r18
    9938:	20 81       	ld	r18, Z
    993a:	31 81       	ldd	r19, Z+1	; 0x01
    993c:	42 81       	ldd	r20, Z+2	; 0x02
    993e:	53 81       	ldd	r21, Z+3	; 0x03
    9940:	fc 01       	movw	r30, r24
    9942:	60 81       	ld	r22, Z
    9944:	71 81       	ldd	r23, Z+1	; 0x01
    9946:	82 81       	ldd	r24, Z+2	; 0x02
    9948:	93 81       	ldd	r25, Z+3	; 0x03
    994a:	0e 94 94 7c 	call	0xf928	; 0xf928 <__gesf2>
    994e:	18 16       	cp	r1, r24
    9950:	4c f4       	brge	.+18     	; 0x9964 <_ZN13EepromManager11readNonVolsEv+0x99c>
    9952:	ce 01       	movw	r24, r28
    9954:	80 59       	subi	r24, 0x90	; 144
    9956:	9f 4f       	sbci	r25, 0xFF	; 255
    9958:	fc 01       	movw	r30, r24
    995a:	80 81       	ld	r24, Z
    995c:	91 81       	ldd	r25, Z+1	; 0x01
    995e:	a2 81       	ldd	r26, Z+2	; 0x02
    9960:	b3 81       	ldd	r27, Z+3	; 0x03
    9962:	25 c0       	rjmp	.+74     	; 0x99ae <_ZN13EepromManager11readNonVolsEv+0x9e6>
    9964:	ce 01       	movw	r24, r28
    9966:	88 59       	subi	r24, 0x98	; 152
    9968:	9f 4f       	sbci	r25, 0xFF	; 255
    996a:	9e 01       	movw	r18, r28
    996c:	24 59       	subi	r18, 0x94	; 148
    996e:	3f 4f       	sbci	r19, 0xFF	; 255
    9970:	f9 01       	movw	r30, r18
    9972:	20 81       	ld	r18, Z
    9974:	31 81       	ldd	r19, Z+1	; 0x01
    9976:	42 81       	ldd	r20, Z+2	; 0x02
    9978:	53 81       	ldd	r21, Z+3	; 0x03
    997a:	fc 01       	movw	r30, r24
    997c:	60 81       	ld	r22, Z
    997e:	71 81       	ldd	r23, Z+1	; 0x01
    9980:	82 81       	ldd	r24, Z+2	; 0x02
    9982:	93 81       	ldd	r25, Z+3	; 0x03
    9984:	0e 94 35 7b 	call	0xf66a	; 0xf66a <__cmpsf2>
    9988:	88 23       	and	r24, r24
    998a:	4c f4       	brge	.+18     	; 0x999e <_ZN13EepromManager11readNonVolsEv+0x9d6>
    998c:	ce 01       	movw	r24, r28
    998e:	84 59       	subi	r24, 0x94	; 148
    9990:	9f 4f       	sbci	r25, 0xFF	; 255
    9992:	fc 01       	movw	r30, r24
    9994:	80 81       	ld	r24, Z
    9996:	91 81       	ldd	r25, Z+1	; 0x01
    9998:	a2 81       	ldd	r26, Z+2	; 0x02
    999a:	b3 81       	ldd	r27, Z+3	; 0x03
    999c:	08 c0       	rjmp	.+16     	; 0x99ae <_ZN13EepromManager11readNonVolsEv+0x9e6>
    999e:	ce 01       	movw	r24, r28
    99a0:	88 59       	subi	r24, 0x98	; 152
    99a2:	9f 4f       	sbci	r25, 0xFF	; 255
    99a4:	fc 01       	movw	r30, r24
    99a6:	80 81       	ld	r24, Z
    99a8:	91 81       	ldd	r25, Z+1	; 0x01
    99aa:	a2 81       	ldd	r26, Z+2	; 0x02
    99ac:	b3 81       	ldd	r27, Z+3	; 0x03
    99ae:	80 93 3f 40 	sts	0x403F, r24	; 0x80403f <g_voltage_threshold>
    99b2:	90 93 40 40 	sts	0x4040, r25	; 0x804040 <g_voltage_threshold+0x1>
    99b6:	a0 93 41 40 	sts	0x4041, r26	; 0x804041 <g_voltage_threshold+0x2>
    99ba:	b0 93 42 40 	sts	0x4042, r27	; 0x804042 <g_voltage_threshold+0x3>
		
		g_clock_calibration = eeprom_read_word(&(EepromManager::ee_vars.clock_calibration));
    99be:	81 e1       	ldi	r24, 0x11	; 17
    99c0:	91 e0       	ldi	r25, 0x01	; 1
    99c2:	0e 94 d8 84 	call	0x109b0	; 0x109b0 <eeprom_read_word>
    99c6:	80 93 43 40 	sts	0x4043, r24	; 0x804043 <g_clock_calibration>
    99ca:	90 93 44 40 	sts	0x4044, r25	; 0x804044 <g_clock_calibration+0x1>

		failure = false;
    99ce:	19 82       	std	Y+1, r1	; 0x01
	}

	return( failure);
    99d0:	89 81       	ldd	r24, Y+1	; 0x01
}
    99d2:	cb 58       	subi	r28, 0x8B	; 139
    99d4:	df 4f       	sbci	r29, 0xFF	; 255
    99d6:	cd bf       	out	0x3d, r28	; 61
    99d8:	de bf       	out	0x3e, r29	; 62
    99da:	df 91       	pop	r29
    99dc:	cf 91       	pop	r28
    99de:	1f 91       	pop	r17
    99e0:	0f 91       	pop	r16
    99e2:	08 95       	ret

000099e4 <_ZN13EepromManager20initializeEEPROMVarsEv>:

/*
 * Set volatile variables to their values stored in EEPROM
 */
	bool EepromManager::initializeEEPROMVars(void)
	{
    99e4:	cf 93       	push	r28
    99e6:	df 93       	push	r29
    99e8:	cd b7       	in	r28, 0x3d	; 61
    99ea:	de b7       	in	r29, 0x3e	; 62
    99ec:	2b 97       	sbiw	r28, 0x0b	; 11
    99ee:	cd bf       	out	0x3d, r28	; 61
    99f0:	de bf       	out	0x3e, r29	; 62
    99f2:	8a 87       	std	Y+10, r24	; 0x0a
    99f4:	9b 87       	std	Y+11, r25	; 0x0b
		bool err = false;
    99f6:	1f 82       	std	Y+7, r1	; 0x07
		uint16_t i, j;

		uint16_t initialization_flag = eeprom_read_word(0);
    99f8:	80 e0       	ldi	r24, 0x00	; 0
    99fa:	90 e0       	ldi	r25, 0x00	; 0
    99fc:	0e 94 d8 84 	call	0x109b0	; 0x109b0 <eeprom_read_word>
    9a00:	88 87       	std	Y+8, r24	; 0x08
    9a02:	99 87       	std	Y+9, r25	; 0x09

		if(initialization_flag != EEPROM_INITIALIZED_FLAG)
    9a04:	88 85       	ldd	r24, Y+8	; 0x08
    9a06:	99 85       	ldd	r25, Y+9	; 0x09
    9a08:	82 30       	cpi	r24, 0x02	; 2
    9a0a:	91 40       	sbci	r25, 0x01	; 1
    9a0c:	09 f4       	brne	.+2      	; 0x9a10 <_ZN13EepromManager20initializeEEPROMVarsEv+0x2c>
    9a0e:	88 c2       	rjmp	.+1296   	; 0x9f20 <_ZN13EepromManager20initializeEEPROMVarsEv+0x53c>
		{
			g_id_codespeed = EEPROM_ID_CODE_SPEED_DEFAULT;
    9a10:	84 e1       	ldi	r24, 0x14	; 20
    9a12:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_id_codespeed>
			avr_eeprom_write_byte(Id_codespeed, g_id_codespeed);
    9a16:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_id_codespeed>
    9a1a:	68 2f       	mov	r22, r24
    9a1c:	85 e5       	ldi	r24, 0x55	; 85
    9a1e:	90 e0       	ldi	r25, 0x00	; 0
    9a20:	0e 94 ee 41 	call	0x83dc	; 0x83dc <_Z21avr_eeprom_write_bytejh>
			
			g_isMaster = EEPROM_MASTER_SETTING_DEFAULT;
    9a24:	10 92 a4 46 	sts	0x46A4, r1	; 0x8046a4 <g_isMaster>
			avr_eeprom_write_byte(Master_setting, g_isMaster);
    9a28:	80 91 a4 46 	lds	r24, 0x46A4	; 0x8046a4 <g_isMaster>
    9a2c:	68 2f       	mov	r22, r24
    9a2e:	89 eb       	ldi	r24, 0xB9	; 185
    9a30:	90 e0       	ldi	r25, 0x00	; 0
    9a32:	0e 94 ee 41 	call	0x83dc	; 0x83dc <_Z21avr_eeprom_write_bytejh>

			g_fox = EEPROM_FOX_SETTING_DEFAULT;
    9a36:	81 e0       	ldi	r24, 0x01	; 1
    9a38:	80 93 20 40 	sts	0x4020, r24	; 0x804020 <g_fox>
			avr_eeprom_write_byte(Fox_setting, (uint8_t)g_fox);
    9a3c:	80 91 20 40 	lds	r24, 0x4020	; 0x804020 <g_fox>
    9a40:	68 2f       	mov	r22, r24
    9a42:	8a e5       	ldi	r24, 0x5A	; 90
    9a44:	90 e0       	ldi	r25, 0x00	; 0
    9a46:	0e 94 ee 41 	call	0x83dc	; 0x83dc <_Z21avr_eeprom_write_bytejh>
			
			g_event = EEPROM_EVENT_SETTING_DEFAULT;
    9a4a:	10 92 a5 46 	sts	0x46A5, r1	; 0x8046a5 <g_event>
			avr_eeprom_write_byte(Event_setting, (uint8_t)g_event);
    9a4e:	80 91 a5 46 	lds	r24, 0x46A5	; 0x8046a5 <g_event>
    9a52:	68 2f       	mov	r22, r24
    9a54:	87 e9       	ldi	r24, 0x97	; 151
    9a56:	90 e0       	ldi	r25, 0x00	; 0
    9a58:	0e 94 ee 41 	call	0x83dc	; 0x83dc <_Z21avr_eeprom_write_bytejh>
			
			g_foxoring_frequencyA = EEPROM_FOXORING_FREQUENCYA_DEFAULT;
    9a5c:	80 e0       	ldi	r24, 0x00	; 0
    9a5e:	96 eb       	ldi	r25, 0xB6	; 182
    9a60:	a5 e3       	ldi	r26, 0x35	; 53
    9a62:	b0 e0       	ldi	r27, 0x00	; 0
    9a64:	80 93 32 40 	sts	0x4032, r24	; 0x804032 <g_foxoring_frequencyA>
    9a68:	90 93 33 40 	sts	0x4033, r25	; 0x804033 <g_foxoring_frequencyA+0x1>
    9a6c:	a0 93 34 40 	sts	0x4034, r26	; 0x804034 <g_foxoring_frequencyA+0x2>
    9a70:	b0 93 35 40 	sts	0x4035, r27	; 0x804035 <g_foxoring_frequencyA+0x3>
			avr_eeprom_write_dword(Foxoring_FrequencyA, g_foxoring_frequencyA);
    9a74:	80 91 32 40 	lds	r24, 0x4032	; 0x804032 <g_foxoring_frequencyA>
    9a78:	90 91 33 40 	lds	r25, 0x4033	; 0x804033 <g_foxoring_frequencyA+0x1>
    9a7c:	a0 91 34 40 	lds	r26, 0x4034	; 0x804034 <g_foxoring_frequencyA+0x2>
    9a80:	b0 91 35 40 	lds	r27, 0x4035	; 0x804035 <g_foxoring_frequencyA+0x3>
    9a84:	ac 01       	movw	r20, r24
    9a86:	bd 01       	movw	r22, r26
    9a88:	8c e9       	ldi	r24, 0x9C	; 156
    9a8a:	90 e0       	ldi	r25, 0x00	; 0
    9a8c:	0e 94 50 42 	call	0x84a0	; 0x84a0 <_Z22avr_eeprom_write_dwordjm>
			
			g_foxoring_frequencyB = EEPROM_FOXORING_FREQUENCYB_DEFAULT;
    9a90:	80 e3       	ldi	r24, 0x30	; 48
    9a92:	9b e2       	ldi	r25, 0x2B	; 43
    9a94:	a6 e3       	ldi	r26, 0x36	; 54
    9a96:	b0 e0       	ldi	r27, 0x00	; 0
    9a98:	80 93 36 40 	sts	0x4036, r24	; 0x804036 <g_foxoring_frequencyB>
    9a9c:	90 93 37 40 	sts	0x4037, r25	; 0x804037 <g_foxoring_frequencyB+0x1>
    9aa0:	a0 93 38 40 	sts	0x4038, r26	; 0x804038 <g_foxoring_frequencyB+0x2>
    9aa4:	b0 93 39 40 	sts	0x4039, r27	; 0x804039 <g_foxoring_frequencyB+0x3>
			avr_eeprom_write_dword(Foxoring_FrequencyB, g_foxoring_frequencyB);
    9aa8:	80 91 36 40 	lds	r24, 0x4036	; 0x804036 <g_foxoring_frequencyB>
    9aac:	90 91 37 40 	lds	r25, 0x4037	; 0x804037 <g_foxoring_frequencyB+0x1>
    9ab0:	a0 91 38 40 	lds	r26, 0x4038	; 0x804038 <g_foxoring_frequencyB+0x2>
    9ab4:	b0 91 39 40 	lds	r27, 0x4039	; 0x804039 <g_foxoring_frequencyB+0x3>
    9ab8:	ac 01       	movw	r20, r24
    9aba:	bd 01       	movw	r22, r26
    9abc:	84 ea       	ldi	r24, 0xA4	; 164
    9abe:	90 e0       	ldi	r25, 0x00	; 0
    9ac0:	0e 94 50 42 	call	0x84a0	; 0x84a0 <_Z22avr_eeprom_write_dwordjm>
			
			g_foxoring_frequencyC = EEPROM_FOXORING_FREQUENCYC_DEFAULT;
    9ac4:	80 e5       	ldi	r24, 0x50	; 80
    9ac6:	99 e7       	ldi	r25, 0x79	; 121
    9ac8:	a6 e3       	ldi	r26, 0x36	; 54
    9aca:	b0 e0       	ldi	r27, 0x00	; 0
    9acc:	80 93 3a 40 	sts	0x403A, r24	; 0x80403a <g_foxoring_frequencyC>
    9ad0:	90 93 3b 40 	sts	0x403B, r25	; 0x80403b <g_foxoring_frequencyC+0x1>
    9ad4:	a0 93 3c 40 	sts	0x403C, r26	; 0x80403c <g_foxoring_frequencyC+0x2>
    9ad8:	b0 93 3d 40 	sts	0x403D, r27	; 0x80403d <g_foxoring_frequencyC+0x3>
			avr_eeprom_write_dword(Foxoring_FrequencyC, g_foxoring_frequencyC);
    9adc:	80 91 3a 40 	lds	r24, 0x403A	; 0x80403a <g_foxoring_frequencyC>
    9ae0:	90 91 3b 40 	lds	r25, 0x403B	; 0x80403b <g_foxoring_frequencyC+0x1>
    9ae4:	a0 91 3c 40 	lds	r26, 0x403C	; 0x80403c <g_foxoring_frequencyC+0x2>
    9ae8:	b0 91 3d 40 	lds	r27, 0x403D	; 0x80403d <g_foxoring_frequencyC+0x3>
    9aec:	ac 01       	movw	r20, r24
    9aee:	bd 01       	movw	r22, r26
    9af0:	8c ea       	ldi	r24, 0xAC	; 172
    9af2:	90 e0       	ldi	r25, 0x00	; 0
    9af4:	0e 94 50 42 	call	0x84a0	; 0x84a0 <_Z22avr_eeprom_write_dwordjm>

			g_foxoring_fox = EEPROM_FOXORING_FOX_SETTING_DEFAULT;
    9af8:	82 e1       	ldi	r24, 0x12	; 18
    9afa:	80 93 3e 40 	sts	0x403E, r24	; 0x80403e <g_foxoring_fox>
			avr_eeprom_write_byte(Foxoring_fox_setting, (uint8_t)g_foxoring_fox);
    9afe:	80 91 3e 40 	lds	r24, 0x403E	; 0x80403e <g_foxoring_fox>
    9b02:	68 2f       	mov	r22, r24
    9b04:	84 eb       	ldi	r24, 0xB4	; 180
    9b06:	90 e0       	ldi	r25, 0x00	; 0
    9b08:	0e 94 ee 41 	call	0x83dc	; 0x83dc <_Z21avr_eeprom_write_bytejh>

			g_event_start_epoch = EEPROM_START_EPOCH_DEFAULT;
    9b0c:	10 92 40 46 	sts	0x4640, r1	; 0x804640 <g_event_start_epoch>
    9b10:	10 92 41 46 	sts	0x4641, r1	; 0x804641 <g_event_start_epoch+0x1>
    9b14:	10 92 42 46 	sts	0x4642, r1	; 0x804642 <g_event_start_epoch+0x2>
    9b18:	10 92 43 46 	sts	0x4643, r1	; 0x804643 <g_event_start_epoch+0x3>
			avr_eeprom_write_dword(Event_start_epoch, g_event_start_epoch);
    9b1c:	80 91 40 46 	lds	r24, 0x4640	; 0x804640 <g_event_start_epoch>
    9b20:	90 91 41 46 	lds	r25, 0x4641	; 0x804641 <g_event_start_epoch+0x1>
    9b24:	a0 91 42 46 	lds	r26, 0x4642	; 0x804642 <g_event_start_epoch+0x2>
    9b28:	b0 91 43 46 	lds	r27, 0x4643	; 0x804643 <g_event_start_epoch+0x3>
    9b2c:	ac 01       	movw	r20, r24
    9b2e:	bd 01       	movw	r22, r26
    9b30:	86 e0       	ldi	r24, 0x06	; 6
    9b32:	90 e0       	ldi	r25, 0x00	; 0
    9b34:	0e 94 50 42 	call	0x84a0	; 0x84a0 <_Z22avr_eeprom_write_dwordjm>

			g_event_finish_epoch = EEPROM_FINISH_EPOCH_DEFAULT;
    9b38:	10 92 44 46 	sts	0x4644, r1	; 0x804644 <g_event_finish_epoch>
    9b3c:	10 92 45 46 	sts	0x4645, r1	; 0x804645 <g_event_finish_epoch+0x1>
    9b40:	10 92 46 46 	sts	0x4646, r1	; 0x804646 <g_event_finish_epoch+0x2>
    9b44:	10 92 47 46 	sts	0x4647, r1	; 0x804647 <g_event_finish_epoch+0x3>
			avr_eeprom_write_dword(Event_finish_epoch, g_event_finish_epoch);
    9b48:	80 91 44 46 	lds	r24, 0x4644	; 0x804644 <g_event_finish_epoch>
    9b4c:	90 91 45 46 	lds	r25, 0x4645	; 0x804645 <g_event_finish_epoch+0x1>
    9b50:	a0 91 46 46 	lds	r26, 0x4646	; 0x804646 <g_event_finish_epoch+0x2>
    9b54:	b0 91 47 46 	lds	r27, 0x4647	; 0x804647 <g_event_finish_epoch+0x3>
    9b58:	ac 01       	movw	r20, r24
    9b5a:	bd 01       	movw	r22, r26
    9b5c:	8e e0       	ldi	r24, 0x0E	; 14
    9b5e:	90 e0       	ldi	r25, 0x00	; 0
    9b60:	0e 94 50 42 	call	0x84a0	; 0x84a0 <_Z22avr_eeprom_write_dwordjm>

			g_utc_offset = EEPROM_UTC_OFFSET_DEFAULT;
    9b64:	10 92 77 46 	sts	0x4677, r1	; 0x804677 <g_utc_offset>
			avr_eeprom_write_byte(Utc_offset, (uint8_t)g_utc_offset);
    9b68:	80 91 77 46 	lds	r24, 0x4677	; 0x804677 <g_utc_offset>
    9b6c:	68 2f       	mov	r22, r24
    9b6e:	8f e5       	ldi	r24, 0x5F	; 95
    9b70:	90 e0       	ldi	r25, 0x00	; 0
    9b72:	0e 94 ee 41 	call	0x83dc	; 0x83dc <_Z21avr_eeprom_write_bytejh>

			g_messages_text[STATION_ID][0] = '\0';
    9b76:	10 92 27 46 	sts	0x4627, r1	; 0x804627 <g_messages_text+0x54>
			avr_eeprom_write_byte(StationID_text, 0);
    9b7a:	60 e0       	ldi	r22, 0x00	; 0
    9b7c:	86 e1       	ldi	r24, 0x16	; 22
    9b7e:	90 e0       	ldi	r25, 0x00	; 0
    9b80:	0e 94 ee 41 	call	0x83dc	; 0x83dc <_Z21avr_eeprom_write_bytejh>

			uint8_t *v = (uint8_t*)EEPROM_FOX_PATTERN_DEFAULT;
    9b84:	8b e6       	ldi	r24, 0x6B	; 107
    9b86:	94 e4       	ldi	r25, 0x44	; 68
    9b88:	8d 83       	std	Y+5, r24	; 0x05
    9b8a:	9e 83       	std	Y+6, r25	; 0x06
			i = Pattern_text;
    9b8c:	8f e2       	ldi	r24, 0x2F	; 47
    9b8e:	90 e0       	ldi	r25, 0x00	; 0
    9b90:	89 83       	std	Y+1, r24	; 0x01
    9b92:	9a 83       	std	Y+2, r25	; 0x02
			for(j = 0; j < strlen(EEPROM_FOX_PATTERN_DEFAULT); j++)
    9b94:	1b 82       	std	Y+3, r1	; 0x03
    9b96:	1c 82       	std	Y+4, r1	; 0x04
    9b98:	8b 81       	ldd	r24, Y+3	; 0x03
    9b9a:	9c 81       	ldd	r25, Y+4	; 0x04
    9b9c:	03 97       	sbiw	r24, 0x03	; 3
    9b9e:	18 f5       	brcc	.+70     	; 0x9be6 <_ZN13EepromManager20initializeEEPROMVarsEv+0x202>
			{
				g_messages_text[PATTERN_TEXT][j] = *v;
    9ba0:	8d 81       	ldd	r24, Y+5	; 0x05
    9ba2:	9e 81       	ldd	r25, Y+6	; 0x06
    9ba4:	fc 01       	movw	r30, r24
    9ba6:	20 81       	ld	r18, Z
    9ba8:	8b 81       	ldd	r24, Y+3	; 0x03
    9baa:	9c 81       	ldd	r25, Y+4	; 0x04
    9bac:	8d 52       	subi	r24, 0x2D	; 45
    9bae:	9a 4b       	sbci	r25, 0xBA	; 186
    9bb0:	fc 01       	movw	r30, r24
    9bb2:	20 83       	st	Z, r18
				avr_eeprom_write_byte(i++, *v++);
    9bb4:	8d 81       	ldd	r24, Y+5	; 0x05
    9bb6:	9e 81       	ldd	r25, Y+6	; 0x06
    9bb8:	9c 01       	movw	r18, r24
    9bba:	2f 5f       	subi	r18, 0xFF	; 255
    9bbc:	3f 4f       	sbci	r19, 0xFF	; 255
    9bbe:	2d 83       	std	Y+5, r18	; 0x05
    9bc0:	3e 83       	std	Y+6, r19	; 0x06
    9bc2:	fc 01       	movw	r30, r24
    9bc4:	40 81       	ld	r20, Z
    9bc6:	89 81       	ldd	r24, Y+1	; 0x01
    9bc8:	9a 81       	ldd	r25, Y+2	; 0x02
    9bca:	9c 01       	movw	r18, r24
    9bcc:	2f 5f       	subi	r18, 0xFF	; 255
    9bce:	3f 4f       	sbci	r19, 0xFF	; 255
    9bd0:	29 83       	std	Y+1, r18	; 0x01
    9bd2:	3a 83       	std	Y+2, r19	; 0x02
    9bd4:	64 2f       	mov	r22, r20
    9bd6:	0e 94 ee 41 	call	0x83dc	; 0x83dc <_Z21avr_eeprom_write_bytejh>
			g_messages_text[STATION_ID][0] = '\0';
			avr_eeprom_write_byte(StationID_text, 0);

			uint8_t *v = (uint8_t*)EEPROM_FOX_PATTERN_DEFAULT;
			i = Pattern_text;
			for(j = 0; j < strlen(EEPROM_FOX_PATTERN_DEFAULT); j++)
    9bda:	8b 81       	ldd	r24, Y+3	; 0x03
    9bdc:	9c 81       	ldd	r25, Y+4	; 0x04
    9bde:	01 96       	adiw	r24, 0x01	; 1
    9be0:	8b 83       	std	Y+3, r24	; 0x03
    9be2:	9c 83       	std	Y+4, r25	; 0x04
    9be4:	d9 cf       	rjmp	.-78     	; 0x9b98 <_ZN13EepromManager20initializeEEPROMVarsEv+0x1b4>
			{
				g_messages_text[PATTERN_TEXT][j] = *v;
				avr_eeprom_write_byte(i++, *v++);
			}
			
			avr_eeprom_write_byte(i, '\0');
    9be6:	89 81       	ldd	r24, Y+1	; 0x01
    9be8:	9a 81       	ldd	r25, Y+2	; 0x02
    9bea:	60 e0       	ldi	r22, 0x00	; 0
    9bec:	0e 94 ee 41 	call	0x83dc	; 0x83dc <_Z21avr_eeprom_write_bytejh>

			v = (uint8_t*)EEPROM_DTMF_UNLOCK_CODE_DEFAULT;
    9bf0:	8f e6       	ldi	r24, 0x6F	; 111
    9bf2:	94 e4       	ldi	r25, 0x44	; 68
    9bf4:	8d 83       	std	Y+5, r24	; 0x05
    9bf6:	9e 83       	std	Y+6, r25	; 0x06
			i = UnlockCode;
    9bf8:	88 e4       	ldi	r24, 0x48	; 72
    9bfa:	90 e0       	ldi	r25, 0x00	; 0
    9bfc:	89 83       	std	Y+1, r24	; 0x01
    9bfe:	9a 83       	std	Y+2, r25	; 0x02
			for(j = 0; j < strlen(EEPROM_DTMF_UNLOCK_CODE_DEFAULT); j++)
    9c00:	1b 82       	std	Y+3, r1	; 0x03
    9c02:	1c 82       	std	Y+4, r1	; 0x04
    9c04:	8b 81       	ldd	r24, Y+3	; 0x03
    9c06:	9c 81       	ldd	r25, Y+4	; 0x04
    9c08:	04 97       	sbiw	r24, 0x04	; 4
    9c0a:	18 f5       	brcc	.+70     	; 0x9c52 <_ZN13EepromManager20initializeEEPROMVarsEv+0x26e>
			{
				g_unlockCode[j] = *v;
    9c0c:	8d 81       	ldd	r24, Y+5	; 0x05
    9c0e:	9e 81       	ldd	r25, Y+6	; 0x06
    9c10:	fc 01       	movw	r30, r24
    9c12:	20 81       	ld	r18, Z
    9c14:	8b 81       	ldd	r24, Y+3	; 0x03
    9c16:	9c 81       	ldd	r25, Y+4	; 0x04
    9c18:	88 58       	subi	r24, 0x88	; 136
    9c1a:	99 4b       	sbci	r25, 0xB9	; 185
    9c1c:	fc 01       	movw	r30, r24
    9c1e:	20 83       	st	Z, r18
				avr_eeprom_write_byte(i++, *v++);
    9c20:	8d 81       	ldd	r24, Y+5	; 0x05
    9c22:	9e 81       	ldd	r25, Y+6	; 0x06
    9c24:	9c 01       	movw	r18, r24
    9c26:	2f 5f       	subi	r18, 0xFF	; 255
    9c28:	3f 4f       	sbci	r19, 0xFF	; 255
    9c2a:	2d 83       	std	Y+5, r18	; 0x05
    9c2c:	3e 83       	std	Y+6, r19	; 0x06
    9c2e:	fc 01       	movw	r30, r24
    9c30:	40 81       	ld	r20, Z
    9c32:	89 81       	ldd	r24, Y+1	; 0x01
    9c34:	9a 81       	ldd	r25, Y+2	; 0x02
    9c36:	9c 01       	movw	r18, r24
    9c38:	2f 5f       	subi	r18, 0xFF	; 255
    9c3a:	3f 4f       	sbci	r19, 0xFF	; 255
    9c3c:	29 83       	std	Y+1, r18	; 0x01
    9c3e:	3a 83       	std	Y+2, r19	; 0x02
    9c40:	64 2f       	mov	r22, r20
    9c42:	0e 94 ee 41 	call	0x83dc	; 0x83dc <_Z21avr_eeprom_write_bytejh>
			
			avr_eeprom_write_byte(i, '\0');

			v = (uint8_t*)EEPROM_DTMF_UNLOCK_CODE_DEFAULT;
			i = UnlockCode;
			for(j = 0; j < strlen(EEPROM_DTMF_UNLOCK_CODE_DEFAULT); j++)
    9c46:	8b 81       	ldd	r24, Y+3	; 0x03
    9c48:	9c 81       	ldd	r25, Y+4	; 0x04
    9c4a:	01 96       	adiw	r24, 0x01	; 1
    9c4c:	8b 83       	std	Y+3, r24	; 0x03
    9c4e:	9c 83       	std	Y+4, r25	; 0x04
    9c50:	d9 cf       	rjmp	.-78     	; 0x9c04 <_ZN13EepromManager20initializeEEPROMVarsEv+0x220>
			{
				g_unlockCode[j] = *v;
				avr_eeprom_write_byte(i++, *v++);
			}

			avr_eeprom_write_byte(i, '\0');
    9c52:	89 81       	ldd	r24, Y+1	; 0x01
    9c54:	9a 81       	ldd	r25, Y+2	; 0x02
    9c56:	60 e0       	ldi	r22, 0x00	; 0
    9c58:	0e 94 ee 41 	call	0x83dc	; 0x83dc <_Z21avr_eeprom_write_bytejh>
			g_unlockCode[j] = '\0';
    9c5c:	8b 81       	ldd	r24, Y+3	; 0x03
    9c5e:	9c 81       	ldd	r25, Y+4	; 0x04
    9c60:	88 58       	subi	r24, 0x88	; 136
    9c62:	99 4b       	sbci	r25, 0xB9	; 185
    9c64:	fc 01       	movw	r30, r24
    9c66:	10 82       	st	Z, r1
			
			g_80m_frequency = EEPROM_TX_80M_FREQUENCY_DEFAULT;
    9c68:	80 e2       	ldi	r24, 0x20	; 32
    9c6a:	94 e0       	ldi	r25, 0x04	; 4
    9c6c:	a6 e3       	ldi	r26, 0x36	; 54
    9c6e:	b0 e0       	ldi	r27, 0x00	; 0
    9c70:	80 93 5a 40 	sts	0x405A, r24	; 0x80405a <g_80m_frequency>
    9c74:	90 93 5b 40 	sts	0x405B, r25	; 0x80405b <g_80m_frequency+0x1>
    9c78:	a0 93 5c 40 	sts	0x405C, r26	; 0x80405c <g_80m_frequency+0x2>
    9c7c:	b0 93 5d 40 	sts	0x405D, r27	; 0x80405d <g_80m_frequency+0x3>
			avr_eeprom_write_dword(Frequency, g_80m_frequency);
    9c80:	80 91 5a 40 	lds	r24, 0x405A	; 0x80405a <g_80m_frequency>
    9c84:	90 91 5b 40 	lds	r25, 0x405B	; 0x80405b <g_80m_frequency+0x1>
    9c88:	a0 91 5c 40 	lds	r26, 0x405C	; 0x80405c <g_80m_frequency+0x2>
    9c8c:	b0 91 5d 40 	lds	r27, 0x405D	; 0x80405d <g_80m_frequency+0x3>
    9c90:	ac 01       	movw	r20, r24
    9c92:	bd 01       	movw	r22, r26
    9c94:	84 e6       	ldi	r24, 0x64	; 100
    9c96:	90 e0       	ldi	r25, 0x00	; 0
    9c98:	0e 94 50 42 	call	0x84a0	; 0x84a0 <_Z22avr_eeprom_write_dwordjm>

			g_rtty_offset = EEPROM_RTTY_OFFSET_FREQUENCY_DEFAULT;
    9c9c:	8a ea       	ldi	r24, 0xAA	; 170
    9c9e:	90 e0       	ldi	r25, 0x00	; 0
    9ca0:	a0 e0       	ldi	r26, 0x00	; 0
    9ca2:	b0 e0       	ldi	r27, 0x00	; 0
    9ca4:	80 93 60 40 	sts	0x4060, r24	; 0x804060 <g_rtty_offset>
    9ca8:	90 93 61 40 	sts	0x4061, r25	; 0x804061 <g_rtty_offset+0x1>
    9cac:	a0 93 62 40 	sts	0x4062, r26	; 0x804062 <g_rtty_offset+0x2>
    9cb0:	b0 93 63 40 	sts	0x4063, r27	; 0x804063 <g_rtty_offset+0x3>
			avr_eeprom_write_dword(Frequency, g_rtty_offset);
    9cb4:	80 91 60 40 	lds	r24, 0x4060	; 0x804060 <g_rtty_offset>
    9cb8:	90 91 61 40 	lds	r25, 0x4061	; 0x804061 <g_rtty_offset+0x1>
    9cbc:	a0 91 62 40 	lds	r26, 0x4062	; 0x804062 <g_rtty_offset+0x2>
    9cc0:	b0 91 63 40 	lds	r27, 0x4063	; 0x804063 <g_rtty_offset+0x3>
    9cc4:	ac 01       	movw	r20, r24
    9cc6:	bd 01       	movw	r22, r26
    9cc8:	84 e6       	ldi	r24, 0x64	; 100
    9cca:	90 e0       	ldi	r25, 0x00	; 0
    9ccc:	0e 94 50 42 	call	0x84a0	; 0x84a0 <_Z22avr_eeprom_write_dwordjm>

			g_80m_power_level_mW = EEPROM_TX_80M_POWER_MW_DEFAULT;
    9cd0:	84 ef       	ldi	r24, 0xF4	; 244
    9cd2:	91 e0       	ldi	r25, 0x01	; 1
    9cd4:	80 93 5e 40 	sts	0x405E, r24	; 0x80405e <g_80m_power_level_mW>
    9cd8:	90 93 5f 40 	sts	0x405F, r25	; 0x80405f <g_80m_power_level_mW+0x1>
			avr_eeprom_write_dword(RF_Power, g_80m_power_level_mW);
    9cdc:	80 91 5e 40 	lds	r24, 0x405E	; 0x80405e <g_80m_power_level_mW>
    9ce0:	90 91 5f 40 	lds	r25, 0x405F	; 0x80405f <g_80m_power_level_mW+0x1>
    9ce4:	cc 01       	movw	r24, r24
    9ce6:	a0 e0       	ldi	r26, 0x00	; 0
    9ce8:	b0 e0       	ldi	r27, 0x00	; 0
    9cea:	ac 01       	movw	r20, r24
    9cec:	bd 01       	movw	r22, r26
    9cee:	84 e7       	ldi	r24, 0x74	; 116
    9cf0:	90 e0       	ldi	r25, 0x00	; 0
    9cf2:	0e 94 50 42 	call	0x84a0	; 0x84a0 <_Z22avr_eeprom_write_dwordjm>
			
			g_pattern_codespeed = EEPROM_PATTERN_CODE_SPEED_DEFAULT;
    9cf6:	88 e0       	ldi	r24, 0x08	; 8
    9cf8:	80 93 0e 40 	sts	0x400E, r24	; 0x80400e <g_pattern_codespeed>
			avr_eeprom_write_byte(Pattern_Code_Speed, g_pattern_codespeed);
    9cfc:	80 91 0e 40 	lds	r24, 0x400E	; 0x80400e <g_pattern_codespeed>
    9d00:	68 2f       	mov	r22, r24
    9d02:	8a e7       	ldi	r24, 0x7A	; 122
    9d04:	90 e0       	ldi	r25, 0x00	; 0
    9d06:	0e 94 ee 41 	call	0x83dc	; 0x83dc <_Z21avr_eeprom_write_bytejh>
			
			g_off_air_seconds = EEPROM_OFF_AIR_TIME_DEFAULT;
    9d0a:	80 ef       	ldi	r24, 0xF0	; 240
    9d0c:	90 e0       	ldi	r25, 0x00	; 0
    9d0e:	80 93 11 40 	sts	0x4011, r24	; 0x804011 <g_off_air_seconds>
    9d12:	90 93 12 40 	sts	0x4012, r25	; 0x804012 <g_off_air_seconds+0x1>
			avr_eeprom_write_word(Off_Air_Seconds, g_off_air_seconds);
    9d16:	80 91 11 40 	lds	r24, 0x4011	; 0x804011 <g_off_air_seconds>
    9d1a:	90 91 12 40 	lds	r25, 0x4012	; 0x804012 <g_off_air_seconds+0x1>
    9d1e:	bc 01       	movw	r22, r24
    9d20:	8f e7       	ldi	r24, 0x7F	; 127
    9d22:	90 e0       	ldi	r25, 0x00	; 0
    9d24:	0e 94 1d 42 	call	0x843a	; 0x843a <_Z21avr_eeprom_write_wordjj>
			
			g_on_air_seconds = EEPROM_ON_AIR_TIME_DEFAULT;
    9d28:	8c e3       	ldi	r24, 0x3C	; 60
    9d2a:	90 e0       	ldi	r25, 0x00	; 0
    9d2c:	80 93 0f 40 	sts	0x400F, r24	; 0x80400f <g_on_air_seconds>
    9d30:	90 93 10 40 	sts	0x4010, r25	; 0x804010 <g_on_air_seconds+0x1>
			avr_eeprom_write_word(On_Air_Seconds, g_on_air_seconds);
    9d34:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_on_air_seconds>
    9d38:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_on_air_seconds+0x1>
    9d3c:	bc 01       	movw	r22, r24
    9d3e:	85 e8       	ldi	r24, 0x85	; 133
    9d40:	90 e0       	ldi	r25, 0x00	; 0
    9d42:	0e 94 1d 42 	call	0x843a	; 0x843a <_Z21avr_eeprom_write_wordjj>
			
			g_ID_period_seconds = EEPROM_ID_TIME_INTERVAL_DEFAULT;
    9d46:	8c e2       	ldi	r24, 0x2C	; 44
    9d48:	91 e0       	ldi	r25, 0x01	; 1
    9d4a:	80 93 13 40 	sts	0x4013, r24	; 0x804013 <g_ID_period_seconds>
    9d4e:	90 93 14 40 	sts	0x4014, r25	; 0x804014 <g_ID_period_seconds+0x1>
			avr_eeprom_write_word(ID_Period_Seconds, g_ID_period_seconds);
    9d52:	80 91 13 40 	lds	r24, 0x4013	; 0x804013 <g_ID_period_seconds>
    9d56:	90 91 14 40 	lds	r25, 0x4014	; 0x804014 <g_ID_period_seconds+0x1>
    9d5a:	bc 01       	movw	r22, r24
    9d5c:	8b e8       	ldi	r24, 0x8B	; 139
    9d5e:	90 e0       	ldi	r25, 0x00	; 0
    9d60:	0e 94 1d 42 	call	0x843a	; 0x843a <_Z21avr_eeprom_write_wordjj>
			
			g_intra_cycle_delay_time = EEPROM_INTRA_CYCLE_DELAY_TIME_DEFAULT;
    9d64:	10 92 3e 46 	sts	0x463E, r1	; 0x80463e <g_intra_cycle_delay_time>
    9d68:	10 92 3f 46 	sts	0x463F, r1	; 0x80463f <g_intra_cycle_delay_time+0x1>
			avr_eeprom_write_word(Intra_Cycle_Delay_Seconds, g_intra_cycle_delay_time);
    9d6c:	80 91 3e 46 	lds	r24, 0x463E	; 0x80463e <g_intra_cycle_delay_time>
    9d70:	90 91 3f 46 	lds	r25, 0x463F	; 0x80463f <g_intra_cycle_delay_time+0x1>
    9d74:	bc 01       	movw	r22, r24
    9d76:	81 e9       	ldi	r24, 0x91	; 145
    9d78:	90 e0       	ldi	r25, 0x00	; 0
    9d7a:	0e 94 1d 42 	call	0x843a	; 0x843a <_Z21avr_eeprom_write_wordjj>

			v = (uint8_t*)EEPROM_FOXORING_FOXA_PATTERN_DEFAULT;
    9d7e:	8b e6       	ldi	r24, 0x6B	; 107
    9d80:	94 e4       	ldi	r25, 0x44	; 68
    9d82:	8d 83       	std	Y+5, r24	; 0x05
    9d84:	9e 83       	std	Y+6, r25	; 0x06
			i = FoxA_pattern_text;
    9d86:	8e eb       	ldi	r24, 0xBE	; 190
    9d88:	90 e0       	ldi	r25, 0x00	; 0
    9d8a:	89 83       	std	Y+1, r24	; 0x01
    9d8c:	9a 83       	std	Y+2, r25	; 0x02
			for(j = 0; j < strlen(EEPROM_FOXORING_FOXA_PATTERN_DEFAULT); j++)
    9d8e:	1b 82       	std	Y+3, r1	; 0x03
    9d90:	1c 82       	std	Y+4, r1	; 0x04
    9d92:	8b 81       	ldd	r24, Y+3	; 0x03
    9d94:	9c 81       	ldd	r25, Y+4	; 0x04
    9d96:	03 97       	sbiw	r24, 0x03	; 3
    9d98:	18 f5       	brcc	.+70     	; 0x9de0 <_ZN13EepromManager20initializeEEPROMVarsEv+0x3fc>
			{
				g_messages_text[FOXA_PATTERN_TEXT][j] = *v;
    9d9a:	8d 81       	ldd	r24, Y+5	; 0x05
    9d9c:	9e 81       	ldd	r25, Y+6	; 0x06
    9d9e:	fc 01       	movw	r30, r24
    9da0:	20 81       	ld	r18, Z
    9da2:	8b 81       	ldd	r24, Y+3	; 0x03
    9da4:	9c 81       	ldd	r25, Y+4	; 0x04
    9da6:	88 51       	subi	r24, 0x18	; 24
    9da8:	9a 4b       	sbci	r25, 0xBA	; 186
    9daa:	fc 01       	movw	r30, r24
    9dac:	20 83       	st	Z, r18
				avr_eeprom_write_byte(i++, *v++);
    9dae:	8d 81       	ldd	r24, Y+5	; 0x05
    9db0:	9e 81       	ldd	r25, Y+6	; 0x06
    9db2:	9c 01       	movw	r18, r24
    9db4:	2f 5f       	subi	r18, 0xFF	; 255
    9db6:	3f 4f       	sbci	r19, 0xFF	; 255
    9db8:	2d 83       	std	Y+5, r18	; 0x05
    9dba:	3e 83       	std	Y+6, r19	; 0x06
    9dbc:	fc 01       	movw	r30, r24
    9dbe:	40 81       	ld	r20, Z
    9dc0:	89 81       	ldd	r24, Y+1	; 0x01
    9dc2:	9a 81       	ldd	r25, Y+2	; 0x02
    9dc4:	9c 01       	movw	r18, r24
    9dc6:	2f 5f       	subi	r18, 0xFF	; 255
    9dc8:	3f 4f       	sbci	r19, 0xFF	; 255
    9dca:	29 83       	std	Y+1, r18	; 0x01
    9dcc:	3a 83       	std	Y+2, r19	; 0x02
    9dce:	64 2f       	mov	r22, r20
    9dd0:	0e 94 ee 41 	call	0x83dc	; 0x83dc <_Z21avr_eeprom_write_bytejh>
			g_intra_cycle_delay_time = EEPROM_INTRA_CYCLE_DELAY_TIME_DEFAULT;
			avr_eeprom_write_word(Intra_Cycle_Delay_Seconds, g_intra_cycle_delay_time);

			v = (uint8_t*)EEPROM_FOXORING_FOXA_PATTERN_DEFAULT;
			i = FoxA_pattern_text;
			for(j = 0; j < strlen(EEPROM_FOXORING_FOXA_PATTERN_DEFAULT); j++)
    9dd4:	8b 81       	ldd	r24, Y+3	; 0x03
    9dd6:	9c 81       	ldd	r25, Y+4	; 0x04
    9dd8:	01 96       	adiw	r24, 0x01	; 1
    9dda:	8b 83       	std	Y+3, r24	; 0x03
    9ddc:	9c 83       	std	Y+4, r25	; 0x04
    9dde:	d9 cf       	rjmp	.-78     	; 0x9d92 <_ZN13EepromManager20initializeEEPROMVarsEv+0x3ae>
			{
				g_messages_text[FOXA_PATTERN_TEXT][j] = *v;
				avr_eeprom_write_byte(i++, *v++);
			}

			avr_eeprom_write_byte(i, '\0');
    9de0:	89 81       	ldd	r24, Y+1	; 0x01
    9de2:	9a 81       	ldd	r25, Y+2	; 0x02
    9de4:	60 e0       	ldi	r22, 0x00	; 0
    9de6:	0e 94 ee 41 	call	0x83dc	; 0x83dc <_Z21avr_eeprom_write_bytejh>
			
			v = (uint8_t*)EEPROM_FOXORING_FOXB_PATTERN_DEFAULT;
    9dea:	84 e7       	ldi	r24, 0x74	; 116
    9dec:	94 e4       	ldi	r25, 0x44	; 68
    9dee:	8d 83       	std	Y+5, r24	; 0x05
    9df0:	9e 83       	std	Y+6, r25	; 0x06
			i = FoxB_pattern_text;
    9df2:	87 ed       	ldi	r24, 0xD7	; 215
    9df4:	90 e0       	ldi	r25, 0x00	; 0
    9df6:	89 83       	std	Y+1, r24	; 0x01
    9df8:	9a 83       	std	Y+2, r25	; 0x02
			for(j = 0; j < strlen(EEPROM_FOXORING_FOXB_PATTERN_DEFAULT); j++)
    9dfa:	1b 82       	std	Y+3, r1	; 0x03
    9dfc:	1c 82       	std	Y+4, r1	; 0x04
    9dfe:	8b 81       	ldd	r24, Y+3	; 0x03
    9e00:	9c 81       	ldd	r25, Y+4	; 0x04
    9e02:	03 97       	sbiw	r24, 0x03	; 3
    9e04:	18 f5       	brcc	.+70     	; 0x9e4c <_ZN13EepromManager20initializeEEPROMVarsEv+0x468>
			{
				g_messages_text[FOXB_PATTERN_TEXT][j] = *v;
    9e06:	8d 81       	ldd	r24, Y+5	; 0x05
    9e08:	9e 81       	ldd	r25, Y+6	; 0x06
    9e0a:	fc 01       	movw	r30, r24
    9e0c:	20 81       	ld	r18, Z
    9e0e:	8b 81       	ldd	r24, Y+3	; 0x03
    9e10:	9c 81       	ldd	r25, Y+4	; 0x04
    9e12:	83 50       	subi	r24, 0x03	; 3
    9e14:	9a 4b       	sbci	r25, 0xBA	; 186
    9e16:	fc 01       	movw	r30, r24
    9e18:	20 83       	st	Z, r18
				avr_eeprom_write_byte(i++, *v++);
    9e1a:	8d 81       	ldd	r24, Y+5	; 0x05
    9e1c:	9e 81       	ldd	r25, Y+6	; 0x06
    9e1e:	9c 01       	movw	r18, r24
    9e20:	2f 5f       	subi	r18, 0xFF	; 255
    9e22:	3f 4f       	sbci	r19, 0xFF	; 255
    9e24:	2d 83       	std	Y+5, r18	; 0x05
    9e26:	3e 83       	std	Y+6, r19	; 0x06
    9e28:	fc 01       	movw	r30, r24
    9e2a:	40 81       	ld	r20, Z
    9e2c:	89 81       	ldd	r24, Y+1	; 0x01
    9e2e:	9a 81       	ldd	r25, Y+2	; 0x02
    9e30:	9c 01       	movw	r18, r24
    9e32:	2f 5f       	subi	r18, 0xFF	; 255
    9e34:	3f 4f       	sbci	r19, 0xFF	; 255
    9e36:	29 83       	std	Y+1, r18	; 0x01
    9e38:	3a 83       	std	Y+2, r19	; 0x02
    9e3a:	64 2f       	mov	r22, r20
    9e3c:	0e 94 ee 41 	call	0x83dc	; 0x83dc <_Z21avr_eeprom_write_bytejh>

			avr_eeprom_write_byte(i, '\0');
			
			v = (uint8_t*)EEPROM_FOXORING_FOXB_PATTERN_DEFAULT;
			i = FoxB_pattern_text;
			for(j = 0; j < strlen(EEPROM_FOXORING_FOXB_PATTERN_DEFAULT); j++)
    9e40:	8b 81       	ldd	r24, Y+3	; 0x03
    9e42:	9c 81       	ldd	r25, Y+4	; 0x04
    9e44:	01 96       	adiw	r24, 0x01	; 1
    9e46:	8b 83       	std	Y+3, r24	; 0x03
    9e48:	9c 83       	std	Y+4, r25	; 0x04
    9e4a:	d9 cf       	rjmp	.-78     	; 0x9dfe <_ZN13EepromManager20initializeEEPROMVarsEv+0x41a>
			{
				g_messages_text[FOXB_PATTERN_TEXT][j] = *v;
				avr_eeprom_write_byte(i++, *v++);
			}
			
			avr_eeprom_write_byte(i, '\0');
    9e4c:	89 81       	ldd	r24, Y+1	; 0x01
    9e4e:	9a 81       	ldd	r25, Y+2	; 0x02
    9e50:	60 e0       	ldi	r22, 0x00	; 0
    9e52:	0e 94 ee 41 	call	0x83dc	; 0x83dc <_Z21avr_eeprom_write_bytejh>

			v = (uint8_t*)EEPROM_FOXORING_FOXC_PATTERN_DEFAULT;
    9e56:	88 e7       	ldi	r24, 0x78	; 120
    9e58:	94 e4       	ldi	r25, 0x44	; 68
    9e5a:	8d 83       	std	Y+5, r24	; 0x05
    9e5c:	9e 83       	std	Y+6, r25	; 0x06
			i = FoxC_pattern_text;
    9e5e:	80 ef       	ldi	r24, 0xF0	; 240
    9e60:	90 e0       	ldi	r25, 0x00	; 0
    9e62:	89 83       	std	Y+1, r24	; 0x01
    9e64:	9a 83       	std	Y+2, r25	; 0x02
			for(j = 0; j < strlen(EEPROM_FOXORING_FOXC_PATTERN_DEFAULT); j++)
    9e66:	1b 82       	std	Y+3, r1	; 0x03
    9e68:	1c 82       	std	Y+4, r1	; 0x04
    9e6a:	8b 81       	ldd	r24, Y+3	; 0x03
    9e6c:	9c 81       	ldd	r25, Y+4	; 0x04
    9e6e:	03 97       	sbiw	r24, 0x03	; 3
    9e70:	18 f5       	brcc	.+70     	; 0x9eb8 <_ZN13EepromManager20initializeEEPROMVarsEv+0x4d4>
			{
				g_messages_text[FOXC_PATTERN_TEXT][j] = *v;
    9e72:	8d 81       	ldd	r24, Y+5	; 0x05
    9e74:	9e 81       	ldd	r25, Y+6	; 0x06
    9e76:	fc 01       	movw	r30, r24
    9e78:	20 81       	ld	r18, Z
    9e7a:	8b 81       	ldd	r24, Y+3	; 0x03
    9e7c:	9c 81       	ldd	r25, Y+4	; 0x04
    9e7e:	8e 5e       	subi	r24, 0xEE	; 238
    9e80:	99 4b       	sbci	r25, 0xB9	; 185
    9e82:	fc 01       	movw	r30, r24
    9e84:	20 83       	st	Z, r18
				avr_eeprom_write_byte(i++, *v++);
    9e86:	8d 81       	ldd	r24, Y+5	; 0x05
    9e88:	9e 81       	ldd	r25, Y+6	; 0x06
    9e8a:	9c 01       	movw	r18, r24
    9e8c:	2f 5f       	subi	r18, 0xFF	; 255
    9e8e:	3f 4f       	sbci	r19, 0xFF	; 255
    9e90:	2d 83       	std	Y+5, r18	; 0x05
    9e92:	3e 83       	std	Y+6, r19	; 0x06
    9e94:	fc 01       	movw	r30, r24
    9e96:	40 81       	ld	r20, Z
    9e98:	89 81       	ldd	r24, Y+1	; 0x01
    9e9a:	9a 81       	ldd	r25, Y+2	; 0x02
    9e9c:	9c 01       	movw	r18, r24
    9e9e:	2f 5f       	subi	r18, 0xFF	; 255
    9ea0:	3f 4f       	sbci	r19, 0xFF	; 255
    9ea2:	29 83       	std	Y+1, r18	; 0x01
    9ea4:	3a 83       	std	Y+2, r19	; 0x02
    9ea6:	64 2f       	mov	r22, r20
    9ea8:	0e 94 ee 41 	call	0x83dc	; 0x83dc <_Z21avr_eeprom_write_bytejh>
			
			avr_eeprom_write_byte(i, '\0');

			v = (uint8_t*)EEPROM_FOXORING_FOXC_PATTERN_DEFAULT;
			i = FoxC_pattern_text;
			for(j = 0; j < strlen(EEPROM_FOXORING_FOXC_PATTERN_DEFAULT); j++)
    9eac:	8b 81       	ldd	r24, Y+3	; 0x03
    9eae:	9c 81       	ldd	r25, Y+4	; 0x04
    9eb0:	01 96       	adiw	r24, 0x01	; 1
    9eb2:	8b 83       	std	Y+3, r24	; 0x03
    9eb4:	9c 83       	std	Y+4, r25	; 0x04
    9eb6:	d9 cf       	rjmp	.-78     	; 0x9e6a <_ZN13EepromManager20initializeEEPROMVarsEv+0x486>
			{
				g_messages_text[FOXC_PATTERN_TEXT][j] = *v;
				avr_eeprom_write_byte(i++, *v++);
			}
			
			avr_eeprom_write_byte(i, '\0');
    9eb8:	89 81       	ldd	r24, Y+1	; 0x01
    9eba:	9a 81       	ldd	r25, Y+2	; 0x02
    9ebc:	60 e0       	ldi	r22, 0x00	; 0
    9ebe:	0e 94 ee 41 	call	0x83dc	; 0x83dc <_Z21avr_eeprom_write_bytejh>

			g_voltage_threshold = EEPROM_BATTERY_THRESHOLD_V;
    9ec2:	83 e3       	ldi	r24, 0x33	; 51
    9ec4:	93 e3       	ldi	r25, 0x33	; 51
    9ec6:	a3 e7       	ldi	r26, 0x73	; 115
    9ec8:	b0 e4       	ldi	r27, 0x40	; 64
    9eca:	80 93 3f 40 	sts	0x403F, r24	; 0x80403f <g_voltage_threshold>
    9ece:	90 93 40 40 	sts	0x4040, r25	; 0x804040 <g_voltage_threshold+0x1>
    9ed2:	a0 93 41 40 	sts	0x4041, r26	; 0x804041 <g_voltage_threshold+0x2>
    9ed6:	b0 93 42 40 	sts	0x4042, r27	; 0x804042 <g_voltage_threshold+0x3>
			avr_eeprom_write_float(Voltage_threshold, g_voltage_threshold);
    9eda:	80 91 3f 40 	lds	r24, 0x403F	; 0x80403f <g_voltage_threshold>
    9ede:	90 91 40 40 	lds	r25, 0x4040	; 0x804040 <g_voltage_threshold+0x1>
    9ee2:	a0 91 41 40 	lds	r26, 0x4041	; 0x804041 <g_voltage_threshold+0x2>
    9ee6:	b0 91 42 40 	lds	r27, 0x4042	; 0x804042 <g_voltage_threshold+0x3>
    9eea:	ac 01       	movw	r20, r24
    9eec:	bd 01       	movw	r22, r26
    9eee:	89 e0       	ldi	r24, 0x09	; 9
    9ef0:	91 e0       	ldi	r25, 0x01	; 1
    9ef2:	0e 94 8a 42 	call	0x8514	; 0x8514 <_Z22avr_eeprom_write_floatjf>
			
			g_clock_calibration = EEPROM_CLOCK_CALIBRATION_DEFAULT;
    9ef6:	8f ef       	ldi	r24, 0xFF	; 255
    9ef8:	9f e7       	ldi	r25, 0x7F	; 127
    9efa:	80 93 43 40 	sts	0x4043, r24	; 0x804043 <g_clock_calibration>
    9efe:	90 93 44 40 	sts	0x4044, r25	; 0x804044 <g_clock_calibration+0x1>
			avr_eeprom_write_word(Clock_calibration, g_clock_calibration);
    9f02:	80 91 43 40 	lds	r24, 0x4043	; 0x804043 <g_clock_calibration>
    9f06:	90 91 44 40 	lds	r25, 0x4044	; 0x804044 <g_clock_calibration+0x1>
    9f0a:	bc 01       	movw	r22, r24
    9f0c:	81 e1       	ldi	r24, 0x11	; 17
    9f0e:	91 e0       	ldi	r25, 0x01	; 1
    9f10:	0e 94 1d 42 	call	0x843a	; 0x843a <_Z21avr_eeprom_write_wordjj>

			/* Done */

			avr_eeprom_write_word(0, EEPROM_INITIALIZED_FLAG);
    9f14:	62 e0       	ldi	r22, 0x02	; 2
    9f16:	71 e0       	ldi	r23, 0x01	; 1
    9f18:	80 e0       	ldi	r24, 0x00	; 0
    9f1a:	90 e0       	ldi	r25, 0x00	; 0
    9f1c:	0e 94 1d 42 	call	0x843a	; 0x843a <_Z21avr_eeprom_write_wordjj>
		}
		
		return(err);
    9f20:	8f 81       	ldd	r24, Y+7	; 0x07
	}
    9f22:	2b 96       	adiw	r28, 0x0b	; 11
    9f24:	cd bf       	out	0x3d, r28	; 61
    9f26:	de bf       	out	0x3e, r29	; 62
    9f28:	df 91       	pop	r29
    9f2a:	cf 91       	pop	r28
    9f2c:	08 95       	ret

00009f2e <_ZN8GoertzelC1Eff>:
		highValueCount++;
	}

	Q2 = Q1;
	Q1 = Q0;
}
    9f2e:	0f 93       	push	r16
    9f30:	1f 93       	push	r17
    9f32:	cf 93       	push	r28
    9f34:	df 93       	push	r29
    9f36:	cd b7       	in	r28, 0x3d	; 61
    9f38:	de b7       	in	r29, 0x3e	; 62
    9f3a:	62 97       	sbiw	r28, 0x12	; 18
    9f3c:	cd bf       	out	0x3d, r28	; 61
    9f3e:	de bf       	out	0x3e, r29	; 62
    9f40:	89 87       	std	Y+9, r24	; 0x09
    9f42:	9a 87       	std	Y+10, r25	; 0x0a
    9f44:	4b 87       	std	Y+11, r20	; 0x0b
    9f46:	5c 87       	std	Y+12, r21	; 0x0c
    9f48:	6d 87       	std	Y+13, r22	; 0x0d
    9f4a:	7e 87       	std	Y+14, r23	; 0x0e
    9f4c:	0f 87       	std	Y+15, r16	; 0x0f
    9f4e:	18 8b       	std	Y+16, r17	; 0x10
    9f50:	29 8b       	std	Y+17, r18	; 0x11
    9f52:	3a 8b       	std	Y+18, r19	; 0x12
    9f54:	8f 85       	ldd	r24, Y+15	; 0x0f
    9f56:	98 89       	ldd	r25, Y+16	; 0x10
    9f58:	a9 89       	ldd	r26, Y+17	; 0x11
    9f5a:	ba 89       	ldd	r27, Y+18	; 0x12
    9f5c:	80 93 a6 46 	sts	0x46A6, r24	; 0x8046a6 <_SAMPLING_FREQUENCY>
    9f60:	90 93 a7 46 	sts	0x46A7, r25	; 0x8046a7 <_SAMPLING_FREQUENCY+0x1>
    9f64:	a0 93 a8 46 	sts	0x46A8, r26	; 0x8046a8 <_SAMPLING_FREQUENCY+0x2>
    9f68:	b0 93 a9 46 	sts	0x46A9, r27	; 0x8046a9 <_SAMPLING_FREQUENCY+0x3>
    9f6c:	8b 85       	ldd	r24, Y+11	; 0x0b
    9f6e:	9c 85       	ldd	r25, Y+12	; 0x0c
    9f70:	ad 85       	ldd	r26, Y+13	; 0x0d
    9f72:	be 85       	ldd	r27, Y+14	; 0x0e
    9f74:	89 83       	std	Y+1, r24	; 0x01
    9f76:	9a 83       	std	Y+2, r25	; 0x02
    9f78:	ab 83       	std	Y+3, r26	; 0x03
    9f7a:	bc 83       	std	Y+4, r27	; 0x04
    9f7c:	84 e6       	ldi	r24, 0x64	; 100
    9f7e:	90 e0       	ldi	r25, 0x00	; 0
    9f80:	8d 83       	std	Y+5, r24	; 0x05
    9f82:	9e 83       	std	Y+6, r25	; 0x06
    9f84:	81 ed       	ldi	r24, 0xD1	; 209
    9f86:	90 e0       	ldi	r25, 0x00	; 0
    9f88:	8f 83       	std	Y+7, r24	; 0x07
    9f8a:	98 87       	std	Y+8, r25	; 0x08
    9f8c:	8f 81       	ldd	r24, Y+7	; 0x07
    9f8e:	98 85       	ldd	r25, Y+8	; 0x08
    9f90:	09 2e       	mov	r0, r25
    9f92:	00 0c       	add	r0, r0
    9f94:	aa 0b       	sbc	r26, r26
    9f96:	bb 0b       	sbc	r27, r27
    9f98:	bc 01       	movw	r22, r24
    9f9a:	cd 01       	movw	r24, r26
    9f9c:	0e 94 e4 7b 	call	0xf7c8	; 0xf7c8 <__floatsisf>
    9fa0:	dc 01       	movw	r26, r24
    9fa2:	cb 01       	movw	r24, r22
    9fa4:	29 81       	ldd	r18, Y+1	; 0x01
    9fa6:	3a 81       	ldd	r19, Y+2	; 0x02
    9fa8:	4b 81       	ldd	r20, Y+3	; 0x03
    9faa:	5c 81       	ldd	r21, Y+4	; 0x04
    9fac:	bc 01       	movw	r22, r24
    9fae:	cd 01       	movw	r24, r26
    9fb0:	0e 94 35 7b 	call	0xf66a	; 0xf66a <__cmpsf2>
    9fb4:	88 23       	and	r24, r24
    9fb6:	6c f4       	brge	.+26     	; 0x9fd2 <_ZN8GoertzelC1Eff+0xa4>
    9fb8:	8f 81       	ldd	r24, Y+7	; 0x07
    9fba:	98 85       	ldd	r25, Y+8	; 0x08
    9fbc:	09 2e       	mov	r0, r25
    9fbe:	00 0c       	add	r0, r0
    9fc0:	aa 0b       	sbc	r26, r26
    9fc2:	bb 0b       	sbc	r27, r27
    9fc4:	bc 01       	movw	r22, r24
    9fc6:	cd 01       	movw	r24, r26
    9fc8:	0e 94 e4 7b 	call	0xf7c8	; 0xf7c8 <__floatsisf>
    9fcc:	dc 01       	movw	r26, r24
    9fce:	cb 01       	movw	r24, r22
    9fd0:	27 c0       	rjmp	.+78     	; 0xa020 <_ZN8GoertzelC1Eff+0xf2>
    9fd2:	8d 81       	ldd	r24, Y+5	; 0x05
    9fd4:	9e 81       	ldd	r25, Y+6	; 0x06
    9fd6:	09 2e       	mov	r0, r25
    9fd8:	00 0c       	add	r0, r0
    9fda:	aa 0b       	sbc	r26, r26
    9fdc:	bb 0b       	sbc	r27, r27
    9fde:	bc 01       	movw	r22, r24
    9fe0:	cd 01       	movw	r24, r26
    9fe2:	0e 94 e4 7b 	call	0xf7c8	; 0xf7c8 <__floatsisf>
    9fe6:	dc 01       	movw	r26, r24
    9fe8:	cb 01       	movw	r24, r22
    9fea:	29 81       	ldd	r18, Y+1	; 0x01
    9fec:	3a 81       	ldd	r19, Y+2	; 0x02
    9fee:	4b 81       	ldd	r20, Y+3	; 0x03
    9ff0:	5c 81       	ldd	r21, Y+4	; 0x04
    9ff2:	bc 01       	movw	r22, r24
    9ff4:	cd 01       	movw	r24, r26
    9ff6:	0e 94 94 7c 	call	0xf928	; 0xf928 <__gesf2>
    9ffa:	18 16       	cp	r1, r24
    9ffc:	6c f4       	brge	.+26     	; 0xa018 <_ZN8GoertzelC1Eff+0xea>
    9ffe:	8d 81       	ldd	r24, Y+5	; 0x05
    a000:	9e 81       	ldd	r25, Y+6	; 0x06
    a002:	09 2e       	mov	r0, r25
    a004:	00 0c       	add	r0, r0
    a006:	aa 0b       	sbc	r26, r26
    a008:	bb 0b       	sbc	r27, r27
    a00a:	bc 01       	movw	r22, r24
    a00c:	cd 01       	movw	r24, r26
    a00e:	0e 94 e4 7b 	call	0xf7c8	; 0xf7c8 <__floatsisf>
    a012:	dc 01       	movw	r26, r24
    a014:	cb 01       	movw	r24, r22
    a016:	04 c0       	rjmp	.+8      	; 0xa020 <_ZN8GoertzelC1Eff+0xf2>
    a018:	89 81       	ldd	r24, Y+1	; 0x01
    a01a:	9a 81       	ldd	r25, Y+2	; 0x02
    a01c:	ab 81       	ldd	r26, Y+3	; 0x03
    a01e:	bc 81       	ldd	r27, Y+4	; 0x04
    a020:	bc 01       	movw	r22, r24
    a022:	cd 01       	movw	r24, r26
    a024:	0e 94 ac 7b 	call	0xf758	; 0xf758 <__fixsfsi>
    a028:	dc 01       	movw	r26, r24
    a02a:	cb 01       	movw	r24, r22
    a02c:	80 93 aa 46 	sts	0x46AA, r24	; 0x8046aa <_N>
    a030:	90 93 ab 46 	sts	0x46AB, r25	; 0x8046ab <_N+0x1>
    a034:	80 91 aa 46 	lds	r24, 0x46AA	; 0x8046aa <_N>
    a038:	90 91 ab 46 	lds	r25, 0x46AB	; 0x8046ab <_N+0x1>
    a03c:	88 0f       	add	r24, r24
    a03e:	99 1f       	adc	r25, r25
    a040:	0e 94 c2 7d 	call	0xfb84	; 0xfb84 <malloc>
    a044:	80 93 af 46 	sts	0x46AF, r24	; 0x8046af <testData>
    a048:	90 93 b0 46 	sts	0x46B0, r25	; 0x8046b0 <testData+0x1>
    a04c:	00 00       	nop
    a04e:	62 96       	adiw	r28, 0x12	; 18
    a050:	cd bf       	out	0x3d, r28	; 61
    a052:	de bf       	out	0x3e, r29	; 62
    a054:	df 91       	pop	r29
    a056:	cf 91       	pop	r28
    a058:	1f 91       	pop	r17
    a05a:	0f 91       	pop	r16
    a05c:	08 95       	ret

0000a05e <_ZN8GoertzelD1Ev>:
    a05e:	cf 93       	push	r28
    a060:	df 93       	push	r29
    a062:	00 d0       	rcall	.+0      	; 0xa064 <_ZN8GoertzelD1Ev+0x6>
    a064:	cd b7       	in	r28, 0x3d	; 61
    a066:	de b7       	in	r29, 0x3e	; 62
    a068:	89 83       	std	Y+1, r24	; 0x01
    a06a:	9a 83       	std	Y+2, r25	; 0x02
    a06c:	80 91 af 46 	lds	r24, 0x46AF	; 0x8046af <testData>
    a070:	90 91 b0 46 	lds	r25, 0x46B0	; 0x8046b0 <testData+0x1>
    a074:	0e 94 5a 7e 	call	0xfcb4	; 0xfcb4 <free>
    a078:	00 00       	nop
    a07a:	0f 90       	pop	r0
    a07c:	0f 90       	pop	r0
    a07e:	df 91       	pop	r29
    a080:	cf 91       	pop	r28
    a082:	08 95       	ret

0000a084 <_ZN8Goertzel9DataPointEi>:

bool Goertzel::DataPoint(int data)
{
    a084:	cf 93       	push	r28
    a086:	df 93       	push	r29
    a088:	00 d0       	rcall	.+0      	; 0xa08a <_ZN8Goertzel9DataPointEi+0x6>
    a08a:	00 d0       	rcall	.+0      	; 0xa08c <_ZN8Goertzel9DataPointEi+0x8>
    a08c:	cd b7       	in	r28, 0x3d	; 61
    a08e:	de b7       	in	r29, 0x3e	; 62
    a090:	89 83       	std	Y+1, r24	; 0x01
    a092:	9a 83       	std	Y+2, r25	; 0x02
    a094:	6b 83       	std	Y+3, r22	; 0x03
    a096:	7c 83       	std	Y+4, r23	; 0x04
	if(_samplesReady)
    a098:	80 91 ae 46 	lds	r24, 0x46AE	; 0x8046ae <_samplesReady>
    a09c:	88 23       	and	r24, r24
    a09e:	19 f0       	breq	.+6      	; 0xa0a6 <_ZN8Goertzel9DataPointEi+0x22>
	{
		return(_samplesReady);
    a0a0:	80 91 ae 46 	lds	r24, 0x46AE	; 0x8046ae <_samplesReady>
    a0a4:	32 c0       	rjmp	.+100    	; 0xa10a <_ZN8Goertzel9DataPointEi+0x86>
	}

	testData[_index] = data;
    a0a6:	20 91 af 46 	lds	r18, 0x46AF	; 0x8046af <testData>
    a0aa:	30 91 b0 46 	lds	r19, 0x46B0	; 0x8046b0 <testData+0x1>
    a0ae:	80 91 ac 46 	lds	r24, 0x46AC	; 0x8046ac <_index>
    a0b2:	90 91 ad 46 	lds	r25, 0x46AD	; 0x8046ad <_index+0x1>
    a0b6:	88 0f       	add	r24, r24
    a0b8:	99 1f       	adc	r25, r25
    a0ba:	82 0f       	add	r24, r18
    a0bc:	93 1f       	adc	r25, r19
    a0be:	2b 81       	ldd	r18, Y+3	; 0x03
    a0c0:	3c 81       	ldd	r19, Y+4	; 0x04
    a0c2:	fc 01       	movw	r30, r24
    a0c4:	20 83       	st	Z, r18
    a0c6:	31 83       	std	Z+1, r19	; 0x01
	_index++;
    a0c8:	80 91 ac 46 	lds	r24, 0x46AC	; 0x8046ac <_index>
    a0cc:	90 91 ad 46 	lds	r25, 0x46AD	; 0x8046ad <_index+0x1>
    a0d0:	01 96       	adiw	r24, 0x01	; 1
    a0d2:	80 93 ac 46 	sts	0x46AC, r24	; 0x8046ac <_index>
    a0d6:	90 93 ad 46 	sts	0x46AD, r25	; 0x8046ad <_index+0x1>
	if(_index >= _N)
    a0da:	20 91 ac 46 	lds	r18, 0x46AC	; 0x8046ac <_index>
    a0de:	30 91 ad 46 	lds	r19, 0x46AD	; 0x8046ad <_index+0x1>
    a0e2:	80 91 aa 46 	lds	r24, 0x46AA	; 0x8046aa <_N>
    a0e6:	90 91 ab 46 	lds	r25, 0x46AB	; 0x8046ab <_N+0x1>
    a0ea:	41 e0       	ldi	r20, 0x01	; 1
    a0ec:	28 17       	cp	r18, r24
    a0ee:	39 07       	cpc	r19, r25
    a0f0:	0c f4       	brge	.+2      	; 0xa0f4 <_ZN8Goertzel9DataPointEi+0x70>
    a0f2:	40 e0       	ldi	r20, 0x00	; 0
    a0f4:	44 23       	and	r20, r20
    a0f6:	39 f0       	breq	.+14     	; 0xa106 <_ZN8Goertzel9DataPointEi+0x82>
	{
		_index = 0;
    a0f8:	10 92 ac 46 	sts	0x46AC, r1	; 0x8046ac <_index>
    a0fc:	10 92 ad 46 	sts	0x46AD, r1	; 0x8046ad <_index+0x1>
		_samplesReady = true;
    a100:	81 e0       	ldi	r24, 0x01	; 1
    a102:	80 93 ae 46 	sts	0x46AE, r24	; 0x8046ae <_samplesReady>
	}

	return(_samplesReady);
    a106:	80 91 ae 46 	lds	r24, 0x46AE	; 0x8046ae <_samplesReady>
}
    a10a:	24 96       	adiw	r28, 0x04	; 4
    a10c:	cd bf       	out	0x3d, r28	; 61
    a10e:	de bf       	out	0x3e, r29	; 62
    a110:	df 91       	pop	r29
    a112:	cf 91       	pop	r28
    a114:	08 95       	ret

0000a116 <PORTA_set_pin_level>:
 * \param[in] pin       The pin number within port
 * \param[in] level true  = Pin level set to "high" state
 *                  false = Pin level set to "low" state
 */
static inline void PORTA_set_pin_level(const uint8_t pin, const bool level)
{
    a116:	cf 93       	push	r28
    a118:	df 93       	push	r29
    a11a:	00 d0       	rcall	.+0      	; 0xa11c <PORTA_set_pin_level+0x6>
    a11c:	cd b7       	in	r28, 0x3d	; 61
    a11e:	de b7       	in	r29, 0x3e	; 62
    a120:	89 83       	std	Y+1, r24	; 0x01
    a122:	6a 83       	std	Y+2, r22	; 0x02
	if (level == true) {
    a124:	8a 81       	ldd	r24, Y+2	; 0x02
    a126:	88 23       	and	r24, r24
    a128:	a9 f0       	breq	.+42     	; 0xa154 <PORTA_set_pin_level+0x3e>
		VPORTA.OUT |= (1 << pin);
    a12a:	20 e0       	ldi	r18, 0x00	; 0
    a12c:	30 e0       	ldi	r19, 0x00	; 0
    a12e:	80 e0       	ldi	r24, 0x00	; 0
    a130:	90 e0       	ldi	r25, 0x00	; 0
    a132:	fc 01       	movw	r30, r24
    a134:	81 81       	ldd	r24, Z+1	; 0x01
    a136:	68 2f       	mov	r22, r24
    a138:	89 81       	ldd	r24, Y+1	; 0x01
    a13a:	48 2f       	mov	r20, r24
    a13c:	50 e0       	ldi	r21, 0x00	; 0
    a13e:	81 e0       	ldi	r24, 0x01	; 1
    a140:	90 e0       	ldi	r25, 0x00	; 0
    a142:	02 c0       	rjmp	.+4      	; 0xa148 <PORTA_set_pin_level+0x32>
    a144:	88 0f       	add	r24, r24
    a146:	99 1f       	adc	r25, r25
    a148:	4a 95       	dec	r20
    a14a:	e2 f7       	brpl	.-8      	; 0xa144 <PORTA_set_pin_level+0x2e>
    a14c:	86 2b       	or	r24, r22
    a14e:	f9 01       	movw	r30, r18
    a150:	81 83       	std	Z+1, r24	; 0x01
	} else {
		VPORTA.OUT &= ~(1 << pin);
	}
}
    a152:	15 c0       	rjmp	.+42     	; 0xa17e <PORTA_set_pin_level+0x68>
static inline void PORTA_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTA.OUT |= (1 << pin);
	} else {
		VPORTA.OUT &= ~(1 << pin);
    a154:	20 e0       	ldi	r18, 0x00	; 0
    a156:	30 e0       	ldi	r19, 0x00	; 0
    a158:	80 e0       	ldi	r24, 0x00	; 0
    a15a:	90 e0       	ldi	r25, 0x00	; 0
    a15c:	fc 01       	movw	r30, r24
    a15e:	81 81       	ldd	r24, Z+1	; 0x01
    a160:	68 2f       	mov	r22, r24
    a162:	89 81       	ldd	r24, Y+1	; 0x01
    a164:	48 2f       	mov	r20, r24
    a166:	50 e0       	ldi	r21, 0x00	; 0
    a168:	81 e0       	ldi	r24, 0x01	; 1
    a16a:	90 e0       	ldi	r25, 0x00	; 0
    a16c:	02 c0       	rjmp	.+4      	; 0xa172 <PORTA_set_pin_level+0x5c>
    a16e:	88 0f       	add	r24, r24
    a170:	99 1f       	adc	r25, r25
    a172:	4a 95       	dec	r20
    a174:	e2 f7       	brpl	.-8      	; 0xa16e <PORTA_set_pin_level+0x58>
    a176:	80 95       	com	r24
    a178:	86 23       	and	r24, r22
    a17a:	f9 01       	movw	r30, r18
    a17c:	81 83       	std	Z+1, r24	; 0x01
	}
}
    a17e:	00 00       	nop
    a180:	0f 90       	pop	r0
    a182:	0f 90       	pop	r0
    a184:	df 91       	pop	r29
    a186:	cf 91       	pop	r28
    a188:	08 95       	ret

0000a18a <_Z10wifi_powerb>:
#define WIFI_RESET_gc (1 << 6)  /* WiFi reset port pin on PORTA*/
#define WIFI_POWER_gc (1 << 5)  /* WiFi enable power port pin on PORTA */
#define WIFI_MODULE_DETECT_gc (1 << 7) /* WiFi module detect pin on PORTD */

void wifi_power(bool state)
{
    a18a:	cf 93       	push	r28
    a18c:	df 93       	push	r29
    a18e:	1f 92       	push	r1
    a190:	cd b7       	in	r28, 0x3d	; 61
    a192:	de b7       	in	r29, 0x3e	; 62
    a194:	89 83       	std	Y+1, r24	; 0x01
	if(state == ON)
    a196:	89 81       	ldd	r24, Y+1	; 0x01
    a198:	88 23       	and	r24, r24
    a19a:	29 f0       	breq	.+10     	; 0xa1a6 <_Z10wifi_powerb+0x1c>
	{
		PORTA_set_pin_level(WIFI_ENABLE, HIGH);
    a19c:	61 e0       	ldi	r22, 0x01	; 1
    a19e:	85 e0       	ldi	r24, 0x05	; 5
    a1a0:	0e 94 8b 50 	call	0xa116	; 0xa116 <PORTA_set_pin_level>
	}
	else
	{
		PORTA_set_pin_level(WIFI_ENABLE, LOW);
	}
}
    a1a4:	04 c0       	rjmp	.+8      	; 0xa1ae <_Z10wifi_powerb+0x24>
	{
		PORTA_set_pin_level(WIFI_ENABLE, HIGH);
	}
	else
	{
		PORTA_set_pin_level(WIFI_ENABLE, LOW);
    a1a6:	60 e0       	ldi	r22, 0x00	; 0
    a1a8:	85 e0       	ldi	r24, 0x05	; 5
    a1aa:	0e 94 8b 50 	call	0xa116	; 0xa116 <PORTA_set_pin_level>
	}
}
    a1ae:	00 00       	nop
    a1b0:	0f 90       	pop	r0
    a1b2:	df 91       	pop	r29
    a1b4:	cf 91       	pop	r28
    a1b6:	08 95       	ret

0000a1b8 <_Z10wifi_resetb>:

void wifi_reset(bool state)
{
    a1b8:	cf 93       	push	r28
    a1ba:	df 93       	push	r29
    a1bc:	1f 92       	push	r1
    a1be:	cd b7       	in	r28, 0x3d	; 61
    a1c0:	de b7       	in	r29, 0x3e	; 62
    a1c2:	89 83       	std	Y+1, r24	; 0x01
	if(state == ON)
    a1c4:	89 81       	ldd	r24, Y+1	; 0x01
    a1c6:	88 23       	and	r24, r24
    a1c8:	29 f0       	breq	.+10     	; 0xa1d4 <_Z10wifi_resetb+0x1c>
	{
		PORTA_set_pin_level(WIFI_RESET, LOW);
    a1ca:	60 e0       	ldi	r22, 0x00	; 0
    a1cc:	86 e0       	ldi	r24, 0x06	; 6
    a1ce:	0e 94 8b 50 	call	0xa116	; 0xa116 <PORTA_set_pin_level>
	}
	else
	{
		PORTA_set_pin_level(WIFI_RESET, HIGH);
	}
}
    a1d2:	04 c0       	rjmp	.+8      	; 0xa1dc <_Z10wifi_resetb+0x24>
	{
		PORTA_set_pin_level(WIFI_RESET, LOW);
	}
	else
	{
		PORTA_set_pin_level(WIFI_RESET, HIGH);
    a1d4:	61 e0       	ldi	r22, 0x01	; 1
    a1d6:	86 e0       	ldi	r24, 0x06	; 6
    a1d8:	0e 94 8b 50 	call	0xa116	; 0xa116 <PORTA_set_pin_level>
	}
}
    a1dc:	00 00       	nop
    a1de:	0f 90       	pop	r0
    a1e0:	df 91       	pop	r29
    a1e2:	cf 91       	pop	r28
    a1e4:	08 95       	ret

0000a1e6 <_Z11wifiPresentv>:

bool wifiPresent(void)
{
    a1e6:	cf 93       	push	r28
    a1e8:	df 93       	push	r29
    a1ea:	cd b7       	in	r28, 0x3d	; 61
    a1ec:	de b7       	in	r29, 0x3e	; 62
	return(VPORTD.IN & WIFI_MODULE_DETECT_gc);
    a1ee:	8c e0       	ldi	r24, 0x0C	; 12
    a1f0:	90 e0       	ldi	r25, 0x00	; 0
    a1f2:	fc 01       	movw	r30, r24
    a1f4:	82 81       	ldd	r24, Z+2	; 0x02
    a1f6:	88 1f       	adc	r24, r24
    a1f8:	88 27       	eor	r24, r24
    a1fa:	88 1f       	adc	r24, r24
}
    a1fc:	df 91       	pop	r29
    a1fe:	cf 91       	pop	r28
    a200:	08 95       	ret

0000a202 <PORTB_set_pin_pull_mode>:
void I2C_0_Shutdown(void)
{
	/* Set bus state idle */
	TWI0.MSTATUS = TWI_BUSSTATE_IDLE_gc;
	TWI0.MCTRLA = 0;
}
    a202:	cf 93       	push	r28
    a204:	df 93       	push	r29
    a206:	00 d0       	rcall	.+0      	; 0xa208 <PORTB_set_pin_pull_mode+0x6>
    a208:	00 d0       	rcall	.+0      	; 0xa20a <PORTB_set_pin_pull_mode+0x8>
    a20a:	cd b7       	in	r28, 0x3d	; 61
    a20c:	de b7       	in	r29, 0x3e	; 62
    a20e:	8b 83       	std	Y+3, r24	; 0x03
    a210:	6c 83       	std	Y+4, r22	; 0x04
    a212:	8b 81       	ldd	r24, Y+3	; 0x03
    a214:	88 2f       	mov	r24, r24
    a216:	90 e0       	ldi	r25, 0x00	; 0
    a218:	80 5d       	subi	r24, 0xD0	; 208
    a21a:	9b 4f       	sbci	r25, 0xFB	; 251
    a21c:	89 83       	std	Y+1, r24	; 0x01
    a21e:	9a 83       	std	Y+2, r25	; 0x02
    a220:	8c 81       	ldd	r24, Y+4	; 0x04
    a222:	81 30       	cpi	r24, 0x01	; 1
    a224:	59 f4       	brne	.+22     	; 0xa23c <PORTB_set_pin_pull_mode+0x3a>
    a226:	89 81       	ldd	r24, Y+1	; 0x01
    a228:	9a 81       	ldd	r25, Y+2	; 0x02
    a22a:	fc 01       	movw	r30, r24
    a22c:	80 81       	ld	r24, Z
    a22e:	28 2f       	mov	r18, r24
    a230:	28 60       	ori	r18, 0x08	; 8
    a232:	89 81       	ldd	r24, Y+1	; 0x01
    a234:	9a 81       	ldd	r25, Y+2	; 0x02
    a236:	fc 01       	movw	r30, r24
    a238:	20 83       	st	Z, r18
    a23a:	0d c0       	rjmp	.+26     	; 0xa256 <PORTB_set_pin_pull_mode+0x54>
    a23c:	8c 81       	ldd	r24, Y+4	; 0x04
    a23e:	88 23       	and	r24, r24
    a240:	51 f4       	brne	.+20     	; 0xa256 <PORTB_set_pin_pull_mode+0x54>
    a242:	89 81       	ldd	r24, Y+1	; 0x01
    a244:	9a 81       	ldd	r25, Y+2	; 0x02
    a246:	fc 01       	movw	r30, r24
    a248:	80 81       	ld	r24, Z
    a24a:	28 2f       	mov	r18, r24
    a24c:	27 7f       	andi	r18, 0xF7	; 247
    a24e:	89 81       	ldd	r24, Y+1	; 0x01
    a250:	9a 81       	ldd	r25, Y+2	; 0x02
    a252:	fc 01       	movw	r30, r24
    a254:	20 83       	st	Z, r18
    a256:	00 00       	nop
    a258:	24 96       	adiw	r28, 0x04	; 4
    a25a:	cd bf       	out	0x3d, r28	; 61
    a25c:	de bf       	out	0x3e, r29	; 62
    a25e:	df 91       	pop	r29
    a260:	cf 91       	pop	r28
    a262:	08 95       	ret

0000a264 <I2C_0_Init>:

void I2C_0_Init(void)
{
    a264:	cf 93       	push	r28
    a266:	df 93       	push	r29
    a268:	cd b7       	in	r28, 0x3d	; 61
    a26a:	de b7       	in	r29, 0x3e	; 62
	PORTMUX.TWIROUTEA &= 0x0A;
    a26c:	80 ee       	ldi	r24, 0xE0	; 224
    a26e:	95 e0       	ldi	r25, 0x05	; 5
    a270:	20 ee       	ldi	r18, 0xE0	; 224
    a272:	35 e0       	ldi	r19, 0x05	; 5
    a274:	f9 01       	movw	r30, r18
    a276:	25 81       	ldd	r18, Z+5	; 0x05
    a278:	2a 70       	andi	r18, 0x0A	; 10
    a27a:	fc 01       	movw	r30, r24
    a27c:	25 83       	std	Z+5, r18	; 0x05
	PORTMUX.TWIROUTEA |= 0x02;
    a27e:	80 ee       	ldi	r24, 0xE0	; 224
    a280:	95 e0       	ldi	r25, 0x05	; 5
    a282:	20 ee       	ldi	r18, 0xE0	; 224
    a284:	35 e0       	ldi	r19, 0x05	; 5
    a286:	f9 01       	movw	r30, r18
    a288:	25 81       	ldd	r18, Z+5	; 0x05
    a28a:	22 60       	ori	r18, 0x02	; 2
    a28c:	fc 01       	movw	r30, r24
    a28e:	25 83       	std	Z+5, r18	; 0x05
	
	/* Host Baud Rate Control */
//	TWI0.MBAUD = TWI0_BAUD((I2C_SCL_FREQ), 0.3);
	TWI0.MBAUD = (uint8_t)TWI0_BAUD(I2C_SCL_FREQ, 0);
    a290:	80 e0       	ldi	r24, 0x00	; 0
    a292:	99 e0       	ldi	r25, 0x09	; 9
    a294:	23 e7       	ldi	r18, 0x73	; 115
    a296:	fc 01       	movw	r30, r24
    a298:	26 83       	std	Z+6, r18	; 0x06
	
	/* Enable TWI */
	TWI0.MCTRLA = TWI_ENABLE_bm;
    a29a:	80 e0       	ldi	r24, 0x00	; 0
    a29c:	99 e0       	ldi	r25, 0x09	; 9
    a29e:	21 e0       	ldi	r18, 0x01	; 1
    a2a0:	fc 01       	movw	r30, r24
    a2a2:	23 83       	std	Z+3, r18	; 0x03
	
	/* Initialize the address register */
	TWI0.MADDR = 0x00;
    a2a4:	80 e0       	ldi	r24, 0x00	; 0
    a2a6:	99 e0       	ldi	r25, 0x09	; 9
    a2a8:	fc 01       	movw	r30, r24
    a2aa:	17 82       	std	Z+7, r1	; 0x07
	
	/* Initialize the data register */
	TWI0.MDATA = 0x00;
    a2ac:	80 e0       	ldi	r24, 0x00	; 0
    a2ae:	99 e0       	ldi	r25, 0x09	; 9
    a2b0:	fc 01       	movw	r30, r24
    a2b2:	10 86       	std	Z+8, r1	; 0x08
	
	/* Set bus state idle */
	TWI0.MSTATUS = TWI_BUSSTATE_IDLE_gc;
    a2b4:	80 e0       	ldi	r24, 0x00	; 0
    a2b6:	99 e0       	ldi	r25, 0x09	; 9
    a2b8:	21 e0       	ldi	r18, 0x01	; 1
    a2ba:	fc 01       	movw	r30, r24
    a2bc:	25 83       	std	Z+5, r18	; 0x05
	/* Select I2C pins PC2/PC3 */
}
    a2be:	00 00       	nop
    a2c0:	df 91       	pop	r29
    a2c2:	cf 91       	pop	r28
    a2c4:	08 95       	ret

0000a2c6 <_ZL11i2c_0_WaitWv>:

static uint8_t i2c_0_WaitW(void)
{
    a2c6:	cf 93       	push	r28
    a2c8:	df 93       	push	r29
    a2ca:	1f 92       	push	r1
    a2cc:	cd b7       	in	r28, 0x3d	; 61
    a2ce:	de b7       	in	r29, 0x3e	; 62
	uint8_t state = I2C_INIT;
    a2d0:	19 82       	std	Y+1, r1	; 0x01
	
	g_i2c0_timeout_ticks = 50;
    a2d2:	82 e3       	ldi	r24, 0x32	; 50
    a2d4:	90 e0       	ldi	r25, 0x00	; 0
    a2d6:	80 93 45 40 	sts	0x4045, r24	; 0x804045 <g_i2c0_timeout_ticks>
    a2da:	90 93 46 40 	sts	0x4046, r25	; 0x804046 <g_i2c0_timeout_ticks+0x1>
	
	do
	{
		if(TWI0.MSTATUS & (TWI_WIF_bm | TWI_RIF_bm))
    a2de:	80 e0       	ldi	r24, 0x00	; 0
    a2e0:	99 e0       	ldi	r25, 0x09	; 9
    a2e2:	fc 01       	movw	r30, r24
    a2e4:	85 81       	ldd	r24, Z+5	; 0x05
    a2e6:	88 2f       	mov	r24, r24
    a2e8:	90 e0       	ldi	r25, 0x00	; 0
    a2ea:	80 7c       	andi	r24, 0xC0	; 192
    a2ec:	99 27       	eor	r25, r25
    a2ee:	21 e0       	ldi	r18, 0x01	; 1
    a2f0:	89 2b       	or	r24, r25
    a2f2:	09 f4       	brne	.+2      	; 0xa2f6 <_ZL11i2c_0_WaitWv+0x30>
    a2f4:	20 e0       	ldi	r18, 0x00	; 0
    a2f6:	22 23       	and	r18, r18
    a2f8:	a1 f0       	breq	.+40     	; 0xa322 <_ZL11i2c_0_WaitWv+0x5c>
		{
			if(!(TWI0.MSTATUS & TWI_RXACK_bm))
    a2fa:	80 e0       	ldi	r24, 0x00	; 0
    a2fc:	99 e0       	ldi	r25, 0x09	; 9
    a2fe:	fc 01       	movw	r30, r24
    a300:	85 81       	ldd	r24, Z+5	; 0x05
    a302:	88 2f       	mov	r24, r24
    a304:	90 e0       	ldi	r25, 0x00	; 0
    a306:	80 71       	andi	r24, 0x10	; 16
    a308:	99 27       	eor	r25, r25
    a30a:	21 e0       	ldi	r18, 0x01	; 1
    a30c:	89 2b       	or	r24, r25
    a30e:	09 f0       	breq	.+2      	; 0xa312 <_ZL11i2c_0_WaitWv+0x4c>
    a310:	20 e0       	ldi	r18, 0x00	; 0
    a312:	22 23       	and	r18, r18
    a314:	19 f0       	breq	.+6      	; 0xa31c <_ZL11i2c_0_WaitWv+0x56>
			{
				/* client responded with ack - TWI goes to M1 state */
				state = I2C_ACKED;
    a316:	81 e0       	ldi	r24, 0x01	; 1
    a318:	89 83       	std	Y+1, r24	; 0x01
    a31a:	13 c0       	rjmp	.+38     	; 0xa342 <_ZL11i2c_0_WaitWv+0x7c>
			}
			else
			{
				/* address sent but no ack received - TWI goes to M3 state */
				state = I2C_NACKED;
    a31c:	82 e0       	ldi	r24, 0x02	; 2
    a31e:	89 83       	std	Y+1, r24	; 0x01
    a320:	10 c0       	rjmp	.+32     	; 0xa342 <_ZL11i2c_0_WaitWv+0x7c>
			}
		}
		else if(TWI0.MSTATUS & (TWI_BUSERR_bm | TWI_ARBLOST_bm))
    a322:	80 e0       	ldi	r24, 0x00	; 0
    a324:	99 e0       	ldi	r25, 0x09	; 9
    a326:	fc 01       	movw	r30, r24
    a328:	85 81       	ldd	r24, Z+5	; 0x05
    a32a:	88 2f       	mov	r24, r24
    a32c:	90 e0       	ldi	r25, 0x00	; 0
    a32e:	8c 70       	andi	r24, 0x0C	; 12
    a330:	99 27       	eor	r25, r25
    a332:	21 e0       	ldi	r18, 0x01	; 1
    a334:	89 2b       	or	r24, r25
    a336:	09 f4       	brne	.+2      	; 0xa33a <_ZL11i2c_0_WaitWv+0x74>
    a338:	20 e0       	ldi	r18, 0x00	; 0
    a33a:	22 23       	and	r18, r18
    a33c:	11 f0       	breq	.+4      	; 0xa342 <_ZL11i2c_0_WaitWv+0x7c>
		{
			/* get here only in case of bus error or arbitration lost - M4 state */
			state = I2C_ERROR;
    a33e:	84 e0       	ldi	r24, 0x04	; 4
    a340:	89 83       	std	Y+1, r24	; 0x01
		}
	} while(!state && g_i2c0_timeout_ticks);
    a342:	89 81       	ldd	r24, Y+1	; 0x01
    a344:	88 23       	and	r24, r24
    a346:	41 f4       	brne	.+16     	; 0xa358 <_ZL11i2c_0_WaitWv+0x92>
    a348:	80 91 45 40 	lds	r24, 0x4045	; 0x804045 <g_i2c0_timeout_ticks>
    a34c:	90 91 46 40 	lds	r25, 0x4046	; 0x804046 <g_i2c0_timeout_ticks+0x1>
    a350:	89 2b       	or	r24, r25
    a352:	11 f0       	breq	.+4      	; 0xa358 <_ZL11i2c_0_WaitWv+0x92>
    a354:	81 e0       	ldi	r24, 0x01	; 1
    a356:	01 c0       	rjmp	.+2      	; 0xa35a <_ZL11i2c_0_WaitWv+0x94>
    a358:	80 e0       	ldi	r24, 0x00	; 0
{
	uint8_t state = I2C_INIT;
	
	g_i2c0_timeout_ticks = 50;
	
	do
    a35a:	88 23       	and	r24, r24
    a35c:	09 f0       	breq	.+2      	; 0xa360 <_ZL11i2c_0_WaitWv+0x9a>
    a35e:	bf cf       	rjmp	.-130    	; 0xa2de <_ZL11i2c_0_WaitWv+0x18>
			/* get here only in case of bus error or arbitration lost - M4 state */
			state = I2C_ERROR;
		}
	} while(!state && g_i2c0_timeout_ticks);
	
	if(!g_i2c0_timeout_ticks) 
    a360:	80 91 45 40 	lds	r24, 0x4045	; 0x804045 <g_i2c0_timeout_ticks>
    a364:	90 91 46 40 	lds	r25, 0x4046	; 0x804046 <g_i2c0_timeout_ticks+0x1>
    a368:	21 e0       	ldi	r18, 0x01	; 1
    a36a:	89 2b       	or	r24, r25
    a36c:	09 f0       	breq	.+2      	; 0xa370 <_ZL11i2c_0_WaitWv+0xaa>
    a36e:	20 e0       	ldi	r18, 0x00	; 0
    a370:	22 23       	and	r18, r18
    a372:	11 f0       	breq	.+4      	; 0xa378 <_ZL11i2c_0_WaitWv+0xb2>
	{
		state = I2C_ERROR;
    a374:	84 e0       	ldi	r24, 0x04	; 4
    a376:	89 83       	std	Y+1, r24	; 0x01
	}
	
	return state;
    a378:	89 81       	ldd	r24, Y+1	; 0x01
}
    a37a:	0f 90       	pop	r0
    a37c:	df 91       	pop	r29
    a37e:	cf 91       	pop	r28
    a380:	08 95       	ret

0000a382 <_ZL11i2c_0_WaitRv>:

static uint8_t i2c_0_WaitR(void)
{
    a382:	cf 93       	push	r28
    a384:	df 93       	push	r29
    a386:	1f 92       	push	r1
    a388:	cd b7       	in	r28, 0x3d	; 61
    a38a:	de b7       	in	r29, 0x3e	; 62
	uint8_t state = I2C_INIT;
    a38c:	19 82       	std	Y+1, r1	; 0x01
	
	g_i2c0_timeout_ticks = 50;
    a38e:	82 e3       	ldi	r24, 0x32	; 50
    a390:	90 e0       	ldi	r25, 0x00	; 0
    a392:	80 93 45 40 	sts	0x4045, r24	; 0x804045 <g_i2c0_timeout_ticks>
    a396:	90 93 46 40 	sts	0x4046, r25	; 0x804046 <g_i2c0_timeout_ticks+0x1>
	
	do
	{
		if(TWI0.MSTATUS & (TWI_WIF_bm | TWI_RIF_bm))
    a39a:	80 e0       	ldi	r24, 0x00	; 0
    a39c:	99 e0       	ldi	r25, 0x09	; 9
    a39e:	fc 01       	movw	r30, r24
    a3a0:	85 81       	ldd	r24, Z+5	; 0x05
    a3a2:	88 2f       	mov	r24, r24
    a3a4:	90 e0       	ldi	r25, 0x00	; 0
    a3a6:	80 7c       	andi	r24, 0xC0	; 192
    a3a8:	99 27       	eor	r25, r25
    a3aa:	21 e0       	ldi	r18, 0x01	; 1
    a3ac:	89 2b       	or	r24, r25
    a3ae:	09 f4       	brne	.+2      	; 0xa3b2 <_ZL11i2c_0_WaitRv+0x30>
    a3b0:	20 e0       	ldi	r18, 0x00	; 0
    a3b2:	22 23       	and	r18, r18
    a3b4:	19 f0       	breq	.+6      	; 0xa3bc <_ZL11i2c_0_WaitRv+0x3a>
		{
			state = I2C_READY;
    a3b6:	83 e0       	ldi	r24, 0x03	; 3
    a3b8:	89 83       	std	Y+1, r24	; 0x01
    a3ba:	10 c0       	rjmp	.+32     	; 0xa3dc <_ZL11i2c_0_WaitRv+0x5a>
		}
		else if(TWI0.MSTATUS & (TWI_BUSERR_bm | TWI_ARBLOST_bm))
    a3bc:	80 e0       	ldi	r24, 0x00	; 0
    a3be:	99 e0       	ldi	r25, 0x09	; 9
    a3c0:	fc 01       	movw	r30, r24
    a3c2:	85 81       	ldd	r24, Z+5	; 0x05
    a3c4:	88 2f       	mov	r24, r24
    a3c6:	90 e0       	ldi	r25, 0x00	; 0
    a3c8:	8c 70       	andi	r24, 0x0C	; 12
    a3ca:	99 27       	eor	r25, r25
    a3cc:	21 e0       	ldi	r18, 0x01	; 1
    a3ce:	89 2b       	or	r24, r25
    a3d0:	09 f4       	brne	.+2      	; 0xa3d4 <_ZL11i2c_0_WaitRv+0x52>
    a3d2:	20 e0       	ldi	r18, 0x00	; 0
    a3d4:	22 23       	and	r18, r18
    a3d6:	11 f0       	breq	.+4      	; 0xa3dc <_ZL11i2c_0_WaitRv+0x5a>
		{
			/* get here only in case of bus error or arbitration lost - M4 state */
			state = I2C_ERROR;
    a3d8:	84 e0       	ldi	r24, 0x04	; 4
    a3da:	89 83       	std	Y+1, r24	; 0x01
		}
	} while(!state && g_i2c0_timeout_ticks);
    a3dc:	89 81       	ldd	r24, Y+1	; 0x01
    a3de:	88 23       	and	r24, r24
    a3e0:	41 f4       	brne	.+16     	; 0xa3f2 <_ZL11i2c_0_WaitRv+0x70>
    a3e2:	80 91 45 40 	lds	r24, 0x4045	; 0x804045 <g_i2c0_timeout_ticks>
    a3e6:	90 91 46 40 	lds	r25, 0x4046	; 0x804046 <g_i2c0_timeout_ticks+0x1>
    a3ea:	89 2b       	or	r24, r25
    a3ec:	11 f0       	breq	.+4      	; 0xa3f2 <_ZL11i2c_0_WaitRv+0x70>
    a3ee:	81 e0       	ldi	r24, 0x01	; 1
    a3f0:	01 c0       	rjmp	.+2      	; 0xa3f4 <_ZL11i2c_0_WaitRv+0x72>
    a3f2:	80 e0       	ldi	r24, 0x00	; 0
{
	uint8_t state = I2C_INIT;
	
	g_i2c0_timeout_ticks = 50;
	
	do
    a3f4:	88 23       	and	r24, r24
    a3f6:	09 f0       	breq	.+2      	; 0xa3fa <_ZL11i2c_0_WaitRv+0x78>
    a3f8:	d0 cf       	rjmp	.-96     	; 0xa39a <_ZL11i2c_0_WaitRv+0x18>
			/* get here only in case of bus error or arbitration lost - M4 state */
			state = I2C_ERROR;
		}
	} while(!state && g_i2c0_timeout_ticks);
	
	return state;
    a3fa:	89 81       	ldd	r24, Y+1	; 0x01
}
    a3fc:	0f 90       	pop	r0
    a3fe:	df 91       	pop	r29
    a400:	cf 91       	pop	r28
    a402:	08 95       	ret

0000a404 <I2C_0_SendData>:

/* Returns how many bytes have been sent, -1 means NACK at address, 0 means client ACKed to client address */
uint8_t I2C_0_SendData(uint8_t slaveAddr, uint8_t regAddr, uint8_t *pData, uint8_t len)
{
    a404:	cf 93       	push	r28
    a406:	df 93       	push	r29
    a408:	cd b7       	in	r28, 0x3d	; 61
    a40a:	de b7       	in	r29, 0x3e	; 62
    a40c:	26 97       	sbiw	r28, 0x06	; 6
    a40e:	cd bf       	out	0x3d, r28	; 61
    a410:	de bf       	out	0x3e, r29	; 62
    a412:	8a 83       	std	Y+2, r24	; 0x02
    a414:	6b 83       	std	Y+3, r22	; 0x03
    a416:	4c 83       	std	Y+4, r20	; 0x04
    a418:	5d 83       	std	Y+5, r21	; 0x05
    a41a:	2e 83       	std	Y+6, r18	; 0x06
	uint8_t retVal = (uint8_t) - 1;
    a41c:	8f ef       	ldi	r24, 0xFF	; 255
    a41e:	89 83       	std	Y+1, r24	; 0x01
	
	/* Send slave address */
	TWI0.MADDR = slaveAddr;
    a420:	80 e0       	ldi	r24, 0x00	; 0
    a422:	99 e0       	ldi	r25, 0x09	; 9
    a424:	2a 81       	ldd	r18, Y+2	; 0x02
    a426:	fc 01       	movw	r30, r24
    a428:	27 83       	std	Z+7, r18	; 0x07
	if(i2c_0_WaitW() != I2C_ACKED)
    a42a:	0e 94 63 51 	call	0xa2c6	; 0xa2c6 <_ZL11i2c_0_WaitWv>
    a42e:	98 2f       	mov	r25, r24
    a430:	81 e0       	ldi	r24, 0x01	; 1
    a432:	91 30       	cpi	r25, 0x01	; 1
    a434:	09 f4       	brne	.+2      	; 0xa438 <I2C_0_SendData+0x34>
    a436:	80 e0       	ldi	r24, 0x00	; 0
    a438:	88 23       	and	r24, r24
    a43a:	11 f0       	breq	.+4      	; 0xa440 <I2C_0_SendData+0x3c>
	{
		return retVal;
    a43c:	89 81       	ldd	r24, Y+1	; 0x01
    a43e:	44 c0       	rjmp	.+136    	; 0xa4c8 <I2C_0_SendData+0xc4>
	}
	
	/* Send the register address */
	TWI0.MDATA = regAddr;
    a440:	80 e0       	ldi	r24, 0x00	; 0
    a442:	99 e0       	ldi	r25, 0x09	; 9
    a444:	2b 81       	ldd	r18, Y+3	; 0x03
    a446:	fc 01       	movw	r30, r24
    a448:	20 87       	std	Z+8, r18	; 0x08
	if(i2c_0_WaitW() != I2C_ACKED)
    a44a:	0e 94 63 51 	call	0xa2c6	; 0xa2c6 <_ZL11i2c_0_WaitWv>
    a44e:	98 2f       	mov	r25, r24
    a450:	81 e0       	ldi	r24, 0x01	; 1
    a452:	91 30       	cpi	r25, 0x01	; 1
    a454:	09 f4       	brne	.+2      	; 0xa458 <I2C_0_SendData+0x54>
    a456:	80 e0       	ldi	r24, 0x00	; 0
    a458:	88 23       	and	r24, r24
    a45a:	11 f0       	breq	.+4      	; 0xa460 <I2C_0_SendData+0x5c>
	{
		return retVal;
    a45c:	89 81       	ldd	r24, Y+1	; 0x01
    a45e:	34 c0       	rjmp	.+104    	; 0xa4c8 <I2C_0_SendData+0xc4>
	}

	retVal = 0;
    a460:	19 82       	std	Y+1, r1	; 0x01
	if((len != 0) && (pData != null))
    a462:	8e 81       	ldd	r24, Y+6	; 0x06
    a464:	88 23       	and	r24, r24
    a466:	79 f1       	breq	.+94     	; 0xa4c6 <I2C_0_SendData+0xc2>
    a468:	8c 81       	ldd	r24, Y+4	; 0x04
    a46a:	9d 81       	ldd	r25, Y+5	; 0x05
    a46c:	89 2b       	or	r24, r25
    a46e:	59 f1       	breq	.+86     	; 0xa4c6 <I2C_0_SendData+0xc2>
	{
		while(len--)
    a470:	8e 81       	ldd	r24, Y+6	; 0x06
    a472:	9f ef       	ldi	r25, 0xFF	; 255
    a474:	98 0f       	add	r25, r24
    a476:	9e 83       	std	Y+6, r25	; 0x06
    a478:	91 e0       	ldi	r25, 0x01	; 1
    a47a:	88 23       	and	r24, r24
    a47c:	09 f4       	brne	.+2      	; 0xa480 <I2C_0_SendData+0x7c>
    a47e:	90 e0       	ldi	r25, 0x00	; 0
    a480:	99 23       	and	r25, r25
    a482:	09 f1       	breq	.+66     	; 0xa4c6 <I2C_0_SendData+0xc2>
		{
			TWI0.MDATA = *pData;
    a484:	80 e0       	ldi	r24, 0x00	; 0
    a486:	99 e0       	ldi	r25, 0x09	; 9
    a488:	2c 81       	ldd	r18, Y+4	; 0x04
    a48a:	3d 81       	ldd	r19, Y+5	; 0x05
    a48c:	f9 01       	movw	r30, r18
    a48e:	20 81       	ld	r18, Z
    a490:	fc 01       	movw	r30, r24
    a492:	20 87       	std	Z+8, r18	; 0x08
			if(i2c_0_WaitW() == I2C_ACKED)
    a494:	0e 94 63 51 	call	0xa2c6	; 0xa2c6 <_ZL11i2c_0_WaitWv>
    a498:	98 2f       	mov	r25, r24
    a49a:	81 e0       	ldi	r24, 0x01	; 1
    a49c:	91 30       	cpi	r25, 0x01	; 1
    a49e:	09 f0       	breq	.+2      	; 0xa4a2 <I2C_0_SendData+0x9e>
    a4a0:	80 e0       	ldi	r24, 0x00	; 0
    a4a2:	88 23       	and	r24, r24
    a4a4:	79 f0       	breq	.+30     	; 0xa4c4 <I2C_0_SendData+0xc0>
			{
				retVal++;
    a4a6:	89 81       	ldd	r24, Y+1	; 0x01
    a4a8:	8f 5f       	subi	r24, 0xFF	; 255
    a4aa:	89 83       	std	Y+1, r24	; 0x01
				pData++;
    a4ac:	8c 81       	ldd	r24, Y+4	; 0x04
    a4ae:	9d 81       	ldd	r25, Y+5	; 0x05
    a4b0:	01 96       	adiw	r24, 0x01	; 1
    a4b2:	8c 83       	std	Y+4, r24	; 0x04
    a4b4:	9d 83       	std	Y+5, r25	; 0x05
				if(!len) I2C_0_EndSession();
    a4b6:	8e 81       	ldd	r24, Y+6	; 0x06
    a4b8:	88 23       	and	r24, r24
    a4ba:	11 f4       	brne	.+4      	; 0xa4c0 <I2C_0_SendData+0xbc>
    a4bc:	0e 94 e8 52 	call	0xa5d0	; 0xa5d0 <I2C_0_EndSession>
				continue;
    a4c0:	00 00       	nop
	}

	retVal = 0;
	if((len != 0) && (pData != null))
	{
		while(len--)
    a4c2:	d6 cf       	rjmp	.-84     	; 0xa470 <I2C_0_SendData+0x6c>
				if(!len) I2C_0_EndSession();
				continue;
			}
			else // did not get ACK after client address
			{
				break;
    a4c4:	00 00       	nop
			}
		}
	}
	
	return retVal;
    a4c6:	89 81       	ldd	r24, Y+1	; 0x01
}
    a4c8:	26 96       	adiw	r28, 0x06	; 6
    a4ca:	cd bf       	out	0x3d, r28	; 61
    a4cc:	de bf       	out	0x3e, r29	; 62
    a4ce:	df 91       	pop	r29
    a4d0:	cf 91       	pop	r28
    a4d2:	08 95       	ret

0000a4d4 <I2C_0_GetData>:

/* Returns how many bytes have been received, -1 means NACK at address */
uint8_t I2C_0_GetData(uint8_t slaveAddr, uint8_t regAddr, uint8_t *pData, uint8_t len)
{
    a4d4:	cf 93       	push	r28
    a4d6:	df 93       	push	r29
    a4d8:	cd b7       	in	r28, 0x3d	; 61
    a4da:	de b7       	in	r29, 0x3e	; 62
    a4dc:	26 97       	sbiw	r28, 0x06	; 6
    a4de:	cd bf       	out	0x3d, r28	; 61
    a4e0:	de bf       	out	0x3e, r29	; 62
    a4e2:	8a 83       	std	Y+2, r24	; 0x02
    a4e4:	6b 83       	std	Y+3, r22	; 0x03
    a4e6:	4c 83       	std	Y+4, r20	; 0x04
    a4e8:	5d 83       	std	Y+5, r21	; 0x05
    a4ea:	2e 83       	std	Y+6, r18	; 0x06
	uint8_t retVal = (uint8_t) -1;
    a4ec:	8f ef       	ldi	r24, 0xFF	; 255
    a4ee:	89 83       	std	Y+1, r24	; 0x01
	
	/* Send the client address for write */
	TWI0.MADDR = slaveAddr;
    a4f0:	80 e0       	ldi	r24, 0x00	; 0
    a4f2:	99 e0       	ldi	r25, 0x09	; 9
    a4f4:	2a 81       	ldd	r18, Y+2	; 0x02
    a4f6:	fc 01       	movw	r30, r24
    a4f8:	27 83       	std	Z+7, r18	; 0x07
	if(i2c_0_WaitW() != I2C_ACKED)
    a4fa:	0e 94 63 51 	call	0xa2c6	; 0xa2c6 <_ZL11i2c_0_WaitWv>
    a4fe:	98 2f       	mov	r25, r24
    a500:	81 e0       	ldi	r24, 0x01	; 1
    a502:	91 30       	cpi	r25, 0x01	; 1
    a504:	09 f4       	brne	.+2      	; 0xa508 <I2C_0_GetData+0x34>
    a506:	80 e0       	ldi	r24, 0x00	; 0
    a508:	88 23       	and	r24, r24
    a50a:	11 f0       	breq	.+4      	; 0xa510 <I2C_0_GetData+0x3c>
	{
		return retVal;
    a50c:	89 81       	ldd	r24, Y+1	; 0x01
    a50e:	5a c0       	rjmp	.+180    	; 0xa5c4 <I2C_0_GetData+0xf0>
	}
	
	/* Send the register address */
	TWI0.MDATA = regAddr;
    a510:	80 e0       	ldi	r24, 0x00	; 0
    a512:	99 e0       	ldi	r25, 0x09	; 9
    a514:	2b 81       	ldd	r18, Y+3	; 0x03
    a516:	fc 01       	movw	r30, r24
    a518:	20 87       	std	Z+8, r18	; 0x08
	if(i2c_0_WaitW() != I2C_ACKED)
    a51a:	0e 94 63 51 	call	0xa2c6	; 0xa2c6 <_ZL11i2c_0_WaitWv>
    a51e:	98 2f       	mov	r25, r24
    a520:	81 e0       	ldi	r24, 0x01	; 1
    a522:	91 30       	cpi	r25, 0x01	; 1
    a524:	09 f4       	brne	.+2      	; 0xa528 <I2C_0_GetData+0x54>
    a526:	80 e0       	ldi	r24, 0x00	; 0
    a528:	88 23       	and	r24, r24
    a52a:	11 f0       	breq	.+4      	; 0xa530 <I2C_0_GetData+0x5c>
	{
		return retVal;
    a52c:	89 81       	ldd	r24, Y+1	; 0x01
    a52e:	4a c0       	rjmp	.+148    	; 0xa5c4 <I2C_0_GetData+0xf0>
	}
	
	/* Send the client address for read */
	TWI0.MADDR = slaveAddr | 0x01;
    a530:	80 e0       	ldi	r24, 0x00	; 0
    a532:	99 e0       	ldi	r25, 0x09	; 9
    a534:	2a 81       	ldd	r18, Y+2	; 0x02
    a536:	21 60       	ori	r18, 0x01	; 1
    a538:	fc 01       	movw	r30, r24
    a53a:	27 83       	std	Z+7, r18	; 0x07
	if(i2c_0_WaitW() != I2C_ACKED)
    a53c:	0e 94 63 51 	call	0xa2c6	; 0xa2c6 <_ZL11i2c_0_WaitWv>
    a540:	98 2f       	mov	r25, r24
    a542:	81 e0       	ldi	r24, 0x01	; 1
    a544:	91 30       	cpi	r25, 0x01	; 1
    a546:	09 f4       	brne	.+2      	; 0xa54a <I2C_0_GetData+0x76>
    a548:	80 e0       	ldi	r24, 0x00	; 0
    a54a:	88 23       	and	r24, r24
    a54c:	11 f0       	breq	.+4      	; 0xa552 <I2C_0_GetData+0x7e>
	{
		return retVal;
    a54e:	89 81       	ldd	r24, Y+1	; 0x01
    a550:	39 c0       	rjmp	.+114    	; 0xa5c4 <I2C_0_GetData+0xf0>
	}
	
	retVal = 0;
    a552:	19 82       	std	Y+1, r1	; 0x01
	if((len != 0) && (pData !=null ))
    a554:	8e 81       	ldd	r24, Y+6	; 0x06
    a556:	88 23       	and	r24, r24
    a558:	a1 f1       	breq	.+104    	; 0xa5c2 <I2C_0_GetData+0xee>
    a55a:	8c 81       	ldd	r24, Y+4	; 0x04
    a55c:	9d 81       	ldd	r25, Y+5	; 0x05
    a55e:	89 2b       	or	r24, r25
    a560:	81 f1       	breq	.+96     	; 0xa5c2 <I2C_0_GetData+0xee>
	{
		while(len--)
    a562:	8e 81       	ldd	r24, Y+6	; 0x06
    a564:	9f ef       	ldi	r25, 0xFF	; 255
    a566:	98 0f       	add	r25, r24
    a568:	9e 83       	std	Y+6, r25	; 0x06
    a56a:	91 e0       	ldi	r25, 0x01	; 1
    a56c:	88 23       	and	r24, r24
    a56e:	09 f4       	brne	.+2      	; 0xa572 <I2C_0_GetData+0x9e>
    a570:	90 e0       	ldi	r25, 0x00	; 0
    a572:	99 23       	and	r25, r25
    a574:	31 f1       	breq	.+76     	; 0xa5c2 <I2C_0_GetData+0xee>
		{
			if(i2c_0_WaitR() == I2C_READY)
    a576:	0e 94 c1 51 	call	0xa382	; 0xa382 <_ZL11i2c_0_WaitRv>
    a57a:	98 2f       	mov	r25, r24
    a57c:	81 e0       	ldi	r24, 0x01	; 1
    a57e:	93 30       	cpi	r25, 0x03	; 3
    a580:	09 f0       	breq	.+2      	; 0xa584 <I2C_0_GetData+0xb0>
    a582:	80 e0       	ldi	r24, 0x00	; 0
    a584:	88 23       	and	r24, r24
    a586:	e1 f0       	breq	.+56     	; 0xa5c0 <I2C_0_GetData+0xec>
			{
				*pData = TWI0.MDATA;
    a588:	80 e0       	ldi	r24, 0x00	; 0
    a58a:	99 e0       	ldi	r25, 0x09	; 9
    a58c:	fc 01       	movw	r30, r24
    a58e:	20 85       	ldd	r18, Z+8	; 0x08
    a590:	8c 81       	ldd	r24, Y+4	; 0x04
    a592:	9d 81       	ldd	r25, Y+5	; 0x05
    a594:	fc 01       	movw	r30, r24
    a596:	20 83       	st	Z, r18
				TWI0.MCTRLB = (len == 0)? TWI_ACKACT_bm | TWI_MCMD_STOP_gc : TWI_MCMD_RECVTRANS_gc;
    a598:	80 e0       	ldi	r24, 0x00	; 0
    a59a:	99 e0       	ldi	r25, 0x09	; 9
    a59c:	2e 81       	ldd	r18, Y+6	; 0x06
    a59e:	22 23       	and	r18, r18
    a5a0:	11 f4       	brne	.+4      	; 0xa5a6 <I2C_0_GetData+0xd2>
    a5a2:	27 e0       	ldi	r18, 0x07	; 7
    a5a4:	01 c0       	rjmp	.+2      	; 0xa5a8 <I2C_0_GetData+0xd4>
    a5a6:	22 e0       	ldi	r18, 0x02	; 2
    a5a8:	fc 01       	movw	r30, r24
    a5aa:	24 83       	std	Z+4, r18	; 0x04
				retVal++;
    a5ac:	89 81       	ldd	r24, Y+1	; 0x01
    a5ae:	8f 5f       	subi	r24, 0xFF	; 255
    a5b0:	89 83       	std	Y+1, r24	; 0x01
				pData++;
    a5b2:	8c 81       	ldd	r24, Y+4	; 0x04
    a5b4:	9d 81       	ldd	r25, Y+5	; 0x05
    a5b6:	01 96       	adiw	r24, 0x01	; 1
    a5b8:	8c 83       	std	Y+4, r24	; 0x04
    a5ba:	9d 83       	std	Y+5, r25	; 0x05
				continue;
    a5bc:	00 00       	nop
	}
	
	retVal = 0;
	if((len != 0) && (pData !=null ))
	{
		while(len--)
    a5be:	d1 cf       	rjmp	.-94     	; 0xa562 <I2C_0_GetData+0x8e>
				retVal++;
				pData++;
				continue;
			}
			else
			break;
    a5c0:	00 00       	nop
		}
	}
	
	return retVal;
    a5c2:	89 81       	ldd	r24, Y+1	; 0x01
}
    a5c4:	26 96       	adiw	r28, 0x06	; 6
    a5c6:	cd bf       	out	0x3d, r28	; 61
    a5c8:	de bf       	out	0x3e, r29	; 62
    a5ca:	df 91       	pop	r29
    a5cc:	cf 91       	pop	r28
    a5ce:	08 95       	ret

0000a5d0 <I2C_0_EndSession>:

void I2C_0_EndSession(void)
{
    a5d0:	cf 93       	push	r28
    a5d2:	df 93       	push	r29
    a5d4:	cd b7       	in	r28, 0x3d	; 61
    a5d6:	de b7       	in	r29, 0x3e	; 62
	TWI0.MCTRLB = TWI_MCMD_STOP_gc;
    a5d8:	80 e0       	ldi	r24, 0x00	; 0
    a5da:	99 e0       	ldi	r25, 0x09	; 9
    a5dc:	23 e0       	ldi	r18, 0x03	; 3
    a5de:	fc 01       	movw	r30, r24
    a5e0:	24 83       	std	Z+4, r18	; 0x04
}
    a5e2:	00 00       	nop
    a5e4:	df 91       	pop	r29
    a5e6:	cf 91       	pop	r28
    a5e8:	08 95       	ret

0000a5ea <I2C_1_Shutdown>:
/************************************************************************/
/* I2C_1                                                               */
/************************************************************************/

void I2C_1_Shutdown(void)
{
    a5ea:	cf 93       	push	r28
    a5ec:	df 93       	push	r29
    a5ee:	cd b7       	in	r28, 0x3d	; 61
    a5f0:	de b7       	in	r29, 0x3e	; 62
	/* Set bus state idle */
	TWI1.MSTATUS = TWI_BUSSTATE_IDLE_gc;
    a5f2:	80 e2       	ldi	r24, 0x20	; 32
    a5f4:	99 e0       	ldi	r25, 0x09	; 9
    a5f6:	21 e0       	ldi	r18, 0x01	; 1
    a5f8:	fc 01       	movw	r30, r24
    a5fa:	25 83       	std	Z+5, r18	; 0x05
	TWI1.MCTRLA = 0;
    a5fc:	80 e2       	ldi	r24, 0x20	; 32
    a5fe:	99 e0       	ldi	r25, 0x09	; 9
    a600:	fc 01       	movw	r30, r24
    a602:	13 82       	std	Z+3, r1	; 0x03
}
    a604:	00 00       	nop
    a606:	df 91       	pop	r29
    a608:	cf 91       	pop	r28
    a60a:	08 95       	ret

0000a60c <I2C_1_Init>:

void I2C_1_Init(void)
{
    a60c:	cf 93       	push	r28
    a60e:	df 93       	push	r29
    a610:	cd b7       	in	r28, 0x3d	; 61
    a612:	de b7       	in	r29, 0x3e	; 62
	/* Select I2C pins PB2/PB3 */
	PORTMUX.TWIROUTEA &= 0x03;
    a614:	80 ee       	ldi	r24, 0xE0	; 224
    a616:	95 e0       	ldi	r25, 0x05	; 5
    a618:	20 ee       	ldi	r18, 0xE0	; 224
    a61a:	35 e0       	ldi	r19, 0x05	; 5
    a61c:	f9 01       	movw	r30, r18
    a61e:	25 81       	ldd	r18, Z+5	; 0x05
    a620:	23 70       	andi	r18, 0x03	; 3
    a622:	fc 01       	movw	r30, r24
    a624:	25 83       	std	Z+5, r18	; 0x05
	PORTMUX.TWIROUTEA |= 0x08;
    a626:	80 ee       	ldi	r24, 0xE0	; 224
    a628:	95 e0       	ldi	r25, 0x05	; 5
    a62a:	20 ee       	ldi	r18, 0xE0	; 224
    a62c:	35 e0       	ldi	r19, 0x05	; 5
    a62e:	f9 01       	movw	r30, r18
    a630:	25 81       	ldd	r18, Z+5	; 0x05
    a632:	28 60       	ori	r18, 0x08	; 8
    a634:	fc 01       	movw	r30, r24
    a636:	25 83       	std	Z+5, r18	; 0x05
	
	/* Host Baud Rate Control */
//	TWI1.MBAUD = TWI1_BAUD((I2C_SCL_FREQ), 0.3);
	TWI1.MBAUD = (uint8_t)TWI0_BAUD(I2C_SCL_FREQ, 0);
    a638:	80 e2       	ldi	r24, 0x20	; 32
    a63a:	99 e0       	ldi	r25, 0x09	; 9
    a63c:	23 e7       	ldi	r18, 0x73	; 115
    a63e:	fc 01       	movw	r30, r24
    a640:	26 83       	std	Z+6, r18	; 0x06
		
	/* Enable TWI */
	TWI1.MCTRLA = TWI_ENABLE_bm;
    a642:	80 e2       	ldi	r24, 0x20	; 32
    a644:	99 e0       	ldi	r25, 0x09	; 9
    a646:	21 e0       	ldi	r18, 0x01	; 1
    a648:	fc 01       	movw	r30, r24
    a64a:	23 83       	std	Z+3, r18	; 0x03
	
	/* Initialize the address register */
	TWI1.MADDR = 0x00;
    a64c:	80 e2       	ldi	r24, 0x20	; 32
    a64e:	99 e0       	ldi	r25, 0x09	; 9
    a650:	fc 01       	movw	r30, r24
    a652:	17 82       	std	Z+7, r1	; 0x07
	
	/* Initialize the data register */
	TWI1.MDATA = 0x00;
    a654:	80 e2       	ldi	r24, 0x20	; 32
    a656:	99 e0       	ldi	r25, 0x09	; 9
    a658:	fc 01       	movw	r30, r24
    a65a:	10 86       	std	Z+8, r1	; 0x08
	
	/* Set bus state idle */
	TWI1.MSTATUS = TWI_BUSSTATE_IDLE_gc;
    a65c:	80 e2       	ldi	r24, 0x20	; 32
    a65e:	99 e0       	ldi	r25, 0x09	; 9
    a660:	21 e0       	ldi	r18, 0x01	; 1
    a662:	fc 01       	movw	r30, r24
    a664:	25 83       	std	Z+5, r18	; 0x05
	
	PORTB_set_pin_pull_mode(2, PORT_PULL_UP);
    a666:	61 e0       	ldi	r22, 0x01	; 1
    a668:	82 e0       	ldi	r24, 0x02	; 2
    a66a:	0e 94 01 51 	call	0xa202	; 0xa202 <PORTB_set_pin_pull_mode>
	PORTB_set_pin_pull_mode(3, PORT_PULL_UP);
    a66e:	61 e0       	ldi	r22, 0x01	; 1
    a670:	83 e0       	ldi	r24, 0x03	; 3
    a672:	0e 94 01 51 	call	0xa202	; 0xa202 <PORTB_set_pin_pull_mode>
}
    a676:	00 00       	nop
    a678:	df 91       	pop	r29
    a67a:	cf 91       	pop	r28
    a67c:	08 95       	ret

0000a67e <_ZL11i2c_1_WaitWv>:

static uint8_t i2c_1_WaitW(void)
{
    a67e:	cf 93       	push	r28
    a680:	df 93       	push	r29
    a682:	00 d0       	rcall	.+0      	; 0xa684 <_ZL11i2c_1_WaitWv+0x6>
    a684:	cd b7       	in	r28, 0x3d	; 61
    a686:	de b7       	in	r29, 0x3e	; 62
	uint8_t state = I2C_INIT;
    a688:	19 82       	std	Y+1, r1	; 0x01
	
	g_i2c1_timeout_ticks = 50;
    a68a:	82 e3       	ldi	r24, 0x32	; 50
    a68c:	90 e0       	ldi	r25, 0x00	; 0
    a68e:	80 93 47 40 	sts	0x4047, r24	; 0x804047 <g_i2c1_timeout_ticks>
    a692:	90 93 48 40 	sts	0x4048, r25	; 0x804048 <g_i2c1_timeout_ticks+0x1>
	
	do
	{
		uint8_t stat = TWI1.MSTATUS;
    a696:	80 e2       	ldi	r24, 0x20	; 32
    a698:	99 e0       	ldi	r25, 0x09	; 9
    a69a:	fc 01       	movw	r30, r24
    a69c:	85 81       	ldd	r24, Z+5	; 0x05
    a69e:	8a 83       	std	Y+2, r24	; 0x02
		if(stat & (TWI_WIF_bm | TWI_RIF_bm))
    a6a0:	8a 81       	ldd	r24, Y+2	; 0x02
    a6a2:	88 2f       	mov	r24, r24
    a6a4:	90 e0       	ldi	r25, 0x00	; 0
    a6a6:	80 7c       	andi	r24, 0xC0	; 192
    a6a8:	99 27       	eor	r25, r25
    a6aa:	89 2b       	or	r24, r25
    a6ac:	69 f0       	breq	.+26     	; 0xa6c8 <_ZL11i2c_1_WaitWv+0x4a>
		{
			if(!(stat & TWI_RXACK_bm))
    a6ae:	8a 81       	ldd	r24, Y+2	; 0x02
    a6b0:	88 2f       	mov	r24, r24
    a6b2:	90 e0       	ldi	r25, 0x00	; 0
    a6b4:	80 71       	andi	r24, 0x10	; 16
    a6b6:	99 27       	eor	r25, r25
    a6b8:	89 2b       	or	r24, r25
    a6ba:	19 f4       	brne	.+6      	; 0xa6c2 <_ZL11i2c_1_WaitWv+0x44>
			{
				/* client responded with ack - TWI goes to M1 state */
				state = I2C_ACKED;
    a6bc:	81 e0       	ldi	r24, 0x01	; 1
    a6be:	89 83       	std	Y+1, r24	; 0x01
    a6c0:	0c c0       	rjmp	.+24     	; 0xa6da <_ZL11i2c_1_WaitWv+0x5c>
			}
			else
			{
				/* address sent but no ack received - TWI goes to M3 state */
				state = I2C_NACKED;
    a6c2:	82 e0       	ldi	r24, 0x02	; 2
    a6c4:	89 83       	std	Y+1, r24	; 0x01
    a6c6:	09 c0       	rjmp	.+18     	; 0xa6da <_ZL11i2c_1_WaitWv+0x5c>
			}
		}
		else if(stat & (TWI_BUSERR_bm | TWI_ARBLOST_bm))
    a6c8:	8a 81       	ldd	r24, Y+2	; 0x02
    a6ca:	88 2f       	mov	r24, r24
    a6cc:	90 e0       	ldi	r25, 0x00	; 0
    a6ce:	8c 70       	andi	r24, 0x0C	; 12
    a6d0:	99 27       	eor	r25, r25
    a6d2:	89 2b       	or	r24, r25
    a6d4:	11 f0       	breq	.+4      	; 0xa6da <_ZL11i2c_1_WaitWv+0x5c>
		{
			/* get here only in case of bus error or arbitration lost - M4 state */
			state = I2C_ERROR;
    a6d6:	84 e0       	ldi	r24, 0x04	; 4
    a6d8:	89 83       	std	Y+1, r24	; 0x01
		}
	} while(!state && g_i2c1_timeout_ticks);
    a6da:	89 81       	ldd	r24, Y+1	; 0x01
    a6dc:	88 23       	and	r24, r24
    a6de:	41 f4       	brne	.+16     	; 0xa6f0 <_ZL11i2c_1_WaitWv+0x72>
    a6e0:	80 91 47 40 	lds	r24, 0x4047	; 0x804047 <g_i2c1_timeout_ticks>
    a6e4:	90 91 48 40 	lds	r25, 0x4048	; 0x804048 <g_i2c1_timeout_ticks+0x1>
    a6e8:	89 2b       	or	r24, r25
    a6ea:	11 f0       	breq	.+4      	; 0xa6f0 <_ZL11i2c_1_WaitWv+0x72>
    a6ec:	81 e0       	ldi	r24, 0x01	; 1
    a6ee:	01 c0       	rjmp	.+2      	; 0xa6f2 <_ZL11i2c_1_WaitWv+0x74>
    a6f0:	80 e0       	ldi	r24, 0x00	; 0
{
	uint8_t state = I2C_INIT;
	
	g_i2c1_timeout_ticks = 50;
	
	do
    a6f2:	88 23       	and	r24, r24
    a6f4:	09 f0       	breq	.+2      	; 0xa6f8 <_ZL11i2c_1_WaitWv+0x7a>
    a6f6:	cf cf       	rjmp	.-98     	; 0xa696 <_ZL11i2c_1_WaitWv+0x18>
			/* get here only in case of bus error or arbitration lost - M4 state */
			state = I2C_ERROR;
		}
	} while(!state && g_i2c1_timeout_ticks);
	
	return state;
    a6f8:	89 81       	ldd	r24, Y+1	; 0x01
}
    a6fa:	0f 90       	pop	r0
    a6fc:	0f 90       	pop	r0
    a6fe:	df 91       	pop	r29
    a700:	cf 91       	pop	r28
    a702:	08 95       	ret

0000a704 <_ZL11I2C_1_WaitRv>:

static uint8_t I2C_1_WaitR(void)
{
    a704:	cf 93       	push	r28
    a706:	df 93       	push	r29
    a708:	1f 92       	push	r1
    a70a:	cd b7       	in	r28, 0x3d	; 61
    a70c:	de b7       	in	r29, 0x3e	; 62
	uint8_t state = I2C_INIT;
    a70e:	19 82       	std	Y+1, r1	; 0x01
	
	g_i2c0_timeout_ticks = 50;
    a710:	82 e3       	ldi	r24, 0x32	; 50
    a712:	90 e0       	ldi	r25, 0x00	; 0
    a714:	80 93 45 40 	sts	0x4045, r24	; 0x804045 <g_i2c0_timeout_ticks>
    a718:	90 93 46 40 	sts	0x4046, r25	; 0x804046 <g_i2c0_timeout_ticks+0x1>
	
	do
	{
		if(TWI1.MSTATUS & (TWI_WIF_bm | TWI_RIF_bm))
    a71c:	80 e2       	ldi	r24, 0x20	; 32
    a71e:	99 e0       	ldi	r25, 0x09	; 9
    a720:	fc 01       	movw	r30, r24
    a722:	85 81       	ldd	r24, Z+5	; 0x05
    a724:	88 2f       	mov	r24, r24
    a726:	90 e0       	ldi	r25, 0x00	; 0
    a728:	80 7c       	andi	r24, 0xC0	; 192
    a72a:	99 27       	eor	r25, r25
    a72c:	21 e0       	ldi	r18, 0x01	; 1
    a72e:	89 2b       	or	r24, r25
    a730:	09 f4       	brne	.+2      	; 0xa734 <_ZL11I2C_1_WaitRv+0x30>
    a732:	20 e0       	ldi	r18, 0x00	; 0
    a734:	22 23       	and	r18, r18
    a736:	19 f0       	breq	.+6      	; 0xa73e <_ZL11I2C_1_WaitRv+0x3a>
		{
			state = I2C_READY;
    a738:	83 e0       	ldi	r24, 0x03	; 3
    a73a:	89 83       	std	Y+1, r24	; 0x01
    a73c:	10 c0       	rjmp	.+32     	; 0xa75e <_ZL11I2C_1_WaitRv+0x5a>
		}
		else if(TWI1.MSTATUS & (TWI_BUSERR_bm | TWI_ARBLOST_bm))
    a73e:	80 e2       	ldi	r24, 0x20	; 32
    a740:	99 e0       	ldi	r25, 0x09	; 9
    a742:	fc 01       	movw	r30, r24
    a744:	85 81       	ldd	r24, Z+5	; 0x05
    a746:	88 2f       	mov	r24, r24
    a748:	90 e0       	ldi	r25, 0x00	; 0
    a74a:	8c 70       	andi	r24, 0x0C	; 12
    a74c:	99 27       	eor	r25, r25
    a74e:	21 e0       	ldi	r18, 0x01	; 1
    a750:	89 2b       	or	r24, r25
    a752:	09 f4       	brne	.+2      	; 0xa756 <_ZL11I2C_1_WaitRv+0x52>
    a754:	20 e0       	ldi	r18, 0x00	; 0
    a756:	22 23       	and	r18, r18
    a758:	11 f0       	breq	.+4      	; 0xa75e <_ZL11I2C_1_WaitRv+0x5a>
		{
			/* get here only in case of bus error or arbitration lost - M4 state */
			state = I2C_ERROR;
    a75a:	84 e0       	ldi	r24, 0x04	; 4
    a75c:	89 83       	std	Y+1, r24	; 0x01
		}
	} while(!state && g_i2c0_timeout_ticks);
    a75e:	89 81       	ldd	r24, Y+1	; 0x01
    a760:	88 23       	and	r24, r24
    a762:	41 f4       	brne	.+16     	; 0xa774 <_ZL11I2C_1_WaitRv+0x70>
    a764:	80 91 45 40 	lds	r24, 0x4045	; 0x804045 <g_i2c0_timeout_ticks>
    a768:	90 91 46 40 	lds	r25, 0x4046	; 0x804046 <g_i2c0_timeout_ticks+0x1>
    a76c:	89 2b       	or	r24, r25
    a76e:	11 f0       	breq	.+4      	; 0xa774 <_ZL11I2C_1_WaitRv+0x70>
    a770:	81 e0       	ldi	r24, 0x01	; 1
    a772:	01 c0       	rjmp	.+2      	; 0xa776 <_ZL11I2C_1_WaitRv+0x72>
    a774:	80 e0       	ldi	r24, 0x00	; 0
{
	uint8_t state = I2C_INIT;
	
	g_i2c0_timeout_ticks = 50;
	
	do
    a776:	88 23       	and	r24, r24
    a778:	09 f0       	breq	.+2      	; 0xa77c <_ZL11I2C_1_WaitRv+0x78>
    a77a:	d0 cf       	rjmp	.-96     	; 0xa71c <_ZL11I2C_1_WaitRv+0x18>
			/* get here only in case of bus error or arbitration lost - M4 state */
			state = I2C_ERROR;
		}
	} while(!state && g_i2c0_timeout_ticks);
	
	return state;
    a77c:	89 81       	ldd	r24, Y+1	; 0x01
}
    a77e:	0f 90       	pop	r0
    a780:	df 91       	pop	r29
    a782:	cf 91       	pop	r28
    a784:	08 95       	ret

0000a786 <I2C_1_SendData>:

/* Returns how many bytes have been sent, -1 means NACK at address, 0 means client ACKed to client address */
uint8_t I2C_1_SendData(uint8_t slaveAddr, uint8_t regAddr, uint8_t *pData, uint8_t len)
{
    a786:	cf 93       	push	r28
    a788:	df 93       	push	r29
    a78a:	cd b7       	in	r28, 0x3d	; 61
    a78c:	de b7       	in	r29, 0x3e	; 62
    a78e:	26 97       	sbiw	r28, 0x06	; 6
    a790:	cd bf       	out	0x3d, r28	; 61
    a792:	de bf       	out	0x3e, r29	; 62
    a794:	8a 83       	std	Y+2, r24	; 0x02
    a796:	6b 83       	std	Y+3, r22	; 0x03
    a798:	4c 83       	std	Y+4, r20	; 0x04
    a79a:	5d 83       	std	Y+5, r21	; 0x05
    a79c:	2e 83       	std	Y+6, r18	; 0x06
	uint8_t retVal = (uint8_t) - 1;
    a79e:	8f ef       	ldi	r24, 0xFF	; 255
    a7a0:	89 83       	std	Y+1, r24	; 0x01
	
	/* Send the slave address */
	TWI1.MADDR = slaveAddr & ~0x01;
    a7a2:	80 e2       	ldi	r24, 0x20	; 32
    a7a4:	99 e0       	ldi	r25, 0x09	; 9
    a7a6:	2a 81       	ldd	r18, Y+2	; 0x02
    a7a8:	2e 7f       	andi	r18, 0xFE	; 254
    a7aa:	fc 01       	movw	r30, r24
    a7ac:	27 83       	std	Z+7, r18	; 0x07
	if(i2c_1_WaitW() != I2C_ACKED)
    a7ae:	0e 94 3f 53 	call	0xa67e	; 0xa67e <_ZL11i2c_1_WaitWv>
    a7b2:	98 2f       	mov	r25, r24
    a7b4:	81 e0       	ldi	r24, 0x01	; 1
    a7b6:	91 30       	cpi	r25, 0x01	; 1
    a7b8:	09 f4       	brne	.+2      	; 0xa7bc <I2C_1_SendData+0x36>
    a7ba:	80 e0       	ldi	r24, 0x00	; 0
    a7bc:	88 23       	and	r24, r24
    a7be:	11 f0       	breq	.+4      	; 0xa7c4 <I2C_1_SendData+0x3e>
	{
		return retVal;
    a7c0:	89 81       	ldd	r24, Y+1	; 0x01
    a7c2:	44 c0       	rjmp	.+136    	; 0xa84c <I2C_1_SendData+0xc6>
	}
	
	/* Send the register address */
	TWI1.MDATA = regAddr;	
    a7c4:	80 e2       	ldi	r24, 0x20	; 32
    a7c6:	99 e0       	ldi	r25, 0x09	; 9
    a7c8:	2b 81       	ldd	r18, Y+3	; 0x03
    a7ca:	fc 01       	movw	r30, r24
    a7cc:	20 87       	std	Z+8, r18	; 0x08
	if(i2c_1_WaitW() != I2C_ACKED)
    a7ce:	0e 94 3f 53 	call	0xa67e	; 0xa67e <_ZL11i2c_1_WaitWv>
    a7d2:	98 2f       	mov	r25, r24
    a7d4:	81 e0       	ldi	r24, 0x01	; 1
    a7d6:	91 30       	cpi	r25, 0x01	; 1
    a7d8:	09 f4       	brne	.+2      	; 0xa7dc <I2C_1_SendData+0x56>
    a7da:	80 e0       	ldi	r24, 0x00	; 0
    a7dc:	88 23       	and	r24, r24
    a7de:	11 f0       	breq	.+4      	; 0xa7e4 <I2C_1_SendData+0x5e>
	{
		return retVal;
    a7e0:	89 81       	ldd	r24, Y+1	; 0x01
    a7e2:	34 c0       	rjmp	.+104    	; 0xa84c <I2C_1_SendData+0xc6>
	}	

	retVal = 0;
    a7e4:	19 82       	std	Y+1, r1	; 0x01
	if((len != 0) && (pData != null))
    a7e6:	8e 81       	ldd	r24, Y+6	; 0x06
    a7e8:	88 23       	and	r24, r24
    a7ea:	79 f1       	breq	.+94     	; 0xa84a <I2C_1_SendData+0xc4>
    a7ec:	8c 81       	ldd	r24, Y+4	; 0x04
    a7ee:	9d 81       	ldd	r25, Y+5	; 0x05
    a7f0:	89 2b       	or	r24, r25
    a7f2:	59 f1       	breq	.+86     	; 0xa84a <I2C_1_SendData+0xc4>
	{
		while(len--)
    a7f4:	8e 81       	ldd	r24, Y+6	; 0x06
    a7f6:	9f ef       	ldi	r25, 0xFF	; 255
    a7f8:	98 0f       	add	r25, r24
    a7fa:	9e 83       	std	Y+6, r25	; 0x06
    a7fc:	91 e0       	ldi	r25, 0x01	; 1
    a7fe:	88 23       	and	r24, r24
    a800:	09 f4       	brne	.+2      	; 0xa804 <I2C_1_SendData+0x7e>
    a802:	90 e0       	ldi	r25, 0x00	; 0
    a804:	99 23       	and	r25, r25
    a806:	09 f1       	breq	.+66     	; 0xa84a <I2C_1_SendData+0xc4>
		{
			TWI1.MDATA = *pData;
    a808:	80 e2       	ldi	r24, 0x20	; 32
    a80a:	99 e0       	ldi	r25, 0x09	; 9
    a80c:	2c 81       	ldd	r18, Y+4	; 0x04
    a80e:	3d 81       	ldd	r19, Y+5	; 0x05
    a810:	f9 01       	movw	r30, r18
    a812:	20 81       	ld	r18, Z
    a814:	fc 01       	movw	r30, r24
    a816:	20 87       	std	Z+8, r18	; 0x08
			if(i2c_1_WaitW() == I2C_ACKED)
    a818:	0e 94 3f 53 	call	0xa67e	; 0xa67e <_ZL11i2c_1_WaitWv>
    a81c:	98 2f       	mov	r25, r24
    a81e:	81 e0       	ldi	r24, 0x01	; 1
    a820:	91 30       	cpi	r25, 0x01	; 1
    a822:	09 f0       	breq	.+2      	; 0xa826 <I2C_1_SendData+0xa0>
    a824:	80 e0       	ldi	r24, 0x00	; 0
    a826:	88 23       	and	r24, r24
    a828:	79 f0       	breq	.+30     	; 0xa848 <I2C_1_SendData+0xc2>
			{
				retVal++;
    a82a:	89 81       	ldd	r24, Y+1	; 0x01
    a82c:	8f 5f       	subi	r24, 0xFF	; 255
    a82e:	89 83       	std	Y+1, r24	; 0x01
				pData++;
    a830:	8c 81       	ldd	r24, Y+4	; 0x04
    a832:	9d 81       	ldd	r25, Y+5	; 0x05
    a834:	01 96       	adiw	r24, 0x01	; 1
    a836:	8c 83       	std	Y+4, r24	; 0x04
    a838:	9d 83       	std	Y+5, r25	; 0x05
				if(!len) I2C_1_EndSession();
    a83a:	8e 81       	ldd	r24, Y+6	; 0x06
    a83c:	88 23       	and	r24, r24
    a83e:	11 f4       	brne	.+4      	; 0xa844 <I2C_1_SendData+0xbe>
    a840:	0e 94 aa 54 	call	0xa954	; 0xa954 <I2C_1_EndSession>
				continue;
    a844:	00 00       	nop
	}	

	retVal = 0;
	if((len != 0) && (pData != null))
	{
		while(len--)
    a846:	d6 cf       	rjmp	.-84     	; 0xa7f4 <I2C_1_SendData+0x6e>
				if(!len) I2C_1_EndSession();
				continue;
			}
			else // did not get ACK after client address
			{
				break;
    a848:	00 00       	nop
			}
		}
	}
	
	return retVal;
    a84a:	89 81       	ldd	r24, Y+1	; 0x01
}
    a84c:	26 96       	adiw	r28, 0x06	; 6
    a84e:	cd bf       	out	0x3d, r28	; 61
    a850:	de bf       	out	0x3e, r29	; 62
    a852:	df 91       	pop	r29
    a854:	cf 91       	pop	r28
    a856:	08 95       	ret

0000a858 <I2C_1_GetData>:


/* Returns how many bytes have been received, -1 means NACK at address */
uint8_t I2C_1_GetData(uint8_t slaveAddr, uint8_t regAddr, uint8_t *pData, uint8_t len)
{
    a858:	cf 93       	push	r28
    a85a:	df 93       	push	r29
    a85c:	cd b7       	in	r28, 0x3d	; 61
    a85e:	de b7       	in	r29, 0x3e	; 62
    a860:	26 97       	sbiw	r28, 0x06	; 6
    a862:	cd bf       	out	0x3d, r28	; 61
    a864:	de bf       	out	0x3e, r29	; 62
    a866:	8a 83       	std	Y+2, r24	; 0x02
    a868:	6b 83       	std	Y+3, r22	; 0x03
    a86a:	4c 83       	std	Y+4, r20	; 0x04
    a86c:	5d 83       	std	Y+5, r21	; 0x05
    a86e:	2e 83       	std	Y+6, r18	; 0x06
	uint8_t retVal = (uint8_t) -1;
    a870:	8f ef       	ldi	r24, 0xFF	; 255
    a872:	89 83       	std	Y+1, r24	; 0x01
	
	/* Send the client address for write */
	TWI1.MADDR = slaveAddr;
    a874:	80 e2       	ldi	r24, 0x20	; 32
    a876:	99 e0       	ldi	r25, 0x09	; 9
    a878:	2a 81       	ldd	r18, Y+2	; 0x02
    a87a:	fc 01       	movw	r30, r24
    a87c:	27 83       	std	Z+7, r18	; 0x07
	if(i2c_1_WaitW() != I2C_ACKED)
    a87e:	0e 94 3f 53 	call	0xa67e	; 0xa67e <_ZL11i2c_1_WaitWv>
    a882:	98 2f       	mov	r25, r24
    a884:	81 e0       	ldi	r24, 0x01	; 1
    a886:	91 30       	cpi	r25, 0x01	; 1
    a888:	09 f4       	brne	.+2      	; 0xa88c <I2C_1_GetData+0x34>
    a88a:	80 e0       	ldi	r24, 0x00	; 0
    a88c:	88 23       	and	r24, r24
    a88e:	11 f0       	breq	.+4      	; 0xa894 <I2C_1_GetData+0x3c>
	{
		return retVal;
    a890:	89 81       	ldd	r24, Y+1	; 0x01
    a892:	5a c0       	rjmp	.+180    	; 0xa948 <I2C_1_GetData+0xf0>
	}
	
	/* Send the register address */
	TWI1.MDATA = regAddr;	
    a894:	80 e2       	ldi	r24, 0x20	; 32
    a896:	99 e0       	ldi	r25, 0x09	; 9
    a898:	2b 81       	ldd	r18, Y+3	; 0x03
    a89a:	fc 01       	movw	r30, r24
    a89c:	20 87       	std	Z+8, r18	; 0x08
	if(i2c_1_WaitW() != I2C_ACKED)
    a89e:	0e 94 3f 53 	call	0xa67e	; 0xa67e <_ZL11i2c_1_WaitWv>
    a8a2:	98 2f       	mov	r25, r24
    a8a4:	81 e0       	ldi	r24, 0x01	; 1
    a8a6:	91 30       	cpi	r25, 0x01	; 1
    a8a8:	09 f4       	brne	.+2      	; 0xa8ac <I2C_1_GetData+0x54>
    a8aa:	80 e0       	ldi	r24, 0x00	; 0
    a8ac:	88 23       	and	r24, r24
    a8ae:	11 f0       	breq	.+4      	; 0xa8b4 <I2C_1_GetData+0x5c>
	{
		return retVal;
    a8b0:	89 81       	ldd	r24, Y+1	; 0x01
    a8b2:	4a c0       	rjmp	.+148    	; 0xa948 <I2C_1_GetData+0xf0>
	}
	
	/* Send the client address for read */
	TWI1.MADDR = slaveAddr | 0x01;
    a8b4:	80 e2       	ldi	r24, 0x20	; 32
    a8b6:	99 e0       	ldi	r25, 0x09	; 9
    a8b8:	2a 81       	ldd	r18, Y+2	; 0x02
    a8ba:	21 60       	ori	r18, 0x01	; 1
    a8bc:	fc 01       	movw	r30, r24
    a8be:	27 83       	std	Z+7, r18	; 0x07
	if(i2c_1_WaitW() != I2C_ACKED)
    a8c0:	0e 94 3f 53 	call	0xa67e	; 0xa67e <_ZL11i2c_1_WaitWv>
    a8c4:	98 2f       	mov	r25, r24
    a8c6:	81 e0       	ldi	r24, 0x01	; 1
    a8c8:	91 30       	cpi	r25, 0x01	; 1
    a8ca:	09 f4       	brne	.+2      	; 0xa8ce <I2C_1_GetData+0x76>
    a8cc:	80 e0       	ldi	r24, 0x00	; 0
    a8ce:	88 23       	and	r24, r24
    a8d0:	11 f0       	breq	.+4      	; 0xa8d6 <I2C_1_GetData+0x7e>
	{
		return retVal;	
    a8d2:	89 81       	ldd	r24, Y+1	; 0x01
    a8d4:	39 c0       	rjmp	.+114    	; 0xa948 <I2C_1_GetData+0xf0>
	}
	
	retVal = 0;
    a8d6:	19 82       	std	Y+1, r1	; 0x01
	if((len != 0) && (pData !=null ))
    a8d8:	8e 81       	ldd	r24, Y+6	; 0x06
    a8da:	88 23       	and	r24, r24
    a8dc:	a1 f1       	breq	.+104    	; 0xa946 <I2C_1_GetData+0xee>
    a8de:	8c 81       	ldd	r24, Y+4	; 0x04
    a8e0:	9d 81       	ldd	r25, Y+5	; 0x05
    a8e2:	89 2b       	or	r24, r25
    a8e4:	81 f1       	breq	.+96     	; 0xa946 <I2C_1_GetData+0xee>
	{
		while(len--)
    a8e6:	8e 81       	ldd	r24, Y+6	; 0x06
    a8e8:	9f ef       	ldi	r25, 0xFF	; 255
    a8ea:	98 0f       	add	r25, r24
    a8ec:	9e 83       	std	Y+6, r25	; 0x06
    a8ee:	91 e0       	ldi	r25, 0x01	; 1
    a8f0:	88 23       	and	r24, r24
    a8f2:	09 f4       	brne	.+2      	; 0xa8f6 <I2C_1_GetData+0x9e>
    a8f4:	90 e0       	ldi	r25, 0x00	; 0
    a8f6:	99 23       	and	r25, r25
    a8f8:	31 f1       	breq	.+76     	; 0xa946 <I2C_1_GetData+0xee>
		{
			if(I2C_1_WaitR() == I2C_READY)
    a8fa:	0e 94 82 53 	call	0xa704	; 0xa704 <_ZL11I2C_1_WaitRv>
    a8fe:	98 2f       	mov	r25, r24
    a900:	81 e0       	ldi	r24, 0x01	; 1
    a902:	93 30       	cpi	r25, 0x03	; 3
    a904:	09 f0       	breq	.+2      	; 0xa908 <I2C_1_GetData+0xb0>
    a906:	80 e0       	ldi	r24, 0x00	; 0
    a908:	88 23       	and	r24, r24
    a90a:	e1 f0       	breq	.+56     	; 0xa944 <I2C_1_GetData+0xec>
			{
				*pData = TWI1.MDATA;
    a90c:	80 e2       	ldi	r24, 0x20	; 32
    a90e:	99 e0       	ldi	r25, 0x09	; 9
    a910:	fc 01       	movw	r30, r24
    a912:	20 85       	ldd	r18, Z+8	; 0x08
    a914:	8c 81       	ldd	r24, Y+4	; 0x04
    a916:	9d 81       	ldd	r25, Y+5	; 0x05
    a918:	fc 01       	movw	r30, r24
    a91a:	20 83       	st	Z, r18
				TWI1.MCTRLB = (len == 0)? TWI_ACKACT_bm | TWI_MCMD_STOP_gc : TWI_MCMD_RECVTRANS_gc;
    a91c:	80 e2       	ldi	r24, 0x20	; 32
    a91e:	99 e0       	ldi	r25, 0x09	; 9
    a920:	2e 81       	ldd	r18, Y+6	; 0x06
    a922:	22 23       	and	r18, r18
    a924:	11 f4       	brne	.+4      	; 0xa92a <I2C_1_GetData+0xd2>
    a926:	27 e0       	ldi	r18, 0x07	; 7
    a928:	01 c0       	rjmp	.+2      	; 0xa92c <I2C_1_GetData+0xd4>
    a92a:	22 e0       	ldi	r18, 0x02	; 2
    a92c:	fc 01       	movw	r30, r24
    a92e:	24 83       	std	Z+4, r18	; 0x04
				retVal++;
    a930:	89 81       	ldd	r24, Y+1	; 0x01
    a932:	8f 5f       	subi	r24, 0xFF	; 255
    a934:	89 83       	std	Y+1, r24	; 0x01
				pData++;
    a936:	8c 81       	ldd	r24, Y+4	; 0x04
    a938:	9d 81       	ldd	r25, Y+5	; 0x05
    a93a:	01 96       	adiw	r24, 0x01	; 1
    a93c:	8c 83       	std	Y+4, r24	; 0x04
    a93e:	9d 83       	std	Y+5, r25	; 0x05
				continue;
    a940:	00 00       	nop
	}
	
	retVal = 0;
	if((len != 0) && (pData !=null ))
	{
		while(len--)
    a942:	d1 cf       	rjmp	.-94     	; 0xa8e6 <I2C_1_GetData+0x8e>
				retVal++;
				pData++;
				continue;
			}
			else
			break;
    a944:	00 00       	nop
		}
	}
	
	return retVal;
    a946:	89 81       	ldd	r24, Y+1	; 0x01
}
    a948:	26 96       	adiw	r28, 0x06	; 6
    a94a:	cd bf       	out	0x3d, r28	; 61
    a94c:	de bf       	out	0x3e, r29	; 62
    a94e:	df 91       	pop	r29
    a950:	cf 91       	pop	r28
    a952:	08 95       	ret

0000a954 <I2C_1_EndSession>:

void I2C_1_EndSession(void)
{
    a954:	cf 93       	push	r28
    a956:	df 93       	push	r29
    a958:	cd b7       	in	r28, 0x3d	; 61
    a95a:	de b7       	in	r29, 0x3e	; 62
	TWI1.MCTRLB = TWI_MCMD_STOP_gc;
    a95c:	80 e2       	ldi	r24, 0x20	; 32
    a95e:	99 e0       	ldi	r25, 0x09	; 9
    a960:	23 e0       	ldi	r18, 0x03	; 3
    a962:	fc 01       	movw	r30, r24
    a964:	24 83       	std	Z+4, r18	; 0x04
}
    a966:	00 00       	nop
    a968:	df 91       	pop	r29
    a96a:	cf 91       	pop	r28
    a96c:	08 95       	ret

0000a96e <PORTC_set_pin_level>:
	}
	else
	{
		LED_set_GREEN_level(OFF);
	}
}
    a96e:	cf 93       	push	r28
    a970:	df 93       	push	r29
    a972:	00 d0       	rcall	.+0      	; 0xa974 <PORTC_set_pin_level+0x6>
    a974:	cd b7       	in	r28, 0x3d	; 61
    a976:	de b7       	in	r29, 0x3e	; 62
    a978:	89 83       	std	Y+1, r24	; 0x01
    a97a:	6a 83       	std	Y+2, r22	; 0x02
    a97c:	8a 81       	ldd	r24, Y+2	; 0x02
    a97e:	88 23       	and	r24, r24
    a980:	a9 f0       	breq	.+42     	; 0xa9ac <PORTC_set_pin_level+0x3e>
    a982:	88 e0       	ldi	r24, 0x08	; 8
    a984:	90 e0       	ldi	r25, 0x00	; 0
    a986:	28 e0       	ldi	r18, 0x08	; 8
    a988:	30 e0       	ldi	r19, 0x00	; 0
    a98a:	f9 01       	movw	r30, r18
    a98c:	21 81       	ldd	r18, Z+1	; 0x01
    a98e:	62 2f       	mov	r22, r18
    a990:	29 81       	ldd	r18, Y+1	; 0x01
    a992:	42 2f       	mov	r20, r18
    a994:	50 e0       	ldi	r21, 0x00	; 0
    a996:	21 e0       	ldi	r18, 0x01	; 1
    a998:	30 e0       	ldi	r19, 0x00	; 0
    a99a:	02 c0       	rjmp	.+4      	; 0xa9a0 <PORTC_set_pin_level+0x32>
    a99c:	22 0f       	add	r18, r18
    a99e:	33 1f       	adc	r19, r19
    a9a0:	4a 95       	dec	r20
    a9a2:	e2 f7       	brpl	.-8      	; 0xa99c <PORTC_set_pin_level+0x2e>
    a9a4:	26 2b       	or	r18, r22
    a9a6:	fc 01       	movw	r30, r24
    a9a8:	21 83       	std	Z+1, r18	; 0x01
    a9aa:	15 c0       	rjmp	.+42     	; 0xa9d6 <PORTC_set_pin_level+0x68>
    a9ac:	88 e0       	ldi	r24, 0x08	; 8
    a9ae:	90 e0       	ldi	r25, 0x00	; 0
    a9b0:	28 e0       	ldi	r18, 0x08	; 8
    a9b2:	30 e0       	ldi	r19, 0x00	; 0
    a9b4:	f9 01       	movw	r30, r18
    a9b6:	21 81       	ldd	r18, Z+1	; 0x01
    a9b8:	62 2f       	mov	r22, r18
    a9ba:	29 81       	ldd	r18, Y+1	; 0x01
    a9bc:	42 2f       	mov	r20, r18
    a9be:	50 e0       	ldi	r21, 0x00	; 0
    a9c0:	21 e0       	ldi	r18, 0x01	; 1
    a9c2:	30 e0       	ldi	r19, 0x00	; 0
    a9c4:	02 c0       	rjmp	.+4      	; 0xa9ca <PORTC_set_pin_level+0x5c>
    a9c6:	22 0f       	add	r18, r18
    a9c8:	33 1f       	adc	r19, r19
    a9ca:	4a 95       	dec	r20
    a9cc:	e2 f7       	brpl	.-8      	; 0xa9c6 <PORTC_set_pin_level+0x58>
    a9ce:	20 95       	com	r18
    a9d0:	26 23       	and	r18, r22
    a9d2:	fc 01       	movw	r30, r24
    a9d4:	21 83       	std	Z+1, r18	; 0x01
    a9d6:	00 00       	nop
    a9d8:	0f 90       	pop	r0
    a9da:	0f 90       	pop	r0
    a9dc:	df 91       	pop	r29
    a9de:	cf 91       	pop	r28
    a9e0:	08 95       	ret

0000a9e2 <_ZL17LED_set_RED_levelb>:
    a9e2:	cf 93       	push	r28
    a9e4:	df 93       	push	r29
    a9e6:	1f 92       	push	r1
    a9e8:	cd b7       	in	r28, 0x3d	; 61
    a9ea:	de b7       	in	r29, 0x3e	; 62
    a9ec:	89 83       	std	Y+1, r24	; 0x01
    a9ee:	69 81       	ldd	r22, Y+1	; 0x01
    a9f0:	86 e0       	ldi	r24, 0x06	; 6
    a9f2:	0e 94 b7 54 	call	0xa96e	; 0xa96e <PORTC_set_pin_level>
    a9f6:	00 00       	nop
    a9f8:	0f 90       	pop	r0
    a9fa:	df 91       	pop	r29
    a9fc:	cf 91       	pop	r28
    a9fe:	08 95       	ret

0000aa00 <_ZL19LED_set_GREEN_levelb>:
    aa00:	cf 93       	push	r28
    aa02:	df 93       	push	r29
    aa04:	1f 92       	push	r1
    aa06:	cd b7       	in	r28, 0x3d	; 61
    aa08:	de b7       	in	r29, 0x3e	; 62
    aa0a:	89 83       	std	Y+1, r24	; 0x01
    aa0c:	69 81       	ldd	r22, Y+1	; 0x01
    aa0e:	85 e0       	ldi	r24, 0x05	; 5
    aa10:	0e 94 b7 54 	call	0xa96e	; 0xa96e <PORTC_set_pin_level>
    aa14:	00 00       	nop
    aa16:	0f 90       	pop	r0
    aa18:	df 91       	pop	r29
    aa1a:	cf 91       	pop	r28
    aa1c:	08 95       	ret

0000aa1e <_ZN4ledsC1Ev>:
    aa1e:	cf 93       	push	r28
    aa20:	df 93       	push	r29
    aa22:	00 d0       	rcall	.+0      	; 0xaa24 <_ZN4ledsC1Ev+0x6>
    aa24:	cd b7       	in	r28, 0x3d	; 61
    aa26:	de b7       	in	r29, 0x3e	; 62
    aa28:	89 83       	std	Y+1, r24	; 0x01
    aa2a:	9a 83       	std	Y+2, r25	; 0x02
    aa2c:	00 00       	nop
    aa2e:	0f 90       	pop	r0
    aa30:	0f 90       	pop	r0
    aa32:	df 91       	pop	r29
    aa34:	cf 91       	pop	r28
    aa36:	08 95       	ret

0000aa38 <_ZN4ledsD1Ev>:
    aa38:	cf 93       	push	r28
    aa3a:	df 93       	push	r29
    aa3c:	00 d0       	rcall	.+0      	; 0xaa3e <_ZN4ledsD1Ev+0x6>
    aa3e:	cd b7       	in	r28, 0x3d	; 61
    aa40:	de b7       	in	r29, 0x3e	; 62
    aa42:	89 83       	std	Y+1, r24	; 0x01
    aa44:	9a 83       	std	Y+2, r25	; 0x02
    aa46:	00 00       	nop
    aa48:	0f 90       	pop	r0
    aa4a:	0f 90       	pop	r0
    aa4c:	df 91       	pop	r29
    aa4e:	cf 91       	pop	r28
    aa50:	08 95       	ret

0000aa52 <__vector_41>:
    aa52:	1f 92       	push	r1
    aa54:	0f 92       	push	r0
    aa56:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    aa5a:	0f 92       	push	r0
    aa5c:	11 24       	eor	r1, r1
    aa5e:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    aa62:	0f 92       	push	r0
    aa64:	2f 93       	push	r18
    aa66:	3f 93       	push	r19
    aa68:	4f 93       	push	r20
    aa6a:	5f 93       	push	r21
    aa6c:	6f 93       	push	r22
    aa6e:	7f 93       	push	r23
    aa70:	8f 93       	push	r24
    aa72:	9f 93       	push	r25
    aa74:	af 93       	push	r26
    aa76:	bf 93       	push	r27
    aa78:	ef 93       	push	r30
    aa7a:	ff 93       	push	r31
    aa7c:	cf 93       	push	r28
    aa7e:	df 93       	push	r29
    aa80:	1f 92       	push	r1
    aa82:	cd b7       	in	r28, 0x3d	; 61
    aa84:	de b7       	in	r29, 0x3e	; 62
    aa86:	80 e3       	ldi	r24, 0x30	; 48
    aa88:	9b e0       	ldi	r25, 0x0B	; 11
    aa8a:	fc 01       	movw	r30, r24
    aa8c:	86 81       	ldd	r24, Z+6	; 0x06
    aa8e:	89 83       	std	Y+1, r24	; 0x01
    aa90:	89 81       	ldd	r24, Y+1	; 0x01
    aa92:	88 2f       	mov	r24, r24
    aa94:	90 e0       	ldi	r25, 0x00	; 0
    aa96:	81 70       	andi	r24, 0x01	; 1
    aa98:	99 27       	eor	r25, r25
    aa9a:	89 2b       	or	r24, r25
    aa9c:	09 f4       	brne	.+2      	; 0xaaa0 <__vector_41+0x4e>
    aa9e:	50 c1       	rjmp	.+672    	; 0xad40 <__vector_41+0x2ee>
    aaa0:	80 91 49 40 	lds	r24, 0x4049	; 0x804049 <_ZL17led_timeout_count>
    aaa4:	90 91 4a 40 	lds	r25, 0x404A	; 0x80404a <_ZL17led_timeout_count+0x1>
    aaa8:	a0 91 4b 40 	lds	r26, 0x404B	; 0x80404b <_ZL17led_timeout_count+0x2>
    aaac:	b0 91 4c 40 	lds	r27, 0x404C	; 0x80404c <_ZL17led_timeout_count+0x3>
    aab0:	21 e0       	ldi	r18, 0x01	; 1
    aab2:	89 2b       	or	r24, r25
    aab4:	8a 2b       	or	r24, r26
    aab6:	8b 2b       	or	r24, r27
    aab8:	09 f4       	brne	.+2      	; 0xaabc <__vector_41+0x6a>
    aaba:	20 e0       	ldi	r18, 0x00	; 0
    aabc:	22 23       	and	r18, r18
    aabe:	49 f1       	breq	.+82     	; 0xab12 <__vector_41+0xc0>
    aac0:	80 91 49 40 	lds	r24, 0x4049	; 0x804049 <_ZL17led_timeout_count>
    aac4:	90 91 4a 40 	lds	r25, 0x404A	; 0x80404a <_ZL17led_timeout_count+0x1>
    aac8:	a0 91 4b 40 	lds	r26, 0x404B	; 0x80404b <_ZL17led_timeout_count+0x2>
    aacc:	b0 91 4c 40 	lds	r27, 0x404C	; 0x80404c <_ZL17led_timeout_count+0x3>
    aad0:	01 97       	sbiw	r24, 0x01	; 1
    aad2:	a1 09       	sbc	r26, r1
    aad4:	b1 09       	sbc	r27, r1
    aad6:	80 93 49 40 	sts	0x4049, r24	; 0x804049 <_ZL17led_timeout_count>
    aada:	90 93 4a 40 	sts	0x404A, r25	; 0x80404a <_ZL17led_timeout_count+0x1>
    aade:	a0 93 4b 40 	sts	0x404B, r26	; 0x80404b <_ZL17led_timeout_count+0x2>
    aae2:	b0 93 4c 40 	sts	0x404C, r27	; 0x80404c <_ZL17led_timeout_count+0x3>
    aae6:	80 91 49 40 	lds	r24, 0x4049	; 0x804049 <_ZL17led_timeout_count>
    aaea:	90 91 4a 40 	lds	r25, 0x404A	; 0x80404a <_ZL17led_timeout_count+0x1>
    aaee:	a0 91 4b 40 	lds	r26, 0x404B	; 0x80404b <_ZL17led_timeout_count+0x2>
    aaf2:	b0 91 4c 40 	lds	r27, 0x404C	; 0x80404c <_ZL17led_timeout_count+0x3>
    aaf6:	21 e0       	ldi	r18, 0x01	; 1
    aaf8:	89 2b       	or	r24, r25
    aafa:	8a 2b       	or	r24, r26
    aafc:	8b 2b       	or	r24, r27
    aafe:	09 f0       	breq	.+2      	; 0xab02 <__vector_41+0xb0>
    ab00:	20 e0       	ldi	r18, 0x00	; 0
    ab02:	22 23       	and	r18, r18
    ab04:	31 f0       	breq	.+12     	; 0xab12 <__vector_41+0xc0>
    ab06:	80 e0       	ldi	r24, 0x00	; 0
    ab08:	0e 94 f1 54 	call	0xa9e2	; 0xa9e2 <_ZL17LED_set_RED_levelb>
    ab0c:	80 e0       	ldi	r24, 0x00	; 0
    ab0e:	0e 94 00 55 	call	0xaa00	; 0xaa00 <_ZL19LED_set_GREEN_levelb>
    ab12:	80 91 49 40 	lds	r24, 0x4049	; 0x804049 <_ZL17led_timeout_count>
    ab16:	90 91 4a 40 	lds	r25, 0x404A	; 0x80404a <_ZL17led_timeout_count+0x1>
    ab1a:	a0 91 4b 40 	lds	r26, 0x404B	; 0x80404b <_ZL17led_timeout_count+0x2>
    ab1e:	b0 91 4c 40 	lds	r27, 0x404C	; 0x80404c <_ZL17led_timeout_count+0x3>
    ab22:	21 e0       	ldi	r18, 0x01	; 1
    ab24:	89 2b       	or	r24, r25
    ab26:	8a 2b       	or	r24, r26
    ab28:	8b 2b       	or	r24, r27
    ab2a:	09 f4       	brne	.+2      	; 0xab2e <__vector_41+0xdc>
    ab2c:	20 e0       	ldi	r18, 0x00	; 0
    ab2e:	22 23       	and	r18, r18
    ab30:	09 f4       	brne	.+2      	; 0xab34 <__vector_41+0xe2>
    ab32:	00 c1       	rjmp	.+512    	; 0xad34 <__vector_41+0x2e2>
    ab34:	90 91 b1 46 	lds	r25, 0x46B1	; 0x8046b1 <_ZL19timer_blink_inhibit>
    ab38:	81 e0       	ldi	r24, 0x01	; 1
    ab3a:	89 27       	eor	r24, r25
    ab3c:	88 23       	and	r24, r24
    ab3e:	09 f4       	brne	.+2      	; 0xab42 <__vector_41+0xf0>
    ab40:	7c c0       	rjmp	.+248    	; 0xac3a <__vector_41+0x1e8>
    ab42:	80 91 bd 46 	lds	r24, 0x46BD	; 0x8046bd <_ZL15red_blink_count>
    ab46:	90 91 be 46 	lds	r25, 0x46BE	; 0x8046be <_ZL15red_blink_count+0x1>
    ab4a:	21 e0       	ldi	r18, 0x01	; 1
    ab4c:	89 2b       	or	r24, r25
    ab4e:	09 f4       	brne	.+2      	; 0xab52 <__vector_41+0x100>
    ab50:	20 e0       	ldi	r18, 0x00	; 0
    ab52:	22 23       	and	r18, r18
    ab54:	09 f4       	brne	.+2      	; 0xab58 <__vector_41+0x106>
    ab56:	6a c0       	rjmp	.+212    	; 0xac2c <__vector_41+0x1da>
    ab58:	80 91 bd 46 	lds	r24, 0x46BD	; 0x8046bd <_ZL15red_blink_count>
    ab5c:	90 91 be 46 	lds	r25, 0x46BE	; 0x8046be <_ZL15red_blink_count+0x1>
    ab60:	21 e0       	ldi	r18, 0x01	; 1
    ab62:	02 97       	sbiw	r24, 0x02	; 2
    ab64:	0c f4       	brge	.+2      	; 0xab68 <__vector_41+0x116>
    ab66:	20 e0       	ldi	r18, 0x00	; 0
    ab68:	22 23       	and	r18, r18
    ab6a:	69 f0       	breq	.+26     	; 0xab86 <__vector_41+0x134>
    ab6c:	81 e0       	ldi	r24, 0x01	; 1
    ab6e:	0e 94 f1 54 	call	0xa9e2	; 0xa9e2 <_ZL17LED_set_RED_levelb>
    ab72:	80 91 bd 46 	lds	r24, 0x46BD	; 0x8046bd <_ZL15red_blink_count>
    ab76:	90 91 be 46 	lds	r25, 0x46BE	; 0x8046be <_ZL15red_blink_count+0x1>
    ab7a:	01 97       	sbiw	r24, 0x01	; 1
    ab7c:	80 93 bd 46 	sts	0x46BD, r24	; 0x8046bd <_ZL15red_blink_count>
    ab80:	90 93 be 46 	sts	0x46BE, r25	; 0x8046be <_ZL15red_blink_count+0x1>
    ab84:	17 c0       	rjmp	.+46     	; 0xabb4 <__vector_41+0x162>
    ab86:	80 91 bd 46 	lds	r24, 0x46BD	; 0x8046bd <_ZL15red_blink_count>
    ab8a:	90 91 be 46 	lds	r25, 0x46BE	; 0x8046be <_ZL15red_blink_count+0x1>
    ab8e:	21 e0       	ldi	r18, 0x01	; 1
    ab90:	8f 3f       	cpi	r24, 0xFF	; 255
    ab92:	9f 4f       	sbci	r25, 0xFF	; 255
    ab94:	0c f0       	brlt	.+2      	; 0xab98 <__vector_41+0x146>
    ab96:	20 e0       	ldi	r18, 0x00	; 0
    ab98:	22 23       	and	r18, r18
    ab9a:	61 f0       	breq	.+24     	; 0xabb4 <__vector_41+0x162>
    ab9c:	80 e0       	ldi	r24, 0x00	; 0
    ab9e:	0e 94 f1 54 	call	0xa9e2	; 0xa9e2 <_ZL17LED_set_RED_levelb>
    aba2:	80 91 bd 46 	lds	r24, 0x46BD	; 0x8046bd <_ZL15red_blink_count>
    aba6:	90 91 be 46 	lds	r25, 0x46BE	; 0x8046be <_ZL15red_blink_count+0x1>
    abaa:	01 96       	adiw	r24, 0x01	; 1
    abac:	80 93 bd 46 	sts	0x46BD, r24	; 0x8046bd <_ZL15red_blink_count>
    abb0:	90 93 be 46 	sts	0x46BE, r25	; 0x8046be <_ZL15red_blink_count+0x1>
    abb4:	80 91 bd 46 	lds	r24, 0x46BD	; 0x8046bd <_ZL15red_blink_count>
    abb8:	90 91 be 46 	lds	r25, 0x46BE	; 0x8046be <_ZL15red_blink_count+0x1>
    abbc:	21 e0       	ldi	r18, 0x01	; 1
    abbe:	01 97       	sbiw	r24, 0x01	; 1
    abc0:	09 f0       	breq	.+2      	; 0xabc4 <__vector_41+0x172>
    abc2:	20 e0       	ldi	r18, 0x00	; 0
    abc4:	22 23       	and	r18, r18
    abc6:	f9 f0       	breq	.+62     	; 0xac06 <__vector_41+0x1b4>
    abc8:	80 91 b7 46 	lds	r24, 0x46B7	; 0x8046b7 <_ZL20red_blink_off_period>
    abcc:	90 91 b8 46 	lds	r25, 0x46B8	; 0x8046b8 <_ZL20red_blink_off_period+0x1>
    abd0:	21 e0       	ldi	r18, 0x01	; 1
    abd2:	89 2b       	or	r24, r25
    abd4:	09 f4       	brne	.+2      	; 0xabd8 <__vector_41+0x186>
    abd6:	20 e0       	ldi	r18, 0x00	; 0
    abd8:	22 23       	and	r18, r18
    abda:	61 f0       	breq	.+24     	; 0xabf4 <__vector_41+0x1a2>
    abdc:	80 91 b7 46 	lds	r24, 0x46B7	; 0x8046b7 <_ZL20red_blink_off_period>
    abe0:	90 91 b8 46 	lds	r25, 0x46B8	; 0x8046b8 <_ZL20red_blink_off_period+0x1>
    abe4:	91 95       	neg	r25
    abe6:	81 95       	neg	r24
    abe8:	91 09       	sbc	r25, r1
    abea:	80 93 bd 46 	sts	0x46BD, r24	; 0x8046bd <_ZL15red_blink_count>
    abee:	90 93 be 46 	sts	0x46BE, r25	; 0x8046be <_ZL15red_blink_count+0x1>
    abf2:	23 c0       	rjmp	.+70     	; 0xac3a <__vector_41+0x1e8>
    abf4:	80 91 b5 46 	lds	r24, 0x46B5	; 0x8046b5 <_ZL19red_blink_on_period>
    abf8:	90 91 b6 46 	lds	r25, 0x46B6	; 0x8046b6 <_ZL19red_blink_on_period+0x1>
    abfc:	80 93 bd 46 	sts	0x46BD, r24	; 0x8046bd <_ZL15red_blink_count>
    ac00:	90 93 be 46 	sts	0x46BE, r25	; 0x8046be <_ZL15red_blink_count+0x1>
    ac04:	1a c0       	rjmp	.+52     	; 0xac3a <__vector_41+0x1e8>
    ac06:	80 91 bd 46 	lds	r24, 0x46BD	; 0x8046bd <_ZL15red_blink_count>
    ac0a:	90 91 be 46 	lds	r25, 0x46BE	; 0x8046be <_ZL15red_blink_count+0x1>
    ac0e:	21 e0       	ldi	r18, 0x01	; 1
    ac10:	01 96       	adiw	r24, 0x01	; 1
    ac12:	09 f0       	breq	.+2      	; 0xac16 <__vector_41+0x1c4>
    ac14:	20 e0       	ldi	r18, 0x00	; 0
    ac16:	22 23       	and	r18, r18
    ac18:	81 f0       	breq	.+32     	; 0xac3a <__vector_41+0x1e8>
    ac1a:	80 91 b5 46 	lds	r24, 0x46B5	; 0x8046b5 <_ZL19red_blink_on_period>
    ac1e:	90 91 b6 46 	lds	r25, 0x46B6	; 0x8046b6 <_ZL19red_blink_on_period+0x1>
    ac22:	80 93 bd 46 	sts	0x46BD, r24	; 0x8046bd <_ZL15red_blink_count>
    ac26:	90 93 be 46 	sts	0x46BE, r25	; 0x8046be <_ZL15red_blink_count+0x1>
    ac2a:	07 c0       	rjmp	.+14     	; 0xac3a <__vector_41+0x1e8>
    ac2c:	80 91 c1 46 	lds	r24, 0x46C1	; 0x8046c1 <_ZL18red_led_configured>
    ac30:	88 23       	and	r24, r24
    ac32:	19 f0       	breq	.+6      	; 0xac3a <__vector_41+0x1e8>
    ac34:	80 e0       	ldi	r24, 0x00	; 0
    ac36:	0e 94 f1 54 	call	0xa9e2	; 0xa9e2 <_ZL17LED_set_RED_levelb>
    ac3a:	80 91 bf 46 	lds	r24, 0x46BF	; 0x8046bf <_ZL17green_blink_count>
    ac3e:	90 91 c0 46 	lds	r25, 0x46C0	; 0x8046c0 <_ZL17green_blink_count+0x1>
    ac42:	21 e0       	ldi	r18, 0x01	; 1
    ac44:	89 2b       	or	r24, r25
    ac46:	09 f4       	brne	.+2      	; 0xac4a <__vector_41+0x1f8>
    ac48:	20 e0       	ldi	r18, 0x00	; 0
    ac4a:	22 23       	and	r18, r18
    ac4c:	09 f4       	brne	.+2      	; 0xac50 <__vector_41+0x1fe>
    ac4e:	6a c0       	rjmp	.+212    	; 0xad24 <__vector_41+0x2d2>
    ac50:	80 91 bf 46 	lds	r24, 0x46BF	; 0x8046bf <_ZL17green_blink_count>
    ac54:	90 91 c0 46 	lds	r25, 0x46C0	; 0x8046c0 <_ZL17green_blink_count+0x1>
    ac58:	21 e0       	ldi	r18, 0x01	; 1
    ac5a:	02 97       	sbiw	r24, 0x02	; 2
    ac5c:	0c f4       	brge	.+2      	; 0xac60 <__vector_41+0x20e>
    ac5e:	20 e0       	ldi	r18, 0x00	; 0
    ac60:	22 23       	and	r18, r18
    ac62:	69 f0       	breq	.+26     	; 0xac7e <__vector_41+0x22c>
    ac64:	81 e0       	ldi	r24, 0x01	; 1
    ac66:	0e 94 00 55 	call	0xaa00	; 0xaa00 <_ZL19LED_set_GREEN_levelb>
    ac6a:	80 91 bf 46 	lds	r24, 0x46BF	; 0x8046bf <_ZL17green_blink_count>
    ac6e:	90 91 c0 46 	lds	r25, 0x46C0	; 0x8046c0 <_ZL17green_blink_count+0x1>
    ac72:	01 97       	sbiw	r24, 0x01	; 1
    ac74:	80 93 bf 46 	sts	0x46BF, r24	; 0x8046bf <_ZL17green_blink_count>
    ac78:	90 93 c0 46 	sts	0x46C0, r25	; 0x8046c0 <_ZL17green_blink_count+0x1>
    ac7c:	17 c0       	rjmp	.+46     	; 0xacac <__vector_41+0x25a>
    ac7e:	80 91 bf 46 	lds	r24, 0x46BF	; 0x8046bf <_ZL17green_blink_count>
    ac82:	90 91 c0 46 	lds	r25, 0x46C0	; 0x8046c0 <_ZL17green_blink_count+0x1>
    ac86:	21 e0       	ldi	r18, 0x01	; 1
    ac88:	8f 3f       	cpi	r24, 0xFF	; 255
    ac8a:	9f 4f       	sbci	r25, 0xFF	; 255
    ac8c:	0c f0       	brlt	.+2      	; 0xac90 <__vector_41+0x23e>
    ac8e:	20 e0       	ldi	r18, 0x00	; 0
    ac90:	22 23       	and	r18, r18
    ac92:	61 f0       	breq	.+24     	; 0xacac <__vector_41+0x25a>
    ac94:	80 e0       	ldi	r24, 0x00	; 0
    ac96:	0e 94 00 55 	call	0xaa00	; 0xaa00 <_ZL19LED_set_GREEN_levelb>
    ac9a:	80 91 bf 46 	lds	r24, 0x46BF	; 0x8046bf <_ZL17green_blink_count>
    ac9e:	90 91 c0 46 	lds	r25, 0x46C0	; 0x8046c0 <_ZL17green_blink_count+0x1>
    aca2:	01 96       	adiw	r24, 0x01	; 1
    aca4:	80 93 bf 46 	sts	0x46BF, r24	; 0x8046bf <_ZL17green_blink_count>
    aca8:	90 93 c0 46 	sts	0x46C0, r25	; 0x8046c0 <_ZL17green_blink_count+0x1>
    acac:	80 91 bf 46 	lds	r24, 0x46BF	; 0x8046bf <_ZL17green_blink_count>
    acb0:	90 91 c0 46 	lds	r25, 0x46C0	; 0x8046c0 <_ZL17green_blink_count+0x1>
    acb4:	21 e0       	ldi	r18, 0x01	; 1
    acb6:	01 97       	sbiw	r24, 0x01	; 1
    acb8:	09 f0       	breq	.+2      	; 0xacbc <__vector_41+0x26a>
    acba:	20 e0       	ldi	r18, 0x00	; 0
    acbc:	22 23       	and	r18, r18
    acbe:	f9 f0       	breq	.+62     	; 0xacfe <__vector_41+0x2ac>
    acc0:	80 91 bb 46 	lds	r24, 0x46BB	; 0x8046bb <_ZL22green_blink_off_period>
    acc4:	90 91 bc 46 	lds	r25, 0x46BC	; 0x8046bc <_ZL22green_blink_off_period+0x1>
    acc8:	21 e0       	ldi	r18, 0x01	; 1
    acca:	89 2b       	or	r24, r25
    accc:	09 f4       	brne	.+2      	; 0xacd0 <__vector_41+0x27e>
    acce:	20 e0       	ldi	r18, 0x00	; 0
    acd0:	22 23       	and	r18, r18
    acd2:	61 f0       	breq	.+24     	; 0xacec <__vector_41+0x29a>
    acd4:	80 91 bb 46 	lds	r24, 0x46BB	; 0x8046bb <_ZL22green_blink_off_period>
    acd8:	90 91 bc 46 	lds	r25, 0x46BC	; 0x8046bc <_ZL22green_blink_off_period+0x1>
    acdc:	91 95       	neg	r25
    acde:	81 95       	neg	r24
    ace0:	91 09       	sbc	r25, r1
    ace2:	80 93 bf 46 	sts	0x46BF, r24	; 0x8046bf <_ZL17green_blink_count>
    ace6:	90 93 c0 46 	sts	0x46C0, r25	; 0x8046c0 <_ZL17green_blink_count+0x1>
    acea:	2a c0       	rjmp	.+84     	; 0xad40 <__vector_41+0x2ee>
    acec:	80 91 b9 46 	lds	r24, 0x46B9	; 0x8046b9 <_ZL21green_blink_on_period>
    acf0:	90 91 ba 46 	lds	r25, 0x46BA	; 0x8046ba <_ZL21green_blink_on_period+0x1>
    acf4:	80 93 bf 46 	sts	0x46BF, r24	; 0x8046bf <_ZL17green_blink_count>
    acf8:	90 93 c0 46 	sts	0x46C0, r25	; 0x8046c0 <_ZL17green_blink_count+0x1>
    acfc:	21 c0       	rjmp	.+66     	; 0xad40 <__vector_41+0x2ee>
    acfe:	80 91 bf 46 	lds	r24, 0x46BF	; 0x8046bf <_ZL17green_blink_count>
    ad02:	90 91 c0 46 	lds	r25, 0x46C0	; 0x8046c0 <_ZL17green_blink_count+0x1>
    ad06:	21 e0       	ldi	r18, 0x01	; 1
    ad08:	01 96       	adiw	r24, 0x01	; 1
    ad0a:	09 f0       	breq	.+2      	; 0xad0e <__vector_41+0x2bc>
    ad0c:	20 e0       	ldi	r18, 0x00	; 0
    ad0e:	22 23       	and	r18, r18
    ad10:	b9 f0       	breq	.+46     	; 0xad40 <__vector_41+0x2ee>
    ad12:	80 91 b9 46 	lds	r24, 0x46B9	; 0x8046b9 <_ZL21green_blink_on_period>
    ad16:	90 91 ba 46 	lds	r25, 0x46BA	; 0x8046ba <_ZL21green_blink_on_period+0x1>
    ad1a:	80 93 bf 46 	sts	0x46BF, r24	; 0x8046bf <_ZL17green_blink_count>
    ad1e:	90 93 c0 46 	sts	0x46C0, r25	; 0x8046c0 <_ZL17green_blink_count+0x1>
    ad22:	0e c0       	rjmp	.+28     	; 0xad40 <__vector_41+0x2ee>
    ad24:	80 91 c2 46 	lds	r24, 0x46C2	; 0x8046c2 <_ZL20green_led_configured>
    ad28:	88 23       	and	r24, r24
    ad2a:	51 f0       	breq	.+20     	; 0xad40 <__vector_41+0x2ee>
    ad2c:	80 e0       	ldi	r24, 0x00	; 0
    ad2e:	0e 94 00 55 	call	0xaa00	; 0xaa00 <_ZL19LED_set_GREEN_levelb>
    ad32:	06 c0       	rjmp	.+12     	; 0xad40 <__vector_41+0x2ee>
    ad34:	80 e0       	ldi	r24, 0x00	; 0
    ad36:	0e 94 f1 54 	call	0xa9e2	; 0xa9e2 <_ZL17LED_set_RED_levelb>
    ad3a:	80 e0       	ldi	r24, 0x00	; 0
    ad3c:	0e 94 00 55 	call	0xaa00	; 0xaa00 <_ZL19LED_set_GREEN_levelb>
    ad40:	80 e3       	ldi	r24, 0x30	; 48
    ad42:	9b e0       	ldi	r25, 0x0B	; 11
    ad44:	23 e0       	ldi	r18, 0x03	; 3
    ad46:	fc 01       	movw	r30, r24
    ad48:	26 83       	std	Z+6, r18	; 0x06
    ad4a:	00 00       	nop
    ad4c:	0f 90       	pop	r0
    ad4e:	df 91       	pop	r29
    ad50:	cf 91       	pop	r28
    ad52:	ff 91       	pop	r31
    ad54:	ef 91       	pop	r30
    ad56:	bf 91       	pop	r27
    ad58:	af 91       	pop	r26
    ad5a:	9f 91       	pop	r25
    ad5c:	8f 91       	pop	r24
    ad5e:	7f 91       	pop	r23
    ad60:	6f 91       	pop	r22
    ad62:	5f 91       	pop	r21
    ad64:	4f 91       	pop	r20
    ad66:	3f 91       	pop	r19
    ad68:	2f 91       	pop	r18
    ad6a:	0f 90       	pop	r0
    ad6c:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    ad70:	0f 90       	pop	r0
    ad72:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    ad76:	0f 90       	pop	r0
    ad78:	1f 90       	pop	r1
    ad7a:	18 95       	reti

0000ad7c <_ZN4leds6activeEv>:
    ad7c:	cf 93       	push	r28
    ad7e:	df 93       	push	r29
    ad80:	00 d0       	rcall	.+0      	; 0xad82 <_ZN4leds6activeEv+0x6>
    ad82:	cd b7       	in	r28, 0x3d	; 61
    ad84:	de b7       	in	r29, 0x3e	; 62
    ad86:	89 83       	std	Y+1, r24	; 0x01
    ad88:	9a 83       	std	Y+2, r25	; 0x02
    ad8a:	80 91 49 40 	lds	r24, 0x4049	; 0x804049 <_ZL17led_timeout_count>
    ad8e:	90 91 4a 40 	lds	r25, 0x404A	; 0x80404a <_ZL17led_timeout_count+0x1>
    ad92:	a0 91 4b 40 	lds	r26, 0x404B	; 0x80404b <_ZL17led_timeout_count+0x2>
    ad96:	b0 91 4c 40 	lds	r27, 0x404C	; 0x80404c <_ZL17led_timeout_count+0x3>
    ad9a:	89 2b       	or	r24, r25
    ad9c:	8a 2b       	or	r24, r26
    ad9e:	8b 2b       	or	r24, r27
    ada0:	61 f0       	breq	.+24     	; 0xadba <_ZN4leds6activeEv+0x3e>
    ada2:	80 e3       	ldi	r24, 0x30	; 48
    ada4:	9b e0       	ldi	r25, 0x0B	; 11
    ada6:	fc 01       	movw	r30, r24
    ada8:	85 81       	ldd	r24, Z+5	; 0x05
    adaa:	88 2f       	mov	r24, r24
    adac:	90 e0       	ldi	r25, 0x00	; 0
    adae:	81 70       	andi	r24, 0x01	; 1
    adb0:	99 27       	eor	r25, r25
    adb2:	89 2b       	or	r24, r25
    adb4:	11 f0       	breq	.+4      	; 0xadba <_ZN4leds6activeEv+0x3e>
    adb6:	81 e0       	ldi	r24, 0x01	; 1
    adb8:	01 c0       	rjmp	.+2      	; 0xadbc <_ZN4leds6activeEv+0x40>
    adba:	80 e0       	ldi	r24, 0x00	; 0
    adbc:	0f 90       	pop	r0
    adbe:	0f 90       	pop	r0
    adc0:	df 91       	pop	r29
    adc2:	cf 91       	pop	r28
    adc4:	08 95       	ret

0000adc6 <_ZN4leds6setRedEb>:
    adc6:	cf 93       	push	r28
    adc8:	df 93       	push	r29
    adca:	00 d0       	rcall	.+0      	; 0xadcc <_ZN4leds6setRedEb+0x6>
    adcc:	1f 92       	push	r1
    adce:	cd b7       	in	r28, 0x3d	; 61
    add0:	de b7       	in	r29, 0x3e	; 62
    add2:	89 83       	std	Y+1, r24	; 0x01
    add4:	9a 83       	std	Y+2, r25	; 0x02
    add6:	6b 83       	std	Y+3, r22	; 0x03
    add8:	80 91 49 40 	lds	r24, 0x4049	; 0x804049 <_ZL17led_timeout_count>
    addc:	90 91 4a 40 	lds	r25, 0x404A	; 0x80404a <_ZL17led_timeout_count+0x1>
    ade0:	a0 91 4b 40 	lds	r26, 0x404B	; 0x80404b <_ZL17led_timeout_count+0x2>
    ade4:	b0 91 4c 40 	lds	r27, 0x404C	; 0x80404c <_ZL17led_timeout_count+0x3>
    ade8:	21 e0       	ldi	r18, 0x01	; 1
    adea:	89 2b       	or	r24, r25
    adec:	8a 2b       	or	r24, r26
    adee:	8b 2b       	or	r24, r27
    adf0:	09 f0       	breq	.+2      	; 0xadf4 <_ZN4leds6setRedEb+0x2e>
    adf2:	20 e0       	ldi	r18, 0x00	; 0
    adf4:	22 23       	and	r18, r18
    adf6:	59 f4       	brne	.+22     	; 0xae0e <_ZN4leds6setRedEb+0x48>
    adf8:	8b 81       	ldd	r24, Y+3	; 0x03
    adfa:	88 23       	and	r24, r24
    adfc:	21 f0       	breq	.+8      	; 0xae06 <_ZN4leds6setRedEb+0x40>
    adfe:	81 e0       	ldi	r24, 0x01	; 1
    ae00:	0e 94 f1 54 	call	0xa9e2	; 0xa9e2 <_ZL17LED_set_RED_levelb>
    ae04:	05 c0       	rjmp	.+10     	; 0xae10 <_ZN4leds6setRedEb+0x4a>
    ae06:	80 e0       	ldi	r24, 0x00	; 0
    ae08:	0e 94 f1 54 	call	0xa9e2	; 0xa9e2 <_ZL17LED_set_RED_levelb>
    ae0c:	01 c0       	rjmp	.+2      	; 0xae10 <_ZN4leds6setRedEb+0x4a>
    ae0e:	00 00       	nop
    ae10:	23 96       	adiw	r28, 0x03	; 3
    ae12:	cd bf       	out	0x3d, r28	; 61
    ae14:	de bf       	out	0x3e, r29	; 62
    ae16:	df 91       	pop	r29
    ae18:	cf 91       	pop	r28
    ae1a:	08 95       	ret

0000ae1c <_ZN4leds5resetEv>:

/* Turns off LEDs, resets the text buffer, and disables LED character transmissions. Re-enables LED timer blink functionality. */
void leds::reset(void)
{
    ae1c:	cf 93       	push	r28
    ae1e:	df 93       	push	r29
    ae20:	00 d0       	rcall	.+0      	; 0xae22 <_ZN4leds5resetEv+0x6>
    ae22:	cd b7       	in	r28, 0x3d	; 61
    ae24:	de b7       	in	r29, 0x3e	; 62
    ae26:	89 83       	std	Y+1, r24	; 0x01
    ae28:	9a 83       	std	Y+2, r25	; 0x02
	blink(LEDS_OFF);
    ae2a:	89 81       	ldd	r24, Y+1	; 0x01
    ae2c:	9a 81       	ldd	r25, Y+2	; 0x02
    ae2e:	60 e0       	ldi	r22, 0x00	; 0
    ae30:	0e 94 f9 57 	call	0xaff2	; 0xaff2 <_ZN4leds5blinkE7Blink_t>
	g_text_buff.reset();
    ae34:	8c e6       	ldi	r24, 0x6C	; 108
    ae36:	96 e4       	ldi	r25, 0x46	; 70
    ae38:	0e 94 1d 3a 	call	0x743a	; 0x743a <_ZN18CircularStringBuff5resetEv>
	g_enable_manual_transmissions = false;
    ae3c:	10 92 82 46 	sts	0x4682, r1	; 0x804682 <g_enable_manual_transmissions>
	timer_blink_inhibit = false; /* Enable timer LED control */
    ae40:	10 92 b1 46 	sts	0x46B1, r1	; 0x8046b1 <_ZL19timer_blink_inhibit>
	led_timeout_count = LED_TIMEOUT_DELAY;
    ae44:	80 e2       	ldi	r24, 0x20	; 32
    ae46:	9f eb       	ldi	r25, 0xBF	; 191
    ae48:	a2 e0       	ldi	r26, 0x02	; 2
    ae4a:	b0 e0       	ldi	r27, 0x00	; 0
    ae4c:	80 93 49 40 	sts	0x4049, r24	; 0x804049 <_ZL17led_timeout_count>
    ae50:	90 93 4a 40 	sts	0x404A, r25	; 0x80404a <_ZL17led_timeout_count+0x1>
    ae54:	a0 93 4b 40 	sts	0x404B, r26	; 0x80404b <_ZL17led_timeout_count+0x2>
    ae58:	b0 93 4c 40 	sts	0x404C, r27	; 0x80404c <_ZL17led_timeout_count+0x3>
}
    ae5c:	00 00       	nop
    ae5e:	0f 90       	pop	r0
    ae60:	0f 90       	pop	r0
    ae62:	df 91       	pop	r29
    ae64:	cf 91       	pop	r28
    ae66:	08 95       	ret

0000ae68 <_ZN4leds4initEv>:

/* Disables LED timer while resetting settings for interrupt safety. */
void leds::init(void)
{
    ae68:	cf 93       	push	r28
    ae6a:	df 93       	push	r29
    ae6c:	00 d0       	rcall	.+0      	; 0xae6e <_ZN4leds4initEv+0x6>
    ae6e:	cd b7       	in	r28, 0x3d	; 61
    ae70:	de b7       	in	r29, 0x3e	; 62
    ae72:	89 83       	std	Y+1, r24	; 0x01
    ae74:	9a 83       	std	Y+2, r25	; 0x02
	init(LEDS_OFF);
    ae76:	89 81       	ldd	r24, Y+1	; 0x01
    ae78:	9a 81       	ldd	r25, Y+2	; 0x02
    ae7a:	60 e0       	ldi	r22, 0x00	; 0
    ae7c:	0e 94 46 57 	call	0xae8c	; 0xae8c <_ZN4leds4initE7Blink_t>
}
    ae80:	00 00       	nop
    ae82:	0f 90       	pop	r0
    ae84:	0f 90       	pop	r0
    ae86:	df 91       	pop	r29
    ae88:	cf 91       	pop	r28
    ae8a:	08 95       	ret

0000ae8c <_ZN4leds4initE7Blink_t>:

void leds::init(Blink_t setBlink)
{
    ae8c:	cf 93       	push	r28
    ae8e:	df 93       	push	r29
    ae90:	00 d0       	rcall	.+0      	; 0xae92 <_ZN4leds4initE7Blink_t+0x6>
    ae92:	1f 92       	push	r1
    ae94:	cd b7       	in	r28, 0x3d	; 61
    ae96:	de b7       	in	r29, 0x3e	; 62
    ae98:	89 83       	std	Y+1, r24	; 0x01
    ae9a:	9a 83       	std	Y+2, r25	; 0x02
    ae9c:	6b 83       	std	Y+3, r22	; 0x03
	TCB1.INTCTRL &= ~TCB_CAPT_bm; /* Disable timer interrupt */
    ae9e:	80 e1       	ldi	r24, 0x10	; 16
    aea0:	9b e0       	ldi	r25, 0x0B	; 11
    aea2:	20 e1       	ldi	r18, 0x10	; 16
    aea4:	3b e0       	ldi	r19, 0x0B	; 11
    aea6:	f9 01       	movw	r30, r18
    aea8:	25 81       	ldd	r18, Z+5	; 0x05
    aeaa:	2e 7f       	andi	r18, 0xFE	; 254
    aeac:	fc 01       	movw	r30, r24
    aeae:	25 83       	std	Z+5, r18	; 0x05
	reset();
    aeb0:	89 81       	ldd	r24, Y+1	; 0x01
    aeb2:	9a 81       	ldd	r25, Y+2	; 0x02
    aeb4:	0e 94 0e 57 	call	0xae1c	; 0xae1c <_ZN4leds5resetEv>
	TCB1.INTCTRL |= TCB_CAPT_bm;   /* Capture or Timeout: enabled */
    aeb8:	80 e1       	ldi	r24, 0x10	; 16
    aeba:	9b e0       	ldi	r25, 0x0B	; 11
    aebc:	20 e1       	ldi	r18, 0x10	; 16
    aebe:	3b e0       	ldi	r19, 0x0B	; 11
    aec0:	f9 01       	movw	r30, r18
    aec2:	25 81       	ldd	r18, Z+5	; 0x05
    aec4:	21 60       	ori	r18, 0x01	; 1
    aec6:	fc 01       	movw	r30, r24
    aec8:	25 83       	std	Z+5, r18	; 0x05
	if(setBlink != LEDS_OFF) blink(setBlink, true);
    aeca:	8b 81       	ldd	r24, Y+3	; 0x03
    aecc:	88 23       	and	r24, r24
    aece:	31 f0       	breq	.+12     	; 0xaedc <_ZN4leds4initE7Blink_t+0x50>
    aed0:	89 81       	ldd	r24, Y+1	; 0x01
    aed2:	9a 81       	ldd	r25, Y+2	; 0x02
    aed4:	41 e0       	ldi	r20, 0x01	; 1
    aed6:	6b 81       	ldd	r22, Y+3	; 0x03
    aed8:	0e 94 0f 58 	call	0xb01e	; 0xb01e <_ZN4leds5blinkE7Blink_tb>
}
    aedc:	00 00       	nop
    aede:	23 96       	adiw	r28, 0x03	; 3
    aee0:	cd bf       	out	0x3d, r28	; 61
    aee2:	de bf       	out	0x3e, r29	; 62
    aee4:	df 91       	pop	r29
    aee6:	cf 91       	pop	r28
    aee8:	08 95       	ret

0000aeea <_ZN4leds8sendCodeEPc>:

void leds::sendCode(char* str)
{
    aeea:	cf 93       	push	r28
    aeec:	df 93       	push	r29
    aeee:	cd b7       	in	r28, 0x3d	; 61
    aef0:	de b7       	in	r29, 0x3e	; 62
    aef2:	2a 97       	sbiw	r28, 0x0a	; 10
    aef4:	cd bf       	out	0x3d, r28	; 61
    aef6:	de bf       	out	0x3e, r29	; 62
    aef8:	8f 83       	std	Y+7, r24	; 0x07
    aefa:	98 87       	std	Y+8, r25	; 0x08
    aefc:	69 87       	std	Y+9, r22	; 0x09
    aefe:	7a 87       	std	Y+10, r23	; 0x0a
	if(!led_timeout_count) return;
    af00:	80 91 49 40 	lds	r24, 0x4049	; 0x804049 <_ZL17led_timeout_count>
    af04:	90 91 4a 40 	lds	r25, 0x404A	; 0x80404a <_ZL17led_timeout_count+0x1>
    af08:	a0 91 4b 40 	lds	r26, 0x404B	; 0x80404b <_ZL17led_timeout_count+0x2>
    af0c:	b0 91 4c 40 	lds	r27, 0x404C	; 0x80404c <_ZL17led_timeout_count+0x3>
    af10:	21 e0       	ldi	r18, 0x01	; 1
    af12:	89 2b       	or	r24, r25
    af14:	8a 2b       	or	r24, r26
    af16:	8b 2b       	or	r24, r27
    af18:	09 f0       	breq	.+2      	; 0xaf1c <_ZN4leds8sendCodeEPc+0x32>
    af1a:	20 e0       	ldi	r18, 0x00	; 0
    af1c:	22 23       	and	r18, r18
    af1e:	09 f0       	breq	.+2      	; 0xaf22 <_ZN4leds8sendCodeEPc+0x38>
    af20:	5d c0       	rjmp	.+186    	; 0xafdc <_ZN4leds8sendCodeEPc+0xf2>
	if(g_text_buff.isBusy()) return;
    af22:	8c e6       	ldi	r24, 0x6C	; 108
    af24:	96 e4       	ldi	r25, 0x46	; 70
    af26:	0e 94 7d 3a 	call	0x74fa	; 0x74fa <_ZN18CircularStringBuff6isBusyEv>
    af2a:	88 23       	and	r24, r24
    af2c:	09 f0       	breq	.+2      	; 0xaf30 <_ZN4leds8sendCodeEPc+0x46>
    af2e:	58 c0       	rjmp	.+176    	; 0xafe0 <_ZN4leds8sendCodeEPc+0xf6>
	
	if(!str || !strlen(str))
    af30:	89 85       	ldd	r24, Y+9	; 0x09
    af32:	9a 85       	ldd	r25, Y+10	; 0x0a
    af34:	89 2b       	or	r24, r25
    af36:	09 f4       	brne	.+2      	; 0xaf3a <_ZN4leds8sendCodeEPc+0x50>
    af38:	55 c0       	rjmp	.+170    	; 0xafe4 <_ZN4leds8sendCodeEPc+0xfa>
    af3a:	89 85       	ldd	r24, Y+9	; 0x09
    af3c:	9a 85       	ldd	r25, Y+10	; 0x0a
    af3e:	fc 01       	movw	r30, r24
    af40:	80 81       	ld	r24, Z
    af42:	88 23       	and	r24, r24
    af44:	09 f4       	brne	.+2      	; 0xaf48 <_ZN4leds8sendCodeEPc+0x5e>
    af46:	4e c0       	rjmp	.+156    	; 0xafe4 <_ZN4leds8sendCodeEPc+0xfa>
	{
		return;
	}

	int lenstr = strlen(str);					
    af48:	89 85       	ldd	r24, Y+9	; 0x09
    af4a:	9a 85       	ldd	r25, Y+10	; 0x0a
    af4c:	0e 94 54 7f 	call	0xfea8	; 0xfea8 <strlen>
    af50:	8b 83       	std	Y+3, r24	; 0x03
    af52:	9c 83       	std	Y+4, r25	; 0x04
	int i = 0;
    af54:	19 82       	std	Y+1, r1	; 0x01
    af56:	1a 82       	std	Y+2, r1	; 0x02

	bool holdMan = g_enable_manual_transmissions;
    af58:	80 91 82 46 	lds	r24, 0x4682	; 0x804682 <g_enable_manual_transmissions>
    af5c:	8d 83       	std	Y+5, r24	; 0x05
	bool holdEnum = g_enable_LED_enunciations;
    af5e:	80 91 21 40 	lds	r24, 0x4021	; 0x804021 <g_enable_LED_enunciations>
    af62:	8e 83       	std	Y+6, r24	; 0x06
	g_enable_manual_transmissions = false; /* simple thread collision avoidance */
    af64:	10 92 82 46 	sts	0x4682, r1	; 0x804682 <g_enable_manual_transmissions>
	g_enable_LED_enunciations = false; /* simple thread collision avoidance */
    af68:	10 92 21 40 	sts	0x4021, r1	; 0x804021 <g_enable_LED_enunciations>
	
	while(!g_text_buff.full() && i<lenstr && i<TEXT_BUFF_SIZE)
    af6c:	8c e6       	ldi	r24, 0x6C	; 108
    af6e:	96 e4       	ldi	r25, 0x46	; 70
    af70:	0e 94 8d 3a 	call	0x751a	; 0x751a <_ZNK18CircularStringBuff4fullEv>
    af74:	98 2f       	mov	r25, r24
    af76:	81 e0       	ldi	r24, 0x01	; 1
    af78:	89 27       	eor	r24, r25
    af7a:	88 23       	and	r24, r24
    af7c:	71 f0       	breq	.+28     	; 0xaf9a <_ZN4leds8sendCodeEPc+0xb0>
    af7e:	29 81       	ldd	r18, Y+1	; 0x01
    af80:	3a 81       	ldd	r19, Y+2	; 0x02
    af82:	8b 81       	ldd	r24, Y+3	; 0x03
    af84:	9c 81       	ldd	r25, Y+4	; 0x04
    af86:	28 17       	cp	r18, r24
    af88:	39 07       	cpc	r19, r25
    af8a:	3c f4       	brge	.+14     	; 0xaf9a <_ZN4leds8sendCodeEPc+0xb0>
    af8c:	89 81       	ldd	r24, Y+1	; 0x01
    af8e:	9a 81       	ldd	r25, Y+2	; 0x02
    af90:	84 36       	cpi	r24, 0x64	; 100
    af92:	91 05       	cpc	r25, r1
    af94:	14 f4       	brge	.+4      	; 0xaf9a <_ZN4leds8sendCodeEPc+0xb0>
    af96:	81 e0       	ldi	r24, 0x01	; 1
    af98:	01 c0       	rjmp	.+2      	; 0xaf9c <_ZN4leds8sendCodeEPc+0xb2>
    af9a:	80 e0       	ldi	r24, 0x00	; 0
    af9c:	88 23       	and	r24, r24
    af9e:	a1 f0       	breq	.+40     	; 0xafc8 <_ZN4leds8sendCodeEPc+0xde>
	{
		g_text_buff.put(str[i++]);
    afa0:	89 81       	ldd	r24, Y+1	; 0x01
    afa2:	9a 81       	ldd	r25, Y+2	; 0x02
    afa4:	9c 01       	movw	r18, r24
    afa6:	2f 5f       	subi	r18, 0xFF	; 255
    afa8:	3f 4f       	sbci	r19, 0xFF	; 255
    afaa:	29 83       	std	Y+1, r18	; 0x01
    afac:	3a 83       	std	Y+2, r19	; 0x02
    afae:	9c 01       	movw	r18, r24
    afb0:	89 85       	ldd	r24, Y+9	; 0x09
    afb2:	9a 85       	ldd	r25, Y+10	; 0x0a
    afb4:	82 0f       	add	r24, r18
    afb6:	93 1f       	adc	r25, r19
    afb8:	fc 01       	movw	r30, r24
    afba:	80 81       	ld	r24, Z
    afbc:	68 2f       	mov	r22, r24
    afbe:	8c e6       	ldi	r24, 0x6C	; 108
    afc0:	96 e4       	ldi	r25, 0x46	; 70
    afc2:	0e 94 9d 3a 	call	0x753a	; 0x753a <_ZN18CircularStringBuff3putEc>
	bool holdMan = g_enable_manual_transmissions;
	bool holdEnum = g_enable_LED_enunciations;
	g_enable_manual_transmissions = false; /* simple thread collision avoidance */
	g_enable_LED_enunciations = false; /* simple thread collision avoidance */
	
	while(!g_text_buff.full() && i<lenstr && i<TEXT_BUFF_SIZE)
    afc6:	d2 cf       	rjmp	.-92     	; 0xaf6c <_ZN4leds8sendCodeEPc+0x82>
	{
		g_text_buff.put(str[i++]);
	}
	
	timer_blink_inhibit = true; /* Prevent timer from controlling LED */
    afc8:	81 e0       	ldi	r24, 0x01	; 1
    afca:	80 93 b1 46 	sts	0x46B1, r24	; 0x8046b1 <_ZL19timer_blink_inhibit>
	g_enable_manual_transmissions = holdMan;
    afce:	8d 81       	ldd	r24, Y+5	; 0x05
    afd0:	80 93 82 46 	sts	0x4682, r24	; 0x804682 <g_enable_manual_transmissions>
	g_enable_LED_enunciations = holdEnum;
    afd4:	8e 81       	ldd	r24, Y+6	; 0x06
    afd6:	80 93 21 40 	sts	0x4021, r24	; 0x804021 <g_enable_LED_enunciations>
    afda:	05 c0       	rjmp	.+10     	; 0xafe6 <_ZN4leds8sendCodeEPc+0xfc>
	if(setBlink != LEDS_OFF) blink(setBlink, true);
}

void leds::sendCode(char* str)
{
	if(!led_timeout_count) return;
    afdc:	00 00       	nop
    afde:	03 c0       	rjmp	.+6      	; 0xafe6 <_ZN4leds8sendCodeEPc+0xfc>
	if(g_text_buff.isBusy()) return;
    afe0:	00 00       	nop
    afe2:	01 c0       	rjmp	.+2      	; 0xafe6 <_ZN4leds8sendCodeEPc+0xfc>
	
	if(!str || !strlen(str))
	{
		return;
    afe4:	00 00       	nop
	}
	
	timer_blink_inhibit = true; /* Prevent timer from controlling LED */
	g_enable_manual_transmissions = holdMan;
	g_enable_LED_enunciations = holdEnum;
}
    afe6:	2a 96       	adiw	r28, 0x0a	; 10
    afe8:	cd bf       	out	0x3d, r28	; 61
    afea:	de bf       	out	0x3e, r29	; 62
    afec:	df 91       	pop	r29
    afee:	cf 91       	pop	r28
    aff0:	08 95       	ret

0000aff2 <_ZN4leds5blinkE7Blink_t>:

void leds::blink(Blink_t blinkMode)
{
    aff2:	cf 93       	push	r28
    aff4:	df 93       	push	r29
    aff6:	00 d0       	rcall	.+0      	; 0xaff8 <_ZN4leds5blinkE7Blink_t+0x6>
    aff8:	1f 92       	push	r1
    affa:	cd b7       	in	r28, 0x3d	; 61
    affc:	de b7       	in	r29, 0x3e	; 62
    affe:	89 83       	std	Y+1, r24	; 0x01
    b000:	9a 83       	std	Y+2, r25	; 0x02
    b002:	6b 83       	std	Y+3, r22	; 0x03
	blink(blinkMode, false);
    b004:	89 81       	ldd	r24, Y+1	; 0x01
    b006:	9a 81       	ldd	r25, Y+2	; 0x02
    b008:	40 e0       	ldi	r20, 0x00	; 0
    b00a:	6b 81       	ldd	r22, Y+3	; 0x03
    b00c:	0e 94 0f 58 	call	0xb01e	; 0xb01e <_ZN4leds5blinkE7Blink_tb>
}
    b010:	00 00       	nop
    b012:	23 96       	adiw	r28, 0x03	; 3
    b014:	cd bf       	out	0x3d, r28	; 61
    b016:	de bf       	out	0x3e, r29	; 62
    b018:	df 91       	pop	r29
    b01a:	cf 91       	pop	r28
    b01c:	08 95       	ret

0000b01e <_ZN4leds5blinkE7Blink_tb>:

void leds::blink(Blink_t blinkMode, bool resetTimeout)
{
    b01e:	cf 93       	push	r28
    b020:	df 93       	push	r29
    b022:	00 d0       	rcall	.+0      	; 0xb024 <_ZN4leds5blinkE7Blink_tb+0x6>
    b024:	00 d0       	rcall	.+0      	; 0xb026 <_ZN4leds5blinkE7Blink_tb+0x8>
    b026:	cd b7       	in	r28, 0x3d	; 61
    b028:	de b7       	in	r29, 0x3e	; 62
    b02a:	89 83       	std	Y+1, r24	; 0x01
    b02c:	9a 83       	std	Y+2, r25	; 0x02
    b02e:	6b 83       	std	Y+3, r22	; 0x03
    b030:	4c 83       	std	Y+4, r20	; 0x04
	if(resetTimeout)
    b032:	8c 81       	ldd	r24, Y+4	; 0x04
    b034:	88 23       	and	r24, r24
    b036:	61 f0       	breq	.+24     	; 0xb050 <_ZN4leds5blinkE7Blink_tb+0x32>
	{
		led_timeout_count = LED_TIMEOUT_DELAY;
    b038:	80 e2       	ldi	r24, 0x20	; 32
    b03a:	9f eb       	ldi	r25, 0xBF	; 191
    b03c:	a2 e0       	ldi	r26, 0x02	; 2
    b03e:	b0 e0       	ldi	r27, 0x00	; 0
    b040:	80 93 49 40 	sts	0x4049, r24	; 0x804049 <_ZL17led_timeout_count>
    b044:	90 93 4a 40 	sts	0x404A, r25	; 0x80404a <_ZL17led_timeout_count+0x1>
    b048:	a0 93 4b 40 	sts	0x404B, r26	; 0x80404b <_ZL17led_timeout_count+0x2>
    b04c:	b0 93 4c 40 	sts	0x404C, r27	; 0x80404c <_ZL17led_timeout_count+0x3>
	}
	
	if(!led_timeout_count && (blinkMode != LEDS_OFF)) return;
    b050:	80 91 49 40 	lds	r24, 0x4049	; 0x804049 <_ZL17led_timeout_count>
    b054:	90 91 4a 40 	lds	r25, 0x404A	; 0x80404a <_ZL17led_timeout_count+0x1>
    b058:	a0 91 4b 40 	lds	r26, 0x404B	; 0x80404b <_ZL17led_timeout_count+0x2>
    b05c:	b0 91 4c 40 	lds	r27, 0x404C	; 0x80404c <_ZL17led_timeout_count+0x3>
    b060:	89 2b       	or	r24, r25
    b062:	8a 2b       	or	r24, r26
    b064:	8b 2b       	or	r24, r27
    b066:	29 f4       	brne	.+10     	; 0xb072 <_ZN4leds5blinkE7Blink_tb+0x54>
    b068:	8b 81       	ldd	r24, Y+3	; 0x03
    b06a:	88 23       	and	r24, r24
    b06c:	11 f0       	breq	.+4      	; 0xb072 <_ZN4leds5blinkE7Blink_tb+0x54>
    b06e:	81 e0       	ldi	r24, 0x01	; 1
    b070:	01 c0       	rjmp	.+2      	; 0xb074 <_ZN4leds5blinkE7Blink_tb+0x56>
    b072:	80 e0       	ldi	r24, 0x00	; 0
    b074:	88 23       	and	r24, r24
    b076:	09 f0       	breq	.+2      	; 0xb07a <_ZN4leds5blinkE7Blink_tb+0x5c>
    b078:	8b c2       	rjmp	.+1302   	; 0xb590 <_ZN4leds5blinkE7Blink_tb+0x572>
	
	if(blinkMode != lastBlinkSetting)
    b07a:	90 91 b2 46 	lds	r25, 0x46B2	; 0x8046b2 <_ZL16lastBlinkSetting>
    b07e:	81 e0       	ldi	r24, 0x01	; 1
    b080:	2b 81       	ldd	r18, Y+3	; 0x03
    b082:	29 17       	cp	r18, r25
    b084:	09 f4       	brne	.+2      	; 0xb088 <_ZN4leds5blinkE7Blink_tb+0x6a>
    b086:	80 e0       	ldi	r24, 0x00	; 0
    b088:	88 23       	and	r24, r24
    b08a:	09 f4       	brne	.+2      	; 0xb08e <_ZN4leds5blinkE7Blink_tb+0x70>
    b08c:	7d c2       	rjmp	.+1274   	; 0xb588 <_ZN4leds5blinkE7Blink_tb+0x56a>
	{
		TCB3.INTCTRL &= ~TCB_CAPT_bm;   /* Capture or Timeout: disabled */
    b08e:	80 e3       	ldi	r24, 0x30	; 48
    b090:	9b e0       	ldi	r25, 0x0B	; 11
    b092:	20 e3       	ldi	r18, 0x30	; 48
    b094:	3b e0       	ldi	r19, 0x0B	; 11
    b096:	f9 01       	movw	r30, r18
    b098:	25 81       	ldd	r18, Z+5	; 0x05
    b09a:	2e 7f       	andi	r18, 0xFE	; 254
    b09c:	fc 01       	movw	r30, r24
    b09e:	25 83       	std	Z+5, r18	; 0x05

		switch(blinkMode)
    b0a0:	8b 81       	ldd	r24, Y+3	; 0x03
    b0a2:	88 2f       	mov	r24, r24
    b0a4:	90 e0       	ldi	r25, 0x00	; 0
    b0a6:	09 2e       	mov	r0, r25
    b0a8:	00 0c       	add	r0, r0
    b0aa:	aa 0b       	sbc	r26, r26
    b0ac:	bb 0b       	sbc	r27, r27
    b0ae:	40 e0       	ldi	r20, 0x00	; 0
    b0b0:	50 e0       	ldi	r21, 0x00	; 0
    b0b2:	2c e0       	ldi	r18, 0x0C	; 12
    b0b4:	30 e0       	ldi	r19, 0x00	; 0
    b0b6:	84 1b       	sub	r24, r20
    b0b8:	95 0b       	sbc	r25, r21
    b0ba:	28 17       	cp	r18, r24
    b0bc:	39 07       	cpc	r19, r25
    b0be:	08 f4       	brcc	.+2      	; 0xb0c2 <_ZN4leds5blinkE7Blink_tb+0xa4>
    b0c0:	41 c2       	rjmp	.+1154   	; 0xb544 <_ZN4leds5blinkE7Blink_tb+0x526>
    b0c2:	86 56       	subi	r24, 0x66	; 102
    b0c4:	9e 4f       	sbci	r25, 0xFE	; 254
    b0c6:	fc 01       	movw	r30, r24
    b0c8:	0c 94 7f 7d 	jmp	0xfafe	; 0xfafe <__tablejump2__>
		{
			case LEDS_OFF:
			{
				lastRedBlinkSetting = LEDS_OFF;
    b0cc:	10 92 b3 46 	sts	0x46B3, r1	; 0x8046b3 <_ZL19lastRedBlinkSetting>
				lastGreenBlinkSetting = LEDS_OFF;
    b0d0:	10 92 b4 46 	sts	0x46B4, r1	; 0x8046b4 <_ZL21lastGreenBlinkSetting>
				red_blink_count = 0;
    b0d4:	10 92 bd 46 	sts	0x46BD, r1	; 0x8046bd <_ZL15red_blink_count>
    b0d8:	10 92 be 46 	sts	0x46BE, r1	; 0x8046be <_ZL15red_blink_count+0x1>
				green_blink_count = 0;
    b0dc:	10 92 bf 46 	sts	0x46BF, r1	; 0x8046bf <_ZL17green_blink_count>
    b0e0:	10 92 c0 46 	sts	0x46C0, r1	; 0x8046c0 <_ZL17green_blink_count+0x1>
				LED_set_RED_level(OFF);
    b0e4:	80 e0       	ldi	r24, 0x00	; 0
    b0e6:	0e 94 f1 54 	call	0xa9e2	; 0xa9e2 <_ZL17LED_set_RED_levelb>
				LED_set_GREEN_level(OFF);
    b0ea:	80 e0       	ldi	r24, 0x00	; 0
    b0ec:	0e 94 00 55 	call	0xaa00	; 0xaa00 <_ZL19LED_set_GREEN_levelb>
				red_led_configured = false;
    b0f0:	10 92 c1 46 	sts	0x46C1, r1	; 0x8046c1 <_ZL18red_led_configured>
				green_led_configured = false;
    b0f4:	10 92 c2 46 	sts	0x46C2, r1	; 0x8046c2 <_ZL20green_led_configured>
			}
			break;
    b0f8:	3e c2       	rjmp	.+1148   	; 0xb576 <_ZN4leds5blinkE7Blink_tb+0x558>
			
			case LEDS_RED_OFF:
			{
				if(lastRedBlinkSetting != LEDS_RED_OFF)
    b0fa:	90 91 b3 46 	lds	r25, 0x46B3	; 0x8046b3 <_ZL19lastRedBlinkSetting>
    b0fe:	81 e0       	ldi	r24, 0x01	; 1
    b100:	91 30       	cpi	r25, 0x01	; 1
    b102:	09 f4       	brne	.+2      	; 0xb106 <_ZN4leds5blinkE7Blink_tb+0xe8>
    b104:	80 e0       	ldi	r24, 0x00	; 0
    b106:	88 23       	and	r24, r24
    b108:	09 f4       	brne	.+2      	; 0xb10c <_ZN4leds5blinkE7Blink_tb+0xee>
    b10a:	1e c2       	rjmp	.+1084   	; 0xb548 <_ZN4leds5blinkE7Blink_tb+0x52a>
				{
					lastRedBlinkSetting = LEDS_RED_OFF;
    b10c:	81 e0       	ldi	r24, 0x01	; 1
    b10e:	80 93 b3 46 	sts	0x46B3, r24	; 0x8046b3 <_ZL19lastRedBlinkSetting>
					LED_set_RED_level(OFF);
    b112:	80 e0       	ldi	r24, 0x00	; 0
    b114:	0e 94 f1 54 	call	0xa9e2	; 0xa9e2 <_ZL17LED_set_RED_levelb>
					red_blink_count = 0;
    b118:	10 92 bd 46 	sts	0x46BD, r1	; 0x8046bd <_ZL15red_blink_count>
    b11c:	10 92 be 46 	sts	0x46BE, r1	; 0x8046be <_ZL15red_blink_count+0x1>
					red_led_configured = false;
    b120:	10 92 c1 46 	sts	0x46C1, r1	; 0x8046c1 <_ZL18red_led_configured>
				}
			}
			break;
    b124:	11 c2       	rjmp	.+1058   	; 0xb548 <_ZN4leds5blinkE7Blink_tb+0x52a>
			
			case LEDS_GREEN_OFF:
			{
				if(lastGreenBlinkSetting != LEDS_GREEN_OFF)
    b126:	90 91 b4 46 	lds	r25, 0x46B4	; 0x8046b4 <_ZL21lastGreenBlinkSetting>
    b12a:	81 e0       	ldi	r24, 0x01	; 1
    b12c:	92 30       	cpi	r25, 0x02	; 2
    b12e:	09 f4       	brne	.+2      	; 0xb132 <_ZN4leds5blinkE7Blink_tb+0x114>
    b130:	80 e0       	ldi	r24, 0x00	; 0
    b132:	88 23       	and	r24, r24
    b134:	09 f4       	brne	.+2      	; 0xb138 <_ZN4leds5blinkE7Blink_tb+0x11a>
    b136:	0a c2       	rjmp	.+1044   	; 0xb54c <_ZN4leds5blinkE7Blink_tb+0x52e>
				{
					lastGreenBlinkSetting = LEDS_GREEN_OFF;
    b138:	82 e0       	ldi	r24, 0x02	; 2
    b13a:	80 93 b4 46 	sts	0x46B4, r24	; 0x8046b4 <_ZL21lastGreenBlinkSetting>
					LED_set_GREEN_level(OFF);
    b13e:	80 e0       	ldi	r24, 0x00	; 0
    b140:	0e 94 00 55 	call	0xaa00	; 0xaa00 <_ZL19LED_set_GREEN_levelb>
					green_blink_count = 0;
    b144:	10 92 bf 46 	sts	0x46BF, r1	; 0x8046bf <_ZL17green_blink_count>
    b148:	10 92 c0 46 	sts	0x46C0, r1	; 0x8046c0 <_ZL17green_blink_count+0x1>
					green_led_configured = false;
    b14c:	10 92 c2 46 	sts	0x46C2, r1	; 0x8046c2 <_ZL20green_led_configured>
				}
			}
			break;
    b150:	fd c1       	rjmp	.+1018   	; 0xb54c <_ZN4leds5blinkE7Blink_tb+0x52e>
			
			case LEDS_RED_BLINK_FAST:
			{
				if(lastRedBlinkSetting != LEDS_RED_BLINK_FAST)
    b152:	90 91 b3 46 	lds	r25, 0x46B3	; 0x8046b3 <_ZL19lastRedBlinkSetting>
    b156:	81 e0       	ldi	r24, 0x01	; 1
    b158:	93 30       	cpi	r25, 0x03	; 3
    b15a:	09 f4       	brne	.+2      	; 0xb15e <_ZN4leds5blinkE7Blink_tb+0x140>
    b15c:	80 e0       	ldi	r24, 0x00	; 0
    b15e:	88 23       	and	r24, r24
    b160:	09 f4       	brne	.+2      	; 0xb164 <_ZN4leds5blinkE7Blink_tb+0x146>
    b162:	f6 c1       	rjmp	.+1004   	; 0xb550 <_ZN4leds5blinkE7Blink_tb+0x532>
				{
					lastRedBlinkSetting = LEDS_RED_BLINK_FAST;
    b164:	83 e0       	ldi	r24, 0x03	; 3
    b166:	80 93 b3 46 	sts	0x46B3, r24	; 0x8046b3 <_ZL19lastRedBlinkSetting>
					red_blink_on_period = BRIEF_ON;
    b16a:	8f e0       	ldi	r24, 0x0F	; 15
    b16c:	90 e0       	ldi	r25, 0x00	; 0
    b16e:	80 93 b5 46 	sts	0x46B5, r24	; 0x8046b5 <_ZL19red_blink_on_period>
    b172:	90 93 b6 46 	sts	0x46B6, r25	; 0x8046b6 <_ZL19red_blink_on_period+0x1>
					red_blink_off_period = BRIEF_OFF;
    b176:	82 e3       	ldi	r24, 0x32	; 50
    b178:	90 e0       	ldi	r25, 0x00	; 0
    b17a:	80 93 b7 46 	sts	0x46B7, r24	; 0x8046b7 <_ZL20red_blink_off_period>
    b17e:	90 93 b8 46 	sts	0x46B8, r25	; 0x8046b8 <_ZL20red_blink_off_period+0x1>
					red_blink_count = red_blink_on_period;	
    b182:	80 91 b5 46 	lds	r24, 0x46B5	; 0x8046b5 <_ZL19red_blink_on_period>
    b186:	90 91 b6 46 	lds	r25, 0x46B6	; 0x8046b6 <_ZL19red_blink_on_period+0x1>
    b18a:	80 93 bd 46 	sts	0x46BD, r24	; 0x8046bd <_ZL15red_blink_count>
    b18e:	90 93 be 46 	sts	0x46BE, r25	; 0x8046be <_ZL15red_blink_count+0x1>
					red_led_configured = true;			
    b192:	81 e0       	ldi	r24, 0x01	; 1
    b194:	80 93 c1 46 	sts	0x46C1, r24	; 0x8046c1 <_ZL18red_led_configured>
					timer_blink_inhibit = false; /* Enable timer LED control */
    b198:	10 92 b1 46 	sts	0x46B1, r1	; 0x8046b1 <_ZL19timer_blink_inhibit>
				}
			}
			break;
    b19c:	d9 c1       	rjmp	.+946    	; 0xb550 <_ZN4leds5blinkE7Blink_tb+0x532>
			
			case LEDS_GREEN_BLINK_FAST:
			{
				if(lastGreenBlinkSetting != LEDS_GREEN_BLINK_FAST)
    b19e:	90 91 b4 46 	lds	r25, 0x46B4	; 0x8046b4 <_ZL21lastGreenBlinkSetting>
    b1a2:	81 e0       	ldi	r24, 0x01	; 1
    b1a4:	95 30       	cpi	r25, 0x05	; 5
    b1a6:	09 f4       	brne	.+2      	; 0xb1aa <_ZN4leds5blinkE7Blink_tb+0x18c>
    b1a8:	80 e0       	ldi	r24, 0x00	; 0
    b1aa:	88 23       	and	r24, r24
    b1ac:	09 f4       	brne	.+2      	; 0xb1b0 <_ZN4leds5blinkE7Blink_tb+0x192>
    b1ae:	d2 c1       	rjmp	.+932    	; 0xb554 <_ZN4leds5blinkE7Blink_tb+0x536>
				{
					lastGreenBlinkSetting = LEDS_GREEN_BLINK_FAST;
    b1b0:	85 e0       	ldi	r24, 0x05	; 5
    b1b2:	80 93 b4 46 	sts	0x46B4, r24	; 0x8046b4 <_ZL21lastGreenBlinkSetting>
					green_blink_on_period = BRIEF_ON;
    b1b6:	8f e0       	ldi	r24, 0x0F	; 15
    b1b8:	90 e0       	ldi	r25, 0x00	; 0
    b1ba:	80 93 b9 46 	sts	0x46B9, r24	; 0x8046b9 <_ZL21green_blink_on_period>
    b1be:	90 93 ba 46 	sts	0x46BA, r25	; 0x8046ba <_ZL21green_blink_on_period+0x1>
					green_blink_off_period = BRIEF_OFF;	
    b1c2:	82 e3       	ldi	r24, 0x32	; 50
    b1c4:	90 e0       	ldi	r25, 0x00	; 0
    b1c6:	80 93 bb 46 	sts	0x46BB, r24	; 0x8046bb <_ZL22green_blink_off_period>
    b1ca:	90 93 bc 46 	sts	0x46BC, r25	; 0x8046bc <_ZL22green_blink_off_period+0x1>
					green_blink_count = green_blink_on_period;			
    b1ce:	80 91 b9 46 	lds	r24, 0x46B9	; 0x8046b9 <_ZL21green_blink_on_period>
    b1d2:	90 91 ba 46 	lds	r25, 0x46BA	; 0x8046ba <_ZL21green_blink_on_period+0x1>
    b1d6:	80 93 bf 46 	sts	0x46BF, r24	; 0x8046bf <_ZL17green_blink_count>
    b1da:	90 93 c0 46 	sts	0x46C0, r25	; 0x8046c0 <_ZL17green_blink_count+0x1>
					green_led_configured = true;			
    b1de:	81 e0       	ldi	r24, 0x01	; 1
    b1e0:	80 93 c2 46 	sts	0x46C2, r24	; 0x8046c2 <_ZL20green_led_configured>
					timer_blink_inhibit = false; /* Enable timer LED control */
    b1e4:	10 92 b1 46 	sts	0x46B1, r1	; 0x8046b1 <_ZL19timer_blink_inhibit>
				}
			}
			break;
    b1e8:	b5 c1       	rjmp	.+874    	; 0xb554 <_ZN4leds5blinkE7Blink_tb+0x536>
			
			case LEDS_RED_BLINK_SLOW:
			{
				if(lastRedBlinkSetting != LEDS_RED_BLINK_SLOW)
    b1ea:	90 91 b3 46 	lds	r25, 0x46B3	; 0x8046b3 <_ZL19lastRedBlinkSetting>
    b1ee:	81 e0       	ldi	r24, 0x01	; 1
    b1f0:	94 30       	cpi	r25, 0x04	; 4
    b1f2:	09 f4       	brne	.+2      	; 0xb1f6 <_ZN4leds5blinkE7Blink_tb+0x1d8>
    b1f4:	80 e0       	ldi	r24, 0x00	; 0
    b1f6:	88 23       	and	r24, r24
    b1f8:	09 f4       	brne	.+2      	; 0xb1fc <_ZN4leds5blinkE7Blink_tb+0x1de>
    b1fa:	ae c1       	rjmp	.+860    	; 0xb558 <_ZN4leds5blinkE7Blink_tb+0x53a>
				{
					lastRedBlinkSetting = LEDS_RED_BLINK_SLOW;
    b1fc:	84 e0       	ldi	r24, 0x04	; 4
    b1fe:	80 93 b3 46 	sts	0x46B3, r24	; 0x8046b3 <_ZL19lastRedBlinkSetting>
					red_blink_on_period = SLOW_ON;
    b202:	89 e1       	ldi	r24, 0x19	; 25
    b204:	90 e0       	ldi	r25, 0x00	; 0
    b206:	80 93 b5 46 	sts	0x46B5, r24	; 0x8046b5 <_ZL19red_blink_on_period>
    b20a:	90 93 b6 46 	sts	0x46B6, r25	; 0x8046b6 <_ZL19red_blink_on_period+0x1>
					red_blink_off_period = SLOW_OFF;
    b20e:	84 ef       	ldi	r24, 0xF4	; 244
    b210:	91 e0       	ldi	r25, 0x01	; 1
    b212:	80 93 b7 46 	sts	0x46B7, r24	; 0x8046b7 <_ZL20red_blink_off_period>
    b216:	90 93 b8 46 	sts	0x46B8, r25	; 0x8046b8 <_ZL20red_blink_off_period+0x1>
					red_blink_count = red_blink_on_period;				
    b21a:	80 91 b5 46 	lds	r24, 0x46B5	; 0x8046b5 <_ZL19red_blink_on_period>
    b21e:	90 91 b6 46 	lds	r25, 0x46B6	; 0x8046b6 <_ZL19red_blink_on_period+0x1>
    b222:	80 93 bd 46 	sts	0x46BD, r24	; 0x8046bd <_ZL15red_blink_count>
    b226:	90 93 be 46 	sts	0x46BE, r25	; 0x8046be <_ZL15red_blink_count+0x1>
					red_led_configured = true;			
    b22a:	81 e0       	ldi	r24, 0x01	; 1
    b22c:	80 93 c1 46 	sts	0x46C1, r24	; 0x8046c1 <_ZL18red_led_configured>
					timer_blink_inhibit = false; /* Enable timer LED control */
    b230:	10 92 b1 46 	sts	0x46B1, r1	; 0x8046b1 <_ZL19timer_blink_inhibit>
				}
			}
			break;
    b234:	91 c1       	rjmp	.+802    	; 0xb558 <_ZN4leds5blinkE7Blink_tb+0x53a>
			
			case LEDS_GREEN_BLINK_SLOW:
			{
				if(lastGreenBlinkSetting != LEDS_GREEN_BLINK_SLOW)
    b236:	90 91 b4 46 	lds	r25, 0x46B4	; 0x8046b4 <_ZL21lastGreenBlinkSetting>
    b23a:	81 e0       	ldi	r24, 0x01	; 1
    b23c:	96 30       	cpi	r25, 0x06	; 6
    b23e:	09 f4       	brne	.+2      	; 0xb242 <_ZN4leds5blinkE7Blink_tb+0x224>
    b240:	80 e0       	ldi	r24, 0x00	; 0
    b242:	88 23       	and	r24, r24
    b244:	09 f4       	brne	.+2      	; 0xb248 <_ZN4leds5blinkE7Blink_tb+0x22a>
    b246:	8a c1       	rjmp	.+788    	; 0xb55c <_ZN4leds5blinkE7Blink_tb+0x53e>
				{
					lastGreenBlinkSetting = LEDS_GREEN_BLINK_SLOW;
    b248:	86 e0       	ldi	r24, 0x06	; 6
    b24a:	80 93 b4 46 	sts	0x46B4, r24	; 0x8046b4 <_ZL21lastGreenBlinkSetting>
					green_blink_on_period = SLOW_ON;
    b24e:	89 e1       	ldi	r24, 0x19	; 25
    b250:	90 e0       	ldi	r25, 0x00	; 0
    b252:	80 93 b9 46 	sts	0x46B9, r24	; 0x8046b9 <_ZL21green_blink_on_period>
    b256:	90 93 ba 46 	sts	0x46BA, r25	; 0x8046ba <_ZL21green_blink_on_period+0x1>
					green_blink_off_period = SLOW_OFF;	
    b25a:	84 ef       	ldi	r24, 0xF4	; 244
    b25c:	91 e0       	ldi	r25, 0x01	; 1
    b25e:	80 93 bb 46 	sts	0x46BB, r24	; 0x8046bb <_ZL22green_blink_off_period>
    b262:	90 93 bc 46 	sts	0x46BC, r25	; 0x8046bc <_ZL22green_blink_off_period+0x1>
					green_blink_count = green_blink_on_period;			
    b266:	80 91 b9 46 	lds	r24, 0x46B9	; 0x8046b9 <_ZL21green_blink_on_period>
    b26a:	90 91 ba 46 	lds	r25, 0x46BA	; 0x8046ba <_ZL21green_blink_on_period+0x1>
    b26e:	80 93 bf 46 	sts	0x46BF, r24	; 0x8046bf <_ZL17green_blink_count>
    b272:	90 93 c0 46 	sts	0x46C0, r25	; 0x8046c0 <_ZL17green_blink_count+0x1>
					green_led_configured = true;			
    b276:	81 e0       	ldi	r24, 0x01	; 1
    b278:	80 93 c2 46 	sts	0x46C2, r24	; 0x8046c2 <_ZL20green_led_configured>
					timer_blink_inhibit = false; /* Enable timer LED control */
    b27c:	10 92 b1 46 	sts	0x46B1, r1	; 0x8046b1 <_ZL19timer_blink_inhibit>
				}
			}
			break;
    b280:	6d c1       	rjmp	.+730    	; 0xb55c <_ZN4leds5blinkE7Blink_tb+0x53e>
			
			case LEDS_RED_THEN_GREEN_BLINK_SLOW:
			{
				if((lastRedBlinkSetting != LEDS_RED_THEN_GREEN_BLINK_SLOW) || (lastGreenBlinkSetting != LEDS_RED_THEN_GREEN_BLINK_SLOW))
    b282:	80 91 b3 46 	lds	r24, 0x46B3	; 0x8046b3 <_ZL19lastRedBlinkSetting>
    b286:	8c 30       	cpi	r24, 0x0C	; 12
    b288:	21 f4       	brne	.+8      	; 0xb292 <_ZN4leds5blinkE7Blink_tb+0x274>
    b28a:	80 91 b4 46 	lds	r24, 0x46B4	; 0x8046b4 <_ZL21lastGreenBlinkSetting>
    b28e:	8c 30       	cpi	r24, 0x0C	; 12
    b290:	11 f0       	breq	.+4      	; 0xb296 <_ZN4leds5blinkE7Blink_tb+0x278>
    b292:	81 e0       	ldi	r24, 0x01	; 1
    b294:	01 c0       	rjmp	.+2      	; 0xb298 <_ZN4leds5blinkE7Blink_tb+0x27a>
    b296:	80 e0       	ldi	r24, 0x00	; 0
    b298:	88 23       	and	r24, r24
    b29a:	09 f4       	brne	.+2      	; 0xb29e <_ZN4leds5blinkE7Blink_tb+0x280>
    b29c:	61 c1       	rjmp	.+706    	; 0xb560 <_ZN4leds5blinkE7Blink_tb+0x542>
				{
					lastRedBlinkSetting = LEDS_RED_THEN_GREEN_BLINK_SLOW;
    b29e:	8c e0       	ldi	r24, 0x0C	; 12
    b2a0:	80 93 b3 46 	sts	0x46B3, r24	; 0x8046b3 <_ZL19lastRedBlinkSetting>
					lastGreenBlinkSetting = LEDS_RED_THEN_GREEN_BLINK_SLOW;
    b2a4:	8c e0       	ldi	r24, 0x0C	; 12
    b2a6:	80 93 b4 46 	sts	0x46B4, r24	; 0x8046b4 <_ZL21lastGreenBlinkSetting>
					green_blink_on_period = SLOW_ON;
    b2aa:	89 e1       	ldi	r24, 0x19	; 25
    b2ac:	90 e0       	ldi	r25, 0x00	; 0
    b2ae:	80 93 b9 46 	sts	0x46B9, r24	; 0x8046b9 <_ZL21green_blink_on_period>
    b2b2:	90 93 ba 46 	sts	0x46BA, r25	; 0x8046ba <_ZL21green_blink_on_period+0x1>
					green_blink_off_period = SLOW_OFF;	
    b2b6:	84 ef       	ldi	r24, 0xF4	; 244
    b2b8:	91 e0       	ldi	r25, 0x01	; 1
    b2ba:	80 93 bb 46 	sts	0x46BB, r24	; 0x8046bb <_ZL22green_blink_off_period>
    b2be:	90 93 bc 46 	sts	0x46BC, r25	; 0x8046bc <_ZL22green_blink_off_period+0x1>
					green_blink_count = -green_blink_on_period;			
    b2c2:	80 91 b9 46 	lds	r24, 0x46B9	; 0x8046b9 <_ZL21green_blink_on_period>
    b2c6:	90 91 ba 46 	lds	r25, 0x46BA	; 0x8046ba <_ZL21green_blink_on_period+0x1>
    b2ca:	91 95       	neg	r25
    b2cc:	81 95       	neg	r24
    b2ce:	91 09       	sbc	r25, r1
    b2d0:	80 93 bf 46 	sts	0x46BF, r24	; 0x8046bf <_ZL17green_blink_count>
    b2d4:	90 93 c0 46 	sts	0x46C0, r25	; 0x8046c0 <_ZL17green_blink_count+0x1>
					red_blink_on_period = SLOW_ON;
    b2d8:	89 e1       	ldi	r24, 0x19	; 25
    b2da:	90 e0       	ldi	r25, 0x00	; 0
    b2dc:	80 93 b5 46 	sts	0x46B5, r24	; 0x8046b5 <_ZL19red_blink_on_period>
    b2e0:	90 93 b6 46 	sts	0x46B6, r25	; 0x8046b6 <_ZL19red_blink_on_period+0x1>
					red_blink_off_period = SLOW_OFF;
    b2e4:	84 ef       	ldi	r24, 0xF4	; 244
    b2e6:	91 e0       	ldi	r25, 0x01	; 1
    b2e8:	80 93 b7 46 	sts	0x46B7, r24	; 0x8046b7 <_ZL20red_blink_off_period>
    b2ec:	90 93 b8 46 	sts	0x46B8, r25	; 0x8046b8 <_ZL20red_blink_off_period+0x1>
					red_blink_count = red_blink_on_period;				
    b2f0:	80 91 b5 46 	lds	r24, 0x46B5	; 0x8046b5 <_ZL19red_blink_on_period>
    b2f4:	90 91 b6 46 	lds	r25, 0x46B6	; 0x8046b6 <_ZL19red_blink_on_period+0x1>
    b2f8:	80 93 bd 46 	sts	0x46BD, r24	; 0x8046bd <_ZL15red_blink_count>
    b2fc:	90 93 be 46 	sts	0x46BE, r25	; 0x8046be <_ZL15red_blink_count+0x1>
					red_led_configured = true;			
    b300:	81 e0       	ldi	r24, 0x01	; 1
    b302:	80 93 c1 46 	sts	0x46C1, r24	; 0x8046c1 <_ZL18red_led_configured>
					green_led_configured = true;			
    b306:	81 e0       	ldi	r24, 0x01	; 1
    b308:	80 93 c2 46 	sts	0x46C2, r24	; 0x8046c2 <_ZL20green_led_configured>
					timer_blink_inhibit = false; /* Enable timer LED control */
    b30c:	10 92 b1 46 	sts	0x46B1, r1	; 0x8046b1 <_ZL19timer_blink_inhibit>
				}
			}
			break;
    b310:	27 c1       	rjmp	.+590    	; 0xb560 <_ZN4leds5blinkE7Blink_tb+0x542>
			
			case LEDS_RED_THEN_GREEN_BLINK_FAST:
			{
				if((lastRedBlinkSetting != LEDS_RED_THEN_GREEN_BLINK_FAST) || (lastGreenBlinkSetting != LEDS_RED_THEN_GREEN_BLINK_FAST))
    b312:	80 91 b3 46 	lds	r24, 0x46B3	; 0x8046b3 <_ZL19lastRedBlinkSetting>
    b316:	8b 30       	cpi	r24, 0x0B	; 11
    b318:	21 f4       	brne	.+8      	; 0xb322 <_ZN4leds5blinkE7Blink_tb+0x304>
    b31a:	80 91 b4 46 	lds	r24, 0x46B4	; 0x8046b4 <_ZL21lastGreenBlinkSetting>
    b31e:	8b 30       	cpi	r24, 0x0B	; 11
    b320:	11 f0       	breq	.+4      	; 0xb326 <_ZN4leds5blinkE7Blink_tb+0x308>
    b322:	81 e0       	ldi	r24, 0x01	; 1
    b324:	01 c0       	rjmp	.+2      	; 0xb328 <_ZN4leds5blinkE7Blink_tb+0x30a>
    b326:	80 e0       	ldi	r24, 0x00	; 0
    b328:	88 23       	and	r24, r24
    b32a:	09 f4       	brne	.+2      	; 0xb32e <_ZN4leds5blinkE7Blink_tb+0x310>
    b32c:	1b c1       	rjmp	.+566    	; 0xb564 <_ZN4leds5blinkE7Blink_tb+0x546>
				{
					lastRedBlinkSetting = LEDS_RED_THEN_GREEN_BLINK_FAST;
    b32e:	8b e0       	ldi	r24, 0x0B	; 11
    b330:	80 93 b3 46 	sts	0x46B3, r24	; 0x8046b3 <_ZL19lastRedBlinkSetting>
					lastGreenBlinkSetting = LEDS_RED_THEN_GREEN_BLINK_FAST;
    b334:	8b e0       	ldi	r24, 0x0B	; 11
    b336:	80 93 b4 46 	sts	0x46B4, r24	; 0x8046b4 <_ZL21lastGreenBlinkSetting>
					green_blink_on_period = FAST_ON;
    b33a:	89 e1       	ldi	r24, 0x19	; 25
    b33c:	90 e0       	ldi	r25, 0x00	; 0
    b33e:	80 93 b9 46 	sts	0x46B9, r24	; 0x8046b9 <_ZL21green_blink_on_period>
    b342:	90 93 ba 46 	sts	0x46BA, r25	; 0x8046ba <_ZL21green_blink_on_period+0x1>
					green_blink_off_period = FAST_OFF;	
    b346:	89 e1       	ldi	r24, 0x19	; 25
    b348:	90 e0       	ldi	r25, 0x00	; 0
    b34a:	80 93 bb 46 	sts	0x46BB, r24	; 0x8046bb <_ZL22green_blink_off_period>
    b34e:	90 93 bc 46 	sts	0x46BC, r25	; 0x8046bc <_ZL22green_blink_off_period+0x1>
					green_blink_count = -green_blink_on_period;			
    b352:	80 91 b9 46 	lds	r24, 0x46B9	; 0x8046b9 <_ZL21green_blink_on_period>
    b356:	90 91 ba 46 	lds	r25, 0x46BA	; 0x8046ba <_ZL21green_blink_on_period+0x1>
    b35a:	91 95       	neg	r25
    b35c:	81 95       	neg	r24
    b35e:	91 09       	sbc	r25, r1
    b360:	80 93 bf 46 	sts	0x46BF, r24	; 0x8046bf <_ZL17green_blink_count>
    b364:	90 93 c0 46 	sts	0x46C0, r25	; 0x8046c0 <_ZL17green_blink_count+0x1>
					red_blink_on_period = FAST_ON;
    b368:	89 e1       	ldi	r24, 0x19	; 25
    b36a:	90 e0       	ldi	r25, 0x00	; 0
    b36c:	80 93 b5 46 	sts	0x46B5, r24	; 0x8046b5 <_ZL19red_blink_on_period>
    b370:	90 93 b6 46 	sts	0x46B6, r25	; 0x8046b6 <_ZL19red_blink_on_period+0x1>
					red_blink_off_period = FAST_OFF;
    b374:	89 e1       	ldi	r24, 0x19	; 25
    b376:	90 e0       	ldi	r25, 0x00	; 0
    b378:	80 93 b7 46 	sts	0x46B7, r24	; 0x8046b7 <_ZL20red_blink_off_period>
    b37c:	90 93 b8 46 	sts	0x46B8, r25	; 0x8046b8 <_ZL20red_blink_off_period+0x1>
					red_blink_count = red_blink_on_period;				
    b380:	80 91 b5 46 	lds	r24, 0x46B5	; 0x8046b5 <_ZL19red_blink_on_period>
    b384:	90 91 b6 46 	lds	r25, 0x46B6	; 0x8046b6 <_ZL19red_blink_on_period+0x1>
    b388:	80 93 bd 46 	sts	0x46BD, r24	; 0x8046bd <_ZL15red_blink_count>
    b38c:	90 93 be 46 	sts	0x46BE, r25	; 0x8046be <_ZL15red_blink_count+0x1>
					red_led_configured = true;			
    b390:	81 e0       	ldi	r24, 0x01	; 1
    b392:	80 93 c1 46 	sts	0x46C1, r24	; 0x8046c1 <_ZL18red_led_configured>
					green_led_configured = true;			
    b396:	81 e0       	ldi	r24, 0x01	; 1
    b398:	80 93 c2 46 	sts	0x46C2, r24	; 0x8046c2 <_ZL20green_led_configured>
					timer_blink_inhibit = false; /* Enable timer LED control */
    b39c:	10 92 b1 46 	sts	0x46B1, r1	; 0x8046b1 <_ZL19timer_blink_inhibit>
				}
			}
			break;
    b3a0:	e1 c0       	rjmp	.+450    	; 0xb564 <_ZN4leds5blinkE7Blink_tb+0x546>
			
			case LEDS_RED_AND_GREEN_BLINK_SLOW:
			{
				if((lastRedBlinkSetting != LEDS_RED_AND_GREEN_BLINK_SLOW) || (lastGreenBlinkSetting != LEDS_RED_AND_GREEN_BLINK_SLOW))
    b3a2:	80 91 b3 46 	lds	r24, 0x46B3	; 0x8046b3 <_ZL19lastRedBlinkSetting>
    b3a6:	8a 30       	cpi	r24, 0x0A	; 10
    b3a8:	21 f4       	brne	.+8      	; 0xb3b2 <_ZN4leds5blinkE7Blink_tb+0x394>
    b3aa:	80 91 b4 46 	lds	r24, 0x46B4	; 0x8046b4 <_ZL21lastGreenBlinkSetting>
    b3ae:	8a 30       	cpi	r24, 0x0A	; 10
    b3b0:	11 f0       	breq	.+4      	; 0xb3b6 <_ZN4leds5blinkE7Blink_tb+0x398>
    b3b2:	81 e0       	ldi	r24, 0x01	; 1
    b3b4:	01 c0       	rjmp	.+2      	; 0xb3b8 <_ZN4leds5blinkE7Blink_tb+0x39a>
    b3b6:	80 e0       	ldi	r24, 0x00	; 0
    b3b8:	88 23       	and	r24, r24
    b3ba:	09 f4       	brne	.+2      	; 0xb3be <_ZN4leds5blinkE7Blink_tb+0x3a0>
    b3bc:	d5 c0       	rjmp	.+426    	; 0xb568 <_ZN4leds5blinkE7Blink_tb+0x54a>
				{
					lastRedBlinkSetting = LEDS_RED_AND_GREEN_BLINK_SLOW;
    b3be:	8a e0       	ldi	r24, 0x0A	; 10
    b3c0:	80 93 b3 46 	sts	0x46B3, r24	; 0x8046b3 <_ZL19lastRedBlinkSetting>
					lastGreenBlinkSetting = LEDS_RED_AND_GREEN_BLINK_SLOW;
    b3c4:	8a e0       	ldi	r24, 0x0A	; 10
    b3c6:	80 93 b4 46 	sts	0x46B4, r24	; 0x8046b4 <_ZL21lastGreenBlinkSetting>
					green_blink_on_period = SLOW_ON;
    b3ca:	89 e1       	ldi	r24, 0x19	; 25
    b3cc:	90 e0       	ldi	r25, 0x00	; 0
    b3ce:	80 93 b9 46 	sts	0x46B9, r24	; 0x8046b9 <_ZL21green_blink_on_period>
    b3d2:	90 93 ba 46 	sts	0x46BA, r25	; 0x8046ba <_ZL21green_blink_on_period+0x1>
					green_blink_off_period = SLOW_OFF;	
    b3d6:	84 ef       	ldi	r24, 0xF4	; 244
    b3d8:	91 e0       	ldi	r25, 0x01	; 1
    b3da:	80 93 bb 46 	sts	0x46BB, r24	; 0x8046bb <_ZL22green_blink_off_period>
    b3de:	90 93 bc 46 	sts	0x46BC, r25	; 0x8046bc <_ZL22green_blink_off_period+0x1>
					green_blink_count = green_blink_on_period;			
    b3e2:	80 91 b9 46 	lds	r24, 0x46B9	; 0x8046b9 <_ZL21green_blink_on_period>
    b3e6:	90 91 ba 46 	lds	r25, 0x46BA	; 0x8046ba <_ZL21green_blink_on_period+0x1>
    b3ea:	80 93 bf 46 	sts	0x46BF, r24	; 0x8046bf <_ZL17green_blink_count>
    b3ee:	90 93 c0 46 	sts	0x46C0, r25	; 0x8046c0 <_ZL17green_blink_count+0x1>
					red_blink_on_period = SLOW_ON;
    b3f2:	89 e1       	ldi	r24, 0x19	; 25
    b3f4:	90 e0       	ldi	r25, 0x00	; 0
    b3f6:	80 93 b5 46 	sts	0x46B5, r24	; 0x8046b5 <_ZL19red_blink_on_period>
    b3fa:	90 93 b6 46 	sts	0x46B6, r25	; 0x8046b6 <_ZL19red_blink_on_period+0x1>
					red_blink_off_period = SLOW_OFF;
    b3fe:	84 ef       	ldi	r24, 0xF4	; 244
    b400:	91 e0       	ldi	r25, 0x01	; 1
    b402:	80 93 b7 46 	sts	0x46B7, r24	; 0x8046b7 <_ZL20red_blink_off_period>
    b406:	90 93 b8 46 	sts	0x46B8, r25	; 0x8046b8 <_ZL20red_blink_off_period+0x1>
					red_blink_count = red_blink_on_period;				
    b40a:	80 91 b5 46 	lds	r24, 0x46B5	; 0x8046b5 <_ZL19red_blink_on_period>
    b40e:	90 91 b6 46 	lds	r25, 0x46B6	; 0x8046b6 <_ZL19red_blink_on_period+0x1>
    b412:	80 93 bd 46 	sts	0x46BD, r24	; 0x8046bd <_ZL15red_blink_count>
    b416:	90 93 be 46 	sts	0x46BE, r25	; 0x8046be <_ZL15red_blink_count+0x1>
					red_led_configured = true;			
    b41a:	81 e0       	ldi	r24, 0x01	; 1
    b41c:	80 93 c1 46 	sts	0x46C1, r24	; 0x8046c1 <_ZL18red_led_configured>
					green_led_configured = true;			
    b420:	81 e0       	ldi	r24, 0x01	; 1
    b422:	80 93 c2 46 	sts	0x46C2, r24	; 0x8046c2 <_ZL20green_led_configured>
					timer_blink_inhibit = false; /* Enable timer LED control */
    b426:	10 92 b1 46 	sts	0x46B1, r1	; 0x8046b1 <_ZL19timer_blink_inhibit>
				}
			}
			break;
    b42a:	9e c0       	rjmp	.+316    	; 0xb568 <_ZN4leds5blinkE7Blink_tb+0x54a>
			
			case LEDS_RED_AND_GREEN_BLINK_FAST:
			{
				if((lastRedBlinkSetting != LEDS_RED_AND_GREEN_BLINK_FAST) || (lastGreenBlinkSetting != LEDS_RED_AND_GREEN_BLINK_FAST))
    b42c:	80 91 b3 46 	lds	r24, 0x46B3	; 0x8046b3 <_ZL19lastRedBlinkSetting>
    b430:	89 30       	cpi	r24, 0x09	; 9
    b432:	21 f4       	brne	.+8      	; 0xb43c <_ZN4leds5blinkE7Blink_tb+0x41e>
    b434:	80 91 b4 46 	lds	r24, 0x46B4	; 0x8046b4 <_ZL21lastGreenBlinkSetting>
    b438:	89 30       	cpi	r24, 0x09	; 9
    b43a:	11 f0       	breq	.+4      	; 0xb440 <_ZN4leds5blinkE7Blink_tb+0x422>
    b43c:	81 e0       	ldi	r24, 0x01	; 1
    b43e:	01 c0       	rjmp	.+2      	; 0xb442 <_ZN4leds5blinkE7Blink_tb+0x424>
    b440:	80 e0       	ldi	r24, 0x00	; 0
    b442:	88 23       	and	r24, r24
    b444:	09 f4       	brne	.+2      	; 0xb448 <_ZN4leds5blinkE7Blink_tb+0x42a>
    b446:	92 c0       	rjmp	.+292    	; 0xb56c <_ZN4leds5blinkE7Blink_tb+0x54e>
				{
					lastRedBlinkSetting = LEDS_RED_AND_GREEN_BLINK_FAST;
    b448:	89 e0       	ldi	r24, 0x09	; 9
    b44a:	80 93 b3 46 	sts	0x46B3, r24	; 0x8046b3 <_ZL19lastRedBlinkSetting>
					lastGreenBlinkSetting = LEDS_RED_AND_GREEN_BLINK_FAST;
    b44e:	89 e0       	ldi	r24, 0x09	; 9
    b450:	80 93 b4 46 	sts	0x46B4, r24	; 0x8046b4 <_ZL21lastGreenBlinkSetting>
					green_blink_on_period = FAST_ON;
    b454:	89 e1       	ldi	r24, 0x19	; 25
    b456:	90 e0       	ldi	r25, 0x00	; 0
    b458:	80 93 b9 46 	sts	0x46B9, r24	; 0x8046b9 <_ZL21green_blink_on_period>
    b45c:	90 93 ba 46 	sts	0x46BA, r25	; 0x8046ba <_ZL21green_blink_on_period+0x1>
					green_blink_off_period = FAST_OFF;	
    b460:	89 e1       	ldi	r24, 0x19	; 25
    b462:	90 e0       	ldi	r25, 0x00	; 0
    b464:	80 93 bb 46 	sts	0x46BB, r24	; 0x8046bb <_ZL22green_blink_off_period>
    b468:	90 93 bc 46 	sts	0x46BC, r25	; 0x8046bc <_ZL22green_blink_off_period+0x1>
					green_blink_count = green_blink_on_period;			
    b46c:	80 91 b9 46 	lds	r24, 0x46B9	; 0x8046b9 <_ZL21green_blink_on_period>
    b470:	90 91 ba 46 	lds	r25, 0x46BA	; 0x8046ba <_ZL21green_blink_on_period+0x1>
    b474:	80 93 bf 46 	sts	0x46BF, r24	; 0x8046bf <_ZL17green_blink_count>
    b478:	90 93 c0 46 	sts	0x46C0, r25	; 0x8046c0 <_ZL17green_blink_count+0x1>
					red_blink_on_period = FAST_ON;
    b47c:	89 e1       	ldi	r24, 0x19	; 25
    b47e:	90 e0       	ldi	r25, 0x00	; 0
    b480:	80 93 b5 46 	sts	0x46B5, r24	; 0x8046b5 <_ZL19red_blink_on_period>
    b484:	90 93 b6 46 	sts	0x46B6, r25	; 0x8046b6 <_ZL19red_blink_on_period+0x1>
					red_blink_off_period = FAST_OFF;
    b488:	89 e1       	ldi	r24, 0x19	; 25
    b48a:	90 e0       	ldi	r25, 0x00	; 0
    b48c:	80 93 b7 46 	sts	0x46B7, r24	; 0x8046b7 <_ZL20red_blink_off_period>
    b490:	90 93 b8 46 	sts	0x46B8, r25	; 0x8046b8 <_ZL20red_blink_off_period+0x1>
					red_blink_count = red_blink_on_period;				
    b494:	80 91 b5 46 	lds	r24, 0x46B5	; 0x8046b5 <_ZL19red_blink_on_period>
    b498:	90 91 b6 46 	lds	r25, 0x46B6	; 0x8046b6 <_ZL19red_blink_on_period+0x1>
    b49c:	80 93 bd 46 	sts	0x46BD, r24	; 0x8046bd <_ZL15red_blink_count>
    b4a0:	90 93 be 46 	sts	0x46BE, r25	; 0x8046be <_ZL15red_blink_count+0x1>
					red_led_configured = true;			
    b4a4:	81 e0       	ldi	r24, 0x01	; 1
    b4a6:	80 93 c1 46 	sts	0x46C1, r24	; 0x8046c1 <_ZL18red_led_configured>
					green_led_configured = true;			
    b4aa:	81 e0       	ldi	r24, 0x01	; 1
    b4ac:	80 93 c2 46 	sts	0x46C2, r24	; 0x8046c2 <_ZL20green_led_configured>
					timer_blink_inhibit = false; /* Enable timer LED control */
    b4b0:	10 92 b1 46 	sts	0x46B1, r1	; 0x8046b1 <_ZL19timer_blink_inhibit>
				}
			}
			break;
    b4b4:	5b c0       	rjmp	.+182    	; 0xb56c <_ZN4leds5blinkE7Blink_tb+0x54e>
			
			case LEDS_RED_ON_CONSTANT:
			{
				if(lastRedBlinkSetting != LEDS_RED_ON_CONSTANT)
    b4b6:	90 91 b3 46 	lds	r25, 0x46B3	; 0x8046b3 <_ZL19lastRedBlinkSetting>
    b4ba:	81 e0       	ldi	r24, 0x01	; 1
    b4bc:	97 30       	cpi	r25, 0x07	; 7
    b4be:	09 f4       	brne	.+2      	; 0xb4c2 <_ZN4leds5blinkE7Blink_tb+0x4a4>
    b4c0:	80 e0       	ldi	r24, 0x00	; 0
    b4c2:	88 23       	and	r24, r24
    b4c4:	09 f4       	brne	.+2      	; 0xb4c8 <_ZN4leds5blinkE7Blink_tb+0x4aa>
    b4c6:	54 c0       	rjmp	.+168    	; 0xb570 <_ZN4leds5blinkE7Blink_tb+0x552>
				{
					lastRedBlinkSetting = LEDS_RED_ON_CONSTANT;
    b4c8:	87 e0       	ldi	r24, 0x07	; 7
    b4ca:	80 93 b3 46 	sts	0x46B3, r24	; 0x8046b3 <_ZL19lastRedBlinkSetting>
					red_blink_on_period = SLOW_ON;
    b4ce:	89 e1       	ldi	r24, 0x19	; 25
    b4d0:	90 e0       	ldi	r25, 0x00	; 0
    b4d2:	80 93 b5 46 	sts	0x46B5, r24	; 0x8046b5 <_ZL19red_blink_on_period>
    b4d6:	90 93 b6 46 	sts	0x46B6, r25	; 0x8046b6 <_ZL19red_blink_on_period+0x1>
					red_blink_off_period = 0;
    b4da:	10 92 b7 46 	sts	0x46B7, r1	; 0x8046b7 <_ZL20red_blink_off_period>
    b4de:	10 92 b8 46 	sts	0x46B8, r1	; 0x8046b8 <_ZL20red_blink_off_period+0x1>
					red_blink_count = red_blink_on_period;
    b4e2:	80 91 b5 46 	lds	r24, 0x46B5	; 0x8046b5 <_ZL19red_blink_on_period>
    b4e6:	90 91 b6 46 	lds	r25, 0x46B6	; 0x8046b6 <_ZL19red_blink_on_period+0x1>
    b4ea:	80 93 bd 46 	sts	0x46BD, r24	; 0x8046bd <_ZL15red_blink_count>
    b4ee:	90 93 be 46 	sts	0x46BE, r25	; 0x8046be <_ZL15red_blink_count+0x1>
					red_led_configured = true;			
    b4f2:	81 e0       	ldi	r24, 0x01	; 1
    b4f4:	80 93 c1 46 	sts	0x46C1, r24	; 0x8046c1 <_ZL18red_led_configured>
					timer_blink_inhibit = false; /* Enable timer LED control */
    b4f8:	10 92 b1 46 	sts	0x46B1, r1	; 0x8046b1 <_ZL19timer_blink_inhibit>
				}
			}
			break;
    b4fc:	39 c0       	rjmp	.+114    	; 0xb570 <_ZN4leds5blinkE7Blink_tb+0x552>
			
			case LEDS_GREEN_ON_CONSTANT:
			{
				if(lastGreenBlinkSetting != LEDS_GREEN_ON_CONSTANT)
    b4fe:	90 91 b4 46 	lds	r25, 0x46B4	; 0x8046b4 <_ZL21lastGreenBlinkSetting>
    b502:	81 e0       	ldi	r24, 0x01	; 1
    b504:	98 30       	cpi	r25, 0x08	; 8
    b506:	09 f4       	brne	.+2      	; 0xb50a <_ZN4leds5blinkE7Blink_tb+0x4ec>
    b508:	80 e0       	ldi	r24, 0x00	; 0
    b50a:	88 23       	and	r24, r24
    b50c:	99 f1       	breq	.+102    	; 0xb574 <_ZN4leds5blinkE7Blink_tb+0x556>
				{
					lastGreenBlinkSetting = LEDS_GREEN_ON_CONSTANT;
    b50e:	88 e0       	ldi	r24, 0x08	; 8
    b510:	80 93 b4 46 	sts	0x46B4, r24	; 0x8046b4 <_ZL21lastGreenBlinkSetting>
					green_blink_on_period = SLOW_ON;
    b514:	89 e1       	ldi	r24, 0x19	; 25
    b516:	90 e0       	ldi	r25, 0x00	; 0
    b518:	80 93 b9 46 	sts	0x46B9, r24	; 0x8046b9 <_ZL21green_blink_on_period>
    b51c:	90 93 ba 46 	sts	0x46BA, r25	; 0x8046ba <_ZL21green_blink_on_period+0x1>
					green_blink_off_period = 0;
    b520:	10 92 bb 46 	sts	0x46BB, r1	; 0x8046bb <_ZL22green_blink_off_period>
    b524:	10 92 bc 46 	sts	0x46BC, r1	; 0x8046bc <_ZL22green_blink_off_period+0x1>
					green_blink_count = green_blink_on_period;
    b528:	80 91 b9 46 	lds	r24, 0x46B9	; 0x8046b9 <_ZL21green_blink_on_period>
    b52c:	90 91 ba 46 	lds	r25, 0x46BA	; 0x8046ba <_ZL21green_blink_on_period+0x1>
    b530:	80 93 bf 46 	sts	0x46BF, r24	; 0x8046bf <_ZL17green_blink_count>
    b534:	90 93 c0 46 	sts	0x46C0, r25	; 0x8046c0 <_ZL17green_blink_count+0x1>
					green_led_configured = true;			
    b538:	81 e0       	ldi	r24, 0x01	; 1
    b53a:	80 93 c2 46 	sts	0x46C2, r24	; 0x8046c2 <_ZL20green_led_configured>
					timer_blink_inhibit = false; /* Enable timer LED control */
    b53e:	10 92 b1 46 	sts	0x46B1, r1	; 0x8046b1 <_ZL19timer_blink_inhibit>
				}
			}
			break;
    b542:	18 c0       	rjmp	.+48     	; 0xb574 <_ZN4leds5blinkE7Blink_tb+0x556>
			
			default:
			{
				
			}
			break;
    b544:	00 00       	nop
    b546:	17 c0       	rjmp	.+46     	; 0xb576 <_ZN4leds5blinkE7Blink_tb+0x558>
					LED_set_RED_level(OFF);
					red_blink_count = 0;
					red_led_configured = false;
				}
			}
			break;
    b548:	00 00       	nop
    b54a:	15 c0       	rjmp	.+42     	; 0xb576 <_ZN4leds5blinkE7Blink_tb+0x558>
					LED_set_GREEN_level(OFF);
					green_blink_count = 0;
					green_led_configured = false;
				}
			}
			break;
    b54c:	00 00       	nop
    b54e:	13 c0       	rjmp	.+38     	; 0xb576 <_ZN4leds5blinkE7Blink_tb+0x558>
					red_blink_count = red_blink_on_period;	
					red_led_configured = true;			
					timer_blink_inhibit = false; /* Enable timer LED control */
				}
			}
			break;
    b550:	00 00       	nop
    b552:	11 c0       	rjmp	.+34     	; 0xb576 <_ZN4leds5blinkE7Blink_tb+0x558>
					green_blink_count = green_blink_on_period;			
					green_led_configured = true;			
					timer_blink_inhibit = false; /* Enable timer LED control */
				}
			}
			break;
    b554:	00 00       	nop
    b556:	0f c0       	rjmp	.+30     	; 0xb576 <_ZN4leds5blinkE7Blink_tb+0x558>
					red_blink_count = red_blink_on_period;				
					red_led_configured = true;			
					timer_blink_inhibit = false; /* Enable timer LED control */
				}
			}
			break;
    b558:	00 00       	nop
    b55a:	0d c0       	rjmp	.+26     	; 0xb576 <_ZN4leds5blinkE7Blink_tb+0x558>
					green_blink_count = green_blink_on_period;			
					green_led_configured = true;			
					timer_blink_inhibit = false; /* Enable timer LED control */
				}
			}
			break;
    b55c:	00 00       	nop
    b55e:	0b c0       	rjmp	.+22     	; 0xb576 <_ZN4leds5blinkE7Blink_tb+0x558>
					red_led_configured = true;			
					green_led_configured = true;			
					timer_blink_inhibit = false; /* Enable timer LED control */
				}
			}
			break;
    b560:	00 00       	nop
    b562:	09 c0       	rjmp	.+18     	; 0xb576 <_ZN4leds5blinkE7Blink_tb+0x558>
					red_led_configured = true;			
					green_led_configured = true;			
					timer_blink_inhibit = false; /* Enable timer LED control */
				}
			}
			break;
    b564:	00 00       	nop
    b566:	07 c0       	rjmp	.+14     	; 0xb576 <_ZN4leds5blinkE7Blink_tb+0x558>
					red_led_configured = true;			
					green_led_configured = true;			
					timer_blink_inhibit = false; /* Enable timer LED control */
				}
			}
			break;
    b568:	00 00       	nop
    b56a:	05 c0       	rjmp	.+10     	; 0xb576 <_ZN4leds5blinkE7Blink_tb+0x558>
					red_led_configured = true;			
					green_led_configured = true;			
					timer_blink_inhibit = false; /* Enable timer LED control */
				}
			}
			break;
    b56c:	00 00       	nop
    b56e:	03 c0       	rjmp	.+6      	; 0xb576 <_ZN4leds5blinkE7Blink_tb+0x558>
					red_blink_count = red_blink_on_period;
					red_led_configured = true;			
					timer_blink_inhibit = false; /* Enable timer LED control */
				}
			}
			break;
    b570:	00 00       	nop
    b572:	01 c0       	rjmp	.+2      	; 0xb576 <_ZN4leds5blinkE7Blink_tb+0x558>
					green_blink_count = green_blink_on_period;
					green_led_configured = true;			
					timer_blink_inhibit = false; /* Enable timer LED control */
				}
			}
			break;
    b574:	00 00       	nop
				
			}
			break;
		}
		
		TCB3.INTCTRL |= TCB_CAPT_bm;   /* Capture or Timeout: enabled */
    b576:	80 e3       	ldi	r24, 0x30	; 48
    b578:	9b e0       	ldi	r25, 0x0B	; 11
    b57a:	20 e3       	ldi	r18, 0x30	; 48
    b57c:	3b e0       	ldi	r19, 0x0B	; 11
    b57e:	f9 01       	movw	r30, r18
    b580:	25 81       	ldd	r18, Z+5	; 0x05
    b582:	21 60       	ori	r18, 0x01	; 1
    b584:	fc 01       	movw	r30, r24
    b586:	25 83       	std	Z+5, r18	; 0x05
	}
	
	lastBlinkSetting = blinkMode;
    b588:	8b 81       	ldd	r24, Y+3	; 0x03
    b58a:	80 93 b2 46 	sts	0x46B2, r24	; 0x8046b2 <_ZL16lastBlinkSetting>
    b58e:	01 c0       	rjmp	.+2      	; 0xb592 <_ZN4leds5blinkE7Blink_tb+0x574>
	if(resetTimeout)
	{
		led_timeout_count = LED_TIMEOUT_DELAY;
	}
	
	if(!led_timeout_count && (blinkMode != LEDS_OFF)) return;
    b590:	00 00       	nop
		
		TCB3.INTCTRL |= TCB_CAPT_bm;   /* Capture or Timeout: enabled */
	}
	
	lastBlinkSetting = blinkMode;
}
    b592:	24 96       	adiw	r28, 0x04	; 4
    b594:	cd bf       	out	0x3d, r28	; 61
    b596:	de bf       	out	0x3e, r29	; 62
    b598:	df 91       	pop	r29
    b59a:	cf 91       	pop	r28
    b59c:	08 95       	ret

0000b59e <PORTC_set_pin_pull_mode>:

void lb_send_sync(void)
{
	sprintf(g_tempMsgBuff, ".....");
	lb_send_text(g_tempMsgBuff);
}
    b59e:	cf 93       	push	r28
    b5a0:	df 93       	push	r29
    b5a2:	00 d0       	rcall	.+0      	; 0xb5a4 <PORTC_set_pin_pull_mode+0x6>
    b5a4:	00 d0       	rcall	.+0      	; 0xb5a6 <PORTC_set_pin_pull_mode+0x8>
    b5a6:	cd b7       	in	r28, 0x3d	; 61
    b5a8:	de b7       	in	r29, 0x3e	; 62
    b5aa:	8b 83       	std	Y+3, r24	; 0x03
    b5ac:	6c 83       	std	Y+4, r22	; 0x04
    b5ae:	8b 81       	ldd	r24, Y+3	; 0x03
    b5b0:	88 2f       	mov	r24, r24
    b5b2:	90 e0       	ldi	r25, 0x00	; 0
    b5b4:	80 5b       	subi	r24, 0xB0	; 176
    b5b6:	9b 4f       	sbci	r25, 0xFB	; 251
    b5b8:	89 83       	std	Y+1, r24	; 0x01
    b5ba:	9a 83       	std	Y+2, r25	; 0x02
    b5bc:	8c 81       	ldd	r24, Y+4	; 0x04
    b5be:	81 30       	cpi	r24, 0x01	; 1
    b5c0:	59 f4       	brne	.+22     	; 0xb5d8 <PORTC_set_pin_pull_mode+0x3a>
    b5c2:	89 81       	ldd	r24, Y+1	; 0x01
    b5c4:	9a 81       	ldd	r25, Y+2	; 0x02
    b5c6:	fc 01       	movw	r30, r24
    b5c8:	80 81       	ld	r24, Z
    b5ca:	28 2f       	mov	r18, r24
    b5cc:	28 60       	ori	r18, 0x08	; 8
    b5ce:	89 81       	ldd	r24, Y+1	; 0x01
    b5d0:	9a 81       	ldd	r25, Y+2	; 0x02
    b5d2:	fc 01       	movw	r30, r24
    b5d4:	20 83       	st	Z, r18
    b5d6:	0d c0       	rjmp	.+26     	; 0xb5f2 <PORTC_set_pin_pull_mode+0x54>
    b5d8:	8c 81       	ldd	r24, Y+4	; 0x04
    b5da:	88 23       	and	r24, r24
    b5dc:	51 f4       	brne	.+20     	; 0xb5f2 <PORTC_set_pin_pull_mode+0x54>
    b5de:	89 81       	ldd	r24, Y+1	; 0x01
    b5e0:	9a 81       	ldd	r25, Y+2	; 0x02
    b5e2:	fc 01       	movw	r30, r24
    b5e4:	80 81       	ld	r24, Z
    b5e6:	28 2f       	mov	r18, r24
    b5e8:	27 7f       	andi	r18, 0xF7	; 247
    b5ea:	89 81       	ldd	r24, Y+1	; 0x01
    b5ec:	9a 81       	ldd	r25, Y+2	; 0x02
    b5ee:	fc 01       	movw	r30, r24
    b5f0:	20 83       	st	Z, r18
    b5f2:	00 00       	nop
    b5f4:	24 96       	adiw	r28, 0x04	; 4
    b5f6:	cd bf       	out	0x3d, r28	; 61
    b5f8:	de bf       	out	0x3e, r29	; 62
    b5fa:	df 91       	pop	r29
    b5fc:	cf 91       	pop	r28
    b5fe:	08 95       	ret

0000b600 <PORTC_set_pin_dir>:
    b600:	cf 93       	push	r28
    b602:	df 93       	push	r29
    b604:	00 d0       	rcall	.+0      	; 0xb606 <PORTC_set_pin_dir+0x6>
    b606:	cd b7       	in	r28, 0x3d	; 61
    b608:	de b7       	in	r29, 0x3e	; 62
    b60a:	89 83       	std	Y+1, r24	; 0x01
    b60c:	6a 83       	std	Y+2, r22	; 0x02
    b60e:	8a 81       	ldd	r24, Y+2	; 0x02
    b610:	88 2f       	mov	r24, r24
    b612:	90 e0       	ldi	r25, 0x00	; 0
    b614:	81 30       	cpi	r24, 0x01	; 1
    b616:	91 05       	cpc	r25, r1
    b618:	e1 f0       	breq	.+56     	; 0xb652 <PORTC_set_pin_dir+0x52>
    b61a:	82 30       	cpi	r24, 0x02	; 2
    b61c:	91 05       	cpc	r25, r1
    b61e:	71 f1       	breq	.+92     	; 0xb67c <PORTC_set_pin_dir+0x7c>
    b620:	89 2b       	or	r24, r25
    b622:	09 f0       	breq	.+2      	; 0xb626 <PORTC_set_pin_dir+0x26>
    b624:	3b c0       	rjmp	.+118    	; 0xb69c <PORTC_set_pin_dir+0x9c>
    b626:	88 e0       	ldi	r24, 0x08	; 8
    b628:	90 e0       	ldi	r25, 0x00	; 0
    b62a:	28 e0       	ldi	r18, 0x08	; 8
    b62c:	30 e0       	ldi	r19, 0x00	; 0
    b62e:	f9 01       	movw	r30, r18
    b630:	20 81       	ld	r18, Z
    b632:	62 2f       	mov	r22, r18
    b634:	29 81       	ldd	r18, Y+1	; 0x01
    b636:	42 2f       	mov	r20, r18
    b638:	50 e0       	ldi	r21, 0x00	; 0
    b63a:	21 e0       	ldi	r18, 0x01	; 1
    b63c:	30 e0       	ldi	r19, 0x00	; 0
    b63e:	02 c0       	rjmp	.+4      	; 0xb644 <PORTC_set_pin_dir+0x44>
    b640:	22 0f       	add	r18, r18
    b642:	33 1f       	adc	r19, r19
    b644:	4a 95       	dec	r20
    b646:	e2 f7       	brpl	.-8      	; 0xb640 <PORTC_set_pin_dir+0x40>
    b648:	20 95       	com	r18
    b64a:	26 23       	and	r18, r22
    b64c:	fc 01       	movw	r30, r24
    b64e:	20 83       	st	Z, r18
    b650:	25 c0       	rjmp	.+74     	; 0xb69c <PORTC_set_pin_dir+0x9c>
    b652:	88 e0       	ldi	r24, 0x08	; 8
    b654:	90 e0       	ldi	r25, 0x00	; 0
    b656:	28 e0       	ldi	r18, 0x08	; 8
    b658:	30 e0       	ldi	r19, 0x00	; 0
    b65a:	f9 01       	movw	r30, r18
    b65c:	20 81       	ld	r18, Z
    b65e:	62 2f       	mov	r22, r18
    b660:	29 81       	ldd	r18, Y+1	; 0x01
    b662:	42 2f       	mov	r20, r18
    b664:	50 e0       	ldi	r21, 0x00	; 0
    b666:	21 e0       	ldi	r18, 0x01	; 1
    b668:	30 e0       	ldi	r19, 0x00	; 0
    b66a:	02 c0       	rjmp	.+4      	; 0xb670 <PORTC_set_pin_dir+0x70>
    b66c:	22 0f       	add	r18, r18
    b66e:	33 1f       	adc	r19, r19
    b670:	4a 95       	dec	r20
    b672:	e2 f7       	brpl	.-8      	; 0xb66c <PORTC_set_pin_dir+0x6c>
    b674:	26 2b       	or	r18, r22
    b676:	fc 01       	movw	r30, r24
    b678:	20 83       	st	Z, r18
    b67a:	10 c0       	rjmp	.+32     	; 0xb69c <PORTC_set_pin_dir+0x9c>
    b67c:	89 81       	ldd	r24, Y+1	; 0x01
    b67e:	88 2f       	mov	r24, r24
    b680:	90 e0       	ldi	r25, 0x00	; 0
    b682:	80 5b       	subi	r24, 0xB0	; 176
    b684:	9b 4f       	sbci	r25, 0xFB	; 251
    b686:	29 81       	ldd	r18, Y+1	; 0x01
    b688:	22 2f       	mov	r18, r18
    b68a:	30 e0       	ldi	r19, 0x00	; 0
    b68c:	20 5b       	subi	r18, 0xB0	; 176
    b68e:	3b 4f       	sbci	r19, 0xFB	; 251
    b690:	f9 01       	movw	r30, r18
    b692:	20 81       	ld	r18, Z
    b694:	28 60       	ori	r18, 0x08	; 8
    b696:	fc 01       	movw	r30, r24
    b698:	20 83       	st	Z, r18
    b69a:	00 00       	nop
    b69c:	00 00       	nop
    b69e:	0f 90       	pop	r0
    b6a0:	0f 90       	pop	r0
    b6a2:	df 91       	pop	r29
    b6a4:	cf 91       	pop	r28
    b6a6:	08 95       	ret

0000b6a8 <PORTC_set_pin_level>:
    b6a8:	cf 93       	push	r28
    b6aa:	df 93       	push	r29
    b6ac:	00 d0       	rcall	.+0      	; 0xb6ae <PORTC_set_pin_level+0x6>
    b6ae:	cd b7       	in	r28, 0x3d	; 61
    b6b0:	de b7       	in	r29, 0x3e	; 62
    b6b2:	89 83       	std	Y+1, r24	; 0x01
    b6b4:	6a 83       	std	Y+2, r22	; 0x02
    b6b6:	8a 81       	ldd	r24, Y+2	; 0x02
    b6b8:	88 23       	and	r24, r24
    b6ba:	a9 f0       	breq	.+42     	; 0xb6e6 <PORTC_set_pin_level+0x3e>
    b6bc:	88 e0       	ldi	r24, 0x08	; 8
    b6be:	90 e0       	ldi	r25, 0x00	; 0
    b6c0:	28 e0       	ldi	r18, 0x08	; 8
    b6c2:	30 e0       	ldi	r19, 0x00	; 0
    b6c4:	f9 01       	movw	r30, r18
    b6c6:	21 81       	ldd	r18, Z+1	; 0x01
    b6c8:	62 2f       	mov	r22, r18
    b6ca:	29 81       	ldd	r18, Y+1	; 0x01
    b6cc:	42 2f       	mov	r20, r18
    b6ce:	50 e0       	ldi	r21, 0x00	; 0
    b6d0:	21 e0       	ldi	r18, 0x01	; 1
    b6d2:	30 e0       	ldi	r19, 0x00	; 0
    b6d4:	02 c0       	rjmp	.+4      	; 0xb6da <PORTC_set_pin_level+0x32>
    b6d6:	22 0f       	add	r18, r18
    b6d8:	33 1f       	adc	r19, r19
    b6da:	4a 95       	dec	r20
    b6dc:	e2 f7       	brpl	.-8      	; 0xb6d6 <PORTC_set_pin_level+0x2e>
    b6de:	26 2b       	or	r18, r22
    b6e0:	fc 01       	movw	r30, r24
    b6e2:	21 83       	std	Z+1, r18	; 0x01
    b6e4:	15 c0       	rjmp	.+42     	; 0xb710 <PORTC_set_pin_level+0x68>
    b6e6:	88 e0       	ldi	r24, 0x08	; 8
    b6e8:	90 e0       	ldi	r25, 0x00	; 0
    b6ea:	28 e0       	ldi	r18, 0x08	; 8
    b6ec:	30 e0       	ldi	r19, 0x00	; 0
    b6ee:	f9 01       	movw	r30, r18
    b6f0:	21 81       	ldd	r18, Z+1	; 0x01
    b6f2:	62 2f       	mov	r22, r18
    b6f4:	29 81       	ldd	r18, Y+1	; 0x01
    b6f6:	42 2f       	mov	r20, r18
    b6f8:	50 e0       	ldi	r21, 0x00	; 0
    b6fa:	21 e0       	ldi	r18, 0x01	; 1
    b6fc:	30 e0       	ldi	r19, 0x00	; 0
    b6fe:	02 c0       	rjmp	.+4      	; 0xb704 <PORTC_set_pin_level+0x5c>
    b700:	22 0f       	add	r18, r18
    b702:	33 1f       	adc	r19, r19
    b704:	4a 95       	dec	r20
    b706:	e2 f7       	brpl	.-8      	; 0xb700 <PORTC_set_pin_level+0x58>
    b708:	20 95       	com	r18
    b70a:	26 23       	and	r18, r22
    b70c:	fc 01       	movw	r30, r24
    b70e:	21 83       	std	Z+1, r18	; 0x01
    b710:	00 00       	nop
    b712:	0f 90       	pop	r0
    b714:	0f 90       	pop	r0
    b716:	df 91       	pop	r29
    b718:	cf 91       	pop	r28
    b71a:	08 95       	ret

0000b71c <PORTE_set_pin_pull_mode>:
    b71c:	cf 93       	push	r28
    b71e:	df 93       	push	r29
    b720:	00 d0       	rcall	.+0      	; 0xb722 <PORTE_set_pin_pull_mode+0x6>
    b722:	00 d0       	rcall	.+0      	; 0xb724 <PORTE_set_pin_pull_mode+0x8>
    b724:	cd b7       	in	r28, 0x3d	; 61
    b726:	de b7       	in	r29, 0x3e	; 62
    b728:	8b 83       	std	Y+3, r24	; 0x03
    b72a:	6c 83       	std	Y+4, r22	; 0x04
    b72c:	8b 81       	ldd	r24, Y+3	; 0x03
    b72e:	88 2f       	mov	r24, r24
    b730:	90 e0       	ldi	r25, 0x00	; 0
    b732:	80 57       	subi	r24, 0x70	; 112
    b734:	9b 4f       	sbci	r25, 0xFB	; 251
    b736:	89 83       	std	Y+1, r24	; 0x01
    b738:	9a 83       	std	Y+2, r25	; 0x02
    b73a:	8c 81       	ldd	r24, Y+4	; 0x04
    b73c:	81 30       	cpi	r24, 0x01	; 1
    b73e:	59 f4       	brne	.+22     	; 0xb756 <PORTE_set_pin_pull_mode+0x3a>
    b740:	89 81       	ldd	r24, Y+1	; 0x01
    b742:	9a 81       	ldd	r25, Y+2	; 0x02
    b744:	fc 01       	movw	r30, r24
    b746:	80 81       	ld	r24, Z
    b748:	28 2f       	mov	r18, r24
    b74a:	28 60       	ori	r18, 0x08	; 8
    b74c:	89 81       	ldd	r24, Y+1	; 0x01
    b74e:	9a 81       	ldd	r25, Y+2	; 0x02
    b750:	fc 01       	movw	r30, r24
    b752:	20 83       	st	Z, r18
    b754:	0d c0       	rjmp	.+26     	; 0xb770 <PORTE_set_pin_pull_mode+0x54>
    b756:	8c 81       	ldd	r24, Y+4	; 0x04
    b758:	88 23       	and	r24, r24
    b75a:	51 f4       	brne	.+20     	; 0xb770 <PORTE_set_pin_pull_mode+0x54>
    b75c:	89 81       	ldd	r24, Y+1	; 0x01
    b75e:	9a 81       	ldd	r25, Y+2	; 0x02
    b760:	fc 01       	movw	r30, r24
    b762:	80 81       	ld	r24, Z
    b764:	28 2f       	mov	r18, r24
    b766:	27 7f       	andi	r18, 0xF7	; 247
    b768:	89 81       	ldd	r24, Y+1	; 0x01
    b76a:	9a 81       	ldd	r25, Y+2	; 0x02
    b76c:	fc 01       	movw	r30, r24
    b76e:	20 83       	st	Z, r18
    b770:	00 00       	nop
    b772:	24 96       	adiw	r28, 0x04	; 4
    b774:	cd bf       	out	0x3d, r28	; 61
    b776:	de bf       	out	0x3e, r29	; 62
    b778:	df 91       	pop	r29
    b77a:	cf 91       	pop	r28
    b77c:	08 95       	ret

0000b77e <PORTE_set_pin_dir>:
    b77e:	cf 93       	push	r28
    b780:	df 93       	push	r29
    b782:	00 d0       	rcall	.+0      	; 0xb784 <PORTE_set_pin_dir+0x6>
    b784:	cd b7       	in	r28, 0x3d	; 61
    b786:	de b7       	in	r29, 0x3e	; 62
    b788:	89 83       	std	Y+1, r24	; 0x01
    b78a:	6a 83       	std	Y+2, r22	; 0x02
    b78c:	8a 81       	ldd	r24, Y+2	; 0x02
    b78e:	88 2f       	mov	r24, r24
    b790:	90 e0       	ldi	r25, 0x00	; 0
    b792:	81 30       	cpi	r24, 0x01	; 1
    b794:	91 05       	cpc	r25, r1
    b796:	e1 f0       	breq	.+56     	; 0xb7d0 <PORTE_set_pin_dir+0x52>
    b798:	82 30       	cpi	r24, 0x02	; 2
    b79a:	91 05       	cpc	r25, r1
    b79c:	71 f1       	breq	.+92     	; 0xb7fa <PORTE_set_pin_dir+0x7c>
    b79e:	89 2b       	or	r24, r25
    b7a0:	09 f0       	breq	.+2      	; 0xb7a4 <PORTE_set_pin_dir+0x26>
    b7a2:	3b c0       	rjmp	.+118    	; 0xb81a <PORTE_set_pin_dir+0x9c>
    b7a4:	80 e1       	ldi	r24, 0x10	; 16
    b7a6:	90 e0       	ldi	r25, 0x00	; 0
    b7a8:	20 e1       	ldi	r18, 0x10	; 16
    b7aa:	30 e0       	ldi	r19, 0x00	; 0
    b7ac:	f9 01       	movw	r30, r18
    b7ae:	20 81       	ld	r18, Z
    b7b0:	62 2f       	mov	r22, r18
    b7b2:	29 81       	ldd	r18, Y+1	; 0x01
    b7b4:	42 2f       	mov	r20, r18
    b7b6:	50 e0       	ldi	r21, 0x00	; 0
    b7b8:	21 e0       	ldi	r18, 0x01	; 1
    b7ba:	30 e0       	ldi	r19, 0x00	; 0
    b7bc:	02 c0       	rjmp	.+4      	; 0xb7c2 <PORTE_set_pin_dir+0x44>
    b7be:	22 0f       	add	r18, r18
    b7c0:	33 1f       	adc	r19, r19
    b7c2:	4a 95       	dec	r20
    b7c4:	e2 f7       	brpl	.-8      	; 0xb7be <PORTE_set_pin_dir+0x40>
    b7c6:	20 95       	com	r18
    b7c8:	26 23       	and	r18, r22
    b7ca:	fc 01       	movw	r30, r24
    b7cc:	20 83       	st	Z, r18
    b7ce:	25 c0       	rjmp	.+74     	; 0xb81a <PORTE_set_pin_dir+0x9c>
    b7d0:	80 e1       	ldi	r24, 0x10	; 16
    b7d2:	90 e0       	ldi	r25, 0x00	; 0
    b7d4:	20 e1       	ldi	r18, 0x10	; 16
    b7d6:	30 e0       	ldi	r19, 0x00	; 0
    b7d8:	f9 01       	movw	r30, r18
    b7da:	20 81       	ld	r18, Z
    b7dc:	62 2f       	mov	r22, r18
    b7de:	29 81       	ldd	r18, Y+1	; 0x01
    b7e0:	42 2f       	mov	r20, r18
    b7e2:	50 e0       	ldi	r21, 0x00	; 0
    b7e4:	21 e0       	ldi	r18, 0x01	; 1
    b7e6:	30 e0       	ldi	r19, 0x00	; 0
    b7e8:	02 c0       	rjmp	.+4      	; 0xb7ee <PORTE_set_pin_dir+0x70>
    b7ea:	22 0f       	add	r18, r18
    b7ec:	33 1f       	adc	r19, r19
    b7ee:	4a 95       	dec	r20
    b7f0:	e2 f7       	brpl	.-8      	; 0xb7ea <PORTE_set_pin_dir+0x6c>
    b7f2:	26 2b       	or	r18, r22
    b7f4:	fc 01       	movw	r30, r24
    b7f6:	20 83       	st	Z, r18
    b7f8:	10 c0       	rjmp	.+32     	; 0xb81a <PORTE_set_pin_dir+0x9c>
    b7fa:	89 81       	ldd	r24, Y+1	; 0x01
    b7fc:	88 2f       	mov	r24, r24
    b7fe:	90 e0       	ldi	r25, 0x00	; 0
    b800:	80 57       	subi	r24, 0x70	; 112
    b802:	9b 4f       	sbci	r25, 0xFB	; 251
    b804:	29 81       	ldd	r18, Y+1	; 0x01
    b806:	22 2f       	mov	r18, r18
    b808:	30 e0       	ldi	r19, 0x00	; 0
    b80a:	20 57       	subi	r18, 0x70	; 112
    b80c:	3b 4f       	sbci	r19, 0xFB	; 251
    b80e:	f9 01       	movw	r30, r18
    b810:	20 81       	ld	r18, Z
    b812:	28 60       	ori	r18, 0x08	; 8
    b814:	fc 01       	movw	r30, r24
    b816:	20 83       	st	Z, r18
    b818:	00 00       	nop
    b81a:	00 00       	nop
    b81c:	0f 90       	pop	r0
    b81e:	0f 90       	pop	r0
    b820:	df 91       	pop	r29
    b822:	cf 91       	pop	r28
    b824:	08 95       	ret

0000b826 <PORTE_set_pin_level>:
    b826:	cf 93       	push	r28
    b828:	df 93       	push	r29
    b82a:	00 d0       	rcall	.+0      	; 0xb82c <PORTE_set_pin_level+0x6>
    b82c:	cd b7       	in	r28, 0x3d	; 61
    b82e:	de b7       	in	r29, 0x3e	; 62
    b830:	89 83       	std	Y+1, r24	; 0x01
    b832:	6a 83       	std	Y+2, r22	; 0x02
    b834:	8a 81       	ldd	r24, Y+2	; 0x02
    b836:	88 23       	and	r24, r24
    b838:	a9 f0       	breq	.+42     	; 0xb864 <PORTE_set_pin_level+0x3e>
    b83a:	80 e1       	ldi	r24, 0x10	; 16
    b83c:	90 e0       	ldi	r25, 0x00	; 0
    b83e:	20 e1       	ldi	r18, 0x10	; 16
    b840:	30 e0       	ldi	r19, 0x00	; 0
    b842:	f9 01       	movw	r30, r18
    b844:	21 81       	ldd	r18, Z+1	; 0x01
    b846:	62 2f       	mov	r22, r18
    b848:	29 81       	ldd	r18, Y+1	; 0x01
    b84a:	42 2f       	mov	r20, r18
    b84c:	50 e0       	ldi	r21, 0x00	; 0
    b84e:	21 e0       	ldi	r18, 0x01	; 1
    b850:	30 e0       	ldi	r19, 0x00	; 0
    b852:	02 c0       	rjmp	.+4      	; 0xb858 <PORTE_set_pin_level+0x32>
    b854:	22 0f       	add	r18, r18
    b856:	33 1f       	adc	r19, r19
    b858:	4a 95       	dec	r20
    b85a:	e2 f7       	brpl	.-8      	; 0xb854 <PORTE_set_pin_level+0x2e>
    b85c:	26 2b       	or	r18, r22
    b85e:	fc 01       	movw	r30, r24
    b860:	21 83       	std	Z+1, r18	; 0x01
    b862:	15 c0       	rjmp	.+42     	; 0xb88e <PORTE_set_pin_level+0x68>
    b864:	80 e1       	ldi	r24, 0x10	; 16
    b866:	90 e0       	ldi	r25, 0x00	; 0
    b868:	20 e1       	ldi	r18, 0x10	; 16
    b86a:	30 e0       	ldi	r19, 0x00	; 0
    b86c:	f9 01       	movw	r30, r18
    b86e:	21 81       	ldd	r18, Z+1	; 0x01
    b870:	62 2f       	mov	r22, r18
    b872:	29 81       	ldd	r18, Y+1	; 0x01
    b874:	42 2f       	mov	r20, r18
    b876:	50 e0       	ldi	r21, 0x00	; 0
    b878:	21 e0       	ldi	r18, 0x01	; 1
    b87a:	30 e0       	ldi	r19, 0x00	; 0
    b87c:	02 c0       	rjmp	.+4      	; 0xb882 <PORTE_set_pin_level+0x5c>
    b87e:	22 0f       	add	r18, r18
    b880:	33 1f       	adc	r19, r19
    b882:	4a 95       	dec	r20
    b884:	e2 f7       	brpl	.-8      	; 0xb87e <PORTE_set_pin_level+0x58>
    b886:	20 95       	com	r18
    b888:	26 23       	and	r18, r22
    b88a:	fc 01       	movw	r30, r24
    b88c:	21 83       	std	Z+1, r18	; 0x01
    b88e:	00 00       	nop
    b890:	0f 90       	pop	r0
    b892:	0f 90       	pop	r0
    b894:	df 91       	pop	r29
    b896:	cf 91       	pop	r28
    b898:	08 95       	ret

0000b89a <PC0_set_dir>:
    b89a:	cf 93       	push	r28
    b89c:	df 93       	push	r29
    b89e:	1f 92       	push	r1
    b8a0:	cd b7       	in	r28, 0x3d	; 61
    b8a2:	de b7       	in	r29, 0x3e	; 62
    b8a4:	89 83       	std	Y+1, r24	; 0x01
    b8a6:	69 81       	ldd	r22, Y+1	; 0x01
    b8a8:	80 e0       	ldi	r24, 0x00	; 0
    b8aa:	0e 94 00 5b 	call	0xb600	; 0xb600 <PORTC_set_pin_dir>
    b8ae:	00 00       	nop
    b8b0:	0f 90       	pop	r0
    b8b2:	df 91       	pop	r29
    b8b4:	cf 91       	pop	r28
    b8b6:	08 95       	ret

0000b8b8 <PC0_set_level>:
    b8b8:	cf 93       	push	r28
    b8ba:	df 93       	push	r29
    b8bc:	1f 92       	push	r1
    b8be:	cd b7       	in	r28, 0x3d	; 61
    b8c0:	de b7       	in	r29, 0x3e	; 62
    b8c2:	89 83       	std	Y+1, r24	; 0x01
    b8c4:	69 81       	ldd	r22, Y+1	; 0x01
    b8c6:	80 e0       	ldi	r24, 0x00	; 0
    b8c8:	0e 94 54 5b 	call	0xb6a8	; 0xb6a8 <PORTC_set_pin_level>
    b8cc:	00 00       	nop
    b8ce:	0f 90       	pop	r0
    b8d0:	df 91       	pop	r29
    b8d2:	cf 91       	pop	r28
    b8d4:	08 95       	ret

0000b8d6 <PC1_set_pull_mode>:
    b8d6:	cf 93       	push	r28
    b8d8:	df 93       	push	r29
    b8da:	1f 92       	push	r1
    b8dc:	cd b7       	in	r28, 0x3d	; 61
    b8de:	de b7       	in	r29, 0x3e	; 62
    b8e0:	89 83       	std	Y+1, r24	; 0x01
    b8e2:	69 81       	ldd	r22, Y+1	; 0x01
    b8e4:	81 e0       	ldi	r24, 0x01	; 1
    b8e6:	0e 94 cf 5a 	call	0xb59e	; 0xb59e <PORTC_set_pin_pull_mode>
    b8ea:	00 00       	nop
    b8ec:	0f 90       	pop	r0
    b8ee:	df 91       	pop	r29
    b8f0:	cf 91       	pop	r28
    b8f2:	08 95       	ret

0000b8f4 <PC1_set_dir>:
    b8f4:	cf 93       	push	r28
    b8f6:	df 93       	push	r29
    b8f8:	1f 92       	push	r1
    b8fa:	cd b7       	in	r28, 0x3d	; 61
    b8fc:	de b7       	in	r29, 0x3e	; 62
    b8fe:	89 83       	std	Y+1, r24	; 0x01
    b900:	69 81       	ldd	r22, Y+1	; 0x01
    b902:	81 e0       	ldi	r24, 0x01	; 1
    b904:	0e 94 00 5b 	call	0xb600	; 0xb600 <PORTC_set_pin_dir>
    b908:	00 00       	nop
    b90a:	0f 90       	pop	r0
    b90c:	df 91       	pop	r29
    b90e:	cf 91       	pop	r28
    b910:	08 95       	ret

0000b912 <PE0_set_dir>:
    b912:	cf 93       	push	r28
    b914:	df 93       	push	r29
    b916:	1f 92       	push	r1
    b918:	cd b7       	in	r28, 0x3d	; 61
    b91a:	de b7       	in	r29, 0x3e	; 62
    b91c:	89 83       	std	Y+1, r24	; 0x01
    b91e:	69 81       	ldd	r22, Y+1	; 0x01
    b920:	80 e0       	ldi	r24, 0x00	; 0
    b922:	0e 94 bf 5b 	call	0xb77e	; 0xb77e <PORTE_set_pin_dir>
    b926:	00 00       	nop
    b928:	0f 90       	pop	r0
    b92a:	df 91       	pop	r29
    b92c:	cf 91       	pop	r28
    b92e:	08 95       	ret

0000b930 <PE0_set_level>:
    b930:	cf 93       	push	r28
    b932:	df 93       	push	r29
    b934:	1f 92       	push	r1
    b936:	cd b7       	in	r28, 0x3d	; 61
    b938:	de b7       	in	r29, 0x3e	; 62
    b93a:	89 83       	std	Y+1, r24	; 0x01
    b93c:	69 81       	ldd	r22, Y+1	; 0x01
    b93e:	80 e0       	ldi	r24, 0x00	; 0
    b940:	0e 94 13 5c 	call	0xb826	; 0xb826 <PORTE_set_pin_level>
    b944:	00 00       	nop
    b946:	0f 90       	pop	r0
    b948:	df 91       	pop	r29
    b94a:	cf 91       	pop	r28
    b94c:	08 95       	ret

0000b94e <PE1_set_pull_mode>:
    b94e:	cf 93       	push	r28
    b950:	df 93       	push	r29
    b952:	1f 92       	push	r1
    b954:	cd b7       	in	r28, 0x3d	; 61
    b956:	de b7       	in	r29, 0x3e	; 62
    b958:	89 83       	std	Y+1, r24	; 0x01
    b95a:	69 81       	ldd	r22, Y+1	; 0x01
    b95c:	81 e0       	ldi	r24, 0x01	; 1
    b95e:	0e 94 8e 5b 	call	0xb71c	; 0xb71c <PORTE_set_pin_pull_mode>
    b962:	00 00       	nop
    b964:	0f 90       	pop	r0
    b966:	df 91       	pop	r29
    b968:	cf 91       	pop	r28
    b96a:	08 95       	ret

0000b96c <PE1_set_dir>:
    b96c:	cf 93       	push	r28
    b96e:	df 93       	push	r29
    b970:	1f 92       	push	r1
    b972:	cd b7       	in	r28, 0x3d	; 61
    b974:	de b7       	in	r29, 0x3e	; 62
    b976:	89 83       	std	Y+1, r24	; 0x01
    b978:	69 81       	ldd	r22, Y+1	; 0x01
    b97a:	81 e0       	ldi	r24, 0x01	; 1
    b97c:	0e 94 bf 5b 	call	0xb77e	; 0xb77e <PORTE_set_pin_dir>
    b980:	00 00       	nop
    b982:	0f 90       	pop	r0
    b984:	df 91       	pop	r29
    b986:	cf 91       	pop	r28
    b988:	08 95       	ret

0000b98a <_Z18nextFullLBTxBufferv>:
    b98a:	cf 93       	push	r28
    b98c:	df 93       	push	r29
    b98e:	00 d0       	rcall	.+0      	; 0xb990 <_Z18nextFullLBTxBufferv+0x6>
    b990:	cd b7       	in	r28, 0x3d	; 61
    b992:	de b7       	in	r29, 0x3e	; 62
    b994:	81 e0       	ldi	r24, 0x01	; 1
    b996:	89 83       	std	Y+1, r24	; 0x01
    b998:	1a 82       	std	Y+2, r1	; 0x02
    b99a:	80 91 84 48 	lds	r24, 0x4884	; 0x804884 <_ZZ18nextFullLBTxBuffervE11bufferIndex>
    b99e:	28 2f       	mov	r18, r24
    b9a0:	30 e0       	ldi	r19, 0x00	; 0
    b9a2:	42 e3       	ldi	r20, 0x32	; 50
    b9a4:	42 9f       	mul	r20, r18
    b9a6:	c0 01       	movw	r24, r0
    b9a8:	43 9f       	mul	r20, r19
    b9aa:	90 0d       	add	r25, r0
    b9ac:	11 24       	eor	r1, r1
    b9ae:	8a 50       	subi	r24, 0x0A	; 10
    b9b0:	99 4b       	sbci	r25, 0xB9	; 185
    b9b2:	fc 01       	movw	r30, r24
    b9b4:	80 81       	ld	r24, Z
    b9b6:	88 23       	and	r24, r24
    b9b8:	c1 f4       	brne	.+48     	; 0xb9ea <_Z18nextFullLBTxBufferv+0x60>
    b9ba:	8a 81       	ldd	r24, Y+2	; 0x02
    b9bc:	8f 5f       	subi	r24, 0xFF	; 255
    b9be:	8a 83       	std	Y+2, r24	; 0x02
    b9c0:	81 e0       	ldi	r24, 0x01	; 1
    b9c2:	9a 81       	ldd	r25, Y+2	; 0x02
    b9c4:	94 30       	cpi	r25, 0x04	; 4
    b9c6:	08 f4       	brcc	.+2      	; 0xb9ca <_Z18nextFullLBTxBufferv+0x40>
    b9c8:	80 e0       	ldi	r24, 0x00	; 0
    b9ca:	88 23       	and	r24, r24
    b9cc:	11 f0       	breq	.+4      	; 0xb9d2 <_Z18nextFullLBTxBufferv+0x48>
    b9ce:	19 82       	std	Y+1, r1	; 0x01
    b9d0:	0c c0       	rjmp	.+24     	; 0xb9ea <_Z18nextFullLBTxBufferv+0x60>
    b9d2:	80 91 84 48 	lds	r24, 0x4884	; 0x804884 <_ZZ18nextFullLBTxBuffervE11bufferIndex>
    b9d6:	8f 5f       	subi	r24, 0xFF	; 255
    b9d8:	80 93 84 48 	sts	0x4884, r24	; 0x804884 <_ZZ18nextFullLBTxBuffervE11bufferIndex>
    b9dc:	80 91 84 48 	lds	r24, 0x4884	; 0x804884 <_ZZ18nextFullLBTxBuffervE11bufferIndex>
    b9e0:	84 30       	cpi	r24, 0x04	; 4
    b9e2:	d8 f2       	brcs	.-74     	; 0xb99a <_Z18nextFullLBTxBufferv+0x10>
    b9e4:	10 92 84 48 	sts	0x4884, r1	; 0x804884 <_ZZ18nextFullLBTxBuffervE11bufferIndex>
    b9e8:	d8 cf       	rjmp	.-80     	; 0xb99a <_Z18nextFullLBTxBufferv+0x10>
    b9ea:	89 81       	ldd	r24, Y+1	; 0x01
    b9ec:	88 23       	and	r24, r24
    b9ee:	69 f0       	breq	.+26     	; 0xba0a <_Z18nextFullLBTxBufferv+0x80>
    b9f0:	80 91 84 48 	lds	r24, 0x4884	; 0x804884 <_ZZ18nextFullLBTxBuffervE11bufferIndex>
    b9f4:	28 2f       	mov	r18, r24
    b9f6:	30 e0       	ldi	r19, 0x00	; 0
    b9f8:	42 e3       	ldi	r20, 0x32	; 50
    b9fa:	42 9f       	mul	r20, r18
    b9fc:	c0 01       	movw	r24, r0
    b9fe:	43 9f       	mul	r20, r19
    ba00:	90 0d       	add	r25, r0
    ba02:	11 24       	eor	r1, r1
    ba04:	8a 50       	subi	r24, 0x0A	; 10
    ba06:	99 4b       	sbci	r25, 0xB9	; 185
    ba08:	02 c0       	rjmp	.+4      	; 0xba0e <_Z18nextFullLBTxBufferv+0x84>
    ba0a:	80 e0       	ldi	r24, 0x00	; 0
    ba0c:	90 e0       	ldi	r25, 0x00	; 0
    ba0e:	0f 90       	pop	r0
    ba10:	0f 90       	pop	r0
    ba12:	df 91       	pop	r29
    ba14:	cf 91       	pop	r28
    ba16:	08 95       	ret

0000ba18 <_Z19nextEmptyLBTxBufferv>:
    ba18:	cf 93       	push	r28
    ba1a:	df 93       	push	r29
    ba1c:	00 d0       	rcall	.+0      	; 0xba1e <_Z19nextEmptyLBTxBufferv+0x6>
    ba1e:	cd b7       	in	r28, 0x3d	; 61
    ba20:	de b7       	in	r29, 0x3e	; 62
    ba22:	81 e0       	ldi	r24, 0x01	; 1
    ba24:	89 83       	std	Y+1, r24	; 0x01
    ba26:	1a 82       	std	Y+2, r1	; 0x02
    ba28:	80 91 85 48 	lds	r24, 0x4885	; 0x804885 <_ZZ19nextEmptyLBTxBuffervE11bufferIndex>
    ba2c:	28 2f       	mov	r18, r24
    ba2e:	30 e0       	ldi	r19, 0x00	; 0
    ba30:	42 e3       	ldi	r20, 0x32	; 50
    ba32:	42 9f       	mul	r20, r18
    ba34:	c0 01       	movw	r24, r0
    ba36:	43 9f       	mul	r20, r19
    ba38:	90 0d       	add	r25, r0
    ba3a:	11 24       	eor	r1, r1
    ba3c:	8a 50       	subi	r24, 0x0A	; 10
    ba3e:	99 4b       	sbci	r25, 0xB9	; 185
    ba40:	fc 01       	movw	r30, r24
    ba42:	80 81       	ld	r24, Z
    ba44:	88 23       	and	r24, r24
    ba46:	c1 f0       	breq	.+48     	; 0xba78 <_Z19nextEmptyLBTxBufferv+0x60>
    ba48:	8a 81       	ldd	r24, Y+2	; 0x02
    ba4a:	8f 5f       	subi	r24, 0xFF	; 255
    ba4c:	8a 83       	std	Y+2, r24	; 0x02
    ba4e:	81 e0       	ldi	r24, 0x01	; 1
    ba50:	9a 81       	ldd	r25, Y+2	; 0x02
    ba52:	94 30       	cpi	r25, 0x04	; 4
    ba54:	08 f4       	brcc	.+2      	; 0xba58 <_Z19nextEmptyLBTxBufferv+0x40>
    ba56:	80 e0       	ldi	r24, 0x00	; 0
    ba58:	88 23       	and	r24, r24
    ba5a:	11 f0       	breq	.+4      	; 0xba60 <_Z19nextEmptyLBTxBufferv+0x48>
    ba5c:	19 82       	std	Y+1, r1	; 0x01
    ba5e:	0c c0       	rjmp	.+24     	; 0xba78 <_Z19nextEmptyLBTxBufferv+0x60>
    ba60:	80 91 85 48 	lds	r24, 0x4885	; 0x804885 <_ZZ19nextEmptyLBTxBuffervE11bufferIndex>
    ba64:	8f 5f       	subi	r24, 0xFF	; 255
    ba66:	80 93 85 48 	sts	0x4885, r24	; 0x804885 <_ZZ19nextEmptyLBTxBuffervE11bufferIndex>
    ba6a:	80 91 85 48 	lds	r24, 0x4885	; 0x804885 <_ZZ19nextEmptyLBTxBuffervE11bufferIndex>
    ba6e:	84 30       	cpi	r24, 0x04	; 4
    ba70:	d8 f2       	brcs	.-74     	; 0xba28 <_Z19nextEmptyLBTxBufferv+0x10>
    ba72:	10 92 85 48 	sts	0x4885, r1	; 0x804885 <_ZZ19nextEmptyLBTxBuffervE11bufferIndex>
    ba76:	d8 cf       	rjmp	.-80     	; 0xba28 <_Z19nextEmptyLBTxBufferv+0x10>
    ba78:	89 81       	ldd	r24, Y+1	; 0x01
    ba7a:	88 23       	and	r24, r24
    ba7c:	69 f0       	breq	.+26     	; 0xba98 <_Z19nextEmptyLBTxBufferv+0x80>
    ba7e:	80 91 85 48 	lds	r24, 0x4885	; 0x804885 <_ZZ19nextEmptyLBTxBuffervE11bufferIndex>
    ba82:	28 2f       	mov	r18, r24
    ba84:	30 e0       	ldi	r19, 0x00	; 0
    ba86:	42 e3       	ldi	r20, 0x32	; 50
    ba88:	42 9f       	mul	r20, r18
    ba8a:	c0 01       	movw	r24, r0
    ba8c:	43 9f       	mul	r20, r19
    ba8e:	90 0d       	add	r25, r0
    ba90:	11 24       	eor	r1, r1
    ba92:	8a 50       	subi	r24, 0x0A	; 10
    ba94:	99 4b       	sbci	r25, 0xB9	; 185
    ba96:	02 c0       	rjmp	.+4      	; 0xba9c <_Z19nextEmptyLBTxBufferv+0x84>
    ba98:	80 e0       	ldi	r24, 0x00	; 0
    ba9a:	90 e0       	ldi	r25, 0x00	; 0
    ba9c:	0f 90       	pop	r0
    ba9e:	0f 90       	pop	r0
    baa0:	df 91       	pop	r29
    baa2:	cf 91       	pop	r28
    baa4:	08 95       	ret

0000baa6 <_Z19nextEmptyLBRxBufferv>:
    baa6:	cf 93       	push	r28
    baa8:	df 93       	push	r29
    baaa:	00 d0       	rcall	.+0      	; 0xbaac <_Z19nextEmptyLBRxBufferv+0x6>
    baac:	cd b7       	in	r28, 0x3d	; 61
    baae:	de b7       	in	r29, 0x3e	; 62
    bab0:	81 e0       	ldi	r24, 0x01	; 1
    bab2:	89 83       	std	Y+1, r24	; 0x01
    bab4:	1a 82       	std	Y+2, r1	; 0x02
    bab6:	80 91 86 48 	lds	r24, 0x4886	; 0x804886 <_ZZ19nextEmptyLBRxBuffervE11bufferIndex>
    baba:	28 2f       	mov	r18, r24
    babc:	30 e0       	ldi	r19, 0x00	; 0
    babe:	42 e4       	ldi	r20, 0x42	; 66
    bac0:	42 9f       	mul	r20, r18
    bac2:	c0 01       	movw	r24, r0
    bac4:	43 9f       	mul	r20, r19
    bac6:	90 0d       	add	r25, r0
    bac8:	11 24       	eor	r1, r1
    baca:	81 54       	subi	r24, 0x41	; 65
    bacc:	98 4b       	sbci	r25, 0xB8	; 184
    bace:	fc 01       	movw	r30, r24
    bad0:	80 81       	ld	r24, Z
    bad2:	91 81       	ldd	r25, Z+1	; 0x01
    bad4:	89 2b       	or	r24, r25
    bad6:	c1 f0       	breq	.+48     	; 0xbb08 <_Z19nextEmptyLBRxBufferv+0x62>
    bad8:	8a 81       	ldd	r24, Y+2	; 0x02
    bada:	8f 5f       	subi	r24, 0xFF	; 255
    badc:	8a 83       	std	Y+2, r24	; 0x02
    bade:	81 e0       	ldi	r24, 0x01	; 1
    bae0:	9a 81       	ldd	r25, Y+2	; 0x02
    bae2:	93 30       	cpi	r25, 0x03	; 3
    bae4:	08 f4       	brcc	.+2      	; 0xbae8 <_Z19nextEmptyLBRxBufferv+0x42>
    bae6:	80 e0       	ldi	r24, 0x00	; 0
    bae8:	88 23       	and	r24, r24
    baea:	11 f0       	breq	.+4      	; 0xbaf0 <_Z19nextEmptyLBRxBufferv+0x4a>
    baec:	19 82       	std	Y+1, r1	; 0x01
    baee:	0c c0       	rjmp	.+24     	; 0xbb08 <_Z19nextEmptyLBRxBufferv+0x62>
    baf0:	80 91 86 48 	lds	r24, 0x4886	; 0x804886 <_ZZ19nextEmptyLBRxBuffervE11bufferIndex>
    baf4:	8f 5f       	subi	r24, 0xFF	; 255
    baf6:	80 93 86 48 	sts	0x4886, r24	; 0x804886 <_ZZ19nextEmptyLBRxBuffervE11bufferIndex>
    bafa:	80 91 86 48 	lds	r24, 0x4886	; 0x804886 <_ZZ19nextEmptyLBRxBuffervE11bufferIndex>
    bafe:	83 30       	cpi	r24, 0x03	; 3
    bb00:	d0 f2       	brcs	.-76     	; 0xbab6 <_Z19nextEmptyLBRxBufferv+0x10>
    bb02:	10 92 86 48 	sts	0x4886, r1	; 0x804886 <_ZZ19nextEmptyLBRxBuffervE11bufferIndex>
    bb06:	d7 cf       	rjmp	.-82     	; 0xbab6 <_Z19nextEmptyLBRxBufferv+0x10>
    bb08:	89 81       	ldd	r24, Y+1	; 0x01
    bb0a:	88 23       	and	r24, r24
    bb0c:	69 f0       	breq	.+26     	; 0xbb28 <_Z19nextEmptyLBRxBufferv+0x82>
    bb0e:	80 91 86 48 	lds	r24, 0x4886	; 0x804886 <_ZZ19nextEmptyLBRxBuffervE11bufferIndex>
    bb12:	28 2f       	mov	r18, r24
    bb14:	30 e0       	ldi	r19, 0x00	; 0
    bb16:	42 e4       	ldi	r20, 0x42	; 66
    bb18:	42 9f       	mul	r20, r18
    bb1a:	c0 01       	movw	r24, r0
    bb1c:	43 9f       	mul	r20, r19
    bb1e:	90 0d       	add	r25, r0
    bb20:	11 24       	eor	r1, r1
    bb22:	82 54       	subi	r24, 0x42	; 66
    bb24:	98 4b       	sbci	r25, 0xB8	; 184
    bb26:	02 c0       	rjmp	.+4      	; 0xbb2c <_Z19nextEmptyLBRxBufferv+0x86>
    bb28:	80 e0       	ldi	r24, 0x00	; 0
    bb2a:	90 e0       	ldi	r25, 0x00	; 0
    bb2c:	0f 90       	pop	r0
    bb2e:	0f 90       	pop	r0
    bb30:	df 91       	pop	r29
    bb32:	cf 91       	pop	r28
    bb34:	08 95       	ret

0000bb36 <_Z18nextFullLBRxBufferv>:
    bb36:	cf 93       	push	r28
    bb38:	df 93       	push	r29
    bb3a:	00 d0       	rcall	.+0      	; 0xbb3c <_Z18nextFullLBRxBufferv+0x6>
    bb3c:	cd b7       	in	r28, 0x3d	; 61
    bb3e:	de b7       	in	r29, 0x3e	; 62
    bb40:	81 e0       	ldi	r24, 0x01	; 1
    bb42:	89 83       	std	Y+1, r24	; 0x01
    bb44:	1a 82       	std	Y+2, r1	; 0x02
    bb46:	80 91 87 48 	lds	r24, 0x4887	; 0x804887 <_ZZ18nextFullLBRxBuffervE11bufferIndex>
    bb4a:	28 2f       	mov	r18, r24
    bb4c:	30 e0       	ldi	r19, 0x00	; 0
    bb4e:	42 e4       	ldi	r20, 0x42	; 66
    bb50:	42 9f       	mul	r20, r18
    bb52:	c0 01       	movw	r24, r0
    bb54:	43 9f       	mul	r20, r19
    bb56:	90 0d       	add	r25, r0
    bb58:	11 24       	eor	r1, r1
    bb5a:	81 54       	subi	r24, 0x41	; 65
    bb5c:	98 4b       	sbci	r25, 0xB8	; 184
    bb5e:	fc 01       	movw	r30, r24
    bb60:	80 81       	ld	r24, Z
    bb62:	91 81       	ldd	r25, Z+1	; 0x01
    bb64:	89 2b       	or	r24, r25
    bb66:	c1 f4       	brne	.+48     	; 0xbb98 <_Z18nextFullLBRxBufferv+0x62>
    bb68:	8a 81       	ldd	r24, Y+2	; 0x02
    bb6a:	8f 5f       	subi	r24, 0xFF	; 255
    bb6c:	8a 83       	std	Y+2, r24	; 0x02
    bb6e:	81 e0       	ldi	r24, 0x01	; 1
    bb70:	9a 81       	ldd	r25, Y+2	; 0x02
    bb72:	93 30       	cpi	r25, 0x03	; 3
    bb74:	08 f4       	brcc	.+2      	; 0xbb78 <_Z18nextFullLBRxBufferv+0x42>
    bb76:	80 e0       	ldi	r24, 0x00	; 0
    bb78:	88 23       	and	r24, r24
    bb7a:	11 f0       	breq	.+4      	; 0xbb80 <_Z18nextFullLBRxBufferv+0x4a>
    bb7c:	19 82       	std	Y+1, r1	; 0x01
    bb7e:	0c c0       	rjmp	.+24     	; 0xbb98 <_Z18nextFullLBRxBufferv+0x62>
    bb80:	80 91 87 48 	lds	r24, 0x4887	; 0x804887 <_ZZ18nextFullLBRxBuffervE11bufferIndex>
    bb84:	8f 5f       	subi	r24, 0xFF	; 255
    bb86:	80 93 87 48 	sts	0x4887, r24	; 0x804887 <_ZZ18nextFullLBRxBuffervE11bufferIndex>
    bb8a:	80 91 87 48 	lds	r24, 0x4887	; 0x804887 <_ZZ18nextFullLBRxBuffervE11bufferIndex>
    bb8e:	83 30       	cpi	r24, 0x03	; 3
    bb90:	d0 f2       	brcs	.-76     	; 0xbb46 <_Z18nextFullLBRxBufferv+0x10>
    bb92:	10 92 87 48 	sts	0x4887, r1	; 0x804887 <_ZZ18nextFullLBRxBuffervE11bufferIndex>
    bb96:	d7 cf       	rjmp	.-82     	; 0xbb46 <_Z18nextFullLBRxBufferv+0x10>
    bb98:	89 81       	ldd	r24, Y+1	; 0x01
    bb9a:	88 23       	and	r24, r24
    bb9c:	69 f0       	breq	.+26     	; 0xbbb8 <_Z18nextFullLBRxBufferv+0x82>
    bb9e:	80 91 87 48 	lds	r24, 0x4887	; 0x804887 <_ZZ18nextFullLBRxBuffervE11bufferIndex>
    bba2:	28 2f       	mov	r18, r24
    bba4:	30 e0       	ldi	r19, 0x00	; 0
    bba6:	42 e4       	ldi	r20, 0x42	; 66
    bba8:	42 9f       	mul	r20, r18
    bbaa:	c0 01       	movw	r24, r0
    bbac:	43 9f       	mul	r20, r19
    bbae:	90 0d       	add	r25, r0
    bbb0:	11 24       	eor	r1, r1
    bbb2:	82 54       	subi	r24, 0x42	; 66
    bbb4:	98 4b       	sbci	r25, 0xB8	; 184
    bbb6:	02 c0       	rjmp	.+4      	; 0xbbbc <_Z18nextFullLBRxBufferv+0x86>
    bbb8:	80 e0       	ldi	r24, 0x00	; 0
    bbba:	90 e0       	ldi	r25, 0x00	; 0
    bbbc:	0f 90       	pop	r0
    bbbe:	0f 90       	pop	r0
    bbc0:	df 91       	pop	r29
    bbc2:	cf 91       	pop	r28
    bbc4:	08 95       	ret

0000bbc6 <_Z19linkbusTxInProgressv>:
    bbc6:	cf 93       	push	r28
    bbc8:	df 93       	push	r29
    bbca:	cd b7       	in	r28, 0x3d	; 61
    bbcc:	de b7       	in	r29, 0x3e	; 62
    bbce:	80 91 f5 46 	lds	r24, 0x46F5	; 0x8046f5 <_ZL17linkbus_tx_active>
    bbd2:	df 91       	pop	r29
    bbd4:	cf 91       	pop	r28
    bbd6:	08 95       	ret

0000bbd8 <_ZL16linkbus_start_txv>:
    bbd8:	cf 93       	push	r28
    bbda:	df 93       	push	r29
    bbdc:	1f 92       	push	r1
    bbde:	cd b7       	in	r28, 0x3d	; 61
    bbe0:	de b7       	in	r29, 0x3e	; 62
    bbe2:	90 91 f5 46 	lds	r25, 0x46F5	; 0x8046f5 <_ZL17linkbus_tx_active>
    bbe6:	81 e0       	ldi	r24, 0x01	; 1
    bbe8:	89 27       	eor	r24, r25
    bbea:	89 83       	std	Y+1, r24	; 0x01
    bbec:	89 81       	ldd	r24, Y+1	; 0x01
    bbee:	88 23       	and	r24, r24
    bbf0:	61 f0       	breq	.+24     	; 0xbc0a <_ZL16linkbus_start_txv+0x32>
    bbf2:	81 e0       	ldi	r24, 0x01	; 1
    bbf4:	80 93 f5 46 	sts	0x46F5, r24	; 0x8046f5 <_ZL17linkbus_tx_active>
    bbf8:	80 91 4e 40 	lds	r24, 0x404E	; 0x80404e <g_linkbus_usart_number>
    bbfc:	84 30       	cpi	r24, 0x04	; 4
    bbfe:	19 f4       	brne	.+6      	; 0xbc06 <_ZL16linkbus_start_txv+0x2e>
    bc00:	0e 94 39 7a 	call	0xf472	; 0xf472 <USART4_enable_tx>
    bc04:	02 c0       	rjmp	.+4      	; 0xbc0a <_ZL16linkbus_start_txv+0x32>
    bc06:	0e 94 97 79 	call	0xf32e	; 0xf32e <USART1_enable_tx>
    bc0a:	89 81       	ldd	r24, Y+1	; 0x01
    bc0c:	0f 90       	pop	r0
    bc0e:	df 91       	pop	r29
    bc10:	cf 91       	pop	r28
    bc12:	08 95       	ret

0000bc14 <_Z14linkbus_end_txv>:
    bc14:	cf 93       	push	r28
    bc16:	df 93       	push	r29
    bc18:	cd b7       	in	r28, 0x3d	; 61
    bc1a:	de b7       	in	r29, 0x3e	; 62
    bc1c:	80 91 f5 46 	lds	r24, 0x46F5	; 0x8046f5 <_ZL17linkbus_tx_active>
    bc20:	88 23       	and	r24, r24
    bc22:	c9 f0       	breq	.+50     	; 0xbc56 <_Z14linkbus_end_txv+0x42>
    bc24:	80 91 4e 40 	lds	r24, 0x404E	; 0x80404e <g_linkbus_usart_number>
    bc28:	88 23       	and	r24, r24
    bc2a:	51 f4       	brne	.+20     	; 0xbc40 <_Z14linkbus_end_txv+0x2c>
    bc2c:	80 e8       	ldi	r24, 0x80	; 128
    bc2e:	98 e0       	ldi	r25, 0x08	; 8
    bc30:	20 e8       	ldi	r18, 0x80	; 128
    bc32:	38 e0       	ldi	r19, 0x08	; 8
    bc34:	f9 01       	movw	r30, r18
    bc36:	25 81       	ldd	r18, Z+5	; 0x05
    bc38:	2f 7d       	andi	r18, 0xDF	; 223
    bc3a:	fc 01       	movw	r30, r24
    bc3c:	25 83       	std	Z+5, r18	; 0x05
    bc3e:	09 c0       	rjmp	.+18     	; 0xbc52 <_Z14linkbus_end_txv+0x3e>
    bc40:	80 e2       	ldi	r24, 0x20	; 32
    bc42:	98 e0       	ldi	r25, 0x08	; 8
    bc44:	20 e2       	ldi	r18, 0x20	; 32
    bc46:	38 e0       	ldi	r19, 0x08	; 8
    bc48:	f9 01       	movw	r30, r18
    bc4a:	25 81       	ldd	r18, Z+5	; 0x05
    bc4c:	2f 7d       	andi	r18, 0xDF	; 223
    bc4e:	fc 01       	movw	r30, r24
    bc50:	25 83       	std	Z+5, r18	; 0x05
    bc52:	10 92 f5 46 	sts	0x46F5, r1	; 0x8046f5 <_ZL17linkbus_tx_active>
    bc56:	00 00       	nop
    bc58:	df 91       	pop	r29
    bc5a:	cf 91       	pop	r28
    bc5c:	08 95       	ret

0000bc5e <_ZL21USART1_initializationm>:
    bc5e:	cf 93       	push	r28
    bc60:	df 93       	push	r29
    bc62:	00 d0       	rcall	.+0      	; 0xbc64 <_ZL21USART1_initializationm+0x6>
    bc64:	00 d0       	rcall	.+0      	; 0xbc66 <_ZL21USART1_initializationm+0x8>
    bc66:	cd b7       	in	r28, 0x3d	; 61
    bc68:	de b7       	in	r29, 0x3e	; 62
    bc6a:	69 83       	std	Y+1, r22	; 0x01
    bc6c:	7a 83       	std	Y+2, r23	; 0x02
    bc6e:	8b 83       	std	Y+3, r24	; 0x03
    bc70:	9c 83       	std	Y+4, r25	; 0x04
    bc72:	80 e0       	ldi	r24, 0x00	; 0
    bc74:	0e 94 7a 5c 	call	0xb8f4	; 0xb8f4 <PC1_set_dir>
    bc78:	80 e0       	ldi	r24, 0x00	; 0
    bc7a:	0e 94 6b 5c 	call	0xb8d6	; 0xb8d6 <PC1_set_pull_mode>
    bc7e:	81 e0       	ldi	r24, 0x01	; 1
    bc80:	0e 94 4d 5c 	call	0xb89a	; 0xb89a <PC0_set_dir>
    bc84:	81 e0       	ldi	r24, 0x01	; 1
    bc86:	0e 94 5c 5c 	call	0xb8b8	; 0xb8b8 <PC0_set_level>
    bc8a:	89 81       	ldd	r24, Y+1	; 0x01
    bc8c:	9a 81       	ldd	r25, Y+2	; 0x02
    bc8e:	ab 81       	ldd	r26, Y+3	; 0x03
    bc90:	bc 81       	ldd	r27, Y+4	; 0x04
    bc92:	40 e0       	ldi	r20, 0x00	; 0
    bc94:	bc 01       	movw	r22, r24
    bc96:	cd 01       	movw	r24, r26
    bc98:	0e 94 24 79 	call	0xf248	; 0xf248 <USART1_init>
    bc9c:	00 00       	nop
    bc9e:	24 96       	adiw	r28, 0x04	; 4
    bca0:	cd bf       	out	0x3d, r28	; 61
    bca2:	de bf       	out	0x3e, r29	; 62
    bca4:	df 91       	pop	r29
    bca6:	cf 91       	pop	r28
    bca8:	08 95       	ret

0000bcaa <_ZL21USART4_initializationm>:
    bcaa:	cf 93       	push	r28
    bcac:	df 93       	push	r29
    bcae:	00 d0       	rcall	.+0      	; 0xbcb0 <_ZL21USART4_initializationm+0x6>
    bcb0:	00 d0       	rcall	.+0      	; 0xbcb2 <_ZL21USART4_initializationm+0x8>
    bcb2:	cd b7       	in	r28, 0x3d	; 61
    bcb4:	de b7       	in	r29, 0x3e	; 62
    bcb6:	69 83       	std	Y+1, r22	; 0x01
    bcb8:	7a 83       	std	Y+2, r23	; 0x02
    bcba:	8b 83       	std	Y+3, r24	; 0x03
    bcbc:	9c 83       	std	Y+4, r25	; 0x04
    bcbe:	80 e0       	ldi	r24, 0x00	; 0
    bcc0:	0e 94 b6 5c 	call	0xb96c	; 0xb96c <PE1_set_dir>
    bcc4:	80 e0       	ldi	r24, 0x00	; 0
    bcc6:	0e 94 a7 5c 	call	0xb94e	; 0xb94e <PE1_set_pull_mode>
    bcca:	81 e0       	ldi	r24, 0x01	; 1
    bccc:	0e 94 89 5c 	call	0xb912	; 0xb912 <PE0_set_dir>
    bcd0:	81 e0       	ldi	r24, 0x01	; 1
    bcd2:	0e 94 98 5c 	call	0xb930	; 0xb930 <PE0_set_level>
    bcd6:	89 81       	ldd	r24, Y+1	; 0x01
    bcd8:	9a 81       	ldd	r25, Y+2	; 0x02
    bcda:	ab 81       	ldd	r26, Y+3	; 0x03
    bcdc:	bc 81       	ldd	r27, Y+4	; 0x04
    bcde:	40 e0       	ldi	r20, 0x00	; 0
    bce0:	bc 01       	movw	r22, r24
    bce2:	cd 01       	movw	r24, r26
    bce4:	0e 94 cd 79 	call	0xf39a	; 0xf39a <USART4_init>
    bce8:	00 00       	nop
    bcea:	24 96       	adiw	r28, 0x04	; 4
    bcec:	cd bf       	out	0x3d, r28	; 61
    bcee:	de bf       	out	0x3e, r29	; 62
    bcf0:	df 91       	pop	r29
    bcf2:	cf 91       	pop	r28
    bcf4:	08 95       	ret

0000bcf6 <_Z12linkbus_initm14USART_Number_t>:
    bcf6:	cf 93       	push	r28
    bcf8:	df 93       	push	r29
    bcfa:	cd b7       	in	r28, 0x3d	; 61
    bcfc:	de b7       	in	r29, 0x3e	; 62
    bcfe:	27 97       	sbiw	r28, 0x07	; 7
    bd00:	cd bf       	out	0x3d, r28	; 61
    bd02:	de bf       	out	0x3e, r29	; 62
    bd04:	6b 83       	std	Y+3, r22	; 0x03
    bd06:	7c 83       	std	Y+4, r23	; 0x04
    bd08:	8d 83       	std	Y+5, r24	; 0x05
    bd0a:	9e 83       	std	Y+6, r25	; 0x06
    bd0c:	4f 83       	std	Y+7, r20	; 0x07
    bd0e:	46 ec       	ldi	r20, 0xC6	; 198
    bd10:	50 e0       	ldi	r21, 0x00	; 0
    bd12:	60 e0       	ldi	r22, 0x00	; 0
    bd14:	70 e0       	ldi	r23, 0x00	; 0
    bd16:	8e eb       	ldi	r24, 0xBE	; 190
    bd18:	97 e4       	ldi	r25, 0x47	; 71
    bd1a:	0e 94 39 7f 	call	0xfe72	; 0xfe72 <memset>
    bd1e:	19 82       	std	Y+1, r1	; 0x01
    bd20:	1a 82       	std	Y+2, r1	; 0x02
    bd22:	89 81       	ldd	r24, Y+1	; 0x01
    bd24:	9a 81       	ldd	r25, Y+2	; 0x02
    bd26:	04 97       	sbiw	r24, 0x04	; 4
    bd28:	94 f4       	brge	.+36     	; 0xbd4e <_Z12linkbus_initm14USART_Number_t+0x58>
    bd2a:	29 81       	ldd	r18, Y+1	; 0x01
    bd2c:	3a 81       	ldd	r19, Y+2	; 0x02
    bd2e:	42 e3       	ldi	r20, 0x32	; 50
    bd30:	42 9f       	mul	r20, r18
    bd32:	c0 01       	movw	r24, r0
    bd34:	43 9f       	mul	r20, r19
    bd36:	90 0d       	add	r25, r0
    bd38:	11 24       	eor	r1, r1
    bd3a:	8a 50       	subi	r24, 0x0A	; 10
    bd3c:	99 4b       	sbci	r25, 0xB9	; 185
    bd3e:	fc 01       	movw	r30, r24
    bd40:	10 82       	st	Z, r1
    bd42:	89 81       	ldd	r24, Y+1	; 0x01
    bd44:	9a 81       	ldd	r25, Y+2	; 0x02
    bd46:	01 96       	adiw	r24, 0x01	; 1
    bd48:	89 83       	std	Y+1, r24	; 0x01
    bd4a:	9a 83       	std	Y+2, r25	; 0x02
    bd4c:	ea cf       	rjmp	.-44     	; 0xbd22 <_Z12linkbus_initm14USART_Number_t+0x2c>
    bd4e:	8f 81       	ldd	r24, Y+7	; 0x07
    bd50:	86 30       	cpi	r24, 0x06	; 6
    bd52:	21 f4       	brne	.+8      	; 0xbd5c <_Z12linkbus_initm14USART_Number_t+0x66>
    bd54:	80 91 4e 40 	lds	r24, 0x404E	; 0x80404e <g_linkbus_usart_number>
    bd58:	87 30       	cpi	r24, 0x07	; 7
    bd5a:	b9 f4       	brne	.+46     	; 0xbd8a <_Z12linkbus_initm14USART_Number_t+0x94>
    bd5c:	8f 81       	ldd	r24, Y+7	; 0x07
    bd5e:	84 30       	cpi	r24, 0x04	; 4
    bd60:	49 f4       	brne	.+18     	; 0xbd74 <_Z12linkbus_initm14USART_Number_t+0x7e>
    bd62:	8b 81       	ldd	r24, Y+3	; 0x03
    bd64:	9c 81       	ldd	r25, Y+4	; 0x04
    bd66:	ad 81       	ldd	r26, Y+5	; 0x05
    bd68:	be 81       	ldd	r27, Y+6	; 0x06
    bd6a:	bc 01       	movw	r22, r24
    bd6c:	cd 01       	movw	r24, r26
    bd6e:	0e 94 55 5e 	call	0xbcaa	; 0xbcaa <_ZL21USART4_initializationm>
    bd72:	08 c0       	rjmp	.+16     	; 0xbd84 <_Z12linkbus_initm14USART_Number_t+0x8e>
    bd74:	8b 81       	ldd	r24, Y+3	; 0x03
    bd76:	9c 81       	ldd	r25, Y+4	; 0x04
    bd78:	ad 81       	ldd	r26, Y+5	; 0x05
    bd7a:	be 81       	ldd	r27, Y+6	; 0x06
    bd7c:	bc 01       	movw	r22, r24
    bd7e:	cd 01       	movw	r24, r26
    bd80:	0e 94 2f 5e 	call	0xbc5e	; 0xbc5e <_ZL21USART1_initializationm>
    bd84:	8f 81       	ldd	r24, Y+7	; 0x07
    bd86:	80 93 4e 40 	sts	0x404E, r24	; 0x80404e <g_linkbus_usart_number>
    bd8a:	10 92 4d 40 	sts	0x404D, r1	; 0x80404d <_ZL14g_bus_disabled>
    bd8e:	00 00       	nop
    bd90:	27 96       	adiw	r28, 0x07	; 7
    bd92:	cd bf       	out	0x3d, r28	; 61
    bd94:	de bf       	out	0x3e, r29	; 62
    bd96:	df 91       	pop	r29
    bd98:	cf 91       	pop	r28
    bd9a:	08 95       	ret

0000bd9c <_Z15linkbus_disablev>:
    bd9c:	cf 93       	push	r28
    bd9e:	df 93       	push	r29
    bda0:	1f 92       	push	r1
    bda2:	cd b7       	in	r28, 0x3d	; 61
    bda4:	de b7       	in	r29, 0x3e	; 62
    bda6:	81 e0       	ldi	r24, 0x01	; 1
    bda8:	80 93 4d 40 	sts	0x404D, r24	; 0x80404d <_ZL14g_bus_disabled>
    bdac:	80 91 4e 40 	lds	r24, 0x404E	; 0x80404e <g_linkbus_usart_number>
    bdb0:	84 30       	cpi	r24, 0x04	; 4
    bdb2:	19 f4       	brne	.+6      	; 0xbdba <_Z15linkbus_disablev+0x1e>
    bdb4:	0e 94 53 7a 	call	0xf4a6	; 0xf4a6 <USART4_disable>
    bdb8:	02 c0       	rjmp	.+4      	; 0xbdbe <_Z15linkbus_disablev+0x22>
    bdba:	0e 94 b1 79 	call	0xf362	; 0xf362 <USART1_disable>
    bdbe:	0e 94 0a 5e 	call	0xbc14	; 0xbc14 <_Z14linkbus_end_txv>
    bdc2:	46 ec       	ldi	r20, 0xC6	; 198
    bdc4:	50 e0       	ldi	r21, 0x00	; 0
    bdc6:	60 e0       	ldi	r22, 0x00	; 0
    bdc8:	70 e0       	ldi	r23, 0x00	; 0
    bdca:	8e eb       	ldi	r24, 0xBE	; 190
    bdcc:	97 e4       	ldi	r25, 0x47	; 71
    bdce:	0e 94 39 7f 	call	0xfe72	; 0xfe72 <memset>
    bdd2:	19 82       	std	Y+1, r1	; 0x01
    bdd4:	89 81       	ldd	r24, Y+1	; 0x01
    bdd6:	84 30       	cpi	r24, 0x04	; 4
    bdd8:	88 f4       	brcc	.+34     	; 0xbdfc <_Z15linkbus_disablev+0x60>
    bdda:	89 81       	ldd	r24, Y+1	; 0x01
    bddc:	28 2f       	mov	r18, r24
    bdde:	30 e0       	ldi	r19, 0x00	; 0
    bde0:	42 e3       	ldi	r20, 0x32	; 50
    bde2:	42 9f       	mul	r20, r18
    bde4:	c0 01       	movw	r24, r0
    bde6:	43 9f       	mul	r20, r19
    bde8:	90 0d       	add	r25, r0
    bdea:	11 24       	eor	r1, r1
    bdec:	8a 50       	subi	r24, 0x0A	; 10
    bdee:	99 4b       	sbci	r25, 0xB9	; 185
    bdf0:	fc 01       	movw	r30, r24
    bdf2:	10 82       	st	Z, r1
    bdf4:	89 81       	ldd	r24, Y+1	; 0x01
    bdf6:	8f 5f       	subi	r24, 0xFF	; 255
    bdf8:	89 83       	std	Y+1, r24	; 0x01
    bdfa:	ec cf       	rjmp	.-40     	; 0xbdd4 <_Z15linkbus_disablev+0x38>
    bdfc:	00 00       	nop
    bdfe:	0f 90       	pop	r0
    be00:	df 91       	pop	r29
    be02:	cf 91       	pop	r28
    be04:	08 95       	ret

0000be06 <_Z14linkbus_enablev>:
    be06:	cf 93       	push	r28
    be08:	df 93       	push	r29
    be0a:	1f 92       	push	r1
    be0c:	cd b7       	in	r28, 0x3d	; 61
    be0e:	de b7       	in	r29, 0x3e	; 62
    be10:	10 92 4d 40 	sts	0x404D, r1	; 0x80404d <_ZL14g_bus_disabled>
    be14:	80 91 4e 40 	lds	r24, 0x404E	; 0x80404e <g_linkbus_usart_number>
    be18:	84 30       	cpi	r24, 0x04	; 4
    be1a:	19 f4       	brne	.+6      	; 0xbe22 <_Z14linkbus_enablev+0x1c>
    be1c:	0e 94 28 7a 	call	0xf450	; 0xf450 <USART4_enable>
    be20:	02 c0       	rjmp	.+4      	; 0xbe26 <_Z14linkbus_enablev+0x20>
    be22:	0e 94 86 79 	call	0xf30c	; 0xf30c <USART1_enable>
    be26:	46 ec       	ldi	r20, 0xC6	; 198
    be28:	50 e0       	ldi	r21, 0x00	; 0
    be2a:	60 e0       	ldi	r22, 0x00	; 0
    be2c:	70 e0       	ldi	r23, 0x00	; 0
    be2e:	8e eb       	ldi	r24, 0xBE	; 190
    be30:	97 e4       	ldi	r25, 0x47	; 71
    be32:	0e 94 39 7f 	call	0xfe72	; 0xfe72 <memset>
    be36:	19 82       	std	Y+1, r1	; 0x01
    be38:	89 81       	ldd	r24, Y+1	; 0x01
    be3a:	84 30       	cpi	r24, 0x04	; 4
    be3c:	88 f4       	brcc	.+34     	; 0xbe60 <_Z14linkbus_enablev+0x5a>
    be3e:	89 81       	ldd	r24, Y+1	; 0x01
    be40:	28 2f       	mov	r18, r24
    be42:	30 e0       	ldi	r19, 0x00	; 0
    be44:	42 e3       	ldi	r20, 0x32	; 50
    be46:	42 9f       	mul	r20, r18
    be48:	c0 01       	movw	r24, r0
    be4a:	43 9f       	mul	r20, r19
    be4c:	90 0d       	add	r25, r0
    be4e:	11 24       	eor	r1, r1
    be50:	8a 50       	subi	r24, 0x0A	; 10
    be52:	99 4b       	sbci	r25, 0xB9	; 185
    be54:	fc 01       	movw	r30, r24
    be56:	10 82       	st	Z, r1
    be58:	89 81       	ldd	r24, Y+1	; 0x01
    be5a:	8f 5f       	subi	r24, 0xFF	; 255
    be5c:	89 83       	std	Y+1, r24	; 0x01
    be5e:	ec cf       	rjmp	.-40     	; 0xbe38 <_Z14linkbus_enablev+0x32>
    be60:	00 00       	nop
    be62:	0f 90       	pop	r0
    be64:	df 91       	pop	r29
    be66:	cf 91       	pop	r28
    be68:	08 95       	ret

0000be6a <_Z12lb_send_textPc>:
    be6a:	cf 93       	push	r28
    be6c:	df 93       	push	r29
    be6e:	cd b7       	in	r28, 0x3d	; 61
    be70:	de b7       	in	r29, 0x3e	; 62
    be72:	27 97       	sbiw	r28, 0x07	; 7
    be74:	cd bf       	out	0x3d, r28	; 61
    be76:	de bf       	out	0x3e, r29	; 62
    be78:	8e 83       	std	Y+6, r24	; 0x06
    be7a:	9f 83       	std	Y+7, r25	; 0x07
    be7c:	81 e0       	ldi	r24, 0x01	; 1
    be7e:	89 83       	std	Y+1, r24	; 0x01
    be80:	88 ec       	ldi	r24, 0xC8	; 200
    be82:	90 e0       	ldi	r25, 0x00	; 0
    be84:	8a 83       	std	Y+2, r24	; 0x02
    be86:	9b 83       	std	Y+3, r25	; 0x03
    be88:	80 91 4d 40 	lds	r24, 0x404D	; 0x80404d <_ZL14g_bus_disabled>
    be8c:	88 23       	and	r24, r24
    be8e:	11 f0       	breq	.+4      	; 0xbe94 <_Z12lb_send_textPc+0x2a>
    be90:	89 81       	ldd	r24, Y+1	; 0x01
    be92:	42 c0       	rjmp	.+132    	; 0xbf18 <_Z12lb_send_textPc+0xae>
    be94:	8e 81       	ldd	r24, Y+6	; 0x06
    be96:	9f 81       	ldd	r25, Y+7	; 0x07
    be98:	89 2b       	or	r24, r25
    be9a:	e9 f1       	breq	.+122    	; 0xbf16 <_Z12lb_send_textPc+0xac>
    be9c:	0e 94 0c 5d 	call	0xba18	; 0xba18 <_Z19nextEmptyLBTxBufferv>
    bea0:	8c 83       	std	Y+4, r24	; 0x04
    bea2:	9d 83       	std	Y+5, r25	; 0x05
    bea4:	8c 81       	ldd	r24, Y+4	; 0x04
    bea6:	9d 81       	ldd	r25, Y+5	; 0x05
    bea8:	89 2b       	or	r24, r25
    beaa:	01 f5       	brne	.+64     	; 0xbeec <_Z12lb_send_textPc+0x82>
    beac:	8a 81       	ldd	r24, Y+2	; 0x02
    beae:	9b 81       	ldd	r25, Y+3	; 0x03
    beb0:	89 2b       	or	r24, r25
    beb2:	e1 f0       	breq	.+56     	; 0xbeec <_Z12lb_send_textPc+0x82>
    beb4:	0e 94 e3 5d 	call	0xbbc6	; 0xbbc6 <_Z19linkbusTxInProgressv>
    beb8:	88 23       	and	r24, r24
    beba:	31 f0       	breq	.+12     	; 0xbec8 <_Z12lb_send_textPc+0x5e>
    bebc:	8a 81       	ldd	r24, Y+2	; 0x02
    bebe:	9b 81       	ldd	r25, Y+3	; 0x03
    bec0:	89 2b       	or	r24, r25
    bec2:	11 f0       	breq	.+4      	; 0xbec8 <_Z12lb_send_textPc+0x5e>
    bec4:	81 e0       	ldi	r24, 0x01	; 1
    bec6:	01 c0       	rjmp	.+2      	; 0xbeca <_Z12lb_send_textPc+0x60>
    bec8:	80 e0       	ldi	r24, 0x00	; 0
    beca:	88 23       	and	r24, r24
    becc:	51 f0       	breq	.+20     	; 0xbee2 <_Z12lb_send_textPc+0x78>
    bece:	8a 81       	ldd	r24, Y+2	; 0x02
    bed0:	9b 81       	ldd	r25, Y+3	; 0x03
    bed2:	89 2b       	or	r24, r25
    bed4:	79 f3       	breq	.-34     	; 0xbeb4 <_Z12lb_send_textPc+0x4a>
    bed6:	8a 81       	ldd	r24, Y+2	; 0x02
    bed8:	9b 81       	ldd	r25, Y+3	; 0x03
    beda:	01 97       	sbiw	r24, 0x01	; 1
    bedc:	8a 83       	std	Y+2, r24	; 0x02
    bede:	9b 83       	std	Y+3, r25	; 0x03
    bee0:	e9 cf       	rjmp	.-46     	; 0xbeb4 <_Z12lb_send_textPc+0x4a>
    bee2:	0e 94 0c 5d 	call	0xba18	; 0xba18 <_Z19nextEmptyLBTxBufferv>
    bee6:	8c 83       	std	Y+4, r24	; 0x04
    bee8:	9d 83       	std	Y+5, r25	; 0x05
    beea:	dc cf       	rjmp	.-72     	; 0xbea4 <_Z12lb_send_textPc+0x3a>
    beec:	8c 81       	ldd	r24, Y+4	; 0x04
    beee:	9d 81       	ldd	r25, Y+5	; 0x05
    bef0:	89 2b       	or	r24, r25
    bef2:	89 f0       	breq	.+34     	; 0xbf16 <_Z12lb_send_textPc+0xac>
    bef4:	8f 81       	ldd	r24, Y+7	; 0x07
    bef6:	8f 93       	push	r24
    bef8:	8e 81       	ldd	r24, Y+6	; 0x06
    befa:	8f 93       	push	r24
    befc:	8d 81       	ldd	r24, Y+5	; 0x05
    befe:	8f 93       	push	r24
    bf00:	8c 81       	ldd	r24, Y+4	; 0x04
    bf02:	8f 93       	push	r24
    bf04:	0e 94 99 7f 	call	0xff32	; 0xff32 <sprintf>
    bf08:	0f 90       	pop	r0
    bf0a:	0f 90       	pop	r0
    bf0c:	0f 90       	pop	r0
    bf0e:	0f 90       	pop	r0
    bf10:	0e 94 ec 5d 	call	0xbbd8	; 0xbbd8 <_ZL16linkbus_start_txv>
    bf14:	19 82       	std	Y+1, r1	; 0x01
    bf16:	89 81       	ldd	r24, Y+1	; 0x01
    bf18:	27 96       	adiw	r28, 0x07	; 7
    bf1a:	cd bf       	out	0x3d, r28	; 61
    bf1c:	de bf       	out	0x3e, r29	; 62
    bf1e:	df 91       	pop	r29
    bf20:	cf 91       	pop	r28
    bf22:	08 95       	ret

0000bf24 <_Z11lb_send_msg13LBMessageTypePKcPc>:
    bf24:	cf 93       	push	r28
    bf26:	df 93       	push	r29
    bf28:	cd b7       	in	r28, 0x3d	; 61
    bf2a:	de b7       	in	r29, 0x3e	; 62
    bf2c:	27 97       	sbiw	r28, 0x07	; 7
    bf2e:	cd bf       	out	0x3d, r28	; 61
    bf30:	de bf       	out	0x3e, r29	; 62
    bf32:	8b 83       	std	Y+3, r24	; 0x03
    bf34:	6c 83       	std	Y+4, r22	; 0x04
    bf36:	7d 83       	std	Y+5, r23	; 0x05
    bf38:	4e 83       	std	Y+6, r20	; 0x06
    bf3a:	5f 83       	std	Y+7, r21	; 0x07
    bf3c:	84 e2       	ldi	r24, 0x24	; 36
    bf3e:	89 83       	std	Y+1, r24	; 0x01
    bf40:	8b e3       	ldi	r24, 0x3B	; 59
    bf42:	8a 83       	std	Y+2, r24	; 0x02
    bf44:	8b 81       	ldd	r24, Y+3	; 0x03
    bf46:	83 30       	cpi	r24, 0x03	; 3
    bf48:	19 f4       	brne	.+6      	; 0xbf50 <_Z11lb_send_msg13LBMessageTypePKcPc+0x2c>
    bf4a:	81 e2       	ldi	r24, 0x21	; 33
    bf4c:	89 83       	std	Y+1, r24	; 0x01
    bf4e:	05 c0       	rjmp	.+10     	; 0xbf5a <_Z11lb_send_msg13LBMessageTypePKcPc+0x36>
    bf50:	8b 81       	ldd	r24, Y+3	; 0x03
    bf52:	82 30       	cpi	r24, 0x02	; 2
    bf54:	11 f4       	brne	.+4      	; 0xbf5a <_Z11lb_send_msg13LBMessageTypePKcPc+0x36>
    bf56:	8f e3       	ldi	r24, 0x3F	; 63
    bf58:	8a 83       	std	Y+2, r24	; 0x02
    bf5a:	8a 81       	ldd	r24, Y+2	; 0x02
    bf5c:	28 2f       	mov	r18, r24
    bf5e:	30 e0       	ldi	r19, 0x00	; 0
    bf60:	89 81       	ldd	r24, Y+1	; 0x01
    bf62:	88 2f       	mov	r24, r24
    bf64:	90 e0       	ldi	r25, 0x00	; 0
    bf66:	43 2f       	mov	r20, r19
    bf68:	4f 93       	push	r20
    bf6a:	2f 93       	push	r18
    bf6c:	2f 81       	ldd	r18, Y+7	; 0x07
    bf6e:	2f 93       	push	r18
    bf70:	2e 81       	ldd	r18, Y+6	; 0x06
    bf72:	2f 93       	push	r18
    bf74:	2d 81       	ldd	r18, Y+5	; 0x05
    bf76:	2f 93       	push	r18
    bf78:	2c 81       	ldd	r18, Y+4	; 0x04
    bf7a:	2f 93       	push	r18
    bf7c:	29 2f       	mov	r18, r25
    bf7e:	2f 93       	push	r18
    bf80:	8f 93       	push	r24
    bf82:	8c e7       	ldi	r24, 0x7C	; 124
    bf84:	94 e4       	ldi	r25, 0x44	; 68
    bf86:	89 2f       	mov	r24, r25
    bf88:	8f 93       	push	r24
    bf8a:	8c e7       	ldi	r24, 0x7C	; 124
    bf8c:	94 e4       	ldi	r25, 0x44	; 68
    bf8e:	8f 93       	push	r24
    bf90:	83 ec       	ldi	r24, 0xC3	; 195
    bf92:	96 e4       	ldi	r25, 0x46	; 70
    bf94:	89 2f       	mov	r24, r25
    bf96:	8f 93       	push	r24
    bf98:	83 ec       	ldi	r24, 0xC3	; 195
    bf9a:	96 e4       	ldi	r25, 0x46	; 70
    bf9c:	8f 93       	push	r24
    bf9e:	0e 94 99 7f 	call	0xff32	; 0xff32 <sprintf>
    bfa2:	8d b7       	in	r24, 0x3d	; 61
    bfa4:	9e b7       	in	r25, 0x3e	; 62
    bfa6:	0c 96       	adiw	r24, 0x0c	; 12
    bfa8:	cd bf       	out	0x3d, r28	; 61
    bfaa:	de bf       	out	0x3e, r29	; 62
    bfac:	83 ec       	ldi	r24, 0xC3	; 195
    bfae:	96 e4       	ldi	r25, 0x46	; 70
    bfb0:	0e 94 35 5f 	call	0xbe6a	; 0xbe6a <_Z12lb_send_textPc>
    bfb4:	00 00       	nop
    bfb6:	27 96       	adiw	r28, 0x07	; 7
    bfb8:	cd bf       	out	0x3d, r28	; 61
    bfba:	de bf       	out	0x3e, r29	; 62
    bfbc:	df 91       	pop	r29
    bfbe:	cf 91       	pop	r28
    bfc0:	08 95       	ret

0000bfc2 <_Z16lb_broadcast_strPKcS0_>:


void lb_broadcast_str(const char* data, const char* str)
{
    bfc2:	cf 93       	push	r28
    bfc4:	df 93       	push	r29
    bfc6:	00 d0       	rcall	.+0      	; 0xbfc8 <_Z16lb_broadcast_strPKcS0_+0x6>
    bfc8:	00 d0       	rcall	.+0      	; 0xbfca <_Z16lb_broadcast_strPKcS0_+0x8>
    bfca:	cd b7       	in	r28, 0x3d	; 61
    bfcc:	de b7       	in	r29, 0x3e	; 62
    bfce:	89 83       	std	Y+1, r24	; 0x01
    bfd0:	9a 83       	std	Y+2, r25	; 0x02
    bfd2:	6b 83       	std	Y+3, r22	; 0x03
    bfd4:	7c 83       	std	Y+4, r23	; 0x04
	if(str)
    bfd6:	8b 81       	ldd	r24, Y+3	; 0x03
    bfd8:	9c 81       	ldd	r25, Y+4	; 0x04
    bfda:	89 2b       	or	r24, r25
    bfdc:	e9 f0       	breq	.+58     	; 0xc018 <_Z16lb_broadcast_strPKcS0_+0x56>
	{
		sprintf(g_tempMsgBuff, "%s,%s;", str, data);
    bfde:	8a 81       	ldd	r24, Y+2	; 0x02
    bfe0:	8f 93       	push	r24
    bfe2:	89 81       	ldd	r24, Y+1	; 0x01
    bfe4:	8f 93       	push	r24
    bfe6:	8c 81       	ldd	r24, Y+4	; 0x04
    bfe8:	8f 93       	push	r24
    bfea:	8b 81       	ldd	r24, Y+3	; 0x03
    bfec:	8f 93       	push	r24
    bfee:	8c e8       	ldi	r24, 0x8C	; 140
    bff0:	94 e4       	ldi	r25, 0x44	; 68
    bff2:	89 2f       	mov	r24, r25
    bff4:	8f 93       	push	r24
    bff6:	8c e8       	ldi	r24, 0x8C	; 140
    bff8:	94 e4       	ldi	r25, 0x44	; 68
    bffa:	8f 93       	push	r24
    bffc:	83 ec       	ldi	r24, 0xC3	; 195
    bffe:	96 e4       	ldi	r25, 0x46	; 70
    c000:	89 2f       	mov	r24, r25
    c002:	8f 93       	push	r24
    c004:	83 ec       	ldi	r24, 0xC3	; 195
    c006:	96 e4       	ldi	r25, 0x46	; 70
    c008:	8f 93       	push	r24
    c00a:	0e 94 99 7f 	call	0xff32	; 0xff32 <sprintf>
    c00e:	8d b7       	in	r24, 0x3d	; 61
    c010:	9e b7       	in	r25, 0x3e	; 62
    c012:	08 96       	adiw	r24, 0x08	; 8
    c014:	cd bf       	out	0x3d, r28	; 61
    c016:	de bf       	out	0x3e, r29	; 62
	}

	if(g_tempMsgBuff[0]) lb_send_text(g_tempMsgBuff);
    c018:	80 91 c3 46 	lds	r24, 0x46C3	; 0x8046c3 <_ZL13g_tempMsgBuff>
    c01c:	88 23       	and	r24, r24
    c01e:	21 f0       	breq	.+8      	; 0xc028 <_Z16lb_broadcast_strPKcS0_+0x66>
    c020:	83 ec       	ldi	r24, 0xC3	; 195
    c022:	96 e4       	ldi	r25, 0x46	; 70
    c024:	0e 94 35 5f 	call	0xbe6a	; 0xbe6a <_Z12lb_send_textPc>
}
    c028:	00 00       	nop
    c02a:	24 96       	adiw	r28, 0x04	; 4
    c02c:	cd bf       	out	0x3d, r28	; 61
    c02e:	de bf       	out	0x3e, r29	; 62
    c030:	df 91       	pop	r29
    c032:	cf 91       	pop	r28
    c034:	08 95       	ret

0000c036 <_Z9makeMorsePcPbS0_>:
 *  Call this function with a NULL argument at intervals of 1 element of time to generate Morse code.
 *  Once loaded with a string each call to this function returns a bool indicating whether a CW carrier should be sent
 *  Pass in a pointer to a bool in the second and third arguments:
 */
bool makeMorse(char* s, bool* repeating, bool* finished)
{
    c036:	cf 93       	push	r28
    c038:	df 93       	push	r29
    c03a:	cd b7       	in	r28, 0x3d	; 61
    c03c:	de b7       	in	r29, 0x3e	; 62
    c03e:	28 97       	sbiw	r28, 0x08	; 8
    c040:	cd bf       	out	0x3d, r28	; 61
    c042:	de bf       	out	0x3e, r29	; 62
    c044:	8b 83       	std	Y+3, r24	; 0x03
    c046:	9c 83       	std	Y+4, r25	; 0x04
    c048:	6d 83       	std	Y+5, r22	; 0x05
    c04a:	7e 83       	std	Y+6, r23	; 0x06
    c04c:	4f 83       	std	Y+7, r20	; 0x07
    c04e:	58 87       	std	Y+8, r21	; 0x08
	static uint8_t addedSpace;      /* adds additional time to make an inter-character space */
	static bool completedString = true;
	static bool carrierOn = false;
	static bool holdKeyDown = false;

	if(s)   /* load a new NULL-terminated string to send */
    c050:	8b 81       	ldd	r24, Y+3	; 0x03
    c052:	9c 81       	ldd	r25, Y+4	; 0x04
    c054:	89 2b       	or	r24, r25
    c056:	09 f4       	brne	.+2      	; 0xc05a <_Z9makeMorsePcPbS0_+0x24>
    c058:	4f c0       	rjmp	.+158    	; 0xc0f8 <_Z9makeMorsePcPbS0_+0xc2>
	{
		holdKeyDown = false;
    c05a:	10 92 88 48 	sts	0x4888, r1	; 0x804888 <_ZZ9makeMorsePcPbS0_E11holdKeyDown>

		if(repeating)
    c05e:	8d 81       	ldd	r24, Y+5	; 0x05
    c060:	9e 81       	ldd	r25, Y+6	; 0x06
    c062:	89 2b       	or	r24, r25
    c064:	31 f0       	breq	.+12     	; 0xc072 <_Z9makeMorsePcPbS0_+0x3c>
		{
			repeat = *repeating;
    c066:	8d 81       	ldd	r24, Y+5	; 0x05
    c068:	9e 81       	ldd	r25, Y+6	; 0x06
    c06a:	fc 01       	movw	r30, r24
    c06c:	80 81       	ld	r24, Z
    c06e:	80 93 4f 40 	sts	0x404F, r24	; 0x80404f <_ZZ9makeMorsePcPbS0_E6repeat>
		}

		if(*s)
    c072:	8b 81       	ldd	r24, Y+3	; 0x03
    c074:	9c 81       	ldd	r25, Y+4	; 0x04
    c076:	fc 01       	movw	r30, r24
    c078:	80 81       	ld	r24, Z
    c07a:	88 23       	and	r24, r24
    c07c:	49 f1       	breq	.+82     	; 0xc0d0 <_Z9makeMorsePcPbS0_+0x9a>
		{
			str = s;
    c07e:	8b 81       	ldd	r24, Y+3	; 0x03
    c080:	9c 81       	ldd	r25, Y+4	; 0x04
    c082:	80 93 89 48 	sts	0x4889, r24	; 0x804889 <_ZZ9makeMorsePcPbS0_E3str>
    c086:	90 93 8a 48 	sts	0x488A, r25	; 0x80488a <_ZZ9makeMorsePcPbS0_E3str+0x1>
			c = str[0];
    c08a:	80 91 89 48 	lds	r24, 0x4889	; 0x804889 <_ZZ9makeMorsePcPbS0_E3str>
    c08e:	90 91 8a 48 	lds	r25, 0x488A	; 0x80488a <_ZZ9makeMorsePcPbS0_E3str+0x1>
    c092:	fc 01       	movw	r30, r24
    c094:	80 81       	ld	r24, Z
    c096:	80 93 50 40 	sts	0x4050, r24	; 0x804050 <_ZZ9makeMorsePcPbS0_E1c>
			morseInProgress = getMorseChar(*str);
    c09a:	80 91 89 48 	lds	r24, 0x4889	; 0x804889 <_ZZ9makeMorsePcPbS0_E3str>
    c09e:	90 91 8a 48 	lds	r25, 0x488A	; 0x80488a <_ZZ9makeMorsePcPbS0_E3str+0x1>
    c0a2:	fc 01       	movw	r30, r24
    c0a4:	80 81       	ld	r24, Z
    c0a6:	0e 94 c8 61 	call	0xc390	; 0xc390 <_Z12getMorseCharc>
    c0aa:	a8 2f       	mov	r26, r24
    c0ac:	cb 01       	movw	r24, r22
    c0ae:	80 93 8b 48 	sts	0x488B, r24	; 0x80488b <_ZZ9makeMorsePcPbS0_E15morseInProgress>
    c0b2:	90 93 8c 48 	sts	0x488C, r25	; 0x80488c <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x1>
    c0b6:	a0 93 8d 48 	sts	0x488D, r26	; 0x80488d <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x2>
			charIndex = 0;
    c0ba:	10 92 8e 48 	sts	0x488E, r1	; 0x80488e <_ZZ9makeMorsePcPbS0_E9charIndex>
			symbolIndex = 0;
    c0be:	10 92 8f 48 	sts	0x488F, r1	; 0x80488f <_ZZ9makeMorsePcPbS0_E11symbolIndex>
			elementIndex = 0;
    c0c2:	10 92 90 48 	sts	0x4890, r1	; 0x804890 <_ZZ9makeMorsePcPbS0_E12elementIndex>
			addedSpace = 0;
    c0c6:	10 92 91 48 	sts	0x4891, r1	; 0x804891 <_ZZ9makeMorsePcPbS0_E10addedSpace>
			completedString = false;
    c0ca:	10 92 51 40 	sts	0x4051, r1	; 0x804051 <_ZZ9makeMorsePcPbS0_E15completedString>
    c0ce:	10 c0       	rjmp	.+32     	; 0xc0f0 <_Z9makeMorsePcPbS0_+0xba>
		}
		else    /* a zero-length string shuts down makeMorse */
		{
			str = NULL;
    c0d0:	10 92 89 48 	sts	0x4889, r1	; 0x804889 <_ZZ9makeMorsePcPbS0_E3str>
    c0d4:	10 92 8a 48 	sts	0x488A, r1	; 0x80488a <_ZZ9makeMorsePcPbS0_E3str+0x1>
			completedString = true;
    c0d8:	81 e0       	ldi	r24, 0x01	; 1
    c0da:	80 93 51 40 	sts	0x4051, r24	; 0x804051 <_ZZ9makeMorsePcPbS0_E15completedString>
			if(finished)
    c0de:	8f 81       	ldd	r24, Y+7	; 0x07
    c0e0:	98 85       	ldd	r25, Y+8	; 0x08
    c0e2:	89 2b       	or	r24, r25
    c0e4:	29 f0       	breq	.+10     	; 0xc0f0 <_Z9makeMorsePcPbS0_+0xba>
			{
				*finished = true;
    c0e6:	8f 81       	ldd	r24, Y+7	; 0x07
    c0e8:	98 85       	ldd	r25, Y+8	; 0x08
    c0ea:	21 e0       	ldi	r18, 0x01	; 1
    c0ec:	fc 01       	movw	r30, r24
    c0ee:	20 83       	st	Z, r18
			}
		}

		carrierOn = OFF;
    c0f0:	10 92 92 48 	sts	0x4892, r1	; 0x804892 <_ZZ9makeMorsePcPbS0_E9carrierOn>
		return( OFF);
    c0f4:	80 e0       	ldi	r24, 0x00	; 0
    c0f6:	f6 c0       	rjmp	.+492    	; 0xc2e4 <_Z9makeMorsePcPbS0_+0x2ae>
	}
	else if(str)
    c0f8:	80 91 89 48 	lds	r24, 0x4889	; 0x804889 <_ZZ9makeMorsePcPbS0_E3str>
    c0fc:	90 91 8a 48 	lds	r25, 0x488A	; 0x80488a <_ZZ9makeMorsePcPbS0_E3str+0x1>
    c100:	89 2b       	or	r24, r25
    c102:	09 f4       	brne	.+2      	; 0xc106 <_Z9makeMorsePcPbS0_+0xd0>
    c104:	dd c0       	rjmp	.+442    	; 0xc2c0 <_Z9makeMorsePcPbS0_+0x28a>
	{
		if(repeating)
    c106:	8d 81       	ldd	r24, Y+5	; 0x05
    c108:	9e 81       	ldd	r25, Y+6	; 0x06
    c10a:	89 2b       	or	r24, r25
    c10c:	31 f0       	breq	.+12     	; 0xc11a <_Z9makeMorsePcPbS0_+0xe4>
		{
			*repeating = repeat;
    c10e:	20 91 4f 40 	lds	r18, 0x404F	; 0x80404f <_ZZ9makeMorsePcPbS0_E6repeat>
    c112:	8d 81       	ldd	r24, Y+5	; 0x05
    c114:	9e 81       	ldd	r25, Y+6	; 0x06
    c116:	fc 01       	movw	r30, r24
    c118:	20 83       	st	Z, r18
		}

		if(completedString)
    c11a:	80 91 51 40 	lds	r24, 0x4051	; 0x804051 <_ZZ9makeMorsePcPbS0_E15completedString>
    c11e:	88 23       	and	r24, r24
    c120:	69 f0       	breq	.+26     	; 0xc13c <_Z9makeMorsePcPbS0_+0x106>
		{
			if(finished)
    c122:	8f 81       	ldd	r24, Y+7	; 0x07
    c124:	98 85       	ldd	r25, Y+8	; 0x08
    c126:	89 2b       	or	r24, r25
    c128:	39 f0       	breq	.+14     	; 0xc138 <_Z9makeMorsePcPbS0_+0x102>
			{
				*finished = true;
    c12a:	8f 81       	ldd	r24, Y+7	; 0x07
    c12c:	98 85       	ldd	r25, Y+8	; 0x08
    c12e:	21 e0       	ldi	r18, 0x01	; 1
    c130:	fc 01       	movw	r30, r24
    c132:	20 83       	st	Z, r18
				holdKeyDown = false;
    c134:	10 92 88 48 	sts	0x4888, r1	; 0x804888 <_ZZ9makeMorsePcPbS0_E11holdKeyDown>
			}
			return( OFF);
    c138:	80 e0       	ldi	r24, 0x00	; 0
    c13a:	d4 c0       	rjmp	.+424    	; 0xc2e4 <_Z9makeMorsePcPbS0_+0x2ae>
		}

		if(elementIndex)
    c13c:	80 91 90 48 	lds	r24, 0x4890	; 0x804890 <_ZZ9makeMorsePcPbS0_E12elementIndex>
    c140:	88 23       	and	r24, r24
    c142:	31 f0       	breq	.+12     	; 0xc150 <_Z9makeMorsePcPbS0_+0x11a>
		{
			elementIndex--;
    c144:	80 91 90 48 	lds	r24, 0x4890	; 0x804890 <_ZZ9makeMorsePcPbS0_E12elementIndex>
    c148:	81 50       	subi	r24, 0x01	; 1
    c14a:	80 93 90 48 	sts	0x4890, r24	; 0x804890 <_ZZ9makeMorsePcPbS0_E12elementIndex>
    c14e:	ae c0       	rjmp	.+348    	; 0xc2ac <_Z9makeMorsePcPbS0_+0x276>
		}
		else if(carrierOn && !holdKeyDown)  /* carrier is on, so turn it off and wait appropriate amount of space */
    c150:	80 91 92 48 	lds	r24, 0x4892	; 0x804892 <_ZZ9makeMorsePcPbS0_E9carrierOn>
    c154:	88 23       	and	r24, r24
    c156:	a1 f0       	breq	.+40     	; 0xc180 <_Z9makeMorsePcPbS0_+0x14a>
    c158:	90 91 88 48 	lds	r25, 0x4888	; 0x804888 <_ZZ9makeMorsePcPbS0_E11holdKeyDown>
    c15c:	81 e0       	ldi	r24, 0x01	; 1
    c15e:	89 27       	eor	r24, r25
    c160:	88 23       	and	r24, r24
    c162:	71 f0       	breq	.+28     	; 0xc180 <_Z9makeMorsePcPbS0_+0x14a>
		{
			carrierOn = false;
    c164:	10 92 92 48 	sts	0x4892, r1	; 0x804892 <_ZZ9makeMorsePcPbS0_E9carrierOn>
			/* wait one element = inter-symbol space */
			if(addedSpace)
    c168:	80 91 91 48 	lds	r24, 0x4891	; 0x804891 <_ZZ9makeMorsePcPbS0_E10addedSpace>
    c16c:	88 23       	and	r24, r24
    c16e:	09 f4       	brne	.+2      	; 0xc172 <_Z9makeMorsePcPbS0_+0x13c>
    c170:	9d c0       	rjmp	.+314    	; 0xc2ac <_Z9makeMorsePcPbS0_+0x276>
			{
				elementIndex = addedSpace;
    c172:	80 91 91 48 	lds	r24, 0x4891	; 0x804891 <_ZZ9makeMorsePcPbS0_E10addedSpace>
    c176:	80 93 90 48 	sts	0x4890, r24	; 0x804890 <_ZZ9makeMorsePcPbS0_E12elementIndex>
				addedSpace = 0;
    c17a:	10 92 91 48 	sts	0x4891, r1	; 0x804891 <_ZZ9makeMorsePcPbS0_E10addedSpace>
		}
		else if(carrierOn && !holdKeyDown)  /* carrier is on, so turn it off and wait appropriate amount of space */
		{
			carrierOn = false;
			/* wait one element = inter-symbol space */
			if(addedSpace)
    c17e:	96 c0       	rjmp	.+300    	; 0xc2ac <_Z9makeMorsePcPbS0_+0x276>
			}
			/* wait inter-character space */
		}
		else    /* carrier is off, so turn it on and get next symbol */
		{
			if(symbolIndex >= morseInProgress.lengthInSymbols)
    c180:	90 91 8c 48 	lds	r25, 0x488C	; 0x80488c <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x1>
    c184:	80 91 8f 48 	lds	r24, 0x488F	; 0x80488f <_ZZ9makeMorsePcPbS0_E11symbolIndex>
    c188:	89 17       	cp	r24, r25
    c18a:	08 f4       	brcc	.+2      	; 0xc18e <_Z9makeMorsePcPbS0_+0x158>
    c18c:	4a c0       	rjmp	.+148    	; 0xc222 <_Z9makeMorsePcPbS0_+0x1ec>
			{
				c = (*(str + ++charIndex));
    c18e:	20 91 89 48 	lds	r18, 0x4889	; 0x804889 <_ZZ9makeMorsePcPbS0_E3str>
    c192:	30 91 8a 48 	lds	r19, 0x488A	; 0x80488a <_ZZ9makeMorsePcPbS0_E3str+0x1>
    c196:	80 91 8e 48 	lds	r24, 0x488E	; 0x80488e <_ZZ9makeMorsePcPbS0_E9charIndex>
    c19a:	8f 5f       	subi	r24, 0xFF	; 255
    c19c:	80 93 8e 48 	sts	0x488E, r24	; 0x80488e <_ZZ9makeMorsePcPbS0_E9charIndex>
    c1a0:	80 91 8e 48 	lds	r24, 0x488E	; 0x80488e <_ZZ9makeMorsePcPbS0_E9charIndex>
    c1a4:	88 2f       	mov	r24, r24
    c1a6:	90 e0       	ldi	r25, 0x00	; 0
    c1a8:	82 0f       	add	r24, r18
    c1aa:	93 1f       	adc	r25, r19
    c1ac:	fc 01       	movw	r30, r24
    c1ae:	80 81       	ld	r24, Z
    c1b0:	80 93 50 40 	sts	0x4050, r24	; 0x804050 <_ZZ9makeMorsePcPbS0_E1c>

				if(!c)  /* wrap to beginning of text */
    c1b4:	80 91 50 40 	lds	r24, 0x4050	; 0x804050 <_ZZ9makeMorsePcPbS0_E1c>
    c1b8:	88 23       	and	r24, r24
    c1ba:	29 f5       	brne	.+74     	; 0xc206 <_Z9makeMorsePcPbS0_+0x1d0>
				{
					if(repeat)
    c1bc:	80 91 4f 40 	lds	r24, 0x404F	; 0x80404f <_ZZ9makeMorsePcPbS0_E6repeat>
    c1c0:	88 23       	and	r24, r24
    c1c2:	59 f0       	breq	.+22     	; 0xc1da <_Z9makeMorsePcPbS0_+0x1a4>
					{
						c = *str;
    c1c4:	80 91 89 48 	lds	r24, 0x4889	; 0x804889 <_ZZ9makeMorsePcPbS0_E3str>
    c1c8:	90 91 8a 48 	lds	r25, 0x488A	; 0x80488a <_ZZ9makeMorsePcPbS0_E3str+0x1>
    c1cc:	fc 01       	movw	r30, r24
    c1ce:	80 81       	ld	r24, Z
    c1d0:	80 93 50 40 	sts	0x4050, r24	; 0x804050 <_ZZ9makeMorsePcPbS0_E1c>
						charIndex = 0;
    c1d4:	10 92 8e 48 	sts	0x488E, r1	; 0x80488e <_ZZ9makeMorsePcPbS0_E9charIndex>
    c1d8:	16 c0       	rjmp	.+44     	; 0xc206 <_Z9makeMorsePcPbS0_+0x1d0>
					}
					else
					{
						str = NULL;
    c1da:	10 92 89 48 	sts	0x4889, r1	; 0x804889 <_ZZ9makeMorsePcPbS0_E3str>
    c1de:	10 92 8a 48 	sts	0x488A, r1	; 0x80488a <_ZZ9makeMorsePcPbS0_E3str+0x1>
						carrierOn = OFF;
    c1e2:	10 92 92 48 	sts	0x4892, r1	; 0x804892 <_ZZ9makeMorsePcPbS0_E9carrierOn>
						completedString = true;
    c1e6:	81 e0       	ldi	r24, 0x01	; 1
    c1e8:	80 93 51 40 	sts	0x4051, r24	; 0x804051 <_ZZ9makeMorsePcPbS0_E15completedString>
						if(finished)
    c1ec:	8f 81       	ldd	r24, Y+7	; 0x07
    c1ee:	98 85       	ldd	r25, Y+8	; 0x08
    c1f0:	89 2b       	or	r24, r25
    c1f2:	29 f0       	breq	.+10     	; 0xc1fe <_Z9makeMorsePcPbS0_+0x1c8>
						{
							*finished = true;
    c1f4:	8f 81       	ldd	r24, Y+7	; 0x07
    c1f6:	98 85       	ldd	r25, Y+8	; 0x08
    c1f8:	21 e0       	ldi	r18, 0x01	; 1
    c1fa:	fc 01       	movw	r30, r24
    c1fc:	20 83       	st	Z, r18
						}
						holdKeyDown = false;
    c1fe:	10 92 88 48 	sts	0x4888, r1	; 0x804888 <_ZZ9makeMorsePcPbS0_E11holdKeyDown>
						return( OFF );
    c202:	80 e0       	ldi	r24, 0x00	; 0
    c204:	6f c0       	rjmp	.+222    	; 0xc2e4 <_Z9makeMorsePcPbS0_+0x2ae>
					}
				}

				morseInProgress = getMorseChar(c);
    c206:	80 91 50 40 	lds	r24, 0x4050	; 0x804050 <_ZZ9makeMorsePcPbS0_E1c>
    c20a:	0e 94 c8 61 	call	0xc390	; 0xc390 <_Z12getMorseCharc>
    c20e:	a8 2f       	mov	r26, r24
    c210:	cb 01       	movw	r24, r22
    c212:	80 93 8b 48 	sts	0x488B, r24	; 0x80488b <_ZZ9makeMorsePcPbS0_E15morseInProgress>
    c216:	90 93 8c 48 	sts	0x488C, r25	; 0x80488c <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x1>
    c21a:	a0 93 8d 48 	sts	0x488D, r26	; 0x80488d <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x2>
				symbolIndex = 0;
    c21e:	10 92 8f 48 	sts	0x488F, r1	; 0x80488f <_ZZ9makeMorsePcPbS0_E11symbolIndex>
			}

			if(morseInProgress.pattern < INTER_WORD_SPACE)
    c222:	80 91 8b 48 	lds	r24, 0x488B	; 0x80488b <_ZZ9makeMorsePcPbS0_E15morseInProgress>
    c226:	8d 3f       	cpi	r24, 0xFD	; 253
    c228:	70 f5       	brcc	.+92     	; 0xc286 <_Z9makeMorsePcPbS0_+0x250>
			{
				bool isDah = morseInProgress.pattern & (1 << symbolIndex++);
    c22a:	80 91 8b 48 	lds	r24, 0x488B	; 0x80488b <_ZZ9makeMorsePcPbS0_E15morseInProgress>
    c22e:	88 2f       	mov	r24, r24
    c230:	90 e0       	ldi	r25, 0x00	; 0
    c232:	20 91 8f 48 	lds	r18, 0x488F	; 0x80488f <_ZZ9makeMorsePcPbS0_E11symbolIndex>
    c236:	31 e0       	ldi	r19, 0x01	; 1
    c238:	32 0f       	add	r19, r18
    c23a:	30 93 8f 48 	sts	0x488F, r19	; 0x80488f <_ZZ9makeMorsePcPbS0_E11symbolIndex>
    c23e:	22 2f       	mov	r18, r18
    c240:	30 e0       	ldi	r19, 0x00	; 0
    c242:	02 c0       	rjmp	.+4      	; 0xc248 <_Z9makeMorsePcPbS0_+0x212>
    c244:	95 95       	asr	r25
    c246:	87 95       	ror	r24
    c248:	2a 95       	dec	r18
    c24a:	e2 f7       	brpl	.-8      	; 0xc244 <_Z9makeMorsePcPbS0_+0x20e>
    c24c:	81 70       	andi	r24, 0x01	; 1
    c24e:	99 27       	eor	r25, r25
    c250:	21 e0       	ldi	r18, 0x01	; 1
    c252:	89 2b       	or	r24, r25
    c254:	09 f4       	brne	.+2      	; 0xc258 <_Z9makeMorsePcPbS0_+0x222>
    c256:	20 e0       	ldi	r18, 0x00	; 0
    c258:	29 83       	std	Y+1, r18	; 0x01

				if(isDah)
    c25a:	89 81       	ldd	r24, Y+1	; 0x01
    c25c:	88 23       	and	r24, r24
    c25e:	21 f0       	breq	.+8      	; 0xc268 <_Z9makeMorsePcPbS0_+0x232>
				{
					elementIndex = 2;
    c260:	82 e0       	ldi	r24, 0x02	; 2
    c262:	80 93 90 48 	sts	0x4890, r24	; 0x804890 <_ZZ9makeMorsePcPbS0_E12elementIndex>
    c266:	02 c0       	rjmp	.+4      	; 0xc26c <_Z9makeMorsePcPbS0_+0x236>
				}
				else
				{
					elementIndex = 0;
    c268:	10 92 90 48 	sts	0x4890, r1	; 0x804890 <_ZZ9makeMorsePcPbS0_E12elementIndex>
				}

				carrierOn = true;
    c26c:	81 e0       	ldi	r24, 0x01	; 1
    c26e:	80 93 92 48 	sts	0x4892, r24	; 0x804892 <_ZZ9makeMorsePcPbS0_E9carrierOn>

				if(symbolIndex >= morseInProgress.lengthInSymbols)
    c272:	90 91 8c 48 	lds	r25, 0x488C	; 0x80488c <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x1>
    c276:	80 91 8f 48 	lds	r24, 0x488F	; 0x80488f <_ZZ9makeMorsePcPbS0_E11symbolIndex>
    c27a:	89 17       	cp	r24, r25
    c27c:	b8 f0       	brcs	.+46     	; 0xc2ac <_Z9makeMorsePcPbS0_+0x276>
				{
					addedSpace = 2;
    c27e:	82 e0       	ldi	r24, 0x02	; 2
    c280:	80 93 91 48 	sts	0x4891, r24	; 0x804891 <_ZZ9makeMorsePcPbS0_E10addedSpace>
    c284:	13 c0       	rjmp	.+38     	; 0xc2ac <_Z9makeMorsePcPbS0_+0x276>
				}
			}
			else
			{
				uint8_t sym = morseInProgress.lengthInSymbols;
    c286:	80 91 8c 48 	lds	r24, 0x488C	; 0x80488c <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x1>
    c28a:	8a 83       	std	Y+2, r24	; 0x02
				symbolIndex = 255;  /* ensure the next character gets read */
    c28c:	8f ef       	ldi	r24, 0xFF	; 255
    c28e:	80 93 8f 48 	sts	0x488F, r24	; 0x80488f <_ZZ9makeMorsePcPbS0_E11symbolIndex>
				carrierOn = false;
    c292:	10 92 92 48 	sts	0x4892, r1	; 0x804892 <_ZZ9makeMorsePcPbS0_E9carrierOn>
				if(sym >= 4 )
    c296:	8a 81       	ldd	r24, Y+2	; 0x02
    c298:	84 30       	cpi	r24, 0x04	; 4
    c29a:	30 f0       	brcs	.+12     	; 0xc2a8 <_Z9makeMorsePcPbS0_+0x272>
				{
					elementIndex = morseInProgress.lengthInSymbols - 4;
    c29c:	80 91 8c 48 	lds	r24, 0x488C	; 0x80488c <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x1>
    c2a0:	84 50       	subi	r24, 0x04	; 4
    c2a2:	80 93 90 48 	sts	0x4890, r24	; 0x804890 <_ZZ9makeMorsePcPbS0_E12elementIndex>
    c2a6:	02 c0       	rjmp	.+4      	; 0xc2ac <_Z9makeMorsePcPbS0_+0x276>
				}
				else
				{
					elementIndex = 0;
    c2a8:	10 92 90 48 	sts	0x4890, r1	; 0x804890 <_ZZ9makeMorsePcPbS0_E12elementIndex>
				}
			}
		}

		/* Overrides for key on and key off special characters */
		if(c == '<')    /* constant tone */
    c2ac:	80 91 50 40 	lds	r24, 0x4050	; 0x804050 <_ZZ9makeMorsePcPbS0_E1c>
    c2b0:	8c 33       	cpi	r24, 0x3C	; 60
    c2b2:	21 f4       	brne	.+8      	; 0xc2bc <_Z9makeMorsePcPbS0_+0x286>
		{
			holdKeyDown = true;
    c2b4:	81 e0       	ldi	r24, 0x01	; 1
    c2b6:	80 93 88 48 	sts	0x4888, r24	; 0x804888 <_ZZ9makeMorsePcPbS0_E11holdKeyDown>
    c2ba:	02 c0       	rjmp	.+4      	; 0xc2c0 <_Z9makeMorsePcPbS0_+0x28a>
		}
		else
		{
			holdKeyDown = false;
    c2bc:	10 92 88 48 	sts	0x4888, r1	; 0x804888 <_ZZ9makeMorsePcPbS0_E11holdKeyDown>
		}
	}

	if(finished)
    c2c0:	8f 81       	ldd	r24, Y+7	; 0x07
    c2c2:	98 85       	ldd	r25, Y+8	; 0x08
    c2c4:	89 2b       	or	r24, r25
    c2c6:	31 f0       	breq	.+12     	; 0xc2d4 <_Z9makeMorsePcPbS0_+0x29e>
	{
		*finished = completedString;
    c2c8:	20 91 51 40 	lds	r18, 0x4051	; 0x804051 <_ZZ9makeMorsePcPbS0_E15completedString>
    c2cc:	8f 81       	ldd	r24, Y+7	; 0x07
    c2ce:	98 85       	ldd	r25, Y+8	; 0x08
    c2d0:	fc 01       	movw	r30, r24
    c2d2:	20 83       	st	Z, r18
	}

	if(holdKeyDown)
    c2d4:	80 91 88 48 	lds	r24, 0x4888	; 0x804888 <_ZZ9makeMorsePcPbS0_E11holdKeyDown>
    c2d8:	88 23       	and	r24, r24
    c2da:	11 f0       	breq	.+4      	; 0xc2e0 <_Z9makeMorsePcPbS0_+0x2aa>
	{
		return(true);
    c2dc:	81 e0       	ldi	r24, 0x01	; 1
    c2de:	02 c0       	rjmp	.+4      	; 0xc2e4 <_Z9makeMorsePcPbS0_+0x2ae>
	}
	else
	{
		return( carrierOn);
    c2e0:	80 91 92 48 	lds	r24, 0x4892	; 0x804892 <_ZZ9makeMorsePcPbS0_E9carrierOn>
	}
}
    c2e4:	28 96       	adiw	r28, 0x08	; 8
    c2e6:	cd bf       	out	0x3d, r28	; 61
    c2e8:	de bf       	out	0x3e, r29	; 62
    c2ea:	df 91       	pop	r29
    c2ec:	cf 91       	pop	r28
    c2ee:	08 95       	ret

0000c2f0 <_Z26timeRequiredToSendStrAtWPMPcj>:
/**
 *  Returns the number of milliseconds required to send the string pointed to by the first argument at the WPM code speed
 *  passed in the second argument.
 */
uint16_t timeRequiredToSendStrAtWPM(char* str, uint16_t spd)
{
    c2f0:	cf 93       	push	r28
    c2f2:	df 93       	push	r29
    c2f4:	cd b7       	in	r28, 0x3d	; 61
    c2f6:	de b7       	in	r29, 0x3e	; 62
    c2f8:	2b 97       	sbiw	r28, 0x0b	; 11
    c2fa:	cd bf       	out	0x3d, r28	; 61
    c2fc:	de bf       	out	0x3e, r29	; 62
    c2fe:	88 87       	std	Y+8, r24	; 0x08
    c300:	99 87       	std	Y+9, r25	; 0x09
    c302:	6a 87       	std	Y+10, r22	; 0x0a
    c304:	7b 87       	std	Y+11, r23	; 0x0b
	uint8_t elements = 0;
    c306:	19 82       	std	Y+1, r1	; 0x01
	MorseCharacter m;
	char c;

	for(int i = 0; i < 20; i++)
    c308:	1a 82       	std	Y+2, r1	; 0x02
    c30a:	1b 82       	std	Y+3, r1	; 0x03
    c30c:	8a 81       	ldd	r24, Y+2	; 0x02
    c30e:	9b 81       	ldd	r25, Y+3	; 0x03
    c310:	44 97       	sbiw	r24, 0x14	; 20
    c312:	2c f5       	brge	.+74     	; 0xc35e <_Z26timeRequiredToSendStrAtWPMPcj+0x6e>
	{
		c = str[i];
    c314:	8a 81       	ldd	r24, Y+2	; 0x02
    c316:	9b 81       	ldd	r25, Y+3	; 0x03
    c318:	28 85       	ldd	r18, Y+8	; 0x08
    c31a:	39 85       	ldd	r19, Y+9	; 0x09
    c31c:	82 0f       	add	r24, r18
    c31e:	93 1f       	adc	r25, r19
    c320:	fc 01       	movw	r30, r24
    c322:	80 81       	ld	r24, Z
    c324:	8c 83       	std	Y+4, r24	; 0x04
		if(!c)
    c326:	8c 81       	ldd	r24, Y+4	; 0x04
    c328:	88 23       	and	r24, r24
    c32a:	c1 f0       	breq	.+48     	; 0xc35c <_Z26timeRequiredToSendStrAtWPMPcj+0x6c>
		{
			break;
		}
		m = getMorseChar(c);
    c32c:	8c 81       	ldd	r24, Y+4	; 0x04
    c32e:	0e 94 c8 61 	call	0xc390	; 0xc390 <_Z12getMorseCharc>
    c332:	a8 2f       	mov	r26, r24
    c334:	cb 01       	movw	r24, r22
    c336:	8d 83       	std	Y+5, r24	; 0x05
    c338:	9e 83       	std	Y+6, r25	; 0x06
    c33a:	af 83       	std	Y+7, r26	; 0x07
		if(m.pattern < INTER_WORD_SPACE)
    c33c:	8d 81       	ldd	r24, Y+5	; 0x05
    c33e:	8d 3f       	cpi	r24, 0xFD	; 253
    c340:	18 f4       	brcc	.+6      	; 0xc348 <_Z26timeRequiredToSendStrAtWPMPcj+0x58>
		{
			elements += 3;
    c342:	89 81       	ldd	r24, Y+1	; 0x01
    c344:	8d 5f       	subi	r24, 0xFD	; 253
    c346:	89 83       	std	Y+1, r24	; 0x01
		}
		elements += m.lengthInElements;
    c348:	8f 81       	ldd	r24, Y+7	; 0x07
    c34a:	99 81       	ldd	r25, Y+1	; 0x01
    c34c:	89 0f       	add	r24, r25
    c34e:	89 83       	std	Y+1, r24	; 0x01
{
	uint8_t elements = 0;
	MorseCharacter m;
	char c;

	for(int i = 0; i < 20; i++)
    c350:	8a 81       	ldd	r24, Y+2	; 0x02
    c352:	9b 81       	ldd	r25, Y+3	; 0x03
    c354:	01 96       	adiw	r24, 0x01	; 1
    c356:	8a 83       	std	Y+2, r24	; 0x02
    c358:	9b 83       	std	Y+3, r25	; 0x03
    c35a:	d8 cf       	rjmp	.-80     	; 0xc30c <_Z26timeRequiredToSendStrAtWPMPcj+0x1c>
	{
		c = str[i];
		if(!c)
		{
			break;
    c35c:	00 00       	nop
			elements += 3;
		}
		elements += m.lengthInElements;
	}

	return(elements * WPM_TO_MS_PER_DOT(spd));
    c35e:	89 81       	ldd	r24, Y+1	; 0x01
    c360:	28 2f       	mov	r18, r24
    c362:	30 e0       	ldi	r19, 0x00	; 0
    c364:	80 eb       	ldi	r24, 0xB0	; 176
    c366:	94 e0       	ldi	r25, 0x04	; 4
    c368:	4a 85       	ldd	r20, Y+10	; 0x0a
    c36a:	5b 85       	ldd	r21, Y+11	; 0x0b
    c36c:	ba 01       	movw	r22, r20
    c36e:	0e 94 16 7d 	call	0xfa2c	; 0xfa2c <__udivmodhi4>
    c372:	cb 01       	movw	r24, r22
    c374:	ac 01       	movw	r20, r24
    c376:	24 9f       	mul	r18, r20
    c378:	c0 01       	movw	r24, r0
    c37a:	25 9f       	mul	r18, r21
    c37c:	90 0d       	add	r25, r0
    c37e:	34 9f       	mul	r19, r20
    c380:	90 0d       	add	r25, r0
    c382:	11 24       	eor	r1, r1
}
    c384:	2b 96       	adiw	r28, 0x0b	; 11
    c386:	cd bf       	out	0x3d, r28	; 61
    c388:	de bf       	out	0x3e, r29	; 62
    c38a:	df 91       	pop	r29
    c38c:	cf 91       	pop	r28
    c38e:	08 95       	ret

0000c390 <_Z12getMorseCharc>:
 *  pattern = a sequence of up to 8 dit and dah symbols contained in an unsigned byte, sequentially read from LSB to MSB (first symbol is bit 0)
 *  lengthInSymbols = how many symbols (dits and dahs) the character contains; this is how many pattern bits are used to represent the character
 *  lengthInElements = how long (measured in "dit lengths") is the total character including all inter-symbol spaces.
 */
MorseCharacter getMorseChar(char c)
{
    c390:	cf 93       	push	r28
    c392:	df 93       	push	r29
    c394:	00 d0       	rcall	.+0      	; 0xc396 <_Z12getMorseCharc+0x6>
    c396:	00 d0       	rcall	.+0      	; 0xc398 <_Z12getMorseCharc+0x8>
    c398:	cd b7       	in	r28, 0x3d	; 61
    c39a:	de b7       	in	r29, 0x3e	; 62
    c39c:	8c 83       	std	Y+4, r24	; 0x04
	MorseCharacter morse;

	switch( c )
    c39e:	8c 81       	ldd	r24, Y+4	; 0x04
    c3a0:	88 2f       	mov	r24, r24
    c3a2:	90 e0       	ldi	r25, 0x00	; 0
    c3a4:	09 2e       	mov	r0, r25
    c3a6:	00 0c       	add	r0, r0
    c3a8:	aa 0b       	sbc	r26, r26
    c3aa:	bb 0b       	sbc	r27, r27
    c3ac:	40 e2       	ldi	r20, 0x20	; 32
    c3ae:	50 e0       	ldi	r21, 0x00	; 0
    c3b0:	2e e5       	ldi	r18, 0x5E	; 94
    c3b2:	30 e0       	ldi	r19, 0x00	; 0
    c3b4:	84 1b       	sub	r24, r20
    c3b6:	95 0b       	sbc	r25, r21
    c3b8:	28 17       	cp	r18, r24
    c3ba:	39 07       	cpc	r19, r25
    c3bc:	08 f4       	brcc	.+2      	; 0xc3c0 <_Z12getMorseCharc+0x30>
    c3be:	96 c1       	rjmp	.+812    	; 0xc6ec <_Z12getMorseCharc+0x35c>
    c3c0:	89 55       	subi	r24, 0x59	; 89
    c3c2:	9e 4f       	sbci	r25, 0xFE	; 254
    c3c4:	fc 01       	movw	r30, r24
    c3c6:	0c 94 7f 7d 	jmp	0xfafe	; 0xfafe <__tablejump2__>
	{
		case 'A':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
    c3ca:	82 e0       	ldi	r24, 0x02	; 2
    c3cc:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 2;
    c3ce:	82 e0       	ldi	r24, 0x02	; 2
    c3d0:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 5;
    c3d2:	85 e0       	ldi	r24, 0x05	; 5
    c3d4:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    c3d6:	8e c1       	rjmp	.+796    	; 0xc6f4 <_Z12getMorseCharc+0x364>

		case 'B':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    c3d8:	81 e0       	ldi	r24, 0x01	; 1
    c3da:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    c3dc:	84 e0       	ldi	r24, 0x04	; 4
    c3de:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    c3e0:	89 e0       	ldi	r24, 0x09	; 9
    c3e2:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    c3e4:	87 c1       	rjmp	.+782    	; 0xc6f4 <_Z12getMorseCharc+0x364>

		case 'C':
		{
			morse.pattern = 0x05;   /* 0000 0101; */
    c3e6:	85 e0       	ldi	r24, 0x05	; 5
    c3e8:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    c3ea:	84 e0       	ldi	r24, 0x04	; 4
    c3ec:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    c3ee:	8b e0       	ldi	r24, 0x0B	; 11
    c3f0:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    c3f2:	80 c1       	rjmp	.+768    	; 0xc6f4 <_Z12getMorseCharc+0x364>

		case 'D':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    c3f4:	81 e0       	ldi	r24, 0x01	; 1
    c3f6:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 3;
    c3f8:	83 e0       	ldi	r24, 0x03	; 3
    c3fa:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 7;
    c3fc:	87 e0       	ldi	r24, 0x07	; 7
    c3fe:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    c400:	79 c1       	rjmp	.+754    	; 0xc6f4 <_Z12getMorseCharc+0x364>

		case 'E':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    c402:	19 82       	std	Y+1, r1	; 0x01
			morse.lengthInSymbols = 1;
    c404:	81 e0       	ldi	r24, 0x01	; 1
    c406:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 1;
    c408:	81 e0       	ldi	r24, 0x01	; 1
    c40a:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    c40c:	73 c1       	rjmp	.+742    	; 0xc6f4 <_Z12getMorseCharc+0x364>

		case 'F':
		{
			morse.pattern = 0x04;   /* 0000 0100; */
    c40e:	84 e0       	ldi	r24, 0x04	; 4
    c410:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    c412:	84 e0       	ldi	r24, 0x04	; 4
    c414:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    c416:	89 e0       	ldi	r24, 0x09	; 9
    c418:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    c41a:	6c c1       	rjmp	.+728    	; 0xc6f4 <_Z12getMorseCharc+0x364>

		case 'G':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
    c41c:	83 e0       	ldi	r24, 0x03	; 3
    c41e:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 3;
    c420:	83 e0       	ldi	r24, 0x03	; 3
    c422:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    c424:	89 e0       	ldi	r24, 0x09	; 9
    c426:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    c428:	65 c1       	rjmp	.+714    	; 0xc6f4 <_Z12getMorseCharc+0x364>

		case 'H':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    c42a:	19 82       	std	Y+1, r1	; 0x01
			morse.lengthInSymbols = 4;
    c42c:	84 e0       	ldi	r24, 0x04	; 4
    c42e:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 7;
    c430:	87 e0       	ldi	r24, 0x07	; 7
    c432:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    c434:	5f c1       	rjmp	.+702    	; 0xc6f4 <_Z12getMorseCharc+0x364>

		case 'I':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    c436:	19 82       	std	Y+1, r1	; 0x01
			morse.lengthInSymbols = 2;
    c438:	82 e0       	ldi	r24, 0x02	; 2
    c43a:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 3;
    c43c:	83 e0       	ldi	r24, 0x03	; 3
    c43e:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    c440:	59 c1       	rjmp	.+690    	; 0xc6f4 <_Z12getMorseCharc+0x364>

		case 'J':
		{
			morse.pattern = 0x0e;   /* 0000 1110; */
    c442:	8e e0       	ldi	r24, 0x0E	; 14
    c444:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    c446:	84 e0       	ldi	r24, 0x04	; 4
    c448:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    c44a:	8d e0       	ldi	r24, 0x0D	; 13
    c44c:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    c44e:	52 c1       	rjmp	.+676    	; 0xc6f4 <_Z12getMorseCharc+0x364>

		case 'K':
		{
			morse.pattern = 0x05;   /* 0000 0101; */
    c450:	85 e0       	ldi	r24, 0x05	; 5
    c452:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 3;
    c454:	83 e0       	ldi	r24, 0x03	; 3
    c456:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    c458:	89 e0       	ldi	r24, 0x09	; 9
    c45a:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    c45c:	4b c1       	rjmp	.+662    	; 0xc6f4 <_Z12getMorseCharc+0x364>

		case 'L':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
    c45e:	82 e0       	ldi	r24, 0x02	; 2
    c460:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    c462:	84 e0       	ldi	r24, 0x04	; 4
    c464:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    c466:	89 e0       	ldi	r24, 0x09	; 9
    c468:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    c46a:	44 c1       	rjmp	.+648    	; 0xc6f4 <_Z12getMorseCharc+0x364>

		case 'M':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
    c46c:	83 e0       	ldi	r24, 0x03	; 3
    c46e:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 2;
    c470:	82 e0       	ldi	r24, 0x02	; 2
    c472:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 7;
    c474:	87 e0       	ldi	r24, 0x07	; 7
    c476:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    c478:	3d c1       	rjmp	.+634    	; 0xc6f4 <_Z12getMorseCharc+0x364>

		case 'N':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    c47a:	81 e0       	ldi	r24, 0x01	; 1
    c47c:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 2;
    c47e:	82 e0       	ldi	r24, 0x02	; 2
    c480:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 5;
    c482:	85 e0       	ldi	r24, 0x05	; 5
    c484:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    c486:	36 c1       	rjmp	.+620    	; 0xc6f4 <_Z12getMorseCharc+0x364>

		case 'O':
		{
			morse.pattern = 0x07;   /* 0000 0111; */
    c488:	87 e0       	ldi	r24, 0x07	; 7
    c48a:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 3;
    c48c:	83 e0       	ldi	r24, 0x03	; 3
    c48e:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    c490:	8b e0       	ldi	r24, 0x0B	; 11
    c492:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    c494:	2f c1       	rjmp	.+606    	; 0xc6f4 <_Z12getMorseCharc+0x364>

		case 'P':
		{
			morse.pattern = 0x06;   /* 0000 0110; */
    c496:	86 e0       	ldi	r24, 0x06	; 6
    c498:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    c49a:	84 e0       	ldi	r24, 0x04	; 4
    c49c:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    c49e:	8b e0       	ldi	r24, 0x0B	; 11
    c4a0:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    c4a2:	28 c1       	rjmp	.+592    	; 0xc6f4 <_Z12getMorseCharc+0x364>

		case 'Q':
		{
			morse.pattern = 0x0b;   /* 0000 1011; */
    c4a4:	8b e0       	ldi	r24, 0x0B	; 11
    c4a6:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    c4a8:	84 e0       	ldi	r24, 0x04	; 4
    c4aa:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    c4ac:	8d e0       	ldi	r24, 0x0D	; 13
    c4ae:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    c4b0:	21 c1       	rjmp	.+578    	; 0xc6f4 <_Z12getMorseCharc+0x364>

		case 'R':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
    c4b2:	82 e0       	ldi	r24, 0x02	; 2
    c4b4:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 3;
    c4b6:	83 e0       	ldi	r24, 0x03	; 3
    c4b8:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 7;
    c4ba:	87 e0       	ldi	r24, 0x07	; 7
    c4bc:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    c4be:	1a c1       	rjmp	.+564    	; 0xc6f4 <_Z12getMorseCharc+0x364>

		case 'S':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    c4c0:	19 82       	std	Y+1, r1	; 0x01
			morse.lengthInSymbols = 3;
    c4c2:	83 e0       	ldi	r24, 0x03	; 3
    c4c4:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 5;
    c4c6:	85 e0       	ldi	r24, 0x05	; 5
    c4c8:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    c4ca:	14 c1       	rjmp	.+552    	; 0xc6f4 <_Z12getMorseCharc+0x364>

		case 'T':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    c4cc:	81 e0       	ldi	r24, 0x01	; 1
    c4ce:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 1;
    c4d0:	81 e0       	ldi	r24, 0x01	; 1
    c4d2:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 3;
    c4d4:	83 e0       	ldi	r24, 0x03	; 3
    c4d6:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    c4d8:	0d c1       	rjmp	.+538    	; 0xc6f4 <_Z12getMorseCharc+0x364>

		case 'U':
		{
			morse.pattern = 0x04;   /* 0000 0100; */
    c4da:	84 e0       	ldi	r24, 0x04	; 4
    c4dc:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 3;
    c4de:	83 e0       	ldi	r24, 0x03	; 3
    c4e0:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 7;
    c4e2:	87 e0       	ldi	r24, 0x07	; 7
    c4e4:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    c4e6:	06 c1       	rjmp	.+524    	; 0xc6f4 <_Z12getMorseCharc+0x364>

		case 'V':
		{
			morse.pattern = 0x08;   /* 0000 1000; */
    c4e8:	88 e0       	ldi	r24, 0x08	; 8
    c4ea:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    c4ec:	84 e0       	ldi	r24, 0x04	; 4
    c4ee:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    c4f0:	89 e0       	ldi	r24, 0x09	; 9
    c4f2:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    c4f4:	ff c0       	rjmp	.+510    	; 0xc6f4 <_Z12getMorseCharc+0x364>

		case 'W':
		{
			morse.pattern = 0x06;   /* 0000 0110; */
    c4f6:	86 e0       	ldi	r24, 0x06	; 6
    c4f8:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 3;
    c4fa:	83 e0       	ldi	r24, 0x03	; 3
    c4fc:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    c4fe:	89 e0       	ldi	r24, 0x09	; 9
    c500:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    c502:	f8 c0       	rjmp	.+496    	; 0xc6f4 <_Z12getMorseCharc+0x364>

		case 'X':
		{
			morse.pattern = 0x09;   /* 0000 1001; */
    c504:	89 e0       	ldi	r24, 0x09	; 9
    c506:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    c508:	84 e0       	ldi	r24, 0x04	; 4
    c50a:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    c50c:	8b e0       	ldi	r24, 0x0B	; 11
    c50e:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    c510:	f1 c0       	rjmp	.+482    	; 0xc6f4 <_Z12getMorseCharc+0x364>

		case 'Y':
		{
			morse.pattern = 0x0d;   /* 0000 1101; */
    c512:	8d e0       	ldi	r24, 0x0D	; 13
    c514:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    c516:	84 e0       	ldi	r24, 0x04	; 4
    c518:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    c51a:	8d e0       	ldi	r24, 0x0D	; 13
    c51c:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    c51e:	ea c0       	rjmp	.+468    	; 0xc6f4 <_Z12getMorseCharc+0x364>

		case 'Z':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
    c520:	83 e0       	ldi	r24, 0x03	; 3
    c522:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    c524:	84 e0       	ldi	r24, 0x04	; 4
    c526:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    c528:	8b e0       	ldi	r24, 0x0B	; 11
    c52a:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    c52c:	e3 c0       	rjmp	.+454    	; 0xc6f4 <_Z12getMorseCharc+0x364>

		case '0':
		{
			morse.pattern = 0x1f;   /* 0001 1111; */
    c52e:	8f e1       	ldi	r24, 0x1F	; 31
    c530:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    c532:	85 e0       	ldi	r24, 0x05	; 5
    c534:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 19;
    c536:	83 e1       	ldi	r24, 0x13	; 19
    c538:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    c53a:	dc c0       	rjmp	.+440    	; 0xc6f4 <_Z12getMorseCharc+0x364>

		case '1':
		{
			morse.pattern = 0x1e;   /* 0001 1110; */
    c53c:	8e e1       	ldi	r24, 0x1E	; 30
    c53e:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    c540:	85 e0       	ldi	r24, 0x05	; 5
    c542:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 17;
    c544:	81 e1       	ldi	r24, 0x11	; 17
    c546:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    c548:	d5 c0       	rjmp	.+426    	; 0xc6f4 <_Z12getMorseCharc+0x364>

		case '2':
		{
			morse.pattern = 0x1c;   /* 0001 1100; */
    c54a:	8c e1       	ldi	r24, 0x1C	; 28
    c54c:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    c54e:	85 e0       	ldi	r24, 0x05	; 5
    c550:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 15;
    c552:	8f e0       	ldi	r24, 0x0F	; 15
    c554:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    c556:	ce c0       	rjmp	.+412    	; 0xc6f4 <_Z12getMorseCharc+0x364>

		case '3':
		{
			morse.pattern = 0x18;   /* 0001 1000; */
    c558:	88 e1       	ldi	r24, 0x18	; 24
    c55a:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    c55c:	85 e0       	ldi	r24, 0x05	; 5
    c55e:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    c560:	8d e0       	ldi	r24, 0x0D	; 13
    c562:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    c564:	c7 c0       	rjmp	.+398    	; 0xc6f4 <_Z12getMorseCharc+0x364>

		case '4':
		{
			morse.pattern = 0x10;   /* 0001 0000; */
    c566:	80 e1       	ldi	r24, 0x10	; 16
    c568:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    c56a:	85 e0       	ldi	r24, 0x05	; 5
    c56c:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    c56e:	8b e0       	ldi	r24, 0x0B	; 11
    c570:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    c572:	c0 c0       	rjmp	.+384    	; 0xc6f4 <_Z12getMorseCharc+0x364>

		case '5':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    c574:	19 82       	std	Y+1, r1	; 0x01
			morse.lengthInSymbols = 5;
    c576:	85 e0       	ldi	r24, 0x05	; 5
    c578:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    c57a:	89 e0       	ldi	r24, 0x09	; 9
    c57c:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    c57e:	ba c0       	rjmp	.+372    	; 0xc6f4 <_Z12getMorseCharc+0x364>

		case '6':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    c580:	81 e0       	ldi	r24, 0x01	; 1
    c582:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    c584:	85 e0       	ldi	r24, 0x05	; 5
    c586:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    c588:	8b e0       	ldi	r24, 0x0B	; 11
    c58a:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    c58c:	b3 c0       	rjmp	.+358    	; 0xc6f4 <_Z12getMorseCharc+0x364>

		case '7':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
    c58e:	83 e0       	ldi	r24, 0x03	; 3
    c590:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    c592:	85 e0       	ldi	r24, 0x05	; 5
    c594:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    c596:	8d e0       	ldi	r24, 0x0D	; 13
    c598:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    c59a:	ac c0       	rjmp	.+344    	; 0xc6f4 <_Z12getMorseCharc+0x364>

		case '8':
		{
			morse.pattern = 0x07;   /* 0000 0111; */
    c59c:	87 e0       	ldi	r24, 0x07	; 7
    c59e:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    c5a0:	85 e0       	ldi	r24, 0x05	; 5
    c5a2:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 15;
    c5a4:	8f e0       	ldi	r24, 0x0F	; 15
    c5a6:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    c5a8:	a5 c0       	rjmp	.+330    	; 0xc6f4 <_Z12getMorseCharc+0x364>

		case '9':
		{
			morse.pattern = 0x0f;   /* 0000 1111; */
    c5aa:	8f e0       	ldi	r24, 0x0F	; 15
    c5ac:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    c5ae:	85 e0       	ldi	r24, 0x05	; 5
    c5b0:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 17;
    c5b2:	81 e1       	ldi	r24, 0x11	; 17
    c5b4:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    c5b6:	9e c0       	rjmp	.+316    	; 0xc6f4 <_Z12getMorseCharc+0x364>

		case '.':
		{
			morse.pattern = 0x2a;   /* 0010 1010; */
    c5b8:	8a e2       	ldi	r24, 0x2A	; 42
    c5ba:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    c5bc:	86 e0       	ldi	r24, 0x06	; 6
    c5be:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 17;
    c5c0:	81 e1       	ldi	r24, 0x11	; 17
    c5c2:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    c5c4:	97 c0       	rjmp	.+302    	; 0xc6f4 <_Z12getMorseCharc+0x364>

		case ',':
		{
			morse.pattern = 0x33;   /* 0011 0011; */
    c5c6:	83 e3       	ldi	r24, 0x33	; 51
    c5c8:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    c5ca:	86 e0       	ldi	r24, 0x06	; 6
    c5cc:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 19;
    c5ce:	83 e1       	ldi	r24, 0x13	; 19
    c5d0:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    c5d2:	90 c0       	rjmp	.+288    	; 0xc6f4 <_Z12getMorseCharc+0x364>

		case '?':
		{
			morse.pattern = 0x0c;   /* 0000 1100; */
    c5d4:	8c e0       	ldi	r24, 0x0C	; 12
    c5d6:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    c5d8:	86 e0       	ldi	r24, 0x06	; 6
    c5da:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 15;
    c5dc:	8f e0       	ldi	r24, 0x0F	; 15
    c5de:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    c5e0:	89 c0       	rjmp	.+274    	; 0xc6f4 <_Z12getMorseCharc+0x364>

		case '\'':
		{
			morse.pattern = 0x1e;   /* 0001 1110; */
    c5e2:	8e e1       	ldi	r24, 0x1E	; 30
    c5e4:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    c5e6:	86 e0       	ldi	r24, 0x06	; 6
    c5e8:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 19;
    c5ea:	83 e1       	ldi	r24, 0x13	; 19
    c5ec:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    c5ee:	82 c0       	rjmp	.+260    	; 0xc6f4 <_Z12getMorseCharc+0x364>

		case '!':
		{
			morse.pattern = 0x35;   /* 0011 0101; */
    c5f0:	85 e3       	ldi	r24, 0x35	; 53
    c5f2:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    c5f4:	86 e0       	ldi	r24, 0x06	; 6
    c5f6:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 19;
    c5f8:	83 e1       	ldi	r24, 0x13	; 19
    c5fa:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    c5fc:	7b c0       	rjmp	.+246    	; 0xc6f4 <_Z12getMorseCharc+0x364>

		case '/':
		{
			morse.pattern = 0x09;   /* 0000 1001; */
    c5fe:	89 e0       	ldi	r24, 0x09	; 9
    c600:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    c602:	85 e0       	ldi	r24, 0x05	; 5
    c604:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    c606:	8d e0       	ldi	r24, 0x0D	; 13
    c608:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    c60a:	74 c0       	rjmp	.+232    	; 0xc6f4 <_Z12getMorseCharc+0x364>

		case '(':
		{
			morse.pattern = 0x0d;   /* 0000 1101; */
    c60c:	8d e0       	ldi	r24, 0x0D	; 13
    c60e:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    c610:	85 e0       	ldi	r24, 0x05	; 5
    c612:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 15;
    c614:	8f e0       	ldi	r24, 0x0F	; 15
    c616:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    c618:	6d c0       	rjmp	.+218    	; 0xc6f4 <_Z12getMorseCharc+0x364>

		case ')':
		{
			morse.pattern = 0x2d;   /* 0010 1101; */
    c61a:	8d e2       	ldi	r24, 0x2D	; 45
    c61c:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    c61e:	86 e0       	ldi	r24, 0x06	; 6
    c620:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 19;
    c622:	83 e1       	ldi	r24, 0x13	; 19
    c624:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    c626:	66 c0       	rjmp	.+204    	; 0xc6f4 <_Z12getMorseCharc+0x364>

		case '&':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
    c628:	82 e0       	ldi	r24, 0x02	; 2
    c62a:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    c62c:	85 e0       	ldi	r24, 0x05	; 5
    c62e:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    c630:	8b e0       	ldi	r24, 0x0B	; 11
    c632:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    c634:	5f c0       	rjmp	.+190    	; 0xc6f4 <_Z12getMorseCharc+0x364>

		case ':':
		{
			morse.pattern = 0x07;   /* 0000 0111; */
    c636:	87 e0       	ldi	r24, 0x07	; 7
    c638:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    c63a:	86 e0       	ldi	r24, 0x06	; 6
    c63c:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 17;
    c63e:	81 e1       	ldi	r24, 0x11	; 17
    c640:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    c642:	58 c0       	rjmp	.+176    	; 0xc6f4 <_Z12getMorseCharc+0x364>

		case ';':
		{
			morse.pattern = 0x15;   /* 0001 0101; */
    c644:	85 e1       	ldi	r24, 0x15	; 21
    c646:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    c648:	86 e0       	ldi	r24, 0x06	; 6
    c64a:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 12;
    c64c:	8c e0       	ldi	r24, 0x0C	; 12
    c64e:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    c650:	51 c0       	rjmp	.+162    	; 0xc6f4 <_Z12getMorseCharc+0x364>

		case '=':
		{
			morse.pattern = 0x11;   /* 0001 0001; */
    c652:	81 e1       	ldi	r24, 0x11	; 17
    c654:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    c656:	85 e0       	ldi	r24, 0x05	; 5
    c658:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    c65a:	8d e0       	ldi	r24, 0x0D	; 13
    c65c:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    c65e:	4a c0       	rjmp	.+148    	; 0xc6f4 <_Z12getMorseCharc+0x364>

		case '+': /* AR */
		{
			morse.pattern = 0x0a;   /* 0000 1010; */
    c660:	8a e0       	ldi	r24, 0x0A	; 10
    c662:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    c664:	85 e0       	ldi	r24, 0x05	; 5
    c666:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    c668:	8d e0       	ldi	r24, 0x0D	; 13
    c66a:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    c66c:	43 c0       	rjmp	.+134    	; 0xc6f4 <_Z12getMorseCharc+0x364>

		case '~': /* SK */
		{
			morse.pattern = 0x28;   /* 0010 1000; */
    c66e:	88 e2       	ldi	r24, 0x28	; 40
    c670:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    c672:	86 e0       	ldi	r24, 0x06	; 6
    c674:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 15;
    c676:	8f e0       	ldi	r24, 0x0F	; 15
    c678:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    c67a:	3c c0       	rjmp	.+120    	; 0xc6f4 <_Z12getMorseCharc+0x364>

		case '-':
		{
			morse.pattern = 0x21;   /* 0010 0001; */
    c67c:	81 e2       	ldi	r24, 0x21	; 33
    c67e:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    c680:	86 e0       	ldi	r24, 0x06	; 6
    c682:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 15;
    c684:	8f e0       	ldi	r24, 0x0F	; 15
    c686:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    c688:	35 c0       	rjmp	.+106    	; 0xc6f4 <_Z12getMorseCharc+0x364>

		case '_':
		{
			morse.pattern = 0x2c;   /* 0010 1100; */
    c68a:	8c e2       	ldi	r24, 0x2C	; 44
    c68c:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    c68e:	86 e0       	ldi	r24, 0x06	; 6
    c690:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 17;
    c692:	81 e1       	ldi	r24, 0x11	; 17
    c694:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    c696:	2e c0       	rjmp	.+92     	; 0xc6f4 <_Z12getMorseCharc+0x364>

		case '"':
		{
			morse.pattern = 0x12;   /* 0001 0010; */
    c698:	82 e1       	ldi	r24, 0x12	; 18
    c69a:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    c69c:	86 e0       	ldi	r24, 0x06	; 6
    c69e:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 15;
    c6a0:	8f e0       	ldi	r24, 0x0F	; 15
    c6a2:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    c6a4:	27 c0       	rjmp	.+78     	; 0xc6f4 <_Z12getMorseCharc+0x364>

		case '$':
		{
			morse.pattern = 0x48;   /* 0100 1000; */
    c6a6:	88 e4       	ldi	r24, 0x48	; 72
    c6a8:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 7;
    c6aa:	87 e0       	ldi	r24, 0x07	; 7
    c6ac:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 17;
    c6ae:	81 e1       	ldi	r24, 0x11	; 17
    c6b0:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    c6b2:	20 c0       	rjmp	.+64     	; 0xc6f4 <_Z12getMorseCharc+0x364>

		case '@':
		{
			morse.pattern = 0x16;   /* 0001 0110; */
    c6b4:	86 e1       	ldi	r24, 0x16	; 22
    c6b6:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    c6b8:	86 e0       	ldi	r24, 0x06	; 6
    c6ba:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 17;
    c6bc:	81 e1       	ldi	r24, 0x11	; 17
    c6be:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    c6c0:	19 c0       	rjmp	.+50     	; 0xc6f4 <_Z12getMorseCharc+0x364>

		case '|':                       /* inter-word space */
		{ morse.pattern = 0xff;         /* 1000 0000; */
    c6c2:	8f ef       	ldi	r24, 0xFF	; 255
    c6c4:	89 83       	std	Y+1, r24	; 0x01
		  morse.lengthInSymbols = 7;
    c6c6:	87 e0       	ldi	r24, 0x07	; 7
    c6c8:	8a 83       	std	Y+2, r24	; 0x02
		  morse.lengthInElements = 4;   /* adjusted by -3 to account for inter-character space */
    c6ca:	84 e0       	ldi	r24, 0x04	; 4
    c6cc:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    c6ce:	12 c0       	rjmp	.+36     	; 0xc6f4 <_Z12getMorseCharc+0x364>

		case ' ':                       /* inter-word space */
		{ morse.pattern = 0xfe;         /* 1000 0000; */
    c6d0:	8e ef       	ldi	r24, 0xFE	; 254
    c6d2:	89 83       	std	Y+1, r24	; 0x01
		  morse.lengthInSymbols = 7;
    c6d4:	87 e0       	ldi	r24, 0x07	; 7
    c6d6:	8a 83       	std	Y+2, r24	; 0x02
		  morse.lengthInElements = 7;   /* 4 + 3 (character space) = 7 */
    c6d8:	87 e0       	ldi	r24, 0x07	; 7
    c6da:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    c6dc:	0b c0       	rjmp	.+22     	; 0xc6f4 <_Z12getMorseCharc+0x364>

		case '<':                       /* long keydown */
		{
			morse.pattern = 0x1f;       /* 0001 1111; */
    c6de:	8f e1       	ldi	r24, 0x1F	; 31
    c6e0:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    c6e2:	85 e0       	ldi	r24, 0x05	; 5
    c6e4:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 19;
    c6e6:	83 e1       	ldi	r24, 0x13	; 19
    c6e8:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    c6ea:	04 c0       	rjmp	.+8      	; 0xc6f4 <_Z12getMorseCharc+0x364>

		default:
		{
			morse.pattern = 0x0000; /* 0000 0000; */
    c6ec:	19 82       	std	Y+1, r1	; 0x01
			morse.lengthInSymbols = 0;
    c6ee:	1a 82       	std	Y+2, r1	; 0x02
			morse.lengthInElements = 0;
    c6f0:	1b 82       	std	Y+3, r1	; 0x03
		}
		break;
    c6f2:	00 00       	nop
	}

	return( morse);
    c6f4:	89 81       	ldd	r24, Y+1	; 0x01
    c6f6:	9a 81       	ldd	r25, Y+2	; 0x02
    c6f8:	ab 81       	ldd	r26, Y+3	; 0x03
}
    c6fa:	bc 01       	movw	r22, r24
    c6fc:	8a 2f       	mov	r24, r26
    c6fe:	24 96       	adiw	r28, 0x04	; 4
    c700:	cd bf       	out	0x3d, r28	; 61
    c702:	de bf       	out	0x3e, r29	; 62
    c704:	df 91       	pop	r29
    c706:	cf 91       	pop	r28
    c708:	08 95       	ret

0000c70a <protected_write_io>:
	PUBLIC_FUNCTION(protected_write_io)

#if defined(__GNUC__)
  
#ifdef RAMPZ
	out     _SFR_IO_ADDR(RAMPZ), r1         // Clear bits 23:16 of Z
    c70a:	1b be       	out	0x3b, r1	; 59
#endif
	movw    r30, r24                // Load addr into Z
    c70c:	fc 01       	movw	r30, r24
	out     CCP, r22                // Start CCP handshake
    c70e:	64 bf       	out	0x34, r22	; 52
	st      Z, r20                  // Write value to I/O register
    c710:	40 83       	st	Z, r20
	ret                             // Return to caller
    c712:	08 95       	ret

0000c714 <PORTC_set_pin_pull_mode>:

	while(serialbus_send_text((char*)textPrompt))
	{
		;
	}
}
    c714:	cf 93       	push	r28
    c716:	df 93       	push	r29
    c718:	00 d0       	rcall	.+0      	; 0xc71a <PORTC_set_pin_pull_mode+0x6>
    c71a:	00 d0       	rcall	.+0      	; 0xc71c <PORTC_set_pin_pull_mode+0x8>
    c71c:	cd b7       	in	r28, 0x3d	; 61
    c71e:	de b7       	in	r29, 0x3e	; 62
    c720:	8b 83       	std	Y+3, r24	; 0x03
    c722:	6c 83       	std	Y+4, r22	; 0x04
    c724:	8b 81       	ldd	r24, Y+3	; 0x03
    c726:	88 2f       	mov	r24, r24
    c728:	90 e0       	ldi	r25, 0x00	; 0
    c72a:	80 5b       	subi	r24, 0xB0	; 176
    c72c:	9b 4f       	sbci	r25, 0xFB	; 251
    c72e:	89 83       	std	Y+1, r24	; 0x01
    c730:	9a 83       	std	Y+2, r25	; 0x02
    c732:	8c 81       	ldd	r24, Y+4	; 0x04
    c734:	81 30       	cpi	r24, 0x01	; 1
    c736:	59 f4       	brne	.+22     	; 0xc74e <PORTC_set_pin_pull_mode+0x3a>
    c738:	89 81       	ldd	r24, Y+1	; 0x01
    c73a:	9a 81       	ldd	r25, Y+2	; 0x02
    c73c:	fc 01       	movw	r30, r24
    c73e:	80 81       	ld	r24, Z
    c740:	28 2f       	mov	r18, r24
    c742:	28 60       	ori	r18, 0x08	; 8
    c744:	89 81       	ldd	r24, Y+1	; 0x01
    c746:	9a 81       	ldd	r25, Y+2	; 0x02
    c748:	fc 01       	movw	r30, r24
    c74a:	20 83       	st	Z, r18
    c74c:	0d c0       	rjmp	.+26     	; 0xc768 <PORTC_set_pin_pull_mode+0x54>
    c74e:	8c 81       	ldd	r24, Y+4	; 0x04
    c750:	88 23       	and	r24, r24
    c752:	51 f4       	brne	.+20     	; 0xc768 <PORTC_set_pin_pull_mode+0x54>
    c754:	89 81       	ldd	r24, Y+1	; 0x01
    c756:	9a 81       	ldd	r25, Y+2	; 0x02
    c758:	fc 01       	movw	r30, r24
    c75a:	80 81       	ld	r24, Z
    c75c:	28 2f       	mov	r18, r24
    c75e:	27 7f       	andi	r18, 0xF7	; 247
    c760:	89 81       	ldd	r24, Y+1	; 0x01
    c762:	9a 81       	ldd	r25, Y+2	; 0x02
    c764:	fc 01       	movw	r30, r24
    c766:	20 83       	st	Z, r18
    c768:	00 00       	nop
    c76a:	24 96       	adiw	r28, 0x04	; 4
    c76c:	cd bf       	out	0x3d, r28	; 61
    c76e:	de bf       	out	0x3e, r29	; 62
    c770:	df 91       	pop	r29
    c772:	cf 91       	pop	r28
    c774:	08 95       	ret

0000c776 <PORTC_set_pin_dir>:
    c776:	cf 93       	push	r28
    c778:	df 93       	push	r29
    c77a:	00 d0       	rcall	.+0      	; 0xc77c <PORTC_set_pin_dir+0x6>
    c77c:	cd b7       	in	r28, 0x3d	; 61
    c77e:	de b7       	in	r29, 0x3e	; 62
    c780:	89 83       	std	Y+1, r24	; 0x01
    c782:	6a 83       	std	Y+2, r22	; 0x02
    c784:	8a 81       	ldd	r24, Y+2	; 0x02
    c786:	88 2f       	mov	r24, r24
    c788:	90 e0       	ldi	r25, 0x00	; 0
    c78a:	81 30       	cpi	r24, 0x01	; 1
    c78c:	91 05       	cpc	r25, r1
    c78e:	e1 f0       	breq	.+56     	; 0xc7c8 <PORTC_set_pin_dir+0x52>
    c790:	82 30       	cpi	r24, 0x02	; 2
    c792:	91 05       	cpc	r25, r1
    c794:	71 f1       	breq	.+92     	; 0xc7f2 <PORTC_set_pin_dir+0x7c>
    c796:	89 2b       	or	r24, r25
    c798:	09 f0       	breq	.+2      	; 0xc79c <PORTC_set_pin_dir+0x26>
    c79a:	3b c0       	rjmp	.+118    	; 0xc812 <PORTC_set_pin_dir+0x9c>
    c79c:	88 e0       	ldi	r24, 0x08	; 8
    c79e:	90 e0       	ldi	r25, 0x00	; 0
    c7a0:	28 e0       	ldi	r18, 0x08	; 8
    c7a2:	30 e0       	ldi	r19, 0x00	; 0
    c7a4:	f9 01       	movw	r30, r18
    c7a6:	20 81       	ld	r18, Z
    c7a8:	62 2f       	mov	r22, r18
    c7aa:	29 81       	ldd	r18, Y+1	; 0x01
    c7ac:	42 2f       	mov	r20, r18
    c7ae:	50 e0       	ldi	r21, 0x00	; 0
    c7b0:	21 e0       	ldi	r18, 0x01	; 1
    c7b2:	30 e0       	ldi	r19, 0x00	; 0
    c7b4:	02 c0       	rjmp	.+4      	; 0xc7ba <PORTC_set_pin_dir+0x44>
    c7b6:	22 0f       	add	r18, r18
    c7b8:	33 1f       	adc	r19, r19
    c7ba:	4a 95       	dec	r20
    c7bc:	e2 f7       	brpl	.-8      	; 0xc7b6 <PORTC_set_pin_dir+0x40>
    c7be:	20 95       	com	r18
    c7c0:	26 23       	and	r18, r22
    c7c2:	fc 01       	movw	r30, r24
    c7c4:	20 83       	st	Z, r18
    c7c6:	25 c0       	rjmp	.+74     	; 0xc812 <PORTC_set_pin_dir+0x9c>
    c7c8:	88 e0       	ldi	r24, 0x08	; 8
    c7ca:	90 e0       	ldi	r25, 0x00	; 0
    c7cc:	28 e0       	ldi	r18, 0x08	; 8
    c7ce:	30 e0       	ldi	r19, 0x00	; 0
    c7d0:	f9 01       	movw	r30, r18
    c7d2:	20 81       	ld	r18, Z
    c7d4:	62 2f       	mov	r22, r18
    c7d6:	29 81       	ldd	r18, Y+1	; 0x01
    c7d8:	42 2f       	mov	r20, r18
    c7da:	50 e0       	ldi	r21, 0x00	; 0
    c7dc:	21 e0       	ldi	r18, 0x01	; 1
    c7de:	30 e0       	ldi	r19, 0x00	; 0
    c7e0:	02 c0       	rjmp	.+4      	; 0xc7e6 <PORTC_set_pin_dir+0x70>
    c7e2:	22 0f       	add	r18, r18
    c7e4:	33 1f       	adc	r19, r19
    c7e6:	4a 95       	dec	r20
    c7e8:	e2 f7       	brpl	.-8      	; 0xc7e2 <PORTC_set_pin_dir+0x6c>
    c7ea:	26 2b       	or	r18, r22
    c7ec:	fc 01       	movw	r30, r24
    c7ee:	20 83       	st	Z, r18
    c7f0:	10 c0       	rjmp	.+32     	; 0xc812 <PORTC_set_pin_dir+0x9c>
    c7f2:	89 81       	ldd	r24, Y+1	; 0x01
    c7f4:	88 2f       	mov	r24, r24
    c7f6:	90 e0       	ldi	r25, 0x00	; 0
    c7f8:	80 5b       	subi	r24, 0xB0	; 176
    c7fa:	9b 4f       	sbci	r25, 0xFB	; 251
    c7fc:	29 81       	ldd	r18, Y+1	; 0x01
    c7fe:	22 2f       	mov	r18, r18
    c800:	30 e0       	ldi	r19, 0x00	; 0
    c802:	20 5b       	subi	r18, 0xB0	; 176
    c804:	3b 4f       	sbci	r19, 0xFB	; 251
    c806:	f9 01       	movw	r30, r18
    c808:	20 81       	ld	r18, Z
    c80a:	28 60       	ori	r18, 0x08	; 8
    c80c:	fc 01       	movw	r30, r24
    c80e:	20 83       	st	Z, r18
    c810:	00 00       	nop
    c812:	00 00       	nop
    c814:	0f 90       	pop	r0
    c816:	0f 90       	pop	r0
    c818:	df 91       	pop	r29
    c81a:	cf 91       	pop	r28
    c81c:	08 95       	ret

0000c81e <PORTC_set_pin_level>:
    c81e:	cf 93       	push	r28
    c820:	df 93       	push	r29
    c822:	00 d0       	rcall	.+0      	; 0xc824 <PORTC_set_pin_level+0x6>
    c824:	cd b7       	in	r28, 0x3d	; 61
    c826:	de b7       	in	r29, 0x3e	; 62
    c828:	89 83       	std	Y+1, r24	; 0x01
    c82a:	6a 83       	std	Y+2, r22	; 0x02
    c82c:	8a 81       	ldd	r24, Y+2	; 0x02
    c82e:	88 23       	and	r24, r24
    c830:	a9 f0       	breq	.+42     	; 0xc85c <PORTC_set_pin_level+0x3e>
    c832:	88 e0       	ldi	r24, 0x08	; 8
    c834:	90 e0       	ldi	r25, 0x00	; 0
    c836:	28 e0       	ldi	r18, 0x08	; 8
    c838:	30 e0       	ldi	r19, 0x00	; 0
    c83a:	f9 01       	movw	r30, r18
    c83c:	21 81       	ldd	r18, Z+1	; 0x01
    c83e:	62 2f       	mov	r22, r18
    c840:	29 81       	ldd	r18, Y+1	; 0x01
    c842:	42 2f       	mov	r20, r18
    c844:	50 e0       	ldi	r21, 0x00	; 0
    c846:	21 e0       	ldi	r18, 0x01	; 1
    c848:	30 e0       	ldi	r19, 0x00	; 0
    c84a:	02 c0       	rjmp	.+4      	; 0xc850 <PORTC_set_pin_level+0x32>
    c84c:	22 0f       	add	r18, r18
    c84e:	33 1f       	adc	r19, r19
    c850:	4a 95       	dec	r20
    c852:	e2 f7       	brpl	.-8      	; 0xc84c <PORTC_set_pin_level+0x2e>
    c854:	26 2b       	or	r18, r22
    c856:	fc 01       	movw	r30, r24
    c858:	21 83       	std	Z+1, r18	; 0x01
    c85a:	15 c0       	rjmp	.+42     	; 0xc886 <PORTC_set_pin_level+0x68>
    c85c:	88 e0       	ldi	r24, 0x08	; 8
    c85e:	90 e0       	ldi	r25, 0x00	; 0
    c860:	28 e0       	ldi	r18, 0x08	; 8
    c862:	30 e0       	ldi	r19, 0x00	; 0
    c864:	f9 01       	movw	r30, r18
    c866:	21 81       	ldd	r18, Z+1	; 0x01
    c868:	62 2f       	mov	r22, r18
    c86a:	29 81       	ldd	r18, Y+1	; 0x01
    c86c:	42 2f       	mov	r20, r18
    c86e:	50 e0       	ldi	r21, 0x00	; 0
    c870:	21 e0       	ldi	r18, 0x01	; 1
    c872:	30 e0       	ldi	r19, 0x00	; 0
    c874:	02 c0       	rjmp	.+4      	; 0xc87a <PORTC_set_pin_level+0x5c>
    c876:	22 0f       	add	r18, r18
    c878:	33 1f       	adc	r19, r19
    c87a:	4a 95       	dec	r20
    c87c:	e2 f7       	brpl	.-8      	; 0xc876 <PORTC_set_pin_level+0x58>
    c87e:	20 95       	com	r18
    c880:	26 23       	and	r18, r22
    c882:	fc 01       	movw	r30, r24
    c884:	21 83       	std	Z+1, r18	; 0x01
    c886:	00 00       	nop
    c888:	0f 90       	pop	r0
    c88a:	0f 90       	pop	r0
    c88c:	df 91       	pop	r29
    c88e:	cf 91       	pop	r28
    c890:	08 95       	ret

0000c892 <PORTE_set_pin_pull_mode>:
    c892:	cf 93       	push	r28
    c894:	df 93       	push	r29
    c896:	00 d0       	rcall	.+0      	; 0xc898 <PORTE_set_pin_pull_mode+0x6>
    c898:	00 d0       	rcall	.+0      	; 0xc89a <PORTE_set_pin_pull_mode+0x8>
    c89a:	cd b7       	in	r28, 0x3d	; 61
    c89c:	de b7       	in	r29, 0x3e	; 62
    c89e:	8b 83       	std	Y+3, r24	; 0x03
    c8a0:	6c 83       	std	Y+4, r22	; 0x04
    c8a2:	8b 81       	ldd	r24, Y+3	; 0x03
    c8a4:	88 2f       	mov	r24, r24
    c8a6:	90 e0       	ldi	r25, 0x00	; 0
    c8a8:	80 57       	subi	r24, 0x70	; 112
    c8aa:	9b 4f       	sbci	r25, 0xFB	; 251
    c8ac:	89 83       	std	Y+1, r24	; 0x01
    c8ae:	9a 83       	std	Y+2, r25	; 0x02
    c8b0:	8c 81       	ldd	r24, Y+4	; 0x04
    c8b2:	81 30       	cpi	r24, 0x01	; 1
    c8b4:	59 f4       	brne	.+22     	; 0xc8cc <PORTE_set_pin_pull_mode+0x3a>
    c8b6:	89 81       	ldd	r24, Y+1	; 0x01
    c8b8:	9a 81       	ldd	r25, Y+2	; 0x02
    c8ba:	fc 01       	movw	r30, r24
    c8bc:	80 81       	ld	r24, Z
    c8be:	28 2f       	mov	r18, r24
    c8c0:	28 60       	ori	r18, 0x08	; 8
    c8c2:	89 81       	ldd	r24, Y+1	; 0x01
    c8c4:	9a 81       	ldd	r25, Y+2	; 0x02
    c8c6:	fc 01       	movw	r30, r24
    c8c8:	20 83       	st	Z, r18
    c8ca:	0d c0       	rjmp	.+26     	; 0xc8e6 <PORTE_set_pin_pull_mode+0x54>
    c8cc:	8c 81       	ldd	r24, Y+4	; 0x04
    c8ce:	88 23       	and	r24, r24
    c8d0:	51 f4       	brne	.+20     	; 0xc8e6 <PORTE_set_pin_pull_mode+0x54>
    c8d2:	89 81       	ldd	r24, Y+1	; 0x01
    c8d4:	9a 81       	ldd	r25, Y+2	; 0x02
    c8d6:	fc 01       	movw	r30, r24
    c8d8:	80 81       	ld	r24, Z
    c8da:	28 2f       	mov	r18, r24
    c8dc:	27 7f       	andi	r18, 0xF7	; 247
    c8de:	89 81       	ldd	r24, Y+1	; 0x01
    c8e0:	9a 81       	ldd	r25, Y+2	; 0x02
    c8e2:	fc 01       	movw	r30, r24
    c8e4:	20 83       	st	Z, r18
    c8e6:	00 00       	nop
    c8e8:	24 96       	adiw	r28, 0x04	; 4
    c8ea:	cd bf       	out	0x3d, r28	; 61
    c8ec:	de bf       	out	0x3e, r29	; 62
    c8ee:	df 91       	pop	r29
    c8f0:	cf 91       	pop	r28
    c8f2:	08 95       	ret

0000c8f4 <PORTE_set_pin_dir>:
    c8f4:	cf 93       	push	r28
    c8f6:	df 93       	push	r29
    c8f8:	00 d0       	rcall	.+0      	; 0xc8fa <PORTE_set_pin_dir+0x6>
    c8fa:	cd b7       	in	r28, 0x3d	; 61
    c8fc:	de b7       	in	r29, 0x3e	; 62
    c8fe:	89 83       	std	Y+1, r24	; 0x01
    c900:	6a 83       	std	Y+2, r22	; 0x02
    c902:	8a 81       	ldd	r24, Y+2	; 0x02
    c904:	88 2f       	mov	r24, r24
    c906:	90 e0       	ldi	r25, 0x00	; 0
    c908:	81 30       	cpi	r24, 0x01	; 1
    c90a:	91 05       	cpc	r25, r1
    c90c:	e1 f0       	breq	.+56     	; 0xc946 <PORTE_set_pin_dir+0x52>
    c90e:	82 30       	cpi	r24, 0x02	; 2
    c910:	91 05       	cpc	r25, r1
    c912:	71 f1       	breq	.+92     	; 0xc970 <PORTE_set_pin_dir+0x7c>
    c914:	89 2b       	or	r24, r25
    c916:	09 f0       	breq	.+2      	; 0xc91a <PORTE_set_pin_dir+0x26>
    c918:	3b c0       	rjmp	.+118    	; 0xc990 <PORTE_set_pin_dir+0x9c>
    c91a:	80 e1       	ldi	r24, 0x10	; 16
    c91c:	90 e0       	ldi	r25, 0x00	; 0
    c91e:	20 e1       	ldi	r18, 0x10	; 16
    c920:	30 e0       	ldi	r19, 0x00	; 0
    c922:	f9 01       	movw	r30, r18
    c924:	20 81       	ld	r18, Z
    c926:	62 2f       	mov	r22, r18
    c928:	29 81       	ldd	r18, Y+1	; 0x01
    c92a:	42 2f       	mov	r20, r18
    c92c:	50 e0       	ldi	r21, 0x00	; 0
    c92e:	21 e0       	ldi	r18, 0x01	; 1
    c930:	30 e0       	ldi	r19, 0x00	; 0
    c932:	02 c0       	rjmp	.+4      	; 0xc938 <PORTE_set_pin_dir+0x44>
    c934:	22 0f       	add	r18, r18
    c936:	33 1f       	adc	r19, r19
    c938:	4a 95       	dec	r20
    c93a:	e2 f7       	brpl	.-8      	; 0xc934 <PORTE_set_pin_dir+0x40>
    c93c:	20 95       	com	r18
    c93e:	26 23       	and	r18, r22
    c940:	fc 01       	movw	r30, r24
    c942:	20 83       	st	Z, r18
    c944:	25 c0       	rjmp	.+74     	; 0xc990 <PORTE_set_pin_dir+0x9c>
    c946:	80 e1       	ldi	r24, 0x10	; 16
    c948:	90 e0       	ldi	r25, 0x00	; 0
    c94a:	20 e1       	ldi	r18, 0x10	; 16
    c94c:	30 e0       	ldi	r19, 0x00	; 0
    c94e:	f9 01       	movw	r30, r18
    c950:	20 81       	ld	r18, Z
    c952:	62 2f       	mov	r22, r18
    c954:	29 81       	ldd	r18, Y+1	; 0x01
    c956:	42 2f       	mov	r20, r18
    c958:	50 e0       	ldi	r21, 0x00	; 0
    c95a:	21 e0       	ldi	r18, 0x01	; 1
    c95c:	30 e0       	ldi	r19, 0x00	; 0
    c95e:	02 c0       	rjmp	.+4      	; 0xc964 <PORTE_set_pin_dir+0x70>
    c960:	22 0f       	add	r18, r18
    c962:	33 1f       	adc	r19, r19
    c964:	4a 95       	dec	r20
    c966:	e2 f7       	brpl	.-8      	; 0xc960 <PORTE_set_pin_dir+0x6c>
    c968:	26 2b       	or	r18, r22
    c96a:	fc 01       	movw	r30, r24
    c96c:	20 83       	st	Z, r18
    c96e:	10 c0       	rjmp	.+32     	; 0xc990 <PORTE_set_pin_dir+0x9c>
    c970:	89 81       	ldd	r24, Y+1	; 0x01
    c972:	88 2f       	mov	r24, r24
    c974:	90 e0       	ldi	r25, 0x00	; 0
    c976:	80 57       	subi	r24, 0x70	; 112
    c978:	9b 4f       	sbci	r25, 0xFB	; 251
    c97a:	29 81       	ldd	r18, Y+1	; 0x01
    c97c:	22 2f       	mov	r18, r18
    c97e:	30 e0       	ldi	r19, 0x00	; 0
    c980:	20 57       	subi	r18, 0x70	; 112
    c982:	3b 4f       	sbci	r19, 0xFB	; 251
    c984:	f9 01       	movw	r30, r18
    c986:	20 81       	ld	r18, Z
    c988:	28 60       	ori	r18, 0x08	; 8
    c98a:	fc 01       	movw	r30, r24
    c98c:	20 83       	st	Z, r18
    c98e:	00 00       	nop
    c990:	00 00       	nop
    c992:	0f 90       	pop	r0
    c994:	0f 90       	pop	r0
    c996:	df 91       	pop	r29
    c998:	cf 91       	pop	r28
    c99a:	08 95       	ret

0000c99c <PORTE_set_pin_level>:
    c99c:	cf 93       	push	r28
    c99e:	df 93       	push	r29
    c9a0:	00 d0       	rcall	.+0      	; 0xc9a2 <PORTE_set_pin_level+0x6>
    c9a2:	cd b7       	in	r28, 0x3d	; 61
    c9a4:	de b7       	in	r29, 0x3e	; 62
    c9a6:	89 83       	std	Y+1, r24	; 0x01
    c9a8:	6a 83       	std	Y+2, r22	; 0x02
    c9aa:	8a 81       	ldd	r24, Y+2	; 0x02
    c9ac:	88 23       	and	r24, r24
    c9ae:	a9 f0       	breq	.+42     	; 0xc9da <PORTE_set_pin_level+0x3e>
    c9b0:	80 e1       	ldi	r24, 0x10	; 16
    c9b2:	90 e0       	ldi	r25, 0x00	; 0
    c9b4:	20 e1       	ldi	r18, 0x10	; 16
    c9b6:	30 e0       	ldi	r19, 0x00	; 0
    c9b8:	f9 01       	movw	r30, r18
    c9ba:	21 81       	ldd	r18, Z+1	; 0x01
    c9bc:	62 2f       	mov	r22, r18
    c9be:	29 81       	ldd	r18, Y+1	; 0x01
    c9c0:	42 2f       	mov	r20, r18
    c9c2:	50 e0       	ldi	r21, 0x00	; 0
    c9c4:	21 e0       	ldi	r18, 0x01	; 1
    c9c6:	30 e0       	ldi	r19, 0x00	; 0
    c9c8:	02 c0       	rjmp	.+4      	; 0xc9ce <PORTE_set_pin_level+0x32>
    c9ca:	22 0f       	add	r18, r18
    c9cc:	33 1f       	adc	r19, r19
    c9ce:	4a 95       	dec	r20
    c9d0:	e2 f7       	brpl	.-8      	; 0xc9ca <PORTE_set_pin_level+0x2e>
    c9d2:	26 2b       	or	r18, r22
    c9d4:	fc 01       	movw	r30, r24
    c9d6:	21 83       	std	Z+1, r18	; 0x01
    c9d8:	15 c0       	rjmp	.+42     	; 0xca04 <PORTE_set_pin_level+0x68>
    c9da:	80 e1       	ldi	r24, 0x10	; 16
    c9dc:	90 e0       	ldi	r25, 0x00	; 0
    c9de:	20 e1       	ldi	r18, 0x10	; 16
    c9e0:	30 e0       	ldi	r19, 0x00	; 0
    c9e2:	f9 01       	movw	r30, r18
    c9e4:	21 81       	ldd	r18, Z+1	; 0x01
    c9e6:	62 2f       	mov	r22, r18
    c9e8:	29 81       	ldd	r18, Y+1	; 0x01
    c9ea:	42 2f       	mov	r20, r18
    c9ec:	50 e0       	ldi	r21, 0x00	; 0
    c9ee:	21 e0       	ldi	r18, 0x01	; 1
    c9f0:	30 e0       	ldi	r19, 0x00	; 0
    c9f2:	02 c0       	rjmp	.+4      	; 0xc9f8 <PORTE_set_pin_level+0x5c>
    c9f4:	22 0f       	add	r18, r18
    c9f6:	33 1f       	adc	r19, r19
    c9f8:	4a 95       	dec	r20
    c9fa:	e2 f7       	brpl	.-8      	; 0xc9f4 <PORTE_set_pin_level+0x58>
    c9fc:	20 95       	com	r18
    c9fe:	26 23       	and	r18, r22
    ca00:	fc 01       	movw	r30, r24
    ca02:	21 83       	std	Z+1, r18	; 0x01
    ca04:	00 00       	nop
    ca06:	0f 90       	pop	r0
    ca08:	0f 90       	pop	r0
    ca0a:	df 91       	pop	r29
    ca0c:	cf 91       	pop	r28
    ca0e:	08 95       	ret

0000ca10 <PC0_set_dir>:
    ca10:	cf 93       	push	r28
    ca12:	df 93       	push	r29
    ca14:	1f 92       	push	r1
    ca16:	cd b7       	in	r28, 0x3d	; 61
    ca18:	de b7       	in	r29, 0x3e	; 62
    ca1a:	89 83       	std	Y+1, r24	; 0x01
    ca1c:	69 81       	ldd	r22, Y+1	; 0x01
    ca1e:	80 e0       	ldi	r24, 0x00	; 0
    ca20:	0e 94 bb 63 	call	0xc776	; 0xc776 <PORTC_set_pin_dir>
    ca24:	00 00       	nop
    ca26:	0f 90       	pop	r0
    ca28:	df 91       	pop	r29
    ca2a:	cf 91       	pop	r28
    ca2c:	08 95       	ret

0000ca2e <PC0_set_level>:
    ca2e:	cf 93       	push	r28
    ca30:	df 93       	push	r29
    ca32:	1f 92       	push	r1
    ca34:	cd b7       	in	r28, 0x3d	; 61
    ca36:	de b7       	in	r29, 0x3e	; 62
    ca38:	89 83       	std	Y+1, r24	; 0x01
    ca3a:	69 81       	ldd	r22, Y+1	; 0x01
    ca3c:	80 e0       	ldi	r24, 0x00	; 0
    ca3e:	0e 94 0f 64 	call	0xc81e	; 0xc81e <PORTC_set_pin_level>
    ca42:	00 00       	nop
    ca44:	0f 90       	pop	r0
    ca46:	df 91       	pop	r29
    ca48:	cf 91       	pop	r28
    ca4a:	08 95       	ret

0000ca4c <PC1_set_pull_mode>:
    ca4c:	cf 93       	push	r28
    ca4e:	df 93       	push	r29
    ca50:	1f 92       	push	r1
    ca52:	cd b7       	in	r28, 0x3d	; 61
    ca54:	de b7       	in	r29, 0x3e	; 62
    ca56:	89 83       	std	Y+1, r24	; 0x01
    ca58:	69 81       	ldd	r22, Y+1	; 0x01
    ca5a:	81 e0       	ldi	r24, 0x01	; 1
    ca5c:	0e 94 8a 63 	call	0xc714	; 0xc714 <PORTC_set_pin_pull_mode>
    ca60:	00 00       	nop
    ca62:	0f 90       	pop	r0
    ca64:	df 91       	pop	r29
    ca66:	cf 91       	pop	r28
    ca68:	08 95       	ret

0000ca6a <PC1_set_dir>:
    ca6a:	cf 93       	push	r28
    ca6c:	df 93       	push	r29
    ca6e:	1f 92       	push	r1
    ca70:	cd b7       	in	r28, 0x3d	; 61
    ca72:	de b7       	in	r29, 0x3e	; 62
    ca74:	89 83       	std	Y+1, r24	; 0x01
    ca76:	69 81       	ldd	r22, Y+1	; 0x01
    ca78:	81 e0       	ldi	r24, 0x01	; 1
    ca7a:	0e 94 bb 63 	call	0xc776	; 0xc776 <PORTC_set_pin_dir>
    ca7e:	00 00       	nop
    ca80:	0f 90       	pop	r0
    ca82:	df 91       	pop	r29
    ca84:	cf 91       	pop	r28
    ca86:	08 95       	ret

0000ca88 <PE0_set_dir>:
    ca88:	cf 93       	push	r28
    ca8a:	df 93       	push	r29
    ca8c:	1f 92       	push	r1
    ca8e:	cd b7       	in	r28, 0x3d	; 61
    ca90:	de b7       	in	r29, 0x3e	; 62
    ca92:	89 83       	std	Y+1, r24	; 0x01
    ca94:	69 81       	ldd	r22, Y+1	; 0x01
    ca96:	80 e0       	ldi	r24, 0x00	; 0
    ca98:	0e 94 7a 64 	call	0xc8f4	; 0xc8f4 <PORTE_set_pin_dir>
    ca9c:	00 00       	nop
    ca9e:	0f 90       	pop	r0
    caa0:	df 91       	pop	r29
    caa2:	cf 91       	pop	r28
    caa4:	08 95       	ret

0000caa6 <PE0_set_level>:
    caa6:	cf 93       	push	r28
    caa8:	df 93       	push	r29
    caaa:	1f 92       	push	r1
    caac:	cd b7       	in	r28, 0x3d	; 61
    caae:	de b7       	in	r29, 0x3e	; 62
    cab0:	89 83       	std	Y+1, r24	; 0x01
    cab2:	69 81       	ldd	r22, Y+1	; 0x01
    cab4:	80 e0       	ldi	r24, 0x00	; 0
    cab6:	0e 94 ce 64 	call	0xc99c	; 0xc99c <PORTE_set_pin_level>
    caba:	00 00       	nop
    cabc:	0f 90       	pop	r0
    cabe:	df 91       	pop	r29
    cac0:	cf 91       	pop	r28
    cac2:	08 95       	ret

0000cac4 <PE1_set_pull_mode>:
    cac4:	cf 93       	push	r28
    cac6:	df 93       	push	r29
    cac8:	1f 92       	push	r1
    caca:	cd b7       	in	r28, 0x3d	; 61
    cacc:	de b7       	in	r29, 0x3e	; 62
    cace:	89 83       	std	Y+1, r24	; 0x01
    cad0:	69 81       	ldd	r22, Y+1	; 0x01
    cad2:	81 e0       	ldi	r24, 0x01	; 1
    cad4:	0e 94 49 64 	call	0xc892	; 0xc892 <PORTE_set_pin_pull_mode>
    cad8:	00 00       	nop
    cada:	0f 90       	pop	r0
    cadc:	df 91       	pop	r29
    cade:	cf 91       	pop	r28
    cae0:	08 95       	ret

0000cae2 <PE1_set_dir>:
    cae2:	cf 93       	push	r28
    cae4:	df 93       	push	r29
    cae6:	1f 92       	push	r1
    cae8:	cd b7       	in	r28, 0x3d	; 61
    caea:	de b7       	in	r29, 0x3e	; 62
    caec:	89 83       	std	Y+1, r24	; 0x01
    caee:	69 81       	ldd	r22, Y+1	; 0x01
    caf0:	81 e0       	ldi	r24, 0x01	; 1
    caf2:	0e 94 7a 64 	call	0xc8f4	; 0xc8f4 <PORTE_set_pin_dir>
    caf6:	00 00       	nop
    caf8:	0f 90       	pop	r0
    cafa:	df 91       	pop	r29
    cafc:	cf 91       	pop	r28
    cafe:	08 95       	ret

0000cb00 <nextFullSBTxBuffer>:
    cb00:	cf 93       	push	r28
    cb02:	df 93       	push	r29
    cb04:	00 d0       	rcall	.+0      	; 0xcb06 <nextFullSBTxBuffer+0x6>
    cb06:	cd b7       	in	r28, 0x3d	; 61
    cb08:	de b7       	in	r29, 0x3e	; 62
    cb0a:	81 e0       	ldi	r24, 0x01	; 1
    cb0c:	89 83       	std	Y+1, r24	; 0x01
    cb0e:	1a 82       	std	Y+2, r1	; 0x02
    cb10:	80 91 bf 49 	lds	r24, 0x49BF	; 0x8049bf <_ZZ18nextFullSBTxBufferE11bufferIndex>
    cb14:	28 2f       	mov	r18, r24
    cb16:	30 e0       	ldi	r19, 0x00	; 0
    cb18:	49 e2       	ldi	r20, 0x29	; 41
    cb1a:	42 9f       	mul	r20, r18
    cb1c:	c0 01       	movw	r24, r0
    cb1e:	43 9f       	mul	r20, r19
    cb20:	90 0d       	add	r25, r0
    cb22:	11 24       	eor	r1, r1
    cb24:	8a 53       	subi	r24, 0x3A	; 58
    cb26:	97 4b       	sbci	r25, 0xB7	; 183
    cb28:	fc 01       	movw	r30, r24
    cb2a:	90 81       	ld	r25, Z
    cb2c:	81 e0       	ldi	r24, 0x01	; 1
    cb2e:	99 23       	and	r25, r25
    cb30:	09 f0       	breq	.+2      	; 0xcb34 <nextFullSBTxBuffer+0x34>
    cb32:	80 e0       	ldi	r24, 0x00	; 0
    cb34:	88 23       	and	r24, r24
    cb36:	c1 f0       	breq	.+48     	; 0xcb68 <nextFullSBTxBuffer+0x68>
    cb38:	8a 81       	ldd	r24, Y+2	; 0x02
    cb3a:	8f 5f       	subi	r24, 0xFF	; 255
    cb3c:	8a 83       	std	Y+2, r24	; 0x02
    cb3e:	81 e0       	ldi	r24, 0x01	; 1
    cb40:	9a 81       	ldd	r25, Y+2	; 0x02
    cb42:	93 30       	cpi	r25, 0x03	; 3
    cb44:	08 f4       	brcc	.+2      	; 0xcb48 <nextFullSBTxBuffer+0x48>
    cb46:	80 e0       	ldi	r24, 0x00	; 0
    cb48:	88 23       	and	r24, r24
    cb4a:	11 f0       	breq	.+4      	; 0xcb50 <nextFullSBTxBuffer+0x50>
    cb4c:	19 82       	std	Y+1, r1	; 0x01
    cb4e:	0c c0       	rjmp	.+24     	; 0xcb68 <nextFullSBTxBuffer+0x68>
    cb50:	80 91 bf 49 	lds	r24, 0x49BF	; 0x8049bf <_ZZ18nextFullSBTxBufferE11bufferIndex>
    cb54:	8f 5f       	subi	r24, 0xFF	; 255
    cb56:	80 93 bf 49 	sts	0x49BF, r24	; 0x8049bf <_ZZ18nextFullSBTxBufferE11bufferIndex>
    cb5a:	80 91 bf 49 	lds	r24, 0x49BF	; 0x8049bf <_ZZ18nextFullSBTxBufferE11bufferIndex>
    cb5e:	83 30       	cpi	r24, 0x03	; 3
    cb60:	b8 f2       	brcs	.-82     	; 0xcb10 <nextFullSBTxBuffer+0x10>
    cb62:	10 92 bf 49 	sts	0x49BF, r1	; 0x8049bf <_ZZ18nextFullSBTxBufferE11bufferIndex>
    cb66:	d4 cf       	rjmp	.-88     	; 0xcb10 <nextFullSBTxBuffer+0x10>
    cb68:	89 81       	ldd	r24, Y+1	; 0x01
    cb6a:	88 23       	and	r24, r24
    cb6c:	69 f0       	breq	.+26     	; 0xcb88 <nextFullSBTxBuffer+0x88>
    cb6e:	80 91 bf 49 	lds	r24, 0x49BF	; 0x8049bf <_ZZ18nextFullSBTxBufferE11bufferIndex>
    cb72:	28 2f       	mov	r18, r24
    cb74:	30 e0       	ldi	r19, 0x00	; 0
    cb76:	49 e2       	ldi	r20, 0x29	; 41
    cb78:	42 9f       	mul	r20, r18
    cb7a:	c0 01       	movw	r24, r0
    cb7c:	43 9f       	mul	r20, r19
    cb7e:	90 0d       	add	r25, r0
    cb80:	11 24       	eor	r1, r1
    cb82:	8a 53       	subi	r24, 0x3A	; 58
    cb84:	97 4b       	sbci	r25, 0xB7	; 183
    cb86:	02 c0       	rjmp	.+4      	; 0xcb8c <nextFullSBTxBuffer+0x8c>
    cb88:	80 e0       	ldi	r24, 0x00	; 0
    cb8a:	90 e0       	ldi	r25, 0x00	; 0
    cb8c:	0f 90       	pop	r0
    cb8e:	0f 90       	pop	r0
    cb90:	df 91       	pop	r29
    cb92:	cf 91       	pop	r28
    cb94:	08 95       	ret

0000cb96 <nextEmptySBTxBuffer>:
    cb96:	cf 93       	push	r28
    cb98:	df 93       	push	r29
    cb9a:	00 d0       	rcall	.+0      	; 0xcb9c <nextEmptySBTxBuffer+0x6>
    cb9c:	cd b7       	in	r28, 0x3d	; 61
    cb9e:	de b7       	in	r29, 0x3e	; 62
    cba0:	81 e0       	ldi	r24, 0x01	; 1
    cba2:	89 83       	std	Y+1, r24	; 0x01
    cba4:	1a 82       	std	Y+2, r1	; 0x02
    cba6:	80 91 c0 49 	lds	r24, 0x49C0	; 0x8049c0 <_ZZ19nextEmptySBTxBufferE11bufferIndex>
    cbaa:	28 2f       	mov	r18, r24
    cbac:	30 e0       	ldi	r19, 0x00	; 0
    cbae:	49 e2       	ldi	r20, 0x29	; 41
    cbb0:	42 9f       	mul	r20, r18
    cbb2:	c0 01       	movw	r24, r0
    cbb4:	43 9f       	mul	r20, r19
    cbb6:	90 0d       	add	r25, r0
    cbb8:	11 24       	eor	r1, r1
    cbba:	8a 53       	subi	r24, 0x3A	; 58
    cbbc:	97 4b       	sbci	r25, 0xB7	; 183
    cbbe:	fc 01       	movw	r30, r24
    cbc0:	90 81       	ld	r25, Z
    cbc2:	81 e0       	ldi	r24, 0x01	; 1
    cbc4:	99 23       	and	r25, r25
    cbc6:	09 f4       	brne	.+2      	; 0xcbca <nextEmptySBTxBuffer+0x34>
    cbc8:	80 e0       	ldi	r24, 0x00	; 0
    cbca:	88 23       	and	r24, r24
    cbcc:	c1 f0       	breq	.+48     	; 0xcbfe <nextEmptySBTxBuffer+0x68>
    cbce:	8a 81       	ldd	r24, Y+2	; 0x02
    cbd0:	8f 5f       	subi	r24, 0xFF	; 255
    cbd2:	8a 83       	std	Y+2, r24	; 0x02
    cbd4:	81 e0       	ldi	r24, 0x01	; 1
    cbd6:	9a 81       	ldd	r25, Y+2	; 0x02
    cbd8:	93 30       	cpi	r25, 0x03	; 3
    cbda:	08 f4       	brcc	.+2      	; 0xcbde <nextEmptySBTxBuffer+0x48>
    cbdc:	80 e0       	ldi	r24, 0x00	; 0
    cbde:	88 23       	and	r24, r24
    cbe0:	11 f0       	breq	.+4      	; 0xcbe6 <nextEmptySBTxBuffer+0x50>
    cbe2:	19 82       	std	Y+1, r1	; 0x01
    cbe4:	0c c0       	rjmp	.+24     	; 0xcbfe <nextEmptySBTxBuffer+0x68>
    cbe6:	80 91 c0 49 	lds	r24, 0x49C0	; 0x8049c0 <_ZZ19nextEmptySBTxBufferE11bufferIndex>
    cbea:	8f 5f       	subi	r24, 0xFF	; 255
    cbec:	80 93 c0 49 	sts	0x49C0, r24	; 0x8049c0 <_ZZ19nextEmptySBTxBufferE11bufferIndex>
    cbf0:	80 91 c0 49 	lds	r24, 0x49C0	; 0x8049c0 <_ZZ19nextEmptySBTxBufferE11bufferIndex>
    cbf4:	83 30       	cpi	r24, 0x03	; 3
    cbf6:	b8 f2       	brcs	.-82     	; 0xcba6 <nextEmptySBTxBuffer+0x10>
    cbf8:	10 92 c0 49 	sts	0x49C0, r1	; 0x8049c0 <_ZZ19nextEmptySBTxBufferE11bufferIndex>
    cbfc:	d4 cf       	rjmp	.-88     	; 0xcba6 <nextEmptySBTxBuffer+0x10>
    cbfe:	89 81       	ldd	r24, Y+1	; 0x01
    cc00:	88 23       	and	r24, r24
    cc02:	69 f0       	breq	.+26     	; 0xcc1e <nextEmptySBTxBuffer+0x88>
    cc04:	80 91 c0 49 	lds	r24, 0x49C0	; 0x8049c0 <_ZZ19nextEmptySBTxBufferE11bufferIndex>
    cc08:	28 2f       	mov	r18, r24
    cc0a:	30 e0       	ldi	r19, 0x00	; 0
    cc0c:	49 e2       	ldi	r20, 0x29	; 41
    cc0e:	42 9f       	mul	r20, r18
    cc10:	c0 01       	movw	r24, r0
    cc12:	43 9f       	mul	r20, r19
    cc14:	90 0d       	add	r25, r0
    cc16:	11 24       	eor	r1, r1
    cc18:	8a 53       	subi	r24, 0x3A	; 58
    cc1a:	97 4b       	sbci	r25, 0xB7	; 183
    cc1c:	02 c0       	rjmp	.+4      	; 0xcc22 <nextEmptySBTxBuffer+0x8c>
    cc1e:	80 e0       	ldi	r24, 0x00	; 0
    cc20:	90 e0       	ldi	r25, 0x00	; 0
    cc22:	0f 90       	pop	r0
    cc24:	0f 90       	pop	r0
    cc26:	df 91       	pop	r29
    cc28:	cf 91       	pop	r28
    cc2a:	08 95       	ret

0000cc2c <nextEmptySBRxBuffer>:
    cc2c:	cf 93       	push	r28
    cc2e:	df 93       	push	r29
    cc30:	00 d0       	rcall	.+0      	; 0xcc32 <nextEmptySBRxBuffer+0x6>
    cc32:	cd b7       	in	r28, 0x3d	; 61
    cc34:	de b7       	in	r29, 0x3e	; 62
    cc36:	81 e0       	ldi	r24, 0x01	; 1
    cc38:	89 83       	std	Y+1, r24	; 0x01
    cc3a:	1a 82       	std	Y+2, r1	; 0x02
    cc3c:	80 91 c1 49 	lds	r24, 0x49C1	; 0x8049c1 <_ZZ19nextEmptySBRxBufferE11bufferIndex>
    cc40:	28 2f       	mov	r18, r24
    cc42:	30 e0       	ldi	r19, 0x00	; 0
    cc44:	4f e3       	ldi	r20, 0x3F	; 63
    cc46:	42 9f       	mul	r20, r18
    cc48:	c0 01       	movw	r24, r0
    cc4a:	43 9f       	mul	r20, r19
    cc4c:	90 0d       	add	r25, r0
    cc4e:	11 24       	eor	r1, r1
    cc50:	8e 5b       	subi	r24, 0xBE	; 190
    cc52:	96 4b       	sbci	r25, 0xB6	; 182
    cc54:	fc 01       	movw	r30, r24
    cc56:	80 81       	ld	r24, Z
    cc58:	91 81       	ldd	r25, Z+1	; 0x01
    cc5a:	21 e0       	ldi	r18, 0x01	; 1
    cc5c:	89 2b       	or	r24, r25
    cc5e:	09 f4       	brne	.+2      	; 0xcc62 <nextEmptySBRxBuffer+0x36>
    cc60:	20 e0       	ldi	r18, 0x00	; 0
    cc62:	22 23       	and	r18, r18
    cc64:	c1 f0       	breq	.+48     	; 0xcc96 <nextEmptySBRxBuffer+0x6a>
    cc66:	8a 81       	ldd	r24, Y+2	; 0x02
    cc68:	8f 5f       	subi	r24, 0xFF	; 255
    cc6a:	8a 83       	std	Y+2, r24	; 0x02
    cc6c:	81 e0       	ldi	r24, 0x01	; 1
    cc6e:	9a 81       	ldd	r25, Y+2	; 0x02
    cc70:	92 30       	cpi	r25, 0x02	; 2
    cc72:	08 f4       	brcc	.+2      	; 0xcc76 <nextEmptySBRxBuffer+0x4a>
    cc74:	80 e0       	ldi	r24, 0x00	; 0
    cc76:	88 23       	and	r24, r24
    cc78:	11 f0       	breq	.+4      	; 0xcc7e <nextEmptySBRxBuffer+0x52>
    cc7a:	19 82       	std	Y+1, r1	; 0x01
    cc7c:	0c c0       	rjmp	.+24     	; 0xcc96 <nextEmptySBRxBuffer+0x6a>
    cc7e:	80 91 c1 49 	lds	r24, 0x49C1	; 0x8049c1 <_ZZ19nextEmptySBRxBufferE11bufferIndex>
    cc82:	8f 5f       	subi	r24, 0xFF	; 255
    cc84:	80 93 c1 49 	sts	0x49C1, r24	; 0x8049c1 <_ZZ19nextEmptySBRxBufferE11bufferIndex>
    cc88:	80 91 c1 49 	lds	r24, 0x49C1	; 0x8049c1 <_ZZ19nextEmptySBRxBufferE11bufferIndex>
    cc8c:	82 30       	cpi	r24, 0x02	; 2
    cc8e:	b0 f2       	brcs	.-84     	; 0xcc3c <nextEmptySBRxBuffer+0x10>
    cc90:	10 92 c1 49 	sts	0x49C1, r1	; 0x8049c1 <_ZZ19nextEmptySBRxBufferE11bufferIndex>
    cc94:	d3 cf       	rjmp	.-90     	; 0xcc3c <nextEmptySBRxBuffer+0x10>
    cc96:	89 81       	ldd	r24, Y+1	; 0x01
    cc98:	88 23       	and	r24, r24
    cc9a:	69 f0       	breq	.+26     	; 0xccb6 <nextEmptySBRxBuffer+0x8a>
    cc9c:	80 91 c1 49 	lds	r24, 0x49C1	; 0x8049c1 <_ZZ19nextEmptySBRxBufferE11bufferIndex>
    cca0:	28 2f       	mov	r18, r24
    cca2:	30 e0       	ldi	r19, 0x00	; 0
    cca4:	4f e3       	ldi	r20, 0x3F	; 63
    cca6:	42 9f       	mul	r20, r18
    cca8:	c0 01       	movw	r24, r0
    ccaa:	43 9f       	mul	r20, r19
    ccac:	90 0d       	add	r25, r0
    ccae:	11 24       	eor	r1, r1
    ccb0:	8f 5b       	subi	r24, 0xBF	; 191
    ccb2:	96 4b       	sbci	r25, 0xB6	; 182
    ccb4:	02 c0       	rjmp	.+4      	; 0xccba <nextEmptySBRxBuffer+0x8e>
    ccb6:	80 e0       	ldi	r24, 0x00	; 0
    ccb8:	90 e0       	ldi	r25, 0x00	; 0
    ccba:	0f 90       	pop	r0
    ccbc:	0f 90       	pop	r0
    ccbe:	df 91       	pop	r29
    ccc0:	cf 91       	pop	r28
    ccc2:	08 95       	ret

0000ccc4 <serialbusTxInProgress>:
    ccc4:	cf 93       	push	r28
    ccc6:	df 93       	push	r29
    ccc8:	cd b7       	in	r28, 0x3d	; 61
    ccca:	de b7       	in	r29, 0x3e	; 62
    cccc:	80 91 c5 48 	lds	r24, 0x48C5	; 0x8048c5 <_ZL19serialbus_tx_active>
    ccd0:	df 91       	pop	r29
    ccd2:	cf 91       	pop	r28
    ccd4:	08 95       	ret

0000ccd6 <_Z18serialbus_start_txv>:
    ccd6:	cf 93       	push	r28
    ccd8:	df 93       	push	r29
    ccda:	1f 92       	push	r1
    ccdc:	cd b7       	in	r28, 0x3d	; 61
    ccde:	de b7       	in	r29, 0x3e	; 62
    cce0:	90 91 c5 48 	lds	r25, 0x48C5	; 0x8048c5 <_ZL19serialbus_tx_active>
    cce4:	81 e0       	ldi	r24, 0x01	; 1
    cce6:	89 27       	eor	r24, r25
    cce8:	89 83       	std	Y+1, r24	; 0x01
    ccea:	89 81       	ldd	r24, Y+1	; 0x01
    ccec:	88 23       	and	r24, r24
    ccee:	61 f0       	breq	.+24     	; 0xcd08 <_Z18serialbus_start_txv+0x32>
    ccf0:	81 e0       	ldi	r24, 0x01	; 1
    ccf2:	80 93 c5 48 	sts	0x48C5, r24	; 0x8048c5 <_ZL19serialbus_tx_active>
    ccf6:	80 91 54 40 	lds	r24, 0x4054	; 0x804054 <g_serialbus_usart_number>
    ccfa:	88 23       	and	r24, r24
    ccfc:	19 f4       	brne	.+6      	; 0xcd04 <_Z18serialbus_start_txv+0x2e>
    ccfe:	0e 94 39 7a 	call	0xf472	; 0xf472 <USART4_enable_tx>
    cd02:	02 c0       	rjmp	.+4      	; 0xcd08 <_Z18serialbus_start_txv+0x32>
    cd04:	0e 94 97 79 	call	0xf32e	; 0xf32e <USART1_enable_tx>
    cd08:	89 81       	ldd	r24, Y+1	; 0x01
    cd0a:	0f 90       	pop	r0
    cd0c:	df 91       	pop	r29
    cd0e:	cf 91       	pop	r28
    cd10:	08 95       	ret

0000cd12 <serialbus_end_tx>:
    cd12:	cf 93       	push	r28
    cd14:	df 93       	push	r29
    cd16:	cd b7       	in	r28, 0x3d	; 61
    cd18:	de b7       	in	r29, 0x3e	; 62
    cd1a:	80 91 c5 48 	lds	r24, 0x48C5	; 0x8048c5 <_ZL19serialbus_tx_active>
    cd1e:	88 23       	and	r24, r24
    cd20:	c9 f0       	breq	.+50     	; 0xcd54 <serialbus_end_tx+0x42>
    cd22:	80 91 54 40 	lds	r24, 0x4054	; 0x804054 <g_serialbus_usart_number>
    cd26:	84 30       	cpi	r24, 0x04	; 4
    cd28:	51 f4       	brne	.+20     	; 0xcd3e <serialbus_end_tx+0x2c>
    cd2a:	80 e8       	ldi	r24, 0x80	; 128
    cd2c:	98 e0       	ldi	r25, 0x08	; 8
    cd2e:	20 e8       	ldi	r18, 0x80	; 128
    cd30:	38 e0       	ldi	r19, 0x08	; 8
    cd32:	f9 01       	movw	r30, r18
    cd34:	25 81       	ldd	r18, Z+5	; 0x05
    cd36:	2f 7d       	andi	r18, 0xDF	; 223
    cd38:	fc 01       	movw	r30, r24
    cd3a:	25 83       	std	Z+5, r18	; 0x05
    cd3c:	09 c0       	rjmp	.+18     	; 0xcd50 <serialbus_end_tx+0x3e>
    cd3e:	80 e2       	ldi	r24, 0x20	; 32
    cd40:	98 e0       	ldi	r25, 0x08	; 8
    cd42:	20 e2       	ldi	r18, 0x20	; 32
    cd44:	38 e0       	ldi	r19, 0x08	; 8
    cd46:	f9 01       	movw	r30, r18
    cd48:	25 81       	ldd	r18, Z+5	; 0x05
    cd4a:	2f 7d       	andi	r18, 0xDF	; 223
    cd4c:	fc 01       	movw	r30, r24
    cd4e:	25 83       	std	Z+5, r18	; 0x05
    cd50:	10 92 c5 48 	sts	0x48C5, r1	; 0x8048c5 <_ZL19serialbus_tx_active>
    cd54:	00 00       	nop
    cd56:	df 91       	pop	r29
    cd58:	cf 91       	pop	r28
    cd5a:	08 95       	ret

0000cd5c <_ZL21USART1_initializationm>:
    cd5c:	cf 93       	push	r28
    cd5e:	df 93       	push	r29
    cd60:	00 d0       	rcall	.+0      	; 0xcd62 <_ZL21USART1_initializationm+0x6>
    cd62:	00 d0       	rcall	.+0      	; 0xcd64 <_ZL21USART1_initializationm+0x8>
    cd64:	cd b7       	in	r28, 0x3d	; 61
    cd66:	de b7       	in	r29, 0x3e	; 62
    cd68:	69 83       	std	Y+1, r22	; 0x01
    cd6a:	7a 83       	std	Y+2, r23	; 0x02
    cd6c:	8b 83       	std	Y+3, r24	; 0x03
    cd6e:	9c 83       	std	Y+4, r25	; 0x04
    cd70:	80 e0       	ldi	r24, 0x00	; 0
    cd72:	0e 94 35 65 	call	0xca6a	; 0xca6a <PC1_set_dir>
    cd76:	80 e0       	ldi	r24, 0x00	; 0
    cd78:	0e 94 26 65 	call	0xca4c	; 0xca4c <PC1_set_pull_mode>
    cd7c:	81 e0       	ldi	r24, 0x01	; 1
    cd7e:	0e 94 08 65 	call	0xca10	; 0xca10 <PC0_set_dir>
    cd82:	81 e0       	ldi	r24, 0x01	; 1
    cd84:	0e 94 17 65 	call	0xca2e	; 0xca2e <PC0_set_level>
    cd88:	89 81       	ldd	r24, Y+1	; 0x01
    cd8a:	9a 81       	ldd	r25, Y+2	; 0x02
    cd8c:	ab 81       	ldd	r26, Y+3	; 0x03
    cd8e:	bc 81       	ldd	r27, Y+4	; 0x04
    cd90:	40 e0       	ldi	r20, 0x00	; 0
    cd92:	bc 01       	movw	r22, r24
    cd94:	cd 01       	movw	r24, r26
    cd96:	0e 94 24 79 	call	0xf248	; 0xf248 <USART1_init>
    cd9a:	00 00       	nop
    cd9c:	24 96       	adiw	r28, 0x04	; 4
    cd9e:	cd bf       	out	0x3d, r28	; 61
    cda0:	de bf       	out	0x3e, r29	; 62
    cda2:	df 91       	pop	r29
    cda4:	cf 91       	pop	r28
    cda6:	08 95       	ret

0000cda8 <_ZL21USART4_initializationm>:
    cda8:	cf 93       	push	r28
    cdaa:	df 93       	push	r29
    cdac:	00 d0       	rcall	.+0      	; 0xcdae <_ZL21USART4_initializationm+0x6>
    cdae:	00 d0       	rcall	.+0      	; 0xcdb0 <_ZL21USART4_initializationm+0x8>
    cdb0:	cd b7       	in	r28, 0x3d	; 61
    cdb2:	de b7       	in	r29, 0x3e	; 62
    cdb4:	69 83       	std	Y+1, r22	; 0x01
    cdb6:	7a 83       	std	Y+2, r23	; 0x02
    cdb8:	8b 83       	std	Y+3, r24	; 0x03
    cdba:	9c 83       	std	Y+4, r25	; 0x04
    cdbc:	80 e0       	ldi	r24, 0x00	; 0
    cdbe:	0e 94 71 65 	call	0xcae2	; 0xcae2 <PE1_set_dir>
    cdc2:	80 e0       	ldi	r24, 0x00	; 0
    cdc4:	0e 94 62 65 	call	0xcac4	; 0xcac4 <PE1_set_pull_mode>
    cdc8:	81 e0       	ldi	r24, 0x01	; 1
    cdca:	0e 94 44 65 	call	0xca88	; 0xca88 <PE0_set_dir>
    cdce:	81 e0       	ldi	r24, 0x01	; 1
    cdd0:	0e 94 53 65 	call	0xcaa6	; 0xcaa6 <PE0_set_level>
    cdd4:	89 81       	ldd	r24, Y+1	; 0x01
    cdd6:	9a 81       	ldd	r25, Y+2	; 0x02
    cdd8:	ab 81       	ldd	r26, Y+3	; 0x03
    cdda:	bc 81       	ldd	r27, Y+4	; 0x04
    cddc:	40 e0       	ldi	r20, 0x00	; 0
    cdde:	bc 01       	movw	r22, r24
    cde0:	cd 01       	movw	r24, r26
    cde2:	0e 94 cd 79 	call	0xf39a	; 0xf39a <USART4_init>
    cde6:	00 00       	nop
    cde8:	24 96       	adiw	r28, 0x04	; 4
    cdea:	cd bf       	out	0x3d, r28	; 61
    cdec:	de bf       	out	0x3e, r29	; 62
    cdee:	df 91       	pop	r29
    cdf0:	cf 91       	pop	r28
    cdf2:	08 95       	ret

0000cdf4 <serialbus_init>:
    cdf4:	cf 93       	push	r28
    cdf6:	df 93       	push	r29
    cdf8:	cd b7       	in	r28, 0x3d	; 61
    cdfa:	de b7       	in	r29, 0x3e	; 62
    cdfc:	27 97       	sbiw	r28, 0x07	; 7
    cdfe:	cd bf       	out	0x3d, r28	; 61
    ce00:	de bf       	out	0x3e, r29	; 62
    ce02:	6b 83       	std	Y+3, r22	; 0x03
    ce04:	7c 83       	std	Y+4, r23	; 0x04
    ce06:	8d 83       	std	Y+5, r24	; 0x05
    ce08:	9e 83       	std	Y+6, r25	; 0x06
    ce0a:	4f 83       	std	Y+7, r20	; 0x07
    ce0c:	4f e3       	ldi	r20, 0x3F	; 63
    ce0e:	50 e0       	ldi	r21, 0x00	; 0
    ce10:	60 e0       	ldi	r22, 0x00	; 0
    ce12:	70 e0       	ldi	r23, 0x00	; 0
    ce14:	81 e4       	ldi	r24, 0x41	; 65
    ce16:	99 e4       	ldi	r25, 0x49	; 73
    ce18:	0e 94 39 7f 	call	0xfe72	; 0xfe72 <memset>
    ce1c:	0e 94 89 66 	call	0xcd12	; 0xcd12 <serialbus_end_tx>
    ce20:	19 82       	std	Y+1, r1	; 0x01
    ce22:	1a 82       	std	Y+2, r1	; 0x02
    ce24:	89 81       	ldd	r24, Y+1	; 0x01
    ce26:	9a 81       	ldd	r25, Y+2	; 0x02
    ce28:	03 97       	sbiw	r24, 0x03	; 3
    ce2a:	94 f4       	brge	.+36     	; 0xce50 <serialbus_init+0x5c>
    ce2c:	29 81       	ldd	r18, Y+1	; 0x01
    ce2e:	3a 81       	ldd	r19, Y+2	; 0x02
    ce30:	49 e2       	ldi	r20, 0x29	; 41
    ce32:	42 9f       	mul	r20, r18
    ce34:	c0 01       	movw	r24, r0
    ce36:	43 9f       	mul	r20, r19
    ce38:	90 0d       	add	r25, r0
    ce3a:	11 24       	eor	r1, r1
    ce3c:	8a 53       	subi	r24, 0x3A	; 58
    ce3e:	97 4b       	sbci	r25, 0xB7	; 183
    ce40:	fc 01       	movw	r30, r24
    ce42:	10 82       	st	Z, r1
    ce44:	89 81       	ldd	r24, Y+1	; 0x01
    ce46:	9a 81       	ldd	r25, Y+2	; 0x02
    ce48:	01 96       	adiw	r24, 0x01	; 1
    ce4a:	89 83       	std	Y+1, r24	; 0x01
    ce4c:	9a 83       	std	Y+2, r25	; 0x02
    ce4e:	ea cf       	rjmp	.-44     	; 0xce24 <serialbus_init+0x30>
    ce50:	8f 81       	ldd	r24, Y+7	; 0x07
    ce52:	86 30       	cpi	r24, 0x06	; 6
    ce54:	21 f4       	brne	.+8      	; 0xce5e <serialbus_init+0x6a>
    ce56:	80 91 54 40 	lds	r24, 0x4054	; 0x804054 <g_serialbus_usart_number>
    ce5a:	87 30       	cpi	r24, 0x07	; 7
    ce5c:	b9 f4       	brne	.+46     	; 0xce8c <serialbus_init+0x98>
    ce5e:	8f 81       	ldd	r24, Y+7	; 0x07
    ce60:	84 30       	cpi	r24, 0x04	; 4
    ce62:	49 f4       	brne	.+18     	; 0xce76 <serialbus_init+0x82>
    ce64:	8b 81       	ldd	r24, Y+3	; 0x03
    ce66:	9c 81       	ldd	r25, Y+4	; 0x04
    ce68:	ad 81       	ldd	r26, Y+5	; 0x05
    ce6a:	be 81       	ldd	r27, Y+6	; 0x06
    ce6c:	bc 01       	movw	r22, r24
    ce6e:	cd 01       	movw	r24, r26
    ce70:	0e 94 d4 66 	call	0xcda8	; 0xcda8 <_ZL21USART4_initializationm>
    ce74:	08 c0       	rjmp	.+16     	; 0xce86 <serialbus_init+0x92>
    ce76:	8b 81       	ldd	r24, Y+3	; 0x03
    ce78:	9c 81       	ldd	r25, Y+4	; 0x04
    ce7a:	ad 81       	ldd	r26, Y+5	; 0x05
    ce7c:	be 81       	ldd	r27, Y+6	; 0x06
    ce7e:	bc 01       	movw	r22, r24
    ce80:	cd 01       	movw	r24, r26
    ce82:	0e 94 ae 66 	call	0xcd5c	; 0xcd5c <_ZL21USART1_initializationm>
    ce86:	8f 81       	ldd	r24, Y+7	; 0x07
    ce88:	80 93 54 40 	sts	0x4054, r24	; 0x804054 <g_serialbus_usart_number>
    ce8c:	10 92 55 40 	sts	0x4055, r1	; 0x804055 <_ZL14g_bus_disabled>
    ce90:	00 00       	nop
    ce92:	27 96       	adiw	r28, 0x07	; 7
    ce94:	cd bf       	out	0x3d, r28	; 61
    ce96:	de bf       	out	0x3e, r29	; 62
    ce98:	df 91       	pop	r29
    ce9a:	cf 91       	pop	r28
    ce9c:	08 95       	ret

0000ce9e <_Z19serialbus_send_textPc>:
    ce9e:	cf 93       	push	r28
    cea0:	df 93       	push	r29
    cea2:	cd b7       	in	r28, 0x3d	; 61
    cea4:	de b7       	in	r29, 0x3e	; 62
    cea6:	29 97       	sbiw	r28, 0x09	; 9
    cea8:	cd bf       	out	0x3d, r28	; 61
    ceaa:	de bf       	out	0x3e, r29	; 62
    ceac:	88 87       	std	Y+8, r24	; 0x08
    ceae:	99 87       	std	Y+9, r25	; 0x09
    ceb0:	81 e0       	ldi	r24, 0x01	; 1
    ceb2:	89 83       	std	Y+1, r24	; 0x01
    ceb4:	80 91 55 40 	lds	r24, 0x4055	; 0x804055 <_ZL14g_bus_disabled>
    ceb8:	88 23       	and	r24, r24
    ceba:	11 f0       	breq	.+4      	; 0xcec0 <_Z19serialbus_send_textPc+0x22>
    cebc:	89 81       	ldd	r24, Y+1	; 0x01
    cebe:	51 c0       	rjmp	.+162    	; 0xcf62 <_Z19serialbus_send_textPc+0xc4>
    cec0:	88 85       	ldd	r24, Y+8	; 0x08
    cec2:	99 85       	ldd	r25, Y+9	; 0x09
    cec4:	89 2b       	or	r24, r25
    cec6:	09 f4       	brne	.+2      	; 0xceca <_Z19serialbus_send_textPc+0x2c>
    cec8:	4b c0       	rjmp	.+150    	; 0xcf60 <_Z19serialbus_send_textPc+0xc2>
    ceca:	0e 94 cb 65 	call	0xcb96	; 0xcb96 <nextEmptySBTxBuffer>
    cece:	8c 83       	std	Y+4, r24	; 0x04
    ced0:	9d 83       	std	Y+5, r25	; 0x05
    ced2:	88 ec       	ldi	r24, 0xC8	; 200
    ced4:	90 e0       	ldi	r25, 0x00	; 0
    ced6:	8a 83       	std	Y+2, r24	; 0x02
    ced8:	9b 83       	std	Y+3, r25	; 0x03
    ceda:	8c 81       	ldd	r24, Y+4	; 0x04
    cedc:	9d 81       	ldd	r25, Y+5	; 0x05
    cede:	89 2b       	or	r24, r25
    cee0:	59 f4       	brne	.+22     	; 0xcef8 <_Z19serialbus_send_textPc+0x5a>
    cee2:	8a 81       	ldd	r24, Y+2	; 0x02
    cee4:	9b 81       	ldd	r25, Y+3	; 0x03
    cee6:	9c 01       	movw	r18, r24
    cee8:	21 50       	subi	r18, 0x01	; 1
    ceea:	31 09       	sbc	r19, r1
    ceec:	2a 83       	std	Y+2, r18	; 0x02
    ceee:	3b 83       	std	Y+3, r19	; 0x03
    cef0:	89 2b       	or	r24, r25
    cef2:	11 f0       	breq	.+4      	; 0xcef8 <_Z19serialbus_send_textPc+0x5a>
    cef4:	81 e0       	ldi	r24, 0x01	; 1
    cef6:	01 c0       	rjmp	.+2      	; 0xcefa <_Z19serialbus_send_textPc+0x5c>
    cef8:	80 e0       	ldi	r24, 0x00	; 0
    cefa:	88 23       	and	r24, r24
    cefc:	e1 f0       	breq	.+56     	; 0xcf36 <_Z19serialbus_send_textPc+0x98>
    cefe:	84 ef       	ldi	r24, 0xF4	; 244
    cf00:	91 e0       	ldi	r25, 0x01	; 1
    cf02:	8e 83       	std	Y+6, r24	; 0x06
    cf04:	9f 83       	std	Y+7, r25	; 0x07
    cf06:	0e 94 62 66 	call	0xccc4	; 0xccc4 <serialbusTxInProgress>
    cf0a:	88 23       	and	r24, r24
    cf0c:	59 f0       	breq	.+22     	; 0xcf24 <_Z19serialbus_send_textPc+0x86>
    cf0e:	8e 81       	ldd	r24, Y+6	; 0x06
    cf10:	9f 81       	ldd	r25, Y+7	; 0x07
    cf12:	9c 01       	movw	r18, r24
    cf14:	21 50       	subi	r18, 0x01	; 1
    cf16:	31 09       	sbc	r19, r1
    cf18:	2e 83       	std	Y+6, r18	; 0x06
    cf1a:	3f 83       	std	Y+7, r19	; 0x07
    cf1c:	89 2b       	or	r24, r25
    cf1e:	11 f0       	breq	.+4      	; 0xcf24 <_Z19serialbus_send_textPc+0x86>
    cf20:	81 e0       	ldi	r24, 0x01	; 1
    cf22:	01 c0       	rjmp	.+2      	; 0xcf26 <_Z19serialbus_send_textPc+0x88>
    cf24:	80 e0       	ldi	r24, 0x00	; 0
    cf26:	88 23       	and	r24, r24
    cf28:	09 f0       	breq	.+2      	; 0xcf2c <_Z19serialbus_send_textPc+0x8e>
    cf2a:	ed cf       	rjmp	.-38     	; 0xcf06 <_Z19serialbus_send_textPc+0x68>
    cf2c:	0e 94 cb 65 	call	0xcb96	; 0xcb96 <nextEmptySBTxBuffer>
    cf30:	8c 83       	std	Y+4, r24	; 0x04
    cf32:	9d 83       	std	Y+5, r25	; 0x05
    cf34:	d2 cf       	rjmp	.-92     	; 0xceda <_Z19serialbus_send_textPc+0x3c>
    cf36:	8c 81       	ldd	r24, Y+4	; 0x04
    cf38:	9d 81       	ldd	r25, Y+5	; 0x05
    cf3a:	89 2b       	or	r24, r25
    cf3c:	89 f0       	breq	.+34     	; 0xcf60 <_Z19serialbus_send_textPc+0xc2>
    cf3e:	89 85       	ldd	r24, Y+9	; 0x09
    cf40:	8f 93       	push	r24
    cf42:	88 85       	ldd	r24, Y+8	; 0x08
    cf44:	8f 93       	push	r24
    cf46:	8d 81       	ldd	r24, Y+5	; 0x05
    cf48:	8f 93       	push	r24
    cf4a:	8c 81       	ldd	r24, Y+4	; 0x04
    cf4c:	8f 93       	push	r24
    cf4e:	0e 94 99 7f 	call	0xff32	; 0xff32 <sprintf>
    cf52:	0f 90       	pop	r0
    cf54:	0f 90       	pop	r0
    cf56:	0f 90       	pop	r0
    cf58:	0f 90       	pop	r0
    cf5a:	0e 94 6b 66 	call	0xccd6	; 0xccd6 <_Z18serialbus_start_txv>
    cf5e:	19 82       	std	Y+1, r1	; 0x01
    cf60:	89 81       	ldd	r24, Y+1	; 0x01
    cf62:	29 96       	adiw	r28, 0x09	; 9
    cf64:	cd bf       	out	0x3d, r28	; 61
    cf66:	de bf       	out	0x3e, r29	; 62
    cf68:	df 91       	pop	r29
    cf6a:	cf 91       	pop	r28
    cf6c:	08 95       	ret

0000cf6e <sb_send_NewLine>:

void sb_send_NewLine(void)
{
    cf6e:	cf 93       	push	r28
    cf70:	df 93       	push	r29
    cf72:	cd b7       	in	r28, 0x3d	; 61
    cf74:	de b7       	in	r29, 0x3e	; 62
	if(g_bus_disabled)
    cf76:	80 91 55 40 	lds	r24, 0x4055	; 0x804055 <_ZL14g_bus_disabled>
    cf7a:	88 23       	and	r24, r24
    cf7c:	29 f4       	brne	.+10     	; 0xcf88 <sb_send_NewLine+0x1a>
	{
		return;
	}
	serialbus_send_text((char*)crlf);
    cf7e:	89 e9       	ldi	r24, 0x99	; 153
    cf80:	94 e4       	ldi	r25, 0x44	; 68
    cf82:	0e 94 4f 67 	call	0xce9e	; 0xce9e <_Z19serialbus_send_textPc>
    cf86:	01 c0       	rjmp	.+2      	; 0xcf8a <sb_send_NewLine+0x1c>

void sb_send_NewLine(void)
{
	if(g_bus_disabled)
	{
		return;
    cf88:	00 00       	nop
	}
	serialbus_send_text((char*)crlf);
}
    cf8a:	df 91       	pop	r29
    cf8c:	cf 91       	pop	r28
    cf8e:	08 95       	ret

0000cf90 <sb_echo_char>:

void sb_echo_char(uint8_t c)
{
    cf90:	cf 93       	push	r28
    cf92:	df 93       	push	r29
    cf94:	1f 92       	push	r1
    cf96:	cd b7       	in	r28, 0x3d	; 61
    cf98:	de b7       	in	r29, 0x3e	; 62
    cf9a:	89 83       	std	Y+1, r24	; 0x01
	if(g_bus_disabled)
    cf9c:	80 91 55 40 	lds	r24, 0x4055	; 0x804055 <_ZL14g_bus_disabled>
    cfa0:	88 23       	and	r24, r24
    cfa2:	51 f4       	brne	.+20     	; 0xcfb8 <sb_echo_char+0x28>
	{
		return;
	}
	g_tempMsgBuff[0] = c;
    cfa4:	89 81       	ldd	r24, Y+1	; 0x01
    cfa6:	80 93 93 48 	sts	0x4893, r24	; 0x804893 <_ZL13g_tempMsgBuff>
	g_tempMsgBuff[1] = '\0';
    cfaa:	10 92 94 48 	sts	0x4894, r1	; 0x804894 <_ZL13g_tempMsgBuff+0x1>
	serialbus_send_text(g_tempMsgBuff);
    cfae:	83 e9       	ldi	r24, 0x93	; 147
    cfb0:	98 e4       	ldi	r25, 0x48	; 72
    cfb2:	0e 94 4f 67 	call	0xce9e	; 0xce9e <_Z19serialbus_send_textPc>
    cfb6:	01 c0       	rjmp	.+2      	; 0xcfba <sb_echo_char+0x2a>

void sb_echo_char(uint8_t c)
{
	if(g_bus_disabled)
	{
		return;
    cfb8:	00 00       	nop
	}
	g_tempMsgBuff[0] = c;
	g_tempMsgBuff[1] = '\0';
	serialbus_send_text(g_tempMsgBuff);
}
    cfba:	0f 90       	pop	r0
    cfbc:	df 91       	pop	r29
    cfbe:	cf 91       	pop	r28
    cfc0:	08 95       	ret

0000cfc2 <si5351_shutdown_comms>:
	void si5351_set_vcoB_freq(Frequency_Hz freq_VCO)
	{
		freqVCOB = freq_VCO;
		set_pll(freq_VCO, SI5351_PLLB);
		return;
	}
    cfc2:	cf 93       	push	r28
    cfc4:	df 93       	push	r29
    cfc6:	cd b7       	in	r28, 0x3d	; 61
    cfc8:	de b7       	in	r29, 0x3e	; 62
    cfca:	0e 94 f5 52 	call	0xa5ea	; 0xa5ea <I2C_1_Shutdown>
    cfce:	00 00       	nop
    cfd0:	df 91       	pop	r29
    cfd2:	cf 91       	pop	r28
    cfd4:	08 95       	ret

0000cfd6 <si5351_start_comms>:
    cfd6:	cf 93       	push	r28
    cfd8:	df 93       	push	r29
    cfda:	cd b7       	in	r28, 0x3d	; 61
    cfdc:	de b7       	in	r29, 0x3e	; 62
    cfde:	0e 94 06 53 	call	0xa60c	; 0xa60c <I2C_1_Init>
    cfe2:	00 00       	nop
    cfe4:	df 91       	pop	r29
    cfe6:	cf 91       	pop	r28
    cfe8:	08 95       	ret

0000cfea <si5351_init>:
    cfea:	cf 93       	push	r28
    cfec:	df 93       	push	r29
    cfee:	cd b7       	in	r28, 0x3d	; 61
    cff0:	de b7       	in	r29, 0x3e	; 62
    cff2:	28 97       	sbiw	r28, 0x08	; 8
    cff4:	cd bf       	out	0x3d, r28	; 61
    cff6:	de bf       	out	0x3e, r29	; 62
    cff8:	8c 83       	std	Y+4, r24	; 0x04
    cffa:	4d 83       	std	Y+5, r20	; 0x05
    cffc:	5e 83       	std	Y+6, r21	; 0x06
    cffe:	6f 83       	std	Y+7, r22	; 0x07
    d000:	78 87       	std	Y+8, r23	; 0x08
    d002:	0e 94 06 53 	call	0xa60c	; 0xa60c <I2C_1_Init>
    d006:	10 92 c2 49 	sts	0x49C2, r1	; 0x8049c2 <_ZL8freqVCOB>
    d00a:	10 92 c3 49 	sts	0x49C3, r1	; 0x8049c3 <_ZL8freqVCOB+0x1>
    d00e:	10 92 c4 49 	sts	0x49C4, r1	; 0x8049c4 <_ZL8freqVCOB+0x2>
    d012:	10 92 c5 49 	sts	0x49C5, r1	; 0x8049c5 <_ZL8freqVCOB+0x3>
    d016:	80 e4       	ldi	r24, 0x40	; 64
    d018:	98 e7       	ldi	r25, 0x78	; 120
    d01a:	ad e7       	ldi	r26, 0x7D	; 125
    d01c:	b1 e0       	ldi	r27, 0x01	; 1
    d01e:	80 93 56 40 	sts	0x4056, r24	; 0x804056 <_ZL9xtal_freq>
    d022:	90 93 57 40 	sts	0x4057, r25	; 0x804057 <_ZL9xtal_freq+0x1>
    d026:	a0 93 58 40 	sts	0x4058, r26	; 0x804058 <_ZL9xtal_freq+0x2>
    d02a:	b0 93 59 40 	sts	0x4059, r27	; 0x804059 <_ZL9xtal_freq+0x3>
    d02e:	10 92 c6 49 	sts	0x49C6, r1	; 0x8049c6 <_ZL17enabledClocksMask>
    d032:	8f ef       	ldi	r24, 0xFF	; 255
    d034:	8a 83       	std	Y+2, r24	; 0x02
    d036:	ce 01       	movw	r24, r28
    d038:	02 96       	adiw	r24, 0x02	; 2
    d03a:	41 e0       	ldi	r20, 0x01	; 1
    d03c:	bc 01       	movw	r22, r24
    d03e:	83 e0       	ldi	r24, 0x03	; 3
    d040:	0e 94 f9 6f 	call	0xdff2	; 0xdff2 <_Z17si5351_write_bulkhPhh>
    d044:	80 93 d4 49 	sts	0x49D4, r24	; 0x8049d4 <_ZZ11si5351_initE3err>
    d048:	80 91 d4 49 	lds	r24, 0x49D4	; 0x8049d4 <_ZZ11si5351_initE3err>
    d04c:	88 23       	and	r24, r24
    d04e:	19 f0       	breq	.+6      	; 0xd056 <si5351_init+0x6c>
    d050:	80 91 d4 49 	lds	r24, 0x49D4	; 0x8049d4 <_ZZ11si5351_initE3err>
    d054:	92 c0       	rjmp	.+292    	; 0xd17a <si5351_init+0x190>
    d056:	8c ec       	ldi	r24, 0xCC	; 204
    d058:	8a 83       	std	Y+2, r24	; 0x02
    d05a:	ce 01       	movw	r24, r28
    d05c:	02 96       	adiw	r24, 0x02	; 2
    d05e:	41 e0       	ldi	r20, 0x01	; 1
    d060:	bc 01       	movw	r22, r24
    d062:	80 e1       	ldi	r24, 0x10	; 16
    d064:	0e 94 f9 6f 	call	0xdff2	; 0xdff2 <_Z17si5351_write_bulkhPhh>
    d068:	98 2f       	mov	r25, r24
    d06a:	80 91 d4 49 	lds	r24, 0x49D4	; 0x8049d4 <_ZZ11si5351_initE3err>
    d06e:	89 2b       	or	r24, r25
    d070:	80 93 d4 49 	sts	0x49D4, r24	; 0x8049d4 <_ZZ11si5351_initE3err>
    d074:	ce 01       	movw	r24, r28
    d076:	02 96       	adiw	r24, 0x02	; 2
    d078:	41 e0       	ldi	r20, 0x01	; 1
    d07a:	bc 01       	movw	r22, r24
    d07c:	81 e1       	ldi	r24, 0x11	; 17
    d07e:	0e 94 f9 6f 	call	0xdff2	; 0xdff2 <_Z17si5351_write_bulkhPhh>
    d082:	98 2f       	mov	r25, r24
    d084:	80 91 d4 49 	lds	r24, 0x49D4	; 0x8049d4 <_ZZ11si5351_initE3err>
    d088:	89 2b       	or	r24, r25
    d08a:	80 93 d4 49 	sts	0x49D4, r24	; 0x8049d4 <_ZZ11si5351_initE3err>
    d08e:	ce 01       	movw	r24, r28
    d090:	02 96       	adiw	r24, 0x02	; 2
    d092:	41 e0       	ldi	r20, 0x01	; 1
    d094:	bc 01       	movw	r22, r24
    d096:	82 e1       	ldi	r24, 0x12	; 18
    d098:	0e 94 f9 6f 	call	0xdff2	; 0xdff2 <_Z17si5351_write_bulkhPhh>
    d09c:	98 2f       	mov	r25, r24
    d09e:	80 91 d4 49 	lds	r24, 0x49D4	; 0x8049d4 <_ZZ11si5351_initE3err>
    d0a2:	89 2b       	or	r24, r25
    d0a4:	80 93 d4 49 	sts	0x49D4, r24	; 0x8049d4 <_ZZ11si5351_initE3err>
    d0a8:	82 e1       	ldi	r24, 0x12	; 18
    d0aa:	89 83       	std	Y+1, r24	; 0x01
    d0ac:	99 81       	ldd	r25, Y+1	; 0x01
    d0ae:	8c 81       	ldd	r24, Y+4	; 0x04
    d0b0:	89 2b       	or	r24, r25
    d0b2:	89 83       	std	Y+1, r24	; 0x01
    d0b4:	89 81       	ldd	r24, Y+1	; 0x01
    d0b6:	8a 83       	std	Y+2, r24	; 0x02
    d0b8:	ce 01       	movw	r24, r28
    d0ba:	02 96       	adiw	r24, 0x02	; 2
    d0bc:	41 e0       	ldi	r20, 0x01	; 1
    d0be:	bc 01       	movw	r22, r24
    d0c0:	87 eb       	ldi	r24, 0xB7	; 183
    d0c2:	0e 94 f9 6f 	call	0xdff2	; 0xdff2 <_Z17si5351_write_bulkhPhh>
    d0c6:	98 2f       	mov	r25, r24
    d0c8:	80 91 d4 49 	lds	r24, 0x49D4	; 0x8049d4 <_ZZ11si5351_initE3err>
    d0cc:	89 2b       	or	r24, r25
    d0ce:	80 93 d4 49 	sts	0x49D4, r24	; 0x8049d4 <_ZZ11si5351_initE3err>
    d0d2:	8d 81       	ldd	r24, Y+5	; 0x05
    d0d4:	9e 81       	ldd	r25, Y+6	; 0x06
    d0d6:	af 81       	ldd	r26, Y+7	; 0x07
    d0d8:	b8 85       	ldd	r27, Y+8	; 0x08
    d0da:	89 2b       	or	r24, r25
    d0dc:	8a 2b       	or	r24, r26
    d0de:	8b 2b       	or	r24, r27
    d0e0:	41 f4       	brne	.+16     	; 0xd0f2 <si5351_init+0x108>
    d0e2:	80 e4       	ldi	r24, 0x40	; 64
    d0e4:	98 e7       	ldi	r25, 0x78	; 120
    d0e6:	ad e7       	ldi	r26, 0x7D	; 125
    d0e8:	b1 e0       	ldi	r27, 0x01	; 1
    d0ea:	8d 83       	std	Y+5, r24	; 0x05
    d0ec:	9e 83       	std	Y+6, r25	; 0x06
    d0ee:	af 83       	std	Y+7, r26	; 0x07
    d0f0:	b8 87       	std	Y+8, r27	; 0x08
    d0f2:	80 91 56 40 	lds	r24, 0x4056	; 0x804056 <_ZL9xtal_freq>
    d0f6:	90 91 57 40 	lds	r25, 0x4057	; 0x804057 <_ZL9xtal_freq+0x1>
    d0fa:	a0 91 58 40 	lds	r26, 0x4058	; 0x804058 <_ZL9xtal_freq+0x2>
    d0fe:	b0 91 59 40 	lds	r27, 0x4059	; 0x804059 <_ZL9xtal_freq+0x3>
    d102:	2d 81       	ldd	r18, Y+5	; 0x05
    d104:	3e 81       	ldd	r19, Y+6	; 0x06
    d106:	4f 81       	ldd	r20, Y+7	; 0x07
    d108:	58 85       	ldd	r21, Y+8	; 0x08
    d10a:	28 17       	cp	r18, r24
    d10c:	39 07       	cpc	r19, r25
    d10e:	4a 07       	cpc	r20, r26
    d110:	5b 07       	cpc	r21, r27
    d112:	59 f1       	breq	.+86     	; 0xd16a <si5351_init+0x180>
    d114:	ce 01       	movw	r24, r28
    d116:	02 96       	adiw	r24, 0x02	; 2
    d118:	41 e0       	ldi	r20, 0x01	; 1
    d11a:	bc 01       	movw	r22, r24
    d11c:	8f e0       	ldi	r24, 0x0F	; 15
    d11e:	0e 94 2b 70 	call	0xe056	; 0xe056 <_Z16si5351_read_bulkhPhh>
    d122:	88 23       	and	r24, r24
    d124:	11 f0       	breq	.+4      	; 0xd12a <si5351_init+0x140>
    d126:	81 e0       	ldi	r24, 0x01	; 1
    d128:	28 c0       	rjmp	.+80     	; 0xd17a <si5351_init+0x190>
    d12a:	8a 81       	ldd	r24, Y+2	; 0x02
    d12c:	89 83       	std	Y+1, r24	; 0x01
    d12e:	89 81       	ldd	r24, Y+1	; 0x01
    d130:	8f 73       	andi	r24, 0x3F	; 63
    d132:	89 83       	std	Y+1, r24	; 0x01
    d134:	8d 81       	ldd	r24, Y+5	; 0x05
    d136:	9e 81       	ldd	r25, Y+6	; 0x06
    d138:	af 81       	ldd	r26, Y+7	; 0x07
    d13a:	b8 85       	ldd	r27, Y+8	; 0x08
    d13c:	80 93 56 40 	sts	0x4056, r24	; 0x804056 <_ZL9xtal_freq>
    d140:	90 93 57 40 	sts	0x4057, r25	; 0x804057 <_ZL9xtal_freq+0x1>
    d144:	a0 93 58 40 	sts	0x4058, r26	; 0x804058 <_ZL9xtal_freq+0x2>
    d148:	b0 93 59 40 	sts	0x4059, r27	; 0x804059 <_ZL9xtal_freq+0x3>
    d14c:	89 81       	ldd	r24, Y+1	; 0x01
    d14e:	8a 83       	std	Y+2, r24	; 0x02
    d150:	ce 01       	movw	r24, r28
    d152:	02 96       	adiw	r24, 0x02	; 2
    d154:	41 e0       	ldi	r20, 0x01	; 1
    d156:	bc 01       	movw	r22, r24
    d158:	8f e0       	ldi	r24, 0x0F	; 15
    d15a:	0e 94 f9 6f 	call	0xdff2	; 0xdff2 <_Z17si5351_write_bulkhPhh>
    d15e:	98 2f       	mov	r25, r24
    d160:	80 91 d4 49 	lds	r24, 0x49D4	; 0x8049d4 <_ZZ11si5351_initE3err>
    d164:	89 2b       	or	r24, r25
    d166:	80 93 d4 49 	sts	0x49D4, r24	; 0x8049d4 <_ZZ11si5351_initE3err>
    d16a:	90 91 d4 49 	lds	r25, 0x49D4	; 0x8049d4 <_ZZ11si5351_initE3err>
    d16e:	81 e0       	ldi	r24, 0x01	; 1
    d170:	89 27       	eor	r24, r25
    d172:	80 93 d3 49 	sts	0x49D3, r24	; 0x8049d3 <g_si5351_initialized>
    d176:	80 91 d4 49 	lds	r24, 0x49D4	; 0x8049d4 <_ZZ11si5351_initE3err>
    d17a:	28 96       	adiw	r28, 0x08	; 8
    d17c:	cd bf       	out	0x3d, r28	; 61
    d17e:	de bf       	out	0x3e, r29	; 62
    d180:	df 91       	pop	r29
    d182:	cf 91       	pop	r28
    d184:	08 95       	ret

0000d186 <si5351_set_freq>:
    d186:	8f 92       	push	r8
    d188:	af 92       	push	r10
    d18a:	cf 92       	push	r12
    d18c:	df 92       	push	r13
    d18e:	ef 92       	push	r14
    d190:	ff 92       	push	r15
    d192:	0f 93       	push	r16
    d194:	1f 93       	push	r17
    d196:	cf 93       	push	r28
    d198:	df 93       	push	r29
    d19a:	cd b7       	in	r28, 0x3d	; 61
    d19c:	de b7       	in	r29, 0x3e	; 62
    d19e:	6d 97       	sbiw	r28, 0x1d	; 29
    d1a0:	cd bf       	out	0x3d, r28	; 61
    d1a2:	de bf       	out	0x3e, r29	; 62
    d1a4:	68 8f       	std	Y+24, r22	; 0x18
    d1a6:	79 8f       	std	Y+25, r23	; 0x19
    d1a8:	8a 8f       	std	Y+26, r24	; 0x1a
    d1aa:	9b 8f       	std	Y+27, r25	; 0x1b
    d1ac:	4c 8f       	std	Y+28, r20	; 0x1c
    d1ae:	2d 8f       	std	Y+29, r18	; 0x1d
    d1b0:	19 82       	std	Y+1, r1	; 0x01
    d1b2:	1a 82       	std	Y+2, r1	; 0x02
    d1b4:	1b 82       	std	Y+3, r1	; 0x03
    d1b6:	1c 82       	std	Y+4, r1	; 0x04
    d1b8:	1f 82       	std	Y+7, r1	; 0x07
    d1ba:	1c 8a       	std	Y+20, r1	; 0x14
    d1bc:	1d 8a       	std	Y+21, r1	; 0x15
    d1be:	90 91 d3 49 	lds	r25, 0x49D3	; 0x8049d3 <g_si5351_initialized>
    d1c2:	81 e0       	ldi	r24, 0x01	; 1
    d1c4:	89 27       	eor	r24, r25
    d1c6:	88 23       	and	r24, r24
    d1c8:	11 f0       	breq	.+4      	; 0xd1ce <si5351_set_freq+0x48>
    d1ca:	81 e0       	ldi	r24, 0x01	; 1
    d1cc:	6f c1       	rjmp	.+734    	; 0xd4ac <si5351_set_freq+0x326>
    d1ce:	88 8d       	ldd	r24, Y+24	; 0x18
    d1d0:	99 8d       	ldd	r25, Y+25	; 0x19
    d1d2:	aa 8d       	ldd	r26, Y+26	; 0x1a
    d1d4:	bb 8d       	ldd	r27, Y+27	; 0x1b
    d1d6:	80 34       	cpi	r24, 0x40	; 64
    d1d8:	92 44       	sbci	r25, 0x42	; 66
    d1da:	af 40       	sbci	r26, 0x0F	; 15
    d1dc:	b1 05       	cpc	r27, r1
    d1de:	08 f1       	brcs	.+66     	; 0xd222 <si5351_set_freq+0x9c>
    d1e0:	88 8d       	ldd	r24, Y+24	; 0x18
    d1e2:	99 8d       	ldd	r25, Y+25	; 0x19
    d1e4:	aa 8d       	ldd	r26, Y+26	; 0x1a
    d1e6:	bb 8d       	ldd	r27, Y+27	; 0x1b
    d1e8:	24 e6       	ldi	r18, 0x64	; 100
    d1ea:	30 e0       	ldi	r19, 0x00	; 0
    d1ec:	40 e0       	ldi	r20, 0x00	; 0
    d1ee:	50 e0       	ldi	r21, 0x00	; 0
    d1f0:	bc 01       	movw	r22, r24
    d1f2:	cd 01       	movw	r24, r26
    d1f4:	0e 94 3e 7d 	call	0xfa7c	; 0xfa7c <__udivmodsi4>
    d1f8:	da 01       	movw	r26, r20
    d1fa:	c9 01       	movw	r24, r18
    d1fc:	88 8f       	std	Y+24, r24	; 0x18
    d1fe:	99 8f       	std	Y+25, r25	; 0x19
    d200:	aa 8f       	std	Y+26, r26	; 0x1a
    d202:	bb 8f       	std	Y+27, r27	; 0x1b
    d204:	28 8d       	ldd	r18, Y+24	; 0x18
    d206:	39 8d       	ldd	r19, Y+25	; 0x19
    d208:	4a 8d       	ldd	r20, Y+26	; 0x1a
    d20a:	5b 8d       	ldd	r21, Y+27	; 0x1b
    d20c:	84 e6       	ldi	r24, 0x64	; 100
    d20e:	90 e0       	ldi	r25, 0x00	; 0
    d210:	dc 01       	movw	r26, r24
    d212:	0e 94 88 7d 	call	0xfb10	; 0xfb10 <__muluhisi3>
    d216:	dc 01       	movw	r26, r24
    d218:	cb 01       	movw	r24, r22
    d21a:	88 8f       	std	Y+24, r24	; 0x18
    d21c:	99 8f       	std	Y+25, r25	; 0x19
    d21e:	aa 8f       	std	Y+26, r26	; 0x1a
    d220:	bb 8f       	std	Y+27, r27	; 0x1b
    d222:	8c 8d       	ldd	r24, Y+28	; 0x1c
    d224:	88 2f       	mov	r24, r24
    d226:	90 e0       	ldi	r25, 0x00	; 0
    d228:	81 30       	cpi	r24, 0x01	; 1
    d22a:	91 05       	cpc	r25, r1
    d22c:	e9 f0       	breq	.+58     	; 0xd268 <si5351_set_freq+0xe2>
    d22e:	82 30       	cpi	r24, 0x02	; 2
    d230:	91 05       	cpc	r25, r1
    d232:	09 f4       	brne	.+2      	; 0xd236 <si5351_set_freq+0xb0>
    d234:	3f c0       	rjmp	.+126    	; 0xd2b4 <si5351_set_freq+0x12e>
    d236:	89 2b       	or	r24, r25
    d238:	09 f0       	breq	.+2      	; 0xd23c <si5351_set_freq+0xb6>
    d23a:	62 c0       	rjmp	.+196    	; 0xd300 <si5351_set_freq+0x17a>
    d23c:	80 91 c6 49 	lds	r24, 0x49C6	; 0x8049c6 <_ZL17enabledClocksMask>
    d240:	81 60       	ori	r24, 0x01	; 1
    d242:	80 93 c6 49 	sts	0x49C6, r24	; 0x8049c6 <_ZL17enabledClocksMask>
    d246:	80 e1       	ldi	r24, 0x10	; 16
    d248:	8e 83       	std	Y+6, r24	; 0x06
    d24a:	81 e0       	ldi	r24, 0x01	; 1
    d24c:	8d 83       	std	Y+5, r24	; 0x05
    d24e:	88 8d       	ldd	r24, Y+24	; 0x18
    d250:	99 8d       	ldd	r25, Y+25	; 0x19
    d252:	aa 8d       	ldd	r26, Y+26	; 0x1a
    d254:	bb 8d       	ldd	r27, Y+27	; 0x1b
    d256:	80 93 c7 49 	sts	0x49C7, r24	; 0x8049c7 <_ZL9clock_out>
    d25a:	90 93 c8 49 	sts	0x49C8, r25	; 0x8049c8 <_ZL9clock_out+0x1>
    d25e:	a0 93 c9 49 	sts	0x49C9, r26	; 0x8049c9 <_ZL9clock_out+0x2>
    d262:	b0 93 ca 49 	sts	0x49CA, r27	; 0x8049ca <_ZL9clock_out+0x3>
    d266:	4e c0       	rjmp	.+156    	; 0xd304 <si5351_set_freq+0x17e>
    d268:	80 91 c6 49 	lds	r24, 0x49C6	; 0x8049c6 <_ZL17enabledClocksMask>
    d26c:	82 60       	ori	r24, 0x02	; 2
    d26e:	80 93 c6 49 	sts	0x49C6, r24	; 0x8049c6 <_ZL17enabledClocksMask>
    d272:	81 e1       	ldi	r24, 0x11	; 17
    d274:	8e 83       	std	Y+6, r24	; 0x06
    d276:	80 91 c6 49 	lds	r24, 0x49C6	; 0x8049c6 <_ZL17enabledClocksMask>
    d27a:	80 95       	com	r24
    d27c:	8a 6f       	ori	r24, 0xFA	; 250
    d27e:	8e 8b       	std	Y+22, r24	; 0x16
    d280:	ce 01       	movw	r24, r28
    d282:	46 96       	adiw	r24, 0x16	; 22
    d284:	41 e0       	ldi	r20, 0x01	; 1
    d286:	bc 01       	movw	r22, r24
    d288:	83 e0       	ldi	r24, 0x03	; 3
    d28a:	0e 94 f9 6f 	call	0xdff2	; 0xdff2 <_Z17si5351_write_bulkhPhh>
    d28e:	88 23       	and	r24, r24
    d290:	11 f0       	breq	.+4      	; 0xd296 <si5351_set_freq+0x110>
    d292:	81 e0       	ldi	r24, 0x01	; 1
    d294:	0b c1       	rjmp	.+534    	; 0xd4ac <si5351_set_freq+0x326>
    d296:	82 e0       	ldi	r24, 0x02	; 2
    d298:	8d 83       	std	Y+5, r24	; 0x05
    d29a:	88 8d       	ldd	r24, Y+24	; 0x18
    d29c:	99 8d       	ldd	r25, Y+25	; 0x19
    d29e:	aa 8d       	ldd	r26, Y+26	; 0x1a
    d2a0:	bb 8d       	ldd	r27, Y+27	; 0x1b
    d2a2:	80 93 cb 49 	sts	0x49CB, r24	; 0x8049cb <_ZL9clock_out+0x4>
    d2a6:	90 93 cc 49 	sts	0x49CC, r25	; 0x8049cc <_ZL9clock_out+0x5>
    d2aa:	a0 93 cd 49 	sts	0x49CD, r26	; 0x8049cd <_ZL9clock_out+0x6>
    d2ae:	b0 93 ce 49 	sts	0x49CE, r27	; 0x8049ce <_ZL9clock_out+0x7>
    d2b2:	28 c0       	rjmp	.+80     	; 0xd304 <si5351_set_freq+0x17e>
    d2b4:	80 91 c6 49 	lds	r24, 0x49C6	; 0x8049c6 <_ZL17enabledClocksMask>
    d2b8:	84 60       	ori	r24, 0x04	; 4
    d2ba:	80 93 c6 49 	sts	0x49C6, r24	; 0x8049c6 <_ZL17enabledClocksMask>
    d2be:	82 e1       	ldi	r24, 0x12	; 18
    d2c0:	8e 83       	std	Y+6, r24	; 0x06
    d2c2:	80 91 c6 49 	lds	r24, 0x49C6	; 0x8049c6 <_ZL17enabledClocksMask>
    d2c6:	80 95       	com	r24
    d2c8:	8c 6f       	ori	r24, 0xFC	; 252
    d2ca:	8e 8b       	std	Y+22, r24	; 0x16
    d2cc:	ce 01       	movw	r24, r28
    d2ce:	46 96       	adiw	r24, 0x16	; 22
    d2d0:	41 e0       	ldi	r20, 0x01	; 1
    d2d2:	bc 01       	movw	r22, r24
    d2d4:	83 e0       	ldi	r24, 0x03	; 3
    d2d6:	0e 94 f9 6f 	call	0xdff2	; 0xdff2 <_Z17si5351_write_bulkhPhh>
    d2da:	88 23       	and	r24, r24
    d2dc:	11 f0       	breq	.+4      	; 0xd2e2 <si5351_set_freq+0x15c>
    d2de:	81 e0       	ldi	r24, 0x01	; 1
    d2e0:	e5 c0       	rjmp	.+458    	; 0xd4ac <si5351_set_freq+0x326>
    d2e2:	82 e0       	ldi	r24, 0x02	; 2
    d2e4:	8d 83       	std	Y+5, r24	; 0x05
    d2e6:	88 8d       	ldd	r24, Y+24	; 0x18
    d2e8:	99 8d       	ldd	r25, Y+25	; 0x19
    d2ea:	aa 8d       	ldd	r26, Y+26	; 0x1a
    d2ec:	bb 8d       	ldd	r27, Y+27	; 0x1b
    d2ee:	80 93 cf 49 	sts	0x49CF, r24	; 0x8049cf <_ZL9clock_out+0x8>
    d2f2:	90 93 d0 49 	sts	0x49D0, r25	; 0x8049d0 <_ZL9clock_out+0x9>
    d2f6:	a0 93 d1 49 	sts	0x49D1, r26	; 0x8049d1 <_ZL9clock_out+0xa>
    d2fa:	b0 93 d2 49 	sts	0x49D2, r27	; 0x8049d2 <_ZL9clock_out+0xb>
    d2fe:	02 c0       	rjmp	.+4      	; 0xd304 <si5351_set_freq+0x17e>
    d300:	81 e0       	ldi	r24, 0x01	; 1
    d302:	d4 c0       	rjmp	.+424    	; 0xd4ac <si5351_set_freq+0x326>
    d304:	8d 81       	ldd	r24, Y+5	; 0x05
    d306:	81 30       	cpi	r24, 0x01	; 1
    d308:	61 f0       	breq	.+24     	; 0xd322 <si5351_set_freq+0x19c>
    d30a:	80 91 c2 49 	lds	r24, 0x49C2	; 0x8049c2 <_ZL8freqVCOB>
    d30e:	90 91 c3 49 	lds	r25, 0x49C3	; 0x8049c3 <_ZL8freqVCOB+0x1>
    d312:	a0 91 c4 49 	lds	r26, 0x49C4	; 0x8049c4 <_ZL8freqVCOB+0x2>
    d316:	b0 91 c5 49 	lds	r27, 0x49C5	; 0x8049c5 <_ZL8freqVCOB+0x3>
    d31a:	89 2b       	or	r24, r25
    d31c:	8a 2b       	or	r24, r26
    d31e:	8b 2b       	or	r24, r27
    d320:	c9 f4       	brne	.+50     	; 0xd354 <si5351_set_freq+0x1ce>
    d322:	be 01       	movw	r22, r28
    d324:	6b 5e       	subi	r22, 0xEB	; 235
    d326:	7f 4f       	sbci	r23, 0xFF	; 255
    d328:	9e 01       	movw	r18, r28
    d32a:	2c 5e       	subi	r18, 0xEC	; 236
    d32c:	3f 4f       	sbci	r19, 0xFF	; 255
    d32e:	ae 01       	movw	r20, r28
    d330:	48 5f       	subi	r20, 0xF8	; 248
    d332:	5f 4f       	sbci	r21, 0xFF	; 255
    d334:	88 8d       	ldd	r24, Y+24	; 0x18
    d336:	99 8d       	ldd	r25, Y+25	; 0x19
    d338:	aa 8d       	ldd	r26, Y+26	; 0x1a
    d33a:	bb 8d       	ldd	r27, Y+27	; 0x1b
    d33c:	8b 01       	movw	r16, r22
    d33e:	bc 01       	movw	r22, r24
    d340:	cd 01       	movw	r24, r26
    d342:	0e 94 6e 6d 	call	0xdadc	; 0xdadc <_Z15multisynth_calcmP13u_si5351_regsPbS1_>
    d346:	dc 01       	movw	r26, r24
    d348:	cb 01       	movw	r24, r22
    d34a:	89 83       	std	Y+1, r24	; 0x01
    d34c:	9a 83       	std	Y+2, r25	; 0x02
    d34e:	ab 83       	std	Y+3, r26	; 0x03
    d350:	bc 83       	std	Y+4, r27	; 0x04
    d352:	18 c0       	rjmp	.+48     	; 0xd384 <si5351_set_freq+0x1fe>
    d354:	be 01       	movw	r22, r28
    d356:	6b 5e       	subi	r22, 0xEB	; 235
    d358:	7f 4f       	sbci	r23, 0xFF	; 255
    d35a:	9e 01       	movw	r18, r28
    d35c:	2c 5e       	subi	r18, 0xEC	; 236
    d35e:	3f 4f       	sbci	r19, 0xFF	; 255
    d360:	ae 01       	movw	r20, r28
    d362:	48 5f       	subi	r20, 0xF8	; 248
    d364:	5f 4f       	sbci	r21, 0xFF	; 255
    d366:	88 8d       	ldd	r24, Y+24	; 0x18
    d368:	99 8d       	ldd	r25, Y+25	; 0x19
    d36a:	aa 8d       	ldd	r26, Y+26	; 0x1a
    d36c:	bb 8d       	ldd	r27, Y+27	; 0x1b
    d36e:	8b 01       	movw	r16, r22
    d370:	bc 01       	movw	r22, r24
    d372:	cd 01       	movw	r24, r26
    d374:	0e 94 78 6e 	call	0xdcf0	; 0xdcf0 <_Z19multisynth_estimatemP13u_si5351_regsPbS1_>
    d378:	dc 01       	movw	r26, r24
    d37a:	cb 01       	movw	r24, r22
    d37c:	88 8f       	std	Y+24, r24	; 0x18
    d37e:	99 8f       	std	Y+25, r25	; 0x19
    d380:	aa 8f       	std	Y+26, r26	; 0x1a
    d382:	bb 8f       	std	Y+27, r27	; 0x1b
    d384:	6d 81       	ldd	r22, Y+5	; 0x05
    d386:	8c 8d       	ldd	r24, Y+28	; 0x1c
    d388:	0e 94 5d 70 	call	0xe0ba	; 0xe0ba <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll>
    d38c:	88 23       	and	r24, r24
    d38e:	11 f0       	breq	.+4      	; 0xd394 <si5351_set_freq+0x20e>
    d390:	81 e0       	ldi	r24, 0x01	; 1
    d392:	8c c0       	rjmp	.+280    	; 0xd4ac <si5351_set_freq+0x326>
    d394:	8d 89       	ldd	r24, Y+21	; 0x15
    d396:	9c 89       	ldd	r25, Y+20	; 0x14
    d398:	8f 93       	push	r24
    d39a:	8f 80       	ldd	r8, Y+7	; 0x07
    d39c:	a9 2e       	mov	r10, r25
    d39e:	c8 84       	ldd	r12, Y+8	; 0x08
    d3a0:	d9 84       	ldd	r13, Y+9	; 0x09
    d3a2:	ea 84       	ldd	r14, Y+10	; 0x0a
    d3a4:	fb 84       	ldd	r15, Y+11	; 0x0b
    d3a6:	0c 85       	ldd	r16, Y+12	; 0x0c
    d3a8:	1d 85       	ldd	r17, Y+13	; 0x0d
    d3aa:	2e 85       	ldd	r18, Y+14	; 0x0e
    d3ac:	3f 85       	ldd	r19, Y+15	; 0x0f
    d3ae:	48 89       	ldd	r20, Y+16	; 0x10
    d3b0:	59 89       	ldd	r21, Y+17	; 0x11
    d3b2:	6a 89       	ldd	r22, Y+18	; 0x12
    d3b4:	7b 89       	ldd	r23, Y+19	; 0x13
    d3b6:	8c 8d       	ldd	r24, Y+28	; 0x1c
    d3b8:	0e 94 9a 70 	call	0xe134	; 0xe134 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb>
    d3bc:	0f 90       	pop	r0
    d3be:	88 23       	and	r24, r24
    d3c0:	11 f0       	breq	.+4      	; 0xd3c6 <si5351_set_freq+0x240>
    d3c2:	81 e0       	ldi	r24, 0x01	; 1
    d3c4:	73 c0       	rjmp	.+230    	; 0xd4ac <si5351_set_freq+0x326>
    d3c6:	89 81       	ldd	r24, Y+1	; 0x01
    d3c8:	9a 81       	ldd	r25, Y+2	; 0x02
    d3ca:	ab 81       	ldd	r26, Y+3	; 0x03
    d3cc:	bc 81       	ldd	r27, Y+4	; 0x04
    d3ce:	89 2b       	or	r24, r25
    d3d0:	8a 2b       	or	r24, r26
    d3d2:	8b 2b       	or	r24, r27
    d3d4:	49 f0       	breq	.+18     	; 0xd3e8 <si5351_set_freq+0x262>
    d3d6:	89 81       	ldd	r24, Y+1	; 0x01
    d3d8:	9a 81       	ldd	r25, Y+2	; 0x02
    d3da:	ab 81       	ldd	r26, Y+3	; 0x03
    d3dc:	bc 81       	ldd	r27, Y+4	; 0x04
    d3de:	4d 81       	ldd	r20, Y+5	; 0x05
    d3e0:	bc 01       	movw	r22, r24
    d3e2:	cd 01       	movw	r24, r26
    d3e4:	0e 94 0c 6b 	call	0xd618	; 0xd618 <_Z7set_pllm10si5351_pll>
    d3e8:	8d 8d       	ldd	r24, Y+29	; 0x1d
    d3ea:	88 23       	and	r24, r24
    d3ec:	71 f0       	breq	.+28     	; 0xd40a <si5351_set_freq+0x284>
    d3ee:	80 91 c6 49 	lds	r24, 0x49C6	; 0x8049c6 <_ZL17enabledClocksMask>
    d3f2:	8e 8b       	std	Y+22, r24	; 0x16
    d3f4:	ce 01       	movw	r24, r28
    d3f6:	46 96       	adiw	r24, 0x16	; 22
    d3f8:	41 e0       	ldi	r20, 0x01	; 1
    d3fa:	bc 01       	movw	r22, r24
    d3fc:	83 e0       	ldi	r24, 0x03	; 3
    d3fe:	0e 94 f9 6f 	call	0xdff2	; 0xdff2 <_Z17si5351_write_bulkhPhh>
    d402:	88 23       	and	r24, r24
    d404:	89 f0       	breq	.+34     	; 0xd428 <si5351_set_freq+0x2a2>
    d406:	81 e0       	ldi	r24, 0x01	; 1
    d408:	51 c0       	rjmp	.+162    	; 0xd4ac <si5351_set_freq+0x326>
    d40a:	80 91 c6 49 	lds	r24, 0x49C6	; 0x8049c6 <_ZL17enabledClocksMask>
    d40e:	80 95       	com	r24
    d410:	8e 8b       	std	Y+22, r24	; 0x16
    d412:	ce 01       	movw	r24, r28
    d414:	46 96       	adiw	r24, 0x16	; 22
    d416:	41 e0       	ldi	r20, 0x01	; 1
    d418:	bc 01       	movw	r22, r24
    d41a:	83 e0       	ldi	r24, 0x03	; 3
    d41c:	0e 94 f9 6f 	call	0xdff2	; 0xdff2 <_Z17si5351_write_bulkhPhh>
    d420:	88 23       	and	r24, r24
    d422:	11 f0       	breq	.+4      	; 0xd428 <si5351_set_freq+0x2a2>
    d424:	81 e0       	ldi	r24, 0x01	; 1
    d426:	42 c0       	rjmp	.+132    	; 0xd4ac <si5351_set_freq+0x326>
    d428:	8d 81       	ldd	r24, Y+5	; 0x05
    d42a:	81 30       	cpi	r24, 0x01	; 1
    d42c:	69 f4       	brne	.+26     	; 0xd448 <si5351_set_freq+0x2c2>
    d42e:	8c e4       	ldi	r24, 0x4C	; 76
    d430:	8e 8b       	std	Y+22, r24	; 0x16
    d432:	ce 01       	movw	r24, r28
    d434:	46 96       	adiw	r24, 0x16	; 22
    d436:	41 e0       	ldi	r20, 0x01	; 1
    d438:	bc 01       	movw	r22, r24
    d43a:	8e 81       	ldd	r24, Y+6	; 0x06
    d43c:	0e 94 f9 6f 	call	0xdff2	; 0xdff2 <_Z17si5351_write_bulkhPhh>
    d440:	88 23       	and	r24, r24
    d442:	99 f1       	breq	.+102    	; 0xd4aa <si5351_set_freq+0x324>
    d444:	81 e0       	ldi	r24, 0x01	; 1
    d446:	32 c0       	rjmp	.+100    	; 0xd4ac <si5351_set_freq+0x326>
    d448:	8c 89       	ldd	r24, Y+20	; 0x14
    d44a:	88 23       	and	r24, r24
    d44c:	69 f0       	breq	.+26     	; 0xd468 <si5351_set_freq+0x2e2>
    d44e:	8c e6       	ldi	r24, 0x6C	; 108
    d450:	8e 8b       	std	Y+22, r24	; 0x16
    d452:	ce 01       	movw	r24, r28
    d454:	46 96       	adiw	r24, 0x16	; 22
    d456:	41 e0       	ldi	r20, 0x01	; 1
    d458:	bc 01       	movw	r22, r24
    d45a:	8e 81       	ldd	r24, Y+6	; 0x06
    d45c:	0e 94 f9 6f 	call	0xdff2	; 0xdff2 <_Z17si5351_write_bulkhPhh>
    d460:	88 23       	and	r24, r24
    d462:	79 f0       	breq	.+30     	; 0xd482 <si5351_set_freq+0x2fc>
    d464:	81 e0       	ldi	r24, 0x01	; 1
    d466:	22 c0       	rjmp	.+68     	; 0xd4ac <si5351_set_freq+0x326>
    d468:	8c e2       	ldi	r24, 0x2C	; 44
    d46a:	8e 8b       	std	Y+22, r24	; 0x16
    d46c:	ce 01       	movw	r24, r28
    d46e:	46 96       	adiw	r24, 0x16	; 22
    d470:	41 e0       	ldi	r20, 0x01	; 1
    d472:	bc 01       	movw	r22, r24
    d474:	8e 81       	ldd	r24, Y+6	; 0x06
    d476:	0e 94 f9 6f 	call	0xdff2	; 0xdff2 <_Z17si5351_write_bulkhPhh>
    d47a:	88 23       	and	r24, r24
    d47c:	11 f0       	breq	.+4      	; 0xd482 <si5351_set_freq+0x2fc>
    d47e:	81 e0       	ldi	r24, 0x01	; 1
    d480:	15 c0       	rjmp	.+42     	; 0xd4ac <si5351_set_freq+0x326>
    d482:	89 81       	ldd	r24, Y+1	; 0x01
    d484:	9a 81       	ldd	r25, Y+2	; 0x02
    d486:	ab 81       	ldd	r26, Y+3	; 0x03
    d488:	bc 81       	ldd	r27, Y+4	; 0x04
    d48a:	89 2b       	or	r24, r25
    d48c:	8a 2b       	or	r24, r26
    d48e:	8b 2b       	or	r24, r27
    d490:	61 f0       	breq	.+24     	; 0xd4aa <si5351_set_freq+0x324>
    d492:	89 81       	ldd	r24, Y+1	; 0x01
    d494:	9a 81       	ldd	r25, Y+2	; 0x02
    d496:	ab 81       	ldd	r26, Y+3	; 0x03
    d498:	bc 81       	ldd	r27, Y+4	; 0x04
    d49a:	80 93 c2 49 	sts	0x49C2, r24	; 0x8049c2 <_ZL8freqVCOB>
    d49e:	90 93 c3 49 	sts	0x49C3, r25	; 0x8049c3 <_ZL8freqVCOB+0x1>
    d4a2:	a0 93 c4 49 	sts	0x49C4, r26	; 0x8049c4 <_ZL8freqVCOB+0x2>
    d4a6:	b0 93 c5 49 	sts	0x49C5, r27	; 0x8049c5 <_ZL8freqVCOB+0x3>
    d4aa:	80 e0       	ldi	r24, 0x00	; 0
    d4ac:	6d 96       	adiw	r28, 0x1d	; 29
    d4ae:	cd bf       	out	0x3d, r28	; 61
    d4b0:	de bf       	out	0x3e, r29	; 62
    d4b2:	df 91       	pop	r29
    d4b4:	cf 91       	pop	r28
    d4b6:	1f 91       	pop	r17
    d4b8:	0f 91       	pop	r16
    d4ba:	ff 90       	pop	r15
    d4bc:	ef 90       	pop	r14
    d4be:	df 90       	pop	r13
    d4c0:	cf 90       	pop	r12
    d4c2:	af 90       	pop	r10
    d4c4:	8f 90       	pop	r8
    d4c6:	08 95       	ret

0000d4c8 <si5351_clock_enable>:
    d4c8:	cf 93       	push	r28
    d4ca:	df 93       	push	r29
    d4cc:	cd b7       	in	r28, 0x3d	; 61
    d4ce:	de b7       	in	r29, 0x3e	; 62
    d4d0:	25 97       	sbiw	r28, 0x05	; 5
    d4d2:	cd bf       	out	0x3d, r28	; 61
    d4d4:	de bf       	out	0x3e, r29	; 62
    d4d6:	8c 83       	std	Y+4, r24	; 0x04
    d4d8:	6d 83       	std	Y+5, r22	; 0x05
    d4da:	ce 01       	movw	r24, r28
    d4dc:	02 96       	adiw	r24, 0x02	; 2
    d4de:	41 e0       	ldi	r20, 0x01	; 1
    d4e0:	bc 01       	movw	r22, r24
    d4e2:	83 e0       	ldi	r24, 0x03	; 3
    d4e4:	0e 94 2b 70 	call	0xe056	; 0xe056 <_Z16si5351_read_bulkhPhh>
    d4e8:	88 23       	and	r24, r24
    d4ea:	11 f0       	breq	.+4      	; 0xd4f0 <si5351_clock_enable+0x28>
    d4ec:	8c ef       	ldi	r24, 0xFC	; 252
    d4ee:	31 c0       	rjmp	.+98     	; 0xd552 <si5351_clock_enable+0x8a>
    d4f0:	8a 81       	ldd	r24, Y+2	; 0x02
    d4f2:	89 83       	std	Y+1, r24	; 0x01
    d4f4:	8d 81       	ldd	r24, Y+5	; 0x05
    d4f6:	88 23       	and	r24, r24
    d4f8:	81 f0       	breq	.+32     	; 0xd51a <si5351_clock_enable+0x52>
    d4fa:	8c 81       	ldd	r24, Y+4	; 0x04
    d4fc:	28 2f       	mov	r18, r24
    d4fe:	30 e0       	ldi	r19, 0x00	; 0
    d500:	81 e0       	ldi	r24, 0x01	; 1
    d502:	90 e0       	ldi	r25, 0x00	; 0
    d504:	02 c0       	rjmp	.+4      	; 0xd50a <si5351_clock_enable+0x42>
    d506:	88 0f       	add	r24, r24
    d508:	99 1f       	adc	r25, r25
    d50a:	2a 95       	dec	r18
    d50c:	e2 f7       	brpl	.-8      	; 0xd506 <si5351_clock_enable+0x3e>
    d50e:	98 2f       	mov	r25, r24
    d510:	90 95       	com	r25
    d512:	89 81       	ldd	r24, Y+1	; 0x01
    d514:	89 23       	and	r24, r25
    d516:	89 83       	std	Y+1, r24	; 0x01
    d518:	0e c0       	rjmp	.+28     	; 0xd536 <si5351_clock_enable+0x6e>
    d51a:	8c 81       	ldd	r24, Y+4	; 0x04
    d51c:	28 2f       	mov	r18, r24
    d51e:	30 e0       	ldi	r19, 0x00	; 0
    d520:	81 e0       	ldi	r24, 0x01	; 1
    d522:	90 e0       	ldi	r25, 0x00	; 0
    d524:	02 c0       	rjmp	.+4      	; 0xd52a <si5351_clock_enable+0x62>
    d526:	88 0f       	add	r24, r24
    d528:	99 1f       	adc	r25, r25
    d52a:	2a 95       	dec	r18
    d52c:	e2 f7       	brpl	.-8      	; 0xd526 <si5351_clock_enable+0x5e>
    d52e:	98 2f       	mov	r25, r24
    d530:	89 81       	ldd	r24, Y+1	; 0x01
    d532:	89 2b       	or	r24, r25
    d534:	89 83       	std	Y+1, r24	; 0x01
    d536:	89 81       	ldd	r24, Y+1	; 0x01
    d538:	8a 83       	std	Y+2, r24	; 0x02
    d53a:	ce 01       	movw	r24, r28
    d53c:	02 96       	adiw	r24, 0x02	; 2
    d53e:	41 e0       	ldi	r20, 0x01	; 1
    d540:	bc 01       	movw	r22, r24
    d542:	83 e0       	ldi	r24, 0x03	; 3
    d544:	0e 94 f9 6f 	call	0xdff2	; 0xdff2 <_Z17si5351_write_bulkhPhh>
    d548:	88 23       	and	r24, r24
    d54a:	11 f0       	breq	.+4      	; 0xd550 <si5351_clock_enable+0x88>
    d54c:	8c ef       	ldi	r24, 0xFC	; 252
    d54e:	01 c0       	rjmp	.+2      	; 0xd552 <si5351_clock_enable+0x8a>
    d550:	80 e0       	ldi	r24, 0x00	; 0
    d552:	25 96       	adiw	r28, 0x05	; 5
    d554:	cd bf       	out	0x3d, r28	; 61
    d556:	de bf       	out	0x3e, r29	; 62
    d558:	df 91       	pop	r29
    d55a:	cf 91       	pop	r28
    d55c:	08 95       	ret

0000d55e <si5351_drive_strength>:
    d55e:	cf 93       	push	r28
    d560:	df 93       	push	r29
    d562:	cd b7       	in	r28, 0x3d	; 61
    d564:	de b7       	in	r29, 0x3e	; 62
    d566:	26 97       	sbiw	r28, 0x06	; 6
    d568:	cd bf       	out	0x3d, r28	; 61
    d56a:	de bf       	out	0x3e, r29	; 62
    d56c:	8d 83       	std	Y+5, r24	; 0x05
    d56e:	6e 83       	std	Y+6, r22	; 0x06
    d570:	83 e0       	ldi	r24, 0x03	; 3
    d572:	8a 83       	std	Y+2, r24	; 0x02
    d574:	8d 81       	ldd	r24, Y+5	; 0x05
    d576:	20 e1       	ldi	r18, 0x10	; 16
    d578:	28 0f       	add	r18, r24
    d57a:	ce 01       	movw	r24, r28
    d57c:	03 96       	adiw	r24, 0x03	; 3
    d57e:	41 e0       	ldi	r20, 0x01	; 1
    d580:	bc 01       	movw	r22, r24
    d582:	82 2f       	mov	r24, r18
    d584:	0e 94 2b 70 	call	0xe056	; 0xe056 <_Z16si5351_read_bulkhPhh>
    d588:	88 23       	and	r24, r24
    d58a:	11 f0       	breq	.+4      	; 0xd590 <si5351_drive_strength+0x32>
    d58c:	8b ef       	ldi	r24, 0xFB	; 251
    d58e:	3e c0       	rjmp	.+124    	; 0xd60c <si5351_drive_strength+0xae>
    d590:	8b 81       	ldd	r24, Y+3	; 0x03
    d592:	89 83       	std	Y+1, r24	; 0x01
    d594:	8e 81       	ldd	r24, Y+6	; 0x06
    d596:	88 2f       	mov	r24, r24
    d598:	90 e0       	ldi	r25, 0x00	; 0
    d59a:	81 30       	cpi	r24, 0x01	; 1
    d59c:	91 05       	cpc	r25, r1
    d59e:	81 f0       	breq	.+32     	; 0xd5c0 <si5351_drive_strength+0x62>
    d5a0:	82 30       	cpi	r24, 0x02	; 2
    d5a2:	91 05       	cpc	r25, r1
    d5a4:	1c f4       	brge	.+6      	; 0xd5ac <si5351_drive_strength+0x4e>
    d5a6:	89 2b       	or	r24, r25
    d5a8:	39 f0       	breq	.+14     	; 0xd5b8 <si5351_drive_strength+0x5a>
    d5aa:	1f c0       	rjmp	.+62     	; 0xd5ea <si5351_drive_strength+0x8c>
    d5ac:	82 30       	cpi	r24, 0x02	; 2
    d5ae:	91 05       	cpc	r25, r1
    d5b0:	71 f0       	breq	.+28     	; 0xd5ce <si5351_drive_strength+0x70>
    d5b2:	03 97       	sbiw	r24, 0x03	; 3
    d5b4:	99 f0       	breq	.+38     	; 0xd5dc <si5351_drive_strength+0x7e>
    d5b6:	19 c0       	rjmp	.+50     	; 0xd5ea <si5351_drive_strength+0x8c>
    d5b8:	89 81       	ldd	r24, Y+1	; 0x01
    d5ba:	8c 7f       	andi	r24, 0xFC	; 252
    d5bc:	89 83       	std	Y+1, r24	; 0x01
    d5be:	15 c0       	rjmp	.+42     	; 0xd5ea <si5351_drive_strength+0x8c>
    d5c0:	89 81       	ldd	r24, Y+1	; 0x01
    d5c2:	8c 7f       	andi	r24, 0xFC	; 252
    d5c4:	89 83       	std	Y+1, r24	; 0x01
    d5c6:	89 81       	ldd	r24, Y+1	; 0x01
    d5c8:	81 60       	ori	r24, 0x01	; 1
    d5ca:	89 83       	std	Y+1, r24	; 0x01
    d5cc:	0e c0       	rjmp	.+28     	; 0xd5ea <si5351_drive_strength+0x8c>
    d5ce:	89 81       	ldd	r24, Y+1	; 0x01
    d5d0:	8c 7f       	andi	r24, 0xFC	; 252
    d5d2:	89 83       	std	Y+1, r24	; 0x01
    d5d4:	89 81       	ldd	r24, Y+1	; 0x01
    d5d6:	82 60       	ori	r24, 0x02	; 2
    d5d8:	89 83       	std	Y+1, r24	; 0x01
    d5da:	07 c0       	rjmp	.+14     	; 0xd5ea <si5351_drive_strength+0x8c>
    d5dc:	89 81       	ldd	r24, Y+1	; 0x01
    d5de:	8c 7f       	andi	r24, 0xFC	; 252
    d5e0:	89 83       	std	Y+1, r24	; 0x01
    d5e2:	89 81       	ldd	r24, Y+1	; 0x01
    d5e4:	83 60       	ori	r24, 0x03	; 3
    d5e6:	89 83       	std	Y+1, r24	; 0x01
    d5e8:	00 00       	nop
    d5ea:	89 81       	ldd	r24, Y+1	; 0x01
    d5ec:	8b 83       	std	Y+3, r24	; 0x03
    d5ee:	8d 81       	ldd	r24, Y+5	; 0x05
    d5f0:	20 e1       	ldi	r18, 0x10	; 16
    d5f2:	28 0f       	add	r18, r24
    d5f4:	ce 01       	movw	r24, r28
    d5f6:	03 96       	adiw	r24, 0x03	; 3
    d5f8:	41 e0       	ldi	r20, 0x01	; 1
    d5fa:	bc 01       	movw	r22, r24
    d5fc:	82 2f       	mov	r24, r18
    d5fe:	0e 94 f9 6f 	call	0xdff2	; 0xdff2 <_Z17si5351_write_bulkhPhh>
    d602:	88 23       	and	r24, r24
    d604:	11 f0       	breq	.+4      	; 0xd60a <si5351_drive_strength+0xac>
    d606:	8b ef       	ldi	r24, 0xFB	; 251
    d608:	01 c0       	rjmp	.+2      	; 0xd60c <si5351_drive_strength+0xae>
    d60a:	80 e0       	ldi	r24, 0x00	; 0
    d60c:	26 96       	adiw	r28, 0x06	; 6
    d60e:	cd bf       	out	0x3d, r28	; 61
    d610:	de bf       	out	0x3e, r29	; 62
    d612:	df 91       	pop	r29
    d614:	cf 91       	pop	r28
    d616:	08 95       	ret

0000d618 <_Z7set_pllm10si5351_pll>:
    d618:	cf 93       	push	r28
    d61a:	df 93       	push	r29
    d61c:	cd b7       	in	r28, 0x3d	; 61
    d61e:	de b7       	in	r29, 0x3e	; 62
    d620:	6c 97       	sbiw	r28, 0x1c	; 28
    d622:	cd bf       	out	0x3d, r28	; 61
    d624:	de bf       	out	0x3e, r29	; 62
    d626:	68 8f       	std	Y+24, r22	; 0x18
    d628:	79 8f       	std	Y+25, r23	; 0x19
    d62a:	8a 8f       	std	Y+26, r24	; 0x1a
    d62c:	9b 8f       	std	Y+27, r25	; 0x1b
    d62e:	4c 8f       	std	Y+28, r20	; 0x1c
    d630:	9e 01       	movw	r18, r28
    d632:	2e 5f       	subi	r18, 0xFE	; 254
    d634:	3f 4f       	sbci	r19, 0xFF	; 255
    d636:	88 8d       	ldd	r24, Y+24	; 0x18
    d638:	99 8d       	ldd	r25, Y+25	; 0x19
    d63a:	aa 8d       	ldd	r26, Y+26	; 0x1a
    d63c:	bb 8d       	ldd	r27, Y+27	; 0x1b
    d63e:	a9 01       	movw	r20, r18
    d640:	bc 01       	movw	r22, r24
    d642:	cd 01       	movw	r24, r26
    d644:	0e 94 d5 6b 	call	0xd7aa	; 0xd7aa <_Z8pll_calcmP13u_si5351_regs>
    d648:	88 23       	and	r24, r24
    d64a:	11 f0       	breq	.+4      	; 0xd650 <_Z7set_pllm10si5351_pll+0x38>
    d64c:	81 e0       	ldi	r24, 0x01	; 1
    d64e:	a7 c0       	rjmp	.+334    	; 0xd79e <_Z7set_pllm10si5351_pll+0x186>
    d650:	19 82       	std	Y+1, r1	; 0x01
    d652:	89 81       	ldd	r24, Y+1	; 0x01
    d654:	91 e0       	ldi	r25, 0x01	; 1
    d656:	98 0f       	add	r25, r24
    d658:	99 83       	std	Y+1, r25	; 0x01
    d65a:	88 2f       	mov	r24, r24
    d65c:	90 e0       	ldi	r25, 0x00	; 0
    d65e:	4b 85       	ldd	r20, Y+11	; 0x0b
    d660:	9e 01       	movw	r18, r28
    d662:	22 5f       	subi	r18, 0xF2	; 242
    d664:	3f 4f       	sbci	r19, 0xFF	; 255
    d666:	82 0f       	add	r24, r18
    d668:	93 1f       	adc	r25, r19
    d66a:	fc 01       	movw	r30, r24
    d66c:	40 83       	st	Z, r20
    d66e:	89 81       	ldd	r24, Y+1	; 0x01
    d670:	91 e0       	ldi	r25, 0x01	; 1
    d672:	98 0f       	add	r25, r24
    d674:	99 83       	std	Y+1, r25	; 0x01
    d676:	88 2f       	mov	r24, r24
    d678:	90 e0       	ldi	r25, 0x00	; 0
    d67a:	4a 85       	ldd	r20, Y+10	; 0x0a
    d67c:	9e 01       	movw	r18, r28
    d67e:	22 5f       	subi	r18, 0xF2	; 242
    d680:	3f 4f       	sbci	r19, 0xFF	; 255
    d682:	82 0f       	add	r24, r18
    d684:	93 1f       	adc	r25, r19
    d686:	fc 01       	movw	r30, r24
    d688:	40 83       	st	Z, r20
    d68a:	89 81       	ldd	r24, Y+1	; 0x01
    d68c:	91 e0       	ldi	r25, 0x01	; 1
    d68e:	98 0f       	add	r25, r24
    d690:	99 83       	std	Y+1, r25	; 0x01
    d692:	88 2f       	mov	r24, r24
    d694:	90 e0       	ldi	r25, 0x00	; 0
    d696:	2c 81       	ldd	r18, Y+4	; 0x04
    d698:	42 2f       	mov	r20, r18
    d69a:	43 70       	andi	r20, 0x03	; 3
    d69c:	9e 01       	movw	r18, r28
    d69e:	22 5f       	subi	r18, 0xF2	; 242
    d6a0:	3f 4f       	sbci	r19, 0xFF	; 255
    d6a2:	82 0f       	add	r24, r18
    d6a4:	93 1f       	adc	r25, r19
    d6a6:	fc 01       	movw	r30, r24
    d6a8:	40 83       	st	Z, r20
    d6aa:	89 81       	ldd	r24, Y+1	; 0x01
    d6ac:	91 e0       	ldi	r25, 0x01	; 1
    d6ae:	98 0f       	add	r25, r24
    d6b0:	99 83       	std	Y+1, r25	; 0x01
    d6b2:	88 2f       	mov	r24, r24
    d6b4:	90 e0       	ldi	r25, 0x00	; 0
    d6b6:	4b 81       	ldd	r20, Y+3	; 0x03
    d6b8:	9e 01       	movw	r18, r28
    d6ba:	22 5f       	subi	r18, 0xF2	; 242
    d6bc:	3f 4f       	sbci	r19, 0xFF	; 255
    d6be:	82 0f       	add	r24, r18
    d6c0:	93 1f       	adc	r25, r19
    d6c2:	fc 01       	movw	r30, r24
    d6c4:	40 83       	st	Z, r20
    d6c6:	89 81       	ldd	r24, Y+1	; 0x01
    d6c8:	91 e0       	ldi	r25, 0x01	; 1
    d6ca:	98 0f       	add	r25, r24
    d6cc:	99 83       	std	Y+1, r25	; 0x01
    d6ce:	88 2f       	mov	r24, r24
    d6d0:	90 e0       	ldi	r25, 0x00	; 0
    d6d2:	4a 81       	ldd	r20, Y+2	; 0x02
    d6d4:	9e 01       	movw	r18, r28
    d6d6:	22 5f       	subi	r18, 0xF2	; 242
    d6d8:	3f 4f       	sbci	r19, 0xFF	; 255
    d6da:	82 0f       	add	r24, r18
    d6dc:	93 1f       	adc	r25, r19
    d6de:	fc 01       	movw	r30, r24
    d6e0:	40 83       	st	Z, r20
    d6e2:	89 81       	ldd	r24, Y+1	; 0x01
    d6e4:	88 2f       	mov	r24, r24
    d6e6:	90 e0       	ldi	r25, 0x00	; 0
    d6e8:	2c 85       	ldd	r18, Y+12	; 0x0c
    d6ea:	42 2f       	mov	r20, r18
    d6ec:	42 95       	swap	r20
    d6ee:	40 7f       	andi	r20, 0xF0	; 240
    d6f0:	9e 01       	movw	r18, r28
    d6f2:	22 5f       	subi	r18, 0xF2	; 242
    d6f4:	3f 4f       	sbci	r19, 0xFF	; 255
    d6f6:	82 0f       	add	r24, r18
    d6f8:	93 1f       	adc	r25, r19
    d6fa:	fc 01       	movw	r30, r24
    d6fc:	40 83       	st	Z, r20
    d6fe:	29 81       	ldd	r18, Y+1	; 0x01
    d700:	81 e0       	ldi	r24, 0x01	; 1
    d702:	82 0f       	add	r24, r18
    d704:	89 83       	std	Y+1, r24	; 0x01
    d706:	82 2f       	mov	r24, r18
    d708:	90 e0       	ldi	r25, 0x00	; 0
    d70a:	22 2f       	mov	r18, r18
    d70c:	30 e0       	ldi	r19, 0x00	; 0
    d70e:	ae 01       	movw	r20, r28
    d710:	42 5f       	subi	r20, 0xF2	; 242
    d712:	5f 4f       	sbci	r21, 0xFF	; 255
    d714:	24 0f       	add	r18, r20
    d716:	35 1f       	adc	r19, r21
    d718:	f9 01       	movw	r30, r18
    d71a:	30 81       	ld	r19, Z
    d71c:	28 85       	ldd	r18, Y+8	; 0x08
    d71e:	2f 70       	andi	r18, 0x0F	; 15
    d720:	43 2f       	mov	r20, r19
    d722:	42 0f       	add	r20, r18
    d724:	9e 01       	movw	r18, r28
    d726:	22 5f       	subi	r18, 0xF2	; 242
    d728:	3f 4f       	sbci	r19, 0xFF	; 255
    d72a:	82 0f       	add	r24, r18
    d72c:	93 1f       	adc	r25, r19
    d72e:	fc 01       	movw	r30, r24
    d730:	40 83       	st	Z, r20
    d732:	89 81       	ldd	r24, Y+1	; 0x01
    d734:	91 e0       	ldi	r25, 0x01	; 1
    d736:	98 0f       	add	r25, r24
    d738:	99 83       	std	Y+1, r25	; 0x01
    d73a:	88 2f       	mov	r24, r24
    d73c:	90 e0       	ldi	r25, 0x00	; 0
    d73e:	4f 81       	ldd	r20, Y+7	; 0x07
    d740:	9e 01       	movw	r18, r28
    d742:	22 5f       	subi	r18, 0xF2	; 242
    d744:	3f 4f       	sbci	r19, 0xFF	; 255
    d746:	82 0f       	add	r24, r18
    d748:	93 1f       	adc	r25, r19
    d74a:	fc 01       	movw	r30, r24
    d74c:	40 83       	st	Z, r20
    d74e:	89 81       	ldd	r24, Y+1	; 0x01
    d750:	91 e0       	ldi	r25, 0x01	; 1
    d752:	98 0f       	add	r25, r24
    d754:	99 83       	std	Y+1, r25	; 0x01
    d756:	88 2f       	mov	r24, r24
    d758:	90 e0       	ldi	r25, 0x00	; 0
    d75a:	4e 81       	ldd	r20, Y+6	; 0x06
    d75c:	9e 01       	movw	r18, r28
    d75e:	22 5f       	subi	r18, 0xF2	; 242
    d760:	3f 4f       	sbci	r19, 0xFF	; 255
    d762:	82 0f       	add	r24, r18
    d764:	93 1f       	adc	r25, r19
    d766:	fc 01       	movw	r30, r24
    d768:	40 83       	st	Z, r20
    d76a:	8c 8d       	ldd	r24, Y+28	; 0x1c
    d76c:	81 30       	cpi	r24, 0x01	; 1
    d76e:	59 f4       	brne	.+22     	; 0xd786 <_Z7set_pllm10si5351_pll+0x16e>
    d770:	ce 01       	movw	r24, r28
    d772:	0e 96       	adiw	r24, 0x0e	; 14
    d774:	49 81       	ldd	r20, Y+1	; 0x01
    d776:	bc 01       	movw	r22, r24
    d778:	8a e1       	ldi	r24, 0x1A	; 26
    d77a:	0e 94 f9 6f 	call	0xdff2	; 0xdff2 <_Z17si5351_write_bulkhPhh>
    d77e:	88 23       	and	r24, r24
    d780:	69 f0       	breq	.+26     	; 0xd79c <_Z7set_pllm10si5351_pll+0x184>
    d782:	81 e0       	ldi	r24, 0x01	; 1
    d784:	0c c0       	rjmp	.+24     	; 0xd79e <_Z7set_pllm10si5351_pll+0x186>
    d786:	ce 01       	movw	r24, r28
    d788:	0e 96       	adiw	r24, 0x0e	; 14
    d78a:	49 81       	ldd	r20, Y+1	; 0x01
    d78c:	bc 01       	movw	r22, r24
    d78e:	82 e2       	ldi	r24, 0x22	; 34
    d790:	0e 94 f9 6f 	call	0xdff2	; 0xdff2 <_Z17si5351_write_bulkhPhh>
    d794:	88 23       	and	r24, r24
    d796:	11 f0       	breq	.+4      	; 0xd79c <_Z7set_pllm10si5351_pll+0x184>
    d798:	81 e0       	ldi	r24, 0x01	; 1
    d79a:	01 c0       	rjmp	.+2      	; 0xd79e <_Z7set_pllm10si5351_pll+0x186>
    d79c:	80 e0       	ldi	r24, 0x00	; 0
    d79e:	6c 96       	adiw	r28, 0x1c	; 28
    d7a0:	cd bf       	out	0x3d, r28	; 61
    d7a2:	de bf       	out	0x3e, r29	; 62
    d7a4:	df 91       	pop	r29
    d7a6:	cf 91       	pop	r28
    d7a8:	08 95       	ret

0000d7aa <_Z8pll_calcmP13u_si5351_regs>:
    d7aa:	cf 93       	push	r28
    d7ac:	df 93       	push	r29
    d7ae:	cd b7       	in	r28, 0x3d	; 61
    d7b0:	de b7       	in	r29, 0x3e	; 62
    d7b2:	6e 97       	sbiw	r28, 0x1e	; 30
    d7b4:	cd bf       	out	0x3d, r28	; 61
    d7b6:	de bf       	out	0x3e, r29	; 62
    d7b8:	69 8f       	std	Y+25, r22	; 0x19
    d7ba:	7a 8f       	std	Y+26, r23	; 0x1a
    d7bc:	8b 8f       	std	Y+27, r24	; 0x1b
    d7be:	9c 8f       	std	Y+28, r25	; 0x1c
    d7c0:	4d 8f       	std	Y+29, r20	; 0x1d
    d7c2:	5e 8f       	std	Y+30, r21	; 0x1e
    d7c4:	80 91 56 40 	lds	r24, 0x4056	; 0x804056 <_ZL9xtal_freq>
    d7c8:	90 91 57 40 	lds	r25, 0x4057	; 0x804057 <_ZL9xtal_freq+0x1>
    d7cc:	a0 91 58 40 	lds	r26, 0x4058	; 0x804058 <_ZL9xtal_freq+0x2>
    d7d0:	b0 91 59 40 	lds	r27, 0x4059	; 0x804059 <_ZL9xtal_freq+0x3>
    d7d4:	89 83       	std	Y+1, r24	; 0x01
    d7d6:	9a 83       	std	Y+2, r25	; 0x02
    d7d8:	ab 83       	std	Y+3, r26	; 0x03
    d7da:	bc 83       	std	Y+4, r27	; 0x04
    d7dc:	89 8d       	ldd	r24, Y+25	; 0x19
    d7de:	9a 8d       	ldd	r25, Y+26	; 0x1a
    d7e0:	ab 8d       	ldd	r26, Y+27	; 0x1b
    d7e2:	bc 8d       	ldd	r27, Y+28	; 0x1c
    d7e4:	29 81       	ldd	r18, Y+1	; 0x01
    d7e6:	3a 81       	ldd	r19, Y+2	; 0x02
    d7e8:	4b 81       	ldd	r20, Y+3	; 0x03
    d7ea:	5c 81       	ldd	r21, Y+4	; 0x04
    d7ec:	bc 01       	movw	r22, r24
    d7ee:	cd 01       	movw	r24, r26
    d7f0:	0e 94 3e 7d 	call	0xfa7c	; 0xfa7c <__udivmodsi4>
    d7f4:	da 01       	movw	r26, r20
    d7f6:	c9 01       	movw	r24, r18
    d7f8:	8d 83       	std	Y+5, r24	; 0x05
    d7fa:	9e 83       	std	Y+6, r25	; 0x06
    d7fc:	af 83       	std	Y+7, r26	; 0x07
    d7fe:	b8 87       	std	Y+8, r27	; 0x08
    d800:	89 8d       	ldd	r24, Y+25	; 0x19
    d802:	9a 8d       	ldd	r25, Y+26	; 0x1a
    d804:	ab 8d       	ldd	r26, Y+27	; 0x1b
    d806:	bc 8d       	ldd	r27, Y+28	; 0x1c
    d808:	29 81       	ldd	r18, Y+1	; 0x01
    d80a:	3a 81       	ldd	r19, Y+2	; 0x02
    d80c:	4b 81       	ldd	r20, Y+3	; 0x03
    d80e:	5c 81       	ldd	r21, Y+4	; 0x04
    d810:	bc 01       	movw	r22, r24
    d812:	cd 01       	movw	r24, r26
    d814:	0e 94 3e 7d 	call	0xfa7c	; 0xfa7c <__udivmodsi4>
    d818:	dc 01       	movw	r26, r24
    d81a:	cb 01       	movw	r24, r22
    d81c:	89 8b       	std	Y+17, r24	; 0x11
    d81e:	9a 8b       	std	Y+18, r25	; 0x12
    d820:	ab 8b       	std	Y+19, r26	; 0x13
    d822:	bc 8b       	std	Y+20, r27	; 0x14
    d824:	89 81       	ldd	r24, Y+1	; 0x01
    d826:	9a 81       	ldd	r25, Y+2	; 0x02
    d828:	ab 81       	ldd	r26, Y+3	; 0x03
    d82a:	bc 81       	ldd	r27, Y+4	; 0x04
    d82c:	8d 8b       	std	Y+21, r24	; 0x15
    d82e:	9e 8b       	std	Y+22, r25	; 0x16
    d830:	af 8b       	std	Y+23, r26	; 0x17
    d832:	b8 8f       	std	Y+24, r27	; 0x18
    d834:	9e 01       	movw	r18, r28
    d836:	2b 5e       	subi	r18, 0xEB	; 235
    d838:	3f 4f       	sbci	r19, 0xFF	; 255
    d83a:	ce 01       	movw	r24, r28
    d83c:	41 96       	adiw	r24, 0x11	; 17
    d83e:	b9 01       	movw	r22, r18
    d840:	0e 94 bb 6c 	call	0xd976	; 0xd976 <_Z13reduce_by_gcdPmS_>
    d844:	89 89       	ldd	r24, Y+17	; 0x11
    d846:	9a 89       	ldd	r25, Y+18	; 0x12
    d848:	ab 89       	ldd	r26, Y+19	; 0x13
    d84a:	bc 89       	ldd	r27, Y+20	; 0x14
    d84c:	88 0f       	add	r24, r24
    d84e:	99 1f       	adc	r25, r25
    d850:	aa 1f       	adc	r26, r26
    d852:	bb 1f       	adc	r27, r27
    d854:	88 0f       	add	r24, r24
    d856:	99 1f       	adc	r25, r25
    d858:	aa 1f       	adc	r26, r26
    d85a:	bb 1f       	adc	r27, r27
    d85c:	88 0f       	add	r24, r24
    d85e:	99 1f       	adc	r25, r25
    d860:	aa 1f       	adc	r26, r26
    d862:	bb 1f       	adc	r27, r27
    d864:	88 0f       	add	r24, r24
    d866:	99 1f       	adc	r25, r25
    d868:	aa 1f       	adc	r26, r26
    d86a:	bb 1f       	adc	r27, r27
    d86c:	88 0f       	add	r24, r24
    d86e:	99 1f       	adc	r25, r25
    d870:	aa 1f       	adc	r26, r26
    d872:	bb 1f       	adc	r27, r27
    d874:	88 0f       	add	r24, r24
    d876:	99 1f       	adc	r25, r25
    d878:	aa 1f       	adc	r26, r26
    d87a:	bb 1f       	adc	r27, r27
    d87c:	88 0f       	add	r24, r24
    d87e:	99 1f       	adc	r25, r25
    d880:	aa 1f       	adc	r26, r26
    d882:	bb 1f       	adc	r27, r27
    d884:	89 87       	std	Y+9, r24	; 0x09
    d886:	9a 87       	std	Y+10, r25	; 0x0a
    d888:	ab 87       	std	Y+11, r26	; 0x0b
    d88a:	bc 87       	std	Y+12, r27	; 0x0c
    d88c:	2d 89       	ldd	r18, Y+21	; 0x15
    d88e:	3e 89       	ldd	r19, Y+22	; 0x16
    d890:	4f 89       	ldd	r20, Y+23	; 0x17
    d892:	58 8d       	ldd	r21, Y+24	; 0x18
    d894:	89 85       	ldd	r24, Y+9	; 0x09
    d896:	9a 85       	ldd	r25, Y+10	; 0x0a
    d898:	ab 85       	ldd	r26, Y+11	; 0x0b
    d89a:	bc 85       	ldd	r27, Y+12	; 0x0c
    d89c:	bc 01       	movw	r22, r24
    d89e:	cd 01       	movw	r24, r26
    d8a0:	0e 94 3e 7d 	call	0xfa7c	; 0xfa7c <__udivmodsi4>
    d8a4:	da 01       	movw	r26, r20
    d8a6:	c9 01       	movw	r24, r18
    d8a8:	8d 87       	std	Y+13, r24	; 0x0d
    d8aa:	9e 87       	std	Y+14, r25	; 0x0e
    d8ac:	af 87       	std	Y+15, r26	; 0x0f
    d8ae:	b8 8b       	std	Y+16, r27	; 0x10
    d8b0:	8d 81       	ldd	r24, Y+5	; 0x05
    d8b2:	9e 81       	ldd	r25, Y+6	; 0x06
    d8b4:	af 81       	ldd	r26, Y+7	; 0x07
    d8b6:	b8 85       	ldd	r27, Y+8	; 0x08
    d8b8:	88 0f       	add	r24, r24
    d8ba:	99 1f       	adc	r25, r25
    d8bc:	aa 1f       	adc	r26, r26
    d8be:	bb 1f       	adc	r27, r27
    d8c0:	88 0f       	add	r24, r24
    d8c2:	99 1f       	adc	r25, r25
    d8c4:	aa 1f       	adc	r26, r26
    d8c6:	bb 1f       	adc	r27, r27
    d8c8:	88 0f       	add	r24, r24
    d8ca:	99 1f       	adc	r25, r25
    d8cc:	aa 1f       	adc	r26, r26
    d8ce:	bb 1f       	adc	r27, r27
    d8d0:	88 0f       	add	r24, r24
    d8d2:	99 1f       	adc	r25, r25
    d8d4:	aa 1f       	adc	r26, r26
    d8d6:	bb 1f       	adc	r27, r27
    d8d8:	88 0f       	add	r24, r24
    d8da:	99 1f       	adc	r25, r25
    d8dc:	aa 1f       	adc	r26, r26
    d8de:	bb 1f       	adc	r27, r27
    d8e0:	88 0f       	add	r24, r24
    d8e2:	99 1f       	adc	r25, r25
    d8e4:	aa 1f       	adc	r26, r26
    d8e6:	bb 1f       	adc	r27, r27
    d8e8:	88 0f       	add	r24, r24
    d8ea:	99 1f       	adc	r25, r25
    d8ec:	aa 1f       	adc	r26, r26
    d8ee:	bb 1f       	adc	r27, r27
    d8f0:	9c 01       	movw	r18, r24
    d8f2:	ad 01       	movw	r20, r26
    d8f4:	8d 85       	ldd	r24, Y+13	; 0x0d
    d8f6:	9e 85       	ldd	r25, Y+14	; 0x0e
    d8f8:	af 85       	ldd	r26, Y+15	; 0x0f
    d8fa:	b8 89       	ldd	r27, Y+16	; 0x10
    d8fc:	82 0f       	add	r24, r18
    d8fe:	93 1f       	adc	r25, r19
    d900:	a4 1f       	adc	r26, r20
    d902:	b5 1f       	adc	r27, r21
    d904:	92 50       	subi	r25, 0x02	; 2
    d906:	a1 09       	sbc	r26, r1
    d908:	b1 09       	sbc	r27, r1
    d90a:	2d 8d       	ldd	r18, Y+29	; 0x1d
    d90c:	3e 8d       	ldd	r19, Y+30	; 0x1e
    d90e:	f9 01       	movw	r30, r18
    d910:	80 83       	st	Z, r24
    d912:	91 83       	std	Z+1, r25	; 0x01
    d914:	a2 83       	std	Z+2, r26	; 0x02
    d916:	b3 83       	std	Z+3, r27	; 0x03
    d918:	2d 89       	ldd	r18, Y+21	; 0x15
    d91a:	3e 89       	ldd	r19, Y+22	; 0x16
    d91c:	4f 89       	ldd	r20, Y+23	; 0x17
    d91e:	58 8d       	ldd	r21, Y+24	; 0x18
    d920:	8d 85       	ldd	r24, Y+13	; 0x0d
    d922:	9e 85       	ldd	r25, Y+14	; 0x0e
    d924:	af 85       	ldd	r26, Y+15	; 0x0f
    d926:	b8 89       	ldd	r27, Y+16	; 0x10
    d928:	bc 01       	movw	r22, r24
    d92a:	cd 01       	movw	r24, r26
    d92c:	0e 94 06 7d 	call	0xfa0c	; 0xfa0c <__mulsi3>
    d930:	9b 01       	movw	r18, r22
    d932:	ac 01       	movw	r20, r24
    d934:	89 85       	ldd	r24, Y+9	; 0x09
    d936:	9a 85       	ldd	r25, Y+10	; 0x0a
    d938:	ab 85       	ldd	r26, Y+11	; 0x0b
    d93a:	bc 85       	ldd	r27, Y+12	; 0x0c
    d93c:	82 1b       	sub	r24, r18
    d93e:	93 0b       	sbc	r25, r19
    d940:	a4 0b       	sbc	r26, r20
    d942:	b5 0b       	sbc	r27, r21
    d944:	2d 8d       	ldd	r18, Y+29	; 0x1d
    d946:	3e 8d       	ldd	r19, Y+30	; 0x1e
    d948:	f9 01       	movw	r30, r18
    d94a:	84 83       	std	Z+4, r24	; 0x04
    d94c:	95 83       	std	Z+5, r25	; 0x05
    d94e:	a6 83       	std	Z+6, r26	; 0x06
    d950:	b7 83       	std	Z+7, r27	; 0x07
    d952:	8d 89       	ldd	r24, Y+21	; 0x15
    d954:	9e 89       	ldd	r25, Y+22	; 0x16
    d956:	af 89       	ldd	r26, Y+23	; 0x17
    d958:	b8 8d       	ldd	r27, Y+24	; 0x18
    d95a:	2d 8d       	ldd	r18, Y+29	; 0x1d
    d95c:	3e 8d       	ldd	r19, Y+30	; 0x1e
    d95e:	f9 01       	movw	r30, r18
    d960:	80 87       	std	Z+8, r24	; 0x08
    d962:	91 87       	std	Z+9, r25	; 0x09
    d964:	a2 87       	std	Z+10, r26	; 0x0a
    d966:	b3 87       	std	Z+11, r27	; 0x0b
    d968:	80 e0       	ldi	r24, 0x00	; 0
    d96a:	6e 96       	adiw	r28, 0x1e	; 30
    d96c:	cd bf       	out	0x3d, r28	; 61
    d96e:	de bf       	out	0x3e, r29	; 62
    d970:	df 91       	pop	r29
    d972:	cf 91       	pop	r28
    d974:	08 95       	ret

0000d976 <_Z13reduce_by_gcdPmS_>:
    d976:	cf 93       	push	r28
    d978:	df 93       	push	r29
    d97a:	cd b7       	in	r28, 0x3d	; 61
    d97c:	de b7       	in	r29, 0x3e	; 62
    d97e:	60 97       	sbiw	r28, 0x10	; 16
    d980:	cd bf       	out	0x3d, r28	; 61
    d982:	de bf       	out	0x3e, r29	; 62
    d984:	8d 87       	std	Y+13, r24	; 0x0d
    d986:	9e 87       	std	Y+14, r25	; 0x0e
    d988:	6f 87       	std	Y+15, r22	; 0x0f
    d98a:	78 8b       	std	Y+16, r23	; 0x10
    d98c:	8d 85       	ldd	r24, Y+13	; 0x0d
    d98e:	9e 85       	ldd	r25, Y+14	; 0x0e
    d990:	fc 01       	movw	r30, r24
    d992:	80 81       	ld	r24, Z
    d994:	91 81       	ldd	r25, Z+1	; 0x01
    d996:	a2 81       	ldd	r26, Z+2	; 0x02
    d998:	b3 81       	ldd	r27, Z+3	; 0x03
    d99a:	89 87       	std	Y+9, r24	; 0x09
    d99c:	9a 87       	std	Y+10, r25	; 0x0a
    d99e:	ab 87       	std	Y+11, r26	; 0x0b
    d9a0:	bc 87       	std	Y+12, r27	; 0x0c
    d9a2:	8f 85       	ldd	r24, Y+15	; 0x0f
    d9a4:	98 89       	ldd	r25, Y+16	; 0x10
    d9a6:	fc 01       	movw	r30, r24
    d9a8:	80 81       	ld	r24, Z
    d9aa:	91 81       	ldd	r25, Z+1	; 0x01
    d9ac:	a2 81       	ldd	r26, Z+2	; 0x02
    d9ae:	b3 81       	ldd	r27, Z+3	; 0x03
    d9b0:	8d 83       	std	Y+5, r24	; 0x05
    d9b2:	9e 83       	std	Y+6, r25	; 0x06
    d9b4:	af 83       	std	Y+7, r26	; 0x07
    d9b6:	b8 87       	std	Y+8, r27	; 0x08
    d9b8:	89 85       	ldd	r24, Y+9	; 0x09
    d9ba:	9a 85       	ldd	r25, Y+10	; 0x0a
    d9bc:	ab 85       	ldd	r26, Y+11	; 0x0b
    d9be:	bc 85       	ldd	r27, Y+12	; 0x0c
    d9c0:	89 2b       	or	r24, r25
    d9c2:	8a 2b       	or	r24, r26
    d9c4:	8b 2b       	or	r24, r27
    d9c6:	09 f4       	brne	.+2      	; 0xd9ca <_Z13reduce_by_gcdPmS_+0x54>
    d9c8:	80 c0       	rjmp	.+256    	; 0xdaca <_Z13reduce_by_gcdPmS_+0x154>
    d9ca:	8d 81       	ldd	r24, Y+5	; 0x05
    d9cc:	9e 81       	ldd	r25, Y+6	; 0x06
    d9ce:	af 81       	ldd	r26, Y+7	; 0x07
    d9d0:	b8 85       	ldd	r27, Y+8	; 0x08
    d9d2:	89 2b       	or	r24, r25
    d9d4:	8a 2b       	or	r24, r26
    d9d6:	8b 2b       	or	r24, r27
    d9d8:	09 f4       	brne	.+2      	; 0xd9dc <_Z13reduce_by_gcdPmS_+0x66>
    d9da:	77 c0       	rjmp	.+238    	; 0xdaca <_Z13reduce_by_gcdPmS_+0x154>
    d9dc:	89 85       	ldd	r24, Y+9	; 0x09
    d9de:	9a 85       	ldd	r25, Y+10	; 0x0a
    d9e0:	ab 85       	ldd	r26, Y+11	; 0x0b
    d9e2:	bc 85       	ldd	r27, Y+12	; 0x0c
    d9e4:	2d 81       	ldd	r18, Y+5	; 0x05
    d9e6:	3e 81       	ldd	r19, Y+6	; 0x06
    d9e8:	4f 81       	ldd	r20, Y+7	; 0x07
    d9ea:	58 85       	ldd	r21, Y+8	; 0x08
    d9ec:	bc 01       	movw	r22, r24
    d9ee:	cd 01       	movw	r24, r26
    d9f0:	0e 94 3e 7d 	call	0xfa7c	; 0xfa7c <__udivmodsi4>
    d9f4:	dc 01       	movw	r26, r24
    d9f6:	cb 01       	movw	r24, r22
    d9f8:	89 83       	std	Y+1, r24	; 0x01
    d9fa:	9a 83       	std	Y+2, r25	; 0x02
    d9fc:	ab 83       	std	Y+3, r26	; 0x03
    d9fe:	bc 83       	std	Y+4, r27	; 0x04
    da00:	89 81       	ldd	r24, Y+1	; 0x01
    da02:	9a 81       	ldd	r25, Y+2	; 0x02
    da04:	ab 81       	ldd	r26, Y+3	; 0x03
    da06:	bc 81       	ldd	r27, Y+4	; 0x04
    da08:	89 2b       	or	r24, r25
    da0a:	8a 2b       	or	r24, r26
    da0c:	8b 2b       	or	r24, r27
    da0e:	19 f1       	breq	.+70     	; 0xda56 <_Z13reduce_by_gcdPmS_+0xe0>
    da10:	8d 81       	ldd	r24, Y+5	; 0x05
    da12:	9e 81       	ldd	r25, Y+6	; 0x06
    da14:	af 81       	ldd	r26, Y+7	; 0x07
    da16:	b8 85       	ldd	r27, Y+8	; 0x08
    da18:	89 87       	std	Y+9, r24	; 0x09
    da1a:	9a 87       	std	Y+10, r25	; 0x0a
    da1c:	ab 87       	std	Y+11, r26	; 0x0b
    da1e:	bc 87       	std	Y+12, r27	; 0x0c
    da20:	89 81       	ldd	r24, Y+1	; 0x01
    da22:	9a 81       	ldd	r25, Y+2	; 0x02
    da24:	ab 81       	ldd	r26, Y+3	; 0x03
    da26:	bc 81       	ldd	r27, Y+4	; 0x04
    da28:	8d 83       	std	Y+5, r24	; 0x05
    da2a:	9e 83       	std	Y+6, r25	; 0x06
    da2c:	af 83       	std	Y+7, r26	; 0x07
    da2e:	b8 87       	std	Y+8, r27	; 0x08
    da30:	89 85       	ldd	r24, Y+9	; 0x09
    da32:	9a 85       	ldd	r25, Y+10	; 0x0a
    da34:	ab 85       	ldd	r26, Y+11	; 0x0b
    da36:	bc 85       	ldd	r27, Y+12	; 0x0c
    da38:	2d 81       	ldd	r18, Y+5	; 0x05
    da3a:	3e 81       	ldd	r19, Y+6	; 0x06
    da3c:	4f 81       	ldd	r20, Y+7	; 0x07
    da3e:	58 85       	ldd	r21, Y+8	; 0x08
    da40:	bc 01       	movw	r22, r24
    da42:	cd 01       	movw	r24, r26
    da44:	0e 94 3e 7d 	call	0xfa7c	; 0xfa7c <__udivmodsi4>
    da48:	dc 01       	movw	r26, r24
    da4a:	cb 01       	movw	r24, r22
    da4c:	89 83       	std	Y+1, r24	; 0x01
    da4e:	9a 83       	std	Y+2, r25	; 0x02
    da50:	ab 83       	std	Y+3, r26	; 0x03
    da52:	bc 83       	std	Y+4, r27	; 0x04
    da54:	d5 cf       	rjmp	.-86     	; 0xda00 <_Z13reduce_by_gcdPmS_+0x8a>
    da56:	8d 81       	ldd	r24, Y+5	; 0x05
    da58:	9e 81       	ldd	r25, Y+6	; 0x06
    da5a:	af 81       	ldd	r26, Y+7	; 0x07
    da5c:	b8 85       	ldd	r27, Y+8	; 0x08
    da5e:	02 97       	sbiw	r24, 0x02	; 2
    da60:	a1 05       	cpc	r26, r1
    da62:	b1 05       	cpc	r27, r1
    da64:	a0 f1       	brcs	.+104    	; 0xdace <_Z13reduce_by_gcdPmS_+0x158>
    da66:	8d 85       	ldd	r24, Y+13	; 0x0d
    da68:	9e 85       	ldd	r25, Y+14	; 0x0e
    da6a:	fc 01       	movw	r30, r24
    da6c:	80 81       	ld	r24, Z
    da6e:	91 81       	ldd	r25, Z+1	; 0x01
    da70:	a2 81       	ldd	r26, Z+2	; 0x02
    da72:	b3 81       	ldd	r27, Z+3	; 0x03
    da74:	2d 81       	ldd	r18, Y+5	; 0x05
    da76:	3e 81       	ldd	r19, Y+6	; 0x06
    da78:	4f 81       	ldd	r20, Y+7	; 0x07
    da7a:	58 85       	ldd	r21, Y+8	; 0x08
    da7c:	bc 01       	movw	r22, r24
    da7e:	cd 01       	movw	r24, r26
    da80:	0e 94 3e 7d 	call	0xfa7c	; 0xfa7c <__udivmodsi4>
    da84:	da 01       	movw	r26, r20
    da86:	c9 01       	movw	r24, r18
    da88:	2d 85       	ldd	r18, Y+13	; 0x0d
    da8a:	3e 85       	ldd	r19, Y+14	; 0x0e
    da8c:	f9 01       	movw	r30, r18
    da8e:	80 83       	st	Z, r24
    da90:	91 83       	std	Z+1, r25	; 0x01
    da92:	a2 83       	std	Z+2, r26	; 0x02
    da94:	b3 83       	std	Z+3, r27	; 0x03
    da96:	8f 85       	ldd	r24, Y+15	; 0x0f
    da98:	98 89       	ldd	r25, Y+16	; 0x10
    da9a:	fc 01       	movw	r30, r24
    da9c:	80 81       	ld	r24, Z
    da9e:	91 81       	ldd	r25, Z+1	; 0x01
    daa0:	a2 81       	ldd	r26, Z+2	; 0x02
    daa2:	b3 81       	ldd	r27, Z+3	; 0x03
    daa4:	2d 81       	ldd	r18, Y+5	; 0x05
    daa6:	3e 81       	ldd	r19, Y+6	; 0x06
    daa8:	4f 81       	ldd	r20, Y+7	; 0x07
    daaa:	58 85       	ldd	r21, Y+8	; 0x08
    daac:	bc 01       	movw	r22, r24
    daae:	cd 01       	movw	r24, r26
    dab0:	0e 94 3e 7d 	call	0xfa7c	; 0xfa7c <__udivmodsi4>
    dab4:	da 01       	movw	r26, r20
    dab6:	c9 01       	movw	r24, r18
    dab8:	2f 85       	ldd	r18, Y+15	; 0x0f
    daba:	38 89       	ldd	r19, Y+16	; 0x10
    dabc:	f9 01       	movw	r30, r18
    dabe:	80 83       	st	Z, r24
    dac0:	91 83       	std	Z+1, r25	; 0x01
    dac2:	a2 83       	std	Z+2, r26	; 0x02
    dac4:	b3 83       	std	Z+3, r27	; 0x03
    dac6:	00 00       	nop
    dac8:	02 c0       	rjmp	.+4      	; 0xdace <_Z13reduce_by_gcdPmS_+0x158>
    daca:	00 00       	nop
    dacc:	01 c0       	rjmp	.+2      	; 0xdad0 <_Z13reduce_by_gcdPmS_+0x15a>
    dace:	00 00       	nop
    dad0:	60 96       	adiw	r28, 0x10	; 16
    dad2:	cd bf       	out	0x3d, r28	; 61
    dad4:	de bf       	out	0x3e, r29	; 62
    dad6:	df 91       	pop	r29
    dad8:	cf 91       	pop	r28
    dada:	08 95       	ret

0000dadc <_Z15multisynth_calcmP13u_si5351_regsPbS1_>:
    dadc:	0f 93       	push	r16
    dade:	1f 93       	push	r17
    dae0:	cf 93       	push	r28
    dae2:	df 93       	push	r29
    dae4:	cd b7       	in	r28, 0x3d	; 61
    dae6:	de b7       	in	r29, 0x3e	; 62
    dae8:	69 97       	sbiw	r28, 0x19	; 25
    daea:	cd bf       	out	0x3d, r28	; 61
    daec:	de bf       	out	0x3e, r29	; 62
    daee:	68 8b       	std	Y+16, r22	; 0x10
    daf0:	79 8b       	std	Y+17, r23	; 0x11
    daf2:	8a 8b       	std	Y+18, r24	; 0x12
    daf4:	9b 8b       	std	Y+19, r25	; 0x13
    daf6:	4c 8b       	std	Y+20, r20	; 0x14
    daf8:	5d 8b       	std	Y+21, r21	; 0x15
    dafa:	2e 8b       	std	Y+22, r18	; 0x16
    dafc:	3f 8b       	std	Y+23, r19	; 0x17
    dafe:	08 8f       	std	Y+24, r16	; 0x18
    db00:	19 8f       	std	Y+25, r17	; 0x19
    db02:	19 82       	std	Y+1, r1	; 0x01
    db04:	1a 82       	std	Y+2, r1	; 0x02
    db06:	1b 82       	std	Y+3, r1	; 0x03
    db08:	1c 82       	std	Y+4, r1	; 0x04
    db0a:	1d 82       	std	Y+5, r1	; 0x05
    db0c:	1e 82       	std	Y+6, r1	; 0x06
    db0e:	1f 82       	std	Y+7, r1	; 0x07
    db10:	18 86       	std	Y+8, r1	; 0x08
    db12:	8e 89       	ldd	r24, Y+22	; 0x16
    db14:	9f 89       	ldd	r25, Y+23	; 0x17
    db16:	21 e0       	ldi	r18, 0x01	; 1
    db18:	fc 01       	movw	r30, r24
    db1a:	20 83       	st	Z, r18
    db1c:	88 89       	ldd	r24, Y+16	; 0x10
    db1e:	99 89       	ldd	r25, Y+17	; 0x11
    db20:	aa 89       	ldd	r26, Y+18	; 0x12
    db22:	bb 89       	ldd	r27, Y+19	; 0x13
    db24:	80 38       	cpi	r24, 0x80	; 128
    db26:	91 4d       	sbci	r25, 0xD1	; 209
    db28:	a0 4f       	sbci	r26, 0xF0	; 240
    db2a:	b8 40       	sbci	r27, 0x08	; 8
    db2c:	d8 f0       	brcs	.+54     	; 0xdb64 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x88>
    db2e:	84 e0       	ldi	r24, 0x04	; 4
    db30:	90 e0       	ldi	r25, 0x00	; 0
    db32:	a0 e0       	ldi	r26, 0x00	; 0
    db34:	b0 e0       	ldi	r27, 0x00	; 0
    db36:	89 83       	std	Y+1, r24	; 0x01
    db38:	9a 83       	std	Y+2, r25	; 0x02
    db3a:	ab 83       	std	Y+3, r26	; 0x03
    db3c:	bc 83       	std	Y+4, r27	; 0x04
    db3e:	29 81       	ldd	r18, Y+1	; 0x01
    db40:	3a 81       	ldd	r19, Y+2	; 0x02
    db42:	4b 81       	ldd	r20, Y+3	; 0x03
    db44:	5c 81       	ldd	r21, Y+4	; 0x04
    db46:	88 89       	ldd	r24, Y+16	; 0x10
    db48:	99 89       	ldd	r25, Y+17	; 0x11
    db4a:	aa 89       	ldd	r26, Y+18	; 0x12
    db4c:	bb 89       	ldd	r27, Y+19	; 0x13
    db4e:	bc 01       	movw	r22, r24
    db50:	cd 01       	movw	r24, r26
    db52:	0e 94 06 7d 	call	0xfa0c	; 0xfa0c <__mulsi3>
    db56:	dc 01       	movw	r26, r24
    db58:	cb 01       	movw	r24, r22
    db5a:	8d 83       	std	Y+5, r24	; 0x05
    db5c:	9e 83       	std	Y+6, r25	; 0x06
    db5e:	af 83       	std	Y+7, r26	; 0x07
    db60:	b8 87       	std	Y+8, r27	; 0x08
    db62:	6e c0       	rjmp	.+220    	; 0xdc40 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x164>
    db64:	19 86       	std	Y+9, r1	; 0x09
    db66:	1a 86       	std	Y+10, r1	; 0x0a
    db68:	1b 86       	std	Y+11, r1	; 0x0b
    db6a:	89 85       	ldd	r24, Y+9	; 0x09
    db6c:	88 23       	and	r24, r24
    db6e:	09 f0       	breq	.+2      	; 0xdb72 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x96>
    db70:	52 c0       	rjmp	.+164    	; 0xdc16 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x13a>
    db72:	8b 85       	ldd	r24, Y+11	; 0x0b
    db74:	28 2f       	mov	r18, r24
    db76:	30 e0       	ldi	r19, 0x00	; 0
    db78:	40 e0       	ldi	r20, 0x00	; 0
    db7a:	50 e0       	ldi	r21, 0x00	; 0
    db7c:	88 89       	ldd	r24, Y+16	; 0x10
    db7e:	99 89       	ldd	r25, Y+17	; 0x11
    db80:	aa 89       	ldd	r26, Y+18	; 0x12
    db82:	bb 89       	ldd	r27, Y+19	; 0x13
    db84:	bc 01       	movw	r22, r24
    db86:	cd 01       	movw	r24, r26
    db88:	0e 94 06 7d 	call	0xfa0c	; 0xfa0c <__mulsi3>
    db8c:	9b 01       	movw	r18, r22
    db8e:	ac 01       	movw	r20, r24
    db90:	80 e0       	ldi	r24, 0x00	; 0
    db92:	99 ee       	ldi	r25, 0xE9	; 233
    db94:	a4 ea       	ldi	r26, 0xA4	; 164
    db96:	b5 e3       	ldi	r27, 0x35	; 53
    db98:	82 1b       	sub	r24, r18
    db9a:	93 0b       	sbc	r25, r19
    db9c:	a4 0b       	sbc	r26, r20
    db9e:	b5 0b       	sbc	r27, r21
    dba0:	8c 87       	std	Y+12, r24	; 0x0c
    dba2:	9d 87       	std	Y+13, r25	; 0x0d
    dba4:	ae 87       	std	Y+14, r26	; 0x0e
    dba6:	bf 87       	std	Y+15, r27	; 0x0f
    dba8:	8b 85       	ldd	r24, Y+11	; 0x0b
    dbaa:	8e 5f       	subi	r24, 0xFE	; 254
    dbac:	8b 87       	std	Y+11, r24	; 0x0b
    dbae:	8c 85       	ldd	r24, Y+12	; 0x0c
    dbb0:	9d 85       	ldd	r25, Y+13	; 0x0d
    dbb2:	ae 85       	ldd	r26, Y+14	; 0x0e
    dbb4:	bf 85       	ldd	r27, Y+15	; 0x0f
    dbb6:	81 15       	cp	r24, r1
    dbb8:	96 44       	sbci	r25, 0x46	; 70
    dbba:	a3 4c       	sbci	r26, 0xC3	; 195
    dbbc:	b3 42       	sbci	r27, 0x23	; 35
    dbbe:	40 f1       	brcs	.+80     	; 0xdc10 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x134>
    dbc0:	8c 85       	ldd	r24, Y+12	; 0x0c
    dbc2:	9d 85       	ldd	r25, Y+13	; 0x0d
    dbc4:	ae 85       	ldd	r26, Y+14	; 0x0e
    dbc6:	bf 85       	ldd	r27, Y+15	; 0x0f
    dbc8:	28 89       	ldd	r18, Y+16	; 0x10
    dbca:	39 89       	ldd	r19, Y+17	; 0x11
    dbcc:	4a 89       	ldd	r20, Y+18	; 0x12
    dbce:	5b 89       	ldd	r21, Y+19	; 0x13
    dbd0:	bc 01       	movw	r22, r24
    dbd2:	cd 01       	movw	r24, r26
    dbd4:	0e 94 3e 7d 	call	0xfa7c	; 0xfa7c <__udivmodsi4>
    dbd8:	da 01       	movw	r26, r20
    dbda:	c9 01       	movw	r24, r18
    dbdc:	8c 87       	std	Y+12, r24	; 0x0c
    dbde:	9d 87       	std	Y+13, r25	; 0x0d
    dbe0:	ae 87       	std	Y+14, r26	; 0x0e
    dbe2:	bf 87       	std	Y+15, r27	; 0x0f
    dbe4:	8c 85       	ldd	r24, Y+12	; 0x0c
    dbe6:	9d 85       	ldd	r25, Y+13	; 0x0d
    dbe8:	ae 85       	ldd	r26, Y+14	; 0x0e
    dbea:	bf 85       	ldd	r27, Y+15	; 0x0f
    dbec:	04 97       	sbiw	r24, 0x04	; 4
    dbee:	a1 05       	cpc	r26, r1
    dbf0:	b1 05       	cpc	r27, r1
    dbf2:	08 f4       	brcc	.+2      	; 0xdbf6 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x11a>
    dbf4:	ba cf       	rjmp	.-140    	; 0xdb6a <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x8e>
    dbf6:	81 e0       	ldi	r24, 0x01	; 1
    dbf8:	89 87       	std	Y+9, r24	; 0x09
    dbfa:	81 e0       	ldi	r24, 0x01	; 1
    dbfc:	8a 87       	std	Y+10, r24	; 0x0a
    dbfe:	8c 85       	ldd	r24, Y+12	; 0x0c
    dc00:	9d 85       	ldd	r25, Y+13	; 0x0d
    dc02:	ae 85       	ldd	r26, Y+14	; 0x0e
    dc04:	bf 85       	ldd	r27, Y+15	; 0x0f
    dc06:	89 83       	std	Y+1, r24	; 0x01
    dc08:	9a 83       	std	Y+2, r25	; 0x02
    dc0a:	ab 83       	std	Y+3, r26	; 0x03
    dc0c:	bc 83       	std	Y+4, r27	; 0x04
    dc0e:	ad cf       	rjmp	.-166    	; 0xdb6a <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x8e>
    dc10:	81 e0       	ldi	r24, 0x01	; 1
    dc12:	89 87       	std	Y+9, r24	; 0x09
    dc14:	aa cf       	rjmp	.-172    	; 0xdb6a <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x8e>
    dc16:	8a 85       	ldd	r24, Y+10	; 0x0a
    dc18:	88 23       	and	r24, r24
    dc1a:	91 f0       	breq	.+36     	; 0xdc40 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x164>
    dc1c:	29 81       	ldd	r18, Y+1	; 0x01
    dc1e:	3a 81       	ldd	r19, Y+2	; 0x02
    dc20:	4b 81       	ldd	r20, Y+3	; 0x03
    dc22:	5c 81       	ldd	r21, Y+4	; 0x04
    dc24:	88 89       	ldd	r24, Y+16	; 0x10
    dc26:	99 89       	ldd	r25, Y+17	; 0x11
    dc28:	aa 89       	ldd	r26, Y+18	; 0x12
    dc2a:	bb 89       	ldd	r27, Y+19	; 0x13
    dc2c:	bc 01       	movw	r22, r24
    dc2e:	cd 01       	movw	r24, r26
    dc30:	0e 94 06 7d 	call	0xfa0c	; 0xfa0c <__mulsi3>
    dc34:	dc 01       	movw	r26, r24
    dc36:	cb 01       	movw	r24, r22
    dc38:	8d 83       	std	Y+5, r24	; 0x05
    dc3a:	9e 83       	std	Y+6, r25	; 0x06
    dc3c:	af 83       	std	Y+7, r26	; 0x07
    dc3e:	b8 87       	std	Y+8, r27	; 0x08
    dc40:	21 e0       	ldi	r18, 0x01	; 1
    dc42:	89 81       	ldd	r24, Y+1	; 0x01
    dc44:	9a 81       	ldd	r25, Y+2	; 0x02
    dc46:	ab 81       	ldd	r26, Y+3	; 0x03
    dc48:	bc 81       	ldd	r27, Y+4	; 0x04
    dc4a:	04 97       	sbiw	r24, 0x04	; 4
    dc4c:	a1 05       	cpc	r26, r1
    dc4e:	b1 05       	cpc	r27, r1
    dc50:	09 f0       	breq	.+2      	; 0xdc54 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x178>
    dc52:	20 e0       	ldi	r18, 0x00	; 0
    dc54:	88 8d       	ldd	r24, Y+24	; 0x18
    dc56:	99 8d       	ldd	r25, Y+25	; 0x19
    dc58:	fc 01       	movw	r30, r24
    dc5a:	20 83       	st	Z, r18
    dc5c:	89 81       	ldd	r24, Y+1	; 0x01
    dc5e:	9a 81       	ldd	r25, Y+2	; 0x02
    dc60:	ab 81       	ldd	r26, Y+3	; 0x03
    dc62:	bc 81       	ldd	r27, Y+4	; 0x04
    dc64:	88 0f       	add	r24, r24
    dc66:	99 1f       	adc	r25, r25
    dc68:	aa 1f       	adc	r26, r26
    dc6a:	bb 1f       	adc	r27, r27
    dc6c:	88 0f       	add	r24, r24
    dc6e:	99 1f       	adc	r25, r25
    dc70:	aa 1f       	adc	r26, r26
    dc72:	bb 1f       	adc	r27, r27
    dc74:	88 0f       	add	r24, r24
    dc76:	99 1f       	adc	r25, r25
    dc78:	aa 1f       	adc	r26, r26
    dc7a:	bb 1f       	adc	r27, r27
    dc7c:	88 0f       	add	r24, r24
    dc7e:	99 1f       	adc	r25, r25
    dc80:	aa 1f       	adc	r26, r26
    dc82:	bb 1f       	adc	r27, r27
    dc84:	88 0f       	add	r24, r24
    dc86:	99 1f       	adc	r25, r25
    dc88:	aa 1f       	adc	r26, r26
    dc8a:	bb 1f       	adc	r27, r27
    dc8c:	88 0f       	add	r24, r24
    dc8e:	99 1f       	adc	r25, r25
    dc90:	aa 1f       	adc	r26, r26
    dc92:	bb 1f       	adc	r27, r27
    dc94:	88 0f       	add	r24, r24
    dc96:	99 1f       	adc	r25, r25
    dc98:	aa 1f       	adc	r26, r26
    dc9a:	bb 1f       	adc	r27, r27
    dc9c:	92 50       	subi	r25, 0x02	; 2
    dc9e:	a1 09       	sbc	r26, r1
    dca0:	b1 09       	sbc	r27, r1
    dca2:	2c 89       	ldd	r18, Y+20	; 0x14
    dca4:	3d 89       	ldd	r19, Y+21	; 0x15
    dca6:	f9 01       	movw	r30, r18
    dca8:	80 83       	st	Z, r24
    dcaa:	91 83       	std	Z+1, r25	; 0x01
    dcac:	a2 83       	std	Z+2, r26	; 0x02
    dcae:	b3 83       	std	Z+3, r27	; 0x03
    dcb0:	8c 89       	ldd	r24, Y+20	; 0x14
    dcb2:	9d 89       	ldd	r25, Y+21	; 0x15
    dcb4:	fc 01       	movw	r30, r24
    dcb6:	14 82       	std	Z+4, r1	; 0x04
    dcb8:	15 82       	std	Z+5, r1	; 0x05
    dcba:	16 82       	std	Z+6, r1	; 0x06
    dcbc:	17 82       	std	Z+7, r1	; 0x07
    dcbe:	2c 89       	ldd	r18, Y+20	; 0x14
    dcc0:	3d 89       	ldd	r19, Y+21	; 0x15
    dcc2:	81 e0       	ldi	r24, 0x01	; 1
    dcc4:	90 e0       	ldi	r25, 0x00	; 0
    dcc6:	a0 e0       	ldi	r26, 0x00	; 0
    dcc8:	b0 e0       	ldi	r27, 0x00	; 0
    dcca:	f9 01       	movw	r30, r18
    dccc:	80 87       	std	Z+8, r24	; 0x08
    dcce:	91 87       	std	Z+9, r25	; 0x09
    dcd0:	a2 87       	std	Z+10, r26	; 0x0a
    dcd2:	b3 87       	std	Z+11, r27	; 0x0b
    dcd4:	8d 81       	ldd	r24, Y+5	; 0x05
    dcd6:	9e 81       	ldd	r25, Y+6	; 0x06
    dcd8:	af 81       	ldd	r26, Y+7	; 0x07
    dcda:	b8 85       	ldd	r27, Y+8	; 0x08
    dcdc:	bc 01       	movw	r22, r24
    dcde:	cd 01       	movw	r24, r26
    dce0:	69 96       	adiw	r28, 0x19	; 25
    dce2:	cd bf       	out	0x3d, r28	; 61
    dce4:	de bf       	out	0x3e, r29	; 62
    dce6:	df 91       	pop	r29
    dce8:	cf 91       	pop	r28
    dcea:	1f 91       	pop	r17
    dcec:	0f 91       	pop	r16
    dcee:	08 95       	ret

0000dcf0 <_Z19multisynth_estimatemP13u_si5351_regsPbS1_>:
 * Frequency_Hz multisynth_estimate(Frequency_Hz freq_Fout, Union_si5351_regs *reg, bool *int_mode, bool *divBy4)
 *
 * Note: do not call this function with global value freqVCOB == zero
 */
	Frequency_Hz multisynth_estimate(Frequency_Hz freq_Fout, Union_si5351_regs *reg, bool *int_mode, bool *divBy4)
	{
    dcf0:	0f 93       	push	r16
    dcf2:	1f 93       	push	r17
    dcf4:	cf 93       	push	r28
    dcf6:	df 93       	push	r29
    dcf8:	cd b7       	in	r28, 0x3d	; 61
    dcfa:	de b7       	in	r29, 0x3e	; 62
    dcfc:	6e 97       	sbiw	r28, 0x1e	; 30
    dcfe:	cd bf       	out	0x3d, r28	; 61
    dd00:	de bf       	out	0x3e, r29	; 62
    dd02:	6d 8b       	std	Y+21, r22	; 0x15
    dd04:	7e 8b       	std	Y+22, r23	; 0x16
    dd06:	8f 8b       	std	Y+23, r24	; 0x17
    dd08:	98 8f       	std	Y+24, r25	; 0x18
    dd0a:	49 8f       	std	Y+25, r20	; 0x19
    dd0c:	5a 8f       	std	Y+26, r21	; 0x1a
    dd0e:	2b 8f       	std	Y+27, r18	; 0x1b
    dd10:	3c 8f       	std	Y+28, r19	; 0x1c
    dd12:	0d 8f       	std	Y+29, r16	; 0x1d
    dd14:	1e 8f       	std	Y+30, r17	; 0x1e
				return(0);
			}
#endif  /* DO_BOUNDS_CHECKING */

		/* Determine integer part of feedback equation */
		a = freqVCOB / freq_Fout;
    dd16:	80 91 c2 49 	lds	r24, 0x49C2	; 0x8049c2 <_ZL8freqVCOB>
    dd1a:	90 91 c3 49 	lds	r25, 0x49C3	; 0x8049c3 <_ZL8freqVCOB+0x1>
    dd1e:	a0 91 c4 49 	lds	r26, 0x49C4	; 0x8049c4 <_ZL8freqVCOB+0x2>
    dd22:	b0 91 c5 49 	lds	r27, 0x49C5	; 0x8049c5 <_ZL8freqVCOB+0x3>
    dd26:	2d 89       	ldd	r18, Y+21	; 0x15
    dd28:	3e 89       	ldd	r19, Y+22	; 0x16
    dd2a:	4f 89       	ldd	r20, Y+23	; 0x17
    dd2c:	58 8d       	ldd	r21, Y+24	; 0x18
    dd2e:	bc 01       	movw	r22, r24
    dd30:	cd 01       	movw	r24, r26
    dd32:	0e 94 3e 7d 	call	0xfa7c	; 0xfa7c <__udivmodsi4>
    dd36:	da 01       	movw	r26, r20
    dd38:	c9 01       	movw	r24, r18
    dd3a:	89 83       	std	Y+1, r24	; 0x01
    dd3c:	9a 83       	std	Y+2, r25	; 0x02
    dd3e:	ab 83       	std	Y+3, r26	; 0x03
    dd40:	bc 83       	std	Y+4, r27	; 0x04
		b = freqVCOB % freq_Fout;
    dd42:	80 91 c2 49 	lds	r24, 0x49C2	; 0x8049c2 <_ZL8freqVCOB>
    dd46:	90 91 c3 49 	lds	r25, 0x49C3	; 0x8049c3 <_ZL8freqVCOB+0x1>
    dd4a:	a0 91 c4 49 	lds	r26, 0x49C4	; 0x8049c4 <_ZL8freqVCOB+0x2>
    dd4e:	b0 91 c5 49 	lds	r27, 0x49C5	; 0x8049c5 <_ZL8freqVCOB+0x3>
    dd52:	2d 89       	ldd	r18, Y+21	; 0x15
    dd54:	3e 89       	ldd	r19, Y+22	; 0x16
    dd56:	4f 89       	ldd	r20, Y+23	; 0x17
    dd58:	58 8d       	ldd	r21, Y+24	; 0x18
    dd5a:	bc 01       	movw	r22, r24
    dd5c:	cd 01       	movw	r24, r26
    dd5e:	0e 94 3e 7d 	call	0xfa7c	; 0xfa7c <__udivmodsi4>
    dd62:	dc 01       	movw	r26, r24
    dd64:	cb 01       	movw	r24, r22
    dd66:	8d 87       	std	Y+13, r24	; 0x0d
    dd68:	9e 87       	std	Y+14, r25	; 0x0e
    dd6a:	af 87       	std	Y+15, r26	; 0x0f
    dd6c:	b8 8b       	std	Y+16, r27	; 0x10
		c = freq_Fout;
    dd6e:	8d 89       	ldd	r24, Y+21	; 0x15
    dd70:	9e 89       	ldd	r25, Y+22	; 0x16
    dd72:	af 89       	ldd	r26, Y+23	; 0x17
    dd74:	b8 8d       	ldd	r27, Y+24	; 0x18
    dd76:	89 8b       	std	Y+17, r24	; 0x11
    dd78:	9a 8b       	std	Y+18, r25	; 0x12
    dd7a:	ab 8b       	std	Y+19, r26	; 0x13
    dd7c:	bc 8b       	std	Y+20, r27	; 0x14
		reduce_by_gcd(&b, &c);  /* prevents overflow conditions and makes results agree with ClockBuilder */
    dd7e:	9e 01       	movw	r18, r28
    dd80:	2f 5e       	subi	r18, 0xEF	; 239
    dd82:	3f 4f       	sbci	r19, 0xFF	; 255
    dd84:	ce 01       	movw	r24, r28
    dd86:	0d 96       	adiw	r24, 0x0d	; 13
    dd88:	b9 01       	movw	r22, r18
    dd8a:	0e 94 bb 6c 	call	0xd976	; 0xd976 <_Z13reduce_by_gcdPmS_>

		/* Calculate the approximated output frequency given by fOUT = fvco / (a + b/c) */
		freq_Fout = freqVCOB;
    dd8e:	80 91 c2 49 	lds	r24, 0x49C2	; 0x8049c2 <_ZL8freqVCOB>
    dd92:	90 91 c3 49 	lds	r25, 0x49C3	; 0x8049c3 <_ZL8freqVCOB+0x1>
    dd96:	a0 91 c4 49 	lds	r26, 0x49C4	; 0x8049c4 <_ZL8freqVCOB+0x2>
    dd9a:	b0 91 c5 49 	lds	r27, 0x49C5	; 0x8049c5 <_ZL8freqVCOB+0x3>
    dd9e:	8d 8b       	std	Y+21, r24	; 0x15
    dda0:	9e 8b       	std	Y+22, r25	; 0x16
    dda2:	af 8b       	std	Y+23, r26	; 0x17
    dda4:	b8 8f       	std	Y+24, r27	; 0x18
		freq_Fout /= (a * c + b);
    dda6:	29 89       	ldd	r18, Y+17	; 0x11
    dda8:	3a 89       	ldd	r19, Y+18	; 0x12
    ddaa:	4b 89       	ldd	r20, Y+19	; 0x13
    ddac:	5c 89       	ldd	r21, Y+20	; 0x14
    ddae:	89 81       	ldd	r24, Y+1	; 0x01
    ddb0:	9a 81       	ldd	r25, Y+2	; 0x02
    ddb2:	ab 81       	ldd	r26, Y+3	; 0x03
    ddb4:	bc 81       	ldd	r27, Y+4	; 0x04
    ddb6:	bc 01       	movw	r22, r24
    ddb8:	cd 01       	movw	r24, r26
    ddba:	0e 94 06 7d 	call	0xfa0c	; 0xfa0c <__mulsi3>
    ddbe:	9b 01       	movw	r18, r22
    ddc0:	ac 01       	movw	r20, r24
    ddc2:	8d 85       	ldd	r24, Y+13	; 0x0d
    ddc4:	9e 85       	ldd	r25, Y+14	; 0x0e
    ddc6:	af 85       	ldd	r26, Y+15	; 0x0f
    ddc8:	b8 89       	ldd	r27, Y+16	; 0x10
    ddca:	28 0f       	add	r18, r24
    ddcc:	39 1f       	adc	r19, r25
    ddce:	4a 1f       	adc	r20, r26
    ddd0:	5b 1f       	adc	r21, r27
    ddd2:	8d 89       	ldd	r24, Y+21	; 0x15
    ddd4:	9e 89       	ldd	r25, Y+22	; 0x16
    ddd6:	af 89       	ldd	r26, Y+23	; 0x17
    ddd8:	b8 8d       	ldd	r27, Y+24	; 0x18
    ddda:	bc 01       	movw	r22, r24
    dddc:	cd 01       	movw	r24, r26
    ddde:	0e 94 3e 7d 	call	0xfa7c	; 0xfa7c <__udivmodsi4>
    dde2:	da 01       	movw	r26, r20
    dde4:	c9 01       	movw	r24, r18
    dde6:	8d 8b       	std	Y+21, r24	; 0x15
    dde8:	9e 8b       	std	Y+22, r25	; 0x16
    ddea:	af 8b       	std	Y+23, r26	; 0x17
    ddec:	b8 8f       	std	Y+24, r27	; 0x18
		freq_Fout *= c;
    ddee:	89 89       	ldd	r24, Y+17	; 0x11
    ddf0:	9a 89       	ldd	r25, Y+18	; 0x12
    ddf2:	ab 89       	ldd	r26, Y+19	; 0x13
    ddf4:	bc 89       	ldd	r27, Y+20	; 0x14
    ddf6:	2d 89       	ldd	r18, Y+21	; 0x15
    ddf8:	3e 89       	ldd	r19, Y+22	; 0x16
    ddfa:	4f 89       	ldd	r20, Y+23	; 0x17
    ddfc:	58 8d       	ldd	r21, Y+24	; 0x18
    ddfe:	bc 01       	movw	r22, r24
    de00:	cd 01       	movw	r24, r26
    de02:	0e 94 06 7d 	call	0xfa0c	; 0xfa0c <__mulsi3>
    de06:	dc 01       	movw	r26, r24
    de08:	cb 01       	movw	r24, r22
    de0a:	8d 8b       	std	Y+21, r24	; 0x15
    de0c:	9e 8b       	std	Y+22, r25	; 0x16
    de0e:	af 8b       	std	Y+23, r26	; 0x17
    de10:	b8 8f       	std	Y+24, r27	; 0x18

		*int_mode = (b == 0) && !(a % 2);
    de12:	8d 85       	ldd	r24, Y+13	; 0x0d
    de14:	9e 85       	ldd	r25, Y+14	; 0x0e
    de16:	af 85       	ldd	r26, Y+15	; 0x0f
    de18:	b8 89       	ldd	r27, Y+16	; 0x10
    de1a:	89 2b       	or	r24, r25
    de1c:	8a 2b       	or	r24, r26
    de1e:	8b 2b       	or	r24, r27
    de20:	71 f4       	brne	.+28     	; 0xde3e <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x14e>
    de22:	89 81       	ldd	r24, Y+1	; 0x01
    de24:	9a 81       	ldd	r25, Y+2	; 0x02
    de26:	ab 81       	ldd	r26, Y+3	; 0x03
    de28:	bc 81       	ldd	r27, Y+4	; 0x04
    de2a:	81 70       	andi	r24, 0x01	; 1
    de2c:	99 27       	eor	r25, r25
    de2e:	aa 27       	eor	r26, r26
    de30:	bb 27       	eor	r27, r27
    de32:	89 2b       	or	r24, r25
    de34:	8a 2b       	or	r24, r26
    de36:	8b 2b       	or	r24, r27
    de38:	11 f4       	brne	.+4      	; 0xde3e <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x14e>
    de3a:	21 e0       	ldi	r18, 0x01	; 1
    de3c:	01 c0       	rjmp	.+2      	; 0xde40 <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x150>
    de3e:	20 e0       	ldi	r18, 0x00	; 0
    de40:	8b 8d       	ldd	r24, Y+27	; 0x1b
    de42:	9c 8d       	ldd	r25, Y+28	; 0x1c
    de44:	fc 01       	movw	r30, r24
    de46:	20 83       	st	Z, r18
		*divBy4 = (a == 4) && *int_mode;
    de48:	89 81       	ldd	r24, Y+1	; 0x01
    de4a:	9a 81       	ldd	r25, Y+2	; 0x02
    de4c:	ab 81       	ldd	r26, Y+3	; 0x03
    de4e:	bc 81       	ldd	r27, Y+4	; 0x04
    de50:	04 97       	sbiw	r24, 0x04	; 4
    de52:	a1 05       	cpc	r26, r1
    de54:	b1 05       	cpc	r27, r1
    de56:	41 f4       	brne	.+16     	; 0xde68 <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x178>
    de58:	8b 8d       	ldd	r24, Y+27	; 0x1b
    de5a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    de5c:	fc 01       	movw	r30, r24
    de5e:	80 81       	ld	r24, Z
    de60:	88 23       	and	r24, r24
    de62:	11 f0       	breq	.+4      	; 0xde68 <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x178>
    de64:	21 e0       	ldi	r18, 0x01	; 1
    de66:	01 c0       	rjmp	.+2      	; 0xde6a <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x17a>
    de68:	20 e0       	ldi	r18, 0x00	; 0
    de6a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    de6c:	9e 8d       	ldd	r25, Y+30	; 0x1e
    de6e:	fc 01       	movw	r30, r24
    de70:	20 83       	st	Z, r18

		/* Calculate parameters */
		if(*divBy4)
    de72:	8d 8d       	ldd	r24, Y+29	; 0x1d
    de74:	9e 8d       	ldd	r25, Y+30	; 0x1e
    de76:	fc 01       	movw	r30, r24
    de78:	80 81       	ld	r24, Z
    de7a:	88 23       	and	r24, r24
    de7c:	d1 f0       	breq	.+52     	; 0xdeb2 <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x1c2>
		{
			reg->ms.p1 = 0;
    de7e:	89 8d       	ldd	r24, Y+25	; 0x19
    de80:	9a 8d       	ldd	r25, Y+26	; 0x1a
    de82:	fc 01       	movw	r30, r24
    de84:	10 82       	st	Z, r1
    de86:	11 82       	std	Z+1, r1	; 0x01
    de88:	12 82       	std	Z+2, r1	; 0x02
    de8a:	13 82       	std	Z+3, r1	; 0x03
			reg->ms.p2 = 0;
    de8c:	89 8d       	ldd	r24, Y+25	; 0x19
    de8e:	9a 8d       	ldd	r25, Y+26	; 0x1a
    de90:	fc 01       	movw	r30, r24
    de92:	14 82       	std	Z+4, r1	; 0x04
    de94:	15 82       	std	Z+5, r1	; 0x05
    de96:	16 82       	std	Z+6, r1	; 0x06
    de98:	17 82       	std	Z+7, r1	; 0x07
			reg->ms.p3 = 1;
    de9a:	29 8d       	ldd	r18, Y+25	; 0x19
    de9c:	3a 8d       	ldd	r19, Y+26	; 0x1a
    de9e:	81 e0       	ldi	r24, 0x01	; 1
    dea0:	90 e0       	ldi	r25, 0x00	; 0
    dea2:	a0 e0       	ldi	r26, 0x00	; 0
    dea4:	b0 e0       	ldi	r27, 0x00	; 0
    dea6:	f9 01       	movw	r30, r18
    dea8:	80 87       	std	Z+8, r24	; 0x08
    deaa:	91 87       	std	Z+9, r25	; 0x09
    deac:	a2 87       	std	Z+10, r26	; 0x0a
    deae:	b3 87       	std	Z+11, r27	; 0x0b
    deb0:	92 c0       	rjmp	.+292    	; 0xdfd6 <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x2e6>
		}
		else
		{
			uint32_t bx128 = b << 7;
    deb2:	8d 85       	ldd	r24, Y+13	; 0x0d
    deb4:	9e 85       	ldd	r25, Y+14	; 0x0e
    deb6:	af 85       	ldd	r26, Y+15	; 0x0f
    deb8:	b8 89       	ldd	r27, Y+16	; 0x10
    deba:	88 0f       	add	r24, r24
    debc:	99 1f       	adc	r25, r25
    debe:	aa 1f       	adc	r26, r26
    dec0:	bb 1f       	adc	r27, r27
    dec2:	88 0f       	add	r24, r24
    dec4:	99 1f       	adc	r25, r25
    dec6:	aa 1f       	adc	r26, r26
    dec8:	bb 1f       	adc	r27, r27
    deca:	88 0f       	add	r24, r24
    decc:	99 1f       	adc	r25, r25
    dece:	aa 1f       	adc	r26, r26
    ded0:	bb 1f       	adc	r27, r27
    ded2:	88 0f       	add	r24, r24
    ded4:	99 1f       	adc	r25, r25
    ded6:	aa 1f       	adc	r26, r26
    ded8:	bb 1f       	adc	r27, r27
    deda:	88 0f       	add	r24, r24
    dedc:	99 1f       	adc	r25, r25
    dede:	aa 1f       	adc	r26, r26
    dee0:	bb 1f       	adc	r27, r27
    dee2:	88 0f       	add	r24, r24
    dee4:	99 1f       	adc	r25, r25
    dee6:	aa 1f       	adc	r26, r26
    dee8:	bb 1f       	adc	r27, r27
    deea:	88 0f       	add	r24, r24
    deec:	99 1f       	adc	r25, r25
    deee:	aa 1f       	adc	r26, r26
    def0:	bb 1f       	adc	r27, r27
    def2:	8d 83       	std	Y+5, r24	; 0x05
    def4:	9e 83       	std	Y+6, r25	; 0x06
    def6:	af 83       	std	Y+7, r26	; 0x07
    def8:	b8 87       	std	Y+8, r27	; 0x08
			uint32_t bx128overc = bx128 / c;
    defa:	29 89       	ldd	r18, Y+17	; 0x11
    defc:	3a 89       	ldd	r19, Y+18	; 0x12
    defe:	4b 89       	ldd	r20, Y+19	; 0x13
    df00:	5c 89       	ldd	r21, Y+20	; 0x14
    df02:	8d 81       	ldd	r24, Y+5	; 0x05
    df04:	9e 81       	ldd	r25, Y+6	; 0x06
    df06:	af 81       	ldd	r26, Y+7	; 0x07
    df08:	b8 85       	ldd	r27, Y+8	; 0x08
    df0a:	bc 01       	movw	r22, r24
    df0c:	cd 01       	movw	r24, r26
    df0e:	0e 94 3e 7d 	call	0xfa7c	; 0xfa7c <__udivmodsi4>
    df12:	da 01       	movw	r26, r20
    df14:	c9 01       	movw	r24, r18
    df16:	89 87       	std	Y+9, r24	; 0x09
    df18:	9a 87       	std	Y+10, r25	; 0x0a
    df1a:	ab 87       	std	Y+11, r26	; 0x0b
    df1c:	bc 87       	std	Y+12, r27	; 0x0c
			reg->ms.p1 = (uint32_t)((a << 7) + bx128overc) - 512;   /* 128 * a + floor((128 * b) / c) - 512 */
    df1e:	89 81       	ldd	r24, Y+1	; 0x01
    df20:	9a 81       	ldd	r25, Y+2	; 0x02
    df22:	ab 81       	ldd	r26, Y+3	; 0x03
    df24:	bc 81       	ldd	r27, Y+4	; 0x04
    df26:	88 0f       	add	r24, r24
    df28:	99 1f       	adc	r25, r25
    df2a:	aa 1f       	adc	r26, r26
    df2c:	bb 1f       	adc	r27, r27
    df2e:	88 0f       	add	r24, r24
    df30:	99 1f       	adc	r25, r25
    df32:	aa 1f       	adc	r26, r26
    df34:	bb 1f       	adc	r27, r27
    df36:	88 0f       	add	r24, r24
    df38:	99 1f       	adc	r25, r25
    df3a:	aa 1f       	adc	r26, r26
    df3c:	bb 1f       	adc	r27, r27
    df3e:	88 0f       	add	r24, r24
    df40:	99 1f       	adc	r25, r25
    df42:	aa 1f       	adc	r26, r26
    df44:	bb 1f       	adc	r27, r27
    df46:	88 0f       	add	r24, r24
    df48:	99 1f       	adc	r25, r25
    df4a:	aa 1f       	adc	r26, r26
    df4c:	bb 1f       	adc	r27, r27
    df4e:	88 0f       	add	r24, r24
    df50:	99 1f       	adc	r25, r25
    df52:	aa 1f       	adc	r26, r26
    df54:	bb 1f       	adc	r27, r27
    df56:	88 0f       	add	r24, r24
    df58:	99 1f       	adc	r25, r25
    df5a:	aa 1f       	adc	r26, r26
    df5c:	bb 1f       	adc	r27, r27
    df5e:	9c 01       	movw	r18, r24
    df60:	ad 01       	movw	r20, r26
    df62:	89 85       	ldd	r24, Y+9	; 0x09
    df64:	9a 85       	ldd	r25, Y+10	; 0x0a
    df66:	ab 85       	ldd	r26, Y+11	; 0x0b
    df68:	bc 85       	ldd	r27, Y+12	; 0x0c
    df6a:	82 0f       	add	r24, r18
    df6c:	93 1f       	adc	r25, r19
    df6e:	a4 1f       	adc	r26, r20
    df70:	b5 1f       	adc	r27, r21
    df72:	92 50       	subi	r25, 0x02	; 2
    df74:	a1 09       	sbc	r26, r1
    df76:	b1 09       	sbc	r27, r1
    df78:	29 8d       	ldd	r18, Y+25	; 0x19
    df7a:	3a 8d       	ldd	r19, Y+26	; 0x1a
    df7c:	f9 01       	movw	r30, r18
    df7e:	80 83       	st	Z, r24
    df80:	91 83       	std	Z+1, r25	; 0x01
    df82:	a2 83       	std	Z+2, r26	; 0x02
    df84:	b3 83       	std	Z+3, r27	; 0x03
			reg->ms.p2 = (uint32_t)bx128 - (c * bx128overc);        /* 128 * b - c * floor((128 * b) / c) */
    df86:	29 89       	ldd	r18, Y+17	; 0x11
    df88:	3a 89       	ldd	r19, Y+18	; 0x12
    df8a:	4b 89       	ldd	r20, Y+19	; 0x13
    df8c:	5c 89       	ldd	r21, Y+20	; 0x14
    df8e:	89 85       	ldd	r24, Y+9	; 0x09
    df90:	9a 85       	ldd	r25, Y+10	; 0x0a
    df92:	ab 85       	ldd	r26, Y+11	; 0x0b
    df94:	bc 85       	ldd	r27, Y+12	; 0x0c
    df96:	bc 01       	movw	r22, r24
    df98:	cd 01       	movw	r24, r26
    df9a:	0e 94 06 7d 	call	0xfa0c	; 0xfa0c <__mulsi3>
    df9e:	9b 01       	movw	r18, r22
    dfa0:	ac 01       	movw	r20, r24
    dfa2:	8d 81       	ldd	r24, Y+5	; 0x05
    dfa4:	9e 81       	ldd	r25, Y+6	; 0x06
    dfa6:	af 81       	ldd	r26, Y+7	; 0x07
    dfa8:	b8 85       	ldd	r27, Y+8	; 0x08
    dfaa:	82 1b       	sub	r24, r18
    dfac:	93 0b       	sbc	r25, r19
    dfae:	a4 0b       	sbc	r26, r20
    dfb0:	b5 0b       	sbc	r27, r21
    dfb2:	29 8d       	ldd	r18, Y+25	; 0x19
    dfb4:	3a 8d       	ldd	r19, Y+26	; 0x1a
    dfb6:	f9 01       	movw	r30, r18
    dfb8:	84 83       	std	Z+4, r24	; 0x04
    dfba:	95 83       	std	Z+5, r25	; 0x05
    dfbc:	a6 83       	std	Z+6, r26	; 0x06
    dfbe:	b7 83       	std	Z+7, r27	; 0x07
			reg->ms.p3 = c;
    dfc0:	89 89       	ldd	r24, Y+17	; 0x11
    dfc2:	9a 89       	ldd	r25, Y+18	; 0x12
    dfc4:	ab 89       	ldd	r26, Y+19	; 0x13
    dfc6:	bc 89       	ldd	r27, Y+20	; 0x14
    dfc8:	29 8d       	ldd	r18, Y+25	; 0x19
    dfca:	3a 8d       	ldd	r19, Y+26	; 0x1a
    dfcc:	f9 01       	movw	r30, r18
    dfce:	80 87       	std	Z+8, r24	; 0x08
    dfd0:	91 87       	std	Z+9, r25	; 0x09
    dfd2:	a2 87       	std	Z+10, r26	; 0x0a
    dfd4:	b3 87       	std	Z+11, r27	; 0x0b
		}

		return(freq_Fout);
    dfd6:	8d 89       	ldd	r24, Y+21	; 0x15
    dfd8:	9e 89       	ldd	r25, Y+22	; 0x16
    dfda:	af 89       	ldd	r26, Y+23	; 0x17
    dfdc:	b8 8d       	ldd	r27, Y+24	; 0x18
	}
    dfde:	bc 01       	movw	r22, r24
    dfe0:	cd 01       	movw	r24, r26
    dfe2:	6e 96       	adiw	r28, 0x1e	; 30
    dfe4:	cd bf       	out	0x3d, r28	; 61
    dfe6:	de bf       	out	0x3e, r29	; 62
    dfe8:	df 91       	pop	r29
    dfea:	cf 91       	pop	r28
    dfec:	1f 91       	pop	r17
    dfee:	0f 91       	pop	r16
    dff0:	08 95       	ret

0000dff2 <_Z17si5351_write_bulkhPhh>:


	bool si5351_write_bulk(uint8_t regAddr, uint8_t *data, uint8_t bytes)
	{
    dff2:	cf 93       	push	r28
    dff4:	df 93       	push	r29
    dff6:	cd b7       	in	r28, 0x3d	; 61
    dff8:	de b7       	in	r29, 0x3e	; 62
    dffa:	26 97       	sbiw	r28, 0x06	; 6
    dffc:	cd bf       	out	0x3d, r28	; 61
    dffe:	de bf       	out	0x3e, r29	; 62
    e000:	8b 83       	std	Y+3, r24	; 0x03
    e002:	6c 83       	std	Y+4, r22	; 0x04
    e004:	7d 83       	std	Y+5, r23	; 0x05
    e006:	4e 83       	std	Y+6, r20	; 0x06
		uint8_t tries = 5;
    e008:	85 e0       	ldi	r24, 0x05	; 5
    e00a:	89 83       	std	Y+1, r24	; 0x01
		bool fail;
		while(tries-- && (fail = I2C_1_SendData(SI5351_I2C_SLAVE_ADDR, regAddr, data, bytes) != bytes));
    e00c:	89 81       	ldd	r24, Y+1	; 0x01
    e00e:	9f ef       	ldi	r25, 0xFF	; 255
    e010:	98 0f       	add	r25, r24
    e012:	99 83       	std	Y+1, r25	; 0x01
    e014:	88 23       	and	r24, r24
    e016:	a1 f0       	breq	.+40     	; 0xe040 <_Z17si5351_write_bulkhPhh+0x4e>
    e018:	8c 81       	ldd	r24, Y+4	; 0x04
    e01a:	9d 81       	ldd	r25, Y+5	; 0x05
    e01c:	2e 81       	ldd	r18, Y+6	; 0x06
    e01e:	ac 01       	movw	r20, r24
    e020:	6b 81       	ldd	r22, Y+3	; 0x03
    e022:	80 ec       	ldi	r24, 0xC0	; 192
    e024:	0e 94 c3 53 	call	0xa786	; 0xa786 <I2C_1_SendData>
    e028:	28 2f       	mov	r18, r24
    e02a:	81 e0       	ldi	r24, 0x01	; 1
    e02c:	9e 81       	ldd	r25, Y+6	; 0x06
    e02e:	29 17       	cp	r18, r25
    e030:	09 f4       	brne	.+2      	; 0xe034 <_Z17si5351_write_bulkhPhh+0x42>
    e032:	80 e0       	ldi	r24, 0x00	; 0
    e034:	8a 83       	std	Y+2, r24	; 0x02
    e036:	8a 81       	ldd	r24, Y+2	; 0x02
    e038:	88 23       	and	r24, r24
    e03a:	11 f0       	breq	.+4      	; 0xe040 <_Z17si5351_write_bulkhPhh+0x4e>
    e03c:	81 e0       	ldi	r24, 0x01	; 1
    e03e:	01 c0       	rjmp	.+2      	; 0xe042 <_Z17si5351_write_bulkhPhh+0x50>
    e040:	80 e0       	ldi	r24, 0x00	; 0
    e042:	88 23       	and	r24, r24
    e044:	09 f0       	breq	.+2      	; 0xe048 <_Z17si5351_write_bulkhPhh+0x56>
    e046:	e2 cf       	rjmp	.-60     	; 0xe00c <_Z17si5351_write_bulkhPhh+0x1a>
		return(fail);
    e048:	8a 81       	ldd	r24, Y+2	; 0x02
	}
    e04a:	26 96       	adiw	r28, 0x06	; 6
    e04c:	cd bf       	out	0x3d, r28	; 61
    e04e:	de bf       	out	0x3e, r29	; 62
    e050:	df 91       	pop	r29
    e052:	cf 91       	pop	r28
    e054:	08 95       	ret

0000e056 <_Z16si5351_read_bulkhPhh>:

	bool si5351_read_bulk(uint8_t regAddr, uint8_t *data, uint8_t bytes)
	{
    e056:	cf 93       	push	r28
    e058:	df 93       	push	r29
    e05a:	cd b7       	in	r28, 0x3d	; 61
    e05c:	de b7       	in	r29, 0x3e	; 62
    e05e:	26 97       	sbiw	r28, 0x06	; 6
    e060:	cd bf       	out	0x3d, r28	; 61
    e062:	de bf       	out	0x3e, r29	; 62
    e064:	8b 83       	std	Y+3, r24	; 0x03
    e066:	6c 83       	std	Y+4, r22	; 0x04
    e068:	7d 83       	std	Y+5, r23	; 0x05
    e06a:	4e 83       	std	Y+6, r20	; 0x06
		uint8_t tries = 5;
    e06c:	85 e0       	ldi	r24, 0x05	; 5
    e06e:	89 83       	std	Y+1, r24	; 0x01
		bool fail;
		while(tries-- && (fail = I2C_1_GetData(SI5351_I2C_SLAVE_ADDR, regAddr, data, bytes) != bytes));
    e070:	89 81       	ldd	r24, Y+1	; 0x01
    e072:	9f ef       	ldi	r25, 0xFF	; 255
    e074:	98 0f       	add	r25, r24
    e076:	99 83       	std	Y+1, r25	; 0x01
    e078:	88 23       	and	r24, r24
    e07a:	a1 f0       	breq	.+40     	; 0xe0a4 <_Z16si5351_read_bulkhPhh+0x4e>
    e07c:	8c 81       	ldd	r24, Y+4	; 0x04
    e07e:	9d 81       	ldd	r25, Y+5	; 0x05
    e080:	2e 81       	ldd	r18, Y+6	; 0x06
    e082:	ac 01       	movw	r20, r24
    e084:	6b 81       	ldd	r22, Y+3	; 0x03
    e086:	80 ec       	ldi	r24, 0xC0	; 192
    e088:	0e 94 2c 54 	call	0xa858	; 0xa858 <I2C_1_GetData>
    e08c:	28 2f       	mov	r18, r24
    e08e:	81 e0       	ldi	r24, 0x01	; 1
    e090:	9e 81       	ldd	r25, Y+6	; 0x06
    e092:	29 17       	cp	r18, r25
    e094:	09 f4       	brne	.+2      	; 0xe098 <_Z16si5351_read_bulkhPhh+0x42>
    e096:	80 e0       	ldi	r24, 0x00	; 0
    e098:	8a 83       	std	Y+2, r24	; 0x02
    e09a:	8a 81       	ldd	r24, Y+2	; 0x02
    e09c:	88 23       	and	r24, r24
    e09e:	11 f0       	breq	.+4      	; 0xe0a4 <_Z16si5351_read_bulkhPhh+0x4e>
    e0a0:	81 e0       	ldi	r24, 0x01	; 1
    e0a2:	01 c0       	rjmp	.+2      	; 0xe0a6 <_Z16si5351_read_bulkhPhh+0x50>
    e0a4:	80 e0       	ldi	r24, 0x00	; 0
    e0a6:	88 23       	and	r24, r24
    e0a8:	09 f0       	breq	.+2      	; 0xe0ac <_Z16si5351_read_bulkhPhh+0x56>
    e0aa:	e2 cf       	rjmp	.-60     	; 0xe070 <_Z16si5351_read_bulkhPhh+0x1a>
		return(fail);
    e0ac:	8a 81       	ldd	r24, Y+2	; 0x02
	}
    e0ae:	26 96       	adiw	r28, 0x06	; 6
    e0b0:	cd bf       	out	0x3d, r28	; 61
    e0b2:	de bf       	out	0x3e, r29	; 62
    e0b4:	df 91       	pop	r29
    e0b6:	cf 91       	pop	r28
    e0b8:	08 95       	ret

0000e0ba <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll>:
 *
 * Set the desired PLL source for a multisynth.
 *
 */
	bool set_multisynth_registers_source(Si5351_clock clk, Si5351_pll pll)
	{
    e0ba:	cf 93       	push	r28
    e0bc:	df 93       	push	r29
    e0be:	cd b7       	in	r28, 0x3d	; 61
    e0c0:	de b7       	in	r29, 0x3e	; 62
    e0c2:	25 97       	sbiw	r28, 0x05	; 5
    e0c4:	cd bf       	out	0x3d, r28	; 61
    e0c6:	de bf       	out	0x3e, r29	; 62
    e0c8:	8c 83       	std	Y+4, r24	; 0x04
    e0ca:	6d 83       	std	Y+5, r22	; 0x05
		uint8_t reg_val;
		uint8_t data[2];
		
		if(si5351_read_bulk(SI5351_CLK0_CTRL + (uint8_t)clk, data, 1))
    e0cc:	8c 81       	ldd	r24, Y+4	; 0x04
    e0ce:	20 e1       	ldi	r18, 0x10	; 16
    e0d0:	28 0f       	add	r18, r24
    e0d2:	ce 01       	movw	r24, r28
    e0d4:	02 96       	adiw	r24, 0x02	; 2
    e0d6:	41 e0       	ldi	r20, 0x01	; 1
    e0d8:	bc 01       	movw	r22, r24
    e0da:	82 2f       	mov	r24, r18
    e0dc:	0e 94 2b 70 	call	0xe056	; 0xe056 <_Z16si5351_read_bulkhPhh>
    e0e0:	88 23       	and	r24, r24
    e0e2:	11 f0       	breq	.+4      	; 0xe0e8 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x2e>
		{
			return(true);
    e0e4:	81 e0       	ldi	r24, 0x01	; 1
    e0e6:	20 c0       	rjmp	.+64     	; 0xe128 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x6e>
		}
		
		reg_val = data[0];
    e0e8:	8a 81       	ldd	r24, Y+2	; 0x02
    e0ea:	89 83       	std	Y+1, r24	; 0x01

		if(pll == SI5351_PLLA)
    e0ec:	8d 81       	ldd	r24, Y+5	; 0x05
    e0ee:	81 30       	cpi	r24, 0x01	; 1
    e0f0:	21 f4       	brne	.+8      	; 0xe0fa <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x40>
		{
			reg_val &= ~(SI5351_CLK_PLL_SELECT);
    e0f2:	89 81       	ldd	r24, Y+1	; 0x01
    e0f4:	8f 7d       	andi	r24, 0xDF	; 223
    e0f6:	89 83       	std	Y+1, r24	; 0x01
    e0f8:	06 c0       	rjmp	.+12     	; 0xe106 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x4c>
		}
		else if(pll == SI5351_PLLB)
    e0fa:	8d 81       	ldd	r24, Y+5	; 0x05
    e0fc:	82 30       	cpi	r24, 0x02	; 2
    e0fe:	19 f4       	brne	.+6      	; 0xe106 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x4c>
		{
			reg_val |= SI5351_CLK_PLL_SELECT;
    e100:	89 81       	ldd	r24, Y+1	; 0x01
    e102:	80 62       	ori	r24, 0x20	; 32
    e104:	89 83       	std	Y+1, r24	; 0x01
		}

		data[0] = reg_val;
    e106:	89 81       	ldd	r24, Y+1	; 0x01
    e108:	8a 83       	std	Y+2, r24	; 0x02
		if(si5351_write_bulk(SI5351_CLK0_CTRL + (uint8_t)clk, data, 1))
    e10a:	8c 81       	ldd	r24, Y+4	; 0x04
    e10c:	20 e1       	ldi	r18, 0x10	; 16
    e10e:	28 0f       	add	r18, r24
    e110:	ce 01       	movw	r24, r28
    e112:	02 96       	adiw	r24, 0x02	; 2
    e114:	41 e0       	ldi	r20, 0x01	; 1
    e116:	bc 01       	movw	r22, r24
    e118:	82 2f       	mov	r24, r18
    e11a:	0e 94 f9 6f 	call	0xdff2	; 0xdff2 <_Z17si5351_write_bulkhPhh>
    e11e:	88 23       	and	r24, r24
    e120:	11 f0       	breq	.+4      	; 0xe126 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x6c>
		{
			return(true);
    e122:	81 e0       	ldi	r24, 0x01	; 1
    e124:	01 c0       	rjmp	.+2      	; 0xe128 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x6e>
		}
		
		return(false);
    e126:	80 e0       	ldi	r24, 0x00	; 0
	}
    e128:	25 96       	adiw	r28, 0x05	; 5
    e12a:	cd bf       	out	0x3d, r28	; 61
    e12c:	de bf       	out	0x3e, r29	; 62
    e12e:	df 91       	pop	r29
    e130:	cf 91       	pop	r28
    e132:	08 95       	ret

0000e134 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb>:
 * r_div - Desired r_div ratio
 * div_by_4 - 1 Divide By 4 mode: 0 to disable
 *
 */
	bool set_multisynth_registers(Si5351_clock clk, Union_si5351_regs ms_reg, bool int_mode, uint8_t r_div, bool div_by_4)
	{
    e134:	8f 92       	push	r8
    e136:	af 92       	push	r10
    e138:	cf 92       	push	r12
    e13a:	df 92       	push	r13
    e13c:	ef 92       	push	r14
    e13e:	ff 92       	push	r15
    e140:	0f 93       	push	r16
    e142:	1f 93       	push	r17
    e144:	cf 93       	push	r28
    e146:	df 93       	push	r29
    e148:	cd b7       	in	r28, 0x3d	; 61
    e14a:	de b7       	in	r29, 0x3e	; 62
    e14c:	6e 97       	sbiw	r28, 0x1e	; 30
    e14e:	cd bf       	out	0x3d, r28	; 61
    e150:	de bf       	out	0x3e, r29	; 62
    e152:	88 8b       	std	Y+16, r24	; 0x10
    e154:	c9 8a       	std	Y+17, r12	; 0x11
    e156:	da 8a       	std	Y+18, r13	; 0x12
    e158:	eb 8a       	std	Y+19, r14	; 0x13
    e15a:	fc 8a       	std	Y+20, r15	; 0x14
    e15c:	0d 8b       	std	Y+21, r16	; 0x15
    e15e:	1e 8b       	std	Y+22, r17	; 0x16
    e160:	2f 8b       	std	Y+23, r18	; 0x17
    e162:	38 8f       	std	Y+24, r19	; 0x18
    e164:	49 8f       	std	Y+25, r20	; 0x19
    e166:	5a 8f       	std	Y+26, r21	; 0x1a
    e168:	6b 8f       	std	Y+27, r22	; 0x1b
    e16a:	7c 8f       	std	Y+28, r23	; 0x1c
    e16c:	ad 8e       	std	Y+29, r10	; 0x1d
    e16e:	8e 8e       	std	Y+30, r8	; 0x1e
		uint8_t params[11];
		uint8_t i = 0;
    e170:	19 82       	std	Y+1, r1	; 0x01
		uint8_t reg_val;
		uint8_t data[2];

		/* Registers 42-43 for CLK0; 50-51 for CLK1 */
		params[i++] = ms_reg.reg.p3_1;
    e172:	89 81       	ldd	r24, Y+1	; 0x01
    e174:	91 e0       	ldi	r25, 0x01	; 1
    e176:	98 0f       	add	r25, r24
    e178:	99 83       	std	Y+1, r25	; 0x01
    e17a:	88 2f       	mov	r24, r24
    e17c:	90 e0       	ldi	r25, 0x00	; 0
    e17e:	4a 8d       	ldd	r20, Y+26	; 0x1a
    e180:	9e 01       	movw	r18, r28
    e182:	2d 5f       	subi	r18, 0xFD	; 253
    e184:	3f 4f       	sbci	r19, 0xFF	; 255
    e186:	82 0f       	add	r24, r18
    e188:	93 1f       	adc	r25, r19
    e18a:	fc 01       	movw	r30, r24
    e18c:	40 83       	st	Z, r20
		params[i++] = ms_reg.reg.p3_0;
    e18e:	89 81       	ldd	r24, Y+1	; 0x01
    e190:	91 e0       	ldi	r25, 0x01	; 1
    e192:	98 0f       	add	r25, r24
    e194:	99 83       	std	Y+1, r25	; 0x01
    e196:	88 2f       	mov	r24, r24
    e198:	90 e0       	ldi	r25, 0x00	; 0
    e19a:	49 8d       	ldd	r20, Y+25	; 0x19
    e19c:	9e 01       	movw	r18, r28
    e19e:	2d 5f       	subi	r18, 0xFD	; 253
    e1a0:	3f 4f       	sbci	r19, 0xFF	; 255
    e1a2:	82 0f       	add	r24, r18
    e1a4:	93 1f       	adc	r25, r19
    e1a6:	fc 01       	movw	r30, r24
    e1a8:	40 83       	st	Z, r20

		/* Register 44 for CLK0; 52 for CLK1 */
		if(si5351_read_bulk((SI5351_CLK0_PARAMETERS + 2) + (clk * 8), data, 1))
    e1aa:	88 89       	ldd	r24, Y+16	; 0x10
    e1ac:	88 0f       	add	r24, r24
    e1ae:	88 0f       	add	r24, r24
    e1b0:	88 0f       	add	r24, r24
    e1b2:	2c e2       	ldi	r18, 0x2C	; 44
    e1b4:	28 0f       	add	r18, r24
    e1b6:	ce 01       	movw	r24, r28
    e1b8:	0e 96       	adiw	r24, 0x0e	; 14
    e1ba:	41 e0       	ldi	r20, 0x01	; 1
    e1bc:	bc 01       	movw	r22, r24
    e1be:	82 2f       	mov	r24, r18
    e1c0:	0e 94 2b 70 	call	0xe056	; 0xe056 <_Z16si5351_read_bulkhPhh>
    e1c4:	88 23       	and	r24, r24
    e1c6:	11 f0       	breq	.+4      	; 0xe1cc <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x98>
		{
			return(true);
    e1c8:	81 e0       	ldi	r24, 0x01	; 1
    e1ca:	bc c0       	rjmp	.+376    	; 0xe344 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x210>
		}
		
		reg_val = data[0];
    e1cc:	8e 85       	ldd	r24, Y+14	; 0x0e
    e1ce:	8a 83       	std	Y+2, r24	; 0x02

		reg_val &= 0xFC;    /*~(0x03); */
    e1d0:	8a 81       	ldd	r24, Y+2	; 0x02
    e1d2:	8c 7f       	andi	r24, 0xFC	; 252
    e1d4:	8a 83       	std	Y+2, r24	; 0x02
		params[i++] = reg_val | (ms_reg.reg.p1_2 & 0x03);
    e1d6:	89 81       	ldd	r24, Y+1	; 0x01
    e1d8:	91 e0       	ldi	r25, 0x01	; 1
    e1da:	98 0f       	add	r25, r24
    e1dc:	99 83       	std	Y+1, r25	; 0x01
    e1de:	88 2f       	mov	r24, r24
    e1e0:	90 e0       	ldi	r25, 0x00	; 0
    e1e2:	2b 89       	ldd	r18, Y+19	; 0x13
    e1e4:	32 2f       	mov	r19, r18
    e1e6:	33 70       	andi	r19, 0x03	; 3
    e1e8:	2a 81       	ldd	r18, Y+2	; 0x02
    e1ea:	23 2b       	or	r18, r19
    e1ec:	42 2f       	mov	r20, r18
    e1ee:	9e 01       	movw	r18, r28
    e1f0:	2d 5f       	subi	r18, 0xFD	; 253
    e1f2:	3f 4f       	sbci	r19, 0xFF	; 255
    e1f4:	82 0f       	add	r24, r18
    e1f6:	93 1f       	adc	r25, r19
    e1f8:	fc 01       	movw	r30, r24
    e1fa:	40 83       	st	Z, r20

		/* Registers 45-46 for CLK0 */
		params[i++] = ms_reg.reg.p1_1;
    e1fc:	89 81       	ldd	r24, Y+1	; 0x01
    e1fe:	91 e0       	ldi	r25, 0x01	; 1
    e200:	98 0f       	add	r25, r24
    e202:	99 83       	std	Y+1, r25	; 0x01
    e204:	88 2f       	mov	r24, r24
    e206:	90 e0       	ldi	r25, 0x00	; 0
    e208:	4a 89       	ldd	r20, Y+18	; 0x12
    e20a:	9e 01       	movw	r18, r28
    e20c:	2d 5f       	subi	r18, 0xFD	; 253
    e20e:	3f 4f       	sbci	r19, 0xFF	; 255
    e210:	82 0f       	add	r24, r18
    e212:	93 1f       	adc	r25, r19
    e214:	fc 01       	movw	r30, r24
    e216:	40 83       	st	Z, r20
		params[i++] = ms_reg.reg.p1_0;
    e218:	89 81       	ldd	r24, Y+1	; 0x01
    e21a:	91 e0       	ldi	r25, 0x01	; 1
    e21c:	98 0f       	add	r25, r24
    e21e:	99 83       	std	Y+1, r25	; 0x01
    e220:	88 2f       	mov	r24, r24
    e222:	90 e0       	ldi	r25, 0x00	; 0
    e224:	49 89       	ldd	r20, Y+17	; 0x11
    e226:	9e 01       	movw	r18, r28
    e228:	2d 5f       	subi	r18, 0xFD	; 253
    e22a:	3f 4f       	sbci	r19, 0xFF	; 255
    e22c:	82 0f       	add	r24, r18
    e22e:	93 1f       	adc	r25, r19
    e230:	fc 01       	movw	r30, r24
    e232:	40 83       	st	Z, r20

		/* Register 47 for CLK0 */
		params[i] = (ms_reg.reg.p3_2 << 4);
    e234:	89 81       	ldd	r24, Y+1	; 0x01
    e236:	88 2f       	mov	r24, r24
    e238:	90 e0       	ldi	r25, 0x00	; 0
    e23a:	2b 8d       	ldd	r18, Y+27	; 0x1b
    e23c:	42 2f       	mov	r20, r18
    e23e:	42 95       	swap	r20
    e240:	40 7f       	andi	r20, 0xF0	; 240
    e242:	9e 01       	movw	r18, r28
    e244:	2d 5f       	subi	r18, 0xFD	; 253
    e246:	3f 4f       	sbci	r19, 0xFF	; 255
    e248:	82 0f       	add	r24, r18
    e24a:	93 1f       	adc	r25, r19
    e24c:	fc 01       	movw	r30, r24
    e24e:	40 83       	st	Z, r20
		params[i++] += (ms_reg.reg.p2_2 & 0x0F);
    e250:	29 81       	ldd	r18, Y+1	; 0x01
    e252:	81 e0       	ldi	r24, 0x01	; 1
    e254:	82 0f       	add	r24, r18
    e256:	89 83       	std	Y+1, r24	; 0x01
    e258:	82 2f       	mov	r24, r18
    e25a:	90 e0       	ldi	r25, 0x00	; 0
    e25c:	22 2f       	mov	r18, r18
    e25e:	30 e0       	ldi	r19, 0x00	; 0
    e260:	ae 01       	movw	r20, r28
    e262:	4d 5f       	subi	r20, 0xFD	; 253
    e264:	5f 4f       	sbci	r21, 0xFF	; 255
    e266:	24 0f       	add	r18, r20
    e268:	35 1f       	adc	r19, r21
    e26a:	f9 01       	movw	r30, r18
    e26c:	30 81       	ld	r19, Z
    e26e:	2f 89       	ldd	r18, Y+23	; 0x17
    e270:	2f 70       	andi	r18, 0x0F	; 15
    e272:	43 2f       	mov	r20, r19
    e274:	42 0f       	add	r20, r18
    e276:	9e 01       	movw	r18, r28
    e278:	2d 5f       	subi	r18, 0xFD	; 253
    e27a:	3f 4f       	sbci	r19, 0xFF	; 255
    e27c:	82 0f       	add	r24, r18
    e27e:	93 1f       	adc	r25, r19
    e280:	fc 01       	movw	r30, r24
    e282:	40 83       	st	Z, r20

		/* Registers 48-49 for CLK0 */
		params[i++] = ms_reg.reg.p2_1;
    e284:	89 81       	ldd	r24, Y+1	; 0x01
    e286:	91 e0       	ldi	r25, 0x01	; 1
    e288:	98 0f       	add	r25, r24
    e28a:	99 83       	std	Y+1, r25	; 0x01
    e28c:	88 2f       	mov	r24, r24
    e28e:	90 e0       	ldi	r25, 0x00	; 0
    e290:	4e 89       	ldd	r20, Y+22	; 0x16
    e292:	9e 01       	movw	r18, r28
    e294:	2d 5f       	subi	r18, 0xFD	; 253
    e296:	3f 4f       	sbci	r19, 0xFF	; 255
    e298:	82 0f       	add	r24, r18
    e29a:	93 1f       	adc	r25, r19
    e29c:	fc 01       	movw	r30, r24
    e29e:	40 83       	st	Z, r20
		params[i++] = ms_reg.reg.p2_0;
    e2a0:	89 81       	ldd	r24, Y+1	; 0x01
    e2a2:	91 e0       	ldi	r25, 0x01	; 1
    e2a4:	98 0f       	add	r25, r24
    e2a6:	99 83       	std	Y+1, r25	; 0x01
    e2a8:	88 2f       	mov	r24, r24
    e2aa:	90 e0       	ldi	r25, 0x00	; 0
    e2ac:	4d 89       	ldd	r20, Y+21	; 0x15
    e2ae:	9e 01       	movw	r18, r28
    e2b0:	2d 5f       	subi	r18, 0xFD	; 253
    e2b2:	3f 4f       	sbci	r19, 0xFF	; 255
    e2b4:	82 0f       	add	r24, r18
    e2b6:	93 1f       	adc	r25, r19
    e2b8:	fc 01       	movw	r30, r24
    e2ba:	40 83       	st	Z, r20

		/* Write the parameters */
		switch(clk)
    e2bc:	88 89       	ldd	r24, Y+16	; 0x10
    e2be:	88 2f       	mov	r24, r24
    e2c0:	90 e0       	ldi	r25, 0x00	; 0
    e2c2:	81 30       	cpi	r24, 0x01	; 1
    e2c4:	91 05       	cpc	r25, r1
    e2c6:	89 f0       	breq	.+34     	; 0xe2ea <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1b6>
    e2c8:	82 30       	cpi	r24, 0x02	; 2
    e2ca:	91 05       	cpc	r25, r1
    e2cc:	c9 f0       	breq	.+50     	; 0xe300 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1cc>
    e2ce:	89 2b       	or	r24, r25
    e2d0:	09 f0       	breq	.+2      	; 0xe2d4 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1a0>
			break;

			default:
			{
			}
			break;
    e2d2:	26 c0       	rjmp	.+76     	; 0xe320 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1ec>
		/* Write the parameters */
		switch(clk)
		{
			case SI5351_CLK0:
			{
				if(si5351_write_bulk(SI5351_CLK0_PARAMETERS, params, i))
    e2d4:	ce 01       	movw	r24, r28
    e2d6:	03 96       	adiw	r24, 0x03	; 3
    e2d8:	49 81       	ldd	r20, Y+1	; 0x01
    e2da:	bc 01       	movw	r22, r24
    e2dc:	8a e2       	ldi	r24, 0x2A	; 42
    e2de:	0e 94 f9 6f 	call	0xdff2	; 0xdff2 <_Z17si5351_write_bulkhPhh>
    e2e2:	88 23       	and	r24, r24
    e2e4:	c1 f0       	breq	.+48     	; 0xe316 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1e2>
				{
					return(true);
    e2e6:	81 e0       	ldi	r24, 0x01	; 1
    e2e8:	2d c0       	rjmp	.+90     	; 0xe344 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x210>
			}
			break;

			case SI5351_CLK1:
			{
				if(si5351_write_bulk(SI5351_CLK1_PARAMETERS, params, i))
    e2ea:	ce 01       	movw	r24, r28
    e2ec:	03 96       	adiw	r24, 0x03	; 3
    e2ee:	49 81       	ldd	r20, Y+1	; 0x01
    e2f0:	bc 01       	movw	r22, r24
    e2f2:	82 e3       	ldi	r24, 0x32	; 50
    e2f4:	0e 94 f9 6f 	call	0xdff2	; 0xdff2 <_Z17si5351_write_bulkhPhh>
    e2f8:	88 23       	and	r24, r24
    e2fa:	79 f0       	breq	.+30     	; 0xe31a <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1e6>
				{
					return(true);
    e2fc:	81 e0       	ldi	r24, 0x01	; 1
    e2fe:	22 c0       	rjmp	.+68     	; 0xe344 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x210>
			}
			break;

			case SI5351_CLK2:
			{
				if(si5351_write_bulk(SI5351_CLK2_PARAMETERS, params, i))
    e300:	ce 01       	movw	r24, r28
    e302:	03 96       	adiw	r24, 0x03	; 3
    e304:	49 81       	ldd	r20, Y+1	; 0x01
    e306:	bc 01       	movw	r22, r24
    e308:	8a e3       	ldi	r24, 0x3A	; 58
    e30a:	0e 94 f9 6f 	call	0xdff2	; 0xdff2 <_Z17si5351_write_bulkhPhh>
    e30e:	88 23       	and	r24, r24
    e310:	31 f0       	breq	.+12     	; 0xe31e <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1ea>
				{
					return(true);
    e312:	81 e0       	ldi	r24, 0x01	; 1
    e314:	17 c0       	rjmp	.+46     	; 0xe344 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x210>
				if(si5351_write_bulk(SI5351_CLK0_PARAMETERS, params, i))
				{
					return(true);
				}
			}
			break;
    e316:	00 00       	nop
    e318:	03 c0       	rjmp	.+6      	; 0xe320 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1ec>
				if(si5351_write_bulk(SI5351_CLK1_PARAMETERS, params, i))
				{
					return(true);
				}
			}
			break;
    e31a:	00 00       	nop
    e31c:	01 c0       	rjmp	.+2      	; 0xe320 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1ec>
				if(si5351_write_bulk(SI5351_CLK2_PARAMETERS, params, i))
				{
					return(true);
				}
			}
			break;
    e31e:	00 00       	nop
			{
			}
			break;
		}

		if(set_integer_mode(clk, int_mode))
    e320:	6d 8d       	ldd	r22, Y+29	; 0x1d
    e322:	88 89       	ldd	r24, Y+16	; 0x10
    e324:	0e 94 b0 71 	call	0xe360	; 0xe360 <_Z16set_integer_mode12si5351_clockb>
    e328:	88 23       	and	r24, r24
    e32a:	11 f0       	breq	.+4      	; 0xe330 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1fc>
		{
			return(true);
    e32c:	81 e0       	ldi	r24, 0x01	; 1
    e32e:	0a c0       	rjmp	.+20     	; 0xe344 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x210>
		}
		
		if(ms_div(clk, r_div, div_by_4))
    e330:	4b a5       	ldd	r20, Y+43	; 0x2b
    e332:	6e 8d       	ldd	r22, Y+30	; 0x1e
    e334:	88 89       	ldd	r24, Y+16	; 0x10
    e336:	0e 94 e5 71 	call	0xe3ca	; 0xe3ca <_Z6ms_div12si5351_clockhb>
    e33a:	88 23       	and	r24, r24
    e33c:	11 f0       	breq	.+4      	; 0xe342 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x20e>
		{
			return(true);
    e33e:	81 e0       	ldi	r24, 0x01	; 1
    e340:	01 c0       	rjmp	.+2      	; 0xe344 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x210>
		}
		
		return(false);
    e342:	80 e0       	ldi	r24, 0x00	; 0
	}
    e344:	6e 96       	adiw	r28, 0x1e	; 30
    e346:	cd bf       	out	0x3d, r28	; 61
    e348:	de bf       	out	0x3e, r29	; 62
    e34a:	df 91       	pop	r29
    e34c:	cf 91       	pop	r28
    e34e:	1f 91       	pop	r17
    e350:	0f 91       	pop	r16
    e352:	ff 90       	pop	r15
    e354:	ef 90       	pop	r14
    e356:	df 90       	pop	r13
    e358:	cf 90       	pop	r12
    e35a:	af 90       	pop	r10
    e35c:	8f 90       	pop	r8
    e35e:	08 95       	ret

0000e360 <_Z16set_integer_mode12si5351_clockb>:
 * enable - 1 to enable, 0 to disable
 *
 * Set the indicated multisynth into integer mode.
 */
	bool set_integer_mode(Si5351_clock clk, bool enable)
	{
    e360:	cf 93       	push	r28
    e362:	df 93       	push	r29
    e364:	cd b7       	in	r28, 0x3d	; 61
    e366:	de b7       	in	r29, 0x3e	; 62
    e368:	25 97       	sbiw	r28, 0x05	; 5
    e36a:	cd bf       	out	0x3d, r28	; 61
    e36c:	de bf       	out	0x3e, r29	; 62
    e36e:	8c 83       	std	Y+4, r24	; 0x04
    e370:	6d 83       	std	Y+5, r22	; 0x05
		uint8_t reg_val;
		uint8_t data[2];

		if(si5351_read_bulk(SI5351_CLK0_CTRL + (uint8_t)clk, data, 1))
    e372:	8c 81       	ldd	r24, Y+4	; 0x04
    e374:	20 e1       	ldi	r18, 0x10	; 16
    e376:	28 0f       	add	r18, r24
    e378:	ce 01       	movw	r24, r28
    e37a:	02 96       	adiw	r24, 0x02	; 2
    e37c:	41 e0       	ldi	r20, 0x01	; 1
    e37e:	bc 01       	movw	r22, r24
    e380:	82 2f       	mov	r24, r18
    e382:	0e 94 2b 70 	call	0xe056	; 0xe056 <_Z16si5351_read_bulkhPhh>
    e386:	88 23       	and	r24, r24
    e388:	11 f0       	breq	.+4      	; 0xe38e <_Z16set_integer_mode12si5351_clockb+0x2e>
		{
			return(true);
    e38a:	81 e0       	ldi	r24, 0x01	; 1
    e38c:	18 c0       	rjmp	.+48     	; 0xe3be <_Z16set_integer_mode12si5351_clockb+0x5e>
		}
		
		reg_val = data[0];
    e38e:	8a 81       	ldd	r24, Y+2	; 0x02
    e390:	89 83       	std	Y+1, r24	; 0x01

		if(enable)
    e392:	8d 81       	ldd	r24, Y+5	; 0x05
    e394:	88 23       	and	r24, r24
    e396:	21 f0       	breq	.+8      	; 0xe3a0 <_Z16set_integer_mode12si5351_clockb+0x40>
		{
			reg_val |= (SI5351_CLK_INTEGER_MODE);
    e398:	89 81       	ldd	r24, Y+1	; 0x01
    e39a:	80 64       	ori	r24, 0x40	; 64
    e39c:	89 83       	std	Y+1, r24	; 0x01
    e39e:	03 c0       	rjmp	.+6      	; 0xe3a6 <_Z16set_integer_mode12si5351_clockb+0x46>
		}
		else
		{
			reg_val &= ~(SI5351_CLK_INTEGER_MODE);
    e3a0:	89 81       	ldd	r24, Y+1	; 0x01
    e3a2:	8f 7b       	andi	r24, 0xBF	; 191
    e3a4:	89 83       	std	Y+1, r24	; 0x01
		}

		data[0] = reg_val;
    e3a6:	89 81       	ldd	r24, Y+1	; 0x01
    e3a8:	8a 83       	std	Y+2, r24	; 0x02
		return(si5351_write_bulk(SI5351_CLK0_CTRL + (uint8_t)clk, data, 1));
    e3aa:	8c 81       	ldd	r24, Y+4	; 0x04
    e3ac:	20 e1       	ldi	r18, 0x10	; 16
    e3ae:	28 0f       	add	r18, r24
    e3b0:	ce 01       	movw	r24, r28
    e3b2:	02 96       	adiw	r24, 0x02	; 2
    e3b4:	41 e0       	ldi	r20, 0x01	; 1
    e3b6:	bc 01       	movw	r22, r24
    e3b8:	82 2f       	mov	r24, r18
    e3ba:	0e 94 f9 6f 	call	0xdff2	; 0xdff2 <_Z17si5351_write_bulkhPhh>
	}
    e3be:	25 96       	adiw	r28, 0x05	; 5
    e3c0:	cd bf       	out	0x3d, r28	; 61
    e3c2:	de bf       	out	0x3e, r29	; 62
    e3c4:	df 91       	pop	r29
    e3c6:	cf 91       	pop	r28
    e3c8:	08 95       	ret

0000e3ca <_Z6ms_div12si5351_clockhb>:


	bool ms_div(Si5351_clock clk, uint8_t r_div, bool div_by_4)
	{
    e3ca:	cf 93       	push	r28
    e3cc:	df 93       	push	r29
    e3ce:	cd b7       	in	r28, 0x3d	; 61
    e3d0:	de b7       	in	r29, 0x3e	; 62
    e3d2:	27 97       	sbiw	r28, 0x07	; 7
    e3d4:	cd bf       	out	0x3d, r28	; 61
    e3d6:	de bf       	out	0x3e, r29	; 62
    e3d8:	8d 83       	std	Y+5, r24	; 0x05
    e3da:	6e 83       	std	Y+6, r22	; 0x06
    e3dc:	4f 83       	std	Y+7, r20	; 0x07
		uint8_t reg_val, reg_addr;
		uint8_t data[2];

		switch(clk)
    e3de:	8d 81       	ldd	r24, Y+5	; 0x05
    e3e0:	88 2f       	mov	r24, r24
    e3e2:	90 e0       	ldi	r25, 0x00	; 0
    e3e4:	81 30       	cpi	r24, 0x01	; 1
    e3e6:	91 05       	cpc	r25, r1
    e3e8:	41 f0       	breq	.+16     	; 0xe3fa <_Z6ms_div12si5351_clockhb+0x30>
    e3ea:	82 30       	cpi	r24, 0x02	; 2
    e3ec:	91 05       	cpc	r25, r1
    e3ee:	41 f0       	breq	.+16     	; 0xe400 <_Z6ms_div12si5351_clockhb+0x36>
    e3f0:	89 2b       	or	r24, r25
    e3f2:	49 f4       	brne	.+18     	; 0xe406 <_Z6ms_div12si5351_clockhb+0x3c>
		{
			case SI5351_CLK0:
			{
				reg_addr = SI5351_CLK0_PARAMETERS + 2;
    e3f4:	8c e2       	ldi	r24, 0x2C	; 44
    e3f6:	8a 83       	std	Y+2, r24	; 0x02
			}
			break;
    e3f8:	08 c0       	rjmp	.+16     	; 0xe40a <_Z6ms_div12si5351_clockhb+0x40>

			case SI5351_CLK1:
			{
				reg_addr = SI5351_CLK1_PARAMETERS + 2;
    e3fa:	84 e3       	ldi	r24, 0x34	; 52
    e3fc:	8a 83       	std	Y+2, r24	; 0x02
			}
			break;
    e3fe:	05 c0       	rjmp	.+10     	; 0xe40a <_Z6ms_div12si5351_clockhb+0x40>

			case SI5351_CLK2:
			{
				reg_addr = SI5351_CLK2_PARAMETERS + 2;
    e400:	8c e3       	ldi	r24, 0x3C	; 60
    e402:	8a 83       	std	Y+2, r24	; 0x02
			}
			break;
    e404:	02 c0       	rjmp	.+4      	; 0xe40a <_Z6ms_div12si5351_clockhb+0x40>

			default:
				return(true);
    e406:	81 e0       	ldi	r24, 0x01	; 1
    e408:	30 c0       	rjmp	.+96     	; 0xe46a <_Z6ms_div12si5351_clockhb+0xa0>
		}

		if(si5351_read_bulk(reg_addr, data, 1))
    e40a:	ce 01       	movw	r24, r28
    e40c:	03 96       	adiw	r24, 0x03	; 3
    e40e:	41 e0       	ldi	r20, 0x01	; 1
    e410:	bc 01       	movw	r22, r24
    e412:	8a 81       	ldd	r24, Y+2	; 0x02
    e414:	0e 94 2b 70 	call	0xe056	; 0xe056 <_Z16si5351_read_bulkhPhh>
    e418:	88 23       	and	r24, r24
    e41a:	11 f0       	breq	.+4      	; 0xe420 <_Z6ms_div12si5351_clockhb+0x56>
		{
			return(true);
    e41c:	81 e0       	ldi	r24, 0x01	; 1
    e41e:	25 c0       	rjmp	.+74     	; 0xe46a <_Z6ms_div12si5351_clockhb+0xa0>
		}
		
		reg_val = data[0];
    e420:	8b 81       	ldd	r24, Y+3	; 0x03
    e422:	89 83       	std	Y+1, r24	; 0x01

		/* Clear the appropriate bits */
		reg_val &= ~(0x7c);
    e424:	89 81       	ldd	r24, Y+1	; 0x01
    e426:	83 78       	andi	r24, 0x83	; 131
    e428:	89 83       	std	Y+1, r24	; 0x01

		if(div_by_4)
    e42a:	8f 81       	ldd	r24, Y+7	; 0x07
    e42c:	88 23       	and	r24, r24
    e42e:	21 f0       	breq	.+8      	; 0xe438 <_Z6ms_div12si5351_clockhb+0x6e>
		{
			reg_val |= (SI5351_OUTPUT_CLK_DIVBY4);
    e430:	89 81       	ldd	r24, Y+1	; 0x01
    e432:	8c 60       	ori	r24, 0x0C	; 12
    e434:	89 83       	std	Y+1, r24	; 0x01
    e436:	03 c0       	rjmp	.+6      	; 0xe43e <_Z6ms_div12si5351_clockhb+0x74>
		}
		else
		{
			reg_val &= ~(SI5351_OUTPUT_CLK_DIVBY4);
    e438:	89 81       	ldd	r24, Y+1	; 0x01
    e43a:	83 7f       	andi	r24, 0xF3	; 243
    e43c:	89 83       	std	Y+1, r24	; 0x01
		}

		reg_val |= (r_div << SI5351_OUTPUT_CLK_DIV_SHIFT);
    e43e:	8e 81       	ldd	r24, Y+6	; 0x06
    e440:	88 2f       	mov	r24, r24
    e442:	90 e0       	ldi	r25, 0x00	; 0
    e444:	82 95       	swap	r24
    e446:	92 95       	swap	r25
    e448:	90 7f       	andi	r25, 0xF0	; 240
    e44a:	98 27       	eor	r25, r24
    e44c:	80 7f       	andi	r24, 0xF0	; 240
    e44e:	98 27       	eor	r25, r24
    e450:	98 2f       	mov	r25, r24
    e452:	89 81       	ldd	r24, Y+1	; 0x01
    e454:	89 2b       	or	r24, r25
    e456:	89 83       	std	Y+1, r24	; 0x01

		data[0] = reg_val;
    e458:	89 81       	ldd	r24, Y+1	; 0x01
    e45a:	8b 83       	std	Y+3, r24	; 0x03
		return(si5351_write_bulk(reg_addr, data, 1));
    e45c:	ce 01       	movw	r24, r28
    e45e:	03 96       	adiw	r24, 0x03	; 3
    e460:	41 e0       	ldi	r20, 0x01	; 1
    e462:	bc 01       	movw	r22, r24
    e464:	8a 81       	ldd	r24, Y+2	; 0x02
    e466:	0e 94 f9 6f 	call	0xdff2	; 0xdff2 <_Z17si5351_write_bulkhPhh>
	}
    e46a:	27 96       	adiw	r28, 0x07	; 7
    e46c:	cd bf       	out	0x3d, r28	; 61
    e46e:	de bf       	out	0x3e, r29	; 62
    e470:	df 91       	pop	r29
    e472:	cf 91       	pop	r28
    e474:	08 95       	ret

0000e476 <SLPCTRL_init>:
 * \brief Initialize Sleep Controller
 *
 * \return Initialization status.
 */
int8_t SLPCTRL_init()
{
    e476:	cf 93       	push	r28
    e478:	df 93       	push	r29
    e47a:	cd b7       	in	r28, 0x3d	; 61
    e47c:	de b7       	in	r29, 0x3e	; 62

	SLPCTRL.CTRLA = 0 << SLPCTRL_SEN_bp; /* Sleep enable: disabled */
    e47e:	80 e5       	ldi	r24, 0x50	; 80
    e480:	90 e0       	ldi	r25, 0x00	; 0
    e482:	fc 01       	movw	r30, r24
    e484:	10 82       	st	Z, r1
//			 | SLPCTRL_SMODE_IDLE_gc;  /* Idle mode */
//			 | SLPCTRL_SMODE_STDBY_gc; /* Standby Mode */
//			 | SLPCTRL_SMODE_PDOWN_gc; /* Power-down Mode */

	return 0;
    e486:	80 e0       	ldi	r24, 0x00	; 0
}
    e488:	df 91       	pop	r29
    e48a:	cf 91       	pop	r28
    e48c:	08 95       	ret

0000e48e <SLPCTRL_set_sleep_mode>:

void SLPCTRL_set_sleep_mode(SLPCTRL_SMODE_t setmode)
{
    e48e:	cf 93       	push	r28
    e490:	df 93       	push	r29
    e492:	1f 92       	push	r1
    e494:	cd b7       	in	r28, 0x3d	; 61
    e496:	de b7       	in	r29, 0x3e	; 62
    e498:	89 83       	std	Y+1, r24	; 0x01
	SLPCTRL.CTRLA = (SLPCTRL.CTRLA & ~SLPCTRL_SMODE_gm) | (setmode & SLPCTRL_SMODE_gm);
    e49a:	80 e5       	ldi	r24, 0x50	; 80
    e49c:	90 e0       	ldi	r25, 0x00	; 0
    e49e:	20 e5       	ldi	r18, 0x50	; 80
    e4a0:	30 e0       	ldi	r19, 0x00	; 0
    e4a2:	f9 01       	movw	r30, r18
    e4a4:	20 81       	ld	r18, Z
    e4a6:	32 2f       	mov	r19, r18
    e4a8:	39 7f       	andi	r19, 0xF9	; 249
    e4aa:	29 81       	ldd	r18, Y+1	; 0x01
    e4ac:	26 70       	andi	r18, 0x06	; 6
    e4ae:	23 2b       	or	r18, r19
    e4b0:	fc 01       	movw	r30, r24
    e4b2:	20 83       	st	Z, r18
}
    e4b4:	00 00       	nop
    e4b6:	0f 90       	pop	r0
    e4b8:	df 91       	pop	r29
    e4ba:	cf 91       	pop	r28
    e4bc:	08 95       	ret

0000e4be <TIMERB_init>:
 * \brief Initialize tcb interface
 *
 * \return Initialization status.
 */
int8_t TIMERB_init()
{
    e4be:	cf 93       	push	r28
    e4c0:	df 93       	push	r29
    e4c2:	cd b7       	in	r28, 0x3d	; 61
    e4c4:	de b7       	in	r29, 0x3e	; 62
TCB0.INTCTRL = 1 << TCB_CAPT_bp   /* Capture or Timeout: enabled */
    e4c6:	80 e0       	ldi	r24, 0x00	; 0
    e4c8:	9b e0       	ldi	r25, 0x0B	; 11
| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    e4ca:	21 e0       	ldi	r18, 0x01	; 1
    e4cc:	fc 01       	movw	r30, r24
    e4ce:	25 83       	std	Z+5, r18	; 0x05

// Set TOP
TCB0.CCMP = 0x9C40;
    e4d0:	80 e0       	ldi	r24, 0x00	; 0
    e4d2:	9b e0       	ldi	r25, 0x0B	; 11
    e4d4:	20 e4       	ldi	r18, 0x40	; 64
    e4d6:	3c e9       	ldi	r19, 0x9C	; 156
    e4d8:	fc 01       	movw	r30, r24
    e4da:	24 87       	std	Z+12, r18	; 0x0c
    e4dc:	35 87       	std	Z+13, r19	; 0x0d

TCB0.CTRLA = TCB_CLKSEL_DIV2_gc     /* CLK_PER */
    e4de:	80 e0       	ldi	r24, 0x00	; 0
    e4e0:	9b e0       	ldi	r25, 0x0B	; 11
| 1 << TCB_ENABLE_bp   /* Enable: enabled */
| 0 << TCB_RUNSTDBY_bp /* Run Standby: disabled */
| 0 << TCB_SYNCUPD_bp  /* Synchronize Update: disabled */
| 0 << TCB_CASCADE_bp; /* Cascade Two Timer/Counters: disabled */
    e4e2:	23 e0       	ldi	r18, 0x03	; 3
    e4e4:	fc 01       	movw	r30, r24
    e4e6:	20 83       	st	Z, r18

TCB0.INTFLAGS = (TCB_CAPT_bm | TCB_OVF_bm); /* Clear flag */
    e4e8:	80 e0       	ldi	r24, 0x00	; 0
    e4ea:	9b e0       	ldi	r25, 0x0B	; 11
    e4ec:	23 e0       	ldi	r18, 0x03	; 3
    e4ee:	fc 01       	movw	r30, r24
    e4f0:	26 83       	std	Z+6, r18	; 0x06

/********************************************************************************/

TCB1.INTCTRL = 1 << TCB_CAPT_bp   /* Capture or Timeout: enabled */
    e4f2:	80 e1       	ldi	r24, 0x10	; 16
    e4f4:	9b e0       	ldi	r25, 0x0B	; 11
| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    e4f6:	21 e0       	ldi	r18, 0x01	; 1
    e4f8:	fc 01       	movw	r30, r24
    e4fa:	25 83       	std	Z+5, r18	; 0x05

// Set TOP
TCB1.CCMP = 0x5DC0;
    e4fc:	80 e1       	ldi	r24, 0x10	; 16
    e4fe:	9b e0       	ldi	r25, 0x0B	; 11
    e500:	20 ec       	ldi	r18, 0xC0	; 192
    e502:	3d e5       	ldi	r19, 0x5D	; 93
    e504:	fc 01       	movw	r30, r24
    e506:	24 87       	std	Z+12, r18	; 0x0c
    e508:	35 87       	std	Z+13, r19	; 0x0d

TCB1.CTRLA = TCB_CLKSEL_DIV1_gc     /* CLK_PER */
    e50a:	80 e1       	ldi	r24, 0x10	; 16
    e50c:	9b e0       	ldi	r25, 0x0B	; 11
| 1 << TCB_ENABLE_bp   /* Enable: enabled */
| 0 << TCB_RUNSTDBY_bp /* Run Standby: disabled */
| 0 << TCB_SYNCUPD_bp  /* Synchronize Update: disabled */
| 0 << TCB_CASCADE_bp; /* Cascade Two Timer/Counters: disabled */
    e50e:	21 e0       	ldi	r18, 0x01	; 1
    e510:	fc 01       	movw	r30, r24
    e512:	20 83       	st	Z, r18

TCB1.INTFLAGS = TCB_CAPT_bm; /* Clear flag */
    e514:	80 e1       	ldi	r24, 0x10	; 16
    e516:	9b e0       	ldi	r25, 0x0B	; 11
    e518:	21 e0       	ldi	r18, 0x01	; 1
    e51a:	fc 01       	movw	r30, r24
    e51c:	26 83       	std	Z+6, r18	; 0x06


/********************************************************************************/

CPUINT.LVL1VEC = 30; /* Set to level 1 - highest priority interrupt */
    e51e:	80 e1       	ldi	r24, 0x10	; 16
    e520:	91 e0       	ldi	r25, 0x01	; 1
    e522:	2e e1       	ldi	r18, 0x1E	; 30
    e524:	fc 01       	movw	r30, r24
    e526:	23 83       	std	Z+3, r18	; 0x03
TCB2.INTCTRL = 1 << TCB_CAPT_bp   /* Capture or Timeout: enabled */
    e528:	80 e2       	ldi	r24, 0x20	; 32
    e52a:	9b e0       	ldi	r25, 0x0B	; 11
| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    e52c:	21 e0       	ldi	r18, 0x01	; 1
    e52e:	fc 01       	movw	r30, r24
    e530:	25 83       	std	Z+5, r18	; 0x05

// Set TOP
TCB2.CCMP = 0xFFFF;
    e532:	80 e2       	ldi	r24, 0x20	; 32
    e534:	9b e0       	ldi	r25, 0x0B	; 11
    e536:	2f ef       	ldi	r18, 0xFF	; 255
    e538:	3f ef       	ldi	r19, 0xFF	; 255
    e53a:	fc 01       	movw	r30, r24
    e53c:	24 87       	std	Z+12, r18	; 0x0c
    e53e:	35 87       	std	Z+13, r19	; 0x0d

TCB2.CTRLA = TCB_CLKSEL_DIV2_gc     /* CLK_PER */
    e540:	80 e2       	ldi	r24, 0x20	; 32
    e542:	9b e0       	ldi	r25, 0x0B	; 11
| 1 << TCB_ENABLE_bp   /* Enable: enabled */
| 0 << TCB_RUNSTDBY_bp /* Run Standby: disabled */
| 0 << TCB_SYNCUPD_bp  /* Synchronize Update: disabled */
| 0 << TCB_CASCADE_bp; /* Cascade Two Timer/Counters: disabled */
    e544:	23 e0       	ldi	r18, 0x03	; 3
    e546:	fc 01       	movw	r30, r24
    e548:	20 83       	st	Z, r18

TCB2.INTFLAGS = TCB_CAPT_bm; /* Clear flag */
    e54a:	80 e2       	ldi	r24, 0x20	; 32
    e54c:	9b e0       	ldi	r25, 0x0B	; 11
    e54e:	21 e0       	ldi	r18, 0x01	; 1
    e550:	fc 01       	movw	r30, r24
    e552:	26 83       	std	Z+6, r18	; 0x06
CPUINT.LVL1VEC = 30; /* Set to level 1 - highest priority interrupt */
    e554:	80 e1       	ldi	r24, 0x10	; 16
    e556:	91 e0       	ldi	r25, 0x01	; 1
    e558:	2e e1       	ldi	r18, 0x1E	; 30
    e55a:	fc 01       	movw	r30, r24
    e55c:	23 83       	std	Z+3, r18	; 0x03


/********************************************************************************/

TCB3.INTCTRL = 1 << TCB_CAPT_bp   /* Capture or Timeout: enabled */
    e55e:	80 e3       	ldi	r24, 0x30	; 48
    e560:	9b e0       	ldi	r25, 0x0B	; 11
| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    e562:	21 e0       	ldi	r18, 0x01	; 1
    e564:	fc 01       	movw	r30, r24
    e566:	25 83       	std	Z+5, r18	; 0x05

// Set TOP
TCB3.CCMP = 0x9C40;
    e568:	80 e3       	ldi	r24, 0x30	; 48
    e56a:	9b e0       	ldi	r25, 0x0B	; 11
    e56c:	20 e4       	ldi	r18, 0x40	; 64
    e56e:	3c e9       	ldi	r19, 0x9C	; 156
    e570:	fc 01       	movw	r30, r24
    e572:	24 87       	std	Z+12, r18	; 0x0c
    e574:	35 87       	std	Z+13, r19	; 0x0d

TCB3.CTRLA = TCB_CLKSEL_DIV2_gc     /* CLK_PER */
    e576:	80 e3       	ldi	r24, 0x30	; 48
    e578:	9b e0       	ldi	r25, 0x0B	; 11
| 1 << TCB_ENABLE_bp   /* Enable: enabled */
| 0 << TCB_RUNSTDBY_bp /* Run Standby: disabled */
| 0 << TCB_SYNCUPD_bp  /* Synchronize Update: disabled */
| 0 << TCB_CASCADE_bp; /* Cascade Two Timer/Counters: disabled */
    e57a:	23 e0       	ldi	r18, 0x03	; 3
    e57c:	fc 01       	movw	r30, r24
    e57e:	20 83       	st	Z, r18

TCB3.INTFLAGS = TCB_CAPT_bm; /* Clear flag */
    e580:	80 e3       	ldi	r24, 0x30	; 48
    e582:	9b e0       	ldi	r25, 0x0B	; 11
    e584:	21 e0       	ldi	r18, 0x01	; 1
    e586:	fc 01       	movw	r30, r24
    e588:	26 83       	std	Z+6, r18	; 0x06

	return 0;
    e58a:	80 e0       	ldi	r24, 0x00	; 0
}
    e58c:	df 91       	pop	r29
    e58e:	cf 91       	pop	r28
    e590:	08 95       	ret

0000e592 <util_delay_ms>:


bool util_delay_ms(uint32_t delayValue)
{
    e592:	cf 93       	push	r28
    e594:	df 93       	push	r29
    e596:	00 d0       	rcall	.+0      	; 0xe598 <util_delay_ms+0x6>
    e598:	00 d0       	rcall	.+0      	; 0xe59a <util_delay_ms+0x8>
    e59a:	cd b7       	in	r28, 0x3d	; 61
    e59c:	de b7       	in	r29, 0x3e	; 62
    e59e:	69 83       	std	Y+1, r22	; 0x01
    e5a0:	7a 83       	std	Y+2, r23	; 0x02
    e5a2:	8b 83       	std	Y+3, r24	; 0x03
    e5a4:	9c 83       	std	Y+4, r25	; 0x04
	static uint32_t countdownValue=0;
	static bool counting = false;
	
	if(delayValue)
    e5a6:	89 81       	ldd	r24, Y+1	; 0x01
    e5a8:	9a 81       	ldd	r25, Y+2	; 0x02
    e5aa:	ab 81       	ldd	r26, Y+3	; 0x03
    e5ac:	bc 81       	ldd	r27, Y+4	; 0x04
    e5ae:	89 2b       	or	r24, r25
    e5b0:	8a 2b       	or	r24, r26
    e5b2:	8b 2b       	or	r24, r27
    e5b4:	09 f4       	brne	.+2      	; 0xe5b8 <util_delay_ms+0x26>
    e5b6:	84 c0       	rjmp	.+264    	; 0xe6c0 <util_delay_ms+0x12e>
	{
		if(counting)
    e5b8:	80 91 d9 49 	lds	r24, 0x49D9	; 0x8049d9 <_ZZ13util_delay_msE8counting>
    e5bc:	88 23       	and	r24, r24
    e5be:	09 f4       	brne	.+2      	; 0xe5c2 <util_delay_ms+0x30>
    e5c0:	4d c0       	rjmp	.+154    	; 0xe65c <util_delay_ms+0xca>
		{
			if(!g_ms_counter)
    e5c2:	80 91 d5 49 	lds	r24, 0x49D5	; 0x8049d5 <_ZL12g_ms_counter>
    e5c6:	90 91 d6 49 	lds	r25, 0x49D6	; 0x8049d6 <_ZL12g_ms_counter+0x1>
    e5ca:	a0 91 d7 49 	lds	r26, 0x49D7	; 0x8049d7 <_ZL12g_ms_counter+0x2>
    e5ce:	b0 91 d8 49 	lds	r27, 0x49D8	; 0x8049d8 <_ZL12g_ms_counter+0x3>
    e5d2:	89 2b       	or	r24, r25
    e5d4:	8a 2b       	or	r24, r26
    e5d6:	8b 2b       	or	r24, r27
    e5d8:	81 f4       	brne	.+32     	; 0xe5fa <util_delay_ms+0x68>
			{
				TCB1.INTCTRL = 0 << TCB_CAPT_bp   /* Capture or Timeout: disabled */
    e5da:	80 e1       	ldi	r24, 0x10	; 16
    e5dc:	9b e0       	ldi	r25, 0x0B	; 11
				| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    e5de:	fc 01       	movw	r30, r24
    e5e0:	15 82       	std	Z+5, r1	; 0x05

				counting = false;
    e5e2:	10 92 d9 49 	sts	0x49D9, r1	; 0x8049d9 <_ZZ13util_delay_msE8counting>
				countdownValue = 0;
    e5e6:	10 92 da 49 	sts	0x49DA, r1	; 0x8049da <_ZZ13util_delay_msE14countdownValue>
    e5ea:	10 92 db 49 	sts	0x49DB, r1	; 0x8049db <_ZZ13util_delay_msE14countdownValue+0x1>
    e5ee:	10 92 dc 49 	sts	0x49DC, r1	; 0x8049dc <_ZZ13util_delay_msE14countdownValue+0x2>
    e5f2:	10 92 dd 49 	sts	0x49DD, r1	; 0x8049dd <_ZZ13util_delay_msE14countdownValue+0x3>
				return(false); /* time expired */
    e5f6:	80 e0       	ldi	r24, 0x00	; 0
    e5f8:	81 c0       	rjmp	.+258    	; 0xe6fc <util_delay_ms+0x16a>
			}
			else if(delayValue != countdownValue) /* countdown delay changed */
    e5fa:	80 91 da 49 	lds	r24, 0x49DA	; 0x8049da <_ZZ13util_delay_msE14countdownValue>
    e5fe:	90 91 db 49 	lds	r25, 0x49DB	; 0x8049db <_ZZ13util_delay_msE14countdownValue+0x1>
    e602:	a0 91 dc 49 	lds	r26, 0x49DC	; 0x8049dc <_ZZ13util_delay_msE14countdownValue+0x2>
    e606:	b0 91 dd 49 	lds	r27, 0x49DD	; 0x8049dd <_ZZ13util_delay_msE14countdownValue+0x3>
    e60a:	29 81       	ldd	r18, Y+1	; 0x01
    e60c:	3a 81       	ldd	r19, Y+2	; 0x02
    e60e:	4b 81       	ldd	r20, Y+3	; 0x03
    e610:	5c 81       	ldd	r21, Y+4	; 0x04
    e612:	28 17       	cp	r18, r24
    e614:	39 07       	cpc	r19, r25
    e616:	4a 07       	cpc	r20, r26
    e618:	5b 07       	cpc	r21, r27
    e61a:	09 f4       	brne	.+2      	; 0xe61e <util_delay_ms+0x8c>
    e61c:	69 c0       	rjmp	.+210    	; 0xe6f0 <util_delay_ms+0x15e>
			{
				TCB1.CNT = 0x0000;
    e61e:	80 e1       	ldi	r24, 0x10	; 16
    e620:	9b e0       	ldi	r25, 0x0B	; 11
    e622:	fc 01       	movw	r30, r24
    e624:	12 86       	std	Z+10, r1	; 0x0a
    e626:	13 86       	std	Z+11, r1	; 0x0b
				countdownValue = delayValue;
    e628:	89 81       	ldd	r24, Y+1	; 0x01
    e62a:	9a 81       	ldd	r25, Y+2	; 0x02
    e62c:	ab 81       	ldd	r26, Y+3	; 0x03
    e62e:	bc 81       	ldd	r27, Y+4	; 0x04
    e630:	80 93 da 49 	sts	0x49DA, r24	; 0x8049da <_ZZ13util_delay_msE14countdownValue>
    e634:	90 93 db 49 	sts	0x49DB, r25	; 0x8049db <_ZZ13util_delay_msE14countdownValue+0x1>
    e638:	a0 93 dc 49 	sts	0x49DC, r26	; 0x8049dc <_ZZ13util_delay_msE14countdownValue+0x2>
    e63c:	b0 93 dd 49 	sts	0x49DD, r27	; 0x8049dd <_ZZ13util_delay_msE14countdownValue+0x3>
				g_ms_counter = delayValue;
    e640:	89 81       	ldd	r24, Y+1	; 0x01
    e642:	9a 81       	ldd	r25, Y+2	; 0x02
    e644:	ab 81       	ldd	r26, Y+3	; 0x03
    e646:	bc 81       	ldd	r27, Y+4	; 0x04
    e648:	80 93 d5 49 	sts	0x49D5, r24	; 0x8049d5 <_ZL12g_ms_counter>
    e64c:	90 93 d6 49 	sts	0x49D6, r25	; 0x8049d6 <_ZL12g_ms_counter+0x1>
    e650:	a0 93 d7 49 	sts	0x49D7, r26	; 0x8049d7 <_ZL12g_ms_counter+0x2>
    e654:	b0 93 d8 49 	sts	0x49D8, r27	; 0x8049d8 <_ZL12g_ms_counter+0x3>
				return(false);
    e658:	80 e0       	ldi	r24, 0x00	; 0
    e65a:	50 c0       	rjmp	.+160    	; 0xe6fc <util_delay_ms+0x16a>
			}
		}
		else if(delayValue != countdownValue)
    e65c:	80 91 da 49 	lds	r24, 0x49DA	; 0x8049da <_ZZ13util_delay_msE14countdownValue>
    e660:	90 91 db 49 	lds	r25, 0x49DB	; 0x8049db <_ZZ13util_delay_msE14countdownValue+0x1>
    e664:	a0 91 dc 49 	lds	r26, 0x49DC	; 0x8049dc <_ZZ13util_delay_msE14countdownValue+0x2>
    e668:	b0 91 dd 49 	lds	r27, 0x49DD	; 0x8049dd <_ZZ13util_delay_msE14countdownValue+0x3>
    e66c:	29 81       	ldd	r18, Y+1	; 0x01
    e66e:	3a 81       	ldd	r19, Y+2	; 0x02
    e670:	4b 81       	ldd	r20, Y+3	; 0x03
    e672:	5c 81       	ldd	r21, Y+4	; 0x04
    e674:	28 17       	cp	r18, r24
    e676:	39 07       	cpc	r19, r25
    e678:	4a 07       	cpc	r20, r26
    e67a:	5b 07       	cpc	r21, r27
    e67c:	c9 f1       	breq	.+114    	; 0xe6f0 <util_delay_ms+0x15e>
		{
			TCB1.CNT = 0x0000;
    e67e:	80 e1       	ldi	r24, 0x10	; 16
    e680:	9b e0       	ldi	r25, 0x0B	; 11
    e682:	fc 01       	movw	r30, r24
    e684:	12 86       	std	Z+10, r1	; 0x0a
    e686:	13 86       	std	Z+11, r1	; 0x0b
			countdownValue = delayValue;
    e688:	89 81       	ldd	r24, Y+1	; 0x01
    e68a:	9a 81       	ldd	r25, Y+2	; 0x02
    e68c:	ab 81       	ldd	r26, Y+3	; 0x03
    e68e:	bc 81       	ldd	r27, Y+4	; 0x04
    e690:	80 93 da 49 	sts	0x49DA, r24	; 0x8049da <_ZZ13util_delay_msE14countdownValue>
    e694:	90 93 db 49 	sts	0x49DB, r25	; 0x8049db <_ZZ13util_delay_msE14countdownValue+0x1>
    e698:	a0 93 dc 49 	sts	0x49DC, r26	; 0x8049dc <_ZZ13util_delay_msE14countdownValue+0x2>
    e69c:	b0 93 dd 49 	sts	0x49DD, r27	; 0x8049dd <_ZZ13util_delay_msE14countdownValue+0x3>
			g_ms_counter = delayValue;
    e6a0:	89 81       	ldd	r24, Y+1	; 0x01
    e6a2:	9a 81       	ldd	r25, Y+2	; 0x02
    e6a4:	ab 81       	ldd	r26, Y+3	; 0x03
    e6a6:	bc 81       	ldd	r27, Y+4	; 0x04
    e6a8:	80 93 d5 49 	sts	0x49D5, r24	; 0x8049d5 <_ZL12g_ms_counter>
    e6ac:	90 93 d6 49 	sts	0x49D6, r25	; 0x8049d6 <_ZL12g_ms_counter+0x1>
    e6b0:	a0 93 d7 49 	sts	0x49D7, r26	; 0x8049d7 <_ZL12g_ms_counter+0x2>
    e6b4:	b0 93 d8 49 	sts	0x49D8, r27	; 0x8049d8 <_ZL12g_ms_counter+0x3>
			counting = true;
    e6b8:	81 e0       	ldi	r24, 0x01	; 1
    e6ba:	80 93 d9 49 	sts	0x49D9, r24	; 0x8049d9 <_ZZ13util_delay_msE8counting>
    e6be:	18 c0       	rjmp	.+48     	; 0xe6f0 <util_delay_ms+0x15e>
		}
	}
	else
	{
		TCB1.INTCTRL = 0 << TCB_CAPT_bp   /* Capture or Timeout: disabled */
    e6c0:	80 e1       	ldi	r24, 0x10	; 16
    e6c2:	9b e0       	ldi	r25, 0x0B	; 11
		| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    e6c4:	fc 01       	movw	r30, r24
    e6c6:	15 82       	std	Z+5, r1	; 0x05

		counting = false;
    e6c8:	10 92 d9 49 	sts	0x49D9, r1	; 0x8049d9 <_ZZ13util_delay_msE8counting>
		countdownValue = 0;
    e6cc:	10 92 da 49 	sts	0x49DA, r1	; 0x8049da <_ZZ13util_delay_msE14countdownValue>
    e6d0:	10 92 db 49 	sts	0x49DB, r1	; 0x8049db <_ZZ13util_delay_msE14countdownValue+0x1>
    e6d4:	10 92 dc 49 	sts	0x49DC, r1	; 0x8049dc <_ZZ13util_delay_msE14countdownValue+0x2>
    e6d8:	10 92 dd 49 	sts	0x49DD, r1	; 0x8049dd <_ZZ13util_delay_msE14countdownValue+0x3>
		g_ms_counter = 0;
    e6dc:	10 92 d5 49 	sts	0x49D5, r1	; 0x8049d5 <_ZL12g_ms_counter>
    e6e0:	10 92 d6 49 	sts	0x49D6, r1	; 0x8049d6 <_ZL12g_ms_counter+0x1>
    e6e4:	10 92 d7 49 	sts	0x49D7, r1	; 0x8049d7 <_ZL12g_ms_counter+0x2>
    e6e8:	10 92 d8 49 	sts	0x49D8, r1	; 0x8049d8 <_ZL12g_ms_counter+0x3>
		return(false); /* timer reset */
    e6ec:	80 e0       	ldi	r24, 0x00	; 0
    e6ee:	06 c0       	rjmp	.+12     	; 0xe6fc <util_delay_ms+0x16a>
	}
	
	TCB1.INTCTRL = 1 << TCB_CAPT_bp   /* Capture or Timeout: enabled */
    e6f0:	80 e1       	ldi	r24, 0x10	; 16
    e6f2:	9b e0       	ldi	r25, 0x0B	; 11
	| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    e6f4:	21 e0       	ldi	r18, 0x01	; 1
    e6f6:	fc 01       	movw	r30, r24
    e6f8:	25 83       	std	Z+5, r18	; 0x05
	
	return(true);
    e6fa:	81 e0       	ldi	r24, 0x01	; 1
}
    e6fc:	24 96       	adiw	r28, 0x04	; 4
    e6fe:	cd bf       	out	0x3d, r28	; 61
    e700:	de bf       	out	0x3e, r29	; 62
    e702:	df 91       	pop	r29
    e704:	cf 91       	pop	r28
    e706:	08 95       	ret

0000e708 <__vector_30>:

ISR(TCB2_INT_vect)
{
    e708:	1f 92       	push	r1
    e70a:	0f 92       	push	r0
    e70c:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    e710:	0f 92       	push	r0
    e712:	11 24       	eor	r1, r1
    e714:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    e718:	0f 92       	push	r0
    e71a:	2f 93       	push	r18
    e71c:	8f 93       	push	r24
    e71e:	9f 93       	push	r25
    e720:	ef 93       	push	r30
    e722:	ff 93       	push	r31
    e724:	cf 93       	push	r28
    e726:	df 93       	push	r29
    e728:	cd b7       	in	r28, 0x3d	; 61
    e72a:	de b7       	in	r29, 0x3e	; 62
	if(TCB2.INTFLAGS & TCB_CAPT_bm)
    e72c:	80 e2       	ldi	r24, 0x20	; 32
    e72e:	9b e0       	ldi	r25, 0x0B	; 11
    e730:	fc 01       	movw	r30, r24
    e732:	86 81       	ldd	r24, Z+6	; 0x06
    e734:	88 2f       	mov	r24, r24
    e736:	90 e0       	ldi	r25, 0x00	; 0
    e738:	81 70       	andi	r24, 0x01	; 1
    e73a:	99 27       	eor	r25, r25
    e73c:	21 e0       	ldi	r18, 0x01	; 1
    e73e:	89 2b       	or	r24, r25
    e740:	09 f4       	brne	.+2      	; 0xe744 <__vector_30+0x3c>
    e742:	20 e0       	ldi	r18, 0x00	; 0
    e744:	22 23       	and	r18, r18
    e746:	c9 f1       	breq	.+114    	; 0xe7ba <__vector_30+0xb2>
	{
		if(g_i2c1_timeout_ticks) g_i2c1_timeout_ticks--;
    e748:	80 91 47 40 	lds	r24, 0x4047	; 0x804047 <g_i2c1_timeout_ticks>
    e74c:	90 91 48 40 	lds	r25, 0x4048	; 0x804048 <g_i2c1_timeout_ticks+0x1>
    e750:	21 e0       	ldi	r18, 0x01	; 1
    e752:	89 2b       	or	r24, r25
    e754:	09 f4       	brne	.+2      	; 0xe758 <__vector_30+0x50>
    e756:	20 e0       	ldi	r18, 0x00	; 0
    e758:	22 23       	and	r18, r18
    e75a:	49 f0       	breq	.+18     	; 0xe76e <__vector_30+0x66>
    e75c:	80 91 47 40 	lds	r24, 0x4047	; 0x804047 <g_i2c1_timeout_ticks>
    e760:	90 91 48 40 	lds	r25, 0x4048	; 0x804048 <g_i2c1_timeout_ticks+0x1>
    e764:	01 97       	sbiw	r24, 0x01	; 1
    e766:	80 93 47 40 	sts	0x4047, r24	; 0x804047 <g_i2c1_timeout_ticks>
    e76a:	90 93 48 40 	sts	0x4048, r25	; 0x804048 <g_i2c1_timeout_ticks+0x1>
		if(g_i2c0_timeout_ticks) g_i2c0_timeout_ticks--;
    e76e:	80 91 45 40 	lds	r24, 0x4045	; 0x804045 <g_i2c0_timeout_ticks>
    e772:	90 91 46 40 	lds	r25, 0x4046	; 0x804046 <g_i2c0_timeout_ticks+0x1>
    e776:	21 e0       	ldi	r18, 0x01	; 1
    e778:	89 2b       	or	r24, r25
    e77a:	09 f4       	brne	.+2      	; 0xe77e <__vector_30+0x76>
    e77c:	20 e0       	ldi	r18, 0x00	; 0
    e77e:	22 23       	and	r18, r18
    e780:	49 f0       	breq	.+18     	; 0xe794 <__vector_30+0x8c>
    e782:	80 91 45 40 	lds	r24, 0x4045	; 0x804045 <g_i2c0_timeout_ticks>
    e786:	90 91 46 40 	lds	r25, 0x4046	; 0x804046 <g_i2c0_timeout_ticks+0x1>
    e78a:	01 97       	sbiw	r24, 0x01	; 1
    e78c:	80 93 45 40 	sts	0x4045, r24	; 0x804045 <g_i2c0_timeout_ticks>
    e790:	90 93 46 40 	sts	0x4046, r25	; 0x804046 <g_i2c0_timeout_ticks+0x1>
		if(g_serial_timeout_ticks) g_serial_timeout_ticks--;
    e794:	80 91 52 40 	lds	r24, 0x4052	; 0x804052 <g_serial_timeout_ticks>
    e798:	90 91 53 40 	lds	r25, 0x4053	; 0x804053 <g_serial_timeout_ticks+0x1>
    e79c:	21 e0       	ldi	r18, 0x01	; 1
    e79e:	89 2b       	or	r24, r25
    e7a0:	09 f4       	brne	.+2      	; 0xe7a4 <__vector_30+0x9c>
    e7a2:	20 e0       	ldi	r18, 0x00	; 0
    e7a4:	22 23       	and	r18, r18
    e7a6:	49 f0       	breq	.+18     	; 0xe7ba <__vector_30+0xb2>
    e7a8:	80 91 52 40 	lds	r24, 0x4052	; 0x804052 <g_serial_timeout_ticks>
    e7ac:	90 91 53 40 	lds	r25, 0x4053	; 0x804053 <g_serial_timeout_ticks+0x1>
    e7b0:	01 97       	sbiw	r24, 0x01	; 1
    e7b2:	80 93 52 40 	sts	0x4052, r24	; 0x804052 <g_serial_timeout_ticks>
    e7b6:	90 93 53 40 	sts	0x4053, r25	; 0x804053 <g_serial_timeout_ticks+0x1>
	}
	TCB2.INTFLAGS = TCB_CAPT_bm | TCB_OVF_bm; /* Clear flags */
    e7ba:	80 e2       	ldi	r24, 0x20	; 32
    e7bc:	9b e0       	ldi	r25, 0x0B	; 11
    e7be:	23 e0       	ldi	r18, 0x03	; 3
    e7c0:	fc 01       	movw	r30, r24
    e7c2:	26 83       	std	Z+6, r18	; 0x06
}
    e7c4:	00 00       	nop
    e7c6:	df 91       	pop	r29
    e7c8:	cf 91       	pop	r28
    e7ca:	ff 91       	pop	r31
    e7cc:	ef 91       	pop	r30
    e7ce:	9f 91       	pop	r25
    e7d0:	8f 91       	pop	r24
    e7d2:	2f 91       	pop	r18
    e7d4:	0f 90       	pop	r0
    e7d6:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    e7da:	0f 90       	pop	r0
    e7dc:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    e7e0:	0f 90       	pop	r0
    e7e2:	1f 90       	pop	r1
    e7e4:	18 95       	reti

0000e7e6 <__vector_13>:

/**
One millisecond utility counter based on CPU clock.
*/
ISR(TCB1_INT_vect)
{
    e7e6:	1f 92       	push	r1
    e7e8:	0f 92       	push	r0
    e7ea:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    e7ee:	0f 92       	push	r0
    e7f0:	11 24       	eor	r1, r1
    e7f2:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    e7f6:	0f 92       	push	r0
    e7f8:	2f 93       	push	r18
    e7fa:	8f 93       	push	r24
    e7fc:	9f 93       	push	r25
    e7fe:	af 93       	push	r26
    e800:	bf 93       	push	r27
    e802:	ef 93       	push	r30
    e804:	ff 93       	push	r31
    e806:	cf 93       	push	r28
    e808:	df 93       	push	r29
    e80a:	cd b7       	in	r28, 0x3d	; 61
    e80c:	de b7       	in	r29, 0x3e	; 62
    if(TCB1.INTFLAGS & TCB_CAPT_bm)
    e80e:	80 e1       	ldi	r24, 0x10	; 16
    e810:	9b e0       	ldi	r25, 0x0B	; 11
    e812:	fc 01       	movw	r30, r24
    e814:	86 81       	ldd	r24, Z+6	; 0x06
    e816:	88 2f       	mov	r24, r24
    e818:	90 e0       	ldi	r25, 0x00	; 0
    e81a:	81 70       	andi	r24, 0x01	; 1
    e81c:	99 27       	eor	r25, r25
    e81e:	21 e0       	ldi	r18, 0x01	; 1
    e820:	89 2b       	or	r24, r25
    e822:	09 f4       	brne	.+2      	; 0xe826 <__vector_13+0x40>
    e824:	20 e0       	ldi	r18, 0x00	; 0
    e826:	22 23       	and	r18, r18
    e828:	21 f1       	breq	.+72     	; 0xe872 <__vector_13+0x8c>
    {
		if(g_ms_counter) /* check for 1-second interval */
    e82a:	80 91 d5 49 	lds	r24, 0x49D5	; 0x8049d5 <_ZL12g_ms_counter>
    e82e:	90 91 d6 49 	lds	r25, 0x49D6	; 0x8049d6 <_ZL12g_ms_counter+0x1>
    e832:	a0 91 d7 49 	lds	r26, 0x49D7	; 0x8049d7 <_ZL12g_ms_counter+0x2>
    e836:	b0 91 d8 49 	lds	r27, 0x49D8	; 0x8049d8 <_ZL12g_ms_counter+0x3>
    e83a:	89 2b       	or	r24, r25
    e83c:	8a 2b       	or	r24, r26
    e83e:	8b 2b       	or	r24, r27
    e840:	a1 f0       	breq	.+40     	; 0xe86a <__vector_13+0x84>
		{
			g_ms_counter--;	
    e842:	80 91 d5 49 	lds	r24, 0x49D5	; 0x8049d5 <_ZL12g_ms_counter>
    e846:	90 91 d6 49 	lds	r25, 0x49D6	; 0x8049d6 <_ZL12g_ms_counter+0x1>
    e84a:	a0 91 d7 49 	lds	r26, 0x49D7	; 0x8049d7 <_ZL12g_ms_counter+0x2>
    e84e:	b0 91 d8 49 	lds	r27, 0x49D8	; 0x8049d8 <_ZL12g_ms_counter+0x3>
    e852:	01 97       	sbiw	r24, 0x01	; 1
    e854:	a1 09       	sbc	r26, r1
    e856:	b1 09       	sbc	r27, r1
    e858:	80 93 d5 49 	sts	0x49D5, r24	; 0x8049d5 <_ZL12g_ms_counter>
    e85c:	90 93 d6 49 	sts	0x49D6, r25	; 0x8049d6 <_ZL12g_ms_counter+0x1>
    e860:	a0 93 d7 49 	sts	0x49D7, r26	; 0x8049d7 <_ZL12g_ms_counter+0x2>
    e864:	b0 93 d8 49 	sts	0x49D8, r27	; 0x8049d8 <_ZL12g_ms_counter+0x3>
    e868:	04 c0       	rjmp	.+8      	; 0xe872 <__vector_13+0x8c>
		}
		else
		{
			TCB1.INTCTRL = 0 << TCB_CAPT_bp   /* Capture or Timeout: disabled */
    e86a:	80 e1       	ldi	r24, 0x10	; 16
    e86c:	9b e0       	ldi	r25, 0x0B	; 11
			| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    e86e:	fc 01       	movw	r30, r24
    e870:	15 82       	std	Z+5, r1	; 0x05
		}
    }

    TCB1.INTFLAGS = TCB_CAPT_bm | TCB_OVF_bm; /* clear interrupt flags */
    e872:	80 e1       	ldi	r24, 0x10	; 16
    e874:	9b e0       	ldi	r25, 0x0B	; 11
    e876:	23 e0       	ldi	r18, 0x03	; 3
    e878:	fc 01       	movw	r30, r24
    e87a:	26 83       	std	Z+6, r18	; 0x06
}
    e87c:	00 00       	nop
    e87e:	df 91       	pop	r29
    e880:	cf 91       	pop	r28
    e882:	ff 91       	pop	r31
    e884:	ef 91       	pop	r30
    e886:	bf 91       	pop	r27
    e888:	af 91       	pop	r26
    e88a:	9f 91       	pop	r25
    e88c:	8f 91       	pop	r24
    e88e:	2f 91       	pop	r18
    e890:	0f 90       	pop	r0
    e892:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    e896:	0f 90       	pop	r0
    e898:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    e89c:	0f 90       	pop	r0
    e89e:	1f 90       	pop	r1
    e8a0:	18 95       	reti

0000e8a2 <TIMERB_sleep>:

int8_t TIMERB_sleep()
{
    e8a2:	cf 93       	push	r28
    e8a4:	df 93       	push	r29
    e8a6:	cd b7       	in	r28, 0x3d	; 61
    e8a8:	de b7       	in	r29, 0x3e	; 62
	TCB0.INTCTRL = 0;   /* Capture or Timeout: disable interrupts */
    e8aa:	80 e0       	ldi	r24, 0x00	; 0
    e8ac:	9b e0       	ldi	r25, 0x0B	; 11
    e8ae:	fc 01       	movw	r30, r24
    e8b0:	15 82       	std	Z+5, r1	; 0x05
	TCB0.CTRLA = 0; /* Disable timer */
    e8b2:	80 e0       	ldi	r24, 0x00	; 0
    e8b4:	9b e0       	ldi	r25, 0x0B	; 11
    e8b6:	fc 01       	movw	r30, r24
    e8b8:	10 82       	st	Z, r1

	/********************************************************************************/

	TCB1.INTCTRL = 0; /* OverFlow Interrupt: disabled */
    e8ba:	80 e1       	ldi	r24, 0x10	; 16
    e8bc:	9b e0       	ldi	r25, 0x0B	; 11
    e8be:	fc 01       	movw	r30, r24
    e8c0:	15 82       	std	Z+5, r1	; 0x05
	TCB1.CTRLA = 0; /* Disable timer */
    e8c2:	80 e1       	ldi	r24, 0x10	; 16
    e8c4:	9b e0       	ldi	r25, 0x0B	; 11
    e8c6:	fc 01       	movw	r30, r24
    e8c8:	10 82       	st	Z, r1

	/********************************************************************************/

	TCB2.INTCTRL = 0; /* OverFlow Interrupt: disabled */
    e8ca:	80 e2       	ldi	r24, 0x20	; 32
    e8cc:	9b e0       	ldi	r25, 0x0B	; 11
    e8ce:	fc 01       	movw	r30, r24
    e8d0:	15 82       	std	Z+5, r1	; 0x05
	TCB2.CTRLA = 0; /* Disable timer */
    e8d2:	80 e2       	ldi	r24, 0x20	; 32
    e8d4:	9b e0       	ldi	r25, 0x0B	; 11
    e8d6:	fc 01       	movw	r30, r24
    e8d8:	10 82       	st	Z, r1

	/********************************************************************************/

	TCB3.INTCTRL = 0; /* OverFlow Interrupt: disabled */
    e8da:	80 e3       	ldi	r24, 0x30	; 48
    e8dc:	9b e0       	ldi	r25, 0x0B	; 11
    e8de:	fc 01       	movw	r30, r24
    e8e0:	15 82       	std	Z+5, r1	; 0x05
	TCB3.CTRLA = 0; /* Disable timer */
    e8e2:	80 e3       	ldi	r24, 0x30	; 48
    e8e4:	9b e0       	ldi	r25, 0x0B	; 11
    e8e6:	fc 01       	movw	r30, r24
    e8e8:	10 82       	st	Z, r1


	return 0;
    e8ea:	80 e0       	ldi	r24, 0x00	; 0
}
    e8ec:	df 91       	pop	r29
    e8ee:	cf 91       	pop	r28
    e8f0:	08 95       	ret

0000e8f2 <PORTA_set_pin_level>:
 * \param[in] pin       The pin number within port
 * \param[in] level true  = Pin level set to "high" state
 *                  false = Pin level set to "low" state
 */
static inline void PORTA_set_pin_level(const uint8_t pin, const bool level)
{
    e8f2:	cf 93       	push	r28
    e8f4:	df 93       	push	r29
    e8f6:	00 d0       	rcall	.+0      	; 0xe8f8 <PORTA_set_pin_level+0x6>
    e8f8:	cd b7       	in	r28, 0x3d	; 61
    e8fa:	de b7       	in	r29, 0x3e	; 62
    e8fc:	89 83       	std	Y+1, r24	; 0x01
    e8fe:	6a 83       	std	Y+2, r22	; 0x02
	if (level == true) {
    e900:	8a 81       	ldd	r24, Y+2	; 0x02
    e902:	88 23       	and	r24, r24
    e904:	a9 f0       	breq	.+42     	; 0xe930 <PORTA_set_pin_level+0x3e>
		VPORTA.OUT |= (1 << pin);
    e906:	20 e0       	ldi	r18, 0x00	; 0
    e908:	30 e0       	ldi	r19, 0x00	; 0
    e90a:	80 e0       	ldi	r24, 0x00	; 0
    e90c:	90 e0       	ldi	r25, 0x00	; 0
    e90e:	fc 01       	movw	r30, r24
    e910:	81 81       	ldd	r24, Z+1	; 0x01
    e912:	68 2f       	mov	r22, r24
    e914:	89 81       	ldd	r24, Y+1	; 0x01
    e916:	48 2f       	mov	r20, r24
    e918:	50 e0       	ldi	r21, 0x00	; 0
    e91a:	81 e0       	ldi	r24, 0x01	; 1
    e91c:	90 e0       	ldi	r25, 0x00	; 0
    e91e:	02 c0       	rjmp	.+4      	; 0xe924 <PORTA_set_pin_level+0x32>
    e920:	88 0f       	add	r24, r24
    e922:	99 1f       	adc	r25, r25
    e924:	4a 95       	dec	r20
    e926:	e2 f7       	brpl	.-8      	; 0xe920 <PORTA_set_pin_level+0x2e>
    e928:	86 2b       	or	r24, r22
    e92a:	f9 01       	movw	r30, r18
    e92c:	81 83       	std	Z+1, r24	; 0x01
	} else {
		VPORTA.OUT &= ~(1 << pin);
	}
}
    e92e:	15 c0       	rjmp	.+42     	; 0xe95a <PORTA_set_pin_level+0x68>
static inline void PORTA_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTA.OUT |= (1 << pin);
	} else {
		VPORTA.OUT &= ~(1 << pin);
    e930:	20 e0       	ldi	r18, 0x00	; 0
    e932:	30 e0       	ldi	r19, 0x00	; 0
    e934:	80 e0       	ldi	r24, 0x00	; 0
    e936:	90 e0       	ldi	r25, 0x00	; 0
    e938:	fc 01       	movw	r30, r24
    e93a:	81 81       	ldd	r24, Z+1	; 0x01
    e93c:	68 2f       	mov	r22, r24
    e93e:	89 81       	ldd	r24, Y+1	; 0x01
    e940:	48 2f       	mov	r20, r24
    e942:	50 e0       	ldi	r21, 0x00	; 0
    e944:	81 e0       	ldi	r24, 0x01	; 1
    e946:	90 e0       	ldi	r25, 0x00	; 0
    e948:	02 c0       	rjmp	.+4      	; 0xe94e <PORTA_set_pin_level+0x5c>
    e94a:	88 0f       	add	r24, r24
    e94c:	99 1f       	adc	r25, r25
    e94e:	4a 95       	dec	r20
    e950:	e2 f7       	brpl	.-8      	; 0xe94a <PORTA_set_pin_level+0x58>
    e952:	80 95       	com	r24
    e954:	86 23       	and	r24, r22
    e956:	f9 01       	movw	r30, r18
    e958:	81 83       	std	Z+1, r24	; 0x01
	}
}
    e95a:	00 00       	nop
    e95c:	0f 90       	pop	r0
    e95e:	0f 90       	pop	r0
    e960:	df 91       	pop	r29
    e962:	cf 91       	pop	r28
    e964:	08 95       	ret

0000e966 <PORTB_set_pin_level>:
 * \param[in] pin       The pin number within port
 * \param[in] level true  = Pin level set to "high" state
 *                  false = Pin level set to "low" state
 */
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
    e966:	cf 93       	push	r28
    e968:	df 93       	push	r29
    e96a:	00 d0       	rcall	.+0      	; 0xe96c <PORTB_set_pin_level+0x6>
    e96c:	cd b7       	in	r28, 0x3d	; 61
    e96e:	de b7       	in	r29, 0x3e	; 62
    e970:	89 83       	std	Y+1, r24	; 0x01
    e972:	6a 83       	std	Y+2, r22	; 0x02
	if (level == true) {
    e974:	8a 81       	ldd	r24, Y+2	; 0x02
    e976:	88 23       	and	r24, r24
    e978:	a9 f0       	breq	.+42     	; 0xe9a4 <PORTB_set_pin_level+0x3e>
		VPORTB.OUT |= (1 << pin);
    e97a:	84 e0       	ldi	r24, 0x04	; 4
    e97c:	90 e0       	ldi	r25, 0x00	; 0
    e97e:	24 e0       	ldi	r18, 0x04	; 4
    e980:	30 e0       	ldi	r19, 0x00	; 0
    e982:	f9 01       	movw	r30, r18
    e984:	21 81       	ldd	r18, Z+1	; 0x01
    e986:	62 2f       	mov	r22, r18
    e988:	29 81       	ldd	r18, Y+1	; 0x01
    e98a:	42 2f       	mov	r20, r18
    e98c:	50 e0       	ldi	r21, 0x00	; 0
    e98e:	21 e0       	ldi	r18, 0x01	; 1
    e990:	30 e0       	ldi	r19, 0x00	; 0
    e992:	02 c0       	rjmp	.+4      	; 0xe998 <PORTB_set_pin_level+0x32>
    e994:	22 0f       	add	r18, r18
    e996:	33 1f       	adc	r19, r19
    e998:	4a 95       	dec	r20
    e99a:	e2 f7       	brpl	.-8      	; 0xe994 <PORTB_set_pin_level+0x2e>
    e99c:	26 2b       	or	r18, r22
    e99e:	fc 01       	movw	r30, r24
    e9a0:	21 83       	std	Z+1, r18	; 0x01
	} else {
		VPORTB.OUT &= ~(1 << pin);
	}
}
    e9a2:	15 c0       	rjmp	.+42     	; 0xe9ce <PORTB_set_pin_level+0x68>
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTB.OUT |= (1 << pin);
	} else {
		VPORTB.OUT &= ~(1 << pin);
    e9a4:	84 e0       	ldi	r24, 0x04	; 4
    e9a6:	90 e0       	ldi	r25, 0x00	; 0
    e9a8:	24 e0       	ldi	r18, 0x04	; 4
    e9aa:	30 e0       	ldi	r19, 0x00	; 0
    e9ac:	f9 01       	movw	r30, r18
    e9ae:	21 81       	ldd	r18, Z+1	; 0x01
    e9b0:	62 2f       	mov	r22, r18
    e9b2:	29 81       	ldd	r18, Y+1	; 0x01
    e9b4:	42 2f       	mov	r20, r18
    e9b6:	50 e0       	ldi	r21, 0x00	; 0
    e9b8:	21 e0       	ldi	r18, 0x01	; 1
    e9ba:	30 e0       	ldi	r19, 0x00	; 0
    e9bc:	02 c0       	rjmp	.+4      	; 0xe9c2 <PORTB_set_pin_level+0x5c>
    e9be:	22 0f       	add	r18, r18
    e9c0:	33 1f       	adc	r19, r19
    e9c2:	4a 95       	dec	r20
    e9c4:	e2 f7       	brpl	.-8      	; 0xe9be <PORTB_set_pin_level+0x58>
    e9c6:	20 95       	com	r18
    e9c8:	26 23       	and	r18, r22
    e9ca:	fc 01       	movw	r30, r24
    e9cc:	21 83       	std	Z+1, r18	; 0x01
	}
}
    e9ce:	00 00       	nop
    e9d0:	0f 90       	pop	r0
    e9d2:	0f 90       	pop	r0
    e9d4:	df 91       	pop	r29
    e9d6:	cf 91       	pop	r28
    e9d8:	08 95       	ret

0000e9da <_Z14txSetFrequencyPmb>:
 *       This function sets the VFO frequency (CLK0 of the Si5351) based on the intended frequency passed in by the parameter (freq),
 *       and the VFO configuration in effect. The VFO  frequency might be above or below the intended  frequency, depending on the VFO
 *       configuration setting in effect for the radio band of the frequency.
 */
	bool txSetFrequency(Frequency_Hz *freq, bool leaveClockOff)
	{
    e9da:	cf 93       	push	r28
    e9dc:	df 93       	push	r29
    e9de:	00 d0       	rcall	.+0      	; 0xe9e0 <_Z14txSetFrequencyPmb+0x6>
    e9e0:	00 d0       	rcall	.+0      	; 0xe9e2 <_Z14txSetFrequencyPmb+0x8>
    e9e2:	cd b7       	in	r28, 0x3d	; 61
    e9e4:	de b7       	in	r29, 0x3e	; 62
    e9e6:	8a 83       	std	Y+2, r24	; 0x02
    e9e8:	9b 83       	std	Y+3, r25	; 0x03
    e9ea:	6c 83       	std	Y+4, r22	; 0x04
		bool err = true;
    e9ec:	81 e0       	ldi	r24, 0x01	; 1
    e9ee:	89 83       	std	Y+1, r24	; 0x01

		if(!freq) return(err);
    e9f0:	8a 81       	ldd	r24, Y+2	; 0x02
    e9f2:	9b 81       	ldd	r25, Y+3	; 0x03
    e9f4:	89 2b       	or	r24, r25
    e9f6:	11 f4       	brne	.+4      	; 0xe9fc <_Z14txSetFrequencyPmb+0x22>
    e9f8:	89 81       	ldd	r24, Y+1	; 0x01
    e9fa:	3b c0       	rjmp	.+118    	; 0xea72 <_Z14txSetFrequencyPmb+0x98>
		
		if((*freq < TX_MAXIMUM_80M_FREQUENCY) && (*freq > TX_MINIMUM_80M_FREQUENCY))    /* 80m */
    e9fc:	8a 81       	ldd	r24, Y+2	; 0x02
    e9fe:	9b 81       	ldd	r25, Y+3	; 0x03
    ea00:	fc 01       	movw	r30, r24
    ea02:	80 81       	ld	r24, Z
    ea04:	91 81       	ldd	r25, Z+1	; 0x01
    ea06:	a2 81       	ldd	r26, Z+2	; 0x02
    ea08:	b3 81       	ldd	r27, Z+3	; 0x03
    ea0a:	81 15       	cp	r24, r1
    ea0c:	99 40       	sbci	r25, 0x09	; 9
    ea0e:	ad 43       	sbci	r26, 0x3D	; 61
    ea10:	b1 05       	cpc	r27, r1
    ea12:	70 f5       	brcc	.+92     	; 0xea70 <_Z14txSetFrequencyPmb+0x96>
    ea14:	8a 81       	ldd	r24, Y+2	; 0x02
    ea16:	9b 81       	ldd	r25, Y+3	; 0x03
    ea18:	fc 01       	movw	r30, r24
    ea1a:	80 81       	ld	r24, Z
    ea1c:	91 81       	ldd	r25, Z+1	; 0x01
    ea1e:	a2 81       	ldd	r26, Z+2	; 0x02
    ea20:	b3 81       	ldd	r27, Z+3	; 0x03
    ea22:	81 3e       	cpi	r24, 0xE1	; 225
    ea24:	97 46       	sbci	r25, 0x67	; 103
    ea26:	a5 43       	sbci	r26, 0x35	; 53
    ea28:	b1 05       	cpc	r27, r1
    ea2a:	10 f1       	brcs	.+68     	; 0xea70 <_Z14txSetFrequencyPmb+0x96>
		{
			if(!si5351_set_freq(*freq, TX_CLOCK_HF_0, leaveClockOff))
    ea2c:	8a 81       	ldd	r24, Y+2	; 0x02
    ea2e:	9b 81       	ldd	r25, Y+3	; 0x03
    ea30:	fc 01       	movw	r30, r24
    ea32:	80 81       	ld	r24, Z
    ea34:	91 81       	ldd	r25, Z+1	; 0x01
    ea36:	a2 81       	ldd	r26, Z+2	; 0x02
    ea38:	b3 81       	ldd	r27, Z+3	; 0x03
    ea3a:	2c 81       	ldd	r18, Y+4	; 0x04
    ea3c:	41 e0       	ldi	r20, 0x01	; 1
    ea3e:	bc 01       	movw	r22, r24
    ea40:	cd 01       	movw	r24, r26
    ea42:	0e 94 c3 68 	call	0xd186	; 0xd186 <si5351_set_freq>
    ea46:	98 2f       	mov	r25, r24
    ea48:	81 e0       	ldi	r24, 0x01	; 1
    ea4a:	89 27       	eor	r24, r25
    ea4c:	88 23       	and	r24, r24
    ea4e:	81 f0       	breq	.+32     	; 0xea70 <_Z14txSetFrequencyPmb+0x96>
			{
				g_80m_frequency = *freq;
    ea50:	8a 81       	ldd	r24, Y+2	; 0x02
    ea52:	9b 81       	ldd	r25, Y+3	; 0x03
    ea54:	fc 01       	movw	r30, r24
    ea56:	80 81       	ld	r24, Z
    ea58:	91 81       	ldd	r25, Z+1	; 0x01
    ea5a:	a2 81       	ldd	r26, Z+2	; 0x02
    ea5c:	b3 81       	ldd	r27, Z+3	; 0x03
    ea5e:	80 93 5a 40 	sts	0x405A, r24	; 0x80405a <g_80m_frequency>
    ea62:	90 93 5b 40 	sts	0x405B, r25	; 0x80405b <g_80m_frequency+0x1>
    ea66:	a0 93 5c 40 	sts	0x405C, r26	; 0x80405c <g_80m_frequency+0x2>
    ea6a:	b0 93 5d 40 	sts	0x405D, r27	; 0x80405d <g_80m_frequency+0x3>
				err = false;
    ea6e:	19 82       	std	Y+1, r1	; 0x01
			}
		}

		return(err);
    ea70:	89 81       	ldd	r24, Y+1	; 0x01
	}
    ea72:	24 96       	adiw	r28, 0x04	; 4
    ea74:	cd bf       	out	0x3d, r28	; 61
    ea76:	de bf       	out	0x3e, r29	; 62
    ea78:	df 91       	pop	r29
    ea7a:	cf 91       	pop	r28
    ea7c:	08 95       	ret

0000ea7e <_Z14txGetFrequencyv>:

	Frequency_Hz txGetFrequency(void)
	{
    ea7e:	cf 93       	push	r28
    ea80:	df 93       	push	r29
    ea82:	cd b7       	in	r28, 0x3d	; 61
    ea84:	de b7       	in	r29, 0x3e	; 62
		return( g_80m_frequency);
    ea86:	80 91 5a 40 	lds	r24, 0x405A	; 0x80405a <g_80m_frequency>
    ea8a:	90 91 5b 40 	lds	r25, 0x405B	; 0x80405b <g_80m_frequency+0x1>
    ea8e:	a0 91 5c 40 	lds	r26, 0x405C	; 0x80405c <g_80m_frequency+0x2>
    ea92:	b0 91 5d 40 	lds	r27, 0x405D	; 0x80405d <g_80m_frequency+0x3>
	}
    ea96:	bc 01       	movw	r22, r24
    ea98:	cd 01       	movw	r24, r26
    ea9a:	df 91       	pop	r29
    ea9c:	cf 91       	pop	r28
    ea9e:	08 95       	ret

0000eaa0 <_Z18powerToTransmitterb>:

	EC powerToTransmitter(bool state)
	{
    eaa0:	cf 93       	push	r28
    eaa2:	df 93       	push	r29
    eaa4:	1f 92       	push	r1
    eaa6:	cd b7       	in	r28, 0x3d	; 61
    eaa8:	de b7       	in	r29, 0x3e	; 62
    eaaa:	89 83       	std	Y+1, r24	; 0x01
		g_final_output_setting = state;
    eaac:	89 81       	ldd	r24, Y+1	; 0x01
    eaae:	80 93 e0 49 	sts	0x49E0, r24	; 0x8049e0 <_ZL22g_final_output_setting>
		
		if(g_rf_output_inhibited)
    eab2:	80 91 e1 49 	lds	r24, 0x49E1	; 0x8049e1 <_ZL21g_rf_output_inhibited>
    eab6:	88 23       	and	r24, r24
    eab8:	21 f0       	breq	.+8      	; 0xeac2 <_Z18powerToTransmitterb+0x22>
		{
			final_drain_voltage(OFF);
    eaba:	80 e0       	ldi	r24, 0x00	; 0
    eabc:	0e 94 ac 75 	call	0xeb58	; 0xeb58 <_Z19final_drain_voltageb>
    eac0:	03 c0       	rjmp	.+6      	; 0xeac8 <_Z18powerToTransmitterb+0x28>
		}
		else
		{
			final_drain_voltage(state);
    eac2:	89 81       	ldd	r24, Y+1	; 0x01
    eac4:	0e 94 ac 75 	call	0xeb58	; 0xeb58 <_Z19final_drain_voltageb>
		}

		return(ERROR_CODE_NO_ERROR);
    eac8:	80 e0       	ldi	r24, 0x00	; 0
	}
    eaca:	0f 90       	pop	r0
    eacc:	df 91       	pop	r29
    eace:	cf 91       	pop	r28
    ead0:	08 95       	ret

0000ead2 <_Z9txKeyDownb>:
	
	void txKeyDown(bool key)
	{
    ead2:	cf 93       	push	r28
    ead4:	df 93       	push	r29
    ead6:	00 d0       	rcall	.+0      	; 0xead8 <_Z9txKeyDownb+0x6>
    ead8:	1f 92       	push	r1
    eada:	cd b7       	in	r28, 0x3d	; 61
    eadc:	de b7       	in	r29, 0x3e	; 62
    eade:	8b 83       	std	Y+3, r24	; 0x03
		if(g_tx_initialized)
    eae0:	80 91 de 49 	lds	r24, 0x49DE	; 0x8049de <_ZL16g_tx_initialized>
    eae4:	88 23       	and	r24, r24
    eae6:	d1 f0       	breq	.+52     	; 0xeb1c <_Z9txKeyDownb+0x4a>
		{
			int tries = 10;
    eae8:	8a e0       	ldi	r24, 0x0A	; 10
    eaea:	90 e0       	ldi	r25, 0x00	; 0
    eaec:	89 83       	std	Y+1, r24	; 0x01
    eaee:	9a 83       	std	Y+2, r25	; 0x02
			while(tries-- && (key != keyTransmitter(key)));
    eaf0:	89 81       	ldd	r24, Y+1	; 0x01
    eaf2:	9a 81       	ldd	r25, Y+2	; 0x02
    eaf4:	9c 01       	movw	r18, r24
    eaf6:	21 50       	subi	r18, 0x01	; 1
    eaf8:	31 09       	sbc	r19, r1
    eafa:	29 83       	std	Y+1, r18	; 0x01
    eafc:	3a 83       	std	Y+2, r19	; 0x02
    eafe:	89 2b       	or	r24, r25
    eb00:	49 f0       	breq	.+18     	; 0xeb14 <_Z9txKeyDownb+0x42>
    eb02:	8b 81       	ldd	r24, Y+3	; 0x03
    eb04:	0e 94 f7 75 	call	0xebee	; 0xebee <_Z14keyTransmitterb>
    eb08:	98 2f       	mov	r25, r24
    eb0a:	8b 81       	ldd	r24, Y+3	; 0x03
    eb0c:	98 17       	cp	r25, r24
    eb0e:	11 f0       	breq	.+4      	; 0xeb14 <_Z9txKeyDownb+0x42>
    eb10:	81 e0       	ldi	r24, 0x01	; 1
    eb12:	01 c0       	rjmp	.+2      	; 0xeb16 <_Z9txKeyDownb+0x44>
    eb14:	80 e0       	ldi	r24, 0x00	; 0
    eb16:	88 23       	and	r24, r24
    eb18:	09 f0       	breq	.+2      	; 0xeb1c <_Z9txKeyDownb+0x4a>
    eb1a:	ea cf       	rjmp	.-44     	; 0xeaf0 <_Z9txKeyDownb+0x1e>
		}
	}
    eb1c:	00 00       	nop
    eb1e:	23 96       	adiw	r28, 0x03	; 3
    eb20:	cd bf       	out	0x3d, r28	; 61
    eb22:	de bf       	out	0x3e, r29	; 62
    eb24:	df 91       	pop	r29
    eb26:	cf 91       	pop	r28
    eb28:	08 95       	ret

0000eb2a <_Z10fet_driverb>:
	
	void fet_driver(bool state)
	{
    eb2a:	cf 93       	push	r28
    eb2c:	df 93       	push	r29
    eb2e:	1f 92       	push	r1
    eb30:	cd b7       	in	r28, 0x3d	; 61
    eb32:	de b7       	in	r29, 0x3e	; 62
    eb34:	89 83       	std	Y+1, r24	; 0x01
		if(state == ON)
    eb36:	89 81       	ldd	r24, Y+1	; 0x01
    eb38:	88 23       	and	r24, r24
    eb3a:	29 f0       	breq	.+10     	; 0xeb46 <_Z10fet_driverb+0x1c>
		{
			PORTA_set_pin_level(FET_DRIVER_ENABLE, HIGH);
    eb3c:	61 e0       	ldi	r22, 0x01	; 1
    eb3e:	83 e0       	ldi	r24, 0x03	; 3
    eb40:	0e 94 79 74 	call	0xe8f2	; 0xe8f2 <PORTA_set_pin_level>
		}
		else
		{
			PORTA_set_pin_level(FET_DRIVER_ENABLE, LOW);
		}
	}
    eb44:	04 c0       	rjmp	.+8      	; 0xeb4e <_Z10fet_driverb+0x24>
		{
			PORTA_set_pin_level(FET_DRIVER_ENABLE, HIGH);
		}
		else
		{
			PORTA_set_pin_level(FET_DRIVER_ENABLE, LOW);
    eb46:	60 e0       	ldi	r22, 0x00	; 0
    eb48:	83 e0       	ldi	r24, 0x03	; 3
    eb4a:	0e 94 79 74 	call	0xe8f2	; 0xe8f2 <PORTA_set_pin_level>
		}
	}
    eb4e:	00 00       	nop
    eb50:	0f 90       	pop	r0
    eb52:	df 91       	pop	r29
    eb54:	cf 91       	pop	r28
    eb56:	08 95       	ret

0000eb58 <_Z19final_drain_voltageb>:

	void final_drain_voltage(bool state)
	{
    eb58:	cf 93       	push	r28
    eb5a:	df 93       	push	r29
    eb5c:	1f 92       	push	r1
    eb5e:	cd b7       	in	r28, 0x3d	; 61
    eb60:	de b7       	in	r29, 0x3e	; 62
    eb62:	89 83       	std	Y+1, r24	; 0x01
		g_drain_voltage_enabled = state;
    eb64:	89 81       	ldd	r24, Y+1	; 0x01
    eb66:	80 93 df 49 	sts	0x49DF, r24	; 0x8049df <_ZL23g_drain_voltage_enabled>

		if(state == ON)
    eb6a:	89 81       	ldd	r24, Y+1	; 0x01
    eb6c:	88 23       	and	r24, r24
    eb6e:	59 f0       	breq	.+22     	; 0xeb86 <_Z19final_drain_voltageb+0x2e>
		{
			if(!g_rf_output_inhibited)
    eb70:	90 91 e1 49 	lds	r25, 0x49E1	; 0x8049e1 <_ZL21g_rf_output_inhibited>
    eb74:	81 e0       	ldi	r24, 0x01	; 1
    eb76:	89 27       	eor	r24, r25
    eb78:	88 23       	and	r24, r24
    eb7a:	49 f0       	breq	.+18     	; 0xeb8e <_Z19final_drain_voltageb+0x36>
			{
				PORTB_set_pin_level(TX_FINAL_VOLTAGE_ENABLE, HIGH);
    eb7c:	61 e0       	ldi	r22, 0x01	; 1
    eb7e:	85 e0       	ldi	r24, 0x05	; 5
    eb80:	0e 94 b3 74 	call	0xe966	; 0xe966 <PORTB_set_pin_level>
		}
		else
		{
			PORTB_set_pin_level(TX_FINAL_VOLTAGE_ENABLE, LOW);
		}
	}
    eb84:	04 c0       	rjmp	.+8      	; 0xeb8e <_Z19final_drain_voltageb+0x36>
				PORTB_set_pin_level(TX_FINAL_VOLTAGE_ENABLE, HIGH);
			}
		}
		else
		{
			PORTB_set_pin_level(TX_FINAL_VOLTAGE_ENABLE, LOW);
    eb86:	60 e0       	ldi	r22, 0x00	; 0
    eb88:	85 e0       	ldi	r24, 0x05	; 5
    eb8a:	0e 94 b3 74 	call	0xe966	; 0xe966 <PORTB_set_pin_level>
		}
	}
    eb8e:	00 00       	nop
    eb90:	0f 90       	pop	r0
    eb92:	df 91       	pop	r29
    eb94:	cf 91       	pop	r28
    eb96:	08 95       	ret

0000eb98 <_Z15inhibitRFOutputb>:

	
	void inhibitRFOutput(bool inhibit)
	{
    eb98:	cf 93       	push	r28
    eb9a:	df 93       	push	r29
    eb9c:	00 d0       	rcall	.+0      	; 0xeb9e <_Z15inhibitRFOutputb+0x6>
    eb9e:	1f 92       	push	r1
    eba0:	cd b7       	in	r28, 0x3d	; 61
    eba2:	de b7       	in	r29, 0x3e	; 62
    eba4:	8b 83       	std	Y+3, r24	; 0x03
		g_rf_output_inhibited = inhibit;
    eba6:	8b 81       	ldd	r24, Y+3	; 0x03
    eba8:	80 93 e1 49 	sts	0x49E1, r24	; 0x8049e1 <_ZL21g_rf_output_inhibited>
		
		if(inhibit)
    ebac:	8b 81       	ldd	r24, Y+3	; 0x03
    ebae:	88 23       	and	r24, r24
    ebb0:	29 f0       	breq	.+10     	; 0xebbc <_Z15inhibitRFOutputb+0x24>
		{
			PORTB_set_pin_level(TX_FINAL_VOLTAGE_ENABLE, LOW);
    ebb2:	60 e0       	ldi	r22, 0x00	; 0
    ebb4:	85 e0       	ldi	r24, 0x05	; 5
    ebb6:	0e 94 b3 74 	call	0xe966	; 0xe966 <PORTB_set_pin_level>
		{
			uint16_t pwr_mW = g_80m_power_level_mW;
			txSetParameters(&pwr_mW, NULL);
			PORTB_set_pin_level(TX_FINAL_VOLTAGE_ENABLE, g_final_output_setting);
		}
	}
    ebba:	12 c0       	rjmp	.+36     	; 0xebe0 <_Z15inhibitRFOutputb+0x48>
		{
			PORTB_set_pin_level(TX_FINAL_VOLTAGE_ENABLE, LOW);
		}
		else
		{
			uint16_t pwr_mW = g_80m_power_level_mW;
    ebbc:	80 91 5e 40 	lds	r24, 0x405E	; 0x80405e <g_80m_power_level_mW>
    ebc0:	90 91 5f 40 	lds	r25, 0x405F	; 0x80405f <g_80m_power_level_mW+0x1>
    ebc4:	89 83       	std	Y+1, r24	; 0x01
    ebc6:	9a 83       	std	Y+2, r25	; 0x02
			txSetParameters(&pwr_mW, NULL);
    ebc8:	60 e0       	ldi	r22, 0x00	; 0
    ebca:	70 e0       	ldi	r23, 0x00	; 0
    ebcc:	ce 01       	movw	r24, r28
    ebce:	01 96       	adiw	r24, 0x01	; 1
    ebd0:	0e 94 6d 76 	call	0xecda	; 0xecda <_Z15txSetParametersPjPb>
			PORTB_set_pin_level(TX_FINAL_VOLTAGE_ENABLE, g_final_output_setting);
    ebd4:	80 91 e0 49 	lds	r24, 0x49E0	; 0x8049e0 <_ZL22g_final_output_setting>
    ebd8:	68 2f       	mov	r22, r24
    ebda:	85 e0       	ldi	r24, 0x05	; 5
    ebdc:	0e 94 b3 74 	call	0xe966	; 0xe966 <PORTB_set_pin_level>
		}
	}
    ebe0:	00 00       	nop
    ebe2:	23 96       	adiw	r28, 0x03	; 3
    ebe4:	cd bf       	out	0x3d, r28	; 61
    ebe6:	de bf       	out	0x3e, r29	; 62
    ebe8:	df 91       	pop	r29
    ebea:	cf 91       	pop	r28
    ebec:	08 95       	ret

0000ebee <_Z14keyTransmitterb>:

	bool keyTransmitter(bool on)
	{
    ebee:	cf 93       	push	r28
    ebf0:	df 93       	push	r29
    ebf2:	00 d0       	rcall	.+0      	; 0xebf4 <_Z14keyTransmitterb+0x6>
    ebf4:	1f 92       	push	r1
    ebf6:	cd b7       	in	r28, 0x3d	; 61
    ebf8:	de b7       	in	r29, 0x3e	; 62
    ebfa:	8b 83       	std	Y+3, r24	; 0x03
		static volatile bool transmitter_keyed = false;
		
		if(g_tx_initialized)
    ebfc:	80 91 de 49 	lds	r24, 0x49DE	; 0x8049de <_ZL16g_tx_initialized>
    ec00:	88 23       	and	r24, r24
    ec02:	09 f4       	brne	.+2      	; 0xec06 <_Z14keyTransmitterb+0x18>
    ec04:	4e c0       	rjmp	.+156    	; 0xeca2 <_Z14keyTransmitterb+0xb4>
		{			
			int tries = 5;
    ec06:	85 e0       	ldi	r24, 0x05	; 5
    ec08:	90 e0       	ldi	r25, 0x00	; 0
    ec0a:	89 83       	std	Y+1, r24	; 0x01
    ec0c:	9a 83       	std	Y+2, r25	; 0x02
			
			if(on)
    ec0e:	8b 81       	ldd	r24, Y+3	; 0x03
    ec10:	88 23       	and	r24, r24
    ec12:	41 f1       	breq	.+80     	; 0xec64 <_Z14keyTransmitterb+0x76>
			{
				if(!transmitter_keyed)
    ec14:	90 91 e2 49 	lds	r25, 0x49E2	; 0x8049e2 <_ZZ14keyTransmitterbE17transmitter_keyed>
    ec18:	81 e0       	ldi	r24, 0x01	; 1
    ec1a:	89 27       	eor	r24, r25
    ec1c:	88 23       	and	r24, r24
    ec1e:	09 f4       	brne	.+2      	; 0xec22 <_Z14keyTransmitterb+0x34>
    ec20:	40 c0       	rjmp	.+128    	; 0xeca2 <_Z14keyTransmitterb+0xb4>
				{
					while(tries-- && (si5351_clock_enable(TX_CLOCK_HF_0, SI5351_CLK_ENABLED) != ERROR_CODE_NO_ERROR))
    ec22:	89 81       	ldd	r24, Y+1	; 0x01
    ec24:	9a 81       	ldd	r25, Y+2	; 0x02
    ec26:	9c 01       	movw	r18, r24
    ec28:	21 50       	subi	r18, 0x01	; 1
    ec2a:	31 09       	sbc	r19, r1
    ec2c:	29 83       	std	Y+1, r18	; 0x01
    ec2e:	3a 83       	std	Y+2, r19	; 0x02
    ec30:	89 2b       	or	r24, r25
    ec32:	41 f0       	breq	.+16     	; 0xec44 <_Z14keyTransmitterb+0x56>
    ec34:	61 e0       	ldi	r22, 0x01	; 1
    ec36:	81 e0       	ldi	r24, 0x01	; 1
    ec38:	0e 94 64 6a 	call	0xd4c8	; 0xd4c8 <si5351_clock_enable>
    ec3c:	88 23       	and	r24, r24
    ec3e:	11 f0       	breq	.+4      	; 0xec44 <_Z14keyTransmitterb+0x56>
    ec40:	81 e0       	ldi	r24, 0x01	; 1
    ec42:	01 c0       	rjmp	.+2      	; 0xec46 <_Z14keyTransmitterb+0x58>
    ec44:	80 e0       	ldi	r24, 0x00	; 0
    ec46:	88 23       	and	r24, r24
    ec48:	29 f0       	breq	.+10     	; 0xec54 <_Z14keyTransmitterb+0x66>
					{
						shutdown_transmitter();
    ec4a:	0e 94 fb 76 	call	0xedf6	; 0xedf6 <_Z20shutdown_transmitterv>
						restart_transmitter();
    ec4e:	0e 94 05 77 	call	0xee0a	; 0xee0a <_Z19restart_transmitterv>
			
			if(on)
			{
				if(!transmitter_keyed)
				{
					while(tries-- && (si5351_clock_enable(TX_CLOCK_HF_0, SI5351_CLK_ENABLED) != ERROR_CODE_NO_ERROR))
    ec52:	e7 cf       	rjmp	.-50     	; 0xec22 <_Z14keyTransmitterb+0x34>
					{
						shutdown_transmitter();
						restart_transmitter();
					}
					
					if(tries)
    ec54:	89 81       	ldd	r24, Y+1	; 0x01
    ec56:	9a 81       	ldd	r25, Y+2	; 0x02
    ec58:	89 2b       	or	r24, r25
    ec5a:	19 f1       	breq	.+70     	; 0xeca2 <_Z14keyTransmitterb+0xb4>
					{
						transmitter_keyed = true;
    ec5c:	81 e0       	ldi	r24, 0x01	; 1
    ec5e:	80 93 e2 49 	sts	0x49E2, r24	; 0x8049e2 <_ZZ14keyTransmitterbE17transmitter_keyed>
    ec62:	1f c0       	rjmp	.+62     	; 0xeca2 <_Z14keyTransmitterb+0xb4>
					}
				}
			}
			else
			{
				while(tries-- && (si5351_clock_enable(TX_CLOCK_HF_0, SI5351_CLK_DISABLED) != ERROR_CODE_NO_ERROR))
    ec64:	89 81       	ldd	r24, Y+1	; 0x01
    ec66:	9a 81       	ldd	r25, Y+2	; 0x02
    ec68:	9c 01       	movw	r18, r24
    ec6a:	21 50       	subi	r18, 0x01	; 1
    ec6c:	31 09       	sbc	r19, r1
    ec6e:	29 83       	std	Y+1, r18	; 0x01
    ec70:	3a 83       	std	Y+2, r19	; 0x02
    ec72:	89 2b       	or	r24, r25
    ec74:	41 f0       	breq	.+16     	; 0xec86 <_Z14keyTransmitterb+0x98>
    ec76:	60 e0       	ldi	r22, 0x00	; 0
    ec78:	81 e0       	ldi	r24, 0x01	; 1
    ec7a:	0e 94 64 6a 	call	0xd4c8	; 0xd4c8 <si5351_clock_enable>
    ec7e:	88 23       	and	r24, r24
    ec80:	11 f0       	breq	.+4      	; 0xec86 <_Z14keyTransmitterb+0x98>
    ec82:	81 e0       	ldi	r24, 0x01	; 1
    ec84:	01 c0       	rjmp	.+2      	; 0xec88 <_Z14keyTransmitterb+0x9a>
    ec86:	80 e0       	ldi	r24, 0x00	; 0
    ec88:	88 23       	and	r24, r24
    ec8a:	29 f0       	breq	.+10     	; 0xec96 <_Z14keyTransmitterb+0xa8>
				{
					shutdown_transmitter();
    ec8c:	0e 94 fb 76 	call	0xedf6	; 0xedf6 <_Z20shutdown_transmitterv>
					restart_transmitter();
    ec90:	0e 94 05 77 	call	0xee0a	; 0xee0a <_Z19restart_transmitterv>
					}
				}
			}
			else
			{
				while(tries-- && (si5351_clock_enable(TX_CLOCK_HF_0, SI5351_CLK_DISABLED) != ERROR_CODE_NO_ERROR))
    ec94:	e7 cf       	rjmp	.-50     	; 0xec64 <_Z14keyTransmitterb+0x76>
				{
					shutdown_transmitter();
					restart_transmitter();
				}
					
				if(tries)
    ec96:	89 81       	ldd	r24, Y+1	; 0x01
    ec98:	9a 81       	ldd	r25, Y+2	; 0x02
    ec9a:	89 2b       	or	r24, r25
    ec9c:	11 f0       	breq	.+4      	; 0xeca2 <_Z14keyTransmitterb+0xb4>
				{
					transmitter_keyed = false;
    ec9e:	10 92 e2 49 	sts	0x49E2, r1	; 0x8049e2 <_ZZ14keyTransmitterbE17transmitter_keyed>
				}
			}
		}
		
		return(transmitter_keyed);
    eca2:	80 91 e2 49 	lds	r24, 0x49E2	; 0x8049e2 <_ZZ14keyTransmitterbE17transmitter_keyed>
	}
    eca6:	23 96       	adiw	r28, 0x03	; 3
    eca8:	cd bf       	out	0x3d, r28	; 61
    ecaa:	de bf       	out	0x3e, r29	; 62
    ecac:	df 91       	pop	r29
    ecae:	cf 91       	pop	r28
    ecb0:	08 95       	ret

0000ecb2 <_Z12txGetPowerMwv>:

	uint16_t txGetPowerMw(void)
	{
    ecb2:	cf 93       	push	r28
    ecb4:	df 93       	push	r29
    ecb6:	cd b7       	in	r28, 0x3d	; 61
    ecb8:	de b7       	in	r29, 0x3e	; 62
		return( g_80m_power_level_mW);
    ecba:	80 91 5e 40 	lds	r24, 0x405E	; 0x80405e <g_80m_power_level_mW>
    ecbe:	90 91 5f 40 	lds	r25, 0x405F	; 0x80405f <g_80m_power_level_mW+0x1>
	}
    ecc2:	df 91       	pop	r29
    ecc4:	cf 91       	pop	r28
    ecc6:	08 95       	ret

0000ecc8 <_Z15txIsInitializedv>:
	
	bool txIsInitialized(void)
	{
    ecc8:	cf 93       	push	r28
    ecca:	df 93       	push	r29
    eccc:	cd b7       	in	r28, 0x3d	; 61
    ecce:	de b7       	in	r29, 0x3e	; 62
		return g_tx_initialized;
    ecd0:	80 91 de 49 	lds	r24, 0x49DE	; 0x8049de <_ZL16g_tx_initialized>
	}
    ecd4:	df 91       	pop	r29
    ecd6:	cf 91       	pop	r28
    ecd8:	08 95       	ret

0000ecda <_Z15txSetParametersPjPb>:

	EC __attribute__((optimize("O0"))) txSetParameters(uint16_t* power_mW, bool* setEnabled)
/*	EC txSetParameters(uint16_t* power_mW, bool* setEnabled) */
	{
    ecda:	cf 93       	push	r28
    ecdc:	df 93       	push	r29
    ecde:	cd b7       	in	r28, 0x3d	; 61
    ece0:	de b7       	in	r29, 0x3e	; 62
    ece2:	2a 97       	sbiw	r28, 0x0a	; 10
    ece4:	cd bf       	out	0x3d, r28	; 61
    ece6:	de bf       	out	0x3e, r29	; 62
    ece8:	8f 83       	std	Y+7, r24	; 0x07
    ecea:	98 87       	std	Y+8, r25	; 0x08
    ecec:	69 87       	std	Y+9, r22	; 0x09
    ecee:	7a 87       	std	Y+10, r23	; 0x0a
		bool err = false;
    ecf0:	19 82       	std	Y+1, r1	; 0x01
		EC code = ERROR_CODE_NO_ERROR;
    ecf2:	1a 82       	std	Y+2, r1	; 0x02
		uint16_t power = 0;
    ecf4:	1b 82       	std	Y+3, r1	; 0x03
    ecf6:	1c 82       	std	Y+4, r1	; 0x04

		if(power_mW != null)
    ecf8:	8f 81       	ldd	r24, Y+7	; 0x07
    ecfa:	98 85       	ldd	r25, Y+8	; 0x08
    ecfc:	89 2b       	or	r24, r25
    ecfe:	09 f4       	brne	.+2      	; 0xed02 <_Z15txSetParametersPjPb+0x28>
    ed00:	64 c0       	rjmp	.+200    	; 0xedca <_Z15txSetParametersPjPb+0xf0>
		{
			power = *power_mW;
    ed02:	8f 81       	ldd	r24, Y+7	; 0x07
    ed04:	98 85       	ldd	r25, Y+8	; 0x08
    ed06:	fc 01       	movw	r30, r24
    ed08:	80 81       	ld	r24, Z
    ed0a:	91 81       	ldd	r25, Z+1	; 0x01
    ed0c:	8b 83       	std	Y+3, r24	; 0x03
    ed0e:	9c 83       	std	Y+4, r25	; 0x04

			if(power <= MAX_TX_POWER_80M_MW)
    ed10:	8b 81       	ldd	r24, Y+3	; 0x03
    ed12:	9c 81       	ldd	r25, Y+4	; 0x04
    ed14:	89 38       	cpi	r24, 0x89	; 137
    ed16:	93 41       	sbci	r25, 0x13	; 19
    ed18:	08 f0       	brcs	.+2      	; 0xed1c <_Z15txSetParametersPjPb+0x42>
    ed1a:	53 c0       	rjmp	.+166    	; 0xedc2 <_Z15txSetParametersPjPb+0xe8>
			{
				uint16_t drainVoltageDAC;
				code = txMilliwattsToSettings(&power, &drainVoltageDAC);
    ed1c:	9e 01       	movw	r18, r28
    ed1e:	2b 5f       	subi	r18, 0xFB	; 251
    ed20:	3f 4f       	sbci	r19, 0xFF	; 255
    ed22:	ce 01       	movw	r24, r28
    ed24:	03 96       	adiw	r24, 0x03	; 3
    ed26:	b9 01       	movw	r22, r18
    ed28:	0e 94 8b 77 	call	0xef16	; 0xef16 <_Z22txMilliwattsToSettingsPjS_>
    ed2c:	8a 83       	std	Y+2, r24	; 0x02
				err = (code == ERROR_CODE_SW_LOGIC_ERROR);
    ed2e:	81 e0       	ldi	r24, 0x01	; 1
    ed30:	9a 81       	ldd	r25, Y+2	; 0x02
    ed32:	9f 3c       	cpi	r25, 0xCF	; 207
    ed34:	09 f0       	breq	.+2      	; 0xed38 <_Z15txSetParametersPjPb+0x5e>
    ed36:	80 e0       	ldi	r24, 0x00	; 0
    ed38:	89 83       	std	Y+1, r24	; 0x01

				g_tx_power_is_zero = (power == 0);
    ed3a:	8b 81       	ldd	r24, Y+3	; 0x03
    ed3c:	9c 81       	ldd	r25, Y+4	; 0x04
    ed3e:	21 e0       	ldi	r18, 0x01	; 1
    ed40:	89 2b       	or	r24, r25
    ed42:	09 f0       	breq	.+2      	; 0xed46 <_Z15txSetParametersPjPb+0x6c>
    ed44:	20 e0       	ldi	r18, 0x00	; 0
    ed46:	20 93 64 40 	sts	0x4064, r18	; 0x804064 <g_tx_power_is_zero>

				if(!err)
    ed4a:	99 81       	ldd	r25, Y+1	; 0x01
    ed4c:	81 e0       	ldi	r24, 0x01	; 1
    ed4e:	89 27       	eor	r24, r25
    ed50:	88 23       	and	r24, r24
    ed52:	79 f1       	breq	.+94     	; 0xedb2 <_Z15txSetParametersPjPb+0xd8>
				{
					g_80m_power_level_mW = power;
    ed54:	8b 81       	ldd	r24, Y+3	; 0x03
    ed56:	9c 81       	ldd	r25, Y+4	; 0x04
    ed58:	80 93 5e 40 	sts	0x405E, r24	; 0x80405e <g_80m_power_level_mW>
    ed5c:	90 93 5f 40 	sts	0x405F, r25	; 0x80405f <g_80m_power_level_mW+0x1>
					
					if(g_antenna_connect_state != ANT_CONNECTED)
    ed60:	90 91 c4 45 	lds	r25, 0x45C4	; 0x8045c4 <g_antenna_connect_state>
    ed64:	81 e0       	ldi	r24, 0x01	; 1
    ed66:	92 30       	cpi	r25, 0x02	; 2
    ed68:	09 f4       	brne	.+2      	; 0xed6c <_Z15txSetParametersPjPb+0x92>
    ed6a:	80 e0       	ldi	r24, 0x00	; 0
    ed6c:	88 23       	and	r24, r24
    ed6e:	51 f0       	breq	.+20     	; 0xed84 <_Z15txSetParametersPjPb+0xaa>
					{
						inhibitRFOutput(true);
    ed70:	81 e0       	ldi	r24, 0x01	; 1
    ed72:	0e 94 cc 75 	call	0xeb98	; 0xeb98 <_Z15inhibitRFOutputb>
						g_tx_power_is_zero = true;
    ed76:	81 e0       	ldi	r24, 0x01	; 1
    ed78:	80 93 64 40 	sts	0x4064, r24	; 0x804064 <g_tx_power_is_zero>
						err = true;
    ed7c:	81 e0       	ldi	r24, 0x01	; 1
    ed7e:	89 83       	std	Y+1, r24	; 0x01
						code = ERROR_CODE_NO_ANTENNA_PREVENTS_POWER_SETTING;
    ed80:	86 ef       	ldi	r24, 0xF6	; 246
    ed82:	8a 83       	std	Y+2, r24	; 0x02
					}

					DAC0_setVal(drainVoltageDAC);
    ed84:	8d 81       	ldd	r24, Y+5	; 0x05
    ed86:	9e 81       	ldd	r25, Y+6	; 0x06
    ed88:	0e 94 01 3c 	call	0x7802	; 0x7802 <_Z11DAC0_setValj>

					if(g_tx_power_is_zero || (drainVoltageDAC == 0))
    ed8c:	80 91 64 40 	lds	r24, 0x4064	; 0x804064 <g_tx_power_is_zero>
    ed90:	88 23       	and	r24, r24
    ed92:	21 f4       	brne	.+8      	; 0xed9c <_Z15txSetParametersPjPb+0xc2>
    ed94:	8d 81       	ldd	r24, Y+5	; 0x05
    ed96:	9e 81       	ldd	r25, Y+6	; 0x06
    ed98:	89 2b       	or	r24, r25
    ed9a:	11 f4       	brne	.+4      	; 0xeda0 <_Z15txSetParametersPjPb+0xc6>
    ed9c:	81 e0       	ldi	r24, 0x01	; 1
    ed9e:	01 c0       	rjmp	.+2      	; 0xeda2 <_Z15txSetParametersPjPb+0xc8>
    eda0:	80 e0       	ldi	r24, 0x00	; 0
    eda2:	88 23       	and	r24, r24
    eda4:	31 f0       	breq	.+12     	; 0xedb2 <_Z15txSetParametersPjPb+0xd8>
					{
						final_drain_voltage(OFF);
    eda6:	80 e0       	ldi	r24, 0x00	; 0
    eda8:	0e 94 ac 75 	call	0xeb58	; 0xeb58 <_Z19final_drain_voltageb>
						fet_driver(ON);
    edac:	81 e0       	ldi	r24, 0x01	; 1
    edae:	0e 94 95 75 	call	0xeb2a	; 0xeb2a <_Z10fet_driverb>
					}
				}

				*power_mW = power;
    edb2:	2b 81       	ldd	r18, Y+3	; 0x03
    edb4:	3c 81       	ldd	r19, Y+4	; 0x04
    edb6:	8f 81       	ldd	r24, Y+7	; 0x07
    edb8:	98 85       	ldd	r25, Y+8	; 0x08
    edba:	fc 01       	movw	r30, r24
    edbc:	20 83       	st	Z, r18
    edbe:	31 83       	std	Z+1, r19	; 0x01
    edc0:	04 c0       	rjmp	.+8      	; 0xedca <_Z15txSetParametersPjPb+0xf0>
			}
			else
			{
				err = true;
    edc2:	81 e0       	ldi	r24, 0x01	; 1
    edc4:	89 83       	std	Y+1, r24	; 0x01
				code = ERROR_CODE_POWER_LEVEL_NOT_SUPPORTED;
    edc6:	85 ef       	ldi	r24, 0xF5	; 245
    edc8:	8a 83       	std	Y+2, r24	; 0x02
			}
		}

		if(!err)
    edca:	99 81       	ldd	r25, Y+1	; 0x01
    edcc:	81 e0       	ldi	r24, 0x01	; 1
    edce:	89 27       	eor	r24, r25
    edd0:	88 23       	and	r24, r24
    edd2:	51 f0       	breq	.+20     	; 0xede8 <_Z15txSetParametersPjPb+0x10e>
		{
			if(setEnabled != NULL)
    edd4:	89 85       	ldd	r24, Y+9	; 0x09
    edd6:	9a 85       	ldd	r25, Y+10	; 0x0a
    edd8:	89 2b       	or	r24, r25
    edda:	31 f0       	breq	.+12     	; 0xede8 <_Z15txSetParametersPjPb+0x10e>
			{
				powerToTransmitter(*setEnabled);
    eddc:	89 85       	ldd	r24, Y+9	; 0x09
    edde:	9a 85       	ldd	r25, Y+10	; 0x0a
    ede0:	fc 01       	movw	r30, r24
    ede2:	80 81       	ld	r24, Z
    ede4:	0e 94 50 75 	call	0xeaa0	; 0xeaa0 <_Z18powerToTransmitterb>
			}
		}

		return(code);
    ede8:	8a 81       	ldd	r24, Y+2	; 0x02
	}
    edea:	2a 96       	adiw	r28, 0x0a	; 10
    edec:	cd bf       	out	0x3d, r28	; 61
    edee:	de bf       	out	0x3e, r29	; 62
    edf0:	df 91       	pop	r29
    edf2:	cf 91       	pop	r28
    edf4:	08 95       	ret

0000edf6 <_Z20shutdown_transmitterv>:

	void shutdown_transmitter(void)
	{
    edf6:	cf 93       	push	r28
    edf8:	df 93       	push	r29
    edfa:	cd b7       	in	r28, 0x3d	; 61
    edfc:	de b7       	in	r29, 0x3e	; 62
		si5351_shutdown_comms();	
    edfe:	0e 94 e1 67 	call	0xcfc2	; 0xcfc2 <si5351_shutdown_comms>
	}
    ee02:	00 00       	nop
    ee04:	df 91       	pop	r29
    ee06:	cf 91       	pop	r28
    ee08:	08 95       	ret

0000ee0a <_Z19restart_transmitterv>:
	
	void restart_transmitter(void)
	{
    ee0a:	cf 93       	push	r28
    ee0c:	df 93       	push	r29
    ee0e:	cd b7       	in	r28, 0x3d	; 61
    ee10:	de b7       	in	r29, 0x3e	; 62
		si5351_start_comms();
    ee12:	0e 94 eb 67 	call	0xcfd6	; 0xcfd6 <si5351_start_comms>
	}
    ee16:	00 00       	nop
    ee18:	df 91       	pop	r29
    ee1a:	cf 91       	pop	r28
    ee1c:	08 95       	ret

0000ee1e <_Z16init_transmitterm>:

	EC init_transmitter(Frequency_Hz freq)
	{
    ee1e:	cf 93       	push	r28
    ee20:	df 93       	push	r29
    ee22:	00 d0       	rcall	.+0      	; 0xee24 <_Z16init_transmitterm+0x6>
    ee24:	00 d0       	rcall	.+0      	; 0xee26 <_Z16init_transmitterm+0x8>
    ee26:	cd b7       	in	r28, 0x3d	; 61
    ee28:	de b7       	in	r29, 0x3e	; 62
    ee2a:	69 83       	std	Y+1, r22	; 0x01
    ee2c:	7a 83       	std	Y+2, r23	; 0x02
    ee2e:	8b 83       	std	Y+3, r24	; 0x03
    ee30:	9c 83       	std	Y+4, r25	; 0x04
		g_80m_frequency = freq;
    ee32:	89 81       	ldd	r24, Y+1	; 0x01
    ee34:	9a 81       	ldd	r25, Y+2	; 0x02
    ee36:	ab 81       	ldd	r26, Y+3	; 0x03
    ee38:	bc 81       	ldd	r27, Y+4	; 0x04
    ee3a:	80 93 5a 40 	sts	0x405A, r24	; 0x80405a <g_80m_frequency>
    ee3e:	90 93 5b 40 	sts	0x405B, r25	; 0x80405b <g_80m_frequency+0x1>
    ee42:	a0 93 5c 40 	sts	0x405C, r26	; 0x80405c <g_80m_frequency+0x2>
    ee46:	b0 93 5d 40 	sts	0x405D, r27	; 0x80405d <g_80m_frequency+0x3>
		return init_transmitter();
    ee4a:	0e 94 2d 77 	call	0xee5a	; 0xee5a <_Z16init_transmitterv>
	}
    ee4e:	24 96       	adiw	r28, 0x04	; 4
    ee50:	cd bf       	out	0x3d, r28	; 61
    ee52:	de bf       	out	0x3e, r29	; 62
    ee54:	df 91       	pop	r29
    ee56:	cf 91       	pop	r28
    ee58:	08 95       	ret

0000ee5a <_Z16init_transmitterv>:
	
	EC init_transmitter(void)
	{
    ee5a:	cf 93       	push	r28
    ee5c:	df 93       	push	r29
    ee5e:	00 d0       	rcall	.+0      	; 0xee60 <_Z16init_transmitterv+0x6>
    ee60:	00 d0       	rcall	.+0      	; 0xee62 <_Z16init_transmitterv+0x8>
    ee62:	cd b7       	in	r28, 0x3d	; 61
    ee64:	de b7       	in	r29, 0x3e	; 62
		EC code;
		bool err;
		
		fet_driver(OFF);		
    ee66:	80 e0       	ldi	r24, 0x00	; 0
    ee68:	0e 94 95 75 	call	0xeb2a	; 0xeb2a <_Z10fet_driverb>
		DAC0_init();
    ee6c:	0e 94 d7 3b 	call	0x77ae	; 0x77ae <_Z9DAC0_initv>

		if((err = si5351_init(SI5351_CRYSTAL_LOAD_6PF, 0)))
    ee70:	40 e0       	ldi	r20, 0x00	; 0
    ee72:	50 e0       	ldi	r21, 0x00	; 0
    ee74:	ba 01       	movw	r22, r20
    ee76:	80 e4       	ldi	r24, 0x40	; 64
    ee78:	0e 94 f5 67 	call	0xcfea	; 0xcfea <si5351_init>
    ee7c:	8a 83       	std	Y+2, r24	; 0x02
    ee7e:	8a 81       	ldd	r24, Y+2	; 0x02
    ee80:	88 23       	and	r24, r24
    ee82:	11 f0       	breq	.+4      	; 0xee88 <_Z16init_transmitterv+0x2e>
		{
			return(ERROR_CODE_RF_OSCILLATOR_ERROR);
    ee84:	82 ed       	ldi	r24, 0xD2	; 210
    ee86:	41 c0       	rjmp	.+130    	; 0xef0a <_Z16init_transmitterv+0xb0>
		}

		if((code = si5351_drive_strength(TX_CLOCK_HF_0, SI5351_DRIVE_8MA)))
    ee88:	63 e0       	ldi	r22, 0x03	; 3
    ee8a:	81 e0       	ldi	r24, 0x01	; 1
    ee8c:	0e 94 af 6a 	call	0xd55e	; 0xd55e <si5351_drive_strength>
    ee90:	89 83       	std	Y+1, r24	; 0x01
    ee92:	81 e0       	ldi	r24, 0x01	; 1
    ee94:	99 81       	ldd	r25, Y+1	; 0x01
    ee96:	99 23       	and	r25, r25
    ee98:	09 f4       	brne	.+2      	; 0xee9c <_Z16init_transmitterv+0x42>
    ee9a:	80 e0       	ldi	r24, 0x00	; 0
    ee9c:	88 23       	and	r24, r24
    ee9e:	11 f0       	breq	.+4      	; 0xeea4 <_Z16init_transmitterv+0x4a>
		{
			return( code);
    eea0:	89 81       	ldd	r24, Y+1	; 0x01
    eea2:	33 c0       	rjmp	.+102    	; 0xef0a <_Z16init_transmitterv+0xb0>
		}
		
		if((code = si5351_clock_enable(TX_CLOCK_HF_0, SI5351_CLK_DISABLED)))
    eea4:	60 e0       	ldi	r22, 0x00	; 0
    eea6:	81 e0       	ldi	r24, 0x01	; 1
    eea8:	0e 94 64 6a 	call	0xd4c8	; 0xd4c8 <si5351_clock_enable>
    eeac:	89 83       	std	Y+1, r24	; 0x01
    eeae:	81 e0       	ldi	r24, 0x01	; 1
    eeb0:	99 81       	ldd	r25, Y+1	; 0x01
    eeb2:	99 23       	and	r25, r25
    eeb4:	09 f4       	brne	.+2      	; 0xeeb8 <_Z16init_transmitterv+0x5e>
    eeb6:	80 e0       	ldi	r24, 0x00	; 0
    eeb8:	88 23       	and	r24, r24
    eeba:	11 f0       	breq	.+4      	; 0xeec0 <_Z16init_transmitterv+0x66>
		{
			return( code);
    eebc:	89 81       	ldd	r24, Y+1	; 0x01
    eebe:	25 c0       	rjmp	.+74     	; 0xef0a <_Z16init_transmitterv+0xb0>
		}

		uint16_t pwr_mW = g_80m_power_level_mW;
    eec0:	80 91 5e 40 	lds	r24, 0x405E	; 0x80405e <g_80m_power_level_mW>
    eec4:	90 91 5f 40 	lds	r25, 0x405F	; 0x80405f <g_80m_power_level_mW+0x1>
    eec8:	8b 83       	std	Y+3, r24	; 0x03
    eeca:	9c 83       	std	Y+4, r25	; 0x04
		
		err = txSetFrequency((Frequency_Hz*)&g_80m_frequency, true);
    eecc:	61 e0       	ldi	r22, 0x01	; 1
    eece:	8a e5       	ldi	r24, 0x5A	; 90
    eed0:	90 e4       	ldi	r25, 0x40	; 64
    eed2:	0e 94 ed 74 	call	0xe9da	; 0xe9da <_Z14txSetFrequencyPmb>
    eed6:	8a 83       	std	Y+2, r24	; 0x02
		if(!err)
    eed8:	9a 81       	ldd	r25, Y+2	; 0x02
    eeda:	81 e0       	ldi	r24, 0x01	; 1
    eedc:	89 27       	eor	r24, r25
    eede:	88 23       	and	r24, r24
    eee0:	81 f0       	breq	.+32     	; 0xef02 <_Z16init_transmitterv+0xa8>
		{
			code = txSetParameters(&pwr_mW, NULL);
    eee2:	ce 01       	movw	r24, r28
    eee4:	03 96       	adiw	r24, 0x03	; 3
    eee6:	60 e0       	ldi	r22, 0x00	; 0
    eee8:	70 e0       	ldi	r23, 0x00	; 0
    eeea:	0e 94 6d 76 	call	0xecda	; 0xecda <_Z15txSetParametersPjPb>
    eeee:	89 83       	std	Y+1, r24	; 0x01
			if((code == ERROR_CODE_NO_ERROR) || (code == ERROR_CODE_NO_ANTENNA_PREVENTS_POWER_SETTING))
    eef0:	89 81       	ldd	r24, Y+1	; 0x01
    eef2:	88 23       	and	r24, r24
    eef4:	19 f0       	breq	.+6      	; 0xeefc <_Z16init_transmitterv+0xa2>
    eef6:	89 81       	ldd	r24, Y+1	; 0x01
    eef8:	86 3f       	cpi	r24, 0xF6	; 246
    eefa:	19 f4       	brne	.+6      	; 0xef02 <_Z16init_transmitterv+0xa8>
			{
				g_tx_initialized = true;
    eefc:	81 e0       	ldi	r24, 0x01	; 1
    eefe:	80 93 de 49 	sts	0x49DE, r24	; 0x8049de <_ZL16g_tx_initialized>
			}
		}
		
		fet_driver(ON);
    ef02:	81 e0       	ldi	r24, 0x01	; 1
    ef04:	0e 94 95 75 	call	0xeb2a	; 0xeb2a <_Z10fet_driverb>

		return( code);
    ef08:	89 81       	ldd	r24, Y+1	; 0x01
	}
    ef0a:	24 96       	adiw	r28, 0x04	; 4
    ef0c:	cd bf       	out	0x3d, r28	; 61
    ef0e:	de bf       	out	0x3e, r29	; 62
    ef10:	df 91       	pop	r29
    ef12:	cf 91       	pop	r28
    ef14:	08 95       	ret

0000ef16 <_Z22txMilliwattsToSettingsPjS_>:


EC txMilliwattsToSettings(uint16_t* powerMW, uint16_t* driveLevel)
{
    ef16:	cf 93       	push	r28
    ef18:	df 93       	push	r29
    ef1a:	cd b7       	in	r28, 0x3d	; 61
    ef1c:	de b7       	in	r29, 0x3e	; 62
    ef1e:	62 97       	sbiw	r28, 0x12	; 18
    ef20:	cd bf       	out	0x3d, r28	; 61
    ef22:	de bf       	out	0x3e, r29	; 62
    ef24:	8f 87       	std	Y+15, r24	; 0x0f
    ef26:	98 8b       	std	Y+16, r25	; 0x10
    ef28:	69 8b       	std	Y+17, r22	; 0x11
    ef2a:	7a 8b       	std	Y+18, r23	; 0x12
	EC ec = ERROR_CODE_NO_ERROR;
    ef2c:	19 82       	std	Y+1, r1	; 0x01
	uint16_t maxPwr;
	uint8_t index;

	if(powerMW == NULL)
    ef2e:	8f 85       	ldd	r24, Y+15	; 0x0f
    ef30:	98 89       	ldd	r25, Y+16	; 0x10
    ef32:	89 2b       	or	r24, r25
    ef34:	11 f4       	brne	.+4      	; 0xef3a <_Z22txMilliwattsToSettingsPjS_+0x24>
	{
		return(ERROR_CODE_SW_LOGIC_ERROR);
    ef36:	8f ec       	ldi	r24, 0xCF	; 207
    ef38:	76 c1       	rjmp	.+748    	; 0xf226 <_Z22txMilliwattsToSettingsPjS_+0x310>
	}

	maxPwr = MAX_TX_POWER_80M_MW;
    ef3a:	88 e8       	ldi	r24, 0x88	; 136
    ef3c:	93 e1       	ldi	r25, 0x13	; 19
    ef3e:	8b 83       	std	Y+3, r24	; 0x03
    ef40:	9c 83       	std	Y+4, r25	; 0x04

	if(*powerMW > maxPwr)
    ef42:	8f 85       	ldd	r24, Y+15	; 0x0f
    ef44:	98 89       	ldd	r25, Y+16	; 0x10
    ef46:	fc 01       	movw	r30, r24
    ef48:	20 81       	ld	r18, Z
    ef4a:	31 81       	ldd	r19, Z+1	; 0x01
    ef4c:	8b 81       	ldd	r24, Y+3	; 0x03
    ef4e:	9c 81       	ldd	r25, Y+4	; 0x04
    ef50:	82 17       	cp	r24, r18
    ef52:	93 07       	cpc	r25, r19
    ef54:	10 f4       	brcc	.+4      	; 0xef5a <_Z22txMilliwattsToSettingsPjS_+0x44>
	{
		ec = ERROR_CODE_POWER_LEVEL_NOT_SUPPORTED;
    ef56:	85 ef       	ldi	r24, 0xF5	; 245
    ef58:	89 83       	std	Y+1, r24	; 0x01
	}

	*powerMW = CLAMP((uint16_t)0, *powerMW, maxPwr);
    ef5a:	8f 85       	ldd	r24, Y+15	; 0x0f
    ef5c:	98 89       	ldd	r25, Y+16	; 0x10
    ef5e:	fc 01       	movw	r30, r24
    ef60:	80 81       	ld	r24, Z
    ef62:	91 81       	ldd	r25, Z+1	; 0x01
    ef64:	8d 83       	std	Y+5, r24	; 0x05
    ef66:	9e 83       	std	Y+6, r25	; 0x06
    ef68:	1f 82       	std	Y+7, r1	; 0x07
    ef6a:	18 86       	std	Y+8, r1	; 0x08
    ef6c:	8b 81       	ldd	r24, Y+3	; 0x03
    ef6e:	9c 81       	ldd	r25, Y+4	; 0x04
    ef70:	89 87       	std	Y+9, r24	; 0x09
    ef72:	9a 87       	std	Y+10, r25	; 0x0a
    ef74:	2d 81       	ldd	r18, Y+5	; 0x05
    ef76:	3e 81       	ldd	r19, Y+6	; 0x06
    ef78:	89 85       	ldd	r24, Y+9	; 0x09
    ef7a:	9a 85       	ldd	r25, Y+10	; 0x0a
    ef7c:	82 17       	cp	r24, r18
    ef7e:	93 07       	cpc	r25, r19
    ef80:	68 f0       	brcs	.+26     	; 0xef9c <_Z22txMilliwattsToSettingsPjS_+0x86>
    ef82:	2d 81       	ldd	r18, Y+5	; 0x05
    ef84:	3e 81       	ldd	r19, Y+6	; 0x06
    ef86:	8f 81       	ldd	r24, Y+7	; 0x07
    ef88:	98 85       	ldd	r25, Y+8	; 0x08
    ef8a:	28 17       	cp	r18, r24
    ef8c:	39 07       	cpc	r19, r25
    ef8e:	18 f4       	brcc	.+6      	; 0xef96 <_Z22txMilliwattsToSettingsPjS_+0x80>
    ef90:	8f 81       	ldd	r24, Y+7	; 0x07
    ef92:	98 85       	ldd	r25, Y+8	; 0x08
    ef94:	05 c0       	rjmp	.+10     	; 0xefa0 <_Z22txMilliwattsToSettingsPjS_+0x8a>
    ef96:	8d 81       	ldd	r24, Y+5	; 0x05
    ef98:	9e 81       	ldd	r25, Y+6	; 0x06
    ef9a:	02 c0       	rjmp	.+4      	; 0xefa0 <_Z22txMilliwattsToSettingsPjS_+0x8a>
    ef9c:	89 85       	ldd	r24, Y+9	; 0x09
    ef9e:	9a 85       	ldd	r25, Y+10	; 0x0a
    efa0:	2f 85       	ldd	r18, Y+15	; 0x0f
    efa2:	38 89       	ldd	r19, Y+16	; 0x10
    efa4:	f9 01       	movw	r30, r18
    efa6:	80 83       	st	Z, r24
    efa8:	91 83       	std	Z+1, r25	; 0x01

	if(*powerMW < 5)
    efaa:	8f 85       	ldd	r24, Y+15	; 0x0f
    efac:	98 89       	ldd	r25, Y+16	; 0x10
    efae:	fc 01       	movw	r30, r24
    efb0:	80 81       	ld	r24, Z
    efb2:	91 81       	ldd	r25, Z+1	; 0x01
    efb4:	05 97       	sbiw	r24, 0x05	; 5
    efb6:	38 f4       	brcc	.+14     	; 0xefc6 <_Z22txMilliwattsToSettingsPjS_+0xb0>
	{
		index = 0;
    efb8:	1a 82       	std	Y+2, r1	; 0x02
		*powerMW = 0;
    efba:	8f 85       	ldd	r24, Y+15	; 0x0f
    efbc:	98 89       	ldd	r25, Y+16	; 0x10
    efbe:	fc 01       	movw	r30, r24
    efc0:	10 82       	st	Z, r1
    efc2:	11 82       	std	Z+1, r1	; 0x01
    efc4:	04 c1       	rjmp	.+520    	; 0xf1ce <_Z22txMilliwattsToSettingsPjS_+0x2b8>
	}
	else if(*powerMW < 50)
    efc6:	8f 85       	ldd	r24, Y+15	; 0x0f
    efc8:	98 89       	ldd	r25, Y+16	; 0x10
    efca:	fc 01       	movw	r30, r24
    efcc:	80 81       	ld	r24, Z
    efce:	91 81       	ldd	r25, Z+1	; 0x01
    efd0:	c2 97       	sbiw	r24, 0x32	; 50
    efd2:	50 f4       	brcc	.+20     	; 0xefe8 <_Z22txMilliwattsToSettingsPjS_+0xd2>
	{
		index = 1;
    efd4:	81 e0       	ldi	r24, 0x01	; 1
    efd6:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 10;
    efd8:	8f 85       	ldd	r24, Y+15	; 0x0f
    efda:	98 89       	ldd	r25, Y+16	; 0x10
    efdc:	2a e0       	ldi	r18, 0x0A	; 10
    efde:	30 e0       	ldi	r19, 0x00	; 0
    efe0:	fc 01       	movw	r30, r24
    efe2:	20 83       	st	Z, r18
    efe4:	31 83       	std	Z+1, r19	; 0x01
    efe6:	f3 c0       	rjmp	.+486    	; 0xf1ce <_Z22txMilliwattsToSettingsPjS_+0x2b8>
	}
	else if(*powerMW < 150)
    efe8:	8f 85       	ldd	r24, Y+15	; 0x0f
    efea:	98 89       	ldd	r25, Y+16	; 0x10
    efec:	fc 01       	movw	r30, r24
    efee:	80 81       	ld	r24, Z
    eff0:	91 81       	ldd	r25, Z+1	; 0x01
    eff2:	86 39       	cpi	r24, 0x96	; 150
    eff4:	91 05       	cpc	r25, r1
    eff6:	50 f4       	brcc	.+20     	; 0xf00c <_Z22txMilliwattsToSettingsPjS_+0xf6>
	{
		index = 2;
    eff8:	82 e0       	ldi	r24, 0x02	; 2
    effa:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 100;
    effc:	8f 85       	ldd	r24, Y+15	; 0x0f
    effe:	98 89       	ldd	r25, Y+16	; 0x10
    f000:	24 e6       	ldi	r18, 0x64	; 100
    f002:	30 e0       	ldi	r19, 0x00	; 0
    f004:	fc 01       	movw	r30, r24
    f006:	20 83       	st	Z, r18
    f008:	31 83       	std	Z+1, r19	; 0x01
    f00a:	e1 c0       	rjmp	.+450    	; 0xf1ce <_Z22txMilliwattsToSettingsPjS_+0x2b8>
	}
	else if(*powerMW < 250)
    f00c:	8f 85       	ldd	r24, Y+15	; 0x0f
    f00e:	98 89       	ldd	r25, Y+16	; 0x10
    f010:	fc 01       	movw	r30, r24
    f012:	80 81       	ld	r24, Z
    f014:	91 81       	ldd	r25, Z+1	; 0x01
    f016:	8a 3f       	cpi	r24, 0xFA	; 250
    f018:	91 05       	cpc	r25, r1
    f01a:	50 f4       	brcc	.+20     	; 0xf030 <_Z22txMilliwattsToSettingsPjS_+0x11a>
	{
		index = 3;
    f01c:	83 e0       	ldi	r24, 0x03	; 3
    f01e:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 200;
    f020:	8f 85       	ldd	r24, Y+15	; 0x0f
    f022:	98 89       	ldd	r25, Y+16	; 0x10
    f024:	28 ec       	ldi	r18, 0xC8	; 200
    f026:	30 e0       	ldi	r19, 0x00	; 0
    f028:	fc 01       	movw	r30, r24
    f02a:	20 83       	st	Z, r18
    f02c:	31 83       	std	Z+1, r19	; 0x01
    f02e:	cf c0       	rjmp	.+414    	; 0xf1ce <_Z22txMilliwattsToSettingsPjS_+0x2b8>
	}
	else if(*powerMW < 350)
    f030:	8f 85       	ldd	r24, Y+15	; 0x0f
    f032:	98 89       	ldd	r25, Y+16	; 0x10
    f034:	fc 01       	movw	r30, r24
    f036:	80 81       	ld	r24, Z
    f038:	91 81       	ldd	r25, Z+1	; 0x01
    f03a:	8e 35       	cpi	r24, 0x5E	; 94
    f03c:	91 40       	sbci	r25, 0x01	; 1
    f03e:	50 f4       	brcc	.+20     	; 0xf054 <_Z22txMilliwattsToSettingsPjS_+0x13e>
	{
		index = 4;
    f040:	84 e0       	ldi	r24, 0x04	; 4
    f042:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 300;
    f044:	8f 85       	ldd	r24, Y+15	; 0x0f
    f046:	98 89       	ldd	r25, Y+16	; 0x10
    f048:	2c e2       	ldi	r18, 0x2C	; 44
    f04a:	31 e0       	ldi	r19, 0x01	; 1
    f04c:	fc 01       	movw	r30, r24
    f04e:	20 83       	st	Z, r18
    f050:	31 83       	std	Z+1, r19	; 0x01
    f052:	bd c0       	rjmp	.+378    	; 0xf1ce <_Z22txMilliwattsToSettingsPjS_+0x2b8>
	}
	else if(*powerMW < 450)
    f054:	8f 85       	ldd	r24, Y+15	; 0x0f
    f056:	98 89       	ldd	r25, Y+16	; 0x10
    f058:	fc 01       	movw	r30, r24
    f05a:	80 81       	ld	r24, Z
    f05c:	91 81       	ldd	r25, Z+1	; 0x01
    f05e:	82 3c       	cpi	r24, 0xC2	; 194
    f060:	91 40       	sbci	r25, 0x01	; 1
    f062:	50 f4       	brcc	.+20     	; 0xf078 <_Z22txMilliwattsToSettingsPjS_+0x162>
	{
		index = 5;
    f064:	85 e0       	ldi	r24, 0x05	; 5
    f066:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 400;
    f068:	8f 85       	ldd	r24, Y+15	; 0x0f
    f06a:	98 89       	ldd	r25, Y+16	; 0x10
    f06c:	20 e9       	ldi	r18, 0x90	; 144
    f06e:	31 e0       	ldi	r19, 0x01	; 1
    f070:	fc 01       	movw	r30, r24
    f072:	20 83       	st	Z, r18
    f074:	31 83       	std	Z+1, r19	; 0x01
    f076:	ab c0       	rjmp	.+342    	; 0xf1ce <_Z22txMilliwattsToSettingsPjS_+0x2b8>
	}
	else if(*powerMW < 550)
    f078:	8f 85       	ldd	r24, Y+15	; 0x0f
    f07a:	98 89       	ldd	r25, Y+16	; 0x10
    f07c:	fc 01       	movw	r30, r24
    f07e:	80 81       	ld	r24, Z
    f080:	91 81       	ldd	r25, Z+1	; 0x01
    f082:	86 32       	cpi	r24, 0x26	; 38
    f084:	92 40       	sbci	r25, 0x02	; 2
    f086:	50 f4       	brcc	.+20     	; 0xf09c <_Z22txMilliwattsToSettingsPjS_+0x186>
	{
		index = 6;
    f088:	86 e0       	ldi	r24, 0x06	; 6
    f08a:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 500;
    f08c:	8f 85       	ldd	r24, Y+15	; 0x0f
    f08e:	98 89       	ldd	r25, Y+16	; 0x10
    f090:	24 ef       	ldi	r18, 0xF4	; 244
    f092:	31 e0       	ldi	r19, 0x01	; 1
    f094:	fc 01       	movw	r30, r24
    f096:	20 83       	st	Z, r18
    f098:	31 83       	std	Z+1, r19	; 0x01
    f09a:	99 c0       	rjmp	.+306    	; 0xf1ce <_Z22txMilliwattsToSettingsPjS_+0x2b8>
	}
	else if(*powerMW < 650)
    f09c:	8f 85       	ldd	r24, Y+15	; 0x0f
    f09e:	98 89       	ldd	r25, Y+16	; 0x10
    f0a0:	fc 01       	movw	r30, r24
    f0a2:	80 81       	ld	r24, Z
    f0a4:	91 81       	ldd	r25, Z+1	; 0x01
    f0a6:	8a 38       	cpi	r24, 0x8A	; 138
    f0a8:	92 40       	sbci	r25, 0x02	; 2
    f0aa:	50 f4       	brcc	.+20     	; 0xf0c0 <_Z22txMilliwattsToSettingsPjS_+0x1aa>
	{
		index = 7;
    f0ac:	87 e0       	ldi	r24, 0x07	; 7
    f0ae:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 600;
    f0b0:	8f 85       	ldd	r24, Y+15	; 0x0f
    f0b2:	98 89       	ldd	r25, Y+16	; 0x10
    f0b4:	28 e5       	ldi	r18, 0x58	; 88
    f0b6:	32 e0       	ldi	r19, 0x02	; 2
    f0b8:	fc 01       	movw	r30, r24
    f0ba:	20 83       	st	Z, r18
    f0bc:	31 83       	std	Z+1, r19	; 0x01
    f0be:	87 c0       	rjmp	.+270    	; 0xf1ce <_Z22txMilliwattsToSettingsPjS_+0x2b8>
	}
	else if(*powerMW < 900)
    f0c0:	8f 85       	ldd	r24, Y+15	; 0x0f
    f0c2:	98 89       	ldd	r25, Y+16	; 0x10
    f0c4:	fc 01       	movw	r30, r24
    f0c6:	80 81       	ld	r24, Z
    f0c8:	91 81       	ldd	r25, Z+1	; 0x01
    f0ca:	84 38       	cpi	r24, 0x84	; 132
    f0cc:	93 40       	sbci	r25, 0x03	; 3
    f0ce:	50 f4       	brcc	.+20     	; 0xf0e4 <_Z22txMilliwattsToSettingsPjS_+0x1ce>
	{
		index = 8;
    f0d0:	88 e0       	ldi	r24, 0x08	; 8
    f0d2:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 800;
    f0d4:	8f 85       	ldd	r24, Y+15	; 0x0f
    f0d6:	98 89       	ldd	r25, Y+16	; 0x10
    f0d8:	20 e2       	ldi	r18, 0x20	; 32
    f0da:	33 e0       	ldi	r19, 0x03	; 3
    f0dc:	fc 01       	movw	r30, r24
    f0de:	20 83       	st	Z, r18
    f0e0:	31 83       	std	Z+1, r19	; 0x01
    f0e2:	75 c0       	rjmp	.+234    	; 0xf1ce <_Z22txMilliwattsToSettingsPjS_+0x2b8>
	}
	else if(*powerMW < 1250)
    f0e4:	8f 85       	ldd	r24, Y+15	; 0x0f
    f0e6:	98 89       	ldd	r25, Y+16	; 0x10
    f0e8:	fc 01       	movw	r30, r24
    f0ea:	80 81       	ld	r24, Z
    f0ec:	91 81       	ldd	r25, Z+1	; 0x01
    f0ee:	82 3e       	cpi	r24, 0xE2	; 226
    f0f0:	94 40       	sbci	r25, 0x04	; 4
    f0f2:	50 f4       	brcc	.+20     	; 0xf108 <_Z22txMilliwattsToSettingsPjS_+0x1f2>
	{
		index = 9;
    f0f4:	89 e0       	ldi	r24, 0x09	; 9
    f0f6:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 1000;
    f0f8:	8f 85       	ldd	r24, Y+15	; 0x0f
    f0fa:	98 89       	ldd	r25, Y+16	; 0x10
    f0fc:	28 ee       	ldi	r18, 0xE8	; 232
    f0fe:	33 e0       	ldi	r19, 0x03	; 3
    f100:	fc 01       	movw	r30, r24
    f102:	20 83       	st	Z, r18
    f104:	31 83       	std	Z+1, r19	; 0x01
    f106:	63 c0       	rjmp	.+198    	; 0xf1ce <_Z22txMilliwattsToSettingsPjS_+0x2b8>
	}
	else if(*powerMW < 1750)
    f108:	8f 85       	ldd	r24, Y+15	; 0x0f
    f10a:	98 89       	ldd	r25, Y+16	; 0x10
    f10c:	fc 01       	movw	r30, r24
    f10e:	80 81       	ld	r24, Z
    f110:	91 81       	ldd	r25, Z+1	; 0x01
    f112:	86 3d       	cpi	r24, 0xD6	; 214
    f114:	96 40       	sbci	r25, 0x06	; 6
    f116:	50 f4       	brcc	.+20     	; 0xf12c <_Z22txMilliwattsToSettingsPjS_+0x216>
	{
		index = 10;
    f118:	8a e0       	ldi	r24, 0x0A	; 10
    f11a:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 1500;
    f11c:	8f 85       	ldd	r24, Y+15	; 0x0f
    f11e:	98 89       	ldd	r25, Y+16	; 0x10
    f120:	2c ed       	ldi	r18, 0xDC	; 220
    f122:	35 e0       	ldi	r19, 0x05	; 5
    f124:	fc 01       	movw	r30, r24
    f126:	20 83       	st	Z, r18
    f128:	31 83       	std	Z+1, r19	; 0x01
    f12a:	51 c0       	rjmp	.+162    	; 0xf1ce <_Z22txMilliwattsToSettingsPjS_+0x2b8>
	}
	else if(*powerMW < 2250)
    f12c:	8f 85       	ldd	r24, Y+15	; 0x0f
    f12e:	98 89       	ldd	r25, Y+16	; 0x10
    f130:	fc 01       	movw	r30, r24
    f132:	80 81       	ld	r24, Z
    f134:	91 81       	ldd	r25, Z+1	; 0x01
    f136:	8a 3c       	cpi	r24, 0xCA	; 202
    f138:	98 40       	sbci	r25, 0x08	; 8
    f13a:	50 f4       	brcc	.+20     	; 0xf150 <_Z22txMilliwattsToSettingsPjS_+0x23a>
	{
		index = 11;
    f13c:	8b e0       	ldi	r24, 0x0B	; 11
    f13e:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 2000;
    f140:	8f 85       	ldd	r24, Y+15	; 0x0f
    f142:	98 89       	ldd	r25, Y+16	; 0x10
    f144:	20 ed       	ldi	r18, 0xD0	; 208
    f146:	37 e0       	ldi	r19, 0x07	; 7
    f148:	fc 01       	movw	r30, r24
    f14a:	20 83       	st	Z, r18
    f14c:	31 83       	std	Z+1, r19	; 0x01
    f14e:	3f c0       	rjmp	.+126    	; 0xf1ce <_Z22txMilliwattsToSettingsPjS_+0x2b8>
	}
	else if(*powerMW < 2750)
    f150:	8f 85       	ldd	r24, Y+15	; 0x0f
    f152:	98 89       	ldd	r25, Y+16	; 0x10
    f154:	fc 01       	movw	r30, r24
    f156:	80 81       	ld	r24, Z
    f158:	91 81       	ldd	r25, Z+1	; 0x01
    f15a:	8e 3b       	cpi	r24, 0xBE	; 190
    f15c:	9a 40       	sbci	r25, 0x0A	; 10
    f15e:	50 f4       	brcc	.+20     	; 0xf174 <_Z22txMilliwattsToSettingsPjS_+0x25e>
	{
		index = 12;
    f160:	8c e0       	ldi	r24, 0x0C	; 12
    f162:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 2500;
    f164:	8f 85       	ldd	r24, Y+15	; 0x0f
    f166:	98 89       	ldd	r25, Y+16	; 0x10
    f168:	24 ec       	ldi	r18, 0xC4	; 196
    f16a:	39 e0       	ldi	r19, 0x09	; 9
    f16c:	fc 01       	movw	r30, r24
    f16e:	20 83       	st	Z, r18
    f170:	31 83       	std	Z+1, r19	; 0x01
    f172:	2d c0       	rjmp	.+90     	; 0xf1ce <_Z22txMilliwattsToSettingsPjS_+0x2b8>
	}
	else if(*powerMW < 3500)
    f174:	8f 85       	ldd	r24, Y+15	; 0x0f
    f176:	98 89       	ldd	r25, Y+16	; 0x10
    f178:	fc 01       	movw	r30, r24
    f17a:	80 81       	ld	r24, Z
    f17c:	91 81       	ldd	r25, Z+1	; 0x01
    f17e:	8c 3a       	cpi	r24, 0xAC	; 172
    f180:	9d 40       	sbci	r25, 0x0D	; 13
    f182:	50 f4       	brcc	.+20     	; 0xf198 <_Z22txMilliwattsToSettingsPjS_+0x282>
	{
		index = 13;
    f184:	8d e0       	ldi	r24, 0x0D	; 13
    f186:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 3000;
    f188:	8f 85       	ldd	r24, Y+15	; 0x0f
    f18a:	98 89       	ldd	r25, Y+16	; 0x10
    f18c:	28 eb       	ldi	r18, 0xB8	; 184
    f18e:	3b e0       	ldi	r19, 0x0B	; 11
    f190:	fc 01       	movw	r30, r24
    f192:	20 83       	st	Z, r18
    f194:	31 83       	std	Z+1, r19	; 0x01
    f196:	1b c0       	rjmp	.+54     	; 0xf1ce <_Z22txMilliwattsToSettingsPjS_+0x2b8>
	}
	else if(*powerMW < 4500)
    f198:	8f 85       	ldd	r24, Y+15	; 0x0f
    f19a:	98 89       	ldd	r25, Y+16	; 0x10
    f19c:	fc 01       	movw	r30, r24
    f19e:	80 81       	ld	r24, Z
    f1a0:	91 81       	ldd	r25, Z+1	; 0x01
    f1a2:	84 39       	cpi	r24, 0x94	; 148
    f1a4:	91 41       	sbci	r25, 0x11	; 17
    f1a6:	50 f4       	brcc	.+20     	; 0xf1bc <_Z22txMilliwattsToSettingsPjS_+0x2a6>
	{
		index = 14;
    f1a8:	8e e0       	ldi	r24, 0x0E	; 14
    f1aa:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 4000;
    f1ac:	8f 85       	ldd	r24, Y+15	; 0x0f
    f1ae:	98 89       	ldd	r25, Y+16	; 0x10
    f1b0:	20 ea       	ldi	r18, 0xA0	; 160
    f1b2:	3f e0       	ldi	r19, 0x0F	; 15
    f1b4:	fc 01       	movw	r30, r24
    f1b6:	20 83       	st	Z, r18
    f1b8:	31 83       	std	Z+1, r19	; 0x01
    f1ba:	09 c0       	rjmp	.+18     	; 0xf1ce <_Z22txMilliwattsToSettingsPjS_+0x2b8>
	}
	else
	{
		index = 15;
    f1bc:	8f e0       	ldi	r24, 0x0F	; 15
    f1be:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 5000;
    f1c0:	8f 85       	ldd	r24, Y+15	; 0x0f
    f1c2:	98 89       	ldd	r25, Y+16	; 0x10
    f1c4:	28 e8       	ldi	r18, 0x88	; 136
    f1c6:	33 e1       	ldi	r19, 0x13	; 19
    f1c8:	fc 01       	movw	r30, r24
    f1ca:	20 83       	st	Z, r18
    f1cc:	31 83       	std	Z+1, r19	; 0x01
	}

	*driveLevel = g_80m_power_table[index];
    f1ce:	8a 81       	ldd	r24, Y+2	; 0x02
    f1d0:	88 2f       	mov	r24, r24
    f1d2:	90 e0       	ldi	r25, 0x00	; 0
    f1d4:	88 0f       	add	r24, r24
    f1d6:	99 1f       	adc	r25, r25
    f1d8:	8b 59       	subi	r24, 0x9B	; 155
    f1da:	9f 4b       	sbci	r25, 0xBF	; 191
    f1dc:	fc 01       	movw	r30, r24
    f1de:	20 81       	ld	r18, Z
    f1e0:	31 81       	ldd	r19, Z+1	; 0x01
    f1e2:	89 89       	ldd	r24, Y+17	; 0x11
    f1e4:	9a 89       	ldd	r25, Y+18	; 0x12
    f1e6:	fc 01       	movw	r30, r24
    f1e8:	20 83       	st	Z, r18
    f1ea:	31 83       	std	Z+1, r19	; 0x01
	*driveLevel = MIN(*driveLevel, MAX_80M_PWR_SETTING);
    f1ec:	89 89       	ldd	r24, Y+17	; 0x11
    f1ee:	9a 89       	ldd	r25, Y+18	; 0x12
    f1f0:	fc 01       	movw	r30, r24
    f1f2:	80 81       	ld	r24, Z
    f1f4:	91 81       	ldd	r25, Z+1	; 0x01
    f1f6:	8b 87       	std	Y+11, r24	; 0x0b
    f1f8:	9c 87       	std	Y+12, r25	; 0x0c
    f1fa:	80 e0       	ldi	r24, 0x00	; 0
    f1fc:	94 e0       	ldi	r25, 0x04	; 4
    f1fe:	8d 87       	std	Y+13, r24	; 0x0d
    f200:	9e 87       	std	Y+14, r25	; 0x0e
    f202:	2b 85       	ldd	r18, Y+11	; 0x0b
    f204:	3c 85       	ldd	r19, Y+12	; 0x0c
    f206:	8d 85       	ldd	r24, Y+13	; 0x0d
    f208:	9e 85       	ldd	r25, Y+14	; 0x0e
    f20a:	28 17       	cp	r18, r24
    f20c:	39 07       	cpc	r19, r25
    f20e:	18 f4       	brcc	.+6      	; 0xf216 <_Z22txMilliwattsToSettingsPjS_+0x300>
    f210:	8b 85       	ldd	r24, Y+11	; 0x0b
    f212:	9c 85       	ldd	r25, Y+12	; 0x0c
    f214:	02 c0       	rjmp	.+4      	; 0xf21a <_Z22txMilliwattsToSettingsPjS_+0x304>
    f216:	8d 85       	ldd	r24, Y+13	; 0x0d
    f218:	9e 85       	ldd	r25, Y+14	; 0x0e
    f21a:	29 89       	ldd	r18, Y+17	; 0x11
    f21c:	3a 89       	ldd	r19, Y+18	; 0x12
    f21e:	f9 01       	movw	r30, r18
    f220:	80 83       	st	Z, r24
    f222:	91 83       	std	Z+1, r25	; 0x01

	return(ec);
    f224:	89 81       	ldd	r24, Y+1	; 0x01
    f226:	62 96       	adiw	r28, 0x12	; 18
    f228:	cd bf       	out	0x3d, r28	; 61
    f22a:	de bf       	out	0x3e, r29	; 62
    f22c:	df 91       	pop	r29
    f22e:	cf 91       	pop	r28
    f230:	08 95       	ret

0000f232 <USART0_get_data>:
 * \return Nothing
 */
void USART4_enable_rx()
{
	USART4.CTRLB |= USART_RXEN_bm;
}
    f232:	cf 93       	push	r28
    f234:	df 93       	push	r29
    f236:	cd b7       	in	r28, 0x3d	; 61
    f238:	de b7       	in	r29, 0x3e	; 62
    f23a:	80 e0       	ldi	r24, 0x00	; 0
    f23c:	98 e0       	ldi	r25, 0x08	; 8
    f23e:	fc 01       	movw	r30, r24
    f240:	80 81       	ld	r24, Z
    f242:	df 91       	pop	r29
    f244:	cf 91       	pop	r28
    f246:	08 95       	ret

0000f248 <USART1_init>:
    f248:	0f 93       	push	r16
    f24a:	1f 93       	push	r17
    f24c:	cf 93       	push	r28
    f24e:	df 93       	push	r29
    f250:	cd b7       	in	r28, 0x3d	; 61
    f252:	de b7       	in	r29, 0x3e	; 62
    f254:	25 97       	sbiw	r28, 0x05	; 5
    f256:	cd bf       	out	0x3d, r28	; 61
    f258:	de bf       	out	0x3e, r29	; 62
    f25a:	69 83       	std	Y+1, r22	; 0x01
    f25c:	7a 83       	std	Y+2, r23	; 0x02
    f25e:	8b 83       	std	Y+3, r24	; 0x03
    f260:	9c 83       	std	Y+4, r25	; 0x04
    f262:	4d 83       	std	Y+5, r20	; 0x05
    f264:	f8 94       	cli
    f266:	00 e2       	ldi	r16, 0x20	; 32
    f268:	18 e0       	ldi	r17, 0x08	; 8
    f26a:	69 81       	ldd	r22, Y+1	; 0x01
    f26c:	7a 81       	ldd	r23, Y+2	; 0x02
    f26e:	8b 81       	ldd	r24, Y+3	; 0x03
    f270:	9c 81       	ldd	r25, Y+4	; 0x04
    f272:	0e 94 e2 7b 	call	0xf7c4	; 0xf7c4 <__floatunsisf>
    f276:	dc 01       	movw	r26, r24
    f278:	cb 01       	movw	r24, r22
    f27a:	20 e0       	ldi	r18, 0x00	; 0
    f27c:	30 e0       	ldi	r19, 0x00	; 0
    f27e:	40 e8       	ldi	r20, 0x80	; 128
    f280:	51 e4       	ldi	r21, 0x41	; 65
    f282:	bc 01       	movw	r22, r24
    f284:	cd 01       	movw	r24, r26
    f286:	0e 94 99 7c 	call	0xf932	; 0xf932 <__mulsf3>
    f28a:	dc 01       	movw	r26, r24
    f28c:	cb 01       	movw	r24, r22
    f28e:	9c 01       	movw	r18, r24
    f290:	ad 01       	movw	r20, r26
    f292:	60 e0       	ldi	r22, 0x00	; 0
    f294:	7b e1       	ldi	r23, 0x1B	; 27
    f296:	87 eb       	ldi	r24, 0xB7	; 183
    f298:	9e e4       	ldi	r25, 0x4E	; 78
    f29a:	0e 94 3a 7b 	call	0xf674	; 0xf674 <__divsf3>
    f29e:	dc 01       	movw	r26, r24
    f2a0:	cb 01       	movw	r24, r22
    f2a2:	20 e0       	ldi	r18, 0x00	; 0
    f2a4:	30 e0       	ldi	r19, 0x00	; 0
    f2a6:	40 e0       	ldi	r20, 0x00	; 0
    f2a8:	5f e3       	ldi	r21, 0x3F	; 63
    f2aa:	bc 01       	movw	r22, r24
    f2ac:	cd 01       	movw	r24, r26
    f2ae:	0e 94 c9 7a 	call	0xf592	; 0xf592 <__addsf3>
    f2b2:	dc 01       	movw	r26, r24
    f2b4:	cb 01       	movw	r24, r22
    f2b6:	bc 01       	movw	r22, r24
    f2b8:	cd 01       	movw	r24, r26
    f2ba:	0e 94 b3 7b 	call	0xf766	; 0xf766 <__fixunssfsi>
    f2be:	dc 01       	movw	r26, r24
    f2c0:	cb 01       	movw	r24, r22
    f2c2:	f8 01       	movw	r30, r16
    f2c4:	80 87       	std	Z+8, r24	; 0x08
    f2c6:	91 87       	std	Z+9, r25	; 0x09
    f2c8:	80 e2       	ldi	r24, 0x20	; 32
    f2ca:	98 e0       	ldi	r25, 0x08	; 8
    f2cc:	20 e8       	ldi	r18, 0x80	; 128
    f2ce:	fc 01       	movw	r30, r24
    f2d0:	25 83       	std	Z+5, r18	; 0x05
    f2d2:	80 e2       	ldi	r24, 0x20	; 32
    f2d4:	98 e0       	ldi	r25, 0x08	; 8
    f2d6:	23 e0       	ldi	r18, 0x03	; 3
    f2d8:	fc 01       	movw	r30, r24
    f2da:	27 83       	std	Z+7, r18	; 0x07
    f2dc:	8d 81       	ldd	r24, Y+5	; 0x05
    f2de:	88 23       	and	r24, r24
    f2e0:	31 f0       	breq	.+12     	; 0xf2ee <USART1_init+0xa6>
    f2e2:	80 e2       	ldi	r24, 0x20	; 32
    f2e4:	98 e0       	ldi	r25, 0x08	; 8
    f2e6:	24 ec       	ldi	r18, 0xC4	; 196
    f2e8:	fc 01       	movw	r30, r24
    f2ea:	26 83       	std	Z+6, r18	; 0x06
    f2ec:	05 c0       	rjmp	.+10     	; 0xf2f8 <USART1_init+0xb0>
    f2ee:	80 e2       	ldi	r24, 0x20	; 32
    f2f0:	98 e0       	ldi	r25, 0x08	; 8
    f2f2:	20 ec       	ldi	r18, 0xC0	; 192
    f2f4:	fc 01       	movw	r30, r24
    f2f6:	26 83       	std	Z+6, r18	; 0x06
    f2f8:	78 94       	sei
    f2fa:	80 e0       	ldi	r24, 0x00	; 0
    f2fc:	25 96       	adiw	r28, 0x05	; 5
    f2fe:	cd bf       	out	0x3d, r28	; 61
    f300:	de bf       	out	0x3e, r29	; 62
    f302:	df 91       	pop	r29
    f304:	cf 91       	pop	r28
    f306:	1f 91       	pop	r17
    f308:	0f 91       	pop	r16
    f30a:	08 95       	ret

0000f30c <USART1_enable>:
    f30c:	cf 93       	push	r28
    f30e:	df 93       	push	r29
    f310:	cd b7       	in	r28, 0x3d	; 61
    f312:	de b7       	in	r29, 0x3e	; 62
    f314:	80 e2       	ldi	r24, 0x20	; 32
    f316:	98 e0       	ldi	r25, 0x08	; 8
    f318:	20 e2       	ldi	r18, 0x20	; 32
    f31a:	38 e0       	ldi	r19, 0x08	; 8
    f31c:	f9 01       	movw	r30, r18
    f31e:	26 81       	ldd	r18, Z+6	; 0x06
    f320:	20 6c       	ori	r18, 0xC0	; 192
    f322:	fc 01       	movw	r30, r24
    f324:	26 83       	std	Z+6, r18	; 0x06
    f326:	00 00       	nop
    f328:	df 91       	pop	r29
    f32a:	cf 91       	pop	r28
    f32c:	08 95       	ret

0000f32e <USART1_enable_tx>:
    f32e:	cf 93       	push	r28
    f330:	df 93       	push	r29
    f332:	cd b7       	in	r28, 0x3d	; 61
    f334:	de b7       	in	r29, 0x3e	; 62
    f336:	80 e2       	ldi	r24, 0x20	; 32
    f338:	98 e0       	ldi	r25, 0x08	; 8
    f33a:	20 e2       	ldi	r18, 0x20	; 32
    f33c:	38 e0       	ldi	r19, 0x08	; 8
    f33e:	f9 01       	movw	r30, r18
    f340:	26 81       	ldd	r18, Z+6	; 0x06
    f342:	20 64       	ori	r18, 0x40	; 64
    f344:	fc 01       	movw	r30, r24
    f346:	26 83       	std	Z+6, r18	; 0x06
    f348:	80 e2       	ldi	r24, 0x20	; 32
    f34a:	98 e0       	ldi	r25, 0x08	; 8
    f34c:	20 e2       	ldi	r18, 0x20	; 32
    f34e:	38 e0       	ldi	r19, 0x08	; 8
    f350:	f9 01       	movw	r30, r18
    f352:	25 81       	ldd	r18, Z+5	; 0x05
    f354:	20 62       	ori	r18, 0x20	; 32
    f356:	fc 01       	movw	r30, r24
    f358:	25 83       	std	Z+5, r18	; 0x05
    f35a:	00 00       	nop
    f35c:	df 91       	pop	r29
    f35e:	cf 91       	pop	r28
    f360:	08 95       	ret

0000f362 <USART1_disable>:
    f362:	cf 93       	push	r28
    f364:	df 93       	push	r29
    f366:	cd b7       	in	r28, 0x3d	; 61
    f368:	de b7       	in	r29, 0x3e	; 62
    f36a:	80 e2       	ldi	r24, 0x20	; 32
    f36c:	98 e0       	ldi	r25, 0x08	; 8
    f36e:	20 e2       	ldi	r18, 0x20	; 32
    f370:	38 e0       	ldi	r19, 0x08	; 8
    f372:	f9 01       	movw	r30, r18
    f374:	26 81       	ldd	r18, Z+6	; 0x06
    f376:	2f 73       	andi	r18, 0x3F	; 63
    f378:	fc 01       	movw	r30, r24
    f37a:	26 83       	std	Z+6, r18	; 0x06
    f37c:	00 00       	nop
    f37e:	df 91       	pop	r29
    f380:	cf 91       	pop	r28
    f382:	08 95       	ret

0000f384 <USART1_get_data>:
    f384:	cf 93       	push	r28
    f386:	df 93       	push	r29
    f388:	cd b7       	in	r28, 0x3d	; 61
    f38a:	de b7       	in	r29, 0x3e	; 62
    f38c:	80 e2       	ldi	r24, 0x20	; 32
    f38e:	98 e0       	ldi	r25, 0x08	; 8
    f390:	fc 01       	movw	r30, r24
    f392:	80 81       	ld	r24, Z
    f394:	df 91       	pop	r29
    f396:	cf 91       	pop	r28
    f398:	08 95       	ret

0000f39a <USART4_init>:
    f39a:	0f 93       	push	r16
    f39c:	1f 93       	push	r17
    f39e:	cf 93       	push	r28
    f3a0:	df 93       	push	r29
    f3a2:	cd b7       	in	r28, 0x3d	; 61
    f3a4:	de b7       	in	r29, 0x3e	; 62
    f3a6:	25 97       	sbiw	r28, 0x05	; 5
    f3a8:	cd bf       	out	0x3d, r28	; 61
    f3aa:	de bf       	out	0x3e, r29	; 62
    f3ac:	69 83       	std	Y+1, r22	; 0x01
    f3ae:	7a 83       	std	Y+2, r23	; 0x02
    f3b0:	8b 83       	std	Y+3, r24	; 0x03
    f3b2:	9c 83       	std	Y+4, r25	; 0x04
    f3b4:	4d 83       	std	Y+5, r20	; 0x05
    f3b6:	00 e8       	ldi	r16, 0x80	; 128
    f3b8:	18 e0       	ldi	r17, 0x08	; 8
    f3ba:	69 81       	ldd	r22, Y+1	; 0x01
    f3bc:	7a 81       	ldd	r23, Y+2	; 0x02
    f3be:	8b 81       	ldd	r24, Y+3	; 0x03
    f3c0:	9c 81       	ldd	r25, Y+4	; 0x04
    f3c2:	0e 94 e2 7b 	call	0xf7c4	; 0xf7c4 <__floatunsisf>
    f3c6:	dc 01       	movw	r26, r24
    f3c8:	cb 01       	movw	r24, r22
    f3ca:	20 e0       	ldi	r18, 0x00	; 0
    f3cc:	30 e0       	ldi	r19, 0x00	; 0
    f3ce:	40 e8       	ldi	r20, 0x80	; 128
    f3d0:	51 e4       	ldi	r21, 0x41	; 65
    f3d2:	bc 01       	movw	r22, r24
    f3d4:	cd 01       	movw	r24, r26
    f3d6:	0e 94 99 7c 	call	0xf932	; 0xf932 <__mulsf3>
    f3da:	dc 01       	movw	r26, r24
    f3dc:	cb 01       	movw	r24, r22
    f3de:	9c 01       	movw	r18, r24
    f3e0:	ad 01       	movw	r20, r26
    f3e2:	60 e0       	ldi	r22, 0x00	; 0
    f3e4:	7b e1       	ldi	r23, 0x1B	; 27
    f3e6:	87 eb       	ldi	r24, 0xB7	; 183
    f3e8:	9e e4       	ldi	r25, 0x4E	; 78
    f3ea:	0e 94 3a 7b 	call	0xf674	; 0xf674 <__divsf3>
    f3ee:	dc 01       	movw	r26, r24
    f3f0:	cb 01       	movw	r24, r22
    f3f2:	20 e0       	ldi	r18, 0x00	; 0
    f3f4:	30 e0       	ldi	r19, 0x00	; 0
    f3f6:	40 e0       	ldi	r20, 0x00	; 0
    f3f8:	5f e3       	ldi	r21, 0x3F	; 63
    f3fa:	bc 01       	movw	r22, r24
    f3fc:	cd 01       	movw	r24, r26
    f3fe:	0e 94 c9 7a 	call	0xf592	; 0xf592 <__addsf3>
    f402:	dc 01       	movw	r26, r24
    f404:	cb 01       	movw	r24, r22
    f406:	bc 01       	movw	r22, r24
    f408:	cd 01       	movw	r24, r26
    f40a:	0e 94 b3 7b 	call	0xf766	; 0xf766 <__fixunssfsi>
    f40e:	dc 01       	movw	r26, r24
    f410:	cb 01       	movw	r24, r22
    f412:	f8 01       	movw	r30, r16
    f414:	80 87       	std	Z+8, r24	; 0x08
    f416:	91 87       	std	Z+9, r25	; 0x09
    f418:	80 e8       	ldi	r24, 0x80	; 128
    f41a:	98 e0       	ldi	r25, 0x08	; 8
    f41c:	20 e8       	ldi	r18, 0x80	; 128
    f41e:	fc 01       	movw	r30, r24
    f420:	25 83       	std	Z+5, r18	; 0x05
    f422:	8d 81       	ldd	r24, Y+5	; 0x05
    f424:	88 23       	and	r24, r24
    f426:	31 f0       	breq	.+12     	; 0xf434 <USART4_init+0x9a>
    f428:	80 e8       	ldi	r24, 0x80	; 128
    f42a:	98 e0       	ldi	r25, 0x08	; 8
    f42c:	24 ec       	ldi	r18, 0xC4	; 196
    f42e:	fc 01       	movw	r30, r24
    f430:	26 83       	std	Z+6, r18	; 0x06
    f432:	05 c0       	rjmp	.+10     	; 0xf43e <USART4_init+0xa4>
    f434:	80 e8       	ldi	r24, 0x80	; 128
    f436:	98 e0       	ldi	r25, 0x08	; 8
    f438:	20 ec       	ldi	r18, 0xC0	; 192
    f43a:	fc 01       	movw	r30, r24
    f43c:	26 83       	std	Z+6, r18	; 0x06
    f43e:	80 e0       	ldi	r24, 0x00	; 0
    f440:	25 96       	adiw	r28, 0x05	; 5
    f442:	cd bf       	out	0x3d, r28	; 61
    f444:	de bf       	out	0x3e, r29	; 62
    f446:	df 91       	pop	r29
    f448:	cf 91       	pop	r28
    f44a:	1f 91       	pop	r17
    f44c:	0f 91       	pop	r16
    f44e:	08 95       	ret

0000f450 <USART4_enable>:
    f450:	cf 93       	push	r28
    f452:	df 93       	push	r29
    f454:	cd b7       	in	r28, 0x3d	; 61
    f456:	de b7       	in	r29, 0x3e	; 62
    f458:	80 e8       	ldi	r24, 0x80	; 128
    f45a:	98 e0       	ldi	r25, 0x08	; 8
    f45c:	20 e8       	ldi	r18, 0x80	; 128
    f45e:	38 e0       	ldi	r19, 0x08	; 8
    f460:	f9 01       	movw	r30, r18
    f462:	26 81       	ldd	r18, Z+6	; 0x06
    f464:	20 6c       	ori	r18, 0xC0	; 192
    f466:	fc 01       	movw	r30, r24
    f468:	26 83       	std	Z+6, r18	; 0x06
    f46a:	00 00       	nop
    f46c:	df 91       	pop	r29
    f46e:	cf 91       	pop	r28
    f470:	08 95       	ret

0000f472 <USART4_enable_tx>:
 * 2. Enables the USART module by setting the TX enable-bit in the USART control register
 *
 * \return Nothing
 */
void USART4_enable_tx()
{
    f472:	cf 93       	push	r28
    f474:	df 93       	push	r29
    f476:	cd b7       	in	r28, 0x3d	; 61
    f478:	de b7       	in	r29, 0x3e	; 62
	USART4.CTRLB |= USART_TXEN_bm;
    f47a:	80 e8       	ldi	r24, 0x80	; 128
    f47c:	98 e0       	ldi	r25, 0x08	; 8
    f47e:	20 e8       	ldi	r18, 0x80	; 128
    f480:	38 e0       	ldi	r19, 0x08	; 8
    f482:	f9 01       	movw	r30, r18
    f484:	26 81       	ldd	r18, Z+6	; 0x06
    f486:	20 64       	ori	r18, 0x40	; 64
    f488:	fc 01       	movw	r30, r24
    f48a:	26 83       	std	Z+6, r18	; 0x06
	USART4.CTRLA |= 1 << USART_DREIE_bp; /* Transmit Data Ready Interrupt Enable: enable */
    f48c:	80 e8       	ldi	r24, 0x80	; 128
    f48e:	98 e0       	ldi	r25, 0x08	; 8
    f490:	20 e8       	ldi	r18, 0x80	; 128
    f492:	38 e0       	ldi	r19, 0x08	; 8
    f494:	f9 01       	movw	r30, r18
    f496:	25 81       	ldd	r18, Z+5	; 0x05
    f498:	20 62       	ori	r18, 0x20	; 32
    f49a:	fc 01       	movw	r30, r24
    f49c:	25 83       	std	Z+5, r18	; 0x05
//	USART4.STATUS |= 1 << USART_TXEN_bp; /* Clear any existing flag setting */
}
    f49e:	00 00       	nop
    f4a0:	df 91       	pop	r29
    f4a2:	cf 91       	pop	r28
    f4a4:	08 95       	ret

0000f4a6 <USART4_disable>:
 * 2. If supported by the clock system, disables the clock to the USART
 *
 * \return Nothing
 */
void USART4_disable()
{
    f4a6:	cf 93       	push	r28
    f4a8:	df 93       	push	r29
    f4aa:	cd b7       	in	r28, 0x3d	; 61
    f4ac:	de b7       	in	r29, 0x3e	; 62
	USART4.CTRLB &= ~(USART_RXEN_bm | USART_TXEN_bm);
    f4ae:	80 e8       	ldi	r24, 0x80	; 128
    f4b0:	98 e0       	ldi	r25, 0x08	; 8
    f4b2:	20 e8       	ldi	r18, 0x80	; 128
    f4b4:	38 e0       	ldi	r19, 0x08	; 8
    f4b6:	f9 01       	movw	r30, r18
    f4b8:	26 81       	ldd	r18, Z+6	; 0x06
    f4ba:	2f 73       	andi	r18, 0x3F	; 63
    f4bc:	fc 01       	movw	r30, r24
    f4be:	26 83       	std	Z+6, r18	; 0x06
}
    f4c0:	00 00       	nop
    f4c2:	df 91       	pop	r29
    f4c4:	cf 91       	pop	r28
    f4c6:	08 95       	ret

0000f4c8 <USART4_get_data>:
 * \brief Get recieved data from USART4
 *
 * \return Data register from USART4 module
 */
uint8_t USART4_get_data()
{
    f4c8:	cf 93       	push	r28
    f4ca:	df 93       	push	r29
    f4cc:	cd b7       	in	r28, 0x3d	; 61
    f4ce:	de b7       	in	r29, 0x3e	; 62
	return USART4.RXDATAL;
    f4d0:	80 e8       	ldi	r24, 0x80	; 128
    f4d2:	98 e0       	ldi	r25, 0x08	; 8
    f4d4:	fc 01       	movw	r30, r24
    f4d6:	80 81       	ld	r24, Z
}
    f4d8:	df 91       	pop	r29
    f4da:	cf 91       	pop	r28
    f4dc:	08 95       	ret

0000f4de <_Z7timeDifmm>:
/**
 * Returns a-b
 * It appears difftime might not be handling subtraction of unsigned arguments correctly with current compiler. This function avoids any problems.
 */
int32_t timeDif(time_t a, time_t b)
{
    f4de:	ef 92       	push	r14
    f4e0:	ff 92       	push	r15
    f4e2:	0f 93       	push	r16
    f4e4:	1f 93       	push	r17
    f4e6:	cf 93       	push	r28
    f4e8:	df 93       	push	r29
    f4ea:	cd b7       	in	r28, 0x3d	; 61
    f4ec:	de b7       	in	r29, 0x3e	; 62
    f4ee:	2c 97       	sbiw	r28, 0x0c	; 12
    f4f0:	cd bf       	out	0x3d, r28	; 61
    f4f2:	de bf       	out	0x3e, r29	; 62
    f4f4:	6d 83       	std	Y+5, r22	; 0x05
    f4f6:	7e 83       	std	Y+6, r23	; 0x06
    f4f8:	8f 83       	std	Y+7, r24	; 0x07
    f4fa:	98 87       	std	Y+8, r25	; 0x08
    f4fc:	29 87       	std	Y+9, r18	; 0x09
    f4fe:	3a 87       	std	Y+10, r19	; 0x0a
    f500:	4b 87       	std	Y+11, r20	; 0x0b
    f502:	5c 87       	std	Y+12, r21	; 0x0c
	int32_t dif; // = difftime(now, g_event_start_epoch); // returns arg1 - arg2
	if(a > b)
    f504:	2d 81       	ldd	r18, Y+5	; 0x05
    f506:	3e 81       	ldd	r19, Y+6	; 0x06
    f508:	4f 81       	ldd	r20, Y+7	; 0x07
    f50a:	58 85       	ldd	r21, Y+8	; 0x08
    f50c:	89 85       	ldd	r24, Y+9	; 0x09
    f50e:	9a 85       	ldd	r25, Y+10	; 0x0a
    f510:	ab 85       	ldd	r26, Y+11	; 0x0b
    f512:	bc 85       	ldd	r27, Y+12	; 0x0c
    f514:	82 17       	cp	r24, r18
    f516:	93 07       	cpc	r25, r19
    f518:	a4 07       	cpc	r26, r20
    f51a:	b5 07       	cpc	r27, r21
    f51c:	a8 f4       	brcc	.+42     	; 0xf548 <_Z7timeDifmm+0x6a>
		dif = a - b;
    f51e:	2d 81       	ldd	r18, Y+5	; 0x05
    f520:	3e 81       	ldd	r19, Y+6	; 0x06
    f522:	4f 81       	ldd	r20, Y+7	; 0x07
    f524:	58 85       	ldd	r21, Y+8	; 0x08
    f526:	89 85       	ldd	r24, Y+9	; 0x09
    f528:	9a 85       	ldd	r25, Y+10	; 0x0a
    f52a:	ab 85       	ldd	r26, Y+11	; 0x0b
    f52c:	bc 85       	ldd	r27, Y+12	; 0x0c
    f52e:	79 01       	movw	r14, r18
    f530:	8a 01       	movw	r16, r20
    f532:	e8 1a       	sub	r14, r24
    f534:	f9 0a       	sbc	r15, r25
    f536:	0a 0b       	sbc	r16, r26
    f538:	1b 0b       	sbc	r17, r27
    f53a:	d8 01       	movw	r26, r16
    f53c:	c7 01       	movw	r24, r14
    f53e:	89 83       	std	Y+1, r24	; 0x01
    f540:	9a 83       	std	Y+2, r25	; 0x02
    f542:	ab 83       	std	Y+3, r26	; 0x03
    f544:	bc 83       	std	Y+4, r27	; 0x04
    f546:	14 c0       	rjmp	.+40     	; 0xf570 <_Z7timeDifmm+0x92>
	else
		dif = -(b - a);
    f548:	2d 81       	ldd	r18, Y+5	; 0x05
    f54a:	3e 81       	ldd	r19, Y+6	; 0x06
    f54c:	4f 81       	ldd	r20, Y+7	; 0x07
    f54e:	58 85       	ldd	r21, Y+8	; 0x08
    f550:	89 85       	ldd	r24, Y+9	; 0x09
    f552:	9a 85       	ldd	r25, Y+10	; 0x0a
    f554:	ab 85       	ldd	r26, Y+11	; 0x0b
    f556:	bc 85       	ldd	r27, Y+12	; 0x0c
    f558:	79 01       	movw	r14, r18
    f55a:	8a 01       	movw	r16, r20
    f55c:	e8 1a       	sub	r14, r24
    f55e:	f9 0a       	sbc	r15, r25
    f560:	0a 0b       	sbc	r16, r26
    f562:	1b 0b       	sbc	r17, r27
    f564:	d8 01       	movw	r26, r16
    f566:	c7 01       	movw	r24, r14
    f568:	89 83       	std	Y+1, r24	; 0x01
    f56a:	9a 83       	std	Y+2, r25	; 0x02
    f56c:	ab 83       	std	Y+3, r26	; 0x03
    f56e:	bc 83       	std	Y+4, r27	; 0x04

	return dif;
    f570:	89 81       	ldd	r24, Y+1	; 0x01
    f572:	9a 81       	ldd	r25, Y+2	; 0x02
    f574:	ab 81       	ldd	r26, Y+3	; 0x03
    f576:	bc 81       	ldd	r27, Y+4	; 0x04
}
    f578:	bc 01       	movw	r22, r24
    f57a:	cd 01       	movw	r24, r26
    f57c:	2c 96       	adiw	r28, 0x0c	; 12
    f57e:	cd bf       	out	0x3d, r28	; 61
    f580:	de bf       	out	0x3e, r29	; 62
    f582:	df 91       	pop	r29
    f584:	cf 91       	pop	r28
    f586:	1f 91       	pop	r17
    f588:	0f 91       	pop	r16
    f58a:	ff 90       	pop	r15
    f58c:	ef 90       	pop	r14
    f58e:	08 95       	ret

0000f590 <__subsf3>:
    f590:	50 58       	subi	r21, 0x80	; 128

0000f592 <__addsf3>:
    f592:	bb 27       	eor	r27, r27
    f594:	aa 27       	eor	r26, r26
    f596:	0e 94 e0 7a 	call	0xf5c0	; 0xf5c0 <__addsf3x>
    f59a:	0c 94 5a 7c 	jmp	0xf8b4	; 0xf8b4 <__fp_round>
    f59e:	0e 94 4c 7c 	call	0xf898	; 0xf898 <__fp_pscA>
    f5a2:	38 f0       	brcs	.+14     	; 0xf5b2 <__addsf3+0x20>
    f5a4:	0e 94 53 7c 	call	0xf8a6	; 0xf8a6 <__fp_pscB>
    f5a8:	20 f0       	brcs	.+8      	; 0xf5b2 <__addsf3+0x20>
    f5aa:	39 f4       	brne	.+14     	; 0xf5ba <__addsf3+0x28>
    f5ac:	9f 3f       	cpi	r25, 0xFF	; 255
    f5ae:	19 f4       	brne	.+6      	; 0xf5b6 <__addsf3+0x24>
    f5b0:	26 f4       	brtc	.+8      	; 0xf5ba <__addsf3+0x28>
    f5b2:	0c 94 49 7c 	jmp	0xf892	; 0xf892 <__fp_nan>
    f5b6:	0e f4       	brtc	.+2      	; 0xf5ba <__addsf3+0x28>
    f5b8:	e0 95       	com	r30
    f5ba:	e7 fb       	bst	r30, 7
    f5bc:	0c 94 43 7c 	jmp	0xf886	; 0xf886 <__fp_inf>

0000f5c0 <__addsf3x>:
    f5c0:	e9 2f       	mov	r30, r25
    f5c2:	0e 94 6b 7c 	call	0xf8d6	; 0xf8d6 <__fp_split3>
    f5c6:	58 f3       	brcs	.-42     	; 0xf59e <__addsf3+0xc>
    f5c8:	ba 17       	cp	r27, r26
    f5ca:	62 07       	cpc	r22, r18
    f5cc:	73 07       	cpc	r23, r19
    f5ce:	84 07       	cpc	r24, r20
    f5d0:	95 07       	cpc	r25, r21
    f5d2:	20 f0       	brcs	.+8      	; 0xf5dc <__addsf3x+0x1c>
    f5d4:	79 f4       	brne	.+30     	; 0xf5f4 <__addsf3x+0x34>
    f5d6:	a6 f5       	brtc	.+104    	; 0xf640 <__addsf3x+0x80>
    f5d8:	0c 94 8d 7c 	jmp	0xf91a	; 0xf91a <__fp_zero>
    f5dc:	0e f4       	brtc	.+2      	; 0xf5e0 <__addsf3x+0x20>
    f5de:	e0 95       	com	r30
    f5e0:	0b 2e       	mov	r0, r27
    f5e2:	ba 2f       	mov	r27, r26
    f5e4:	a0 2d       	mov	r26, r0
    f5e6:	0b 01       	movw	r0, r22
    f5e8:	b9 01       	movw	r22, r18
    f5ea:	90 01       	movw	r18, r0
    f5ec:	0c 01       	movw	r0, r24
    f5ee:	ca 01       	movw	r24, r20
    f5f0:	a0 01       	movw	r20, r0
    f5f2:	11 24       	eor	r1, r1
    f5f4:	ff 27       	eor	r31, r31
    f5f6:	59 1b       	sub	r21, r25
    f5f8:	99 f0       	breq	.+38     	; 0xf620 <__addsf3x+0x60>
    f5fa:	59 3f       	cpi	r21, 0xF9	; 249
    f5fc:	50 f4       	brcc	.+20     	; 0xf612 <__addsf3x+0x52>
    f5fe:	50 3e       	cpi	r21, 0xE0	; 224
    f600:	68 f1       	brcs	.+90     	; 0xf65c <__addsf3x+0x9c>
    f602:	1a 16       	cp	r1, r26
    f604:	f0 40       	sbci	r31, 0x00	; 0
    f606:	a2 2f       	mov	r26, r18
    f608:	23 2f       	mov	r18, r19
    f60a:	34 2f       	mov	r19, r20
    f60c:	44 27       	eor	r20, r20
    f60e:	58 5f       	subi	r21, 0xF8	; 248
    f610:	f3 cf       	rjmp	.-26     	; 0xf5f8 <__addsf3x+0x38>
    f612:	46 95       	lsr	r20
    f614:	37 95       	ror	r19
    f616:	27 95       	ror	r18
    f618:	a7 95       	ror	r26
    f61a:	f0 40       	sbci	r31, 0x00	; 0
    f61c:	53 95       	inc	r21
    f61e:	c9 f7       	brne	.-14     	; 0xf612 <__addsf3x+0x52>
    f620:	7e f4       	brtc	.+30     	; 0xf640 <__addsf3x+0x80>
    f622:	1f 16       	cp	r1, r31
    f624:	ba 0b       	sbc	r27, r26
    f626:	62 0b       	sbc	r22, r18
    f628:	73 0b       	sbc	r23, r19
    f62a:	84 0b       	sbc	r24, r20
    f62c:	ba f0       	brmi	.+46     	; 0xf65c <__addsf3x+0x9c>
    f62e:	91 50       	subi	r25, 0x01	; 1
    f630:	a1 f0       	breq	.+40     	; 0xf65a <__addsf3x+0x9a>
    f632:	ff 0f       	add	r31, r31
    f634:	bb 1f       	adc	r27, r27
    f636:	66 1f       	adc	r22, r22
    f638:	77 1f       	adc	r23, r23
    f63a:	88 1f       	adc	r24, r24
    f63c:	c2 f7       	brpl	.-16     	; 0xf62e <__addsf3x+0x6e>
    f63e:	0e c0       	rjmp	.+28     	; 0xf65c <__addsf3x+0x9c>
    f640:	ba 0f       	add	r27, r26
    f642:	62 1f       	adc	r22, r18
    f644:	73 1f       	adc	r23, r19
    f646:	84 1f       	adc	r24, r20
    f648:	48 f4       	brcc	.+18     	; 0xf65c <__addsf3x+0x9c>
    f64a:	87 95       	ror	r24
    f64c:	77 95       	ror	r23
    f64e:	67 95       	ror	r22
    f650:	b7 95       	ror	r27
    f652:	f7 95       	ror	r31
    f654:	9e 3f       	cpi	r25, 0xFE	; 254
    f656:	08 f0       	brcs	.+2      	; 0xf65a <__addsf3x+0x9a>
    f658:	b0 cf       	rjmp	.-160    	; 0xf5ba <__addsf3+0x28>
    f65a:	93 95       	inc	r25
    f65c:	88 0f       	add	r24, r24
    f65e:	08 f0       	brcs	.+2      	; 0xf662 <__addsf3x+0xa2>
    f660:	99 27       	eor	r25, r25
    f662:	ee 0f       	add	r30, r30
    f664:	97 95       	ror	r25
    f666:	87 95       	ror	r24
    f668:	08 95       	ret

0000f66a <__cmpsf2>:
    f66a:	0e 94 1f 7c 	call	0xf83e	; 0xf83e <__fp_cmp>
    f66e:	08 f4       	brcc	.+2      	; 0xf672 <__cmpsf2+0x8>
    f670:	81 e0       	ldi	r24, 0x01	; 1
    f672:	08 95       	ret

0000f674 <__divsf3>:
    f674:	0e 94 4e 7b 	call	0xf69c	; 0xf69c <__divsf3x>
    f678:	0c 94 5a 7c 	jmp	0xf8b4	; 0xf8b4 <__fp_round>
    f67c:	0e 94 53 7c 	call	0xf8a6	; 0xf8a6 <__fp_pscB>
    f680:	58 f0       	brcs	.+22     	; 0xf698 <__divsf3+0x24>
    f682:	0e 94 4c 7c 	call	0xf898	; 0xf898 <__fp_pscA>
    f686:	40 f0       	brcs	.+16     	; 0xf698 <__divsf3+0x24>
    f688:	29 f4       	brne	.+10     	; 0xf694 <__divsf3+0x20>
    f68a:	5f 3f       	cpi	r21, 0xFF	; 255
    f68c:	29 f0       	breq	.+10     	; 0xf698 <__divsf3+0x24>
    f68e:	0c 94 43 7c 	jmp	0xf886	; 0xf886 <__fp_inf>
    f692:	51 11       	cpse	r21, r1
    f694:	0c 94 8e 7c 	jmp	0xf91c	; 0xf91c <__fp_szero>
    f698:	0c 94 49 7c 	jmp	0xf892	; 0xf892 <__fp_nan>

0000f69c <__divsf3x>:
    f69c:	0e 94 6b 7c 	call	0xf8d6	; 0xf8d6 <__fp_split3>
    f6a0:	68 f3       	brcs	.-38     	; 0xf67c <__divsf3+0x8>

0000f6a2 <__divsf3_pse>:
    f6a2:	99 23       	and	r25, r25
    f6a4:	b1 f3       	breq	.-20     	; 0xf692 <__divsf3+0x1e>
    f6a6:	55 23       	and	r21, r21
    f6a8:	91 f3       	breq	.-28     	; 0xf68e <__divsf3+0x1a>
    f6aa:	95 1b       	sub	r25, r21
    f6ac:	55 0b       	sbc	r21, r21
    f6ae:	bb 27       	eor	r27, r27
    f6b0:	aa 27       	eor	r26, r26
    f6b2:	62 17       	cp	r22, r18
    f6b4:	73 07       	cpc	r23, r19
    f6b6:	84 07       	cpc	r24, r20
    f6b8:	38 f0       	brcs	.+14     	; 0xf6c8 <__divsf3_pse+0x26>
    f6ba:	9f 5f       	subi	r25, 0xFF	; 255
    f6bc:	5f 4f       	sbci	r21, 0xFF	; 255
    f6be:	22 0f       	add	r18, r18
    f6c0:	33 1f       	adc	r19, r19
    f6c2:	44 1f       	adc	r20, r20
    f6c4:	aa 1f       	adc	r26, r26
    f6c6:	a9 f3       	breq	.-22     	; 0xf6b2 <__divsf3_pse+0x10>
    f6c8:	35 d0       	rcall	.+106    	; 0xf734 <__divsf3_pse+0x92>
    f6ca:	0e 2e       	mov	r0, r30
    f6cc:	3a f0       	brmi	.+14     	; 0xf6dc <__divsf3_pse+0x3a>
    f6ce:	e0 e8       	ldi	r30, 0x80	; 128
    f6d0:	32 d0       	rcall	.+100    	; 0xf736 <__divsf3_pse+0x94>
    f6d2:	91 50       	subi	r25, 0x01	; 1
    f6d4:	50 40       	sbci	r21, 0x00	; 0
    f6d6:	e6 95       	lsr	r30
    f6d8:	00 1c       	adc	r0, r0
    f6da:	ca f7       	brpl	.-14     	; 0xf6ce <__divsf3_pse+0x2c>
    f6dc:	2b d0       	rcall	.+86     	; 0xf734 <__divsf3_pse+0x92>
    f6de:	fe 2f       	mov	r31, r30
    f6e0:	29 d0       	rcall	.+82     	; 0xf734 <__divsf3_pse+0x92>
    f6e2:	66 0f       	add	r22, r22
    f6e4:	77 1f       	adc	r23, r23
    f6e6:	88 1f       	adc	r24, r24
    f6e8:	bb 1f       	adc	r27, r27
    f6ea:	26 17       	cp	r18, r22
    f6ec:	37 07       	cpc	r19, r23
    f6ee:	48 07       	cpc	r20, r24
    f6f0:	ab 07       	cpc	r26, r27
    f6f2:	b0 e8       	ldi	r27, 0x80	; 128
    f6f4:	09 f0       	breq	.+2      	; 0xf6f8 <__divsf3_pse+0x56>
    f6f6:	bb 0b       	sbc	r27, r27
    f6f8:	80 2d       	mov	r24, r0
    f6fa:	bf 01       	movw	r22, r30
    f6fc:	ff 27       	eor	r31, r31
    f6fe:	93 58       	subi	r25, 0x83	; 131
    f700:	5f 4f       	sbci	r21, 0xFF	; 255
    f702:	3a f0       	brmi	.+14     	; 0xf712 <__divsf3_pse+0x70>
    f704:	9e 3f       	cpi	r25, 0xFE	; 254
    f706:	51 05       	cpc	r21, r1
    f708:	78 f0       	brcs	.+30     	; 0xf728 <__divsf3_pse+0x86>
    f70a:	0c 94 43 7c 	jmp	0xf886	; 0xf886 <__fp_inf>
    f70e:	0c 94 8e 7c 	jmp	0xf91c	; 0xf91c <__fp_szero>
    f712:	5f 3f       	cpi	r21, 0xFF	; 255
    f714:	e4 f3       	brlt	.-8      	; 0xf70e <__divsf3_pse+0x6c>
    f716:	98 3e       	cpi	r25, 0xE8	; 232
    f718:	d4 f3       	brlt	.-12     	; 0xf70e <__divsf3_pse+0x6c>
    f71a:	86 95       	lsr	r24
    f71c:	77 95       	ror	r23
    f71e:	67 95       	ror	r22
    f720:	b7 95       	ror	r27
    f722:	f7 95       	ror	r31
    f724:	9f 5f       	subi	r25, 0xFF	; 255
    f726:	c9 f7       	brne	.-14     	; 0xf71a <__divsf3_pse+0x78>
    f728:	88 0f       	add	r24, r24
    f72a:	91 1d       	adc	r25, r1
    f72c:	96 95       	lsr	r25
    f72e:	87 95       	ror	r24
    f730:	97 f9       	bld	r25, 7
    f732:	08 95       	ret
    f734:	e1 e0       	ldi	r30, 0x01	; 1
    f736:	66 0f       	add	r22, r22
    f738:	77 1f       	adc	r23, r23
    f73a:	88 1f       	adc	r24, r24
    f73c:	bb 1f       	adc	r27, r27
    f73e:	62 17       	cp	r22, r18
    f740:	73 07       	cpc	r23, r19
    f742:	84 07       	cpc	r24, r20
    f744:	ba 07       	cpc	r27, r26
    f746:	20 f0       	brcs	.+8      	; 0xf750 <__divsf3_pse+0xae>
    f748:	62 1b       	sub	r22, r18
    f74a:	73 0b       	sbc	r23, r19
    f74c:	84 0b       	sbc	r24, r20
    f74e:	ba 0b       	sbc	r27, r26
    f750:	ee 1f       	adc	r30, r30
    f752:	88 f7       	brcc	.-30     	; 0xf736 <__divsf3_pse+0x94>
    f754:	e0 95       	com	r30
    f756:	08 95       	ret

0000f758 <__fixsfsi>:
    f758:	0e 94 b3 7b 	call	0xf766	; 0xf766 <__fixunssfsi>
    f75c:	68 94       	set
    f75e:	b1 11       	cpse	r27, r1
    f760:	0c 94 8e 7c 	jmp	0xf91c	; 0xf91c <__fp_szero>
    f764:	08 95       	ret

0000f766 <__fixunssfsi>:
    f766:	0e 94 73 7c 	call	0xf8e6	; 0xf8e6 <__fp_splitA>
    f76a:	88 f0       	brcs	.+34     	; 0xf78e <__fixunssfsi+0x28>
    f76c:	9f 57       	subi	r25, 0x7F	; 127
    f76e:	98 f0       	brcs	.+38     	; 0xf796 <__fixunssfsi+0x30>
    f770:	b9 2f       	mov	r27, r25
    f772:	99 27       	eor	r25, r25
    f774:	b7 51       	subi	r27, 0x17	; 23
    f776:	b0 f0       	brcs	.+44     	; 0xf7a4 <__fixunssfsi+0x3e>
    f778:	e1 f0       	breq	.+56     	; 0xf7b2 <__fixunssfsi+0x4c>
    f77a:	66 0f       	add	r22, r22
    f77c:	77 1f       	adc	r23, r23
    f77e:	88 1f       	adc	r24, r24
    f780:	99 1f       	adc	r25, r25
    f782:	1a f0       	brmi	.+6      	; 0xf78a <__fixunssfsi+0x24>
    f784:	ba 95       	dec	r27
    f786:	c9 f7       	brne	.-14     	; 0xf77a <__fixunssfsi+0x14>
    f788:	14 c0       	rjmp	.+40     	; 0xf7b2 <__fixunssfsi+0x4c>
    f78a:	b1 30       	cpi	r27, 0x01	; 1
    f78c:	91 f0       	breq	.+36     	; 0xf7b2 <__fixunssfsi+0x4c>
    f78e:	0e 94 8d 7c 	call	0xf91a	; 0xf91a <__fp_zero>
    f792:	b1 e0       	ldi	r27, 0x01	; 1
    f794:	08 95       	ret
    f796:	0c 94 8d 7c 	jmp	0xf91a	; 0xf91a <__fp_zero>
    f79a:	67 2f       	mov	r22, r23
    f79c:	78 2f       	mov	r23, r24
    f79e:	88 27       	eor	r24, r24
    f7a0:	b8 5f       	subi	r27, 0xF8	; 248
    f7a2:	39 f0       	breq	.+14     	; 0xf7b2 <__fixunssfsi+0x4c>
    f7a4:	b9 3f       	cpi	r27, 0xF9	; 249
    f7a6:	cc f3       	brlt	.-14     	; 0xf79a <__fixunssfsi+0x34>
    f7a8:	86 95       	lsr	r24
    f7aa:	77 95       	ror	r23
    f7ac:	67 95       	ror	r22
    f7ae:	b3 95       	inc	r27
    f7b0:	d9 f7       	brne	.-10     	; 0xf7a8 <__fixunssfsi+0x42>
    f7b2:	3e f4       	brtc	.+14     	; 0xf7c2 <__fixunssfsi+0x5c>
    f7b4:	90 95       	com	r25
    f7b6:	80 95       	com	r24
    f7b8:	70 95       	com	r23
    f7ba:	61 95       	neg	r22
    f7bc:	7f 4f       	sbci	r23, 0xFF	; 255
    f7be:	8f 4f       	sbci	r24, 0xFF	; 255
    f7c0:	9f 4f       	sbci	r25, 0xFF	; 255
    f7c2:	08 95       	ret

0000f7c4 <__floatunsisf>:
    f7c4:	e8 94       	clt
    f7c6:	09 c0       	rjmp	.+18     	; 0xf7da <__floatsisf+0x12>

0000f7c8 <__floatsisf>:
    f7c8:	97 fb       	bst	r25, 7
    f7ca:	3e f4       	brtc	.+14     	; 0xf7da <__floatsisf+0x12>
    f7cc:	90 95       	com	r25
    f7ce:	80 95       	com	r24
    f7d0:	70 95       	com	r23
    f7d2:	61 95       	neg	r22
    f7d4:	7f 4f       	sbci	r23, 0xFF	; 255
    f7d6:	8f 4f       	sbci	r24, 0xFF	; 255
    f7d8:	9f 4f       	sbci	r25, 0xFF	; 255
    f7da:	99 23       	and	r25, r25
    f7dc:	a9 f0       	breq	.+42     	; 0xf808 <__floatsisf+0x40>
    f7de:	f9 2f       	mov	r31, r25
    f7e0:	96 e9       	ldi	r25, 0x96	; 150
    f7e2:	bb 27       	eor	r27, r27
    f7e4:	93 95       	inc	r25
    f7e6:	f6 95       	lsr	r31
    f7e8:	87 95       	ror	r24
    f7ea:	77 95       	ror	r23
    f7ec:	67 95       	ror	r22
    f7ee:	b7 95       	ror	r27
    f7f0:	f1 11       	cpse	r31, r1
    f7f2:	f8 cf       	rjmp	.-16     	; 0xf7e4 <__floatsisf+0x1c>
    f7f4:	fa f4       	brpl	.+62     	; 0xf834 <__floatsisf+0x6c>
    f7f6:	bb 0f       	add	r27, r27
    f7f8:	11 f4       	brne	.+4      	; 0xf7fe <__floatsisf+0x36>
    f7fa:	60 ff       	sbrs	r22, 0
    f7fc:	1b c0       	rjmp	.+54     	; 0xf834 <__floatsisf+0x6c>
    f7fe:	6f 5f       	subi	r22, 0xFF	; 255
    f800:	7f 4f       	sbci	r23, 0xFF	; 255
    f802:	8f 4f       	sbci	r24, 0xFF	; 255
    f804:	9f 4f       	sbci	r25, 0xFF	; 255
    f806:	16 c0       	rjmp	.+44     	; 0xf834 <__floatsisf+0x6c>
    f808:	88 23       	and	r24, r24
    f80a:	11 f0       	breq	.+4      	; 0xf810 <__floatsisf+0x48>
    f80c:	96 e9       	ldi	r25, 0x96	; 150
    f80e:	11 c0       	rjmp	.+34     	; 0xf832 <__floatsisf+0x6a>
    f810:	77 23       	and	r23, r23
    f812:	21 f0       	breq	.+8      	; 0xf81c <__floatsisf+0x54>
    f814:	9e e8       	ldi	r25, 0x8E	; 142
    f816:	87 2f       	mov	r24, r23
    f818:	76 2f       	mov	r23, r22
    f81a:	05 c0       	rjmp	.+10     	; 0xf826 <__floatsisf+0x5e>
    f81c:	66 23       	and	r22, r22
    f81e:	71 f0       	breq	.+28     	; 0xf83c <__floatsisf+0x74>
    f820:	96 e8       	ldi	r25, 0x86	; 134
    f822:	86 2f       	mov	r24, r22
    f824:	70 e0       	ldi	r23, 0x00	; 0
    f826:	60 e0       	ldi	r22, 0x00	; 0
    f828:	2a f0       	brmi	.+10     	; 0xf834 <__floatsisf+0x6c>
    f82a:	9a 95       	dec	r25
    f82c:	66 0f       	add	r22, r22
    f82e:	77 1f       	adc	r23, r23
    f830:	88 1f       	adc	r24, r24
    f832:	da f7       	brpl	.-10     	; 0xf82a <__floatsisf+0x62>
    f834:	88 0f       	add	r24, r24
    f836:	96 95       	lsr	r25
    f838:	87 95       	ror	r24
    f83a:	97 f9       	bld	r25, 7
    f83c:	08 95       	ret

0000f83e <__fp_cmp>:
    f83e:	99 0f       	add	r25, r25
    f840:	00 08       	sbc	r0, r0
    f842:	55 0f       	add	r21, r21
    f844:	aa 0b       	sbc	r26, r26
    f846:	e0 e8       	ldi	r30, 0x80	; 128
    f848:	fe ef       	ldi	r31, 0xFE	; 254
    f84a:	16 16       	cp	r1, r22
    f84c:	17 06       	cpc	r1, r23
    f84e:	e8 07       	cpc	r30, r24
    f850:	f9 07       	cpc	r31, r25
    f852:	c0 f0       	brcs	.+48     	; 0xf884 <__fp_cmp+0x46>
    f854:	12 16       	cp	r1, r18
    f856:	13 06       	cpc	r1, r19
    f858:	e4 07       	cpc	r30, r20
    f85a:	f5 07       	cpc	r31, r21
    f85c:	98 f0       	brcs	.+38     	; 0xf884 <__fp_cmp+0x46>
    f85e:	62 1b       	sub	r22, r18
    f860:	73 0b       	sbc	r23, r19
    f862:	84 0b       	sbc	r24, r20
    f864:	95 0b       	sbc	r25, r21
    f866:	39 f4       	brne	.+14     	; 0xf876 <__fp_cmp+0x38>
    f868:	0a 26       	eor	r0, r26
    f86a:	61 f0       	breq	.+24     	; 0xf884 <__fp_cmp+0x46>
    f86c:	23 2b       	or	r18, r19
    f86e:	24 2b       	or	r18, r20
    f870:	25 2b       	or	r18, r21
    f872:	21 f4       	brne	.+8      	; 0xf87c <__fp_cmp+0x3e>
    f874:	08 95       	ret
    f876:	0a 26       	eor	r0, r26
    f878:	09 f4       	brne	.+2      	; 0xf87c <__fp_cmp+0x3e>
    f87a:	a1 40       	sbci	r26, 0x01	; 1
    f87c:	a6 95       	lsr	r26
    f87e:	8f ef       	ldi	r24, 0xFF	; 255
    f880:	81 1d       	adc	r24, r1
    f882:	81 1d       	adc	r24, r1
    f884:	08 95       	ret

0000f886 <__fp_inf>:
    f886:	97 f9       	bld	r25, 7
    f888:	9f 67       	ori	r25, 0x7F	; 127
    f88a:	80 e8       	ldi	r24, 0x80	; 128
    f88c:	70 e0       	ldi	r23, 0x00	; 0
    f88e:	60 e0       	ldi	r22, 0x00	; 0
    f890:	08 95       	ret

0000f892 <__fp_nan>:
    f892:	9f ef       	ldi	r25, 0xFF	; 255
    f894:	80 ec       	ldi	r24, 0xC0	; 192
    f896:	08 95       	ret

0000f898 <__fp_pscA>:
    f898:	00 24       	eor	r0, r0
    f89a:	0a 94       	dec	r0
    f89c:	16 16       	cp	r1, r22
    f89e:	17 06       	cpc	r1, r23
    f8a0:	18 06       	cpc	r1, r24
    f8a2:	09 06       	cpc	r0, r25
    f8a4:	08 95       	ret

0000f8a6 <__fp_pscB>:
    f8a6:	00 24       	eor	r0, r0
    f8a8:	0a 94       	dec	r0
    f8aa:	12 16       	cp	r1, r18
    f8ac:	13 06       	cpc	r1, r19
    f8ae:	14 06       	cpc	r1, r20
    f8b0:	05 06       	cpc	r0, r21
    f8b2:	08 95       	ret

0000f8b4 <__fp_round>:
    f8b4:	09 2e       	mov	r0, r25
    f8b6:	03 94       	inc	r0
    f8b8:	00 0c       	add	r0, r0
    f8ba:	11 f4       	brne	.+4      	; 0xf8c0 <__fp_round+0xc>
    f8bc:	88 23       	and	r24, r24
    f8be:	52 f0       	brmi	.+20     	; 0xf8d4 <__fp_round+0x20>
    f8c0:	bb 0f       	add	r27, r27
    f8c2:	40 f4       	brcc	.+16     	; 0xf8d4 <__fp_round+0x20>
    f8c4:	bf 2b       	or	r27, r31
    f8c6:	11 f4       	brne	.+4      	; 0xf8cc <__fp_round+0x18>
    f8c8:	60 ff       	sbrs	r22, 0
    f8ca:	04 c0       	rjmp	.+8      	; 0xf8d4 <__fp_round+0x20>
    f8cc:	6f 5f       	subi	r22, 0xFF	; 255
    f8ce:	7f 4f       	sbci	r23, 0xFF	; 255
    f8d0:	8f 4f       	sbci	r24, 0xFF	; 255
    f8d2:	9f 4f       	sbci	r25, 0xFF	; 255
    f8d4:	08 95       	ret

0000f8d6 <__fp_split3>:
    f8d6:	57 fd       	sbrc	r21, 7
    f8d8:	90 58       	subi	r25, 0x80	; 128
    f8da:	44 0f       	add	r20, r20
    f8dc:	55 1f       	adc	r21, r21
    f8de:	59 f0       	breq	.+22     	; 0xf8f6 <__fp_splitA+0x10>
    f8e0:	5f 3f       	cpi	r21, 0xFF	; 255
    f8e2:	71 f0       	breq	.+28     	; 0xf900 <__fp_splitA+0x1a>
    f8e4:	47 95       	ror	r20

0000f8e6 <__fp_splitA>:
    f8e6:	88 0f       	add	r24, r24
    f8e8:	97 fb       	bst	r25, 7
    f8ea:	99 1f       	adc	r25, r25
    f8ec:	61 f0       	breq	.+24     	; 0xf906 <__fp_splitA+0x20>
    f8ee:	9f 3f       	cpi	r25, 0xFF	; 255
    f8f0:	79 f0       	breq	.+30     	; 0xf910 <__fp_splitA+0x2a>
    f8f2:	87 95       	ror	r24
    f8f4:	08 95       	ret
    f8f6:	12 16       	cp	r1, r18
    f8f8:	13 06       	cpc	r1, r19
    f8fa:	14 06       	cpc	r1, r20
    f8fc:	55 1f       	adc	r21, r21
    f8fe:	f2 cf       	rjmp	.-28     	; 0xf8e4 <__fp_split3+0xe>
    f900:	46 95       	lsr	r20
    f902:	f1 df       	rcall	.-30     	; 0xf8e6 <__fp_splitA>
    f904:	08 c0       	rjmp	.+16     	; 0xf916 <__fp_splitA+0x30>
    f906:	16 16       	cp	r1, r22
    f908:	17 06       	cpc	r1, r23
    f90a:	18 06       	cpc	r1, r24
    f90c:	99 1f       	adc	r25, r25
    f90e:	f1 cf       	rjmp	.-30     	; 0xf8f2 <__fp_splitA+0xc>
    f910:	86 95       	lsr	r24
    f912:	71 05       	cpc	r23, r1
    f914:	61 05       	cpc	r22, r1
    f916:	08 94       	sec
    f918:	08 95       	ret

0000f91a <__fp_zero>:
    f91a:	e8 94       	clt

0000f91c <__fp_szero>:
    f91c:	bb 27       	eor	r27, r27
    f91e:	66 27       	eor	r22, r22
    f920:	77 27       	eor	r23, r23
    f922:	cb 01       	movw	r24, r22
    f924:	97 f9       	bld	r25, 7
    f926:	08 95       	ret

0000f928 <__gesf2>:
    f928:	0e 94 1f 7c 	call	0xf83e	; 0xf83e <__fp_cmp>
    f92c:	08 f4       	brcc	.+2      	; 0xf930 <__gesf2+0x8>
    f92e:	8f ef       	ldi	r24, 0xFF	; 255
    f930:	08 95       	ret

0000f932 <__mulsf3>:
    f932:	0e 94 ac 7c 	call	0xf958	; 0xf958 <__mulsf3x>
    f936:	0c 94 5a 7c 	jmp	0xf8b4	; 0xf8b4 <__fp_round>
    f93a:	0e 94 4c 7c 	call	0xf898	; 0xf898 <__fp_pscA>
    f93e:	38 f0       	brcs	.+14     	; 0xf94e <__mulsf3+0x1c>
    f940:	0e 94 53 7c 	call	0xf8a6	; 0xf8a6 <__fp_pscB>
    f944:	20 f0       	brcs	.+8      	; 0xf94e <__mulsf3+0x1c>
    f946:	95 23       	and	r25, r21
    f948:	11 f0       	breq	.+4      	; 0xf94e <__mulsf3+0x1c>
    f94a:	0c 94 43 7c 	jmp	0xf886	; 0xf886 <__fp_inf>
    f94e:	0c 94 49 7c 	jmp	0xf892	; 0xf892 <__fp_nan>
    f952:	11 24       	eor	r1, r1
    f954:	0c 94 8e 7c 	jmp	0xf91c	; 0xf91c <__fp_szero>

0000f958 <__mulsf3x>:
    f958:	0e 94 6b 7c 	call	0xf8d6	; 0xf8d6 <__fp_split3>
    f95c:	70 f3       	brcs	.-36     	; 0xf93a <__mulsf3+0x8>

0000f95e <__mulsf3_pse>:
    f95e:	95 9f       	mul	r25, r21
    f960:	c1 f3       	breq	.-16     	; 0xf952 <__mulsf3+0x20>
    f962:	95 0f       	add	r25, r21
    f964:	50 e0       	ldi	r21, 0x00	; 0
    f966:	55 1f       	adc	r21, r21
    f968:	62 9f       	mul	r22, r18
    f96a:	f0 01       	movw	r30, r0
    f96c:	72 9f       	mul	r23, r18
    f96e:	bb 27       	eor	r27, r27
    f970:	f0 0d       	add	r31, r0
    f972:	b1 1d       	adc	r27, r1
    f974:	63 9f       	mul	r22, r19
    f976:	aa 27       	eor	r26, r26
    f978:	f0 0d       	add	r31, r0
    f97a:	b1 1d       	adc	r27, r1
    f97c:	aa 1f       	adc	r26, r26
    f97e:	64 9f       	mul	r22, r20
    f980:	66 27       	eor	r22, r22
    f982:	b0 0d       	add	r27, r0
    f984:	a1 1d       	adc	r26, r1
    f986:	66 1f       	adc	r22, r22
    f988:	82 9f       	mul	r24, r18
    f98a:	22 27       	eor	r18, r18
    f98c:	b0 0d       	add	r27, r0
    f98e:	a1 1d       	adc	r26, r1
    f990:	62 1f       	adc	r22, r18
    f992:	73 9f       	mul	r23, r19
    f994:	b0 0d       	add	r27, r0
    f996:	a1 1d       	adc	r26, r1
    f998:	62 1f       	adc	r22, r18
    f99a:	83 9f       	mul	r24, r19
    f99c:	a0 0d       	add	r26, r0
    f99e:	61 1d       	adc	r22, r1
    f9a0:	22 1f       	adc	r18, r18
    f9a2:	74 9f       	mul	r23, r20
    f9a4:	33 27       	eor	r19, r19
    f9a6:	a0 0d       	add	r26, r0
    f9a8:	61 1d       	adc	r22, r1
    f9aa:	23 1f       	adc	r18, r19
    f9ac:	84 9f       	mul	r24, r20
    f9ae:	60 0d       	add	r22, r0
    f9b0:	21 1d       	adc	r18, r1
    f9b2:	82 2f       	mov	r24, r18
    f9b4:	76 2f       	mov	r23, r22
    f9b6:	6a 2f       	mov	r22, r26
    f9b8:	11 24       	eor	r1, r1
    f9ba:	9f 57       	subi	r25, 0x7F	; 127
    f9bc:	50 40       	sbci	r21, 0x00	; 0
    f9be:	9a f0       	brmi	.+38     	; 0xf9e6 <__mulsf3_pse+0x88>
    f9c0:	f1 f0       	breq	.+60     	; 0xf9fe <__mulsf3_pse+0xa0>
    f9c2:	88 23       	and	r24, r24
    f9c4:	4a f0       	brmi	.+18     	; 0xf9d8 <__mulsf3_pse+0x7a>
    f9c6:	ee 0f       	add	r30, r30
    f9c8:	ff 1f       	adc	r31, r31
    f9ca:	bb 1f       	adc	r27, r27
    f9cc:	66 1f       	adc	r22, r22
    f9ce:	77 1f       	adc	r23, r23
    f9d0:	88 1f       	adc	r24, r24
    f9d2:	91 50       	subi	r25, 0x01	; 1
    f9d4:	50 40       	sbci	r21, 0x00	; 0
    f9d6:	a9 f7       	brne	.-22     	; 0xf9c2 <__mulsf3_pse+0x64>
    f9d8:	9e 3f       	cpi	r25, 0xFE	; 254
    f9da:	51 05       	cpc	r21, r1
    f9dc:	80 f0       	brcs	.+32     	; 0xf9fe <__mulsf3_pse+0xa0>
    f9de:	0c 94 43 7c 	jmp	0xf886	; 0xf886 <__fp_inf>
    f9e2:	0c 94 8e 7c 	jmp	0xf91c	; 0xf91c <__fp_szero>
    f9e6:	5f 3f       	cpi	r21, 0xFF	; 255
    f9e8:	e4 f3       	brlt	.-8      	; 0xf9e2 <__mulsf3_pse+0x84>
    f9ea:	98 3e       	cpi	r25, 0xE8	; 232
    f9ec:	d4 f3       	brlt	.-12     	; 0xf9e2 <__mulsf3_pse+0x84>
    f9ee:	86 95       	lsr	r24
    f9f0:	77 95       	ror	r23
    f9f2:	67 95       	ror	r22
    f9f4:	b7 95       	ror	r27
    f9f6:	f7 95       	ror	r31
    f9f8:	e7 95       	ror	r30
    f9fa:	9f 5f       	subi	r25, 0xFF	; 255
    f9fc:	c1 f7       	brne	.-16     	; 0xf9ee <__mulsf3_pse+0x90>
    f9fe:	fe 2b       	or	r31, r30
    fa00:	88 0f       	add	r24, r24
    fa02:	91 1d       	adc	r25, r1
    fa04:	96 95       	lsr	r25
    fa06:	87 95       	ror	r24
    fa08:	97 f9       	bld	r25, 7
    fa0a:	08 95       	ret

0000fa0c <__mulsi3>:
    fa0c:	db 01       	movw	r26, r22
    fa0e:	8f 93       	push	r24
    fa10:	9f 93       	push	r25
    fa12:	0e 94 88 7d 	call	0xfb10	; 0xfb10 <__muluhisi3>
    fa16:	bf 91       	pop	r27
    fa18:	af 91       	pop	r26
    fa1a:	a2 9f       	mul	r26, r18
    fa1c:	80 0d       	add	r24, r0
    fa1e:	91 1d       	adc	r25, r1
    fa20:	a3 9f       	mul	r26, r19
    fa22:	90 0d       	add	r25, r0
    fa24:	b2 9f       	mul	r27, r18
    fa26:	90 0d       	add	r25, r0
    fa28:	11 24       	eor	r1, r1
    fa2a:	08 95       	ret

0000fa2c <__udivmodhi4>:
    fa2c:	aa 1b       	sub	r26, r26
    fa2e:	bb 1b       	sub	r27, r27
    fa30:	51 e1       	ldi	r21, 0x11	; 17
    fa32:	07 c0       	rjmp	.+14     	; 0xfa42 <__udivmodhi4_ep>

0000fa34 <__udivmodhi4_loop>:
    fa34:	aa 1f       	adc	r26, r26
    fa36:	bb 1f       	adc	r27, r27
    fa38:	a6 17       	cp	r26, r22
    fa3a:	b7 07       	cpc	r27, r23
    fa3c:	10 f0       	brcs	.+4      	; 0xfa42 <__udivmodhi4_ep>
    fa3e:	a6 1b       	sub	r26, r22
    fa40:	b7 0b       	sbc	r27, r23

0000fa42 <__udivmodhi4_ep>:
    fa42:	88 1f       	adc	r24, r24
    fa44:	99 1f       	adc	r25, r25
    fa46:	5a 95       	dec	r21
    fa48:	a9 f7       	brne	.-22     	; 0xfa34 <__udivmodhi4_loop>
    fa4a:	80 95       	com	r24
    fa4c:	90 95       	com	r25
    fa4e:	bc 01       	movw	r22, r24
    fa50:	cd 01       	movw	r24, r26
    fa52:	08 95       	ret

0000fa54 <__divmodhi4>:
    fa54:	97 fb       	bst	r25, 7
    fa56:	07 2e       	mov	r0, r23
    fa58:	16 f4       	brtc	.+4      	; 0xfa5e <__divmodhi4+0xa>
    fa5a:	00 94       	com	r0
    fa5c:	07 d0       	rcall	.+14     	; 0xfa6c <__divmodhi4_neg1>
    fa5e:	77 fd       	sbrc	r23, 7
    fa60:	09 d0       	rcall	.+18     	; 0xfa74 <__divmodhi4_neg2>
    fa62:	0e 94 16 7d 	call	0xfa2c	; 0xfa2c <__udivmodhi4>
    fa66:	07 fc       	sbrc	r0, 7
    fa68:	05 d0       	rcall	.+10     	; 0xfa74 <__divmodhi4_neg2>
    fa6a:	3e f4       	brtc	.+14     	; 0xfa7a <__divmodhi4_exit>

0000fa6c <__divmodhi4_neg1>:
    fa6c:	90 95       	com	r25
    fa6e:	81 95       	neg	r24
    fa70:	9f 4f       	sbci	r25, 0xFF	; 255
    fa72:	08 95       	ret

0000fa74 <__divmodhi4_neg2>:
    fa74:	70 95       	com	r23
    fa76:	61 95       	neg	r22
    fa78:	7f 4f       	sbci	r23, 0xFF	; 255

0000fa7a <__divmodhi4_exit>:
    fa7a:	08 95       	ret

0000fa7c <__udivmodsi4>:
    fa7c:	a1 e2       	ldi	r26, 0x21	; 33
    fa7e:	1a 2e       	mov	r1, r26
    fa80:	aa 1b       	sub	r26, r26
    fa82:	bb 1b       	sub	r27, r27
    fa84:	fd 01       	movw	r30, r26
    fa86:	0d c0       	rjmp	.+26     	; 0xfaa2 <__udivmodsi4_ep>

0000fa88 <__udivmodsi4_loop>:
    fa88:	aa 1f       	adc	r26, r26
    fa8a:	bb 1f       	adc	r27, r27
    fa8c:	ee 1f       	adc	r30, r30
    fa8e:	ff 1f       	adc	r31, r31
    fa90:	a2 17       	cp	r26, r18
    fa92:	b3 07       	cpc	r27, r19
    fa94:	e4 07       	cpc	r30, r20
    fa96:	f5 07       	cpc	r31, r21
    fa98:	20 f0       	brcs	.+8      	; 0xfaa2 <__udivmodsi4_ep>
    fa9a:	a2 1b       	sub	r26, r18
    fa9c:	b3 0b       	sbc	r27, r19
    fa9e:	e4 0b       	sbc	r30, r20
    faa0:	f5 0b       	sbc	r31, r21

0000faa2 <__udivmodsi4_ep>:
    faa2:	66 1f       	adc	r22, r22
    faa4:	77 1f       	adc	r23, r23
    faa6:	88 1f       	adc	r24, r24
    faa8:	99 1f       	adc	r25, r25
    faaa:	1a 94       	dec	r1
    faac:	69 f7       	brne	.-38     	; 0xfa88 <__udivmodsi4_loop>
    faae:	60 95       	com	r22
    fab0:	70 95       	com	r23
    fab2:	80 95       	com	r24
    fab4:	90 95       	com	r25
    fab6:	9b 01       	movw	r18, r22
    fab8:	ac 01       	movw	r20, r24
    faba:	bd 01       	movw	r22, r26
    fabc:	cf 01       	movw	r24, r30
    fabe:	08 95       	ret

0000fac0 <__divmodsi4>:
    fac0:	05 2e       	mov	r0, r21
    fac2:	97 fb       	bst	r25, 7
    fac4:	1e f4       	brtc	.+6      	; 0xfacc <__divmodsi4+0xc>
    fac6:	00 94       	com	r0
    fac8:	0e 94 77 7d 	call	0xfaee	; 0xfaee <__negsi2>
    facc:	57 fd       	sbrc	r21, 7
    face:	07 d0       	rcall	.+14     	; 0xfade <__divmodsi4_neg2>
    fad0:	0e 94 3e 7d 	call	0xfa7c	; 0xfa7c <__udivmodsi4>
    fad4:	07 fc       	sbrc	r0, 7
    fad6:	03 d0       	rcall	.+6      	; 0xfade <__divmodsi4_neg2>
    fad8:	4e f4       	brtc	.+18     	; 0xfaec <__divmodsi4_exit>
    fada:	0c 94 77 7d 	jmp	0xfaee	; 0xfaee <__negsi2>

0000fade <__divmodsi4_neg2>:
    fade:	50 95       	com	r21
    fae0:	40 95       	com	r20
    fae2:	30 95       	com	r19
    fae4:	21 95       	neg	r18
    fae6:	3f 4f       	sbci	r19, 0xFF	; 255
    fae8:	4f 4f       	sbci	r20, 0xFF	; 255
    faea:	5f 4f       	sbci	r21, 0xFF	; 255

0000faec <__divmodsi4_exit>:
    faec:	08 95       	ret

0000faee <__negsi2>:
    faee:	90 95       	com	r25
    faf0:	80 95       	com	r24
    faf2:	70 95       	com	r23
    faf4:	61 95       	neg	r22
    faf6:	7f 4f       	sbci	r23, 0xFF	; 255
    faf8:	8f 4f       	sbci	r24, 0xFF	; 255
    fafa:	9f 4f       	sbci	r25, 0xFF	; 255
    fafc:	08 95       	ret

0000fafe <__tablejump2__>:
    fafe:	ee 0f       	add	r30, r30
    fb00:	ff 1f       	adc	r31, r31
    fb02:	00 24       	eor	r0, r0
    fb04:	00 1c       	adc	r0, r0
    fb06:	0b be       	out	0x3b, r0	; 59
    fb08:	07 90       	elpm	r0, Z+
    fb0a:	f6 91       	elpm	r31, Z
    fb0c:	e0 2d       	mov	r30, r0
    fb0e:	09 94       	ijmp

0000fb10 <__muluhisi3>:
    fb10:	0e 94 93 7d 	call	0xfb26	; 0xfb26 <__umulhisi3>
    fb14:	a5 9f       	mul	r26, r21
    fb16:	90 0d       	add	r25, r0
    fb18:	b4 9f       	mul	r27, r20
    fb1a:	90 0d       	add	r25, r0
    fb1c:	a4 9f       	mul	r26, r20
    fb1e:	80 0d       	add	r24, r0
    fb20:	91 1d       	adc	r25, r1
    fb22:	11 24       	eor	r1, r1
    fb24:	08 95       	ret

0000fb26 <__umulhisi3>:
    fb26:	a2 9f       	mul	r26, r18
    fb28:	b0 01       	movw	r22, r0
    fb2a:	b3 9f       	mul	r27, r19
    fb2c:	c0 01       	movw	r24, r0
    fb2e:	a3 9f       	mul	r26, r19
    fb30:	70 0d       	add	r23, r0
    fb32:	81 1d       	adc	r24, r1
    fb34:	11 24       	eor	r1, r1
    fb36:	91 1d       	adc	r25, r1
    fb38:	b2 9f       	mul	r27, r18
    fb3a:	70 0d       	add	r23, r0
    fb3c:	81 1d       	adc	r24, r1
    fb3e:	11 24       	eor	r1, r1
    fb40:	91 1d       	adc	r25, r1
    fb42:	08 95       	ret

0000fb44 <dtostrf>:
    fb44:	ef 92       	push	r14
    fb46:	0f 93       	push	r16
    fb48:	1f 93       	push	r17
    fb4a:	cf 93       	push	r28
    fb4c:	df 93       	push	r29
    fb4e:	e8 01       	movw	r28, r16
    fb50:	47 fd       	sbrc	r20, 7
    fb52:	02 c0       	rjmp	.+4      	; 0xfb58 <dtostrf+0x14>
    fb54:	34 e0       	ldi	r19, 0x04	; 4
    fb56:	01 c0       	rjmp	.+2      	; 0xfb5a <dtostrf+0x16>
    fb58:	34 e1       	ldi	r19, 0x14	; 20
    fb5a:	04 2e       	mov	r0, r20
    fb5c:	00 0c       	add	r0, r0
    fb5e:	55 0b       	sbc	r21, r21
    fb60:	57 ff       	sbrs	r21, 7
    fb62:	03 c0       	rjmp	.+6      	; 0xfb6a <dtostrf+0x26>
    fb64:	51 95       	neg	r21
    fb66:	41 95       	neg	r20
    fb68:	51 09       	sbc	r21, r1
    fb6a:	e3 2e       	mov	r14, r19
    fb6c:	02 2f       	mov	r16, r18
    fb6e:	24 2f       	mov	r18, r20
    fb70:	ae 01       	movw	r20, r28
    fb72:	0e 94 c6 81 	call	0x1038c	; 0x1038c <dtoa_prf>
    fb76:	ce 01       	movw	r24, r28
    fb78:	df 91       	pop	r29
    fb7a:	cf 91       	pop	r28
    fb7c:	1f 91       	pop	r17
    fb7e:	0f 91       	pop	r16
    fb80:	ef 90       	pop	r14
    fb82:	08 95       	ret

0000fb84 <malloc>:
    fb84:	0f 93       	push	r16
    fb86:	1f 93       	push	r17
    fb88:	cf 93       	push	r28
    fb8a:	df 93       	push	r29
    fb8c:	82 30       	cpi	r24, 0x02	; 2
    fb8e:	91 05       	cpc	r25, r1
    fb90:	10 f4       	brcc	.+4      	; 0xfb96 <malloc+0x12>
    fb92:	82 e0       	ldi	r24, 0x02	; 2
    fb94:	90 e0       	ldi	r25, 0x00	; 0
    fb96:	e0 91 e5 49 	lds	r30, 0x49E5	; 0x8049e5 <__flp>
    fb9a:	f0 91 e6 49 	lds	r31, 0x49E6	; 0x8049e6 <__flp+0x1>
    fb9e:	20 e0       	ldi	r18, 0x00	; 0
    fba0:	30 e0       	ldi	r19, 0x00	; 0
    fba2:	a0 e0       	ldi	r26, 0x00	; 0
    fba4:	b0 e0       	ldi	r27, 0x00	; 0
    fba6:	30 97       	sbiw	r30, 0x00	; 0
    fba8:	19 f1       	breq	.+70     	; 0xfbf0 <malloc+0x6c>
    fbaa:	40 81       	ld	r20, Z
    fbac:	51 81       	ldd	r21, Z+1	; 0x01
    fbae:	02 81       	ldd	r16, Z+2	; 0x02
    fbb0:	13 81       	ldd	r17, Z+3	; 0x03
    fbb2:	48 17       	cp	r20, r24
    fbb4:	59 07       	cpc	r21, r25
    fbb6:	c8 f0       	brcs	.+50     	; 0xfbea <malloc+0x66>
    fbb8:	84 17       	cp	r24, r20
    fbba:	95 07       	cpc	r25, r21
    fbbc:	69 f4       	brne	.+26     	; 0xfbd8 <malloc+0x54>
    fbbe:	10 97       	sbiw	r26, 0x00	; 0
    fbc0:	31 f0       	breq	.+12     	; 0xfbce <malloc+0x4a>
    fbc2:	12 96       	adiw	r26, 0x02	; 2
    fbc4:	0c 93       	st	X, r16
    fbc6:	12 97       	sbiw	r26, 0x02	; 2
    fbc8:	13 96       	adiw	r26, 0x03	; 3
    fbca:	1c 93       	st	X, r17
    fbcc:	27 c0       	rjmp	.+78     	; 0xfc1c <malloc+0x98>
    fbce:	00 93 e5 49 	sts	0x49E5, r16	; 0x8049e5 <__flp>
    fbd2:	10 93 e6 49 	sts	0x49E6, r17	; 0x8049e6 <__flp+0x1>
    fbd6:	22 c0       	rjmp	.+68     	; 0xfc1c <malloc+0x98>
    fbd8:	21 15       	cp	r18, r1
    fbda:	31 05       	cpc	r19, r1
    fbdc:	19 f0       	breq	.+6      	; 0xfbe4 <malloc+0x60>
    fbde:	42 17       	cp	r20, r18
    fbe0:	53 07       	cpc	r21, r19
    fbe2:	18 f4       	brcc	.+6      	; 0xfbea <malloc+0x66>
    fbe4:	9a 01       	movw	r18, r20
    fbe6:	bd 01       	movw	r22, r26
    fbe8:	ef 01       	movw	r28, r30
    fbea:	df 01       	movw	r26, r30
    fbec:	f8 01       	movw	r30, r16
    fbee:	db cf       	rjmp	.-74     	; 0xfba6 <malloc+0x22>
    fbf0:	21 15       	cp	r18, r1
    fbf2:	31 05       	cpc	r19, r1
    fbf4:	f9 f0       	breq	.+62     	; 0xfc34 <malloc+0xb0>
    fbf6:	28 1b       	sub	r18, r24
    fbf8:	39 0b       	sbc	r19, r25
    fbfa:	24 30       	cpi	r18, 0x04	; 4
    fbfc:	31 05       	cpc	r19, r1
    fbfe:	80 f4       	brcc	.+32     	; 0xfc20 <malloc+0x9c>
    fc00:	8a 81       	ldd	r24, Y+2	; 0x02
    fc02:	9b 81       	ldd	r25, Y+3	; 0x03
    fc04:	61 15       	cp	r22, r1
    fc06:	71 05       	cpc	r23, r1
    fc08:	21 f0       	breq	.+8      	; 0xfc12 <malloc+0x8e>
    fc0a:	fb 01       	movw	r30, r22
    fc0c:	82 83       	std	Z+2, r24	; 0x02
    fc0e:	93 83       	std	Z+3, r25	; 0x03
    fc10:	04 c0       	rjmp	.+8      	; 0xfc1a <malloc+0x96>
    fc12:	80 93 e5 49 	sts	0x49E5, r24	; 0x8049e5 <__flp>
    fc16:	90 93 e6 49 	sts	0x49E6, r25	; 0x8049e6 <__flp+0x1>
    fc1a:	fe 01       	movw	r30, r28
    fc1c:	32 96       	adiw	r30, 0x02	; 2
    fc1e:	44 c0       	rjmp	.+136    	; 0xfca8 <malloc+0x124>
    fc20:	fe 01       	movw	r30, r28
    fc22:	e2 0f       	add	r30, r18
    fc24:	f3 1f       	adc	r31, r19
    fc26:	81 93       	st	Z+, r24
    fc28:	91 93       	st	Z+, r25
    fc2a:	22 50       	subi	r18, 0x02	; 2
    fc2c:	31 09       	sbc	r19, r1
    fc2e:	28 83       	st	Y, r18
    fc30:	39 83       	std	Y+1, r19	; 0x01
    fc32:	3a c0       	rjmp	.+116    	; 0xfca8 <malloc+0x124>
    fc34:	20 91 e3 49 	lds	r18, 0x49E3	; 0x8049e3 <__brkval>
    fc38:	30 91 e4 49 	lds	r19, 0x49E4	; 0x8049e4 <__brkval+0x1>
    fc3c:	23 2b       	or	r18, r19
    fc3e:	41 f4       	brne	.+16     	; 0xfc50 <malloc+0xcc>
    fc40:	20 91 02 40 	lds	r18, 0x4002	; 0x804002 <__malloc_heap_start>
    fc44:	30 91 03 40 	lds	r19, 0x4003	; 0x804003 <__malloc_heap_start+0x1>
    fc48:	20 93 e3 49 	sts	0x49E3, r18	; 0x8049e3 <__brkval>
    fc4c:	30 93 e4 49 	sts	0x49E4, r19	; 0x8049e4 <__brkval+0x1>
    fc50:	20 91 00 40 	lds	r18, 0x4000	; 0x804000 <__data_start>
    fc54:	30 91 01 40 	lds	r19, 0x4001	; 0x804001 <__data_start+0x1>
    fc58:	21 15       	cp	r18, r1
    fc5a:	31 05       	cpc	r19, r1
    fc5c:	41 f4       	brne	.+16     	; 0xfc6e <malloc+0xea>
    fc5e:	2d b7       	in	r18, 0x3d	; 61
    fc60:	3e b7       	in	r19, 0x3e	; 62
    fc62:	40 91 04 40 	lds	r20, 0x4004	; 0x804004 <__malloc_margin>
    fc66:	50 91 05 40 	lds	r21, 0x4005	; 0x804005 <__malloc_margin+0x1>
    fc6a:	24 1b       	sub	r18, r20
    fc6c:	35 0b       	sbc	r19, r21
    fc6e:	e0 91 e3 49 	lds	r30, 0x49E3	; 0x8049e3 <__brkval>
    fc72:	f0 91 e4 49 	lds	r31, 0x49E4	; 0x8049e4 <__brkval+0x1>
    fc76:	e2 17       	cp	r30, r18
    fc78:	f3 07       	cpc	r31, r19
    fc7a:	a0 f4       	brcc	.+40     	; 0xfca4 <malloc+0x120>
    fc7c:	2e 1b       	sub	r18, r30
    fc7e:	3f 0b       	sbc	r19, r31
    fc80:	28 17       	cp	r18, r24
    fc82:	39 07       	cpc	r19, r25
    fc84:	78 f0       	brcs	.+30     	; 0xfca4 <malloc+0x120>
    fc86:	ac 01       	movw	r20, r24
    fc88:	4e 5f       	subi	r20, 0xFE	; 254
    fc8a:	5f 4f       	sbci	r21, 0xFF	; 255
    fc8c:	24 17       	cp	r18, r20
    fc8e:	35 07       	cpc	r19, r21
    fc90:	48 f0       	brcs	.+18     	; 0xfca4 <malloc+0x120>
    fc92:	4e 0f       	add	r20, r30
    fc94:	5f 1f       	adc	r21, r31
    fc96:	40 93 e3 49 	sts	0x49E3, r20	; 0x8049e3 <__brkval>
    fc9a:	50 93 e4 49 	sts	0x49E4, r21	; 0x8049e4 <__brkval+0x1>
    fc9e:	81 93       	st	Z+, r24
    fca0:	91 93       	st	Z+, r25
    fca2:	02 c0       	rjmp	.+4      	; 0xfca8 <malloc+0x124>
    fca4:	e0 e0       	ldi	r30, 0x00	; 0
    fca6:	f0 e0       	ldi	r31, 0x00	; 0
    fca8:	cf 01       	movw	r24, r30
    fcaa:	df 91       	pop	r29
    fcac:	cf 91       	pop	r28
    fcae:	1f 91       	pop	r17
    fcb0:	0f 91       	pop	r16
    fcb2:	08 95       	ret

0000fcb4 <free>:
    fcb4:	cf 93       	push	r28
    fcb6:	df 93       	push	r29
    fcb8:	00 97       	sbiw	r24, 0x00	; 0
    fcba:	09 f4       	brne	.+2      	; 0xfcbe <free+0xa>
    fcbc:	81 c0       	rjmp	.+258    	; 0xfdc0 <free+0x10c>
    fcbe:	fc 01       	movw	r30, r24
    fcc0:	32 97       	sbiw	r30, 0x02	; 2
    fcc2:	12 82       	std	Z+2, r1	; 0x02
    fcc4:	13 82       	std	Z+3, r1	; 0x03
    fcc6:	a0 91 e5 49 	lds	r26, 0x49E5	; 0x8049e5 <__flp>
    fcca:	b0 91 e6 49 	lds	r27, 0x49E6	; 0x8049e6 <__flp+0x1>
    fcce:	10 97       	sbiw	r26, 0x00	; 0
    fcd0:	81 f4       	brne	.+32     	; 0xfcf2 <free+0x3e>
    fcd2:	20 81       	ld	r18, Z
    fcd4:	31 81       	ldd	r19, Z+1	; 0x01
    fcd6:	82 0f       	add	r24, r18
    fcd8:	93 1f       	adc	r25, r19
    fcda:	20 91 e3 49 	lds	r18, 0x49E3	; 0x8049e3 <__brkval>
    fcde:	30 91 e4 49 	lds	r19, 0x49E4	; 0x8049e4 <__brkval+0x1>
    fce2:	28 17       	cp	r18, r24
    fce4:	39 07       	cpc	r19, r25
    fce6:	51 f5       	brne	.+84     	; 0xfd3c <free+0x88>
    fce8:	e0 93 e3 49 	sts	0x49E3, r30	; 0x8049e3 <__brkval>
    fcec:	f0 93 e4 49 	sts	0x49E4, r31	; 0x8049e4 <__brkval+0x1>
    fcf0:	67 c0       	rjmp	.+206    	; 0xfdc0 <free+0x10c>
    fcf2:	ed 01       	movw	r28, r26
    fcf4:	20 e0       	ldi	r18, 0x00	; 0
    fcf6:	30 e0       	ldi	r19, 0x00	; 0
    fcf8:	ce 17       	cp	r28, r30
    fcfa:	df 07       	cpc	r29, r31
    fcfc:	40 f4       	brcc	.+16     	; 0xfd0e <free+0x5a>
    fcfe:	4a 81       	ldd	r20, Y+2	; 0x02
    fd00:	5b 81       	ldd	r21, Y+3	; 0x03
    fd02:	9e 01       	movw	r18, r28
    fd04:	41 15       	cp	r20, r1
    fd06:	51 05       	cpc	r21, r1
    fd08:	f1 f0       	breq	.+60     	; 0xfd46 <free+0x92>
    fd0a:	ea 01       	movw	r28, r20
    fd0c:	f5 cf       	rjmp	.-22     	; 0xfcf8 <free+0x44>
    fd0e:	c2 83       	std	Z+2, r28	; 0x02
    fd10:	d3 83       	std	Z+3, r29	; 0x03
    fd12:	40 81       	ld	r20, Z
    fd14:	51 81       	ldd	r21, Z+1	; 0x01
    fd16:	84 0f       	add	r24, r20
    fd18:	95 1f       	adc	r25, r21
    fd1a:	c8 17       	cp	r28, r24
    fd1c:	d9 07       	cpc	r29, r25
    fd1e:	59 f4       	brne	.+22     	; 0xfd36 <free+0x82>
    fd20:	88 81       	ld	r24, Y
    fd22:	99 81       	ldd	r25, Y+1	; 0x01
    fd24:	84 0f       	add	r24, r20
    fd26:	95 1f       	adc	r25, r21
    fd28:	02 96       	adiw	r24, 0x02	; 2
    fd2a:	80 83       	st	Z, r24
    fd2c:	91 83       	std	Z+1, r25	; 0x01
    fd2e:	8a 81       	ldd	r24, Y+2	; 0x02
    fd30:	9b 81       	ldd	r25, Y+3	; 0x03
    fd32:	82 83       	std	Z+2, r24	; 0x02
    fd34:	93 83       	std	Z+3, r25	; 0x03
    fd36:	21 15       	cp	r18, r1
    fd38:	31 05       	cpc	r19, r1
    fd3a:	29 f4       	brne	.+10     	; 0xfd46 <free+0x92>
    fd3c:	e0 93 e5 49 	sts	0x49E5, r30	; 0x8049e5 <__flp>
    fd40:	f0 93 e6 49 	sts	0x49E6, r31	; 0x8049e6 <__flp+0x1>
    fd44:	3d c0       	rjmp	.+122    	; 0xfdc0 <free+0x10c>
    fd46:	e9 01       	movw	r28, r18
    fd48:	ea 83       	std	Y+2, r30	; 0x02
    fd4a:	fb 83       	std	Y+3, r31	; 0x03
    fd4c:	49 91       	ld	r20, Y+
    fd4e:	59 91       	ld	r21, Y+
    fd50:	c4 0f       	add	r28, r20
    fd52:	d5 1f       	adc	r29, r21
    fd54:	ec 17       	cp	r30, r28
    fd56:	fd 07       	cpc	r31, r29
    fd58:	61 f4       	brne	.+24     	; 0xfd72 <free+0xbe>
    fd5a:	80 81       	ld	r24, Z
    fd5c:	91 81       	ldd	r25, Z+1	; 0x01
    fd5e:	84 0f       	add	r24, r20
    fd60:	95 1f       	adc	r25, r21
    fd62:	02 96       	adiw	r24, 0x02	; 2
    fd64:	e9 01       	movw	r28, r18
    fd66:	88 83       	st	Y, r24
    fd68:	99 83       	std	Y+1, r25	; 0x01
    fd6a:	82 81       	ldd	r24, Z+2	; 0x02
    fd6c:	93 81       	ldd	r25, Z+3	; 0x03
    fd6e:	8a 83       	std	Y+2, r24	; 0x02
    fd70:	9b 83       	std	Y+3, r25	; 0x03
    fd72:	e0 e0       	ldi	r30, 0x00	; 0
    fd74:	f0 e0       	ldi	r31, 0x00	; 0
    fd76:	12 96       	adiw	r26, 0x02	; 2
    fd78:	8d 91       	ld	r24, X+
    fd7a:	9c 91       	ld	r25, X
    fd7c:	13 97       	sbiw	r26, 0x03	; 3
    fd7e:	00 97       	sbiw	r24, 0x00	; 0
    fd80:	19 f0       	breq	.+6      	; 0xfd88 <free+0xd4>
    fd82:	fd 01       	movw	r30, r26
    fd84:	dc 01       	movw	r26, r24
    fd86:	f7 cf       	rjmp	.-18     	; 0xfd76 <free+0xc2>
    fd88:	8d 91       	ld	r24, X+
    fd8a:	9c 91       	ld	r25, X
    fd8c:	11 97       	sbiw	r26, 0x01	; 1
    fd8e:	9d 01       	movw	r18, r26
    fd90:	2e 5f       	subi	r18, 0xFE	; 254
    fd92:	3f 4f       	sbci	r19, 0xFF	; 255
    fd94:	82 0f       	add	r24, r18
    fd96:	93 1f       	adc	r25, r19
    fd98:	20 91 e3 49 	lds	r18, 0x49E3	; 0x8049e3 <__brkval>
    fd9c:	30 91 e4 49 	lds	r19, 0x49E4	; 0x8049e4 <__brkval+0x1>
    fda0:	28 17       	cp	r18, r24
    fda2:	39 07       	cpc	r19, r25
    fda4:	69 f4       	brne	.+26     	; 0xfdc0 <free+0x10c>
    fda6:	30 97       	sbiw	r30, 0x00	; 0
    fda8:	29 f4       	brne	.+10     	; 0xfdb4 <free+0x100>
    fdaa:	10 92 e5 49 	sts	0x49E5, r1	; 0x8049e5 <__flp>
    fdae:	10 92 e6 49 	sts	0x49E6, r1	; 0x8049e6 <__flp+0x1>
    fdb2:	02 c0       	rjmp	.+4      	; 0xfdb8 <free+0x104>
    fdb4:	12 82       	std	Z+2, r1	; 0x02
    fdb6:	13 82       	std	Z+3, r1	; 0x03
    fdb8:	a0 93 e3 49 	sts	0x49E3, r26	; 0x8049e3 <__brkval>
    fdbc:	b0 93 e4 49 	sts	0x49E4, r27	; 0x8049e4 <__brkval+0x1>
    fdc0:	df 91       	pop	r29
    fdc2:	cf 91       	pop	r28
    fdc4:	08 95       	ret

0000fdc6 <atoi>:
    fdc6:	fc 01       	movw	r30, r24
    fdc8:	88 27       	eor	r24, r24
    fdca:	99 27       	eor	r25, r25
    fdcc:	e8 94       	clt
    fdce:	21 91       	ld	r18, Z+
    fdd0:	20 32       	cpi	r18, 0x20	; 32
    fdd2:	e9 f3       	breq	.-6      	; 0xfdce <atoi+0x8>
    fdd4:	29 30       	cpi	r18, 0x09	; 9
    fdd6:	10 f0       	brcs	.+4      	; 0xfddc <atoi+0x16>
    fdd8:	2e 30       	cpi	r18, 0x0E	; 14
    fdda:	c8 f3       	brcs	.-14     	; 0xfdce <atoi+0x8>
    fddc:	2b 32       	cpi	r18, 0x2B	; 43
    fdde:	41 f0       	breq	.+16     	; 0xfdf0 <atoi+0x2a>
    fde0:	2d 32       	cpi	r18, 0x2D	; 45
    fde2:	39 f4       	brne	.+14     	; 0xfdf2 <atoi+0x2c>
    fde4:	68 94       	set
    fde6:	04 c0       	rjmp	.+8      	; 0xfdf0 <atoi+0x2a>
    fde8:	0e 94 91 7f 	call	0xff22	; 0xff22 <__mulhi_const_10>
    fdec:	82 0f       	add	r24, r18
    fdee:	91 1d       	adc	r25, r1
    fdf0:	21 91       	ld	r18, Z+
    fdf2:	20 53       	subi	r18, 0x30	; 48
    fdf4:	2a 30       	cpi	r18, 0x0A	; 10
    fdf6:	c0 f3       	brcs	.-16     	; 0xfde8 <atoi+0x22>
    fdf8:	1e f4       	brtc	.+6      	; 0xfe00 <atoi+0x3a>
    fdfa:	90 95       	com	r25
    fdfc:	81 95       	neg	r24
    fdfe:	9f 4f       	sbci	r25, 0xFF	; 255
    fe00:	08 95       	ret

0000fe02 <atol>:
    fe02:	1f 93       	push	r17
    fe04:	fc 01       	movw	r30, r24
    fe06:	99 27       	eor	r25, r25
    fe08:	88 27       	eor	r24, r24
    fe0a:	bc 01       	movw	r22, r24
    fe0c:	e8 94       	clt
    fe0e:	11 91       	ld	r17, Z+
    fe10:	10 32       	cpi	r17, 0x20	; 32
    fe12:	e9 f3       	breq	.-6      	; 0xfe0e <atol+0xc>
    fe14:	19 30       	cpi	r17, 0x09	; 9
    fe16:	10 f0       	brcs	.+4      	; 0xfe1c <atol+0x1a>
    fe18:	1e 30       	cpi	r17, 0x0E	; 14
    fe1a:	c8 f3       	brcs	.-14     	; 0xfe0e <atol+0xc>
    fe1c:	1b 32       	cpi	r17, 0x2B	; 43
    fe1e:	51 f0       	breq	.+20     	; 0xfe34 <atol+0x32>
    fe20:	1d 32       	cpi	r17, 0x2D	; 45
    fe22:	49 f4       	brne	.+18     	; 0xfe36 <atol+0x34>
    fe24:	68 94       	set
    fe26:	06 c0       	rjmp	.+12     	; 0xfe34 <atol+0x32>
    fe28:	0e 94 7c 7f 	call	0xfef8	; 0xfef8 <__mulsi_const_10>
    fe2c:	61 0f       	add	r22, r17
    fe2e:	71 1d       	adc	r23, r1
    fe30:	81 1d       	adc	r24, r1
    fe32:	91 1d       	adc	r25, r1
    fe34:	11 91       	ld	r17, Z+
    fe36:	10 53       	subi	r17, 0x30	; 48
    fe38:	1a 30       	cpi	r17, 0x0A	; 10
    fe3a:	b0 f3       	brcs	.-20     	; 0xfe28 <atol+0x26>
    fe3c:	3e f4       	brtc	.+14     	; 0xfe4c <atol+0x4a>
    fe3e:	90 95       	com	r25
    fe40:	80 95       	com	r24
    fe42:	70 95       	com	r23
    fe44:	61 95       	neg	r22
    fe46:	7f 4f       	sbci	r23, 0xFF	; 255
    fe48:	8f 4f       	sbci	r24, 0xFF	; 255
    fe4a:	9f 4f       	sbci	r25, 0xFF	; 255
    fe4c:	1f 91       	pop	r17
    fe4e:	08 95       	ret

0000fe50 <isspace>:
    fe50:	91 11       	cpse	r25, r1
    fe52:	0c 94 0f 84 	jmp	0x1081e	; 0x1081e <__ctype_isfalse>
    fe56:	80 32       	cpi	r24, 0x20	; 32
    fe58:	19 f0       	breq	.+6      	; 0xfe60 <isspace+0x10>
    fe5a:	89 50       	subi	r24, 0x09	; 9
    fe5c:	85 50       	subi	r24, 0x05	; 5
    fe5e:	c8 f7       	brcc	.-14     	; 0xfe52 <isspace+0x2>
    fe60:	08 95       	ret

0000fe62 <toupper>:
    fe62:	91 11       	cpse	r25, r1
    fe64:	08 95       	ret
    fe66:	81 56       	subi	r24, 0x61	; 97
    fe68:	8a 51       	subi	r24, 0x1A	; 26
    fe6a:	08 f4       	brcc	.+2      	; 0xfe6e <toupper+0xc>
    fe6c:	80 52       	subi	r24, 0x20	; 32
    fe6e:	85 58       	subi	r24, 0x85	; 133
    fe70:	08 95       	ret

0000fe72 <memset>:
    fe72:	dc 01       	movw	r26, r24
    fe74:	01 c0       	rjmp	.+2      	; 0xfe78 <memset+0x6>
    fe76:	6d 93       	st	X+, r22
    fe78:	41 50       	subi	r20, 0x01	; 1
    fe7a:	50 40       	sbci	r21, 0x00	; 0
    fe7c:	e0 f7       	brcc	.-8      	; 0xfe76 <memset+0x4>
    fe7e:	08 95       	ret

0000fe80 <strchr>:
    fe80:	fc 01       	movw	r30, r24
    fe82:	81 91       	ld	r24, Z+
    fe84:	86 17       	cp	r24, r22
    fe86:	21 f0       	breq	.+8      	; 0xfe90 <strchr+0x10>
    fe88:	88 23       	and	r24, r24
    fe8a:	d9 f7       	brne	.-10     	; 0xfe82 <strchr+0x2>
    fe8c:	99 27       	eor	r25, r25
    fe8e:	08 95       	ret
    fe90:	31 97       	sbiw	r30, 0x01	; 1
    fe92:	cf 01       	movw	r24, r30
    fe94:	08 95       	ret

0000fe96 <strcmp>:
    fe96:	fb 01       	movw	r30, r22
    fe98:	dc 01       	movw	r26, r24
    fe9a:	8d 91       	ld	r24, X+
    fe9c:	01 90       	ld	r0, Z+
    fe9e:	80 19       	sub	r24, r0
    fea0:	01 10       	cpse	r0, r1
    fea2:	d9 f3       	breq	.-10     	; 0xfe9a <strcmp+0x4>
    fea4:	99 0b       	sbc	r25, r25
    fea6:	08 95       	ret

0000fea8 <strlen>:
    fea8:	fc 01       	movw	r30, r24
    feaa:	01 90       	ld	r0, Z+
    feac:	00 20       	and	r0, r0
    feae:	e9 f7       	brne	.-6      	; 0xfeaa <strlen+0x2>
    feb0:	80 95       	com	r24
    feb2:	90 95       	com	r25
    feb4:	8e 0f       	add	r24, r30
    feb6:	9f 1f       	adc	r25, r31
    feb8:	08 95       	ret

0000feba <strncat>:
    feba:	fb 01       	movw	r30, r22
    febc:	dc 01       	movw	r26, r24
    febe:	0d 90       	ld	r0, X+
    fec0:	00 20       	and	r0, r0
    fec2:	e9 f7       	brne	.-6      	; 0xfebe <strncat+0x4>
    fec4:	11 97       	sbiw	r26, 0x01	; 1
    fec6:	41 50       	subi	r20, 0x01	; 1
    fec8:	50 40       	sbci	r21, 0x00	; 0
    feca:	28 f0       	brcs	.+10     	; 0xfed6 <strncat+0x1c>
    fecc:	01 90       	ld	r0, Z+
    fece:	00 20       	and	r0, r0
    fed0:	0d 92       	st	X+, r0
    fed2:	c9 f7       	brne	.-14     	; 0xfec6 <strncat+0xc>
    fed4:	08 95       	ret
    fed6:	1c 92       	st	X, r1
    fed8:	08 95       	ret

0000feda <strncpy>:
    feda:	fb 01       	movw	r30, r22
    fedc:	dc 01       	movw	r26, r24
    fede:	41 50       	subi	r20, 0x01	; 1
    fee0:	50 40       	sbci	r21, 0x00	; 0
    fee2:	48 f0       	brcs	.+18     	; 0xfef6 <strncpy+0x1c>
    fee4:	01 90       	ld	r0, Z+
    fee6:	0d 92       	st	X+, r0
    fee8:	00 20       	and	r0, r0
    feea:	c9 f7       	brne	.-14     	; 0xfede <strncpy+0x4>
    feec:	01 c0       	rjmp	.+2      	; 0xfef0 <strncpy+0x16>
    feee:	1d 92       	st	X+, r1
    fef0:	41 50       	subi	r20, 0x01	; 1
    fef2:	50 40       	sbci	r21, 0x00	; 0
    fef4:	e0 f7       	brcc	.-8      	; 0xfeee <strncpy+0x14>
    fef6:	08 95       	ret

0000fef8 <__mulsi_const_10>:
    fef8:	59 2f       	mov	r21, r25
    fefa:	48 2f       	mov	r20, r24
    fefc:	37 2f       	mov	r19, r23
    fefe:	26 2f       	mov	r18, r22
    ff00:	66 0f       	add	r22, r22
    ff02:	77 1f       	adc	r23, r23
    ff04:	88 1f       	adc	r24, r24
    ff06:	99 1f       	adc	r25, r25
    ff08:	66 0f       	add	r22, r22
    ff0a:	77 1f       	adc	r23, r23
    ff0c:	88 1f       	adc	r24, r24
    ff0e:	99 1f       	adc	r25, r25
    ff10:	62 0f       	add	r22, r18
    ff12:	73 1f       	adc	r23, r19
    ff14:	84 1f       	adc	r24, r20
    ff16:	95 1f       	adc	r25, r21
    ff18:	66 0f       	add	r22, r22
    ff1a:	77 1f       	adc	r23, r23
    ff1c:	88 1f       	adc	r24, r24
    ff1e:	99 1f       	adc	r25, r25
    ff20:	08 95       	ret

0000ff22 <__mulhi_const_10>:
    ff22:	7a e0       	ldi	r23, 0x0A	; 10
    ff24:	97 9f       	mul	r25, r23
    ff26:	90 2d       	mov	r25, r0
    ff28:	87 9f       	mul	r24, r23
    ff2a:	80 2d       	mov	r24, r0
    ff2c:	91 0d       	add	r25, r1
    ff2e:	11 24       	eor	r1, r1
    ff30:	08 95       	ret

0000ff32 <sprintf>:
    ff32:	0f 93       	push	r16
    ff34:	1f 93       	push	r17
    ff36:	cf 93       	push	r28
    ff38:	df 93       	push	r29
    ff3a:	cd b7       	in	r28, 0x3d	; 61
    ff3c:	de b7       	in	r29, 0x3e	; 62
    ff3e:	2e 97       	sbiw	r28, 0x0e	; 14
    ff40:	cd bf       	out	0x3d, r28	; 61
    ff42:	de bf       	out	0x3e, r29	; 62
    ff44:	0d 89       	ldd	r16, Y+21	; 0x15
    ff46:	1e 89       	ldd	r17, Y+22	; 0x16
    ff48:	86 e0       	ldi	r24, 0x06	; 6
    ff4a:	8c 83       	std	Y+4, r24	; 0x04
    ff4c:	09 83       	std	Y+1, r16	; 0x01
    ff4e:	1a 83       	std	Y+2, r17	; 0x02
    ff50:	8f ef       	ldi	r24, 0xFF	; 255
    ff52:	9f e7       	ldi	r25, 0x7F	; 127
    ff54:	8d 83       	std	Y+5, r24	; 0x05
    ff56:	9e 83       	std	Y+6, r25	; 0x06
    ff58:	ae 01       	movw	r20, r28
    ff5a:	47 5e       	subi	r20, 0xE7	; 231
    ff5c:	5f 4f       	sbci	r21, 0xFF	; 255
    ff5e:	6f 89       	ldd	r22, Y+23	; 0x17
    ff60:	78 8d       	ldd	r23, Y+24	; 0x18
    ff62:	ce 01       	movw	r24, r28
    ff64:	01 96       	adiw	r24, 0x01	; 1
    ff66:	0e 94 c2 7f 	call	0xff84	; 0xff84 <vfprintf>
    ff6a:	ef 81       	ldd	r30, Y+7	; 0x07
    ff6c:	f8 85       	ldd	r31, Y+8	; 0x08
    ff6e:	e0 0f       	add	r30, r16
    ff70:	f1 1f       	adc	r31, r17
    ff72:	10 82       	st	Z, r1
    ff74:	2e 96       	adiw	r28, 0x0e	; 14
    ff76:	cd bf       	out	0x3d, r28	; 61
    ff78:	de bf       	out	0x3e, r29	; 62
    ff7a:	df 91       	pop	r29
    ff7c:	cf 91       	pop	r28
    ff7e:	1f 91       	pop	r17
    ff80:	0f 91       	pop	r16
    ff82:	08 95       	ret

0000ff84 <vfprintf>:
    ff84:	2f 92       	push	r2
    ff86:	3f 92       	push	r3
    ff88:	4f 92       	push	r4
    ff8a:	5f 92       	push	r5
    ff8c:	6f 92       	push	r6
    ff8e:	7f 92       	push	r7
    ff90:	8f 92       	push	r8
    ff92:	9f 92       	push	r9
    ff94:	af 92       	push	r10
    ff96:	bf 92       	push	r11
    ff98:	cf 92       	push	r12
    ff9a:	df 92       	push	r13
    ff9c:	ef 92       	push	r14
    ff9e:	ff 92       	push	r15
    ffa0:	0f 93       	push	r16
    ffa2:	1f 93       	push	r17
    ffa4:	cf 93       	push	r28
    ffa6:	df 93       	push	r29
    ffa8:	cd b7       	in	r28, 0x3d	; 61
    ffaa:	de b7       	in	r29, 0x3e	; 62
    ffac:	2b 97       	sbiw	r28, 0x0b	; 11
    ffae:	cd bf       	out	0x3d, r28	; 61
    ffb0:	de bf       	out	0x3e, r29	; 62
    ffb2:	6c 01       	movw	r12, r24
    ffb4:	7b 01       	movw	r14, r22
    ffb6:	8a 01       	movw	r16, r20
    ffb8:	fc 01       	movw	r30, r24
    ffba:	16 82       	std	Z+6, r1	; 0x06
    ffbc:	17 82       	std	Z+7, r1	; 0x07
    ffbe:	83 81       	ldd	r24, Z+3	; 0x03
    ffc0:	81 ff       	sbrs	r24, 1
    ffc2:	cc c1       	rjmp	.+920    	; 0x1035c <vfprintf+0x3d8>
    ffc4:	ce 01       	movw	r24, r28
    ffc6:	01 96       	adiw	r24, 0x01	; 1
    ffc8:	3c 01       	movw	r6, r24
    ffca:	f6 01       	movw	r30, r12
    ffcc:	93 81       	ldd	r25, Z+3	; 0x03
    ffce:	f7 01       	movw	r30, r14
    ffd0:	93 fd       	sbrc	r25, 3
    ffd2:	85 91       	lpm	r24, Z+
    ffd4:	93 ff       	sbrs	r25, 3
    ffd6:	81 91       	ld	r24, Z+
    ffd8:	7f 01       	movw	r14, r30
    ffda:	88 23       	and	r24, r24
    ffdc:	09 f4       	brne	.+2      	; 0xffe0 <vfprintf+0x5c>
    ffde:	ba c1       	rjmp	.+884    	; 0x10354 <vfprintf+0x3d0>
    ffe0:	85 32       	cpi	r24, 0x25	; 37
    ffe2:	39 f4       	brne	.+14     	; 0xfff2 <vfprintf+0x6e>
    ffe4:	93 fd       	sbrc	r25, 3
    ffe6:	85 91       	lpm	r24, Z+
    ffe8:	93 ff       	sbrs	r25, 3
    ffea:	81 91       	ld	r24, Z+
    ffec:	7f 01       	movw	r14, r30
    ffee:	85 32       	cpi	r24, 0x25	; 37
    fff0:	29 f4       	brne	.+10     	; 0xfffc <vfprintf+0x78>
    fff2:	b6 01       	movw	r22, r12
    fff4:	90 e0       	ldi	r25, 0x00	; 0
    fff6:	0e 94 2f 84 	call	0x1085e	; 0x1085e <fputc>
    fffa:	e7 cf       	rjmp	.-50     	; 0xffca <vfprintf+0x46>
    fffc:	91 2c       	mov	r9, r1
    fffe:	21 2c       	mov	r2, r1
   10000:	31 2c       	mov	r3, r1
   10002:	ff e1       	ldi	r31, 0x1F	; 31
   10004:	f3 15       	cp	r31, r3
   10006:	d8 f0       	brcs	.+54     	; 0x1003e <vfprintf+0xba>
   10008:	8b 32       	cpi	r24, 0x2B	; 43
   1000a:	79 f0       	breq	.+30     	; 0x1002a <vfprintf+0xa6>
   1000c:	38 f4       	brcc	.+14     	; 0x1001c <vfprintf+0x98>
   1000e:	80 32       	cpi	r24, 0x20	; 32
   10010:	79 f0       	breq	.+30     	; 0x10030 <vfprintf+0xac>
   10012:	83 32       	cpi	r24, 0x23	; 35
   10014:	a1 f4       	brne	.+40     	; 0x1003e <vfprintf+0xba>
   10016:	23 2d       	mov	r18, r3
   10018:	20 61       	ori	r18, 0x10	; 16
   1001a:	1d c0       	rjmp	.+58     	; 0x10056 <vfprintf+0xd2>
   1001c:	8d 32       	cpi	r24, 0x2D	; 45
   1001e:	61 f0       	breq	.+24     	; 0x10038 <vfprintf+0xb4>
   10020:	80 33       	cpi	r24, 0x30	; 48
   10022:	69 f4       	brne	.+26     	; 0x1003e <vfprintf+0xba>
   10024:	23 2d       	mov	r18, r3
   10026:	21 60       	ori	r18, 0x01	; 1
   10028:	16 c0       	rjmp	.+44     	; 0x10056 <vfprintf+0xd2>
   1002a:	83 2d       	mov	r24, r3
   1002c:	82 60       	ori	r24, 0x02	; 2
   1002e:	38 2e       	mov	r3, r24
   10030:	e3 2d       	mov	r30, r3
   10032:	e4 60       	ori	r30, 0x04	; 4
   10034:	3e 2e       	mov	r3, r30
   10036:	2a c0       	rjmp	.+84     	; 0x1008c <vfprintf+0x108>
   10038:	f3 2d       	mov	r31, r3
   1003a:	f8 60       	ori	r31, 0x08	; 8
   1003c:	1d c0       	rjmp	.+58     	; 0x10078 <vfprintf+0xf4>
   1003e:	37 fc       	sbrc	r3, 7
   10040:	2d c0       	rjmp	.+90     	; 0x1009c <vfprintf+0x118>
   10042:	20 ed       	ldi	r18, 0xD0	; 208
   10044:	28 0f       	add	r18, r24
   10046:	2a 30       	cpi	r18, 0x0A	; 10
   10048:	40 f0       	brcs	.+16     	; 0x1005a <vfprintf+0xd6>
   1004a:	8e 32       	cpi	r24, 0x2E	; 46
   1004c:	b9 f4       	brne	.+46     	; 0x1007c <vfprintf+0xf8>
   1004e:	36 fc       	sbrc	r3, 6
   10050:	81 c1       	rjmp	.+770    	; 0x10354 <vfprintf+0x3d0>
   10052:	23 2d       	mov	r18, r3
   10054:	20 64       	ori	r18, 0x40	; 64
   10056:	32 2e       	mov	r3, r18
   10058:	19 c0       	rjmp	.+50     	; 0x1008c <vfprintf+0x108>
   1005a:	36 fe       	sbrs	r3, 6
   1005c:	06 c0       	rjmp	.+12     	; 0x1006a <vfprintf+0xe6>
   1005e:	8a e0       	ldi	r24, 0x0A	; 10
   10060:	98 9e       	mul	r9, r24
   10062:	20 0d       	add	r18, r0
   10064:	11 24       	eor	r1, r1
   10066:	92 2e       	mov	r9, r18
   10068:	11 c0       	rjmp	.+34     	; 0x1008c <vfprintf+0x108>
   1006a:	ea e0       	ldi	r30, 0x0A	; 10
   1006c:	2e 9e       	mul	r2, r30
   1006e:	20 0d       	add	r18, r0
   10070:	11 24       	eor	r1, r1
   10072:	22 2e       	mov	r2, r18
   10074:	f3 2d       	mov	r31, r3
   10076:	f0 62       	ori	r31, 0x20	; 32
   10078:	3f 2e       	mov	r3, r31
   1007a:	08 c0       	rjmp	.+16     	; 0x1008c <vfprintf+0x108>
   1007c:	8c 36       	cpi	r24, 0x6C	; 108
   1007e:	21 f4       	brne	.+8      	; 0x10088 <vfprintf+0x104>
   10080:	83 2d       	mov	r24, r3
   10082:	80 68       	ori	r24, 0x80	; 128
   10084:	38 2e       	mov	r3, r24
   10086:	02 c0       	rjmp	.+4      	; 0x1008c <vfprintf+0x108>
   10088:	88 36       	cpi	r24, 0x68	; 104
   1008a:	41 f4       	brne	.+16     	; 0x1009c <vfprintf+0x118>
   1008c:	f7 01       	movw	r30, r14
   1008e:	93 fd       	sbrc	r25, 3
   10090:	85 91       	lpm	r24, Z+
   10092:	93 ff       	sbrs	r25, 3
   10094:	81 91       	ld	r24, Z+
   10096:	7f 01       	movw	r14, r30
   10098:	81 11       	cpse	r24, r1
   1009a:	b3 cf       	rjmp	.-154    	; 0x10002 <vfprintf+0x7e>
   1009c:	98 2f       	mov	r25, r24
   1009e:	9f 7d       	andi	r25, 0xDF	; 223
   100a0:	95 54       	subi	r25, 0x45	; 69
   100a2:	93 30       	cpi	r25, 0x03	; 3
   100a4:	28 f4       	brcc	.+10     	; 0x100b0 <vfprintf+0x12c>
   100a6:	0c 5f       	subi	r16, 0xFC	; 252
   100a8:	1f 4f       	sbci	r17, 0xFF	; 255
   100aa:	9f e3       	ldi	r25, 0x3F	; 63
   100ac:	99 83       	std	Y+1, r25	; 0x01
   100ae:	0d c0       	rjmp	.+26     	; 0x100ca <vfprintf+0x146>
   100b0:	83 36       	cpi	r24, 0x63	; 99
   100b2:	31 f0       	breq	.+12     	; 0x100c0 <vfprintf+0x13c>
   100b4:	83 37       	cpi	r24, 0x73	; 115
   100b6:	71 f0       	breq	.+28     	; 0x100d4 <vfprintf+0x150>
   100b8:	83 35       	cpi	r24, 0x53	; 83
   100ba:	09 f0       	breq	.+2      	; 0x100be <vfprintf+0x13a>
   100bc:	59 c0       	rjmp	.+178    	; 0x10170 <vfprintf+0x1ec>
   100be:	21 c0       	rjmp	.+66     	; 0x10102 <vfprintf+0x17e>
   100c0:	f8 01       	movw	r30, r16
   100c2:	80 81       	ld	r24, Z
   100c4:	89 83       	std	Y+1, r24	; 0x01
   100c6:	0e 5f       	subi	r16, 0xFE	; 254
   100c8:	1f 4f       	sbci	r17, 0xFF	; 255
   100ca:	88 24       	eor	r8, r8
   100cc:	83 94       	inc	r8
   100ce:	91 2c       	mov	r9, r1
   100d0:	53 01       	movw	r10, r6
   100d2:	13 c0       	rjmp	.+38     	; 0x100fa <vfprintf+0x176>
   100d4:	28 01       	movw	r4, r16
   100d6:	f2 e0       	ldi	r31, 0x02	; 2
   100d8:	4f 0e       	add	r4, r31
   100da:	51 1c       	adc	r5, r1
   100dc:	f8 01       	movw	r30, r16
   100de:	a0 80       	ld	r10, Z
   100e0:	b1 80       	ldd	r11, Z+1	; 0x01
   100e2:	36 fe       	sbrs	r3, 6
   100e4:	03 c0       	rjmp	.+6      	; 0x100ec <vfprintf+0x168>
   100e6:	69 2d       	mov	r22, r9
   100e8:	70 e0       	ldi	r23, 0x00	; 0
   100ea:	02 c0       	rjmp	.+4      	; 0x100f0 <vfprintf+0x16c>
   100ec:	6f ef       	ldi	r22, 0xFF	; 255
   100ee:	7f ef       	ldi	r23, 0xFF	; 255
   100f0:	c5 01       	movw	r24, r10
   100f2:	0e 94 24 84 	call	0x10848	; 0x10848 <strnlen>
   100f6:	4c 01       	movw	r8, r24
   100f8:	82 01       	movw	r16, r4
   100fa:	f3 2d       	mov	r31, r3
   100fc:	ff 77       	andi	r31, 0x7F	; 127
   100fe:	3f 2e       	mov	r3, r31
   10100:	16 c0       	rjmp	.+44     	; 0x1012e <vfprintf+0x1aa>
   10102:	28 01       	movw	r4, r16
   10104:	22 e0       	ldi	r18, 0x02	; 2
   10106:	42 0e       	add	r4, r18
   10108:	51 1c       	adc	r5, r1
   1010a:	f8 01       	movw	r30, r16
   1010c:	a0 80       	ld	r10, Z
   1010e:	b1 80       	ldd	r11, Z+1	; 0x01
   10110:	36 fe       	sbrs	r3, 6
   10112:	03 c0       	rjmp	.+6      	; 0x1011a <vfprintf+0x196>
   10114:	69 2d       	mov	r22, r9
   10116:	70 e0       	ldi	r23, 0x00	; 0
   10118:	02 c0       	rjmp	.+4      	; 0x1011e <vfprintf+0x19a>
   1011a:	6f ef       	ldi	r22, 0xFF	; 255
   1011c:	7f ef       	ldi	r23, 0xFF	; 255
   1011e:	c5 01       	movw	r24, r10
   10120:	0e 94 12 84 	call	0x10824	; 0x10824 <strnlen_P>
   10124:	4c 01       	movw	r8, r24
   10126:	f3 2d       	mov	r31, r3
   10128:	f0 68       	ori	r31, 0x80	; 128
   1012a:	3f 2e       	mov	r3, r31
   1012c:	82 01       	movw	r16, r4
   1012e:	33 fc       	sbrc	r3, 3
   10130:	1b c0       	rjmp	.+54     	; 0x10168 <vfprintf+0x1e4>
   10132:	82 2d       	mov	r24, r2
   10134:	90 e0       	ldi	r25, 0x00	; 0
   10136:	88 16       	cp	r8, r24
   10138:	99 06       	cpc	r9, r25
   1013a:	b0 f4       	brcc	.+44     	; 0x10168 <vfprintf+0x1e4>
   1013c:	b6 01       	movw	r22, r12
   1013e:	80 e2       	ldi	r24, 0x20	; 32
   10140:	90 e0       	ldi	r25, 0x00	; 0
   10142:	0e 94 2f 84 	call	0x1085e	; 0x1085e <fputc>
   10146:	2a 94       	dec	r2
   10148:	f4 cf       	rjmp	.-24     	; 0x10132 <vfprintf+0x1ae>
   1014a:	f5 01       	movw	r30, r10
   1014c:	37 fc       	sbrc	r3, 7
   1014e:	85 91       	lpm	r24, Z+
   10150:	37 fe       	sbrs	r3, 7
   10152:	81 91       	ld	r24, Z+
   10154:	5f 01       	movw	r10, r30
   10156:	b6 01       	movw	r22, r12
   10158:	90 e0       	ldi	r25, 0x00	; 0
   1015a:	0e 94 2f 84 	call	0x1085e	; 0x1085e <fputc>
   1015e:	21 10       	cpse	r2, r1
   10160:	2a 94       	dec	r2
   10162:	21 e0       	ldi	r18, 0x01	; 1
   10164:	82 1a       	sub	r8, r18
   10166:	91 08       	sbc	r9, r1
   10168:	81 14       	cp	r8, r1
   1016a:	91 04       	cpc	r9, r1
   1016c:	71 f7       	brne	.-36     	; 0x1014a <vfprintf+0x1c6>
   1016e:	e8 c0       	rjmp	.+464    	; 0x10340 <vfprintf+0x3bc>
   10170:	84 36       	cpi	r24, 0x64	; 100
   10172:	11 f0       	breq	.+4      	; 0x10178 <vfprintf+0x1f4>
   10174:	89 36       	cpi	r24, 0x69	; 105
   10176:	41 f5       	brne	.+80     	; 0x101c8 <vfprintf+0x244>
   10178:	f8 01       	movw	r30, r16
   1017a:	37 fe       	sbrs	r3, 7
   1017c:	07 c0       	rjmp	.+14     	; 0x1018c <vfprintf+0x208>
   1017e:	60 81       	ld	r22, Z
   10180:	71 81       	ldd	r23, Z+1	; 0x01
   10182:	82 81       	ldd	r24, Z+2	; 0x02
   10184:	93 81       	ldd	r25, Z+3	; 0x03
   10186:	0c 5f       	subi	r16, 0xFC	; 252
   10188:	1f 4f       	sbci	r17, 0xFF	; 255
   1018a:	08 c0       	rjmp	.+16     	; 0x1019c <vfprintf+0x218>
   1018c:	60 81       	ld	r22, Z
   1018e:	71 81       	ldd	r23, Z+1	; 0x01
   10190:	07 2e       	mov	r0, r23
   10192:	00 0c       	add	r0, r0
   10194:	88 0b       	sbc	r24, r24
   10196:	99 0b       	sbc	r25, r25
   10198:	0e 5f       	subi	r16, 0xFE	; 254
   1019a:	1f 4f       	sbci	r17, 0xFF	; 255
   1019c:	f3 2d       	mov	r31, r3
   1019e:	ff 76       	andi	r31, 0x6F	; 111
   101a0:	3f 2e       	mov	r3, r31
   101a2:	97 ff       	sbrs	r25, 7
   101a4:	09 c0       	rjmp	.+18     	; 0x101b8 <vfprintf+0x234>
   101a6:	90 95       	com	r25
   101a8:	80 95       	com	r24
   101aa:	70 95       	com	r23
   101ac:	61 95       	neg	r22
   101ae:	7f 4f       	sbci	r23, 0xFF	; 255
   101b0:	8f 4f       	sbci	r24, 0xFF	; 255
   101b2:	9f 4f       	sbci	r25, 0xFF	; 255
   101b4:	f0 68       	ori	r31, 0x80	; 128
   101b6:	3f 2e       	mov	r3, r31
   101b8:	2a e0       	ldi	r18, 0x0A	; 10
   101ba:	30 e0       	ldi	r19, 0x00	; 0
   101bc:	a3 01       	movw	r20, r6
   101be:	0e 94 6b 84 	call	0x108d6	; 0x108d6 <__ultoa_invert>
   101c2:	88 2e       	mov	r8, r24
   101c4:	86 18       	sub	r8, r6
   101c6:	45 c0       	rjmp	.+138    	; 0x10252 <vfprintf+0x2ce>
   101c8:	85 37       	cpi	r24, 0x75	; 117
   101ca:	31 f4       	brne	.+12     	; 0x101d8 <vfprintf+0x254>
   101cc:	23 2d       	mov	r18, r3
   101ce:	2f 7e       	andi	r18, 0xEF	; 239
   101d0:	b2 2e       	mov	r11, r18
   101d2:	2a e0       	ldi	r18, 0x0A	; 10
   101d4:	30 e0       	ldi	r19, 0x00	; 0
   101d6:	25 c0       	rjmp	.+74     	; 0x10222 <vfprintf+0x29e>
   101d8:	93 2d       	mov	r25, r3
   101da:	99 7f       	andi	r25, 0xF9	; 249
   101dc:	b9 2e       	mov	r11, r25
   101de:	8f 36       	cpi	r24, 0x6F	; 111
   101e0:	c1 f0       	breq	.+48     	; 0x10212 <vfprintf+0x28e>
   101e2:	18 f4       	brcc	.+6      	; 0x101ea <vfprintf+0x266>
   101e4:	88 35       	cpi	r24, 0x58	; 88
   101e6:	79 f0       	breq	.+30     	; 0x10206 <vfprintf+0x282>
   101e8:	b5 c0       	rjmp	.+362    	; 0x10354 <vfprintf+0x3d0>
   101ea:	80 37       	cpi	r24, 0x70	; 112
   101ec:	19 f0       	breq	.+6      	; 0x101f4 <vfprintf+0x270>
   101ee:	88 37       	cpi	r24, 0x78	; 120
   101f0:	21 f0       	breq	.+8      	; 0x101fa <vfprintf+0x276>
   101f2:	b0 c0       	rjmp	.+352    	; 0x10354 <vfprintf+0x3d0>
   101f4:	e9 2f       	mov	r30, r25
   101f6:	e0 61       	ori	r30, 0x10	; 16
   101f8:	be 2e       	mov	r11, r30
   101fa:	b4 fe       	sbrs	r11, 4
   101fc:	0d c0       	rjmp	.+26     	; 0x10218 <vfprintf+0x294>
   101fe:	fb 2d       	mov	r31, r11
   10200:	f4 60       	ori	r31, 0x04	; 4
   10202:	bf 2e       	mov	r11, r31
   10204:	09 c0       	rjmp	.+18     	; 0x10218 <vfprintf+0x294>
   10206:	34 fe       	sbrs	r3, 4
   10208:	0a c0       	rjmp	.+20     	; 0x1021e <vfprintf+0x29a>
   1020a:	29 2f       	mov	r18, r25
   1020c:	26 60       	ori	r18, 0x06	; 6
   1020e:	b2 2e       	mov	r11, r18
   10210:	06 c0       	rjmp	.+12     	; 0x1021e <vfprintf+0x29a>
   10212:	28 e0       	ldi	r18, 0x08	; 8
   10214:	30 e0       	ldi	r19, 0x00	; 0
   10216:	05 c0       	rjmp	.+10     	; 0x10222 <vfprintf+0x29e>
   10218:	20 e1       	ldi	r18, 0x10	; 16
   1021a:	30 e0       	ldi	r19, 0x00	; 0
   1021c:	02 c0       	rjmp	.+4      	; 0x10222 <vfprintf+0x29e>
   1021e:	20 e1       	ldi	r18, 0x10	; 16
   10220:	32 e0       	ldi	r19, 0x02	; 2
   10222:	f8 01       	movw	r30, r16
   10224:	b7 fe       	sbrs	r11, 7
   10226:	07 c0       	rjmp	.+14     	; 0x10236 <vfprintf+0x2b2>
   10228:	60 81       	ld	r22, Z
   1022a:	71 81       	ldd	r23, Z+1	; 0x01
   1022c:	82 81       	ldd	r24, Z+2	; 0x02
   1022e:	93 81       	ldd	r25, Z+3	; 0x03
   10230:	0c 5f       	subi	r16, 0xFC	; 252
   10232:	1f 4f       	sbci	r17, 0xFF	; 255
   10234:	06 c0       	rjmp	.+12     	; 0x10242 <vfprintf+0x2be>
   10236:	60 81       	ld	r22, Z
   10238:	71 81       	ldd	r23, Z+1	; 0x01
   1023a:	80 e0       	ldi	r24, 0x00	; 0
   1023c:	90 e0       	ldi	r25, 0x00	; 0
   1023e:	0e 5f       	subi	r16, 0xFE	; 254
   10240:	1f 4f       	sbci	r17, 0xFF	; 255
   10242:	a3 01       	movw	r20, r6
   10244:	0e 94 6b 84 	call	0x108d6	; 0x108d6 <__ultoa_invert>
   10248:	88 2e       	mov	r8, r24
   1024a:	86 18       	sub	r8, r6
   1024c:	fb 2d       	mov	r31, r11
   1024e:	ff 77       	andi	r31, 0x7F	; 127
   10250:	3f 2e       	mov	r3, r31
   10252:	36 fe       	sbrs	r3, 6
   10254:	0d c0       	rjmp	.+26     	; 0x10270 <vfprintf+0x2ec>
   10256:	23 2d       	mov	r18, r3
   10258:	2e 7f       	andi	r18, 0xFE	; 254
   1025a:	a2 2e       	mov	r10, r18
   1025c:	89 14       	cp	r8, r9
   1025e:	58 f4       	brcc	.+22     	; 0x10276 <vfprintf+0x2f2>
   10260:	34 fe       	sbrs	r3, 4
   10262:	0b c0       	rjmp	.+22     	; 0x1027a <vfprintf+0x2f6>
   10264:	32 fc       	sbrc	r3, 2
   10266:	09 c0       	rjmp	.+18     	; 0x1027a <vfprintf+0x2f6>
   10268:	83 2d       	mov	r24, r3
   1026a:	8e 7e       	andi	r24, 0xEE	; 238
   1026c:	a8 2e       	mov	r10, r24
   1026e:	05 c0       	rjmp	.+10     	; 0x1027a <vfprintf+0x2f6>
   10270:	b8 2c       	mov	r11, r8
   10272:	a3 2c       	mov	r10, r3
   10274:	03 c0       	rjmp	.+6      	; 0x1027c <vfprintf+0x2f8>
   10276:	b8 2c       	mov	r11, r8
   10278:	01 c0       	rjmp	.+2      	; 0x1027c <vfprintf+0x2f8>
   1027a:	b9 2c       	mov	r11, r9
   1027c:	a4 fe       	sbrs	r10, 4
   1027e:	0f c0       	rjmp	.+30     	; 0x1029e <vfprintf+0x31a>
   10280:	fe 01       	movw	r30, r28
   10282:	e8 0d       	add	r30, r8
   10284:	f1 1d       	adc	r31, r1
   10286:	80 81       	ld	r24, Z
   10288:	80 33       	cpi	r24, 0x30	; 48
   1028a:	21 f4       	brne	.+8      	; 0x10294 <vfprintf+0x310>
   1028c:	9a 2d       	mov	r25, r10
   1028e:	99 7e       	andi	r25, 0xE9	; 233
   10290:	a9 2e       	mov	r10, r25
   10292:	09 c0       	rjmp	.+18     	; 0x102a6 <vfprintf+0x322>
   10294:	a2 fe       	sbrs	r10, 2
   10296:	06 c0       	rjmp	.+12     	; 0x102a4 <vfprintf+0x320>
   10298:	b3 94       	inc	r11
   1029a:	b3 94       	inc	r11
   1029c:	04 c0       	rjmp	.+8      	; 0x102a6 <vfprintf+0x322>
   1029e:	8a 2d       	mov	r24, r10
   102a0:	86 78       	andi	r24, 0x86	; 134
   102a2:	09 f0       	breq	.+2      	; 0x102a6 <vfprintf+0x322>
   102a4:	b3 94       	inc	r11
   102a6:	a3 fc       	sbrc	r10, 3
   102a8:	11 c0       	rjmp	.+34     	; 0x102cc <vfprintf+0x348>
   102aa:	a0 fe       	sbrs	r10, 0
   102ac:	06 c0       	rjmp	.+12     	; 0x102ba <vfprintf+0x336>
   102ae:	b2 14       	cp	r11, r2
   102b0:	88 f4       	brcc	.+34     	; 0x102d4 <vfprintf+0x350>
   102b2:	28 0c       	add	r2, r8
   102b4:	92 2c       	mov	r9, r2
   102b6:	9b 18       	sub	r9, r11
   102b8:	0e c0       	rjmp	.+28     	; 0x102d6 <vfprintf+0x352>
   102ba:	b2 14       	cp	r11, r2
   102bc:	60 f4       	brcc	.+24     	; 0x102d6 <vfprintf+0x352>
   102be:	b6 01       	movw	r22, r12
   102c0:	80 e2       	ldi	r24, 0x20	; 32
   102c2:	90 e0       	ldi	r25, 0x00	; 0
   102c4:	0e 94 2f 84 	call	0x1085e	; 0x1085e <fputc>
   102c8:	b3 94       	inc	r11
   102ca:	f7 cf       	rjmp	.-18     	; 0x102ba <vfprintf+0x336>
   102cc:	b2 14       	cp	r11, r2
   102ce:	18 f4       	brcc	.+6      	; 0x102d6 <vfprintf+0x352>
   102d0:	2b 18       	sub	r2, r11
   102d2:	02 c0       	rjmp	.+4      	; 0x102d8 <vfprintf+0x354>
   102d4:	98 2c       	mov	r9, r8
   102d6:	21 2c       	mov	r2, r1
   102d8:	a4 fe       	sbrs	r10, 4
   102da:	10 c0       	rjmp	.+32     	; 0x102fc <vfprintf+0x378>
   102dc:	b6 01       	movw	r22, r12
   102de:	80 e3       	ldi	r24, 0x30	; 48
   102e0:	90 e0       	ldi	r25, 0x00	; 0
   102e2:	0e 94 2f 84 	call	0x1085e	; 0x1085e <fputc>
   102e6:	a2 fe       	sbrs	r10, 2
   102e8:	17 c0       	rjmp	.+46     	; 0x10318 <vfprintf+0x394>
   102ea:	a1 fc       	sbrc	r10, 1
   102ec:	03 c0       	rjmp	.+6      	; 0x102f4 <vfprintf+0x370>
   102ee:	88 e7       	ldi	r24, 0x78	; 120
   102f0:	90 e0       	ldi	r25, 0x00	; 0
   102f2:	02 c0       	rjmp	.+4      	; 0x102f8 <vfprintf+0x374>
   102f4:	88 e5       	ldi	r24, 0x58	; 88
   102f6:	90 e0       	ldi	r25, 0x00	; 0
   102f8:	b6 01       	movw	r22, r12
   102fa:	0c c0       	rjmp	.+24     	; 0x10314 <vfprintf+0x390>
   102fc:	8a 2d       	mov	r24, r10
   102fe:	86 78       	andi	r24, 0x86	; 134
   10300:	59 f0       	breq	.+22     	; 0x10318 <vfprintf+0x394>
   10302:	a1 fe       	sbrs	r10, 1
   10304:	02 c0       	rjmp	.+4      	; 0x1030a <vfprintf+0x386>
   10306:	8b e2       	ldi	r24, 0x2B	; 43
   10308:	01 c0       	rjmp	.+2      	; 0x1030c <vfprintf+0x388>
   1030a:	80 e2       	ldi	r24, 0x20	; 32
   1030c:	a7 fc       	sbrc	r10, 7
   1030e:	8d e2       	ldi	r24, 0x2D	; 45
   10310:	b6 01       	movw	r22, r12
   10312:	90 e0       	ldi	r25, 0x00	; 0
   10314:	0e 94 2f 84 	call	0x1085e	; 0x1085e <fputc>
   10318:	89 14       	cp	r8, r9
   1031a:	38 f4       	brcc	.+14     	; 0x1032a <vfprintf+0x3a6>
   1031c:	b6 01       	movw	r22, r12
   1031e:	80 e3       	ldi	r24, 0x30	; 48
   10320:	90 e0       	ldi	r25, 0x00	; 0
   10322:	0e 94 2f 84 	call	0x1085e	; 0x1085e <fputc>
   10326:	9a 94       	dec	r9
   10328:	f7 cf       	rjmp	.-18     	; 0x10318 <vfprintf+0x394>
   1032a:	8a 94       	dec	r8
   1032c:	f3 01       	movw	r30, r6
   1032e:	e8 0d       	add	r30, r8
   10330:	f1 1d       	adc	r31, r1
   10332:	80 81       	ld	r24, Z
   10334:	b6 01       	movw	r22, r12
   10336:	90 e0       	ldi	r25, 0x00	; 0
   10338:	0e 94 2f 84 	call	0x1085e	; 0x1085e <fputc>
   1033c:	81 10       	cpse	r8, r1
   1033e:	f5 cf       	rjmp	.-22     	; 0x1032a <vfprintf+0x3a6>
   10340:	22 20       	and	r2, r2
   10342:	09 f4       	brne	.+2      	; 0x10346 <vfprintf+0x3c2>
   10344:	42 ce       	rjmp	.-892    	; 0xffca <vfprintf+0x46>
   10346:	b6 01       	movw	r22, r12
   10348:	80 e2       	ldi	r24, 0x20	; 32
   1034a:	90 e0       	ldi	r25, 0x00	; 0
   1034c:	0e 94 2f 84 	call	0x1085e	; 0x1085e <fputc>
   10350:	2a 94       	dec	r2
   10352:	f6 cf       	rjmp	.-20     	; 0x10340 <vfprintf+0x3bc>
   10354:	f6 01       	movw	r30, r12
   10356:	86 81       	ldd	r24, Z+6	; 0x06
   10358:	97 81       	ldd	r25, Z+7	; 0x07
   1035a:	02 c0       	rjmp	.+4      	; 0x10360 <vfprintf+0x3dc>
   1035c:	8f ef       	ldi	r24, 0xFF	; 255
   1035e:	9f ef       	ldi	r25, 0xFF	; 255
   10360:	2b 96       	adiw	r28, 0x0b	; 11
   10362:	cd bf       	out	0x3d, r28	; 61
   10364:	de bf       	out	0x3e, r29	; 62
   10366:	df 91       	pop	r29
   10368:	cf 91       	pop	r28
   1036a:	1f 91       	pop	r17
   1036c:	0f 91       	pop	r16
   1036e:	ff 90       	pop	r15
   10370:	ef 90       	pop	r14
   10372:	df 90       	pop	r13
   10374:	cf 90       	pop	r12
   10376:	bf 90       	pop	r11
   10378:	af 90       	pop	r10
   1037a:	9f 90       	pop	r9
   1037c:	8f 90       	pop	r8
   1037e:	7f 90       	pop	r7
   10380:	6f 90       	pop	r6
   10382:	5f 90       	pop	r5
   10384:	4f 90       	pop	r4
   10386:	3f 90       	pop	r3
   10388:	2f 90       	pop	r2
   1038a:	08 95       	ret

0001038c <dtoa_prf>:
   1038c:	8f 92       	push	r8
   1038e:	9f 92       	push	r9
   10390:	af 92       	push	r10
   10392:	bf 92       	push	r11
   10394:	cf 92       	push	r12
   10396:	df 92       	push	r13
   10398:	ef 92       	push	r14
   1039a:	ff 92       	push	r15
   1039c:	0f 93       	push	r16
   1039e:	1f 93       	push	r17
   103a0:	cf 93       	push	r28
   103a2:	df 93       	push	r29
   103a4:	cd b7       	in	r28, 0x3d	; 61
   103a6:	de b7       	in	r29, 0x3e	; 62
   103a8:	29 97       	sbiw	r28, 0x09	; 9
   103aa:	cd bf       	out	0x3d, r28	; 61
   103ac:	de bf       	out	0x3e, r29	; 62
   103ae:	6a 01       	movw	r12, r20
   103b0:	12 2f       	mov	r17, r18
   103b2:	b0 2e       	mov	r11, r16
   103b4:	2b e3       	ldi	r18, 0x3B	; 59
   103b6:	20 17       	cp	r18, r16
   103b8:	20 f0       	brcs	.+8      	; 0x103c2 <dtoa_prf+0x36>
   103ba:	ff 24       	eor	r15, r15
   103bc:	f3 94       	inc	r15
   103be:	f0 0e       	add	r15, r16
   103c0:	02 c0       	rjmp	.+4      	; 0x103c6 <dtoa_prf+0x3a>
   103c2:	2c e3       	ldi	r18, 0x3C	; 60
   103c4:	f2 2e       	mov	r15, r18
   103c6:	0f 2d       	mov	r16, r15
   103c8:	27 e0       	ldi	r18, 0x07	; 7
   103ca:	ae 01       	movw	r20, r28
   103cc:	4f 5f       	subi	r20, 0xFF	; 255
   103ce:	5f 4f       	sbci	r21, 0xFF	; 255
   103d0:	0e 94 37 83 	call	0x1066e	; 0x1066e <__ftoa_engine>
   103d4:	bc 01       	movw	r22, r24
   103d6:	49 81       	ldd	r20, Y+1	; 0x01
   103d8:	84 2f       	mov	r24, r20
   103da:	89 70       	andi	r24, 0x09	; 9
   103dc:	81 30       	cpi	r24, 0x01	; 1
   103de:	31 f0       	breq	.+12     	; 0x103ec <dtoa_prf+0x60>
   103e0:	e1 fc       	sbrc	r14, 1
   103e2:	06 c0       	rjmp	.+12     	; 0x103f0 <dtoa_prf+0x64>
   103e4:	e0 fe       	sbrs	r14, 0
   103e6:	06 c0       	rjmp	.+12     	; 0x103f4 <dtoa_prf+0x68>
   103e8:	90 e2       	ldi	r25, 0x20	; 32
   103ea:	05 c0       	rjmp	.+10     	; 0x103f6 <dtoa_prf+0x6a>
   103ec:	9d e2       	ldi	r25, 0x2D	; 45
   103ee:	03 c0       	rjmp	.+6      	; 0x103f6 <dtoa_prf+0x6a>
   103f0:	9b e2       	ldi	r25, 0x2B	; 43
   103f2:	01 c0       	rjmp	.+2      	; 0x103f6 <dtoa_prf+0x6a>
   103f4:	90 e0       	ldi	r25, 0x00	; 0
   103f6:	5e 2d       	mov	r21, r14
   103f8:	50 71       	andi	r21, 0x10	; 16
   103fa:	43 ff       	sbrs	r20, 3
   103fc:	3c c0       	rjmp	.+120    	; 0x10476 <dtoa_prf+0xea>
   103fe:	91 11       	cpse	r25, r1
   10400:	02 c0       	rjmp	.+4      	; 0x10406 <dtoa_prf+0x7a>
   10402:	83 e0       	ldi	r24, 0x03	; 3
   10404:	01 c0       	rjmp	.+2      	; 0x10408 <dtoa_prf+0x7c>
   10406:	84 e0       	ldi	r24, 0x04	; 4
   10408:	81 17       	cp	r24, r17
   1040a:	18 f4       	brcc	.+6      	; 0x10412 <dtoa_prf+0x86>
   1040c:	21 2f       	mov	r18, r17
   1040e:	28 1b       	sub	r18, r24
   10410:	01 c0       	rjmp	.+2      	; 0x10414 <dtoa_prf+0x88>
   10412:	20 e0       	ldi	r18, 0x00	; 0
   10414:	51 11       	cpse	r21, r1
   10416:	0b c0       	rjmp	.+22     	; 0x1042e <dtoa_prf+0xa2>
   10418:	f6 01       	movw	r30, r12
   1041a:	82 2f       	mov	r24, r18
   1041c:	30 e2       	ldi	r19, 0x20	; 32
   1041e:	88 23       	and	r24, r24
   10420:	19 f0       	breq	.+6      	; 0x10428 <dtoa_prf+0x9c>
   10422:	31 93       	st	Z+, r19
   10424:	81 50       	subi	r24, 0x01	; 1
   10426:	fb cf       	rjmp	.-10     	; 0x1041e <dtoa_prf+0x92>
   10428:	c2 0e       	add	r12, r18
   1042a:	d1 1c       	adc	r13, r1
   1042c:	20 e0       	ldi	r18, 0x00	; 0
   1042e:	99 23       	and	r25, r25
   10430:	29 f0       	breq	.+10     	; 0x1043c <dtoa_prf+0xb0>
   10432:	d6 01       	movw	r26, r12
   10434:	9c 93       	st	X, r25
   10436:	f6 01       	movw	r30, r12
   10438:	31 96       	adiw	r30, 0x01	; 1
   1043a:	6f 01       	movw	r12, r30
   1043c:	c6 01       	movw	r24, r12
   1043e:	03 96       	adiw	r24, 0x03	; 3
   10440:	e2 fe       	sbrs	r14, 2
   10442:	0a c0       	rjmp	.+20     	; 0x10458 <dtoa_prf+0xcc>
   10444:	3e e4       	ldi	r19, 0x4E	; 78
   10446:	d6 01       	movw	r26, r12
   10448:	3c 93       	st	X, r19
   1044a:	41 e4       	ldi	r20, 0x41	; 65
   1044c:	11 96       	adiw	r26, 0x01	; 1
   1044e:	4c 93       	st	X, r20
   10450:	11 97       	sbiw	r26, 0x01	; 1
   10452:	12 96       	adiw	r26, 0x02	; 2
   10454:	3c 93       	st	X, r19
   10456:	06 c0       	rjmp	.+12     	; 0x10464 <dtoa_prf+0xd8>
   10458:	3e e6       	ldi	r19, 0x6E	; 110
   1045a:	f6 01       	movw	r30, r12
   1045c:	30 83       	st	Z, r19
   1045e:	41 e6       	ldi	r20, 0x61	; 97
   10460:	41 83       	std	Z+1, r20	; 0x01
   10462:	32 83       	std	Z+2, r19	; 0x02
   10464:	fc 01       	movw	r30, r24
   10466:	32 2f       	mov	r19, r18
   10468:	40 e2       	ldi	r20, 0x20	; 32
   1046a:	33 23       	and	r19, r19
   1046c:	09 f4       	brne	.+2      	; 0x10470 <dtoa_prf+0xe4>
   1046e:	42 c0       	rjmp	.+132    	; 0x104f4 <dtoa_prf+0x168>
   10470:	41 93       	st	Z+, r20
   10472:	31 50       	subi	r19, 0x01	; 1
   10474:	fa cf       	rjmp	.-12     	; 0x1046a <dtoa_prf+0xde>
   10476:	42 ff       	sbrs	r20, 2
   10478:	44 c0       	rjmp	.+136    	; 0x10502 <dtoa_prf+0x176>
   1047a:	91 11       	cpse	r25, r1
   1047c:	02 c0       	rjmp	.+4      	; 0x10482 <dtoa_prf+0xf6>
   1047e:	83 e0       	ldi	r24, 0x03	; 3
   10480:	01 c0       	rjmp	.+2      	; 0x10484 <dtoa_prf+0xf8>
   10482:	84 e0       	ldi	r24, 0x04	; 4
   10484:	81 17       	cp	r24, r17
   10486:	18 f4       	brcc	.+6      	; 0x1048e <dtoa_prf+0x102>
   10488:	21 2f       	mov	r18, r17
   1048a:	28 1b       	sub	r18, r24
   1048c:	01 c0       	rjmp	.+2      	; 0x10490 <dtoa_prf+0x104>
   1048e:	20 e0       	ldi	r18, 0x00	; 0
   10490:	51 11       	cpse	r21, r1
   10492:	0b c0       	rjmp	.+22     	; 0x104aa <dtoa_prf+0x11e>
   10494:	f6 01       	movw	r30, r12
   10496:	82 2f       	mov	r24, r18
   10498:	30 e2       	ldi	r19, 0x20	; 32
   1049a:	88 23       	and	r24, r24
   1049c:	19 f0       	breq	.+6      	; 0x104a4 <dtoa_prf+0x118>
   1049e:	31 93       	st	Z+, r19
   104a0:	81 50       	subi	r24, 0x01	; 1
   104a2:	fb cf       	rjmp	.-10     	; 0x1049a <dtoa_prf+0x10e>
   104a4:	c2 0e       	add	r12, r18
   104a6:	d1 1c       	adc	r13, r1
   104a8:	20 e0       	ldi	r18, 0x00	; 0
   104aa:	99 23       	and	r25, r25
   104ac:	29 f0       	breq	.+10     	; 0x104b8 <dtoa_prf+0x12c>
   104ae:	d6 01       	movw	r26, r12
   104b0:	9c 93       	st	X, r25
   104b2:	f6 01       	movw	r30, r12
   104b4:	31 96       	adiw	r30, 0x01	; 1
   104b6:	6f 01       	movw	r12, r30
   104b8:	c6 01       	movw	r24, r12
   104ba:	03 96       	adiw	r24, 0x03	; 3
   104bc:	e2 fe       	sbrs	r14, 2
   104be:	0b c0       	rjmp	.+22     	; 0x104d6 <dtoa_prf+0x14a>
   104c0:	39 e4       	ldi	r19, 0x49	; 73
   104c2:	d6 01       	movw	r26, r12
   104c4:	3c 93       	st	X, r19
   104c6:	3e e4       	ldi	r19, 0x4E	; 78
   104c8:	11 96       	adiw	r26, 0x01	; 1
   104ca:	3c 93       	st	X, r19
   104cc:	11 97       	sbiw	r26, 0x01	; 1
   104ce:	36 e4       	ldi	r19, 0x46	; 70
   104d0:	12 96       	adiw	r26, 0x02	; 2
   104d2:	3c 93       	st	X, r19
   104d4:	07 c0       	rjmp	.+14     	; 0x104e4 <dtoa_prf+0x158>
   104d6:	39 e6       	ldi	r19, 0x69	; 105
   104d8:	f6 01       	movw	r30, r12
   104da:	30 83       	st	Z, r19
   104dc:	3e e6       	ldi	r19, 0x6E	; 110
   104de:	31 83       	std	Z+1, r19	; 0x01
   104e0:	36 e6       	ldi	r19, 0x66	; 102
   104e2:	32 83       	std	Z+2, r19	; 0x02
   104e4:	fc 01       	movw	r30, r24
   104e6:	32 2f       	mov	r19, r18
   104e8:	40 e2       	ldi	r20, 0x20	; 32
   104ea:	33 23       	and	r19, r19
   104ec:	19 f0       	breq	.+6      	; 0x104f4 <dtoa_prf+0x168>
   104ee:	41 93       	st	Z+, r20
   104f0:	31 50       	subi	r19, 0x01	; 1
   104f2:	fb cf       	rjmp	.-10     	; 0x104ea <dtoa_prf+0x15e>
   104f4:	fc 01       	movw	r30, r24
   104f6:	e2 0f       	add	r30, r18
   104f8:	f1 1d       	adc	r31, r1
   104fa:	10 82       	st	Z, r1
   104fc:	8e ef       	ldi	r24, 0xFE	; 254
   104fe:	9f ef       	ldi	r25, 0xFF	; 255
   10500:	a6 c0       	rjmp	.+332    	; 0x1064e <dtoa_prf+0x2c2>
   10502:	21 e0       	ldi	r18, 0x01	; 1
   10504:	30 e0       	ldi	r19, 0x00	; 0
   10506:	91 11       	cpse	r25, r1
   10508:	02 c0       	rjmp	.+4      	; 0x1050e <dtoa_prf+0x182>
   1050a:	20 e0       	ldi	r18, 0x00	; 0
   1050c:	30 e0       	ldi	r19, 0x00	; 0
   1050e:	16 16       	cp	r1, r22
   10510:	17 06       	cpc	r1, r23
   10512:	1c f4       	brge	.+6      	; 0x1051a <dtoa_prf+0x18e>
   10514:	fb 01       	movw	r30, r22
   10516:	31 96       	adiw	r30, 0x01	; 1
   10518:	02 c0       	rjmp	.+4      	; 0x1051e <dtoa_prf+0x192>
   1051a:	e1 e0       	ldi	r30, 0x01	; 1
   1051c:	f0 e0       	ldi	r31, 0x00	; 0
   1051e:	2e 0f       	add	r18, r30
   10520:	3f 1f       	adc	r19, r31
   10522:	bb 20       	and	r11, r11
   10524:	21 f0       	breq	.+8      	; 0x1052e <dtoa_prf+0x1a2>
   10526:	eb 2d       	mov	r30, r11
   10528:	f0 e0       	ldi	r31, 0x00	; 0
   1052a:	31 96       	adiw	r30, 0x01	; 1
   1052c:	02 c0       	rjmp	.+4      	; 0x10532 <dtoa_prf+0x1a6>
   1052e:	e0 e0       	ldi	r30, 0x00	; 0
   10530:	f0 e0       	ldi	r31, 0x00	; 0
   10532:	2e 0f       	add	r18, r30
   10534:	3f 1f       	adc	r19, r31
   10536:	e1 2f       	mov	r30, r17
   10538:	f0 e0       	ldi	r31, 0x00	; 0
   1053a:	2e 17       	cp	r18, r30
   1053c:	3f 07       	cpc	r19, r31
   1053e:	1c f4       	brge	.+6      	; 0x10546 <dtoa_prf+0x1ba>
   10540:	12 1b       	sub	r17, r18
   10542:	21 2f       	mov	r18, r17
   10544:	01 c0       	rjmp	.+2      	; 0x10548 <dtoa_prf+0x1bc>
   10546:	20 e0       	ldi	r18, 0x00	; 0
   10548:	8e 2d       	mov	r24, r14
   1054a:	88 71       	andi	r24, 0x18	; 24
   1054c:	59 f4       	brne	.+22     	; 0x10564 <dtoa_prf+0x1d8>
   1054e:	f6 01       	movw	r30, r12
   10550:	82 2f       	mov	r24, r18
   10552:	30 e2       	ldi	r19, 0x20	; 32
   10554:	88 23       	and	r24, r24
   10556:	19 f0       	breq	.+6      	; 0x1055e <dtoa_prf+0x1d2>
   10558:	31 93       	st	Z+, r19
   1055a:	81 50       	subi	r24, 0x01	; 1
   1055c:	fb cf       	rjmp	.-10     	; 0x10554 <dtoa_prf+0x1c8>
   1055e:	c2 0e       	add	r12, r18
   10560:	d1 1c       	adc	r13, r1
   10562:	20 e0       	ldi	r18, 0x00	; 0
   10564:	99 23       	and	r25, r25
   10566:	29 f0       	breq	.+10     	; 0x10572 <dtoa_prf+0x1e6>
   10568:	d6 01       	movw	r26, r12
   1056a:	9c 93       	st	X, r25
   1056c:	f6 01       	movw	r30, r12
   1056e:	31 96       	adiw	r30, 0x01	; 1
   10570:	6f 01       	movw	r12, r30
   10572:	51 11       	cpse	r21, r1
   10574:	0b c0       	rjmp	.+22     	; 0x1058c <dtoa_prf+0x200>
   10576:	f6 01       	movw	r30, r12
   10578:	82 2f       	mov	r24, r18
   1057a:	90 e3       	ldi	r25, 0x30	; 48
   1057c:	88 23       	and	r24, r24
   1057e:	19 f0       	breq	.+6      	; 0x10586 <dtoa_prf+0x1fa>
   10580:	91 93       	st	Z+, r25
   10582:	81 50       	subi	r24, 0x01	; 1
   10584:	fb cf       	rjmp	.-10     	; 0x1057c <dtoa_prf+0x1f0>
   10586:	c2 0e       	add	r12, r18
   10588:	d1 1c       	adc	r13, r1
   1058a:	20 e0       	ldi	r18, 0x00	; 0
   1058c:	0f 2d       	mov	r16, r15
   1058e:	06 0f       	add	r16, r22
   10590:	9a 81       	ldd	r25, Y+2	; 0x02
   10592:	34 2f       	mov	r19, r20
   10594:	30 71       	andi	r19, 0x10	; 16
   10596:	44 ff       	sbrs	r20, 4
   10598:	03 c0       	rjmp	.+6      	; 0x105a0 <dtoa_prf+0x214>
   1059a:	91 33       	cpi	r25, 0x31	; 49
   1059c:	09 f4       	brne	.+2      	; 0x105a0 <dtoa_prf+0x214>
   1059e:	01 50       	subi	r16, 0x01	; 1
   105a0:	10 16       	cp	r1, r16
   105a2:	24 f4       	brge	.+8      	; 0x105ac <dtoa_prf+0x220>
   105a4:	09 30       	cpi	r16, 0x09	; 9
   105a6:	18 f0       	brcs	.+6      	; 0x105ae <dtoa_prf+0x222>
   105a8:	08 e0       	ldi	r16, 0x08	; 8
   105aa:	01 c0       	rjmp	.+2      	; 0x105ae <dtoa_prf+0x222>
   105ac:	01 e0       	ldi	r16, 0x01	; 1
   105ae:	ab 01       	movw	r20, r22
   105b0:	77 ff       	sbrs	r23, 7
   105b2:	02 c0       	rjmp	.+4      	; 0x105b8 <dtoa_prf+0x22c>
   105b4:	40 e0       	ldi	r20, 0x00	; 0
   105b6:	50 e0       	ldi	r21, 0x00	; 0
   105b8:	fb 01       	movw	r30, r22
   105ba:	e4 1b       	sub	r30, r20
   105bc:	f5 0b       	sbc	r31, r21
   105be:	a1 e0       	ldi	r26, 0x01	; 1
   105c0:	b0 e0       	ldi	r27, 0x00	; 0
   105c2:	ac 0f       	add	r26, r28
   105c4:	bd 1f       	adc	r27, r29
   105c6:	ea 0f       	add	r30, r26
   105c8:	fb 1f       	adc	r31, r27
   105ca:	8e e2       	ldi	r24, 0x2E	; 46
   105cc:	a8 2e       	mov	r10, r24
   105ce:	4b 01       	movw	r8, r22
   105d0:	80 1a       	sub	r8, r16
   105d2:	91 08       	sbc	r9, r1
   105d4:	0b 2d       	mov	r16, r11
   105d6:	10 e0       	ldi	r17, 0x00	; 0
   105d8:	11 95       	neg	r17
   105da:	01 95       	neg	r16
   105dc:	11 09       	sbc	r17, r1
   105de:	4f 3f       	cpi	r20, 0xFF	; 255
   105e0:	bf ef       	ldi	r27, 0xFF	; 255
   105e2:	5b 07       	cpc	r21, r27
   105e4:	21 f4       	brne	.+8      	; 0x105ee <dtoa_prf+0x262>
   105e6:	d6 01       	movw	r26, r12
   105e8:	ac 92       	st	X, r10
   105ea:	11 96       	adiw	r26, 0x01	; 1
   105ec:	6d 01       	movw	r12, r26
   105ee:	64 17       	cp	r22, r20
   105f0:	75 07       	cpc	r23, r21
   105f2:	2c f0       	brlt	.+10     	; 0x105fe <dtoa_prf+0x272>
   105f4:	84 16       	cp	r8, r20
   105f6:	95 06       	cpc	r9, r21
   105f8:	14 f4       	brge	.+4      	; 0x105fe <dtoa_prf+0x272>
   105fa:	81 81       	ldd	r24, Z+1	; 0x01
   105fc:	01 c0       	rjmp	.+2      	; 0x10600 <dtoa_prf+0x274>
   105fe:	80 e3       	ldi	r24, 0x30	; 48
   10600:	41 50       	subi	r20, 0x01	; 1
   10602:	51 09       	sbc	r21, r1
   10604:	31 96       	adiw	r30, 0x01	; 1
   10606:	d6 01       	movw	r26, r12
   10608:	11 96       	adiw	r26, 0x01	; 1
   1060a:	7d 01       	movw	r14, r26
   1060c:	40 17       	cp	r20, r16
   1060e:	51 07       	cpc	r21, r17
   10610:	24 f0       	brlt	.+8      	; 0x1061a <dtoa_prf+0x28e>
   10612:	d6 01       	movw	r26, r12
   10614:	8c 93       	st	X, r24
   10616:	67 01       	movw	r12, r14
   10618:	e2 cf       	rjmp	.-60     	; 0x105de <dtoa_prf+0x252>
   1061a:	64 17       	cp	r22, r20
   1061c:	75 07       	cpc	r23, r21
   1061e:	39 f4       	brne	.+14     	; 0x1062e <dtoa_prf+0x2a2>
   10620:	96 33       	cpi	r25, 0x36	; 54
   10622:	20 f4       	brcc	.+8      	; 0x1062c <dtoa_prf+0x2a0>
   10624:	95 33       	cpi	r25, 0x35	; 53
   10626:	19 f4       	brne	.+6      	; 0x1062e <dtoa_prf+0x2a2>
   10628:	31 11       	cpse	r19, r1
   1062a:	01 c0       	rjmp	.+2      	; 0x1062e <dtoa_prf+0x2a2>
   1062c:	81 e3       	ldi	r24, 0x31	; 49
   1062e:	f6 01       	movw	r30, r12
   10630:	80 83       	st	Z, r24
   10632:	f7 01       	movw	r30, r14
   10634:	82 2f       	mov	r24, r18
   10636:	90 e2       	ldi	r25, 0x20	; 32
   10638:	88 23       	and	r24, r24
   1063a:	19 f0       	breq	.+6      	; 0x10642 <dtoa_prf+0x2b6>
   1063c:	91 93       	st	Z+, r25
   1063e:	81 50       	subi	r24, 0x01	; 1
   10640:	fb cf       	rjmp	.-10     	; 0x10638 <dtoa_prf+0x2ac>
   10642:	f7 01       	movw	r30, r14
   10644:	e2 0f       	add	r30, r18
   10646:	f1 1d       	adc	r31, r1
   10648:	10 82       	st	Z, r1
   1064a:	80 e0       	ldi	r24, 0x00	; 0
   1064c:	90 e0       	ldi	r25, 0x00	; 0
   1064e:	29 96       	adiw	r28, 0x09	; 9
   10650:	cd bf       	out	0x3d, r28	; 61
   10652:	de bf       	out	0x3e, r29	; 62
   10654:	df 91       	pop	r29
   10656:	cf 91       	pop	r28
   10658:	1f 91       	pop	r17
   1065a:	0f 91       	pop	r16
   1065c:	ff 90       	pop	r15
   1065e:	ef 90       	pop	r14
   10660:	df 90       	pop	r13
   10662:	cf 90       	pop	r12
   10664:	bf 90       	pop	r11
   10666:	af 90       	pop	r10
   10668:	9f 90       	pop	r9
   1066a:	8f 90       	pop	r8
   1066c:	08 95       	ret

0001066e <__ftoa_engine>:
   1066e:	28 30       	cpi	r18, 0x08	; 8
   10670:	08 f0       	brcs	.+2      	; 0x10674 <__ftoa_engine+0x6>
   10672:	27 e0       	ldi	r18, 0x07	; 7
   10674:	33 27       	eor	r19, r19
   10676:	da 01       	movw	r26, r20
   10678:	99 0f       	add	r25, r25
   1067a:	31 1d       	adc	r19, r1
   1067c:	87 fd       	sbrc	r24, 7
   1067e:	91 60       	ori	r25, 0x01	; 1
   10680:	00 96       	adiw	r24, 0x00	; 0
   10682:	61 05       	cpc	r22, r1
   10684:	71 05       	cpc	r23, r1
   10686:	39 f4       	brne	.+14     	; 0x10696 <__ftoa_engine+0x28>
   10688:	32 60       	ori	r19, 0x02	; 2
   1068a:	2e 5f       	subi	r18, 0xFE	; 254
   1068c:	3d 93       	st	X+, r19
   1068e:	30 e3       	ldi	r19, 0x30	; 48
   10690:	2a 95       	dec	r18
   10692:	e1 f7       	brne	.-8      	; 0x1068c <__ftoa_engine+0x1e>
   10694:	08 95       	ret
   10696:	9f 3f       	cpi	r25, 0xFF	; 255
   10698:	30 f0       	brcs	.+12     	; 0x106a6 <__ftoa_engine+0x38>
   1069a:	80 38       	cpi	r24, 0x80	; 128
   1069c:	71 05       	cpc	r23, r1
   1069e:	61 05       	cpc	r22, r1
   106a0:	09 f0       	breq	.+2      	; 0x106a4 <__ftoa_engine+0x36>
   106a2:	3c 5f       	subi	r19, 0xFC	; 252
   106a4:	3c 5f       	subi	r19, 0xFC	; 252
   106a6:	3d 93       	st	X+, r19
   106a8:	91 30       	cpi	r25, 0x01	; 1
   106aa:	08 f0       	brcs	.+2      	; 0x106ae <__ftoa_engine+0x40>
   106ac:	80 68       	ori	r24, 0x80	; 128
   106ae:	91 1d       	adc	r25, r1
   106b0:	df 93       	push	r29
   106b2:	cf 93       	push	r28
   106b4:	1f 93       	push	r17
   106b6:	0f 93       	push	r16
   106b8:	ff 92       	push	r15
   106ba:	ef 92       	push	r14
   106bc:	19 2f       	mov	r17, r25
   106be:	98 7f       	andi	r25, 0xF8	; 248
   106c0:	96 95       	lsr	r25
   106c2:	e9 2f       	mov	r30, r25
   106c4:	96 95       	lsr	r25
   106c6:	96 95       	lsr	r25
   106c8:	e9 0f       	add	r30, r25
   106ca:	ff 27       	eor	r31, r31
   106cc:	ea 59       	subi	r30, 0x9A	; 154
   106ce:	fb 4f       	sbci	r31, 0xFB	; 251
   106d0:	99 27       	eor	r25, r25
   106d2:	33 27       	eor	r19, r19
   106d4:	ee 24       	eor	r14, r14
   106d6:	ff 24       	eor	r15, r15
   106d8:	a7 01       	movw	r20, r14
   106da:	e7 01       	movw	r28, r14
   106dc:	05 90       	lpm	r0, Z+
   106de:	08 94       	sec
   106e0:	07 94       	ror	r0
   106e2:	28 f4       	brcc	.+10     	; 0x106ee <__ftoa_engine+0x80>
   106e4:	36 0f       	add	r19, r22
   106e6:	e7 1e       	adc	r14, r23
   106e8:	f8 1e       	adc	r15, r24
   106ea:	49 1f       	adc	r20, r25
   106ec:	51 1d       	adc	r21, r1
   106ee:	66 0f       	add	r22, r22
   106f0:	77 1f       	adc	r23, r23
   106f2:	88 1f       	adc	r24, r24
   106f4:	99 1f       	adc	r25, r25
   106f6:	06 94       	lsr	r0
   106f8:	a1 f7       	brne	.-24     	; 0x106e2 <__ftoa_engine+0x74>
   106fa:	05 90       	lpm	r0, Z+
   106fc:	07 94       	ror	r0
   106fe:	28 f4       	brcc	.+10     	; 0x1070a <__ftoa_engine+0x9c>
   10700:	e7 0e       	add	r14, r23
   10702:	f8 1e       	adc	r15, r24
   10704:	49 1f       	adc	r20, r25
   10706:	56 1f       	adc	r21, r22
   10708:	c1 1d       	adc	r28, r1
   1070a:	77 0f       	add	r23, r23
   1070c:	88 1f       	adc	r24, r24
   1070e:	99 1f       	adc	r25, r25
   10710:	66 1f       	adc	r22, r22
   10712:	06 94       	lsr	r0
   10714:	a1 f7       	brne	.-24     	; 0x106fe <__ftoa_engine+0x90>
   10716:	05 90       	lpm	r0, Z+
   10718:	07 94       	ror	r0
   1071a:	28 f4       	brcc	.+10     	; 0x10726 <__ftoa_engine+0xb8>
   1071c:	f8 0e       	add	r15, r24
   1071e:	49 1f       	adc	r20, r25
   10720:	56 1f       	adc	r21, r22
   10722:	c7 1f       	adc	r28, r23
   10724:	d1 1d       	adc	r29, r1
   10726:	88 0f       	add	r24, r24
   10728:	99 1f       	adc	r25, r25
   1072a:	66 1f       	adc	r22, r22
   1072c:	77 1f       	adc	r23, r23
   1072e:	06 94       	lsr	r0
   10730:	a1 f7       	brne	.-24     	; 0x1071a <__ftoa_engine+0xac>
   10732:	05 90       	lpm	r0, Z+
   10734:	07 94       	ror	r0
   10736:	20 f4       	brcc	.+8      	; 0x10740 <__ftoa_engine+0xd2>
   10738:	49 0f       	add	r20, r25
   1073a:	56 1f       	adc	r21, r22
   1073c:	c7 1f       	adc	r28, r23
   1073e:	d8 1f       	adc	r29, r24
   10740:	99 0f       	add	r25, r25
   10742:	66 1f       	adc	r22, r22
   10744:	77 1f       	adc	r23, r23
   10746:	88 1f       	adc	r24, r24
   10748:	06 94       	lsr	r0
   1074a:	a9 f7       	brne	.-22     	; 0x10736 <__ftoa_engine+0xc8>
   1074c:	84 91       	lpm	r24, Z
   1074e:	10 95       	com	r17
   10750:	17 70       	andi	r17, 0x07	; 7
   10752:	41 f0       	breq	.+16     	; 0x10764 <__ftoa_engine+0xf6>
   10754:	d6 95       	lsr	r29
   10756:	c7 95       	ror	r28
   10758:	57 95       	ror	r21
   1075a:	47 95       	ror	r20
   1075c:	f7 94       	ror	r15
   1075e:	e7 94       	ror	r14
   10760:	1a 95       	dec	r17
   10762:	c1 f7       	brne	.-16     	; 0x10754 <__ftoa_engine+0xe6>
   10764:	ec e0       	ldi	r30, 0x0C	; 12
   10766:	f4 e0       	ldi	r31, 0x04	; 4
   10768:	68 94       	set
   1076a:	15 90       	lpm	r1, Z+
   1076c:	15 91       	lpm	r17, Z+
   1076e:	35 91       	lpm	r19, Z+
   10770:	65 91       	lpm	r22, Z+
   10772:	95 91       	lpm	r25, Z+
   10774:	05 90       	lpm	r0, Z+
   10776:	7f e2       	ldi	r23, 0x2F	; 47
   10778:	73 95       	inc	r23
   1077a:	e1 18       	sub	r14, r1
   1077c:	f1 0a       	sbc	r15, r17
   1077e:	43 0b       	sbc	r20, r19
   10780:	56 0b       	sbc	r21, r22
   10782:	c9 0b       	sbc	r28, r25
   10784:	d0 09       	sbc	r29, r0
   10786:	c0 f7       	brcc	.-16     	; 0x10778 <__ftoa_engine+0x10a>
   10788:	e1 0c       	add	r14, r1
   1078a:	f1 1e       	adc	r15, r17
   1078c:	43 1f       	adc	r20, r19
   1078e:	56 1f       	adc	r21, r22
   10790:	c9 1f       	adc	r28, r25
   10792:	d0 1d       	adc	r29, r0
   10794:	7e f4       	brtc	.+30     	; 0x107b4 <__ftoa_engine+0x146>
   10796:	70 33       	cpi	r23, 0x30	; 48
   10798:	11 f4       	brne	.+4      	; 0x1079e <__ftoa_engine+0x130>
   1079a:	8a 95       	dec	r24
   1079c:	e6 cf       	rjmp	.-52     	; 0x1076a <__ftoa_engine+0xfc>
   1079e:	e8 94       	clt
   107a0:	01 50       	subi	r16, 0x01	; 1
   107a2:	30 f0       	brcs	.+12     	; 0x107b0 <__ftoa_engine+0x142>
   107a4:	08 0f       	add	r16, r24
   107a6:	0a f4       	brpl	.+2      	; 0x107aa <__ftoa_engine+0x13c>
   107a8:	00 27       	eor	r16, r16
   107aa:	02 17       	cp	r16, r18
   107ac:	08 f4       	brcc	.+2      	; 0x107b0 <__ftoa_engine+0x142>
   107ae:	20 2f       	mov	r18, r16
   107b0:	23 95       	inc	r18
   107b2:	02 2f       	mov	r16, r18
   107b4:	7a 33       	cpi	r23, 0x3A	; 58
   107b6:	28 f0       	brcs	.+10     	; 0x107c2 <__ftoa_engine+0x154>
   107b8:	79 e3       	ldi	r23, 0x39	; 57
   107ba:	7d 93       	st	X+, r23
   107bc:	2a 95       	dec	r18
   107be:	e9 f7       	brne	.-6      	; 0x107ba <__ftoa_engine+0x14c>
   107c0:	10 c0       	rjmp	.+32     	; 0x107e2 <__ftoa_engine+0x174>
   107c2:	7d 93       	st	X+, r23
   107c4:	2a 95       	dec	r18
   107c6:	89 f6       	brne	.-94     	; 0x1076a <__ftoa_engine+0xfc>
   107c8:	06 94       	lsr	r0
   107ca:	97 95       	ror	r25
   107cc:	67 95       	ror	r22
   107ce:	37 95       	ror	r19
   107d0:	17 95       	ror	r17
   107d2:	17 94       	ror	r1
   107d4:	e1 18       	sub	r14, r1
   107d6:	f1 0a       	sbc	r15, r17
   107d8:	43 0b       	sbc	r20, r19
   107da:	56 0b       	sbc	r21, r22
   107dc:	c9 0b       	sbc	r28, r25
   107de:	d0 09       	sbc	r29, r0
   107e0:	98 f0       	brcs	.+38     	; 0x10808 <__ftoa_engine+0x19a>
   107e2:	23 95       	inc	r18
   107e4:	7e 91       	ld	r23, -X
   107e6:	73 95       	inc	r23
   107e8:	7a 33       	cpi	r23, 0x3A	; 58
   107ea:	08 f0       	brcs	.+2      	; 0x107ee <__ftoa_engine+0x180>
   107ec:	70 e3       	ldi	r23, 0x30	; 48
   107ee:	7c 93       	st	X, r23
   107f0:	20 13       	cpse	r18, r16
   107f2:	b8 f7       	brcc	.-18     	; 0x107e2 <__ftoa_engine+0x174>
   107f4:	7e 91       	ld	r23, -X
   107f6:	70 61       	ori	r23, 0x10	; 16
   107f8:	7d 93       	st	X+, r23
   107fa:	30 f0       	brcs	.+12     	; 0x10808 <__ftoa_engine+0x19a>
   107fc:	83 95       	inc	r24
   107fe:	71 e3       	ldi	r23, 0x31	; 49
   10800:	7d 93       	st	X+, r23
   10802:	70 e3       	ldi	r23, 0x30	; 48
   10804:	2a 95       	dec	r18
   10806:	e1 f7       	brne	.-8      	; 0x10800 <__ftoa_engine+0x192>
   10808:	11 24       	eor	r1, r1
   1080a:	ef 90       	pop	r14
   1080c:	ff 90       	pop	r15
   1080e:	0f 91       	pop	r16
   10810:	1f 91       	pop	r17
   10812:	cf 91       	pop	r28
   10814:	df 91       	pop	r29
   10816:	99 27       	eor	r25, r25
   10818:	87 fd       	sbrc	r24, 7
   1081a:	90 95       	com	r25
   1081c:	08 95       	ret

0001081e <__ctype_isfalse>:
   1081e:	99 27       	eor	r25, r25
   10820:	88 27       	eor	r24, r24

00010822 <__ctype_istrue>:
   10822:	08 95       	ret

00010824 <strnlen_P>:
   10824:	fc 01       	movw	r30, r24
   10826:	05 90       	lpm	r0, Z+
   10828:	61 50       	subi	r22, 0x01	; 1
   1082a:	70 40       	sbci	r23, 0x00	; 0
   1082c:	01 10       	cpse	r0, r1
   1082e:	d8 f7       	brcc	.-10     	; 0x10826 <strnlen_P+0x2>
   10830:	80 95       	com	r24
   10832:	90 95       	com	r25
   10834:	8e 0f       	add	r24, r30
   10836:	9f 1f       	adc	r25, r31
   10838:	08 95       	ret

0001083a <strcpy>:
   1083a:	fb 01       	movw	r30, r22
   1083c:	dc 01       	movw	r26, r24
   1083e:	01 90       	ld	r0, Z+
   10840:	0d 92       	st	X+, r0
   10842:	00 20       	and	r0, r0
   10844:	e1 f7       	brne	.-8      	; 0x1083e <strcpy+0x4>
   10846:	08 95       	ret

00010848 <strnlen>:
   10848:	fc 01       	movw	r30, r24
   1084a:	61 50       	subi	r22, 0x01	; 1
   1084c:	70 40       	sbci	r23, 0x00	; 0
   1084e:	01 90       	ld	r0, Z+
   10850:	01 10       	cpse	r0, r1
   10852:	d8 f7       	brcc	.-10     	; 0x1084a <strnlen+0x2>
   10854:	80 95       	com	r24
   10856:	90 95       	com	r25
   10858:	8e 0f       	add	r24, r30
   1085a:	9f 1f       	adc	r25, r31
   1085c:	08 95       	ret

0001085e <fputc>:
   1085e:	0f 93       	push	r16
   10860:	1f 93       	push	r17
   10862:	cf 93       	push	r28
   10864:	df 93       	push	r29
   10866:	fb 01       	movw	r30, r22
   10868:	23 81       	ldd	r18, Z+3	; 0x03
   1086a:	21 fd       	sbrc	r18, 1
   1086c:	03 c0       	rjmp	.+6      	; 0x10874 <fputc+0x16>
   1086e:	8f ef       	ldi	r24, 0xFF	; 255
   10870:	9f ef       	ldi	r25, 0xFF	; 255
   10872:	2c c0       	rjmp	.+88     	; 0x108cc <fputc+0x6e>
   10874:	22 ff       	sbrs	r18, 2
   10876:	16 c0       	rjmp	.+44     	; 0x108a4 <fputc+0x46>
   10878:	46 81       	ldd	r20, Z+6	; 0x06
   1087a:	57 81       	ldd	r21, Z+7	; 0x07
   1087c:	24 81       	ldd	r18, Z+4	; 0x04
   1087e:	35 81       	ldd	r19, Z+5	; 0x05
   10880:	42 17       	cp	r20, r18
   10882:	53 07       	cpc	r21, r19
   10884:	44 f4       	brge	.+16     	; 0x10896 <fputc+0x38>
   10886:	a0 81       	ld	r26, Z
   10888:	b1 81       	ldd	r27, Z+1	; 0x01
   1088a:	9d 01       	movw	r18, r26
   1088c:	2f 5f       	subi	r18, 0xFF	; 255
   1088e:	3f 4f       	sbci	r19, 0xFF	; 255
   10890:	20 83       	st	Z, r18
   10892:	31 83       	std	Z+1, r19	; 0x01
   10894:	8c 93       	st	X, r24
   10896:	26 81       	ldd	r18, Z+6	; 0x06
   10898:	37 81       	ldd	r19, Z+7	; 0x07
   1089a:	2f 5f       	subi	r18, 0xFF	; 255
   1089c:	3f 4f       	sbci	r19, 0xFF	; 255
   1089e:	26 83       	std	Z+6, r18	; 0x06
   108a0:	37 83       	std	Z+7, r19	; 0x07
   108a2:	14 c0       	rjmp	.+40     	; 0x108cc <fputc+0x6e>
   108a4:	8b 01       	movw	r16, r22
   108a6:	ec 01       	movw	r28, r24
   108a8:	fb 01       	movw	r30, r22
   108aa:	00 84       	ldd	r0, Z+8	; 0x08
   108ac:	f1 85       	ldd	r31, Z+9	; 0x09
   108ae:	e0 2d       	mov	r30, r0
   108b0:	09 95       	icall
   108b2:	89 2b       	or	r24, r25
   108b4:	e1 f6       	brne	.-72     	; 0x1086e <fputc+0x10>
   108b6:	d8 01       	movw	r26, r16
   108b8:	16 96       	adiw	r26, 0x06	; 6
   108ba:	8d 91       	ld	r24, X+
   108bc:	9c 91       	ld	r25, X
   108be:	17 97       	sbiw	r26, 0x07	; 7
   108c0:	01 96       	adiw	r24, 0x01	; 1
   108c2:	16 96       	adiw	r26, 0x06	; 6
   108c4:	8d 93       	st	X+, r24
   108c6:	9c 93       	st	X, r25
   108c8:	17 97       	sbiw	r26, 0x07	; 7
   108ca:	ce 01       	movw	r24, r28
   108cc:	df 91       	pop	r29
   108ce:	cf 91       	pop	r28
   108d0:	1f 91       	pop	r17
   108d2:	0f 91       	pop	r16
   108d4:	08 95       	ret

000108d6 <__ultoa_invert>:
   108d6:	fa 01       	movw	r30, r20
   108d8:	aa 27       	eor	r26, r26
   108da:	28 30       	cpi	r18, 0x08	; 8
   108dc:	51 f1       	breq	.+84     	; 0x10932 <__ultoa_invert+0x5c>
   108de:	20 31       	cpi	r18, 0x10	; 16
   108e0:	81 f1       	breq	.+96     	; 0x10942 <__ultoa_invert+0x6c>
   108e2:	e8 94       	clt
   108e4:	6f 93       	push	r22
   108e6:	6e 7f       	andi	r22, 0xFE	; 254
   108e8:	6e 5f       	subi	r22, 0xFE	; 254
   108ea:	7f 4f       	sbci	r23, 0xFF	; 255
   108ec:	8f 4f       	sbci	r24, 0xFF	; 255
   108ee:	9f 4f       	sbci	r25, 0xFF	; 255
   108f0:	af 4f       	sbci	r26, 0xFF	; 255
   108f2:	b1 e0       	ldi	r27, 0x01	; 1
   108f4:	3e d0       	rcall	.+124    	; 0x10972 <__ultoa_invert+0x9c>
   108f6:	b4 e0       	ldi	r27, 0x04	; 4
   108f8:	3c d0       	rcall	.+120    	; 0x10972 <__ultoa_invert+0x9c>
   108fa:	67 0f       	add	r22, r23
   108fc:	78 1f       	adc	r23, r24
   108fe:	89 1f       	adc	r24, r25
   10900:	9a 1f       	adc	r25, r26
   10902:	a1 1d       	adc	r26, r1
   10904:	68 0f       	add	r22, r24
   10906:	79 1f       	adc	r23, r25
   10908:	8a 1f       	adc	r24, r26
   1090a:	91 1d       	adc	r25, r1
   1090c:	a1 1d       	adc	r26, r1
   1090e:	6a 0f       	add	r22, r26
   10910:	71 1d       	adc	r23, r1
   10912:	81 1d       	adc	r24, r1
   10914:	91 1d       	adc	r25, r1
   10916:	a1 1d       	adc	r26, r1
   10918:	20 d0       	rcall	.+64     	; 0x1095a <__ultoa_invert+0x84>
   1091a:	09 f4       	brne	.+2      	; 0x1091e <__ultoa_invert+0x48>
   1091c:	68 94       	set
   1091e:	3f 91       	pop	r19
   10920:	2a e0       	ldi	r18, 0x0A	; 10
   10922:	26 9f       	mul	r18, r22
   10924:	11 24       	eor	r1, r1
   10926:	30 19       	sub	r19, r0
   10928:	30 5d       	subi	r19, 0xD0	; 208
   1092a:	31 93       	st	Z+, r19
   1092c:	de f6       	brtc	.-74     	; 0x108e4 <__ultoa_invert+0xe>
   1092e:	cf 01       	movw	r24, r30
   10930:	08 95       	ret
   10932:	46 2f       	mov	r20, r22
   10934:	47 70       	andi	r20, 0x07	; 7
   10936:	40 5d       	subi	r20, 0xD0	; 208
   10938:	41 93       	st	Z+, r20
   1093a:	b3 e0       	ldi	r27, 0x03	; 3
   1093c:	0f d0       	rcall	.+30     	; 0x1095c <__ultoa_invert+0x86>
   1093e:	c9 f7       	brne	.-14     	; 0x10932 <__ultoa_invert+0x5c>
   10940:	f6 cf       	rjmp	.-20     	; 0x1092e <__ultoa_invert+0x58>
   10942:	46 2f       	mov	r20, r22
   10944:	4f 70       	andi	r20, 0x0F	; 15
   10946:	40 5d       	subi	r20, 0xD0	; 208
   10948:	4a 33       	cpi	r20, 0x3A	; 58
   1094a:	18 f0       	brcs	.+6      	; 0x10952 <__ultoa_invert+0x7c>
   1094c:	49 5d       	subi	r20, 0xD9	; 217
   1094e:	31 fd       	sbrc	r19, 1
   10950:	40 52       	subi	r20, 0x20	; 32
   10952:	41 93       	st	Z+, r20
   10954:	02 d0       	rcall	.+4      	; 0x1095a <__ultoa_invert+0x84>
   10956:	a9 f7       	brne	.-22     	; 0x10942 <__ultoa_invert+0x6c>
   10958:	ea cf       	rjmp	.-44     	; 0x1092e <__ultoa_invert+0x58>
   1095a:	b4 e0       	ldi	r27, 0x04	; 4
   1095c:	a6 95       	lsr	r26
   1095e:	97 95       	ror	r25
   10960:	87 95       	ror	r24
   10962:	77 95       	ror	r23
   10964:	67 95       	ror	r22
   10966:	ba 95       	dec	r27
   10968:	c9 f7       	brne	.-14     	; 0x1095c <__ultoa_invert+0x86>
   1096a:	00 97       	sbiw	r24, 0x00	; 0
   1096c:	61 05       	cpc	r22, r1
   1096e:	71 05       	cpc	r23, r1
   10970:	08 95       	ret
   10972:	9b 01       	movw	r18, r22
   10974:	ac 01       	movw	r20, r24
   10976:	0a 2e       	mov	r0, r26
   10978:	06 94       	lsr	r0
   1097a:	57 95       	ror	r21
   1097c:	47 95       	ror	r20
   1097e:	37 95       	ror	r19
   10980:	27 95       	ror	r18
   10982:	ba 95       	dec	r27
   10984:	c9 f7       	brne	.-14     	; 0x10978 <__ultoa_invert+0xa2>
   10986:	62 0f       	add	r22, r18
   10988:	73 1f       	adc	r23, r19
   1098a:	84 1f       	adc	r24, r20
   1098c:	95 1f       	adc	r25, r21
   1098e:	a0 1d       	adc	r26, r0
   10990:	08 95       	ret

00010992 <eeprom_read_byte>:
   10992:	03 d0       	rcall	.+6      	; 0x1099a <eeprom_mapen>
   10994:	80 81       	ld	r24, Z
   10996:	99 27       	eor	r25, r25
   10998:	08 95       	ret

0001099a <eeprom_mapen>:
   1099a:	fc 01       	movw	r30, r24
   1099c:	e0 50       	subi	r30, 0x00	; 0
   1099e:	fc 4e       	sbci	r31, 0xEC	; 236
   109a0:	08 95       	ret

000109a2 <eeprom_read_dword>:
   109a2:	0e 94 cd 84 	call	0x1099a	; 0x1099a <eeprom_mapen>
   109a6:	60 81       	ld	r22, Z
   109a8:	71 81       	ldd	r23, Z+1	; 0x01
   109aa:	82 81       	ldd	r24, Z+2	; 0x02
   109ac:	93 81       	ldd	r25, Z+3	; 0x03
   109ae:	08 95       	ret

000109b0 <eeprom_read_word>:
   109b0:	0e 94 cd 84 	call	0x1099a	; 0x1099a <eeprom_mapen>
   109b4:	80 81       	ld	r24, Z
   109b6:	91 81       	ldd	r25, Z+1	; 0x01
   109b8:	08 95       	ret

000109ba <__divmodqi4>:
   109ba:	87 fb       	bst	r24, 7
   109bc:	08 2e       	mov	r0, r24
   109be:	06 26       	eor	r0, r22
   109c0:	87 fd       	sbrc	r24, 7
   109c2:	81 95       	neg	r24
   109c4:	67 fd       	sbrc	r22, 7
   109c6:	61 95       	neg	r22
   109c8:	0e 94 f2 84 	call	0x109e4	; 0x109e4 <__udivmodqi4>
   109cc:	0e f4       	brtc	.+2      	; 0x109d0 <__divmodqi4_1>
   109ce:	91 95       	neg	r25

000109d0 <__divmodqi4_1>:
   109d0:	07 fc       	sbrc	r0, 7
   109d2:	81 95       	neg	r24

000109d4 <__divmodqi4_exit>:
   109d4:	08 95       	ret

000109d6 <__xload_1>:
   109d6:	57 fd       	sbrc	r21, 7
   109d8:	03 c0       	rjmp	.+6      	; 0x109e0 <__xload_1+0xa>
   109da:	5b bf       	out	0x3b, r21	; 59
   109dc:	67 91       	elpm	r22, Z+
   109de:	08 95       	ret
   109e0:	60 81       	ld	r22, Z
   109e2:	08 95       	ret

000109e4 <__udivmodqi4>:
   109e4:	99 1b       	sub	r25, r25
   109e6:	79 e0       	ldi	r23, 0x09	; 9
   109e8:	04 c0       	rjmp	.+8      	; 0x109f2 <__udivmodqi4_ep>

000109ea <__udivmodqi4_loop>:
   109ea:	99 1f       	adc	r25, r25
   109ec:	96 17       	cp	r25, r22
   109ee:	08 f0       	brcs	.+2      	; 0x109f2 <__udivmodqi4_ep>
   109f0:	96 1b       	sub	r25, r22

000109f2 <__udivmodqi4_ep>:
   109f2:	88 1f       	adc	r24, r24
   109f4:	7a 95       	dec	r23
   109f6:	c9 f7       	brne	.-14     	; 0x109ea <__udivmodqi4_loop>
   109f8:	80 95       	com	r24
   109fa:	08 95       	ret

000109fc <__do_global_dtors>:
   109fc:	12 e0       	ldi	r17, 0x02	; 2
   109fe:	cb ee       	ldi	r28, 0xEB	; 235
   10a00:	d2 e0       	ldi	r29, 0x02	; 2
   10a02:	04 c0       	rjmp	.+8      	; 0x10a0c <__do_global_dtors+0x10>
   10a04:	fe 01       	movw	r30, r28
   10a06:	0e 94 7f 7d 	call	0xfafe	; 0xfafe <__tablejump2__>
   10a0a:	21 96       	adiw	r28, 0x01	; 1
   10a0c:	cd 3e       	cpi	r28, 0xED	; 237
   10a0e:	d1 07       	cpc	r29, r17
   10a10:	c9 f7       	brne	.-14     	; 0x10a04 <__do_global_dtors+0x8>
   10a12:	f8 94       	cli

00010a14 <__stop_program>:
   10a14:	ff cf       	rjmp	.-2      	; 0x10a14 <__stop_program>
