
FlexFox80.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000006d0  00804000  00010660  00010714  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00010660  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000041e  008046d0  008046d0  00010de4  2**0
                  ALLOC
  3 .eeprom       00000053  00810000  00810000  00010de4  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .comment      0000005c  00000000  00000000  00010e37  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00010e94  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 00000c60  00000000  00000000  00010ed8  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000f601  00000000  00000000  00011b38  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000056b5  00000000  00000000  00021139  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000a5d3  00000000  00000000  000267ee  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00002dac  00000000  00000000  00030dc4  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000064d6  00000000  00000000  00033b70  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00005f89  00000000  00000000  0003a046  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000b80  00000000  00000000  0003ffcf  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 58 02 	jmp	0x4b0	; 0x4b0 <__dtors_end>
       4:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
       8:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
       c:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      10:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      14:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      18:	0c 94 a8 10 	jmp	0x2150	; 0x2150 <__vector_6>
      1c:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      20:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      24:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      28:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      2c:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      30:	0c 94 f9 14 	jmp	0x29f2	; 0x29f2 <__vector_12>
      34:	0c 94 ea 6e 	jmp	0xddd4	; 0xddd4 <__vector_13>
      38:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      3c:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      40:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      44:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      48:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      4c:	0c 94 c9 08 	jmp	0x1192	; 0x1192 <__vector_19>
      50:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <__vector_20>
      54:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      58:	0c 94 9d 14 	jmp	0x293a	; 0x293a <__vector_22>
      5c:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      60:	0c 94 3f 37 	jmp	0x6e7e	; 0x6e7e <__vector_24>
      64:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      68:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      6c:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      70:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      74:	0c 94 20 17 	jmp	0x2e40	; 0x2e40 <__vector_29>
      78:	0c 94 93 08 	jmp	0x1126	; 0x1126 <__vector_30>
      7c:	0c 94 5b 0d 	jmp	0x1ab6	; 0x1ab6 <__vector_31>
      80:	0c 94 00 0f 	jmp	0x1e00	; 0x1e00 <__vector_32>
      84:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      88:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      8c:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      90:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      94:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      98:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      9c:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      a0:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      a4:	0c 94 f5 52 	jmp	0xa5ea	; 0xa5ea <__vector_41>
      a8:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      ac:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      b0:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      b4:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      b8:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      bc:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      c0:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      c4:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      c8:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      cc:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      d0:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      d4:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      d8:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      dc:	0c 94 0d 09 	jmp	0x121a	; 0x121a <__vector_55>
      e0:	0c 94 96 0c 	jmp	0x192c	; 0x192c <__vector_56>
      e4:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      e8:	0e 2e       	mov	r0, r30
      ea:	22 2e       	mov	r2, r18
      ec:	38 2e       	mov	r3, r24
      ee:	4e 2e       	mov	r4, r30
      f0:	64 2e       	mov	r6, r20
      f2:	aa 2f       	mov	r26, r26
      f4:	9f 2f       	mov	r25, r31
      f6:	9f 2e       	mov	r9, r31
      f8:	af 2e       	mov	r10, r31
      fa:	c1 2e       	mov	r12, r17
      fc:	d3 2e       	mov	r13, r19
      fe:	e5 2e       	mov	r14, r21
     100:	1f 2f       	mov	r17, r31
     102:	2f 2f       	mov	r18, r31
     104:	41 2f       	mov	r20, r17
     106:	53 2f       	mov	r21, r19
     108:	65 2f       	mov	r22, r21
     10a:	15 48       	sbci	r17, 0x85	; 133
     10c:	22 48       	sbci	r18, 0x82	; 130
     10e:	b9 47       	sbci	r27, 0x79	; 121
     110:	22 48       	sbci	r18, 0x82	; 130
     112:	22 48       	sbci	r18, 0x82	; 130
     114:	22 48       	sbci	r18, 0x82	; 130
     116:	c7 47       	sbci	r28, 0x77	; 119
     118:	22 48       	sbci	r18, 0x82	; 130
     11a:	22 48       	sbci	r18, 0x82	; 130
     11c:	22 48       	sbci	r18, 0x82	; 130
     11e:	11 47       	sbci	r17, 0x71	; 113
     120:	22 48       	sbci	r18, 0x82	; 130
     122:	22 48       	sbci	r18, 0x82	; 130
     124:	22 48       	sbci	r18, 0x82	; 130
     126:	22 48       	sbci	r18, 0x82	; 130
     128:	22 48       	sbci	r18, 0x82	; 130
     12a:	22 48       	sbci	r18, 0x82	; 130
     12c:	22 48       	sbci	r18, 0x82	; 130
     12e:	22 48       	sbci	r18, 0x82	; 130
     130:	22 48       	sbci	r18, 0x82	; 130
     132:	22 48       	sbci	r18, 0x82	; 130
     134:	22 48       	sbci	r18, 0x82	; 130
     136:	22 48       	sbci	r18, 0x82	; 130
     138:	22 48       	sbci	r18, 0x82	; 130
     13a:	22 48       	sbci	r18, 0x82	; 130
     13c:	22 48       	sbci	r18, 0x82	; 130
     13e:	22 48       	sbci	r18, 0x82	; 130
     140:	22 48       	sbci	r18, 0x82	; 130
     142:	22 48       	sbci	r18, 0x82	; 130
     144:	22 48       	sbci	r18, 0x82	; 130
     146:	22 48       	sbci	r18, 0x82	; 130
     148:	41 47       	sbci	r20, 0x71	; 113
     14a:	22 48       	sbci	r18, 0x82	; 130
     14c:	22 48       	sbci	r18, 0x82	; 130
     14e:	22 48       	sbci	r18, 0x82	; 130
     150:	22 48       	sbci	r18, 0x82	; 130
     152:	22 48       	sbci	r18, 0x82	; 130
     154:	22 48       	sbci	r18, 0x82	; 130
     156:	22 48       	sbci	r18, 0x82	; 130
     158:	22 48       	sbci	r18, 0x82	; 130
     15a:	22 48       	sbci	r18, 0x82	; 130
     15c:	22 48       	sbci	r18, 0x82	; 130
     15e:	22 48       	sbci	r18, 0x82	; 130
     160:	22 48       	sbci	r18, 0x82	; 130
     162:	22 48       	sbci	r18, 0x82	; 130
     164:	22 48       	sbci	r18, 0x82	; 130
     166:	22 48       	sbci	r18, 0x82	; 130
     168:	22 48       	sbci	r18, 0x82	; 130
     16a:	22 48       	sbci	r18, 0x82	; 130
     16c:	22 48       	sbci	r18, 0x82	; 130
     16e:	22 48       	sbci	r18, 0x82	; 130
     170:	22 48       	sbci	r18, 0x82	; 130
     172:	71 47       	sbci	r23, 0x71	; 113
     174:	22 48       	sbci	r18, 0x82	; 130
     176:	22 48       	sbci	r18, 0x82	; 130
     178:	22 48       	sbci	r18, 0x82	; 130
     17a:	22 48       	sbci	r18, 0x82	; 130
     17c:	22 48       	sbci	r18, 0x82	; 130
     17e:	22 48       	sbci	r18, 0x82	; 130
     180:	22 48       	sbci	r18, 0x82	; 130
     182:	22 48       	sbci	r18, 0x82	; 130
     184:	a5 47       	sbci	r26, 0x75	; 117
     186:	af 47       	sbci	r26, 0x7F	; 127
     188:	d5 47       	sbci	r29, 0x75	; 117
     18a:	e8 46       	sbci	r30, 0x68	; 104
     18c:	22 48       	sbci	r18, 0x82	; 130
     18e:	22 48       	sbci	r18, 0x82	; 130
     190:	22 48       	sbci	r18, 0x82	; 130
     192:	f6 46       	sbci	r31, 0x66	; 102
     194:	22 48       	sbci	r18, 0x82	; 130
     196:	22 48       	sbci	r18, 0x82	; 130
     198:	22 48       	sbci	r18, 0x82	; 130
     19a:	04 47       	sbci	r16, 0x74	; 116
     19c:	22 48       	sbci	r18, 0x82	; 130
     19e:	df 47       	sbci	r29, 0x7F	; 127
     1a0:	e9 47       	sbci	r30, 0x79	; 121
     1a2:	22 48       	sbci	r18, 0x82	; 130
     1a4:	f4 47       	sbci	r31, 0x74	; 116
     1a6:	22 48       	sbci	r18, 0x82	; 130
     1a8:	ff 47       	sbci	r31, 0x7F	; 127
     1aa:	22 48       	sbci	r18, 0x82	; 130
     1ac:	0a 48       	sbci	r16, 0x8A	; 138
     1ae:	29 55       	subi	r18, 0x59	; 89
     1b0:	3c 55       	subi	r19, 0x5C	; 92
     1b2:	46 55       	subi	r20, 0x56	; 86
     1b4:	50 55       	subi	r21, 0x50	; 80
     1b6:	80 55       	subi	r24, 0x50	; 80
     1b8:	68 55       	subi	r22, 0x58	; 88
     1ba:	98 55       	subi	r25, 0x58	; 88
     1bc:	72 56       	subi	r23, 0x62	; 98
     1be:	88 56       	subi	r24, 0x68	; 104
     1c0:	43 56       	subi	r20, 0x63	; 99
     1c2:	14 56       	subi	r17, 0x64	; 100
     1c4:	e2 55       	subi	r30, 0x52	; 82
     1c6:	b0 55       	subi	r27, 0x50	; 80
     1c8:	4a 5f       	subi	r20, 0xFA	; 250
     1ca:	e1 5e       	subi	r30, 0xE1	; 225
     1cc:	2e 5f       	subi	r18, 0xFE	; 254
     1ce:	58 5f       	subi	r21, 0xF8	; 248
     1d0:	35 5f       	subi	r19, 0xF5	; 245
     1d2:	58 5f       	subi	r21, 0xF8	; 248
     1d4:	fd 5e       	subi	r31, 0xED	; 237
     1d6:	da 5e       	subi	r29, 0xEA	; 234
     1d8:	ef 5e       	subi	r30, 0xEF	; 239
     1da:	f6 5e       	subi	r31, 0xE6	; 230
     1dc:	58 5f       	subi	r21, 0xF8	; 248
     1de:	19 5f       	subi	r17, 0xF9	; 249
     1e0:	cc 5e       	subi	r28, 0xEC	; 236
     1e2:	20 5f       	subi	r18, 0xF0	; 240
     1e4:	c5 5e       	subi	r28, 0xE5	; 229
     1e6:	e8 5e       	subi	r30, 0xE8	; 232
     1e8:	80 5e       	subi	r24, 0xE0	; 224
     1ea:	87 5e       	subi	r24, 0xE7	; 231
     1ec:	8e 5e       	subi	r24, 0xEE	; 238
     1ee:	95 5e       	subi	r25, 0xE5	; 229
     1f0:	9c 5e       	subi	r25, 0xEC	; 236
     1f2:	a3 5e       	subi	r26, 0xE3	; 227
     1f4:	a9 5e       	subi	r26, 0xE9	; 233
     1f6:	b0 5e       	subi	r27, 0xE0	; 224
     1f8:	b7 5e       	subi	r27, 0xE7	; 231
     1fa:	be 5e       	subi	r27, 0xEE	; 238
     1fc:	04 5f       	subi	r16, 0xF4	; 244
     1fe:	0b 5f       	subi	r16, 0xFB	; 251
     200:	51 5f       	subi	r21, 0xF1	; 241
     202:	12 5f       	subi	r17, 0xF2	; 242
     204:	58 5f       	subi	r21, 0xF8	; 248
     206:	d3 5e       	subi	r29, 0xE3	; 227
     208:	3c 5f       	subi	r19, 0xFC	; 252
     20a:	ce 5d       	subi	r28, 0xDE	; 222
     20c:	d5 5d       	subi	r29, 0xD5	; 213
     20e:	dc 5d       	subi	r29, 0xDC	; 220
     210:	e3 5d       	subi	r30, 0xD3	; 211
     212:	ea 5d       	subi	r30, 0xDA	; 218
     214:	f0 5d       	subi	r31, 0xD0	; 208
     216:	f7 5d       	subi	r31, 0xD7	; 215
     218:	fe 5d       	subi	r31, 0xDE	; 222
     21a:	04 5e       	subi	r16, 0xE4	; 228
     21c:	0a 5e       	subi	r16, 0xEA	; 234
     21e:	11 5e       	subi	r17, 0xE1	; 225
     220:	18 5e       	subi	r17, 0xE8	; 232
     222:	1f 5e       	subi	r17, 0xEF	; 239
     224:	26 5e       	subi	r18, 0xE6	; 230
     226:	2d 5e       	subi	r18, 0xED	; 237
     228:	34 5e       	subi	r19, 0xE4	; 228
     22a:	3b 5e       	subi	r19, 0xEB	; 235
     22c:	42 5e       	subi	r20, 0xE2	; 226
     22e:	49 5e       	subi	r20, 0xE9	; 233
     230:	4f 5e       	subi	r20, 0xEF	; 239
     232:	56 5e       	subi	r21, 0xE6	; 230
     234:	5d 5e       	subi	r21, 0xED	; 237
     236:	64 5e       	subi	r22, 0xE4	; 228
     238:	6b 5e       	subi	r22, 0xEB	; 235
     23a:	72 5e       	subi	r23, 0xE2	; 226
     23c:	79 5e       	subi	r23, 0xE9	; 233
     23e:	58 5f       	subi	r21, 0xF8	; 248
     240:	58 5f       	subi	r21, 0xF8	; 248
     242:	58 5f       	subi	r21, 0xF8	; 248
     244:	58 5f       	subi	r21, 0xF8	; 248
     246:	27 5f       	subi	r18, 0xF7	; 247
     248:	58 5f       	subi	r21, 0xF8	; 248
     24a:	58 5f       	subi	r21, 0xF8	; 248
     24c:	58 5f       	subi	r21, 0xF8	; 248
     24e:	58 5f       	subi	r21, 0xF8	; 248
     250:	58 5f       	subi	r21, 0xF8	; 248
     252:	58 5f       	subi	r21, 0xF8	; 248
     254:	58 5f       	subi	r21, 0xF8	; 248
     256:	58 5f       	subi	r21, 0xF8	; 248
     258:	58 5f       	subi	r21, 0xF8	; 248
     25a:	58 5f       	subi	r21, 0xF8	; 248
     25c:	58 5f       	subi	r21, 0xF8	; 248
     25e:	58 5f       	subi	r21, 0xF8	; 248
     260:	58 5f       	subi	r21, 0xF8	; 248
     262:	58 5f       	subi	r21, 0xF8	; 248
     264:	58 5f       	subi	r21, 0xF8	; 248
     266:	58 5f       	subi	r21, 0xF8	; 248
     268:	58 5f       	subi	r21, 0xF8	; 248
     26a:	58 5f       	subi	r21, 0xF8	; 248
     26c:	58 5f       	subi	r21, 0xF8	; 248
     26e:	58 5f       	subi	r21, 0xF8	; 248
     270:	58 5f       	subi	r21, 0xF8	; 248
     272:	58 5f       	subi	r21, 0xF8	; 248
     274:	58 5f       	subi	r21, 0xF8	; 248
     276:	58 5f       	subi	r21, 0xF8	; 248
     278:	58 5f       	subi	r21, 0xF8	; 248
     27a:	58 5f       	subi	r21, 0xF8	; 248
     27c:	58 5f       	subi	r21, 0xF8	; 248
     27e:	58 5f       	subi	r21, 0xF8	; 248
     280:	43 5f       	subi	r20, 0xF3	; 243
     282:	52 76       	andi	r21, 0x62	; 98
     284:	5d 76       	andi	r21, 0x6D	; 109
     286:	68 76       	andi	r22, 0x68	; 104
     288:	73 76       	andi	r23, 0x63	; 99
     28a:	7e 76       	andi	r23, 0x6E	; 110
     28c:	89 76       	andi	r24, 0x69	; 105
     28e:	94 76       	andi	r25, 0x64	; 100
     290:	9f 76       	andi	r25, 0x6F	; 111
     292:	aa 76       	andi	r26, 0x6A	; 106
     294:	b5 76       	andi	r27, 0x65	; 101
     296:	c0 76       	andi	r28, 0x60	; 96
     298:	cb 76       	andi	r28, 0x6B	; 107
     29a:	d6 76       	andi	r29, 0x66	; 102
     29c:	e1 76       	andi	r30, 0x61	; 97
     29e:	ec 76       	andi	r30, 0x6C	; 108
     2a0:	f7 76       	andi	r31, 0x67	; 103
     2a2:	02 77       	andi	r16, 0x72	; 114
     2a4:	0d 77       	andi	r16, 0x7D	; 125

000002a6 <__trampolines_end>:
     2a6:	4e 41       	sbci	r20, 0x1E	; 30
     2a8:	4e 49       	Address 0x000002a8 is out of bounds.
.word	0xffff	; ????

000002a9 <pstr_inity>:
     2a9:	49 4e 49 54 59                                      INITY

000002ae <pstr_inf>:
     2ae:	49 4e 46                                            INF

000002b1 <pwr_m10>:
     2b1:	cd cc cc 3d 0a d7 23 3c 17 b7 d1 38 77 cc 2b 32     ...=..#<...8w.+2
     2c1:	95 95 e6 24 1f b1 4f 0a                             ...$..O.

000002c9 <pwr_p10>:
     2c9:	00 00 20 41 00 00 c8 42 00 40 1c 46 20 bc be 4c     .. A...B.@.F ..L
     2d9:	ca 1b 0e 5a ae c5 9d 74 00 40 7a 10 f3 5a 00 a0     ...Z...t.@z..Z..
     2e9:	72 4e 18 09 00 10 a5 d4 e8 00 00 e8 76 48 17 00     rN..........vH..
     2f9:	00 e4 0b 54 02 00 00 ca 9a 3b 00 00 00 e1 f5 05     ...T.....;......
     309:	00 00 80 96 98 00 00 00 40 42 0f 00 00 00 a0 86     ........@B......
     319:	01 00 00 00 10 27 00 00 00 00 e8 03 00 00 00 00     .....'..........
     329:	64 00 00 00 00 00 0a 00 00 00 00 00 01 00 00 00     d...............
     339:	00 00 2c 76 d8 88 dc 67 4f 08 23 df c1 df ae 59     ..,v...gO.#....Y
     349:	e1 b1 b7 96 e5 e3 e4 53 c6 3a e6 51 99 76 96 e8     .......S.:.Q.v..
     359:	e6 c2 84 26 eb 89 8c 9b 62 ed 40 7c 6f fc ef bc     ...&....b.@|o...
     369:	9c 9f 40 f2 ba a5 6f a5 f4 90 05 5a 2a f7 5c 93     ..@...o....Z*.\.
     379:	6b 6c f9 67 6d c1 1b fc e0 e4 0d 47 fe f5 20 e6     kl.gm......G.. .
     389:	b5 00 d0 ed 90 2e 03 00 94 35 77 05 00 80 84 1e     .........5w.....
     399:	08 00 00 20 4e 0a 00 00 00 c8 0c 33 33 33 33 0f     ... N......3333.
     3a9:	98 6e 12 83 11 41 ef 8d 21 14 89 3b e6 55 16 cf     .n...A..!..;.U..
     3b9:	fe e6 db 18 d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb     ......K8..|.....
     3c9:	e4 24 20 32 84 72 5e 22 81 00 c9 f1 24 ec a1 e5     .$ 2.r^"....$...
     3d9:	3d 27                                               ='

000003db <strfmonths>:
     3db:	4a 61 6e 75 61 72 79 20 46 65 62 72 75 61 72 79     January February
     3eb:	20 4d 61 72 63 68 20 41 70 72 69 6c 20 4d 61 79      March April May
     3fb:	20 4a 75 6e 65 20 4a 75 6c 79 20 41 75 67 75 73      June July Augus
     40b:	74 20 53 65 70 74 65 6d 62 65 72 20 4f 63 74 6f     t September Octo
     41b:	62 65 72 20 4e 6f 76 65 6d 62 65 72 20 44 65 63     ber November Dec
     42b:	65 6d 62 65 72 20 00                                ember .

00000432 <strfwkdays>:
     432:	53 75 6e 64 61 79 20 4d 6f 6e 64 61 79 20 54 75     Sunday Monday Tu
     442:	65 73 64 61 79 20 57 65 64 6e 65 73 64 61 79 20     esday Wednesday 
     452:	54 68 75 72 73 64 61 79 20 46 72 69 64 61 79 20     Thursday Friday 
     462:	53 61 74 75 72 64 61 79 20 00                       Saturday .

0000046c <ascdays>:
     46c:	53 75 6e 4d 6f 6e 54 75 65 57 65 64 54 68 75 46     SunMonTueWedThuF
     47c:	72 69 53 61 74 00                                   riSat.

00000482 <ascmonths>:
     482:	4a 61 6e 46 65 62 4d 61 72 41 70 72 4d 61 79 4a     JanFebMarAprMayJ
     492:	75 6e 4a 75 6c 41 75 67 53 65 70 4f 63 74 4e 6f     unJulAugSepOctNo
     4a2:	76 44 65 63 00 00                                   vDec..

000004a8 <__ctors_start>:
     4a8:	ea 34       	cpi	r30, 0x4A	; 74
     4aa:	bb 37       	cpi	r27, 0x7B	; 123

000004ac <__ctors_end>:
     4ac:	f7 34       	cpi	r31, 0x47	; 71
     4ae:	c8 37       	cpi	r28, 0x78	; 120

000004b0 <__dtors_end>:
     4b0:	11 24       	eor	r1, r1
     4b2:	1f be       	out	0x3f, r1	; 63
     4b4:	cf ef       	ldi	r28, 0xFF	; 255
     4b6:	cd bf       	out	0x3d, r28	; 61
     4b8:	df e7       	ldi	r29, 0x7F	; 127
     4ba:	de bf       	out	0x3e, r29	; 62

000004bc <__do_copy_data>:
     4bc:	16 e4       	ldi	r17, 0x46	; 70
     4be:	a0 e0       	ldi	r26, 0x00	; 0
     4c0:	b0 e4       	ldi	r27, 0x40	; 64
     4c2:	e0 e6       	ldi	r30, 0x60	; 96
     4c4:	f6 e0       	ldi	r31, 0x06	; 6
     4c6:	01 e0       	ldi	r16, 0x01	; 1
     4c8:	0b bf       	out	0x3b, r16	; 59
     4ca:	02 c0       	rjmp	.+4      	; 0x4d0 <__do_copy_data+0x14>
     4cc:	07 90       	elpm	r0, Z+
     4ce:	0d 92       	st	X+, r0
     4d0:	a0 3d       	cpi	r26, 0xD0	; 208
     4d2:	b1 07       	cpc	r27, r17
     4d4:	d9 f7       	brne	.-10     	; 0x4cc <__do_copy_data+0x10>

000004d6 <__do_clear_bss>:
     4d6:	2a e4       	ldi	r18, 0x4A	; 74
     4d8:	a0 ed       	ldi	r26, 0xD0	; 208
     4da:	b6 e4       	ldi	r27, 0x46	; 70
     4dc:	01 c0       	rjmp	.+2      	; 0x4e0 <.do_clear_bss_start>

000004de <.do_clear_bss_loop>:
     4de:	1d 92       	st	X+, r1

000004e0 <.do_clear_bss_start>:
     4e0:	ae 3e       	cpi	r26, 0xEE	; 238
     4e2:	b2 07       	cpc	r27, r18
     4e4:	e1 f7       	brne	.-8      	; 0x4de <.do_clear_bss_loop>

000004e6 <__do_global_ctors>:
     4e6:	12 e0       	ldi	r17, 0x02	; 2
     4e8:	c6 e5       	ldi	r28, 0x56	; 86
     4ea:	d2 e0       	ldi	r29, 0x02	; 2
     4ec:	04 c0       	rjmp	.+8      	; 0x4f6 <__do_global_ctors+0x10>
     4ee:	21 97       	sbiw	r28, 0x01	; 1
     4f0:	fe 01       	movw	r30, r28
     4f2:	0e 94 31 7a 	call	0xf462	; 0xf462 <__tablejump2__>
     4f6:	c4 35       	cpi	r28, 0x54	; 84
     4f8:	d1 07       	cpc	r29, r17
     4fa:	c9 f7       	brne	.-14     	; 0x4ee <__do_global_ctors+0x8>
     4fc:	0e 94 e3 17 	call	0x2fc6	; 0x2fc6 <main>
     500:	0c 94 23 83 	jmp	0x10646	; 0x10646 <__do_global_dtors>

00000504 <__bad_interrupt>:
     504:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000508 <is_leap_year>:
     508:	9c 01       	movw	r18, r24
     50a:	23 70       	andi	r18, 0x03	; 3
     50c:	33 27       	eor	r19, r19
     50e:	23 2b       	or	r18, r19
     510:	59 f4       	brne	.+22     	; 0x528 <is_leap_year+0x20>
     512:	64 e6       	ldi	r22, 0x64	; 100
     514:	70 e0       	ldi	r23, 0x00	; 0
     516:	0e 94 dc 79 	call	0xf3b8	; 0xf3b8 <__divmodhi4>
     51a:	89 2b       	or	r24, r25
     51c:	39 f4       	brne	.+14     	; 0x52c <is_leap_year+0x24>
     51e:	63 70       	andi	r22, 0x03	; 3
     520:	77 27       	eor	r23, r23
     522:	81 e0       	ldi	r24, 0x01	; 1
     524:	67 2b       	or	r22, r23
     526:	19 f0       	breq	.+6      	; 0x52e <is_leap_year+0x26>
     528:	80 e0       	ldi	r24, 0x00	; 0
     52a:	08 95       	ret
     52c:	81 e0       	ldi	r24, 0x01	; 1
     52e:	08 95       	ret

00000530 <localtime>:
     530:	6a ed       	ldi	r22, 0xDA	; 218
     532:	7a e4       	ldi	r23, 0x4A	; 74
     534:	0e 94 9f 02 	call	0x53e	; 0x53e <localtime_r>
     538:	8a ed       	ldi	r24, 0xDA	; 218
     53a:	9a e4       	ldi	r25, 0x4A	; 74
     53c:	08 95       	ret

0000053e <localtime_r>:
     53e:	cf 92       	push	r12
     540:	df 92       	push	r13
     542:	ef 92       	push	r14
     544:	ff 92       	push	r15
     546:	0f 93       	push	r16
     548:	1f 93       	push	r17
     54a:	cf 93       	push	r28
     54c:	df 93       	push	r29
     54e:	00 d0       	rcall	.+0      	; 0x550 <localtime_r+0x12>
     550:	00 d0       	rcall	.+0      	; 0x552 <localtime_r+0x14>
     552:	cd b7       	in	r28, 0x3d	; 61
     554:	de b7       	in	r29, 0x3e	; 62
     556:	6c 01       	movw	r12, r24
     558:	7b 01       	movw	r14, r22
     55a:	e0 91 ea 4a 	lds	r30, 0x4AEA	; 0x804aea <__dst_ptr>
     55e:	f0 91 eb 4a 	lds	r31, 0x4AEB	; 0x804aeb <__dst_ptr+0x1>
     562:	30 97       	sbiw	r30, 0x00	; 0
     564:	29 f0       	breq	.+10     	; 0x570 <localtime_r+0x32>
     566:	66 ee       	ldi	r22, 0xE6	; 230
     568:	7a e4       	ldi	r23, 0x4A	; 74
     56a:	09 95       	icall
     56c:	8c 01       	movw	r16, r24
     56e:	02 c0       	rjmp	.+4      	; 0x574 <localtime_r+0x36>
     570:	0f ef       	ldi	r16, 0xFF	; 255
     572:	1f ef       	ldi	r17, 0xFF	; 255
     574:	f6 01       	movw	r30, r12
     576:	40 81       	ld	r20, Z
     578:	51 81       	ldd	r21, Z+1	; 0x01
     57a:	62 81       	ldd	r22, Z+2	; 0x02
     57c:	73 81       	ldd	r23, Z+3	; 0x03
     57e:	80 91 e6 4a 	lds	r24, 0x4AE6	; 0x804ae6 <__utc_offset>
     582:	90 91 e7 4a 	lds	r25, 0x4AE7	; 0x804ae7 <__utc_offset+0x1>
     586:	a0 91 e8 4a 	lds	r26, 0x4AE8	; 0x804ae8 <__utc_offset+0x2>
     58a:	b0 91 e9 4a 	lds	r27, 0x4AE9	; 0x804ae9 <__utc_offset+0x3>
     58e:	84 0f       	add	r24, r20
     590:	95 1f       	adc	r25, r21
     592:	a6 1f       	adc	r26, r22
     594:	b7 1f       	adc	r27, r23
     596:	10 16       	cp	r1, r16
     598:	11 06       	cpc	r1, r17
     59a:	4c f4       	brge	.+18     	; 0x5ae <localtime_r+0x70>
     59c:	a8 01       	movw	r20, r16
     59e:	01 2e       	mov	r0, r17
     5a0:	00 0c       	add	r0, r0
     5a2:	66 0b       	sbc	r22, r22
     5a4:	77 0b       	sbc	r23, r23
     5a6:	84 0f       	add	r24, r20
     5a8:	95 1f       	adc	r25, r21
     5aa:	a6 1f       	adc	r26, r22
     5ac:	b7 1f       	adc	r27, r23
     5ae:	89 83       	std	Y+1, r24	; 0x01
     5b0:	9a 83       	std	Y+2, r25	; 0x02
     5b2:	ab 83       	std	Y+3, r26	; 0x03
     5b4:	bc 83       	std	Y+4, r27	; 0x04
     5b6:	b7 01       	movw	r22, r14
     5b8:	ce 01       	movw	r24, r28
     5ba:	01 96       	adiw	r24, 0x01	; 1
     5bc:	0e 94 27 07 	call	0xe4e	; 0xe4e <gmtime_r>
     5c0:	f7 01       	movw	r30, r14
     5c2:	02 87       	std	Z+10, r16	; 0x0a
     5c4:	13 87       	std	Z+11, r17	; 0x0b
     5c6:	24 96       	adiw	r28, 0x04	; 4
     5c8:	cd bf       	out	0x3d, r28	; 61
     5ca:	de bf       	out	0x3e, r29	; 62
     5cc:	df 91       	pop	r29
     5ce:	cf 91       	pop	r28
     5d0:	1f 91       	pop	r17
     5d2:	0f 91       	pop	r16
     5d4:	ff 90       	pop	r15
     5d6:	ef 90       	pop	r14
     5d8:	df 90       	pop	r13
     5da:	cf 90       	pop	r12
     5dc:	08 95       	ret

000005de <month_length>:
     5de:	62 30       	cpi	r22, 0x02	; 2
     5e0:	21 f4       	brne	.+8      	; 0x5ea <month_length+0xc>
     5e2:	0e 94 84 02 	call	0x508	; 0x508 <is_leap_year>
     5e6:	84 5e       	subi	r24, 0xE4	; 228
     5e8:	08 95       	ret
     5ea:	68 30       	cpi	r22, 0x08	; 8
     5ec:	08 f0       	brcs	.+2      	; 0x5f0 <month_length+0x12>
     5ee:	6f 5f       	subi	r22, 0xFF	; 255
     5f0:	61 70       	andi	r22, 0x01	; 1
     5f2:	8e e1       	ldi	r24, 0x1E	; 30
     5f4:	86 0f       	add	r24, r22
     5f6:	08 95       	ret

000005f8 <set_system_time>:
     5f8:	0f b6       	in	r0, 0x3f	; 63
     5fa:	f8 94       	cli
     5fc:	60 93 d6 4a 	sts	0x4AD6, r22	; 0x804ad6 <__system_time>
     600:	70 93 d7 4a 	sts	0x4AD7, r23	; 0x804ad7 <__system_time+0x1>
     604:	80 93 d8 4a 	sts	0x4AD8, r24	; 0x804ad8 <__system_time+0x2>
     608:	90 93 d9 4a 	sts	0x4AD9, r25	; 0x804ad9 <__system_time+0x3>
     60c:	0f be       	out	0x3f, r0	; 63
     60e:	08 95       	ret

00000610 <pgm_copystring>:
     610:	cf 92       	push	r12
     612:	df 92       	push	r13
     614:	ef 92       	push	r14
     616:	0f 93       	push	r16
     618:	6b 01       	movw	r12, r22
     61a:	e8 2e       	mov	r14, r24
     61c:	7c 2d       	mov	r23, r12
     61e:	6d 2d       	mov	r22, r13
     620:	5e 2d       	mov	r21, r14
     622:	ae 2d       	mov	r26, r14
     624:	c6 01       	movw	r24, r12
     626:	01 96       	adiw	r24, 0x01	; 1
     628:	a1 1d       	adc	r26, r1
     62a:	44 23       	and	r20, r20
     62c:	51 f0       	breq	.+20     	; 0x642 <pgm_copystring+0x32>
     62e:	6c 01       	movw	r12, r24
     630:	ea 2e       	mov	r14, r26
     632:	e7 2f       	mov	r30, r23
     634:	f6 2f       	mov	r31, r22
     636:	0e 94 10 83 	call	0x10620	; 0x10620 <__xload_1>
     63a:	60 32       	cpi	r22, 0x20	; 32
     63c:	79 f7       	brne	.-34     	; 0x61c <pgm_copystring+0xc>
     63e:	41 50       	subi	r20, 0x01	; 1
     640:	ed cf       	rjmp	.-38     	; 0x61c <pgm_copystring+0xc>
     642:	f6 01       	movw	r30, r12
     644:	0e 94 10 83 	call	0x10620	; 0x10620 <__xload_1>
     648:	6c 01       	movw	r12, r24
     64a:	ea 2e       	mov	r14, r26
     64c:	80 e0       	ldi	r24, 0x00	; 0
     64e:	60 32       	cpi	r22, 0x20	; 32
     650:	39 f4       	brne	.+14     	; 0x660 <pgm_copystring+0x50>
     652:	f9 01       	movw	r30, r18
     654:	10 82       	st	Z, r1
     656:	0f 91       	pop	r16
     658:	ef 90       	pop	r14
     65a:	df 90       	pop	r13
     65c:	cf 90       	pop	r12
     65e:	08 95       	ret
     660:	80 17       	cp	r24, r16
     662:	b9 f3       	breq	.-18     	; 0x652 <pgm_copystring+0x42>
     664:	2f 5f       	subi	r18, 0xFF	; 255
     666:	3f 4f       	sbci	r19, 0xFF	; 255
     668:	f9 01       	movw	r30, r18
     66a:	31 97       	sbiw	r30, 0x01	; 1
     66c:	60 83       	st	Z, r22
     66e:	8f 5f       	subi	r24, 0xFF	; 255
     670:	f6 01       	movw	r30, r12
     672:	5e 2d       	mov	r21, r14
     674:	0e 94 10 83 	call	0x10620	; 0x10620 <__xload_1>
     678:	9f ef       	ldi	r25, 0xFF	; 255
     67a:	c9 1a       	sub	r12, r25
     67c:	d9 0a       	sbc	r13, r25
     67e:	e9 0a       	sbc	r14, r25
     680:	e6 cf       	rjmp	.-52     	; 0x64e <pgm_copystring+0x3e>

00000682 <strftime>:
     682:	2f 92       	push	r2
     684:	3f 92       	push	r3
     686:	4f 92       	push	r4
     688:	5f 92       	push	r5
     68a:	6f 92       	push	r6
     68c:	7f 92       	push	r7
     68e:	8f 92       	push	r8
     690:	9f 92       	push	r9
     692:	af 92       	push	r10
     694:	bf 92       	push	r11
     696:	cf 92       	push	r12
     698:	df 92       	push	r13
     69a:	ef 92       	push	r14
     69c:	ff 92       	push	r15
     69e:	0f 93       	push	r16
     6a0:	1f 93       	push	r17
     6a2:	cf 93       	push	r28
     6a4:	df 93       	push	r29
     6a6:	cd b7       	in	r28, 0x3d	; 61
     6a8:	de b7       	in	r29, 0x3e	; 62
     6aa:	a2 97       	sbiw	r28, 0x22	; 34
     6ac:	cd bf       	out	0x3d, r28	; 61
     6ae:	de bf       	out	0x3e, r29	; 62
     6b0:	2c 01       	movw	r4, r24
     6b2:	69 a3       	std	Y+33, r22	; 0x21
     6b4:	7a a3       	std	Y+34, r23	; 0x22
     6b6:	4a 01       	movw	r8, r20
     6b8:	79 01       	movw	r14, r18
     6ba:	61 2c       	mov	r6, r1
     6bc:	71 2c       	mov	r7, r1
     6be:	9e 01       	movw	r18, r28
     6c0:	2f 5f       	subi	r18, 0xFF	; 255
     6c2:	3f 4f       	sbci	r19, 0xFF	; 255
     6c4:	69 01       	movw	r12, r18
     6c6:	84 e6       	ldi	r24, 0x64	; 100
     6c8:	28 2e       	mov	r2, r24
     6ca:	31 2c       	mov	r3, r1
     6cc:	9e e6       	ldi	r25, 0x6E	; 110
     6ce:	a9 2e       	mov	r10, r25
     6d0:	96 e4       	ldi	r25, 0x46	; 70
     6d2:	b9 2e       	mov	r11, r25
     6d4:	29 a1       	ldd	r18, Y+33	; 0x21
     6d6:	3a a1       	ldd	r19, Y+34	; 0x22
     6d8:	62 16       	cp	r6, r18
     6da:	73 06       	cpc	r7, r19
     6dc:	08 f0       	brcs	.+2      	; 0x6e0 <strftime+0x5e>
     6de:	cd c2       	rjmp	.+1434   	; 0xc7a <strftime+0x5f8>
     6e0:	d4 01       	movw	r26, r8
     6e2:	8c 91       	ld	r24, X
     6e4:	85 32       	cpi	r24, 0x25	; 37
     6e6:	09 f0       	breq	.+2      	; 0x6ea <strftime+0x68>
     6e8:	bc c2       	rjmp	.+1400   	; 0xc62 <strftime+0x5e0>
     6ea:	11 96       	adiw	r26, 0x01	; 1
     6ec:	1c 91       	ld	r17, X
     6ee:	15 34       	cpi	r17, 0x45	; 69
     6f0:	31 f0       	breq	.+12     	; 0x6fe <strftime+0x7c>
     6f2:	1f 34       	cpi	r17, 0x4F	; 79
     6f4:	21 f0       	breq	.+8      	; 0x6fe <strftime+0x7c>
     6f6:	b2 e0       	ldi	r27, 0x02	; 2
     6f8:	8b 0e       	add	r8, r27
     6fa:	91 1c       	adc	r9, r1
     6fc:	06 c0       	rjmp	.+12     	; 0x70a <strftime+0x88>
     6fe:	f4 01       	movw	r30, r8
     700:	12 81       	ldd	r17, Z+2	; 0x02
     702:	94 01       	movw	r18, r8
     704:	2d 5f       	subi	r18, 0xFD	; 253
     706:	3f 4f       	sbci	r19, 0xFF	; 255
     708:	49 01       	movw	r8, r18
     70a:	19 35       	cpi	r17, 0x59	; 89
     70c:	09 f4       	brne	.+2      	; 0x710 <strftime+0x8e>
     70e:	32 c2       	rjmp	.+1124   	; 0xb74 <strftime+0x4f2>
     710:	0c f0       	brlt	.+2      	; 0x714 <strftime+0x92>
     712:	60 c0       	rjmp	.+192    	; 0x7d4 <strftime+0x152>
     714:	19 34       	cpi	r17, 0x49	; 73
     716:	09 f4       	brne	.+2      	; 0x71a <strftime+0x98>
     718:	3f c1       	rjmp	.+638    	; 0x998 <strftime+0x316>
     71a:	44 f5       	brge	.+80     	; 0x76c <strftime+0xea>
     71c:	13 34       	cpi	r17, 0x43	; 67
     71e:	09 f4       	brne	.+2      	; 0x722 <strftime+0xa0>
     720:	e7 c0       	rjmp	.+462    	; 0x8f0 <strftime+0x26e>
     722:	54 f4       	brge	.+20     	; 0x738 <strftime+0xb6>
     724:	11 34       	cpi	r17, 0x41	; 65
     726:	09 f4       	brne	.+2      	; 0x72a <strftime+0xa8>
     728:	be c0       	rjmp	.+380    	; 0x8a6 <strftime+0x224>
     72a:	0c f0       	brlt	.+2      	; 0x72e <strftime+0xac>
     72c:	ca c0       	rjmp	.+404    	; 0x8c2 <strftime+0x240>
     72e:	15 32       	cpi	r17, 0x25	; 37
     730:	09 f0       	breq	.+2      	; 0x734 <strftime+0xb2>
     732:	74 c2       	rjmp	.+1256   	; 0xc1c <strftime+0x59a>
     734:	19 83       	std	Y+1, r17	; 0x01
     736:	75 c2       	rjmp	.+1258   	; 0xc22 <strftime+0x5a0>
     738:	16 34       	cpi	r17, 0x46	; 70
     73a:	09 f4       	brne	.+2      	; 0x73e <strftime+0xbc>
     73c:	ea c0       	rjmp	.+468    	; 0x912 <strftime+0x290>
     73e:	64 f4       	brge	.+24     	; 0x758 <strftime+0xd6>
     740:	14 34       	cpi	r17, 0x44	; 68
     742:	09 f0       	breq	.+2      	; 0x746 <strftime+0xc4>
     744:	6b c2       	rjmp	.+1238   	; 0xc1c <strftime+0x59a>
     746:	f7 01       	movw	r30, r14
     748:	86 81       	ldd	r24, Z+6	; 0x06
     74a:	97 81       	ldd	r25, Z+7	; 0x07
     74c:	b1 01       	movw	r22, r2
     74e:	0e 94 dc 79 	call	0xf3b8	; 0xf3b8 <__divmodhi4>
     752:	9f 93       	push	r25
     754:	8f 93       	push	r24
     756:	e7 c1       	rjmp	.+974    	; 0xb26 <strftime+0x4a4>
     758:	17 34       	cpi	r17, 0x47	; 71
     75a:	09 f4       	brne	.+2      	; 0x75e <strftime+0xdc>
     75c:	f8 c0       	rjmp	.+496    	; 0x94e <strftime+0x2cc>
     75e:	18 34       	cpi	r17, 0x48	; 72
     760:	09 f0       	breq	.+2      	; 0x764 <strftime+0xe2>
     762:	5c c2       	rjmp	.+1208   	; 0xc1c <strftime+0x59a>
     764:	d7 01       	movw	r26, r14
     766:	12 96       	adiw	r26, 0x02	; 2
     768:	8c 91       	ld	r24, X
     76a:	30 c1       	rjmp	.+608    	; 0x9cc <strftime+0x34a>
     76c:	14 35       	cpi	r17, 0x54	; 84
     76e:	09 f4       	brne	.+2      	; 0x772 <strftime+0xf0>
     770:	89 c1       	rjmp	.+786    	; 0xa84 <strftime+0x402>
     772:	64 f4       	brge	.+24     	; 0x78c <strftime+0x10a>
     774:	12 35       	cpi	r17, 0x52	; 82
     776:	09 f4       	brne	.+2      	; 0x77a <strftime+0xf8>
     778:	6e c1       	rjmp	.+732    	; 0xa56 <strftime+0x3d4>
     77a:	0c f0       	brlt	.+2      	; 0x77e <strftime+0xfc>
     77c:	25 c1       	rjmp	.+586    	; 0x9c8 <strftime+0x346>
     77e:	1d 34       	cpi	r17, 0x4D	; 77
     780:	09 f0       	breq	.+2      	; 0x784 <strftime+0x102>
     782:	4c c2       	rjmp	.+1176   	; 0xc1c <strftime+0x59a>
     784:	d7 01       	movw	r26, r14
     786:	11 96       	adiw	r26, 0x01	; 1
     788:	8c 91       	ld	r24, X
     78a:	20 c1       	rjmp	.+576    	; 0x9cc <strftime+0x34a>
     78c:	16 35       	cpi	r17, 0x56	; 86
     78e:	09 f4       	brne	.+2      	; 0x792 <strftime+0x110>
     790:	a5 c1       	rjmp	.+842    	; 0xadc <strftime+0x45a>
     792:	0c f4       	brge	.+2      	; 0x796 <strftime+0x114>
     794:	a1 c1       	rjmp	.+834    	; 0xad8 <strftime+0x456>
     796:	17 35       	cpi	r17, 0x57	; 87
     798:	09 f4       	brne	.+2      	; 0x79c <strftime+0x11a>
     79a:	b4 c1       	rjmp	.+872    	; 0xb04 <strftime+0x482>
     79c:	18 35       	cpi	r17, 0x58	; 88
     79e:	09 f0       	breq	.+2      	; 0x7a2 <strftime+0x120>
     7a0:	3d c2       	rjmp	.+1146   	; 0xc1c <strftime+0x59a>
     7a2:	f7 01       	movw	r30, r14
     7a4:	80 81       	ld	r24, Z
     7a6:	28 2f       	mov	r18, r24
     7a8:	08 2e       	mov	r0, r24
     7aa:	00 0c       	add	r0, r0
     7ac:	33 0b       	sbc	r19, r19
     7ae:	3f 93       	push	r19
     7b0:	8f 93       	push	r24
     7b2:	81 81       	ldd	r24, Z+1	; 0x01
     7b4:	28 2f       	mov	r18, r24
     7b6:	08 2e       	mov	r0, r24
     7b8:	00 0c       	add	r0, r0
     7ba:	33 0b       	sbc	r19, r19
     7bc:	3f 93       	push	r19
     7be:	8f 93       	push	r24
     7c0:	82 81       	ldd	r24, Z+2	; 0x02
     7c2:	28 2f       	mov	r18, r24
     7c4:	08 2e       	mov	r0, r24
     7c6:	00 0c       	add	r0, r0
     7c8:	33 0b       	sbc	r19, r19
     7ca:	3f 93       	push	r19
     7cc:	8f 93       	push	r24
     7ce:	86 eb       	ldi	r24, 0xB6	; 182
     7d0:	96 e4       	ldi	r25, 0x46	; 70
     7d2:	c0 c1       	rjmp	.+896    	; 0xb54 <strftime+0x4d2>
     7d4:	1d 36       	cpi	r17, 0x6D	; 109
     7d6:	09 f4       	brne	.+2      	; 0x7da <strftime+0x158>
     7d8:	f0 c0       	rjmp	.+480    	; 0x9ba <strftime+0x338>
     7da:	ac f5       	brge	.+106    	; 0x846 <strftime+0x1c4>
     7dc:	14 36       	cpi	r17, 0x64	; 100
     7de:	09 f4       	brne	.+2      	; 0x7e2 <strftime+0x160>
     7e0:	94 c0       	rjmp	.+296    	; 0x90a <strftime+0x288>
     7e2:	74 f4       	brge	.+28     	; 0x800 <strftime+0x17e>
     7e4:	12 36       	cpi	r17, 0x62	; 98
     7e6:	09 f4       	brne	.+2      	; 0x7ea <strftime+0x168>
     7e8:	66 c0       	rjmp	.+204    	; 0x8b6 <strftime+0x234>
     7ea:	0c f0       	brlt	.+2      	; 0x7ee <strftime+0x16c>
     7ec:	75 c0       	rjmp	.+234    	; 0x8d8 <strftime+0x256>
     7ee:	11 36       	cpi	r17, 0x61	; 97
     7f0:	09 f0       	breq	.+2      	; 0x7f4 <strftime+0x172>
     7f2:	14 c2       	rjmp	.+1064   	; 0xc1c <strftime+0x59a>
     7f4:	03 e0       	ldi	r16, 0x03	; 3
     7f6:	96 01       	movw	r18, r12
     7f8:	d7 01       	movw	r26, r14
     7fa:	14 96       	adiw	r26, 0x04	; 4
     7fc:	4c 91       	ld	r20, X
     7fe:	57 c0       	rjmp	.+174    	; 0x8ae <strftime+0x22c>
     800:	17 36       	cpi	r17, 0x67	; 103
     802:	09 f4       	brne	.+2      	; 0x806 <strftime+0x184>
     804:	a4 c0       	rjmp	.+328    	; 0x94e <strftime+0x2cc>
     806:	74 f4       	brge	.+28     	; 0x824 <strftime+0x1a2>
     808:	15 36       	cpi	r17, 0x65	; 101
     80a:	09 f0       	breq	.+2      	; 0x80e <strftime+0x18c>
     80c:	07 c2       	rjmp	.+1038   	; 0xc1c <strftime+0x59a>
     80e:	f7 01       	movw	r30, r14
     810:	83 81       	ldd	r24, Z+3	; 0x03
     812:	28 2f       	mov	r18, r24
     814:	08 2e       	mov	r0, r24
     816:	00 0c       	add	r0, r0
     818:	33 0b       	sbc	r19, r19
     81a:	3f 93       	push	r19
     81c:	8f 93       	push	r24
     81e:	83 e7       	ldi	r24, 0x73	; 115
     820:	96 e4       	ldi	r25, 0x46	; 70
     822:	c8 c0       	rjmp	.+400    	; 0x9b4 <strftime+0x332>
     824:	18 36       	cpi	r17, 0x68	; 104
     826:	09 f4       	brne	.+2      	; 0x82a <strftime+0x1a8>
     828:	46 c0       	rjmp	.+140    	; 0x8b6 <strftime+0x234>
     82a:	1a 36       	cpi	r17, 0x6A	; 106
     82c:	09 f0       	breq	.+2      	; 0x830 <strftime+0x1ae>
     82e:	f6 c1       	rjmp	.+1004   	; 0xc1c <strftime+0x59a>
     830:	d7 01       	movw	r26, r14
     832:	18 96       	adiw	r26, 0x08	; 8
     834:	8d 91       	ld	r24, X+
     836:	9c 91       	ld	r25, X
     838:	19 97       	sbiw	r26, 0x09	; 9
     83a:	01 96       	adiw	r24, 0x01	; 1
     83c:	9f 93       	push	r25
     83e:	8f 93       	push	r24
     840:	89 e8       	ldi	r24, 0x89	; 137
     842:	96 e4       	ldi	r25, 0x46	; 70
     844:	b7 c0       	rjmp	.+366    	; 0x9b4 <strftime+0x332>
     846:	15 37       	cpi	r17, 0x75	; 117
     848:	09 f4       	brne	.+2      	; 0x84c <strftime+0x1ca>
     84a:	35 c1       	rjmp	.+618    	; 0xab6 <strftime+0x434>
     84c:	b4 f4       	brge	.+44     	; 0x87a <strftime+0x1f8>
     84e:	10 37       	cpi	r17, 0x70	; 112
     850:	09 f4       	brne	.+2      	; 0x854 <strftime+0x1d2>
     852:	c2 c0       	rjmp	.+388    	; 0x9d8 <strftime+0x356>
     854:	34 f4       	brge	.+12     	; 0x862 <strftime+0x1e0>
     856:	1e 36       	cpi	r17, 0x6E	; 110
     858:	09 f0       	breq	.+2      	; 0x85c <strftime+0x1da>
     85a:	e0 c1       	rjmp	.+960    	; 0xc1c <strftime+0x59a>
     85c:	8a e0       	ldi	r24, 0x0A	; 10
     85e:	89 83       	std	Y+1, r24	; 0x01
     860:	e0 c1       	rjmp	.+960    	; 0xc22 <strftime+0x5a0>
     862:	12 37       	cpi	r17, 0x72	; 114
     864:	09 f4       	brne	.+2      	; 0x868 <strftime+0x1e6>
     866:	c6 c0       	rjmp	.+396    	; 0x9f4 <strftime+0x372>
     868:	14 37       	cpi	r17, 0x74	; 116
     86a:	09 f0       	breq	.+2      	; 0x86e <strftime+0x1ec>
     86c:	d7 c1       	rjmp	.+942    	; 0xc1c <strftime+0x59a>
     86e:	6f e9       	ldi	r22, 0x9F	; 159
     870:	76 e4       	ldi	r23, 0x46	; 70
     872:	c6 01       	movw	r24, r12
     874:	0e 94 0c 7c 	call	0xf818	; 0xf818 <strcpy>
     878:	d4 c1       	rjmp	.+936    	; 0xc22 <strftime+0x5a0>
     87a:	18 37       	cpi	r17, 0x78	; 120
     87c:	09 f4       	brne	.+2      	; 0x880 <strftime+0x1fe>
     87e:	48 c1       	rjmp	.+656    	; 0xb10 <strftime+0x48e>
     880:	5c f4       	brge	.+22     	; 0x898 <strftime+0x216>
     882:	17 37       	cpi	r17, 0x77	; 119
     884:	09 f0       	breq	.+2      	; 0x888 <strftime+0x206>
     886:	ca c1       	rjmp	.+916    	; 0xc1c <strftime+0x59a>
     888:	f7 01       	movw	r30, r14
     88a:	84 81       	ldd	r24, Z+4	; 0x04
     88c:	28 2f       	mov	r18, r24
     88e:	08 2e       	mov	r0, r24
     890:	00 0c       	add	r0, r0
     892:	33 0b       	sbc	r19, r19
     894:	3f 93       	push	r19
     896:	74 c1       	rjmp	.+744    	; 0xb80 <strftime+0x4fe>
     898:	19 37       	cpi	r17, 0x79	; 121
     89a:	09 f4       	brne	.+2      	; 0x89e <strftime+0x21c>
     89c:	5e c1       	rjmp	.+700    	; 0xb5a <strftime+0x4d8>
     89e:	1a 37       	cpi	r17, 0x7A	; 122
     8a0:	09 f4       	brne	.+2      	; 0x8a4 <strftime+0x222>
     8a2:	7e c1       	rjmp	.+764    	; 0xba0 <strftime+0x51e>
     8a4:	bb c1       	rjmp	.+886    	; 0xc1c <strftime+0x59a>
     8a6:	0f ef       	ldi	r16, 0xFF	; 255
     8a8:	96 01       	movw	r18, r12
     8aa:	f7 01       	movw	r30, r14
     8ac:	44 81       	ldd	r20, Z+4	; 0x04
     8ae:	62 e3       	ldi	r22, 0x32	; 50
     8b0:	74 e0       	ldi	r23, 0x04	; 4
     8b2:	80 e0       	ldi	r24, 0x00	; 0
     8b4:	0d c0       	rjmp	.+26     	; 0x8d0 <strftime+0x24e>
     8b6:	03 e0       	ldi	r16, 0x03	; 3
     8b8:	96 01       	movw	r18, r12
     8ba:	d7 01       	movw	r26, r14
     8bc:	15 96       	adiw	r26, 0x05	; 5
     8be:	4c 91       	ld	r20, X
     8c0:	04 c0       	rjmp	.+8      	; 0x8ca <strftime+0x248>
     8c2:	0f ef       	ldi	r16, 0xFF	; 255
     8c4:	96 01       	movw	r18, r12
     8c6:	f7 01       	movw	r30, r14
     8c8:	45 81       	ldd	r20, Z+5	; 0x05
     8ca:	6b ed       	ldi	r22, 0xDB	; 219
     8cc:	73 e0       	ldi	r23, 0x03	; 3
     8ce:	80 e0       	ldi	r24, 0x00	; 0
     8d0:	0e 94 08 03 	call	0x610	; 0x610 <pgm_copystring>
     8d4:	90 e0       	ldi	r25, 0x00	; 0
     8d6:	a7 c1       	rjmp	.+846    	; 0xc26 <strftime+0x5a4>
     8d8:	b6 01       	movw	r22, r12
     8da:	c7 01       	movw	r24, r14
     8dc:	0e 94 a4 06 	call	0xd48	; 0xd48 <asctime_r>
     8e0:	f6 01       	movw	r30, r12
     8e2:	cf 01       	movw	r24, r30
     8e4:	8c 19       	sub	r24, r12
     8e6:	9d 09       	sbc	r25, r13
     8e8:	21 91       	ld	r18, Z+
     8ea:	21 11       	cpse	r18, r1
     8ec:	fa cf       	rjmp	.-12     	; 0x8e2 <strftime+0x260>
     8ee:	9b c1       	rjmp	.+822    	; 0xc26 <strftime+0x5a4>
     8f0:	d7 01       	movw	r26, r14
     8f2:	16 96       	adiw	r26, 0x06	; 6
     8f4:	8d 91       	ld	r24, X+
     8f6:	9c 91       	ld	r25, X
     8f8:	17 97       	sbiw	r26, 0x07	; 7
     8fa:	84 59       	subi	r24, 0x94	; 148
     8fc:	98 4f       	sbci	r25, 0xF8	; 248
     8fe:	b1 01       	movw	r22, r2
     900:	0e 94 dc 79 	call	0xf3b8	; 0xf3b8 <__divmodhi4>
     904:	7f 93       	push	r23
     906:	6f 93       	push	r22
     908:	3b c0       	rjmp	.+118    	; 0x980 <strftime+0x2fe>
     90a:	d7 01       	movw	r26, r14
     90c:	13 96       	adiw	r26, 0x03	; 3
     90e:	8c 91       	ld	r24, X
     910:	5d c0       	rjmp	.+186    	; 0x9cc <strftime+0x34a>
     912:	d7 01       	movw	r26, r14
     914:	13 96       	adiw	r26, 0x03	; 3
     916:	8c 91       	ld	r24, X
     918:	13 97       	sbiw	r26, 0x03	; 3
     91a:	28 2f       	mov	r18, r24
     91c:	08 2e       	mov	r0, r24
     91e:	00 0c       	add	r0, r0
     920:	33 0b       	sbc	r19, r19
     922:	3f 93       	push	r19
     924:	8f 93       	push	r24
     926:	15 96       	adiw	r26, 0x05	; 5
     928:	8c 91       	ld	r24, X
     92a:	15 97       	sbiw	r26, 0x05	; 5
     92c:	08 2e       	mov	r0, r24
     92e:	00 0c       	add	r0, r0
     930:	99 0b       	sbc	r25, r25
     932:	01 96       	adiw	r24, 0x01	; 1
     934:	9f 93       	push	r25
     936:	8f 93       	push	r24
     938:	16 96       	adiw	r26, 0x06	; 6
     93a:	8d 91       	ld	r24, X+
     93c:	9c 91       	ld	r25, X
     93e:	17 97       	sbiw	r26, 0x07	; 7
     940:	84 59       	subi	r24, 0x94	; 148
     942:	98 4f       	sbci	r25, 0xF8	; 248
     944:	9f 93       	push	r25
     946:	8f 93       	push	r24
     948:	87 e7       	ldi	r24, 0x77	; 119
     94a:	96 e4       	ldi	r25, 0x46	; 70
     94c:	03 c1       	rjmp	.+518    	; 0xb54 <strftime+0x4d2>
     94e:	d7 01       	movw	r26, r14
     950:	18 96       	adiw	r26, 0x08	; 8
     952:	6d 91       	ld	r22, X+
     954:	7c 91       	ld	r23, X
     956:	19 97       	sbiw	r26, 0x09	; 9
     958:	16 96       	adiw	r26, 0x06	; 6
     95a:	8d 91       	ld	r24, X+
     95c:	9c 91       	ld	r25, X
     95e:	17 97       	sbiw	r26, 0x07	; 7
     960:	ae 01       	movw	r20, r28
     962:	45 5e       	subi	r20, 0xE5	; 229
     964:	5f 4f       	sbci	r21, 0xFF	; 255
     966:	84 59       	subi	r24, 0x94	; 148
     968:	98 4f       	sbci	r25, 0xF8	; 248
     96a:	0e 94 fd 07 	call	0xffa	; 0xffa <iso_week_date_r>
     96e:	17 36       	cpi	r17, 0x67	; 103
     970:	51 f4       	brne	.+20     	; 0x986 <strftime+0x304>
     972:	8b 8d       	ldd	r24, Y+27	; 0x1b
     974:	9c 8d       	ldd	r25, Y+28	; 0x1c
     976:	b1 01       	movw	r22, r2
     978:	0e 94 dc 79 	call	0xf3b8	; 0xf3b8 <__divmodhi4>
     97c:	9f 93       	push	r25
     97e:	8f 93       	push	r24
     980:	ef e7       	ldi	r30, 0x7F	; 127
     982:	f6 e4       	ldi	r31, 0x46	; 70
     984:	a6 c0       	rjmp	.+332    	; 0xad2 <strftime+0x450>
     986:	8c 8d       	ldd	r24, Y+28	; 0x1c
     988:	8f 93       	push	r24
     98a:	8b 8d       	ldd	r24, Y+27	; 0x1b
     98c:	8f 93       	push	r24
     98e:	44 e8       	ldi	r20, 0x84	; 132
     990:	56 e4       	ldi	r21, 0x46	; 70
     992:	5f 93       	push	r21
     994:	4f 93       	push	r20
     996:	f9 c0       	rjmp	.+498    	; 0xb8a <strftime+0x508>
     998:	f7 01       	movw	r30, r14
     99a:	82 81       	ldd	r24, Z+2	; 0x02
     99c:	6c e0       	ldi	r22, 0x0C	; 12
     99e:	0e 94 02 83 	call	0x10604	; 0x10604 <__divmodqi4>
     9a2:	99 23       	and	r25, r25
     9a4:	21 f0       	breq	.+8      	; 0x9ae <strftime+0x32c>
     9a6:	89 2f       	mov	r24, r25
     9a8:	99 0f       	add	r25, r25
     9aa:	99 0b       	sbc	r25, r25
     9ac:	de c0       	rjmp	.+444    	; 0xb6a <strftime+0x4e8>
     9ae:	8c e0       	ldi	r24, 0x0C	; 12
     9b0:	90 e0       	ldi	r25, 0x00	; 0
     9b2:	db c0       	rjmp	.+438    	; 0xb6a <strftime+0x4e8>
     9b4:	9f 93       	push	r25
     9b6:	8f 93       	push	r24
     9b8:	e8 c0       	rjmp	.+464    	; 0xb8a <strftime+0x508>
     9ba:	f7 01       	movw	r30, r14
     9bc:	85 81       	ldd	r24, Z+5	; 0x05
     9be:	08 2e       	mov	r0, r24
     9c0:	00 0c       	add	r0, r0
     9c2:	99 0b       	sbc	r25, r25
     9c4:	01 96       	adiw	r24, 0x01	; 1
     9c6:	d1 c0       	rjmp	.+418    	; 0xb6a <strftime+0x4e8>
     9c8:	d7 01       	movw	r26, r14
     9ca:	8c 91       	ld	r24, X
     9cc:	28 2f       	mov	r18, r24
     9ce:	08 2e       	mov	r0, r24
     9d0:	00 0c       	add	r0, r0
     9d2:	33 0b       	sbc	r19, r19
     9d4:	3f 93       	push	r19
     9d6:	ca c0       	rjmp	.+404    	; 0xb6c <strftime+0x4ea>
     9d8:	81 e4       	ldi	r24, 0x41	; 65
     9da:	89 83       	std	Y+1, r24	; 0x01
     9dc:	f7 01       	movw	r30, r14
     9de:	82 81       	ldd	r24, Z+2	; 0x02
     9e0:	8c 30       	cpi	r24, 0x0C	; 12
     9e2:	14 f0       	brlt	.+4      	; 0x9e8 <strftime+0x366>
     9e4:	80 e5       	ldi	r24, 0x50	; 80
     9e6:	89 83       	std	Y+1, r24	; 0x01
     9e8:	8d e4       	ldi	r24, 0x4D	; 77
     9ea:	8a 83       	std	Y+2, r24	; 0x02
     9ec:	1b 82       	std	Y+3, r1	; 0x03
     9ee:	82 e0       	ldi	r24, 0x02	; 2
     9f0:	90 e0       	ldi	r25, 0x00	; 0
     9f2:	19 c1       	rjmp	.+562    	; 0xc26 <strftime+0x5a4>
     9f4:	d7 01       	movw	r26, r14
     9f6:	12 96       	adiw	r26, 0x02	; 2
     9f8:	8c 91       	ld	r24, X
     9fa:	6c e0       	ldi	r22, 0x0C	; 12
     9fc:	0e 94 02 83 	call	0x10604	; 0x10604 <__divmodqi4>
     a00:	99 23       	and	r25, r25
     a02:	21 f0       	breq	.+8      	; 0xa0c <strftime+0x38a>
     a04:	89 2f       	mov	r24, r25
     a06:	99 0f       	add	r25, r25
     a08:	99 0b       	sbc	r25, r25
     a0a:	02 c0       	rjmp	.+4      	; 0xa10 <strftime+0x38e>
     a0c:	8c e0       	ldi	r24, 0x0C	; 12
     a0e:	90 e0       	ldi	r25, 0x00	; 0
     a10:	f7 01       	movw	r30, r14
     a12:	20 81       	ld	r18, Z
     a14:	42 2f       	mov	r20, r18
     a16:	02 2e       	mov	r0, r18
     a18:	00 0c       	add	r0, r0
     a1a:	55 0b       	sbc	r21, r21
     a1c:	5f 93       	push	r21
     a1e:	2f 93       	push	r18
     a20:	21 81       	ldd	r18, Z+1	; 0x01
     a22:	42 2f       	mov	r20, r18
     a24:	02 2e       	mov	r0, r18
     a26:	00 0c       	add	r0, r0
     a28:	55 0b       	sbc	r21, r21
     a2a:	5f 93       	push	r21
     a2c:	2f 93       	push	r18
     a2e:	9f 93       	push	r25
     a30:	8f 93       	push	r24
     a32:	2e e8       	ldi	r18, 0x8E	; 142
     a34:	36 e4       	ldi	r19, 0x46	; 70
     a36:	3f 93       	push	r19
     a38:	2f 93       	push	r18
     a3a:	df 92       	push	r13
     a3c:	cf 92       	push	r12
     a3e:	0e 94 48 7c 	call	0xf890	; 0xf890 <sprintf>
     a42:	cd bf       	out	0x3d, r28	; 61
     a44:	de bf       	out	0x3e, r29	; 62
     a46:	f7 01       	movw	r30, r14
     a48:	22 81       	ldd	r18, Z+2	; 0x02
     a4a:	2c 30       	cpi	r18, 0x0C	; 12
     a4c:	0c f4       	brge	.+2      	; 0xa50 <strftime+0x3ce>
     a4e:	eb c0       	rjmp	.+470    	; 0xc26 <strftime+0x5a4>
     a50:	20 e5       	ldi	r18, 0x50	; 80
     a52:	2b 87       	std	Y+11, r18	; 0x0b
     a54:	e8 c0       	rjmp	.+464    	; 0xc26 <strftime+0x5a4>
     a56:	d7 01       	movw	r26, r14
     a58:	11 96       	adiw	r26, 0x01	; 1
     a5a:	8c 91       	ld	r24, X
     a5c:	11 97       	sbiw	r26, 0x01	; 1
     a5e:	28 2f       	mov	r18, r24
     a60:	08 2e       	mov	r0, r24
     a62:	00 0c       	add	r0, r0
     a64:	33 0b       	sbc	r19, r19
     a66:	3f 93       	push	r19
     a68:	8f 93       	push	r24
     a6a:	12 96       	adiw	r26, 0x02	; 2
     a6c:	8c 91       	ld	r24, X
     a6e:	28 2f       	mov	r18, r24
     a70:	08 2e       	mov	r0, r24
     a72:	00 0c       	add	r0, r0
     a74:	33 0b       	sbc	r19, r19
     a76:	3f 93       	push	r19
     a78:	8f 93       	push	r24
     a7a:	86 ea       	ldi	r24, 0xA6	; 166
     a7c:	96 e4       	ldi	r25, 0x46	; 70
     a7e:	9f 93       	push	r25
     a80:	8f 93       	push	r24
     a82:	c5 c0       	rjmp	.+394    	; 0xc0e <strftime+0x58c>
     a84:	f7 01       	movw	r30, r14
     a86:	80 81       	ld	r24, Z
     a88:	28 2f       	mov	r18, r24
     a8a:	08 2e       	mov	r0, r24
     a8c:	00 0c       	add	r0, r0
     a8e:	33 0b       	sbc	r19, r19
     a90:	3f 93       	push	r19
     a92:	8f 93       	push	r24
     a94:	81 81       	ldd	r24, Z+1	; 0x01
     a96:	28 2f       	mov	r18, r24
     a98:	08 2e       	mov	r0, r24
     a9a:	00 0c       	add	r0, r0
     a9c:	33 0b       	sbc	r19, r19
     a9e:	3f 93       	push	r19
     aa0:	8f 93       	push	r24
     aa2:	82 81       	ldd	r24, Z+2	; 0x02
     aa4:	28 2f       	mov	r18, r24
     aa6:	08 2e       	mov	r0, r24
     aa8:	00 0c       	add	r0, r0
     aaa:	33 0b       	sbc	r19, r19
     aac:	3f 93       	push	r19
     aae:	8f 93       	push	r24
     ab0:	81 ea       	ldi	r24, 0xA1	; 161
     ab2:	96 e4       	ldi	r25, 0x46	; 70
     ab4:	4f c0       	rjmp	.+158    	; 0xb54 <strftime+0x4d2>
     ab6:	d7 01       	movw	r26, r14
     ab8:	14 96       	adiw	r26, 0x04	; 4
     aba:	8c 91       	ld	r24, X
     abc:	08 2e       	mov	r0, r24
     abe:	00 0c       	add	r0, r0
     ac0:	99 0b       	sbc	r25, r25
     ac2:	00 97       	sbiw	r24, 0x00	; 0
     ac4:	11 f4       	brne	.+4      	; 0xaca <strftime+0x448>
     ac6:	87 e0       	ldi	r24, 0x07	; 7
     ac8:	90 e0       	ldi	r25, 0x00	; 0
     aca:	9f 93       	push	r25
     acc:	8f 93       	push	r24
     ace:	e0 eb       	ldi	r30, 0xB0	; 176
     ad0:	f6 e4       	ldi	r31, 0x46	; 70
     ad2:	ff 93       	push	r31
     ad4:	ef 93       	push	r30
     ad6:	59 c0       	rjmp	.+178    	; 0xb8a <strftime+0x508>
     ad8:	60 e0       	ldi	r22, 0x00	; 0
     ada:	15 c0       	rjmp	.+42     	; 0xb06 <strftime+0x484>
     adc:	d7 01       	movw	r26, r14
     ade:	18 96       	adiw	r26, 0x08	; 8
     ae0:	6d 91       	ld	r22, X+
     ae2:	7c 91       	ld	r23, X
     ae4:	19 97       	sbiw	r26, 0x09	; 9
     ae6:	16 96       	adiw	r26, 0x06	; 6
     ae8:	8d 91       	ld	r24, X+
     aea:	9c 91       	ld	r25, X
     aec:	17 97       	sbiw	r26, 0x07	; 7
     aee:	ae 01       	movw	r20, r28
     af0:	45 5e       	subi	r20, 0xE5	; 229
     af2:	5f 4f       	sbci	r21, 0xFF	; 255
     af4:	84 59       	subi	r24, 0x94	; 148
     af6:	98 4f       	sbci	r25, 0xF8	; 248
     af8:	0e 94 fd 07 	call	0xffa	; 0xffa <iso_week_date_r>
     afc:	8e 8d       	ldd	r24, Y+30	; 0x1e
     afe:	8f 93       	push	r24
     b00:	8d 8d       	ldd	r24, Y+29	; 0x1d
     b02:	34 c0       	rjmp	.+104    	; 0xb6c <strftime+0x4ea>
     b04:	61 e0       	ldi	r22, 0x01	; 1
     b06:	c7 01       	movw	r24, r14
     b08:	0e 94 69 06 	call	0xcd2	; 0xcd2 <week_of_year>
     b0c:	1f 92       	push	r1
     b0e:	2e c0       	rjmp	.+92     	; 0xb6c <strftime+0x4ea>
     b10:	d7 01       	movw	r26, r14
     b12:	16 96       	adiw	r26, 0x06	; 6
     b14:	8d 91       	ld	r24, X+
     b16:	9c 91       	ld	r25, X
     b18:	17 97       	sbiw	r26, 0x07	; 7
     b1a:	b1 01       	movw	r22, r2
     b1c:	0e 94 dc 79 	call	0xf3b8	; 0xf3b8 <__divmodhi4>
     b20:	9f 93       	push	r25
     b22:	8f 93       	push	r24
     b24:	f7 01       	movw	r30, r14
     b26:	83 81       	ldd	r24, Z+3	; 0x03
     b28:	28 2f       	mov	r18, r24
     b2a:	08 2e       	mov	r0, r24
     b2c:	00 0c       	add	r0, r0
     b2e:	33 0b       	sbc	r19, r19
     b30:	3f 93       	push	r19
     b32:	8f 93       	push	r24
     b34:	85 81       	ldd	r24, Z+5	; 0x05
     b36:	08 2e       	mov	r0, r24
     b38:	00 0c       	add	r0, r0
     b3a:	99 0b       	sbc	r25, r25
     b3c:	01 96       	adiw	r24, 0x01	; 1
     b3e:	9f 93       	push	r25
     b40:	8f 93       	push	r24
     b42:	24 e6       	ldi	r18, 0x64	; 100
     b44:	36 e4       	ldi	r19, 0x46	; 70
     b46:	3f 93       	push	r19
     b48:	2f 93       	push	r18
     b4a:	df 92       	push	r13
     b4c:	cf 92       	push	r12
     b4e:	0e 94 48 7c 	call	0xf890	; 0xf890 <sprintf>
     b52:	61 c0       	rjmp	.+194    	; 0xc16 <strftime+0x594>
     b54:	9f 93       	push	r25
     b56:	8f 93       	push	r24
     b58:	f8 cf       	rjmp	.-16     	; 0xb4a <strftime+0x4c8>
     b5a:	d7 01       	movw	r26, r14
     b5c:	16 96       	adiw	r26, 0x06	; 6
     b5e:	8d 91       	ld	r24, X+
     b60:	9c 91       	ld	r25, X
     b62:	17 97       	sbiw	r26, 0x07	; 7
     b64:	b1 01       	movw	r22, r2
     b66:	0e 94 dc 79 	call	0xf3b8	; 0xf3b8 <__divmodhi4>
     b6a:	9f 93       	push	r25
     b6c:	8f 93       	push	r24
     b6e:	bf 92       	push	r11
     b70:	af 92       	push	r10
     b72:	0b c0       	rjmp	.+22     	; 0xb8a <strftime+0x508>
     b74:	f7 01       	movw	r30, r14
     b76:	86 81       	ldd	r24, Z+6	; 0x06
     b78:	97 81       	ldd	r25, Z+7	; 0x07
     b7a:	84 59       	subi	r24, 0x94	; 148
     b7c:	98 4f       	sbci	r25, 0xF8	; 248
     b7e:	9f 93       	push	r25
     b80:	8f 93       	push	r24
     b82:	23 eb       	ldi	r18, 0xB3	; 179
     b84:	36 e4       	ldi	r19, 0x46	; 70
     b86:	3f 93       	push	r19
     b88:	2f 93       	push	r18
     b8a:	df 92       	push	r13
     b8c:	cf 92       	push	r12
     b8e:	0e 94 48 7c 	call	0xf890	; 0xf890 <sprintf>
     b92:	0f 90       	pop	r0
     b94:	0f 90       	pop	r0
     b96:	0f 90       	pop	r0
     b98:	0f 90       	pop	r0
     b9a:	0f 90       	pop	r0
     b9c:	0f 90       	pop	r0
     b9e:	43 c0       	rjmp	.+134    	; 0xc26 <strftime+0x5a4>
     ba0:	60 91 e6 4a 	lds	r22, 0x4AE6	; 0x804ae6 <__utc_offset>
     ba4:	70 91 e7 4a 	lds	r23, 0x4AE7	; 0x804ae7 <__utc_offset+0x1>
     ba8:	80 91 e8 4a 	lds	r24, 0x4AE8	; 0x804ae8 <__utc_offset+0x2>
     bac:	90 91 e9 4a 	lds	r25, 0x4AE9	; 0x804ae9 <__utc_offset+0x3>
     bb0:	2c e3       	ldi	r18, 0x3C	; 60
     bb2:	30 e0       	ldi	r19, 0x00	; 0
     bb4:	40 e0       	ldi	r20, 0x00	; 0
     bb6:	50 e0       	ldi	r21, 0x00	; 0
     bb8:	0e 94 12 7a 	call	0xf424	; 0xf424 <__divmodsi4>
     bbc:	89 01       	movw	r16, r18
     bbe:	9a 01       	movw	r18, r20
     bc0:	f8 01       	movw	r30, r16
     bc2:	d7 01       	movw	r26, r14
     bc4:	1a 96       	adiw	r26, 0x0a	; 10
     bc6:	8d 91       	ld	r24, X+
     bc8:	9c 91       	ld	r25, X
     bca:	1b 97       	sbiw	r26, 0x0b	; 11
     bcc:	6c e3       	ldi	r22, 0x3C	; 60
     bce:	70 e0       	ldi	r23, 0x00	; 0
     bd0:	0e 94 dc 79 	call	0xf3b8	; 0xf3b8 <__divmodhi4>
     bd4:	16 16       	cp	r1, r22
     bd6:	17 06       	cpc	r1, r23
     bd8:	1c f4       	brge	.+6      	; 0xbe0 <strftime+0x55e>
     bda:	fb 01       	movw	r30, r22
     bdc:	e0 0f       	add	r30, r16
     bde:	f1 1f       	adc	r31, r17
     be0:	cf 01       	movw	r24, r30
     be2:	6c e3       	ldi	r22, 0x3C	; 60
     be4:	70 e0       	ldi	r23, 0x00	; 0
     be6:	0e 94 dc 79 	call	0xf3b8	; 0xf3b8 <__divmodhi4>
     bea:	97 ff       	sbrs	r25, 7
     bec:	03 c0       	rjmp	.+6      	; 0xbf4 <strftime+0x572>
     bee:	91 95       	neg	r25
     bf0:	81 95       	neg	r24
     bf2:	91 09       	sbc	r25, r1
     bf4:	9f 93       	push	r25
     bf6:	8f 93       	push	r24
     bf8:	cf 01       	movw	r24, r30
     bfa:	6c e3       	ldi	r22, 0x3C	; 60
     bfc:	70 e0       	ldi	r23, 0x00	; 0
     bfe:	0e 94 dc 79 	call	0xf3b8	; 0xf3b8 <__divmodhi4>
     c02:	7f 93       	push	r23
     c04:	6f 93       	push	r22
     c06:	e5 ec       	ldi	r30, 0xC5	; 197
     c08:	f6 e4       	ldi	r31, 0x46	; 70
     c0a:	ff 93       	push	r31
     c0c:	ef 93       	push	r30
     c0e:	df 92       	push	r13
     c10:	cf 92       	push	r12
     c12:	0e 94 48 7c 	call	0xf890	; 0xf890 <sprintf>
     c16:	cd bf       	out	0x3d, r28	; 61
     c18:	de bf       	out	0x3e, r29	; 62
     c1a:	05 c0       	rjmp	.+10     	; 0xc26 <strftime+0x5a4>
     c1c:	8f e3       	ldi	r24, 0x3F	; 63
     c1e:	89 83       	std	Y+1, r24	; 0x01
     c20:	1a 82       	std	Y+2, r1	; 0x02
     c22:	81 e0       	ldi	r24, 0x01	; 1
     c24:	90 e0       	ldi	r25, 0x00	; 0
     c26:	93 01       	movw	r18, r6
     c28:	28 0f       	add	r18, r24
     c2a:	39 1f       	adc	r19, r25
     c2c:	a9 a1       	ldd	r26, Y+33	; 0x21
     c2e:	ba a1       	ldd	r27, Y+34	; 0x22
     c30:	2a 17       	cp	r18, r26
     c32:	3b 07       	cpc	r19, r27
     c34:	98 f4       	brcc	.+38     	; 0xc5c <strftime+0x5da>
     c36:	d2 01       	movw	r26, r4
     c38:	f6 01       	movw	r30, r12
     c3a:	af 01       	movw	r20, r30
     c3c:	4c 19       	sub	r20, r12
     c3e:	5d 09       	sbc	r21, r13
     c40:	48 17       	cp	r20, r24
     c42:	59 07       	cpc	r21, r25
     c44:	1c f4       	brge	.+6      	; 0xc4c <strftime+0x5ca>
     c46:	41 91       	ld	r20, Z+
     c48:	4d 93       	st	X+, r20
     c4a:	f7 cf       	rjmp	.-18     	; 0xc3a <strftime+0x5b8>
     c4c:	97 ff       	sbrs	r25, 7
     c4e:	02 c0       	rjmp	.+4      	; 0xc54 <strftime+0x5d2>
     c50:	80 e0       	ldi	r24, 0x00	; 0
     c52:	90 e0       	ldi	r25, 0x00	; 0
     c54:	48 0e       	add	r4, r24
     c56:	59 1e       	adc	r5, r25
     c58:	39 01       	movw	r6, r18
     c5a:	3c cd       	rjmp	.-1416   	; 0x6d4 <strftime+0x52>
     c5c:	f2 01       	movw	r30, r4
     c5e:	10 82       	st	Z, r1
     c60:	0e c0       	rjmp	.+28     	; 0xc7e <strftime+0x5fc>
     c62:	d2 01       	movw	r26, r4
     c64:	8d 93       	st	X+, r24
     c66:	2d 01       	movw	r4, r26
     c68:	bf ef       	ldi	r27, 0xFF	; 255
     c6a:	6b 1a       	sub	r6, r27
     c6c:	7b 0a       	sbc	r7, r27
     c6e:	88 23       	and	r24, r24
     c70:	31 f0       	breq	.+12     	; 0xc7e <strftime+0x5fc>
     c72:	ef ef       	ldi	r30, 0xFF	; 255
     c74:	8e 1a       	sub	r8, r30
     c76:	9e 0a       	sbc	r9, r30
     c78:	2d cd       	rjmp	.-1446   	; 0x6d4 <strftime+0x52>
     c7a:	d2 01       	movw	r26, r4
     c7c:	1c 92       	st	X, r1
     c7e:	c3 01       	movw	r24, r6
     c80:	a2 96       	adiw	r28, 0x22	; 34
     c82:	cd bf       	out	0x3d, r28	; 61
     c84:	de bf       	out	0x3e, r29	; 62
     c86:	df 91       	pop	r29
     c88:	cf 91       	pop	r28
     c8a:	1f 91       	pop	r17
     c8c:	0f 91       	pop	r16
     c8e:	ff 90       	pop	r15
     c90:	ef 90       	pop	r14
     c92:	df 90       	pop	r13
     c94:	cf 90       	pop	r12
     c96:	bf 90       	pop	r11
     c98:	af 90       	pop	r10
     c9a:	9f 90       	pop	r9
     c9c:	8f 90       	pop	r8
     c9e:	7f 90       	pop	r7
     ca0:	6f 90       	pop	r6
     ca2:	5f 90       	pop	r5
     ca4:	4f 90       	pop	r4
     ca6:	3f 90       	pop	r3
     ca8:	2f 90       	pop	r2
     caa:	08 95       	ret

00000cac <time>:
     cac:	fc 01       	movw	r30, r24
     cae:	0f b6       	in	r0, 0x3f	; 63
     cb0:	f8 94       	cli
     cb2:	60 91 d6 4a 	lds	r22, 0x4AD6	; 0x804ad6 <__system_time>
     cb6:	70 91 d7 4a 	lds	r23, 0x4AD7	; 0x804ad7 <__system_time+0x1>
     cba:	80 91 d8 4a 	lds	r24, 0x4AD8	; 0x804ad8 <__system_time+0x2>
     cbe:	90 91 d9 4a 	lds	r25, 0x4AD9	; 0x804ad9 <__system_time+0x3>
     cc2:	0f be       	out	0x3f, r0	; 63
     cc4:	30 97       	sbiw	r30, 0x00	; 0
     cc6:	21 f0       	breq	.+8      	; 0xcd0 <time+0x24>
     cc8:	60 83       	st	Z, r22
     cca:	71 83       	std	Z+1, r23	; 0x01
     ccc:	82 83       	std	Z+2, r24	; 0x02
     cce:	93 83       	std	Z+3, r25	; 0x03
     cd0:	08 95       	ret

00000cd2 <week_of_year>:
     cd2:	fc 01       	movw	r30, r24
     cd4:	20 85       	ldd	r18, Z+8	; 0x08
     cd6:	31 85       	ldd	r19, Z+9	; 0x09
     cd8:	c9 01       	movw	r24, r18
     cda:	07 96       	adiw	r24, 0x07	; 7
     cdc:	44 81       	ldd	r20, Z+4	; 0x04
     cde:	84 1b       	sub	r24, r20
     ce0:	91 09       	sbc	r25, r1
     ce2:	47 fd       	sbrc	r20, 7
     ce4:	93 95       	inc	r25
     ce6:	86 0f       	add	r24, r22
     ce8:	91 1d       	adc	r25, r1
     cea:	e7 e0       	ldi	r30, 0x07	; 7
     cec:	f0 e0       	ldi	r31, 0x00	; 0
     cee:	bf 01       	movw	r22, r30
     cf0:	0e 94 dc 79 	call	0xf3b8	; 0xf3b8 <__divmodhi4>
     cf4:	a9 01       	movw	r20, r18
     cf6:	48 1b       	sub	r20, r24
     cf8:	59 0b       	sbc	r21, r25
     cfa:	ca 01       	movw	r24, r20
     cfc:	57 fd       	sbrc	r21, 7
     cfe:	06 c0       	rjmp	.+12     	; 0xd0c <week_of_year+0x3a>
     d00:	bf 01       	movw	r22, r30
     d02:	0e 94 dc 79 	call	0xf3b8	; 0xf3b8 <__divmodhi4>
     d06:	81 e0       	ldi	r24, 0x01	; 1
     d08:	86 0f       	add	r24, r22
     d0a:	08 95       	ret
     d0c:	80 e0       	ldi	r24, 0x00	; 0
     d0e:	08 95       	ret

00000d10 <system_tick>:
     d10:	8f 93       	push	r24
     d12:	8f b7       	in	r24, 0x3f	; 63
     d14:	8f 93       	push	r24
     d16:	f8 94       	cli
     d18:	80 91 d6 4a 	lds	r24, 0x4AD6	; 0x804ad6 <__system_time>
     d1c:	8f 5f       	subi	r24, 0xFF	; 255
     d1e:	80 93 d6 4a 	sts	0x4AD6, r24	; 0x804ad6 <__system_time>
     d22:	80 91 d7 4a 	lds	r24, 0x4AD7	; 0x804ad7 <__system_time+0x1>
     d26:	8f 4f       	sbci	r24, 0xFF	; 255
     d28:	80 93 d7 4a 	sts	0x4AD7, r24	; 0x804ad7 <__system_time+0x1>
     d2c:	80 91 d8 4a 	lds	r24, 0x4AD8	; 0x804ad8 <__system_time+0x2>
     d30:	8f 4f       	sbci	r24, 0xFF	; 255
     d32:	80 93 d8 4a 	sts	0x4AD8, r24	; 0x804ad8 <__system_time+0x2>
     d36:	80 91 d9 4a 	lds	r24, 0x4AD9	; 0x804ad9 <__system_time+0x3>
     d3a:	8f 4f       	sbci	r24, 0xFF	; 255
     d3c:	80 93 d9 4a 	sts	0x4AD9, r24	; 0x804ad9 <__system_time+0x3>
     d40:	8f 91       	pop	r24
     d42:	8f bf       	out	0x3f, r24	; 63
     d44:	8f 91       	pop	r24
     d46:	08 95       	ret

00000d48 <asctime_r>:
     d48:	cf 92       	push	r12
     d4a:	df 92       	push	r13
     d4c:	ef 92       	push	r14
     d4e:	ff 92       	push	r15
     d50:	0f 93       	push	r16
     d52:	1f 93       	push	r17
     d54:	cf 93       	push	r28
     d56:	df 93       	push	r29
     d58:	8c 01       	movw	r16, r24
     d5a:	eb 01       	movw	r28, r22
     d5c:	fc 01       	movw	r30, r24
     d5e:	84 81       	ldd	r24, Z+4	; 0x04
     d60:	b8 2f       	mov	r27, r24
     d62:	bb 0f       	add	r27, r27
     d64:	b8 0f       	add	r27, r24
     d66:	85 81       	ldd	r24, Z+5	; 0x05
     d68:	78 2f       	mov	r23, r24
     d6a:	77 0f       	add	r23, r23
     d6c:	78 0f       	add	r23, r24
     d6e:	9e 01       	movw	r18, r28
     d70:	40 e0       	ldi	r20, 0x00	; 0
     d72:	8b 2f       	mov	r24, r27
     d74:	84 0f       	add	r24, r20
     d76:	90 e0       	ldi	r25, 0x00	; 0
     d78:	a0 e0       	ldi	r26, 0x00	; 0
     d7a:	84 59       	subi	r24, 0x94	; 148
     d7c:	9b 4f       	sbci	r25, 0xFB	; 251
     d7e:	af 4f       	sbci	r26, 0xFF	; 255
     d80:	fc 01       	movw	r30, r24
     d82:	5a 2f       	mov	r21, r26
     d84:	0e 94 10 83 	call	0x10620	; 0x10620 <__xload_1>
     d88:	f9 01       	movw	r30, r18
     d8a:	61 93       	st	Z+, r22
     d8c:	9f 01       	movw	r18, r30
     d8e:	87 2f       	mov	r24, r23
     d90:	84 0f       	add	r24, r20
     d92:	90 e0       	ldi	r25, 0x00	; 0
     d94:	a0 e0       	ldi	r26, 0x00	; 0
     d96:	8e 57       	subi	r24, 0x7E	; 126
     d98:	9b 4f       	sbci	r25, 0xFB	; 251
     d9a:	af 4f       	sbci	r26, 0xFF	; 255
     d9c:	fc 01       	movw	r30, r24
     d9e:	5a 2f       	mov	r21, r26
     da0:	0e 94 10 83 	call	0x10620	; 0x10620 <__xload_1>
     da4:	f9 01       	movw	r30, r18
     da6:	63 83       	std	Z+3, r22	; 0x03
     da8:	4f 5f       	subi	r20, 0xFF	; 255
     daa:	43 30       	cpi	r20, 0x03	; 3
     dac:	11 f7       	brne	.-60     	; 0xd72 <asctime_r+0x2a>
     dae:	80 e2       	ldi	r24, 0x20	; 32
     db0:	8f 83       	std	Y+7, r24	; 0x07
     db2:	8b 83       	std	Y+3, r24	; 0x03
     db4:	be 01       	movw	r22, r28
     db6:	68 5f       	subi	r22, 0xF8	; 248
     db8:	7f 4f       	sbci	r23, 0xFF	; 255
     dba:	f8 01       	movw	r30, r16
     dbc:	83 81       	ldd	r24, Z+3	; 0x03
     dbe:	40 e2       	ldi	r20, 0x20	; 32
     dc0:	08 2e       	mov	r0, r24
     dc2:	00 0c       	add	r0, r0
     dc4:	99 0b       	sbc	r25, r25
     dc6:	0e 94 77 08 	call	0x10ee	; 0x10ee <__print_lz>
     dca:	be 01       	movw	r22, r28
     dcc:	65 5f       	subi	r22, 0xF5	; 245
     dce:	7f 4f       	sbci	r23, 0xFF	; 255
     dd0:	f8 01       	movw	r30, r16
     dd2:	82 81       	ldd	r24, Z+2	; 0x02
     dd4:	4a e3       	ldi	r20, 0x3A	; 58
     dd6:	08 2e       	mov	r0, r24
     dd8:	00 0c       	add	r0, r0
     dda:	99 0b       	sbc	r25, r25
     ddc:	0e 94 77 08 	call	0x10ee	; 0x10ee <__print_lz>
     de0:	be 01       	movw	r22, r28
     de2:	62 5f       	subi	r22, 0xF2	; 242
     de4:	7f 4f       	sbci	r23, 0xFF	; 255
     de6:	f8 01       	movw	r30, r16
     de8:	81 81       	ldd	r24, Z+1	; 0x01
     dea:	4a e3       	ldi	r20, 0x3A	; 58
     dec:	08 2e       	mov	r0, r24
     dee:	00 0c       	add	r0, r0
     df0:	99 0b       	sbc	r25, r25
     df2:	0e 94 77 08 	call	0x10ee	; 0x10ee <__print_lz>
     df6:	be 01       	movw	r22, r28
     df8:	6f 5e       	subi	r22, 0xEF	; 239
     dfa:	7f 4f       	sbci	r23, 0xFF	; 255
     dfc:	f8 01       	movw	r30, r16
     dfe:	80 81       	ld	r24, Z
     e00:	40 e2       	ldi	r20, 0x20	; 32
     e02:	08 2e       	mov	r0, r24
     e04:	00 0c       	add	r0, r0
     e06:	99 0b       	sbc	r25, r25
     e08:	0e 94 77 08 	call	0x10ee	; 0x10ee <__print_lz>
     e0c:	f8 01       	movw	r30, r16
     e0e:	86 81       	ldd	r24, Z+6	; 0x06
     e10:	97 81       	ldd	r25, Z+7	; 0x07
     e12:	64 e6       	ldi	r22, 0x64	; 100
     e14:	70 e0       	ldi	r23, 0x00	; 0
     e16:	84 59       	subi	r24, 0x94	; 148
     e18:	98 4f       	sbci	r25, 0xF8	; 248
     e1a:	0e 94 dc 79 	call	0xf3b8	; 0xf3b8 <__divmodhi4>
     e1e:	6b 01       	movw	r12, r22
     e20:	7c 01       	movw	r14, r24
     e22:	be 01       	movw	r22, r28
     e24:	6c 5e       	subi	r22, 0xEC	; 236
     e26:	7f 4f       	sbci	r23, 0xFF	; 255
     e28:	40 e2       	ldi	r20, 0x20	; 32
     e2a:	c6 01       	movw	r24, r12
     e2c:	0e 94 77 08 	call	0x10ee	; 0x10ee <__print_lz>
     e30:	be 01       	movw	r22, r28
     e32:	6a 5e       	subi	r22, 0xEA	; 234
     e34:	7f 4f       	sbci	r23, 0xFF	; 255
     e36:	40 e0       	ldi	r20, 0x00	; 0
     e38:	c7 01       	movw	r24, r14
     e3a:	df 91       	pop	r29
     e3c:	cf 91       	pop	r28
     e3e:	1f 91       	pop	r17
     e40:	0f 91       	pop	r16
     e42:	ff 90       	pop	r15
     e44:	ef 90       	pop	r14
     e46:	df 90       	pop	r13
     e48:	cf 90       	pop	r12
     e4a:	0c 94 77 08 	jmp	0x10ee	; 0x10ee <__print_lz>

00000e4e <gmtime_r>:
     e4e:	cf 92       	push	r12
     e50:	df 92       	push	r13
     e52:	ef 92       	push	r14
     e54:	ff 92       	push	r15
     e56:	0f 93       	push	r16
     e58:	1f 93       	push	r17
     e5a:	cf 93       	push	r28
     e5c:	df 93       	push	r29
     e5e:	cd b7       	in	r28, 0x3d	; 61
     e60:	de b7       	in	r29, 0x3e	; 62
     e62:	28 97       	sbiw	r28, 0x08	; 8
     e64:	cd bf       	out	0x3d, r28	; 61
     e66:	de bf       	out	0x3e, r29	; 62
     e68:	8b 01       	movw	r16, r22
     e6a:	fc 01       	movw	r30, r24
     e6c:	60 81       	ld	r22, Z
     e6e:	71 81       	ldd	r23, Z+1	; 0x01
     e70:	82 81       	ldd	r24, Z+2	; 0x02
     e72:	93 81       	ldd	r25, Z+3	; 0x03
     e74:	20 e8       	ldi	r18, 0x80	; 128
     e76:	31 e5       	ldi	r19, 0x51	; 81
     e78:	41 e0       	ldi	r20, 0x01	; 1
     e7a:	50 e0       	ldi	r21, 0x00	; 0
     e7c:	0e 94 f0 79 	call	0xf3e0	; 0xf3e0 <__udivmodsi4>
     e80:	69 01       	movw	r12, r18
     e82:	7a 01       	movw	r14, r20
     e84:	2c e3       	ldi	r18, 0x3C	; 60
     e86:	30 e0       	ldi	r19, 0x00	; 0
     e88:	40 e0       	ldi	r20, 0x00	; 0
     e8a:	50 e0       	ldi	r21, 0x00	; 0
     e8c:	0e 94 12 7a 	call	0xf424	; 0xf424 <__divmodsi4>
     e90:	29 83       	std	Y+1, r18	; 0x01
     e92:	3a 83       	std	Y+2, r19	; 0x02
     e94:	4b 83       	std	Y+3, r20	; 0x03
     e96:	5c 83       	std	Y+4, r21	; 0x04
     e98:	89 81       	ldd	r24, Y+1	; 0x01
     e9a:	9a 81       	ldd	r25, Y+2	; 0x02
     e9c:	ab 81       	ldd	r26, Y+3	; 0x03
     e9e:	bc 81       	ldd	r27, Y+4	; 0x04
     ea0:	f8 01       	movw	r30, r16
     ea2:	60 83       	st	Z, r22
     ea4:	6c e3       	ldi	r22, 0x3C	; 60
     ea6:	70 e0       	ldi	r23, 0x00	; 0
     ea8:	0e 94 dc 79 	call	0xf3b8	; 0xf3b8 <__divmodhi4>
     eac:	dc 01       	movw	r26, r24
     eae:	cb 01       	movw	r24, r22
     eb0:	f8 01       	movw	r30, r16
     eb2:	a1 83       	std	Z+1, r26	; 0x01
     eb4:	82 83       	std	Z+2, r24	; 0x02
     eb6:	c6 01       	movw	r24, r12
     eb8:	06 96       	adiw	r24, 0x06	; 6
     eba:	67 e0       	ldi	r22, 0x07	; 7
     ebc:	70 e0       	ldi	r23, 0x00	; 0
     ebe:	0e 94 c8 79 	call	0xf390	; 0xf390 <__udivmodhi4>
     ec2:	84 83       	std	Z+4, r24	; 0x04
     ec4:	2d ea       	ldi	r18, 0xAD	; 173
     ec6:	3e e8       	ldi	r19, 0x8E	; 142
     ec8:	40 e0       	ldi	r20, 0x00	; 0
     eca:	50 e0       	ldi	r21, 0x00	; 0
     ecc:	c7 01       	movw	r24, r14
     ece:	b6 01       	movw	r22, r12
     ed0:	0e 94 12 7a 	call	0xf424	; 0xf424 <__divmodsi4>
     ed4:	29 83       	std	Y+1, r18	; 0x01
     ed6:	3a 83       	std	Y+2, r19	; 0x02
     ed8:	6d 83       	std	Y+5, r22	; 0x05
     eda:	7e 83       	std	Y+6, r23	; 0x06
     edc:	8f 83       	std	Y+7, r24	; 0x07
     ede:	98 87       	std	Y+8, r25	; 0x08
     ee0:	89 81       	ldd	r24, Y+1	; 0x01
     ee2:	9a 81       	ldd	r25, Y+2	; 0x02
     ee4:	24 e6       	ldi	r18, 0x64	; 100
     ee6:	28 9f       	mul	r18, r24
     ee8:	60 01       	movw	r12, r0
     eea:	29 9f       	mul	r18, r25
     eec:	d0 0c       	add	r13, r0
     eee:	11 24       	eor	r1, r1
     ef0:	6d 81       	ldd	r22, Y+5	; 0x05
     ef2:	7e 81       	ldd	r23, Y+6	; 0x06
     ef4:	8f 81       	ldd	r24, Y+7	; 0x07
     ef6:	98 85       	ldd	r25, Y+8	; 0x08
     ef8:	25 eb       	ldi	r18, 0xB5	; 181
     efa:	35 e0       	ldi	r19, 0x05	; 5
     efc:	40 e0       	ldi	r20, 0x00	; 0
     efe:	50 e0       	ldi	r21, 0x00	; 0
     f00:	0e 94 12 7a 	call	0xf424	; 0xf424 <__divmodsi4>
     f04:	29 83       	std	Y+1, r18	; 0x01
     f06:	3a 83       	std	Y+2, r19	; 0x02
     f08:	6d 83       	std	Y+5, r22	; 0x05
     f0a:	7e 83       	std	Y+6, r23	; 0x06
     f0c:	e9 80       	ldd	r14, Y+1	; 0x01
     f0e:	fa 80       	ldd	r15, Y+2	; 0x02
     f10:	ee 0c       	add	r14, r14
     f12:	ff 1c       	adc	r15, r15
     f14:	ee 0c       	add	r14, r14
     f16:	ff 1c       	adc	r15, r15
     f18:	ec 0c       	add	r14, r12
     f1a:	fd 1c       	adc	r15, r13
     f1c:	8d 81       	ldd	r24, Y+5	; 0x05
     f1e:	9e 81       	ldd	r25, Y+6	; 0x06
     f20:	f5 e6       	ldi	r31, 0x65	; 101
     f22:	ef 16       	cp	r14, r31
     f24:	f1 04       	cpc	r15, r1
     f26:	10 f0       	brcs	.+4      	; 0xf2c <gmtime_r+0xde>
     f28:	01 96       	adiw	r24, 0x01	; 1
     f2a:	04 c0       	rjmp	.+8      	; 0xf34 <gmtime_r+0xe6>
     f2c:	24 e6       	ldi	r18, 0x64	; 100
     f2e:	e2 16       	cp	r14, r18
     f30:	f1 04       	cpc	r15, r1
     f32:	19 f0       	breq	.+6      	; 0xf3a <gmtime_r+0xec>
     f34:	21 e0       	ldi	r18, 0x01	; 1
     f36:	30 e0       	ldi	r19, 0x00	; 0
     f38:	02 c0       	rjmp	.+4      	; 0xf3e <gmtime_r+0xf0>
     f3a:	20 e0       	ldi	r18, 0x00	; 0
     f3c:	30 e0       	ldi	r19, 0x00	; 0
     f3e:	a9 01       	movw	r20, r18
     f40:	44 59       	subi	r20, 0x94	; 148
     f42:	5e 4f       	sbci	r21, 0xFE	; 254
     f44:	48 17       	cp	r20, r24
     f46:	59 07       	cpc	r21, r25
     f48:	68 f4       	brcc	.+26     	; 0xf64 <gmtime_r+0x116>
     f4a:	6d e6       	ldi	r22, 0x6D	; 109
     f4c:	71 e0       	ldi	r23, 0x01	; 1
     f4e:	82 1b       	sub	r24, r18
     f50:	93 0b       	sbc	r25, r19
     f52:	0e 94 dc 79 	call	0xf3b8	; 0xf3b8 <__divmodhi4>
     f56:	dc 01       	movw	r26, r24
     f58:	cb 01       	movw	r24, r22
     f5a:	e8 0e       	add	r14, r24
     f5c:	f9 1e       	adc	r15, r25
     f5e:	cd 01       	movw	r24, r26
     f60:	20 e0       	ldi	r18, 0x00	; 0
     f62:	30 e0       	ldi	r19, 0x00	; 0
     f64:	44 e6       	ldi	r20, 0x64	; 100
     f66:	e4 0e       	add	r14, r20
     f68:	f1 1c       	adc	r15, r1
     f6a:	f8 01       	movw	r30, r16
     f6c:	e6 82       	std	Z+6, r14	; 0x06
     f6e:	f7 82       	std	Z+7, r15	; 0x07
     f70:	80 87       	std	Z+8, r24	; 0x08
     f72:	91 87       	std	Z+9, r25	; 0x09
     f74:	25 5c       	subi	r18, 0xC5	; 197
     f76:	3f 4f       	sbci	r19, 0xFF	; 255
     f78:	82 17       	cp	r24, r18
     f7a:	93 07       	cpc	r25, r19
     f7c:	48 f4       	brcc	.+18     	; 0xf90 <gmtime_r+0x142>
     f7e:	6f e1       	ldi	r22, 0x1F	; 31
     f80:	70 e0       	ldi	r23, 0x00	; 0
     f82:	0e 94 dc 79 	call	0xf3b8	; 0xf3b8 <__divmodhi4>
     f86:	dc 01       	movw	r26, r24
     f88:	cb 01       	movw	r24, r22
     f8a:	f8 01       	movw	r30, r16
     f8c:	85 83       	std	Z+5, r24	; 0x05
     f8e:	22 c0       	rjmp	.+68     	; 0xfd4 <gmtime_r+0x186>
     f90:	69 e9       	ldi	r22, 0x99	; 153
     f92:	70 e0       	ldi	r23, 0x00	; 0
     f94:	82 1b       	sub	r24, r18
     f96:	93 0b       	sbc	r25, r19
     f98:	0e 94 dc 79 	call	0xf3b8	; 0xf3b8 <__divmodhi4>
     f9c:	dc 01       	movw	r26, r24
     f9e:	cb 01       	movw	r24, r22
     fa0:	f8 2e       	mov	r15, r24
     fa2:	ff 0c       	add	r15, r15
     fa4:	ff 0c       	add	r15, r15
     fa6:	f8 0e       	add	r15, r24
     fa8:	6d e3       	ldi	r22, 0x3D	; 61
     faa:	70 e0       	ldi	r23, 0x00	; 0
     fac:	cd 01       	movw	r24, r26
     fae:	0e 94 dc 79 	call	0xf3b8	; 0xf3b8 <__divmodhi4>
     fb2:	dc 01       	movw	r26, r24
     fb4:	cb 01       	movw	r24, r22
     fb6:	e8 2e       	mov	r14, r24
     fb8:	ee 0c       	add	r14, r14
     fba:	6f e1       	ldi	r22, 0x1F	; 31
     fbc:	70 e0       	ldi	r23, 0x00	; 0
     fbe:	cd 01       	movw	r24, r26
     fc0:	0e 94 dc 79 	call	0xf3b8	; 0xf3b8 <__divmodhi4>
     fc4:	dc 01       	movw	r26, r24
     fc6:	cb 01       	movw	r24, r22
     fc8:	22 e0       	ldi	r18, 0x02	; 2
     fca:	28 0f       	add	r18, r24
     fcc:	f2 0e       	add	r15, r18
     fce:	fe 0c       	add	r15, r14
     fd0:	f8 01       	movw	r30, r16
     fd2:	f5 82       	std	Z+5, r15	; 0x05
     fd4:	a3 83       	std	Z+3, r26	; 0x03
     fd6:	f8 01       	movw	r30, r16
     fd8:	12 86       	std	Z+10, r1	; 0x0a
     fda:	13 86       	std	Z+11, r1	; 0x0b
     fdc:	83 81       	ldd	r24, Z+3	; 0x03
     fde:	8f 5f       	subi	r24, 0xFF	; 255
     fe0:	83 83       	std	Z+3, r24	; 0x03
     fe2:	28 96       	adiw	r28, 0x08	; 8
     fe4:	cd bf       	out	0x3d, r28	; 61
     fe6:	de bf       	out	0x3e, r29	; 62
     fe8:	df 91       	pop	r29
     fea:	cf 91       	pop	r28
     fec:	1f 91       	pop	r17
     fee:	0f 91       	pop	r16
     ff0:	ff 90       	pop	r15
     ff2:	ef 90       	pop	r14
     ff4:	df 90       	pop	r13
     ff6:	cf 90       	pop	r12
     ff8:	08 95       	ret

00000ffa <iso_week_date_r>:
     ffa:	cf 92       	push	r12
     ffc:	df 92       	push	r13
     ffe:	ef 92       	push	r14
    1000:	ff 92       	push	r15
    1002:	0f 93       	push	r16
    1004:	1f 93       	push	r17
    1006:	cf 93       	push	r28
    1008:	df 93       	push	r29
    100a:	8c 01       	movw	r16, r24
    100c:	7b 01       	movw	r14, r22
    100e:	ea 01       	movw	r28, r20
    1010:	88 83       	st	Y, r24
    1012:	99 83       	std	Y+1, r25	; 0x01
    1014:	0e 94 84 02 	call	0x508	; 0x508 <is_leap_year>
    1018:	28 2f       	mov	r18, r24
    101a:	a8 01       	movw	r20, r16
    101c:	40 5d       	subi	r20, 0xD0	; 208
    101e:	57 40       	sbci	r21, 0x07	; 7
    1020:	6d e6       	ldi	r22, 0x6D	; 109
    1022:	71 e0       	ldi	r23, 0x01	; 1
    1024:	46 9f       	mul	r20, r22
    1026:	c0 01       	movw	r24, r0
    1028:	47 9f       	mul	r20, r23
    102a:	90 0d       	add	r25, r0
    102c:	56 9f       	mul	r21, r22
    102e:	90 0d       	add	r25, r0
    1030:	11 24       	eor	r1, r1
    1032:	8e 0d       	add	r24, r14
    1034:	9f 1d       	adc	r25, r15
    1036:	41 15       	cp	r20, r1
    1038:	51 05       	cpc	r21, r1
    103a:	79 f0       	breq	.+30     	; 0x105a <iso_week_date_r+0x60>
    103c:	ba 01       	movw	r22, r20
    103e:	76 95       	lsr	r23
    1040:	67 95       	ror	r22
    1042:	76 95       	lsr	r23
    1044:	67 95       	ror	r22
    1046:	6f 5f       	subi	r22, 0xFF	; 255
    1048:	7f 4f       	sbci	r23, 0xFF	; 255
    104a:	86 0f       	add	r24, r22
    104c:	97 1f       	adc	r25, r23
    104e:	82 1b       	sub	r24, r18
    1050:	91 09       	sbc	r25, r1
    1052:	45 36       	cpi	r20, 0x65	; 101
    1054:	51 05       	cpc	r21, r1
    1056:	08 f0       	brcs	.+2      	; 0x105a <iso_week_date_r+0x60>
    1058:	01 97       	sbiw	r24, 0x01	; 1
    105a:	06 96       	adiw	r24, 0x06	; 6
    105c:	67 e0       	ldi	r22, 0x07	; 7
    105e:	70 e0       	ldi	r23, 0x00	; 0
    1060:	0e 94 c8 79 	call	0xf390	; 0xf390 <__udivmodhi4>
    1064:	6c 01       	movw	r12, r24
    1066:	89 2b       	or	r24, r25
    1068:	19 f4       	brne	.+6      	; 0x1070 <iso_week_date_r+0x76>
    106a:	87 e0       	ldi	r24, 0x07	; 7
    106c:	c8 2e       	mov	r12, r24
    106e:	d1 2c       	mov	r13, r1
    1070:	cc 82       	std	Y+4, r12	; 0x04
    1072:	dd 82       	std	Y+5, r13	; 0x05
    1074:	c7 01       	movw	r24, r14
    1076:	0b 96       	adiw	r24, 0x0b	; 11
    1078:	8c 19       	sub	r24, r12
    107a:	9d 09       	sbc	r25, r13
    107c:	67 e0       	ldi	r22, 0x07	; 7
    107e:	70 e0       	ldi	r23, 0x00	; 0
    1080:	0e 94 dc 79 	call	0xf3b8	; 0xf3b8 <__divmodhi4>
    1084:	65 33       	cpi	r22, 0x35	; 53
    1086:	71 05       	cpc	r23, r1
    1088:	b1 f4       	brne	.+44     	; 0x10b6 <iso_week_date_r+0xbc>
    108a:	81 e0       	ldi	r24, 0x01	; 1
    108c:	c8 1a       	sub	r12, r24
    108e:	d1 08       	sbc	r13, r1
    1090:	ec 18       	sub	r14, r12
    1092:	fd 08       	sbc	r15, r13
    1094:	82 2f       	mov	r24, r18
    1096:	90 e0       	ldi	r25, 0x00	; 0
    1098:	84 59       	subi	r24, 0x94	; 148
    109a:	9e 4f       	sbci	r25, 0xFE	; 254
    109c:	23 e0       	ldi	r18, 0x03	; 3
    109e:	e2 0e       	add	r14, r18
    10a0:	f1 1c       	adc	r15, r1
    10a2:	8e 15       	cp	r24, r14
    10a4:	9f 05       	cpc	r25, r15
    10a6:	3c f4       	brge	.+14     	; 0x10b6 <iso_week_date_r+0xbc>
    10a8:	88 81       	ld	r24, Y
    10aa:	99 81       	ldd	r25, Y+1	; 0x01
    10ac:	01 96       	adiw	r24, 0x01	; 1
    10ae:	88 83       	st	Y, r24
    10b0:	99 83       	std	Y+1, r25	; 0x01
    10b2:	61 e0       	ldi	r22, 0x01	; 1
    10b4:	70 e0       	ldi	r23, 0x00	; 0
    10b6:	6a 83       	std	Y+2, r22	; 0x02
    10b8:	7b 83       	std	Y+3, r23	; 0x03
    10ba:	67 2b       	or	r22, r23
    10bc:	79 f4       	brne	.+30     	; 0x10dc <iso_week_date_r+0xe2>
    10be:	01 50       	subi	r16, 0x01	; 1
    10c0:	11 09       	sbc	r17, r1
    10c2:	c8 01       	movw	r24, r16
    10c4:	0e 94 84 02 	call	0x508	; 0x508 <is_leap_year>
    10c8:	68 2f       	mov	r22, r24
    10ca:	70 e0       	ldi	r23, 0x00	; 0
    10cc:	64 59       	subi	r22, 0x94	; 148
    10ce:	7e 4f       	sbci	r23, 0xFE	; 254
    10d0:	ae 01       	movw	r20, r28
    10d2:	c8 01       	movw	r24, r16
    10d4:	0e 94 fd 07 	call	0xffa	; 0xffa <iso_week_date_r>
    10d8:	cc 82       	std	Y+4, r12	; 0x04
    10da:	dd 82       	std	Y+5, r13	; 0x05
    10dc:	df 91       	pop	r29
    10de:	cf 91       	pop	r28
    10e0:	1f 91       	pop	r17
    10e2:	0f 91       	pop	r16
    10e4:	ff 90       	pop	r15
    10e6:	ef 90       	pop	r14
    10e8:	df 90       	pop	r13
    10ea:	cf 90       	pop	r12
    10ec:	08 95       	ret

000010ee <__print_lz>:
    10ee:	1f 93       	push	r17
    10f0:	cf 93       	push	r28
    10f2:	df 93       	push	r29
    10f4:	eb 01       	movw	r28, r22
    10f6:	14 2f       	mov	r17, r20
    10f8:	6a e0       	ldi	r22, 0x0A	; 10
    10fa:	70 e0       	ldi	r23, 0x00	; 0
    10fc:	0e 94 dc 79 	call	0xf3b8	; 0xf3b8 <__divmodhi4>
    1100:	60 5d       	subi	r22, 0xD0	; 208
    1102:	68 83       	st	Y, r22
    1104:	80 5d       	subi	r24, 0xD0	; 208
    1106:	89 83       	std	Y+1, r24	; 0x01
    1108:	1a 83       	std	Y+2, r17	; 0x02
    110a:	df 91       	pop	r29
    110c:	cf 91       	pop	r28
    110e:	1f 91       	pop	r17
    1110:	08 95       	ret

00001112 <atmel_start_init>:

/**
 * Initializes MCU, drivers and middleware in the project
 **/
void atmel_start_init(void)
{
    1112:	cf 93       	push	r28
    1114:	df 93       	push	r29
    1116:	cd b7       	in	r28, 0x3d	; 61
    1118:	de b7       	in	r29, 0x3e	; 62
	system_init();
    111a:	0e 94 61 3e 	call	0x7cc2	; 0x7cc2 <system_init>
}
    111e:	00 00       	nop
    1120:	df 91       	pop	r29
    1122:	cf 91       	pop	r28
    1124:	08 95       	ret

00001126 <__vector_30>:

extern USART_Number_t g_serialbus_usart_number;
extern USART_Number_t g_linkbus_usart_number;

ISR(TCB2_INT_vect)
{
    1126:	1f 92       	push	r1
    1128:	0f 92       	push	r0
    112a:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    112e:	0f 92       	push	r0
    1130:	11 24       	eor	r1, r1
    1132:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    1136:	0f 92       	push	r0
    1138:	2f 93       	push	r18
    113a:	8f 93       	push	r24
    113c:	9f 93       	push	r25
    113e:	ef 93       	push	r30
    1140:	ff 93       	push	r31
    1142:	cf 93       	push	r28
    1144:	df 93       	push	r29
    1146:	cd b7       	in	r28, 0x3d	; 61
    1148:	de b7       	in	r29, 0x3e	; 62
	if(TCB2.INTFLAGS & TCB_CAPT_bm)
    114a:	80 e2       	ldi	r24, 0x20	; 32
    114c:	9b e0       	ldi	r25, 0x0B	; 11
    114e:	fc 01       	movw	r30, r24
    1150:	86 81       	ldd	r24, Z+6	; 0x06
    1152:	88 2f       	mov	r24, r24
    1154:	90 e0       	ldi	r25, 0x00	; 0
    1156:	81 70       	andi	r24, 0x01	; 1
    1158:	99 27       	eor	r25, r25
    115a:	21 e0       	ldi	r18, 0x01	; 1
    115c:	89 2b       	or	r24, r25
    115e:	09 f4       	brne	.+2      	; 0x1162 <__vector_30+0x3c>
    1160:	20 e0       	ldi	r18, 0x00	; 0
    1162:	22 23       	and	r18, r18
    1164:	29 f0       	breq	.+10     	; 0x1170 <__vector_30+0x4a>
    {
        TCB2.INTFLAGS = TCB_CAPT_bm;
    1166:	80 e2       	ldi	r24, 0x20	; 32
    1168:	9b e0       	ldi	r25, 0x0B	; 11
    116a:	21 e0       	ldi	r18, 0x01	; 1
    116c:	fc 01       	movw	r30, r24
    116e:	26 83       	std	Z+6, r18	; 0x06
    }
}
    1170:	00 00       	nop
    1172:	df 91       	pop	r29
    1174:	cf 91       	pop	r28
    1176:	ff 91       	pop	r31
    1178:	ef 91       	pop	r30
    117a:	9f 91       	pop	r25
    117c:	8f 91       	pop	r24
    117e:	2f 91       	pop	r18
    1180:	0f 90       	pop	r0
    1182:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    1186:	0f 90       	pop	r0
    1188:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    118c:	0f 90       	pop	r0
    118e:	1f 90       	pop	r1
    1190:	18 95       	reti

00001192 <__vector_19>:

ISR(USART0_RXC_vect)
{
    1192:	1f 92       	push	r1
    1194:	0f 92       	push	r0
    1196:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    119a:	0f 92       	push	r0
    119c:	11 24       	eor	r1, r1
    119e:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    11a2:	0f 92       	push	r0
    11a4:	2f 93       	push	r18
    11a6:	3f 93       	push	r19
    11a8:	4f 93       	push	r20
    11aa:	5f 93       	push	r21
    11ac:	6f 93       	push	r22
    11ae:	7f 93       	push	r23
    11b0:	8f 93       	push	r24
    11b2:	9f 93       	push	r25
    11b4:	af 93       	push	r26
    11b6:	bf 93       	push	r27
    11b8:	ef 93       	push	r30
    11ba:	ff 93       	push	r31
    11bc:	cf 93       	push	r28
    11be:	df 93       	push	r29
    11c0:	1f 92       	push	r1
    11c2:	cd b7       	in	r28, 0x3d	; 61
    11c4:	de b7       	in	r29, 0x3e	; 62
	uint8_t rx_char = USART0_get_data();
    11c6:	0e 94 31 72 	call	0xe462	; 0xe462 <USART0_get_data>
    11ca:	89 83       	std	Y+1, r24	; 0x01
	
	if(g_linkbus_usart_number == USART_0)
    11cc:	80 91 2b 40 	lds	r24, 0x402B	; 0x80402b <g_linkbus_usart_number>
    11d0:	88 23       	and	r24, r24
    11d2:	19 f4       	brne	.+6      	; 0x11da <__vector_19+0x48>
	{
		linkbus_Rx(rx_char);
    11d4:	89 81       	ldd	r24, Y+1	; 0x01
    11d6:	0e 94 9f 0d 	call	0x1b3e	; 0x1b3e <_Z10linkbus_Rxh>
	}
	
	if(g_serialbus_usart_number == USART_0)
    11da:	80 91 2e 40 	lds	r24, 0x402E	; 0x80402e <g_serialbus_usart_number>
    11de:	88 23       	and	r24, r24
    11e0:	19 f4       	brne	.+6      	; 0x11e8 <__vector_19+0x56>
	{
		serial_Rx(rx_char);
    11e2:	89 81       	ldd	r24, Y+1	; 0x01
    11e4:	0e 94 51 09 	call	0x12a2	; 0x12a2 <_Z9serial_Rxh>
	}
}
    11e8:	00 00       	nop
    11ea:	0f 90       	pop	r0
    11ec:	df 91       	pop	r29
    11ee:	cf 91       	pop	r28
    11f0:	ff 91       	pop	r31
    11f2:	ef 91       	pop	r30
    11f4:	bf 91       	pop	r27
    11f6:	af 91       	pop	r26
    11f8:	9f 91       	pop	r25
    11fa:	8f 91       	pop	r24
    11fc:	7f 91       	pop	r23
    11fe:	6f 91       	pop	r22
    1200:	5f 91       	pop	r21
    1202:	4f 91       	pop	r20
    1204:	3f 91       	pop	r19
    1206:	2f 91       	pop	r18
    1208:	0f 90       	pop	r0
    120a:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    120e:	0f 90       	pop	r0
    1210:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    1214:	0f 90       	pop	r0
    1216:	1f 90       	pop	r1
    1218:	18 95       	reti

0000121a <__vector_55>:

ISR(USART4_RXC_vect)
{
    121a:	1f 92       	push	r1
    121c:	0f 92       	push	r0
    121e:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    1222:	0f 92       	push	r0
    1224:	11 24       	eor	r1, r1
    1226:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    122a:	0f 92       	push	r0
    122c:	2f 93       	push	r18
    122e:	3f 93       	push	r19
    1230:	4f 93       	push	r20
    1232:	5f 93       	push	r21
    1234:	6f 93       	push	r22
    1236:	7f 93       	push	r23
    1238:	8f 93       	push	r24
    123a:	9f 93       	push	r25
    123c:	af 93       	push	r26
    123e:	bf 93       	push	r27
    1240:	ef 93       	push	r30
    1242:	ff 93       	push	r31
    1244:	cf 93       	push	r28
    1246:	df 93       	push	r29
    1248:	1f 92       	push	r1
    124a:	cd b7       	in	r28, 0x3d	; 61
    124c:	de b7       	in	r29, 0x3e	; 62
	uint8_t rx_char = USART4_get_data();
    124e:	0e 94 66 73 	call	0xe6cc	; 0xe6cc <USART4_get_data>
    1252:	89 83       	std	Y+1, r24	; 0x01
	
	if(g_linkbus_usart_number == USART_4)
    1254:	80 91 2b 40 	lds	r24, 0x402B	; 0x80402b <g_linkbus_usart_number>
    1258:	84 30       	cpi	r24, 0x04	; 4
    125a:	19 f4       	brne	.+6      	; 0x1262 <__vector_55+0x48>
	{
		linkbus_Rx(rx_char);
    125c:	89 81       	ldd	r24, Y+1	; 0x01
    125e:	0e 94 9f 0d 	call	0x1b3e	; 0x1b3e <_Z10linkbus_Rxh>
	}
	
	if(g_serialbus_usart_number == USART_4)
    1262:	80 91 2e 40 	lds	r24, 0x402E	; 0x80402e <g_serialbus_usart_number>
    1266:	84 30       	cpi	r24, 0x04	; 4
    1268:	19 f4       	brne	.+6      	; 0x1270 <__vector_55+0x56>
	{
		serial_Rx(rx_char);
    126a:	89 81       	ldd	r24, Y+1	; 0x01
    126c:	0e 94 51 09 	call	0x12a2	; 0x12a2 <_Z9serial_Rxh>
	}
}
    1270:	00 00       	nop
    1272:	0f 90       	pop	r0
    1274:	df 91       	pop	r29
    1276:	cf 91       	pop	r28
    1278:	ff 91       	pop	r31
    127a:	ef 91       	pop	r30
    127c:	bf 91       	pop	r27
    127e:	af 91       	pop	r26
    1280:	9f 91       	pop	r25
    1282:	8f 91       	pop	r24
    1284:	7f 91       	pop	r23
    1286:	6f 91       	pop	r22
    1288:	5f 91       	pop	r21
    128a:	4f 91       	pop	r20
    128c:	3f 91       	pop	r19
    128e:	2f 91       	pop	r18
    1290:	0f 90       	pop	r0
    1292:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    1296:	0f 90       	pop	r0
    1298:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    129c:	0f 90       	pop	r0
    129e:	1f 90       	pop	r1
    12a0:	18 95       	reti

000012a2 <_Z9serial_Rxh>:

void serial_Rx(uint8_t rx_char)
{
    12a2:	cf 93       	push	r28
    12a4:	df 93       	push	r29
    12a6:	cd b7       	in	r28, 0x3d	; 61
    12a8:	de b7       	in	r29, 0x3e	; 62
    12aa:	2a 97       	sbiw	r28, 0x0a	; 10
    12ac:	cd bf       	out	0x3d, r28	; 61
    12ae:	de bf       	out	0x3e, r29	; 62
    12b0:	8a 87       	std	Y+10, r24	; 0x0a
	static uint8_t field_index = 0;
	static uint8_t field_len = 0;
	static int msg_ID = 0;
	static bool receiving_msg = false;

	if(!buff)
    12b2:	80 91 d0 46 	lds	r24, 0x46D0	; 0x8046d0 <__data_end>
    12b6:	90 91 d1 46 	lds	r25, 0x46D1	; 0x8046d1 <__data_end+0x1>
    12ba:	89 2b       	or	r24, r25
    12bc:	31 f4       	brne	.+12     	; 0x12ca <_Z9serial_Rxh+0x28>
	{
		buff = nextEmptySBRxBuffer();
    12be:	0e 94 f8 61 	call	0xc3f0	; 0xc3f0 <nextEmptySBRxBuffer>
    12c2:	80 93 d0 46 	sts	0x46D0, r24	; 0x8046d0 <__data_end>
    12c6:	90 93 d1 46 	sts	0x46D1, r25	; 0x8046d1 <__data_end+0x1>
	}

	if(buff)
    12ca:	80 91 d0 46 	lds	r24, 0x46D0	; 0x8046d0 <__data_end>
    12ce:	90 91 d1 46 	lds	r25, 0x46D1	; 0x8046d1 <__data_end+0x1>
    12d2:	89 2b       	or	r24, r25
    12d4:	09 f4       	brne	.+2      	; 0x12d8 <_Z9serial_Rxh+0x36>
    12d6:	5e c2       	rjmp	.+1212   	; 0x1794 <_Z9serial_Rxh+0x4f2>
	{
		static uint8_t ignoreCount = 0;
		rx_char = toupper(rx_char);
    12d8:	8a 85       	ldd	r24, Y+10	; 0x0a
    12da:	88 2f       	mov	r24, r24
    12dc:	90 e0       	ldi	r25, 0x00	; 0
    12de:	0e 94 de 7b 	call	0xf7bc	; 0xf7bc <toupper>
    12e2:	8a 87       	std	Y+10, r24	; 0x0a

		if(ignoreCount)
    12e4:	80 91 d2 46 	lds	r24, 0x46D2	; 0x8046d2 <_ZZ9serial_RxhE11ignoreCount>
    12e8:	88 23       	and	r24, r24
    12ea:	39 f0       	breq	.+14     	; 0x12fa <_Z9serial_Rxh+0x58>
		{
			rx_char = '\0';
    12ec:	1a 86       	std	Y+10, r1	; 0x0a
			ignoreCount--;
    12ee:	80 91 d2 46 	lds	r24, 0x46D2	; 0x8046d2 <_ZZ9serial_RxhE11ignoreCount>
    12f2:	81 50       	subi	r24, 0x01	; 1
    12f4:	80 93 d2 46 	sts	0x46D2, r24	; 0x8046d2 <_ZZ9serial_RxhE11ignoreCount>
			{
				sb_echo_char(rx_char);
			}
		}
	}	
}
    12f8:	4d c2       	rjmp	.+1178   	; 0x1794 <_Z9serial_Rxh+0x4f2>
		if(ignoreCount)
		{
			rx_char = '\0';
			ignoreCount--;
		}
		else if(rx_char == 0x1B)    /* Ignore ESC sequences */
    12fa:	8a 85       	ldd	r24, Y+10	; 0x0a
    12fc:	8b 31       	cpi	r24, 0x1B	; 27
    12fe:	91 f4       	brne	.+36     	; 0x1324 <_Z9serial_Rxh+0x82>
		{
			rx_char = '\0';
    1300:	1a 86       	std	Y+10, r1	; 0x0a

			if(charIndex < SERIALBUS_MAX_MSG_FIELD_LENGTH)
    1302:	80 91 d3 46 	lds	r24, 0x46D3	; 0x8046d3 <_ZZ9serial_RxhE9charIndex>
    1306:	84 31       	cpi	r24, 0x14	; 20
    1308:	48 f4       	brcc	.+18     	; 0x131c <_Z9serial_Rxh+0x7a>
			{
				rx_char = textBuff[charIndex];
    130a:	80 91 d3 46 	lds	r24, 0x46D3	; 0x8046d3 <_ZZ9serial_RxhE9charIndex>
    130e:	88 2f       	mov	r24, r24
    1310:	90 e0       	ldi	r25, 0x00	; 0
    1312:	8c 52       	subi	r24, 0x2C	; 44
    1314:	99 4b       	sbci	r25, 0xB9	; 185
    1316:	fc 01       	movw	r30, r24
    1318:	80 81       	ld	r24, Z
    131a:	8a 87       	std	Y+10, r24	; 0x0a
			}

			ignoreCount = 2;        /* throw out the next two characters */
    131c:	82 e0       	ldi	r24, 0x02	; 2
    131e:	80 93 d2 46 	sts	0x46D2, r24	; 0x8046d2 <_ZZ9serial_RxhE11ignoreCount>
			{
				sb_echo_char(rx_char);
			}
		}
	}	
}
    1322:	38 c2       	rjmp	.+1136   	; 0x1794 <_Z9serial_Rxh+0x4f2>
				rx_char = textBuff[charIndex];
			}

			ignoreCount = 2;        /* throw out the next two characters */
		}
		else if(rx_char == 0x0D)    /* Handle carriage return */
    1324:	8a 85       	ldd	r24, Y+10	; 0x0a
    1326:	8d 30       	cpi	r24, 0x0D	; 13
    1328:	09 f0       	breq	.+2      	; 0x132c <_Z9serial_Rxh+0x8a>
    132a:	60 c0       	rjmp	.+192    	; 0x13ec <_Z9serial_Rxh+0x14a>
		{
			if(receiving_msg)
    132c:	80 91 06 47 	lds	r24, 0x4706	; 0x804706 <_ZZ9serial_RxhE13receiving_msg>
    1330:	88 23       	and	r24, r24
    1332:	09 f4       	brne	.+2      	; 0x1336 <_Z9serial_Rxh+0x94>
    1334:	41 c0       	rjmp	.+130    	; 0x13b8 <_Z9serial_Rxh+0x116>
			{
				if(charIndex > 0)
    1336:	80 91 d3 46 	lds	r24, 0x46D3	; 0x8046d3 <_ZZ9serial_RxhE9charIndex>
    133a:	88 23       	and	r24, r24
    133c:	d1 f1       	breq	.+116    	; 0x13b2 <_Z9serial_Rxh+0x110>
				{
					buff->type = SERIALBUS_MSG_QUERY;
    133e:	80 91 d0 46 	lds	r24, 0x46D0	; 0x8046d0 <__data_end>
    1342:	90 91 d1 46 	lds	r25, 0x46D1	; 0x8046d1 <__data_end+0x1>
    1346:	22 e0       	ldi	r18, 0x02	; 2
    1348:	fc 01       	movw	r30, r24
    134a:	20 83       	st	Z, r18
					buff->id = (SBMessageID)msg_ID;
    134c:	80 91 d0 46 	lds	r24, 0x46D0	; 0x8046d0 <__data_end>
    1350:	90 91 d1 46 	lds	r25, 0x46D1	; 0x8046d1 <__data_end+0x1>
    1354:	20 91 07 47 	lds	r18, 0x4707	; 0x804707 <_ZZ9serial_RxhE6msg_ID>
    1358:	30 91 08 47 	lds	r19, 0x4708	; 0x804708 <_ZZ9serial_RxhE6msg_ID+0x1>
    135c:	fc 01       	movw	r30, r24
    135e:	21 83       	std	Z+1, r18	; 0x01
    1360:	32 83       	std	Z+2, r19	; 0x02

					if(field_index > 0) /* terminate the last field */
    1362:	80 91 09 47 	lds	r24, 0x4709	; 0x804709 <_ZZ9serial_RxhE11field_index>
    1366:	88 23       	and	r24, r24
    1368:	e1 f0       	breq	.+56     	; 0x13a2 <_Z9serial_Rxh+0x100>
					{
						buff->fields[field_index - 1][field_len] = 0;
    136a:	40 91 d0 46 	lds	r20, 0x46D0	; 0x8046d0 <__data_end>
    136e:	50 91 d1 46 	lds	r21, 0x46D1	; 0x8046d1 <__data_end+0x1>
    1372:	80 91 09 47 	lds	r24, 0x4709	; 0x804709 <_ZZ9serial_RxhE11field_index>
    1376:	88 2f       	mov	r24, r24
    1378:	90 e0       	ldi	r25, 0x00	; 0
    137a:	bc 01       	movw	r22, r24
    137c:	61 50       	subi	r22, 0x01	; 1
    137e:	71 09       	sbc	r23, r1
    1380:	80 91 0a 47 	lds	r24, 0x470A	; 0x80470a <_ZZ9serial_RxhE9field_len>
    1384:	88 2f       	mov	r24, r24
    1386:	90 e0       	ldi	r25, 0x00	; 0
    1388:	e4 e1       	ldi	r30, 0x14	; 20
    138a:	e6 9f       	mul	r30, r22
    138c:	90 01       	movw	r18, r0
    138e:	e7 9f       	mul	r30, r23
    1390:	30 0d       	add	r19, r0
    1392:	11 24       	eor	r1, r1
    1394:	24 0f       	add	r18, r20
    1396:	35 1f       	adc	r19, r21
    1398:	82 0f       	add	r24, r18
    139a:	93 1f       	adc	r25, r19
    139c:	03 96       	adiw	r24, 0x03	; 3
    139e:	fc 01       	movw	r30, r24
    13a0:	10 82       	st	Z, r1
					}

					textBuff[charIndex] = '\0'; /* terminate last-message buffer */
    13a2:	80 91 d3 46 	lds	r24, 0x46D3	; 0x8046d3 <_ZZ9serial_RxhE9charIndex>
    13a6:	88 2f       	mov	r24, r24
    13a8:	90 e0       	ldi	r25, 0x00	; 0
    13aa:	8c 52       	subi	r24, 0x2C	; 44
    13ac:	99 4b       	sbci	r25, 0xB9	; 185
    13ae:	fc 01       	movw	r30, r24
    13b0:	10 82       	st	Z, r1
				}

				sb_send_NewLine();
    13b2:	0e 94 e9 63 	call	0xc7d2	; 0xc7d2 <sb_send_NewLine>
    13b6:	09 c0       	rjmp	.+18     	; 0x13ca <_Z9serial_Rxh+0x128>
			}
			else
			{
				buff->id = SB_INVALID_MESSAGE; /* print help message */
    13b8:	80 91 d0 46 	lds	r24, 0x46D0	; 0x8046d0 <__data_end>
    13bc:	90 91 d1 46 	lds	r25, 0x46D1	; 0x8046d1 <__data_end+0x1>
    13c0:	2f ef       	ldi	r18, 0xFF	; 255
    13c2:	3f ef       	ldi	r19, 0xFF	; 255
    13c4:	fc 01       	movw	r30, r24
    13c6:	21 83       	std	Z+1, r18	; 0x01
    13c8:	32 83       	std	Z+2, r19	; 0x02
			}

			charIndex = 0;
    13ca:	10 92 d3 46 	sts	0x46D3, r1	; 0x8046d3 <_ZZ9serial_RxhE9charIndex>
			field_len = 0;
    13ce:	10 92 0a 47 	sts	0x470A, r1	; 0x80470a <_ZZ9serial_RxhE9field_len>
			msg_ID = LB_MESSAGE_EMPTY;
    13d2:	10 92 07 47 	sts	0x4707, r1	; 0x804707 <_ZZ9serial_RxhE6msg_ID>
    13d6:	10 92 08 47 	sts	0x4708, r1	; 0x804708 <_ZZ9serial_RxhE6msg_ID+0x1>

			field_index = 0;
    13da:	10 92 09 47 	sts	0x4709, r1	; 0x804709 <_ZZ9serial_RxhE11field_index>
			buff = NULL;
    13de:	10 92 d0 46 	sts	0x46D0, r1	; 0x8046d0 <__data_end>
    13e2:	10 92 d1 46 	sts	0x46D1, r1	; 0x8046d1 <__data_end+0x1>

			receiving_msg = false;
    13e6:	10 92 06 47 	sts	0x4706, r1	; 0x804706 <_ZZ9serial_RxhE13receiving_msg>
			{
				sb_echo_char(rx_char);
			}
		}
	}	
}
    13ea:	d4 c1       	rjmp	.+936    	; 0x1794 <_Z9serial_Rxh+0x4f2>
			field_index = 0;
			buff = NULL;

			receiving_msg = false;
		}
		else if(rx_char)
    13ec:	8a 85       	ldd	r24, Y+10	; 0x0a
    13ee:	88 23       	and	r24, r24
    13f0:	09 f4       	brne	.+2      	; 0x13f4 <_Z9serial_Rxh+0x152>
    13f2:	d0 c1       	rjmp	.+928    	; 0x1794 <_Z9serial_Rxh+0x4f2>
		{
			textBuff[charIndex] = rx_char;  /* hold the characters for re-use */
    13f4:	80 91 d3 46 	lds	r24, 0x46D3	; 0x8046d3 <_ZZ9serial_RxhE9charIndex>
    13f8:	88 2f       	mov	r24, r24
    13fa:	90 e0       	ldi	r25, 0x00	; 0
    13fc:	8c 52       	subi	r24, 0x2C	; 44
    13fe:	99 4b       	sbci	r25, 0xB9	; 185
    1400:	2a 85       	ldd	r18, Y+10	; 0x0a
    1402:	fc 01       	movw	r30, r24
    1404:	20 83       	st	Z, r18

			if(charIndex)
    1406:	80 91 d3 46 	lds	r24, 0x46D3	; 0x8046d3 <_ZZ9serial_RxhE9charIndex>
    140a:	88 23       	and	r24, r24
    140c:	09 f4       	brne	.+2      	; 0x1410 <_Z9serial_Rxh+0x16e>
    140e:	7c c1       	rjmp	.+760    	; 0x1708 <_Z9serial_Rxh+0x466>
			{
				if(rx_char == 0x7F)         /* Handle backspace */
    1410:	8a 85       	ldd	r24, Y+10	; 0x0a
    1412:	8f 37       	cpi	r24, 0x7F	; 127
    1414:	09 f0       	breq	.+2      	; 0x1418 <_Z9serial_Rxh+0x176>
    1416:	a1 c0       	rjmp	.+322    	; 0x155a <_Z9serial_Rxh+0x2b8>
				{
					charIndex--;
    1418:	80 91 d3 46 	lds	r24, 0x46D3	; 0x8046d3 <_ZZ9serial_RxhE9charIndex>
    141c:	81 50       	subi	r24, 0x01	; 1
    141e:	80 93 d3 46 	sts	0x46D3, r24	; 0x8046d3 <_ZZ9serial_RxhE9charIndex>
					if(field_index == 0)
    1422:	80 91 09 47 	lds	r24, 0x4709	; 0x804709 <_ZZ9serial_RxhE11field_index>
    1426:	88 23       	and	r24, r24
    1428:	29 f5       	brne	.+74     	; 0x1474 <_Z9serial_Rxh+0x1d2>
					{
						msg_ID -= textBuff[charIndex];
    142a:	20 91 07 47 	lds	r18, 0x4707	; 0x804707 <_ZZ9serial_RxhE6msg_ID>
    142e:	30 91 08 47 	lds	r19, 0x4708	; 0x804708 <_ZZ9serial_RxhE6msg_ID+0x1>
    1432:	80 91 d3 46 	lds	r24, 0x46D3	; 0x8046d3 <_ZZ9serial_RxhE9charIndex>
    1436:	88 2f       	mov	r24, r24
    1438:	90 e0       	ldi	r25, 0x00	; 0
    143a:	8c 52       	subi	r24, 0x2C	; 44
    143c:	99 4b       	sbci	r25, 0xB9	; 185
    143e:	fc 01       	movw	r30, r24
    1440:	80 81       	ld	r24, Z
    1442:	88 2f       	mov	r24, r24
    1444:	90 e0       	ldi	r25, 0x00	; 0
    1446:	a9 01       	movw	r20, r18
    1448:	48 1b       	sub	r20, r24
    144a:	59 0b       	sbc	r21, r25
    144c:	ca 01       	movw	r24, r20
    144e:	80 93 07 47 	sts	0x4707, r24	; 0x804707 <_ZZ9serial_RxhE6msg_ID>
    1452:	90 93 08 47 	sts	0x4708, r25	; 0x804708 <_ZZ9serial_RxhE6msg_ID+0x1>
						msg_ID /= 10;
    1456:	80 91 07 47 	lds	r24, 0x4707	; 0x804707 <_ZZ9serial_RxhE6msg_ID>
    145a:	90 91 08 47 	lds	r25, 0x4708	; 0x804708 <_ZZ9serial_RxhE6msg_ID+0x1>
    145e:	2a e0       	ldi	r18, 0x0A	; 10
    1460:	30 e0       	ldi	r19, 0x00	; 0
    1462:	b9 01       	movw	r22, r18
    1464:	0e 94 dc 79 	call	0xf3b8	; 0xf3b8 <__divmodhi4>
    1468:	cb 01       	movw	r24, r22
    146a:	80 93 07 47 	sts	0x4707, r24	; 0x804707 <_ZZ9serial_RxhE6msg_ID>
    146e:	90 93 08 47 	sts	0x4708, r25	; 0x804708 <_ZZ9serial_RxhE6msg_ID+0x1>
    1472:	63 c0       	rjmp	.+198    	; 0x153a <_Z9serial_Rxh+0x298>
					}
					else if(field_len)
    1474:	80 91 0a 47 	lds	r24, 0x470A	; 0x80470a <_ZZ9serial_RxhE9field_len>
    1478:	88 23       	and	r24, r24
    147a:	11 f1       	breq	.+68     	; 0x14c0 <_Z9serial_Rxh+0x21e>
					{
						field_len--;
    147c:	80 91 0a 47 	lds	r24, 0x470A	; 0x80470a <_ZZ9serial_RxhE9field_len>
    1480:	81 50       	subi	r24, 0x01	; 1
    1482:	80 93 0a 47 	sts	0x470A, r24	; 0x80470a <_ZZ9serial_RxhE9field_len>
						buff->fields[field_index - 1][field_len] = '\0';
    1486:	40 91 d0 46 	lds	r20, 0x46D0	; 0x8046d0 <__data_end>
    148a:	50 91 d1 46 	lds	r21, 0x46D1	; 0x8046d1 <__data_end+0x1>
    148e:	80 91 09 47 	lds	r24, 0x4709	; 0x804709 <_ZZ9serial_RxhE11field_index>
    1492:	88 2f       	mov	r24, r24
    1494:	90 e0       	ldi	r25, 0x00	; 0
    1496:	bc 01       	movw	r22, r24
    1498:	61 50       	subi	r22, 0x01	; 1
    149a:	71 09       	sbc	r23, r1
    149c:	80 91 0a 47 	lds	r24, 0x470A	; 0x80470a <_ZZ9serial_RxhE9field_len>
    14a0:	88 2f       	mov	r24, r24
    14a2:	90 e0       	ldi	r25, 0x00	; 0
    14a4:	e4 e1       	ldi	r30, 0x14	; 20
    14a6:	e6 9f       	mul	r30, r22
    14a8:	90 01       	movw	r18, r0
    14aa:	e7 9f       	mul	r30, r23
    14ac:	30 0d       	add	r19, r0
    14ae:	11 24       	eor	r1, r1
    14b0:	24 0f       	add	r18, r20
    14b2:	35 1f       	adc	r19, r21
    14b4:	82 0f       	add	r24, r18
    14b6:	93 1f       	adc	r25, r19
    14b8:	03 96       	adiw	r24, 0x03	; 3
    14ba:	fc 01       	movw	r30, r24
    14bc:	10 82       	st	Z, r1
    14be:	3d c0       	rjmp	.+122    	; 0x153a <_Z9serial_Rxh+0x298>
					}
					else if(textBuff[charIndex] == ' ')
    14c0:	80 91 d3 46 	lds	r24, 0x46D3	; 0x8046d3 <_ZZ9serial_RxhE9charIndex>
    14c4:	88 2f       	mov	r24, r24
    14c6:	90 e0       	ldi	r25, 0x00	; 0
    14c8:	8c 52       	subi	r24, 0x2C	; 44
    14ca:	99 4b       	sbci	r25, 0xB9	; 185
    14cc:	fc 01       	movw	r30, r24
    14ce:	80 81       	ld	r24, Z
    14d0:	80 32       	cpi	r24, 0x20	; 32
    14d2:	d9 f4       	brne	.+54     	; 0x150a <_Z9serial_Rxh+0x268>
					{
						field_index--;
    14d4:	80 91 09 47 	lds	r24, 0x4709	; 0x804709 <_ZZ9serial_RxhE11field_index>
    14d8:	81 50       	subi	r24, 0x01	; 1
    14da:	80 93 09 47 	sts	0x4709, r24	; 0x804709 <_ZZ9serial_RxhE11field_index>
						field_len = strlen(buff->fields[field_index]);
    14de:	20 91 d0 46 	lds	r18, 0x46D0	; 0x8046d0 <__data_end>
    14e2:	30 91 d1 46 	lds	r19, 0x46D1	; 0x8046d1 <__data_end+0x1>
    14e6:	80 91 09 47 	lds	r24, 0x4709	; 0x804709 <_ZZ9serial_RxhE11field_index>
    14ea:	48 2f       	mov	r20, r24
    14ec:	50 e0       	ldi	r21, 0x00	; 0
    14ee:	64 e1       	ldi	r22, 0x14	; 20
    14f0:	64 9f       	mul	r22, r20
    14f2:	c0 01       	movw	r24, r0
    14f4:	65 9f       	mul	r22, r21
    14f6:	90 0d       	add	r25, r0
    14f8:	11 24       	eor	r1, r1
    14fa:	03 96       	adiw	r24, 0x03	; 3
    14fc:	82 0f       	add	r24, r18
    14fe:	93 1f       	adc	r25, r19
    1500:	0e 94 13 7c 	call	0xf826	; 0xf826 <strlen>
    1504:	80 93 0a 47 	sts	0x470A, r24	; 0x80470a <_ZZ9serial_RxhE9field_len>
    1508:	18 c0       	rjmp	.+48     	; 0x153a <_Z9serial_Rxh+0x298>
					}
					else
					{
						buff->fields[field_index][0] = '\0';
    150a:	20 91 d0 46 	lds	r18, 0x46D0	; 0x8046d0 <__data_end>
    150e:	30 91 d1 46 	lds	r19, 0x46D1	; 0x8046d1 <__data_end+0x1>
    1512:	80 91 09 47 	lds	r24, 0x4709	; 0x804709 <_ZZ9serial_RxhE11field_index>
    1516:	48 2f       	mov	r20, r24
    1518:	50 e0       	ldi	r21, 0x00	; 0
    151a:	64 e1       	ldi	r22, 0x14	; 20
    151c:	64 9f       	mul	r22, r20
    151e:	c0 01       	movw	r24, r0
    1520:	65 9f       	mul	r22, r21
    1522:	90 0d       	add	r25, r0
    1524:	11 24       	eor	r1, r1
    1526:	82 0f       	add	r24, r18
    1528:	93 1f       	adc	r25, r19
    152a:	03 96       	adiw	r24, 0x03	; 3
    152c:	fc 01       	movw	r30, r24
    152e:	10 82       	st	Z, r1
						field_index--;
    1530:	80 91 09 47 	lds	r24, 0x4709	; 0x804709 <_ZZ9serial_RxhE11field_index>
    1534:	81 50       	subi	r24, 0x01	; 1
    1536:	80 93 09 47 	sts	0x4709, r24	; 0x804709 <_ZZ9serial_RxhE11field_index>
					}

					textBuff[charIndex] = '\0'; /* replace deleted char with null */
    153a:	80 91 d3 46 	lds	r24, 0x46D3	; 0x8046d3 <_ZZ9serial_RxhE9charIndex>
    153e:	88 2f       	mov	r24, r24
    1540:	90 e0       	ldi	r25, 0x00	; 0
    1542:	8c 52       	subi	r24, 0x2C	; 44
    1544:	99 4b       	sbci	r25, 0xB9	; 185
    1546:	fc 01       	movw	r30, r24
    1548:	10 82       	st	Z, r1

					if(charIndex == 0)
    154a:	80 91 d3 46 	lds	r24, 0x46D3	; 0x8046d3 <_ZZ9serial_RxhE9charIndex>
    154e:	88 23       	and	r24, r24
    1550:	09 f0       	breq	.+2      	; 0x1554 <_Z9serial_Rxh+0x2b2>
    1552:	1a c1       	rjmp	.+564    	; 0x1788 <_Z9serial_Rxh+0x4e6>
					{
						receiving_msg = false;
    1554:	10 92 06 47 	sts	0x4706, r1	; 0x804706 <_ZZ9serial_RxhE13receiving_msg>
    1558:	17 c1       	rjmp	.+558    	; 0x1788 <_Z9serial_Rxh+0x4e6>
					}
				}
				else
				{
					if(rx_char == ' ')
    155a:	8a 85       	ldd	r24, Y+10	; 0x0a
    155c:	80 32       	cpi	r24, 0x20	; 32
    155e:	09 f0       	breq	.+2      	; 0x1562 <_Z9serial_Rxh+0x2c0>
    1560:	55 c0       	rjmp	.+170    	; 0x160c <_Z9serial_Rxh+0x36a>
					{
						if((textBuff[charIndex - 1] == ' ') || ((field_index + 1) >= LINKBUS_MAX_MSG_NUMBER_OF_FIELDS))
    1562:	80 91 d3 46 	lds	r24, 0x46D3	; 0x8046d3 <_ZZ9serial_RxhE9charIndex>
    1566:	88 2f       	mov	r24, r24
    1568:	90 e0       	ldi	r25, 0x00	; 0
    156a:	01 97       	sbiw	r24, 0x01	; 1
    156c:	8c 52       	subi	r24, 0x2C	; 44
    156e:	99 4b       	sbci	r25, 0xB9	; 185
    1570:	fc 01       	movw	r30, r24
    1572:	80 81       	ld	r24, Z
    1574:	80 32       	cpi	r24, 0x20	; 32
    1576:	39 f0       	breq	.+14     	; 0x1586 <_Z9serial_Rxh+0x2e4>
    1578:	80 91 09 47 	lds	r24, 0x4709	; 0x804709 <_ZZ9serial_RxhE11field_index>
    157c:	88 2f       	mov	r24, r24
    157e:	90 e0       	ldi	r25, 0x00	; 0
    1580:	01 96       	adiw	r24, 0x01	; 1
    1582:	03 97       	sbiw	r24, 0x03	; 3
    1584:	14 f0       	brlt	.+4      	; 0x158a <_Z9serial_Rxh+0x2e8>
						{
							rx_char = '\0';
    1586:	1a 86       	std	Y+10, r1	; 0x0a
    1588:	ff c0       	rjmp	.+510    	; 0x1788 <_Z9serial_Rxh+0x4e6>
						}
						else
						{
							if(field_index > 0)
    158a:	80 91 09 47 	lds	r24, 0x4709	; 0x804709 <_ZZ9serial_RxhE11field_index>
    158e:	88 23       	and	r24, r24
    1590:	e1 f0       	breq	.+56     	; 0x15ca <_Z9serial_Rxh+0x328>
							{
								buff->fields[field_index - 1][field_len] = '\0';
    1592:	40 91 d0 46 	lds	r20, 0x46D0	; 0x8046d0 <__data_end>
    1596:	50 91 d1 46 	lds	r21, 0x46D1	; 0x8046d1 <__data_end+0x1>
    159a:	80 91 09 47 	lds	r24, 0x4709	; 0x804709 <_ZZ9serial_RxhE11field_index>
    159e:	88 2f       	mov	r24, r24
    15a0:	90 e0       	ldi	r25, 0x00	; 0
    15a2:	bc 01       	movw	r22, r24
    15a4:	61 50       	subi	r22, 0x01	; 1
    15a6:	71 09       	sbc	r23, r1
    15a8:	80 91 0a 47 	lds	r24, 0x470A	; 0x80470a <_ZZ9serial_RxhE9field_len>
    15ac:	88 2f       	mov	r24, r24
    15ae:	90 e0       	ldi	r25, 0x00	; 0
    15b0:	e4 e1       	ldi	r30, 0x14	; 20
    15b2:	e6 9f       	mul	r30, r22
    15b4:	90 01       	movw	r18, r0
    15b6:	e7 9f       	mul	r30, r23
    15b8:	30 0d       	add	r19, r0
    15ba:	11 24       	eor	r1, r1
    15bc:	24 0f       	add	r18, r20
    15be:	35 1f       	adc	r19, r21
    15c0:	82 0f       	add	r24, r18
    15c2:	93 1f       	adc	r25, r19
    15c4:	03 96       	adiw	r24, 0x03	; 3
    15c6:	fc 01       	movw	r30, r24
    15c8:	10 82       	st	Z, r1
							}

							field_index++;
    15ca:	80 91 09 47 	lds	r24, 0x4709	; 0x804709 <_ZZ9serial_RxhE11field_index>
    15ce:	8f 5f       	subi	r24, 0xFF	; 255
    15d0:	80 93 09 47 	sts	0x4709, r24	; 0x804709 <_ZZ9serial_RxhE11field_index>
							field_len = 0;
    15d4:	10 92 0a 47 	sts	0x470A, r1	; 0x80470a <_ZZ9serial_RxhE9field_len>
							charIndex = MIN(charIndex + 1, (LINKBUS_MAX_MSG_LENGTH - 1));
    15d8:	80 91 d3 46 	lds	r24, 0x46D3	; 0x8046d3 <_ZZ9serial_RxhE9charIndex>
    15dc:	88 2f       	mov	r24, r24
    15de:	90 e0       	ldi	r25, 0x00	; 0
    15e0:	01 96       	adiw	r24, 0x01	; 1
    15e2:	8a 83       	std	Y+2, r24	; 0x02
    15e4:	9b 83       	std	Y+3, r25	; 0x03
    15e6:	81 e3       	ldi	r24, 0x31	; 49
    15e8:	90 e0       	ldi	r25, 0x00	; 0
    15ea:	8c 83       	std	Y+4, r24	; 0x04
    15ec:	9d 83       	std	Y+5, r25	; 0x05
    15ee:	2a 81       	ldd	r18, Y+2	; 0x02
    15f0:	3b 81       	ldd	r19, Y+3	; 0x03
    15f2:	8c 81       	ldd	r24, Y+4	; 0x04
    15f4:	9d 81       	ldd	r25, Y+5	; 0x05
    15f6:	28 17       	cp	r18, r24
    15f8:	39 07       	cpc	r19, r25
    15fa:	1c f4       	brge	.+6      	; 0x1602 <_Z9serial_Rxh+0x360>
    15fc:	8a 81       	ldd	r24, Y+2	; 0x02
    15fe:	9b 81       	ldd	r25, Y+3	; 0x03
    1600:	02 c0       	rjmp	.+4      	; 0x1606 <_Z9serial_Rxh+0x364>
    1602:	8c 81       	ldd	r24, Y+4	; 0x04
    1604:	9d 81       	ldd	r25, Y+5	; 0x05
    1606:	80 93 d3 46 	sts	0x46D3, r24	; 0x8046d3 <_ZZ9serial_RxhE9charIndex>
    160a:	be c0       	rjmp	.+380    	; 0x1788 <_Z9serial_Rxh+0x4e6>
						}
					}
					else if(field_len < LINKBUS_MAX_MSG_FIELD_LENGTH)
    160c:	80 91 0a 47 	lds	r24, 0x470A	; 0x80470a <_ZZ9serial_RxhE9field_len>
    1610:	85 31       	cpi	r24, 0x15	; 21
    1612:	08 f0       	brcs	.+2      	; 0x1616 <_Z9serial_Rxh+0x374>
    1614:	77 c0       	rjmp	.+238    	; 0x1704 <_Z9serial_Rxh+0x462>
					{
						if(field_index == 0)    /* message ID received */
    1616:	80 91 09 47 	lds	r24, 0x4709	; 0x804709 <_ZZ9serial_RxhE11field_index>
    161a:	88 23       	and	r24, r24
    161c:	e1 f4       	brne	.+56     	; 0x1656 <_Z9serial_Rxh+0x3b4>
						{
							msg_ID = msg_ID * 10 + rx_char;
    161e:	80 91 07 47 	lds	r24, 0x4707	; 0x804707 <_ZZ9serial_RxhE6msg_ID>
    1622:	90 91 08 47 	lds	r25, 0x4708	; 0x804708 <_ZZ9serial_RxhE6msg_ID+0x1>
    1626:	88 0f       	add	r24, r24
    1628:	99 1f       	adc	r25, r25
    162a:	9c 01       	movw	r18, r24
    162c:	22 0f       	add	r18, r18
    162e:	33 1f       	adc	r19, r19
    1630:	22 0f       	add	r18, r18
    1632:	33 1f       	adc	r19, r19
    1634:	28 0f       	add	r18, r24
    1636:	39 1f       	adc	r19, r25
    1638:	8a 85       	ldd	r24, Y+10	; 0x0a
    163a:	88 2f       	mov	r24, r24
    163c:	90 e0       	ldi	r25, 0x00	; 0
    163e:	82 0f       	add	r24, r18
    1640:	93 1f       	adc	r25, r19
    1642:	80 93 07 47 	sts	0x4707, r24	; 0x804707 <_ZZ9serial_RxhE6msg_ID>
    1646:	90 93 08 47 	sts	0x4708, r25	; 0x804708 <_ZZ9serial_RxhE6msg_ID+0x1>
							field_len++;
    164a:	80 91 0a 47 	lds	r24, 0x470A	; 0x80470a <_ZZ9serial_RxhE9field_len>
    164e:	8f 5f       	subi	r24, 0xFF	; 255
    1650:	80 93 0a 47 	sts	0x470A, r24	; 0x80470a <_ZZ9serial_RxhE9field_len>
    1654:	3d c0       	rjmp	.+122    	; 0x16d0 <_Z9serial_Rxh+0x42e>
						}
						else
						{
							buff->fields[field_index - 1][field_len++] = rx_char;
    1656:	40 91 d0 46 	lds	r20, 0x46D0	; 0x8046d0 <__data_end>
    165a:	50 91 d1 46 	lds	r21, 0x46D1	; 0x8046d1 <__data_end+0x1>
    165e:	80 91 09 47 	lds	r24, 0x4709	; 0x804709 <_ZZ9serial_RxhE11field_index>
    1662:	88 2f       	mov	r24, r24
    1664:	90 e0       	ldi	r25, 0x00	; 0
    1666:	bc 01       	movw	r22, r24
    1668:	61 50       	subi	r22, 0x01	; 1
    166a:	71 09       	sbc	r23, r1
    166c:	80 91 0a 47 	lds	r24, 0x470A	; 0x80470a <_ZZ9serial_RxhE9field_len>
    1670:	91 e0       	ldi	r25, 0x01	; 1
    1672:	98 0f       	add	r25, r24
    1674:	90 93 0a 47 	sts	0x470A, r25	; 0x80470a <_ZZ9serial_RxhE9field_len>
    1678:	88 2f       	mov	r24, r24
    167a:	90 e0       	ldi	r25, 0x00	; 0
    167c:	e4 e1       	ldi	r30, 0x14	; 20
    167e:	e6 9f       	mul	r30, r22
    1680:	90 01       	movw	r18, r0
    1682:	e7 9f       	mul	r30, r23
    1684:	30 0d       	add	r19, r0
    1686:	11 24       	eor	r1, r1
    1688:	24 0f       	add	r18, r20
    168a:	35 1f       	adc	r19, r21
    168c:	82 0f       	add	r24, r18
    168e:	93 1f       	adc	r25, r19
    1690:	03 96       	adiw	r24, 0x03	; 3
    1692:	2a 85       	ldd	r18, Y+10	; 0x0a
    1694:	fc 01       	movw	r30, r24
    1696:	20 83       	st	Z, r18
							buff->fields[field_index - 1][field_len] = '\0';
    1698:	40 91 d0 46 	lds	r20, 0x46D0	; 0x8046d0 <__data_end>
    169c:	50 91 d1 46 	lds	r21, 0x46D1	; 0x8046d1 <__data_end+0x1>
    16a0:	80 91 09 47 	lds	r24, 0x4709	; 0x804709 <_ZZ9serial_RxhE11field_index>
    16a4:	88 2f       	mov	r24, r24
    16a6:	90 e0       	ldi	r25, 0x00	; 0
    16a8:	bc 01       	movw	r22, r24
    16aa:	61 50       	subi	r22, 0x01	; 1
    16ac:	71 09       	sbc	r23, r1
    16ae:	80 91 0a 47 	lds	r24, 0x470A	; 0x80470a <_ZZ9serial_RxhE9field_len>
    16b2:	88 2f       	mov	r24, r24
    16b4:	90 e0       	ldi	r25, 0x00	; 0
    16b6:	e4 e1       	ldi	r30, 0x14	; 20
    16b8:	e6 9f       	mul	r30, r22
    16ba:	90 01       	movw	r18, r0
    16bc:	e7 9f       	mul	r30, r23
    16be:	30 0d       	add	r19, r0
    16c0:	11 24       	eor	r1, r1
    16c2:	24 0f       	add	r18, r20
    16c4:	35 1f       	adc	r19, r21
    16c6:	82 0f       	add	r24, r18
    16c8:	93 1f       	adc	r25, r19
    16ca:	03 96       	adiw	r24, 0x03	; 3
    16cc:	fc 01       	movw	r30, r24
    16ce:	10 82       	st	Z, r1
						}

						charIndex = MIN(charIndex + 1, (LINKBUS_MAX_MSG_LENGTH - 1));
    16d0:	80 91 d3 46 	lds	r24, 0x46D3	; 0x8046d3 <_ZZ9serial_RxhE9charIndex>
    16d4:	88 2f       	mov	r24, r24
    16d6:	90 e0       	ldi	r25, 0x00	; 0
    16d8:	01 96       	adiw	r24, 0x01	; 1
    16da:	8e 83       	std	Y+6, r24	; 0x06
    16dc:	9f 83       	std	Y+7, r25	; 0x07
    16de:	81 e3       	ldi	r24, 0x31	; 49
    16e0:	90 e0       	ldi	r25, 0x00	; 0
    16e2:	88 87       	std	Y+8, r24	; 0x08
    16e4:	99 87       	std	Y+9, r25	; 0x09
    16e6:	2e 81       	ldd	r18, Y+6	; 0x06
    16e8:	3f 81       	ldd	r19, Y+7	; 0x07
    16ea:	88 85       	ldd	r24, Y+8	; 0x08
    16ec:	99 85       	ldd	r25, Y+9	; 0x09
    16ee:	28 17       	cp	r18, r24
    16f0:	39 07       	cpc	r19, r25
    16f2:	1c f4       	brge	.+6      	; 0x16fa <_Z9serial_Rxh+0x458>
    16f4:	8e 81       	ldd	r24, Y+6	; 0x06
    16f6:	9f 81       	ldd	r25, Y+7	; 0x07
    16f8:	02 c0       	rjmp	.+4      	; 0x16fe <_Z9serial_Rxh+0x45c>
    16fa:	88 85       	ldd	r24, Y+8	; 0x08
    16fc:	99 85       	ldd	r25, Y+9	; 0x09
    16fe:	80 93 d3 46 	sts	0x46D3, r24	; 0x8046d3 <_ZZ9serial_RxhE9charIndex>
    1702:	42 c0       	rjmp	.+132    	; 0x1788 <_Z9serial_Rxh+0x4e6>
					}
					else
					{
						rx_char = '\0';
    1704:	1a 86       	std	Y+10, r1	; 0x0a
    1706:	40 c0       	rjmp	.+128    	; 0x1788 <_Z9serial_Rxh+0x4e6>
					}
				}
			}
			else
			{
				if(rx_char == 0x7F) /* Handle Backspace */
    1708:	8a 85       	ldd	r24, Y+10	; 0x0a
    170a:	8f 37       	cpi	r24, 0x7F	; 127
    170c:	69 f4       	brne	.+26     	; 0x1728 <_Z9serial_Rxh+0x486>
				{
					if(msg_ID <= 0)
    170e:	80 91 07 47 	lds	r24, 0x4707	; 0x804707 <_ZZ9serial_RxhE6msg_ID>
    1712:	90 91 08 47 	lds	r25, 0x4708	; 0x804708 <_ZZ9serial_RxhE6msg_ID+0x1>
    1716:	18 16       	cp	r1, r24
    1718:	19 06       	cpc	r1, r25
    171a:	0c f0       	brlt	.+2      	; 0x171e <_Z9serial_Rxh+0x47c>
					{
						rx_char = '\0';
    171c:	1a 86       	std	Y+10, r1	; 0x0a
					}

					msg_ID = 0;
    171e:	10 92 07 47 	sts	0x4707, r1	; 0x804707 <_ZZ9serial_RxhE6msg_ID>
    1722:	10 92 08 47 	sts	0x4708, r1	; 0x804708 <_ZZ9serial_RxhE6msg_ID+0x1>
    1726:	30 c0       	rjmp	.+96     	; 0x1788 <_Z9serial_Rxh+0x4e6>
				}
				else if(rx_char == ' ') /* Handle Space */
    1728:	8a 85       	ldd	r24, Y+10	; 0x0a
    172a:	80 32       	cpi	r24, 0x20	; 32
    172c:	11 f4       	brne	.+4      	; 0x1732 <_Z9serial_Rxh+0x490>
				{
					rx_char = '\0';
    172e:	1a 86       	std	Y+10, r1	; 0x0a
    1730:	2b c0       	rjmp	.+86     	; 0x1788 <_Z9serial_Rxh+0x4e6>
				}
				else                    /* start of new message */
				{
					uint8_t i;
					field_index = 0;
    1732:	10 92 09 47 	sts	0x4709, r1	; 0x804709 <_ZZ9serial_RxhE11field_index>
					msg_ID = rx_char;
    1736:	8a 85       	ldd	r24, Y+10	; 0x0a
    1738:	88 2f       	mov	r24, r24
    173a:	90 e0       	ldi	r25, 0x00	; 0
    173c:	80 93 07 47 	sts	0x4707, r24	; 0x804707 <_ZZ9serial_RxhE6msg_ID>
    1740:	90 93 08 47 	sts	0x4708, r25	; 0x804708 <_ZZ9serial_RxhE6msg_ID+0x1>

					/* Empty the field buffers */
					for(i = 0; i < LINKBUS_MAX_MSG_NUMBER_OF_FIELDS; i++)
    1744:	19 82       	std	Y+1, r1	; 0x01
    1746:	89 81       	ldd	r24, Y+1	; 0x01
    1748:	83 30       	cpi	r24, 0x03	; 3
    174a:	b0 f4       	brcc	.+44     	; 0x1778 <_Z9serial_Rxh+0x4d6>
					{
						buff->fields[i][0] = '\0';
    174c:	20 91 d0 46 	lds	r18, 0x46D0	; 0x8046d0 <__data_end>
    1750:	30 91 d1 46 	lds	r19, 0x46D1	; 0x8046d1 <__data_end+0x1>
    1754:	89 81       	ldd	r24, Y+1	; 0x01
    1756:	48 2f       	mov	r20, r24
    1758:	50 e0       	ldi	r21, 0x00	; 0
    175a:	64 e1       	ldi	r22, 0x14	; 20
    175c:	64 9f       	mul	r22, r20
    175e:	c0 01       	movw	r24, r0
    1760:	65 9f       	mul	r22, r21
    1762:	90 0d       	add	r25, r0
    1764:	11 24       	eor	r1, r1
    1766:	82 0f       	add	r24, r18
    1768:	93 1f       	adc	r25, r19
    176a:	03 96       	adiw	r24, 0x03	; 3
    176c:	fc 01       	movw	r30, r24
    176e:	10 82       	st	Z, r1
					uint8_t i;
					field_index = 0;
					msg_ID = rx_char;

					/* Empty the field buffers */
					for(i = 0; i < LINKBUS_MAX_MSG_NUMBER_OF_FIELDS; i++)
    1770:	89 81       	ldd	r24, Y+1	; 0x01
    1772:	8f 5f       	subi	r24, 0xFF	; 255
    1774:	89 83       	std	Y+1, r24	; 0x01
    1776:	e7 cf       	rjmp	.-50     	; 0x1746 <_Z9serial_Rxh+0x4a4>
					{
						buff->fields[i][0] = '\0';
					}

					receiving_msg = true;
    1778:	81 e0       	ldi	r24, 0x01	; 1
    177a:	80 93 06 47 	sts	0x4706, r24	; 0x804706 <_ZZ9serial_RxhE13receiving_msg>
					charIndex++;
    177e:	80 91 d3 46 	lds	r24, 0x46D3	; 0x8046d3 <_ZZ9serial_RxhE9charIndex>
    1782:	8f 5f       	subi	r24, 0xFF	; 255
    1784:	80 93 d3 46 	sts	0x46D3, r24	; 0x8046d3 <_ZZ9serial_RxhE9charIndex>
				}
			}

			if(rx_char)
    1788:	8a 85       	ldd	r24, Y+10	; 0x0a
    178a:	88 23       	and	r24, r24
    178c:	19 f0       	breq	.+6      	; 0x1794 <_Z9serial_Rxh+0x4f2>
			{
				sb_echo_char(rx_char);
    178e:	8a 85       	ldd	r24, Y+10	; 0x0a
    1790:	0e 94 fa 63 	call	0xc7f4	; 0xc7f4 <sb_echo_char>
			}
		}
	}	
}
    1794:	00 00       	nop
    1796:	2a 96       	adiw	r28, 0x0a	; 10
    1798:	cd bf       	out	0x3d, r28	; 61
    179a:	de bf       	out	0x3e, r29	; 62
    179c:	df 91       	pop	r29
    179e:	cf 91       	pop	r28
    17a0:	08 95       	ret

000017a2 <__vector_20>:

/**

*/
ISR(USART0_DRE_vect)
{
    17a2:	1f 92       	push	r1
    17a4:	0f 92       	push	r0
    17a6:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    17aa:	0f 92       	push	r0
    17ac:	11 24       	eor	r1, r1
    17ae:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    17b2:	0f 92       	push	r0
    17b4:	2f 93       	push	r18
    17b6:	3f 93       	push	r19
    17b8:	4f 93       	push	r20
    17ba:	5f 93       	push	r21
    17bc:	6f 93       	push	r22
    17be:	7f 93       	push	r23
    17c0:	8f 93       	push	r24
    17c2:	9f 93       	push	r25
    17c4:	af 93       	push	r26
    17c6:	bf 93       	push	r27
    17c8:	ef 93       	push	r30
    17ca:	ff 93       	push	r31
    17cc:	cf 93       	push	r28
    17ce:	df 93       	push	r29
    17d0:	cd b7       	in	r28, 0x3d	; 61
    17d2:	de b7       	in	r29, 0x3e	; 62
	if(g_linkbus_usart_number == USART_0)
    17d4:	80 91 2b 40 	lds	r24, 0x402B	; 0x80402b <g_linkbus_usart_number>
    17d8:	88 23       	and	r24, r24
    17da:	09 f0       	breq	.+2      	; 0x17de <__vector_20+0x3c>
    17dc:	45 c0       	rjmp	.+138    	; 0x1868 <__vector_20+0xc6>
	{
		static LinkbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
    17de:	80 91 0b 47 	lds	r24, 0x470B	; 0x80470b <_ZZ11__vector_20E4buff>
    17e2:	90 91 0c 47 	lds	r25, 0x470C	; 0x80470c <_ZZ11__vector_20E4buff+0x1>
    17e6:	89 2b       	or	r24, r25
    17e8:	31 f4       	brne	.+12     	; 0x17f6 <__vector_20+0x54>
		{
			buff = nextFullLBTxBuffer();
    17ea:	0e 94 b5 58 	call	0xb16a	; 0xb16a <_Z18nextFullLBTxBufferv>
    17ee:	80 93 0b 47 	sts	0x470B, r24	; 0x80470b <_ZZ11__vector_20E4buff>
    17f2:	90 93 0c 47 	sts	0x470C, r25	; 0x80470c <_ZZ11__vector_20E4buff+0x1>
		}

		if((*buff)[charIndex])
    17f6:	20 91 0b 47 	lds	r18, 0x470B	; 0x80470b <_ZZ11__vector_20E4buff>
    17fa:	30 91 0c 47 	lds	r19, 0x470C	; 0x80470c <_ZZ11__vector_20E4buff+0x1>
    17fe:	80 91 0d 47 	lds	r24, 0x470D	; 0x80470d <_ZZ11__vector_20E9charIndex>
    1802:	88 2f       	mov	r24, r24
    1804:	90 e0       	ldi	r25, 0x00	; 0
    1806:	82 0f       	add	r24, r18
    1808:	93 1f       	adc	r25, r19
    180a:	fc 01       	movw	r30, r24
    180c:	80 81       	ld	r24, Z
    180e:	88 23       	and	r24, r24
    1810:	a9 f0       	breq	.+42     	; 0x183c <__vector_20+0x9a>
		{
			/* Put data into buffer, sends the data */
			USART0.TXDATAL = (*buff)[charIndex++];
    1812:	80 e0       	ldi	r24, 0x00	; 0
    1814:	98 e0       	ldi	r25, 0x08	; 8
    1816:	40 91 0b 47 	lds	r20, 0x470B	; 0x80470b <_ZZ11__vector_20E4buff>
    181a:	50 91 0c 47 	lds	r21, 0x470C	; 0x80470c <_ZZ11__vector_20E4buff+0x1>
    181e:	20 91 0d 47 	lds	r18, 0x470D	; 0x80470d <_ZZ11__vector_20E9charIndex>
    1822:	31 e0       	ldi	r19, 0x01	; 1
    1824:	32 0f       	add	r19, r18
    1826:	30 93 0d 47 	sts	0x470D, r19	; 0x80470d <_ZZ11__vector_20E9charIndex>
    182a:	22 2f       	mov	r18, r18
    182c:	30 e0       	ldi	r19, 0x00	; 0
    182e:	24 0f       	add	r18, r20
    1830:	35 1f       	adc	r19, r21
    1832:	f9 01       	movw	r30, r18
    1834:	20 81       	ld	r18, Z
    1836:	fc 01       	movw	r30, r24
    1838:	22 83       	std	Z+2, r18	; 0x02
    183a:	16 c0       	rjmp	.+44     	; 0x1868 <__vector_20+0xc6>
		}
		else
		{
			charIndex = 0;
    183c:	10 92 0d 47 	sts	0x470D, r1	; 0x80470d <_ZZ11__vector_20E9charIndex>
			(*buff)[0] = '\0';
    1840:	80 91 0b 47 	lds	r24, 0x470B	; 0x80470b <_ZZ11__vector_20E4buff>
    1844:	90 91 0c 47 	lds	r25, 0x470C	; 0x80470c <_ZZ11__vector_20E4buff+0x1>
    1848:	fc 01       	movw	r30, r24
    184a:	10 82       	st	Z, r1
			buff = nextFullLBTxBuffer();
    184c:	0e 94 b5 58 	call	0xb16a	; 0xb16a <_Z18nextFullLBTxBufferv>
    1850:	80 93 0b 47 	sts	0x470B, r24	; 0x80470b <_ZZ11__vector_20E4buff>
    1854:	90 93 0c 47 	sts	0x470C, r25	; 0x80470c <_ZZ11__vector_20E4buff+0x1>
			if(!buff)
    1858:	80 91 0b 47 	lds	r24, 0x470B	; 0x80470b <_ZZ11__vector_20E4buff>
    185c:	90 91 0c 47 	lds	r25, 0x470C	; 0x80470c <_ZZ11__vector_20E4buff+0x1>
    1860:	89 2b       	or	r24, r25
    1862:	11 f4       	brne	.+4      	; 0x1868 <__vector_20+0xc6>
			{
				linkbus_end_tx();
    1864:	0e 94 fa 59 	call	0xb3f4	; 0xb3f4 <_Z14linkbus_end_txv>
			}
		}
	}
	
	if(g_serialbus_usart_number == USART_0)
    1868:	80 91 2e 40 	lds	r24, 0x402E	; 0x80402e <g_serialbus_usart_number>
    186c:	88 23       	and	r24, r24
    186e:	09 f0       	breq	.+2      	; 0x1872 <__vector_20+0xd0>
    1870:	45 c0       	rjmp	.+138    	; 0x18fc <__vector_20+0x15a>
	{
		static SerialbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
    1872:	80 91 0e 47 	lds	r24, 0x470E	; 0x80470e <_ZZ11__vector_20E4buff_0>
    1876:	90 91 0f 47 	lds	r25, 0x470F	; 0x80470f <_ZZ11__vector_20E4buff_0+0x1>
    187a:	89 2b       	or	r24, r25
    187c:	31 f4       	brne	.+12     	; 0x188a <__vector_20+0xe8>
		{
			buff = nextFullSBTxBuffer();
    187e:	0e 94 62 61 	call	0xc2c4	; 0xc2c4 <nextFullSBTxBuffer>
    1882:	80 93 0e 47 	sts	0x470E, r24	; 0x80470e <_ZZ11__vector_20E4buff_0>
    1886:	90 93 0f 47 	sts	0x470F, r25	; 0x80470f <_ZZ11__vector_20E4buff_0+0x1>
		}

		if((*buff)[charIndex])
    188a:	20 91 0e 47 	lds	r18, 0x470E	; 0x80470e <_ZZ11__vector_20E4buff_0>
    188e:	30 91 0f 47 	lds	r19, 0x470F	; 0x80470f <_ZZ11__vector_20E4buff_0+0x1>
    1892:	80 91 10 47 	lds	r24, 0x4710	; 0x804710 <_ZZ11__vector_20E9charIndex_0>
    1896:	88 2f       	mov	r24, r24
    1898:	90 e0       	ldi	r25, 0x00	; 0
    189a:	82 0f       	add	r24, r18
    189c:	93 1f       	adc	r25, r19
    189e:	fc 01       	movw	r30, r24
    18a0:	80 81       	ld	r24, Z
    18a2:	88 23       	and	r24, r24
    18a4:	a9 f0       	breq	.+42     	; 0x18d0 <__vector_20+0x12e>
		{
			/* Put data into buffer, sends the data */
			USART0.TXDATAL = (*buff)[charIndex++];
    18a6:	80 e0       	ldi	r24, 0x00	; 0
    18a8:	98 e0       	ldi	r25, 0x08	; 8
    18aa:	40 91 0e 47 	lds	r20, 0x470E	; 0x80470e <_ZZ11__vector_20E4buff_0>
    18ae:	50 91 0f 47 	lds	r21, 0x470F	; 0x80470f <_ZZ11__vector_20E4buff_0+0x1>
    18b2:	20 91 10 47 	lds	r18, 0x4710	; 0x804710 <_ZZ11__vector_20E9charIndex_0>
    18b6:	31 e0       	ldi	r19, 0x01	; 1
    18b8:	32 0f       	add	r19, r18
    18ba:	30 93 10 47 	sts	0x4710, r19	; 0x804710 <_ZZ11__vector_20E9charIndex_0>
    18be:	22 2f       	mov	r18, r18
    18c0:	30 e0       	ldi	r19, 0x00	; 0
    18c2:	24 0f       	add	r18, r20
    18c4:	35 1f       	adc	r19, r21
    18c6:	f9 01       	movw	r30, r18
    18c8:	20 81       	ld	r18, Z
    18ca:	fc 01       	movw	r30, r24
    18cc:	22 83       	std	Z+2, r18	; 0x02
			{
				serialbus_end_tx();
			}
		}
	}
}
    18ce:	16 c0       	rjmp	.+44     	; 0x18fc <__vector_20+0x15a>
			/* Put data into buffer, sends the data */
			USART0.TXDATAL = (*buff)[charIndex++];
		}
		else
		{
			charIndex = 0;
    18d0:	10 92 10 47 	sts	0x4710, r1	; 0x804710 <_ZZ11__vector_20E9charIndex_0>
			(*buff)[0] = '\0';
    18d4:	80 91 0e 47 	lds	r24, 0x470E	; 0x80470e <_ZZ11__vector_20E4buff_0>
    18d8:	90 91 0f 47 	lds	r25, 0x470F	; 0x80470f <_ZZ11__vector_20E4buff_0+0x1>
    18dc:	fc 01       	movw	r30, r24
    18de:	10 82       	st	Z, r1
			buff = nextFullSBTxBuffer();
    18e0:	0e 94 62 61 	call	0xc2c4	; 0xc2c4 <nextFullSBTxBuffer>
    18e4:	80 93 0e 47 	sts	0x470E, r24	; 0x80470e <_ZZ11__vector_20E4buff_0>
    18e8:	90 93 0f 47 	sts	0x470F, r25	; 0x80470f <_ZZ11__vector_20E4buff_0+0x1>
			if(!buff)
    18ec:	80 91 0e 47 	lds	r24, 0x470E	; 0x80470e <_ZZ11__vector_20E4buff_0>
    18f0:	90 91 0f 47 	lds	r25, 0x470F	; 0x80470f <_ZZ11__vector_20E4buff_0+0x1>
    18f4:	89 2b       	or	r24, r25
    18f6:	11 f4       	brne	.+4      	; 0x18fc <__vector_20+0x15a>
			{
				serialbus_end_tx();
    18f8:	0e 94 b7 62 	call	0xc56e	; 0xc56e <serialbus_end_tx>
			}
		}
	}
}
    18fc:	00 00       	nop
    18fe:	df 91       	pop	r29
    1900:	cf 91       	pop	r28
    1902:	ff 91       	pop	r31
    1904:	ef 91       	pop	r30
    1906:	bf 91       	pop	r27
    1908:	af 91       	pop	r26
    190a:	9f 91       	pop	r25
    190c:	8f 91       	pop	r24
    190e:	7f 91       	pop	r23
    1910:	6f 91       	pop	r22
    1912:	5f 91       	pop	r21
    1914:	4f 91       	pop	r20
    1916:	3f 91       	pop	r19
    1918:	2f 91       	pop	r18
    191a:	0f 90       	pop	r0
    191c:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    1920:	0f 90       	pop	r0
    1922:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    1926:	0f 90       	pop	r0
    1928:	1f 90       	pop	r1
    192a:	18 95       	reti

0000192c <__vector_56>:

/**

*/
ISR(USART4_DRE_vect)
{
    192c:	1f 92       	push	r1
    192e:	0f 92       	push	r0
    1930:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    1934:	0f 92       	push	r0
    1936:	11 24       	eor	r1, r1
    1938:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    193c:	0f 92       	push	r0
    193e:	2f 93       	push	r18
    1940:	3f 93       	push	r19
    1942:	4f 93       	push	r20
    1944:	5f 93       	push	r21
    1946:	6f 93       	push	r22
    1948:	7f 93       	push	r23
    194a:	8f 93       	push	r24
    194c:	9f 93       	push	r25
    194e:	af 93       	push	r26
    1950:	bf 93       	push	r27
    1952:	ef 93       	push	r30
    1954:	ff 93       	push	r31
    1956:	cf 93       	push	r28
    1958:	df 93       	push	r29
    195a:	cd b7       	in	r28, 0x3d	; 61
    195c:	de b7       	in	r29, 0x3e	; 62
	if(g_linkbus_usart_number == USART_4)
    195e:	80 91 2b 40 	lds	r24, 0x402B	; 0x80402b <g_linkbus_usart_number>
    1962:	84 30       	cpi	r24, 0x04	; 4
    1964:	09 f0       	breq	.+2      	; 0x1968 <__vector_56+0x3c>
    1966:	45 c0       	rjmp	.+138    	; 0x19f2 <__vector_56+0xc6>
	{
		static LinkbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
    1968:	80 91 11 47 	lds	r24, 0x4711	; 0x804711 <_ZZ11__vector_56E4buff>
    196c:	90 91 12 47 	lds	r25, 0x4712	; 0x804712 <_ZZ11__vector_56E4buff+0x1>
    1970:	89 2b       	or	r24, r25
    1972:	31 f4       	brne	.+12     	; 0x1980 <__vector_56+0x54>
		{
			buff = nextFullLBTxBuffer();
    1974:	0e 94 b5 58 	call	0xb16a	; 0xb16a <_Z18nextFullLBTxBufferv>
    1978:	80 93 11 47 	sts	0x4711, r24	; 0x804711 <_ZZ11__vector_56E4buff>
    197c:	90 93 12 47 	sts	0x4712, r25	; 0x804712 <_ZZ11__vector_56E4buff+0x1>
		}

		if((*buff)[charIndex])
    1980:	20 91 11 47 	lds	r18, 0x4711	; 0x804711 <_ZZ11__vector_56E4buff>
    1984:	30 91 12 47 	lds	r19, 0x4712	; 0x804712 <_ZZ11__vector_56E4buff+0x1>
    1988:	80 91 13 47 	lds	r24, 0x4713	; 0x804713 <_ZZ11__vector_56E9charIndex>
    198c:	88 2f       	mov	r24, r24
    198e:	90 e0       	ldi	r25, 0x00	; 0
    1990:	82 0f       	add	r24, r18
    1992:	93 1f       	adc	r25, r19
    1994:	fc 01       	movw	r30, r24
    1996:	80 81       	ld	r24, Z
    1998:	88 23       	and	r24, r24
    199a:	a9 f0       	breq	.+42     	; 0x19c6 <__vector_56+0x9a>
		{
			/* Put data into buffer, sends the data */
			USART4.TXDATAL = (*buff)[charIndex++];
    199c:	80 e8       	ldi	r24, 0x80	; 128
    199e:	98 e0       	ldi	r25, 0x08	; 8
    19a0:	40 91 11 47 	lds	r20, 0x4711	; 0x804711 <_ZZ11__vector_56E4buff>
    19a4:	50 91 12 47 	lds	r21, 0x4712	; 0x804712 <_ZZ11__vector_56E4buff+0x1>
    19a8:	20 91 13 47 	lds	r18, 0x4713	; 0x804713 <_ZZ11__vector_56E9charIndex>
    19ac:	31 e0       	ldi	r19, 0x01	; 1
    19ae:	32 0f       	add	r19, r18
    19b0:	30 93 13 47 	sts	0x4713, r19	; 0x804713 <_ZZ11__vector_56E9charIndex>
    19b4:	22 2f       	mov	r18, r18
    19b6:	30 e0       	ldi	r19, 0x00	; 0
    19b8:	24 0f       	add	r18, r20
    19ba:	35 1f       	adc	r19, r21
    19bc:	f9 01       	movw	r30, r18
    19be:	20 81       	ld	r18, Z
    19c0:	fc 01       	movw	r30, r24
    19c2:	22 83       	std	Z+2, r18	; 0x02
    19c4:	16 c0       	rjmp	.+44     	; 0x19f2 <__vector_56+0xc6>
		}
		else
		{
			charIndex = 0;
    19c6:	10 92 13 47 	sts	0x4713, r1	; 0x804713 <_ZZ11__vector_56E9charIndex>
			(*buff)[0] = '\0';
    19ca:	80 91 11 47 	lds	r24, 0x4711	; 0x804711 <_ZZ11__vector_56E4buff>
    19ce:	90 91 12 47 	lds	r25, 0x4712	; 0x804712 <_ZZ11__vector_56E4buff+0x1>
    19d2:	fc 01       	movw	r30, r24
    19d4:	10 82       	st	Z, r1
			buff = nextFullLBTxBuffer();
    19d6:	0e 94 b5 58 	call	0xb16a	; 0xb16a <_Z18nextFullLBTxBufferv>
    19da:	80 93 11 47 	sts	0x4711, r24	; 0x804711 <_ZZ11__vector_56E4buff>
    19de:	90 93 12 47 	sts	0x4712, r25	; 0x804712 <_ZZ11__vector_56E4buff+0x1>
			if(!buff)
    19e2:	80 91 11 47 	lds	r24, 0x4711	; 0x804711 <_ZZ11__vector_56E4buff>
    19e6:	90 91 12 47 	lds	r25, 0x4712	; 0x804712 <_ZZ11__vector_56E4buff+0x1>
    19ea:	89 2b       	or	r24, r25
    19ec:	11 f4       	brne	.+4      	; 0x19f2 <__vector_56+0xc6>
			{
				linkbus_end_tx();
    19ee:	0e 94 fa 59 	call	0xb3f4	; 0xb3f4 <_Z14linkbus_end_txv>
			}
		}
	}
	
	if(g_serialbus_usart_number == USART_4)
    19f2:	80 91 2e 40 	lds	r24, 0x402E	; 0x80402e <g_serialbus_usart_number>
    19f6:	84 30       	cpi	r24, 0x04	; 4
    19f8:	09 f0       	breq	.+2      	; 0x19fc <__vector_56+0xd0>
    19fa:	45 c0       	rjmp	.+138    	; 0x1a86 <__vector_56+0x15a>
	{
		static SerialbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
    19fc:	80 91 14 47 	lds	r24, 0x4714	; 0x804714 <_ZZ11__vector_56E4buff_0>
    1a00:	90 91 15 47 	lds	r25, 0x4715	; 0x804715 <_ZZ11__vector_56E4buff_0+0x1>
    1a04:	89 2b       	or	r24, r25
    1a06:	31 f4       	brne	.+12     	; 0x1a14 <__vector_56+0xe8>
		{
			buff = nextFullSBTxBuffer();
    1a08:	0e 94 62 61 	call	0xc2c4	; 0xc2c4 <nextFullSBTxBuffer>
    1a0c:	80 93 14 47 	sts	0x4714, r24	; 0x804714 <_ZZ11__vector_56E4buff_0>
    1a10:	90 93 15 47 	sts	0x4715, r25	; 0x804715 <_ZZ11__vector_56E4buff_0+0x1>
		}

		if((*buff)[charIndex])
    1a14:	20 91 14 47 	lds	r18, 0x4714	; 0x804714 <_ZZ11__vector_56E4buff_0>
    1a18:	30 91 15 47 	lds	r19, 0x4715	; 0x804715 <_ZZ11__vector_56E4buff_0+0x1>
    1a1c:	80 91 16 47 	lds	r24, 0x4716	; 0x804716 <_ZZ11__vector_56E9charIndex_0>
    1a20:	88 2f       	mov	r24, r24
    1a22:	90 e0       	ldi	r25, 0x00	; 0
    1a24:	82 0f       	add	r24, r18
    1a26:	93 1f       	adc	r25, r19
    1a28:	fc 01       	movw	r30, r24
    1a2a:	80 81       	ld	r24, Z
    1a2c:	88 23       	and	r24, r24
    1a2e:	a9 f0       	breq	.+42     	; 0x1a5a <__vector_56+0x12e>
		{
			/* Put data into buffer, sends the data */
			USART4.TXDATAL = (*buff)[charIndex++];
    1a30:	80 e8       	ldi	r24, 0x80	; 128
    1a32:	98 e0       	ldi	r25, 0x08	; 8
    1a34:	40 91 14 47 	lds	r20, 0x4714	; 0x804714 <_ZZ11__vector_56E4buff_0>
    1a38:	50 91 15 47 	lds	r21, 0x4715	; 0x804715 <_ZZ11__vector_56E4buff_0+0x1>
    1a3c:	20 91 16 47 	lds	r18, 0x4716	; 0x804716 <_ZZ11__vector_56E9charIndex_0>
    1a40:	31 e0       	ldi	r19, 0x01	; 1
    1a42:	32 0f       	add	r19, r18
    1a44:	30 93 16 47 	sts	0x4716, r19	; 0x804716 <_ZZ11__vector_56E9charIndex_0>
    1a48:	22 2f       	mov	r18, r18
    1a4a:	30 e0       	ldi	r19, 0x00	; 0
    1a4c:	24 0f       	add	r18, r20
    1a4e:	35 1f       	adc	r19, r21
    1a50:	f9 01       	movw	r30, r18
    1a52:	20 81       	ld	r18, Z
    1a54:	fc 01       	movw	r30, r24
    1a56:	22 83       	std	Z+2, r18	; 0x02
			{
				serialbus_end_tx();
			}
		}
	}
}
    1a58:	16 c0       	rjmp	.+44     	; 0x1a86 <__vector_56+0x15a>
			/* Put data into buffer, sends the data */
			USART4.TXDATAL = (*buff)[charIndex++];
		}
		else
		{
			charIndex = 0;
    1a5a:	10 92 16 47 	sts	0x4716, r1	; 0x804716 <_ZZ11__vector_56E9charIndex_0>
			(*buff)[0] = '\0';
    1a5e:	80 91 14 47 	lds	r24, 0x4714	; 0x804714 <_ZZ11__vector_56E4buff_0>
    1a62:	90 91 15 47 	lds	r25, 0x4715	; 0x804715 <_ZZ11__vector_56E4buff_0+0x1>
    1a66:	fc 01       	movw	r30, r24
    1a68:	10 82       	st	Z, r1
			buff = nextFullSBTxBuffer();
    1a6a:	0e 94 62 61 	call	0xc2c4	; 0xc2c4 <nextFullSBTxBuffer>
    1a6e:	80 93 14 47 	sts	0x4714, r24	; 0x804714 <_ZZ11__vector_56E4buff_0>
    1a72:	90 93 15 47 	sts	0x4715, r25	; 0x804715 <_ZZ11__vector_56E4buff_0+0x1>
			if(!buff)
    1a76:	80 91 14 47 	lds	r24, 0x4714	; 0x804714 <_ZZ11__vector_56E4buff_0>
    1a7a:	90 91 15 47 	lds	r25, 0x4715	; 0x804715 <_ZZ11__vector_56E4buff_0+0x1>
    1a7e:	89 2b       	or	r24, r25
    1a80:	11 f4       	brne	.+4      	; 0x1a86 <__vector_56+0x15a>
			{
				serialbus_end_tx();
    1a82:	0e 94 b7 62 	call	0xc56e	; 0xc56e <serialbus_end_tx>
			}
		}
	}
}
    1a86:	00 00       	nop
    1a88:	df 91       	pop	r29
    1a8a:	cf 91       	pop	r28
    1a8c:	ff 91       	pop	r31
    1a8e:	ef 91       	pop	r30
    1a90:	bf 91       	pop	r27
    1a92:	af 91       	pop	r26
    1a94:	9f 91       	pop	r25
    1a96:	8f 91       	pop	r24
    1a98:	7f 91       	pop	r23
    1a9a:	6f 91       	pop	r22
    1a9c:	5f 91       	pop	r21
    1a9e:	4f 91       	pop	r20
    1aa0:	3f 91       	pop	r19
    1aa2:	2f 91       	pop	r18
    1aa4:	0f 90       	pop	r0
    1aa6:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    1aaa:	0f 90       	pop	r0
    1aac:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    1ab0:	0f 90       	pop	r0
    1ab2:	1f 90       	pop	r1
    1ab4:	18 95       	reti

00001ab6 <__vector_31>:

/**

*/
ISR(USART1_RXC_vect)
{
    1ab6:	1f 92       	push	r1
    1ab8:	0f 92       	push	r0
    1aba:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    1abe:	0f 92       	push	r0
    1ac0:	11 24       	eor	r1, r1
    1ac2:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    1ac6:	0f 92       	push	r0
    1ac8:	2f 93       	push	r18
    1aca:	3f 93       	push	r19
    1acc:	4f 93       	push	r20
    1ace:	5f 93       	push	r21
    1ad0:	6f 93       	push	r22
    1ad2:	7f 93       	push	r23
    1ad4:	8f 93       	push	r24
    1ad6:	9f 93       	push	r25
    1ad8:	af 93       	push	r26
    1ada:	bf 93       	push	r27
    1adc:	ef 93       	push	r30
    1ade:	ff 93       	push	r31
    1ae0:	cf 93       	push	r28
    1ae2:	df 93       	push	r29
    1ae4:	1f 92       	push	r1
    1ae6:	cd b7       	in	r28, 0x3d	; 61
    1ae8:	de b7       	in	r29, 0x3e	; 62
	uint8_t rx_char = USART1_get_data();	
    1aea:	0e 94 cf 72 	call	0xe59e	; 0xe59e <USART1_get_data>
    1aee:	89 83       	std	Y+1, r24	; 0x01
	
	if(g_linkbus_usart_number == USART_1)
    1af0:	80 91 2b 40 	lds	r24, 0x402B	; 0x80402b <g_linkbus_usart_number>
    1af4:	81 30       	cpi	r24, 0x01	; 1
    1af6:	19 f4       	brne	.+6      	; 0x1afe <__vector_31+0x48>
	{
		linkbus_Rx(rx_char);
    1af8:	89 81       	ldd	r24, Y+1	; 0x01
    1afa:	0e 94 9f 0d 	call	0x1b3e	; 0x1b3e <_Z10linkbus_Rxh>
	}
	
	if(g_serialbus_usart_number == USART_1)
    1afe:	80 91 2e 40 	lds	r24, 0x402E	; 0x80402e <g_serialbus_usart_number>
    1b02:	81 30       	cpi	r24, 0x01	; 1
    1b04:	19 f4       	brne	.+6      	; 0x1b0c <__vector_31+0x56>
	{
		serial_Rx(rx_char);
    1b06:	89 81       	ldd	r24, Y+1	; 0x01
    1b08:	0e 94 51 09 	call	0x12a2	; 0x12a2 <_Z9serial_Rxh>
	}
}
    1b0c:	00 00       	nop
    1b0e:	0f 90       	pop	r0
    1b10:	df 91       	pop	r29
    1b12:	cf 91       	pop	r28
    1b14:	ff 91       	pop	r31
    1b16:	ef 91       	pop	r30
    1b18:	bf 91       	pop	r27
    1b1a:	af 91       	pop	r26
    1b1c:	9f 91       	pop	r25
    1b1e:	8f 91       	pop	r24
    1b20:	7f 91       	pop	r23
    1b22:	6f 91       	pop	r22
    1b24:	5f 91       	pop	r21
    1b26:	4f 91       	pop	r20
    1b28:	3f 91       	pop	r19
    1b2a:	2f 91       	pop	r18
    1b2c:	0f 90       	pop	r0
    1b2e:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    1b32:	0f 90       	pop	r0
    1b34:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    1b38:	0f 90       	pop	r0
    1b3a:	1f 90       	pop	r1
    1b3c:	18 95       	reti

00001b3e <_Z10linkbus_Rxh>:

void linkbus_Rx(uint8_t rx_char)
{
    1b3e:	cf 93       	push	r28
    1b40:	df 93       	push	r29
    1b42:	1f 92       	push	r1
    1b44:	cd b7       	in	r28, 0x3d	; 61
    1b46:	de b7       	in	r29, 0x3e	; 62
    1b48:	89 83       	std	Y+1, r24	; 0x01
	static uint8_t field_index = 0;
	static uint8_t field_len = 0;
	static uint32_t tempMsg_ID = 0;
	static bool receiving_msg = false;

	if(!buff)
    1b4a:	80 91 17 47 	lds	r24, 0x4717	; 0x804717 <_ZZ10linkbus_RxhE4buff>
    1b4e:	90 91 18 47 	lds	r25, 0x4718	; 0x804718 <_ZZ10linkbus_RxhE4buff+0x1>
    1b52:	89 2b       	or	r24, r25
    1b54:	31 f4       	brne	.+12     	; 0x1b62 <_Z10linkbus_Rxh+0x24>
	{
		buff = nextEmptyLBRxBuffer();
    1b56:	0e 94 43 59 	call	0xb286	; 0xb286 <_Z19nextEmptyLBRxBufferv>
    1b5a:	80 93 17 47 	sts	0x4717, r24	; 0x804717 <_ZZ10linkbus_RxhE4buff>
    1b5e:	90 93 18 47 	sts	0x4718, r25	; 0x804718 <_ZZ10linkbus_RxhE4buff+0x1>
	}

	if(buff)
    1b62:	80 91 17 47 	lds	r24, 0x4717	; 0x804717 <_ZZ10linkbus_RxhE4buff>
    1b66:	90 91 18 47 	lds	r25, 0x4718	; 0x804718 <_ZZ10linkbus_RxhE4buff+0x1>
    1b6a:	89 2b       	or	r24, r25
    1b6c:	09 f4       	brne	.+2      	; 0x1b70 <_Z10linkbus_Rxh+0x32>
    1b6e:	43 c1       	rjmp	.+646    	; 0x1df6 <_Z10linkbus_Rxh+0x2b8>
	{
		rx_char = toupper(rx_char);
    1b70:	89 81       	ldd	r24, Y+1	; 0x01
    1b72:	88 2f       	mov	r24, r24
    1b74:	90 e0       	ldi	r25, 0x00	; 0
    1b76:	0e 94 de 7b 	call	0xf7bc	; 0xf7bc <toupper>
    1b7a:	89 83       	std	Y+1, r24	; 0x01

		if((rx_char == '$') || (rx_char == '!'))    /* start of new message = $ */
    1b7c:	89 81       	ldd	r24, Y+1	; 0x01
    1b7e:	84 32       	cpi	r24, 0x24	; 36
    1b80:	19 f0       	breq	.+6      	; 0x1b88 <_Z10linkbus_Rxh+0x4a>
    1b82:	89 81       	ldd	r24, Y+1	; 0x01
    1b84:	81 32       	cpi	r24, 0x21	; 33
    1b86:	e9 f5       	brne	.+122    	; 0x1c02 <_Z10linkbus_Rxh+0xc4>
		{
			charIndex = 0;
    1b88:	10 92 19 47 	sts	0x4719, r1	; 0x804719 <_ZZ10linkbus_RxhE9charIndex>
			buff->type = (rx_char == '!') ? LINKBUS_MSG_REPLY : LINKBUS_MSG_COMMAND;
    1b8c:	80 91 17 47 	lds	r24, 0x4717	; 0x804717 <_ZZ10linkbus_RxhE4buff>
    1b90:	90 91 18 47 	lds	r25, 0x4718	; 0x804718 <_ZZ10linkbus_RxhE4buff+0x1>
    1b94:	29 81       	ldd	r18, Y+1	; 0x01
    1b96:	21 32       	cpi	r18, 0x21	; 33
    1b98:	11 f4       	brne	.+4      	; 0x1b9e <_Z10linkbus_Rxh+0x60>
    1b9a:	23 e0       	ldi	r18, 0x03	; 3
    1b9c:	01 c0       	rjmp	.+2      	; 0x1ba0 <_Z10linkbus_Rxh+0x62>
    1b9e:	21 e0       	ldi	r18, 0x01	; 1
    1ba0:	fc 01       	movw	r30, r24
    1ba2:	20 83       	st	Z, r18
			field_len = 0;
    1ba4:	10 92 1a 47 	sts	0x471A, r1	; 0x80471a <_ZZ10linkbus_RxhE9field_len>
			tempMsg_ID = 0;
    1ba8:	10 92 1b 47 	sts	0x471B, r1	; 0x80471b <_ZZ10linkbus_RxhE10tempMsg_ID>
    1bac:	10 92 1c 47 	sts	0x471C, r1	; 0x80471c <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
    1bb0:	10 92 1d 47 	sts	0x471D, r1	; 0x80471d <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
    1bb4:	10 92 1e 47 	sts	0x471E, r1	; 0x80471e <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
			receiving_msg = true;
    1bb8:	81 e0       	ldi	r24, 0x01	; 1
    1bba:	80 93 1f 47 	sts	0x471F, r24	; 0x80471f <_ZZ10linkbus_RxhE13receiving_msg>

			/* Empty the field buffers */
			for(field_index = 0; field_index < LINKBUS_MAX_MSG_NUMBER_OF_FIELDS; field_index++)
    1bbe:	10 92 20 47 	sts	0x4720, r1	; 0x804720 <_ZZ10linkbus_RxhE11field_index>
    1bc2:	80 91 20 47 	lds	r24, 0x4720	; 0x804720 <_ZZ10linkbus_RxhE11field_index>
    1bc6:	83 30       	cpi	r24, 0x03	; 3
    1bc8:	c8 f4       	brcc	.+50     	; 0x1bfc <_Z10linkbus_Rxh+0xbe>
			{
				buff->fields[field_index][0] = '\0';
    1bca:	20 91 17 47 	lds	r18, 0x4717	; 0x804717 <_ZZ10linkbus_RxhE4buff>
    1bce:	30 91 18 47 	lds	r19, 0x4718	; 0x804718 <_ZZ10linkbus_RxhE4buff+0x1>
    1bd2:	80 91 20 47 	lds	r24, 0x4720	; 0x804720 <_ZZ10linkbus_RxhE11field_index>
    1bd6:	48 2f       	mov	r20, r24
    1bd8:	50 e0       	ldi	r21, 0x00	; 0
    1bda:	65 e1       	ldi	r22, 0x15	; 21
    1bdc:	64 9f       	mul	r22, r20
    1bde:	c0 01       	movw	r24, r0
    1be0:	65 9f       	mul	r22, r21
    1be2:	90 0d       	add	r25, r0
    1be4:	11 24       	eor	r1, r1
    1be6:	82 0f       	add	r24, r18
    1be8:	93 1f       	adc	r25, r19
    1bea:	03 96       	adiw	r24, 0x03	; 3
    1bec:	fc 01       	movw	r30, r24
    1bee:	10 82       	st	Z, r1
			field_len = 0;
			tempMsg_ID = 0;
			receiving_msg = true;

			/* Empty the field buffers */
			for(field_index = 0; field_index < LINKBUS_MAX_MSG_NUMBER_OF_FIELDS; field_index++)
    1bf0:	80 91 20 47 	lds	r24, 0x4720	; 0x804720 <_ZZ10linkbus_RxhE11field_index>
    1bf4:	8f 5f       	subi	r24, 0xFF	; 255
    1bf6:	80 93 20 47 	sts	0x4720, r24	; 0x804720 <_ZZ10linkbus_RxhE11field_index>
    1bfa:	e3 cf       	rjmp	.-58     	; 0x1bc2 <_Z10linkbus_Rxh+0x84>
			{
				buff->fields[field_index][0] = '\0';
			}

			field_index = 0;
    1bfc:	10 92 20 47 	sts	0x4720, r1	; 0x804720 <_ZZ10linkbus_RxhE11field_index>
    1c00:	e9 c0       	rjmp	.+466    	; 0x1dd4 <_Z10linkbus_Rxh+0x296>
		}
		else if(receiving_msg)
    1c02:	80 91 1f 47 	lds	r24, 0x471F	; 0x80471f <_ZZ10linkbus_RxhE13receiving_msg>
    1c06:	88 23       	and	r24, r24
    1c08:	09 f4       	brne	.+2      	; 0x1c0c <_Z10linkbus_Rxh+0xce>
    1c0a:	c7 c0       	rjmp	.+398    	; 0x1d9a <_Z10linkbus_Rxh+0x25c>
		{
			if((rx_char == ',') || (rx_char == ';') || (rx_char == '?'))    /* new field = ,; end of message = ; */
    1c0c:	89 81       	ldd	r24, Y+1	; 0x01
    1c0e:	8c 32       	cpi	r24, 0x2C	; 44
    1c10:	39 f0       	breq	.+14     	; 0x1c20 <_Z10linkbus_Rxh+0xe2>
    1c12:	89 81       	ldd	r24, Y+1	; 0x01
    1c14:	8b 33       	cpi	r24, 0x3B	; 59
    1c16:	21 f0       	breq	.+8      	; 0x1c20 <_Z10linkbus_Rxh+0xe2>
    1c18:	89 81       	ldd	r24, Y+1	; 0x01
    1c1a:	8f 33       	cpi	r24, 0x3F	; 63
    1c1c:	09 f0       	breq	.+2      	; 0x1c20 <_Z10linkbus_Rxh+0xe2>
    1c1e:	6b c0       	rjmp	.+214    	; 0x1cf6 <_Z10linkbus_Rxh+0x1b8>
			{
				/* if(field_index == 0) // message ID received */
				if(field_index > 0)
    1c20:	80 91 20 47 	lds	r24, 0x4720	; 0x804720 <_ZZ10linkbus_RxhE11field_index>
    1c24:	88 23       	and	r24, r24
    1c26:	e1 f0       	breq	.+56     	; 0x1c60 <_Z10linkbus_Rxh+0x122>
				{
					buff->fields[field_index - 1][field_len] = 0;
    1c28:	40 91 17 47 	lds	r20, 0x4717	; 0x804717 <_ZZ10linkbus_RxhE4buff>
    1c2c:	50 91 18 47 	lds	r21, 0x4718	; 0x804718 <_ZZ10linkbus_RxhE4buff+0x1>
    1c30:	80 91 20 47 	lds	r24, 0x4720	; 0x804720 <_ZZ10linkbus_RxhE11field_index>
    1c34:	88 2f       	mov	r24, r24
    1c36:	90 e0       	ldi	r25, 0x00	; 0
    1c38:	bc 01       	movw	r22, r24
    1c3a:	61 50       	subi	r22, 0x01	; 1
    1c3c:	71 09       	sbc	r23, r1
    1c3e:	80 91 1a 47 	lds	r24, 0x471A	; 0x80471a <_ZZ10linkbus_RxhE9field_len>
    1c42:	88 2f       	mov	r24, r24
    1c44:	90 e0       	ldi	r25, 0x00	; 0
    1c46:	e5 e1       	ldi	r30, 0x15	; 21
    1c48:	e6 9f       	mul	r30, r22
    1c4a:	90 01       	movw	r18, r0
    1c4c:	e7 9f       	mul	r30, r23
    1c4e:	30 0d       	add	r19, r0
    1c50:	11 24       	eor	r1, r1
    1c52:	24 0f       	add	r18, r20
    1c54:	35 1f       	adc	r19, r21
    1c56:	82 0f       	add	r24, r18
    1c58:	93 1f       	adc	r25, r19
    1c5a:	03 96       	adiw	r24, 0x03	; 3
    1c5c:	fc 01       	movw	r30, r24
    1c5e:	10 82       	st	Z, r1
				}

				field_index++;
    1c60:	80 91 20 47 	lds	r24, 0x4720	; 0x804720 <_ZZ10linkbus_RxhE11field_index>
    1c64:	8f 5f       	subi	r24, 0xFF	; 255
    1c66:	80 93 20 47 	sts	0x4720, r24	; 0x804720 <_ZZ10linkbus_RxhE11field_index>
				field_len = 0;
    1c6a:	10 92 1a 47 	sts	0x471A, r1	; 0x80471a <_ZZ10linkbus_RxhE9field_len>

				if(rx_char == ';')
    1c6e:	89 81       	ldd	r24, Y+1	; 0x01
    1c70:	8b 33       	cpi	r24, 0x3B	; 59
    1c72:	b1 f4       	brne	.+44     	; 0x1ca0 <_Z10linkbus_Rxh+0x162>
				{
					if(charIndex > LINKBUS_MIN_MSG_LENGTH)
    1c74:	80 91 19 47 	lds	r24, 0x4719	; 0x804719 <_ZZ10linkbus_RxhE9charIndex>
    1c78:	84 30       	cpi	r24, 0x04	; 4
    1c7a:	78 f0       	brcs	.+30     	; 0x1c9a <_Z10linkbus_Rxh+0x15c>
					{
						buff->id = (LBMessageID)tempMsg_ID;
    1c7c:	20 91 17 47 	lds	r18, 0x4717	; 0x804717 <_ZZ10linkbus_RxhE4buff>
    1c80:	30 91 18 47 	lds	r19, 0x4718	; 0x804718 <_ZZ10linkbus_RxhE4buff+0x1>
    1c84:	80 91 1b 47 	lds	r24, 0x471B	; 0x80471b <_ZZ10linkbus_RxhE10tempMsg_ID>
    1c88:	90 91 1c 47 	lds	r25, 0x471C	; 0x80471c <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
    1c8c:	a0 91 1d 47 	lds	r26, 0x471D	; 0x80471d <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
    1c90:	b0 91 1e 47 	lds	r27, 0x471E	; 0x80471e <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
    1c94:	f9 01       	movw	r30, r18
    1c96:	81 83       	std	Z+1, r24	; 0x01
    1c98:	92 83       	std	Z+2, r25	; 0x02
					}
					receiving_msg = false;
    1c9a:	10 92 1f 47 	sts	0x471F, r1	; 0x80471f <_ZZ10linkbus_RxhE13receiving_msg>
    1c9e:	1f c0       	rjmp	.+62     	; 0x1cde <_Z10linkbus_Rxh+0x1a0>
				}
				else if(rx_char == '?')
    1ca0:	89 81       	ldd	r24, Y+1	; 0x01
    1ca2:	8f 33       	cpi	r24, 0x3F	; 63
    1ca4:	e1 f4       	brne	.+56     	; 0x1cde <_Z10linkbus_Rxh+0x1a0>
				{
					buff->type = LINKBUS_MSG_QUERY;
    1ca6:	80 91 17 47 	lds	r24, 0x4717	; 0x804717 <_ZZ10linkbus_RxhE4buff>
    1caa:	90 91 18 47 	lds	r25, 0x4718	; 0x804718 <_ZZ10linkbus_RxhE4buff+0x1>
    1cae:	22 e0       	ldi	r18, 0x02	; 2
    1cb0:	fc 01       	movw	r30, r24
    1cb2:	20 83       	st	Z, r18
					if(charIndex >= LINKBUS_MIN_MSG_LENGTH)
    1cb4:	80 91 19 47 	lds	r24, 0x4719	; 0x804719 <_ZZ10linkbus_RxhE9charIndex>
    1cb8:	83 30       	cpi	r24, 0x03	; 3
    1cba:	78 f0       	brcs	.+30     	; 0x1cda <_Z10linkbus_Rxh+0x19c>
					{
						buff->id = (LBMessageID)tempMsg_ID;
    1cbc:	20 91 17 47 	lds	r18, 0x4717	; 0x804717 <_ZZ10linkbus_RxhE4buff>
    1cc0:	30 91 18 47 	lds	r19, 0x4718	; 0x804718 <_ZZ10linkbus_RxhE4buff+0x1>
    1cc4:	80 91 1b 47 	lds	r24, 0x471B	; 0x80471b <_ZZ10linkbus_RxhE10tempMsg_ID>
    1cc8:	90 91 1c 47 	lds	r25, 0x471C	; 0x80471c <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
    1ccc:	a0 91 1d 47 	lds	r26, 0x471D	; 0x80471d <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
    1cd0:	b0 91 1e 47 	lds	r27, 0x471E	; 0x80471e <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
    1cd4:	f9 01       	movw	r30, r18
    1cd6:	81 83       	std	Z+1, r24	; 0x01
    1cd8:	92 83       	std	Z+2, r25	; 0x02
					}
					receiving_msg = false;
    1cda:	10 92 1f 47 	sts	0x471F, r1	; 0x80471f <_ZZ10linkbus_RxhE13receiving_msg>
				}

				if(!receiving_msg)
    1cde:	90 91 1f 47 	lds	r25, 0x471F	; 0x80471f <_ZZ10linkbus_RxhE13receiving_msg>
    1ce2:	81 e0       	ldi	r24, 0x01	; 1
    1ce4:	89 27       	eor	r24, r25
    1ce6:	88 23       	and	r24, r24
    1ce8:	09 f4       	brne	.+2      	; 0x1cec <_Z10linkbus_Rxh+0x1ae>
    1cea:	74 c0       	rjmp	.+232    	; 0x1dd4 <_Z10linkbus_Rxh+0x296>
				{
					buff = 0;
    1cec:	10 92 17 47 	sts	0x4717, r1	; 0x804717 <_ZZ10linkbus_RxhE4buff>
    1cf0:	10 92 18 47 	sts	0x4718, r1	; 0x804718 <_ZZ10linkbus_RxhE4buff+0x1>
						buff->id = (LBMessageID)tempMsg_ID;
					}
					receiving_msg = false;
				}

				if(!receiving_msg)
    1cf4:	6f c0       	rjmp	.+222    	; 0x1dd4 <_Z10linkbus_Rxh+0x296>
					buff = 0;
				}
			}
			else
			{
				if(field_index == 0)    /* message ID received */
    1cf6:	80 91 20 47 	lds	r24, 0x4720	; 0x804720 <_ZZ10linkbus_RxhE11field_index>
    1cfa:	88 23       	and	r24, r24
    1cfc:	61 f5       	brne	.+88     	; 0x1d56 <_Z10linkbus_Rxh+0x218>
				{
					tempMsg_ID = tempMsg_ID * 10 + rx_char;
    1cfe:	80 91 1b 47 	lds	r24, 0x471B	; 0x80471b <_ZZ10linkbus_RxhE10tempMsg_ID>
    1d02:	90 91 1c 47 	lds	r25, 0x471C	; 0x80471c <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
    1d06:	a0 91 1d 47 	lds	r26, 0x471D	; 0x80471d <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
    1d0a:	b0 91 1e 47 	lds	r27, 0x471E	; 0x80471e <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
    1d0e:	88 0f       	add	r24, r24
    1d10:	99 1f       	adc	r25, r25
    1d12:	aa 1f       	adc	r26, r26
    1d14:	bb 1f       	adc	r27, r27
    1d16:	9c 01       	movw	r18, r24
    1d18:	ad 01       	movw	r20, r26
    1d1a:	22 0f       	add	r18, r18
    1d1c:	33 1f       	adc	r19, r19
    1d1e:	44 1f       	adc	r20, r20
    1d20:	55 1f       	adc	r21, r21
    1d22:	22 0f       	add	r18, r18
    1d24:	33 1f       	adc	r19, r19
    1d26:	44 1f       	adc	r20, r20
    1d28:	55 1f       	adc	r21, r21
    1d2a:	28 0f       	add	r18, r24
    1d2c:	39 1f       	adc	r19, r25
    1d2e:	4a 1f       	adc	r20, r26
    1d30:	5b 1f       	adc	r21, r27
    1d32:	89 81       	ldd	r24, Y+1	; 0x01
    1d34:	88 2f       	mov	r24, r24
    1d36:	90 e0       	ldi	r25, 0x00	; 0
    1d38:	a0 e0       	ldi	r26, 0x00	; 0
    1d3a:	b0 e0       	ldi	r27, 0x00	; 0
    1d3c:	82 0f       	add	r24, r18
    1d3e:	93 1f       	adc	r25, r19
    1d40:	a4 1f       	adc	r26, r20
    1d42:	b5 1f       	adc	r27, r21
    1d44:	80 93 1b 47 	sts	0x471B, r24	; 0x80471b <_ZZ10linkbus_RxhE10tempMsg_ID>
    1d48:	90 93 1c 47 	sts	0x471C, r25	; 0x80471c <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
    1d4c:	a0 93 1d 47 	sts	0x471D, r26	; 0x80471d <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
    1d50:	b0 93 1e 47 	sts	0x471E, r27	; 0x80471e <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
    1d54:	3f c0       	rjmp	.+126    	; 0x1dd4 <_Z10linkbus_Rxh+0x296>
				}
				else
				{
					buff->fields[field_index - 1][field_len++] = rx_char;
    1d56:	40 91 17 47 	lds	r20, 0x4717	; 0x804717 <_ZZ10linkbus_RxhE4buff>
    1d5a:	50 91 18 47 	lds	r21, 0x4718	; 0x804718 <_ZZ10linkbus_RxhE4buff+0x1>
    1d5e:	80 91 20 47 	lds	r24, 0x4720	; 0x804720 <_ZZ10linkbus_RxhE11field_index>
    1d62:	88 2f       	mov	r24, r24
    1d64:	90 e0       	ldi	r25, 0x00	; 0
    1d66:	bc 01       	movw	r22, r24
    1d68:	61 50       	subi	r22, 0x01	; 1
    1d6a:	71 09       	sbc	r23, r1
    1d6c:	80 91 1a 47 	lds	r24, 0x471A	; 0x80471a <_ZZ10linkbus_RxhE9field_len>
    1d70:	91 e0       	ldi	r25, 0x01	; 1
    1d72:	98 0f       	add	r25, r24
    1d74:	90 93 1a 47 	sts	0x471A, r25	; 0x80471a <_ZZ10linkbus_RxhE9field_len>
    1d78:	88 2f       	mov	r24, r24
    1d7a:	90 e0       	ldi	r25, 0x00	; 0
    1d7c:	e5 e1       	ldi	r30, 0x15	; 21
    1d7e:	e6 9f       	mul	r30, r22
    1d80:	90 01       	movw	r18, r0
    1d82:	e7 9f       	mul	r30, r23
    1d84:	30 0d       	add	r19, r0
    1d86:	11 24       	eor	r1, r1
    1d88:	24 0f       	add	r18, r20
    1d8a:	35 1f       	adc	r19, r21
    1d8c:	82 0f       	add	r24, r18
    1d8e:	93 1f       	adc	r25, r19
    1d90:	03 96       	adiw	r24, 0x03	; 3
    1d92:	29 81       	ldd	r18, Y+1	; 0x01
    1d94:	fc 01       	movw	r30, r24
    1d96:	20 83       	st	Z, r18
    1d98:	1d c0       	rjmp	.+58     	; 0x1dd4 <_Z10linkbus_Rxh+0x296>
				}
			}
		}
		else if(rx_char == 0x0D)    /* Carriage return resets any message in progress */
    1d9a:	89 81       	ldd	r24, Y+1	; 0x01
    1d9c:	8d 30       	cpi	r24, 0x0D	; 13
    1d9e:	d1 f4       	brne	.+52     	; 0x1dd4 <_Z10linkbus_Rxh+0x296>
		{
			buff->id = LB_MESSAGE_EMPTY;
    1da0:	80 91 17 47 	lds	r24, 0x4717	; 0x804717 <_ZZ10linkbus_RxhE4buff>
    1da4:	90 91 18 47 	lds	r25, 0x4718	; 0x804718 <_ZZ10linkbus_RxhE4buff+0x1>
    1da8:	fc 01       	movw	r30, r24
    1daa:	11 82       	std	Z+1, r1	; 0x01
    1dac:	12 82       	std	Z+2, r1	; 0x02
			charIndex = LINKBUS_MAX_MSG_LENGTH;
    1dae:	82 e3       	ldi	r24, 0x32	; 50
    1db0:	80 93 19 47 	sts	0x4719, r24	; 0x804719 <_ZZ10linkbus_RxhE9charIndex>
			field_len = 0;
    1db4:	10 92 1a 47 	sts	0x471A, r1	; 0x80471a <_ZZ10linkbus_RxhE9field_len>
			tempMsg_ID = 0;
    1db8:	10 92 1b 47 	sts	0x471B, r1	; 0x80471b <_ZZ10linkbus_RxhE10tempMsg_ID>
    1dbc:	10 92 1c 47 	sts	0x471C, r1	; 0x80471c <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
    1dc0:	10 92 1d 47 	sts	0x471D, r1	; 0x80471d <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
    1dc4:	10 92 1e 47 	sts	0x471E, r1	; 0x80471e <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
			field_index = 0;
    1dc8:	10 92 20 47 	sts	0x4720, r1	; 0x804720 <_ZZ10linkbus_RxhE11field_index>
			buff = NULL;
    1dcc:	10 92 17 47 	sts	0x4717, r1	; 0x804717 <_ZZ10linkbus_RxhE4buff>
    1dd0:	10 92 18 47 	sts	0x4718, r1	; 0x804718 <_ZZ10linkbus_RxhE4buff+0x1>
		}

		if(++charIndex >= LINKBUS_MAX_MSG_LENGTH)
    1dd4:	80 91 19 47 	lds	r24, 0x4719	; 0x804719 <_ZZ10linkbus_RxhE9charIndex>
    1dd8:	8f 5f       	subi	r24, 0xFF	; 255
    1dda:	80 93 19 47 	sts	0x4719, r24	; 0x804719 <_ZZ10linkbus_RxhE9charIndex>
    1dde:	90 91 19 47 	lds	r25, 0x4719	; 0x804719 <_ZZ10linkbus_RxhE9charIndex>
    1de2:	81 e0       	ldi	r24, 0x01	; 1
    1de4:	92 33       	cpi	r25, 0x32	; 50
    1de6:	08 f4       	brcc	.+2      	; 0x1dea <_Z10linkbus_Rxh+0x2ac>
    1de8:	80 e0       	ldi	r24, 0x00	; 0
    1dea:	88 23       	and	r24, r24
    1dec:	21 f0       	breq	.+8      	; 0x1df6 <_Z10linkbus_Rxh+0x2b8>
		{
			receiving_msg = false;
    1dee:	10 92 1f 47 	sts	0x471F, r1	; 0x80471f <_ZZ10linkbus_RxhE13receiving_msg>
			charIndex = 0;
    1df2:	10 92 19 47 	sts	0x4719, r1	; 0x804719 <_ZZ10linkbus_RxhE9charIndex>
		}
	}
}
    1df6:	00 00       	nop
    1df8:	0f 90       	pop	r0
    1dfa:	df 91       	pop	r29
    1dfc:	cf 91       	pop	r28
    1dfe:	08 95       	ret

00001e00 <__vector_32>:

/**

*/
ISR(USART1_DRE_vect)
{
    1e00:	1f 92       	push	r1
    1e02:	0f 92       	push	r0
    1e04:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    1e08:	0f 92       	push	r0
    1e0a:	11 24       	eor	r1, r1
    1e0c:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    1e10:	0f 92       	push	r0
    1e12:	2f 93       	push	r18
    1e14:	3f 93       	push	r19
    1e16:	4f 93       	push	r20
    1e18:	5f 93       	push	r21
    1e1a:	6f 93       	push	r22
    1e1c:	7f 93       	push	r23
    1e1e:	8f 93       	push	r24
    1e20:	9f 93       	push	r25
    1e22:	af 93       	push	r26
    1e24:	bf 93       	push	r27
    1e26:	ef 93       	push	r30
    1e28:	ff 93       	push	r31
    1e2a:	cf 93       	push	r28
    1e2c:	df 93       	push	r29
    1e2e:	cd b7       	in	r28, 0x3d	; 61
    1e30:	de b7       	in	r29, 0x3e	; 62
	if(g_serialbus_usart_number == USART_1)
    1e32:	80 91 2e 40 	lds	r24, 0x402E	; 0x80402e <g_serialbus_usart_number>
    1e36:	81 30       	cpi	r24, 0x01	; 1
    1e38:	09 f0       	breq	.+2      	; 0x1e3c <__vector_32+0x3c>
    1e3a:	45 c0       	rjmp	.+138    	; 0x1ec6 <__vector_32+0xc6>
	{
		static SerialbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
    1e3c:	80 91 21 47 	lds	r24, 0x4721	; 0x804721 <_ZZ11__vector_32E4buff>
    1e40:	90 91 22 47 	lds	r25, 0x4722	; 0x804722 <_ZZ11__vector_32E4buff+0x1>
    1e44:	89 2b       	or	r24, r25
    1e46:	31 f4       	brne	.+12     	; 0x1e54 <__vector_32+0x54>
		{
			buff = nextFullSBTxBuffer();
    1e48:	0e 94 62 61 	call	0xc2c4	; 0xc2c4 <nextFullSBTxBuffer>
    1e4c:	80 93 21 47 	sts	0x4721, r24	; 0x804721 <_ZZ11__vector_32E4buff>
    1e50:	90 93 22 47 	sts	0x4722, r25	; 0x804722 <_ZZ11__vector_32E4buff+0x1>
		}

		if((*buff)[charIndex])
    1e54:	20 91 21 47 	lds	r18, 0x4721	; 0x804721 <_ZZ11__vector_32E4buff>
    1e58:	30 91 22 47 	lds	r19, 0x4722	; 0x804722 <_ZZ11__vector_32E4buff+0x1>
    1e5c:	80 91 23 47 	lds	r24, 0x4723	; 0x804723 <_ZZ11__vector_32E9charIndex>
    1e60:	88 2f       	mov	r24, r24
    1e62:	90 e0       	ldi	r25, 0x00	; 0
    1e64:	82 0f       	add	r24, r18
    1e66:	93 1f       	adc	r25, r19
    1e68:	fc 01       	movw	r30, r24
    1e6a:	80 81       	ld	r24, Z
    1e6c:	88 23       	and	r24, r24
    1e6e:	a9 f0       	breq	.+42     	; 0x1e9a <__vector_32+0x9a>
		{
			/* Put data into buffer, sends the data */
			USART1.TXDATAL = (*buff)[charIndex++];
    1e70:	80 e2       	ldi	r24, 0x20	; 32
    1e72:	98 e0       	ldi	r25, 0x08	; 8
    1e74:	40 91 21 47 	lds	r20, 0x4721	; 0x804721 <_ZZ11__vector_32E4buff>
    1e78:	50 91 22 47 	lds	r21, 0x4722	; 0x804722 <_ZZ11__vector_32E4buff+0x1>
    1e7c:	20 91 23 47 	lds	r18, 0x4723	; 0x804723 <_ZZ11__vector_32E9charIndex>
    1e80:	31 e0       	ldi	r19, 0x01	; 1
    1e82:	32 0f       	add	r19, r18
    1e84:	30 93 23 47 	sts	0x4723, r19	; 0x804723 <_ZZ11__vector_32E9charIndex>
    1e88:	22 2f       	mov	r18, r18
    1e8a:	30 e0       	ldi	r19, 0x00	; 0
    1e8c:	24 0f       	add	r18, r20
    1e8e:	35 1f       	adc	r19, r21
    1e90:	f9 01       	movw	r30, r18
    1e92:	20 81       	ld	r18, Z
    1e94:	fc 01       	movw	r30, r24
    1e96:	22 83       	std	Z+2, r18	; 0x02
    1e98:	16 c0       	rjmp	.+44     	; 0x1ec6 <__vector_32+0xc6>
		}
		else
		{
			charIndex = 0;
    1e9a:	10 92 23 47 	sts	0x4723, r1	; 0x804723 <_ZZ11__vector_32E9charIndex>
			(*buff)[0] = '\0';
    1e9e:	80 91 21 47 	lds	r24, 0x4721	; 0x804721 <_ZZ11__vector_32E4buff>
    1ea2:	90 91 22 47 	lds	r25, 0x4722	; 0x804722 <_ZZ11__vector_32E4buff+0x1>
    1ea6:	fc 01       	movw	r30, r24
    1ea8:	10 82       	st	Z, r1
			buff = nextFullSBTxBuffer();
    1eaa:	0e 94 62 61 	call	0xc2c4	; 0xc2c4 <nextFullSBTxBuffer>
    1eae:	80 93 21 47 	sts	0x4721, r24	; 0x804721 <_ZZ11__vector_32E4buff>
    1eb2:	90 93 22 47 	sts	0x4722, r25	; 0x804722 <_ZZ11__vector_32E4buff+0x1>
			if(!buff)
    1eb6:	80 91 21 47 	lds	r24, 0x4721	; 0x804721 <_ZZ11__vector_32E4buff>
    1eba:	90 91 22 47 	lds	r25, 0x4722	; 0x804722 <_ZZ11__vector_32E4buff+0x1>
    1ebe:	89 2b       	or	r24, r25
    1ec0:	11 f4       	brne	.+4      	; 0x1ec6 <__vector_32+0xc6>
			{
				serialbus_end_tx();
    1ec2:	0e 94 b7 62 	call	0xc56e	; 0xc56e <serialbus_end_tx>
			}
		}
	}
	
	if(g_linkbus_usart_number == USART_1)
    1ec6:	80 91 2b 40 	lds	r24, 0x402B	; 0x80402b <g_linkbus_usart_number>
    1eca:	81 30       	cpi	r24, 0x01	; 1
    1ecc:	09 f0       	breq	.+2      	; 0x1ed0 <__vector_32+0xd0>
    1ece:	45 c0       	rjmp	.+138    	; 0x1f5a <__vector_32+0x15a>
	{
		static LinkbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
    1ed0:	80 91 24 47 	lds	r24, 0x4724	; 0x804724 <_ZZ11__vector_32E4buff_0>
    1ed4:	90 91 25 47 	lds	r25, 0x4725	; 0x804725 <_ZZ11__vector_32E4buff_0+0x1>
    1ed8:	89 2b       	or	r24, r25
    1eda:	31 f4       	brne	.+12     	; 0x1ee8 <__vector_32+0xe8>
		{
			buff = nextFullLBTxBuffer();
    1edc:	0e 94 b5 58 	call	0xb16a	; 0xb16a <_Z18nextFullLBTxBufferv>
    1ee0:	80 93 24 47 	sts	0x4724, r24	; 0x804724 <_ZZ11__vector_32E4buff_0>
    1ee4:	90 93 25 47 	sts	0x4725, r25	; 0x804725 <_ZZ11__vector_32E4buff_0+0x1>
		}

		if((*buff)[charIndex])
    1ee8:	20 91 24 47 	lds	r18, 0x4724	; 0x804724 <_ZZ11__vector_32E4buff_0>
    1eec:	30 91 25 47 	lds	r19, 0x4725	; 0x804725 <_ZZ11__vector_32E4buff_0+0x1>
    1ef0:	80 91 26 47 	lds	r24, 0x4726	; 0x804726 <_ZZ11__vector_32E9charIndex_0>
    1ef4:	88 2f       	mov	r24, r24
    1ef6:	90 e0       	ldi	r25, 0x00	; 0
    1ef8:	82 0f       	add	r24, r18
    1efa:	93 1f       	adc	r25, r19
    1efc:	fc 01       	movw	r30, r24
    1efe:	80 81       	ld	r24, Z
    1f00:	88 23       	and	r24, r24
    1f02:	a9 f0       	breq	.+42     	; 0x1f2e <__vector_32+0x12e>
		{
			/* Put data into buffer, sends the data */
			USART1.TXDATAL = (*buff)[charIndex++];
    1f04:	80 e2       	ldi	r24, 0x20	; 32
    1f06:	98 e0       	ldi	r25, 0x08	; 8
    1f08:	40 91 24 47 	lds	r20, 0x4724	; 0x804724 <_ZZ11__vector_32E4buff_0>
    1f0c:	50 91 25 47 	lds	r21, 0x4725	; 0x804725 <_ZZ11__vector_32E4buff_0+0x1>
    1f10:	20 91 26 47 	lds	r18, 0x4726	; 0x804726 <_ZZ11__vector_32E9charIndex_0>
    1f14:	31 e0       	ldi	r19, 0x01	; 1
    1f16:	32 0f       	add	r19, r18
    1f18:	30 93 26 47 	sts	0x4726, r19	; 0x804726 <_ZZ11__vector_32E9charIndex_0>
    1f1c:	22 2f       	mov	r18, r18
    1f1e:	30 e0       	ldi	r19, 0x00	; 0
    1f20:	24 0f       	add	r18, r20
    1f22:	35 1f       	adc	r19, r21
    1f24:	f9 01       	movw	r30, r18
    1f26:	20 81       	ld	r18, Z
    1f28:	fc 01       	movw	r30, r24
    1f2a:	22 83       	std	Z+2, r18	; 0x02
			{
				linkbus_end_tx();
			}
		}
	}
}
    1f2c:	16 c0       	rjmp	.+44     	; 0x1f5a <__vector_32+0x15a>
			/* Put data into buffer, sends the data */
			USART1.TXDATAL = (*buff)[charIndex++];
		}
		else
		{
			charIndex = 0;
    1f2e:	10 92 26 47 	sts	0x4726, r1	; 0x804726 <_ZZ11__vector_32E9charIndex_0>
			(*buff)[0] = '\0';
    1f32:	80 91 24 47 	lds	r24, 0x4724	; 0x804724 <_ZZ11__vector_32E4buff_0>
    1f36:	90 91 25 47 	lds	r25, 0x4725	; 0x804725 <_ZZ11__vector_32E4buff_0+0x1>
    1f3a:	fc 01       	movw	r30, r24
    1f3c:	10 82       	st	Z, r1
			buff = nextFullLBTxBuffer();
    1f3e:	0e 94 b5 58 	call	0xb16a	; 0xb16a <_Z18nextFullLBTxBufferv>
    1f42:	80 93 24 47 	sts	0x4724, r24	; 0x804724 <_ZZ11__vector_32E4buff_0>
    1f46:	90 93 25 47 	sts	0x4725, r25	; 0x804725 <_ZZ11__vector_32E4buff_0+0x1>
			if(!buff)
    1f4a:	80 91 24 47 	lds	r24, 0x4724	; 0x804724 <_ZZ11__vector_32E4buff_0>
    1f4e:	90 91 25 47 	lds	r25, 0x4725	; 0x804725 <_ZZ11__vector_32E4buff_0+0x1>
    1f52:	89 2b       	or	r24, r25
    1f54:	11 f4       	brne	.+4      	; 0x1f5a <__vector_32+0x15a>
			{
				linkbus_end_tx();
    1f56:	0e 94 fa 59 	call	0xb3f4	; 0xb3f4 <_Z14linkbus_end_txv>
			}
		}
	}
}
    1f5a:	00 00       	nop
    1f5c:	df 91       	pop	r29
    1f5e:	cf 91       	pop	r28
    1f60:	ff 91       	pop	r31
    1f62:	ef 91       	pop	r30
    1f64:	bf 91       	pop	r27
    1f66:	af 91       	pop	r26
    1f68:	9f 91       	pop	r25
    1f6a:	8f 91       	pop	r24
    1f6c:	7f 91       	pop	r23
    1f6e:	6f 91       	pop	r22
    1f70:	5f 91       	pop	r21
    1f72:	4f 91       	pop	r20
    1f74:	3f 91       	pop	r19
    1f76:	2f 91       	pop	r18
    1f78:	0f 90       	pop	r0
    1f7a:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    1f7e:	0f 90       	pop	r0
    1f80:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    1f84:	0f 90       	pop	r0
    1f86:	1f 90       	pop	r1
    1f88:	18 95       	reti

00001f8a <PORTA_set_pin_level>:
}

void initializeAllEventSettings(bool disableEvent)
{
	
}
    1f8a:	cf 93       	push	r28
    1f8c:	df 93       	push	r29
    1f8e:	00 d0       	rcall	.+0      	; 0x1f90 <PORTA_set_pin_level+0x6>
    1f90:	cd b7       	in	r28, 0x3d	; 61
    1f92:	de b7       	in	r29, 0x3e	; 62
    1f94:	89 83       	std	Y+1, r24	; 0x01
    1f96:	6a 83       	std	Y+2, r22	; 0x02
    1f98:	8a 81       	ldd	r24, Y+2	; 0x02
    1f9a:	88 23       	and	r24, r24
    1f9c:	a9 f0       	breq	.+42     	; 0x1fc8 <PORTA_set_pin_level+0x3e>
    1f9e:	20 e0       	ldi	r18, 0x00	; 0
    1fa0:	30 e0       	ldi	r19, 0x00	; 0
    1fa2:	80 e0       	ldi	r24, 0x00	; 0
    1fa4:	90 e0       	ldi	r25, 0x00	; 0
    1fa6:	fc 01       	movw	r30, r24
    1fa8:	81 81       	ldd	r24, Z+1	; 0x01
    1faa:	68 2f       	mov	r22, r24
    1fac:	89 81       	ldd	r24, Y+1	; 0x01
    1fae:	48 2f       	mov	r20, r24
    1fb0:	50 e0       	ldi	r21, 0x00	; 0
    1fb2:	81 e0       	ldi	r24, 0x01	; 1
    1fb4:	90 e0       	ldi	r25, 0x00	; 0
    1fb6:	02 c0       	rjmp	.+4      	; 0x1fbc <PORTA_set_pin_level+0x32>
    1fb8:	88 0f       	add	r24, r24
    1fba:	99 1f       	adc	r25, r25
    1fbc:	4a 95       	dec	r20
    1fbe:	e2 f7       	brpl	.-8      	; 0x1fb8 <PORTA_set_pin_level+0x2e>
    1fc0:	86 2b       	or	r24, r22
    1fc2:	f9 01       	movw	r30, r18
    1fc4:	81 83       	std	Z+1, r24	; 0x01
    1fc6:	15 c0       	rjmp	.+42     	; 0x1ff2 <PORTA_set_pin_level+0x68>
    1fc8:	20 e0       	ldi	r18, 0x00	; 0
    1fca:	30 e0       	ldi	r19, 0x00	; 0
    1fcc:	80 e0       	ldi	r24, 0x00	; 0
    1fce:	90 e0       	ldi	r25, 0x00	; 0
    1fd0:	fc 01       	movw	r30, r24
    1fd2:	81 81       	ldd	r24, Z+1	; 0x01
    1fd4:	68 2f       	mov	r22, r24
    1fd6:	89 81       	ldd	r24, Y+1	; 0x01
    1fd8:	48 2f       	mov	r20, r24
    1fda:	50 e0       	ldi	r21, 0x00	; 0
    1fdc:	81 e0       	ldi	r24, 0x01	; 1
    1fde:	90 e0       	ldi	r25, 0x00	; 0
    1fe0:	02 c0       	rjmp	.+4      	; 0x1fe6 <PORTA_set_pin_level+0x5c>
    1fe2:	88 0f       	add	r24, r24
    1fe4:	99 1f       	adc	r25, r25
    1fe6:	4a 95       	dec	r20
    1fe8:	e2 f7       	brpl	.-8      	; 0x1fe2 <PORTA_set_pin_level+0x58>
    1fea:	80 95       	com	r24
    1fec:	86 23       	and	r24, r22
    1fee:	f9 01       	movw	r30, r18
    1ff0:	81 83       	std	Z+1, r24	; 0x01
    1ff2:	00 00       	nop
    1ff4:	0f 90       	pop	r0
    1ff6:	0f 90       	pop	r0
    1ff8:	df 91       	pop	r29
    1ffa:	cf 91       	pop	r28
    1ffc:	08 95       	ret

00001ffe <PORTB_set_pin_level>:
    1ffe:	cf 93       	push	r28
    2000:	df 93       	push	r29
    2002:	00 d0       	rcall	.+0      	; 0x2004 <PORTB_set_pin_level+0x6>
    2004:	cd b7       	in	r28, 0x3d	; 61
    2006:	de b7       	in	r29, 0x3e	; 62
    2008:	89 83       	std	Y+1, r24	; 0x01
    200a:	6a 83       	std	Y+2, r22	; 0x02
    200c:	8a 81       	ldd	r24, Y+2	; 0x02
    200e:	88 23       	and	r24, r24
    2010:	a9 f0       	breq	.+42     	; 0x203c <PORTB_set_pin_level+0x3e>
    2012:	84 e0       	ldi	r24, 0x04	; 4
    2014:	90 e0       	ldi	r25, 0x00	; 0
    2016:	24 e0       	ldi	r18, 0x04	; 4
    2018:	30 e0       	ldi	r19, 0x00	; 0
    201a:	f9 01       	movw	r30, r18
    201c:	21 81       	ldd	r18, Z+1	; 0x01
    201e:	62 2f       	mov	r22, r18
    2020:	29 81       	ldd	r18, Y+1	; 0x01
    2022:	42 2f       	mov	r20, r18
    2024:	50 e0       	ldi	r21, 0x00	; 0
    2026:	21 e0       	ldi	r18, 0x01	; 1
    2028:	30 e0       	ldi	r19, 0x00	; 0
    202a:	02 c0       	rjmp	.+4      	; 0x2030 <PORTB_set_pin_level+0x32>
    202c:	22 0f       	add	r18, r18
    202e:	33 1f       	adc	r19, r19
    2030:	4a 95       	dec	r20
    2032:	e2 f7       	brpl	.-8      	; 0x202c <PORTB_set_pin_level+0x2e>
    2034:	26 2b       	or	r18, r22
    2036:	fc 01       	movw	r30, r24
    2038:	21 83       	std	Z+1, r18	; 0x01
    203a:	15 c0       	rjmp	.+42     	; 0x2066 <PORTB_set_pin_level+0x68>
    203c:	84 e0       	ldi	r24, 0x04	; 4
    203e:	90 e0       	ldi	r25, 0x00	; 0
    2040:	24 e0       	ldi	r18, 0x04	; 4
    2042:	30 e0       	ldi	r19, 0x00	; 0
    2044:	f9 01       	movw	r30, r18
    2046:	21 81       	ldd	r18, Z+1	; 0x01
    2048:	62 2f       	mov	r22, r18
    204a:	29 81       	ldd	r18, Y+1	; 0x01
    204c:	42 2f       	mov	r20, r18
    204e:	50 e0       	ldi	r21, 0x00	; 0
    2050:	21 e0       	ldi	r18, 0x01	; 1
    2052:	30 e0       	ldi	r19, 0x00	; 0
    2054:	02 c0       	rjmp	.+4      	; 0x205a <PORTB_set_pin_level+0x5c>
    2056:	22 0f       	add	r18, r18
    2058:	33 1f       	adc	r19, r19
    205a:	4a 95       	dec	r20
    205c:	e2 f7       	brpl	.-8      	; 0x2056 <PORTB_set_pin_level+0x58>
    205e:	20 95       	com	r18
    2060:	26 23       	and	r18, r22
    2062:	fc 01       	movw	r30, r24
    2064:	21 83       	std	Z+1, r18	; 0x01
    2066:	00 00       	nop
    2068:	0f 90       	pop	r0
    206a:	0f 90       	pop	r0
    206c:	df 91       	pop	r29
    206e:	cf 91       	pop	r28
    2070:	08 95       	ret

00002072 <PORTC_set_pin_pull_mode>:
    2072:	cf 93       	push	r28
    2074:	df 93       	push	r29
    2076:	00 d0       	rcall	.+0      	; 0x2078 <PORTC_set_pin_pull_mode+0x6>
    2078:	00 d0       	rcall	.+0      	; 0x207a <PORTC_set_pin_pull_mode+0x8>
    207a:	cd b7       	in	r28, 0x3d	; 61
    207c:	de b7       	in	r29, 0x3e	; 62
    207e:	8b 83       	std	Y+3, r24	; 0x03
    2080:	6c 83       	std	Y+4, r22	; 0x04
    2082:	8b 81       	ldd	r24, Y+3	; 0x03
    2084:	88 2f       	mov	r24, r24
    2086:	90 e0       	ldi	r25, 0x00	; 0
    2088:	80 5b       	subi	r24, 0xB0	; 176
    208a:	9b 4f       	sbci	r25, 0xFB	; 251
    208c:	89 83       	std	Y+1, r24	; 0x01
    208e:	9a 83       	std	Y+2, r25	; 0x02
    2090:	8c 81       	ldd	r24, Y+4	; 0x04
    2092:	81 30       	cpi	r24, 0x01	; 1
    2094:	59 f4       	brne	.+22     	; 0x20ac <PORTC_set_pin_pull_mode+0x3a>
    2096:	89 81       	ldd	r24, Y+1	; 0x01
    2098:	9a 81       	ldd	r25, Y+2	; 0x02
    209a:	fc 01       	movw	r30, r24
    209c:	80 81       	ld	r24, Z
    209e:	28 2f       	mov	r18, r24
    20a0:	28 60       	ori	r18, 0x08	; 8
    20a2:	89 81       	ldd	r24, Y+1	; 0x01
    20a4:	9a 81       	ldd	r25, Y+2	; 0x02
    20a6:	fc 01       	movw	r30, r24
    20a8:	20 83       	st	Z, r18
    20aa:	0d c0       	rjmp	.+26     	; 0x20c6 <PORTC_set_pin_pull_mode+0x54>
    20ac:	8c 81       	ldd	r24, Y+4	; 0x04
    20ae:	88 23       	and	r24, r24
    20b0:	51 f4       	brne	.+20     	; 0x20c6 <PORTC_set_pin_pull_mode+0x54>
    20b2:	89 81       	ldd	r24, Y+1	; 0x01
    20b4:	9a 81       	ldd	r25, Y+2	; 0x02
    20b6:	fc 01       	movw	r30, r24
    20b8:	80 81       	ld	r24, Z
    20ba:	28 2f       	mov	r18, r24
    20bc:	27 7f       	andi	r18, 0xF7	; 247
    20be:	89 81       	ldd	r24, Y+1	; 0x01
    20c0:	9a 81       	ldd	r25, Y+2	; 0x02
    20c2:	fc 01       	movw	r30, r24
    20c4:	20 83       	st	Z, r18
    20c6:	00 00       	nop
    20c8:	24 96       	adiw	r28, 0x04	; 4
    20ca:	cd bf       	out	0x3d, r28	; 61
    20cc:	de bf       	out	0x3e, r29	; 62
    20ce:	df 91       	pop	r29
    20d0:	cf 91       	pop	r28
    20d2:	08 95       	ret

000020d4 <PORTC_get_pin_level>:
    20d4:	cf 93       	push	r28
    20d6:	df 93       	push	r29
    20d8:	1f 92       	push	r1
    20da:	cd b7       	in	r28, 0x3d	; 61
    20dc:	de b7       	in	r29, 0x3e	; 62
    20de:	89 83       	std	Y+1, r24	; 0x01
    20e0:	88 e0       	ldi	r24, 0x08	; 8
    20e2:	90 e0       	ldi	r25, 0x00	; 0
    20e4:	fc 01       	movw	r30, r24
    20e6:	82 81       	ldd	r24, Z+2	; 0x02
    20e8:	88 2f       	mov	r24, r24
    20ea:	90 e0       	ldi	r25, 0x00	; 0
    20ec:	29 81       	ldd	r18, Y+1	; 0x01
    20ee:	22 2f       	mov	r18, r18
    20f0:	30 e0       	ldi	r19, 0x00	; 0
    20f2:	02 c0       	rjmp	.+4      	; 0x20f8 <PORTC_get_pin_level+0x24>
    20f4:	95 95       	asr	r25
    20f6:	87 95       	ror	r24
    20f8:	2a 95       	dec	r18
    20fa:	e2 f7       	brpl	.-8      	; 0x20f4 <PORTC_get_pin_level+0x20>
    20fc:	81 70       	andi	r24, 0x01	; 1
    20fe:	99 27       	eor	r25, r25
    2100:	21 e0       	ldi	r18, 0x01	; 1
    2102:	89 2b       	or	r24, r25
    2104:	09 f4       	brne	.+2      	; 0x2108 <PORTC_get_pin_level+0x34>
    2106:	20 e0       	ldi	r18, 0x00	; 0
    2108:	82 2f       	mov	r24, r18
    210a:	0f 90       	pop	r0
    210c:	df 91       	pop	r29
    210e:	cf 91       	pop	r28
    2110:	08 95       	ret

00002112 <PORTD_get_pin_level>:
    2112:	cf 93       	push	r28
    2114:	df 93       	push	r29
    2116:	1f 92       	push	r1
    2118:	cd b7       	in	r28, 0x3d	; 61
    211a:	de b7       	in	r29, 0x3e	; 62
    211c:	89 83       	std	Y+1, r24	; 0x01
    211e:	8c e0       	ldi	r24, 0x0C	; 12
    2120:	90 e0       	ldi	r25, 0x00	; 0
    2122:	fc 01       	movw	r30, r24
    2124:	82 81       	ldd	r24, Z+2	; 0x02
    2126:	88 2f       	mov	r24, r24
    2128:	90 e0       	ldi	r25, 0x00	; 0
    212a:	29 81       	ldd	r18, Y+1	; 0x01
    212c:	22 2f       	mov	r18, r18
    212e:	30 e0       	ldi	r19, 0x00	; 0
    2130:	02 c0       	rjmp	.+4      	; 0x2136 <PORTD_get_pin_level+0x24>
    2132:	95 95       	asr	r25
    2134:	87 95       	ror	r24
    2136:	2a 95       	dec	r18
    2138:	e2 f7       	brpl	.-8      	; 0x2132 <PORTD_get_pin_level+0x20>
    213a:	81 70       	andi	r24, 0x01	; 1
    213c:	99 27       	eor	r25, r25
    213e:	21 e0       	ldi	r18, 0x01	; 1
    2140:	89 2b       	or	r24, r25
    2142:	09 f4       	brne	.+2      	; 0x2146 <PORTD_get_pin_level+0x34>
    2144:	20 e0       	ldi	r18, 0x00	; 0
    2146:	82 2f       	mov	r24, r18
    2148:	0f 90       	pop	r0
    214a:	df 91       	pop	r29
    214c:	cf 91       	pop	r28
    214e:	08 95       	ret

00002150 <__vector_6>:
    2150:	1f 92       	push	r1
    2152:	0f 92       	push	r0
    2154:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    2158:	0f 92       	push	r0
    215a:	11 24       	eor	r1, r1
    215c:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    2160:	0f 92       	push	r0
    2162:	ef 92       	push	r14
    2164:	ff 92       	push	r15
    2166:	0f 93       	push	r16
    2168:	1f 93       	push	r17
    216a:	2f 93       	push	r18
    216c:	3f 93       	push	r19
    216e:	4f 93       	push	r20
    2170:	5f 93       	push	r21
    2172:	6f 93       	push	r22
    2174:	7f 93       	push	r23
    2176:	8f 93       	push	r24
    2178:	9f 93       	push	r25
    217a:	af 93       	push	r26
    217c:	bf 93       	push	r27
    217e:	ef 93       	push	r30
    2180:	ff 93       	push	r31
    2182:	cf 93       	push	r28
    2184:	df 93       	push	r29
    2186:	cd b7       	in	r28, 0x3d	; 61
    2188:	de b7       	in	r29, 0x3e	; 62
    218a:	2f 97       	sbiw	r28, 0x0f	; 15
    218c:	cd bf       	out	0x3d, r28	; 61
    218e:	de bf       	out	0x3e, r29	; 62
    2190:	80 e0       	ldi	r24, 0x00	; 0
    2192:	94 e0       	ldi	r25, 0x04	; 4
    2194:	fc 01       	movw	r30, r24
    2196:	81 85       	ldd	r24, Z+9	; 0x09
    2198:	88 2f       	mov	r24, r24
    219a:	90 e0       	ldi	r25, 0x00	; 0
    219c:	84 70       	andi	r24, 0x04	; 4
    219e:	99 27       	eor	r25, r25
    21a0:	21 e0       	ldi	r18, 0x01	; 1
    21a2:	89 2b       	or	r24, r25
    21a4:	09 f4       	brne	.+2      	; 0x21a8 <__vector_6+0x58>
    21a6:	20 e0       	ldi	r18, 0x00	; 0
    21a8:	22 23       	and	r18, r18
    21aa:	09 f4       	brne	.+2      	; 0x21ae <__vector_6+0x5e>
    21ac:	a2 c3       	rjmp	.+1860   	; 0x28f2 <__vector_6+0x7a2>
    21ae:	0e 94 88 06 	call	0xd10	; 0xd10 <system_tick>
    21b2:	80 91 a7 47 	lds	r24, 0x47A7	; 0x8047a7 <_ZL10g_sleeping>
    21b6:	88 23       	and	r24, r24
    21b8:	09 f4       	brne	.+2      	; 0x21bc <__vector_6+0x6c>
    21ba:	3e c0       	rjmp	.+124    	; 0x2238 <__vector_6+0xe8>
    21bc:	80 91 a8 47 	lds	r24, 0x47A8	; 0x8047a8 <_ZL23g_seconds_left_to_sleep>
    21c0:	90 91 a9 47 	lds	r25, 0x47A9	; 0x8047a9 <_ZL23g_seconds_left_to_sleep+0x1>
    21c4:	a0 91 aa 47 	lds	r26, 0x47AA	; 0x8047aa <_ZL23g_seconds_left_to_sleep+0x2>
    21c8:	b0 91 ab 47 	lds	r27, 0x47AB	; 0x8047ab <_ZL23g_seconds_left_to_sleep+0x3>
    21cc:	21 e0       	ldi	r18, 0x01	; 1
    21ce:	89 2b       	or	r24, r25
    21d0:	8a 2b       	or	r24, r26
    21d2:	8b 2b       	or	r24, r27
    21d4:	09 f4       	brne	.+2      	; 0x21d8 <__vector_6+0x88>
    21d6:	20 e0       	ldi	r18, 0x00	; 0
    21d8:	22 23       	and	r18, r18
    21da:	99 f0       	breq	.+38     	; 0x2202 <__vector_6+0xb2>
    21dc:	80 91 a8 47 	lds	r24, 0x47A8	; 0x8047a8 <_ZL23g_seconds_left_to_sleep>
    21e0:	90 91 a9 47 	lds	r25, 0x47A9	; 0x8047a9 <_ZL23g_seconds_left_to_sleep+0x1>
    21e4:	a0 91 aa 47 	lds	r26, 0x47AA	; 0x8047aa <_ZL23g_seconds_left_to_sleep+0x2>
    21e8:	b0 91 ab 47 	lds	r27, 0x47AB	; 0x8047ab <_ZL23g_seconds_left_to_sleep+0x3>
    21ec:	01 97       	sbiw	r24, 0x01	; 1
    21ee:	a1 09       	sbc	r26, r1
    21f0:	b1 09       	sbc	r27, r1
    21f2:	80 93 a8 47 	sts	0x47A8, r24	; 0x8047a8 <_ZL23g_seconds_left_to_sleep>
    21f6:	90 93 a9 47 	sts	0x47A9, r25	; 0x8047a9 <_ZL23g_seconds_left_to_sleep+0x1>
    21fa:	a0 93 aa 47 	sts	0x47AA, r26	; 0x8047aa <_ZL23g_seconds_left_to_sleep+0x2>
    21fe:	b0 93 ab 47 	sts	0x47AB, r27	; 0x8047ab <_ZL23g_seconds_left_to_sleep+0x3>
    2202:	80 91 a8 47 	lds	r24, 0x47A8	; 0x8047a8 <_ZL23g_seconds_left_to_sleep>
    2206:	90 91 a9 47 	lds	r25, 0x47A9	; 0x8047a9 <_ZL23g_seconds_left_to_sleep+0x1>
    220a:	a0 91 aa 47 	lds	r26, 0x47AA	; 0x8047aa <_ZL23g_seconds_left_to_sleep+0x2>
    220e:	b0 91 ab 47 	lds	r27, 0x47AB	; 0x8047ab <_ZL23g_seconds_left_to_sleep+0x3>
    2212:	89 2b       	or	r24, r25
    2214:	8a 2b       	or	r24, r26
    2216:	8b 2b       	or	r24, r27
    2218:	21 f0       	breq	.+8      	; 0x2222 <__vector_6+0xd2>
    221a:	80 91 06 40 	lds	r24, 0x4006	; 0x804006 <_ZL28g_antenna_connection_changed>
    221e:	88 23       	and	r24, r24
    2220:	11 f0       	breq	.+4      	; 0x2226 <__vector_6+0xd6>
    2222:	81 e0       	ldi	r24, 0x01	; 1
    2224:	01 c0       	rjmp	.+2      	; 0x2228 <__vector_6+0xd8>
    2226:	80 e0       	ldi	r24, 0x00	; 0
    2228:	88 23       	and	r24, r24
    222a:	09 f4       	brne	.+2      	; 0x222e <__vector_6+0xde>
    222c:	62 c3       	rjmp	.+1732   	; 0x28f2 <__vector_6+0x7a2>
    222e:	10 92 a6 47 	sts	0x47A6, r1	; 0x8047a6 <_ZL17g_go_to_sleep_now>
    2232:	10 92 a7 47 	sts	0x47A7, r1	; 0x8047a7 <_ZL10g_sleeping>
    2236:	5d c3       	rjmp	.+1722   	; 0x28f2 <__vector_6+0x7a2>
    2238:	19 86       	std	Y+9, r1	; 0x09
    223a:	1a 86       	std	Y+10, r1	; 0x0a
    223c:	1b 86       	std	Y+11, r1	; 0x0b
    223e:	1c 86       	std	Y+12, r1	; 0x0c
    2240:	80 91 a3 47 	lds	r24, 0x47A3	; 0x8047a3 <g_event_commenced>
    2244:	88 23       	and	r24, r24
    2246:	09 f4       	brne	.+2      	; 0x224a <__vector_6+0xfa>
    2248:	5e c0       	rjmp	.+188    	; 0x2306 <__vector_6+0x1b6>
    224a:	80 91 9e 47 	lds	r24, 0x479E	; 0x80479e <g_event_finish_epoch>
    224e:	90 91 9f 47 	lds	r25, 0x479F	; 0x80479f <g_event_finish_epoch+0x1>
    2252:	a0 91 a0 47 	lds	r26, 0x47A0	; 0x8047a0 <g_event_finish_epoch+0x2>
    2256:	b0 91 a1 47 	lds	r27, 0x47A1	; 0x8047a1 <g_event_finish_epoch+0x3>
    225a:	89 2b       	or	r24, r25
    225c:	8a 2b       	or	r24, r26
    225e:	8b 2b       	or	r24, r27
    2260:	71 f0       	breq	.+28     	; 0x227e <__vector_6+0x12e>
    2262:	90 91 a4 47 	lds	r25, 0x47A4	; 0x8047a4 <g_check_for_next_event>
    2266:	81 e0       	ldi	r24, 0x01	; 1
    2268:	89 27       	eor	r24, r25
    226a:	88 23       	and	r24, r24
    226c:	41 f0       	breq	.+16     	; 0x227e <__vector_6+0x12e>
    226e:	90 91 6a 47 	lds	r25, 0x476A	; 0x80476a <_ZL20g_shutting_down_wifi>
    2272:	81 e0       	ldi	r24, 0x01	; 1
    2274:	89 27       	eor	r24, r25
    2276:	88 23       	and	r24, r24
    2278:	11 f0       	breq	.+4      	; 0x227e <__vector_6+0x12e>
    227a:	81 e0       	ldi	r24, 0x01	; 1
    227c:	01 c0       	rjmp	.+2      	; 0x2280 <__vector_6+0x130>
    227e:	80 e0       	ldi	r24, 0x00	; 0
    2280:	88 23       	and	r24, r24
    2282:	09 f4       	brne	.+2      	; 0x2286 <__vector_6+0x136>
    2284:	40 c0       	rjmp	.+128    	; 0x2306 <__vector_6+0x1b6>
    2286:	80 e0       	ldi	r24, 0x00	; 0
    2288:	90 e0       	ldi	r25, 0x00	; 0
    228a:	0e 94 56 06 	call	0xcac	; 0xcac <time>
    228e:	dc 01       	movw	r26, r24
    2290:	cb 01       	movw	r24, r22
    2292:	89 87       	std	Y+9, r24	; 0x09
    2294:	9a 87       	std	Y+10, r25	; 0x0a
    2296:	ab 87       	std	Y+11, r26	; 0x0b
    2298:	bc 87       	std	Y+12, r27	; 0x0c
    229a:	29 85       	ldd	r18, Y+9	; 0x09
    229c:	3a 85       	ldd	r19, Y+10	; 0x0a
    229e:	4b 85       	ldd	r20, Y+11	; 0x0b
    22a0:	5c 85       	ldd	r21, Y+12	; 0x0c
    22a2:	80 91 9e 47 	lds	r24, 0x479E	; 0x80479e <g_event_finish_epoch>
    22a6:	90 91 9f 47 	lds	r25, 0x479F	; 0x80479f <g_event_finish_epoch+0x1>
    22aa:	a0 91 a0 47 	lds	r26, 0x47A0	; 0x8047a0 <g_event_finish_epoch+0x2>
    22ae:	b0 91 a1 47 	lds	r27, 0x47A1	; 0x8047a1 <g_event_finish_epoch+0x3>
    22b2:	61 e0       	ldi	r22, 0x01	; 1
    22b4:	28 17       	cp	r18, r24
    22b6:	39 07       	cpc	r19, r25
    22b8:	4a 07       	cpc	r20, r26
    22ba:	5b 07       	cpc	r21, r27
    22bc:	08 f4       	brcc	.+2      	; 0x22c0 <__vector_6+0x170>
    22be:	60 e0       	ldi	r22, 0x00	; 0
    22c0:	66 23       	and	r22, r22
    22c2:	09 f1       	breq	.+66     	; 0x2306 <__vector_6+0x1b6>
    22c4:	8c ef       	ldi	r24, 0xFC	; 252
    22c6:	80 93 5a 47 	sts	0x475A, r24	; 0x80475a <_ZL18g_last_status_code>
    22ca:	10 92 62 47 	sts	0x4762, r1	; 0x804762 <_ZL12g_on_the_air>
    22ce:	10 92 63 47 	sts	0x4763, r1	; 0x804763 <_ZL12g_on_the_air+0x1>
    22d2:	10 92 64 47 	sts	0x4764, r1	; 0x804764 <_ZL12g_on_the_air+0x2>
    22d6:	10 92 65 47 	sts	0x4765, r1	; 0x804765 <_ZL12g_on_the_air+0x3>
    22da:	80 e0       	ldi	r24, 0x00	; 0
    22dc:	0e 94 bc 6f 	call	0xdf78	; 0xdf78 <_Z14keyTransmitterb>
    22e0:	10 92 a2 47 	sts	0x47A2, r1	; 0x8047a2 <g_event_enabled>
    22e4:	10 92 a3 47 	sts	0x47A3, r1	; 0x8047a3 <g_event_commenced>
    22e8:	81 e0       	ldi	r24, 0x01	; 1
    22ea:	80 93 a4 47 	sts	0x47A4, r24	; 0x8047a4 <g_check_for_next_event>
    22ee:	80 91 0a 40 	lds	r24, 0x400A	; 0x80400a <_ZL13g_wifi_active>
    22f2:	88 23       	and	r24, r24
    22f4:	19 f0       	breq	.+6      	; 0x22fc <__vector_6+0x1ac>
    22f6:	8c e3       	ldi	r24, 0x3C	; 60
    22f8:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    22fc:	60 e0       	ldi	r22, 0x00	; 0
    22fe:	88 eb       	ldi	r24, 0xB8	; 184
    2300:	97 e4       	ldi	r25, 0x47	; 71
    2302:	0e 94 8f 54 	call	0xa91e	; 0xa91e <_ZN4leds6setRedEb>
    2306:	80 91 a2 47 	lds	r24, 0x47A2	; 0x8047a2 <g_event_enabled>
    230a:	88 23       	and	r24, r24
    230c:	09 f4       	brne	.+2      	; 0x2310 <__vector_6+0x1c0>
    230e:	94 c2       	rjmp	.+1320   	; 0x2838 <__vector_6+0x6e8>
    2310:	80 91 a3 47 	lds	r24, 0x47A3	; 0x8047a3 <g_event_commenced>
    2314:	88 23       	and	r24, r24
    2316:	09 f4       	brne	.+2      	; 0x231a <__vector_6+0x1ca>
    2318:	f2 c1       	rjmp	.+996    	; 0x26fe <__vector_6+0x5ae>
    231a:	80 91 66 47 	lds	r24, 0x4766	; 0x804766 <_ZL26g_sendID_seconds_countdown>
    231e:	90 91 67 47 	lds	r25, 0x4767	; 0x804767 <_ZL26g_sendID_seconds_countdown+0x1>
    2322:	21 e0       	ldi	r18, 0x01	; 1
    2324:	89 2b       	or	r24, r25
    2326:	09 f4       	brne	.+2      	; 0x232a <__vector_6+0x1da>
    2328:	20 e0       	ldi	r18, 0x00	; 0
    232a:	22 23       	and	r18, r18
    232c:	49 f0       	breq	.+18     	; 0x2340 <__vector_6+0x1f0>
    232e:	80 91 66 47 	lds	r24, 0x4766	; 0x804766 <_ZL26g_sendID_seconds_countdown>
    2332:	90 91 67 47 	lds	r25, 0x4767	; 0x804767 <_ZL26g_sendID_seconds_countdown+0x1>
    2336:	01 97       	sbiw	r24, 0x01	; 1
    2338:	80 93 66 47 	sts	0x4766, r24	; 0x804766 <_ZL26g_sendID_seconds_countdown>
    233c:	90 93 67 47 	sts	0x4767, r25	; 0x804767 <_ZL26g_sendID_seconds_countdown+0x1>
    2340:	80 91 62 47 	lds	r24, 0x4762	; 0x804762 <_ZL12g_on_the_air>
    2344:	90 91 63 47 	lds	r25, 0x4763	; 0x804763 <_ZL12g_on_the_air+0x1>
    2348:	a0 91 64 47 	lds	r26, 0x4764	; 0x804764 <_ZL12g_on_the_air+0x2>
    234c:	b0 91 65 47 	lds	r27, 0x4765	; 0x804765 <_ZL12g_on_the_air+0x3>
    2350:	21 e0       	ldi	r18, 0x01	; 1
    2352:	89 2b       	or	r24, r25
    2354:	8a 2b       	or	r24, r26
    2356:	8b 2b       	or	r24, r27
    2358:	09 f4       	brne	.+2      	; 0x235c <__vector_6+0x20c>
    235a:	20 e0       	ldi	r18, 0x00	; 0
    235c:	22 23       	and	r18, r18
    235e:	09 f4       	brne	.+2      	; 0x2362 <__vector_6+0x212>
    2360:	6b c2       	rjmp	.+1238   	; 0x2838 <__vector_6+0x6e8>
    2362:	80 91 62 47 	lds	r24, 0x4762	; 0x804762 <_ZL12g_on_the_air>
    2366:	90 91 63 47 	lds	r25, 0x4763	; 0x804763 <_ZL12g_on_the_air+0x1>
    236a:	a0 91 64 47 	lds	r26, 0x4764	; 0x804764 <_ZL12g_on_the_air+0x2>
    236e:	b0 91 65 47 	lds	r27, 0x4765	; 0x804765 <_ZL12g_on_the_air+0x3>
    2372:	21 e0       	ldi	r18, 0x01	; 1
    2374:	18 16       	cp	r1, r24
    2376:	19 06       	cpc	r1, r25
    2378:	1a 06       	cpc	r1, r26
    237a:	1b 06       	cpc	r1, r27
    237c:	0c f0       	brlt	.+2      	; 0x2380 <__vector_6+0x230>
    237e:	20 e0       	ldi	r18, 0x00	; 0
    2380:	22 23       	and	r18, r18
    2382:	09 f4       	brne	.+2      	; 0x2386 <__vector_6+0x236>
    2384:	60 c1       	rjmp	.+704    	; 0x2646 <__vector_6+0x4f6>
    2386:	80 91 62 47 	lds	r24, 0x4762	; 0x804762 <_ZL12g_on_the_air>
    238a:	90 91 63 47 	lds	r25, 0x4763	; 0x804763 <_ZL12g_on_the_air+0x1>
    238e:	a0 91 64 47 	lds	r26, 0x4764	; 0x804764 <_ZL12g_on_the_air+0x2>
    2392:	b0 91 65 47 	lds	r27, 0x4765	; 0x804765 <_ZL12g_on_the_air+0x3>
    2396:	01 97       	sbiw	r24, 0x01	; 1
    2398:	a1 09       	sbc	r26, r1
    239a:	b1 09       	sbc	r27, r1
    239c:	80 93 62 47 	sts	0x4762, r24	; 0x804762 <_ZL12g_on_the_air>
    23a0:	90 93 63 47 	sts	0x4763, r25	; 0x804763 <_ZL12g_on_the_air+0x1>
    23a4:	a0 93 64 47 	sts	0x4764, r26	; 0x804764 <_ZL12g_on_the_air+0x2>
    23a8:	b0 93 65 47 	sts	0x4765, r27	; 0x804765 <_ZL12g_on_the_air+0x3>
    23ac:	80 91 66 47 	lds	r24, 0x4766	; 0x804766 <_ZL26g_sendID_seconds_countdown>
    23b0:	90 91 67 47 	lds	r25, 0x4767	; 0x804767 <_ZL26g_sendID_seconds_countdown+0x1>
    23b4:	89 2b       	or	r24, r25
    23b6:	41 f4       	brne	.+16     	; 0x23c8 <__vector_6+0x278>
    23b8:	80 91 96 47 	lds	r24, 0x4796	; 0x804796 <g_time_needed_for_ID>
    23bc:	90 91 97 47 	lds	r25, 0x4797	; 0x804797 <g_time_needed_for_ID+0x1>
    23c0:	89 2b       	or	r24, r25
    23c2:	11 f0       	breq	.+4      	; 0x23c8 <__vector_6+0x278>
    23c4:	81 e0       	ldi	r24, 0x01	; 1
    23c6:	01 c0       	rjmp	.+2      	; 0x23ca <__vector_6+0x27a>
    23c8:	80 e0       	ldi	r24, 0x00	; 0
    23ca:	88 23       	and	r24, r24
    23cc:	a9 f1       	breq	.+106    	; 0x2438 <__vector_6+0x2e8>
    23ce:	80 91 96 47 	lds	r24, 0x4796	; 0x804796 <g_time_needed_for_ID>
    23d2:	90 91 97 47 	lds	r25, 0x4797	; 0x804797 <g_time_needed_for_ID+0x1>
    23d6:	9c 01       	movw	r18, r24
    23d8:	40 e0       	ldi	r20, 0x00	; 0
    23da:	50 e0       	ldi	r21, 0x00	; 0
    23dc:	80 91 62 47 	lds	r24, 0x4762	; 0x804762 <_ZL12g_on_the_air>
    23e0:	90 91 63 47 	lds	r25, 0x4763	; 0x804763 <_ZL12g_on_the_air+0x1>
    23e4:	a0 91 64 47 	lds	r26, 0x4764	; 0x804764 <_ZL12g_on_the_air+0x2>
    23e8:	b0 91 65 47 	lds	r27, 0x4765	; 0x804765 <_ZL12g_on_the_air+0x3>
    23ec:	61 e0       	ldi	r22, 0x01	; 1
    23ee:	28 17       	cp	r18, r24
    23f0:	39 07       	cpc	r19, r25
    23f2:	4a 07       	cpc	r20, r26
    23f4:	5b 07       	cpc	r21, r27
    23f6:	09 f0       	breq	.+2      	; 0x23fa <__vector_6+0x2aa>
    23f8:	60 e0       	ldi	r22, 0x00	; 0
    23fa:	66 23       	and	r22, r22
    23fc:	e9 f0       	breq	.+58     	; 0x2438 <__vector_6+0x2e8>
    23fe:	8f ee       	ldi	r24, 0xEF	; 239
    2400:	80 93 5a 47 	sts	0x475A, r24	; 0x80475a <_ZL18g_last_status_code>
    2404:	80 91 11 40 	lds	r24, 0x4011	; 0x804011 <g_ID_period_seconds>
    2408:	90 91 12 40 	lds	r25, 0x4012	; 0x804012 <g_ID_period_seconds+0x1>
    240c:	80 93 66 47 	sts	0x4766, r24	; 0x804766 <_ZL26g_sendID_seconds_countdown>
    2410:	90 93 67 47 	sts	0x4767, r25	; 0x804767 <_ZL26g_sendID_seconds_countdown+0x1>
    2414:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    2418:	0e 94 aa 29 	call	0x5354	; 0x5354 <_Z13throttleValueh>
    241c:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    2420:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    2424:	1d 86       	std	Y+13, r1	; 0x0d
    2426:	ce 01       	movw	r24, r28
    2428:	0d 96       	adiw	r24, 0x0d	; 13
    242a:	40 e0       	ldi	r20, 0x00	; 0
    242c:	50 e0       	ldi	r21, 0x00	; 0
    242e:	bc 01       	movw	r22, r24
    2430:	81 e8       	ldi	r24, 0x81	; 129
    2432:	97 e4       	ldi	r25, 0x47	; 71
    2434:	0e 94 09 5c 	call	0xb812	; 0xb812 <_Z9makeMorsePcPbS0_>
    2438:	80 91 62 47 	lds	r24, 0x4762	; 0x804762 <_ZL12g_on_the_air>
    243c:	90 91 63 47 	lds	r25, 0x4763	; 0x804763 <_ZL12g_on_the_air+0x1>
    2440:	a0 91 64 47 	lds	r26, 0x4764	; 0x804764 <_ZL12g_on_the_air+0x2>
    2444:	b0 91 65 47 	lds	r27, 0x4765	; 0x804765 <_ZL12g_on_the_air+0x3>
    2448:	21 e0       	ldi	r18, 0x01	; 1
    244a:	89 2b       	or	r24, r25
    244c:	8a 2b       	or	r24, r26
    244e:	8b 2b       	or	r24, r27
    2450:	09 f0       	breq	.+2      	; 0x2454 <__vector_6+0x304>
    2452:	20 e0       	ldi	r18, 0x00	; 0
    2454:	22 23       	and	r18, r18
    2456:	09 f4       	brne	.+2      	; 0x245a <__vector_6+0x30a>
    2458:	ef c1       	rjmp	.+990    	; 0x2838 <__vector_6+0x6e8>
    245a:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_off_air_seconds>
    245e:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    2462:	21 e0       	ldi	r18, 0x01	; 1
    2464:	89 2b       	or	r24, r25
    2466:	09 f4       	brne	.+2      	; 0x246a <__vector_6+0x31a>
    2468:	20 e0       	ldi	r18, 0x00	; 0
    246a:	22 23       	and	r18, r18
    246c:	09 f4       	brne	.+2      	; 0x2470 <__vector_6+0x320>
    246e:	d2 c0       	rjmp	.+420    	; 0x2614 <__vector_6+0x4c4>
    2470:	80 e0       	ldi	r24, 0x00	; 0
    2472:	0e 94 bc 6f 	call	0xdf78	; 0xdf78 <_Z14keyTransmitterb>
    2476:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_off_air_seconds>
    247a:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    247e:	20 91 62 47 	lds	r18, 0x4762	; 0x804762 <_ZL12g_on_the_air>
    2482:	30 91 63 47 	lds	r19, 0x4763	; 0x804763 <_ZL12g_on_the_air+0x1>
    2486:	40 91 64 47 	lds	r20, 0x4764	; 0x804764 <_ZL12g_on_the_air+0x2>
    248a:	50 91 65 47 	lds	r21, 0x4765	; 0x804765 <_ZL12g_on_the_air+0x3>
    248e:	09 2e       	mov	r0, r25
    2490:	00 0c       	add	r0, r0
    2492:	aa 0b       	sbc	r26, r26
    2494:	bb 0b       	sbc	r27, r27
    2496:	79 01       	movw	r14, r18
    2498:	8a 01       	movw	r16, r20
    249a:	e8 1a       	sub	r14, r24
    249c:	f9 0a       	sbc	r15, r25
    249e:	0a 0b       	sbc	r16, r26
    24a0:	1b 0b       	sbc	r17, r27
    24a2:	d8 01       	movw	r26, r16
    24a4:	c7 01       	movw	r24, r14
    24a6:	80 93 62 47 	sts	0x4762, r24	; 0x804762 <_ZL12g_on_the_air>
    24aa:	90 93 63 47 	sts	0x4763, r25	; 0x804763 <_ZL12g_on_the_air+0x1>
    24ae:	a0 93 64 47 	sts	0x4764, r26	; 0x804764 <_ZL12g_on_the_air+0x2>
    24b2:	b0 93 65 47 	sts	0x4765, r27	; 0x804765 <_ZL12g_on_the_air+0x3>
    24b6:	81 e0       	ldi	r24, 0x01	; 1
    24b8:	8d 87       	std	Y+13, r24	; 0x0d
    24ba:	ce 01       	movw	r24, r28
    24bc:	0d 96       	adiw	r24, 0x0d	; 13
    24be:	40 e0       	ldi	r20, 0x00	; 0
    24c0:	50 e0       	ldi	r21, 0x00	; 0
    24c2:	bc 01       	movw	r22, r24
    24c4:	8c e6       	ldi	r24, 0x6C	; 108
    24c6:	97 e4       	ldi	r25, 0x47	; 71
    24c8:	0e 94 09 5c 	call	0xb812	; 0xb812 <_Z9makeMorsePcPbS0_>
    24cc:	8e ef       	ldi	r24, 0xFE	; 254
    24ce:	80 93 5a 47 	sts	0x475A, r24	; 0x80475a <_ZL18g_last_status_code>
    24d2:	60 e0       	ldi	r22, 0x00	; 0
    24d4:	88 eb       	ldi	r24, 0xB8	; 184
    24d6:	97 e4       	ldi	r25, 0x47	; 71
    24d8:	0e 94 8f 54 	call	0xa91e	; 0xa91e <_ZN4leds6setRedEb>
    24dc:	19 82       	std	Y+1, r1	; 0x01
    24de:	1a 82       	std	Y+2, r1	; 0x02
    24e0:	1b 82       	std	Y+3, r1	; 0x03
    24e2:	1c 82       	std	Y+4, r1	; 0x04
    24e4:	ce 01       	movw	r24, r28
    24e6:	09 96       	adiw	r24, 0x09	; 9
    24e8:	0e 94 56 06 	call	0xcac	; 0xcac <time>
    24ec:	29 85       	ldd	r18, Y+9	; 0x09
    24ee:	3a 85       	ldd	r19, Y+10	; 0x0a
    24f0:	4b 85       	ldd	r20, Y+11	; 0x0b
    24f2:	5c 85       	ldd	r21, Y+12	; 0x0c
    24f4:	80 91 9e 47 	lds	r24, 0x479E	; 0x80479e <g_event_finish_epoch>
    24f8:	90 91 9f 47 	lds	r25, 0x479F	; 0x80479f <g_event_finish_epoch+0x1>
    24fc:	a0 91 a0 47 	lds	r26, 0x47A0	; 0x8047a0 <g_event_finish_epoch+0x2>
    2500:	b0 91 a1 47 	lds	r27, 0x47A1	; 0x8047a1 <g_event_finish_epoch+0x3>
    2504:	61 e0       	ldi	r22, 0x01	; 1
    2506:	28 17       	cp	r18, r24
    2508:	39 07       	cpc	r19, r25
    250a:	4a 07       	cpc	r20, r26
    250c:	5b 07       	cpc	r21, r27
    250e:	08 f0       	brcs	.+2      	; 0x2512 <__vector_6+0x3c2>
    2510:	60 e0       	ldi	r22, 0x00	; 0
    2512:	66 23       	and	r22, r22
    2514:	b1 f0       	breq	.+44     	; 0x2542 <__vector_6+0x3f2>
    2516:	29 85       	ldd	r18, Y+9	; 0x09
    2518:	3a 85       	ldd	r19, Y+10	; 0x0a
    251a:	4b 85       	ldd	r20, Y+11	; 0x0b
    251c:	5c 85       	ldd	r21, Y+12	; 0x0c
    251e:	80 91 9e 47 	lds	r24, 0x479E	; 0x80479e <g_event_finish_epoch>
    2522:	90 91 9f 47 	lds	r25, 0x479F	; 0x80479f <g_event_finish_epoch+0x1>
    2526:	a0 91 a0 47 	lds	r26, 0x47A0	; 0x8047a0 <g_event_finish_epoch+0x2>
    252a:	b0 91 a1 47 	lds	r27, 0x47A1	; 0x8047a1 <g_event_finish_epoch+0x3>
    252e:	bc 01       	movw	r22, r24
    2530:	cd 01       	movw	r24, r26
    2532:	0e 94 71 73 	call	0xe6e2	; 0xe6e2 <_Z7timeDifmm>
    2536:	dc 01       	movw	r26, r24
    2538:	cb 01       	movw	r24, r22
    253a:	89 83       	std	Y+1, r24	; 0x01
    253c:	9a 83       	std	Y+2, r25	; 0x02
    253e:	ab 83       	std	Y+3, r26	; 0x03
    2540:	bc 83       	std	Y+4, r27	; 0x04
    2542:	20 91 0f 40 	lds	r18, 0x400F	; 0x80400f <g_off_air_seconds>
    2546:	30 91 10 40 	lds	r19, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    254a:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    254e:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    2552:	82 0f       	add	r24, r18
    2554:	93 1f       	adc	r25, r19
    2556:	0f 96       	adiw	r24, 0x0f	; 15
    2558:	9c 01       	movw	r18, r24
    255a:	99 0f       	add	r25, r25
    255c:	44 0b       	sbc	r20, r20
    255e:	55 0b       	sbc	r21, r21
    2560:	61 e0       	ldi	r22, 0x01	; 1
    2562:	89 81       	ldd	r24, Y+1	; 0x01
    2564:	9a 81       	ldd	r25, Y+2	; 0x02
    2566:	ab 81       	ldd	r26, Y+3	; 0x03
    2568:	bc 81       	ldd	r27, Y+4	; 0x04
    256a:	28 17       	cp	r18, r24
    256c:	39 07       	cpc	r19, r25
    256e:	4a 07       	cpc	r20, r26
    2570:	5b 07       	cpc	r21, r27
    2572:	0c f0       	brlt	.+2      	; 0x2576 <__vector_6+0x426>
    2574:	60 e0       	ldi	r22, 0x00	; 0
    2576:	66 23       	and	r22, r22
    2578:	09 f4       	brne	.+2      	; 0x257c <__vector_6+0x42c>
    257a:	5e c1       	rjmp	.+700    	; 0x2838 <__vector_6+0x6e8>
    257c:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_off_air_seconds>
    2580:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    2584:	40 97       	sbiw	r24, 0x10	; 16
    2586:	34 f0       	brlt	.+12     	; 0x2594 <__vector_6+0x444>
    2588:	80 91 09 40 	lds	r24, 0x4009	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    258c:	88 23       	and	r24, r24
    258e:	11 f4       	brne	.+4      	; 0x2594 <__vector_6+0x444>
    2590:	81 e0       	ldi	r24, 0x01	; 1
    2592:	01 c0       	rjmp	.+2      	; 0x2596 <__vector_6+0x446>
    2594:	80 e0       	ldi	r24, 0x00	; 0
    2596:	88 23       	and	r24, r24
    2598:	09 f4       	brne	.+2      	; 0x259c <__vector_6+0x44c>
    259a:	4e c1       	rjmp	.+668    	; 0x2838 <__vector_6+0x6e8>
    259c:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_off_air_seconds>
    25a0:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    25a4:	0a 97       	sbiw	r24, 0x0a	; 10
    25a6:	09 2e       	mov	r0, r25
    25a8:	00 0c       	add	r0, r0
    25aa:	aa 0b       	sbc	r26, r26
    25ac:	bb 0b       	sbc	r27, r27
    25ae:	80 93 13 40 	sts	0x4013, r24	; 0x804013 <_ZL18g_seconds_to_sleep>
    25b2:	90 93 14 40 	sts	0x4014, r25	; 0x804014 <_ZL18g_seconds_to_sleep+0x1>
    25b6:	a0 93 15 40 	sts	0x4015, r26	; 0x804015 <_ZL18g_seconds_to_sleep+0x2>
    25ba:	b0 93 16 40 	sts	0x4016, r27	; 0x804016 <_ZL18g_seconds_to_sleep+0x3>
    25be:	82 e0       	ldi	r24, 0x02	; 2
    25c0:	80 93 6b 47 	sts	0x476B, r24	; 0x80476b <_ZL11g_sleepType>
    25c4:	81 e0       	ldi	r24, 0x01	; 1
    25c6:	80 93 a6 47 	sts	0x47A6, r24	; 0x8047a6 <_ZL17g_go_to_sleep_now>
    25ca:	1d 82       	std	Y+5, r1	; 0x05
    25cc:	1e 82       	std	Y+6, r1	; 0x06
    25ce:	20 91 66 47 	lds	r18, 0x4766	; 0x804766 <_ZL26g_sendID_seconds_countdown>
    25d2:	30 91 67 47 	lds	r19, 0x4767	; 0x804767 <_ZL26g_sendID_seconds_countdown+0x1>
    25d6:	80 91 13 40 	lds	r24, 0x4013	; 0x804013 <_ZL18g_seconds_to_sleep>
    25da:	90 91 14 40 	lds	r25, 0x4014	; 0x804014 <_ZL18g_seconds_to_sleep+0x1>
    25de:	a0 91 15 40 	lds	r26, 0x4015	; 0x804015 <_ZL18g_seconds_to_sleep+0x2>
    25e2:	b0 91 16 40 	lds	r27, 0x4016	; 0x804016 <_ZL18g_seconds_to_sleep+0x3>
    25e6:	89 01       	movw	r16, r18
    25e8:	08 1b       	sub	r16, r24
    25ea:	19 0b       	sbc	r17, r25
    25ec:	c8 01       	movw	r24, r16
    25ee:	8f 83       	std	Y+7, r24	; 0x07
    25f0:	98 87       	std	Y+8, r25	; 0x08
    25f2:	2d 81       	ldd	r18, Y+5	; 0x05
    25f4:	3e 81       	ldd	r19, Y+6	; 0x06
    25f6:	8f 81       	ldd	r24, Y+7	; 0x07
    25f8:	98 85       	ldd	r25, Y+8	; 0x08
    25fa:	28 17       	cp	r18, r24
    25fc:	39 07       	cpc	r19, r25
    25fe:	1c f4       	brge	.+6      	; 0x2606 <__vector_6+0x4b6>
    2600:	8f 81       	ldd	r24, Y+7	; 0x07
    2602:	98 85       	ldd	r25, Y+8	; 0x08
    2604:	02 c0       	rjmp	.+4      	; 0x260a <__vector_6+0x4ba>
    2606:	8d 81       	ldd	r24, Y+5	; 0x05
    2608:	9e 81       	ldd	r25, Y+6	; 0x06
    260a:	80 93 66 47 	sts	0x4766, r24	; 0x804766 <_ZL26g_sendID_seconds_countdown>
    260e:	90 93 67 47 	sts	0x4767, r25	; 0x804767 <_ZL26g_sendID_seconds_countdown+0x1>
    2612:	12 c1       	rjmp	.+548    	; 0x2838 <__vector_6+0x6e8>
    2614:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    2618:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    261c:	09 2e       	mov	r0, r25
    261e:	00 0c       	add	r0, r0
    2620:	aa 0b       	sbc	r26, r26
    2622:	bb 0b       	sbc	r27, r27
    2624:	80 93 62 47 	sts	0x4762, r24	; 0x804762 <_ZL12g_on_the_air>
    2628:	90 93 63 47 	sts	0x4763, r25	; 0x804763 <_ZL12g_on_the_air+0x1>
    262c:	a0 93 64 47 	sts	0x4764, r26	; 0x804764 <_ZL12g_on_the_air+0x2>
    2630:	b0 93 65 47 	sts	0x4765, r27	; 0x804765 <_ZL12g_on_the_air+0x3>
    2634:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    2638:	0e 94 aa 29 	call	0x5354	; 0x5354 <_Z13throttleValueh>
    263c:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    2640:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    2644:	f9 c0       	rjmp	.+498    	; 0x2838 <__vector_6+0x6e8>
    2646:	80 91 62 47 	lds	r24, 0x4762	; 0x804762 <_ZL12g_on_the_air>
    264a:	90 91 63 47 	lds	r25, 0x4763	; 0x804763 <_ZL12g_on_the_air+0x1>
    264e:	a0 91 64 47 	lds	r26, 0x4764	; 0x804764 <_ZL12g_on_the_air+0x2>
    2652:	b0 91 65 47 	lds	r27, 0x4765	; 0x804765 <_ZL12g_on_the_air+0x3>
    2656:	88 27       	eor	r24, r24
    2658:	b7 fd       	sbrc	r27, 7
    265a:	83 95       	inc	r24
    265c:	99 27       	eor	r25, r25
    265e:	aa 27       	eor	r26, r26
    2660:	bb 27       	eor	r27, r27
    2662:	88 23       	and	r24, r24
    2664:	09 f4       	brne	.+2      	; 0x2668 <__vector_6+0x518>
    2666:	e8 c0       	rjmp	.+464    	; 0x2838 <__vector_6+0x6e8>
    2668:	80 91 62 47 	lds	r24, 0x4762	; 0x804762 <_ZL12g_on_the_air>
    266c:	90 91 63 47 	lds	r25, 0x4763	; 0x804763 <_ZL12g_on_the_air+0x1>
    2670:	a0 91 64 47 	lds	r26, 0x4764	; 0x804764 <_ZL12g_on_the_air+0x2>
    2674:	b0 91 65 47 	lds	r27, 0x4765	; 0x804765 <_ZL12g_on_the_air+0x3>
    2678:	01 96       	adiw	r24, 0x01	; 1
    267a:	a1 1d       	adc	r26, r1
    267c:	b1 1d       	adc	r27, r1
    267e:	80 93 62 47 	sts	0x4762, r24	; 0x804762 <_ZL12g_on_the_air>
    2682:	90 93 63 47 	sts	0x4763, r25	; 0x804763 <_ZL12g_on_the_air+0x1>
    2686:	a0 93 64 47 	sts	0x4764, r26	; 0x804764 <_ZL12g_on_the_air+0x2>
    268a:	b0 93 65 47 	sts	0x4765, r27	; 0x804765 <_ZL12g_on_the_air+0x3>
    268e:	80 91 62 47 	lds	r24, 0x4762	; 0x804762 <_ZL12g_on_the_air>
    2692:	90 91 63 47 	lds	r25, 0x4763	; 0x804763 <_ZL12g_on_the_air+0x1>
    2696:	a0 91 64 47 	lds	r26, 0x4764	; 0x804764 <_ZL12g_on_the_air+0x2>
    269a:	b0 91 65 47 	lds	r27, 0x4765	; 0x804765 <_ZL12g_on_the_air+0x3>
    269e:	21 e0       	ldi	r18, 0x01	; 1
    26a0:	89 2b       	or	r24, r25
    26a2:	8a 2b       	or	r24, r26
    26a4:	8b 2b       	or	r24, r27
    26a6:	09 f0       	breq	.+2      	; 0x26aa <__vector_6+0x55a>
    26a8:	20 e0       	ldi	r18, 0x00	; 0
    26aa:	22 23       	and	r18, r18
    26ac:	09 f4       	brne	.+2      	; 0x26b0 <__vector_6+0x560>
    26ae:	c4 c0       	rjmp	.+392    	; 0x2838 <__vector_6+0x6e8>
    26b0:	8d ef       	ldi	r24, 0xFD	; 253
    26b2:	80 93 5a 47 	sts	0x475A, r24	; 0x80475a <_ZL18g_last_status_code>
    26b6:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    26ba:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    26be:	09 2e       	mov	r0, r25
    26c0:	00 0c       	add	r0, r0
    26c2:	aa 0b       	sbc	r26, r26
    26c4:	bb 0b       	sbc	r27, r27
    26c6:	80 93 62 47 	sts	0x4762, r24	; 0x804762 <_ZL12g_on_the_air>
    26ca:	90 93 63 47 	sts	0x4763, r25	; 0x804763 <_ZL12g_on_the_air+0x1>
    26ce:	a0 93 64 47 	sts	0x4764, r26	; 0x804764 <_ZL12g_on_the_air+0x2>
    26d2:	b0 93 65 47 	sts	0x4765, r27	; 0x804765 <_ZL12g_on_the_air+0x3>
    26d6:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    26da:	0e 94 aa 29 	call	0x5354	; 0x5354 <_Z13throttleValueh>
    26de:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    26e2:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    26e6:	81 e0       	ldi	r24, 0x01	; 1
    26e8:	8e 87       	std	Y+14, r24	; 0x0e
    26ea:	ce 01       	movw	r24, r28
    26ec:	0e 96       	adiw	r24, 0x0e	; 14
    26ee:	40 e0       	ldi	r20, 0x00	; 0
    26f0:	50 e0       	ldi	r21, 0x00	; 0
    26f2:	bc 01       	movw	r22, r24
    26f4:	8c e6       	ldi	r24, 0x6C	; 108
    26f6:	97 e4       	ldi	r25, 0x47	; 71
    26f8:	0e 94 09 5c 	call	0xb812	; 0xb812 <_Z9makeMorsePcPbS0_>
    26fc:	9d c0       	rjmp	.+314    	; 0x2838 <__vector_6+0x6e8>
    26fe:	80 91 9a 47 	lds	r24, 0x479A	; 0x80479a <g_event_start_epoch>
    2702:	90 91 9b 47 	lds	r25, 0x479B	; 0x80479b <g_event_start_epoch+0x1>
    2706:	a0 91 9c 47 	lds	r26, 0x479C	; 0x80479c <g_event_start_epoch+0x2>
    270a:	b0 91 9d 47 	lds	r27, 0x479D	; 0x80479d <g_event_start_epoch+0x3>
    270e:	21 e0       	ldi	r18, 0x01	; 1
    2710:	89 2b       	or	r24, r25
    2712:	8a 2b       	or	r24, r26
    2714:	8b 2b       	or	r24, r27
    2716:	09 f4       	brne	.+2      	; 0x271a <__vector_6+0x5ca>
    2718:	20 e0       	ldi	r18, 0x00	; 0
    271a:	22 23       	and	r18, r18
    271c:	09 f4       	brne	.+2      	; 0x2720 <__vector_6+0x5d0>
    271e:	8c c0       	rjmp	.+280    	; 0x2838 <__vector_6+0x6e8>
    2720:	ce 01       	movw	r24, r28
    2722:	09 96       	adiw	r24, 0x09	; 9
    2724:	0e 94 56 06 	call	0xcac	; 0xcac <time>
    2728:	29 85       	ldd	r18, Y+9	; 0x09
    272a:	3a 85       	ldd	r19, Y+10	; 0x0a
    272c:	4b 85       	ldd	r20, Y+11	; 0x0b
    272e:	5c 85       	ldd	r21, Y+12	; 0x0c
    2730:	80 91 9a 47 	lds	r24, 0x479A	; 0x80479a <g_event_start_epoch>
    2734:	90 91 9b 47 	lds	r25, 0x479B	; 0x80479b <g_event_start_epoch+0x1>
    2738:	a0 91 9c 47 	lds	r26, 0x479C	; 0x80479c <g_event_start_epoch+0x2>
    273c:	b0 91 9d 47 	lds	r27, 0x479D	; 0x80479d <g_event_start_epoch+0x3>
    2740:	61 e0       	ldi	r22, 0x01	; 1
    2742:	28 17       	cp	r18, r24
    2744:	39 07       	cpc	r19, r25
    2746:	4a 07       	cpc	r20, r26
    2748:	5b 07       	cpc	r21, r27
    274a:	08 f4       	brcc	.+2      	; 0x274e <__vector_6+0x5fe>
    274c:	60 e0       	ldi	r22, 0x00	; 0
    274e:	66 23       	and	r22, r22
    2750:	09 f4       	brne	.+2      	; 0x2754 <__vector_6+0x604>
    2752:	72 c0       	rjmp	.+228    	; 0x2838 <__vector_6+0x6e8>
    2754:	80 91 98 47 	lds	r24, 0x4798	; 0x804798 <g_intra_cycle_delay_time>
    2758:	90 91 99 47 	lds	r25, 0x4799	; 0x804799 <g_intra_cycle_delay_time+0x1>
    275c:	21 e0       	ldi	r18, 0x01	; 1
    275e:	89 2b       	or	r24, r25
    2760:	09 f4       	brne	.+2      	; 0x2764 <__vector_6+0x614>
    2762:	20 e0       	ldi	r18, 0x00	; 0
    2764:	22 23       	and	r18, r18
    2766:	71 f1       	breq	.+92     	; 0x27c4 <__vector_6+0x674>
    2768:	8e ef       	ldi	r24, 0xFE	; 254
    276a:	80 93 5a 47 	sts	0x475A, r24	; 0x80475a <_ZL18g_last_status_code>
    276e:	80 91 98 47 	lds	r24, 0x4798	; 0x804798 <g_intra_cycle_delay_time>
    2772:	90 91 99 47 	lds	r25, 0x4799	; 0x804799 <g_intra_cycle_delay_time+0x1>
    2776:	91 95       	neg	r25
    2778:	81 95       	neg	r24
    277a:	91 09       	sbc	r25, r1
    277c:	09 2e       	mov	r0, r25
    277e:	00 0c       	add	r0, r0
    2780:	aa 0b       	sbc	r26, r26
    2782:	bb 0b       	sbc	r27, r27
    2784:	80 93 62 47 	sts	0x4762, r24	; 0x804762 <_ZL12g_on_the_air>
    2788:	90 93 63 47 	sts	0x4763, r25	; 0x804763 <_ZL12g_on_the_air+0x1>
    278c:	a0 93 64 47 	sts	0x4764, r26	; 0x804764 <_ZL12g_on_the_air+0x2>
    2790:	b0 93 65 47 	sts	0x4765, r27	; 0x804765 <_ZL12g_on_the_air+0x3>
    2794:	20 91 98 47 	lds	r18, 0x4798	; 0x804798 <g_intra_cycle_delay_time>
    2798:	30 91 99 47 	lds	r19, 0x4799	; 0x804799 <g_intra_cycle_delay_time+0x1>
    279c:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    27a0:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    27a4:	82 0f       	add	r24, r18
    27a6:	93 1f       	adc	r25, r19
    27a8:	9c 01       	movw	r18, r24
    27aa:	80 91 96 47 	lds	r24, 0x4796	; 0x804796 <g_time_needed_for_ID>
    27ae:	90 91 97 47 	lds	r25, 0x4797	; 0x804797 <g_time_needed_for_ID+0x1>
    27b2:	a9 01       	movw	r20, r18
    27b4:	48 1b       	sub	r20, r24
    27b6:	59 0b       	sbc	r21, r25
    27b8:	ca 01       	movw	r24, r20
    27ba:	80 93 66 47 	sts	0x4766, r24	; 0x804766 <_ZL26g_sendID_seconds_countdown>
    27be:	90 93 67 47 	sts	0x4767, r25	; 0x804767 <_ZL26g_sendID_seconds_countdown+0x1>
    27c2:	37 c0       	rjmp	.+110    	; 0x2832 <__vector_6+0x6e2>
    27c4:	8d ef       	ldi	r24, 0xFD	; 253
    27c6:	80 93 5a 47 	sts	0x475A, r24	; 0x80475a <_ZL18g_last_status_code>
    27ca:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    27ce:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    27d2:	09 2e       	mov	r0, r25
    27d4:	00 0c       	add	r0, r0
    27d6:	aa 0b       	sbc	r26, r26
    27d8:	bb 0b       	sbc	r27, r27
    27da:	80 93 62 47 	sts	0x4762, r24	; 0x804762 <_ZL12g_on_the_air>
    27de:	90 93 63 47 	sts	0x4763, r25	; 0x804763 <_ZL12g_on_the_air+0x1>
    27e2:	a0 93 64 47 	sts	0x4764, r26	; 0x804764 <_ZL12g_on_the_air+0x2>
    27e6:	b0 93 65 47 	sts	0x4765, r27	; 0x804765 <_ZL12g_on_the_air+0x3>
    27ea:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    27ee:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    27f2:	9c 01       	movw	r18, r24
    27f4:	80 91 96 47 	lds	r24, 0x4796	; 0x804796 <g_time_needed_for_ID>
    27f8:	90 91 97 47 	lds	r25, 0x4797	; 0x804797 <g_time_needed_for_ID+0x1>
    27fc:	f9 01       	movw	r30, r18
    27fe:	e8 1b       	sub	r30, r24
    2800:	f9 0b       	sbc	r31, r25
    2802:	cf 01       	movw	r24, r30
    2804:	80 93 66 47 	sts	0x4766, r24	; 0x804766 <_ZL26g_sendID_seconds_countdown>
    2808:	90 93 67 47 	sts	0x4767, r25	; 0x804767 <_ZL26g_sendID_seconds_countdown+0x1>
    280c:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    2810:	0e 94 aa 29 	call	0x5354	; 0x5354 <_Z13throttleValueh>
    2814:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    2818:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    281c:	81 e0       	ldi	r24, 0x01	; 1
    281e:	8f 87       	std	Y+15, r24	; 0x0f
    2820:	ce 01       	movw	r24, r28
    2822:	0f 96       	adiw	r24, 0x0f	; 15
    2824:	40 e0       	ldi	r20, 0x00	; 0
    2826:	50 e0       	ldi	r21, 0x00	; 0
    2828:	bc 01       	movw	r22, r24
    282a:	8c e6       	ldi	r24, 0x6C	; 108
    282c:	97 e4       	ldi	r25, 0x47	; 71
    282e:	0e 94 09 5c 	call	0xb812	; 0xb812 <_Z9makeMorsePcPbS0_>
    2832:	81 e0       	ldi	r24, 0x01	; 1
    2834:	80 93 a3 47 	sts	0x47A3, r24	; 0x8047a3 <g_event_commenced>
    2838:	90 91 69 47 	lds	r25, 0x4769	; 0x804769 <_ZL19g_wifi_enable_delay>
    283c:	81 e0       	ldi	r24, 0x01	; 1
    283e:	99 23       	and	r25, r25
    2840:	09 f4       	brne	.+2      	; 0x2844 <__vector_6+0x6f4>
    2842:	80 e0       	ldi	r24, 0x00	; 0
    2844:	88 23       	and	r24, r24
    2846:	c1 f0       	breq	.+48     	; 0x2878 <__vector_6+0x728>
    2848:	80 91 69 47 	lds	r24, 0x4769	; 0x804769 <_ZL19g_wifi_enable_delay>
    284c:	81 50       	subi	r24, 0x01	; 1
    284e:	80 93 69 47 	sts	0x4769, r24	; 0x804769 <_ZL19g_wifi_enable_delay>
    2852:	90 91 69 47 	lds	r25, 0x4769	; 0x804769 <_ZL19g_wifi_enable_delay>
    2856:	81 e0       	ldi	r24, 0x01	; 1
    2858:	99 23       	and	r25, r25
    285a:	09 f0       	breq	.+2      	; 0x285e <__vector_6+0x70e>
    285c:	80 e0       	ldi	r24, 0x00	; 0
    285e:	88 23       	and	r24, r24
    2860:	09 f4       	brne	.+2      	; 0x2864 <__vector_6+0x714>
    2862:	47 c0       	rjmp	.+142    	; 0x28f2 <__vector_6+0x7a2>
    2864:	81 e0       	ldi	r24, 0x01	; 1
    2866:	0e 94 9a 4e 	call	0x9d34	; 0x9d34 <_Z10wifi_powerb>
    286a:	80 e0       	ldi	r24, 0x00	; 0
    286c:	0e 94 b1 4e 	call	0x9d62	; 0x9d62 <_Z10wifi_resetb>
    2870:	88 e7       	ldi	r24, 0x78	; 120
    2872:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    2876:	3d c0       	rjmp	.+122    	; 0x28f2 <__vector_6+0x7a2>
    2878:	80 91 6a 47 	lds	r24, 0x476A	; 0x80476a <_ZL20g_shutting_down_wifi>
    287c:	88 23       	and	r24, r24
    287e:	61 f4       	brne	.+24     	; 0x2898 <__vector_6+0x748>
    2880:	90 91 a4 47 	lds	r25, 0x47A4	; 0x8047a4 <g_check_for_next_event>
    2884:	81 e0       	ldi	r24, 0x01	; 1
    2886:	89 27       	eor	r24, r25
    2888:	88 23       	and	r24, r24
    288a:	41 f0       	breq	.+16     	; 0x289c <__vector_6+0x74c>
    288c:	90 91 a5 47 	lds	r25, 0x47A5	; 0x8047a5 <g_waiting_for_next_event>
    2890:	81 e0       	ldi	r24, 0x01	; 1
    2892:	89 27       	eor	r24, r25
    2894:	88 23       	and	r24, r24
    2896:	11 f0       	breq	.+4      	; 0x289c <__vector_6+0x74c>
    2898:	81 e0       	ldi	r24, 0x01	; 1
    289a:	01 c0       	rjmp	.+2      	; 0x289e <__vector_6+0x74e>
    289c:	80 e0       	ldi	r24, 0x00	; 0
    289e:	88 23       	and	r24, r24
    28a0:	09 f1       	breq	.+66     	; 0x28e4 <__vector_6+0x794>
    28a2:	90 91 09 40 	lds	r25, 0x4009	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    28a6:	81 e0       	ldi	r24, 0x01	; 1
    28a8:	99 23       	and	r25, r25
    28aa:	09 f4       	brne	.+2      	; 0x28ae <__vector_6+0x75e>
    28ac:	80 e0       	ldi	r24, 0x00	; 0
    28ae:	88 23       	and	r24, r24
    28b0:	c9 f0       	breq	.+50     	; 0x28e4 <__vector_6+0x794>
    28b2:	80 91 09 40 	lds	r24, 0x4009	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    28b6:	81 50       	subi	r24, 0x01	; 1
    28b8:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    28bc:	90 91 09 40 	lds	r25, 0x4009	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    28c0:	81 e0       	ldi	r24, 0x01	; 1
    28c2:	99 23       	and	r25, r25
    28c4:	09 f0       	breq	.+2      	; 0x28c8 <__vector_6+0x778>
    28c6:	80 e0       	ldi	r24, 0x00	; 0
    28c8:	88 23       	and	r24, r24
    28ca:	61 f0       	breq	.+24     	; 0x28e4 <__vector_6+0x794>
    28cc:	81 e0       	ldi	r24, 0x01	; 1
    28ce:	0e 94 b1 4e 	call	0x9d62	; 0x9d62 <_Z10wifi_resetb>
    28d2:	80 e0       	ldi	r24, 0x00	; 0
    28d4:	0e 94 9a 4e 	call	0x9d34	; 0x9d34 <_Z10wifi_powerb>
    28d8:	10 92 6a 47 	sts	0x476A, r1	; 0x80476a <_ZL20g_shutting_down_wifi>
    28dc:	0e 94 d1 28 	call	0x51a2	; 0x51a2 <_Z12eventEnabledv>
    28e0:	10 92 0a 40 	sts	0x400A, r1	; 0x80400a <_ZL13g_wifi_active>
    28e4:	80 91 0a 40 	lds	r24, 0x400A	; 0x80400a <_ZL13g_wifi_active>
    28e8:	88 23       	and	r24, r24
    28ea:	19 f0       	breq	.+6      	; 0x28f2 <__vector_6+0x7a2>
    28ec:	81 e0       	ldi	r24, 0x01	; 1
    28ee:	80 93 68 47 	sts	0x4768, r24	; 0x804768 <_ZL16g_report_seconds>
    28f2:	80 e0       	ldi	r24, 0x00	; 0
    28f4:	94 e0       	ldi	r25, 0x04	; 4
    28f6:	2f ef       	ldi	r18, 0xFF	; 255
    28f8:	fc 01       	movw	r30, r24
    28fa:	21 87       	std	Z+9, r18	; 0x09
    28fc:	00 00       	nop
    28fe:	2f 96       	adiw	r28, 0x0f	; 15
    2900:	cd bf       	out	0x3d, r28	; 61
    2902:	de bf       	out	0x3e, r29	; 62
    2904:	df 91       	pop	r29
    2906:	cf 91       	pop	r28
    2908:	ff 91       	pop	r31
    290a:	ef 91       	pop	r30
    290c:	bf 91       	pop	r27
    290e:	af 91       	pop	r26
    2910:	9f 91       	pop	r25
    2912:	8f 91       	pop	r24
    2914:	7f 91       	pop	r23
    2916:	6f 91       	pop	r22
    2918:	5f 91       	pop	r21
    291a:	4f 91       	pop	r20
    291c:	3f 91       	pop	r19
    291e:	2f 91       	pop	r18
    2920:	1f 91       	pop	r17
    2922:	0f 91       	pop	r16
    2924:	ff 90       	pop	r15
    2926:	ef 90       	pop	r14
    2928:	0f 90       	pop	r0
    292a:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    292e:	0f 90       	pop	r0
    2930:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    2934:	0f 90       	pop	r0
    2936:	1f 90       	pop	r1
    2938:	18 95       	reti

0000293a <__vector_22>:
    293a:	1f 92       	push	r1
    293c:	0f 92       	push	r0
    293e:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    2942:	0f 92       	push	r0
    2944:	11 24       	eor	r1, r1
    2946:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    294a:	0f 92       	push	r0
    294c:	2f 93       	push	r18
    294e:	3f 93       	push	r19
    2950:	4f 93       	push	r20
    2952:	5f 93       	push	r21
    2954:	6f 93       	push	r22
    2956:	7f 93       	push	r23
    2958:	8f 93       	push	r24
    295a:	9f 93       	push	r25
    295c:	af 93       	push	r26
    295e:	bf 93       	push	r27
    2960:	ef 93       	push	r30
    2962:	ff 93       	push	r31
    2964:	cf 93       	push	r28
    2966:	df 93       	push	r29
    2968:	1f 92       	push	r1
    296a:	cd b7       	in	r28, 0x3d	; 61
    296c:	de b7       	in	r29, 0x3e	; 62
    296e:	80 e6       	ldi	r24, 0x60	; 96
    2970:	94 e0       	ldi	r25, 0x04	; 4
    2972:	fc 01       	movw	r30, r24
    2974:	81 85       	ldd	r24, Z+9	; 0x09
    2976:	88 2f       	mov	r24, r24
    2978:	90 e0       	ldi	r25, 0x00	; 0
    297a:	82 70       	andi	r24, 0x02	; 2
    297c:	99 27       	eor	r25, r25
    297e:	21 e0       	ldi	r18, 0x01	; 1
    2980:	89 2b       	or	r24, r25
    2982:	09 f4       	brne	.+2      	; 0x2986 <__vector_22+0x4c>
    2984:	20 e0       	ldi	r18, 0x00	; 0
    2986:	22 23       	and	r18, r18
    2988:	b1 f0       	breq	.+44     	; 0x29b6 <__vector_22+0x7c>
    298a:	0e 94 7b 2c 	call	0x58f6	; 0x58f6 <_Z18antennaIsConnectedv>
    298e:	89 83       	std	Y+1, r24	; 0x01
    2990:	99 81       	ldd	r25, Y+1	; 0x01
    2992:	81 e0       	ldi	r24, 0x01	; 1
    2994:	89 27       	eor	r24, r25
    2996:	88 23       	and	r24, r24
    2998:	71 f0       	breq	.+28     	; 0x29b6 <__vector_22+0x7c>
    299a:	90 91 5f 47 	lds	r25, 0x475F	; 0x80475f <g_antenna_connect_state>
    299e:	81 e0       	ldi	r24, 0x01	; 1
    29a0:	91 30       	cpi	r25, 0x01	; 1
    29a2:	09 f4       	brne	.+2      	; 0x29a6 <__vector_22+0x6c>
    29a4:	80 e0       	ldi	r24, 0x00	; 0
    29a6:	88 23       	and	r24, r24
    29a8:	31 f0       	breq	.+12     	; 0x29b6 <__vector_22+0x7c>
    29aa:	81 e0       	ldi	r24, 0x01	; 1
    29ac:	80 93 5f 47 	sts	0x475F, r24	; 0x80475f <g_antenna_connect_state>
    29b0:	81 e0       	ldi	r24, 0x01	; 1
    29b2:	80 93 06 40 	sts	0x4006, r24	; 0x804006 <_ZL28g_antenna_connection_changed>
    29b6:	80 e6       	ldi	r24, 0x60	; 96
    29b8:	94 e0       	ldi	r25, 0x04	; 4
    29ba:	2f ef       	ldi	r18, 0xFF	; 255
    29bc:	fc 01       	movw	r30, r24
    29be:	21 87       	std	Z+9, r18	; 0x09
    29c0:	00 00       	nop
    29c2:	0f 90       	pop	r0
    29c4:	df 91       	pop	r29
    29c6:	cf 91       	pop	r28
    29c8:	ff 91       	pop	r31
    29ca:	ef 91       	pop	r30
    29cc:	bf 91       	pop	r27
    29ce:	af 91       	pop	r26
    29d0:	9f 91       	pop	r25
    29d2:	8f 91       	pop	r24
    29d4:	7f 91       	pop	r23
    29d6:	6f 91       	pop	r22
    29d8:	5f 91       	pop	r21
    29da:	4f 91       	pop	r20
    29dc:	3f 91       	pop	r19
    29de:	2f 91       	pop	r18
    29e0:	0f 90       	pop	r0
    29e2:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    29e6:	0f 90       	pop	r0
    29e8:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    29ec:	0f 90       	pop	r0
    29ee:	1f 90       	pop	r1
    29f0:	18 95       	reti

000029f2 <__vector_12>:
    29f2:	1f 92       	push	r1
    29f4:	0f 92       	push	r0
    29f6:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    29fa:	0f 92       	push	r0
    29fc:	11 24       	eor	r1, r1
    29fe:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    2a02:	0f 92       	push	r0
    2a04:	2f 93       	push	r18
    2a06:	3f 93       	push	r19
    2a08:	4f 93       	push	r20
    2a0a:	5f 93       	push	r21
    2a0c:	6f 93       	push	r22
    2a0e:	7f 93       	push	r23
    2a10:	8f 93       	push	r24
    2a12:	9f 93       	push	r25
    2a14:	af 93       	push	r26
    2a16:	bf 93       	push	r27
    2a18:	ef 93       	push	r30
    2a1a:	ff 93       	push	r31
    2a1c:	cf 93       	push	r28
    2a1e:	df 93       	push	r29
    2a20:	cd b7       	in	r28, 0x3d	; 61
    2a22:	de b7       	in	r29, 0x3e	; 62
    2a24:	27 97       	sbiw	r28, 0x07	; 7
    2a26:	cd bf       	out	0x3d, r28	; 61
    2a28:	de bf       	out	0x3e, r29	; 62
    2a2a:	80 e0       	ldi	r24, 0x00	; 0
    2a2c:	9b e0       	ldi	r25, 0x0B	; 11
    2a2e:	fc 01       	movw	r30, r24
    2a30:	86 81       	ldd	r24, Z+6	; 0x06
    2a32:	88 2f       	mov	r24, r24
    2a34:	90 e0       	ldi	r25, 0x00	; 0
    2a36:	81 70       	andi	r24, 0x01	; 1
    2a38:	99 27       	eor	r25, r25
    2a3a:	21 e0       	ldi	r18, 0x01	; 1
    2a3c:	89 2b       	or	r24, r25
    2a3e:	09 f4       	brne	.+2      	; 0x2a42 <__vector_12+0x50>
    2a40:	20 e0       	ldi	r18, 0x00	; 0
    2a42:	22 23       	and	r18, r18
    2a44:	09 f4       	brne	.+2      	; 0x2a48 <__vector_12+0x56>
    2a46:	dc c1       	rjmp	.+952    	; 0x2e00 <__vector_12+0x40e>
    2a48:	80 91 26 40 	lds	r24, 0x4026	; 0x804026 <g_i2c0_timeout_ticks>
    2a4c:	90 91 27 40 	lds	r25, 0x4027	; 0x804027 <g_i2c0_timeout_ticks+0x1>
    2a50:	21 e0       	ldi	r18, 0x01	; 1
    2a52:	89 2b       	or	r24, r25
    2a54:	09 f4       	brne	.+2      	; 0x2a58 <__vector_12+0x66>
    2a56:	20 e0       	ldi	r18, 0x00	; 0
    2a58:	22 23       	and	r18, r18
    2a5a:	49 f0       	breq	.+18     	; 0x2a6e <__vector_12+0x7c>
    2a5c:	80 91 26 40 	lds	r24, 0x4026	; 0x804026 <g_i2c0_timeout_ticks>
    2a60:	90 91 27 40 	lds	r25, 0x4027	; 0x804027 <g_i2c0_timeout_ticks+0x1>
    2a64:	01 97       	sbiw	r24, 0x01	; 1
    2a66:	80 93 26 40 	sts	0x4026, r24	; 0x804026 <g_i2c0_timeout_ticks>
    2a6a:	90 93 27 40 	sts	0x4027, r25	; 0x804027 <g_i2c0_timeout_ticks+0x1>
    2a6e:	80 91 28 40 	lds	r24, 0x4028	; 0x804028 <g_i2c1_timeout_ticks>
    2a72:	90 91 29 40 	lds	r25, 0x4029	; 0x804029 <g_i2c1_timeout_ticks+0x1>
    2a76:	21 e0       	ldi	r18, 0x01	; 1
    2a78:	89 2b       	or	r24, r25
    2a7a:	09 f4       	brne	.+2      	; 0x2a7e <__vector_12+0x8c>
    2a7c:	20 e0       	ldi	r18, 0x00	; 0
    2a7e:	22 23       	and	r18, r18
    2a80:	49 f0       	breq	.+18     	; 0x2a94 <__vector_12+0xa2>
    2a82:	80 91 28 40 	lds	r24, 0x4028	; 0x804028 <g_i2c1_timeout_ticks>
    2a86:	90 91 29 40 	lds	r25, 0x4029	; 0x804029 <g_i2c1_timeout_ticks+0x1>
    2a8a:	01 97       	sbiw	r24, 0x01	; 1
    2a8c:	80 93 28 40 	sts	0x4028, r24	; 0x804028 <g_i2c1_timeout_ticks>
    2a90:	90 93 29 40 	sts	0x4029, r25	; 0x804029 <g_i2c1_timeout_ticks+0x1>
    2a94:	80 91 5d 47 	lds	r24, 0x475D	; 0x80475d <_ZL21g_util_tick_countdown>
    2a98:	90 91 5e 47 	lds	r25, 0x475E	; 0x80475e <_ZL21g_util_tick_countdown+0x1>
    2a9c:	21 e0       	ldi	r18, 0x01	; 1
    2a9e:	89 2b       	or	r24, r25
    2aa0:	09 f4       	brne	.+2      	; 0x2aa4 <__vector_12+0xb2>
    2aa2:	20 e0       	ldi	r18, 0x00	; 0
    2aa4:	22 23       	and	r18, r18
    2aa6:	49 f0       	breq	.+18     	; 0x2aba <__vector_12+0xc8>
    2aa8:	80 91 5d 47 	lds	r24, 0x475D	; 0x80475d <_ZL21g_util_tick_countdown>
    2aac:	90 91 5e 47 	lds	r25, 0x475E	; 0x80475e <_ZL21g_util_tick_countdown+0x1>
    2ab0:	01 97       	sbiw	r24, 0x01	; 1
    2ab2:	80 93 5d 47 	sts	0x475D, r24	; 0x80475d <_ZL21g_util_tick_countdown>
    2ab6:	90 93 5e 47 	sts	0x475E, r25	; 0x80475e <_ZL21g_util_tick_countdown+0x1>
    2aba:	87 e0       	ldi	r24, 0x07	; 7
    2abc:	0e 94 6a 10 	call	0x20d4	; 0x20d4 <PORTC_get_pin_level>
    2ac0:	98 2f       	mov	r25, r24
    2ac2:	81 e0       	ldi	r24, 0x01	; 1
    2ac4:	89 27       	eor	r24, r25
    2ac6:	88 23       	and	r24, r24
    2ac8:	a1 f0       	breq	.+40     	; 0x2af2 <__vector_12+0x100>
    2aca:	80 91 b5 47 	lds	r24, 0x47B5	; 0x8047b5 <g_switch_closed_count>
    2ace:	90 91 b6 47 	lds	r25, 0x47B6	; 0x8047b6 <g_switch_closed_count+0x1>
    2ad2:	21 e0       	ldi	r18, 0x01	; 1
    2ad4:	88 3e       	cpi	r24, 0xE8	; 232
    2ad6:	93 40       	sbci	r25, 0x03	; 3
    2ad8:	08 f0       	brcs	.+2      	; 0x2adc <__vector_12+0xea>
    2ada:	20 e0       	ldi	r18, 0x00	; 0
    2adc:	22 23       	and	r18, r18
    2ade:	49 f0       	breq	.+18     	; 0x2af2 <__vector_12+0x100>
    2ae0:	80 91 b5 47 	lds	r24, 0x47B5	; 0x8047b5 <g_switch_closed_count>
    2ae4:	90 91 b6 47 	lds	r25, 0x47B6	; 0x8047b6 <g_switch_closed_count+0x1>
    2ae8:	01 96       	adiw	r24, 0x01	; 1
    2aea:	80 93 b5 47 	sts	0x47B5, r24	; 0x8047b5 <g_switch_closed_count>
    2aee:	90 93 b6 47 	sts	0x47B6, r25	; 0x8047b6 <g_switch_closed_count+0x1>
    2af2:	0e 94 83 28 	call	0x5106	; 0x5106 <_Z19updateAntennaStatusv>
    2af6:	80 91 a2 47 	lds	r24, 0x47A2	; 0x8047a2 <g_event_enabled>
    2afa:	88 23       	and	r24, r24
    2afc:	31 f0       	breq	.+12     	; 0x2b0a <__vector_12+0x118>
    2afe:	80 91 a3 47 	lds	r24, 0x47A3	; 0x8047a3 <g_event_commenced>
    2b02:	88 23       	and	r24, r24
    2b04:	11 f0       	breq	.+4      	; 0x2b0a <__vector_12+0x118>
    2b06:	81 e0       	ldi	r24, 0x01	; 1
    2b08:	01 c0       	rjmp	.+2      	; 0x2b0c <__vector_12+0x11a>
    2b0a:	80 e0       	ldi	r24, 0x00	; 0
    2b0c:	88 23       	and	r24, r24
    2b0e:	09 f4       	brne	.+2      	; 0x2b12 <__vector_12+0x120>
    2b10:	a7 c0       	rjmp	.+334    	; 0x2c60 <__vector_12+0x26e>
    2b12:	80 91 62 47 	lds	r24, 0x4762	; 0x804762 <_ZL12g_on_the_air>
    2b16:	90 91 63 47 	lds	r25, 0x4763	; 0x804763 <_ZL12g_on_the_air+0x1>
    2b1a:	a0 91 64 47 	lds	r26, 0x4764	; 0x804764 <_ZL12g_on_the_air+0x2>
    2b1e:	b0 91 65 47 	lds	r27, 0x4765	; 0x804765 <_ZL12g_on_the_air+0x3>
    2b22:	21 e0       	ldi	r18, 0x01	; 1
    2b24:	18 16       	cp	r1, r24
    2b26:	19 06       	cpc	r1, r25
    2b28:	1a 06       	cpc	r1, r26
    2b2a:	1b 06       	cpc	r1, r27
    2b2c:	0c f0       	brlt	.+2      	; 0x2b30 <__vector_12+0x13e>
    2b2e:	20 e0       	ldi	r18, 0x00	; 0
    2b30:	22 23       	and	r18, r18
    2b32:	09 f4       	brne	.+2      	; 0x2b36 <__vector_12+0x144>
    2b34:	71 c0       	rjmp	.+226    	; 0x2c18 <__vector_12+0x226>
    2b36:	80 91 c4 47 	lds	r24, 0x47C4	; 0x8047c4 <_ZZ11__vector_12E7codeInc>
    2b3a:	90 91 c5 47 	lds	r25, 0x47C5	; 0x8047c5 <_ZZ11__vector_12E7codeInc+0x1>
    2b3e:	89 2b       	or	r24, r25
    2b40:	09 f4       	brne	.+2      	; 0x2b44 <__vector_12+0x152>
    2b42:	56 c0       	rjmp	.+172    	; 0x2bf0 <__vector_12+0x1fe>
    2b44:	80 91 c4 47 	lds	r24, 0x47C4	; 0x8047c4 <_ZZ11__vector_12E7codeInc>
    2b48:	90 91 c5 47 	lds	r25, 0x47C5	; 0x8047c5 <_ZZ11__vector_12E7codeInc+0x1>
    2b4c:	01 97       	sbiw	r24, 0x01	; 1
    2b4e:	80 93 c4 47 	sts	0x47C4, r24	; 0x8047c4 <_ZZ11__vector_12E7codeInc>
    2b52:	90 93 c5 47 	sts	0x47C5, r25	; 0x8047c5 <_ZZ11__vector_12E7codeInc+0x1>
    2b56:	80 91 c4 47 	lds	r24, 0x47C4	; 0x8047c4 <_ZZ11__vector_12E7codeInc>
    2b5a:	90 91 c5 47 	lds	r25, 0x47C5	; 0x8047c5 <_ZZ11__vector_12E7codeInc+0x1>
    2b5e:	89 2b       	or	r24, r25
    2b60:	09 f0       	breq	.+2      	; 0x2b64 <__vector_12+0x172>
    2b62:	7e c0       	rjmp	.+252    	; 0x2c60 <__vector_12+0x26e>
    2b64:	9e 01       	movw	r18, r28
    2b66:	2a 5f       	subi	r18, 0xFA	; 250
    2b68:	3f 4f       	sbci	r19, 0xFF	; 255
    2b6a:	ce 01       	movw	r24, r28
    2b6c:	05 96       	adiw	r24, 0x05	; 5
    2b6e:	a9 01       	movw	r20, r18
    2b70:	bc 01       	movw	r22, r24
    2b72:	80 e0       	ldi	r24, 0x00	; 0
    2b74:	90 e0       	ldi	r25, 0x00	; 0
    2b76:	0e 94 09 5c 	call	0xb812	; 0xb812 <_Z9makeMorsePcPbS0_>
    2b7a:	80 93 c6 47 	sts	0x47C6, r24	; 0x8047c6 <_ZZ11__vector_12E3key>
    2b7e:	9d 81       	ldd	r25, Y+5	; 0x05
    2b80:	81 e0       	ldi	r24, 0x01	; 1
    2b82:	89 27       	eor	r24, r25
    2b84:	88 23       	and	r24, r24
    2b86:	31 f1       	breq	.+76     	; 0x2bd4 <__vector_12+0x1e2>
    2b88:	8e 81       	ldd	r24, Y+6	; 0x06
    2b8a:	88 23       	and	r24, r24
    2b8c:	19 f1       	breq	.+70     	; 0x2bd4 <__vector_12+0x1e2>
    2b8e:	8d ef       	ldi	r24, 0xFD	; 253
    2b90:	80 93 5a 47 	sts	0x475A, r24	; 0x80475a <_ZL18g_last_status_code>
    2b94:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    2b98:	0e 94 aa 29 	call	0x5354	; 0x5354 <_Z13throttleValueh>
    2b9c:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    2ba0:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    2ba4:	81 e0       	ldi	r24, 0x01	; 1
    2ba6:	8d 83       	std	Y+5, r24	; 0x05
    2ba8:	ce 01       	movw	r24, r28
    2baa:	05 96       	adiw	r24, 0x05	; 5
    2bac:	40 e0       	ldi	r20, 0x00	; 0
    2bae:	50 e0       	ldi	r21, 0x00	; 0
    2bb0:	bc 01       	movw	r22, r24
    2bb2:	8c e6       	ldi	r24, 0x6C	; 108
    2bb4:	97 e4       	ldi	r25, 0x47	; 71
    2bb6:	0e 94 09 5c 	call	0xb812	; 0xb812 <_Z9makeMorsePcPbS0_>
    2bba:	9e 01       	movw	r18, r28
    2bbc:	2a 5f       	subi	r18, 0xFA	; 250
    2bbe:	3f 4f       	sbci	r19, 0xFF	; 255
    2bc0:	ce 01       	movw	r24, r28
    2bc2:	05 96       	adiw	r24, 0x05	; 5
    2bc4:	a9 01       	movw	r20, r18
    2bc6:	bc 01       	movw	r22, r24
    2bc8:	80 e0       	ldi	r24, 0x00	; 0
    2bca:	90 e0       	ldi	r25, 0x00	; 0
    2bcc:	0e 94 09 5c 	call	0xb812	; 0xb812 <_Z9makeMorsePcPbS0_>
    2bd0:	80 93 c6 47 	sts	0x47C6, r24	; 0x8047c6 <_ZZ11__vector_12E3key>
    2bd4:	80 91 c6 47 	lds	r24, 0x47C6	; 0x8047c6 <_ZZ11__vector_12E3key>
    2bd8:	88 23       	and	r24, r24
    2bda:	09 f4       	brne	.+2      	; 0x2bde <__vector_12+0x1ec>
    2bdc:	41 c0       	rjmp	.+130    	; 0x2c60 <__vector_12+0x26e>
    2bde:	81 e0       	ldi	r24, 0x01	; 1
    2be0:	0e 94 ab 6f 	call	0xdf56	; 0xdf56 <_Z18powerToTransmitterb>
    2be4:	61 e0       	ldi	r22, 0x01	; 1
    2be6:	88 eb       	ldi	r24, 0xB8	; 184
    2be8:	97 e4       	ldi	r25, 0x47	; 71
    2bea:	0e 94 8f 54 	call	0xa91e	; 0xa91e <_ZN4leds6setRedEb>
    2bee:	38 c0       	rjmp	.+112    	; 0x2c60 <__vector_12+0x26e>
    2bf0:	80 91 c6 47 	lds	r24, 0x47C6	; 0x8047c6 <_ZZ11__vector_12E3key>
    2bf4:	0e 94 bc 6f 	call	0xdf78	; 0xdf78 <_Z14keyTransmitterb>
    2bf8:	80 91 c6 47 	lds	r24, 0x47C6	; 0x8047c6 <_ZZ11__vector_12E3key>
    2bfc:	68 2f       	mov	r22, r24
    2bfe:	88 eb       	ldi	r24, 0xB8	; 184
    2c00:	97 e4       	ldi	r25, 0x47	; 71
    2c02:	0e 94 8f 54 	call	0xa91e	; 0xa91e <_ZN4leds6setRedEb>
    2c06:	80 91 07 40 	lds	r24, 0x4007	; 0x804007 <_ZL15g_code_throttle>
    2c0a:	90 91 08 40 	lds	r25, 0x4008	; 0x804008 <_ZL15g_code_throttle+0x1>
    2c0e:	80 93 c4 47 	sts	0x47C4, r24	; 0x8047c4 <_ZZ11__vector_12E7codeInc>
    2c12:	90 93 c5 47 	sts	0x47C5, r25	; 0x8047c5 <_ZZ11__vector_12E7codeInc+0x1>
    2c16:	24 c0       	rjmp	.+72     	; 0x2c60 <__vector_12+0x26e>
    2c18:	80 91 62 47 	lds	r24, 0x4762	; 0x804762 <_ZL12g_on_the_air>
    2c1c:	90 91 63 47 	lds	r25, 0x4763	; 0x804763 <_ZL12g_on_the_air+0x1>
    2c20:	a0 91 64 47 	lds	r26, 0x4764	; 0x804764 <_ZL12g_on_the_air+0x2>
    2c24:	b0 91 65 47 	lds	r27, 0x4765	; 0x804765 <_ZL12g_on_the_air+0x3>
    2c28:	21 e0       	ldi	r18, 0x01	; 1
    2c2a:	89 2b       	or	r24, r25
    2c2c:	8a 2b       	or	r24, r26
    2c2e:	8b 2b       	or	r24, r27
    2c30:	09 f0       	breq	.+2      	; 0x2c34 <__vector_12+0x242>
    2c32:	20 e0       	ldi	r18, 0x00	; 0
    2c34:	22 23       	and	r18, r18
    2c36:	a1 f0       	breq	.+40     	; 0x2c60 <__vector_12+0x26e>
    2c38:	80 91 c6 47 	lds	r24, 0x47C6	; 0x8047c6 <_ZZ11__vector_12E3key>
    2c3c:	88 23       	and	r24, r24
    2c3e:	81 f0       	breq	.+32     	; 0x2c60 <__vector_12+0x26e>
    2c40:	10 92 c6 47 	sts	0x47C6, r1	; 0x8047c6 <_ZZ11__vector_12E3key>
    2c44:	80 e0       	ldi	r24, 0x00	; 0
    2c46:	0e 94 bc 6f 	call	0xdf78	; 0xdf78 <_Z14keyTransmitterb>
    2c4a:	60 e0       	ldi	r22, 0x00	; 0
    2c4c:	88 eb       	ldi	r24, 0xB8	; 184
    2c4e:	97 e4       	ldi	r25, 0x47	; 71
    2c50:	0e 94 8f 54 	call	0xa91e	; 0xa91e <_ZN4leds6setRedEb>
    2c54:	80 e0       	ldi	r24, 0x00	; 0
    2c56:	0e 94 ab 6f 	call	0xdf56	; 0xdf56 <_Z18powerToTransmitterb>
    2c5a:	8e ef       	ldi	r24, 0xFE	; 254
    2c5c:	80 93 5a 47 	sts	0x475A, r24	; 0x80475a <_ZL18g_last_status_code>
    2c60:	90 91 c7 47 	lds	r25, 0x47C7	; 0x8047c7 <_ZZ11__vector_12E19conversionInProcess>
    2c64:	81 e0       	ldi	r24, 0x01	; 1
    2c66:	89 27       	eor	r24, r25
    2c68:	88 23       	and	r24, r24
    2c6a:	09 f4       	brne	.+2      	; 0x2c6e <__vector_12+0x27c>
    2c6c:	74 c0       	rjmp	.+232    	; 0x2d56 <__vector_12+0x364>
    2c6e:	8f ef       	ldi	r24, 0xFF	; 255
    2c70:	80 93 c8 47 	sts	0x47C8, r24	; 0x8047c8 <_ZZ11__vector_12E24indexConversionInProcess>
    2c74:	1f 82       	std	Y+7, r1	; 0x07
    2c76:	9f 81       	ldd	r25, Y+7	; 0x07
    2c78:	81 e0       	ldi	r24, 0x01	; 1
    2c7a:	93 30       	cpi	r25, 0x03	; 3
    2c7c:	08 f0       	brcs	.+2      	; 0x2c80 <__vector_12+0x28e>
    2c7e:	80 e0       	ldi	r24, 0x00	; 0
    2c80:	88 23       	and	r24, r24
    2c82:	d9 f1       	breq	.+118    	; 0x2cfa <__vector_12+0x308>
    2c84:	8f 81       	ldd	r24, Y+7	; 0x07
    2c86:	88 2f       	mov	r24, r24
    2c88:	90 e0       	ldi	r25, 0x00	; 0
    2c8a:	88 0f       	add	r24, r24
    2c8c:	99 1f       	adc	r25, r25
    2c8e:	86 5e       	subi	r24, 0xE6	; 230
    2c90:	9f 4b       	sbci	r25, 0xBF	; 191
    2c92:	fc 01       	movw	r30, r24
    2c94:	80 81       	ld	r24, Z
    2c96:	91 81       	ldd	r25, Z+1	; 0x01
    2c98:	21 e0       	ldi	r18, 0x01	; 1
    2c9a:	89 2b       	or	r24, r25
    2c9c:	09 f4       	brne	.+2      	; 0x2ca0 <__vector_12+0x2ae>
    2c9e:	20 e0       	ldi	r18, 0x00	; 0
    2ca0:	22 23       	and	r18, r18
    2ca2:	a1 f0       	breq	.+40     	; 0x2ccc <__vector_12+0x2da>
    2ca4:	8f 81       	ldd	r24, Y+7	; 0x07
    2ca6:	88 2f       	mov	r24, r24
    2ca8:	90 e0       	ldi	r25, 0x00	; 0
    2caa:	9c 01       	movw	r18, r24
    2cac:	22 0f       	add	r18, r18
    2cae:	33 1f       	adc	r19, r19
    2cb0:	26 5e       	subi	r18, 0xE6	; 230
    2cb2:	3f 4b       	sbci	r19, 0xBF	; 191
    2cb4:	f9 01       	movw	r30, r18
    2cb6:	20 81       	ld	r18, Z
    2cb8:	31 81       	ldd	r19, Z+1	; 0x01
    2cba:	21 50       	subi	r18, 0x01	; 1
    2cbc:	31 09       	sbc	r19, r1
    2cbe:	88 0f       	add	r24, r24
    2cc0:	99 1f       	adc	r25, r25
    2cc2:	86 5e       	subi	r24, 0xE6	; 230
    2cc4:	9f 4b       	sbci	r25, 0xBF	; 191
    2cc6:	fc 01       	movw	r30, r24
    2cc8:	20 83       	st	Z, r18
    2cca:	31 83       	std	Z+1, r19	; 0x01
    2ccc:	8f 81       	ldd	r24, Y+7	; 0x07
    2cce:	88 2f       	mov	r24, r24
    2cd0:	90 e0       	ldi	r25, 0x00	; 0
    2cd2:	88 0f       	add	r24, r24
    2cd4:	99 1f       	adc	r25, r25
    2cd6:	86 5e       	subi	r24, 0xE6	; 230
    2cd8:	9f 4b       	sbci	r25, 0xBF	; 191
    2cda:	fc 01       	movw	r30, r24
    2cdc:	80 81       	ld	r24, Z
    2cde:	91 81       	ldd	r25, Z+1	; 0x01
    2ce0:	21 e0       	ldi	r18, 0x01	; 1
    2ce2:	89 2b       	or	r24, r25
    2ce4:	09 f0       	breq	.+2      	; 0x2ce8 <__vector_12+0x2f6>
    2ce6:	20 e0       	ldi	r18, 0x00	; 0
    2ce8:	22 23       	and	r18, r18
    2cea:	19 f0       	breq	.+6      	; 0x2cf2 <__vector_12+0x300>
    2cec:	8f 81       	ldd	r24, Y+7	; 0x07
    2cee:	80 93 c8 47 	sts	0x47C8, r24	; 0x8047c8 <_ZZ11__vector_12E24indexConversionInProcess>
    2cf2:	8f 81       	ldd	r24, Y+7	; 0x07
    2cf4:	8f 5f       	subi	r24, 0xFF	; 255
    2cf6:	8f 83       	std	Y+7, r24	; 0x07
    2cf8:	be cf       	rjmp	.-132    	; 0x2c76 <__vector_12+0x284>
    2cfa:	80 91 c8 47 	lds	r24, 0x47C8	; 0x8047c8 <_ZZ11__vector_12E24indexConversionInProcess>
    2cfe:	88 23       	and	r24, r24
    2d00:	0c f4       	brge	.+2      	; 0x2d04 <__vector_12+0x312>
    2d02:	7e c0       	rjmp	.+252    	; 0x2e00 <__vector_12+0x40e>
    2d04:	80 91 c8 47 	lds	r24, 0x47C8	; 0x8047c8 <_ZZ11__vector_12E24indexConversionInProcess>
    2d08:	08 2e       	mov	r0, r24
    2d0a:	00 0c       	add	r0, r0
    2d0c:	99 0b       	sbc	r25, r25
    2d0e:	20 91 c8 47 	lds	r18, 0x47C8	; 0x8047c8 <_ZZ11__vector_12E24indexConversionInProcess>
    2d12:	02 2e       	mov	r0, r18
    2d14:	00 0c       	add	r0, r0
    2d16:	33 0b       	sbc	r19, r19
    2d18:	22 0f       	add	r18, r18
    2d1a:	33 1f       	adc	r19, r19
    2d1c:	27 5a       	subi	r18, 0xA7	; 167
    2d1e:	39 4b       	sbci	r19, 0xB9	; 185
    2d20:	f9 01       	movw	r30, r18
    2d22:	20 81       	ld	r18, Z
    2d24:	31 81       	ldd	r19, Z+1	; 0x01
    2d26:	88 0f       	add	r24, r24
    2d28:	99 1f       	adc	r25, r25
    2d2a:	86 5e       	subi	r24, 0xE6	; 230
    2d2c:	9f 4b       	sbci	r25, 0xBF	; 191
    2d2e:	fc 01       	movw	r30, r24
    2d30:	20 83       	st	Z, r18
    2d32:	31 83       	std	Z+1, r19	; 0x01
    2d34:	80 91 c8 47 	lds	r24, 0x47C8	; 0x8047c8 <_ZZ11__vector_12E24indexConversionInProcess>
    2d38:	08 2e       	mov	r0, r24
    2d3a:	00 0c       	add	r0, r0
    2d3c:	99 0b       	sbc	r25, r25
    2d3e:	89 5e       	subi	r24, 0xE9	; 233
    2d40:	9f 4b       	sbci	r25, 0xBF	; 191
    2d42:	fc 01       	movw	r30, r24
    2d44:	80 81       	ld	r24, Z
    2d46:	0e 94 04 35 	call	0x6a08	; 0x6a08 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t>
    2d4a:	0e 94 67 35 	call	0x6ace	; 0x6ace <_Z20ADC0_startConversionv>
    2d4e:	81 e0       	ldi	r24, 0x01	; 1
    2d50:	80 93 c7 47 	sts	0x47C7, r24	; 0x8047c7 <_ZZ11__vector_12E19conversionInProcess>
    2d54:	55 c0       	rjmp	.+170    	; 0x2e00 <__vector_12+0x40e>
    2d56:	0e 94 7c 35 	call	0x6af8	; 0x6af8 <_Z19ADC0_conversionDonev>
    2d5a:	88 23       	and	r24, r24
    2d5c:	09 f4       	brne	.+2      	; 0x2d60 <__vector_12+0x36e>
    2d5e:	50 c0       	rjmp	.+160    	; 0x2e00 <__vector_12+0x40e>
    2d60:	0e 94 90 35 	call	0x6b20	; 0x6b20 <_Z9ADC0_readv>
    2d64:	89 83       	std	Y+1, r24	; 0x01
    2d66:	9a 83       	std	Y+2, r25	; 0x02
    2d68:	89 81       	ldd	r24, Y+1	; 0x01
    2d6a:	9a 81       	ldd	r25, Y+2	; 0x02
    2d6c:	0b 97       	sbiw	r24, 0x0b	; 11
    2d6e:	c0 f1       	brcs	.+112    	; 0x2de0 <__vector_12+0x3ee>
    2d70:	89 81       	ldd	r24, Y+1	; 0x01
    2d72:	9a 81       	ldd	r25, Y+2	; 0x02
    2d74:	8a 3f       	cpi	r24, 0xFA	; 250
    2d76:	9f 40       	sbci	r25, 0x0F	; 15
    2d78:	98 f5       	brcc	.+102    	; 0x2de0 <__vector_12+0x3ee>
    2d7a:	89 81       	ldd	r24, Y+1	; 0x01
    2d7c:	9a 81       	ldd	r25, Y+2	; 0x02
    2d7e:	80 93 c9 47 	sts	0x47C9, r24	; 0x8047c9 <_ZZ11__vector_12E20holdConversionResult>
    2d82:	90 93 ca 47 	sts	0x47CA, r25	; 0x8047ca <_ZZ11__vector_12E20holdConversionResult+0x1>
    2d86:	80 91 c8 47 	lds	r24, 0x47C8	; 0x8047c8 <_ZZ11__vector_12E24indexConversionInProcess>
    2d8a:	08 2e       	mov	r0, r24
    2d8c:	00 0c       	add	r0, r0
    2d8e:	99 0b       	sbc	r25, r25
    2d90:	88 0f       	add	r24, r24
    2d92:	99 1f       	adc	r25, r25
    2d94:	81 55       	subi	r24, 0x51	; 81
    2d96:	98 4b       	sbci	r25, 0xB8	; 184
    2d98:	fc 01       	movw	r30, r24
    2d9a:	80 81       	ld	r24, Z
    2d9c:	91 81       	ldd	r25, Z+1	; 0x01
    2d9e:	8b 83       	std	Y+3, r24	; 0x03
    2da0:	9c 83       	std	Y+4, r25	; 0x04
    2da2:	80 91 c8 47 	lds	r24, 0x47C8	; 0x8047c8 <_ZZ11__vector_12E24indexConversionInProcess>
    2da6:	08 2e       	mov	r0, r24
    2da8:	00 0c       	add	r0, r0
    2daa:	99 0b       	sbc	r25, r25
    2dac:	84 55       	subi	r24, 0x54	; 84
    2dae:	98 4b       	sbci	r25, 0xB8	; 184
    2db0:	21 e0       	ldi	r18, 0x01	; 1
    2db2:	fc 01       	movw	r30, r24
    2db4:	20 83       	st	Z, r18
    2db6:	80 91 c9 47 	lds	r24, 0x47C9	; 0x8047c9 <_ZZ11__vector_12E20holdConversionResult>
    2dba:	90 91 ca 47 	lds	r25, 0x47CA	; 0x8047ca <_ZZ11__vector_12E20holdConversionResult+0x1>
    2dbe:	8b 83       	std	Y+3, r24	; 0x03
    2dc0:	9c 83       	std	Y+4, r25	; 0x04
    2dc2:	80 91 c8 47 	lds	r24, 0x47C8	; 0x8047c8 <_ZZ11__vector_12E24indexConversionInProcess>
    2dc6:	08 2e       	mov	r0, r24
    2dc8:	00 0c       	add	r0, r0
    2dca:	99 0b       	sbc	r25, r25
    2dcc:	88 0f       	add	r24, r24
    2dce:	99 1f       	adc	r25, r25
    2dd0:	81 55       	subi	r24, 0x51	; 81
    2dd2:	98 4b       	sbci	r25, 0xB8	; 184
    2dd4:	2b 81       	ldd	r18, Y+3	; 0x03
    2dd6:	3c 81       	ldd	r19, Y+4	; 0x04
    2dd8:	fc 01       	movw	r30, r24
    2dda:	20 83       	st	Z, r18
    2ddc:	31 83       	std	Z+1, r19	; 0x01
    2dde:	0e c0       	rjmp	.+28     	; 0x2dfc <__vector_12+0x40a>
    2de0:	80 91 c8 47 	lds	r24, 0x47C8	; 0x8047c8 <_ZZ11__vector_12E24indexConversionInProcess>
    2de4:	08 2e       	mov	r0, r24
    2de6:	00 0c       	add	r0, r0
    2de8:	99 0b       	sbc	r25, r25
    2dea:	88 0f       	add	r24, r24
    2dec:	99 1f       	adc	r25, r25
    2dee:	81 55       	subi	r24, 0x51	; 81
    2df0:	98 4b       	sbci	r25, 0xB8	; 184
    2df2:	fc 01       	movw	r30, r24
    2df4:	80 81       	ld	r24, Z
    2df6:	91 81       	ldd	r25, Z+1	; 0x01
    2df8:	89 83       	std	Y+1, r24	; 0x01
    2dfa:	9a 83       	std	Y+2, r25	; 0x02
    2dfc:	10 92 c7 47 	sts	0x47C7, r1	; 0x8047c7 <_ZZ11__vector_12E19conversionInProcess>
    2e00:	80 e0       	ldi	r24, 0x00	; 0
    2e02:	9b e0       	ldi	r25, 0x0B	; 11
    2e04:	21 e0       	ldi	r18, 0x01	; 1
    2e06:	fc 01       	movw	r30, r24
    2e08:	26 83       	std	Z+6, r18	; 0x06
    2e0a:	00 00       	nop
    2e0c:	27 96       	adiw	r28, 0x07	; 7
    2e0e:	cd bf       	out	0x3d, r28	; 61
    2e10:	de bf       	out	0x3e, r29	; 62
    2e12:	df 91       	pop	r29
    2e14:	cf 91       	pop	r28
    2e16:	ff 91       	pop	r31
    2e18:	ef 91       	pop	r30
    2e1a:	bf 91       	pop	r27
    2e1c:	af 91       	pop	r26
    2e1e:	9f 91       	pop	r25
    2e20:	8f 91       	pop	r24
    2e22:	7f 91       	pop	r23
    2e24:	6f 91       	pop	r22
    2e26:	5f 91       	pop	r21
    2e28:	4f 91       	pop	r20
    2e2a:	3f 91       	pop	r19
    2e2c:	2f 91       	pop	r18
    2e2e:	0f 90       	pop	r0
    2e30:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    2e34:	0f 90       	pop	r0
    2e36:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    2e3a:	0f 90       	pop	r0
    2e3c:	1f 90       	pop	r1
    2e3e:	18 95       	reti

00002e40 <__vector_29>:
    2e40:	1f 92       	push	r1
    2e42:	0f 92       	push	r0
    2e44:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    2e48:	0f 92       	push	r0
    2e4a:	11 24       	eor	r1, r1
    2e4c:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    2e50:	0f 92       	push	r0
    2e52:	2f 93       	push	r18
    2e54:	3f 93       	push	r19
    2e56:	4f 93       	push	r20
    2e58:	5f 93       	push	r21
    2e5a:	6f 93       	push	r22
    2e5c:	7f 93       	push	r23
    2e5e:	8f 93       	push	r24
    2e60:	9f 93       	push	r25
    2e62:	af 93       	push	r26
    2e64:	bf 93       	push	r27
    2e66:	ef 93       	push	r30
    2e68:	ff 93       	push	r31
    2e6a:	cf 93       	push	r28
    2e6c:	df 93       	push	r29
    2e6e:	cd b7       	in	r28, 0x3d	; 61
    2e70:	de b7       	in	r29, 0x3e	; 62
    2e72:	80 e4       	ldi	r24, 0x40	; 64
    2e74:	94 e0       	ldi	r25, 0x04	; 4
    2e76:	fc 01       	movw	r30, r24
    2e78:	81 85       	ldd	r24, Z+9	; 0x09
    2e7a:	88 1f       	adc	r24, r24
    2e7c:	88 27       	eor	r24, r24
    2e7e:	88 1f       	adc	r24, r24
    2e80:	88 23       	and	r24, r24
    2e82:	09 f4       	brne	.+2      	; 0x2e86 <__vector_29+0x46>
    2e84:	5a c0       	rjmp	.+180    	; 0x2f3a <__vector_29+0xfa>
    2e86:	80 91 a7 47 	lds	r24, 0x47A7	; 0x8047a7 <_ZL10g_sleeping>
    2e8a:	88 23       	and	r24, r24
    2e8c:	49 f0       	breq	.+18     	; 0x2ea0 <__vector_29+0x60>
    2e8e:	10 92 a6 47 	sts	0x47A6, r1	; 0x8047a6 <_ZL17g_go_to_sleep_now>
    2e92:	10 92 a7 47 	sts	0x47A7, r1	; 0x8047a7 <_ZL10g_sleeping>
    2e96:	88 eb       	ldi	r24, 0xB8	; 184
    2e98:	97 e4       	ldi	r25, 0x47	; 71
    2e9a:	0e 94 b9 54 	call	0xa972	; 0xa972 <_ZN4leds6resumeEv>
    2e9e:	49 c0       	rjmp	.+146    	; 0x2f32 <__vector_29+0xf2>
    2ea0:	80 91 b5 47 	lds	r24, 0x47B5	; 0x8047b5 <g_switch_closed_count>
    2ea4:	90 91 b6 47 	lds	r25, 0x47B6	; 0x8047b6 <g_switch_closed_count+0x1>
    2ea8:	21 e0       	ldi	r18, 0x01	; 1
    2eaa:	88 3e       	cpi	r24, 0xE8	; 232
    2eac:	93 40       	sbci	r25, 0x03	; 3
    2eae:	08 f4       	brcc	.+2      	; 0x2eb2 <__vector_29+0x72>
    2eb0:	20 e0       	ldi	r18, 0x00	; 0
    2eb2:	22 23       	and	r18, r18
    2eb4:	21 f0       	breq	.+8      	; 0x2ebe <__vector_29+0x7e>
    2eb6:	81 e0       	ldi	r24, 0x01	; 1
    2eb8:	80 93 b7 47 	sts	0x47B7, r24	; 0x8047b7 <g_long_button_press>
    2ebc:	3a c0       	rjmp	.+116    	; 0x2f32 <__vector_29+0xf2>
    2ebe:	80 91 b5 47 	lds	r24, 0x47B5	; 0x8047b5 <g_switch_closed_count>
    2ec2:	90 91 b6 47 	lds	r25, 0x47B6	; 0x8047b6 <g_switch_closed_count+0x1>
    2ec6:	21 e0       	ldi	r18, 0x01	; 1
    2ec8:	0b 97       	sbiw	r24, 0x0b	; 11
    2eca:	08 f4       	brcc	.+2      	; 0x2ece <__vector_29+0x8e>
    2ecc:	20 e0       	ldi	r18, 0x00	; 0
    2ece:	22 23       	and	r18, r18
    2ed0:	81 f1       	breq	.+96     	; 0x2f32 <__vector_29+0xf2>
    2ed2:	88 eb       	ldi	r24, 0xB8	; 184
    2ed4:	97 e4       	ldi	r25, 0x47	; 71
    2ed6:	0e 94 6a 54 	call	0xa8d4	; 0xa8d4 <_ZN4leds6activeEv>
    2eda:	98 2f       	mov	r25, r24
    2edc:	81 e0       	ldi	r24, 0x01	; 1
    2ede:	89 27       	eor	r24, r25
    2ee0:	88 23       	and	r24, r24
    2ee2:	29 f0       	breq	.+10     	; 0x2eee <__vector_29+0xae>
    2ee4:	88 eb       	ldi	r24, 0xB8	; 184
    2ee6:	97 e4       	ldi	r25, 0x47	; 71
    2ee8:	0e 94 b9 54 	call	0xa972	; 0xa972 <_ZN4leds6resumeEv>
    2eec:	22 c0       	rjmp	.+68     	; 0x2f32 <__vector_29+0xf2>
    2eee:	0e 94 d6 4e 	call	0x9dac	; 0x9dac <_Z11wifiEnabledv>
    2ef2:	88 23       	and	r24, r24
    2ef4:	a1 f0       	breq	.+40     	; 0x2f1e <__vector_29+0xde>
    2ef6:	88 e0       	ldi	r24, 0x08	; 8
    2ef8:	ef e5       	ldi	r30, 0x5F	; 95
    2efa:	f0 e4       	ldi	r31, 0x40	; 64
    2efc:	a7 e2       	ldi	r26, 0x27	; 39
    2efe:	b7 e4       	ldi	r27, 0x47	; 71
    2f00:	01 90       	ld	r0, Z+
    2f02:	0d 92       	st	X+, r0
    2f04:	8a 95       	dec	r24
    2f06:	e1 f7       	brne	.-8      	; 0x2f00 <__vector_29+0xc0>
    2f08:	47 e2       	ldi	r20, 0x27	; 39
    2f0a:	57 e4       	ldi	r21, 0x47	; 71
    2f0c:	67 e6       	ldi	r22, 0x67	; 103
    2f0e:	70 e4       	ldi	r23, 0x40	; 64
    2f10:	81 e0       	ldi	r24, 0x01	; 1
    2f12:	0e 94 80 5b 	call	0xb700	; 0xb700 <_Z11lb_send_msg13LBMessageTypePKcPc>
    2f16:	85 e0       	ldi	r24, 0x05	; 5
    2f18:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    2f1c:	0a c0       	rjmp	.+20     	; 0x2f32 <__vector_29+0xf2>
    2f1e:	88 eb       	ldi	r24, 0xB8	; 184
    2f20:	97 e4       	ldi	r25, 0x47	; 71
    2f22:	0e 94 b9 54 	call	0xa972	; 0xa972 <_ZN4leds6resumeEv>
    2f26:	82 e0       	ldi	r24, 0x02	; 2
    2f28:	80 93 69 47 	sts	0x4769, r24	; 0x804769 <_ZL19g_wifi_enable_delay>
    2f2c:	88 e7       	ldi	r24, 0x78	; 120
    2f2e:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    2f32:	10 92 b5 47 	sts	0x47B5, r1	; 0x8047b5 <g_switch_closed_count>
    2f36:	10 92 b6 47 	sts	0x47B6, r1	; 0x8047b6 <g_switch_closed_count+0x1>
    2f3a:	80 e4       	ldi	r24, 0x40	; 64
    2f3c:	94 e0       	ldi	r25, 0x04	; 4
    2f3e:	2f ef       	ldi	r18, 0xFF	; 255
    2f40:	fc 01       	movw	r30, r24
    2f42:	21 87       	std	Z+9, r18	; 0x09
    2f44:	00 00       	nop
    2f46:	df 91       	pop	r29
    2f48:	cf 91       	pop	r28
    2f4a:	ff 91       	pop	r31
    2f4c:	ef 91       	pop	r30
    2f4e:	bf 91       	pop	r27
    2f50:	af 91       	pop	r26
    2f52:	9f 91       	pop	r25
    2f54:	8f 91       	pop	r24
    2f56:	7f 91       	pop	r23
    2f58:	6f 91       	pop	r22
    2f5a:	5f 91       	pop	r21
    2f5c:	4f 91       	pop	r20
    2f5e:	3f 91       	pop	r19
    2f60:	2f 91       	pop	r18
    2f62:	0f 90       	pop	r0
    2f64:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    2f68:	0f 90       	pop	r0
    2f6a:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    2f6e:	0f 90       	pop	r0
    2f70:	1f 90       	pop	r1
    2f72:	18 95       	reti

00002f74 <_Z12powerDown3V3v>:
    2f74:	cf 93       	push	r28
    2f76:	df 93       	push	r29
    2f78:	cd b7       	in	r28, 0x3d	; 61
    2f7a:	de b7       	in	r29, 0x3e	; 62
    2f7c:	60 e0       	ldi	r22, 0x00	; 0
    2f7e:	87 e0       	ldi	r24, 0x07	; 7
    2f80:	0e 94 c5 0f 	call	0x1f8a	; 0x1f8a <PORTA_set_pin_level>
    2f84:	60 e0       	ldi	r22, 0x00	; 0
    2f86:	84 e0       	ldi	r24, 0x04	; 4
    2f88:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <PORTB_set_pin_level>
    2f8c:	10 92 5b 47 	sts	0x475B, r1	; 0x80475b <_ZL33g_powerUp_initialization_complete>
    2f90:	00 00       	nop
    2f92:	df 91       	pop	r29
    2f94:	cf 91       	pop	r28
    2f96:	08 95       	ret

00002f98 <_Z10powerUp3V3v>:
    2f98:	cf 93       	push	r28
    2f9a:	df 93       	push	r29
    2f9c:	cd b7       	in	r28, 0x3d	; 61
    2f9e:	de b7       	in	r29, 0x3e	; 62
    2fa0:	60 e0       	ldi	r22, 0x00	; 0
    2fa2:	83 e0       	ldi	r24, 0x03	; 3
    2fa4:	0e 94 c5 0f 	call	0x1f8a	; 0x1f8a <PORTA_set_pin_level>
    2fa8:	61 e0       	ldi	r22, 0x01	; 1
    2faa:	84 e0       	ldi	r24, 0x04	; 4
    2fac:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <PORTB_set_pin_level>
    2fb0:	61 e0       	ldi	r22, 0x01	; 1
    2fb2:	87 e0       	ldi	r24, 0x07	; 7
    2fb4:	0e 94 c5 0f 	call	0x1f8a	; 0x1f8a <PORTA_set_pin_level>
    2fb8:	81 e0       	ldi	r24, 0x01	; 1
    2fba:	80 93 5c 47 	sts	0x475C, r24	; 0x80475c <_ZL18g_perform_3V3_init>
    2fbe:	00 00       	nop
    2fc0:	df 91       	pop	r29
    2fc2:	cf 91       	pop	r28
    2fc4:	08 95       	ret

00002fc6 <main>:
    2fc6:	cf 93       	push	r28
    2fc8:	df 93       	push	r29
    2fca:	cd b7       	in	r28, 0x3d	; 61
    2fcc:	de b7       	in	r29, 0x3e	; 62
    2fce:	26 97       	sbiw	r28, 0x06	; 6
    2fd0:	cd bf       	out	0x3d, r28	; 61
    2fd2:	de bf       	out	0x3e, r29	; 62
    2fd4:	0e 94 89 08 	call	0x1112	; 0x1112 <atmel_start_init>
    2fd8:	60 e0       	ldi	r22, 0x00	; 0
    2fda:	88 eb       	ldi	r24, 0xB8	; 184
    2fdc:	97 e4       	ldi	r25, 0x47	; 71
    2fde:	0e 94 eb 54 	call	0xa9d6	; 0xa9d6 <_ZN4leds5blinkE7Blink_t>
    2fe2:	61 e0       	ldi	r22, 0x01	; 1
    2fe4:	84 e0       	ldi	r24, 0x04	; 4
    2fe6:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <PORTB_set_pin_level>
    2fea:	0e 94 cc 17 	call	0x2f98	; 0x2f98 <_Z10powerUp3V3v>
    2fee:	89 eb       	ldi	r24, 0xB9	; 185
    2ff0:	97 e4       	ldi	r25, 0x47	; 71
    2ff2:	0e 94 25 4c 	call	0x984a	; 0x984a <_ZN13EepromManager20initializeEEPROMVarsEv>
    2ff6:	89 eb       	ldi	r24, 0xB9	; 185
    2ff8:	97 e4       	ldi	r25, 0x47	; 71
    2ffa:	0e 94 d9 49 	call	0x93b2	; 0x93b2 <_ZN13EepromManager11readNonVolsEv>
    2ffe:	0e 94 62 2c 	call	0x58c4	; 0x58c4 <_Z8rtc_initv>
    3002:	98 2f       	mov	r25, r24
    3004:	81 e0       	ldi	r24, 0x01	; 1
    3006:	9c 3f       	cpi	r25, 0xFC	; 252
    3008:	09 f0       	breq	.+2      	; 0x300c <main+0x46>
    300a:	80 e0       	ldi	r24, 0x00	; 0
    300c:	88 23       	and	r24, r24
    300e:	31 f0       	breq	.+12     	; 0x301c <main+0x56>
    3010:	69 e0       	ldi	r22, 0x09	; 9
    3012:	88 eb       	ldi	r24, 0xB8	; 184
    3014:	97 e4       	ldi	r25, 0x47	; 71
    3016:	0e 94 eb 54 	call	0xa9d6	; 0xa9d6 <_ZN4leds5blinkE7Blink_t>
    301a:	15 c0       	rjmp	.+42     	; 0x3046 <main+0x80>
    301c:	ce 01       	movw	r24, r28
    301e:	05 96       	adiw	r24, 0x05	; 5
    3020:	0e 94 c2 40 	call	0x8184	; 0x8184 <ds3231_get_epoch>
    3024:	dc 01       	movw	r26, r24
    3026:	cb 01       	movw	r24, r22
    3028:	89 83       	std	Y+1, r24	; 0x01
    302a:	9a 83       	std	Y+2, r25	; 0x02
    302c:	ab 83       	std	Y+3, r26	; 0x03
    302e:	bc 83       	std	Y+4, r27	; 0x04
    3030:	8d 81       	ldd	r24, Y+5	; 0x05
    3032:	88 23       	and	r24, r24
    3034:	41 f4       	brne	.+16     	; 0x3046 <main+0x80>
    3036:	89 81       	ldd	r24, Y+1	; 0x01
    3038:	9a 81       	ldd	r25, Y+2	; 0x02
    303a:	ab 81       	ldd	r26, Y+3	; 0x03
    303c:	bc 81       	ldd	r27, Y+4	; 0x04
    303e:	bc 01       	movw	r22, r24
    3040:	cd 01       	movw	r24, r26
    3042:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <set_system_time>
    3046:	81 e0       	ldi	r24, 0x01	; 1
    3048:	0e 94 b1 4e 	call	0x9d62	; 0x9d62 <_Z10wifi_resetb>
    304c:	81 e0       	ldi	r24, 0x01	; 1
    304e:	0e 94 9a 4e 	call	0x9d34	; 0x9d34 <_Z10wifi_powerb>
    3052:	6a ef       	ldi	r22, 0xFA	; 250
    3054:	70 e0       	ldi	r23, 0x00	; 0
    3056:	80 e0       	ldi	r24, 0x00	; 0
    3058:	90 e0       	ldi	r25, 0x00	; 0
    305a:	0e 94 2f 6e 	call	0xdc5e	; 0xdc5e <util_delay_ms>
    305e:	88 23       	and	r24, r24
    3060:	09 f0       	breq	.+2      	; 0x3064 <main+0x9e>
    3062:	f7 cf       	rjmp	.-18     	; 0x3052 <main+0x8c>
    3064:	0e 94 c8 4e 	call	0x9d90	; 0x9d90 <_Z11wifiPresentv>
    3068:	88 23       	and	r24, r24
    306a:	39 f0       	breq	.+14     	; 0x307a <main+0xb4>
    306c:	80 e0       	ldi	r24, 0x00	; 0
    306e:	0e 94 9a 4e 	call	0x9d34	; 0x9d34 <_Z10wifi_powerb>
    3072:	83 e0       	ldi	r24, 0x03	; 3
    3074:	80 93 69 47 	sts	0x4769, r24	; 0x804769 <_ZL19g_wifi_enable_delay>
    3078:	0f c0       	rjmp	.+30     	; 0x3098 <main+0xd2>
    307a:	80 e0       	ldi	r24, 0x00	; 0
    307c:	0e 94 9a 4e 	call	0x9d34	; 0x9d34 <_Z10wifi_powerb>
    3080:	81 e0       	ldi	r24, 0x01	; 1
    3082:	0e 94 b1 4e 	call	0x9d62	; 0x9d62 <_Z10wifi_resetb>
    3086:	10 92 69 47 	sts	0x4769, r1	; 0x804769 <_ZL19g_wifi_enable_delay>
    308a:	10 92 09 40 	sts	0x4009, r1	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    308e:	6a e0       	ldi	r22, 0x0A	; 10
    3090:	88 eb       	ldi	r24, 0xB8	; 184
    3092:	97 e4       	ldi	r25, 0x47	; 71
    3094:	0e 94 eb 54 	call	0xa9d6	; 0xa9d6 <_ZN4leds5blinkE7Blink_t>
    3098:	0e 94 24 21 	call	0x4248	; 0x4248 <_Z17handleLinkBusMsgsv>
    309c:	0e 94 bd 19 	call	0x337a	; 0x337a <_Z19handleSerialBusMsgsv>
    30a0:	80 91 5c 47 	lds	r24, 0x475C	; 0x80475c <_ZL18g_perform_3V3_init>
    30a4:	88 23       	and	r24, r24
    30a6:	11 f0       	breq	.+4      	; 0x30ac <main+0xe6>
    30a8:	10 92 5c 47 	sts	0x475C, r1	; 0x80475c <_ZL18g_perform_3V3_init>
    30ac:	80 91 5b 47 	lds	r24, 0x475B	; 0x80475b <_ZL33g_powerUp_initialization_complete>
    30b0:	88 23       	and	r24, r24
    30b2:	31 f0       	breq	.+12     	; 0x30c0 <main+0xfa>
    30b4:	10 92 5b 47 	sts	0x475B, r1	; 0x80475b <_ZL33g_powerUp_initialization_complete>
    30b8:	0e 94 d1 28 	call	0x51a2	; 0x51a2 <_Z12eventEnabledv>
    30bc:	80 93 60 47 	sts	0x4760, r24	; 0x804760 <_ZL13g_start_event>
    30c0:	80 91 b5 47 	lds	r24, 0x47B5	; 0x8047b5 <g_switch_closed_count>
    30c4:	90 91 b6 47 	lds	r25, 0x47B6	; 0x8047b6 <g_switch_closed_count+0x1>
    30c8:	21 e0       	ldi	r18, 0x01	; 1
    30ca:	88 3e       	cpi	r24, 0xE8	; 232
    30cc:	93 40       	sbci	r25, 0x03	; 3
    30ce:	08 f4       	brcc	.+2      	; 0x30d2 <main+0x10c>
    30d0:	20 e0       	ldi	r18, 0x00	; 0
    30d2:	22 23       	and	r18, r18
    30d4:	51 f0       	breq	.+20     	; 0x30ea <main+0x124>
    30d6:	68 e0       	ldi	r22, 0x08	; 8
    30d8:	88 eb       	ldi	r24, 0xB8	; 184
    30da:	97 e4       	ldi	r25, 0x47	; 71
    30dc:	0e 94 eb 54 	call	0xa9d6	; 0xa9d6 <_ZN4leds5blinkE7Blink_t>
    30e0:	67 e0       	ldi	r22, 0x07	; 7
    30e2:	88 eb       	ldi	r24, 0xB8	; 184
    30e4:	97 e4       	ldi	r25, 0x47	; 71
    30e6:	0e 94 eb 54 	call	0xa9d6	; 0xa9d6 <_ZN4leds5blinkE7Blink_t>
    30ea:	80 91 b7 47 	lds	r24, 0x47B7	; 0x8047b7 <g_long_button_press>
    30ee:	88 23       	and	r24, r24
    30f0:	81 f0       	breq	.+32     	; 0x3112 <main+0x14c>
    30f2:	80 91 a2 47 	lds	r24, 0x47A2	; 0x8047a2 <g_event_enabled>
    30f6:	88 23       	and	r24, r24
    30f8:	39 f0       	breq	.+14     	; 0x3108 <main+0x142>
    30fa:	81 e0       	ldi	r24, 0x01	; 1
    30fc:	80 93 61 47 	sts	0x4761, r24	; 0x804761 <_ZL11g_end_event>
    3100:	81 e0       	ldi	r24, 0x01	; 1
    3102:	80 93 5a 47 	sts	0x475A, r24	; 0x80475a <_ZL18g_last_status_code>
    3106:	03 c0       	rjmp	.+6      	; 0x310e <main+0x148>
    3108:	81 e0       	ldi	r24, 0x01	; 1
    310a:	80 93 60 47 	sts	0x4760, r24	; 0x804760 <_ZL13g_start_event>
    310e:	10 92 b7 47 	sts	0x47B7, r1	; 0x8047b7 <g_long_button_press>
    3112:	80 91 60 47 	lds	r24, 0x4760	; 0x804760 <_ZL13g_start_event>
    3116:	88 23       	and	r24, r24
    3118:	29 f1       	breq	.+74     	; 0x3164 <main+0x19e>
    311a:	10 92 60 47 	sts	0x4760, r1	; 0x804760 <_ZL13g_start_event>
    311e:	1e 82       	std	Y+6, r1	; 0x06
    3120:	ce 01       	movw	r24, r28
    3122:	06 96       	adiw	r24, 0x06	; 6
    3124:	0e 94 04 2a 	call	0x5408	; 0x5408 <_Z11launchEventP2SC>
    3128:	80 93 59 47 	sts	0x4759, r24	; 0x804759 <_ZL17g_last_error_code>
    312c:	80 91 a6 47 	lds	r24, 0x47A6	; 0x8047a6 <_ZL17g_go_to_sleep_now>
    3130:	88 23       	and	r24, r24
    3132:	31 f0       	breq	.+12     	; 0x3140 <main+0x17a>
    3134:	80 91 6b 47 	lds	r24, 0x476B	; 0x80476b <_ZL11g_sleepType>
    3138:	88 23       	and	r24, r24
    313a:	11 f0       	breq	.+4      	; 0x3140 <main+0x17a>
    313c:	81 e0       	ldi	r24, 0x01	; 1
    313e:	01 c0       	rjmp	.+2      	; 0x3142 <main+0x17c>
    3140:	80 e0       	ldi	r24, 0x00	; 0
    3142:	88 23       	and	r24, r24
    3144:	29 f0       	breq	.+10     	; 0x3150 <main+0x18a>
    3146:	83 e0       	ldi	r24, 0x03	; 3
    3148:	80 93 6b 47 	sts	0x476B, r24	; 0x80476b <_ZL11g_sleepType>
    314c:	10 92 a6 47 	sts	0x47A6, r1	; 0x8047a6 <_ZL17g_go_to_sleep_now>
    3150:	65 e0       	ldi	r22, 0x05	; 5
    3152:	88 eb       	ldi	r24, 0xB8	; 184
    3154:	97 e4       	ldi	r25, 0x47	; 71
    3156:	0e 94 eb 54 	call	0xa9d6	; 0xa9d6 <_ZN4leds5blinkE7Blink_t>
    315a:	61 e0       	ldi	r22, 0x01	; 1
    315c:	88 eb       	ldi	r24, 0xB8	; 184
    315e:	97 e4       	ldi	r25, 0x47	; 71
    3160:	0e 94 eb 54 	call	0xa9d6	; 0xa9d6 <_ZN4leds5blinkE7Blink_t>
    3164:	80 91 61 47 	lds	r24, 0x4761	; 0x804761 <_ZL11g_end_event>
    3168:	88 23       	and	r24, r24
    316a:	71 f0       	breq	.+28     	; 0x3188 <main+0x1c2>
    316c:	10 92 61 47 	sts	0x4761, r1	; 0x804761 <_ZL11g_end_event>
    3170:	0e 94 8b 2c 	call	0x5916	; 0x5916 <_Z12suspendEventv>
    3174:	68 e0       	ldi	r22, 0x08	; 8
    3176:	88 eb       	ldi	r24, 0xB8	; 184
    3178:	97 e4       	ldi	r25, 0x47	; 71
    317a:	0e 94 eb 54 	call	0xa9d6	; 0xa9d6 <_ZN4leds5blinkE7Blink_t>
    317e:	61 e0       	ldi	r22, 0x01	; 1
    3180:	88 eb       	ldi	r24, 0xB8	; 184
    3182:	97 e4       	ldi	r25, 0x47	; 71
    3184:	0e 94 eb 54 	call	0xa9d6	; 0xa9d6 <_ZN4leds5blinkE7Blink_t>
    3188:	80 91 68 47 	lds	r24, 0x4768	; 0x804768 <_ZL16g_report_seconds>
    318c:	88 23       	and	r24, r24
    318e:	59 f1       	breq	.+86     	; 0x31e6 <main+0x220>
    3190:	10 92 68 47 	sts	0x4768, r1	; 0x804768 <_ZL16g_report_seconds>
    3194:	80 e0       	ldi	r24, 0x00	; 0
    3196:	90 e0       	ldi	r25, 0x00	; 0
    3198:	0e 94 56 06 	call	0xcac	; 0xcac <time>
    319c:	dc 01       	movw	r26, r24
    319e:	cb 01       	movw	r24, r22
    31a0:	2b 2f       	mov	r18, r27
    31a2:	2f 93       	push	r18
    31a4:	2a 2f       	mov	r18, r26
    31a6:	2f 93       	push	r18
    31a8:	29 2f       	mov	r18, r25
    31aa:	2f 93       	push	r18
    31ac:	8f 93       	push	r24
    31ae:	8b e6       	ldi	r24, 0x6B	; 107
    31b0:	90 e4       	ldi	r25, 0x40	; 64
    31b2:	89 2f       	mov	r24, r25
    31b4:	8f 93       	push	r24
    31b6:	8b e6       	ldi	r24, 0x6B	; 107
    31b8:	90 e4       	ldi	r25, 0x40	; 64
    31ba:	8f 93       	push	r24
    31bc:	87 e2       	ldi	r24, 0x27	; 39
    31be:	97 e4       	ldi	r25, 0x47	; 71
    31c0:	89 2f       	mov	r24, r25
    31c2:	8f 93       	push	r24
    31c4:	87 e2       	ldi	r24, 0x27	; 39
    31c6:	97 e4       	ldi	r25, 0x47	; 71
    31c8:	8f 93       	push	r24
    31ca:	0e 94 48 7c 	call	0xf890	; 0xf890 <sprintf>
    31ce:	8d b7       	in	r24, 0x3d	; 61
    31d0:	9e b7       	in	r25, 0x3e	; 62
    31d2:	08 96       	adiw	r24, 0x08	; 8
    31d4:	cd bf       	out	0x3d, r28	; 61
    31d6:	de bf       	out	0x3e, r29	; 62
    31d8:	47 e2       	ldi	r20, 0x27	; 39
    31da:	57 e4       	ldi	r21, 0x47	; 71
    31dc:	6f e6       	ldi	r22, 0x6F	; 111
    31de:	70 e4       	ldi	r23, 0x40	; 64
    31e0:	83 e0       	ldi	r24, 0x03	; 3
    31e2:	0e 94 80 5b 	call	0xb700	; 0xb700 <_Z11lb_send_msg13LBMessageTypePKcPc>
    31e6:	90 91 59 47 	lds	r25, 0x4759	; 0x804759 <_ZL17g_last_error_code>
    31ea:	81 e0       	ldi	r24, 0x01	; 1
    31ec:	99 23       	and	r25, r25
    31ee:	09 f4       	brne	.+2      	; 0x31f2 <main+0x22c>
    31f0:	80 e0       	ldi	r24, 0x00	; 0
    31f2:	88 23       	and	r24, r24
    31f4:	31 f1       	breq	.+76     	; 0x3242 <main+0x27c>
    31f6:	80 91 59 47 	lds	r24, 0x4759	; 0x804759 <_ZL17g_last_error_code>
    31fa:	88 2f       	mov	r24, r24
    31fc:	90 e0       	ldi	r25, 0x00	; 0
    31fe:	29 2f       	mov	r18, r25
    3200:	2f 93       	push	r18
    3202:	8f 93       	push	r24
    3204:	83 e7       	ldi	r24, 0x73	; 115
    3206:	90 e4       	ldi	r25, 0x40	; 64
    3208:	89 2f       	mov	r24, r25
    320a:	8f 93       	push	r24
    320c:	83 e7       	ldi	r24, 0x73	; 115
    320e:	90 e4       	ldi	r25, 0x40	; 64
    3210:	8f 93       	push	r24
    3212:	87 e2       	ldi	r24, 0x27	; 39
    3214:	97 e4       	ldi	r25, 0x47	; 71
    3216:	89 2f       	mov	r24, r25
    3218:	8f 93       	push	r24
    321a:	87 e2       	ldi	r24, 0x27	; 39
    321c:	97 e4       	ldi	r25, 0x47	; 71
    321e:	8f 93       	push	r24
    3220:	0e 94 48 7c 	call	0xf890	; 0xf890 <sprintf>
    3224:	0f 90       	pop	r0
    3226:	0f 90       	pop	r0
    3228:	0f 90       	pop	r0
    322a:	0f 90       	pop	r0
    322c:	0f 90       	pop	r0
    322e:	0f 90       	pop	r0
    3230:	47 e2       	ldi	r20, 0x27	; 39
    3232:	57 e4       	ldi	r21, 0x47	; 71
    3234:	66 e7       	ldi	r22, 0x76	; 118
    3236:	70 e4       	ldi	r23, 0x40	; 64
    3238:	83 e0       	ldi	r24, 0x03	; 3
    323a:	0e 94 80 5b 	call	0xb700	; 0xb700 <_Z11lb_send_msg13LBMessageTypePKcPc>
    323e:	10 92 59 47 	sts	0x4759, r1	; 0x804759 <_ZL17g_last_error_code>
    3242:	90 91 5a 47 	lds	r25, 0x475A	; 0x80475a <_ZL18g_last_status_code>
    3246:	81 e0       	ldi	r24, 0x01	; 1
    3248:	99 23       	and	r25, r25
    324a:	09 f4       	brne	.+2      	; 0x324e <main+0x288>
    324c:	80 e0       	ldi	r24, 0x00	; 0
    324e:	88 23       	and	r24, r24
    3250:	31 f1       	breq	.+76     	; 0x329e <main+0x2d8>
    3252:	80 91 5a 47 	lds	r24, 0x475A	; 0x80475a <_ZL18g_last_status_code>
    3256:	88 2f       	mov	r24, r24
    3258:	90 e0       	ldi	r25, 0x00	; 0
    325a:	29 2f       	mov	r18, r25
    325c:	2f 93       	push	r18
    325e:	8f 93       	push	r24
    3260:	83 e7       	ldi	r24, 0x73	; 115
    3262:	90 e4       	ldi	r25, 0x40	; 64
    3264:	89 2f       	mov	r24, r25
    3266:	8f 93       	push	r24
    3268:	83 e7       	ldi	r24, 0x73	; 115
    326a:	90 e4       	ldi	r25, 0x40	; 64
    326c:	8f 93       	push	r24
    326e:	87 e2       	ldi	r24, 0x27	; 39
    3270:	97 e4       	ldi	r25, 0x47	; 71
    3272:	89 2f       	mov	r24, r25
    3274:	8f 93       	push	r24
    3276:	87 e2       	ldi	r24, 0x27	; 39
    3278:	97 e4       	ldi	r25, 0x47	; 71
    327a:	8f 93       	push	r24
    327c:	0e 94 48 7c 	call	0xf890	; 0xf890 <sprintf>
    3280:	0f 90       	pop	r0
    3282:	0f 90       	pop	r0
    3284:	0f 90       	pop	r0
    3286:	0f 90       	pop	r0
    3288:	0f 90       	pop	r0
    328a:	0f 90       	pop	r0
    328c:	47 e2       	ldi	r20, 0x27	; 39
    328e:	57 e4       	ldi	r21, 0x47	; 71
    3290:	69 e7       	ldi	r22, 0x79	; 121
    3292:	70 e4       	ldi	r23, 0x40	; 64
    3294:	83 e0       	ldi	r24, 0x03	; 3
    3296:	0e 94 80 5b 	call	0xb700	; 0xb700 <_Z11lb_send_msg13LBMessageTypePKcPc>
    329a:	10 92 5a 47 	sts	0x475A, r1	; 0x80475a <_ZL18g_last_status_code>
    329e:	80 91 06 40 	lds	r24, 0x4006	; 0x804006 <_ZL28g_antenna_connection_changed>
    32a2:	88 23       	and	r24, r24
    32a4:	11 f0       	breq	.+4      	; 0x32aa <main+0x2e4>
    32a6:	10 92 06 40 	sts	0x4006, r1	; 0x804006 <_ZL28g_antenna_connection_changed>
    32aa:	80 91 a6 47 	lds	r24, 0x47A6	; 0x8047a6 <_ZL17g_go_to_sleep_now>
    32ae:	88 23       	and	r24, r24
    32b0:	09 f4       	brne	.+2      	; 0x32b4 <main+0x2ee>
    32b2:	f2 ce       	rjmp	.-540    	; 0x3098 <main+0xd2>
    32b4:	60 e0       	ldi	r22, 0x00	; 0
    32b6:	88 eb       	ldi	r24, 0xB8	; 184
    32b8:	97 e4       	ldi	r25, 0x47	; 71
    32ba:	0e 94 eb 54 	call	0xa9d6	; 0xa9d6 <_ZN4leds5blinkE7Blink_t>
    32be:	0e 94 bc 5a 	call	0xb578	; 0xb578 <_Z15linkbus_disablev>
    32c2:	0e 94 8d 70 	call	0xe11a	; 0xe11a <_Z20shutdown_transmitterv>
    32c6:	81 e0       	ldi	r24, 0x01	; 1
    32c8:	0e 94 b1 4e 	call	0x9d62	; 0x9d62 <_Z10wifi_resetb>
    32cc:	80 e0       	ldi	r24, 0x00	; 0
    32ce:	0e 94 9a 4e 	call	0x9d34	; 0x9d34 <_Z10wifi_powerb>
    32d2:	0e 94 ba 17 	call	0x2f74	; 0x2f74 <_Z12powerDown3V3v>
    32d6:	82 e0       	ldi	r24, 0x02	; 2
    32d8:	0e 94 cd 6d 	call	0xdb9a	; 0xdb9a <SLPCTRL_set_sleep_mode>
    32dc:	81 e0       	ldi	r24, 0x01	; 1
    32de:	80 93 a7 47 	sts	0x47A7, r24	; 0x8047a7 <_ZL10g_sleeping>
    32e2:	80 91 13 40 	lds	r24, 0x4013	; 0x804013 <_ZL18g_seconds_to_sleep>
    32e6:	90 91 14 40 	lds	r25, 0x4014	; 0x804014 <_ZL18g_seconds_to_sleep+0x1>
    32ea:	a0 91 15 40 	lds	r26, 0x4015	; 0x804015 <_ZL18g_seconds_to_sleep+0x2>
    32ee:	b0 91 16 40 	lds	r27, 0x4016	; 0x804016 <_ZL18g_seconds_to_sleep+0x3>
    32f2:	80 93 a8 47 	sts	0x47A8, r24	; 0x8047a8 <_ZL23g_seconds_left_to_sleep>
    32f6:	90 93 a9 47 	sts	0x47A9, r25	; 0x8047a9 <_ZL23g_seconds_left_to_sleep+0x1>
    32fa:	a0 93 aa 47 	sts	0x47AA, r26	; 0x8047aa <_ZL23g_seconds_left_to_sleep+0x2>
    32fe:	b0 93 ab 47 	sts	0x47AB, r27	; 0x8047ab <_ZL23g_seconds_left_to_sleep+0x3>
    3302:	80 91 a6 47 	lds	r24, 0x47A6	; 0x8047a6 <_ZL17g_go_to_sleep_now>
    3306:	88 23       	and	r24, r24
    3308:	b1 f0       	breq	.+44     	; 0x3336 <main+0x370>
    330a:	f8 94       	cli
    330c:	80 e5       	ldi	r24, 0x50	; 80
    330e:	90 e0       	ldi	r25, 0x00	; 0
    3310:	20 e5       	ldi	r18, 0x50	; 80
    3312:	30 e0       	ldi	r19, 0x00	; 0
    3314:	f9 01       	movw	r30, r18
    3316:	20 81       	ld	r18, Z
    3318:	21 60       	ori	r18, 0x01	; 1
    331a:	fc 01       	movw	r30, r24
    331c:	20 83       	st	Z, r18
    331e:	78 94       	sei
    3320:	88 95       	sleep
    3322:	80 e5       	ldi	r24, 0x50	; 80
    3324:	90 e0       	ldi	r25, 0x00	; 0
    3326:	20 e5       	ldi	r18, 0x50	; 80
    3328:	30 e0       	ldi	r19, 0x00	; 0
    332a:	f9 01       	movw	r30, r18
    332c:	20 81       	ld	r18, Z
    332e:	2e 7f       	andi	r18, 0xFE	; 254
    3330:	fc 01       	movw	r30, r24
    3332:	20 83       	st	Z, r18
    3334:	e6 cf       	rjmp	.-52     	; 0x3302 <main+0x33c>
    3336:	10 92 a7 47 	sts	0x47A7, r1	; 0x8047a7 <_ZL10g_sleeping>
    333a:	0e 94 89 08 	call	0x1112	; 0x1112 <atmel_start_init>
    333e:	0e 94 cc 17 	call	0x2f98	; 0x2f98 <_Z10powerUp3V3v>
    3342:	81 e0       	ldi	r24, 0x01	; 1
    3344:	80 93 5c 47 	sts	0x475C, r24	; 0x80475c <_ZL18g_perform_3V3_init>
    3348:	0e 94 f1 5a 	call	0xb5e2	; 0xb5e2 <_Z14linkbus_enablev>
    334c:	90 91 6b 47 	lds	r25, 0x476B	; 0x80476b <_ZL11g_sleepType>
    3350:	81 e0       	ldi	r24, 0x01	; 1
    3352:	94 30       	cpi	r25, 0x04	; 4
    3354:	09 f0       	breq	.+2      	; 0x3358 <main+0x392>
    3356:	80 e0       	ldi	r24, 0x00	; 0
    3358:	88 23       	and	r24, r24
    335a:	39 f0       	breq	.+14     	; 0x336a <main+0x3a4>
    335c:	83 e0       	ldi	r24, 0x03	; 3
    335e:	80 93 69 47 	sts	0x4769, r24	; 0x804769 <_ZL19g_wifi_enable_delay>
    3362:	88 e7       	ldi	r24, 0x78	; 120
    3364:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    3368:	04 c0       	rjmp	.+8      	; 0x3372 <main+0x3ac>
    336a:	10 92 69 47 	sts	0x4769, r1	; 0x804769 <_ZL19g_wifi_enable_delay>
    336e:	10 92 09 40 	sts	0x4009, r1	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    3372:	8d ee       	ldi	r24, 0xED	; 237
    3374:	80 93 5a 47 	sts	0x475A, r24	; 0x80475a <_ZL18g_last_status_code>
    3378:	8f ce       	rjmp	.-738    	; 0x3098 <main+0xd2>

0000337a <_Z19handleSerialBusMsgsv>:
    337a:	ef 92       	push	r14
    337c:	ff 92       	push	r15
    337e:	0f 93       	push	r16
    3380:	1f 93       	push	r17
    3382:	cf 93       	push	r28
    3384:	df 93       	push	r29
    3386:	cd b7       	in	r28, 0x3d	; 61
    3388:	de b7       	in	r29, 0x3e	; 62
    338a:	ce 59       	subi	r28, 0x9E	; 158
    338c:	d1 09       	sbc	r29, r1
    338e:	cd bf       	out	0x3d, r28	; 61
    3390:	de bf       	out	0x3e, r29	; 62
    3392:	0e 94 44 62 	call	0xc488	; 0xc488 <nextFullSBRxBuffer>
    3396:	8e 83       	std	Y+6, r24	; 0x06
    3398:	9f 83       	std	Y+7, r25	; 0x07
    339a:	21 e0       	ldi	r18, 0x01	; 1
    339c:	8e 81       	ldd	r24, Y+6	; 0x06
    339e:	9f 81       	ldd	r25, Y+7	; 0x07
    33a0:	89 2b       	or	r24, r25
    33a2:	09 f4       	brne	.+2      	; 0x33a6 <_Z19handleSerialBusMsgsv+0x2c>
    33a4:	20 e0       	ldi	r18, 0x00	; 0
    33a6:	22 23       	and	r18, r18
    33a8:	09 f4       	brne	.+2      	; 0x33ac <_Z19handleSerialBusMsgsv+0x32>
    33aa:	42 c7       	rjmp	.+3716   	; 0x4230 <__DATA_REGION_LENGTH__+0x230>
    33ac:	8e 81       	ldd	r24, Y+6	; 0x06
    33ae:	9f 81       	ldd	r25, Y+7	; 0x07
    33b0:	fc 01       	movw	r30, r24
    33b2:	81 81       	ldd	r24, Z+1	; 0x01
    33b4:	92 81       	ldd	r25, Z+2	; 0x02
    33b6:	88 87       	std	Y+8, r24	; 0x08
    33b8:	99 87       	std	Y+9, r25	; 0x09
    33ba:	88 85       	ldd	r24, Y+8	; 0x08
    33bc:	99 85       	ldd	r25, Y+9	; 0x09
    33be:	8a 3e       	cpi	r24, 0xEA	; 234
    33c0:	f2 e2       	ldi	r31, 0x22	; 34
    33c2:	9f 07       	cpc	r25, r31
    33c4:	09 f4       	brne	.+2      	; 0x33c8 <_Z19handleSerialBusMsgsv+0x4e>
    33c6:	a4 c3       	rjmp	.+1864   	; 0x3b10 <_Z19handleSerialBusMsgsv+0x796>
    33c8:	8b 3e       	cpi	r24, 0xEB	; 235
    33ca:	22 e2       	ldi	r18, 0x22	; 34
    33cc:	92 07       	cpc	r25, r18
    33ce:	b8 f4       	brcc	.+46     	; 0x33fe <_Z19handleSerialBusMsgsv+0x84>
    33d0:	8f 36       	cpi	r24, 0x6F	; 111
    33d2:	ed e1       	ldi	r30, 0x1D	; 29
    33d4:	9e 07       	cpc	r25, r30
    33d6:	09 f4       	brne	.+2      	; 0x33da <_Z19handleSerialBusMsgsv+0x60>
    33d8:	ed c3       	rjmp	.+2010   	; 0x3bb4 <_Z19handleSerialBusMsgsv+0x83a>
    33da:	80 37       	cpi	r24, 0x70	; 112
    33dc:	fd e1       	ldi	r31, 0x1D	; 29
    33de:	9f 07       	cpc	r25, r31
    33e0:	28 f4       	brcc	.+10     	; 0x33ec <_Z19handleSerialBusMsgsv+0x72>
    33e2:	8e 31       	cpi	r24, 0x1E	; 30
    33e4:	93 40       	sbci	r25, 0x03	; 3
    33e6:	09 f4       	brne	.+2      	; 0x33ea <_Z19handleSerialBusMsgsv+0x70>
    33e8:	81 c2       	rjmp	.+1282   	; 0x38ec <_Z19handleSerialBusMsgsv+0x572>
    33ea:	10 c7       	rjmp	.+3616   	; 0x420c <__DATA_REGION_LENGTH__+0x20c>
    33ec:	86 3c       	cpi	r24, 0xC6	; 198
    33ee:	ee e1       	ldi	r30, 0x1E	; 30
    33f0:	9e 07       	cpc	r25, r30
    33f2:	e9 f0       	breq	.+58     	; 0x342e <_Z19handleSerialBusMsgsv+0xb4>
    33f4:	81 3d       	cpi	r24, 0xD1	; 209
    33f6:	9e 41       	sbci	r25, 0x1E	; 30
    33f8:	09 f4       	brne	.+2      	; 0x33fc <_Z19handleSerialBusMsgsv+0x82>
    33fa:	a9 c1       	rjmp	.+850    	; 0x374e <_Z19handleSerialBusMsgsv+0x3d4>
    33fc:	07 c7       	rjmp	.+3598   	; 0x420c <__DATA_REGION_LENGTH__+0x20c>
    33fe:	82 37       	cpi	r24, 0x72	; 114
    3400:	23 e2       	ldi	r18, 0x23	; 35
    3402:	92 07       	cpc	r25, r18
    3404:	09 f4       	brne	.+2      	; 0x3408 <_Z19handleSerialBusMsgsv+0x8e>
    3406:	00 c3       	rjmp	.+1536   	; 0x3a08 <_Z19handleSerialBusMsgsv+0x68e>
    3408:	83 37       	cpi	r24, 0x73	; 115
    340a:	e3 e2       	ldi	r30, 0x23	; 35
    340c:	9e 07       	cpc	r25, r30
    340e:	28 f4       	brcc	.+10     	; 0x341a <_Z19handleSerialBusMsgsv+0xa0>
    3410:	88 3f       	cpi	r24, 0xF8	; 248
    3412:	92 42       	sbci	r25, 0x22	; 34
    3414:	09 f4       	brne	.+2      	; 0x3418 <_Z19handleSerialBusMsgsv+0x9e>
    3416:	38 c1       	rjmp	.+624    	; 0x3688 <_Z19handleSerialBusMsgsv+0x30e>
    3418:	f9 c6       	rjmp	.+3570   	; 0x420c <__DATA_REGION_LENGTH__+0x20c>
    341a:	84 33       	cpi	r24, 0x34	; 52
    341c:	24 e2       	ldi	r18, 0x24	; 36
    341e:	92 07       	cpc	r25, r18
    3420:	09 f4       	brne	.+2      	; 0x3424 <_Z19handleSerialBusMsgsv+0xaa>
    3422:	29 c2       	rjmp	.+1106   	; 0x3876 <_Z19handleSerialBusMsgsv+0x4fc>
    3424:	85 3c       	cpi	r24, 0xC5	; 197
    3426:	94 42       	sbci	r25, 0x24	; 36
    3428:	09 f4       	brne	.+2      	; 0x342c <_Z19handleSerialBusMsgsv+0xb2>
    342a:	dc c6       	rjmp	.+3512   	; 0x41e4 <__DATA_REGION_LENGTH__+0x1e4>
    342c:	ef c6       	rjmp	.+3550   	; 0x420c <__DATA_REGION_LENGTH__+0x20c>
    342e:	8e 81       	ldd	r24, Y+6	; 0x06
    3430:	9f 81       	ldd	r25, Y+7	; 0x07
    3432:	fc 01       	movw	r30, r24
    3434:	83 81       	ldd	r24, Z+3	; 0x03
    3436:	88 2f       	mov	r24, r24
    3438:	90 e0       	ldi	r25, 0x00	; 0
    343a:	89 83       	std	Y+1, r24	; 0x01
    343c:	9a 83       	std	Y+2, r25	; 0x02
    343e:	89 81       	ldd	r24, Y+1	; 0x01
    3440:	9a 81       	ldd	r25, Y+2	; 0x02
    3442:	89 2b       	or	r24, r25
    3444:	09 f4       	brne	.+2      	; 0x3448 <_Z19handleSerialBusMsgsv+0xce>
    3446:	d0 c0       	rjmp	.+416    	; 0x35e8 <_Z19handleSerialBusMsgsv+0x26e>
    3448:	89 81       	ldd	r24, Y+1	; 0x01
    344a:	9a 81       	ldd	r25, Y+2	; 0x02
    344c:	82 34       	cpi	r24, 0x42	; 66
    344e:	91 05       	cpc	r25, r1
    3450:	19 f4       	brne	.+6      	; 0x3458 <_Z19handleSerialBusMsgsv+0xde>
    3452:	19 82       	std	Y+1, r1	; 0x01
    3454:	1a 82       	std	Y+2, r1	; 0x02
    3456:	ac c0       	rjmp	.+344    	; 0x35b0 <_Z19handleSerialBusMsgsv+0x236>
    3458:	89 81       	ldd	r24, Y+1	; 0x01
    345a:	9a 81       	ldd	r25, Y+2	; 0x02
    345c:	86 34       	cpi	r24, 0x46	; 70
    345e:	91 05       	cpc	r25, r1
    3460:	29 f4       	brne	.+10     	; 0x346c <_Z19handleSerialBusMsgsv+0xf2>
    3462:	86 e0       	ldi	r24, 0x06	; 6
    3464:	90 e0       	ldi	r25, 0x00	; 0
    3466:	89 83       	std	Y+1, r24	; 0x01
    3468:	9a 83       	std	Y+2, r25	; 0x02
    346a:	a2 c0       	rjmp	.+324    	; 0x35b0 <_Z19handleSerialBusMsgsv+0x236>
    346c:	89 81       	ldd	r24, Y+1	; 0x01
    346e:	9a 81       	ldd	r25, Y+2	; 0x02
    3470:	83 34       	cpi	r24, 0x43	; 67
    3472:	91 05       	cpc	r25, r1
    3474:	b9 f5       	brne	.+110    	; 0x34e4 <_Z19handleSerialBusMsgsv+0x16a>
    3476:	8e 81       	ldd	r24, Y+6	; 0x06
    3478:	9f 81       	ldd	r25, Y+7	; 0x07
    347a:	fc 01       	movw	r30, r24
    347c:	87 89       	ldd	r24, Z+23	; 0x17
    347e:	8b 83       	std	Y+3, r24	; 0x03
    3480:	8e 81       	ldd	r24, Y+6	; 0x06
    3482:	9f 81       	ldd	r25, Y+7	; 0x07
    3484:	fc 01       	movw	r30, r24
    3486:	10 8e       	std	Z+24, r1	; 0x18
    3488:	8b 81       	ldd	r24, Y+3	; 0x03
    348a:	82 34       	cpi	r24, 0x42	; 66
    348c:	11 f4       	brne	.+4      	; 0x3492 <_Z19handleSerialBusMsgsv+0x118>
    348e:	80 e3       	ldi	r24, 0x30	; 48
    3490:	8b 83       	std	Y+3, r24	; 0x03
    3492:	8b 81       	ldd	r24, Y+3	; 0x03
    3494:	88 2f       	mov	r24, r24
    3496:	90 e0       	ldi	r25, 0x00	; 0
    3498:	c0 97       	sbiw	r24, 0x30	; 48
    349a:	0a 97       	sbiw	r24, 0x0a	; 10
    349c:	08 f0       	brcs	.+2      	; 0x34a0 <_Z19handleSerialBusMsgsv+0x126>
    349e:	88 c0       	rjmp	.+272    	; 0x35b0 <_Z19handleSerialBusMsgsv+0x236>
    34a0:	8e 81       	ldd	r24, Y+6	; 0x06
    34a2:	9f 81       	ldd	r25, Y+7	; 0x07
    34a4:	47 96       	adiw	r24, 0x17	; 23
    34a6:	0e 94 99 7b 	call	0xf732	; 0xf732 <atoi>
    34aa:	8a 87       	std	Y+10, r24	; 0x0a
    34ac:	9b 87       	std	Y+11, r25	; 0x0b
    34ae:	1c 86       	std	Y+12, r1	; 0x0c
    34b0:	85 e0       	ldi	r24, 0x05	; 5
    34b2:	8d 87       	std	Y+13, r24	; 0x0d
    34b4:	8d 85       	ldd	r24, Y+13	; 0x0d
    34b6:	28 2f       	mov	r18, r24
    34b8:	30 e0       	ldi	r19, 0x00	; 0
    34ba:	8a 85       	ldd	r24, Y+10	; 0x0a
    34bc:	9b 85       	ldd	r25, Y+11	; 0x0b
    34be:	28 17       	cp	r18, r24
    34c0:	39 07       	cpc	r19, r25
    34c2:	24 f4       	brge	.+8      	; 0x34cc <_Z19handleSerialBusMsgsv+0x152>
    34c4:	8d 85       	ldd	r24, Y+13	; 0x0d
    34c6:	88 2f       	mov	r24, r24
    34c8:	90 e0       	ldi	r25, 0x00	; 0
    34ca:	09 c0       	rjmp	.+18     	; 0x34de <_Z19handleSerialBusMsgsv+0x164>
    34cc:	8c 85       	ldd	r24, Y+12	; 0x0c
    34ce:	88 2f       	mov	r24, r24
    34d0:	90 e0       	ldi	r25, 0x00	; 0
    34d2:	2a 85       	ldd	r18, Y+10	; 0x0a
    34d4:	3b 85       	ldd	r19, Y+11	; 0x0b
    34d6:	82 17       	cp	r24, r18
    34d8:	93 07       	cpc	r25, r19
    34da:	0c f4       	brge	.+2      	; 0x34de <_Z19handleSerialBusMsgsv+0x164>
    34dc:	c9 01       	movw	r24, r18
    34de:	89 83       	std	Y+1, r24	; 0x01
    34e0:	9a 83       	std	Y+2, r25	; 0x02
    34e2:	66 c0       	rjmp	.+204    	; 0x35b0 <_Z19handleSerialBusMsgsv+0x236>
    34e4:	89 81       	ldd	r24, Y+1	; 0x01
    34e6:	9a 81       	ldd	r25, Y+2	; 0x02
    34e8:	83 35       	cpi	r24, 0x53	; 83
    34ea:	91 05       	cpc	r25, r1
    34ec:	09 f0       	breq	.+2      	; 0x34f0 <_Z19handleSerialBusMsgsv+0x176>
    34ee:	59 c0       	rjmp	.+178    	; 0x35a2 <_Z19handleSerialBusMsgsv+0x228>
    34f0:	1c 82       	std	Y+4, r1	; 0x04
    34f2:	8e 81       	ldd	r24, Y+6	; 0x06
    34f4:	9f 81       	ldd	r25, Y+7	; 0x07
    34f6:	fc 01       	movw	r30, r24
    34f8:	87 89       	ldd	r24, Z+23	; 0x17
    34fa:	8e 87       	std	Y+14, r24	; 0x0e
    34fc:	8e 81       	ldd	r24, Y+6	; 0x06
    34fe:	9f 81       	ldd	r25, Y+7	; 0x07
    3500:	fc 01       	movw	r30, r24
    3502:	80 8d       	ldd	r24, Z+24	; 0x18
    3504:	8f 87       	std	Y+15, r24	; 0x0f
    3506:	8e 81       	ldd	r24, Y+6	; 0x06
    3508:	9f 81       	ldd	r25, Y+7	; 0x07
    350a:	fc 01       	movw	r30, r24
    350c:	11 8e       	std	Z+25, r1	; 0x19
    350e:	8e 85       	ldd	r24, Y+14	; 0x0e
    3510:	82 34       	cpi	r24, 0x42	; 66
    3512:	11 f4       	brne	.+4      	; 0x3518 <_Z19handleSerialBusMsgsv+0x19e>
    3514:	1c 82       	std	Y+4, r1	; 0x04
    3516:	36 c0       	rjmp	.+108    	; 0x3584 <_Z19handleSerialBusMsgsv+0x20a>
    3518:	8e 85       	ldd	r24, Y+14	; 0x0e
    351a:	86 34       	cpi	r24, 0x46	; 70
    351c:	51 f4       	brne	.+20     	; 0x3532 <_Z19handleSerialBusMsgsv+0x1b8>
    351e:	8f 85       	ldd	r24, Y+15	; 0x0f
    3520:	81 33       	cpi	r24, 0x31	; 49
    3522:	80 f1       	brcs	.+96     	; 0x3584 <_Z19handleSerialBusMsgsv+0x20a>
    3524:	8f 85       	ldd	r24, Y+15	; 0x0f
    3526:	86 33       	cpi	r24, 0x36	; 54
    3528:	68 f5       	brcc	.+90     	; 0x3584 <_Z19handleSerialBusMsgsv+0x20a>
    352a:	8f 85       	ldd	r24, Y+15	; 0x0f
    352c:	84 52       	subi	r24, 0x24	; 36
    352e:	8c 83       	std	Y+4, r24	; 0x04
    3530:	29 c0       	rjmp	.+82     	; 0x3584 <_Z19handleSerialBusMsgsv+0x20a>
    3532:	8e 85       	ldd	r24, Y+14	; 0x0e
    3534:	83 35       	cpi	r24, 0x53	; 83
    3536:	69 f4       	brne	.+26     	; 0x3552 <_Z19handleSerialBusMsgsv+0x1d8>
    3538:	8f 85       	ldd	r24, Y+15	; 0x0f
    353a:	81 33       	cpi	r24, 0x31	; 49
    353c:	38 f0       	brcs	.+14     	; 0x354c <_Z19handleSerialBusMsgsv+0x1d2>
    353e:	8f 85       	ldd	r24, Y+15	; 0x0f
    3540:	86 33       	cpi	r24, 0x36	; 54
    3542:	20 f4       	brcc	.+8      	; 0x354c <_Z19handleSerialBusMsgsv+0x1d2>
    3544:	8f 85       	ldd	r24, Y+15	; 0x0f
    3546:	89 52       	subi	r24, 0x29	; 41
    3548:	8c 83       	std	Y+4, r24	; 0x04
    354a:	1c c0       	rjmp	.+56     	; 0x3584 <_Z19handleSerialBusMsgsv+0x20a>
    354c:	87 e0       	ldi	r24, 0x07	; 7
    354e:	8c 83       	std	Y+4, r24	; 0x04
    3550:	19 c0       	rjmp	.+50     	; 0x3584 <_Z19handleSerialBusMsgsv+0x20a>
    3552:	8f 85       	ldd	r24, Y+15	; 0x0f
    3554:	86 34       	cpi	r24, 0x46	; 70
    3556:	51 f4       	brne	.+20     	; 0x356c <_Z19handleSerialBusMsgsv+0x1f2>
    3558:	8e 85       	ldd	r24, Y+14	; 0x0e
    355a:	81 33       	cpi	r24, 0x31	; 49
    355c:	98 f0       	brcs	.+38     	; 0x3584 <_Z19handleSerialBusMsgsv+0x20a>
    355e:	8e 85       	ldd	r24, Y+14	; 0x0e
    3560:	86 33       	cpi	r24, 0x36	; 54
    3562:	80 f4       	brcc	.+32     	; 0x3584 <_Z19handleSerialBusMsgsv+0x20a>
    3564:	8e 85       	ldd	r24, Y+14	; 0x0e
    3566:	84 52       	subi	r24, 0x24	; 36
    3568:	8c 83       	std	Y+4, r24	; 0x04
    356a:	0c c0       	rjmp	.+24     	; 0x3584 <_Z19handleSerialBusMsgsv+0x20a>
    356c:	8f 85       	ldd	r24, Y+15	; 0x0f
    356e:	83 35       	cpi	r24, 0x53	; 83
    3570:	49 f4       	brne	.+18     	; 0x3584 <_Z19handleSerialBusMsgsv+0x20a>
    3572:	8e 85       	ldd	r24, Y+14	; 0x0e
    3574:	81 33       	cpi	r24, 0x31	; 49
    3576:	30 f0       	brcs	.+12     	; 0x3584 <_Z19handleSerialBusMsgsv+0x20a>
    3578:	8e 85       	ldd	r24, Y+14	; 0x0e
    357a:	86 33       	cpi	r24, 0x36	; 54
    357c:	18 f4       	brcc	.+6      	; 0x3584 <_Z19handleSerialBusMsgsv+0x20a>
    357e:	8e 85       	ldd	r24, Y+14	; 0x0e
    3580:	89 52       	subi	r24, 0x29	; 41
    3582:	8c 83       	std	Y+4, r24	; 0x04
    3584:	8c 81       	ldd	r24, Y+4	; 0x04
    3586:	87 30       	cpi	r24, 0x07	; 7
    3588:	48 f0       	brcs	.+18     	; 0x359c <_Z19handleSerialBusMsgsv+0x222>
    358a:	8c 81       	ldd	r24, Y+4	; 0x04
    358c:	82 31       	cpi	r24, 0x12	; 18
    358e:	30 f4       	brcc	.+12     	; 0x359c <_Z19handleSerialBusMsgsv+0x222>
    3590:	8c 81       	ldd	r24, Y+4	; 0x04
    3592:	88 2f       	mov	r24, r24
    3594:	90 e0       	ldi	r25, 0x00	; 0
    3596:	89 83       	std	Y+1, r24	; 0x01
    3598:	9a 83       	std	Y+2, r25	; 0x02
    359a:	0a c0       	rjmp	.+20     	; 0x35b0 <_Z19handleSerialBusMsgsv+0x236>
    359c:	19 82       	std	Y+1, r1	; 0x01
    359e:	1a 82       	std	Y+2, r1	; 0x02
    35a0:	07 c0       	rjmp	.+14     	; 0x35b0 <_Z19handleSerialBusMsgsv+0x236>
    35a2:	8e 81       	ldd	r24, Y+6	; 0x06
    35a4:	9f 81       	ldd	r25, Y+7	; 0x07
    35a6:	03 96       	adiw	r24, 0x03	; 3
    35a8:	0e 94 99 7b 	call	0xf732	; 0xf732 <atoi>
    35ac:	89 83       	std	Y+1, r24	; 0x01
    35ae:	9a 83       	std	Y+2, r25	; 0x02
    35b0:	89 81       	ldd	r24, Y+1	; 0x01
    35b2:	9a 81       	ldd	r25, Y+2	; 0x02
    35b4:	99 23       	and	r25, r25
    35b6:	c4 f0       	brlt	.+48     	; 0x35e8 <_Z19handleSerialBusMsgsv+0x26e>
    35b8:	89 81       	ldd	r24, Y+1	; 0x01
    35ba:	9a 81       	ldd	r25, Y+2	; 0x02
    35bc:	42 97       	sbiw	r24, 0x12	; 18
    35be:	a4 f4       	brge	.+40     	; 0x35e8 <_Z19handleSerialBusMsgsv+0x26e>
    35c0:	89 81       	ldd	r24, Y+1	; 0x01
    35c2:	8e a7       	std	Y+46, r24	; 0x2e
    35c4:	ce 01       	movw	r24, r28
    35c6:	8e 96       	adiw	r24, 0x2e	; 46
    35c8:	ac 01       	movw	r20, r24
    35ca:	6e e3       	ldi	r22, 0x3E	; 62
    35cc:	89 eb       	ldi	r24, 0xB9	; 185
    35ce:	97 e4       	ldi	r25, 0x47	; 71
    35d0:	0e 94 c1 46 	call	0x8d82	; 0x8d82 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
    35d4:	9e a5       	ldd	r25, Y+46	; 0x2e
    35d6:	80 91 20 40 	lds	r24, 0x4020	; 0x804020 <g_fox>
    35da:	98 17       	cp	r25, r24
    35dc:	29 f0       	breq	.+10     	; 0x35e8 <_Z19handleSerialBusMsgsv+0x26e>
    35de:	ce 01       	movw	r24, r28
    35e0:	8e 96       	adiw	r24, 0x2e	; 46
    35e2:	60 e0       	ldi	r22, 0x00	; 0
    35e4:	0e 94 c8 2d 	call	0x5b90	; 0x5b90 <_Z11setupForFoxP5Fox_t13EventAction_t>
    35e8:	80 91 20 40 	lds	r24, 0x4020	; 0x804020 <g_fox>
    35ec:	68 2f       	mov	r22, r24
    35ee:	87 e2       	ldi	r24, 0x27	; 39
    35f0:	97 e4       	ldi	r25, 0x47	; 71
    35f2:	0e 94 32 76 	call	0xec64	; 0xec64 <_Z8fox2TextPc5Fox_t>
    35f6:	98 2f       	mov	r25, r24
    35f8:	81 e0       	ldi	r24, 0x01	; 1
    35fa:	89 27       	eor	r24, r25
    35fc:	88 23       	and	r24, r24
    35fe:	11 f1       	breq	.+68     	; 0x3644 <_Z19handleSerialBusMsgsv+0x2ca>
    3600:	ce 01       	movw	r24, r28
    3602:	8f 96       	adiw	r24, 0x2f	; 47
    3604:	67 e2       	ldi	r22, 0x27	; 39
    3606:	77 e4       	ldi	r23, 0x47	; 71
    3608:	0e 94 0c 7c 	call	0xf818	; 0xf818 <strcpy>
    360c:	ce 01       	movw	r24, r28
    360e:	8f 96       	adiw	r24, 0x2f	; 47
    3610:	29 2f       	mov	r18, r25
    3612:	2f 93       	push	r18
    3614:	8f 93       	push	r24
    3616:	8c e7       	ldi	r24, 0x7C	; 124
    3618:	90 e4       	ldi	r25, 0x40	; 64
    361a:	89 2f       	mov	r24, r25
    361c:	8f 93       	push	r24
    361e:	8c e7       	ldi	r24, 0x7C	; 124
    3620:	90 e4       	ldi	r25, 0x40	; 64
    3622:	8f 93       	push	r24
    3624:	87 e2       	ldi	r24, 0x27	; 39
    3626:	97 e4       	ldi	r25, 0x47	; 71
    3628:	89 2f       	mov	r24, r25
    362a:	8f 93       	push	r24
    362c:	87 e2       	ldi	r24, 0x27	; 39
    362e:	97 e4       	ldi	r25, 0x47	; 71
    3630:	8f 93       	push	r24
    3632:	0e 94 48 7c 	call	0xf890	; 0xf890 <sprintf>
    3636:	0f 90       	pop	r0
    3638:	0f 90       	pop	r0
    363a:	0f 90       	pop	r0
    363c:	0f 90       	pop	r0
    363e:	0f 90       	pop	r0
    3640:	0f 90       	pop	r0
    3642:	1d c0       	rjmp	.+58     	; 0x367e <_Z19handleSerialBusMsgsv+0x304>
    3644:	80 91 20 40 	lds	r24, 0x4020	; 0x804020 <g_fox>
    3648:	88 2f       	mov	r24, r24
    364a:	90 e0       	ldi	r25, 0x00	; 0
    364c:	29 2f       	mov	r18, r25
    364e:	2f 93       	push	r18
    3650:	8f 93       	push	r24
    3652:	84 e8       	ldi	r24, 0x84	; 132
    3654:	90 e4       	ldi	r25, 0x40	; 64
    3656:	89 2f       	mov	r24, r25
    3658:	8f 93       	push	r24
    365a:	84 e8       	ldi	r24, 0x84	; 132
    365c:	90 e4       	ldi	r25, 0x40	; 64
    365e:	8f 93       	push	r24
    3660:	87 e2       	ldi	r24, 0x27	; 39
    3662:	97 e4       	ldi	r25, 0x47	; 71
    3664:	89 2f       	mov	r24, r25
    3666:	8f 93       	push	r24
    3668:	87 e2       	ldi	r24, 0x27	; 39
    366a:	97 e4       	ldi	r25, 0x47	; 71
    366c:	8f 93       	push	r24
    366e:	0e 94 48 7c 	call	0xf890	; 0xf890 <sprintf>
    3672:	0f 90       	pop	r0
    3674:	0f 90       	pop	r0
    3676:	0f 90       	pop	r0
    3678:	0f 90       	pop	r0
    367a:	0f 90       	pop	r0
    367c:	0f 90       	pop	r0
    367e:	87 e2       	ldi	r24, 0x27	; 39
    3680:	97 e4       	ldi	r25, 0x47	; 71
    3682:	0e 94 13 64 	call	0xc826	; 0xc826 <sb_send_string>
    3686:	cc c5       	rjmp	.+2968   	; 0x4220 <__DATA_REGION_LENGTH__+0x220>
    3688:	8e 81       	ldd	r24, Y+6	; 0x06
    368a:	9f 81       	ldd	r25, Y+7	; 0x07
    368c:	fc 01       	movw	r30, r24
    368e:	83 81       	ldd	r24, Z+3	; 0x03
    3690:	88 23       	and	r24, r24
    3692:	e9 f1       	breq	.+122    	; 0x370e <_Z19handleSerialBusMsgsv+0x394>
    3694:	8e 81       	ldd	r24, Y+6	; 0x06
    3696:	9f 81       	ldd	r25, Y+7	; 0x07
    3698:	03 96       	adiw	r24, 0x03	; 3
    369a:	0e 94 99 7b 	call	0xf732	; 0xf732 <atoi>
    369e:	80 93 cb 47 	sts	0x47CB, r24	; 0x8047cb <_ZZ19handleSerialBusMsgsvE6pwr_mW>
    36a2:	90 93 cc 47 	sts	0x47CC, r25	; 0x8047cc <_ZZ19handleSerialBusMsgsvE6pwr_mW+0x1>
    36a6:	80 91 cb 47 	lds	r24, 0x47CB	; 0x8047cb <_ZZ19handleSerialBusMsgsvE6pwr_mW>
    36aa:	90 91 cc 47 	lds	r25, 0x47CC	; 0x8047cc <_ZZ19handleSerialBusMsgsvE6pwr_mW+0x1>
    36ae:	89 38       	cpi	r24, 0x89	; 137
    36b0:	93 41       	sbci	r25, 0x13	; 19
    36b2:	68 f4       	brcc	.+26     	; 0x36ce <_Z19handleSerialBusMsgsv+0x354>
    36b4:	60 e0       	ldi	r22, 0x00	; 0
    36b6:	70 e0       	ldi	r23, 0x00	; 0
    36b8:	8b ec       	ldi	r24, 0xCB	; 203
    36ba:	97 e4       	ldi	r25, 0x47	; 71
    36bc:	0e 94 fb 6f 	call	0xdff6	; 0xdff6 <_Z15txSetParametersPjPb>
    36c0:	88 8b       	std	Y+16, r24	; 0x10
    36c2:	88 89       	ldd	r24, Y+16	; 0x10
    36c4:	88 23       	and	r24, r24
    36c6:	19 f0       	breq	.+6      	; 0x36ce <_Z19handleSerialBusMsgsv+0x354>
    36c8:	88 89       	ldd	r24, Y+16	; 0x10
    36ca:	80 93 59 47 	sts	0x4759, r24	; 0x804759 <_ZL17g_last_error_code>
    36ce:	0e 94 f0 6f 	call	0xdfe0	; 0xdfe0 <_Z12txGetPowerMwv>
    36d2:	29 2f       	mov	r18, r25
    36d4:	2f 93       	push	r18
    36d6:	8f 93       	push	r24
    36d8:	8c e8       	ldi	r24, 0x8C	; 140
    36da:	90 e4       	ldi	r25, 0x40	; 64
    36dc:	89 2f       	mov	r24, r25
    36de:	8f 93       	push	r24
    36e0:	8c e8       	ldi	r24, 0x8C	; 140
    36e2:	90 e4       	ldi	r25, 0x40	; 64
    36e4:	8f 93       	push	r24
    36e6:	87 e2       	ldi	r24, 0x27	; 39
    36e8:	97 e4       	ldi	r25, 0x47	; 71
    36ea:	89 2f       	mov	r24, r25
    36ec:	8f 93       	push	r24
    36ee:	87 e2       	ldi	r24, 0x27	; 39
    36f0:	97 e4       	ldi	r25, 0x47	; 71
    36f2:	8f 93       	push	r24
    36f4:	0e 94 48 7c 	call	0xf890	; 0xf890 <sprintf>
    36f8:	0f 90       	pop	r0
    36fa:	0f 90       	pop	r0
    36fc:	0f 90       	pop	r0
    36fe:	0f 90       	pop	r0
    3700:	0f 90       	pop	r0
    3702:	0f 90       	pop	r0
    3704:	87 e2       	ldi	r24, 0x27	; 39
    3706:	97 e4       	ldi	r25, 0x47	; 71
    3708:	0e 94 13 64 	call	0xc826	; 0xc826 <sb_send_string>
    370c:	89 c5       	rjmp	.+2834   	; 0x4220 <__DATA_REGION_LENGTH__+0x220>
    370e:	0e 94 f0 6f 	call	0xdfe0	; 0xdfe0 <_Z12txGetPowerMwv>
    3712:	29 2f       	mov	r18, r25
    3714:	2f 93       	push	r18
    3716:	8f 93       	push	r24
    3718:	8c e8       	ldi	r24, 0x8C	; 140
    371a:	90 e4       	ldi	r25, 0x40	; 64
    371c:	89 2f       	mov	r24, r25
    371e:	8f 93       	push	r24
    3720:	8c e8       	ldi	r24, 0x8C	; 140
    3722:	90 e4       	ldi	r25, 0x40	; 64
    3724:	8f 93       	push	r24
    3726:	87 e2       	ldi	r24, 0x27	; 39
    3728:	97 e4       	ldi	r25, 0x47	; 71
    372a:	89 2f       	mov	r24, r25
    372c:	8f 93       	push	r24
    372e:	87 e2       	ldi	r24, 0x27	; 39
    3730:	97 e4       	ldi	r25, 0x47	; 71
    3732:	8f 93       	push	r24
    3734:	0e 94 48 7c 	call	0xf890	; 0xf890 <sprintf>
    3738:	0f 90       	pop	r0
    373a:	0f 90       	pop	r0
    373c:	0f 90       	pop	r0
    373e:	0f 90       	pop	r0
    3740:	0f 90       	pop	r0
    3742:	0f 90       	pop	r0
    3744:	87 e2       	ldi	r24, 0x27	; 39
    3746:	97 e4       	ldi	r25, 0x47	; 71
    3748:	0e 94 13 64 	call	0xc826	; 0xc826 <sb_send_string>
    374c:	69 c5       	rjmp	.+2770   	; 0x4220 <__DATA_REGION_LENGTH__+0x220>
    374e:	19 8a       	std	Y+17, r1	; 0x11
    3750:	1a 8a       	std	Y+18, r1	; 0x12
    3752:	1b 8a       	std	Y+19, r1	; 0x13
    3754:	1c 8a       	std	Y+20, r1	; 0x14
    3756:	8e 81       	ldd	r24, Y+6	; 0x06
    3758:	9f 81       	ldd	r25, Y+7	; 0x07
    375a:	fc 01       	movw	r30, r24
    375c:	83 81       	ldd	r24, Z+3	; 0x03
    375e:	88 23       	and	r24, r24
    3760:	49 f1       	breq	.+82     	; 0x37b4 <_Z19handleSerialBusMsgsv+0x43a>
    3762:	8e 81       	ldd	r24, Y+6	; 0x06
    3764:	9f 81       	ldd	r25, Y+7	; 0x07
    3766:	03 96       	adiw	r24, 0x03	; 3
    3768:	9e 01       	movw	r18, r28
    376a:	28 5b       	subi	r18, 0xB8	; 184
    376c:	3f 4f       	sbci	r19, 0xFF	; 255
    376e:	b9 01       	movw	r22, r18
    3770:	0e 94 6d 74 	call	0xe8da	; 0xe8da <_Z12frequencyValPcPm>
    3774:	ce 01       	movw	r24, r28
    3776:	88 5b       	subi	r24, 0xB8	; 184
    3778:	9f 4f       	sbci	r25, 0xFF	; 255
    377a:	61 e0       	ldi	r22, 0x01	; 1
    377c:	0e 94 48 6f 	call	0xde90	; 0xde90 <_Z14txSetFrequencyPmb>
    3780:	98 2f       	mov	r25, r24
    3782:	81 e0       	ldi	r24, 0x01	; 1
    3784:	89 27       	eor	r24, r25
    3786:	88 23       	and	r24, r24
    3788:	89 f0       	breq	.+34     	; 0x37ac <_Z19handleSerialBusMsgsv+0x432>
    378a:	ce 01       	movw	r24, r28
    378c:	88 5b       	subi	r24, 0xB8	; 184
    378e:	9f 4f       	sbci	r25, 0xFF	; 255
    3790:	fc 01       	movw	r30, r24
    3792:	80 81       	ld	r24, Z
    3794:	91 81       	ldd	r25, Z+1	; 0x01
    3796:	a2 81       	ldd	r26, Z+2	; 0x02
    3798:	b3 81       	ldd	r27, Z+3	; 0x03
    379a:	89 8b       	std	Y+17, r24	; 0x11
    379c:	9a 8b       	std	Y+18, r25	; 0x12
    379e:	ab 8b       	std	Y+19, r26	; 0x13
    37a0:	bc 8b       	std	Y+20, r27	; 0x14
    37a2:	89 eb       	ldi	r24, 0xB9	; 185
    37a4:	97 e4       	ldi	r25, 0x47	; 71
    37a6:	0e 94 29 48 	call	0x9052	; 0x9052 <_ZN13EepromManager13saveAllEEPROMEv>
    37aa:	04 c0       	rjmp	.+8      	; 0x37b4 <_Z19handleSerialBusMsgsv+0x43a>
    37ac:	87 e9       	ldi	r24, 0x97	; 151
    37ae:	90 e4       	ldi	r25, 0x40	; 64
    37b0:	0e 94 13 64 	call	0xc826	; 0xc826 <sb_send_string>
    37b4:	0e 94 9a 6f 	call	0xdf34	; 0xdf34 <_Z14txGetFrequencyv>
    37b8:	dc 01       	movw	r26, r24
    37ba:	cb 01       	movw	r24, r22
    37bc:	89 8b       	std	Y+17, r24	; 0x11
    37be:	9a 8b       	std	Y+18, r25	; 0x12
    37c0:	ab 8b       	std	Y+19, r26	; 0x13
    37c2:	bc 8b       	std	Y+20, r27	; 0x14
    37c4:	89 89       	ldd	r24, Y+17	; 0x11
    37c6:	9a 89       	ldd	r25, Y+18	; 0x12
    37c8:	ab 89       	ldd	r26, Y+19	; 0x13
    37ca:	bc 89       	ldd	r27, Y+20	; 0x14
    37cc:	89 2b       	or	r24, r25
    37ce:	8a 2b       	or	r24, r26
    37d0:	8b 2b       	or	r24, r27
    37d2:	09 f4       	brne	.+2      	; 0x37d6 <_Z19handleSerialBusMsgsv+0x45c>
    37d4:	20 c5       	rjmp	.+2624   	; 0x4216 <__DATA_REGION_LENGTH__+0x216>
    37d6:	89 89       	ldd	r24, Y+17	; 0x11
    37d8:	9a 89       	ldd	r25, Y+18	; 0x12
    37da:	ab 89       	ldd	r26, Y+19	; 0x13
    37dc:	bc 89       	ldd	r27, Y+20	; 0x14
    37de:	9e 01       	movw	r18, r28
    37e0:	24 5b       	subi	r18, 0xB4	; 180
    37e2:	3f 4f       	sbci	r19, 0xFF	; 255
    37e4:	ac 01       	movw	r20, r24
    37e6:	bd 01       	movw	r22, r26
    37e8:	c9 01       	movw	r24, r18
    37ea:	0e 94 f1 73 	call	0xe7e2	; 0xe7e2 <_Z15frequencyStringPcm>
    37ee:	98 2f       	mov	r25, r24
    37f0:	81 e0       	ldi	r24, 0x01	; 1
    37f2:	89 27       	eor	r24, r25
    37f4:	88 23       	and	r24, r24
    37f6:	e9 f0       	breq	.+58     	; 0x3832 <_Z19handleSerialBusMsgsv+0x4b8>
    37f8:	ce 01       	movw	r24, r28
    37fa:	84 5b       	subi	r24, 0xB4	; 180
    37fc:	9f 4f       	sbci	r25, 0xFF	; 255
    37fe:	29 2f       	mov	r18, r25
    3800:	2f 93       	push	r18
    3802:	8f 93       	push	r24
    3804:	82 ec       	ldi	r24, 0xC2	; 194
    3806:	90 e4       	ldi	r25, 0x40	; 64
    3808:	89 2f       	mov	r24, r25
    380a:	8f 93       	push	r24
    380c:	82 ec       	ldi	r24, 0xC2	; 194
    380e:	90 e4       	ldi	r25, 0x40	; 64
    3810:	8f 93       	push	r24
    3812:	87 e2       	ldi	r24, 0x27	; 39
    3814:	97 e4       	ldi	r25, 0x47	; 71
    3816:	89 2f       	mov	r24, r25
    3818:	8f 93       	push	r24
    381a:	87 e2       	ldi	r24, 0x27	; 39
    381c:	97 e4       	ldi	r25, 0x47	; 71
    381e:	8f 93       	push	r24
    3820:	0e 94 48 7c 	call	0xf890	; 0xf890 <sprintf>
    3824:	0f 90       	pop	r0
    3826:	0f 90       	pop	r0
    3828:	0f 90       	pop	r0
    382a:	0f 90       	pop	r0
    382c:	0f 90       	pop	r0
    382e:	0f 90       	pop	r0
    3830:	1d c0       	rjmp	.+58     	; 0x386c <_Z19handleSerialBusMsgsv+0x4f2>
    3832:	8c 89       	ldd	r24, Y+20	; 0x14
    3834:	8f 93       	push	r24
    3836:	8b 89       	ldd	r24, Y+19	; 0x13
    3838:	8f 93       	push	r24
    383a:	8a 89       	ldd	r24, Y+18	; 0x12
    383c:	8f 93       	push	r24
    383e:	89 89       	ldd	r24, Y+17	; 0x11
    3840:	8f 93       	push	r24
    3842:	8a ec       	ldi	r24, 0xCA	; 202
    3844:	90 e4       	ldi	r25, 0x40	; 64
    3846:	89 2f       	mov	r24, r25
    3848:	8f 93       	push	r24
    384a:	8a ec       	ldi	r24, 0xCA	; 202
    384c:	90 e4       	ldi	r25, 0x40	; 64
    384e:	8f 93       	push	r24
    3850:	87 e2       	ldi	r24, 0x27	; 39
    3852:	97 e4       	ldi	r25, 0x47	; 71
    3854:	89 2f       	mov	r24, r25
    3856:	8f 93       	push	r24
    3858:	87 e2       	ldi	r24, 0x27	; 39
    385a:	97 e4       	ldi	r25, 0x47	; 71
    385c:	8f 93       	push	r24
    385e:	0e 94 48 7c 	call	0xf890	; 0xf890 <sprintf>
    3862:	8d b7       	in	r24, 0x3d	; 61
    3864:	9e b7       	in	r25, 0x3e	; 62
    3866:	08 96       	adiw	r24, 0x08	; 8
    3868:	cd bf       	out	0x3d, r28	; 61
    386a:	de bf       	out	0x3e, r29	; 62
    386c:	87 e2       	ldi	r24, 0x27	; 39
    386e:	97 e4       	ldi	r25, 0x47	; 71
    3870:	0e 94 13 64 	call	0xc826	; 0xc826 <sb_send_string>
    3874:	d0 c4       	rjmp	.+2464   	; 0x4216 <__DATA_REGION_LENGTH__+0x216>
    3876:	8e 81       	ldd	r24, Y+6	; 0x06
    3878:	9f 81       	ldd	r25, Y+7	; 0x07
    387a:	fc 01       	movw	r30, r24
    387c:	83 81       	ldd	r24, Z+3	; 0x03
    387e:	88 23       	and	r24, r24
    3880:	81 f1       	breq	.+96     	; 0x38e2 <_Z19handleSerialBusMsgsv+0x568>
    3882:	8e 81       	ldd	r24, Y+6	; 0x06
    3884:	9f 81       	ldd	r25, Y+7	; 0x07
    3886:	fc 01       	movw	r30, r24
    3888:	83 81       	ldd	r24, Z+3	; 0x03
    388a:	80 33       	cpi	r24, 0x30	; 48
    388c:	21 f4       	brne	.+8      	; 0x3896 <_Z19handleSerialBusMsgsv+0x51c>
    388e:	82 e0       	ldi	r24, 0x02	; 2
    3890:	0e 94 07 2d 	call	0x5a0e	; 0x5a0e <_Z12stopEventNow19EventActionSource_t>
    3894:	c5 c4       	rjmp	.+2442   	; 0x4220 <__DATA_REGION_LENGTH__+0x220>
    3896:	8e 81       	ldd	r24, Y+6	; 0x06
    3898:	9f 81       	ldd	r25, Y+7	; 0x07
    389a:	fc 01       	movw	r30, r24
    389c:	83 81       	ldd	r24, Z+3	; 0x03
    389e:	81 33       	cpi	r24, 0x31	; 49
    38a0:	21 f4       	brne	.+8      	; 0x38aa <_Z19handleSerialBusMsgsv+0x530>
    38a2:	82 e0       	ldi	r24, 0x02	; 2
    38a4:	0e 94 a5 2c 	call	0x594a	; 0x594a <_Z13startEventNow19EventActionSource_t>
    38a8:	bb c4       	rjmp	.+2422   	; 0x4220 <__DATA_REGION_LENGTH__+0x220>
    38aa:	8e 81       	ldd	r24, Y+6	; 0x06
    38ac:	9f 81       	ldd	r25, Y+7	; 0x07
    38ae:	fc 01       	movw	r30, r24
    38b0:	83 81       	ldd	r24, Z+3	; 0x03
    38b2:	82 33       	cpi	r24, 0x32	; 50
    38b4:	29 f4       	brne	.+10     	; 0x38c0 <_Z19handleSerialBusMsgsv+0x546>
    38b6:	10 92 a2 47 	sts	0x47A2, r1	; 0x8047a2 <g_event_enabled>
    38ba:	0e 94 35 2d 	call	0x5a6a	; 0x5a6a <_Z18startEventUsingRTCv>
    38be:	b0 c4       	rjmp	.+2400   	; 0x4220 <__DATA_REGION_LENGTH__+0x220>
    38c0:	8e 81       	ldd	r24, Y+6	; 0x06
    38c2:	9f 81       	ldd	r25, Y+7	; 0x07
    38c4:	fc 01       	movw	r30, r24
    38c6:	83 81       	ldd	r24, Z+3	; 0x03
    38c8:	83 33       	cpi	r24, 0x33	; 51
    38ca:	31 f4       	brne	.+12     	; 0x38d8 <_Z19handleSerialBusMsgsv+0x55e>
    38cc:	62 e0       	ldi	r22, 0x02	; 2
    38ce:	80 e0       	ldi	r24, 0x00	; 0
    38d0:	90 e0       	ldi	r25, 0x00	; 0
    38d2:	0e 94 c8 2d 	call	0x5b90	; 0x5b90 <_Z11setupForFoxP5Fox_t13EventAction_t>
    38d6:	a4 c4       	rjmp	.+2376   	; 0x4220 <__DATA_REGION_LENGTH__+0x220>
    38d8:	83 ed       	ldi	r24, 0xD3	; 211
    38da:	90 e4       	ldi	r25, 0x40	; 64
    38dc:	0e 94 13 64 	call	0xc826	; 0xc826 <sb_send_string>
    38e0:	9f c4       	rjmp	.+2366   	; 0x4220 <__DATA_REGION_LENGTH__+0x220>
    38e2:	83 ed       	ldi	r24, 0xD3	; 211
    38e4:	90 e4       	ldi	r25, 0x40	; 64
    38e6:	0e 94 13 64 	call	0xc826	; 0xc826 <sb_send_string>
    38ea:	9a c4       	rjmp	.+2356   	; 0x4220 <__DATA_REGION_LENGTH__+0x220>
    38ec:	8e 81       	ldd	r24, Y+6	; 0x06
    38ee:	9f 81       	ldd	r25, Y+7	; 0x07
    38f0:	fc 01       	movw	r30, r24
    38f2:	83 81       	ldd	r24, Z+3	; 0x03
    38f4:	88 23       	and	r24, r24
    38f6:	09 f4       	brne	.+2      	; 0x38fa <_Z19handleSerialBusMsgsv+0x580>
    38f8:	41 c0       	rjmp	.+130    	; 0x397c <_Z19handleSerialBusMsgsv+0x602>
    38fa:	80 e2       	ldi	r24, 0x20	; 32
    38fc:	90 e0       	ldi	r25, 0x00	; 0
    38fe:	80 93 27 47 	sts	0x4727, r24	; 0x804727 <_ZL9g_tempStr>
    3902:	90 93 28 47 	sts	0x4728, r25	; 0x804728 <_ZL9g_tempStr+0x1>
    3906:	8e 81       	ldd	r24, Y+6	; 0x06
    3908:	9f 81       	ldd	r25, Y+7	; 0x07
    390a:	03 96       	adiw	r24, 0x03	; 3
    390c:	bc 01       	movw	r22, r24
    390e:	87 e2       	ldi	r24, 0x27	; 39
    3910:	97 e4       	ldi	r25, 0x47	; 71
    3912:	0e 94 ed 7b 	call	0xf7da	; 0xf7da <strcat>
    3916:	8e 81       	ldd	r24, Y+6	; 0x06
    3918:	9f 81       	ldd	r25, Y+7	; 0x07
    391a:	fc 01       	movw	r30, r24
    391c:	87 89       	ldd	r24, Z+23	; 0x17
    391e:	88 23       	and	r24, r24
    3920:	d1 f0       	breq	.+52     	; 0x3956 <_Z19handleSerialBusMsgsv+0x5dc>
    3922:	87 e2       	ldi	r24, 0x27	; 39
    3924:	97 e4       	ldi	r25, 0x47	; 71
    3926:	9c 01       	movw	r18, r24
    3928:	f9 01       	movw	r30, r18
    392a:	01 90       	ld	r0, Z+
    392c:	00 20       	and	r0, r0
    392e:	e9 f7       	brne	.-6      	; 0x392a <_Z19handleSerialBusMsgsv+0x5b0>
    3930:	cf 01       	movw	r24, r30
    3932:	01 97       	sbiw	r24, 0x01	; 1
    3934:	82 1b       	sub	r24, r18
    3936:	93 0b       	sbc	r25, r19
    3938:	89 5d       	subi	r24, 0xD9	; 217
    393a:	98 4b       	sbci	r25, 0xB8	; 184
    393c:	20 e2       	ldi	r18, 0x20	; 32
    393e:	30 e0       	ldi	r19, 0x00	; 0
    3940:	fc 01       	movw	r30, r24
    3942:	20 83       	st	Z, r18
    3944:	31 83       	std	Z+1, r19	; 0x01
    3946:	8e 81       	ldd	r24, Y+6	; 0x06
    3948:	9f 81       	ldd	r25, Y+7	; 0x07
    394a:	47 96       	adiw	r24, 0x17	; 23
    394c:	bc 01       	movw	r22, r24
    394e:	87 e2       	ldi	r24, 0x27	; 39
    3950:	97 e4       	ldi	r25, 0x47	; 71
    3952:	0e 94 ed 7b 	call	0xf7da	; 0xf7da <strcat>
    3956:	87 e2       	ldi	r24, 0x27	; 39
    3958:	97 e4       	ldi	r25, 0x47	; 71
    395a:	0e 94 13 7c 	call	0xf826	; 0xf826 <strlen>
    395e:	45 97       	sbiw	r24, 0x15	; 21
    3960:	68 f4       	brcc	.+26     	; 0x397c <_Z19handleSerialBusMsgsv+0x602>
    3962:	67 e2       	ldi	r22, 0x27	; 39
    3964:	77 e4       	ldi	r23, 0x47	; 71
    3966:	81 e8       	ldi	r24, 0x81	; 129
    3968:	97 e4       	ldi	r25, 0x47	; 71
    396a:	0e 94 0c 7c 	call	0xf818	; 0xf818 <strcpy>
    396e:	47 e2       	ldi	r20, 0x27	; 39
    3970:	57 e4       	ldi	r21, 0x47	; 71
    3972:	6a e0       	ldi	r22, 0x0A	; 10
    3974:	89 eb       	ldi	r24, 0xB9	; 185
    3976:	97 e4       	ldi	r25, 0x47	; 71
    3978:	0e 94 c1 46 	call	0x8d82	; 0x8d82 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
    397c:	80 91 81 47 	lds	r24, 0x4781	; 0x804781 <g_messages_text+0x15>
    3980:	88 23       	and	r24, r24
    3982:	01 f1       	breq	.+64     	; 0x39c4 <_Z19handleSerialBusMsgsv+0x64a>
    3984:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    3988:	88 2f       	mov	r24, r24
    398a:	90 e0       	ldi	r25, 0x00	; 0
    398c:	bc 01       	movw	r22, r24
    398e:	81 e8       	ldi	r24, 0x81	; 129
    3990:	97 e4       	ldi	r25, 0x47	; 71
    3992:	0e 94 61 5d 	call	0xbac2	; 0xbac2 <_Z26timeRequiredToSendStrAtWPMPcj>
    3996:	88 5a       	subi	r24, 0xA8	; 168
    3998:	9d 4f       	sbci	r25, 0xFD	; 253
    399a:	96 95       	lsr	r25
    399c:	87 95       	ror	r24
    399e:	96 95       	lsr	r25
    39a0:	87 95       	ror	r24
    39a2:	96 95       	lsr	r25
    39a4:	87 95       	ror	r24
    39a6:	9c 01       	movw	r18, r24
    39a8:	a5 ec       	ldi	r26, 0xC5	; 197
    39aa:	b0 e2       	ldi	r27, 0x20	; 32
    39ac:	0e 94 3a 7a 	call	0xf474	; 0xf474 <__umulhisi3>
    39b0:	92 95       	swap	r25
    39b2:	82 95       	swap	r24
    39b4:	8f 70       	andi	r24, 0x0F	; 15
    39b6:	89 27       	eor	r24, r25
    39b8:	9f 70       	andi	r25, 0x0F	; 15
    39ba:	89 27       	eor	r24, r25
    39bc:	80 93 96 47 	sts	0x4796, r24	; 0x804796 <g_time_needed_for_ID>
    39c0:	90 93 97 47 	sts	0x4797, r25	; 0x804797 <g_time_needed_for_ID+0x1>
    39c4:	81 e8       	ldi	r24, 0x81	; 129
    39c6:	97 e4       	ldi	r25, 0x47	; 71
    39c8:	89 2f       	mov	r24, r25
    39ca:	8f 93       	push	r24
    39cc:	81 e8       	ldi	r24, 0x81	; 129
    39ce:	97 e4       	ldi	r25, 0x47	; 71
    39d0:	8f 93       	push	r24
    39d2:	88 ed       	ldi	r24, 0xD8	; 216
    39d4:	90 e4       	ldi	r25, 0x40	; 64
    39d6:	89 2f       	mov	r24, r25
    39d8:	8f 93       	push	r24
    39da:	88 ed       	ldi	r24, 0xD8	; 216
    39dc:	90 e4       	ldi	r25, 0x40	; 64
    39de:	8f 93       	push	r24
    39e0:	87 e2       	ldi	r24, 0x27	; 39
    39e2:	97 e4       	ldi	r25, 0x47	; 71
    39e4:	89 2f       	mov	r24, r25
    39e6:	8f 93       	push	r24
    39e8:	87 e2       	ldi	r24, 0x27	; 39
    39ea:	97 e4       	ldi	r25, 0x47	; 71
    39ec:	8f 93       	push	r24
    39ee:	0e 94 48 7c 	call	0xf890	; 0xf890 <sprintf>
    39f2:	0f 90       	pop	r0
    39f4:	0f 90       	pop	r0
    39f6:	0f 90       	pop	r0
    39f8:	0f 90       	pop	r0
    39fa:	0f 90       	pop	r0
    39fc:	0f 90       	pop	r0
    39fe:	87 e2       	ldi	r24, 0x27	; 39
    3a00:	97 e4       	ldi	r25, 0x47	; 71
    3a02:	0e 94 13 64 	call	0xc826	; 0xc826 <sb_send_string>
    3a06:	0c c4       	rjmp	.+2072   	; 0x4220 <__DATA_REGION_LENGTH__+0x220>
    3a08:	8e 81       	ldd	r24, Y+6	; 0x06
    3a0a:	9f 81       	ldd	r25, Y+7	; 0x07
    3a0c:	fc 01       	movw	r30, r24
    3a0e:	83 81       	ldd	r24, Z+3	; 0x03
    3a10:	83 35       	cpi	r24, 0x53	; 83
    3a12:	09 f0       	breq	.+2      	; 0x3a16 <_Z19handleSerialBusMsgsv+0x69c>
    3a14:	6f c0       	rjmp	.+222    	; 0x3af4 <_Z19handleSerialBusMsgsv+0x77a>
    3a16:	8e 81       	ldd	r24, Y+6	; 0x06
    3a18:	9f 81       	ldd	r25, Y+7	; 0x07
    3a1a:	fc 01       	movw	r30, r24
    3a1c:	87 89       	ldd	r24, Z+23	; 0x17
    3a1e:	8d 8b       	std	Y+21, r24	; 0x15
    3a20:	8d 89       	ldd	r24, Y+21	; 0x15
    3a22:	88 23       	and	r24, r24
    3a24:	09 f4       	brne	.+2      	; 0x3a28 <_Z19handleSerialBusMsgsv+0x6ae>
    3a26:	48 c0       	rjmp	.+144    	; 0x3ab8 <_Z19handleSerialBusMsgsv+0x73e>
    3a28:	8e 81       	ldd	r24, Y+6	; 0x06
    3a2a:	9f 81       	ldd	r25, Y+7	; 0x07
    3a2c:	47 96       	adiw	r24, 0x17	; 23
    3a2e:	0e 94 b7 7b 	call	0xf76e	; 0xf76e <atol>
    3a32:	dc 01       	movw	r26, r24
    3a34:	cb 01       	movw	r24, r22
    3a36:	8e 8b       	std	Y+22, r24	; 0x16
    3a38:	8e 89       	ldd	r24, Y+22	; 0x16
    3a3a:	8f 8b       	std	Y+23, r24	; 0x17
    3a3c:	85 e0       	ldi	r24, 0x05	; 5
    3a3e:	88 8f       	std	Y+24, r24	; 0x18
    3a40:	84 e1       	ldi	r24, 0x14	; 20
    3a42:	89 8f       	std	Y+25, r24	; 0x19
    3a44:	9f 89       	ldd	r25, Y+23	; 0x17
    3a46:	89 8d       	ldd	r24, Y+25	; 0x19
    3a48:	89 17       	cp	r24, r25
    3a4a:	40 f0       	brcs	.+16     	; 0x3a5c <_Z19handleSerialBusMsgsv+0x6e2>
    3a4c:	9f 89       	ldd	r25, Y+23	; 0x17
    3a4e:	88 8d       	ldd	r24, Y+24	; 0x18
    3a50:	98 17       	cp	r25, r24
    3a52:	10 f4       	brcc	.+4      	; 0x3a58 <_Z19handleSerialBusMsgsv+0x6de>
    3a54:	88 8d       	ldd	r24, Y+24	; 0x18
    3a56:	03 c0       	rjmp	.+6      	; 0x3a5e <_Z19handleSerialBusMsgsv+0x6e4>
    3a58:	8f 89       	ldd	r24, Y+23	; 0x17
    3a5a:	01 c0       	rjmp	.+2      	; 0x3a5e <_Z19handleSerialBusMsgsv+0x6e4>
    3a5c:	89 8d       	ldd	r24, Y+25	; 0x19
    3a5e:	80 93 0b 40 	sts	0x400B, r24	; 0x80400b <g_id_codespeed>
    3a62:	4b e0       	ldi	r20, 0x0B	; 11
    3a64:	50 e4       	ldi	r21, 0x40	; 64
    3a66:	6d e3       	ldi	r22, 0x3D	; 61
    3a68:	89 eb       	ldi	r24, 0xB9	; 185
    3a6a:	97 e4       	ldi	r25, 0x47	; 71
    3a6c:	0e 94 c1 46 	call	0x8d82	; 0x8d82 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
    3a70:	80 91 81 47 	lds	r24, 0x4781	; 0x804781 <g_messages_text+0x15>
    3a74:	88 23       	and	r24, r24
    3a76:	01 f1       	breq	.+64     	; 0x3ab8 <_Z19handleSerialBusMsgsv+0x73e>
    3a78:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    3a7c:	88 2f       	mov	r24, r24
    3a7e:	90 e0       	ldi	r25, 0x00	; 0
    3a80:	bc 01       	movw	r22, r24
    3a82:	81 e8       	ldi	r24, 0x81	; 129
    3a84:	97 e4       	ldi	r25, 0x47	; 71
    3a86:	0e 94 61 5d 	call	0xbac2	; 0xbac2 <_Z26timeRequiredToSendStrAtWPMPcj>
    3a8a:	88 5a       	subi	r24, 0xA8	; 168
    3a8c:	9d 4f       	sbci	r25, 0xFD	; 253
    3a8e:	96 95       	lsr	r25
    3a90:	87 95       	ror	r24
    3a92:	96 95       	lsr	r25
    3a94:	87 95       	ror	r24
    3a96:	96 95       	lsr	r25
    3a98:	87 95       	ror	r24
    3a9a:	9c 01       	movw	r18, r24
    3a9c:	a5 ec       	ldi	r26, 0xC5	; 197
    3a9e:	b0 e2       	ldi	r27, 0x20	; 32
    3aa0:	0e 94 3a 7a 	call	0xf474	; 0xf474 <__umulhisi3>
    3aa4:	92 95       	swap	r25
    3aa6:	82 95       	swap	r24
    3aa8:	8f 70       	andi	r24, 0x0F	; 15
    3aaa:	89 27       	eor	r24, r25
    3aac:	9f 70       	andi	r25, 0x0F	; 15
    3aae:	89 27       	eor	r24, r25
    3ab0:	80 93 96 47 	sts	0x4796, r24	; 0x804796 <g_time_needed_for_ID>
    3ab4:	90 93 97 47 	sts	0x4797, r25	; 0x804797 <g_time_needed_for_ID+0x1>
    3ab8:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    3abc:	88 2f       	mov	r24, r24
    3abe:	90 e0       	ldi	r25, 0x00	; 0
    3ac0:	29 2f       	mov	r18, r25
    3ac2:	2f 93       	push	r18
    3ac4:	8f 93       	push	r24
    3ac6:	8f ed       	ldi	r24, 0xDF	; 223
    3ac8:	90 e4       	ldi	r25, 0x40	; 64
    3aca:	89 2f       	mov	r24, r25
    3acc:	8f 93       	push	r24
    3ace:	8f ed       	ldi	r24, 0xDF	; 223
    3ad0:	90 e4       	ldi	r25, 0x40	; 64
    3ad2:	8f 93       	push	r24
    3ad4:	87 e2       	ldi	r24, 0x27	; 39
    3ad6:	97 e4       	ldi	r25, 0x47	; 71
    3ad8:	89 2f       	mov	r24, r25
    3ada:	8f 93       	push	r24
    3adc:	87 e2       	ldi	r24, 0x27	; 39
    3ade:	97 e4       	ldi	r25, 0x47	; 71
    3ae0:	8f 93       	push	r24
    3ae2:	0e 94 48 7c 	call	0xf890	; 0xf890 <sprintf>
    3ae6:	0f 90       	pop	r0
    3ae8:	0f 90       	pop	r0
    3aea:	0f 90       	pop	r0
    3aec:	0f 90       	pop	r0
    3aee:	0f 90       	pop	r0
    3af0:	0f 90       	pop	r0
    3af2:	09 c0       	rjmp	.+18     	; 0x3b06 <_Z19handleSerialBusMsgsv+0x78c>
    3af4:	85 e0       	ldi	r24, 0x05	; 5
    3af6:	e3 ed       	ldi	r30, 0xD3	; 211
    3af8:	f0 e4       	ldi	r31, 0x40	; 64
    3afa:	a7 e2       	ldi	r26, 0x27	; 39
    3afc:	b7 e4       	ldi	r27, 0x47	; 71
    3afe:	01 90       	ld	r0, Z+
    3b00:	0d 92       	st	X+, r0
    3b02:	8a 95       	dec	r24
    3b04:	e1 f7       	brne	.-8      	; 0x3afe <_Z19handleSerialBusMsgsv+0x784>
    3b06:	87 e2       	ldi	r24, 0x27	; 39
    3b08:	97 e4       	ldi	r25, 0x47	; 71
    3b0a:	0e 94 13 64 	call	0xc826	; 0xc826 <sb_send_string>
    3b0e:	88 c3       	rjmp	.+1808   	; 0x4220 <__DATA_REGION_LENGTH__+0x220>
    3b10:	8e 81       	ldd	r24, Y+6	; 0x06
    3b12:	9f 81       	ldd	r25, Y+7	; 0x07
    3b14:	fc 01       	movw	r30, r24
    3b16:	83 81       	ldd	r24, Z+3	; 0x03
    3b18:	88 23       	and	r24, r24
    3b1a:	51 f1       	breq	.+84     	; 0x3b70 <_Z19handleSerialBusMsgsv+0x7f6>
    3b1c:	8e 81       	ldd	r24, Y+6	; 0x06
    3b1e:	9f 81       	ldd	r25, Y+7	; 0x07
    3b20:	03 96       	adiw	r24, 0x03	; 3
    3b22:	48 e0       	ldi	r20, 0x08	; 8
    3b24:	50 e0       	ldi	r21, 0x00	; 0
    3b26:	bc 01       	movw	r22, r24
    3b28:	87 e2       	ldi	r24, 0x27	; 39
    3b2a:	97 e4       	ldi	r25, 0x47	; 71
    3b2c:	0e 94 1c 7c 	call	0xf838	; 0xf838 <strncpy>
    3b30:	10 92 2f 47 	sts	0x472F, r1	; 0x80472f <_ZL9g_tempStr+0x8>
    3b34:	87 e2       	ldi	r24, 0x27	; 39
    3b36:	97 e4       	ldi	r25, 0x47	; 71
    3b38:	0e 94 ca 73 	call	0xe794	; 0xe794 <_Z11only_digitsPc>
    3b3c:	88 23       	and	r24, r24
    3b3e:	41 f0       	breq	.+16     	; 0x3b50 <_Z19handleSerialBusMsgsv+0x7d6>
    3b40:	87 e2       	ldi	r24, 0x27	; 39
    3b42:	97 e4       	ldi	r25, 0x47	; 71
    3b44:	0e 94 13 7c 	call	0xf826	; 0xf826 <strlen>
    3b48:	04 97       	sbiw	r24, 0x04	; 4
    3b4a:	10 f0       	brcs	.+4      	; 0x3b50 <_Z19handleSerialBusMsgsv+0x7d6>
    3b4c:	81 e0       	ldi	r24, 0x01	; 1
    3b4e:	01 c0       	rjmp	.+2      	; 0x3b52 <_Z19handleSerialBusMsgsv+0x7d8>
    3b50:	80 e0       	ldi	r24, 0x00	; 0
    3b52:	88 23       	and	r24, r24
    3b54:	69 f0       	breq	.+26     	; 0x3b70 <_Z19handleSerialBusMsgsv+0x7f6>
    3b56:	67 e2       	ldi	r22, 0x27	; 39
    3b58:	77 e4       	ldi	r23, 0x47	; 71
    3b5a:	8b eb       	ldi	r24, 0xBB	; 187
    3b5c:	97 e4       	ldi	r25, 0x47	; 71
    3b5e:	0e 94 0c 7c 	call	0xf818	; 0xf818 <strcpy>
    3b62:	4b eb       	ldi	r20, 0xBB	; 187
    3b64:	57 e4       	ldi	r21, 0x47	; 71
    3b66:	64 e3       	ldi	r22, 0x34	; 52
    3b68:	89 eb       	ldi	r24, 0xB9	; 185
    3b6a:	97 e4       	ldi	r25, 0x47	; 71
    3b6c:	0e 94 c1 46 	call	0x8d82	; 0x8d82 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
    3b70:	8b eb       	ldi	r24, 0xBB	; 187
    3b72:	97 e4       	ldi	r25, 0x47	; 71
    3b74:	89 2f       	mov	r24, r25
    3b76:	8f 93       	push	r24
    3b78:	8b eb       	ldi	r24, 0xBB	; 187
    3b7a:	97 e4       	ldi	r25, 0x47	; 71
    3b7c:	8f 93       	push	r24
    3b7e:	81 ef       	ldi	r24, 0xF1	; 241
    3b80:	90 e4       	ldi	r25, 0x40	; 64
    3b82:	89 2f       	mov	r24, r25
    3b84:	8f 93       	push	r24
    3b86:	81 ef       	ldi	r24, 0xF1	; 241
    3b88:	90 e4       	ldi	r25, 0x40	; 64
    3b8a:	8f 93       	push	r24
    3b8c:	87 e2       	ldi	r24, 0x27	; 39
    3b8e:	97 e4       	ldi	r25, 0x47	; 71
    3b90:	89 2f       	mov	r24, r25
    3b92:	8f 93       	push	r24
    3b94:	87 e2       	ldi	r24, 0x27	; 39
    3b96:	97 e4       	ldi	r25, 0x47	; 71
    3b98:	8f 93       	push	r24
    3b9a:	0e 94 48 7c 	call	0xf890	; 0xf890 <sprintf>
    3b9e:	0f 90       	pop	r0
    3ba0:	0f 90       	pop	r0
    3ba2:	0f 90       	pop	r0
    3ba4:	0f 90       	pop	r0
    3ba6:	0f 90       	pop	r0
    3ba8:	0f 90       	pop	r0
    3baa:	87 e2       	ldi	r24, 0x27	; 39
    3bac:	97 e4       	ldi	r25, 0x47	; 71
    3bae:	0e 94 13 64 	call	0xc826	; 0xc826 <sb_send_string>
    3bb2:	36 c3       	rjmp	.+1644   	; 0x4220 <__DATA_REGION_LENGTH__+0x220>
    3bb4:	1d 82       	std	Y+5, r1	; 0x05
    3bb6:	80 e0       	ldi	r24, 0x00	; 0
    3bb8:	90 e0       	ldi	r25, 0x00	; 0
    3bba:	0e 94 56 06 	call	0xcac	; 0xcac <time>
    3bbe:	dc 01       	movw	r26, r24
    3bc0:	cb 01       	movw	r24, r22
    3bc2:	8a 8f       	std	Y+26, r24	; 0x1a
    3bc4:	9b 8f       	std	Y+27, r25	; 0x1b
    3bc6:	ac 8f       	std	Y+28, r26	; 0x1c
    3bc8:	bd 8f       	std	Y+29, r27	; 0x1d
    3bca:	8e 81       	ldd	r24, Y+6	; 0x06
    3bcc:	9f 81       	ldd	r25, Y+7	; 0x07
    3bce:	fc 01       	movw	r30, r24
    3bd0:	83 81       	ldd	r24, Z+3	; 0x03
    3bd2:	88 23       	and	r24, r24
    3bd4:	39 f0       	breq	.+14     	; 0x3be4 <_Z19handleSerialBusMsgsv+0x86a>
    3bd6:	8e 81       	ldd	r24, Y+6	; 0x06
    3bd8:	9f 81       	ldd	r25, Y+7	; 0x07
    3bda:	fc 01       	movw	r30, r24
    3bdc:	83 81       	ldd	r24, Z+3	; 0x03
    3bde:	84 35       	cpi	r24, 0x54	; 84
    3be0:	09 f0       	breq	.+2      	; 0x3be4 <_Z19handleSerialBusMsgsv+0x86a>
    3be2:	8e c1       	rjmp	.+796    	; 0x3f00 <_Z19handleSerialBusMsgsv+0xb86>
    3be4:	8e 81       	ldd	r24, Y+6	; 0x06
    3be6:	9f 81       	ldd	r25, Y+7	; 0x07
    3be8:	fc 01       	movw	r30, r24
    3bea:	87 89       	ldd	r24, Z+23	; 0x17
    3bec:	88 23       	and	r24, r24
    3bee:	09 f4       	brne	.+2      	; 0x3bf2 <_Z19handleSerialBusMsgsv+0x878>
    3bf0:	83 c0       	rjmp	.+262    	; 0x3cf8 <_Z19handleSerialBusMsgsv+0x97e>
    3bf2:	8e 81       	ldd	r24, Y+6	; 0x06
    3bf4:	9f 81       	ldd	r25, Y+7	; 0x07
    3bf6:	47 96       	adiw	r24, 0x17	; 23
    3bf8:	4c e0       	ldi	r20, 0x0C	; 12
    3bfa:	50 e0       	ldi	r21, 0x00	; 0
    3bfc:	bc 01       	movw	r22, r24
    3bfe:	87 e2       	ldi	r24, 0x27	; 39
    3c00:	97 e4       	ldi	r25, 0x47	; 71
    3c02:	0e 94 1c 7c 	call	0xf838	; 0xf838 <strncpy>
    3c06:	10 92 33 47 	sts	0x4733, r1	; 0x804733 <_ZL9g_tempStr+0xc>
    3c0a:	80 e0       	ldi	r24, 0x00	; 0
    3c0c:	90 e0       	ldi	r25, 0x00	; 0
    3c0e:	0e 94 56 06 	call	0xcac	; 0xcac <time>
    3c12:	dc 01       	movw	r26, r24
    3c14:	cb 01       	movw	r24, r22
    3c16:	9e 01       	movw	r18, r28
    3c18:	20 5a       	subi	r18, 0xA0	; 160
    3c1a:	3f 4f       	sbci	r19, 0xFF	; 255
    3c1c:	f9 01       	movw	r30, r18
    3c1e:	80 83       	st	Z, r24
    3c20:	91 83       	std	Z+1, r25	; 0x01
    3c22:	a2 83       	std	Z+2, r26	; 0x02
    3c24:	b3 83       	std	Z+3, r27	; 0x03
    3c26:	80 91 ba 47 	lds	r24, 0x47BA	; 0x8047ba <g_utc_offset>
    3c2a:	81 95       	neg	r24
    3c2c:	28 2f       	mov	r18, r24
    3c2e:	ce 01       	movw	r24, r28
    3c30:	80 5a       	subi	r24, 0xA0	; 160
    3c32:	9f 4f       	sbci	r25, 0xFF	; 255
    3c34:	42 2f       	mov	r20, r18
    3c36:	bc 01       	movw	r22, r24
    3c38:	87 e2       	ldi	r24, 0x27	; 39
    3c3a:	97 e4       	ldi	r25, 0x47	; 71
    3c3c:	0e 94 af 30 	call	0x615e	; 0x615e <_Z18validateTimeStringPcPma>
    3c40:	dc 01       	movw	r26, r24
    3c42:	cb 01       	movw	r24, r22
    3c44:	8e a3       	std	Y+38, r24	; 0x26
    3c46:	9f a3       	std	Y+39, r25	; 0x27
    3c48:	a8 a7       	std	Y+40, r26	; 0x28
    3c4a:	b9 a7       	std	Y+41, r27	; 0x29
    3c4c:	8e a1       	ldd	r24, Y+38	; 0x26
    3c4e:	9f a1       	ldd	r25, Y+39	; 0x27
    3c50:	a8 a5       	ldd	r26, Y+40	; 0x28
    3c52:	b9 a5       	ldd	r27, Y+41	; 0x29
    3c54:	89 2b       	or	r24, r25
    3c56:	8a 2b       	or	r24, r26
    3c58:	8b 2b       	or	r24, r27
    3c5a:	09 f4       	brne	.+2      	; 0x3c5e <_Z19handleSerialBusMsgsv+0x8e4>
    3c5c:	4e c1       	rjmp	.+668    	; 0x3efa <_Z19handleSerialBusMsgsv+0xb80>
    3c5e:	60 e0       	ldi	r22, 0x00	; 0
    3c60:	87 e2       	ldi	r24, 0x27	; 39
    3c62:	97 e4       	ldi	r25, 0x47	; 71
    3c64:	0e 94 9c 42 	call	0x8538	; 0x8538 <ds3231_set_date_time_arducon>
    3c68:	8a a7       	std	Y+42, r24	; 0x2a
    3c6a:	8a a5       	ldd	r24, Y+42	; 0x2a
    3c6c:	88 23       	and	r24, r24
    3c6e:	51 f0       	breq	.+20     	; 0x3c84 <_Z19handleSerialBusMsgsv+0x90a>
    3c70:	88 e2       	ldi	r24, 0x28	; 40
    3c72:	e9 ef       	ldi	r30, 0xF9	; 249
    3c74:	f0 e4       	ldi	r31, 0x40	; 64
    3c76:	a7 e2       	ldi	r26, 0x27	; 39
    3c78:	b7 e4       	ldi	r27, 0x47	; 71
    3c7a:	01 90       	ld	r0, Z+
    3c7c:	0d 92       	st	X+, r0
    3c7e:	8a 95       	dec	r24
    3c80:	e1 f7       	brne	.-8      	; 0x3c7a <_Z19handleSerialBusMsgsv+0x900>
    3c82:	3b c1       	rjmp	.+630    	; 0x3efa <_Z19handleSerialBusMsgsv+0xb80>
    3c84:	80 e0       	ldi	r24, 0x00	; 0
    3c86:	90 e0       	ldi	r25, 0x00	; 0
    3c88:	0e 94 c2 40 	call	0x8184	; 0x8184 <ds3231_get_epoch>
    3c8c:	dc 01       	movw	r26, r24
    3c8e:	cb 01       	movw	r24, r22
    3c90:	bc 01       	movw	r22, r24
    3c92:	cd 01       	movw	r24, r26
    3c94:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <set_system_time>
    3c98:	ce 01       	movw	r24, r28
    3c9a:	80 5a       	subi	r24, 0xA0	; 160
    3c9c:	9f 4f       	sbci	r25, 0xFF	; 255
    3c9e:	fc 01       	movw	r30, r24
    3ca0:	80 81       	ld	r24, Z
    3ca2:	91 81       	ldd	r25, Z+1	; 0x01
    3ca4:	a2 81       	ldd	r26, Z+2	; 0x02
    3ca6:	b3 81       	ldd	r27, Z+3	; 0x03
    3ca8:	ae 01       	movw	r20, r28
    3caa:	43 59       	subi	r20, 0x93	; 147
    3cac:	5f 4f       	sbci	r21, 0xFF	; 255
    3cae:	22 e3       	ldi	r18, 0x32	; 50
    3cb0:	30 e0       	ldi	r19, 0x00	; 0
    3cb2:	bc 01       	movw	r22, r24
    3cb4:	cd 01       	movw	r24, r26
    3cb6:	0e 94 d0 45 	call	0x8ba0	; 0x8ba0 <convertEpochToTimeString>
    3cba:	29 2f       	mov	r18, r25
    3cbc:	2f 93       	push	r18
    3cbe:	8f 93       	push	r24
    3cc0:	81 e2       	ldi	r24, 0x21	; 33
    3cc2:	91 e4       	ldi	r25, 0x41	; 65
    3cc4:	89 2f       	mov	r24, r25
    3cc6:	8f 93       	push	r24
    3cc8:	81 e2       	ldi	r24, 0x21	; 33
    3cca:	91 e4       	ldi	r25, 0x41	; 65
    3ccc:	8f 93       	push	r24
    3cce:	87 e2       	ldi	r24, 0x27	; 39
    3cd0:	97 e4       	ldi	r25, 0x47	; 71
    3cd2:	89 2f       	mov	r24, r25
    3cd4:	8f 93       	push	r24
    3cd6:	87 e2       	ldi	r24, 0x27	; 39
    3cd8:	97 e4       	ldi	r25, 0x47	; 71
    3cda:	8f 93       	push	r24
    3cdc:	0e 94 48 7c 	call	0xf890	; 0xf890 <sprintf>
    3ce0:	0f 90       	pop	r0
    3ce2:	0f 90       	pop	r0
    3ce4:	0f 90       	pop	r0
    3ce6:	0f 90       	pop	r0
    3ce8:	0f 90       	pop	r0
    3cea:	0f 90       	pop	r0
    3cec:	60 e0       	ldi	r22, 0x00	; 0
    3cee:	80 e0       	ldi	r24, 0x00	; 0
    3cf0:	90 e0       	ldi	r25, 0x00	; 0
    3cf2:	0e 94 c8 2d 	call	0x5b90	; 0x5b90 <_Z11setupForFoxP5Fox_t13EventAction_t>
    3cf6:	01 c1       	rjmp	.+514    	; 0x3efa <_Z19handleSerialBusMsgsv+0xb80>
    3cf8:	ce 01       	movw	r24, r28
    3cfa:	8c 59       	subi	r24, 0x9C	; 156
    3cfc:	9f 4f       	sbci	r25, 0xFF	; 255
    3cfe:	0e 94 c2 40 	call	0x8184	; 0x8184 <ds3231_get_epoch>
    3d02:	ce 01       	movw	r24, r28
    3d04:	8c 59       	subi	r24, 0x9C	; 156
    3d06:	9f 4f       	sbci	r25, 0xFF	; 255
    3d08:	fc 01       	movw	r30, r24
    3d0a:	80 81       	ld	r24, Z
    3d0c:	88 23       	and	r24, r24
    3d0e:	51 f0       	breq	.+20     	; 0x3d24 <_Z19handleSerialBusMsgsv+0x9aa>
    3d10:	88 e2       	ldi	r24, 0x28	; 40
    3d12:	e9 ef       	ldi	r30, 0xF9	; 249
    3d14:	f0 e4       	ldi	r31, 0x40	; 64
    3d16:	a7 e2       	ldi	r26, 0x27	; 39
    3d18:	b7 e4       	ldi	r27, 0x47	; 71
    3d1a:	01 90       	ld	r0, Z+
    3d1c:	0d 92       	st	X+, r0
    3d1e:	8a 95       	dec	r24
    3d20:	e1 f7       	brne	.-8      	; 0x3d1a <_Z19handleSerialBusMsgsv+0x9a0>
    3d22:	eb c0       	rjmp	.+470    	; 0x3efa <_Z19handleSerialBusMsgsv+0xb80>
    3d24:	ae 01       	movw	r20, r28
    3d26:	43 59       	subi	r20, 0x93	; 147
    3d28:	5f 4f       	sbci	r21, 0xFF	; 255
    3d2a:	8a 8d       	ldd	r24, Y+26	; 0x1a
    3d2c:	9b 8d       	ldd	r25, Y+27	; 0x1b
    3d2e:	ac 8d       	ldd	r26, Y+28	; 0x1c
    3d30:	bd 8d       	ldd	r27, Y+29	; 0x1d
    3d32:	22 e3       	ldi	r18, 0x32	; 50
    3d34:	30 e0       	ldi	r19, 0x00	; 0
    3d36:	bc 01       	movw	r22, r24
    3d38:	cd 01       	movw	r24, r26
    3d3a:	0e 94 d0 45 	call	0x8ba0	; 0x8ba0 <convertEpochToTimeString>
    3d3e:	29 2f       	mov	r18, r25
    3d40:	2f 93       	push	r18
    3d42:	8f 93       	push	r24
    3d44:	8b e2       	ldi	r24, 0x2B	; 43
    3d46:	91 e4       	ldi	r25, 0x41	; 65
    3d48:	89 2f       	mov	r24, r25
    3d4a:	8f 93       	push	r24
    3d4c:	8b e2       	ldi	r24, 0x2B	; 43
    3d4e:	91 e4       	ldi	r25, 0x41	; 65
    3d50:	8f 93       	push	r24
    3d52:	87 e2       	ldi	r24, 0x27	; 39
    3d54:	97 e4       	ldi	r25, 0x47	; 71
    3d56:	89 2f       	mov	r24, r25
    3d58:	8f 93       	push	r24
    3d5a:	87 e2       	ldi	r24, 0x27	; 39
    3d5c:	97 e4       	ldi	r25, 0x47	; 71
    3d5e:	8f 93       	push	r24
    3d60:	0e 94 48 7c 	call	0xf890	; 0xf890 <sprintf>
    3d64:	0f 90       	pop	r0
    3d66:	0f 90       	pop	r0
    3d68:	0f 90       	pop	r0
    3d6a:	0f 90       	pop	r0
    3d6c:	0f 90       	pop	r0
    3d6e:	0f 90       	pop	r0
    3d70:	87 e2       	ldi	r24, 0x27	; 39
    3d72:	97 e4       	ldi	r25, 0x47	; 71
    3d74:	0e 94 13 64 	call	0xc826	; 0xc826 <sb_send_string>
    3d78:	80 91 9a 47 	lds	r24, 0x479A	; 0x80479a <g_event_start_epoch>
    3d7c:	90 91 9b 47 	lds	r25, 0x479B	; 0x80479b <g_event_start_epoch+0x1>
    3d80:	a0 91 9c 47 	lds	r26, 0x479C	; 0x80479c <g_event_start_epoch+0x2>
    3d84:	b0 91 9d 47 	lds	r27, 0x479D	; 0x80479d <g_event_start_epoch+0x3>
    3d88:	ae 01       	movw	r20, r28
    3d8a:	43 59       	subi	r20, 0x93	; 147
    3d8c:	5f 4f       	sbci	r21, 0xFF	; 255
    3d8e:	22 e3       	ldi	r18, 0x32	; 50
    3d90:	30 e0       	ldi	r19, 0x00	; 0
    3d92:	bc 01       	movw	r22, r24
    3d94:	cd 01       	movw	r24, r26
    3d96:	0e 94 d0 45 	call	0x8ba0	; 0x8ba0 <convertEpochToTimeString>
    3d9a:	29 2f       	mov	r18, r25
    3d9c:	2f 93       	push	r18
    3d9e:	8f 93       	push	r24
    3da0:	87 e3       	ldi	r24, 0x37	; 55
    3da2:	91 e4       	ldi	r25, 0x41	; 65
    3da4:	89 2f       	mov	r24, r25
    3da6:	8f 93       	push	r24
    3da8:	87 e3       	ldi	r24, 0x37	; 55
    3daa:	91 e4       	ldi	r25, 0x41	; 65
    3dac:	8f 93       	push	r24
    3dae:	87 e2       	ldi	r24, 0x27	; 39
    3db0:	97 e4       	ldi	r25, 0x47	; 71
    3db2:	89 2f       	mov	r24, r25
    3db4:	8f 93       	push	r24
    3db6:	87 e2       	ldi	r24, 0x27	; 39
    3db8:	97 e4       	ldi	r25, 0x47	; 71
    3dba:	8f 93       	push	r24
    3dbc:	0e 94 48 7c 	call	0xf890	; 0xf890 <sprintf>
    3dc0:	0f 90       	pop	r0
    3dc2:	0f 90       	pop	r0
    3dc4:	0f 90       	pop	r0
    3dc6:	0f 90       	pop	r0
    3dc8:	0f 90       	pop	r0
    3dca:	0f 90       	pop	r0
    3dcc:	87 e2       	ldi	r24, 0x27	; 39
    3dce:	97 e4       	ldi	r25, 0x47	; 71
    3dd0:	0e 94 13 64 	call	0xc826	; 0xc826 <sb_send_string>
    3dd4:	80 91 9e 47 	lds	r24, 0x479E	; 0x80479e <g_event_finish_epoch>
    3dd8:	90 91 9f 47 	lds	r25, 0x479F	; 0x80479f <g_event_finish_epoch+0x1>
    3ddc:	a0 91 a0 47 	lds	r26, 0x47A0	; 0x8047a0 <g_event_finish_epoch+0x2>
    3de0:	b0 91 a1 47 	lds	r27, 0x47A1	; 0x8047a1 <g_event_finish_epoch+0x3>
    3de4:	ae 01       	movw	r20, r28
    3de6:	43 59       	subi	r20, 0x93	; 147
    3de8:	5f 4f       	sbci	r21, 0xFF	; 255
    3dea:	22 e3       	ldi	r18, 0x32	; 50
    3dec:	30 e0       	ldi	r19, 0x00	; 0
    3dee:	bc 01       	movw	r22, r24
    3df0:	cd 01       	movw	r24, r26
    3df2:	0e 94 d0 45 	call	0x8ba0	; 0x8ba0 <convertEpochToTimeString>
    3df6:	29 2f       	mov	r18, r25
    3df8:	2f 93       	push	r18
    3dfa:	8f 93       	push	r24
    3dfc:	83 e4       	ldi	r24, 0x43	; 67
    3dfe:	91 e4       	ldi	r25, 0x41	; 65
    3e00:	89 2f       	mov	r24, r25
    3e02:	8f 93       	push	r24
    3e04:	83 e4       	ldi	r24, 0x43	; 67
    3e06:	91 e4       	ldi	r25, 0x41	; 65
    3e08:	8f 93       	push	r24
    3e0a:	87 e2       	ldi	r24, 0x27	; 39
    3e0c:	97 e4       	ldi	r25, 0x47	; 71
    3e0e:	89 2f       	mov	r24, r25
    3e10:	8f 93       	push	r24
    3e12:	87 e2       	ldi	r24, 0x27	; 39
    3e14:	97 e4       	ldi	r25, 0x47	; 71
    3e16:	8f 93       	push	r24
    3e18:	0e 94 48 7c 	call	0xf890	; 0xf890 <sprintf>
    3e1c:	0f 90       	pop	r0
    3e1e:	0f 90       	pop	r0
    3e20:	0f 90       	pop	r0
    3e22:	0f 90       	pop	r0
    3e24:	0f 90       	pop	r0
    3e26:	0f 90       	pop	r0
    3e28:	87 e2       	ldi	r24, 0x27	; 39
    3e2a:	97 e4       	ldi	r25, 0x47	; 71
    3e2c:	0e 94 13 64 	call	0xc826	; 0xc826 <sb_send_string>
    3e30:	0e 94 87 33 	call	0x670e	; 0x670e <_Z23clockConfigurationCheckv>
    3e34:	8b a7       	std	Y+43, r24	; 0x2b
    3e36:	8b a5       	ldd	r24, Y+43	; 0x2b
    3e38:	81 30       	cpi	r24, 0x01	; 1
    3e3a:	31 f0       	breq	.+12     	; 0x3e48 <_Z19handleSerialBusMsgsv+0xace>
    3e3c:	8b a5       	ldd	r24, Y+43	; 0x2b
    3e3e:	85 30       	cpi	r24, 0x05	; 5
    3e40:	19 f0       	breq	.+6      	; 0x3e48 <_Z19handleSerialBusMsgsv+0xace>
    3e42:	0e 94 21 34 	call	0x6842	; 0x6842 <_Z18reportConfigErrorsv>
    3e46:	59 c0       	rjmp	.+178    	; 0x3efa <_Z19handleSerialBusMsgsv+0xb80>
    3e48:	20 91 9a 47 	lds	r18, 0x479A	; 0x80479a <g_event_start_epoch>
    3e4c:	30 91 9b 47 	lds	r19, 0x479B	; 0x80479b <g_event_start_epoch+0x1>
    3e50:	40 91 9c 47 	lds	r20, 0x479C	; 0x80479c <g_event_start_epoch+0x2>
    3e54:	50 91 9d 47 	lds	r21, 0x479D	; 0x80479d <g_event_start_epoch+0x3>
    3e58:	8a 8d       	ldd	r24, Y+26	; 0x1a
    3e5a:	9b 8d       	ldd	r25, Y+27	; 0x1b
    3e5c:	ac 8d       	ldd	r26, Y+28	; 0x1c
    3e5e:	bd 8d       	ldd	r27, Y+29	; 0x1d
    3e60:	0f 2e       	mov	r0, r31
    3e62:	ff e4       	ldi	r31, 0x4F	; 79
    3e64:	ef 2e       	mov	r14, r31
    3e66:	f1 e4       	ldi	r31, 0x41	; 65
    3e68:	ff 2e       	mov	r15, r31
    3e6a:	f0 2d       	mov	r31, r0
    3e6c:	0c e5       	ldi	r16, 0x5C	; 92
    3e6e:	11 e4       	ldi	r17, 0x41	; 65
    3e70:	bc 01       	movw	r22, r24
    3e72:	cd 01       	movw	r24, r26
    3e74:	0e 94 e5 31 	call	0x63ca	; 0x63ca <_Z14reportTimeTillmmPKcS0_>
    3e78:	20 91 9e 47 	lds	r18, 0x479E	; 0x80479e <g_event_finish_epoch>
    3e7c:	30 91 9f 47 	lds	r19, 0x479F	; 0x80479f <g_event_finish_epoch+0x1>
    3e80:	40 91 a0 47 	lds	r20, 0x47A0	; 0x8047a0 <g_event_finish_epoch+0x2>
    3e84:	50 91 a1 47 	lds	r21, 0x47A1	; 0x8047a1 <g_event_finish_epoch+0x3>
    3e88:	80 91 9a 47 	lds	r24, 0x479A	; 0x80479a <g_event_start_epoch>
    3e8c:	90 91 9b 47 	lds	r25, 0x479B	; 0x80479b <g_event_start_epoch+0x1>
    3e90:	a0 91 9c 47 	lds	r26, 0x479C	; 0x80479c <g_event_start_epoch+0x2>
    3e94:	b0 91 9d 47 	lds	r27, 0x479D	; 0x80479d <g_event_start_epoch+0x3>
    3e98:	e1 2c       	mov	r14, r1
    3e9a:	f1 2c       	mov	r15, r1
    3e9c:	08 e6       	ldi	r16, 0x68	; 104
    3e9e:	11 e4       	ldi	r17, 0x41	; 65
    3ea0:	bc 01       	movw	r22, r24
    3ea2:	cd 01       	movw	r24, r26
    3ea4:	0e 94 e5 31 	call	0x63ca	; 0x63ca <_Z14reportTimeTillmmPKcS0_>
    3ea8:	20 91 9a 47 	lds	r18, 0x479A	; 0x80479a <g_event_start_epoch>
    3eac:	30 91 9b 47 	lds	r19, 0x479B	; 0x80479b <g_event_start_epoch+0x1>
    3eb0:	40 91 9c 47 	lds	r20, 0x479C	; 0x80479c <g_event_start_epoch+0x2>
    3eb4:	50 91 9d 47 	lds	r21, 0x479D	; 0x80479d <g_event_start_epoch+0x3>
    3eb8:	61 e0       	ldi	r22, 0x01	; 1
    3eba:	8a 8d       	ldd	r24, Y+26	; 0x1a
    3ebc:	9b 8d       	ldd	r25, Y+27	; 0x1b
    3ebe:	ac 8d       	ldd	r26, Y+28	; 0x1c
    3ec0:	bd 8d       	ldd	r27, Y+29	; 0x1d
    3ec2:	28 17       	cp	r18, r24
    3ec4:	39 07       	cpc	r19, r25
    3ec6:	4a 07       	cpc	r20, r26
    3ec8:	5b 07       	cpc	r21, r27
    3eca:	08 f0       	brcs	.+2      	; 0x3ece <_Z19handleSerialBusMsgsv+0xb54>
    3ecc:	60 e0       	ldi	r22, 0x00	; 0
    3ece:	66 23       	and	r22, r22
    3ed0:	a1 f0       	breq	.+40     	; 0x3efa <_Z19handleSerialBusMsgsv+0xb80>
    3ed2:	20 91 9e 47 	lds	r18, 0x479E	; 0x80479e <g_event_finish_epoch>
    3ed6:	30 91 9f 47 	lds	r19, 0x479F	; 0x80479f <g_event_finish_epoch+0x1>
    3eda:	40 91 a0 47 	lds	r20, 0x47A0	; 0x8047a0 <g_event_finish_epoch+0x2>
    3ede:	50 91 a1 47 	lds	r21, 0x47A1	; 0x8047a1 <g_event_finish_epoch+0x3>
    3ee2:	8a 8d       	ldd	r24, Y+26	; 0x1a
    3ee4:	9b 8d       	ldd	r25, Y+27	; 0x1b
    3ee6:	ac 8d       	ldd	r26, Y+28	; 0x1c
    3ee8:	bd 8d       	ldd	r27, Y+29	; 0x1d
    3eea:	e1 2c       	mov	r14, r1
    3eec:	f1 2c       	mov	r15, r1
    3eee:	00 e7       	ldi	r16, 0x70	; 112
    3ef0:	11 e4       	ldi	r17, 0x41	; 65
    3ef2:	bc 01       	movw	r22, r24
    3ef4:	cd 01       	movw	r24, r26
    3ef6:	0e 94 e5 31 	call	0x63ca	; 0x63ca <_Z14reportTimeTillmmPKcS0_>
    3efa:	81 e0       	ldi	r24, 0x01	; 1
    3efc:	8d 83       	std	Y+5, r24	; 0x05
    3efe:	6a c1       	rjmp	.+724    	; 0x41d4 <__DATA_REGION_LENGTH__+0x1d4>
    3f00:	8e 81       	ldd	r24, Y+6	; 0x06
    3f02:	9f 81       	ldd	r25, Y+7	; 0x07
    3f04:	fc 01       	movw	r30, r24
    3f06:	83 81       	ldd	r24, Z+3	; 0x03
    3f08:	83 35       	cpi	r24, 0x53	; 83
    3f0a:	09 f0       	breq	.+2      	; 0x3f0e <_Z19handleSerialBusMsgsv+0xb94>
    3f0c:	d8 c0       	rjmp	.+432    	; 0x40be <__DATA_REGION_LENGTH__+0xbe>
    3f0e:	8e 81       	ldd	r24, Y+6	; 0x06
    3f10:	9f 81       	ldd	r25, Y+7	; 0x07
    3f12:	47 96       	adiw	r24, 0x17	; 23
    3f14:	bc 01       	movw	r22, r24
    3f16:	87 e2       	ldi	r24, 0x27	; 39
    3f18:	97 e4       	ldi	r25, 0x47	; 71
    3f1a:	0e 94 0c 7c 	call	0xf818	; 0xf818 <strcpy>
    3f1e:	80 91 ba 47 	lds	r24, 0x47BA	; 0x8047ba <g_utc_offset>
    3f22:	81 95       	neg	r24
    3f24:	48 2f       	mov	r20, r24
    3f26:	6a e9       	ldi	r22, 0x9A	; 154
    3f28:	77 e4       	ldi	r23, 0x47	; 71
    3f2a:	87 e2       	ldi	r24, 0x27	; 39
    3f2c:	97 e4       	ldi	r25, 0x47	; 71
    3f2e:	0e 94 af 30 	call	0x615e	; 0x615e <_Z18validateTimeStringPcPma>
    3f32:	dc 01       	movw	r26, r24
    3f34:	cb 01       	movw	r24, r22
    3f36:	8e 8f       	std	Y+30, r24	; 0x1e
    3f38:	9f 8f       	std	Y+31, r25	; 0x1f
    3f3a:	a8 a3       	std	Y+32, r26	; 0x20
    3f3c:	b9 a3       	std	Y+33, r27	; 0x21
    3f3e:	8e 8d       	ldd	r24, Y+30	; 0x1e
    3f40:	9f 8d       	ldd	r25, Y+31	; 0x1f
    3f42:	a8 a1       	ldd	r26, Y+32	; 0x20
    3f44:	b9 a1       	ldd	r27, Y+33	; 0x21
    3f46:	89 2b       	or	r24, r25
    3f48:	8a 2b       	or	r24, r26
    3f4a:	8b 2b       	or	r24, r27
    3f4c:	09 f4       	brne	.+2      	; 0x3f50 <_Z19handleSerialBusMsgsv+0xbd6>
    3f4e:	8a c0       	rjmp	.+276    	; 0x4064 <__DATA_REGION_LENGTH__+0x64>
    3f50:	8e 8d       	ldd	r24, Y+30	; 0x1e
    3f52:	9f 8d       	ldd	r25, Y+31	; 0x1f
    3f54:	a8 a1       	ldd	r26, Y+32	; 0x20
    3f56:	b9 a1       	ldd	r27, Y+33	; 0x21
    3f58:	80 93 9a 47 	sts	0x479A, r24	; 0x80479a <g_event_start_epoch>
    3f5c:	90 93 9b 47 	sts	0x479B, r25	; 0x80479b <g_event_start_epoch+0x1>
    3f60:	a0 93 9c 47 	sts	0x479C, r26	; 0x80479c <g_event_start_epoch+0x2>
    3f64:	b0 93 9d 47 	sts	0x479D, r27	; 0x80479d <g_event_start_epoch+0x3>
    3f68:	4a e9       	ldi	r20, 0x9A	; 154
    3f6a:	57 e4       	ldi	r21, 0x47	; 71
    3f6c:	62 e0       	ldi	r22, 0x02	; 2
    3f6e:	89 eb       	ldi	r24, 0xB9	; 185
    3f70:	97 e4       	ldi	r25, 0x47	; 71
    3f72:	0e 94 c1 46 	call	0x8d82	; 0x8d82 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
    3f76:	80 91 9e 47 	lds	r24, 0x479E	; 0x80479e <g_event_finish_epoch>
    3f7a:	90 91 9f 47 	lds	r25, 0x479F	; 0x80479f <g_event_finish_epoch+0x1>
    3f7e:	a0 91 a0 47 	lds	r26, 0x47A0	; 0x8047a0 <g_event_finish_epoch+0x2>
    3f82:	b0 91 a1 47 	lds	r27, 0x47A1	; 0x8047a1 <g_event_finish_epoch+0x3>
    3f86:	9e 01       	movw	r18, r28
    3f88:	2b 59       	subi	r18, 0x9B	; 155
    3f8a:	3f 4f       	sbci	r19, 0xFF	; 255
    3f8c:	f9 01       	movw	r30, r18
    3f8e:	80 83       	st	Z, r24
    3f90:	91 83       	std	Z+1, r25	; 0x01
    3f92:	a2 83       	std	Z+2, r26	; 0x02
    3f94:	b3 83       	std	Z+3, r27	; 0x03
    3f96:	80 91 9a 47 	lds	r24, 0x479A	; 0x80479a <g_event_start_epoch>
    3f9a:	90 91 9b 47 	lds	r25, 0x479B	; 0x80479b <g_event_start_epoch+0x1>
    3f9e:	a0 91 9c 47 	lds	r26, 0x479C	; 0x80479c <g_event_start_epoch+0x2>
    3fa2:	b0 91 9d 47 	lds	r27, 0x479D	; 0x80479d <g_event_start_epoch+0x3>
    3fa6:	80 58       	subi	r24, 0x80	; 128
    3fa8:	9e 4a       	sbci	r25, 0xAE	; 174
    3faa:	ae 4f       	sbci	r26, 0xFE	; 254
    3fac:	bf 4f       	sbci	r27, 0xFF	; 255
    3fae:	9e 01       	movw	r18, r28
    3fb0:	27 59       	subi	r18, 0x97	; 151
    3fb2:	3f 4f       	sbci	r19, 0xFF	; 255
    3fb4:	f9 01       	movw	r30, r18
    3fb6:	80 83       	st	Z, r24
    3fb8:	91 83       	std	Z+1, r25	; 0x01
    3fba:	a2 83       	std	Z+2, r26	; 0x02
    3fbc:	b3 83       	std	Z+3, r27	; 0x03
    3fbe:	ce 01       	movw	r24, r28
    3fc0:	8b 59       	subi	r24, 0x9B	; 155
    3fc2:	9f 4f       	sbci	r25, 0xFF	; 255
    3fc4:	fc 01       	movw	r30, r24
    3fc6:	20 81       	ld	r18, Z
    3fc8:	31 81       	ldd	r19, Z+1	; 0x01
    3fca:	42 81       	ldd	r20, Z+2	; 0x02
    3fcc:	53 81       	ldd	r21, Z+3	; 0x03
    3fce:	ce 01       	movw	r24, r28
    3fd0:	87 59       	subi	r24, 0x97	; 151
    3fd2:	9f 4f       	sbci	r25, 0xFF	; 255
    3fd4:	fc 01       	movw	r30, r24
    3fd6:	80 81       	ld	r24, Z
    3fd8:	91 81       	ldd	r25, Z+1	; 0x01
    3fda:	a2 81       	ldd	r26, Z+2	; 0x02
    3fdc:	b3 81       	ldd	r27, Z+3	; 0x03
    3fde:	28 17       	cp	r18, r24
    3fe0:	39 07       	cpc	r19, r25
    3fe2:	4a 07       	cpc	r20, r26
    3fe4:	5b 07       	cpc	r21, r27
    3fe6:	48 f4       	brcc	.+18     	; 0x3ffa <_Z19handleSerialBusMsgsv+0xc80>
    3fe8:	ce 01       	movw	r24, r28
    3fea:	87 59       	subi	r24, 0x97	; 151
    3fec:	9f 4f       	sbci	r25, 0xFF	; 255
    3fee:	fc 01       	movw	r30, r24
    3ff0:	80 81       	ld	r24, Z
    3ff2:	91 81       	ldd	r25, Z+1	; 0x01
    3ff4:	a2 81       	ldd	r26, Z+2	; 0x02
    3ff6:	b3 81       	ldd	r27, Z+3	; 0x03
    3ff8:	08 c0       	rjmp	.+16     	; 0x400a <__DATA_REGION_LENGTH__+0xa>
    3ffa:	ce 01       	movw	r24, r28
    3ffc:	8b 59       	subi	r24, 0x9B	; 155
    3ffe:	9f 4f       	sbci	r25, 0xFF	; 255
    4000:	fc 01       	movw	r30, r24
    4002:	80 81       	ld	r24, Z
    4004:	91 81       	ldd	r25, Z+1	; 0x01
    4006:	a2 81       	ldd	r26, Z+2	; 0x02
    4008:	b3 81       	ldd	r27, Z+3	; 0x03
    400a:	80 93 9e 47 	sts	0x479E, r24	; 0x80479e <g_event_finish_epoch>
    400e:	90 93 9f 47 	sts	0x479F, r25	; 0x80479f <g_event_finish_epoch+0x1>
    4012:	a0 93 a0 47 	sts	0x47A0, r26	; 0x8047a0 <g_event_finish_epoch+0x2>
    4016:	b0 93 a1 47 	sts	0x47A1, r27	; 0x8047a1 <g_event_finish_epoch+0x3>
    401a:	4e e9       	ldi	r20, 0x9E	; 158
    401c:	57 e4       	ldi	r21, 0x47	; 71
    401e:	66 e0       	ldi	r22, 0x06	; 6
    4020:	89 eb       	ldi	r24, 0xB9	; 185
    4022:	97 e4       	ldi	r25, 0x47	; 71
    4024:	0e 94 c1 46 	call	0x8d82	; 0x8d82 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
    4028:	63 e0       	ldi	r22, 0x03	; 3
    402a:	80 e0       	ldi	r24, 0x00	; 0
    402c:	90 e0       	ldi	r25, 0x00	; 0
    402e:	0e 94 c8 2d 	call	0x5b90	; 0x5b90 <_Z11setupForFoxP5Fox_t13EventAction_t>
    4032:	80 e0       	ldi	r24, 0x00	; 0
    4034:	90 e0       	ldi	r25, 0x00	; 0
    4036:	0e 94 56 06 	call	0xcac	; 0xcac <time>
    403a:	9b 01       	movw	r18, r22
    403c:	ac 01       	movw	r20, r24
    403e:	80 91 9a 47 	lds	r24, 0x479A	; 0x80479a <g_event_start_epoch>
    4042:	90 91 9b 47 	lds	r25, 0x479B	; 0x80479b <g_event_start_epoch+0x1>
    4046:	a0 91 9c 47 	lds	r26, 0x479C	; 0x80479c <g_event_start_epoch+0x2>
    404a:	b0 91 9d 47 	lds	r27, 0x479D	; 0x80479d <g_event_start_epoch+0x3>
    404e:	61 e0       	ldi	r22, 0x01	; 1
    4050:	28 17       	cp	r18, r24
    4052:	39 07       	cpc	r19, r25
    4054:	4a 07       	cpc	r20, r26
    4056:	5b 07       	cpc	r21, r27
    4058:	08 f0       	brcs	.+2      	; 0x405c <__DATA_REGION_LENGTH__+0x5c>
    405a:	60 e0       	ldi	r22, 0x00	; 0
    405c:	66 23       	and	r22, r22
    405e:	11 f0       	breq	.+4      	; 0x4064 <__DATA_REGION_LENGTH__+0x64>
    4060:	0e 94 35 2d 	call	0x5a6a	; 0x5a6a <_Z18startEventUsingRTCv>
    4064:	80 91 9a 47 	lds	r24, 0x479A	; 0x80479a <g_event_start_epoch>
    4068:	90 91 9b 47 	lds	r25, 0x479B	; 0x80479b <g_event_start_epoch+0x1>
    406c:	a0 91 9c 47 	lds	r26, 0x479C	; 0x80479c <g_event_start_epoch+0x2>
    4070:	b0 91 9d 47 	lds	r27, 0x479D	; 0x80479d <g_event_start_epoch+0x3>
    4074:	ae 01       	movw	r20, r28
    4076:	43 59       	subi	r20, 0x93	; 147
    4078:	5f 4f       	sbci	r21, 0xFF	; 255
    407a:	22 e3       	ldi	r18, 0x32	; 50
    407c:	30 e0       	ldi	r19, 0x00	; 0
    407e:	bc 01       	movw	r22, r24
    4080:	cd 01       	movw	r24, r26
    4082:	0e 94 d0 45 	call	0x8ba0	; 0x8ba0 <convertEpochToTimeString>
    4086:	29 2f       	mov	r18, r25
    4088:	2f 93       	push	r18
    408a:	8f 93       	push	r24
    408c:	81 e8       	ldi	r24, 0x81	; 129
    408e:	91 e4       	ldi	r25, 0x41	; 65
    4090:	89 2f       	mov	r24, r25
    4092:	8f 93       	push	r24
    4094:	81 e8       	ldi	r24, 0x81	; 129
    4096:	91 e4       	ldi	r25, 0x41	; 65
    4098:	8f 93       	push	r24
    409a:	87 e2       	ldi	r24, 0x27	; 39
    409c:	97 e4       	ldi	r25, 0x47	; 71
    409e:	89 2f       	mov	r24, r25
    40a0:	8f 93       	push	r24
    40a2:	87 e2       	ldi	r24, 0x27	; 39
    40a4:	97 e4       	ldi	r25, 0x47	; 71
    40a6:	8f 93       	push	r24
    40a8:	0e 94 48 7c 	call	0xf890	; 0xf890 <sprintf>
    40ac:	0f 90       	pop	r0
    40ae:	0f 90       	pop	r0
    40b0:	0f 90       	pop	r0
    40b2:	0f 90       	pop	r0
    40b4:	0f 90       	pop	r0
    40b6:	0f 90       	pop	r0
    40b8:	81 e0       	ldi	r24, 0x01	; 1
    40ba:	8d 83       	std	Y+5, r24	; 0x05
    40bc:	8b c0       	rjmp	.+278    	; 0x41d4 <__DATA_REGION_LENGTH__+0x1d4>
    40be:	8e 81       	ldd	r24, Y+6	; 0x06
    40c0:	9f 81       	ldd	r25, Y+7	; 0x07
    40c2:	fc 01       	movw	r30, r24
    40c4:	83 81       	ldd	r24, Z+3	; 0x03
    40c6:	86 34       	cpi	r24, 0x46	; 70
    40c8:	09 f0       	breq	.+2      	; 0x40cc <__DATA_REGION_LENGTH__+0xcc>
    40ca:	7c c0       	rjmp	.+248    	; 0x41c4 <__DATA_REGION_LENGTH__+0x1c4>
    40cc:	8e 81       	ldd	r24, Y+6	; 0x06
    40ce:	9f 81       	ldd	r25, Y+7	; 0x07
    40d0:	47 96       	adiw	r24, 0x17	; 23
    40d2:	bc 01       	movw	r22, r24
    40d4:	87 e2       	ldi	r24, 0x27	; 39
    40d6:	97 e4       	ldi	r25, 0x47	; 71
    40d8:	0e 94 0c 7c 	call	0xf818	; 0xf818 <strcpy>
    40dc:	80 91 ba 47 	lds	r24, 0x47BA	; 0x8047ba <g_utc_offset>
    40e0:	81 95       	neg	r24
    40e2:	48 2f       	mov	r20, r24
    40e4:	6e e9       	ldi	r22, 0x9E	; 158
    40e6:	77 e4       	ldi	r23, 0x47	; 71
    40e8:	87 e2       	ldi	r24, 0x27	; 39
    40ea:	97 e4       	ldi	r25, 0x47	; 71
    40ec:	0e 94 af 30 	call	0x615e	; 0x615e <_Z18validateTimeStringPcPma>
    40f0:	dc 01       	movw	r26, r24
    40f2:	cb 01       	movw	r24, r22
    40f4:	8a a3       	std	Y+34, r24	; 0x22
    40f6:	9b a3       	std	Y+35, r25	; 0x23
    40f8:	ac a3       	std	Y+36, r26	; 0x24
    40fa:	bd a3       	std	Y+37, r27	; 0x25
    40fc:	8a a1       	ldd	r24, Y+34	; 0x22
    40fe:	9b a1       	ldd	r25, Y+35	; 0x23
    4100:	ac a1       	ldd	r26, Y+36	; 0x24
    4102:	bd a1       	ldd	r27, Y+37	; 0x25
    4104:	89 2b       	or	r24, r25
    4106:	8a 2b       	or	r24, r26
    4108:	8b 2b       	or	r24, r27
    410a:	79 f1       	breq	.+94     	; 0x416a <__DATA_REGION_LENGTH__+0x16a>
    410c:	8a a1       	ldd	r24, Y+34	; 0x22
    410e:	9b a1       	ldd	r25, Y+35	; 0x23
    4110:	ac a1       	ldd	r26, Y+36	; 0x24
    4112:	bd a1       	ldd	r27, Y+37	; 0x25
    4114:	80 93 9e 47 	sts	0x479E, r24	; 0x80479e <g_event_finish_epoch>
    4118:	90 93 9f 47 	sts	0x479F, r25	; 0x80479f <g_event_finish_epoch+0x1>
    411c:	a0 93 a0 47 	sts	0x47A0, r26	; 0x8047a0 <g_event_finish_epoch+0x2>
    4120:	b0 93 a1 47 	sts	0x47A1, r27	; 0x8047a1 <g_event_finish_epoch+0x3>
    4124:	4e e9       	ldi	r20, 0x9E	; 158
    4126:	57 e4       	ldi	r21, 0x47	; 71
    4128:	66 e0       	ldi	r22, 0x06	; 6
    412a:	89 eb       	ldi	r24, 0xB9	; 185
    412c:	97 e4       	ldi	r25, 0x47	; 71
    412e:	0e 94 c1 46 	call	0x8d82	; 0x8d82 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
    4132:	63 e0       	ldi	r22, 0x03	; 3
    4134:	80 e0       	ldi	r24, 0x00	; 0
    4136:	90 e0       	ldi	r25, 0x00	; 0
    4138:	0e 94 c8 2d 	call	0x5b90	; 0x5b90 <_Z11setupForFoxP5Fox_t13EventAction_t>
    413c:	20 91 9a 47 	lds	r18, 0x479A	; 0x80479a <g_event_start_epoch>
    4140:	30 91 9b 47 	lds	r19, 0x479B	; 0x80479b <g_event_start_epoch+0x1>
    4144:	40 91 9c 47 	lds	r20, 0x479C	; 0x80479c <g_event_start_epoch+0x2>
    4148:	50 91 9d 47 	lds	r21, 0x479D	; 0x80479d <g_event_start_epoch+0x3>
    414c:	61 e0       	ldi	r22, 0x01	; 1
    414e:	8a 8d       	ldd	r24, Y+26	; 0x1a
    4150:	9b 8d       	ldd	r25, Y+27	; 0x1b
    4152:	ac 8d       	ldd	r26, Y+28	; 0x1c
    4154:	bd 8d       	ldd	r27, Y+29	; 0x1d
    4156:	82 17       	cp	r24, r18
    4158:	93 07       	cpc	r25, r19
    415a:	a4 07       	cpc	r26, r20
    415c:	b5 07       	cpc	r27, r21
    415e:	08 f0       	brcs	.+2      	; 0x4162 <__DATA_REGION_LENGTH__+0x162>
    4160:	60 e0       	ldi	r22, 0x00	; 0
    4162:	66 23       	and	r22, r22
    4164:	11 f0       	breq	.+4      	; 0x416a <__DATA_REGION_LENGTH__+0x16a>
    4166:	0e 94 35 2d 	call	0x5a6a	; 0x5a6a <_Z18startEventUsingRTCv>
    416a:	80 91 9e 47 	lds	r24, 0x479E	; 0x80479e <g_event_finish_epoch>
    416e:	90 91 9f 47 	lds	r25, 0x479F	; 0x80479f <g_event_finish_epoch+0x1>
    4172:	a0 91 a0 47 	lds	r26, 0x47A0	; 0x8047a0 <g_event_finish_epoch+0x2>
    4176:	b0 91 a1 47 	lds	r27, 0x47A1	; 0x8047a1 <g_event_finish_epoch+0x3>
    417a:	ae 01       	movw	r20, r28
    417c:	43 59       	subi	r20, 0x93	; 147
    417e:	5f 4f       	sbci	r21, 0xFF	; 255
    4180:	22 e3       	ldi	r18, 0x32	; 50
    4182:	30 e0       	ldi	r19, 0x00	; 0
    4184:	bc 01       	movw	r22, r24
    4186:	cd 01       	movw	r24, r26
    4188:	0e 94 d0 45 	call	0x8ba0	; 0x8ba0 <convertEpochToTimeString>
    418c:	29 2f       	mov	r18, r25
    418e:	2f 93       	push	r18
    4190:	8f 93       	push	r24
    4192:	83 e4       	ldi	r24, 0x43	; 67
    4194:	91 e4       	ldi	r25, 0x41	; 65
    4196:	89 2f       	mov	r24, r25
    4198:	8f 93       	push	r24
    419a:	83 e4       	ldi	r24, 0x43	; 67
    419c:	91 e4       	ldi	r25, 0x41	; 65
    419e:	8f 93       	push	r24
    41a0:	87 e2       	ldi	r24, 0x27	; 39
    41a2:	97 e4       	ldi	r25, 0x47	; 71
    41a4:	89 2f       	mov	r24, r25
    41a6:	8f 93       	push	r24
    41a8:	87 e2       	ldi	r24, 0x27	; 39
    41aa:	97 e4       	ldi	r25, 0x47	; 71
    41ac:	8f 93       	push	r24
    41ae:	0e 94 48 7c 	call	0xf890	; 0xf890 <sprintf>
    41b2:	0f 90       	pop	r0
    41b4:	0f 90       	pop	r0
    41b6:	0f 90       	pop	r0
    41b8:	0f 90       	pop	r0
    41ba:	0f 90       	pop	r0
    41bc:	0f 90       	pop	r0
    41be:	81 e0       	ldi	r24, 0x01	; 1
    41c0:	8d 83       	std	Y+5, r24	; 0x05
    41c2:	08 c0       	rjmp	.+16     	; 0x41d4 <__DATA_REGION_LENGTH__+0x1d4>
    41c4:	8e 81       	ldd	r24, Y+6	; 0x06
    41c6:	9f 81       	ldd	r25, Y+7	; 0x07
    41c8:	fc 01       	movw	r30, r24
    41ca:	83 81       	ldd	r24, Z+3	; 0x03
    41cc:	8a 32       	cpi	r24, 0x2A	; 42
    41ce:	11 f4       	brne	.+4      	; 0x41d4 <__DATA_REGION_LENGTH__+0x1d4>
    41d0:	0e 94 e7 44 	call	0x89ce	; 0x89ce <ds3231_sync2nearestMinute>
    41d4:	8d 81       	ldd	r24, Y+5	; 0x05
    41d6:	88 23       	and	r24, r24
    41d8:	01 f1       	breq	.+64     	; 0x421a <__DATA_REGION_LENGTH__+0x21a>
    41da:	87 e2       	ldi	r24, 0x27	; 39
    41dc:	97 e4       	ldi	r25, 0x47	; 71
    41de:	0e 94 13 64 	call	0xc826	; 0xc826 <sb_send_string>
    41e2:	1b c0       	rjmp	.+54     	; 0x421a <__DATA_REGION_LENGTH__+0x21a>
    41e4:	8e 81       	ldd	r24, Y+6	; 0x06
    41e6:	9f 81       	ldd	r25, Y+7	; 0x07
    41e8:	fc 01       	movw	r30, r24
    41ea:	83 81       	ldd	r24, Z+3	; 0x03
    41ec:	83 34       	cpi	r24, 0x43	; 67
    41ee:	b9 f4       	brne	.+46     	; 0x421e <__DATA_REGION_LENGTH__+0x21e>
    41f0:	8e 81       	ldd	r24, Y+6	; 0x06
    41f2:	9f 81       	ldd	r25, Y+7	; 0x07
    41f4:	fc 01       	movw	r30, r24
    41f6:	87 89       	ldd	r24, Z+23	; 0x17
    41f8:	88 23       	and	r24, r24
    41fa:	89 f0       	breq	.+34     	; 0x421e <__DATA_REGION_LENGTH__+0x21e>
    41fc:	8e 81       	ldd	r24, Y+6	; 0x06
    41fe:	9f 81       	ldd	r25, Y+7	; 0x07
    4200:	47 96       	adiw	r24, 0x17	; 23
    4202:	0e 94 99 7b 	call	0xf732	; 0xf732 <atoi>
    4206:	8c a7       	std	Y+44, r24	; 0x2c
    4208:	9d a7       	std	Y+45, r25	; 0x2d
    420a:	09 c0       	rjmp	.+18     	; 0x421e <__DATA_REGION_LENGTH__+0x21e>
    420c:	8c e8       	ldi	r24, 0x8C	; 140
    420e:	91 e4       	ldi	r25, 0x41	; 65
    4210:	0e 94 13 64 	call	0xc826	; 0xc826 <sb_send_string>
    4214:	05 c0       	rjmp	.+10     	; 0x4220 <__DATA_REGION_LENGTH__+0x220>
    4216:	00 00       	nop
    4218:	03 c0       	rjmp	.+6      	; 0x4220 <__DATA_REGION_LENGTH__+0x220>
    421a:	00 00       	nop
    421c:	01 c0       	rjmp	.+2      	; 0x4220 <__DATA_REGION_LENGTH__+0x220>
    421e:	00 00       	nop
    4220:	8e 81       	ldd	r24, Y+6	; 0x06
    4222:	9f 81       	ldd	r25, Y+7	; 0x07
    4224:	fc 01       	movw	r30, r24
    4226:	11 82       	std	Z+1, r1	; 0x01
    4228:	12 82       	std	Z+2, r1	; 0x02
    422a:	0e 94 d6 63 	call	0xc7ac	; 0xc7ac <sb_send_NewPrompt>
    422e:	b1 c8       	rjmp	.-3742   	; 0x3392 <_Z19handleSerialBusMsgsv+0x18>
    4230:	00 00       	nop
    4232:	c2 56       	subi	r28, 0x62	; 98
    4234:	df 4f       	sbci	r29, 0xFF	; 255
    4236:	cd bf       	out	0x3d, r28	; 61
    4238:	de bf       	out	0x3e, r29	; 62
    423a:	df 91       	pop	r29
    423c:	cf 91       	pop	r28
    423e:	1f 91       	pop	r17
    4240:	0f 91       	pop	r16
    4242:	ff 90       	pop	r15
    4244:	ef 90       	pop	r14
    4246:	08 95       	ret

00004248 <_Z17handleLinkBusMsgsv>:
    4248:	0f 93       	push	r16
    424a:	1f 93       	push	r17
    424c:	cf 93       	push	r28
    424e:	df 93       	push	r29
    4250:	cd b7       	in	r28, 0x3d	; 61
    4252:	de b7       	in	r29, 0x3e	; 62
    4254:	af 97       	sbiw	r28, 0x2f	; 47
    4256:	cd bf       	out	0x3d, r28	; 61
    4258:	de bf       	out	0x3e, r29	; 62
    425a:	81 e0       	ldi	r24, 0x01	; 1
    425c:	89 83       	std	Y+1, r24	; 0x01
    425e:	0e 94 8b 59 	call	0xb316	; 0xb316 <_Z18nextFullLBRxBufferv>
    4262:	8a 87       	std	Y+10, r24	; 0x0a
    4264:	9b 87       	std	Y+11, r25	; 0x0b
    4266:	21 e0       	ldi	r18, 0x01	; 1
    4268:	8a 85       	ldd	r24, Y+10	; 0x0a
    426a:	9b 85       	ldd	r25, Y+11	; 0x0b
    426c:	89 2b       	or	r24, r25
    426e:	09 f4       	brne	.+2      	; 0x4272 <_Z17handleLinkBusMsgsv+0x2a>
    4270:	20 e0       	ldi	r18, 0x00	; 0
    4272:	22 23       	and	r18, r18
    4274:	09 f4       	brne	.+2      	; 0x4278 <_Z17handleLinkBusMsgsv+0x30>
    4276:	3e c7       	rjmp	.+3708   	; 0x50f4 <_Z17handleLinkBusMsgsv+0xeac>
    4278:	8a 85       	ldd	r24, Y+10	; 0x0a
    427a:	9b 85       	ldd	r25, Y+11	; 0x0b
    427c:	fc 01       	movw	r30, r24
    427e:	81 81       	ldd	r24, Z+1	; 0x01
    4280:	92 81       	ldd	r25, Z+2	; 0x02
    4282:	8c 87       	std	Y+12, r24	; 0x0c
    4284:	9d 87       	std	Y+13, r25	; 0x0d
    4286:	8c 85       	ldd	r24, Y+12	; 0x0c
    4288:	9d 85       	ldd	r25, Y+13	; 0x0d
    428a:	82 38       	cpi	r24, 0x82	; 130
    428c:	fe e1       	ldi	r31, 0x1E	; 30
    428e:	9f 07       	cpc	r25, r31
    4290:	09 f4       	brne	.+2      	; 0x4294 <_Z17handleLinkBusMsgsv+0x4c>
    4292:	94 c0       	rjmp	.+296    	; 0x43bc <_Z17handleLinkBusMsgsv+0x174>
    4294:	83 38       	cpi	r24, 0x83	; 131
    4296:	2e e1       	ldi	r18, 0x1E	; 30
    4298:	92 07       	cpc	r25, r18
    429a:	80 f5       	brcc	.+96     	; 0x42fc <_Z17handleLinkBusMsgsv+0xb4>
    429c:	81 36       	cpi	r24, 0x61	; 97
    429e:	e3 e0       	ldi	r30, 0x03	; 3
    42a0:	9e 07       	cpc	r25, r30
    42a2:	09 f4       	brne	.+2      	; 0x42a6 <_Z17handleLinkBusMsgsv+0x5e>
    42a4:	e0 c5       	rjmp	.+3008   	; 0x4e66 <_Z17handleLinkBusMsgsv+0xc1e>
    42a6:	82 36       	cpi	r24, 0x62	; 98
    42a8:	f3 e0       	ldi	r31, 0x03	; 3
    42aa:	9f 07       	cpc	r25, r31
    42ac:	78 f4       	brcc	.+30     	; 0x42cc <_Z17handleLinkBusMsgsv+0x84>
    42ae:	85 31       	cpi	r24, 0x15	; 21
    42b0:	23 e0       	ldi	r18, 0x03	; 3
    42b2:	92 07       	cpc	r25, r18
    42b4:	09 f4       	brne	.+2      	; 0x42b8 <_Z17handleLinkBusMsgsv+0x70>
    42b6:	52 c1       	rjmp	.+676    	; 0x455c <_Z17handleLinkBusMsgsv+0x314>
    42b8:	8e 31       	cpi	r24, 0x1E	; 30
    42ba:	e3 e0       	ldi	r30, 0x03	; 3
    42bc:	9e 07       	cpc	r25, r30
    42be:	09 f4       	brne	.+2      	; 0x42c2 <_Z17handleLinkBusMsgsv+0x7a>
    42c0:	ac c3       	rjmp	.+1880   	; 0x4a1a <_Z17handleLinkBusMsgsv+0x7d2>
    42c2:	84 35       	cpi	r24, 0x54	; 84
    42c4:	91 05       	cpc	r25, r1
    42c6:	09 f4       	brne	.+2      	; 0x42ca <_Z17handleLinkBusMsgsv+0x82>
    42c8:	fb c4       	rjmp	.+2550   	; 0x4cc0 <_Z17handleLinkBusMsgsv+0xa78>
    42ca:	e9 c6       	rjmp	.+3538   	; 0x509e <_Z17handleLinkBusMsgsv+0xe56>
    42cc:	8f 3a       	cpi	r24, 0xAF	; 175
    42ce:	f3 e0       	ldi	r31, 0x03	; 3
    42d0:	9f 07       	cpc	r25, r31
    42d2:	09 f4       	brne	.+2      	; 0x42d6 <_Z17handleLinkBusMsgsv+0x8e>
    42d4:	4c c0       	rjmp	.+152    	; 0x436e <_Z17handleLinkBusMsgsv+0x126>
    42d6:	80 3b       	cpi	r24, 0xB0	; 176
    42d8:	23 e0       	ldi	r18, 0x03	; 3
    42da:	92 07       	cpc	r25, r18
    42dc:	28 f4       	brcc	.+10     	; 0x42e8 <_Z17handleLinkBusMsgsv+0xa0>
    42de:	84 38       	cpi	r24, 0x84	; 132
    42e0:	93 40       	sbci	r25, 0x03	; 3
    42e2:	09 f4       	brne	.+2      	; 0x42e6 <_Z17handleLinkBusMsgsv+0x9e>
    42e4:	15 c2       	rjmp	.+1066   	; 0x4710 <_Z17handleLinkBusMsgsv+0x4c8>
    42e6:	db c6       	rjmp	.+3510   	; 0x509e <_Z17handleLinkBusMsgsv+0xe56>
    42e8:	86 3a       	cpi	r24, 0xA6	; 166
    42ea:	fc e1       	ldi	r31, 0x1C	; 28
    42ec:	9f 07       	cpc	r25, r31
    42ee:	09 f4       	brne	.+2      	; 0x42f2 <_Z17handleLinkBusMsgsv+0xaa>
    42f0:	59 c6       	rjmp	.+3250   	; 0x4fa4 <_Z17handleLinkBusMsgsv+0xd5c>
    42f2:	88 31       	cpi	r24, 0x18	; 24
    42f4:	9d 41       	sbci	r25, 0x1D	; 29
    42f6:	09 f4       	brne	.+2      	; 0x42fa <_Z17handleLinkBusMsgsv+0xb2>
    42f8:	d8 c6       	rjmp	.+3504   	; 0x50aa <_Z17handleLinkBusMsgsv+0xe62>
    42fa:	d1 c6       	rjmp	.+3490   	; 0x509e <_Z17handleLinkBusMsgsv+0xe56>
    42fc:	8a 39       	cpi	r24, 0x9A	; 154
    42fe:	e3 e2       	ldi	r30, 0x23	; 35
    4300:	9e 07       	cpc	r25, r30
    4302:	09 f4       	brne	.+2      	; 0x4306 <_Z17handleLinkBusMsgsv+0xbe>
    4304:	57 c0       	rjmp	.+174    	; 0x43b4 <_Z17handleLinkBusMsgsv+0x16c>
    4306:	8b 39       	cpi	r24, 0x9B	; 155
    4308:	f3 e2       	ldi	r31, 0x23	; 35
    430a:	9f 07       	cpc	r25, r31
    430c:	c0 f4       	brcc	.+48     	; 0x433e <_Z17handleLinkBusMsgsv+0xf6>
    430e:	8e 36       	cpi	r24, 0x6E	; 110
    4310:	21 e2       	ldi	r18, 0x21	; 33
    4312:	92 07       	cpc	r25, r18
    4314:	09 f4       	brne	.+2      	; 0x4318 <_Z17handleLinkBusMsgsv+0xd0>
    4316:	c9 c6       	rjmp	.+3474   	; 0x50aa <_Z17handleLinkBusMsgsv+0xe62>
    4318:	8f 36       	cpi	r24, 0x6F	; 111
    431a:	e1 e2       	ldi	r30, 0x21	; 33
    431c:	9e 07       	cpc	r25, r30
    431e:	28 f4       	brcc	.+10     	; 0x432a <_Z17handleLinkBusMsgsv+0xe2>
    4320:	81 3d       	cpi	r24, 0xD1	; 209
    4322:	9e 41       	sbci	r25, 0x1E	; 30
    4324:	09 f4       	brne	.+2      	; 0x4328 <_Z17handleLinkBusMsgsv+0xe0>
    4326:	c5 c5       	rjmp	.+2954   	; 0x4eb2 <_Z17handleLinkBusMsgsv+0xc6a>
    4328:	ba c6       	rjmp	.+3444   	; 0x509e <_Z17handleLinkBusMsgsv+0xe56>
    432a:	8d 3a       	cpi	r24, 0xAD	; 173
    432c:	22 e2       	ldi	r18, 0x22	; 34
    432e:	92 07       	cpc	r25, r18
    4330:	09 f4       	brne	.+2      	; 0x4334 <_Z17handleLinkBusMsgsv+0xec>
    4332:	9e c0       	rjmp	.+316    	; 0x4470 <_Z17handleLinkBusMsgsv+0x228>
    4334:	81 3c       	cpi	r24, 0xC1	; 193
    4336:	92 42       	sbci	r25, 0x22	; 34
    4338:	09 f4       	brne	.+2      	; 0x433c <_Z17handleLinkBusMsgsv+0xf4>
    433a:	0b c1       	rjmp	.+534    	; 0x4552 <_Z17handleLinkBusMsgsv+0x30a>
    433c:	b0 c6       	rjmp	.+3424   	; 0x509e <_Z17handleLinkBusMsgsv+0xe56>
    433e:	80 3d       	cpi	r24, 0xD0	; 208
    4340:	f3 e2       	ldi	r31, 0x23	; 35
    4342:	9f 07       	cpc	r25, r31
    4344:	09 f4       	brne	.+2      	; 0x4348 <_Z17handleLinkBusMsgsv+0x100>
    4346:	db c3       	rjmp	.+1974   	; 0x4afe <_Z17handleLinkBusMsgsv+0x8b6>
    4348:	81 3d       	cpi	r24, 0xD1	; 209
    434a:	23 e2       	ldi	r18, 0x23	; 35
    434c:	92 07       	cpc	r25, r18
    434e:	28 f4       	brcc	.+10     	; 0x435a <_Z17handleLinkBusMsgsv+0x112>
    4350:	8f 3c       	cpi	r24, 0xCF	; 207
    4352:	93 42       	sbci	r25, 0x23	; 35
    4354:	09 f4       	brne	.+2      	; 0x4358 <_Z17handleLinkBusMsgsv+0x110>
    4356:	86 c6       	rjmp	.+3340   	; 0x5064 <_Z17handleLinkBusMsgsv+0xe1c>
    4358:	a2 c6       	rjmp	.+3396   	; 0x509e <_Z17handleLinkBusMsgsv+0xe56>
    435a:	87 3f       	cpi	r24, 0xF7	; 247
    435c:	f3 e2       	ldi	r31, 0x23	; 35
    435e:	9f 07       	cpc	r25, r31
    4360:	09 f4       	brne	.+2      	; 0x4364 <_Z17handleLinkBusMsgsv+0x11c>
    4362:	6c c2       	rjmp	.+1240   	; 0x483c <_Z17handleLinkBusMsgsv+0x5f4>
    4364:	8c 39       	cpi	r24, 0x9C	; 156
    4366:	94 42       	sbci	r25, 0x24	; 36
    4368:	09 f4       	brne	.+2      	; 0x436c <_Z17handleLinkBusMsgsv+0x124>
    436a:	91 c6       	rjmp	.+3362   	; 0x508e <_Z17handleLinkBusMsgsv+0xe46>
    436c:	98 c6       	rjmp	.+3376   	; 0x509e <_Z17handleLinkBusMsgsv+0xe56>
    436e:	8a 85       	ldd	r24, Y+10	; 0x0a
    4370:	9b 85       	ldd	r25, Y+11	; 0x0b
    4372:	fc 01       	movw	r30, r24
    4374:	83 81       	ldd	r24, Z+3	; 0x03
    4376:	88 23       	and	r24, r24
    4378:	09 f4       	brne	.+2      	; 0x437c <_Z17handleLinkBusMsgsv+0x134>
    437a:	99 c6       	rjmp	.+3378   	; 0x50ae <_Z17handleLinkBusMsgsv+0xe66>
    437c:	8a 85       	ldd	r24, Y+10	; 0x0a
    437e:	9b 85       	ldd	r25, Y+11	; 0x0b
    4380:	03 96       	adiw	r24, 0x03	; 3
    4382:	0e 94 99 7b 	call	0xf732	; 0xf732 <atoi>
    4386:	21 e0       	ldi	r18, 0x01	; 1
    4388:	89 2b       	or	r24, r25
    438a:	09 f4       	brne	.+2      	; 0x438e <_Z17handleLinkBusMsgsv+0x146>
    438c:	20 e0       	ldi	r18, 0x00	; 0
    438e:	2e 87       	std	Y+14, r18	; 0x0e
    4390:	0e 94 8b 2c 	call	0x5916	; 0x5916 <_Z12suspendEventv>
    4394:	0e 94 bc 5a 	call	0xb578	; 0xb578 <_Z15linkbus_disablev>
    4398:	10 92 09 40 	sts	0x4009, r1	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    439c:	10 92 6b 47 	sts	0x476B, r1	; 0x80476b <_ZL11g_sleepType>
    43a0:	9e 85       	ldd	r25, Y+14	; 0x0e
    43a2:	81 e0       	ldi	r24, 0x01	; 1
    43a4:	89 27       	eor	r24, r25
    43a6:	88 23       	and	r24, r24
    43a8:	09 f4       	brne	.+2      	; 0x43ac <_Z17handleLinkBusMsgsv+0x164>
    43aa:	81 c6       	rjmp	.+3330   	; 0x50ae <_Z17handleLinkBusMsgsv+0xe66>
    43ac:	80 e0       	ldi	r24, 0x00	; 0
    43ae:	0e 94 9a 4e 	call	0x9d34	; 0x9d34 <_Z10wifi_powerb>
    43b2:	7d c6       	rjmp	.+3322   	; 0x50ae <_Z17handleLinkBusMsgsv+0xe66>
    43b4:	82 e0       	ldi	r24, 0x02	; 2
    43b6:	0e 94 9f 29 	call	0x533e	; 0x533e <_Z8wdt_init7WDReset>
    43ba:	ff cf       	rjmp	.-2      	; 0x43ba <_Z17handleLinkBusMsgsv+0x172>
    43bc:	8a 85       	ldd	r24, Y+10	; 0x0a
    43be:	9b 85       	ldd	r25, Y+11	; 0x0b
    43c0:	fc 01       	movw	r30, r24
    43c2:	83 81       	ldd	r24, Z+3	; 0x03
    43c4:	8f 87       	std	Y+15, r24	; 0x0f
    43c6:	81 e0       	ldi	r24, 0x01	; 1
    43c8:	80 93 0a 40 	sts	0x400A, r24	; 0x80400a <_ZL13g_wifi_active>
    43cc:	8f 85       	ldd	r24, Y+15	; 0x0f
    43ce:	8a 35       	cpi	r24, 0x5A	; 90
    43d0:	21 f4       	brne	.+8      	; 0x43da <_Z17handleLinkBusMsgsv+0x192>
    43d2:	88 e7       	ldi	r24, 0x78	; 120
    43d4:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    43d8:	6c c6       	rjmp	.+3288   	; 0x50b2 <_Z17handleLinkBusMsgsv+0xe6a>
    43da:	8f 85       	ldd	r24, Y+15	; 0x0f
    43dc:	80 33       	cpi	r24, 0x30	; 48
    43de:	a9 f5       	brne	.+106    	; 0x444a <_Z17handleLinkBusMsgsv+0x202>
    43e0:	80 91 a5 47 	lds	r24, 0x47A5	; 0x8047a5 <g_waiting_for_next_event>
    43e4:	88 23       	and	r24, r24
    43e6:	39 f0       	breq	.+14     	; 0x43f6 <_Z17handleLinkBusMsgsv+0x1ae>
    43e8:	43 ed       	ldi	r20, 0xD3	; 211
    43ea:	52 e4       	ldi	r21, 0x42	; 66
    43ec:	67 e6       	ldi	r22, 0x67	; 103
    43ee:	70 e4       	ldi	r23, 0x40	; 64
    43f0:	83 e0       	ldi	r24, 0x03	; 3
    43f2:	0e 94 80 5b 	call	0xb700	; 0xb700 <_Z11lb_send_msg13LBMessageTypePKcPc>
    43f6:	80 e0       	ldi	r24, 0x00	; 0
    43f8:	90 e0       	ldi	r25, 0x00	; 0
    43fa:	0e 94 56 06 	call	0xcac	; 0xcac <time>
    43fe:	dc 01       	movw	r26, r24
    4400:	cb 01       	movw	r24, r22
    4402:	2b 2f       	mov	r18, r27
    4404:	2f 93       	push	r18
    4406:	2a 2f       	mov	r18, r26
    4408:	2f 93       	push	r18
    440a:	29 2f       	mov	r18, r25
    440c:	2f 93       	push	r18
    440e:	8f 93       	push	r24
    4410:	8b e6       	ldi	r24, 0x6B	; 107
    4412:	90 e4       	ldi	r25, 0x40	; 64
    4414:	89 2f       	mov	r24, r25
    4416:	8f 93       	push	r24
    4418:	8b e6       	ldi	r24, 0x6B	; 107
    441a:	90 e4       	ldi	r25, 0x40	; 64
    441c:	8f 93       	push	r24
    441e:	87 e2       	ldi	r24, 0x27	; 39
    4420:	97 e4       	ldi	r25, 0x47	; 71
    4422:	89 2f       	mov	r24, r25
    4424:	8f 93       	push	r24
    4426:	87 e2       	ldi	r24, 0x27	; 39
    4428:	97 e4       	ldi	r25, 0x47	; 71
    442a:	8f 93       	push	r24
    442c:	0e 94 48 7c 	call	0xf890	; 0xf890 <sprintf>
    4430:	8d b7       	in	r24, 0x3d	; 61
    4432:	9e b7       	in	r25, 0x3e	; 62
    4434:	08 96       	adiw	r24, 0x08	; 8
    4436:	cd bf       	out	0x3d, r28	; 61
    4438:	de bf       	out	0x3e, r29	; 62
    443a:	47 e2       	ldi	r20, 0x27	; 39
    443c:	57 e4       	ldi	r21, 0x47	; 71
    443e:	6f e6       	ldi	r22, 0x6F	; 111
    4440:	70 e4       	ldi	r23, 0x40	; 64
    4442:	83 e0       	ldi	r24, 0x03	; 3
    4444:	0e 94 80 5b 	call	0xb700	; 0xb700 <_Z11lb_send_msg13LBMessageTypePKcPc>
    4448:	34 c6       	rjmp	.+3176   	; 0x50b2 <_Z17handleLinkBusMsgsv+0xe6a>
    444a:	8f 85       	ldd	r24, Y+15	; 0x0f
    444c:	83 33       	cpi	r24, 0x33	; 51
    444e:	09 f0       	breq	.+2      	; 0x4452 <_Z17handleLinkBusMsgsv+0x20a>
    4450:	30 c6       	rjmp	.+3168   	; 0x50b2 <_Z17handleLinkBusMsgsv+0xe6a>
    4452:	10 92 69 47 	sts	0x4769, r1	; 0x804769 <_ZL19g_wifi_enable_delay>
    4456:	81 e0       	ldi	r24, 0x01	; 1
    4458:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    445c:	10 92 a5 47 	sts	0x47A5, r1	; 0x8047a5 <g_waiting_for_next_event>
    4460:	10 92 a4 47 	sts	0x47A4, r1	; 0x8047a4 <g_check_for_next_event>
    4464:	10 92 0a 40 	sts	0x400A, r1	; 0x80400a <_ZL13g_wifi_active>
    4468:	81 e0       	ldi	r24, 0x01	; 1
    446a:	80 93 6a 47 	sts	0x476A, r24	; 0x80476a <_ZL20g_shutting_down_wifi>
    446e:	21 c6       	rjmp	.+3138   	; 0x50b2 <_Z17handleLinkBusMsgsv+0xe6a>
    4470:	8a 85       	ldd	r24, Y+10	; 0x0a
    4472:	9b 85       	ldd	r25, Y+11	; 0x0b
    4474:	fc 01       	movw	r30, r24
    4476:	83 81       	ldd	r24, Z+3	; 0x03
    4478:	88 23       	and	r24, r24
    447a:	09 f4       	brne	.+2      	; 0x447e <_Z17handleLinkBusMsgsv+0x236>
    447c:	1c c6       	rjmp	.+3128   	; 0x50b6 <_Z17handleLinkBusMsgsv+0xe6e>
    447e:	8a 85       	ldd	r24, Y+10	; 0x0a
    4480:	9b 85       	ldd	r25, Y+11	; 0x0b
    4482:	fc 01       	movw	r30, r24
    4484:	83 81       	ldd	r24, Z+3	; 0x03
    4486:	8d 34       	cpi	r24, 0x4D	; 77
    4488:	81 f4       	brne	.+32     	; 0x44aa <_Z17handleLinkBusMsgsv+0x262>
    448a:	8a 85       	ldd	r24, Y+10	; 0x0a
    448c:	9b 85       	ldd	r25, Y+11	; 0x0b
    448e:	fc 01       	movw	r30, r24
    4490:	80 8d       	ldd	r24, Z+24	; 0x18
    4492:	88 23       	and	r24, r24
    4494:	51 f0       	breq	.+20     	; 0x44aa <_Z17handleLinkBusMsgsv+0x262>
    4496:	8a 85       	ldd	r24, Y+10	; 0x0a
    4498:	9b 85       	ldd	r25, Y+11	; 0x0b
    449a:	48 96       	adiw	r24, 0x18	; 24
    449c:	0e 94 99 7b 	call	0xf732	; 0xf732 <atoi>
    44a0:	80 93 cd 47 	sts	0x47CD, r24	; 0x8047cd <_ZZ17handleLinkBusMsgsvE6pwr_mW>
    44a4:	90 93 ce 47 	sts	0x47CE, r25	; 0x8047ce <_ZZ17handleLinkBusMsgsvE6pwr_mW+0x1>
    44a8:	09 c0       	rjmp	.+18     	; 0x44bc <_Z17handleLinkBusMsgsv+0x274>
    44aa:	8a 85       	ldd	r24, Y+10	; 0x0a
    44ac:	9b 85       	ldd	r25, Y+11	; 0x0b
    44ae:	03 96       	adiw	r24, 0x03	; 3
    44b0:	0e 94 99 7b 	call	0xf732	; 0xf732 <atoi>
    44b4:	80 93 cd 47 	sts	0x47CD, r24	; 0x8047cd <_ZZ17handleLinkBusMsgsvE6pwr_mW>
    44b8:	90 93 ce 47 	sts	0x47CE, r25	; 0x8047ce <_ZZ17handleLinkBusMsgsvE6pwr_mW+0x1>
    44bc:	0e 94 f0 6f 	call	0xdfe0	; 0xdfe0 <_Z12txGetPowerMwv>
    44c0:	9c 01       	movw	r18, r24
    44c2:	80 91 cd 47 	lds	r24, 0x47CD	; 0x8047cd <_ZZ17handleLinkBusMsgsvE6pwr_mW>
    44c6:	90 91 ce 47 	lds	r25, 0x47CE	; 0x8047ce <_ZZ17handleLinkBusMsgsvE6pwr_mW+0x1>
    44ca:	41 e0       	ldi	r20, 0x01	; 1
    44cc:	28 17       	cp	r18, r24
    44ce:	39 07       	cpc	r19, r25
    44d0:	09 f4       	brne	.+2      	; 0x44d4 <_Z17handleLinkBusMsgsv+0x28c>
    44d2:	40 e0       	ldi	r20, 0x00	; 0
    44d4:	44 23       	and	r20, r20
    44d6:	b9 f1       	breq	.+110    	; 0x4546 <_Z17handleLinkBusMsgsv+0x2fe>
    44d8:	60 e0       	ldi	r22, 0x00	; 0
    44da:	70 e0       	ldi	r23, 0x00	; 0
    44dc:	8d ec       	ldi	r24, 0xCD	; 205
    44de:	97 e4       	ldi	r25, 0x47	; 71
    44e0:	0e 94 fb 6f 	call	0xdff6	; 0xdff6 <_Z15txSetParametersPjPb>
    44e4:	88 8b       	std	Y+16, r24	; 0x10
    44e6:	88 89       	ldd	r24, Y+16	; 0x10
    44e8:	88 23       	and	r24, r24
    44ea:	21 f0       	breq	.+8      	; 0x44f4 <_Z17handleLinkBusMsgsv+0x2ac>
    44ec:	88 89       	ldd	r24, Y+16	; 0x10
    44ee:	80 93 59 47 	sts	0x4759, r24	; 0x804759 <_ZL17g_last_error_code>
    44f2:	05 c0       	rjmp	.+10     	; 0x44fe <_Z17handleLinkBusMsgsv+0x2b6>
    44f4:	80 91 cf 47 	lds	r24, 0x47CF	; 0x8047cf <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    44f8:	8f 5f       	subi	r24, 0xFF	; 255
    44fa:	80 93 cf 47 	sts	0x47CF, r24	; 0x8047cf <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    44fe:	80 91 cd 47 	lds	r24, 0x47CD	; 0x8047cd <_ZZ17handleLinkBusMsgsvE6pwr_mW>
    4502:	90 91 ce 47 	lds	r25, 0x47CE	; 0x8047ce <_ZZ17handleLinkBusMsgsvE6pwr_mW+0x1>
    4506:	29 2f       	mov	r18, r25
    4508:	2f 93       	push	r18
    450a:	8f 93       	push	r24
    450c:	85 ed       	ldi	r24, 0xD5	; 213
    450e:	92 e4       	ldi	r25, 0x42	; 66
    4510:	89 2f       	mov	r24, r25
    4512:	8f 93       	push	r24
    4514:	85 ed       	ldi	r24, 0xD5	; 213
    4516:	92 e4       	ldi	r25, 0x42	; 66
    4518:	8f 93       	push	r24
    451a:	87 e2       	ldi	r24, 0x27	; 39
    451c:	97 e4       	ldi	r25, 0x47	; 71
    451e:	89 2f       	mov	r24, r25
    4520:	8f 93       	push	r24
    4522:	87 e2       	ldi	r24, 0x27	; 39
    4524:	97 e4       	ldi	r25, 0x47	; 71
    4526:	8f 93       	push	r24
    4528:	0e 94 48 7c 	call	0xf890	; 0xf890 <sprintf>
    452c:	0f 90       	pop	r0
    452e:	0f 90       	pop	r0
    4530:	0f 90       	pop	r0
    4532:	0f 90       	pop	r0
    4534:	0f 90       	pop	r0
    4536:	0f 90       	pop	r0
    4538:	47 e2       	ldi	r20, 0x27	; 39
    453a:	57 e4       	ldi	r21, 0x47	; 71
    453c:	6a ed       	ldi	r22, 0xDA	; 218
    453e:	72 e4       	ldi	r23, 0x42	; 66
    4540:	83 e0       	ldi	r24, 0x03	; 3
    4542:	0e 94 80 5b 	call	0xb700	; 0xb700 <_Z11lb_send_msg13LBMessageTypePKcPc>
    4546:	80 91 d0 47 	lds	r24, 0x47D0	; 0x8047d0 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    454a:	8f 5f       	subi	r24, 0xFF	; 255
    454c:	80 93 d0 47 	sts	0x47D0, r24	; 0x8047d0 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    4550:	b2 c5       	rjmp	.+2916   	; 0x50b6 <_Z17handleLinkBusMsgsv+0xe6e>
    4552:	89 eb       	ldi	r24, 0xB9	; 185
    4554:	97 e4       	ldi	r25, 0x47	; 71
    4556:	0e 94 29 48 	call	0x9052	; 0x9052 <_ZN13EepromManager13saveAllEEPROMEv>
    455a:	be c5       	rjmp	.+2940   	; 0x50d8 <_Z17handleLinkBusMsgsv+0xe90>
    455c:	8a 85       	ldd	r24, Y+10	; 0x0a
    455e:	9b 85       	ldd	r25, Y+11	; 0x0b
    4560:	fc 01       	movw	r30, r24
    4562:	83 81       	ldd	r24, Z+3	; 0x03
    4564:	89 8b       	std	Y+17, r24	; 0x11
    4566:	89 89       	ldd	r24, Y+17	; 0x11
    4568:	81 33       	cpi	r24, 0x31	; 49
    456a:	21 f0       	breq	.+8      	; 0x4574 <_Z17handleLinkBusMsgsv+0x32c>
    456c:	89 89       	ldd	r24, Y+17	; 0x11
    456e:	82 33       	cpi	r24, 0x32	; 50
    4570:	09 f0       	breq	.+2      	; 0x4574 <_Z17handleLinkBusMsgsv+0x32c>
    4572:	c0 c0       	rjmp	.+384    	; 0x46f4 <_Z17handleLinkBusMsgsv+0x4ac>
    4574:	80 91 5f 47 	lds	r24, 0x475F	; 0x80475f <g_antenna_connect_state>
    4578:	82 30       	cpi	r24, 0x02	; 2
    457a:	41 f0       	breq	.+16     	; 0x458c <_Z17handleLinkBusMsgsv+0x344>
    457c:	90 91 3e 40 	lds	r25, 0x403E	; 0x80403e <g_tx_power_is_zero>
    4580:	81 e0       	ldi	r24, 0x01	; 1
    4582:	89 27       	eor	r24, r25
    4584:	88 23       	and	r24, r24
    4586:	11 f0       	breq	.+4      	; 0x458c <_Z17handleLinkBusMsgsv+0x344>
    4588:	81 e0       	ldi	r24, 0x01	; 1
    458a:	01 c0       	rjmp	.+2      	; 0x458e <_Z17handleLinkBusMsgsv+0x346>
    458c:	80 e0       	ldi	r24, 0x00	; 0
    458e:	88 23       	and	r24, r24
    4590:	21 f0       	breq	.+8      	; 0x459a <_Z17handleLinkBusMsgsv+0x352>
    4592:	87 ef       	ldi	r24, 0xF7	; 247
    4594:	80 93 59 47 	sts	0x4759, r24	; 0x804759 <_ZL17g_last_error_code>
    4598:	b9 c0       	rjmp	.+370    	; 0x470c <_Z17handleLinkBusMsgsv+0x4c4>
    459a:	89 89       	ldd	r24, Y+17	; 0x11
    459c:	81 33       	cpi	r24, 0x31	; 49
    459e:	09 f0       	breq	.+2      	; 0x45a2 <_Z17handleLinkBusMsgsv+0x35a>
    45a0:	64 c0       	rjmp	.+200    	; 0x466a <_Z17handleLinkBusMsgsv+0x422>
    45a2:	80 91 5f 47 	lds	r24, 0x475F	; 0x80475f <g_antenna_connect_state>
    45a6:	82 30       	cpi	r24, 0x02	; 2
    45a8:	21 f0       	breq	.+8      	; 0x45b2 <_Z17handleLinkBusMsgsv+0x36a>
    45aa:	80 91 3e 40 	lds	r24, 0x403E	; 0x80403e <g_tx_power_is_zero>
    45ae:	88 23       	and	r24, r24
    45b0:	11 f0       	breq	.+4      	; 0x45b6 <_Z17handleLinkBusMsgsv+0x36e>
    45b2:	81 e0       	ldi	r24, 0x01	; 1
    45b4:	01 c0       	rjmp	.+2      	; 0x45b8 <_Z17handleLinkBusMsgsv+0x370>
    45b6:	80 e0       	ldi	r24, 0x00	; 0
    45b8:	88 23       	and	r24, r24
    45ba:	09 f4       	brne	.+2      	; 0x45be <_Z17handleLinkBusMsgsv+0x376>
    45bc:	52 c0       	rjmp	.+164    	; 0x4662 <_Z17handleLinkBusMsgsv+0x41a>
    45be:	10 92 a2 47 	sts	0x47A2, r1	; 0x8047a2 <g_event_enabled>
    45c2:	81 e0       	ldi	r24, 0x01	; 1
    45c4:	8a a7       	std	Y+42, r24	; 0x2a
    45c6:	ce 01       	movw	r24, r28
    45c8:	8a 96       	adiw	r24, 0x2a	; 42
    45ca:	40 e0       	ldi	r20, 0x00	; 0
    45cc:	50 e0       	ldi	r21, 0x00	; 0
    45ce:	bc 01       	movw	r22, r24
    45d0:	8c e6       	ldi	r24, 0x6C	; 108
    45d2:	97 e4       	ldi	r25, 0x47	; 71
    45d4:	0e 94 09 5c 	call	0xb812	; 0xb812 <_Z9makeMorsePcPbS0_>
    45d8:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    45dc:	0e 94 aa 29 	call	0x5354	; 0x5354 <_Z13throttleValueh>
    45e0:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    45e4:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    45e8:	81 e0       	ldi	r24, 0x01	; 1
    45ea:	90 e0       	ldi	r25, 0x00	; 0
    45ec:	a0 e0       	ldi	r26, 0x00	; 0
    45ee:	b0 e0       	ldi	r27, 0x00	; 0
    45f0:	80 93 9a 47 	sts	0x479A, r24	; 0x80479a <g_event_start_epoch>
    45f4:	90 93 9b 47 	sts	0x479B, r25	; 0x80479b <g_event_start_epoch+0x1>
    45f8:	a0 93 9c 47 	sts	0x479C, r26	; 0x80479c <g_event_start_epoch+0x2>
    45fc:	b0 93 9d 47 	sts	0x479D, r27	; 0x80479d <g_event_start_epoch+0x3>
    4600:	8f ef       	ldi	r24, 0xFF	; 255
    4602:	9f ef       	ldi	r25, 0xFF	; 255
    4604:	dc 01       	movw	r26, r24
    4606:	80 93 9e 47 	sts	0x479E, r24	; 0x80479e <g_event_finish_epoch>
    460a:	90 93 9f 47 	sts	0x479F, r25	; 0x80479f <g_event_finish_epoch+0x1>
    460e:	a0 93 a0 47 	sts	0x47A0, r26	; 0x8047a0 <g_event_finish_epoch+0x2>
    4612:	b0 93 a1 47 	sts	0x47A1, r27	; 0x8047a1 <g_event_finish_epoch+0x3>
    4616:	8f e0       	ldi	r24, 0x0F	; 15
    4618:	97 e2       	ldi	r25, 0x27	; 39
    461a:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_on_air_seconds>
    461e:	90 93 0e 40 	sts	0x400E, r25	; 0x80400e <g_on_air_seconds+0x1>
    4622:	10 92 0f 40 	sts	0x400F, r1	; 0x80400f <g_off_air_seconds>
    4626:	10 92 10 40 	sts	0x4010, r1	; 0x804010 <g_off_air_seconds+0x1>
    462a:	8f e0       	ldi	r24, 0x0F	; 15
    462c:	97 e2       	ldi	r25, 0x27	; 39
    462e:	a0 e0       	ldi	r26, 0x00	; 0
    4630:	b0 e0       	ldi	r27, 0x00	; 0
    4632:	80 93 62 47 	sts	0x4762, r24	; 0x804762 <_ZL12g_on_the_air>
    4636:	90 93 63 47 	sts	0x4763, r25	; 0x804763 <_ZL12g_on_the_air+0x1>
    463a:	a0 93 64 47 	sts	0x4764, r26	; 0x804764 <_ZL12g_on_the_air+0x2>
    463e:	b0 93 65 47 	sts	0x4765, r27	; 0x804765 <_ZL12g_on_the_air+0x3>
    4642:	8f ef       	ldi	r24, 0xFF	; 255
    4644:	9f ef       	ldi	r25, 0xFF	; 255
    4646:	80 93 66 47 	sts	0x4766, r24	; 0x804766 <_ZL26g_sendID_seconds_countdown>
    464a:	90 93 67 47 	sts	0x4767, r25	; 0x804767 <_ZL26g_sendID_seconds_countdown+0x1>
    464e:	81 e0       	ldi	r24, 0x01	; 1
    4650:	80 93 a3 47 	sts	0x47A3, r24	; 0x8047a3 <g_event_commenced>
    4654:	81 e0       	ldi	r24, 0x01	; 1
    4656:	80 93 a2 47 	sts	0x47A2, r24	; 0x8047a2 <g_event_enabled>
    465a:	8d ef       	ldi	r24, 0xFD	; 253
    465c:	80 93 5a 47 	sts	0x475A, r24	; 0x80475a <_ZL18g_last_status_code>
    4660:	55 c0       	rjmp	.+170    	; 0x470c <_Z17handleLinkBusMsgsv+0x4c4>
    4662:	87 ef       	ldi	r24, 0xF7	; 247
    4664:	80 93 59 47 	sts	0x4759, r24	; 0x804759 <_ZL17g_last_error_code>
    4668:	51 c0       	rjmp	.+162    	; 0x470c <_Z17handleLinkBusMsgsv+0x4c4>
    466a:	89 89       	ldd	r24, Y+17	; 0x11
    466c:	82 33       	cpi	r24, 0x32	; 50
    466e:	09 f0       	breq	.+2      	; 0x4672 <_Z17handleLinkBusMsgsv+0x42a>
    4670:	4d c0       	rjmp	.+154    	; 0x470c <_Z17handleLinkBusMsgsv+0x4c4>
    4672:	80 91 d0 47 	lds	r24, 0x47D0	; 0x8047d0 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    4676:	88 23       	and	r24, r24
    4678:	41 f0       	breq	.+16     	; 0x468a <_Z17handleLinkBusMsgsv+0x442>
    467a:	80 91 d0 47 	lds	r24, 0x47D0	; 0x8047d0 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    467e:	8c 30       	cpi	r24, 0x0C	; 12
    4680:	20 f4       	brcc	.+8      	; 0x468a <_Z17handleLinkBusMsgsv+0x442>
    4682:	8d ec       	ldi	r24, 0xCD	; 205
    4684:	80 93 59 47 	sts	0x4759, r24	; 0x804759 <_ZL17g_last_error_code>
    4688:	41 c0       	rjmp	.+130    	; 0x470c <_Z17handleLinkBusMsgsv+0x4c4>
    468a:	80 91 cf 47 	lds	r24, 0x47CF	; 0x8047cf <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    468e:	88 23       	and	r24, r24
    4690:	51 f0       	breq	.+20     	; 0x46a6 <_Z17handleLinkBusMsgsv+0x45e>
    4692:	80 91 a2 47 	lds	r24, 0x47A2	; 0x8047a2 <g_event_enabled>
    4696:	88 23       	and	r24, r24
    4698:	11 f0       	breq	.+4      	; 0x469e <_Z17handleLinkBusMsgsv+0x456>
    469a:	0e 94 8b 2c 	call	0x5916	; 0x5916 <_Z12suspendEventv>
    469e:	89 eb       	ldi	r24, 0xB9	; 185
    46a0:	97 e4       	ldi	r25, 0x47	; 71
    46a2:	0e 94 29 48 	call	0x9052	; 0x9052 <_ZN13EepromManager13saveAllEEPROMEv>
    46a6:	90 91 a2 47 	lds	r25, 0x47A2	; 0x8047a2 <g_event_enabled>
    46aa:	81 e0       	ldi	r24, 0x01	; 1
    46ac:	89 27       	eor	r24, r25
    46ae:	88 23       	and	r24, r24
    46b0:	c9 f0       	breq	.+50     	; 0x46e4 <_Z17handleLinkBusMsgsv+0x49c>
    46b2:	1b a6       	std	Y+43, r1	; 0x2b
    46b4:	ce 01       	movw	r24, r28
    46b6:	8b 96       	adiw	r24, 0x2b	; 43
    46b8:	0e 94 04 2a 	call	0x5408	; 0x5408 <_Z11launchEventP2SC>
    46bc:	80 93 59 47 	sts	0x4759, r24	; 0x804759 <_ZL17g_last_error_code>
    46c0:	80 91 a6 47 	lds	r24, 0x47A6	; 0x8047a6 <_ZL17g_go_to_sleep_now>
    46c4:	88 23       	and	r24, r24
    46c6:	31 f0       	breq	.+12     	; 0x46d4 <_Z17handleLinkBusMsgsv+0x48c>
    46c8:	80 91 6b 47 	lds	r24, 0x476B	; 0x80476b <_ZL11g_sleepType>
    46cc:	88 23       	and	r24, r24
    46ce:	11 f0       	breq	.+4      	; 0x46d4 <_Z17handleLinkBusMsgsv+0x48c>
    46d0:	81 e0       	ldi	r24, 0x01	; 1
    46d2:	01 c0       	rjmp	.+2      	; 0x46d6 <_Z17handleLinkBusMsgsv+0x48e>
    46d4:	80 e0       	ldi	r24, 0x00	; 0
    46d6:	88 23       	and	r24, r24
    46d8:	29 f0       	breq	.+10     	; 0x46e4 <_Z17handleLinkBusMsgsv+0x49c>
    46da:	83 e0       	ldi	r24, 0x03	; 3
    46dc:	80 93 6b 47 	sts	0x476B, r24	; 0x80476b <_ZL11g_sleepType>
    46e0:	10 92 a6 47 	sts	0x47A6, r1	; 0x8047a6 <_ZL17g_go_to_sleep_now>
    46e4:	8c e3       	ldi	r24, 0x3C	; 60
    46e6:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    46ea:	10 92 cf 47 	sts	0x47CF, r1	; 0x8047cf <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    46ee:	10 92 d0 47 	sts	0x47D0, r1	; 0x8047d0 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    46f2:	0c c0       	rjmp	.+24     	; 0x470c <_Z17handleLinkBusMsgsv+0x4c4>
    46f4:	89 89       	ldd	r24, Y+17	; 0x11
    46f6:	80 33       	cpi	r24, 0x30	; 48
    46f8:	09 f0       	breq	.+2      	; 0x46fc <_Z17handleLinkBusMsgsv+0x4b4>
    46fa:	df c4       	rjmp	.+2494   	; 0x50ba <_Z17handleLinkBusMsgsv+0xe72>
    46fc:	10 92 cf 47 	sts	0x47CF, r1	; 0x8047cf <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4700:	10 92 d0 47 	sts	0x47D0, r1	; 0x8047d0 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    4704:	8c ee       	ldi	r24, 0xEC	; 236
    4706:	80 93 5a 47 	sts	0x475A, r24	; 0x80475a <_ZL18g_last_status_code>
    470a:	d7 c4       	rjmp	.+2478   	; 0x50ba <_Z17handleLinkBusMsgsv+0xe72>
    470c:	00 00       	nop
    470e:	d5 c4       	rjmp	.+2474   	; 0x50ba <_Z17handleLinkBusMsgsv+0xe72>
    4710:	1a 82       	std	Y+2, r1	; 0x02
    4712:	1b 82       	std	Y+3, r1	; 0x03
    4714:	1c 82       	std	Y+4, r1	; 0x04
    4716:	1d 82       	std	Y+5, r1	; 0x05
    4718:	8a 85       	ldd	r24, Y+10	; 0x0a
    471a:	9b 85       	ldd	r25, Y+11	; 0x0b
    471c:	fc 01       	movw	r30, r24
    471e:	83 81       	ldd	r24, Z+3	; 0x03
    4720:	83 35       	cpi	r24, 0x53	; 83
    4722:	09 f0       	breq	.+2      	; 0x4726 <_Z17handleLinkBusMsgsv+0x4de>
    4724:	47 c0       	rjmp	.+142    	; 0x47b4 <_Z17handleLinkBusMsgsv+0x56c>
    4726:	8a 85       	ldd	r24, Y+10	; 0x0a
    4728:	9b 85       	ldd	r25, Y+11	; 0x0b
    472a:	fc 01       	movw	r30, r24
    472c:	80 8d       	ldd	r24, Z+24	; 0x18
    472e:	88 23       	and	r24, r24
    4730:	59 f0       	breq	.+22     	; 0x4748 <_Z17handleLinkBusMsgsv+0x500>
    4732:	8a 85       	ldd	r24, Y+10	; 0x0a
    4734:	9b 85       	ldd	r25, Y+11	; 0x0b
    4736:	48 96       	adiw	r24, 0x18	; 24
    4738:	0e 94 b7 7b 	call	0xf76e	; 0xf76e <atol>
    473c:	dc 01       	movw	r26, r24
    473e:	cb 01       	movw	r24, r22
    4740:	8a 83       	std	Y+2, r24	; 0x02
    4742:	9b 83       	std	Y+3, r25	; 0x03
    4744:	ac 83       	std	Y+4, r26	; 0x04
    4746:	bd 83       	std	Y+5, r27	; 0x05
    4748:	80 91 9a 47 	lds	r24, 0x479A	; 0x80479a <g_event_start_epoch>
    474c:	90 91 9b 47 	lds	r25, 0x479B	; 0x80479b <g_event_start_epoch+0x1>
    4750:	a0 91 9c 47 	lds	r26, 0x479C	; 0x80479c <g_event_start_epoch+0x2>
    4754:	b0 91 9d 47 	lds	r27, 0x479D	; 0x80479d <g_event_start_epoch+0x3>
    4758:	61 e0       	ldi	r22, 0x01	; 1
    475a:	2a 81       	ldd	r18, Y+2	; 0x02
    475c:	3b 81       	ldd	r19, Y+3	; 0x03
    475e:	4c 81       	ldd	r20, Y+4	; 0x04
    4760:	5d 81       	ldd	r21, Y+5	; 0x05
    4762:	28 17       	cp	r18, r24
    4764:	39 07       	cpc	r19, r25
    4766:	4a 07       	cpc	r20, r26
    4768:	5b 07       	cpc	r21, r27
    476a:	09 f4       	brne	.+2      	; 0x476e <_Z17handleLinkBusMsgsv+0x526>
    476c:	60 e0       	ldi	r22, 0x00	; 0
    476e:	66 23       	and	r22, r22
    4770:	d9 f0       	breq	.+54     	; 0x47a8 <_Z17handleLinkBusMsgsv+0x560>
    4772:	8a 81       	ldd	r24, Y+2	; 0x02
    4774:	9b 81       	ldd	r25, Y+3	; 0x03
    4776:	ac 81       	ldd	r26, Y+4	; 0x04
    4778:	bd 81       	ldd	r27, Y+5	; 0x05
    477a:	80 93 9a 47 	sts	0x479A, r24	; 0x80479a <g_event_start_epoch>
    477e:	90 93 9b 47 	sts	0x479B, r25	; 0x80479b <g_event_start_epoch+0x1>
    4782:	a0 93 9c 47 	sts	0x479C, r26	; 0x80479c <g_event_start_epoch+0x2>
    4786:	b0 93 9d 47 	sts	0x479D, r27	; 0x80479d <g_event_start_epoch+0x3>
    478a:	80 e0       	ldi	r24, 0x00	; 0
    478c:	90 e0       	ldi	r25, 0x00	; 0
    478e:	0e 94 c2 40 	call	0x8184	; 0x8184 <ds3231_get_epoch>
    4792:	dc 01       	movw	r26, r24
    4794:	cb 01       	movw	r24, r22
    4796:	bc 01       	movw	r22, r24
    4798:	cd 01       	movw	r24, r26
    479a:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <set_system_time>
    479e:	80 91 cf 47 	lds	r24, 0x47CF	; 0x8047cf <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    47a2:	8f 5f       	subi	r24, 0xFF	; 255
    47a4:	80 93 cf 47 	sts	0x47CF, r24	; 0x8047cf <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    47a8:	80 91 d0 47 	lds	r24, 0x47D0	; 0x8047d0 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    47ac:	8f 5f       	subi	r24, 0xFF	; 255
    47ae:	80 93 d0 47 	sts	0x47D0, r24	; 0x8047d0 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    47b2:	85 c4       	rjmp	.+2314   	; 0x50be <_Z17handleLinkBusMsgsv+0xe76>
    47b4:	8a 85       	ldd	r24, Y+10	; 0x0a
    47b6:	9b 85       	ldd	r25, Y+11	; 0x0b
    47b8:	fc 01       	movw	r30, r24
    47ba:	83 81       	ldd	r24, Z+3	; 0x03
    47bc:	86 34       	cpi	r24, 0x46	; 70
    47be:	09 f0       	breq	.+2      	; 0x47c2 <_Z17handleLinkBusMsgsv+0x57a>
    47c0:	7e c4       	rjmp	.+2300   	; 0x50be <_Z17handleLinkBusMsgsv+0xe76>
    47c2:	8a 85       	ldd	r24, Y+10	; 0x0a
    47c4:	9b 85       	ldd	r25, Y+11	; 0x0b
    47c6:	fc 01       	movw	r30, r24
    47c8:	80 8d       	ldd	r24, Z+24	; 0x18
    47ca:	88 23       	and	r24, r24
    47cc:	59 f0       	breq	.+22     	; 0x47e4 <_Z17handleLinkBusMsgsv+0x59c>
    47ce:	8a 85       	ldd	r24, Y+10	; 0x0a
    47d0:	9b 85       	ldd	r25, Y+11	; 0x0b
    47d2:	48 96       	adiw	r24, 0x18	; 24
    47d4:	0e 94 b7 7b 	call	0xf76e	; 0xf76e <atol>
    47d8:	dc 01       	movw	r26, r24
    47da:	cb 01       	movw	r24, r22
    47dc:	8a 83       	std	Y+2, r24	; 0x02
    47de:	9b 83       	std	Y+3, r25	; 0x03
    47e0:	ac 83       	std	Y+4, r26	; 0x04
    47e2:	bd 83       	std	Y+5, r27	; 0x05
    47e4:	80 91 9e 47 	lds	r24, 0x479E	; 0x80479e <g_event_finish_epoch>
    47e8:	90 91 9f 47 	lds	r25, 0x479F	; 0x80479f <g_event_finish_epoch+0x1>
    47ec:	a0 91 a0 47 	lds	r26, 0x47A0	; 0x8047a0 <g_event_finish_epoch+0x2>
    47f0:	b0 91 a1 47 	lds	r27, 0x47A1	; 0x8047a1 <g_event_finish_epoch+0x3>
    47f4:	61 e0       	ldi	r22, 0x01	; 1
    47f6:	2a 81       	ldd	r18, Y+2	; 0x02
    47f8:	3b 81       	ldd	r19, Y+3	; 0x03
    47fa:	4c 81       	ldd	r20, Y+4	; 0x04
    47fc:	5d 81       	ldd	r21, Y+5	; 0x05
    47fe:	28 17       	cp	r18, r24
    4800:	39 07       	cpc	r19, r25
    4802:	4a 07       	cpc	r20, r26
    4804:	5b 07       	cpc	r21, r27
    4806:	09 f4       	brne	.+2      	; 0x480a <_Z17handleLinkBusMsgsv+0x5c2>
    4808:	60 e0       	ldi	r22, 0x00	; 0
    480a:	66 23       	and	r22, r22
    480c:	89 f0       	breq	.+34     	; 0x4830 <_Z17handleLinkBusMsgsv+0x5e8>
    480e:	8a 81       	ldd	r24, Y+2	; 0x02
    4810:	9b 81       	ldd	r25, Y+3	; 0x03
    4812:	ac 81       	ldd	r26, Y+4	; 0x04
    4814:	bd 81       	ldd	r27, Y+5	; 0x05
    4816:	80 93 9e 47 	sts	0x479E, r24	; 0x80479e <g_event_finish_epoch>
    481a:	90 93 9f 47 	sts	0x479F, r25	; 0x80479f <g_event_finish_epoch+0x1>
    481e:	a0 93 a0 47 	sts	0x47A0, r26	; 0x8047a0 <g_event_finish_epoch+0x2>
    4822:	b0 93 a1 47 	sts	0x47A1, r27	; 0x8047a1 <g_event_finish_epoch+0x3>
    4826:	80 91 cf 47 	lds	r24, 0x47CF	; 0x8047cf <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    482a:	8f 5f       	subi	r24, 0xFF	; 255
    482c:	80 93 cf 47 	sts	0x47CF, r24	; 0x8047cf <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4830:	80 91 d0 47 	lds	r24, 0x47D0	; 0x8047d0 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    4834:	8f 5f       	subi	r24, 0xFF	; 255
    4836:	80 93 d0 47 	sts	0x47D0, r24	; 0x8047d0 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    483a:	41 c4       	rjmp	.+2178   	; 0x50be <_Z17handleLinkBusMsgsv+0xe76>
    483c:	81 e0       	ldi	r24, 0x01	; 1
    483e:	80 93 0a 40 	sts	0x400A, r24	; 0x80400a <_ZL13g_wifi_active>
    4842:	8a 85       	ldd	r24, Y+10	; 0x0a
    4844:	9b 85       	ldd	r25, Y+11	; 0x0b
    4846:	fc 01       	movw	r30, r24
    4848:	80 81       	ld	r24, Z
    484a:	81 30       	cpi	r24, 0x01	; 1
    484c:	09 f0       	breq	.+2      	; 0x4850 <_Z17handleLinkBusMsgsv+0x608>
    484e:	4a c0       	rjmp	.+148    	; 0x48e4 <_Z17handleLinkBusMsgsv+0x69c>
    4850:	8a 85       	ldd	r24, Y+10	; 0x0a
    4852:	9b 85       	ldd	r25, Y+11	; 0x0b
    4854:	fc 01       	movw	r30, r24
    4856:	83 81       	ldd	r24, Z+3	; 0x03
    4858:	88 23       	and	r24, r24
    485a:	d1 f0       	breq	.+52     	; 0x4890 <_Z17handleLinkBusMsgsv+0x648>
    485c:	8a 85       	ldd	r24, Y+10	; 0x0a
    485e:	9b 85       	ldd	r25, Y+11	; 0x0b
    4860:	03 96       	adiw	r24, 0x03	; 3
    4862:	44 e1       	ldi	r20, 0x14	; 20
    4864:	50 e0       	ldi	r21, 0x00	; 0
    4866:	bc 01       	movw	r22, r24
    4868:	87 e2       	ldi	r24, 0x27	; 39
    486a:	97 e4       	ldi	r25, 0x47	; 71
    486c:	0e 94 1c 7c 	call	0xf838	; 0xf838 <strncpy>
    4870:	60 e0       	ldi	r22, 0x00	; 0
    4872:	87 e2       	ldi	r24, 0x27	; 39
    4874:	97 e4       	ldi	r25, 0x47	; 71
    4876:	0e 94 05 43 	call	0x860a	; 0x860a <ds3231_set_date_time>
    487a:	80 e0       	ldi	r24, 0x00	; 0
    487c:	90 e0       	ldi	r25, 0x00	; 0
    487e:	0e 94 c2 40 	call	0x8184	; 0x8184 <ds3231_get_epoch>
    4882:	dc 01       	movw	r26, r24
    4884:	cb 01       	movw	r24, r22
    4886:	bc 01       	movw	r22, r24
    4888:	cd 01       	movw	r24, r26
    488a:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <set_system_time>
    488e:	19 c4       	rjmp	.+2098   	; 0x50c2 <_Z17handleLinkBusMsgsv+0xe7a>
    4890:	80 e0       	ldi	r24, 0x00	; 0
    4892:	90 e0       	ldi	r25, 0x00	; 0
    4894:	0e 94 56 06 	call	0xcac	; 0xcac <time>
    4898:	dc 01       	movw	r26, r24
    489a:	cb 01       	movw	r24, r22
    489c:	2b 2f       	mov	r18, r27
    489e:	2f 93       	push	r18
    48a0:	2a 2f       	mov	r18, r26
    48a2:	2f 93       	push	r18
    48a4:	29 2f       	mov	r18, r25
    48a6:	2f 93       	push	r18
    48a8:	8f 93       	push	r24
    48aa:	8b e6       	ldi	r24, 0x6B	; 107
    48ac:	90 e4       	ldi	r25, 0x40	; 64
    48ae:	89 2f       	mov	r24, r25
    48b0:	8f 93       	push	r24
    48b2:	8b e6       	ldi	r24, 0x6B	; 107
    48b4:	90 e4       	ldi	r25, 0x40	; 64
    48b6:	8f 93       	push	r24
    48b8:	87 e2       	ldi	r24, 0x27	; 39
    48ba:	97 e4       	ldi	r25, 0x47	; 71
    48bc:	89 2f       	mov	r24, r25
    48be:	8f 93       	push	r24
    48c0:	87 e2       	ldi	r24, 0x27	; 39
    48c2:	97 e4       	ldi	r25, 0x47	; 71
    48c4:	8f 93       	push	r24
    48c6:	0e 94 48 7c 	call	0xf890	; 0xf890 <sprintf>
    48ca:	8d b7       	in	r24, 0x3d	; 61
    48cc:	9e b7       	in	r25, 0x3e	; 62
    48ce:	08 96       	adiw	r24, 0x08	; 8
    48d0:	cd bf       	out	0x3d, r28	; 61
    48d2:	de bf       	out	0x3e, r29	; 62
    48d4:	47 e2       	ldi	r20, 0x27	; 39
    48d6:	57 e4       	ldi	r21, 0x47	; 71
    48d8:	6f e6       	ldi	r22, 0x6F	; 111
    48da:	70 e4       	ldi	r23, 0x40	; 64
    48dc:	83 e0       	ldi	r24, 0x03	; 3
    48de:	0e 94 80 5b 	call	0xb700	; 0xb700 <_Z11lb_send_msg13LBMessageTypePKcPc>
    48e2:	ef c3       	rjmp	.+2014   	; 0x50c2 <_Z17handleLinkBusMsgsv+0xe7a>
    48e4:	8a 85       	ldd	r24, Y+10	; 0x0a
    48e6:	9b 85       	ldd	r25, Y+11	; 0x0b
    48e8:	fc 01       	movw	r30, r24
    48ea:	80 81       	ld	r24, Z
    48ec:	82 30       	cpi	r24, 0x02	; 2
    48ee:	09 f0       	breq	.+2      	; 0x48f2 <_Z17handleLinkBusMsgsv+0x6aa>
    48f0:	e8 c3       	rjmp	.+2000   	; 0x50c2 <_Z17handleLinkBusMsgsv+0xe7a>
    48f2:	8a 85       	ldd	r24, Y+10	; 0x0a
    48f4:	9b 85       	ldd	r25, Y+11	; 0x0b
    48f6:	fc 01       	movw	r30, r24
    48f8:	83 81       	ldd	r24, Z+3	; 0x03
    48fa:	88 35       	cpi	r24, 0x58	; 88
    48fc:	c9 f5       	brne	.+114    	; 0x4970 <_Z17handleLinkBusMsgsv+0x728>
    48fe:	1a 8a       	std	Y+18, r1	; 0x12
    4900:	8a 85       	ldd	r24, Y+10	; 0x0a
    4902:	9b 85       	ldd	r25, Y+11	; 0x0b
    4904:	fc 01       	movw	r30, r24
    4906:	80 8d       	ldd	r24, Z+24	; 0x18
    4908:	88 23       	and	r24, r24
    490a:	51 f0       	breq	.+20     	; 0x4920 <_Z17handleLinkBusMsgsv+0x6d8>
    490c:	8a 85       	ldd	r24, Y+10	; 0x0a
    490e:	9b 85       	ldd	r25, Y+11	; 0x0b
    4910:	48 96       	adiw	r24, 0x18	; 24
    4912:	0e 94 99 7b 	call	0xf732	; 0xf732 <atoi>
    4916:	8a 8b       	std	Y+18, r24	; 0x12
    4918:	8a 89       	ldd	r24, Y+18	; 0x12
    491a:	0e 94 5d 44 	call	0x88ba	; 0x88ba <ds3231_set_aging>
    491e:	d1 c3       	rjmp	.+1954   	; 0x50c2 <_Z17handleLinkBusMsgsv+0xe7a>
    4920:	0e 94 8c 44 	call	0x8918	; 0x8918 <ds3231_get_aging>
    4924:	8a 8b       	std	Y+18, r24	; 0x12
    4926:	8a 89       	ldd	r24, Y+18	; 0x12
    4928:	08 2e       	mov	r0, r24
    492a:	00 0c       	add	r0, r0
    492c:	99 0b       	sbc	r25, r25
    492e:	29 2f       	mov	r18, r25
    4930:	2f 93       	push	r18
    4932:	8f 93       	push	r24
    4934:	8e ed       	ldi	r24, 0xDE	; 222
    4936:	92 e4       	ldi	r25, 0x42	; 66
    4938:	89 2f       	mov	r24, r25
    493a:	8f 93       	push	r24
    493c:	8e ed       	ldi	r24, 0xDE	; 222
    493e:	92 e4       	ldi	r25, 0x42	; 66
    4940:	8f 93       	push	r24
    4942:	87 e2       	ldi	r24, 0x27	; 39
    4944:	97 e4       	ldi	r25, 0x47	; 71
    4946:	89 2f       	mov	r24, r25
    4948:	8f 93       	push	r24
    494a:	87 e2       	ldi	r24, 0x27	; 39
    494c:	97 e4       	ldi	r25, 0x47	; 71
    494e:	8f 93       	push	r24
    4950:	0e 94 48 7c 	call	0xf890	; 0xf890 <sprintf>
    4954:	0f 90       	pop	r0
    4956:	0f 90       	pop	r0
    4958:	0f 90       	pop	r0
    495a:	0f 90       	pop	r0
    495c:	0f 90       	pop	r0
    495e:	0f 90       	pop	r0
    4960:	47 e2       	ldi	r20, 0x27	; 39
    4962:	57 e4       	ldi	r21, 0x47	; 71
    4964:	6f e6       	ldi	r22, 0x6F	; 111
    4966:	70 e4       	ldi	r23, 0x40	; 64
    4968:	83 e0       	ldi	r24, 0x03	; 3
    496a:	0e 94 80 5b 	call	0xb700	; 0xb700 <_Z11lb_send_msg13LBMessageTypePKcPc>
    496e:	a9 c3       	rjmp	.+1874   	; 0x50c2 <_Z17handleLinkBusMsgsv+0xe7a>
    4970:	80 e0       	ldi	r24, 0x00	; 0
    4972:	90 e0       	ldi	r25, 0x00	; 0
    4974:	0e 94 c2 40 	call	0x8184	; 0x8184 <ds3231_get_epoch>
    4978:	dc 01       	movw	r26, r24
    497a:	cb 01       	movw	r24, r22
    497c:	8b 8b       	std	Y+19, r24	; 0x13
    497e:	9c 8b       	std	Y+20, r25	; 0x14
    4980:	ad 8b       	std	Y+21, r26	; 0x15
    4982:	be 8b       	std	Y+22, r27	; 0x16
    4984:	8b 89       	ldd	r24, Y+19	; 0x13
    4986:	9c 89       	ldd	r25, Y+20	; 0x14
    4988:	ad 89       	ldd	r26, Y+21	; 0x15
    498a:	be 89       	ldd	r27, Y+22	; 0x16
    498c:	bc 01       	movw	r22, r24
    498e:	cd 01       	movw	r24, r26
    4990:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <set_system_time>
    4994:	80 91 d1 47 	lds	r24, 0x47D1	; 0x8047d1 <_ZZ17handleLinkBusMsgsvE8lastTime>
    4998:	90 91 d2 47 	lds	r25, 0x47D2	; 0x8047d2 <_ZZ17handleLinkBusMsgsvE8lastTime+0x1>
    499c:	a0 91 d3 47 	lds	r26, 0x47D3	; 0x8047d3 <_ZZ17handleLinkBusMsgsvE8lastTime+0x2>
    49a0:	b0 91 d4 47 	lds	r27, 0x47D4	; 0x8047d4 <_ZZ17handleLinkBusMsgsvE8lastTime+0x3>
    49a4:	2b 89       	ldd	r18, Y+19	; 0x13
    49a6:	3c 89       	ldd	r19, Y+20	; 0x14
    49a8:	4d 89       	ldd	r20, Y+21	; 0x15
    49aa:	5e 89       	ldd	r21, Y+22	; 0x16
    49ac:	28 17       	cp	r18, r24
    49ae:	39 07       	cpc	r19, r25
    49b0:	4a 07       	cpc	r20, r26
    49b2:	5b 07       	cpc	r21, r27
    49b4:	09 f4       	brne	.+2      	; 0x49b8 <_Z17handleLinkBusMsgsv+0x770>
    49b6:	85 c3       	rjmp	.+1802   	; 0x50c2 <_Z17handleLinkBusMsgsv+0xe7a>
    49b8:	8e 89       	ldd	r24, Y+22	; 0x16
    49ba:	8f 93       	push	r24
    49bc:	8d 89       	ldd	r24, Y+21	; 0x15
    49be:	8f 93       	push	r24
    49c0:	8c 89       	ldd	r24, Y+20	; 0x14
    49c2:	8f 93       	push	r24
    49c4:	8b 89       	ldd	r24, Y+19	; 0x13
    49c6:	8f 93       	push	r24
    49c8:	8b e6       	ldi	r24, 0x6B	; 107
    49ca:	90 e4       	ldi	r25, 0x40	; 64
    49cc:	89 2f       	mov	r24, r25
    49ce:	8f 93       	push	r24
    49d0:	8b e6       	ldi	r24, 0x6B	; 107
    49d2:	90 e4       	ldi	r25, 0x40	; 64
    49d4:	8f 93       	push	r24
    49d6:	87 e2       	ldi	r24, 0x27	; 39
    49d8:	97 e4       	ldi	r25, 0x47	; 71
    49da:	89 2f       	mov	r24, r25
    49dc:	8f 93       	push	r24
    49de:	87 e2       	ldi	r24, 0x27	; 39
    49e0:	97 e4       	ldi	r25, 0x47	; 71
    49e2:	8f 93       	push	r24
    49e4:	0e 94 48 7c 	call	0xf890	; 0xf890 <sprintf>
    49e8:	8d b7       	in	r24, 0x3d	; 61
    49ea:	9e b7       	in	r25, 0x3e	; 62
    49ec:	08 96       	adiw	r24, 0x08	; 8
    49ee:	cd bf       	out	0x3d, r28	; 61
    49f0:	de bf       	out	0x3e, r29	; 62
    49f2:	47 e2       	ldi	r20, 0x27	; 39
    49f4:	57 e4       	ldi	r21, 0x47	; 71
    49f6:	6f e6       	ldi	r22, 0x6F	; 111
    49f8:	70 e4       	ldi	r23, 0x40	; 64
    49fa:	83 e0       	ldi	r24, 0x03	; 3
    49fc:	0e 94 80 5b 	call	0xb700	; 0xb700 <_Z11lb_send_msg13LBMessageTypePKcPc>
    4a00:	8b 89       	ldd	r24, Y+19	; 0x13
    4a02:	9c 89       	ldd	r25, Y+20	; 0x14
    4a04:	ad 89       	ldd	r26, Y+21	; 0x15
    4a06:	be 89       	ldd	r27, Y+22	; 0x16
    4a08:	80 93 d1 47 	sts	0x47D1, r24	; 0x8047d1 <_ZZ17handleLinkBusMsgsvE8lastTime>
    4a0c:	90 93 d2 47 	sts	0x47D2, r25	; 0x8047d2 <_ZZ17handleLinkBusMsgsvE8lastTime+0x1>
    4a10:	a0 93 d3 47 	sts	0x47D3, r26	; 0x8047d3 <_ZZ17handleLinkBusMsgsvE8lastTime+0x2>
    4a14:	b0 93 d4 47 	sts	0x47D4, r27	; 0x8047d4 <_ZZ17handleLinkBusMsgsvE8lastTime+0x3>
    4a18:	54 c3       	rjmp	.+1704   	; 0x50c2 <_Z17handleLinkBusMsgsv+0xe7a>
    4a1a:	8a 85       	ldd	r24, Y+10	; 0x0a
    4a1c:	9b 85       	ldd	r25, Y+11	; 0x0b
    4a1e:	fc 01       	movw	r30, r24
    4a20:	83 81       	ldd	r24, Z+3	; 0x03
    4a22:	88 23       	and	r24, r24
    4a24:	09 f4       	brne	.+2      	; 0x4a28 <_Z17handleLinkBusMsgsv+0x7e0>
    4a26:	43 c0       	rjmp	.+134    	; 0x4aae <_Z17handleLinkBusMsgsv+0x866>
    4a28:	8a 85       	ldd	r24, Y+10	; 0x0a
    4a2a:	9b 85       	ldd	r25, Y+11	; 0x0b
    4a2c:	03 96       	adiw	r24, 0x03	; 3
    4a2e:	bc 01       	movw	r22, r24
    4a30:	81 e8       	ldi	r24, 0x81	; 129
    4a32:	97 e4       	ldi	r25, 0x47	; 71
    4a34:	0e 94 03 7c 	call	0xf806	; 0xf806 <strcmp>
    4a38:	89 2b       	or	r24, r25
    4a3a:	99 f1       	breq	.+102    	; 0x4aa2 <_Z17handleLinkBusMsgsv+0x85a>
    4a3c:	8a 85       	ldd	r24, Y+10	; 0x0a
    4a3e:	9b 85       	ldd	r25, Y+11	; 0x0b
    4a40:	03 96       	adiw	r24, 0x03	; 3
    4a42:	44 e1       	ldi	r20, 0x14	; 20
    4a44:	50 e0       	ldi	r21, 0x00	; 0
    4a46:	bc 01       	movw	r22, r24
    4a48:	81 e8       	ldi	r24, 0x81	; 129
    4a4a:	97 e4       	ldi	r25, 0x47	; 71
    4a4c:	0e 94 1c 7c 	call	0xf838	; 0xf838 <strncpy>
    4a50:	80 91 81 47 	lds	r24, 0x4781	; 0x804781 <g_messages_text+0x15>
    4a54:	88 23       	and	r24, r24
    4a56:	01 f1       	breq	.+64     	; 0x4a98 <_Z17handleLinkBusMsgsv+0x850>
    4a58:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    4a5c:	88 2f       	mov	r24, r24
    4a5e:	90 e0       	ldi	r25, 0x00	; 0
    4a60:	bc 01       	movw	r22, r24
    4a62:	81 e8       	ldi	r24, 0x81	; 129
    4a64:	97 e4       	ldi	r25, 0x47	; 71
    4a66:	0e 94 61 5d 	call	0xbac2	; 0xbac2 <_Z26timeRequiredToSendStrAtWPMPcj>
    4a6a:	8c 50       	subi	r24, 0x0C	; 12
    4a6c:	9e 4f       	sbci	r25, 0xFE	; 254
    4a6e:	96 95       	lsr	r25
    4a70:	87 95       	ror	r24
    4a72:	96 95       	lsr	r25
    4a74:	87 95       	ror	r24
    4a76:	96 95       	lsr	r25
    4a78:	87 95       	ror	r24
    4a7a:	9c 01       	movw	r18, r24
    4a7c:	a5 ec       	ldi	r26, 0xC5	; 197
    4a7e:	b0 e2       	ldi	r27, 0x20	; 32
    4a80:	0e 94 3a 7a 	call	0xf474	; 0xf474 <__umulhisi3>
    4a84:	92 95       	swap	r25
    4a86:	82 95       	swap	r24
    4a88:	8f 70       	andi	r24, 0x0F	; 15
    4a8a:	89 27       	eor	r24, r25
    4a8c:	9f 70       	andi	r25, 0x0F	; 15
    4a8e:	89 27       	eor	r24, r25
    4a90:	80 93 96 47 	sts	0x4796, r24	; 0x804796 <g_time_needed_for_ID>
    4a94:	90 93 97 47 	sts	0x4797, r25	; 0x804797 <g_time_needed_for_ID+0x1>
    4a98:	80 91 cf 47 	lds	r24, 0x47CF	; 0x8047cf <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4a9c:	8f 5f       	subi	r24, 0xFF	; 255
    4a9e:	80 93 cf 47 	sts	0x47CF, r24	; 0x8047cf <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4aa2:	80 91 d0 47 	lds	r24, 0x47D0	; 0x8047d0 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    4aa6:	8f 5f       	subi	r24, 0xFF	; 255
    4aa8:	80 93 d0 47 	sts	0x47D0, r24	; 0x8047d0 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    4aac:	0c c3       	rjmp	.+1560   	; 0x50c6 <_Z17handleLinkBusMsgsv+0xe7e>
    4aae:	80 91 81 47 	lds	r24, 0x4781	; 0x804781 <g_messages_text+0x15>
    4ab2:	88 23       	and	r24, r24
    4ab4:	09 f4       	brne	.+2      	; 0x4ab8 <_Z17handleLinkBusMsgsv+0x870>
    4ab6:	07 c3       	rjmp	.+1550   	; 0x50c6 <_Z17handleLinkBusMsgsv+0xe7e>
    4ab8:	81 e8       	ldi	r24, 0x81	; 129
    4aba:	97 e4       	ldi	r25, 0x47	; 71
    4abc:	89 2f       	mov	r24, r25
    4abe:	8f 93       	push	r24
    4ac0:	81 e8       	ldi	r24, 0x81	; 129
    4ac2:	97 e4       	ldi	r25, 0x47	; 71
    4ac4:	8f 93       	push	r24
    4ac6:	83 ee       	ldi	r24, 0xE3	; 227
    4ac8:	92 e4       	ldi	r25, 0x42	; 66
    4aca:	89 2f       	mov	r24, r25
    4acc:	8f 93       	push	r24
    4ace:	83 ee       	ldi	r24, 0xE3	; 227
    4ad0:	92 e4       	ldi	r25, 0x42	; 66
    4ad2:	8f 93       	push	r24
    4ad4:	87 e2       	ldi	r24, 0x27	; 39
    4ad6:	97 e4       	ldi	r25, 0x47	; 71
    4ad8:	89 2f       	mov	r24, r25
    4ada:	8f 93       	push	r24
    4adc:	87 e2       	ldi	r24, 0x27	; 39
    4ade:	97 e4       	ldi	r25, 0x47	; 71
    4ae0:	8f 93       	push	r24
    4ae2:	0e 94 48 7c 	call	0xf890	; 0xf890 <sprintf>
    4ae6:	0f 90       	pop	r0
    4ae8:	0f 90       	pop	r0
    4aea:	0f 90       	pop	r0
    4aec:	0f 90       	pop	r0
    4aee:	0f 90       	pop	r0
    4af0:	0f 90       	pop	r0
    4af2:	87 e2       	ldi	r24, 0x27	; 39
    4af4:	97 e4       	ldi	r25, 0x47	; 71
    4af6:	0e 94 23 5b 	call	0xb646	; 0xb646 <_Z12lb_send_textPc>
    4afa:	19 82       	std	Y+1, r1	; 0x01
    4afc:	e4 c2       	rjmp	.+1480   	; 0x50c6 <_Z17handleLinkBusMsgsv+0xe7e>
    4afe:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    4b02:	8f 8b       	std	Y+23, r24	; 0x17
    4b04:	8a 85       	ldd	r24, Y+10	; 0x0a
    4b06:	9b 85       	ldd	r25, Y+11	; 0x0b
    4b08:	fc 01       	movw	r30, r24
    4b0a:	83 81       	ldd	r24, Z+3	; 0x03
    4b0c:	89 34       	cpi	r24, 0x49	; 73
    4b0e:	09 f0       	breq	.+2      	; 0x4b12 <_Z17handleLinkBusMsgsv+0x8ca>
    4b10:	76 c0       	rjmp	.+236    	; 0x4bfe <_Z17handleLinkBusMsgsv+0x9b6>
    4b12:	8a 85       	ldd	r24, Y+10	; 0x0a
    4b14:	9b 85       	ldd	r25, Y+11	; 0x0b
    4b16:	fc 01       	movw	r30, r24
    4b18:	80 8d       	ldd	r24, Z+24	; 0x18
    4b1a:	88 23       	and	r24, r24
    4b1c:	09 f4       	brne	.+2      	; 0x4b20 <_Z17handleLinkBusMsgsv+0x8d8>
    4b1e:	d5 c2       	rjmp	.+1450   	; 0x50ca <_Z17handleLinkBusMsgsv+0xe82>
    4b20:	8a 85       	ldd	r24, Y+10	; 0x0a
    4b22:	9b 85       	ldd	r25, Y+11	; 0x0b
    4b24:	48 96       	adiw	r24, 0x18	; 24
    4b26:	0e 94 b7 7b 	call	0xf76e	; 0xf76e <atol>
    4b2a:	dc 01       	movw	r26, r24
    4b2c:	cb 01       	movw	r24, r22
    4b2e:	88 8f       	std	Y+24, r24	; 0x18
    4b30:	99 8f       	std	Y+25, r25	; 0x19
    4b32:	aa 8f       	std	Y+26, r26	; 0x1a
    4b34:	bb 8f       	std	Y+27, r27	; 0x1b
    4b36:	85 e0       	ldi	r24, 0x05	; 5
    4b38:	8c 8f       	std	Y+28, r24	; 0x1c
    4b3a:	84 e1       	ldi	r24, 0x14	; 20
    4b3c:	8d 8f       	std	Y+29, r24	; 0x1d
    4b3e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    4b40:	28 2f       	mov	r18, r24
    4b42:	30 e0       	ldi	r19, 0x00	; 0
    4b44:	40 e0       	ldi	r20, 0x00	; 0
    4b46:	50 e0       	ldi	r21, 0x00	; 0
    4b48:	88 8d       	ldd	r24, Y+24	; 0x18
    4b4a:	99 8d       	ldd	r25, Y+25	; 0x19
    4b4c:	aa 8d       	ldd	r26, Y+26	; 0x1a
    4b4e:	bb 8d       	ldd	r27, Y+27	; 0x1b
    4b50:	28 17       	cp	r18, r24
    4b52:	39 07       	cpc	r19, r25
    4b54:	4a 07       	cpc	r20, r26
    4b56:	5b 07       	cpc	r21, r27
    4b58:	34 f4       	brge	.+12     	; 0x4b66 <_Z17handleLinkBusMsgsv+0x91e>
    4b5a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    4b5c:	88 2f       	mov	r24, r24
    4b5e:	90 e0       	ldi	r25, 0x00	; 0
    4b60:	a0 e0       	ldi	r26, 0x00	; 0
    4b62:	b0 e0       	ldi	r27, 0x00	; 0
    4b64:	10 c0       	rjmp	.+32     	; 0x4b86 <_Z17handleLinkBusMsgsv+0x93e>
    4b66:	8c 8d       	ldd	r24, Y+28	; 0x1c
    4b68:	88 2f       	mov	r24, r24
    4b6a:	90 e0       	ldi	r25, 0x00	; 0
    4b6c:	a0 e0       	ldi	r26, 0x00	; 0
    4b6e:	b0 e0       	ldi	r27, 0x00	; 0
    4b70:	28 8d       	ldd	r18, Y+24	; 0x18
    4b72:	39 8d       	ldd	r19, Y+25	; 0x19
    4b74:	4a 8d       	ldd	r20, Y+26	; 0x1a
    4b76:	5b 8d       	ldd	r21, Y+27	; 0x1b
    4b78:	82 17       	cp	r24, r18
    4b7a:	93 07       	cpc	r25, r19
    4b7c:	a4 07       	cpc	r26, r20
    4b7e:	b5 07       	cpc	r27, r21
    4b80:	14 f4       	brge	.+4      	; 0x4b86 <_Z17handleLinkBusMsgsv+0x93e>
    4b82:	da 01       	movw	r26, r20
    4b84:	c9 01       	movw	r24, r18
    4b86:	8f 8b       	std	Y+23, r24	; 0x17
    4b88:	90 91 0b 40 	lds	r25, 0x400B	; 0x80400b <g_id_codespeed>
    4b8c:	81 e0       	ldi	r24, 0x01	; 1
    4b8e:	2f 89       	ldd	r18, Y+23	; 0x17
    4b90:	29 17       	cp	r18, r25
    4b92:	09 f4       	brne	.+2      	; 0x4b96 <_Z17handleLinkBusMsgsv+0x94e>
    4b94:	80 e0       	ldi	r24, 0x00	; 0
    4b96:	88 23       	and	r24, r24
    4b98:	61 f1       	breq	.+88     	; 0x4bf2 <_Z17handleLinkBusMsgsv+0x9aa>
    4b9a:	8f 89       	ldd	r24, Y+23	; 0x17
    4b9c:	80 93 0b 40 	sts	0x400B, r24	; 0x80400b <g_id_codespeed>
    4ba0:	80 91 cf 47 	lds	r24, 0x47CF	; 0x8047cf <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4ba4:	8f 5f       	subi	r24, 0xFF	; 255
    4ba6:	80 93 cf 47 	sts	0x47CF, r24	; 0x8047cf <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4baa:	80 91 81 47 	lds	r24, 0x4781	; 0x804781 <g_messages_text+0x15>
    4bae:	88 23       	and	r24, r24
    4bb0:	01 f1       	breq	.+64     	; 0x4bf2 <_Z17handleLinkBusMsgsv+0x9aa>
    4bb2:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    4bb6:	88 2f       	mov	r24, r24
    4bb8:	90 e0       	ldi	r25, 0x00	; 0
    4bba:	bc 01       	movw	r22, r24
    4bbc:	81 e8       	ldi	r24, 0x81	; 129
    4bbe:	97 e4       	ldi	r25, 0x47	; 71
    4bc0:	0e 94 61 5d 	call	0xbac2	; 0xbac2 <_Z26timeRequiredToSendStrAtWPMPcj>
    4bc4:	8c 50       	subi	r24, 0x0C	; 12
    4bc6:	9e 4f       	sbci	r25, 0xFE	; 254
    4bc8:	96 95       	lsr	r25
    4bca:	87 95       	ror	r24
    4bcc:	96 95       	lsr	r25
    4bce:	87 95       	ror	r24
    4bd0:	96 95       	lsr	r25
    4bd2:	87 95       	ror	r24
    4bd4:	9c 01       	movw	r18, r24
    4bd6:	a5 ec       	ldi	r26, 0xC5	; 197
    4bd8:	b0 e2       	ldi	r27, 0x20	; 32
    4bda:	0e 94 3a 7a 	call	0xf474	; 0xf474 <__umulhisi3>
    4bde:	92 95       	swap	r25
    4be0:	82 95       	swap	r24
    4be2:	8f 70       	andi	r24, 0x0F	; 15
    4be4:	89 27       	eor	r24, r25
    4be6:	9f 70       	andi	r25, 0x0F	; 15
    4be8:	89 27       	eor	r24, r25
    4bea:	80 93 96 47 	sts	0x4796, r24	; 0x804796 <g_time_needed_for_ID>
    4bee:	90 93 97 47 	sts	0x4797, r25	; 0x804797 <g_time_needed_for_ID+0x1>
    4bf2:	80 91 d0 47 	lds	r24, 0x47D0	; 0x8047d0 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    4bf6:	8f 5f       	subi	r24, 0xFF	; 255
    4bf8:	80 93 d0 47 	sts	0x47D0, r24	; 0x8047d0 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    4bfc:	66 c2       	rjmp	.+1228   	; 0x50ca <_Z17handleLinkBusMsgsv+0xe82>
    4bfe:	8a 85       	ldd	r24, Y+10	; 0x0a
    4c00:	9b 85       	ldd	r25, Y+11	; 0x0b
    4c02:	fc 01       	movw	r30, r24
    4c04:	83 81       	ldd	r24, Z+3	; 0x03
    4c06:	80 35       	cpi	r24, 0x50	; 80
    4c08:	09 f0       	breq	.+2      	; 0x4c0c <_Z17handleLinkBusMsgsv+0x9c4>
    4c0a:	5f c2       	rjmp	.+1214   	; 0x50ca <_Z17handleLinkBusMsgsv+0xe82>
    4c0c:	8a 85       	ldd	r24, Y+10	; 0x0a
    4c0e:	9b 85       	ldd	r25, Y+11	; 0x0b
    4c10:	fc 01       	movw	r30, r24
    4c12:	80 8d       	ldd	r24, Z+24	; 0x18
    4c14:	88 23       	and	r24, r24
    4c16:	09 f4       	brne	.+2      	; 0x4c1a <_Z17handleLinkBusMsgsv+0x9d2>
    4c18:	58 c2       	rjmp	.+1200   	; 0x50ca <_Z17handleLinkBusMsgsv+0xe82>
    4c1a:	8a 85       	ldd	r24, Y+10	; 0x0a
    4c1c:	9b 85       	ldd	r25, Y+11	; 0x0b
    4c1e:	48 96       	adiw	r24, 0x18	; 24
    4c20:	0e 94 b7 7b 	call	0xf76e	; 0xf76e <atol>
    4c24:	dc 01       	movw	r26, r24
    4c26:	cb 01       	movw	r24, r22
    4c28:	8e 8f       	std	Y+30, r24	; 0x1e
    4c2a:	9f 8f       	std	Y+31, r25	; 0x1f
    4c2c:	a8 a3       	std	Y+32, r26	; 0x20
    4c2e:	b9 a3       	std	Y+33, r27	; 0x21
    4c30:	85 e0       	ldi	r24, 0x05	; 5
    4c32:	8a a3       	std	Y+34, r24	; 0x22
    4c34:	84 e1       	ldi	r24, 0x14	; 20
    4c36:	8b a3       	std	Y+35, r24	; 0x23
    4c38:	8b a1       	ldd	r24, Y+35	; 0x23
    4c3a:	28 2f       	mov	r18, r24
    4c3c:	30 e0       	ldi	r19, 0x00	; 0
    4c3e:	40 e0       	ldi	r20, 0x00	; 0
    4c40:	50 e0       	ldi	r21, 0x00	; 0
    4c42:	8e 8d       	ldd	r24, Y+30	; 0x1e
    4c44:	9f 8d       	ldd	r25, Y+31	; 0x1f
    4c46:	a8 a1       	ldd	r26, Y+32	; 0x20
    4c48:	b9 a1       	ldd	r27, Y+33	; 0x21
    4c4a:	28 17       	cp	r18, r24
    4c4c:	39 07       	cpc	r19, r25
    4c4e:	4a 07       	cpc	r20, r26
    4c50:	5b 07       	cpc	r21, r27
    4c52:	34 f4       	brge	.+12     	; 0x4c60 <_Z17handleLinkBusMsgsv+0xa18>
    4c54:	8b a1       	ldd	r24, Y+35	; 0x23
    4c56:	88 2f       	mov	r24, r24
    4c58:	90 e0       	ldi	r25, 0x00	; 0
    4c5a:	a0 e0       	ldi	r26, 0x00	; 0
    4c5c:	b0 e0       	ldi	r27, 0x00	; 0
    4c5e:	10 c0       	rjmp	.+32     	; 0x4c80 <_Z17handleLinkBusMsgsv+0xa38>
    4c60:	8a a1       	ldd	r24, Y+34	; 0x22
    4c62:	88 2f       	mov	r24, r24
    4c64:	90 e0       	ldi	r25, 0x00	; 0
    4c66:	a0 e0       	ldi	r26, 0x00	; 0
    4c68:	b0 e0       	ldi	r27, 0x00	; 0
    4c6a:	2e 8d       	ldd	r18, Y+30	; 0x1e
    4c6c:	3f 8d       	ldd	r19, Y+31	; 0x1f
    4c6e:	48 a1       	ldd	r20, Y+32	; 0x20
    4c70:	59 a1       	ldd	r21, Y+33	; 0x21
    4c72:	82 17       	cp	r24, r18
    4c74:	93 07       	cpc	r25, r19
    4c76:	a4 07       	cpc	r26, r20
    4c78:	b5 07       	cpc	r27, r21
    4c7a:	14 f4       	brge	.+4      	; 0x4c80 <_Z17handleLinkBusMsgsv+0xa38>
    4c7c:	da 01       	movw	r26, r20
    4c7e:	c9 01       	movw	r24, r18
    4c80:	8f 8b       	std	Y+23, r24	; 0x17
    4c82:	90 91 0c 40 	lds	r25, 0x400C	; 0x80400c <g_pattern_codespeed>
    4c86:	81 e0       	ldi	r24, 0x01	; 1
    4c88:	2f 89       	ldd	r18, Y+23	; 0x17
    4c8a:	29 17       	cp	r18, r25
    4c8c:	09 f4       	brne	.+2      	; 0x4c90 <_Z17handleLinkBusMsgsv+0xa48>
    4c8e:	80 e0       	ldi	r24, 0x00	; 0
    4c90:	88 23       	and	r24, r24
    4c92:	81 f0       	breq	.+32     	; 0x4cb4 <_Z17handleLinkBusMsgsv+0xa6c>
    4c94:	8f 89       	ldd	r24, Y+23	; 0x17
    4c96:	80 93 0c 40 	sts	0x400C, r24	; 0x80400c <g_pattern_codespeed>
    4c9a:	80 91 cf 47 	lds	r24, 0x47CF	; 0x8047cf <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4c9e:	8f 5f       	subi	r24, 0xFF	; 255
    4ca0:	80 93 cf 47 	sts	0x47CF, r24	; 0x8047cf <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4ca4:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    4ca8:	0e 94 aa 29 	call	0x5354	; 0x5354 <_Z13throttleValueh>
    4cac:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    4cb0:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    4cb4:	80 91 d0 47 	lds	r24, 0x47D0	; 0x8047d0 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    4cb8:	8f 5f       	subi	r24, 0xFF	; 255
    4cba:	80 93 d0 47 	sts	0x47D0, r24	; 0x8047d0 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    4cbe:	05 c2       	rjmp	.+1034   	; 0x50ca <_Z17handleLinkBusMsgsv+0xe82>
    4cc0:	1c a2       	std	Y+36, r1	; 0x24
    4cc2:	1d a2       	std	Y+37, r1	; 0x25
    4cc4:	8a 85       	ldd	r24, Y+10	; 0x0a
    4cc6:	9b 85       	ldd	r25, Y+11	; 0x0b
    4cc8:	fc 01       	movw	r30, r24
    4cca:	83 81       	ldd	r24, Z+3	; 0x03
    4ccc:	80 33       	cpi	r24, 0x30	; 48
    4cce:	71 f5       	brne	.+92     	; 0x4d2c <_Z17handleLinkBusMsgsv+0xae4>
    4cd0:	8a 85       	ldd	r24, Y+10	; 0x0a
    4cd2:	9b 85       	ldd	r25, Y+11	; 0x0b
    4cd4:	fc 01       	movw	r30, r24
    4cd6:	80 8d       	ldd	r24, Z+24	; 0x18
    4cd8:	88 23       	and	r24, r24
    4cda:	09 f4       	brne	.+2      	; 0x4cde <_Z17handleLinkBusMsgsv+0xa96>
    4cdc:	f8 c1       	rjmp	.+1008   	; 0x50ce <_Z17handleLinkBusMsgsv+0xe86>
    4cde:	8a 85       	ldd	r24, Y+10	; 0x0a
    4ce0:	9b 85       	ldd	r25, Y+11	; 0x0b
    4ce2:	48 96       	adiw	r24, 0x18	; 24
    4ce4:	0e 94 b7 7b 	call	0xf76e	; 0xf76e <atol>
    4ce8:	dc 01       	movw	r26, r24
    4cea:	cb 01       	movw	r24, r22
    4cec:	8c a3       	std	Y+36, r24	; 0x24
    4cee:	9d a3       	std	Y+37, r25	; 0x25
    4cf0:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_off_air_seconds>
    4cf4:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    4cf8:	41 e0       	ldi	r20, 0x01	; 1
    4cfa:	2c a1       	ldd	r18, Y+36	; 0x24
    4cfc:	3d a1       	ldd	r19, Y+37	; 0x25
    4cfe:	28 17       	cp	r18, r24
    4d00:	39 07       	cpc	r19, r25
    4d02:	09 f4       	brne	.+2      	; 0x4d06 <_Z17handleLinkBusMsgsv+0xabe>
    4d04:	40 e0       	ldi	r20, 0x00	; 0
    4d06:	44 23       	and	r20, r20
    4d08:	59 f0       	breq	.+22     	; 0x4d20 <_Z17handleLinkBusMsgsv+0xad8>
    4d0a:	8c a1       	ldd	r24, Y+36	; 0x24
    4d0c:	9d a1       	ldd	r25, Y+37	; 0x25
    4d0e:	80 93 0f 40 	sts	0x400F, r24	; 0x80400f <g_off_air_seconds>
    4d12:	90 93 10 40 	sts	0x4010, r25	; 0x804010 <g_off_air_seconds+0x1>
    4d16:	80 91 cf 47 	lds	r24, 0x47CF	; 0x8047cf <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4d1a:	8f 5f       	subi	r24, 0xFF	; 255
    4d1c:	80 93 cf 47 	sts	0x47CF, r24	; 0x8047cf <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4d20:	80 91 d0 47 	lds	r24, 0x47D0	; 0x8047d0 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    4d24:	8f 5f       	subi	r24, 0xFF	; 255
    4d26:	80 93 d0 47 	sts	0x47D0, r24	; 0x8047d0 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    4d2a:	d1 c1       	rjmp	.+930    	; 0x50ce <_Z17handleLinkBusMsgsv+0xe86>
    4d2c:	8a 85       	ldd	r24, Y+10	; 0x0a
    4d2e:	9b 85       	ldd	r25, Y+11	; 0x0b
    4d30:	fc 01       	movw	r30, r24
    4d32:	83 81       	ldd	r24, Z+3	; 0x03
    4d34:	81 33       	cpi	r24, 0x31	; 49
    4d36:	71 f5       	brne	.+92     	; 0x4d94 <_Z17handleLinkBusMsgsv+0xb4c>
    4d38:	8a 85       	ldd	r24, Y+10	; 0x0a
    4d3a:	9b 85       	ldd	r25, Y+11	; 0x0b
    4d3c:	fc 01       	movw	r30, r24
    4d3e:	80 8d       	ldd	r24, Z+24	; 0x18
    4d40:	88 23       	and	r24, r24
    4d42:	09 f4       	brne	.+2      	; 0x4d46 <_Z17handleLinkBusMsgsv+0xafe>
    4d44:	c4 c1       	rjmp	.+904    	; 0x50ce <_Z17handleLinkBusMsgsv+0xe86>
    4d46:	8a 85       	ldd	r24, Y+10	; 0x0a
    4d48:	9b 85       	ldd	r25, Y+11	; 0x0b
    4d4a:	48 96       	adiw	r24, 0x18	; 24
    4d4c:	0e 94 b7 7b 	call	0xf76e	; 0xf76e <atol>
    4d50:	dc 01       	movw	r26, r24
    4d52:	cb 01       	movw	r24, r22
    4d54:	8c a3       	std	Y+36, r24	; 0x24
    4d56:	9d a3       	std	Y+37, r25	; 0x25
    4d58:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    4d5c:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    4d60:	41 e0       	ldi	r20, 0x01	; 1
    4d62:	2c a1       	ldd	r18, Y+36	; 0x24
    4d64:	3d a1       	ldd	r19, Y+37	; 0x25
    4d66:	28 17       	cp	r18, r24
    4d68:	39 07       	cpc	r19, r25
    4d6a:	09 f4       	brne	.+2      	; 0x4d6e <_Z17handleLinkBusMsgsv+0xb26>
    4d6c:	40 e0       	ldi	r20, 0x00	; 0
    4d6e:	44 23       	and	r20, r20
    4d70:	59 f0       	breq	.+22     	; 0x4d88 <_Z17handleLinkBusMsgsv+0xb40>
    4d72:	8c a1       	ldd	r24, Y+36	; 0x24
    4d74:	9d a1       	ldd	r25, Y+37	; 0x25
    4d76:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_on_air_seconds>
    4d7a:	90 93 0e 40 	sts	0x400E, r25	; 0x80400e <g_on_air_seconds+0x1>
    4d7e:	80 91 cf 47 	lds	r24, 0x47CF	; 0x8047cf <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4d82:	8f 5f       	subi	r24, 0xFF	; 255
    4d84:	80 93 cf 47 	sts	0x47CF, r24	; 0x8047cf <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4d88:	80 91 d0 47 	lds	r24, 0x47D0	; 0x8047d0 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    4d8c:	8f 5f       	subi	r24, 0xFF	; 255
    4d8e:	80 93 d0 47 	sts	0x47D0, r24	; 0x8047d0 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    4d92:	9d c1       	rjmp	.+826    	; 0x50ce <_Z17handleLinkBusMsgsv+0xe86>
    4d94:	8a 85       	ldd	r24, Y+10	; 0x0a
    4d96:	9b 85       	ldd	r25, Y+11	; 0x0b
    4d98:	fc 01       	movw	r30, r24
    4d9a:	83 81       	ldd	r24, Z+3	; 0x03
    4d9c:	89 34       	cpi	r24, 0x49	; 73
    4d9e:	71 f5       	brne	.+92     	; 0x4dfc <_Z17handleLinkBusMsgsv+0xbb4>
    4da0:	8a 85       	ldd	r24, Y+10	; 0x0a
    4da2:	9b 85       	ldd	r25, Y+11	; 0x0b
    4da4:	fc 01       	movw	r30, r24
    4da6:	80 8d       	ldd	r24, Z+24	; 0x18
    4da8:	88 23       	and	r24, r24
    4daa:	09 f4       	brne	.+2      	; 0x4dae <_Z17handleLinkBusMsgsv+0xb66>
    4dac:	90 c1       	rjmp	.+800    	; 0x50ce <_Z17handleLinkBusMsgsv+0xe86>
    4dae:	8a 85       	ldd	r24, Y+10	; 0x0a
    4db0:	9b 85       	ldd	r25, Y+11	; 0x0b
    4db2:	48 96       	adiw	r24, 0x18	; 24
    4db4:	0e 94 b7 7b 	call	0xf76e	; 0xf76e <atol>
    4db8:	dc 01       	movw	r26, r24
    4dba:	cb 01       	movw	r24, r22
    4dbc:	8c a3       	std	Y+36, r24	; 0x24
    4dbe:	9d a3       	std	Y+37, r25	; 0x25
    4dc0:	80 91 11 40 	lds	r24, 0x4011	; 0x804011 <g_ID_period_seconds>
    4dc4:	90 91 12 40 	lds	r25, 0x4012	; 0x804012 <g_ID_period_seconds+0x1>
    4dc8:	41 e0       	ldi	r20, 0x01	; 1
    4dca:	2c a1       	ldd	r18, Y+36	; 0x24
    4dcc:	3d a1       	ldd	r19, Y+37	; 0x25
    4dce:	28 17       	cp	r18, r24
    4dd0:	39 07       	cpc	r19, r25
    4dd2:	09 f4       	brne	.+2      	; 0x4dd6 <_Z17handleLinkBusMsgsv+0xb8e>
    4dd4:	40 e0       	ldi	r20, 0x00	; 0
    4dd6:	44 23       	and	r20, r20
    4dd8:	59 f0       	breq	.+22     	; 0x4df0 <_Z17handleLinkBusMsgsv+0xba8>
    4dda:	8c a1       	ldd	r24, Y+36	; 0x24
    4ddc:	9d a1       	ldd	r25, Y+37	; 0x25
    4dde:	80 93 11 40 	sts	0x4011, r24	; 0x804011 <g_ID_period_seconds>
    4de2:	90 93 12 40 	sts	0x4012, r25	; 0x804012 <g_ID_period_seconds+0x1>
    4de6:	80 91 cf 47 	lds	r24, 0x47CF	; 0x8047cf <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4dea:	8f 5f       	subi	r24, 0xFF	; 255
    4dec:	80 93 cf 47 	sts	0x47CF, r24	; 0x8047cf <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4df0:	80 91 d0 47 	lds	r24, 0x47D0	; 0x8047d0 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    4df4:	8f 5f       	subi	r24, 0xFF	; 255
    4df6:	80 93 d0 47 	sts	0x47D0, r24	; 0x8047d0 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    4dfa:	69 c1       	rjmp	.+722    	; 0x50ce <_Z17handleLinkBusMsgsv+0xe86>
    4dfc:	8a 85       	ldd	r24, Y+10	; 0x0a
    4dfe:	9b 85       	ldd	r25, Y+11	; 0x0b
    4e00:	fc 01       	movw	r30, r24
    4e02:	83 81       	ldd	r24, Z+3	; 0x03
    4e04:	84 34       	cpi	r24, 0x44	; 68
    4e06:	09 f0       	breq	.+2      	; 0x4e0a <_Z17handleLinkBusMsgsv+0xbc2>
    4e08:	62 c1       	rjmp	.+708    	; 0x50ce <_Z17handleLinkBusMsgsv+0xe86>
    4e0a:	8a 85       	ldd	r24, Y+10	; 0x0a
    4e0c:	9b 85       	ldd	r25, Y+11	; 0x0b
    4e0e:	fc 01       	movw	r30, r24
    4e10:	80 8d       	ldd	r24, Z+24	; 0x18
    4e12:	88 23       	and	r24, r24
    4e14:	09 f4       	brne	.+2      	; 0x4e18 <_Z17handleLinkBusMsgsv+0xbd0>
    4e16:	5b c1       	rjmp	.+694    	; 0x50ce <_Z17handleLinkBusMsgsv+0xe86>
    4e18:	8a 85       	ldd	r24, Y+10	; 0x0a
    4e1a:	9b 85       	ldd	r25, Y+11	; 0x0b
    4e1c:	48 96       	adiw	r24, 0x18	; 24
    4e1e:	0e 94 b7 7b 	call	0xf76e	; 0xf76e <atol>
    4e22:	dc 01       	movw	r26, r24
    4e24:	cb 01       	movw	r24, r22
    4e26:	8c a3       	std	Y+36, r24	; 0x24
    4e28:	9d a3       	std	Y+37, r25	; 0x25
    4e2a:	80 91 98 47 	lds	r24, 0x4798	; 0x804798 <g_intra_cycle_delay_time>
    4e2e:	90 91 99 47 	lds	r25, 0x4799	; 0x804799 <g_intra_cycle_delay_time+0x1>
    4e32:	41 e0       	ldi	r20, 0x01	; 1
    4e34:	2c a1       	ldd	r18, Y+36	; 0x24
    4e36:	3d a1       	ldd	r19, Y+37	; 0x25
    4e38:	28 17       	cp	r18, r24
    4e3a:	39 07       	cpc	r19, r25
    4e3c:	09 f4       	brne	.+2      	; 0x4e40 <_Z17handleLinkBusMsgsv+0xbf8>
    4e3e:	40 e0       	ldi	r20, 0x00	; 0
    4e40:	44 23       	and	r20, r20
    4e42:	59 f0       	breq	.+22     	; 0x4e5a <_Z17handleLinkBusMsgsv+0xc12>
    4e44:	8c a1       	ldd	r24, Y+36	; 0x24
    4e46:	9d a1       	ldd	r25, Y+37	; 0x25
    4e48:	80 93 98 47 	sts	0x4798, r24	; 0x804798 <g_intra_cycle_delay_time>
    4e4c:	90 93 99 47 	sts	0x4799, r25	; 0x804799 <g_intra_cycle_delay_time+0x1>
    4e50:	80 91 cf 47 	lds	r24, 0x47CF	; 0x8047cf <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4e54:	8f 5f       	subi	r24, 0xFF	; 255
    4e56:	80 93 cf 47 	sts	0x47CF, r24	; 0x8047cf <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4e5a:	80 91 d0 47 	lds	r24, 0x47D0	; 0x8047d0 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    4e5e:	8f 5f       	subi	r24, 0xFF	; 255
    4e60:	80 93 d0 47 	sts	0x47D0, r24	; 0x8047d0 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    4e64:	34 c1       	rjmp	.+616    	; 0x50ce <_Z17handleLinkBusMsgsv+0xe86>
    4e66:	8a 85       	ldd	r24, Y+10	; 0x0a
    4e68:	9b 85       	ldd	r25, Y+11	; 0x0b
    4e6a:	fc 01       	movw	r30, r24
    4e6c:	83 81       	ldd	r24, Z+3	; 0x03
    4e6e:	88 23       	and	r24, r24
    4e70:	09 f4       	brne	.+2      	; 0x4e74 <_Z17handleLinkBusMsgsv+0xc2c>
    4e72:	2f c1       	rjmp	.+606    	; 0x50d2 <_Z17handleLinkBusMsgsv+0xe8a>
    4e74:	8a 85       	ldd	r24, Y+10	; 0x0a
    4e76:	9b 85       	ldd	r25, Y+11	; 0x0b
    4e78:	03 96       	adiw	r24, 0x03	; 3
    4e7a:	bc 01       	movw	r22, r24
    4e7c:	8c e6       	ldi	r24, 0x6C	; 108
    4e7e:	97 e4       	ldi	r25, 0x47	; 71
    4e80:	0e 94 03 7c 	call	0xf806	; 0xf806 <strcmp>
    4e84:	89 2b       	or	r24, r25
    4e86:	79 f0       	breq	.+30     	; 0x4ea6 <_Z17handleLinkBusMsgsv+0xc5e>
    4e88:	8a 85       	ldd	r24, Y+10	; 0x0a
    4e8a:	9b 85       	ldd	r25, Y+11	; 0x0b
    4e8c:	03 96       	adiw	r24, 0x03	; 3
    4e8e:	44 e1       	ldi	r20, 0x14	; 20
    4e90:	50 e0       	ldi	r21, 0x00	; 0
    4e92:	bc 01       	movw	r22, r24
    4e94:	8c e6       	ldi	r24, 0x6C	; 108
    4e96:	97 e4       	ldi	r25, 0x47	; 71
    4e98:	0e 94 1c 7c 	call	0xf838	; 0xf838 <strncpy>
    4e9c:	80 91 cf 47 	lds	r24, 0x47CF	; 0x8047cf <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4ea0:	8f 5f       	subi	r24, 0xFF	; 255
    4ea2:	80 93 cf 47 	sts	0x47CF, r24	; 0x8047cf <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4ea6:	80 91 d0 47 	lds	r24, 0x47D0	; 0x8047d0 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    4eaa:	8f 5f       	subi	r24, 0xFF	; 255
    4eac:	80 93 d0 47 	sts	0x47D0, r24	; 0x8047d0 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    4eb0:	10 c1       	rjmp	.+544    	; 0x50d2 <_Z17handleLinkBusMsgsv+0xe8a>
    4eb2:	1e 82       	std	Y+6, r1	; 0x06
    4eb4:	1f 82       	std	Y+7, r1	; 0x07
    4eb6:	18 86       	std	Y+8, r1	; 0x08
    4eb8:	19 86       	std	Y+9, r1	; 0x09
    4eba:	8a 85       	ldd	r24, Y+10	; 0x0a
    4ebc:	9b 85       	ldd	r25, Y+11	; 0x0b
    4ebe:	fc 01       	movw	r30, r24
    4ec0:	83 81       	ldd	r24, Z+3	; 0x03
    4ec2:	88 23       	and	r24, r24
    4ec4:	c9 f1       	breq	.+114    	; 0x4f38 <_Z17handleLinkBusMsgsv+0xcf0>
    4ec6:	8a 85       	ldd	r24, Y+10	; 0x0a
    4ec8:	9b 85       	ldd	r25, Y+11	; 0x0b
    4eca:	03 96       	adiw	r24, 0x03	; 3
    4ecc:	0e 94 b7 7b 	call	0xf76e	; 0xf76e <atol>
    4ed0:	dc 01       	movw	r26, r24
    4ed2:	cb 01       	movw	r24, r22
    4ed4:	8c a7       	std	Y+44, r24	; 0x2c
    4ed6:	9d a7       	std	Y+45, r25	; 0x2d
    4ed8:	ae a7       	std	Y+46, r26	; 0x2e
    4eda:	bf a7       	std	Y+47, r27	; 0x2f
    4edc:	0e 94 9a 6f 	call	0xdf34	; 0xdf34 <_Z14txGetFrequencyv>
    4ee0:	9b 01       	movw	r18, r22
    4ee2:	ac 01       	movw	r20, r24
    4ee4:	8c a5       	ldd	r24, Y+44	; 0x2c
    4ee6:	9d a5       	ldd	r25, Y+45	; 0x2d
    4ee8:	ae a5       	ldd	r26, Y+46	; 0x2e
    4eea:	bf a5       	ldd	r27, Y+47	; 0x2f
    4eec:	61 e0       	ldi	r22, 0x01	; 1
    4eee:	28 17       	cp	r18, r24
    4ef0:	39 07       	cpc	r19, r25
    4ef2:	4a 07       	cpc	r20, r26
    4ef4:	5b 07       	cpc	r21, r27
    4ef6:	09 f4       	brne	.+2      	; 0x4efa <_Z17handleLinkBusMsgsv+0xcb2>
    4ef8:	60 e0       	ldi	r22, 0x00	; 0
    4efa:	66 23       	and	r22, r22
    4efc:	b9 f0       	breq	.+46     	; 0x4f2c <_Z17handleLinkBusMsgsv+0xce4>
    4efe:	ce 01       	movw	r24, r28
    4f00:	8c 96       	adiw	r24, 0x2c	; 44
    4f02:	61 e0       	ldi	r22, 0x01	; 1
    4f04:	0e 94 48 6f 	call	0xde90	; 0xde90 <_Z14txSetFrequencyPmb>
    4f08:	98 2f       	mov	r25, r24
    4f0a:	81 e0       	ldi	r24, 0x01	; 1
    4f0c:	89 27       	eor	r24, r25
    4f0e:	88 23       	and	r24, r24
    4f10:	69 f0       	breq	.+26     	; 0x4f2c <_Z17handleLinkBusMsgsv+0xce4>
    4f12:	8c a5       	ldd	r24, Y+44	; 0x2c
    4f14:	9d a5       	ldd	r25, Y+45	; 0x2d
    4f16:	ae a5       	ldd	r26, Y+46	; 0x2e
    4f18:	bf a5       	ldd	r27, Y+47	; 0x2f
    4f1a:	8e 83       	std	Y+6, r24	; 0x06
    4f1c:	9f 83       	std	Y+7, r25	; 0x07
    4f1e:	a8 87       	std	Y+8, r26	; 0x08
    4f20:	b9 87       	std	Y+9, r27	; 0x09
    4f22:	80 91 cf 47 	lds	r24, 0x47CF	; 0x8047cf <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4f26:	8f 5f       	subi	r24, 0xFF	; 255
    4f28:	80 93 cf 47 	sts	0x47CF, r24	; 0x8047cf <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4f2c:	80 91 d0 47 	lds	r24, 0x47D0	; 0x8047d0 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    4f30:	8f 5f       	subi	r24, 0xFF	; 255
    4f32:	80 93 d0 47 	sts	0x47D0, r24	; 0x8047d0 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    4f36:	08 c0       	rjmp	.+16     	; 0x4f48 <_Z17handleLinkBusMsgsv+0xd00>
    4f38:	0e 94 9a 6f 	call	0xdf34	; 0xdf34 <_Z14txGetFrequencyv>
    4f3c:	dc 01       	movw	r26, r24
    4f3e:	cb 01       	movw	r24, r22
    4f40:	8e 83       	std	Y+6, r24	; 0x06
    4f42:	9f 83       	std	Y+7, r25	; 0x07
    4f44:	a8 87       	std	Y+8, r26	; 0x08
    4f46:	b9 87       	std	Y+9, r27	; 0x09
    4f48:	8e 81       	ldd	r24, Y+6	; 0x06
    4f4a:	9f 81       	ldd	r25, Y+7	; 0x07
    4f4c:	a8 85       	ldd	r26, Y+8	; 0x08
    4f4e:	b9 85       	ldd	r27, Y+9	; 0x09
    4f50:	89 2b       	or	r24, r25
    4f52:	8a 2b       	or	r24, r26
    4f54:	8b 2b       	or	r24, r27
    4f56:	09 f4       	brne	.+2      	; 0x4f5a <_Z17handleLinkBusMsgsv+0xd12>
    4f58:	be c0       	rjmp	.+380    	; 0x50d6 <_Z17handleLinkBusMsgsv+0xe8e>
    4f5a:	89 85       	ldd	r24, Y+9	; 0x09
    4f5c:	8f 93       	push	r24
    4f5e:	88 85       	ldd	r24, Y+8	; 0x08
    4f60:	8f 93       	push	r24
    4f62:	8f 81       	ldd	r24, Y+7	; 0x07
    4f64:	8f 93       	push	r24
    4f66:	8e 81       	ldd	r24, Y+6	; 0x06
    4f68:	8f 93       	push	r24
    4f6a:	8c ee       	ldi	r24, 0xEC	; 236
    4f6c:	92 e4       	ldi	r25, 0x42	; 66
    4f6e:	89 2f       	mov	r24, r25
    4f70:	8f 93       	push	r24
    4f72:	8c ee       	ldi	r24, 0xEC	; 236
    4f74:	92 e4       	ldi	r25, 0x42	; 66
    4f76:	8f 93       	push	r24
    4f78:	87 e2       	ldi	r24, 0x27	; 39
    4f7a:	97 e4       	ldi	r25, 0x47	; 71
    4f7c:	89 2f       	mov	r24, r25
    4f7e:	8f 93       	push	r24
    4f80:	87 e2       	ldi	r24, 0x27	; 39
    4f82:	97 e4       	ldi	r25, 0x47	; 71
    4f84:	8f 93       	push	r24
    4f86:	0e 94 48 7c 	call	0xf890	; 0xf890 <sprintf>
    4f8a:	8d b7       	in	r24, 0x3d	; 61
    4f8c:	9e b7       	in	r25, 0x3e	; 62
    4f8e:	08 96       	adiw	r24, 0x08	; 8
    4f90:	cd bf       	out	0x3d, r28	; 61
    4f92:	de bf       	out	0x3e, r29	; 62
    4f94:	47 e2       	ldi	r20, 0x27	; 39
    4f96:	57 e4       	ldi	r21, 0x47	; 71
    4f98:	61 ef       	ldi	r22, 0xF1	; 241
    4f9a:	72 e4       	ldi	r23, 0x42	; 66
    4f9c:	83 e0       	ldi	r24, 0x03	; 3
    4f9e:	0e 94 80 5b 	call	0xb700	; 0xb700 <_Z11lb_send_msg13LBMessageTypePKcPc>
    4fa2:	99 c0       	rjmp	.+306    	; 0x50d6 <_Z17handleLinkBusMsgsv+0xe8e>
    4fa4:	80 91 af 47 	lds	r24, 0x47AF	; 0x8047af <_ZL22g_lastConversionResult>
    4fa8:	90 91 b0 47 	lds	r25, 0x47B0	; 0x8047b0 <_ZL22g_lastConversionResult+0x1>
    4fac:	cc 01       	movw	r24, r24
    4fae:	a0 e0       	ldi	r26, 0x00	; 0
    4fb0:	b0 e0       	ldi	r27, 0x00	; 0
    4fb2:	bc 01       	movw	r22, r24
    4fb4:	cd 01       	movw	r24, r26
    4fb6:	0e 94 53 78 	call	0xf0a6	; 0xf0a6 <__floatunsisf>
    4fba:	dc 01       	movw	r26, r24
    4fbc:	cb 01       	movw	r24, r22
    4fbe:	8e a3       	std	Y+38, r24	; 0x26
    4fc0:	9f a3       	std	Y+39, r25	; 0x27
    4fc2:	a8 a7       	std	Y+40, r26	; 0x28
    4fc4:	b9 a7       	std	Y+41, r27	; 0x29
    4fc6:	20 e0       	ldi	r18, 0x00	; 0
    4fc8:	30 e0       	ldi	r19, 0x00	; 0
    4fca:	4c e2       	ldi	r20, 0x2C	; 44
    4fcc:	53 e4       	ldi	r21, 0x43	; 67
    4fce:	6e a1       	ldd	r22, Y+38	; 0x26
    4fd0:	7f a1       	ldd	r23, Y+39	; 0x27
    4fd2:	88 a5       	ldd	r24, Y+40	; 0x28
    4fd4:	99 a5       	ldd	r25, Y+41	; 0x29
    4fd6:	0e 94 4b 79 	call	0xf296	; 0xf296 <__mulsf3>
    4fda:	dc 01       	movw	r26, r24
    4fdc:	cb 01       	movw	r24, r22
    4fde:	8e a3       	std	Y+38, r24	; 0x26
    4fe0:	9f a3       	std	Y+39, r25	; 0x27
    4fe2:	a8 a7       	std	Y+40, r26	; 0x28
    4fe4:	b9 a7       	std	Y+41, r27	; 0x29
    4fe6:	2f e6       	ldi	r18, 0x6F	; 111
    4fe8:	32 e1       	ldi	r19, 0x12	; 18
    4fea:	43 e0       	ldi	r20, 0x03	; 3
    4fec:	5a e3       	ldi	r21, 0x3A	; 58
    4fee:	6e a1       	ldd	r22, Y+38	; 0x26
    4ff0:	7f a1       	ldd	r23, Y+39	; 0x27
    4ff2:	88 a5       	ldd	r24, Y+40	; 0x28
    4ff4:	99 a5       	ldd	r25, Y+41	; 0x29
    4ff6:	0e 94 4b 79 	call	0xf296	; 0xf296 <__mulsf3>
    4ffa:	dc 01       	movw	r26, r24
    4ffc:	cb 01       	movw	r24, r22
    4ffe:	8e a3       	std	Y+38, r24	; 0x26
    5000:	9f a3       	std	Y+39, r25	; 0x27
    5002:	a8 a7       	std	Y+40, r26	; 0x28
    5004:	b9 a7       	std	Y+41, r27	; 0x29
    5006:	20 e0       	ldi	r18, 0x00	; 0
    5008:	30 e0       	ldi	r19, 0x00	; 0
    500a:	40 e8       	ldi	r20, 0x80	; 128
    500c:	5f e3       	ldi	r21, 0x3F	; 63
    500e:	6e a1       	ldd	r22, Y+38	; 0x26
    5010:	7f a1       	ldd	r23, Y+39	; 0x27
    5012:	88 a5       	ldd	r24, Y+40	; 0x28
    5014:	99 a5       	ldd	r25, Y+41	; 0x29
    5016:	0e 94 23 77 	call	0xee46	; 0xee46 <__addsf3>
    501a:	dc 01       	movw	r26, r24
    501c:	cb 01       	movw	r24, r22
    501e:	8e a3       	std	Y+38, r24	; 0x26
    5020:	9f a3       	std	Y+39, r25	; 0x27
    5022:	a8 a7       	std	Y+40, r26	; 0x28
    5024:	b9 a7       	std	Y+41, r27	; 0x29
    5026:	8e a1       	ldd	r24, Y+38	; 0x26
    5028:	9f a1       	ldd	r25, Y+39	; 0x27
    502a:	a8 a5       	ldd	r26, Y+40	; 0x28
    502c:	b9 a5       	ldd	r27, Y+41	; 0x29
    502e:	07 e2       	ldi	r16, 0x27	; 39
    5030:	17 e4       	ldi	r17, 0x47	; 71
    5032:	20 e0       	ldi	r18, 0x00	; 0
    5034:	44 e0       	ldi	r20, 0x04	; 4
    5036:	bc 01       	movw	r22, r24
    5038:	cd 01       	movw	r24, r26
    503a:	0e 94 54 7a 	call	0xf4a8	; 0xf4a8 <dtostrf>
    503e:	10 92 2c 47 	sts	0x472C, r1	; 0x80472c <_ZL9g_tempStr+0x5>
    5042:	65 ef       	ldi	r22, 0xF5	; 245
    5044:	72 e4       	ldi	r23, 0x42	; 66
    5046:	87 e2       	ldi	r24, 0x27	; 39
    5048:	97 e4       	ldi	r25, 0x47	; 71
    504a:	0e 94 cf 5b 	call	0xb79e	; 0xb79e <_Z16lb_broadcast_strPKcS0_>
    504e:	80 e0       	ldi	r24, 0x00	; 0
    5050:	90 e0       	ldi	r25, 0x00	; 0
    5052:	0e 94 c2 40 	call	0x8184	; 0x8184 <ds3231_get_epoch>
    5056:	dc 01       	movw	r26, r24
    5058:	cb 01       	movw	r24, r22
    505a:	bc 01       	movw	r22, r24
    505c:	cd 01       	movw	r24, r26
    505e:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <set_system_time>
    5062:	3a c0       	rjmp	.+116    	; 0x50d8 <_Z17handleLinkBusMsgsv+0xe90>
    5064:	0e 94 9c 35 	call	0x6b38	; 0x6b38 <_Z12temperatureCv>
    5068:	dc 01       	movw	r26, r24
    506a:	cb 01       	movw	r24, r22
    506c:	07 e2       	ldi	r16, 0x27	; 39
    506e:	17 e4       	ldi	r17, 0x47	; 71
    5070:	21 e0       	ldi	r18, 0x01	; 1
    5072:	44 e0       	ldi	r20, 0x04	; 4
    5074:	bc 01       	movw	r22, r24
    5076:	cd 01       	movw	r24, r26
    5078:	0e 94 54 7a 	call	0xf4a8	; 0xf4a8 <dtostrf>
    507c:	10 92 2c 47 	sts	0x472C, r1	; 0x80472c <_ZL9g_tempStr+0x5>
    5080:	6a ef       	ldi	r22, 0xFA	; 250
    5082:	72 e4       	ldi	r23, 0x42	; 66
    5084:	87 e2       	ldi	r24, 0x27	; 39
    5086:	97 e4       	ldi	r25, 0x47	; 71
    5088:	0e 94 cf 5b 	call	0xb79e	; 0xb79e <_Z16lb_broadcast_strPKcS0_>
    508c:	25 c0       	rjmp	.+74     	; 0x50d8 <_Z17handleLinkBusMsgsv+0xe90>
    508e:	4f ef       	ldi	r20, 0xFF	; 255
    5090:	52 e4       	ldi	r21, 0x42	; 66
    5092:	63 e0       	ldi	r22, 0x03	; 3
    5094:	73 e4       	ldi	r23, 0x43	; 67
    5096:	83 e0       	ldi	r24, 0x03	; 3
    5098:	0e 94 80 5b 	call	0xb700	; 0xb700 <_Z11lb_send_msg13LBMessageTypePKcPc>
    509c:	1d c0       	rjmp	.+58     	; 0x50d8 <_Z17handleLinkBusMsgsv+0xe90>
    509e:	19 82       	std	Y+1, r1	; 0x01
    50a0:	87 e0       	ldi	r24, 0x07	; 7
    50a2:	93 e4       	ldi	r25, 0x43	; 67
    50a4:	0e 94 23 5b 	call	0xb646	; 0xb646 <_Z12lb_send_textPc>
    50a8:	17 c0       	rjmp	.+46     	; 0x50d8 <_Z17handleLinkBusMsgsv+0xe90>
    50aa:	00 00       	nop
    50ac:	15 c0       	rjmp	.+42     	; 0x50d8 <_Z17handleLinkBusMsgsv+0xe90>
    50ae:	00 00       	nop
    50b0:	13 c0       	rjmp	.+38     	; 0x50d8 <_Z17handleLinkBusMsgsv+0xe90>
    50b2:	00 00       	nop
    50b4:	11 c0       	rjmp	.+34     	; 0x50d8 <_Z17handleLinkBusMsgsv+0xe90>
    50b6:	00 00       	nop
    50b8:	0f c0       	rjmp	.+30     	; 0x50d8 <_Z17handleLinkBusMsgsv+0xe90>
    50ba:	00 00       	nop
    50bc:	0d c0       	rjmp	.+26     	; 0x50d8 <_Z17handleLinkBusMsgsv+0xe90>
    50be:	00 00       	nop
    50c0:	0b c0       	rjmp	.+22     	; 0x50d8 <_Z17handleLinkBusMsgsv+0xe90>
    50c2:	00 00       	nop
    50c4:	09 c0       	rjmp	.+18     	; 0x50d8 <_Z17handleLinkBusMsgsv+0xe90>
    50c6:	00 00       	nop
    50c8:	07 c0       	rjmp	.+14     	; 0x50d8 <_Z17handleLinkBusMsgsv+0xe90>
    50ca:	00 00       	nop
    50cc:	05 c0       	rjmp	.+10     	; 0x50d8 <_Z17handleLinkBusMsgsv+0xe90>
    50ce:	00 00       	nop
    50d0:	03 c0       	rjmp	.+6      	; 0x50d8 <_Z17handleLinkBusMsgsv+0xe90>
    50d2:	00 00       	nop
    50d4:	01 c0       	rjmp	.+2      	; 0x50d8 <_Z17handleLinkBusMsgsv+0xe90>
    50d6:	00 00       	nop
    50d8:	8a 85       	ldd	r24, Y+10	; 0x0a
    50da:	9b 85       	ldd	r25, Y+11	; 0x0b
    50dc:	fc 01       	movw	r30, r24
    50de:	11 82       	std	Z+1, r1	; 0x01
    50e0:	12 82       	std	Z+2, r1	; 0x02
    50e2:	89 81       	ldd	r24, Y+1	; 0x01
    50e4:	88 23       	and	r24, r24
    50e6:	09 f4       	brne	.+2      	; 0x50ea <_Z17handleLinkBusMsgsv+0xea2>
    50e8:	ba c8       	rjmp	.-3724   	; 0x425e <_Z17handleLinkBusMsgsv+0x16>
    50ea:	8d e0       	ldi	r24, 0x0D	; 13
    50ec:	93 e4       	ldi	r25, 0x43	; 67
    50ee:	0e 94 23 5b 	call	0xb646	; 0xb646 <_Z12lb_send_textPc>
    50f2:	b5 c8       	rjmp	.-3734   	; 0x425e <_Z17handleLinkBusMsgsv+0x16>
    50f4:	00 00       	nop
    50f6:	af 96       	adiw	r28, 0x2f	; 47
    50f8:	cd bf       	out	0x3d, r28	; 61
    50fa:	de bf       	out	0x3e, r29	; 62
    50fc:	df 91       	pop	r29
    50fe:	cf 91       	pop	r28
    5100:	1f 91       	pop	r17
    5102:	0f 91       	pop	r16
    5104:	08 95       	ret

00005106 <_Z19updateAntennaStatusv>:
    5106:	cf 93       	push	r28
    5108:	df 93       	push	r29
    510a:	1f 92       	push	r1
    510c:	cd b7       	in	r28, 0x3d	; 61
    510e:	de b7       	in	r29, 0x3e	; 62
    5110:	0e 94 7b 2c 	call	0x58f6	; 0x58f6 <_Z18antennaIsConnectedv>
    5114:	89 83       	std	Y+1, r24	; 0x01
    5116:	99 81       	ldd	r25, Y+1	; 0x01
    5118:	81 e0       	ldi	r24, 0x01	; 1
    511a:	89 27       	eor	r24, r25
    511c:	88 23       	and	r24, r24
    511e:	91 f0       	breq	.+36     	; 0x5144 <_Z19updateAntennaStatusv+0x3e>
    5120:	90 91 5f 47 	lds	r25, 0x475F	; 0x80475f <g_antenna_connect_state>
    5124:	81 e0       	ldi	r24, 0x01	; 1
    5126:	91 30       	cpi	r25, 0x01	; 1
    5128:	09 f4       	brne	.+2      	; 0x512c <_Z19updateAntennaStatusv+0x26>
    512a:	80 e0       	ldi	r24, 0x00	; 0
    512c:	88 23       	and	r24, r24
    512e:	31 f0       	breq	.+12     	; 0x513c <_Z19updateAntennaStatusv+0x36>
    5130:	81 e0       	ldi	r24, 0x01	; 1
    5132:	80 93 5f 47 	sts	0x475F, r24	; 0x80475f <g_antenna_connect_state>
    5136:	81 e0       	ldi	r24, 0x01	; 1
    5138:	80 93 06 40 	sts	0x4006, r24	; 0x804006 <_ZL28g_antenna_connection_changed>
    513c:	83 e0       	ldi	r24, 0x03	; 3
    513e:	80 93 21 40 	sts	0x4021, r24	; 0x804021 <_ZZ19updateAntennaStatusvE16antennaReadCount>
    5142:	27 c0       	rjmp	.+78     	; 0x5192 <_Z19updateAntennaStatusv+0x8c>
    5144:	90 91 5f 47 	lds	r25, 0x475F	; 0x80475f <g_antenna_connect_state>
    5148:	81 e0       	ldi	r24, 0x01	; 1
    514a:	92 30       	cpi	r25, 0x02	; 2
    514c:	09 f4       	brne	.+2      	; 0x5150 <_Z19updateAntennaStatusv+0x4a>
    514e:	80 e0       	ldi	r24, 0x00	; 0
    5150:	88 23       	and	r24, r24
    5152:	f9 f0       	breq	.+62     	; 0x5192 <_Z19updateAntennaStatusv+0x8c>
    5154:	80 91 d5 47 	lds	r24, 0x47D5	; 0x8047d5 <_ZZ19updateAntennaStatusvE26lastAntennaConnectionState>
    5158:	99 81       	ldd	r25, Y+1	; 0x01
    515a:	98 17       	cp	r25, r24
    515c:	b9 f4       	brne	.+46     	; 0x518c <_Z19updateAntennaStatusv+0x86>
    515e:	80 91 21 40 	lds	r24, 0x4021	; 0x804021 <_ZZ19updateAntennaStatusvE16antennaReadCount>
    5162:	88 23       	and	r24, r24
    5164:	b1 f0       	breq	.+44     	; 0x5192 <_Z19updateAntennaStatusv+0x8c>
    5166:	80 91 21 40 	lds	r24, 0x4021	; 0x804021 <_ZZ19updateAntennaStatusvE16antennaReadCount>
    516a:	81 50       	subi	r24, 0x01	; 1
    516c:	80 93 21 40 	sts	0x4021, r24	; 0x804021 <_ZZ19updateAntennaStatusvE16antennaReadCount>
    5170:	80 91 21 40 	lds	r24, 0x4021	; 0x804021 <_ZZ19updateAntennaStatusvE16antennaReadCount>
    5174:	88 23       	and	r24, r24
    5176:	69 f4       	brne	.+26     	; 0x5192 <_Z19updateAntennaStatusv+0x8c>
    5178:	82 e0       	ldi	r24, 0x02	; 2
    517a:	80 93 5f 47 	sts	0x475F, r24	; 0x80475f <g_antenna_connect_state>
    517e:	81 e0       	ldi	r24, 0x01	; 1
    5180:	80 93 06 40 	sts	0x4006, r24	; 0x804006 <_ZL28g_antenna_connection_changed>
    5184:	83 e0       	ldi	r24, 0x03	; 3
    5186:	80 93 21 40 	sts	0x4021, r24	; 0x804021 <_ZZ19updateAntennaStatusvE16antennaReadCount>
    518a:	03 c0       	rjmp	.+6      	; 0x5192 <_Z19updateAntennaStatusv+0x8c>
    518c:	83 e0       	ldi	r24, 0x03	; 3
    518e:	80 93 21 40 	sts	0x4021, r24	; 0x804021 <_ZZ19updateAntennaStatusvE16antennaReadCount>
    5192:	89 81       	ldd	r24, Y+1	; 0x01
    5194:	80 93 d5 47 	sts	0x47D5, r24	; 0x8047d5 <_ZZ19updateAntennaStatusvE26lastAntennaConnectionState>
    5198:	00 00       	nop
    519a:	0f 90       	pop	r0
    519c:	df 91       	pop	r29
    519e:	cf 91       	pop	r28
    51a0:	08 95       	ret

000051a2 <_Z12eventEnabledv>:
    51a2:	ef 92       	push	r14
    51a4:	ff 92       	push	r15
    51a6:	0f 93       	push	r16
    51a8:	1f 93       	push	r17
    51aa:	cf 93       	push	r28
    51ac:	df 93       	push	r29
    51ae:	cd b7       	in	r28, 0x3d	; 61
    51b0:	de b7       	in	r29, 0x3e	; 62
    51b2:	29 97       	sbiw	r28, 0x09	; 9
    51b4:	cd bf       	out	0x3d, r28	; 61
    51b6:	de bf       	out	0x3e, r29	; 62
    51b8:	20 91 9a 47 	lds	r18, 0x479A	; 0x80479a <g_event_start_epoch>
    51bc:	30 91 9b 47 	lds	r19, 0x479B	; 0x80479b <g_event_start_epoch+0x1>
    51c0:	40 91 9c 47 	lds	r20, 0x479C	; 0x80479c <g_event_start_epoch+0x2>
    51c4:	50 91 9d 47 	lds	r21, 0x479D	; 0x80479d <g_event_start_epoch+0x3>
    51c8:	80 91 9e 47 	lds	r24, 0x479E	; 0x80479e <g_event_finish_epoch>
    51cc:	90 91 9f 47 	lds	r25, 0x479F	; 0x80479f <g_event_finish_epoch+0x1>
    51d0:	a0 91 a0 47 	lds	r26, 0x47A0	; 0x8047a0 <g_event_finish_epoch+0x2>
    51d4:	b0 91 a1 47 	lds	r27, 0x47A1	; 0x8047a1 <g_event_finish_epoch+0x3>
    51d8:	bc 01       	movw	r22, r24
    51da:	cd 01       	movw	r24, r26
    51dc:	0e 94 71 73 	call	0xe6e2	; 0xe6e2 <_Z7timeDifmm>
    51e0:	dc 01       	movw	r26, r24
    51e2:	cb 01       	movw	r24, r22
    51e4:	89 83       	std	Y+1, r24	; 0x01
    51e6:	9a 83       	std	Y+2, r25	; 0x02
    51e8:	ab 83       	std	Y+3, r26	; 0x03
    51ea:	bc 83       	std	Y+4, r27	; 0x04
    51ec:	21 e0       	ldi	r18, 0x01	; 1
    51ee:	89 81       	ldd	r24, Y+1	; 0x01
    51f0:	9a 81       	ldd	r25, Y+2	; 0x02
    51f2:	ab 81       	ldd	r26, Y+3	; 0x03
    51f4:	bc 81       	ldd	r27, Y+4	; 0x04
    51f6:	18 16       	cp	r1, r24
    51f8:	19 06       	cpc	r1, r25
    51fa:	1a 06       	cpc	r1, r26
    51fc:	1b 06       	cpc	r1, r27
    51fe:	0c f0       	brlt	.+2      	; 0x5202 <_Z12eventEnabledv+0x60>
    5200:	20 e0       	ldi	r18, 0x00	; 0
    5202:	2d 83       	std	Y+5, r18	; 0x05
    5204:	80 e0       	ldi	r24, 0x00	; 0
    5206:	90 e0       	ldi	r25, 0x00	; 0
    5208:	0e 94 56 06 	call	0xcac	; 0xcac <time>
    520c:	dc 01       	movw	r26, r24
    520e:	cb 01       	movw	r24, r22
    5210:	8e 83       	std	Y+6, r24	; 0x06
    5212:	9f 83       	std	Y+7, r25	; 0x07
    5214:	a8 87       	std	Y+8, r26	; 0x08
    5216:	b9 87       	std	Y+9, r27	; 0x09
    5218:	20 91 9e 47 	lds	r18, 0x479E	; 0x80479e <g_event_finish_epoch>
    521c:	30 91 9f 47 	lds	r19, 0x479F	; 0x80479f <g_event_finish_epoch+0x1>
    5220:	40 91 a0 47 	lds	r20, 0x47A0	; 0x8047a0 <g_event_finish_epoch+0x2>
    5224:	50 91 a1 47 	lds	r21, 0x47A1	; 0x8047a1 <g_event_finish_epoch+0x3>
    5228:	8e 81       	ldd	r24, Y+6	; 0x06
    522a:	9f 81       	ldd	r25, Y+7	; 0x07
    522c:	a8 85       	ldd	r26, Y+8	; 0x08
    522e:	b9 85       	ldd	r27, Y+9	; 0x09
    5230:	bc 01       	movw	r22, r24
    5232:	cd 01       	movw	r24, r26
    5234:	0e 94 71 73 	call	0xe6e2	; 0xe6e2 <_Z7timeDifmm>
    5238:	dc 01       	movw	r26, r24
    523a:	cb 01       	movw	r24, r22
    523c:	89 83       	std	Y+1, r24	; 0x01
    523e:	9a 83       	std	Y+2, r25	; 0x02
    5240:	ab 83       	std	Y+3, r26	; 0x03
    5242:	bc 83       	std	Y+4, r27	; 0x04
    5244:	89 81       	ldd	r24, Y+1	; 0x01
    5246:	9a 81       	ldd	r25, Y+2	; 0x02
    5248:	ab 81       	ldd	r26, Y+3	; 0x03
    524a:	bc 81       	ldd	r27, Y+4	; 0x04
    524c:	bb 23       	and	r27, r27
    524e:	b4 f0       	brlt	.+44     	; 0x527c <_Z12eventEnabledv+0xda>
    5250:	8d 81       	ldd	r24, Y+5	; 0x05
    5252:	88 23       	and	r24, r24
    5254:	99 f0       	breq	.+38     	; 0x527c <_Z12eventEnabledv+0xda>
    5256:	84 e0       	ldi	r24, 0x04	; 4
    5258:	80 93 6b 47 	sts	0x476B, r24	; 0x80476b <_ZL11g_sleepType>
    525c:	8f ef       	ldi	r24, 0xFF	; 255
    525e:	9f ef       	ldi	r25, 0xFF	; 255
    5260:	dc 01       	movw	r26, r24
    5262:	80 93 13 40 	sts	0x4013, r24	; 0x804013 <_ZL18g_seconds_to_sleep>
    5266:	90 93 14 40 	sts	0x4014, r25	; 0x804014 <_ZL18g_seconds_to_sleep+0x1>
    526a:	a0 93 15 40 	sts	0x4015, r26	; 0x804015 <_ZL18g_seconds_to_sleep+0x2>
    526e:	b0 93 16 40 	sts	0x4016, r27	; 0x804016 <_ZL18g_seconds_to_sleep+0x3>
    5272:	81 e0       	ldi	r24, 0x01	; 1
    5274:	80 93 a6 47 	sts	0x47A6, r24	; 0x8047a6 <_ZL17g_go_to_sleep_now>
    5278:	80 e0       	ldi	r24, 0x00	; 0
    527a:	57 c0       	rjmp	.+174    	; 0x532a <_Z12eventEnabledv+0x188>
    527c:	20 91 9a 47 	lds	r18, 0x479A	; 0x80479a <g_event_start_epoch>
    5280:	30 91 9b 47 	lds	r19, 0x479B	; 0x80479b <g_event_start_epoch+0x1>
    5284:	40 91 9c 47 	lds	r20, 0x479C	; 0x80479c <g_event_start_epoch+0x2>
    5288:	50 91 9d 47 	lds	r21, 0x479D	; 0x80479d <g_event_start_epoch+0x3>
    528c:	8e 81       	ldd	r24, Y+6	; 0x06
    528e:	9f 81       	ldd	r25, Y+7	; 0x07
    5290:	a8 85       	ldd	r26, Y+8	; 0x08
    5292:	b9 85       	ldd	r27, Y+9	; 0x09
    5294:	bc 01       	movw	r22, r24
    5296:	cd 01       	movw	r24, r26
    5298:	0e 94 71 73 	call	0xe6e2	; 0xe6e2 <_Z7timeDifmm>
    529c:	dc 01       	movw	r26, r24
    529e:	cb 01       	movw	r24, r22
    52a0:	89 83       	std	Y+1, r24	; 0x01
    52a2:	9a 83       	std	Y+2, r25	; 0x02
    52a4:	ab 83       	std	Y+3, r26	; 0x03
    52a6:	bc 83       	std	Y+4, r27	; 0x04
    52a8:	89 81       	ldd	r24, Y+1	; 0x01
    52aa:	9a 81       	ldd	r25, Y+2	; 0x02
    52ac:	ab 81       	ldd	r26, Y+3	; 0x03
    52ae:	bc 81       	ldd	r27, Y+4	; 0x04
    52b0:	84 3c       	cpi	r24, 0xC4	; 196
    52b2:	9f 4f       	sbci	r25, 0xFF	; 255
    52b4:	af 4f       	sbci	r26, 0xFF	; 255
    52b6:	bf 4f       	sbci	r27, 0xFF	; 255
    52b8:	cc f0       	brlt	.+50     	; 0x52ec <_Z12eventEnabledv+0x14a>
    52ba:	80 91 6b 47 	lds	r24, 0x476B	; 0x80476b <_ZL11g_sleepType>
    52be:	82 30       	cpi	r24, 0x02	; 2
    52c0:	31 f0       	breq	.+12     	; 0x52ce <_Z12eventEnabledv+0x12c>
    52c2:	80 91 a6 47 	lds	r24, 0x47A6	; 0x8047a6 <_ZL17g_go_to_sleep_now>
    52c6:	88 23       	and	r24, r24
    52c8:	11 f0       	breq	.+4      	; 0x52ce <_Z12eventEnabledv+0x12c>
    52ca:	81 e0       	ldi	r24, 0x01	; 1
    52cc:	01 c0       	rjmp	.+2      	; 0x52d0 <_Z12eventEnabledv+0x12e>
    52ce:	80 e0       	ldi	r24, 0x00	; 0
    52d0:	88 23       	and	r24, r24
    52d2:	51 f0       	breq	.+20     	; 0x52e8 <_Z12eventEnabledv+0x146>
    52d4:	10 92 6b 47 	sts	0x476B, r1	; 0x80476b <_ZL11g_sleepType>
    52d8:	10 92 13 40 	sts	0x4013, r1	; 0x804013 <_ZL18g_seconds_to_sleep>
    52dc:	10 92 14 40 	sts	0x4014, r1	; 0x804014 <_ZL18g_seconds_to_sleep+0x1>
    52e0:	10 92 15 40 	sts	0x4015, r1	; 0x804015 <_ZL18g_seconds_to_sleep+0x2>
    52e4:	10 92 16 40 	sts	0x4016, r1	; 0x804016 <_ZL18g_seconds_to_sleep+0x3>
    52e8:	81 e0       	ldi	r24, 0x01	; 1
    52ea:	1f c0       	rjmp	.+62     	; 0x532a <_Z12eventEnabledv+0x188>
    52ec:	24 ec       	ldi	r18, 0xC4	; 196
    52ee:	3f ef       	ldi	r19, 0xFF	; 255
    52f0:	4f ef       	ldi	r20, 0xFF	; 255
    52f2:	5f ef       	ldi	r21, 0xFF	; 255
    52f4:	89 81       	ldd	r24, Y+1	; 0x01
    52f6:	9a 81       	ldd	r25, Y+2	; 0x02
    52f8:	ab 81       	ldd	r26, Y+3	; 0x03
    52fa:	bc 81       	ldd	r27, Y+4	; 0x04
    52fc:	79 01       	movw	r14, r18
    52fe:	8a 01       	movw	r16, r20
    5300:	e8 1a       	sub	r14, r24
    5302:	f9 0a       	sbc	r15, r25
    5304:	0a 0b       	sbc	r16, r26
    5306:	1b 0b       	sbc	r17, r27
    5308:	d8 01       	movw	r26, r16
    530a:	c7 01       	movw	r24, r14
    530c:	80 93 13 40 	sts	0x4013, r24	; 0x804013 <_ZL18g_seconds_to_sleep>
    5310:	90 93 14 40 	sts	0x4014, r25	; 0x804014 <_ZL18g_seconds_to_sleep+0x1>
    5314:	a0 93 15 40 	sts	0x4015, r26	; 0x804015 <_ZL18g_seconds_to_sleep+0x2>
    5318:	b0 93 16 40 	sts	0x4016, r27	; 0x804016 <_ZL18g_seconds_to_sleep+0x3>
    531c:	81 e0       	ldi	r24, 0x01	; 1
    531e:	80 93 6b 47 	sts	0x476B, r24	; 0x80476b <_ZL11g_sleepType>
    5322:	81 e0       	ldi	r24, 0x01	; 1
    5324:	80 93 a6 47 	sts	0x47A6, r24	; 0x8047a6 <_ZL17g_go_to_sleep_now>
    5328:	81 e0       	ldi	r24, 0x01	; 1
    532a:	29 96       	adiw	r28, 0x09	; 9
    532c:	cd bf       	out	0x3d, r28	; 61
    532e:	de bf       	out	0x3e, r29	; 62
    5330:	df 91       	pop	r29
    5332:	cf 91       	pop	r28
    5334:	1f 91       	pop	r17
    5336:	0f 91       	pop	r16
    5338:	ff 90       	pop	r15
    533a:	ef 90       	pop	r14
    533c:	08 95       	ret

0000533e <_Z8wdt_init7WDReset>:
    533e:	cf 93       	push	r28
    5340:	df 93       	push	r29
    5342:	1f 92       	push	r1
    5344:	cd b7       	in	r28, 0x3d	; 61
    5346:	de b7       	in	r29, 0x3e	; 62
    5348:	89 83       	std	Y+1, r24	; 0x01
    534a:	00 00       	nop
    534c:	0f 90       	pop	r0
    534e:	df 91       	pop	r29
    5350:	cf 91       	pop	r28
    5352:	08 95       	ret

00005354 <_Z13throttleValueh>:
    5354:	cf 93       	push	r28
    5356:	df 93       	push	r29
    5358:	cd b7       	in	r28, 0x3d	; 61
    535a:	de b7       	in	r29, 0x3e	; 62
    535c:	2a 97       	sbiw	r28, 0x0a	; 10
    535e:	cd bf       	out	0x3d, r28	; 61
    5360:	de bf       	out	0x3e, r29	; 62
    5362:	8a 87       	std	Y+10, r24	; 0x0a
    5364:	8a 85       	ldd	r24, Y+10	; 0x0a
    5366:	89 83       	std	Y+1, r24	; 0x01
    5368:	85 e0       	ldi	r24, 0x05	; 5
    536a:	90 e0       	ldi	r25, 0x00	; 0
    536c:	8a 83       	std	Y+2, r24	; 0x02
    536e:	9b 83       	std	Y+3, r25	; 0x03
    5370:	84 e1       	ldi	r24, 0x14	; 20
    5372:	90 e0       	ldi	r25, 0x00	; 0
    5374:	8c 83       	std	Y+4, r24	; 0x04
    5376:	9d 83       	std	Y+5, r25	; 0x05
    5378:	89 81       	ldd	r24, Y+1	; 0x01
    537a:	28 2f       	mov	r18, r24
    537c:	88 0f       	add	r24, r24
    537e:	33 0b       	sbc	r19, r19
    5380:	8c 81       	ldd	r24, Y+4	; 0x04
    5382:	9d 81       	ldd	r25, Y+5	; 0x05
    5384:	82 17       	cp	r24, r18
    5386:	93 07       	cpc	r25, r19
    5388:	5c f0       	brlt	.+22     	; 0x53a0 <_Z13throttleValueh+0x4c>
    538a:	89 81       	ldd	r24, Y+1	; 0x01
    538c:	08 2e       	mov	r0, r24
    538e:	00 0c       	add	r0, r0
    5390:	99 0b       	sbc	r25, r25
    5392:	2a 81       	ldd	r18, Y+2	; 0x02
    5394:	3b 81       	ldd	r19, Y+3	; 0x03
    5396:	82 17       	cp	r24, r18
    5398:	93 07       	cpc	r25, r19
    539a:	24 f4       	brge	.+8      	; 0x53a4 <_Z13throttleValueh+0x50>
    539c:	c9 01       	movw	r24, r18
    539e:	02 c0       	rjmp	.+4      	; 0x53a4 <_Z13throttleValueh+0x50>
    53a0:	8c 81       	ldd	r24, Y+4	; 0x04
    53a2:	9d 81       	ldd	r25, Y+5	; 0x05
    53a4:	8a 87       	std	Y+10, r24	; 0x0a
    53a6:	8a 85       	ldd	r24, Y+10	; 0x0a
    53a8:	28 2f       	mov	r18, r24
    53aa:	30 e0       	ldi	r19, 0x00	; 0
    53ac:	40 e0       	ldi	r20, 0x00	; 0
    53ae:	50 e0       	ldi	r21, 0x00	; 0
    53b0:	88 ed       	ldi	r24, 0xD8	; 216
    53b2:	9d e0       	ldi	r25, 0x0D	; 13
    53b4:	a0 e0       	ldi	r26, 0x00	; 0
    53b6:	b0 e0       	ldi	r27, 0x00	; 0
    53b8:	bc 01       	movw	r22, r24
    53ba:	cd 01       	movw	r24, r26
    53bc:	0e 94 12 7a 	call	0xf424	; 0xf424 <__divmodsi4>
    53c0:	da 01       	movw	r26, r20
    53c2:	c9 01       	movw	r24, r18
    53c4:	2a e0       	ldi	r18, 0x0A	; 10
    53c6:	30 e0       	ldi	r19, 0x00	; 0
    53c8:	40 e0       	ldi	r20, 0x00	; 0
    53ca:	50 e0       	ldi	r21, 0x00	; 0
    53cc:	bc 01       	movw	r22, r24
    53ce:	cd 01       	movw	r24, r26
    53d0:	0e 94 12 7a 	call	0xf424	; 0xf424 <__divmodsi4>
    53d4:	da 01       	movw	r26, r20
    53d6:	c9 01       	movw	r24, r18
    53d8:	bc 01       	movw	r22, r24
    53da:	cd 01       	movw	r24, r26
    53dc:	0e 94 55 78 	call	0xf0aa	; 0xf0aa <__floatsisf>
    53e0:	dc 01       	movw	r26, r24
    53e2:	cb 01       	movw	r24, r22
    53e4:	8e 83       	std	Y+6, r24	; 0x06
    53e6:	9f 83       	std	Y+7, r25	; 0x07
    53e8:	a8 87       	std	Y+8, r26	; 0x08
    53ea:	b9 87       	std	Y+9, r27	; 0x09
    53ec:	6e 81       	ldd	r22, Y+6	; 0x06
    53ee:	7f 81       	ldd	r23, Y+7	; 0x07
    53f0:	88 85       	ldd	r24, Y+8	; 0x08
    53f2:	99 85       	ldd	r25, Y+9	; 0x09
    53f4:	0e 94 24 78 	call	0xf048	; 0xf048 <__fixunssfsi>
    53f8:	dc 01       	movw	r26, r24
    53fa:	cb 01       	movw	r24, r22
    53fc:	2a 96       	adiw	r28, 0x0a	; 10
    53fe:	cd bf       	out	0x3d, r28	; 61
    5400:	de bf       	out	0x3e, r29	; 62
    5402:	df 91       	pop	r29
    5404:	cf 91       	pop	r28
    5406:	08 95       	ret

00005408 <_Z11launchEventP2SC>:
    5408:	cf 93       	push	r28
    540a:	df 93       	push	r29
    540c:	00 d0       	rcall	.+0      	; 0x540e <_Z11launchEventP2SC+0x6>
    540e:	1f 92       	push	r1
    5410:	cd b7       	in	r28, 0x3d	; 61
    5412:	de b7       	in	r29, 0x3e	; 62
    5414:	8a 83       	std	Y+2, r24	; 0x02
    5416:	9b 83       	std	Y+3, r25	; 0x03
    5418:	8a 81       	ldd	r24, Y+2	; 0x02
    541a:	9b 81       	ldd	r25, Y+3	; 0x03
    541c:	0e 94 2f 2a 	call	0x545e	; 0x545e <_Z33activateEventUsingCurrentSettingsP2SC>
    5420:	89 83       	std	Y+1, r24	; 0x01
    5422:	8a 81       	ldd	r24, Y+2	; 0x02
    5424:	9b 81       	ldd	r25, Y+3	; 0x03
    5426:	fc 01       	movw	r30, r24
    5428:	80 81       	ld	r24, Z
    542a:	88 23       	and	r24, r24
    542c:	31 f0       	breq	.+12     	; 0x543a <_Z11launchEventP2SC+0x32>
    542e:	8a 81       	ldd	r24, Y+2	; 0x02
    5430:	9b 81       	ldd	r25, Y+3	; 0x03
    5432:	fc 01       	movw	r30, r24
    5434:	80 81       	ld	r24, Z
    5436:	80 93 5a 47 	sts	0x475A, r24	; 0x80475a <_ZL18g_last_status_code>
    543a:	89 81       	ldd	r24, Y+1	; 0x01
    543c:	88 23       	and	r24, r24
    543e:	21 f0       	breq	.+8      	; 0x5448 <_Z11launchEventP2SC+0x40>
    5440:	89 81       	ldd	r24, Y+1	; 0x01
    5442:	80 93 59 47 	sts	0x4759, r24	; 0x804759 <_ZL17g_last_error_code>
    5446:	04 c0       	rjmp	.+8      	; 0x5450 <_Z11launchEventP2SC+0x48>
    5448:	0e 94 d1 28 	call	0x51a2	; 0x51a2 <_Z12eventEnabledv>
    544c:	80 93 a2 47 	sts	0x47A2, r24	; 0x8047a2 <g_event_enabled>
    5450:	89 81       	ldd	r24, Y+1	; 0x01
    5452:	23 96       	adiw	r28, 0x03	; 3
    5454:	cd bf       	out	0x3d, r28	; 61
    5456:	de bf       	out	0x3e, r29	; 62
    5458:	df 91       	pop	r29
    545a:	cf 91       	pop	r28
    545c:	08 95       	ret

0000545e <_Z33activateEventUsingCurrentSettingsP2SC>:
    545e:	cf 93       	push	r28
    5460:	df 93       	push	r29
    5462:	cd b7       	in	r28, 0x3d	; 61
    5464:	de b7       	in	r29, 0x3e	; 62
    5466:	63 97       	sbiw	r28, 0x13	; 19
    5468:	cd bf       	out	0x3d, r28	; 61
    546a:	de bf       	out	0x3e, r29	; 62
    546c:	8a 8b       	std	Y+18, r24	; 0x12
    546e:	9b 8b       	std	Y+19, r25	; 0x13
    5470:	80 91 9a 47 	lds	r24, 0x479A	; 0x80479a <g_event_start_epoch>
    5474:	90 91 9b 47 	lds	r25, 0x479B	; 0x80479b <g_event_start_epoch+0x1>
    5478:	a0 91 9c 47 	lds	r26, 0x479C	; 0x80479c <g_event_start_epoch+0x2>
    547c:	b0 91 9d 47 	lds	r27, 0x479D	; 0x80479d <g_event_start_epoch+0x3>
    5480:	21 e0       	ldi	r18, 0x01	; 1
    5482:	89 2b       	or	r24, r25
    5484:	8a 2b       	or	r24, r26
    5486:	8b 2b       	or	r24, r27
    5488:	09 f0       	breq	.+2      	; 0x548c <_Z33activateEventUsingCurrentSettingsP2SC+0x2e>
    548a:	20 e0       	ldi	r18, 0x00	; 0
    548c:	22 23       	and	r18, r18
    548e:	11 f0       	breq	.+4      	; 0x5494 <_Z33activateEventUsingCurrentSettingsP2SC+0x36>
    5490:	8c ec       	ldi	r24, 0xCC	; 204
    5492:	12 c2       	rjmp	.+1060   	; 0x58b8 <_Z33activateEventUsingCurrentSettingsP2SC+0x45a>
    5494:	20 91 9a 47 	lds	r18, 0x479A	; 0x80479a <g_event_start_epoch>
    5498:	30 91 9b 47 	lds	r19, 0x479B	; 0x80479b <g_event_start_epoch+0x1>
    549c:	40 91 9c 47 	lds	r20, 0x479C	; 0x80479c <g_event_start_epoch+0x2>
    54a0:	50 91 9d 47 	lds	r21, 0x479D	; 0x80479d <g_event_start_epoch+0x3>
    54a4:	80 91 9e 47 	lds	r24, 0x479E	; 0x80479e <g_event_finish_epoch>
    54a8:	90 91 9f 47 	lds	r25, 0x479F	; 0x80479f <g_event_finish_epoch+0x1>
    54ac:	a0 91 a0 47 	lds	r26, 0x47A0	; 0x8047a0 <g_event_finish_epoch+0x2>
    54b0:	b0 91 a1 47 	lds	r27, 0x47A1	; 0x8047a1 <g_event_finish_epoch+0x3>
    54b4:	61 e0       	ldi	r22, 0x01	; 1
    54b6:	28 17       	cp	r18, r24
    54b8:	39 07       	cpc	r19, r25
    54ba:	4a 07       	cpc	r20, r26
    54bc:	5b 07       	cpc	r21, r27
    54be:	08 f4       	brcc	.+2      	; 0x54c2 <_Z33activateEventUsingCurrentSettingsP2SC+0x64>
    54c0:	60 e0       	ldi	r22, 0x00	; 0
    54c2:	66 23       	and	r22, r22
    54c4:	11 f0       	breq	.+4      	; 0x54ca <_Z33activateEventUsingCurrentSettingsP2SC+0x6c>
    54c6:	8d ec       	ldi	r24, 0xCD	; 205
    54c8:	f7 c1       	rjmp	.+1006   	; 0x58b8 <_Z33activateEventUsingCurrentSettingsP2SC+0x45a>
    54ca:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    54ce:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    54d2:	21 e0       	ldi	r18, 0x01	; 1
    54d4:	89 2b       	or	r24, r25
    54d6:	09 f0       	breq	.+2      	; 0x54da <_Z33activateEventUsingCurrentSettingsP2SC+0x7c>
    54d8:	20 e0       	ldi	r18, 0x00	; 0
    54da:	22 23       	and	r18, r18
    54dc:	11 f0       	breq	.+4      	; 0x54e2 <_Z33activateEventUsingCurrentSettingsP2SC+0x84>
    54de:	8b ec       	ldi	r24, 0xCB	; 203
    54e0:	eb c1       	rjmp	.+982    	; 0x58b8 <_Z33activateEventUsingCurrentSettingsP2SC+0x45a>
    54e2:	20 91 0f 40 	lds	r18, 0x400F	; 0x80400f <g_off_air_seconds>
    54e6:	30 91 10 40 	lds	r19, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    54ea:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    54ee:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    54f2:	28 0f       	add	r18, r24
    54f4:	39 1f       	adc	r19, r25
    54f6:	80 91 98 47 	lds	r24, 0x4798	; 0x804798 <g_intra_cycle_delay_time>
    54fa:	90 91 99 47 	lds	r25, 0x4799	; 0x804799 <g_intra_cycle_delay_time+0x1>
    54fe:	41 e0       	ldi	r20, 0x01	; 1
    5500:	28 17       	cp	r18, r24
    5502:	39 07       	cpc	r19, r25
    5504:	0c f0       	brlt	.+2      	; 0x5508 <_Z33activateEventUsingCurrentSettingsP2SC+0xaa>
    5506:	40 e0       	ldi	r20, 0x00	; 0
    5508:	44 23       	and	r20, r20
    550a:	11 f0       	breq	.+4      	; 0x5510 <_Z33activateEventUsingCurrentSettingsP2SC+0xb2>
    550c:	8a ec       	ldi	r24, 0xCA	; 202
    550e:	d4 c1       	rjmp	.+936    	; 0x58b8 <_Z33activateEventUsingCurrentSettingsP2SC+0x45a>
    5510:	80 91 6c 47 	lds	r24, 0x476C	; 0x80476c <g_messages_text>
    5514:	88 23       	and	r24, r24
    5516:	11 f4       	brne	.+4      	; 0x551c <_Z33activateEventUsingCurrentSettingsP2SC+0xbe>
    5518:	89 ec       	ldi	r24, 0xC9	; 201
    551a:	ce c1       	rjmp	.+924    	; 0x58b8 <_Z33activateEventUsingCurrentSettingsP2SC+0x45a>
    551c:	90 91 0c 40 	lds	r25, 0x400C	; 0x80400c <g_pattern_codespeed>
    5520:	81 e0       	ldi	r24, 0x01	; 1
    5522:	99 23       	and	r25, r25
    5524:	09 f0       	breq	.+2      	; 0x5528 <_Z33activateEventUsingCurrentSettingsP2SC+0xca>
    5526:	80 e0       	ldi	r24, 0x00	; 0
    5528:	88 23       	and	r24, r24
    552a:	11 f0       	breq	.+4      	; 0x5530 <_Z33activateEventUsingCurrentSettingsP2SC+0xd2>
    552c:	88 ec       	ldi	r24, 0xC8	; 200
    552e:	c4 c1       	rjmp	.+904    	; 0x58b8 <_Z33activateEventUsingCurrentSettingsP2SC+0x45a>
    5530:	80 91 81 47 	lds	r24, 0x4781	; 0x804781 <g_messages_text+0x15>
    5534:	88 23       	and	r24, r24
    5536:	91 f1       	breq	.+100    	; 0x559c <_Z33activateEventUsingCurrentSettingsP2SC+0x13e>
    5538:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    553c:	88 23       	and	r24, r24
    553e:	31 f0       	breq	.+12     	; 0x554c <_Z33activateEventUsingCurrentSettingsP2SC+0xee>
    5540:	80 91 11 40 	lds	r24, 0x4011	; 0x804011 <g_ID_period_seconds>
    5544:	90 91 12 40 	lds	r25, 0x4012	; 0x804012 <g_ID_period_seconds+0x1>
    5548:	89 2b       	or	r24, r25
    554a:	11 f4       	brne	.+4      	; 0x5550 <_Z33activateEventUsingCurrentSettingsP2SC+0xf2>
    554c:	81 e0       	ldi	r24, 0x01	; 1
    554e:	01 c0       	rjmp	.+2      	; 0x5552 <_Z33activateEventUsingCurrentSettingsP2SC+0xf4>
    5550:	80 e0       	ldi	r24, 0x00	; 0
    5552:	88 23       	and	r24, r24
    5554:	11 f0       	breq	.+4      	; 0x555a <_Z33activateEventUsingCurrentSettingsP2SC+0xfc>
    5556:	87 ec       	ldi	r24, 0xC7	; 199
    5558:	af c1       	rjmp	.+862    	; 0x58b8 <_Z33activateEventUsingCurrentSettingsP2SC+0x45a>
    555a:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    555e:	88 2f       	mov	r24, r24
    5560:	90 e0       	ldi	r25, 0x00	; 0
    5562:	bc 01       	movw	r22, r24
    5564:	81 e8       	ldi	r24, 0x81	; 129
    5566:	97 e4       	ldi	r25, 0x47	; 71
    5568:	0e 94 61 5d 	call	0xbac2	; 0xbac2 <_Z26timeRequiredToSendStrAtWPMPcj>
    556c:	8c 50       	subi	r24, 0x0C	; 12
    556e:	9e 4f       	sbci	r25, 0xFE	; 254
    5570:	96 95       	lsr	r25
    5572:	87 95       	ror	r24
    5574:	96 95       	lsr	r25
    5576:	87 95       	ror	r24
    5578:	96 95       	lsr	r25
    557a:	87 95       	ror	r24
    557c:	9c 01       	movw	r18, r24
    557e:	a5 ec       	ldi	r26, 0xC5	; 197
    5580:	b0 e2       	ldi	r27, 0x20	; 32
    5582:	0e 94 3a 7a 	call	0xf474	; 0xf474 <__umulhisi3>
    5586:	92 95       	swap	r25
    5588:	82 95       	swap	r24
    558a:	8f 70       	andi	r24, 0x0F	; 15
    558c:	89 27       	eor	r24, r25
    558e:	9f 70       	andi	r25, 0x0F	; 15
    5590:	89 27       	eor	r24, r25
    5592:	80 93 96 47 	sts	0x4796, r24	; 0x804796 <g_time_needed_for_ID>
    5596:	90 93 97 47 	sts	0x4797, r25	; 0x804797 <g_time_needed_for_ID+0x1>
    559a:	04 c0       	rjmp	.+8      	; 0x55a4 <_Z33activateEventUsingCurrentSettingsP2SC+0x146>
    559c:	10 92 96 47 	sts	0x4796, r1	; 0x804796 <g_time_needed_for_ID>
    55a0:	10 92 97 47 	sts	0x4797, r1	; 0x804797 <g_time_needed_for_ID+0x1>
    55a4:	80 e0       	ldi	r24, 0x00	; 0
    55a6:	90 e0       	ldi	r25, 0x00	; 0
    55a8:	0e 94 56 06 	call	0xcac	; 0xcac <time>
    55ac:	dc 01       	movw	r26, r24
    55ae:	cb 01       	movw	r24, r22
    55b0:	8a 83       	std	Y+2, r24	; 0x02
    55b2:	9b 83       	std	Y+3, r25	; 0x03
    55b4:	ac 83       	std	Y+4, r26	; 0x04
    55b6:	bd 83       	std	Y+5, r27	; 0x05
    55b8:	20 91 9e 47 	lds	r18, 0x479E	; 0x80479e <g_event_finish_epoch>
    55bc:	30 91 9f 47 	lds	r19, 0x479F	; 0x80479f <g_event_finish_epoch+0x1>
    55c0:	40 91 a0 47 	lds	r20, 0x47A0	; 0x8047a0 <g_event_finish_epoch+0x2>
    55c4:	50 91 a1 47 	lds	r21, 0x47A1	; 0x8047a1 <g_event_finish_epoch+0x3>
    55c8:	61 e0       	ldi	r22, 0x01	; 1
    55ca:	8a 81       	ldd	r24, Y+2	; 0x02
    55cc:	9b 81       	ldd	r25, Y+3	; 0x03
    55ce:	ac 81       	ldd	r26, Y+4	; 0x04
    55d0:	bd 81       	ldd	r27, Y+5	; 0x05
    55d2:	28 17       	cp	r18, r24
    55d4:	39 07       	cpc	r19, r25
    55d6:	4a 07       	cpc	r20, r26
    55d8:	5b 07       	cpc	r21, r27
    55da:	08 f0       	brcs	.+2      	; 0x55de <_Z33activateEventUsingCurrentSettingsP2SC+0x180>
    55dc:	60 e0       	ldi	r22, 0x00	; 0
    55de:	66 23       	and	r22, r22
    55e0:	59 f0       	breq	.+22     	; 0x55f8 <_Z33activateEventUsingCurrentSettingsP2SC+0x19a>
    55e2:	8a 89       	ldd	r24, Y+18	; 0x12
    55e4:	9b 89       	ldd	r25, Y+19	; 0x13
    55e6:	89 2b       	or	r24, r25
    55e8:	09 f4       	brne	.+2      	; 0x55ec <_Z33activateEventUsingCurrentSettingsP2SC+0x18e>
    55ea:	65 c1       	rjmp	.+714    	; 0x58b6 <_Z33activateEventUsingCurrentSettingsP2SC+0x458>
    55ec:	8a 89       	ldd	r24, Y+18	; 0x12
    55ee:	9b 89       	ldd	r25, Y+19	; 0x13
    55f0:	2a ef       	ldi	r18, 0xFA	; 250
    55f2:	fc 01       	movw	r30, r24
    55f4:	20 83       	st	Z, r18
    55f6:	5f c1       	rjmp	.+702    	; 0x58b6 <_Z33activateEventUsingCurrentSettingsP2SC+0x458>
    55f8:	20 91 9a 47 	lds	r18, 0x479A	; 0x80479a <g_event_start_epoch>
    55fc:	30 91 9b 47 	lds	r19, 0x479B	; 0x80479b <g_event_start_epoch+0x1>
    5600:	40 91 9c 47 	lds	r20, 0x479C	; 0x80479c <g_event_start_epoch+0x2>
    5604:	50 91 9d 47 	lds	r21, 0x479D	; 0x80479d <g_event_start_epoch+0x3>
    5608:	8a 81       	ldd	r24, Y+2	; 0x02
    560a:	9b 81       	ldd	r25, Y+3	; 0x03
    560c:	ac 81       	ldd	r26, Y+4	; 0x04
    560e:	bd 81       	ldd	r27, Y+5	; 0x05
    5610:	bc 01       	movw	r22, r24
    5612:	cd 01       	movw	r24, r26
    5614:	0e 94 71 73 	call	0xe6e2	; 0xe6e2 <_Z7timeDifmm>
    5618:	dc 01       	movw	r26, r24
    561a:	cb 01       	movw	r24, r22
    561c:	8e 83       	std	Y+6, r24	; 0x06
    561e:	9f 83       	std	Y+7, r25	; 0x07
    5620:	a8 87       	std	Y+8, r26	; 0x08
    5622:	b9 87       	std	Y+9, r27	; 0x09
    5624:	8e 81       	ldd	r24, Y+6	; 0x06
    5626:	9f 81       	ldd	r25, Y+7	; 0x07
    5628:	a8 85       	ldd	r26, Y+8	; 0x08
    562a:	b9 85       	ldd	r27, Y+9	; 0x09
    562c:	bb 23       	and	r27, r27
    562e:	0c f4       	brge	.+2      	; 0x5632 <_Z33activateEventUsingCurrentSettingsP2SC+0x1d4>
    5630:	34 c1       	rjmp	.+616    	; 0x589a <_Z33activateEventUsingCurrentSettingsP2SC+0x43c>
    5632:	19 82       	std	Y+1, r1	; 0x01
    5634:	20 91 0d 40 	lds	r18, 0x400D	; 0x80400d <g_on_air_seconds>
    5638:	30 91 0e 40 	lds	r19, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    563c:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_off_air_seconds>
    5640:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    5644:	82 0f       	add	r24, r18
    5646:	93 1f       	adc	r25, r19
    5648:	8a 87       	std	Y+10, r24	; 0x0a
    564a:	9b 87       	std	Y+11, r25	; 0x0b
    564c:	8a 85       	ldd	r24, Y+10	; 0x0a
    564e:	9b 85       	ldd	r25, Y+11	; 0x0b
    5650:	9c 01       	movw	r18, r24
    5652:	99 0f       	add	r25, r25
    5654:	44 0b       	sbc	r20, r20
    5656:	55 0b       	sbc	r21, r21
    5658:	8e 81       	ldd	r24, Y+6	; 0x06
    565a:	9f 81       	ldd	r25, Y+7	; 0x07
    565c:	a8 85       	ldd	r26, Y+8	; 0x08
    565e:	b9 85       	ldd	r27, Y+9	; 0x09
    5660:	bc 01       	movw	r22, r24
    5662:	cd 01       	movw	r24, r26
    5664:	0e 94 12 7a 	call	0xf424	; 0xf424 <__divmodsi4>
    5668:	dc 01       	movw	r26, r24
    566a:	cb 01       	movw	r24, r22
    566c:	8c 87       	std	Y+12, r24	; 0x0c
    566e:	9d 87       	std	Y+13, r25	; 0x0d
    5670:	20 91 98 47 	lds	r18, 0x4798	; 0x804798 <g_intra_cycle_delay_time>
    5674:	30 91 99 47 	lds	r19, 0x4799	; 0x804799 <g_intra_cycle_delay_time+0x1>
    5678:	8c 85       	ldd	r24, Y+12	; 0x0c
    567a:	9d 85       	ldd	r25, Y+13	; 0x0d
    567c:	a9 01       	movw	r20, r18
    567e:	48 1b       	sub	r20, r24
    5680:	59 0b       	sbc	r21, r25
    5682:	ca 01       	movw	r24, r20
    5684:	8e 87       	std	Y+14, r24	; 0x0e
    5686:	9f 87       	std	Y+15, r25	; 0x0f
    5688:	8e 85       	ldd	r24, Y+14	; 0x0e
    568a:	9f 85       	ldd	r25, Y+15	; 0x0f
    568c:	18 16       	cp	r1, r24
    568e:	19 06       	cpc	r1, r25
    5690:	0c f4       	brge	.+2      	; 0x5694 <_Z33activateEventUsingCurrentSettingsP2SC+0x236>
    5692:	a8 c0       	rjmp	.+336    	; 0x57e4 <_Z33activateEventUsingCurrentSettingsP2SC+0x386>
    5694:	8e 85       	ldd	r24, Y+14	; 0x0e
    5696:	9f 85       	ldd	r25, Y+15	; 0x0f
    5698:	22 27       	eor	r18, r18
    569a:	33 27       	eor	r19, r19
    569c:	28 1b       	sub	r18, r24
    569e:	39 0b       	sbc	r19, r25
    56a0:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    56a4:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    56a8:	41 e0       	ldi	r20, 0x01	; 1
    56aa:	28 17       	cp	r18, r24
    56ac:	39 07       	cpc	r19, r25
    56ae:	0c f4       	brge	.+2      	; 0x56b2 <_Z33activateEventUsingCurrentSettingsP2SC+0x254>
    56b0:	40 e0       	ldi	r20, 0x00	; 0
    56b2:	44 23       	and	r20, r20
    56b4:	09 f4       	brne	.+2      	; 0x56b8 <_Z33activateEventUsingCurrentSettingsP2SC+0x25a>
    56b6:	41 c0       	rjmp	.+130    	; 0x573a <_Z33activateEventUsingCurrentSettingsP2SC+0x2dc>
    56b8:	2a 85       	ldd	r18, Y+10	; 0x0a
    56ba:	3b 85       	ldd	r19, Y+11	; 0x0b
    56bc:	8e 85       	ldd	r24, Y+14	; 0x0e
    56be:	9f 85       	ldd	r25, Y+15	; 0x0f
    56c0:	82 0f       	add	r24, r18
    56c2:	93 1f       	adc	r25, r19
    56c4:	91 95       	neg	r25
    56c6:	81 95       	neg	r24
    56c8:	91 09       	sbc	r25, r1
    56ca:	09 2e       	mov	r0, r25
    56cc:	00 0c       	add	r0, r0
    56ce:	aa 0b       	sbc	r26, r26
    56d0:	bb 0b       	sbc	r27, r27
    56d2:	80 93 62 47 	sts	0x4762, r24	; 0x804762 <_ZL12g_on_the_air>
    56d6:	90 93 63 47 	sts	0x4763, r25	; 0x804763 <_ZL12g_on_the_air+0x1>
    56da:	a0 93 64 47 	sts	0x4764, r26	; 0x804764 <_ZL12g_on_the_air+0x2>
    56de:	b0 93 65 47 	sts	0x4765, r27	; 0x804765 <_ZL12g_on_the_air+0x3>
    56e2:	8a 89       	ldd	r24, Y+18	; 0x12
    56e4:	9b 89       	ldd	r25, Y+19	; 0x13
    56e6:	89 2b       	or	r24, r25
    56e8:	29 f0       	breq	.+10     	; 0x56f4 <_Z33activateEventUsingCurrentSettingsP2SC+0x296>
    56ea:	8a 89       	ldd	r24, Y+18	; 0x12
    56ec:	9b 89       	ldd	r25, Y+19	; 0x13
    56ee:	2e ef       	ldi	r18, 0xFE	; 254
    56f0:	fc 01       	movw	r30, r24
    56f2:	20 83       	st	Z, r18
    56f4:	90 91 a2 47 	lds	r25, 0x47A2	; 0x8047a2 <g_event_enabled>
    56f8:	81 e0       	ldi	r24, 0x01	; 1
    56fa:	89 27       	eor	r24, r25
    56fc:	88 23       	and	r24, r24
    56fe:	09 f4       	brne	.+2      	; 0x5702 <_Z33activateEventUsingCurrentSettingsP2SC+0x2a4>
    5700:	a6 c0       	rjmp	.+332    	; 0x584e <_Z33activateEventUsingCurrentSettingsP2SC+0x3f0>
    5702:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    5706:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    570a:	9c 01       	movw	r18, r24
    570c:	80 91 62 47 	lds	r24, 0x4762	; 0x804762 <_ZL12g_on_the_air>
    5710:	90 91 63 47 	lds	r25, 0x4763	; 0x804763 <_ZL12g_on_the_air+0x1>
    5714:	a0 91 64 47 	lds	r26, 0x4764	; 0x804764 <_ZL12g_on_the_air+0x2>
    5718:	b0 91 65 47 	lds	r27, 0x4765	; 0x804765 <_ZL12g_on_the_air+0x3>
    571c:	28 1b       	sub	r18, r24
    571e:	39 0b       	sbc	r19, r25
    5720:	80 91 96 47 	lds	r24, 0x4796	; 0x804796 <g_time_needed_for_ID>
    5724:	90 91 97 47 	lds	r25, 0x4797	; 0x804797 <g_time_needed_for_ID+0x1>
    5728:	a9 01       	movw	r20, r18
    572a:	48 1b       	sub	r20, r24
    572c:	59 0b       	sbc	r21, r25
    572e:	ca 01       	movw	r24, r20
    5730:	80 93 66 47 	sts	0x4766, r24	; 0x804766 <_ZL26g_sendID_seconds_countdown>
    5734:	90 93 67 47 	sts	0x4767, r25	; 0x804767 <_ZL26g_sendID_seconds_countdown+0x1>
    5738:	8a c0       	rjmp	.+276    	; 0x584e <_Z33activateEventUsingCurrentSettingsP2SC+0x3f0>
    573a:	20 91 0d 40 	lds	r18, 0x400D	; 0x80400d <g_on_air_seconds>
    573e:	30 91 0e 40 	lds	r19, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    5742:	8e 85       	ldd	r24, Y+14	; 0x0e
    5744:	9f 85       	ldd	r25, Y+15	; 0x0f
    5746:	82 0f       	add	r24, r18
    5748:	93 1f       	adc	r25, r19
    574a:	09 2e       	mov	r0, r25
    574c:	00 0c       	add	r0, r0
    574e:	aa 0b       	sbc	r26, r26
    5750:	bb 0b       	sbc	r27, r27
    5752:	80 93 62 47 	sts	0x4762, r24	; 0x804762 <_ZL12g_on_the_air>
    5756:	90 93 63 47 	sts	0x4763, r25	; 0x804763 <_ZL12g_on_the_air+0x1>
    575a:	a0 93 64 47 	sts	0x4764, r26	; 0x804764 <_ZL12g_on_the_air+0x2>
    575e:	b0 93 65 47 	sts	0x4765, r27	; 0x804765 <_ZL12g_on_the_air+0x3>
    5762:	81 e0       	ldi	r24, 0x01	; 1
    5764:	89 83       	std	Y+1, r24	; 0x01
    5766:	8a 89       	ldd	r24, Y+18	; 0x12
    5768:	9b 89       	ldd	r25, Y+19	; 0x13
    576a:	89 2b       	or	r24, r25
    576c:	29 f0       	breq	.+10     	; 0x5778 <_Z33activateEventUsingCurrentSettingsP2SC+0x31a>
    576e:	8a 89       	ldd	r24, Y+18	; 0x12
    5770:	9b 89       	ldd	r25, Y+19	; 0x13
    5772:	2d ef       	ldi	r18, 0xFD	; 253
    5774:	fc 01       	movw	r30, r24
    5776:	20 83       	st	Z, r18
    5778:	90 91 a2 47 	lds	r25, 0x47A2	; 0x8047a2 <g_event_enabled>
    577c:	81 e0       	ldi	r24, 0x01	; 1
    577e:	89 27       	eor	r24, r25
    5780:	88 23       	and	r24, r24
    5782:	09 f4       	brne	.+2      	; 0x5786 <_Z33activateEventUsingCurrentSettingsP2SC+0x328>
    5784:	64 c0       	rjmp	.+200    	; 0x584e <_Z33activateEventUsingCurrentSettingsP2SC+0x3f0>
    5786:	80 91 96 47 	lds	r24, 0x4796	; 0x804796 <g_time_needed_for_ID>
    578a:	90 91 97 47 	lds	r25, 0x4797	; 0x804797 <g_time_needed_for_ID+0x1>
    578e:	9c 01       	movw	r18, r24
    5790:	40 e0       	ldi	r20, 0x00	; 0
    5792:	50 e0       	ldi	r21, 0x00	; 0
    5794:	80 91 62 47 	lds	r24, 0x4762	; 0x804762 <_ZL12g_on_the_air>
    5798:	90 91 63 47 	lds	r25, 0x4763	; 0x804763 <_ZL12g_on_the_air+0x1>
    579c:	a0 91 64 47 	lds	r26, 0x4764	; 0x804764 <_ZL12g_on_the_air+0x2>
    57a0:	b0 91 65 47 	lds	r27, 0x4765	; 0x804765 <_ZL12g_on_the_air+0x3>
    57a4:	61 e0       	ldi	r22, 0x01	; 1
    57a6:	28 17       	cp	r18, r24
    57a8:	39 07       	cpc	r19, r25
    57aa:	4a 07       	cpc	r20, r26
    57ac:	5b 07       	cpc	r21, r27
    57ae:	0c f0       	brlt	.+2      	; 0x57b2 <_Z33activateEventUsingCurrentSettingsP2SC+0x354>
    57b0:	60 e0       	ldi	r22, 0x00	; 0
    57b2:	66 23       	and	r22, r22
    57b4:	09 f4       	brne	.+2      	; 0x57b8 <_Z33activateEventUsingCurrentSettingsP2SC+0x35a>
    57b6:	4b c0       	rjmp	.+150    	; 0x584e <_Z33activateEventUsingCurrentSettingsP2SC+0x3f0>
    57b8:	80 91 62 47 	lds	r24, 0x4762	; 0x804762 <_ZL12g_on_the_air>
    57bc:	90 91 63 47 	lds	r25, 0x4763	; 0x804763 <_ZL12g_on_the_air+0x1>
    57c0:	a0 91 64 47 	lds	r26, 0x4764	; 0x804764 <_ZL12g_on_the_air+0x2>
    57c4:	b0 91 65 47 	lds	r27, 0x4765	; 0x804765 <_ZL12g_on_the_air+0x3>
    57c8:	9c 01       	movw	r18, r24
    57ca:	80 91 96 47 	lds	r24, 0x4796	; 0x804796 <g_time_needed_for_ID>
    57ce:	90 91 97 47 	lds	r25, 0x4797	; 0x804797 <g_time_needed_for_ID+0x1>
    57d2:	a9 01       	movw	r20, r18
    57d4:	48 1b       	sub	r20, r24
    57d6:	59 0b       	sbc	r21, r25
    57d8:	ca 01       	movw	r24, r20
    57da:	80 93 66 47 	sts	0x4766, r24	; 0x804766 <_ZL26g_sendID_seconds_countdown>
    57de:	90 93 67 47 	sts	0x4767, r25	; 0x804767 <_ZL26g_sendID_seconds_countdown+0x1>
    57e2:	35 c0       	rjmp	.+106    	; 0x584e <_Z33activateEventUsingCurrentSettingsP2SC+0x3f0>
    57e4:	8e 85       	ldd	r24, Y+14	; 0x0e
    57e6:	9f 85       	ldd	r25, Y+15	; 0x0f
    57e8:	91 95       	neg	r25
    57ea:	81 95       	neg	r24
    57ec:	91 09       	sbc	r25, r1
    57ee:	09 2e       	mov	r0, r25
    57f0:	00 0c       	add	r0, r0
    57f2:	aa 0b       	sbc	r26, r26
    57f4:	bb 0b       	sbc	r27, r27
    57f6:	80 93 62 47 	sts	0x4762, r24	; 0x804762 <_ZL12g_on_the_air>
    57fa:	90 93 63 47 	sts	0x4763, r25	; 0x804763 <_ZL12g_on_the_air+0x1>
    57fe:	a0 93 64 47 	sts	0x4764, r26	; 0x804764 <_ZL12g_on_the_air+0x2>
    5802:	b0 93 65 47 	sts	0x4765, r27	; 0x804765 <_ZL12g_on_the_air+0x3>
    5806:	8a 89       	ldd	r24, Y+18	; 0x12
    5808:	9b 89       	ldd	r25, Y+19	; 0x13
    580a:	89 2b       	or	r24, r25
    580c:	29 f0       	breq	.+10     	; 0x5818 <_Z33activateEventUsingCurrentSettingsP2SC+0x3ba>
    580e:	8a 89       	ldd	r24, Y+18	; 0x12
    5810:	9b 89       	ldd	r25, Y+19	; 0x13
    5812:	2e ef       	ldi	r18, 0xFE	; 254
    5814:	fc 01       	movw	r30, r24
    5816:	20 83       	st	Z, r18
    5818:	90 91 a2 47 	lds	r25, 0x47A2	; 0x8047a2 <g_event_enabled>
    581c:	81 e0       	ldi	r24, 0x01	; 1
    581e:	89 27       	eor	r24, r25
    5820:	88 23       	and	r24, r24
    5822:	a9 f0       	breq	.+42     	; 0x584e <_Z33activateEventUsingCurrentSettingsP2SC+0x3f0>
    5824:	20 91 0d 40 	lds	r18, 0x400D	; 0x80400d <g_on_air_seconds>
    5828:	30 91 0e 40 	lds	r19, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    582c:	8e 85       	ldd	r24, Y+14	; 0x0e
    582e:	9f 85       	ldd	r25, Y+15	; 0x0f
    5830:	82 0f       	add	r24, r18
    5832:	93 1f       	adc	r25, r19
    5834:	9c 01       	movw	r18, r24
    5836:	80 91 96 47 	lds	r24, 0x4796	; 0x804796 <g_time_needed_for_ID>
    583a:	90 91 97 47 	lds	r25, 0x4797	; 0x804797 <g_time_needed_for_ID+0x1>
    583e:	a9 01       	movw	r20, r18
    5840:	48 1b       	sub	r20, r24
    5842:	59 0b       	sbc	r21, r25
    5844:	ca 01       	movw	r24, r20
    5846:	80 93 66 47 	sts	0x4766, r24	; 0x804766 <_ZL26g_sendID_seconds_countdown>
    584a:	90 93 67 47 	sts	0x4767, r25	; 0x804767 <_ZL26g_sendID_seconds_countdown+0x1>
    584e:	89 81       	ldd	r24, Y+1	; 0x01
    5850:	88 23       	and	r24, r24
    5852:	e1 f0       	breq	.+56     	; 0x588c <_Z33activateEventUsingCurrentSettingsP2SC+0x42e>
    5854:	80 91 a2 47 	lds	r24, 0x47A2	; 0x8047a2 <g_event_enabled>
    5858:	88 8b       	std	Y+16, r24	; 0x10
    585a:	10 92 a2 47 	sts	0x47A2, r1	; 0x8047a2 <g_event_enabled>
    585e:	81 e0       	ldi	r24, 0x01	; 1
    5860:	89 8b       	std	Y+17, r24	; 0x11
    5862:	ce 01       	movw	r24, r28
    5864:	41 96       	adiw	r24, 0x11	; 17
    5866:	40 e0       	ldi	r20, 0x00	; 0
    5868:	50 e0       	ldi	r21, 0x00	; 0
    586a:	bc 01       	movw	r22, r24
    586c:	8c e6       	ldi	r24, 0x6C	; 108
    586e:	97 e4       	ldi	r25, 0x47	; 71
    5870:	0e 94 09 5c 	call	0xb812	; 0xb812 <_Z9makeMorsePcPbS0_>
    5874:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    5878:	0e 94 aa 29 	call	0x5354	; 0x5354 <_Z13throttleValueh>
    587c:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    5880:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    5884:	88 89       	ldd	r24, Y+16	; 0x10
    5886:	80 93 a2 47 	sts	0x47A2, r24	; 0x8047a2 <g_event_enabled>
    588a:	03 c0       	rjmp	.+6      	; 0x5892 <_Z33activateEventUsingCurrentSettingsP2SC+0x434>
    588c:	80 e0       	ldi	r24, 0x00	; 0
    588e:	0e 94 bc 6f 	call	0xdf78	; 0xdf78 <_Z14keyTransmitterb>
    5892:	81 e0       	ldi	r24, 0x01	; 1
    5894:	80 93 a3 47 	sts	0x47A3, r24	; 0x8047a3 <g_event_commenced>
    5898:	0c c0       	rjmp	.+24     	; 0x58b2 <_Z33activateEventUsingCurrentSettingsP2SC+0x454>
    589a:	8a 89       	ldd	r24, Y+18	; 0x12
    589c:	9b 89       	ldd	r25, Y+19	; 0x13
    589e:	89 2b       	or	r24, r25
    58a0:	29 f0       	breq	.+10     	; 0x58ac <_Z33activateEventUsingCurrentSettingsP2SC+0x44e>
    58a2:	8a 89       	ldd	r24, Y+18	; 0x12
    58a4:	9b 89       	ldd	r25, Y+19	; 0x13
    58a6:	2f ef       	ldi	r18, 0xFF	; 255
    58a8:	fc 01       	movw	r30, r24
    58aa:	20 83       	st	Z, r18
    58ac:	80 e0       	ldi	r24, 0x00	; 0
    58ae:	0e 94 bc 6f 	call	0xdf78	; 0xdf78 <_Z14keyTransmitterb>
    58b2:	10 92 a5 47 	sts	0x47A5, r1	; 0x8047a5 <g_waiting_for_next_event>
    58b6:	80 e0       	ldi	r24, 0x00	; 0
    58b8:	63 96       	adiw	r28, 0x13	; 19
    58ba:	cd bf       	out	0x3d, r28	; 61
    58bc:	de bf       	out	0x3e, r29	; 62
    58be:	df 91       	pop	r29
    58c0:	cf 91       	pop	r28
    58c2:	08 95       	ret

000058c4 <_Z8rtc_initv>:
    58c4:	cf 93       	push	r28
    58c6:	df 93       	push	r29
    58c8:	cd b7       	in	r28, 0x3d	; 61
    58ca:	de b7       	in	r29, 0x3e	; 62
    58cc:	61 e0       	ldi	r22, 0x01	; 1
    58ce:	83 e0       	ldi	r24, 0x03	; 3
    58d0:	0e 94 39 10 	call	0x2072	; 0x2072 <PORTC_set_pin_pull_mode>
    58d4:	61 e0       	ldi	r22, 0x01	; 1
    58d6:	82 e0       	ldi	r24, 0x02	; 2
    58d8:	0e 94 39 10 	call	0x2072	; 0x2072 <PORTC_set_pin_pull_mode>
    58dc:	0e 94 93 3e 	call	0x7d26	; 0x7d26 <ds3231_init>
    58e0:	81 e0       	ldi	r24, 0x01	; 1
    58e2:	0e 94 29 44 	call	0x8852	; 0x8852 <ds3231_1s_sqw>
    58e6:	88 23       	and	r24, r24
    58e8:	11 f0       	breq	.+4      	; 0x58ee <_Z8rtc_initv+0x2a>
    58ea:	8c ef       	ldi	r24, 0xFC	; 252
    58ec:	01 c0       	rjmp	.+2      	; 0x58f0 <_Z8rtc_initv+0x2c>
    58ee:	80 e0       	ldi	r24, 0x00	; 0
    58f0:	df 91       	pop	r29
    58f2:	cf 91       	pop	r28
    58f4:	08 95       	ret

000058f6 <_Z18antennaIsConnectedv>:
    58f6:	cf 93       	push	r28
    58f8:	df 93       	push	r29
    58fa:	1f 92       	push	r1
    58fc:	cd b7       	in	r28, 0x3d	; 61
    58fe:	de b7       	in	r29, 0x3e	; 62
    5900:	81 e0       	ldi	r24, 0x01	; 1
    5902:	0e 94 89 10 	call	0x2112	; 0x2112 <PORTD_get_pin_level>
    5906:	89 83       	std	Y+1, r24	; 0x01
    5908:	99 81       	ldd	r25, Y+1	; 0x01
    590a:	81 e0       	ldi	r24, 0x01	; 1
    590c:	89 27       	eor	r24, r25
    590e:	0f 90       	pop	r0
    5910:	df 91       	pop	r29
    5912:	cf 91       	pop	r28
    5914:	08 95       	ret

00005916 <_Z12suspendEventv>:

void suspendEvent()
{
    5916:	cf 93       	push	r28
    5918:	df 93       	push	r29
    591a:	cd b7       	in	r28, 0x3d	; 61
    591c:	de b7       	in	r29, 0x3e	; 62
	g_event_enabled = false;    /* get things stopped immediately */
    591e:	10 92 a2 47 	sts	0x47A2, r1	; 0x8047a2 <g_event_enabled>
	g_on_the_air = 0;           /*  stop transmitting */
    5922:	10 92 62 47 	sts	0x4762, r1	; 0x804762 <_ZL12g_on_the_air>
    5926:	10 92 63 47 	sts	0x4763, r1	; 0x804763 <_ZL12g_on_the_air+0x1>
    592a:	10 92 64 47 	sts	0x4764, r1	; 0x804764 <_ZL12g_on_the_air+0x2>
    592e:	10 92 65 47 	sts	0x4765, r1	; 0x804765 <_ZL12g_on_the_air+0x3>
	g_event_commenced = false;  /* get things stopped immediately */
    5932:	10 92 a3 47 	sts	0x47A3, r1	; 0x8047a3 <g_event_commenced>
	keyTransmitter(OFF);
    5936:	80 e0       	ldi	r24, 0x00	; 0
    5938:	0e 94 bc 6f 	call	0xdf78	; 0xdf78 <_Z14keyTransmitterb>
	powerToTransmitter(OFF);
    593c:	80 e0       	ldi	r24, 0x00	; 0
    593e:	0e 94 ab 6f 	call	0xdf56	; 0xdf56 <_Z18powerToTransmitterb>
}
    5942:	00 00       	nop
    5944:	df 91       	pop	r29
    5946:	cf 91       	pop	r28
    5948:	08 95       	ret

0000594a <_Z13startEventNow19EventActionSource_t>:


void startEventNow(EventActionSource_t activationSource)
{
    594a:	cf 93       	push	r28
    594c:	df 93       	push	r29
    594e:	00 d0       	rcall	.+0      	; 0x5950 <_Z13startEventNow19EventActionSource_t+0x6>
    5950:	cd b7       	in	r28, 0x3d	; 61
    5952:	de b7       	in	r29, 0x3e	; 62
    5954:	8a 83       	std	Y+2, r24	; 0x02
	ConfigurationState_t conf = clockConfigurationCheck();
    5956:	0e 94 87 33 	call	0x670e	; 0x670e <_Z23clockConfigurationCheckv>
    595a:	89 83       	std	Y+1, r24	; 0x01

	if(activationSource == POWER_UP)
    595c:	8a 81       	ldd	r24, Y+2	; 0x02
    595e:	88 23       	and	r24, r24
    5960:	79 f4       	brne	.+30     	; 0x5980 <_Z13startEventNow19EventActionSource_t+0x36>
	{
		if(conf == CONFIGURATION_ERROR)
    5962:	89 81       	ldd	r24, Y+1	; 0x01
    5964:	82 30       	cpi	r24, 0x02	; 2
    5966:	31 f4       	brne	.+12     	; 0x5974 <_Z13startEventNow19EventActionSource_t+0x2a>
		{
			setupForFox(NULL, START_NOTHING);
    5968:	60 e0       	ldi	r22, 0x00	; 0
    596a:	80 e0       	ldi	r24, 0x00	; 0
    596c:	90 e0       	ldi	r25, 0x00	; 0
    596e:	0e 94 c8 2d 	call	0x5b90	; 0x5b90 <_Z11setupForFoxP5Fox_t13EventAction_t>
			}
		}
	}

// 	g_LED_enunciating = false;
}
    5972:	47 c0       	rjmp	.+142    	; 0x5a02 <_Z13startEventNow19EventActionSource_t+0xb8>
		{
			setupForFox(NULL, START_NOTHING);
		}
		else
		{
			setupForFox(NULL, START_EVENT_WITH_STARTFINISH_TIMES);
    5974:	63 e0       	ldi	r22, 0x03	; 3
    5976:	80 e0       	ldi	r24, 0x00	; 0
    5978:	90 e0       	ldi	r25, 0x00	; 0
    597a:	0e 94 c8 2d 	call	0x5b90	; 0x5b90 <_Z11setupForFoxP5Fox_t13EventAction_t>
			}
		}
	}

// 	g_LED_enunciating = false;
}
    597e:	41 c0       	rjmp	.+130    	; 0x5a02 <_Z13startEventNow19EventActionSource_t+0xb8>
		else
		{
			setupForFox(NULL, START_EVENT_WITH_STARTFINISH_TIMES);
		}
	}
	else if(activationSource == PROGRAMMATIC)
    5980:	8a 81       	ldd	r24, Y+2	; 0x02
    5982:	82 30       	cpi	r24, 0x02	; 2
    5984:	f1 f4       	brne	.+60     	; 0x59c2 <_Z13startEventNow19EventActionSource_t+0x78>
	{
		if(conf == CONFIGURATION_ERROR)                                                                                             /* Start immediately */
    5986:	89 81       	ldd	r24, Y+1	; 0x01
    5988:	82 30       	cpi	r24, 0x02	; 2
    598a:	31 f4       	brne	.+12     	; 0x5998 <_Z13startEventNow19EventActionSource_t+0x4e>
		{
			setupForFox(NULL, START_EVENT_NOW);
    598c:	61 e0       	ldi	r22, 0x01	; 1
    598e:	80 e0       	ldi	r24, 0x00	; 0
    5990:	90 e0       	ldi	r25, 0x00	; 0
    5992:	0e 94 c8 2d 	call	0x5b90	; 0x5b90 <_Z11setupForFoxP5Fox_t13EventAction_t>
			}
		}
	}

// 	g_LED_enunciating = false;
}
    5996:	35 c0       	rjmp	.+106    	; 0x5a02 <_Z13startEventNow19EventActionSource_t+0xb8>
	{
		if(conf == CONFIGURATION_ERROR)                                                                                             /* Start immediately */
		{
			setupForFox(NULL, START_EVENT_NOW);
		}
		else if((conf == WAITING_FOR_START) || (conf == SCHEDULED_EVENT_WILL_NEVER_RUN) || (conf == SCHEDULED_EVENT_DID_NOT_START)) /* Start immediately */
    5998:	89 81       	ldd	r24, Y+1	; 0x01
    599a:	81 30       	cpi	r24, 0x01	; 1
    599c:	31 f0       	breq	.+12     	; 0x59aa <_Z13startEventNow19EventActionSource_t+0x60>
    599e:	89 81       	ldd	r24, Y+1	; 0x01
    59a0:	84 30       	cpi	r24, 0x04	; 4
    59a2:	19 f0       	breq	.+6      	; 0x59aa <_Z13startEventNow19EventActionSource_t+0x60>
    59a4:	89 81       	ldd	r24, Y+1	; 0x01
    59a6:	83 30       	cpi	r24, 0x03	; 3
    59a8:	31 f4       	brne	.+12     	; 0x59b6 <_Z13startEventNow19EventActionSource_t+0x6c>
		{
			setupForFox(NULL, START_EVENT_NOW);
    59aa:	61 e0       	ldi	r22, 0x01	; 1
    59ac:	80 e0       	ldi	r24, 0x00	; 0
    59ae:	90 e0       	ldi	r25, 0x00	; 0
    59b0:	0e 94 c8 2d 	call	0x5b90	; 0x5b90 <_Z11setupForFoxP5Fox_t13EventAction_t>
			}
		}
	}

// 	g_LED_enunciating = false;
}
    59b4:	26 c0       	rjmp	.+76     	; 0x5a02 <_Z13startEventNow19EventActionSource_t+0xb8>
		{
			setupForFox(NULL, START_EVENT_NOW);
		}
		else                                                                                                                        /*if((conf == EVENT_IN_PROGRESS) */
		{
			setupForFox(NULL, START_EVENT_WITH_STARTFINISH_TIMES);                                                                  /* Let the RTC start the event */
    59b6:	63 e0       	ldi	r22, 0x03	; 3
    59b8:	80 e0       	ldi	r24, 0x00	; 0
    59ba:	90 e0       	ldi	r25, 0x00	; 0
    59bc:	0e 94 c8 2d 	call	0x5b90	; 0x5b90 <_Z11setupForFoxP5Fox_t13EventAction_t>
			}
		}
	}

// 	g_LED_enunciating = false;
}
    59c0:	20 c0       	rjmp	.+64     	; 0x5a02 <_Z13startEventNow19EventActionSource_t+0xb8>
			setupForFox(NULL, START_EVENT_WITH_STARTFINISH_TIMES);                                                                  /* Let the RTC start the event */
		}
	}
	else                                                                                                                            /* PUSHBUTTON */
	{
		if(conf == CONFIGURATION_ERROR)                                                                                             /* No scheduled event */
    59c2:	89 81       	ldd	r24, Y+1	; 0x01
    59c4:	82 30       	cpi	r24, 0x02	; 2
    59c6:	31 f4       	brne	.+12     	; 0x59d4 <_Z13startEventNow19EventActionSource_t+0x8a>
		{
			setupForFox(NULL, START_EVENT_NOW);
    59c8:	61 e0       	ldi	r22, 0x01	; 1
    59ca:	80 e0       	ldi	r24, 0x00	; 0
    59cc:	90 e0       	ldi	r25, 0x00	; 0
    59ce:	0e 94 c8 2d 	call	0x5b90	; 0x5b90 <_Z11setupForFoxP5Fox_t13EventAction_t>
			}
		}
	}

// 	g_LED_enunciating = false;
}
    59d2:	17 c0       	rjmp	.+46     	; 0x5a02 <_Z13startEventNow19EventActionSource_t+0xb8>
		{
			setupForFox(NULL, START_EVENT_NOW);
		}
		else                                                                                                                        /* if(buttonActivated) */
		{
			if(conf == WAITING_FOR_START)
    59d4:	89 81       	ldd	r24, Y+1	; 0x01
    59d6:	81 30       	cpi	r24, 0x01	; 1
    59d8:	31 f4       	brne	.+12     	; 0x59e6 <_Z13startEventNow19EventActionSource_t+0x9c>
			{
				setupForFox(NULL, START_TRANSMISSIONS_NOW);                                                                         /* Start transmitting! */
    59da:	62 e0       	ldi	r22, 0x02	; 2
    59dc:	80 e0       	ldi	r24, 0x00	; 0
    59de:	90 e0       	ldi	r25, 0x00	; 0
    59e0:	0e 94 c8 2d 	call	0x5b90	; 0x5b90 <_Z11setupForFoxP5Fox_t13EventAction_t>
			}
		}
	}

// 	g_LED_enunciating = false;
}
    59e4:	0e c0       	rjmp	.+28     	; 0x5a02 <_Z13startEventNow19EventActionSource_t+0xb8>
		{
			if(conf == WAITING_FOR_START)
			{
				setupForFox(NULL, START_TRANSMISSIONS_NOW);                                                                         /* Start transmitting! */
			}
			else if(conf == SCHEDULED_EVENT_WILL_NEVER_RUN)
    59e6:	89 81       	ldd	r24, Y+1	; 0x01
    59e8:	84 30       	cpi	r24, 0x04	; 4
    59ea:	31 f4       	brne	.+12     	; 0x59f8 <_Z13startEventNow19EventActionSource_t+0xae>
			{
				setupForFox(NULL, START_EVENT_WITH_STARTFINISH_TIMES);                                                              /* rtc starts the event */
    59ec:	63 e0       	ldi	r22, 0x03	; 3
    59ee:	80 e0       	ldi	r24, 0x00	; 0
    59f0:	90 e0       	ldi	r25, 0x00	; 0
    59f2:	0e 94 c8 2d 	call	0x5b90	; 0x5b90 <_Z11setupForFoxP5Fox_t13EventAction_t>
			}
		}
	}

// 	g_LED_enunciating = false;
}
    59f6:	05 c0       	rjmp	.+10     	; 0x5a02 <_Z13startEventNow19EventActionSource_t+0xb8>
			{
				setupForFox(NULL, START_EVENT_WITH_STARTFINISH_TIMES);                                                              /* rtc starts the event */
			}
			else                                                                                                                    /* Event should be running now */
			{
				setupForFox(NULL, START_EVENT_WITH_STARTFINISH_TIMES);                                                              /* start the running event */
    59f8:	63 e0       	ldi	r22, 0x03	; 3
    59fa:	80 e0       	ldi	r24, 0x00	; 0
    59fc:	90 e0       	ldi	r25, 0x00	; 0
    59fe:	0e 94 c8 2d 	call	0x5b90	; 0x5b90 <_Z11setupForFoxP5Fox_t13EventAction_t>
			}
		}
	}

// 	g_LED_enunciating = false;
}
    5a02:	00 00       	nop
    5a04:	0f 90       	pop	r0
    5a06:	0f 90       	pop	r0
    5a08:	df 91       	pop	r29
    5a0a:	cf 91       	pop	r28
    5a0c:	08 95       	ret

00005a0e <_Z12stopEventNow19EventActionSource_t>:

void stopEventNow(EventActionSource_t activationSource)
{
    5a0e:	cf 93       	push	r28
    5a10:	df 93       	push	r29
    5a12:	00 d0       	rcall	.+0      	; 0x5a14 <_Z12stopEventNow19EventActionSource_t+0x6>
    5a14:	cd b7       	in	r28, 0x3d	; 61
    5a16:	de b7       	in	r29, 0x3e	; 62
    5a18:	8a 83       	std	Y+2, r24	; 0x02
	ConfigurationState_t conf = clockConfigurationCheck();
    5a1a:	0e 94 87 33 	call	0x670e	; 0x670e <_Z23clockConfigurationCheckv>
    5a1e:	89 83       	std	Y+1, r24	; 0x01

	if(activationSource == PROGRAMMATIC)
    5a20:	8a 81       	ldd	r24, Y+2	; 0x02
    5a22:	82 30       	cpi	r24, 0x02	; 2
    5a24:	31 f4       	brne	.+12     	; 0x5a32 <_Z12stopEventNow19EventActionSource_t+0x24>
	{
		setupForFox(NULL, START_NOTHING);
    5a26:	60 e0       	ldi	r22, 0x00	; 0
    5a28:	80 e0       	ldi	r24, 0x00	; 0
    5a2a:	90 e0       	ldi	r25, 0x00	; 0
    5a2c:	0e 94 c8 2d 	call	0x5b90	; 0x5b90 <_Z11setupForFoxP5Fox_t13EventAction_t>

// 	if(g_sync_pin_stable == STABLE_LOW)
// 	{
// 		digitalWrite(PIN_LED, OFF); /*  LED Off */
// 	}
}
    5a30:	16 c0       	rjmp	.+44     	; 0x5a5e <_Z12stopEventNow19EventActionSource_t+0x50>
	{
		setupForFox(NULL, START_NOTHING);
	}
	else    /* if(activationSource == PUSHBUTTON) */
	{
		if(conf == WAITING_FOR_START)
    5a32:	89 81       	ldd	r24, Y+1	; 0x01
    5a34:	81 30       	cpi	r24, 0x01	; 1
    5a36:	29 f4       	brne	.+10     	; 0x5a42 <_Z12stopEventNow19EventActionSource_t+0x34>
		{
			setupForFox(NULL, START_TRANSMISSIONS_NOW);
    5a38:	62 e0       	ldi	r22, 0x02	; 2
    5a3a:	80 e0       	ldi	r24, 0x00	; 0
    5a3c:	90 e0       	ldi	r25, 0x00	; 0
    5a3e:	0e 94 c8 2d 	call	0x5b90	; 0x5b90 <_Z11setupForFoxP5Fox_t13EventAction_t>
		}
		if(conf == SCHEDULED_EVENT_WILL_NEVER_RUN)
    5a42:	89 81       	ldd	r24, Y+1	; 0x01
    5a44:	84 30       	cpi	r24, 0x04	; 4
    5a46:	31 f4       	brne	.+12     	; 0x5a54 <_Z12stopEventNow19EventActionSource_t+0x46>
		{
			setupForFox(NULL, START_NOTHING);
    5a48:	60 e0       	ldi	r22, 0x00	; 0
    5a4a:	80 e0       	ldi	r24, 0x00	; 0
    5a4c:	90 e0       	ldi	r25, 0x00	; 0
    5a4e:	0e 94 c8 2d 	call	0x5b90	; 0x5b90 <_Z11setupForFoxP5Fox_t13EventAction_t>

// 	if(g_sync_pin_stable == STABLE_LOW)
// 	{
// 		digitalWrite(PIN_LED, OFF); /*  LED Off */
// 	}
}
    5a52:	05 c0       	rjmp	.+10     	; 0x5a5e <_Z12stopEventNow19EventActionSource_t+0x50>
		{
			setupForFox(NULL, START_NOTHING);
		}
		else    /*if(conf == CONFIGURATION_ERROR) */
		{
			setupForFox(NULL, START_NOTHING);
    5a54:	60 e0       	ldi	r22, 0x00	; 0
    5a56:	80 e0       	ldi	r24, 0x00	; 0
    5a58:	90 e0       	ldi	r25, 0x00	; 0
    5a5a:	0e 94 c8 2d 	call	0x5b90	; 0x5b90 <_Z11setupForFoxP5Fox_t13EventAction_t>

// 	if(g_sync_pin_stable == STABLE_LOW)
// 	{
// 		digitalWrite(PIN_LED, OFF); /*  LED Off */
// 	}
}
    5a5e:	00 00       	nop
    5a60:	0f 90       	pop	r0
    5a62:	0f 90       	pop	r0
    5a64:	df 91       	pop	r29
    5a66:	cf 91       	pop	r28
    5a68:	08 95       	ret

00005a6a <_Z18startEventUsingRTCv>:

void startEventUsingRTC(void)
{
    5a6a:	ef 92       	push	r14
    5a6c:	ff 92       	push	r15
    5a6e:	0f 93       	push	r16
    5a70:	1f 93       	push	r17
    5a72:	cf 93       	push	r28
    5a74:	df 93       	push	r29
    5a76:	cd b7       	in	r28, 0x3d	; 61
    5a78:	de b7       	in	r29, 0x3e	; 62
    5a7a:	25 97       	sbiw	r28, 0x05	; 5
    5a7c:	cd bf       	out	0x3d, r28	; 61
    5a7e:	de bf       	out	0x3e, r29	; 62
	set_system_time(ds3231_get_epoch(null));
    5a80:	80 e0       	ldi	r24, 0x00	; 0
    5a82:	90 e0       	ldi	r25, 0x00	; 0
    5a84:	0e 94 c2 40 	call	0x8184	; 0x8184 <ds3231_get_epoch>
    5a88:	dc 01       	movw	r26, r24
    5a8a:	cb 01       	movw	r24, r22
    5a8c:	bc 01       	movw	r22, r24
    5a8e:	cd 01       	movw	r24, r26
    5a90:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <set_system_time>
	time_t now = time(null);
    5a94:	80 e0       	ldi	r24, 0x00	; 0
    5a96:	90 e0       	ldi	r25, 0x00	; 0
    5a98:	0e 94 56 06 	call	0xcac	; 0xcac <time>
    5a9c:	dc 01       	movw	r26, r24
    5a9e:	cb 01       	movw	r24, r22
    5aa0:	89 83       	std	Y+1, r24	; 0x01
    5aa2:	9a 83       	std	Y+2, r25	; 0x02
    5aa4:	ab 83       	std	Y+3, r26	; 0x03
    5aa6:	bc 83       	std	Y+4, r27	; 0x04
	ConfigurationState_t state = clockConfigurationCheck();
    5aa8:	0e 94 87 33 	call	0x670e	; 0x670e <_Z23clockConfigurationCheckv>
    5aac:	8d 83       	std	Y+5, r24	; 0x05

	if(state != CONFIGURATION_ERROR)
    5aae:	8d 81       	ldd	r24, Y+5	; 0x05
    5ab0:	82 30       	cpi	r24, 0x02	; 2
    5ab2:	09 f4       	brne	.+2      	; 0x5ab6 <_Z18startEventUsingRTCv+0x4c>
    5ab4:	60 c0       	rjmp	.+192    	; 0x5b76 <_Z18startEventUsingRTCv+0x10c>
	{
		setupForFox(NULL, START_EVENT_WITH_STARTFINISH_TIMES);
    5ab6:	63 e0       	ldi	r22, 0x03	; 3
    5ab8:	80 e0       	ldi	r24, 0x00	; 0
    5aba:	90 e0       	ldi	r25, 0x00	; 0
    5abc:	0e 94 c8 2d 	call	0x5b90	; 0x5b90 <_Z11setupForFoxP5Fox_t13EventAction_t>
		reportTimeTill(now, g_event_start_epoch, "Starts in: ", "In progress\n");
    5ac0:	20 91 9a 47 	lds	r18, 0x479A	; 0x80479a <g_event_start_epoch>
    5ac4:	30 91 9b 47 	lds	r19, 0x479B	; 0x80479b <g_event_start_epoch+0x1>
    5ac8:	40 91 9c 47 	lds	r20, 0x479C	; 0x80479c <g_event_start_epoch+0x2>
    5acc:	50 91 9d 47 	lds	r21, 0x479D	; 0x80479d <g_event_start_epoch+0x3>
    5ad0:	89 81       	ldd	r24, Y+1	; 0x01
    5ad2:	9a 81       	ldd	r25, Y+2	; 0x02
    5ad4:	ab 81       	ldd	r26, Y+3	; 0x03
    5ad6:	bc 81       	ldd	r27, Y+4	; 0x04
    5ad8:	0f 2e       	mov	r0, r31
    5ada:	ff e4       	ldi	r31, 0x4F	; 79
    5adc:	ef 2e       	mov	r14, r31
    5ade:	f1 e4       	ldi	r31, 0x41	; 65
    5ae0:	ff 2e       	mov	r15, r31
    5ae2:	f0 2d       	mov	r31, r0
    5ae4:	0c e5       	ldi	r16, 0x5C	; 92
    5ae6:	11 e4       	ldi	r17, 0x41	; 65
    5ae8:	bc 01       	movw	r22, r24
    5aea:	cd 01       	movw	r24, r26
    5aec:	0e 94 e5 31 	call	0x63ca	; 0x63ca <_Z14reportTimeTillmmPKcS0_>

		if(g_event_start_epoch < now)
    5af0:	20 91 9a 47 	lds	r18, 0x479A	; 0x80479a <g_event_start_epoch>
    5af4:	30 91 9b 47 	lds	r19, 0x479B	; 0x80479b <g_event_start_epoch+0x1>
    5af8:	40 91 9c 47 	lds	r20, 0x479C	; 0x80479c <g_event_start_epoch+0x2>
    5afc:	50 91 9d 47 	lds	r21, 0x479D	; 0x80479d <g_event_start_epoch+0x3>
    5b00:	61 e0       	ldi	r22, 0x01	; 1
    5b02:	89 81       	ldd	r24, Y+1	; 0x01
    5b04:	9a 81       	ldd	r25, Y+2	; 0x02
    5b06:	ab 81       	ldd	r26, Y+3	; 0x03
    5b08:	bc 81       	ldd	r27, Y+4	; 0x04
    5b0a:	28 17       	cp	r18, r24
    5b0c:	39 07       	cpc	r19, r25
    5b0e:	4a 07       	cpc	r20, r26
    5b10:	5b 07       	cpc	r21, r27
    5b12:	08 f0       	brcs	.+2      	; 0x5b16 <_Z18startEventUsingRTCv+0xac>
    5b14:	60 e0       	ldi	r22, 0x00	; 0
    5b16:	66 23       	and	r22, r22
    5b18:	a9 f0       	breq	.+42     	; 0x5b44 <_Z18startEventUsingRTCv+0xda>
		{
			reportTimeTill(now, g_event_finish_epoch, "Time Remaining: ", NULL);
    5b1a:	20 91 9e 47 	lds	r18, 0x479E	; 0x80479e <g_event_finish_epoch>
    5b1e:	30 91 9f 47 	lds	r19, 0x479F	; 0x80479f <g_event_finish_epoch+0x1>
    5b22:	40 91 a0 47 	lds	r20, 0x47A0	; 0x8047a0 <g_event_finish_epoch+0x2>
    5b26:	50 91 a1 47 	lds	r21, 0x47A1	; 0x8047a1 <g_event_finish_epoch+0x3>
    5b2a:	89 81       	ldd	r24, Y+1	; 0x01
    5b2c:	9a 81       	ldd	r25, Y+2	; 0x02
    5b2e:	ab 81       	ldd	r26, Y+3	; 0x03
    5b30:	bc 81       	ldd	r27, Y+4	; 0x04
    5b32:	e1 2c       	mov	r14, r1
    5b34:	f1 2c       	mov	r15, r1
    5b36:	00 e7       	ldi	r16, 0x70	; 112
    5b38:	11 e4       	ldi	r17, 0x41	; 65
    5b3a:	bc 01       	movw	r22, r24
    5b3c:	cd 01       	movw	r24, r26
    5b3e:	0e 94 e5 31 	call	0x63ca	; 0x63ca <_Z14reportTimeTillmmPKcS0_>
	}
	else
	{
		reportConfigErrors();
	}
}
    5b42:	1b c0       	rjmp	.+54     	; 0x5b7a <_Z18startEventUsingRTCv+0x110>
		{
			reportTimeTill(now, g_event_finish_epoch, "Time Remaining: ", NULL);
		}
		else
		{
			reportTimeTill(g_event_start_epoch, g_event_finish_epoch, "Lasts: ", NULL);
    5b44:	20 91 9e 47 	lds	r18, 0x479E	; 0x80479e <g_event_finish_epoch>
    5b48:	30 91 9f 47 	lds	r19, 0x479F	; 0x80479f <g_event_finish_epoch+0x1>
    5b4c:	40 91 a0 47 	lds	r20, 0x47A0	; 0x8047a0 <g_event_finish_epoch+0x2>
    5b50:	50 91 a1 47 	lds	r21, 0x47A1	; 0x8047a1 <g_event_finish_epoch+0x3>
    5b54:	80 91 9a 47 	lds	r24, 0x479A	; 0x80479a <g_event_start_epoch>
    5b58:	90 91 9b 47 	lds	r25, 0x479B	; 0x80479b <g_event_start_epoch+0x1>
    5b5c:	a0 91 9c 47 	lds	r26, 0x479C	; 0x80479c <g_event_start_epoch+0x2>
    5b60:	b0 91 9d 47 	lds	r27, 0x479D	; 0x80479d <g_event_start_epoch+0x3>
    5b64:	e1 2c       	mov	r14, r1
    5b66:	f1 2c       	mov	r15, r1
    5b68:	08 e6       	ldi	r16, 0x68	; 104
    5b6a:	11 e4       	ldi	r17, 0x41	; 65
    5b6c:	bc 01       	movw	r22, r24
    5b6e:	cd 01       	movw	r24, r26
    5b70:	0e 94 e5 31 	call	0x63ca	; 0x63ca <_Z14reportTimeTillmmPKcS0_>
	}
	else
	{
		reportConfigErrors();
	}
}
    5b74:	02 c0       	rjmp	.+4      	; 0x5b7a <_Z18startEventUsingRTCv+0x110>
			reportTimeTill(g_event_start_epoch, g_event_finish_epoch, "Lasts: ", NULL);
		}
	}
	else
	{
		reportConfigErrors();
    5b76:	0e 94 21 34 	call	0x6842	; 0x6842 <_Z18reportConfigErrorsv>
	}
}
    5b7a:	00 00       	nop
    5b7c:	25 96       	adiw	r28, 0x05	; 5
    5b7e:	cd bf       	out	0x3d, r28	; 61
    5b80:	de bf       	out	0x3e, r29	; 62
    5b82:	df 91       	pop	r29
    5b84:	cf 91       	pop	r28
    5b86:	1f 91       	pop	r17
    5b88:	0f 91       	pop	r16
    5b8a:	ff 90       	pop	r15
    5b8c:	ef 90       	pop	r14
    5b8e:	08 95       	ret

00005b90 <_Z11setupForFoxP5Fox_t13EventAction_t>:



void setupForFox(Fox_t* fox, EventAction_t action)
{
    5b90:	cf 93       	push	r28
    5b92:	df 93       	push	r29
    5b94:	cd b7       	in	r28, 0x3d	; 61
    5b96:	de b7       	in	r29, 0x3e	; 62
    5b98:	60 97       	sbiw	r28, 0x10	; 16
    5b9a:	cd bf       	out	0x3d, r28	; 61
    5b9c:	de bf       	out	0x3e, r29	; 62
    5b9e:	8e 87       	std	Y+14, r24	; 0x0e
    5ba0:	9f 87       	std	Y+15, r25	; 0x0f
    5ba2:	68 8b       	std	Y+16, r22	; 0x10
	bool patternNotSet = true;
    5ba4:	81 e0       	ldi	r24, 0x01	; 1
    5ba6:	89 83       	std	Y+1, r24	; 0x01
	
	if(fox)
    5ba8:	8e 85       	ldd	r24, Y+14	; 0x0e
    5baa:	9f 85       	ldd	r25, Y+15	; 0x0f
    5bac:	89 2b       	or	r24, r25
    5bae:	61 f0       	breq	.+24     	; 0x5bc8 <_Z11setupForFoxP5Fox_t13EventAction_t+0x38>
	{
		if(*fox != INVALID_FOX)
    5bb0:	8e 85       	ldd	r24, Y+14	; 0x0e
    5bb2:	9f 85       	ldd	r25, Y+15	; 0x0f
    5bb4:	fc 01       	movw	r30, r24
    5bb6:	80 81       	ld	r24, Z
    5bb8:	82 31       	cpi	r24, 0x12	; 18
    5bba:	31 f0       	breq	.+12     	; 0x5bc8 <_Z11setupForFoxP5Fox_t13EventAction_t+0x38>
		{
			g_fox = *fox;
    5bbc:	8e 85       	ldd	r24, Y+14	; 0x0e
    5bbe:	9f 85       	ldd	r25, Y+15	; 0x0f
    5bc0:	fc 01       	movw	r30, r24
    5bc2:	80 81       	ld	r24, Z
    5bc4:	80 93 20 40 	sts	0x4020, r24	; 0x804020 <g_fox>
		}
	}

	g_event_enabled = false;
    5bc8:	10 92 a2 47 	sts	0x47A2, r1	; 0x8047a2 <g_event_enabled>
	g_event_commenced = false;
    5bcc:	10 92 a3 47 	sts	0x47A3, r1	; 0x8047a3 <g_event_commenced>
	LEDS.setRed(OFF);
    5bd0:	60 e0       	ldi	r22, 0x00	; 0
    5bd2:	88 eb       	ldi	r24, 0xB8	; 184
    5bd4:	97 e4       	ldi	r25, 0x47	; 71
    5bd6:	0e 94 8f 54 	call	0xa91e	; 0xa91e <_ZN4leds6setRedEb>
 	set_system_time(ds3231_get_epoch(null));
    5bda:	80 e0       	ldi	r24, 0x00	; 0
    5bdc:	90 e0       	ldi	r25, 0x00	; 0
    5bde:	0e 94 c2 40 	call	0x8184	; 0x8184 <ds3231_get_epoch>
    5be2:	dc 01       	movw	r26, r24
    5be4:	cb 01       	movw	r24, r22
    5be6:	bc 01       	movw	r22, r24
    5be8:	cd 01       	movw	r24, r26
    5bea:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <set_system_time>

	switch(g_fox)
    5bee:	80 91 20 40 	lds	r24, 0x4020	; 0x804020 <g_fox>
    5bf2:	88 2f       	mov	r24, r24
    5bf4:	90 e0       	ldi	r25, 0x00	; 0
    5bf6:	09 2e       	mov	r0, r25
    5bf8:	00 0c       	add	r0, r0
    5bfa:	aa 0b       	sbc	r26, r26
    5bfc:	bb 0b       	sbc	r27, r27
    5bfe:	41 e0       	ldi	r20, 0x01	; 1
    5c00:	50 e0       	ldi	r21, 0x00	; 0
    5c02:	20 e1       	ldi	r18, 0x10	; 16
    5c04:	30 e0       	ldi	r19, 0x00	; 0
    5c06:	84 1b       	sub	r24, r20
    5c08:	95 0b       	sbc	r25, r21
    5c0a:	28 17       	cp	r18, r24
    5c0c:	39 07       	cpc	r19, r25
    5c0e:	08 f4       	brcc	.+2      	; 0x5c12 <_Z11setupForFoxP5Fox_t13EventAction_t+0x82>
    5c10:	a1 c1       	rjmp	.+834    	; 0x5f54 <_Z11setupForFoxP5Fox_t13EventAction_t+0x3c4>
    5c12:	8c 58       	subi	r24, 0x8C	; 140
    5c14:	9f 4f       	sbci	r25, 0xFF	; 255
    5c16:	fc 01       	movw	r30, r24
    5c18:	0c 94 31 7a 	jmp	0xf462	; 0xf462 <__tablejump2__>
	{
		case FOX_1:
		{
			if(patternNotSet)
    5c1c:	89 81       	ldd	r24, Y+1	; 0x01
    5c1e:	88 23       	and	r24, r24
    5c20:	89 f0       	breq	.+34     	; 0x5c44 <_Z11setupForFoxP5Fox_t13EventAction_t+0xb4>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "MOE");
    5c22:	8d e4       	ldi	r24, 0x4D	; 77
    5c24:	9f e4       	ldi	r25, 0x4F	; 79
    5c26:	80 93 6c 47 	sts	0x476C, r24	; 0x80476c <g_messages_text>
    5c2a:	90 93 6d 47 	sts	0x476D, r25	; 0x80476d <g_messages_text+0x1>
    5c2e:	85 e4       	ldi	r24, 0x45	; 69
    5c30:	90 e0       	ldi	r25, 0x00	; 0
    5c32:	80 93 6e 47 	sts	0x476E, r24	; 0x80476e <g_messages_text+0x2>
    5c36:	90 93 6f 47 	sts	0x476F, r25	; 0x80476f <g_messages_text+0x3>
				patternNotSet = false;
    5c3a:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 0;
    5c3c:	10 92 98 47 	sts	0x4798, r1	; 0x804798 <g_intra_cycle_delay_time>
    5c40:	10 92 99 47 	sts	0x4799, r1	; 0x804799 <g_intra_cycle_delay_time+0x1>
			}
		}
		case FOX_2:
		{
			if(patternNotSet)
    5c44:	89 81       	ldd	r24, Y+1	; 0x01
    5c46:	88 23       	and	r24, r24
    5c48:	99 f0       	breq	.+38     	; 0x5c70 <_Z11setupForFoxP5Fox_t13EventAction_t+0xe0>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "MOI");
    5c4a:	8d e4       	ldi	r24, 0x4D	; 77
    5c4c:	9f e4       	ldi	r25, 0x4F	; 79
    5c4e:	80 93 6c 47 	sts	0x476C, r24	; 0x80476c <g_messages_text>
    5c52:	90 93 6d 47 	sts	0x476D, r25	; 0x80476d <g_messages_text+0x1>
    5c56:	89 e4       	ldi	r24, 0x49	; 73
    5c58:	90 e0       	ldi	r25, 0x00	; 0
    5c5a:	80 93 6e 47 	sts	0x476E, r24	; 0x80476e <g_messages_text+0x2>
    5c5e:	90 93 6f 47 	sts	0x476F, r25	; 0x80476f <g_messages_text+0x3>
				patternNotSet = false;
    5c62:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 60;
    5c64:	8c e3       	ldi	r24, 0x3C	; 60
    5c66:	90 e0       	ldi	r25, 0x00	; 0
    5c68:	80 93 98 47 	sts	0x4798, r24	; 0x804798 <g_intra_cycle_delay_time>
    5c6c:	90 93 99 47 	sts	0x4799, r25	; 0x804799 <g_intra_cycle_delay_time+0x1>
			}
		}
		case FOX_3:
		{
			if(patternNotSet)
    5c70:	89 81       	ldd	r24, Y+1	; 0x01
    5c72:	88 23       	and	r24, r24
    5c74:	99 f0       	breq	.+38     	; 0x5c9c <_Z11setupForFoxP5Fox_t13EventAction_t+0x10c>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "MOS");
    5c76:	8d e4       	ldi	r24, 0x4D	; 77
    5c78:	9f e4       	ldi	r25, 0x4F	; 79
    5c7a:	80 93 6c 47 	sts	0x476C, r24	; 0x80476c <g_messages_text>
    5c7e:	90 93 6d 47 	sts	0x476D, r25	; 0x80476d <g_messages_text+0x1>
    5c82:	83 e5       	ldi	r24, 0x53	; 83
    5c84:	90 e0       	ldi	r25, 0x00	; 0
    5c86:	80 93 6e 47 	sts	0x476E, r24	; 0x80476e <g_messages_text+0x2>
    5c8a:	90 93 6f 47 	sts	0x476F, r25	; 0x80476f <g_messages_text+0x3>
				patternNotSet = false;
    5c8e:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 120;
    5c90:	88 e7       	ldi	r24, 0x78	; 120
    5c92:	90 e0       	ldi	r25, 0x00	; 0
    5c94:	80 93 98 47 	sts	0x4798, r24	; 0x804798 <g_intra_cycle_delay_time>
    5c98:	90 93 99 47 	sts	0x4799, r25	; 0x804799 <g_intra_cycle_delay_time+0x1>
			}
		}
		case FOX_4:
		{
			if(patternNotSet)
    5c9c:	89 81       	ldd	r24, Y+1	; 0x01
    5c9e:	88 23       	and	r24, r24
    5ca0:	99 f0       	breq	.+38     	; 0x5cc8 <_Z11setupForFoxP5Fox_t13EventAction_t+0x138>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "MOH");
    5ca2:	8d e4       	ldi	r24, 0x4D	; 77
    5ca4:	9f e4       	ldi	r25, 0x4F	; 79
    5ca6:	80 93 6c 47 	sts	0x476C, r24	; 0x80476c <g_messages_text>
    5caa:	90 93 6d 47 	sts	0x476D, r25	; 0x80476d <g_messages_text+0x1>
    5cae:	88 e4       	ldi	r24, 0x48	; 72
    5cb0:	90 e0       	ldi	r25, 0x00	; 0
    5cb2:	80 93 6e 47 	sts	0x476E, r24	; 0x80476e <g_messages_text+0x2>
    5cb6:	90 93 6f 47 	sts	0x476F, r25	; 0x80476f <g_messages_text+0x3>
				patternNotSet = false;
    5cba:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 180;
    5cbc:	84 eb       	ldi	r24, 0xB4	; 180
    5cbe:	90 e0       	ldi	r25, 0x00	; 0
    5cc0:	80 93 98 47 	sts	0x4798, r24	; 0x804798 <g_intra_cycle_delay_time>
    5cc4:	90 93 99 47 	sts	0x4799, r25	; 0x804799 <g_intra_cycle_delay_time+0x1>
			}
		}
		case FOX_5:
		{
			/* Set the Morse code pattern and speed */
			if(patternNotSet)
    5cc8:	89 81       	ldd	r24, Y+1	; 0x01
    5cca:	88 23       	and	r24, r24
    5ccc:	91 f0       	breq	.+36     	; 0x5cf2 <_Z11setupForFoxP5Fox_t13EventAction_t+0x162>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "MO5");
    5cce:	8d e4       	ldi	r24, 0x4D	; 77
    5cd0:	9f e4       	ldi	r25, 0x4F	; 79
    5cd2:	80 93 6c 47 	sts	0x476C, r24	; 0x80476c <g_messages_text>
    5cd6:	90 93 6d 47 	sts	0x476D, r25	; 0x80476d <g_messages_text+0x1>
    5cda:	85 e3       	ldi	r24, 0x35	; 53
    5cdc:	90 e0       	ldi	r25, 0x00	; 0
    5cde:	80 93 6e 47 	sts	0x476E, r24	; 0x80476e <g_messages_text+0x2>
    5ce2:	90 93 6f 47 	sts	0x476F, r25	; 0x80476f <g_messages_text+0x3>
				g_intra_cycle_delay_time = 240;
    5ce6:	80 ef       	ldi	r24, 0xF0	; 240
    5ce8:	90 e0       	ldi	r25, 0x00	; 0
    5cea:	80 93 98 47 	sts	0x4798, r24	; 0x804798 <g_intra_cycle_delay_time>
    5cee:	90 93 99 47 	sts	0x4799, r25	; 0x804799 <g_intra_cycle_delay_time+0x1>
			}
			
			bool repeat = true;
    5cf2:	81 e0       	ldi	r24, 0x01	; 1
    5cf4:	8e 83       	std	Y+6, r24	; 0x06
			makeMorse(g_messages_text[PATTERN_TEXT], &repeat, NULL);
    5cf6:	ce 01       	movw	r24, r28
    5cf8:	06 96       	adiw	r24, 0x06	; 6
    5cfa:	40 e0       	ldi	r20, 0x00	; 0
    5cfc:	50 e0       	ldi	r21, 0x00	; 0
    5cfe:	bc 01       	movw	r22, r24
    5d00:	8c e6       	ldi	r24, 0x6C	; 108
    5d02:	97 e4       	ldi	r25, 0x47	; 71
    5d04:	0e 94 09 5c 	call	0xb812	; 0xb812 <_Z9makeMorsePcPbS0_>
			g_code_throttle = throttleValue(g_pattern_codespeed);
    5d08:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    5d0c:	0e 94 aa 29 	call	0x5354	; 0x5354 <_Z13throttleValueh>
    5d10:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    5d14:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>

			g_sendID_seconds_countdown = 60;			/* wait 1 minute to send the ID */
    5d18:	8c e3       	ldi	r24, 0x3C	; 60
    5d1a:	90 e0       	ldi	r25, 0x00	; 0
    5d1c:	80 93 66 47 	sts	0x4766, r24	; 0x804766 <_ZL26g_sendID_seconds_countdown>
    5d20:	90 93 67 47 	sts	0x4767, r25	; 0x804767 <_ZL26g_sendID_seconds_countdown+0x1>
			g_on_air_seconds = 60;						/* on period is very long */
    5d24:	8c e3       	ldi	r24, 0x3C	; 60
    5d26:	90 e0       	ldi	r25, 0x00	; 0
    5d28:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_on_air_seconds>
    5d2c:	90 93 0e 40 	sts	0x400E, r25	; 0x80400e <g_on_air_seconds+0x1>
			g_off_air_seconds = 240;                    /* off period is very short */
    5d30:	80 ef       	ldi	r24, 0xF0	; 240
    5d32:	90 e0       	ldi	r25, 0x00	; 0
    5d34:	80 93 0f 40 	sts	0x400F, r24	; 0x80400f <g_off_air_seconds>
    5d38:	90 93 10 40 	sts	0x4010, r25	; 0x804010 <g_off_air_seconds+0x1>
		}
		break;
    5d3c:	41 c1       	rjmp	.+642    	; 0x5fc0 <_Z11setupForFoxP5Fox_t13EventAction_t+0x430>

		case SPRINT_S1:
		{
			if(patternNotSet)
    5d3e:	89 81       	ldd	r24, Y+1	; 0x01
    5d40:	88 23       	and	r24, r24
    5d42:	69 f0       	breq	.+26     	; 0x5d5e <_Z11setupForFoxP5Fox_t13EventAction_t+0x1ce>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "ME");
    5d44:	8d e4       	ldi	r24, 0x4D	; 77
    5d46:	95 e4       	ldi	r25, 0x45	; 69
    5d48:	80 93 6c 47 	sts	0x476C, r24	; 0x80476c <g_messages_text>
    5d4c:	90 93 6d 47 	sts	0x476D, r25	; 0x80476d <g_messages_text+0x1>
    5d50:	10 92 6e 47 	sts	0x476E, r1	; 0x80476e <g_messages_text+0x2>
				patternNotSet = false;
    5d54:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 0;
    5d56:	10 92 98 47 	sts	0x4798, r1	; 0x804798 <g_intra_cycle_delay_time>
    5d5a:	10 92 99 47 	sts	0x4799, r1	; 0x804799 <g_intra_cycle_delay_time+0x1>
			}
		}
		case SPRINT_S2:
		{
			if(patternNotSet)
    5d5e:	89 81       	ldd	r24, Y+1	; 0x01
    5d60:	88 23       	and	r24, r24
    5d62:	79 f0       	breq	.+30     	; 0x5d82 <_Z11setupForFoxP5Fox_t13EventAction_t+0x1f2>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "MI");
    5d64:	8d e4       	ldi	r24, 0x4D	; 77
    5d66:	99 e4       	ldi	r25, 0x49	; 73
    5d68:	80 93 6c 47 	sts	0x476C, r24	; 0x80476c <g_messages_text>
    5d6c:	90 93 6d 47 	sts	0x476D, r25	; 0x80476d <g_messages_text+0x1>
    5d70:	10 92 6e 47 	sts	0x476E, r1	; 0x80476e <g_messages_text+0x2>
				patternNotSet = false;
    5d74:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 12;
    5d76:	8c e0       	ldi	r24, 0x0C	; 12
    5d78:	90 e0       	ldi	r25, 0x00	; 0
    5d7a:	80 93 98 47 	sts	0x4798, r24	; 0x804798 <g_intra_cycle_delay_time>
    5d7e:	90 93 99 47 	sts	0x4799, r25	; 0x804799 <g_intra_cycle_delay_time+0x1>
			}
		}
		case SPRINT_S3:
		{
			if(patternNotSet)
    5d82:	89 81       	ldd	r24, Y+1	; 0x01
    5d84:	88 23       	and	r24, r24
    5d86:	79 f0       	breq	.+30     	; 0x5da6 <_Z11setupForFoxP5Fox_t13EventAction_t+0x216>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "MS");
    5d88:	8d e4       	ldi	r24, 0x4D	; 77
    5d8a:	93 e5       	ldi	r25, 0x53	; 83
    5d8c:	80 93 6c 47 	sts	0x476C, r24	; 0x80476c <g_messages_text>
    5d90:	90 93 6d 47 	sts	0x476D, r25	; 0x80476d <g_messages_text+0x1>
    5d94:	10 92 6e 47 	sts	0x476E, r1	; 0x80476e <g_messages_text+0x2>
				patternNotSet = false;
    5d98:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 24;
    5d9a:	88 e1       	ldi	r24, 0x18	; 24
    5d9c:	90 e0       	ldi	r25, 0x00	; 0
    5d9e:	80 93 98 47 	sts	0x4798, r24	; 0x804798 <g_intra_cycle_delay_time>
    5da2:	90 93 99 47 	sts	0x4799, r25	; 0x804799 <g_intra_cycle_delay_time+0x1>
			}
		}
		case SPRINT_S4:
		{
			if(patternNotSet)
    5da6:	89 81       	ldd	r24, Y+1	; 0x01
    5da8:	88 23       	and	r24, r24
    5daa:	79 f0       	breq	.+30     	; 0x5dca <_Z11setupForFoxP5Fox_t13EventAction_t+0x23a>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "MH");
    5dac:	8d e4       	ldi	r24, 0x4D	; 77
    5dae:	98 e4       	ldi	r25, 0x48	; 72
    5db0:	80 93 6c 47 	sts	0x476C, r24	; 0x80476c <g_messages_text>
    5db4:	90 93 6d 47 	sts	0x476D, r25	; 0x80476d <g_messages_text+0x1>
    5db8:	10 92 6e 47 	sts	0x476E, r1	; 0x80476e <g_messages_text+0x2>
				patternNotSet = false;
    5dbc:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 36;
    5dbe:	84 e2       	ldi	r24, 0x24	; 36
    5dc0:	90 e0       	ldi	r25, 0x00	; 0
    5dc2:	80 93 98 47 	sts	0x4798, r24	; 0x804798 <g_intra_cycle_delay_time>
    5dc6:	90 93 99 47 	sts	0x4799, r25	; 0x804799 <g_intra_cycle_delay_time+0x1>
			}
		}
		case SPRINT_S5:
		{
			{
				if(patternNotSet)
    5dca:	89 81       	ldd	r24, Y+1	; 0x01
    5dcc:	88 23       	and	r24, r24
    5dce:	71 f0       	breq	.+28     	; 0x5dec <_Z11setupForFoxP5Fox_t13EventAction_t+0x25c>
				{
					sprintf(g_messages_text[PATTERN_TEXT], "M5");
    5dd0:	8d e4       	ldi	r24, 0x4D	; 77
    5dd2:	95 e3       	ldi	r25, 0x35	; 53
    5dd4:	80 93 6c 47 	sts	0x476C, r24	; 0x80476c <g_messages_text>
    5dd8:	90 93 6d 47 	sts	0x476D, r25	; 0x80476d <g_messages_text+0x1>
    5ddc:	10 92 6e 47 	sts	0x476E, r1	; 0x80476e <g_messages_text+0x2>
					g_intra_cycle_delay_time = 48;
    5de0:	80 e3       	ldi	r24, 0x30	; 48
    5de2:	90 e0       	ldi	r25, 0x00	; 0
    5de4:	80 93 98 47 	sts	0x4798, r24	; 0x804798 <g_intra_cycle_delay_time>
    5de8:	90 93 99 47 	sts	0x4799, r25	; 0x804799 <g_intra_cycle_delay_time+0x1>
				}
			}
			
			bool repeat = true;
    5dec:	81 e0       	ldi	r24, 0x01	; 1
    5dee:	8f 83       	std	Y+7, r24	; 0x07
			makeMorse(g_messages_text[PATTERN_TEXT], &repeat, NULL);
    5df0:	ce 01       	movw	r24, r28
    5df2:	07 96       	adiw	r24, 0x07	; 7
    5df4:	40 e0       	ldi	r20, 0x00	; 0
    5df6:	50 e0       	ldi	r21, 0x00	; 0
    5df8:	bc 01       	movw	r22, r24
    5dfa:	8c e6       	ldi	r24, 0x6C	; 108
    5dfc:	97 e4       	ldi	r25, 0x47	; 71
    5dfe:	0e 94 09 5c 	call	0xb812	; 0xb812 <_Z9makeMorsePcPbS0_>
			g_pattern_codespeed = 8;
    5e02:	88 e0       	ldi	r24, 0x08	; 8
    5e04:	80 93 0c 40 	sts	0x400C, r24	; 0x80400c <g_pattern_codespeed>
			g_code_throttle = throttleValue(g_pattern_codespeed);
    5e08:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    5e0c:	0e 94 aa 29 	call	0x5354	; 0x5354 <_Z13throttleValueh>
    5e10:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    5e14:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>

			g_sendID_seconds_countdown = 600;			/* wait 10 minutes send the ID */
    5e18:	88 e5       	ldi	r24, 0x58	; 88
    5e1a:	92 e0       	ldi	r25, 0x02	; 2
    5e1c:	80 93 66 47 	sts	0x4766, r24	; 0x804766 <_ZL26g_sendID_seconds_countdown>
    5e20:	90 93 67 47 	sts	0x4767, r25	; 0x804767 <_ZL26g_sendID_seconds_countdown+0x1>
			g_on_air_seconds = 12;						/* on period is very long */
    5e24:	8c e0       	ldi	r24, 0x0C	; 12
    5e26:	90 e0       	ldi	r25, 0x00	; 0
    5e28:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_on_air_seconds>
    5e2c:	90 93 0e 40 	sts	0x400E, r25	; 0x80400e <g_on_air_seconds+0x1>
			g_off_air_seconds = 48;						/* off period is very short */
    5e30:	80 e3       	ldi	r24, 0x30	; 48
    5e32:	90 e0       	ldi	r25, 0x00	; 0
    5e34:	80 93 0f 40 	sts	0x400F, r24	; 0x80400f <g_off_air_seconds>
    5e38:	90 93 10 40 	sts	0x4010, r25	; 0x804010 <g_off_air_seconds+0x1>
		}
		break;
    5e3c:	c1 c0       	rjmp	.+386    	; 0x5fc0 <_Z11setupForFoxP5Fox_t13EventAction_t+0x430>

		case SPRINT_F1:
		{
			if(patternNotSet)
    5e3e:	89 81       	ldd	r24, Y+1	; 0x01
    5e40:	88 23       	and	r24, r24
    5e42:	69 f0       	breq	.+26     	; 0x5e5e <_Z11setupForFoxP5Fox_t13EventAction_t+0x2ce>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "OE");
    5e44:	8f e4       	ldi	r24, 0x4F	; 79
    5e46:	95 e4       	ldi	r25, 0x45	; 69
    5e48:	80 93 6c 47 	sts	0x476C, r24	; 0x80476c <g_messages_text>
    5e4c:	90 93 6d 47 	sts	0x476D, r25	; 0x80476d <g_messages_text+0x1>
    5e50:	10 92 6e 47 	sts	0x476E, r1	; 0x80476e <g_messages_text+0x2>
				patternNotSet = false;
    5e54:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 0;
    5e56:	10 92 98 47 	sts	0x4798, r1	; 0x804798 <g_intra_cycle_delay_time>
    5e5a:	10 92 99 47 	sts	0x4799, r1	; 0x804799 <g_intra_cycle_delay_time+0x1>
			}
		}
		case SPRINT_F2:
		{
			if(patternNotSet)
    5e5e:	89 81       	ldd	r24, Y+1	; 0x01
    5e60:	88 23       	and	r24, r24
    5e62:	79 f0       	breq	.+30     	; 0x5e82 <_Z11setupForFoxP5Fox_t13EventAction_t+0x2f2>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "OI");
    5e64:	8f e4       	ldi	r24, 0x4F	; 79
    5e66:	99 e4       	ldi	r25, 0x49	; 73
    5e68:	80 93 6c 47 	sts	0x476C, r24	; 0x80476c <g_messages_text>
    5e6c:	90 93 6d 47 	sts	0x476D, r25	; 0x80476d <g_messages_text+0x1>
    5e70:	10 92 6e 47 	sts	0x476E, r1	; 0x80476e <g_messages_text+0x2>
				patternNotSet = false;
    5e74:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 12;
    5e76:	8c e0       	ldi	r24, 0x0C	; 12
    5e78:	90 e0       	ldi	r25, 0x00	; 0
    5e7a:	80 93 98 47 	sts	0x4798, r24	; 0x804798 <g_intra_cycle_delay_time>
    5e7e:	90 93 99 47 	sts	0x4799, r25	; 0x804799 <g_intra_cycle_delay_time+0x1>
			}
		}
		case SPRINT_F3:
		{
			if(patternNotSet)
    5e82:	89 81       	ldd	r24, Y+1	; 0x01
    5e84:	88 23       	and	r24, r24
    5e86:	79 f0       	breq	.+30     	; 0x5ea6 <_Z11setupForFoxP5Fox_t13EventAction_t+0x316>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "OS");
    5e88:	8f e4       	ldi	r24, 0x4F	; 79
    5e8a:	93 e5       	ldi	r25, 0x53	; 83
    5e8c:	80 93 6c 47 	sts	0x476C, r24	; 0x80476c <g_messages_text>
    5e90:	90 93 6d 47 	sts	0x476D, r25	; 0x80476d <g_messages_text+0x1>
    5e94:	10 92 6e 47 	sts	0x476E, r1	; 0x80476e <g_messages_text+0x2>
				patternNotSet = false;
    5e98:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 24;
    5e9a:	88 e1       	ldi	r24, 0x18	; 24
    5e9c:	90 e0       	ldi	r25, 0x00	; 0
    5e9e:	80 93 98 47 	sts	0x4798, r24	; 0x804798 <g_intra_cycle_delay_time>
    5ea2:	90 93 99 47 	sts	0x4799, r25	; 0x804799 <g_intra_cycle_delay_time+0x1>
			}
		}
		case SPRINT_F4:
		{
			if(patternNotSet)
    5ea6:	89 81       	ldd	r24, Y+1	; 0x01
    5ea8:	88 23       	and	r24, r24
    5eaa:	79 f0       	breq	.+30     	; 0x5eca <_Z11setupForFoxP5Fox_t13EventAction_t+0x33a>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "OH");
    5eac:	8f e4       	ldi	r24, 0x4F	; 79
    5eae:	98 e4       	ldi	r25, 0x48	; 72
    5eb0:	80 93 6c 47 	sts	0x476C, r24	; 0x80476c <g_messages_text>
    5eb4:	90 93 6d 47 	sts	0x476D, r25	; 0x80476d <g_messages_text+0x1>
    5eb8:	10 92 6e 47 	sts	0x476E, r1	; 0x80476e <g_messages_text+0x2>
				patternNotSet = false;
    5ebc:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 36;
    5ebe:	84 e2       	ldi	r24, 0x24	; 36
    5ec0:	90 e0       	ldi	r25, 0x00	; 0
    5ec2:	80 93 98 47 	sts	0x4798, r24	; 0x804798 <g_intra_cycle_delay_time>
    5ec6:	90 93 99 47 	sts	0x4799, r25	; 0x804799 <g_intra_cycle_delay_time+0x1>
			}
		}
		case SPRINT_F5:
		{
			if(patternNotSet)
    5eca:	89 81       	ldd	r24, Y+1	; 0x01
    5ecc:	88 23       	and	r24, r24
    5ece:	71 f0       	breq	.+28     	; 0x5eec <_Z11setupForFoxP5Fox_t13EventAction_t+0x35c>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "O5");
    5ed0:	8f e4       	ldi	r24, 0x4F	; 79
    5ed2:	95 e3       	ldi	r25, 0x35	; 53
    5ed4:	80 93 6c 47 	sts	0x476C, r24	; 0x80476c <g_messages_text>
    5ed8:	90 93 6d 47 	sts	0x476D, r25	; 0x80476d <g_messages_text+0x1>
    5edc:	10 92 6e 47 	sts	0x476E, r1	; 0x80476e <g_messages_text+0x2>
				g_intra_cycle_delay_time = 48;
    5ee0:	80 e3       	ldi	r24, 0x30	; 48
    5ee2:	90 e0       	ldi	r25, 0x00	; 0
    5ee4:	80 93 98 47 	sts	0x4798, r24	; 0x804798 <g_intra_cycle_delay_time>
    5ee8:	90 93 99 47 	sts	0x4799, r25	; 0x804799 <g_intra_cycle_delay_time+0x1>
			}
			
			bool repeat = true;
    5eec:	81 e0       	ldi	r24, 0x01	; 1
    5eee:	88 87       	std	Y+8, r24	; 0x08
			makeMorse(g_messages_text[PATTERN_TEXT], &repeat, NULL);
    5ef0:	ce 01       	movw	r24, r28
    5ef2:	08 96       	adiw	r24, 0x08	; 8
    5ef4:	40 e0       	ldi	r20, 0x00	; 0
    5ef6:	50 e0       	ldi	r21, 0x00	; 0
    5ef8:	bc 01       	movw	r22, r24
    5efa:	8c e6       	ldi	r24, 0x6C	; 108
    5efc:	97 e4       	ldi	r25, 0x47	; 71
    5efe:	0e 94 09 5c 	call	0xb812	; 0xb812 <_Z9makeMorsePcPbS0_>
			g_pattern_codespeed = 15;
    5f02:	8f e0       	ldi	r24, 0x0F	; 15
    5f04:	80 93 0c 40 	sts	0x400C, r24	; 0x80400c <g_pattern_codespeed>
			g_code_throttle = throttleValue(g_pattern_codespeed);
    5f08:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    5f0c:	0e 94 aa 29 	call	0x5354	; 0x5354 <_Z13throttleValueh>
    5f10:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    5f14:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>

			g_sendID_seconds_countdown = 600;			/* wait 10 minutes send the ID */
    5f18:	88 e5       	ldi	r24, 0x58	; 88
    5f1a:	92 e0       	ldi	r25, 0x02	; 2
    5f1c:	80 93 66 47 	sts	0x4766, r24	; 0x804766 <_ZL26g_sendID_seconds_countdown>
    5f20:	90 93 67 47 	sts	0x4767, r25	; 0x804767 <_ZL26g_sendID_seconds_countdown+0x1>
			g_on_air_seconds = 12;						/* on period is very long */
    5f24:	8c e0       	ldi	r24, 0x0C	; 12
    5f26:	90 e0       	ldi	r25, 0x00	; 0
    5f28:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_on_air_seconds>
    5f2c:	90 93 0e 40 	sts	0x400E, r25	; 0x80400e <g_on_air_seconds+0x1>
			g_off_air_seconds = 48;						/* off period is very short */
    5f30:	80 e3       	ldi	r24, 0x30	; 48
    5f32:	90 e0       	ldi	r25, 0x00	; 0
    5f34:	80 93 0f 40 	sts	0x400F, r24	; 0x80400f <g_off_air_seconds>
    5f38:	90 93 10 40 	sts	0x4010, r25	; 0x804010 <g_off_air_seconds+0x1>
		}
		break;
    5f3c:	41 c0       	rjmp	.+130    	; 0x5fc0 <_Z11setupForFoxP5Fox_t13EventAction_t+0x430>
#endif // SUPPORT_TEMP_AND_VOLTAGE_REPORTING


		case SPECTATOR:
		{
			sprintf(g_messages_text[PATTERN_TEXT], "S");
    5f3e:	83 e5       	ldi	r24, 0x53	; 83
    5f40:	90 e0       	ldi	r25, 0x00	; 0
    5f42:	80 93 6c 47 	sts	0x476C, r24	; 0x80476c <g_messages_text>
    5f46:	90 93 6d 47 	sts	0x476D, r25	; 0x80476d <g_messages_text+0x1>
			patternNotSet = false;
    5f4a:	19 82       	std	Y+1, r1	; 0x01
			g_intra_cycle_delay_time = 0;
    5f4c:	10 92 98 47 	sts	0x4798, r1	; 0x804798 <g_intra_cycle_delay_time>
    5f50:	10 92 99 47 	sts	0x4799, r1	; 0x804799 <g_intra_cycle_delay_time+0x1>
		}
		case BEACON:
		default:
		{
			if(patternNotSet)
    5f54:	89 81       	ldd	r24, Y+1	; 0x01
    5f56:	88 23       	and	r24, r24
    5f58:	41 f0       	breq	.+16     	; 0x5f6a <_Z11setupForFoxP5Fox_t13EventAction_t+0x3da>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "MO");
    5f5a:	8d e4       	ldi	r24, 0x4D	; 77
    5f5c:	9f e4       	ldi	r25, 0x4F	; 79
    5f5e:	80 93 6c 47 	sts	0x476C, r24	; 0x80476c <g_messages_text>
    5f62:	90 93 6d 47 	sts	0x476D, r25	; 0x80476d <g_messages_text+0x1>
    5f66:	10 92 6e 47 	sts	0x476E, r1	; 0x80476e <g_messages_text+0x2>
			}
			
			g_intra_cycle_delay_time = 0;
    5f6a:	10 92 98 47 	sts	0x4798, r1	; 0x804798 <g_intra_cycle_delay_time>
    5f6e:	10 92 99 47 	sts	0x4799, r1	; 0x804799 <g_intra_cycle_delay_time+0x1>
			bool repeat = true;
    5f72:	81 e0       	ldi	r24, 0x01	; 1
    5f74:	89 87       	std	Y+9, r24	; 0x09
			makeMorse(g_messages_text[PATTERN_TEXT], &repeat, NULL);
    5f76:	ce 01       	movw	r24, r28
    5f78:	09 96       	adiw	r24, 0x09	; 9
    5f7a:	40 e0       	ldi	r20, 0x00	; 0
    5f7c:	50 e0       	ldi	r21, 0x00	; 0
    5f7e:	bc 01       	movw	r22, r24
    5f80:	8c e6       	ldi	r24, 0x6C	; 108
    5f82:	97 e4       	ldi	r25, 0x47	; 71
    5f84:	0e 94 09 5c 	call	0xb812	; 0xb812 <_Z9makeMorsePcPbS0_>
			g_pattern_codespeed = 8;
    5f88:	88 e0       	ldi	r24, 0x08	; 8
    5f8a:	80 93 0c 40 	sts	0x400C, r24	; 0x80400c <g_pattern_codespeed>
			g_code_throttle = throttleValue(g_pattern_codespeed);
    5f8e:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    5f92:	0e 94 aa 29 	call	0x5354	; 0x5354 <_Z13throttleValueh>
    5f96:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    5f9a:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>

			g_sendID_seconds_countdown = 600;			/* wait 10 minutes send the ID */
    5f9e:	88 e5       	ldi	r24, 0x58	; 88
    5fa0:	92 e0       	ldi	r25, 0x02	; 2
    5fa2:	80 93 66 47 	sts	0x4766, r24	; 0x804766 <_ZL26g_sendID_seconds_countdown>
    5fa6:	90 93 67 47 	sts	0x4767, r25	; 0x804767 <_ZL26g_sendID_seconds_countdown+0x1>
			g_on_air_seconds = 60;						/* on period is very long */
    5faa:	8c e3       	ldi	r24, 0x3C	; 60
    5fac:	90 e0       	ldi	r25, 0x00	; 0
    5fae:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_on_air_seconds>
    5fb2:	90 93 0e 40 	sts	0x400E, r25	; 0x80400e <g_on_air_seconds+0x1>
			g_off_air_seconds = 0;						/* off period is very short */
    5fb6:	10 92 0f 40 	sts	0x400F, r1	; 0x80400f <g_off_air_seconds>
    5fba:	10 92 10 40 	sts	0x4010, r1	; 0x804010 <g_off_air_seconds+0x1>
		}
		break;
    5fbe:	00 00       	nop
	}

	if(action == START_NOTHING)
    5fc0:	88 89       	ldd	r24, Y+16	; 0x10
    5fc2:	88 23       	and	r24, r24
    5fc4:	a1 f4       	brne	.+40     	; 0x5fee <_Z11setupForFoxP5Fox_t13EventAction_t+0x45e>
	{
		g_event_commenced = false;                   /* get things running immediately */
    5fc6:	10 92 a3 47 	sts	0x47A3, r1	; 0x8047a3 <g_event_commenced>
		g_event_enabled = false;                     /* get things running immediately */
    5fca:	10 92 a2 47 	sts	0x47A2, r1	; 0x8047a2 <g_event_enabled>

 		g_use_rtc_for_startstop = false;
    5fce:	10 92 c3 47 	sts	0x47C3, r1	; 0x8047c3 <g_use_rtc_for_startstop>
 		g_event_enabled = false;
    5fd2:	10 92 a2 47 	sts	0x47A2, r1	; 0x8047a2 <g_event_enabled>
		keyTransmitter(OFF);
    5fd6:	80 e0       	ldi	r24, 0x00	; 0
    5fd8:	0e 94 bc 6f 	call	0xdf78	; 0xdf78 <_Z14keyTransmitterb>
		LEDS.setRed(OFF);
    5fdc:	60 e0       	ldi	r22, 0x00	; 0
    5fde:	88 eb       	ldi	r24, 0xB8	; 184
    5fe0:	97 e4       	ldi	r25, 0x47	; 71
    5fe2:	0e 94 8f 54 	call	0xa91e	; 0xa91e <_ZN4leds6setRedEb>
		powerToTransmitter(OFF);
    5fe6:	80 e0       	ldi	r24, 0x00	; 0
    5fe8:	0e 94 ab 6f 	call	0xdf56	; 0xdf56 <_Z18powerToTransmitterb>
// 
// 	digitalWrite(PIN_CW_KEY_LOGIC, OFF);    /* TX key line */
// 	g_sendAMmodulation = false;
// 	g_LED_enunciating = false;
// 	g_config_error = NULL_CONFIG;           /* Trigger a new configuration enunciation */
}
    5fec:	b1 c0       	rjmp	.+354    	; 0x6150 <_Z11setupForFoxP5Fox_t13EventAction_t+0x5c0>
 		g_event_enabled = false;
		keyTransmitter(OFF);
		LEDS.setRed(OFF);
		powerToTransmitter(OFF);
	}
	else if(action == START_EVENT_NOW)
    5fee:	88 89       	ldd	r24, Y+16	; 0x10
    5ff0:	81 30       	cpi	r24, 0x01	; 1
    5ff2:	09 f0       	breq	.+2      	; 0x5ff6 <_Z11setupForFoxP5Fox_t13EventAction_t+0x466>
    5ff4:	74 c0       	rjmp	.+232    	; 0x60de <_Z11setupForFoxP5Fox_t13EventAction_t+0x54e>
//  		g_event_enabled = true;
// 		g_event_commenced = true;					/* get things running immediately */
// 		g_event_enabled = true;						/* get things running immediately */

		EC result;
		set_system_time(ds3231_get_epoch(&result));
    5ff6:	ce 01       	movw	r24, r28
    5ff8:	0a 96       	adiw	r24, 0x0a	; 10
    5ffa:	0e 94 c2 40 	call	0x8184	; 0x8184 <ds3231_get_epoch>
    5ffe:	dc 01       	movw	r26, r24
    6000:	cb 01       	movw	r24, r22
    6002:	bc 01       	movw	r22, r24
    6004:	cd 01       	movw	r24, r26
    6006:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <set_system_time>
		time_t now = time(null);
    600a:	80 e0       	ldi	r24, 0x00	; 0
    600c:	90 e0       	ldi	r25, 0x00	; 0
    600e:	0e 94 56 06 	call	0xcac	; 0xcac <time>
    6012:	dc 01       	movw	r26, r24
    6014:	cb 01       	movw	r24, r22
    6016:	8a 83       	std	Y+2, r24	; 0x02
    6018:	9b 83       	std	Y+3, r25	; 0x03
    601a:	ac 83       	std	Y+4, r26	; 0x04
    601c:	bd 83       	std	Y+5, r27	; 0x05
		
		if(result == ERROR_CODE_NO_ERROR)
    601e:	8a 85       	ldd	r24, Y+10	; 0x0a
    6020:	88 23       	and	r24, r24
    6022:	c9 f5       	brne	.+114    	; 0x6096 <_Z11setupForFoxP5Fox_t13EventAction_t+0x506>
		{
			g_event_start_epoch = now;
    6024:	8a 81       	ldd	r24, Y+2	; 0x02
    6026:	9b 81       	ldd	r25, Y+3	; 0x03
    6028:	ac 81       	ldd	r26, Y+4	; 0x04
    602a:	bd 81       	ldd	r27, Y+5	; 0x05
    602c:	80 93 9a 47 	sts	0x479A, r24	; 0x80479a <g_event_start_epoch>
    6030:	90 93 9b 47 	sts	0x479B, r25	; 0x80479b <g_event_start_epoch+0x1>
    6034:	a0 93 9c 47 	sts	0x479C, r26	; 0x80479c <g_event_start_epoch+0x2>
    6038:	b0 93 9d 47 	sts	0x479D, r27	; 0x80479d <g_event_start_epoch+0x3>
			if(g_event_start_epoch > g_event_finish_epoch)
    603c:	20 91 9a 47 	lds	r18, 0x479A	; 0x80479a <g_event_start_epoch>
    6040:	30 91 9b 47 	lds	r19, 0x479B	; 0x80479b <g_event_start_epoch+0x1>
    6044:	40 91 9c 47 	lds	r20, 0x479C	; 0x80479c <g_event_start_epoch+0x2>
    6048:	50 91 9d 47 	lds	r21, 0x479D	; 0x80479d <g_event_start_epoch+0x3>
    604c:	80 91 9e 47 	lds	r24, 0x479E	; 0x80479e <g_event_finish_epoch>
    6050:	90 91 9f 47 	lds	r25, 0x479F	; 0x80479f <g_event_finish_epoch+0x1>
    6054:	a0 91 a0 47 	lds	r26, 0x47A0	; 0x8047a0 <g_event_finish_epoch+0x2>
    6058:	b0 91 a1 47 	lds	r27, 0x47A1	; 0x8047a1 <g_event_finish_epoch+0x3>
    605c:	61 e0       	ldi	r22, 0x01	; 1
    605e:	82 17       	cp	r24, r18
    6060:	93 07       	cpc	r25, r19
    6062:	a4 07       	cpc	r26, r20
    6064:	b5 07       	cpc	r27, r21
    6066:	08 f0       	brcs	.+2      	; 0x606a <_Z11setupForFoxP5Fox_t13EventAction_t+0x4da>
    6068:	60 e0       	ldi	r22, 0x00	; 0
    606a:	66 23       	and	r22, r22
    606c:	a1 f0       	breq	.+40     	; 0x6096 <_Z11setupForFoxP5Fox_t13EventAction_t+0x506>
			{
				g_event_finish_epoch = g_event_start_epoch + DAY;
    606e:	80 91 9a 47 	lds	r24, 0x479A	; 0x80479a <g_event_start_epoch>
    6072:	90 91 9b 47 	lds	r25, 0x479B	; 0x80479b <g_event_start_epoch+0x1>
    6076:	a0 91 9c 47 	lds	r26, 0x479C	; 0x80479c <g_event_start_epoch+0x2>
    607a:	b0 91 9d 47 	lds	r27, 0x479D	; 0x80479d <g_event_start_epoch+0x3>
    607e:	80 58       	subi	r24, 0x80	; 128
    6080:	9e 4a       	sbci	r25, 0xAE	; 174
    6082:	ae 4f       	sbci	r26, 0xFE	; 254
    6084:	bf 4f       	sbci	r27, 0xFF	; 255
    6086:	80 93 9e 47 	sts	0x479E, r24	; 0x80479e <g_event_finish_epoch>
    608a:	90 93 9f 47 	sts	0x479F, r25	; 0x80479f <g_event_finish_epoch+0x1>
    608e:	a0 93 a0 47 	sts	0x47A0, r26	; 0x8047a0 <g_event_finish_epoch+0x2>
    6092:	b0 93 a1 47 	sts	0x47A1, r27	; 0x8047a1 <g_event_finish_epoch+0x3>
			}
		}
		
		SC status = STATUS_CODE_IDLE;
    6096:	1b 86       	std	Y+11, r1	; 0x0b
		result = launchEvent(&status);
    6098:	ce 01       	movw	r24, r28
    609a:	0b 96       	adiw	r24, 0x0b	; 11
    609c:	0e 94 04 2a 	call	0x5408	; 0x5408 <_Z11launchEventP2SC>
    60a0:	8a 87       	std	Y+10, r24	; 0x0a
		
		if(g_go_to_sleep_now && g_sleepType)
    60a2:	80 91 a6 47 	lds	r24, 0x47A6	; 0x8047a6 <_ZL17g_go_to_sleep_now>
    60a6:	88 23       	and	r24, r24
    60a8:	31 f0       	breq	.+12     	; 0x60b6 <_Z11setupForFoxP5Fox_t13EventAction_t+0x526>
    60aa:	80 91 6b 47 	lds	r24, 0x476B	; 0x80476b <_ZL11g_sleepType>
    60ae:	88 23       	and	r24, r24
    60b0:	11 f0       	breq	.+4      	; 0x60b6 <_Z11setupForFoxP5Fox_t13EventAction_t+0x526>
    60b2:	81 e0       	ldi	r24, 0x01	; 1
    60b4:	01 c0       	rjmp	.+2      	; 0x60b8 <_Z11setupForFoxP5Fox_t13EventAction_t+0x528>
    60b6:	80 e0       	ldi	r24, 0x00	; 0
    60b8:	88 23       	and	r24, r24
    60ba:	29 f0       	breq	.+10     	; 0x60c6 <_Z11setupForFoxP5Fox_t13EventAction_t+0x536>
		{
			g_sleepType = SLEEP_AFTER_WIFI_GOES_OFF;
    60bc:	83 e0       	ldi	r24, 0x03	; 3
    60be:	80 93 6b 47 	sts	0x476B, r24	; 0x80476b <_ZL11g_sleepType>
			g_go_to_sleep_now = false;
    60c2:	10 92 a6 47 	sts	0x47A6, r1	; 0x8047a6 <_ZL17g_go_to_sleep_now>
		}

		g_WiFi_shutdown_seconds = 60;
    60c6:	8c e3       	ldi	r24, 0x3C	; 60
    60c8:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>

		if(!result)
    60cc:	8a 85       	ldd	r24, Y+10	; 0x0a
    60ce:	88 23       	and	r24, r24
    60d0:	09 f0       	breq	.+2      	; 0x60d4 <_Z11setupForFoxP5Fox_t13EventAction_t+0x544>
    60d2:	3e c0       	rjmp	.+124    	; 0x6150 <_Z11setupForFoxP5Fox_t13EventAction_t+0x5c0>
		{
			g_ee_mgr.saveAllEEPROM();
    60d4:	89 eb       	ldi	r24, 0xB9	; 185
    60d6:	97 e4       	ldi	r25, 0x47	; 71
    60d8:	0e 94 29 48 	call	0x9052	; 0x9052 <_ZN13EepromManager13saveAllEEPROMEv>
// 
// 	digitalWrite(PIN_CW_KEY_LOGIC, OFF);    /* TX key line */
// 	g_sendAMmodulation = false;
// 	g_LED_enunciating = false;
// 	g_config_error = NULL_CONFIG;           /* Trigger a new configuration enunciation */
}
    60dc:	39 c0       	rjmp	.+114    	; 0x6150 <_Z11setupForFoxP5Fox_t13EventAction_t+0x5c0>
		if(!result)
		{
			g_ee_mgr.saveAllEEPROM();
		}
	}
	else if(action == START_TRANSMISSIONS_NOW)                                  /* Immediately start transmitting, regardless RTC or time slot */
    60de:	88 89       	ldd	r24, Y+16	; 0x10
    60e0:	82 30       	cpi	r24, 0x02	; 2
    60e2:	91 f5       	brne	.+100    	; 0x6148 <_Z11setupForFoxP5Fox_t13EventAction_t+0x5b8>
	{
		bool repeat = true;
    60e4:	81 e0       	ldi	r24, 0x01	; 1
    60e6:	8c 87       	std	Y+12, r24	; 0x0c
		makeMorse(g_messages_text[PATTERN_TEXT], &repeat, NULL);
    60e8:	ce 01       	movw	r24, r28
    60ea:	0c 96       	adiw	r24, 0x0c	; 12
    60ec:	40 e0       	ldi	r20, 0x00	; 0
    60ee:	50 e0       	ldi	r21, 0x00	; 0
    60f0:	bc 01       	movw	r22, r24
    60f2:	8c e6       	ldi	r24, 0x6C	; 108
    60f4:	97 e4       	ldi	r25, 0x47	; 71
    60f6:	0e 94 09 5c 	call	0xb812	; 0xb812 <_Z9makeMorsePcPbS0_>
		g_code_throttle = throttleValue(g_pattern_codespeed);
    60fa:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    60fe:	0e 94 aa 29 	call	0x5354	; 0x5354 <_Z13throttleValueh>
    6102:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    6106:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>

// 		g_event_start_epoch = 1;                     /* have it start a long time ago */
// 		g_event_finish_epoch = MAX_TIME;             /* run for a long long time */
		g_on_the_air = g_on_air_seconds;			/* start out transmitting */
    610a:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    610e:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    6112:	09 2e       	mov	r0, r25
    6114:	00 0c       	add	r0, r0
    6116:	aa 0b       	sbc	r26, r26
    6118:	bb 0b       	sbc	r27, r27
    611a:	80 93 62 47 	sts	0x4762, r24	; 0x804762 <_ZL12g_on_the_air>
    611e:	90 93 63 47 	sts	0x4763, r25	; 0x804763 <_ZL12g_on_the_air+0x1>
    6122:	a0 93 64 47 	sts	0x4764, r26	; 0x804764 <_ZL12g_on_the_air+0x2>
    6126:	b0 93 65 47 	sts	0x4765, r27	; 0x804765 <_ZL12g_on_the_air+0x3>
		g_event_commenced = true;                   /* get things running immediately */
    612a:	81 e0       	ldi	r24, 0x01	; 1
    612c:	80 93 a3 47 	sts	0x47A3, r24	; 0x8047a3 <g_event_commenced>
		g_event_enabled = true;                     /* get things running immediately */
    6130:	81 e0       	ldi	r24, 0x01	; 1
    6132:	80 93 a2 47 	sts	0x47A2, r24	; 0x8047a2 <g_event_enabled>
		g_last_status_code = STATUS_CODE_EVENT_STARTED_NOW_TRANSMITTING;
    6136:	8d ef       	ldi	r24, 0xFD	; 253
    6138:	80 93 5a 47 	sts	0x475A, r24	; 0x80475a <_ZL18g_last_status_code>
		
// 		g_seconds_since_sync = (g_fox_counter - 1) * g_on_air_interval_seconds; /* Total elapsed time since start of event */
 		g_use_rtc_for_startstop = false;
    613c:	10 92 c3 47 	sts	0x47C3, r1	; 0x8047c3 <g_use_rtc_for_startstop>
 		g_event_enabled = true;
    6140:	81 e0       	ldi	r24, 0x01	; 1
    6142:	80 93 a2 47 	sts	0x47A2, r24	; 0x8047a2 <g_event_enabled>
// 
// 	digitalWrite(PIN_CW_KEY_LOGIC, OFF);    /* TX key line */
// 	g_sendAMmodulation = false;
// 	g_LED_enunciating = false;
// 	g_config_error = NULL_CONFIG;           /* Trigger a new configuration enunciation */
}
    6146:	04 c0       	rjmp	.+8      	; 0x6150 <_Z11setupForFoxP5Fox_t13EventAction_t+0x5c0>
	}
	else         /* if(action == START_EVENT_WITH_STARTFINISH_TIMES) */
	{
		SC sc;
 //		EC ec = 
		launchEvent(&sc);
    6148:	ce 01       	movw	r24, r28
    614a:	0d 96       	adiw	r24, 0x0d	; 13
    614c:	0e 94 04 2a 	call	0x5408	; 0x5408 <_Z11launchEventP2SC>
// 
// 	digitalWrite(PIN_CW_KEY_LOGIC, OFF);    /* TX key line */
// 	g_sendAMmodulation = false;
// 	g_LED_enunciating = false;
// 	g_config_error = NULL_CONFIG;           /* Trigger a new configuration enunciation */
}
    6150:	00 00       	nop
    6152:	60 96       	adiw	r28, 0x10	; 16
    6154:	cd bf       	out	0x3d, r28	; 61
    6156:	de bf       	out	0x3e, r29	; 62
    6158:	df 91       	pop	r29
    615a:	cf 91       	pop	r28
    615c:	08 95       	ret

0000615e <_Z18validateTimeStringPcPma>:

time_t validateTimeString(char* str, time_t* epochVar, int8_t offsetHours)
{
    615e:	cf 93       	push	r28
    6160:	df 93       	push	r29
    6162:	cd b7       	in	r28, 0x3d	; 61
    6164:	de b7       	in	r29, 0x3e	; 62
    6166:	a8 97       	sbiw	r28, 0x28	; 40
    6168:	cd bf       	out	0x3d, r28	; 61
    616a:	de bf       	out	0x3e, r29	; 62
    616c:	8c a3       	std	Y+36, r24	; 0x24
    616e:	9d a3       	std	Y+37, r25	; 0x25
    6170:	6e a3       	std	Y+38, r22	; 0x26
    6172:	7f a3       	std	Y+39, r23	; 0x27
    6174:	48 a7       	std	Y+40, r20	; 0x28
	time_t valid = 0;
    6176:	19 82       	std	Y+1, r1	; 0x01
    6178:	1a 82       	std	Y+2, r1	; 0x02
    617a:	1b 82       	std	Y+3, r1	; 0x03
    617c:	1c 82       	std	Y+4, r1	; 0x04
	int len = strlen(str);
    617e:	8c a1       	ldd	r24, Y+36	; 0x24
    6180:	9d a1       	ldd	r25, Y+37	; 0x25
    6182:	0e 94 13 7c 	call	0xf826	; 0xf826 <strlen>
    6186:	8d 83       	std	Y+5, r24	; 0x05
    6188:	9e 83       	std	Y+6, r25	; 0x06
	time_t minimumEpoch = MINIMUM_EPOCH;
    618a:	80 e0       	ldi	r24, 0x00	; 0
    618c:	96 e6       	ldi	r25, 0x66	; 102
    618e:	ae ee       	ldi	r26, 0xEE	; 238
    6190:	bf e5       	ldi	r27, 0x5F	; 95
    6192:	8f 83       	std	Y+7, r24	; 0x07
    6194:	98 87       	std	Y+8, r25	; 0x08
    6196:	a9 87       	std	Y+9, r26	; 0x09
    6198:	ba 87       	std	Y+10, r27	; 0x0a
	uint8_t validationType = 0;
    619a:	1b 86       	std	Y+11, r1	; 0x0b
	time_t now = time(null);
    619c:	80 e0       	ldi	r24, 0x00	; 0
    619e:	90 e0       	ldi	r25, 0x00	; 0
    61a0:	0e 94 56 06 	call	0xcac	; 0xcac <time>
    61a4:	dc 01       	movw	r26, r24
    61a6:	cb 01       	movw	r24, r22
    61a8:	8c 87       	std	Y+12, r24	; 0x0c
    61aa:	9d 87       	std	Y+13, r25	; 0x0d
    61ac:	ae 87       	std	Y+14, r26	; 0x0e
    61ae:	bf 87       	std	Y+15, r27	; 0x0f

	if(epochVar == &g_event_start_epoch)
    61b0:	8e a1       	ldd	r24, Y+38	; 0x26
    61b2:	9f a1       	ldd	r25, Y+39	; 0x27
    61b4:	8a 59       	subi	r24, 0x9A	; 154
    61b6:	97 44       	sbci	r25, 0x47	; 71
    61b8:	69 f5       	brne	.+90     	; 0x6214 <_Z18validateTimeStringPcPma+0xb6>
	{
		minimumEpoch = MAX(now, MINIMUM_EPOCH);
    61ba:	8c 85       	ldd	r24, Y+12	; 0x0c
    61bc:	9d 85       	ldd	r25, Y+13	; 0x0d
    61be:	ae 85       	ldd	r26, Y+14	; 0x0e
    61c0:	bf 85       	ldd	r27, Y+15	; 0x0f
    61c2:	88 8b       	std	Y+16, r24	; 0x10
    61c4:	99 8b       	std	Y+17, r25	; 0x11
    61c6:	aa 8b       	std	Y+18, r26	; 0x12
    61c8:	bb 8b       	std	Y+19, r27	; 0x13
    61ca:	80 e0       	ldi	r24, 0x00	; 0
    61cc:	96 e6       	ldi	r25, 0x66	; 102
    61ce:	ae ee       	ldi	r26, 0xEE	; 238
    61d0:	bf e5       	ldi	r27, 0x5F	; 95
    61d2:	8c 8b       	std	Y+20, r24	; 0x14
    61d4:	9d 8b       	std	Y+21, r25	; 0x15
    61d6:	ae 8b       	std	Y+22, r26	; 0x16
    61d8:	bf 8b       	std	Y+23, r27	; 0x17
    61da:	28 89       	ldd	r18, Y+16	; 0x10
    61dc:	39 89       	ldd	r19, Y+17	; 0x11
    61de:	4a 89       	ldd	r20, Y+18	; 0x12
    61e0:	5b 89       	ldd	r21, Y+19	; 0x13
    61e2:	8c 89       	ldd	r24, Y+20	; 0x14
    61e4:	9d 89       	ldd	r25, Y+21	; 0x15
    61e6:	ae 89       	ldd	r26, Y+22	; 0x16
    61e8:	bf 89       	ldd	r27, Y+23	; 0x17
    61ea:	28 17       	cp	r18, r24
    61ec:	39 07       	cpc	r19, r25
    61ee:	4a 07       	cpc	r20, r26
    61f0:	5b 07       	cpc	r21, r27
    61f2:	28 f4       	brcc	.+10     	; 0x61fe <_Z18validateTimeStringPcPma+0xa0>
    61f4:	8c 89       	ldd	r24, Y+20	; 0x14
    61f6:	9d 89       	ldd	r25, Y+21	; 0x15
    61f8:	ae 89       	ldd	r26, Y+22	; 0x16
    61fa:	bf 89       	ldd	r27, Y+23	; 0x17
    61fc:	04 c0       	rjmp	.+8      	; 0x6206 <_Z18validateTimeStringPcPma+0xa8>
    61fe:	88 89       	ldd	r24, Y+16	; 0x10
    6200:	99 89       	ldd	r25, Y+17	; 0x11
    6202:	aa 89       	ldd	r26, Y+18	; 0x12
    6204:	bb 89       	ldd	r27, Y+19	; 0x13
    6206:	8f 83       	std	Y+7, r24	; 0x07
    6208:	98 87       	std	Y+8, r25	; 0x08
    620a:	a9 87       	std	Y+9, r26	; 0x09
    620c:	ba 87       	std	Y+10, r27	; 0x0a
		validationType = 1;
    620e:	81 e0       	ldi	r24, 0x01	; 1
    6210:	8b 87       	std	Y+11, r24	; 0x0b
    6212:	35 c0       	rjmp	.+106    	; 0x627e <_Z18validateTimeStringPcPma+0x120>
	}
	else if(epochVar == &g_event_finish_epoch)
    6214:	8e a1       	ldd	r24, Y+38	; 0x26
    6216:	9f a1       	ldd	r25, Y+39	; 0x27
    6218:	8e 59       	subi	r24, 0x9E	; 158
    621a:	97 44       	sbci	r25, 0x47	; 71
    621c:	81 f5       	brne	.+96     	; 0x627e <_Z18validateTimeStringPcPma+0x120>
	{
		minimumEpoch = MAX(g_event_start_epoch, now);
    621e:	80 91 9a 47 	lds	r24, 0x479A	; 0x80479a <g_event_start_epoch>
    6222:	90 91 9b 47 	lds	r25, 0x479B	; 0x80479b <g_event_start_epoch+0x1>
    6226:	a0 91 9c 47 	lds	r26, 0x479C	; 0x80479c <g_event_start_epoch+0x2>
    622a:	b0 91 9d 47 	lds	r27, 0x479D	; 0x80479d <g_event_start_epoch+0x3>
    622e:	8c 8f       	std	Y+28, r24	; 0x1c
    6230:	9d 8f       	std	Y+29, r25	; 0x1d
    6232:	ae 8f       	std	Y+30, r26	; 0x1e
    6234:	bf 8f       	std	Y+31, r27	; 0x1f
    6236:	8c 85       	ldd	r24, Y+12	; 0x0c
    6238:	9d 85       	ldd	r25, Y+13	; 0x0d
    623a:	ae 85       	ldd	r26, Y+14	; 0x0e
    623c:	bf 85       	ldd	r27, Y+15	; 0x0f
    623e:	88 a3       	std	Y+32, r24	; 0x20
    6240:	99 a3       	std	Y+33, r25	; 0x21
    6242:	aa a3       	std	Y+34, r26	; 0x22
    6244:	bb a3       	std	Y+35, r27	; 0x23
    6246:	2c 8d       	ldd	r18, Y+28	; 0x1c
    6248:	3d 8d       	ldd	r19, Y+29	; 0x1d
    624a:	4e 8d       	ldd	r20, Y+30	; 0x1e
    624c:	5f 8d       	ldd	r21, Y+31	; 0x1f
    624e:	88 a1       	ldd	r24, Y+32	; 0x20
    6250:	99 a1       	ldd	r25, Y+33	; 0x21
    6252:	aa a1       	ldd	r26, Y+34	; 0x22
    6254:	bb a1       	ldd	r27, Y+35	; 0x23
    6256:	28 17       	cp	r18, r24
    6258:	39 07       	cpc	r19, r25
    625a:	4a 07       	cpc	r20, r26
    625c:	5b 07       	cpc	r21, r27
    625e:	28 f4       	brcc	.+10     	; 0x626a <_Z18validateTimeStringPcPma+0x10c>
    6260:	88 a1       	ldd	r24, Y+32	; 0x20
    6262:	99 a1       	ldd	r25, Y+33	; 0x21
    6264:	aa a1       	ldd	r26, Y+34	; 0x22
    6266:	bb a1       	ldd	r27, Y+35	; 0x23
    6268:	04 c0       	rjmp	.+8      	; 0x6272 <_Z18validateTimeStringPcPma+0x114>
    626a:	8c 8d       	ldd	r24, Y+28	; 0x1c
    626c:	9d 8d       	ldd	r25, Y+29	; 0x1d
    626e:	ae 8d       	ldd	r26, Y+30	; 0x1e
    6270:	bf 8d       	ldd	r27, Y+31	; 0x1f
    6272:	8f 83       	std	Y+7, r24	; 0x07
    6274:	98 87       	std	Y+8, r25	; 0x08
    6276:	a9 87       	std	Y+9, r26	; 0x09
    6278:	ba 87       	std	Y+10, r27	; 0x0a
		validationType = 2;
    627a:	82 e0       	ldi	r24, 0x02	; 2
    627c:	8b 87       	std	Y+11, r24	; 0x0b
	}
	
	if(len == 10)
    627e:	8d 81       	ldd	r24, Y+5	; 0x05
    6280:	9e 81       	ldd	r25, Y+6	; 0x06
    6282:	0a 97       	sbiw	r24, 0x0a	; 10
    6284:	a9 f4       	brne	.+42     	; 0x62b0 <_Z18validateTimeStringPcPma+0x152>
	{
		str[10] = '0';
    6286:	8c a1       	ldd	r24, Y+36	; 0x24
    6288:	9d a1       	ldd	r25, Y+37	; 0x25
    628a:	0a 96       	adiw	r24, 0x0a	; 10
    628c:	20 e3       	ldi	r18, 0x30	; 48
    628e:	fc 01       	movw	r30, r24
    6290:	20 83       	st	Z, r18
		str[11] = '0';
    6292:	8c a1       	ldd	r24, Y+36	; 0x24
    6294:	9d a1       	ldd	r25, Y+37	; 0x25
    6296:	0b 96       	adiw	r24, 0x0b	; 11
    6298:	20 e3       	ldi	r18, 0x30	; 48
    629a:	fc 01       	movw	r30, r24
    629c:	20 83       	st	Z, r18
		str[12] = '\0';
    629e:	8c a1       	ldd	r24, Y+36	; 0x24
    62a0:	9d a1       	ldd	r25, Y+37	; 0x25
    62a2:	0c 96       	adiw	r24, 0x0c	; 12
    62a4:	fc 01       	movw	r30, r24
    62a6:	10 82       	st	Z, r1
		len = 12;
    62a8:	8c e0       	ldi	r24, 0x0C	; 12
    62aa:	90 e0       	ldi	r25, 0x00	; 0
    62ac:	8d 83       	std	Y+5, r24	; 0x05
    62ae:	9e 83       	std	Y+6, r25	; 0x06
	}

	if((len == 12) && (only_digits(str)))
    62b0:	8d 81       	ldd	r24, Y+5	; 0x05
    62b2:	9e 81       	ldd	r25, Y+6	; 0x06
    62b4:	0c 97       	sbiw	r24, 0x0c	; 12
    62b6:	41 f4       	brne	.+16     	; 0x62c8 <_Z18validateTimeStringPcPma+0x16a>
    62b8:	8c a1       	ldd	r24, Y+36	; 0x24
    62ba:	9d a1       	ldd	r25, Y+37	; 0x25
    62bc:	0e 94 ca 73 	call	0xe794	; 0xe794 <_Z11only_digitsPc>
    62c0:	88 23       	and	r24, r24
    62c2:	11 f0       	breq	.+4      	; 0x62c8 <_Z18validateTimeStringPcPma+0x16a>
    62c4:	81 e0       	ldi	r24, 0x01	; 1
    62c6:	01 c0       	rjmp	.+2      	; 0x62ca <_Z18validateTimeStringPcPma+0x16c>
    62c8:	80 e0       	ldi	r24, 0x00	; 0
    62ca:	88 23       	and	r24, r24
    62cc:	09 f4       	brne	.+2      	; 0x62d0 <_Z18validateTimeStringPcPma+0x172>
    62ce:	69 c0       	rjmp	.+210    	; 0x63a2 <_Z18validateTimeStringPcPma+0x244>
	{
		time_t ep = RTC_String2Epoch(NULL, str);    /* String format "YYMMDDhhmmss" */
    62d0:	8c a1       	ldd	r24, Y+36	; 0x24
    62d2:	9d a1       	ldd	r25, Y+37	; 0x25
    62d4:	bc 01       	movw	r22, r24
    62d6:	80 e0       	ldi	r24, 0x00	; 0
    62d8:	90 e0       	ldi	r25, 0x00	; 0
    62da:	0e 94 10 3f 	call	0x7e20	; 0x7e20 <RTC_String2Epoch>
    62de:	dc 01       	movw	r26, r24
    62e0:	cb 01       	movw	r24, r22
    62e2:	88 8f       	std	Y+24, r24	; 0x18
    62e4:	99 8f       	std	Y+25, r25	; 0x19
    62e6:	aa 8f       	std	Y+26, r26	; 0x1a
    62e8:	bb 8f       	std	Y+27, r27	; 0x1b

		ep += (HOUR * offsetHours);
    62ea:	88 a5       	ldd	r24, Y+40	; 0x28
    62ec:	28 2f       	mov	r18, r24
    62ee:	88 0f       	add	r24, r24
    62f0:	33 0b       	sbc	r19, r19
    62f2:	44 0b       	sbc	r20, r20
    62f4:	55 0b       	sbc	r21, r21
    62f6:	80 e1       	ldi	r24, 0x10	; 16
    62f8:	9e e0       	ldi	r25, 0x0E	; 14
    62fa:	dc 01       	movw	r26, r24
    62fc:	0e 94 49 7a 	call	0xf492	; 0xf492 <__muluhisi3>
    6300:	9b 01       	movw	r18, r22
    6302:	ac 01       	movw	r20, r24
    6304:	88 8d       	ldd	r24, Y+24	; 0x18
    6306:	99 8d       	ldd	r25, Y+25	; 0x19
    6308:	aa 8d       	ldd	r26, Y+26	; 0x1a
    630a:	bb 8d       	ldd	r27, Y+27	; 0x1b
    630c:	82 0f       	add	r24, r18
    630e:	93 1f       	adc	r25, r19
    6310:	a4 1f       	adc	r26, r20
    6312:	b5 1f       	adc	r27, r21
    6314:	88 8f       	std	Y+24, r24	; 0x18
    6316:	99 8f       	std	Y+25, r25	; 0x19
    6318:	aa 8f       	std	Y+26, r26	; 0x1a
    631a:	bb 8f       	std	Y+27, r27	; 0x1b

		if(ep > minimumEpoch)
    631c:	28 8d       	ldd	r18, Y+24	; 0x18
    631e:	39 8d       	ldd	r19, Y+25	; 0x19
    6320:	4a 8d       	ldd	r20, Y+26	; 0x1a
    6322:	5b 8d       	ldd	r21, Y+27	; 0x1b
    6324:	8f 81       	ldd	r24, Y+7	; 0x07
    6326:	98 85       	ldd	r25, Y+8	; 0x08
    6328:	a9 85       	ldd	r26, Y+9	; 0x09
    632a:	ba 85       	ldd	r27, Y+10	; 0x0a
    632c:	82 17       	cp	r24, r18
    632e:	93 07       	cpc	r25, r19
    6330:	a4 07       	cpc	r26, r20
    6332:	b5 07       	cpc	r27, r21
    6334:	48 f4       	brcc	.+18     	; 0x6348 <_Z18validateTimeStringPcPma+0x1ea>
		{
			valid = ep;
    6336:	88 8d       	ldd	r24, Y+24	; 0x18
    6338:	99 8d       	ldd	r25, Y+25	; 0x19
    633a:	aa 8d       	ldd	r26, Y+26	; 0x1a
    633c:	bb 8d       	ldd	r27, Y+27	; 0x1b
    633e:	89 83       	std	Y+1, r24	; 0x01
    6340:	9a 83       	std	Y+2, r25	; 0x02
    6342:	ab 83       	std	Y+3, r26	; 0x03
    6344:	bc 83       	std	Y+4, r27	; 0x04
    6346:	35 c0       	rjmp	.+106    	; 0x63b2 <_Z18validateTimeStringPcPma+0x254>
		}
		else
		{
			if(validationType == 1)         /* start time validation */
    6348:	8b 85       	ldd	r24, Y+11	; 0x0b
    634a:	81 30       	cpi	r24, 0x01	; 1
    634c:	29 f4       	brne	.+10     	; 0x6358 <_Z18validateTimeStringPcPma+0x1fa>
			{
				sb_send_string(TEXT_ERR_START_IN_PAST_TXT);
    634e:	83 e1       	ldi	r24, 0x13	; 19
    6350:	93 e4       	ldi	r25, 0x43	; 67
    6352:	0e 94 13 64 	call	0xc826	; 0xc826 <sb_send_string>
    6356:	2d c0       	rjmp	.+90     	; 0x63b2 <_Z18validateTimeStringPcPma+0x254>
			}
			else if(validationType == 2)    /* finish time validation */
    6358:	8b 85       	ldd	r24, Y+11	; 0x0b
    635a:	82 30       	cpi	r24, 0x02	; 2
    635c:	e9 f4       	brne	.+58     	; 0x6398 <_Z18validateTimeStringPcPma+0x23a>
			{
				if(ep < time(null))
    635e:	80 e0       	ldi	r24, 0x00	; 0
    6360:	90 e0       	ldi	r25, 0x00	; 0
    6362:	0e 94 56 06 	call	0xcac	; 0xcac <time>
    6366:	9b 01       	movw	r18, r22
    6368:	ac 01       	movw	r20, r24
    636a:	61 e0       	ldi	r22, 0x01	; 1
    636c:	88 8d       	ldd	r24, Y+24	; 0x18
    636e:	99 8d       	ldd	r25, Y+25	; 0x19
    6370:	aa 8d       	ldd	r26, Y+26	; 0x1a
    6372:	bb 8d       	ldd	r27, Y+27	; 0x1b
    6374:	82 17       	cp	r24, r18
    6376:	93 07       	cpc	r25, r19
    6378:	a4 07       	cpc	r26, r20
    637a:	b5 07       	cpc	r27, r21
    637c:	08 f0       	brcs	.+2      	; 0x6380 <_Z18validateTimeStringPcPma+0x222>
    637e:	60 e0       	ldi	r22, 0x00	; 0
    6380:	66 23       	and	r22, r22
    6382:	29 f0       	breq	.+10     	; 0x638e <_Z18validateTimeStringPcPma+0x230>
				{
					sb_send_string(TEXT_ERR_FINISH_IN_PAST_TXT);
    6384:	88 e2       	ldi	r24, 0x28	; 40
    6386:	93 e4       	ldi	r25, 0x43	; 67
    6388:	0e 94 13 64 	call	0xc826	; 0xc826 <sb_send_string>
    638c:	12 c0       	rjmp	.+36     	; 0x63b2 <_Z18validateTimeStringPcPma+0x254>
				}
				else
				{
					sb_send_string(TEXT_ERR_FINISH_BEFORE_START_TXT);
    638e:	8e e3       	ldi	r24, 0x3E	; 62
    6390:	93 e4       	ldi	r25, 0x43	; 67
    6392:	0e 94 13 64 	call	0xc826	; 0xc826 <sb_send_string>
    6396:	0d c0       	rjmp	.+26     	; 0x63b2 <_Z18validateTimeStringPcPma+0x254>
				}
			}
			else    /* current time validation */
			{
				sb_send_string(TEXT_ERR_TIME_IN_PAST_TXT);
    6398:	89 e5       	ldi	r24, 0x59	; 89
    639a:	93 e4       	ldi	r25, 0x43	; 67
    639c:	0e 94 13 64 	call	0xc826	; 0xc826 <sb_send_string>
    63a0:	08 c0       	rjmp	.+16     	; 0x63b2 <_Z18validateTimeStringPcPma+0x254>
			}
		}
	}
	else if(len)
    63a2:	8d 81       	ldd	r24, Y+5	; 0x05
    63a4:	9e 81       	ldd	r25, Y+6	; 0x06
    63a6:	89 2b       	or	r24, r25
    63a8:	21 f0       	breq	.+8      	; 0x63b2 <_Z18validateTimeStringPcPma+0x254>
	{
		sb_send_string(TEXT_ERR_INVALID_TIME_TXT);
    63aa:	8d e6       	ldi	r24, 0x6D	; 109
    63ac:	93 e4       	ldi	r25, 0x43	; 67
    63ae:	0e 94 13 64 	call	0xc826	; 0xc826 <sb_send_string>
	}

	return(valid);
    63b2:	89 81       	ldd	r24, Y+1	; 0x01
    63b4:	9a 81       	ldd	r25, Y+2	; 0x02
    63b6:	ab 81       	ldd	r26, Y+3	; 0x03
    63b8:	bc 81       	ldd	r27, Y+4	; 0x04
}
    63ba:	bc 01       	movw	r22, r24
    63bc:	cd 01       	movw	r24, r26
    63be:	a8 96       	adiw	r28, 0x28	; 40
    63c0:	cd bf       	out	0x3d, r28	; 61
    63c2:	de bf       	out	0x3e, r29	; 62
    63c4:	df 91       	pop	r29
    63c6:	cf 91       	pop	r28
    63c8:	08 95       	ret

000063ca <_Z14reportTimeTillmmPKcS0_>:


bool reportTimeTill(time_t from, time_t until, const char* prefix, const char* failMsg)
{
    63ca:	ef 92       	push	r14
    63cc:	ff 92       	push	r15
    63ce:	0f 93       	push	r16
    63d0:	1f 93       	push	r17
    63d2:	cf 93       	push	r28
    63d4:	df 93       	push	r29
    63d6:	cd b7       	in	r28, 0x3d	; 61
    63d8:	de b7       	in	r29, 0x3e	; 62
    63da:	6f 97       	sbiw	r28, 0x1f	; 31
    63dc:	cd bf       	out	0x3d, r28	; 61
    63de:	de bf       	out	0x3e, r29	; 62
    63e0:	6c 8b       	std	Y+20, r22	; 0x14
    63e2:	7d 8b       	std	Y+21, r23	; 0x15
    63e4:	8e 8b       	std	Y+22, r24	; 0x16
    63e6:	9f 8b       	std	Y+23, r25	; 0x17
    63e8:	28 8f       	std	Y+24, r18	; 0x18
    63ea:	39 8f       	std	Y+25, r19	; 0x19
    63ec:	4a 8f       	std	Y+26, r20	; 0x1a
    63ee:	5b 8f       	std	Y+27, r21	; 0x1b
    63f0:	0c 8f       	std	Y+28, r16	; 0x1c
    63f2:	1d 8f       	std	Y+29, r17	; 0x1d
    63f4:	ee 8e       	std	Y+30, r14	; 0x1e
    63f6:	ff 8e       	std	Y+31, r15	; 0x1f
	bool failure = false;
    63f8:	19 82       	std	Y+1, r1	; 0x01

	if(from >= until)   /* Negative time */
    63fa:	2c 89       	ldd	r18, Y+20	; 0x14
    63fc:	3d 89       	ldd	r19, Y+21	; 0x15
    63fe:	4e 89       	ldd	r20, Y+22	; 0x16
    6400:	5f 89       	ldd	r21, Y+23	; 0x17
    6402:	88 8d       	ldd	r24, Y+24	; 0x18
    6404:	99 8d       	ldd	r25, Y+25	; 0x19
    6406:	aa 8d       	ldd	r26, Y+26	; 0x1a
    6408:	bb 8d       	ldd	r27, Y+27	; 0x1b
    640a:	28 17       	cp	r18, r24
    640c:	39 07       	cpc	r19, r25
    640e:	4a 07       	cpc	r20, r26
    6410:	5b 07       	cpc	r21, r27
    6412:	60 f0       	brcs	.+24     	; 0x642c <_Z14reportTimeTillmmPKcS0_+0x62>
	{
		failure = true;
    6414:	81 e0       	ldi	r24, 0x01	; 1
    6416:	89 83       	std	Y+1, r24	; 0x01
		if(failMsg)
    6418:	8e 8d       	ldd	r24, Y+30	; 0x1e
    641a:	9f 8d       	ldd	r25, Y+31	; 0x1f
    641c:	89 2b       	or	r24, r25
    641e:	09 f4       	brne	.+2      	; 0x6422 <_Z14reportTimeTillmmPKcS0_+0x58>
    6420:	6b c1       	rjmp	.+726    	; 0x66f8 <_Z14reportTimeTillmmPKcS0_+0x32e>
		{
			sb_send_string((char*)failMsg);
    6422:	8e 8d       	ldd	r24, Y+30	; 0x1e
    6424:	9f 8d       	ldd	r25, Y+31	; 0x1f
    6426:	0e 94 13 64 	call	0xc826	; 0xc826 <sb_send_string>
    642a:	66 c1       	rjmp	.+716    	; 0x66f8 <_Z14reportTimeTillmmPKcS0_+0x32e>
		}
	}
	else
	{
		if(prefix)
    642c:	8c 8d       	ldd	r24, Y+28	; 0x1c
    642e:	9d 8d       	ldd	r25, Y+29	; 0x1d
    6430:	89 2b       	or	r24, r25
    6432:	21 f0       	breq	.+8      	; 0x643c <_Z14reportTimeTillmmPKcS0_+0x72>
		{
			sb_send_string((char*)prefix);
    6434:	8c 8d       	ldd	r24, Y+28	; 0x1c
    6436:	9d 8d       	ldd	r25, Y+29	; 0x1d
    6438:	0e 94 13 64 	call	0xc826	; 0xc826 <sb_send_string>
		}
		time_t dif = until - from;
    643c:	28 8d       	ldd	r18, Y+24	; 0x18
    643e:	39 8d       	ldd	r19, Y+25	; 0x19
    6440:	4a 8d       	ldd	r20, Y+26	; 0x1a
    6442:	5b 8d       	ldd	r21, Y+27	; 0x1b
    6444:	8c 89       	ldd	r24, Y+20	; 0x14
    6446:	9d 89       	ldd	r25, Y+21	; 0x15
    6448:	ae 89       	ldd	r26, Y+22	; 0x16
    644a:	bf 89       	ldd	r27, Y+23	; 0x17
    644c:	79 01       	movw	r14, r18
    644e:	8a 01       	movw	r16, r20
    6450:	e8 1a       	sub	r14, r24
    6452:	f9 0a       	sbc	r15, r25
    6454:	0a 0b       	sbc	r16, r26
    6456:	1b 0b       	sbc	r17, r27
    6458:	d8 01       	movw	r26, r16
    645a:	c7 01       	movw	r24, r14
    645c:	8a 83       	std	Y+2, r24	; 0x02
    645e:	9b 83       	std	Y+3, r25	; 0x03
    6460:	ac 83       	std	Y+4, r26	; 0x04
    6462:	bd 83       	std	Y+5, r27	; 0x05
		uint16_t years = dif / YEAR;
    6464:	8a 81       	ldd	r24, Y+2	; 0x02
    6466:	9b 81       	ldd	r25, Y+3	; 0x03
    6468:	ac 81       	ldd	r26, Y+4	; 0x04
    646a:	bd 81       	ldd	r27, Y+5	; 0x05
    646c:	20 e8       	ldi	r18, 0x80	; 128
    646e:	33 e3       	ldi	r19, 0x33	; 51
    6470:	41 ee       	ldi	r20, 0xE1	; 225
    6472:	51 e0       	ldi	r21, 0x01	; 1
    6474:	bc 01       	movw	r22, r24
    6476:	cd 01       	movw	r24, r26
    6478:	0e 94 f0 79 	call	0xf3e0	; 0xf3e0 <__udivmodsi4>
    647c:	da 01       	movw	r26, r20
    647e:	c9 01       	movw	r24, r18
    6480:	8e 83       	std	Y+6, r24	; 0x06
    6482:	9f 83       	std	Y+7, r25	; 0x07
		time_t hold = dif - (years * YEAR);
    6484:	8e 81       	ldd	r24, Y+6	; 0x06
    6486:	9f 81       	ldd	r25, Y+7	; 0x07
    6488:	cc 01       	movw	r24, r24
    648a:	a0 e0       	ldi	r26, 0x00	; 0
    648c:	b0 e0       	ldi	r27, 0x00	; 0
    648e:	9c 01       	movw	r18, r24
    6490:	ad 01       	movw	r20, r26
    6492:	60 e8       	ldi	r22, 0x80	; 128
    6494:	73 e3       	ldi	r23, 0x33	; 51
    6496:	81 ee       	ldi	r24, 0xE1	; 225
    6498:	91 e0       	ldi	r25, 0x01	; 1
    649a:	0e 94 b8 79 	call	0xf370	; 0xf370 <__mulsi3>
    649e:	9b 01       	movw	r18, r22
    64a0:	ac 01       	movw	r20, r24
    64a2:	8a 81       	ldd	r24, Y+2	; 0x02
    64a4:	9b 81       	ldd	r25, Y+3	; 0x03
    64a6:	ac 81       	ldd	r26, Y+4	; 0x04
    64a8:	bd 81       	ldd	r27, Y+5	; 0x05
    64aa:	82 1b       	sub	r24, r18
    64ac:	93 0b       	sbc	r25, r19
    64ae:	a4 0b       	sbc	r26, r20
    64b0:	b5 0b       	sbc	r27, r21
    64b2:	88 87       	std	Y+8, r24	; 0x08
    64b4:	99 87       	std	Y+9, r25	; 0x09
    64b6:	aa 87       	std	Y+10, r26	; 0x0a
    64b8:	bb 87       	std	Y+11, r27	; 0x0b
		uint16_t days = hold / DAY;
    64ba:	88 85       	ldd	r24, Y+8	; 0x08
    64bc:	99 85       	ldd	r25, Y+9	; 0x09
    64be:	aa 85       	ldd	r26, Y+10	; 0x0a
    64c0:	bb 85       	ldd	r27, Y+11	; 0x0b
    64c2:	20 e8       	ldi	r18, 0x80	; 128
    64c4:	31 e5       	ldi	r19, 0x51	; 81
    64c6:	41 e0       	ldi	r20, 0x01	; 1
    64c8:	50 e0       	ldi	r21, 0x00	; 0
    64ca:	bc 01       	movw	r22, r24
    64cc:	cd 01       	movw	r24, r26
    64ce:	0e 94 f0 79 	call	0xf3e0	; 0xf3e0 <__udivmodsi4>
    64d2:	da 01       	movw	r26, r20
    64d4:	c9 01       	movw	r24, r18
    64d6:	8c 87       	std	Y+12, r24	; 0x0c
    64d8:	9d 87       	std	Y+13, r25	; 0x0d
		hold -= (days * DAY);
    64da:	8c 85       	ldd	r24, Y+12	; 0x0c
    64dc:	9d 85       	ldd	r25, Y+13	; 0x0d
    64de:	cc 01       	movw	r24, r24
    64e0:	a0 e0       	ldi	r26, 0x00	; 0
    64e2:	b0 e0       	ldi	r27, 0x00	; 0
    64e4:	9c 01       	movw	r18, r24
    64e6:	ad 01       	movw	r20, r26
    64e8:	60 e8       	ldi	r22, 0x80	; 128
    64ea:	71 e5       	ldi	r23, 0x51	; 81
    64ec:	81 e0       	ldi	r24, 0x01	; 1
    64ee:	90 e0       	ldi	r25, 0x00	; 0
    64f0:	0e 94 b8 79 	call	0xf370	; 0xf370 <__mulsi3>
    64f4:	9b 01       	movw	r18, r22
    64f6:	ac 01       	movw	r20, r24
    64f8:	88 85       	ldd	r24, Y+8	; 0x08
    64fa:	99 85       	ldd	r25, Y+9	; 0x09
    64fc:	aa 85       	ldd	r26, Y+10	; 0x0a
    64fe:	bb 85       	ldd	r27, Y+11	; 0x0b
    6500:	82 1b       	sub	r24, r18
    6502:	93 0b       	sbc	r25, r19
    6504:	a4 0b       	sbc	r26, r20
    6506:	b5 0b       	sbc	r27, r21
    6508:	88 87       	std	Y+8, r24	; 0x08
    650a:	99 87       	std	Y+9, r25	; 0x09
    650c:	aa 87       	std	Y+10, r26	; 0x0a
    650e:	bb 87       	std	Y+11, r27	; 0x0b
		uint16_t hours = hold / HOUR;
    6510:	88 85       	ldd	r24, Y+8	; 0x08
    6512:	99 85       	ldd	r25, Y+9	; 0x09
    6514:	aa 85       	ldd	r26, Y+10	; 0x0a
    6516:	bb 85       	ldd	r27, Y+11	; 0x0b
    6518:	20 e1       	ldi	r18, 0x10	; 16
    651a:	3e e0       	ldi	r19, 0x0E	; 14
    651c:	40 e0       	ldi	r20, 0x00	; 0
    651e:	50 e0       	ldi	r21, 0x00	; 0
    6520:	bc 01       	movw	r22, r24
    6522:	cd 01       	movw	r24, r26
    6524:	0e 94 f0 79 	call	0xf3e0	; 0xf3e0 <__udivmodsi4>
    6528:	da 01       	movw	r26, r20
    652a:	c9 01       	movw	r24, r18
    652c:	8e 87       	std	Y+14, r24	; 0x0e
    652e:	9f 87       	std	Y+15, r25	; 0x0f
		hold -= (hours * HOUR);
    6530:	8e 85       	ldd	r24, Y+14	; 0x0e
    6532:	9f 85       	ldd	r25, Y+15	; 0x0f
    6534:	9c 01       	movw	r18, r24
    6536:	40 e0       	ldi	r20, 0x00	; 0
    6538:	50 e0       	ldi	r21, 0x00	; 0
    653a:	80 e1       	ldi	r24, 0x10	; 16
    653c:	9e e0       	ldi	r25, 0x0E	; 14
    653e:	dc 01       	movw	r26, r24
    6540:	0e 94 49 7a 	call	0xf492	; 0xf492 <__muluhisi3>
    6544:	9b 01       	movw	r18, r22
    6546:	ac 01       	movw	r20, r24
    6548:	88 85       	ldd	r24, Y+8	; 0x08
    654a:	99 85       	ldd	r25, Y+9	; 0x09
    654c:	aa 85       	ldd	r26, Y+10	; 0x0a
    654e:	bb 85       	ldd	r27, Y+11	; 0x0b
    6550:	82 1b       	sub	r24, r18
    6552:	93 0b       	sbc	r25, r19
    6554:	a4 0b       	sbc	r26, r20
    6556:	b5 0b       	sbc	r27, r21
    6558:	88 87       	std	Y+8, r24	; 0x08
    655a:	99 87       	std	Y+9, r25	; 0x09
    655c:	aa 87       	std	Y+10, r26	; 0x0a
    655e:	bb 87       	std	Y+11, r27	; 0x0b
		uint16_t minutes = hold / MINUTE;
    6560:	88 85       	ldd	r24, Y+8	; 0x08
    6562:	99 85       	ldd	r25, Y+9	; 0x09
    6564:	aa 85       	ldd	r26, Y+10	; 0x0a
    6566:	bb 85       	ldd	r27, Y+11	; 0x0b
    6568:	2c e3       	ldi	r18, 0x3C	; 60
    656a:	30 e0       	ldi	r19, 0x00	; 0
    656c:	40 e0       	ldi	r20, 0x00	; 0
    656e:	50 e0       	ldi	r21, 0x00	; 0
    6570:	bc 01       	movw	r22, r24
    6572:	cd 01       	movw	r24, r26
    6574:	0e 94 f0 79 	call	0xf3e0	; 0xf3e0 <__udivmodsi4>
    6578:	da 01       	movw	r26, r20
    657a:	c9 01       	movw	r24, r18
    657c:	88 8b       	std	Y+16, r24	; 0x10
    657e:	99 8b       	std	Y+17, r25	; 0x11
		uint16_t seconds = hold - (minutes * MINUTE);
    6580:	28 85       	ldd	r18, Y+8	; 0x08
    6582:	39 85       	ldd	r19, Y+9	; 0x09
    6584:	48 89       	ldd	r20, Y+16	; 0x10
    6586:	59 89       	ldd	r21, Y+17	; 0x11
    6588:	6c e3       	ldi	r22, 0x3C	; 60
    658a:	64 9f       	mul	r22, r20
    658c:	c0 01       	movw	r24, r0
    658e:	65 9f       	mul	r22, r21
    6590:	90 0d       	add	r25, r0
    6592:	11 24       	eor	r1, r1
    6594:	89 01       	movw	r16, r18
    6596:	08 1b       	sub	r16, r24
    6598:	19 0b       	sbc	r17, r25
    659a:	c8 01       	movw	r24, r16
    659c:	8a 8b       	std	Y+18, r24	; 0x12
    659e:	9b 8b       	std	Y+19, r25	; 0x13

		g_tempStr[0] = '\0';
    65a0:	10 92 27 47 	sts	0x4727, r1	; 0x804727 <_ZL9g_tempStr>

		if(years)
    65a4:	8e 81       	ldd	r24, Y+6	; 0x06
    65a6:	9f 81       	ldd	r25, Y+7	; 0x07
    65a8:	89 2b       	or	r24, r25
    65aa:	f1 f0       	breq	.+60     	; 0x65e8 <_Z14reportTimeTillmmPKcS0_+0x21e>
		{
			sprintf(g_tempStr, "%d yrs ", years);
    65ac:	8f 81       	ldd	r24, Y+7	; 0x07
    65ae:	8f 93       	push	r24
    65b0:	8e 81       	ldd	r24, Y+6	; 0x06
    65b2:	8f 93       	push	r24
    65b4:	81 e8       	ldi	r24, 0x81	; 129
    65b6:	93 e4       	ldi	r25, 0x43	; 67
    65b8:	89 2f       	mov	r24, r25
    65ba:	8f 93       	push	r24
    65bc:	81 e8       	ldi	r24, 0x81	; 129
    65be:	93 e4       	ldi	r25, 0x43	; 67
    65c0:	8f 93       	push	r24
    65c2:	87 e2       	ldi	r24, 0x27	; 39
    65c4:	97 e4       	ldi	r25, 0x47	; 71
    65c6:	89 2f       	mov	r24, r25
    65c8:	8f 93       	push	r24
    65ca:	87 e2       	ldi	r24, 0x27	; 39
    65cc:	97 e4       	ldi	r25, 0x47	; 71
    65ce:	8f 93       	push	r24
    65d0:	0e 94 48 7c 	call	0xf890	; 0xf890 <sprintf>
    65d4:	0f 90       	pop	r0
    65d6:	0f 90       	pop	r0
    65d8:	0f 90       	pop	r0
    65da:	0f 90       	pop	r0
    65dc:	0f 90       	pop	r0
    65de:	0f 90       	pop	r0
			sb_send_string(g_tempStr);
    65e0:	87 e2       	ldi	r24, 0x27	; 39
    65e2:	97 e4       	ldi	r25, 0x47	; 71
    65e4:	0e 94 13 64 	call	0xc826	; 0xc826 <sb_send_string>
		}

		if(days)
    65e8:	8c 85       	ldd	r24, Y+12	; 0x0c
    65ea:	9d 85       	ldd	r25, Y+13	; 0x0d
    65ec:	89 2b       	or	r24, r25
    65ee:	f1 f0       	breq	.+60     	; 0x662c <_Z14reportTimeTillmmPKcS0_+0x262>
		{
			sprintf(g_tempStr, "%d days ", days);
    65f0:	8d 85       	ldd	r24, Y+13	; 0x0d
    65f2:	8f 93       	push	r24
    65f4:	8c 85       	ldd	r24, Y+12	; 0x0c
    65f6:	8f 93       	push	r24
    65f8:	89 e8       	ldi	r24, 0x89	; 137
    65fa:	93 e4       	ldi	r25, 0x43	; 67
    65fc:	89 2f       	mov	r24, r25
    65fe:	8f 93       	push	r24
    6600:	89 e8       	ldi	r24, 0x89	; 137
    6602:	93 e4       	ldi	r25, 0x43	; 67
    6604:	8f 93       	push	r24
    6606:	87 e2       	ldi	r24, 0x27	; 39
    6608:	97 e4       	ldi	r25, 0x47	; 71
    660a:	89 2f       	mov	r24, r25
    660c:	8f 93       	push	r24
    660e:	87 e2       	ldi	r24, 0x27	; 39
    6610:	97 e4       	ldi	r25, 0x47	; 71
    6612:	8f 93       	push	r24
    6614:	0e 94 48 7c 	call	0xf890	; 0xf890 <sprintf>
    6618:	0f 90       	pop	r0
    661a:	0f 90       	pop	r0
    661c:	0f 90       	pop	r0
    661e:	0f 90       	pop	r0
    6620:	0f 90       	pop	r0
    6622:	0f 90       	pop	r0
			sb_send_string(g_tempStr);
    6624:	87 e2       	ldi	r24, 0x27	; 39
    6626:	97 e4       	ldi	r25, 0x47	; 71
    6628:	0e 94 13 64 	call	0xc826	; 0xc826 <sb_send_string>
		}

		if(hours)
    662c:	8e 85       	ldd	r24, Y+14	; 0x0e
    662e:	9f 85       	ldd	r25, Y+15	; 0x0f
    6630:	89 2b       	or	r24, r25
    6632:	f1 f0       	breq	.+60     	; 0x6670 <_Z14reportTimeTillmmPKcS0_+0x2a6>
		{
			sprintf(g_tempStr, "%d hrs ", hours);
    6634:	8f 85       	ldd	r24, Y+15	; 0x0f
    6636:	8f 93       	push	r24
    6638:	8e 85       	ldd	r24, Y+14	; 0x0e
    663a:	8f 93       	push	r24
    663c:	82 e9       	ldi	r24, 0x92	; 146
    663e:	93 e4       	ldi	r25, 0x43	; 67
    6640:	89 2f       	mov	r24, r25
    6642:	8f 93       	push	r24
    6644:	82 e9       	ldi	r24, 0x92	; 146
    6646:	93 e4       	ldi	r25, 0x43	; 67
    6648:	8f 93       	push	r24
    664a:	87 e2       	ldi	r24, 0x27	; 39
    664c:	97 e4       	ldi	r25, 0x47	; 71
    664e:	89 2f       	mov	r24, r25
    6650:	8f 93       	push	r24
    6652:	87 e2       	ldi	r24, 0x27	; 39
    6654:	97 e4       	ldi	r25, 0x47	; 71
    6656:	8f 93       	push	r24
    6658:	0e 94 48 7c 	call	0xf890	; 0xf890 <sprintf>
    665c:	0f 90       	pop	r0
    665e:	0f 90       	pop	r0
    6660:	0f 90       	pop	r0
    6662:	0f 90       	pop	r0
    6664:	0f 90       	pop	r0
    6666:	0f 90       	pop	r0
			sb_send_string(g_tempStr);
    6668:	87 e2       	ldi	r24, 0x27	; 39
    666a:	97 e4       	ldi	r25, 0x47	; 71
    666c:	0e 94 13 64 	call	0xc826	; 0xc826 <sb_send_string>
		}

		if(minutes)
    6670:	88 89       	ldd	r24, Y+16	; 0x10
    6672:	99 89       	ldd	r25, Y+17	; 0x11
    6674:	89 2b       	or	r24, r25
    6676:	f1 f0       	breq	.+60     	; 0x66b4 <_Z14reportTimeTillmmPKcS0_+0x2ea>
		{
			sprintf(g_tempStr, "%d min ", minutes);
    6678:	89 89       	ldd	r24, Y+17	; 0x11
    667a:	8f 93       	push	r24
    667c:	88 89       	ldd	r24, Y+16	; 0x10
    667e:	8f 93       	push	r24
    6680:	8a e9       	ldi	r24, 0x9A	; 154
    6682:	93 e4       	ldi	r25, 0x43	; 67
    6684:	89 2f       	mov	r24, r25
    6686:	8f 93       	push	r24
    6688:	8a e9       	ldi	r24, 0x9A	; 154
    668a:	93 e4       	ldi	r25, 0x43	; 67
    668c:	8f 93       	push	r24
    668e:	87 e2       	ldi	r24, 0x27	; 39
    6690:	97 e4       	ldi	r25, 0x47	; 71
    6692:	89 2f       	mov	r24, r25
    6694:	8f 93       	push	r24
    6696:	87 e2       	ldi	r24, 0x27	; 39
    6698:	97 e4       	ldi	r25, 0x47	; 71
    669a:	8f 93       	push	r24
    669c:	0e 94 48 7c 	call	0xf890	; 0xf890 <sprintf>
    66a0:	0f 90       	pop	r0
    66a2:	0f 90       	pop	r0
    66a4:	0f 90       	pop	r0
    66a6:	0f 90       	pop	r0
    66a8:	0f 90       	pop	r0
    66aa:	0f 90       	pop	r0
			sb_send_string(g_tempStr);
    66ac:	87 e2       	ldi	r24, 0x27	; 39
    66ae:	97 e4       	ldi	r25, 0x47	; 71
    66b0:	0e 94 13 64 	call	0xc826	; 0xc826 <sb_send_string>
		}

		sprintf(g_tempStr, "%d sec", seconds);
    66b4:	8b 89       	ldd	r24, Y+19	; 0x13
    66b6:	8f 93       	push	r24
    66b8:	8a 89       	ldd	r24, Y+18	; 0x12
    66ba:	8f 93       	push	r24
    66bc:	82 ea       	ldi	r24, 0xA2	; 162
    66be:	93 e4       	ldi	r25, 0x43	; 67
    66c0:	89 2f       	mov	r24, r25
    66c2:	8f 93       	push	r24
    66c4:	82 ea       	ldi	r24, 0xA2	; 162
    66c6:	93 e4       	ldi	r25, 0x43	; 67
    66c8:	8f 93       	push	r24
    66ca:	87 e2       	ldi	r24, 0x27	; 39
    66cc:	97 e4       	ldi	r25, 0x47	; 71
    66ce:	89 2f       	mov	r24, r25
    66d0:	8f 93       	push	r24
    66d2:	87 e2       	ldi	r24, 0x27	; 39
    66d4:	97 e4       	ldi	r25, 0x47	; 71
    66d6:	8f 93       	push	r24
    66d8:	0e 94 48 7c 	call	0xf890	; 0xf890 <sprintf>
    66dc:	0f 90       	pop	r0
    66de:	0f 90       	pop	r0
    66e0:	0f 90       	pop	r0
    66e2:	0f 90       	pop	r0
    66e4:	0f 90       	pop	r0
    66e6:	0f 90       	pop	r0
		sb_send_string(g_tempStr);
    66e8:	87 e2       	ldi	r24, 0x27	; 39
    66ea:	97 e4       	ldi	r25, 0x47	; 71
    66ec:	0e 94 13 64 	call	0xc826	; 0xc826 <sb_send_string>

		sb_send_NewLine();
    66f0:	0e 94 e9 63 	call	0xc7d2	; 0xc7d2 <sb_send_NewLine>
		g_tempStr[0] = '\0';
    66f4:	10 92 27 47 	sts	0x4727, r1	; 0x804727 <_ZL9g_tempStr>
	}

	return( failure);
    66f8:	89 81       	ldd	r24, Y+1	; 0x01
}
    66fa:	6f 96       	adiw	r28, 0x1f	; 31
    66fc:	cd bf       	out	0x3d, r28	; 61
    66fe:	de bf       	out	0x3e, r29	; 62
    6700:	df 91       	pop	r29
    6702:	cf 91       	pop	r28
    6704:	1f 91       	pop	r17
    6706:	0f 91       	pop	r16
    6708:	ff 90       	pop	r15
    670a:	ef 90       	pop	r14
    670c:	08 95       	ret

0000670e <_Z23clockConfigurationCheckv>:



ConfigurationState_t clockConfigurationCheck(void)
{
    670e:	cf 93       	push	r28
    6710:	df 93       	push	r29
    6712:	00 d0       	rcall	.+0      	; 0x6714 <_Z23clockConfigurationCheckv+0x6>
    6714:	00 d0       	rcall	.+0      	; 0x6716 <_Z23clockConfigurationCheckv+0x8>
    6716:	cd b7       	in	r28, 0x3d	; 61
    6718:	de b7       	in	r29, 0x3e	; 62
	time_t now = time(null);
    671a:	80 e0       	ldi	r24, 0x00	; 0
    671c:	90 e0       	ldi	r25, 0x00	; 0
    671e:	0e 94 56 06 	call	0xcac	; 0xcac <time>
    6722:	dc 01       	movw	r26, r24
    6724:	cb 01       	movw	r24, r22
    6726:	89 83       	std	Y+1, r24	; 0x01
    6728:	9a 83       	std	Y+2, r25	; 0x02
    672a:	ab 83       	std	Y+3, r26	; 0x03
    672c:	bc 83       	std	Y+4, r27	; 0x04
	
	if((g_event_finish_epoch < MINIMUM_EPOCH) || (g_event_start_epoch < MINIMUM_EPOCH) || (now < MINIMUM_EPOCH))
    672e:	80 91 9e 47 	lds	r24, 0x479E	; 0x80479e <g_event_finish_epoch>
    6732:	90 91 9f 47 	lds	r25, 0x479F	; 0x80479f <g_event_finish_epoch+0x1>
    6736:	a0 91 a0 47 	lds	r26, 0x47A0	; 0x8047a0 <g_event_finish_epoch+0x2>
    673a:	b0 91 a1 47 	lds	r27, 0x47A1	; 0x8047a1 <g_event_finish_epoch+0x3>
    673e:	81 15       	cp	r24, r1
    6740:	96 46       	sbci	r25, 0x66	; 102
    6742:	ae 4e       	sbci	r26, 0xEE	; 238
    6744:	bf 45       	sbci	r27, 0x5F	; 95
    6746:	b0 f0       	brcs	.+44     	; 0x6774 <_Z23clockConfigurationCheckv+0x66>
    6748:	80 91 9a 47 	lds	r24, 0x479A	; 0x80479a <g_event_start_epoch>
    674c:	90 91 9b 47 	lds	r25, 0x479B	; 0x80479b <g_event_start_epoch+0x1>
    6750:	a0 91 9c 47 	lds	r26, 0x479C	; 0x80479c <g_event_start_epoch+0x2>
    6754:	b0 91 9d 47 	lds	r27, 0x479D	; 0x80479d <g_event_start_epoch+0x3>
    6758:	81 15       	cp	r24, r1
    675a:	96 46       	sbci	r25, 0x66	; 102
    675c:	ae 4e       	sbci	r26, 0xEE	; 238
    675e:	bf 45       	sbci	r27, 0x5F	; 95
    6760:	48 f0       	brcs	.+18     	; 0x6774 <_Z23clockConfigurationCheckv+0x66>
    6762:	89 81       	ldd	r24, Y+1	; 0x01
    6764:	9a 81       	ldd	r25, Y+2	; 0x02
    6766:	ab 81       	ldd	r26, Y+3	; 0x03
    6768:	bc 81       	ldd	r27, Y+4	; 0x04
    676a:	81 15       	cp	r24, r1
    676c:	96 46       	sbci	r25, 0x66	; 102
    676e:	ae 4e       	sbci	r26, 0xEE	; 238
    6770:	bf 45       	sbci	r27, 0x5F	; 95
    6772:	10 f4       	brcc	.+4      	; 0x6778 <_Z23clockConfigurationCheckv+0x6a>
    6774:	81 e0       	ldi	r24, 0x01	; 1
    6776:	01 c0       	rjmp	.+2      	; 0x677a <_Z23clockConfigurationCheckv+0x6c>
    6778:	80 e0       	ldi	r24, 0x00	; 0
    677a:	88 23       	and	r24, r24
    677c:	11 f0       	breq	.+4      	; 0x6782 <_Z23clockConfigurationCheckv+0x74>
	{
		return(CONFIGURATION_ERROR);
    677e:	82 e0       	ldi	r24, 0x02	; 2
    6780:	5a c0       	rjmp	.+180    	; 0x6836 <_Z23clockConfigurationCheckv+0x128>
	}

	if(g_event_finish_epoch <= g_event_start_epoch) /* Event configured to finish before it started */
    6782:	20 91 9e 47 	lds	r18, 0x479E	; 0x80479e <g_event_finish_epoch>
    6786:	30 91 9f 47 	lds	r19, 0x479F	; 0x80479f <g_event_finish_epoch+0x1>
    678a:	40 91 a0 47 	lds	r20, 0x47A0	; 0x8047a0 <g_event_finish_epoch+0x2>
    678e:	50 91 a1 47 	lds	r21, 0x47A1	; 0x8047a1 <g_event_finish_epoch+0x3>
    6792:	80 91 9a 47 	lds	r24, 0x479A	; 0x80479a <g_event_start_epoch>
    6796:	90 91 9b 47 	lds	r25, 0x479B	; 0x80479b <g_event_start_epoch+0x1>
    679a:	a0 91 9c 47 	lds	r26, 0x479C	; 0x80479c <g_event_start_epoch+0x2>
    679e:	b0 91 9d 47 	lds	r27, 0x479D	; 0x80479d <g_event_start_epoch+0x3>
    67a2:	61 e0       	ldi	r22, 0x01	; 1
    67a4:	82 17       	cp	r24, r18
    67a6:	93 07       	cpc	r25, r19
    67a8:	a4 07       	cpc	r26, r20
    67aa:	b5 07       	cpc	r27, r21
    67ac:	08 f4       	brcc	.+2      	; 0x67b0 <_Z23clockConfigurationCheckv+0xa2>
    67ae:	60 e0       	ldi	r22, 0x00	; 0
    67b0:	66 23       	and	r22, r22
    67b2:	11 f0       	breq	.+4      	; 0x67b8 <_Z23clockConfigurationCheckv+0xaa>
	{
		return(CONFIGURATION_ERROR);
    67b4:	82 e0       	ldi	r24, 0x02	; 2
    67b6:	3f c0       	rjmp	.+126    	; 0x6836 <_Z23clockConfigurationCheckv+0x128>
	}

	if(now > g_event_finish_epoch)  /* The scheduled event is over */
    67b8:	80 91 9e 47 	lds	r24, 0x479E	; 0x80479e <g_event_finish_epoch>
    67bc:	90 91 9f 47 	lds	r25, 0x479F	; 0x80479f <g_event_finish_epoch+0x1>
    67c0:	a0 91 a0 47 	lds	r26, 0x47A0	; 0x8047a0 <g_event_finish_epoch+0x2>
    67c4:	b0 91 a1 47 	lds	r27, 0x47A1	; 0x8047a1 <g_event_finish_epoch+0x3>
    67c8:	61 e0       	ldi	r22, 0x01	; 1
    67ca:	29 81       	ldd	r18, Y+1	; 0x01
    67cc:	3a 81       	ldd	r19, Y+2	; 0x02
    67ce:	4b 81       	ldd	r20, Y+3	; 0x03
    67d0:	5c 81       	ldd	r21, Y+4	; 0x04
    67d2:	82 17       	cp	r24, r18
    67d4:	93 07       	cpc	r25, r19
    67d6:	a4 07       	cpc	r26, r20
    67d8:	b5 07       	cpc	r27, r21
    67da:	08 f0       	brcs	.+2      	; 0x67de <_Z23clockConfigurationCheckv+0xd0>
    67dc:	60 e0       	ldi	r22, 0x00	; 0
    67de:	66 23       	and	r22, r22
    67e0:	11 f0       	breq	.+4      	; 0x67e6 <_Z23clockConfigurationCheckv+0xd8>
	{
		return(CONFIGURATION_ERROR);
    67e2:	82 e0       	ldi	r24, 0x02	; 2
    67e4:	28 c0       	rjmp	.+80     	; 0x6836 <_Z23clockConfigurationCheckv+0x128>
	}

	if(now > g_event_start_epoch)       /* Event should be running */
    67e6:	80 91 9a 47 	lds	r24, 0x479A	; 0x80479a <g_event_start_epoch>
    67ea:	90 91 9b 47 	lds	r25, 0x479B	; 0x80479b <g_event_start_epoch+0x1>
    67ee:	a0 91 9c 47 	lds	r26, 0x479C	; 0x80479c <g_event_start_epoch+0x2>
    67f2:	b0 91 9d 47 	lds	r27, 0x479D	; 0x80479d <g_event_start_epoch+0x3>
    67f6:	61 e0       	ldi	r22, 0x01	; 1
    67f8:	29 81       	ldd	r18, Y+1	; 0x01
    67fa:	3a 81       	ldd	r19, Y+2	; 0x02
    67fc:	4b 81       	ldd	r20, Y+3	; 0x03
    67fe:	5c 81       	ldd	r21, Y+4	; 0x04
    6800:	82 17       	cp	r24, r18
    6802:	93 07       	cpc	r25, r19
    6804:	a4 07       	cpc	r26, r20
    6806:	b5 07       	cpc	r27, r21
    6808:	08 f0       	brcs	.+2      	; 0x680c <_Z23clockConfigurationCheckv+0xfe>
    680a:	60 e0       	ldi	r22, 0x00	; 0
    680c:	66 23       	and	r22, r22
    680e:	51 f0       	breq	.+20     	; 0x6824 <_Z23clockConfigurationCheckv+0x116>
	{
		if(!g_event_enabled)
    6810:	90 91 a2 47 	lds	r25, 0x47A2	; 0x8047a2 <g_event_enabled>
    6814:	81 e0       	ldi	r24, 0x01	; 1
    6816:	89 27       	eor	r24, r25
    6818:	88 23       	and	r24, r24
    681a:	11 f0       	breq	.+4      	; 0x6820 <_Z23clockConfigurationCheckv+0x112>
		{
			return(SCHEDULED_EVENT_DID_NOT_START);  /* Event scheduled to be running isn't */
    681c:	83 e0       	ldi	r24, 0x03	; 3
    681e:	0b c0       	rjmp	.+22     	; 0x6836 <_Z23clockConfigurationCheckv+0x128>
		}
		else
		{
			return(EVENT_IN_PROGRESS);              /* Event is running, so clock settings don't matter */
    6820:	85 e0       	ldi	r24, 0x05	; 5
    6822:	09 c0       	rjmp	.+18     	; 0x6836 <_Z23clockConfigurationCheckv+0x128>
		}
	}
	else if(!g_use_rtc_for_startstop)
    6824:	90 91 c3 47 	lds	r25, 0x47C3	; 0x8047c3 <g_use_rtc_for_startstop>
    6828:	81 e0       	ldi	r24, 0x01	; 1
    682a:	89 27       	eor	r24, r25
    682c:	88 23       	and	r24, r24
    682e:	11 f0       	breq	.+4      	; 0x6834 <_Z23clockConfigurationCheckv+0x126>
	{
		return(SCHEDULED_EVENT_WILL_NEVER_RUN);
    6830:	84 e0       	ldi	r24, 0x04	; 4
    6832:	01 c0       	rjmp	.+2      	; 0x6836 <_Z23clockConfigurationCheckv+0x128>
	}

	return(WAITING_FOR_START);  /* Future event hasn't started yet */
    6834:	81 e0       	ldi	r24, 0x01	; 1
}
    6836:	24 96       	adiw	r28, 0x04	; 4
    6838:	cd bf       	out	0x3d, r28	; 61
    683a:	de bf       	out	0x3e, r29	; 62
    683c:	df 91       	pop	r29
    683e:	cf 91       	pop	r28
    6840:	08 95       	ret

00006842 <_Z18reportConfigErrorsv>:

void reportConfigErrors(void)
{
    6842:	cf 93       	push	r28
    6844:	df 93       	push	r29
    6846:	00 d0       	rcall	.+0      	; 0x6848 <_Z18reportConfigErrorsv+0x6>
    6848:	00 d0       	rcall	.+0      	; 0x684a <_Z18reportConfigErrorsv+0x8>
    684a:	cd b7       	in	r28, 0x3d	; 61
    684c:	de b7       	in	r29, 0x3e	; 62
	set_system_time(ds3231_get_epoch(null));
    684e:	80 e0       	ldi	r24, 0x00	; 0
    6850:	90 e0       	ldi	r25, 0x00	; 0
    6852:	0e 94 c2 40 	call	0x8184	; 0x8184 <ds3231_get_epoch>
    6856:	dc 01       	movw	r26, r24
    6858:	cb 01       	movw	r24, r22
    685a:	bc 01       	movw	r22, r24
    685c:	cd 01       	movw	r24, r26
    685e:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <set_system_time>
	time_t now = time(null);
    6862:	80 e0       	ldi	r24, 0x00	; 0
    6864:	90 e0       	ldi	r25, 0x00	; 0
    6866:	0e 94 56 06 	call	0xcac	; 0xcac <time>
    686a:	dc 01       	movw	r26, r24
    686c:	cb 01       	movw	r24, r22
    686e:	89 83       	std	Y+1, r24	; 0x01
    6870:	9a 83       	std	Y+2, r25	; 0x02
    6872:	ab 83       	std	Y+3, r26	; 0x03
    6874:	bc 83       	std	Y+4, r27	; 0x04

	if(g_messages_text[STATION_ID][0] == '\0')
    6876:	80 91 81 47 	lds	r24, 0x4781	; 0x804781 <g_messages_text+0x15>
    687a:	88 23       	and	r24, r24
    687c:	21 f4       	brne	.+8      	; 0x6886 <_Z18reportConfigErrorsv+0x44>
	{
		sb_send_string(TEXT_SET_ID_TXT);
    687e:	89 ea       	ldi	r24, 0xA9	; 169
    6880:	93 e4       	ldi	r25, 0x43	; 67
    6882:	0e 94 13 64 	call	0xc826	; 0xc826 <sb_send_string>
	}

	if(now < MINIMUM_EPOCH) /* Current time is invalid */
    6886:	89 81       	ldd	r24, Y+1	; 0x01
    6888:	9a 81       	ldd	r25, Y+2	; 0x02
    688a:	ab 81       	ldd	r26, Y+3	; 0x03
    688c:	bc 81       	ldd	r27, Y+4	; 0x04
    688e:	81 15       	cp	r24, r1
    6890:	96 46       	sbci	r25, 0x66	; 102
    6892:	ae 4e       	sbci	r26, 0xEE	; 238
    6894:	bf 45       	sbci	r27, 0x5F	; 95
    6896:	20 f4       	brcc	.+8      	; 0x68a0 <_Z18reportConfigErrorsv+0x5e>
	{
		sb_send_string(TEXT_SET_TIME_TXT);
    6898:	8a ec       	ldi	r24, 0xCA	; 202
    689a:	93 e4       	ldi	r25, 0x43	; 67
    689c:	0e 94 13 64 	call	0xc826	; 0xc826 <sb_send_string>
	}

	if(g_event_finish_epoch < now)      /* Event has already finished */
    68a0:	20 91 9e 47 	lds	r18, 0x479E	; 0x80479e <g_event_finish_epoch>
    68a4:	30 91 9f 47 	lds	r19, 0x479F	; 0x80479f <g_event_finish_epoch+0x1>
    68a8:	40 91 a0 47 	lds	r20, 0x47A0	; 0x8047a0 <g_event_finish_epoch+0x2>
    68ac:	50 91 a1 47 	lds	r21, 0x47A1	; 0x8047a1 <g_event_finish_epoch+0x3>
    68b0:	61 e0       	ldi	r22, 0x01	; 1
    68b2:	89 81       	ldd	r24, Y+1	; 0x01
    68b4:	9a 81       	ldd	r25, Y+2	; 0x02
    68b6:	ab 81       	ldd	r26, Y+3	; 0x03
    68b8:	bc 81       	ldd	r27, Y+4	; 0x04
    68ba:	28 17       	cp	r18, r24
    68bc:	39 07       	cpc	r19, r25
    68be:	4a 07       	cpc	r20, r26
    68c0:	5b 07       	cpc	r21, r27
    68c2:	08 f0       	brcs	.+2      	; 0x68c6 <_Z18reportConfigErrorsv+0x84>
    68c4:	60 e0       	ldi	r22, 0x00	; 0
    68c6:	66 23       	and	r22, r22
    68c8:	f1 f0       	breq	.+60     	; 0x6906 <_Z18reportConfigErrorsv+0xc4>
	{
		if(g_event_start_epoch < now)   /* Event has already started */
    68ca:	20 91 9a 47 	lds	r18, 0x479A	; 0x80479a <g_event_start_epoch>
    68ce:	30 91 9b 47 	lds	r19, 0x479B	; 0x80479b <g_event_start_epoch+0x1>
    68d2:	40 91 9c 47 	lds	r20, 0x479C	; 0x80479c <g_event_start_epoch+0x2>
    68d6:	50 91 9d 47 	lds	r21, 0x479D	; 0x80479d <g_event_start_epoch+0x3>
    68da:	61 e0       	ldi	r22, 0x01	; 1
    68dc:	89 81       	ldd	r24, Y+1	; 0x01
    68de:	9a 81       	ldd	r25, Y+2	; 0x02
    68e0:	ab 81       	ldd	r26, Y+3	; 0x03
    68e2:	bc 81       	ldd	r27, Y+4	; 0x04
    68e4:	28 17       	cp	r18, r24
    68e6:	39 07       	cpc	r19, r25
    68e8:	4a 07       	cpc	r20, r26
    68ea:	5b 07       	cpc	r21, r27
    68ec:	08 f0       	brcs	.+2      	; 0x68f0 <_Z18reportConfigErrorsv+0xae>
    68ee:	60 e0       	ldi	r22, 0x00	; 0
    68f0:	66 23       	and	r22, r22
    68f2:	21 f0       	breq	.+8      	; 0x68fc <_Z18reportConfigErrorsv+0xba>
		{
			sb_send_string(TEXT_SET_START_TXT);
    68f4:	82 ef       	ldi	r24, 0xF2	; 242
    68f6:	93 e4       	ldi	r25, 0x43	; 67
    68f8:	0e 94 13 64 	call	0xc826	; 0xc826 <sb_send_string>
		}

		sb_send_string(TEXT_SET_FINISH_TXT);
    68fc:	88 e1       	ldi	r24, 0x18	; 24
    68fe:	94 e4       	ldi	r25, 0x44	; 68
    6900:	0e 94 13 64 	call	0xc826	; 0xc826 <sb_send_string>
		else
		{
			sb_send_string((char*)"Event running...\n");
		}
	}
}
    6904:	2f c0       	rjmp	.+94     	; 0x6964 <_Z18reportConfigErrorsv+0x122>
			sb_send_string(TEXT_SET_START_TXT);
		}

		sb_send_string(TEXT_SET_FINISH_TXT);
	}
	else if(g_event_start_epoch < now)  /* Event has already started */
    6906:	20 91 9a 47 	lds	r18, 0x479A	; 0x80479a <g_event_start_epoch>
    690a:	30 91 9b 47 	lds	r19, 0x479B	; 0x80479b <g_event_start_epoch+0x1>
    690e:	40 91 9c 47 	lds	r20, 0x479C	; 0x80479c <g_event_start_epoch+0x2>
    6912:	50 91 9d 47 	lds	r21, 0x479D	; 0x80479d <g_event_start_epoch+0x3>
    6916:	61 e0       	ldi	r22, 0x01	; 1
    6918:	89 81       	ldd	r24, Y+1	; 0x01
    691a:	9a 81       	ldd	r25, Y+2	; 0x02
    691c:	ab 81       	ldd	r26, Y+3	; 0x03
    691e:	bc 81       	ldd	r27, Y+4	; 0x04
    6920:	28 17       	cp	r18, r24
    6922:	39 07       	cpc	r19, r25
    6924:	4a 07       	cpc	r20, r26
    6926:	5b 07       	cpc	r21, r27
    6928:	08 f0       	brcs	.+2      	; 0x692c <_Z18reportConfigErrorsv+0xea>
    692a:	60 e0       	ldi	r22, 0x00	; 0
    692c:	66 23       	and	r22, r22
    692e:	d1 f0       	breq	.+52     	; 0x6964 <_Z18reportConfigErrorsv+0x122>
	{
		if(g_event_start_epoch < MINIMUM_EPOCH)     /* Start in invalid */
    6930:	80 91 9a 47 	lds	r24, 0x479A	; 0x80479a <g_event_start_epoch>
    6934:	90 91 9b 47 	lds	r25, 0x479B	; 0x80479b <g_event_start_epoch+0x1>
    6938:	a0 91 9c 47 	lds	r26, 0x479C	; 0x80479c <g_event_start_epoch+0x2>
    693c:	b0 91 9d 47 	lds	r27, 0x479D	; 0x80479d <g_event_start_epoch+0x3>
    6940:	21 e0       	ldi	r18, 0x01	; 1
    6942:	81 15       	cp	r24, r1
    6944:	96 46       	sbci	r25, 0x66	; 102
    6946:	ae 4e       	sbci	r26, 0xEE	; 238
    6948:	bf 45       	sbci	r27, 0x5F	; 95
    694a:	08 f0       	brcs	.+2      	; 0x694e <_Z18reportConfigErrorsv+0x10c>
    694c:	20 e0       	ldi	r18, 0x00	; 0
    694e:	22 23       	and	r18, r18
    6950:	29 f0       	breq	.+10     	; 0x695c <_Z18reportConfigErrorsv+0x11a>
		{
			sb_send_string(TEXT_SET_START_TXT);
    6952:	82 ef       	ldi	r24, 0xF2	; 242
    6954:	93 e4       	ldi	r25, 0x43	; 67
    6956:	0e 94 13 64 	call	0xc826	; 0xc826 <sb_send_string>
		else
		{
			sb_send_string((char*)"Event running...\n");
		}
	}
}
    695a:	04 c0       	rjmp	.+8      	; 0x6964 <_Z18reportConfigErrorsv+0x122>
		{
			sb_send_string(TEXT_SET_START_TXT);
		}
		else
		{
			sb_send_string((char*)"Event running...\n");
    695c:	8f e3       	ldi	r24, 0x3F	; 63
    695e:	94 e4       	ldi	r25, 0x44	; 68
    6960:	0e 94 13 64 	call	0xc826	; 0xc826 <sb_send_string>
		}
	}
}
    6964:	00 00       	nop
    6966:	24 96       	adiw	r28, 0x04	; 4
    6968:	cd bf       	out	0x3d, r28	; 61
    696a:	de bf       	out	0x3e, r29	; 62
    696c:	df 91       	pop	r29
    696e:	cf 91       	pop	r28
    6970:	08 95       	ret

00006972 <_Z41__static_initialization_and_destruction_0ii>:
    6972:	cf 93       	push	r28
    6974:	df 93       	push	r29
    6976:	00 d0       	rcall	.+0      	; 0x6978 <_Z41__static_initialization_and_destruction_0ii+0x6>
    6978:	00 d0       	rcall	.+0      	; 0x697a <_Z41__static_initialization_and_destruction_0ii+0x8>
    697a:	cd b7       	in	r28, 0x3d	; 61
    697c:	de b7       	in	r29, 0x3e	; 62
    697e:	89 83       	std	Y+1, r24	; 0x01
    6980:	9a 83       	std	Y+2, r25	; 0x02
    6982:	6b 83       	std	Y+3, r22	; 0x03
    6984:	7c 83       	std	Y+4, r23	; 0x04
    6986:	89 81       	ldd	r24, Y+1	; 0x01
    6988:	9a 81       	ldd	r25, Y+2	; 0x02
    698a:	01 97       	sbiw	r24, 0x01	; 1
    698c:	61 f4       	brne	.+24     	; 0x69a6 <_Z41__static_initialization_and_destruction_0ii+0x34>
    698e:	8b 81       	ldd	r24, Y+3	; 0x03
    6990:	9c 81       	ldd	r25, Y+4	; 0x04
    6992:	01 96       	adiw	r24, 0x01	; 1
    6994:	41 f4       	brne	.+16     	; 0x69a6 <_Z41__static_initialization_and_destruction_0ii+0x34>

extern Goertzel g_goertzel;
volatile uint16_t g_switch_closed_count = 0;
volatile bool g_long_button_press = false;

leds LEDS = leds();
    6996:	88 eb       	ldi	r24, 0xB8	; 184
    6998:	97 e4       	ldi	r25, 0x47	; 71
    699a:	0e 94 db 52 	call	0xa5b6	; 0xa5b6 <_ZN4ledsC1Ev>

EepromManager g_ee_mgr;
    699e:	89 eb       	ldi	r24, 0xB9	; 185
    69a0:	97 e4       	ldi	r25, 0x47	; 71
    69a2:	0e 94 0b 46 	call	0x8c16	; 0x8c16 <_ZN13EepromManagerC1Ev>
    69a6:	89 81       	ldd	r24, Y+1	; 0x01
    69a8:	9a 81       	ldd	r25, Y+2	; 0x02
    69aa:	89 2b       	or	r24, r25
    69ac:	61 f4       	brne	.+24     	; 0x69c6 <_Z41__static_initialization_and_destruction_0ii+0x54>
    69ae:	8b 81       	ldd	r24, Y+3	; 0x03
    69b0:	9c 81       	ldd	r25, Y+4	; 0x04
    69b2:	01 96       	adiw	r24, 0x01	; 1
    69b4:	41 f4       	brne	.+16     	; 0x69c6 <_Z41__static_initialization_and_destruction_0ii+0x54>
    69b6:	89 eb       	ldi	r24, 0xB9	; 185
    69b8:	97 e4       	ldi	r25, 0x47	; 71
    69ba:	0e 94 18 46 	call	0x8c30	; 0x8c30 <_ZN13EepromManagerD1Ev>

extern Goertzel g_goertzel;
volatile uint16_t g_switch_closed_count = 0;
volatile bool g_long_button_press = false;

leds LEDS = leds();
    69be:	88 eb       	ldi	r24, 0xB8	; 184
    69c0:	97 e4       	ldi	r25, 0x47	; 71
    69c2:	0e 94 e8 52 	call	0xa5d0	; 0xa5d0 <_ZN4ledsD1Ev>
		else
		{
			sb_send_string((char*)"Event running...\n");
		}
	}
}
    69c6:	00 00       	nop
    69c8:	24 96       	adiw	r28, 0x04	; 4
    69ca:	cd bf       	out	0x3d, r28	; 61
    69cc:	de bf       	out	0x3e, r29	; 62
    69ce:	df 91       	pop	r29
    69d0:	cf 91       	pop	r28
    69d2:	08 95       	ret

000069d4 <_GLOBAL__sub_I_g_antenna_connect_state>:
    69d4:	cf 93       	push	r28
    69d6:	df 93       	push	r29
    69d8:	cd b7       	in	r28, 0x3d	; 61
    69da:	de b7       	in	r29, 0x3e	; 62
    69dc:	6f ef       	ldi	r22, 0xFF	; 255
    69de:	7f ef       	ldi	r23, 0xFF	; 255
    69e0:	81 e0       	ldi	r24, 0x01	; 1
    69e2:	90 e0       	ldi	r25, 0x00	; 0
    69e4:	0e 94 b9 34 	call	0x6972	; 0x6972 <_Z41__static_initialization_and_destruction_0ii>
    69e8:	df 91       	pop	r29
    69ea:	cf 91       	pop	r28
    69ec:	08 95       	ret

000069ee <_GLOBAL__sub_D_g_antenna_connect_state>:
    69ee:	cf 93       	push	r28
    69f0:	df 93       	push	r29
    69f2:	cd b7       	in	r28, 0x3d	; 61
    69f4:	de b7       	in	r29, 0x3e	; 62
    69f6:	6f ef       	ldi	r22, 0xFF	; 255
    69f8:	7f ef       	ldi	r23, 0xFF	; 255
    69fa:	80 e0       	ldi	r24, 0x00	; 0
    69fc:	90 e0       	ldi	r25, 0x00	; 0
    69fe:	0e 94 b9 34 	call	0x6972	; 0x6972 <_Z41__static_initialization_and_destruction_0ii>
    6a02:	df 91       	pop	r29
    6a04:	cf 91       	pop	r28
    6a06:	08 95       	ret

00006a08 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t>:
	} ADC_Init_t;
	
static ADC_Init_t g_adc_initialization = ADC_NOT_INITIALIZED;

void ADC0_setADCChannel(ADC_Active_Channel_t chan)
{
    6a08:	cf 93       	push	r28
    6a0a:	df 93       	push	r29
    6a0c:	1f 92       	push	r1
    6a0e:	cd b7       	in	r28, 0x3d	; 61
    6a10:	de b7       	in	r29, 0x3e	; 62
    6a12:	89 83       	std	Y+1, r24	; 0x01
	switch(chan)
    6a14:	89 81       	ldd	r24, Y+1	; 0x01
    6a16:	88 2f       	mov	r24, r24
    6a18:	90 e0       	ldi	r25, 0x00	; 0
    6a1a:	82 30       	cpi	r24, 0x02	; 2
    6a1c:	91 05       	cpc	r25, r1
    6a1e:	41 f1       	breq	.+80     	; 0x6a70 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x68>
    6a20:	83 30       	cpi	r24, 0x03	; 3
    6a22:	91 05       	cpc	r25, r1
    6a24:	2c f4       	brge	.+10     	; 0x6a30 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x28>
    6a26:	00 97       	sbiw	r24, 0x00	; 0
    6a28:	49 f0       	breq	.+18     	; 0x6a3c <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x34>
    6a2a:	01 97       	sbiw	r24, 0x01	; 1
    6a2c:	a1 f0       	breq	.+40     	; 0x6a56 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x4e>
    6a2e:	47 c0       	rjmp	.+142    	; 0x6abe <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0xb6>
    6a30:	83 30       	cpi	r24, 0x03	; 3
    6a32:	91 05       	cpc	r25, r1
    6a34:	51 f1       	breq	.+84     	; 0x6a8a <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x82>
    6a36:	04 97       	sbiw	r24, 0x04	; 4
    6a38:	a9 f1       	breq	.+106    	; 0x6aa4 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x9c>
    6a3a:	41 c0       	rjmp	.+130    	; 0x6abe <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0xb6>
	{
		case ADCAudioInput:
		{
			if(g_adc_initialization != ADC_FREE_RUN_INITIALIZED)
    6a3c:	80 91 d7 47 	lds	r24, 0x47D7	; 0x8047d7 <_ZL20g_adc_initialization>
    6a40:	81 30       	cpi	r24, 0x01	; 1
    6a42:	19 f0       	breq	.+6      	; 0x6a4a <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x42>
			{
				ADC0_SYSTEM_init(FREE_RUNNING); 
    6a44:	81 e0       	ldi	r24, 0x01	; 1
    6a46:	0e 94 1b 37 	call	0x6e36	; 0x6e36 <_ZL16ADC0_SYSTEM_initb>
			}
			
			ADC0.MUXPOS = ADC_MUXPOS_AIN2_gc;
    6a4a:	80 e0       	ldi	r24, 0x00	; 0
    6a4c:	96 e0       	ldi	r25, 0x06	; 6
    6a4e:	22 e0       	ldi	r18, 0x02	; 2
    6a50:	fc 01       	movw	r30, r24
    6a52:	20 87       	std	Z+8, r18	; 0x08
		}
		break;
    6a54:	37 c0       	rjmp	.+110    	; 0x6ac4 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0xbc>
		
		case ADCExternalBatteryVoltage:
		{
			if(g_adc_initialization != ADC_SINGLE_CONVERSION_INITIALIZED)
    6a56:	80 91 d7 47 	lds	r24, 0x47D7	; 0x8047d7 <_ZL20g_adc_initialization>
    6a5a:	82 30       	cpi	r24, 0x02	; 2
    6a5c:	19 f0       	breq	.+6      	; 0x6a64 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x5c>
			{
				ADC0_SYSTEM_init(SINGLE_CONVERSION);
    6a5e:	80 e0       	ldi	r24, 0x00	; 0
    6a60:	0e 94 1b 37 	call	0x6e36	; 0x6e36 <_ZL16ADC0_SYSTEM_initb>
			}
			
			ADC0.MUXPOS = ADC_MUXPOS_AIN3_gc;
    6a64:	80 e0       	ldi	r24, 0x00	; 0
    6a66:	96 e0       	ldi	r25, 0x06	; 6
    6a68:	23 e0       	ldi	r18, 0x03	; 3
    6a6a:	fc 01       	movw	r30, r24
    6a6c:	20 87       	std	Z+8, r18	; 0x08
		}
		break;
    6a6e:	2a c0       	rjmp	.+84     	; 0x6ac4 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0xbc>
		
		case ADC12VRegulatedVoltage:
		{
			if(g_adc_initialization != ADC_SINGLE_CONVERSION_INITIALIZED)
    6a70:	80 91 d7 47 	lds	r24, 0x47D7	; 0x8047d7 <_ZL20g_adc_initialization>
    6a74:	82 30       	cpi	r24, 0x02	; 2
    6a76:	19 f0       	breq	.+6      	; 0x6a7e <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x76>
			{
				ADC0_SYSTEM_init(SINGLE_CONVERSION);
    6a78:	80 e0       	ldi	r24, 0x00	; 0
    6a7a:	0e 94 1b 37 	call	0x6e36	; 0x6e36 <_ZL16ADC0_SYSTEM_initb>
			}
			
			ADC0.MUXPOS = ADC_MUXPOS_AIN4_gc;
    6a7e:	80 e0       	ldi	r24, 0x00	; 0
    6a80:	96 e0       	ldi	r25, 0x06	; 6
    6a82:	24 e0       	ldi	r18, 0x04	; 4
    6a84:	fc 01       	movw	r30, r24
    6a86:	20 87       	std	Z+8, r18	; 0x08
		}
		break;
    6a88:	1d c0       	rjmp	.+58     	; 0x6ac4 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0xbc>
		
		case ADCTXAdjustableVoltage:
		{
			if(g_adc_initialization != ADC_SINGLE_CONVERSION_INITIALIZED)
    6a8a:	80 91 d7 47 	lds	r24, 0x47D7	; 0x8047d7 <_ZL20g_adc_initialization>
    6a8e:	82 30       	cpi	r24, 0x02	; 2
    6a90:	19 f0       	breq	.+6      	; 0x6a98 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x90>
			{
				ADC0_SYSTEM_init(SINGLE_CONVERSION);
    6a92:	80 e0       	ldi	r24, 0x00	; 0
    6a94:	0e 94 1b 37 	call	0x6e36	; 0x6e36 <_ZL16ADC0_SYSTEM_initb>
			}
			
			ADC0.MUXPOS = ADC_MUXPOS_AIN5_gc;
    6a98:	80 e0       	ldi	r24, 0x00	; 0
    6a9a:	96 e0       	ldi	r25, 0x06	; 6
    6a9c:	25 e0       	ldi	r18, 0x05	; 5
    6a9e:	fc 01       	movw	r30, r24
    6aa0:	20 87       	std	Z+8, r18	; 0x08
		}
		break;
    6aa2:	10 c0       	rjmp	.+32     	; 0x6ac4 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0xbc>
		
		case ADCTemperature:
		{
			if(g_adc_initialization != ADC_SINGLE_CONVERSION_INITIALIZED)
    6aa4:	80 91 d7 47 	lds	r24, 0x47D7	; 0x8047d7 <_ZL20g_adc_initialization>
    6aa8:	82 30       	cpi	r24, 0x02	; 2
    6aaa:	19 f0       	breq	.+6      	; 0x6ab2 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0xaa>
			{
				ADC0_SYSTEM_init(SINGLE_CONVERSION);
    6aac:	80 e0       	ldi	r24, 0x00	; 0
    6aae:	0e 94 1b 37 	call	0x6e36	; 0x6e36 <_ZL16ADC0_SYSTEM_initb>
			}
			
			ADC0.MUXPOS = ADC_MUXPOS_TEMPSENSE_gc;
    6ab2:	80 e0       	ldi	r24, 0x00	; 0
    6ab4:	96 e0       	ldi	r25, 0x06	; 6
    6ab6:	22 e4       	ldi	r18, 0x42	; 66
    6ab8:	fc 01       	movw	r30, r24
    6aba:	20 87       	std	Z+8, r18	; 0x08
		}
		break;
    6abc:	03 c0       	rjmp	.+6      	; 0x6ac4 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0xbc>
		
		default:
		{
			ADC0_SYSTEM_shutdown();
    6abe:	0e 94 2d 37 	call	0x6e5a	; 0x6e5a <_ZL20ADC0_SYSTEM_shutdownv>
		}
		break;	
    6ac2:	00 00       	nop
	}
}
    6ac4:	00 00       	nop
    6ac6:	0f 90       	pop	r0
    6ac8:	df 91       	pop	r29
    6aca:	cf 91       	pop	r28
    6acc:	08 95       	ret

00006ace <_Z20ADC0_startConversionv>:

void ADC0_startConversion(void)
{
    6ace:	cf 93       	push	r28
    6ad0:	df 93       	push	r29
    6ad2:	cd b7       	in	r28, 0x3d	; 61
    6ad4:	de b7       	in	r29, 0x3e	; 62
	if(g_adc_initialization != ADC_NOT_INITIALIZED)
    6ad6:	80 91 d7 47 	lds	r24, 0x47D7	; 0x8047d7 <_ZL20g_adc_initialization>
    6ada:	88 23       	and	r24, r24
    6adc:	49 f0       	breq	.+18     	; 0x6af0 <_Z20ADC0_startConversionv+0x22>
	{
		ADC0.INTCTRL = 0x00; /* Disable interrupt */
    6ade:	80 e0       	ldi	r24, 0x00	; 0
    6ae0:	96 e0       	ldi	r25, 0x06	; 6
    6ae2:	fc 01       	movw	r30, r24
    6ae4:	14 86       	std	Z+12, r1	; 0x0c
		ADC0.COMMAND = ADC_STCONV_bm; /* Start conversion */
    6ae6:	80 e0       	ldi	r24, 0x00	; 0
    6ae8:	96 e0       	ldi	r25, 0x06	; 6
    6aea:	21 e0       	ldi	r18, 0x01	; 1
    6aec:	fc 01       	movw	r30, r24
    6aee:	22 87       	std	Z+10, r18	; 0x0a
	}
}
    6af0:	00 00       	nop
    6af2:	df 91       	pop	r29
    6af4:	cf 91       	pop	r28
    6af6:	08 95       	ret

00006af8 <_Z19ADC0_conversionDonev>:

bool ADC0_conversionDone(void)
{
    6af8:	cf 93       	push	r28
    6afa:	df 93       	push	r29
    6afc:	cd b7       	in	r28, 0x3d	; 61
    6afe:	de b7       	in	r29, 0x3e	; 62
	/* Check if the conversion is done  */
	return (ADC0.INTFLAGS & ADC_RESRDY_bm);
    6b00:	80 e0       	ldi	r24, 0x00	; 0
    6b02:	96 e0       	ldi	r25, 0x06	; 6
    6b04:	fc 01       	movw	r30, r24
    6b06:	85 85       	ldd	r24, Z+13	; 0x0d
    6b08:	88 2f       	mov	r24, r24
    6b0a:	90 e0       	ldi	r25, 0x00	; 0
    6b0c:	81 70       	andi	r24, 0x01	; 1
    6b0e:	99 27       	eor	r25, r25
    6b10:	21 e0       	ldi	r18, 0x01	; 1
    6b12:	89 2b       	or	r24, r25
    6b14:	09 f4       	brne	.+2      	; 0x6b18 <_Z19ADC0_conversionDonev+0x20>
    6b16:	20 e0       	ldi	r18, 0x00	; 0
    6b18:	82 2f       	mov	r24, r18
}
    6b1a:	df 91       	pop	r29
    6b1c:	cf 91       	pop	r28
    6b1e:	08 95       	ret

00006b20 <_Z9ADC0_readv>:

int ADC0_read(void)
{
    6b20:	cf 93       	push	r28
    6b22:	df 93       	push	r29
    6b24:	cd b7       	in	r28, 0x3d	; 61
    6b26:	de b7       	in	r29, 0x3e	; 62
	return ADC0.RES; 	/* Reading the result also clears the interrupt flag */
    6b28:	80 e0       	ldi	r24, 0x00	; 0
    6b2a:	96 e0       	ldi	r25, 0x06	; 6
    6b2c:	fc 01       	movw	r30, r24
    6b2e:	80 89       	ldd	r24, Z+16	; 0x10
    6b30:	91 89       	ldd	r25, Z+17	; 0x11
}
    6b32:	df 91       	pop	r29
    6b34:	cf 91       	pop	r28
    6b36:	08 95       	ret

00006b38 <_Z12temperatureCv>:

float temperatureC(void)
{
    6b38:	cf 93       	push	r28
    6b3a:	df 93       	push	r29
    6b3c:	cd b7       	in	r28, 0x3d	; 61
    6b3e:	de b7       	in	r29, 0x3e	; 62
    6b40:	2f 97       	sbiw	r28, 0x0f	; 15
    6b42:	cd bf       	out	0x3d, r28	; 61
    6b44:	de bf       	out	0x3e, r29	; 62
	uint16_t sigrow_offset = SIGROW.TEMPSENSE1; // Read unsigned value from signature row
    6b46:	80 e0       	ldi	r24, 0x00	; 0
    6b48:	91 e1       	ldi	r25, 0x11	; 17
    6b4a:	fc 01       	movw	r30, r24
    6b4c:	86 81       	ldd	r24, Z+6	; 0x06
    6b4e:	97 81       	ldd	r25, Z+7	; 0x07
    6b50:	8d 83       	std	Y+5, r24	; 0x05
    6b52:	9e 83       	std	Y+6, r25	; 0x06
	uint16_t sigrow_slope = SIGROW.TEMPSENSE0; // Read unsigned value from signature row
    6b54:	80 e0       	ldi	r24, 0x00	; 0
    6b56:	91 e1       	ldi	r25, 0x11	; 17
    6b58:	fc 01       	movw	r30, r24
    6b5a:	84 81       	ldd	r24, Z+4	; 0x04
    6b5c:	95 81       	ldd	r25, Z+5	; 0x05
    6b5e:	8f 83       	std	Y+7, r24	; 0x07
    6b60:	98 87       	std	Y+8, r25	; 0x08
	static uint32_t wait = 10000;
	uint16_t adc_reading;
	float temperature_in_C = -273.15;
    6b62:	83 e3       	ldi	r24, 0x33	; 51
    6b64:	93 e9       	ldi	r25, 0x93	; 147
    6b66:	a8 e8       	ldi	r26, 0x88	; 136
    6b68:	b3 ec       	ldi	r27, 0xC3	; 195
    6b6a:	89 83       	std	Y+1, r24	; 0x01
    6b6c:	9a 83       	std	Y+2, r25	; 0x02
    6b6e:	ab 83       	std	Y+3, r26	; 0x03
    6b70:	bc 83       	std	Y+4, r27	; 0x04
	uint8_t holdMux;
	
	holdMux = ADC0.MUXPOS;
    6b72:	80 e0       	ldi	r24, 0x00	; 0
    6b74:	96 e0       	ldi	r25, 0x06	; 6
    6b76:	fc 01       	movw	r30, r24
    6b78:	80 85       	ldd	r24, Z+8	; 0x08
    6b7a:	89 87       	std	Y+9, r24	; 0x09
	ADC0_SYSTEM_init(SINGLE_CONVERSION);
    6b7c:	80 e0       	ldi	r24, 0x00	; 0
    6b7e:	0e 94 1b 37 	call	0x6e36	; 0x6e36 <_ZL16ADC0_SYSTEM_initb>
	ADC0.MUXPOS = ADC_MUXPOS_TEMPSENSE_gc;
    6b82:	80 e0       	ldi	r24, 0x00	; 0
    6b84:	96 e0       	ldi	r25, 0x06	; 6
    6b86:	22 e4       	ldi	r18, 0x42	; 66
    6b88:	fc 01       	movw	r30, r24
    6b8a:	20 87       	std	Z+8, r18	; 0x08
	ADC0_startConversion();
    6b8c:	0e 94 67 35 	call	0x6ace	; 0x6ace <_Z20ADC0_startConversionv>
	
	while((!ADC0_conversionDone()) && wait--);
    6b90:	0e 94 7c 35 	call	0x6af8	; 0x6af8 <_Z19ADC0_conversionDonev>
    6b94:	98 2f       	mov	r25, r24
    6b96:	81 e0       	ldi	r24, 0x01	; 1
    6b98:	89 27       	eor	r24, r25
    6b9a:	88 23       	and	r24, r24
    6b9c:	e1 f0       	breq	.+56     	; 0x6bd6 <_Z12temperatureCv+0x9e>
    6b9e:	80 91 22 40 	lds	r24, 0x4022	; 0x804022 <_ZZ12temperatureCvE4wait>
    6ba2:	90 91 23 40 	lds	r25, 0x4023	; 0x804023 <_ZZ12temperatureCvE4wait+0x1>
    6ba6:	a0 91 24 40 	lds	r26, 0x4024	; 0x804024 <_ZZ12temperatureCvE4wait+0x2>
    6baa:	b0 91 25 40 	lds	r27, 0x4025	; 0x804025 <_ZZ12temperatureCvE4wait+0x3>
    6bae:	9c 01       	movw	r18, r24
    6bb0:	ad 01       	movw	r20, r26
    6bb2:	21 50       	subi	r18, 0x01	; 1
    6bb4:	31 09       	sbc	r19, r1
    6bb6:	41 09       	sbc	r20, r1
    6bb8:	51 09       	sbc	r21, r1
    6bba:	20 93 22 40 	sts	0x4022, r18	; 0x804022 <_ZZ12temperatureCvE4wait>
    6bbe:	30 93 23 40 	sts	0x4023, r19	; 0x804023 <_ZZ12temperatureCvE4wait+0x1>
    6bc2:	40 93 24 40 	sts	0x4024, r20	; 0x804024 <_ZZ12temperatureCvE4wait+0x2>
    6bc6:	50 93 25 40 	sts	0x4025, r21	; 0x804025 <_ZZ12temperatureCvE4wait+0x3>
    6bca:	89 2b       	or	r24, r25
    6bcc:	8a 2b       	or	r24, r26
    6bce:	8b 2b       	or	r24, r27
    6bd0:	11 f0       	breq	.+4      	; 0x6bd6 <_Z12temperatureCv+0x9e>
    6bd2:	81 e0       	ldi	r24, 0x01	; 1
    6bd4:	01 c0       	rjmp	.+2      	; 0x6bd8 <_Z12temperatureCv+0xa0>
    6bd6:	80 e0       	ldi	r24, 0x00	; 0
    6bd8:	88 23       	and	r24, r24
    6bda:	09 f0       	breq	.+2      	; 0x6bde <_Z12temperatureCv+0xa6>
    6bdc:	d9 cf       	rjmp	.-78     	; 0x6b90 <_Z12temperatureCv+0x58>
	
	if(wait)
    6bde:	80 91 22 40 	lds	r24, 0x4022	; 0x804022 <_ZZ12temperatureCvE4wait>
    6be2:	90 91 23 40 	lds	r25, 0x4023	; 0x804023 <_ZZ12temperatureCvE4wait+0x1>
    6be6:	a0 91 24 40 	lds	r26, 0x4024	; 0x804024 <_ZZ12temperatureCvE4wait+0x2>
    6bea:	b0 91 25 40 	lds	r27, 0x4025	; 0x804025 <_ZZ12temperatureCvE4wait+0x3>
    6bee:	89 2b       	or	r24, r25
    6bf0:	8a 2b       	or	r24, r26
    6bf2:	8b 2b       	or	r24, r27
    6bf4:	09 f4       	brne	.+2      	; 0x6bf8 <_Z12temperatureCv+0xc0>
    6bf6:	5b c0       	rjmp	.+182    	; 0x6cae <_Z12temperatureCv+0x176>
	{
		adc_reading = ADC0.RES;
    6bf8:	80 e0       	ldi	r24, 0x00	; 0
    6bfa:	96 e0       	ldi	r25, 0x06	; 6
    6bfc:	fc 01       	movw	r30, r24
    6bfe:	80 89       	ldd	r24, Z+16	; 0x10
    6c00:	91 89       	ldd	r25, Z+17	; 0x11
    6c02:	8a 87       	std	Y+10, r24	; 0x0a
    6c04:	9b 87       	std	Y+11, r25	; 0x0b
		uint32_t temp = sigrow_offset - adc_reading;
    6c06:	2d 81       	ldd	r18, Y+5	; 0x05
    6c08:	3e 81       	ldd	r19, Y+6	; 0x06
    6c0a:	8a 85       	ldd	r24, Y+10	; 0x0a
    6c0c:	9b 85       	ldd	r25, Y+11	; 0x0b
    6c0e:	a9 01       	movw	r20, r18
    6c10:	48 1b       	sub	r20, r24
    6c12:	59 0b       	sbc	r21, r25
    6c14:	ca 01       	movw	r24, r20
    6c16:	cc 01       	movw	r24, r24
    6c18:	a0 e0       	ldi	r26, 0x00	; 0
    6c1a:	b0 e0       	ldi	r27, 0x00	; 0
    6c1c:	8c 87       	std	Y+12, r24	; 0x0c
    6c1e:	9d 87       	std	Y+13, r25	; 0x0d
    6c20:	ae 87       	std	Y+14, r26	; 0x0e
    6c22:	bf 87       	std	Y+15, r27	; 0x0f
		temp *= sigrow_slope; // Result will overflow 16-bit variable
    6c24:	8f 81       	ldd	r24, Y+7	; 0x07
    6c26:	98 85       	ldd	r25, Y+8	; 0x08
    6c28:	cc 01       	movw	r24, r24
    6c2a:	a0 e0       	ldi	r26, 0x00	; 0
    6c2c:	b0 e0       	ldi	r27, 0x00	; 0
    6c2e:	2c 85       	ldd	r18, Y+12	; 0x0c
    6c30:	3d 85       	ldd	r19, Y+13	; 0x0d
    6c32:	4e 85       	ldd	r20, Y+14	; 0x0e
    6c34:	5f 85       	ldd	r21, Y+15	; 0x0f
    6c36:	bc 01       	movw	r22, r24
    6c38:	cd 01       	movw	r24, r26
    6c3a:	0e 94 b8 79 	call	0xf370	; 0xf370 <__mulsi3>
    6c3e:	dc 01       	movw	r26, r24
    6c40:	cb 01       	movw	r24, r22
    6c42:	8c 87       	std	Y+12, r24	; 0x0c
    6c44:	9d 87       	std	Y+13, r25	; 0x0d
    6c46:	ae 87       	std	Y+14, r26	; 0x0e
    6c48:	bf 87       	std	Y+15, r27	; 0x0f
		temp += 0x0800; // Add 4096/2 to get correct rounding on division below
    6c4a:	8c 85       	ldd	r24, Y+12	; 0x0c
    6c4c:	9d 85       	ldd	r25, Y+13	; 0x0d
    6c4e:	ae 85       	ldd	r26, Y+14	; 0x0e
    6c50:	bf 85       	ldd	r27, Y+15	; 0x0f
    6c52:	98 5f       	subi	r25, 0xF8	; 248
    6c54:	af 4f       	sbci	r26, 0xFF	; 255
    6c56:	bf 4f       	sbci	r27, 0xFF	; 255
    6c58:	8c 87       	std	Y+12, r24	; 0x0c
    6c5a:	9d 87       	std	Y+13, r25	; 0x0d
    6c5c:	ae 87       	std	Y+14, r26	; 0x0e
    6c5e:	bf 87       	std	Y+15, r27	; 0x0f
		temp >>= 12; // Round off to nearest degree in Kelvin, by dividing with 2^12 (4096)
    6c60:	8c 85       	ldd	r24, Y+12	; 0x0c
    6c62:	9d 85       	ldd	r25, Y+13	; 0x0d
    6c64:	ae 85       	ldd	r26, Y+14	; 0x0e
    6c66:	bf 85       	ldd	r27, Y+15	; 0x0f
    6c68:	07 2e       	mov	r0, r23
    6c6a:	7c e0       	ldi	r23, 0x0C	; 12
    6c6c:	b6 95       	lsr	r27
    6c6e:	a7 95       	ror	r26
    6c70:	97 95       	ror	r25
    6c72:	87 95       	ror	r24
    6c74:	7a 95       	dec	r23
    6c76:	d1 f7       	brne	.-12     	; 0x6c6c <_Z12temperatureCv+0x134>
    6c78:	70 2d       	mov	r23, r0
    6c7a:	8c 87       	std	Y+12, r24	; 0x0c
    6c7c:	9d 87       	std	Y+13, r25	; 0x0d
    6c7e:	ae 87       	std	Y+14, r26	; 0x0e
    6c80:	bf 87       	std	Y+15, r27	; 0x0f
		temperature_in_C += (float)temp;
    6c82:	6c 85       	ldd	r22, Y+12	; 0x0c
    6c84:	7d 85       	ldd	r23, Y+13	; 0x0d
    6c86:	8e 85       	ldd	r24, Y+14	; 0x0e
    6c88:	9f 85       	ldd	r25, Y+15	; 0x0f
    6c8a:	0e 94 53 78 	call	0xf0a6	; 0xf0a6 <__floatunsisf>
    6c8e:	dc 01       	movw	r26, r24
    6c90:	cb 01       	movw	r24, r22
    6c92:	9c 01       	movw	r18, r24
    6c94:	ad 01       	movw	r20, r26
    6c96:	69 81       	ldd	r22, Y+1	; 0x01
    6c98:	7a 81       	ldd	r23, Y+2	; 0x02
    6c9a:	8b 81       	ldd	r24, Y+3	; 0x03
    6c9c:	9c 81       	ldd	r25, Y+4	; 0x04
    6c9e:	0e 94 23 77 	call	0xee46	; 0xee46 <__addsf3>
    6ca2:	dc 01       	movw	r26, r24
    6ca4:	cb 01       	movw	r24, r22
    6ca6:	89 83       	std	Y+1, r24	; 0x01
    6ca8:	9a 83       	std	Y+2, r25	; 0x02
    6caa:	ab 83       	std	Y+3, r26	; 0x03
    6cac:	bc 83       	std	Y+4, r27	; 0x04
	}
	
	ADC0.MUXPOS = holdMux; /* Restore ADC registers */
    6cae:	80 e0       	ldi	r24, 0x00	; 0
    6cb0:	96 e0       	ldi	r25, 0x06	; 6
    6cb2:	29 85       	ldd	r18, Y+9	; 0x09
    6cb4:	fc 01       	movw	r30, r24
    6cb6:	20 87       	std	Z+8, r18	; 0x08
	
	return(temperature_in_C);
    6cb8:	89 81       	ldd	r24, Y+1	; 0x01
    6cba:	9a 81       	ldd	r25, Y+2	; 0x02
    6cbc:	ab 81       	ldd	r26, Y+3	; 0x03
    6cbe:	bc 81       	ldd	r27, Y+4	; 0x04
}
    6cc0:	bc 01       	movw	r22, r24
    6cc2:	cd 01       	movw	r24, r26
    6cc4:	2f 96       	adiw	r28, 0x0f	; 15
    6cc6:	cd bf       	out	0x3d, r28	; 61
    6cc8:	de bf       	out	0x3e, r29	; 62
    6cca:	df 91       	pop	r29
    6ccc:	cf 91       	pop	r28
    6cce:	08 95       	ret

00006cd0 <_ZL9PORT_initv>:


static void PORT_init(void)
{
    6cd0:	cf 93       	push	r28
    6cd2:	df 93       	push	r29
    6cd4:	cd b7       	in	r28, 0x3d	; 61
    6cd6:	de b7       	in	r29, 0x3e	; 62
	/* Disable interrupt and digital input buffer on PD2 */
	PORTD.PIN2CTRL &= ~PORT_ISC_gm;
    6cd8:	80 e6       	ldi	r24, 0x60	; 96
    6cda:	94 e0       	ldi	r25, 0x04	; 4
    6cdc:	20 e6       	ldi	r18, 0x60	; 96
    6cde:	34 e0       	ldi	r19, 0x04	; 4
    6ce0:	f9 01       	movw	r30, r18
    6ce2:	22 89       	ldd	r18, Z+18	; 0x12
    6ce4:	28 7f       	andi	r18, 0xF8	; 248
    6ce6:	fc 01       	movw	r30, r24
    6ce8:	22 8b       	std	Z+18, r18	; 0x12
	PORTD.PIN2CTRL |= PORT_ISC_INPUT_DISABLE_gc;
    6cea:	80 e6       	ldi	r24, 0x60	; 96
    6cec:	94 e0       	ldi	r25, 0x04	; 4
    6cee:	20 e6       	ldi	r18, 0x60	; 96
    6cf0:	34 e0       	ldi	r19, 0x04	; 4
    6cf2:	f9 01       	movw	r30, r18
    6cf4:	22 89       	ldd	r18, Z+18	; 0x12
    6cf6:	24 60       	ori	r18, 0x04	; 4
    6cf8:	fc 01       	movw	r30, r24
    6cfa:	22 8b       	std	Z+18, r18	; 0x12
	/* Disable interrupt and digital input buffer on PD3 */
	PORTD.PIN3CTRL &= ~PORT_ISC_gm;
    6cfc:	80 e6       	ldi	r24, 0x60	; 96
    6cfe:	94 e0       	ldi	r25, 0x04	; 4
    6d00:	20 e6       	ldi	r18, 0x60	; 96
    6d02:	34 e0       	ldi	r19, 0x04	; 4
    6d04:	f9 01       	movw	r30, r18
    6d06:	23 89       	ldd	r18, Z+19	; 0x13
    6d08:	28 7f       	andi	r18, 0xF8	; 248
    6d0a:	fc 01       	movw	r30, r24
    6d0c:	23 8b       	std	Z+19, r18	; 0x13
	PORTD.PIN3CTRL |= PORT_ISC_INPUT_DISABLE_gc;
    6d0e:	80 e6       	ldi	r24, 0x60	; 96
    6d10:	94 e0       	ldi	r25, 0x04	; 4
    6d12:	20 e6       	ldi	r18, 0x60	; 96
    6d14:	34 e0       	ldi	r19, 0x04	; 4
    6d16:	f9 01       	movw	r30, r18
    6d18:	23 89       	ldd	r18, Z+19	; 0x13
    6d1a:	24 60       	ori	r18, 0x04	; 4
    6d1c:	fc 01       	movw	r30, r24
    6d1e:	23 8b       	std	Z+19, r18	; 0x13
	/* Disable interrupt and digital input buffer on PD4 */
	PORTD.PIN4CTRL &= ~PORT_ISC_gm;
    6d20:	80 e6       	ldi	r24, 0x60	; 96
    6d22:	94 e0       	ldi	r25, 0x04	; 4
    6d24:	20 e6       	ldi	r18, 0x60	; 96
    6d26:	34 e0       	ldi	r19, 0x04	; 4
    6d28:	f9 01       	movw	r30, r18
    6d2a:	24 89       	ldd	r18, Z+20	; 0x14
    6d2c:	28 7f       	andi	r18, 0xF8	; 248
    6d2e:	fc 01       	movw	r30, r24
    6d30:	24 8b       	std	Z+20, r18	; 0x14
	PORTD.PIN4CTRL |= PORT_ISC_INPUT_DISABLE_gc;
    6d32:	80 e6       	ldi	r24, 0x60	; 96
    6d34:	94 e0       	ldi	r25, 0x04	; 4
    6d36:	20 e6       	ldi	r18, 0x60	; 96
    6d38:	34 e0       	ldi	r19, 0x04	; 4
    6d3a:	f9 01       	movw	r30, r18
    6d3c:	24 89       	ldd	r18, Z+20	; 0x14
    6d3e:	24 60       	ori	r18, 0x04	; 4
    6d40:	fc 01       	movw	r30, r24
    6d42:	24 8b       	std	Z+20, r18	; 0x14
	/* Disable interrupt and digital input buffer on PD5 */
	PORTD.PIN5CTRL &= ~PORT_ISC_gm;
    6d44:	80 e6       	ldi	r24, 0x60	; 96
    6d46:	94 e0       	ldi	r25, 0x04	; 4
    6d48:	20 e6       	ldi	r18, 0x60	; 96
    6d4a:	34 e0       	ldi	r19, 0x04	; 4
    6d4c:	f9 01       	movw	r30, r18
    6d4e:	25 89       	ldd	r18, Z+21	; 0x15
    6d50:	28 7f       	andi	r18, 0xF8	; 248
    6d52:	fc 01       	movw	r30, r24
    6d54:	25 8b       	std	Z+21, r18	; 0x15
	PORTD.PIN5CTRL |= PORT_ISC_INPUT_DISABLE_gc;
    6d56:	80 e6       	ldi	r24, 0x60	; 96
    6d58:	94 e0       	ldi	r25, 0x04	; 4
    6d5a:	20 e6       	ldi	r18, 0x60	; 96
    6d5c:	34 e0       	ldi	r19, 0x04	; 4
    6d5e:	f9 01       	movw	r30, r18
    6d60:	25 89       	ldd	r18, Z+21	; 0x15
    6d62:	24 60       	ori	r18, 0x04	; 4
    6d64:	fc 01       	movw	r30, r24
    6d66:	25 8b       	std	Z+21, r18	; 0x15
	
	/* Disable pull-up resistor */
	PORTD.PIN2CTRL &= ~PORT_PULLUPEN_bm;
    6d68:	80 e6       	ldi	r24, 0x60	; 96
    6d6a:	94 e0       	ldi	r25, 0x04	; 4
    6d6c:	20 e6       	ldi	r18, 0x60	; 96
    6d6e:	34 e0       	ldi	r19, 0x04	; 4
    6d70:	f9 01       	movw	r30, r18
    6d72:	22 89       	ldd	r18, Z+18	; 0x12
    6d74:	27 7f       	andi	r18, 0xF7	; 247
    6d76:	fc 01       	movw	r30, r24
    6d78:	22 8b       	std	Z+18, r18	; 0x12
	PORTD.PIN3CTRL &= ~PORT_PULLUPEN_bm;
    6d7a:	80 e6       	ldi	r24, 0x60	; 96
    6d7c:	94 e0       	ldi	r25, 0x04	; 4
    6d7e:	20 e6       	ldi	r18, 0x60	; 96
    6d80:	34 e0       	ldi	r19, 0x04	; 4
    6d82:	f9 01       	movw	r30, r18
    6d84:	23 89       	ldd	r18, Z+19	; 0x13
    6d86:	27 7f       	andi	r18, 0xF7	; 247
    6d88:	fc 01       	movw	r30, r24
    6d8a:	23 8b       	std	Z+19, r18	; 0x13
	PORTD.PIN4CTRL &= ~PORT_PULLUPEN_bm;
    6d8c:	80 e6       	ldi	r24, 0x60	; 96
    6d8e:	94 e0       	ldi	r25, 0x04	; 4
    6d90:	20 e6       	ldi	r18, 0x60	; 96
    6d92:	34 e0       	ldi	r19, 0x04	; 4
    6d94:	f9 01       	movw	r30, r18
    6d96:	24 89       	ldd	r18, Z+20	; 0x14
    6d98:	27 7f       	andi	r18, 0xF7	; 247
    6d9a:	fc 01       	movw	r30, r24
    6d9c:	24 8b       	std	Z+20, r18	; 0x14
	PORTD.PIN5CTRL &= ~PORT_PULLUPEN_bm;
    6d9e:	80 e6       	ldi	r24, 0x60	; 96
    6da0:	94 e0       	ldi	r25, 0x04	; 4
    6da2:	20 e6       	ldi	r18, 0x60	; 96
    6da4:	34 e0       	ldi	r19, 0x04	; 4
    6da6:	f9 01       	movw	r30, r18
    6da8:	25 89       	ldd	r18, Z+21	; 0x15
    6daa:	27 7f       	andi	r18, 0xF7	; 247
    6dac:	fc 01       	movw	r30, r24
    6dae:	25 8b       	std	Z+21, r18	; 0x15
}
    6db0:	00 00       	nop
    6db2:	df 91       	pop	r29
    6db4:	cf 91       	pop	r28
    6db6:	08 95       	ret

00006db8 <_ZL10VREF0_initv>:

static void VREF0_init(void)
{
    6db8:	cf 93       	push	r28
    6dba:	df 93       	push	r29
    6dbc:	cd b7       	in	r28, 0x3d	; 61
    6dbe:	de b7       	in	r29, 0x3e	; 62
	VREF.ADC0REF = VREF_REFSEL_2V048_gc;  /* Internal 2.048V reference */
    6dc0:	80 ea       	ldi	r24, 0xA0	; 160
    6dc2:	90 e0       	ldi	r25, 0x00	; 0
    6dc4:	21 e0       	ldi	r18, 0x01	; 1
    6dc6:	fc 01       	movw	r30, r24
    6dc8:	20 83       	st	Z, r18
}
    6dca:	00 00       	nop
    6dcc:	df 91       	pop	r29
    6dce:	cf 91       	pop	r28
    6dd0:	08 95       	ret

00006dd2 <_ZL9ADC0_initb>:

static void ADC0_init(bool freerun)
{
    6dd2:	cf 93       	push	r28
    6dd4:	df 93       	push	r29
    6dd6:	1f 92       	push	r1
    6dd8:	cd b7       	in	r28, 0x3d	; 61
    6dda:	de b7       	in	r29, 0x3e	; 62
    6ddc:	89 83       	std	Y+1, r24	; 0x01
	ADC0.CTRLC = ADC_PRESC_DIV64_gc;   /* CLK_PER divided by 4 => 24096 sps */
    6dde:	80 e0       	ldi	r24, 0x00	; 0
    6de0:	96 e0       	ldi	r25, 0x06	; 6
    6de2:	2a e0       	ldi	r18, 0x0A	; 10
    6de4:	fc 01       	movw	r30, r24
    6de6:	22 83       	std	Z+2, r18	; 0x02
	
	if(freerun)
    6de8:	89 81       	ldd	r24, Y+1	; 0x01
    6dea:	88 23       	and	r24, r24
    6dec:	99 f0       	breq	.+38     	; 0x6e14 <_ZL9ADC0_initb+0x42>
	{
		ADC0.CTRLA = ADC_ENABLE_bm /* ADC Enable: enabled */
    6dee:	80 e0       	ldi	r24, 0x00	; 0
    6df0:	96 e0       	ldi	r25, 0x06	; 6
		| ADC_RESSEL_12BIT_gc      /* 12-bit mode */
		| ADC_FREERUN_bm;          /* Enable Free-Run mode */
    6df2:	23 e0       	ldi	r18, 0x03	; 3
    6df4:	fc 01       	movw	r30, r24
    6df6:	20 83       	st	Z, r18
		
		ADC0.INTCTRL = 0x01; /* Enable interrupt */
    6df8:	80 e0       	ldi	r24, 0x00	; 0
    6dfa:	96 e0       	ldi	r25, 0x06	; 6
    6dfc:	21 e0       	ldi	r18, 0x01	; 1
    6dfe:	fc 01       	movw	r30, r24
    6e00:	24 87       	std	Z+12, r18	; 0x0c
		
		ADC0.COMMAND = ADC_STCONV_bm; /* Start conversion */
    6e02:	80 e0       	ldi	r24, 0x00	; 0
    6e04:	96 e0       	ldi	r25, 0x06	; 6
    6e06:	21 e0       	ldi	r18, 0x01	; 1
    6e08:	fc 01       	movw	r30, r24
    6e0a:	22 87       	std	Z+10, r18	; 0x0a
		g_adc_initialization = ADC_FREE_RUN_INITIALIZED;
    6e0c:	81 e0       	ldi	r24, 0x01	; 1
    6e0e:	80 93 d7 47 	sts	0x47D7, r24	; 0x8047d7 <_ZL20g_adc_initialization>
	{
		ADC0.CTRLA = ADC_ENABLE_bm;  /* ADC Enable: enabled; 12-bit mode is default */
		ADC0.INTCTRL = 0x00; /* Disable interrupt */
		g_adc_initialization = ADC_SINGLE_CONVERSION_INITIALIZED;
	}
}
    6e12:	0c c0       	rjmp	.+24     	; 0x6e2c <_ZL9ADC0_initb+0x5a>
		ADC0.COMMAND = ADC_STCONV_bm; /* Start conversion */
		g_adc_initialization = ADC_FREE_RUN_INITIALIZED;
	}
	else
	{
		ADC0.CTRLA = ADC_ENABLE_bm;  /* ADC Enable: enabled; 12-bit mode is default */
    6e14:	80 e0       	ldi	r24, 0x00	; 0
    6e16:	96 e0       	ldi	r25, 0x06	; 6
    6e18:	21 e0       	ldi	r18, 0x01	; 1
    6e1a:	fc 01       	movw	r30, r24
    6e1c:	20 83       	st	Z, r18
		ADC0.INTCTRL = 0x00; /* Disable interrupt */
    6e1e:	80 e0       	ldi	r24, 0x00	; 0
    6e20:	96 e0       	ldi	r25, 0x06	; 6
    6e22:	fc 01       	movw	r30, r24
    6e24:	14 86       	std	Z+12, r1	; 0x0c
		g_adc_initialization = ADC_SINGLE_CONVERSION_INITIALIZED;
    6e26:	82 e0       	ldi	r24, 0x02	; 2
    6e28:	80 93 d7 47 	sts	0x47D7, r24	; 0x8047d7 <_ZL20g_adc_initialization>
	}
}
    6e2c:	00 00       	nop
    6e2e:	0f 90       	pop	r0
    6e30:	df 91       	pop	r29
    6e32:	cf 91       	pop	r28
    6e34:	08 95       	ret

00006e36 <_ZL16ADC0_SYSTEM_initb>:

static void ADC0_SYSTEM_init(bool freerun)
{
    6e36:	cf 93       	push	r28
    6e38:	df 93       	push	r29
    6e3a:	1f 92       	push	r1
    6e3c:	cd b7       	in	r28, 0x3d	; 61
    6e3e:	de b7       	in	r29, 0x3e	; 62
    6e40:	89 83       	std	Y+1, r24	; 0x01
	PORT_init();
    6e42:	0e 94 68 36 	call	0x6cd0	; 0x6cd0 <_ZL9PORT_initv>
	VREF0_init();
    6e46:	0e 94 dc 36 	call	0x6db8	; 0x6db8 <_ZL10VREF0_initv>
	ADC0_init(freerun);
    6e4a:	89 81       	ldd	r24, Y+1	; 0x01
    6e4c:	0e 94 e9 36 	call	0x6dd2	; 0x6dd2 <_ZL9ADC0_initb>
}
    6e50:	00 00       	nop
    6e52:	0f 90       	pop	r0
    6e54:	df 91       	pop	r29
    6e56:	cf 91       	pop	r28
    6e58:	08 95       	ret

00006e5a <_ZL20ADC0_SYSTEM_shutdownv>:

static void ADC0_SYSTEM_shutdown(void)
{
    6e5a:	cf 93       	push	r28
    6e5c:	df 93       	push	r29
    6e5e:	cd b7       	in	r28, 0x3d	; 61
    6e60:	de b7       	in	r29, 0x3e	; 62
	ADC0.INTCTRL = 0x00; /* Disable interrupt */
    6e62:	80 e0       	ldi	r24, 0x00	; 0
    6e64:	96 e0       	ldi	r25, 0x06	; 6
    6e66:	fc 01       	movw	r30, r24
    6e68:	14 86       	std	Z+12, r1	; 0x0c
	ADC0.CTRLA = ADC_RESSEL_12BIT_gc; /* Turn off ADC leaving 12-bit resolution set */
    6e6a:	80 e0       	ldi	r24, 0x00	; 0
    6e6c:	96 e0       	ldi	r25, 0x06	; 6
    6e6e:	fc 01       	movw	r30, r24
    6e70:	10 82       	st	Z, r1
	g_adc_initialization = ADC_NOT_INITIALIZED;
    6e72:	10 92 d7 47 	sts	0x47D7, r1	; 0x8047d7 <_ZL20g_adc_initialization>
}
    6e76:	00 00       	nop
    6e78:	df 91       	pop	r29
    6e7a:	cf 91       	pop	r28
    6e7c:	08 95       	ret

00006e7e <__vector_24>:

ISR(ADC0_RESRDY_vect)
{
    6e7e:	1f 92       	push	r1
    6e80:	0f 92       	push	r0
    6e82:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    6e86:	0f 92       	push	r0
    6e88:	11 24       	eor	r1, r1
    6e8a:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    6e8e:	0f 92       	push	r0
    6e90:	2f 93       	push	r18
    6e92:	3f 93       	push	r19
    6e94:	4f 93       	push	r20
    6e96:	5f 93       	push	r21
    6e98:	6f 93       	push	r22
    6e9a:	7f 93       	push	r23
    6e9c:	8f 93       	push	r24
    6e9e:	9f 93       	push	r25
    6ea0:	af 93       	push	r26
    6ea2:	bf 93       	push	r27
    6ea4:	ef 93       	push	r30
    6ea6:	ff 93       	push	r31
    6ea8:	cf 93       	push	r28
    6eaa:	df 93       	push	r29
    6eac:	00 d0       	rcall	.+0      	; 0x6eae <__vector_24+0x30>
    6eae:	cd b7       	in	r28, 0x3d	; 61
    6eb0:	de b7       	in	r29, 0x3e	; 62
	/* Clear the interrupt flag by reading the result */
	int val = ADC0_read();
    6eb2:	0e 94 90 35 	call	0x6b20	; 0x6b20 <_Z9ADC0_readv>
    6eb6:	89 83       	std	Y+1, r24	; 0x01
    6eb8:	9a 83       	std	Y+2, r25	; 0x02
//	LED_toggle_level();
	if(g_goertzel.DataPoint(val))
    6eba:	89 81       	ldd	r24, Y+1	; 0x01
    6ebc:	9a 81       	ldd	r25, Y+2	; 0x02
    6ebe:	bc 01       	movw	r22, r24
    6ec0:	86 ed       	ldi	r24, 0xD6	; 214
    6ec2:	97 e4       	ldi	r25, 0x47	; 71
    6ec4:	0e 94 17 4e 	call	0x9c2e	; 0x9c2e <_ZN8Goertzel9DataPointEi>
    6ec8:	88 23       	and	r24, r24
    6eca:	21 f0       	breq	.+8      	; 0x6ed4 <__vector_24+0x56>
	{
		ADC0.INTCTRL = 0x00; /* disable ADC interrupt */
    6ecc:	80 e0       	ldi	r24, 0x00	; 0
    6ece:	96 e0       	ldi	r25, 0x06	; 6
    6ed0:	fc 01       	movw	r30, r24
    6ed2:	14 86       	std	Z+12, r1	; 0x0c
	}
    6ed4:	00 00       	nop
    6ed6:	0f 90       	pop	r0
    6ed8:	0f 90       	pop	r0
    6eda:	df 91       	pop	r29
    6edc:	cf 91       	pop	r28
    6ede:	ff 91       	pop	r31
    6ee0:	ef 91       	pop	r30
    6ee2:	bf 91       	pop	r27
    6ee4:	af 91       	pop	r26
    6ee6:	9f 91       	pop	r25
    6ee8:	8f 91       	pop	r24
    6eea:	7f 91       	pop	r23
    6eec:	6f 91       	pop	r22
    6eee:	5f 91       	pop	r21
    6ef0:	4f 91       	pop	r20
    6ef2:	3f 91       	pop	r19
    6ef4:	2f 91       	pop	r18
    6ef6:	0f 90       	pop	r0
    6ef8:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    6efc:	0f 90       	pop	r0
    6efe:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    6f02:	0f 90       	pop	r0
    6f04:	1f 90       	pop	r1
    6f06:	18 95       	reti

00006f08 <_Z41__static_initialization_and_destruction_0ii>:
    6f08:	0f 93       	push	r16
    6f0a:	1f 93       	push	r17
    6f0c:	cf 93       	push	r28
    6f0e:	df 93       	push	r29
    6f10:	00 d0       	rcall	.+0      	; 0x6f12 <_Z41__static_initialization_and_destruction_0ii+0xa>
    6f12:	00 d0       	rcall	.+0      	; 0x6f14 <_Z41__static_initialization_and_destruction_0ii+0xc>
    6f14:	cd b7       	in	r28, 0x3d	; 61
    6f16:	de b7       	in	r29, 0x3e	; 62
    6f18:	89 83       	std	Y+1, r24	; 0x01
    6f1a:	9a 83       	std	Y+2, r25	; 0x02
    6f1c:	6b 83       	std	Y+3, r22	; 0x03
    6f1e:	7c 83       	std	Y+4, r23	; 0x04
    6f20:	89 81       	ldd	r24, Y+1	; 0x01
    6f22:	9a 81       	ldd	r25, Y+2	; 0x02
    6f24:	01 97       	sbiw	r24, 0x01	; 1
    6f26:	91 f4       	brne	.+36     	; 0x6f4c <_Z41__static_initialization_and_destruction_0ii+0x44>
    6f28:	8b 81       	ldd	r24, Y+3	; 0x03
    6f2a:	9c 81       	ldd	r25, Y+4	; 0x04
    6f2c:	01 96       	adiw	r24, 0x01	; 1
    6f2e:	71 f4       	brne	.+28     	; 0x6f4c <_Z41__static_initialization_and_destruction_0ii+0x44>
	
#define FREE_RUNNING true
#define SINGLE_CONVERSION false
	
volatile int16_t g_adcVal;
Goertzel g_goertzel(N, sampling_freq);
    6f30:	80 e0       	ldi	r24, 0x00	; 0
    6f32:	90 e4       	ldi	r25, 0x40	; 64
    6f34:	ac eb       	ldi	r26, 0xBC	; 188
    6f36:	b6 e4       	ldi	r27, 0x46	; 70
    6f38:	8c 01       	movw	r16, r24
    6f3a:	9d 01       	movw	r18, r26
    6f3c:	40 e0       	ldi	r20, 0x00	; 0
    6f3e:	50 e0       	ldi	r21, 0x00	; 0
    6f40:	69 e4       	ldi	r22, 0x49	; 73
    6f42:	73 e4       	ldi	r23, 0x43	; 67
    6f44:	86 ed       	ldi	r24, 0xD6	; 214
    6f46:	97 e4       	ldi	r25, 0x47	; 71
    6f48:	0e 94 6c 4d 	call	0x9ad8	; 0x9ad8 <_ZN8GoertzelC1Eff>
    6f4c:	89 81       	ldd	r24, Y+1	; 0x01
    6f4e:	9a 81       	ldd	r25, Y+2	; 0x02
    6f50:	89 2b       	or	r24, r25
    6f52:	41 f4       	brne	.+16     	; 0x6f64 <_Z41__static_initialization_and_destruction_0ii+0x5c>
    6f54:	8b 81       	ldd	r24, Y+3	; 0x03
    6f56:	9c 81       	ldd	r25, Y+4	; 0x04
    6f58:	01 96       	adiw	r24, 0x01	; 1
    6f5a:	21 f4       	brne	.+8      	; 0x6f64 <_Z41__static_initialization_and_destruction_0ii+0x5c>
    6f5c:	86 ed       	ldi	r24, 0xD6	; 214
    6f5e:	97 e4       	ldi	r25, 0x47	; 71
    6f60:	0e 94 04 4e 	call	0x9c08	; 0x9c08 <_ZN8GoertzelD1Ev>
//	LED_toggle_level();
	if(g_goertzel.DataPoint(val))
	{
		ADC0.INTCTRL = 0x00; /* disable ADC interrupt */
	}
    6f64:	00 00       	nop
    6f66:	24 96       	adiw	r28, 0x04	; 4
    6f68:	cd bf       	out	0x3d, r28	; 61
    6f6a:	de bf       	out	0x3e, r29	; 62
    6f6c:	df 91       	pop	r29
    6f6e:	cf 91       	pop	r28
    6f70:	1f 91       	pop	r17
    6f72:	0f 91       	pop	r16
    6f74:	08 95       	ret

00006f76 <_GLOBAL__sub_I_g_adcVal>:
    6f76:	cf 93       	push	r28
    6f78:	df 93       	push	r29
    6f7a:	cd b7       	in	r28, 0x3d	; 61
    6f7c:	de b7       	in	r29, 0x3e	; 62
    6f7e:	6f ef       	ldi	r22, 0xFF	; 255
    6f80:	7f ef       	ldi	r23, 0xFF	; 255
    6f82:	81 e0       	ldi	r24, 0x01	; 1
    6f84:	90 e0       	ldi	r25, 0x00	; 0
    6f86:	0e 94 84 37 	call	0x6f08	; 0x6f08 <_Z41__static_initialization_and_destruction_0ii>
    6f8a:	df 91       	pop	r29
    6f8c:	cf 91       	pop	r28
    6f8e:	08 95       	ret

00006f90 <_GLOBAL__sub_D_g_adcVal>:
    6f90:	cf 93       	push	r28
    6f92:	df 93       	push	r29
    6f94:	cd b7       	in	r28, 0x3d	; 61
    6f96:	de b7       	in	r29, 0x3e	; 62
    6f98:	6f ef       	ldi	r22, 0xFF	; 255
    6f9a:	7f ef       	ldi	r23, 0xFF	; 255
    6f9c:	80 e0       	ldi	r24, 0x00	; 0
    6f9e:	90 e0       	ldi	r25, 0x00	; 0
    6fa0:	0e 94 84 37 	call	0x6f08	; 0x6f08 <_Z41__static_initialization_and_destruction_0ii>
    6fa4:	df 91       	pop	r29
    6fa6:	cf 91       	pop	r28
    6fa8:	08 95       	ret

00006faa <PORTA_set_pin_pull_mode>:
} //binio

// default destructor
binio::~binio()
{
} //~binio
    6faa:	cf 93       	push	r28
    6fac:	df 93       	push	r29
    6fae:	00 d0       	rcall	.+0      	; 0x6fb0 <PORTA_set_pin_pull_mode+0x6>
    6fb0:	00 d0       	rcall	.+0      	; 0x6fb2 <PORTA_set_pin_pull_mode+0x8>
    6fb2:	cd b7       	in	r28, 0x3d	; 61
    6fb4:	de b7       	in	r29, 0x3e	; 62
    6fb6:	8b 83       	std	Y+3, r24	; 0x03
    6fb8:	6c 83       	std	Y+4, r22	; 0x04
    6fba:	8b 81       	ldd	r24, Y+3	; 0x03
    6fbc:	88 2f       	mov	r24, r24
    6fbe:	90 e0       	ldi	r25, 0x00	; 0
    6fc0:	80 5f       	subi	r24, 0xF0	; 240
    6fc2:	9b 4f       	sbci	r25, 0xFB	; 251
    6fc4:	89 83       	std	Y+1, r24	; 0x01
    6fc6:	9a 83       	std	Y+2, r25	; 0x02
    6fc8:	8c 81       	ldd	r24, Y+4	; 0x04
    6fca:	81 30       	cpi	r24, 0x01	; 1
    6fcc:	59 f4       	brne	.+22     	; 0x6fe4 <PORTA_set_pin_pull_mode+0x3a>
    6fce:	89 81       	ldd	r24, Y+1	; 0x01
    6fd0:	9a 81       	ldd	r25, Y+2	; 0x02
    6fd2:	fc 01       	movw	r30, r24
    6fd4:	80 81       	ld	r24, Z
    6fd6:	28 2f       	mov	r18, r24
    6fd8:	28 60       	ori	r18, 0x08	; 8
    6fda:	89 81       	ldd	r24, Y+1	; 0x01
    6fdc:	9a 81       	ldd	r25, Y+2	; 0x02
    6fde:	fc 01       	movw	r30, r24
    6fe0:	20 83       	st	Z, r18
    6fe2:	0d c0       	rjmp	.+26     	; 0x6ffe <PORTA_set_pin_pull_mode+0x54>
    6fe4:	8c 81       	ldd	r24, Y+4	; 0x04
    6fe6:	88 23       	and	r24, r24
    6fe8:	51 f4       	brne	.+20     	; 0x6ffe <PORTA_set_pin_pull_mode+0x54>
    6fea:	89 81       	ldd	r24, Y+1	; 0x01
    6fec:	9a 81       	ldd	r25, Y+2	; 0x02
    6fee:	fc 01       	movw	r30, r24
    6ff0:	80 81       	ld	r24, Z
    6ff2:	28 2f       	mov	r18, r24
    6ff4:	27 7f       	andi	r18, 0xF7	; 247
    6ff6:	89 81       	ldd	r24, Y+1	; 0x01
    6ff8:	9a 81       	ldd	r25, Y+2	; 0x02
    6ffa:	fc 01       	movw	r30, r24
    6ffc:	20 83       	st	Z, r18
    6ffe:	00 00       	nop
    7000:	24 96       	adiw	r28, 0x04	; 4
    7002:	cd bf       	out	0x3d, r28	; 61
    7004:	de bf       	out	0x3e, r29	; 62
    7006:	df 91       	pop	r29
    7008:	cf 91       	pop	r28
    700a:	08 95       	ret

0000700c <PORTA_pin_set_isc>:
    700c:	cf 93       	push	r28
    700e:	df 93       	push	r29
    7010:	00 d0       	rcall	.+0      	; 0x7012 <PORTA_pin_set_isc+0x6>
    7012:	00 d0       	rcall	.+0      	; 0x7014 <PORTA_pin_set_isc+0x8>
    7014:	cd b7       	in	r28, 0x3d	; 61
    7016:	de b7       	in	r29, 0x3e	; 62
    7018:	8b 83       	std	Y+3, r24	; 0x03
    701a:	6c 83       	std	Y+4, r22	; 0x04
    701c:	8b 81       	ldd	r24, Y+3	; 0x03
    701e:	88 2f       	mov	r24, r24
    7020:	90 e0       	ldi	r25, 0x00	; 0
    7022:	80 5f       	subi	r24, 0xF0	; 240
    7024:	9b 4f       	sbci	r25, 0xFB	; 251
    7026:	89 83       	std	Y+1, r24	; 0x01
    7028:	9a 83       	std	Y+2, r25	; 0x02
    702a:	89 81       	ldd	r24, Y+1	; 0x01
    702c:	9a 81       	ldd	r25, Y+2	; 0x02
    702e:	fc 01       	movw	r30, r24
    7030:	80 81       	ld	r24, Z
    7032:	98 2f       	mov	r25, r24
    7034:	98 7f       	andi	r25, 0xF8	; 248
    7036:	8c 81       	ldd	r24, Y+4	; 0x04
    7038:	89 2b       	or	r24, r25
    703a:	28 2f       	mov	r18, r24
    703c:	89 81       	ldd	r24, Y+1	; 0x01
    703e:	9a 81       	ldd	r25, Y+2	; 0x02
    7040:	fc 01       	movw	r30, r24
    7042:	20 83       	st	Z, r18
    7044:	00 00       	nop
    7046:	24 96       	adiw	r28, 0x04	; 4
    7048:	cd bf       	out	0x3d, r28	; 61
    704a:	de bf       	out	0x3e, r29	; 62
    704c:	df 91       	pop	r29
    704e:	cf 91       	pop	r28
    7050:	08 95       	ret

00007052 <PORTA_set_pin_dir>:
    7052:	cf 93       	push	r28
    7054:	df 93       	push	r29
    7056:	00 d0       	rcall	.+0      	; 0x7058 <PORTA_set_pin_dir+0x6>
    7058:	cd b7       	in	r28, 0x3d	; 61
    705a:	de b7       	in	r29, 0x3e	; 62
    705c:	89 83       	std	Y+1, r24	; 0x01
    705e:	6a 83       	std	Y+2, r22	; 0x02
    7060:	8a 81       	ldd	r24, Y+2	; 0x02
    7062:	88 2f       	mov	r24, r24
    7064:	90 e0       	ldi	r25, 0x00	; 0
    7066:	81 30       	cpi	r24, 0x01	; 1
    7068:	91 05       	cpc	r25, r1
    706a:	e1 f0       	breq	.+56     	; 0x70a4 <PORTA_set_pin_dir+0x52>
    706c:	82 30       	cpi	r24, 0x02	; 2
    706e:	91 05       	cpc	r25, r1
    7070:	71 f1       	breq	.+92     	; 0x70ce <PORTA_set_pin_dir+0x7c>
    7072:	89 2b       	or	r24, r25
    7074:	09 f0       	breq	.+2      	; 0x7078 <PORTA_set_pin_dir+0x26>
    7076:	3b c0       	rjmp	.+118    	; 0x70ee <PORTA_set_pin_dir+0x9c>
    7078:	20 e0       	ldi	r18, 0x00	; 0
    707a:	30 e0       	ldi	r19, 0x00	; 0
    707c:	80 e0       	ldi	r24, 0x00	; 0
    707e:	90 e0       	ldi	r25, 0x00	; 0
    7080:	fc 01       	movw	r30, r24
    7082:	80 81       	ld	r24, Z
    7084:	68 2f       	mov	r22, r24
    7086:	89 81       	ldd	r24, Y+1	; 0x01
    7088:	48 2f       	mov	r20, r24
    708a:	50 e0       	ldi	r21, 0x00	; 0
    708c:	81 e0       	ldi	r24, 0x01	; 1
    708e:	90 e0       	ldi	r25, 0x00	; 0
    7090:	02 c0       	rjmp	.+4      	; 0x7096 <PORTA_set_pin_dir+0x44>
    7092:	88 0f       	add	r24, r24
    7094:	99 1f       	adc	r25, r25
    7096:	4a 95       	dec	r20
    7098:	e2 f7       	brpl	.-8      	; 0x7092 <PORTA_set_pin_dir+0x40>
    709a:	80 95       	com	r24
    709c:	86 23       	and	r24, r22
    709e:	f9 01       	movw	r30, r18
    70a0:	80 83       	st	Z, r24
    70a2:	25 c0       	rjmp	.+74     	; 0x70ee <PORTA_set_pin_dir+0x9c>
    70a4:	20 e0       	ldi	r18, 0x00	; 0
    70a6:	30 e0       	ldi	r19, 0x00	; 0
    70a8:	80 e0       	ldi	r24, 0x00	; 0
    70aa:	90 e0       	ldi	r25, 0x00	; 0
    70ac:	fc 01       	movw	r30, r24
    70ae:	80 81       	ld	r24, Z
    70b0:	68 2f       	mov	r22, r24
    70b2:	89 81       	ldd	r24, Y+1	; 0x01
    70b4:	48 2f       	mov	r20, r24
    70b6:	50 e0       	ldi	r21, 0x00	; 0
    70b8:	81 e0       	ldi	r24, 0x01	; 1
    70ba:	90 e0       	ldi	r25, 0x00	; 0
    70bc:	02 c0       	rjmp	.+4      	; 0x70c2 <PORTA_set_pin_dir+0x70>
    70be:	88 0f       	add	r24, r24
    70c0:	99 1f       	adc	r25, r25
    70c2:	4a 95       	dec	r20
    70c4:	e2 f7       	brpl	.-8      	; 0x70be <PORTA_set_pin_dir+0x6c>
    70c6:	86 2b       	or	r24, r22
    70c8:	f9 01       	movw	r30, r18
    70ca:	80 83       	st	Z, r24
    70cc:	10 c0       	rjmp	.+32     	; 0x70ee <PORTA_set_pin_dir+0x9c>
    70ce:	89 81       	ldd	r24, Y+1	; 0x01
    70d0:	88 2f       	mov	r24, r24
    70d2:	90 e0       	ldi	r25, 0x00	; 0
    70d4:	80 5f       	subi	r24, 0xF0	; 240
    70d6:	9b 4f       	sbci	r25, 0xFB	; 251
    70d8:	29 81       	ldd	r18, Y+1	; 0x01
    70da:	22 2f       	mov	r18, r18
    70dc:	30 e0       	ldi	r19, 0x00	; 0
    70de:	20 5f       	subi	r18, 0xF0	; 240
    70e0:	3b 4f       	sbci	r19, 0xFB	; 251
    70e2:	f9 01       	movw	r30, r18
    70e4:	20 81       	ld	r18, Z
    70e6:	28 60       	ori	r18, 0x08	; 8
    70e8:	fc 01       	movw	r30, r24
    70ea:	20 83       	st	Z, r18
    70ec:	00 00       	nop
    70ee:	00 00       	nop
    70f0:	0f 90       	pop	r0
    70f2:	0f 90       	pop	r0
    70f4:	df 91       	pop	r29
    70f6:	cf 91       	pop	r28
    70f8:	08 95       	ret

000070fa <PORTA_set_pin_level>:
    70fa:	cf 93       	push	r28
    70fc:	df 93       	push	r29
    70fe:	00 d0       	rcall	.+0      	; 0x7100 <PORTA_set_pin_level+0x6>
    7100:	cd b7       	in	r28, 0x3d	; 61
    7102:	de b7       	in	r29, 0x3e	; 62
    7104:	89 83       	std	Y+1, r24	; 0x01
    7106:	6a 83       	std	Y+2, r22	; 0x02
    7108:	8a 81       	ldd	r24, Y+2	; 0x02
    710a:	88 23       	and	r24, r24
    710c:	a9 f0       	breq	.+42     	; 0x7138 <PORTA_set_pin_level+0x3e>
    710e:	20 e0       	ldi	r18, 0x00	; 0
    7110:	30 e0       	ldi	r19, 0x00	; 0
    7112:	80 e0       	ldi	r24, 0x00	; 0
    7114:	90 e0       	ldi	r25, 0x00	; 0
    7116:	fc 01       	movw	r30, r24
    7118:	81 81       	ldd	r24, Z+1	; 0x01
    711a:	68 2f       	mov	r22, r24
    711c:	89 81       	ldd	r24, Y+1	; 0x01
    711e:	48 2f       	mov	r20, r24
    7120:	50 e0       	ldi	r21, 0x00	; 0
    7122:	81 e0       	ldi	r24, 0x01	; 1
    7124:	90 e0       	ldi	r25, 0x00	; 0
    7126:	02 c0       	rjmp	.+4      	; 0x712c <PORTA_set_pin_level+0x32>
    7128:	88 0f       	add	r24, r24
    712a:	99 1f       	adc	r25, r25
    712c:	4a 95       	dec	r20
    712e:	e2 f7       	brpl	.-8      	; 0x7128 <PORTA_set_pin_level+0x2e>
    7130:	86 2b       	or	r24, r22
    7132:	f9 01       	movw	r30, r18
    7134:	81 83       	std	Z+1, r24	; 0x01
    7136:	15 c0       	rjmp	.+42     	; 0x7162 <PORTA_set_pin_level+0x68>
    7138:	20 e0       	ldi	r18, 0x00	; 0
    713a:	30 e0       	ldi	r19, 0x00	; 0
    713c:	80 e0       	ldi	r24, 0x00	; 0
    713e:	90 e0       	ldi	r25, 0x00	; 0
    7140:	fc 01       	movw	r30, r24
    7142:	81 81       	ldd	r24, Z+1	; 0x01
    7144:	68 2f       	mov	r22, r24
    7146:	89 81       	ldd	r24, Y+1	; 0x01
    7148:	48 2f       	mov	r20, r24
    714a:	50 e0       	ldi	r21, 0x00	; 0
    714c:	81 e0       	ldi	r24, 0x01	; 1
    714e:	90 e0       	ldi	r25, 0x00	; 0
    7150:	02 c0       	rjmp	.+4      	; 0x7156 <PORTA_set_pin_level+0x5c>
    7152:	88 0f       	add	r24, r24
    7154:	99 1f       	adc	r25, r25
    7156:	4a 95       	dec	r20
    7158:	e2 f7       	brpl	.-8      	; 0x7152 <PORTA_set_pin_level+0x58>
    715a:	80 95       	com	r24
    715c:	86 23       	and	r24, r22
    715e:	f9 01       	movw	r30, r18
    7160:	81 83       	std	Z+1, r24	; 0x01
    7162:	00 00       	nop
    7164:	0f 90       	pop	r0
    7166:	0f 90       	pop	r0
    7168:	df 91       	pop	r29
    716a:	cf 91       	pop	r28
    716c:	08 95       	ret

0000716e <PORTB_set_pin_dir>:
    716e:	cf 93       	push	r28
    7170:	df 93       	push	r29
    7172:	00 d0       	rcall	.+0      	; 0x7174 <PORTB_set_pin_dir+0x6>
    7174:	cd b7       	in	r28, 0x3d	; 61
    7176:	de b7       	in	r29, 0x3e	; 62
    7178:	89 83       	std	Y+1, r24	; 0x01
    717a:	6a 83       	std	Y+2, r22	; 0x02
    717c:	8a 81       	ldd	r24, Y+2	; 0x02
    717e:	88 2f       	mov	r24, r24
    7180:	90 e0       	ldi	r25, 0x00	; 0
    7182:	81 30       	cpi	r24, 0x01	; 1
    7184:	91 05       	cpc	r25, r1
    7186:	e1 f0       	breq	.+56     	; 0x71c0 <PORTB_set_pin_dir+0x52>
    7188:	82 30       	cpi	r24, 0x02	; 2
    718a:	91 05       	cpc	r25, r1
    718c:	71 f1       	breq	.+92     	; 0x71ea <PORTB_set_pin_dir+0x7c>
    718e:	89 2b       	or	r24, r25
    7190:	09 f0       	breq	.+2      	; 0x7194 <PORTB_set_pin_dir+0x26>
    7192:	3b c0       	rjmp	.+118    	; 0x720a <PORTB_set_pin_dir+0x9c>
    7194:	84 e0       	ldi	r24, 0x04	; 4
    7196:	90 e0       	ldi	r25, 0x00	; 0
    7198:	24 e0       	ldi	r18, 0x04	; 4
    719a:	30 e0       	ldi	r19, 0x00	; 0
    719c:	f9 01       	movw	r30, r18
    719e:	20 81       	ld	r18, Z
    71a0:	62 2f       	mov	r22, r18
    71a2:	29 81       	ldd	r18, Y+1	; 0x01
    71a4:	42 2f       	mov	r20, r18
    71a6:	50 e0       	ldi	r21, 0x00	; 0
    71a8:	21 e0       	ldi	r18, 0x01	; 1
    71aa:	30 e0       	ldi	r19, 0x00	; 0
    71ac:	02 c0       	rjmp	.+4      	; 0x71b2 <PORTB_set_pin_dir+0x44>
    71ae:	22 0f       	add	r18, r18
    71b0:	33 1f       	adc	r19, r19
    71b2:	4a 95       	dec	r20
    71b4:	e2 f7       	brpl	.-8      	; 0x71ae <PORTB_set_pin_dir+0x40>
    71b6:	20 95       	com	r18
    71b8:	26 23       	and	r18, r22
    71ba:	fc 01       	movw	r30, r24
    71bc:	20 83       	st	Z, r18
    71be:	25 c0       	rjmp	.+74     	; 0x720a <PORTB_set_pin_dir+0x9c>
    71c0:	84 e0       	ldi	r24, 0x04	; 4
    71c2:	90 e0       	ldi	r25, 0x00	; 0
    71c4:	24 e0       	ldi	r18, 0x04	; 4
    71c6:	30 e0       	ldi	r19, 0x00	; 0
    71c8:	f9 01       	movw	r30, r18
    71ca:	20 81       	ld	r18, Z
    71cc:	62 2f       	mov	r22, r18
    71ce:	29 81       	ldd	r18, Y+1	; 0x01
    71d0:	42 2f       	mov	r20, r18
    71d2:	50 e0       	ldi	r21, 0x00	; 0
    71d4:	21 e0       	ldi	r18, 0x01	; 1
    71d6:	30 e0       	ldi	r19, 0x00	; 0
    71d8:	02 c0       	rjmp	.+4      	; 0x71de <PORTB_set_pin_dir+0x70>
    71da:	22 0f       	add	r18, r18
    71dc:	33 1f       	adc	r19, r19
    71de:	4a 95       	dec	r20
    71e0:	e2 f7       	brpl	.-8      	; 0x71da <PORTB_set_pin_dir+0x6c>
    71e2:	26 2b       	or	r18, r22
    71e4:	fc 01       	movw	r30, r24
    71e6:	20 83       	st	Z, r18
    71e8:	10 c0       	rjmp	.+32     	; 0x720a <PORTB_set_pin_dir+0x9c>
    71ea:	89 81       	ldd	r24, Y+1	; 0x01
    71ec:	88 2f       	mov	r24, r24
    71ee:	90 e0       	ldi	r25, 0x00	; 0
    71f0:	80 5d       	subi	r24, 0xD0	; 208
    71f2:	9b 4f       	sbci	r25, 0xFB	; 251
    71f4:	29 81       	ldd	r18, Y+1	; 0x01
    71f6:	22 2f       	mov	r18, r18
    71f8:	30 e0       	ldi	r19, 0x00	; 0
    71fa:	20 5d       	subi	r18, 0xD0	; 208
    71fc:	3b 4f       	sbci	r19, 0xFB	; 251
    71fe:	f9 01       	movw	r30, r18
    7200:	20 81       	ld	r18, Z
    7202:	28 60       	ori	r18, 0x08	; 8
    7204:	fc 01       	movw	r30, r24
    7206:	20 83       	st	Z, r18
    7208:	00 00       	nop
    720a:	00 00       	nop
    720c:	0f 90       	pop	r0
    720e:	0f 90       	pop	r0
    7210:	df 91       	pop	r29
    7212:	cf 91       	pop	r28
    7214:	08 95       	ret

00007216 <PORTB_set_pin_level>:
    7216:	cf 93       	push	r28
    7218:	df 93       	push	r29
    721a:	00 d0       	rcall	.+0      	; 0x721c <PORTB_set_pin_level+0x6>
    721c:	cd b7       	in	r28, 0x3d	; 61
    721e:	de b7       	in	r29, 0x3e	; 62
    7220:	89 83       	std	Y+1, r24	; 0x01
    7222:	6a 83       	std	Y+2, r22	; 0x02
    7224:	8a 81       	ldd	r24, Y+2	; 0x02
    7226:	88 23       	and	r24, r24
    7228:	a9 f0       	breq	.+42     	; 0x7254 <PORTB_set_pin_level+0x3e>
    722a:	84 e0       	ldi	r24, 0x04	; 4
    722c:	90 e0       	ldi	r25, 0x00	; 0
    722e:	24 e0       	ldi	r18, 0x04	; 4
    7230:	30 e0       	ldi	r19, 0x00	; 0
    7232:	f9 01       	movw	r30, r18
    7234:	21 81       	ldd	r18, Z+1	; 0x01
    7236:	62 2f       	mov	r22, r18
    7238:	29 81       	ldd	r18, Y+1	; 0x01
    723a:	42 2f       	mov	r20, r18
    723c:	50 e0       	ldi	r21, 0x00	; 0
    723e:	21 e0       	ldi	r18, 0x01	; 1
    7240:	30 e0       	ldi	r19, 0x00	; 0
    7242:	02 c0       	rjmp	.+4      	; 0x7248 <PORTB_set_pin_level+0x32>
    7244:	22 0f       	add	r18, r18
    7246:	33 1f       	adc	r19, r19
    7248:	4a 95       	dec	r20
    724a:	e2 f7       	brpl	.-8      	; 0x7244 <PORTB_set_pin_level+0x2e>
    724c:	26 2b       	or	r18, r22
    724e:	fc 01       	movw	r30, r24
    7250:	21 83       	std	Z+1, r18	; 0x01
    7252:	15 c0       	rjmp	.+42     	; 0x727e <PORTB_set_pin_level+0x68>
    7254:	84 e0       	ldi	r24, 0x04	; 4
    7256:	90 e0       	ldi	r25, 0x00	; 0
    7258:	24 e0       	ldi	r18, 0x04	; 4
    725a:	30 e0       	ldi	r19, 0x00	; 0
    725c:	f9 01       	movw	r30, r18
    725e:	21 81       	ldd	r18, Z+1	; 0x01
    7260:	62 2f       	mov	r22, r18
    7262:	29 81       	ldd	r18, Y+1	; 0x01
    7264:	42 2f       	mov	r20, r18
    7266:	50 e0       	ldi	r21, 0x00	; 0
    7268:	21 e0       	ldi	r18, 0x01	; 1
    726a:	30 e0       	ldi	r19, 0x00	; 0
    726c:	02 c0       	rjmp	.+4      	; 0x7272 <PORTB_set_pin_level+0x5c>
    726e:	22 0f       	add	r18, r18
    7270:	33 1f       	adc	r19, r19
    7272:	4a 95       	dec	r20
    7274:	e2 f7       	brpl	.-8      	; 0x726e <PORTB_set_pin_level+0x58>
    7276:	20 95       	com	r18
    7278:	26 23       	and	r18, r22
    727a:	fc 01       	movw	r30, r24
    727c:	21 83       	std	Z+1, r18	; 0x01
    727e:	00 00       	nop
    7280:	0f 90       	pop	r0
    7282:	0f 90       	pop	r0
    7284:	df 91       	pop	r29
    7286:	cf 91       	pop	r28
    7288:	08 95       	ret

0000728a <PORTC_set_pin_pull_mode>:
    728a:	cf 93       	push	r28
    728c:	df 93       	push	r29
    728e:	00 d0       	rcall	.+0      	; 0x7290 <PORTC_set_pin_pull_mode+0x6>
    7290:	00 d0       	rcall	.+0      	; 0x7292 <PORTC_set_pin_pull_mode+0x8>
    7292:	cd b7       	in	r28, 0x3d	; 61
    7294:	de b7       	in	r29, 0x3e	; 62
    7296:	8b 83       	std	Y+3, r24	; 0x03
    7298:	6c 83       	std	Y+4, r22	; 0x04
    729a:	8b 81       	ldd	r24, Y+3	; 0x03
    729c:	88 2f       	mov	r24, r24
    729e:	90 e0       	ldi	r25, 0x00	; 0
    72a0:	80 5b       	subi	r24, 0xB0	; 176
    72a2:	9b 4f       	sbci	r25, 0xFB	; 251
    72a4:	89 83       	std	Y+1, r24	; 0x01
    72a6:	9a 83       	std	Y+2, r25	; 0x02
    72a8:	8c 81       	ldd	r24, Y+4	; 0x04
    72aa:	81 30       	cpi	r24, 0x01	; 1
    72ac:	59 f4       	brne	.+22     	; 0x72c4 <PORTC_set_pin_pull_mode+0x3a>
    72ae:	89 81       	ldd	r24, Y+1	; 0x01
    72b0:	9a 81       	ldd	r25, Y+2	; 0x02
    72b2:	fc 01       	movw	r30, r24
    72b4:	80 81       	ld	r24, Z
    72b6:	28 2f       	mov	r18, r24
    72b8:	28 60       	ori	r18, 0x08	; 8
    72ba:	89 81       	ldd	r24, Y+1	; 0x01
    72bc:	9a 81       	ldd	r25, Y+2	; 0x02
    72be:	fc 01       	movw	r30, r24
    72c0:	20 83       	st	Z, r18
    72c2:	0d c0       	rjmp	.+26     	; 0x72de <PORTC_set_pin_pull_mode+0x54>
    72c4:	8c 81       	ldd	r24, Y+4	; 0x04
    72c6:	88 23       	and	r24, r24
    72c8:	51 f4       	brne	.+20     	; 0x72de <PORTC_set_pin_pull_mode+0x54>
    72ca:	89 81       	ldd	r24, Y+1	; 0x01
    72cc:	9a 81       	ldd	r25, Y+2	; 0x02
    72ce:	fc 01       	movw	r30, r24
    72d0:	80 81       	ld	r24, Z
    72d2:	28 2f       	mov	r18, r24
    72d4:	27 7f       	andi	r18, 0xF7	; 247
    72d6:	89 81       	ldd	r24, Y+1	; 0x01
    72d8:	9a 81       	ldd	r25, Y+2	; 0x02
    72da:	fc 01       	movw	r30, r24
    72dc:	20 83       	st	Z, r18
    72de:	00 00       	nop
    72e0:	24 96       	adiw	r28, 0x04	; 4
    72e2:	cd bf       	out	0x3d, r28	; 61
    72e4:	de bf       	out	0x3e, r29	; 62
    72e6:	df 91       	pop	r29
    72e8:	cf 91       	pop	r28
    72ea:	08 95       	ret

000072ec <PORTC_pin_set_isc>:
    72ec:	cf 93       	push	r28
    72ee:	df 93       	push	r29
    72f0:	00 d0       	rcall	.+0      	; 0x72f2 <PORTC_pin_set_isc+0x6>
    72f2:	00 d0       	rcall	.+0      	; 0x72f4 <PORTC_pin_set_isc+0x8>
    72f4:	cd b7       	in	r28, 0x3d	; 61
    72f6:	de b7       	in	r29, 0x3e	; 62
    72f8:	8b 83       	std	Y+3, r24	; 0x03
    72fa:	6c 83       	std	Y+4, r22	; 0x04
    72fc:	8b 81       	ldd	r24, Y+3	; 0x03
    72fe:	88 2f       	mov	r24, r24
    7300:	90 e0       	ldi	r25, 0x00	; 0
    7302:	80 5b       	subi	r24, 0xB0	; 176
    7304:	9b 4f       	sbci	r25, 0xFB	; 251
    7306:	89 83       	std	Y+1, r24	; 0x01
    7308:	9a 83       	std	Y+2, r25	; 0x02
    730a:	89 81       	ldd	r24, Y+1	; 0x01
    730c:	9a 81       	ldd	r25, Y+2	; 0x02
    730e:	fc 01       	movw	r30, r24
    7310:	80 81       	ld	r24, Z
    7312:	98 2f       	mov	r25, r24
    7314:	98 7f       	andi	r25, 0xF8	; 248
    7316:	8c 81       	ldd	r24, Y+4	; 0x04
    7318:	89 2b       	or	r24, r25
    731a:	28 2f       	mov	r18, r24
    731c:	89 81       	ldd	r24, Y+1	; 0x01
    731e:	9a 81       	ldd	r25, Y+2	; 0x02
    7320:	fc 01       	movw	r30, r24
    7322:	20 83       	st	Z, r18
    7324:	00 00       	nop
    7326:	24 96       	adiw	r28, 0x04	; 4
    7328:	cd bf       	out	0x3d, r28	; 61
    732a:	de bf       	out	0x3e, r29	; 62
    732c:	df 91       	pop	r29
    732e:	cf 91       	pop	r28
    7330:	08 95       	ret

00007332 <PORTC_set_pin_dir>:
    7332:	cf 93       	push	r28
    7334:	df 93       	push	r29
    7336:	00 d0       	rcall	.+0      	; 0x7338 <PORTC_set_pin_dir+0x6>
    7338:	cd b7       	in	r28, 0x3d	; 61
    733a:	de b7       	in	r29, 0x3e	; 62
    733c:	89 83       	std	Y+1, r24	; 0x01
    733e:	6a 83       	std	Y+2, r22	; 0x02
    7340:	8a 81       	ldd	r24, Y+2	; 0x02
    7342:	88 2f       	mov	r24, r24
    7344:	90 e0       	ldi	r25, 0x00	; 0
    7346:	81 30       	cpi	r24, 0x01	; 1
    7348:	91 05       	cpc	r25, r1
    734a:	e1 f0       	breq	.+56     	; 0x7384 <PORTC_set_pin_dir+0x52>
    734c:	82 30       	cpi	r24, 0x02	; 2
    734e:	91 05       	cpc	r25, r1
    7350:	71 f1       	breq	.+92     	; 0x73ae <PORTC_set_pin_dir+0x7c>
    7352:	89 2b       	or	r24, r25
    7354:	09 f0       	breq	.+2      	; 0x7358 <PORTC_set_pin_dir+0x26>
    7356:	3b c0       	rjmp	.+118    	; 0x73ce <PORTC_set_pin_dir+0x9c>
    7358:	88 e0       	ldi	r24, 0x08	; 8
    735a:	90 e0       	ldi	r25, 0x00	; 0
    735c:	28 e0       	ldi	r18, 0x08	; 8
    735e:	30 e0       	ldi	r19, 0x00	; 0
    7360:	f9 01       	movw	r30, r18
    7362:	20 81       	ld	r18, Z
    7364:	62 2f       	mov	r22, r18
    7366:	29 81       	ldd	r18, Y+1	; 0x01
    7368:	42 2f       	mov	r20, r18
    736a:	50 e0       	ldi	r21, 0x00	; 0
    736c:	21 e0       	ldi	r18, 0x01	; 1
    736e:	30 e0       	ldi	r19, 0x00	; 0
    7370:	02 c0       	rjmp	.+4      	; 0x7376 <PORTC_set_pin_dir+0x44>
    7372:	22 0f       	add	r18, r18
    7374:	33 1f       	adc	r19, r19
    7376:	4a 95       	dec	r20
    7378:	e2 f7       	brpl	.-8      	; 0x7372 <PORTC_set_pin_dir+0x40>
    737a:	20 95       	com	r18
    737c:	26 23       	and	r18, r22
    737e:	fc 01       	movw	r30, r24
    7380:	20 83       	st	Z, r18
    7382:	25 c0       	rjmp	.+74     	; 0x73ce <PORTC_set_pin_dir+0x9c>
    7384:	88 e0       	ldi	r24, 0x08	; 8
    7386:	90 e0       	ldi	r25, 0x00	; 0
    7388:	28 e0       	ldi	r18, 0x08	; 8
    738a:	30 e0       	ldi	r19, 0x00	; 0
    738c:	f9 01       	movw	r30, r18
    738e:	20 81       	ld	r18, Z
    7390:	62 2f       	mov	r22, r18
    7392:	29 81       	ldd	r18, Y+1	; 0x01
    7394:	42 2f       	mov	r20, r18
    7396:	50 e0       	ldi	r21, 0x00	; 0
    7398:	21 e0       	ldi	r18, 0x01	; 1
    739a:	30 e0       	ldi	r19, 0x00	; 0
    739c:	02 c0       	rjmp	.+4      	; 0x73a2 <PORTC_set_pin_dir+0x70>
    739e:	22 0f       	add	r18, r18
    73a0:	33 1f       	adc	r19, r19
    73a2:	4a 95       	dec	r20
    73a4:	e2 f7       	brpl	.-8      	; 0x739e <PORTC_set_pin_dir+0x6c>
    73a6:	26 2b       	or	r18, r22
    73a8:	fc 01       	movw	r30, r24
    73aa:	20 83       	st	Z, r18
    73ac:	10 c0       	rjmp	.+32     	; 0x73ce <PORTC_set_pin_dir+0x9c>
    73ae:	89 81       	ldd	r24, Y+1	; 0x01
    73b0:	88 2f       	mov	r24, r24
    73b2:	90 e0       	ldi	r25, 0x00	; 0
    73b4:	80 5b       	subi	r24, 0xB0	; 176
    73b6:	9b 4f       	sbci	r25, 0xFB	; 251
    73b8:	29 81       	ldd	r18, Y+1	; 0x01
    73ba:	22 2f       	mov	r18, r18
    73bc:	30 e0       	ldi	r19, 0x00	; 0
    73be:	20 5b       	subi	r18, 0xB0	; 176
    73c0:	3b 4f       	sbci	r19, 0xFB	; 251
    73c2:	f9 01       	movw	r30, r18
    73c4:	20 81       	ld	r18, Z
    73c6:	28 60       	ori	r18, 0x08	; 8
    73c8:	fc 01       	movw	r30, r24
    73ca:	20 83       	st	Z, r18
    73cc:	00 00       	nop
    73ce:	00 00       	nop
    73d0:	0f 90       	pop	r0
    73d2:	0f 90       	pop	r0
    73d4:	df 91       	pop	r29
    73d6:	cf 91       	pop	r28
    73d8:	08 95       	ret

000073da <PORTC_set_pin_level>:
    73da:	cf 93       	push	r28
    73dc:	df 93       	push	r29
    73de:	00 d0       	rcall	.+0      	; 0x73e0 <PORTC_set_pin_level+0x6>
    73e0:	cd b7       	in	r28, 0x3d	; 61
    73e2:	de b7       	in	r29, 0x3e	; 62
    73e4:	89 83       	std	Y+1, r24	; 0x01
    73e6:	6a 83       	std	Y+2, r22	; 0x02
    73e8:	8a 81       	ldd	r24, Y+2	; 0x02
    73ea:	88 23       	and	r24, r24
    73ec:	a9 f0       	breq	.+42     	; 0x7418 <PORTC_set_pin_level+0x3e>
    73ee:	88 e0       	ldi	r24, 0x08	; 8
    73f0:	90 e0       	ldi	r25, 0x00	; 0
    73f2:	28 e0       	ldi	r18, 0x08	; 8
    73f4:	30 e0       	ldi	r19, 0x00	; 0
    73f6:	f9 01       	movw	r30, r18
    73f8:	21 81       	ldd	r18, Z+1	; 0x01
    73fa:	62 2f       	mov	r22, r18
    73fc:	29 81       	ldd	r18, Y+1	; 0x01
    73fe:	42 2f       	mov	r20, r18
    7400:	50 e0       	ldi	r21, 0x00	; 0
    7402:	21 e0       	ldi	r18, 0x01	; 1
    7404:	30 e0       	ldi	r19, 0x00	; 0
    7406:	02 c0       	rjmp	.+4      	; 0x740c <PORTC_set_pin_level+0x32>
    7408:	22 0f       	add	r18, r18
    740a:	33 1f       	adc	r19, r19
    740c:	4a 95       	dec	r20
    740e:	e2 f7       	brpl	.-8      	; 0x7408 <PORTC_set_pin_level+0x2e>
    7410:	26 2b       	or	r18, r22
    7412:	fc 01       	movw	r30, r24
    7414:	21 83       	std	Z+1, r18	; 0x01
    7416:	15 c0       	rjmp	.+42     	; 0x7442 <PORTC_set_pin_level+0x68>
    7418:	88 e0       	ldi	r24, 0x08	; 8
    741a:	90 e0       	ldi	r25, 0x00	; 0
    741c:	28 e0       	ldi	r18, 0x08	; 8
    741e:	30 e0       	ldi	r19, 0x00	; 0
    7420:	f9 01       	movw	r30, r18
    7422:	21 81       	ldd	r18, Z+1	; 0x01
    7424:	62 2f       	mov	r22, r18
    7426:	29 81       	ldd	r18, Y+1	; 0x01
    7428:	42 2f       	mov	r20, r18
    742a:	50 e0       	ldi	r21, 0x00	; 0
    742c:	21 e0       	ldi	r18, 0x01	; 1
    742e:	30 e0       	ldi	r19, 0x00	; 0
    7430:	02 c0       	rjmp	.+4      	; 0x7436 <PORTC_set_pin_level+0x5c>
    7432:	22 0f       	add	r18, r18
    7434:	33 1f       	adc	r19, r19
    7436:	4a 95       	dec	r20
    7438:	e2 f7       	brpl	.-8      	; 0x7432 <PORTC_set_pin_level+0x58>
    743a:	20 95       	com	r18
    743c:	26 23       	and	r18, r22
    743e:	fc 01       	movw	r30, r24
    7440:	21 83       	std	Z+1, r18	; 0x01
    7442:	00 00       	nop
    7444:	0f 90       	pop	r0
    7446:	0f 90       	pop	r0
    7448:	df 91       	pop	r29
    744a:	cf 91       	pop	r28
    744c:	08 95       	ret

0000744e <PORTD_set_pin_pull_mode>:
    744e:	cf 93       	push	r28
    7450:	df 93       	push	r29
    7452:	00 d0       	rcall	.+0      	; 0x7454 <PORTD_set_pin_pull_mode+0x6>
    7454:	00 d0       	rcall	.+0      	; 0x7456 <PORTD_set_pin_pull_mode+0x8>
    7456:	cd b7       	in	r28, 0x3d	; 61
    7458:	de b7       	in	r29, 0x3e	; 62
    745a:	8b 83       	std	Y+3, r24	; 0x03
    745c:	6c 83       	std	Y+4, r22	; 0x04
    745e:	8b 81       	ldd	r24, Y+3	; 0x03
    7460:	88 2f       	mov	r24, r24
    7462:	90 e0       	ldi	r25, 0x00	; 0
    7464:	80 59       	subi	r24, 0x90	; 144
    7466:	9b 4f       	sbci	r25, 0xFB	; 251
    7468:	89 83       	std	Y+1, r24	; 0x01
    746a:	9a 83       	std	Y+2, r25	; 0x02
    746c:	8c 81       	ldd	r24, Y+4	; 0x04
    746e:	81 30       	cpi	r24, 0x01	; 1
    7470:	59 f4       	brne	.+22     	; 0x7488 <PORTD_set_pin_pull_mode+0x3a>
    7472:	89 81       	ldd	r24, Y+1	; 0x01
    7474:	9a 81       	ldd	r25, Y+2	; 0x02
    7476:	fc 01       	movw	r30, r24
    7478:	80 81       	ld	r24, Z
    747a:	28 2f       	mov	r18, r24
    747c:	28 60       	ori	r18, 0x08	; 8
    747e:	89 81       	ldd	r24, Y+1	; 0x01
    7480:	9a 81       	ldd	r25, Y+2	; 0x02
    7482:	fc 01       	movw	r30, r24
    7484:	20 83       	st	Z, r18
    7486:	0d c0       	rjmp	.+26     	; 0x74a2 <PORTD_set_pin_pull_mode+0x54>
    7488:	8c 81       	ldd	r24, Y+4	; 0x04
    748a:	88 23       	and	r24, r24
    748c:	51 f4       	brne	.+20     	; 0x74a2 <PORTD_set_pin_pull_mode+0x54>
    748e:	89 81       	ldd	r24, Y+1	; 0x01
    7490:	9a 81       	ldd	r25, Y+2	; 0x02
    7492:	fc 01       	movw	r30, r24
    7494:	80 81       	ld	r24, Z
    7496:	28 2f       	mov	r18, r24
    7498:	27 7f       	andi	r18, 0xF7	; 247
    749a:	89 81       	ldd	r24, Y+1	; 0x01
    749c:	9a 81       	ldd	r25, Y+2	; 0x02
    749e:	fc 01       	movw	r30, r24
    74a0:	20 83       	st	Z, r18
    74a2:	00 00       	nop
    74a4:	24 96       	adiw	r28, 0x04	; 4
    74a6:	cd bf       	out	0x3d, r28	; 61
    74a8:	de bf       	out	0x3e, r29	; 62
    74aa:	df 91       	pop	r29
    74ac:	cf 91       	pop	r28
    74ae:	08 95       	ret

000074b0 <PORTD_pin_set_isc>:
    74b0:	cf 93       	push	r28
    74b2:	df 93       	push	r29
    74b4:	00 d0       	rcall	.+0      	; 0x74b6 <PORTD_pin_set_isc+0x6>
    74b6:	00 d0       	rcall	.+0      	; 0x74b8 <PORTD_pin_set_isc+0x8>
    74b8:	cd b7       	in	r28, 0x3d	; 61
    74ba:	de b7       	in	r29, 0x3e	; 62
    74bc:	8b 83       	std	Y+3, r24	; 0x03
    74be:	6c 83       	std	Y+4, r22	; 0x04
    74c0:	8b 81       	ldd	r24, Y+3	; 0x03
    74c2:	88 2f       	mov	r24, r24
    74c4:	90 e0       	ldi	r25, 0x00	; 0
    74c6:	80 59       	subi	r24, 0x90	; 144
    74c8:	9b 4f       	sbci	r25, 0xFB	; 251
    74ca:	89 83       	std	Y+1, r24	; 0x01
    74cc:	9a 83       	std	Y+2, r25	; 0x02
    74ce:	89 81       	ldd	r24, Y+1	; 0x01
    74d0:	9a 81       	ldd	r25, Y+2	; 0x02
    74d2:	fc 01       	movw	r30, r24
    74d4:	80 81       	ld	r24, Z
    74d6:	98 2f       	mov	r25, r24
    74d8:	98 7f       	andi	r25, 0xF8	; 248
    74da:	8c 81       	ldd	r24, Y+4	; 0x04
    74dc:	89 2b       	or	r24, r25
    74de:	28 2f       	mov	r18, r24
    74e0:	89 81       	ldd	r24, Y+1	; 0x01
    74e2:	9a 81       	ldd	r25, Y+2	; 0x02
    74e4:	fc 01       	movw	r30, r24
    74e6:	20 83       	st	Z, r18
    74e8:	00 00       	nop
    74ea:	24 96       	adiw	r28, 0x04	; 4
    74ec:	cd bf       	out	0x3d, r28	; 61
    74ee:	de bf       	out	0x3e, r29	; 62
    74f0:	df 91       	pop	r29
    74f2:	cf 91       	pop	r28
    74f4:	08 95       	ret

000074f6 <PORTD_set_pin_dir>:
    74f6:	cf 93       	push	r28
    74f8:	df 93       	push	r29
    74fa:	00 d0       	rcall	.+0      	; 0x74fc <PORTD_set_pin_dir+0x6>
    74fc:	cd b7       	in	r28, 0x3d	; 61
    74fe:	de b7       	in	r29, 0x3e	; 62
    7500:	89 83       	std	Y+1, r24	; 0x01
    7502:	6a 83       	std	Y+2, r22	; 0x02
    7504:	8a 81       	ldd	r24, Y+2	; 0x02
    7506:	88 2f       	mov	r24, r24
    7508:	90 e0       	ldi	r25, 0x00	; 0
    750a:	81 30       	cpi	r24, 0x01	; 1
    750c:	91 05       	cpc	r25, r1
    750e:	e1 f0       	breq	.+56     	; 0x7548 <PORTD_set_pin_dir+0x52>
    7510:	82 30       	cpi	r24, 0x02	; 2
    7512:	91 05       	cpc	r25, r1
    7514:	71 f1       	breq	.+92     	; 0x7572 <PORTD_set_pin_dir+0x7c>
    7516:	89 2b       	or	r24, r25
    7518:	09 f0       	breq	.+2      	; 0x751c <PORTD_set_pin_dir+0x26>
    751a:	3b c0       	rjmp	.+118    	; 0x7592 <PORTD_set_pin_dir+0x9c>
    751c:	8c e0       	ldi	r24, 0x0C	; 12
    751e:	90 e0       	ldi	r25, 0x00	; 0
    7520:	2c e0       	ldi	r18, 0x0C	; 12
    7522:	30 e0       	ldi	r19, 0x00	; 0
    7524:	f9 01       	movw	r30, r18
    7526:	20 81       	ld	r18, Z
    7528:	62 2f       	mov	r22, r18
    752a:	29 81       	ldd	r18, Y+1	; 0x01
    752c:	42 2f       	mov	r20, r18
    752e:	50 e0       	ldi	r21, 0x00	; 0
    7530:	21 e0       	ldi	r18, 0x01	; 1
    7532:	30 e0       	ldi	r19, 0x00	; 0
    7534:	02 c0       	rjmp	.+4      	; 0x753a <PORTD_set_pin_dir+0x44>
    7536:	22 0f       	add	r18, r18
    7538:	33 1f       	adc	r19, r19
    753a:	4a 95       	dec	r20
    753c:	e2 f7       	brpl	.-8      	; 0x7536 <PORTD_set_pin_dir+0x40>
    753e:	20 95       	com	r18
    7540:	26 23       	and	r18, r22
    7542:	fc 01       	movw	r30, r24
    7544:	20 83       	st	Z, r18
    7546:	25 c0       	rjmp	.+74     	; 0x7592 <PORTD_set_pin_dir+0x9c>
    7548:	8c e0       	ldi	r24, 0x0C	; 12
    754a:	90 e0       	ldi	r25, 0x00	; 0
    754c:	2c e0       	ldi	r18, 0x0C	; 12
    754e:	30 e0       	ldi	r19, 0x00	; 0
    7550:	f9 01       	movw	r30, r18
    7552:	20 81       	ld	r18, Z
    7554:	62 2f       	mov	r22, r18
    7556:	29 81       	ldd	r18, Y+1	; 0x01
    7558:	42 2f       	mov	r20, r18
    755a:	50 e0       	ldi	r21, 0x00	; 0
    755c:	21 e0       	ldi	r18, 0x01	; 1
    755e:	30 e0       	ldi	r19, 0x00	; 0
    7560:	02 c0       	rjmp	.+4      	; 0x7566 <PORTD_set_pin_dir+0x70>
    7562:	22 0f       	add	r18, r18
    7564:	33 1f       	adc	r19, r19
    7566:	4a 95       	dec	r20
    7568:	e2 f7       	brpl	.-8      	; 0x7562 <PORTD_set_pin_dir+0x6c>
    756a:	26 2b       	or	r18, r22
    756c:	fc 01       	movw	r30, r24
    756e:	20 83       	st	Z, r18
    7570:	10 c0       	rjmp	.+32     	; 0x7592 <PORTD_set_pin_dir+0x9c>
    7572:	89 81       	ldd	r24, Y+1	; 0x01
    7574:	88 2f       	mov	r24, r24
    7576:	90 e0       	ldi	r25, 0x00	; 0
    7578:	80 59       	subi	r24, 0x90	; 144
    757a:	9b 4f       	sbci	r25, 0xFB	; 251
    757c:	29 81       	ldd	r18, Y+1	; 0x01
    757e:	22 2f       	mov	r18, r18
    7580:	30 e0       	ldi	r19, 0x00	; 0
    7582:	20 59       	subi	r18, 0x90	; 144
    7584:	3b 4f       	sbci	r19, 0xFB	; 251
    7586:	f9 01       	movw	r30, r18
    7588:	20 81       	ld	r18, Z
    758a:	28 60       	ori	r18, 0x08	; 8
    758c:	fc 01       	movw	r30, r24
    758e:	20 83       	st	Z, r18
    7590:	00 00       	nop
    7592:	00 00       	nop
    7594:	0f 90       	pop	r0
    7596:	0f 90       	pop	r0
    7598:	df 91       	pop	r29
    759a:	cf 91       	pop	r28
    759c:	08 95       	ret

0000759e <PORTE_set_pin_dir>:
    759e:	cf 93       	push	r28
    75a0:	df 93       	push	r29
    75a2:	00 d0       	rcall	.+0      	; 0x75a4 <PORTE_set_pin_dir+0x6>
    75a4:	cd b7       	in	r28, 0x3d	; 61
    75a6:	de b7       	in	r29, 0x3e	; 62
    75a8:	89 83       	std	Y+1, r24	; 0x01
    75aa:	6a 83       	std	Y+2, r22	; 0x02
    75ac:	8a 81       	ldd	r24, Y+2	; 0x02
    75ae:	88 2f       	mov	r24, r24
    75b0:	90 e0       	ldi	r25, 0x00	; 0
    75b2:	81 30       	cpi	r24, 0x01	; 1
    75b4:	91 05       	cpc	r25, r1
    75b6:	e1 f0       	breq	.+56     	; 0x75f0 <PORTE_set_pin_dir+0x52>
    75b8:	82 30       	cpi	r24, 0x02	; 2
    75ba:	91 05       	cpc	r25, r1
    75bc:	71 f1       	breq	.+92     	; 0x761a <PORTE_set_pin_dir+0x7c>
    75be:	89 2b       	or	r24, r25
    75c0:	09 f0       	breq	.+2      	; 0x75c4 <PORTE_set_pin_dir+0x26>
    75c2:	3b c0       	rjmp	.+118    	; 0x763a <PORTE_set_pin_dir+0x9c>
    75c4:	80 e1       	ldi	r24, 0x10	; 16
    75c6:	90 e0       	ldi	r25, 0x00	; 0
    75c8:	20 e1       	ldi	r18, 0x10	; 16
    75ca:	30 e0       	ldi	r19, 0x00	; 0
    75cc:	f9 01       	movw	r30, r18
    75ce:	20 81       	ld	r18, Z
    75d0:	62 2f       	mov	r22, r18
    75d2:	29 81       	ldd	r18, Y+1	; 0x01
    75d4:	42 2f       	mov	r20, r18
    75d6:	50 e0       	ldi	r21, 0x00	; 0
    75d8:	21 e0       	ldi	r18, 0x01	; 1
    75da:	30 e0       	ldi	r19, 0x00	; 0
    75dc:	02 c0       	rjmp	.+4      	; 0x75e2 <PORTE_set_pin_dir+0x44>
    75de:	22 0f       	add	r18, r18
    75e0:	33 1f       	adc	r19, r19
    75e2:	4a 95       	dec	r20
    75e4:	e2 f7       	brpl	.-8      	; 0x75de <PORTE_set_pin_dir+0x40>
    75e6:	20 95       	com	r18
    75e8:	26 23       	and	r18, r22
    75ea:	fc 01       	movw	r30, r24
    75ec:	20 83       	st	Z, r18
    75ee:	25 c0       	rjmp	.+74     	; 0x763a <PORTE_set_pin_dir+0x9c>
    75f0:	80 e1       	ldi	r24, 0x10	; 16
    75f2:	90 e0       	ldi	r25, 0x00	; 0
    75f4:	20 e1       	ldi	r18, 0x10	; 16
    75f6:	30 e0       	ldi	r19, 0x00	; 0
    75f8:	f9 01       	movw	r30, r18
    75fa:	20 81       	ld	r18, Z
    75fc:	62 2f       	mov	r22, r18
    75fe:	29 81       	ldd	r18, Y+1	; 0x01
    7600:	42 2f       	mov	r20, r18
    7602:	50 e0       	ldi	r21, 0x00	; 0
    7604:	21 e0       	ldi	r18, 0x01	; 1
    7606:	30 e0       	ldi	r19, 0x00	; 0
    7608:	02 c0       	rjmp	.+4      	; 0x760e <PORTE_set_pin_dir+0x70>
    760a:	22 0f       	add	r18, r18
    760c:	33 1f       	adc	r19, r19
    760e:	4a 95       	dec	r20
    7610:	e2 f7       	brpl	.-8      	; 0x760a <PORTE_set_pin_dir+0x6c>
    7612:	26 2b       	or	r18, r22
    7614:	fc 01       	movw	r30, r24
    7616:	20 83       	st	Z, r18
    7618:	10 c0       	rjmp	.+32     	; 0x763a <PORTE_set_pin_dir+0x9c>
    761a:	89 81       	ldd	r24, Y+1	; 0x01
    761c:	88 2f       	mov	r24, r24
    761e:	90 e0       	ldi	r25, 0x00	; 0
    7620:	80 57       	subi	r24, 0x70	; 112
    7622:	9b 4f       	sbci	r25, 0xFB	; 251
    7624:	29 81       	ldd	r18, Y+1	; 0x01
    7626:	22 2f       	mov	r18, r18
    7628:	30 e0       	ldi	r19, 0x00	; 0
    762a:	20 57       	subi	r18, 0x70	; 112
    762c:	3b 4f       	sbci	r19, 0xFB	; 251
    762e:	f9 01       	movw	r30, r18
    7630:	20 81       	ld	r18, Z
    7632:	28 60       	ori	r18, 0x08	; 8
    7634:	fc 01       	movw	r30, r24
    7636:	20 83       	st	Z, r18
    7638:	00 00       	nop
    763a:	00 00       	nop
    763c:	0f 90       	pop	r0
    763e:	0f 90       	pop	r0
    7640:	df 91       	pop	r29
    7642:	cf 91       	pop	r28
    7644:	08 95       	ret

00007646 <PORTF_set_pin_dir>:
    7646:	cf 93       	push	r28
    7648:	df 93       	push	r29
    764a:	00 d0       	rcall	.+0      	; 0x764c <PORTF_set_pin_dir+0x6>
    764c:	cd b7       	in	r28, 0x3d	; 61
    764e:	de b7       	in	r29, 0x3e	; 62
    7650:	89 83       	std	Y+1, r24	; 0x01
    7652:	6a 83       	std	Y+2, r22	; 0x02
    7654:	8a 81       	ldd	r24, Y+2	; 0x02
    7656:	88 2f       	mov	r24, r24
    7658:	90 e0       	ldi	r25, 0x00	; 0
    765a:	81 30       	cpi	r24, 0x01	; 1
    765c:	91 05       	cpc	r25, r1
    765e:	e1 f0       	breq	.+56     	; 0x7698 <PORTF_set_pin_dir+0x52>
    7660:	82 30       	cpi	r24, 0x02	; 2
    7662:	91 05       	cpc	r25, r1
    7664:	71 f1       	breq	.+92     	; 0x76c2 <PORTF_set_pin_dir+0x7c>
    7666:	89 2b       	or	r24, r25
    7668:	09 f0       	breq	.+2      	; 0x766c <PORTF_set_pin_dir+0x26>
    766a:	3b c0       	rjmp	.+118    	; 0x76e2 <PORTF_set_pin_dir+0x9c>
    766c:	84 e1       	ldi	r24, 0x14	; 20
    766e:	90 e0       	ldi	r25, 0x00	; 0
    7670:	24 e1       	ldi	r18, 0x14	; 20
    7672:	30 e0       	ldi	r19, 0x00	; 0
    7674:	f9 01       	movw	r30, r18
    7676:	20 81       	ld	r18, Z
    7678:	62 2f       	mov	r22, r18
    767a:	29 81       	ldd	r18, Y+1	; 0x01
    767c:	42 2f       	mov	r20, r18
    767e:	50 e0       	ldi	r21, 0x00	; 0
    7680:	21 e0       	ldi	r18, 0x01	; 1
    7682:	30 e0       	ldi	r19, 0x00	; 0
    7684:	02 c0       	rjmp	.+4      	; 0x768a <PORTF_set_pin_dir+0x44>
    7686:	22 0f       	add	r18, r18
    7688:	33 1f       	adc	r19, r19
    768a:	4a 95       	dec	r20
    768c:	e2 f7       	brpl	.-8      	; 0x7686 <PORTF_set_pin_dir+0x40>
    768e:	20 95       	com	r18
    7690:	26 23       	and	r18, r22
    7692:	fc 01       	movw	r30, r24
    7694:	20 83       	st	Z, r18
    7696:	25 c0       	rjmp	.+74     	; 0x76e2 <PORTF_set_pin_dir+0x9c>
    7698:	84 e1       	ldi	r24, 0x14	; 20
    769a:	90 e0       	ldi	r25, 0x00	; 0
    769c:	24 e1       	ldi	r18, 0x14	; 20
    769e:	30 e0       	ldi	r19, 0x00	; 0
    76a0:	f9 01       	movw	r30, r18
    76a2:	20 81       	ld	r18, Z
    76a4:	62 2f       	mov	r22, r18
    76a6:	29 81       	ldd	r18, Y+1	; 0x01
    76a8:	42 2f       	mov	r20, r18
    76aa:	50 e0       	ldi	r21, 0x00	; 0
    76ac:	21 e0       	ldi	r18, 0x01	; 1
    76ae:	30 e0       	ldi	r19, 0x00	; 0
    76b0:	02 c0       	rjmp	.+4      	; 0x76b6 <PORTF_set_pin_dir+0x70>
    76b2:	22 0f       	add	r18, r18
    76b4:	33 1f       	adc	r19, r19
    76b6:	4a 95       	dec	r20
    76b8:	e2 f7       	brpl	.-8      	; 0x76b2 <PORTF_set_pin_dir+0x6c>
    76ba:	26 2b       	or	r18, r22
    76bc:	fc 01       	movw	r30, r24
    76be:	20 83       	st	Z, r18
    76c0:	10 c0       	rjmp	.+32     	; 0x76e2 <PORTF_set_pin_dir+0x9c>
    76c2:	89 81       	ldd	r24, Y+1	; 0x01
    76c4:	88 2f       	mov	r24, r24
    76c6:	90 e0       	ldi	r25, 0x00	; 0
    76c8:	80 55       	subi	r24, 0x50	; 80
    76ca:	9b 4f       	sbci	r25, 0xFB	; 251
    76cc:	29 81       	ldd	r18, Y+1	; 0x01
    76ce:	22 2f       	mov	r18, r18
    76d0:	30 e0       	ldi	r19, 0x00	; 0
    76d2:	20 55       	subi	r18, 0x50	; 80
    76d4:	3b 4f       	sbci	r19, 0xFB	; 251
    76d6:	f9 01       	movw	r30, r18
    76d8:	20 81       	ld	r18, Z
    76da:	28 60       	ori	r18, 0x08	; 8
    76dc:	fc 01       	movw	r30, r24
    76de:	20 83       	st	Z, r18
    76e0:	00 00       	nop
    76e2:	00 00       	nop
    76e4:	0f 90       	pop	r0
    76e6:	0f 90       	pop	r0
    76e8:	df 91       	pop	r29
    76ea:	cf 91       	pop	r28
    76ec:	08 95       	ret

000076ee <_Z10fet_driverb>:

void fet_driver(bool state)
{
    76ee:	cf 93       	push	r28
    76f0:	df 93       	push	r29
    76f2:	1f 92       	push	r1
    76f4:	cd b7       	in	r28, 0x3d	; 61
    76f6:	de b7       	in	r29, 0x3e	; 62
    76f8:	89 83       	std	Y+1, r24	; 0x01
	if(state == ON)
    76fa:	89 81       	ldd	r24, Y+1	; 0x01
    76fc:	88 23       	and	r24, r24
    76fe:	29 f0       	breq	.+10     	; 0x770a <_Z10fet_driverb+0x1c>
	{
		PORTA_set_pin_level(FET_DRIVER_ENABLE, HIGH);
    7700:	61 e0       	ldi	r22, 0x01	; 1
    7702:	83 e0       	ldi	r24, 0x03	; 3
    7704:	0e 94 7d 38 	call	0x70fa	; 0x70fa <PORTA_set_pin_level>
	}
	else
	{
		PORTA_set_pin_level(FET_DRIVER_ENABLE, LOW);
	}
}
    7708:	04 c0       	rjmp	.+8      	; 0x7712 <_Z10fet_driverb+0x24>
	{
		PORTA_set_pin_level(FET_DRIVER_ENABLE, HIGH);
	}
	else
	{
		PORTA_set_pin_level(FET_DRIVER_ENABLE, LOW);
    770a:	60 e0       	ldi	r22, 0x00	; 0
    770c:	83 e0       	ldi	r24, 0x03	; 3
    770e:	0e 94 7d 38 	call	0x70fa	; 0x70fa <PORTA_set_pin_level>
	}
}
    7712:	00 00       	nop
    7714:	0f 90       	pop	r0
    7716:	df 91       	pop	r29
    7718:	cf 91       	pop	r28
    771a:	08 95       	ret

0000771c <_Z19final_drain_voltageb>:

void final_drain_voltage(bool state)
{
    771c:	cf 93       	push	r28
    771e:	df 93       	push	r29
    7720:	1f 92       	push	r1
    7722:	cd b7       	in	r28, 0x3d	; 61
    7724:	de b7       	in	r29, 0x3e	; 62
    7726:	89 83       	std	Y+1, r24	; 0x01
	if(state == ON)
    7728:	89 81       	ldd	r24, Y+1	; 0x01
    772a:	88 23       	and	r24, r24
    772c:	29 f0       	breq	.+10     	; 0x7738 <_Z19final_drain_voltageb+0x1c>
	{
		PORTB_set_pin_level(TX_FINAL_VOLTAGE_ENABLE, HIGH);
    772e:	61 e0       	ldi	r22, 0x01	; 1
    7730:	85 e0       	ldi	r24, 0x05	; 5
    7732:	0e 94 0b 39 	call	0x7216	; 0x7216 <PORTB_set_pin_level>
	}
	else
	{
		PORTB_set_pin_level(TX_FINAL_VOLTAGE_ENABLE, LOW);
	}
}
    7736:	04 c0       	rjmp	.+8      	; 0x7740 <_Z19final_drain_voltageb+0x24>
	{
		PORTB_set_pin_level(TX_FINAL_VOLTAGE_ENABLE, HIGH);
	}
	else
	{
		PORTB_set_pin_level(TX_FINAL_VOLTAGE_ENABLE, LOW);
    7738:	60 e0       	ldi	r22, 0x00	; 0
    773a:	85 e0       	ldi	r24, 0x05	; 5
    773c:	0e 94 0b 39 	call	0x7216	; 0x7216 <PORTB_set_pin_level>
	}
}
    7740:	00 00       	nop
    7742:	0f 90       	pop	r0
    7744:	df 91       	pop	r29
    7746:	cf 91       	pop	r28
    7748:	08 95       	ret

0000774a <_Z10BINIO_initv>:
// 	
// 	PORTA.INTFLAGS = 0xFF; /* Clear all flags */
// }

void BINIO_init(void)
{
    774a:	cf 93       	push	r28
    774c:	df 93       	push	r29
    774e:	cd b7       	in	r28, 0x3d	; 61
    7750:	de b7       	in	r29, 0x3e	; 62
	/* PORTA *************************************************************************************/
	
	/* PORTA.PIN0 = TXDO USART */
	/* PORTA.PIN1 = RXD0 USART */
	
	PORTA_set_pin_dir(FAN_ENABLE, PORT_DIR_OUT);
    7752:	61 e0       	ldi	r22, 0x01	; 1
    7754:	81 e0       	ldi	r24, 0x01	; 1
    7756:	0e 94 29 38 	call	0x7052	; 0x7052 <PORTA_set_pin_dir>
	PORTA_set_pin_level(FAN_ENABLE, LOW);
    775a:	60 e0       	ldi	r22, 0x00	; 0
    775c:	81 e0       	ldi	r24, 0x01	; 1
    775e:	0e 94 7d 38 	call	0x70fa	; 0x70fa <PORTA_set_pin_level>
	
	PORTA_set_pin_dir(RTC_SQW, PORT_DIR_IN);
    7762:	60 e0       	ldi	r22, 0x00	; 0
    7764:	82 e0       	ldi	r24, 0x02	; 2
    7766:	0e 94 29 38 	call	0x7052	; 0x7052 <PORTA_set_pin_dir>
	PORTA_set_pin_pull_mode(RTC_SQW, PORT_PULL_UP);
    776a:	61 e0       	ldi	r22, 0x01	; 1
    776c:	82 e0       	ldi	r24, 0x02	; 2
    776e:	0e 94 d5 37 	call	0x6faa	; 0x6faa <PORTA_set_pin_pull_mode>
	PORTA_pin_set_isc(RTC_SQW, PORT_ISC_RISING_gc);
    7772:	62 e0       	ldi	r22, 0x02	; 2
    7774:	82 e0       	ldi	r24, 0x02	; 2
    7776:	0e 94 06 38 	call	0x700c	; 0x700c <PORTA_pin_set_isc>
	
	PORTA_set_pin_dir(FET_DRIVER_ENABLE, PORT_DIR_OUT);
    777a:	61 e0       	ldi	r22, 0x01	; 1
    777c:	83 e0       	ldi	r24, 0x03	; 3
    777e:	0e 94 29 38 	call	0x7052	; 0x7052 <PORTA_set_pin_dir>
	PORTA_set_pin_level(FET_DRIVER_ENABLE, LOW);
    7782:	60 e0       	ldi	r22, 0x00	; 0
    7784:	83 e0       	ldi	r24, 0x03	; 3
    7786:	0e 94 7d 38 	call	0x70fa	; 0x70fa <PORTA_set_pin_level>
	
// 	PORTA_set_pin_dir(ANT_CONNECT_INT, PORT_DIR_IN);
// 	PORTA_set_pin_pull_mode(ANT_CONNECT_INT, PORT_PULL_UP);
// 	PORTA_pin_set_isc(ANT_CONNECT_INT, PORT_ISC_FALLING_gc);

	PORTA_set_pin_dir(WIFI_ENABLE, PORT_DIR_OUT);
    778a:	61 e0       	ldi	r22, 0x01	; 1
    778c:	85 e0       	ldi	r24, 0x05	; 5
    778e:	0e 94 29 38 	call	0x7052	; 0x7052 <PORTA_set_pin_dir>
	PORTA_set_pin_level(WIFI_ENABLE, LOW);
    7792:	60 e0       	ldi	r22, 0x00	; 0
    7794:	85 e0       	ldi	r24, 0x05	; 5
    7796:	0e 94 7d 38 	call	0x70fa	; 0x70fa <PORTA_set_pin_level>
	
	PORTA_set_pin_dir(WIFI_RESET, PORT_DIR_OUT);
    779a:	61 e0       	ldi	r22, 0x01	; 1
    779c:	86 e0       	ldi	r24, 0x06	; 6
    779e:	0e 94 29 38 	call	0x7052	; 0x7052 <PORTA_set_pin_dir>
	PORTA_set_pin_level(WIFI_RESET, LOW);
    77a2:	60 e0       	ldi	r22, 0x00	; 0
    77a4:	86 e0       	ldi	r24, 0x06	; 6
    77a6:	0e 94 7d 38 	call	0x70fa	; 0x70fa <PORTA_set_pin_level>
	
	PORTA_set_pin_dir(V3V3_PWR_ENABLE, PORT_DIR_OUT);
    77aa:	61 e0       	ldi	r22, 0x01	; 1
    77ac:	87 e0       	ldi	r24, 0x07	; 7
    77ae:	0e 94 29 38 	call	0x7052	; 0x7052 <PORTA_set_pin_dir>
	PORTA_set_pin_level(V3V3_PWR_ENABLE, LOW);
    77b2:	60 e0       	ldi	r22, 0x00	; 0
    77b4:	87 e0       	ldi	r24, 0x07	; 7
    77b6:	0e 94 7d 38 	call	0x70fa	; 0x70fa <PORTA_set_pin_level>
	
	/* PORTB *************************************************************************************/

	PORTB_set_pin_dir(PROC_PTT_OUT, PORT_DIR_OUT);
    77ba:	61 e0       	ldi	r22, 0x01	; 1
    77bc:	80 e0       	ldi	r24, 0x00	; 0
    77be:	0e 94 b7 38 	call	0x716e	; 0x716e <PORTB_set_pin_dir>
	PORTB_set_pin_level(PROC_PTT_OUT, LOW);
    77c2:	60 e0       	ldi	r22, 0x00	; 0
    77c4:	80 e0       	ldi	r24, 0x00	; 0
    77c6:	0e 94 0b 39 	call	0x7216	; 0x7216 <PORTB_set_pin_level>
	
	PORTB_set_pin_dir(PROC_TONE_OUT, PORT_DIR_OUT);
    77ca:	61 e0       	ldi	r22, 0x01	; 1
    77cc:	81 e0       	ldi	r24, 0x01	; 1
    77ce:	0e 94 b7 38 	call	0x716e	; 0x716e <PORTB_set_pin_dir>
	PORTB_set_pin_level(PROC_TONE_OUT, LOW);
    77d2:	60 e0       	ldi	r22, 0x00	; 0
    77d4:	81 e0       	ldi	r24, 0x01	; 1
    77d6:	0e 94 0b 39 	call	0x7216	; 0x7216 <PORTB_set_pin_level>
	
	/* PORTB.PIN2 = SDA1 I2C */
	/* PORTB.PIN3 = SCL1 I2C */
	PORTB_set_pin_dir(MAIN_PWR_ENABLE, PORT_DIR_OUT);
    77da:	61 e0       	ldi	r22, 0x01	; 1
    77dc:	84 e0       	ldi	r24, 0x04	; 4
    77de:	0e 94 b7 38 	call	0x716e	; 0x716e <PORTB_set_pin_dir>
	PORTB_set_pin_level(MAIN_PWR_ENABLE, LOW);
    77e2:	60 e0       	ldi	r22, 0x00	; 0
    77e4:	84 e0       	ldi	r24, 0x04	; 4
    77e6:	0e 94 0b 39 	call	0x7216	; 0x7216 <PORTB_set_pin_level>
	
	PORTB_set_pin_dir(TX_FINAL_VOLTAGE_ENABLE, PORT_DIR_OUT);
    77ea:	61 e0       	ldi	r22, 0x01	; 1
    77ec:	85 e0       	ldi	r24, 0x05	; 5
    77ee:	0e 94 b7 38 	call	0x716e	; 0x716e <PORTB_set_pin_dir>
	PORTB_set_pin_level(TX_FINAL_VOLTAGE_ENABLE, LOW);
    77f2:	60 e0       	ldi	r22, 0x00	; 0
    77f4:	85 e0       	ldi	r24, 0x05	; 5
    77f6:	0e 94 0b 39 	call	0x7216	; 0x7216 <PORTB_set_pin_level>
	/* PORTC.PIN0 = TXD1 USART TO_WIFI_RX */
	/* PORTC.PIN1 = RXD1 USART FROM_WIFI_TX */
	/* PORTC.PIN2 = SDA0 I2C */
	/* PORTC.PIN3 = SCL0 I2C */

	PORTC_set_pin_dir(LED_GREEN, PORT_DIR_OUT);
    77fa:	61 e0       	ldi	r22, 0x01	; 1
    77fc:	85 e0       	ldi	r24, 0x05	; 5
    77fe:	0e 94 99 39 	call	0x7332	; 0x7332 <PORTC_set_pin_dir>
	PORTC_set_pin_level(LED_GREEN, LOW);
    7802:	60 e0       	ldi	r22, 0x00	; 0
    7804:	85 e0       	ldi	r24, 0x05	; 5
    7806:	0e 94 ed 39 	call	0x73da	; 0x73da <PORTC_set_pin_level>
	
	PORTC_set_pin_dir(LED_RED, PORT_DIR_OUT);
    780a:	61 e0       	ldi	r22, 0x01	; 1
    780c:	86 e0       	ldi	r24, 0x06	; 6
    780e:	0e 94 99 39 	call	0x7332	; 0x7332 <PORTC_set_pin_dir>
	PORTC_set_pin_level(LED_RED, LOW);
    7812:	60 e0       	ldi	r22, 0x00	; 0
    7814:	86 e0       	ldi	r24, 0x06	; 6
    7816:	0e 94 ed 39 	call	0x73da	; 0x73da <PORTC_set_pin_level>
	
	PORTC_set_pin_dir(SWITCH, PORT_DIR_IN);
    781a:	60 e0       	ldi	r22, 0x00	; 0
    781c:	87 e0       	ldi	r24, 0x07	; 7
    781e:	0e 94 99 39 	call	0x7332	; 0x7332 <PORTC_set_pin_dir>
	PORTC_set_pin_pull_mode(SWITCH, PORT_PULL_UP);
    7822:	61 e0       	ldi	r22, 0x01	; 1
    7824:	87 e0       	ldi	r24, 0x07	; 7
    7826:	0e 94 45 39 	call	0x728a	; 0x728a <PORTC_set_pin_pull_mode>
	PORTC_pin_set_isc(SWITCH, PORT_ISC_RISING_gc);
    782a:	62 e0       	ldi	r22, 0x02	; 2
    782c:	87 e0       	ldi	r24, 0x07	; 7
    782e:	0e 94 76 39 	call	0x72ec	; 0x72ec <PORTC_pin_set_isc>
	
	/* PORTD *************************************************************************************/
	PORTD_set_pin_dir(X80M_ANTENNA_DETECT_V, PORT_DIR_IN); /* use ADC for reading voltage at antenna detect pin */
    7832:	60 e0       	ldi	r22, 0x00	; 0
    7834:	80 e0       	ldi	r24, 0x00	; 0
    7836:	0e 94 7b 3a 	call	0x74f6	; 0x74f6 <PORTD_set_pin_dir>
	
	PORTD_set_pin_dir(X80M_ANTENNA_DETECT, PORT_DIR_IN);
    783a:	60 e0       	ldi	r22, 0x00	; 0
    783c:	81 e0       	ldi	r24, 0x01	; 1
    783e:	0e 94 7b 3a 	call	0x74f6	; 0x74f6 <PORTD_set_pin_dir>
	PORTD_set_pin_pull_mode(X80M_ANTENNA_DETECT, PORT_PULL_UP);
    7842:	61 e0       	ldi	r22, 0x01	; 1
    7844:	81 e0       	ldi	r24, 0x01	; 1
    7846:	0e 94 27 3a 	call	0x744e	; 0x744e <PORTD_set_pin_pull_mode>
	PORTD_pin_set_isc(X80M_ANTENNA_DETECT, PORT_ISC_BOTHEDGES_gc);
    784a:	61 e0       	ldi	r22, 0x01	; 1
    784c:	81 e0       	ldi	r24, 0x01	; 1
    784e:	0e 94 58 3a 	call	0x74b0	; 0x74b0 <PORTD_pin_set_isc>
	/* PORTD.PIN3 = ACD3 Audio in TX_BATTERY_VOLTAGE */
	/* PORTD.PIN4 = ACD4 Audio in TX_12_VOLTAGE */
	/* PORTD.PIN5 = ACD5 Audio in TX_PA_VOLTAGE */
	/* PORTD.PIN6 = DAC0 voltage out DAC_OUTPUT */
	
	PORTD_set_pin_dir(WIFI_MODULE_DETECT, PORT_DIR_IN); /* Detect presence of Huzzah module */
    7852:	60 e0       	ldi	r22, 0x00	; 0
    7854:	87 e0       	ldi	r24, 0x07	; 7
    7856:	0e 94 7b 3a 	call	0x74f6	; 0x74f6 <PORTD_set_pin_dir>
	PORTD_set_pin_pull_mode(WIFI_MODULE_DETECT, PORT_PULL_OFF);
    785a:	60 e0       	ldi	r22, 0x00	; 0
    785c:	87 e0       	ldi	r24, 0x07	; 7
    785e:	0e 94 27 3a 	call	0x744e	; 0x744e <PORTD_set_pin_pull_mode>

	/* PORTE *************************************************************************************/
	PORTE_set_pin_dir(0, PORT_DIR_OFF); /* Unused */
    7862:	62 e0       	ldi	r22, 0x02	; 2
    7864:	80 e0       	ldi	r24, 0x00	; 0
    7866:	0e 94 cf 3a 	call	0x759e	; 0x759e <PORTE_set_pin_dir>
	PORTE_set_pin_dir(1, PORT_DIR_OFF); /* Unused */
    786a:	62 e0       	ldi	r22, 0x02	; 2
    786c:	81 e0       	ldi	r24, 0x01	; 1
    786e:	0e 94 cf 3a 	call	0x759e	; 0x759e <PORTE_set_pin_dir>
	PORTE_set_pin_dir(2, PORT_DIR_OFF); /* Unused */
    7872:	62 e0       	ldi	r22, 0x02	; 2
    7874:	82 e0       	ldi	r24, 0x02	; 2
    7876:	0e 94 cf 3a 	call	0x759e	; 0x759e <PORTE_set_pin_dir>
	PORTE_set_pin_dir(3, PORT_DIR_OFF); /* Unused */
    787a:	62 e0       	ldi	r22, 0x02	; 2
    787c:	83 e0       	ldi	r24, 0x03	; 3
    787e:	0e 94 cf 3a 	call	0x759e	; 0x759e <PORTE_set_pin_dir>

	/* PORTF *************************************************************************************/
	PORTF_set_pin_dir(X32KHZ_SQUAREWAVE, PORT_DIR_OFF);	
    7882:	62 e0       	ldi	r22, 0x02	; 2
    7884:	80 e0       	ldi	r24, 0x00	; 0
    7886:	0e 94 23 3b 	call	0x7646	; 0x7646 <PORTF_set_pin_dir>
	PORTF_set_pin_dir(1, PORT_DIR_OFF);	/* Unused */
    788a:	62 e0       	ldi	r22, 0x02	; 2
    788c:	81 e0       	ldi	r24, 0x01	; 1
    788e:	0e 94 23 3b 	call	0x7646	; 0x7646 <PORTF_set_pin_dir>
	PORTF_set_pin_dir(2, PORT_DIR_OFF); /* Unused */
    7892:	62 e0       	ldi	r22, 0x02	; 2
    7894:	82 e0       	ldi	r24, 0x02	; 2
    7896:	0e 94 23 3b 	call	0x7646	; 0x7646 <PORTF_set_pin_dir>
	PORTF_set_pin_dir(3, PORT_DIR_OFF); /* Unused */
    789a:	62 e0       	ldi	r22, 0x02	; 2
    789c:	83 e0       	ldi	r24, 0x03	; 3
    789e:	0e 94 23 3b 	call	0x7646	; 0x7646 <PORTF_set_pin_dir>
	PORTF_set_pin_dir(4, PORT_DIR_OFF); /* Unused */
    78a2:	62 e0       	ldi	r22, 0x02	; 2
    78a4:	84 e0       	ldi	r24, 0x04	; 4
    78a6:	0e 94 23 3b 	call	0x7646	; 0x7646 <PORTF_set_pin_dir>
	PORTF_set_pin_dir(5, PORT_DIR_OFF); /* Unused */
    78aa:	62 e0       	ldi	r22, 0x02	; 2
    78ac:	85 e0       	ldi	r24, 0x05	; 5
    78ae:	0e 94 23 3b 	call	0x7646	; 0x7646 <PORTF_set_pin_dir>
	/* PORTF.PIN6 = Reset */
	
	/* PORT Pin Interrupts */
	PORTA.PIN2CTRL = 0x0A; /* Enable RTC SQW 1-sec interrupts */
    78b2:	80 e0       	ldi	r24, 0x00	; 0
    78b4:	94 e0       	ldi	r25, 0x04	; 4
    78b6:	2a e0       	ldi	r18, 0x0A	; 10
    78b8:	fc 01       	movw	r30, r24
    78ba:	22 8b       	std	Z+18, r18	; 0x12
	PORTD.PIN1CTRL = 0x09; /* Enable antenna change interrupts */
    78bc:	80 e6       	ldi	r24, 0x60	; 96
    78be:	94 e0       	ldi	r25, 0x04	; 4
    78c0:	29 e0       	ldi	r18, 0x09	; 9
    78c2:	fc 01       	movw	r30, r24
    78c4:	21 8b       	std	Z+17, r18	; 0x11
}
    78c6:	00 00       	nop
    78c8:	df 91       	pop	r29
    78ca:	cf 91       	pop	r28
    78cc:	08 95       	ret

000078ce <BOD_init>:
 * \brief Initialize Brownout Detector
 *
 * \return Initialization status.
 */
int8_t BOD_init()
{
    78ce:	cf 93       	push	r28
    78d0:	df 93       	push	r29
    78d2:	cd b7       	in	r28, 0x3d	; 61
    78d4:	de b7       	in	r29, 0x3e	; 62

	// ccp_write_io((void*)&(BOD.CTRLA),BOD_SLEEP_DIS_gc /* Disabled */);

	BOD.INTCTRL = 0 << BOD_VLMIE_bp        /* voltage level monitor interrrupt enable: disabled */
    78d6:	80 e8       	ldi	r24, 0x80	; 128
    78d8:	90 e0       	ldi	r25, 0x00	; 0
	              | BOD_VLMCFG_FALLING_gc; /* Interrupt when supply goes below VLM level */
    78da:	fc 01       	movw	r30, r24
    78dc:	11 86       	std	Z+9, r1	; 0x09

	// BOD.VLMCTRLA = BOD_VLMLVL_5ABOVE_gc; /* VLM threshold 5% above BOD level */

	return 0;
    78de:	80 e0       	ldi	r24, 0x00	; 0
}
    78e0:	df 91       	pop	r29
    78e2:	cf 91       	pop	r28
    78e4:	08 95       	ret

000078e6 <ccp_write_io>:
 * \note Using IAR Embedded workbench, the choice of memory model has an impact
 *       on calling convention. The memory model is not visible to the
 *       preprocessor, so it must be defined in the Assembler preprocessor directives.
 */
static inline void ccp_write_io(void *addr, uint8_t value)
{
    78e6:	cf 93       	push	r28
    78e8:	df 93       	push	r29
    78ea:	00 d0       	rcall	.+0      	; 0x78ec <ccp_write_io+0x6>
    78ec:	1f 92       	push	r1
    78ee:	cd b7       	in	r28, 0x3d	; 61
    78f0:	de b7       	in	r29, 0x3e	; 62
    78f2:	89 83       	std	Y+1, r24	; 0x01
    78f4:	9a 83       	std	Y+2, r25	; 0x02
    78f6:	6b 83       	std	Y+3, r22	; 0x03
	protected_write_io(addr, CCP_IOREG_gc, value);
    78f8:	89 81       	ldd	r24, Y+1	; 0x01
    78fa:	9a 81       	ldd	r25, Y+2	; 0x02
    78fc:	4b 81       	ldd	r20, Y+3	; 0x03
    78fe:	68 ed       	ldi	r22, 0xD8	; 216
    7900:	0e 94 67 5f 	call	0xbece	; 0xbece <protected_write_io>
}
    7904:	00 00       	nop
    7906:	23 96       	adiw	r28, 0x03	; 3
    7908:	cd bf       	out	0x3d, r28	; 61
    790a:	de bf       	out	0x3e, r29	; 62
    790c:	df 91       	pop	r29
    790e:	cf 91       	pop	r28
    7910:	08 95       	ret

00007912 <CLKCTRL_init>:
 * \brief Initialize clkctrl interface
 *
 * \return Initialization status.
 */
int8_t CLKCTRL_init()
{
    7912:	cf 93       	push	r28
    7914:	df 93       	push	r29
    7916:	cd b7       	in	r28, 0x3d	; 61
    7918:	de b7       	in	r29, 0x3e	; 62
	//		 | CLKCTRL_MULFAC_DISABLE_gc /* 1 */
	//		 | 0 << CLKCTRL_SOURCE_bp /* Select Source for PLL: disabled */);

	ccp_write_io((void*)&(CLKCTRL.OSCHFCTRLA),CLKCTRL_FRQSEL_24M_gc /* 4 */
			 | 0 << CLKCTRL_AUTOTUNE_bp /* Auto-Tune enable: disabled */
			 | 0 << CLKCTRL_RUNSTDBY_bp /* Run standby: disabled */);
    791a:	64 e2       	ldi	r22, 0x24	; 36
    791c:	88 e6       	ldi	r24, 0x68	; 104
    791e:	90 e0       	ldi	r25, 0x00	; 0
    7920:	0e 94 73 3c 	call	0x78e6	; 0x78e6 <ccp_write_io>
	// ccp_write_io((void*)&(CLKCTRL.MCLKCTRLA),CLKCTRL_CLKSEL_OSCHF_gc /* Internal high-frequency oscillator */
	//		 | 0 << CLKCTRL_CLKOUT_bp /* System clock out: disabled */);

	// ccp_write_io((void*)&(CLKCTRL.MCLKLOCK),0 << CLKCTRL_LOCKEN_bp /* lock enable: disabled */);

	return 0;
    7924:	80 e0       	ldi	r24, 0x00	; 0
}
    7926:	df 91       	pop	r29
    7928:	cf 91       	pop	r28
    792a:	08 95       	ret

0000792c <CPUINT_init>:
 * \brief Initialize cpuint interface
 *
 * \return Initialization status
 */
int8_t CPUINT_init()
{
    792c:	cf 93       	push	r28
    792e:	df 93       	push	r29
    7930:	cd b7       	in	r28, 0x3d	; 61
    7932:	de b7       	in	r29, 0x3e	; 62

	// CPUINT.LVL0PRI = 0x0 << CPUINT_LVL0PRI_gp; /* Interrupt Level Priority: 0x0 */

	// CPUINT.LVL1VEC = 0x0 << CPUINT_LVL1VEC_gp; /* Interrupt Vector with High Priority: 0x0 */

	ENABLE_INTERRUPTS();
    7934:	78 94       	sei

	return 0;
    7936:	80 e0       	ldi	r24, 0x00	; 0
}
    7938:	df 91       	pop	r29
    793a:	cf 91       	pop	r28
    793c:	08 95       	ret

0000793e <_ZL9VREF_initv>:
#define LSB_MASK                 (0x03)



static void VREF_init(void)
{
    793e:	cf 93       	push	r28
    7940:	df 93       	push	r29
    7942:	cd b7       	in	r28, 0x3d	; 61
    7944:	de b7       	in	r29, 0x3e	; 62
//	VREF.DAC0REF = VREF_REFSEL_VDD_gc; /* Select the 2.048V Internal Voltage Reference for DAC */
//	VREF.DAC0REF = VREF_REFSEL_2V048_gc; /* Select the 2.048V Internal Voltage Reference for DAC */
	VREF.DAC0REF = VREF_REFSEL_2V500_gc; /* Select the 2.048V Internal Voltage Reference for DAC */
    7946:	80 ea       	ldi	r24, 0xA0	; 160
    7948:	90 e0       	ldi	r25, 0x00	; 0
    794a:	23 e0       	ldi	r18, 0x03	; 3
    794c:	fc 01       	movw	r30, r24
    794e:	22 83       	std	Z+2, r18	; 0x02
//	| VREF_ALWAYSON_bm;    /* Set the Voltage Reference in Always On mode */
//	VREF.DAC0REF = VREF_REFSEL_2V500_gc; /* Select the 2.048V Internal Voltage Reference for DAC */
	/* Wait VREF start-up time */
	while(util_delay_ms(VREF_STARTUP_TIME_MS));
    7950:	6a e0       	ldi	r22, 0x0A	; 10
    7952:	70 e0       	ldi	r23, 0x00	; 0
    7954:	80 e0       	ldi	r24, 0x00	; 0
    7956:	90 e0       	ldi	r25, 0x00	; 0
    7958:	0e 94 2f 6e 	call	0xdc5e	; 0xdc5e <util_delay_ms>
    795c:	88 23       	and	r24, r24
    795e:	09 f0       	breq	.+2      	; 0x7962 <_ZL9VREF_initv+0x24>
    7960:	f7 cf       	rjmp	.-18     	; 0x7950 <_ZL9VREF_initv+0x12>
}
    7962:	00 00       	nop
    7964:	df 91       	pop	r29
    7966:	cf 91       	pop	r28
    7968:	08 95       	ret

0000796a <_Z9DAC0_initv>:

void DAC0_init(void)
{
    796a:	cf 93       	push	r28
    796c:	df 93       	push	r29
    796e:	cd b7       	in	r28, 0x3d	; 61
    7970:	de b7       	in	r29, 0x3e	; 62
	VREF_init();
    7972:	0e 94 9f 3c 	call	0x793e	; 0x793e <_ZL9VREF_initv>
	
    /* Disable digital input buffer */
    PORTD.PIN6CTRL &= ~PORT_ISC_gm;
    7976:	80 e6       	ldi	r24, 0x60	; 96
    7978:	94 e0       	ldi	r25, 0x04	; 4
    797a:	20 e6       	ldi	r18, 0x60	; 96
    797c:	34 e0       	ldi	r19, 0x04	; 4
    797e:	f9 01       	movw	r30, r18
    7980:	26 89       	ldd	r18, Z+22	; 0x16
    7982:	28 7f       	andi	r18, 0xF8	; 248
    7984:	fc 01       	movw	r30, r24
    7986:	26 8b       	std	Z+22, r18	; 0x16
    PORTD.PIN6CTRL |= PORT_ISC_INPUT_DISABLE_gc;
    7988:	80 e6       	ldi	r24, 0x60	; 96
    798a:	94 e0       	ldi	r25, 0x04	; 4
    798c:	20 e6       	ldi	r18, 0x60	; 96
    798e:	34 e0       	ldi	r19, 0x04	; 4
    7990:	f9 01       	movw	r30, r18
    7992:	26 89       	ldd	r18, Z+22	; 0x16
    7994:	24 60       	ori	r18, 0x04	; 4
    7996:	fc 01       	movw	r30, r24
    7998:	26 8b       	std	Z+22, r18	; 0x16
    /* Disable pull-up resistor */
    PORTD.PIN6CTRL &= ~PORT_PULLUPEN_bm;   
    799a:	80 e6       	ldi	r24, 0x60	; 96
    799c:	94 e0       	ldi	r25, 0x04	; 4
    799e:	20 e6       	ldi	r18, 0x60	; 96
    79a0:	34 e0       	ldi	r19, 0x04	; 4
    79a2:	f9 01       	movw	r30, r18
    79a4:	26 89       	ldd	r18, Z+22	; 0x16
    79a6:	27 7f       	andi	r18, 0xF7	; 247
    79a8:	fc 01       	movw	r30, r24
    79aa:	26 8b       	std	Z+22, r18	; 0x16
    DAC0.CTRLA = DAC_ENABLE_bm          /* Enable DAC */
    79ac:	80 ea       	ldi	r24, 0xA0	; 160
    79ae:	96 e0       	ldi	r25, 0x06	; 6
               | DAC_OUTEN_bm           /* Enable output buffer */
               | DAC_RUNSTDBY_bm;       /* Enable Run in Standby mode */
    79b0:	21 ec       	ldi	r18, 0xC1	; 193
    79b2:	fc 01       	movw	r30, r24
    79b4:	20 83       	st	Z, r18
// 	PORTD.PIN6CTRL &= ~PORT_PULLUPEN_bm;
// 	DAC0.CTRLA = DAC_ENABLE_bm          /* Enable DAC */
// 	| DAC_OUTEN_bm;           /* Enable output buffer */
// 	
// 	DAC0_setVal(DAC_DEFAULT_VALUE);
}
    79b6:	00 00       	nop
    79b8:	df 91       	pop	r29
    79ba:	cf 91       	pop	r28
    79bc:	08 95       	ret

000079be <_Z11DAC0_setValj>:

void DAC0_setVal(uint16_t value)
{
    79be:	cf 93       	push	r28
    79c0:	df 93       	push	r29
    79c2:	00 d0       	rcall	.+0      	; 0x79c4 <_Z11DAC0_setValj+0x6>
    79c4:	cd b7       	in	r28, 0x3d	; 61
    79c6:	de b7       	in	r29, 0x3e	; 62
    79c8:	89 83       	std	Y+1, r24	; 0x01
    79ca:	9a 83       	std	Y+2, r25	; 0x02
	/* Store the two LSbs in DAC0.DATAL */
	DAC0.DATAL = (value & LSB_MASK) << 6;
    79cc:	80 ea       	ldi	r24, 0xA0	; 160
    79ce:	96 e0       	ldi	r25, 0x06	; 6
    79d0:	29 81       	ldd	r18, Y+1	; 0x01
    79d2:	22 95       	swap	r18
    79d4:	22 0f       	add	r18, r18
    79d6:	22 0f       	add	r18, r18
    79d8:	20 7c       	andi	r18, 0xC0	; 192
    79da:	fc 01       	movw	r30, r24
    79dc:	22 83       	std	Z+2, r18	; 0x02
	/* Store the eight MSbs in DAC0.DATAH */
	DAC0.DATAH = value >> 2;
    79de:	80 ea       	ldi	r24, 0xA0	; 160
    79e0:	96 e0       	ldi	r25, 0x06	; 6
    79e2:	29 81       	ldd	r18, Y+1	; 0x01
    79e4:	3a 81       	ldd	r19, Y+2	; 0x02
    79e6:	36 95       	lsr	r19
    79e8:	27 95       	ror	r18
    79ea:	36 95       	lsr	r19
    79ec:	27 95       	ror	r18
    79ee:	fc 01       	movw	r30, r24
    79f0:	23 83       	std	Z+3, r18	; 0x03
}
    79f2:	00 00       	nop
    79f4:	0f 90       	pop	r0
    79f6:	0f 90       	pop	r0
    79f8:	df 91       	pop	r29
    79fa:	cf 91       	pop	r28
    79fc:	08 95       	ret

000079fe <PORTC_set_pin_dir>:
 *                      PORT_DIR_OUT = Data direction out
 *                      PORT_DIR_OFF = Disables the pin
 *                      (low power state)
 */
static inline void PORTC_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
    79fe:	cf 93       	push	r28
    7a00:	df 93       	push	r29
    7a02:	00 d0       	rcall	.+0      	; 0x7a04 <PORTC_set_pin_dir+0x6>
    7a04:	cd b7       	in	r28, 0x3d	; 61
    7a06:	de b7       	in	r29, 0x3e	; 62
    7a08:	89 83       	std	Y+1, r24	; 0x01
    7a0a:	6a 83       	std	Y+2, r22	; 0x02
	switch (dir) {
    7a0c:	8a 81       	ldd	r24, Y+2	; 0x02
    7a0e:	88 2f       	mov	r24, r24
    7a10:	90 e0       	ldi	r25, 0x00	; 0
    7a12:	81 30       	cpi	r24, 0x01	; 1
    7a14:	91 05       	cpc	r25, r1
    7a16:	e1 f0       	breq	.+56     	; 0x7a50 <PORTC_set_pin_dir+0x52>
    7a18:	82 30       	cpi	r24, 0x02	; 2
    7a1a:	91 05       	cpc	r25, r1
    7a1c:	71 f1       	breq	.+92     	; 0x7a7a <PORTC_set_pin_dir+0x7c>
    7a1e:	89 2b       	or	r24, r25
    7a20:	09 f0       	breq	.+2      	; 0x7a24 <PORTC_set_pin_dir+0x26>
		break;
	case PORT_DIR_OFF:
		*((uint8_t *)&PORTC + 0x10 + pin) |= 1 << PORT_PULLUPEN_bp;
		break;
	default:
		break;
    7a22:	3b c0       	rjmp	.+118    	; 0x7a9a <PORTC_set_pin_dir+0x9c>
 */
static inline void PORTC_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTC.DIR &= ~(1 << pin);
    7a24:	88 e0       	ldi	r24, 0x08	; 8
    7a26:	90 e0       	ldi	r25, 0x00	; 0
    7a28:	28 e0       	ldi	r18, 0x08	; 8
    7a2a:	30 e0       	ldi	r19, 0x00	; 0
    7a2c:	f9 01       	movw	r30, r18
    7a2e:	20 81       	ld	r18, Z
    7a30:	62 2f       	mov	r22, r18
    7a32:	29 81       	ldd	r18, Y+1	; 0x01
    7a34:	42 2f       	mov	r20, r18
    7a36:	50 e0       	ldi	r21, 0x00	; 0
    7a38:	21 e0       	ldi	r18, 0x01	; 1
    7a3a:	30 e0       	ldi	r19, 0x00	; 0
    7a3c:	02 c0       	rjmp	.+4      	; 0x7a42 <PORTC_set_pin_dir+0x44>
    7a3e:	22 0f       	add	r18, r18
    7a40:	33 1f       	adc	r19, r19
    7a42:	4a 95       	dec	r20
    7a44:	e2 f7       	brpl	.-8      	; 0x7a3e <PORTC_set_pin_dir+0x40>
    7a46:	20 95       	com	r18
    7a48:	26 23       	and	r18, r22
    7a4a:	fc 01       	movw	r30, r24
    7a4c:	20 83       	st	Z, r18
		break;
    7a4e:	25 c0       	rjmp	.+74     	; 0x7a9a <PORTC_set_pin_dir+0x9c>
	case PORT_DIR_OUT:
		VPORTC.DIR |= (1 << pin);
    7a50:	88 e0       	ldi	r24, 0x08	; 8
    7a52:	90 e0       	ldi	r25, 0x00	; 0
    7a54:	28 e0       	ldi	r18, 0x08	; 8
    7a56:	30 e0       	ldi	r19, 0x00	; 0
    7a58:	f9 01       	movw	r30, r18
    7a5a:	20 81       	ld	r18, Z
    7a5c:	62 2f       	mov	r22, r18
    7a5e:	29 81       	ldd	r18, Y+1	; 0x01
    7a60:	42 2f       	mov	r20, r18
    7a62:	50 e0       	ldi	r21, 0x00	; 0
    7a64:	21 e0       	ldi	r18, 0x01	; 1
    7a66:	30 e0       	ldi	r19, 0x00	; 0
    7a68:	02 c0       	rjmp	.+4      	; 0x7a6e <PORTC_set_pin_dir+0x70>
    7a6a:	22 0f       	add	r18, r18
    7a6c:	33 1f       	adc	r19, r19
    7a6e:	4a 95       	dec	r20
    7a70:	e2 f7       	brpl	.-8      	; 0x7a6a <PORTC_set_pin_dir+0x6c>
    7a72:	26 2b       	or	r18, r22
    7a74:	fc 01       	movw	r30, r24
    7a76:	20 83       	st	Z, r18
		break;
    7a78:	10 c0       	rjmp	.+32     	; 0x7a9a <PORTC_set_pin_dir+0x9c>
	case PORT_DIR_OFF:
		*((uint8_t *)&PORTC + 0x10 + pin) |= 1 << PORT_PULLUPEN_bp;
    7a7a:	89 81       	ldd	r24, Y+1	; 0x01
    7a7c:	88 2f       	mov	r24, r24
    7a7e:	90 e0       	ldi	r25, 0x00	; 0
    7a80:	80 5b       	subi	r24, 0xB0	; 176
    7a82:	9b 4f       	sbci	r25, 0xFB	; 251
    7a84:	29 81       	ldd	r18, Y+1	; 0x01
    7a86:	22 2f       	mov	r18, r18
    7a88:	30 e0       	ldi	r19, 0x00	; 0
    7a8a:	20 5b       	subi	r18, 0xB0	; 176
    7a8c:	3b 4f       	sbci	r19, 0xFB	; 251
    7a8e:	f9 01       	movw	r30, r18
    7a90:	20 81       	ld	r18, Z
    7a92:	28 60       	ori	r18, 0x08	; 8
    7a94:	fc 01       	movw	r30, r24
    7a96:	20 83       	st	Z, r18
		break;
    7a98:	00 00       	nop
	default:
		break;
	}
}
    7a9a:	00 00       	nop
    7a9c:	0f 90       	pop	r0
    7a9e:	0f 90       	pop	r0
    7aa0:	df 91       	pop	r29
    7aa2:	cf 91       	pop	r28
    7aa4:	08 95       	ret

00007aa6 <PORTC_set_pin_level>:
 * \param[in] pin       The pin number within port
 * \param[in] level true  = Pin level set to "high" state
 *                  false = Pin level set to "low" state
 */
static inline void PORTC_set_pin_level(const uint8_t pin, const bool level)
{
    7aa6:	cf 93       	push	r28
    7aa8:	df 93       	push	r29
    7aaa:	00 d0       	rcall	.+0      	; 0x7aac <PORTC_set_pin_level+0x6>
    7aac:	cd b7       	in	r28, 0x3d	; 61
    7aae:	de b7       	in	r29, 0x3e	; 62
    7ab0:	89 83       	std	Y+1, r24	; 0x01
    7ab2:	6a 83       	std	Y+2, r22	; 0x02
	if (level == true) {
    7ab4:	8a 81       	ldd	r24, Y+2	; 0x02
    7ab6:	88 23       	and	r24, r24
    7ab8:	a9 f0       	breq	.+42     	; 0x7ae4 <PORTC_set_pin_level+0x3e>
		VPORTC.OUT |= (1 << pin);
    7aba:	88 e0       	ldi	r24, 0x08	; 8
    7abc:	90 e0       	ldi	r25, 0x00	; 0
    7abe:	28 e0       	ldi	r18, 0x08	; 8
    7ac0:	30 e0       	ldi	r19, 0x00	; 0
    7ac2:	f9 01       	movw	r30, r18
    7ac4:	21 81       	ldd	r18, Z+1	; 0x01
    7ac6:	62 2f       	mov	r22, r18
    7ac8:	29 81       	ldd	r18, Y+1	; 0x01
    7aca:	42 2f       	mov	r20, r18
    7acc:	50 e0       	ldi	r21, 0x00	; 0
    7ace:	21 e0       	ldi	r18, 0x01	; 1
    7ad0:	30 e0       	ldi	r19, 0x00	; 0
    7ad2:	02 c0       	rjmp	.+4      	; 0x7ad8 <PORTC_set_pin_level+0x32>
    7ad4:	22 0f       	add	r18, r18
    7ad6:	33 1f       	adc	r19, r19
    7ad8:	4a 95       	dec	r20
    7ada:	e2 f7       	brpl	.-8      	; 0x7ad4 <PORTC_set_pin_level+0x2e>
    7adc:	26 2b       	or	r18, r22
    7ade:	fc 01       	movw	r30, r24
    7ae0:	21 83       	std	Z+1, r18	; 0x01
	} else {
		VPORTC.OUT &= ~(1 << pin);
	}
}
    7ae2:	15 c0       	rjmp	.+42     	; 0x7b0e <PORTC_set_pin_level+0x68>
static inline void PORTC_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTC.OUT |= (1 << pin);
	} else {
		VPORTC.OUT &= ~(1 << pin);
    7ae4:	88 e0       	ldi	r24, 0x08	; 8
    7ae6:	90 e0       	ldi	r25, 0x00	; 0
    7ae8:	28 e0       	ldi	r18, 0x08	; 8
    7aea:	30 e0       	ldi	r19, 0x00	; 0
    7aec:	f9 01       	movw	r30, r18
    7aee:	21 81       	ldd	r18, Z+1	; 0x01
    7af0:	62 2f       	mov	r22, r18
    7af2:	29 81       	ldd	r18, Y+1	; 0x01
    7af4:	42 2f       	mov	r20, r18
    7af6:	50 e0       	ldi	r21, 0x00	; 0
    7af8:	21 e0       	ldi	r18, 0x01	; 1
    7afa:	30 e0       	ldi	r19, 0x00	; 0
    7afc:	02 c0       	rjmp	.+4      	; 0x7b02 <PORTC_set_pin_level+0x5c>
    7afe:	22 0f       	add	r18, r18
    7b00:	33 1f       	adc	r19, r19
    7b02:	4a 95       	dec	r20
    7b04:	e2 f7       	brpl	.-8      	; 0x7afe <PORTC_set_pin_level+0x58>
    7b06:	20 95       	com	r18
    7b08:	26 23       	and	r18, r22
    7b0a:	fc 01       	movw	r30, r24
    7b0c:	21 83       	std	Z+1, r18	; 0x01
	}
}
    7b0e:	00 00       	nop
    7b10:	0f 90       	pop	r0
    7b12:	0f 90       	pop	r0
    7b14:	df 91       	pop	r29
    7b16:	cf 91       	pop	r28
    7b18:	08 95       	ret

00007b1a <_ZL15LED_set_RED_dir8port_dir>:
 *                      PORT_DIR_OUT = Data direction out
 *                      PORT_DIR_OFF = Disables the pin
 *                      (low power state)
 */
static inline void LED_set_RED_dir(const enum port_dir dir)
{
    7b1a:	cf 93       	push	r28
    7b1c:	df 93       	push	r29
    7b1e:	1f 92       	push	r1
    7b20:	cd b7       	in	r28, 0x3d	; 61
    7b22:	de b7       	in	r29, 0x3e	; 62
    7b24:	89 83       	std	Y+1, r24	; 0x01
	PORTC_set_pin_dir(6, dir);
    7b26:	69 81       	ldd	r22, Y+1	; 0x01
    7b28:	86 e0       	ldi	r24, 0x06	; 6
    7b2a:	0e 94 ff 3c 	call	0x79fe	; 0x79fe <PORTC_set_pin_dir>
}
    7b2e:	00 00       	nop
    7b30:	0f 90       	pop	r0
    7b32:	df 91       	pop	r29
    7b34:	cf 91       	pop	r28
    7b36:	08 95       	ret

00007b38 <_ZL17LED_set_GREEN_dir8port_dir>:
 *                      PORT_DIR_OUT = Data direction out
 *                      PORT_DIR_OFF = Disables the pin
 *                      (low power state)
 */
static inline void LED_set_GREEN_dir(const enum port_dir dir)
{
    7b38:	cf 93       	push	r28
    7b3a:	df 93       	push	r29
    7b3c:	1f 92       	push	r1
    7b3e:	cd b7       	in	r28, 0x3d	; 61
    7b40:	de b7       	in	r29, 0x3e	; 62
    7b42:	89 83       	std	Y+1, r24	; 0x01
	PORTC_set_pin_dir(5, dir);
    7b44:	69 81       	ldd	r22, Y+1	; 0x01
    7b46:	85 e0       	ldi	r24, 0x05	; 5
    7b48:	0e 94 ff 3c 	call	0x79fe	; 0x79fe <PORTC_set_pin_dir>
}
    7b4c:	00 00       	nop
    7b4e:	0f 90       	pop	r0
    7b50:	df 91       	pop	r29
    7b52:	cf 91       	pop	r28
    7b54:	08 95       	ret

00007b56 <_ZL17LED_set_RED_levelb>:
 *
 * \param[in] level true  = Pin level set to "high" state
 *                  false = Pin level set to "low" state
 */
static inline void LED_set_RED_level(const bool level)
{
    7b56:	cf 93       	push	r28
    7b58:	df 93       	push	r29
    7b5a:	1f 92       	push	r1
    7b5c:	cd b7       	in	r28, 0x3d	; 61
    7b5e:	de b7       	in	r29, 0x3e	; 62
    7b60:	89 83       	std	Y+1, r24	; 0x01
	PORTC_set_pin_level(6, level); /* Low == LED off */
    7b62:	69 81       	ldd	r22, Y+1	; 0x01
    7b64:	86 e0       	ldi	r24, 0x06	; 6
    7b66:	0e 94 53 3d 	call	0x7aa6	; 0x7aa6 <PORTC_set_pin_level>
}
    7b6a:	00 00       	nop
    7b6c:	0f 90       	pop	r0
    7b6e:	df 91       	pop	r29
    7b70:	cf 91       	pop	r28
    7b72:	08 95       	ret

00007b74 <_ZL19LED_set_GREEN_levelb>:
 *
 * \param[in] level true  = Pin level set to "high" state
 *                  false = Pin level set to "low" state
 */
static inline void LED_set_GREEN_level(const bool level)
{
    7b74:	cf 93       	push	r28
    7b76:	df 93       	push	r29
    7b78:	1f 92       	push	r1
    7b7a:	cd b7       	in	r28, 0x3d	; 61
    7b7c:	de b7       	in	r29, 0x3e	; 62
    7b7e:	89 83       	std	Y+1, r24	; 0x01
	PORTC_set_pin_level(5, level); /* Low == LED off */
    7b80:	69 81       	ldd	r22, Y+1	; 0x01
    7b82:	85 e0       	ldi	r24, 0x05	; 5
    7b84:	0e 94 53 3d 	call	0x7aa6	; 0x7aa6 <PORTC_set_pin_level>
}
    7b88:	00 00       	nop
    7b8a:	0f 90       	pop	r0
    7b8c:	df 91       	pop	r29
    7b8e:	cf 91       	pop	r28
    7b90:	08 95       	ret

00007b92 <mcu_init>:
#ifdef __cplusplus
extern "C" {
#endif

void mcu_init(void)
{
    7b92:	cf 93       	push	r28
    7b94:	df 93       	push	r29
    7b96:	cd b7       	in	r28, 0x3d	; 61
    7b98:	de b7       	in	r29, 0x3e	; 62
    7b9a:	26 97       	sbiw	r28, 0x06	; 6
    7b9c:	cd bf       	out	0x3d, r28	; 61
    7b9e:	de bf       	out	0x3e, r29	; 62
	 * disables all peripherals to save power. Driver shall enable
	 * peripheral if used */

	/* Set all pins to low power mode */

	for (uint8_t i = 0; i < 8; i++) {
    7ba0:	19 82       	std	Y+1, r1	; 0x01
    7ba2:	89 81       	ldd	r24, Y+1	; 0x01
    7ba4:	88 30       	cpi	r24, 0x08	; 8
    7ba6:	98 f4       	brcc	.+38     	; 0x7bce <mcu_init+0x3c>
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    7ba8:	89 81       	ldd	r24, Y+1	; 0x01
    7baa:	88 2f       	mov	r24, r24
    7bac:	90 e0       	ldi	r25, 0x00	; 0
    7bae:	80 5f       	subi	r24, 0xF0	; 240
    7bb0:	9b 4f       	sbci	r25, 0xFB	; 251
    7bb2:	29 81       	ldd	r18, Y+1	; 0x01
    7bb4:	22 2f       	mov	r18, r18
    7bb6:	30 e0       	ldi	r19, 0x00	; 0
    7bb8:	20 5f       	subi	r18, 0xF0	; 240
    7bba:	3b 4f       	sbci	r19, 0xFB	; 251
    7bbc:	f9 01       	movw	r30, r18
    7bbe:	20 81       	ld	r18, Z
    7bc0:	28 60       	ori	r18, 0x08	; 8
    7bc2:	fc 01       	movw	r30, r24
    7bc4:	20 83       	st	Z, r18
	 * disables all peripherals to save power. Driver shall enable
	 * peripheral if used */

	/* Set all pins to low power mode */

	for (uint8_t i = 0; i < 8; i++) {
    7bc6:	89 81       	ldd	r24, Y+1	; 0x01
    7bc8:	8f 5f       	subi	r24, 0xFF	; 255
    7bca:	89 83       	std	Y+1, r24	; 0x01
    7bcc:	ea cf       	rjmp	.-44     	; 0x7ba2 <mcu_init+0x10>
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    7bce:	1a 82       	std	Y+2, r1	; 0x02
    7bd0:	8a 81       	ldd	r24, Y+2	; 0x02
    7bd2:	88 30       	cpi	r24, 0x08	; 8
    7bd4:	98 f4       	brcc	.+38     	; 0x7bfc <mcu_init+0x6a>
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    7bd6:	8a 81       	ldd	r24, Y+2	; 0x02
    7bd8:	88 2f       	mov	r24, r24
    7bda:	90 e0       	ldi	r25, 0x00	; 0
    7bdc:	80 5d       	subi	r24, 0xD0	; 208
    7bde:	9b 4f       	sbci	r25, 0xFB	; 251
    7be0:	2a 81       	ldd	r18, Y+2	; 0x02
    7be2:	22 2f       	mov	r18, r18
    7be4:	30 e0       	ldi	r19, 0x00	; 0
    7be6:	20 5d       	subi	r18, 0xD0	; 208
    7be8:	3b 4f       	sbci	r19, 0xFB	; 251
    7bea:	f9 01       	movw	r30, r18
    7bec:	20 81       	ld	r18, Z
    7bee:	28 60       	ori	r18, 0x08	; 8
    7bf0:	fc 01       	movw	r30, r24
    7bf2:	20 83       	st	Z, r18

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    7bf4:	8a 81       	ldd	r24, Y+2	; 0x02
    7bf6:	8f 5f       	subi	r24, 0xFF	; 255
    7bf8:	8a 83       	std	Y+2, r24	; 0x02
    7bfa:	ea cf       	rjmp	.-44     	; 0x7bd0 <mcu_init+0x3e>
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    7bfc:	1b 82       	std	Y+3, r1	; 0x03
    7bfe:	8b 81       	ldd	r24, Y+3	; 0x03
    7c00:	88 30       	cpi	r24, 0x08	; 8
    7c02:	98 f4       	brcc	.+38     	; 0x7c2a <mcu_init+0x98>
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    7c04:	8b 81       	ldd	r24, Y+3	; 0x03
    7c06:	88 2f       	mov	r24, r24
    7c08:	90 e0       	ldi	r25, 0x00	; 0
    7c0a:	80 5b       	subi	r24, 0xB0	; 176
    7c0c:	9b 4f       	sbci	r25, 0xFB	; 251
    7c0e:	2b 81       	ldd	r18, Y+3	; 0x03
    7c10:	22 2f       	mov	r18, r18
    7c12:	30 e0       	ldi	r19, 0x00	; 0
    7c14:	20 5b       	subi	r18, 0xB0	; 176
    7c16:	3b 4f       	sbci	r19, 0xFB	; 251
    7c18:	f9 01       	movw	r30, r18
    7c1a:	20 81       	ld	r18, Z
    7c1c:	28 60       	ori	r18, 0x08	; 8
    7c1e:	fc 01       	movw	r30, r24
    7c20:	20 83       	st	Z, r18

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    7c22:	8b 81       	ldd	r24, Y+3	; 0x03
    7c24:	8f 5f       	subi	r24, 0xFF	; 255
    7c26:	8b 83       	std	Y+3, r24	; 0x03
    7c28:	ea cf       	rjmp	.-44     	; 0x7bfe <mcu_init+0x6c>
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    7c2a:	1c 82       	std	Y+4, r1	; 0x04
    7c2c:	8c 81       	ldd	r24, Y+4	; 0x04
    7c2e:	88 30       	cpi	r24, 0x08	; 8
    7c30:	98 f4       	brcc	.+38     	; 0x7c58 <mcu_init+0xc6>
		*((uint8_t *)&PORTD + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    7c32:	8c 81       	ldd	r24, Y+4	; 0x04
    7c34:	88 2f       	mov	r24, r24
    7c36:	90 e0       	ldi	r25, 0x00	; 0
    7c38:	80 59       	subi	r24, 0x90	; 144
    7c3a:	9b 4f       	sbci	r25, 0xFB	; 251
    7c3c:	2c 81       	ldd	r18, Y+4	; 0x04
    7c3e:	22 2f       	mov	r18, r18
    7c40:	30 e0       	ldi	r19, 0x00	; 0
    7c42:	20 59       	subi	r18, 0x90	; 144
    7c44:	3b 4f       	sbci	r19, 0xFB	; 251
    7c46:	f9 01       	movw	r30, r18
    7c48:	20 81       	ld	r18, Z
    7c4a:	28 60       	ori	r18, 0x08	; 8
    7c4c:	fc 01       	movw	r30, r24
    7c4e:	20 83       	st	Z, r18

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    7c50:	8c 81       	ldd	r24, Y+4	; 0x04
    7c52:	8f 5f       	subi	r24, 0xFF	; 255
    7c54:	8c 83       	std	Y+4, r24	; 0x04
    7c56:	ea cf       	rjmp	.-44     	; 0x7c2c <mcu_init+0x9a>
		*((uint8_t *)&PORTD + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    7c58:	1d 82       	std	Y+5, r1	; 0x05
    7c5a:	8d 81       	ldd	r24, Y+5	; 0x05
    7c5c:	88 30       	cpi	r24, 0x08	; 8
    7c5e:	98 f4       	brcc	.+38     	; 0x7c86 <mcu_init+0xf4>
		*((uint8_t *)&PORTE + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    7c60:	8d 81       	ldd	r24, Y+5	; 0x05
    7c62:	88 2f       	mov	r24, r24
    7c64:	90 e0       	ldi	r25, 0x00	; 0
    7c66:	80 57       	subi	r24, 0x70	; 112
    7c68:	9b 4f       	sbci	r25, 0xFB	; 251
    7c6a:	2d 81       	ldd	r18, Y+5	; 0x05
    7c6c:	22 2f       	mov	r18, r18
    7c6e:	30 e0       	ldi	r19, 0x00	; 0
    7c70:	20 57       	subi	r18, 0x70	; 112
    7c72:	3b 4f       	sbci	r19, 0xFB	; 251
    7c74:	f9 01       	movw	r30, r18
    7c76:	20 81       	ld	r18, Z
    7c78:	28 60       	ori	r18, 0x08	; 8
    7c7a:	fc 01       	movw	r30, r24
    7c7c:	20 83       	st	Z, r18

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTD + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    7c7e:	8d 81       	ldd	r24, Y+5	; 0x05
    7c80:	8f 5f       	subi	r24, 0xFF	; 255
    7c82:	8d 83       	std	Y+5, r24	; 0x05
    7c84:	ea cf       	rjmp	.-44     	; 0x7c5a <mcu_init+0xc8>
		*((uint8_t *)&PORTE + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    7c86:	1e 82       	std	Y+6, r1	; 0x06
    7c88:	8e 81       	ldd	r24, Y+6	; 0x06
    7c8a:	88 30       	cpi	r24, 0x08	; 8
    7c8c:	98 f4       	brcc	.+38     	; 0x7cb4 <mcu_init+0x122>
		*((uint8_t *)&PORTF + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    7c8e:	8e 81       	ldd	r24, Y+6	; 0x06
    7c90:	88 2f       	mov	r24, r24
    7c92:	90 e0       	ldi	r25, 0x00	; 0
    7c94:	80 55       	subi	r24, 0x50	; 80
    7c96:	9b 4f       	sbci	r25, 0xFB	; 251
    7c98:	2e 81       	ldd	r18, Y+6	; 0x06
    7c9a:	22 2f       	mov	r18, r18
    7c9c:	30 e0       	ldi	r19, 0x00	; 0
    7c9e:	20 55       	subi	r18, 0x50	; 80
    7ca0:	3b 4f       	sbci	r19, 0xFB	; 251
    7ca2:	f9 01       	movw	r30, r18
    7ca4:	20 81       	ld	r18, Z
    7ca6:	28 60       	ori	r18, 0x08	; 8
    7ca8:	fc 01       	movw	r30, r24
    7caa:	20 83       	st	Z, r18

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTE + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    7cac:	8e 81       	ldd	r24, Y+6	; 0x06
    7cae:	8f 5f       	subi	r24, 0xFF	; 255
    7cb0:	8e 83       	std	Y+6, r24	; 0x06
    7cb2:	ea cf       	rjmp	.-44     	; 0x7c88 <mcu_init+0xf6>
		*((uint8_t *)&PORTF + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}
}
    7cb4:	00 00       	nop
    7cb6:	26 96       	adiw	r28, 0x06	; 6
    7cb8:	cd bf       	out	0x3d, r28	; 61
    7cba:	de bf       	out	0x3e, r29	; 62
    7cbc:	df 91       	pop	r29
    7cbe:	cf 91       	pop	r28
    7cc0:	08 95       	ret

00007cc2 <system_init>:

/**
 * \brief System initialization
 */
void system_init()
{
    7cc2:	cf 93       	push	r28
    7cc4:	df 93       	push	r29
    7cc6:	cd b7       	in	r28, 0x3d	; 61
    7cc8:	de b7       	in	r29, 0x3e	; 62
	mcu_init();
    7cca:	0e 94 c9 3d 	call	0x7b92	; 0x7b92 <mcu_init>

	CLKCTRL_init(); /* Set CPU clock speed appropriately */
    7cce:	0e 94 89 3c 	call	0x7912	; 0x7912 <CLKCTRL_init>
	TIMERB_init(); /* Timers must be initialized before utility_delay functions will work */
    7cd2:	0e 94 e5 6d 	call	0xdbca	; 0xdbca <TIMERB_init>
	CPUINT_init(); /* Interrupts must also be enabled before timer interrupts will function */
    7cd6:	0e 94 96 3c 	call	0x792c	; 0x792c <CPUINT_init>
	BINIO_init();
    7cda:	0e 94 a5 3b 	call	0x774a	; 0x774a <_Z10BINIO_initv>

	LED_set_RED_dir(PORT_DIR_OUT);
    7cde:	81 e0       	ldi	r24, 0x01	; 1
    7ce0:	0e 94 8d 3d 	call	0x7b1a	; 0x7b1a <_ZL15LED_set_RED_dir8port_dir>
	LED_set_RED_level(OFF);
    7ce4:	80 e0       	ldi	r24, 0x00	; 0
    7ce6:	0e 94 ab 3d 	call	0x7b56	; 0x7b56 <_ZL17LED_set_RED_levelb>
	LED_set_GREEN_dir(PORT_DIR_OUT);
    7cea:	81 e0       	ldi	r24, 0x01	; 1
    7cec:	0e 94 9c 3d 	call	0x7b38	; 0x7b38 <_ZL17LED_set_GREEN_dir8port_dir>
	LED_set_GREEN_level(OFF);
    7cf0:	80 e0       	ldi	r24, 0x00	; 0
    7cf2:	0e 94 ba 3d 	call	0x7b74	; 0x7b74 <_ZL19LED_set_GREEN_levelb>

	SLPCTRL_init();
    7cf6:	0e 94 c1 6d 	call	0xdb82	; 0xdb82 <SLPCTRL_init>
	
	DAC0_init();
    7cfa:	0e 94 b5 3c 	call	0x796a	; 0x796a <_Z9DAC0_initv>

	linkbus_init(LB_BAUD, LINKBUS_USART);
    7cfe:	41 e0       	ldi	r20, 0x01	; 1
    7d00:	60 e8       	ldi	r22, 0x80	; 128
    7d02:	75 e2       	ldi	r23, 0x25	; 37
    7d04:	80 e0       	ldi	r24, 0x00	; 0
    7d06:	90 e0       	ldi	r25, 0x00	; 0
    7d08:	0e 94 69 5a 	call	0xb4d2	; 0xb4d2 <_Z12linkbus_initm14USART_Number_t>
	serialbus_init(SB_BAUD, SERIALBUS_USART);
    7d0c:	44 e0       	ldi	r20, 0x04	; 4
    7d0e:	60 e8       	ldi	r22, 0x80	; 128
    7d10:	75 e2       	ldi	r23, 0x25	; 37
    7d12:	80 e0       	ldi	r24, 0x00	; 0
    7d14:	90 e0       	ldi	r25, 0x00	; 0
    7d16:	0e 94 26 63 	call	0xc64c	; 0xc64c <serialbus_init>

	BOD_init();
    7d1a:	0e 94 67 3c 	call	0x78ce	; 0x78ce <BOD_init>
}
    7d1e:	00 00       	nop
    7d20:	df 91       	pop	r29
    7d22:	cf 91       	pop	r28
    7d24:	08 95       	ret

00007d26 <ds3231_init>:
				*val = second + 10 * second10 + 60 * (int32_t)minute + 600 * (int32_t)minute10 +  3600 * (int32_t)hour + 36000 * (int32_t)hour10;
			}
		}
		
		return(failure);
	}
    7d26:	cf 93       	push	r28
    7d28:	df 93       	push	r29
    7d2a:	cd b7       	in	r28, 0x3d	; 61
    7d2c:	de b7       	in	r29, 0x3e	; 62
    7d2e:	0e 94 2f 4f 	call	0x9e5e	; 0x9e5e <I2C_0_Init>
    7d32:	0e 94 b8 44 	call	0x8970	; 0x8970 <ds3231_responding>
    7d36:	98 2f       	mov	r25, r24
    7d38:	81 e0       	ldi	r24, 0x01	; 1
    7d3a:	89 27       	eor	r24, r25
    7d3c:	df 91       	pop	r29
    7d3e:	cf 91       	pop	r28
    7d40:	08 95       	ret

00007d42 <_Z7bcd2dech>:
    7d42:	cf 93       	push	r28
    7d44:	df 93       	push	r29
    7d46:	00 d0       	rcall	.+0      	; 0x7d48 <_Z7bcd2dech+0x6>
    7d48:	cd b7       	in	r28, 0x3d	; 61
    7d4a:	de b7       	in	r29, 0x3e	; 62
    7d4c:	8a 83       	std	Y+2, r24	; 0x02
    7d4e:	8a 81       	ldd	r24, Y+2	; 0x02
    7d50:	88 2f       	mov	r24, r24
    7d52:	90 e0       	ldi	r25, 0x00	; 0
    7d54:	95 95       	asr	r25
    7d56:	87 95       	ror	r24
    7d58:	95 95       	asr	r25
    7d5a:	87 95       	ror	r24
    7d5c:	95 95       	asr	r25
    7d5e:	87 95       	ror	r24
    7d60:	95 95       	asr	r25
    7d62:	87 95       	ror	r24
    7d64:	88 0f       	add	r24, r24
    7d66:	98 2f       	mov	r25, r24
    7d68:	99 0f       	add	r25, r25
    7d6a:	99 0f       	add	r25, r25
    7d6c:	98 0f       	add	r25, r24
    7d6e:	8a 81       	ldd	r24, Y+2	; 0x02
    7d70:	8f 70       	andi	r24, 0x0F	; 15
    7d72:	89 0f       	add	r24, r25
    7d74:	89 83       	std	Y+1, r24	; 0x01
    7d76:	89 81       	ldd	r24, Y+1	; 0x01
    7d78:	0f 90       	pop	r0
    7d7a:	0f 90       	pop	r0
    7d7c:	df 91       	pop	r29
    7d7e:	cf 91       	pop	r28
    7d80:	08 95       	ret

00007d82 <_Z7dec2bcdh>:
    7d82:	cf 93       	push	r28
    7d84:	df 93       	push	r29
    7d86:	00 d0       	rcall	.+0      	; 0x7d88 <_Z7dec2bcdh+0x6>
    7d88:	cd b7       	in	r28, 0x3d	; 61
    7d8a:	de b7       	in	r29, 0x3e	; 62
    7d8c:	8a 83       	std	Y+2, r24	; 0x02
    7d8e:	9a 81       	ldd	r25, Y+2	; 0x02
    7d90:	8d ec       	ldi	r24, 0xCD	; 205
    7d92:	98 9f       	mul	r25, r24
    7d94:	81 2d       	mov	r24, r1
    7d96:	11 24       	eor	r1, r1
    7d98:	86 95       	lsr	r24
    7d9a:	86 95       	lsr	r24
    7d9c:	86 95       	lsr	r24
    7d9e:	88 0f       	add	r24, r24
    7da0:	28 2f       	mov	r18, r24
    7da2:	22 0f       	add	r18, r18
    7da4:	22 0f       	add	r18, r18
    7da6:	82 0f       	add	r24, r18
    7da8:	29 2f       	mov	r18, r25
    7daa:	28 1b       	sub	r18, r24
    7dac:	82 2f       	mov	r24, r18
    7dae:	89 83       	std	Y+1, r24	; 0x01
    7db0:	9a 81       	ldd	r25, Y+2	; 0x02
    7db2:	8d ec       	ldi	r24, 0xCD	; 205
    7db4:	98 9f       	mul	r25, r24
    7db6:	81 2d       	mov	r24, r1
    7db8:	11 24       	eor	r1, r1
    7dba:	86 95       	lsr	r24
    7dbc:	86 95       	lsr	r24
    7dbe:	86 95       	lsr	r24
    7dc0:	88 2f       	mov	r24, r24
    7dc2:	90 e0       	ldi	r25, 0x00	; 0
    7dc4:	82 95       	swap	r24
    7dc6:	92 95       	swap	r25
    7dc8:	90 7f       	andi	r25, 0xF0	; 240
    7dca:	98 27       	eor	r25, r24
    7dcc:	80 7f       	andi	r24, 0xF0	; 240
    7dce:	98 27       	eor	r25, r24
    7dd0:	98 2f       	mov	r25, r24
    7dd2:	89 81       	ldd	r24, Y+1	; 0x01
    7dd4:	89 2b       	or	r24, r25
    7dd6:	89 83       	std	Y+1, r24	; 0x01
    7dd8:	89 81       	ldd	r24, Y+1	; 0x01
    7dda:	0f 90       	pop	r0
    7ddc:	0f 90       	pop	r0
    7dde:	df 91       	pop	r29
    7de0:	cf 91       	pop	r28
    7de2:	08 95       	ret

00007de4 <_Z8char2bcdPc>:
    7de4:	cf 93       	push	r28
    7de6:	df 93       	push	r29
    7de8:	00 d0       	rcall	.+0      	; 0x7dea <_Z8char2bcdPc+0x6>
    7dea:	1f 92       	push	r1
    7dec:	cd b7       	in	r28, 0x3d	; 61
    7dee:	de b7       	in	r29, 0x3e	; 62
    7df0:	8a 83       	std	Y+2, r24	; 0x02
    7df2:	9b 83       	std	Y+3, r25	; 0x03
    7df4:	8a 81       	ldd	r24, Y+2	; 0x02
    7df6:	9b 81       	ldd	r25, Y+3	; 0x03
    7df8:	01 96       	adiw	r24, 0x01	; 1
    7dfa:	fc 01       	movw	r30, r24
    7dfc:	20 81       	ld	r18, Z
    7dfe:	8a 81       	ldd	r24, Y+2	; 0x02
    7e00:	9b 81       	ldd	r25, Y+3	; 0x03
    7e02:	fc 01       	movw	r30, r24
    7e04:	80 81       	ld	r24, Z
    7e06:	80 53       	subi	r24, 0x30	; 48
    7e08:	82 95       	swap	r24
    7e0a:	80 7f       	andi	r24, 0xF0	; 240
    7e0c:	82 0f       	add	r24, r18
    7e0e:	80 53       	subi	r24, 0x30	; 48
    7e10:	89 83       	std	Y+1, r24	; 0x01
    7e12:	89 81       	ldd	r24, Y+1	; 0x01
    7e14:	23 96       	adiw	r28, 0x03	; 3
    7e16:	cd bf       	out	0x3d, r28	; 61
    7e18:	de bf       	out	0x3e, r29	; 62
    7e1a:	df 91       	pop	r29
    7e1c:	cf 91       	pop	r28
    7e1e:	08 95       	ret

00007e20 <RTC_String2Epoch>:
    7e20:	cf 93       	push	r28
    7e22:	df 93       	push	r29
    7e24:	cd b7       	in	r28, 0x3d	; 61
    7e26:	de b7       	in	r29, 0x3e	; 62
    7e28:	a3 97       	sbiw	r28, 0x23	; 35
    7e2a:	cd bf       	out	0x3d, r28	; 61
    7e2c:	de bf       	out	0x3e, r29	; 62
    7e2e:	88 a3       	std	Y+32, r24	; 0x20
    7e30:	99 a3       	std	Y+33, r25	; 0x21
    7e32:	6a a3       	std	Y+34, r22	; 0x22
    7e34:	7b a3       	std	Y+35, r23	; 0x23
    7e36:	19 82       	std	Y+1, r1	; 0x01
    7e38:	1a 82       	std	Y+2, r1	; 0x02
    7e3a:	1b 82       	std	Y+3, r1	; 0x03
    7e3c:	1c 82       	std	Y+4, r1	; 0x04
    7e3e:	27 e0       	ldi	r18, 0x07	; 7
    7e40:	ce 01       	movw	r24, r28
    7e42:	0d 96       	adiw	r24, 0x0d	; 13
    7e44:	fc 01       	movw	r30, r24
    7e46:	32 2f       	mov	r19, r18
    7e48:	11 92       	st	Z+, r1
    7e4a:	3a 95       	dec	r19
    7e4c:	e9 f7       	brne	.-6      	; 0x7e48 <RTC_String2Epoch+0x28>
    7e4e:	2c e0       	ldi	r18, 0x0C	; 12
    7e50:	ce 01       	movw	r24, r28
    7e52:	44 96       	adiw	r24, 0x14	; 20
    7e54:	fc 01       	movw	r30, r24
    7e56:	32 2f       	mov	r19, r18
    7e58:	11 92       	st	Z+, r1
    7e5a:	3a 95       	dec	r19
    7e5c:	e9 f7       	brne	.-6      	; 0x7e58 <RTC_String2Epoch+0x38>
    7e5e:	84 e6       	ldi	r24, 0x64	; 100
    7e60:	90 e0       	ldi	r25, 0x00	; 0
    7e62:	8e 83       	std	Y+6, r24	; 0x06
    7e64:	9f 83       	std	Y+7, r25	; 0x07
    7e66:	8a a1       	ldd	r24, Y+34	; 0x22
    7e68:	9b a1       	ldd	r25, Y+35	; 0x23
    7e6a:	89 2b       	or	r24, r25
    7e6c:	09 f4       	brne	.+2      	; 0x7e70 <RTC_String2Epoch+0x50>
    7e6e:	86 c0       	rjmp	.+268    	; 0x7f7c <RTC_String2Epoch+0x15c>
    7e70:	8a a1       	ldd	r24, Y+34	; 0x22
    7e72:	9b a1       	ldd	r25, Y+35	; 0x23
    7e74:	0a 96       	adiw	r24, 0x0a	; 10
    7e76:	0e 94 f2 3e 	call	0x7de4	; 0x7de4 <_Z8char2bcdPc>
    7e7a:	8d 87       	std	Y+13, r24	; 0x0d
    7e7c:	8a a1       	ldd	r24, Y+34	; 0x22
    7e7e:	9b a1       	ldd	r25, Y+35	; 0x23
    7e80:	08 96       	adiw	r24, 0x08	; 8
    7e82:	0e 94 f2 3e 	call	0x7de4	; 0x7de4 <_Z8char2bcdPc>
    7e86:	8e 87       	std	Y+14, r24	; 0x0e
    7e88:	8a a1       	ldd	r24, Y+34	; 0x22
    7e8a:	9b a1       	ldd	r25, Y+35	; 0x23
    7e8c:	06 96       	adiw	r24, 0x06	; 6
    7e8e:	0e 94 f2 3e 	call	0x7de4	; 0x7de4 <_Z8char2bcdPc>
    7e92:	8f 87       	std	Y+15, r24	; 0x0f
    7e94:	8a a1       	ldd	r24, Y+34	; 0x22
    7e96:	9b a1       	ldd	r25, Y+35	; 0x23
    7e98:	04 96       	adiw	r24, 0x04	; 4
    7e9a:	0e 94 f2 3e 	call	0x7de4	; 0x7de4 <_Z8char2bcdPc>
    7e9e:	89 8b       	std	Y+17, r24	; 0x11
    7ea0:	8a a1       	ldd	r24, Y+34	; 0x22
    7ea2:	9b a1       	ldd	r25, Y+35	; 0x23
    7ea4:	02 96       	adiw	r24, 0x02	; 2
    7ea6:	0e 94 f2 3e 	call	0x7de4	; 0x7de4 <_Z8char2bcdPc>
    7eaa:	8a 8b       	std	Y+18, r24	; 0x12
    7eac:	8a a1       	ldd	r24, Y+34	; 0x22
    7eae:	9b a1       	ldd	r25, Y+35	; 0x23
    7eb0:	0e 94 f2 3e 	call	0x7de4	; 0x7de4 <_Z8char2bcdPc>
    7eb4:	8b 8b       	std	Y+19, r24	; 0x13
    7eb6:	8f 85       	ldd	r24, Y+15	; 0x0f
    7eb8:	0e 94 a1 3e 	call	0x7d42	; 0x7d42 <_Z7bcd2dech>
    7ebc:	88 87       	std	Y+8, r24	; 0x08
    7ebe:	8b 89       	ldd	r24, Y+19	; 0x13
    7ec0:	0e 94 a1 3e 	call	0x7d42	; 0x7d42 <_Z7bcd2dech>
    7ec4:	88 2f       	mov	r24, r24
    7ec6:	90 e0       	ldi	r25, 0x00	; 0
    7ec8:	2e 81       	ldd	r18, Y+6	; 0x06
    7eca:	3f 81       	ldd	r19, Y+7	; 0x07
    7ecc:	82 0f       	add	r24, r18
    7ece:	93 1f       	adc	r25, r19
    7ed0:	8e 83       	std	Y+6, r24	; 0x06
    7ed2:	9f 83       	std	Y+7, r25	; 0x07
    7ed4:	8e 81       	ldd	r24, Y+6	; 0x06
    7ed6:	9f 81       	ldd	r25, Y+7	; 0x07
    7ed8:	8a 8f       	std	Y+26, r24	; 0x1a
    7eda:	9b 8f       	std	Y+27, r25	; 0x1b
    7edc:	8e 81       	ldd	r24, Y+6	; 0x06
    7ede:	9f 81       	ldd	r25, Y+7	; 0x07
    7ee0:	84 59       	subi	r24, 0x94	; 148
    7ee2:	98 4f       	sbci	r25, 0xF8	; 248
    7ee4:	8e 83       	std	Y+6, r24	; 0x06
    7ee6:	9f 83       	std	Y+7, r25	; 0x07
    7ee8:	8a 89       	ldd	r24, Y+18	; 0x12
    7eea:	0e 94 a1 3e 	call	0x7d42	; 0x7d42 <_Z7bcd2dech>
    7eee:	89 87       	std	Y+9, r24	; 0x09
    7ef0:	89 85       	ldd	r24, Y+9	; 0x09
    7ef2:	81 50       	subi	r24, 0x01	; 1
    7ef4:	89 8f       	std	Y+25, r24	; 0x19
    7ef6:	89 89       	ldd	r24, Y+17	; 0x11
    7ef8:	0e 94 a1 3e 	call	0x7d42	; 0x7d42 <_Z7bcd2dech>
    7efc:	8a 87       	std	Y+10, r24	; 0x0a
    7efe:	8a 85       	ldd	r24, Y+10	; 0x0a
    7f00:	8f 8b       	std	Y+23, r24	; 0x17
    7f02:	1c 8e       	std	Y+28, r1	; 0x1c
    7f04:	1d 8e       	std	Y+29, r1	; 0x1d
    7f06:	81 e0       	ldi	r24, 0x01	; 1
    7f08:	8d 83       	std	Y+5, r24	; 0x05
    7f0a:	9d 81       	ldd	r25, Y+5	; 0x05
    7f0c:	89 85       	ldd	r24, Y+9	; 0x09
    7f0e:	98 17       	cp	r25, r24
    7f10:	88 f4       	brcc	.+34     	; 0x7f34 <RTC_String2Epoch+0x114>
    7f12:	8e 81       	ldd	r24, Y+6	; 0x06
    7f14:	9f 81       	ldd	r25, Y+7	; 0x07
    7f16:	6d 81       	ldd	r22, Y+5	; 0x05
    7f18:	0e 94 ef 02 	call	0x5de	; 0x5de <month_length>
    7f1c:	2c 8d       	ldd	r18, Y+28	; 0x1c
    7f1e:	3d 8d       	ldd	r19, Y+29	; 0x1d
    7f20:	88 2f       	mov	r24, r24
    7f22:	90 e0       	ldi	r25, 0x00	; 0
    7f24:	82 0f       	add	r24, r18
    7f26:	93 1f       	adc	r25, r19
    7f28:	8c 8f       	std	Y+28, r24	; 0x1c
    7f2a:	9d 8f       	std	Y+29, r25	; 0x1d
    7f2c:	8d 81       	ldd	r24, Y+5	; 0x05
    7f2e:	8f 5f       	subi	r24, 0xFF	; 255
    7f30:	8d 83       	std	Y+5, r24	; 0x05
    7f32:	eb cf       	rjmp	.-42     	; 0x7f0a <RTC_String2Epoch+0xea>
    7f34:	2c 8d       	ldd	r18, Y+28	; 0x1c
    7f36:	3d 8d       	ldd	r19, Y+29	; 0x1d
    7f38:	8f 89       	ldd	r24, Y+23	; 0x17
    7f3a:	08 2e       	mov	r0, r24
    7f3c:	00 0c       	add	r0, r0
    7f3e:	99 0b       	sbc	r25, r25
    7f40:	01 97       	sbiw	r24, 0x01	; 1
    7f42:	82 0f       	add	r24, r18
    7f44:	93 1f       	adc	r25, r19
    7f46:	8c 8f       	std	Y+28, r24	; 0x1c
    7f48:	9d 8f       	std	Y+29, r25	; 0x1d
    7f4a:	8d 85       	ldd	r24, Y+13	; 0x0d
    7f4c:	0e 94 a1 3e 	call	0x7d42	; 0x7d42 <_Z7bcd2dech>
    7f50:	8b 87       	std	Y+11, r24	; 0x0b
    7f52:	8e 85       	ldd	r24, Y+14	; 0x0e
    7f54:	0e 94 a1 3e 	call	0x7d42	; 0x7d42 <_Z7bcd2dech>
    7f58:	8c 87       	std	Y+12, r24	; 0x0c
    7f5a:	88 85       	ldd	r24, Y+8	; 0x08
    7f5c:	8e 8b       	std	Y+22, r24	; 0x16
    7f5e:	8c 85       	ldd	r24, Y+12	; 0x0c
    7f60:	8d 8b       	std	Y+21, r24	; 0x15
    7f62:	8b 85       	ldd	r24, Y+11	; 0x0b
    7f64:	8c 8b       	std	Y+20, r24	; 0x14
    7f66:	ce 01       	movw	r24, r28
    7f68:	44 96       	adiw	r24, 0x14	; 20
    7f6a:	0e 94 e6 3f 	call	0x7fcc	; 0x7fcc <_Z14epoch_from_ltmP2tm>
    7f6e:	dc 01       	movw	r26, r24
    7f70:	cb 01       	movw	r24, r22
    7f72:	89 83       	std	Y+1, r24	; 0x01
    7f74:	9a 83       	std	Y+2, r25	; 0x02
    7f76:	ab 83       	std	Y+3, r26	; 0x03
    7f78:	bc 83       	std	Y+4, r27	; 0x04
    7f7a:	0a c0       	rjmp	.+20     	; 0x7f90 <RTC_String2Epoch+0x170>
    7f7c:	80 e0       	ldi	r24, 0x00	; 0
    7f7e:	90 e0       	ldi	r25, 0x00	; 0
    7f80:	0e 94 c2 40 	call	0x8184	; 0x8184 <ds3231_get_epoch>
    7f84:	dc 01       	movw	r26, r24
    7f86:	cb 01       	movw	r24, r22
    7f88:	89 83       	std	Y+1, r24	; 0x01
    7f8a:	9a 83       	std	Y+2, r25	; 0x02
    7f8c:	ab 83       	std	Y+3, r26	; 0x03
    7f8e:	bc 83       	std	Y+4, r27	; 0x04
    7f90:	88 a1       	ldd	r24, Y+32	; 0x20
    7f92:	99 a1       	ldd	r25, Y+33	; 0x21
    7f94:	89 2b       	or	r24, r25
    7f96:	71 f0       	breq	.+28     	; 0x7fb4 <RTC_String2Epoch+0x194>
    7f98:	21 e0       	ldi	r18, 0x01	; 1
    7f9a:	89 81       	ldd	r24, Y+1	; 0x01
    7f9c:	9a 81       	ldd	r25, Y+2	; 0x02
    7f9e:	ab 81       	ldd	r26, Y+3	; 0x03
    7fa0:	bc 81       	ldd	r27, Y+4	; 0x04
    7fa2:	89 2b       	or	r24, r25
    7fa4:	8a 2b       	or	r24, r26
    7fa6:	8b 2b       	or	r24, r27
    7fa8:	09 f0       	breq	.+2      	; 0x7fac <RTC_String2Epoch+0x18c>
    7faa:	20 e0       	ldi	r18, 0x00	; 0
    7fac:	88 a1       	ldd	r24, Y+32	; 0x20
    7fae:	99 a1       	ldd	r25, Y+33	; 0x21
    7fb0:	fc 01       	movw	r30, r24
    7fb2:	20 83       	st	Z, r18
    7fb4:	89 81       	ldd	r24, Y+1	; 0x01
    7fb6:	9a 81       	ldd	r25, Y+2	; 0x02
    7fb8:	ab 81       	ldd	r26, Y+3	; 0x03
    7fba:	bc 81       	ldd	r27, Y+4	; 0x04
    7fbc:	bc 01       	movw	r22, r24
    7fbe:	cd 01       	movw	r24, r26
    7fc0:	a3 96       	adiw	r28, 0x23	; 35
    7fc2:	cd bf       	out	0x3d, r28	; 61
    7fc4:	de bf       	out	0x3e, r29	; 62
    7fc6:	df 91       	pop	r29
    7fc8:	cf 91       	pop	r28
    7fca:	08 95       	ret

00007fcc <_Z14epoch_from_ltmP2tm>:
    7fcc:	ef 92       	push	r14
    7fce:	ff 92       	push	r15
    7fd0:	0f 93       	push	r16
    7fd2:	1f 93       	push	r17
    7fd4:	cf 93       	push	r28
    7fd6:	df 93       	push	r29
    7fd8:	cd b7       	in	r28, 0x3d	; 61
    7fda:	de b7       	in	r29, 0x3e	; 62
    7fdc:	26 97       	sbiw	r28, 0x06	; 6
    7fde:	cd bf       	out	0x3d, r28	; 61
    7fe0:	de bf       	out	0x3e, r29	; 62
    7fe2:	8d 83       	std	Y+5, r24	; 0x05
    7fe4:	9e 83       	std	Y+6, r25	; 0x06
    7fe6:	8d 81       	ldd	r24, Y+5	; 0x05
    7fe8:	9e 81       	ldd	r25, Y+6	; 0x06
    7fea:	fc 01       	movw	r30, r24
    7fec:	80 81       	ld	r24, Z
    7fee:	28 2f       	mov	r18, r24
    7ff0:	88 0f       	add	r24, r24
    7ff2:	33 0b       	sbc	r19, r19
    7ff4:	8d 81       	ldd	r24, Y+5	; 0x05
    7ff6:	9e 81       	ldd	r25, Y+6	; 0x06
    7ff8:	fc 01       	movw	r30, r24
    7ffa:	81 81       	ldd	r24, Z+1	; 0x01
    7ffc:	48 2f       	mov	r20, r24
    7ffe:	88 0f       	add	r24, r24
    8000:	55 0b       	sbc	r21, r21
    8002:	6c e3       	ldi	r22, 0x3C	; 60
    8004:	64 9f       	mul	r22, r20
    8006:	c0 01       	movw	r24, r0
    8008:	65 9f       	mul	r22, r21
    800a:	90 0d       	add	r25, r0
    800c:	11 24       	eor	r1, r1
    800e:	82 0f       	add	r24, r18
    8010:	93 1f       	adc	r25, r19
    8012:	7c 01       	movw	r14, r24
    8014:	99 0f       	add	r25, r25
    8016:	00 0b       	sbc	r16, r16
    8018:	11 0b       	sbc	r17, r17
    801a:	8d 81       	ldd	r24, Y+5	; 0x05
    801c:	9e 81       	ldd	r25, Y+6	; 0x06
    801e:	fc 01       	movw	r30, r24
    8020:	82 81       	ldd	r24, Z+2	; 0x02
    8022:	28 2f       	mov	r18, r24
    8024:	88 0f       	add	r24, r24
    8026:	33 0b       	sbc	r19, r19
    8028:	44 0b       	sbc	r20, r20
    802a:	55 0b       	sbc	r21, r21
    802c:	80 e1       	ldi	r24, 0x10	; 16
    802e:	9e e0       	ldi	r25, 0x0E	; 14
    8030:	dc 01       	movw	r26, r24
    8032:	0e 94 49 7a 	call	0xf492	; 0xf492 <__muluhisi3>
    8036:	dc 01       	movw	r26, r24
    8038:	cb 01       	movw	r24, r22
    803a:	e8 0e       	add	r14, r24
    803c:	f9 1e       	adc	r15, r25
    803e:	0a 1f       	adc	r16, r26
    8040:	1b 1f       	adc	r17, r27
    8042:	8d 81       	ldd	r24, Y+5	; 0x05
    8044:	9e 81       	ldd	r25, Y+6	; 0x06
    8046:	fc 01       	movw	r30, r24
    8048:	80 85       	ldd	r24, Z+8	; 0x08
    804a:	91 85       	ldd	r25, Z+9	; 0x09
    804c:	09 2e       	mov	r0, r25
    804e:	00 0c       	add	r0, r0
    8050:	aa 0b       	sbc	r26, r26
    8052:	bb 0b       	sbc	r27, r27
    8054:	9c 01       	movw	r18, r24
    8056:	ad 01       	movw	r20, r26
    8058:	60 e8       	ldi	r22, 0x80	; 128
    805a:	71 e5       	ldi	r23, 0x51	; 81
    805c:	81 e0       	ldi	r24, 0x01	; 1
    805e:	90 e0       	ldi	r25, 0x00	; 0
    8060:	0e 94 b8 79 	call	0xf370	; 0xf370 <__mulsi3>
    8064:	dc 01       	movw	r26, r24
    8066:	cb 01       	movw	r24, r22
    8068:	e8 0e       	add	r14, r24
    806a:	f9 1e       	adc	r15, r25
    806c:	0a 1f       	adc	r16, r26
    806e:	1b 1f       	adc	r17, r27
    8070:	8d 81       	ldd	r24, Y+5	; 0x05
    8072:	9e 81       	ldd	r25, Y+6	; 0x06
    8074:	fc 01       	movw	r30, r24
    8076:	86 81       	ldd	r24, Z+6	; 0x06
    8078:	97 81       	ldd	r25, Z+7	; 0x07
    807a:	86 54       	subi	r24, 0x46	; 70
    807c:	91 09       	sbc	r25, r1
    807e:	09 2e       	mov	r0, r25
    8080:	00 0c       	add	r0, r0
    8082:	aa 0b       	sbc	r26, r26
    8084:	bb 0b       	sbc	r27, r27
    8086:	9c 01       	movw	r18, r24
    8088:	ad 01       	movw	r20, r26
    808a:	60 e8       	ldi	r22, 0x80	; 128
    808c:	73 e3       	ldi	r23, 0x33	; 51
    808e:	81 ee       	ldi	r24, 0xE1	; 225
    8090:	91 e0       	ldi	r25, 0x01	; 1
    8092:	0e 94 b8 79 	call	0xf370	; 0xf370 <__mulsi3>
    8096:	dc 01       	movw	r26, r24
    8098:	cb 01       	movw	r24, r22
    809a:	e8 0e       	add	r14, r24
    809c:	f9 1e       	adc	r15, r25
    809e:	0a 1f       	adc	r16, r26
    80a0:	1b 1f       	adc	r17, r27
    80a2:	8d 81       	ldd	r24, Y+5	; 0x05
    80a4:	9e 81       	ldd	r25, Y+6	; 0x06
    80a6:	fc 01       	movw	r30, r24
    80a8:	86 81       	ldd	r24, Z+6	; 0x06
    80aa:	97 81       	ldd	r25, Z+7	; 0x07
    80ac:	85 54       	subi	r24, 0x45	; 69
    80ae:	91 09       	sbc	r25, r1
    80b0:	99 23       	and	r25, r25
    80b2:	0c f4       	brge	.+2      	; 0x80b6 <__RODATA_PM_OFFSET__+0xb6>
    80b4:	03 96       	adiw	r24, 0x03	; 3
    80b6:	95 95       	asr	r25
    80b8:	87 95       	ror	r24
    80ba:	95 95       	asr	r25
    80bc:	87 95       	ror	r24
    80be:	09 2e       	mov	r0, r25
    80c0:	00 0c       	add	r0, r0
    80c2:	aa 0b       	sbc	r26, r26
    80c4:	bb 0b       	sbc	r27, r27
    80c6:	9c 01       	movw	r18, r24
    80c8:	ad 01       	movw	r20, r26
    80ca:	60 e8       	ldi	r22, 0x80	; 128
    80cc:	71 e5       	ldi	r23, 0x51	; 81
    80ce:	81 e0       	ldi	r24, 0x01	; 1
    80d0:	90 e0       	ldi	r25, 0x00	; 0
    80d2:	0e 94 b8 79 	call	0xf370	; 0xf370 <__mulsi3>
    80d6:	dc 01       	movw	r26, r24
    80d8:	cb 01       	movw	r24, r22
    80da:	e8 0e       	add	r14, r24
    80dc:	f9 1e       	adc	r15, r25
    80de:	0a 1f       	adc	r16, r26
    80e0:	1b 1f       	adc	r17, r27
    80e2:	8d 81       	ldd	r24, Y+5	; 0x05
    80e4:	9e 81       	ldd	r25, Y+6	; 0x06
    80e6:	fc 01       	movw	r30, r24
    80e8:	86 81       	ldd	r24, Z+6	; 0x06
    80ea:	97 81       	ldd	r25, Z+7	; 0x07
    80ec:	01 97       	sbiw	r24, 0x01	; 1
    80ee:	24 e6       	ldi	r18, 0x64	; 100
    80f0:	30 e0       	ldi	r19, 0x00	; 0
    80f2:	b9 01       	movw	r22, r18
    80f4:	0e 94 dc 79 	call	0xf3b8	; 0xf3b8 <__divmodhi4>
    80f8:	cb 01       	movw	r24, r22
    80fa:	09 2e       	mov	r0, r25
    80fc:	00 0c       	add	r0, r0
    80fe:	aa 0b       	sbc	r26, r26
    8100:	bb 0b       	sbc	r27, r27
    8102:	9c 01       	movw	r18, r24
    8104:	ad 01       	movw	r20, r26
    8106:	60 e8       	ldi	r22, 0x80	; 128
    8108:	7e ea       	ldi	r23, 0xAE	; 174
    810a:	8e ef       	ldi	r24, 0xFE	; 254
    810c:	9f ef       	ldi	r25, 0xFF	; 255
    810e:	0e 94 b8 79 	call	0xf370	; 0xf370 <__mulsi3>
    8112:	dc 01       	movw	r26, r24
    8114:	cb 01       	movw	r24, r22
    8116:	e8 0e       	add	r14, r24
    8118:	f9 1e       	adc	r15, r25
    811a:	0a 1f       	adc	r16, r26
    811c:	1b 1f       	adc	r17, r27
    811e:	8d 81       	ldd	r24, Y+5	; 0x05
    8120:	9e 81       	ldd	r25, Y+6	; 0x06
    8122:	fc 01       	movw	r30, r24
    8124:	86 81       	ldd	r24, Z+6	; 0x06
    8126:	97 81       	ldd	r25, Z+7	; 0x07
    8128:	85 5d       	subi	r24, 0xD5	; 213
    812a:	9e 4f       	sbci	r25, 0xFE	; 254
    812c:	20 e9       	ldi	r18, 0x90	; 144
    812e:	31 e0       	ldi	r19, 0x01	; 1
    8130:	b9 01       	movw	r22, r18
    8132:	0e 94 dc 79 	call	0xf3b8	; 0xf3b8 <__divmodhi4>
    8136:	cb 01       	movw	r24, r22
    8138:	09 2e       	mov	r0, r25
    813a:	00 0c       	add	r0, r0
    813c:	aa 0b       	sbc	r26, r26
    813e:	bb 0b       	sbc	r27, r27
    8140:	9c 01       	movw	r18, r24
    8142:	ad 01       	movw	r20, r26
    8144:	60 e8       	ldi	r22, 0x80	; 128
    8146:	71 e5       	ldi	r23, 0x51	; 81
    8148:	81 e0       	ldi	r24, 0x01	; 1
    814a:	90 e0       	ldi	r25, 0x00	; 0
    814c:	0e 94 b8 79 	call	0xf370	; 0xf370 <__mulsi3>
    8150:	dc 01       	movw	r26, r24
    8152:	cb 01       	movw	r24, r22
    8154:	8e 0d       	add	r24, r14
    8156:	9f 1d       	adc	r25, r15
    8158:	a0 1f       	adc	r26, r16
    815a:	b1 1f       	adc	r27, r17
    815c:	89 83       	std	Y+1, r24	; 0x01
    815e:	9a 83       	std	Y+2, r25	; 0x02
    8160:	ab 83       	std	Y+3, r26	; 0x03
    8162:	bc 83       	std	Y+4, r27	; 0x04
    8164:	89 81       	ldd	r24, Y+1	; 0x01
    8166:	9a 81       	ldd	r25, Y+2	; 0x02
    8168:	ab 81       	ldd	r26, Y+3	; 0x03
    816a:	bc 81       	ldd	r27, Y+4	; 0x04
    816c:	bc 01       	movw	r22, r24
    816e:	cd 01       	movw	r24, r26
    8170:	26 96       	adiw	r28, 0x06	; 6
    8172:	cd bf       	out	0x3d, r28	; 61
    8174:	de bf       	out	0x3e, r29	; 62
    8176:	df 91       	pop	r29
    8178:	cf 91       	pop	r28
    817a:	1f 91       	pop	r17
    817c:	0f 91       	pop	r16
    817e:	ff 90       	pop	r15
    8180:	ef 90       	pop	r14
    8182:	08 95       	ret

00008184 <ds3231_get_epoch>:
    8184:	ef 92       	push	r14
    8186:	ff 92       	push	r15
    8188:	0f 93       	push	r16
    818a:	1f 93       	push	r17
    818c:	cf 93       	push	r28
    818e:	df 93       	push	r29
    8190:	cd b7       	in	r28, 0x3d	; 61
    8192:	de b7       	in	r29, 0x3e	; 62
    8194:	a5 97       	sbiw	r28, 0x25	; 37
    8196:	cd bf       	out	0x3d, r28	; 61
    8198:	de bf       	out	0x3e, r29	; 62
    819a:	8c a3       	std	Y+36, r24	; 0x24
    819c:	9d a3       	std	Y+37, r25	; 0x25
    819e:	8a e0       	ldi	r24, 0x0A	; 10
    81a0:	89 83       	std	Y+1, r24	; 0x01
    81a2:	1a 82       	std	Y+2, r1	; 0x02
    81a4:	1b 82       	std	Y+3, r1	; 0x03
    81a6:	1c 82       	std	Y+4, r1	; 0x04
    81a8:	1d 82       	std	Y+5, r1	; 0x05
    81aa:	27 e0       	ldi	r18, 0x07	; 7
    81ac:	ce 01       	movw	r24, r28
    81ae:	41 96       	adiw	r24, 0x11	; 17
    81b0:	fc 01       	movw	r30, r24
    81b2:	32 2f       	mov	r19, r18
    81b4:	11 92       	st	Z+, r1
    81b6:	3a 95       	dec	r19
    81b8:	e9 f7       	brne	.-6      	; 0x81b4 <ds3231_get_epoch+0x30>
    81ba:	89 81       	ldd	r24, Y+1	; 0x01
    81bc:	9f ef       	ldi	r25, 0xFF	; 255
    81be:	98 0f       	add	r25, r24
    81c0:	99 83       	std	Y+1, r25	; 0x01
    81c2:	88 23       	and	r24, r24
    81c4:	99 f0       	breq	.+38     	; 0x81ec <ds3231_get_epoch+0x68>
    81c6:	ce 01       	movw	r24, r28
    81c8:	41 96       	adiw	r24, 0x11	; 17
    81ca:	27 e0       	ldi	r18, 0x07	; 7
    81cc:	ac 01       	movw	r20, r24
    81ce:	60 e0       	ldi	r22, 0x00	; 0
    81d0:	80 ed       	ldi	r24, 0xD0	; 208
    81d2:	0e 94 6f 50 	call	0xa0de	; 0xa0de <I2C_0_GetData>
    81d6:	98 2f       	mov	r25, r24
    81d8:	81 e0       	ldi	r24, 0x01	; 1
    81da:	97 30       	cpi	r25, 0x07	; 7
    81dc:	09 f4       	brne	.+2      	; 0x81e0 <ds3231_get_epoch+0x5c>
    81de:	80 e0       	ldi	r24, 0x00	; 0
    81e0:	8e 83       	std	Y+6, r24	; 0x06
    81e2:	8e 81       	ldd	r24, Y+6	; 0x06
    81e4:	88 23       	and	r24, r24
    81e6:	11 f0       	breq	.+4      	; 0x81ec <ds3231_get_epoch+0x68>
    81e8:	81 e0       	ldi	r24, 0x01	; 1
    81ea:	01 c0       	rjmp	.+2      	; 0x81ee <ds3231_get_epoch+0x6a>
    81ec:	80 e0       	ldi	r24, 0x00	; 0
    81ee:	88 23       	and	r24, r24
    81f0:	09 f0       	breq	.+2      	; 0x81f4 <ds3231_get_epoch+0x70>
    81f2:	e3 cf       	rjmp	.-58     	; 0x81ba <ds3231_get_epoch+0x36>
    81f4:	9e 81       	ldd	r25, Y+6	; 0x06
    81f6:	81 e0       	ldi	r24, 0x01	; 1
    81f8:	89 27       	eor	r24, r25
    81fa:	88 23       	and	r24, r24
    81fc:	09 f4       	brne	.+2      	; 0x8200 <ds3231_get_epoch+0x7c>
    81fe:	7e c1       	rjmp	.+764    	; 0x84fc <ds3231_get_epoch+0x378>
    8200:	2c e0       	ldi	r18, 0x0C	; 12
    8202:	ce 01       	movw	r24, r28
    8204:	48 96       	adiw	r24, 0x18	; 24
    8206:	fc 01       	movw	r30, r24
    8208:	32 2f       	mov	r19, r18
    820a:	11 92       	st	Z+, r1
    820c:	3a 95       	dec	r19
    820e:	e9 f7       	brne	.-6      	; 0x820a <ds3231_get_epoch+0x86>
    8210:	84 e6       	ldi	r24, 0x64	; 100
    8212:	90 e0       	ldi	r25, 0x00	; 0
    8214:	89 87       	std	Y+9, r24	; 0x09
    8216:	9a 87       	std	Y+10, r25	; 0x0a
    8218:	8f 89       	ldd	r24, Y+23	; 0x17
    821a:	88 2f       	mov	r24, r24
    821c:	90 e0       	ldi	r25, 0x00	; 0
    821e:	8f 70       	andi	r24, 0x0F	; 15
    8220:	99 27       	eor	r25, r25
    8222:	29 85       	ldd	r18, Y+9	; 0x09
    8224:	3a 85       	ldd	r19, Y+10	; 0x0a
    8226:	82 0f       	add	r24, r18
    8228:	93 1f       	adc	r25, r19
    822a:	89 87       	std	Y+9, r24	; 0x09
    822c:	9a 87       	std	Y+10, r25	; 0x0a
    822e:	8f 89       	ldd	r24, Y+23	; 0x17
    8230:	82 95       	swap	r24
    8232:	8f 70       	andi	r24, 0x0F	; 15
    8234:	88 2f       	mov	r24, r24
    8236:	90 e0       	ldi	r25, 0x00	; 0
    8238:	88 0f       	add	r24, r24
    823a:	99 1f       	adc	r25, r25
    823c:	9c 01       	movw	r18, r24
    823e:	22 0f       	add	r18, r18
    8240:	33 1f       	adc	r19, r19
    8242:	22 0f       	add	r18, r18
    8244:	33 1f       	adc	r19, r19
    8246:	82 0f       	add	r24, r18
    8248:	93 1f       	adc	r25, r19
    824a:	29 85       	ldd	r18, Y+9	; 0x09
    824c:	3a 85       	ldd	r19, Y+10	; 0x0a
    824e:	82 0f       	add	r24, r18
    8250:	93 1f       	adc	r25, r19
    8252:	89 87       	std	Y+9, r24	; 0x09
    8254:	9a 87       	std	Y+10, r25	; 0x0a
    8256:	89 85       	ldd	r24, Y+9	; 0x09
    8258:	9a 85       	ldd	r25, Y+10	; 0x0a
    825a:	8e 8f       	std	Y+30, r24	; 0x1e
    825c:	9f 8f       	std	Y+31, r25	; 0x1f
    825e:	89 85       	ldd	r24, Y+9	; 0x09
    8260:	9a 85       	ldd	r25, Y+10	; 0x0a
    8262:	84 59       	subi	r24, 0x94	; 148
    8264:	98 4f       	sbci	r25, 0xF8	; 248
    8266:	89 87       	std	Y+9, r24	; 0x09
    8268:	9a 87       	std	Y+10, r25	; 0x0a
    826a:	8e 89       	ldd	r24, Y+22	; 0x16
    826c:	8f 70       	andi	r24, 0x0F	; 15
    826e:	8b 87       	std	Y+11, r24	; 0x0b
    8270:	8e 89       	ldd	r24, Y+22	; 0x16
    8272:	82 95       	swap	r24
    8274:	8f 70       	andi	r24, 0x0F	; 15
    8276:	88 0f       	add	r24, r24
    8278:	98 2f       	mov	r25, r24
    827a:	99 0f       	add	r25, r25
    827c:	99 0f       	add	r25, r25
    827e:	89 0f       	add	r24, r25
    8280:	9b 85       	ldd	r25, Y+11	; 0x0b
    8282:	89 0f       	add	r24, r25
    8284:	8b 87       	std	Y+11, r24	; 0x0b
    8286:	8b 85       	ldd	r24, Y+11	; 0x0b
    8288:	81 50       	subi	r24, 0x01	; 1
    828a:	8d 8f       	std	Y+29, r24	; 0x1d
    828c:	8d 89       	ldd	r24, Y+21	; 0x15
    828e:	8f 70       	andi	r24, 0x0F	; 15
    8290:	8c 87       	std	Y+12, r24	; 0x0c
    8292:	8d 89       	ldd	r24, Y+21	; 0x15
    8294:	82 95       	swap	r24
    8296:	8f 70       	andi	r24, 0x0F	; 15
    8298:	88 0f       	add	r24, r24
    829a:	98 2f       	mov	r25, r24
    829c:	99 0f       	add	r25, r25
    829e:	99 0f       	add	r25, r25
    82a0:	89 0f       	add	r24, r25
    82a2:	9c 85       	ldd	r25, Y+12	; 0x0c
    82a4:	89 0f       	add	r24, r25
    82a6:	8c 87       	std	Y+12, r24	; 0x0c
    82a8:	8c 85       	ldd	r24, Y+12	; 0x0c
    82aa:	8b 8f       	std	Y+27, r24	; 0x1b
    82ac:	18 a2       	std	Y+32, r1	; 0x20
    82ae:	19 a2       	std	Y+33, r1	; 0x21
    82b0:	81 e0       	ldi	r24, 0x01	; 1
    82b2:	88 87       	std	Y+8, r24	; 0x08
    82b4:	98 85       	ldd	r25, Y+8	; 0x08
    82b6:	8b 85       	ldd	r24, Y+11	; 0x0b
    82b8:	98 17       	cp	r25, r24
    82ba:	88 f4       	brcc	.+34     	; 0x82de <ds3231_get_epoch+0x15a>
    82bc:	89 85       	ldd	r24, Y+9	; 0x09
    82be:	9a 85       	ldd	r25, Y+10	; 0x0a
    82c0:	68 85       	ldd	r22, Y+8	; 0x08
    82c2:	0e 94 ef 02 	call	0x5de	; 0x5de <month_length>
    82c6:	28 a1       	ldd	r18, Y+32	; 0x20
    82c8:	39 a1       	ldd	r19, Y+33	; 0x21
    82ca:	88 2f       	mov	r24, r24
    82cc:	90 e0       	ldi	r25, 0x00	; 0
    82ce:	82 0f       	add	r24, r18
    82d0:	93 1f       	adc	r25, r19
    82d2:	88 a3       	std	Y+32, r24	; 0x20
    82d4:	99 a3       	std	Y+33, r25	; 0x21
    82d6:	88 85       	ldd	r24, Y+8	; 0x08
    82d8:	8f 5f       	subi	r24, 0xFF	; 255
    82da:	88 87       	std	Y+8, r24	; 0x08
    82dc:	eb cf       	rjmp	.-42     	; 0x82b4 <ds3231_get_epoch+0x130>
    82de:	28 a1       	ldd	r18, Y+32	; 0x20
    82e0:	39 a1       	ldd	r19, Y+33	; 0x21
    82e2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    82e4:	08 2e       	mov	r0, r24
    82e6:	00 0c       	add	r0, r0
    82e8:	99 0b       	sbc	r25, r25
    82ea:	01 97       	sbiw	r24, 0x01	; 1
    82ec:	82 0f       	add	r24, r18
    82ee:	93 1f       	adc	r25, r19
    82f0:	88 a3       	std	Y+32, r24	; 0x20
    82f2:	99 a3       	std	Y+33, r25	; 0x21
    82f4:	89 89       	ldd	r24, Y+17	; 0x11
    82f6:	82 95       	swap	r24
    82f8:	8f 70       	andi	r24, 0x0F	; 15
    82fa:	88 0f       	add	r24, r24
    82fc:	98 2f       	mov	r25, r24
    82fe:	99 0f       	add	r25, r25
    8300:	99 0f       	add	r25, r25
    8302:	89 0f       	add	r24, r25
    8304:	8d 87       	std	Y+13, r24	; 0x0d
    8306:	89 89       	ldd	r24, Y+17	; 0x11
    8308:	8f 70       	andi	r24, 0x0F	; 15
    830a:	9d 85       	ldd	r25, Y+13	; 0x0d
    830c:	89 0f       	add	r24, r25
    830e:	8d 87       	std	Y+13, r24	; 0x0d
    8310:	8a 89       	ldd	r24, Y+18	; 0x12
    8312:	82 95       	swap	r24
    8314:	8f 70       	andi	r24, 0x0F	; 15
    8316:	88 0f       	add	r24, r24
    8318:	98 2f       	mov	r25, r24
    831a:	99 0f       	add	r25, r25
    831c:	99 0f       	add	r25, r25
    831e:	89 0f       	add	r24, r25
    8320:	8e 87       	std	Y+14, r24	; 0x0e
    8322:	8a 89       	ldd	r24, Y+18	; 0x12
    8324:	8f 70       	andi	r24, 0x0F	; 15
    8326:	9e 85       	ldd	r25, Y+14	; 0x0e
    8328:	89 0f       	add	r24, r25
    832a:	8e 87       	std	Y+14, r24	; 0x0e
    832c:	8b 89       	ldd	r24, Y+19	; 0x13
    832e:	88 2f       	mov	r24, r24
    8330:	90 e0       	ldi	r25, 0x00	; 0
    8332:	80 72       	andi	r24, 0x20	; 32
    8334:	99 27       	eor	r25, r25
    8336:	21 e0       	ldi	r18, 0x01	; 1
    8338:	89 2b       	or	r24, r25
    833a:	09 f4       	brne	.+2      	; 0x833e <ds3231_get_epoch+0x1ba>
    833c:	20 e0       	ldi	r18, 0x00	; 0
    833e:	2f 87       	std	Y+15, r18	; 0x0f
    8340:	8b 89       	ldd	r24, Y+19	; 0x13
    8342:	88 2f       	mov	r24, r24
    8344:	90 e0       	ldi	r25, 0x00	; 0
    8346:	95 95       	asr	r25
    8348:	87 95       	ror	r24
    834a:	95 95       	asr	r25
    834c:	87 95       	ror	r24
    834e:	95 95       	asr	r25
    8350:	87 95       	ror	r24
    8352:	95 95       	asr	r25
    8354:	87 95       	ror	r24
    8356:	81 70       	andi	r24, 0x01	; 1
    8358:	88 0f       	add	r24, r24
    835a:	98 2f       	mov	r25, r24
    835c:	99 0f       	add	r25, r25
    835e:	99 0f       	add	r25, r25
    8360:	89 0f       	add	r24, r25
    8362:	8f 83       	std	Y+7, r24	; 0x07
    8364:	8b 89       	ldd	r24, Y+19	; 0x13
    8366:	8f 70       	andi	r24, 0x0F	; 15
    8368:	9f 81       	ldd	r25, Y+7	; 0x07
    836a:	89 0f       	add	r24, r25
    836c:	8f 83       	std	Y+7, r24	; 0x07
    836e:	8b 89       	ldd	r24, Y+19	; 0x13
    8370:	88 2f       	mov	r24, r24
    8372:	90 e0       	ldi	r25, 0x00	; 0
    8374:	80 74       	andi	r24, 0x40	; 64
    8376:	99 27       	eor	r25, r25
    8378:	21 e0       	ldi	r18, 0x01	; 1
    837a:	89 2b       	or	r24, r25
    837c:	09 f4       	brne	.+2      	; 0x8380 <ds3231_get_epoch+0x1fc>
    837e:	20 e0       	ldi	r18, 0x00	; 0
    8380:	28 8b       	std	Y+16, r18	; 0x10
    8382:	88 89       	ldd	r24, Y+16	; 0x10
    8384:	88 23       	and	r24, r24
    8386:	39 f0       	breq	.+14     	; 0x8396 <ds3231_get_epoch+0x212>
    8388:	8f 85       	ldd	r24, Y+15	; 0x0f
    838a:	88 23       	and	r24, r24
    838c:	51 f0       	breq	.+20     	; 0x83a2 <ds3231_get_epoch+0x21e>
    838e:	8f 81       	ldd	r24, Y+7	; 0x07
    8390:	84 5f       	subi	r24, 0xF4	; 244
    8392:	8f 83       	std	Y+7, r24	; 0x07
    8394:	06 c0       	rjmp	.+12     	; 0x83a2 <ds3231_get_epoch+0x21e>
    8396:	8f 85       	ldd	r24, Y+15	; 0x0f
    8398:	88 23       	and	r24, r24
    839a:	19 f0       	breq	.+6      	; 0x83a2 <ds3231_get_epoch+0x21e>
    839c:	8f 81       	ldd	r24, Y+7	; 0x07
    839e:	8c 5e       	subi	r24, 0xEC	; 236
    83a0:	8f 83       	std	Y+7, r24	; 0x07
    83a2:	8f 81       	ldd	r24, Y+7	; 0x07
    83a4:	8a 8f       	std	Y+26, r24	; 0x1a
    83a6:	8e 85       	ldd	r24, Y+14	; 0x0e
    83a8:	89 8f       	std	Y+25, r24	; 0x19
    83aa:	8d 85       	ldd	r24, Y+13	; 0x0d
    83ac:	88 8f       	std	Y+24, r24	; 0x18
    83ae:	88 8d       	ldd	r24, Y+24	; 0x18
    83b0:	28 2f       	mov	r18, r24
    83b2:	88 0f       	add	r24, r24
    83b4:	33 0b       	sbc	r19, r19
    83b6:	89 8d       	ldd	r24, Y+25	; 0x19
    83b8:	48 2f       	mov	r20, r24
    83ba:	88 0f       	add	r24, r24
    83bc:	55 0b       	sbc	r21, r21
    83be:	6c e3       	ldi	r22, 0x3C	; 60
    83c0:	64 9f       	mul	r22, r20
    83c2:	c0 01       	movw	r24, r0
    83c4:	65 9f       	mul	r22, r21
    83c6:	90 0d       	add	r25, r0
    83c8:	11 24       	eor	r1, r1
    83ca:	82 0f       	add	r24, r18
    83cc:	93 1f       	adc	r25, r19
    83ce:	7c 01       	movw	r14, r24
    83d0:	99 0f       	add	r25, r25
    83d2:	00 0b       	sbc	r16, r16
    83d4:	11 0b       	sbc	r17, r17
    83d6:	8a 8d       	ldd	r24, Y+26	; 0x1a
    83d8:	28 2f       	mov	r18, r24
    83da:	88 0f       	add	r24, r24
    83dc:	33 0b       	sbc	r19, r19
    83de:	44 0b       	sbc	r20, r20
    83e0:	55 0b       	sbc	r21, r21
    83e2:	80 e1       	ldi	r24, 0x10	; 16
    83e4:	9e e0       	ldi	r25, 0x0E	; 14
    83e6:	dc 01       	movw	r26, r24
    83e8:	0e 94 49 7a 	call	0xf492	; 0xf492 <__muluhisi3>
    83ec:	dc 01       	movw	r26, r24
    83ee:	cb 01       	movw	r24, r22
    83f0:	e8 0e       	add	r14, r24
    83f2:	f9 1e       	adc	r15, r25
    83f4:	0a 1f       	adc	r16, r26
    83f6:	1b 1f       	adc	r17, r27
    83f8:	88 a1       	ldd	r24, Y+32	; 0x20
    83fa:	99 a1       	ldd	r25, Y+33	; 0x21
    83fc:	09 2e       	mov	r0, r25
    83fe:	00 0c       	add	r0, r0
    8400:	aa 0b       	sbc	r26, r26
    8402:	bb 0b       	sbc	r27, r27
    8404:	9c 01       	movw	r18, r24
    8406:	ad 01       	movw	r20, r26
    8408:	60 e8       	ldi	r22, 0x80	; 128
    840a:	71 e5       	ldi	r23, 0x51	; 81
    840c:	81 e0       	ldi	r24, 0x01	; 1
    840e:	90 e0       	ldi	r25, 0x00	; 0
    8410:	0e 94 b8 79 	call	0xf370	; 0xf370 <__mulsi3>
    8414:	dc 01       	movw	r26, r24
    8416:	cb 01       	movw	r24, r22
    8418:	e8 0e       	add	r14, r24
    841a:	f9 1e       	adc	r15, r25
    841c:	0a 1f       	adc	r16, r26
    841e:	1b 1f       	adc	r17, r27
    8420:	8e 8d       	ldd	r24, Y+30	; 0x1e
    8422:	9f 8d       	ldd	r25, Y+31	; 0x1f
    8424:	86 54       	subi	r24, 0x46	; 70
    8426:	91 09       	sbc	r25, r1
    8428:	09 2e       	mov	r0, r25
    842a:	00 0c       	add	r0, r0
    842c:	aa 0b       	sbc	r26, r26
    842e:	bb 0b       	sbc	r27, r27
    8430:	9c 01       	movw	r18, r24
    8432:	ad 01       	movw	r20, r26
    8434:	60 e8       	ldi	r22, 0x80	; 128
    8436:	73 e3       	ldi	r23, 0x33	; 51
    8438:	81 ee       	ldi	r24, 0xE1	; 225
    843a:	91 e0       	ldi	r25, 0x01	; 1
    843c:	0e 94 b8 79 	call	0xf370	; 0xf370 <__mulsi3>
    8440:	dc 01       	movw	r26, r24
    8442:	cb 01       	movw	r24, r22
    8444:	e8 0e       	add	r14, r24
    8446:	f9 1e       	adc	r15, r25
    8448:	0a 1f       	adc	r16, r26
    844a:	1b 1f       	adc	r17, r27
    844c:	8e 8d       	ldd	r24, Y+30	; 0x1e
    844e:	9f 8d       	ldd	r25, Y+31	; 0x1f
    8450:	85 54       	subi	r24, 0x45	; 69
    8452:	91 09       	sbc	r25, r1
    8454:	99 23       	and	r25, r25
    8456:	0c f4       	brge	.+2      	; 0x845a <ds3231_get_epoch+0x2d6>
    8458:	03 96       	adiw	r24, 0x03	; 3
    845a:	95 95       	asr	r25
    845c:	87 95       	ror	r24
    845e:	95 95       	asr	r25
    8460:	87 95       	ror	r24
    8462:	09 2e       	mov	r0, r25
    8464:	00 0c       	add	r0, r0
    8466:	aa 0b       	sbc	r26, r26
    8468:	bb 0b       	sbc	r27, r27
    846a:	9c 01       	movw	r18, r24
    846c:	ad 01       	movw	r20, r26
    846e:	60 e8       	ldi	r22, 0x80	; 128
    8470:	71 e5       	ldi	r23, 0x51	; 81
    8472:	81 e0       	ldi	r24, 0x01	; 1
    8474:	90 e0       	ldi	r25, 0x00	; 0
    8476:	0e 94 b8 79 	call	0xf370	; 0xf370 <__mulsi3>
    847a:	dc 01       	movw	r26, r24
    847c:	cb 01       	movw	r24, r22
    847e:	e8 0e       	add	r14, r24
    8480:	f9 1e       	adc	r15, r25
    8482:	0a 1f       	adc	r16, r26
    8484:	1b 1f       	adc	r17, r27
    8486:	8e 8d       	ldd	r24, Y+30	; 0x1e
    8488:	9f 8d       	ldd	r25, Y+31	; 0x1f
    848a:	01 97       	sbiw	r24, 0x01	; 1
    848c:	24 e6       	ldi	r18, 0x64	; 100
    848e:	30 e0       	ldi	r19, 0x00	; 0
    8490:	b9 01       	movw	r22, r18
    8492:	0e 94 dc 79 	call	0xf3b8	; 0xf3b8 <__divmodhi4>
    8496:	cb 01       	movw	r24, r22
    8498:	09 2e       	mov	r0, r25
    849a:	00 0c       	add	r0, r0
    849c:	aa 0b       	sbc	r26, r26
    849e:	bb 0b       	sbc	r27, r27
    84a0:	9c 01       	movw	r18, r24
    84a2:	ad 01       	movw	r20, r26
    84a4:	60 e8       	ldi	r22, 0x80	; 128
    84a6:	7e ea       	ldi	r23, 0xAE	; 174
    84a8:	8e ef       	ldi	r24, 0xFE	; 254
    84aa:	9f ef       	ldi	r25, 0xFF	; 255
    84ac:	0e 94 b8 79 	call	0xf370	; 0xf370 <__mulsi3>
    84b0:	dc 01       	movw	r26, r24
    84b2:	cb 01       	movw	r24, r22
    84b4:	e8 0e       	add	r14, r24
    84b6:	f9 1e       	adc	r15, r25
    84b8:	0a 1f       	adc	r16, r26
    84ba:	1b 1f       	adc	r17, r27
    84bc:	8e 8d       	ldd	r24, Y+30	; 0x1e
    84be:	9f 8d       	ldd	r25, Y+31	; 0x1f
    84c0:	85 5d       	subi	r24, 0xD5	; 213
    84c2:	9e 4f       	sbci	r25, 0xFE	; 254
    84c4:	20 e9       	ldi	r18, 0x90	; 144
    84c6:	31 e0       	ldi	r19, 0x01	; 1
    84c8:	b9 01       	movw	r22, r18
    84ca:	0e 94 dc 79 	call	0xf3b8	; 0xf3b8 <__divmodhi4>
    84ce:	cb 01       	movw	r24, r22
    84d0:	09 2e       	mov	r0, r25
    84d2:	00 0c       	add	r0, r0
    84d4:	aa 0b       	sbc	r26, r26
    84d6:	bb 0b       	sbc	r27, r27
    84d8:	9c 01       	movw	r18, r24
    84da:	ad 01       	movw	r20, r26
    84dc:	60 e8       	ldi	r22, 0x80	; 128
    84de:	71 e5       	ldi	r23, 0x51	; 81
    84e0:	81 e0       	ldi	r24, 0x01	; 1
    84e2:	90 e0       	ldi	r25, 0x00	; 0
    84e4:	0e 94 b8 79 	call	0xf370	; 0xf370 <__mulsi3>
    84e8:	dc 01       	movw	r26, r24
    84ea:	cb 01       	movw	r24, r22
    84ec:	8e 0d       	add	r24, r14
    84ee:	9f 1d       	adc	r25, r15
    84f0:	a0 1f       	adc	r26, r16
    84f2:	b1 1f       	adc	r27, r17
    84f4:	8a 83       	std	Y+2, r24	; 0x02
    84f6:	9b 83       	std	Y+3, r25	; 0x03
    84f8:	ac 83       	std	Y+4, r26	; 0x04
    84fa:	bd 83       	std	Y+5, r27	; 0x05
    84fc:	8c a1       	ldd	r24, Y+36	; 0x24
    84fe:	9d a1       	ldd	r25, Y+37	; 0x25
    8500:	89 2b       	or	r24, r25
    8502:	51 f0       	breq	.+20     	; 0x8518 <ds3231_get_epoch+0x394>
    8504:	8e 81       	ldd	r24, Y+6	; 0x06
    8506:	88 23       	and	r24, r24
    8508:	11 f0       	breq	.+4      	; 0x850e <ds3231_get_epoch+0x38a>
    850a:	2c ef       	ldi	r18, 0xFC	; 252
    850c:	01 c0       	rjmp	.+2      	; 0x8510 <ds3231_get_epoch+0x38c>
    850e:	20 e0       	ldi	r18, 0x00	; 0
    8510:	8c a1       	ldd	r24, Y+36	; 0x24
    8512:	9d a1       	ldd	r25, Y+37	; 0x25
    8514:	fc 01       	movw	r30, r24
    8516:	20 83       	st	Z, r18
    8518:	8a 81       	ldd	r24, Y+2	; 0x02
    851a:	9b 81       	ldd	r25, Y+3	; 0x03
    851c:	ac 81       	ldd	r26, Y+4	; 0x04
    851e:	bd 81       	ldd	r27, Y+5	; 0x05
    8520:	bc 01       	movw	r22, r24
    8522:	cd 01       	movw	r24, r26
    8524:	a5 96       	adiw	r28, 0x25	; 37
    8526:	cd bf       	out	0x3d, r28	; 61
    8528:	de bf       	out	0x3e, r29	; 62
    852a:	df 91       	pop	r29
    852c:	cf 91       	pop	r28
    852e:	1f 91       	pop	r17
    8530:	0f 91       	pop	r16
    8532:	ff 90       	pop	r15
    8534:	ef 90       	pop	r14
    8536:	08 95       	ret

00008538 <ds3231_set_date_time_arducon>:
    8538:	cf 93       	push	r28
    853a:	df 93       	push	r29
    853c:	cd b7       	in	r28, 0x3d	; 61
    853e:	de b7       	in	r29, 0x3e	; 62
    8540:	2c 97       	sbiw	r28, 0x0c	; 12
    8542:	cd bf       	out	0x3d, r28	; 61
    8544:	de bf       	out	0x3e, r29	; 62
    8546:	8a 87       	std	Y+10, r24	; 0x0a
    8548:	9b 87       	std	Y+11, r25	; 0x0b
    854a:	6c 87       	std	Y+12, r22	; 0x0c
    854c:	8a e0       	ldi	r24, 0x0A	; 10
    854e:	89 83       	std	Y+1, r24	; 0x01
    8550:	81 e0       	ldi	r24, 0x01	; 1
    8552:	8a 83       	std	Y+2, r24	; 0x02
    8554:	27 e0       	ldi	r18, 0x07	; 7
    8556:	ce 01       	movw	r24, r28
    8558:	03 96       	adiw	r24, 0x03	; 3
    855a:	fc 01       	movw	r30, r24
    855c:	32 2f       	mov	r19, r18
    855e:	11 92       	st	Z+, r1
    8560:	3a 95       	dec	r19
    8562:	e9 f7       	brne	.-6      	; 0x855e <ds3231_set_date_time_arducon+0x26>
    8564:	8a 85       	ldd	r24, Y+10	; 0x0a
    8566:	9b 85       	ldd	r25, Y+11	; 0x0b
    8568:	89 2b       	or	r24, r25
    856a:	09 f4       	brne	.+2      	; 0x856e <ds3231_set_date_time_arducon+0x36>
    856c:	47 c0       	rjmp	.+142    	; 0x85fc <ds3231_set_date_time_arducon+0xc4>
    856e:	8a 85       	ldd	r24, Y+10	; 0x0a
    8570:	9b 85       	ldd	r25, Y+11	; 0x0b
    8572:	0a 96       	adiw	r24, 0x0a	; 10
    8574:	0e 94 f2 3e 	call	0x7de4	; 0x7de4 <_Z8char2bcdPc>
    8578:	8b 83       	std	Y+3, r24	; 0x03
    857a:	8a 85       	ldd	r24, Y+10	; 0x0a
    857c:	9b 85       	ldd	r25, Y+11	; 0x0b
    857e:	08 96       	adiw	r24, 0x08	; 8
    8580:	0e 94 f2 3e 	call	0x7de4	; 0x7de4 <_Z8char2bcdPc>
    8584:	8c 83       	std	Y+4, r24	; 0x04
    8586:	8a 85       	ldd	r24, Y+10	; 0x0a
    8588:	9b 85       	ldd	r25, Y+11	; 0x0b
    858a:	06 96       	adiw	r24, 0x06	; 6
    858c:	0e 94 f2 3e 	call	0x7de4	; 0x7de4 <_Z8char2bcdPc>
    8590:	8d 83       	std	Y+5, r24	; 0x05
    8592:	8a 85       	ldd	r24, Y+10	; 0x0a
    8594:	9b 85       	ldd	r25, Y+11	; 0x0b
    8596:	04 96       	adiw	r24, 0x04	; 4
    8598:	0e 94 f2 3e 	call	0x7de4	; 0x7de4 <_Z8char2bcdPc>
    859c:	8f 83       	std	Y+7, r24	; 0x07
    859e:	8a 85       	ldd	r24, Y+10	; 0x0a
    85a0:	9b 85       	ldd	r25, Y+11	; 0x0b
    85a2:	02 96       	adiw	r24, 0x02	; 2
    85a4:	0e 94 f2 3e 	call	0x7de4	; 0x7de4 <_Z8char2bcdPc>
    85a8:	88 87       	std	Y+8, r24	; 0x08
    85aa:	8a 85       	ldd	r24, Y+10	; 0x0a
    85ac:	9b 85       	ldd	r25, Y+11	; 0x0b
    85ae:	0e 94 f2 3e 	call	0x7de4	; 0x7de4 <_Z8char2bcdPc>
    85b2:	89 87       	std	Y+9, r24	; 0x09
    85b4:	89 81       	ldd	r24, Y+1	; 0x01
    85b6:	9f ef       	ldi	r25, 0xFF	; 255
    85b8:	98 0f       	add	r25, r24
    85ba:	99 83       	std	Y+1, r25	; 0x01
    85bc:	88 23       	and	r24, r24
    85be:	d1 f0       	breq	.+52     	; 0x85f4 <ds3231_set_date_time_arducon+0xbc>
    85c0:	9c 85       	ldd	r25, Y+12	; 0x0c
    85c2:	89 2f       	mov	r24, r25
    85c4:	88 0f       	add	r24, r24
    85c6:	88 0f       	add	r24, r24
    85c8:	88 0f       	add	r24, r24
    85ca:	38 2f       	mov	r19, r24
    85cc:	39 1b       	sub	r19, r25
    85ce:	ce 01       	movw	r24, r28
    85d0:	03 96       	adiw	r24, 0x03	; 3
    85d2:	27 e0       	ldi	r18, 0x07	; 7
    85d4:	ac 01       	movw	r20, r24
    85d6:	63 2f       	mov	r22, r19
    85d8:	80 ed       	ldi	r24, 0xD0	; 208
    85da:	0e 94 07 50 	call	0xa00e	; 0xa00e <I2C_0_SendData>
    85de:	98 2f       	mov	r25, r24
    85e0:	81 e0       	ldi	r24, 0x01	; 1
    85e2:	97 30       	cpi	r25, 0x07	; 7
    85e4:	09 f4       	brne	.+2      	; 0x85e8 <ds3231_set_date_time_arducon+0xb0>
    85e6:	80 e0       	ldi	r24, 0x00	; 0
    85e8:	8a 83       	std	Y+2, r24	; 0x02
    85ea:	8a 81       	ldd	r24, Y+2	; 0x02
    85ec:	88 23       	and	r24, r24
    85ee:	11 f0       	breq	.+4      	; 0x85f4 <ds3231_set_date_time_arducon+0xbc>
    85f0:	81 e0       	ldi	r24, 0x01	; 1
    85f2:	01 c0       	rjmp	.+2      	; 0x85f6 <ds3231_set_date_time_arducon+0xbe>
    85f4:	80 e0       	ldi	r24, 0x00	; 0
    85f6:	88 23       	and	r24, r24
    85f8:	09 f0       	breq	.+2      	; 0x85fc <ds3231_set_date_time_arducon+0xc4>
    85fa:	dc cf       	rjmp	.-72     	; 0x85b4 <ds3231_set_date_time_arducon+0x7c>
    85fc:	8a 81       	ldd	r24, Y+2	; 0x02
    85fe:	2c 96       	adiw	r28, 0x0c	; 12
    8600:	cd bf       	out	0x3d, r28	; 61
    8602:	de bf       	out	0x3e, r29	; 62
    8604:	df 91       	pop	r29
    8606:	cf 91       	pop	r28
    8608:	08 95       	ret

0000860a <ds3231_set_date_time>:
    860a:	cf 93       	push	r28
    860c:	df 93       	push	r29
    860e:	cd b7       	in	r28, 0x3d	; 61
    8610:	de b7       	in	r29, 0x3e	; 62
    8612:	63 97       	sbiw	r28, 0x13	; 19
    8614:	cd bf       	out	0x3d, r28	; 61
    8616:	de bf       	out	0x3e, r29	; 62
    8618:	89 8b       	std	Y+17, r24	; 0x11
    861a:	9a 8b       	std	Y+18, r25	; 0x12
    861c:	6b 8b       	std	Y+19, r22	; 0x13
    861e:	8a e0       	ldi	r24, 0x0A	; 10
    8620:	89 83       	std	Y+1, r24	; 0x01
    8622:	1a 86       	std	Y+10, r1	; 0x0a
    8624:	1b 86       	std	Y+11, r1	; 0x0b
    8626:	1c 86       	std	Y+12, r1	; 0x0c
    8628:	81 e0       	ldi	r24, 0x01	; 1
    862a:	8d 87       	std	Y+13, r24	; 0x0d
    862c:	1e 86       	std	Y+14, r1	; 0x0e
    862e:	1f 86       	std	Y+15, r1	; 0x0f
    8630:	18 8a       	std	Y+16, r1	; 0x10
    8632:	80 ed       	ldi	r24, 0xD0	; 208
    8634:	97 e0       	ldi	r25, 0x07	; 7
    8636:	8a 83       	std	Y+2, r24	; 0x02
    8638:	9b 83       	std	Y+3, r25	; 0x03
    863a:	89 89       	ldd	r24, Y+17	; 0x11
    863c:	9a 89       	ldd	r25, Y+18	; 0x12
    863e:	42 96       	adiw	r24, 0x12	; 18
    8640:	fc 01       	movw	r30, r24
    8642:	80 81       	ld	r24, Z
    8644:	80 53       	subi	r24, 0x30	; 48
    8646:	8a 87       	std	Y+10, r24	; 0x0a
    8648:	8a 85       	ldd	r24, Y+10	; 0x0a
    864a:	28 2f       	mov	r18, r24
    864c:	89 89       	ldd	r24, Y+17	; 0x11
    864e:	9a 89       	ldd	r25, Y+18	; 0x12
    8650:	41 96       	adiw	r24, 0x11	; 17
    8652:	fc 01       	movw	r30, r24
    8654:	80 81       	ld	r24, Z
    8656:	88 2f       	mov	r24, r24
    8658:	90 e0       	ldi	r25, 0x00	; 0
    865a:	c0 97       	sbiw	r24, 0x30	; 48
    865c:	82 95       	swap	r24
    865e:	92 95       	swap	r25
    8660:	90 7f       	andi	r25, 0xF0	; 240
    8662:	98 27       	eor	r25, r24
    8664:	80 7f       	andi	r24, 0xF0	; 240
    8666:	98 27       	eor	r25, r24
    8668:	82 2b       	or	r24, r18
    866a:	8a 87       	std	Y+10, r24	; 0x0a
    866c:	89 89       	ldd	r24, Y+17	; 0x11
    866e:	9a 89       	ldd	r25, Y+18	; 0x12
    8670:	0f 96       	adiw	r24, 0x0f	; 15
    8672:	fc 01       	movw	r30, r24
    8674:	80 81       	ld	r24, Z
    8676:	80 53       	subi	r24, 0x30	; 48
    8678:	8b 87       	std	Y+11, r24	; 0x0b
    867a:	8b 85       	ldd	r24, Y+11	; 0x0b
    867c:	28 2f       	mov	r18, r24
    867e:	89 89       	ldd	r24, Y+17	; 0x11
    8680:	9a 89       	ldd	r25, Y+18	; 0x12
    8682:	0e 96       	adiw	r24, 0x0e	; 14
    8684:	fc 01       	movw	r30, r24
    8686:	80 81       	ld	r24, Z
    8688:	88 2f       	mov	r24, r24
    868a:	90 e0       	ldi	r25, 0x00	; 0
    868c:	c0 97       	sbiw	r24, 0x30	; 48
    868e:	82 95       	swap	r24
    8690:	92 95       	swap	r25
    8692:	90 7f       	andi	r25, 0xF0	; 240
    8694:	98 27       	eor	r25, r24
    8696:	80 7f       	andi	r24, 0xF0	; 240
    8698:	98 27       	eor	r25, r24
    869a:	82 2b       	or	r24, r18
    869c:	8b 87       	std	Y+11, r24	; 0x0b
    869e:	89 89       	ldd	r24, Y+17	; 0x11
    86a0:	9a 89       	ldd	r25, Y+18	; 0x12
    86a2:	0c 96       	adiw	r24, 0x0c	; 12
    86a4:	fc 01       	movw	r30, r24
    86a6:	80 81       	ld	r24, Z
    86a8:	80 53       	subi	r24, 0x30	; 48
    86aa:	8c 87       	std	Y+12, r24	; 0x0c
    86ac:	8c 85       	ldd	r24, Y+12	; 0x0c
    86ae:	28 2f       	mov	r18, r24
    86b0:	89 89       	ldd	r24, Y+17	; 0x11
    86b2:	9a 89       	ldd	r25, Y+18	; 0x12
    86b4:	0b 96       	adiw	r24, 0x0b	; 11
    86b6:	fc 01       	movw	r30, r24
    86b8:	80 81       	ld	r24, Z
    86ba:	88 2f       	mov	r24, r24
    86bc:	90 e0       	ldi	r25, 0x00	; 0
    86be:	c0 97       	sbiw	r24, 0x30	; 48
    86c0:	82 95       	swap	r24
    86c2:	92 95       	swap	r25
    86c4:	90 7f       	andi	r25, 0xF0	; 240
    86c6:	98 27       	eor	r25, r24
    86c8:	80 7f       	andi	r24, 0xF0	; 240
    86ca:	98 27       	eor	r25, r24
    86cc:	82 2b       	or	r24, r18
    86ce:	8c 87       	std	Y+12, r24	; 0x0c
    86d0:	89 89       	ldd	r24, Y+17	; 0x11
    86d2:	9a 89       	ldd	r25, Y+18	; 0x12
    86d4:	09 96       	adiw	r24, 0x09	; 9
    86d6:	fc 01       	movw	r30, r24
    86d8:	80 81       	ld	r24, Z
    86da:	80 53       	subi	r24, 0x30	; 48
    86dc:	8e 87       	std	Y+14, r24	; 0x0e
    86de:	8f 85       	ldd	r24, Y+15	; 0x0f
    86e0:	88 2f       	mov	r24, r24
    86e2:	90 e0       	ldi	r25, 0x00	; 0
    86e4:	8c 83       	std	Y+4, r24	; 0x04
    86e6:	9d 83       	std	Y+5, r25	; 0x05
    86e8:	89 89       	ldd	r24, Y+17	; 0x11
    86ea:	9a 89       	ldd	r25, Y+18	; 0x12
    86ec:	08 96       	adiw	r24, 0x08	; 8
    86ee:	fc 01       	movw	r30, r24
    86f0:	80 81       	ld	r24, Z
    86f2:	88 2f       	mov	r24, r24
    86f4:	90 e0       	ldi	r25, 0x00	; 0
    86f6:	c0 97       	sbiw	r24, 0x30	; 48
    86f8:	8e 83       	std	Y+6, r24	; 0x06
    86fa:	9f 83       	std	Y+7, r25	; 0x07
    86fc:	8e 81       	ldd	r24, Y+6	; 0x06
    86fe:	9f 81       	ldd	r25, Y+7	; 0x07
    8700:	88 0f       	add	r24, r24
    8702:	99 1f       	adc	r25, r25
    8704:	9c 01       	movw	r18, r24
    8706:	22 0f       	add	r18, r18
    8708:	33 1f       	adc	r19, r19
    870a:	22 0f       	add	r18, r18
    870c:	33 1f       	adc	r19, r19
    870e:	82 0f       	add	r24, r18
    8710:	93 1f       	adc	r25, r19
    8712:	2c 81       	ldd	r18, Y+4	; 0x04
    8714:	3d 81       	ldd	r19, Y+5	; 0x05
    8716:	82 0f       	add	r24, r18
    8718:	93 1f       	adc	r25, r19
    871a:	8c 83       	std	Y+4, r24	; 0x04
    871c:	9d 83       	std	Y+5, r25	; 0x05
    871e:	8e 85       	ldd	r24, Y+14	; 0x0e
    8720:	28 2f       	mov	r18, r24
    8722:	8e 81       	ldd	r24, Y+6	; 0x06
    8724:	9f 81       	ldd	r25, Y+7	; 0x07
    8726:	82 95       	swap	r24
    8728:	92 95       	swap	r25
    872a:	90 7f       	andi	r25, 0xF0	; 240
    872c:	98 27       	eor	r25, r24
    872e:	80 7f       	andi	r24, 0xF0	; 240
    8730:	98 27       	eor	r25, r24
    8732:	82 2b       	or	r24, r18
    8734:	8e 87       	std	Y+14, r24	; 0x0e
    8736:	89 89       	ldd	r24, Y+17	; 0x11
    8738:	9a 89       	ldd	r25, Y+18	; 0x12
    873a:	06 96       	adiw	r24, 0x06	; 6
    873c:	fc 01       	movw	r30, r24
    873e:	80 81       	ld	r24, Z
    8740:	80 53       	subi	r24, 0x30	; 48
    8742:	8f 87       	std	Y+15, r24	; 0x0f
    8744:	88 89       	ldd	r24, Y+16	; 0x10
    8746:	88 2f       	mov	r24, r24
    8748:	90 e0       	ldi	r25, 0x00	; 0
    874a:	88 87       	std	Y+8, r24	; 0x08
    874c:	99 87       	std	Y+9, r25	; 0x09
    874e:	89 89       	ldd	r24, Y+17	; 0x11
    8750:	9a 89       	ldd	r25, Y+18	; 0x12
    8752:	05 96       	adiw	r24, 0x05	; 5
    8754:	fc 01       	movw	r30, r24
    8756:	80 81       	ld	r24, Z
    8758:	88 2f       	mov	r24, r24
    875a:	90 e0       	ldi	r25, 0x00	; 0
    875c:	c0 97       	sbiw	r24, 0x30	; 48
    875e:	8e 83       	std	Y+6, r24	; 0x06
    8760:	9f 83       	std	Y+7, r25	; 0x07
    8762:	8e 81       	ldd	r24, Y+6	; 0x06
    8764:	9f 81       	ldd	r25, Y+7	; 0x07
    8766:	88 0f       	add	r24, r24
    8768:	99 1f       	adc	r25, r25
    876a:	9c 01       	movw	r18, r24
    876c:	22 0f       	add	r18, r18
    876e:	33 1f       	adc	r19, r19
    8770:	22 0f       	add	r18, r18
    8772:	33 1f       	adc	r19, r19
    8774:	82 0f       	add	r24, r18
    8776:	93 1f       	adc	r25, r19
    8778:	28 85       	ldd	r18, Y+8	; 0x08
    877a:	39 85       	ldd	r19, Y+9	; 0x09
    877c:	82 0f       	add	r24, r18
    877e:	93 1f       	adc	r25, r19
    8780:	88 87       	std	Y+8, r24	; 0x08
    8782:	99 87       	std	Y+9, r25	; 0x09
    8784:	8f 85       	ldd	r24, Y+15	; 0x0f
    8786:	28 2f       	mov	r18, r24
    8788:	8e 81       	ldd	r24, Y+6	; 0x06
    878a:	9f 81       	ldd	r25, Y+7	; 0x07
    878c:	82 95       	swap	r24
    878e:	92 95       	swap	r25
    8790:	90 7f       	andi	r25, 0xF0	; 240
    8792:	98 27       	eor	r25, r24
    8794:	80 7f       	andi	r24, 0xF0	; 240
    8796:	98 27       	eor	r25, r24
    8798:	82 2b       	or	r24, r18
    879a:	8f 87       	std	Y+15, r24	; 0x0f
    879c:	89 89       	ldd	r24, Y+17	; 0x11
    879e:	9a 89       	ldd	r25, Y+18	; 0x12
    87a0:	03 96       	adiw	r24, 0x03	; 3
    87a2:	fc 01       	movw	r30, r24
    87a4:	80 81       	ld	r24, Z
    87a6:	80 53       	subi	r24, 0x30	; 48
    87a8:	88 8b       	std	Y+16, r24	; 0x10
    87aa:	89 89       	ldd	r24, Y+17	; 0x11
    87ac:	88 2f       	mov	r24, r24
    87ae:	90 e0       	ldi	r25, 0x00	; 0
    87b0:	2a 81       	ldd	r18, Y+2	; 0x02
    87b2:	3b 81       	ldd	r19, Y+3	; 0x03
    87b4:	82 0f       	add	r24, r18
    87b6:	93 1f       	adc	r25, r19
    87b8:	8a 83       	std	Y+2, r24	; 0x02
    87ba:	9b 83       	std	Y+3, r25	; 0x03
    87bc:	89 89       	ldd	r24, Y+17	; 0x11
    87be:	9a 89       	ldd	r25, Y+18	; 0x12
    87c0:	02 96       	adiw	r24, 0x02	; 2
    87c2:	fc 01       	movw	r30, r24
    87c4:	80 81       	ld	r24, Z
    87c6:	88 2f       	mov	r24, r24
    87c8:	90 e0       	ldi	r25, 0x00	; 0
    87ca:	c0 97       	sbiw	r24, 0x30	; 48
    87cc:	8e 83       	std	Y+6, r24	; 0x06
    87ce:	9f 83       	std	Y+7, r25	; 0x07
    87d0:	8e 81       	ldd	r24, Y+6	; 0x06
    87d2:	9f 81       	ldd	r25, Y+7	; 0x07
    87d4:	88 0f       	add	r24, r24
    87d6:	99 1f       	adc	r25, r25
    87d8:	9c 01       	movw	r18, r24
    87da:	22 0f       	add	r18, r18
    87dc:	33 1f       	adc	r19, r19
    87de:	22 0f       	add	r18, r18
    87e0:	33 1f       	adc	r19, r19
    87e2:	82 0f       	add	r24, r18
    87e4:	93 1f       	adc	r25, r19
    87e6:	2a 81       	ldd	r18, Y+2	; 0x02
    87e8:	3b 81       	ldd	r19, Y+3	; 0x03
    87ea:	82 0f       	add	r24, r18
    87ec:	93 1f       	adc	r25, r19
    87ee:	8a 83       	std	Y+2, r24	; 0x02
    87f0:	9b 83       	std	Y+3, r25	; 0x03
    87f2:	88 89       	ldd	r24, Y+16	; 0x10
    87f4:	28 2f       	mov	r18, r24
    87f6:	8e 81       	ldd	r24, Y+6	; 0x06
    87f8:	9f 81       	ldd	r25, Y+7	; 0x07
    87fa:	82 95       	swap	r24
    87fc:	92 95       	swap	r25
    87fe:	90 7f       	andi	r25, 0xF0	; 240
    8800:	98 27       	eor	r25, r24
    8802:	80 7f       	andi	r24, 0xF0	; 240
    8804:	98 27       	eor	r25, r24
    8806:	82 2b       	or	r24, r18
    8808:	88 8b       	std	Y+16, r24	; 0x10
    880a:	89 81       	ldd	r24, Y+1	; 0x01
    880c:	9f ef       	ldi	r25, 0xFF	; 255
    880e:	98 0f       	add	r25, r24
    8810:	99 83       	std	Y+1, r25	; 0x01
    8812:	88 23       	and	r24, r24
    8814:	99 f0       	breq	.+38     	; 0x883c <ds3231_set_date_time+0x232>
    8816:	9b 89       	ldd	r25, Y+19	; 0x13
    8818:	89 2f       	mov	r24, r25
    881a:	88 0f       	add	r24, r24
    881c:	88 0f       	add	r24, r24
    881e:	88 0f       	add	r24, r24
    8820:	38 2f       	mov	r19, r24
    8822:	39 1b       	sub	r19, r25
    8824:	ce 01       	movw	r24, r28
    8826:	0a 96       	adiw	r24, 0x0a	; 10
    8828:	27 e0       	ldi	r18, 0x07	; 7
    882a:	ac 01       	movw	r20, r24
    882c:	63 2f       	mov	r22, r19
    882e:	80 ed       	ldi	r24, 0xD0	; 208
    8830:	0e 94 07 50 	call	0xa00e	; 0xa00e <I2C_0_SendData>
    8834:	87 30       	cpi	r24, 0x07	; 7
    8836:	11 f0       	breq	.+4      	; 0x883c <ds3231_set_date_time+0x232>
    8838:	81 e0       	ldi	r24, 0x01	; 1
    883a:	01 c0       	rjmp	.+2      	; 0x883e <ds3231_set_date_time+0x234>
    883c:	80 e0       	ldi	r24, 0x00	; 0
    883e:	88 23       	and	r24, r24
    8840:	09 f0       	breq	.+2      	; 0x8844 <ds3231_set_date_time+0x23a>
    8842:	e3 cf       	rjmp	.-58     	; 0x880a <ds3231_set_date_time+0x200>
    8844:	00 00       	nop
    8846:	63 96       	adiw	r28, 0x13	; 19
    8848:	cd bf       	out	0x3d, r28	; 61
    884a:	de bf       	out	0x3e, r29	; 62
    884c:	df 91       	pop	r29
    884e:	cf 91       	pop	r28
    8850:	08 95       	ret

00008852 <ds3231_1s_sqw>:
#endif // DATE_STRING_SUPPORT_ENABLED
	
	bool ds3231_1s_sqw(bool enable)
	{
    8852:	cf 93       	push	r28
    8854:	df 93       	push	r29
    8856:	00 d0       	rcall	.+0      	; 0x8858 <ds3231_1s_sqw+0x6>
    8858:	00 d0       	rcall	.+0      	; 0x885a <ds3231_1s_sqw+0x8>
    885a:	cd b7       	in	r28, 0x3d	; 61
    885c:	de b7       	in	r29, 0x3e	; 62
    885e:	8c 83       	std	Y+4, r24	; 0x04
		uint8_t tries = 10; /* try several times in case of transient bus issues */
    8860:	8a e0       	ldi	r24, 0x0A	; 10
    8862:	89 83       	std	Y+1, r24	; 0x01
		bool failure;
		uint8_t data[1];
		
		data[0] = enable ? 0x00:0x04;	
    8864:	8c 81       	ldd	r24, Y+4	; 0x04
    8866:	88 23       	and	r24, r24
    8868:	11 f0       	breq	.+4      	; 0x886e <ds3231_1s_sqw+0x1c>
    886a:	80 e0       	ldi	r24, 0x00	; 0
    886c:	01 c0       	rjmp	.+2      	; 0x8870 <ds3231_1s_sqw+0x1e>
    886e:	84 e0       	ldi	r24, 0x04	; 4
    8870:	8b 83       	std	Y+3, r24	; 0x03
		while(tries-- && (failure = (I2C_0_SendData(DS3231_I2C_SLAVE_ADDR, RTC_CONTROL, data, 1) != 1)));
    8872:	89 81       	ldd	r24, Y+1	; 0x01
    8874:	9f ef       	ldi	r25, 0xFF	; 255
    8876:	98 0f       	add	r25, r24
    8878:	99 83       	std	Y+1, r25	; 0x01
    887a:	88 23       	and	r24, r24
    887c:	99 f0       	breq	.+38     	; 0x88a4 <ds3231_1s_sqw+0x52>
    887e:	ce 01       	movw	r24, r28
    8880:	03 96       	adiw	r24, 0x03	; 3
    8882:	21 e0       	ldi	r18, 0x01	; 1
    8884:	ac 01       	movw	r20, r24
    8886:	6e e0       	ldi	r22, 0x0E	; 14
    8888:	80 ed       	ldi	r24, 0xD0	; 208
    888a:	0e 94 07 50 	call	0xa00e	; 0xa00e <I2C_0_SendData>
    888e:	98 2f       	mov	r25, r24
    8890:	81 e0       	ldi	r24, 0x01	; 1
    8892:	91 30       	cpi	r25, 0x01	; 1
    8894:	09 f4       	brne	.+2      	; 0x8898 <ds3231_1s_sqw+0x46>
    8896:	80 e0       	ldi	r24, 0x00	; 0
    8898:	8a 83       	std	Y+2, r24	; 0x02
    889a:	8a 81       	ldd	r24, Y+2	; 0x02
    889c:	88 23       	and	r24, r24
    889e:	11 f0       	breq	.+4      	; 0x88a4 <ds3231_1s_sqw+0x52>
    88a0:	81 e0       	ldi	r24, 0x01	; 1
    88a2:	01 c0       	rjmp	.+2      	; 0x88a6 <ds3231_1s_sqw+0x54>
    88a4:	80 e0       	ldi	r24, 0x00	; 0
    88a6:	88 23       	and	r24, r24
    88a8:	09 f0       	breq	.+2      	; 0x88ac <ds3231_1s_sqw+0x5a>
    88aa:	e3 cf       	rjmp	.-58     	; 0x8872 <ds3231_1s_sqw+0x20>
		
		return(failure);
    88ac:	8a 81       	ldd	r24, Y+2	; 0x02
	}
    88ae:	24 96       	adiw	r28, 0x04	; 4
    88b0:	cd bf       	out	0x3d, r28	; 61
    88b2:	de bf       	out	0x3e, r29	; 62
    88b4:	df 91       	pop	r29
    88b6:	cf 91       	pop	r28
    88b8:	08 95       	ret

000088ba <ds3231_set_aging>:


	bool ds3231_set_aging(int8_t data_in)
	{
    88ba:	cf 93       	push	r28
    88bc:	df 93       	push	r29
    88be:	00 d0       	rcall	.+0      	; 0x88c0 <ds3231_set_aging+0x6>
    88c0:	00 d0       	rcall	.+0      	; 0x88c2 <ds3231_set_aging+0x8>
    88c2:	cd b7       	in	r28, 0x3d	; 61
    88c4:	de b7       	in	r29, 0x3e	; 62
    88c6:	8c 83       	std	Y+4, r24	; 0x04
		uint8_t tries = 10; /* try several times in case of transient bus issues */
    88c8:	8a e0       	ldi	r24, 0x0A	; 10
    88ca:	89 83       	std	Y+1, r24	; 0x01
		bool failure;
		int8_t data[1];
		
		data[0] = data_in;
    88cc:	8c 81       	ldd	r24, Y+4	; 0x04
    88ce:	8b 83       	std	Y+3, r24	; 0x03
		while(tries-- && (failure = (I2C_0_SendData(DS3231_I2C_SLAVE_ADDR, RTC_AGING, (uint8_t *)data, 1) != 1)));
    88d0:	89 81       	ldd	r24, Y+1	; 0x01
    88d2:	9f ef       	ldi	r25, 0xFF	; 255
    88d4:	98 0f       	add	r25, r24
    88d6:	99 83       	std	Y+1, r25	; 0x01
    88d8:	88 23       	and	r24, r24
    88da:	99 f0       	breq	.+38     	; 0x8902 <ds3231_set_aging+0x48>
    88dc:	ce 01       	movw	r24, r28
    88de:	03 96       	adiw	r24, 0x03	; 3
    88e0:	21 e0       	ldi	r18, 0x01	; 1
    88e2:	ac 01       	movw	r20, r24
    88e4:	60 e1       	ldi	r22, 0x10	; 16
    88e6:	80 ed       	ldi	r24, 0xD0	; 208
    88e8:	0e 94 07 50 	call	0xa00e	; 0xa00e <I2C_0_SendData>
    88ec:	98 2f       	mov	r25, r24
    88ee:	81 e0       	ldi	r24, 0x01	; 1
    88f0:	91 30       	cpi	r25, 0x01	; 1
    88f2:	09 f4       	brne	.+2      	; 0x88f6 <ds3231_set_aging+0x3c>
    88f4:	80 e0       	ldi	r24, 0x00	; 0
    88f6:	8a 83       	std	Y+2, r24	; 0x02
    88f8:	8a 81       	ldd	r24, Y+2	; 0x02
    88fa:	88 23       	and	r24, r24
    88fc:	11 f0       	breq	.+4      	; 0x8902 <ds3231_set_aging+0x48>
    88fe:	81 e0       	ldi	r24, 0x01	; 1
    8900:	01 c0       	rjmp	.+2      	; 0x8904 <ds3231_set_aging+0x4a>
    8902:	80 e0       	ldi	r24, 0x00	; 0
    8904:	88 23       	and	r24, r24
    8906:	09 f0       	breq	.+2      	; 0x890a <ds3231_set_aging+0x50>
    8908:	e3 cf       	rjmp	.-58     	; 0x88d0 <ds3231_set_aging+0x16>
		return(failure);
    890a:	8a 81       	ldd	r24, Y+2	; 0x02
	}
    890c:	24 96       	adiw	r28, 0x04	; 4
    890e:	cd bf       	out	0x3d, r28	; 61
    8910:	de bf       	out	0x3e, r29	; 62
    8912:	df 91       	pop	r29
    8914:	cf 91       	pop	r28
    8916:	08 95       	ret

00008918 <ds3231_get_aging>:


	int8_t ds3231_get_aging()
	{
    8918:	cf 93       	push	r28
    891a:	df 93       	push	r29
    891c:	00 d0       	rcall	.+0      	; 0x891e <ds3231_get_aging+0x6>
    891e:	1f 92       	push	r1
    8920:	cd b7       	in	r28, 0x3d	; 61
    8922:	de b7       	in	r29, 0x3e	; 62
		uint8_t tries = 10; /* try several times in case of transient bus issues */
    8924:	8a e0       	ldi	r24, 0x0A	; 10
    8926:	89 83       	std	Y+1, r24	; 0x01
		bool failure;
		int8_t data[1];
		
		while(tries-- && (failure = (I2C_0_GetData(DS3231_I2C_SLAVE_ADDR, RTC_AGING, (uint8_t *)data, 1) != 1)));
    8928:	89 81       	ldd	r24, Y+1	; 0x01
    892a:	9f ef       	ldi	r25, 0xFF	; 255
    892c:	98 0f       	add	r25, r24
    892e:	99 83       	std	Y+1, r25	; 0x01
    8930:	88 23       	and	r24, r24
    8932:	99 f0       	breq	.+38     	; 0x895a <ds3231_get_aging+0x42>
    8934:	ce 01       	movw	r24, r28
    8936:	03 96       	adiw	r24, 0x03	; 3
    8938:	21 e0       	ldi	r18, 0x01	; 1
    893a:	ac 01       	movw	r20, r24
    893c:	60 e1       	ldi	r22, 0x10	; 16
    893e:	80 ed       	ldi	r24, 0xD0	; 208
    8940:	0e 94 6f 50 	call	0xa0de	; 0xa0de <I2C_0_GetData>
    8944:	98 2f       	mov	r25, r24
    8946:	81 e0       	ldi	r24, 0x01	; 1
    8948:	91 30       	cpi	r25, 0x01	; 1
    894a:	09 f4       	brne	.+2      	; 0x894e <ds3231_get_aging+0x36>
    894c:	80 e0       	ldi	r24, 0x00	; 0
    894e:	8a 83       	std	Y+2, r24	; 0x02
    8950:	8a 81       	ldd	r24, Y+2	; 0x02
    8952:	88 23       	and	r24, r24
    8954:	11 f0       	breq	.+4      	; 0x895a <ds3231_get_aging+0x42>
    8956:	81 e0       	ldi	r24, 0x01	; 1
    8958:	01 c0       	rjmp	.+2      	; 0x895c <ds3231_get_aging+0x44>
    895a:	80 e0       	ldi	r24, 0x00	; 0
    895c:	88 23       	and	r24, r24
    895e:	09 f0       	breq	.+2      	; 0x8962 <ds3231_get_aging+0x4a>
    8960:	e3 cf       	rjmp	.-58     	; 0x8928 <ds3231_get_aging+0x10>
		return(data[0]);
    8962:	8b 81       	ldd	r24, Y+3	; 0x03
	}
    8964:	23 96       	adiw	r28, 0x03	; 3
    8966:	cd bf       	out	0x3d, r28	; 61
    8968:	de bf       	out	0x3e, r29	; 62
    896a:	df 91       	pop	r29
    896c:	cf 91       	pop	r28
    896e:	08 95       	ret

00008970 <ds3231_responding>:

	bool ds3231_responding()
	{
    8970:	cf 93       	push	r28
    8972:	df 93       	push	r29
    8974:	00 d0       	rcall	.+0      	; 0x8976 <ds3231_responding+0x6>
    8976:	1f 92       	push	r1
    8978:	cd b7       	in	r28, 0x3d	; 61
    897a:	de b7       	in	r29, 0x3e	; 62
		bool responseReceived = false;
    897c:	19 82       	std	Y+1, r1	; 0x01
		uint8_t tries = 10;
    897e:	8a e0       	ldi	r24, 0x0A	; 10
    8980:	8a 83       	std	Y+2, r24	; 0x02
		int8_t data[1];		
		while(tries-- && !(responseReceived = (I2C_0_GetData(DS3231_I2C_SLAVE_ADDR, RTC_AGING, (uint8_t *)data, 1) == 1)));
    8982:	8a 81       	ldd	r24, Y+2	; 0x02
    8984:	9f ef       	ldi	r25, 0xFF	; 255
    8986:	98 0f       	add	r25, r24
    8988:	9a 83       	std	Y+2, r25	; 0x02
    898a:	88 23       	and	r24, r24
    898c:	a9 f0       	breq	.+42     	; 0x89b8 <ds3231_responding+0x48>
    898e:	ce 01       	movw	r24, r28
    8990:	03 96       	adiw	r24, 0x03	; 3
    8992:	21 e0       	ldi	r18, 0x01	; 1
    8994:	ac 01       	movw	r20, r24
    8996:	60 e1       	ldi	r22, 0x10	; 16
    8998:	80 ed       	ldi	r24, 0xD0	; 208
    899a:	0e 94 6f 50 	call	0xa0de	; 0xa0de <I2C_0_GetData>
    899e:	98 2f       	mov	r25, r24
    89a0:	81 e0       	ldi	r24, 0x01	; 1
    89a2:	91 30       	cpi	r25, 0x01	; 1
    89a4:	09 f0       	breq	.+2      	; 0x89a8 <ds3231_responding+0x38>
    89a6:	80 e0       	ldi	r24, 0x00	; 0
    89a8:	89 83       	std	Y+1, r24	; 0x01
    89aa:	99 81       	ldd	r25, Y+1	; 0x01
    89ac:	81 e0       	ldi	r24, 0x01	; 1
    89ae:	89 27       	eor	r24, r25
    89b0:	88 23       	and	r24, r24
    89b2:	11 f0       	breq	.+4      	; 0x89b8 <ds3231_responding+0x48>
    89b4:	81 e0       	ldi	r24, 0x01	; 1
    89b6:	01 c0       	rjmp	.+2      	; 0x89ba <ds3231_responding+0x4a>
    89b8:	80 e0       	ldi	r24, 0x00	; 0
    89ba:	88 23       	and	r24, r24
    89bc:	09 f0       	breq	.+2      	; 0x89c0 <ds3231_responding+0x50>
    89be:	e1 cf       	rjmp	.-62     	; 0x8982 <ds3231_responding+0x12>
		return(responseReceived);
    89c0:	89 81       	ldd	r24, Y+1	; 0x01
	}
    89c2:	23 96       	adiw	r28, 0x03	; 3
    89c4:	cd bf       	out	0x3d, r28	; 61
    89c6:	de bf       	out	0x3e, r29	; 62
    89c8:	df 91       	pop	r29
    89ca:	cf 91       	pop	r28
    89cc:	08 95       	ret

000089ce <ds3231_sync2nearestMinute>:

/* This simple synchronization approach works for all times except 12 midnight. If synchronization
results in the advancement to the next day, then one day would be lost. Instead of introducing that
error, this function merely fails to synchronize at midnight. */
bool ds3231_sync2nearestMinute()
{
    89ce:	cf 93       	push	r28
    89d0:	df 93       	push	r29
    89d2:	cd b7       	in	r28, 0x3d	; 61
    89d4:	de b7       	in	r29, 0x3e	; 62
    89d6:	61 97       	sbiw	r28, 0x11	; 17
    89d8:	cd bf       	out	0x3d, r28	; 61
    89da:	de bf       	out	0x3e, r29	; 62
	uint8_t tries = 10; /* try several times in case of transient bus issues */
    89dc:	8a e0       	ldi	r24, 0x0A	; 10
    89de:	89 83       	std	Y+1, r24	; 0x01
	bool err = false;
    89e0:	1a 82       	std	Y+2, r1	; 0x02
	uint8_t data[8] = { 0, 0, 0 };
    89e2:	28 e0       	ldi	r18, 0x08	; 8
    89e4:	ce 01       	movw	r24, r28
    89e6:	0a 96       	adiw	r24, 0x0a	; 10
    89e8:	fc 01       	movw	r30, r24
    89ea:	32 2f       	mov	r19, r18
    89ec:	11 92       	st	Z+, r1
    89ee:	3a 95       	dec	r19
    89f0:	e9 f7       	brne	.-6      	; 0x89ec <ds3231_sync2nearestMinute+0x1e>
		
	while(tries-- && (err = (I2C_0_GetData(DS3231_I2C_SLAVE_ADDR, RTC_SECONDS, (uint8_t *)data, 3) != 3)));
    89f2:	89 81       	ldd	r24, Y+1	; 0x01
    89f4:	9f ef       	ldi	r25, 0xFF	; 255
    89f6:	98 0f       	add	r25, r24
    89f8:	99 83       	std	Y+1, r25	; 0x01
    89fa:	88 23       	and	r24, r24
    89fc:	99 f0       	breq	.+38     	; 0x8a24 <ds3231_sync2nearestMinute+0x56>
    89fe:	ce 01       	movw	r24, r28
    8a00:	0a 96       	adiw	r24, 0x0a	; 10
    8a02:	23 e0       	ldi	r18, 0x03	; 3
    8a04:	ac 01       	movw	r20, r24
    8a06:	60 e0       	ldi	r22, 0x00	; 0
    8a08:	80 ed       	ldi	r24, 0xD0	; 208
    8a0a:	0e 94 6f 50 	call	0xa0de	; 0xa0de <I2C_0_GetData>
    8a0e:	98 2f       	mov	r25, r24
    8a10:	81 e0       	ldi	r24, 0x01	; 1
    8a12:	93 30       	cpi	r25, 0x03	; 3
    8a14:	09 f4       	brne	.+2      	; 0x8a18 <ds3231_sync2nearestMinute+0x4a>
    8a16:	80 e0       	ldi	r24, 0x00	; 0
    8a18:	8a 83       	std	Y+2, r24	; 0x02
    8a1a:	8a 81       	ldd	r24, Y+2	; 0x02
    8a1c:	88 23       	and	r24, r24
    8a1e:	11 f0       	breq	.+4      	; 0x8a24 <ds3231_sync2nearestMinute+0x56>
    8a20:	81 e0       	ldi	r24, 0x01	; 1
    8a22:	01 c0       	rjmp	.+2      	; 0x8a26 <ds3231_sync2nearestMinute+0x58>
    8a24:	80 e0       	ldi	r24, 0x00	; 0
    8a26:	88 23       	and	r24, r24
    8a28:	09 f0       	breq	.+2      	; 0x8a2c <ds3231_sync2nearestMinute+0x5e>
    8a2a:	e3 cf       	rjmp	.-58     	; 0x89f2 <ds3231_sync2nearestMinute+0x24>

	if(!err)
    8a2c:	9a 81       	ldd	r25, Y+2	; 0x02
    8a2e:	81 e0       	ldi	r24, 0x01	; 1
    8a30:	89 27       	eor	r24, r25
    8a32:	88 23       	and	r24, r24
    8a34:	09 f4       	brne	.+2      	; 0x8a38 <ds3231_sync2nearestMinute+0x6a>
    8a36:	ad c0       	rjmp	.+346    	; 0x8b92 <ds3231_sync2nearestMinute+0x1c4>
		uint8_t hour10;
		uint8_t hour;
		bool am_pm;
		bool twelvehour;

		seconds = bcd2dec(data[0]);
    8a38:	8a 85       	ldd	r24, Y+10	; 0x0a
    8a3a:	0e 94 a1 3e 	call	0x7d42	; 0x7d42 <_Z7bcd2dech>
    8a3e:	8e 83       	std	Y+6, r24	; 0x06
		minutes = bcd2dec(data[1]);
    8a40:	8b 85       	ldd	r24, Y+11	; 0x0b
    8a42:	0e 94 a1 3e 	call	0x7d42	; 0x7d42 <_Z7bcd2dech>
    8a46:	8c 83       	std	Y+4, r24	; 0x04
		am_pm = ((data[2] >> 5) & 0x01);
    8a48:	8c 85       	ldd	r24, Y+12	; 0x0c
    8a4a:	88 2f       	mov	r24, r24
    8a4c:	90 e0       	ldi	r25, 0x00	; 0
    8a4e:	80 72       	andi	r24, 0x20	; 32
    8a50:	99 27       	eor	r25, r25
    8a52:	21 e0       	ldi	r18, 0x01	; 1
    8a54:	89 2b       	or	r24, r25
    8a56:	09 f4       	brne	.+2      	; 0x8a5a <ds3231_sync2nearestMinute+0x8c>
    8a58:	20 e0       	ldi	r18, 0x00	; 0
    8a5a:	2f 83       	std	Y+7, r18	; 0x07
		hour10 = ((data[2] >> 4) & 0x01);
    8a5c:	8c 85       	ldd	r24, Y+12	; 0x0c
    8a5e:	88 2f       	mov	r24, r24
    8a60:	90 e0       	ldi	r25, 0x00	; 0
    8a62:	95 95       	asr	r25
    8a64:	87 95       	ror	r24
    8a66:	95 95       	asr	r25
    8a68:	87 95       	ror	r24
    8a6a:	95 95       	asr	r25
    8a6c:	87 95       	ror	r24
    8a6e:	95 95       	asr	r25
    8a70:	87 95       	ror	r24
    8a72:	81 70       	andi	r24, 0x01	; 1
    8a74:	8d 83       	std	Y+5, r24	; 0x05
		hour = (data[2] & 0x0f);
    8a76:	8c 85       	ldd	r24, Y+12	; 0x0c
    8a78:	8f 70       	andi	r24, 0x0F	; 15
    8a7a:	88 87       	std	Y+8, r24	; 0x08

		twelvehour = ((data[2] >> 6) & 0x01);
    8a7c:	8c 85       	ldd	r24, Y+12	; 0x0c
    8a7e:	88 2f       	mov	r24, r24
    8a80:	90 e0       	ldi	r25, 0x00	; 0
    8a82:	80 74       	andi	r24, 0x40	; 64
    8a84:	99 27       	eor	r25, r25
    8a86:	21 e0       	ldi	r18, 0x01	; 1
    8a88:	89 2b       	or	r24, r25
    8a8a:	09 f4       	brne	.+2      	; 0x8a8e <ds3231_sync2nearestMinute+0xc0>
    8a8c:	20 e0       	ldi	r18, 0x00	; 0
    8a8e:	29 87       	std	Y+9, r18	; 0x09

		if(!twelvehour && am_pm)
    8a90:	99 85       	ldd	r25, Y+9	; 0x09
    8a92:	81 e0       	ldi	r24, 0x01	; 1
    8a94:	89 27       	eor	r24, r25
    8a96:	88 23       	and	r24, r24
    8a98:	29 f0       	breq	.+10     	; 0x8aa4 <ds3231_sync2nearestMinute+0xd6>
    8a9a:	8f 81       	ldd	r24, Y+7	; 0x07
    8a9c:	88 23       	and	r24, r24
    8a9e:	11 f0       	breq	.+4      	; 0x8aa4 <ds3231_sync2nearestMinute+0xd6>
		{
			hour10 = 2;
    8aa0:	82 e0       	ldi	r24, 0x02	; 2
    8aa2:	8d 83       	std	Y+5, r24	; 0x05
		}

		hours = 10 * hour10 + hour;
    8aa4:	8d 81       	ldd	r24, Y+5	; 0x05
    8aa6:	88 0f       	add	r24, r24
    8aa8:	98 2f       	mov	r25, r24
    8aaa:	99 0f       	add	r25, r25
    8aac:	99 0f       	add	r25, r25
    8aae:	98 0f       	add	r25, r24
    8ab0:	88 85       	ldd	r24, Y+8	; 0x08
    8ab2:	89 0f       	add	r24, r25
    8ab4:	8b 83       	std	Y+3, r24	; 0x03

		if(seconds > 30)
    8ab6:	8e 81       	ldd	r24, Y+6	; 0x06
    8ab8:	8f 31       	cpi	r24, 0x1F	; 31
    8aba:	78 f0       	brcs	.+30     	; 0x8ada <ds3231_sync2nearestMinute+0x10c>
		{
			minutes++;
    8abc:	8c 81       	ldd	r24, Y+4	; 0x04
    8abe:	8f 5f       	subi	r24, 0xFF	; 255
    8ac0:	8c 83       	std	Y+4, r24	; 0x04

			if(minutes > 59)
    8ac2:	8c 81       	ldd	r24, Y+4	; 0x04
    8ac4:	8c 33       	cpi	r24, 0x3C	; 60
    8ac6:	48 f0       	brcs	.+18     	; 0x8ada <ds3231_sync2nearestMinute+0x10c>
			{
				minutes = 0;
    8ac8:	1c 82       	std	Y+4, r1	; 0x04
				hours++;
    8aca:	8b 81       	ldd	r24, Y+3	; 0x03
    8acc:	8f 5f       	subi	r24, 0xFF	; 255
    8ace:	8b 83       	std	Y+3, r24	; 0x03

				if(hours > 23) /* Don't attempt to synchronize at midnight */
    8ad0:	8b 81       	ldd	r24, Y+3	; 0x03
    8ad2:	88 31       	cpi	r24, 0x18	; 24
    8ad4:	10 f0       	brcs	.+4      	; 0x8ada <ds3231_sync2nearestMinute+0x10c>
				{
					err = true;
    8ad6:	81 e0       	ldi	r24, 0x01	; 1
    8ad8:	8a 83       	std	Y+2, r24	; 0x02
				}
			}
		}

		if(!err)
    8ada:	9a 81       	ldd	r25, Y+2	; 0x02
    8adc:	81 e0       	ldi	r24, 0x01	; 1
    8ade:	89 27       	eor	r24, r25
    8ae0:	88 23       	and	r24, r24
    8ae2:	09 f4       	brne	.+2      	; 0x8ae6 <ds3231_sync2nearestMinute+0x118>
    8ae4:	56 c0       	rjmp	.+172    	; 0x8b92 <ds3231_sync2nearestMinute+0x1c4>
		{
			data[0] = 0; /* seconds = 00 */
    8ae6:	1a 86       	std	Y+10, r1	; 0x0a
			data[1] = dec2bcd(minutes);
    8ae8:	8c 81       	ldd	r24, Y+4	; 0x04
    8aea:	0e 94 c1 3e 	call	0x7d82	; 0x7d82 <_Z7dec2bcdh>
    8aee:	8b 87       	std	Y+11, r24	; 0x0b
			data[2] = 0;
    8af0:	1c 86       	std	Y+12, r1	; 0x0c

			if(twelvehour)
    8af2:	89 85       	ldd	r24, Y+9	; 0x09
    8af4:	88 23       	and	r24, r24
    8af6:	81 f0       	breq	.+32     	; 0x8b18 <ds3231_sync2nearestMinute+0x14a>
			{
				data[2] |= 0x40; /* set  12-hour bit */
    8af8:	8c 85       	ldd	r24, Y+12	; 0x0c
    8afa:	80 64       	ori	r24, 0x40	; 64
    8afc:	8c 87       	std	Y+12, r24	; 0x0c

				if(hours >= 12)
    8afe:	8b 81       	ldd	r24, Y+3	; 0x03
    8b00:	8c 30       	cpi	r24, 0x0C	; 12
    8b02:	18 f0       	brcs	.+6      	; 0x8b0a <ds3231_sync2nearestMinute+0x13c>
				{
					data[2] |= 0x20; /* set pm bit */
    8b04:	8c 85       	ldd	r24, Y+12	; 0x0c
    8b06:	80 62       	ori	r24, 0x20	; 32
    8b08:	8c 87       	std	Y+12, r24	; 0x0c
				}

				if(hours >= 10)
    8b0a:	8b 81       	ldd	r24, Y+3	; 0x03
    8b0c:	8a 30       	cpi	r24, 0x0A	; 10
    8b0e:	88 f0       	brcs	.+34     	; 0x8b32 <ds3231_sync2nearestMinute+0x164>
				{
					data[2] |= 0x10;
    8b10:	8c 85       	ldd	r24, Y+12	; 0x0c
    8b12:	80 61       	ori	r24, 0x10	; 16
    8b14:	8c 87       	std	Y+12, r24	; 0x0c
    8b16:	0d c0       	rjmp	.+26     	; 0x8b32 <ds3231_sync2nearestMinute+0x164>
				}
			}
			else
			{
				if(hours >= 20)
    8b18:	8b 81       	ldd	r24, Y+3	; 0x03
    8b1a:	84 31       	cpi	r24, 0x14	; 20
    8b1c:	20 f0       	brcs	.+8      	; 0x8b26 <ds3231_sync2nearestMinute+0x158>
				{
					data[2] |= 0x20; /* set 20 bit */
    8b1e:	8c 85       	ldd	r24, Y+12	; 0x0c
    8b20:	80 62       	ori	r24, 0x20	; 32
    8b22:	8c 87       	std	Y+12, r24	; 0x0c
    8b24:	06 c0       	rjmp	.+12     	; 0x8b32 <ds3231_sync2nearestMinute+0x164>
				}
				else if(hours >= 10)
    8b26:	8b 81       	ldd	r24, Y+3	; 0x03
    8b28:	8a 30       	cpi	r24, 0x0A	; 10
    8b2a:	18 f0       	brcs	.+6      	; 0x8b32 <ds3231_sync2nearestMinute+0x164>
				{
					data[2] |= 0x10; /* set 10 bit */
    8b2c:	8c 85       	ldd	r24, Y+12	; 0x0c
    8b2e:	80 61       	ori	r24, 0x10	; 16
    8b30:	8c 87       	std	Y+12, r24	; 0x0c
				}
			}

			data[2] |= hours % 10;
    8b32:	2c 85       	ldd	r18, Y+12	; 0x0c
    8b34:	9b 81       	ldd	r25, Y+3	; 0x03
    8b36:	8d ec       	ldi	r24, 0xCD	; 205
    8b38:	98 9f       	mul	r25, r24
    8b3a:	81 2d       	mov	r24, r1
    8b3c:	11 24       	eor	r1, r1
    8b3e:	86 95       	lsr	r24
    8b40:	86 95       	lsr	r24
    8b42:	86 95       	lsr	r24
    8b44:	88 0f       	add	r24, r24
    8b46:	38 2f       	mov	r19, r24
    8b48:	33 0f       	add	r19, r19
    8b4a:	33 0f       	add	r19, r19
    8b4c:	83 0f       	add	r24, r19
    8b4e:	e9 2f       	mov	r30, r25
    8b50:	e8 1b       	sub	r30, r24
    8b52:	8e 2f       	mov	r24, r30
    8b54:	82 2b       	or	r24, r18
    8b56:	8c 87       	std	Y+12, r24	; 0x0c
			
			while(tries-- && (err = (I2C_0_SendData(DS3231_I2C_SLAVE_ADDR, RTC_SECONDS, (uint8_t *)data, 4) != 4)));
    8b58:	89 81       	ldd	r24, Y+1	; 0x01
    8b5a:	9f ef       	ldi	r25, 0xFF	; 255
    8b5c:	98 0f       	add	r25, r24
    8b5e:	99 83       	std	Y+1, r25	; 0x01
    8b60:	88 23       	and	r24, r24
    8b62:	99 f0       	breq	.+38     	; 0x8b8a <ds3231_sync2nearestMinute+0x1bc>
    8b64:	ce 01       	movw	r24, r28
    8b66:	0a 96       	adiw	r24, 0x0a	; 10
    8b68:	24 e0       	ldi	r18, 0x04	; 4
    8b6a:	ac 01       	movw	r20, r24
    8b6c:	60 e0       	ldi	r22, 0x00	; 0
    8b6e:	80 ed       	ldi	r24, 0xD0	; 208
    8b70:	0e 94 07 50 	call	0xa00e	; 0xa00e <I2C_0_SendData>
    8b74:	98 2f       	mov	r25, r24
    8b76:	81 e0       	ldi	r24, 0x01	; 1
    8b78:	94 30       	cpi	r25, 0x04	; 4
    8b7a:	09 f4       	brne	.+2      	; 0x8b7e <ds3231_sync2nearestMinute+0x1b0>
    8b7c:	80 e0       	ldi	r24, 0x00	; 0
    8b7e:	8a 83       	std	Y+2, r24	; 0x02
    8b80:	8a 81       	ldd	r24, Y+2	; 0x02
    8b82:	88 23       	and	r24, r24
    8b84:	11 f0       	breq	.+4      	; 0x8b8a <ds3231_sync2nearestMinute+0x1bc>
    8b86:	81 e0       	ldi	r24, 0x01	; 1
    8b88:	01 c0       	rjmp	.+2      	; 0x8b8c <ds3231_sync2nearestMinute+0x1be>
    8b8a:	80 e0       	ldi	r24, 0x00	; 0
    8b8c:	88 23       	and	r24, r24
    8b8e:	09 f0       	breq	.+2      	; 0x8b92 <ds3231_sync2nearestMinute+0x1c4>
    8b90:	e3 cf       	rjmp	.-58     	; 0x8b58 <ds3231_sync2nearestMinute+0x18a>
		}
	}

	return err;
    8b92:	8a 81       	ldd	r24, Y+2	; 0x02
}
    8b94:	61 96       	adiw	r28, 0x11	; 17
    8b96:	cd bf       	out	0x3d, r28	; 61
    8b98:	de bf       	out	0x3e, r29	; 62
    8b9a:	df 91       	pop	r29
    8b9c:	cf 91       	pop	r28
    8b9e:	08 95       	ret

00008ba0 <convertEpochToTimeString>:
/**
 *   Converts an epoch (seconds since 1900)  into a string with format "ddd dd-mon-yyyy hh:mm:ss zzz"
 */
#define THIRTY_YEARS 946684800
char* convertEpochToTimeString(time_t epoch, char* buf, size_t size)
 {
    8ba0:	cf 93       	push	r28
    8ba2:	df 93       	push	r29
    8ba4:	cd b7       	in	r28, 0x3d	; 61
    8ba6:	de b7       	in	r29, 0x3e	; 62
    8ba8:	68 97       	sbiw	r28, 0x18	; 24
    8baa:	cd bf       	out	0x3d, r28	; 61
    8bac:	de bf       	out	0x3e, r29	; 62
    8bae:	69 8b       	std	Y+17, r22	; 0x11
    8bb0:	7a 8b       	std	Y+18, r23	; 0x12
    8bb2:	8b 8b       	std	Y+19, r24	; 0x13
    8bb4:	9c 8b       	std	Y+20, r25	; 0x14
    8bb6:	4d 8b       	std	Y+21, r20	; 0x15
    8bb8:	5e 8b       	std	Y+22, r21	; 0x16
    8bba:	2f 8b       	std	Y+23, r18	; 0x17
    8bbc:	38 8f       	std	Y+24, r19	; 0x18
   struct tm  ts;
	time_t t = epoch - THIRTY_YEARS;
    8bbe:	89 89       	ldd	r24, Y+17	; 0x11
    8bc0:	9a 89       	ldd	r25, Y+18	; 0x12
    8bc2:	ab 89       	ldd	r26, Y+19	; 0x13
    8bc4:	bc 89       	ldd	r27, Y+20	; 0x14
    8bc6:	80 58       	subi	r24, 0x80	; 128
    8bc8:	93 44       	sbci	r25, 0x43	; 67
    8bca:	ad 46       	sbci	r26, 0x6D	; 109
    8bcc:	b8 43       	sbci	r27, 0x38	; 56
    8bce:	8d 87       	std	Y+13, r24	; 0x0d
    8bd0:	9e 87       	std	Y+14, r25	; 0x0e
    8bd2:	af 87       	std	Y+15, r26	; 0x0f
    8bd4:	b8 8b       	std	Y+16, r27	; 0x10

    // Format time, "ddd dd-mon-yyyy hh:mm:ss zzz"
    ts = *localtime(&t);
    8bd6:	ce 01       	movw	r24, r28
    8bd8:	0d 96       	adiw	r24, 0x0d	; 13
    8bda:	0e 94 98 02 	call	0x530	; 0x530 <localtime>
    8bde:	2c e0       	ldi	r18, 0x0C	; 12
    8be0:	fc 01       	movw	r30, r24
    8be2:	ce 01       	movw	r24, r28
    8be4:	01 96       	adiw	r24, 0x01	; 1
    8be6:	dc 01       	movw	r26, r24
    8be8:	01 90       	ld	r0, Z+
    8bea:	0d 92       	st	X+, r0
    8bec:	2a 95       	dec	r18
    8bee:	e1 f7       	brne	.-8      	; 0x8be8 <convertEpochToTimeString+0x48>
    strftime(buf, size, "%a %d-%b-%Y %H:%M:%S", &ts);
    8bf0:	6f 89       	ldd	r22, Y+23	; 0x17
    8bf2:	78 8d       	ldd	r23, Y+24	; 0x18
    8bf4:	8d 89       	ldd	r24, Y+21	; 0x15
    8bf6:	9e 89       	ldd	r25, Y+22	; 0x16
    8bf8:	9e 01       	movw	r18, r28
    8bfa:	2f 5f       	subi	r18, 0xFF	; 255
    8bfc:	3f 4f       	sbci	r19, 0xFF	; 255
    8bfe:	44 eb       	ldi	r20, 0xB4	; 180
    8c00:	54 e4       	ldi	r21, 0x44	; 68
    8c02:	0e 94 41 03 	call	0x682	; 0x682 <strftime>
   return buf;
    8c06:	8d 89       	ldd	r24, Y+21	; 0x15
    8c08:	9e 89       	ldd	r25, Y+22	; 0x16
 }
    8c0a:	68 96       	adiw	r28, 0x18	; 24
    8c0c:	cd bf       	out	0x3d, r28	; 61
    8c0e:	de bf       	out	0x3e, r29	; 62
    8c10:	df 91       	pop	r29
    8c12:	cf 91       	pop	r28
    8c14:	08 95       	ret

00008c16 <_ZN13EepromManagerC1Ev>:
extern volatile int16_t g_intra_cycle_delay_time;

extern char g_tempStr[];

/* default constructor */
EepromManager::EepromManager()
    8c16:	cf 93       	push	r28
    8c18:	df 93       	push	r29
    8c1a:	00 d0       	rcall	.+0      	; 0x8c1c <_ZN13EepromManagerC1Ev+0x6>
    8c1c:	cd b7       	in	r28, 0x3d	; 61
    8c1e:	de b7       	in	r29, 0x3e	; 62
    8c20:	89 83       	std	Y+1, r24	; 0x01
    8c22:	9a 83       	std	Y+2, r25	; 0x02
{
}   /*EepromManager */
    8c24:	00 00       	nop
    8c26:	0f 90       	pop	r0
    8c28:	0f 90       	pop	r0
    8c2a:	df 91       	pop	r29
    8c2c:	cf 91       	pop	r28
    8c2e:	08 95       	ret

00008c30 <_ZN13EepromManagerD1Ev>:

/* default destructor */
EepromManager::~EepromManager()
    8c30:	cf 93       	push	r28
    8c32:	df 93       	push	r29
    8c34:	00 d0       	rcall	.+0      	; 0x8c36 <_ZN13EepromManagerD1Ev+0x6>
    8c36:	cd b7       	in	r28, 0x3d	; 61
    8c38:	de b7       	in	r29, 0x3e	; 62
    8c3a:	89 83       	std	Y+1, r24	; 0x01
    8c3c:	9a 83       	std	Y+2, r25	; 0x02
{
}   /*~EepromManager */
    8c3e:	00 00       	nop
    8c40:	0f 90       	pop	r0
    8c42:	0f 90       	pop	r0
    8c44:	df 91       	pop	r29
    8c46:	cf 91       	pop	r28
    8c48:	08 95       	ret

00008c4a <_Z21avr_eeprom_write_bytejh>:
#include <avr/io.h>

typedef uint16_t eeprom_addr_t;

// to write
void avr_eeprom_write_byte(eeprom_addr_t index, uint8_t in) {
    8c4a:	cf 93       	push	r28
    8c4c:	df 93       	push	r29
    8c4e:	00 d0       	rcall	.+0      	; 0x8c50 <_Z21avr_eeprom_write_bytejh+0x6>
    8c50:	1f 92       	push	r1
    8c52:	cd b7       	in	r28, 0x3d	; 61
    8c54:	de b7       	in	r29, 0x3e	; 62
    8c56:	89 83       	std	Y+1, r24	; 0x01
    8c58:	9a 83       	std	Y+2, r25	; 0x02
    8c5a:	6b 83       	std	Y+3, r22	; 0x03
	while (NVMCTRL.STATUS & NVMCTRL_EEBUSY_bm);
    8c5c:	80 e0       	ldi	r24, 0x00	; 0
    8c5e:	90 e1       	ldi	r25, 0x10	; 16
    8c60:	fc 01       	movw	r30, r24
    8c62:	82 81       	ldd	r24, Z+2	; 0x02
    8c64:	88 2f       	mov	r24, r24
    8c66:	90 e0       	ldi	r25, 0x00	; 0
    8c68:	82 70       	andi	r24, 0x02	; 2
    8c6a:	99 27       	eor	r25, r25
    8c6c:	21 e0       	ldi	r18, 0x01	; 1
    8c6e:	89 2b       	or	r24, r25
    8c70:	09 f4       	brne	.+2      	; 0x8c74 <_Z21avr_eeprom_write_bytejh+0x2a>
    8c72:	20 e0       	ldi	r18, 0x00	; 0
    8c74:	22 23       	and	r18, r18
    8c76:	09 f0       	breq	.+2      	; 0x8c7a <_Z21avr_eeprom_write_bytejh+0x30>
    8c78:	f1 cf       	rjmp	.-30     	; 0x8c5c <_Z21avr_eeprom_write_bytejh+0x12>
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_EEERWR_gc);
    8c7a:	8d e9       	ldi	r24, 0x9D	; 157
    8c7c:	93 e1       	ldi	r25, 0x13	; 19
    8c7e:	84 bf       	out	0x34, r24	; 52
    8c80:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
	*(uint8_t*)(eeprom_addr_t)(MAPPED_EEPROM_START+index) = in;
    8c84:	89 81       	ldd	r24, Y+1	; 0x01
    8c86:	9a 81       	ldd	r25, Y+2	; 0x02
    8c88:	9c 5e       	subi	r25, 0xEC	; 236
    8c8a:	2b 81       	ldd	r18, Y+3	; 0x03
    8c8c:	fc 01       	movw	r30, r24
    8c8e:	20 83       	st	Z, r18
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_NONE_gc);
    8c90:	8d e9       	ldi	r24, 0x9D	; 157
    8c92:	90 e0       	ldi	r25, 0x00	; 0
    8c94:	84 bf       	out	0x34, r24	; 52
    8c96:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
}
    8c9a:	00 00       	nop
    8c9c:	23 96       	adiw	r28, 0x03	; 3
    8c9e:	cd bf       	out	0x3d, r28	; 61
    8ca0:	de bf       	out	0x3e, r29	; 62
    8ca2:	df 91       	pop	r29
    8ca4:	cf 91       	pop	r28
    8ca6:	08 95       	ret

00008ca8 <_Z21avr_eeprom_write_wordjj>:

void avr_eeprom_write_word(eeprom_addr_t index, uint16_t in) {
    8ca8:	cf 93       	push	r28
    8caa:	df 93       	push	r29
    8cac:	00 d0       	rcall	.+0      	; 0x8cae <_Z21avr_eeprom_write_wordjj+0x6>
    8cae:	00 d0       	rcall	.+0      	; 0x8cb0 <_Z21avr_eeprom_write_wordjj+0x8>
    8cb0:	cd b7       	in	r28, 0x3d	; 61
    8cb2:	de b7       	in	r29, 0x3e	; 62
    8cb4:	89 83       	std	Y+1, r24	; 0x01
    8cb6:	9a 83       	std	Y+2, r25	; 0x02
    8cb8:	6b 83       	std	Y+3, r22	; 0x03
    8cba:	7c 83       	std	Y+4, r23	; 0x04
	while (NVMCTRL.STATUS & NVMCTRL_EEBUSY_bm);
    8cbc:	80 e0       	ldi	r24, 0x00	; 0
    8cbe:	90 e1       	ldi	r25, 0x10	; 16
    8cc0:	fc 01       	movw	r30, r24
    8cc2:	82 81       	ldd	r24, Z+2	; 0x02
    8cc4:	88 2f       	mov	r24, r24
    8cc6:	90 e0       	ldi	r25, 0x00	; 0
    8cc8:	82 70       	andi	r24, 0x02	; 2
    8cca:	99 27       	eor	r25, r25
    8ccc:	21 e0       	ldi	r18, 0x01	; 1
    8cce:	89 2b       	or	r24, r25
    8cd0:	09 f4       	brne	.+2      	; 0x8cd4 <_Z21avr_eeprom_write_wordjj+0x2c>
    8cd2:	20 e0       	ldi	r18, 0x00	; 0
    8cd4:	22 23       	and	r18, r18
    8cd6:	09 f0       	breq	.+2      	; 0x8cda <_Z21avr_eeprom_write_wordjj+0x32>
    8cd8:	f1 cf       	rjmp	.-30     	; 0x8cbc <_Z21avr_eeprom_write_wordjj+0x14>
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_EEERWR_gc);
    8cda:	8d e9       	ldi	r24, 0x9D	; 157
    8cdc:	93 e1       	ldi	r25, 0x13	; 19
    8cde:	84 bf       	out	0x34, r24	; 52
    8ce0:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
	*(uint16_t*)(eeprom_addr_t)(MAPPED_EEPROM_START+index) = in;
    8ce4:	89 81       	ldd	r24, Y+1	; 0x01
    8ce6:	9a 81       	ldd	r25, Y+2	; 0x02
    8ce8:	9c 5e       	subi	r25, 0xEC	; 236
    8cea:	9c 01       	movw	r18, r24
    8cec:	8b 81       	ldd	r24, Y+3	; 0x03
    8cee:	9c 81       	ldd	r25, Y+4	; 0x04
    8cf0:	f9 01       	movw	r30, r18
    8cf2:	80 83       	st	Z, r24
    8cf4:	91 83       	std	Z+1, r25	; 0x01
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_NONE_gc);
    8cf6:	8d e9       	ldi	r24, 0x9D	; 157
    8cf8:	90 e0       	ldi	r25, 0x00	; 0
    8cfa:	84 bf       	out	0x34, r24	; 52
    8cfc:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
}
    8d00:	00 00       	nop
    8d02:	24 96       	adiw	r28, 0x04	; 4
    8d04:	cd bf       	out	0x3d, r28	; 61
    8d06:	de bf       	out	0x3e, r29	; 62
    8d08:	df 91       	pop	r29
    8d0a:	cf 91       	pop	r28
    8d0c:	08 95       	ret

00008d0e <_Z22avr_eeprom_write_dwordjm>:

void avr_eeprom_write_dword(eeprom_addr_t index, uint32_t in) {
    8d0e:	cf 93       	push	r28
    8d10:	df 93       	push	r29
    8d12:	cd b7       	in	r28, 0x3d	; 61
    8d14:	de b7       	in	r29, 0x3e	; 62
    8d16:	26 97       	sbiw	r28, 0x06	; 6
    8d18:	cd bf       	out	0x3d, r28	; 61
    8d1a:	de bf       	out	0x3e, r29	; 62
    8d1c:	89 83       	std	Y+1, r24	; 0x01
    8d1e:	9a 83       	std	Y+2, r25	; 0x02
    8d20:	4b 83       	std	Y+3, r20	; 0x03
    8d22:	5c 83       	std	Y+4, r21	; 0x04
    8d24:	6d 83       	std	Y+5, r22	; 0x05
    8d26:	7e 83       	std	Y+6, r23	; 0x06
	while (NVMCTRL.STATUS & NVMCTRL_EEBUSY_bm);
    8d28:	80 e0       	ldi	r24, 0x00	; 0
    8d2a:	90 e1       	ldi	r25, 0x10	; 16
    8d2c:	fc 01       	movw	r30, r24
    8d2e:	82 81       	ldd	r24, Z+2	; 0x02
    8d30:	88 2f       	mov	r24, r24
    8d32:	90 e0       	ldi	r25, 0x00	; 0
    8d34:	82 70       	andi	r24, 0x02	; 2
    8d36:	99 27       	eor	r25, r25
    8d38:	21 e0       	ldi	r18, 0x01	; 1
    8d3a:	89 2b       	or	r24, r25
    8d3c:	09 f4       	brne	.+2      	; 0x8d40 <_Z22avr_eeprom_write_dwordjm+0x32>
    8d3e:	20 e0       	ldi	r18, 0x00	; 0
    8d40:	22 23       	and	r18, r18
    8d42:	09 f0       	breq	.+2      	; 0x8d46 <_Z22avr_eeprom_write_dwordjm+0x38>
    8d44:	f1 cf       	rjmp	.-30     	; 0x8d28 <_Z22avr_eeprom_write_dwordjm+0x1a>
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_EEERWR_gc);
    8d46:	8d e9       	ldi	r24, 0x9D	; 157
    8d48:	93 e1       	ldi	r25, 0x13	; 19
    8d4a:	84 bf       	out	0x34, r24	; 52
    8d4c:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
	*(uint32_t*)(eeprom_addr_t)(MAPPED_EEPROM_START+index) = in;
    8d50:	89 81       	ldd	r24, Y+1	; 0x01
    8d52:	9a 81       	ldd	r25, Y+2	; 0x02
    8d54:	9c 5e       	subi	r25, 0xEC	; 236
    8d56:	9c 01       	movw	r18, r24
    8d58:	8b 81       	ldd	r24, Y+3	; 0x03
    8d5a:	9c 81       	ldd	r25, Y+4	; 0x04
    8d5c:	ad 81       	ldd	r26, Y+5	; 0x05
    8d5e:	be 81       	ldd	r27, Y+6	; 0x06
    8d60:	f9 01       	movw	r30, r18
    8d62:	80 83       	st	Z, r24
    8d64:	91 83       	std	Z+1, r25	; 0x01
    8d66:	a2 83       	std	Z+2, r26	; 0x02
    8d68:	b3 83       	std	Z+3, r27	; 0x03
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_NONE_gc);
    8d6a:	8d e9       	ldi	r24, 0x9D	; 157
    8d6c:	90 e0       	ldi	r25, 0x00	; 0
    8d6e:	84 bf       	out	0x34, r24	; 52
    8d70:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
}
    8d74:	00 00       	nop
    8d76:	26 96       	adiw	r28, 0x06	; 6
    8d78:	cd bf       	out	0x3d, r28	; 61
    8d7a:	de bf       	out	0x3e, r29	; 62
    8d7c:	df 91       	pop	r29
    8d7e:	cf 91       	pop	r28
    8d80:	08 95       	ret

00008d82 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>:

void EepromManager::updateEEPROMVar(EE_var_t v, void* val)
{
    8d82:	cf 93       	push	r28
    8d84:	df 93       	push	r29
    8d86:	cd b7       	in	r28, 0x3d	; 61
    8d88:	de b7       	in	r29, 0x3e	; 62
    8d8a:	65 97       	sbiw	r28, 0x15	; 21
    8d8c:	cd bf       	out	0x3d, r28	; 61
    8d8e:	de bf       	out	0x3e, r29	; 62
    8d90:	89 8b       	std	Y+17, r24	; 0x11
    8d92:	9a 8b       	std	Y+18, r25	; 0x12
    8d94:	6b 8b       	std	Y+19, r22	; 0x13
    8d96:	4c 8b       	std	Y+20, r20	; 0x14
    8d98:	5d 8b       	std	Y+21, r21	; 0x15
	if(!val)
    8d9a:	8c 89       	ldd	r24, Y+20	; 0x14
    8d9c:	9d 89       	ldd	r25, Y+21	; 0x15
    8d9e:	89 2b       	or	r24, r25
    8da0:	09 f4       	brne	.+2      	; 0x8da4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x22>
    8da2:	4e c1       	rjmp	.+668    	; 0x9040 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2be>
	{
		return;
	}

	switch(v)
    8da4:	8b 89       	ldd	r24, Y+19	; 0x13
    8da6:	88 2f       	mov	r24, r24
    8da8:	90 e0       	ldi	r25, 0x00	; 0
    8daa:	09 2e       	mov	r0, r25
    8dac:	00 0c       	add	r0, r0
    8dae:	aa 0b       	sbc	r26, r26
    8db0:	bb 0b       	sbc	r27, r27
    8db2:	40 e0       	ldi	r20, 0x00	; 0
    8db4:	50 e0       	ldi	r21, 0x00	; 0
    8db6:	21 e5       	ldi	r18, 0x51	; 81
    8db8:	30 e0       	ldi	r19, 0x00	; 0
    8dba:	84 1b       	sub	r24, r20
    8dbc:	95 0b       	sbc	r25, r21
    8dbe:	28 17       	cp	r18, r24
    8dc0:	39 07       	cpc	r19, r25
    8dc2:	08 f4       	brcc	.+2      	; 0x8dc6 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x44>
    8dc4:	3f c1       	rjmp	.+638    	; 0x9044 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c2>
    8dc6:	8b 57       	subi	r24, 0x7B	; 123
    8dc8:	9f 4f       	sbci	r25, 0xFF	; 255
    8dca:	fc 01       	movw	r30, r24
    8dcc:	0c 94 31 7a 	jmp	0xf462	; 0xf462 <__tablejump2__>
	{
		case Frequency:
		{
			avr_eeprom_write_dword(Frequency, *(uint32_t*)val);
    8dd0:	8c 89       	ldd	r24, Y+20	; 0x14
    8dd2:	9d 89       	ldd	r25, Y+21	; 0x15
    8dd4:	fc 01       	movw	r30, r24
    8dd6:	80 81       	ld	r24, Z
    8dd8:	91 81       	ldd	r25, Z+1	; 0x01
    8dda:	a2 81       	ldd	r26, Z+2	; 0x02
    8ddc:	b3 81       	ldd	r27, Z+3	; 0x03
    8dde:	ac 01       	movw	r20, r24
    8de0:	bd 01       	movw	r22, r26
    8de2:	80 e4       	ldi	r24, 0x40	; 64
    8de4:	90 e0       	ldi	r25, 0x00	; 0
    8de6:	0e 94 87 46 	call	0x8d0e	; 0x8d0e <_Z22avr_eeprom_write_dwordjm>
		}
		break;
    8dea:	2d c1       	rjmp	.+602    	; 0x9046 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>
		
		case RTTY_offset:
		{
			avr_eeprom_write_dword(RTTY_offset, *(uint32_t*)val);
    8dec:	8c 89       	ldd	r24, Y+20	; 0x14
    8dee:	9d 89       	ldd	r25, Y+21	; 0x15
    8df0:	fc 01       	movw	r30, r24
    8df2:	80 81       	ld	r24, Z
    8df4:	91 81       	ldd	r25, Z+1	; 0x01
    8df6:	a2 81       	ldd	r26, Z+2	; 0x02
    8df8:	b3 81       	ldd	r27, Z+3	; 0x03
    8dfa:	ac 01       	movw	r20, r24
    8dfc:	bd 01       	movw	r22, r26
    8dfe:	84 e4       	ldi	r24, 0x44	; 68
    8e00:	90 e0       	ldi	r25, 0x00	; 0
    8e02:	0e 94 87 46 	call	0x8d0e	; 0x8d0e <_Z22avr_eeprom_write_dwordjm>
		}
		break;
    8e06:	1f c1       	rjmp	.+574    	; 0x9046 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>
		
		case RF_Power:
		{
			avr_eeprom_write_word(RF_Power, *(uint32_t*)val);			
    8e08:	8c 89       	ldd	r24, Y+20	; 0x14
    8e0a:	9d 89       	ldd	r25, Y+21	; 0x15
    8e0c:	fc 01       	movw	r30, r24
    8e0e:	80 81       	ld	r24, Z
    8e10:	91 81       	ldd	r25, Z+1	; 0x01
    8e12:	a2 81       	ldd	r26, Z+2	; 0x02
    8e14:	b3 81       	ldd	r27, Z+3	; 0x03
    8e16:	bc 01       	movw	r22, r24
    8e18:	88 e4       	ldi	r24, 0x48	; 72
    8e1a:	90 e0       	ldi	r25, 0x00	; 0
    8e1c:	0e 94 54 46 	call	0x8ca8	; 0x8ca8 <_Z21avr_eeprom_write_wordjj>
		}
		break;
    8e20:	12 c1       	rjmp	.+548    	; 0x9046 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>
		
		case StationID_text:
		{
			char* char_addr = (char*)val;
    8e22:	8c 89       	ldd	r24, Y+20	; 0x14
    8e24:	9d 89       	ldd	r25, Y+21	; 0x15
    8e26:	89 83       	std	Y+1, r24	; 0x01
    8e28:	9a 83       	std	Y+2, r25	; 0x02
			char c = *char_addr++;
    8e2a:	89 81       	ldd	r24, Y+1	; 0x01
    8e2c:	9a 81       	ldd	r25, Y+2	; 0x02
    8e2e:	9c 01       	movw	r18, r24
    8e30:	2f 5f       	subi	r18, 0xFF	; 255
    8e32:	3f 4f       	sbci	r19, 0xFF	; 255
    8e34:	29 83       	std	Y+1, r18	; 0x01
    8e36:	3a 83       	std	Y+2, r19	; 0x02
    8e38:	fc 01       	movw	r30, r24
    8e3a:	80 81       	ld	r24, Z
    8e3c:	8b 83       	std	Y+3, r24	; 0x03
			
			eeprom_addr_t j = (eeprom_addr_t)StationID_text;
    8e3e:	8a e0       	ldi	r24, 0x0A	; 10
    8e40:	90 e0       	ldi	r25, 0x00	; 0
    8e42:	8c 83       	std	Y+4, r24	; 0x04
    8e44:	9d 83       	std	Y+5, r25	; 0x05

			while(c)
    8e46:	8b 81       	ldd	r24, Y+3	; 0x03
    8e48:	88 23       	and	r24, r24
    8e4a:	a9 f0       	breq	.+42     	; 0x8e76 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0xf4>
			{
				avr_eeprom_write_byte(j++, c);
    8e4c:	8c 81       	ldd	r24, Y+4	; 0x04
    8e4e:	9d 81       	ldd	r25, Y+5	; 0x05
    8e50:	9c 01       	movw	r18, r24
    8e52:	2f 5f       	subi	r18, 0xFF	; 255
    8e54:	3f 4f       	sbci	r19, 0xFF	; 255
    8e56:	2c 83       	std	Y+4, r18	; 0x04
    8e58:	3d 83       	std	Y+5, r19	; 0x05
    8e5a:	6b 81       	ldd	r22, Y+3	; 0x03
    8e5c:	0e 94 25 46 	call	0x8c4a	; 0x8c4a <_Z21avr_eeprom_write_bytejh>
				c = *char_addr++;
    8e60:	89 81       	ldd	r24, Y+1	; 0x01
    8e62:	9a 81       	ldd	r25, Y+2	; 0x02
    8e64:	9c 01       	movw	r18, r24
    8e66:	2f 5f       	subi	r18, 0xFF	; 255
    8e68:	3f 4f       	sbci	r19, 0xFF	; 255
    8e6a:	29 83       	std	Y+1, r18	; 0x01
    8e6c:	3a 83       	std	Y+2, r19	; 0x02
    8e6e:	fc 01       	movw	r30, r24
    8e70:	80 81       	ld	r24, Z
    8e72:	8b 83       	std	Y+3, r24	; 0x03
			char* char_addr = (char*)val;
			char c = *char_addr++;
			
			eeprom_addr_t j = (eeprom_addr_t)StationID_text;

			while(c)
    8e74:	e8 cf       	rjmp	.-48     	; 0x8e46 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0xc4>
			{
				avr_eeprom_write_byte(j++, c);
				c = *char_addr++;
			}

			avr_eeprom_write_byte(j, 0);
    8e76:	8c 81       	ldd	r24, Y+4	; 0x04
    8e78:	9d 81       	ldd	r25, Y+5	; 0x05
    8e7a:	60 e0       	ldi	r22, 0x00	; 0
    8e7c:	0e 94 25 46 	call	0x8c4a	; 0x8c4a <_Z21avr_eeprom_write_bytejh>
		}
		break;
    8e80:	e2 c0       	rjmp	.+452    	; 0x9046 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>

		case Pattern_text:
		{
			char* char_addr = (char*)val;
    8e82:	8c 89       	ldd	r24, Y+20	; 0x14
    8e84:	9d 89       	ldd	r25, Y+21	; 0x15
    8e86:	8e 83       	std	Y+6, r24	; 0x06
    8e88:	9f 83       	std	Y+7, r25	; 0x07
			char c = *char_addr++;
    8e8a:	8e 81       	ldd	r24, Y+6	; 0x06
    8e8c:	9f 81       	ldd	r25, Y+7	; 0x07
    8e8e:	9c 01       	movw	r18, r24
    8e90:	2f 5f       	subi	r18, 0xFF	; 255
    8e92:	3f 4f       	sbci	r19, 0xFF	; 255
    8e94:	2e 83       	std	Y+6, r18	; 0x06
    8e96:	3f 83       	std	Y+7, r19	; 0x07
    8e98:	fc 01       	movw	r30, r24
    8e9a:	80 81       	ld	r24, Z
    8e9c:	88 87       	std	Y+8, r24	; 0x08
			
			eeprom_addr_t j = (eeprom_addr_t)Pattern_text;
    8e9e:	8f e1       	ldi	r24, 0x1F	; 31
    8ea0:	90 e0       	ldi	r25, 0x00	; 0
    8ea2:	89 87       	std	Y+9, r24	; 0x09
    8ea4:	9a 87       	std	Y+10, r25	; 0x0a

			while(c)
    8ea6:	88 85       	ldd	r24, Y+8	; 0x08
    8ea8:	88 23       	and	r24, r24
    8eaa:	a9 f0       	breq	.+42     	; 0x8ed6 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x154>
			{
				avr_eeprom_write_byte(j++, c);
    8eac:	89 85       	ldd	r24, Y+9	; 0x09
    8eae:	9a 85       	ldd	r25, Y+10	; 0x0a
    8eb0:	9c 01       	movw	r18, r24
    8eb2:	2f 5f       	subi	r18, 0xFF	; 255
    8eb4:	3f 4f       	sbci	r19, 0xFF	; 255
    8eb6:	29 87       	std	Y+9, r18	; 0x09
    8eb8:	3a 87       	std	Y+10, r19	; 0x0a
    8eba:	68 85       	ldd	r22, Y+8	; 0x08
    8ebc:	0e 94 25 46 	call	0x8c4a	; 0x8c4a <_Z21avr_eeprom_write_bytejh>
				c = *char_addr++;
    8ec0:	8e 81       	ldd	r24, Y+6	; 0x06
    8ec2:	9f 81       	ldd	r25, Y+7	; 0x07
    8ec4:	9c 01       	movw	r18, r24
    8ec6:	2f 5f       	subi	r18, 0xFF	; 255
    8ec8:	3f 4f       	sbci	r19, 0xFF	; 255
    8eca:	2e 83       	std	Y+6, r18	; 0x06
    8ecc:	3f 83       	std	Y+7, r19	; 0x07
    8ece:	fc 01       	movw	r30, r24
    8ed0:	80 81       	ld	r24, Z
    8ed2:	88 87       	std	Y+8, r24	; 0x08
			char* char_addr = (char*)val;
			char c = *char_addr++;
			
			eeprom_addr_t j = (eeprom_addr_t)Pattern_text;

			while(c)
    8ed4:	e8 cf       	rjmp	.-48     	; 0x8ea6 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x124>
			{
				avr_eeprom_write_byte(j++, c);
				c = *char_addr++;
			}

			avr_eeprom_write_byte(j, 0);
    8ed6:	89 85       	ldd	r24, Y+9	; 0x09
    8ed8:	9a 85       	ldd	r25, Y+10	; 0x0a
    8eda:	60 e0       	ldi	r22, 0x00	; 0
    8edc:	0e 94 25 46 	call	0x8c4a	; 0x8c4a <_Z21avr_eeprom_write_bytejh>
		}
		break;
    8ee0:	b2 c0       	rjmp	.+356    	; 0x9046 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>

		case UnlockCode:
		{
			uint8_t* uint8_addr = (uint8_t*)val;
    8ee2:	8c 89       	ldd	r24, Y+20	; 0x14
    8ee4:	9d 89       	ldd	r25, Y+21	; 0x15
    8ee6:	8b 87       	std	Y+11, r24	; 0x0b
    8ee8:	9c 87       	std	Y+12, r25	; 0x0c
			uint8_t c = *uint8_addr++;
    8eea:	8b 85       	ldd	r24, Y+11	; 0x0b
    8eec:	9c 85       	ldd	r25, Y+12	; 0x0c
    8eee:	9c 01       	movw	r18, r24
    8ef0:	2f 5f       	subi	r18, 0xFF	; 255
    8ef2:	3f 4f       	sbci	r19, 0xFF	; 255
    8ef4:	2b 87       	std	Y+11, r18	; 0x0b
    8ef6:	3c 87       	std	Y+12, r19	; 0x0c
    8ef8:	fc 01       	movw	r30, r24
    8efa:	80 81       	ld	r24, Z
    8efc:	8d 87       	std	Y+13, r24	; 0x0d
			int i = 0;
    8efe:	1f 86       	std	Y+15, r1	; 0x0f
    8f00:	18 8a       	std	Y+16, r1	; 0x10
			uint8_t j = (uint8_t)UnlockCode;
    8f02:	84 e3       	ldi	r24, 0x34	; 52
    8f04:	8e 87       	std	Y+14, r24	; 0x0e
			
			while(c && (i < MAX_UNLOCK_CODE_LENGTH))
    8f06:	8d 85       	ldd	r24, Y+13	; 0x0d
    8f08:	88 23       	and	r24, r24
    8f0a:	c1 f0       	breq	.+48     	; 0x8f3c <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x1ba>
    8f0c:	8f 85       	ldd	r24, Y+15	; 0x0f
    8f0e:	98 89       	ldd	r25, Y+16	; 0x10
    8f10:	08 97       	sbiw	r24, 0x08	; 8
    8f12:	a4 f4       	brge	.+40     	; 0x8f3c <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x1ba>
			{
				avr_eeprom_write_byte(j++, c);
    8f14:	8e 85       	ldd	r24, Y+14	; 0x0e
    8f16:	91 e0       	ldi	r25, 0x01	; 1
    8f18:	98 0f       	add	r25, r24
    8f1a:	9e 87       	std	Y+14, r25	; 0x0e
    8f1c:	88 2f       	mov	r24, r24
    8f1e:	90 e0       	ldi	r25, 0x00	; 0
    8f20:	6d 85       	ldd	r22, Y+13	; 0x0d
    8f22:	0e 94 25 46 	call	0x8c4a	; 0x8c4a <_Z21avr_eeprom_write_bytejh>
				c = *uint8_addr++;
    8f26:	8b 85       	ldd	r24, Y+11	; 0x0b
    8f28:	9c 85       	ldd	r25, Y+12	; 0x0c
    8f2a:	9c 01       	movw	r18, r24
    8f2c:	2f 5f       	subi	r18, 0xFF	; 255
    8f2e:	3f 4f       	sbci	r19, 0xFF	; 255
    8f30:	2b 87       	std	Y+11, r18	; 0x0b
    8f32:	3c 87       	std	Y+12, r19	; 0x0c
    8f34:	fc 01       	movw	r30, r24
    8f36:	80 81       	ld	r24, Z
    8f38:	8d 87       	std	Y+13, r24	; 0x0d
			uint8_t* uint8_addr = (uint8_t*)val;
			uint8_t c = *uint8_addr++;
			int i = 0;
			uint8_t j = (uint8_t)UnlockCode;
			
			while(c && (i < MAX_UNLOCK_CODE_LENGTH))
    8f3a:	e5 cf       	rjmp	.-54     	; 0x8f06 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x184>
			{
				avr_eeprom_write_byte(j++, c);
				c = *uint8_addr++;
			}

			avr_eeprom_write_byte(j, 0);
    8f3c:	8e 85       	ldd	r24, Y+14	; 0x0e
    8f3e:	88 2f       	mov	r24, r24
    8f40:	90 e0       	ldi	r25, 0x00	; 0
    8f42:	60 e0       	ldi	r22, 0x00	; 0
    8f44:	0e 94 25 46 	call	0x8c4a	; 0x8c4a <_Z21avr_eeprom_write_bytejh>
		}
		break;
    8f48:	7e c0       	rjmp	.+252    	; 0x9046 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>

		case Id_codespeed:
		{
			avr_eeprom_write_byte(Id_codespeed, *(uint8_t*)val);
    8f4a:	8c 89       	ldd	r24, Y+20	; 0x14
    8f4c:	9d 89       	ldd	r25, Y+21	; 0x15
    8f4e:	fc 01       	movw	r30, r24
    8f50:	80 81       	ld	r24, Z
    8f52:	68 2f       	mov	r22, r24
    8f54:	8d e3       	ldi	r24, 0x3D	; 61
    8f56:	90 e0       	ldi	r25, 0x00	; 0
    8f58:	0e 94 25 46 	call	0x8c4a	; 0x8c4a <_Z21avr_eeprom_write_bytejh>
		}
		break;
    8f5c:	74 c0       	rjmp	.+232    	; 0x9046 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>

		case Fox_setting:
		{
			avr_eeprom_write_byte(Fox_setting, *(uint8_t*)val);
    8f5e:	8c 89       	ldd	r24, Y+20	; 0x14
    8f60:	9d 89       	ldd	r25, Y+21	; 0x15
    8f62:	fc 01       	movw	r30, r24
    8f64:	80 81       	ld	r24, Z
    8f66:	68 2f       	mov	r22, r24
    8f68:	8e e3       	ldi	r24, 0x3E	; 62
    8f6a:	90 e0       	ldi	r25, 0x00	; 0
    8f6c:	0e 94 25 46 	call	0x8c4a	; 0x8c4a <_Z21avr_eeprom_write_bytejh>
		}
		break;
    8f70:	6a c0       	rjmp	.+212    	; 0x9046 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>

		case Event_start_epoch:
		{
			avr_eeprom_write_dword(Event_start_epoch, *(uint32_t*)val);
    8f72:	8c 89       	ldd	r24, Y+20	; 0x14
    8f74:	9d 89       	ldd	r25, Y+21	; 0x15
    8f76:	fc 01       	movw	r30, r24
    8f78:	80 81       	ld	r24, Z
    8f7a:	91 81       	ldd	r25, Z+1	; 0x01
    8f7c:	a2 81       	ldd	r26, Z+2	; 0x02
    8f7e:	b3 81       	ldd	r27, Z+3	; 0x03
    8f80:	ac 01       	movw	r20, r24
    8f82:	bd 01       	movw	r22, r26
    8f84:	82 e0       	ldi	r24, 0x02	; 2
    8f86:	90 e0       	ldi	r25, 0x00	; 0
    8f88:	0e 94 87 46 	call	0x8d0e	; 0x8d0e <_Z22avr_eeprom_write_dwordjm>
		}
		break;
    8f8c:	5c c0       	rjmp	.+184    	; 0x9046 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>

		case Event_finish_epoch:
		{
			avr_eeprom_write_dword(Event_finish_epoch, *(uint32_t*)val);
    8f8e:	8c 89       	ldd	r24, Y+20	; 0x14
    8f90:	9d 89       	ldd	r25, Y+21	; 0x15
    8f92:	fc 01       	movw	r30, r24
    8f94:	80 81       	ld	r24, Z
    8f96:	91 81       	ldd	r25, Z+1	; 0x01
    8f98:	a2 81       	ldd	r26, Z+2	; 0x02
    8f9a:	b3 81       	ldd	r27, Z+3	; 0x03
    8f9c:	ac 01       	movw	r20, r24
    8f9e:	bd 01       	movw	r22, r26
    8fa0:	86 e0       	ldi	r24, 0x06	; 6
    8fa2:	90 e0       	ldi	r25, 0x00	; 0
    8fa4:	0e 94 87 46 	call	0x8d0e	; 0x8d0e <_Z22avr_eeprom_write_dwordjm>
		}
		break;
    8fa8:	4e c0       	rjmp	.+156    	; 0x9046 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>

		case Utc_offset:
		{
			avr_eeprom_write_byte(Utc_offset, *(uint8_t*)val);
    8faa:	8c 89       	ldd	r24, Y+20	; 0x14
    8fac:	9d 89       	ldd	r25, Y+21	; 0x15
    8fae:	fc 01       	movw	r30, r24
    8fb0:	80 81       	ld	r24, Z
    8fb2:	68 2f       	mov	r22, r24
    8fb4:	8f e3       	ldi	r24, 0x3F	; 63
    8fb6:	90 e0       	ldi	r25, 0x00	; 0
    8fb8:	0e 94 25 46 	call	0x8c4a	; 0x8c4a <_Z21avr_eeprom_write_bytejh>
		}
		break;
    8fbc:	44 c0       	rjmp	.+136    	; 0x9046 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>
		
		case Pattern_Code_Speed:
		{
			avr_eeprom_write_byte(Pattern_Code_Speed, *(uint8_t*)val);
    8fbe:	8c 89       	ldd	r24, Y+20	; 0x14
    8fc0:	9d 89       	ldd	r25, Y+21	; 0x15
    8fc2:	fc 01       	movw	r30, r24
    8fc4:	80 81       	ld	r24, Z
    8fc6:	68 2f       	mov	r22, r24
    8fc8:	8a e4       	ldi	r24, 0x4A	; 74
    8fca:	90 e0       	ldi	r25, 0x00	; 0
    8fcc:	0e 94 25 46 	call	0x8c4a	; 0x8c4a <_Z21avr_eeprom_write_bytejh>
		}
		break;
    8fd0:	3a c0       	rjmp	.+116    	; 0x9046 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>

		case Off_Air_Seconds:
		{
			avr_eeprom_write_word(Off_Air_Seconds, *(uint16_t*)val);
    8fd2:	8c 89       	ldd	r24, Y+20	; 0x14
    8fd4:	9d 89       	ldd	r25, Y+21	; 0x15
    8fd6:	fc 01       	movw	r30, r24
    8fd8:	80 81       	ld	r24, Z
    8fda:	91 81       	ldd	r25, Z+1	; 0x01
    8fdc:	bc 01       	movw	r22, r24
    8fde:	8b e4       	ldi	r24, 0x4B	; 75
    8fe0:	90 e0       	ldi	r25, 0x00	; 0
    8fe2:	0e 94 54 46 	call	0x8ca8	; 0x8ca8 <_Z21avr_eeprom_write_wordjj>
		}
		break;
    8fe6:	2f c0       	rjmp	.+94     	; 0x9046 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>
		
		case On_Air_Seconds:
		{
			avr_eeprom_write_word(On_Air_Seconds, *(uint16_t*)val);
    8fe8:	8c 89       	ldd	r24, Y+20	; 0x14
    8fea:	9d 89       	ldd	r25, Y+21	; 0x15
    8fec:	fc 01       	movw	r30, r24
    8fee:	80 81       	ld	r24, Z
    8ff0:	91 81       	ldd	r25, Z+1	; 0x01
    8ff2:	bc 01       	movw	r22, r24
    8ff4:	8d e4       	ldi	r24, 0x4D	; 77
    8ff6:	90 e0       	ldi	r25, 0x00	; 0
    8ff8:	0e 94 54 46 	call	0x8ca8	; 0x8ca8 <_Z21avr_eeprom_write_wordjj>
		}
		break;
    8ffc:	24 c0       	rjmp	.+72     	; 0x9046 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>
		
		case ID_Period_Seconds:
		{
			avr_eeprom_write_word(ID_Period_Seconds, *(uint16_t*)val);
    8ffe:	8c 89       	ldd	r24, Y+20	; 0x14
    9000:	9d 89       	ldd	r25, Y+21	; 0x15
    9002:	fc 01       	movw	r30, r24
    9004:	80 81       	ld	r24, Z
    9006:	91 81       	ldd	r25, Z+1	; 0x01
    9008:	bc 01       	movw	r22, r24
    900a:	8f e4       	ldi	r24, 0x4F	; 79
    900c:	90 e0       	ldi	r25, 0x00	; 0
    900e:	0e 94 54 46 	call	0x8ca8	; 0x8ca8 <_Z21avr_eeprom_write_wordjj>
		}
		break;
    9012:	19 c0       	rjmp	.+50     	; 0x9046 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>
		
		case Intra_Cycle_Delay_Seconds:
		{
			avr_eeprom_write_word(Intra_Cycle_Delay_Seconds, *(uint16_t*)val);
    9014:	8c 89       	ldd	r24, Y+20	; 0x14
    9016:	9d 89       	ldd	r25, Y+21	; 0x15
    9018:	fc 01       	movw	r30, r24
    901a:	80 81       	ld	r24, Z
    901c:	91 81       	ldd	r25, Z+1	; 0x01
    901e:	bc 01       	movw	r22, r24
    9020:	81 e5       	ldi	r24, 0x51	; 81
    9022:	90 e0       	ldi	r25, 0x00	; 0
    9024:	0e 94 54 46 	call	0x8ca8	; 0x8ca8 <_Z21avr_eeprom_write_wordjj>
		}
		break;
    9028:	0e c0       	rjmp	.+28     	; 0x9046 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>

		case Eeprom_initialization_flag:
		{
			avr_eeprom_write_word(Eeprom_initialization_flag, *(uint16_t*)val);
    902a:	8c 89       	ldd	r24, Y+20	; 0x14
    902c:	9d 89       	ldd	r25, Y+21	; 0x15
    902e:	fc 01       	movw	r30, r24
    9030:	80 81       	ld	r24, Z
    9032:	91 81       	ldd	r25, Z+1	; 0x01
    9034:	bc 01       	movw	r22, r24
    9036:	80 e0       	ldi	r24, 0x00	; 0
    9038:	90 e0       	ldi	r25, 0x00	; 0
    903a:	0e 94 54 46 	call	0x8ca8	; 0x8ca8 <_Z21avr_eeprom_write_wordjj>
		}
		break;
    903e:	03 c0       	rjmp	.+6      	; 0x9046 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>

void EepromManager::updateEEPROMVar(EE_var_t v, void* val)
{
	if(!val)
	{
		return;
    9040:	00 00       	nop
    9042:	01 c0       	rjmp	.+2      	; 0x9046 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>

		default:
		{

		}
		break;
    9044:	00 00       	nop
	}
}
    9046:	65 96       	adiw	r28, 0x15	; 21
    9048:	cd bf       	out	0x3d, r28	; 61
    904a:	de bf       	out	0x3e, r29	; 62
    904c:	df 91       	pop	r29
    904e:	cf 91       	pop	r28
    9050:	08 95       	ret

00009052 <_ZN13EepromManager13saveAllEEPROMEv>:

/** 
 * Store any changed EEPROM variables
 */
void EepromManager::saveAllEEPROM(void)
{
    9052:	0f 93       	push	r16
    9054:	1f 93       	push	r17
    9056:	cf 93       	push	r28
    9058:	df 93       	push	r29
    905a:	00 d0       	rcall	.+0      	; 0x905c <_ZN13EepromManager13saveAllEEPROMEv+0xa>
    905c:	00 d0       	rcall	.+0      	; 0x905e <_ZN13EepromManager13saveAllEEPROMEv+0xc>
    905e:	cd b7       	in	r28, 0x3d	; 61
    9060:	de b7       	in	r29, 0x3e	; 62
    9062:	8b 83       	std	Y+3, r24	; 0x03
    9064:	9c 83       	std	Y+4, r25	; 0x04
	uint16_t i;
	
	if(g_id_codespeed != eeprom_read_byte(&(EepromManager::ee_vars.id_codespeed)))
    9066:	8d e3       	ldi	r24, 0x3D	; 61
    9068:	90 e0       	ldi	r25, 0x00	; 0
    906a:	0e 94 ee 82 	call	0x105dc	; 0x105dc <eeprom_read_byte>
    906e:	28 2f       	mov	r18, r24
    9070:	90 91 0b 40 	lds	r25, 0x400B	; 0x80400b <g_id_codespeed>
    9074:	81 e0       	ldi	r24, 0x01	; 1
    9076:	29 17       	cp	r18, r25
    9078:	09 f4       	brne	.+2      	; 0x907c <_ZN13EepromManager13saveAllEEPROMEv+0x2a>
    907a:	80 e0       	ldi	r24, 0x00	; 0
    907c:	88 23       	and	r24, r24
    907e:	39 f0       	breq	.+14     	; 0x908e <_ZN13EepromManager13saveAllEEPROMEv+0x3c>
	{
		updateEEPROMVar(Id_codespeed, (void*)&g_id_codespeed);
    9080:	8b 81       	ldd	r24, Y+3	; 0x03
    9082:	9c 81       	ldd	r25, Y+4	; 0x04
    9084:	4b e0       	ldi	r20, 0x0B	; 11
    9086:	50 e4       	ldi	r21, 0x40	; 64
    9088:	6d e3       	ldi	r22, 0x3D	; 61
    908a:	0e 94 c1 46 	call	0x8d82	; 0x8d82 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
	
	if(g_fox != eeprom_read_byte(&(EepromManager::ee_vars.fox_setting)))
    908e:	8e e3       	ldi	r24, 0x3E	; 62
    9090:	90 e0       	ldi	r25, 0x00	; 0
    9092:	0e 94 ee 82 	call	0x105dc	; 0x105dc <eeprom_read_byte>
    9096:	28 2f       	mov	r18, r24
    9098:	90 91 20 40 	lds	r25, 0x4020	; 0x804020 <g_fox>
    909c:	81 e0       	ldi	r24, 0x01	; 1
    909e:	29 17       	cp	r18, r25
    90a0:	09 f4       	brne	.+2      	; 0x90a4 <_ZN13EepromManager13saveAllEEPROMEv+0x52>
    90a2:	80 e0       	ldi	r24, 0x00	; 0
    90a4:	88 23       	and	r24, r24
    90a6:	39 f0       	breq	.+14     	; 0x90b6 <_ZN13EepromManager13saveAllEEPROMEv+0x64>
	{
		updateEEPROMVar(Fox_setting, (void*)&g_fox);
    90a8:	8b 81       	ldd	r24, Y+3	; 0x03
    90aa:	9c 81       	ldd	r25, Y+4	; 0x04
    90ac:	40 e2       	ldi	r20, 0x20	; 32
    90ae:	50 e4       	ldi	r21, 0x40	; 64
    90b0:	6e e3       	ldi	r22, 0x3E	; 62
    90b2:	0e 94 c1 46 	call	0x8d82	; 0x8d82 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
	
	if(g_event_start_epoch != eeprom_read_dword(&(EepromManager::ee_vars.event_start_epoch)))
    90b6:	82 e0       	ldi	r24, 0x02	; 2
    90b8:	90 e0       	ldi	r25, 0x00	; 0
    90ba:	0e 94 f6 82 	call	0x105ec	; 0x105ec <eeprom_read_dword>
    90be:	9b 01       	movw	r18, r22
    90c0:	ac 01       	movw	r20, r24
    90c2:	80 91 9a 47 	lds	r24, 0x479A	; 0x80479a <g_event_start_epoch>
    90c6:	90 91 9b 47 	lds	r25, 0x479B	; 0x80479b <g_event_start_epoch+0x1>
    90ca:	a0 91 9c 47 	lds	r26, 0x479C	; 0x80479c <g_event_start_epoch+0x2>
    90ce:	b0 91 9d 47 	lds	r27, 0x479D	; 0x80479d <g_event_start_epoch+0x3>
    90d2:	61 e0       	ldi	r22, 0x01	; 1
    90d4:	28 17       	cp	r18, r24
    90d6:	39 07       	cpc	r19, r25
    90d8:	4a 07       	cpc	r20, r26
    90da:	5b 07       	cpc	r21, r27
    90dc:	09 f4       	brne	.+2      	; 0x90e0 <_ZN13EepromManager13saveAllEEPROMEv+0x8e>
    90de:	60 e0       	ldi	r22, 0x00	; 0
    90e0:	66 23       	and	r22, r22
    90e2:	39 f0       	breq	.+14     	; 0x90f2 <_ZN13EepromManager13saveAllEEPROMEv+0xa0>
	{
		updateEEPROMVar(Event_start_epoch, (void*)&g_event_start_epoch);
    90e4:	8b 81       	ldd	r24, Y+3	; 0x03
    90e6:	9c 81       	ldd	r25, Y+4	; 0x04
    90e8:	4a e9       	ldi	r20, 0x9A	; 154
    90ea:	57 e4       	ldi	r21, 0x47	; 71
    90ec:	62 e0       	ldi	r22, 0x02	; 2
    90ee:	0e 94 c1 46 	call	0x8d82	; 0x8d82 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
	
	if(g_event_finish_epoch != eeprom_read_dword(&(EepromManager::ee_vars.event_finish_epoch)))
    90f2:	86 e0       	ldi	r24, 0x06	; 6
    90f4:	90 e0       	ldi	r25, 0x00	; 0
    90f6:	0e 94 f6 82 	call	0x105ec	; 0x105ec <eeprom_read_dword>
    90fa:	9b 01       	movw	r18, r22
    90fc:	ac 01       	movw	r20, r24
    90fe:	80 91 9e 47 	lds	r24, 0x479E	; 0x80479e <g_event_finish_epoch>
    9102:	90 91 9f 47 	lds	r25, 0x479F	; 0x80479f <g_event_finish_epoch+0x1>
    9106:	a0 91 a0 47 	lds	r26, 0x47A0	; 0x8047a0 <g_event_finish_epoch+0x2>
    910a:	b0 91 a1 47 	lds	r27, 0x47A1	; 0x8047a1 <g_event_finish_epoch+0x3>
    910e:	61 e0       	ldi	r22, 0x01	; 1
    9110:	28 17       	cp	r18, r24
    9112:	39 07       	cpc	r19, r25
    9114:	4a 07       	cpc	r20, r26
    9116:	5b 07       	cpc	r21, r27
    9118:	09 f4       	brne	.+2      	; 0x911c <_ZN13EepromManager13saveAllEEPROMEv+0xca>
    911a:	60 e0       	ldi	r22, 0x00	; 0
    911c:	66 23       	and	r22, r22
    911e:	39 f0       	breq	.+14     	; 0x912e <_ZN13EepromManager13saveAllEEPROMEv+0xdc>
	{
		updateEEPROMVar(Event_finish_epoch, (void*)&g_event_finish_epoch);
    9120:	8b 81       	ldd	r24, Y+3	; 0x03
    9122:	9c 81       	ldd	r25, Y+4	; 0x04
    9124:	4e e9       	ldi	r20, 0x9E	; 158
    9126:	57 e4       	ldi	r21, 0x47	; 71
    9128:	66 e0       	ldi	r22, 0x06	; 6
    912a:	0e 94 c1 46 	call	0x8d82	; 0x8d82 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
	
	if(g_utc_offset != eeprom_read_byte(&(EepromManager::ee_vars.utc_offset)))
    912e:	80 91 ba 47 	lds	r24, 0x47BA	; 0x8047ba <g_utc_offset>
    9132:	08 2f       	mov	r16, r24
    9134:	88 0f       	add	r24, r24
    9136:	11 0b       	sbc	r17, r17
    9138:	8f e3       	ldi	r24, 0x3F	; 63
    913a:	90 e0       	ldi	r25, 0x00	; 0
    913c:	0e 94 ee 82 	call	0x105dc	; 0x105dc <eeprom_read_byte>
    9140:	88 2f       	mov	r24, r24
    9142:	90 e0       	ldi	r25, 0x00	; 0
    9144:	21 e0       	ldi	r18, 0x01	; 1
    9146:	08 17       	cp	r16, r24
    9148:	19 07       	cpc	r17, r25
    914a:	09 f4       	brne	.+2      	; 0x914e <_ZN13EepromManager13saveAllEEPROMEv+0xfc>
    914c:	20 e0       	ldi	r18, 0x00	; 0
    914e:	22 23       	and	r18, r18
    9150:	39 f0       	breq	.+14     	; 0x9160 <_ZN13EepromManager13saveAllEEPROMEv+0x10e>
	{
		updateEEPROMVar(Utc_offset, (void*)&g_utc_offset);
    9152:	8b 81       	ldd	r24, Y+3	; 0x03
    9154:	9c 81       	ldd	r25, Y+4	; 0x04
    9156:	4a eb       	ldi	r20, 0xBA	; 186
    9158:	57 e4       	ldi	r21, 0x47	; 71
    915a:	6f e3       	ldi	r22, 0x3F	; 63
    915c:	0e 94 c1 46 	call	0x8d82	; 0x8d82 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
	
	for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    9160:	19 82       	std	Y+1, r1	; 0x01
    9162:	1a 82       	std	Y+2, r1	; 0x02
    9164:	89 81       	ldd	r24, Y+1	; 0x01
    9166:	9a 81       	ldd	r25, Y+2	; 0x02
    9168:	44 97       	sbiw	r24, 0x14	; 20
    916a:	e8 f4       	brcc	.+58     	; 0x91a6 <_ZN13EepromManager13saveAllEEPROMEv+0x154>
	{
		if(g_messages_text[STATION_ID][i] != (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.stationID_text[i]))))
    916c:	89 81       	ldd	r24, Y+1	; 0x01
    916e:	9a 81       	ldd	r25, Y+2	; 0x02
    9170:	8f 57       	subi	r24, 0x7F	; 127
    9172:	98 4b       	sbci	r25, 0xB8	; 184
    9174:	fc 01       	movw	r30, r24
    9176:	10 81       	ld	r17, Z
    9178:	89 81       	ldd	r24, Y+1	; 0x01
    917a:	9a 81       	ldd	r25, Y+2	; 0x02
    917c:	0a 96       	adiw	r24, 0x0a	; 10
    917e:	80 50       	subi	r24, 0x00	; 0
    9180:	90 40       	sbci	r25, 0x00	; 0
    9182:	0e 94 ee 82 	call	0x105dc	; 0x105dc <eeprom_read_byte>
    9186:	18 17       	cp	r17, r24
    9188:	41 f0       	breq	.+16     	; 0x919a <_ZN13EepromManager13saveAllEEPROMEv+0x148>
		{
			updateEEPROMVar(StationID_text, (void*)g_messages_text[STATION_ID]);
    918a:	8b 81       	ldd	r24, Y+3	; 0x03
    918c:	9c 81       	ldd	r25, Y+4	; 0x04
    918e:	41 e8       	ldi	r20, 0x81	; 129
    9190:	57 e4       	ldi	r21, 0x47	; 71
    9192:	6a e0       	ldi	r22, 0x0A	; 10
    9194:	0e 94 c1 46 	call	0x8d82	; 0x8d82 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
			break;
    9198:	06 c0       	rjmp	.+12     	; 0x91a6 <_ZN13EepromManager13saveAllEEPROMEv+0x154>
	if(g_utc_offset != eeprom_read_byte(&(EepromManager::ee_vars.utc_offset)))
	{
		updateEEPROMVar(Utc_offset, (void*)&g_utc_offset);
	}
	
	for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    919a:	89 81       	ldd	r24, Y+1	; 0x01
    919c:	9a 81       	ldd	r25, Y+2	; 0x02
    919e:	01 96       	adiw	r24, 0x01	; 1
    91a0:	89 83       	std	Y+1, r24	; 0x01
    91a2:	9a 83       	std	Y+2, r25	; 0x02
    91a4:	df cf       	rjmp	.-66     	; 0x9164 <_ZN13EepromManager13saveAllEEPROMEv+0x112>
			updateEEPROMVar(StationID_text, (void*)g_messages_text[STATION_ID]);
			break;
		}
	}

	for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    91a6:	19 82       	std	Y+1, r1	; 0x01
    91a8:	1a 82       	std	Y+2, r1	; 0x02
    91aa:	89 81       	ldd	r24, Y+1	; 0x01
    91ac:	9a 81       	ldd	r25, Y+2	; 0x02
    91ae:	44 97       	sbiw	r24, 0x14	; 20
    91b0:	e8 f4       	brcc	.+58     	; 0x91ec <_ZN13EepromManager13saveAllEEPROMEv+0x19a>
	{
		if(g_messages_text[PATTERN_TEXT][i] != (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.pattern_text[i]))))
    91b2:	89 81       	ldd	r24, Y+1	; 0x01
    91b4:	9a 81       	ldd	r25, Y+2	; 0x02
    91b6:	84 59       	subi	r24, 0x94	; 148
    91b8:	98 4b       	sbci	r25, 0xB8	; 184
    91ba:	fc 01       	movw	r30, r24
    91bc:	10 81       	ld	r17, Z
    91be:	89 81       	ldd	r24, Y+1	; 0x01
    91c0:	9a 81       	ldd	r25, Y+2	; 0x02
    91c2:	4f 96       	adiw	r24, 0x1f	; 31
    91c4:	80 50       	subi	r24, 0x00	; 0
    91c6:	90 40       	sbci	r25, 0x00	; 0
    91c8:	0e 94 ee 82 	call	0x105dc	; 0x105dc <eeprom_read_byte>
    91cc:	18 17       	cp	r17, r24
    91ce:	41 f0       	breq	.+16     	; 0x91e0 <_ZN13EepromManager13saveAllEEPROMEv+0x18e>
		{
			updateEEPROMVar(Pattern_text, (void*)g_messages_text[PATTERN_TEXT]);
    91d0:	8b 81       	ldd	r24, Y+3	; 0x03
    91d2:	9c 81       	ldd	r25, Y+4	; 0x04
    91d4:	4c e6       	ldi	r20, 0x6C	; 108
    91d6:	57 e4       	ldi	r21, 0x47	; 71
    91d8:	6f e1       	ldi	r22, 0x1F	; 31
    91da:	0e 94 c1 46 	call	0x8d82	; 0x8d82 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
			break;
    91de:	06 c0       	rjmp	.+12     	; 0x91ec <_ZN13EepromManager13saveAllEEPROMEv+0x19a>
			updateEEPROMVar(StationID_text, (void*)g_messages_text[STATION_ID]);
			break;
		}
	}

	for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    91e0:	89 81       	ldd	r24, Y+1	; 0x01
    91e2:	9a 81       	ldd	r25, Y+2	; 0x02
    91e4:	01 96       	adiw	r24, 0x01	; 1
    91e6:	89 83       	std	Y+1, r24	; 0x01
    91e8:	9a 83       	std	Y+2, r25	; 0x02
    91ea:	df cf       	rjmp	.-66     	; 0x91aa <_ZN13EepromManager13saveAllEEPROMEv+0x158>
			updateEEPROMVar(Pattern_text, (void*)g_messages_text[PATTERN_TEXT]);
			break;
		}
	}

	for(i = 0; i < MAX_UNLOCK_CODE_LENGTH; i++)
    91ec:	19 82       	std	Y+1, r1	; 0x01
    91ee:	1a 82       	std	Y+2, r1	; 0x02
    91f0:	89 81       	ldd	r24, Y+1	; 0x01
    91f2:	9a 81       	ldd	r25, Y+2	; 0x02
    91f4:	08 97       	sbiw	r24, 0x08	; 8
    91f6:	e8 f4       	brcc	.+58     	; 0x9232 <_ZN13EepromManager13saveAllEEPROMEv+0x1e0>
	{
		if(g_unlockCode[i] != (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.unlockCode[i]))))
    91f8:	89 81       	ldd	r24, Y+1	; 0x01
    91fa:	9a 81       	ldd	r25, Y+2	; 0x02
    91fc:	85 54       	subi	r24, 0x45	; 69
    91fe:	98 4b       	sbci	r25, 0xB8	; 184
    9200:	fc 01       	movw	r30, r24
    9202:	10 81       	ld	r17, Z
    9204:	89 81       	ldd	r24, Y+1	; 0x01
    9206:	9a 81       	ldd	r25, Y+2	; 0x02
    9208:	c4 96       	adiw	r24, 0x34	; 52
    920a:	80 50       	subi	r24, 0x00	; 0
    920c:	90 40       	sbci	r25, 0x00	; 0
    920e:	0e 94 ee 82 	call	0x105dc	; 0x105dc <eeprom_read_byte>
    9212:	18 17       	cp	r17, r24
    9214:	41 f0       	breq	.+16     	; 0x9226 <_ZN13EepromManager13saveAllEEPROMEv+0x1d4>
		{
			updateEEPROMVar(UnlockCode, (void*)g_unlockCode);
    9216:	8b 81       	ldd	r24, Y+3	; 0x03
    9218:	9c 81       	ldd	r25, Y+4	; 0x04
    921a:	4b eb       	ldi	r20, 0xBB	; 187
    921c:	57 e4       	ldi	r21, 0x47	; 71
    921e:	64 e3       	ldi	r22, 0x34	; 52
    9220:	0e 94 c1 46 	call	0x8d82	; 0x8d82 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
			break;
    9224:	06 c0       	rjmp	.+12     	; 0x9232 <_ZN13EepromManager13saveAllEEPROMEv+0x1e0>
			updateEEPROMVar(Pattern_text, (void*)g_messages_text[PATTERN_TEXT]);
			break;
		}
	}

	for(i = 0; i < MAX_UNLOCK_CODE_LENGTH; i++)
    9226:	89 81       	ldd	r24, Y+1	; 0x01
    9228:	9a 81       	ldd	r25, Y+2	; 0x02
    922a:	01 96       	adiw	r24, 0x01	; 1
    922c:	89 83       	std	Y+1, r24	; 0x01
    922e:	9a 83       	std	Y+2, r25	; 0x02
    9230:	df cf       	rjmp	.-66     	; 0x91f0 <_ZN13EepromManager13saveAllEEPROMEv+0x19e>
			updateEEPROMVar(UnlockCode, (void*)g_unlockCode);
			break;
		}
	}
	
	if(g_80m_frequency != eeprom_read_dword(&(EepromManager::ee_vars.frequency)))
    9232:	80 e4       	ldi	r24, 0x40	; 64
    9234:	90 e0       	ldi	r25, 0x00	; 0
    9236:	0e 94 f6 82 	call	0x105ec	; 0x105ec <eeprom_read_dword>
    923a:	9b 01       	movw	r18, r22
    923c:	ac 01       	movw	r20, r24
    923e:	80 91 34 40 	lds	r24, 0x4034	; 0x804034 <g_80m_frequency>
    9242:	90 91 35 40 	lds	r25, 0x4035	; 0x804035 <g_80m_frequency+0x1>
    9246:	a0 91 36 40 	lds	r26, 0x4036	; 0x804036 <g_80m_frequency+0x2>
    924a:	b0 91 37 40 	lds	r27, 0x4037	; 0x804037 <g_80m_frequency+0x3>
    924e:	28 17       	cp	r18, r24
    9250:	39 07       	cpc	r19, r25
    9252:	4a 07       	cpc	r20, r26
    9254:	5b 07       	cpc	r21, r27
    9256:	39 f0       	breq	.+14     	; 0x9266 <_ZN13EepromManager13saveAllEEPROMEv+0x214>
	{
		updateEEPROMVar(Frequency, (void*)&g_80m_frequency);
    9258:	8b 81       	ldd	r24, Y+3	; 0x03
    925a:	9c 81       	ldd	r25, Y+4	; 0x04
    925c:	44 e3       	ldi	r20, 0x34	; 52
    925e:	50 e4       	ldi	r21, 0x40	; 64
    9260:	60 e4       	ldi	r22, 0x40	; 64
    9262:	0e 94 c1 46 	call	0x8d82	; 0x8d82 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
	
	if(g_rtty_offset != eeprom_read_dword(&(EepromManager::ee_vars.rtty_offset)))
    9266:	84 e4       	ldi	r24, 0x44	; 68
    9268:	90 e0       	ldi	r25, 0x00	; 0
    926a:	0e 94 f6 82 	call	0x105ec	; 0x105ec <eeprom_read_dword>
    926e:	9b 01       	movw	r18, r22
    9270:	ac 01       	movw	r20, r24
    9272:	80 91 3a 40 	lds	r24, 0x403A	; 0x80403a <g_rtty_offset>
    9276:	90 91 3b 40 	lds	r25, 0x403B	; 0x80403b <g_rtty_offset+0x1>
    927a:	a0 91 3c 40 	lds	r26, 0x403C	; 0x80403c <g_rtty_offset+0x2>
    927e:	b0 91 3d 40 	lds	r27, 0x403D	; 0x80403d <g_rtty_offset+0x3>
    9282:	28 17       	cp	r18, r24
    9284:	39 07       	cpc	r19, r25
    9286:	4a 07       	cpc	r20, r26
    9288:	5b 07       	cpc	r21, r27
    928a:	39 f0       	breq	.+14     	; 0x929a <_ZN13EepromManager13saveAllEEPROMEv+0x248>
	{
		updateEEPROMVar(RTTY_offset, (void*)&g_rtty_offset);
    928c:	8b 81       	ldd	r24, Y+3	; 0x03
    928e:	9c 81       	ldd	r25, Y+4	; 0x04
    9290:	4a e3       	ldi	r20, 0x3A	; 58
    9292:	50 e4       	ldi	r21, 0x40	; 64
    9294:	64 e4       	ldi	r22, 0x44	; 68
    9296:	0e 94 c1 46 	call	0x8d82	; 0x8d82 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
	
	if(g_80m_power_level_mW != eeprom_read_word(&(EepromManager::ee_vars.rf_power)))
    929a:	88 e4       	ldi	r24, 0x48	; 72
    929c:	90 e0       	ldi	r25, 0x00	; 0
    929e:	0e 94 fd 82 	call	0x105fa	; 0x105fa <eeprom_read_word>
    92a2:	9c 01       	movw	r18, r24
    92a4:	80 91 38 40 	lds	r24, 0x4038	; 0x804038 <g_80m_power_level_mW>
    92a8:	90 91 39 40 	lds	r25, 0x4039	; 0x804039 <g_80m_power_level_mW+0x1>
    92ac:	28 17       	cp	r18, r24
    92ae:	39 07       	cpc	r19, r25
    92b0:	39 f0       	breq	.+14     	; 0x92c0 <_ZN13EepromManager13saveAllEEPROMEv+0x26e>
	{
		updateEEPROMVar(RF_Power, (void*)&g_80m_power_level_mW);
    92b2:	8b 81       	ldd	r24, Y+3	; 0x03
    92b4:	9c 81       	ldd	r25, Y+4	; 0x04
    92b6:	48 e3       	ldi	r20, 0x38	; 56
    92b8:	50 e4       	ldi	r21, 0x40	; 64
    92ba:	68 e4       	ldi	r22, 0x48	; 72
    92bc:	0e 94 c1 46 	call	0x8d82	; 0x8d82 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
	
	if(g_pattern_codespeed != eeprom_read_byte(&(EepromManager::ee_vars.pattern_codespeed)))
    92c0:	8a e4       	ldi	r24, 0x4A	; 74
    92c2:	90 e0       	ldi	r25, 0x00	; 0
    92c4:	0e 94 ee 82 	call	0x105dc	; 0x105dc <eeprom_read_byte>
    92c8:	28 2f       	mov	r18, r24
    92ca:	90 91 0c 40 	lds	r25, 0x400C	; 0x80400c <g_pattern_codespeed>
    92ce:	81 e0       	ldi	r24, 0x01	; 1
    92d0:	29 17       	cp	r18, r25
    92d2:	09 f4       	brne	.+2      	; 0x92d6 <_ZN13EepromManager13saveAllEEPROMEv+0x284>
    92d4:	80 e0       	ldi	r24, 0x00	; 0
    92d6:	88 23       	and	r24, r24
    92d8:	39 f0       	breq	.+14     	; 0x92e8 <_ZN13EepromManager13saveAllEEPROMEv+0x296>
	{
		updateEEPROMVar(Pattern_Code_Speed, (void*)&g_pattern_codespeed);
    92da:	8b 81       	ldd	r24, Y+3	; 0x03
    92dc:	9c 81       	ldd	r25, Y+4	; 0x04
    92de:	4c e0       	ldi	r20, 0x0C	; 12
    92e0:	50 e4       	ldi	r21, 0x40	; 64
    92e2:	6a e4       	ldi	r22, 0x4A	; 74
    92e4:	0e 94 c1 46 	call	0x8d82	; 0x8d82 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}

	if(g_off_air_seconds != (int16_t)eeprom_read_word((const uint16_t *)&(EepromManager::ee_vars.off_air_seconds)))
    92e8:	8b e4       	ldi	r24, 0x4B	; 75
    92ea:	90 e0       	ldi	r25, 0x00	; 0
    92ec:	0e 94 fd 82 	call	0x105fa	; 0x105fa <eeprom_read_word>
    92f0:	9c 01       	movw	r18, r24
    92f2:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_off_air_seconds>
    92f6:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    92fa:	41 e0       	ldi	r20, 0x01	; 1
    92fc:	28 17       	cp	r18, r24
    92fe:	39 07       	cpc	r19, r25
    9300:	09 f4       	brne	.+2      	; 0x9304 <_ZN13EepromManager13saveAllEEPROMEv+0x2b2>
    9302:	40 e0       	ldi	r20, 0x00	; 0
    9304:	44 23       	and	r20, r20
    9306:	39 f0       	breq	.+14     	; 0x9316 <_ZN13EepromManager13saveAllEEPROMEv+0x2c4>
	{
		updateEEPROMVar(Off_Air_Seconds, (void*)&g_off_air_seconds);
    9308:	8b 81       	ldd	r24, Y+3	; 0x03
    930a:	9c 81       	ldd	r25, Y+4	; 0x04
    930c:	4f e0       	ldi	r20, 0x0F	; 15
    930e:	50 e4       	ldi	r21, 0x40	; 64
    9310:	6b e4       	ldi	r22, 0x4B	; 75
    9312:	0e 94 c1 46 	call	0x8d82	; 0x8d82 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
	
	if(g_on_air_seconds != (int16_t)eeprom_read_word((const uint16_t *)&(EepromManager::ee_vars.on_air_seconds)))
    9316:	8d e4       	ldi	r24, 0x4D	; 77
    9318:	90 e0       	ldi	r25, 0x00	; 0
    931a:	0e 94 fd 82 	call	0x105fa	; 0x105fa <eeprom_read_word>
    931e:	9c 01       	movw	r18, r24
    9320:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    9324:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    9328:	41 e0       	ldi	r20, 0x01	; 1
    932a:	28 17       	cp	r18, r24
    932c:	39 07       	cpc	r19, r25
    932e:	09 f4       	brne	.+2      	; 0x9332 <_ZN13EepromManager13saveAllEEPROMEv+0x2e0>
    9330:	40 e0       	ldi	r20, 0x00	; 0
    9332:	44 23       	and	r20, r20
    9334:	39 f0       	breq	.+14     	; 0x9344 <_ZN13EepromManager13saveAllEEPROMEv+0x2f2>
	{
		updateEEPROMVar(On_Air_Seconds, (void*)&g_on_air_seconds);
    9336:	8b 81       	ldd	r24, Y+3	; 0x03
    9338:	9c 81       	ldd	r25, Y+4	; 0x04
    933a:	4d e0       	ldi	r20, 0x0D	; 13
    933c:	50 e4       	ldi	r21, 0x40	; 64
    933e:	6d e4       	ldi	r22, 0x4D	; 77
    9340:	0e 94 c1 46 	call	0x8d82	; 0x8d82 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
	
	if(g_ID_period_seconds != (int16_t)eeprom_read_word((const uint16_t *)&(EepromManager::ee_vars.ID_period_seconds)))
    9344:	8f e4       	ldi	r24, 0x4F	; 79
    9346:	90 e0       	ldi	r25, 0x00	; 0
    9348:	0e 94 fd 82 	call	0x105fa	; 0x105fa <eeprom_read_word>
    934c:	9c 01       	movw	r18, r24
    934e:	80 91 11 40 	lds	r24, 0x4011	; 0x804011 <g_ID_period_seconds>
    9352:	90 91 12 40 	lds	r25, 0x4012	; 0x804012 <g_ID_period_seconds+0x1>
    9356:	41 e0       	ldi	r20, 0x01	; 1
    9358:	28 17       	cp	r18, r24
    935a:	39 07       	cpc	r19, r25
    935c:	09 f4       	brne	.+2      	; 0x9360 <_ZN13EepromManager13saveAllEEPROMEv+0x30e>
    935e:	40 e0       	ldi	r20, 0x00	; 0
    9360:	44 23       	and	r20, r20
    9362:	39 f0       	breq	.+14     	; 0x9372 <_ZN13EepromManager13saveAllEEPROMEv+0x320>
	{
		updateEEPROMVar(ID_Period_Seconds, (void*)&g_ID_period_seconds);
    9364:	8b 81       	ldd	r24, Y+3	; 0x03
    9366:	9c 81       	ldd	r25, Y+4	; 0x04
    9368:	41 e1       	ldi	r20, 0x11	; 17
    936a:	50 e4       	ldi	r21, 0x40	; 64
    936c:	6f e4       	ldi	r22, 0x4F	; 79
    936e:	0e 94 c1 46 	call	0x8d82	; 0x8d82 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
	
	if(g_intra_cycle_delay_time != (int16_t)eeprom_read_word((const uint16_t *)&(EepromManager::ee_vars.intra_cycle_delay_time)))
    9372:	81 e5       	ldi	r24, 0x51	; 81
    9374:	90 e0       	ldi	r25, 0x00	; 0
    9376:	0e 94 fd 82 	call	0x105fa	; 0x105fa <eeprom_read_word>
    937a:	9c 01       	movw	r18, r24
    937c:	80 91 98 47 	lds	r24, 0x4798	; 0x804798 <g_intra_cycle_delay_time>
    9380:	90 91 99 47 	lds	r25, 0x4799	; 0x804799 <g_intra_cycle_delay_time+0x1>
    9384:	41 e0       	ldi	r20, 0x01	; 1
    9386:	28 17       	cp	r18, r24
    9388:	39 07       	cpc	r19, r25
    938a:	09 f4       	brne	.+2      	; 0x938e <_ZN13EepromManager13saveAllEEPROMEv+0x33c>
    938c:	40 e0       	ldi	r20, 0x00	; 0
    938e:	44 23       	and	r20, r20
    9390:	39 f0       	breq	.+14     	; 0x93a0 <_ZN13EepromManager13saveAllEEPROMEv+0x34e>
	{
		updateEEPROMVar(Intra_Cycle_Delay_Seconds, (void*)&g_intra_cycle_delay_time);
    9392:	8b 81       	ldd	r24, Y+3	; 0x03
    9394:	9c 81       	ldd	r25, Y+4	; 0x04
    9396:	48 e9       	ldi	r20, 0x98	; 152
    9398:	57 e4       	ldi	r21, 0x47	; 71
    939a:	61 e5       	ldi	r22, 0x51	; 81
    939c:	0e 94 c1 46 	call	0x8d82	; 0x8d82 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}	
}
    93a0:	00 00       	nop
    93a2:	24 96       	adiw	r28, 0x04	; 4
    93a4:	cd bf       	out	0x3d, r28	; 61
    93a6:	de bf       	out	0x3e, r29	; 62
    93a8:	df 91       	pop	r29
    93aa:	cf 91       	pop	r28
    93ac:	1f 91       	pop	r17
    93ae:	0f 91       	pop	r16
    93b0:	08 95       	ret

000093b2 <_ZN13EepromManager11readNonVolsEv>:


bool EepromManager::readNonVols(void)
{
    93b2:	cf 93       	push	r28
    93b4:	df 93       	push	r29
    93b6:	cd b7       	in	r28, 0x3d	; 61
    93b8:	de b7       	in	r29, 0x3e	; 62
    93ba:	ec 97       	sbiw	r28, 0x3c	; 60
    93bc:	cd bf       	out	0x3d, r28	; 61
    93be:	de bf       	out	0x3e, r29	; 62
    93c0:	8b af       	std	Y+59, r24	; 0x3b
    93c2:	9c af       	std	Y+60, r25	; 0x3c
	bool failure = true;
    93c4:	81 e0       	ldi	r24, 0x01	; 1
    93c6:	89 83       	std	Y+1, r24	; 0x01
	uint16_t i;
	uint16_t initialization_flag = eeprom_read_word(0);
    93c8:	80 e0       	ldi	r24, 0x00	; 0
    93ca:	90 e0       	ldi	r25, 0x00	; 0
    93cc:	0e 94 fd 82 	call	0x105fa	; 0x105fa <eeprom_read_word>
    93d0:	8c 83       	std	Y+4, r24	; 0x04
    93d2:	9d 83       	std	Y+5, r25	; 0x05

	if(initialization_flag == EEPROM_INITIALIZED_FLAG)  /* EEPROM is up to date */
    93d4:	8c 81       	ldd	r24, Y+4	; 0x04
    93d6:	9d 81       	ldd	r25, Y+5	; 0x05
    93d8:	8e 3c       	cpi	r24, 0xCE	; 206
    93da:	91 05       	cpc	r25, r1
    93dc:	09 f0       	breq	.+2      	; 0x93e0 <_ZN13EepromManager11readNonVolsEv+0x2e>
    93de:	2e c2       	rjmp	.+1116   	; 0x983c <_ZN13EepromManager11readNonVolsEv+0x48a>
	{
		g_id_codespeed = CLAMP(MIN_CODE_SPEED_WPM, eeprom_read_byte(&(EepromManager::ee_vars.id_codespeed)), MAX_CODE_SPEED_WPM);
    93e0:	8d e3       	ldi	r24, 0x3D	; 61
    93e2:	90 e0       	ldi	r25, 0x00	; 0
    93e4:	0e 94 ee 82 	call	0x105dc	; 0x105dc <eeprom_read_byte>
    93e8:	8e 83       	std	Y+6, r24	; 0x06
    93ea:	85 e0       	ldi	r24, 0x05	; 5
    93ec:	8f 83       	std	Y+7, r24	; 0x07
    93ee:	84 e1       	ldi	r24, 0x14	; 20
    93f0:	88 87       	std	Y+8, r24	; 0x08
    93f2:	9e 81       	ldd	r25, Y+6	; 0x06
    93f4:	88 85       	ldd	r24, Y+8	; 0x08
    93f6:	89 17       	cp	r24, r25
    93f8:	40 f0       	brcs	.+16     	; 0x940a <_ZN13EepromManager11readNonVolsEv+0x58>
    93fa:	9e 81       	ldd	r25, Y+6	; 0x06
    93fc:	8f 81       	ldd	r24, Y+7	; 0x07
    93fe:	98 17       	cp	r25, r24
    9400:	10 f4       	brcc	.+4      	; 0x9406 <_ZN13EepromManager11readNonVolsEv+0x54>
    9402:	8f 81       	ldd	r24, Y+7	; 0x07
    9404:	03 c0       	rjmp	.+6      	; 0x940c <_ZN13EepromManager11readNonVolsEv+0x5a>
    9406:	8e 81       	ldd	r24, Y+6	; 0x06
    9408:	01 c0       	rjmp	.+2      	; 0x940c <_ZN13EepromManager11readNonVolsEv+0x5a>
    940a:	88 85       	ldd	r24, Y+8	; 0x08
    940c:	80 93 0b 40 	sts	0x400B, r24	; 0x80400b <g_id_codespeed>
		g_fox = CLAMP(BEACON, (Fox_t)eeprom_read_byte(&(EepromManager::ee_vars.fox_setting)), SPRINT_F5);
    9410:	8e e3       	ldi	r24, 0x3E	; 62
    9412:	90 e0       	ldi	r25, 0x00	; 0
    9414:	0e 94 ee 82 	call	0x105dc	; 0x105dc <eeprom_read_byte>
    9418:	89 87       	std	Y+9, r24	; 0x09
    941a:	1a 86       	std	Y+10, r1	; 0x0a
    941c:	81 e1       	ldi	r24, 0x11	; 17
    941e:	8b 87       	std	Y+11, r24	; 0x0b
    9420:	99 85       	ldd	r25, Y+9	; 0x09
    9422:	8b 85       	ldd	r24, Y+11	; 0x0b
    9424:	89 17       	cp	r24, r25
    9426:	40 f0       	brcs	.+16     	; 0x9438 <_ZN13EepromManager11readNonVolsEv+0x86>
    9428:	99 85       	ldd	r25, Y+9	; 0x09
    942a:	8a 85       	ldd	r24, Y+10	; 0x0a
    942c:	98 17       	cp	r25, r24
    942e:	10 f4       	brcc	.+4      	; 0x9434 <_ZN13EepromManager11readNonVolsEv+0x82>
    9430:	8a 85       	ldd	r24, Y+10	; 0x0a
    9432:	03 c0       	rjmp	.+6      	; 0x943a <_ZN13EepromManager11readNonVolsEv+0x88>
    9434:	89 85       	ldd	r24, Y+9	; 0x09
    9436:	01 c0       	rjmp	.+2      	; 0x943a <_ZN13EepromManager11readNonVolsEv+0x88>
    9438:	8b 85       	ldd	r24, Y+11	; 0x0b
    943a:	80 93 20 40 	sts	0x4020, r24	; 0x804020 <g_fox>
		g_event_start_epoch = eeprom_read_dword(&(EepromManager::ee_vars.event_start_epoch));
    943e:	82 e0       	ldi	r24, 0x02	; 2
    9440:	90 e0       	ldi	r25, 0x00	; 0
    9442:	0e 94 f6 82 	call	0x105ec	; 0x105ec <eeprom_read_dword>
    9446:	dc 01       	movw	r26, r24
    9448:	cb 01       	movw	r24, r22
    944a:	80 93 9a 47 	sts	0x479A, r24	; 0x80479a <g_event_start_epoch>
    944e:	90 93 9b 47 	sts	0x479B, r25	; 0x80479b <g_event_start_epoch+0x1>
    9452:	a0 93 9c 47 	sts	0x479C, r26	; 0x80479c <g_event_start_epoch+0x2>
    9456:	b0 93 9d 47 	sts	0x479D, r27	; 0x80479d <g_event_start_epoch+0x3>
		g_event_finish_epoch = eeprom_read_dword(&(EepromManager::ee_vars.event_finish_epoch));
    945a:	86 e0       	ldi	r24, 0x06	; 6
    945c:	90 e0       	ldi	r25, 0x00	; 0
    945e:	0e 94 f6 82 	call	0x105ec	; 0x105ec <eeprom_read_dword>
    9462:	dc 01       	movw	r26, r24
    9464:	cb 01       	movw	r24, r22
    9466:	80 93 9e 47 	sts	0x479E, r24	; 0x80479e <g_event_finish_epoch>
    946a:	90 93 9f 47 	sts	0x479F, r25	; 0x80479f <g_event_finish_epoch+0x1>
    946e:	a0 93 a0 47 	sts	0x47A0, r26	; 0x8047a0 <g_event_finish_epoch+0x2>
    9472:	b0 93 a1 47 	sts	0x47A1, r27	; 0x8047a1 <g_event_finish_epoch+0x3>
		g_utc_offset = (int8_t)eeprom_read_byte(&(EepromManager::ee_vars.utc_offset));
    9476:	8f e3       	ldi	r24, 0x3F	; 63
    9478:	90 e0       	ldi	r25, 0x00	; 0
    947a:	0e 94 ee 82 	call	0x105dc	; 0x105dc <eeprom_read_byte>
    947e:	80 93 ba 47 	sts	0x47BA, r24	; 0x8047ba <g_utc_offset>

		for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    9482:	1a 82       	std	Y+2, r1	; 0x02
    9484:	1b 82       	std	Y+3, r1	; 0x03
    9486:	8a 81       	ldd	r24, Y+2	; 0x02
    9488:	9b 81       	ldd	r25, Y+3	; 0x03
    948a:	44 97       	sbiw	r24, 0x14	; 20
    948c:	e8 f4       	brcc	.+58     	; 0x94c8 <_ZN13EepromManager11readNonVolsEv+0x116>
		{
			g_messages_text[STATION_ID][i] = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.stationID_text[i])));
    948e:	8a 81       	ldd	r24, Y+2	; 0x02
    9490:	9b 81       	ldd	r25, Y+3	; 0x03
    9492:	0a 96       	adiw	r24, 0x0a	; 10
    9494:	80 50       	subi	r24, 0x00	; 0
    9496:	90 40       	sbci	r25, 0x00	; 0
    9498:	0e 94 ee 82 	call	0x105dc	; 0x105dc <eeprom_read_byte>
    949c:	28 2f       	mov	r18, r24
    949e:	8a 81       	ldd	r24, Y+2	; 0x02
    94a0:	9b 81       	ldd	r25, Y+3	; 0x03
    94a2:	8f 57       	subi	r24, 0x7F	; 127
    94a4:	98 4b       	sbci	r25, 0xB8	; 184
    94a6:	fc 01       	movw	r30, r24
    94a8:	20 83       	st	Z, r18
			if(!g_messages_text[STATION_ID][i])
    94aa:	8a 81       	ldd	r24, Y+2	; 0x02
    94ac:	9b 81       	ldd	r25, Y+3	; 0x03
    94ae:	8f 57       	subi	r24, 0x7F	; 127
    94b0:	98 4b       	sbci	r25, 0xB8	; 184
    94b2:	fc 01       	movw	r30, r24
    94b4:	80 81       	ld	r24, Z
    94b6:	88 23       	and	r24, r24
    94b8:	31 f0       	breq	.+12     	; 0x94c6 <_ZN13EepromManager11readNonVolsEv+0x114>
		g_fox = CLAMP(BEACON, (Fox_t)eeprom_read_byte(&(EepromManager::ee_vars.fox_setting)), SPRINT_F5);
		g_event_start_epoch = eeprom_read_dword(&(EepromManager::ee_vars.event_start_epoch));
		g_event_finish_epoch = eeprom_read_dword(&(EepromManager::ee_vars.event_finish_epoch));
		g_utc_offset = (int8_t)eeprom_read_byte(&(EepromManager::ee_vars.utc_offset));

		for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    94ba:	8a 81       	ldd	r24, Y+2	; 0x02
    94bc:	9b 81       	ldd	r25, Y+3	; 0x03
    94be:	01 96       	adiw	r24, 0x01	; 1
    94c0:	8a 83       	std	Y+2, r24	; 0x02
    94c2:	9b 83       	std	Y+3, r25	; 0x03
    94c4:	e0 cf       	rjmp	.-64     	; 0x9486 <_ZN13EepromManager11readNonVolsEv+0xd4>
		{
			g_messages_text[STATION_ID][i] = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.stationID_text[i])));
			if(!g_messages_text[STATION_ID][i])
			{
				break;
    94c6:	00 00       	nop
			}
		}

		for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    94c8:	1a 82       	std	Y+2, r1	; 0x02
    94ca:	1b 82       	std	Y+3, r1	; 0x03
    94cc:	8a 81       	ldd	r24, Y+2	; 0x02
    94ce:	9b 81       	ldd	r25, Y+3	; 0x03
    94d0:	44 97       	sbiw	r24, 0x14	; 20
    94d2:	e8 f4       	brcc	.+58     	; 0x950e <_ZN13EepromManager11readNonVolsEv+0x15c>
		{
			g_messages_text[PATTERN_TEXT][i] = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.pattern_text[i])));
    94d4:	8a 81       	ldd	r24, Y+2	; 0x02
    94d6:	9b 81       	ldd	r25, Y+3	; 0x03
    94d8:	4f 96       	adiw	r24, 0x1f	; 31
    94da:	80 50       	subi	r24, 0x00	; 0
    94dc:	90 40       	sbci	r25, 0x00	; 0
    94de:	0e 94 ee 82 	call	0x105dc	; 0x105dc <eeprom_read_byte>
    94e2:	28 2f       	mov	r18, r24
    94e4:	8a 81       	ldd	r24, Y+2	; 0x02
    94e6:	9b 81       	ldd	r25, Y+3	; 0x03
    94e8:	84 59       	subi	r24, 0x94	; 148
    94ea:	98 4b       	sbci	r25, 0xB8	; 184
    94ec:	fc 01       	movw	r30, r24
    94ee:	20 83       	st	Z, r18
			if(!g_messages_text[PATTERN_TEXT][i])
    94f0:	8a 81       	ldd	r24, Y+2	; 0x02
    94f2:	9b 81       	ldd	r25, Y+3	; 0x03
    94f4:	84 59       	subi	r24, 0x94	; 148
    94f6:	98 4b       	sbci	r25, 0xB8	; 184
    94f8:	fc 01       	movw	r30, r24
    94fa:	80 81       	ld	r24, Z
    94fc:	88 23       	and	r24, r24
    94fe:	31 f0       	breq	.+12     	; 0x950c <_ZN13EepromManager11readNonVolsEv+0x15a>
			{
				break;
			}
		}

		for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    9500:	8a 81       	ldd	r24, Y+2	; 0x02
    9502:	9b 81       	ldd	r25, Y+3	; 0x03
    9504:	01 96       	adiw	r24, 0x01	; 1
    9506:	8a 83       	std	Y+2, r24	; 0x02
    9508:	9b 83       	std	Y+3, r25	; 0x03
    950a:	e0 cf       	rjmp	.-64     	; 0x94cc <_ZN13EepromManager11readNonVolsEv+0x11a>
		{
			g_messages_text[PATTERN_TEXT][i] = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.pattern_text[i])));
			if(!g_messages_text[PATTERN_TEXT][i])
			{
				break;
    950c:	00 00       	nop
			}
		}

		for(i = 0; i < MAX_UNLOCK_CODE_LENGTH; i++)
    950e:	1a 82       	std	Y+2, r1	; 0x02
    9510:	1b 82       	std	Y+3, r1	; 0x03
    9512:	8a 81       	ldd	r24, Y+2	; 0x02
    9514:	9b 81       	ldd	r25, Y+3	; 0x03
    9516:	08 97       	sbiw	r24, 0x08	; 8
    9518:	e8 f4       	brcc	.+58     	; 0x9554 <_ZN13EepromManager11readNonVolsEv+0x1a2>
		{
			g_unlockCode[i] = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.unlockCode[i])));
    951a:	8a 81       	ldd	r24, Y+2	; 0x02
    951c:	9b 81       	ldd	r25, Y+3	; 0x03
    951e:	c4 96       	adiw	r24, 0x34	; 52
    9520:	80 50       	subi	r24, 0x00	; 0
    9522:	90 40       	sbci	r25, 0x00	; 0
    9524:	0e 94 ee 82 	call	0x105dc	; 0x105dc <eeprom_read_byte>
    9528:	28 2f       	mov	r18, r24
    952a:	8a 81       	ldd	r24, Y+2	; 0x02
    952c:	9b 81       	ldd	r25, Y+3	; 0x03
    952e:	85 54       	subi	r24, 0x45	; 69
    9530:	98 4b       	sbci	r25, 0xB8	; 184
    9532:	fc 01       	movw	r30, r24
    9534:	20 83       	st	Z, r18
			if(!g_unlockCode[i])
    9536:	8a 81       	ldd	r24, Y+2	; 0x02
    9538:	9b 81       	ldd	r25, Y+3	; 0x03
    953a:	85 54       	subi	r24, 0x45	; 69
    953c:	98 4b       	sbci	r25, 0xB8	; 184
    953e:	fc 01       	movw	r30, r24
    9540:	80 81       	ld	r24, Z
    9542:	88 23       	and	r24, r24
    9544:	31 f0       	breq	.+12     	; 0x9552 <_ZN13EepromManager11readNonVolsEv+0x1a0>
			{
				break;
			}
		}

		for(i = 0; i < MAX_UNLOCK_CODE_LENGTH; i++)
    9546:	8a 81       	ldd	r24, Y+2	; 0x02
    9548:	9b 81       	ldd	r25, Y+3	; 0x03
    954a:	01 96       	adiw	r24, 0x01	; 1
    954c:	8a 83       	std	Y+2, r24	; 0x02
    954e:	9b 83       	std	Y+3, r25	; 0x03
    9550:	e0 cf       	rjmp	.-64     	; 0x9512 <_ZN13EepromManager11readNonVolsEv+0x160>
		{
			g_unlockCode[i] = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.unlockCode[i])));
			if(!g_unlockCode[i])
			{
				break;
    9552:	00 00       	nop
			}
		}
		
		g_80m_frequency = CLAMP(TX_MINIMUM_80M_FREQUENCY, eeprom_read_dword(&(EepromManager::ee_vars.frequency)), TX_MAXIMUM_80M_FREQUENCY);
    9554:	80 e4       	ldi	r24, 0x40	; 64
    9556:	90 e0       	ldi	r25, 0x00	; 0
    9558:	0e 94 f6 82 	call	0x105ec	; 0x105ec <eeprom_read_dword>
    955c:	dc 01       	movw	r26, r24
    955e:	cb 01       	movw	r24, r22
    9560:	8c 87       	std	Y+12, r24	; 0x0c
    9562:	9d 87       	std	Y+13, r25	; 0x0d
    9564:	ae 87       	std	Y+14, r26	; 0x0e
    9566:	bf 87       	std	Y+15, r27	; 0x0f
    9568:	80 ee       	ldi	r24, 0xE0	; 224
    956a:	97 e6       	ldi	r25, 0x67	; 103
    956c:	a5 e3       	ldi	r26, 0x35	; 53
    956e:	b0 e0       	ldi	r27, 0x00	; 0
    9570:	88 8b       	std	Y+16, r24	; 0x10
    9572:	99 8b       	std	Y+17, r25	; 0x11
    9574:	aa 8b       	std	Y+18, r26	; 0x12
    9576:	bb 8b       	std	Y+19, r27	; 0x13
    9578:	80 e0       	ldi	r24, 0x00	; 0
    957a:	99 e0       	ldi	r25, 0x09	; 9
    957c:	ad e3       	ldi	r26, 0x3D	; 61
    957e:	b0 e0       	ldi	r27, 0x00	; 0
    9580:	8c 8b       	std	Y+20, r24	; 0x14
    9582:	9d 8b       	std	Y+21, r25	; 0x15
    9584:	ae 8b       	std	Y+22, r26	; 0x16
    9586:	bf 8b       	std	Y+23, r27	; 0x17
    9588:	2c 85       	ldd	r18, Y+12	; 0x0c
    958a:	3d 85       	ldd	r19, Y+13	; 0x0d
    958c:	4e 85       	ldd	r20, Y+14	; 0x0e
    958e:	5f 85       	ldd	r21, Y+15	; 0x0f
    9590:	8c 89       	ldd	r24, Y+20	; 0x14
    9592:	9d 89       	ldd	r25, Y+21	; 0x15
    9594:	ae 89       	ldd	r26, Y+22	; 0x16
    9596:	bf 89       	ldd	r27, Y+23	; 0x17
    9598:	82 17       	cp	r24, r18
    959a:	93 07       	cpc	r25, r19
    959c:	a4 07       	cpc	r26, r20
    959e:	b5 07       	cpc	r27, r21
    95a0:	b8 f0       	brcs	.+46     	; 0x95d0 <_ZN13EepromManager11readNonVolsEv+0x21e>
    95a2:	2c 85       	ldd	r18, Y+12	; 0x0c
    95a4:	3d 85       	ldd	r19, Y+13	; 0x0d
    95a6:	4e 85       	ldd	r20, Y+14	; 0x0e
    95a8:	5f 85       	ldd	r21, Y+15	; 0x0f
    95aa:	88 89       	ldd	r24, Y+16	; 0x10
    95ac:	99 89       	ldd	r25, Y+17	; 0x11
    95ae:	aa 89       	ldd	r26, Y+18	; 0x12
    95b0:	bb 89       	ldd	r27, Y+19	; 0x13
    95b2:	28 17       	cp	r18, r24
    95b4:	39 07       	cpc	r19, r25
    95b6:	4a 07       	cpc	r20, r26
    95b8:	5b 07       	cpc	r21, r27
    95ba:	28 f4       	brcc	.+10     	; 0x95c6 <_ZN13EepromManager11readNonVolsEv+0x214>
    95bc:	88 89       	ldd	r24, Y+16	; 0x10
    95be:	99 89       	ldd	r25, Y+17	; 0x11
    95c0:	aa 89       	ldd	r26, Y+18	; 0x12
    95c2:	bb 89       	ldd	r27, Y+19	; 0x13
    95c4:	09 c0       	rjmp	.+18     	; 0x95d8 <_ZN13EepromManager11readNonVolsEv+0x226>
    95c6:	8c 85       	ldd	r24, Y+12	; 0x0c
    95c8:	9d 85       	ldd	r25, Y+13	; 0x0d
    95ca:	ae 85       	ldd	r26, Y+14	; 0x0e
    95cc:	bf 85       	ldd	r27, Y+15	; 0x0f
    95ce:	04 c0       	rjmp	.+8      	; 0x95d8 <_ZN13EepromManager11readNonVolsEv+0x226>
    95d0:	8c 89       	ldd	r24, Y+20	; 0x14
    95d2:	9d 89       	ldd	r25, Y+21	; 0x15
    95d4:	ae 89       	ldd	r26, Y+22	; 0x16
    95d6:	bf 89       	ldd	r27, Y+23	; 0x17
    95d8:	80 93 34 40 	sts	0x4034, r24	; 0x804034 <g_80m_frequency>
    95dc:	90 93 35 40 	sts	0x4035, r25	; 0x804035 <g_80m_frequency+0x1>
    95e0:	a0 93 36 40 	sts	0x4036, r26	; 0x804036 <g_80m_frequency+0x2>
    95e4:	b0 93 37 40 	sts	0x4037, r27	; 0x804037 <g_80m_frequency+0x3>
		g_rtty_offset =eeprom_read_dword(&(EepromManager::ee_vars.rtty_offset));
    95e8:	84 e4       	ldi	r24, 0x44	; 68
    95ea:	90 e0       	ldi	r25, 0x00	; 0
    95ec:	0e 94 f6 82 	call	0x105ec	; 0x105ec <eeprom_read_dword>
    95f0:	dc 01       	movw	r26, r24
    95f2:	cb 01       	movw	r24, r22
    95f4:	80 93 3a 40 	sts	0x403A, r24	; 0x80403a <g_rtty_offset>
    95f8:	90 93 3b 40 	sts	0x403B, r25	; 0x80403b <g_rtty_offset+0x1>
    95fc:	a0 93 3c 40 	sts	0x403C, r26	; 0x80403c <g_rtty_offset+0x2>
    9600:	b0 93 3d 40 	sts	0x403D, r27	; 0x80403d <g_rtty_offset+0x3>
		g_80m_power_level_mW = CLAMP(MIN_RF_POWER_MW, eeprom_read_word(&(EepromManager::ee_vars.rf_power)), MAX_TX_POWER_80M_MW);
    9604:	88 e4       	ldi	r24, 0x48	; 72
    9606:	90 e0       	ldi	r25, 0x00	; 0
    9608:	0e 94 fd 82 	call	0x105fa	; 0x105fa <eeprom_read_word>
    960c:	88 8f       	std	Y+24, r24	; 0x18
    960e:	99 8f       	std	Y+25, r25	; 0x19
    9610:	1a 8e       	std	Y+26, r1	; 0x1a
    9612:	1b 8e       	std	Y+27, r1	; 0x1b
    9614:	88 e8       	ldi	r24, 0x88	; 136
    9616:	93 e1       	ldi	r25, 0x13	; 19
    9618:	8c 8f       	std	Y+28, r24	; 0x1c
    961a:	9d 8f       	std	Y+29, r25	; 0x1d
    961c:	28 8d       	ldd	r18, Y+24	; 0x18
    961e:	39 8d       	ldd	r19, Y+25	; 0x19
    9620:	8c 8d       	ldd	r24, Y+28	; 0x1c
    9622:	9d 8d       	ldd	r25, Y+29	; 0x1d
    9624:	82 17       	cp	r24, r18
    9626:	93 07       	cpc	r25, r19
    9628:	68 f0       	brcs	.+26     	; 0x9644 <_ZN13EepromManager11readNonVolsEv+0x292>
    962a:	28 8d       	ldd	r18, Y+24	; 0x18
    962c:	39 8d       	ldd	r19, Y+25	; 0x19
    962e:	8a 8d       	ldd	r24, Y+26	; 0x1a
    9630:	9b 8d       	ldd	r25, Y+27	; 0x1b
    9632:	28 17       	cp	r18, r24
    9634:	39 07       	cpc	r19, r25
    9636:	18 f4       	brcc	.+6      	; 0x963e <_ZN13EepromManager11readNonVolsEv+0x28c>
    9638:	8a 8d       	ldd	r24, Y+26	; 0x1a
    963a:	9b 8d       	ldd	r25, Y+27	; 0x1b
    963c:	05 c0       	rjmp	.+10     	; 0x9648 <_ZN13EepromManager11readNonVolsEv+0x296>
    963e:	88 8d       	ldd	r24, Y+24	; 0x18
    9640:	99 8d       	ldd	r25, Y+25	; 0x19
    9642:	02 c0       	rjmp	.+4      	; 0x9648 <_ZN13EepromManager11readNonVolsEv+0x296>
    9644:	8c 8d       	ldd	r24, Y+28	; 0x1c
    9646:	9d 8d       	ldd	r25, Y+29	; 0x1d
    9648:	80 93 38 40 	sts	0x4038, r24	; 0x804038 <g_80m_power_level_mW>
    964c:	90 93 39 40 	sts	0x4039, r25	; 0x804039 <g_80m_power_level_mW+0x1>

		/* Perform sanity checks */
		if(g_event_start_epoch && (g_event_finish_epoch <= g_event_start_epoch))
    9650:	80 91 9a 47 	lds	r24, 0x479A	; 0x80479a <g_event_start_epoch>
    9654:	90 91 9b 47 	lds	r25, 0x479B	; 0x80479b <g_event_start_epoch+0x1>
    9658:	a0 91 9c 47 	lds	r26, 0x479C	; 0x80479c <g_event_start_epoch+0x2>
    965c:	b0 91 9d 47 	lds	r27, 0x479D	; 0x80479d <g_event_start_epoch+0x3>
    9660:	89 2b       	or	r24, r25
    9662:	8a 2b       	or	r24, r26
    9664:	8b 2b       	or	r24, r27
    9666:	b9 f0       	breq	.+46     	; 0x9696 <_ZN13EepromManager11readNonVolsEv+0x2e4>
    9668:	20 91 9e 47 	lds	r18, 0x479E	; 0x80479e <g_event_finish_epoch>
    966c:	30 91 9f 47 	lds	r19, 0x479F	; 0x80479f <g_event_finish_epoch+0x1>
    9670:	40 91 a0 47 	lds	r20, 0x47A0	; 0x8047a0 <g_event_finish_epoch+0x2>
    9674:	50 91 a1 47 	lds	r21, 0x47A1	; 0x8047a1 <g_event_finish_epoch+0x3>
    9678:	80 91 9a 47 	lds	r24, 0x479A	; 0x80479a <g_event_start_epoch>
    967c:	90 91 9b 47 	lds	r25, 0x479B	; 0x80479b <g_event_start_epoch+0x1>
    9680:	a0 91 9c 47 	lds	r26, 0x479C	; 0x80479c <g_event_start_epoch+0x2>
    9684:	b0 91 9d 47 	lds	r27, 0x479D	; 0x80479d <g_event_start_epoch+0x3>
    9688:	82 17       	cp	r24, r18
    968a:	93 07       	cpc	r25, r19
    968c:	a4 07       	cpc	r26, r20
    968e:	b5 07       	cpc	r27, r21
    9690:	10 f0       	brcs	.+4      	; 0x9696 <_ZN13EepromManager11readNonVolsEv+0x2e4>
    9692:	81 e0       	ldi	r24, 0x01	; 1
    9694:	01 c0       	rjmp	.+2      	; 0x9698 <_ZN13EepromManager11readNonVolsEv+0x2e6>
    9696:	80 e0       	ldi	r24, 0x00	; 0
    9698:	88 23       	and	r24, r24
    969a:	a1 f0       	breq	.+40     	; 0x96c4 <_ZN13EepromManager11readNonVolsEv+0x312>
		{
			g_event_finish_epoch = g_event_start_epoch + SECONDS_24H;
    969c:	80 91 9a 47 	lds	r24, 0x479A	; 0x80479a <g_event_start_epoch>
    96a0:	90 91 9b 47 	lds	r25, 0x479B	; 0x80479b <g_event_start_epoch+0x1>
    96a4:	a0 91 9c 47 	lds	r26, 0x479C	; 0x80479c <g_event_start_epoch+0x2>
    96a8:	b0 91 9d 47 	lds	r27, 0x479D	; 0x80479d <g_event_start_epoch+0x3>
    96ac:	80 58       	subi	r24, 0x80	; 128
    96ae:	9e 4a       	sbci	r25, 0xAE	; 174
    96b0:	ae 4f       	sbci	r26, 0xFE	; 254
    96b2:	bf 4f       	sbci	r27, 0xFF	; 255
    96b4:	80 93 9e 47 	sts	0x479E, r24	; 0x80479e <g_event_finish_epoch>
    96b8:	90 93 9f 47 	sts	0x479F, r25	; 0x80479f <g_event_finish_epoch+0x1>
    96bc:	a0 93 a0 47 	sts	0x47A0, r26	; 0x8047a0 <g_event_finish_epoch+0x2>
    96c0:	b0 93 a1 47 	sts	0x47A1, r27	; 0x8047a1 <g_event_finish_epoch+0x3>
		}
		
		g_pattern_codespeed = CLAMP(5, eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.pattern_codespeed))), 20);
    96c4:	8a e4       	ldi	r24, 0x4A	; 74
    96c6:	90 e0       	ldi	r25, 0x00	; 0
    96c8:	0e 94 ee 82 	call	0x105dc	; 0x105dc <eeprom_read_byte>
    96cc:	8e 8f       	std	Y+30, r24	; 0x1e
    96ce:	85 e0       	ldi	r24, 0x05	; 5
    96d0:	90 e0       	ldi	r25, 0x00	; 0
    96d2:	8f 8f       	std	Y+31, r24	; 0x1f
    96d4:	98 a3       	std	Y+32, r25	; 0x20
    96d6:	84 e1       	ldi	r24, 0x14	; 20
    96d8:	90 e0       	ldi	r25, 0x00	; 0
    96da:	89 a3       	std	Y+33, r24	; 0x21
    96dc:	9a a3       	std	Y+34, r25	; 0x22
    96de:	8e 8d       	ldd	r24, Y+30	; 0x1e
    96e0:	28 2f       	mov	r18, r24
    96e2:	30 e0       	ldi	r19, 0x00	; 0
    96e4:	89 a1       	ldd	r24, Y+33	; 0x21
    96e6:	9a a1       	ldd	r25, Y+34	; 0x22
    96e8:	82 17       	cp	r24, r18
    96ea:	93 07       	cpc	r25, r19
    96ec:	54 f0       	brlt	.+20     	; 0x9702 <_ZN13EepromManager11readNonVolsEv+0x350>
    96ee:	8e 8d       	ldd	r24, Y+30	; 0x1e
    96f0:	88 2f       	mov	r24, r24
    96f2:	90 e0       	ldi	r25, 0x00	; 0
    96f4:	2f 8d       	ldd	r18, Y+31	; 0x1f
    96f6:	38 a1       	ldd	r19, Y+32	; 0x20
    96f8:	82 17       	cp	r24, r18
    96fa:	93 07       	cpc	r25, r19
    96fc:	24 f4       	brge	.+8      	; 0x9706 <_ZN13EepromManager11readNonVolsEv+0x354>
    96fe:	c9 01       	movw	r24, r18
    9700:	02 c0       	rjmp	.+4      	; 0x9706 <_ZN13EepromManager11readNonVolsEv+0x354>
    9702:	89 a1       	ldd	r24, Y+33	; 0x21
    9704:	9a a1       	ldd	r25, Y+34	; 0x22
    9706:	80 93 0c 40 	sts	0x400C, r24	; 0x80400c <g_pattern_codespeed>
		g_off_air_seconds = CLAMP(0, (int16_t)eeprom_read_word((const uint16_t*)&(EepromManager::ee_vars.off_air_seconds)), 3600);
    970a:	8b e4       	ldi	r24, 0x4B	; 75
    970c:	90 e0       	ldi	r25, 0x00	; 0
    970e:	0e 94 fd 82 	call	0x105fa	; 0x105fa <eeprom_read_word>
    9712:	8b a3       	std	Y+35, r24	; 0x23
    9714:	9c a3       	std	Y+36, r25	; 0x24
    9716:	1d a2       	std	Y+37, r1	; 0x25
    9718:	1e a2       	std	Y+38, r1	; 0x26
    971a:	80 e1       	ldi	r24, 0x10	; 16
    971c:	9e e0       	ldi	r25, 0x0E	; 14
    971e:	8f a3       	std	Y+39, r24	; 0x27
    9720:	98 a7       	std	Y+40, r25	; 0x28
    9722:	2b a1       	ldd	r18, Y+35	; 0x23
    9724:	3c a1       	ldd	r19, Y+36	; 0x24
    9726:	8f a1       	ldd	r24, Y+39	; 0x27
    9728:	98 a5       	ldd	r25, Y+40	; 0x28
    972a:	82 17       	cp	r24, r18
    972c:	93 07       	cpc	r25, r19
    972e:	6c f0       	brlt	.+26     	; 0x974a <_ZN13EepromManager11readNonVolsEv+0x398>
    9730:	2b a1       	ldd	r18, Y+35	; 0x23
    9732:	3c a1       	ldd	r19, Y+36	; 0x24
    9734:	8d a1       	ldd	r24, Y+37	; 0x25
    9736:	9e a1       	ldd	r25, Y+38	; 0x26
    9738:	28 17       	cp	r18, r24
    973a:	39 07       	cpc	r19, r25
    973c:	1c f4       	brge	.+6      	; 0x9744 <_ZN13EepromManager11readNonVolsEv+0x392>
    973e:	8d a1       	ldd	r24, Y+37	; 0x25
    9740:	9e a1       	ldd	r25, Y+38	; 0x26
    9742:	05 c0       	rjmp	.+10     	; 0x974e <_ZN13EepromManager11readNonVolsEv+0x39c>
    9744:	8b a1       	ldd	r24, Y+35	; 0x23
    9746:	9c a1       	ldd	r25, Y+36	; 0x24
    9748:	02 c0       	rjmp	.+4      	; 0x974e <_ZN13EepromManager11readNonVolsEv+0x39c>
    974a:	8f a1       	ldd	r24, Y+39	; 0x27
    974c:	98 a5       	ldd	r25, Y+40	; 0x28
    974e:	80 93 0f 40 	sts	0x400F, r24	; 0x80400f <g_off_air_seconds>
    9752:	90 93 10 40 	sts	0x4010, r25	; 0x804010 <g_off_air_seconds+0x1>
		g_on_air_seconds = CLAMP(0, (int16_t)eeprom_read_word((const uint16_t*)&(EepromManager::ee_vars.on_air_seconds)), 3600);
    9756:	8d e4       	ldi	r24, 0x4D	; 77
    9758:	90 e0       	ldi	r25, 0x00	; 0
    975a:	0e 94 fd 82 	call	0x105fa	; 0x105fa <eeprom_read_word>
    975e:	89 a7       	std	Y+41, r24	; 0x29
    9760:	9a a7       	std	Y+42, r25	; 0x2a
    9762:	1b a6       	std	Y+43, r1	; 0x2b
    9764:	1c a6       	std	Y+44, r1	; 0x2c
    9766:	80 e1       	ldi	r24, 0x10	; 16
    9768:	9e e0       	ldi	r25, 0x0E	; 14
    976a:	8d a7       	std	Y+45, r24	; 0x2d
    976c:	9e a7       	std	Y+46, r25	; 0x2e
    976e:	29 a5       	ldd	r18, Y+41	; 0x29
    9770:	3a a5       	ldd	r19, Y+42	; 0x2a
    9772:	8d a5       	ldd	r24, Y+45	; 0x2d
    9774:	9e a5       	ldd	r25, Y+46	; 0x2e
    9776:	82 17       	cp	r24, r18
    9778:	93 07       	cpc	r25, r19
    977a:	6c f0       	brlt	.+26     	; 0x9796 <_ZN13EepromManager11readNonVolsEv+0x3e4>
    977c:	29 a5       	ldd	r18, Y+41	; 0x29
    977e:	3a a5       	ldd	r19, Y+42	; 0x2a
    9780:	8b a5       	ldd	r24, Y+43	; 0x2b
    9782:	9c a5       	ldd	r25, Y+44	; 0x2c
    9784:	28 17       	cp	r18, r24
    9786:	39 07       	cpc	r19, r25
    9788:	1c f4       	brge	.+6      	; 0x9790 <_ZN13EepromManager11readNonVolsEv+0x3de>
    978a:	8b a5       	ldd	r24, Y+43	; 0x2b
    978c:	9c a5       	ldd	r25, Y+44	; 0x2c
    978e:	05 c0       	rjmp	.+10     	; 0x979a <_ZN13EepromManager11readNonVolsEv+0x3e8>
    9790:	89 a5       	ldd	r24, Y+41	; 0x29
    9792:	9a a5       	ldd	r25, Y+42	; 0x2a
    9794:	02 c0       	rjmp	.+4      	; 0x979a <_ZN13EepromManager11readNonVolsEv+0x3e8>
    9796:	8d a5       	ldd	r24, Y+45	; 0x2d
    9798:	9e a5       	ldd	r25, Y+46	; 0x2e
    979a:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_on_air_seconds>
    979e:	90 93 0e 40 	sts	0x400E, r25	; 0x80400e <g_on_air_seconds+0x1>
		g_ID_period_seconds = CLAMP(0, (int16_t)eeprom_read_word((const uint16_t*)&(EepromManager::ee_vars.ID_period_seconds)), 3600);
    97a2:	8f e4       	ldi	r24, 0x4F	; 79
    97a4:	90 e0       	ldi	r25, 0x00	; 0
    97a6:	0e 94 fd 82 	call	0x105fa	; 0x105fa <eeprom_read_word>
    97aa:	8f a7       	std	Y+47, r24	; 0x2f
    97ac:	98 ab       	std	Y+48, r25	; 0x30
    97ae:	19 aa       	std	Y+49, r1	; 0x31
    97b0:	1a aa       	std	Y+50, r1	; 0x32
    97b2:	80 e1       	ldi	r24, 0x10	; 16
    97b4:	9e e0       	ldi	r25, 0x0E	; 14
    97b6:	8b ab       	std	Y+51, r24	; 0x33
    97b8:	9c ab       	std	Y+52, r25	; 0x34
    97ba:	2f a5       	ldd	r18, Y+47	; 0x2f
    97bc:	38 a9       	ldd	r19, Y+48	; 0x30
    97be:	8b a9       	ldd	r24, Y+51	; 0x33
    97c0:	9c a9       	ldd	r25, Y+52	; 0x34
    97c2:	82 17       	cp	r24, r18
    97c4:	93 07       	cpc	r25, r19
    97c6:	6c f0       	brlt	.+26     	; 0x97e2 <_ZN13EepromManager11readNonVolsEv+0x430>
    97c8:	2f a5       	ldd	r18, Y+47	; 0x2f
    97ca:	38 a9       	ldd	r19, Y+48	; 0x30
    97cc:	89 a9       	ldd	r24, Y+49	; 0x31
    97ce:	9a a9       	ldd	r25, Y+50	; 0x32
    97d0:	28 17       	cp	r18, r24
    97d2:	39 07       	cpc	r19, r25
    97d4:	1c f4       	brge	.+6      	; 0x97dc <_ZN13EepromManager11readNonVolsEv+0x42a>
    97d6:	89 a9       	ldd	r24, Y+49	; 0x31
    97d8:	9a a9       	ldd	r25, Y+50	; 0x32
    97da:	05 c0       	rjmp	.+10     	; 0x97e6 <_ZN13EepromManager11readNonVolsEv+0x434>
    97dc:	8f a5       	ldd	r24, Y+47	; 0x2f
    97de:	98 a9       	ldd	r25, Y+48	; 0x30
    97e0:	02 c0       	rjmp	.+4      	; 0x97e6 <_ZN13EepromManager11readNonVolsEv+0x434>
    97e2:	8b a9       	ldd	r24, Y+51	; 0x33
    97e4:	9c a9       	ldd	r25, Y+52	; 0x34
    97e6:	80 93 11 40 	sts	0x4011, r24	; 0x804011 <g_ID_period_seconds>
    97ea:	90 93 12 40 	sts	0x4012, r25	; 0x804012 <g_ID_period_seconds+0x1>
		g_intra_cycle_delay_time = CLAMP(0, (int16_t)eeprom_read_word((const uint16_t*)&(EepromManager::ee_vars.intra_cycle_delay_time)), 3600);
    97ee:	81 e5       	ldi	r24, 0x51	; 81
    97f0:	90 e0       	ldi	r25, 0x00	; 0
    97f2:	0e 94 fd 82 	call	0x105fa	; 0x105fa <eeprom_read_word>
    97f6:	8d ab       	std	Y+53, r24	; 0x35
    97f8:	9e ab       	std	Y+54, r25	; 0x36
    97fa:	1f aa       	std	Y+55, r1	; 0x37
    97fc:	18 ae       	std	Y+56, r1	; 0x38
    97fe:	80 e1       	ldi	r24, 0x10	; 16
    9800:	9e e0       	ldi	r25, 0x0E	; 14
    9802:	89 af       	std	Y+57, r24	; 0x39
    9804:	9a af       	std	Y+58, r25	; 0x3a
    9806:	2d a9       	ldd	r18, Y+53	; 0x35
    9808:	3e a9       	ldd	r19, Y+54	; 0x36
    980a:	89 ad       	ldd	r24, Y+57	; 0x39
    980c:	9a ad       	ldd	r25, Y+58	; 0x3a
    980e:	82 17       	cp	r24, r18
    9810:	93 07       	cpc	r25, r19
    9812:	6c f0       	brlt	.+26     	; 0x982e <_ZN13EepromManager11readNonVolsEv+0x47c>
    9814:	2d a9       	ldd	r18, Y+53	; 0x35
    9816:	3e a9       	ldd	r19, Y+54	; 0x36
    9818:	8f a9       	ldd	r24, Y+55	; 0x37
    981a:	98 ad       	ldd	r25, Y+56	; 0x38
    981c:	28 17       	cp	r18, r24
    981e:	39 07       	cpc	r19, r25
    9820:	1c f4       	brge	.+6      	; 0x9828 <_ZN13EepromManager11readNonVolsEv+0x476>
    9822:	8f a9       	ldd	r24, Y+55	; 0x37
    9824:	98 ad       	ldd	r25, Y+56	; 0x38
    9826:	05 c0       	rjmp	.+10     	; 0x9832 <_ZN13EepromManager11readNonVolsEv+0x480>
    9828:	8d a9       	ldd	r24, Y+53	; 0x35
    982a:	9e a9       	ldd	r25, Y+54	; 0x36
    982c:	02 c0       	rjmp	.+4      	; 0x9832 <_ZN13EepromManager11readNonVolsEv+0x480>
    982e:	89 ad       	ldd	r24, Y+57	; 0x39
    9830:	9a ad       	ldd	r25, Y+58	; 0x3a
    9832:	80 93 98 47 	sts	0x4798, r24	; 0x804798 <g_intra_cycle_delay_time>
    9836:	90 93 99 47 	sts	0x4799, r25	; 0x804799 <g_intra_cycle_delay_time+0x1>

		failure = false;
    983a:	19 82       	std	Y+1, r1	; 0x01
	}

	return( failure);
    983c:	89 81       	ldd	r24, Y+1	; 0x01
}
    983e:	ec 96       	adiw	r28, 0x3c	; 60
    9840:	cd bf       	out	0x3d, r28	; 61
    9842:	de bf       	out	0x3e, r29	; 62
    9844:	df 91       	pop	r29
    9846:	cf 91       	pop	r28
    9848:	08 95       	ret

0000984a <_ZN13EepromManager20initializeEEPROMVarsEv>:

/*
 * Set volatile variables to their values stored in EEPROM
 */
	bool EepromManager::initializeEEPROMVars(void)
	{
    984a:	cf 93       	push	r28
    984c:	df 93       	push	r29
    984e:	cd b7       	in	r28, 0x3d	; 61
    9850:	de b7       	in	r29, 0x3e	; 62
    9852:	2b 97       	sbiw	r28, 0x0b	; 11
    9854:	cd bf       	out	0x3d, r28	; 61
    9856:	de bf       	out	0x3e, r29	; 62
    9858:	8a 87       	std	Y+10, r24	; 0x0a
    985a:	9b 87       	std	Y+11, r25	; 0x0b
		bool err = false;
    985c:	1f 82       	std	Y+7, r1	; 0x07
		uint16_t i, j;

		uint16_t initialization_flag = eeprom_read_word(0);
    985e:	80 e0       	ldi	r24, 0x00	; 0
    9860:	90 e0       	ldi	r25, 0x00	; 0
    9862:	0e 94 fd 82 	call	0x105fa	; 0x105fa <eeprom_read_word>
    9866:	88 87       	std	Y+8, r24	; 0x08
    9868:	99 87       	std	Y+9, r25	; 0x09

		if(initialization_flag != EEPROM_INITIALIZED_FLAG)
    986a:	88 85       	ldd	r24, Y+8	; 0x08
    986c:	99 85       	ldd	r25, Y+9	; 0x09
    986e:	8e 3c       	cpi	r24, 0xCE	; 206
    9870:	91 05       	cpc	r25, r1
    9872:	09 f4       	brne	.+2      	; 0x9876 <_ZN13EepromManager20initializeEEPROMVarsEv+0x2c>
    9874:	2a c1       	rjmp	.+596    	; 0x9aca <_ZN13EepromManager20initializeEEPROMVarsEv+0x280>
		{
			g_id_codespeed = EEPROM_ID_CODE_SPEED_DEFAULT;
    9876:	84 e1       	ldi	r24, 0x14	; 20
    9878:	80 93 0b 40 	sts	0x400B, r24	; 0x80400b <g_id_codespeed>
			avr_eeprom_write_byte(Id_codespeed, g_id_codespeed);
    987c:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    9880:	68 2f       	mov	r22, r24
    9882:	8d e3       	ldi	r24, 0x3D	; 61
    9884:	90 e0       	ldi	r25, 0x00	; 0
    9886:	0e 94 25 46 	call	0x8c4a	; 0x8c4a <_Z21avr_eeprom_write_bytejh>

			g_fox = EEPROM_FOX_SETTING_DEFAULT;
    988a:	81 e0       	ldi	r24, 0x01	; 1
    988c:	80 93 20 40 	sts	0x4020, r24	; 0x804020 <g_fox>
			avr_eeprom_write_byte(Fox_setting, g_fox);
    9890:	80 91 20 40 	lds	r24, 0x4020	; 0x804020 <g_fox>
    9894:	68 2f       	mov	r22, r24
    9896:	8e e3       	ldi	r24, 0x3E	; 62
    9898:	90 e0       	ldi	r25, 0x00	; 0
    989a:	0e 94 25 46 	call	0x8c4a	; 0x8c4a <_Z21avr_eeprom_write_bytejh>

			g_event_start_epoch = EEPROM_START_EPOCH_DEFAULT;
    989e:	10 92 9a 47 	sts	0x479A, r1	; 0x80479a <g_event_start_epoch>
    98a2:	10 92 9b 47 	sts	0x479B, r1	; 0x80479b <g_event_start_epoch+0x1>
    98a6:	10 92 9c 47 	sts	0x479C, r1	; 0x80479c <g_event_start_epoch+0x2>
    98aa:	10 92 9d 47 	sts	0x479D, r1	; 0x80479d <g_event_start_epoch+0x3>
			avr_eeprom_write_dword(Event_start_epoch, g_event_start_epoch);
    98ae:	80 91 9a 47 	lds	r24, 0x479A	; 0x80479a <g_event_start_epoch>
    98b2:	90 91 9b 47 	lds	r25, 0x479B	; 0x80479b <g_event_start_epoch+0x1>
    98b6:	a0 91 9c 47 	lds	r26, 0x479C	; 0x80479c <g_event_start_epoch+0x2>
    98ba:	b0 91 9d 47 	lds	r27, 0x479D	; 0x80479d <g_event_start_epoch+0x3>
    98be:	ac 01       	movw	r20, r24
    98c0:	bd 01       	movw	r22, r26
    98c2:	82 e0       	ldi	r24, 0x02	; 2
    98c4:	90 e0       	ldi	r25, 0x00	; 0
    98c6:	0e 94 87 46 	call	0x8d0e	; 0x8d0e <_Z22avr_eeprom_write_dwordjm>

			g_event_finish_epoch = EEPROM_FINISH_EPOCH_DEFAULT;
    98ca:	10 92 9e 47 	sts	0x479E, r1	; 0x80479e <g_event_finish_epoch>
    98ce:	10 92 9f 47 	sts	0x479F, r1	; 0x80479f <g_event_finish_epoch+0x1>
    98d2:	10 92 a0 47 	sts	0x47A0, r1	; 0x8047a0 <g_event_finish_epoch+0x2>
    98d6:	10 92 a1 47 	sts	0x47A1, r1	; 0x8047a1 <g_event_finish_epoch+0x3>
			avr_eeprom_write_dword(Event_finish_epoch, g_event_finish_epoch);
    98da:	80 91 9e 47 	lds	r24, 0x479E	; 0x80479e <g_event_finish_epoch>
    98de:	90 91 9f 47 	lds	r25, 0x479F	; 0x80479f <g_event_finish_epoch+0x1>
    98e2:	a0 91 a0 47 	lds	r26, 0x47A0	; 0x8047a0 <g_event_finish_epoch+0x2>
    98e6:	b0 91 a1 47 	lds	r27, 0x47A1	; 0x8047a1 <g_event_finish_epoch+0x3>
    98ea:	ac 01       	movw	r20, r24
    98ec:	bd 01       	movw	r22, r26
    98ee:	86 e0       	ldi	r24, 0x06	; 6
    98f0:	90 e0       	ldi	r25, 0x00	; 0
    98f2:	0e 94 87 46 	call	0x8d0e	; 0x8d0e <_Z22avr_eeprom_write_dwordjm>

			g_utc_offset = EEPROM_UTC_OFFSET_DEFAULT;
    98f6:	10 92 ba 47 	sts	0x47BA, r1	; 0x8047ba <g_utc_offset>
			avr_eeprom_write_byte(Utc_offset, (uint8_t)g_utc_offset);
    98fa:	80 91 ba 47 	lds	r24, 0x47BA	; 0x8047ba <g_utc_offset>
    98fe:	68 2f       	mov	r22, r24
    9900:	8f e3       	ldi	r24, 0x3F	; 63
    9902:	90 e0       	ldi	r25, 0x00	; 0
    9904:	0e 94 25 46 	call	0x8c4a	; 0x8c4a <_Z21avr_eeprom_write_bytejh>

			g_messages_text[STATION_ID][0] = '\0';
    9908:	10 92 81 47 	sts	0x4781, r1	; 0x804781 <g_messages_text+0x15>
			avr_eeprom_write_byte(StationID_text, 0);
    990c:	60 e0       	ldi	r22, 0x00	; 0
    990e:	8a e0       	ldi	r24, 0x0A	; 10
    9910:	90 e0       	ldi	r25, 0x00	; 0
    9912:	0e 94 25 46 	call	0x8c4a	; 0x8c4a <_Z21avr_eeprom_write_bytejh>

			g_messages_text[PATTERN_TEXT][0] = 'M';
    9916:	8d e4       	ldi	r24, 0x4D	; 77
    9918:	80 93 6c 47 	sts	0x476C, r24	; 0x80476c <g_messages_text>
			g_messages_text[PATTERN_TEXT][0] = 'O';
    991c:	8f e4       	ldi	r24, 0x4F	; 79
    991e:	80 93 6c 47 	sts	0x476C, r24	; 0x80476c <g_messages_text>
			g_messages_text[PATTERN_TEXT][0] = '\0';
    9922:	10 92 6c 47 	sts	0x476C, r1	; 0x80476c <g_messages_text>
			avr_eeprom_write_byte(Pattern_text, 0);
    9926:	60 e0       	ldi	r22, 0x00	; 0
    9928:	8f e1       	ldi	r24, 0x1F	; 31
    992a:	90 e0       	ldi	r25, 0x00	; 0
    992c:	0e 94 25 46 	call	0x8c4a	; 0x8c4a <_Z21avr_eeprom_write_bytejh>

			uint8_t *v = (uint8_t*)EEPROM_DTMF_UNLOCK_CODE_DEFAULT;
    9930:	89 ec       	ldi	r24, 0xC9	; 201
    9932:	94 e4       	ldi	r25, 0x44	; 68
    9934:	8d 83       	std	Y+5, r24	; 0x05
    9936:	9e 83       	std	Y+6, r25	; 0x06
			i = UnlockCode;
    9938:	84 e3       	ldi	r24, 0x34	; 52
    993a:	90 e0       	ldi	r25, 0x00	; 0
    993c:	89 83       	std	Y+1, r24	; 0x01
    993e:	9a 83       	std	Y+2, r25	; 0x02
			for(j = 0; j < strlen(EEPROM_DTMF_UNLOCK_CODE_DEFAULT); j++)
    9940:	1b 82       	std	Y+3, r1	; 0x03
    9942:	1c 82       	std	Y+4, r1	; 0x04
    9944:	8b 81       	ldd	r24, Y+3	; 0x03
    9946:	9c 81       	ldd	r25, Y+4	; 0x04
    9948:	04 97       	sbiw	r24, 0x04	; 4
    994a:	18 f5       	brcc	.+70     	; 0x9992 <_ZN13EepromManager20initializeEEPROMVarsEv+0x148>
			{
				g_unlockCode[j] = *v;
    994c:	8d 81       	ldd	r24, Y+5	; 0x05
    994e:	9e 81       	ldd	r25, Y+6	; 0x06
    9950:	fc 01       	movw	r30, r24
    9952:	20 81       	ld	r18, Z
    9954:	8b 81       	ldd	r24, Y+3	; 0x03
    9956:	9c 81       	ldd	r25, Y+4	; 0x04
    9958:	85 54       	subi	r24, 0x45	; 69
    995a:	98 4b       	sbci	r25, 0xB8	; 184
    995c:	fc 01       	movw	r30, r24
    995e:	20 83       	st	Z, r18
				avr_eeprom_write_byte(i++, *v++);
    9960:	8d 81       	ldd	r24, Y+5	; 0x05
    9962:	9e 81       	ldd	r25, Y+6	; 0x06
    9964:	9c 01       	movw	r18, r24
    9966:	2f 5f       	subi	r18, 0xFF	; 255
    9968:	3f 4f       	sbci	r19, 0xFF	; 255
    996a:	2d 83       	std	Y+5, r18	; 0x05
    996c:	3e 83       	std	Y+6, r19	; 0x06
    996e:	fc 01       	movw	r30, r24
    9970:	40 81       	ld	r20, Z
    9972:	89 81       	ldd	r24, Y+1	; 0x01
    9974:	9a 81       	ldd	r25, Y+2	; 0x02
    9976:	9c 01       	movw	r18, r24
    9978:	2f 5f       	subi	r18, 0xFF	; 255
    997a:	3f 4f       	sbci	r19, 0xFF	; 255
    997c:	29 83       	std	Y+1, r18	; 0x01
    997e:	3a 83       	std	Y+2, r19	; 0x02
    9980:	64 2f       	mov	r22, r20
    9982:	0e 94 25 46 	call	0x8c4a	; 0x8c4a <_Z21avr_eeprom_write_bytejh>
			g_messages_text[PATTERN_TEXT][0] = '\0';
			avr_eeprom_write_byte(Pattern_text, 0);

			uint8_t *v = (uint8_t*)EEPROM_DTMF_UNLOCK_CODE_DEFAULT;
			i = UnlockCode;
			for(j = 0; j < strlen(EEPROM_DTMF_UNLOCK_CODE_DEFAULT); j++)
    9986:	8b 81       	ldd	r24, Y+3	; 0x03
    9988:	9c 81       	ldd	r25, Y+4	; 0x04
    998a:	01 96       	adiw	r24, 0x01	; 1
    998c:	8b 83       	std	Y+3, r24	; 0x03
    998e:	9c 83       	std	Y+4, r25	; 0x04
    9990:	d9 cf       	rjmp	.-78     	; 0x9944 <_ZN13EepromManager20initializeEEPROMVarsEv+0xfa>
			{
				g_unlockCode[j] = *v;
				avr_eeprom_write_byte(i++, *v++);
			}

			avr_eeprom_write_byte(i, 0);
    9992:	89 81       	ldd	r24, Y+1	; 0x01
    9994:	9a 81       	ldd	r25, Y+2	; 0x02
    9996:	60 e0       	ldi	r22, 0x00	; 0
    9998:	0e 94 25 46 	call	0x8c4a	; 0x8c4a <_Z21avr_eeprom_write_bytejh>
			g_unlockCode[j] = '\0';
    999c:	8b 81       	ldd	r24, Y+3	; 0x03
    999e:	9c 81       	ldd	r25, Y+4	; 0x04
    99a0:	85 54       	subi	r24, 0x45	; 69
    99a2:	98 4b       	sbci	r25, 0xB8	; 184
    99a4:	fc 01       	movw	r30, r24
    99a6:	10 82       	st	Z, r1
			
			g_80m_frequency = EEPROM_TX_80M_FREQUENCY_DEFAULT;
    99a8:	80 e2       	ldi	r24, 0x20	; 32
    99aa:	94 e0       	ldi	r25, 0x04	; 4
    99ac:	a6 e3       	ldi	r26, 0x36	; 54
    99ae:	b0 e0       	ldi	r27, 0x00	; 0
    99b0:	80 93 34 40 	sts	0x4034, r24	; 0x804034 <g_80m_frequency>
    99b4:	90 93 35 40 	sts	0x4035, r25	; 0x804035 <g_80m_frequency+0x1>
    99b8:	a0 93 36 40 	sts	0x4036, r26	; 0x804036 <g_80m_frequency+0x2>
    99bc:	b0 93 37 40 	sts	0x4037, r27	; 0x804037 <g_80m_frequency+0x3>
			avr_eeprom_write_dword(Frequency, g_80m_frequency);
    99c0:	80 91 34 40 	lds	r24, 0x4034	; 0x804034 <g_80m_frequency>
    99c4:	90 91 35 40 	lds	r25, 0x4035	; 0x804035 <g_80m_frequency+0x1>
    99c8:	a0 91 36 40 	lds	r26, 0x4036	; 0x804036 <g_80m_frequency+0x2>
    99cc:	b0 91 37 40 	lds	r27, 0x4037	; 0x804037 <g_80m_frequency+0x3>
    99d0:	ac 01       	movw	r20, r24
    99d2:	bd 01       	movw	r22, r26
    99d4:	80 e4       	ldi	r24, 0x40	; 64
    99d6:	90 e0       	ldi	r25, 0x00	; 0
    99d8:	0e 94 87 46 	call	0x8d0e	; 0x8d0e <_Z22avr_eeprom_write_dwordjm>

			g_rtty_offset = EEPROM_RTTY_OFFSET_FREQUENCY_DEFAULT;
    99dc:	8a ea       	ldi	r24, 0xAA	; 170
    99de:	90 e0       	ldi	r25, 0x00	; 0
    99e0:	a0 e0       	ldi	r26, 0x00	; 0
    99e2:	b0 e0       	ldi	r27, 0x00	; 0
    99e4:	80 93 3a 40 	sts	0x403A, r24	; 0x80403a <g_rtty_offset>
    99e8:	90 93 3b 40 	sts	0x403B, r25	; 0x80403b <g_rtty_offset+0x1>
    99ec:	a0 93 3c 40 	sts	0x403C, r26	; 0x80403c <g_rtty_offset+0x2>
    99f0:	b0 93 3d 40 	sts	0x403D, r27	; 0x80403d <g_rtty_offset+0x3>
			avr_eeprom_write_dword(Frequency, g_80m_frequency);
    99f4:	80 91 34 40 	lds	r24, 0x4034	; 0x804034 <g_80m_frequency>
    99f8:	90 91 35 40 	lds	r25, 0x4035	; 0x804035 <g_80m_frequency+0x1>
    99fc:	a0 91 36 40 	lds	r26, 0x4036	; 0x804036 <g_80m_frequency+0x2>
    9a00:	b0 91 37 40 	lds	r27, 0x4037	; 0x804037 <g_80m_frequency+0x3>
    9a04:	ac 01       	movw	r20, r24
    9a06:	bd 01       	movw	r22, r26
    9a08:	80 e4       	ldi	r24, 0x40	; 64
    9a0a:	90 e0       	ldi	r25, 0x00	; 0
    9a0c:	0e 94 87 46 	call	0x8d0e	; 0x8d0e <_Z22avr_eeprom_write_dwordjm>

			g_80m_power_level_mW = EEPROM_TX_80M_POWER_MW_DEFAULT;
    9a10:	84 ef       	ldi	r24, 0xF4	; 244
    9a12:	91 e0       	ldi	r25, 0x01	; 1
    9a14:	80 93 38 40 	sts	0x4038, r24	; 0x804038 <g_80m_power_level_mW>
    9a18:	90 93 39 40 	sts	0x4039, r25	; 0x804039 <g_80m_power_level_mW+0x1>
			avr_eeprom_write_dword(RF_Power, g_80m_power_level_mW);
    9a1c:	80 91 38 40 	lds	r24, 0x4038	; 0x804038 <g_80m_power_level_mW>
    9a20:	90 91 39 40 	lds	r25, 0x4039	; 0x804039 <g_80m_power_level_mW+0x1>
    9a24:	cc 01       	movw	r24, r24
    9a26:	a0 e0       	ldi	r26, 0x00	; 0
    9a28:	b0 e0       	ldi	r27, 0x00	; 0
    9a2a:	ac 01       	movw	r20, r24
    9a2c:	bd 01       	movw	r22, r26
    9a2e:	88 e4       	ldi	r24, 0x48	; 72
    9a30:	90 e0       	ldi	r25, 0x00	; 0
    9a32:	0e 94 87 46 	call	0x8d0e	; 0x8d0e <_Z22avr_eeprom_write_dwordjm>
			
			g_pattern_codespeed = EEPROM_PATTERN_CODE_SPEED_DEFAULT;
    9a36:	88 e0       	ldi	r24, 0x08	; 8
    9a38:	80 93 0c 40 	sts	0x400C, r24	; 0x80400c <g_pattern_codespeed>
			avr_eeprom_write_byte(Pattern_Code_Speed, g_pattern_codespeed);
    9a3c:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    9a40:	68 2f       	mov	r22, r24
    9a42:	8a e4       	ldi	r24, 0x4A	; 74
    9a44:	90 e0       	ldi	r25, 0x00	; 0
    9a46:	0e 94 25 46 	call	0x8c4a	; 0x8c4a <_Z21avr_eeprom_write_bytejh>
			
			g_off_air_seconds = EEPROM_OFF_AIR_TIME_DEFAULT;
    9a4a:	80 ef       	ldi	r24, 0xF0	; 240
    9a4c:	90 e0       	ldi	r25, 0x00	; 0
    9a4e:	80 93 0f 40 	sts	0x400F, r24	; 0x80400f <g_off_air_seconds>
    9a52:	90 93 10 40 	sts	0x4010, r25	; 0x804010 <g_off_air_seconds+0x1>
			avr_eeprom_write_word(Off_Air_Seconds, g_off_air_seconds);
    9a56:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_off_air_seconds>
    9a5a:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    9a5e:	bc 01       	movw	r22, r24
    9a60:	8b e4       	ldi	r24, 0x4B	; 75
    9a62:	90 e0       	ldi	r25, 0x00	; 0
    9a64:	0e 94 54 46 	call	0x8ca8	; 0x8ca8 <_Z21avr_eeprom_write_wordjj>
			
			g_on_air_seconds = EEPROM_ON_AIR_TIME_DEFAULT;
    9a68:	8c e3       	ldi	r24, 0x3C	; 60
    9a6a:	90 e0       	ldi	r25, 0x00	; 0
    9a6c:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_on_air_seconds>
    9a70:	90 93 0e 40 	sts	0x400E, r25	; 0x80400e <g_on_air_seconds+0x1>
			avr_eeprom_write_word(On_Air_Seconds, g_on_air_seconds);
    9a74:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    9a78:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    9a7c:	bc 01       	movw	r22, r24
    9a7e:	8d e4       	ldi	r24, 0x4D	; 77
    9a80:	90 e0       	ldi	r25, 0x00	; 0
    9a82:	0e 94 54 46 	call	0x8ca8	; 0x8ca8 <_Z21avr_eeprom_write_wordjj>
			
			g_ID_period_seconds = EEPROM_ID_TIME_INTERVAL_DEFAULT;
    9a86:	8c e2       	ldi	r24, 0x2C	; 44
    9a88:	91 e0       	ldi	r25, 0x01	; 1
    9a8a:	80 93 11 40 	sts	0x4011, r24	; 0x804011 <g_ID_period_seconds>
    9a8e:	90 93 12 40 	sts	0x4012, r25	; 0x804012 <g_ID_period_seconds+0x1>
			avr_eeprom_write_word(ID_Period_Seconds, g_ID_period_seconds);
    9a92:	80 91 11 40 	lds	r24, 0x4011	; 0x804011 <g_ID_period_seconds>
    9a96:	90 91 12 40 	lds	r25, 0x4012	; 0x804012 <g_ID_period_seconds+0x1>
    9a9a:	bc 01       	movw	r22, r24
    9a9c:	8f e4       	ldi	r24, 0x4F	; 79
    9a9e:	90 e0       	ldi	r25, 0x00	; 0
    9aa0:	0e 94 54 46 	call	0x8ca8	; 0x8ca8 <_Z21avr_eeprom_write_wordjj>
			
			g_intra_cycle_delay_time = EEPROM_INTRA_CYCLE_DELAY_TIME_DEFAULT;
    9aa4:	10 92 98 47 	sts	0x4798, r1	; 0x804798 <g_intra_cycle_delay_time>
    9aa8:	10 92 99 47 	sts	0x4799, r1	; 0x804799 <g_intra_cycle_delay_time+0x1>
			avr_eeprom_write_word(Intra_Cycle_Delay_Seconds, g_intra_cycle_delay_time);
    9aac:	80 91 98 47 	lds	r24, 0x4798	; 0x804798 <g_intra_cycle_delay_time>
    9ab0:	90 91 99 47 	lds	r25, 0x4799	; 0x804799 <g_intra_cycle_delay_time+0x1>
    9ab4:	bc 01       	movw	r22, r24
    9ab6:	81 e5       	ldi	r24, 0x51	; 81
    9ab8:	90 e0       	ldi	r25, 0x00	; 0
    9aba:	0e 94 54 46 	call	0x8ca8	; 0x8ca8 <_Z21avr_eeprom_write_wordjj>

			/* Done */

			avr_eeprom_write_word(0, EEPROM_INITIALIZED_FLAG);
    9abe:	6e ec       	ldi	r22, 0xCE	; 206
    9ac0:	70 e0       	ldi	r23, 0x00	; 0
    9ac2:	80 e0       	ldi	r24, 0x00	; 0
    9ac4:	90 e0       	ldi	r25, 0x00	; 0
    9ac6:	0e 94 54 46 	call	0x8ca8	; 0x8ca8 <_Z21avr_eeprom_write_wordjj>
		}
		
		return(err);
    9aca:	8f 81       	ldd	r24, Y+7	; 0x07
	}
    9acc:	2b 96       	adiw	r28, 0x0b	; 11
    9ace:	cd bf       	out	0x3d, r28	; 61
    9ad0:	de bf       	out	0x3e, r29	; 62
    9ad2:	df 91       	pop	r29
    9ad4:	cf 91       	pop	r28
    9ad6:	08 95       	ret

00009ad8 <_ZN8GoertzelC1Eff>:
		highValueCount++;
	}

	Q2 = Q1;
	Q1 = Q0;
}
    9ad8:	0f 93       	push	r16
    9ada:	1f 93       	push	r17
    9adc:	cf 93       	push	r28
    9ade:	df 93       	push	r29
    9ae0:	cd b7       	in	r28, 0x3d	; 61
    9ae2:	de b7       	in	r29, 0x3e	; 62
    9ae4:	62 97       	sbiw	r28, 0x12	; 18
    9ae6:	cd bf       	out	0x3d, r28	; 61
    9ae8:	de bf       	out	0x3e, r29	; 62
    9aea:	89 87       	std	Y+9, r24	; 0x09
    9aec:	9a 87       	std	Y+10, r25	; 0x0a
    9aee:	4b 87       	std	Y+11, r20	; 0x0b
    9af0:	5c 87       	std	Y+12, r21	; 0x0c
    9af2:	6d 87       	std	Y+13, r22	; 0x0d
    9af4:	7e 87       	std	Y+14, r23	; 0x0e
    9af6:	0f 87       	std	Y+15, r16	; 0x0f
    9af8:	18 8b       	std	Y+16, r17	; 0x10
    9afa:	29 8b       	std	Y+17, r18	; 0x11
    9afc:	3a 8b       	std	Y+18, r19	; 0x12
    9afe:	8f 85       	ldd	r24, Y+15	; 0x0f
    9b00:	98 89       	ldd	r25, Y+16	; 0x10
    9b02:	a9 89       	ldd	r26, Y+17	; 0x11
    9b04:	ba 89       	ldd	r27, Y+18	; 0x12
    9b06:	80 93 d8 47 	sts	0x47D8, r24	; 0x8047d8 <_SAMPLING_FREQUENCY>
    9b0a:	90 93 d9 47 	sts	0x47D9, r25	; 0x8047d9 <_SAMPLING_FREQUENCY+0x1>
    9b0e:	a0 93 da 47 	sts	0x47DA, r26	; 0x8047da <_SAMPLING_FREQUENCY+0x2>
    9b12:	b0 93 db 47 	sts	0x47DB, r27	; 0x8047db <_SAMPLING_FREQUENCY+0x3>
    9b16:	8b 85       	ldd	r24, Y+11	; 0x0b
    9b18:	9c 85       	ldd	r25, Y+12	; 0x0c
    9b1a:	ad 85       	ldd	r26, Y+13	; 0x0d
    9b1c:	be 85       	ldd	r27, Y+14	; 0x0e
    9b1e:	89 83       	std	Y+1, r24	; 0x01
    9b20:	9a 83       	std	Y+2, r25	; 0x02
    9b22:	ab 83       	std	Y+3, r26	; 0x03
    9b24:	bc 83       	std	Y+4, r27	; 0x04
    9b26:	84 e6       	ldi	r24, 0x64	; 100
    9b28:	90 e0       	ldi	r25, 0x00	; 0
    9b2a:	8d 83       	std	Y+5, r24	; 0x05
    9b2c:	9e 83       	std	Y+6, r25	; 0x06
    9b2e:	81 ed       	ldi	r24, 0xD1	; 209
    9b30:	90 e0       	ldi	r25, 0x00	; 0
    9b32:	8f 83       	std	Y+7, r24	; 0x07
    9b34:	98 87       	std	Y+8, r25	; 0x08
    9b36:	8f 81       	ldd	r24, Y+7	; 0x07
    9b38:	98 85       	ldd	r25, Y+8	; 0x08
    9b3a:	09 2e       	mov	r0, r25
    9b3c:	00 0c       	add	r0, r0
    9b3e:	aa 0b       	sbc	r26, r26
    9b40:	bb 0b       	sbc	r27, r27
    9b42:	bc 01       	movw	r22, r24
    9b44:	cd 01       	movw	r24, r26
    9b46:	0e 94 55 78 	call	0xf0aa	; 0xf0aa <__floatsisf>
    9b4a:	dc 01       	movw	r26, r24
    9b4c:	cb 01       	movw	r24, r22
    9b4e:	29 81       	ldd	r18, Y+1	; 0x01
    9b50:	3a 81       	ldd	r19, Y+2	; 0x02
    9b52:	4b 81       	ldd	r20, Y+3	; 0x03
    9b54:	5c 81       	ldd	r21, Y+4	; 0x04
    9b56:	bc 01       	movw	r22, r24
    9b58:	cd 01       	movw	r24, r26
    9b5a:	0e 94 a6 77 	call	0xef4c	; 0xef4c <__cmpsf2>
    9b5e:	88 23       	and	r24, r24
    9b60:	6c f4       	brge	.+26     	; 0x9b7c <_ZN8GoertzelC1Eff+0xa4>
    9b62:	8f 81       	ldd	r24, Y+7	; 0x07
    9b64:	98 85       	ldd	r25, Y+8	; 0x08
    9b66:	09 2e       	mov	r0, r25
    9b68:	00 0c       	add	r0, r0
    9b6a:	aa 0b       	sbc	r26, r26
    9b6c:	bb 0b       	sbc	r27, r27
    9b6e:	bc 01       	movw	r22, r24
    9b70:	cd 01       	movw	r24, r26
    9b72:	0e 94 55 78 	call	0xf0aa	; 0xf0aa <__floatsisf>
    9b76:	dc 01       	movw	r26, r24
    9b78:	cb 01       	movw	r24, r22
    9b7a:	27 c0       	rjmp	.+78     	; 0x9bca <_ZN8GoertzelC1Eff+0xf2>
    9b7c:	8d 81       	ldd	r24, Y+5	; 0x05
    9b7e:	9e 81       	ldd	r25, Y+6	; 0x06
    9b80:	09 2e       	mov	r0, r25
    9b82:	00 0c       	add	r0, r0
    9b84:	aa 0b       	sbc	r26, r26
    9b86:	bb 0b       	sbc	r27, r27
    9b88:	bc 01       	movw	r22, r24
    9b8a:	cd 01       	movw	r24, r26
    9b8c:	0e 94 55 78 	call	0xf0aa	; 0xf0aa <__floatsisf>
    9b90:	dc 01       	movw	r26, r24
    9b92:	cb 01       	movw	r24, r22
    9b94:	29 81       	ldd	r18, Y+1	; 0x01
    9b96:	3a 81       	ldd	r19, Y+2	; 0x02
    9b98:	4b 81       	ldd	r20, Y+3	; 0x03
    9b9a:	5c 81       	ldd	r21, Y+4	; 0x04
    9b9c:	bc 01       	movw	r22, r24
    9b9e:	cd 01       	movw	r24, r26
    9ba0:	0e 94 46 79 	call	0xf28c	; 0xf28c <__gesf2>
    9ba4:	18 16       	cp	r1, r24
    9ba6:	6c f4       	brge	.+26     	; 0x9bc2 <_ZN8GoertzelC1Eff+0xea>
    9ba8:	8d 81       	ldd	r24, Y+5	; 0x05
    9baa:	9e 81       	ldd	r25, Y+6	; 0x06
    9bac:	09 2e       	mov	r0, r25
    9bae:	00 0c       	add	r0, r0
    9bb0:	aa 0b       	sbc	r26, r26
    9bb2:	bb 0b       	sbc	r27, r27
    9bb4:	bc 01       	movw	r22, r24
    9bb6:	cd 01       	movw	r24, r26
    9bb8:	0e 94 55 78 	call	0xf0aa	; 0xf0aa <__floatsisf>
    9bbc:	dc 01       	movw	r26, r24
    9bbe:	cb 01       	movw	r24, r22
    9bc0:	04 c0       	rjmp	.+8      	; 0x9bca <_ZN8GoertzelC1Eff+0xf2>
    9bc2:	89 81       	ldd	r24, Y+1	; 0x01
    9bc4:	9a 81       	ldd	r25, Y+2	; 0x02
    9bc6:	ab 81       	ldd	r26, Y+3	; 0x03
    9bc8:	bc 81       	ldd	r27, Y+4	; 0x04
    9bca:	bc 01       	movw	r22, r24
    9bcc:	cd 01       	movw	r24, r26
    9bce:	0e 94 1d 78 	call	0xf03a	; 0xf03a <__fixsfsi>
    9bd2:	dc 01       	movw	r26, r24
    9bd4:	cb 01       	movw	r24, r22
    9bd6:	80 93 dc 47 	sts	0x47DC, r24	; 0x8047dc <_N>
    9bda:	90 93 dd 47 	sts	0x47DD, r25	; 0x8047dd <_N+0x1>
    9bde:	80 91 dc 47 	lds	r24, 0x47DC	; 0x8047dc <_N>
    9be2:	90 91 dd 47 	lds	r25, 0x47DD	; 0x8047dd <_N+0x1>
    9be6:	88 0f       	add	r24, r24
    9be8:	99 1f       	adc	r25, r25
    9bea:	0e 94 74 7a 	call	0xf4e8	; 0xf4e8 <malloc>
    9bee:	80 93 e1 47 	sts	0x47E1, r24	; 0x8047e1 <testData>
    9bf2:	90 93 e2 47 	sts	0x47E2, r25	; 0x8047e2 <testData+0x1>
    9bf6:	00 00       	nop
    9bf8:	62 96       	adiw	r28, 0x12	; 18
    9bfa:	cd bf       	out	0x3d, r28	; 61
    9bfc:	de bf       	out	0x3e, r29	; 62
    9bfe:	df 91       	pop	r29
    9c00:	cf 91       	pop	r28
    9c02:	1f 91       	pop	r17
    9c04:	0f 91       	pop	r16
    9c06:	08 95       	ret

00009c08 <_ZN8GoertzelD1Ev>:
    9c08:	cf 93       	push	r28
    9c0a:	df 93       	push	r29
    9c0c:	00 d0       	rcall	.+0      	; 0x9c0e <_ZN8GoertzelD1Ev+0x6>
    9c0e:	cd b7       	in	r28, 0x3d	; 61
    9c10:	de b7       	in	r29, 0x3e	; 62
    9c12:	89 83       	std	Y+1, r24	; 0x01
    9c14:	9a 83       	std	Y+2, r25	; 0x02
    9c16:	80 91 e1 47 	lds	r24, 0x47E1	; 0x8047e1 <testData>
    9c1a:	90 91 e2 47 	lds	r25, 0x47E2	; 0x8047e2 <testData+0x1>
    9c1e:	0e 94 0c 7b 	call	0xf618	; 0xf618 <free>
    9c22:	00 00       	nop
    9c24:	0f 90       	pop	r0
    9c26:	0f 90       	pop	r0
    9c28:	df 91       	pop	r29
    9c2a:	cf 91       	pop	r28
    9c2c:	08 95       	ret

00009c2e <_ZN8Goertzel9DataPointEi>:

bool Goertzel::DataPoint(int data)
{
    9c2e:	cf 93       	push	r28
    9c30:	df 93       	push	r29
    9c32:	00 d0       	rcall	.+0      	; 0x9c34 <_ZN8Goertzel9DataPointEi+0x6>
    9c34:	00 d0       	rcall	.+0      	; 0x9c36 <_ZN8Goertzel9DataPointEi+0x8>
    9c36:	cd b7       	in	r28, 0x3d	; 61
    9c38:	de b7       	in	r29, 0x3e	; 62
    9c3a:	89 83       	std	Y+1, r24	; 0x01
    9c3c:	9a 83       	std	Y+2, r25	; 0x02
    9c3e:	6b 83       	std	Y+3, r22	; 0x03
    9c40:	7c 83       	std	Y+4, r23	; 0x04
	if(_samplesReady)
    9c42:	80 91 e0 47 	lds	r24, 0x47E0	; 0x8047e0 <_samplesReady>
    9c46:	88 23       	and	r24, r24
    9c48:	19 f0       	breq	.+6      	; 0x9c50 <_ZN8Goertzel9DataPointEi+0x22>
	{
		return(_samplesReady);
    9c4a:	80 91 e0 47 	lds	r24, 0x47E0	; 0x8047e0 <_samplesReady>
    9c4e:	32 c0       	rjmp	.+100    	; 0x9cb4 <_ZN8Goertzel9DataPointEi+0x86>
	}

	testData[_index] = data;
    9c50:	20 91 e1 47 	lds	r18, 0x47E1	; 0x8047e1 <testData>
    9c54:	30 91 e2 47 	lds	r19, 0x47E2	; 0x8047e2 <testData+0x1>
    9c58:	80 91 de 47 	lds	r24, 0x47DE	; 0x8047de <_index>
    9c5c:	90 91 df 47 	lds	r25, 0x47DF	; 0x8047df <_index+0x1>
    9c60:	88 0f       	add	r24, r24
    9c62:	99 1f       	adc	r25, r25
    9c64:	82 0f       	add	r24, r18
    9c66:	93 1f       	adc	r25, r19
    9c68:	2b 81       	ldd	r18, Y+3	; 0x03
    9c6a:	3c 81       	ldd	r19, Y+4	; 0x04
    9c6c:	fc 01       	movw	r30, r24
    9c6e:	20 83       	st	Z, r18
    9c70:	31 83       	std	Z+1, r19	; 0x01
	_index++;
    9c72:	80 91 de 47 	lds	r24, 0x47DE	; 0x8047de <_index>
    9c76:	90 91 df 47 	lds	r25, 0x47DF	; 0x8047df <_index+0x1>
    9c7a:	01 96       	adiw	r24, 0x01	; 1
    9c7c:	80 93 de 47 	sts	0x47DE, r24	; 0x8047de <_index>
    9c80:	90 93 df 47 	sts	0x47DF, r25	; 0x8047df <_index+0x1>
	if(_index >= _N)
    9c84:	20 91 de 47 	lds	r18, 0x47DE	; 0x8047de <_index>
    9c88:	30 91 df 47 	lds	r19, 0x47DF	; 0x8047df <_index+0x1>
    9c8c:	80 91 dc 47 	lds	r24, 0x47DC	; 0x8047dc <_N>
    9c90:	90 91 dd 47 	lds	r25, 0x47DD	; 0x8047dd <_N+0x1>
    9c94:	41 e0       	ldi	r20, 0x01	; 1
    9c96:	28 17       	cp	r18, r24
    9c98:	39 07       	cpc	r19, r25
    9c9a:	0c f4       	brge	.+2      	; 0x9c9e <_ZN8Goertzel9DataPointEi+0x70>
    9c9c:	40 e0       	ldi	r20, 0x00	; 0
    9c9e:	44 23       	and	r20, r20
    9ca0:	39 f0       	breq	.+14     	; 0x9cb0 <_ZN8Goertzel9DataPointEi+0x82>
	{
		_index = 0;
    9ca2:	10 92 de 47 	sts	0x47DE, r1	; 0x8047de <_index>
    9ca6:	10 92 df 47 	sts	0x47DF, r1	; 0x8047df <_index+0x1>
		_samplesReady = true;
    9caa:	81 e0       	ldi	r24, 0x01	; 1
    9cac:	80 93 e0 47 	sts	0x47E0, r24	; 0x8047e0 <_samplesReady>
	}

	return(_samplesReady);
    9cb0:	80 91 e0 47 	lds	r24, 0x47E0	; 0x8047e0 <_samplesReady>
}
    9cb4:	24 96       	adiw	r28, 0x04	; 4
    9cb6:	cd bf       	out	0x3d, r28	; 61
    9cb8:	de bf       	out	0x3e, r29	; 62
    9cba:	df 91       	pop	r29
    9cbc:	cf 91       	pop	r28
    9cbe:	08 95       	ret

00009cc0 <PORTA_set_pin_level>:
 * \param[in] pin       The pin number within port
 * \param[in] level true  = Pin level set to "high" state
 *                  false = Pin level set to "low" state
 */
static inline void PORTA_set_pin_level(const uint8_t pin, const bool level)
{
    9cc0:	cf 93       	push	r28
    9cc2:	df 93       	push	r29
    9cc4:	00 d0       	rcall	.+0      	; 0x9cc6 <PORTA_set_pin_level+0x6>
    9cc6:	cd b7       	in	r28, 0x3d	; 61
    9cc8:	de b7       	in	r29, 0x3e	; 62
    9cca:	89 83       	std	Y+1, r24	; 0x01
    9ccc:	6a 83       	std	Y+2, r22	; 0x02
	if (level == true) {
    9cce:	8a 81       	ldd	r24, Y+2	; 0x02
    9cd0:	88 23       	and	r24, r24
    9cd2:	a9 f0       	breq	.+42     	; 0x9cfe <PORTA_set_pin_level+0x3e>
		VPORTA.OUT |= (1 << pin);
    9cd4:	20 e0       	ldi	r18, 0x00	; 0
    9cd6:	30 e0       	ldi	r19, 0x00	; 0
    9cd8:	80 e0       	ldi	r24, 0x00	; 0
    9cda:	90 e0       	ldi	r25, 0x00	; 0
    9cdc:	fc 01       	movw	r30, r24
    9cde:	81 81       	ldd	r24, Z+1	; 0x01
    9ce0:	68 2f       	mov	r22, r24
    9ce2:	89 81       	ldd	r24, Y+1	; 0x01
    9ce4:	48 2f       	mov	r20, r24
    9ce6:	50 e0       	ldi	r21, 0x00	; 0
    9ce8:	81 e0       	ldi	r24, 0x01	; 1
    9cea:	90 e0       	ldi	r25, 0x00	; 0
    9cec:	02 c0       	rjmp	.+4      	; 0x9cf2 <PORTA_set_pin_level+0x32>
    9cee:	88 0f       	add	r24, r24
    9cf0:	99 1f       	adc	r25, r25
    9cf2:	4a 95       	dec	r20
    9cf4:	e2 f7       	brpl	.-8      	; 0x9cee <PORTA_set_pin_level+0x2e>
    9cf6:	86 2b       	or	r24, r22
    9cf8:	f9 01       	movw	r30, r18
    9cfa:	81 83       	std	Z+1, r24	; 0x01
	} else {
		VPORTA.OUT &= ~(1 << pin);
	}
}
    9cfc:	15 c0       	rjmp	.+42     	; 0x9d28 <PORTA_set_pin_level+0x68>
static inline void PORTA_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTA.OUT |= (1 << pin);
	} else {
		VPORTA.OUT &= ~(1 << pin);
    9cfe:	20 e0       	ldi	r18, 0x00	; 0
    9d00:	30 e0       	ldi	r19, 0x00	; 0
    9d02:	80 e0       	ldi	r24, 0x00	; 0
    9d04:	90 e0       	ldi	r25, 0x00	; 0
    9d06:	fc 01       	movw	r30, r24
    9d08:	81 81       	ldd	r24, Z+1	; 0x01
    9d0a:	68 2f       	mov	r22, r24
    9d0c:	89 81       	ldd	r24, Y+1	; 0x01
    9d0e:	48 2f       	mov	r20, r24
    9d10:	50 e0       	ldi	r21, 0x00	; 0
    9d12:	81 e0       	ldi	r24, 0x01	; 1
    9d14:	90 e0       	ldi	r25, 0x00	; 0
    9d16:	02 c0       	rjmp	.+4      	; 0x9d1c <PORTA_set_pin_level+0x5c>
    9d18:	88 0f       	add	r24, r24
    9d1a:	99 1f       	adc	r25, r25
    9d1c:	4a 95       	dec	r20
    9d1e:	e2 f7       	brpl	.-8      	; 0x9d18 <PORTA_set_pin_level+0x58>
    9d20:	80 95       	com	r24
    9d22:	86 23       	and	r24, r22
    9d24:	f9 01       	movw	r30, r18
    9d26:	81 83       	std	Z+1, r24	; 0x01
	}
}
    9d28:	00 00       	nop
    9d2a:	0f 90       	pop	r0
    9d2c:	0f 90       	pop	r0
    9d2e:	df 91       	pop	r29
    9d30:	cf 91       	pop	r28
    9d32:	08 95       	ret

00009d34 <_Z10wifi_powerb>:
#define WIFI_RESET_gc (1 << 6)  /* WiFi reset port pin on PORTA*/
#define WIFI_POWER_gc (1 << 5)  /* WiFi enable power port pin on PORTA */
#define WIFI_MODULE_DETECT_gc (1 << 7) /* WiFi module detect pin on PORTD */

void wifi_power(bool state)
{
    9d34:	cf 93       	push	r28
    9d36:	df 93       	push	r29
    9d38:	1f 92       	push	r1
    9d3a:	cd b7       	in	r28, 0x3d	; 61
    9d3c:	de b7       	in	r29, 0x3e	; 62
    9d3e:	89 83       	std	Y+1, r24	; 0x01
	if(state == ON)
    9d40:	89 81       	ldd	r24, Y+1	; 0x01
    9d42:	88 23       	and	r24, r24
    9d44:	29 f0       	breq	.+10     	; 0x9d50 <_Z10wifi_powerb+0x1c>
	{
		PORTA_set_pin_level(WIFI_ENABLE, HIGH);
    9d46:	61 e0       	ldi	r22, 0x01	; 1
    9d48:	85 e0       	ldi	r24, 0x05	; 5
    9d4a:	0e 94 60 4e 	call	0x9cc0	; 0x9cc0 <PORTA_set_pin_level>
	}
	else
	{
		PORTA_set_pin_level(WIFI_ENABLE, LOW);
	}
}
    9d4e:	04 c0       	rjmp	.+8      	; 0x9d58 <_Z10wifi_powerb+0x24>
	{
		PORTA_set_pin_level(WIFI_ENABLE, HIGH);
	}
	else
	{
		PORTA_set_pin_level(WIFI_ENABLE, LOW);
    9d50:	60 e0       	ldi	r22, 0x00	; 0
    9d52:	85 e0       	ldi	r24, 0x05	; 5
    9d54:	0e 94 60 4e 	call	0x9cc0	; 0x9cc0 <PORTA_set_pin_level>
	}
}
    9d58:	00 00       	nop
    9d5a:	0f 90       	pop	r0
    9d5c:	df 91       	pop	r29
    9d5e:	cf 91       	pop	r28
    9d60:	08 95       	ret

00009d62 <_Z10wifi_resetb>:

void wifi_reset(bool state)
{
    9d62:	cf 93       	push	r28
    9d64:	df 93       	push	r29
    9d66:	1f 92       	push	r1
    9d68:	cd b7       	in	r28, 0x3d	; 61
    9d6a:	de b7       	in	r29, 0x3e	; 62
    9d6c:	89 83       	std	Y+1, r24	; 0x01
	if(state == ON)
    9d6e:	89 81       	ldd	r24, Y+1	; 0x01
    9d70:	88 23       	and	r24, r24
    9d72:	29 f0       	breq	.+10     	; 0x9d7e <_Z10wifi_resetb+0x1c>
	{
		PORTA_set_pin_level(WIFI_RESET, LOW);
    9d74:	60 e0       	ldi	r22, 0x00	; 0
    9d76:	86 e0       	ldi	r24, 0x06	; 6
    9d78:	0e 94 60 4e 	call	0x9cc0	; 0x9cc0 <PORTA_set_pin_level>
	}
	else
	{
		PORTA_set_pin_level(WIFI_RESET, HIGH);
	}
}
    9d7c:	04 c0       	rjmp	.+8      	; 0x9d86 <_Z10wifi_resetb+0x24>
	{
		PORTA_set_pin_level(WIFI_RESET, LOW);
	}
	else
	{
		PORTA_set_pin_level(WIFI_RESET, HIGH);
    9d7e:	61 e0       	ldi	r22, 0x01	; 1
    9d80:	86 e0       	ldi	r24, 0x06	; 6
    9d82:	0e 94 60 4e 	call	0x9cc0	; 0x9cc0 <PORTA_set_pin_level>
	}
}
    9d86:	00 00       	nop
    9d88:	0f 90       	pop	r0
    9d8a:	df 91       	pop	r29
    9d8c:	cf 91       	pop	r28
    9d8e:	08 95       	ret

00009d90 <_Z11wifiPresentv>:

bool wifiPresent(void)
{
    9d90:	cf 93       	push	r28
    9d92:	df 93       	push	r29
    9d94:	cd b7       	in	r28, 0x3d	; 61
    9d96:	de b7       	in	r29, 0x3e	; 62
	return(VPORTD.IN & WIFI_MODULE_DETECT_gc);
    9d98:	8c e0       	ldi	r24, 0x0C	; 12
    9d9a:	90 e0       	ldi	r25, 0x00	; 0
    9d9c:	fc 01       	movw	r30, r24
    9d9e:	82 81       	ldd	r24, Z+2	; 0x02
    9da0:	88 1f       	adc	r24, r24
    9da2:	88 27       	eor	r24, r24
    9da4:	88 1f       	adc	r24, r24
}
    9da6:	df 91       	pop	r29
    9da8:	cf 91       	pop	r28
    9daa:	08 95       	ret

00009dac <_Z11wifiEnabledv>:

bool wifiEnabled(void)
{
    9dac:	cf 93       	push	r28
    9dae:	df 93       	push	r29
    9db0:	cd b7       	in	r28, 0x3d	; 61
    9db2:	de b7       	in	r29, 0x3e	; 62
	if(!(PORTA.OUT & (1 << WIFI_ENABLE))) /* read output setting on power-enable line */
    9db4:	80 e0       	ldi	r24, 0x00	; 0
    9db6:	94 e0       	ldi	r25, 0x04	; 4
    9db8:	fc 01       	movw	r30, r24
    9dba:	84 81       	ldd	r24, Z+4	; 0x04
    9dbc:	88 2f       	mov	r24, r24
    9dbe:	90 e0       	ldi	r25, 0x00	; 0
    9dc0:	80 72       	andi	r24, 0x20	; 32
    9dc2:	99 27       	eor	r25, r25
    9dc4:	21 e0       	ldi	r18, 0x01	; 1
    9dc6:	89 2b       	or	r24, r25
    9dc8:	09 f0       	breq	.+2      	; 0x9dcc <_Z11wifiEnabledv+0x20>
    9dca:	20 e0       	ldi	r18, 0x00	; 0
    9dcc:	22 23       	and	r18, r18
    9dce:	11 f0       	breq	.+4      	; 0x9dd4 <_Z11wifiEnabledv+0x28>
	{
		return false;
    9dd0:	80 e0       	ldi	r24, 0x00	; 0
    9dd2:	11 c0       	rjmp	.+34     	; 0x9df6 <_Z11wifiEnabledv+0x4a>
	}
	
	if(!(PORTA.OUT & (1 << WIFI_RESET))) /* read output setting on reset line */
    9dd4:	80 e0       	ldi	r24, 0x00	; 0
    9dd6:	94 e0       	ldi	r25, 0x04	; 4
    9dd8:	fc 01       	movw	r30, r24
    9dda:	84 81       	ldd	r24, Z+4	; 0x04
    9ddc:	88 2f       	mov	r24, r24
    9dde:	90 e0       	ldi	r25, 0x00	; 0
    9de0:	80 74       	andi	r24, 0x40	; 64
    9de2:	99 27       	eor	r25, r25
    9de4:	21 e0       	ldi	r18, 0x01	; 1
    9de6:	89 2b       	or	r24, r25
    9de8:	09 f0       	breq	.+2      	; 0x9dec <_Z11wifiEnabledv+0x40>
    9dea:	20 e0       	ldi	r18, 0x00	; 0
    9dec:	22 23       	and	r18, r18
    9dee:	11 f0       	breq	.+4      	; 0x9df4 <_Z11wifiEnabledv+0x48>
	{
		return false;
    9df0:	80 e0       	ldi	r24, 0x00	; 0
    9df2:	01 c0       	rjmp	.+2      	; 0x9df6 <_Z11wifiEnabledv+0x4a>
	}

	return true;
    9df4:	81 e0       	ldi	r24, 0x01	; 1
}
    9df6:	df 91       	pop	r29
    9df8:	cf 91       	pop	r28
    9dfa:	08 95       	ret

00009dfc <PORTC_set_pin_pull_mode>:
	/* Set bus state idle */
	TWI1.MSTATUS = TWI_BUSSTATE_IDLE_gc;
	
	PORTB_set_pin_pull_mode(2, PORT_PULL_UP);
	PORTB_set_pin_pull_mode(3, PORT_PULL_UP);
}
    9dfc:	cf 93       	push	r28
    9dfe:	df 93       	push	r29
    9e00:	00 d0       	rcall	.+0      	; 0x9e02 <PORTC_set_pin_pull_mode+0x6>
    9e02:	00 d0       	rcall	.+0      	; 0x9e04 <PORTC_set_pin_pull_mode+0x8>
    9e04:	cd b7       	in	r28, 0x3d	; 61
    9e06:	de b7       	in	r29, 0x3e	; 62
    9e08:	8b 83       	std	Y+3, r24	; 0x03
    9e0a:	6c 83       	std	Y+4, r22	; 0x04
    9e0c:	8b 81       	ldd	r24, Y+3	; 0x03
    9e0e:	88 2f       	mov	r24, r24
    9e10:	90 e0       	ldi	r25, 0x00	; 0
    9e12:	80 5b       	subi	r24, 0xB0	; 176
    9e14:	9b 4f       	sbci	r25, 0xFB	; 251
    9e16:	89 83       	std	Y+1, r24	; 0x01
    9e18:	9a 83       	std	Y+2, r25	; 0x02
    9e1a:	8c 81       	ldd	r24, Y+4	; 0x04
    9e1c:	81 30       	cpi	r24, 0x01	; 1
    9e1e:	59 f4       	brne	.+22     	; 0x9e36 <PORTC_set_pin_pull_mode+0x3a>
    9e20:	89 81       	ldd	r24, Y+1	; 0x01
    9e22:	9a 81       	ldd	r25, Y+2	; 0x02
    9e24:	fc 01       	movw	r30, r24
    9e26:	80 81       	ld	r24, Z
    9e28:	28 2f       	mov	r18, r24
    9e2a:	28 60       	ori	r18, 0x08	; 8
    9e2c:	89 81       	ldd	r24, Y+1	; 0x01
    9e2e:	9a 81       	ldd	r25, Y+2	; 0x02
    9e30:	fc 01       	movw	r30, r24
    9e32:	20 83       	st	Z, r18
    9e34:	0d c0       	rjmp	.+26     	; 0x9e50 <PORTC_set_pin_pull_mode+0x54>
    9e36:	8c 81       	ldd	r24, Y+4	; 0x04
    9e38:	88 23       	and	r24, r24
    9e3a:	51 f4       	brne	.+20     	; 0x9e50 <PORTC_set_pin_pull_mode+0x54>
    9e3c:	89 81       	ldd	r24, Y+1	; 0x01
    9e3e:	9a 81       	ldd	r25, Y+2	; 0x02
    9e40:	fc 01       	movw	r30, r24
    9e42:	80 81       	ld	r24, Z
    9e44:	28 2f       	mov	r18, r24
    9e46:	27 7f       	andi	r18, 0xF7	; 247
    9e48:	89 81       	ldd	r24, Y+1	; 0x01
    9e4a:	9a 81       	ldd	r25, Y+2	; 0x02
    9e4c:	fc 01       	movw	r30, r24
    9e4e:	20 83       	st	Z, r18
    9e50:	00 00       	nop
    9e52:	24 96       	adiw	r28, 0x04	; 4
    9e54:	cd bf       	out	0x3d, r28	; 61
    9e56:	de bf       	out	0x3e, r29	; 62
    9e58:	df 91       	pop	r29
    9e5a:	cf 91       	pop	r28
    9e5c:	08 95       	ret

00009e5e <I2C_0_Init>:
    9e5e:	cf 93       	push	r28
    9e60:	df 93       	push	r29
    9e62:	cd b7       	in	r28, 0x3d	; 61
    9e64:	de b7       	in	r29, 0x3e	; 62
    9e66:	80 ee       	ldi	r24, 0xE0	; 224
    9e68:	95 e0       	ldi	r25, 0x05	; 5
    9e6a:	20 ee       	ldi	r18, 0xE0	; 224
    9e6c:	35 e0       	ldi	r19, 0x05	; 5
    9e6e:	f9 01       	movw	r30, r18
    9e70:	25 81       	ldd	r18, Z+5	; 0x05
    9e72:	2a 70       	andi	r18, 0x0A	; 10
    9e74:	fc 01       	movw	r30, r24
    9e76:	25 83       	std	Z+5, r18	; 0x05
    9e78:	80 ee       	ldi	r24, 0xE0	; 224
    9e7a:	95 e0       	ldi	r25, 0x05	; 5
    9e7c:	20 ee       	ldi	r18, 0xE0	; 224
    9e7e:	35 e0       	ldi	r19, 0x05	; 5
    9e80:	f9 01       	movw	r30, r18
    9e82:	25 81       	ldd	r18, Z+5	; 0x05
    9e84:	22 60       	ori	r18, 0x02	; 2
    9e86:	fc 01       	movw	r30, r24
    9e88:	25 83       	std	Z+5, r18	; 0x05
    9e8a:	80 e0       	ldi	r24, 0x00	; 0
    9e8c:	99 e0       	ldi	r25, 0x09	; 9
    9e8e:	23 e7       	ldi	r18, 0x73	; 115
    9e90:	fc 01       	movw	r30, r24
    9e92:	26 83       	std	Z+6, r18	; 0x06
    9e94:	80 e0       	ldi	r24, 0x00	; 0
    9e96:	99 e0       	ldi	r25, 0x09	; 9
    9e98:	21 e0       	ldi	r18, 0x01	; 1
    9e9a:	fc 01       	movw	r30, r24
    9e9c:	23 83       	std	Z+3, r18	; 0x03
    9e9e:	80 e0       	ldi	r24, 0x00	; 0
    9ea0:	99 e0       	ldi	r25, 0x09	; 9
    9ea2:	fc 01       	movw	r30, r24
    9ea4:	17 82       	std	Z+7, r1	; 0x07
    9ea6:	80 e0       	ldi	r24, 0x00	; 0
    9ea8:	99 e0       	ldi	r25, 0x09	; 9
    9eaa:	fc 01       	movw	r30, r24
    9eac:	10 86       	std	Z+8, r1	; 0x08
    9eae:	80 e0       	ldi	r24, 0x00	; 0
    9eb0:	99 e0       	ldi	r25, 0x09	; 9
    9eb2:	21 e0       	ldi	r18, 0x01	; 1
    9eb4:	fc 01       	movw	r30, r24
    9eb6:	25 83       	std	Z+5, r18	; 0x05
    9eb8:	61 e0       	ldi	r22, 0x01	; 1
    9eba:	82 e0       	ldi	r24, 0x02	; 2
    9ebc:	0e 94 fe 4e 	call	0x9dfc	; 0x9dfc <PORTC_set_pin_pull_mode>
    9ec0:	61 e0       	ldi	r22, 0x01	; 1
    9ec2:	83 e0       	ldi	r24, 0x03	; 3
    9ec4:	0e 94 fe 4e 	call	0x9dfc	; 0x9dfc <PORTC_set_pin_pull_mode>
    9ec8:	00 00       	nop
    9eca:	df 91       	pop	r29
    9ecc:	cf 91       	pop	r28
    9ece:	08 95       	ret

00009ed0 <_ZL11i2c_0_WaitWv>:
    9ed0:	cf 93       	push	r28
    9ed2:	df 93       	push	r29
    9ed4:	1f 92       	push	r1
    9ed6:	cd b7       	in	r28, 0x3d	; 61
    9ed8:	de b7       	in	r29, 0x3e	; 62
    9eda:	19 82       	std	Y+1, r1	; 0x01
    9edc:	8c e2       	ldi	r24, 0x2C	; 44
    9ede:	91 e0       	ldi	r25, 0x01	; 1
    9ee0:	80 93 26 40 	sts	0x4026, r24	; 0x804026 <g_i2c0_timeout_ticks>
    9ee4:	90 93 27 40 	sts	0x4027, r25	; 0x804027 <g_i2c0_timeout_ticks+0x1>
    9ee8:	80 e0       	ldi	r24, 0x00	; 0
    9eea:	99 e0       	ldi	r25, 0x09	; 9
    9eec:	fc 01       	movw	r30, r24
    9eee:	85 81       	ldd	r24, Z+5	; 0x05
    9ef0:	88 2f       	mov	r24, r24
    9ef2:	90 e0       	ldi	r25, 0x00	; 0
    9ef4:	80 7c       	andi	r24, 0xC0	; 192
    9ef6:	99 27       	eor	r25, r25
    9ef8:	21 e0       	ldi	r18, 0x01	; 1
    9efa:	89 2b       	or	r24, r25
    9efc:	09 f4       	brne	.+2      	; 0x9f00 <_ZL11i2c_0_WaitWv+0x30>
    9efe:	20 e0       	ldi	r18, 0x00	; 0
    9f00:	22 23       	and	r18, r18
    9f02:	a1 f0       	breq	.+40     	; 0x9f2c <_ZL11i2c_0_WaitWv+0x5c>
    9f04:	80 e0       	ldi	r24, 0x00	; 0
    9f06:	99 e0       	ldi	r25, 0x09	; 9
    9f08:	fc 01       	movw	r30, r24
    9f0a:	85 81       	ldd	r24, Z+5	; 0x05
    9f0c:	88 2f       	mov	r24, r24
    9f0e:	90 e0       	ldi	r25, 0x00	; 0
    9f10:	80 71       	andi	r24, 0x10	; 16
    9f12:	99 27       	eor	r25, r25
    9f14:	21 e0       	ldi	r18, 0x01	; 1
    9f16:	89 2b       	or	r24, r25
    9f18:	09 f0       	breq	.+2      	; 0x9f1c <_ZL11i2c_0_WaitWv+0x4c>
    9f1a:	20 e0       	ldi	r18, 0x00	; 0
    9f1c:	22 23       	and	r18, r18
    9f1e:	19 f0       	breq	.+6      	; 0x9f26 <_ZL11i2c_0_WaitWv+0x56>
    9f20:	81 e0       	ldi	r24, 0x01	; 1
    9f22:	89 83       	std	Y+1, r24	; 0x01
    9f24:	13 c0       	rjmp	.+38     	; 0x9f4c <_ZL11i2c_0_WaitWv+0x7c>
    9f26:	82 e0       	ldi	r24, 0x02	; 2
    9f28:	89 83       	std	Y+1, r24	; 0x01
    9f2a:	10 c0       	rjmp	.+32     	; 0x9f4c <_ZL11i2c_0_WaitWv+0x7c>
    9f2c:	80 e0       	ldi	r24, 0x00	; 0
    9f2e:	99 e0       	ldi	r25, 0x09	; 9
    9f30:	fc 01       	movw	r30, r24
    9f32:	85 81       	ldd	r24, Z+5	; 0x05
    9f34:	88 2f       	mov	r24, r24
    9f36:	90 e0       	ldi	r25, 0x00	; 0
    9f38:	8c 70       	andi	r24, 0x0C	; 12
    9f3a:	99 27       	eor	r25, r25
    9f3c:	21 e0       	ldi	r18, 0x01	; 1
    9f3e:	89 2b       	or	r24, r25
    9f40:	09 f4       	brne	.+2      	; 0x9f44 <_ZL11i2c_0_WaitWv+0x74>
    9f42:	20 e0       	ldi	r18, 0x00	; 0
    9f44:	22 23       	and	r18, r18
    9f46:	11 f0       	breq	.+4      	; 0x9f4c <_ZL11i2c_0_WaitWv+0x7c>
    9f48:	84 e0       	ldi	r24, 0x04	; 4
    9f4a:	89 83       	std	Y+1, r24	; 0x01
    9f4c:	89 81       	ldd	r24, Y+1	; 0x01
    9f4e:	88 23       	and	r24, r24
    9f50:	41 f4       	brne	.+16     	; 0x9f62 <_ZL11i2c_0_WaitWv+0x92>
    9f52:	80 91 26 40 	lds	r24, 0x4026	; 0x804026 <g_i2c0_timeout_ticks>
    9f56:	90 91 27 40 	lds	r25, 0x4027	; 0x804027 <g_i2c0_timeout_ticks+0x1>
    9f5a:	89 2b       	or	r24, r25
    9f5c:	11 f0       	breq	.+4      	; 0x9f62 <_ZL11i2c_0_WaitWv+0x92>
    9f5e:	81 e0       	ldi	r24, 0x01	; 1
    9f60:	01 c0       	rjmp	.+2      	; 0x9f64 <_ZL11i2c_0_WaitWv+0x94>
    9f62:	80 e0       	ldi	r24, 0x00	; 0
    9f64:	88 23       	and	r24, r24
    9f66:	09 f0       	breq	.+2      	; 0x9f6a <_ZL11i2c_0_WaitWv+0x9a>
    9f68:	bf cf       	rjmp	.-130    	; 0x9ee8 <_ZL11i2c_0_WaitWv+0x18>
    9f6a:	80 91 26 40 	lds	r24, 0x4026	; 0x804026 <g_i2c0_timeout_ticks>
    9f6e:	90 91 27 40 	lds	r25, 0x4027	; 0x804027 <g_i2c0_timeout_ticks+0x1>
    9f72:	21 e0       	ldi	r18, 0x01	; 1
    9f74:	89 2b       	or	r24, r25
    9f76:	09 f0       	breq	.+2      	; 0x9f7a <_ZL11i2c_0_WaitWv+0xaa>
    9f78:	20 e0       	ldi	r18, 0x00	; 0
    9f7a:	22 23       	and	r18, r18
    9f7c:	11 f0       	breq	.+4      	; 0x9f82 <_ZL11i2c_0_WaitWv+0xb2>
    9f7e:	84 e0       	ldi	r24, 0x04	; 4
    9f80:	89 83       	std	Y+1, r24	; 0x01
    9f82:	89 81       	ldd	r24, Y+1	; 0x01
    9f84:	0f 90       	pop	r0
    9f86:	df 91       	pop	r29
    9f88:	cf 91       	pop	r28
    9f8a:	08 95       	ret

00009f8c <_ZL11i2c_0_WaitRv>:
    9f8c:	cf 93       	push	r28
    9f8e:	df 93       	push	r29
    9f90:	1f 92       	push	r1
    9f92:	cd b7       	in	r28, 0x3d	; 61
    9f94:	de b7       	in	r29, 0x3e	; 62
    9f96:	19 82       	std	Y+1, r1	; 0x01
    9f98:	88 ec       	ldi	r24, 0xC8	; 200
    9f9a:	90 e0       	ldi	r25, 0x00	; 0
    9f9c:	80 93 26 40 	sts	0x4026, r24	; 0x804026 <g_i2c0_timeout_ticks>
    9fa0:	90 93 27 40 	sts	0x4027, r25	; 0x804027 <g_i2c0_timeout_ticks+0x1>
    9fa4:	80 e0       	ldi	r24, 0x00	; 0
    9fa6:	99 e0       	ldi	r25, 0x09	; 9
    9fa8:	fc 01       	movw	r30, r24
    9faa:	85 81       	ldd	r24, Z+5	; 0x05
    9fac:	88 2f       	mov	r24, r24
    9fae:	90 e0       	ldi	r25, 0x00	; 0
    9fb0:	80 7c       	andi	r24, 0xC0	; 192
    9fb2:	99 27       	eor	r25, r25
    9fb4:	21 e0       	ldi	r18, 0x01	; 1
    9fb6:	89 2b       	or	r24, r25
    9fb8:	09 f4       	brne	.+2      	; 0x9fbc <_ZL11i2c_0_WaitRv+0x30>
    9fba:	20 e0       	ldi	r18, 0x00	; 0
    9fbc:	22 23       	and	r18, r18
    9fbe:	19 f0       	breq	.+6      	; 0x9fc6 <_ZL11i2c_0_WaitRv+0x3a>
    9fc0:	83 e0       	ldi	r24, 0x03	; 3
    9fc2:	89 83       	std	Y+1, r24	; 0x01
    9fc4:	10 c0       	rjmp	.+32     	; 0x9fe6 <_ZL11i2c_0_WaitRv+0x5a>
    9fc6:	80 e0       	ldi	r24, 0x00	; 0
    9fc8:	99 e0       	ldi	r25, 0x09	; 9
    9fca:	fc 01       	movw	r30, r24
    9fcc:	85 81       	ldd	r24, Z+5	; 0x05
    9fce:	88 2f       	mov	r24, r24
    9fd0:	90 e0       	ldi	r25, 0x00	; 0
    9fd2:	8c 70       	andi	r24, 0x0C	; 12
    9fd4:	99 27       	eor	r25, r25
    9fd6:	21 e0       	ldi	r18, 0x01	; 1
    9fd8:	89 2b       	or	r24, r25
    9fda:	09 f4       	brne	.+2      	; 0x9fde <_ZL11i2c_0_WaitRv+0x52>
    9fdc:	20 e0       	ldi	r18, 0x00	; 0
    9fde:	22 23       	and	r18, r18
    9fe0:	11 f0       	breq	.+4      	; 0x9fe6 <_ZL11i2c_0_WaitRv+0x5a>
    9fe2:	84 e0       	ldi	r24, 0x04	; 4
    9fe4:	89 83       	std	Y+1, r24	; 0x01
    9fe6:	89 81       	ldd	r24, Y+1	; 0x01
    9fe8:	88 23       	and	r24, r24
    9fea:	41 f4       	brne	.+16     	; 0x9ffc <_ZL11i2c_0_WaitRv+0x70>
    9fec:	80 91 26 40 	lds	r24, 0x4026	; 0x804026 <g_i2c0_timeout_ticks>
    9ff0:	90 91 27 40 	lds	r25, 0x4027	; 0x804027 <g_i2c0_timeout_ticks+0x1>
    9ff4:	89 2b       	or	r24, r25
    9ff6:	11 f0       	breq	.+4      	; 0x9ffc <_ZL11i2c_0_WaitRv+0x70>
    9ff8:	81 e0       	ldi	r24, 0x01	; 1
    9ffa:	01 c0       	rjmp	.+2      	; 0x9ffe <_ZL11i2c_0_WaitRv+0x72>
    9ffc:	80 e0       	ldi	r24, 0x00	; 0
    9ffe:	88 23       	and	r24, r24
    a000:	09 f0       	breq	.+2      	; 0xa004 <_ZL11i2c_0_WaitRv+0x78>
    a002:	d0 cf       	rjmp	.-96     	; 0x9fa4 <_ZL11i2c_0_WaitRv+0x18>
    a004:	89 81       	ldd	r24, Y+1	; 0x01
    a006:	0f 90       	pop	r0
    a008:	df 91       	pop	r29
    a00a:	cf 91       	pop	r28
    a00c:	08 95       	ret

0000a00e <I2C_0_SendData>:
    a00e:	cf 93       	push	r28
    a010:	df 93       	push	r29
    a012:	cd b7       	in	r28, 0x3d	; 61
    a014:	de b7       	in	r29, 0x3e	; 62
    a016:	26 97       	sbiw	r28, 0x06	; 6
    a018:	cd bf       	out	0x3d, r28	; 61
    a01a:	de bf       	out	0x3e, r29	; 62
    a01c:	8a 83       	std	Y+2, r24	; 0x02
    a01e:	6b 83       	std	Y+3, r22	; 0x03
    a020:	4c 83       	std	Y+4, r20	; 0x04
    a022:	5d 83       	std	Y+5, r21	; 0x05
    a024:	2e 83       	std	Y+6, r18	; 0x06
    a026:	8f ef       	ldi	r24, 0xFF	; 255
    a028:	89 83       	std	Y+1, r24	; 0x01
    a02a:	80 e0       	ldi	r24, 0x00	; 0
    a02c:	99 e0       	ldi	r25, 0x09	; 9
    a02e:	2a 81       	ldd	r18, Y+2	; 0x02
    a030:	fc 01       	movw	r30, r24
    a032:	27 83       	std	Z+7, r18	; 0x07
    a034:	0e 94 68 4f 	call	0x9ed0	; 0x9ed0 <_ZL11i2c_0_WaitWv>
    a038:	98 2f       	mov	r25, r24
    a03a:	81 e0       	ldi	r24, 0x01	; 1
    a03c:	91 30       	cpi	r25, 0x01	; 1
    a03e:	09 f4       	brne	.+2      	; 0xa042 <I2C_0_SendData+0x34>
    a040:	80 e0       	ldi	r24, 0x00	; 0
    a042:	88 23       	and	r24, r24
    a044:	11 f0       	breq	.+4      	; 0xa04a <I2C_0_SendData+0x3c>
    a046:	89 81       	ldd	r24, Y+1	; 0x01
    a048:	44 c0       	rjmp	.+136    	; 0xa0d2 <I2C_0_SendData+0xc4>
    a04a:	80 e0       	ldi	r24, 0x00	; 0
    a04c:	99 e0       	ldi	r25, 0x09	; 9
    a04e:	2b 81       	ldd	r18, Y+3	; 0x03
    a050:	fc 01       	movw	r30, r24
    a052:	20 87       	std	Z+8, r18	; 0x08
    a054:	0e 94 68 4f 	call	0x9ed0	; 0x9ed0 <_ZL11i2c_0_WaitWv>
    a058:	98 2f       	mov	r25, r24
    a05a:	81 e0       	ldi	r24, 0x01	; 1
    a05c:	91 30       	cpi	r25, 0x01	; 1
    a05e:	09 f4       	brne	.+2      	; 0xa062 <I2C_0_SendData+0x54>
    a060:	80 e0       	ldi	r24, 0x00	; 0
    a062:	88 23       	and	r24, r24
    a064:	11 f0       	breq	.+4      	; 0xa06a <I2C_0_SendData+0x5c>
    a066:	89 81       	ldd	r24, Y+1	; 0x01
    a068:	34 c0       	rjmp	.+104    	; 0xa0d2 <I2C_0_SendData+0xc4>
    a06a:	19 82       	std	Y+1, r1	; 0x01
    a06c:	8e 81       	ldd	r24, Y+6	; 0x06
    a06e:	88 23       	and	r24, r24
    a070:	79 f1       	breq	.+94     	; 0xa0d0 <I2C_0_SendData+0xc2>
    a072:	8c 81       	ldd	r24, Y+4	; 0x04
    a074:	9d 81       	ldd	r25, Y+5	; 0x05
    a076:	89 2b       	or	r24, r25
    a078:	59 f1       	breq	.+86     	; 0xa0d0 <I2C_0_SendData+0xc2>
    a07a:	8e 81       	ldd	r24, Y+6	; 0x06
    a07c:	9f ef       	ldi	r25, 0xFF	; 255
    a07e:	98 0f       	add	r25, r24
    a080:	9e 83       	std	Y+6, r25	; 0x06
    a082:	91 e0       	ldi	r25, 0x01	; 1
    a084:	88 23       	and	r24, r24
    a086:	09 f4       	brne	.+2      	; 0xa08a <I2C_0_SendData+0x7c>
    a088:	90 e0       	ldi	r25, 0x00	; 0
    a08a:	99 23       	and	r25, r25
    a08c:	09 f1       	breq	.+66     	; 0xa0d0 <I2C_0_SendData+0xc2>
    a08e:	80 e0       	ldi	r24, 0x00	; 0
    a090:	99 e0       	ldi	r25, 0x09	; 9
    a092:	2c 81       	ldd	r18, Y+4	; 0x04
    a094:	3d 81       	ldd	r19, Y+5	; 0x05
    a096:	f9 01       	movw	r30, r18
    a098:	20 81       	ld	r18, Z
    a09a:	fc 01       	movw	r30, r24
    a09c:	20 87       	std	Z+8, r18	; 0x08
    a09e:	0e 94 68 4f 	call	0x9ed0	; 0x9ed0 <_ZL11i2c_0_WaitWv>
    a0a2:	98 2f       	mov	r25, r24
    a0a4:	81 e0       	ldi	r24, 0x01	; 1
    a0a6:	91 30       	cpi	r25, 0x01	; 1
    a0a8:	09 f0       	breq	.+2      	; 0xa0ac <I2C_0_SendData+0x9e>
    a0aa:	80 e0       	ldi	r24, 0x00	; 0
    a0ac:	88 23       	and	r24, r24
    a0ae:	79 f0       	breq	.+30     	; 0xa0ce <I2C_0_SendData+0xc0>
    a0b0:	89 81       	ldd	r24, Y+1	; 0x01
    a0b2:	8f 5f       	subi	r24, 0xFF	; 255
    a0b4:	89 83       	std	Y+1, r24	; 0x01
    a0b6:	8c 81       	ldd	r24, Y+4	; 0x04
    a0b8:	9d 81       	ldd	r25, Y+5	; 0x05
    a0ba:	01 96       	adiw	r24, 0x01	; 1
    a0bc:	8c 83       	std	Y+4, r24	; 0x04
    a0be:	9d 83       	std	Y+5, r25	; 0x05
    a0c0:	8e 81       	ldd	r24, Y+6	; 0x06
    a0c2:	88 23       	and	r24, r24
    a0c4:	11 f4       	brne	.+4      	; 0xa0ca <I2C_0_SendData+0xbc>
    a0c6:	0e 94 ed 50 	call	0xa1da	; 0xa1da <I2C_0_EndSession>
    a0ca:	00 00       	nop
    a0cc:	d6 cf       	rjmp	.-84     	; 0xa07a <I2C_0_SendData+0x6c>
    a0ce:	00 00       	nop
    a0d0:	89 81       	ldd	r24, Y+1	; 0x01
    a0d2:	26 96       	adiw	r28, 0x06	; 6
    a0d4:	cd bf       	out	0x3d, r28	; 61
    a0d6:	de bf       	out	0x3e, r29	; 62
    a0d8:	df 91       	pop	r29
    a0da:	cf 91       	pop	r28
    a0dc:	08 95       	ret

0000a0de <I2C_0_GetData>:
    a0de:	cf 93       	push	r28
    a0e0:	df 93       	push	r29
    a0e2:	cd b7       	in	r28, 0x3d	; 61
    a0e4:	de b7       	in	r29, 0x3e	; 62
    a0e6:	26 97       	sbiw	r28, 0x06	; 6
    a0e8:	cd bf       	out	0x3d, r28	; 61
    a0ea:	de bf       	out	0x3e, r29	; 62
    a0ec:	8a 83       	std	Y+2, r24	; 0x02
    a0ee:	6b 83       	std	Y+3, r22	; 0x03
    a0f0:	4c 83       	std	Y+4, r20	; 0x04
    a0f2:	5d 83       	std	Y+5, r21	; 0x05
    a0f4:	2e 83       	std	Y+6, r18	; 0x06
    a0f6:	8f ef       	ldi	r24, 0xFF	; 255
    a0f8:	89 83       	std	Y+1, r24	; 0x01
    a0fa:	80 e0       	ldi	r24, 0x00	; 0
    a0fc:	99 e0       	ldi	r25, 0x09	; 9
    a0fe:	2a 81       	ldd	r18, Y+2	; 0x02
    a100:	fc 01       	movw	r30, r24
    a102:	27 83       	std	Z+7, r18	; 0x07
    a104:	0e 94 68 4f 	call	0x9ed0	; 0x9ed0 <_ZL11i2c_0_WaitWv>
    a108:	98 2f       	mov	r25, r24
    a10a:	81 e0       	ldi	r24, 0x01	; 1
    a10c:	91 30       	cpi	r25, 0x01	; 1
    a10e:	09 f4       	brne	.+2      	; 0xa112 <I2C_0_GetData+0x34>
    a110:	80 e0       	ldi	r24, 0x00	; 0
    a112:	88 23       	and	r24, r24
    a114:	11 f0       	breq	.+4      	; 0xa11a <I2C_0_GetData+0x3c>
    a116:	89 81       	ldd	r24, Y+1	; 0x01
    a118:	5a c0       	rjmp	.+180    	; 0xa1ce <I2C_0_GetData+0xf0>
    a11a:	80 e0       	ldi	r24, 0x00	; 0
    a11c:	99 e0       	ldi	r25, 0x09	; 9
    a11e:	2b 81       	ldd	r18, Y+3	; 0x03
    a120:	fc 01       	movw	r30, r24
    a122:	20 87       	std	Z+8, r18	; 0x08
    a124:	0e 94 68 4f 	call	0x9ed0	; 0x9ed0 <_ZL11i2c_0_WaitWv>
    a128:	98 2f       	mov	r25, r24
    a12a:	81 e0       	ldi	r24, 0x01	; 1
    a12c:	91 30       	cpi	r25, 0x01	; 1
    a12e:	09 f4       	brne	.+2      	; 0xa132 <I2C_0_GetData+0x54>
    a130:	80 e0       	ldi	r24, 0x00	; 0
    a132:	88 23       	and	r24, r24
    a134:	11 f0       	breq	.+4      	; 0xa13a <I2C_0_GetData+0x5c>
    a136:	89 81       	ldd	r24, Y+1	; 0x01
    a138:	4a c0       	rjmp	.+148    	; 0xa1ce <I2C_0_GetData+0xf0>
    a13a:	80 e0       	ldi	r24, 0x00	; 0
    a13c:	99 e0       	ldi	r25, 0x09	; 9
    a13e:	2a 81       	ldd	r18, Y+2	; 0x02
    a140:	21 60       	ori	r18, 0x01	; 1
    a142:	fc 01       	movw	r30, r24
    a144:	27 83       	std	Z+7, r18	; 0x07
    a146:	0e 94 68 4f 	call	0x9ed0	; 0x9ed0 <_ZL11i2c_0_WaitWv>
    a14a:	98 2f       	mov	r25, r24
    a14c:	81 e0       	ldi	r24, 0x01	; 1
    a14e:	91 30       	cpi	r25, 0x01	; 1
    a150:	09 f4       	brne	.+2      	; 0xa154 <I2C_0_GetData+0x76>
    a152:	80 e0       	ldi	r24, 0x00	; 0
    a154:	88 23       	and	r24, r24
    a156:	11 f0       	breq	.+4      	; 0xa15c <I2C_0_GetData+0x7e>
    a158:	89 81       	ldd	r24, Y+1	; 0x01
    a15a:	39 c0       	rjmp	.+114    	; 0xa1ce <I2C_0_GetData+0xf0>
    a15c:	19 82       	std	Y+1, r1	; 0x01
    a15e:	8e 81       	ldd	r24, Y+6	; 0x06
    a160:	88 23       	and	r24, r24
    a162:	a1 f1       	breq	.+104    	; 0xa1cc <I2C_0_GetData+0xee>
    a164:	8c 81       	ldd	r24, Y+4	; 0x04
    a166:	9d 81       	ldd	r25, Y+5	; 0x05
    a168:	89 2b       	or	r24, r25
    a16a:	81 f1       	breq	.+96     	; 0xa1cc <I2C_0_GetData+0xee>
    a16c:	8e 81       	ldd	r24, Y+6	; 0x06
    a16e:	9f ef       	ldi	r25, 0xFF	; 255
    a170:	98 0f       	add	r25, r24
    a172:	9e 83       	std	Y+6, r25	; 0x06
    a174:	91 e0       	ldi	r25, 0x01	; 1
    a176:	88 23       	and	r24, r24
    a178:	09 f4       	brne	.+2      	; 0xa17c <I2C_0_GetData+0x9e>
    a17a:	90 e0       	ldi	r25, 0x00	; 0
    a17c:	99 23       	and	r25, r25
    a17e:	31 f1       	breq	.+76     	; 0xa1cc <I2C_0_GetData+0xee>
    a180:	0e 94 c6 4f 	call	0x9f8c	; 0x9f8c <_ZL11i2c_0_WaitRv>
    a184:	98 2f       	mov	r25, r24
    a186:	81 e0       	ldi	r24, 0x01	; 1
    a188:	93 30       	cpi	r25, 0x03	; 3
    a18a:	09 f0       	breq	.+2      	; 0xa18e <I2C_0_GetData+0xb0>
    a18c:	80 e0       	ldi	r24, 0x00	; 0
    a18e:	88 23       	and	r24, r24
    a190:	e1 f0       	breq	.+56     	; 0xa1ca <I2C_0_GetData+0xec>
    a192:	80 e0       	ldi	r24, 0x00	; 0
    a194:	99 e0       	ldi	r25, 0x09	; 9
    a196:	fc 01       	movw	r30, r24
    a198:	20 85       	ldd	r18, Z+8	; 0x08
    a19a:	8c 81       	ldd	r24, Y+4	; 0x04
    a19c:	9d 81       	ldd	r25, Y+5	; 0x05
    a19e:	fc 01       	movw	r30, r24
    a1a0:	20 83       	st	Z, r18
    a1a2:	80 e0       	ldi	r24, 0x00	; 0
    a1a4:	99 e0       	ldi	r25, 0x09	; 9
    a1a6:	2e 81       	ldd	r18, Y+6	; 0x06
    a1a8:	22 23       	and	r18, r18
    a1aa:	11 f4       	brne	.+4      	; 0xa1b0 <I2C_0_GetData+0xd2>
    a1ac:	27 e0       	ldi	r18, 0x07	; 7
    a1ae:	01 c0       	rjmp	.+2      	; 0xa1b2 <I2C_0_GetData+0xd4>
    a1b0:	22 e0       	ldi	r18, 0x02	; 2
    a1b2:	fc 01       	movw	r30, r24
    a1b4:	24 83       	std	Z+4, r18	; 0x04
    a1b6:	89 81       	ldd	r24, Y+1	; 0x01
    a1b8:	8f 5f       	subi	r24, 0xFF	; 255
    a1ba:	89 83       	std	Y+1, r24	; 0x01
    a1bc:	8c 81       	ldd	r24, Y+4	; 0x04
    a1be:	9d 81       	ldd	r25, Y+5	; 0x05
    a1c0:	01 96       	adiw	r24, 0x01	; 1
    a1c2:	8c 83       	std	Y+4, r24	; 0x04
    a1c4:	9d 83       	std	Y+5, r25	; 0x05
    a1c6:	00 00       	nop
    a1c8:	d1 cf       	rjmp	.-94     	; 0xa16c <I2C_0_GetData+0x8e>
    a1ca:	00 00       	nop
    a1cc:	89 81       	ldd	r24, Y+1	; 0x01
    a1ce:	26 96       	adiw	r28, 0x06	; 6
    a1d0:	cd bf       	out	0x3d, r28	; 61
    a1d2:	de bf       	out	0x3e, r29	; 62
    a1d4:	df 91       	pop	r29
    a1d6:	cf 91       	pop	r28
    a1d8:	08 95       	ret

0000a1da <I2C_0_EndSession>:
    a1da:	cf 93       	push	r28
    a1dc:	df 93       	push	r29
    a1de:	cd b7       	in	r28, 0x3d	; 61
    a1e0:	de b7       	in	r29, 0x3e	; 62
    a1e2:	80 e0       	ldi	r24, 0x00	; 0
    a1e4:	99 e0       	ldi	r25, 0x09	; 9
    a1e6:	23 e0       	ldi	r18, 0x03	; 3
    a1e8:	fc 01       	movw	r30, r24
    a1ea:	24 83       	std	Z+4, r18	; 0x04
    a1ec:	00 00       	nop
    a1ee:	df 91       	pop	r29
    a1f0:	cf 91       	pop	r28
    a1f2:	08 95       	ret

0000a1f4 <I2C_1_Shutdown>:
    a1f4:	cf 93       	push	r28
    a1f6:	df 93       	push	r29
    a1f8:	cd b7       	in	r28, 0x3d	; 61
    a1fa:	de b7       	in	r29, 0x3e	; 62
    a1fc:	80 e2       	ldi	r24, 0x20	; 32
    a1fe:	99 e0       	ldi	r25, 0x09	; 9
    a200:	21 e0       	ldi	r18, 0x01	; 1
    a202:	fc 01       	movw	r30, r24
    a204:	25 83       	std	Z+5, r18	; 0x05
    a206:	80 e2       	ldi	r24, 0x20	; 32
    a208:	99 e0       	ldi	r25, 0x09	; 9
    a20a:	fc 01       	movw	r30, r24
    a20c:	13 82       	std	Z+3, r1	; 0x03
    a20e:	00 00       	nop
    a210:	df 91       	pop	r29
    a212:	cf 91       	pop	r28
    a214:	08 95       	ret

0000a216 <_ZL11i2c_1_WaitWv>:

static uint8_t i2c_1_WaitW(void)
{
    a216:	cf 93       	push	r28
    a218:	df 93       	push	r29
    a21a:	00 d0       	rcall	.+0      	; 0xa21c <_ZL11i2c_1_WaitWv+0x6>
    a21c:	cd b7       	in	r28, 0x3d	; 61
    a21e:	de b7       	in	r29, 0x3e	; 62
	uint8_t state = I2C_INIT;
    a220:	19 82       	std	Y+1, r1	; 0x01
	
	g_i2c1_timeout_ticks = 200;
    a222:	88 ec       	ldi	r24, 0xC8	; 200
    a224:	90 e0       	ldi	r25, 0x00	; 0
    a226:	80 93 28 40 	sts	0x4028, r24	; 0x804028 <g_i2c1_timeout_ticks>
    a22a:	90 93 29 40 	sts	0x4029, r25	; 0x804029 <g_i2c1_timeout_ticks+0x1>
	
	do
	{
		uint8_t stat = TWI1.MSTATUS;
    a22e:	80 e2       	ldi	r24, 0x20	; 32
    a230:	99 e0       	ldi	r25, 0x09	; 9
    a232:	fc 01       	movw	r30, r24
    a234:	85 81       	ldd	r24, Z+5	; 0x05
    a236:	8a 83       	std	Y+2, r24	; 0x02
		if(stat & (TWI_WIF_bm | TWI_RIF_bm))
    a238:	8a 81       	ldd	r24, Y+2	; 0x02
    a23a:	88 2f       	mov	r24, r24
    a23c:	90 e0       	ldi	r25, 0x00	; 0
    a23e:	80 7c       	andi	r24, 0xC0	; 192
    a240:	99 27       	eor	r25, r25
    a242:	89 2b       	or	r24, r25
    a244:	69 f0       	breq	.+26     	; 0xa260 <_ZL11i2c_1_WaitWv+0x4a>
		{
			if(!(stat & TWI_RXACK_bm))
    a246:	8a 81       	ldd	r24, Y+2	; 0x02
    a248:	88 2f       	mov	r24, r24
    a24a:	90 e0       	ldi	r25, 0x00	; 0
    a24c:	80 71       	andi	r24, 0x10	; 16
    a24e:	99 27       	eor	r25, r25
    a250:	89 2b       	or	r24, r25
    a252:	19 f4       	brne	.+6      	; 0xa25a <_ZL11i2c_1_WaitWv+0x44>
			{
				/* client responded with ack - TWI goes to M1 state */
				state = I2C_ACKED;
    a254:	81 e0       	ldi	r24, 0x01	; 1
    a256:	89 83       	std	Y+1, r24	; 0x01
    a258:	0c c0       	rjmp	.+24     	; 0xa272 <_ZL11i2c_1_WaitWv+0x5c>
			}
			else
			{
				/* address sent but no ack received - TWI goes to M3 state */
				state = I2C_NACKED;
    a25a:	82 e0       	ldi	r24, 0x02	; 2
    a25c:	89 83       	std	Y+1, r24	; 0x01
    a25e:	09 c0       	rjmp	.+18     	; 0xa272 <_ZL11i2c_1_WaitWv+0x5c>
			}
		}
		else if(stat & (TWI_BUSERR_bm | TWI_ARBLOST_bm))
    a260:	8a 81       	ldd	r24, Y+2	; 0x02
    a262:	88 2f       	mov	r24, r24
    a264:	90 e0       	ldi	r25, 0x00	; 0
    a266:	8c 70       	andi	r24, 0x0C	; 12
    a268:	99 27       	eor	r25, r25
    a26a:	89 2b       	or	r24, r25
    a26c:	11 f0       	breq	.+4      	; 0xa272 <_ZL11i2c_1_WaitWv+0x5c>
		{
			/* get here only in case of bus error or arbitration lost - M4 state */
			state = I2C_ERROR;
    a26e:	84 e0       	ldi	r24, 0x04	; 4
    a270:	89 83       	std	Y+1, r24	; 0x01
		}
	} while(!state && g_i2c1_timeout_ticks);
    a272:	89 81       	ldd	r24, Y+1	; 0x01
    a274:	88 23       	and	r24, r24
    a276:	41 f4       	brne	.+16     	; 0xa288 <_ZL11i2c_1_WaitWv+0x72>
    a278:	80 91 28 40 	lds	r24, 0x4028	; 0x804028 <g_i2c1_timeout_ticks>
    a27c:	90 91 29 40 	lds	r25, 0x4029	; 0x804029 <g_i2c1_timeout_ticks+0x1>
    a280:	89 2b       	or	r24, r25
    a282:	11 f0       	breq	.+4      	; 0xa288 <_ZL11i2c_1_WaitWv+0x72>
    a284:	81 e0       	ldi	r24, 0x01	; 1
    a286:	01 c0       	rjmp	.+2      	; 0xa28a <_ZL11i2c_1_WaitWv+0x74>
    a288:	80 e0       	ldi	r24, 0x00	; 0
{
	uint8_t state = I2C_INIT;
	
	g_i2c1_timeout_ticks = 200;
	
	do
    a28a:	88 23       	and	r24, r24
    a28c:	09 f0       	breq	.+2      	; 0xa290 <_ZL11i2c_1_WaitWv+0x7a>
    a28e:	cf cf       	rjmp	.-98     	; 0xa22e <_ZL11i2c_1_WaitWv+0x18>
			/* get here only in case of bus error or arbitration lost - M4 state */
			state = I2C_ERROR;
		}
	} while(!state && g_i2c1_timeout_ticks);
	
	return state;
    a290:	89 81       	ldd	r24, Y+1	; 0x01
}
    a292:	0f 90       	pop	r0
    a294:	0f 90       	pop	r0
    a296:	df 91       	pop	r29
    a298:	cf 91       	pop	r28
    a29a:	08 95       	ret

0000a29c <_ZL11I2C_1_WaitRv>:

static uint8_t I2C_1_WaitR(void)
{
    a29c:	cf 93       	push	r28
    a29e:	df 93       	push	r29
    a2a0:	1f 92       	push	r1
    a2a2:	cd b7       	in	r28, 0x3d	; 61
    a2a4:	de b7       	in	r29, 0x3e	; 62
	uint8_t state = I2C_INIT;
    a2a6:	19 82       	std	Y+1, r1	; 0x01
	
	g_i2c0_timeout_ticks = 200;
    a2a8:	88 ec       	ldi	r24, 0xC8	; 200
    a2aa:	90 e0       	ldi	r25, 0x00	; 0
    a2ac:	80 93 26 40 	sts	0x4026, r24	; 0x804026 <g_i2c0_timeout_ticks>
    a2b0:	90 93 27 40 	sts	0x4027, r25	; 0x804027 <g_i2c0_timeout_ticks+0x1>
	
	do
	{
		if(TWI1.MSTATUS & (TWI_WIF_bm | TWI_RIF_bm))
    a2b4:	80 e2       	ldi	r24, 0x20	; 32
    a2b6:	99 e0       	ldi	r25, 0x09	; 9
    a2b8:	fc 01       	movw	r30, r24
    a2ba:	85 81       	ldd	r24, Z+5	; 0x05
    a2bc:	88 2f       	mov	r24, r24
    a2be:	90 e0       	ldi	r25, 0x00	; 0
    a2c0:	80 7c       	andi	r24, 0xC0	; 192
    a2c2:	99 27       	eor	r25, r25
    a2c4:	21 e0       	ldi	r18, 0x01	; 1
    a2c6:	89 2b       	or	r24, r25
    a2c8:	09 f4       	brne	.+2      	; 0xa2cc <_ZL11I2C_1_WaitRv+0x30>
    a2ca:	20 e0       	ldi	r18, 0x00	; 0
    a2cc:	22 23       	and	r18, r18
    a2ce:	19 f0       	breq	.+6      	; 0xa2d6 <_ZL11I2C_1_WaitRv+0x3a>
		{
			state = I2C_READY;
    a2d0:	83 e0       	ldi	r24, 0x03	; 3
    a2d2:	89 83       	std	Y+1, r24	; 0x01
    a2d4:	10 c0       	rjmp	.+32     	; 0xa2f6 <_ZL11I2C_1_WaitRv+0x5a>
		}
		else if(TWI1.MSTATUS & (TWI_BUSERR_bm | TWI_ARBLOST_bm))
    a2d6:	80 e2       	ldi	r24, 0x20	; 32
    a2d8:	99 e0       	ldi	r25, 0x09	; 9
    a2da:	fc 01       	movw	r30, r24
    a2dc:	85 81       	ldd	r24, Z+5	; 0x05
    a2de:	88 2f       	mov	r24, r24
    a2e0:	90 e0       	ldi	r25, 0x00	; 0
    a2e2:	8c 70       	andi	r24, 0x0C	; 12
    a2e4:	99 27       	eor	r25, r25
    a2e6:	21 e0       	ldi	r18, 0x01	; 1
    a2e8:	89 2b       	or	r24, r25
    a2ea:	09 f4       	brne	.+2      	; 0xa2ee <_ZL11I2C_1_WaitRv+0x52>
    a2ec:	20 e0       	ldi	r18, 0x00	; 0
    a2ee:	22 23       	and	r18, r18
    a2f0:	11 f0       	breq	.+4      	; 0xa2f6 <_ZL11I2C_1_WaitRv+0x5a>
		{
			/* get here only in case of bus error or arbitration lost - M4 state */
			state = I2C_ERROR;
    a2f2:	84 e0       	ldi	r24, 0x04	; 4
    a2f4:	89 83       	std	Y+1, r24	; 0x01
		}
	} while(!state && g_i2c0_timeout_ticks);
    a2f6:	89 81       	ldd	r24, Y+1	; 0x01
    a2f8:	88 23       	and	r24, r24
    a2fa:	41 f4       	brne	.+16     	; 0xa30c <_ZL11I2C_1_WaitRv+0x70>
    a2fc:	80 91 26 40 	lds	r24, 0x4026	; 0x804026 <g_i2c0_timeout_ticks>
    a300:	90 91 27 40 	lds	r25, 0x4027	; 0x804027 <g_i2c0_timeout_ticks+0x1>
    a304:	89 2b       	or	r24, r25
    a306:	11 f0       	breq	.+4      	; 0xa30c <_ZL11I2C_1_WaitRv+0x70>
    a308:	81 e0       	ldi	r24, 0x01	; 1
    a30a:	01 c0       	rjmp	.+2      	; 0xa30e <_ZL11I2C_1_WaitRv+0x72>
    a30c:	80 e0       	ldi	r24, 0x00	; 0
{
	uint8_t state = I2C_INIT;
	
	g_i2c0_timeout_ticks = 200;
	
	do
    a30e:	88 23       	and	r24, r24
    a310:	09 f0       	breq	.+2      	; 0xa314 <_ZL11I2C_1_WaitRv+0x78>
    a312:	d0 cf       	rjmp	.-96     	; 0xa2b4 <_ZL11I2C_1_WaitRv+0x18>
			/* get here only in case of bus error or arbitration lost - M4 state */
			state = I2C_ERROR;
		}
	} while(!state && g_i2c0_timeout_ticks);
	
	return state;
    a314:	89 81       	ldd	r24, Y+1	; 0x01
}
    a316:	0f 90       	pop	r0
    a318:	df 91       	pop	r29
    a31a:	cf 91       	pop	r28
    a31c:	08 95       	ret

0000a31e <I2C_1_SendData>:

/* Returns how many bytes have been sent, -1 means NACK at address, 0 means client ACKed to client address */
uint8_t I2C_1_SendData(uint8_t slaveAddr, uint8_t regAddr, uint8_t *pData, uint8_t len)
{
    a31e:	cf 93       	push	r28
    a320:	df 93       	push	r29
    a322:	cd b7       	in	r28, 0x3d	; 61
    a324:	de b7       	in	r29, 0x3e	; 62
    a326:	26 97       	sbiw	r28, 0x06	; 6
    a328:	cd bf       	out	0x3d, r28	; 61
    a32a:	de bf       	out	0x3e, r29	; 62
    a32c:	8a 83       	std	Y+2, r24	; 0x02
    a32e:	6b 83       	std	Y+3, r22	; 0x03
    a330:	4c 83       	std	Y+4, r20	; 0x04
    a332:	5d 83       	std	Y+5, r21	; 0x05
    a334:	2e 83       	std	Y+6, r18	; 0x06
	uint8_t retVal = (uint8_t) - 1;
    a336:	8f ef       	ldi	r24, 0xFF	; 255
    a338:	89 83       	std	Y+1, r24	; 0x01
	
	/* Send the slave address */
	TWI1.MADDR = slaveAddr & ~0x01;
    a33a:	80 e2       	ldi	r24, 0x20	; 32
    a33c:	99 e0       	ldi	r25, 0x09	; 9
    a33e:	2a 81       	ldd	r18, Y+2	; 0x02
    a340:	2e 7f       	andi	r18, 0xFE	; 254
    a342:	fc 01       	movw	r30, r24
    a344:	27 83       	std	Z+7, r18	; 0x07
	if(i2c_1_WaitW() != I2C_ACKED)
    a346:	0e 94 0b 51 	call	0xa216	; 0xa216 <_ZL11i2c_1_WaitWv>
    a34a:	98 2f       	mov	r25, r24
    a34c:	81 e0       	ldi	r24, 0x01	; 1
    a34e:	91 30       	cpi	r25, 0x01	; 1
    a350:	09 f4       	brne	.+2      	; 0xa354 <I2C_1_SendData+0x36>
    a352:	80 e0       	ldi	r24, 0x00	; 0
    a354:	88 23       	and	r24, r24
    a356:	11 f0       	breq	.+4      	; 0xa35c <I2C_1_SendData+0x3e>
	{
		return retVal;
    a358:	89 81       	ldd	r24, Y+1	; 0x01
    a35a:	44 c0       	rjmp	.+136    	; 0xa3e4 <I2C_1_SendData+0xc6>
	}
	
	/* Send the register address */
	TWI1.MDATA = regAddr;	
    a35c:	80 e2       	ldi	r24, 0x20	; 32
    a35e:	99 e0       	ldi	r25, 0x09	; 9
    a360:	2b 81       	ldd	r18, Y+3	; 0x03
    a362:	fc 01       	movw	r30, r24
    a364:	20 87       	std	Z+8, r18	; 0x08
	if(i2c_1_WaitW() != I2C_ACKED)
    a366:	0e 94 0b 51 	call	0xa216	; 0xa216 <_ZL11i2c_1_WaitWv>
    a36a:	98 2f       	mov	r25, r24
    a36c:	81 e0       	ldi	r24, 0x01	; 1
    a36e:	91 30       	cpi	r25, 0x01	; 1
    a370:	09 f4       	brne	.+2      	; 0xa374 <I2C_1_SendData+0x56>
    a372:	80 e0       	ldi	r24, 0x00	; 0
    a374:	88 23       	and	r24, r24
    a376:	11 f0       	breq	.+4      	; 0xa37c <I2C_1_SendData+0x5e>
	{
		return retVal;
    a378:	89 81       	ldd	r24, Y+1	; 0x01
    a37a:	34 c0       	rjmp	.+104    	; 0xa3e4 <I2C_1_SendData+0xc6>
	}	

	retVal = 0;
    a37c:	19 82       	std	Y+1, r1	; 0x01
	if((len != 0) && (pData != null))
    a37e:	8e 81       	ldd	r24, Y+6	; 0x06
    a380:	88 23       	and	r24, r24
    a382:	79 f1       	breq	.+94     	; 0xa3e2 <I2C_1_SendData+0xc4>
    a384:	8c 81       	ldd	r24, Y+4	; 0x04
    a386:	9d 81       	ldd	r25, Y+5	; 0x05
    a388:	89 2b       	or	r24, r25
    a38a:	59 f1       	breq	.+86     	; 0xa3e2 <I2C_1_SendData+0xc4>
	{
		while(len--)
    a38c:	8e 81       	ldd	r24, Y+6	; 0x06
    a38e:	9f ef       	ldi	r25, 0xFF	; 255
    a390:	98 0f       	add	r25, r24
    a392:	9e 83       	std	Y+6, r25	; 0x06
    a394:	91 e0       	ldi	r25, 0x01	; 1
    a396:	88 23       	and	r24, r24
    a398:	09 f4       	brne	.+2      	; 0xa39c <I2C_1_SendData+0x7e>
    a39a:	90 e0       	ldi	r25, 0x00	; 0
    a39c:	99 23       	and	r25, r25
    a39e:	09 f1       	breq	.+66     	; 0xa3e2 <I2C_1_SendData+0xc4>
		{
			TWI1.MDATA = *pData;
    a3a0:	80 e2       	ldi	r24, 0x20	; 32
    a3a2:	99 e0       	ldi	r25, 0x09	; 9
    a3a4:	2c 81       	ldd	r18, Y+4	; 0x04
    a3a6:	3d 81       	ldd	r19, Y+5	; 0x05
    a3a8:	f9 01       	movw	r30, r18
    a3aa:	20 81       	ld	r18, Z
    a3ac:	fc 01       	movw	r30, r24
    a3ae:	20 87       	std	Z+8, r18	; 0x08
			if(i2c_1_WaitW() == I2C_ACKED)
    a3b0:	0e 94 0b 51 	call	0xa216	; 0xa216 <_ZL11i2c_1_WaitWv>
    a3b4:	98 2f       	mov	r25, r24
    a3b6:	81 e0       	ldi	r24, 0x01	; 1
    a3b8:	91 30       	cpi	r25, 0x01	; 1
    a3ba:	09 f0       	breq	.+2      	; 0xa3be <I2C_1_SendData+0xa0>
    a3bc:	80 e0       	ldi	r24, 0x00	; 0
    a3be:	88 23       	and	r24, r24
    a3c0:	79 f0       	breq	.+30     	; 0xa3e0 <I2C_1_SendData+0xc2>
			{
				retVal++;
    a3c2:	89 81       	ldd	r24, Y+1	; 0x01
    a3c4:	8f 5f       	subi	r24, 0xFF	; 255
    a3c6:	89 83       	std	Y+1, r24	; 0x01
				pData++;
    a3c8:	8c 81       	ldd	r24, Y+4	; 0x04
    a3ca:	9d 81       	ldd	r25, Y+5	; 0x05
    a3cc:	01 96       	adiw	r24, 0x01	; 1
    a3ce:	8c 83       	std	Y+4, r24	; 0x04
    a3d0:	9d 83       	std	Y+5, r25	; 0x05
				if(!len) I2C_1_EndSession();
    a3d2:	8e 81       	ldd	r24, Y+6	; 0x06
    a3d4:	88 23       	and	r24, r24
    a3d6:	11 f4       	brne	.+4      	; 0xa3dc <I2C_1_SendData+0xbe>
    a3d8:	0e 94 76 52 	call	0xa4ec	; 0xa4ec <I2C_1_EndSession>
				continue;
    a3dc:	00 00       	nop
	}	

	retVal = 0;
	if((len != 0) && (pData != null))
	{
		while(len--)
    a3de:	d6 cf       	rjmp	.-84     	; 0xa38c <I2C_1_SendData+0x6e>
				if(!len) I2C_1_EndSession();
				continue;
			}
			else // did not get ACK after client address
			{
				break;
    a3e0:	00 00       	nop
			}
		}
	}
	
	return retVal;
    a3e2:	89 81       	ldd	r24, Y+1	; 0x01
}
    a3e4:	26 96       	adiw	r28, 0x06	; 6
    a3e6:	cd bf       	out	0x3d, r28	; 61
    a3e8:	de bf       	out	0x3e, r29	; 62
    a3ea:	df 91       	pop	r29
    a3ec:	cf 91       	pop	r28
    a3ee:	08 95       	ret

0000a3f0 <I2C_1_GetData>:


/* Returns how many bytes have been received, -1 means NACK at address */
uint8_t I2C_1_GetData(uint8_t slaveAddr, uint8_t regAddr, uint8_t *pData, uint8_t len)
{
    a3f0:	cf 93       	push	r28
    a3f2:	df 93       	push	r29
    a3f4:	cd b7       	in	r28, 0x3d	; 61
    a3f6:	de b7       	in	r29, 0x3e	; 62
    a3f8:	26 97       	sbiw	r28, 0x06	; 6
    a3fa:	cd bf       	out	0x3d, r28	; 61
    a3fc:	de bf       	out	0x3e, r29	; 62
    a3fe:	8a 83       	std	Y+2, r24	; 0x02
    a400:	6b 83       	std	Y+3, r22	; 0x03
    a402:	4c 83       	std	Y+4, r20	; 0x04
    a404:	5d 83       	std	Y+5, r21	; 0x05
    a406:	2e 83       	std	Y+6, r18	; 0x06
	uint8_t retVal = (uint8_t) -1;
    a408:	8f ef       	ldi	r24, 0xFF	; 255
    a40a:	89 83       	std	Y+1, r24	; 0x01
	
	/* Send the client address for write */
	TWI1.MADDR = slaveAddr;
    a40c:	80 e2       	ldi	r24, 0x20	; 32
    a40e:	99 e0       	ldi	r25, 0x09	; 9
    a410:	2a 81       	ldd	r18, Y+2	; 0x02
    a412:	fc 01       	movw	r30, r24
    a414:	27 83       	std	Z+7, r18	; 0x07
	if(i2c_1_WaitW() != I2C_ACKED)
    a416:	0e 94 0b 51 	call	0xa216	; 0xa216 <_ZL11i2c_1_WaitWv>
    a41a:	98 2f       	mov	r25, r24
    a41c:	81 e0       	ldi	r24, 0x01	; 1
    a41e:	91 30       	cpi	r25, 0x01	; 1
    a420:	09 f4       	brne	.+2      	; 0xa424 <I2C_1_GetData+0x34>
    a422:	80 e0       	ldi	r24, 0x00	; 0
    a424:	88 23       	and	r24, r24
    a426:	11 f0       	breq	.+4      	; 0xa42c <I2C_1_GetData+0x3c>
	{
		return retVal;
    a428:	89 81       	ldd	r24, Y+1	; 0x01
    a42a:	5a c0       	rjmp	.+180    	; 0xa4e0 <I2C_1_GetData+0xf0>
	}
	
	/* Send the register address */
	TWI1.MDATA = regAddr;	
    a42c:	80 e2       	ldi	r24, 0x20	; 32
    a42e:	99 e0       	ldi	r25, 0x09	; 9
    a430:	2b 81       	ldd	r18, Y+3	; 0x03
    a432:	fc 01       	movw	r30, r24
    a434:	20 87       	std	Z+8, r18	; 0x08
	if(i2c_1_WaitW() != I2C_ACKED)
    a436:	0e 94 0b 51 	call	0xa216	; 0xa216 <_ZL11i2c_1_WaitWv>
    a43a:	98 2f       	mov	r25, r24
    a43c:	81 e0       	ldi	r24, 0x01	; 1
    a43e:	91 30       	cpi	r25, 0x01	; 1
    a440:	09 f4       	brne	.+2      	; 0xa444 <I2C_1_GetData+0x54>
    a442:	80 e0       	ldi	r24, 0x00	; 0
    a444:	88 23       	and	r24, r24
    a446:	11 f0       	breq	.+4      	; 0xa44c <I2C_1_GetData+0x5c>
	{
		return retVal;
    a448:	89 81       	ldd	r24, Y+1	; 0x01
    a44a:	4a c0       	rjmp	.+148    	; 0xa4e0 <I2C_1_GetData+0xf0>
	}
	
	/* Send the client address for read */
	TWI1.MADDR = slaveAddr | 0x01;
    a44c:	80 e2       	ldi	r24, 0x20	; 32
    a44e:	99 e0       	ldi	r25, 0x09	; 9
    a450:	2a 81       	ldd	r18, Y+2	; 0x02
    a452:	21 60       	ori	r18, 0x01	; 1
    a454:	fc 01       	movw	r30, r24
    a456:	27 83       	std	Z+7, r18	; 0x07
	if(i2c_1_WaitW() != I2C_ACKED)
    a458:	0e 94 0b 51 	call	0xa216	; 0xa216 <_ZL11i2c_1_WaitWv>
    a45c:	98 2f       	mov	r25, r24
    a45e:	81 e0       	ldi	r24, 0x01	; 1
    a460:	91 30       	cpi	r25, 0x01	; 1
    a462:	09 f4       	brne	.+2      	; 0xa466 <I2C_1_GetData+0x76>
    a464:	80 e0       	ldi	r24, 0x00	; 0
    a466:	88 23       	and	r24, r24
    a468:	11 f0       	breq	.+4      	; 0xa46e <I2C_1_GetData+0x7e>
	{
		return retVal;	
    a46a:	89 81       	ldd	r24, Y+1	; 0x01
    a46c:	39 c0       	rjmp	.+114    	; 0xa4e0 <I2C_1_GetData+0xf0>
	}
	
	retVal = 0;
    a46e:	19 82       	std	Y+1, r1	; 0x01
	if((len != 0) && (pData !=null ))
    a470:	8e 81       	ldd	r24, Y+6	; 0x06
    a472:	88 23       	and	r24, r24
    a474:	a1 f1       	breq	.+104    	; 0xa4de <I2C_1_GetData+0xee>
    a476:	8c 81       	ldd	r24, Y+4	; 0x04
    a478:	9d 81       	ldd	r25, Y+5	; 0x05
    a47a:	89 2b       	or	r24, r25
    a47c:	81 f1       	breq	.+96     	; 0xa4de <I2C_1_GetData+0xee>
	{
		while(len--)
    a47e:	8e 81       	ldd	r24, Y+6	; 0x06
    a480:	9f ef       	ldi	r25, 0xFF	; 255
    a482:	98 0f       	add	r25, r24
    a484:	9e 83       	std	Y+6, r25	; 0x06
    a486:	91 e0       	ldi	r25, 0x01	; 1
    a488:	88 23       	and	r24, r24
    a48a:	09 f4       	brne	.+2      	; 0xa48e <I2C_1_GetData+0x9e>
    a48c:	90 e0       	ldi	r25, 0x00	; 0
    a48e:	99 23       	and	r25, r25
    a490:	31 f1       	breq	.+76     	; 0xa4de <I2C_1_GetData+0xee>
		{
			if(I2C_1_WaitR() == I2C_READY)
    a492:	0e 94 4e 51 	call	0xa29c	; 0xa29c <_ZL11I2C_1_WaitRv>
    a496:	98 2f       	mov	r25, r24
    a498:	81 e0       	ldi	r24, 0x01	; 1
    a49a:	93 30       	cpi	r25, 0x03	; 3
    a49c:	09 f0       	breq	.+2      	; 0xa4a0 <I2C_1_GetData+0xb0>
    a49e:	80 e0       	ldi	r24, 0x00	; 0
    a4a0:	88 23       	and	r24, r24
    a4a2:	e1 f0       	breq	.+56     	; 0xa4dc <I2C_1_GetData+0xec>
			{
				*pData = TWI1.MDATA;
    a4a4:	80 e2       	ldi	r24, 0x20	; 32
    a4a6:	99 e0       	ldi	r25, 0x09	; 9
    a4a8:	fc 01       	movw	r30, r24
    a4aa:	20 85       	ldd	r18, Z+8	; 0x08
    a4ac:	8c 81       	ldd	r24, Y+4	; 0x04
    a4ae:	9d 81       	ldd	r25, Y+5	; 0x05
    a4b0:	fc 01       	movw	r30, r24
    a4b2:	20 83       	st	Z, r18
				TWI1.MCTRLB = (len == 0)? TWI_ACKACT_bm | TWI_MCMD_STOP_gc : TWI_MCMD_RECVTRANS_gc;
    a4b4:	80 e2       	ldi	r24, 0x20	; 32
    a4b6:	99 e0       	ldi	r25, 0x09	; 9
    a4b8:	2e 81       	ldd	r18, Y+6	; 0x06
    a4ba:	22 23       	and	r18, r18
    a4bc:	11 f4       	brne	.+4      	; 0xa4c2 <I2C_1_GetData+0xd2>
    a4be:	27 e0       	ldi	r18, 0x07	; 7
    a4c0:	01 c0       	rjmp	.+2      	; 0xa4c4 <I2C_1_GetData+0xd4>
    a4c2:	22 e0       	ldi	r18, 0x02	; 2
    a4c4:	fc 01       	movw	r30, r24
    a4c6:	24 83       	std	Z+4, r18	; 0x04
				retVal++;
    a4c8:	89 81       	ldd	r24, Y+1	; 0x01
    a4ca:	8f 5f       	subi	r24, 0xFF	; 255
    a4cc:	89 83       	std	Y+1, r24	; 0x01
				pData++;
    a4ce:	8c 81       	ldd	r24, Y+4	; 0x04
    a4d0:	9d 81       	ldd	r25, Y+5	; 0x05
    a4d2:	01 96       	adiw	r24, 0x01	; 1
    a4d4:	8c 83       	std	Y+4, r24	; 0x04
    a4d6:	9d 83       	std	Y+5, r25	; 0x05
				continue;
    a4d8:	00 00       	nop
	}
	
	retVal = 0;
	if((len != 0) && (pData !=null ))
	{
		while(len--)
    a4da:	d1 cf       	rjmp	.-94     	; 0xa47e <I2C_1_GetData+0x8e>
				retVal++;
				pData++;
				continue;
			}
			else
			break;
    a4dc:	00 00       	nop
		}
	}
	
	return retVal;
    a4de:	89 81       	ldd	r24, Y+1	; 0x01
}
    a4e0:	26 96       	adiw	r28, 0x06	; 6
    a4e2:	cd bf       	out	0x3d, r28	; 61
    a4e4:	de bf       	out	0x3e, r29	; 62
    a4e6:	df 91       	pop	r29
    a4e8:	cf 91       	pop	r28
    a4ea:	08 95       	ret

0000a4ec <I2C_1_EndSession>:

void I2C_1_EndSession(void)
{
    a4ec:	cf 93       	push	r28
    a4ee:	df 93       	push	r29
    a4f0:	cd b7       	in	r28, 0x3d	; 61
    a4f2:	de b7       	in	r29, 0x3e	; 62
	TWI1.MCTRLB = TWI_MCMD_STOP_gc;
    a4f4:	80 e2       	ldi	r24, 0x20	; 32
    a4f6:	99 e0       	ldi	r25, 0x09	; 9
    a4f8:	23 e0       	ldi	r18, 0x03	; 3
    a4fa:	fc 01       	movw	r30, r24
    a4fc:	24 83       	std	Z+4, r18	; 0x04
}
    a4fe:	00 00       	nop
    a500:	df 91       	pop	r29
    a502:	cf 91       	pop	r28
    a504:	08 95       	ret

0000a506 <PORTC_set_pin_level>:
	}
	else
	{
		LED_set_GREEN_level(OFF);
	}
}
    a506:	cf 93       	push	r28
    a508:	df 93       	push	r29
    a50a:	00 d0       	rcall	.+0      	; 0xa50c <PORTC_set_pin_level+0x6>
    a50c:	cd b7       	in	r28, 0x3d	; 61
    a50e:	de b7       	in	r29, 0x3e	; 62
    a510:	89 83       	std	Y+1, r24	; 0x01
    a512:	6a 83       	std	Y+2, r22	; 0x02
    a514:	8a 81       	ldd	r24, Y+2	; 0x02
    a516:	88 23       	and	r24, r24
    a518:	a9 f0       	breq	.+42     	; 0xa544 <PORTC_set_pin_level+0x3e>
    a51a:	88 e0       	ldi	r24, 0x08	; 8
    a51c:	90 e0       	ldi	r25, 0x00	; 0
    a51e:	28 e0       	ldi	r18, 0x08	; 8
    a520:	30 e0       	ldi	r19, 0x00	; 0
    a522:	f9 01       	movw	r30, r18
    a524:	21 81       	ldd	r18, Z+1	; 0x01
    a526:	62 2f       	mov	r22, r18
    a528:	29 81       	ldd	r18, Y+1	; 0x01
    a52a:	42 2f       	mov	r20, r18
    a52c:	50 e0       	ldi	r21, 0x00	; 0
    a52e:	21 e0       	ldi	r18, 0x01	; 1
    a530:	30 e0       	ldi	r19, 0x00	; 0
    a532:	02 c0       	rjmp	.+4      	; 0xa538 <PORTC_set_pin_level+0x32>
    a534:	22 0f       	add	r18, r18
    a536:	33 1f       	adc	r19, r19
    a538:	4a 95       	dec	r20
    a53a:	e2 f7       	brpl	.-8      	; 0xa534 <PORTC_set_pin_level+0x2e>
    a53c:	26 2b       	or	r18, r22
    a53e:	fc 01       	movw	r30, r24
    a540:	21 83       	std	Z+1, r18	; 0x01
    a542:	15 c0       	rjmp	.+42     	; 0xa56e <PORTC_set_pin_level+0x68>
    a544:	88 e0       	ldi	r24, 0x08	; 8
    a546:	90 e0       	ldi	r25, 0x00	; 0
    a548:	28 e0       	ldi	r18, 0x08	; 8
    a54a:	30 e0       	ldi	r19, 0x00	; 0
    a54c:	f9 01       	movw	r30, r18
    a54e:	21 81       	ldd	r18, Z+1	; 0x01
    a550:	62 2f       	mov	r22, r18
    a552:	29 81       	ldd	r18, Y+1	; 0x01
    a554:	42 2f       	mov	r20, r18
    a556:	50 e0       	ldi	r21, 0x00	; 0
    a558:	21 e0       	ldi	r18, 0x01	; 1
    a55a:	30 e0       	ldi	r19, 0x00	; 0
    a55c:	02 c0       	rjmp	.+4      	; 0xa562 <PORTC_set_pin_level+0x5c>
    a55e:	22 0f       	add	r18, r18
    a560:	33 1f       	adc	r19, r19
    a562:	4a 95       	dec	r20
    a564:	e2 f7       	brpl	.-8      	; 0xa55e <PORTC_set_pin_level+0x58>
    a566:	20 95       	com	r18
    a568:	26 23       	and	r18, r22
    a56a:	fc 01       	movw	r30, r24
    a56c:	21 83       	std	Z+1, r18	; 0x01
    a56e:	00 00       	nop
    a570:	0f 90       	pop	r0
    a572:	0f 90       	pop	r0
    a574:	df 91       	pop	r29
    a576:	cf 91       	pop	r28
    a578:	08 95       	ret

0000a57a <_ZL17LED_set_RED_levelb>:
    a57a:	cf 93       	push	r28
    a57c:	df 93       	push	r29
    a57e:	1f 92       	push	r1
    a580:	cd b7       	in	r28, 0x3d	; 61
    a582:	de b7       	in	r29, 0x3e	; 62
    a584:	89 83       	std	Y+1, r24	; 0x01
    a586:	69 81       	ldd	r22, Y+1	; 0x01
    a588:	86 e0       	ldi	r24, 0x06	; 6
    a58a:	0e 94 83 52 	call	0xa506	; 0xa506 <PORTC_set_pin_level>
    a58e:	00 00       	nop
    a590:	0f 90       	pop	r0
    a592:	df 91       	pop	r29
    a594:	cf 91       	pop	r28
    a596:	08 95       	ret

0000a598 <_ZL19LED_set_GREEN_levelb>:
    a598:	cf 93       	push	r28
    a59a:	df 93       	push	r29
    a59c:	1f 92       	push	r1
    a59e:	cd b7       	in	r28, 0x3d	; 61
    a5a0:	de b7       	in	r29, 0x3e	; 62
    a5a2:	89 83       	std	Y+1, r24	; 0x01
    a5a4:	69 81       	ldd	r22, Y+1	; 0x01
    a5a6:	85 e0       	ldi	r24, 0x05	; 5
    a5a8:	0e 94 83 52 	call	0xa506	; 0xa506 <PORTC_set_pin_level>
    a5ac:	00 00       	nop
    a5ae:	0f 90       	pop	r0
    a5b0:	df 91       	pop	r29
    a5b2:	cf 91       	pop	r28
    a5b4:	08 95       	ret

0000a5b6 <_ZN4ledsC1Ev>:
    a5b6:	cf 93       	push	r28
    a5b8:	df 93       	push	r29
    a5ba:	00 d0       	rcall	.+0      	; 0xa5bc <_ZN4ledsC1Ev+0x6>
    a5bc:	cd b7       	in	r28, 0x3d	; 61
    a5be:	de b7       	in	r29, 0x3e	; 62
    a5c0:	89 83       	std	Y+1, r24	; 0x01
    a5c2:	9a 83       	std	Y+2, r25	; 0x02
    a5c4:	00 00       	nop
    a5c6:	0f 90       	pop	r0
    a5c8:	0f 90       	pop	r0
    a5ca:	df 91       	pop	r29
    a5cc:	cf 91       	pop	r28
    a5ce:	08 95       	ret

0000a5d0 <_ZN4ledsD1Ev>:
    a5d0:	cf 93       	push	r28
    a5d2:	df 93       	push	r29
    a5d4:	00 d0       	rcall	.+0      	; 0xa5d6 <_ZN4ledsD1Ev+0x6>
    a5d6:	cd b7       	in	r28, 0x3d	; 61
    a5d8:	de b7       	in	r29, 0x3e	; 62
    a5da:	89 83       	std	Y+1, r24	; 0x01
    a5dc:	9a 83       	std	Y+2, r25	; 0x02
    a5de:	00 00       	nop
    a5e0:	0f 90       	pop	r0
    a5e2:	0f 90       	pop	r0
    a5e4:	df 91       	pop	r29
    a5e6:	cf 91       	pop	r28
    a5e8:	08 95       	ret

0000a5ea <__vector_41>:
    a5ea:	1f 92       	push	r1
    a5ec:	0f 92       	push	r0
    a5ee:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    a5f2:	0f 92       	push	r0
    a5f4:	11 24       	eor	r1, r1
    a5f6:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    a5fa:	0f 92       	push	r0
    a5fc:	2f 93       	push	r18
    a5fe:	3f 93       	push	r19
    a600:	4f 93       	push	r20
    a602:	5f 93       	push	r21
    a604:	6f 93       	push	r22
    a606:	7f 93       	push	r23
    a608:	8f 93       	push	r24
    a60a:	9f 93       	push	r25
    a60c:	af 93       	push	r26
    a60e:	bf 93       	push	r27
    a610:	ef 93       	push	r30
    a612:	ff 93       	push	r31
    a614:	cf 93       	push	r28
    a616:	df 93       	push	r29
    a618:	cd b7       	in	r28, 0x3d	; 61
    a61a:	de b7       	in	r29, 0x3e	; 62
    a61c:	80 91 e4 47 	lds	r24, 0x47E4	; 0x8047e4 <_ZL17led_timeout_count>
    a620:	90 91 e5 47 	lds	r25, 0x47E5	; 0x8047e5 <_ZL17led_timeout_count+0x1>
    a624:	a0 91 e6 47 	lds	r26, 0x47E6	; 0x8047e6 <_ZL17led_timeout_count+0x2>
    a628:	b0 91 e7 47 	lds	r27, 0x47E7	; 0x8047e7 <_ZL17led_timeout_count+0x3>
    a62c:	21 e0       	ldi	r18, 0x01	; 1
    a62e:	89 2b       	or	r24, r25
    a630:	8a 2b       	or	r24, r26
    a632:	8b 2b       	or	r24, r27
    a634:	09 f4       	brne	.+2      	; 0xa638 <__vector_41+0x4e>
    a636:	20 e0       	ldi	r18, 0x00	; 0
    a638:	22 23       	and	r18, r18
    a63a:	09 f4       	brne	.+2      	; 0xa63e <__vector_41+0x54>
    a63c:	1b c1       	rjmp	.+566    	; 0xa874 <__vector_41+0x28a>
    a63e:	80 91 e4 47 	lds	r24, 0x47E4	; 0x8047e4 <_ZL17led_timeout_count>
    a642:	90 91 e5 47 	lds	r25, 0x47E5	; 0x8047e5 <_ZL17led_timeout_count+0x1>
    a646:	a0 91 e6 47 	lds	r26, 0x47E6	; 0x8047e6 <_ZL17led_timeout_count+0x2>
    a64a:	b0 91 e7 47 	lds	r27, 0x47E7	; 0x8047e7 <_ZL17led_timeout_count+0x3>
    a64e:	01 97       	sbiw	r24, 0x01	; 1
    a650:	a1 09       	sbc	r26, r1
    a652:	b1 09       	sbc	r27, r1
    a654:	80 93 e4 47 	sts	0x47E4, r24	; 0x8047e4 <_ZL17led_timeout_count>
    a658:	90 93 e5 47 	sts	0x47E5, r25	; 0x8047e5 <_ZL17led_timeout_count+0x1>
    a65c:	a0 93 e6 47 	sts	0x47E6, r26	; 0x8047e6 <_ZL17led_timeout_count+0x2>
    a660:	b0 93 e7 47 	sts	0x47E7, r27	; 0x8047e7 <_ZL17led_timeout_count+0x3>
    a664:	80 e3       	ldi	r24, 0x30	; 48
    a666:	9b e0       	ldi	r25, 0x0B	; 11
    a668:	fc 01       	movw	r30, r24
    a66a:	86 81       	ldd	r24, Z+6	; 0x06
    a66c:	88 2f       	mov	r24, r24
    a66e:	90 e0       	ldi	r25, 0x00	; 0
    a670:	81 70       	andi	r24, 0x01	; 1
    a672:	99 27       	eor	r25, r25
    a674:	21 e0       	ldi	r18, 0x01	; 1
    a676:	89 2b       	or	r24, r25
    a678:	09 f4       	brne	.+2      	; 0xa67c <__vector_41+0x92>
    a67a:	20 e0       	ldi	r18, 0x00	; 0
    a67c:	22 23       	and	r18, r18
    a67e:	09 f4       	brne	.+2      	; 0xa682 <__vector_41+0x98>
    a680:	08 c1       	rjmp	.+528    	; 0xa892 <__vector_41+0x2a8>
    a682:	80 91 f0 47 	lds	r24, 0x47F0	; 0x8047f0 <_ZL15red_blink_count>
    a686:	90 91 f1 47 	lds	r25, 0x47F1	; 0x8047f1 <_ZL15red_blink_count+0x1>
    a68a:	21 e0       	ldi	r18, 0x01	; 1
    a68c:	89 2b       	or	r24, r25
    a68e:	09 f4       	brne	.+2      	; 0xa692 <__vector_41+0xa8>
    a690:	20 e0       	ldi	r18, 0x00	; 0
    a692:	22 23       	and	r18, r18
    a694:	09 f4       	brne	.+2      	; 0xa698 <__vector_41+0xae>
    a696:	6a c0       	rjmp	.+212    	; 0xa76c <__vector_41+0x182>
    a698:	80 91 f0 47 	lds	r24, 0x47F0	; 0x8047f0 <_ZL15red_blink_count>
    a69c:	90 91 f1 47 	lds	r25, 0x47F1	; 0x8047f1 <_ZL15red_blink_count+0x1>
    a6a0:	21 e0       	ldi	r18, 0x01	; 1
    a6a2:	02 97       	sbiw	r24, 0x02	; 2
    a6a4:	0c f4       	brge	.+2      	; 0xa6a8 <__vector_41+0xbe>
    a6a6:	20 e0       	ldi	r18, 0x00	; 0
    a6a8:	22 23       	and	r18, r18
    a6aa:	69 f0       	breq	.+26     	; 0xa6c6 <__vector_41+0xdc>
    a6ac:	81 e0       	ldi	r24, 0x01	; 1
    a6ae:	0e 94 bd 52 	call	0xa57a	; 0xa57a <_ZL17LED_set_RED_levelb>
    a6b2:	80 91 f0 47 	lds	r24, 0x47F0	; 0x8047f0 <_ZL15red_blink_count>
    a6b6:	90 91 f1 47 	lds	r25, 0x47F1	; 0x8047f1 <_ZL15red_blink_count+0x1>
    a6ba:	01 97       	sbiw	r24, 0x01	; 1
    a6bc:	80 93 f0 47 	sts	0x47F0, r24	; 0x8047f0 <_ZL15red_blink_count>
    a6c0:	90 93 f1 47 	sts	0x47F1, r25	; 0x8047f1 <_ZL15red_blink_count+0x1>
    a6c4:	17 c0       	rjmp	.+46     	; 0xa6f4 <__vector_41+0x10a>
    a6c6:	80 91 f0 47 	lds	r24, 0x47F0	; 0x8047f0 <_ZL15red_blink_count>
    a6ca:	90 91 f1 47 	lds	r25, 0x47F1	; 0x8047f1 <_ZL15red_blink_count+0x1>
    a6ce:	21 e0       	ldi	r18, 0x01	; 1
    a6d0:	8f 3f       	cpi	r24, 0xFF	; 255
    a6d2:	9f 4f       	sbci	r25, 0xFF	; 255
    a6d4:	0c f0       	brlt	.+2      	; 0xa6d8 <__vector_41+0xee>
    a6d6:	20 e0       	ldi	r18, 0x00	; 0
    a6d8:	22 23       	and	r18, r18
    a6da:	61 f0       	breq	.+24     	; 0xa6f4 <__vector_41+0x10a>
    a6dc:	80 e0       	ldi	r24, 0x00	; 0
    a6de:	0e 94 bd 52 	call	0xa57a	; 0xa57a <_ZL17LED_set_RED_levelb>
    a6e2:	80 91 f0 47 	lds	r24, 0x47F0	; 0x8047f0 <_ZL15red_blink_count>
    a6e6:	90 91 f1 47 	lds	r25, 0x47F1	; 0x8047f1 <_ZL15red_blink_count+0x1>
    a6ea:	01 96       	adiw	r24, 0x01	; 1
    a6ec:	80 93 f0 47 	sts	0x47F0, r24	; 0x8047f0 <_ZL15red_blink_count>
    a6f0:	90 93 f1 47 	sts	0x47F1, r25	; 0x8047f1 <_ZL15red_blink_count+0x1>
    a6f4:	80 91 f0 47 	lds	r24, 0x47F0	; 0x8047f0 <_ZL15red_blink_count>
    a6f8:	90 91 f1 47 	lds	r25, 0x47F1	; 0x8047f1 <_ZL15red_blink_count+0x1>
    a6fc:	21 e0       	ldi	r18, 0x01	; 1
    a6fe:	01 97       	sbiw	r24, 0x01	; 1
    a700:	09 f0       	breq	.+2      	; 0xa704 <__vector_41+0x11a>
    a702:	20 e0       	ldi	r18, 0x00	; 0
    a704:	22 23       	and	r18, r18
    a706:	f9 f0       	breq	.+62     	; 0xa746 <__vector_41+0x15c>
    a708:	80 91 ea 47 	lds	r24, 0x47EA	; 0x8047ea <_ZL20red_blink_off_period>
    a70c:	90 91 eb 47 	lds	r25, 0x47EB	; 0x8047eb <_ZL20red_blink_off_period+0x1>
    a710:	21 e0       	ldi	r18, 0x01	; 1
    a712:	89 2b       	or	r24, r25
    a714:	09 f4       	brne	.+2      	; 0xa718 <__vector_41+0x12e>
    a716:	20 e0       	ldi	r18, 0x00	; 0
    a718:	22 23       	and	r18, r18
    a71a:	61 f0       	breq	.+24     	; 0xa734 <__vector_41+0x14a>
    a71c:	80 91 ea 47 	lds	r24, 0x47EA	; 0x8047ea <_ZL20red_blink_off_period>
    a720:	90 91 eb 47 	lds	r25, 0x47EB	; 0x8047eb <_ZL20red_blink_off_period+0x1>
    a724:	91 95       	neg	r25
    a726:	81 95       	neg	r24
    a728:	91 09       	sbc	r25, r1
    a72a:	80 93 f0 47 	sts	0x47F0, r24	; 0x8047f0 <_ZL15red_blink_count>
    a72e:	90 93 f1 47 	sts	0x47F1, r25	; 0x8047f1 <_ZL15red_blink_count+0x1>
    a732:	23 c0       	rjmp	.+70     	; 0xa77a <__vector_41+0x190>
    a734:	80 91 e8 47 	lds	r24, 0x47E8	; 0x8047e8 <_ZL19red_blink_on_period>
    a738:	90 91 e9 47 	lds	r25, 0x47E9	; 0x8047e9 <_ZL19red_blink_on_period+0x1>
    a73c:	80 93 f0 47 	sts	0x47F0, r24	; 0x8047f0 <_ZL15red_blink_count>
    a740:	90 93 f1 47 	sts	0x47F1, r25	; 0x8047f1 <_ZL15red_blink_count+0x1>
    a744:	1a c0       	rjmp	.+52     	; 0xa77a <__vector_41+0x190>
    a746:	80 91 f0 47 	lds	r24, 0x47F0	; 0x8047f0 <_ZL15red_blink_count>
    a74a:	90 91 f1 47 	lds	r25, 0x47F1	; 0x8047f1 <_ZL15red_blink_count+0x1>
    a74e:	21 e0       	ldi	r18, 0x01	; 1
    a750:	01 96       	adiw	r24, 0x01	; 1
    a752:	09 f0       	breq	.+2      	; 0xa756 <__vector_41+0x16c>
    a754:	20 e0       	ldi	r18, 0x00	; 0
    a756:	22 23       	and	r18, r18
    a758:	81 f0       	breq	.+32     	; 0xa77a <__vector_41+0x190>
    a75a:	80 91 e8 47 	lds	r24, 0x47E8	; 0x8047e8 <_ZL19red_blink_on_period>
    a75e:	90 91 e9 47 	lds	r25, 0x47E9	; 0x8047e9 <_ZL19red_blink_on_period+0x1>
    a762:	80 93 f0 47 	sts	0x47F0, r24	; 0x8047f0 <_ZL15red_blink_count>
    a766:	90 93 f1 47 	sts	0x47F1, r25	; 0x8047f1 <_ZL15red_blink_count+0x1>
    a76a:	07 c0       	rjmp	.+14     	; 0xa77a <__vector_41+0x190>
    a76c:	80 91 f4 47 	lds	r24, 0x47F4	; 0x8047f4 <_ZL18red_led_configured>
    a770:	88 23       	and	r24, r24
    a772:	19 f0       	breq	.+6      	; 0xa77a <__vector_41+0x190>
    a774:	80 e0       	ldi	r24, 0x00	; 0
    a776:	0e 94 bd 52 	call	0xa57a	; 0xa57a <_ZL17LED_set_RED_levelb>
    a77a:	80 91 f2 47 	lds	r24, 0x47F2	; 0x8047f2 <_ZL17green_blink_count>
    a77e:	90 91 f3 47 	lds	r25, 0x47F3	; 0x8047f3 <_ZL17green_blink_count+0x1>
    a782:	21 e0       	ldi	r18, 0x01	; 1
    a784:	89 2b       	or	r24, r25
    a786:	09 f4       	brne	.+2      	; 0xa78a <__vector_41+0x1a0>
    a788:	20 e0       	ldi	r18, 0x00	; 0
    a78a:	22 23       	and	r18, r18
    a78c:	09 f4       	brne	.+2      	; 0xa790 <__vector_41+0x1a6>
    a78e:	6a c0       	rjmp	.+212    	; 0xa864 <__vector_41+0x27a>
    a790:	80 91 f2 47 	lds	r24, 0x47F2	; 0x8047f2 <_ZL17green_blink_count>
    a794:	90 91 f3 47 	lds	r25, 0x47F3	; 0x8047f3 <_ZL17green_blink_count+0x1>
    a798:	21 e0       	ldi	r18, 0x01	; 1
    a79a:	02 97       	sbiw	r24, 0x02	; 2
    a79c:	0c f4       	brge	.+2      	; 0xa7a0 <__vector_41+0x1b6>
    a79e:	20 e0       	ldi	r18, 0x00	; 0
    a7a0:	22 23       	and	r18, r18
    a7a2:	69 f0       	breq	.+26     	; 0xa7be <__vector_41+0x1d4>
    a7a4:	81 e0       	ldi	r24, 0x01	; 1
    a7a6:	0e 94 cc 52 	call	0xa598	; 0xa598 <_ZL19LED_set_GREEN_levelb>
    a7aa:	80 91 f2 47 	lds	r24, 0x47F2	; 0x8047f2 <_ZL17green_blink_count>
    a7ae:	90 91 f3 47 	lds	r25, 0x47F3	; 0x8047f3 <_ZL17green_blink_count+0x1>
    a7b2:	01 97       	sbiw	r24, 0x01	; 1
    a7b4:	80 93 f2 47 	sts	0x47F2, r24	; 0x8047f2 <_ZL17green_blink_count>
    a7b8:	90 93 f3 47 	sts	0x47F3, r25	; 0x8047f3 <_ZL17green_blink_count+0x1>
    a7bc:	17 c0       	rjmp	.+46     	; 0xa7ec <__vector_41+0x202>
    a7be:	80 91 f2 47 	lds	r24, 0x47F2	; 0x8047f2 <_ZL17green_blink_count>
    a7c2:	90 91 f3 47 	lds	r25, 0x47F3	; 0x8047f3 <_ZL17green_blink_count+0x1>
    a7c6:	21 e0       	ldi	r18, 0x01	; 1
    a7c8:	8f 3f       	cpi	r24, 0xFF	; 255
    a7ca:	9f 4f       	sbci	r25, 0xFF	; 255
    a7cc:	0c f0       	brlt	.+2      	; 0xa7d0 <__vector_41+0x1e6>
    a7ce:	20 e0       	ldi	r18, 0x00	; 0
    a7d0:	22 23       	and	r18, r18
    a7d2:	61 f0       	breq	.+24     	; 0xa7ec <__vector_41+0x202>
    a7d4:	80 e0       	ldi	r24, 0x00	; 0
    a7d6:	0e 94 cc 52 	call	0xa598	; 0xa598 <_ZL19LED_set_GREEN_levelb>
    a7da:	80 91 f2 47 	lds	r24, 0x47F2	; 0x8047f2 <_ZL17green_blink_count>
    a7de:	90 91 f3 47 	lds	r25, 0x47F3	; 0x8047f3 <_ZL17green_blink_count+0x1>
    a7e2:	01 96       	adiw	r24, 0x01	; 1
    a7e4:	80 93 f2 47 	sts	0x47F2, r24	; 0x8047f2 <_ZL17green_blink_count>
    a7e8:	90 93 f3 47 	sts	0x47F3, r25	; 0x8047f3 <_ZL17green_blink_count+0x1>
    a7ec:	80 91 f2 47 	lds	r24, 0x47F2	; 0x8047f2 <_ZL17green_blink_count>
    a7f0:	90 91 f3 47 	lds	r25, 0x47F3	; 0x8047f3 <_ZL17green_blink_count+0x1>
    a7f4:	21 e0       	ldi	r18, 0x01	; 1
    a7f6:	01 97       	sbiw	r24, 0x01	; 1
    a7f8:	09 f0       	breq	.+2      	; 0xa7fc <__vector_41+0x212>
    a7fa:	20 e0       	ldi	r18, 0x00	; 0
    a7fc:	22 23       	and	r18, r18
    a7fe:	f9 f0       	breq	.+62     	; 0xa83e <__vector_41+0x254>
    a800:	80 91 ee 47 	lds	r24, 0x47EE	; 0x8047ee <_ZL22green_blink_off_period>
    a804:	90 91 ef 47 	lds	r25, 0x47EF	; 0x8047ef <_ZL22green_blink_off_period+0x1>
    a808:	21 e0       	ldi	r18, 0x01	; 1
    a80a:	89 2b       	or	r24, r25
    a80c:	09 f4       	brne	.+2      	; 0xa810 <__vector_41+0x226>
    a80e:	20 e0       	ldi	r18, 0x00	; 0
    a810:	22 23       	and	r18, r18
    a812:	61 f0       	breq	.+24     	; 0xa82c <__vector_41+0x242>
    a814:	80 91 ee 47 	lds	r24, 0x47EE	; 0x8047ee <_ZL22green_blink_off_period>
    a818:	90 91 ef 47 	lds	r25, 0x47EF	; 0x8047ef <_ZL22green_blink_off_period+0x1>
    a81c:	91 95       	neg	r25
    a81e:	81 95       	neg	r24
    a820:	91 09       	sbc	r25, r1
    a822:	80 93 f2 47 	sts	0x47F2, r24	; 0x8047f2 <_ZL17green_blink_count>
    a826:	90 93 f3 47 	sts	0x47F3, r25	; 0x8047f3 <_ZL17green_blink_count+0x1>
    a82a:	33 c0       	rjmp	.+102    	; 0xa892 <__vector_41+0x2a8>
    a82c:	80 91 ec 47 	lds	r24, 0x47EC	; 0x8047ec <_ZL21green_blink_on_period>
    a830:	90 91 ed 47 	lds	r25, 0x47ED	; 0x8047ed <_ZL21green_blink_on_period+0x1>
    a834:	80 93 f2 47 	sts	0x47F2, r24	; 0x8047f2 <_ZL17green_blink_count>
    a838:	90 93 f3 47 	sts	0x47F3, r25	; 0x8047f3 <_ZL17green_blink_count+0x1>
    a83c:	2a c0       	rjmp	.+84     	; 0xa892 <__vector_41+0x2a8>
    a83e:	80 91 f2 47 	lds	r24, 0x47F2	; 0x8047f2 <_ZL17green_blink_count>
    a842:	90 91 f3 47 	lds	r25, 0x47F3	; 0x8047f3 <_ZL17green_blink_count+0x1>
    a846:	21 e0       	ldi	r18, 0x01	; 1
    a848:	01 96       	adiw	r24, 0x01	; 1
    a84a:	09 f0       	breq	.+2      	; 0xa84e <__vector_41+0x264>
    a84c:	20 e0       	ldi	r18, 0x00	; 0
    a84e:	22 23       	and	r18, r18
    a850:	01 f1       	breq	.+64     	; 0xa892 <__vector_41+0x2a8>
    a852:	80 91 ec 47 	lds	r24, 0x47EC	; 0x8047ec <_ZL21green_blink_on_period>
    a856:	90 91 ed 47 	lds	r25, 0x47ED	; 0x8047ed <_ZL21green_blink_on_period+0x1>
    a85a:	80 93 f2 47 	sts	0x47F2, r24	; 0x8047f2 <_ZL17green_blink_count>
    a85e:	90 93 f3 47 	sts	0x47F3, r25	; 0x8047f3 <_ZL17green_blink_count+0x1>
    a862:	17 c0       	rjmp	.+46     	; 0xa892 <__vector_41+0x2a8>
    a864:	80 91 f5 47 	lds	r24, 0x47F5	; 0x8047f5 <_ZL20green_led_configured>
    a868:	88 23       	and	r24, r24
    a86a:	99 f0       	breq	.+38     	; 0xa892 <__vector_41+0x2a8>
    a86c:	80 e0       	ldi	r24, 0x00	; 0
    a86e:	0e 94 cc 52 	call	0xa598	; 0xa598 <_ZL19LED_set_GREEN_levelb>
    a872:	0f c0       	rjmp	.+30     	; 0xa892 <__vector_41+0x2a8>
    a874:	80 e3       	ldi	r24, 0x30	; 48
    a876:	9b e0       	ldi	r25, 0x0B	; 11
    a878:	20 e3       	ldi	r18, 0x30	; 48
    a87a:	3b e0       	ldi	r19, 0x0B	; 11
    a87c:	f9 01       	movw	r30, r18
    a87e:	25 81       	ldd	r18, Z+5	; 0x05
    a880:	2e 7f       	andi	r18, 0xFE	; 254
    a882:	fc 01       	movw	r30, r24
    a884:	25 83       	std	Z+5, r18	; 0x05
    a886:	80 e0       	ldi	r24, 0x00	; 0
    a888:	0e 94 bd 52 	call	0xa57a	; 0xa57a <_ZL17LED_set_RED_levelb>
    a88c:	80 e0       	ldi	r24, 0x00	; 0
    a88e:	0e 94 cc 52 	call	0xa598	; 0xa598 <_ZL19LED_set_GREEN_levelb>
    a892:	80 e3       	ldi	r24, 0x30	; 48
    a894:	9b e0       	ldi	r25, 0x0B	; 11
    a896:	20 e3       	ldi	r18, 0x30	; 48
    a898:	3b e0       	ldi	r19, 0x0B	; 11
    a89a:	f9 01       	movw	r30, r18
    a89c:	26 81       	ldd	r18, Z+6	; 0x06
    a89e:	21 60       	ori	r18, 0x01	; 1
    a8a0:	fc 01       	movw	r30, r24
    a8a2:	26 83       	std	Z+6, r18	; 0x06
    a8a4:	00 00       	nop
    a8a6:	df 91       	pop	r29
    a8a8:	cf 91       	pop	r28
    a8aa:	ff 91       	pop	r31
    a8ac:	ef 91       	pop	r30
    a8ae:	bf 91       	pop	r27
    a8b0:	af 91       	pop	r26
    a8b2:	9f 91       	pop	r25
    a8b4:	8f 91       	pop	r24
    a8b6:	7f 91       	pop	r23
    a8b8:	6f 91       	pop	r22
    a8ba:	5f 91       	pop	r21
    a8bc:	4f 91       	pop	r20
    a8be:	3f 91       	pop	r19
    a8c0:	2f 91       	pop	r18
    a8c2:	0f 90       	pop	r0
    a8c4:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    a8c8:	0f 90       	pop	r0
    a8ca:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    a8ce:	0f 90       	pop	r0
    a8d0:	1f 90       	pop	r1
    a8d2:	18 95       	reti

0000a8d4 <_ZN4leds6activeEv>:
    a8d4:	cf 93       	push	r28
    a8d6:	df 93       	push	r29
    a8d8:	00 d0       	rcall	.+0      	; 0xa8da <_ZN4leds6activeEv+0x6>
    a8da:	cd b7       	in	r28, 0x3d	; 61
    a8dc:	de b7       	in	r29, 0x3e	; 62
    a8de:	89 83       	std	Y+1, r24	; 0x01
    a8e0:	9a 83       	std	Y+2, r25	; 0x02
    a8e2:	80 91 e4 47 	lds	r24, 0x47E4	; 0x8047e4 <_ZL17led_timeout_count>
    a8e6:	90 91 e5 47 	lds	r25, 0x47E5	; 0x8047e5 <_ZL17led_timeout_count+0x1>
    a8ea:	a0 91 e6 47 	lds	r26, 0x47E6	; 0x8047e6 <_ZL17led_timeout_count+0x2>
    a8ee:	b0 91 e7 47 	lds	r27, 0x47E7	; 0x8047e7 <_ZL17led_timeout_count+0x3>
    a8f2:	89 2b       	or	r24, r25
    a8f4:	8a 2b       	or	r24, r26
    a8f6:	8b 2b       	or	r24, r27
    a8f8:	61 f0       	breq	.+24     	; 0xa912 <_ZN4leds6activeEv+0x3e>
    a8fa:	80 e3       	ldi	r24, 0x30	; 48
    a8fc:	9b e0       	ldi	r25, 0x0B	; 11
    a8fe:	fc 01       	movw	r30, r24
    a900:	85 81       	ldd	r24, Z+5	; 0x05
    a902:	88 2f       	mov	r24, r24
    a904:	90 e0       	ldi	r25, 0x00	; 0
    a906:	81 70       	andi	r24, 0x01	; 1
    a908:	99 27       	eor	r25, r25
    a90a:	89 2b       	or	r24, r25
    a90c:	11 f0       	breq	.+4      	; 0xa912 <_ZN4leds6activeEv+0x3e>
    a90e:	81 e0       	ldi	r24, 0x01	; 1
    a910:	01 c0       	rjmp	.+2      	; 0xa914 <_ZN4leds6activeEv+0x40>
    a912:	80 e0       	ldi	r24, 0x00	; 0
    a914:	0f 90       	pop	r0
    a916:	0f 90       	pop	r0
    a918:	df 91       	pop	r29
    a91a:	cf 91       	pop	r28
    a91c:	08 95       	ret

0000a91e <_ZN4leds6setRedEb>:
    a91e:	cf 93       	push	r28
    a920:	df 93       	push	r29
    a922:	00 d0       	rcall	.+0      	; 0xa924 <_ZN4leds6setRedEb+0x6>
    a924:	1f 92       	push	r1
    a926:	cd b7       	in	r28, 0x3d	; 61
    a928:	de b7       	in	r29, 0x3e	; 62
    a92a:	89 83       	std	Y+1, r24	; 0x01
    a92c:	9a 83       	std	Y+2, r25	; 0x02
    a92e:	6b 83       	std	Y+3, r22	; 0x03
    a930:	8b 81       	ldd	r24, Y+3	; 0x03
    a932:	88 23       	and	r24, r24
    a934:	a1 f0       	breq	.+40     	; 0xa95e <_ZN4leds6setRedEb+0x40>
    a936:	80 91 e4 47 	lds	r24, 0x47E4	; 0x8047e4 <_ZL17led_timeout_count>
    a93a:	90 91 e5 47 	lds	r25, 0x47E5	; 0x8047e5 <_ZL17led_timeout_count+0x1>
    a93e:	a0 91 e6 47 	lds	r26, 0x47E6	; 0x8047e6 <_ZL17led_timeout_count+0x2>
    a942:	b0 91 e7 47 	lds	r27, 0x47E7	; 0x8047e7 <_ZL17led_timeout_count+0x3>
    a946:	21 e0       	ldi	r18, 0x01	; 1
    a948:	89 2b       	or	r24, r25
    a94a:	8a 2b       	or	r24, r26
    a94c:	8b 2b       	or	r24, r27
    a94e:	09 f4       	brne	.+2      	; 0xa952 <_ZN4leds6setRedEb+0x34>
    a950:	20 e0       	ldi	r18, 0x00	; 0
    a952:	22 23       	and	r18, r18
    a954:	39 f0       	breq	.+14     	; 0xa964 <_ZN4leds6setRedEb+0x46>
    a956:	81 e0       	ldi	r24, 0x01	; 1
    a958:	0e 94 bd 52 	call	0xa57a	; 0xa57a <_ZL17LED_set_RED_levelb>
    a95c:	03 c0       	rjmp	.+6      	; 0xa964 <_ZN4leds6setRedEb+0x46>
    a95e:	80 e0       	ldi	r24, 0x00	; 0
    a960:	0e 94 bd 52 	call	0xa57a	; 0xa57a <_ZL17LED_set_RED_levelb>
    a964:	00 00       	nop
    a966:	23 96       	adiw	r28, 0x03	; 3
    a968:	cd bf       	out	0x3d, r28	; 61
    a96a:	de bf       	out	0x3e, r29	; 62
    a96c:	df 91       	pop	r29
    a96e:	cf 91       	pop	r28
    a970:	08 95       	ret

0000a972 <_ZN4leds6resumeEv>:

void leds::resume(void)
{
    a972:	cf 93       	push	r28
    a974:	df 93       	push	r29
    a976:	00 d0       	rcall	.+0      	; 0xa978 <_ZN4leds6resumeEv+0x6>
    a978:	cd b7       	in	r28, 0x3d	; 61
    a97a:	de b7       	in	r29, 0x3e	; 62
    a97c:	89 83       	std	Y+1, r24	; 0x01
    a97e:	9a 83       	std	Y+2, r25	; 0x02
	if(!led_timeout_count)
    a980:	80 91 e4 47 	lds	r24, 0x47E4	; 0x8047e4 <_ZL17led_timeout_count>
    a984:	90 91 e5 47 	lds	r25, 0x47E5	; 0x8047e5 <_ZL17led_timeout_count+0x1>
    a988:	a0 91 e6 47 	lds	r26, 0x47E6	; 0x8047e6 <_ZL17led_timeout_count+0x2>
    a98c:	b0 91 e7 47 	lds	r27, 0x47E7	; 0x8047e7 <_ZL17led_timeout_count+0x3>
    a990:	21 e0       	ldi	r18, 0x01	; 1
    a992:	89 2b       	or	r24, r25
    a994:	8a 2b       	or	r24, r26
    a996:	8b 2b       	or	r24, r27
    a998:	09 f0       	breq	.+2      	; 0xa99c <_ZN4leds6resumeEv+0x2a>
    a99a:	20 e0       	ldi	r18, 0x00	; 0
    a99c:	22 23       	and	r18, r18
    a99e:	a9 f0       	breq	.+42     	; 0xa9ca <_ZN4leds6resumeEv+0x58>
	{
		led_timeout_count = LED_TIMEOUT;
    a9a0:	80 e6       	ldi	r24, 0x60	; 96
    a9a2:	9a ee       	ldi	r25, 0xEA	; 234
    a9a4:	a0 e0       	ldi	r26, 0x00	; 0
    a9a6:	b0 e0       	ldi	r27, 0x00	; 0
    a9a8:	80 93 e4 47 	sts	0x47E4, r24	; 0x8047e4 <_ZL17led_timeout_count>
    a9ac:	90 93 e5 47 	sts	0x47E5, r25	; 0x8047e5 <_ZL17led_timeout_count+0x1>
    a9b0:	a0 93 e6 47 	sts	0x47E6, r26	; 0x8047e6 <_ZL17led_timeout_count+0x2>
    a9b4:	b0 93 e7 47 	sts	0x47E7, r27	; 0x8047e7 <_ZL17led_timeout_count+0x3>
		TCB3.INTCTRL |= TCB_CAPT_bm;   /* Capture or Timeout: enabled */
    a9b8:	80 e3       	ldi	r24, 0x30	; 48
    a9ba:	9b e0       	ldi	r25, 0x0B	; 11
    a9bc:	20 e3       	ldi	r18, 0x30	; 48
    a9be:	3b e0       	ldi	r19, 0x0B	; 11
    a9c0:	f9 01       	movw	r30, r18
    a9c2:	25 81       	ldd	r18, Z+5	; 0x05
    a9c4:	21 60       	ori	r18, 0x01	; 1
    a9c6:	fc 01       	movw	r30, r24
    a9c8:	25 83       	std	Z+5, r18	; 0x05
	}
}
    a9ca:	00 00       	nop
    a9cc:	0f 90       	pop	r0
    a9ce:	0f 90       	pop	r0
    a9d0:	df 91       	pop	r29
    a9d2:	cf 91       	pop	r28
    a9d4:	08 95       	ret

0000a9d6 <_ZN4leds5blinkE7Blink_t>:

void leds::blink(Blink_t blinkMode)
{
    a9d6:	cf 93       	push	r28
    a9d8:	df 93       	push	r29
    a9da:	00 d0       	rcall	.+0      	; 0xa9dc <_ZN4leds5blinkE7Blink_t+0x6>
    a9dc:	1f 92       	push	r1
    a9de:	cd b7       	in	r28, 0x3d	; 61
    a9e0:	de b7       	in	r29, 0x3e	; 62
    a9e2:	89 83       	std	Y+1, r24	; 0x01
    a9e4:	9a 83       	std	Y+2, r25	; 0x02
    a9e6:	6b 83       	std	Y+3, r22	; 0x03
	led_timeout_count = LED_TIMEOUT;
    a9e8:	80 e6       	ldi	r24, 0x60	; 96
    a9ea:	9a ee       	ldi	r25, 0xEA	; 234
    a9ec:	a0 e0       	ldi	r26, 0x00	; 0
    a9ee:	b0 e0       	ldi	r27, 0x00	; 0
    a9f0:	80 93 e4 47 	sts	0x47E4, r24	; 0x8047e4 <_ZL17led_timeout_count>
    a9f4:	90 93 e5 47 	sts	0x47E5, r25	; 0x8047e5 <_ZL17led_timeout_count+0x1>
    a9f8:	a0 93 e6 47 	sts	0x47E6, r26	; 0x8047e6 <_ZL17led_timeout_count+0x2>
    a9fc:	b0 93 e7 47 	sts	0x47E7, r27	; 0x8047e7 <_ZL17led_timeout_count+0x3>
	
	if(blinkMode != lastBlinkSetting)
    aa00:	90 91 e3 47 	lds	r25, 0x47E3	; 0x8047e3 <_ZL16lastBlinkSetting>
    aa04:	81 e0       	ldi	r24, 0x01	; 1
    aa06:	2b 81       	ldd	r18, Y+3	; 0x03
    aa08:	29 17       	cp	r18, r25
    aa0a:	09 f4       	brne	.+2      	; 0xaa0e <_ZN4leds5blinkE7Blink_t+0x38>
    aa0c:	80 e0       	ldi	r24, 0x00	; 0
    aa0e:	88 23       	and	r24, r24
    aa10:	09 f4       	brne	.+2      	; 0xaa14 <_ZN4leds5blinkE7Blink_t+0x3e>
    aa12:	ab c1       	rjmp	.+854    	; 0xad6a <_ZN4leds5blinkE7Blink_t+0x394>
	{
		TCB3.INTCTRL &= ~TCB_CAPT_bm;   /* Capture or Timeout: disabled */
    aa14:	80 e3       	ldi	r24, 0x30	; 48
    aa16:	9b e0       	ldi	r25, 0x0B	; 11
    aa18:	20 e3       	ldi	r18, 0x30	; 48
    aa1a:	3b e0       	ldi	r19, 0x0B	; 11
    aa1c:	f9 01       	movw	r30, r18
    aa1e:	25 81       	ldd	r18, Z+5	; 0x05
    aa20:	2e 7f       	andi	r18, 0xFE	; 254
    aa22:	fc 01       	movw	r30, r24
    aa24:	25 83       	std	Z+5, r18	; 0x05

		switch(blinkMode)
    aa26:	8b 81       	ldd	r24, Y+3	; 0x03
    aa28:	88 2f       	mov	r24, r24
    aa2a:	90 e0       	ldi	r25, 0x00	; 0
    aa2c:	09 2e       	mov	r0, r25
    aa2e:	00 0c       	add	r0, r0
    aa30:	aa 0b       	sbc	r26, r26
    aa32:	bb 0b       	sbc	r27, r27
    aa34:	40 e0       	ldi	r20, 0x00	; 0
    aa36:	50 e0       	ldi	r21, 0x00	; 0
    aa38:	2c e0       	ldi	r18, 0x0C	; 12
    aa3a:	30 e0       	ldi	r19, 0x00	; 0
    aa3c:	84 1b       	sub	r24, r20
    aa3e:	95 0b       	sbc	r25, r21
    aa40:	28 17       	cp	r18, r24
    aa42:	39 07       	cpc	r19, r25
    aa44:	08 f4       	brcc	.+2      	; 0xaa48 <_ZN4leds5blinkE7Blink_t+0x72>
    aa46:	7a c1       	rjmp	.+756    	; 0xad3c <_ZN4leds5blinkE7Blink_t+0x366>
    aa48:	89 52       	subi	r24, 0x29	; 41
    aa4a:	9f 4f       	sbci	r25, 0xFF	; 255
    aa4c:	fc 01       	movw	r30, r24
    aa4e:	0c 94 31 7a 	jmp	0xf462	; 0xf462 <__tablejump2__>
		{
			case LEDS_OFF:
			{
				red_blink_count = 0;
    aa52:	10 92 f0 47 	sts	0x47F0, r1	; 0x8047f0 <_ZL15red_blink_count>
    aa56:	10 92 f1 47 	sts	0x47F1, r1	; 0x8047f1 <_ZL15red_blink_count+0x1>
				green_blink_count = 0;
    aa5a:	10 92 f2 47 	sts	0x47F2, r1	; 0x8047f2 <_ZL17green_blink_count>
    aa5e:	10 92 f3 47 	sts	0x47F3, r1	; 0x8047f3 <_ZL17green_blink_count+0x1>
				LED_set_RED_level(OFF);
    aa62:	80 e0       	ldi	r24, 0x00	; 0
    aa64:	0e 94 bd 52 	call	0xa57a	; 0xa57a <_ZL17LED_set_RED_levelb>
				LED_set_GREEN_level(OFF);
    aa68:	80 e0       	ldi	r24, 0x00	; 0
    aa6a:	0e 94 cc 52 	call	0xa598	; 0xa598 <_ZL19LED_set_GREEN_levelb>
				red_led_configured = false;
    aa6e:	10 92 f4 47 	sts	0x47F4, r1	; 0x8047f4 <_ZL18red_led_configured>
				green_led_configured = false;
    aa72:	10 92 f5 47 	sts	0x47F5, r1	; 0x8047f5 <_ZL20green_led_configured>
			}
			break;
    aa76:	63 c1       	rjmp	.+710    	; 0xad3e <_ZN4leds5blinkE7Blink_t+0x368>
			
			case LEDS_RED_OFF:
			{
				LED_set_RED_level(OFF);
    aa78:	80 e0       	ldi	r24, 0x00	; 0
    aa7a:	0e 94 bd 52 	call	0xa57a	; 0xa57a <_ZL17LED_set_RED_levelb>
				red_blink_count = 0;
    aa7e:	10 92 f0 47 	sts	0x47F0, r1	; 0x8047f0 <_ZL15red_blink_count>
    aa82:	10 92 f1 47 	sts	0x47F1, r1	; 0x8047f1 <_ZL15red_blink_count+0x1>
				red_led_configured = false;
    aa86:	10 92 f4 47 	sts	0x47F4, r1	; 0x8047f4 <_ZL18red_led_configured>
			}
			break;
    aa8a:	59 c1       	rjmp	.+690    	; 0xad3e <_ZN4leds5blinkE7Blink_t+0x368>
			
			case LEDS_GREEN_OFF:
			{
				LED_set_GREEN_level(OFF);
    aa8c:	80 e0       	ldi	r24, 0x00	; 0
    aa8e:	0e 94 cc 52 	call	0xa598	; 0xa598 <_ZL19LED_set_GREEN_levelb>
				green_blink_count = 0;
    aa92:	10 92 f2 47 	sts	0x47F2, r1	; 0x8047f2 <_ZL17green_blink_count>
    aa96:	10 92 f3 47 	sts	0x47F3, r1	; 0x8047f3 <_ZL17green_blink_count+0x1>
				green_led_configured = false;
    aa9a:	10 92 f5 47 	sts	0x47F5, r1	; 0x8047f5 <_ZL20green_led_configured>
			}
			break;
    aa9e:	4f c1       	rjmp	.+670    	; 0xad3e <_ZN4leds5blinkE7Blink_t+0x368>
			
			case LEDS_RED_BLINK_FAST:
			{
				red_blink_on_period = BRIEF_ON;
    aaa0:	89 e1       	ldi	r24, 0x19	; 25
    aaa2:	90 e0       	ldi	r25, 0x00	; 0
    aaa4:	80 93 e8 47 	sts	0x47E8, r24	; 0x8047e8 <_ZL19red_blink_on_period>
    aaa8:	90 93 e9 47 	sts	0x47E9, r25	; 0x8047e9 <_ZL19red_blink_on_period+0x1>
				red_blink_off_period = BRIEF_OFF;
    aaac:	86 e9       	ldi	r24, 0x96	; 150
    aaae:	90 e0       	ldi	r25, 0x00	; 0
    aab0:	80 93 ea 47 	sts	0x47EA, r24	; 0x8047ea <_ZL20red_blink_off_period>
    aab4:	90 93 eb 47 	sts	0x47EB, r25	; 0x8047eb <_ZL20red_blink_off_period+0x1>
				red_blink_count = red_blink_on_period;	
    aab8:	80 91 e8 47 	lds	r24, 0x47E8	; 0x8047e8 <_ZL19red_blink_on_period>
    aabc:	90 91 e9 47 	lds	r25, 0x47E9	; 0x8047e9 <_ZL19red_blink_on_period+0x1>
    aac0:	80 93 f0 47 	sts	0x47F0, r24	; 0x8047f0 <_ZL15red_blink_count>
    aac4:	90 93 f1 47 	sts	0x47F1, r25	; 0x8047f1 <_ZL15red_blink_count+0x1>
				red_led_configured = true;			
    aac8:	81 e0       	ldi	r24, 0x01	; 1
    aaca:	80 93 f4 47 	sts	0x47F4, r24	; 0x8047f4 <_ZL18red_led_configured>
			}
			break;
    aace:	37 c1       	rjmp	.+622    	; 0xad3e <_ZN4leds5blinkE7Blink_t+0x368>
			
			case LEDS_GREEN_BLINK_FAST:
			{
				green_blink_on_period = BRIEF_ON;
    aad0:	89 e1       	ldi	r24, 0x19	; 25
    aad2:	90 e0       	ldi	r25, 0x00	; 0
    aad4:	80 93 ec 47 	sts	0x47EC, r24	; 0x8047ec <_ZL21green_blink_on_period>
    aad8:	90 93 ed 47 	sts	0x47ED, r25	; 0x8047ed <_ZL21green_blink_on_period+0x1>
				green_blink_off_period = BRIEF_OFF;	
    aadc:	86 e9       	ldi	r24, 0x96	; 150
    aade:	90 e0       	ldi	r25, 0x00	; 0
    aae0:	80 93 ee 47 	sts	0x47EE, r24	; 0x8047ee <_ZL22green_blink_off_period>
    aae4:	90 93 ef 47 	sts	0x47EF, r25	; 0x8047ef <_ZL22green_blink_off_period+0x1>
				green_blink_count = green_blink_on_period;			
    aae8:	80 91 ec 47 	lds	r24, 0x47EC	; 0x8047ec <_ZL21green_blink_on_period>
    aaec:	90 91 ed 47 	lds	r25, 0x47ED	; 0x8047ed <_ZL21green_blink_on_period+0x1>
    aaf0:	80 93 f2 47 	sts	0x47F2, r24	; 0x8047f2 <_ZL17green_blink_count>
    aaf4:	90 93 f3 47 	sts	0x47F3, r25	; 0x8047f3 <_ZL17green_blink_count+0x1>
				green_led_configured = true;			
    aaf8:	81 e0       	ldi	r24, 0x01	; 1
    aafa:	80 93 f5 47 	sts	0x47F5, r24	; 0x8047f5 <_ZL20green_led_configured>
			}
			break;
    aafe:	1f c1       	rjmp	.+574    	; 0xad3e <_ZN4leds5blinkE7Blink_t+0x368>
			
			case LEDS_RED_BLINK_SLOW:
			{
				red_blink_on_period = SLOW_ON;
    ab00:	84 ef       	ldi	r24, 0xF4	; 244
    ab02:	91 e0       	ldi	r25, 0x01	; 1
    ab04:	80 93 e8 47 	sts	0x47E8, r24	; 0x8047e8 <_ZL19red_blink_on_period>
    ab08:	90 93 e9 47 	sts	0x47E9, r25	; 0x8047e9 <_ZL19red_blink_on_period+0x1>
				red_blink_off_period = SLOW_OFF;
    ab0c:	84 ef       	ldi	r24, 0xF4	; 244
    ab0e:	91 e0       	ldi	r25, 0x01	; 1
    ab10:	80 93 ea 47 	sts	0x47EA, r24	; 0x8047ea <_ZL20red_blink_off_period>
    ab14:	90 93 eb 47 	sts	0x47EB, r25	; 0x8047eb <_ZL20red_blink_off_period+0x1>
				red_blink_count = red_blink_on_period;				
    ab18:	80 91 e8 47 	lds	r24, 0x47E8	; 0x8047e8 <_ZL19red_blink_on_period>
    ab1c:	90 91 e9 47 	lds	r25, 0x47E9	; 0x8047e9 <_ZL19red_blink_on_period+0x1>
    ab20:	80 93 f0 47 	sts	0x47F0, r24	; 0x8047f0 <_ZL15red_blink_count>
    ab24:	90 93 f1 47 	sts	0x47F1, r25	; 0x8047f1 <_ZL15red_blink_count+0x1>
				red_led_configured = true;			
    ab28:	81 e0       	ldi	r24, 0x01	; 1
    ab2a:	80 93 f4 47 	sts	0x47F4, r24	; 0x8047f4 <_ZL18red_led_configured>
			}
			break;
    ab2e:	07 c1       	rjmp	.+526    	; 0xad3e <_ZN4leds5blinkE7Blink_t+0x368>
			
			case LEDS_GREEN_BLINK_SLOW:
			{
				green_blink_on_period = SLOW_ON;
    ab30:	84 ef       	ldi	r24, 0xF4	; 244
    ab32:	91 e0       	ldi	r25, 0x01	; 1
    ab34:	80 93 ec 47 	sts	0x47EC, r24	; 0x8047ec <_ZL21green_blink_on_period>
    ab38:	90 93 ed 47 	sts	0x47ED, r25	; 0x8047ed <_ZL21green_blink_on_period+0x1>
				green_blink_off_period = SLOW_OFF;	
    ab3c:	84 ef       	ldi	r24, 0xF4	; 244
    ab3e:	91 e0       	ldi	r25, 0x01	; 1
    ab40:	80 93 ee 47 	sts	0x47EE, r24	; 0x8047ee <_ZL22green_blink_off_period>
    ab44:	90 93 ef 47 	sts	0x47EF, r25	; 0x8047ef <_ZL22green_blink_off_period+0x1>
				green_blink_count = green_blink_on_period;			
    ab48:	80 91 ec 47 	lds	r24, 0x47EC	; 0x8047ec <_ZL21green_blink_on_period>
    ab4c:	90 91 ed 47 	lds	r25, 0x47ED	; 0x8047ed <_ZL21green_blink_on_period+0x1>
    ab50:	80 93 f2 47 	sts	0x47F2, r24	; 0x8047f2 <_ZL17green_blink_count>
    ab54:	90 93 f3 47 	sts	0x47F3, r25	; 0x8047f3 <_ZL17green_blink_count+0x1>
				green_led_configured = true;			
    ab58:	81 e0       	ldi	r24, 0x01	; 1
    ab5a:	80 93 f5 47 	sts	0x47F5, r24	; 0x8047f5 <_ZL20green_led_configured>
			}
			break;
    ab5e:	ef c0       	rjmp	.+478    	; 0xad3e <_ZN4leds5blinkE7Blink_t+0x368>
			
			case LEDS_RED_THEN_GREEN_BLINK_SLOW:
			{
				green_blink_on_period = SLOW_ON;
    ab60:	84 ef       	ldi	r24, 0xF4	; 244
    ab62:	91 e0       	ldi	r25, 0x01	; 1
    ab64:	80 93 ec 47 	sts	0x47EC, r24	; 0x8047ec <_ZL21green_blink_on_period>
    ab68:	90 93 ed 47 	sts	0x47ED, r25	; 0x8047ed <_ZL21green_blink_on_period+0x1>
				green_blink_off_period = SLOW_OFF;	
    ab6c:	84 ef       	ldi	r24, 0xF4	; 244
    ab6e:	91 e0       	ldi	r25, 0x01	; 1
    ab70:	80 93 ee 47 	sts	0x47EE, r24	; 0x8047ee <_ZL22green_blink_off_period>
    ab74:	90 93 ef 47 	sts	0x47EF, r25	; 0x8047ef <_ZL22green_blink_off_period+0x1>
				green_blink_count = -green_blink_on_period;			
    ab78:	80 91 ec 47 	lds	r24, 0x47EC	; 0x8047ec <_ZL21green_blink_on_period>
    ab7c:	90 91 ed 47 	lds	r25, 0x47ED	; 0x8047ed <_ZL21green_blink_on_period+0x1>
    ab80:	91 95       	neg	r25
    ab82:	81 95       	neg	r24
    ab84:	91 09       	sbc	r25, r1
    ab86:	80 93 f2 47 	sts	0x47F2, r24	; 0x8047f2 <_ZL17green_blink_count>
    ab8a:	90 93 f3 47 	sts	0x47F3, r25	; 0x8047f3 <_ZL17green_blink_count+0x1>
				red_blink_on_period = SLOW_ON;
    ab8e:	84 ef       	ldi	r24, 0xF4	; 244
    ab90:	91 e0       	ldi	r25, 0x01	; 1
    ab92:	80 93 e8 47 	sts	0x47E8, r24	; 0x8047e8 <_ZL19red_blink_on_period>
    ab96:	90 93 e9 47 	sts	0x47E9, r25	; 0x8047e9 <_ZL19red_blink_on_period+0x1>
				red_blink_off_period = SLOW_OFF;
    ab9a:	84 ef       	ldi	r24, 0xF4	; 244
    ab9c:	91 e0       	ldi	r25, 0x01	; 1
    ab9e:	80 93 ea 47 	sts	0x47EA, r24	; 0x8047ea <_ZL20red_blink_off_period>
    aba2:	90 93 eb 47 	sts	0x47EB, r25	; 0x8047eb <_ZL20red_blink_off_period+0x1>
				red_blink_count = red_blink_on_period;				
    aba6:	80 91 e8 47 	lds	r24, 0x47E8	; 0x8047e8 <_ZL19red_blink_on_period>
    abaa:	90 91 e9 47 	lds	r25, 0x47E9	; 0x8047e9 <_ZL19red_blink_on_period+0x1>
    abae:	80 93 f0 47 	sts	0x47F0, r24	; 0x8047f0 <_ZL15red_blink_count>
    abb2:	90 93 f1 47 	sts	0x47F1, r25	; 0x8047f1 <_ZL15red_blink_count+0x1>
				red_led_configured = true;			
    abb6:	81 e0       	ldi	r24, 0x01	; 1
    abb8:	80 93 f4 47 	sts	0x47F4, r24	; 0x8047f4 <_ZL18red_led_configured>
				green_led_configured = true;			
    abbc:	81 e0       	ldi	r24, 0x01	; 1
    abbe:	80 93 f5 47 	sts	0x47F5, r24	; 0x8047f5 <_ZL20green_led_configured>
			}
			break;
    abc2:	bd c0       	rjmp	.+378    	; 0xad3e <_ZN4leds5blinkE7Blink_t+0x368>
			
			case LEDS_RED_THEN_GREEN_BLINK_FAST:
			{
				green_blink_on_period = FAST_ON;
    abc4:	89 e1       	ldi	r24, 0x19	; 25
    abc6:	90 e0       	ldi	r25, 0x00	; 0
    abc8:	80 93 ec 47 	sts	0x47EC, r24	; 0x8047ec <_ZL21green_blink_on_period>
    abcc:	90 93 ed 47 	sts	0x47ED, r25	; 0x8047ed <_ZL21green_blink_on_period+0x1>
				green_blink_off_period = FAST_OFF;	
    abd0:	89 e1       	ldi	r24, 0x19	; 25
    abd2:	90 e0       	ldi	r25, 0x00	; 0
    abd4:	80 93 ee 47 	sts	0x47EE, r24	; 0x8047ee <_ZL22green_blink_off_period>
    abd8:	90 93 ef 47 	sts	0x47EF, r25	; 0x8047ef <_ZL22green_blink_off_period+0x1>
				green_blink_count = -green_blink_on_period;			
    abdc:	80 91 ec 47 	lds	r24, 0x47EC	; 0x8047ec <_ZL21green_blink_on_period>
    abe0:	90 91 ed 47 	lds	r25, 0x47ED	; 0x8047ed <_ZL21green_blink_on_period+0x1>
    abe4:	91 95       	neg	r25
    abe6:	81 95       	neg	r24
    abe8:	91 09       	sbc	r25, r1
    abea:	80 93 f2 47 	sts	0x47F2, r24	; 0x8047f2 <_ZL17green_blink_count>
    abee:	90 93 f3 47 	sts	0x47F3, r25	; 0x8047f3 <_ZL17green_blink_count+0x1>
				red_blink_on_period = FAST_ON;
    abf2:	89 e1       	ldi	r24, 0x19	; 25
    abf4:	90 e0       	ldi	r25, 0x00	; 0
    abf6:	80 93 e8 47 	sts	0x47E8, r24	; 0x8047e8 <_ZL19red_blink_on_period>
    abfa:	90 93 e9 47 	sts	0x47E9, r25	; 0x8047e9 <_ZL19red_blink_on_period+0x1>
				red_blink_off_period = FAST_OFF;
    abfe:	89 e1       	ldi	r24, 0x19	; 25
    ac00:	90 e0       	ldi	r25, 0x00	; 0
    ac02:	80 93 ea 47 	sts	0x47EA, r24	; 0x8047ea <_ZL20red_blink_off_period>
    ac06:	90 93 eb 47 	sts	0x47EB, r25	; 0x8047eb <_ZL20red_blink_off_period+0x1>
				red_blink_count = red_blink_on_period;				
    ac0a:	80 91 e8 47 	lds	r24, 0x47E8	; 0x8047e8 <_ZL19red_blink_on_period>
    ac0e:	90 91 e9 47 	lds	r25, 0x47E9	; 0x8047e9 <_ZL19red_blink_on_period+0x1>
    ac12:	80 93 f0 47 	sts	0x47F0, r24	; 0x8047f0 <_ZL15red_blink_count>
    ac16:	90 93 f1 47 	sts	0x47F1, r25	; 0x8047f1 <_ZL15red_blink_count+0x1>
				red_led_configured = true;			
    ac1a:	81 e0       	ldi	r24, 0x01	; 1
    ac1c:	80 93 f4 47 	sts	0x47F4, r24	; 0x8047f4 <_ZL18red_led_configured>
				green_led_configured = true;			
    ac20:	81 e0       	ldi	r24, 0x01	; 1
    ac22:	80 93 f5 47 	sts	0x47F5, r24	; 0x8047f5 <_ZL20green_led_configured>
			}
			break;
    ac26:	8b c0       	rjmp	.+278    	; 0xad3e <_ZN4leds5blinkE7Blink_t+0x368>
			
			case LEDS_RED_AND_GREEN_BLINK_SLOW:
			{
				green_blink_on_period = SLOW_ON;
    ac28:	84 ef       	ldi	r24, 0xF4	; 244
    ac2a:	91 e0       	ldi	r25, 0x01	; 1
    ac2c:	80 93 ec 47 	sts	0x47EC, r24	; 0x8047ec <_ZL21green_blink_on_period>
    ac30:	90 93 ed 47 	sts	0x47ED, r25	; 0x8047ed <_ZL21green_blink_on_period+0x1>
				green_blink_off_period = SLOW_OFF;	
    ac34:	84 ef       	ldi	r24, 0xF4	; 244
    ac36:	91 e0       	ldi	r25, 0x01	; 1
    ac38:	80 93 ee 47 	sts	0x47EE, r24	; 0x8047ee <_ZL22green_blink_off_period>
    ac3c:	90 93 ef 47 	sts	0x47EF, r25	; 0x8047ef <_ZL22green_blink_off_period+0x1>
				green_blink_count = green_blink_on_period;			
    ac40:	80 91 ec 47 	lds	r24, 0x47EC	; 0x8047ec <_ZL21green_blink_on_period>
    ac44:	90 91 ed 47 	lds	r25, 0x47ED	; 0x8047ed <_ZL21green_blink_on_period+0x1>
    ac48:	80 93 f2 47 	sts	0x47F2, r24	; 0x8047f2 <_ZL17green_blink_count>
    ac4c:	90 93 f3 47 	sts	0x47F3, r25	; 0x8047f3 <_ZL17green_blink_count+0x1>
				red_blink_on_period = SLOW_ON;
    ac50:	84 ef       	ldi	r24, 0xF4	; 244
    ac52:	91 e0       	ldi	r25, 0x01	; 1
    ac54:	80 93 e8 47 	sts	0x47E8, r24	; 0x8047e8 <_ZL19red_blink_on_period>
    ac58:	90 93 e9 47 	sts	0x47E9, r25	; 0x8047e9 <_ZL19red_blink_on_period+0x1>
				red_blink_off_period = SLOW_OFF;
    ac5c:	84 ef       	ldi	r24, 0xF4	; 244
    ac5e:	91 e0       	ldi	r25, 0x01	; 1
    ac60:	80 93 ea 47 	sts	0x47EA, r24	; 0x8047ea <_ZL20red_blink_off_period>
    ac64:	90 93 eb 47 	sts	0x47EB, r25	; 0x8047eb <_ZL20red_blink_off_period+0x1>
				red_blink_count = red_blink_on_period;				
    ac68:	80 91 e8 47 	lds	r24, 0x47E8	; 0x8047e8 <_ZL19red_blink_on_period>
    ac6c:	90 91 e9 47 	lds	r25, 0x47E9	; 0x8047e9 <_ZL19red_blink_on_period+0x1>
    ac70:	80 93 f0 47 	sts	0x47F0, r24	; 0x8047f0 <_ZL15red_blink_count>
    ac74:	90 93 f1 47 	sts	0x47F1, r25	; 0x8047f1 <_ZL15red_blink_count+0x1>
				red_led_configured = true;			
    ac78:	81 e0       	ldi	r24, 0x01	; 1
    ac7a:	80 93 f4 47 	sts	0x47F4, r24	; 0x8047f4 <_ZL18red_led_configured>
				green_led_configured = true;			
    ac7e:	81 e0       	ldi	r24, 0x01	; 1
    ac80:	80 93 f5 47 	sts	0x47F5, r24	; 0x8047f5 <_ZL20green_led_configured>
			}
			break;
    ac84:	5c c0       	rjmp	.+184    	; 0xad3e <_ZN4leds5blinkE7Blink_t+0x368>
			
			case LEDS_RED_AND_GREEN_BLINK_FAST:
			{
				green_blink_on_period = FAST_ON;
    ac86:	89 e1       	ldi	r24, 0x19	; 25
    ac88:	90 e0       	ldi	r25, 0x00	; 0
    ac8a:	80 93 ec 47 	sts	0x47EC, r24	; 0x8047ec <_ZL21green_blink_on_period>
    ac8e:	90 93 ed 47 	sts	0x47ED, r25	; 0x8047ed <_ZL21green_blink_on_period+0x1>
				green_blink_off_period = FAST_OFF;	
    ac92:	89 e1       	ldi	r24, 0x19	; 25
    ac94:	90 e0       	ldi	r25, 0x00	; 0
    ac96:	80 93 ee 47 	sts	0x47EE, r24	; 0x8047ee <_ZL22green_blink_off_period>
    ac9a:	90 93 ef 47 	sts	0x47EF, r25	; 0x8047ef <_ZL22green_blink_off_period+0x1>
				green_blink_count = green_blink_on_period;			
    ac9e:	80 91 ec 47 	lds	r24, 0x47EC	; 0x8047ec <_ZL21green_blink_on_period>
    aca2:	90 91 ed 47 	lds	r25, 0x47ED	; 0x8047ed <_ZL21green_blink_on_period+0x1>
    aca6:	80 93 f2 47 	sts	0x47F2, r24	; 0x8047f2 <_ZL17green_blink_count>
    acaa:	90 93 f3 47 	sts	0x47F3, r25	; 0x8047f3 <_ZL17green_blink_count+0x1>
				red_blink_on_period = FAST_ON;
    acae:	89 e1       	ldi	r24, 0x19	; 25
    acb0:	90 e0       	ldi	r25, 0x00	; 0
    acb2:	80 93 e8 47 	sts	0x47E8, r24	; 0x8047e8 <_ZL19red_blink_on_period>
    acb6:	90 93 e9 47 	sts	0x47E9, r25	; 0x8047e9 <_ZL19red_blink_on_period+0x1>
				red_blink_off_period = FAST_OFF;
    acba:	89 e1       	ldi	r24, 0x19	; 25
    acbc:	90 e0       	ldi	r25, 0x00	; 0
    acbe:	80 93 ea 47 	sts	0x47EA, r24	; 0x8047ea <_ZL20red_blink_off_period>
    acc2:	90 93 eb 47 	sts	0x47EB, r25	; 0x8047eb <_ZL20red_blink_off_period+0x1>
				red_blink_count = red_blink_on_period;				
    acc6:	80 91 e8 47 	lds	r24, 0x47E8	; 0x8047e8 <_ZL19red_blink_on_period>
    acca:	90 91 e9 47 	lds	r25, 0x47E9	; 0x8047e9 <_ZL19red_blink_on_period+0x1>
    acce:	80 93 f0 47 	sts	0x47F0, r24	; 0x8047f0 <_ZL15red_blink_count>
    acd2:	90 93 f1 47 	sts	0x47F1, r25	; 0x8047f1 <_ZL15red_blink_count+0x1>
				red_led_configured = true;			
    acd6:	81 e0       	ldi	r24, 0x01	; 1
    acd8:	80 93 f4 47 	sts	0x47F4, r24	; 0x8047f4 <_ZL18red_led_configured>
				green_led_configured = true;			
    acdc:	81 e0       	ldi	r24, 0x01	; 1
    acde:	80 93 f5 47 	sts	0x47F5, r24	; 0x8047f5 <_ZL20green_led_configured>
			}
			break;
    ace2:	2d c0       	rjmp	.+90     	; 0xad3e <_ZN4leds5blinkE7Blink_t+0x368>
			
			case LEDS_RED_ON_CONSTANT:
			{
				red_blink_on_period = SLOW_ON;
    ace4:	84 ef       	ldi	r24, 0xF4	; 244
    ace6:	91 e0       	ldi	r25, 0x01	; 1
    ace8:	80 93 e8 47 	sts	0x47E8, r24	; 0x8047e8 <_ZL19red_blink_on_period>
    acec:	90 93 e9 47 	sts	0x47E9, r25	; 0x8047e9 <_ZL19red_blink_on_period+0x1>
				red_blink_off_period = 0;
    acf0:	10 92 ea 47 	sts	0x47EA, r1	; 0x8047ea <_ZL20red_blink_off_period>
    acf4:	10 92 eb 47 	sts	0x47EB, r1	; 0x8047eb <_ZL20red_blink_off_period+0x1>
				red_blink_count = red_blink_on_period;
    acf8:	80 91 e8 47 	lds	r24, 0x47E8	; 0x8047e8 <_ZL19red_blink_on_period>
    acfc:	90 91 e9 47 	lds	r25, 0x47E9	; 0x8047e9 <_ZL19red_blink_on_period+0x1>
    ad00:	80 93 f0 47 	sts	0x47F0, r24	; 0x8047f0 <_ZL15red_blink_count>
    ad04:	90 93 f1 47 	sts	0x47F1, r25	; 0x8047f1 <_ZL15red_blink_count+0x1>
				red_led_configured = true;			
    ad08:	81 e0       	ldi	r24, 0x01	; 1
    ad0a:	80 93 f4 47 	sts	0x47F4, r24	; 0x8047f4 <_ZL18red_led_configured>
			}
			break;
    ad0e:	17 c0       	rjmp	.+46     	; 0xad3e <_ZN4leds5blinkE7Blink_t+0x368>
			
			case LEDS_GREEN_ON_CONSTANT:
			{
				green_blink_on_period = SLOW_ON;
    ad10:	84 ef       	ldi	r24, 0xF4	; 244
    ad12:	91 e0       	ldi	r25, 0x01	; 1
    ad14:	80 93 ec 47 	sts	0x47EC, r24	; 0x8047ec <_ZL21green_blink_on_period>
    ad18:	90 93 ed 47 	sts	0x47ED, r25	; 0x8047ed <_ZL21green_blink_on_period+0x1>
				green_blink_off_period = 0;
    ad1c:	10 92 ee 47 	sts	0x47EE, r1	; 0x8047ee <_ZL22green_blink_off_period>
    ad20:	10 92 ef 47 	sts	0x47EF, r1	; 0x8047ef <_ZL22green_blink_off_period+0x1>
				green_blink_count = green_blink_on_period;
    ad24:	80 91 ec 47 	lds	r24, 0x47EC	; 0x8047ec <_ZL21green_blink_on_period>
    ad28:	90 91 ed 47 	lds	r25, 0x47ED	; 0x8047ed <_ZL21green_blink_on_period+0x1>
    ad2c:	80 93 f2 47 	sts	0x47F2, r24	; 0x8047f2 <_ZL17green_blink_count>
    ad30:	90 93 f3 47 	sts	0x47F3, r25	; 0x8047f3 <_ZL17green_blink_count+0x1>
				green_led_configured = true;			
    ad34:	81 e0       	ldi	r24, 0x01	; 1
    ad36:	80 93 f5 47 	sts	0x47F5, r24	; 0x8047f5 <_ZL20green_led_configured>
			}
			break;
    ad3a:	01 c0       	rjmp	.+2      	; 0xad3e <_ZN4leds5blinkE7Blink_t+0x368>
			
			default:
			{
				
			}
			break;
    ad3c:	00 00       	nop
		}
		
		if(red_led_configured || green_led_configured) 
    ad3e:	80 91 f4 47 	lds	r24, 0x47F4	; 0x8047f4 <_ZL18red_led_configured>
    ad42:	88 23       	and	r24, r24
    ad44:	21 f4       	brne	.+8      	; 0xad4e <_ZN4leds5blinkE7Blink_t+0x378>
    ad46:	80 91 f5 47 	lds	r24, 0x47F5	; 0x8047f5 <_ZL20green_led_configured>
    ad4a:	88 23       	and	r24, r24
    ad4c:	11 f0       	breq	.+4      	; 0xad52 <_ZN4leds5blinkE7Blink_t+0x37c>
    ad4e:	81 e0       	ldi	r24, 0x01	; 1
    ad50:	01 c0       	rjmp	.+2      	; 0xad54 <_ZN4leds5blinkE7Blink_t+0x37e>
    ad52:	80 e0       	ldi	r24, 0x00	; 0
    ad54:	88 23       	and	r24, r24
    ad56:	49 f0       	breq	.+18     	; 0xad6a <_ZN4leds5blinkE7Blink_t+0x394>
		{
			TCB3.INTCTRL |= TCB_CAPT_bm;   /* Capture or Timeout: enabled */
    ad58:	80 e3       	ldi	r24, 0x30	; 48
    ad5a:	9b e0       	ldi	r25, 0x0B	; 11
    ad5c:	20 e3       	ldi	r18, 0x30	; 48
    ad5e:	3b e0       	ldi	r19, 0x0B	; 11
    ad60:	f9 01       	movw	r30, r18
    ad62:	25 81       	ldd	r18, Z+5	; 0x05
    ad64:	21 60       	ori	r18, 0x01	; 1
    ad66:	fc 01       	movw	r30, r24
    ad68:	25 83       	std	Z+5, r18	; 0x05
		}
	}
	
	lastBlinkSetting = blinkMode;
    ad6a:	8b 81       	ldd	r24, Y+3	; 0x03
    ad6c:	80 93 e3 47 	sts	0x47E3, r24	; 0x8047e3 <_ZL16lastBlinkSetting>
}
    ad70:	00 00       	nop
    ad72:	23 96       	adiw	r28, 0x03	; 3
    ad74:	cd bf       	out	0x3d, r28	; 61
    ad76:	de bf       	out	0x3e, r29	; 62
    ad78:	df 91       	pop	r29
    ad7a:	cf 91       	pop	r28
    ad7c:	08 95       	ret

0000ad7e <PORTC_set_pin_pull_mode>:

void lb_send_sync(void)
{
	sprintf(g_tempMsgBuff, ".....");
	lb_send_text(g_tempMsgBuff);
}
    ad7e:	cf 93       	push	r28
    ad80:	df 93       	push	r29
    ad82:	00 d0       	rcall	.+0      	; 0xad84 <PORTC_set_pin_pull_mode+0x6>
    ad84:	00 d0       	rcall	.+0      	; 0xad86 <PORTC_set_pin_pull_mode+0x8>
    ad86:	cd b7       	in	r28, 0x3d	; 61
    ad88:	de b7       	in	r29, 0x3e	; 62
    ad8a:	8b 83       	std	Y+3, r24	; 0x03
    ad8c:	6c 83       	std	Y+4, r22	; 0x04
    ad8e:	8b 81       	ldd	r24, Y+3	; 0x03
    ad90:	88 2f       	mov	r24, r24
    ad92:	90 e0       	ldi	r25, 0x00	; 0
    ad94:	80 5b       	subi	r24, 0xB0	; 176
    ad96:	9b 4f       	sbci	r25, 0xFB	; 251
    ad98:	89 83       	std	Y+1, r24	; 0x01
    ad9a:	9a 83       	std	Y+2, r25	; 0x02
    ad9c:	8c 81       	ldd	r24, Y+4	; 0x04
    ad9e:	81 30       	cpi	r24, 0x01	; 1
    ada0:	59 f4       	brne	.+22     	; 0xadb8 <PORTC_set_pin_pull_mode+0x3a>
    ada2:	89 81       	ldd	r24, Y+1	; 0x01
    ada4:	9a 81       	ldd	r25, Y+2	; 0x02
    ada6:	fc 01       	movw	r30, r24
    ada8:	80 81       	ld	r24, Z
    adaa:	28 2f       	mov	r18, r24
    adac:	28 60       	ori	r18, 0x08	; 8
    adae:	89 81       	ldd	r24, Y+1	; 0x01
    adb0:	9a 81       	ldd	r25, Y+2	; 0x02
    adb2:	fc 01       	movw	r30, r24
    adb4:	20 83       	st	Z, r18
    adb6:	0d c0       	rjmp	.+26     	; 0xadd2 <PORTC_set_pin_pull_mode+0x54>
    adb8:	8c 81       	ldd	r24, Y+4	; 0x04
    adba:	88 23       	and	r24, r24
    adbc:	51 f4       	brne	.+20     	; 0xadd2 <PORTC_set_pin_pull_mode+0x54>
    adbe:	89 81       	ldd	r24, Y+1	; 0x01
    adc0:	9a 81       	ldd	r25, Y+2	; 0x02
    adc2:	fc 01       	movw	r30, r24
    adc4:	80 81       	ld	r24, Z
    adc6:	28 2f       	mov	r18, r24
    adc8:	27 7f       	andi	r18, 0xF7	; 247
    adca:	89 81       	ldd	r24, Y+1	; 0x01
    adcc:	9a 81       	ldd	r25, Y+2	; 0x02
    adce:	fc 01       	movw	r30, r24
    add0:	20 83       	st	Z, r18
    add2:	00 00       	nop
    add4:	24 96       	adiw	r28, 0x04	; 4
    add6:	cd bf       	out	0x3d, r28	; 61
    add8:	de bf       	out	0x3e, r29	; 62
    adda:	df 91       	pop	r29
    addc:	cf 91       	pop	r28
    adde:	08 95       	ret

0000ade0 <PORTC_set_pin_dir>:
    ade0:	cf 93       	push	r28
    ade2:	df 93       	push	r29
    ade4:	00 d0       	rcall	.+0      	; 0xade6 <PORTC_set_pin_dir+0x6>
    ade6:	cd b7       	in	r28, 0x3d	; 61
    ade8:	de b7       	in	r29, 0x3e	; 62
    adea:	89 83       	std	Y+1, r24	; 0x01
    adec:	6a 83       	std	Y+2, r22	; 0x02
    adee:	8a 81       	ldd	r24, Y+2	; 0x02
    adf0:	88 2f       	mov	r24, r24
    adf2:	90 e0       	ldi	r25, 0x00	; 0
    adf4:	81 30       	cpi	r24, 0x01	; 1
    adf6:	91 05       	cpc	r25, r1
    adf8:	e1 f0       	breq	.+56     	; 0xae32 <PORTC_set_pin_dir+0x52>
    adfa:	82 30       	cpi	r24, 0x02	; 2
    adfc:	91 05       	cpc	r25, r1
    adfe:	71 f1       	breq	.+92     	; 0xae5c <PORTC_set_pin_dir+0x7c>
    ae00:	89 2b       	or	r24, r25
    ae02:	09 f0       	breq	.+2      	; 0xae06 <PORTC_set_pin_dir+0x26>
    ae04:	3b c0       	rjmp	.+118    	; 0xae7c <PORTC_set_pin_dir+0x9c>
    ae06:	88 e0       	ldi	r24, 0x08	; 8
    ae08:	90 e0       	ldi	r25, 0x00	; 0
    ae0a:	28 e0       	ldi	r18, 0x08	; 8
    ae0c:	30 e0       	ldi	r19, 0x00	; 0
    ae0e:	f9 01       	movw	r30, r18
    ae10:	20 81       	ld	r18, Z
    ae12:	62 2f       	mov	r22, r18
    ae14:	29 81       	ldd	r18, Y+1	; 0x01
    ae16:	42 2f       	mov	r20, r18
    ae18:	50 e0       	ldi	r21, 0x00	; 0
    ae1a:	21 e0       	ldi	r18, 0x01	; 1
    ae1c:	30 e0       	ldi	r19, 0x00	; 0
    ae1e:	02 c0       	rjmp	.+4      	; 0xae24 <PORTC_set_pin_dir+0x44>
    ae20:	22 0f       	add	r18, r18
    ae22:	33 1f       	adc	r19, r19
    ae24:	4a 95       	dec	r20
    ae26:	e2 f7       	brpl	.-8      	; 0xae20 <PORTC_set_pin_dir+0x40>
    ae28:	20 95       	com	r18
    ae2a:	26 23       	and	r18, r22
    ae2c:	fc 01       	movw	r30, r24
    ae2e:	20 83       	st	Z, r18
    ae30:	25 c0       	rjmp	.+74     	; 0xae7c <PORTC_set_pin_dir+0x9c>
    ae32:	88 e0       	ldi	r24, 0x08	; 8
    ae34:	90 e0       	ldi	r25, 0x00	; 0
    ae36:	28 e0       	ldi	r18, 0x08	; 8
    ae38:	30 e0       	ldi	r19, 0x00	; 0
    ae3a:	f9 01       	movw	r30, r18
    ae3c:	20 81       	ld	r18, Z
    ae3e:	62 2f       	mov	r22, r18
    ae40:	29 81       	ldd	r18, Y+1	; 0x01
    ae42:	42 2f       	mov	r20, r18
    ae44:	50 e0       	ldi	r21, 0x00	; 0
    ae46:	21 e0       	ldi	r18, 0x01	; 1
    ae48:	30 e0       	ldi	r19, 0x00	; 0
    ae4a:	02 c0       	rjmp	.+4      	; 0xae50 <PORTC_set_pin_dir+0x70>
    ae4c:	22 0f       	add	r18, r18
    ae4e:	33 1f       	adc	r19, r19
    ae50:	4a 95       	dec	r20
    ae52:	e2 f7       	brpl	.-8      	; 0xae4c <PORTC_set_pin_dir+0x6c>
    ae54:	26 2b       	or	r18, r22
    ae56:	fc 01       	movw	r30, r24
    ae58:	20 83       	st	Z, r18
    ae5a:	10 c0       	rjmp	.+32     	; 0xae7c <PORTC_set_pin_dir+0x9c>
    ae5c:	89 81       	ldd	r24, Y+1	; 0x01
    ae5e:	88 2f       	mov	r24, r24
    ae60:	90 e0       	ldi	r25, 0x00	; 0
    ae62:	80 5b       	subi	r24, 0xB0	; 176
    ae64:	9b 4f       	sbci	r25, 0xFB	; 251
    ae66:	29 81       	ldd	r18, Y+1	; 0x01
    ae68:	22 2f       	mov	r18, r18
    ae6a:	30 e0       	ldi	r19, 0x00	; 0
    ae6c:	20 5b       	subi	r18, 0xB0	; 176
    ae6e:	3b 4f       	sbci	r19, 0xFB	; 251
    ae70:	f9 01       	movw	r30, r18
    ae72:	20 81       	ld	r18, Z
    ae74:	28 60       	ori	r18, 0x08	; 8
    ae76:	fc 01       	movw	r30, r24
    ae78:	20 83       	st	Z, r18
    ae7a:	00 00       	nop
    ae7c:	00 00       	nop
    ae7e:	0f 90       	pop	r0
    ae80:	0f 90       	pop	r0
    ae82:	df 91       	pop	r29
    ae84:	cf 91       	pop	r28
    ae86:	08 95       	ret

0000ae88 <PORTC_set_pin_level>:
    ae88:	cf 93       	push	r28
    ae8a:	df 93       	push	r29
    ae8c:	00 d0       	rcall	.+0      	; 0xae8e <PORTC_set_pin_level+0x6>
    ae8e:	cd b7       	in	r28, 0x3d	; 61
    ae90:	de b7       	in	r29, 0x3e	; 62
    ae92:	89 83       	std	Y+1, r24	; 0x01
    ae94:	6a 83       	std	Y+2, r22	; 0x02
    ae96:	8a 81       	ldd	r24, Y+2	; 0x02
    ae98:	88 23       	and	r24, r24
    ae9a:	a9 f0       	breq	.+42     	; 0xaec6 <PORTC_set_pin_level+0x3e>
    ae9c:	88 e0       	ldi	r24, 0x08	; 8
    ae9e:	90 e0       	ldi	r25, 0x00	; 0
    aea0:	28 e0       	ldi	r18, 0x08	; 8
    aea2:	30 e0       	ldi	r19, 0x00	; 0
    aea4:	f9 01       	movw	r30, r18
    aea6:	21 81       	ldd	r18, Z+1	; 0x01
    aea8:	62 2f       	mov	r22, r18
    aeaa:	29 81       	ldd	r18, Y+1	; 0x01
    aeac:	42 2f       	mov	r20, r18
    aeae:	50 e0       	ldi	r21, 0x00	; 0
    aeb0:	21 e0       	ldi	r18, 0x01	; 1
    aeb2:	30 e0       	ldi	r19, 0x00	; 0
    aeb4:	02 c0       	rjmp	.+4      	; 0xaeba <PORTC_set_pin_level+0x32>
    aeb6:	22 0f       	add	r18, r18
    aeb8:	33 1f       	adc	r19, r19
    aeba:	4a 95       	dec	r20
    aebc:	e2 f7       	brpl	.-8      	; 0xaeb6 <PORTC_set_pin_level+0x2e>
    aebe:	26 2b       	or	r18, r22
    aec0:	fc 01       	movw	r30, r24
    aec2:	21 83       	std	Z+1, r18	; 0x01
    aec4:	15 c0       	rjmp	.+42     	; 0xaef0 <PORTC_set_pin_level+0x68>
    aec6:	88 e0       	ldi	r24, 0x08	; 8
    aec8:	90 e0       	ldi	r25, 0x00	; 0
    aeca:	28 e0       	ldi	r18, 0x08	; 8
    aecc:	30 e0       	ldi	r19, 0x00	; 0
    aece:	f9 01       	movw	r30, r18
    aed0:	21 81       	ldd	r18, Z+1	; 0x01
    aed2:	62 2f       	mov	r22, r18
    aed4:	29 81       	ldd	r18, Y+1	; 0x01
    aed6:	42 2f       	mov	r20, r18
    aed8:	50 e0       	ldi	r21, 0x00	; 0
    aeda:	21 e0       	ldi	r18, 0x01	; 1
    aedc:	30 e0       	ldi	r19, 0x00	; 0
    aede:	02 c0       	rjmp	.+4      	; 0xaee4 <PORTC_set_pin_level+0x5c>
    aee0:	22 0f       	add	r18, r18
    aee2:	33 1f       	adc	r19, r19
    aee4:	4a 95       	dec	r20
    aee6:	e2 f7       	brpl	.-8      	; 0xaee0 <PORTC_set_pin_level+0x58>
    aee8:	20 95       	com	r18
    aeea:	26 23       	and	r18, r22
    aeec:	fc 01       	movw	r30, r24
    aeee:	21 83       	std	Z+1, r18	; 0x01
    aef0:	00 00       	nop
    aef2:	0f 90       	pop	r0
    aef4:	0f 90       	pop	r0
    aef6:	df 91       	pop	r29
    aef8:	cf 91       	pop	r28
    aefa:	08 95       	ret

0000aefc <PORTE_set_pin_pull_mode>:
    aefc:	cf 93       	push	r28
    aefe:	df 93       	push	r29
    af00:	00 d0       	rcall	.+0      	; 0xaf02 <PORTE_set_pin_pull_mode+0x6>
    af02:	00 d0       	rcall	.+0      	; 0xaf04 <PORTE_set_pin_pull_mode+0x8>
    af04:	cd b7       	in	r28, 0x3d	; 61
    af06:	de b7       	in	r29, 0x3e	; 62
    af08:	8b 83       	std	Y+3, r24	; 0x03
    af0a:	6c 83       	std	Y+4, r22	; 0x04
    af0c:	8b 81       	ldd	r24, Y+3	; 0x03
    af0e:	88 2f       	mov	r24, r24
    af10:	90 e0       	ldi	r25, 0x00	; 0
    af12:	80 57       	subi	r24, 0x70	; 112
    af14:	9b 4f       	sbci	r25, 0xFB	; 251
    af16:	89 83       	std	Y+1, r24	; 0x01
    af18:	9a 83       	std	Y+2, r25	; 0x02
    af1a:	8c 81       	ldd	r24, Y+4	; 0x04
    af1c:	81 30       	cpi	r24, 0x01	; 1
    af1e:	59 f4       	brne	.+22     	; 0xaf36 <PORTE_set_pin_pull_mode+0x3a>
    af20:	89 81       	ldd	r24, Y+1	; 0x01
    af22:	9a 81       	ldd	r25, Y+2	; 0x02
    af24:	fc 01       	movw	r30, r24
    af26:	80 81       	ld	r24, Z
    af28:	28 2f       	mov	r18, r24
    af2a:	28 60       	ori	r18, 0x08	; 8
    af2c:	89 81       	ldd	r24, Y+1	; 0x01
    af2e:	9a 81       	ldd	r25, Y+2	; 0x02
    af30:	fc 01       	movw	r30, r24
    af32:	20 83       	st	Z, r18
    af34:	0d c0       	rjmp	.+26     	; 0xaf50 <PORTE_set_pin_pull_mode+0x54>
    af36:	8c 81       	ldd	r24, Y+4	; 0x04
    af38:	88 23       	and	r24, r24
    af3a:	51 f4       	brne	.+20     	; 0xaf50 <PORTE_set_pin_pull_mode+0x54>
    af3c:	89 81       	ldd	r24, Y+1	; 0x01
    af3e:	9a 81       	ldd	r25, Y+2	; 0x02
    af40:	fc 01       	movw	r30, r24
    af42:	80 81       	ld	r24, Z
    af44:	28 2f       	mov	r18, r24
    af46:	27 7f       	andi	r18, 0xF7	; 247
    af48:	89 81       	ldd	r24, Y+1	; 0x01
    af4a:	9a 81       	ldd	r25, Y+2	; 0x02
    af4c:	fc 01       	movw	r30, r24
    af4e:	20 83       	st	Z, r18
    af50:	00 00       	nop
    af52:	24 96       	adiw	r28, 0x04	; 4
    af54:	cd bf       	out	0x3d, r28	; 61
    af56:	de bf       	out	0x3e, r29	; 62
    af58:	df 91       	pop	r29
    af5a:	cf 91       	pop	r28
    af5c:	08 95       	ret

0000af5e <PORTE_set_pin_dir>:
    af5e:	cf 93       	push	r28
    af60:	df 93       	push	r29
    af62:	00 d0       	rcall	.+0      	; 0xaf64 <PORTE_set_pin_dir+0x6>
    af64:	cd b7       	in	r28, 0x3d	; 61
    af66:	de b7       	in	r29, 0x3e	; 62
    af68:	89 83       	std	Y+1, r24	; 0x01
    af6a:	6a 83       	std	Y+2, r22	; 0x02
    af6c:	8a 81       	ldd	r24, Y+2	; 0x02
    af6e:	88 2f       	mov	r24, r24
    af70:	90 e0       	ldi	r25, 0x00	; 0
    af72:	81 30       	cpi	r24, 0x01	; 1
    af74:	91 05       	cpc	r25, r1
    af76:	e1 f0       	breq	.+56     	; 0xafb0 <PORTE_set_pin_dir+0x52>
    af78:	82 30       	cpi	r24, 0x02	; 2
    af7a:	91 05       	cpc	r25, r1
    af7c:	71 f1       	breq	.+92     	; 0xafda <PORTE_set_pin_dir+0x7c>
    af7e:	89 2b       	or	r24, r25
    af80:	09 f0       	breq	.+2      	; 0xaf84 <PORTE_set_pin_dir+0x26>
    af82:	3b c0       	rjmp	.+118    	; 0xaffa <PORTE_set_pin_dir+0x9c>
    af84:	80 e1       	ldi	r24, 0x10	; 16
    af86:	90 e0       	ldi	r25, 0x00	; 0
    af88:	20 e1       	ldi	r18, 0x10	; 16
    af8a:	30 e0       	ldi	r19, 0x00	; 0
    af8c:	f9 01       	movw	r30, r18
    af8e:	20 81       	ld	r18, Z
    af90:	62 2f       	mov	r22, r18
    af92:	29 81       	ldd	r18, Y+1	; 0x01
    af94:	42 2f       	mov	r20, r18
    af96:	50 e0       	ldi	r21, 0x00	; 0
    af98:	21 e0       	ldi	r18, 0x01	; 1
    af9a:	30 e0       	ldi	r19, 0x00	; 0
    af9c:	02 c0       	rjmp	.+4      	; 0xafa2 <PORTE_set_pin_dir+0x44>
    af9e:	22 0f       	add	r18, r18
    afa0:	33 1f       	adc	r19, r19
    afa2:	4a 95       	dec	r20
    afa4:	e2 f7       	brpl	.-8      	; 0xaf9e <PORTE_set_pin_dir+0x40>
    afa6:	20 95       	com	r18
    afa8:	26 23       	and	r18, r22
    afaa:	fc 01       	movw	r30, r24
    afac:	20 83       	st	Z, r18
    afae:	25 c0       	rjmp	.+74     	; 0xaffa <PORTE_set_pin_dir+0x9c>
    afb0:	80 e1       	ldi	r24, 0x10	; 16
    afb2:	90 e0       	ldi	r25, 0x00	; 0
    afb4:	20 e1       	ldi	r18, 0x10	; 16
    afb6:	30 e0       	ldi	r19, 0x00	; 0
    afb8:	f9 01       	movw	r30, r18
    afba:	20 81       	ld	r18, Z
    afbc:	62 2f       	mov	r22, r18
    afbe:	29 81       	ldd	r18, Y+1	; 0x01
    afc0:	42 2f       	mov	r20, r18
    afc2:	50 e0       	ldi	r21, 0x00	; 0
    afc4:	21 e0       	ldi	r18, 0x01	; 1
    afc6:	30 e0       	ldi	r19, 0x00	; 0
    afc8:	02 c0       	rjmp	.+4      	; 0xafce <PORTE_set_pin_dir+0x70>
    afca:	22 0f       	add	r18, r18
    afcc:	33 1f       	adc	r19, r19
    afce:	4a 95       	dec	r20
    afd0:	e2 f7       	brpl	.-8      	; 0xafca <PORTE_set_pin_dir+0x6c>
    afd2:	26 2b       	or	r18, r22
    afd4:	fc 01       	movw	r30, r24
    afd6:	20 83       	st	Z, r18
    afd8:	10 c0       	rjmp	.+32     	; 0xaffa <PORTE_set_pin_dir+0x9c>
    afda:	89 81       	ldd	r24, Y+1	; 0x01
    afdc:	88 2f       	mov	r24, r24
    afde:	90 e0       	ldi	r25, 0x00	; 0
    afe0:	80 57       	subi	r24, 0x70	; 112
    afe2:	9b 4f       	sbci	r25, 0xFB	; 251
    afe4:	29 81       	ldd	r18, Y+1	; 0x01
    afe6:	22 2f       	mov	r18, r18
    afe8:	30 e0       	ldi	r19, 0x00	; 0
    afea:	20 57       	subi	r18, 0x70	; 112
    afec:	3b 4f       	sbci	r19, 0xFB	; 251
    afee:	f9 01       	movw	r30, r18
    aff0:	20 81       	ld	r18, Z
    aff2:	28 60       	ori	r18, 0x08	; 8
    aff4:	fc 01       	movw	r30, r24
    aff6:	20 83       	st	Z, r18
    aff8:	00 00       	nop
    affa:	00 00       	nop
    affc:	0f 90       	pop	r0
    affe:	0f 90       	pop	r0
    b000:	df 91       	pop	r29
    b002:	cf 91       	pop	r28
    b004:	08 95       	ret

0000b006 <PORTE_set_pin_level>:
    b006:	cf 93       	push	r28
    b008:	df 93       	push	r29
    b00a:	00 d0       	rcall	.+0      	; 0xb00c <PORTE_set_pin_level+0x6>
    b00c:	cd b7       	in	r28, 0x3d	; 61
    b00e:	de b7       	in	r29, 0x3e	; 62
    b010:	89 83       	std	Y+1, r24	; 0x01
    b012:	6a 83       	std	Y+2, r22	; 0x02
    b014:	8a 81       	ldd	r24, Y+2	; 0x02
    b016:	88 23       	and	r24, r24
    b018:	a9 f0       	breq	.+42     	; 0xb044 <PORTE_set_pin_level+0x3e>
    b01a:	80 e1       	ldi	r24, 0x10	; 16
    b01c:	90 e0       	ldi	r25, 0x00	; 0
    b01e:	20 e1       	ldi	r18, 0x10	; 16
    b020:	30 e0       	ldi	r19, 0x00	; 0
    b022:	f9 01       	movw	r30, r18
    b024:	21 81       	ldd	r18, Z+1	; 0x01
    b026:	62 2f       	mov	r22, r18
    b028:	29 81       	ldd	r18, Y+1	; 0x01
    b02a:	42 2f       	mov	r20, r18
    b02c:	50 e0       	ldi	r21, 0x00	; 0
    b02e:	21 e0       	ldi	r18, 0x01	; 1
    b030:	30 e0       	ldi	r19, 0x00	; 0
    b032:	02 c0       	rjmp	.+4      	; 0xb038 <PORTE_set_pin_level+0x32>
    b034:	22 0f       	add	r18, r18
    b036:	33 1f       	adc	r19, r19
    b038:	4a 95       	dec	r20
    b03a:	e2 f7       	brpl	.-8      	; 0xb034 <PORTE_set_pin_level+0x2e>
    b03c:	26 2b       	or	r18, r22
    b03e:	fc 01       	movw	r30, r24
    b040:	21 83       	std	Z+1, r18	; 0x01
    b042:	15 c0       	rjmp	.+42     	; 0xb06e <PORTE_set_pin_level+0x68>
    b044:	80 e1       	ldi	r24, 0x10	; 16
    b046:	90 e0       	ldi	r25, 0x00	; 0
    b048:	20 e1       	ldi	r18, 0x10	; 16
    b04a:	30 e0       	ldi	r19, 0x00	; 0
    b04c:	f9 01       	movw	r30, r18
    b04e:	21 81       	ldd	r18, Z+1	; 0x01
    b050:	62 2f       	mov	r22, r18
    b052:	29 81       	ldd	r18, Y+1	; 0x01
    b054:	42 2f       	mov	r20, r18
    b056:	50 e0       	ldi	r21, 0x00	; 0
    b058:	21 e0       	ldi	r18, 0x01	; 1
    b05a:	30 e0       	ldi	r19, 0x00	; 0
    b05c:	02 c0       	rjmp	.+4      	; 0xb062 <PORTE_set_pin_level+0x5c>
    b05e:	22 0f       	add	r18, r18
    b060:	33 1f       	adc	r19, r19
    b062:	4a 95       	dec	r20
    b064:	e2 f7       	brpl	.-8      	; 0xb05e <PORTE_set_pin_level+0x58>
    b066:	20 95       	com	r18
    b068:	26 23       	and	r18, r22
    b06a:	fc 01       	movw	r30, r24
    b06c:	21 83       	std	Z+1, r18	; 0x01
    b06e:	00 00       	nop
    b070:	0f 90       	pop	r0
    b072:	0f 90       	pop	r0
    b074:	df 91       	pop	r29
    b076:	cf 91       	pop	r28
    b078:	08 95       	ret

0000b07a <PC0_set_dir>:
    b07a:	cf 93       	push	r28
    b07c:	df 93       	push	r29
    b07e:	1f 92       	push	r1
    b080:	cd b7       	in	r28, 0x3d	; 61
    b082:	de b7       	in	r29, 0x3e	; 62
    b084:	89 83       	std	Y+1, r24	; 0x01
    b086:	69 81       	ldd	r22, Y+1	; 0x01
    b088:	80 e0       	ldi	r24, 0x00	; 0
    b08a:	0e 94 f0 56 	call	0xade0	; 0xade0 <PORTC_set_pin_dir>
    b08e:	00 00       	nop
    b090:	0f 90       	pop	r0
    b092:	df 91       	pop	r29
    b094:	cf 91       	pop	r28
    b096:	08 95       	ret

0000b098 <PC0_set_level>:
    b098:	cf 93       	push	r28
    b09a:	df 93       	push	r29
    b09c:	1f 92       	push	r1
    b09e:	cd b7       	in	r28, 0x3d	; 61
    b0a0:	de b7       	in	r29, 0x3e	; 62
    b0a2:	89 83       	std	Y+1, r24	; 0x01
    b0a4:	69 81       	ldd	r22, Y+1	; 0x01
    b0a6:	80 e0       	ldi	r24, 0x00	; 0
    b0a8:	0e 94 44 57 	call	0xae88	; 0xae88 <PORTC_set_pin_level>
    b0ac:	00 00       	nop
    b0ae:	0f 90       	pop	r0
    b0b0:	df 91       	pop	r29
    b0b2:	cf 91       	pop	r28
    b0b4:	08 95       	ret

0000b0b6 <PC1_set_pull_mode>:
    b0b6:	cf 93       	push	r28
    b0b8:	df 93       	push	r29
    b0ba:	1f 92       	push	r1
    b0bc:	cd b7       	in	r28, 0x3d	; 61
    b0be:	de b7       	in	r29, 0x3e	; 62
    b0c0:	89 83       	std	Y+1, r24	; 0x01
    b0c2:	69 81       	ldd	r22, Y+1	; 0x01
    b0c4:	81 e0       	ldi	r24, 0x01	; 1
    b0c6:	0e 94 bf 56 	call	0xad7e	; 0xad7e <PORTC_set_pin_pull_mode>
    b0ca:	00 00       	nop
    b0cc:	0f 90       	pop	r0
    b0ce:	df 91       	pop	r29
    b0d0:	cf 91       	pop	r28
    b0d2:	08 95       	ret

0000b0d4 <PC1_set_dir>:
    b0d4:	cf 93       	push	r28
    b0d6:	df 93       	push	r29
    b0d8:	1f 92       	push	r1
    b0da:	cd b7       	in	r28, 0x3d	; 61
    b0dc:	de b7       	in	r29, 0x3e	; 62
    b0de:	89 83       	std	Y+1, r24	; 0x01
    b0e0:	69 81       	ldd	r22, Y+1	; 0x01
    b0e2:	81 e0       	ldi	r24, 0x01	; 1
    b0e4:	0e 94 f0 56 	call	0xade0	; 0xade0 <PORTC_set_pin_dir>
    b0e8:	00 00       	nop
    b0ea:	0f 90       	pop	r0
    b0ec:	df 91       	pop	r29
    b0ee:	cf 91       	pop	r28
    b0f0:	08 95       	ret

0000b0f2 <PE0_set_dir>:
    b0f2:	cf 93       	push	r28
    b0f4:	df 93       	push	r29
    b0f6:	1f 92       	push	r1
    b0f8:	cd b7       	in	r28, 0x3d	; 61
    b0fa:	de b7       	in	r29, 0x3e	; 62
    b0fc:	89 83       	std	Y+1, r24	; 0x01
    b0fe:	69 81       	ldd	r22, Y+1	; 0x01
    b100:	80 e0       	ldi	r24, 0x00	; 0
    b102:	0e 94 af 57 	call	0xaf5e	; 0xaf5e <PORTE_set_pin_dir>
    b106:	00 00       	nop
    b108:	0f 90       	pop	r0
    b10a:	df 91       	pop	r29
    b10c:	cf 91       	pop	r28
    b10e:	08 95       	ret

0000b110 <PE0_set_level>:
    b110:	cf 93       	push	r28
    b112:	df 93       	push	r29
    b114:	1f 92       	push	r1
    b116:	cd b7       	in	r28, 0x3d	; 61
    b118:	de b7       	in	r29, 0x3e	; 62
    b11a:	89 83       	std	Y+1, r24	; 0x01
    b11c:	69 81       	ldd	r22, Y+1	; 0x01
    b11e:	80 e0       	ldi	r24, 0x00	; 0
    b120:	0e 94 03 58 	call	0xb006	; 0xb006 <PORTE_set_pin_level>
    b124:	00 00       	nop
    b126:	0f 90       	pop	r0
    b128:	df 91       	pop	r29
    b12a:	cf 91       	pop	r28
    b12c:	08 95       	ret

0000b12e <PE1_set_pull_mode>:
    b12e:	cf 93       	push	r28
    b130:	df 93       	push	r29
    b132:	1f 92       	push	r1
    b134:	cd b7       	in	r28, 0x3d	; 61
    b136:	de b7       	in	r29, 0x3e	; 62
    b138:	89 83       	std	Y+1, r24	; 0x01
    b13a:	69 81       	ldd	r22, Y+1	; 0x01
    b13c:	81 e0       	ldi	r24, 0x01	; 1
    b13e:	0e 94 7e 57 	call	0xaefc	; 0xaefc <PORTE_set_pin_pull_mode>
    b142:	00 00       	nop
    b144:	0f 90       	pop	r0
    b146:	df 91       	pop	r29
    b148:	cf 91       	pop	r28
    b14a:	08 95       	ret

0000b14c <PE1_set_dir>:
    b14c:	cf 93       	push	r28
    b14e:	df 93       	push	r29
    b150:	1f 92       	push	r1
    b152:	cd b7       	in	r28, 0x3d	; 61
    b154:	de b7       	in	r29, 0x3e	; 62
    b156:	89 83       	std	Y+1, r24	; 0x01
    b158:	69 81       	ldd	r22, Y+1	; 0x01
    b15a:	81 e0       	ldi	r24, 0x01	; 1
    b15c:	0e 94 af 57 	call	0xaf5e	; 0xaf5e <PORTE_set_pin_dir>
    b160:	00 00       	nop
    b162:	0f 90       	pop	r0
    b164:	df 91       	pop	r29
    b166:	cf 91       	pop	r28
    b168:	08 95       	ret

0000b16a <_Z18nextFullLBTxBufferv>:
    b16a:	cf 93       	push	r28
    b16c:	df 93       	push	r29
    b16e:	00 d0       	rcall	.+0      	; 0xb170 <_Z18nextFullLBTxBufferv+0x6>
    b170:	cd b7       	in	r28, 0x3d	; 61
    b172:	de b7       	in	r29, 0x3e	; 62
    b174:	81 e0       	ldi	r24, 0x01	; 1
    b176:	89 83       	std	Y+1, r24	; 0x01
    b178:	1a 82       	std	Y+2, r1	; 0x02
    b17a:	80 91 75 49 	lds	r24, 0x4975	; 0x804975 <_ZZ18nextFullLBTxBuffervE11bufferIndex>
    b17e:	28 2f       	mov	r18, r24
    b180:	30 e0       	ldi	r19, 0x00	; 0
    b182:	42 e3       	ldi	r20, 0x32	; 50
    b184:	42 9f       	mul	r20, r18
    b186:	c0 01       	movw	r24, r0
    b188:	43 9f       	mul	r20, r19
    b18a:	90 0d       	add	r25, r0
    b18c:	11 24       	eor	r1, r1
    b18e:	87 5d       	subi	r24, 0xD7	; 215
    b190:	97 4b       	sbci	r25, 0xB7	; 183
    b192:	fc 01       	movw	r30, r24
    b194:	80 81       	ld	r24, Z
    b196:	88 23       	and	r24, r24
    b198:	c1 f4       	brne	.+48     	; 0xb1ca <_Z18nextFullLBTxBufferv+0x60>
    b19a:	8a 81       	ldd	r24, Y+2	; 0x02
    b19c:	8f 5f       	subi	r24, 0xFF	; 255
    b19e:	8a 83       	std	Y+2, r24	; 0x02
    b1a0:	81 e0       	ldi	r24, 0x01	; 1
    b1a2:	9a 81       	ldd	r25, Y+2	; 0x02
    b1a4:	94 30       	cpi	r25, 0x04	; 4
    b1a6:	08 f4       	brcc	.+2      	; 0xb1aa <_Z18nextFullLBTxBufferv+0x40>
    b1a8:	80 e0       	ldi	r24, 0x00	; 0
    b1aa:	88 23       	and	r24, r24
    b1ac:	11 f0       	breq	.+4      	; 0xb1b2 <_Z18nextFullLBTxBufferv+0x48>
    b1ae:	19 82       	std	Y+1, r1	; 0x01
    b1b0:	0c c0       	rjmp	.+24     	; 0xb1ca <_Z18nextFullLBTxBufferv+0x60>
    b1b2:	80 91 75 49 	lds	r24, 0x4975	; 0x804975 <_ZZ18nextFullLBTxBuffervE11bufferIndex>
    b1b6:	8f 5f       	subi	r24, 0xFF	; 255
    b1b8:	80 93 75 49 	sts	0x4975, r24	; 0x804975 <_ZZ18nextFullLBTxBuffervE11bufferIndex>
    b1bc:	80 91 75 49 	lds	r24, 0x4975	; 0x804975 <_ZZ18nextFullLBTxBuffervE11bufferIndex>
    b1c0:	84 30       	cpi	r24, 0x04	; 4
    b1c2:	d8 f2       	brcs	.-74     	; 0xb17a <_Z18nextFullLBTxBufferv+0x10>
    b1c4:	10 92 75 49 	sts	0x4975, r1	; 0x804975 <_ZZ18nextFullLBTxBuffervE11bufferIndex>
    b1c8:	d8 cf       	rjmp	.-80     	; 0xb17a <_Z18nextFullLBTxBufferv+0x10>
    b1ca:	89 81       	ldd	r24, Y+1	; 0x01
    b1cc:	88 23       	and	r24, r24
    b1ce:	69 f0       	breq	.+26     	; 0xb1ea <_Z18nextFullLBTxBufferv+0x80>
    b1d0:	80 91 75 49 	lds	r24, 0x4975	; 0x804975 <_ZZ18nextFullLBTxBuffervE11bufferIndex>
    b1d4:	28 2f       	mov	r18, r24
    b1d6:	30 e0       	ldi	r19, 0x00	; 0
    b1d8:	42 e3       	ldi	r20, 0x32	; 50
    b1da:	42 9f       	mul	r20, r18
    b1dc:	c0 01       	movw	r24, r0
    b1de:	43 9f       	mul	r20, r19
    b1e0:	90 0d       	add	r25, r0
    b1e2:	11 24       	eor	r1, r1
    b1e4:	87 5d       	subi	r24, 0xD7	; 215
    b1e6:	97 4b       	sbci	r25, 0xB7	; 183
    b1e8:	02 c0       	rjmp	.+4      	; 0xb1ee <_Z18nextFullLBTxBufferv+0x84>
    b1ea:	80 e0       	ldi	r24, 0x00	; 0
    b1ec:	90 e0       	ldi	r25, 0x00	; 0
    b1ee:	0f 90       	pop	r0
    b1f0:	0f 90       	pop	r0
    b1f2:	df 91       	pop	r29
    b1f4:	cf 91       	pop	r28
    b1f6:	08 95       	ret

0000b1f8 <_Z19nextEmptyLBTxBufferv>:
    b1f8:	cf 93       	push	r28
    b1fa:	df 93       	push	r29
    b1fc:	00 d0       	rcall	.+0      	; 0xb1fe <_Z19nextEmptyLBTxBufferv+0x6>
    b1fe:	cd b7       	in	r28, 0x3d	; 61
    b200:	de b7       	in	r29, 0x3e	; 62
    b202:	81 e0       	ldi	r24, 0x01	; 1
    b204:	89 83       	std	Y+1, r24	; 0x01
    b206:	1a 82       	std	Y+2, r1	; 0x02
    b208:	80 91 76 49 	lds	r24, 0x4976	; 0x804976 <_ZZ19nextEmptyLBTxBuffervE11bufferIndex>
    b20c:	28 2f       	mov	r18, r24
    b20e:	30 e0       	ldi	r19, 0x00	; 0
    b210:	42 e3       	ldi	r20, 0x32	; 50
    b212:	42 9f       	mul	r20, r18
    b214:	c0 01       	movw	r24, r0
    b216:	43 9f       	mul	r20, r19
    b218:	90 0d       	add	r25, r0
    b21a:	11 24       	eor	r1, r1
    b21c:	87 5d       	subi	r24, 0xD7	; 215
    b21e:	97 4b       	sbci	r25, 0xB7	; 183
    b220:	fc 01       	movw	r30, r24
    b222:	80 81       	ld	r24, Z
    b224:	88 23       	and	r24, r24
    b226:	c1 f0       	breq	.+48     	; 0xb258 <_Z19nextEmptyLBTxBufferv+0x60>
    b228:	8a 81       	ldd	r24, Y+2	; 0x02
    b22a:	8f 5f       	subi	r24, 0xFF	; 255
    b22c:	8a 83       	std	Y+2, r24	; 0x02
    b22e:	81 e0       	ldi	r24, 0x01	; 1
    b230:	9a 81       	ldd	r25, Y+2	; 0x02
    b232:	94 30       	cpi	r25, 0x04	; 4
    b234:	08 f4       	brcc	.+2      	; 0xb238 <_Z19nextEmptyLBTxBufferv+0x40>
    b236:	80 e0       	ldi	r24, 0x00	; 0
    b238:	88 23       	and	r24, r24
    b23a:	11 f0       	breq	.+4      	; 0xb240 <_Z19nextEmptyLBTxBufferv+0x48>
    b23c:	19 82       	std	Y+1, r1	; 0x01
    b23e:	0c c0       	rjmp	.+24     	; 0xb258 <_Z19nextEmptyLBTxBufferv+0x60>
    b240:	80 91 76 49 	lds	r24, 0x4976	; 0x804976 <_ZZ19nextEmptyLBTxBuffervE11bufferIndex>
    b244:	8f 5f       	subi	r24, 0xFF	; 255
    b246:	80 93 76 49 	sts	0x4976, r24	; 0x804976 <_ZZ19nextEmptyLBTxBuffervE11bufferIndex>
    b24a:	80 91 76 49 	lds	r24, 0x4976	; 0x804976 <_ZZ19nextEmptyLBTxBuffervE11bufferIndex>
    b24e:	84 30       	cpi	r24, 0x04	; 4
    b250:	d8 f2       	brcs	.-74     	; 0xb208 <_Z19nextEmptyLBTxBufferv+0x10>
    b252:	10 92 76 49 	sts	0x4976, r1	; 0x804976 <_ZZ19nextEmptyLBTxBuffervE11bufferIndex>
    b256:	d8 cf       	rjmp	.-80     	; 0xb208 <_Z19nextEmptyLBTxBufferv+0x10>
    b258:	89 81       	ldd	r24, Y+1	; 0x01
    b25a:	88 23       	and	r24, r24
    b25c:	69 f0       	breq	.+26     	; 0xb278 <_Z19nextEmptyLBTxBufferv+0x80>
    b25e:	80 91 76 49 	lds	r24, 0x4976	; 0x804976 <_ZZ19nextEmptyLBTxBuffervE11bufferIndex>
    b262:	28 2f       	mov	r18, r24
    b264:	30 e0       	ldi	r19, 0x00	; 0
    b266:	42 e3       	ldi	r20, 0x32	; 50
    b268:	42 9f       	mul	r20, r18
    b26a:	c0 01       	movw	r24, r0
    b26c:	43 9f       	mul	r20, r19
    b26e:	90 0d       	add	r25, r0
    b270:	11 24       	eor	r1, r1
    b272:	87 5d       	subi	r24, 0xD7	; 215
    b274:	97 4b       	sbci	r25, 0xB7	; 183
    b276:	02 c0       	rjmp	.+4      	; 0xb27c <_Z19nextEmptyLBTxBufferv+0x84>
    b278:	80 e0       	ldi	r24, 0x00	; 0
    b27a:	90 e0       	ldi	r25, 0x00	; 0
    b27c:	0f 90       	pop	r0
    b27e:	0f 90       	pop	r0
    b280:	df 91       	pop	r29
    b282:	cf 91       	pop	r28
    b284:	08 95       	ret

0000b286 <_Z19nextEmptyLBRxBufferv>:
    b286:	cf 93       	push	r28
    b288:	df 93       	push	r29
    b28a:	00 d0       	rcall	.+0      	; 0xb28c <_Z19nextEmptyLBRxBufferv+0x6>
    b28c:	cd b7       	in	r28, 0x3d	; 61
    b28e:	de b7       	in	r29, 0x3e	; 62
    b290:	81 e0       	ldi	r24, 0x01	; 1
    b292:	89 83       	std	Y+1, r24	; 0x01
    b294:	1a 82       	std	Y+2, r1	; 0x02
    b296:	80 91 77 49 	lds	r24, 0x4977	; 0x804977 <_ZZ19nextEmptyLBRxBuffervE11bufferIndex>
    b29a:	28 2f       	mov	r18, r24
    b29c:	30 e0       	ldi	r19, 0x00	; 0
    b29e:	42 e4       	ldi	r20, 0x42	; 66
    b2a0:	42 9f       	mul	r20, r18
    b2a2:	c0 01       	movw	r24, r0
    b2a4:	43 9f       	mul	r20, r19
    b2a6:	90 0d       	add	r25, r0
    b2a8:	11 24       	eor	r1, r1
    b2aa:	8e 50       	subi	r24, 0x0E	; 14
    b2ac:	97 4b       	sbci	r25, 0xB7	; 183
    b2ae:	fc 01       	movw	r30, r24
    b2b0:	80 81       	ld	r24, Z
    b2b2:	91 81       	ldd	r25, Z+1	; 0x01
    b2b4:	89 2b       	or	r24, r25
    b2b6:	c1 f0       	breq	.+48     	; 0xb2e8 <_Z19nextEmptyLBRxBufferv+0x62>
    b2b8:	8a 81       	ldd	r24, Y+2	; 0x02
    b2ba:	8f 5f       	subi	r24, 0xFF	; 255
    b2bc:	8a 83       	std	Y+2, r24	; 0x02
    b2be:	81 e0       	ldi	r24, 0x01	; 1
    b2c0:	9a 81       	ldd	r25, Y+2	; 0x02
    b2c2:	92 30       	cpi	r25, 0x02	; 2
    b2c4:	08 f4       	brcc	.+2      	; 0xb2c8 <_Z19nextEmptyLBRxBufferv+0x42>
    b2c6:	80 e0       	ldi	r24, 0x00	; 0
    b2c8:	88 23       	and	r24, r24
    b2ca:	11 f0       	breq	.+4      	; 0xb2d0 <_Z19nextEmptyLBRxBufferv+0x4a>
    b2cc:	19 82       	std	Y+1, r1	; 0x01
    b2ce:	0c c0       	rjmp	.+24     	; 0xb2e8 <_Z19nextEmptyLBRxBufferv+0x62>
    b2d0:	80 91 77 49 	lds	r24, 0x4977	; 0x804977 <_ZZ19nextEmptyLBRxBuffervE11bufferIndex>
    b2d4:	8f 5f       	subi	r24, 0xFF	; 255
    b2d6:	80 93 77 49 	sts	0x4977, r24	; 0x804977 <_ZZ19nextEmptyLBRxBuffervE11bufferIndex>
    b2da:	80 91 77 49 	lds	r24, 0x4977	; 0x804977 <_ZZ19nextEmptyLBRxBuffervE11bufferIndex>
    b2de:	82 30       	cpi	r24, 0x02	; 2
    b2e0:	d0 f2       	brcs	.-76     	; 0xb296 <_Z19nextEmptyLBRxBufferv+0x10>
    b2e2:	10 92 77 49 	sts	0x4977, r1	; 0x804977 <_ZZ19nextEmptyLBRxBuffervE11bufferIndex>
    b2e6:	d7 cf       	rjmp	.-82     	; 0xb296 <_Z19nextEmptyLBRxBufferv+0x10>
    b2e8:	89 81       	ldd	r24, Y+1	; 0x01
    b2ea:	88 23       	and	r24, r24
    b2ec:	69 f0       	breq	.+26     	; 0xb308 <_Z19nextEmptyLBRxBufferv+0x82>
    b2ee:	80 91 77 49 	lds	r24, 0x4977	; 0x804977 <_ZZ19nextEmptyLBRxBuffervE11bufferIndex>
    b2f2:	28 2f       	mov	r18, r24
    b2f4:	30 e0       	ldi	r19, 0x00	; 0
    b2f6:	42 e4       	ldi	r20, 0x42	; 66
    b2f8:	42 9f       	mul	r20, r18
    b2fa:	c0 01       	movw	r24, r0
    b2fc:	43 9f       	mul	r20, r19
    b2fe:	90 0d       	add	r25, r0
    b300:	11 24       	eor	r1, r1
    b302:	8f 50       	subi	r24, 0x0F	; 15
    b304:	97 4b       	sbci	r25, 0xB7	; 183
    b306:	02 c0       	rjmp	.+4      	; 0xb30c <_Z19nextEmptyLBRxBufferv+0x86>
    b308:	80 e0       	ldi	r24, 0x00	; 0
    b30a:	90 e0       	ldi	r25, 0x00	; 0
    b30c:	0f 90       	pop	r0
    b30e:	0f 90       	pop	r0
    b310:	df 91       	pop	r29
    b312:	cf 91       	pop	r28
    b314:	08 95       	ret

0000b316 <_Z18nextFullLBRxBufferv>:
    b316:	cf 93       	push	r28
    b318:	df 93       	push	r29
    b31a:	00 d0       	rcall	.+0      	; 0xb31c <_Z18nextFullLBRxBufferv+0x6>
    b31c:	cd b7       	in	r28, 0x3d	; 61
    b31e:	de b7       	in	r29, 0x3e	; 62
    b320:	81 e0       	ldi	r24, 0x01	; 1
    b322:	89 83       	std	Y+1, r24	; 0x01
    b324:	1a 82       	std	Y+2, r1	; 0x02
    b326:	80 91 78 49 	lds	r24, 0x4978	; 0x804978 <_ZZ18nextFullLBRxBuffervE11bufferIndex>
    b32a:	28 2f       	mov	r18, r24
    b32c:	30 e0       	ldi	r19, 0x00	; 0
    b32e:	42 e4       	ldi	r20, 0x42	; 66
    b330:	42 9f       	mul	r20, r18
    b332:	c0 01       	movw	r24, r0
    b334:	43 9f       	mul	r20, r19
    b336:	90 0d       	add	r25, r0
    b338:	11 24       	eor	r1, r1
    b33a:	8e 50       	subi	r24, 0x0E	; 14
    b33c:	97 4b       	sbci	r25, 0xB7	; 183
    b33e:	fc 01       	movw	r30, r24
    b340:	80 81       	ld	r24, Z
    b342:	91 81       	ldd	r25, Z+1	; 0x01
    b344:	89 2b       	or	r24, r25
    b346:	c1 f4       	brne	.+48     	; 0xb378 <_Z18nextFullLBRxBufferv+0x62>
    b348:	8a 81       	ldd	r24, Y+2	; 0x02
    b34a:	8f 5f       	subi	r24, 0xFF	; 255
    b34c:	8a 83       	std	Y+2, r24	; 0x02
    b34e:	81 e0       	ldi	r24, 0x01	; 1
    b350:	9a 81       	ldd	r25, Y+2	; 0x02
    b352:	92 30       	cpi	r25, 0x02	; 2
    b354:	08 f4       	brcc	.+2      	; 0xb358 <_Z18nextFullLBRxBufferv+0x42>
    b356:	80 e0       	ldi	r24, 0x00	; 0
    b358:	88 23       	and	r24, r24
    b35a:	11 f0       	breq	.+4      	; 0xb360 <_Z18nextFullLBRxBufferv+0x4a>
    b35c:	19 82       	std	Y+1, r1	; 0x01
    b35e:	0c c0       	rjmp	.+24     	; 0xb378 <_Z18nextFullLBRxBufferv+0x62>
    b360:	80 91 78 49 	lds	r24, 0x4978	; 0x804978 <_ZZ18nextFullLBRxBuffervE11bufferIndex>
    b364:	8f 5f       	subi	r24, 0xFF	; 255
    b366:	80 93 78 49 	sts	0x4978, r24	; 0x804978 <_ZZ18nextFullLBRxBuffervE11bufferIndex>
    b36a:	80 91 78 49 	lds	r24, 0x4978	; 0x804978 <_ZZ18nextFullLBRxBuffervE11bufferIndex>
    b36e:	82 30       	cpi	r24, 0x02	; 2
    b370:	d0 f2       	brcs	.-76     	; 0xb326 <_Z18nextFullLBRxBufferv+0x10>
    b372:	10 92 78 49 	sts	0x4978, r1	; 0x804978 <_ZZ18nextFullLBRxBuffervE11bufferIndex>
    b376:	d7 cf       	rjmp	.-82     	; 0xb326 <_Z18nextFullLBRxBufferv+0x10>
    b378:	89 81       	ldd	r24, Y+1	; 0x01
    b37a:	88 23       	and	r24, r24
    b37c:	69 f0       	breq	.+26     	; 0xb398 <_Z18nextFullLBRxBufferv+0x82>
    b37e:	80 91 78 49 	lds	r24, 0x4978	; 0x804978 <_ZZ18nextFullLBRxBuffervE11bufferIndex>
    b382:	28 2f       	mov	r18, r24
    b384:	30 e0       	ldi	r19, 0x00	; 0
    b386:	42 e4       	ldi	r20, 0x42	; 66
    b388:	42 9f       	mul	r20, r18
    b38a:	c0 01       	movw	r24, r0
    b38c:	43 9f       	mul	r20, r19
    b38e:	90 0d       	add	r25, r0
    b390:	11 24       	eor	r1, r1
    b392:	8f 50       	subi	r24, 0x0F	; 15
    b394:	97 4b       	sbci	r25, 0xB7	; 183
    b396:	02 c0       	rjmp	.+4      	; 0xb39c <_Z18nextFullLBRxBufferv+0x86>
    b398:	80 e0       	ldi	r24, 0x00	; 0
    b39a:	90 e0       	ldi	r25, 0x00	; 0
    b39c:	0f 90       	pop	r0
    b39e:	0f 90       	pop	r0
    b3a0:	df 91       	pop	r29
    b3a2:	cf 91       	pop	r28
    b3a4:	08 95       	ret

0000b3a6 <_Z19linkbusTxInProgressv>:
    b3a6:	cf 93       	push	r28
    b3a8:	df 93       	push	r29
    b3aa:	cd b7       	in	r28, 0x3d	; 61
    b3ac:	de b7       	in	r29, 0x3e	; 62
    b3ae:	80 91 28 48 	lds	r24, 0x4828	; 0x804828 <_ZL17linkbus_tx_active>
    b3b2:	df 91       	pop	r29
    b3b4:	cf 91       	pop	r28
    b3b6:	08 95       	ret

0000b3b8 <_ZL16linkbus_start_txv>:
    b3b8:	cf 93       	push	r28
    b3ba:	df 93       	push	r29
    b3bc:	1f 92       	push	r1
    b3be:	cd b7       	in	r28, 0x3d	; 61
    b3c0:	de b7       	in	r29, 0x3e	; 62
    b3c2:	90 91 28 48 	lds	r25, 0x4828	; 0x804828 <_ZL17linkbus_tx_active>
    b3c6:	81 e0       	ldi	r24, 0x01	; 1
    b3c8:	89 27       	eor	r24, r25
    b3ca:	89 83       	std	Y+1, r24	; 0x01
    b3cc:	89 81       	ldd	r24, Y+1	; 0x01
    b3ce:	88 23       	and	r24, r24
    b3d0:	61 f0       	breq	.+24     	; 0xb3ea <_ZL16linkbus_start_txv+0x32>
    b3d2:	81 e0       	ldi	r24, 0x01	; 1
    b3d4:	80 93 28 48 	sts	0x4828, r24	; 0x804828 <_ZL17linkbus_tx_active>
    b3d8:	80 91 2b 40 	lds	r24, 0x402B	; 0x80402b <g_linkbus_usart_number>
    b3dc:	84 30       	cpi	r24, 0x04	; 4
    b3de:	19 f4       	brne	.+6      	; 0xb3e6 <_ZL16linkbus_start_txv+0x2e>
    b3e0:	0e 94 3b 73 	call	0xe676	; 0xe676 <USART4_enable_tx>
    b3e4:	02 c0       	rjmp	.+4      	; 0xb3ea <_ZL16linkbus_start_txv+0x32>
    b3e6:	0e 94 a4 72 	call	0xe548	; 0xe548 <USART1_enable_tx>
    b3ea:	89 81       	ldd	r24, Y+1	; 0x01
    b3ec:	0f 90       	pop	r0
    b3ee:	df 91       	pop	r29
    b3f0:	cf 91       	pop	r28
    b3f2:	08 95       	ret

0000b3f4 <_Z14linkbus_end_txv>:
    b3f4:	cf 93       	push	r28
    b3f6:	df 93       	push	r29
    b3f8:	cd b7       	in	r28, 0x3d	; 61
    b3fa:	de b7       	in	r29, 0x3e	; 62
    b3fc:	80 91 28 48 	lds	r24, 0x4828	; 0x804828 <_ZL17linkbus_tx_active>
    b400:	88 23       	and	r24, r24
    b402:	c9 f0       	breq	.+50     	; 0xb436 <_Z14linkbus_end_txv+0x42>
    b404:	80 91 2b 40 	lds	r24, 0x402B	; 0x80402b <g_linkbus_usart_number>
    b408:	88 23       	and	r24, r24
    b40a:	51 f4       	brne	.+20     	; 0xb420 <_Z14linkbus_end_txv+0x2c>
    b40c:	80 e8       	ldi	r24, 0x80	; 128
    b40e:	98 e0       	ldi	r25, 0x08	; 8
    b410:	20 e8       	ldi	r18, 0x80	; 128
    b412:	38 e0       	ldi	r19, 0x08	; 8
    b414:	f9 01       	movw	r30, r18
    b416:	25 81       	ldd	r18, Z+5	; 0x05
    b418:	2f 7d       	andi	r18, 0xDF	; 223
    b41a:	fc 01       	movw	r30, r24
    b41c:	25 83       	std	Z+5, r18	; 0x05
    b41e:	09 c0       	rjmp	.+18     	; 0xb432 <_Z14linkbus_end_txv+0x3e>
    b420:	80 e2       	ldi	r24, 0x20	; 32
    b422:	98 e0       	ldi	r25, 0x08	; 8
    b424:	20 e2       	ldi	r18, 0x20	; 32
    b426:	38 e0       	ldi	r19, 0x08	; 8
    b428:	f9 01       	movw	r30, r18
    b42a:	25 81       	ldd	r18, Z+5	; 0x05
    b42c:	2f 7d       	andi	r18, 0xDF	; 223
    b42e:	fc 01       	movw	r30, r24
    b430:	25 83       	std	Z+5, r18	; 0x05
    b432:	10 92 28 48 	sts	0x4828, r1	; 0x804828 <_ZL17linkbus_tx_active>
    b436:	00 00       	nop
    b438:	df 91       	pop	r29
    b43a:	cf 91       	pop	r28
    b43c:	08 95       	ret

0000b43e <_ZL21USART1_initializationm>:
    b43e:	cf 93       	push	r28
    b440:	df 93       	push	r29
    b442:	00 d0       	rcall	.+0      	; 0xb444 <_ZL21USART1_initializationm+0x6>
    b444:	00 d0       	rcall	.+0      	; 0xb446 <_ZL21USART1_initializationm+0x8>
    b446:	cd b7       	in	r28, 0x3d	; 61
    b448:	de b7       	in	r29, 0x3e	; 62
    b44a:	69 83       	std	Y+1, r22	; 0x01
    b44c:	7a 83       	std	Y+2, r23	; 0x02
    b44e:	8b 83       	std	Y+3, r24	; 0x03
    b450:	9c 83       	std	Y+4, r25	; 0x04
    b452:	80 e0       	ldi	r24, 0x00	; 0
    b454:	0e 94 6a 58 	call	0xb0d4	; 0xb0d4 <PC1_set_dir>
    b458:	80 e0       	ldi	r24, 0x00	; 0
    b45a:	0e 94 5b 58 	call	0xb0b6	; 0xb0b6 <PC1_set_pull_mode>
    b45e:	81 e0       	ldi	r24, 0x01	; 1
    b460:	0e 94 3d 58 	call	0xb07a	; 0xb07a <PC0_set_dir>
    b464:	81 e0       	ldi	r24, 0x01	; 1
    b466:	0e 94 4c 58 	call	0xb098	; 0xb098 <PC0_set_level>
    b46a:	89 81       	ldd	r24, Y+1	; 0x01
    b46c:	9a 81       	ldd	r25, Y+2	; 0x02
    b46e:	ab 81       	ldd	r26, Y+3	; 0x03
    b470:	bc 81       	ldd	r27, Y+4	; 0x04
    b472:	bc 01       	movw	r22, r24
    b474:	cd 01       	movw	r24, r26
    b476:	0e 94 3c 72 	call	0xe478	; 0xe478 <USART1_init>
    b47a:	00 00       	nop
    b47c:	24 96       	adiw	r28, 0x04	; 4
    b47e:	cd bf       	out	0x3d, r28	; 61
    b480:	de bf       	out	0x3e, r29	; 62
    b482:	df 91       	pop	r29
    b484:	cf 91       	pop	r28
    b486:	08 95       	ret

0000b488 <_ZL21USART4_initializationm>:
    b488:	cf 93       	push	r28
    b48a:	df 93       	push	r29
    b48c:	00 d0       	rcall	.+0      	; 0xb48e <_ZL21USART4_initializationm+0x6>
    b48e:	00 d0       	rcall	.+0      	; 0xb490 <_ZL21USART4_initializationm+0x8>
    b490:	cd b7       	in	r28, 0x3d	; 61
    b492:	de b7       	in	r29, 0x3e	; 62
    b494:	69 83       	std	Y+1, r22	; 0x01
    b496:	7a 83       	std	Y+2, r23	; 0x02
    b498:	8b 83       	std	Y+3, r24	; 0x03
    b49a:	9c 83       	std	Y+4, r25	; 0x04
    b49c:	80 e0       	ldi	r24, 0x00	; 0
    b49e:	0e 94 a6 58 	call	0xb14c	; 0xb14c <PE1_set_dir>
    b4a2:	80 e0       	ldi	r24, 0x00	; 0
    b4a4:	0e 94 97 58 	call	0xb12e	; 0xb12e <PE1_set_pull_mode>
    b4a8:	81 e0       	ldi	r24, 0x01	; 1
    b4aa:	0e 94 79 58 	call	0xb0f2	; 0xb0f2 <PE0_set_dir>
    b4ae:	81 e0       	ldi	r24, 0x01	; 1
    b4b0:	0e 94 88 58 	call	0xb110	; 0xb110 <PE0_set_level>
    b4b4:	89 81       	ldd	r24, Y+1	; 0x01
    b4b6:	9a 81       	ldd	r25, Y+2	; 0x02
    b4b8:	ab 81       	ldd	r26, Y+3	; 0x03
    b4ba:	bc 81       	ldd	r27, Y+4	; 0x04
    b4bc:	bc 01       	movw	r22, r24
    b4be:	cd 01       	movw	r24, r26
    b4c0:	0e 94 da 72 	call	0xe5b4	; 0xe5b4 <USART4_init>
    b4c4:	00 00       	nop
    b4c6:	24 96       	adiw	r28, 0x04	; 4
    b4c8:	cd bf       	out	0x3d, r28	; 61
    b4ca:	de bf       	out	0x3e, r29	; 62
    b4cc:	df 91       	pop	r29
    b4ce:	cf 91       	pop	r28
    b4d0:	08 95       	ret

0000b4d2 <_Z12linkbus_initm14USART_Number_t>:
    b4d2:	cf 93       	push	r28
    b4d4:	df 93       	push	r29
    b4d6:	cd b7       	in	r28, 0x3d	; 61
    b4d8:	de b7       	in	r29, 0x3e	; 62
    b4da:	27 97       	sbiw	r28, 0x07	; 7
    b4dc:	cd bf       	out	0x3d, r28	; 61
    b4de:	de bf       	out	0x3e, r29	; 62
    b4e0:	6b 83       	std	Y+3, r22	; 0x03
    b4e2:	7c 83       	std	Y+4, r23	; 0x04
    b4e4:	8d 83       	std	Y+5, r24	; 0x05
    b4e6:	9e 83       	std	Y+6, r25	; 0x06
    b4e8:	4f 83       	std	Y+7, r20	; 0x07
    b4ea:	44 e8       	ldi	r20, 0x84	; 132
    b4ec:	50 e0       	ldi	r21, 0x00	; 0
    b4ee:	60 e0       	ldi	r22, 0x00	; 0
    b4f0:	70 e0       	ldi	r23, 0x00	; 0
    b4f2:	81 ef       	ldi	r24, 0xF1	; 241
    b4f4:	98 e4       	ldi	r25, 0x48	; 72
    b4f6:	0e 94 e6 7b 	call	0xf7cc	; 0xf7cc <memset>
    b4fa:	19 82       	std	Y+1, r1	; 0x01
    b4fc:	1a 82       	std	Y+2, r1	; 0x02
    b4fe:	89 81       	ldd	r24, Y+1	; 0x01
    b500:	9a 81       	ldd	r25, Y+2	; 0x02
    b502:	04 97       	sbiw	r24, 0x04	; 4
    b504:	94 f4       	brge	.+36     	; 0xb52a <_Z12linkbus_initm14USART_Number_t+0x58>
    b506:	29 81       	ldd	r18, Y+1	; 0x01
    b508:	3a 81       	ldd	r19, Y+2	; 0x02
    b50a:	42 e3       	ldi	r20, 0x32	; 50
    b50c:	42 9f       	mul	r20, r18
    b50e:	c0 01       	movw	r24, r0
    b510:	43 9f       	mul	r20, r19
    b512:	90 0d       	add	r25, r0
    b514:	11 24       	eor	r1, r1
    b516:	87 5d       	subi	r24, 0xD7	; 215
    b518:	97 4b       	sbci	r25, 0xB7	; 183
    b51a:	fc 01       	movw	r30, r24
    b51c:	10 82       	st	Z, r1
    b51e:	89 81       	ldd	r24, Y+1	; 0x01
    b520:	9a 81       	ldd	r25, Y+2	; 0x02
    b522:	01 96       	adiw	r24, 0x01	; 1
    b524:	89 83       	std	Y+1, r24	; 0x01
    b526:	9a 83       	std	Y+2, r25	; 0x02
    b528:	ea cf       	rjmp	.-44     	; 0xb4fe <_Z12linkbus_initm14USART_Number_t+0x2c>
    b52a:	8f 81       	ldd	r24, Y+7	; 0x07
    b52c:	86 30       	cpi	r24, 0x06	; 6
    b52e:	21 f4       	brne	.+8      	; 0xb538 <_Z12linkbus_initm14USART_Number_t+0x66>
    b530:	80 91 2b 40 	lds	r24, 0x402B	; 0x80402b <g_linkbus_usart_number>
    b534:	87 30       	cpi	r24, 0x07	; 7
    b536:	b9 f4       	brne	.+46     	; 0xb566 <_Z12linkbus_initm14USART_Number_t+0x94>
    b538:	8f 81       	ldd	r24, Y+7	; 0x07
    b53a:	84 30       	cpi	r24, 0x04	; 4
    b53c:	49 f4       	brne	.+18     	; 0xb550 <_Z12linkbus_initm14USART_Number_t+0x7e>
    b53e:	8b 81       	ldd	r24, Y+3	; 0x03
    b540:	9c 81       	ldd	r25, Y+4	; 0x04
    b542:	ad 81       	ldd	r26, Y+5	; 0x05
    b544:	be 81       	ldd	r27, Y+6	; 0x06
    b546:	bc 01       	movw	r22, r24
    b548:	cd 01       	movw	r24, r26
    b54a:	0e 94 44 5a 	call	0xb488	; 0xb488 <_ZL21USART4_initializationm>
    b54e:	08 c0       	rjmp	.+16     	; 0xb560 <_Z12linkbus_initm14USART_Number_t+0x8e>
    b550:	8b 81       	ldd	r24, Y+3	; 0x03
    b552:	9c 81       	ldd	r25, Y+4	; 0x04
    b554:	ad 81       	ldd	r26, Y+5	; 0x05
    b556:	be 81       	ldd	r27, Y+6	; 0x06
    b558:	bc 01       	movw	r22, r24
    b55a:	cd 01       	movw	r24, r26
    b55c:	0e 94 1f 5a 	call	0xb43e	; 0xb43e <_ZL21USART1_initializationm>
    b560:	8f 81       	ldd	r24, Y+7	; 0x07
    b562:	80 93 2b 40 	sts	0x402B, r24	; 0x80402b <g_linkbus_usart_number>
    b566:	10 92 2a 40 	sts	0x402A, r1	; 0x80402a <_ZL14g_bus_disabled>
    b56a:	00 00       	nop
    b56c:	27 96       	adiw	r28, 0x07	; 7
    b56e:	cd bf       	out	0x3d, r28	; 61
    b570:	de bf       	out	0x3e, r29	; 62
    b572:	df 91       	pop	r29
    b574:	cf 91       	pop	r28
    b576:	08 95       	ret

0000b578 <_Z15linkbus_disablev>:
    b578:	cf 93       	push	r28
    b57a:	df 93       	push	r29
    b57c:	1f 92       	push	r1
    b57e:	cd b7       	in	r28, 0x3d	; 61
    b580:	de b7       	in	r29, 0x3e	; 62
    b582:	81 e0       	ldi	r24, 0x01	; 1
    b584:	80 93 2a 40 	sts	0x402A, r24	; 0x80402a <_ZL14g_bus_disabled>
    b588:	80 91 2b 40 	lds	r24, 0x402B	; 0x80402b <g_linkbus_usart_number>
    b58c:	84 30       	cpi	r24, 0x04	; 4
    b58e:	19 f4       	brne	.+6      	; 0xb596 <_Z15linkbus_disablev+0x1e>
    b590:	0e 94 55 73 	call	0xe6aa	; 0xe6aa <USART4_disable>
    b594:	02 c0       	rjmp	.+4      	; 0xb59a <_Z15linkbus_disablev+0x22>
    b596:	0e 94 be 72 	call	0xe57c	; 0xe57c <USART1_disable>
    b59a:	0e 94 fa 59 	call	0xb3f4	; 0xb3f4 <_Z14linkbus_end_txv>
    b59e:	44 e8       	ldi	r20, 0x84	; 132
    b5a0:	50 e0       	ldi	r21, 0x00	; 0
    b5a2:	60 e0       	ldi	r22, 0x00	; 0
    b5a4:	70 e0       	ldi	r23, 0x00	; 0
    b5a6:	81 ef       	ldi	r24, 0xF1	; 241
    b5a8:	98 e4       	ldi	r25, 0x48	; 72
    b5aa:	0e 94 e6 7b 	call	0xf7cc	; 0xf7cc <memset>
    b5ae:	19 82       	std	Y+1, r1	; 0x01
    b5b0:	89 81       	ldd	r24, Y+1	; 0x01
    b5b2:	84 30       	cpi	r24, 0x04	; 4
    b5b4:	88 f4       	brcc	.+34     	; 0xb5d8 <_Z15linkbus_disablev+0x60>
    b5b6:	89 81       	ldd	r24, Y+1	; 0x01
    b5b8:	28 2f       	mov	r18, r24
    b5ba:	30 e0       	ldi	r19, 0x00	; 0
    b5bc:	42 e3       	ldi	r20, 0x32	; 50
    b5be:	42 9f       	mul	r20, r18
    b5c0:	c0 01       	movw	r24, r0
    b5c2:	43 9f       	mul	r20, r19
    b5c4:	90 0d       	add	r25, r0
    b5c6:	11 24       	eor	r1, r1
    b5c8:	87 5d       	subi	r24, 0xD7	; 215
    b5ca:	97 4b       	sbci	r25, 0xB7	; 183
    b5cc:	fc 01       	movw	r30, r24
    b5ce:	10 82       	st	Z, r1
    b5d0:	89 81       	ldd	r24, Y+1	; 0x01
    b5d2:	8f 5f       	subi	r24, 0xFF	; 255
    b5d4:	89 83       	std	Y+1, r24	; 0x01
    b5d6:	ec cf       	rjmp	.-40     	; 0xb5b0 <_Z15linkbus_disablev+0x38>
    b5d8:	00 00       	nop
    b5da:	0f 90       	pop	r0
    b5dc:	df 91       	pop	r29
    b5de:	cf 91       	pop	r28
    b5e0:	08 95       	ret

0000b5e2 <_Z14linkbus_enablev>:
    b5e2:	cf 93       	push	r28
    b5e4:	df 93       	push	r29
    b5e6:	1f 92       	push	r1
    b5e8:	cd b7       	in	r28, 0x3d	; 61
    b5ea:	de b7       	in	r29, 0x3e	; 62
    b5ec:	10 92 2a 40 	sts	0x402A, r1	; 0x80402a <_ZL14g_bus_disabled>
    b5f0:	80 91 2b 40 	lds	r24, 0x402B	; 0x80402b <g_linkbus_usart_number>
    b5f4:	84 30       	cpi	r24, 0x04	; 4
    b5f6:	19 f4       	brne	.+6      	; 0xb5fe <_Z14linkbus_enablev+0x1c>
    b5f8:	0e 94 2a 73 	call	0xe654	; 0xe654 <USART4_enable>
    b5fc:	02 c0       	rjmp	.+4      	; 0xb602 <_Z14linkbus_enablev+0x20>
    b5fe:	0e 94 93 72 	call	0xe526	; 0xe526 <USART1_enable>
    b602:	44 e8       	ldi	r20, 0x84	; 132
    b604:	50 e0       	ldi	r21, 0x00	; 0
    b606:	60 e0       	ldi	r22, 0x00	; 0
    b608:	70 e0       	ldi	r23, 0x00	; 0
    b60a:	81 ef       	ldi	r24, 0xF1	; 241
    b60c:	98 e4       	ldi	r25, 0x48	; 72
    b60e:	0e 94 e6 7b 	call	0xf7cc	; 0xf7cc <memset>
    b612:	19 82       	std	Y+1, r1	; 0x01
    b614:	89 81       	ldd	r24, Y+1	; 0x01
    b616:	84 30       	cpi	r24, 0x04	; 4
    b618:	88 f4       	brcc	.+34     	; 0xb63c <_Z14linkbus_enablev+0x5a>
    b61a:	89 81       	ldd	r24, Y+1	; 0x01
    b61c:	28 2f       	mov	r18, r24
    b61e:	30 e0       	ldi	r19, 0x00	; 0
    b620:	42 e3       	ldi	r20, 0x32	; 50
    b622:	42 9f       	mul	r20, r18
    b624:	c0 01       	movw	r24, r0
    b626:	43 9f       	mul	r20, r19
    b628:	90 0d       	add	r25, r0
    b62a:	11 24       	eor	r1, r1
    b62c:	87 5d       	subi	r24, 0xD7	; 215
    b62e:	97 4b       	sbci	r25, 0xB7	; 183
    b630:	fc 01       	movw	r30, r24
    b632:	10 82       	st	Z, r1
    b634:	89 81       	ldd	r24, Y+1	; 0x01
    b636:	8f 5f       	subi	r24, 0xFF	; 255
    b638:	89 83       	std	Y+1, r24	; 0x01
    b63a:	ec cf       	rjmp	.-40     	; 0xb614 <_Z14linkbus_enablev+0x32>
    b63c:	00 00       	nop
    b63e:	0f 90       	pop	r0
    b640:	df 91       	pop	r29
    b642:	cf 91       	pop	r28
    b644:	08 95       	ret

0000b646 <_Z12lb_send_textPc>:
    b646:	cf 93       	push	r28
    b648:	df 93       	push	r29
    b64a:	cd b7       	in	r28, 0x3d	; 61
    b64c:	de b7       	in	r29, 0x3e	; 62
    b64e:	27 97       	sbiw	r28, 0x07	; 7
    b650:	cd bf       	out	0x3d, r28	; 61
    b652:	de bf       	out	0x3e, r29	; 62
    b654:	8e 83       	std	Y+6, r24	; 0x06
    b656:	9f 83       	std	Y+7, r25	; 0x07
    b658:	81 e0       	ldi	r24, 0x01	; 1
    b65a:	89 83       	std	Y+1, r24	; 0x01
    b65c:	88 ec       	ldi	r24, 0xC8	; 200
    b65e:	90 e0       	ldi	r25, 0x00	; 0
    b660:	8a 83       	std	Y+2, r24	; 0x02
    b662:	9b 83       	std	Y+3, r25	; 0x03
    b664:	80 91 2a 40 	lds	r24, 0x402A	; 0x80402a <_ZL14g_bus_disabled>
    b668:	88 23       	and	r24, r24
    b66a:	11 f0       	breq	.+4      	; 0xb670 <_Z12lb_send_textPc+0x2a>
    b66c:	89 81       	ldd	r24, Y+1	; 0x01
    b66e:	42 c0       	rjmp	.+132    	; 0xb6f4 <_Z12lb_send_textPc+0xae>
    b670:	8e 81       	ldd	r24, Y+6	; 0x06
    b672:	9f 81       	ldd	r25, Y+7	; 0x07
    b674:	89 2b       	or	r24, r25
    b676:	e9 f1       	breq	.+122    	; 0xb6f2 <_Z12lb_send_textPc+0xac>
    b678:	0e 94 fc 58 	call	0xb1f8	; 0xb1f8 <_Z19nextEmptyLBTxBufferv>
    b67c:	8c 83       	std	Y+4, r24	; 0x04
    b67e:	9d 83       	std	Y+5, r25	; 0x05
    b680:	8c 81       	ldd	r24, Y+4	; 0x04
    b682:	9d 81       	ldd	r25, Y+5	; 0x05
    b684:	89 2b       	or	r24, r25
    b686:	01 f5       	brne	.+64     	; 0xb6c8 <_Z12lb_send_textPc+0x82>
    b688:	8a 81       	ldd	r24, Y+2	; 0x02
    b68a:	9b 81       	ldd	r25, Y+3	; 0x03
    b68c:	89 2b       	or	r24, r25
    b68e:	e1 f0       	breq	.+56     	; 0xb6c8 <_Z12lb_send_textPc+0x82>
    b690:	0e 94 d3 59 	call	0xb3a6	; 0xb3a6 <_Z19linkbusTxInProgressv>
    b694:	88 23       	and	r24, r24
    b696:	31 f0       	breq	.+12     	; 0xb6a4 <_Z12lb_send_textPc+0x5e>
    b698:	8a 81       	ldd	r24, Y+2	; 0x02
    b69a:	9b 81       	ldd	r25, Y+3	; 0x03
    b69c:	89 2b       	or	r24, r25
    b69e:	11 f0       	breq	.+4      	; 0xb6a4 <_Z12lb_send_textPc+0x5e>
    b6a0:	81 e0       	ldi	r24, 0x01	; 1
    b6a2:	01 c0       	rjmp	.+2      	; 0xb6a6 <_Z12lb_send_textPc+0x60>
    b6a4:	80 e0       	ldi	r24, 0x00	; 0
    b6a6:	88 23       	and	r24, r24
    b6a8:	51 f0       	breq	.+20     	; 0xb6be <_Z12lb_send_textPc+0x78>
    b6aa:	8a 81       	ldd	r24, Y+2	; 0x02
    b6ac:	9b 81       	ldd	r25, Y+3	; 0x03
    b6ae:	89 2b       	or	r24, r25
    b6b0:	79 f3       	breq	.-34     	; 0xb690 <_Z12lb_send_textPc+0x4a>
    b6b2:	8a 81       	ldd	r24, Y+2	; 0x02
    b6b4:	9b 81       	ldd	r25, Y+3	; 0x03
    b6b6:	01 97       	sbiw	r24, 0x01	; 1
    b6b8:	8a 83       	std	Y+2, r24	; 0x02
    b6ba:	9b 83       	std	Y+3, r25	; 0x03
    b6bc:	e9 cf       	rjmp	.-46     	; 0xb690 <_Z12lb_send_textPc+0x4a>
    b6be:	0e 94 fc 58 	call	0xb1f8	; 0xb1f8 <_Z19nextEmptyLBTxBufferv>
    b6c2:	8c 83       	std	Y+4, r24	; 0x04
    b6c4:	9d 83       	std	Y+5, r25	; 0x05
    b6c6:	dc cf       	rjmp	.-72     	; 0xb680 <_Z12lb_send_textPc+0x3a>
    b6c8:	8c 81       	ldd	r24, Y+4	; 0x04
    b6ca:	9d 81       	ldd	r25, Y+5	; 0x05
    b6cc:	89 2b       	or	r24, r25
    b6ce:	89 f0       	breq	.+34     	; 0xb6f2 <_Z12lb_send_textPc+0xac>
    b6d0:	8f 81       	ldd	r24, Y+7	; 0x07
    b6d2:	8f 93       	push	r24
    b6d4:	8e 81       	ldd	r24, Y+6	; 0x06
    b6d6:	8f 93       	push	r24
    b6d8:	8d 81       	ldd	r24, Y+5	; 0x05
    b6da:	8f 93       	push	r24
    b6dc:	8c 81       	ldd	r24, Y+4	; 0x04
    b6de:	8f 93       	push	r24
    b6e0:	0e 94 48 7c 	call	0xf890	; 0xf890 <sprintf>
    b6e4:	0f 90       	pop	r0
    b6e6:	0f 90       	pop	r0
    b6e8:	0f 90       	pop	r0
    b6ea:	0f 90       	pop	r0
    b6ec:	0e 94 dc 59 	call	0xb3b8	; 0xb3b8 <_ZL16linkbus_start_txv>
    b6f0:	19 82       	std	Y+1, r1	; 0x01
    b6f2:	89 81       	ldd	r24, Y+1	; 0x01
    b6f4:	27 96       	adiw	r28, 0x07	; 7
    b6f6:	cd bf       	out	0x3d, r28	; 61
    b6f8:	de bf       	out	0x3e, r29	; 62
    b6fa:	df 91       	pop	r29
    b6fc:	cf 91       	pop	r28
    b6fe:	08 95       	ret

0000b700 <_Z11lb_send_msg13LBMessageTypePKcPc>:
    b700:	cf 93       	push	r28
    b702:	df 93       	push	r29
    b704:	cd b7       	in	r28, 0x3d	; 61
    b706:	de b7       	in	r29, 0x3e	; 62
    b708:	27 97       	sbiw	r28, 0x07	; 7
    b70a:	cd bf       	out	0x3d, r28	; 61
    b70c:	de bf       	out	0x3e, r29	; 62
    b70e:	8b 83       	std	Y+3, r24	; 0x03
    b710:	6c 83       	std	Y+4, r22	; 0x04
    b712:	7d 83       	std	Y+5, r23	; 0x05
    b714:	4e 83       	std	Y+6, r20	; 0x06
    b716:	5f 83       	std	Y+7, r21	; 0x07
    b718:	84 e2       	ldi	r24, 0x24	; 36
    b71a:	89 83       	std	Y+1, r24	; 0x01
    b71c:	8b e3       	ldi	r24, 0x3B	; 59
    b71e:	8a 83       	std	Y+2, r24	; 0x02
    b720:	8b 81       	ldd	r24, Y+3	; 0x03
    b722:	83 30       	cpi	r24, 0x03	; 3
    b724:	19 f4       	brne	.+6      	; 0xb72c <_Z11lb_send_msg13LBMessageTypePKcPc+0x2c>
    b726:	81 e2       	ldi	r24, 0x21	; 33
    b728:	89 83       	std	Y+1, r24	; 0x01
    b72a:	05 c0       	rjmp	.+10     	; 0xb736 <_Z11lb_send_msg13LBMessageTypePKcPc+0x36>
    b72c:	8b 81       	ldd	r24, Y+3	; 0x03
    b72e:	82 30       	cpi	r24, 0x02	; 2
    b730:	11 f4       	brne	.+4      	; 0xb736 <_Z11lb_send_msg13LBMessageTypePKcPc+0x36>
    b732:	8f e3       	ldi	r24, 0x3F	; 63
    b734:	8a 83       	std	Y+2, r24	; 0x02
    b736:	8a 81       	ldd	r24, Y+2	; 0x02
    b738:	28 2f       	mov	r18, r24
    b73a:	30 e0       	ldi	r19, 0x00	; 0
    b73c:	89 81       	ldd	r24, Y+1	; 0x01
    b73e:	88 2f       	mov	r24, r24
    b740:	90 e0       	ldi	r25, 0x00	; 0
    b742:	43 2f       	mov	r20, r19
    b744:	4f 93       	push	r20
    b746:	2f 93       	push	r18
    b748:	2f 81       	ldd	r18, Y+7	; 0x07
    b74a:	2f 93       	push	r18
    b74c:	2e 81       	ldd	r18, Y+6	; 0x06
    b74e:	2f 93       	push	r18
    b750:	2d 81       	ldd	r18, Y+5	; 0x05
    b752:	2f 93       	push	r18
    b754:	2c 81       	ldd	r18, Y+4	; 0x04
    b756:	2f 93       	push	r18
    b758:	29 2f       	mov	r18, r25
    b75a:	2f 93       	push	r18
    b75c:	8f 93       	push	r24
    b75e:	8e ec       	ldi	r24, 0xCE	; 206
    b760:	94 e4       	ldi	r25, 0x44	; 68
    b762:	89 2f       	mov	r24, r25
    b764:	8f 93       	push	r24
    b766:	8e ec       	ldi	r24, 0xCE	; 206
    b768:	94 e4       	ldi	r25, 0x44	; 68
    b76a:	8f 93       	push	r24
    b76c:	86 ef       	ldi	r24, 0xF6	; 246
    b76e:	97 e4       	ldi	r25, 0x47	; 71
    b770:	89 2f       	mov	r24, r25
    b772:	8f 93       	push	r24
    b774:	86 ef       	ldi	r24, 0xF6	; 246
    b776:	97 e4       	ldi	r25, 0x47	; 71
    b778:	8f 93       	push	r24
    b77a:	0e 94 48 7c 	call	0xf890	; 0xf890 <sprintf>
    b77e:	8d b7       	in	r24, 0x3d	; 61
    b780:	9e b7       	in	r25, 0x3e	; 62
    b782:	0c 96       	adiw	r24, 0x0c	; 12
    b784:	cd bf       	out	0x3d, r28	; 61
    b786:	de bf       	out	0x3e, r29	; 62
    b788:	86 ef       	ldi	r24, 0xF6	; 246
    b78a:	97 e4       	ldi	r25, 0x47	; 71
    b78c:	0e 94 23 5b 	call	0xb646	; 0xb646 <_Z12lb_send_textPc>
    b790:	00 00       	nop
    b792:	27 96       	adiw	r28, 0x07	; 7
    b794:	cd bf       	out	0x3d, r28	; 61
    b796:	de bf       	out	0x3e, r29	; 62
    b798:	df 91       	pop	r29
    b79a:	cf 91       	pop	r28
    b79c:	08 95       	ret

0000b79e <_Z16lb_broadcast_strPKcS0_>:


void lb_broadcast_str(const char* data, const char* str)
{
    b79e:	cf 93       	push	r28
    b7a0:	df 93       	push	r29
    b7a2:	00 d0       	rcall	.+0      	; 0xb7a4 <_Z16lb_broadcast_strPKcS0_+0x6>
    b7a4:	00 d0       	rcall	.+0      	; 0xb7a6 <_Z16lb_broadcast_strPKcS0_+0x8>
    b7a6:	cd b7       	in	r28, 0x3d	; 61
    b7a8:	de b7       	in	r29, 0x3e	; 62
    b7aa:	89 83       	std	Y+1, r24	; 0x01
    b7ac:	9a 83       	std	Y+2, r25	; 0x02
    b7ae:	6b 83       	std	Y+3, r22	; 0x03
    b7b0:	7c 83       	std	Y+4, r23	; 0x04
	if(str)
    b7b2:	8b 81       	ldd	r24, Y+3	; 0x03
    b7b4:	9c 81       	ldd	r25, Y+4	; 0x04
    b7b6:	89 2b       	or	r24, r25
    b7b8:	e9 f0       	breq	.+58     	; 0xb7f4 <_Z16lb_broadcast_strPKcS0_+0x56>
	{
		sprintf(g_tempMsgBuff, "%s,%s;", str, data);
    b7ba:	8a 81       	ldd	r24, Y+2	; 0x02
    b7bc:	8f 93       	push	r24
    b7be:	89 81       	ldd	r24, Y+1	; 0x01
    b7c0:	8f 93       	push	r24
    b7c2:	8c 81       	ldd	r24, Y+4	; 0x04
    b7c4:	8f 93       	push	r24
    b7c6:	8b 81       	ldd	r24, Y+3	; 0x03
    b7c8:	8f 93       	push	r24
    b7ca:	8e ed       	ldi	r24, 0xDE	; 222
    b7cc:	94 e4       	ldi	r25, 0x44	; 68
    b7ce:	89 2f       	mov	r24, r25
    b7d0:	8f 93       	push	r24
    b7d2:	8e ed       	ldi	r24, 0xDE	; 222
    b7d4:	94 e4       	ldi	r25, 0x44	; 68
    b7d6:	8f 93       	push	r24
    b7d8:	86 ef       	ldi	r24, 0xF6	; 246
    b7da:	97 e4       	ldi	r25, 0x47	; 71
    b7dc:	89 2f       	mov	r24, r25
    b7de:	8f 93       	push	r24
    b7e0:	86 ef       	ldi	r24, 0xF6	; 246
    b7e2:	97 e4       	ldi	r25, 0x47	; 71
    b7e4:	8f 93       	push	r24
    b7e6:	0e 94 48 7c 	call	0xf890	; 0xf890 <sprintf>
    b7ea:	8d b7       	in	r24, 0x3d	; 61
    b7ec:	9e b7       	in	r25, 0x3e	; 62
    b7ee:	08 96       	adiw	r24, 0x08	; 8
    b7f0:	cd bf       	out	0x3d, r28	; 61
    b7f2:	de bf       	out	0x3e, r29	; 62
	}

	if(g_tempMsgBuff[0]) lb_send_text(g_tempMsgBuff);
    b7f4:	80 91 f6 47 	lds	r24, 0x47F6	; 0x8047f6 <_ZL13g_tempMsgBuff>
    b7f8:	88 23       	and	r24, r24
    b7fa:	21 f0       	breq	.+8      	; 0xb804 <_Z16lb_broadcast_strPKcS0_+0x66>
    b7fc:	86 ef       	ldi	r24, 0xF6	; 246
    b7fe:	97 e4       	ldi	r25, 0x47	; 71
    b800:	0e 94 23 5b 	call	0xb646	; 0xb646 <_Z12lb_send_textPc>
}
    b804:	00 00       	nop
    b806:	24 96       	adiw	r28, 0x04	; 4
    b808:	cd bf       	out	0x3d, r28	; 61
    b80a:	de bf       	out	0x3e, r29	; 62
    b80c:	df 91       	pop	r29
    b80e:	cf 91       	pop	r28
    b810:	08 95       	ret

0000b812 <_Z9makeMorsePcPbS0_>:
 *  Call this function with a NULL argument at intervals of 1 element of time to generate Morse code.
 *  Once loaded with a string each call to this function returns a bool indicating whether a CW carrier should be sent
 *  Pass in a pointer to a bool in the second and third arguments:
 */
bool makeMorse(char* s, bool* repeating, bool* finished)
{
    b812:	cf 93       	push	r28
    b814:	df 93       	push	r29
    b816:	cd b7       	in	r28, 0x3d	; 61
    b818:	de b7       	in	r29, 0x3e	; 62
    b81a:	28 97       	sbiw	r28, 0x08	; 8
    b81c:	cd bf       	out	0x3d, r28	; 61
    b81e:	de bf       	out	0x3e, r29	; 62
    b820:	8b 83       	std	Y+3, r24	; 0x03
    b822:	9c 83       	std	Y+4, r25	; 0x04
    b824:	6d 83       	std	Y+5, r22	; 0x05
    b826:	7e 83       	std	Y+6, r23	; 0x06
    b828:	4f 83       	std	Y+7, r20	; 0x07
    b82a:	58 87       	std	Y+8, r21	; 0x08
	static uint8_t addedSpace;      /* adds additional time to make an inter-character space */
	static bool completedString = false;
	static bool carrierOn = false;
	static bool holdKeyDown = false;

	if(s)   /* load a new NULL-terminated string to send */
    b82c:	8b 81       	ldd	r24, Y+3	; 0x03
    b82e:	9c 81       	ldd	r25, Y+4	; 0x04
    b830:	89 2b       	or	r24, r25
    b832:	09 f4       	brne	.+2      	; 0xb836 <_Z9makeMorsePcPbS0_+0x24>
    b834:	4a c0       	rjmp	.+148    	; 0xb8ca <_Z9makeMorsePcPbS0_+0xb8>
	{
		holdKeyDown = false;
    b836:	10 92 79 49 	sts	0x4979, r1	; 0x804979 <_ZZ9makeMorsePcPbS0_E11holdKeyDown>

		if(repeating)
    b83a:	8d 81       	ldd	r24, Y+5	; 0x05
    b83c:	9e 81       	ldd	r25, Y+6	; 0x06
    b83e:	89 2b       	or	r24, r25
    b840:	31 f0       	breq	.+12     	; 0xb84e <_Z9makeMorsePcPbS0_+0x3c>
		{
			repeat = *repeating;
    b842:	8d 81       	ldd	r24, Y+5	; 0x05
    b844:	9e 81       	ldd	r25, Y+6	; 0x06
    b846:	fc 01       	movw	r30, r24
    b848:	80 81       	ld	r24, Z
    b84a:	80 93 2c 40 	sts	0x402C, r24	; 0x80402c <_ZZ9makeMorsePcPbS0_E6repeat>
		}

		if(*s)
    b84e:	8b 81       	ldd	r24, Y+3	; 0x03
    b850:	9c 81       	ldd	r25, Y+4	; 0x04
    b852:	fc 01       	movw	r30, r24
    b854:	80 81       	ld	r24, Z
    b856:	88 23       	and	r24, r24
    b858:	21 f1       	breq	.+72     	; 0xb8a2 <_Z9makeMorsePcPbS0_+0x90>
		{
			str = s;
    b85a:	8b 81       	ldd	r24, Y+3	; 0x03
    b85c:	9c 81       	ldd	r25, Y+4	; 0x04
    b85e:	80 93 7a 49 	sts	0x497A, r24	; 0x80497a <_ZZ9makeMorsePcPbS0_E3str>
    b862:	90 93 7b 49 	sts	0x497B, r25	; 0x80497b <_ZZ9makeMorsePcPbS0_E3str+0x1>
			c = ' ';
    b866:	80 e2       	ldi	r24, 0x20	; 32
    b868:	80 93 2d 40 	sts	0x402D, r24	; 0x80402d <_ZZ9makeMorsePcPbS0_E1c>
			morseInProgress = getMorseChar(*str);
    b86c:	80 91 7a 49 	lds	r24, 0x497A	; 0x80497a <_ZZ9makeMorsePcPbS0_E3str>
    b870:	90 91 7b 49 	lds	r25, 0x497B	; 0x80497b <_ZZ9makeMorsePcPbS0_E3str+0x1>
    b874:	fc 01       	movw	r30, r24
    b876:	80 81       	ld	r24, Z
    b878:	0e 94 b1 5d 	call	0xbb62	; 0xbb62 <_Z12getMorseCharc>
    b87c:	a8 2f       	mov	r26, r24
    b87e:	cb 01       	movw	r24, r22
    b880:	80 93 7c 49 	sts	0x497C, r24	; 0x80497c <_ZZ9makeMorsePcPbS0_E15morseInProgress>
    b884:	90 93 7d 49 	sts	0x497D, r25	; 0x80497d <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x1>
    b888:	a0 93 7e 49 	sts	0x497E, r26	; 0x80497e <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x2>
			charIndex = 0;
    b88c:	10 92 7f 49 	sts	0x497F, r1	; 0x80497f <_ZZ9makeMorsePcPbS0_E9charIndex>
			symbolIndex = 0;
    b890:	10 92 80 49 	sts	0x4980, r1	; 0x804980 <_ZZ9makeMorsePcPbS0_E11symbolIndex>
			elementIndex = 0;
    b894:	10 92 81 49 	sts	0x4981, r1	; 0x804981 <_ZZ9makeMorsePcPbS0_E12elementIndex>
			addedSpace = 0;
    b898:	10 92 82 49 	sts	0x4982, r1	; 0x804982 <_ZZ9makeMorsePcPbS0_E10addedSpace>
			completedString = false;
    b89c:	10 92 83 49 	sts	0x4983, r1	; 0x804983 <_ZZ9makeMorsePcPbS0_E15completedString>
    b8a0:	10 c0       	rjmp	.+32     	; 0xb8c2 <_Z9makeMorsePcPbS0_+0xb0>
		}
		else    /* a zero-length string shuts down makeMorse */
		{
			str = NULL;
    b8a2:	10 92 7a 49 	sts	0x497A, r1	; 0x80497a <_ZZ9makeMorsePcPbS0_E3str>
    b8a6:	10 92 7b 49 	sts	0x497B, r1	; 0x80497b <_ZZ9makeMorsePcPbS0_E3str+0x1>
			completedString = true;
    b8aa:	81 e0       	ldi	r24, 0x01	; 1
    b8ac:	80 93 83 49 	sts	0x4983, r24	; 0x804983 <_ZZ9makeMorsePcPbS0_E15completedString>
			if(finished)
    b8b0:	8f 81       	ldd	r24, Y+7	; 0x07
    b8b2:	98 85       	ldd	r25, Y+8	; 0x08
    b8b4:	89 2b       	or	r24, r25
    b8b6:	29 f0       	breq	.+10     	; 0xb8c2 <_Z9makeMorsePcPbS0_+0xb0>
			{
				*finished = true;
    b8b8:	8f 81       	ldd	r24, Y+7	; 0x07
    b8ba:	98 85       	ldd	r25, Y+8	; 0x08
    b8bc:	21 e0       	ldi	r18, 0x01	; 1
    b8be:	fc 01       	movw	r30, r24
    b8c0:	20 83       	st	Z, r18
			}
		}

		carrierOn = OFF;
    b8c2:	10 92 84 49 	sts	0x4984, r1	; 0x804984 <_ZZ9makeMorsePcPbS0_E9carrierOn>
		return( OFF);
    b8c6:	80 e0       	ldi	r24, 0x00	; 0
    b8c8:	f6 c0       	rjmp	.+492    	; 0xbab6 <_Z9makeMorsePcPbS0_+0x2a4>
	}
	else if(str)
    b8ca:	80 91 7a 49 	lds	r24, 0x497A	; 0x80497a <_ZZ9makeMorsePcPbS0_E3str>
    b8ce:	90 91 7b 49 	lds	r25, 0x497B	; 0x80497b <_ZZ9makeMorsePcPbS0_E3str+0x1>
    b8d2:	89 2b       	or	r24, r25
    b8d4:	09 f4       	brne	.+2      	; 0xb8d8 <_Z9makeMorsePcPbS0_+0xc6>
    b8d6:	dd c0       	rjmp	.+442    	; 0xba92 <_Z9makeMorsePcPbS0_+0x280>
	{
		if(repeating)
    b8d8:	8d 81       	ldd	r24, Y+5	; 0x05
    b8da:	9e 81       	ldd	r25, Y+6	; 0x06
    b8dc:	89 2b       	or	r24, r25
    b8de:	31 f0       	breq	.+12     	; 0xb8ec <_Z9makeMorsePcPbS0_+0xda>
		{
			*repeating = repeat;
    b8e0:	20 91 2c 40 	lds	r18, 0x402C	; 0x80402c <_ZZ9makeMorsePcPbS0_E6repeat>
    b8e4:	8d 81       	ldd	r24, Y+5	; 0x05
    b8e6:	9e 81       	ldd	r25, Y+6	; 0x06
    b8e8:	fc 01       	movw	r30, r24
    b8ea:	20 83       	st	Z, r18
		}

		if(completedString)
    b8ec:	80 91 83 49 	lds	r24, 0x4983	; 0x804983 <_ZZ9makeMorsePcPbS0_E15completedString>
    b8f0:	88 23       	and	r24, r24
    b8f2:	69 f0       	breq	.+26     	; 0xb90e <_Z9makeMorsePcPbS0_+0xfc>
		{
			if(finished)
    b8f4:	8f 81       	ldd	r24, Y+7	; 0x07
    b8f6:	98 85       	ldd	r25, Y+8	; 0x08
    b8f8:	89 2b       	or	r24, r25
    b8fa:	39 f0       	breq	.+14     	; 0xb90a <_Z9makeMorsePcPbS0_+0xf8>
			{
				*finished = true;
    b8fc:	8f 81       	ldd	r24, Y+7	; 0x07
    b8fe:	98 85       	ldd	r25, Y+8	; 0x08
    b900:	21 e0       	ldi	r18, 0x01	; 1
    b902:	fc 01       	movw	r30, r24
    b904:	20 83       	st	Z, r18
				holdKeyDown = false;
    b906:	10 92 79 49 	sts	0x4979, r1	; 0x804979 <_ZZ9makeMorsePcPbS0_E11holdKeyDown>
			}
			return( OFF);
    b90a:	80 e0       	ldi	r24, 0x00	; 0
    b90c:	d4 c0       	rjmp	.+424    	; 0xbab6 <_Z9makeMorsePcPbS0_+0x2a4>
		}

		if(elementIndex)
    b90e:	80 91 81 49 	lds	r24, 0x4981	; 0x804981 <_ZZ9makeMorsePcPbS0_E12elementIndex>
    b912:	88 23       	and	r24, r24
    b914:	31 f0       	breq	.+12     	; 0xb922 <_Z9makeMorsePcPbS0_+0x110>
		{
			elementIndex--;
    b916:	80 91 81 49 	lds	r24, 0x4981	; 0x804981 <_ZZ9makeMorsePcPbS0_E12elementIndex>
    b91a:	81 50       	subi	r24, 0x01	; 1
    b91c:	80 93 81 49 	sts	0x4981, r24	; 0x804981 <_ZZ9makeMorsePcPbS0_E12elementIndex>
    b920:	ae c0       	rjmp	.+348    	; 0xba7e <_Z9makeMorsePcPbS0_+0x26c>
		}
		else if(carrierOn && !holdKeyDown)  /* carrier is on, so turn it off and wait appropriate amount of space */
    b922:	80 91 84 49 	lds	r24, 0x4984	; 0x804984 <_ZZ9makeMorsePcPbS0_E9carrierOn>
    b926:	88 23       	and	r24, r24
    b928:	a1 f0       	breq	.+40     	; 0xb952 <_Z9makeMorsePcPbS0_+0x140>
    b92a:	90 91 79 49 	lds	r25, 0x4979	; 0x804979 <_ZZ9makeMorsePcPbS0_E11holdKeyDown>
    b92e:	81 e0       	ldi	r24, 0x01	; 1
    b930:	89 27       	eor	r24, r25
    b932:	88 23       	and	r24, r24
    b934:	71 f0       	breq	.+28     	; 0xb952 <_Z9makeMorsePcPbS0_+0x140>
		{
			carrierOn = false;
    b936:	10 92 84 49 	sts	0x4984, r1	; 0x804984 <_ZZ9makeMorsePcPbS0_E9carrierOn>
			/* wait one element = inter-symbol space */
			if(addedSpace)
    b93a:	80 91 82 49 	lds	r24, 0x4982	; 0x804982 <_ZZ9makeMorsePcPbS0_E10addedSpace>
    b93e:	88 23       	and	r24, r24
    b940:	09 f4       	brne	.+2      	; 0xb944 <_Z9makeMorsePcPbS0_+0x132>
    b942:	9d c0       	rjmp	.+314    	; 0xba7e <_Z9makeMorsePcPbS0_+0x26c>
			{
				elementIndex = addedSpace;
    b944:	80 91 82 49 	lds	r24, 0x4982	; 0x804982 <_ZZ9makeMorsePcPbS0_E10addedSpace>
    b948:	80 93 81 49 	sts	0x4981, r24	; 0x804981 <_ZZ9makeMorsePcPbS0_E12elementIndex>
				addedSpace = 0;
    b94c:	10 92 82 49 	sts	0x4982, r1	; 0x804982 <_ZZ9makeMorsePcPbS0_E10addedSpace>
		}
		else if(carrierOn && !holdKeyDown)  /* carrier is on, so turn it off and wait appropriate amount of space */
		{
			carrierOn = false;
			/* wait one element = inter-symbol space */
			if(addedSpace)
    b950:	96 c0       	rjmp	.+300    	; 0xba7e <_Z9makeMorsePcPbS0_+0x26c>
			}
			/* wait inter-character space */
		}
		else    /* carrier is off, so turn it on and get next symbol */
		{
			if(symbolIndex >= morseInProgress.lengthInSymbols)
    b952:	90 91 7d 49 	lds	r25, 0x497D	; 0x80497d <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x1>
    b956:	80 91 80 49 	lds	r24, 0x4980	; 0x804980 <_ZZ9makeMorsePcPbS0_E11symbolIndex>
    b95a:	89 17       	cp	r24, r25
    b95c:	08 f4       	brcc	.+2      	; 0xb960 <_Z9makeMorsePcPbS0_+0x14e>
    b95e:	4a c0       	rjmp	.+148    	; 0xb9f4 <_Z9makeMorsePcPbS0_+0x1e2>
			{
				c = (*(str + ++charIndex));
    b960:	20 91 7a 49 	lds	r18, 0x497A	; 0x80497a <_ZZ9makeMorsePcPbS0_E3str>
    b964:	30 91 7b 49 	lds	r19, 0x497B	; 0x80497b <_ZZ9makeMorsePcPbS0_E3str+0x1>
    b968:	80 91 7f 49 	lds	r24, 0x497F	; 0x80497f <_ZZ9makeMorsePcPbS0_E9charIndex>
    b96c:	8f 5f       	subi	r24, 0xFF	; 255
    b96e:	80 93 7f 49 	sts	0x497F, r24	; 0x80497f <_ZZ9makeMorsePcPbS0_E9charIndex>
    b972:	80 91 7f 49 	lds	r24, 0x497F	; 0x80497f <_ZZ9makeMorsePcPbS0_E9charIndex>
    b976:	88 2f       	mov	r24, r24
    b978:	90 e0       	ldi	r25, 0x00	; 0
    b97a:	82 0f       	add	r24, r18
    b97c:	93 1f       	adc	r25, r19
    b97e:	fc 01       	movw	r30, r24
    b980:	80 81       	ld	r24, Z
    b982:	80 93 2d 40 	sts	0x402D, r24	; 0x80402d <_ZZ9makeMorsePcPbS0_E1c>

				if(!c)  /* wrap to beginning of text */
    b986:	80 91 2d 40 	lds	r24, 0x402D	; 0x80402d <_ZZ9makeMorsePcPbS0_E1c>
    b98a:	88 23       	and	r24, r24
    b98c:	29 f5       	brne	.+74     	; 0xb9d8 <_Z9makeMorsePcPbS0_+0x1c6>
				{
					if(repeat)
    b98e:	80 91 2c 40 	lds	r24, 0x402C	; 0x80402c <_ZZ9makeMorsePcPbS0_E6repeat>
    b992:	88 23       	and	r24, r24
    b994:	59 f0       	breq	.+22     	; 0xb9ac <_Z9makeMorsePcPbS0_+0x19a>
					{
						c = *str;
    b996:	80 91 7a 49 	lds	r24, 0x497A	; 0x80497a <_ZZ9makeMorsePcPbS0_E3str>
    b99a:	90 91 7b 49 	lds	r25, 0x497B	; 0x80497b <_ZZ9makeMorsePcPbS0_E3str+0x1>
    b99e:	fc 01       	movw	r30, r24
    b9a0:	80 81       	ld	r24, Z
    b9a2:	80 93 2d 40 	sts	0x402D, r24	; 0x80402d <_ZZ9makeMorsePcPbS0_E1c>
						charIndex = 0;
    b9a6:	10 92 7f 49 	sts	0x497F, r1	; 0x80497f <_ZZ9makeMorsePcPbS0_E9charIndex>
    b9aa:	16 c0       	rjmp	.+44     	; 0xb9d8 <_Z9makeMorsePcPbS0_+0x1c6>
					}
					else
					{
						str = NULL;
    b9ac:	10 92 7a 49 	sts	0x497A, r1	; 0x80497a <_ZZ9makeMorsePcPbS0_E3str>
    b9b0:	10 92 7b 49 	sts	0x497B, r1	; 0x80497b <_ZZ9makeMorsePcPbS0_E3str+0x1>
						carrierOn = OFF;
    b9b4:	10 92 84 49 	sts	0x4984, r1	; 0x804984 <_ZZ9makeMorsePcPbS0_E9carrierOn>
						completedString = true;
    b9b8:	81 e0       	ldi	r24, 0x01	; 1
    b9ba:	80 93 83 49 	sts	0x4983, r24	; 0x804983 <_ZZ9makeMorsePcPbS0_E15completedString>
						if(finished)
    b9be:	8f 81       	ldd	r24, Y+7	; 0x07
    b9c0:	98 85       	ldd	r25, Y+8	; 0x08
    b9c2:	89 2b       	or	r24, r25
    b9c4:	29 f0       	breq	.+10     	; 0xb9d0 <_Z9makeMorsePcPbS0_+0x1be>
						{
							*finished = true;
    b9c6:	8f 81       	ldd	r24, Y+7	; 0x07
    b9c8:	98 85       	ldd	r25, Y+8	; 0x08
    b9ca:	21 e0       	ldi	r18, 0x01	; 1
    b9cc:	fc 01       	movw	r30, r24
    b9ce:	20 83       	st	Z, r18
						}
						holdKeyDown = false;
    b9d0:	10 92 79 49 	sts	0x4979, r1	; 0x804979 <_ZZ9makeMorsePcPbS0_E11holdKeyDown>
						return( OFF );
    b9d4:	80 e0       	ldi	r24, 0x00	; 0
    b9d6:	6f c0       	rjmp	.+222    	; 0xbab6 <_Z9makeMorsePcPbS0_+0x2a4>
					}
				}

				morseInProgress = getMorseChar(c);
    b9d8:	80 91 2d 40 	lds	r24, 0x402D	; 0x80402d <_ZZ9makeMorsePcPbS0_E1c>
    b9dc:	0e 94 b1 5d 	call	0xbb62	; 0xbb62 <_Z12getMorseCharc>
    b9e0:	a8 2f       	mov	r26, r24
    b9e2:	cb 01       	movw	r24, r22
    b9e4:	80 93 7c 49 	sts	0x497C, r24	; 0x80497c <_ZZ9makeMorsePcPbS0_E15morseInProgress>
    b9e8:	90 93 7d 49 	sts	0x497D, r25	; 0x80497d <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x1>
    b9ec:	a0 93 7e 49 	sts	0x497E, r26	; 0x80497e <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x2>
				symbolIndex = 0;
    b9f0:	10 92 80 49 	sts	0x4980, r1	; 0x804980 <_ZZ9makeMorsePcPbS0_E11symbolIndex>
			}

			if(morseInProgress.pattern < INTER_WORD_SPACE)
    b9f4:	80 91 7c 49 	lds	r24, 0x497C	; 0x80497c <_ZZ9makeMorsePcPbS0_E15morseInProgress>
    b9f8:	8d 3f       	cpi	r24, 0xFD	; 253
    b9fa:	70 f5       	brcc	.+92     	; 0xba58 <_Z9makeMorsePcPbS0_+0x246>
			{
				bool isDah = morseInProgress.pattern & (1 << symbolIndex++);
    b9fc:	80 91 7c 49 	lds	r24, 0x497C	; 0x80497c <_ZZ9makeMorsePcPbS0_E15morseInProgress>
    ba00:	88 2f       	mov	r24, r24
    ba02:	90 e0       	ldi	r25, 0x00	; 0
    ba04:	20 91 80 49 	lds	r18, 0x4980	; 0x804980 <_ZZ9makeMorsePcPbS0_E11symbolIndex>
    ba08:	31 e0       	ldi	r19, 0x01	; 1
    ba0a:	32 0f       	add	r19, r18
    ba0c:	30 93 80 49 	sts	0x4980, r19	; 0x804980 <_ZZ9makeMorsePcPbS0_E11symbolIndex>
    ba10:	22 2f       	mov	r18, r18
    ba12:	30 e0       	ldi	r19, 0x00	; 0
    ba14:	02 c0       	rjmp	.+4      	; 0xba1a <_Z9makeMorsePcPbS0_+0x208>
    ba16:	95 95       	asr	r25
    ba18:	87 95       	ror	r24
    ba1a:	2a 95       	dec	r18
    ba1c:	e2 f7       	brpl	.-8      	; 0xba16 <_Z9makeMorsePcPbS0_+0x204>
    ba1e:	81 70       	andi	r24, 0x01	; 1
    ba20:	99 27       	eor	r25, r25
    ba22:	21 e0       	ldi	r18, 0x01	; 1
    ba24:	89 2b       	or	r24, r25
    ba26:	09 f4       	brne	.+2      	; 0xba2a <_Z9makeMorsePcPbS0_+0x218>
    ba28:	20 e0       	ldi	r18, 0x00	; 0
    ba2a:	29 83       	std	Y+1, r18	; 0x01

				if(isDah)
    ba2c:	89 81       	ldd	r24, Y+1	; 0x01
    ba2e:	88 23       	and	r24, r24
    ba30:	21 f0       	breq	.+8      	; 0xba3a <_Z9makeMorsePcPbS0_+0x228>
				{
					elementIndex = 2;
    ba32:	82 e0       	ldi	r24, 0x02	; 2
    ba34:	80 93 81 49 	sts	0x4981, r24	; 0x804981 <_ZZ9makeMorsePcPbS0_E12elementIndex>
    ba38:	02 c0       	rjmp	.+4      	; 0xba3e <_Z9makeMorsePcPbS0_+0x22c>
				}
				else
				{
					elementIndex = 0;
    ba3a:	10 92 81 49 	sts	0x4981, r1	; 0x804981 <_ZZ9makeMorsePcPbS0_E12elementIndex>
				}

				carrierOn = true;
    ba3e:	81 e0       	ldi	r24, 0x01	; 1
    ba40:	80 93 84 49 	sts	0x4984, r24	; 0x804984 <_ZZ9makeMorsePcPbS0_E9carrierOn>

				if(symbolIndex >= morseInProgress.lengthInSymbols)
    ba44:	90 91 7d 49 	lds	r25, 0x497D	; 0x80497d <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x1>
    ba48:	80 91 80 49 	lds	r24, 0x4980	; 0x804980 <_ZZ9makeMorsePcPbS0_E11symbolIndex>
    ba4c:	89 17       	cp	r24, r25
    ba4e:	b8 f0       	brcs	.+46     	; 0xba7e <_Z9makeMorsePcPbS0_+0x26c>
				{
					addedSpace = 2;
    ba50:	82 e0       	ldi	r24, 0x02	; 2
    ba52:	80 93 82 49 	sts	0x4982, r24	; 0x804982 <_ZZ9makeMorsePcPbS0_E10addedSpace>
    ba56:	13 c0       	rjmp	.+38     	; 0xba7e <_Z9makeMorsePcPbS0_+0x26c>
				}
			}
			else
			{
				uint8_t sym = morseInProgress.lengthInSymbols;
    ba58:	80 91 7d 49 	lds	r24, 0x497D	; 0x80497d <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x1>
    ba5c:	8a 83       	std	Y+2, r24	; 0x02
				symbolIndex = 255;  /* ensure the next character gets read */
    ba5e:	8f ef       	ldi	r24, 0xFF	; 255
    ba60:	80 93 80 49 	sts	0x4980, r24	; 0x804980 <_ZZ9makeMorsePcPbS0_E11symbolIndex>
				carrierOn = false;
    ba64:	10 92 84 49 	sts	0x4984, r1	; 0x804984 <_ZZ9makeMorsePcPbS0_E9carrierOn>
				if(sym >= 4 )
    ba68:	8a 81       	ldd	r24, Y+2	; 0x02
    ba6a:	84 30       	cpi	r24, 0x04	; 4
    ba6c:	30 f0       	brcs	.+12     	; 0xba7a <_Z9makeMorsePcPbS0_+0x268>
				{
					elementIndex = morseInProgress.lengthInSymbols - 4;
    ba6e:	80 91 7d 49 	lds	r24, 0x497D	; 0x80497d <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x1>
    ba72:	84 50       	subi	r24, 0x04	; 4
    ba74:	80 93 81 49 	sts	0x4981, r24	; 0x804981 <_ZZ9makeMorsePcPbS0_E12elementIndex>
    ba78:	02 c0       	rjmp	.+4      	; 0xba7e <_Z9makeMorsePcPbS0_+0x26c>
				}
				else
				{
					elementIndex = 0;
    ba7a:	10 92 81 49 	sts	0x4981, r1	; 0x804981 <_ZZ9makeMorsePcPbS0_E12elementIndex>
				}
			}
		}

		/* Overrides for key on and key off special characters */
		if(c == '<')    /* constant tone */
    ba7e:	80 91 2d 40 	lds	r24, 0x402D	; 0x80402d <_ZZ9makeMorsePcPbS0_E1c>
    ba82:	8c 33       	cpi	r24, 0x3C	; 60
    ba84:	21 f4       	brne	.+8      	; 0xba8e <_Z9makeMorsePcPbS0_+0x27c>
		{
			holdKeyDown = true;
    ba86:	81 e0       	ldi	r24, 0x01	; 1
    ba88:	80 93 79 49 	sts	0x4979, r24	; 0x804979 <_ZZ9makeMorsePcPbS0_E11holdKeyDown>
    ba8c:	02 c0       	rjmp	.+4      	; 0xba92 <_Z9makeMorsePcPbS0_+0x280>
		}
		else
		{
			holdKeyDown = false;
    ba8e:	10 92 79 49 	sts	0x4979, r1	; 0x804979 <_ZZ9makeMorsePcPbS0_E11holdKeyDown>
		}
	}

	if(finished)
    ba92:	8f 81       	ldd	r24, Y+7	; 0x07
    ba94:	98 85       	ldd	r25, Y+8	; 0x08
    ba96:	89 2b       	or	r24, r25
    ba98:	31 f0       	breq	.+12     	; 0xbaa6 <_Z9makeMorsePcPbS0_+0x294>
	{
		*finished = completedString;
    ba9a:	20 91 83 49 	lds	r18, 0x4983	; 0x804983 <_ZZ9makeMorsePcPbS0_E15completedString>
    ba9e:	8f 81       	ldd	r24, Y+7	; 0x07
    baa0:	98 85       	ldd	r25, Y+8	; 0x08
    baa2:	fc 01       	movw	r30, r24
    baa4:	20 83       	st	Z, r18
	}

	if(holdKeyDown)
    baa6:	80 91 79 49 	lds	r24, 0x4979	; 0x804979 <_ZZ9makeMorsePcPbS0_E11holdKeyDown>
    baaa:	88 23       	and	r24, r24
    baac:	11 f0       	breq	.+4      	; 0xbab2 <_Z9makeMorsePcPbS0_+0x2a0>
	{
		return(true);
    baae:	81 e0       	ldi	r24, 0x01	; 1
    bab0:	02 c0       	rjmp	.+4      	; 0xbab6 <_Z9makeMorsePcPbS0_+0x2a4>
	}
	else
	{
		return( carrierOn);
    bab2:	80 91 84 49 	lds	r24, 0x4984	; 0x804984 <_ZZ9makeMorsePcPbS0_E9carrierOn>
	}
}
    bab6:	28 96       	adiw	r28, 0x08	; 8
    bab8:	cd bf       	out	0x3d, r28	; 61
    baba:	de bf       	out	0x3e, r29	; 62
    babc:	df 91       	pop	r29
    babe:	cf 91       	pop	r28
    bac0:	08 95       	ret

0000bac2 <_Z26timeRequiredToSendStrAtWPMPcj>:
/**
 *  Returns the number of milliseconds required to send the string pointed to by the first argument at the WPM code speed
 *  passed in the second argument.
 */
uint16_t timeRequiredToSendStrAtWPM(char* str, uint16_t spd)
{
    bac2:	cf 93       	push	r28
    bac4:	df 93       	push	r29
    bac6:	cd b7       	in	r28, 0x3d	; 61
    bac8:	de b7       	in	r29, 0x3e	; 62
    baca:	2b 97       	sbiw	r28, 0x0b	; 11
    bacc:	cd bf       	out	0x3d, r28	; 61
    bace:	de bf       	out	0x3e, r29	; 62
    bad0:	88 87       	std	Y+8, r24	; 0x08
    bad2:	99 87       	std	Y+9, r25	; 0x09
    bad4:	6a 87       	std	Y+10, r22	; 0x0a
    bad6:	7b 87       	std	Y+11, r23	; 0x0b
	uint8_t elements = 0;
    bad8:	19 82       	std	Y+1, r1	; 0x01
	MorseCharacter m;
	char c;

	for(int i = 0; i < 20; i++)
    bada:	1a 82       	std	Y+2, r1	; 0x02
    badc:	1b 82       	std	Y+3, r1	; 0x03
    bade:	8a 81       	ldd	r24, Y+2	; 0x02
    bae0:	9b 81       	ldd	r25, Y+3	; 0x03
    bae2:	44 97       	sbiw	r24, 0x14	; 20
    bae4:	2c f5       	brge	.+74     	; 0xbb30 <_Z26timeRequiredToSendStrAtWPMPcj+0x6e>
	{
		c = str[i];
    bae6:	8a 81       	ldd	r24, Y+2	; 0x02
    bae8:	9b 81       	ldd	r25, Y+3	; 0x03
    baea:	28 85       	ldd	r18, Y+8	; 0x08
    baec:	39 85       	ldd	r19, Y+9	; 0x09
    baee:	82 0f       	add	r24, r18
    baf0:	93 1f       	adc	r25, r19
    baf2:	fc 01       	movw	r30, r24
    baf4:	80 81       	ld	r24, Z
    baf6:	8c 83       	std	Y+4, r24	; 0x04
		if(!c)
    baf8:	8c 81       	ldd	r24, Y+4	; 0x04
    bafa:	88 23       	and	r24, r24
    bafc:	c1 f0       	breq	.+48     	; 0xbb2e <_Z26timeRequiredToSendStrAtWPMPcj+0x6c>
		{
			break;
		}
		m = getMorseChar(c);
    bafe:	8c 81       	ldd	r24, Y+4	; 0x04
    bb00:	0e 94 b1 5d 	call	0xbb62	; 0xbb62 <_Z12getMorseCharc>
    bb04:	a8 2f       	mov	r26, r24
    bb06:	cb 01       	movw	r24, r22
    bb08:	8d 83       	std	Y+5, r24	; 0x05
    bb0a:	9e 83       	std	Y+6, r25	; 0x06
    bb0c:	af 83       	std	Y+7, r26	; 0x07
		if(m.pattern < INTER_WORD_SPACE)
    bb0e:	8d 81       	ldd	r24, Y+5	; 0x05
    bb10:	8d 3f       	cpi	r24, 0xFD	; 253
    bb12:	18 f4       	brcc	.+6      	; 0xbb1a <_Z26timeRequiredToSendStrAtWPMPcj+0x58>
		{
			elements += 3;
    bb14:	89 81       	ldd	r24, Y+1	; 0x01
    bb16:	8d 5f       	subi	r24, 0xFD	; 253
    bb18:	89 83       	std	Y+1, r24	; 0x01
		}
		elements += m.lengthInElements;
    bb1a:	8f 81       	ldd	r24, Y+7	; 0x07
    bb1c:	99 81       	ldd	r25, Y+1	; 0x01
    bb1e:	89 0f       	add	r24, r25
    bb20:	89 83       	std	Y+1, r24	; 0x01
{
	uint8_t elements = 0;
	MorseCharacter m;
	char c;

	for(int i = 0; i < 20; i++)
    bb22:	8a 81       	ldd	r24, Y+2	; 0x02
    bb24:	9b 81       	ldd	r25, Y+3	; 0x03
    bb26:	01 96       	adiw	r24, 0x01	; 1
    bb28:	8a 83       	std	Y+2, r24	; 0x02
    bb2a:	9b 83       	std	Y+3, r25	; 0x03
    bb2c:	d8 cf       	rjmp	.-80     	; 0xbade <_Z26timeRequiredToSendStrAtWPMPcj+0x1c>
	{
		c = str[i];
		if(!c)
		{
			break;
    bb2e:	00 00       	nop
			elements += 3;
		}
		elements += m.lengthInElements;
	}

	return(elements * WPM_TO_MS_PER_DOT(spd));
    bb30:	89 81       	ldd	r24, Y+1	; 0x01
    bb32:	28 2f       	mov	r18, r24
    bb34:	30 e0       	ldi	r19, 0x00	; 0
    bb36:	80 eb       	ldi	r24, 0xB0	; 176
    bb38:	94 e0       	ldi	r25, 0x04	; 4
    bb3a:	4a 85       	ldd	r20, Y+10	; 0x0a
    bb3c:	5b 85       	ldd	r21, Y+11	; 0x0b
    bb3e:	ba 01       	movw	r22, r20
    bb40:	0e 94 c8 79 	call	0xf390	; 0xf390 <__udivmodhi4>
    bb44:	cb 01       	movw	r24, r22
    bb46:	ac 01       	movw	r20, r24
    bb48:	24 9f       	mul	r18, r20
    bb4a:	c0 01       	movw	r24, r0
    bb4c:	25 9f       	mul	r18, r21
    bb4e:	90 0d       	add	r25, r0
    bb50:	34 9f       	mul	r19, r20
    bb52:	90 0d       	add	r25, r0
    bb54:	11 24       	eor	r1, r1
}
    bb56:	2b 96       	adiw	r28, 0x0b	; 11
    bb58:	cd bf       	out	0x3d, r28	; 61
    bb5a:	de bf       	out	0x3e, r29	; 62
    bb5c:	df 91       	pop	r29
    bb5e:	cf 91       	pop	r28
    bb60:	08 95       	ret

0000bb62 <_Z12getMorseCharc>:
 *  pattern = a sequence of up to 8 dit and dah symbols contained in an unsigned byte, sequentially read from LSB to MSB (first symbol is bit 0)
 *  lengthInSymbols = how many symbols (dits and dahs) the character contains; this is how many pattern bits are used to represent the character
 *  lengthInElements = how long (measured in "dit lengths") is the total character including all inter-symbol spaces.
 */
MorseCharacter getMorseChar(char c)
{
    bb62:	cf 93       	push	r28
    bb64:	df 93       	push	r29
    bb66:	00 d0       	rcall	.+0      	; 0xbb68 <_Z12getMorseCharc+0x6>
    bb68:	00 d0       	rcall	.+0      	; 0xbb6a <_Z12getMorseCharc+0x8>
    bb6a:	cd b7       	in	r28, 0x3d	; 61
    bb6c:	de b7       	in	r29, 0x3e	; 62
    bb6e:	8c 83       	std	Y+4, r24	; 0x04
	MorseCharacter morse;

	switch( c )
    bb70:	8c 81       	ldd	r24, Y+4	; 0x04
    bb72:	88 2f       	mov	r24, r24
    bb74:	90 e0       	ldi	r25, 0x00	; 0
    bb76:	09 2e       	mov	r0, r25
    bb78:	00 0c       	add	r0, r0
    bb7a:	aa 0b       	sbc	r26, r26
    bb7c:	bb 0b       	sbc	r27, r27
    bb7e:	40 e2       	ldi	r20, 0x20	; 32
    bb80:	50 e0       	ldi	r21, 0x00	; 0
    bb82:	2c e5       	ldi	r18, 0x5C	; 92
    bb84:	30 e0       	ldi	r19, 0x00	; 0
    bb86:	84 1b       	sub	r24, r20
    bb88:	95 0b       	sbc	r25, r21
    bb8a:	28 17       	cp	r18, r24
    bb8c:	39 07       	cpc	r19, r25
    bb8e:	08 f4       	brcc	.+2      	; 0xbb92 <_Z12getMorseCharc+0x30>
    bb90:	8f c1       	rjmp	.+798    	; 0xbeb0 <_Z12getMorseCharc+0x34e>
    bb92:	8c 51       	subi	r24, 0x1C	; 28
    bb94:	9f 4f       	sbci	r25, 0xFF	; 255
    bb96:	fc 01       	movw	r30, r24
    bb98:	0c 94 31 7a 	jmp	0xf462	; 0xf462 <__tablejump2__>
	{
		case 'A':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
    bb9c:	82 e0       	ldi	r24, 0x02	; 2
    bb9e:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 2;
    bba0:	82 e0       	ldi	r24, 0x02	; 2
    bba2:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 5;
    bba4:	85 e0       	ldi	r24, 0x05	; 5
    bba6:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bba8:	87 c1       	rjmp	.+782    	; 0xbeb8 <_Z12getMorseCharc+0x356>

		case 'B':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    bbaa:	81 e0       	ldi	r24, 0x01	; 1
    bbac:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    bbae:	84 e0       	ldi	r24, 0x04	; 4
    bbb0:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    bbb2:	89 e0       	ldi	r24, 0x09	; 9
    bbb4:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bbb6:	80 c1       	rjmp	.+768    	; 0xbeb8 <_Z12getMorseCharc+0x356>

		case 'C':
		{
			morse.pattern = 0x05;   /* 0000 0101; */
    bbb8:	85 e0       	ldi	r24, 0x05	; 5
    bbba:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    bbbc:	84 e0       	ldi	r24, 0x04	; 4
    bbbe:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    bbc0:	8b e0       	ldi	r24, 0x0B	; 11
    bbc2:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bbc4:	79 c1       	rjmp	.+754    	; 0xbeb8 <_Z12getMorseCharc+0x356>

		case 'D':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    bbc6:	81 e0       	ldi	r24, 0x01	; 1
    bbc8:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 3;
    bbca:	83 e0       	ldi	r24, 0x03	; 3
    bbcc:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 7;
    bbce:	87 e0       	ldi	r24, 0x07	; 7
    bbd0:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bbd2:	72 c1       	rjmp	.+740    	; 0xbeb8 <_Z12getMorseCharc+0x356>

		case 'E':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    bbd4:	19 82       	std	Y+1, r1	; 0x01
			morse.lengthInSymbols = 1;
    bbd6:	81 e0       	ldi	r24, 0x01	; 1
    bbd8:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 1;
    bbda:	81 e0       	ldi	r24, 0x01	; 1
    bbdc:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bbde:	6c c1       	rjmp	.+728    	; 0xbeb8 <_Z12getMorseCharc+0x356>

		case 'F':
		{
			morse.pattern = 0x04;   /* 0000 0100; */
    bbe0:	84 e0       	ldi	r24, 0x04	; 4
    bbe2:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    bbe4:	84 e0       	ldi	r24, 0x04	; 4
    bbe6:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    bbe8:	89 e0       	ldi	r24, 0x09	; 9
    bbea:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bbec:	65 c1       	rjmp	.+714    	; 0xbeb8 <_Z12getMorseCharc+0x356>

		case 'G':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
    bbee:	83 e0       	ldi	r24, 0x03	; 3
    bbf0:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 3;
    bbf2:	83 e0       	ldi	r24, 0x03	; 3
    bbf4:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    bbf6:	89 e0       	ldi	r24, 0x09	; 9
    bbf8:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bbfa:	5e c1       	rjmp	.+700    	; 0xbeb8 <_Z12getMorseCharc+0x356>

		case 'H':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    bbfc:	19 82       	std	Y+1, r1	; 0x01
			morse.lengthInSymbols = 4;
    bbfe:	84 e0       	ldi	r24, 0x04	; 4
    bc00:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 7;
    bc02:	87 e0       	ldi	r24, 0x07	; 7
    bc04:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bc06:	58 c1       	rjmp	.+688    	; 0xbeb8 <_Z12getMorseCharc+0x356>

		case 'I':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    bc08:	19 82       	std	Y+1, r1	; 0x01
			morse.lengthInSymbols = 2;
    bc0a:	82 e0       	ldi	r24, 0x02	; 2
    bc0c:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 3;
    bc0e:	83 e0       	ldi	r24, 0x03	; 3
    bc10:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bc12:	52 c1       	rjmp	.+676    	; 0xbeb8 <_Z12getMorseCharc+0x356>

		case 'J':
		{
			morse.pattern = 0x0e;   /* 0000 1110; */
    bc14:	8e e0       	ldi	r24, 0x0E	; 14
    bc16:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    bc18:	84 e0       	ldi	r24, 0x04	; 4
    bc1a:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    bc1c:	8d e0       	ldi	r24, 0x0D	; 13
    bc1e:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bc20:	4b c1       	rjmp	.+662    	; 0xbeb8 <_Z12getMorseCharc+0x356>

		case 'K':
		{
			morse.pattern = 0x05;   /* 0000 0101; */
    bc22:	85 e0       	ldi	r24, 0x05	; 5
    bc24:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 3;
    bc26:	83 e0       	ldi	r24, 0x03	; 3
    bc28:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    bc2a:	89 e0       	ldi	r24, 0x09	; 9
    bc2c:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bc2e:	44 c1       	rjmp	.+648    	; 0xbeb8 <_Z12getMorseCharc+0x356>

		case 'L':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
    bc30:	82 e0       	ldi	r24, 0x02	; 2
    bc32:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    bc34:	84 e0       	ldi	r24, 0x04	; 4
    bc36:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    bc38:	89 e0       	ldi	r24, 0x09	; 9
    bc3a:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bc3c:	3d c1       	rjmp	.+634    	; 0xbeb8 <_Z12getMorseCharc+0x356>

		case 'M':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
    bc3e:	83 e0       	ldi	r24, 0x03	; 3
    bc40:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 2;
    bc42:	82 e0       	ldi	r24, 0x02	; 2
    bc44:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 7;
    bc46:	87 e0       	ldi	r24, 0x07	; 7
    bc48:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bc4a:	36 c1       	rjmp	.+620    	; 0xbeb8 <_Z12getMorseCharc+0x356>

		case 'N':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    bc4c:	81 e0       	ldi	r24, 0x01	; 1
    bc4e:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 2;
    bc50:	82 e0       	ldi	r24, 0x02	; 2
    bc52:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 5;
    bc54:	85 e0       	ldi	r24, 0x05	; 5
    bc56:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bc58:	2f c1       	rjmp	.+606    	; 0xbeb8 <_Z12getMorseCharc+0x356>

		case 'O':
		{
			morse.pattern = 0x07;   /* 0000 0111; */
    bc5a:	87 e0       	ldi	r24, 0x07	; 7
    bc5c:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 3;
    bc5e:	83 e0       	ldi	r24, 0x03	; 3
    bc60:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    bc62:	8b e0       	ldi	r24, 0x0B	; 11
    bc64:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bc66:	28 c1       	rjmp	.+592    	; 0xbeb8 <_Z12getMorseCharc+0x356>

		case 'P':
		{
			morse.pattern = 0x06;   /* 0000 0110; */
    bc68:	86 e0       	ldi	r24, 0x06	; 6
    bc6a:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    bc6c:	84 e0       	ldi	r24, 0x04	; 4
    bc6e:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    bc70:	8b e0       	ldi	r24, 0x0B	; 11
    bc72:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bc74:	21 c1       	rjmp	.+578    	; 0xbeb8 <_Z12getMorseCharc+0x356>

		case 'Q':
		{
			morse.pattern = 0x0b;   /* 0000 1011; */
    bc76:	8b e0       	ldi	r24, 0x0B	; 11
    bc78:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    bc7a:	84 e0       	ldi	r24, 0x04	; 4
    bc7c:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    bc7e:	8d e0       	ldi	r24, 0x0D	; 13
    bc80:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bc82:	1a c1       	rjmp	.+564    	; 0xbeb8 <_Z12getMorseCharc+0x356>

		case 'R':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
    bc84:	82 e0       	ldi	r24, 0x02	; 2
    bc86:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 3;
    bc88:	83 e0       	ldi	r24, 0x03	; 3
    bc8a:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 7;
    bc8c:	87 e0       	ldi	r24, 0x07	; 7
    bc8e:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bc90:	13 c1       	rjmp	.+550    	; 0xbeb8 <_Z12getMorseCharc+0x356>

		case 'S':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    bc92:	19 82       	std	Y+1, r1	; 0x01
			morse.lengthInSymbols = 3;
    bc94:	83 e0       	ldi	r24, 0x03	; 3
    bc96:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 5;
    bc98:	85 e0       	ldi	r24, 0x05	; 5
    bc9a:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bc9c:	0d c1       	rjmp	.+538    	; 0xbeb8 <_Z12getMorseCharc+0x356>

		case 'T':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    bc9e:	81 e0       	ldi	r24, 0x01	; 1
    bca0:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 1;
    bca2:	81 e0       	ldi	r24, 0x01	; 1
    bca4:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 3;
    bca6:	83 e0       	ldi	r24, 0x03	; 3
    bca8:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bcaa:	06 c1       	rjmp	.+524    	; 0xbeb8 <_Z12getMorseCharc+0x356>

		case 'U':
		{
			morse.pattern = 0x04;   /* 0000 0100; */
    bcac:	84 e0       	ldi	r24, 0x04	; 4
    bcae:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 3;
    bcb0:	83 e0       	ldi	r24, 0x03	; 3
    bcb2:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 7;
    bcb4:	87 e0       	ldi	r24, 0x07	; 7
    bcb6:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bcb8:	ff c0       	rjmp	.+510    	; 0xbeb8 <_Z12getMorseCharc+0x356>

		case 'V':
		{
			morse.pattern = 0x08;   /* 0000 1000; */
    bcba:	88 e0       	ldi	r24, 0x08	; 8
    bcbc:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    bcbe:	84 e0       	ldi	r24, 0x04	; 4
    bcc0:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    bcc2:	89 e0       	ldi	r24, 0x09	; 9
    bcc4:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bcc6:	f8 c0       	rjmp	.+496    	; 0xbeb8 <_Z12getMorseCharc+0x356>

		case 'W':
		{
			morse.pattern = 0x06;   /* 0000 0110; */
    bcc8:	86 e0       	ldi	r24, 0x06	; 6
    bcca:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 3;
    bccc:	83 e0       	ldi	r24, 0x03	; 3
    bcce:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    bcd0:	89 e0       	ldi	r24, 0x09	; 9
    bcd2:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bcd4:	f1 c0       	rjmp	.+482    	; 0xbeb8 <_Z12getMorseCharc+0x356>

		case 'X':
		{
			morse.pattern = 0x09;   /* 0000 1001; */
    bcd6:	89 e0       	ldi	r24, 0x09	; 9
    bcd8:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    bcda:	84 e0       	ldi	r24, 0x04	; 4
    bcdc:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    bcde:	8b e0       	ldi	r24, 0x0B	; 11
    bce0:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bce2:	ea c0       	rjmp	.+468    	; 0xbeb8 <_Z12getMorseCharc+0x356>

		case 'Y':
		{
			morse.pattern = 0x0d;   /* 0000 1101; */
    bce4:	8d e0       	ldi	r24, 0x0D	; 13
    bce6:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    bce8:	84 e0       	ldi	r24, 0x04	; 4
    bcea:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    bcec:	8d e0       	ldi	r24, 0x0D	; 13
    bcee:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bcf0:	e3 c0       	rjmp	.+454    	; 0xbeb8 <_Z12getMorseCharc+0x356>

		case 'Z':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
    bcf2:	83 e0       	ldi	r24, 0x03	; 3
    bcf4:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    bcf6:	84 e0       	ldi	r24, 0x04	; 4
    bcf8:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    bcfa:	8b e0       	ldi	r24, 0x0B	; 11
    bcfc:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bcfe:	dc c0       	rjmp	.+440    	; 0xbeb8 <_Z12getMorseCharc+0x356>

		case '0':
		{
			morse.pattern = 0x1f;   /* 0001 1111; */
    bd00:	8f e1       	ldi	r24, 0x1F	; 31
    bd02:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    bd04:	85 e0       	ldi	r24, 0x05	; 5
    bd06:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 19;
    bd08:	83 e1       	ldi	r24, 0x13	; 19
    bd0a:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bd0c:	d5 c0       	rjmp	.+426    	; 0xbeb8 <_Z12getMorseCharc+0x356>

		case '1':
		{
			morse.pattern = 0x1e;   /* 0001 1110; */
    bd0e:	8e e1       	ldi	r24, 0x1E	; 30
    bd10:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    bd12:	85 e0       	ldi	r24, 0x05	; 5
    bd14:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 17;
    bd16:	81 e1       	ldi	r24, 0x11	; 17
    bd18:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bd1a:	ce c0       	rjmp	.+412    	; 0xbeb8 <_Z12getMorseCharc+0x356>

		case '2':
		{
			morse.pattern = 0x1c;   /* 0001 1100; */
    bd1c:	8c e1       	ldi	r24, 0x1C	; 28
    bd1e:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    bd20:	85 e0       	ldi	r24, 0x05	; 5
    bd22:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 15;
    bd24:	8f e0       	ldi	r24, 0x0F	; 15
    bd26:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bd28:	c7 c0       	rjmp	.+398    	; 0xbeb8 <_Z12getMorseCharc+0x356>

		case '3':
		{
			morse.pattern = 0x18;   /* 0001 1000; */
    bd2a:	88 e1       	ldi	r24, 0x18	; 24
    bd2c:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    bd2e:	85 e0       	ldi	r24, 0x05	; 5
    bd30:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    bd32:	8d e0       	ldi	r24, 0x0D	; 13
    bd34:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bd36:	c0 c0       	rjmp	.+384    	; 0xbeb8 <_Z12getMorseCharc+0x356>

		case '4':
		{
			morse.pattern = 0x10;   /* 0001 0000; */
    bd38:	80 e1       	ldi	r24, 0x10	; 16
    bd3a:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    bd3c:	85 e0       	ldi	r24, 0x05	; 5
    bd3e:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    bd40:	8b e0       	ldi	r24, 0x0B	; 11
    bd42:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bd44:	b9 c0       	rjmp	.+370    	; 0xbeb8 <_Z12getMorseCharc+0x356>

		case '5':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    bd46:	19 82       	std	Y+1, r1	; 0x01
			morse.lengthInSymbols = 5;
    bd48:	85 e0       	ldi	r24, 0x05	; 5
    bd4a:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    bd4c:	89 e0       	ldi	r24, 0x09	; 9
    bd4e:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bd50:	b3 c0       	rjmp	.+358    	; 0xbeb8 <_Z12getMorseCharc+0x356>

		case '6':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    bd52:	81 e0       	ldi	r24, 0x01	; 1
    bd54:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    bd56:	85 e0       	ldi	r24, 0x05	; 5
    bd58:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    bd5a:	8b e0       	ldi	r24, 0x0B	; 11
    bd5c:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bd5e:	ac c0       	rjmp	.+344    	; 0xbeb8 <_Z12getMorseCharc+0x356>

		case '7':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
    bd60:	83 e0       	ldi	r24, 0x03	; 3
    bd62:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    bd64:	85 e0       	ldi	r24, 0x05	; 5
    bd66:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    bd68:	8d e0       	ldi	r24, 0x0D	; 13
    bd6a:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bd6c:	a5 c0       	rjmp	.+330    	; 0xbeb8 <_Z12getMorseCharc+0x356>

		case '8':
		{
			morse.pattern = 0x07;   /* 0000 0111; */
    bd6e:	87 e0       	ldi	r24, 0x07	; 7
    bd70:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    bd72:	85 e0       	ldi	r24, 0x05	; 5
    bd74:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 15;
    bd76:	8f e0       	ldi	r24, 0x0F	; 15
    bd78:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bd7a:	9e c0       	rjmp	.+316    	; 0xbeb8 <_Z12getMorseCharc+0x356>

		case '9':
		{
			morse.pattern = 0x0f;   /* 0000 1111; */
    bd7c:	8f e0       	ldi	r24, 0x0F	; 15
    bd7e:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    bd80:	85 e0       	ldi	r24, 0x05	; 5
    bd82:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 17;
    bd84:	81 e1       	ldi	r24, 0x11	; 17
    bd86:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bd88:	97 c0       	rjmp	.+302    	; 0xbeb8 <_Z12getMorseCharc+0x356>

		case '.':
		{
			morse.pattern = 0x2a;   /* 0010 1010; */
    bd8a:	8a e2       	ldi	r24, 0x2A	; 42
    bd8c:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    bd8e:	86 e0       	ldi	r24, 0x06	; 6
    bd90:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 17;
    bd92:	81 e1       	ldi	r24, 0x11	; 17
    bd94:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bd96:	90 c0       	rjmp	.+288    	; 0xbeb8 <_Z12getMorseCharc+0x356>

		case ',':
		{
			morse.pattern = 0x33;   /* 0011 0011; */
    bd98:	83 e3       	ldi	r24, 0x33	; 51
    bd9a:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    bd9c:	86 e0       	ldi	r24, 0x06	; 6
    bd9e:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 19;
    bda0:	83 e1       	ldi	r24, 0x13	; 19
    bda2:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bda4:	89 c0       	rjmp	.+274    	; 0xbeb8 <_Z12getMorseCharc+0x356>

		case '?':
		{
			morse.pattern = 0x0c;   /* 0000 1100; */
    bda6:	8c e0       	ldi	r24, 0x0C	; 12
    bda8:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    bdaa:	86 e0       	ldi	r24, 0x06	; 6
    bdac:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 15;
    bdae:	8f e0       	ldi	r24, 0x0F	; 15
    bdb0:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bdb2:	82 c0       	rjmp	.+260    	; 0xbeb8 <_Z12getMorseCharc+0x356>

		case '\'':
		{
			morse.pattern = 0x1e;   /* 0001 1110; */
    bdb4:	8e e1       	ldi	r24, 0x1E	; 30
    bdb6:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    bdb8:	86 e0       	ldi	r24, 0x06	; 6
    bdba:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 19;
    bdbc:	83 e1       	ldi	r24, 0x13	; 19
    bdbe:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bdc0:	7b c0       	rjmp	.+246    	; 0xbeb8 <_Z12getMorseCharc+0x356>

		case '!':
		{
			morse.pattern = 0x35;   /* 0011 0101; */
    bdc2:	85 e3       	ldi	r24, 0x35	; 53
    bdc4:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    bdc6:	86 e0       	ldi	r24, 0x06	; 6
    bdc8:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 19;
    bdca:	83 e1       	ldi	r24, 0x13	; 19
    bdcc:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bdce:	74 c0       	rjmp	.+232    	; 0xbeb8 <_Z12getMorseCharc+0x356>

		case '/':
		{
			morse.pattern = 0x09;   /* 0000 1001; */
    bdd0:	89 e0       	ldi	r24, 0x09	; 9
    bdd2:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    bdd4:	85 e0       	ldi	r24, 0x05	; 5
    bdd6:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    bdd8:	8d e0       	ldi	r24, 0x0D	; 13
    bdda:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bddc:	6d c0       	rjmp	.+218    	; 0xbeb8 <_Z12getMorseCharc+0x356>

		case '(':
		{
			morse.pattern = 0x0d;   /* 0000 1101; */
    bdde:	8d e0       	ldi	r24, 0x0D	; 13
    bde0:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    bde2:	85 e0       	ldi	r24, 0x05	; 5
    bde4:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 15;
    bde6:	8f e0       	ldi	r24, 0x0F	; 15
    bde8:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bdea:	66 c0       	rjmp	.+204    	; 0xbeb8 <_Z12getMorseCharc+0x356>

		case ')':
		{
			morse.pattern = 0x2d;   /* 0010 1101; */
    bdec:	8d e2       	ldi	r24, 0x2D	; 45
    bdee:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    bdf0:	86 e0       	ldi	r24, 0x06	; 6
    bdf2:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 19;
    bdf4:	83 e1       	ldi	r24, 0x13	; 19
    bdf6:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bdf8:	5f c0       	rjmp	.+190    	; 0xbeb8 <_Z12getMorseCharc+0x356>

		case '&':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
    bdfa:	82 e0       	ldi	r24, 0x02	; 2
    bdfc:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    bdfe:	85 e0       	ldi	r24, 0x05	; 5
    be00:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    be02:	8b e0       	ldi	r24, 0x0B	; 11
    be04:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    be06:	58 c0       	rjmp	.+176    	; 0xbeb8 <_Z12getMorseCharc+0x356>

		case ':':
		{
			morse.pattern = 0x07;   /* 0000 0111; */
    be08:	87 e0       	ldi	r24, 0x07	; 7
    be0a:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    be0c:	86 e0       	ldi	r24, 0x06	; 6
    be0e:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 17;
    be10:	81 e1       	ldi	r24, 0x11	; 17
    be12:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    be14:	51 c0       	rjmp	.+162    	; 0xbeb8 <_Z12getMorseCharc+0x356>

		case ';':
		{
			morse.pattern = 0x15;   /* 0001 0101; */
    be16:	85 e1       	ldi	r24, 0x15	; 21
    be18:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    be1a:	86 e0       	ldi	r24, 0x06	; 6
    be1c:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 12;
    be1e:	8c e0       	ldi	r24, 0x0C	; 12
    be20:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    be22:	4a c0       	rjmp	.+148    	; 0xbeb8 <_Z12getMorseCharc+0x356>

		case '=':
		{
			morse.pattern = 0x11;   /* 0001 0001; */
    be24:	81 e1       	ldi	r24, 0x11	; 17
    be26:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    be28:	85 e0       	ldi	r24, 0x05	; 5
    be2a:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    be2c:	8d e0       	ldi	r24, 0x0D	; 13
    be2e:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    be30:	43 c0       	rjmp	.+134    	; 0xbeb8 <_Z12getMorseCharc+0x356>

		case '+':
		{
			morse.pattern = 0x0a;   /* 0000 1010; */
    be32:	8a e0       	ldi	r24, 0x0A	; 10
    be34:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    be36:	85 e0       	ldi	r24, 0x05	; 5
    be38:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    be3a:	8d e0       	ldi	r24, 0x0D	; 13
    be3c:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    be3e:	3c c0       	rjmp	.+120    	; 0xbeb8 <_Z12getMorseCharc+0x356>

		case '-':
		{
			morse.pattern = 0x21;   /* 0010 0001; */
    be40:	81 e2       	ldi	r24, 0x21	; 33
    be42:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    be44:	86 e0       	ldi	r24, 0x06	; 6
    be46:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 15;
    be48:	8f e0       	ldi	r24, 0x0F	; 15
    be4a:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    be4c:	35 c0       	rjmp	.+106    	; 0xbeb8 <_Z12getMorseCharc+0x356>

		case '_':
		{
			morse.pattern = 0x2c;   /* 0010 1100; */
    be4e:	8c e2       	ldi	r24, 0x2C	; 44
    be50:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    be52:	86 e0       	ldi	r24, 0x06	; 6
    be54:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 17;
    be56:	81 e1       	ldi	r24, 0x11	; 17
    be58:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    be5a:	2e c0       	rjmp	.+92     	; 0xbeb8 <_Z12getMorseCharc+0x356>

		case '"':
		{
			morse.pattern = 0x12;   /* 0001 0010; */
    be5c:	82 e1       	ldi	r24, 0x12	; 18
    be5e:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    be60:	86 e0       	ldi	r24, 0x06	; 6
    be62:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 15;
    be64:	8f e0       	ldi	r24, 0x0F	; 15
    be66:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    be68:	27 c0       	rjmp	.+78     	; 0xbeb8 <_Z12getMorseCharc+0x356>

		case '$':
		{
			morse.pattern = 0x48;   /* 0100 1000; */
    be6a:	88 e4       	ldi	r24, 0x48	; 72
    be6c:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 7;
    be6e:	87 e0       	ldi	r24, 0x07	; 7
    be70:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 17;
    be72:	81 e1       	ldi	r24, 0x11	; 17
    be74:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    be76:	20 c0       	rjmp	.+64     	; 0xbeb8 <_Z12getMorseCharc+0x356>

		case '@':
		{
			morse.pattern = 0x16;   /* 0001 0110; */
    be78:	86 e1       	ldi	r24, 0x16	; 22
    be7a:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    be7c:	86 e0       	ldi	r24, 0x06	; 6
    be7e:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 17;
    be80:	81 e1       	ldi	r24, 0x11	; 17
    be82:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    be84:	19 c0       	rjmp	.+50     	; 0xbeb8 <_Z12getMorseCharc+0x356>

		case '|':                       /* inter-word space */
		{ morse.pattern = 0xff;         /* 1000 0000; */
    be86:	8f ef       	ldi	r24, 0xFF	; 255
    be88:	89 83       	std	Y+1, r24	; 0x01
		  morse.lengthInSymbols = 7;
    be8a:	87 e0       	ldi	r24, 0x07	; 7
    be8c:	8a 83       	std	Y+2, r24	; 0x02
		  morse.lengthInElements = 4;   /* adjusted by -3 to account for inter-character space */
    be8e:	84 e0       	ldi	r24, 0x04	; 4
    be90:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    be92:	12 c0       	rjmp	.+36     	; 0xbeb8 <_Z12getMorseCharc+0x356>

		case ' ':                       /* inter-word space */
		{ morse.pattern = 0xfe;         /* 1000 0000; */
    be94:	8e ef       	ldi	r24, 0xFE	; 254
    be96:	89 83       	std	Y+1, r24	; 0x01
		  morse.lengthInSymbols = 7;
    be98:	87 e0       	ldi	r24, 0x07	; 7
    be9a:	8a 83       	std	Y+2, r24	; 0x02
		  morse.lengthInElements = 7;   /* 4 + 3 (character space) = 7 */
    be9c:	87 e0       	ldi	r24, 0x07	; 7
    be9e:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bea0:	0b c0       	rjmp	.+22     	; 0xbeb8 <_Z12getMorseCharc+0x356>

		case '<':                       /* long keydown */
		{
			morse.pattern = 0x1f;       /* 0001 1111; */
    bea2:	8f e1       	ldi	r24, 0x1F	; 31
    bea4:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    bea6:	85 e0       	ldi	r24, 0x05	; 5
    bea8:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 19;
    beaa:	83 e1       	ldi	r24, 0x13	; 19
    beac:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    beae:	04 c0       	rjmp	.+8      	; 0xbeb8 <_Z12getMorseCharc+0x356>

		default:
		{
			morse.pattern = 0x0000; /* 0000 0000; */
    beb0:	19 82       	std	Y+1, r1	; 0x01
			morse.lengthInSymbols = 0;
    beb2:	1a 82       	std	Y+2, r1	; 0x02
			morse.lengthInElements = 0;
    beb4:	1b 82       	std	Y+3, r1	; 0x03
		}
		break;
    beb6:	00 00       	nop
	}

	return( morse);
    beb8:	89 81       	ldd	r24, Y+1	; 0x01
    beba:	9a 81       	ldd	r25, Y+2	; 0x02
    bebc:	ab 81       	ldd	r26, Y+3	; 0x03
}
    bebe:	bc 01       	movw	r22, r24
    bec0:	8a 2f       	mov	r24, r26
    bec2:	24 96       	adiw	r28, 0x04	; 4
    bec4:	cd bf       	out	0x3d, r28	; 61
    bec6:	de bf       	out	0x3e, r29	; 62
    bec8:	df 91       	pop	r29
    beca:	cf 91       	pop	r28
    becc:	08 95       	ret

0000bece <protected_write_io>:
	PUBLIC_FUNCTION(protected_write_io)

#if defined(__GNUC__)
  
#ifdef RAMPZ
	out     _SFR_IO_ADDR(RAMPZ), r1         // Clear bits 23:16 of Z
    bece:	1b be       	out	0x3b, r1	; 59
#endif
	movw    r30, r24                // Load addr into Z
    bed0:	fc 01       	movw	r30, r24
	out     CCP, r22                // Start CCP handshake
    bed2:	64 bf       	out	0x34, r22	; 52
	st      Z, r20                  // Write value to I/O register
    bed4:	40 83       	st	Z, r20
	ret                             // Return to caller
    bed6:	08 95       	ret

0000bed8 <PORTC_set_pin_pull_mode>:

	for(bufferIndex=0; bufferIndex<SERIALBUS_NUMBER_OF_TX_MSG_BUFFERS; bufferIndex++)
	{
		tx_buffer[bufferIndex][0] = '\0';
	}
}
    bed8:	cf 93       	push	r28
    beda:	df 93       	push	r29
    bedc:	00 d0       	rcall	.+0      	; 0xbede <PORTC_set_pin_pull_mode+0x6>
    bede:	00 d0       	rcall	.+0      	; 0xbee0 <PORTC_set_pin_pull_mode+0x8>
    bee0:	cd b7       	in	r28, 0x3d	; 61
    bee2:	de b7       	in	r29, 0x3e	; 62
    bee4:	8b 83       	std	Y+3, r24	; 0x03
    bee6:	6c 83       	std	Y+4, r22	; 0x04
    bee8:	8b 81       	ldd	r24, Y+3	; 0x03
    beea:	88 2f       	mov	r24, r24
    beec:	90 e0       	ldi	r25, 0x00	; 0
    beee:	80 5b       	subi	r24, 0xB0	; 176
    bef0:	9b 4f       	sbci	r25, 0xFB	; 251
    bef2:	89 83       	std	Y+1, r24	; 0x01
    bef4:	9a 83       	std	Y+2, r25	; 0x02
    bef6:	8c 81       	ldd	r24, Y+4	; 0x04
    bef8:	81 30       	cpi	r24, 0x01	; 1
    befa:	59 f4       	brne	.+22     	; 0xbf12 <PORTC_set_pin_pull_mode+0x3a>
    befc:	89 81       	ldd	r24, Y+1	; 0x01
    befe:	9a 81       	ldd	r25, Y+2	; 0x02
    bf00:	fc 01       	movw	r30, r24
    bf02:	80 81       	ld	r24, Z
    bf04:	28 2f       	mov	r18, r24
    bf06:	28 60       	ori	r18, 0x08	; 8
    bf08:	89 81       	ldd	r24, Y+1	; 0x01
    bf0a:	9a 81       	ldd	r25, Y+2	; 0x02
    bf0c:	fc 01       	movw	r30, r24
    bf0e:	20 83       	st	Z, r18
    bf10:	0d c0       	rjmp	.+26     	; 0xbf2c <PORTC_set_pin_pull_mode+0x54>
    bf12:	8c 81       	ldd	r24, Y+4	; 0x04
    bf14:	88 23       	and	r24, r24
    bf16:	51 f4       	brne	.+20     	; 0xbf2c <PORTC_set_pin_pull_mode+0x54>
    bf18:	89 81       	ldd	r24, Y+1	; 0x01
    bf1a:	9a 81       	ldd	r25, Y+2	; 0x02
    bf1c:	fc 01       	movw	r30, r24
    bf1e:	80 81       	ld	r24, Z
    bf20:	28 2f       	mov	r18, r24
    bf22:	27 7f       	andi	r18, 0xF7	; 247
    bf24:	89 81       	ldd	r24, Y+1	; 0x01
    bf26:	9a 81       	ldd	r25, Y+2	; 0x02
    bf28:	fc 01       	movw	r30, r24
    bf2a:	20 83       	st	Z, r18
    bf2c:	00 00       	nop
    bf2e:	24 96       	adiw	r28, 0x04	; 4
    bf30:	cd bf       	out	0x3d, r28	; 61
    bf32:	de bf       	out	0x3e, r29	; 62
    bf34:	df 91       	pop	r29
    bf36:	cf 91       	pop	r28
    bf38:	08 95       	ret

0000bf3a <PORTC_set_pin_dir>:
    bf3a:	cf 93       	push	r28
    bf3c:	df 93       	push	r29
    bf3e:	00 d0       	rcall	.+0      	; 0xbf40 <PORTC_set_pin_dir+0x6>
    bf40:	cd b7       	in	r28, 0x3d	; 61
    bf42:	de b7       	in	r29, 0x3e	; 62
    bf44:	89 83       	std	Y+1, r24	; 0x01
    bf46:	6a 83       	std	Y+2, r22	; 0x02
    bf48:	8a 81       	ldd	r24, Y+2	; 0x02
    bf4a:	88 2f       	mov	r24, r24
    bf4c:	90 e0       	ldi	r25, 0x00	; 0
    bf4e:	81 30       	cpi	r24, 0x01	; 1
    bf50:	91 05       	cpc	r25, r1
    bf52:	e1 f0       	breq	.+56     	; 0xbf8c <PORTC_set_pin_dir+0x52>
    bf54:	82 30       	cpi	r24, 0x02	; 2
    bf56:	91 05       	cpc	r25, r1
    bf58:	71 f1       	breq	.+92     	; 0xbfb6 <PORTC_set_pin_dir+0x7c>
    bf5a:	89 2b       	or	r24, r25
    bf5c:	09 f0       	breq	.+2      	; 0xbf60 <PORTC_set_pin_dir+0x26>
    bf5e:	3b c0       	rjmp	.+118    	; 0xbfd6 <PORTC_set_pin_dir+0x9c>
    bf60:	88 e0       	ldi	r24, 0x08	; 8
    bf62:	90 e0       	ldi	r25, 0x00	; 0
    bf64:	28 e0       	ldi	r18, 0x08	; 8
    bf66:	30 e0       	ldi	r19, 0x00	; 0
    bf68:	f9 01       	movw	r30, r18
    bf6a:	20 81       	ld	r18, Z
    bf6c:	62 2f       	mov	r22, r18
    bf6e:	29 81       	ldd	r18, Y+1	; 0x01
    bf70:	42 2f       	mov	r20, r18
    bf72:	50 e0       	ldi	r21, 0x00	; 0
    bf74:	21 e0       	ldi	r18, 0x01	; 1
    bf76:	30 e0       	ldi	r19, 0x00	; 0
    bf78:	02 c0       	rjmp	.+4      	; 0xbf7e <PORTC_set_pin_dir+0x44>
    bf7a:	22 0f       	add	r18, r18
    bf7c:	33 1f       	adc	r19, r19
    bf7e:	4a 95       	dec	r20
    bf80:	e2 f7       	brpl	.-8      	; 0xbf7a <PORTC_set_pin_dir+0x40>
    bf82:	20 95       	com	r18
    bf84:	26 23       	and	r18, r22
    bf86:	fc 01       	movw	r30, r24
    bf88:	20 83       	st	Z, r18
    bf8a:	25 c0       	rjmp	.+74     	; 0xbfd6 <PORTC_set_pin_dir+0x9c>
    bf8c:	88 e0       	ldi	r24, 0x08	; 8
    bf8e:	90 e0       	ldi	r25, 0x00	; 0
    bf90:	28 e0       	ldi	r18, 0x08	; 8
    bf92:	30 e0       	ldi	r19, 0x00	; 0
    bf94:	f9 01       	movw	r30, r18
    bf96:	20 81       	ld	r18, Z
    bf98:	62 2f       	mov	r22, r18
    bf9a:	29 81       	ldd	r18, Y+1	; 0x01
    bf9c:	42 2f       	mov	r20, r18
    bf9e:	50 e0       	ldi	r21, 0x00	; 0
    bfa0:	21 e0       	ldi	r18, 0x01	; 1
    bfa2:	30 e0       	ldi	r19, 0x00	; 0
    bfa4:	02 c0       	rjmp	.+4      	; 0xbfaa <PORTC_set_pin_dir+0x70>
    bfa6:	22 0f       	add	r18, r18
    bfa8:	33 1f       	adc	r19, r19
    bfaa:	4a 95       	dec	r20
    bfac:	e2 f7       	brpl	.-8      	; 0xbfa6 <PORTC_set_pin_dir+0x6c>
    bfae:	26 2b       	or	r18, r22
    bfb0:	fc 01       	movw	r30, r24
    bfb2:	20 83       	st	Z, r18
    bfb4:	10 c0       	rjmp	.+32     	; 0xbfd6 <PORTC_set_pin_dir+0x9c>
    bfb6:	89 81       	ldd	r24, Y+1	; 0x01
    bfb8:	88 2f       	mov	r24, r24
    bfba:	90 e0       	ldi	r25, 0x00	; 0
    bfbc:	80 5b       	subi	r24, 0xB0	; 176
    bfbe:	9b 4f       	sbci	r25, 0xFB	; 251
    bfc0:	29 81       	ldd	r18, Y+1	; 0x01
    bfc2:	22 2f       	mov	r18, r18
    bfc4:	30 e0       	ldi	r19, 0x00	; 0
    bfc6:	20 5b       	subi	r18, 0xB0	; 176
    bfc8:	3b 4f       	sbci	r19, 0xFB	; 251
    bfca:	f9 01       	movw	r30, r18
    bfcc:	20 81       	ld	r18, Z
    bfce:	28 60       	ori	r18, 0x08	; 8
    bfd0:	fc 01       	movw	r30, r24
    bfd2:	20 83       	st	Z, r18
    bfd4:	00 00       	nop
    bfd6:	00 00       	nop
    bfd8:	0f 90       	pop	r0
    bfda:	0f 90       	pop	r0
    bfdc:	df 91       	pop	r29
    bfde:	cf 91       	pop	r28
    bfe0:	08 95       	ret

0000bfe2 <PORTC_set_pin_level>:
    bfe2:	cf 93       	push	r28
    bfe4:	df 93       	push	r29
    bfe6:	00 d0       	rcall	.+0      	; 0xbfe8 <PORTC_set_pin_level+0x6>
    bfe8:	cd b7       	in	r28, 0x3d	; 61
    bfea:	de b7       	in	r29, 0x3e	; 62
    bfec:	89 83       	std	Y+1, r24	; 0x01
    bfee:	6a 83       	std	Y+2, r22	; 0x02
    bff0:	8a 81       	ldd	r24, Y+2	; 0x02
    bff2:	88 23       	and	r24, r24
    bff4:	a9 f0       	breq	.+42     	; 0xc020 <PORTC_set_pin_level+0x3e>
    bff6:	88 e0       	ldi	r24, 0x08	; 8
    bff8:	90 e0       	ldi	r25, 0x00	; 0
    bffa:	28 e0       	ldi	r18, 0x08	; 8
    bffc:	30 e0       	ldi	r19, 0x00	; 0
    bffe:	f9 01       	movw	r30, r18
    c000:	21 81       	ldd	r18, Z+1	; 0x01
    c002:	62 2f       	mov	r22, r18
    c004:	29 81       	ldd	r18, Y+1	; 0x01
    c006:	42 2f       	mov	r20, r18
    c008:	50 e0       	ldi	r21, 0x00	; 0
    c00a:	21 e0       	ldi	r18, 0x01	; 1
    c00c:	30 e0       	ldi	r19, 0x00	; 0
    c00e:	02 c0       	rjmp	.+4      	; 0xc014 <PORTC_set_pin_level+0x32>
    c010:	22 0f       	add	r18, r18
    c012:	33 1f       	adc	r19, r19
    c014:	4a 95       	dec	r20
    c016:	e2 f7       	brpl	.-8      	; 0xc010 <PORTC_set_pin_level+0x2e>
    c018:	26 2b       	or	r18, r22
    c01a:	fc 01       	movw	r30, r24
    c01c:	21 83       	std	Z+1, r18	; 0x01
    c01e:	15 c0       	rjmp	.+42     	; 0xc04a <PORTC_set_pin_level+0x68>
    c020:	88 e0       	ldi	r24, 0x08	; 8
    c022:	90 e0       	ldi	r25, 0x00	; 0
    c024:	28 e0       	ldi	r18, 0x08	; 8
    c026:	30 e0       	ldi	r19, 0x00	; 0
    c028:	f9 01       	movw	r30, r18
    c02a:	21 81       	ldd	r18, Z+1	; 0x01
    c02c:	62 2f       	mov	r22, r18
    c02e:	29 81       	ldd	r18, Y+1	; 0x01
    c030:	42 2f       	mov	r20, r18
    c032:	50 e0       	ldi	r21, 0x00	; 0
    c034:	21 e0       	ldi	r18, 0x01	; 1
    c036:	30 e0       	ldi	r19, 0x00	; 0
    c038:	02 c0       	rjmp	.+4      	; 0xc03e <PORTC_set_pin_level+0x5c>
    c03a:	22 0f       	add	r18, r18
    c03c:	33 1f       	adc	r19, r19
    c03e:	4a 95       	dec	r20
    c040:	e2 f7       	brpl	.-8      	; 0xc03a <PORTC_set_pin_level+0x58>
    c042:	20 95       	com	r18
    c044:	26 23       	and	r18, r22
    c046:	fc 01       	movw	r30, r24
    c048:	21 83       	std	Z+1, r18	; 0x01
    c04a:	00 00       	nop
    c04c:	0f 90       	pop	r0
    c04e:	0f 90       	pop	r0
    c050:	df 91       	pop	r29
    c052:	cf 91       	pop	r28
    c054:	08 95       	ret

0000c056 <PORTE_set_pin_pull_mode>:
    c056:	cf 93       	push	r28
    c058:	df 93       	push	r29
    c05a:	00 d0       	rcall	.+0      	; 0xc05c <PORTE_set_pin_pull_mode+0x6>
    c05c:	00 d0       	rcall	.+0      	; 0xc05e <PORTE_set_pin_pull_mode+0x8>
    c05e:	cd b7       	in	r28, 0x3d	; 61
    c060:	de b7       	in	r29, 0x3e	; 62
    c062:	8b 83       	std	Y+3, r24	; 0x03
    c064:	6c 83       	std	Y+4, r22	; 0x04
    c066:	8b 81       	ldd	r24, Y+3	; 0x03
    c068:	88 2f       	mov	r24, r24
    c06a:	90 e0       	ldi	r25, 0x00	; 0
    c06c:	80 57       	subi	r24, 0x70	; 112
    c06e:	9b 4f       	sbci	r25, 0xFB	; 251
    c070:	89 83       	std	Y+1, r24	; 0x01
    c072:	9a 83       	std	Y+2, r25	; 0x02
    c074:	8c 81       	ldd	r24, Y+4	; 0x04
    c076:	81 30       	cpi	r24, 0x01	; 1
    c078:	59 f4       	brne	.+22     	; 0xc090 <PORTE_set_pin_pull_mode+0x3a>
    c07a:	89 81       	ldd	r24, Y+1	; 0x01
    c07c:	9a 81       	ldd	r25, Y+2	; 0x02
    c07e:	fc 01       	movw	r30, r24
    c080:	80 81       	ld	r24, Z
    c082:	28 2f       	mov	r18, r24
    c084:	28 60       	ori	r18, 0x08	; 8
    c086:	89 81       	ldd	r24, Y+1	; 0x01
    c088:	9a 81       	ldd	r25, Y+2	; 0x02
    c08a:	fc 01       	movw	r30, r24
    c08c:	20 83       	st	Z, r18
    c08e:	0d c0       	rjmp	.+26     	; 0xc0aa <PORTE_set_pin_pull_mode+0x54>
    c090:	8c 81       	ldd	r24, Y+4	; 0x04
    c092:	88 23       	and	r24, r24
    c094:	51 f4       	brne	.+20     	; 0xc0aa <PORTE_set_pin_pull_mode+0x54>
    c096:	89 81       	ldd	r24, Y+1	; 0x01
    c098:	9a 81       	ldd	r25, Y+2	; 0x02
    c09a:	fc 01       	movw	r30, r24
    c09c:	80 81       	ld	r24, Z
    c09e:	28 2f       	mov	r18, r24
    c0a0:	27 7f       	andi	r18, 0xF7	; 247
    c0a2:	89 81       	ldd	r24, Y+1	; 0x01
    c0a4:	9a 81       	ldd	r25, Y+2	; 0x02
    c0a6:	fc 01       	movw	r30, r24
    c0a8:	20 83       	st	Z, r18
    c0aa:	00 00       	nop
    c0ac:	24 96       	adiw	r28, 0x04	; 4
    c0ae:	cd bf       	out	0x3d, r28	; 61
    c0b0:	de bf       	out	0x3e, r29	; 62
    c0b2:	df 91       	pop	r29
    c0b4:	cf 91       	pop	r28
    c0b6:	08 95       	ret

0000c0b8 <PORTE_set_pin_dir>:
    c0b8:	cf 93       	push	r28
    c0ba:	df 93       	push	r29
    c0bc:	00 d0       	rcall	.+0      	; 0xc0be <PORTE_set_pin_dir+0x6>
    c0be:	cd b7       	in	r28, 0x3d	; 61
    c0c0:	de b7       	in	r29, 0x3e	; 62
    c0c2:	89 83       	std	Y+1, r24	; 0x01
    c0c4:	6a 83       	std	Y+2, r22	; 0x02
    c0c6:	8a 81       	ldd	r24, Y+2	; 0x02
    c0c8:	88 2f       	mov	r24, r24
    c0ca:	90 e0       	ldi	r25, 0x00	; 0
    c0cc:	81 30       	cpi	r24, 0x01	; 1
    c0ce:	91 05       	cpc	r25, r1
    c0d0:	e1 f0       	breq	.+56     	; 0xc10a <PORTE_set_pin_dir+0x52>
    c0d2:	82 30       	cpi	r24, 0x02	; 2
    c0d4:	91 05       	cpc	r25, r1
    c0d6:	71 f1       	breq	.+92     	; 0xc134 <PORTE_set_pin_dir+0x7c>
    c0d8:	89 2b       	or	r24, r25
    c0da:	09 f0       	breq	.+2      	; 0xc0de <PORTE_set_pin_dir+0x26>
    c0dc:	3b c0       	rjmp	.+118    	; 0xc154 <PORTE_set_pin_dir+0x9c>
    c0de:	80 e1       	ldi	r24, 0x10	; 16
    c0e0:	90 e0       	ldi	r25, 0x00	; 0
    c0e2:	20 e1       	ldi	r18, 0x10	; 16
    c0e4:	30 e0       	ldi	r19, 0x00	; 0
    c0e6:	f9 01       	movw	r30, r18
    c0e8:	20 81       	ld	r18, Z
    c0ea:	62 2f       	mov	r22, r18
    c0ec:	29 81       	ldd	r18, Y+1	; 0x01
    c0ee:	42 2f       	mov	r20, r18
    c0f0:	50 e0       	ldi	r21, 0x00	; 0
    c0f2:	21 e0       	ldi	r18, 0x01	; 1
    c0f4:	30 e0       	ldi	r19, 0x00	; 0
    c0f6:	02 c0       	rjmp	.+4      	; 0xc0fc <PORTE_set_pin_dir+0x44>
    c0f8:	22 0f       	add	r18, r18
    c0fa:	33 1f       	adc	r19, r19
    c0fc:	4a 95       	dec	r20
    c0fe:	e2 f7       	brpl	.-8      	; 0xc0f8 <PORTE_set_pin_dir+0x40>
    c100:	20 95       	com	r18
    c102:	26 23       	and	r18, r22
    c104:	fc 01       	movw	r30, r24
    c106:	20 83       	st	Z, r18
    c108:	25 c0       	rjmp	.+74     	; 0xc154 <PORTE_set_pin_dir+0x9c>
    c10a:	80 e1       	ldi	r24, 0x10	; 16
    c10c:	90 e0       	ldi	r25, 0x00	; 0
    c10e:	20 e1       	ldi	r18, 0x10	; 16
    c110:	30 e0       	ldi	r19, 0x00	; 0
    c112:	f9 01       	movw	r30, r18
    c114:	20 81       	ld	r18, Z
    c116:	62 2f       	mov	r22, r18
    c118:	29 81       	ldd	r18, Y+1	; 0x01
    c11a:	42 2f       	mov	r20, r18
    c11c:	50 e0       	ldi	r21, 0x00	; 0
    c11e:	21 e0       	ldi	r18, 0x01	; 1
    c120:	30 e0       	ldi	r19, 0x00	; 0
    c122:	02 c0       	rjmp	.+4      	; 0xc128 <PORTE_set_pin_dir+0x70>
    c124:	22 0f       	add	r18, r18
    c126:	33 1f       	adc	r19, r19
    c128:	4a 95       	dec	r20
    c12a:	e2 f7       	brpl	.-8      	; 0xc124 <PORTE_set_pin_dir+0x6c>
    c12c:	26 2b       	or	r18, r22
    c12e:	fc 01       	movw	r30, r24
    c130:	20 83       	st	Z, r18
    c132:	10 c0       	rjmp	.+32     	; 0xc154 <PORTE_set_pin_dir+0x9c>
    c134:	89 81       	ldd	r24, Y+1	; 0x01
    c136:	88 2f       	mov	r24, r24
    c138:	90 e0       	ldi	r25, 0x00	; 0
    c13a:	80 57       	subi	r24, 0x70	; 112
    c13c:	9b 4f       	sbci	r25, 0xFB	; 251
    c13e:	29 81       	ldd	r18, Y+1	; 0x01
    c140:	22 2f       	mov	r18, r18
    c142:	30 e0       	ldi	r19, 0x00	; 0
    c144:	20 57       	subi	r18, 0x70	; 112
    c146:	3b 4f       	sbci	r19, 0xFB	; 251
    c148:	f9 01       	movw	r30, r18
    c14a:	20 81       	ld	r18, Z
    c14c:	28 60       	ori	r18, 0x08	; 8
    c14e:	fc 01       	movw	r30, r24
    c150:	20 83       	st	Z, r18
    c152:	00 00       	nop
    c154:	00 00       	nop
    c156:	0f 90       	pop	r0
    c158:	0f 90       	pop	r0
    c15a:	df 91       	pop	r29
    c15c:	cf 91       	pop	r28
    c15e:	08 95       	ret

0000c160 <PORTE_set_pin_level>:
    c160:	cf 93       	push	r28
    c162:	df 93       	push	r29
    c164:	00 d0       	rcall	.+0      	; 0xc166 <PORTE_set_pin_level+0x6>
    c166:	cd b7       	in	r28, 0x3d	; 61
    c168:	de b7       	in	r29, 0x3e	; 62
    c16a:	89 83       	std	Y+1, r24	; 0x01
    c16c:	6a 83       	std	Y+2, r22	; 0x02
    c16e:	8a 81       	ldd	r24, Y+2	; 0x02
    c170:	88 23       	and	r24, r24
    c172:	a9 f0       	breq	.+42     	; 0xc19e <PORTE_set_pin_level+0x3e>
    c174:	80 e1       	ldi	r24, 0x10	; 16
    c176:	90 e0       	ldi	r25, 0x00	; 0
    c178:	20 e1       	ldi	r18, 0x10	; 16
    c17a:	30 e0       	ldi	r19, 0x00	; 0
    c17c:	f9 01       	movw	r30, r18
    c17e:	21 81       	ldd	r18, Z+1	; 0x01
    c180:	62 2f       	mov	r22, r18
    c182:	29 81       	ldd	r18, Y+1	; 0x01
    c184:	42 2f       	mov	r20, r18
    c186:	50 e0       	ldi	r21, 0x00	; 0
    c188:	21 e0       	ldi	r18, 0x01	; 1
    c18a:	30 e0       	ldi	r19, 0x00	; 0
    c18c:	02 c0       	rjmp	.+4      	; 0xc192 <PORTE_set_pin_level+0x32>
    c18e:	22 0f       	add	r18, r18
    c190:	33 1f       	adc	r19, r19
    c192:	4a 95       	dec	r20
    c194:	e2 f7       	brpl	.-8      	; 0xc18e <PORTE_set_pin_level+0x2e>
    c196:	26 2b       	or	r18, r22
    c198:	fc 01       	movw	r30, r24
    c19a:	21 83       	std	Z+1, r18	; 0x01
    c19c:	15 c0       	rjmp	.+42     	; 0xc1c8 <PORTE_set_pin_level+0x68>
    c19e:	80 e1       	ldi	r24, 0x10	; 16
    c1a0:	90 e0       	ldi	r25, 0x00	; 0
    c1a2:	20 e1       	ldi	r18, 0x10	; 16
    c1a4:	30 e0       	ldi	r19, 0x00	; 0
    c1a6:	f9 01       	movw	r30, r18
    c1a8:	21 81       	ldd	r18, Z+1	; 0x01
    c1aa:	62 2f       	mov	r22, r18
    c1ac:	29 81       	ldd	r18, Y+1	; 0x01
    c1ae:	42 2f       	mov	r20, r18
    c1b0:	50 e0       	ldi	r21, 0x00	; 0
    c1b2:	21 e0       	ldi	r18, 0x01	; 1
    c1b4:	30 e0       	ldi	r19, 0x00	; 0
    c1b6:	02 c0       	rjmp	.+4      	; 0xc1bc <PORTE_set_pin_level+0x5c>
    c1b8:	22 0f       	add	r18, r18
    c1ba:	33 1f       	adc	r19, r19
    c1bc:	4a 95       	dec	r20
    c1be:	e2 f7       	brpl	.-8      	; 0xc1b8 <PORTE_set_pin_level+0x58>
    c1c0:	20 95       	com	r18
    c1c2:	26 23       	and	r18, r22
    c1c4:	fc 01       	movw	r30, r24
    c1c6:	21 83       	std	Z+1, r18	; 0x01
    c1c8:	00 00       	nop
    c1ca:	0f 90       	pop	r0
    c1cc:	0f 90       	pop	r0
    c1ce:	df 91       	pop	r29
    c1d0:	cf 91       	pop	r28
    c1d2:	08 95       	ret

0000c1d4 <PC0_set_dir>:
    c1d4:	cf 93       	push	r28
    c1d6:	df 93       	push	r29
    c1d8:	1f 92       	push	r1
    c1da:	cd b7       	in	r28, 0x3d	; 61
    c1dc:	de b7       	in	r29, 0x3e	; 62
    c1de:	89 83       	std	Y+1, r24	; 0x01
    c1e0:	69 81       	ldd	r22, Y+1	; 0x01
    c1e2:	80 e0       	ldi	r24, 0x00	; 0
    c1e4:	0e 94 9d 5f 	call	0xbf3a	; 0xbf3a <PORTC_set_pin_dir>
    c1e8:	00 00       	nop
    c1ea:	0f 90       	pop	r0
    c1ec:	df 91       	pop	r29
    c1ee:	cf 91       	pop	r28
    c1f0:	08 95       	ret

0000c1f2 <PC0_set_level>:
    c1f2:	cf 93       	push	r28
    c1f4:	df 93       	push	r29
    c1f6:	1f 92       	push	r1
    c1f8:	cd b7       	in	r28, 0x3d	; 61
    c1fa:	de b7       	in	r29, 0x3e	; 62
    c1fc:	89 83       	std	Y+1, r24	; 0x01
    c1fe:	69 81       	ldd	r22, Y+1	; 0x01
    c200:	80 e0       	ldi	r24, 0x00	; 0
    c202:	0e 94 f1 5f 	call	0xbfe2	; 0xbfe2 <PORTC_set_pin_level>
    c206:	00 00       	nop
    c208:	0f 90       	pop	r0
    c20a:	df 91       	pop	r29
    c20c:	cf 91       	pop	r28
    c20e:	08 95       	ret

0000c210 <PC1_set_pull_mode>:
    c210:	cf 93       	push	r28
    c212:	df 93       	push	r29
    c214:	1f 92       	push	r1
    c216:	cd b7       	in	r28, 0x3d	; 61
    c218:	de b7       	in	r29, 0x3e	; 62
    c21a:	89 83       	std	Y+1, r24	; 0x01
    c21c:	69 81       	ldd	r22, Y+1	; 0x01
    c21e:	81 e0       	ldi	r24, 0x01	; 1
    c220:	0e 94 6c 5f 	call	0xbed8	; 0xbed8 <PORTC_set_pin_pull_mode>
    c224:	00 00       	nop
    c226:	0f 90       	pop	r0
    c228:	df 91       	pop	r29
    c22a:	cf 91       	pop	r28
    c22c:	08 95       	ret

0000c22e <PC1_set_dir>:
    c22e:	cf 93       	push	r28
    c230:	df 93       	push	r29
    c232:	1f 92       	push	r1
    c234:	cd b7       	in	r28, 0x3d	; 61
    c236:	de b7       	in	r29, 0x3e	; 62
    c238:	89 83       	std	Y+1, r24	; 0x01
    c23a:	69 81       	ldd	r22, Y+1	; 0x01
    c23c:	81 e0       	ldi	r24, 0x01	; 1
    c23e:	0e 94 9d 5f 	call	0xbf3a	; 0xbf3a <PORTC_set_pin_dir>
    c242:	00 00       	nop
    c244:	0f 90       	pop	r0
    c246:	df 91       	pop	r29
    c248:	cf 91       	pop	r28
    c24a:	08 95       	ret

0000c24c <PE0_set_dir>:
    c24c:	cf 93       	push	r28
    c24e:	df 93       	push	r29
    c250:	1f 92       	push	r1
    c252:	cd b7       	in	r28, 0x3d	; 61
    c254:	de b7       	in	r29, 0x3e	; 62
    c256:	89 83       	std	Y+1, r24	; 0x01
    c258:	69 81       	ldd	r22, Y+1	; 0x01
    c25a:	80 e0       	ldi	r24, 0x00	; 0
    c25c:	0e 94 5c 60 	call	0xc0b8	; 0xc0b8 <PORTE_set_pin_dir>
    c260:	00 00       	nop
    c262:	0f 90       	pop	r0
    c264:	df 91       	pop	r29
    c266:	cf 91       	pop	r28
    c268:	08 95       	ret

0000c26a <PE0_set_level>:
    c26a:	cf 93       	push	r28
    c26c:	df 93       	push	r29
    c26e:	1f 92       	push	r1
    c270:	cd b7       	in	r28, 0x3d	; 61
    c272:	de b7       	in	r29, 0x3e	; 62
    c274:	89 83       	std	Y+1, r24	; 0x01
    c276:	69 81       	ldd	r22, Y+1	; 0x01
    c278:	80 e0       	ldi	r24, 0x00	; 0
    c27a:	0e 94 b0 60 	call	0xc160	; 0xc160 <PORTE_set_pin_level>
    c27e:	00 00       	nop
    c280:	0f 90       	pop	r0
    c282:	df 91       	pop	r29
    c284:	cf 91       	pop	r28
    c286:	08 95       	ret

0000c288 <PE1_set_pull_mode>:
    c288:	cf 93       	push	r28
    c28a:	df 93       	push	r29
    c28c:	1f 92       	push	r1
    c28e:	cd b7       	in	r28, 0x3d	; 61
    c290:	de b7       	in	r29, 0x3e	; 62
    c292:	89 83       	std	Y+1, r24	; 0x01
    c294:	69 81       	ldd	r22, Y+1	; 0x01
    c296:	81 e0       	ldi	r24, 0x01	; 1
    c298:	0e 94 2b 60 	call	0xc056	; 0xc056 <PORTE_set_pin_pull_mode>
    c29c:	00 00       	nop
    c29e:	0f 90       	pop	r0
    c2a0:	df 91       	pop	r29
    c2a2:	cf 91       	pop	r28
    c2a4:	08 95       	ret

0000c2a6 <PE1_set_dir>:
    c2a6:	cf 93       	push	r28
    c2a8:	df 93       	push	r29
    c2aa:	1f 92       	push	r1
    c2ac:	cd b7       	in	r28, 0x3d	; 61
    c2ae:	de b7       	in	r29, 0x3e	; 62
    c2b0:	89 83       	std	Y+1, r24	; 0x01
    c2b2:	69 81       	ldd	r22, Y+1	; 0x01
    c2b4:	81 e0       	ldi	r24, 0x01	; 1
    c2b6:	0e 94 5c 60 	call	0xc0b8	; 0xc0b8 <PORTE_set_pin_dir>
    c2ba:	00 00       	nop
    c2bc:	0f 90       	pop	r0
    c2be:	df 91       	pop	r29
    c2c0:	cf 91       	pop	r28
    c2c2:	08 95       	ret

0000c2c4 <nextFullSBTxBuffer>:
    c2c4:	cf 93       	push	r28
    c2c6:	df 93       	push	r29
    c2c8:	00 d0       	rcall	.+0      	; 0xc2ca <nextFullSBTxBuffer+0x6>
    c2ca:	cd b7       	in	r28, 0x3d	; 61
    c2cc:	de b7       	in	r29, 0x3e	; 62
    c2ce:	81 e0       	ldi	r24, 0x01	; 1
    c2d0:	89 83       	std	Y+1, r24	; 0x01
    c2d2:	1a 82       	std	Y+2, r1	; 0x02
    c2d4:	80 91 b1 4a 	lds	r24, 0x4AB1	; 0x804ab1 <_ZZ18nextFullSBTxBufferE11bufferIndex>
    c2d8:	28 2f       	mov	r18, r24
    c2da:	30 e0       	ldi	r19, 0x00	; 0
    c2dc:	49 e2       	ldi	r20, 0x29	; 41
    c2de:	42 9f       	mul	r20, r18
    c2e0:	c0 01       	movw	r24, r0
    c2e2:	43 9f       	mul	r20, r19
    c2e4:	90 0d       	add	r25, r0
    c2e6:	11 24       	eor	r1, r1
    c2e8:	88 54       	subi	r24, 0x48	; 72
    c2ea:	96 4b       	sbci	r25, 0xB6	; 182
    c2ec:	fc 01       	movw	r30, r24
    c2ee:	90 81       	ld	r25, Z
    c2f0:	81 e0       	ldi	r24, 0x01	; 1
    c2f2:	99 23       	and	r25, r25
    c2f4:	09 f0       	breq	.+2      	; 0xc2f8 <nextFullSBTxBuffer+0x34>
    c2f6:	80 e0       	ldi	r24, 0x00	; 0
    c2f8:	88 23       	and	r24, r24
    c2fa:	c1 f0       	breq	.+48     	; 0xc32c <nextFullSBTxBuffer+0x68>
    c2fc:	8a 81       	ldd	r24, Y+2	; 0x02
    c2fe:	8f 5f       	subi	r24, 0xFF	; 255
    c300:	8a 83       	std	Y+2, r24	; 0x02
    c302:	81 e0       	ldi	r24, 0x01	; 1
    c304:	9a 81       	ldd	r25, Y+2	; 0x02
    c306:	93 30       	cpi	r25, 0x03	; 3
    c308:	08 f4       	brcc	.+2      	; 0xc30c <nextFullSBTxBuffer+0x48>
    c30a:	80 e0       	ldi	r24, 0x00	; 0
    c30c:	88 23       	and	r24, r24
    c30e:	11 f0       	breq	.+4      	; 0xc314 <nextFullSBTxBuffer+0x50>
    c310:	19 82       	std	Y+1, r1	; 0x01
    c312:	0c c0       	rjmp	.+24     	; 0xc32c <nextFullSBTxBuffer+0x68>
    c314:	80 91 b1 4a 	lds	r24, 0x4AB1	; 0x804ab1 <_ZZ18nextFullSBTxBufferE11bufferIndex>
    c318:	8f 5f       	subi	r24, 0xFF	; 255
    c31a:	80 93 b1 4a 	sts	0x4AB1, r24	; 0x804ab1 <_ZZ18nextFullSBTxBufferE11bufferIndex>
    c31e:	80 91 b1 4a 	lds	r24, 0x4AB1	; 0x804ab1 <_ZZ18nextFullSBTxBufferE11bufferIndex>
    c322:	83 30       	cpi	r24, 0x03	; 3
    c324:	b8 f2       	brcs	.-82     	; 0xc2d4 <nextFullSBTxBuffer+0x10>
    c326:	10 92 b1 4a 	sts	0x4AB1, r1	; 0x804ab1 <_ZZ18nextFullSBTxBufferE11bufferIndex>
    c32a:	d4 cf       	rjmp	.-88     	; 0xc2d4 <nextFullSBTxBuffer+0x10>
    c32c:	89 81       	ldd	r24, Y+1	; 0x01
    c32e:	88 23       	and	r24, r24
    c330:	69 f0       	breq	.+26     	; 0xc34c <nextFullSBTxBuffer+0x88>
    c332:	80 91 b1 4a 	lds	r24, 0x4AB1	; 0x804ab1 <_ZZ18nextFullSBTxBufferE11bufferIndex>
    c336:	28 2f       	mov	r18, r24
    c338:	30 e0       	ldi	r19, 0x00	; 0
    c33a:	49 e2       	ldi	r20, 0x29	; 41
    c33c:	42 9f       	mul	r20, r18
    c33e:	c0 01       	movw	r24, r0
    c340:	43 9f       	mul	r20, r19
    c342:	90 0d       	add	r25, r0
    c344:	11 24       	eor	r1, r1
    c346:	88 54       	subi	r24, 0x48	; 72
    c348:	96 4b       	sbci	r25, 0xB6	; 182
    c34a:	02 c0       	rjmp	.+4      	; 0xc350 <nextFullSBTxBuffer+0x8c>
    c34c:	80 e0       	ldi	r24, 0x00	; 0
    c34e:	90 e0       	ldi	r25, 0x00	; 0
    c350:	0f 90       	pop	r0
    c352:	0f 90       	pop	r0
    c354:	df 91       	pop	r29
    c356:	cf 91       	pop	r28
    c358:	08 95       	ret

0000c35a <nextEmptySBTxBuffer>:
    c35a:	cf 93       	push	r28
    c35c:	df 93       	push	r29
    c35e:	00 d0       	rcall	.+0      	; 0xc360 <nextEmptySBTxBuffer+0x6>
    c360:	cd b7       	in	r28, 0x3d	; 61
    c362:	de b7       	in	r29, 0x3e	; 62
    c364:	81 e0       	ldi	r24, 0x01	; 1
    c366:	89 83       	std	Y+1, r24	; 0x01
    c368:	1a 82       	std	Y+2, r1	; 0x02
    c36a:	80 91 b2 4a 	lds	r24, 0x4AB2	; 0x804ab2 <_ZZ19nextEmptySBTxBufferE11bufferIndex>
    c36e:	28 2f       	mov	r18, r24
    c370:	30 e0       	ldi	r19, 0x00	; 0
    c372:	49 e2       	ldi	r20, 0x29	; 41
    c374:	42 9f       	mul	r20, r18
    c376:	c0 01       	movw	r24, r0
    c378:	43 9f       	mul	r20, r19
    c37a:	90 0d       	add	r25, r0
    c37c:	11 24       	eor	r1, r1
    c37e:	88 54       	subi	r24, 0x48	; 72
    c380:	96 4b       	sbci	r25, 0xB6	; 182
    c382:	fc 01       	movw	r30, r24
    c384:	90 81       	ld	r25, Z
    c386:	81 e0       	ldi	r24, 0x01	; 1
    c388:	99 23       	and	r25, r25
    c38a:	09 f4       	brne	.+2      	; 0xc38e <nextEmptySBTxBuffer+0x34>
    c38c:	80 e0       	ldi	r24, 0x00	; 0
    c38e:	88 23       	and	r24, r24
    c390:	c1 f0       	breq	.+48     	; 0xc3c2 <nextEmptySBTxBuffer+0x68>
    c392:	8a 81       	ldd	r24, Y+2	; 0x02
    c394:	8f 5f       	subi	r24, 0xFF	; 255
    c396:	8a 83       	std	Y+2, r24	; 0x02
    c398:	81 e0       	ldi	r24, 0x01	; 1
    c39a:	9a 81       	ldd	r25, Y+2	; 0x02
    c39c:	93 30       	cpi	r25, 0x03	; 3
    c39e:	08 f4       	brcc	.+2      	; 0xc3a2 <nextEmptySBTxBuffer+0x48>
    c3a0:	80 e0       	ldi	r24, 0x00	; 0
    c3a2:	88 23       	and	r24, r24
    c3a4:	11 f0       	breq	.+4      	; 0xc3aa <nextEmptySBTxBuffer+0x50>
    c3a6:	19 82       	std	Y+1, r1	; 0x01
    c3a8:	0c c0       	rjmp	.+24     	; 0xc3c2 <nextEmptySBTxBuffer+0x68>
    c3aa:	80 91 b2 4a 	lds	r24, 0x4AB2	; 0x804ab2 <_ZZ19nextEmptySBTxBufferE11bufferIndex>
    c3ae:	8f 5f       	subi	r24, 0xFF	; 255
    c3b0:	80 93 b2 4a 	sts	0x4AB2, r24	; 0x804ab2 <_ZZ19nextEmptySBTxBufferE11bufferIndex>
    c3b4:	80 91 b2 4a 	lds	r24, 0x4AB2	; 0x804ab2 <_ZZ19nextEmptySBTxBufferE11bufferIndex>
    c3b8:	83 30       	cpi	r24, 0x03	; 3
    c3ba:	b8 f2       	brcs	.-82     	; 0xc36a <nextEmptySBTxBuffer+0x10>
    c3bc:	10 92 b2 4a 	sts	0x4AB2, r1	; 0x804ab2 <_ZZ19nextEmptySBTxBufferE11bufferIndex>
    c3c0:	d4 cf       	rjmp	.-88     	; 0xc36a <nextEmptySBTxBuffer+0x10>
    c3c2:	89 81       	ldd	r24, Y+1	; 0x01
    c3c4:	88 23       	and	r24, r24
    c3c6:	69 f0       	breq	.+26     	; 0xc3e2 <nextEmptySBTxBuffer+0x88>
    c3c8:	80 91 b2 4a 	lds	r24, 0x4AB2	; 0x804ab2 <_ZZ19nextEmptySBTxBufferE11bufferIndex>
    c3cc:	28 2f       	mov	r18, r24
    c3ce:	30 e0       	ldi	r19, 0x00	; 0
    c3d0:	49 e2       	ldi	r20, 0x29	; 41
    c3d2:	42 9f       	mul	r20, r18
    c3d4:	c0 01       	movw	r24, r0
    c3d6:	43 9f       	mul	r20, r19
    c3d8:	90 0d       	add	r25, r0
    c3da:	11 24       	eor	r1, r1
    c3dc:	88 54       	subi	r24, 0x48	; 72
    c3de:	96 4b       	sbci	r25, 0xB6	; 182
    c3e0:	02 c0       	rjmp	.+4      	; 0xc3e6 <nextEmptySBTxBuffer+0x8c>
    c3e2:	80 e0       	ldi	r24, 0x00	; 0
    c3e4:	90 e0       	ldi	r25, 0x00	; 0
    c3e6:	0f 90       	pop	r0
    c3e8:	0f 90       	pop	r0
    c3ea:	df 91       	pop	r29
    c3ec:	cf 91       	pop	r28
    c3ee:	08 95       	ret

0000c3f0 <nextEmptySBRxBuffer>:
    c3f0:	cf 93       	push	r28
    c3f2:	df 93       	push	r29
    c3f4:	00 d0       	rcall	.+0      	; 0xc3f6 <nextEmptySBRxBuffer+0x6>
    c3f6:	cd b7       	in	r28, 0x3d	; 61
    c3f8:	de b7       	in	r29, 0x3e	; 62
    c3fa:	81 e0       	ldi	r24, 0x01	; 1
    c3fc:	89 83       	std	Y+1, r24	; 0x01
    c3fe:	1a 82       	std	Y+2, r1	; 0x02
    c400:	80 91 b3 4a 	lds	r24, 0x4AB3	; 0x804ab3 <_ZZ19nextEmptySBRxBufferE11bufferIndex>
    c404:	28 2f       	mov	r18, r24
    c406:	30 e0       	ldi	r19, 0x00	; 0
    c408:	4f e3       	ldi	r20, 0x3F	; 63
    c40a:	42 9f       	mul	r20, r18
    c40c:	c0 01       	movw	r24, r0
    c40e:	43 9f       	mul	r20, r19
    c410:	90 0d       	add	r25, r0
    c412:	11 24       	eor	r1, r1
    c414:	8c 5c       	subi	r24, 0xCC	; 204
    c416:	95 4b       	sbci	r25, 0xB5	; 181
    c418:	fc 01       	movw	r30, r24
    c41a:	80 81       	ld	r24, Z
    c41c:	91 81       	ldd	r25, Z+1	; 0x01
    c41e:	21 e0       	ldi	r18, 0x01	; 1
    c420:	89 2b       	or	r24, r25
    c422:	09 f4       	brne	.+2      	; 0xc426 <nextEmptySBRxBuffer+0x36>
    c424:	20 e0       	ldi	r18, 0x00	; 0
    c426:	22 23       	and	r18, r18
    c428:	c1 f0       	breq	.+48     	; 0xc45a <nextEmptySBRxBuffer+0x6a>
    c42a:	8a 81       	ldd	r24, Y+2	; 0x02
    c42c:	8f 5f       	subi	r24, 0xFF	; 255
    c42e:	8a 83       	std	Y+2, r24	; 0x02
    c430:	81 e0       	ldi	r24, 0x01	; 1
    c432:	9a 81       	ldd	r25, Y+2	; 0x02
    c434:	92 30       	cpi	r25, 0x02	; 2
    c436:	08 f4       	brcc	.+2      	; 0xc43a <nextEmptySBRxBuffer+0x4a>
    c438:	80 e0       	ldi	r24, 0x00	; 0
    c43a:	88 23       	and	r24, r24
    c43c:	11 f0       	breq	.+4      	; 0xc442 <nextEmptySBRxBuffer+0x52>
    c43e:	19 82       	std	Y+1, r1	; 0x01
    c440:	0c c0       	rjmp	.+24     	; 0xc45a <nextEmptySBRxBuffer+0x6a>
    c442:	80 91 b3 4a 	lds	r24, 0x4AB3	; 0x804ab3 <_ZZ19nextEmptySBRxBufferE11bufferIndex>
    c446:	8f 5f       	subi	r24, 0xFF	; 255
    c448:	80 93 b3 4a 	sts	0x4AB3, r24	; 0x804ab3 <_ZZ19nextEmptySBRxBufferE11bufferIndex>
    c44c:	80 91 b3 4a 	lds	r24, 0x4AB3	; 0x804ab3 <_ZZ19nextEmptySBRxBufferE11bufferIndex>
    c450:	82 30       	cpi	r24, 0x02	; 2
    c452:	b0 f2       	brcs	.-84     	; 0xc400 <nextEmptySBRxBuffer+0x10>
    c454:	10 92 b3 4a 	sts	0x4AB3, r1	; 0x804ab3 <_ZZ19nextEmptySBRxBufferE11bufferIndex>
    c458:	d3 cf       	rjmp	.-90     	; 0xc400 <nextEmptySBRxBuffer+0x10>
    c45a:	89 81       	ldd	r24, Y+1	; 0x01
    c45c:	88 23       	and	r24, r24
    c45e:	69 f0       	breq	.+26     	; 0xc47a <nextEmptySBRxBuffer+0x8a>
    c460:	80 91 b3 4a 	lds	r24, 0x4AB3	; 0x804ab3 <_ZZ19nextEmptySBRxBufferE11bufferIndex>
    c464:	28 2f       	mov	r18, r24
    c466:	30 e0       	ldi	r19, 0x00	; 0
    c468:	4f e3       	ldi	r20, 0x3F	; 63
    c46a:	42 9f       	mul	r20, r18
    c46c:	c0 01       	movw	r24, r0
    c46e:	43 9f       	mul	r20, r19
    c470:	90 0d       	add	r25, r0
    c472:	11 24       	eor	r1, r1
    c474:	8d 5c       	subi	r24, 0xCD	; 205
    c476:	95 4b       	sbci	r25, 0xB5	; 181
    c478:	02 c0       	rjmp	.+4      	; 0xc47e <nextEmptySBRxBuffer+0x8e>
    c47a:	80 e0       	ldi	r24, 0x00	; 0
    c47c:	90 e0       	ldi	r25, 0x00	; 0
    c47e:	0f 90       	pop	r0
    c480:	0f 90       	pop	r0
    c482:	df 91       	pop	r29
    c484:	cf 91       	pop	r28
    c486:	08 95       	ret

0000c488 <nextFullSBRxBuffer>:
    c488:	cf 93       	push	r28
    c48a:	df 93       	push	r29
    c48c:	00 d0       	rcall	.+0      	; 0xc48e <nextFullSBRxBuffer+0x6>
    c48e:	cd b7       	in	r28, 0x3d	; 61
    c490:	de b7       	in	r29, 0x3e	; 62
    c492:	81 e0       	ldi	r24, 0x01	; 1
    c494:	89 83       	std	Y+1, r24	; 0x01
    c496:	1a 82       	std	Y+2, r1	; 0x02
    c498:	80 91 b4 4a 	lds	r24, 0x4AB4	; 0x804ab4 <_ZZ18nextFullSBRxBufferE11bufferIndex>
    c49c:	28 2f       	mov	r18, r24
    c49e:	30 e0       	ldi	r19, 0x00	; 0
    c4a0:	4f e3       	ldi	r20, 0x3F	; 63
    c4a2:	42 9f       	mul	r20, r18
    c4a4:	c0 01       	movw	r24, r0
    c4a6:	43 9f       	mul	r20, r19
    c4a8:	90 0d       	add	r25, r0
    c4aa:	11 24       	eor	r1, r1
    c4ac:	8c 5c       	subi	r24, 0xCC	; 204
    c4ae:	95 4b       	sbci	r25, 0xB5	; 181
    c4b0:	fc 01       	movw	r30, r24
    c4b2:	80 81       	ld	r24, Z
    c4b4:	91 81       	ldd	r25, Z+1	; 0x01
    c4b6:	21 e0       	ldi	r18, 0x01	; 1
    c4b8:	89 2b       	or	r24, r25
    c4ba:	09 f0       	breq	.+2      	; 0xc4be <nextFullSBRxBuffer+0x36>
    c4bc:	20 e0       	ldi	r18, 0x00	; 0
    c4be:	22 23       	and	r18, r18
    c4c0:	c1 f0       	breq	.+48     	; 0xc4f2 <nextFullSBRxBuffer+0x6a>
    c4c2:	8a 81       	ldd	r24, Y+2	; 0x02
    c4c4:	8f 5f       	subi	r24, 0xFF	; 255
    c4c6:	8a 83       	std	Y+2, r24	; 0x02
    c4c8:	81 e0       	ldi	r24, 0x01	; 1
    c4ca:	9a 81       	ldd	r25, Y+2	; 0x02
    c4cc:	92 30       	cpi	r25, 0x02	; 2
    c4ce:	08 f4       	brcc	.+2      	; 0xc4d2 <nextFullSBRxBuffer+0x4a>
    c4d0:	80 e0       	ldi	r24, 0x00	; 0
    c4d2:	88 23       	and	r24, r24
    c4d4:	11 f0       	breq	.+4      	; 0xc4da <nextFullSBRxBuffer+0x52>
    c4d6:	19 82       	std	Y+1, r1	; 0x01
    c4d8:	0c c0       	rjmp	.+24     	; 0xc4f2 <nextFullSBRxBuffer+0x6a>
    c4da:	80 91 b4 4a 	lds	r24, 0x4AB4	; 0x804ab4 <_ZZ18nextFullSBRxBufferE11bufferIndex>
    c4de:	8f 5f       	subi	r24, 0xFF	; 255
    c4e0:	80 93 b4 4a 	sts	0x4AB4, r24	; 0x804ab4 <_ZZ18nextFullSBRxBufferE11bufferIndex>
    c4e4:	80 91 b4 4a 	lds	r24, 0x4AB4	; 0x804ab4 <_ZZ18nextFullSBRxBufferE11bufferIndex>
    c4e8:	82 30       	cpi	r24, 0x02	; 2
    c4ea:	b0 f2       	brcs	.-84     	; 0xc498 <nextFullSBRxBuffer+0x10>
    c4ec:	10 92 b4 4a 	sts	0x4AB4, r1	; 0x804ab4 <_ZZ18nextFullSBRxBufferE11bufferIndex>
    c4f0:	d3 cf       	rjmp	.-90     	; 0xc498 <nextFullSBRxBuffer+0x10>
    c4f2:	89 81       	ldd	r24, Y+1	; 0x01
    c4f4:	88 23       	and	r24, r24
    c4f6:	69 f0       	breq	.+26     	; 0xc512 <nextFullSBRxBuffer+0x8a>
    c4f8:	80 91 b4 4a 	lds	r24, 0x4AB4	; 0x804ab4 <_ZZ18nextFullSBRxBufferE11bufferIndex>
    c4fc:	28 2f       	mov	r18, r24
    c4fe:	30 e0       	ldi	r19, 0x00	; 0
    c500:	4f e3       	ldi	r20, 0x3F	; 63
    c502:	42 9f       	mul	r20, r18
    c504:	c0 01       	movw	r24, r0
    c506:	43 9f       	mul	r20, r19
    c508:	90 0d       	add	r25, r0
    c50a:	11 24       	eor	r1, r1
    c50c:	8d 5c       	subi	r24, 0xCD	; 205
    c50e:	95 4b       	sbci	r25, 0xB5	; 181
    c510:	02 c0       	rjmp	.+4      	; 0xc516 <nextFullSBRxBuffer+0x8e>
    c512:	80 e0       	ldi	r24, 0x00	; 0
    c514:	90 e0       	ldi	r25, 0x00	; 0
    c516:	0f 90       	pop	r0
    c518:	0f 90       	pop	r0
    c51a:	df 91       	pop	r29
    c51c:	cf 91       	pop	r28
    c51e:	08 95       	ret

0000c520 <serialbusTxInProgress>:
    c520:	cf 93       	push	r28
    c522:	df 93       	push	r29
    c524:	cd b7       	in	r28, 0x3d	; 61
    c526:	de b7       	in	r29, 0x3e	; 62
    c528:	80 91 b7 49 	lds	r24, 0x49B7	; 0x8049b7 <_ZL19serialbus_tx_active>
    c52c:	df 91       	pop	r29
    c52e:	cf 91       	pop	r28
    c530:	08 95       	ret

0000c532 <_Z18serialbus_start_txv>:
    c532:	cf 93       	push	r28
    c534:	df 93       	push	r29
    c536:	1f 92       	push	r1
    c538:	cd b7       	in	r28, 0x3d	; 61
    c53a:	de b7       	in	r29, 0x3e	; 62
    c53c:	90 91 b7 49 	lds	r25, 0x49B7	; 0x8049b7 <_ZL19serialbus_tx_active>
    c540:	81 e0       	ldi	r24, 0x01	; 1
    c542:	89 27       	eor	r24, r25
    c544:	89 83       	std	Y+1, r24	; 0x01
    c546:	89 81       	ldd	r24, Y+1	; 0x01
    c548:	88 23       	and	r24, r24
    c54a:	61 f0       	breq	.+24     	; 0xc564 <_Z18serialbus_start_txv+0x32>
    c54c:	81 e0       	ldi	r24, 0x01	; 1
    c54e:	80 93 b7 49 	sts	0x49B7, r24	; 0x8049b7 <_ZL19serialbus_tx_active>
    c552:	80 91 2e 40 	lds	r24, 0x402E	; 0x80402e <g_serialbus_usart_number>
    c556:	88 23       	and	r24, r24
    c558:	19 f4       	brne	.+6      	; 0xc560 <_Z18serialbus_start_txv+0x2e>
    c55a:	0e 94 3b 73 	call	0xe676	; 0xe676 <USART4_enable_tx>
    c55e:	02 c0       	rjmp	.+4      	; 0xc564 <_Z18serialbus_start_txv+0x32>
    c560:	0e 94 a4 72 	call	0xe548	; 0xe548 <USART1_enable_tx>
    c564:	89 81       	ldd	r24, Y+1	; 0x01
    c566:	0f 90       	pop	r0
    c568:	df 91       	pop	r29
    c56a:	cf 91       	pop	r28
    c56c:	08 95       	ret

0000c56e <serialbus_end_tx>:
    c56e:	cf 93       	push	r28
    c570:	df 93       	push	r29
    c572:	cd b7       	in	r28, 0x3d	; 61
    c574:	de b7       	in	r29, 0x3e	; 62
    c576:	80 91 b7 49 	lds	r24, 0x49B7	; 0x8049b7 <_ZL19serialbus_tx_active>
    c57a:	88 23       	and	r24, r24
    c57c:	c9 f0       	breq	.+50     	; 0xc5b0 <serialbus_end_tx+0x42>
    c57e:	80 91 2e 40 	lds	r24, 0x402E	; 0x80402e <g_serialbus_usart_number>
    c582:	84 30       	cpi	r24, 0x04	; 4
    c584:	51 f4       	brne	.+20     	; 0xc59a <serialbus_end_tx+0x2c>
    c586:	80 e8       	ldi	r24, 0x80	; 128
    c588:	98 e0       	ldi	r25, 0x08	; 8
    c58a:	20 e8       	ldi	r18, 0x80	; 128
    c58c:	38 e0       	ldi	r19, 0x08	; 8
    c58e:	f9 01       	movw	r30, r18
    c590:	25 81       	ldd	r18, Z+5	; 0x05
    c592:	2f 7d       	andi	r18, 0xDF	; 223
    c594:	fc 01       	movw	r30, r24
    c596:	25 83       	std	Z+5, r18	; 0x05
    c598:	09 c0       	rjmp	.+18     	; 0xc5ac <serialbus_end_tx+0x3e>
    c59a:	80 e2       	ldi	r24, 0x20	; 32
    c59c:	98 e0       	ldi	r25, 0x08	; 8
    c59e:	20 e2       	ldi	r18, 0x20	; 32
    c5a0:	38 e0       	ldi	r19, 0x08	; 8
    c5a2:	f9 01       	movw	r30, r18
    c5a4:	25 81       	ldd	r18, Z+5	; 0x05
    c5a6:	2f 7d       	andi	r18, 0xDF	; 223
    c5a8:	fc 01       	movw	r30, r24
    c5aa:	25 83       	std	Z+5, r18	; 0x05
    c5ac:	10 92 b7 49 	sts	0x49B7, r1	; 0x8049b7 <_ZL19serialbus_tx_active>
    c5b0:	00 00       	nop
    c5b2:	df 91       	pop	r29
    c5b4:	cf 91       	pop	r28
    c5b6:	08 95       	ret

0000c5b8 <_ZL21USART1_initializationm>:
    c5b8:	cf 93       	push	r28
    c5ba:	df 93       	push	r29
    c5bc:	00 d0       	rcall	.+0      	; 0xc5be <_ZL21USART1_initializationm+0x6>
    c5be:	00 d0       	rcall	.+0      	; 0xc5c0 <_ZL21USART1_initializationm+0x8>
    c5c0:	cd b7       	in	r28, 0x3d	; 61
    c5c2:	de b7       	in	r29, 0x3e	; 62
    c5c4:	69 83       	std	Y+1, r22	; 0x01
    c5c6:	7a 83       	std	Y+2, r23	; 0x02
    c5c8:	8b 83       	std	Y+3, r24	; 0x03
    c5ca:	9c 83       	std	Y+4, r25	; 0x04
    c5cc:	80 e0       	ldi	r24, 0x00	; 0
    c5ce:	0e 94 17 61 	call	0xc22e	; 0xc22e <PC1_set_dir>
    c5d2:	80 e0       	ldi	r24, 0x00	; 0
    c5d4:	0e 94 08 61 	call	0xc210	; 0xc210 <PC1_set_pull_mode>
    c5d8:	81 e0       	ldi	r24, 0x01	; 1
    c5da:	0e 94 ea 60 	call	0xc1d4	; 0xc1d4 <PC0_set_dir>
    c5de:	81 e0       	ldi	r24, 0x01	; 1
    c5e0:	0e 94 f9 60 	call	0xc1f2	; 0xc1f2 <PC0_set_level>
    c5e4:	89 81       	ldd	r24, Y+1	; 0x01
    c5e6:	9a 81       	ldd	r25, Y+2	; 0x02
    c5e8:	ab 81       	ldd	r26, Y+3	; 0x03
    c5ea:	bc 81       	ldd	r27, Y+4	; 0x04
    c5ec:	bc 01       	movw	r22, r24
    c5ee:	cd 01       	movw	r24, r26
    c5f0:	0e 94 3c 72 	call	0xe478	; 0xe478 <USART1_init>
    c5f4:	00 00       	nop
    c5f6:	24 96       	adiw	r28, 0x04	; 4
    c5f8:	cd bf       	out	0x3d, r28	; 61
    c5fa:	de bf       	out	0x3e, r29	; 62
    c5fc:	df 91       	pop	r29
    c5fe:	cf 91       	pop	r28
    c600:	08 95       	ret

0000c602 <_ZL21USART4_initializationm>:
    c602:	cf 93       	push	r28
    c604:	df 93       	push	r29
    c606:	00 d0       	rcall	.+0      	; 0xc608 <_ZL21USART4_initializationm+0x6>
    c608:	00 d0       	rcall	.+0      	; 0xc60a <_ZL21USART4_initializationm+0x8>
    c60a:	cd b7       	in	r28, 0x3d	; 61
    c60c:	de b7       	in	r29, 0x3e	; 62
    c60e:	69 83       	std	Y+1, r22	; 0x01
    c610:	7a 83       	std	Y+2, r23	; 0x02
    c612:	8b 83       	std	Y+3, r24	; 0x03
    c614:	9c 83       	std	Y+4, r25	; 0x04
    c616:	80 e0       	ldi	r24, 0x00	; 0
    c618:	0e 94 53 61 	call	0xc2a6	; 0xc2a6 <PE1_set_dir>
    c61c:	80 e0       	ldi	r24, 0x00	; 0
    c61e:	0e 94 44 61 	call	0xc288	; 0xc288 <PE1_set_pull_mode>
    c622:	81 e0       	ldi	r24, 0x01	; 1
    c624:	0e 94 26 61 	call	0xc24c	; 0xc24c <PE0_set_dir>
    c628:	81 e0       	ldi	r24, 0x01	; 1
    c62a:	0e 94 35 61 	call	0xc26a	; 0xc26a <PE0_set_level>
    c62e:	89 81       	ldd	r24, Y+1	; 0x01
    c630:	9a 81       	ldd	r25, Y+2	; 0x02
    c632:	ab 81       	ldd	r26, Y+3	; 0x03
    c634:	bc 81       	ldd	r27, Y+4	; 0x04
    c636:	bc 01       	movw	r22, r24
    c638:	cd 01       	movw	r24, r26
    c63a:	0e 94 da 72 	call	0xe5b4	; 0xe5b4 <USART4_init>
    c63e:	00 00       	nop
    c640:	24 96       	adiw	r28, 0x04	; 4
    c642:	cd bf       	out	0x3d, r28	; 61
    c644:	de bf       	out	0x3e, r29	; 62
    c646:	df 91       	pop	r29
    c648:	cf 91       	pop	r28
    c64a:	08 95       	ret

0000c64c <serialbus_init>:
    c64c:	cf 93       	push	r28
    c64e:	df 93       	push	r29
    c650:	cd b7       	in	r28, 0x3d	; 61
    c652:	de b7       	in	r29, 0x3e	; 62
    c654:	27 97       	sbiw	r28, 0x07	; 7
    c656:	cd bf       	out	0x3d, r28	; 61
    c658:	de bf       	out	0x3e, r29	; 62
    c65a:	6b 83       	std	Y+3, r22	; 0x03
    c65c:	7c 83       	std	Y+4, r23	; 0x04
    c65e:	8d 83       	std	Y+5, r24	; 0x05
    c660:	9e 83       	std	Y+6, r25	; 0x06
    c662:	4f 83       	std	Y+7, r20	; 0x07
    c664:	4f e3       	ldi	r20, 0x3F	; 63
    c666:	50 e0       	ldi	r21, 0x00	; 0
    c668:	60 e0       	ldi	r22, 0x00	; 0
    c66a:	70 e0       	ldi	r23, 0x00	; 0
    c66c:	83 e3       	ldi	r24, 0x33	; 51
    c66e:	9a e4       	ldi	r25, 0x4A	; 74
    c670:	0e 94 e6 7b 	call	0xf7cc	; 0xf7cc <memset>
    c674:	19 82       	std	Y+1, r1	; 0x01
    c676:	1a 82       	std	Y+2, r1	; 0x02
    c678:	89 81       	ldd	r24, Y+1	; 0x01
    c67a:	9a 81       	ldd	r25, Y+2	; 0x02
    c67c:	03 97       	sbiw	r24, 0x03	; 3
    c67e:	94 f4       	brge	.+36     	; 0xc6a4 <serialbus_init+0x58>
    c680:	29 81       	ldd	r18, Y+1	; 0x01
    c682:	3a 81       	ldd	r19, Y+2	; 0x02
    c684:	49 e2       	ldi	r20, 0x29	; 41
    c686:	42 9f       	mul	r20, r18
    c688:	c0 01       	movw	r24, r0
    c68a:	43 9f       	mul	r20, r19
    c68c:	90 0d       	add	r25, r0
    c68e:	11 24       	eor	r1, r1
    c690:	88 54       	subi	r24, 0x48	; 72
    c692:	96 4b       	sbci	r25, 0xB6	; 182
    c694:	fc 01       	movw	r30, r24
    c696:	10 82       	st	Z, r1
    c698:	89 81       	ldd	r24, Y+1	; 0x01
    c69a:	9a 81       	ldd	r25, Y+2	; 0x02
    c69c:	01 96       	adiw	r24, 0x01	; 1
    c69e:	89 83       	std	Y+1, r24	; 0x01
    c6a0:	9a 83       	std	Y+2, r25	; 0x02
    c6a2:	ea cf       	rjmp	.-44     	; 0xc678 <serialbus_init+0x2c>
    c6a4:	8f 81       	ldd	r24, Y+7	; 0x07
    c6a6:	86 30       	cpi	r24, 0x06	; 6
    c6a8:	21 f4       	brne	.+8      	; 0xc6b2 <serialbus_init+0x66>
    c6aa:	80 91 2e 40 	lds	r24, 0x402E	; 0x80402e <g_serialbus_usart_number>
    c6ae:	87 30       	cpi	r24, 0x07	; 7
    c6b0:	b9 f4       	brne	.+46     	; 0xc6e0 <serialbus_init+0x94>
    c6b2:	8f 81       	ldd	r24, Y+7	; 0x07
    c6b4:	84 30       	cpi	r24, 0x04	; 4
    c6b6:	49 f4       	brne	.+18     	; 0xc6ca <serialbus_init+0x7e>
    c6b8:	8b 81       	ldd	r24, Y+3	; 0x03
    c6ba:	9c 81       	ldd	r25, Y+4	; 0x04
    c6bc:	ad 81       	ldd	r26, Y+5	; 0x05
    c6be:	be 81       	ldd	r27, Y+6	; 0x06
    c6c0:	bc 01       	movw	r22, r24
    c6c2:	cd 01       	movw	r24, r26
    c6c4:	0e 94 01 63 	call	0xc602	; 0xc602 <_ZL21USART4_initializationm>
    c6c8:	08 c0       	rjmp	.+16     	; 0xc6da <serialbus_init+0x8e>
    c6ca:	8b 81       	ldd	r24, Y+3	; 0x03
    c6cc:	9c 81       	ldd	r25, Y+4	; 0x04
    c6ce:	ad 81       	ldd	r26, Y+5	; 0x05
    c6d0:	be 81       	ldd	r27, Y+6	; 0x06
    c6d2:	bc 01       	movw	r22, r24
    c6d4:	cd 01       	movw	r24, r26
    c6d6:	0e 94 dc 62 	call	0xc5b8	; 0xc5b8 <_ZL21USART1_initializationm>
    c6da:	8f 81       	ldd	r24, Y+7	; 0x07
    c6dc:	80 93 2e 40 	sts	0x402E, r24	; 0x80402e <g_serialbus_usart_number>
    c6e0:	10 92 2f 40 	sts	0x402F, r1	; 0x80402f <_ZL14g_bus_disabled>
    c6e4:	00 00       	nop
    c6e6:	27 96       	adiw	r28, 0x07	; 7
    c6e8:	cd bf       	out	0x3d, r28	; 61
    c6ea:	de bf       	out	0x3e, r29	; 62
    c6ec:	df 91       	pop	r29
    c6ee:	cf 91       	pop	r28
    c6f0:	08 95       	ret

0000c6f2 <_Z19serialbus_send_textPc>:


bool serialbus_send_text(char* text)
{
    c6f2:	cf 93       	push	r28
    c6f4:	df 93       	push	r29
    c6f6:	cd b7       	in	r28, 0x3d	; 61
    c6f8:	de b7       	in	r29, 0x3e	; 62
    c6fa:	27 97       	sbiw	r28, 0x07	; 7
    c6fc:	cd bf       	out	0x3d, r28	; 61
    c6fe:	de bf       	out	0x3e, r29	; 62
    c700:	8e 83       	std	Y+6, r24	; 0x06
    c702:	9f 83       	std	Y+7, r25	; 0x07
	bool err = true;
    c704:	81 e0       	ldi	r24, 0x01	; 1
    c706:	89 83       	std	Y+1, r24	; 0x01
	uint16_t tries = 200;
    c708:	88 ec       	ldi	r24, 0xC8	; 200
    c70a:	90 e0       	ldi	r25, 0x00	; 0
    c70c:	8a 83       	std	Y+2, r24	; 0x02
    c70e:	9b 83       	std	Y+3, r25	; 0x03

	if(g_bus_disabled)
    c710:	80 91 2f 40 	lds	r24, 0x402F	; 0x80402f <_ZL14g_bus_disabled>
    c714:	88 23       	and	r24, r24
    c716:	11 f0       	breq	.+4      	; 0xc71c <_Z19serialbus_send_textPc+0x2a>
	{
		return( err);
    c718:	89 81       	ldd	r24, Y+1	; 0x01
    c71a:	42 c0       	rjmp	.+132    	; 0xc7a0 <_Z19serialbus_send_textPc+0xae>
	}

	if(text)
    c71c:	8e 81       	ldd	r24, Y+6	; 0x06
    c71e:	9f 81       	ldd	r25, Y+7	; 0x07
    c720:	89 2b       	or	r24, r25
    c722:	e9 f1       	breq	.+122    	; 0xc79e <_Z19serialbus_send_textPc+0xac>
	{
		SerialbusTxBuffer* buff = nextEmptySBTxBuffer();
    c724:	0e 94 ad 61 	call	0xc35a	; 0xc35a <nextEmptySBTxBuffer>
    c728:	8c 83       	std	Y+4, r24	; 0x04
    c72a:	9d 83       	std	Y+5, r25	; 0x05

		while(!buff && tries)
    c72c:	8c 81       	ldd	r24, Y+4	; 0x04
    c72e:	9d 81       	ldd	r25, Y+5	; 0x05
    c730:	89 2b       	or	r24, r25
    c732:	01 f5       	brne	.+64     	; 0xc774 <_Z19serialbus_send_textPc+0x82>
    c734:	8a 81       	ldd	r24, Y+2	; 0x02
    c736:	9b 81       	ldd	r25, Y+3	; 0x03
    c738:	89 2b       	or	r24, r25
    c73a:	e1 f0       	breq	.+56     	; 0xc774 <_Z19serialbus_send_textPc+0x82>
		{
			while(serialbusTxInProgress() && tries)
    c73c:	0e 94 90 62 	call	0xc520	; 0xc520 <serialbusTxInProgress>
    c740:	88 23       	and	r24, r24
    c742:	31 f0       	breq	.+12     	; 0xc750 <_Z19serialbus_send_textPc+0x5e>
    c744:	8a 81       	ldd	r24, Y+2	; 0x02
    c746:	9b 81       	ldd	r25, Y+3	; 0x03
    c748:	89 2b       	or	r24, r25
    c74a:	11 f0       	breq	.+4      	; 0xc750 <_Z19serialbus_send_textPc+0x5e>
    c74c:	81 e0       	ldi	r24, 0x01	; 1
    c74e:	01 c0       	rjmp	.+2      	; 0xc752 <_Z19serialbus_send_textPc+0x60>
    c750:	80 e0       	ldi	r24, 0x00	; 0
    c752:	88 23       	and	r24, r24
    c754:	51 f0       	breq	.+20     	; 0xc76a <_Z19serialbus_send_textPc+0x78>
			{
				if(tries)
    c756:	8a 81       	ldd	r24, Y+2	; 0x02
    c758:	9b 81       	ldd	r25, Y+3	; 0x03
    c75a:	89 2b       	or	r24, r25
    c75c:	79 f3       	breq	.-34     	; 0xc73c <_Z19serialbus_send_textPc+0x4a>
				{
					tries--;    /* wait until transmit finishes */
    c75e:	8a 81       	ldd	r24, Y+2	; 0x02
    c760:	9b 81       	ldd	r25, Y+3	; 0x03
    c762:	01 97       	sbiw	r24, 0x01	; 1
    c764:	8a 83       	std	Y+2, r24	; 0x02
    c766:	9b 83       	std	Y+3, r25	; 0x03
	{
		SerialbusTxBuffer* buff = nextEmptySBTxBuffer();

		while(!buff && tries)
		{
			while(serialbusTxInProgress() && tries)
    c768:	e9 cf       	rjmp	.-46     	; 0xc73c <_Z19serialbus_send_textPc+0x4a>
				if(tries)
				{
					tries--;    /* wait until transmit finishes */
				}
			}
			buff = nextEmptySBTxBuffer();
    c76a:	0e 94 ad 61 	call	0xc35a	; 0xc35a <nextEmptySBTxBuffer>
    c76e:	8c 83       	std	Y+4, r24	; 0x04
    c770:	9d 83       	std	Y+5, r25	; 0x05

	if(text)
	{
		SerialbusTxBuffer* buff = nextEmptySBTxBuffer();

		while(!buff && tries)
    c772:	dc cf       	rjmp	.-72     	; 0xc72c <_Z19serialbus_send_textPc+0x3a>
				}
			}
			buff = nextEmptySBTxBuffer();
		}

		if(buff)
    c774:	8c 81       	ldd	r24, Y+4	; 0x04
    c776:	9d 81       	ldd	r25, Y+5	; 0x05
    c778:	89 2b       	or	r24, r25
    c77a:	89 f0       	breq	.+34     	; 0xc79e <_Z19serialbus_send_textPc+0xac>
		{
			sprintf(*buff, text);
    c77c:	8f 81       	ldd	r24, Y+7	; 0x07
    c77e:	8f 93       	push	r24
    c780:	8e 81       	ldd	r24, Y+6	; 0x06
    c782:	8f 93       	push	r24
    c784:	8d 81       	ldd	r24, Y+5	; 0x05
    c786:	8f 93       	push	r24
    c788:	8c 81       	ldd	r24, Y+4	; 0x04
    c78a:	8f 93       	push	r24
    c78c:	0e 94 48 7c 	call	0xf890	; 0xf890 <sprintf>
    c790:	0f 90       	pop	r0
    c792:	0f 90       	pop	r0
    c794:	0f 90       	pop	r0
    c796:	0f 90       	pop	r0

			serialbus_start_tx();
    c798:	0e 94 99 62 	call	0xc532	; 0xc532 <_Z18serialbus_start_txv>
			err = false;
    c79c:	19 82       	std	Y+1, r1	; 0x01
		}
	}

	return(err);
    c79e:	89 81       	ldd	r24, Y+1	; 0x01
}
    c7a0:	27 96       	adiw	r28, 0x07	; 7
    c7a2:	cd bf       	out	0x3d, r28	; 61
    c7a4:	de bf       	out	0x3e, r29	; 62
    c7a6:	df 91       	pop	r29
    c7a8:	cf 91       	pop	r28
    c7aa:	08 95       	ret

0000c7ac <sb_send_NewPrompt>:
/***********************************************************************************
 *  Support for creating and sending various Terminal Mode Serialbus messages is provided below.
 ************************************************************************************/

void sb_send_NewPrompt(void)
{
    c7ac:	cf 93       	push	r28
    c7ae:	df 93       	push	r29
    c7b0:	cd b7       	in	r28, 0x3d	; 61
    c7b2:	de b7       	in	r29, 0x3e	; 62
	if(g_bus_disabled)
    c7b4:	80 91 2f 40 	lds	r24, 0x402F	; 0x80402f <_ZL14g_bus_disabled>
    c7b8:	88 23       	and	r24, r24
    c7ba:	39 f4       	brne	.+14     	; 0xc7ca <sb_send_NewPrompt+0x1e>
	{
		return;
	}

	while(serialbus_send_text((char*)textPrompt))
    c7bc:	81 e6       	ldi	r24, 0x61	; 97
    c7be:	96 e4       	ldi	r25, 0x46	; 70
    c7c0:	0e 94 79 63 	call	0xc6f2	; 0xc6f2 <_Z19serialbus_send_textPc>
    c7c4:	88 23       	and	r24, r24
    c7c6:	11 f0       	breq	.+4      	; 0xc7cc <sb_send_NewPrompt+0x20>
    c7c8:	f9 cf       	rjmp	.-14     	; 0xc7bc <sb_send_NewPrompt+0x10>

void sb_send_NewPrompt(void)
{
	if(g_bus_disabled)
	{
		return;
    c7ca:	00 00       	nop

	while(serialbus_send_text((char*)textPrompt))
	{
		;
	}
}
    c7cc:	df 91       	pop	r29
    c7ce:	cf 91       	pop	r28
    c7d0:	08 95       	ret

0000c7d2 <sb_send_NewLine>:

void sb_send_NewLine(void)
{
    c7d2:	cf 93       	push	r28
    c7d4:	df 93       	push	r29
    c7d6:	cd b7       	in	r28, 0x3d	; 61
    c7d8:	de b7       	in	r29, 0x3e	; 62
	if(g_bus_disabled)
    c7da:	80 91 2f 40 	lds	r24, 0x402F	; 0x80402f <_ZL14g_bus_disabled>
    c7de:	88 23       	and	r24, r24
    c7e0:	29 f4       	brne	.+10     	; 0xc7ec <sb_send_NewLine+0x1a>
	{
		return;
	}
	serialbus_send_text((char*)crlf);
    c7e2:	8f e5       	ldi	r24, 0x5F	; 95
    c7e4:	96 e4       	ldi	r25, 0x46	; 70
    c7e6:	0e 94 79 63 	call	0xc6f2	; 0xc6f2 <_Z19serialbus_send_textPc>
    c7ea:	01 c0       	rjmp	.+2      	; 0xc7ee <sb_send_NewLine+0x1c>

void sb_send_NewLine(void)
{
	if(g_bus_disabled)
	{
		return;
    c7ec:	00 00       	nop
	}
	serialbus_send_text((char*)crlf);
}
    c7ee:	df 91       	pop	r29
    c7f0:	cf 91       	pop	r28
    c7f2:	08 95       	ret

0000c7f4 <sb_echo_char>:

void sb_echo_char(uint8_t c)
{
    c7f4:	cf 93       	push	r28
    c7f6:	df 93       	push	r29
    c7f8:	1f 92       	push	r1
    c7fa:	cd b7       	in	r28, 0x3d	; 61
    c7fc:	de b7       	in	r29, 0x3e	; 62
    c7fe:	89 83       	std	Y+1, r24	; 0x01
	if(g_bus_disabled)
    c800:	80 91 2f 40 	lds	r24, 0x402F	; 0x80402f <_ZL14g_bus_disabled>
    c804:	88 23       	and	r24, r24
    c806:	51 f4       	brne	.+20     	; 0xc81c <sb_echo_char+0x28>
	{
		return;
	}
	g_tempMsgBuff[0] = c;
    c808:	89 81       	ldd	r24, Y+1	; 0x01
    c80a:	80 93 85 49 	sts	0x4985, r24	; 0x804985 <_ZL13g_tempMsgBuff>
	g_tempMsgBuff[1] = '\0';
    c80e:	10 92 86 49 	sts	0x4986, r1	; 0x804986 <_ZL13g_tempMsgBuff+0x1>
	serialbus_send_text(g_tempMsgBuff);
    c812:	85 e8       	ldi	r24, 0x85	; 133
    c814:	99 e4       	ldi	r25, 0x49	; 73
    c816:	0e 94 79 63 	call	0xc6f2	; 0xc6f2 <_Z19serialbus_send_textPc>
    c81a:	01 c0       	rjmp	.+2      	; 0xc81e <sb_echo_char+0x2a>

void sb_echo_char(uint8_t c)
{
	if(g_bus_disabled)
	{
		return;
    c81c:	00 00       	nop
	}
	g_tempMsgBuff[0] = c;
	g_tempMsgBuff[1] = '\0';
	serialbus_send_text(g_tempMsgBuff);
}
    c81e:	0f 90       	pop	r0
    c820:	df 91       	pop	r29
    c822:	cf 91       	pop	r28
    c824:	08 95       	ret

0000c826 <sb_send_string>:

bool sb_send_string(char* str)
{
    c826:	cf 93       	push	r28
    c828:	df 93       	push	r29
    c82a:	cd b7       	in	r28, 0x3d	; 61
    c82c:	de b7       	in	r29, 0x3e	; 62
    c82e:	e8 97       	sbiw	r28, 0x38	; 56
    c830:	cd bf       	out	0x3d, r28	; 61
    c832:	de bf       	out	0x3e, r29	; 62
    c834:	8f ab       	std	Y+55, r24	; 0x37
    c836:	98 af       	std	Y+56, r25	; 0x38
	char buf[SERIALBUS_MAX_TX_MSG_LENGTH+1];
	bool err = false;
    c838:	1b 82       	std	Y+3, r1	; 0x03
	uint16_t length, lengthToSend, lengthSent=0;
    c83a:	19 82       	std	Y+1, r1	; 0x01
    c83c:	1a 82       	std	Y+2, r1	; 0x02
	bool done = false;
    c83e:	1c 82       	std	Y+4, r1	; 0x04

	if(g_bus_disabled)
    c840:	80 91 2f 40 	lds	r24, 0x402F	; 0x80402f <_ZL14g_bus_disabled>
    c844:	88 23       	and	r24, r24
    c846:	11 f0       	breq	.+4      	; 0xc84c <sb_send_string+0x26>
	{
		return( true);
    c848:	81 e0       	ldi	r24, 0x01	; 1
    c84a:	70 c0       	rjmp	.+224    	; 0xc92c <sb_send_string+0x106>
	}

	if(str == NULL)
    c84c:	8f a9       	ldd	r24, Y+55	; 0x37
    c84e:	98 ad       	ldd	r25, Y+56	; 0x38
    c850:	89 2b       	or	r24, r25
    c852:	11 f4       	brne	.+4      	; 0xc858 <sb_send_string+0x32>
	{
		return( true);
    c854:	81 e0       	ldi	r24, 0x01	; 1
    c856:	6a c0       	rjmp	.+212    	; 0xc92c <sb_send_string+0x106>
	}

	if(!*str)
    c858:	8f a9       	ldd	r24, Y+55	; 0x37
    c85a:	98 ad       	ldd	r25, Y+56	; 0x38
    c85c:	fc 01       	movw	r30, r24
    c85e:	80 81       	ld	r24, Z
    c860:	88 23       	and	r24, r24
    c862:	11 f4       	brne	.+4      	; 0xc868 <sb_send_string+0x42>
	{
		return(true);
    c864:	81 e0       	ldi	r24, 0x01	; 1
    c866:	62 c0       	rjmp	.+196    	; 0xc92c <sb_send_string+0x106>
	}

	length = strlen(str);
    c868:	8f a9       	ldd	r24, Y+55	; 0x37
    c86a:	98 ad       	ldd	r25, Y+56	; 0x38
    c86c:	0e 94 13 7c 	call	0xf826	; 0xf826 <strlen>
    c870:	8d 83       	std	Y+5, r24	; 0x05
    c872:	9e 83       	std	Y+6, r25	; 0x06

	do
	{
		lengthToSend = MIN(length-lengthSent, (uint16_t)SERIALBUS_MAX_TX_MSG_LENGTH);
    c874:	2d 81       	ldd	r18, Y+5	; 0x05
    c876:	3e 81       	ldd	r19, Y+6	; 0x06
    c878:	89 81       	ldd	r24, Y+1	; 0x01
    c87a:	9a 81       	ldd	r25, Y+2	; 0x02
    c87c:	a9 01       	movw	r20, r18
    c87e:	48 1b       	sub	r20, r24
    c880:	59 0b       	sbc	r21, r25
    c882:	ca 01       	movw	r24, r20
    c884:	8f 83       	std	Y+7, r24	; 0x07
    c886:	98 87       	std	Y+8, r25	; 0x08
    c888:	89 e2       	ldi	r24, 0x29	; 41
    c88a:	90 e0       	ldi	r25, 0x00	; 0
    c88c:	89 87       	std	Y+9, r24	; 0x09
    c88e:	9a 87       	std	Y+10, r25	; 0x0a
    c890:	2f 81       	ldd	r18, Y+7	; 0x07
    c892:	38 85       	ldd	r19, Y+8	; 0x08
    c894:	89 85       	ldd	r24, Y+9	; 0x09
    c896:	9a 85       	ldd	r25, Y+10	; 0x0a
    c898:	28 17       	cp	r18, r24
    c89a:	39 07       	cpc	r19, r25
    c89c:	18 f4       	brcc	.+6      	; 0xc8a4 <sb_send_string+0x7e>
    c89e:	8f 81       	ldd	r24, Y+7	; 0x07
    c8a0:	98 85       	ldd	r25, Y+8	; 0x08
    c8a2:	02 c0       	rjmp	.+4      	; 0xc8a8 <sb_send_string+0x82>
    c8a4:	89 85       	ldd	r24, Y+9	; 0x09
    c8a6:	9a 85       	ldd	r25, Y+10	; 0x0a
    c8a8:	8b 87       	std	Y+11, r24	; 0x0b
    c8aa:	9c 87       	std	Y+12, r25	; 0x0c
		strncpy(buf, &str[lengthSent], lengthToSend);
    c8ac:	2f a9       	ldd	r18, Y+55	; 0x37
    c8ae:	38 ad       	ldd	r19, Y+56	; 0x38
    c8b0:	89 81       	ldd	r24, Y+1	; 0x01
    c8b2:	9a 81       	ldd	r25, Y+2	; 0x02
    c8b4:	28 0f       	add	r18, r24
    c8b6:	39 1f       	adc	r19, r25
    c8b8:	4b 85       	ldd	r20, Y+11	; 0x0b
    c8ba:	5c 85       	ldd	r21, Y+12	; 0x0c
    c8bc:	ce 01       	movw	r24, r28
    c8be:	0d 96       	adiw	r24, 0x0d	; 13
    c8c0:	b9 01       	movw	r22, r18
    c8c2:	0e 94 1c 7c 	call	0xf838	; 0xf838 <strncpy>

		buf[lengthToSend] = '\0';
    c8c6:	9e 01       	movw	r18, r28
    c8c8:	23 5f       	subi	r18, 0xF3	; 243
    c8ca:	3f 4f       	sbci	r19, 0xFF	; 255
    c8cc:	8b 85       	ldd	r24, Y+11	; 0x0b
    c8ce:	9c 85       	ldd	r25, Y+12	; 0x0c
    c8d0:	82 0f       	add	r24, r18
    c8d2:	93 1f       	adc	r25, r19
    c8d4:	fc 01       	movw	r30, r24
    c8d6:	10 82       	st	Z, r1
		err = serialbus_send_text(buf);
    c8d8:	ce 01       	movw	r24, r28
    c8da:	0d 96       	adiw	r24, 0x0d	; 13
    c8dc:	0e 94 79 63 	call	0xc6f2	; 0xc6f2 <_Z19serialbus_send_textPc>
    c8e0:	8b 83       	std	Y+3, r24	; 0x03
		
		if(!err)
    c8e2:	9b 81       	ldd	r25, Y+3	; 0x03
    c8e4:	81 e0       	ldi	r24, 0x01	; 1
    c8e6:	89 27       	eor	r24, r25
    c8e8:	88 23       	and	r24, r24
    c8ea:	29 f0       	breq	.+10     	; 0xc8f6 <sb_send_string+0xd0>
		{
			while(serialbusTxInProgress())
    c8ec:	0e 94 90 62 	call	0xc520	; 0xc520 <serialbusTxInProgress>
    c8f0:	88 23       	and	r24, r24
    c8f2:	09 f0       	breq	.+2      	; 0xc8f6 <sb_send_string+0xd0>
    c8f4:	fb cf       	rjmp	.-10     	; 0xc8ec <sb_send_string+0xc6>
			{
				;
			}
		}

		lengthSent += lengthToSend;
    c8f6:	29 81       	ldd	r18, Y+1	; 0x01
    c8f8:	3a 81       	ldd	r19, Y+2	; 0x02
    c8fa:	8b 85       	ldd	r24, Y+11	; 0x0b
    c8fc:	9c 85       	ldd	r25, Y+12	; 0x0c
    c8fe:	82 0f       	add	r24, r18
    c900:	93 1f       	adc	r25, r19
    c902:	89 83       	std	Y+1, r24	; 0x01
    c904:	9a 83       	std	Y+2, r25	; 0x02
		done = err || (lengthSent >= length);
    c906:	8b 81       	ldd	r24, Y+3	; 0x03
    c908:	88 23       	and	r24, r24
    c90a:	39 f4       	brne	.+14     	; 0xc91a <sb_send_string+0xf4>
    c90c:	29 81       	ldd	r18, Y+1	; 0x01
    c90e:	3a 81       	ldd	r19, Y+2	; 0x02
    c910:	8d 81       	ldd	r24, Y+5	; 0x05
    c912:	9e 81       	ldd	r25, Y+6	; 0x06
    c914:	28 17       	cp	r18, r24
    c916:	39 07       	cpc	r19, r25
    c918:	10 f0       	brcs	.+4      	; 0xc91e <sb_send_string+0xf8>
    c91a:	81 e0       	ldi	r24, 0x01	; 1
    c91c:	01 c0       	rjmp	.+2      	; 0xc920 <sb_send_string+0xfa>
    c91e:	80 e0       	ldi	r24, 0x00	; 0
    c920:	8c 83       	std	Y+4, r24	; 0x04
	}while(!done);
    c922:	8c 81       	ldd	r24, Y+4	; 0x04
    c924:	88 23       	and	r24, r24
    c926:	09 f4       	brne	.+2      	; 0xc92a <sb_send_string+0x104>
		return(true);
	}

	length = strlen(str);

	do
    c928:	a5 cf       	rjmp	.-182    	; 0xc874 <sb_send_string+0x4e>

		lengthSent += lengthToSend;
		done = err || (lengthSent >= length);
	}while(!done);

	return( err);
    c92a:	8b 81       	ldd	r24, Y+3	; 0x03
}
    c92c:	e8 96       	adiw	r28, 0x38	; 56
    c92e:	cd bf       	out	0x3d, r28	; 61
    c930:	de bf       	out	0x3e, r29	; 62
    c932:	df 91       	pop	r29
    c934:	cf 91       	pop	r28
    c936:	08 95       	ret

0000c938 <si5351_shutdown>:
	void si5351_set_vcoB_freq(Frequency_Hz freq_VCO)
	{
		freqVCOB = freq_VCO;
		set_pll(freq_VCO, SI5351_PLLB);
		return;
	}
    c938:	cf 93       	push	r28
    c93a:	df 93       	push	r29
    c93c:	cd b7       	in	r28, 0x3d	; 61
    c93e:	de b7       	in	r29, 0x3e	; 62
    c940:	0e 94 fa 50 	call	0xa1f4	; 0xa1f4 <I2C_1_Shutdown>
    c944:	00 00       	nop
    c946:	df 91       	pop	r29
    c948:	cf 91       	pop	r28
    c94a:	08 95       	ret

0000c94c <si5351_set_freq>:
    c94c:	8f 92       	push	r8
    c94e:	af 92       	push	r10
    c950:	cf 92       	push	r12
    c952:	df 92       	push	r13
    c954:	ef 92       	push	r14
    c956:	ff 92       	push	r15
    c958:	0f 93       	push	r16
    c95a:	1f 93       	push	r17
    c95c:	cf 93       	push	r28
    c95e:	df 93       	push	r29
    c960:	cd b7       	in	r28, 0x3d	; 61
    c962:	de b7       	in	r29, 0x3e	; 62
    c964:	6d 97       	sbiw	r28, 0x1d	; 29
    c966:	cd bf       	out	0x3d, r28	; 61
    c968:	de bf       	out	0x3e, r29	; 62
    c96a:	68 8f       	std	Y+24, r22	; 0x18
    c96c:	79 8f       	std	Y+25, r23	; 0x19
    c96e:	8a 8f       	std	Y+26, r24	; 0x1a
    c970:	9b 8f       	std	Y+27, r25	; 0x1b
    c972:	4c 8f       	std	Y+28, r20	; 0x1c
    c974:	2d 8f       	std	Y+29, r18	; 0x1d
    c976:	19 82       	std	Y+1, r1	; 0x01
    c978:	1a 82       	std	Y+2, r1	; 0x02
    c97a:	1b 82       	std	Y+3, r1	; 0x03
    c97c:	1c 82       	std	Y+4, r1	; 0x04
    c97e:	1f 82       	std	Y+7, r1	; 0x07
    c980:	1c 8a       	std	Y+20, r1	; 0x14
    c982:	1d 8a       	std	Y+21, r1	; 0x15
    c984:	90 91 c6 4a 	lds	r25, 0x4AC6	; 0x804ac6 <g_si5351_initialized>
    c988:	81 e0       	ldi	r24, 0x01	; 1
    c98a:	89 27       	eor	r24, r25
    c98c:	88 23       	and	r24, r24
    c98e:	11 f0       	breq	.+4      	; 0xc994 <si5351_set_freq+0x48>
    c990:	81 e0       	ldi	r24, 0x01	; 1
    c992:	6f c1       	rjmp	.+734    	; 0xcc72 <si5351_set_freq+0x326>
    c994:	88 8d       	ldd	r24, Y+24	; 0x18
    c996:	99 8d       	ldd	r25, Y+25	; 0x19
    c998:	aa 8d       	ldd	r26, Y+26	; 0x1a
    c99a:	bb 8d       	ldd	r27, Y+27	; 0x1b
    c99c:	80 34       	cpi	r24, 0x40	; 64
    c99e:	92 44       	sbci	r25, 0x42	; 66
    c9a0:	af 40       	sbci	r26, 0x0F	; 15
    c9a2:	b1 05       	cpc	r27, r1
    c9a4:	08 f1       	brcs	.+66     	; 0xc9e8 <si5351_set_freq+0x9c>
    c9a6:	88 8d       	ldd	r24, Y+24	; 0x18
    c9a8:	99 8d       	ldd	r25, Y+25	; 0x19
    c9aa:	aa 8d       	ldd	r26, Y+26	; 0x1a
    c9ac:	bb 8d       	ldd	r27, Y+27	; 0x1b
    c9ae:	24 e6       	ldi	r18, 0x64	; 100
    c9b0:	30 e0       	ldi	r19, 0x00	; 0
    c9b2:	40 e0       	ldi	r20, 0x00	; 0
    c9b4:	50 e0       	ldi	r21, 0x00	; 0
    c9b6:	bc 01       	movw	r22, r24
    c9b8:	cd 01       	movw	r24, r26
    c9ba:	0e 94 f0 79 	call	0xf3e0	; 0xf3e0 <__udivmodsi4>
    c9be:	da 01       	movw	r26, r20
    c9c0:	c9 01       	movw	r24, r18
    c9c2:	88 8f       	std	Y+24, r24	; 0x18
    c9c4:	99 8f       	std	Y+25, r25	; 0x19
    c9c6:	aa 8f       	std	Y+26, r26	; 0x1a
    c9c8:	bb 8f       	std	Y+27, r27	; 0x1b
    c9ca:	28 8d       	ldd	r18, Y+24	; 0x18
    c9cc:	39 8d       	ldd	r19, Y+25	; 0x19
    c9ce:	4a 8d       	ldd	r20, Y+26	; 0x1a
    c9d0:	5b 8d       	ldd	r21, Y+27	; 0x1b
    c9d2:	84 e6       	ldi	r24, 0x64	; 100
    c9d4:	90 e0       	ldi	r25, 0x00	; 0
    c9d6:	dc 01       	movw	r26, r24
    c9d8:	0e 94 49 7a 	call	0xf492	; 0xf492 <__muluhisi3>
    c9dc:	dc 01       	movw	r26, r24
    c9de:	cb 01       	movw	r24, r22
    c9e0:	88 8f       	std	Y+24, r24	; 0x18
    c9e2:	99 8f       	std	Y+25, r25	; 0x19
    c9e4:	aa 8f       	std	Y+26, r26	; 0x1a
    c9e6:	bb 8f       	std	Y+27, r27	; 0x1b
    c9e8:	8c 8d       	ldd	r24, Y+28	; 0x1c
    c9ea:	88 2f       	mov	r24, r24
    c9ec:	90 e0       	ldi	r25, 0x00	; 0
    c9ee:	81 30       	cpi	r24, 0x01	; 1
    c9f0:	91 05       	cpc	r25, r1
    c9f2:	e9 f0       	breq	.+58     	; 0xca2e <si5351_set_freq+0xe2>
    c9f4:	82 30       	cpi	r24, 0x02	; 2
    c9f6:	91 05       	cpc	r25, r1
    c9f8:	09 f4       	brne	.+2      	; 0xc9fc <si5351_set_freq+0xb0>
    c9fa:	3f c0       	rjmp	.+126    	; 0xca7a <si5351_set_freq+0x12e>
    c9fc:	89 2b       	or	r24, r25
    c9fe:	09 f0       	breq	.+2      	; 0xca02 <si5351_set_freq+0xb6>
    ca00:	62 c0       	rjmp	.+196    	; 0xcac6 <si5351_set_freq+0x17a>
    ca02:	80 91 b9 4a 	lds	r24, 0x4AB9	; 0x804ab9 <_ZL17enabledClocksMask>
    ca06:	81 60       	ori	r24, 0x01	; 1
    ca08:	80 93 b9 4a 	sts	0x4AB9, r24	; 0x804ab9 <_ZL17enabledClocksMask>
    ca0c:	80 e1       	ldi	r24, 0x10	; 16
    ca0e:	8e 83       	std	Y+6, r24	; 0x06
    ca10:	81 e0       	ldi	r24, 0x01	; 1
    ca12:	8d 83       	std	Y+5, r24	; 0x05
    ca14:	88 8d       	ldd	r24, Y+24	; 0x18
    ca16:	99 8d       	ldd	r25, Y+25	; 0x19
    ca18:	aa 8d       	ldd	r26, Y+26	; 0x1a
    ca1a:	bb 8d       	ldd	r27, Y+27	; 0x1b
    ca1c:	80 93 ba 4a 	sts	0x4ABA, r24	; 0x804aba <_ZL9clock_out>
    ca20:	90 93 bb 4a 	sts	0x4ABB, r25	; 0x804abb <_ZL9clock_out+0x1>
    ca24:	a0 93 bc 4a 	sts	0x4ABC, r26	; 0x804abc <_ZL9clock_out+0x2>
    ca28:	b0 93 bd 4a 	sts	0x4ABD, r27	; 0x804abd <_ZL9clock_out+0x3>
    ca2c:	4e c0       	rjmp	.+156    	; 0xcaca <si5351_set_freq+0x17e>
    ca2e:	80 91 b9 4a 	lds	r24, 0x4AB9	; 0x804ab9 <_ZL17enabledClocksMask>
    ca32:	82 60       	ori	r24, 0x02	; 2
    ca34:	80 93 b9 4a 	sts	0x4AB9, r24	; 0x804ab9 <_ZL17enabledClocksMask>
    ca38:	81 e1       	ldi	r24, 0x11	; 17
    ca3a:	8e 83       	std	Y+6, r24	; 0x06
    ca3c:	80 91 b9 4a 	lds	r24, 0x4AB9	; 0x804ab9 <_ZL17enabledClocksMask>
    ca40:	80 95       	com	r24
    ca42:	8a 6f       	ori	r24, 0xFA	; 250
    ca44:	8e 8b       	std	Y+22, r24	; 0x16
    ca46:	ce 01       	movw	r24, r28
    ca48:	46 96       	adiw	r24, 0x16	; 22
    ca4a:	41 e0       	ldi	r20, 0x01	; 1
    ca4c:	bc 01       	movw	r22, r24
    ca4e:	83 e0       	ldi	r24, 0x03	; 3
    ca50:	0e 94 7f 6b 	call	0xd6fe	; 0xd6fe <_Z17si5351_write_bulkhPhh>
    ca54:	88 23       	and	r24, r24
    ca56:	11 f0       	breq	.+4      	; 0xca5c <si5351_set_freq+0x110>
    ca58:	81 e0       	ldi	r24, 0x01	; 1
    ca5a:	0b c1       	rjmp	.+534    	; 0xcc72 <si5351_set_freq+0x326>
    ca5c:	82 e0       	ldi	r24, 0x02	; 2
    ca5e:	8d 83       	std	Y+5, r24	; 0x05
    ca60:	88 8d       	ldd	r24, Y+24	; 0x18
    ca62:	99 8d       	ldd	r25, Y+25	; 0x19
    ca64:	aa 8d       	ldd	r26, Y+26	; 0x1a
    ca66:	bb 8d       	ldd	r27, Y+27	; 0x1b
    ca68:	80 93 be 4a 	sts	0x4ABE, r24	; 0x804abe <_ZL9clock_out+0x4>
    ca6c:	90 93 bf 4a 	sts	0x4ABF, r25	; 0x804abf <_ZL9clock_out+0x5>
    ca70:	a0 93 c0 4a 	sts	0x4AC0, r26	; 0x804ac0 <_ZL9clock_out+0x6>
    ca74:	b0 93 c1 4a 	sts	0x4AC1, r27	; 0x804ac1 <_ZL9clock_out+0x7>
    ca78:	28 c0       	rjmp	.+80     	; 0xcaca <si5351_set_freq+0x17e>
    ca7a:	80 91 b9 4a 	lds	r24, 0x4AB9	; 0x804ab9 <_ZL17enabledClocksMask>
    ca7e:	84 60       	ori	r24, 0x04	; 4
    ca80:	80 93 b9 4a 	sts	0x4AB9, r24	; 0x804ab9 <_ZL17enabledClocksMask>
    ca84:	82 e1       	ldi	r24, 0x12	; 18
    ca86:	8e 83       	std	Y+6, r24	; 0x06
    ca88:	80 91 b9 4a 	lds	r24, 0x4AB9	; 0x804ab9 <_ZL17enabledClocksMask>
    ca8c:	80 95       	com	r24
    ca8e:	8c 6f       	ori	r24, 0xFC	; 252
    ca90:	8e 8b       	std	Y+22, r24	; 0x16
    ca92:	ce 01       	movw	r24, r28
    ca94:	46 96       	adiw	r24, 0x16	; 22
    ca96:	41 e0       	ldi	r20, 0x01	; 1
    ca98:	bc 01       	movw	r22, r24
    ca9a:	83 e0       	ldi	r24, 0x03	; 3
    ca9c:	0e 94 7f 6b 	call	0xd6fe	; 0xd6fe <_Z17si5351_write_bulkhPhh>
    caa0:	88 23       	and	r24, r24
    caa2:	11 f0       	breq	.+4      	; 0xcaa8 <si5351_set_freq+0x15c>
    caa4:	81 e0       	ldi	r24, 0x01	; 1
    caa6:	e5 c0       	rjmp	.+458    	; 0xcc72 <si5351_set_freq+0x326>
    caa8:	82 e0       	ldi	r24, 0x02	; 2
    caaa:	8d 83       	std	Y+5, r24	; 0x05
    caac:	88 8d       	ldd	r24, Y+24	; 0x18
    caae:	99 8d       	ldd	r25, Y+25	; 0x19
    cab0:	aa 8d       	ldd	r26, Y+26	; 0x1a
    cab2:	bb 8d       	ldd	r27, Y+27	; 0x1b
    cab4:	80 93 c2 4a 	sts	0x4AC2, r24	; 0x804ac2 <_ZL9clock_out+0x8>
    cab8:	90 93 c3 4a 	sts	0x4AC3, r25	; 0x804ac3 <_ZL9clock_out+0x9>
    cabc:	a0 93 c4 4a 	sts	0x4AC4, r26	; 0x804ac4 <_ZL9clock_out+0xa>
    cac0:	b0 93 c5 4a 	sts	0x4AC5, r27	; 0x804ac5 <_ZL9clock_out+0xb>
    cac4:	02 c0       	rjmp	.+4      	; 0xcaca <si5351_set_freq+0x17e>
    cac6:	81 e0       	ldi	r24, 0x01	; 1
    cac8:	d4 c0       	rjmp	.+424    	; 0xcc72 <si5351_set_freq+0x326>
    caca:	8d 81       	ldd	r24, Y+5	; 0x05
    cacc:	81 30       	cpi	r24, 0x01	; 1
    cace:	61 f0       	breq	.+24     	; 0xcae8 <si5351_set_freq+0x19c>
    cad0:	80 91 b5 4a 	lds	r24, 0x4AB5	; 0x804ab5 <_ZL8freqVCOB>
    cad4:	90 91 b6 4a 	lds	r25, 0x4AB6	; 0x804ab6 <_ZL8freqVCOB+0x1>
    cad8:	a0 91 b7 4a 	lds	r26, 0x4AB7	; 0x804ab7 <_ZL8freqVCOB+0x2>
    cadc:	b0 91 b8 4a 	lds	r27, 0x4AB8	; 0x804ab8 <_ZL8freqVCOB+0x3>
    cae0:	89 2b       	or	r24, r25
    cae2:	8a 2b       	or	r24, r26
    cae4:	8b 2b       	or	r24, r27
    cae6:	c9 f4       	brne	.+50     	; 0xcb1a <si5351_set_freq+0x1ce>
    cae8:	be 01       	movw	r22, r28
    caea:	6b 5e       	subi	r22, 0xEB	; 235
    caec:	7f 4f       	sbci	r23, 0xFF	; 255
    caee:	9e 01       	movw	r18, r28
    caf0:	2c 5e       	subi	r18, 0xEC	; 236
    caf2:	3f 4f       	sbci	r19, 0xFF	; 255
    caf4:	ae 01       	movw	r20, r28
    caf6:	48 5f       	subi	r20, 0xF8	; 248
    caf8:	5f 4f       	sbci	r21, 0xFF	; 255
    cafa:	88 8d       	ldd	r24, Y+24	; 0x18
    cafc:	99 8d       	ldd	r25, Y+25	; 0x19
    cafe:	aa 8d       	ldd	r26, Y+26	; 0x1a
    cb00:	bb 8d       	ldd	r27, Y+27	; 0x1b
    cb02:	8b 01       	movw	r16, r22
    cb04:	bc 01       	movw	r22, r24
    cb06:	cd 01       	movw	r24, r26
    cb08:	0e 94 f4 68 	call	0xd1e8	; 0xd1e8 <_Z15multisynth_calcmP13u_si5351_regsPbS1_>
    cb0c:	dc 01       	movw	r26, r24
    cb0e:	cb 01       	movw	r24, r22
    cb10:	89 83       	std	Y+1, r24	; 0x01
    cb12:	9a 83       	std	Y+2, r25	; 0x02
    cb14:	ab 83       	std	Y+3, r26	; 0x03
    cb16:	bc 83       	std	Y+4, r27	; 0x04
    cb18:	18 c0       	rjmp	.+48     	; 0xcb4a <si5351_set_freq+0x1fe>
    cb1a:	be 01       	movw	r22, r28
    cb1c:	6b 5e       	subi	r22, 0xEB	; 235
    cb1e:	7f 4f       	sbci	r23, 0xFF	; 255
    cb20:	9e 01       	movw	r18, r28
    cb22:	2c 5e       	subi	r18, 0xEC	; 236
    cb24:	3f 4f       	sbci	r19, 0xFF	; 255
    cb26:	ae 01       	movw	r20, r28
    cb28:	48 5f       	subi	r20, 0xF8	; 248
    cb2a:	5f 4f       	sbci	r21, 0xFF	; 255
    cb2c:	88 8d       	ldd	r24, Y+24	; 0x18
    cb2e:	99 8d       	ldd	r25, Y+25	; 0x19
    cb30:	aa 8d       	ldd	r26, Y+26	; 0x1a
    cb32:	bb 8d       	ldd	r27, Y+27	; 0x1b
    cb34:	8b 01       	movw	r16, r22
    cb36:	bc 01       	movw	r22, r24
    cb38:	cd 01       	movw	r24, r26
    cb3a:	0e 94 fe 69 	call	0xd3fc	; 0xd3fc <_Z19multisynth_estimatemP13u_si5351_regsPbS1_>
    cb3e:	dc 01       	movw	r26, r24
    cb40:	cb 01       	movw	r24, r22
    cb42:	88 8f       	std	Y+24, r24	; 0x18
    cb44:	99 8f       	std	Y+25, r25	; 0x19
    cb46:	aa 8f       	std	Y+26, r26	; 0x1a
    cb48:	bb 8f       	std	Y+27, r27	; 0x1b
    cb4a:	6d 81       	ldd	r22, Y+5	; 0x05
    cb4c:	8c 8d       	ldd	r24, Y+28	; 0x1c
    cb4e:	0e 94 e3 6b 	call	0xd7c6	; 0xd7c6 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll>
    cb52:	88 23       	and	r24, r24
    cb54:	11 f0       	breq	.+4      	; 0xcb5a <si5351_set_freq+0x20e>
    cb56:	81 e0       	ldi	r24, 0x01	; 1
    cb58:	8c c0       	rjmp	.+280    	; 0xcc72 <si5351_set_freq+0x326>
    cb5a:	8d 89       	ldd	r24, Y+21	; 0x15
    cb5c:	9c 89       	ldd	r25, Y+20	; 0x14
    cb5e:	8f 93       	push	r24
    cb60:	8f 80       	ldd	r8, Y+7	; 0x07
    cb62:	a9 2e       	mov	r10, r25
    cb64:	c8 84       	ldd	r12, Y+8	; 0x08
    cb66:	d9 84       	ldd	r13, Y+9	; 0x09
    cb68:	ea 84       	ldd	r14, Y+10	; 0x0a
    cb6a:	fb 84       	ldd	r15, Y+11	; 0x0b
    cb6c:	0c 85       	ldd	r16, Y+12	; 0x0c
    cb6e:	1d 85       	ldd	r17, Y+13	; 0x0d
    cb70:	2e 85       	ldd	r18, Y+14	; 0x0e
    cb72:	3f 85       	ldd	r19, Y+15	; 0x0f
    cb74:	48 89       	ldd	r20, Y+16	; 0x10
    cb76:	59 89       	ldd	r21, Y+17	; 0x11
    cb78:	6a 89       	ldd	r22, Y+18	; 0x12
    cb7a:	7b 89       	ldd	r23, Y+19	; 0x13
    cb7c:	8c 8d       	ldd	r24, Y+28	; 0x1c
    cb7e:	0e 94 20 6c 	call	0xd840	; 0xd840 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb>
    cb82:	0f 90       	pop	r0
    cb84:	88 23       	and	r24, r24
    cb86:	11 f0       	breq	.+4      	; 0xcb8c <si5351_set_freq+0x240>
    cb88:	81 e0       	ldi	r24, 0x01	; 1
    cb8a:	73 c0       	rjmp	.+230    	; 0xcc72 <si5351_set_freq+0x326>
    cb8c:	89 81       	ldd	r24, Y+1	; 0x01
    cb8e:	9a 81       	ldd	r25, Y+2	; 0x02
    cb90:	ab 81       	ldd	r26, Y+3	; 0x03
    cb92:	bc 81       	ldd	r27, Y+4	; 0x04
    cb94:	89 2b       	or	r24, r25
    cb96:	8a 2b       	or	r24, r26
    cb98:	8b 2b       	or	r24, r27
    cb9a:	49 f0       	breq	.+18     	; 0xcbae <si5351_set_freq+0x262>
    cb9c:	89 81       	ldd	r24, Y+1	; 0x01
    cb9e:	9a 81       	ldd	r25, Y+2	; 0x02
    cba0:	ab 81       	ldd	r26, Y+3	; 0x03
    cba2:	bc 81       	ldd	r27, Y+4	; 0x04
    cba4:	4d 81       	ldd	r20, Y+5	; 0x05
    cba6:	bc 01       	movw	r22, r24
    cba8:	cd 01       	movw	r24, r26
    cbaa:	0e 94 92 66 	call	0xcd24	; 0xcd24 <_Z7set_pllm10si5351_pll>
    cbae:	8d 8d       	ldd	r24, Y+29	; 0x1d
    cbb0:	88 23       	and	r24, r24
    cbb2:	71 f0       	breq	.+28     	; 0xcbd0 <si5351_set_freq+0x284>
    cbb4:	80 91 b9 4a 	lds	r24, 0x4AB9	; 0x804ab9 <_ZL17enabledClocksMask>
    cbb8:	8e 8b       	std	Y+22, r24	; 0x16
    cbba:	ce 01       	movw	r24, r28
    cbbc:	46 96       	adiw	r24, 0x16	; 22
    cbbe:	41 e0       	ldi	r20, 0x01	; 1
    cbc0:	bc 01       	movw	r22, r24
    cbc2:	83 e0       	ldi	r24, 0x03	; 3
    cbc4:	0e 94 7f 6b 	call	0xd6fe	; 0xd6fe <_Z17si5351_write_bulkhPhh>
    cbc8:	88 23       	and	r24, r24
    cbca:	89 f0       	breq	.+34     	; 0xcbee <si5351_set_freq+0x2a2>
    cbcc:	81 e0       	ldi	r24, 0x01	; 1
    cbce:	51 c0       	rjmp	.+162    	; 0xcc72 <si5351_set_freq+0x326>
    cbd0:	80 91 b9 4a 	lds	r24, 0x4AB9	; 0x804ab9 <_ZL17enabledClocksMask>
    cbd4:	80 95       	com	r24
    cbd6:	8e 8b       	std	Y+22, r24	; 0x16
    cbd8:	ce 01       	movw	r24, r28
    cbda:	46 96       	adiw	r24, 0x16	; 22
    cbdc:	41 e0       	ldi	r20, 0x01	; 1
    cbde:	bc 01       	movw	r22, r24
    cbe0:	83 e0       	ldi	r24, 0x03	; 3
    cbe2:	0e 94 7f 6b 	call	0xd6fe	; 0xd6fe <_Z17si5351_write_bulkhPhh>
    cbe6:	88 23       	and	r24, r24
    cbe8:	11 f0       	breq	.+4      	; 0xcbee <si5351_set_freq+0x2a2>
    cbea:	81 e0       	ldi	r24, 0x01	; 1
    cbec:	42 c0       	rjmp	.+132    	; 0xcc72 <si5351_set_freq+0x326>
    cbee:	8d 81       	ldd	r24, Y+5	; 0x05
    cbf0:	81 30       	cpi	r24, 0x01	; 1
    cbf2:	69 f4       	brne	.+26     	; 0xcc0e <si5351_set_freq+0x2c2>
    cbf4:	8c e4       	ldi	r24, 0x4C	; 76
    cbf6:	8e 8b       	std	Y+22, r24	; 0x16
    cbf8:	ce 01       	movw	r24, r28
    cbfa:	46 96       	adiw	r24, 0x16	; 22
    cbfc:	41 e0       	ldi	r20, 0x01	; 1
    cbfe:	bc 01       	movw	r22, r24
    cc00:	8e 81       	ldd	r24, Y+6	; 0x06
    cc02:	0e 94 7f 6b 	call	0xd6fe	; 0xd6fe <_Z17si5351_write_bulkhPhh>
    cc06:	88 23       	and	r24, r24
    cc08:	99 f1       	breq	.+102    	; 0xcc70 <si5351_set_freq+0x324>
    cc0a:	81 e0       	ldi	r24, 0x01	; 1
    cc0c:	32 c0       	rjmp	.+100    	; 0xcc72 <si5351_set_freq+0x326>
    cc0e:	8c 89       	ldd	r24, Y+20	; 0x14
    cc10:	88 23       	and	r24, r24
    cc12:	69 f0       	breq	.+26     	; 0xcc2e <si5351_set_freq+0x2e2>
    cc14:	8c e6       	ldi	r24, 0x6C	; 108
    cc16:	8e 8b       	std	Y+22, r24	; 0x16
    cc18:	ce 01       	movw	r24, r28
    cc1a:	46 96       	adiw	r24, 0x16	; 22
    cc1c:	41 e0       	ldi	r20, 0x01	; 1
    cc1e:	bc 01       	movw	r22, r24
    cc20:	8e 81       	ldd	r24, Y+6	; 0x06
    cc22:	0e 94 7f 6b 	call	0xd6fe	; 0xd6fe <_Z17si5351_write_bulkhPhh>
    cc26:	88 23       	and	r24, r24
    cc28:	79 f0       	breq	.+30     	; 0xcc48 <si5351_set_freq+0x2fc>
    cc2a:	81 e0       	ldi	r24, 0x01	; 1
    cc2c:	22 c0       	rjmp	.+68     	; 0xcc72 <si5351_set_freq+0x326>
    cc2e:	8c e2       	ldi	r24, 0x2C	; 44
    cc30:	8e 8b       	std	Y+22, r24	; 0x16
    cc32:	ce 01       	movw	r24, r28
    cc34:	46 96       	adiw	r24, 0x16	; 22
    cc36:	41 e0       	ldi	r20, 0x01	; 1
    cc38:	bc 01       	movw	r22, r24
    cc3a:	8e 81       	ldd	r24, Y+6	; 0x06
    cc3c:	0e 94 7f 6b 	call	0xd6fe	; 0xd6fe <_Z17si5351_write_bulkhPhh>
    cc40:	88 23       	and	r24, r24
    cc42:	11 f0       	breq	.+4      	; 0xcc48 <si5351_set_freq+0x2fc>
    cc44:	81 e0       	ldi	r24, 0x01	; 1
    cc46:	15 c0       	rjmp	.+42     	; 0xcc72 <si5351_set_freq+0x326>
    cc48:	89 81       	ldd	r24, Y+1	; 0x01
    cc4a:	9a 81       	ldd	r25, Y+2	; 0x02
    cc4c:	ab 81       	ldd	r26, Y+3	; 0x03
    cc4e:	bc 81       	ldd	r27, Y+4	; 0x04
    cc50:	89 2b       	or	r24, r25
    cc52:	8a 2b       	or	r24, r26
    cc54:	8b 2b       	or	r24, r27
    cc56:	61 f0       	breq	.+24     	; 0xcc70 <si5351_set_freq+0x324>
    cc58:	89 81       	ldd	r24, Y+1	; 0x01
    cc5a:	9a 81       	ldd	r25, Y+2	; 0x02
    cc5c:	ab 81       	ldd	r26, Y+3	; 0x03
    cc5e:	bc 81       	ldd	r27, Y+4	; 0x04
    cc60:	80 93 b5 4a 	sts	0x4AB5, r24	; 0x804ab5 <_ZL8freqVCOB>
    cc64:	90 93 b6 4a 	sts	0x4AB6, r25	; 0x804ab6 <_ZL8freqVCOB+0x1>
    cc68:	a0 93 b7 4a 	sts	0x4AB7, r26	; 0x804ab7 <_ZL8freqVCOB+0x2>
    cc6c:	b0 93 b8 4a 	sts	0x4AB8, r27	; 0x804ab8 <_ZL8freqVCOB+0x3>
    cc70:	80 e0       	ldi	r24, 0x00	; 0
    cc72:	6d 96       	adiw	r28, 0x1d	; 29
    cc74:	cd bf       	out	0x3d, r28	; 61
    cc76:	de bf       	out	0x3e, r29	; 62
    cc78:	df 91       	pop	r29
    cc7a:	cf 91       	pop	r28
    cc7c:	1f 91       	pop	r17
    cc7e:	0f 91       	pop	r16
    cc80:	ff 90       	pop	r15
    cc82:	ef 90       	pop	r14
    cc84:	df 90       	pop	r13
    cc86:	cf 90       	pop	r12
    cc88:	af 90       	pop	r10
    cc8a:	8f 90       	pop	r8
    cc8c:	08 95       	ret

0000cc8e <si5351_clock_enable>:
    cc8e:	cf 93       	push	r28
    cc90:	df 93       	push	r29
    cc92:	cd b7       	in	r28, 0x3d	; 61
    cc94:	de b7       	in	r29, 0x3e	; 62
    cc96:	25 97       	sbiw	r28, 0x05	; 5
    cc98:	cd bf       	out	0x3d, r28	; 61
    cc9a:	de bf       	out	0x3e, r29	; 62
    cc9c:	8c 83       	std	Y+4, r24	; 0x04
    cc9e:	6d 83       	std	Y+5, r22	; 0x05
    cca0:	ce 01       	movw	r24, r28
    cca2:	02 96       	adiw	r24, 0x02	; 2
    cca4:	41 e0       	ldi	r20, 0x01	; 1
    cca6:	bc 01       	movw	r22, r24
    cca8:	83 e0       	ldi	r24, 0x03	; 3
    ccaa:	0e 94 b1 6b 	call	0xd762	; 0xd762 <_Z16si5351_read_bulkhPhh>
    ccae:	88 23       	and	r24, r24
    ccb0:	11 f0       	breq	.+4      	; 0xccb6 <si5351_clock_enable+0x28>
    ccb2:	8c ef       	ldi	r24, 0xFC	; 252
    ccb4:	31 c0       	rjmp	.+98     	; 0xcd18 <si5351_clock_enable+0x8a>
    ccb6:	8a 81       	ldd	r24, Y+2	; 0x02
    ccb8:	89 83       	std	Y+1, r24	; 0x01
    ccba:	8d 81       	ldd	r24, Y+5	; 0x05
    ccbc:	88 23       	and	r24, r24
    ccbe:	81 f0       	breq	.+32     	; 0xcce0 <si5351_clock_enable+0x52>
    ccc0:	8c 81       	ldd	r24, Y+4	; 0x04
    ccc2:	28 2f       	mov	r18, r24
    ccc4:	30 e0       	ldi	r19, 0x00	; 0
    ccc6:	81 e0       	ldi	r24, 0x01	; 1
    ccc8:	90 e0       	ldi	r25, 0x00	; 0
    ccca:	02 c0       	rjmp	.+4      	; 0xccd0 <si5351_clock_enable+0x42>
    cccc:	88 0f       	add	r24, r24
    ccce:	99 1f       	adc	r25, r25
    ccd0:	2a 95       	dec	r18
    ccd2:	e2 f7       	brpl	.-8      	; 0xcccc <si5351_clock_enable+0x3e>
    ccd4:	98 2f       	mov	r25, r24
    ccd6:	90 95       	com	r25
    ccd8:	89 81       	ldd	r24, Y+1	; 0x01
    ccda:	89 23       	and	r24, r25
    ccdc:	89 83       	std	Y+1, r24	; 0x01
    ccde:	0e c0       	rjmp	.+28     	; 0xccfc <si5351_clock_enable+0x6e>
    cce0:	8c 81       	ldd	r24, Y+4	; 0x04
    cce2:	28 2f       	mov	r18, r24
    cce4:	30 e0       	ldi	r19, 0x00	; 0
    cce6:	81 e0       	ldi	r24, 0x01	; 1
    cce8:	90 e0       	ldi	r25, 0x00	; 0
    ccea:	02 c0       	rjmp	.+4      	; 0xccf0 <si5351_clock_enable+0x62>
    ccec:	88 0f       	add	r24, r24
    ccee:	99 1f       	adc	r25, r25
    ccf0:	2a 95       	dec	r18
    ccf2:	e2 f7       	brpl	.-8      	; 0xccec <si5351_clock_enable+0x5e>
    ccf4:	98 2f       	mov	r25, r24
    ccf6:	89 81       	ldd	r24, Y+1	; 0x01
    ccf8:	89 2b       	or	r24, r25
    ccfa:	89 83       	std	Y+1, r24	; 0x01
    ccfc:	89 81       	ldd	r24, Y+1	; 0x01
    ccfe:	8a 83       	std	Y+2, r24	; 0x02
    cd00:	ce 01       	movw	r24, r28
    cd02:	02 96       	adiw	r24, 0x02	; 2
    cd04:	41 e0       	ldi	r20, 0x01	; 1
    cd06:	bc 01       	movw	r22, r24
    cd08:	83 e0       	ldi	r24, 0x03	; 3
    cd0a:	0e 94 7f 6b 	call	0xd6fe	; 0xd6fe <_Z17si5351_write_bulkhPhh>
    cd0e:	88 23       	and	r24, r24
    cd10:	11 f0       	breq	.+4      	; 0xcd16 <si5351_clock_enable+0x88>
    cd12:	8c ef       	ldi	r24, 0xFC	; 252
    cd14:	01 c0       	rjmp	.+2      	; 0xcd18 <si5351_clock_enable+0x8a>
    cd16:	80 e0       	ldi	r24, 0x00	; 0
    cd18:	25 96       	adiw	r28, 0x05	; 5
    cd1a:	cd bf       	out	0x3d, r28	; 61
    cd1c:	de bf       	out	0x3e, r29	; 62
    cd1e:	df 91       	pop	r29
    cd20:	cf 91       	pop	r28
    cd22:	08 95       	ret

0000cd24 <_Z7set_pllm10si5351_pll>:
    cd24:	cf 93       	push	r28
    cd26:	df 93       	push	r29
    cd28:	cd b7       	in	r28, 0x3d	; 61
    cd2a:	de b7       	in	r29, 0x3e	; 62
    cd2c:	6c 97       	sbiw	r28, 0x1c	; 28
    cd2e:	cd bf       	out	0x3d, r28	; 61
    cd30:	de bf       	out	0x3e, r29	; 62
    cd32:	68 8f       	std	Y+24, r22	; 0x18
    cd34:	79 8f       	std	Y+25, r23	; 0x19
    cd36:	8a 8f       	std	Y+26, r24	; 0x1a
    cd38:	9b 8f       	std	Y+27, r25	; 0x1b
    cd3a:	4c 8f       	std	Y+28, r20	; 0x1c
    cd3c:	9e 01       	movw	r18, r28
    cd3e:	2e 5f       	subi	r18, 0xFE	; 254
    cd40:	3f 4f       	sbci	r19, 0xFF	; 255
    cd42:	88 8d       	ldd	r24, Y+24	; 0x18
    cd44:	99 8d       	ldd	r25, Y+25	; 0x19
    cd46:	aa 8d       	ldd	r26, Y+26	; 0x1a
    cd48:	bb 8d       	ldd	r27, Y+27	; 0x1b
    cd4a:	a9 01       	movw	r20, r18
    cd4c:	bc 01       	movw	r22, r24
    cd4e:	cd 01       	movw	r24, r26
    cd50:	0e 94 5b 67 	call	0xceb6	; 0xceb6 <_Z8pll_calcmP13u_si5351_regs>
    cd54:	88 23       	and	r24, r24
    cd56:	11 f0       	breq	.+4      	; 0xcd5c <_Z7set_pllm10si5351_pll+0x38>
    cd58:	81 e0       	ldi	r24, 0x01	; 1
    cd5a:	a7 c0       	rjmp	.+334    	; 0xceaa <_Z7set_pllm10si5351_pll+0x186>
    cd5c:	19 82       	std	Y+1, r1	; 0x01
    cd5e:	89 81       	ldd	r24, Y+1	; 0x01
    cd60:	91 e0       	ldi	r25, 0x01	; 1
    cd62:	98 0f       	add	r25, r24
    cd64:	99 83       	std	Y+1, r25	; 0x01
    cd66:	88 2f       	mov	r24, r24
    cd68:	90 e0       	ldi	r25, 0x00	; 0
    cd6a:	4b 85       	ldd	r20, Y+11	; 0x0b
    cd6c:	9e 01       	movw	r18, r28
    cd6e:	22 5f       	subi	r18, 0xF2	; 242
    cd70:	3f 4f       	sbci	r19, 0xFF	; 255
    cd72:	82 0f       	add	r24, r18
    cd74:	93 1f       	adc	r25, r19
    cd76:	fc 01       	movw	r30, r24
    cd78:	40 83       	st	Z, r20
    cd7a:	89 81       	ldd	r24, Y+1	; 0x01
    cd7c:	91 e0       	ldi	r25, 0x01	; 1
    cd7e:	98 0f       	add	r25, r24
    cd80:	99 83       	std	Y+1, r25	; 0x01
    cd82:	88 2f       	mov	r24, r24
    cd84:	90 e0       	ldi	r25, 0x00	; 0
    cd86:	4a 85       	ldd	r20, Y+10	; 0x0a
    cd88:	9e 01       	movw	r18, r28
    cd8a:	22 5f       	subi	r18, 0xF2	; 242
    cd8c:	3f 4f       	sbci	r19, 0xFF	; 255
    cd8e:	82 0f       	add	r24, r18
    cd90:	93 1f       	adc	r25, r19
    cd92:	fc 01       	movw	r30, r24
    cd94:	40 83       	st	Z, r20
    cd96:	89 81       	ldd	r24, Y+1	; 0x01
    cd98:	91 e0       	ldi	r25, 0x01	; 1
    cd9a:	98 0f       	add	r25, r24
    cd9c:	99 83       	std	Y+1, r25	; 0x01
    cd9e:	88 2f       	mov	r24, r24
    cda0:	90 e0       	ldi	r25, 0x00	; 0
    cda2:	2c 81       	ldd	r18, Y+4	; 0x04
    cda4:	42 2f       	mov	r20, r18
    cda6:	43 70       	andi	r20, 0x03	; 3
    cda8:	9e 01       	movw	r18, r28
    cdaa:	22 5f       	subi	r18, 0xF2	; 242
    cdac:	3f 4f       	sbci	r19, 0xFF	; 255
    cdae:	82 0f       	add	r24, r18
    cdb0:	93 1f       	adc	r25, r19
    cdb2:	fc 01       	movw	r30, r24
    cdb4:	40 83       	st	Z, r20
    cdb6:	89 81       	ldd	r24, Y+1	; 0x01
    cdb8:	91 e0       	ldi	r25, 0x01	; 1
    cdba:	98 0f       	add	r25, r24
    cdbc:	99 83       	std	Y+1, r25	; 0x01
    cdbe:	88 2f       	mov	r24, r24
    cdc0:	90 e0       	ldi	r25, 0x00	; 0
    cdc2:	4b 81       	ldd	r20, Y+3	; 0x03
    cdc4:	9e 01       	movw	r18, r28
    cdc6:	22 5f       	subi	r18, 0xF2	; 242
    cdc8:	3f 4f       	sbci	r19, 0xFF	; 255
    cdca:	82 0f       	add	r24, r18
    cdcc:	93 1f       	adc	r25, r19
    cdce:	fc 01       	movw	r30, r24
    cdd0:	40 83       	st	Z, r20
    cdd2:	89 81       	ldd	r24, Y+1	; 0x01
    cdd4:	91 e0       	ldi	r25, 0x01	; 1
    cdd6:	98 0f       	add	r25, r24
    cdd8:	99 83       	std	Y+1, r25	; 0x01
    cdda:	88 2f       	mov	r24, r24
    cddc:	90 e0       	ldi	r25, 0x00	; 0
    cdde:	4a 81       	ldd	r20, Y+2	; 0x02
    cde0:	9e 01       	movw	r18, r28
    cde2:	22 5f       	subi	r18, 0xF2	; 242
    cde4:	3f 4f       	sbci	r19, 0xFF	; 255
    cde6:	82 0f       	add	r24, r18
    cde8:	93 1f       	adc	r25, r19
    cdea:	fc 01       	movw	r30, r24
    cdec:	40 83       	st	Z, r20
    cdee:	89 81       	ldd	r24, Y+1	; 0x01
    cdf0:	88 2f       	mov	r24, r24
    cdf2:	90 e0       	ldi	r25, 0x00	; 0
    cdf4:	2c 85       	ldd	r18, Y+12	; 0x0c
    cdf6:	42 2f       	mov	r20, r18
    cdf8:	42 95       	swap	r20
    cdfa:	40 7f       	andi	r20, 0xF0	; 240
    cdfc:	9e 01       	movw	r18, r28
    cdfe:	22 5f       	subi	r18, 0xF2	; 242
    ce00:	3f 4f       	sbci	r19, 0xFF	; 255
    ce02:	82 0f       	add	r24, r18
    ce04:	93 1f       	adc	r25, r19
    ce06:	fc 01       	movw	r30, r24
    ce08:	40 83       	st	Z, r20
    ce0a:	29 81       	ldd	r18, Y+1	; 0x01
    ce0c:	81 e0       	ldi	r24, 0x01	; 1
    ce0e:	82 0f       	add	r24, r18
    ce10:	89 83       	std	Y+1, r24	; 0x01
    ce12:	82 2f       	mov	r24, r18
    ce14:	90 e0       	ldi	r25, 0x00	; 0
    ce16:	22 2f       	mov	r18, r18
    ce18:	30 e0       	ldi	r19, 0x00	; 0
    ce1a:	ae 01       	movw	r20, r28
    ce1c:	42 5f       	subi	r20, 0xF2	; 242
    ce1e:	5f 4f       	sbci	r21, 0xFF	; 255
    ce20:	24 0f       	add	r18, r20
    ce22:	35 1f       	adc	r19, r21
    ce24:	f9 01       	movw	r30, r18
    ce26:	30 81       	ld	r19, Z
    ce28:	28 85       	ldd	r18, Y+8	; 0x08
    ce2a:	2f 70       	andi	r18, 0x0F	; 15
    ce2c:	43 2f       	mov	r20, r19
    ce2e:	42 0f       	add	r20, r18
    ce30:	9e 01       	movw	r18, r28
    ce32:	22 5f       	subi	r18, 0xF2	; 242
    ce34:	3f 4f       	sbci	r19, 0xFF	; 255
    ce36:	82 0f       	add	r24, r18
    ce38:	93 1f       	adc	r25, r19
    ce3a:	fc 01       	movw	r30, r24
    ce3c:	40 83       	st	Z, r20
    ce3e:	89 81       	ldd	r24, Y+1	; 0x01
    ce40:	91 e0       	ldi	r25, 0x01	; 1
    ce42:	98 0f       	add	r25, r24
    ce44:	99 83       	std	Y+1, r25	; 0x01
    ce46:	88 2f       	mov	r24, r24
    ce48:	90 e0       	ldi	r25, 0x00	; 0
    ce4a:	4f 81       	ldd	r20, Y+7	; 0x07
    ce4c:	9e 01       	movw	r18, r28
    ce4e:	22 5f       	subi	r18, 0xF2	; 242
    ce50:	3f 4f       	sbci	r19, 0xFF	; 255
    ce52:	82 0f       	add	r24, r18
    ce54:	93 1f       	adc	r25, r19
    ce56:	fc 01       	movw	r30, r24
    ce58:	40 83       	st	Z, r20
    ce5a:	89 81       	ldd	r24, Y+1	; 0x01
    ce5c:	91 e0       	ldi	r25, 0x01	; 1
    ce5e:	98 0f       	add	r25, r24
    ce60:	99 83       	std	Y+1, r25	; 0x01
    ce62:	88 2f       	mov	r24, r24
    ce64:	90 e0       	ldi	r25, 0x00	; 0
    ce66:	4e 81       	ldd	r20, Y+6	; 0x06
    ce68:	9e 01       	movw	r18, r28
    ce6a:	22 5f       	subi	r18, 0xF2	; 242
    ce6c:	3f 4f       	sbci	r19, 0xFF	; 255
    ce6e:	82 0f       	add	r24, r18
    ce70:	93 1f       	adc	r25, r19
    ce72:	fc 01       	movw	r30, r24
    ce74:	40 83       	st	Z, r20
    ce76:	8c 8d       	ldd	r24, Y+28	; 0x1c
    ce78:	81 30       	cpi	r24, 0x01	; 1
    ce7a:	59 f4       	brne	.+22     	; 0xce92 <_Z7set_pllm10si5351_pll+0x16e>
    ce7c:	ce 01       	movw	r24, r28
    ce7e:	0e 96       	adiw	r24, 0x0e	; 14
    ce80:	49 81       	ldd	r20, Y+1	; 0x01
    ce82:	bc 01       	movw	r22, r24
    ce84:	8a e1       	ldi	r24, 0x1A	; 26
    ce86:	0e 94 7f 6b 	call	0xd6fe	; 0xd6fe <_Z17si5351_write_bulkhPhh>
    ce8a:	88 23       	and	r24, r24
    ce8c:	69 f0       	breq	.+26     	; 0xcea8 <_Z7set_pllm10si5351_pll+0x184>
    ce8e:	81 e0       	ldi	r24, 0x01	; 1
    ce90:	0c c0       	rjmp	.+24     	; 0xceaa <_Z7set_pllm10si5351_pll+0x186>
    ce92:	ce 01       	movw	r24, r28
    ce94:	0e 96       	adiw	r24, 0x0e	; 14
    ce96:	49 81       	ldd	r20, Y+1	; 0x01
    ce98:	bc 01       	movw	r22, r24
    ce9a:	82 e2       	ldi	r24, 0x22	; 34
    ce9c:	0e 94 7f 6b 	call	0xd6fe	; 0xd6fe <_Z17si5351_write_bulkhPhh>
    cea0:	88 23       	and	r24, r24
    cea2:	11 f0       	breq	.+4      	; 0xcea8 <_Z7set_pllm10si5351_pll+0x184>
    cea4:	81 e0       	ldi	r24, 0x01	; 1
    cea6:	01 c0       	rjmp	.+2      	; 0xceaa <_Z7set_pllm10si5351_pll+0x186>
    cea8:	80 e0       	ldi	r24, 0x00	; 0
    ceaa:	6c 96       	adiw	r28, 0x1c	; 28
    ceac:	cd bf       	out	0x3d, r28	; 61
    ceae:	de bf       	out	0x3e, r29	; 62
    ceb0:	df 91       	pop	r29
    ceb2:	cf 91       	pop	r28
    ceb4:	08 95       	ret

0000ceb6 <_Z8pll_calcmP13u_si5351_regs>:
    ceb6:	cf 93       	push	r28
    ceb8:	df 93       	push	r29
    ceba:	cd b7       	in	r28, 0x3d	; 61
    cebc:	de b7       	in	r29, 0x3e	; 62
    cebe:	6e 97       	sbiw	r28, 0x1e	; 30
    cec0:	cd bf       	out	0x3d, r28	; 61
    cec2:	de bf       	out	0x3e, r29	; 62
    cec4:	69 8f       	std	Y+25, r22	; 0x19
    cec6:	7a 8f       	std	Y+26, r23	; 0x1a
    cec8:	8b 8f       	std	Y+27, r24	; 0x1b
    ceca:	9c 8f       	std	Y+28, r25	; 0x1c
    cecc:	4d 8f       	std	Y+29, r20	; 0x1d
    cece:	5e 8f       	std	Y+30, r21	; 0x1e
    ced0:	80 91 30 40 	lds	r24, 0x4030	; 0x804030 <_ZL9xtal_freq>
    ced4:	90 91 31 40 	lds	r25, 0x4031	; 0x804031 <_ZL9xtal_freq+0x1>
    ced8:	a0 91 32 40 	lds	r26, 0x4032	; 0x804032 <_ZL9xtal_freq+0x2>
    cedc:	b0 91 33 40 	lds	r27, 0x4033	; 0x804033 <_ZL9xtal_freq+0x3>
    cee0:	89 83       	std	Y+1, r24	; 0x01
    cee2:	9a 83       	std	Y+2, r25	; 0x02
    cee4:	ab 83       	std	Y+3, r26	; 0x03
    cee6:	bc 83       	std	Y+4, r27	; 0x04
    cee8:	89 8d       	ldd	r24, Y+25	; 0x19
    ceea:	9a 8d       	ldd	r25, Y+26	; 0x1a
    ceec:	ab 8d       	ldd	r26, Y+27	; 0x1b
    ceee:	bc 8d       	ldd	r27, Y+28	; 0x1c
    cef0:	29 81       	ldd	r18, Y+1	; 0x01
    cef2:	3a 81       	ldd	r19, Y+2	; 0x02
    cef4:	4b 81       	ldd	r20, Y+3	; 0x03
    cef6:	5c 81       	ldd	r21, Y+4	; 0x04
    cef8:	bc 01       	movw	r22, r24
    cefa:	cd 01       	movw	r24, r26
    cefc:	0e 94 f0 79 	call	0xf3e0	; 0xf3e0 <__udivmodsi4>
    cf00:	da 01       	movw	r26, r20
    cf02:	c9 01       	movw	r24, r18
    cf04:	8d 83       	std	Y+5, r24	; 0x05
    cf06:	9e 83       	std	Y+6, r25	; 0x06
    cf08:	af 83       	std	Y+7, r26	; 0x07
    cf0a:	b8 87       	std	Y+8, r27	; 0x08
    cf0c:	89 8d       	ldd	r24, Y+25	; 0x19
    cf0e:	9a 8d       	ldd	r25, Y+26	; 0x1a
    cf10:	ab 8d       	ldd	r26, Y+27	; 0x1b
    cf12:	bc 8d       	ldd	r27, Y+28	; 0x1c
    cf14:	29 81       	ldd	r18, Y+1	; 0x01
    cf16:	3a 81       	ldd	r19, Y+2	; 0x02
    cf18:	4b 81       	ldd	r20, Y+3	; 0x03
    cf1a:	5c 81       	ldd	r21, Y+4	; 0x04
    cf1c:	bc 01       	movw	r22, r24
    cf1e:	cd 01       	movw	r24, r26
    cf20:	0e 94 f0 79 	call	0xf3e0	; 0xf3e0 <__udivmodsi4>
    cf24:	dc 01       	movw	r26, r24
    cf26:	cb 01       	movw	r24, r22
    cf28:	89 8b       	std	Y+17, r24	; 0x11
    cf2a:	9a 8b       	std	Y+18, r25	; 0x12
    cf2c:	ab 8b       	std	Y+19, r26	; 0x13
    cf2e:	bc 8b       	std	Y+20, r27	; 0x14
    cf30:	89 81       	ldd	r24, Y+1	; 0x01
    cf32:	9a 81       	ldd	r25, Y+2	; 0x02
    cf34:	ab 81       	ldd	r26, Y+3	; 0x03
    cf36:	bc 81       	ldd	r27, Y+4	; 0x04
    cf38:	8d 8b       	std	Y+21, r24	; 0x15
    cf3a:	9e 8b       	std	Y+22, r25	; 0x16
    cf3c:	af 8b       	std	Y+23, r26	; 0x17
    cf3e:	b8 8f       	std	Y+24, r27	; 0x18
    cf40:	9e 01       	movw	r18, r28
    cf42:	2b 5e       	subi	r18, 0xEB	; 235
    cf44:	3f 4f       	sbci	r19, 0xFF	; 255
    cf46:	ce 01       	movw	r24, r28
    cf48:	41 96       	adiw	r24, 0x11	; 17
    cf4a:	b9 01       	movw	r22, r18
    cf4c:	0e 94 41 68 	call	0xd082	; 0xd082 <_Z13reduce_by_gcdPmS_>
    cf50:	89 89       	ldd	r24, Y+17	; 0x11
    cf52:	9a 89       	ldd	r25, Y+18	; 0x12
    cf54:	ab 89       	ldd	r26, Y+19	; 0x13
    cf56:	bc 89       	ldd	r27, Y+20	; 0x14
    cf58:	88 0f       	add	r24, r24
    cf5a:	99 1f       	adc	r25, r25
    cf5c:	aa 1f       	adc	r26, r26
    cf5e:	bb 1f       	adc	r27, r27
    cf60:	88 0f       	add	r24, r24
    cf62:	99 1f       	adc	r25, r25
    cf64:	aa 1f       	adc	r26, r26
    cf66:	bb 1f       	adc	r27, r27
    cf68:	88 0f       	add	r24, r24
    cf6a:	99 1f       	adc	r25, r25
    cf6c:	aa 1f       	adc	r26, r26
    cf6e:	bb 1f       	adc	r27, r27
    cf70:	88 0f       	add	r24, r24
    cf72:	99 1f       	adc	r25, r25
    cf74:	aa 1f       	adc	r26, r26
    cf76:	bb 1f       	adc	r27, r27
    cf78:	88 0f       	add	r24, r24
    cf7a:	99 1f       	adc	r25, r25
    cf7c:	aa 1f       	adc	r26, r26
    cf7e:	bb 1f       	adc	r27, r27
    cf80:	88 0f       	add	r24, r24
    cf82:	99 1f       	adc	r25, r25
    cf84:	aa 1f       	adc	r26, r26
    cf86:	bb 1f       	adc	r27, r27
    cf88:	88 0f       	add	r24, r24
    cf8a:	99 1f       	adc	r25, r25
    cf8c:	aa 1f       	adc	r26, r26
    cf8e:	bb 1f       	adc	r27, r27
    cf90:	89 87       	std	Y+9, r24	; 0x09
    cf92:	9a 87       	std	Y+10, r25	; 0x0a
    cf94:	ab 87       	std	Y+11, r26	; 0x0b
    cf96:	bc 87       	std	Y+12, r27	; 0x0c
    cf98:	2d 89       	ldd	r18, Y+21	; 0x15
    cf9a:	3e 89       	ldd	r19, Y+22	; 0x16
    cf9c:	4f 89       	ldd	r20, Y+23	; 0x17
    cf9e:	58 8d       	ldd	r21, Y+24	; 0x18
    cfa0:	89 85       	ldd	r24, Y+9	; 0x09
    cfa2:	9a 85       	ldd	r25, Y+10	; 0x0a
    cfa4:	ab 85       	ldd	r26, Y+11	; 0x0b
    cfa6:	bc 85       	ldd	r27, Y+12	; 0x0c
    cfa8:	bc 01       	movw	r22, r24
    cfaa:	cd 01       	movw	r24, r26
    cfac:	0e 94 f0 79 	call	0xf3e0	; 0xf3e0 <__udivmodsi4>
    cfb0:	da 01       	movw	r26, r20
    cfb2:	c9 01       	movw	r24, r18
    cfb4:	8d 87       	std	Y+13, r24	; 0x0d
    cfb6:	9e 87       	std	Y+14, r25	; 0x0e
    cfb8:	af 87       	std	Y+15, r26	; 0x0f
    cfba:	b8 8b       	std	Y+16, r27	; 0x10
    cfbc:	8d 81       	ldd	r24, Y+5	; 0x05
    cfbe:	9e 81       	ldd	r25, Y+6	; 0x06
    cfc0:	af 81       	ldd	r26, Y+7	; 0x07
    cfc2:	b8 85       	ldd	r27, Y+8	; 0x08
    cfc4:	88 0f       	add	r24, r24
    cfc6:	99 1f       	adc	r25, r25
    cfc8:	aa 1f       	adc	r26, r26
    cfca:	bb 1f       	adc	r27, r27
    cfcc:	88 0f       	add	r24, r24
    cfce:	99 1f       	adc	r25, r25
    cfd0:	aa 1f       	adc	r26, r26
    cfd2:	bb 1f       	adc	r27, r27
    cfd4:	88 0f       	add	r24, r24
    cfd6:	99 1f       	adc	r25, r25
    cfd8:	aa 1f       	adc	r26, r26
    cfda:	bb 1f       	adc	r27, r27
    cfdc:	88 0f       	add	r24, r24
    cfde:	99 1f       	adc	r25, r25
    cfe0:	aa 1f       	adc	r26, r26
    cfe2:	bb 1f       	adc	r27, r27
    cfe4:	88 0f       	add	r24, r24
    cfe6:	99 1f       	adc	r25, r25
    cfe8:	aa 1f       	adc	r26, r26
    cfea:	bb 1f       	adc	r27, r27
    cfec:	88 0f       	add	r24, r24
    cfee:	99 1f       	adc	r25, r25
    cff0:	aa 1f       	adc	r26, r26
    cff2:	bb 1f       	adc	r27, r27
    cff4:	88 0f       	add	r24, r24
    cff6:	99 1f       	adc	r25, r25
    cff8:	aa 1f       	adc	r26, r26
    cffa:	bb 1f       	adc	r27, r27
    cffc:	9c 01       	movw	r18, r24
    cffe:	ad 01       	movw	r20, r26
    d000:	8d 85       	ldd	r24, Y+13	; 0x0d
    d002:	9e 85       	ldd	r25, Y+14	; 0x0e
    d004:	af 85       	ldd	r26, Y+15	; 0x0f
    d006:	b8 89       	ldd	r27, Y+16	; 0x10
    d008:	82 0f       	add	r24, r18
    d00a:	93 1f       	adc	r25, r19
    d00c:	a4 1f       	adc	r26, r20
    d00e:	b5 1f       	adc	r27, r21
    d010:	92 50       	subi	r25, 0x02	; 2
    d012:	a1 09       	sbc	r26, r1
    d014:	b1 09       	sbc	r27, r1
    d016:	2d 8d       	ldd	r18, Y+29	; 0x1d
    d018:	3e 8d       	ldd	r19, Y+30	; 0x1e
    d01a:	f9 01       	movw	r30, r18
    d01c:	80 83       	st	Z, r24
    d01e:	91 83       	std	Z+1, r25	; 0x01
    d020:	a2 83       	std	Z+2, r26	; 0x02
    d022:	b3 83       	std	Z+3, r27	; 0x03
    d024:	2d 89       	ldd	r18, Y+21	; 0x15
    d026:	3e 89       	ldd	r19, Y+22	; 0x16
    d028:	4f 89       	ldd	r20, Y+23	; 0x17
    d02a:	58 8d       	ldd	r21, Y+24	; 0x18
    d02c:	8d 85       	ldd	r24, Y+13	; 0x0d
    d02e:	9e 85       	ldd	r25, Y+14	; 0x0e
    d030:	af 85       	ldd	r26, Y+15	; 0x0f
    d032:	b8 89       	ldd	r27, Y+16	; 0x10
    d034:	bc 01       	movw	r22, r24
    d036:	cd 01       	movw	r24, r26
    d038:	0e 94 b8 79 	call	0xf370	; 0xf370 <__mulsi3>
    d03c:	9b 01       	movw	r18, r22
    d03e:	ac 01       	movw	r20, r24
    d040:	89 85       	ldd	r24, Y+9	; 0x09
    d042:	9a 85       	ldd	r25, Y+10	; 0x0a
    d044:	ab 85       	ldd	r26, Y+11	; 0x0b
    d046:	bc 85       	ldd	r27, Y+12	; 0x0c
    d048:	82 1b       	sub	r24, r18
    d04a:	93 0b       	sbc	r25, r19
    d04c:	a4 0b       	sbc	r26, r20
    d04e:	b5 0b       	sbc	r27, r21
    d050:	2d 8d       	ldd	r18, Y+29	; 0x1d
    d052:	3e 8d       	ldd	r19, Y+30	; 0x1e
    d054:	f9 01       	movw	r30, r18
    d056:	84 83       	std	Z+4, r24	; 0x04
    d058:	95 83       	std	Z+5, r25	; 0x05
    d05a:	a6 83       	std	Z+6, r26	; 0x06
    d05c:	b7 83       	std	Z+7, r27	; 0x07
    d05e:	8d 89       	ldd	r24, Y+21	; 0x15
    d060:	9e 89       	ldd	r25, Y+22	; 0x16
    d062:	af 89       	ldd	r26, Y+23	; 0x17
    d064:	b8 8d       	ldd	r27, Y+24	; 0x18
    d066:	2d 8d       	ldd	r18, Y+29	; 0x1d
    d068:	3e 8d       	ldd	r19, Y+30	; 0x1e
    d06a:	f9 01       	movw	r30, r18
    d06c:	80 87       	std	Z+8, r24	; 0x08
    d06e:	91 87       	std	Z+9, r25	; 0x09
    d070:	a2 87       	std	Z+10, r26	; 0x0a
    d072:	b3 87       	std	Z+11, r27	; 0x0b
    d074:	80 e0       	ldi	r24, 0x00	; 0
    d076:	6e 96       	adiw	r28, 0x1e	; 30
    d078:	cd bf       	out	0x3d, r28	; 61
    d07a:	de bf       	out	0x3e, r29	; 62
    d07c:	df 91       	pop	r29
    d07e:	cf 91       	pop	r28
    d080:	08 95       	ret

0000d082 <_Z13reduce_by_gcdPmS_>:
    d082:	cf 93       	push	r28
    d084:	df 93       	push	r29
    d086:	cd b7       	in	r28, 0x3d	; 61
    d088:	de b7       	in	r29, 0x3e	; 62
    d08a:	60 97       	sbiw	r28, 0x10	; 16
    d08c:	cd bf       	out	0x3d, r28	; 61
    d08e:	de bf       	out	0x3e, r29	; 62
    d090:	8d 87       	std	Y+13, r24	; 0x0d
    d092:	9e 87       	std	Y+14, r25	; 0x0e
    d094:	6f 87       	std	Y+15, r22	; 0x0f
    d096:	78 8b       	std	Y+16, r23	; 0x10
    d098:	8d 85       	ldd	r24, Y+13	; 0x0d
    d09a:	9e 85       	ldd	r25, Y+14	; 0x0e
    d09c:	fc 01       	movw	r30, r24
    d09e:	80 81       	ld	r24, Z
    d0a0:	91 81       	ldd	r25, Z+1	; 0x01
    d0a2:	a2 81       	ldd	r26, Z+2	; 0x02
    d0a4:	b3 81       	ldd	r27, Z+3	; 0x03
    d0a6:	89 87       	std	Y+9, r24	; 0x09
    d0a8:	9a 87       	std	Y+10, r25	; 0x0a
    d0aa:	ab 87       	std	Y+11, r26	; 0x0b
    d0ac:	bc 87       	std	Y+12, r27	; 0x0c
    d0ae:	8f 85       	ldd	r24, Y+15	; 0x0f
    d0b0:	98 89       	ldd	r25, Y+16	; 0x10
    d0b2:	fc 01       	movw	r30, r24
    d0b4:	80 81       	ld	r24, Z
    d0b6:	91 81       	ldd	r25, Z+1	; 0x01
    d0b8:	a2 81       	ldd	r26, Z+2	; 0x02
    d0ba:	b3 81       	ldd	r27, Z+3	; 0x03
    d0bc:	8d 83       	std	Y+5, r24	; 0x05
    d0be:	9e 83       	std	Y+6, r25	; 0x06
    d0c0:	af 83       	std	Y+7, r26	; 0x07
    d0c2:	b8 87       	std	Y+8, r27	; 0x08
    d0c4:	89 85       	ldd	r24, Y+9	; 0x09
    d0c6:	9a 85       	ldd	r25, Y+10	; 0x0a
    d0c8:	ab 85       	ldd	r26, Y+11	; 0x0b
    d0ca:	bc 85       	ldd	r27, Y+12	; 0x0c
    d0cc:	89 2b       	or	r24, r25
    d0ce:	8a 2b       	or	r24, r26
    d0d0:	8b 2b       	or	r24, r27
    d0d2:	09 f4       	brne	.+2      	; 0xd0d6 <_Z13reduce_by_gcdPmS_+0x54>
    d0d4:	80 c0       	rjmp	.+256    	; 0xd1d6 <_Z13reduce_by_gcdPmS_+0x154>
    d0d6:	8d 81       	ldd	r24, Y+5	; 0x05
    d0d8:	9e 81       	ldd	r25, Y+6	; 0x06
    d0da:	af 81       	ldd	r26, Y+7	; 0x07
    d0dc:	b8 85       	ldd	r27, Y+8	; 0x08
    d0de:	89 2b       	or	r24, r25
    d0e0:	8a 2b       	or	r24, r26
    d0e2:	8b 2b       	or	r24, r27
    d0e4:	09 f4       	brne	.+2      	; 0xd0e8 <_Z13reduce_by_gcdPmS_+0x66>
    d0e6:	77 c0       	rjmp	.+238    	; 0xd1d6 <_Z13reduce_by_gcdPmS_+0x154>
    d0e8:	89 85       	ldd	r24, Y+9	; 0x09
    d0ea:	9a 85       	ldd	r25, Y+10	; 0x0a
    d0ec:	ab 85       	ldd	r26, Y+11	; 0x0b
    d0ee:	bc 85       	ldd	r27, Y+12	; 0x0c
    d0f0:	2d 81       	ldd	r18, Y+5	; 0x05
    d0f2:	3e 81       	ldd	r19, Y+6	; 0x06
    d0f4:	4f 81       	ldd	r20, Y+7	; 0x07
    d0f6:	58 85       	ldd	r21, Y+8	; 0x08
    d0f8:	bc 01       	movw	r22, r24
    d0fa:	cd 01       	movw	r24, r26
    d0fc:	0e 94 f0 79 	call	0xf3e0	; 0xf3e0 <__udivmodsi4>
    d100:	dc 01       	movw	r26, r24
    d102:	cb 01       	movw	r24, r22
    d104:	89 83       	std	Y+1, r24	; 0x01
    d106:	9a 83       	std	Y+2, r25	; 0x02
    d108:	ab 83       	std	Y+3, r26	; 0x03
    d10a:	bc 83       	std	Y+4, r27	; 0x04
    d10c:	89 81       	ldd	r24, Y+1	; 0x01
    d10e:	9a 81       	ldd	r25, Y+2	; 0x02
    d110:	ab 81       	ldd	r26, Y+3	; 0x03
    d112:	bc 81       	ldd	r27, Y+4	; 0x04
    d114:	89 2b       	or	r24, r25
    d116:	8a 2b       	or	r24, r26
    d118:	8b 2b       	or	r24, r27
    d11a:	19 f1       	breq	.+70     	; 0xd162 <_Z13reduce_by_gcdPmS_+0xe0>
    d11c:	8d 81       	ldd	r24, Y+5	; 0x05
    d11e:	9e 81       	ldd	r25, Y+6	; 0x06
    d120:	af 81       	ldd	r26, Y+7	; 0x07
    d122:	b8 85       	ldd	r27, Y+8	; 0x08
    d124:	89 87       	std	Y+9, r24	; 0x09
    d126:	9a 87       	std	Y+10, r25	; 0x0a
    d128:	ab 87       	std	Y+11, r26	; 0x0b
    d12a:	bc 87       	std	Y+12, r27	; 0x0c
    d12c:	89 81       	ldd	r24, Y+1	; 0x01
    d12e:	9a 81       	ldd	r25, Y+2	; 0x02
    d130:	ab 81       	ldd	r26, Y+3	; 0x03
    d132:	bc 81       	ldd	r27, Y+4	; 0x04
    d134:	8d 83       	std	Y+5, r24	; 0x05
    d136:	9e 83       	std	Y+6, r25	; 0x06
    d138:	af 83       	std	Y+7, r26	; 0x07
    d13a:	b8 87       	std	Y+8, r27	; 0x08
    d13c:	89 85       	ldd	r24, Y+9	; 0x09
    d13e:	9a 85       	ldd	r25, Y+10	; 0x0a
    d140:	ab 85       	ldd	r26, Y+11	; 0x0b
    d142:	bc 85       	ldd	r27, Y+12	; 0x0c
    d144:	2d 81       	ldd	r18, Y+5	; 0x05
    d146:	3e 81       	ldd	r19, Y+6	; 0x06
    d148:	4f 81       	ldd	r20, Y+7	; 0x07
    d14a:	58 85       	ldd	r21, Y+8	; 0x08
    d14c:	bc 01       	movw	r22, r24
    d14e:	cd 01       	movw	r24, r26
    d150:	0e 94 f0 79 	call	0xf3e0	; 0xf3e0 <__udivmodsi4>
    d154:	dc 01       	movw	r26, r24
    d156:	cb 01       	movw	r24, r22
    d158:	89 83       	std	Y+1, r24	; 0x01
    d15a:	9a 83       	std	Y+2, r25	; 0x02
    d15c:	ab 83       	std	Y+3, r26	; 0x03
    d15e:	bc 83       	std	Y+4, r27	; 0x04
    d160:	d5 cf       	rjmp	.-86     	; 0xd10c <_Z13reduce_by_gcdPmS_+0x8a>
    d162:	8d 81       	ldd	r24, Y+5	; 0x05
    d164:	9e 81       	ldd	r25, Y+6	; 0x06
    d166:	af 81       	ldd	r26, Y+7	; 0x07
    d168:	b8 85       	ldd	r27, Y+8	; 0x08
    d16a:	02 97       	sbiw	r24, 0x02	; 2
    d16c:	a1 05       	cpc	r26, r1
    d16e:	b1 05       	cpc	r27, r1
    d170:	a0 f1       	brcs	.+104    	; 0xd1da <_Z13reduce_by_gcdPmS_+0x158>
    d172:	8d 85       	ldd	r24, Y+13	; 0x0d
    d174:	9e 85       	ldd	r25, Y+14	; 0x0e
    d176:	fc 01       	movw	r30, r24
    d178:	80 81       	ld	r24, Z
    d17a:	91 81       	ldd	r25, Z+1	; 0x01
    d17c:	a2 81       	ldd	r26, Z+2	; 0x02
    d17e:	b3 81       	ldd	r27, Z+3	; 0x03
    d180:	2d 81       	ldd	r18, Y+5	; 0x05
    d182:	3e 81       	ldd	r19, Y+6	; 0x06
    d184:	4f 81       	ldd	r20, Y+7	; 0x07
    d186:	58 85       	ldd	r21, Y+8	; 0x08
    d188:	bc 01       	movw	r22, r24
    d18a:	cd 01       	movw	r24, r26
    d18c:	0e 94 f0 79 	call	0xf3e0	; 0xf3e0 <__udivmodsi4>
    d190:	da 01       	movw	r26, r20
    d192:	c9 01       	movw	r24, r18
    d194:	2d 85       	ldd	r18, Y+13	; 0x0d
    d196:	3e 85       	ldd	r19, Y+14	; 0x0e
    d198:	f9 01       	movw	r30, r18
    d19a:	80 83       	st	Z, r24
    d19c:	91 83       	std	Z+1, r25	; 0x01
    d19e:	a2 83       	std	Z+2, r26	; 0x02
    d1a0:	b3 83       	std	Z+3, r27	; 0x03
    d1a2:	8f 85       	ldd	r24, Y+15	; 0x0f
    d1a4:	98 89       	ldd	r25, Y+16	; 0x10
    d1a6:	fc 01       	movw	r30, r24
    d1a8:	80 81       	ld	r24, Z
    d1aa:	91 81       	ldd	r25, Z+1	; 0x01
    d1ac:	a2 81       	ldd	r26, Z+2	; 0x02
    d1ae:	b3 81       	ldd	r27, Z+3	; 0x03
    d1b0:	2d 81       	ldd	r18, Y+5	; 0x05
    d1b2:	3e 81       	ldd	r19, Y+6	; 0x06
    d1b4:	4f 81       	ldd	r20, Y+7	; 0x07
    d1b6:	58 85       	ldd	r21, Y+8	; 0x08
    d1b8:	bc 01       	movw	r22, r24
    d1ba:	cd 01       	movw	r24, r26
    d1bc:	0e 94 f0 79 	call	0xf3e0	; 0xf3e0 <__udivmodsi4>
    d1c0:	da 01       	movw	r26, r20
    d1c2:	c9 01       	movw	r24, r18
    d1c4:	2f 85       	ldd	r18, Y+15	; 0x0f
    d1c6:	38 89       	ldd	r19, Y+16	; 0x10
    d1c8:	f9 01       	movw	r30, r18
    d1ca:	80 83       	st	Z, r24
    d1cc:	91 83       	std	Z+1, r25	; 0x01
    d1ce:	a2 83       	std	Z+2, r26	; 0x02
    d1d0:	b3 83       	std	Z+3, r27	; 0x03
    d1d2:	00 00       	nop
    d1d4:	02 c0       	rjmp	.+4      	; 0xd1da <_Z13reduce_by_gcdPmS_+0x158>
    d1d6:	00 00       	nop
    d1d8:	01 c0       	rjmp	.+2      	; 0xd1dc <_Z13reduce_by_gcdPmS_+0x15a>
    d1da:	00 00       	nop
    d1dc:	60 96       	adiw	r28, 0x10	; 16
    d1de:	cd bf       	out	0x3d, r28	; 61
    d1e0:	de bf       	out	0x3e, r29	; 62
    d1e2:	df 91       	pop	r29
    d1e4:	cf 91       	pop	r28
    d1e6:	08 95       	ret

0000d1e8 <_Z15multisynth_calcmP13u_si5351_regsPbS1_>:
    d1e8:	0f 93       	push	r16
    d1ea:	1f 93       	push	r17
    d1ec:	cf 93       	push	r28
    d1ee:	df 93       	push	r29
    d1f0:	cd b7       	in	r28, 0x3d	; 61
    d1f2:	de b7       	in	r29, 0x3e	; 62
    d1f4:	69 97       	sbiw	r28, 0x19	; 25
    d1f6:	cd bf       	out	0x3d, r28	; 61
    d1f8:	de bf       	out	0x3e, r29	; 62
    d1fa:	68 8b       	std	Y+16, r22	; 0x10
    d1fc:	79 8b       	std	Y+17, r23	; 0x11
    d1fe:	8a 8b       	std	Y+18, r24	; 0x12
    d200:	9b 8b       	std	Y+19, r25	; 0x13
    d202:	4c 8b       	std	Y+20, r20	; 0x14
    d204:	5d 8b       	std	Y+21, r21	; 0x15
    d206:	2e 8b       	std	Y+22, r18	; 0x16
    d208:	3f 8b       	std	Y+23, r19	; 0x17
    d20a:	08 8f       	std	Y+24, r16	; 0x18
    d20c:	19 8f       	std	Y+25, r17	; 0x19
    d20e:	19 82       	std	Y+1, r1	; 0x01
    d210:	1a 82       	std	Y+2, r1	; 0x02
    d212:	1b 82       	std	Y+3, r1	; 0x03
    d214:	1c 82       	std	Y+4, r1	; 0x04
    d216:	1d 82       	std	Y+5, r1	; 0x05
    d218:	1e 82       	std	Y+6, r1	; 0x06
    d21a:	1f 82       	std	Y+7, r1	; 0x07
    d21c:	18 86       	std	Y+8, r1	; 0x08
    d21e:	8e 89       	ldd	r24, Y+22	; 0x16
    d220:	9f 89       	ldd	r25, Y+23	; 0x17
    d222:	21 e0       	ldi	r18, 0x01	; 1
    d224:	fc 01       	movw	r30, r24
    d226:	20 83       	st	Z, r18
    d228:	88 89       	ldd	r24, Y+16	; 0x10
    d22a:	99 89       	ldd	r25, Y+17	; 0x11
    d22c:	aa 89       	ldd	r26, Y+18	; 0x12
    d22e:	bb 89       	ldd	r27, Y+19	; 0x13
    d230:	80 38       	cpi	r24, 0x80	; 128
    d232:	91 4d       	sbci	r25, 0xD1	; 209
    d234:	a0 4f       	sbci	r26, 0xF0	; 240
    d236:	b8 40       	sbci	r27, 0x08	; 8
    d238:	d8 f0       	brcs	.+54     	; 0xd270 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x88>
    d23a:	84 e0       	ldi	r24, 0x04	; 4
    d23c:	90 e0       	ldi	r25, 0x00	; 0
    d23e:	a0 e0       	ldi	r26, 0x00	; 0
    d240:	b0 e0       	ldi	r27, 0x00	; 0
    d242:	89 83       	std	Y+1, r24	; 0x01
    d244:	9a 83       	std	Y+2, r25	; 0x02
    d246:	ab 83       	std	Y+3, r26	; 0x03
    d248:	bc 83       	std	Y+4, r27	; 0x04
    d24a:	29 81       	ldd	r18, Y+1	; 0x01
    d24c:	3a 81       	ldd	r19, Y+2	; 0x02
    d24e:	4b 81       	ldd	r20, Y+3	; 0x03
    d250:	5c 81       	ldd	r21, Y+4	; 0x04
    d252:	88 89       	ldd	r24, Y+16	; 0x10
    d254:	99 89       	ldd	r25, Y+17	; 0x11
    d256:	aa 89       	ldd	r26, Y+18	; 0x12
    d258:	bb 89       	ldd	r27, Y+19	; 0x13
    d25a:	bc 01       	movw	r22, r24
    d25c:	cd 01       	movw	r24, r26
    d25e:	0e 94 b8 79 	call	0xf370	; 0xf370 <__mulsi3>
    d262:	dc 01       	movw	r26, r24
    d264:	cb 01       	movw	r24, r22
    d266:	8d 83       	std	Y+5, r24	; 0x05
    d268:	9e 83       	std	Y+6, r25	; 0x06
    d26a:	af 83       	std	Y+7, r26	; 0x07
    d26c:	b8 87       	std	Y+8, r27	; 0x08
    d26e:	6e c0       	rjmp	.+220    	; 0xd34c <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x164>
    d270:	19 86       	std	Y+9, r1	; 0x09
    d272:	1a 86       	std	Y+10, r1	; 0x0a
    d274:	1b 86       	std	Y+11, r1	; 0x0b
    d276:	89 85       	ldd	r24, Y+9	; 0x09
    d278:	88 23       	and	r24, r24
    d27a:	09 f0       	breq	.+2      	; 0xd27e <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x96>
    d27c:	52 c0       	rjmp	.+164    	; 0xd322 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x13a>
    d27e:	8b 85       	ldd	r24, Y+11	; 0x0b
    d280:	28 2f       	mov	r18, r24
    d282:	30 e0       	ldi	r19, 0x00	; 0
    d284:	40 e0       	ldi	r20, 0x00	; 0
    d286:	50 e0       	ldi	r21, 0x00	; 0
    d288:	88 89       	ldd	r24, Y+16	; 0x10
    d28a:	99 89       	ldd	r25, Y+17	; 0x11
    d28c:	aa 89       	ldd	r26, Y+18	; 0x12
    d28e:	bb 89       	ldd	r27, Y+19	; 0x13
    d290:	bc 01       	movw	r22, r24
    d292:	cd 01       	movw	r24, r26
    d294:	0e 94 b8 79 	call	0xf370	; 0xf370 <__mulsi3>
    d298:	9b 01       	movw	r18, r22
    d29a:	ac 01       	movw	r20, r24
    d29c:	80 e0       	ldi	r24, 0x00	; 0
    d29e:	99 ee       	ldi	r25, 0xE9	; 233
    d2a0:	a4 ea       	ldi	r26, 0xA4	; 164
    d2a2:	b5 e3       	ldi	r27, 0x35	; 53
    d2a4:	82 1b       	sub	r24, r18
    d2a6:	93 0b       	sbc	r25, r19
    d2a8:	a4 0b       	sbc	r26, r20
    d2aa:	b5 0b       	sbc	r27, r21
    d2ac:	8c 87       	std	Y+12, r24	; 0x0c
    d2ae:	9d 87       	std	Y+13, r25	; 0x0d
    d2b0:	ae 87       	std	Y+14, r26	; 0x0e
    d2b2:	bf 87       	std	Y+15, r27	; 0x0f
    d2b4:	8b 85       	ldd	r24, Y+11	; 0x0b
    d2b6:	8e 5f       	subi	r24, 0xFE	; 254
    d2b8:	8b 87       	std	Y+11, r24	; 0x0b
    d2ba:	8c 85       	ldd	r24, Y+12	; 0x0c
    d2bc:	9d 85       	ldd	r25, Y+13	; 0x0d
    d2be:	ae 85       	ldd	r26, Y+14	; 0x0e
    d2c0:	bf 85       	ldd	r27, Y+15	; 0x0f
    d2c2:	81 15       	cp	r24, r1
    d2c4:	96 44       	sbci	r25, 0x46	; 70
    d2c6:	a3 4c       	sbci	r26, 0xC3	; 195
    d2c8:	b3 42       	sbci	r27, 0x23	; 35
    d2ca:	40 f1       	brcs	.+80     	; 0xd31c <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x134>
    d2cc:	8c 85       	ldd	r24, Y+12	; 0x0c
    d2ce:	9d 85       	ldd	r25, Y+13	; 0x0d
    d2d0:	ae 85       	ldd	r26, Y+14	; 0x0e
    d2d2:	bf 85       	ldd	r27, Y+15	; 0x0f
    d2d4:	28 89       	ldd	r18, Y+16	; 0x10
    d2d6:	39 89       	ldd	r19, Y+17	; 0x11
    d2d8:	4a 89       	ldd	r20, Y+18	; 0x12
    d2da:	5b 89       	ldd	r21, Y+19	; 0x13
    d2dc:	bc 01       	movw	r22, r24
    d2de:	cd 01       	movw	r24, r26
    d2e0:	0e 94 f0 79 	call	0xf3e0	; 0xf3e0 <__udivmodsi4>
    d2e4:	da 01       	movw	r26, r20
    d2e6:	c9 01       	movw	r24, r18
    d2e8:	8c 87       	std	Y+12, r24	; 0x0c
    d2ea:	9d 87       	std	Y+13, r25	; 0x0d
    d2ec:	ae 87       	std	Y+14, r26	; 0x0e
    d2ee:	bf 87       	std	Y+15, r27	; 0x0f
    d2f0:	8c 85       	ldd	r24, Y+12	; 0x0c
    d2f2:	9d 85       	ldd	r25, Y+13	; 0x0d
    d2f4:	ae 85       	ldd	r26, Y+14	; 0x0e
    d2f6:	bf 85       	ldd	r27, Y+15	; 0x0f
    d2f8:	04 97       	sbiw	r24, 0x04	; 4
    d2fa:	a1 05       	cpc	r26, r1
    d2fc:	b1 05       	cpc	r27, r1
    d2fe:	08 f4       	brcc	.+2      	; 0xd302 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x11a>
    d300:	ba cf       	rjmp	.-140    	; 0xd276 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x8e>
    d302:	81 e0       	ldi	r24, 0x01	; 1
    d304:	89 87       	std	Y+9, r24	; 0x09
    d306:	81 e0       	ldi	r24, 0x01	; 1
    d308:	8a 87       	std	Y+10, r24	; 0x0a
    d30a:	8c 85       	ldd	r24, Y+12	; 0x0c
    d30c:	9d 85       	ldd	r25, Y+13	; 0x0d
    d30e:	ae 85       	ldd	r26, Y+14	; 0x0e
    d310:	bf 85       	ldd	r27, Y+15	; 0x0f
    d312:	89 83       	std	Y+1, r24	; 0x01
    d314:	9a 83       	std	Y+2, r25	; 0x02
    d316:	ab 83       	std	Y+3, r26	; 0x03
    d318:	bc 83       	std	Y+4, r27	; 0x04
    d31a:	ad cf       	rjmp	.-166    	; 0xd276 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x8e>
    d31c:	81 e0       	ldi	r24, 0x01	; 1
    d31e:	89 87       	std	Y+9, r24	; 0x09
    d320:	aa cf       	rjmp	.-172    	; 0xd276 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x8e>
    d322:	8a 85       	ldd	r24, Y+10	; 0x0a
    d324:	88 23       	and	r24, r24
    d326:	91 f0       	breq	.+36     	; 0xd34c <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x164>
    d328:	29 81       	ldd	r18, Y+1	; 0x01
    d32a:	3a 81       	ldd	r19, Y+2	; 0x02
    d32c:	4b 81       	ldd	r20, Y+3	; 0x03
    d32e:	5c 81       	ldd	r21, Y+4	; 0x04
    d330:	88 89       	ldd	r24, Y+16	; 0x10
    d332:	99 89       	ldd	r25, Y+17	; 0x11
    d334:	aa 89       	ldd	r26, Y+18	; 0x12
    d336:	bb 89       	ldd	r27, Y+19	; 0x13
    d338:	bc 01       	movw	r22, r24
    d33a:	cd 01       	movw	r24, r26
    d33c:	0e 94 b8 79 	call	0xf370	; 0xf370 <__mulsi3>
    d340:	dc 01       	movw	r26, r24
    d342:	cb 01       	movw	r24, r22
    d344:	8d 83       	std	Y+5, r24	; 0x05
    d346:	9e 83       	std	Y+6, r25	; 0x06
    d348:	af 83       	std	Y+7, r26	; 0x07
    d34a:	b8 87       	std	Y+8, r27	; 0x08
    d34c:	21 e0       	ldi	r18, 0x01	; 1
    d34e:	89 81       	ldd	r24, Y+1	; 0x01
    d350:	9a 81       	ldd	r25, Y+2	; 0x02
    d352:	ab 81       	ldd	r26, Y+3	; 0x03
    d354:	bc 81       	ldd	r27, Y+4	; 0x04
    d356:	04 97       	sbiw	r24, 0x04	; 4
    d358:	a1 05       	cpc	r26, r1
    d35a:	b1 05       	cpc	r27, r1
    d35c:	09 f0       	breq	.+2      	; 0xd360 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x178>
    d35e:	20 e0       	ldi	r18, 0x00	; 0
    d360:	88 8d       	ldd	r24, Y+24	; 0x18
    d362:	99 8d       	ldd	r25, Y+25	; 0x19
    d364:	fc 01       	movw	r30, r24
    d366:	20 83       	st	Z, r18
    d368:	89 81       	ldd	r24, Y+1	; 0x01
    d36a:	9a 81       	ldd	r25, Y+2	; 0x02
    d36c:	ab 81       	ldd	r26, Y+3	; 0x03
    d36e:	bc 81       	ldd	r27, Y+4	; 0x04
    d370:	88 0f       	add	r24, r24
    d372:	99 1f       	adc	r25, r25
    d374:	aa 1f       	adc	r26, r26
    d376:	bb 1f       	adc	r27, r27
    d378:	88 0f       	add	r24, r24
    d37a:	99 1f       	adc	r25, r25
    d37c:	aa 1f       	adc	r26, r26
    d37e:	bb 1f       	adc	r27, r27
    d380:	88 0f       	add	r24, r24
    d382:	99 1f       	adc	r25, r25
    d384:	aa 1f       	adc	r26, r26
    d386:	bb 1f       	adc	r27, r27
    d388:	88 0f       	add	r24, r24
    d38a:	99 1f       	adc	r25, r25
    d38c:	aa 1f       	adc	r26, r26
    d38e:	bb 1f       	adc	r27, r27
    d390:	88 0f       	add	r24, r24
    d392:	99 1f       	adc	r25, r25
    d394:	aa 1f       	adc	r26, r26
    d396:	bb 1f       	adc	r27, r27
    d398:	88 0f       	add	r24, r24
    d39a:	99 1f       	adc	r25, r25
    d39c:	aa 1f       	adc	r26, r26
    d39e:	bb 1f       	adc	r27, r27
    d3a0:	88 0f       	add	r24, r24
    d3a2:	99 1f       	adc	r25, r25
    d3a4:	aa 1f       	adc	r26, r26
    d3a6:	bb 1f       	adc	r27, r27
    d3a8:	92 50       	subi	r25, 0x02	; 2
    d3aa:	a1 09       	sbc	r26, r1
    d3ac:	b1 09       	sbc	r27, r1
    d3ae:	2c 89       	ldd	r18, Y+20	; 0x14
    d3b0:	3d 89       	ldd	r19, Y+21	; 0x15
    d3b2:	f9 01       	movw	r30, r18
    d3b4:	80 83       	st	Z, r24
    d3b6:	91 83       	std	Z+1, r25	; 0x01
    d3b8:	a2 83       	std	Z+2, r26	; 0x02
    d3ba:	b3 83       	std	Z+3, r27	; 0x03
    d3bc:	8c 89       	ldd	r24, Y+20	; 0x14
    d3be:	9d 89       	ldd	r25, Y+21	; 0x15
    d3c0:	fc 01       	movw	r30, r24
    d3c2:	14 82       	std	Z+4, r1	; 0x04
    d3c4:	15 82       	std	Z+5, r1	; 0x05
    d3c6:	16 82       	std	Z+6, r1	; 0x06
    d3c8:	17 82       	std	Z+7, r1	; 0x07
    d3ca:	2c 89       	ldd	r18, Y+20	; 0x14
    d3cc:	3d 89       	ldd	r19, Y+21	; 0x15
    d3ce:	81 e0       	ldi	r24, 0x01	; 1
    d3d0:	90 e0       	ldi	r25, 0x00	; 0
    d3d2:	a0 e0       	ldi	r26, 0x00	; 0
    d3d4:	b0 e0       	ldi	r27, 0x00	; 0
    d3d6:	f9 01       	movw	r30, r18
    d3d8:	80 87       	std	Z+8, r24	; 0x08
    d3da:	91 87       	std	Z+9, r25	; 0x09
    d3dc:	a2 87       	std	Z+10, r26	; 0x0a
    d3de:	b3 87       	std	Z+11, r27	; 0x0b
    d3e0:	8d 81       	ldd	r24, Y+5	; 0x05
    d3e2:	9e 81       	ldd	r25, Y+6	; 0x06
    d3e4:	af 81       	ldd	r26, Y+7	; 0x07
    d3e6:	b8 85       	ldd	r27, Y+8	; 0x08
    d3e8:	bc 01       	movw	r22, r24
    d3ea:	cd 01       	movw	r24, r26
    d3ec:	69 96       	adiw	r28, 0x19	; 25
    d3ee:	cd bf       	out	0x3d, r28	; 61
    d3f0:	de bf       	out	0x3e, r29	; 62
    d3f2:	df 91       	pop	r29
    d3f4:	cf 91       	pop	r28
    d3f6:	1f 91       	pop	r17
    d3f8:	0f 91       	pop	r16
    d3fa:	08 95       	ret

0000d3fc <_Z19multisynth_estimatemP13u_si5351_regsPbS1_>:
 * Frequency_Hz multisynth_estimate(Frequency_Hz freq_Fout, Union_si5351_regs *reg, bool *int_mode, bool *divBy4)
 *
 * Note: do not call this function with global value freqVCOB == zero
 */
	Frequency_Hz multisynth_estimate(Frequency_Hz freq_Fout, Union_si5351_regs *reg, bool *int_mode, bool *divBy4)
	{
    d3fc:	0f 93       	push	r16
    d3fe:	1f 93       	push	r17
    d400:	cf 93       	push	r28
    d402:	df 93       	push	r29
    d404:	cd b7       	in	r28, 0x3d	; 61
    d406:	de b7       	in	r29, 0x3e	; 62
    d408:	6e 97       	sbiw	r28, 0x1e	; 30
    d40a:	cd bf       	out	0x3d, r28	; 61
    d40c:	de bf       	out	0x3e, r29	; 62
    d40e:	6d 8b       	std	Y+21, r22	; 0x15
    d410:	7e 8b       	std	Y+22, r23	; 0x16
    d412:	8f 8b       	std	Y+23, r24	; 0x17
    d414:	98 8f       	std	Y+24, r25	; 0x18
    d416:	49 8f       	std	Y+25, r20	; 0x19
    d418:	5a 8f       	std	Y+26, r21	; 0x1a
    d41a:	2b 8f       	std	Y+27, r18	; 0x1b
    d41c:	3c 8f       	std	Y+28, r19	; 0x1c
    d41e:	0d 8f       	std	Y+29, r16	; 0x1d
    d420:	1e 8f       	std	Y+30, r17	; 0x1e
				return(0);
			}
#endif  /* DO_BOUNDS_CHECKING */

		/* Determine integer part of feedback equation */
		a = freqVCOB / freq_Fout;
    d422:	80 91 b5 4a 	lds	r24, 0x4AB5	; 0x804ab5 <_ZL8freqVCOB>
    d426:	90 91 b6 4a 	lds	r25, 0x4AB6	; 0x804ab6 <_ZL8freqVCOB+0x1>
    d42a:	a0 91 b7 4a 	lds	r26, 0x4AB7	; 0x804ab7 <_ZL8freqVCOB+0x2>
    d42e:	b0 91 b8 4a 	lds	r27, 0x4AB8	; 0x804ab8 <_ZL8freqVCOB+0x3>
    d432:	2d 89       	ldd	r18, Y+21	; 0x15
    d434:	3e 89       	ldd	r19, Y+22	; 0x16
    d436:	4f 89       	ldd	r20, Y+23	; 0x17
    d438:	58 8d       	ldd	r21, Y+24	; 0x18
    d43a:	bc 01       	movw	r22, r24
    d43c:	cd 01       	movw	r24, r26
    d43e:	0e 94 f0 79 	call	0xf3e0	; 0xf3e0 <__udivmodsi4>
    d442:	da 01       	movw	r26, r20
    d444:	c9 01       	movw	r24, r18
    d446:	89 83       	std	Y+1, r24	; 0x01
    d448:	9a 83       	std	Y+2, r25	; 0x02
    d44a:	ab 83       	std	Y+3, r26	; 0x03
    d44c:	bc 83       	std	Y+4, r27	; 0x04
		b = freqVCOB % freq_Fout;
    d44e:	80 91 b5 4a 	lds	r24, 0x4AB5	; 0x804ab5 <_ZL8freqVCOB>
    d452:	90 91 b6 4a 	lds	r25, 0x4AB6	; 0x804ab6 <_ZL8freqVCOB+0x1>
    d456:	a0 91 b7 4a 	lds	r26, 0x4AB7	; 0x804ab7 <_ZL8freqVCOB+0x2>
    d45a:	b0 91 b8 4a 	lds	r27, 0x4AB8	; 0x804ab8 <_ZL8freqVCOB+0x3>
    d45e:	2d 89       	ldd	r18, Y+21	; 0x15
    d460:	3e 89       	ldd	r19, Y+22	; 0x16
    d462:	4f 89       	ldd	r20, Y+23	; 0x17
    d464:	58 8d       	ldd	r21, Y+24	; 0x18
    d466:	bc 01       	movw	r22, r24
    d468:	cd 01       	movw	r24, r26
    d46a:	0e 94 f0 79 	call	0xf3e0	; 0xf3e0 <__udivmodsi4>
    d46e:	dc 01       	movw	r26, r24
    d470:	cb 01       	movw	r24, r22
    d472:	8d 87       	std	Y+13, r24	; 0x0d
    d474:	9e 87       	std	Y+14, r25	; 0x0e
    d476:	af 87       	std	Y+15, r26	; 0x0f
    d478:	b8 8b       	std	Y+16, r27	; 0x10
		c = freq_Fout;
    d47a:	8d 89       	ldd	r24, Y+21	; 0x15
    d47c:	9e 89       	ldd	r25, Y+22	; 0x16
    d47e:	af 89       	ldd	r26, Y+23	; 0x17
    d480:	b8 8d       	ldd	r27, Y+24	; 0x18
    d482:	89 8b       	std	Y+17, r24	; 0x11
    d484:	9a 8b       	std	Y+18, r25	; 0x12
    d486:	ab 8b       	std	Y+19, r26	; 0x13
    d488:	bc 8b       	std	Y+20, r27	; 0x14
		reduce_by_gcd(&b, &c);  /* prevents overflow conditions and makes results agree with ClockBuilder */
    d48a:	9e 01       	movw	r18, r28
    d48c:	2f 5e       	subi	r18, 0xEF	; 239
    d48e:	3f 4f       	sbci	r19, 0xFF	; 255
    d490:	ce 01       	movw	r24, r28
    d492:	0d 96       	adiw	r24, 0x0d	; 13
    d494:	b9 01       	movw	r22, r18
    d496:	0e 94 41 68 	call	0xd082	; 0xd082 <_Z13reduce_by_gcdPmS_>

		/* Calculate the approximated output frequency given by fOUT = fvco / (a + b/c) */
		freq_Fout = freqVCOB;
    d49a:	80 91 b5 4a 	lds	r24, 0x4AB5	; 0x804ab5 <_ZL8freqVCOB>
    d49e:	90 91 b6 4a 	lds	r25, 0x4AB6	; 0x804ab6 <_ZL8freqVCOB+0x1>
    d4a2:	a0 91 b7 4a 	lds	r26, 0x4AB7	; 0x804ab7 <_ZL8freqVCOB+0x2>
    d4a6:	b0 91 b8 4a 	lds	r27, 0x4AB8	; 0x804ab8 <_ZL8freqVCOB+0x3>
    d4aa:	8d 8b       	std	Y+21, r24	; 0x15
    d4ac:	9e 8b       	std	Y+22, r25	; 0x16
    d4ae:	af 8b       	std	Y+23, r26	; 0x17
    d4b0:	b8 8f       	std	Y+24, r27	; 0x18
		freq_Fout /= (a * c + b);
    d4b2:	29 89       	ldd	r18, Y+17	; 0x11
    d4b4:	3a 89       	ldd	r19, Y+18	; 0x12
    d4b6:	4b 89       	ldd	r20, Y+19	; 0x13
    d4b8:	5c 89       	ldd	r21, Y+20	; 0x14
    d4ba:	89 81       	ldd	r24, Y+1	; 0x01
    d4bc:	9a 81       	ldd	r25, Y+2	; 0x02
    d4be:	ab 81       	ldd	r26, Y+3	; 0x03
    d4c0:	bc 81       	ldd	r27, Y+4	; 0x04
    d4c2:	bc 01       	movw	r22, r24
    d4c4:	cd 01       	movw	r24, r26
    d4c6:	0e 94 b8 79 	call	0xf370	; 0xf370 <__mulsi3>
    d4ca:	9b 01       	movw	r18, r22
    d4cc:	ac 01       	movw	r20, r24
    d4ce:	8d 85       	ldd	r24, Y+13	; 0x0d
    d4d0:	9e 85       	ldd	r25, Y+14	; 0x0e
    d4d2:	af 85       	ldd	r26, Y+15	; 0x0f
    d4d4:	b8 89       	ldd	r27, Y+16	; 0x10
    d4d6:	28 0f       	add	r18, r24
    d4d8:	39 1f       	adc	r19, r25
    d4da:	4a 1f       	adc	r20, r26
    d4dc:	5b 1f       	adc	r21, r27
    d4de:	8d 89       	ldd	r24, Y+21	; 0x15
    d4e0:	9e 89       	ldd	r25, Y+22	; 0x16
    d4e2:	af 89       	ldd	r26, Y+23	; 0x17
    d4e4:	b8 8d       	ldd	r27, Y+24	; 0x18
    d4e6:	bc 01       	movw	r22, r24
    d4e8:	cd 01       	movw	r24, r26
    d4ea:	0e 94 f0 79 	call	0xf3e0	; 0xf3e0 <__udivmodsi4>
    d4ee:	da 01       	movw	r26, r20
    d4f0:	c9 01       	movw	r24, r18
    d4f2:	8d 8b       	std	Y+21, r24	; 0x15
    d4f4:	9e 8b       	std	Y+22, r25	; 0x16
    d4f6:	af 8b       	std	Y+23, r26	; 0x17
    d4f8:	b8 8f       	std	Y+24, r27	; 0x18
		freq_Fout *= c;
    d4fa:	89 89       	ldd	r24, Y+17	; 0x11
    d4fc:	9a 89       	ldd	r25, Y+18	; 0x12
    d4fe:	ab 89       	ldd	r26, Y+19	; 0x13
    d500:	bc 89       	ldd	r27, Y+20	; 0x14
    d502:	2d 89       	ldd	r18, Y+21	; 0x15
    d504:	3e 89       	ldd	r19, Y+22	; 0x16
    d506:	4f 89       	ldd	r20, Y+23	; 0x17
    d508:	58 8d       	ldd	r21, Y+24	; 0x18
    d50a:	bc 01       	movw	r22, r24
    d50c:	cd 01       	movw	r24, r26
    d50e:	0e 94 b8 79 	call	0xf370	; 0xf370 <__mulsi3>
    d512:	dc 01       	movw	r26, r24
    d514:	cb 01       	movw	r24, r22
    d516:	8d 8b       	std	Y+21, r24	; 0x15
    d518:	9e 8b       	std	Y+22, r25	; 0x16
    d51a:	af 8b       	std	Y+23, r26	; 0x17
    d51c:	b8 8f       	std	Y+24, r27	; 0x18

		*int_mode = (b == 0) && !(a % 2);
    d51e:	8d 85       	ldd	r24, Y+13	; 0x0d
    d520:	9e 85       	ldd	r25, Y+14	; 0x0e
    d522:	af 85       	ldd	r26, Y+15	; 0x0f
    d524:	b8 89       	ldd	r27, Y+16	; 0x10
    d526:	89 2b       	or	r24, r25
    d528:	8a 2b       	or	r24, r26
    d52a:	8b 2b       	or	r24, r27
    d52c:	71 f4       	brne	.+28     	; 0xd54a <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x14e>
    d52e:	89 81       	ldd	r24, Y+1	; 0x01
    d530:	9a 81       	ldd	r25, Y+2	; 0x02
    d532:	ab 81       	ldd	r26, Y+3	; 0x03
    d534:	bc 81       	ldd	r27, Y+4	; 0x04
    d536:	81 70       	andi	r24, 0x01	; 1
    d538:	99 27       	eor	r25, r25
    d53a:	aa 27       	eor	r26, r26
    d53c:	bb 27       	eor	r27, r27
    d53e:	89 2b       	or	r24, r25
    d540:	8a 2b       	or	r24, r26
    d542:	8b 2b       	or	r24, r27
    d544:	11 f4       	brne	.+4      	; 0xd54a <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x14e>
    d546:	21 e0       	ldi	r18, 0x01	; 1
    d548:	01 c0       	rjmp	.+2      	; 0xd54c <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x150>
    d54a:	20 e0       	ldi	r18, 0x00	; 0
    d54c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    d54e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    d550:	fc 01       	movw	r30, r24
    d552:	20 83       	st	Z, r18
		*divBy4 = (a == 4) && *int_mode;
    d554:	89 81       	ldd	r24, Y+1	; 0x01
    d556:	9a 81       	ldd	r25, Y+2	; 0x02
    d558:	ab 81       	ldd	r26, Y+3	; 0x03
    d55a:	bc 81       	ldd	r27, Y+4	; 0x04
    d55c:	04 97       	sbiw	r24, 0x04	; 4
    d55e:	a1 05       	cpc	r26, r1
    d560:	b1 05       	cpc	r27, r1
    d562:	41 f4       	brne	.+16     	; 0xd574 <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x178>
    d564:	8b 8d       	ldd	r24, Y+27	; 0x1b
    d566:	9c 8d       	ldd	r25, Y+28	; 0x1c
    d568:	fc 01       	movw	r30, r24
    d56a:	80 81       	ld	r24, Z
    d56c:	88 23       	and	r24, r24
    d56e:	11 f0       	breq	.+4      	; 0xd574 <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x178>
    d570:	21 e0       	ldi	r18, 0x01	; 1
    d572:	01 c0       	rjmp	.+2      	; 0xd576 <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x17a>
    d574:	20 e0       	ldi	r18, 0x00	; 0
    d576:	8d 8d       	ldd	r24, Y+29	; 0x1d
    d578:	9e 8d       	ldd	r25, Y+30	; 0x1e
    d57a:	fc 01       	movw	r30, r24
    d57c:	20 83       	st	Z, r18

		/* Calculate parameters */
		if(*divBy4)
    d57e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    d580:	9e 8d       	ldd	r25, Y+30	; 0x1e
    d582:	fc 01       	movw	r30, r24
    d584:	80 81       	ld	r24, Z
    d586:	88 23       	and	r24, r24
    d588:	d1 f0       	breq	.+52     	; 0xd5be <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x1c2>
		{
			reg->ms.p1 = 0;
    d58a:	89 8d       	ldd	r24, Y+25	; 0x19
    d58c:	9a 8d       	ldd	r25, Y+26	; 0x1a
    d58e:	fc 01       	movw	r30, r24
    d590:	10 82       	st	Z, r1
    d592:	11 82       	std	Z+1, r1	; 0x01
    d594:	12 82       	std	Z+2, r1	; 0x02
    d596:	13 82       	std	Z+3, r1	; 0x03
			reg->ms.p2 = 0;
    d598:	89 8d       	ldd	r24, Y+25	; 0x19
    d59a:	9a 8d       	ldd	r25, Y+26	; 0x1a
    d59c:	fc 01       	movw	r30, r24
    d59e:	14 82       	std	Z+4, r1	; 0x04
    d5a0:	15 82       	std	Z+5, r1	; 0x05
    d5a2:	16 82       	std	Z+6, r1	; 0x06
    d5a4:	17 82       	std	Z+7, r1	; 0x07
			reg->ms.p3 = 1;
    d5a6:	29 8d       	ldd	r18, Y+25	; 0x19
    d5a8:	3a 8d       	ldd	r19, Y+26	; 0x1a
    d5aa:	81 e0       	ldi	r24, 0x01	; 1
    d5ac:	90 e0       	ldi	r25, 0x00	; 0
    d5ae:	a0 e0       	ldi	r26, 0x00	; 0
    d5b0:	b0 e0       	ldi	r27, 0x00	; 0
    d5b2:	f9 01       	movw	r30, r18
    d5b4:	80 87       	std	Z+8, r24	; 0x08
    d5b6:	91 87       	std	Z+9, r25	; 0x09
    d5b8:	a2 87       	std	Z+10, r26	; 0x0a
    d5ba:	b3 87       	std	Z+11, r27	; 0x0b
    d5bc:	92 c0       	rjmp	.+292    	; 0xd6e2 <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x2e6>
		}
		else
		{
			uint32_t bx128 = b << 7;
    d5be:	8d 85       	ldd	r24, Y+13	; 0x0d
    d5c0:	9e 85       	ldd	r25, Y+14	; 0x0e
    d5c2:	af 85       	ldd	r26, Y+15	; 0x0f
    d5c4:	b8 89       	ldd	r27, Y+16	; 0x10
    d5c6:	88 0f       	add	r24, r24
    d5c8:	99 1f       	adc	r25, r25
    d5ca:	aa 1f       	adc	r26, r26
    d5cc:	bb 1f       	adc	r27, r27
    d5ce:	88 0f       	add	r24, r24
    d5d0:	99 1f       	adc	r25, r25
    d5d2:	aa 1f       	adc	r26, r26
    d5d4:	bb 1f       	adc	r27, r27
    d5d6:	88 0f       	add	r24, r24
    d5d8:	99 1f       	adc	r25, r25
    d5da:	aa 1f       	adc	r26, r26
    d5dc:	bb 1f       	adc	r27, r27
    d5de:	88 0f       	add	r24, r24
    d5e0:	99 1f       	adc	r25, r25
    d5e2:	aa 1f       	adc	r26, r26
    d5e4:	bb 1f       	adc	r27, r27
    d5e6:	88 0f       	add	r24, r24
    d5e8:	99 1f       	adc	r25, r25
    d5ea:	aa 1f       	adc	r26, r26
    d5ec:	bb 1f       	adc	r27, r27
    d5ee:	88 0f       	add	r24, r24
    d5f0:	99 1f       	adc	r25, r25
    d5f2:	aa 1f       	adc	r26, r26
    d5f4:	bb 1f       	adc	r27, r27
    d5f6:	88 0f       	add	r24, r24
    d5f8:	99 1f       	adc	r25, r25
    d5fa:	aa 1f       	adc	r26, r26
    d5fc:	bb 1f       	adc	r27, r27
    d5fe:	8d 83       	std	Y+5, r24	; 0x05
    d600:	9e 83       	std	Y+6, r25	; 0x06
    d602:	af 83       	std	Y+7, r26	; 0x07
    d604:	b8 87       	std	Y+8, r27	; 0x08
			uint32_t bx128overc = bx128 / c;
    d606:	29 89       	ldd	r18, Y+17	; 0x11
    d608:	3a 89       	ldd	r19, Y+18	; 0x12
    d60a:	4b 89       	ldd	r20, Y+19	; 0x13
    d60c:	5c 89       	ldd	r21, Y+20	; 0x14
    d60e:	8d 81       	ldd	r24, Y+5	; 0x05
    d610:	9e 81       	ldd	r25, Y+6	; 0x06
    d612:	af 81       	ldd	r26, Y+7	; 0x07
    d614:	b8 85       	ldd	r27, Y+8	; 0x08
    d616:	bc 01       	movw	r22, r24
    d618:	cd 01       	movw	r24, r26
    d61a:	0e 94 f0 79 	call	0xf3e0	; 0xf3e0 <__udivmodsi4>
    d61e:	da 01       	movw	r26, r20
    d620:	c9 01       	movw	r24, r18
    d622:	89 87       	std	Y+9, r24	; 0x09
    d624:	9a 87       	std	Y+10, r25	; 0x0a
    d626:	ab 87       	std	Y+11, r26	; 0x0b
    d628:	bc 87       	std	Y+12, r27	; 0x0c
			reg->ms.p1 = (uint32_t)((a << 7) + bx128overc) - 512;   /* 128 * a + floor((128 * b) / c) - 512 */
    d62a:	89 81       	ldd	r24, Y+1	; 0x01
    d62c:	9a 81       	ldd	r25, Y+2	; 0x02
    d62e:	ab 81       	ldd	r26, Y+3	; 0x03
    d630:	bc 81       	ldd	r27, Y+4	; 0x04
    d632:	88 0f       	add	r24, r24
    d634:	99 1f       	adc	r25, r25
    d636:	aa 1f       	adc	r26, r26
    d638:	bb 1f       	adc	r27, r27
    d63a:	88 0f       	add	r24, r24
    d63c:	99 1f       	adc	r25, r25
    d63e:	aa 1f       	adc	r26, r26
    d640:	bb 1f       	adc	r27, r27
    d642:	88 0f       	add	r24, r24
    d644:	99 1f       	adc	r25, r25
    d646:	aa 1f       	adc	r26, r26
    d648:	bb 1f       	adc	r27, r27
    d64a:	88 0f       	add	r24, r24
    d64c:	99 1f       	adc	r25, r25
    d64e:	aa 1f       	adc	r26, r26
    d650:	bb 1f       	adc	r27, r27
    d652:	88 0f       	add	r24, r24
    d654:	99 1f       	adc	r25, r25
    d656:	aa 1f       	adc	r26, r26
    d658:	bb 1f       	adc	r27, r27
    d65a:	88 0f       	add	r24, r24
    d65c:	99 1f       	adc	r25, r25
    d65e:	aa 1f       	adc	r26, r26
    d660:	bb 1f       	adc	r27, r27
    d662:	88 0f       	add	r24, r24
    d664:	99 1f       	adc	r25, r25
    d666:	aa 1f       	adc	r26, r26
    d668:	bb 1f       	adc	r27, r27
    d66a:	9c 01       	movw	r18, r24
    d66c:	ad 01       	movw	r20, r26
    d66e:	89 85       	ldd	r24, Y+9	; 0x09
    d670:	9a 85       	ldd	r25, Y+10	; 0x0a
    d672:	ab 85       	ldd	r26, Y+11	; 0x0b
    d674:	bc 85       	ldd	r27, Y+12	; 0x0c
    d676:	82 0f       	add	r24, r18
    d678:	93 1f       	adc	r25, r19
    d67a:	a4 1f       	adc	r26, r20
    d67c:	b5 1f       	adc	r27, r21
    d67e:	92 50       	subi	r25, 0x02	; 2
    d680:	a1 09       	sbc	r26, r1
    d682:	b1 09       	sbc	r27, r1
    d684:	29 8d       	ldd	r18, Y+25	; 0x19
    d686:	3a 8d       	ldd	r19, Y+26	; 0x1a
    d688:	f9 01       	movw	r30, r18
    d68a:	80 83       	st	Z, r24
    d68c:	91 83       	std	Z+1, r25	; 0x01
    d68e:	a2 83       	std	Z+2, r26	; 0x02
    d690:	b3 83       	std	Z+3, r27	; 0x03
			reg->ms.p2 = (uint32_t)bx128 - (c * bx128overc);        /* 128 * b - c * floor((128 * b) / c) */
    d692:	29 89       	ldd	r18, Y+17	; 0x11
    d694:	3a 89       	ldd	r19, Y+18	; 0x12
    d696:	4b 89       	ldd	r20, Y+19	; 0x13
    d698:	5c 89       	ldd	r21, Y+20	; 0x14
    d69a:	89 85       	ldd	r24, Y+9	; 0x09
    d69c:	9a 85       	ldd	r25, Y+10	; 0x0a
    d69e:	ab 85       	ldd	r26, Y+11	; 0x0b
    d6a0:	bc 85       	ldd	r27, Y+12	; 0x0c
    d6a2:	bc 01       	movw	r22, r24
    d6a4:	cd 01       	movw	r24, r26
    d6a6:	0e 94 b8 79 	call	0xf370	; 0xf370 <__mulsi3>
    d6aa:	9b 01       	movw	r18, r22
    d6ac:	ac 01       	movw	r20, r24
    d6ae:	8d 81       	ldd	r24, Y+5	; 0x05
    d6b0:	9e 81       	ldd	r25, Y+6	; 0x06
    d6b2:	af 81       	ldd	r26, Y+7	; 0x07
    d6b4:	b8 85       	ldd	r27, Y+8	; 0x08
    d6b6:	82 1b       	sub	r24, r18
    d6b8:	93 0b       	sbc	r25, r19
    d6ba:	a4 0b       	sbc	r26, r20
    d6bc:	b5 0b       	sbc	r27, r21
    d6be:	29 8d       	ldd	r18, Y+25	; 0x19
    d6c0:	3a 8d       	ldd	r19, Y+26	; 0x1a
    d6c2:	f9 01       	movw	r30, r18
    d6c4:	84 83       	std	Z+4, r24	; 0x04
    d6c6:	95 83       	std	Z+5, r25	; 0x05
    d6c8:	a6 83       	std	Z+6, r26	; 0x06
    d6ca:	b7 83       	std	Z+7, r27	; 0x07
			reg->ms.p3 = c;
    d6cc:	89 89       	ldd	r24, Y+17	; 0x11
    d6ce:	9a 89       	ldd	r25, Y+18	; 0x12
    d6d0:	ab 89       	ldd	r26, Y+19	; 0x13
    d6d2:	bc 89       	ldd	r27, Y+20	; 0x14
    d6d4:	29 8d       	ldd	r18, Y+25	; 0x19
    d6d6:	3a 8d       	ldd	r19, Y+26	; 0x1a
    d6d8:	f9 01       	movw	r30, r18
    d6da:	80 87       	std	Z+8, r24	; 0x08
    d6dc:	91 87       	std	Z+9, r25	; 0x09
    d6de:	a2 87       	std	Z+10, r26	; 0x0a
    d6e0:	b3 87       	std	Z+11, r27	; 0x0b
		}

		return(freq_Fout);
    d6e2:	8d 89       	ldd	r24, Y+21	; 0x15
    d6e4:	9e 89       	ldd	r25, Y+22	; 0x16
    d6e6:	af 89       	ldd	r26, Y+23	; 0x17
    d6e8:	b8 8d       	ldd	r27, Y+24	; 0x18
	}
    d6ea:	bc 01       	movw	r22, r24
    d6ec:	cd 01       	movw	r24, r26
    d6ee:	6e 96       	adiw	r28, 0x1e	; 30
    d6f0:	cd bf       	out	0x3d, r28	; 61
    d6f2:	de bf       	out	0x3e, r29	; 62
    d6f4:	df 91       	pop	r29
    d6f6:	cf 91       	pop	r28
    d6f8:	1f 91       	pop	r17
    d6fa:	0f 91       	pop	r16
    d6fc:	08 95       	ret

0000d6fe <_Z17si5351_write_bulkhPhh>:


	bool si5351_write_bulk(uint8_t regAddr, uint8_t *data, uint8_t bytes)
	{
    d6fe:	cf 93       	push	r28
    d700:	df 93       	push	r29
    d702:	cd b7       	in	r28, 0x3d	; 61
    d704:	de b7       	in	r29, 0x3e	; 62
    d706:	26 97       	sbiw	r28, 0x06	; 6
    d708:	cd bf       	out	0x3d, r28	; 61
    d70a:	de bf       	out	0x3e, r29	; 62
    d70c:	8b 83       	std	Y+3, r24	; 0x03
    d70e:	6c 83       	std	Y+4, r22	; 0x04
    d710:	7d 83       	std	Y+5, r23	; 0x05
    d712:	4e 83       	std	Y+6, r20	; 0x06
		uint8_t tries = 10;
    d714:	8a e0       	ldi	r24, 0x0A	; 10
    d716:	89 83       	std	Y+1, r24	; 0x01
		bool fail;
		while(tries-- && (fail = I2C_1_SendData(SI5351_I2C_SLAVE_ADDR, regAddr, data, bytes) != bytes));
    d718:	89 81       	ldd	r24, Y+1	; 0x01
    d71a:	9f ef       	ldi	r25, 0xFF	; 255
    d71c:	98 0f       	add	r25, r24
    d71e:	99 83       	std	Y+1, r25	; 0x01
    d720:	88 23       	and	r24, r24
    d722:	a1 f0       	breq	.+40     	; 0xd74c <_Z17si5351_write_bulkhPhh+0x4e>
    d724:	8c 81       	ldd	r24, Y+4	; 0x04
    d726:	9d 81       	ldd	r25, Y+5	; 0x05
    d728:	2e 81       	ldd	r18, Y+6	; 0x06
    d72a:	ac 01       	movw	r20, r24
    d72c:	6b 81       	ldd	r22, Y+3	; 0x03
    d72e:	80 ec       	ldi	r24, 0xC0	; 192
    d730:	0e 94 8f 51 	call	0xa31e	; 0xa31e <I2C_1_SendData>
    d734:	28 2f       	mov	r18, r24
    d736:	81 e0       	ldi	r24, 0x01	; 1
    d738:	9e 81       	ldd	r25, Y+6	; 0x06
    d73a:	29 17       	cp	r18, r25
    d73c:	09 f4       	brne	.+2      	; 0xd740 <_Z17si5351_write_bulkhPhh+0x42>
    d73e:	80 e0       	ldi	r24, 0x00	; 0
    d740:	8a 83       	std	Y+2, r24	; 0x02
    d742:	8a 81       	ldd	r24, Y+2	; 0x02
    d744:	88 23       	and	r24, r24
    d746:	11 f0       	breq	.+4      	; 0xd74c <_Z17si5351_write_bulkhPhh+0x4e>
    d748:	81 e0       	ldi	r24, 0x01	; 1
    d74a:	01 c0       	rjmp	.+2      	; 0xd74e <_Z17si5351_write_bulkhPhh+0x50>
    d74c:	80 e0       	ldi	r24, 0x00	; 0
    d74e:	88 23       	and	r24, r24
    d750:	09 f0       	breq	.+2      	; 0xd754 <_Z17si5351_write_bulkhPhh+0x56>
    d752:	e2 cf       	rjmp	.-60     	; 0xd718 <_Z17si5351_write_bulkhPhh+0x1a>
		return(fail);
    d754:	8a 81       	ldd	r24, Y+2	; 0x02
	}
    d756:	26 96       	adiw	r28, 0x06	; 6
    d758:	cd bf       	out	0x3d, r28	; 61
    d75a:	de bf       	out	0x3e, r29	; 62
    d75c:	df 91       	pop	r29
    d75e:	cf 91       	pop	r28
    d760:	08 95       	ret

0000d762 <_Z16si5351_read_bulkhPhh>:

	bool si5351_read_bulk(uint8_t regAddr, uint8_t *data, uint8_t bytes)
	{
    d762:	cf 93       	push	r28
    d764:	df 93       	push	r29
    d766:	cd b7       	in	r28, 0x3d	; 61
    d768:	de b7       	in	r29, 0x3e	; 62
    d76a:	26 97       	sbiw	r28, 0x06	; 6
    d76c:	cd bf       	out	0x3d, r28	; 61
    d76e:	de bf       	out	0x3e, r29	; 62
    d770:	8b 83       	std	Y+3, r24	; 0x03
    d772:	6c 83       	std	Y+4, r22	; 0x04
    d774:	7d 83       	std	Y+5, r23	; 0x05
    d776:	4e 83       	std	Y+6, r20	; 0x06
		uint8_t tries = 10;
    d778:	8a e0       	ldi	r24, 0x0A	; 10
    d77a:	89 83       	std	Y+1, r24	; 0x01
		bool fail;
		while(tries-- && (fail = I2C_1_GetData(SI5351_I2C_SLAVE_ADDR, regAddr, data, bytes) != bytes));
    d77c:	89 81       	ldd	r24, Y+1	; 0x01
    d77e:	9f ef       	ldi	r25, 0xFF	; 255
    d780:	98 0f       	add	r25, r24
    d782:	99 83       	std	Y+1, r25	; 0x01
    d784:	88 23       	and	r24, r24
    d786:	a1 f0       	breq	.+40     	; 0xd7b0 <_Z16si5351_read_bulkhPhh+0x4e>
    d788:	8c 81       	ldd	r24, Y+4	; 0x04
    d78a:	9d 81       	ldd	r25, Y+5	; 0x05
    d78c:	2e 81       	ldd	r18, Y+6	; 0x06
    d78e:	ac 01       	movw	r20, r24
    d790:	6b 81       	ldd	r22, Y+3	; 0x03
    d792:	80 ec       	ldi	r24, 0xC0	; 192
    d794:	0e 94 f8 51 	call	0xa3f0	; 0xa3f0 <I2C_1_GetData>
    d798:	28 2f       	mov	r18, r24
    d79a:	81 e0       	ldi	r24, 0x01	; 1
    d79c:	9e 81       	ldd	r25, Y+6	; 0x06
    d79e:	29 17       	cp	r18, r25
    d7a0:	09 f4       	brne	.+2      	; 0xd7a4 <_Z16si5351_read_bulkhPhh+0x42>
    d7a2:	80 e0       	ldi	r24, 0x00	; 0
    d7a4:	8a 83       	std	Y+2, r24	; 0x02
    d7a6:	8a 81       	ldd	r24, Y+2	; 0x02
    d7a8:	88 23       	and	r24, r24
    d7aa:	11 f0       	breq	.+4      	; 0xd7b0 <_Z16si5351_read_bulkhPhh+0x4e>
    d7ac:	81 e0       	ldi	r24, 0x01	; 1
    d7ae:	01 c0       	rjmp	.+2      	; 0xd7b2 <_Z16si5351_read_bulkhPhh+0x50>
    d7b0:	80 e0       	ldi	r24, 0x00	; 0
    d7b2:	88 23       	and	r24, r24
    d7b4:	09 f0       	breq	.+2      	; 0xd7b8 <_Z16si5351_read_bulkhPhh+0x56>
    d7b6:	e2 cf       	rjmp	.-60     	; 0xd77c <_Z16si5351_read_bulkhPhh+0x1a>
		return(fail);
    d7b8:	8a 81       	ldd	r24, Y+2	; 0x02
	}
    d7ba:	26 96       	adiw	r28, 0x06	; 6
    d7bc:	cd bf       	out	0x3d, r28	; 61
    d7be:	de bf       	out	0x3e, r29	; 62
    d7c0:	df 91       	pop	r29
    d7c2:	cf 91       	pop	r28
    d7c4:	08 95       	ret

0000d7c6 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll>:
 *
 * Set the desired PLL source for a multisynth.
 *
 */
	bool set_multisynth_registers_source(Si5351_clock clk, Si5351_pll pll)
	{
    d7c6:	cf 93       	push	r28
    d7c8:	df 93       	push	r29
    d7ca:	cd b7       	in	r28, 0x3d	; 61
    d7cc:	de b7       	in	r29, 0x3e	; 62
    d7ce:	25 97       	sbiw	r28, 0x05	; 5
    d7d0:	cd bf       	out	0x3d, r28	; 61
    d7d2:	de bf       	out	0x3e, r29	; 62
    d7d4:	8c 83       	std	Y+4, r24	; 0x04
    d7d6:	6d 83       	std	Y+5, r22	; 0x05
		uint8_t reg_val;
		uint8_t data[2];
		
		if(si5351_read_bulk(SI5351_CLK0_CTRL + (uint8_t)clk, data, 1))
    d7d8:	8c 81       	ldd	r24, Y+4	; 0x04
    d7da:	20 e1       	ldi	r18, 0x10	; 16
    d7dc:	28 0f       	add	r18, r24
    d7de:	ce 01       	movw	r24, r28
    d7e0:	02 96       	adiw	r24, 0x02	; 2
    d7e2:	41 e0       	ldi	r20, 0x01	; 1
    d7e4:	bc 01       	movw	r22, r24
    d7e6:	82 2f       	mov	r24, r18
    d7e8:	0e 94 b1 6b 	call	0xd762	; 0xd762 <_Z16si5351_read_bulkhPhh>
    d7ec:	88 23       	and	r24, r24
    d7ee:	11 f0       	breq	.+4      	; 0xd7f4 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x2e>
		{
			return(true);
    d7f0:	81 e0       	ldi	r24, 0x01	; 1
    d7f2:	20 c0       	rjmp	.+64     	; 0xd834 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x6e>
		}
		
		reg_val = data[0];
    d7f4:	8a 81       	ldd	r24, Y+2	; 0x02
    d7f6:	89 83       	std	Y+1, r24	; 0x01

		if(pll == SI5351_PLLA)
    d7f8:	8d 81       	ldd	r24, Y+5	; 0x05
    d7fa:	81 30       	cpi	r24, 0x01	; 1
    d7fc:	21 f4       	brne	.+8      	; 0xd806 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x40>
		{
			reg_val &= ~(SI5351_CLK_PLL_SELECT);
    d7fe:	89 81       	ldd	r24, Y+1	; 0x01
    d800:	8f 7d       	andi	r24, 0xDF	; 223
    d802:	89 83       	std	Y+1, r24	; 0x01
    d804:	06 c0       	rjmp	.+12     	; 0xd812 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x4c>
		}
		else if(pll == SI5351_PLLB)
    d806:	8d 81       	ldd	r24, Y+5	; 0x05
    d808:	82 30       	cpi	r24, 0x02	; 2
    d80a:	19 f4       	brne	.+6      	; 0xd812 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x4c>
		{
			reg_val |= SI5351_CLK_PLL_SELECT;
    d80c:	89 81       	ldd	r24, Y+1	; 0x01
    d80e:	80 62       	ori	r24, 0x20	; 32
    d810:	89 83       	std	Y+1, r24	; 0x01
		}

		data[0] = reg_val;
    d812:	89 81       	ldd	r24, Y+1	; 0x01
    d814:	8a 83       	std	Y+2, r24	; 0x02
		if(si5351_write_bulk(SI5351_CLK0_CTRL + (uint8_t)clk, data, 1))
    d816:	8c 81       	ldd	r24, Y+4	; 0x04
    d818:	20 e1       	ldi	r18, 0x10	; 16
    d81a:	28 0f       	add	r18, r24
    d81c:	ce 01       	movw	r24, r28
    d81e:	02 96       	adiw	r24, 0x02	; 2
    d820:	41 e0       	ldi	r20, 0x01	; 1
    d822:	bc 01       	movw	r22, r24
    d824:	82 2f       	mov	r24, r18
    d826:	0e 94 7f 6b 	call	0xd6fe	; 0xd6fe <_Z17si5351_write_bulkhPhh>
    d82a:	88 23       	and	r24, r24
    d82c:	11 f0       	breq	.+4      	; 0xd832 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x6c>
		{
			return(true);
    d82e:	81 e0       	ldi	r24, 0x01	; 1
    d830:	01 c0       	rjmp	.+2      	; 0xd834 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x6e>
		}
		
		return(false);
    d832:	80 e0       	ldi	r24, 0x00	; 0
	}
    d834:	25 96       	adiw	r28, 0x05	; 5
    d836:	cd bf       	out	0x3d, r28	; 61
    d838:	de bf       	out	0x3e, r29	; 62
    d83a:	df 91       	pop	r29
    d83c:	cf 91       	pop	r28
    d83e:	08 95       	ret

0000d840 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb>:
 * r_div - Desired r_div ratio
 * div_by_4 - 1 Divide By 4 mode: 0 to disable
 *
 */
	bool set_multisynth_registers(Si5351_clock clk, Union_si5351_regs ms_reg, bool int_mode, uint8_t r_div, bool div_by_4)
	{
    d840:	8f 92       	push	r8
    d842:	af 92       	push	r10
    d844:	cf 92       	push	r12
    d846:	df 92       	push	r13
    d848:	ef 92       	push	r14
    d84a:	ff 92       	push	r15
    d84c:	0f 93       	push	r16
    d84e:	1f 93       	push	r17
    d850:	cf 93       	push	r28
    d852:	df 93       	push	r29
    d854:	cd b7       	in	r28, 0x3d	; 61
    d856:	de b7       	in	r29, 0x3e	; 62
    d858:	6e 97       	sbiw	r28, 0x1e	; 30
    d85a:	cd bf       	out	0x3d, r28	; 61
    d85c:	de bf       	out	0x3e, r29	; 62
    d85e:	88 8b       	std	Y+16, r24	; 0x10
    d860:	c9 8a       	std	Y+17, r12	; 0x11
    d862:	da 8a       	std	Y+18, r13	; 0x12
    d864:	eb 8a       	std	Y+19, r14	; 0x13
    d866:	fc 8a       	std	Y+20, r15	; 0x14
    d868:	0d 8b       	std	Y+21, r16	; 0x15
    d86a:	1e 8b       	std	Y+22, r17	; 0x16
    d86c:	2f 8b       	std	Y+23, r18	; 0x17
    d86e:	38 8f       	std	Y+24, r19	; 0x18
    d870:	49 8f       	std	Y+25, r20	; 0x19
    d872:	5a 8f       	std	Y+26, r21	; 0x1a
    d874:	6b 8f       	std	Y+27, r22	; 0x1b
    d876:	7c 8f       	std	Y+28, r23	; 0x1c
    d878:	ad 8e       	std	Y+29, r10	; 0x1d
    d87a:	8e 8e       	std	Y+30, r8	; 0x1e
		uint8_t params[11];
		uint8_t i = 0;
    d87c:	19 82       	std	Y+1, r1	; 0x01
		uint8_t reg_val;
		uint8_t data[2];

		/* Registers 42-43 for CLK0; 50-51 for CLK1 */
		params[i++] = ms_reg.reg.p3_1;
    d87e:	89 81       	ldd	r24, Y+1	; 0x01
    d880:	91 e0       	ldi	r25, 0x01	; 1
    d882:	98 0f       	add	r25, r24
    d884:	99 83       	std	Y+1, r25	; 0x01
    d886:	88 2f       	mov	r24, r24
    d888:	90 e0       	ldi	r25, 0x00	; 0
    d88a:	4a 8d       	ldd	r20, Y+26	; 0x1a
    d88c:	9e 01       	movw	r18, r28
    d88e:	2d 5f       	subi	r18, 0xFD	; 253
    d890:	3f 4f       	sbci	r19, 0xFF	; 255
    d892:	82 0f       	add	r24, r18
    d894:	93 1f       	adc	r25, r19
    d896:	fc 01       	movw	r30, r24
    d898:	40 83       	st	Z, r20
		params[i++] = ms_reg.reg.p3_0;
    d89a:	89 81       	ldd	r24, Y+1	; 0x01
    d89c:	91 e0       	ldi	r25, 0x01	; 1
    d89e:	98 0f       	add	r25, r24
    d8a0:	99 83       	std	Y+1, r25	; 0x01
    d8a2:	88 2f       	mov	r24, r24
    d8a4:	90 e0       	ldi	r25, 0x00	; 0
    d8a6:	49 8d       	ldd	r20, Y+25	; 0x19
    d8a8:	9e 01       	movw	r18, r28
    d8aa:	2d 5f       	subi	r18, 0xFD	; 253
    d8ac:	3f 4f       	sbci	r19, 0xFF	; 255
    d8ae:	82 0f       	add	r24, r18
    d8b0:	93 1f       	adc	r25, r19
    d8b2:	fc 01       	movw	r30, r24
    d8b4:	40 83       	st	Z, r20

		/* Register 44 for CLK0; 52 for CLK1 */
		if(si5351_read_bulk((SI5351_CLK0_PARAMETERS + 2) + (clk * 8), data, 1))
    d8b6:	88 89       	ldd	r24, Y+16	; 0x10
    d8b8:	88 0f       	add	r24, r24
    d8ba:	88 0f       	add	r24, r24
    d8bc:	88 0f       	add	r24, r24
    d8be:	2c e2       	ldi	r18, 0x2C	; 44
    d8c0:	28 0f       	add	r18, r24
    d8c2:	ce 01       	movw	r24, r28
    d8c4:	0e 96       	adiw	r24, 0x0e	; 14
    d8c6:	41 e0       	ldi	r20, 0x01	; 1
    d8c8:	bc 01       	movw	r22, r24
    d8ca:	82 2f       	mov	r24, r18
    d8cc:	0e 94 b1 6b 	call	0xd762	; 0xd762 <_Z16si5351_read_bulkhPhh>
    d8d0:	88 23       	and	r24, r24
    d8d2:	11 f0       	breq	.+4      	; 0xd8d8 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x98>
		{
			return(true);
    d8d4:	81 e0       	ldi	r24, 0x01	; 1
    d8d6:	bc c0       	rjmp	.+376    	; 0xda50 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x210>
		}
		
		reg_val = data[0];
    d8d8:	8e 85       	ldd	r24, Y+14	; 0x0e
    d8da:	8a 83       	std	Y+2, r24	; 0x02

		reg_val &= 0xFC;    /*~(0x03); */
    d8dc:	8a 81       	ldd	r24, Y+2	; 0x02
    d8de:	8c 7f       	andi	r24, 0xFC	; 252
    d8e0:	8a 83       	std	Y+2, r24	; 0x02
		params[i++] = reg_val | (ms_reg.reg.p1_2 & 0x03);
    d8e2:	89 81       	ldd	r24, Y+1	; 0x01
    d8e4:	91 e0       	ldi	r25, 0x01	; 1
    d8e6:	98 0f       	add	r25, r24
    d8e8:	99 83       	std	Y+1, r25	; 0x01
    d8ea:	88 2f       	mov	r24, r24
    d8ec:	90 e0       	ldi	r25, 0x00	; 0
    d8ee:	2b 89       	ldd	r18, Y+19	; 0x13
    d8f0:	32 2f       	mov	r19, r18
    d8f2:	33 70       	andi	r19, 0x03	; 3
    d8f4:	2a 81       	ldd	r18, Y+2	; 0x02
    d8f6:	23 2b       	or	r18, r19
    d8f8:	42 2f       	mov	r20, r18
    d8fa:	9e 01       	movw	r18, r28
    d8fc:	2d 5f       	subi	r18, 0xFD	; 253
    d8fe:	3f 4f       	sbci	r19, 0xFF	; 255
    d900:	82 0f       	add	r24, r18
    d902:	93 1f       	adc	r25, r19
    d904:	fc 01       	movw	r30, r24
    d906:	40 83       	st	Z, r20

		/* Registers 45-46 for CLK0 */
		params[i++] = ms_reg.reg.p1_1;
    d908:	89 81       	ldd	r24, Y+1	; 0x01
    d90a:	91 e0       	ldi	r25, 0x01	; 1
    d90c:	98 0f       	add	r25, r24
    d90e:	99 83       	std	Y+1, r25	; 0x01
    d910:	88 2f       	mov	r24, r24
    d912:	90 e0       	ldi	r25, 0x00	; 0
    d914:	4a 89       	ldd	r20, Y+18	; 0x12
    d916:	9e 01       	movw	r18, r28
    d918:	2d 5f       	subi	r18, 0xFD	; 253
    d91a:	3f 4f       	sbci	r19, 0xFF	; 255
    d91c:	82 0f       	add	r24, r18
    d91e:	93 1f       	adc	r25, r19
    d920:	fc 01       	movw	r30, r24
    d922:	40 83       	st	Z, r20
		params[i++] = ms_reg.reg.p1_0;
    d924:	89 81       	ldd	r24, Y+1	; 0x01
    d926:	91 e0       	ldi	r25, 0x01	; 1
    d928:	98 0f       	add	r25, r24
    d92a:	99 83       	std	Y+1, r25	; 0x01
    d92c:	88 2f       	mov	r24, r24
    d92e:	90 e0       	ldi	r25, 0x00	; 0
    d930:	49 89       	ldd	r20, Y+17	; 0x11
    d932:	9e 01       	movw	r18, r28
    d934:	2d 5f       	subi	r18, 0xFD	; 253
    d936:	3f 4f       	sbci	r19, 0xFF	; 255
    d938:	82 0f       	add	r24, r18
    d93a:	93 1f       	adc	r25, r19
    d93c:	fc 01       	movw	r30, r24
    d93e:	40 83       	st	Z, r20

		/* Register 47 for CLK0 */
		params[i] = (ms_reg.reg.p3_2 << 4);
    d940:	89 81       	ldd	r24, Y+1	; 0x01
    d942:	88 2f       	mov	r24, r24
    d944:	90 e0       	ldi	r25, 0x00	; 0
    d946:	2b 8d       	ldd	r18, Y+27	; 0x1b
    d948:	42 2f       	mov	r20, r18
    d94a:	42 95       	swap	r20
    d94c:	40 7f       	andi	r20, 0xF0	; 240
    d94e:	9e 01       	movw	r18, r28
    d950:	2d 5f       	subi	r18, 0xFD	; 253
    d952:	3f 4f       	sbci	r19, 0xFF	; 255
    d954:	82 0f       	add	r24, r18
    d956:	93 1f       	adc	r25, r19
    d958:	fc 01       	movw	r30, r24
    d95a:	40 83       	st	Z, r20
		params[i++] += (ms_reg.reg.p2_2 & 0x0F);
    d95c:	29 81       	ldd	r18, Y+1	; 0x01
    d95e:	81 e0       	ldi	r24, 0x01	; 1
    d960:	82 0f       	add	r24, r18
    d962:	89 83       	std	Y+1, r24	; 0x01
    d964:	82 2f       	mov	r24, r18
    d966:	90 e0       	ldi	r25, 0x00	; 0
    d968:	22 2f       	mov	r18, r18
    d96a:	30 e0       	ldi	r19, 0x00	; 0
    d96c:	ae 01       	movw	r20, r28
    d96e:	4d 5f       	subi	r20, 0xFD	; 253
    d970:	5f 4f       	sbci	r21, 0xFF	; 255
    d972:	24 0f       	add	r18, r20
    d974:	35 1f       	adc	r19, r21
    d976:	f9 01       	movw	r30, r18
    d978:	30 81       	ld	r19, Z
    d97a:	2f 89       	ldd	r18, Y+23	; 0x17
    d97c:	2f 70       	andi	r18, 0x0F	; 15
    d97e:	43 2f       	mov	r20, r19
    d980:	42 0f       	add	r20, r18
    d982:	9e 01       	movw	r18, r28
    d984:	2d 5f       	subi	r18, 0xFD	; 253
    d986:	3f 4f       	sbci	r19, 0xFF	; 255
    d988:	82 0f       	add	r24, r18
    d98a:	93 1f       	adc	r25, r19
    d98c:	fc 01       	movw	r30, r24
    d98e:	40 83       	st	Z, r20

		/* Registers 48-49 for CLK0 */
		params[i++] = ms_reg.reg.p2_1;
    d990:	89 81       	ldd	r24, Y+1	; 0x01
    d992:	91 e0       	ldi	r25, 0x01	; 1
    d994:	98 0f       	add	r25, r24
    d996:	99 83       	std	Y+1, r25	; 0x01
    d998:	88 2f       	mov	r24, r24
    d99a:	90 e0       	ldi	r25, 0x00	; 0
    d99c:	4e 89       	ldd	r20, Y+22	; 0x16
    d99e:	9e 01       	movw	r18, r28
    d9a0:	2d 5f       	subi	r18, 0xFD	; 253
    d9a2:	3f 4f       	sbci	r19, 0xFF	; 255
    d9a4:	82 0f       	add	r24, r18
    d9a6:	93 1f       	adc	r25, r19
    d9a8:	fc 01       	movw	r30, r24
    d9aa:	40 83       	st	Z, r20
		params[i++] = ms_reg.reg.p2_0;
    d9ac:	89 81       	ldd	r24, Y+1	; 0x01
    d9ae:	91 e0       	ldi	r25, 0x01	; 1
    d9b0:	98 0f       	add	r25, r24
    d9b2:	99 83       	std	Y+1, r25	; 0x01
    d9b4:	88 2f       	mov	r24, r24
    d9b6:	90 e0       	ldi	r25, 0x00	; 0
    d9b8:	4d 89       	ldd	r20, Y+21	; 0x15
    d9ba:	9e 01       	movw	r18, r28
    d9bc:	2d 5f       	subi	r18, 0xFD	; 253
    d9be:	3f 4f       	sbci	r19, 0xFF	; 255
    d9c0:	82 0f       	add	r24, r18
    d9c2:	93 1f       	adc	r25, r19
    d9c4:	fc 01       	movw	r30, r24
    d9c6:	40 83       	st	Z, r20

		/* Write the parameters */
		switch(clk)
    d9c8:	88 89       	ldd	r24, Y+16	; 0x10
    d9ca:	88 2f       	mov	r24, r24
    d9cc:	90 e0       	ldi	r25, 0x00	; 0
    d9ce:	81 30       	cpi	r24, 0x01	; 1
    d9d0:	91 05       	cpc	r25, r1
    d9d2:	89 f0       	breq	.+34     	; 0xd9f6 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1b6>
    d9d4:	82 30       	cpi	r24, 0x02	; 2
    d9d6:	91 05       	cpc	r25, r1
    d9d8:	c9 f0       	breq	.+50     	; 0xda0c <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1cc>
    d9da:	89 2b       	or	r24, r25
    d9dc:	09 f0       	breq	.+2      	; 0xd9e0 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1a0>
			break;

			default:
			{
			}
			break;
    d9de:	26 c0       	rjmp	.+76     	; 0xda2c <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1ec>
		/* Write the parameters */
		switch(clk)
		{
			case SI5351_CLK0:
			{
				if(si5351_write_bulk(SI5351_CLK0_PARAMETERS, params, i))
    d9e0:	ce 01       	movw	r24, r28
    d9e2:	03 96       	adiw	r24, 0x03	; 3
    d9e4:	49 81       	ldd	r20, Y+1	; 0x01
    d9e6:	bc 01       	movw	r22, r24
    d9e8:	8a e2       	ldi	r24, 0x2A	; 42
    d9ea:	0e 94 7f 6b 	call	0xd6fe	; 0xd6fe <_Z17si5351_write_bulkhPhh>
    d9ee:	88 23       	and	r24, r24
    d9f0:	c1 f0       	breq	.+48     	; 0xda22 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1e2>
				{
					return(true);
    d9f2:	81 e0       	ldi	r24, 0x01	; 1
    d9f4:	2d c0       	rjmp	.+90     	; 0xda50 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x210>
			}
			break;

			case SI5351_CLK1:
			{
				if(si5351_write_bulk(SI5351_CLK1_PARAMETERS, params, i))
    d9f6:	ce 01       	movw	r24, r28
    d9f8:	03 96       	adiw	r24, 0x03	; 3
    d9fa:	49 81       	ldd	r20, Y+1	; 0x01
    d9fc:	bc 01       	movw	r22, r24
    d9fe:	82 e3       	ldi	r24, 0x32	; 50
    da00:	0e 94 7f 6b 	call	0xd6fe	; 0xd6fe <_Z17si5351_write_bulkhPhh>
    da04:	88 23       	and	r24, r24
    da06:	79 f0       	breq	.+30     	; 0xda26 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1e6>
				{
					return(true);
    da08:	81 e0       	ldi	r24, 0x01	; 1
    da0a:	22 c0       	rjmp	.+68     	; 0xda50 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x210>
			}
			break;

			case SI5351_CLK2:
			{
				if(si5351_write_bulk(SI5351_CLK2_PARAMETERS, params, i))
    da0c:	ce 01       	movw	r24, r28
    da0e:	03 96       	adiw	r24, 0x03	; 3
    da10:	49 81       	ldd	r20, Y+1	; 0x01
    da12:	bc 01       	movw	r22, r24
    da14:	8a e3       	ldi	r24, 0x3A	; 58
    da16:	0e 94 7f 6b 	call	0xd6fe	; 0xd6fe <_Z17si5351_write_bulkhPhh>
    da1a:	88 23       	and	r24, r24
    da1c:	31 f0       	breq	.+12     	; 0xda2a <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1ea>
				{
					return(true);
    da1e:	81 e0       	ldi	r24, 0x01	; 1
    da20:	17 c0       	rjmp	.+46     	; 0xda50 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x210>
				if(si5351_write_bulk(SI5351_CLK0_PARAMETERS, params, i))
				{
					return(true);
				}
			}
			break;
    da22:	00 00       	nop
    da24:	03 c0       	rjmp	.+6      	; 0xda2c <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1ec>
				if(si5351_write_bulk(SI5351_CLK1_PARAMETERS, params, i))
				{
					return(true);
				}
			}
			break;
    da26:	00 00       	nop
    da28:	01 c0       	rjmp	.+2      	; 0xda2c <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1ec>
				if(si5351_write_bulk(SI5351_CLK2_PARAMETERS, params, i))
				{
					return(true);
				}
			}
			break;
    da2a:	00 00       	nop
			{
			}
			break;
		}

		if(set_integer_mode(clk, int_mode))
    da2c:	6d 8d       	ldd	r22, Y+29	; 0x1d
    da2e:	88 89       	ldd	r24, Y+16	; 0x10
    da30:	0e 94 36 6d 	call	0xda6c	; 0xda6c <_Z16set_integer_mode12si5351_clockb>
    da34:	88 23       	and	r24, r24
    da36:	11 f0       	breq	.+4      	; 0xda3c <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1fc>
		{
			return(true);
    da38:	81 e0       	ldi	r24, 0x01	; 1
    da3a:	0a c0       	rjmp	.+20     	; 0xda50 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x210>
		}
		
		if(ms_div(clk, r_div, div_by_4))
    da3c:	4b a5       	ldd	r20, Y+43	; 0x2b
    da3e:	6e 8d       	ldd	r22, Y+30	; 0x1e
    da40:	88 89       	ldd	r24, Y+16	; 0x10
    da42:	0e 94 6b 6d 	call	0xdad6	; 0xdad6 <_Z6ms_div12si5351_clockhb>
    da46:	88 23       	and	r24, r24
    da48:	11 f0       	breq	.+4      	; 0xda4e <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x20e>
		{
			return(true);
    da4a:	81 e0       	ldi	r24, 0x01	; 1
    da4c:	01 c0       	rjmp	.+2      	; 0xda50 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x210>
		}
		
		return(false);
    da4e:	80 e0       	ldi	r24, 0x00	; 0
	}
    da50:	6e 96       	adiw	r28, 0x1e	; 30
    da52:	cd bf       	out	0x3d, r28	; 61
    da54:	de bf       	out	0x3e, r29	; 62
    da56:	df 91       	pop	r29
    da58:	cf 91       	pop	r28
    da5a:	1f 91       	pop	r17
    da5c:	0f 91       	pop	r16
    da5e:	ff 90       	pop	r15
    da60:	ef 90       	pop	r14
    da62:	df 90       	pop	r13
    da64:	cf 90       	pop	r12
    da66:	af 90       	pop	r10
    da68:	8f 90       	pop	r8
    da6a:	08 95       	ret

0000da6c <_Z16set_integer_mode12si5351_clockb>:
 * enable - 1 to enable, 0 to disable
 *
 * Set the indicated multisynth into integer mode.
 */
	bool set_integer_mode(Si5351_clock clk, bool enable)
	{
    da6c:	cf 93       	push	r28
    da6e:	df 93       	push	r29
    da70:	cd b7       	in	r28, 0x3d	; 61
    da72:	de b7       	in	r29, 0x3e	; 62
    da74:	25 97       	sbiw	r28, 0x05	; 5
    da76:	cd bf       	out	0x3d, r28	; 61
    da78:	de bf       	out	0x3e, r29	; 62
    da7a:	8c 83       	std	Y+4, r24	; 0x04
    da7c:	6d 83       	std	Y+5, r22	; 0x05
		uint8_t reg_val;
		uint8_t data[2];

		if(si5351_read_bulk(SI5351_CLK0_CTRL + (uint8_t)clk, data, 1))
    da7e:	8c 81       	ldd	r24, Y+4	; 0x04
    da80:	20 e1       	ldi	r18, 0x10	; 16
    da82:	28 0f       	add	r18, r24
    da84:	ce 01       	movw	r24, r28
    da86:	02 96       	adiw	r24, 0x02	; 2
    da88:	41 e0       	ldi	r20, 0x01	; 1
    da8a:	bc 01       	movw	r22, r24
    da8c:	82 2f       	mov	r24, r18
    da8e:	0e 94 b1 6b 	call	0xd762	; 0xd762 <_Z16si5351_read_bulkhPhh>
    da92:	88 23       	and	r24, r24
    da94:	11 f0       	breq	.+4      	; 0xda9a <_Z16set_integer_mode12si5351_clockb+0x2e>
		{
			return(true);
    da96:	81 e0       	ldi	r24, 0x01	; 1
    da98:	18 c0       	rjmp	.+48     	; 0xdaca <_Z16set_integer_mode12si5351_clockb+0x5e>
		}
		
		reg_val = data[0];
    da9a:	8a 81       	ldd	r24, Y+2	; 0x02
    da9c:	89 83       	std	Y+1, r24	; 0x01

		if(enable)
    da9e:	8d 81       	ldd	r24, Y+5	; 0x05
    daa0:	88 23       	and	r24, r24
    daa2:	21 f0       	breq	.+8      	; 0xdaac <_Z16set_integer_mode12si5351_clockb+0x40>
		{
			reg_val |= (SI5351_CLK_INTEGER_MODE);
    daa4:	89 81       	ldd	r24, Y+1	; 0x01
    daa6:	80 64       	ori	r24, 0x40	; 64
    daa8:	89 83       	std	Y+1, r24	; 0x01
    daaa:	03 c0       	rjmp	.+6      	; 0xdab2 <_Z16set_integer_mode12si5351_clockb+0x46>
		}
		else
		{
			reg_val &= ~(SI5351_CLK_INTEGER_MODE);
    daac:	89 81       	ldd	r24, Y+1	; 0x01
    daae:	8f 7b       	andi	r24, 0xBF	; 191
    dab0:	89 83       	std	Y+1, r24	; 0x01
		}

		data[0] = reg_val;
    dab2:	89 81       	ldd	r24, Y+1	; 0x01
    dab4:	8a 83       	std	Y+2, r24	; 0x02
		return(si5351_write_bulk(SI5351_CLK0_CTRL + (uint8_t)clk, data, 1));
    dab6:	8c 81       	ldd	r24, Y+4	; 0x04
    dab8:	20 e1       	ldi	r18, 0x10	; 16
    daba:	28 0f       	add	r18, r24
    dabc:	ce 01       	movw	r24, r28
    dabe:	02 96       	adiw	r24, 0x02	; 2
    dac0:	41 e0       	ldi	r20, 0x01	; 1
    dac2:	bc 01       	movw	r22, r24
    dac4:	82 2f       	mov	r24, r18
    dac6:	0e 94 7f 6b 	call	0xd6fe	; 0xd6fe <_Z17si5351_write_bulkhPhh>
	}
    daca:	25 96       	adiw	r28, 0x05	; 5
    dacc:	cd bf       	out	0x3d, r28	; 61
    dace:	de bf       	out	0x3e, r29	; 62
    dad0:	df 91       	pop	r29
    dad2:	cf 91       	pop	r28
    dad4:	08 95       	ret

0000dad6 <_Z6ms_div12si5351_clockhb>:


	bool ms_div(Si5351_clock clk, uint8_t r_div, bool div_by_4)
	{
    dad6:	cf 93       	push	r28
    dad8:	df 93       	push	r29
    dada:	cd b7       	in	r28, 0x3d	; 61
    dadc:	de b7       	in	r29, 0x3e	; 62
    dade:	27 97       	sbiw	r28, 0x07	; 7
    dae0:	cd bf       	out	0x3d, r28	; 61
    dae2:	de bf       	out	0x3e, r29	; 62
    dae4:	8d 83       	std	Y+5, r24	; 0x05
    dae6:	6e 83       	std	Y+6, r22	; 0x06
    dae8:	4f 83       	std	Y+7, r20	; 0x07
		uint8_t reg_val, reg_addr;
		uint8_t data[2];

		switch(clk)
    daea:	8d 81       	ldd	r24, Y+5	; 0x05
    daec:	88 2f       	mov	r24, r24
    daee:	90 e0       	ldi	r25, 0x00	; 0
    daf0:	81 30       	cpi	r24, 0x01	; 1
    daf2:	91 05       	cpc	r25, r1
    daf4:	41 f0       	breq	.+16     	; 0xdb06 <_Z6ms_div12si5351_clockhb+0x30>
    daf6:	82 30       	cpi	r24, 0x02	; 2
    daf8:	91 05       	cpc	r25, r1
    dafa:	41 f0       	breq	.+16     	; 0xdb0c <_Z6ms_div12si5351_clockhb+0x36>
    dafc:	89 2b       	or	r24, r25
    dafe:	49 f4       	brne	.+18     	; 0xdb12 <_Z6ms_div12si5351_clockhb+0x3c>
		{
			case SI5351_CLK0:
			{
				reg_addr = SI5351_CLK0_PARAMETERS + 2;
    db00:	8c e2       	ldi	r24, 0x2C	; 44
    db02:	8a 83       	std	Y+2, r24	; 0x02
			}
			break;
    db04:	08 c0       	rjmp	.+16     	; 0xdb16 <_Z6ms_div12si5351_clockhb+0x40>

			case SI5351_CLK1:
			{
				reg_addr = SI5351_CLK1_PARAMETERS + 2;
    db06:	84 e3       	ldi	r24, 0x34	; 52
    db08:	8a 83       	std	Y+2, r24	; 0x02
			}
			break;
    db0a:	05 c0       	rjmp	.+10     	; 0xdb16 <_Z6ms_div12si5351_clockhb+0x40>

			case SI5351_CLK2:
			{
				reg_addr = SI5351_CLK2_PARAMETERS + 2;
    db0c:	8c e3       	ldi	r24, 0x3C	; 60
    db0e:	8a 83       	std	Y+2, r24	; 0x02
			}
			break;
    db10:	02 c0       	rjmp	.+4      	; 0xdb16 <_Z6ms_div12si5351_clockhb+0x40>

			default:
				return(true);
    db12:	81 e0       	ldi	r24, 0x01	; 1
    db14:	30 c0       	rjmp	.+96     	; 0xdb76 <_Z6ms_div12si5351_clockhb+0xa0>
		}

		if(si5351_read_bulk(reg_addr, data, 1))
    db16:	ce 01       	movw	r24, r28
    db18:	03 96       	adiw	r24, 0x03	; 3
    db1a:	41 e0       	ldi	r20, 0x01	; 1
    db1c:	bc 01       	movw	r22, r24
    db1e:	8a 81       	ldd	r24, Y+2	; 0x02
    db20:	0e 94 b1 6b 	call	0xd762	; 0xd762 <_Z16si5351_read_bulkhPhh>
    db24:	88 23       	and	r24, r24
    db26:	11 f0       	breq	.+4      	; 0xdb2c <_Z6ms_div12si5351_clockhb+0x56>
		{
			return(true);
    db28:	81 e0       	ldi	r24, 0x01	; 1
    db2a:	25 c0       	rjmp	.+74     	; 0xdb76 <_Z6ms_div12si5351_clockhb+0xa0>
		}
		
		reg_val = data[0];
    db2c:	8b 81       	ldd	r24, Y+3	; 0x03
    db2e:	89 83       	std	Y+1, r24	; 0x01

		/* Clear the appropriate bits */
		reg_val &= ~(0x7c);
    db30:	89 81       	ldd	r24, Y+1	; 0x01
    db32:	83 78       	andi	r24, 0x83	; 131
    db34:	89 83       	std	Y+1, r24	; 0x01

		if(div_by_4)
    db36:	8f 81       	ldd	r24, Y+7	; 0x07
    db38:	88 23       	and	r24, r24
    db3a:	21 f0       	breq	.+8      	; 0xdb44 <_Z6ms_div12si5351_clockhb+0x6e>
		{
			reg_val |= (SI5351_OUTPUT_CLK_DIVBY4);
    db3c:	89 81       	ldd	r24, Y+1	; 0x01
    db3e:	8c 60       	ori	r24, 0x0C	; 12
    db40:	89 83       	std	Y+1, r24	; 0x01
    db42:	03 c0       	rjmp	.+6      	; 0xdb4a <_Z6ms_div12si5351_clockhb+0x74>
		}
		else
		{
			reg_val &= ~(SI5351_OUTPUT_CLK_DIVBY4);
    db44:	89 81       	ldd	r24, Y+1	; 0x01
    db46:	83 7f       	andi	r24, 0xF3	; 243
    db48:	89 83       	std	Y+1, r24	; 0x01
		}

		reg_val |= (r_div << SI5351_OUTPUT_CLK_DIV_SHIFT);
    db4a:	8e 81       	ldd	r24, Y+6	; 0x06
    db4c:	88 2f       	mov	r24, r24
    db4e:	90 e0       	ldi	r25, 0x00	; 0
    db50:	82 95       	swap	r24
    db52:	92 95       	swap	r25
    db54:	90 7f       	andi	r25, 0xF0	; 240
    db56:	98 27       	eor	r25, r24
    db58:	80 7f       	andi	r24, 0xF0	; 240
    db5a:	98 27       	eor	r25, r24
    db5c:	98 2f       	mov	r25, r24
    db5e:	89 81       	ldd	r24, Y+1	; 0x01
    db60:	89 2b       	or	r24, r25
    db62:	89 83       	std	Y+1, r24	; 0x01

		data[0] = reg_val;
    db64:	89 81       	ldd	r24, Y+1	; 0x01
    db66:	8b 83       	std	Y+3, r24	; 0x03
		return(si5351_write_bulk(reg_addr, data, 1));
    db68:	ce 01       	movw	r24, r28
    db6a:	03 96       	adiw	r24, 0x03	; 3
    db6c:	41 e0       	ldi	r20, 0x01	; 1
    db6e:	bc 01       	movw	r22, r24
    db70:	8a 81       	ldd	r24, Y+2	; 0x02
    db72:	0e 94 7f 6b 	call	0xd6fe	; 0xd6fe <_Z17si5351_write_bulkhPhh>
	}
    db76:	27 96       	adiw	r28, 0x07	; 7
    db78:	cd bf       	out	0x3d, r28	; 61
    db7a:	de bf       	out	0x3e, r29	; 62
    db7c:	df 91       	pop	r29
    db7e:	cf 91       	pop	r28
    db80:	08 95       	ret

0000db82 <SLPCTRL_init>:
 * \brief Initialize Sleep Controller
 *
 * \return Initialization status.
 */
int8_t SLPCTRL_init()
{
    db82:	cf 93       	push	r28
    db84:	df 93       	push	r29
    db86:	cd b7       	in	r28, 0x3d	; 61
    db88:	de b7       	in	r29, 0x3e	; 62

	SLPCTRL.CTRLA = 0 << SLPCTRL_SEN_bp; /* Sleep enable: disabled */
    db8a:	80 e5       	ldi	r24, 0x50	; 80
    db8c:	90 e0       	ldi	r25, 0x00	; 0
    db8e:	fc 01       	movw	r30, r24
    db90:	10 82       	st	Z, r1
//			 | SLPCTRL_SMODE_IDLE_gc;  /* Idle mode */
//			 | SLPCTRL_SMODE_STDBY_gc; /* Standby Mode */
//			 | SLPCTRL_SMODE_PDOWN_gc; /* Power-down Mode */

	return 0;
    db92:	80 e0       	ldi	r24, 0x00	; 0
}
    db94:	df 91       	pop	r29
    db96:	cf 91       	pop	r28
    db98:	08 95       	ret

0000db9a <SLPCTRL_set_sleep_mode>:

void SLPCTRL_set_sleep_mode(SLPCTRL_SMODE_t setmode)
{
    db9a:	cf 93       	push	r28
    db9c:	df 93       	push	r29
    db9e:	1f 92       	push	r1
    dba0:	cd b7       	in	r28, 0x3d	; 61
    dba2:	de b7       	in	r29, 0x3e	; 62
    dba4:	89 83       	std	Y+1, r24	; 0x01
	SLPCTRL.CTRLA = (SLPCTRL.CTRLA & ~SLPCTRL_SMODE_gm) | (setmode & SLPCTRL_SMODE_gm);
    dba6:	80 e5       	ldi	r24, 0x50	; 80
    dba8:	90 e0       	ldi	r25, 0x00	; 0
    dbaa:	20 e5       	ldi	r18, 0x50	; 80
    dbac:	30 e0       	ldi	r19, 0x00	; 0
    dbae:	f9 01       	movw	r30, r18
    dbb0:	20 81       	ld	r18, Z
    dbb2:	32 2f       	mov	r19, r18
    dbb4:	39 7f       	andi	r19, 0xF9	; 249
    dbb6:	29 81       	ldd	r18, Y+1	; 0x01
    dbb8:	26 70       	andi	r18, 0x06	; 6
    dbba:	23 2b       	or	r18, r19
    dbbc:	fc 01       	movw	r30, r24
    dbbe:	20 83       	st	Z, r18
}
    dbc0:	00 00       	nop
    dbc2:	0f 90       	pop	r0
    dbc4:	df 91       	pop	r29
    dbc6:	cf 91       	pop	r28
    dbc8:	08 95       	ret

0000dbca <TIMERB_init>:
 * \brief Initialize tcb interface
 *
 * \return Initialization status.
 */
int8_t TIMERB_init()
{
    dbca:	cf 93       	push	r28
    dbcc:	df 93       	push	r29
    dbce:	cd b7       	in	r28, 0x3d	; 61
    dbd0:	de b7       	in	r29, 0x3e	; 62
TCB0.INTCTRL = 1 << TCB_CAPT_bp   /* Capture or Timeout: enabled */
    dbd2:	80 e0       	ldi	r24, 0x00	; 0
    dbd4:	9b e0       	ldi	r25, 0x0B	; 11
| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    dbd6:	21 e0       	ldi	r18, 0x01	; 1
    dbd8:	fc 01       	movw	r30, r24
    dbda:	25 83       	std	Z+5, r18	; 0x05

// Set TOP
TCB0.CCMP = 0x9C40;
    dbdc:	80 e0       	ldi	r24, 0x00	; 0
    dbde:	9b e0       	ldi	r25, 0x0B	; 11
    dbe0:	20 e4       	ldi	r18, 0x40	; 64
    dbe2:	3c e9       	ldi	r19, 0x9C	; 156
    dbe4:	fc 01       	movw	r30, r24
    dbe6:	24 87       	std	Z+12, r18	; 0x0c
    dbe8:	35 87       	std	Z+13, r19	; 0x0d

TCB0.CTRLA = TCB_CLKSEL_DIV2_gc     /* CLK_PER */
    dbea:	80 e0       	ldi	r24, 0x00	; 0
    dbec:	9b e0       	ldi	r25, 0x0B	; 11
| 1 << TCB_ENABLE_bp   /* Enable: enabled */
| 0 << TCB_RUNSTDBY_bp /* Run Standby: disabled */
| 0 << TCB_SYNCUPD_bp  /* Synchronize Update: disabled */
| 0 << TCB_CASCADE_bp; /* Cascade Two Timer/Counters: disabled */
    dbee:	23 e0       	ldi	r18, 0x03	; 3
    dbf0:	fc 01       	movw	r30, r24
    dbf2:	20 83       	st	Z, r18

TCB0.INTFLAGS = TCB_CAPT_bm; /* Clear flag */
    dbf4:	80 e0       	ldi	r24, 0x00	; 0
    dbf6:	9b e0       	ldi	r25, 0x0B	; 11
    dbf8:	21 e0       	ldi	r18, 0x01	; 1
    dbfa:	fc 01       	movw	r30, r24
    dbfc:	26 83       	std	Z+6, r18	; 0x06

/********************************************************************************/

TCB1.INTCTRL = 1 << TCB_CAPT_bp   /* Capture or Timeout: enabled */
    dbfe:	80 e1       	ldi	r24, 0x10	; 16
    dc00:	9b e0       	ldi	r25, 0x0B	; 11
| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    dc02:	21 e0       	ldi	r18, 0x01	; 1
    dc04:	fc 01       	movw	r30, r24
    dc06:	25 83       	std	Z+5, r18	; 0x05

// Set TOP
TCB1.CCMP = 0x5DC0;
    dc08:	80 e1       	ldi	r24, 0x10	; 16
    dc0a:	9b e0       	ldi	r25, 0x0B	; 11
    dc0c:	20 ec       	ldi	r18, 0xC0	; 192
    dc0e:	3d e5       	ldi	r19, 0x5D	; 93
    dc10:	fc 01       	movw	r30, r24
    dc12:	24 87       	std	Z+12, r18	; 0x0c
    dc14:	35 87       	std	Z+13, r19	; 0x0d

TCB1.CTRLA = TCB_CLKSEL_DIV1_gc     /* CLK_PER */
    dc16:	80 e1       	ldi	r24, 0x10	; 16
    dc18:	9b e0       	ldi	r25, 0x0B	; 11
| 1 << TCB_ENABLE_bp   /* Enable: enabled */
| 0 << TCB_RUNSTDBY_bp /* Run Standby: disabled */
| 0 << TCB_SYNCUPD_bp  /* Synchronize Update: disabled */
| 0 << TCB_CASCADE_bp; /* Cascade Two Timer/Counters: disabled */
    dc1a:	21 e0       	ldi	r18, 0x01	; 1
    dc1c:	fc 01       	movw	r30, r24
    dc1e:	20 83       	st	Z, r18

TCB1.INTFLAGS = TCB_CAPT_bm; /* Clear flag */
    dc20:	80 e1       	ldi	r24, 0x10	; 16
    dc22:	9b e0       	ldi	r25, 0x0B	; 11
    dc24:	21 e0       	ldi	r18, 0x01	; 1
    dc26:	fc 01       	movw	r30, r24
    dc28:	26 83       	std	Z+6, r18	; 0x06


/********************************************************************************/

TCB3.INTCTRL = 1 << TCB_CAPT_bp   /* Capture or Timeout: enabled */
    dc2a:	80 e3       	ldi	r24, 0x30	; 48
    dc2c:	9b e0       	ldi	r25, 0x0B	; 11
| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    dc2e:	21 e0       	ldi	r18, 0x01	; 1
    dc30:	fc 01       	movw	r30, r24
    dc32:	25 83       	std	Z+5, r18	; 0x05

// Set TOP
TCB3.CCMP = 0x9C40;
    dc34:	80 e3       	ldi	r24, 0x30	; 48
    dc36:	9b e0       	ldi	r25, 0x0B	; 11
    dc38:	20 e4       	ldi	r18, 0x40	; 64
    dc3a:	3c e9       	ldi	r19, 0x9C	; 156
    dc3c:	fc 01       	movw	r30, r24
    dc3e:	24 87       	std	Z+12, r18	; 0x0c
    dc40:	35 87       	std	Z+13, r19	; 0x0d

TCB3.CTRLA = TCB_CLKSEL_DIV2_gc     /* CLK_PER */
    dc42:	80 e3       	ldi	r24, 0x30	; 48
    dc44:	9b e0       	ldi	r25, 0x0B	; 11
| 1 << TCB_ENABLE_bp   /* Enable: enabled */
| 0 << TCB_RUNSTDBY_bp /* Run Standby: disabled */
| 0 << TCB_SYNCUPD_bp  /* Synchronize Update: disabled */
| 0 << TCB_CASCADE_bp; /* Cascade Two Timer/Counters: disabled */
    dc46:	23 e0       	ldi	r18, 0x03	; 3
    dc48:	fc 01       	movw	r30, r24
    dc4a:	20 83       	st	Z, r18

TCB3.INTFLAGS = TCB_CAPT_bm; /* Clear flag */
    dc4c:	80 e3       	ldi	r24, 0x30	; 48
    dc4e:	9b e0       	ldi	r25, 0x0B	; 11
    dc50:	21 e0       	ldi	r18, 0x01	; 1
    dc52:	fc 01       	movw	r30, r24
    dc54:	26 83       	std	Z+6, r18	; 0x06

	return 0;
    dc56:	80 e0       	ldi	r24, 0x00	; 0
}
    dc58:	df 91       	pop	r29
    dc5a:	cf 91       	pop	r28
    dc5c:	08 95       	ret

0000dc5e <util_delay_ms>:


bool util_delay_ms(uint32_t delayValue)
{
    dc5e:	cf 93       	push	r28
    dc60:	df 93       	push	r29
    dc62:	00 d0       	rcall	.+0      	; 0xdc64 <util_delay_ms+0x6>
    dc64:	00 d0       	rcall	.+0      	; 0xdc66 <util_delay_ms+0x8>
    dc66:	cd b7       	in	r28, 0x3d	; 61
    dc68:	de b7       	in	r29, 0x3e	; 62
    dc6a:	69 83       	std	Y+1, r22	; 0x01
    dc6c:	7a 83       	std	Y+2, r23	; 0x02
    dc6e:	8b 83       	std	Y+3, r24	; 0x03
    dc70:	9c 83       	std	Y+4, r25	; 0x04
	static uint32_t countdownValue=0;
	static bool counting = false;
	
	if(delayValue)
    dc72:	89 81       	ldd	r24, Y+1	; 0x01
    dc74:	9a 81       	ldd	r25, Y+2	; 0x02
    dc76:	ab 81       	ldd	r26, Y+3	; 0x03
    dc78:	bc 81       	ldd	r27, Y+4	; 0x04
    dc7a:	89 2b       	or	r24, r25
    dc7c:	8a 2b       	or	r24, r26
    dc7e:	8b 2b       	or	r24, r27
    dc80:	09 f4       	brne	.+2      	; 0xdc84 <util_delay_ms+0x26>
    dc82:	84 c0       	rjmp	.+264    	; 0xdd8c <util_delay_ms+0x12e>
	{
		if(counting)
    dc84:	80 91 cb 4a 	lds	r24, 0x4ACB	; 0x804acb <_ZZ13util_delay_msE8counting>
    dc88:	88 23       	and	r24, r24
    dc8a:	09 f4       	brne	.+2      	; 0xdc8e <util_delay_ms+0x30>
    dc8c:	4d c0       	rjmp	.+154    	; 0xdd28 <util_delay_ms+0xca>
		{
			if(!g_ms_counter)
    dc8e:	80 91 c7 4a 	lds	r24, 0x4AC7	; 0x804ac7 <_ZL12g_ms_counter>
    dc92:	90 91 c8 4a 	lds	r25, 0x4AC8	; 0x804ac8 <_ZL12g_ms_counter+0x1>
    dc96:	a0 91 c9 4a 	lds	r26, 0x4AC9	; 0x804ac9 <_ZL12g_ms_counter+0x2>
    dc9a:	b0 91 ca 4a 	lds	r27, 0x4ACA	; 0x804aca <_ZL12g_ms_counter+0x3>
    dc9e:	89 2b       	or	r24, r25
    dca0:	8a 2b       	or	r24, r26
    dca2:	8b 2b       	or	r24, r27
    dca4:	81 f4       	brne	.+32     	; 0xdcc6 <util_delay_ms+0x68>
			{
				TCB1.INTCTRL = 0 << TCB_CAPT_bp   /* Capture or Timeout: disabled */
    dca6:	80 e1       	ldi	r24, 0x10	; 16
    dca8:	9b e0       	ldi	r25, 0x0B	; 11
				| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    dcaa:	fc 01       	movw	r30, r24
    dcac:	15 82       	std	Z+5, r1	; 0x05

				counting = false;
    dcae:	10 92 cb 4a 	sts	0x4ACB, r1	; 0x804acb <_ZZ13util_delay_msE8counting>
				countdownValue = 0;
    dcb2:	10 92 cc 4a 	sts	0x4ACC, r1	; 0x804acc <_ZZ13util_delay_msE14countdownValue>
    dcb6:	10 92 cd 4a 	sts	0x4ACD, r1	; 0x804acd <_ZZ13util_delay_msE14countdownValue+0x1>
    dcba:	10 92 ce 4a 	sts	0x4ACE, r1	; 0x804ace <_ZZ13util_delay_msE14countdownValue+0x2>
    dcbe:	10 92 cf 4a 	sts	0x4ACF, r1	; 0x804acf <_ZZ13util_delay_msE14countdownValue+0x3>
				return(false); /* time expired */
    dcc2:	80 e0       	ldi	r24, 0x00	; 0
    dcc4:	81 c0       	rjmp	.+258    	; 0xddc8 <util_delay_ms+0x16a>
			}
			else if(delayValue != countdownValue) /* countdown delay changed */
    dcc6:	80 91 cc 4a 	lds	r24, 0x4ACC	; 0x804acc <_ZZ13util_delay_msE14countdownValue>
    dcca:	90 91 cd 4a 	lds	r25, 0x4ACD	; 0x804acd <_ZZ13util_delay_msE14countdownValue+0x1>
    dcce:	a0 91 ce 4a 	lds	r26, 0x4ACE	; 0x804ace <_ZZ13util_delay_msE14countdownValue+0x2>
    dcd2:	b0 91 cf 4a 	lds	r27, 0x4ACF	; 0x804acf <_ZZ13util_delay_msE14countdownValue+0x3>
    dcd6:	29 81       	ldd	r18, Y+1	; 0x01
    dcd8:	3a 81       	ldd	r19, Y+2	; 0x02
    dcda:	4b 81       	ldd	r20, Y+3	; 0x03
    dcdc:	5c 81       	ldd	r21, Y+4	; 0x04
    dcde:	28 17       	cp	r18, r24
    dce0:	39 07       	cpc	r19, r25
    dce2:	4a 07       	cpc	r20, r26
    dce4:	5b 07       	cpc	r21, r27
    dce6:	09 f4       	brne	.+2      	; 0xdcea <util_delay_ms+0x8c>
    dce8:	69 c0       	rjmp	.+210    	; 0xddbc <util_delay_ms+0x15e>
			{
				TCB1.CNT = 0x0000;
    dcea:	80 e1       	ldi	r24, 0x10	; 16
    dcec:	9b e0       	ldi	r25, 0x0B	; 11
    dcee:	fc 01       	movw	r30, r24
    dcf0:	12 86       	std	Z+10, r1	; 0x0a
    dcf2:	13 86       	std	Z+11, r1	; 0x0b
				countdownValue = delayValue;
    dcf4:	89 81       	ldd	r24, Y+1	; 0x01
    dcf6:	9a 81       	ldd	r25, Y+2	; 0x02
    dcf8:	ab 81       	ldd	r26, Y+3	; 0x03
    dcfa:	bc 81       	ldd	r27, Y+4	; 0x04
    dcfc:	80 93 cc 4a 	sts	0x4ACC, r24	; 0x804acc <_ZZ13util_delay_msE14countdownValue>
    dd00:	90 93 cd 4a 	sts	0x4ACD, r25	; 0x804acd <_ZZ13util_delay_msE14countdownValue+0x1>
    dd04:	a0 93 ce 4a 	sts	0x4ACE, r26	; 0x804ace <_ZZ13util_delay_msE14countdownValue+0x2>
    dd08:	b0 93 cf 4a 	sts	0x4ACF, r27	; 0x804acf <_ZZ13util_delay_msE14countdownValue+0x3>
				g_ms_counter = delayValue;
    dd0c:	89 81       	ldd	r24, Y+1	; 0x01
    dd0e:	9a 81       	ldd	r25, Y+2	; 0x02
    dd10:	ab 81       	ldd	r26, Y+3	; 0x03
    dd12:	bc 81       	ldd	r27, Y+4	; 0x04
    dd14:	80 93 c7 4a 	sts	0x4AC7, r24	; 0x804ac7 <_ZL12g_ms_counter>
    dd18:	90 93 c8 4a 	sts	0x4AC8, r25	; 0x804ac8 <_ZL12g_ms_counter+0x1>
    dd1c:	a0 93 c9 4a 	sts	0x4AC9, r26	; 0x804ac9 <_ZL12g_ms_counter+0x2>
    dd20:	b0 93 ca 4a 	sts	0x4ACA, r27	; 0x804aca <_ZL12g_ms_counter+0x3>
				return(false);
    dd24:	80 e0       	ldi	r24, 0x00	; 0
    dd26:	50 c0       	rjmp	.+160    	; 0xddc8 <util_delay_ms+0x16a>
			}
		}
		else if(delayValue != countdownValue)
    dd28:	80 91 cc 4a 	lds	r24, 0x4ACC	; 0x804acc <_ZZ13util_delay_msE14countdownValue>
    dd2c:	90 91 cd 4a 	lds	r25, 0x4ACD	; 0x804acd <_ZZ13util_delay_msE14countdownValue+0x1>
    dd30:	a0 91 ce 4a 	lds	r26, 0x4ACE	; 0x804ace <_ZZ13util_delay_msE14countdownValue+0x2>
    dd34:	b0 91 cf 4a 	lds	r27, 0x4ACF	; 0x804acf <_ZZ13util_delay_msE14countdownValue+0x3>
    dd38:	29 81       	ldd	r18, Y+1	; 0x01
    dd3a:	3a 81       	ldd	r19, Y+2	; 0x02
    dd3c:	4b 81       	ldd	r20, Y+3	; 0x03
    dd3e:	5c 81       	ldd	r21, Y+4	; 0x04
    dd40:	28 17       	cp	r18, r24
    dd42:	39 07       	cpc	r19, r25
    dd44:	4a 07       	cpc	r20, r26
    dd46:	5b 07       	cpc	r21, r27
    dd48:	c9 f1       	breq	.+114    	; 0xddbc <util_delay_ms+0x15e>
		{
			TCB1.CNT = 0x0000;
    dd4a:	80 e1       	ldi	r24, 0x10	; 16
    dd4c:	9b e0       	ldi	r25, 0x0B	; 11
    dd4e:	fc 01       	movw	r30, r24
    dd50:	12 86       	std	Z+10, r1	; 0x0a
    dd52:	13 86       	std	Z+11, r1	; 0x0b
			countdownValue = delayValue;
    dd54:	89 81       	ldd	r24, Y+1	; 0x01
    dd56:	9a 81       	ldd	r25, Y+2	; 0x02
    dd58:	ab 81       	ldd	r26, Y+3	; 0x03
    dd5a:	bc 81       	ldd	r27, Y+4	; 0x04
    dd5c:	80 93 cc 4a 	sts	0x4ACC, r24	; 0x804acc <_ZZ13util_delay_msE14countdownValue>
    dd60:	90 93 cd 4a 	sts	0x4ACD, r25	; 0x804acd <_ZZ13util_delay_msE14countdownValue+0x1>
    dd64:	a0 93 ce 4a 	sts	0x4ACE, r26	; 0x804ace <_ZZ13util_delay_msE14countdownValue+0x2>
    dd68:	b0 93 cf 4a 	sts	0x4ACF, r27	; 0x804acf <_ZZ13util_delay_msE14countdownValue+0x3>
			g_ms_counter = delayValue;
    dd6c:	89 81       	ldd	r24, Y+1	; 0x01
    dd6e:	9a 81       	ldd	r25, Y+2	; 0x02
    dd70:	ab 81       	ldd	r26, Y+3	; 0x03
    dd72:	bc 81       	ldd	r27, Y+4	; 0x04
    dd74:	80 93 c7 4a 	sts	0x4AC7, r24	; 0x804ac7 <_ZL12g_ms_counter>
    dd78:	90 93 c8 4a 	sts	0x4AC8, r25	; 0x804ac8 <_ZL12g_ms_counter+0x1>
    dd7c:	a0 93 c9 4a 	sts	0x4AC9, r26	; 0x804ac9 <_ZL12g_ms_counter+0x2>
    dd80:	b0 93 ca 4a 	sts	0x4ACA, r27	; 0x804aca <_ZL12g_ms_counter+0x3>
			counting = true;
    dd84:	81 e0       	ldi	r24, 0x01	; 1
    dd86:	80 93 cb 4a 	sts	0x4ACB, r24	; 0x804acb <_ZZ13util_delay_msE8counting>
    dd8a:	18 c0       	rjmp	.+48     	; 0xddbc <util_delay_ms+0x15e>
		}
	}
	else
	{
		TCB1.INTCTRL = 0 << TCB_CAPT_bp   /* Capture or Timeout: disabled */
    dd8c:	80 e1       	ldi	r24, 0x10	; 16
    dd8e:	9b e0       	ldi	r25, 0x0B	; 11
		| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    dd90:	fc 01       	movw	r30, r24
    dd92:	15 82       	std	Z+5, r1	; 0x05

		counting = false;
    dd94:	10 92 cb 4a 	sts	0x4ACB, r1	; 0x804acb <_ZZ13util_delay_msE8counting>
		countdownValue = 0;
    dd98:	10 92 cc 4a 	sts	0x4ACC, r1	; 0x804acc <_ZZ13util_delay_msE14countdownValue>
    dd9c:	10 92 cd 4a 	sts	0x4ACD, r1	; 0x804acd <_ZZ13util_delay_msE14countdownValue+0x1>
    dda0:	10 92 ce 4a 	sts	0x4ACE, r1	; 0x804ace <_ZZ13util_delay_msE14countdownValue+0x2>
    dda4:	10 92 cf 4a 	sts	0x4ACF, r1	; 0x804acf <_ZZ13util_delay_msE14countdownValue+0x3>
		g_ms_counter = 0;
    dda8:	10 92 c7 4a 	sts	0x4AC7, r1	; 0x804ac7 <_ZL12g_ms_counter>
    ddac:	10 92 c8 4a 	sts	0x4AC8, r1	; 0x804ac8 <_ZL12g_ms_counter+0x1>
    ddb0:	10 92 c9 4a 	sts	0x4AC9, r1	; 0x804ac9 <_ZL12g_ms_counter+0x2>
    ddb4:	10 92 ca 4a 	sts	0x4ACA, r1	; 0x804aca <_ZL12g_ms_counter+0x3>
		return(false); /* timer reset */
    ddb8:	80 e0       	ldi	r24, 0x00	; 0
    ddba:	06 c0       	rjmp	.+12     	; 0xddc8 <util_delay_ms+0x16a>
	}
	
	TCB1.INTCTRL = 1 << TCB_CAPT_bp   /* Capture or Timeout: enabled */
    ddbc:	80 e1       	ldi	r24, 0x10	; 16
    ddbe:	9b e0       	ldi	r25, 0x0B	; 11
	| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    ddc0:	21 e0       	ldi	r18, 0x01	; 1
    ddc2:	fc 01       	movw	r30, r24
    ddc4:	25 83       	std	Z+5, r18	; 0x05
	
	return(true);
    ddc6:	81 e0       	ldi	r24, 0x01	; 1
}
    ddc8:	24 96       	adiw	r28, 0x04	; 4
    ddca:	cd bf       	out	0x3d, r28	; 61
    ddcc:	de bf       	out	0x3e, r29	; 62
    ddce:	df 91       	pop	r29
    ddd0:	cf 91       	pop	r28
    ddd2:	08 95       	ret

0000ddd4 <__vector_13>:

/**
One millisecond utility counter based on CPU clock.
*/
ISR(TCB1_INT_vect)
{
    ddd4:	1f 92       	push	r1
    ddd6:	0f 92       	push	r0
    ddd8:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    dddc:	0f 92       	push	r0
    ddde:	11 24       	eor	r1, r1
    dde0:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    dde4:	0f 92       	push	r0
    dde6:	2f 93       	push	r18
    dde8:	8f 93       	push	r24
    ddea:	9f 93       	push	r25
    ddec:	af 93       	push	r26
    ddee:	bf 93       	push	r27
    ddf0:	ef 93       	push	r30
    ddf2:	ff 93       	push	r31
    ddf4:	cf 93       	push	r28
    ddf6:	df 93       	push	r29
    ddf8:	cd b7       	in	r28, 0x3d	; 61
    ddfa:	de b7       	in	r29, 0x3e	; 62
    if(TCB1.INTFLAGS & TCB_CAPT_bm)
    ddfc:	80 e1       	ldi	r24, 0x10	; 16
    ddfe:	9b e0       	ldi	r25, 0x0B	; 11
    de00:	fc 01       	movw	r30, r24
    de02:	86 81       	ldd	r24, Z+6	; 0x06
    de04:	88 2f       	mov	r24, r24
    de06:	90 e0       	ldi	r25, 0x00	; 0
    de08:	81 70       	andi	r24, 0x01	; 1
    de0a:	99 27       	eor	r25, r25
    de0c:	21 e0       	ldi	r18, 0x01	; 1
    de0e:	89 2b       	or	r24, r25
    de10:	09 f4       	brne	.+2      	; 0xde14 <__vector_13+0x40>
    de12:	20 e0       	ldi	r18, 0x00	; 0
    de14:	22 23       	and	r18, r18
    de16:	49 f1       	breq	.+82     	; 0xde6a <__vector_13+0x96>
    {
		if(g_ms_counter) /* check for 1-second interval */
    de18:	80 91 c7 4a 	lds	r24, 0x4AC7	; 0x804ac7 <_ZL12g_ms_counter>
    de1c:	90 91 c8 4a 	lds	r25, 0x4AC8	; 0x804ac8 <_ZL12g_ms_counter+0x1>
    de20:	a0 91 c9 4a 	lds	r26, 0x4AC9	; 0x804ac9 <_ZL12g_ms_counter+0x2>
    de24:	b0 91 ca 4a 	lds	r27, 0x4ACA	; 0x804aca <_ZL12g_ms_counter+0x3>
    de28:	89 2b       	or	r24, r25
    de2a:	8a 2b       	or	r24, r26
    de2c:	8b 2b       	or	r24, r27
    de2e:	a1 f0       	breq	.+40     	; 0xde58 <__vector_13+0x84>
		{
			g_ms_counter--;	
    de30:	80 91 c7 4a 	lds	r24, 0x4AC7	; 0x804ac7 <_ZL12g_ms_counter>
    de34:	90 91 c8 4a 	lds	r25, 0x4AC8	; 0x804ac8 <_ZL12g_ms_counter+0x1>
    de38:	a0 91 c9 4a 	lds	r26, 0x4AC9	; 0x804ac9 <_ZL12g_ms_counter+0x2>
    de3c:	b0 91 ca 4a 	lds	r27, 0x4ACA	; 0x804aca <_ZL12g_ms_counter+0x3>
    de40:	01 97       	sbiw	r24, 0x01	; 1
    de42:	a1 09       	sbc	r26, r1
    de44:	b1 09       	sbc	r27, r1
    de46:	80 93 c7 4a 	sts	0x4AC7, r24	; 0x804ac7 <_ZL12g_ms_counter>
    de4a:	90 93 c8 4a 	sts	0x4AC8, r25	; 0x804ac8 <_ZL12g_ms_counter+0x1>
    de4e:	a0 93 c9 4a 	sts	0x4AC9, r26	; 0x804ac9 <_ZL12g_ms_counter+0x2>
    de52:	b0 93 ca 4a 	sts	0x4ACA, r27	; 0x804aca <_ZL12g_ms_counter+0x3>
    de56:	04 c0       	rjmp	.+8      	; 0xde60 <__vector_13+0x8c>
		}
		else
		{
			TCB1.INTCTRL = 0 << TCB_CAPT_bp   /* Capture or Timeout: disabled */
    de58:	80 e1       	ldi	r24, 0x10	; 16
    de5a:	9b e0       	ldi	r25, 0x0B	; 11
			| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    de5c:	fc 01       	movw	r30, r24
    de5e:	15 82       	std	Z+5, r1	; 0x05
		}

        TCB1.INTFLAGS = TCB_CAPT_bm; /* clear interrupt flag */
    de60:	80 e1       	ldi	r24, 0x10	; 16
    de62:	9b e0       	ldi	r25, 0x0B	; 11
    de64:	21 e0       	ldi	r18, 0x01	; 1
    de66:	fc 01       	movw	r30, r24
    de68:	26 83       	std	Z+6, r18	; 0x06
    }
}
    de6a:	00 00       	nop
    de6c:	df 91       	pop	r29
    de6e:	cf 91       	pop	r28
    de70:	ff 91       	pop	r31
    de72:	ef 91       	pop	r30
    de74:	bf 91       	pop	r27
    de76:	af 91       	pop	r26
    de78:	9f 91       	pop	r25
    de7a:	8f 91       	pop	r24
    de7c:	2f 91       	pop	r18
    de7e:	0f 90       	pop	r0
    de80:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    de84:	0f 90       	pop	r0
    de86:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    de8a:	0f 90       	pop	r0
    de8c:	1f 90       	pop	r1
    de8e:	18 95       	reti

0000de90 <_Z14txSetFrequencyPmb>:
				g_tx_initialized = true;
			}
		}

		return( code);
	}
    de90:	cf 93       	push	r28
    de92:	df 93       	push	r29
    de94:	00 d0       	rcall	.+0      	; 0xde96 <_Z14txSetFrequencyPmb+0x6>
    de96:	00 d0       	rcall	.+0      	; 0xde98 <_Z14txSetFrequencyPmb+0x8>
    de98:	cd b7       	in	r28, 0x3d	; 61
    de9a:	de b7       	in	r29, 0x3e	; 62
    de9c:	8a 83       	std	Y+2, r24	; 0x02
    de9e:	9b 83       	std	Y+3, r25	; 0x03
    dea0:	6c 83       	std	Y+4, r22	; 0x04
    dea2:	81 e0       	ldi	r24, 0x01	; 1
    dea4:	89 83       	std	Y+1, r24	; 0x01
    dea6:	8a 81       	ldd	r24, Y+2	; 0x02
    dea8:	9b 81       	ldd	r25, Y+3	; 0x03
    deaa:	89 2b       	or	r24, r25
    deac:	11 f4       	brne	.+4      	; 0xdeb2 <_Z14txSetFrequencyPmb+0x22>
    deae:	89 81       	ldd	r24, Y+1	; 0x01
    deb0:	3b c0       	rjmp	.+118    	; 0xdf28 <_Z14txSetFrequencyPmb+0x98>
    deb2:	8a 81       	ldd	r24, Y+2	; 0x02
    deb4:	9b 81       	ldd	r25, Y+3	; 0x03
    deb6:	fc 01       	movw	r30, r24
    deb8:	80 81       	ld	r24, Z
    deba:	91 81       	ldd	r25, Z+1	; 0x01
    debc:	a2 81       	ldd	r26, Z+2	; 0x02
    debe:	b3 81       	ldd	r27, Z+3	; 0x03
    dec0:	81 15       	cp	r24, r1
    dec2:	99 40       	sbci	r25, 0x09	; 9
    dec4:	ad 43       	sbci	r26, 0x3D	; 61
    dec6:	b1 05       	cpc	r27, r1
    dec8:	70 f5       	brcc	.+92     	; 0xdf26 <_Z14txSetFrequencyPmb+0x96>
    deca:	8a 81       	ldd	r24, Y+2	; 0x02
    decc:	9b 81       	ldd	r25, Y+3	; 0x03
    dece:	fc 01       	movw	r30, r24
    ded0:	80 81       	ld	r24, Z
    ded2:	91 81       	ldd	r25, Z+1	; 0x01
    ded4:	a2 81       	ldd	r26, Z+2	; 0x02
    ded6:	b3 81       	ldd	r27, Z+3	; 0x03
    ded8:	81 3e       	cpi	r24, 0xE1	; 225
    deda:	97 46       	sbci	r25, 0x67	; 103
    dedc:	a5 43       	sbci	r26, 0x35	; 53
    dede:	b1 05       	cpc	r27, r1
    dee0:	10 f1       	brcs	.+68     	; 0xdf26 <_Z14txSetFrequencyPmb+0x96>
    dee2:	8a 81       	ldd	r24, Y+2	; 0x02
    dee4:	9b 81       	ldd	r25, Y+3	; 0x03
    dee6:	fc 01       	movw	r30, r24
    dee8:	80 81       	ld	r24, Z
    deea:	91 81       	ldd	r25, Z+1	; 0x01
    deec:	a2 81       	ldd	r26, Z+2	; 0x02
    deee:	b3 81       	ldd	r27, Z+3	; 0x03
    def0:	2c 81       	ldd	r18, Y+4	; 0x04
    def2:	41 e0       	ldi	r20, 0x01	; 1
    def4:	bc 01       	movw	r22, r24
    def6:	cd 01       	movw	r24, r26
    def8:	0e 94 a6 64 	call	0xc94c	; 0xc94c <si5351_set_freq>
    defc:	98 2f       	mov	r25, r24
    defe:	81 e0       	ldi	r24, 0x01	; 1
    df00:	89 27       	eor	r24, r25
    df02:	88 23       	and	r24, r24
    df04:	81 f0       	breq	.+32     	; 0xdf26 <_Z14txSetFrequencyPmb+0x96>
    df06:	8a 81       	ldd	r24, Y+2	; 0x02
    df08:	9b 81       	ldd	r25, Y+3	; 0x03
    df0a:	fc 01       	movw	r30, r24
    df0c:	80 81       	ld	r24, Z
    df0e:	91 81       	ldd	r25, Z+1	; 0x01
    df10:	a2 81       	ldd	r26, Z+2	; 0x02
    df12:	b3 81       	ldd	r27, Z+3	; 0x03
    df14:	80 93 34 40 	sts	0x4034, r24	; 0x804034 <g_80m_frequency>
    df18:	90 93 35 40 	sts	0x4035, r25	; 0x804035 <g_80m_frequency+0x1>
    df1c:	a0 93 36 40 	sts	0x4036, r26	; 0x804036 <g_80m_frequency+0x2>
    df20:	b0 93 37 40 	sts	0x4037, r27	; 0x804037 <g_80m_frequency+0x3>
    df24:	19 82       	std	Y+1, r1	; 0x01
    df26:	89 81       	ldd	r24, Y+1	; 0x01
    df28:	24 96       	adiw	r28, 0x04	; 4
    df2a:	cd bf       	out	0x3d, r28	; 61
    df2c:	de bf       	out	0x3e, r29	; 62
    df2e:	df 91       	pop	r29
    df30:	cf 91       	pop	r28
    df32:	08 95       	ret

0000df34 <_Z14txGetFrequencyv>:
    df34:	cf 93       	push	r28
    df36:	df 93       	push	r29
    df38:	cd b7       	in	r28, 0x3d	; 61
    df3a:	de b7       	in	r29, 0x3e	; 62
    df3c:	80 91 34 40 	lds	r24, 0x4034	; 0x804034 <g_80m_frequency>
    df40:	90 91 35 40 	lds	r25, 0x4035	; 0x804035 <g_80m_frequency+0x1>
    df44:	a0 91 36 40 	lds	r26, 0x4036	; 0x804036 <g_80m_frequency+0x2>
    df48:	b0 91 37 40 	lds	r27, 0x4037	; 0x804037 <g_80m_frequency+0x3>
    df4c:	bc 01       	movw	r22, r24
    df4e:	cd 01       	movw	r24, r26
    df50:	df 91       	pop	r29
    df52:	cf 91       	pop	r28
    df54:	08 95       	ret

0000df56 <_Z18powerToTransmitterb>:
    df56:	cf 93       	push	r28
    df58:	df 93       	push	r29
    df5a:	1f 92       	push	r1
    df5c:	cd b7       	in	r28, 0x3d	; 61
    df5e:	de b7       	in	r29, 0x3e	; 62
    df60:	89 83       	std	Y+1, r24	; 0x01
    df62:	89 81       	ldd	r24, Y+1	; 0x01
    df64:	0e 94 8e 3b 	call	0x771c	; 0x771c <_Z19final_drain_voltageb>
    df68:	89 81       	ldd	r24, Y+1	; 0x01
    df6a:	0e 94 77 3b 	call	0x76ee	; 0x76ee <_Z10fet_driverb>
    df6e:	80 e0       	ldi	r24, 0x00	; 0
    df70:	0f 90       	pop	r0
    df72:	df 91       	pop	r29
    df74:	cf 91       	pop	r28
    df76:	08 95       	ret

0000df78 <_Z14keyTransmitterb>:
    df78:	cf 93       	push	r28
    df7a:	df 93       	push	r29
    df7c:	1f 92       	push	r1
    df7e:	cd b7       	in	r28, 0x3d	; 61
    df80:	de b7       	in	r29, 0x3e	; 62
    df82:	89 83       	std	Y+1, r24	; 0x01
    df84:	80 91 d0 4a 	lds	r24, 0x4AD0	; 0x804ad0 <_ZL16g_tx_initialized>
    df88:	88 23       	and	r24, r24
    df8a:	29 f1       	breq	.+74     	; 0xdfd6 <_Z14keyTransmitterb+0x5e>
    df8c:	89 81       	ldd	r24, Y+1	; 0x01
    df8e:	88 23       	and	r24, r24
    df90:	a9 f0       	breq	.+42     	; 0xdfbc <_Z14keyTransmitterb+0x44>
    df92:	90 91 d1 4a 	lds	r25, 0x4AD1	; 0x804ad1 <_ZL19g_transmitter_keyed>
    df96:	81 e0       	ldi	r24, 0x01	; 1
    df98:	89 27       	eor	r24, r25
    df9a:	88 23       	and	r24, r24
    df9c:	e1 f0       	breq	.+56     	; 0xdfd6 <_Z14keyTransmitterb+0x5e>
    df9e:	61 e0       	ldi	r22, 0x01	; 1
    dfa0:	81 e0       	ldi	r24, 0x01	; 1
    dfa2:	0e 94 47 66 	call	0xcc8e	; 0xcc8e <si5351_clock_enable>
    dfa6:	98 2f       	mov	r25, r24
    dfa8:	81 e0       	ldi	r24, 0x01	; 1
    dfaa:	99 23       	and	r25, r25
    dfac:	09 f0       	breq	.+2      	; 0xdfb0 <_Z14keyTransmitterb+0x38>
    dfae:	80 e0       	ldi	r24, 0x00	; 0
    dfb0:	88 23       	and	r24, r24
    dfb2:	89 f0       	breq	.+34     	; 0xdfd6 <_Z14keyTransmitterb+0x5e>
    dfb4:	81 e0       	ldi	r24, 0x01	; 1
    dfb6:	80 93 d1 4a 	sts	0x4AD1, r24	; 0x804ad1 <_ZL19g_transmitter_keyed>
    dfba:	0d c0       	rjmp	.+26     	; 0xdfd6 <_Z14keyTransmitterb+0x5e>
    dfbc:	60 e0       	ldi	r22, 0x00	; 0
    dfbe:	81 e0       	ldi	r24, 0x01	; 1
    dfc0:	0e 94 47 66 	call	0xcc8e	; 0xcc8e <si5351_clock_enable>
    dfc4:	98 2f       	mov	r25, r24
    dfc6:	81 e0       	ldi	r24, 0x01	; 1
    dfc8:	99 23       	and	r25, r25
    dfca:	09 f0       	breq	.+2      	; 0xdfce <_Z14keyTransmitterb+0x56>
    dfcc:	80 e0       	ldi	r24, 0x00	; 0
    dfce:	88 23       	and	r24, r24
    dfd0:	11 f0       	breq	.+4      	; 0xdfd6 <_Z14keyTransmitterb+0x5e>
    dfd2:	10 92 d1 4a 	sts	0x4AD1, r1	; 0x804ad1 <_ZL19g_transmitter_keyed>
    dfd6:	00 00       	nop
    dfd8:	0f 90       	pop	r0
    dfda:	df 91       	pop	r29
    dfdc:	cf 91       	pop	r28
    dfde:	08 95       	ret

0000dfe0 <_Z12txGetPowerMwv>:
    dfe0:	cf 93       	push	r28
    dfe2:	df 93       	push	r29
    dfe4:	cd b7       	in	r28, 0x3d	; 61
    dfe6:	de b7       	in	r29, 0x3e	; 62
    dfe8:	80 91 38 40 	lds	r24, 0x4038	; 0x804038 <g_80m_power_level_mW>
    dfec:	90 91 39 40 	lds	r25, 0x4039	; 0x804039 <g_80m_power_level_mW+0x1>
    dff0:	df 91       	pop	r29
    dff2:	cf 91       	pop	r28
    dff4:	08 95       	ret

0000dff6 <_Z15txSetParametersPjPb>:
    dff6:	cf 93       	push	r28
    dff8:	df 93       	push	r29
    dffa:	cd b7       	in	r28, 0x3d	; 61
    dffc:	de b7       	in	r29, 0x3e	; 62
    dffe:	2c 97       	sbiw	r28, 0x0c	; 12
    e000:	cd bf       	out	0x3d, r28	; 61
    e002:	de bf       	out	0x3e, r29	; 62
    e004:	89 87       	std	Y+9, r24	; 0x09
    e006:	9a 87       	std	Y+10, r25	; 0x0a
    e008:	6b 87       	std	Y+11, r22	; 0x0b
    e00a:	7c 87       	std	Y+12, r23	; 0x0c
    e00c:	19 82       	std	Y+1, r1	; 0x01
    e00e:	1a 82       	std	Y+2, r1	; 0x02
    e010:	1b 82       	std	Y+3, r1	; 0x03
    e012:	1c 82       	std	Y+4, r1	; 0x04
    e014:	89 85       	ldd	r24, Y+9	; 0x09
    e016:	9a 85       	ldd	r25, Y+10	; 0x0a
    e018:	89 2b       	or	r24, r25
    e01a:	09 f4       	brne	.+2      	; 0xe01e <_Z15txSetParametersPjPb+0x28>
    e01c:	68 c0       	rjmp	.+208    	; 0xe0ee <_Z15txSetParametersPjPb+0xf8>
    e01e:	89 85       	ldd	r24, Y+9	; 0x09
    e020:	9a 85       	ldd	r25, Y+10	; 0x0a
    e022:	fc 01       	movw	r30, r24
    e024:	80 81       	ld	r24, Z
    e026:	91 81       	ldd	r25, Z+1	; 0x01
    e028:	8b 83       	std	Y+3, r24	; 0x03
    e02a:	9c 83       	std	Y+4, r25	; 0x04
    e02c:	8b 81       	ldd	r24, Y+3	; 0x03
    e02e:	9c 81       	ldd	r25, Y+4	; 0x04
    e030:	89 38       	cpi	r24, 0x89	; 137
    e032:	93 41       	sbci	r25, 0x13	; 19
    e034:	08 f0       	brcs	.+2      	; 0xe038 <_Z15txSetParametersPjPb+0x42>
    e036:	57 c0       	rjmp	.+174    	; 0xe0e6 <_Z15txSetParametersPjPb+0xf0>
    e038:	9e 01       	movw	r18, r28
    e03a:	28 5f       	subi	r18, 0xF8	; 248
    e03c:	3f 4f       	sbci	r19, 0xFF	; 255
    e03e:	ae 01       	movw	r20, r28
    e040:	49 5f       	subi	r20, 0xF9	; 249
    e042:	5f 4f       	sbci	r21, 0xFF	; 255
    e044:	be 01       	movw	r22, r28
    e046:	6b 5f       	subi	r22, 0xFB	; 251
    e048:	7f 4f       	sbci	r23, 0xFF	; 255
    e04a:	ce 01       	movw	r24, r28
    e04c:	03 96       	adiw	r24, 0x03	; 3
    e04e:	0e 94 97 70 	call	0xe12e	; 0xe12e <_Z22txMilliwattsToSettingsPjS_PhS0_>
    e052:	8a 83       	std	Y+2, r24	; 0x02
    e054:	81 e0       	ldi	r24, 0x01	; 1
    e056:	9a 81       	ldd	r25, Y+2	; 0x02
    e058:	9f 3c       	cpi	r25, 0xCF	; 207
    e05a:	09 f0       	breq	.+2      	; 0xe05e <_Z15txSetParametersPjPb+0x68>
    e05c:	80 e0       	ldi	r24, 0x00	; 0
    e05e:	89 83       	std	Y+1, r24	; 0x01
    e060:	8b 81       	ldd	r24, Y+3	; 0x03
    e062:	9c 81       	ldd	r25, Y+4	; 0x04
    e064:	21 e0       	ldi	r18, 0x01	; 1
    e066:	89 2b       	or	r24, r25
    e068:	09 f0       	breq	.+2      	; 0xe06c <_Z15txSetParametersPjPb+0x76>
    e06a:	20 e0       	ldi	r18, 0x00	; 0
    e06c:	20 93 3e 40 	sts	0x403E, r18	; 0x80403e <g_tx_power_is_zero>
    e070:	99 81       	ldd	r25, Y+1	; 0x01
    e072:	81 e0       	ldi	r24, 0x01	; 1
    e074:	89 27       	eor	r24, r25
    e076:	88 23       	and	r24, r24
    e078:	71 f1       	breq	.+92     	; 0xe0d6 <_Z15txSetParametersPjPb+0xe0>
    e07a:	8b 81       	ldd	r24, Y+3	; 0x03
    e07c:	9c 81       	ldd	r25, Y+4	; 0x04
    e07e:	80 93 38 40 	sts	0x4038, r24	; 0x804038 <g_80m_power_level_mW>
    e082:	90 93 39 40 	sts	0x4039, r25	; 0x804039 <g_80m_power_level_mW+0x1>
    e086:	90 91 5f 47 	lds	r25, 0x475F	; 0x80475f <g_antenna_connect_state>
    e08a:	81 e0       	ldi	r24, 0x01	; 1
    e08c:	92 30       	cpi	r25, 0x02	; 2
    e08e:	09 f0       	breq	.+2      	; 0xe092 <_Z15txSetParametersPjPb+0x9c>
    e090:	80 e0       	ldi	r24, 0x00	; 0
    e092:	88 23       	and	r24, r24
    e094:	29 f0       	breq	.+10     	; 0xe0a0 <_Z15txSetParametersPjPb+0xaa>
    e096:	8d 81       	ldd	r24, Y+5	; 0x05
    e098:	9e 81       	ldd	r25, Y+6	; 0x06
    e09a:	0e 94 df 3c 	call	0x79be	; 0x79be <_Z11DAC0_setValj>
    e09e:	07 c0       	rjmp	.+14     	; 0xe0ae <_Z15txSetParametersPjPb+0xb8>
    e0a0:	81 e0       	ldi	r24, 0x01	; 1
    e0a2:	80 93 3e 40 	sts	0x403E, r24	; 0x80403e <g_tx_power_is_zero>
    e0a6:	81 e0       	ldi	r24, 0x01	; 1
    e0a8:	89 83       	std	Y+1, r24	; 0x01
    e0aa:	86 ef       	ldi	r24, 0xF6	; 246
    e0ac:	8a 83       	std	Y+2, r24	; 0x02
    e0ae:	80 91 3e 40 	lds	r24, 0x403E	; 0x80403e <g_tx_power_is_zero>
    e0b2:	88 23       	and	r24, r24
    e0b4:	21 f4       	brne	.+8      	; 0xe0be <_Z15txSetParametersPjPb+0xc8>
    e0b6:	8d 81       	ldd	r24, Y+5	; 0x05
    e0b8:	9e 81       	ldd	r25, Y+6	; 0x06
    e0ba:	89 2b       	or	r24, r25
    e0bc:	11 f4       	brne	.+4      	; 0xe0c2 <_Z15txSetParametersPjPb+0xcc>
    e0be:	81 e0       	ldi	r24, 0x01	; 1
    e0c0:	01 c0       	rjmp	.+2      	; 0xe0c4 <_Z15txSetParametersPjPb+0xce>
    e0c2:	80 e0       	ldi	r24, 0x00	; 0
    e0c4:	88 23       	and	r24, r24
    e0c6:	21 f0       	breq	.+8      	; 0xe0d0 <_Z15txSetParametersPjPb+0xda>
    e0c8:	80 e0       	ldi	r24, 0x00	; 0
    e0ca:	0e 94 ab 6f 	call	0xdf56	; 0xdf56 <_Z18powerToTransmitterb>
    e0ce:	03 c0       	rjmp	.+6      	; 0xe0d6 <_Z15txSetParametersPjPb+0xe0>
    e0d0:	81 e0       	ldi	r24, 0x01	; 1
    e0d2:	0e 94 ab 6f 	call	0xdf56	; 0xdf56 <_Z18powerToTransmitterb>
    e0d6:	2b 81       	ldd	r18, Y+3	; 0x03
    e0d8:	3c 81       	ldd	r19, Y+4	; 0x04
    e0da:	89 85       	ldd	r24, Y+9	; 0x09
    e0dc:	9a 85       	ldd	r25, Y+10	; 0x0a
    e0de:	fc 01       	movw	r30, r24
    e0e0:	20 83       	st	Z, r18
    e0e2:	31 83       	std	Z+1, r19	; 0x01
    e0e4:	04 c0       	rjmp	.+8      	; 0xe0ee <_Z15txSetParametersPjPb+0xf8>
    e0e6:	81 e0       	ldi	r24, 0x01	; 1
    e0e8:	89 83       	std	Y+1, r24	; 0x01
    e0ea:	85 ef       	ldi	r24, 0xF5	; 245
    e0ec:	8a 83       	std	Y+2, r24	; 0x02
    e0ee:	99 81       	ldd	r25, Y+1	; 0x01
    e0f0:	81 e0       	ldi	r24, 0x01	; 1
    e0f2:	89 27       	eor	r24, r25
    e0f4:	88 23       	and	r24, r24
    e0f6:	51 f0       	breq	.+20     	; 0xe10c <_Z15txSetParametersPjPb+0x116>
    e0f8:	8b 85       	ldd	r24, Y+11	; 0x0b
    e0fa:	9c 85       	ldd	r25, Y+12	; 0x0c
    e0fc:	89 2b       	or	r24, r25
    e0fe:	31 f0       	breq	.+12     	; 0xe10c <_Z15txSetParametersPjPb+0x116>
    e100:	8b 85       	ldd	r24, Y+11	; 0x0b
    e102:	9c 85       	ldd	r25, Y+12	; 0x0c
    e104:	fc 01       	movw	r30, r24
    e106:	80 81       	ld	r24, Z
    e108:	0e 94 ab 6f 	call	0xdf56	; 0xdf56 <_Z18powerToTransmitterb>
    e10c:	8a 81       	ldd	r24, Y+2	; 0x02
    e10e:	2c 96       	adiw	r28, 0x0c	; 12
    e110:	cd bf       	out	0x3d, r28	; 61
    e112:	de bf       	out	0x3e, r29	; 62
    e114:	df 91       	pop	r29
    e116:	cf 91       	pop	r28
    e118:	08 95       	ret

0000e11a <_Z20shutdown_transmitterv>:
    e11a:	cf 93       	push	r28
    e11c:	df 93       	push	r29
    e11e:	cd b7       	in	r28, 0x3d	; 61
    e120:	de b7       	in	r29, 0x3e	; 62
    e122:	0e 94 9c 64 	call	0xc938	; 0xc938 <si5351_shutdown>
    e126:	00 00       	nop
    e128:	df 91       	pop	r29
    e12a:	cf 91       	pop	r28
    e12c:	08 95       	ret

0000e12e <_Z22txMilliwattsToSettingsPjS_PhS0_>:


EC txMilliwattsToSettings(uint16_t* powerMW, uint16_t* driveLevel, uint8_t* modLevelHigh, uint8_t* modLevelLow)
{
    e12e:	cf 93       	push	r28
    e130:	df 93       	push	r29
    e132:	cd b7       	in	r28, 0x3d	; 61
    e134:	de b7       	in	r29, 0x3e	; 62
    e136:	66 97       	sbiw	r28, 0x16	; 22
    e138:	cd bf       	out	0x3d, r28	; 61
    e13a:	de bf       	out	0x3e, r29	; 62
    e13c:	8f 87       	std	Y+15, r24	; 0x0f
    e13e:	98 8b       	std	Y+16, r25	; 0x10
    e140:	69 8b       	std	Y+17, r22	; 0x11
    e142:	7a 8b       	std	Y+18, r23	; 0x12
    e144:	4b 8b       	std	Y+19, r20	; 0x13
    e146:	5c 8b       	std	Y+20, r21	; 0x14
    e148:	2d 8b       	std	Y+21, r18	; 0x15
    e14a:	3e 8b       	std	Y+22, r19	; 0x16
	EC ec = ERROR_CODE_NO_ERROR;
    e14c:	19 82       	std	Y+1, r1	; 0x01
	uint16_t maxPwr;
	uint8_t index;

	if(powerMW == NULL)
    e14e:	8f 85       	ldd	r24, Y+15	; 0x0f
    e150:	98 89       	ldd	r25, Y+16	; 0x10
    e152:	89 2b       	or	r24, r25
    e154:	11 f4       	brne	.+4      	; 0xe15a <_Z22txMilliwattsToSettingsPjS_PhS0_+0x2c>
	{
		return(ERROR_CODE_SW_LOGIC_ERROR);
    e156:	8f ec       	ldi	r24, 0xCF	; 207
    e158:	7e c1       	rjmp	.+764    	; 0xe456 <_Z22txMilliwattsToSettingsPjS_PhS0_+0x328>
	}

	maxPwr = MAX_TX_POWER_80M_MW;
    e15a:	88 e8       	ldi	r24, 0x88	; 136
    e15c:	93 e1       	ldi	r25, 0x13	; 19
    e15e:	8b 83       	std	Y+3, r24	; 0x03
    e160:	9c 83       	std	Y+4, r25	; 0x04

	if(*powerMW > maxPwr)
    e162:	8f 85       	ldd	r24, Y+15	; 0x0f
    e164:	98 89       	ldd	r25, Y+16	; 0x10
    e166:	fc 01       	movw	r30, r24
    e168:	20 81       	ld	r18, Z
    e16a:	31 81       	ldd	r19, Z+1	; 0x01
    e16c:	8b 81       	ldd	r24, Y+3	; 0x03
    e16e:	9c 81       	ldd	r25, Y+4	; 0x04
    e170:	82 17       	cp	r24, r18
    e172:	93 07       	cpc	r25, r19
    e174:	10 f4       	brcc	.+4      	; 0xe17a <_Z22txMilliwattsToSettingsPjS_PhS0_+0x4c>
	{
		ec = ERROR_CODE_POWER_LEVEL_NOT_SUPPORTED;
    e176:	85 ef       	ldi	r24, 0xF5	; 245
    e178:	89 83       	std	Y+1, r24	; 0x01
	}

	*powerMW = CLAMP((uint16_t)0, *powerMW, maxPwr);
    e17a:	8f 85       	ldd	r24, Y+15	; 0x0f
    e17c:	98 89       	ldd	r25, Y+16	; 0x10
    e17e:	fc 01       	movw	r30, r24
    e180:	80 81       	ld	r24, Z
    e182:	91 81       	ldd	r25, Z+1	; 0x01
    e184:	8d 83       	std	Y+5, r24	; 0x05
    e186:	9e 83       	std	Y+6, r25	; 0x06
    e188:	1f 82       	std	Y+7, r1	; 0x07
    e18a:	18 86       	std	Y+8, r1	; 0x08
    e18c:	8b 81       	ldd	r24, Y+3	; 0x03
    e18e:	9c 81       	ldd	r25, Y+4	; 0x04
    e190:	89 87       	std	Y+9, r24	; 0x09
    e192:	9a 87       	std	Y+10, r25	; 0x0a
    e194:	2d 81       	ldd	r18, Y+5	; 0x05
    e196:	3e 81       	ldd	r19, Y+6	; 0x06
    e198:	89 85       	ldd	r24, Y+9	; 0x09
    e19a:	9a 85       	ldd	r25, Y+10	; 0x0a
    e19c:	82 17       	cp	r24, r18
    e19e:	93 07       	cpc	r25, r19
    e1a0:	68 f0       	brcs	.+26     	; 0xe1bc <_Z22txMilliwattsToSettingsPjS_PhS0_+0x8e>
    e1a2:	2d 81       	ldd	r18, Y+5	; 0x05
    e1a4:	3e 81       	ldd	r19, Y+6	; 0x06
    e1a6:	8f 81       	ldd	r24, Y+7	; 0x07
    e1a8:	98 85       	ldd	r25, Y+8	; 0x08
    e1aa:	28 17       	cp	r18, r24
    e1ac:	39 07       	cpc	r19, r25
    e1ae:	18 f4       	brcc	.+6      	; 0xe1b6 <_Z22txMilliwattsToSettingsPjS_PhS0_+0x88>
    e1b0:	8f 81       	ldd	r24, Y+7	; 0x07
    e1b2:	98 85       	ldd	r25, Y+8	; 0x08
    e1b4:	05 c0       	rjmp	.+10     	; 0xe1c0 <_Z22txMilliwattsToSettingsPjS_PhS0_+0x92>
    e1b6:	8d 81       	ldd	r24, Y+5	; 0x05
    e1b8:	9e 81       	ldd	r25, Y+6	; 0x06
    e1ba:	02 c0       	rjmp	.+4      	; 0xe1c0 <_Z22txMilliwattsToSettingsPjS_PhS0_+0x92>
    e1bc:	89 85       	ldd	r24, Y+9	; 0x09
    e1be:	9a 85       	ldd	r25, Y+10	; 0x0a
    e1c0:	2f 85       	ldd	r18, Y+15	; 0x0f
    e1c2:	38 89       	ldd	r19, Y+16	; 0x10
    e1c4:	f9 01       	movw	r30, r18
    e1c6:	80 83       	st	Z, r24
    e1c8:	91 83       	std	Z+1, r25	; 0x01

	if(*powerMW < 5)
    e1ca:	8f 85       	ldd	r24, Y+15	; 0x0f
    e1cc:	98 89       	ldd	r25, Y+16	; 0x10
    e1ce:	fc 01       	movw	r30, r24
    e1d0:	80 81       	ld	r24, Z
    e1d2:	91 81       	ldd	r25, Z+1	; 0x01
    e1d4:	05 97       	sbiw	r24, 0x05	; 5
    e1d6:	38 f4       	brcc	.+14     	; 0xe1e6 <_Z22txMilliwattsToSettingsPjS_PhS0_+0xb8>
	{
		index = 0;
    e1d8:	1a 82       	std	Y+2, r1	; 0x02
		*powerMW = 0;
    e1da:	8f 85       	ldd	r24, Y+15	; 0x0f
    e1dc:	98 89       	ldd	r25, Y+16	; 0x10
    e1de:	fc 01       	movw	r30, r24
    e1e0:	10 82       	st	Z, r1
    e1e2:	11 82       	std	Z+1, r1	; 0x01
    e1e4:	04 c1       	rjmp	.+520    	; 0xe3ee <_Z22txMilliwattsToSettingsPjS_PhS0_+0x2c0>
	}
	else if(*powerMW < 50)
    e1e6:	8f 85       	ldd	r24, Y+15	; 0x0f
    e1e8:	98 89       	ldd	r25, Y+16	; 0x10
    e1ea:	fc 01       	movw	r30, r24
    e1ec:	80 81       	ld	r24, Z
    e1ee:	91 81       	ldd	r25, Z+1	; 0x01
    e1f0:	c2 97       	sbiw	r24, 0x32	; 50
    e1f2:	50 f4       	brcc	.+20     	; 0xe208 <_Z22txMilliwattsToSettingsPjS_PhS0_+0xda>
	{
		index = 1;
    e1f4:	81 e0       	ldi	r24, 0x01	; 1
    e1f6:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 10;
    e1f8:	8f 85       	ldd	r24, Y+15	; 0x0f
    e1fa:	98 89       	ldd	r25, Y+16	; 0x10
    e1fc:	2a e0       	ldi	r18, 0x0A	; 10
    e1fe:	30 e0       	ldi	r19, 0x00	; 0
    e200:	fc 01       	movw	r30, r24
    e202:	20 83       	st	Z, r18
    e204:	31 83       	std	Z+1, r19	; 0x01
    e206:	f3 c0       	rjmp	.+486    	; 0xe3ee <_Z22txMilliwattsToSettingsPjS_PhS0_+0x2c0>
	}
	else if(*powerMW < 150)
    e208:	8f 85       	ldd	r24, Y+15	; 0x0f
    e20a:	98 89       	ldd	r25, Y+16	; 0x10
    e20c:	fc 01       	movw	r30, r24
    e20e:	80 81       	ld	r24, Z
    e210:	91 81       	ldd	r25, Z+1	; 0x01
    e212:	86 39       	cpi	r24, 0x96	; 150
    e214:	91 05       	cpc	r25, r1
    e216:	50 f4       	brcc	.+20     	; 0xe22c <_Z22txMilliwattsToSettingsPjS_PhS0_+0xfe>
	{
		index = 2;
    e218:	82 e0       	ldi	r24, 0x02	; 2
    e21a:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 100;
    e21c:	8f 85       	ldd	r24, Y+15	; 0x0f
    e21e:	98 89       	ldd	r25, Y+16	; 0x10
    e220:	24 e6       	ldi	r18, 0x64	; 100
    e222:	30 e0       	ldi	r19, 0x00	; 0
    e224:	fc 01       	movw	r30, r24
    e226:	20 83       	st	Z, r18
    e228:	31 83       	std	Z+1, r19	; 0x01
    e22a:	e1 c0       	rjmp	.+450    	; 0xe3ee <_Z22txMilliwattsToSettingsPjS_PhS0_+0x2c0>
	}
	else if(*powerMW < 250)
    e22c:	8f 85       	ldd	r24, Y+15	; 0x0f
    e22e:	98 89       	ldd	r25, Y+16	; 0x10
    e230:	fc 01       	movw	r30, r24
    e232:	80 81       	ld	r24, Z
    e234:	91 81       	ldd	r25, Z+1	; 0x01
    e236:	8a 3f       	cpi	r24, 0xFA	; 250
    e238:	91 05       	cpc	r25, r1
    e23a:	50 f4       	brcc	.+20     	; 0xe250 <_Z22txMilliwattsToSettingsPjS_PhS0_+0x122>
	{
		index = 3;
    e23c:	83 e0       	ldi	r24, 0x03	; 3
    e23e:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 200;
    e240:	8f 85       	ldd	r24, Y+15	; 0x0f
    e242:	98 89       	ldd	r25, Y+16	; 0x10
    e244:	28 ec       	ldi	r18, 0xC8	; 200
    e246:	30 e0       	ldi	r19, 0x00	; 0
    e248:	fc 01       	movw	r30, r24
    e24a:	20 83       	st	Z, r18
    e24c:	31 83       	std	Z+1, r19	; 0x01
    e24e:	cf c0       	rjmp	.+414    	; 0xe3ee <_Z22txMilliwattsToSettingsPjS_PhS0_+0x2c0>
	}
	else if(*powerMW < 350)
    e250:	8f 85       	ldd	r24, Y+15	; 0x0f
    e252:	98 89       	ldd	r25, Y+16	; 0x10
    e254:	fc 01       	movw	r30, r24
    e256:	80 81       	ld	r24, Z
    e258:	91 81       	ldd	r25, Z+1	; 0x01
    e25a:	8e 35       	cpi	r24, 0x5E	; 94
    e25c:	91 40       	sbci	r25, 0x01	; 1
    e25e:	50 f4       	brcc	.+20     	; 0xe274 <_Z22txMilliwattsToSettingsPjS_PhS0_+0x146>
	{
		index = 4;
    e260:	84 e0       	ldi	r24, 0x04	; 4
    e262:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 300;
    e264:	8f 85       	ldd	r24, Y+15	; 0x0f
    e266:	98 89       	ldd	r25, Y+16	; 0x10
    e268:	2c e2       	ldi	r18, 0x2C	; 44
    e26a:	31 e0       	ldi	r19, 0x01	; 1
    e26c:	fc 01       	movw	r30, r24
    e26e:	20 83       	st	Z, r18
    e270:	31 83       	std	Z+1, r19	; 0x01
    e272:	bd c0       	rjmp	.+378    	; 0xe3ee <_Z22txMilliwattsToSettingsPjS_PhS0_+0x2c0>
	}
	else if(*powerMW < 450)
    e274:	8f 85       	ldd	r24, Y+15	; 0x0f
    e276:	98 89       	ldd	r25, Y+16	; 0x10
    e278:	fc 01       	movw	r30, r24
    e27a:	80 81       	ld	r24, Z
    e27c:	91 81       	ldd	r25, Z+1	; 0x01
    e27e:	82 3c       	cpi	r24, 0xC2	; 194
    e280:	91 40       	sbci	r25, 0x01	; 1
    e282:	50 f4       	brcc	.+20     	; 0xe298 <_Z22txMilliwattsToSettingsPjS_PhS0_+0x16a>
	{
		index = 5;
    e284:	85 e0       	ldi	r24, 0x05	; 5
    e286:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 400;
    e288:	8f 85       	ldd	r24, Y+15	; 0x0f
    e28a:	98 89       	ldd	r25, Y+16	; 0x10
    e28c:	20 e9       	ldi	r18, 0x90	; 144
    e28e:	31 e0       	ldi	r19, 0x01	; 1
    e290:	fc 01       	movw	r30, r24
    e292:	20 83       	st	Z, r18
    e294:	31 83       	std	Z+1, r19	; 0x01
    e296:	ab c0       	rjmp	.+342    	; 0xe3ee <_Z22txMilliwattsToSettingsPjS_PhS0_+0x2c0>
	}
	else if(*powerMW < 550)
    e298:	8f 85       	ldd	r24, Y+15	; 0x0f
    e29a:	98 89       	ldd	r25, Y+16	; 0x10
    e29c:	fc 01       	movw	r30, r24
    e29e:	80 81       	ld	r24, Z
    e2a0:	91 81       	ldd	r25, Z+1	; 0x01
    e2a2:	86 32       	cpi	r24, 0x26	; 38
    e2a4:	92 40       	sbci	r25, 0x02	; 2
    e2a6:	50 f4       	brcc	.+20     	; 0xe2bc <_Z22txMilliwattsToSettingsPjS_PhS0_+0x18e>
	{
		index = 6;
    e2a8:	86 e0       	ldi	r24, 0x06	; 6
    e2aa:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 500;
    e2ac:	8f 85       	ldd	r24, Y+15	; 0x0f
    e2ae:	98 89       	ldd	r25, Y+16	; 0x10
    e2b0:	24 ef       	ldi	r18, 0xF4	; 244
    e2b2:	31 e0       	ldi	r19, 0x01	; 1
    e2b4:	fc 01       	movw	r30, r24
    e2b6:	20 83       	st	Z, r18
    e2b8:	31 83       	std	Z+1, r19	; 0x01
    e2ba:	99 c0       	rjmp	.+306    	; 0xe3ee <_Z22txMilliwattsToSettingsPjS_PhS0_+0x2c0>
	}
	else if(*powerMW < 650)
    e2bc:	8f 85       	ldd	r24, Y+15	; 0x0f
    e2be:	98 89       	ldd	r25, Y+16	; 0x10
    e2c0:	fc 01       	movw	r30, r24
    e2c2:	80 81       	ld	r24, Z
    e2c4:	91 81       	ldd	r25, Z+1	; 0x01
    e2c6:	8a 38       	cpi	r24, 0x8A	; 138
    e2c8:	92 40       	sbci	r25, 0x02	; 2
    e2ca:	50 f4       	brcc	.+20     	; 0xe2e0 <_Z22txMilliwattsToSettingsPjS_PhS0_+0x1b2>
	{
		index = 7;
    e2cc:	87 e0       	ldi	r24, 0x07	; 7
    e2ce:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 600;
    e2d0:	8f 85       	ldd	r24, Y+15	; 0x0f
    e2d2:	98 89       	ldd	r25, Y+16	; 0x10
    e2d4:	28 e5       	ldi	r18, 0x58	; 88
    e2d6:	32 e0       	ldi	r19, 0x02	; 2
    e2d8:	fc 01       	movw	r30, r24
    e2da:	20 83       	st	Z, r18
    e2dc:	31 83       	std	Z+1, r19	; 0x01
    e2de:	87 c0       	rjmp	.+270    	; 0xe3ee <_Z22txMilliwattsToSettingsPjS_PhS0_+0x2c0>
	}
	else if(*powerMW < 900)
    e2e0:	8f 85       	ldd	r24, Y+15	; 0x0f
    e2e2:	98 89       	ldd	r25, Y+16	; 0x10
    e2e4:	fc 01       	movw	r30, r24
    e2e6:	80 81       	ld	r24, Z
    e2e8:	91 81       	ldd	r25, Z+1	; 0x01
    e2ea:	84 38       	cpi	r24, 0x84	; 132
    e2ec:	93 40       	sbci	r25, 0x03	; 3
    e2ee:	50 f4       	brcc	.+20     	; 0xe304 <_Z22txMilliwattsToSettingsPjS_PhS0_+0x1d6>
	{
		index = 8;
    e2f0:	88 e0       	ldi	r24, 0x08	; 8
    e2f2:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 800;
    e2f4:	8f 85       	ldd	r24, Y+15	; 0x0f
    e2f6:	98 89       	ldd	r25, Y+16	; 0x10
    e2f8:	20 e2       	ldi	r18, 0x20	; 32
    e2fa:	33 e0       	ldi	r19, 0x03	; 3
    e2fc:	fc 01       	movw	r30, r24
    e2fe:	20 83       	st	Z, r18
    e300:	31 83       	std	Z+1, r19	; 0x01
    e302:	75 c0       	rjmp	.+234    	; 0xe3ee <_Z22txMilliwattsToSettingsPjS_PhS0_+0x2c0>
	}
	else if(*powerMW < 1250)
    e304:	8f 85       	ldd	r24, Y+15	; 0x0f
    e306:	98 89       	ldd	r25, Y+16	; 0x10
    e308:	fc 01       	movw	r30, r24
    e30a:	80 81       	ld	r24, Z
    e30c:	91 81       	ldd	r25, Z+1	; 0x01
    e30e:	82 3e       	cpi	r24, 0xE2	; 226
    e310:	94 40       	sbci	r25, 0x04	; 4
    e312:	50 f4       	brcc	.+20     	; 0xe328 <_Z22txMilliwattsToSettingsPjS_PhS0_+0x1fa>
	{
		index = 9;
    e314:	89 e0       	ldi	r24, 0x09	; 9
    e316:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 1000;
    e318:	8f 85       	ldd	r24, Y+15	; 0x0f
    e31a:	98 89       	ldd	r25, Y+16	; 0x10
    e31c:	28 ee       	ldi	r18, 0xE8	; 232
    e31e:	33 e0       	ldi	r19, 0x03	; 3
    e320:	fc 01       	movw	r30, r24
    e322:	20 83       	st	Z, r18
    e324:	31 83       	std	Z+1, r19	; 0x01
    e326:	63 c0       	rjmp	.+198    	; 0xe3ee <_Z22txMilliwattsToSettingsPjS_PhS0_+0x2c0>
	}
	else if(*powerMW < 1750)
    e328:	8f 85       	ldd	r24, Y+15	; 0x0f
    e32a:	98 89       	ldd	r25, Y+16	; 0x10
    e32c:	fc 01       	movw	r30, r24
    e32e:	80 81       	ld	r24, Z
    e330:	91 81       	ldd	r25, Z+1	; 0x01
    e332:	86 3d       	cpi	r24, 0xD6	; 214
    e334:	96 40       	sbci	r25, 0x06	; 6
    e336:	50 f4       	brcc	.+20     	; 0xe34c <_Z22txMilliwattsToSettingsPjS_PhS0_+0x21e>
	{
		index = 10;
    e338:	8a e0       	ldi	r24, 0x0A	; 10
    e33a:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 1500;
    e33c:	8f 85       	ldd	r24, Y+15	; 0x0f
    e33e:	98 89       	ldd	r25, Y+16	; 0x10
    e340:	2c ed       	ldi	r18, 0xDC	; 220
    e342:	35 e0       	ldi	r19, 0x05	; 5
    e344:	fc 01       	movw	r30, r24
    e346:	20 83       	st	Z, r18
    e348:	31 83       	std	Z+1, r19	; 0x01
    e34a:	51 c0       	rjmp	.+162    	; 0xe3ee <_Z22txMilliwattsToSettingsPjS_PhS0_+0x2c0>
	}
	else if(*powerMW < 2250)
    e34c:	8f 85       	ldd	r24, Y+15	; 0x0f
    e34e:	98 89       	ldd	r25, Y+16	; 0x10
    e350:	fc 01       	movw	r30, r24
    e352:	80 81       	ld	r24, Z
    e354:	91 81       	ldd	r25, Z+1	; 0x01
    e356:	8a 3c       	cpi	r24, 0xCA	; 202
    e358:	98 40       	sbci	r25, 0x08	; 8
    e35a:	50 f4       	brcc	.+20     	; 0xe370 <_Z22txMilliwattsToSettingsPjS_PhS0_+0x242>
	{
		index = 11;
    e35c:	8b e0       	ldi	r24, 0x0B	; 11
    e35e:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 2000;
    e360:	8f 85       	ldd	r24, Y+15	; 0x0f
    e362:	98 89       	ldd	r25, Y+16	; 0x10
    e364:	20 ed       	ldi	r18, 0xD0	; 208
    e366:	37 e0       	ldi	r19, 0x07	; 7
    e368:	fc 01       	movw	r30, r24
    e36a:	20 83       	st	Z, r18
    e36c:	31 83       	std	Z+1, r19	; 0x01
    e36e:	3f c0       	rjmp	.+126    	; 0xe3ee <_Z22txMilliwattsToSettingsPjS_PhS0_+0x2c0>
	}
	else if(*powerMW < 2750)
    e370:	8f 85       	ldd	r24, Y+15	; 0x0f
    e372:	98 89       	ldd	r25, Y+16	; 0x10
    e374:	fc 01       	movw	r30, r24
    e376:	80 81       	ld	r24, Z
    e378:	91 81       	ldd	r25, Z+1	; 0x01
    e37a:	8e 3b       	cpi	r24, 0xBE	; 190
    e37c:	9a 40       	sbci	r25, 0x0A	; 10
    e37e:	50 f4       	brcc	.+20     	; 0xe394 <_Z22txMilliwattsToSettingsPjS_PhS0_+0x266>
	{
		index = 12;
    e380:	8c e0       	ldi	r24, 0x0C	; 12
    e382:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 2500;
    e384:	8f 85       	ldd	r24, Y+15	; 0x0f
    e386:	98 89       	ldd	r25, Y+16	; 0x10
    e388:	24 ec       	ldi	r18, 0xC4	; 196
    e38a:	39 e0       	ldi	r19, 0x09	; 9
    e38c:	fc 01       	movw	r30, r24
    e38e:	20 83       	st	Z, r18
    e390:	31 83       	std	Z+1, r19	; 0x01
    e392:	2d c0       	rjmp	.+90     	; 0xe3ee <_Z22txMilliwattsToSettingsPjS_PhS0_+0x2c0>
	}
	else if(*powerMW < 3500)
    e394:	8f 85       	ldd	r24, Y+15	; 0x0f
    e396:	98 89       	ldd	r25, Y+16	; 0x10
    e398:	fc 01       	movw	r30, r24
    e39a:	80 81       	ld	r24, Z
    e39c:	91 81       	ldd	r25, Z+1	; 0x01
    e39e:	8c 3a       	cpi	r24, 0xAC	; 172
    e3a0:	9d 40       	sbci	r25, 0x0D	; 13
    e3a2:	50 f4       	brcc	.+20     	; 0xe3b8 <_Z22txMilliwattsToSettingsPjS_PhS0_+0x28a>
	{
		index = 13;
    e3a4:	8d e0       	ldi	r24, 0x0D	; 13
    e3a6:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 3000;
    e3a8:	8f 85       	ldd	r24, Y+15	; 0x0f
    e3aa:	98 89       	ldd	r25, Y+16	; 0x10
    e3ac:	28 eb       	ldi	r18, 0xB8	; 184
    e3ae:	3b e0       	ldi	r19, 0x0B	; 11
    e3b0:	fc 01       	movw	r30, r24
    e3b2:	20 83       	st	Z, r18
    e3b4:	31 83       	std	Z+1, r19	; 0x01
    e3b6:	1b c0       	rjmp	.+54     	; 0xe3ee <_Z22txMilliwattsToSettingsPjS_PhS0_+0x2c0>
	}
	else if(*powerMW < 4500)
    e3b8:	8f 85       	ldd	r24, Y+15	; 0x0f
    e3ba:	98 89       	ldd	r25, Y+16	; 0x10
    e3bc:	fc 01       	movw	r30, r24
    e3be:	80 81       	ld	r24, Z
    e3c0:	91 81       	ldd	r25, Z+1	; 0x01
    e3c2:	84 39       	cpi	r24, 0x94	; 148
    e3c4:	91 41       	sbci	r25, 0x11	; 17
    e3c6:	50 f4       	brcc	.+20     	; 0xe3dc <_Z22txMilliwattsToSettingsPjS_PhS0_+0x2ae>
	{
		index = 14;
    e3c8:	8e e0       	ldi	r24, 0x0E	; 14
    e3ca:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 4000;
    e3cc:	8f 85       	ldd	r24, Y+15	; 0x0f
    e3ce:	98 89       	ldd	r25, Y+16	; 0x10
    e3d0:	20 ea       	ldi	r18, 0xA0	; 160
    e3d2:	3f e0       	ldi	r19, 0x0F	; 15
    e3d4:	fc 01       	movw	r30, r24
    e3d6:	20 83       	st	Z, r18
    e3d8:	31 83       	std	Z+1, r19	; 0x01
    e3da:	09 c0       	rjmp	.+18     	; 0xe3ee <_Z22txMilliwattsToSettingsPjS_PhS0_+0x2c0>
	}
	else
	{
		index = 15;
    e3dc:	8f e0       	ldi	r24, 0x0F	; 15
    e3de:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 5000;
    e3e0:	8f 85       	ldd	r24, Y+15	; 0x0f
    e3e2:	98 89       	ldd	r25, Y+16	; 0x10
    e3e4:	28 e8       	ldi	r18, 0x88	; 136
    e3e6:	33 e1       	ldi	r19, 0x13	; 19
    e3e8:	fc 01       	movw	r30, r24
    e3ea:	20 83       	st	Z, r18
    e3ec:	31 83       	std	Z+1, r19	; 0x01
	}

	*driveLevel = g_80m_power_table[index];
    e3ee:	8a 81       	ldd	r24, Y+2	; 0x02
    e3f0:	88 2f       	mov	r24, r24
    e3f2:	90 e0       	ldi	r25, 0x00	; 0
    e3f4:	88 0f       	add	r24, r24
    e3f6:	99 1f       	adc	r25, r25
    e3f8:	81 5c       	subi	r24, 0xC1	; 193
    e3fa:	9f 4b       	sbci	r25, 0xBF	; 191
    e3fc:	fc 01       	movw	r30, r24
    e3fe:	20 81       	ld	r18, Z
    e400:	31 81       	ldd	r19, Z+1	; 0x01
    e402:	89 89       	ldd	r24, Y+17	; 0x11
    e404:	9a 89       	ldd	r25, Y+18	; 0x12
    e406:	fc 01       	movw	r30, r24
    e408:	20 83       	st	Z, r18
    e40a:	31 83       	std	Z+1, r19	; 0x01
	*modLevelHigh = 0;
    e40c:	8b 89       	ldd	r24, Y+19	; 0x13
    e40e:	9c 89       	ldd	r25, Y+20	; 0x14
    e410:	fc 01       	movw	r30, r24
    e412:	10 82       	st	Z, r1
	*modLevelLow = 0;
    e414:	8d 89       	ldd	r24, Y+21	; 0x15
    e416:	9e 89       	ldd	r25, Y+22	; 0x16
    e418:	fc 01       	movw	r30, r24
    e41a:	10 82       	st	Z, r1
	*driveLevel = MIN(*driveLevel, MAX_80M_PWR_SETTING);
    e41c:	89 89       	ldd	r24, Y+17	; 0x11
    e41e:	9a 89       	ldd	r25, Y+18	; 0x12
    e420:	fc 01       	movw	r30, r24
    e422:	80 81       	ld	r24, Z
    e424:	91 81       	ldd	r25, Z+1	; 0x01
    e426:	8b 87       	std	Y+11, r24	; 0x0b
    e428:	9c 87       	std	Y+12, r25	; 0x0c
    e42a:	80 e0       	ldi	r24, 0x00	; 0
    e42c:	94 e0       	ldi	r25, 0x04	; 4
    e42e:	8d 87       	std	Y+13, r24	; 0x0d
    e430:	9e 87       	std	Y+14, r25	; 0x0e
    e432:	2b 85       	ldd	r18, Y+11	; 0x0b
    e434:	3c 85       	ldd	r19, Y+12	; 0x0c
    e436:	8d 85       	ldd	r24, Y+13	; 0x0d
    e438:	9e 85       	ldd	r25, Y+14	; 0x0e
    e43a:	28 17       	cp	r18, r24
    e43c:	39 07       	cpc	r19, r25
    e43e:	18 f4       	brcc	.+6      	; 0xe446 <_Z22txMilliwattsToSettingsPjS_PhS0_+0x318>
    e440:	8b 85       	ldd	r24, Y+11	; 0x0b
    e442:	9c 85       	ldd	r25, Y+12	; 0x0c
    e444:	02 c0       	rjmp	.+4      	; 0xe44a <_Z22txMilliwattsToSettingsPjS_PhS0_+0x31c>
    e446:	8d 85       	ldd	r24, Y+13	; 0x0d
    e448:	9e 85       	ldd	r25, Y+14	; 0x0e
    e44a:	29 89       	ldd	r18, Y+17	; 0x11
    e44c:	3a 89       	ldd	r19, Y+18	; 0x12
    e44e:	f9 01       	movw	r30, r18
    e450:	80 83       	st	Z, r24
    e452:	91 83       	std	Z+1, r25	; 0x01

	return(ec);
    e454:	89 81       	ldd	r24, Y+1	; 0x01
    e456:	66 96       	adiw	r28, 0x16	; 22
    e458:	cd bf       	out	0x3d, r28	; 61
    e45a:	de bf       	out	0x3e, r29	; 62
    e45c:	df 91       	pop	r29
    e45e:	cf 91       	pop	r28
    e460:	08 95       	ret

0000e462 <USART0_get_data>:
 * \return Nothing
 */
void USART4_enable_rx()
{
	USART4.CTRLB |= USART_RXEN_bm;
}
    e462:	cf 93       	push	r28
    e464:	df 93       	push	r29
    e466:	cd b7       	in	r28, 0x3d	; 61
    e468:	de b7       	in	r29, 0x3e	; 62
    e46a:	80 e0       	ldi	r24, 0x00	; 0
    e46c:	98 e0       	ldi	r25, 0x08	; 8
    e46e:	fc 01       	movw	r30, r24
    e470:	80 81       	ld	r24, Z
    e472:	df 91       	pop	r29
    e474:	cf 91       	pop	r28
    e476:	08 95       	ret

0000e478 <USART1_init>:
    e478:	0f 93       	push	r16
    e47a:	1f 93       	push	r17
    e47c:	cf 93       	push	r28
    e47e:	df 93       	push	r29
    e480:	00 d0       	rcall	.+0      	; 0xe482 <USART1_init+0xa>
    e482:	00 d0       	rcall	.+0      	; 0xe484 <USART1_init+0xc>
    e484:	cd b7       	in	r28, 0x3d	; 61
    e486:	de b7       	in	r29, 0x3e	; 62
    e488:	69 83       	std	Y+1, r22	; 0x01
    e48a:	7a 83       	std	Y+2, r23	; 0x02
    e48c:	8b 83       	std	Y+3, r24	; 0x03
    e48e:	9c 83       	std	Y+4, r25	; 0x04
    e490:	f8 94       	cli
    e492:	00 e2       	ldi	r16, 0x20	; 32
    e494:	18 e0       	ldi	r17, 0x08	; 8
    e496:	69 81       	ldd	r22, Y+1	; 0x01
    e498:	7a 81       	ldd	r23, Y+2	; 0x02
    e49a:	8b 81       	ldd	r24, Y+3	; 0x03
    e49c:	9c 81       	ldd	r25, Y+4	; 0x04
    e49e:	0e 94 53 78 	call	0xf0a6	; 0xf0a6 <__floatunsisf>
    e4a2:	dc 01       	movw	r26, r24
    e4a4:	cb 01       	movw	r24, r22
    e4a6:	20 e0       	ldi	r18, 0x00	; 0
    e4a8:	30 e0       	ldi	r19, 0x00	; 0
    e4aa:	40 e8       	ldi	r20, 0x80	; 128
    e4ac:	51 e4       	ldi	r21, 0x41	; 65
    e4ae:	bc 01       	movw	r22, r24
    e4b0:	cd 01       	movw	r24, r26
    e4b2:	0e 94 4b 79 	call	0xf296	; 0xf296 <__mulsf3>
    e4b6:	dc 01       	movw	r26, r24
    e4b8:	cb 01       	movw	r24, r22
    e4ba:	9c 01       	movw	r18, r24
    e4bc:	ad 01       	movw	r20, r26
    e4be:	60 e0       	ldi	r22, 0x00	; 0
    e4c0:	7b e1       	ldi	r23, 0x1B	; 27
    e4c2:	87 eb       	ldi	r24, 0xB7	; 183
    e4c4:	9e e4       	ldi	r25, 0x4E	; 78
    e4c6:	0e 94 ab 77 	call	0xef56	; 0xef56 <__divsf3>
    e4ca:	dc 01       	movw	r26, r24
    e4cc:	cb 01       	movw	r24, r22
    e4ce:	20 e0       	ldi	r18, 0x00	; 0
    e4d0:	30 e0       	ldi	r19, 0x00	; 0
    e4d2:	40 e0       	ldi	r20, 0x00	; 0
    e4d4:	5f e3       	ldi	r21, 0x3F	; 63
    e4d6:	bc 01       	movw	r22, r24
    e4d8:	cd 01       	movw	r24, r26
    e4da:	0e 94 23 77 	call	0xee46	; 0xee46 <__addsf3>
    e4de:	dc 01       	movw	r26, r24
    e4e0:	cb 01       	movw	r24, r22
    e4e2:	bc 01       	movw	r22, r24
    e4e4:	cd 01       	movw	r24, r26
    e4e6:	0e 94 24 78 	call	0xf048	; 0xf048 <__fixunssfsi>
    e4ea:	dc 01       	movw	r26, r24
    e4ec:	cb 01       	movw	r24, r22
    e4ee:	f8 01       	movw	r30, r16
    e4f0:	80 87       	std	Z+8, r24	; 0x08
    e4f2:	91 87       	std	Z+9, r25	; 0x09
    e4f4:	80 e2       	ldi	r24, 0x20	; 32
    e4f6:	98 e0       	ldi	r25, 0x08	; 8
    e4f8:	20 e8       	ldi	r18, 0x80	; 128
    e4fa:	fc 01       	movw	r30, r24
    e4fc:	25 83       	std	Z+5, r18	; 0x05
    e4fe:	80 e2       	ldi	r24, 0x20	; 32
    e500:	98 e0       	ldi	r25, 0x08	; 8
    e502:	23 e0       	ldi	r18, 0x03	; 3
    e504:	fc 01       	movw	r30, r24
    e506:	27 83       	std	Z+7, r18	; 0x07
    e508:	80 e2       	ldi	r24, 0x20	; 32
    e50a:	98 e0       	ldi	r25, 0x08	; 8
    e50c:	20 ec       	ldi	r18, 0xC0	; 192
    e50e:	fc 01       	movw	r30, r24
    e510:	26 83       	std	Z+6, r18	; 0x06
    e512:	78 94       	sei
    e514:	80 e0       	ldi	r24, 0x00	; 0
    e516:	24 96       	adiw	r28, 0x04	; 4
    e518:	cd bf       	out	0x3d, r28	; 61
    e51a:	de bf       	out	0x3e, r29	; 62
    e51c:	df 91       	pop	r29
    e51e:	cf 91       	pop	r28
    e520:	1f 91       	pop	r17
    e522:	0f 91       	pop	r16
    e524:	08 95       	ret

0000e526 <USART1_enable>:
    e526:	cf 93       	push	r28
    e528:	df 93       	push	r29
    e52a:	cd b7       	in	r28, 0x3d	; 61
    e52c:	de b7       	in	r29, 0x3e	; 62
    e52e:	80 e2       	ldi	r24, 0x20	; 32
    e530:	98 e0       	ldi	r25, 0x08	; 8
    e532:	20 e2       	ldi	r18, 0x20	; 32
    e534:	38 e0       	ldi	r19, 0x08	; 8
    e536:	f9 01       	movw	r30, r18
    e538:	26 81       	ldd	r18, Z+6	; 0x06
    e53a:	20 6c       	ori	r18, 0xC0	; 192
    e53c:	fc 01       	movw	r30, r24
    e53e:	26 83       	std	Z+6, r18	; 0x06
    e540:	00 00       	nop
    e542:	df 91       	pop	r29
    e544:	cf 91       	pop	r28
    e546:	08 95       	ret

0000e548 <USART1_enable_tx>:
    e548:	cf 93       	push	r28
    e54a:	df 93       	push	r29
    e54c:	cd b7       	in	r28, 0x3d	; 61
    e54e:	de b7       	in	r29, 0x3e	; 62
    e550:	80 e2       	ldi	r24, 0x20	; 32
    e552:	98 e0       	ldi	r25, 0x08	; 8
    e554:	20 e2       	ldi	r18, 0x20	; 32
    e556:	38 e0       	ldi	r19, 0x08	; 8
    e558:	f9 01       	movw	r30, r18
    e55a:	26 81       	ldd	r18, Z+6	; 0x06
    e55c:	20 64       	ori	r18, 0x40	; 64
    e55e:	fc 01       	movw	r30, r24
    e560:	26 83       	std	Z+6, r18	; 0x06
    e562:	80 e2       	ldi	r24, 0x20	; 32
    e564:	98 e0       	ldi	r25, 0x08	; 8
    e566:	20 e2       	ldi	r18, 0x20	; 32
    e568:	38 e0       	ldi	r19, 0x08	; 8
    e56a:	f9 01       	movw	r30, r18
    e56c:	25 81       	ldd	r18, Z+5	; 0x05
    e56e:	20 62       	ori	r18, 0x20	; 32
    e570:	fc 01       	movw	r30, r24
    e572:	25 83       	std	Z+5, r18	; 0x05
    e574:	00 00       	nop
    e576:	df 91       	pop	r29
    e578:	cf 91       	pop	r28
    e57a:	08 95       	ret

0000e57c <USART1_disable>:
    e57c:	cf 93       	push	r28
    e57e:	df 93       	push	r29
    e580:	cd b7       	in	r28, 0x3d	; 61
    e582:	de b7       	in	r29, 0x3e	; 62
    e584:	80 e2       	ldi	r24, 0x20	; 32
    e586:	98 e0       	ldi	r25, 0x08	; 8
    e588:	20 e2       	ldi	r18, 0x20	; 32
    e58a:	38 e0       	ldi	r19, 0x08	; 8
    e58c:	f9 01       	movw	r30, r18
    e58e:	26 81       	ldd	r18, Z+6	; 0x06
    e590:	2f 73       	andi	r18, 0x3F	; 63
    e592:	fc 01       	movw	r30, r24
    e594:	26 83       	std	Z+6, r18	; 0x06
    e596:	00 00       	nop
    e598:	df 91       	pop	r29
    e59a:	cf 91       	pop	r28
    e59c:	08 95       	ret

0000e59e <USART1_get_data>:
    e59e:	cf 93       	push	r28
    e5a0:	df 93       	push	r29
    e5a2:	cd b7       	in	r28, 0x3d	; 61
    e5a4:	de b7       	in	r29, 0x3e	; 62
    e5a6:	80 e2       	ldi	r24, 0x20	; 32
    e5a8:	98 e0       	ldi	r25, 0x08	; 8
    e5aa:	fc 01       	movw	r30, r24
    e5ac:	80 81       	ld	r24, Z
    e5ae:	df 91       	pop	r29
    e5b0:	cf 91       	pop	r28
    e5b2:	08 95       	ret

0000e5b4 <USART4_init>:
    e5b4:	0f 93       	push	r16
    e5b6:	1f 93       	push	r17
    e5b8:	cf 93       	push	r28
    e5ba:	df 93       	push	r29
    e5bc:	00 d0       	rcall	.+0      	; 0xe5be <USART4_init+0xa>
    e5be:	00 d0       	rcall	.+0      	; 0xe5c0 <USART4_init+0xc>
    e5c0:	cd b7       	in	r28, 0x3d	; 61
    e5c2:	de b7       	in	r29, 0x3e	; 62
    e5c4:	69 83       	std	Y+1, r22	; 0x01
    e5c6:	7a 83       	std	Y+2, r23	; 0x02
    e5c8:	8b 83       	std	Y+3, r24	; 0x03
    e5ca:	9c 83       	std	Y+4, r25	; 0x04
    e5cc:	00 e8       	ldi	r16, 0x80	; 128
    e5ce:	18 e0       	ldi	r17, 0x08	; 8
    e5d0:	69 81       	ldd	r22, Y+1	; 0x01
    e5d2:	7a 81       	ldd	r23, Y+2	; 0x02
    e5d4:	8b 81       	ldd	r24, Y+3	; 0x03
    e5d6:	9c 81       	ldd	r25, Y+4	; 0x04
    e5d8:	0e 94 53 78 	call	0xf0a6	; 0xf0a6 <__floatunsisf>
    e5dc:	dc 01       	movw	r26, r24
    e5de:	cb 01       	movw	r24, r22
    e5e0:	20 e0       	ldi	r18, 0x00	; 0
    e5e2:	30 e0       	ldi	r19, 0x00	; 0
    e5e4:	40 e8       	ldi	r20, 0x80	; 128
    e5e6:	51 e4       	ldi	r21, 0x41	; 65
    e5e8:	bc 01       	movw	r22, r24
    e5ea:	cd 01       	movw	r24, r26
    e5ec:	0e 94 4b 79 	call	0xf296	; 0xf296 <__mulsf3>
    e5f0:	dc 01       	movw	r26, r24
    e5f2:	cb 01       	movw	r24, r22
    e5f4:	9c 01       	movw	r18, r24
    e5f6:	ad 01       	movw	r20, r26
    e5f8:	60 e0       	ldi	r22, 0x00	; 0
    e5fa:	7b e1       	ldi	r23, 0x1B	; 27
    e5fc:	87 eb       	ldi	r24, 0xB7	; 183
    e5fe:	9e e4       	ldi	r25, 0x4E	; 78
    e600:	0e 94 ab 77 	call	0xef56	; 0xef56 <__divsf3>
    e604:	dc 01       	movw	r26, r24
    e606:	cb 01       	movw	r24, r22
    e608:	20 e0       	ldi	r18, 0x00	; 0
    e60a:	30 e0       	ldi	r19, 0x00	; 0
    e60c:	40 e0       	ldi	r20, 0x00	; 0
    e60e:	5f e3       	ldi	r21, 0x3F	; 63
    e610:	bc 01       	movw	r22, r24
    e612:	cd 01       	movw	r24, r26
    e614:	0e 94 23 77 	call	0xee46	; 0xee46 <__addsf3>
    e618:	dc 01       	movw	r26, r24
    e61a:	cb 01       	movw	r24, r22
    e61c:	bc 01       	movw	r22, r24
    e61e:	cd 01       	movw	r24, r26
    e620:	0e 94 24 78 	call	0xf048	; 0xf048 <__fixunssfsi>
    e624:	dc 01       	movw	r26, r24
    e626:	cb 01       	movw	r24, r22
    e628:	f8 01       	movw	r30, r16
    e62a:	80 87       	std	Z+8, r24	; 0x08
    e62c:	91 87       	std	Z+9, r25	; 0x09
    e62e:	80 e8       	ldi	r24, 0x80	; 128
    e630:	98 e0       	ldi	r25, 0x08	; 8
    e632:	20 e8       	ldi	r18, 0x80	; 128
    e634:	fc 01       	movw	r30, r24
    e636:	25 83       	std	Z+5, r18	; 0x05
    e638:	80 e8       	ldi	r24, 0x80	; 128
    e63a:	98 e0       	ldi	r25, 0x08	; 8
    e63c:	20 ec       	ldi	r18, 0xC0	; 192
    e63e:	fc 01       	movw	r30, r24
    e640:	26 83       	std	Z+6, r18	; 0x06
    e642:	80 e0       	ldi	r24, 0x00	; 0
    e644:	24 96       	adiw	r28, 0x04	; 4
    e646:	cd bf       	out	0x3d, r28	; 61
    e648:	de bf       	out	0x3e, r29	; 62
    e64a:	df 91       	pop	r29
    e64c:	cf 91       	pop	r28
    e64e:	1f 91       	pop	r17
    e650:	0f 91       	pop	r16
    e652:	08 95       	ret

0000e654 <USART4_enable>:
    e654:	cf 93       	push	r28
    e656:	df 93       	push	r29
    e658:	cd b7       	in	r28, 0x3d	; 61
    e65a:	de b7       	in	r29, 0x3e	; 62
    e65c:	80 e8       	ldi	r24, 0x80	; 128
    e65e:	98 e0       	ldi	r25, 0x08	; 8
    e660:	20 e8       	ldi	r18, 0x80	; 128
    e662:	38 e0       	ldi	r19, 0x08	; 8
    e664:	f9 01       	movw	r30, r18
    e666:	26 81       	ldd	r18, Z+6	; 0x06
    e668:	20 6c       	ori	r18, 0xC0	; 192
    e66a:	fc 01       	movw	r30, r24
    e66c:	26 83       	std	Z+6, r18	; 0x06
    e66e:	00 00       	nop
    e670:	df 91       	pop	r29
    e672:	cf 91       	pop	r28
    e674:	08 95       	ret

0000e676 <USART4_enable_tx>:
 * 2. Enables the USART module by setting the TX enable-bit in the USART control register
 *
 * \return Nothing
 */
void USART4_enable_tx()
{
    e676:	cf 93       	push	r28
    e678:	df 93       	push	r29
    e67a:	cd b7       	in	r28, 0x3d	; 61
    e67c:	de b7       	in	r29, 0x3e	; 62
	USART4.CTRLB |= USART_TXEN_bm;
    e67e:	80 e8       	ldi	r24, 0x80	; 128
    e680:	98 e0       	ldi	r25, 0x08	; 8
    e682:	20 e8       	ldi	r18, 0x80	; 128
    e684:	38 e0       	ldi	r19, 0x08	; 8
    e686:	f9 01       	movw	r30, r18
    e688:	26 81       	ldd	r18, Z+6	; 0x06
    e68a:	20 64       	ori	r18, 0x40	; 64
    e68c:	fc 01       	movw	r30, r24
    e68e:	26 83       	std	Z+6, r18	; 0x06
	USART4.CTRLA |= 1 << USART_DREIE_bp; /* Transmit Data Ready Interrupt Enable: enable */
    e690:	80 e8       	ldi	r24, 0x80	; 128
    e692:	98 e0       	ldi	r25, 0x08	; 8
    e694:	20 e8       	ldi	r18, 0x80	; 128
    e696:	38 e0       	ldi	r19, 0x08	; 8
    e698:	f9 01       	movw	r30, r18
    e69a:	25 81       	ldd	r18, Z+5	; 0x05
    e69c:	20 62       	ori	r18, 0x20	; 32
    e69e:	fc 01       	movw	r30, r24
    e6a0:	25 83       	std	Z+5, r18	; 0x05
//	USART4.STATUS |= 1 << USART_TXEN_bp; /* Clear any existing flag setting */
}
    e6a2:	00 00       	nop
    e6a4:	df 91       	pop	r29
    e6a6:	cf 91       	pop	r28
    e6a8:	08 95       	ret

0000e6aa <USART4_disable>:
 * 2. If supported by the clock system, disables the clock to the USART
 *
 * \return Nothing
 */
void USART4_disable()
{
    e6aa:	cf 93       	push	r28
    e6ac:	df 93       	push	r29
    e6ae:	cd b7       	in	r28, 0x3d	; 61
    e6b0:	de b7       	in	r29, 0x3e	; 62
	USART4.CTRLB &= ~(USART_RXEN_bm | USART_TXEN_bm);
    e6b2:	80 e8       	ldi	r24, 0x80	; 128
    e6b4:	98 e0       	ldi	r25, 0x08	; 8
    e6b6:	20 e8       	ldi	r18, 0x80	; 128
    e6b8:	38 e0       	ldi	r19, 0x08	; 8
    e6ba:	f9 01       	movw	r30, r18
    e6bc:	26 81       	ldd	r18, Z+6	; 0x06
    e6be:	2f 73       	andi	r18, 0x3F	; 63
    e6c0:	fc 01       	movw	r30, r24
    e6c2:	26 83       	std	Z+6, r18	; 0x06
}
    e6c4:	00 00       	nop
    e6c6:	df 91       	pop	r29
    e6c8:	cf 91       	pop	r28
    e6ca:	08 95       	ret

0000e6cc <USART4_get_data>:
 * \brief Get recieved data from USART4
 *
 * \return Data register from USART4 module
 */
uint8_t USART4_get_data()
{
    e6cc:	cf 93       	push	r28
    e6ce:	df 93       	push	r29
    e6d0:	cd b7       	in	r28, 0x3d	; 61
    e6d2:	de b7       	in	r29, 0x3e	; 62
	return USART4.RXDATAL;
    e6d4:	80 e8       	ldi	r24, 0x80	; 128
    e6d6:	98 e0       	ldi	r25, 0x08	; 8
    e6d8:	fc 01       	movw	r30, r24
    e6da:	80 81       	ld	r24, Z
}
    e6dc:	df 91       	pop	r29
    e6de:	cf 91       	pop	r28
    e6e0:	08 95       	ret

0000e6e2 <_Z7timeDifmm>:
    (ltm.tm_year-70)*31536000L + ((ltm.tm_year-69)/4)*86400L -
    ((ltm.tm_year-1)/100)*86400L + ((ltm.tm_year+299)/400)*86400L;
  }

  return result;
}
    e6e2:	ef 92       	push	r14
    e6e4:	ff 92       	push	r15
    e6e6:	0f 93       	push	r16
    e6e8:	1f 93       	push	r17
    e6ea:	cf 93       	push	r28
    e6ec:	df 93       	push	r29
    e6ee:	cd b7       	in	r28, 0x3d	; 61
    e6f0:	de b7       	in	r29, 0x3e	; 62
    e6f2:	2c 97       	sbiw	r28, 0x0c	; 12
    e6f4:	cd bf       	out	0x3d, r28	; 61
    e6f6:	de bf       	out	0x3e, r29	; 62
    e6f8:	6d 83       	std	Y+5, r22	; 0x05
    e6fa:	7e 83       	std	Y+6, r23	; 0x06
    e6fc:	8f 83       	std	Y+7, r24	; 0x07
    e6fe:	98 87       	std	Y+8, r25	; 0x08
    e700:	29 87       	std	Y+9, r18	; 0x09
    e702:	3a 87       	std	Y+10, r19	; 0x0a
    e704:	4b 87       	std	Y+11, r20	; 0x0b
    e706:	5c 87       	std	Y+12, r21	; 0x0c
    e708:	2d 81       	ldd	r18, Y+5	; 0x05
    e70a:	3e 81       	ldd	r19, Y+6	; 0x06
    e70c:	4f 81       	ldd	r20, Y+7	; 0x07
    e70e:	58 85       	ldd	r21, Y+8	; 0x08
    e710:	89 85       	ldd	r24, Y+9	; 0x09
    e712:	9a 85       	ldd	r25, Y+10	; 0x0a
    e714:	ab 85       	ldd	r26, Y+11	; 0x0b
    e716:	bc 85       	ldd	r27, Y+12	; 0x0c
    e718:	82 17       	cp	r24, r18
    e71a:	93 07       	cpc	r25, r19
    e71c:	a4 07       	cpc	r26, r20
    e71e:	b5 07       	cpc	r27, r21
    e720:	a8 f4       	brcc	.+42     	; 0xe74c <_Z7timeDifmm+0x6a>
    e722:	2d 81       	ldd	r18, Y+5	; 0x05
    e724:	3e 81       	ldd	r19, Y+6	; 0x06
    e726:	4f 81       	ldd	r20, Y+7	; 0x07
    e728:	58 85       	ldd	r21, Y+8	; 0x08
    e72a:	89 85       	ldd	r24, Y+9	; 0x09
    e72c:	9a 85       	ldd	r25, Y+10	; 0x0a
    e72e:	ab 85       	ldd	r26, Y+11	; 0x0b
    e730:	bc 85       	ldd	r27, Y+12	; 0x0c
    e732:	79 01       	movw	r14, r18
    e734:	8a 01       	movw	r16, r20
    e736:	e8 1a       	sub	r14, r24
    e738:	f9 0a       	sbc	r15, r25
    e73a:	0a 0b       	sbc	r16, r26
    e73c:	1b 0b       	sbc	r17, r27
    e73e:	d8 01       	movw	r26, r16
    e740:	c7 01       	movw	r24, r14
    e742:	89 83       	std	Y+1, r24	; 0x01
    e744:	9a 83       	std	Y+2, r25	; 0x02
    e746:	ab 83       	std	Y+3, r26	; 0x03
    e748:	bc 83       	std	Y+4, r27	; 0x04
    e74a:	14 c0       	rjmp	.+40     	; 0xe774 <_Z7timeDifmm+0x92>
    e74c:	2d 81       	ldd	r18, Y+5	; 0x05
    e74e:	3e 81       	ldd	r19, Y+6	; 0x06
    e750:	4f 81       	ldd	r20, Y+7	; 0x07
    e752:	58 85       	ldd	r21, Y+8	; 0x08
    e754:	89 85       	ldd	r24, Y+9	; 0x09
    e756:	9a 85       	ldd	r25, Y+10	; 0x0a
    e758:	ab 85       	ldd	r26, Y+11	; 0x0b
    e75a:	bc 85       	ldd	r27, Y+12	; 0x0c
    e75c:	79 01       	movw	r14, r18
    e75e:	8a 01       	movw	r16, r20
    e760:	e8 1a       	sub	r14, r24
    e762:	f9 0a       	sbc	r15, r25
    e764:	0a 0b       	sbc	r16, r26
    e766:	1b 0b       	sbc	r17, r27
    e768:	d8 01       	movw	r26, r16
    e76a:	c7 01       	movw	r24, r14
    e76c:	89 83       	std	Y+1, r24	; 0x01
    e76e:	9a 83       	std	Y+2, r25	; 0x02
    e770:	ab 83       	std	Y+3, r26	; 0x03
    e772:	bc 83       	std	Y+4, r27	; 0x04
    e774:	89 81       	ldd	r24, Y+1	; 0x01
    e776:	9a 81       	ldd	r25, Y+2	; 0x02
    e778:	ab 81       	ldd	r26, Y+3	; 0x03
    e77a:	bc 81       	ldd	r27, Y+4	; 0x04
    e77c:	bc 01       	movw	r22, r24
    e77e:	cd 01       	movw	r24, r26
    e780:	2c 96       	adiw	r28, 0x0c	; 12
    e782:	cd bf       	out	0x3d, r28	; 61
    e784:	de bf       	out	0x3e, r29	; 62
    e786:	df 91       	pop	r29
    e788:	cf 91       	pop	r28
    e78a:	1f 91       	pop	r17
    e78c:	0f 91       	pop	r16
    e78e:	ff 90       	pop	r15
    e790:	ef 90       	pop	r14
    e792:	08 95       	ret

0000e794 <_Z11only_digitsPc>:

/** 
 * Checks a string to see if it contains only numerical characters
 */
bool only_digits(char *s)
{
    e794:	cf 93       	push	r28
    e796:	df 93       	push	r29
    e798:	00 d0       	rcall	.+0      	; 0xe79a <_Z11only_digitsPc+0x6>
    e79a:	cd b7       	in	r28, 0x3d	; 61
    e79c:	de b7       	in	r29, 0x3e	; 62
    e79e:	89 83       	std	Y+1, r24	; 0x01
    e7a0:	9a 83       	std	Y+2, r25	; 0x02
	while(*s)
    e7a2:	89 81       	ldd	r24, Y+1	; 0x01
    e7a4:	9a 81       	ldd	r25, Y+2	; 0x02
    e7a6:	fc 01       	movw	r30, r24
    e7a8:	80 81       	ld	r24, Z
    e7aa:	88 23       	and	r24, r24
    e7ac:	a1 f0       	breq	.+40     	; 0xe7d6 <_Z11only_digitsPc+0x42>
	{
		if(isdigit(*s++) == 0)
    e7ae:	89 81       	ldd	r24, Y+1	; 0x01
    e7b0:	9a 81       	ldd	r25, Y+2	; 0x02
    e7b2:	9c 01       	movw	r18, r24
    e7b4:	2f 5f       	subi	r18, 0xFF	; 255
    e7b6:	3f 4f       	sbci	r19, 0xFF	; 255
    e7b8:	29 83       	std	Y+1, r18	; 0x01
    e7ba:	3a 83       	std	Y+2, r19	; 0x02
    e7bc:	fc 01       	movw	r30, r24
    e7be:	80 81       	ld	r24, Z
    e7c0:	88 2f       	mov	r24, r24
    e7c2:	90 e0       	ldi	r25, 0x00	; 0
    e7c4:	c0 97       	sbiw	r24, 0x30	; 48
    e7c6:	21 e0       	ldi	r18, 0x01	; 1
    e7c8:	0a 97       	sbiw	r24, 0x0a	; 10
    e7ca:	08 f4       	brcc	.+2      	; 0xe7ce <_Z11only_digitsPc+0x3a>
    e7cc:	20 e0       	ldi	r18, 0x00	; 0
    e7ce:	22 23       	and	r18, r18
    e7d0:	41 f3       	breq	.-48     	; 0xe7a2 <_Z11only_digitsPc+0xe>
		{
			return( false);
    e7d2:	80 e0       	ldi	r24, 0x00	; 0
    e7d4:	01 c0       	rjmp	.+2      	; 0xe7d8 <_Z11only_digitsPc+0x44>
		}
	}

	return( true);
    e7d6:	81 e0       	ldi	r24, 0x01	; 1
}
    e7d8:	0f 90       	pop	r0
    e7da:	0f 90       	pop	r0
    e7dc:	df 91       	pop	r29
    e7de:	cf 91       	pop	r28
    e7e0:	08 95       	ret

0000e7e2 <_Z15frequencyStringPcm>:
 * result = pointer to a character sting to hold the frequency string
 * freq = the frequency value to be represented as a string
 * Returns 1 if an error is detected
 */
bool frequencyString(char* result, uint32_t freq)
{
    e7e2:	cf 93       	push	r28
    e7e4:	df 93       	push	r29
    e7e6:	cd b7       	in	r28, 0x3d	; 61
    e7e8:	de b7       	in	r29, 0x3e	; 62
    e7ea:	2b 97       	sbiw	r28, 0x0b	; 11
    e7ec:	cd bf       	out	0x3d, r28	; 61
    e7ee:	de bf       	out	0x3e, r29	; 62
    e7f0:	8e 83       	std	Y+6, r24	; 0x06
    e7f2:	9f 83       	std	Y+7, r25	; 0x07
    e7f4:	48 87       	std	Y+8, r20	; 0x08
    e7f6:	59 87       	std	Y+9, r21	; 0x09
    e7f8:	6a 87       	std	Y+10, r22	; 0x0a
    e7fa:	7b 87       	std	Y+11, r23	; 0x0b
	bool failure = true;
    e7fc:	81 e0       	ldi	r24, 0x01	; 1
    e7fe:	89 83       	std	Y+1, r24	; 0x01
	
	if(!result)
    e800:	8e 81       	ldd	r24, Y+6	; 0x06
    e802:	9f 81       	ldd	r25, Y+7	; 0x07
    e804:	89 2b       	or	r24, r25
    e806:	11 f4       	brne	.+4      	; 0xe80c <_Z15frequencyStringPcm+0x2a>
	{
		return(failure);
    e808:	89 81       	ldd	r24, Y+1	; 0x01
    e80a:	61 c0       	rjmp	.+194    	; 0xe8ce <_Z15frequencyStringPcm+0xec>
	}
	
	if((freq > 3500000) && (freq < 4000000)) // Accept only a Hz value to be expressed in kHz
    e80c:	88 85       	ldd	r24, Y+8	; 0x08
    e80e:	99 85       	ldd	r25, Y+9	; 0x09
    e810:	aa 85       	ldd	r26, Y+10	; 0x0a
    e812:	bb 85       	ldd	r27, Y+11	; 0x0b
    e814:	81 3e       	cpi	r24, 0xE1	; 225
    e816:	97 46       	sbci	r25, 0x67	; 103
    e818:	a5 43       	sbci	r26, 0x35	; 53
    e81a:	b1 05       	cpc	r27, r1
    e81c:	08 f4       	brcc	.+2      	; 0xe820 <_Z15frequencyStringPcm+0x3e>
    e81e:	56 c0       	rjmp	.+172    	; 0xe8cc <_Z15frequencyStringPcm+0xea>
    e820:	88 85       	ldd	r24, Y+8	; 0x08
    e822:	99 85       	ldd	r25, Y+9	; 0x09
    e824:	aa 85       	ldd	r26, Y+10	; 0x0a
    e826:	bb 85       	ldd	r27, Y+11	; 0x0b
    e828:	81 15       	cp	r24, r1
    e82a:	99 40       	sbci	r25, 0x09	; 9
    e82c:	ad 43       	sbci	r26, 0x3D	; 61
    e82e:	b1 05       	cpc	r27, r1
    e830:	08 f0       	brcs	.+2      	; 0xe834 <_Z15frequencyStringPcm+0x52>
    e832:	4c c0       	rjmp	.+152    	; 0xe8cc <_Z15frequencyStringPcm+0xea>
	{
		uint32_t frac = (freq % 1000)/100;		
    e834:	88 85       	ldd	r24, Y+8	; 0x08
    e836:	99 85       	ldd	r25, Y+9	; 0x09
    e838:	aa 85       	ldd	r26, Y+10	; 0x0a
    e83a:	bb 85       	ldd	r27, Y+11	; 0x0b
    e83c:	28 ee       	ldi	r18, 0xE8	; 232
    e83e:	33 e0       	ldi	r19, 0x03	; 3
    e840:	40 e0       	ldi	r20, 0x00	; 0
    e842:	50 e0       	ldi	r21, 0x00	; 0
    e844:	bc 01       	movw	r22, r24
    e846:	cd 01       	movw	r24, r26
    e848:	0e 94 f0 79 	call	0xf3e0	; 0xf3e0 <__udivmodsi4>
    e84c:	dc 01       	movw	r26, r24
    e84e:	cb 01       	movw	r24, r22
    e850:	24 e6       	ldi	r18, 0x64	; 100
    e852:	30 e0       	ldi	r19, 0x00	; 0
    e854:	40 e0       	ldi	r20, 0x00	; 0
    e856:	50 e0       	ldi	r21, 0x00	; 0
    e858:	bc 01       	movw	r22, r24
    e85a:	cd 01       	movw	r24, r26
    e85c:	0e 94 f0 79 	call	0xf3e0	; 0xf3e0 <__udivmodsi4>
    e860:	da 01       	movw	r26, r20
    e862:	c9 01       	movw	r24, r18
    e864:	8a 83       	std	Y+2, r24	; 0x02
    e866:	9b 83       	std	Y+3, r25	; 0x03
    e868:	ac 83       	std	Y+4, r26	; 0x04
    e86a:	bd 83       	std	Y+5, r27	; 0x05
		sprintf(result, "%lu.%1lu kHz", freq/1000, frac);
    e86c:	88 85       	ldd	r24, Y+8	; 0x08
    e86e:	99 85       	ldd	r25, Y+9	; 0x09
    e870:	aa 85       	ldd	r26, Y+10	; 0x0a
    e872:	bb 85       	ldd	r27, Y+11	; 0x0b
    e874:	28 ee       	ldi	r18, 0xE8	; 232
    e876:	33 e0       	ldi	r19, 0x03	; 3
    e878:	40 e0       	ldi	r20, 0x00	; 0
    e87a:	50 e0       	ldi	r21, 0x00	; 0
    e87c:	bc 01       	movw	r22, r24
    e87e:	cd 01       	movw	r24, r26
    e880:	0e 94 f0 79 	call	0xf3e0	; 0xf3e0 <__udivmodsi4>
    e884:	da 01       	movw	r26, r20
    e886:	c9 01       	movw	r24, r18
    e888:	2d 81       	ldd	r18, Y+5	; 0x05
    e88a:	2f 93       	push	r18
    e88c:	2c 81       	ldd	r18, Y+4	; 0x04
    e88e:	2f 93       	push	r18
    e890:	2b 81       	ldd	r18, Y+3	; 0x03
    e892:	2f 93       	push	r18
    e894:	2a 81       	ldd	r18, Y+2	; 0x02
    e896:	2f 93       	push	r18
    e898:	2b 2f       	mov	r18, r27
    e89a:	2f 93       	push	r18
    e89c:	2a 2f       	mov	r18, r26
    e89e:	2f 93       	push	r18
    e8a0:	29 2f       	mov	r18, r25
    e8a2:	2f 93       	push	r18
    e8a4:	8f 93       	push	r24
    e8a6:	8d ef       	ldi	r24, 0xFD	; 253
    e8a8:	94 e4       	ldi	r25, 0x44	; 68
    e8aa:	89 2f       	mov	r24, r25
    e8ac:	8f 93       	push	r24
    e8ae:	8d ef       	ldi	r24, 0xFD	; 253
    e8b0:	94 e4       	ldi	r25, 0x44	; 68
    e8b2:	8f 93       	push	r24
    e8b4:	8f 81       	ldd	r24, Y+7	; 0x07
    e8b6:	8f 93       	push	r24
    e8b8:	8e 81       	ldd	r24, Y+6	; 0x06
    e8ba:	8f 93       	push	r24
    e8bc:	0e 94 48 7c 	call	0xf890	; 0xf890 <sprintf>
    e8c0:	8d b7       	in	r24, 0x3d	; 61
    e8c2:	9e b7       	in	r25, 0x3e	; 62
    e8c4:	0c 96       	adiw	r24, 0x0c	; 12
    e8c6:	cd bf       	out	0x3d, r28	; 61
    e8c8:	de bf       	out	0x3e, r29	; 62
		
		failure = false;
    e8ca:	19 82       	std	Y+1, r1	; 0x01
	}
	
	return(failure);	
    e8cc:	89 81       	ldd	r24, Y+1	; 0x01
}
    e8ce:	2b 96       	adiw	r28, 0x0b	; 11
    e8d0:	cd bf       	out	0x3d, r28	; 61
    e8d2:	de bf       	out	0x3e, r29	; 62
    e8d4:	df 91       	pop	r29
    e8d6:	cf 91       	pop	r28
    e8d8:	08 95       	ret

0000e8da <_Z12frequencyValPcPm>:
 * str = pointer to a string containing the frequency string
 * result = pointer to a Frequency_Hz variable to hold the frequency in Hz
 * Returns 1 if an error is detected
 */
bool frequencyVal(char* str, Frequency_Hz* result)
{
    e8da:	ef 92       	push	r14
    e8dc:	ff 92       	push	r15
    e8de:	0f 93       	push	r16
    e8e0:	1f 93       	push	r17
    e8e2:	cf 93       	push	r28
    e8e4:	df 93       	push	r29
    e8e6:	cd b7       	in	r28, 0x3d	; 61
    e8e8:	de b7       	in	r29, 0x3e	; 62
    e8ea:	65 97       	sbiw	r28, 0x15	; 21
    e8ec:	cd bf       	out	0x3d, r28	; 61
    e8ee:	de bf       	out	0x3e, r29	; 62
    e8f0:	8a 8b       	std	Y+18, r24	; 0x12
    e8f2:	9b 8b       	std	Y+19, r25	; 0x13
    e8f4:	6c 8b       	std	Y+20, r22	; 0x14
    e8f6:	7d 8b       	std	Y+21, r23	; 0x15
	bool failure = true;
    e8f8:	81 e0       	ldi	r24, 0x01	; 1
    e8fa:	89 83       	std	Y+1, r24	; 0x01
	
	if(!str)
    e8fc:	8a 89       	ldd	r24, Y+18	; 0x12
    e8fe:	9b 89       	ldd	r25, Y+19	; 0x13
    e900:	89 2b       	or	r24, r25
    e902:	11 f4       	brne	.+4      	; 0xe908 <_Z12frequencyValPcPm+0x2e>
	{
		return(failure);
    e904:	89 81       	ldd	r24, Y+1	; 0x01
    e906:	a4 c1       	rjmp	.+840    	; 0xec50 <_Z12frequencyValPcPm+0x376>
	}
	
	int decimal = '.';
    e908:	8e e2       	ldi	r24, 0x2E	; 46
    e90a:	90 e0       	ldi	r25, 0x00	; 0
    e90c:	8a 87       	std	Y+10, r24	; 0x0a
    e90e:	9b 87       	std	Y+11, r25	; 0x0b
	char* decimalLocation = strchr(str, decimal);
    e910:	2a 85       	ldd	r18, Y+10	; 0x0a
    e912:	3b 85       	ldd	r19, Y+11	; 0x0b
    e914:	8a 89       	ldd	r24, Y+18	; 0x12
    e916:	9b 89       	ldd	r25, Y+19	; 0x13
    e918:	b9 01       	movw	r22, r18
    e91a:	0e 94 f8 7b 	call	0xf7f0	; 0xf7f0 <strchr>
    e91e:	8c 87       	std	Y+12, r24	; 0x0c
    e920:	9d 87       	std	Y+13, r25	; 0x0d
	Frequency_Hz temp;
	
	if(decimalLocation) // Assume Hz or kHz
    e922:	8c 85       	ldd	r24, Y+12	; 0x0c
    e924:	9d 85       	ldd	r25, Y+13	; 0x0d
    e926:	89 2b       	or	r24, r25
    e928:	09 f4       	brne	.+2      	; 0xe92c <_Z12frequencyValPcPm+0x52>
    e92a:	d7 c0       	rjmp	.+430    	; 0xeada <_Z12frequencyValPcPm+0x200>
	{
		float f = atof(str);
    e92c:	8a 89       	ldd	r24, Y+18	; 0x12
    e92e:	9b 89       	ldd	r25, Y+19	; 0x13
    e930:	0e 94 95 7b 	call	0xf72a	; 0xf72a <atof>
    e934:	dc 01       	movw	r26, r24
    e936:	cb 01       	movw	r24, r22
    e938:	8a 83       	std	Y+2, r24	; 0x02
    e93a:	9b 83       	std	Y+3, r25	; 0x03
    e93c:	ac 83       	std	Y+4, r26	; 0x04
    e93e:	bd 83       	std	Y+5, r27	; 0x05
		
		if((f > 3.5) && (f < 4.0))
    e940:	20 e0       	ldi	r18, 0x00	; 0
    e942:	30 e0       	ldi	r19, 0x00	; 0
    e944:	40 e6       	ldi	r20, 0x60	; 96
    e946:	50 e4       	ldi	r21, 0x40	; 64
    e948:	6a 81       	ldd	r22, Y+2	; 0x02
    e94a:	7b 81       	ldd	r23, Y+3	; 0x03
    e94c:	8c 81       	ldd	r24, Y+4	; 0x04
    e94e:	9d 81       	ldd	r25, Y+5	; 0x05
    e950:	0e 94 46 79 	call	0xf28c	; 0xf28c <__gesf2>
    e954:	18 16       	cp	r1, r24
    e956:	f4 f4       	brge	.+60     	; 0xe994 <_Z12frequencyValPcPm+0xba>
    e958:	20 e0       	ldi	r18, 0x00	; 0
    e95a:	30 e0       	ldi	r19, 0x00	; 0
    e95c:	40 e8       	ldi	r20, 0x80	; 128
    e95e:	50 e4       	ldi	r21, 0x40	; 64
    e960:	6a 81       	ldd	r22, Y+2	; 0x02
    e962:	7b 81       	ldd	r23, Y+3	; 0x03
    e964:	8c 81       	ldd	r24, Y+4	; 0x04
    e966:	9d 81       	ldd	r25, Y+5	; 0x05
    e968:	0e 94 a6 77 	call	0xef4c	; 0xef4c <__cmpsf2>
    e96c:	88 23       	and	r24, r24
    e96e:	94 f4       	brge	.+36     	; 0xe994 <_Z12frequencyValPcPm+0xba>
		{
			f *= 1000000.;
    e970:	20 e0       	ldi	r18, 0x00	; 0
    e972:	34 e2       	ldi	r19, 0x24	; 36
    e974:	44 e7       	ldi	r20, 0x74	; 116
    e976:	59 e4       	ldi	r21, 0x49	; 73
    e978:	6a 81       	ldd	r22, Y+2	; 0x02
    e97a:	7b 81       	ldd	r23, Y+3	; 0x03
    e97c:	8c 81       	ldd	r24, Y+4	; 0x04
    e97e:	9d 81       	ldd	r25, Y+5	; 0x05
    e980:	0e 94 4b 79 	call	0xf296	; 0xf296 <__mulsf3>
    e984:	dc 01       	movw	r26, r24
    e986:	cb 01       	movw	r24, r22
    e988:	8a 83       	std	Y+2, r24	; 0x02
    e98a:	9b 83       	std	Y+3, r25	; 0x03
    e98c:	ac 83       	std	Y+4, r26	; 0x04
    e98e:	bd 83       	std	Y+5, r27	; 0x05
			failure = false;
    e990:	19 82       	std	Y+1, r1	; 0x01
    e992:	43 c0       	rjmp	.+134    	; 0xea1a <_Z12frequencyValPcPm+0x140>
		}
		else if((f > 3500.) && (f < 4000.))
    e994:	20 e0       	ldi	r18, 0x00	; 0
    e996:	30 ec       	ldi	r19, 0xC0	; 192
    e998:	4a e5       	ldi	r20, 0x5A	; 90
    e99a:	55 e4       	ldi	r21, 0x45	; 69
    e99c:	6a 81       	ldd	r22, Y+2	; 0x02
    e99e:	7b 81       	ldd	r23, Y+3	; 0x03
    e9a0:	8c 81       	ldd	r24, Y+4	; 0x04
    e9a2:	9d 81       	ldd	r25, Y+5	; 0x05
    e9a4:	0e 94 46 79 	call	0xf28c	; 0xf28c <__gesf2>
    e9a8:	18 16       	cp	r1, r24
    e9aa:	f4 f4       	brge	.+60     	; 0xe9e8 <_Z12frequencyValPcPm+0x10e>
    e9ac:	20 e0       	ldi	r18, 0x00	; 0
    e9ae:	30 e0       	ldi	r19, 0x00	; 0
    e9b0:	4a e7       	ldi	r20, 0x7A	; 122
    e9b2:	55 e4       	ldi	r21, 0x45	; 69
    e9b4:	6a 81       	ldd	r22, Y+2	; 0x02
    e9b6:	7b 81       	ldd	r23, Y+3	; 0x03
    e9b8:	8c 81       	ldd	r24, Y+4	; 0x04
    e9ba:	9d 81       	ldd	r25, Y+5	; 0x05
    e9bc:	0e 94 a6 77 	call	0xef4c	; 0xef4c <__cmpsf2>
    e9c0:	88 23       	and	r24, r24
    e9c2:	94 f4       	brge	.+36     	; 0xe9e8 <_Z12frequencyValPcPm+0x10e>
		{
			f *= 1000.;
    e9c4:	20 e0       	ldi	r18, 0x00	; 0
    e9c6:	30 e0       	ldi	r19, 0x00	; 0
    e9c8:	4a e7       	ldi	r20, 0x7A	; 122
    e9ca:	54 e4       	ldi	r21, 0x44	; 68
    e9cc:	6a 81       	ldd	r22, Y+2	; 0x02
    e9ce:	7b 81       	ldd	r23, Y+3	; 0x03
    e9d0:	8c 81       	ldd	r24, Y+4	; 0x04
    e9d2:	9d 81       	ldd	r25, Y+5	; 0x05
    e9d4:	0e 94 4b 79 	call	0xf296	; 0xf296 <__mulsf3>
    e9d8:	dc 01       	movw	r26, r24
    e9da:	cb 01       	movw	r24, r22
    e9dc:	8a 83       	std	Y+2, r24	; 0x02
    e9de:	9b 83       	std	Y+3, r25	; 0x03
    e9e0:	ac 83       	std	Y+4, r26	; 0x04
    e9e2:	bd 83       	std	Y+5, r27	; 0x05
			failure = false;
    e9e4:	19 82       	std	Y+1, r1	; 0x01
    e9e6:	19 c0       	rjmp	.+50     	; 0xea1a <_Z12frequencyValPcPm+0x140>
		}
		else if((f > 3500000.) && (f < 4000000.))
    e9e8:	20 e8       	ldi	r18, 0x80	; 128
    e9ea:	3f e9       	ldi	r19, 0x9F	; 159
    e9ec:	45 e5       	ldi	r20, 0x55	; 85
    e9ee:	5a e4       	ldi	r21, 0x4A	; 74
    e9f0:	6a 81       	ldd	r22, Y+2	; 0x02
    e9f2:	7b 81       	ldd	r23, Y+3	; 0x03
    e9f4:	8c 81       	ldd	r24, Y+4	; 0x04
    e9f6:	9d 81       	ldd	r25, Y+5	; 0x05
    e9f8:	0e 94 46 79 	call	0xf28c	; 0xf28c <__gesf2>
    e9fc:	18 16       	cp	r1, r24
    e9fe:	6c f4       	brge	.+26     	; 0xea1a <_Z12frequencyValPcPm+0x140>
    ea00:	20 e0       	ldi	r18, 0x00	; 0
    ea02:	34 e2       	ldi	r19, 0x24	; 36
    ea04:	44 e7       	ldi	r20, 0x74	; 116
    ea06:	5a e4       	ldi	r21, 0x4A	; 74
    ea08:	6a 81       	ldd	r22, Y+2	; 0x02
    ea0a:	7b 81       	ldd	r23, Y+3	; 0x03
    ea0c:	8c 81       	ldd	r24, Y+4	; 0x04
    ea0e:	9d 81       	ldd	r25, Y+5	; 0x05
    ea10:	0e 94 a6 77 	call	0xef4c	; 0xef4c <__cmpsf2>
    ea14:	88 23       	and	r24, r24
    ea16:	0c f4       	brge	.+2      	; 0xea1a <_Z12frequencyValPcPm+0x140>
		{
			failure = false;
    ea18:	19 82       	std	Y+1, r1	; 0x01
		}
		
		if(!failure)
    ea1a:	99 81       	ldd	r25, Y+1	; 0x01
    ea1c:	81 e0       	ldi	r24, 0x01	; 1
    ea1e:	89 27       	eor	r24, r25
    ea20:	88 23       	and	r24, r24
    ea22:	09 f4       	brne	.+2      	; 0xea26 <_Z12frequencyValPcPm+0x14c>
    ea24:	14 c1       	rjmp	.+552    	; 0xec4e <_Z12frequencyValPcPm+0x374>
		{
			temp = (Frequency_Hz)ceilf(f);
    ea26:	8a 81       	ldd	r24, Y+2	; 0x02
    ea28:	9b 81       	ldd	r25, Y+3	; 0x03
    ea2a:	ac 81       	ldd	r26, Y+4	; 0x04
    ea2c:	bd 81       	ldd	r27, Y+5	; 0x05
    ea2e:	bc 01       	movw	r22, r24
    ea30:	cd 01       	movw	r24, r26
    ea32:	0e 94 8f 77 	call	0xef1e	; 0xef1e <ceil>
    ea36:	dc 01       	movw	r26, r24
    ea38:	cb 01       	movw	r24, r22
    ea3a:	bc 01       	movw	r22, r24
    ea3c:	cd 01       	movw	r24, r26
    ea3e:	0e 94 24 78 	call	0xf048	; 0xf048 <__fixunssfsi>
    ea42:	dc 01       	movw	r26, r24
    ea44:	cb 01       	movw	r24, r22
    ea46:	8e 87       	std	Y+14, r24	; 0x0e
    ea48:	9f 87       	std	Y+15, r25	; 0x0f
    ea4a:	a8 8b       	std	Y+16, r26	; 0x10
    ea4c:	b9 8b       	std	Y+17, r27	; 0x11
			temp = temp - (temp % 100);
    ea4e:	8e 85       	ldd	r24, Y+14	; 0x0e
    ea50:	9f 85       	ldd	r25, Y+15	; 0x0f
    ea52:	a8 89       	ldd	r26, Y+16	; 0x10
    ea54:	b9 89       	ldd	r27, Y+17	; 0x11
    ea56:	24 e6       	ldi	r18, 0x64	; 100
    ea58:	30 e0       	ldi	r19, 0x00	; 0
    ea5a:	40 e0       	ldi	r20, 0x00	; 0
    ea5c:	50 e0       	ldi	r21, 0x00	; 0
    ea5e:	bc 01       	movw	r22, r24
    ea60:	cd 01       	movw	r24, r26
    ea62:	0e 94 f0 79 	call	0xf3e0	; 0xf3e0 <__udivmodsi4>
    ea66:	dc 01       	movw	r26, r24
    ea68:	cb 01       	movw	r24, r22
    ea6a:	9c 01       	movw	r18, r24
    ea6c:	ad 01       	movw	r20, r26
    ea6e:	8e 85       	ldd	r24, Y+14	; 0x0e
    ea70:	9f 85       	ldd	r25, Y+15	; 0x0f
    ea72:	a8 89       	ldd	r26, Y+16	; 0x10
    ea74:	b9 89       	ldd	r27, Y+17	; 0x11
    ea76:	82 1b       	sub	r24, r18
    ea78:	93 0b       	sbc	r25, r19
    ea7a:	a4 0b       	sbc	r26, r20
    ea7c:	b5 0b       	sbc	r27, r21
    ea7e:	8e 87       	std	Y+14, r24	; 0x0e
    ea80:	9f 87       	std	Y+15, r25	; 0x0f
    ea82:	a8 8b       	std	Y+16, r26	; 0x10
    ea84:	b9 8b       	std	Y+17, r27	; 0x11
			if(result) *result = temp;
    ea86:	8c 89       	ldd	r24, Y+20	; 0x14
    ea88:	9d 89       	ldd	r25, Y+21	; 0x15
    ea8a:	89 2b       	or	r24, r25
    ea8c:	59 f0       	breq	.+22     	; 0xeaa4 <_Z12frequencyValPcPm+0x1ca>
    ea8e:	2c 89       	ldd	r18, Y+20	; 0x14
    ea90:	3d 89       	ldd	r19, Y+21	; 0x15
    ea92:	8e 85       	ldd	r24, Y+14	; 0x0e
    ea94:	9f 85       	ldd	r25, Y+15	; 0x0f
    ea96:	a8 89       	ldd	r26, Y+16	; 0x10
    ea98:	b9 89       	ldd	r27, Y+17	; 0x11
    ea9a:	f9 01       	movw	r30, r18
    ea9c:	80 83       	st	Z, r24
    ea9e:	91 83       	std	Z+1, r25	; 0x01
    eaa0:	a2 83       	std	Z+2, r26	; 0x02
    eaa2:	b3 83       	std	Z+3, r27	; 0x03
			sprintf(str, "%4.1f kHz", (double)f);
    eaa4:	8d 81       	ldd	r24, Y+5	; 0x05
    eaa6:	8f 93       	push	r24
    eaa8:	8c 81       	ldd	r24, Y+4	; 0x04
    eaaa:	8f 93       	push	r24
    eaac:	8b 81       	ldd	r24, Y+3	; 0x03
    eaae:	8f 93       	push	r24
    eab0:	8a 81       	ldd	r24, Y+2	; 0x02
    eab2:	8f 93       	push	r24
    eab4:	8a e0       	ldi	r24, 0x0A	; 10
    eab6:	95 e4       	ldi	r25, 0x45	; 69
    eab8:	89 2f       	mov	r24, r25
    eaba:	8f 93       	push	r24
    eabc:	8a e0       	ldi	r24, 0x0A	; 10
    eabe:	95 e4       	ldi	r25, 0x45	; 69
    eac0:	8f 93       	push	r24
    eac2:	8b 89       	ldd	r24, Y+19	; 0x13
    eac4:	8f 93       	push	r24
    eac6:	8a 89       	ldd	r24, Y+18	; 0x12
    eac8:	8f 93       	push	r24
    eaca:	0e 94 48 7c 	call	0xf890	; 0xf890 <sprintf>
    eace:	8d b7       	in	r24, 0x3d	; 61
    ead0:	9e b7       	in	r25, 0x3e	; 62
    ead2:	08 96       	adiw	r24, 0x08	; 8
    ead4:	cd bf       	out	0x3d, r28	; 61
    ead6:	de bf       	out	0x3e, r29	; 62
    ead8:	ba c0       	rjmp	.+372    	; 0xec4e <_Z12frequencyValPcPm+0x374>
		}
	}
	else
	{
		Frequency_Hz f = (Frequency_Hz)atol(str);
    eada:	8a 89       	ldd	r24, Y+18	; 0x12
    eadc:	9b 89       	ldd	r25, Y+19	; 0x13
    eade:	0e 94 b7 7b 	call	0xf76e	; 0xf76e <atol>
    eae2:	dc 01       	movw	r26, r24
    eae4:	cb 01       	movw	r24, r22
    eae6:	8e 83       	std	Y+6, r24	; 0x06
    eae8:	9f 83       	std	Y+7, r25	; 0x07
    eaea:	a8 87       	std	Y+8, r26	; 0x08
    eaec:	b9 87       	std	Y+9, r27	; 0x09
		
		if((f > 3500) && (f < 4000))
    eaee:	8e 81       	ldd	r24, Y+6	; 0x06
    eaf0:	9f 81       	ldd	r25, Y+7	; 0x07
    eaf2:	a8 85       	ldd	r26, Y+8	; 0x08
    eaf4:	b9 85       	ldd	r27, Y+9	; 0x09
    eaf6:	8d 3a       	cpi	r24, 0xAD	; 173
    eaf8:	9d 40       	sbci	r25, 0x0D	; 13
    eafa:	a1 05       	cpc	r26, r1
    eafc:	b1 05       	cpc	r27, r1
    eafe:	d0 f0       	brcs	.+52     	; 0xeb34 <_Z12frequencyValPcPm+0x25a>
    eb00:	8e 81       	ldd	r24, Y+6	; 0x06
    eb02:	9f 81       	ldd	r25, Y+7	; 0x07
    eb04:	a8 85       	ldd	r26, Y+8	; 0x08
    eb06:	b9 85       	ldd	r27, Y+9	; 0x09
    eb08:	80 3a       	cpi	r24, 0xA0	; 160
    eb0a:	9f 40       	sbci	r25, 0x0F	; 15
    eb0c:	a1 05       	cpc	r26, r1
    eb0e:	b1 05       	cpc	r27, r1
    eb10:	88 f4       	brcc	.+34     	; 0xeb34 <_Z12frequencyValPcPm+0x25a>
		{
			f *= 1000;
    eb12:	2e 81       	ldd	r18, Y+6	; 0x06
    eb14:	3f 81       	ldd	r19, Y+7	; 0x07
    eb16:	48 85       	ldd	r20, Y+8	; 0x08
    eb18:	59 85       	ldd	r21, Y+9	; 0x09
    eb1a:	88 ee       	ldi	r24, 0xE8	; 232
    eb1c:	93 e0       	ldi	r25, 0x03	; 3
    eb1e:	dc 01       	movw	r26, r24
    eb20:	0e 94 49 7a 	call	0xf492	; 0xf492 <__muluhisi3>
    eb24:	dc 01       	movw	r26, r24
    eb26:	cb 01       	movw	r24, r22
    eb28:	8e 83       	std	Y+6, r24	; 0x06
    eb2a:	9f 83       	std	Y+7, r25	; 0x07
    eb2c:	a8 87       	std	Y+8, r26	; 0x08
    eb2e:	b9 87       	std	Y+9, r27	; 0x09
			failure = false;
    eb30:	19 82       	std	Y+1, r1	; 0x01
    eb32:	2f c0       	rjmp	.+94     	; 0xeb92 <_Z12frequencyValPcPm+0x2b8>
		}
		else if((f > 3500000) && (f < 4000000))
    eb34:	8e 81       	ldd	r24, Y+6	; 0x06
    eb36:	9f 81       	ldd	r25, Y+7	; 0x07
    eb38:	a8 85       	ldd	r26, Y+8	; 0x08
    eb3a:	b9 85       	ldd	r27, Y+9	; 0x09
    eb3c:	81 3e       	cpi	r24, 0xE1	; 225
    eb3e:	97 46       	sbci	r25, 0x67	; 103
    eb40:	a5 43       	sbci	r26, 0x35	; 53
    eb42:	b1 05       	cpc	r27, r1
    eb44:	30 f1       	brcs	.+76     	; 0xeb92 <_Z12frequencyValPcPm+0x2b8>
    eb46:	8e 81       	ldd	r24, Y+6	; 0x06
    eb48:	9f 81       	ldd	r25, Y+7	; 0x07
    eb4a:	a8 85       	ldd	r26, Y+8	; 0x08
    eb4c:	b9 85       	ldd	r27, Y+9	; 0x09
    eb4e:	81 15       	cp	r24, r1
    eb50:	99 40       	sbci	r25, 0x09	; 9
    eb52:	ad 43       	sbci	r26, 0x3D	; 61
    eb54:	b1 05       	cpc	r27, r1
    eb56:	e8 f4       	brcc	.+58     	; 0xeb92 <_Z12frequencyValPcPm+0x2b8>
		{
			f = f - (f % 100);
    eb58:	8e 81       	ldd	r24, Y+6	; 0x06
    eb5a:	9f 81       	ldd	r25, Y+7	; 0x07
    eb5c:	a8 85       	ldd	r26, Y+8	; 0x08
    eb5e:	b9 85       	ldd	r27, Y+9	; 0x09
    eb60:	24 e6       	ldi	r18, 0x64	; 100
    eb62:	30 e0       	ldi	r19, 0x00	; 0
    eb64:	40 e0       	ldi	r20, 0x00	; 0
    eb66:	50 e0       	ldi	r21, 0x00	; 0
    eb68:	bc 01       	movw	r22, r24
    eb6a:	cd 01       	movw	r24, r26
    eb6c:	0e 94 f0 79 	call	0xf3e0	; 0xf3e0 <__udivmodsi4>
    eb70:	dc 01       	movw	r26, r24
    eb72:	cb 01       	movw	r24, r22
    eb74:	9c 01       	movw	r18, r24
    eb76:	ad 01       	movw	r20, r26
    eb78:	8e 81       	ldd	r24, Y+6	; 0x06
    eb7a:	9f 81       	ldd	r25, Y+7	; 0x07
    eb7c:	a8 85       	ldd	r26, Y+8	; 0x08
    eb7e:	b9 85       	ldd	r27, Y+9	; 0x09
    eb80:	82 1b       	sub	r24, r18
    eb82:	93 0b       	sbc	r25, r19
    eb84:	a4 0b       	sbc	r26, r20
    eb86:	b5 0b       	sbc	r27, r21
    eb88:	8e 83       	std	Y+6, r24	; 0x06
    eb8a:	9f 83       	std	Y+7, r25	; 0x07
    eb8c:	a8 87       	std	Y+8, r26	; 0x08
    eb8e:	b9 87       	std	Y+9, r27	; 0x09
			failure = false;
    eb90:	19 82       	std	Y+1, r1	; 0x01
		}
		
		if(!failure)
    eb92:	99 81       	ldd	r25, Y+1	; 0x01
    eb94:	81 e0       	ldi	r24, 0x01	; 1
    eb96:	89 27       	eor	r24, r25
    eb98:	88 23       	and	r24, r24
    eb9a:	09 f4       	brne	.+2      	; 0xeb9e <_Z12frequencyValPcPm+0x2c4>
    eb9c:	58 c0       	rjmp	.+176    	; 0xec4e <_Z12frequencyValPcPm+0x374>
		{
			if(result) *result = f;
    eb9e:	8c 89       	ldd	r24, Y+20	; 0x14
    eba0:	9d 89       	ldd	r25, Y+21	; 0x15
    eba2:	89 2b       	or	r24, r25
    eba4:	59 f0       	breq	.+22     	; 0xebbc <_Z12frequencyValPcPm+0x2e2>
    eba6:	2c 89       	ldd	r18, Y+20	; 0x14
    eba8:	3d 89       	ldd	r19, Y+21	; 0x15
    ebaa:	8e 81       	ldd	r24, Y+6	; 0x06
    ebac:	9f 81       	ldd	r25, Y+7	; 0x07
    ebae:	a8 85       	ldd	r26, Y+8	; 0x08
    ebb0:	b9 85       	ldd	r27, Y+9	; 0x09
    ebb2:	f9 01       	movw	r30, r18
    ebb4:	80 83       	st	Z, r24
    ebb6:	91 83       	std	Z+1, r25	; 0x01
    ebb8:	a2 83       	std	Z+2, r26	; 0x02
    ebba:	b3 83       	std	Z+3, r27	; 0x03
			sprintf(str, "%lu.%1lu kHz", f/1000, (f % 1000)/100);
    ebbc:	8e 81       	ldd	r24, Y+6	; 0x06
    ebbe:	9f 81       	ldd	r25, Y+7	; 0x07
    ebc0:	a8 85       	ldd	r26, Y+8	; 0x08
    ebc2:	b9 85       	ldd	r27, Y+9	; 0x09
    ebc4:	28 ee       	ldi	r18, 0xE8	; 232
    ebc6:	33 e0       	ldi	r19, 0x03	; 3
    ebc8:	40 e0       	ldi	r20, 0x00	; 0
    ebca:	50 e0       	ldi	r21, 0x00	; 0
    ebcc:	bc 01       	movw	r22, r24
    ebce:	cd 01       	movw	r24, r26
    ebd0:	0e 94 f0 79 	call	0xf3e0	; 0xf3e0 <__udivmodsi4>
    ebd4:	dc 01       	movw	r26, r24
    ebd6:	cb 01       	movw	r24, r22
    ebd8:	24 e6       	ldi	r18, 0x64	; 100
    ebda:	30 e0       	ldi	r19, 0x00	; 0
    ebdc:	40 e0       	ldi	r20, 0x00	; 0
    ebde:	50 e0       	ldi	r21, 0x00	; 0
    ebe0:	bc 01       	movw	r22, r24
    ebe2:	cd 01       	movw	r24, r26
    ebe4:	0e 94 f0 79 	call	0xf3e0	; 0xf3e0 <__udivmodsi4>
    ebe8:	da 01       	movw	r26, r20
    ebea:	c9 01       	movw	r24, r18
    ebec:	7c 01       	movw	r14, r24
    ebee:	8d 01       	movw	r16, r26
    ebf0:	8e 81       	ldd	r24, Y+6	; 0x06
    ebf2:	9f 81       	ldd	r25, Y+7	; 0x07
    ebf4:	a8 85       	ldd	r26, Y+8	; 0x08
    ebf6:	b9 85       	ldd	r27, Y+9	; 0x09
    ebf8:	28 ee       	ldi	r18, 0xE8	; 232
    ebfa:	33 e0       	ldi	r19, 0x03	; 3
    ebfc:	40 e0       	ldi	r20, 0x00	; 0
    ebfe:	50 e0       	ldi	r21, 0x00	; 0
    ec00:	bc 01       	movw	r22, r24
    ec02:	cd 01       	movw	r24, r26
    ec04:	0e 94 f0 79 	call	0xf3e0	; 0xf3e0 <__udivmodsi4>
    ec08:	da 01       	movw	r26, r20
    ec0a:	c9 01       	movw	r24, r18
    ec0c:	21 2f       	mov	r18, r17
    ec0e:	2f 93       	push	r18
    ec10:	20 2f       	mov	r18, r16
    ec12:	2f 93       	push	r18
    ec14:	2f 2d       	mov	r18, r15
    ec16:	2f 93       	push	r18
    ec18:	2e 2d       	mov	r18, r14
    ec1a:	2f 93       	push	r18
    ec1c:	2b 2f       	mov	r18, r27
    ec1e:	2f 93       	push	r18
    ec20:	2a 2f       	mov	r18, r26
    ec22:	2f 93       	push	r18
    ec24:	29 2f       	mov	r18, r25
    ec26:	2f 93       	push	r18
    ec28:	8f 93       	push	r24
    ec2a:	8d ef       	ldi	r24, 0xFD	; 253
    ec2c:	94 e4       	ldi	r25, 0x44	; 68
    ec2e:	89 2f       	mov	r24, r25
    ec30:	8f 93       	push	r24
    ec32:	8d ef       	ldi	r24, 0xFD	; 253
    ec34:	94 e4       	ldi	r25, 0x44	; 68
    ec36:	8f 93       	push	r24
    ec38:	8b 89       	ldd	r24, Y+19	; 0x13
    ec3a:	8f 93       	push	r24
    ec3c:	8a 89       	ldd	r24, Y+18	; 0x12
    ec3e:	8f 93       	push	r24
    ec40:	0e 94 48 7c 	call	0xf890	; 0xf890 <sprintf>
    ec44:	8d b7       	in	r24, 0x3d	; 61
    ec46:	9e b7       	in	r25, 0x3e	; 62
    ec48:	0c 96       	adiw	r24, 0x0c	; 12
    ec4a:	cd bf       	out	0x3d, r28	; 61
    ec4c:	de bf       	out	0x3e, r29	; 62
		}
	}
	
	return(failure);	
    ec4e:	89 81       	ldd	r24, Y+1	; 0x01
}
    ec50:	65 96       	adiw	r28, 0x15	; 21
    ec52:	cd bf       	out	0x3d, r28	; 61
    ec54:	de bf       	out	0x3e, r29	; 62
    ec56:	df 91       	pop	r29
    ec58:	cf 91       	pop	r28
    ec5a:	1f 91       	pop	r17
    ec5c:	0f 91       	pop	r16
    ec5e:	ff 90       	pop	r15
    ec60:	ef 90       	pop	r14
    ec62:	08 95       	ret

0000ec64 <_Z8fox2TextPc5Fox_t>:

bool fox2Text(char* str, Fox_t fox)
{
    ec64:	cf 93       	push	r28
    ec66:	df 93       	push	r29
    ec68:	00 d0       	rcall	.+0      	; 0xec6a <_Z8fox2TextPc5Fox_t+0x6>
    ec6a:	00 d0       	rcall	.+0      	; 0xec6c <_Z8fox2TextPc5Fox_t+0x8>
    ec6c:	cd b7       	in	r28, 0x3d	; 61
    ec6e:	de b7       	in	r29, 0x3e	; 62
    ec70:	8a 83       	std	Y+2, r24	; 0x02
    ec72:	9b 83       	std	Y+3, r25	; 0x03
    ec74:	6c 83       	std	Y+4, r22	; 0x04
	bool failure = false;
    ec76:	19 82       	std	Y+1, r1	; 0x01
	
	switch(fox)
    ec78:	8c 81       	ldd	r24, Y+4	; 0x04
    ec7a:	88 2f       	mov	r24, r24
    ec7c:	90 e0       	ldi	r25, 0x00	; 0
    ec7e:	09 2e       	mov	r0, r25
    ec80:	00 0c       	add	r0, r0
    ec82:	aa 0b       	sbc	r26, r26
    ec84:	bb 0b       	sbc	r27, r27
    ec86:	40 e0       	ldi	r20, 0x00	; 0
    ec88:	50 e0       	ldi	r21, 0x00	; 0
    ec8a:	21 e1       	ldi	r18, 0x11	; 17
    ec8c:	30 e0       	ldi	r19, 0x00	; 0
    ec8e:	84 1b       	sub	r24, r20
    ec90:	95 0b       	sbc	r25, r21
    ec92:	28 17       	cp	r18, r24
    ec94:	39 07       	cpc	r19, r25
    ec96:	08 f4       	brcc	.+2      	; 0xec9a <_Z8fox2TextPc5Fox_t+0x36>
    ec98:	cb c0       	rjmp	.+406    	; 0xee30 <_Z8fox2TextPc5Fox_t+0x1cc>
    ec9a:	8f 5b       	subi	r24, 0xBF	; 191
    ec9c:	9e 4f       	sbci	r25, 0xFE	; 254
    ec9e:	fc 01       	movw	r30, r24
    eca0:	0c 94 31 7a 	jmp	0xf462	; 0xf462 <__tablejump2__>
	{
		case BEACON:
		{
			sprintf(str, "Finish \"MO\"");
    eca4:	8a 81       	ldd	r24, Y+2	; 0x02
    eca6:	9b 81       	ldd	r25, Y+3	; 0x03
    eca8:	2c e0       	ldi	r18, 0x0C	; 12
    ecaa:	e4 e1       	ldi	r30, 0x14	; 20
    ecac:	f5 e4       	ldi	r31, 0x45	; 69
    ecae:	dc 01       	movw	r26, r24
    ecb0:	01 90       	ld	r0, Z+
    ecb2:	0d 92       	st	X+, r0
    ecb4:	2a 95       	dec	r18
    ecb6:	e1 f7       	brne	.-8      	; 0xecb0 <_Z8fox2TextPc5Fox_t+0x4c>
		}
		break;
    ecb8:	be c0       	rjmp	.+380    	; 0xee36 <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case FOX_1:
		{
			sprintf(str, "Classic Fox 1 \"MOE\"");
    ecba:	8a 81       	ldd	r24, Y+2	; 0x02
    ecbc:	9b 81       	ldd	r25, Y+3	; 0x03
    ecbe:	24 e1       	ldi	r18, 0x14	; 20
    ecc0:	e0 e2       	ldi	r30, 0x20	; 32
    ecc2:	f5 e4       	ldi	r31, 0x45	; 69
    ecc4:	dc 01       	movw	r26, r24
    ecc6:	01 90       	ld	r0, Z+
    ecc8:	0d 92       	st	X+, r0
    ecca:	2a 95       	dec	r18
    eccc:	e1 f7       	brne	.-8      	; 0xecc6 <_Z8fox2TextPc5Fox_t+0x62>
		}
		break;
    ecce:	b3 c0       	rjmp	.+358    	; 0xee36 <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case FOX_2:
		{
			sprintf(str, "Classic Fox 2 \"MOI\"");
    ecd0:	8a 81       	ldd	r24, Y+2	; 0x02
    ecd2:	9b 81       	ldd	r25, Y+3	; 0x03
    ecd4:	24 e1       	ldi	r18, 0x14	; 20
    ecd6:	e4 e3       	ldi	r30, 0x34	; 52
    ecd8:	f5 e4       	ldi	r31, 0x45	; 69
    ecda:	dc 01       	movw	r26, r24
    ecdc:	01 90       	ld	r0, Z+
    ecde:	0d 92       	st	X+, r0
    ece0:	2a 95       	dec	r18
    ece2:	e1 f7       	brne	.-8      	; 0xecdc <_Z8fox2TextPc5Fox_t+0x78>
		}
		break;
    ece4:	a8 c0       	rjmp	.+336    	; 0xee36 <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case FOX_3:
		{
			sprintf(str, "Classic Fox 3 \"MOS\"");
    ece6:	8a 81       	ldd	r24, Y+2	; 0x02
    ece8:	9b 81       	ldd	r25, Y+3	; 0x03
    ecea:	24 e1       	ldi	r18, 0x14	; 20
    ecec:	e8 e4       	ldi	r30, 0x48	; 72
    ecee:	f5 e4       	ldi	r31, 0x45	; 69
    ecf0:	dc 01       	movw	r26, r24
    ecf2:	01 90       	ld	r0, Z+
    ecf4:	0d 92       	st	X+, r0
    ecf6:	2a 95       	dec	r18
    ecf8:	e1 f7       	brne	.-8      	; 0xecf2 <_Z8fox2TextPc5Fox_t+0x8e>
		}
		break;
    ecfa:	9d c0       	rjmp	.+314    	; 0xee36 <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case FOX_4:
		{
			sprintf(str, "Classic Fox 4 \"MOH\"");
    ecfc:	8a 81       	ldd	r24, Y+2	; 0x02
    ecfe:	9b 81       	ldd	r25, Y+3	; 0x03
    ed00:	24 e1       	ldi	r18, 0x14	; 20
    ed02:	ec e5       	ldi	r30, 0x5C	; 92
    ed04:	f5 e4       	ldi	r31, 0x45	; 69
    ed06:	dc 01       	movw	r26, r24
    ed08:	01 90       	ld	r0, Z+
    ed0a:	0d 92       	st	X+, r0
    ed0c:	2a 95       	dec	r18
    ed0e:	e1 f7       	brne	.-8      	; 0xed08 <_Z8fox2TextPc5Fox_t+0xa4>
		}
		break;
    ed10:	92 c0       	rjmp	.+292    	; 0xee36 <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case FOX_5:
		{
			sprintf(str, "Classic Fox 5 \"MO5\"");
    ed12:	8a 81       	ldd	r24, Y+2	; 0x02
    ed14:	9b 81       	ldd	r25, Y+3	; 0x03
    ed16:	24 e1       	ldi	r18, 0x14	; 20
    ed18:	e0 e7       	ldi	r30, 0x70	; 112
    ed1a:	f5 e4       	ldi	r31, 0x45	; 69
    ed1c:	dc 01       	movw	r26, r24
    ed1e:	01 90       	ld	r0, Z+
    ed20:	0d 92       	st	X+, r0
    ed22:	2a 95       	dec	r18
    ed24:	e1 f7       	brne	.-8      	; 0xed1e <_Z8fox2TextPc5Fox_t+0xba>
		}
		break;
    ed26:	87 c0       	rjmp	.+270    	; 0xee36 <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case FOXORING:
		{
			sprintf(str, "Foxoring");
    ed28:	8a 81       	ldd	r24, Y+2	; 0x02
    ed2a:	9b 81       	ldd	r25, Y+3	; 0x03
    ed2c:	29 e0       	ldi	r18, 0x09	; 9
    ed2e:	e4 e8       	ldi	r30, 0x84	; 132
    ed30:	f5 e4       	ldi	r31, 0x45	; 69
    ed32:	dc 01       	movw	r26, r24
    ed34:	01 90       	ld	r0, Z+
    ed36:	0d 92       	st	X+, r0
    ed38:	2a 95       	dec	r18
    ed3a:	e1 f7       	brne	.-8      	; 0xed34 <_Z8fox2TextPc5Fox_t+0xd0>
		}
		break;
    ed3c:	7c c0       	rjmp	.+248    	; 0xee36 <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPECTATOR:
		{
			sprintf(str, "Spectator \"S\"");
    ed3e:	8a 81       	ldd	r24, Y+2	; 0x02
    ed40:	9b 81       	ldd	r25, Y+3	; 0x03
    ed42:	2e e0       	ldi	r18, 0x0E	; 14
    ed44:	ed e8       	ldi	r30, 0x8D	; 141
    ed46:	f5 e4       	ldi	r31, 0x45	; 69
    ed48:	dc 01       	movw	r26, r24
    ed4a:	01 90       	ld	r0, Z+
    ed4c:	0d 92       	st	X+, r0
    ed4e:	2a 95       	dec	r18
    ed50:	e1 f7       	brne	.-8      	; 0xed4a <_Z8fox2TextPc5Fox_t+0xe6>
		}
		break;
    ed52:	71 c0       	rjmp	.+226    	; 0xee36 <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_S1:
		{
			sprintf(str, "Sprint Slow 1 \"ME\"");
    ed54:	8a 81       	ldd	r24, Y+2	; 0x02
    ed56:	9b 81       	ldd	r25, Y+3	; 0x03
    ed58:	23 e1       	ldi	r18, 0x13	; 19
    ed5a:	eb e9       	ldi	r30, 0x9B	; 155
    ed5c:	f5 e4       	ldi	r31, 0x45	; 69
    ed5e:	dc 01       	movw	r26, r24
    ed60:	01 90       	ld	r0, Z+
    ed62:	0d 92       	st	X+, r0
    ed64:	2a 95       	dec	r18
    ed66:	e1 f7       	brne	.-8      	; 0xed60 <_Z8fox2TextPc5Fox_t+0xfc>
		}
		break;
    ed68:	66 c0       	rjmp	.+204    	; 0xee36 <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_S2:
		{
			sprintf(str, "Sprint Slow 2 \"MI\"");
    ed6a:	8a 81       	ldd	r24, Y+2	; 0x02
    ed6c:	9b 81       	ldd	r25, Y+3	; 0x03
    ed6e:	23 e1       	ldi	r18, 0x13	; 19
    ed70:	ee ea       	ldi	r30, 0xAE	; 174
    ed72:	f5 e4       	ldi	r31, 0x45	; 69
    ed74:	dc 01       	movw	r26, r24
    ed76:	01 90       	ld	r0, Z+
    ed78:	0d 92       	st	X+, r0
    ed7a:	2a 95       	dec	r18
    ed7c:	e1 f7       	brne	.-8      	; 0xed76 <_Z8fox2TextPc5Fox_t+0x112>
		}
		break;
    ed7e:	5b c0       	rjmp	.+182    	; 0xee36 <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_S3:
		{
			sprintf(str, "Sprint Slow 3 \"MS\"");
    ed80:	8a 81       	ldd	r24, Y+2	; 0x02
    ed82:	9b 81       	ldd	r25, Y+3	; 0x03
    ed84:	23 e1       	ldi	r18, 0x13	; 19
    ed86:	e1 ec       	ldi	r30, 0xC1	; 193
    ed88:	f5 e4       	ldi	r31, 0x45	; 69
    ed8a:	dc 01       	movw	r26, r24
    ed8c:	01 90       	ld	r0, Z+
    ed8e:	0d 92       	st	X+, r0
    ed90:	2a 95       	dec	r18
    ed92:	e1 f7       	brne	.-8      	; 0xed8c <_Z8fox2TextPc5Fox_t+0x128>
		}
		break;
    ed94:	50 c0       	rjmp	.+160    	; 0xee36 <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_S4:
		{
			sprintf(str, "Sprint Slow 4 \"MH\"");
    ed96:	8a 81       	ldd	r24, Y+2	; 0x02
    ed98:	9b 81       	ldd	r25, Y+3	; 0x03
    ed9a:	23 e1       	ldi	r18, 0x13	; 19
    ed9c:	e4 ed       	ldi	r30, 0xD4	; 212
    ed9e:	f5 e4       	ldi	r31, 0x45	; 69
    eda0:	dc 01       	movw	r26, r24
    eda2:	01 90       	ld	r0, Z+
    eda4:	0d 92       	st	X+, r0
    eda6:	2a 95       	dec	r18
    eda8:	e1 f7       	brne	.-8      	; 0xeda2 <_Z8fox2TextPc5Fox_t+0x13e>
		}
		break;
    edaa:	45 c0       	rjmp	.+138    	; 0xee36 <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_S5:
		{
			sprintf(str, "Sprint Slow 5 \"M5\"");
    edac:	8a 81       	ldd	r24, Y+2	; 0x02
    edae:	9b 81       	ldd	r25, Y+3	; 0x03
    edb0:	23 e1       	ldi	r18, 0x13	; 19
    edb2:	e7 ee       	ldi	r30, 0xE7	; 231
    edb4:	f5 e4       	ldi	r31, 0x45	; 69
    edb6:	dc 01       	movw	r26, r24
    edb8:	01 90       	ld	r0, Z+
    edba:	0d 92       	st	X+, r0
    edbc:	2a 95       	dec	r18
    edbe:	e1 f7       	brne	.-8      	; 0xedb8 <_Z8fox2TextPc5Fox_t+0x154>
		}
		break;
    edc0:	3a c0       	rjmp	.+116    	; 0xee36 <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_F1:
		{
			sprintf(str, "Sprint Fast 1 \"OE\"");
    edc2:	8a 81       	ldd	r24, Y+2	; 0x02
    edc4:	9b 81       	ldd	r25, Y+3	; 0x03
    edc6:	23 e1       	ldi	r18, 0x13	; 19
    edc8:	ea ef       	ldi	r30, 0xFA	; 250
    edca:	f5 e4       	ldi	r31, 0x45	; 69
    edcc:	dc 01       	movw	r26, r24
    edce:	01 90       	ld	r0, Z+
    edd0:	0d 92       	st	X+, r0
    edd2:	2a 95       	dec	r18
    edd4:	e1 f7       	brne	.-8      	; 0xedce <_Z8fox2TextPc5Fox_t+0x16a>
		}
		break;
    edd6:	2f c0       	rjmp	.+94     	; 0xee36 <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_F2:
		{
			sprintf(str, "Sprint Fast 2 \"OI\"");
    edd8:	8a 81       	ldd	r24, Y+2	; 0x02
    edda:	9b 81       	ldd	r25, Y+3	; 0x03
    eddc:	23 e1       	ldi	r18, 0x13	; 19
    edde:	ed e0       	ldi	r30, 0x0D	; 13
    ede0:	f6 e4       	ldi	r31, 0x46	; 70
    ede2:	dc 01       	movw	r26, r24
    ede4:	01 90       	ld	r0, Z+
    ede6:	0d 92       	st	X+, r0
    ede8:	2a 95       	dec	r18
    edea:	e1 f7       	brne	.-8      	; 0xede4 <_Z8fox2TextPc5Fox_t+0x180>
		}
		break;
    edec:	24 c0       	rjmp	.+72     	; 0xee36 <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_F3:
		{
			sprintf(str, "Sprint Fast 3 \"OS\"");
    edee:	8a 81       	ldd	r24, Y+2	; 0x02
    edf0:	9b 81       	ldd	r25, Y+3	; 0x03
    edf2:	23 e1       	ldi	r18, 0x13	; 19
    edf4:	e0 e2       	ldi	r30, 0x20	; 32
    edf6:	f6 e4       	ldi	r31, 0x46	; 70
    edf8:	dc 01       	movw	r26, r24
    edfa:	01 90       	ld	r0, Z+
    edfc:	0d 92       	st	X+, r0
    edfe:	2a 95       	dec	r18
    ee00:	e1 f7       	brne	.-8      	; 0xedfa <_Z8fox2TextPc5Fox_t+0x196>
		}
		break;
    ee02:	19 c0       	rjmp	.+50     	; 0xee36 <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_F4:
		{
			sprintf(str, "Sprint Fast 4 \"OH\"");
    ee04:	8a 81       	ldd	r24, Y+2	; 0x02
    ee06:	9b 81       	ldd	r25, Y+3	; 0x03
    ee08:	23 e1       	ldi	r18, 0x13	; 19
    ee0a:	e3 e3       	ldi	r30, 0x33	; 51
    ee0c:	f6 e4       	ldi	r31, 0x46	; 70
    ee0e:	dc 01       	movw	r26, r24
    ee10:	01 90       	ld	r0, Z+
    ee12:	0d 92       	st	X+, r0
    ee14:	2a 95       	dec	r18
    ee16:	e1 f7       	brne	.-8      	; 0xee10 <_Z8fox2TextPc5Fox_t+0x1ac>
		}
		break;
    ee18:	0e c0       	rjmp	.+28     	; 0xee36 <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_F5:
		{
			sprintf(str, "Sprint Fast 5 \"O5\"");
    ee1a:	8a 81       	ldd	r24, Y+2	; 0x02
    ee1c:	9b 81       	ldd	r25, Y+3	; 0x03
    ee1e:	23 e1       	ldi	r18, 0x13	; 19
    ee20:	e6 e4       	ldi	r30, 0x46	; 70
    ee22:	f6 e4       	ldi	r31, 0x46	; 70
    ee24:	dc 01       	movw	r26, r24
    ee26:	01 90       	ld	r0, Z+
    ee28:	0d 92       	st	X+, r0
    ee2a:	2a 95       	dec	r18
    ee2c:	e1 f7       	brne	.-8      	; 0xee26 <_Z8fox2TextPc5Fox_t+0x1c2>
		}
		break;
    ee2e:	03 c0       	rjmp	.+6      	; 0xee36 <_Z8fox2TextPc5Fox_t+0x1d2>
		
		default:
		{
			failure = true;
    ee30:	81 e0       	ldi	r24, 0x01	; 1
    ee32:	89 83       	std	Y+1, r24	; 0x01
		}
		break;
    ee34:	00 00       	nop
	}
	
	return(failure);
    ee36:	89 81       	ldd	r24, Y+1	; 0x01
    ee38:	24 96       	adiw	r28, 0x04	; 4
    ee3a:	cd bf       	out	0x3d, r28	; 61
    ee3c:	de bf       	out	0x3e, r29	; 62
    ee3e:	df 91       	pop	r29
    ee40:	cf 91       	pop	r28
    ee42:	08 95       	ret

0000ee44 <__subsf3>:
    ee44:	50 58       	subi	r21, 0x80	; 128

0000ee46 <__addsf3>:
    ee46:	bb 27       	eor	r27, r27
    ee48:	aa 27       	eor	r26, r26
    ee4a:	0e 94 3a 77 	call	0xee74	; 0xee74 <__addsf3x>
    ee4e:	0c 94 f4 78 	jmp	0xf1e8	; 0xf1e8 <__fp_round>
    ee52:	0e 94 e6 78 	call	0xf1cc	; 0xf1cc <__fp_pscA>
    ee56:	38 f0       	brcs	.+14     	; 0xee66 <__addsf3+0x20>
    ee58:	0e 94 ed 78 	call	0xf1da	; 0xf1da <__fp_pscB>
    ee5c:	20 f0       	brcs	.+8      	; 0xee66 <__addsf3+0x20>
    ee5e:	39 f4       	brne	.+14     	; 0xee6e <__addsf3+0x28>
    ee60:	9f 3f       	cpi	r25, 0xFF	; 255
    ee62:	19 f4       	brne	.+6      	; 0xee6a <__addsf3+0x24>
    ee64:	26 f4       	brtc	.+8      	; 0xee6e <__addsf3+0x28>
    ee66:	0c 94 e3 78 	jmp	0xf1c6	; 0xf1c6 <__fp_nan>
    ee6a:	0e f4       	brtc	.+2      	; 0xee6e <__addsf3+0x28>
    ee6c:	e0 95       	com	r30
    ee6e:	e7 fb       	bst	r30, 7
    ee70:	0c 94 b4 78 	jmp	0xf168	; 0xf168 <__fp_inf>

0000ee74 <__addsf3x>:
    ee74:	e9 2f       	mov	r30, r25
    ee76:	0e 94 05 79 	call	0xf20a	; 0xf20a <__fp_split3>
    ee7a:	58 f3       	brcs	.-42     	; 0xee52 <__addsf3+0xc>
    ee7c:	ba 17       	cp	r27, r26
    ee7e:	62 07       	cpc	r22, r18
    ee80:	73 07       	cpc	r23, r19
    ee82:	84 07       	cpc	r24, r20
    ee84:	95 07       	cpc	r25, r21
    ee86:	20 f0       	brcs	.+8      	; 0xee90 <__addsf3x+0x1c>
    ee88:	79 f4       	brne	.+30     	; 0xeea8 <__addsf3x+0x34>
    ee8a:	a6 f5       	brtc	.+104    	; 0xeef4 <__addsf3x+0x80>
    ee8c:	0c 94 3f 79 	jmp	0xf27e	; 0xf27e <__fp_zero>
    ee90:	0e f4       	brtc	.+2      	; 0xee94 <__addsf3x+0x20>
    ee92:	e0 95       	com	r30
    ee94:	0b 2e       	mov	r0, r27
    ee96:	ba 2f       	mov	r27, r26
    ee98:	a0 2d       	mov	r26, r0
    ee9a:	0b 01       	movw	r0, r22
    ee9c:	b9 01       	movw	r22, r18
    ee9e:	90 01       	movw	r18, r0
    eea0:	0c 01       	movw	r0, r24
    eea2:	ca 01       	movw	r24, r20
    eea4:	a0 01       	movw	r20, r0
    eea6:	11 24       	eor	r1, r1
    eea8:	ff 27       	eor	r31, r31
    eeaa:	59 1b       	sub	r21, r25
    eeac:	99 f0       	breq	.+38     	; 0xeed4 <__addsf3x+0x60>
    eeae:	59 3f       	cpi	r21, 0xF9	; 249
    eeb0:	50 f4       	brcc	.+20     	; 0xeec6 <__addsf3x+0x52>
    eeb2:	50 3e       	cpi	r21, 0xE0	; 224
    eeb4:	68 f1       	brcs	.+90     	; 0xef10 <__addsf3x+0x9c>
    eeb6:	1a 16       	cp	r1, r26
    eeb8:	f0 40       	sbci	r31, 0x00	; 0
    eeba:	a2 2f       	mov	r26, r18
    eebc:	23 2f       	mov	r18, r19
    eebe:	34 2f       	mov	r19, r20
    eec0:	44 27       	eor	r20, r20
    eec2:	58 5f       	subi	r21, 0xF8	; 248
    eec4:	f3 cf       	rjmp	.-26     	; 0xeeac <__addsf3x+0x38>
    eec6:	46 95       	lsr	r20
    eec8:	37 95       	ror	r19
    eeca:	27 95       	ror	r18
    eecc:	a7 95       	ror	r26
    eece:	f0 40       	sbci	r31, 0x00	; 0
    eed0:	53 95       	inc	r21
    eed2:	c9 f7       	brne	.-14     	; 0xeec6 <__addsf3x+0x52>
    eed4:	7e f4       	brtc	.+30     	; 0xeef4 <__addsf3x+0x80>
    eed6:	1f 16       	cp	r1, r31
    eed8:	ba 0b       	sbc	r27, r26
    eeda:	62 0b       	sbc	r22, r18
    eedc:	73 0b       	sbc	r23, r19
    eede:	84 0b       	sbc	r24, r20
    eee0:	ba f0       	brmi	.+46     	; 0xef10 <__addsf3x+0x9c>
    eee2:	91 50       	subi	r25, 0x01	; 1
    eee4:	a1 f0       	breq	.+40     	; 0xef0e <__addsf3x+0x9a>
    eee6:	ff 0f       	add	r31, r31
    eee8:	bb 1f       	adc	r27, r27
    eeea:	66 1f       	adc	r22, r22
    eeec:	77 1f       	adc	r23, r23
    eeee:	88 1f       	adc	r24, r24
    eef0:	c2 f7       	brpl	.-16     	; 0xeee2 <__addsf3x+0x6e>
    eef2:	0e c0       	rjmp	.+28     	; 0xef10 <__addsf3x+0x9c>
    eef4:	ba 0f       	add	r27, r26
    eef6:	62 1f       	adc	r22, r18
    eef8:	73 1f       	adc	r23, r19
    eefa:	84 1f       	adc	r24, r20
    eefc:	48 f4       	brcc	.+18     	; 0xef10 <__addsf3x+0x9c>
    eefe:	87 95       	ror	r24
    ef00:	77 95       	ror	r23
    ef02:	67 95       	ror	r22
    ef04:	b7 95       	ror	r27
    ef06:	f7 95       	ror	r31
    ef08:	9e 3f       	cpi	r25, 0xFE	; 254
    ef0a:	08 f0       	brcs	.+2      	; 0xef0e <__addsf3x+0x9a>
    ef0c:	b0 cf       	rjmp	.-160    	; 0xee6e <__addsf3+0x28>
    ef0e:	93 95       	inc	r25
    ef10:	88 0f       	add	r24, r24
    ef12:	08 f0       	brcs	.+2      	; 0xef16 <__addsf3x+0xa2>
    ef14:	99 27       	eor	r25, r25
    ef16:	ee 0f       	add	r30, r30
    ef18:	97 95       	ror	r25
    ef1a:	87 95       	ror	r24
    ef1c:	08 95       	ret

0000ef1e <ceil>:
    ef1e:	0e 94 27 79 	call	0xf24e	; 0xf24e <__fp_trunc>
    ef22:	90 f0       	brcs	.+36     	; 0xef48 <ceil+0x2a>
    ef24:	9f 37       	cpi	r25, 0x7F	; 127
    ef26:	48 f4       	brcc	.+18     	; 0xef3a <ceil+0x1c>
    ef28:	91 11       	cpse	r25, r1
    ef2a:	16 f4       	brtc	.+4      	; 0xef30 <ceil+0x12>
    ef2c:	0c 94 40 79 	jmp	0xf280	; 0xf280 <__fp_szero>
    ef30:	60 e0       	ldi	r22, 0x00	; 0
    ef32:	70 e0       	ldi	r23, 0x00	; 0
    ef34:	80 e8       	ldi	r24, 0x80	; 128
    ef36:	9f e3       	ldi	r25, 0x3F	; 63
    ef38:	08 95       	ret
    ef3a:	26 f0       	brts	.+8      	; 0xef44 <ceil+0x26>
    ef3c:	1b 16       	cp	r1, r27
    ef3e:	61 1d       	adc	r22, r1
    ef40:	71 1d       	adc	r23, r1
    ef42:	81 1d       	adc	r24, r1
    ef44:	0c 94 ba 78 	jmp	0xf174	; 0xf174 <__fp_mintl>
    ef48:	0c 94 d5 78 	jmp	0xf1aa	; 0xf1aa <__fp_mpack>

0000ef4c <__cmpsf2>:
    ef4c:	0e 94 90 78 	call	0xf120	; 0xf120 <__fp_cmp>
    ef50:	08 f4       	brcc	.+2      	; 0xef54 <__cmpsf2+0x8>
    ef52:	81 e0       	ldi	r24, 0x01	; 1
    ef54:	08 95       	ret

0000ef56 <__divsf3>:
    ef56:	0e 94 bf 77 	call	0xef7e	; 0xef7e <__divsf3x>
    ef5a:	0c 94 f4 78 	jmp	0xf1e8	; 0xf1e8 <__fp_round>
    ef5e:	0e 94 ed 78 	call	0xf1da	; 0xf1da <__fp_pscB>
    ef62:	58 f0       	brcs	.+22     	; 0xef7a <__divsf3+0x24>
    ef64:	0e 94 e6 78 	call	0xf1cc	; 0xf1cc <__fp_pscA>
    ef68:	40 f0       	brcs	.+16     	; 0xef7a <__divsf3+0x24>
    ef6a:	29 f4       	brne	.+10     	; 0xef76 <__divsf3+0x20>
    ef6c:	5f 3f       	cpi	r21, 0xFF	; 255
    ef6e:	29 f0       	breq	.+10     	; 0xef7a <__divsf3+0x24>
    ef70:	0c 94 b4 78 	jmp	0xf168	; 0xf168 <__fp_inf>
    ef74:	51 11       	cpse	r21, r1
    ef76:	0c 94 40 79 	jmp	0xf280	; 0xf280 <__fp_szero>
    ef7a:	0c 94 e3 78 	jmp	0xf1c6	; 0xf1c6 <__fp_nan>

0000ef7e <__divsf3x>:
    ef7e:	0e 94 05 79 	call	0xf20a	; 0xf20a <__fp_split3>
    ef82:	68 f3       	brcs	.-38     	; 0xef5e <__divsf3+0x8>

0000ef84 <__divsf3_pse>:
    ef84:	99 23       	and	r25, r25
    ef86:	b1 f3       	breq	.-20     	; 0xef74 <__divsf3+0x1e>
    ef88:	55 23       	and	r21, r21
    ef8a:	91 f3       	breq	.-28     	; 0xef70 <__divsf3+0x1a>
    ef8c:	95 1b       	sub	r25, r21
    ef8e:	55 0b       	sbc	r21, r21
    ef90:	bb 27       	eor	r27, r27
    ef92:	aa 27       	eor	r26, r26
    ef94:	62 17       	cp	r22, r18
    ef96:	73 07       	cpc	r23, r19
    ef98:	84 07       	cpc	r24, r20
    ef9a:	38 f0       	brcs	.+14     	; 0xefaa <__divsf3_pse+0x26>
    ef9c:	9f 5f       	subi	r25, 0xFF	; 255
    ef9e:	5f 4f       	sbci	r21, 0xFF	; 255
    efa0:	22 0f       	add	r18, r18
    efa2:	33 1f       	adc	r19, r19
    efa4:	44 1f       	adc	r20, r20
    efa6:	aa 1f       	adc	r26, r26
    efa8:	a9 f3       	breq	.-22     	; 0xef94 <__divsf3_pse+0x10>
    efaa:	35 d0       	rcall	.+106    	; 0xf016 <__divsf3_pse+0x92>
    efac:	0e 2e       	mov	r0, r30
    efae:	3a f0       	brmi	.+14     	; 0xefbe <__divsf3_pse+0x3a>
    efb0:	e0 e8       	ldi	r30, 0x80	; 128
    efb2:	32 d0       	rcall	.+100    	; 0xf018 <__divsf3_pse+0x94>
    efb4:	91 50       	subi	r25, 0x01	; 1
    efb6:	50 40       	sbci	r21, 0x00	; 0
    efb8:	e6 95       	lsr	r30
    efba:	00 1c       	adc	r0, r0
    efbc:	ca f7       	brpl	.-14     	; 0xefb0 <__divsf3_pse+0x2c>
    efbe:	2b d0       	rcall	.+86     	; 0xf016 <__divsf3_pse+0x92>
    efc0:	fe 2f       	mov	r31, r30
    efc2:	29 d0       	rcall	.+82     	; 0xf016 <__divsf3_pse+0x92>
    efc4:	66 0f       	add	r22, r22
    efc6:	77 1f       	adc	r23, r23
    efc8:	88 1f       	adc	r24, r24
    efca:	bb 1f       	adc	r27, r27
    efcc:	26 17       	cp	r18, r22
    efce:	37 07       	cpc	r19, r23
    efd0:	48 07       	cpc	r20, r24
    efd2:	ab 07       	cpc	r26, r27
    efd4:	b0 e8       	ldi	r27, 0x80	; 128
    efd6:	09 f0       	breq	.+2      	; 0xefda <__divsf3_pse+0x56>
    efd8:	bb 0b       	sbc	r27, r27
    efda:	80 2d       	mov	r24, r0
    efdc:	bf 01       	movw	r22, r30
    efde:	ff 27       	eor	r31, r31
    efe0:	93 58       	subi	r25, 0x83	; 131
    efe2:	5f 4f       	sbci	r21, 0xFF	; 255
    efe4:	3a f0       	brmi	.+14     	; 0xeff4 <__divsf3_pse+0x70>
    efe6:	9e 3f       	cpi	r25, 0xFE	; 254
    efe8:	51 05       	cpc	r21, r1
    efea:	78 f0       	brcs	.+30     	; 0xf00a <__divsf3_pse+0x86>
    efec:	0c 94 b4 78 	jmp	0xf168	; 0xf168 <__fp_inf>
    eff0:	0c 94 40 79 	jmp	0xf280	; 0xf280 <__fp_szero>
    eff4:	5f 3f       	cpi	r21, 0xFF	; 255
    eff6:	e4 f3       	brlt	.-8      	; 0xeff0 <__divsf3_pse+0x6c>
    eff8:	98 3e       	cpi	r25, 0xE8	; 232
    effa:	d4 f3       	brlt	.-12     	; 0xeff0 <__divsf3_pse+0x6c>
    effc:	86 95       	lsr	r24
    effe:	77 95       	ror	r23
    f000:	67 95       	ror	r22
    f002:	b7 95       	ror	r27
    f004:	f7 95       	ror	r31
    f006:	9f 5f       	subi	r25, 0xFF	; 255
    f008:	c9 f7       	brne	.-14     	; 0xeffc <__divsf3_pse+0x78>
    f00a:	88 0f       	add	r24, r24
    f00c:	91 1d       	adc	r25, r1
    f00e:	96 95       	lsr	r25
    f010:	87 95       	ror	r24
    f012:	97 f9       	bld	r25, 7
    f014:	08 95       	ret
    f016:	e1 e0       	ldi	r30, 0x01	; 1
    f018:	66 0f       	add	r22, r22
    f01a:	77 1f       	adc	r23, r23
    f01c:	88 1f       	adc	r24, r24
    f01e:	bb 1f       	adc	r27, r27
    f020:	62 17       	cp	r22, r18
    f022:	73 07       	cpc	r23, r19
    f024:	84 07       	cpc	r24, r20
    f026:	ba 07       	cpc	r27, r26
    f028:	20 f0       	brcs	.+8      	; 0xf032 <__divsf3_pse+0xae>
    f02a:	62 1b       	sub	r22, r18
    f02c:	73 0b       	sbc	r23, r19
    f02e:	84 0b       	sbc	r24, r20
    f030:	ba 0b       	sbc	r27, r26
    f032:	ee 1f       	adc	r30, r30
    f034:	88 f7       	brcc	.-30     	; 0xf018 <__divsf3_pse+0x94>
    f036:	e0 95       	com	r30
    f038:	08 95       	ret

0000f03a <__fixsfsi>:
    f03a:	0e 94 24 78 	call	0xf048	; 0xf048 <__fixunssfsi>
    f03e:	68 94       	set
    f040:	b1 11       	cpse	r27, r1
    f042:	0c 94 40 79 	jmp	0xf280	; 0xf280 <__fp_szero>
    f046:	08 95       	ret

0000f048 <__fixunssfsi>:
    f048:	0e 94 0d 79 	call	0xf21a	; 0xf21a <__fp_splitA>
    f04c:	88 f0       	brcs	.+34     	; 0xf070 <__fixunssfsi+0x28>
    f04e:	9f 57       	subi	r25, 0x7F	; 127
    f050:	98 f0       	brcs	.+38     	; 0xf078 <__fixunssfsi+0x30>
    f052:	b9 2f       	mov	r27, r25
    f054:	99 27       	eor	r25, r25
    f056:	b7 51       	subi	r27, 0x17	; 23
    f058:	b0 f0       	brcs	.+44     	; 0xf086 <__fixunssfsi+0x3e>
    f05a:	e1 f0       	breq	.+56     	; 0xf094 <__fixunssfsi+0x4c>
    f05c:	66 0f       	add	r22, r22
    f05e:	77 1f       	adc	r23, r23
    f060:	88 1f       	adc	r24, r24
    f062:	99 1f       	adc	r25, r25
    f064:	1a f0       	brmi	.+6      	; 0xf06c <__fixunssfsi+0x24>
    f066:	ba 95       	dec	r27
    f068:	c9 f7       	brne	.-14     	; 0xf05c <__fixunssfsi+0x14>
    f06a:	14 c0       	rjmp	.+40     	; 0xf094 <__fixunssfsi+0x4c>
    f06c:	b1 30       	cpi	r27, 0x01	; 1
    f06e:	91 f0       	breq	.+36     	; 0xf094 <__fixunssfsi+0x4c>
    f070:	0e 94 3f 79 	call	0xf27e	; 0xf27e <__fp_zero>
    f074:	b1 e0       	ldi	r27, 0x01	; 1
    f076:	08 95       	ret
    f078:	0c 94 3f 79 	jmp	0xf27e	; 0xf27e <__fp_zero>
    f07c:	67 2f       	mov	r22, r23
    f07e:	78 2f       	mov	r23, r24
    f080:	88 27       	eor	r24, r24
    f082:	b8 5f       	subi	r27, 0xF8	; 248
    f084:	39 f0       	breq	.+14     	; 0xf094 <__fixunssfsi+0x4c>
    f086:	b9 3f       	cpi	r27, 0xF9	; 249
    f088:	cc f3       	brlt	.-14     	; 0xf07c <__fixunssfsi+0x34>
    f08a:	86 95       	lsr	r24
    f08c:	77 95       	ror	r23
    f08e:	67 95       	ror	r22
    f090:	b3 95       	inc	r27
    f092:	d9 f7       	brne	.-10     	; 0xf08a <__fixunssfsi+0x42>
    f094:	3e f4       	brtc	.+14     	; 0xf0a4 <__fixunssfsi+0x5c>
    f096:	90 95       	com	r25
    f098:	80 95       	com	r24
    f09a:	70 95       	com	r23
    f09c:	61 95       	neg	r22
    f09e:	7f 4f       	sbci	r23, 0xFF	; 255
    f0a0:	8f 4f       	sbci	r24, 0xFF	; 255
    f0a2:	9f 4f       	sbci	r25, 0xFF	; 255
    f0a4:	08 95       	ret

0000f0a6 <__floatunsisf>:
    f0a6:	e8 94       	clt
    f0a8:	09 c0       	rjmp	.+18     	; 0xf0bc <__floatsisf+0x12>

0000f0aa <__floatsisf>:
    f0aa:	97 fb       	bst	r25, 7
    f0ac:	3e f4       	brtc	.+14     	; 0xf0bc <__floatsisf+0x12>
    f0ae:	90 95       	com	r25
    f0b0:	80 95       	com	r24
    f0b2:	70 95       	com	r23
    f0b4:	61 95       	neg	r22
    f0b6:	7f 4f       	sbci	r23, 0xFF	; 255
    f0b8:	8f 4f       	sbci	r24, 0xFF	; 255
    f0ba:	9f 4f       	sbci	r25, 0xFF	; 255
    f0bc:	99 23       	and	r25, r25
    f0be:	a9 f0       	breq	.+42     	; 0xf0ea <__floatsisf+0x40>
    f0c0:	f9 2f       	mov	r31, r25
    f0c2:	96 e9       	ldi	r25, 0x96	; 150
    f0c4:	bb 27       	eor	r27, r27
    f0c6:	93 95       	inc	r25
    f0c8:	f6 95       	lsr	r31
    f0ca:	87 95       	ror	r24
    f0cc:	77 95       	ror	r23
    f0ce:	67 95       	ror	r22
    f0d0:	b7 95       	ror	r27
    f0d2:	f1 11       	cpse	r31, r1
    f0d4:	f8 cf       	rjmp	.-16     	; 0xf0c6 <__floatsisf+0x1c>
    f0d6:	fa f4       	brpl	.+62     	; 0xf116 <__floatsisf+0x6c>
    f0d8:	bb 0f       	add	r27, r27
    f0da:	11 f4       	brne	.+4      	; 0xf0e0 <__floatsisf+0x36>
    f0dc:	60 ff       	sbrs	r22, 0
    f0de:	1b c0       	rjmp	.+54     	; 0xf116 <__floatsisf+0x6c>
    f0e0:	6f 5f       	subi	r22, 0xFF	; 255
    f0e2:	7f 4f       	sbci	r23, 0xFF	; 255
    f0e4:	8f 4f       	sbci	r24, 0xFF	; 255
    f0e6:	9f 4f       	sbci	r25, 0xFF	; 255
    f0e8:	16 c0       	rjmp	.+44     	; 0xf116 <__floatsisf+0x6c>
    f0ea:	88 23       	and	r24, r24
    f0ec:	11 f0       	breq	.+4      	; 0xf0f2 <__floatsisf+0x48>
    f0ee:	96 e9       	ldi	r25, 0x96	; 150
    f0f0:	11 c0       	rjmp	.+34     	; 0xf114 <__floatsisf+0x6a>
    f0f2:	77 23       	and	r23, r23
    f0f4:	21 f0       	breq	.+8      	; 0xf0fe <__floatsisf+0x54>
    f0f6:	9e e8       	ldi	r25, 0x8E	; 142
    f0f8:	87 2f       	mov	r24, r23
    f0fa:	76 2f       	mov	r23, r22
    f0fc:	05 c0       	rjmp	.+10     	; 0xf108 <__floatsisf+0x5e>
    f0fe:	66 23       	and	r22, r22
    f100:	71 f0       	breq	.+28     	; 0xf11e <__floatsisf+0x74>
    f102:	96 e8       	ldi	r25, 0x86	; 134
    f104:	86 2f       	mov	r24, r22
    f106:	70 e0       	ldi	r23, 0x00	; 0
    f108:	60 e0       	ldi	r22, 0x00	; 0
    f10a:	2a f0       	brmi	.+10     	; 0xf116 <__floatsisf+0x6c>
    f10c:	9a 95       	dec	r25
    f10e:	66 0f       	add	r22, r22
    f110:	77 1f       	adc	r23, r23
    f112:	88 1f       	adc	r24, r24
    f114:	da f7       	brpl	.-10     	; 0xf10c <__floatsisf+0x62>
    f116:	88 0f       	add	r24, r24
    f118:	96 95       	lsr	r25
    f11a:	87 95       	ror	r24
    f11c:	97 f9       	bld	r25, 7
    f11e:	08 95       	ret

0000f120 <__fp_cmp>:
    f120:	99 0f       	add	r25, r25
    f122:	00 08       	sbc	r0, r0
    f124:	55 0f       	add	r21, r21
    f126:	aa 0b       	sbc	r26, r26
    f128:	e0 e8       	ldi	r30, 0x80	; 128
    f12a:	fe ef       	ldi	r31, 0xFE	; 254
    f12c:	16 16       	cp	r1, r22
    f12e:	17 06       	cpc	r1, r23
    f130:	e8 07       	cpc	r30, r24
    f132:	f9 07       	cpc	r31, r25
    f134:	c0 f0       	brcs	.+48     	; 0xf166 <__fp_cmp+0x46>
    f136:	12 16       	cp	r1, r18
    f138:	13 06       	cpc	r1, r19
    f13a:	e4 07       	cpc	r30, r20
    f13c:	f5 07       	cpc	r31, r21
    f13e:	98 f0       	brcs	.+38     	; 0xf166 <__fp_cmp+0x46>
    f140:	62 1b       	sub	r22, r18
    f142:	73 0b       	sbc	r23, r19
    f144:	84 0b       	sbc	r24, r20
    f146:	95 0b       	sbc	r25, r21
    f148:	39 f4       	brne	.+14     	; 0xf158 <__fp_cmp+0x38>
    f14a:	0a 26       	eor	r0, r26
    f14c:	61 f0       	breq	.+24     	; 0xf166 <__fp_cmp+0x46>
    f14e:	23 2b       	or	r18, r19
    f150:	24 2b       	or	r18, r20
    f152:	25 2b       	or	r18, r21
    f154:	21 f4       	brne	.+8      	; 0xf15e <__fp_cmp+0x3e>
    f156:	08 95       	ret
    f158:	0a 26       	eor	r0, r26
    f15a:	09 f4       	brne	.+2      	; 0xf15e <__fp_cmp+0x3e>
    f15c:	a1 40       	sbci	r26, 0x01	; 1
    f15e:	a6 95       	lsr	r26
    f160:	8f ef       	ldi	r24, 0xFF	; 255
    f162:	81 1d       	adc	r24, r1
    f164:	81 1d       	adc	r24, r1
    f166:	08 95       	ret

0000f168 <__fp_inf>:
    f168:	97 f9       	bld	r25, 7
    f16a:	9f 67       	ori	r25, 0x7F	; 127
    f16c:	80 e8       	ldi	r24, 0x80	; 128
    f16e:	70 e0       	ldi	r23, 0x00	; 0
    f170:	60 e0       	ldi	r22, 0x00	; 0
    f172:	08 95       	ret

0000f174 <__fp_mintl>:
    f174:	88 23       	and	r24, r24
    f176:	71 f4       	brne	.+28     	; 0xf194 <__fp_mintl+0x20>
    f178:	77 23       	and	r23, r23
    f17a:	21 f0       	breq	.+8      	; 0xf184 <__fp_mintl+0x10>
    f17c:	98 50       	subi	r25, 0x08	; 8
    f17e:	87 2b       	or	r24, r23
    f180:	76 2f       	mov	r23, r22
    f182:	07 c0       	rjmp	.+14     	; 0xf192 <__fp_mintl+0x1e>
    f184:	66 23       	and	r22, r22
    f186:	11 f4       	brne	.+4      	; 0xf18c <__fp_mintl+0x18>
    f188:	99 27       	eor	r25, r25
    f18a:	0d c0       	rjmp	.+26     	; 0xf1a6 <__fp_mintl+0x32>
    f18c:	90 51       	subi	r25, 0x10	; 16
    f18e:	86 2b       	or	r24, r22
    f190:	70 e0       	ldi	r23, 0x00	; 0
    f192:	60 e0       	ldi	r22, 0x00	; 0
    f194:	2a f0       	brmi	.+10     	; 0xf1a0 <__fp_mintl+0x2c>
    f196:	9a 95       	dec	r25
    f198:	66 0f       	add	r22, r22
    f19a:	77 1f       	adc	r23, r23
    f19c:	88 1f       	adc	r24, r24
    f19e:	da f7       	brpl	.-10     	; 0xf196 <__fp_mintl+0x22>
    f1a0:	88 0f       	add	r24, r24
    f1a2:	96 95       	lsr	r25
    f1a4:	87 95       	ror	r24
    f1a6:	97 f9       	bld	r25, 7
    f1a8:	08 95       	ret

0000f1aa <__fp_mpack>:
    f1aa:	9f 3f       	cpi	r25, 0xFF	; 255
    f1ac:	31 f0       	breq	.+12     	; 0xf1ba <__fp_mpack_finite+0xc>

0000f1ae <__fp_mpack_finite>:
    f1ae:	91 50       	subi	r25, 0x01	; 1
    f1b0:	20 f4       	brcc	.+8      	; 0xf1ba <__fp_mpack_finite+0xc>
    f1b2:	87 95       	ror	r24
    f1b4:	77 95       	ror	r23
    f1b6:	67 95       	ror	r22
    f1b8:	b7 95       	ror	r27
    f1ba:	88 0f       	add	r24, r24
    f1bc:	91 1d       	adc	r25, r1
    f1be:	96 95       	lsr	r25
    f1c0:	87 95       	ror	r24
    f1c2:	97 f9       	bld	r25, 7
    f1c4:	08 95       	ret

0000f1c6 <__fp_nan>:
    f1c6:	9f ef       	ldi	r25, 0xFF	; 255
    f1c8:	80 ec       	ldi	r24, 0xC0	; 192
    f1ca:	08 95       	ret

0000f1cc <__fp_pscA>:
    f1cc:	00 24       	eor	r0, r0
    f1ce:	0a 94       	dec	r0
    f1d0:	16 16       	cp	r1, r22
    f1d2:	17 06       	cpc	r1, r23
    f1d4:	18 06       	cpc	r1, r24
    f1d6:	09 06       	cpc	r0, r25
    f1d8:	08 95       	ret

0000f1da <__fp_pscB>:
    f1da:	00 24       	eor	r0, r0
    f1dc:	0a 94       	dec	r0
    f1de:	12 16       	cp	r1, r18
    f1e0:	13 06       	cpc	r1, r19
    f1e2:	14 06       	cpc	r1, r20
    f1e4:	05 06       	cpc	r0, r21
    f1e6:	08 95       	ret

0000f1e8 <__fp_round>:
    f1e8:	09 2e       	mov	r0, r25
    f1ea:	03 94       	inc	r0
    f1ec:	00 0c       	add	r0, r0
    f1ee:	11 f4       	brne	.+4      	; 0xf1f4 <__fp_round+0xc>
    f1f0:	88 23       	and	r24, r24
    f1f2:	52 f0       	brmi	.+20     	; 0xf208 <__fp_round+0x20>
    f1f4:	bb 0f       	add	r27, r27
    f1f6:	40 f4       	brcc	.+16     	; 0xf208 <__fp_round+0x20>
    f1f8:	bf 2b       	or	r27, r31
    f1fa:	11 f4       	brne	.+4      	; 0xf200 <__fp_round+0x18>
    f1fc:	60 ff       	sbrs	r22, 0
    f1fe:	04 c0       	rjmp	.+8      	; 0xf208 <__fp_round+0x20>
    f200:	6f 5f       	subi	r22, 0xFF	; 255
    f202:	7f 4f       	sbci	r23, 0xFF	; 255
    f204:	8f 4f       	sbci	r24, 0xFF	; 255
    f206:	9f 4f       	sbci	r25, 0xFF	; 255
    f208:	08 95       	ret

0000f20a <__fp_split3>:
    f20a:	57 fd       	sbrc	r21, 7
    f20c:	90 58       	subi	r25, 0x80	; 128
    f20e:	44 0f       	add	r20, r20
    f210:	55 1f       	adc	r21, r21
    f212:	59 f0       	breq	.+22     	; 0xf22a <__fp_splitA+0x10>
    f214:	5f 3f       	cpi	r21, 0xFF	; 255
    f216:	71 f0       	breq	.+28     	; 0xf234 <__fp_splitA+0x1a>
    f218:	47 95       	ror	r20

0000f21a <__fp_splitA>:
    f21a:	88 0f       	add	r24, r24
    f21c:	97 fb       	bst	r25, 7
    f21e:	99 1f       	adc	r25, r25
    f220:	61 f0       	breq	.+24     	; 0xf23a <__fp_splitA+0x20>
    f222:	9f 3f       	cpi	r25, 0xFF	; 255
    f224:	79 f0       	breq	.+30     	; 0xf244 <__fp_splitA+0x2a>
    f226:	87 95       	ror	r24
    f228:	08 95       	ret
    f22a:	12 16       	cp	r1, r18
    f22c:	13 06       	cpc	r1, r19
    f22e:	14 06       	cpc	r1, r20
    f230:	55 1f       	adc	r21, r21
    f232:	f2 cf       	rjmp	.-28     	; 0xf218 <__fp_split3+0xe>
    f234:	46 95       	lsr	r20
    f236:	f1 df       	rcall	.-30     	; 0xf21a <__fp_splitA>
    f238:	08 c0       	rjmp	.+16     	; 0xf24a <__fp_splitA+0x30>
    f23a:	16 16       	cp	r1, r22
    f23c:	17 06       	cpc	r1, r23
    f23e:	18 06       	cpc	r1, r24
    f240:	99 1f       	adc	r25, r25
    f242:	f1 cf       	rjmp	.-30     	; 0xf226 <__fp_splitA+0xc>
    f244:	86 95       	lsr	r24
    f246:	71 05       	cpc	r23, r1
    f248:	61 05       	cpc	r22, r1
    f24a:	08 94       	sec
    f24c:	08 95       	ret

0000f24e <__fp_trunc>:
    f24e:	0e 94 0d 79 	call	0xf21a	; 0xf21a <__fp_splitA>
    f252:	a0 f0       	brcs	.+40     	; 0xf27c <__fp_trunc+0x2e>
    f254:	be e7       	ldi	r27, 0x7E	; 126
    f256:	b9 17       	cp	r27, r25
    f258:	88 f4       	brcc	.+34     	; 0xf27c <__fp_trunc+0x2e>
    f25a:	bb 27       	eor	r27, r27
    f25c:	9f 38       	cpi	r25, 0x8F	; 143
    f25e:	60 f4       	brcc	.+24     	; 0xf278 <__fp_trunc+0x2a>
    f260:	16 16       	cp	r1, r22
    f262:	b1 1d       	adc	r27, r1
    f264:	67 2f       	mov	r22, r23
    f266:	78 2f       	mov	r23, r24
    f268:	88 27       	eor	r24, r24
    f26a:	98 5f       	subi	r25, 0xF8	; 248
    f26c:	f7 cf       	rjmp	.-18     	; 0xf25c <__fp_trunc+0xe>
    f26e:	86 95       	lsr	r24
    f270:	77 95       	ror	r23
    f272:	67 95       	ror	r22
    f274:	b1 1d       	adc	r27, r1
    f276:	93 95       	inc	r25
    f278:	96 39       	cpi	r25, 0x96	; 150
    f27a:	c8 f3       	brcs	.-14     	; 0xf26e <__fp_trunc+0x20>
    f27c:	08 95       	ret

0000f27e <__fp_zero>:
    f27e:	e8 94       	clt

0000f280 <__fp_szero>:
    f280:	bb 27       	eor	r27, r27
    f282:	66 27       	eor	r22, r22
    f284:	77 27       	eor	r23, r23
    f286:	cb 01       	movw	r24, r22
    f288:	97 f9       	bld	r25, 7
    f28a:	08 95       	ret

0000f28c <__gesf2>:
    f28c:	0e 94 90 78 	call	0xf120	; 0xf120 <__fp_cmp>
    f290:	08 f4       	brcc	.+2      	; 0xf294 <__gesf2+0x8>
    f292:	8f ef       	ldi	r24, 0xFF	; 255
    f294:	08 95       	ret

0000f296 <__mulsf3>:
    f296:	0e 94 5e 79 	call	0xf2bc	; 0xf2bc <__mulsf3x>
    f29a:	0c 94 f4 78 	jmp	0xf1e8	; 0xf1e8 <__fp_round>
    f29e:	0e 94 e6 78 	call	0xf1cc	; 0xf1cc <__fp_pscA>
    f2a2:	38 f0       	brcs	.+14     	; 0xf2b2 <__mulsf3+0x1c>
    f2a4:	0e 94 ed 78 	call	0xf1da	; 0xf1da <__fp_pscB>
    f2a8:	20 f0       	brcs	.+8      	; 0xf2b2 <__mulsf3+0x1c>
    f2aa:	95 23       	and	r25, r21
    f2ac:	11 f0       	breq	.+4      	; 0xf2b2 <__mulsf3+0x1c>
    f2ae:	0c 94 b4 78 	jmp	0xf168	; 0xf168 <__fp_inf>
    f2b2:	0c 94 e3 78 	jmp	0xf1c6	; 0xf1c6 <__fp_nan>
    f2b6:	11 24       	eor	r1, r1
    f2b8:	0c 94 40 79 	jmp	0xf280	; 0xf280 <__fp_szero>

0000f2bc <__mulsf3x>:
    f2bc:	0e 94 05 79 	call	0xf20a	; 0xf20a <__fp_split3>
    f2c0:	70 f3       	brcs	.-36     	; 0xf29e <__mulsf3+0x8>

0000f2c2 <__mulsf3_pse>:
    f2c2:	95 9f       	mul	r25, r21
    f2c4:	c1 f3       	breq	.-16     	; 0xf2b6 <__mulsf3+0x20>
    f2c6:	95 0f       	add	r25, r21
    f2c8:	50 e0       	ldi	r21, 0x00	; 0
    f2ca:	55 1f       	adc	r21, r21
    f2cc:	62 9f       	mul	r22, r18
    f2ce:	f0 01       	movw	r30, r0
    f2d0:	72 9f       	mul	r23, r18
    f2d2:	bb 27       	eor	r27, r27
    f2d4:	f0 0d       	add	r31, r0
    f2d6:	b1 1d       	adc	r27, r1
    f2d8:	63 9f       	mul	r22, r19
    f2da:	aa 27       	eor	r26, r26
    f2dc:	f0 0d       	add	r31, r0
    f2de:	b1 1d       	adc	r27, r1
    f2e0:	aa 1f       	adc	r26, r26
    f2e2:	64 9f       	mul	r22, r20
    f2e4:	66 27       	eor	r22, r22
    f2e6:	b0 0d       	add	r27, r0
    f2e8:	a1 1d       	adc	r26, r1
    f2ea:	66 1f       	adc	r22, r22
    f2ec:	82 9f       	mul	r24, r18
    f2ee:	22 27       	eor	r18, r18
    f2f0:	b0 0d       	add	r27, r0
    f2f2:	a1 1d       	adc	r26, r1
    f2f4:	62 1f       	adc	r22, r18
    f2f6:	73 9f       	mul	r23, r19
    f2f8:	b0 0d       	add	r27, r0
    f2fa:	a1 1d       	adc	r26, r1
    f2fc:	62 1f       	adc	r22, r18
    f2fe:	83 9f       	mul	r24, r19
    f300:	a0 0d       	add	r26, r0
    f302:	61 1d       	adc	r22, r1
    f304:	22 1f       	adc	r18, r18
    f306:	74 9f       	mul	r23, r20
    f308:	33 27       	eor	r19, r19
    f30a:	a0 0d       	add	r26, r0
    f30c:	61 1d       	adc	r22, r1
    f30e:	23 1f       	adc	r18, r19
    f310:	84 9f       	mul	r24, r20
    f312:	60 0d       	add	r22, r0
    f314:	21 1d       	adc	r18, r1
    f316:	82 2f       	mov	r24, r18
    f318:	76 2f       	mov	r23, r22
    f31a:	6a 2f       	mov	r22, r26
    f31c:	11 24       	eor	r1, r1
    f31e:	9f 57       	subi	r25, 0x7F	; 127
    f320:	50 40       	sbci	r21, 0x00	; 0
    f322:	9a f0       	brmi	.+38     	; 0xf34a <__mulsf3_pse+0x88>
    f324:	f1 f0       	breq	.+60     	; 0xf362 <__mulsf3_pse+0xa0>
    f326:	88 23       	and	r24, r24
    f328:	4a f0       	brmi	.+18     	; 0xf33c <__mulsf3_pse+0x7a>
    f32a:	ee 0f       	add	r30, r30
    f32c:	ff 1f       	adc	r31, r31
    f32e:	bb 1f       	adc	r27, r27
    f330:	66 1f       	adc	r22, r22
    f332:	77 1f       	adc	r23, r23
    f334:	88 1f       	adc	r24, r24
    f336:	91 50       	subi	r25, 0x01	; 1
    f338:	50 40       	sbci	r21, 0x00	; 0
    f33a:	a9 f7       	brne	.-22     	; 0xf326 <__mulsf3_pse+0x64>
    f33c:	9e 3f       	cpi	r25, 0xFE	; 254
    f33e:	51 05       	cpc	r21, r1
    f340:	80 f0       	brcs	.+32     	; 0xf362 <__mulsf3_pse+0xa0>
    f342:	0c 94 b4 78 	jmp	0xf168	; 0xf168 <__fp_inf>
    f346:	0c 94 40 79 	jmp	0xf280	; 0xf280 <__fp_szero>
    f34a:	5f 3f       	cpi	r21, 0xFF	; 255
    f34c:	e4 f3       	brlt	.-8      	; 0xf346 <__mulsf3_pse+0x84>
    f34e:	98 3e       	cpi	r25, 0xE8	; 232
    f350:	d4 f3       	brlt	.-12     	; 0xf346 <__mulsf3_pse+0x84>
    f352:	86 95       	lsr	r24
    f354:	77 95       	ror	r23
    f356:	67 95       	ror	r22
    f358:	b7 95       	ror	r27
    f35a:	f7 95       	ror	r31
    f35c:	e7 95       	ror	r30
    f35e:	9f 5f       	subi	r25, 0xFF	; 255
    f360:	c1 f7       	brne	.-16     	; 0xf352 <__mulsf3_pse+0x90>
    f362:	fe 2b       	or	r31, r30
    f364:	88 0f       	add	r24, r24
    f366:	91 1d       	adc	r25, r1
    f368:	96 95       	lsr	r25
    f36a:	87 95       	ror	r24
    f36c:	97 f9       	bld	r25, 7
    f36e:	08 95       	ret

0000f370 <__mulsi3>:
    f370:	db 01       	movw	r26, r22
    f372:	8f 93       	push	r24
    f374:	9f 93       	push	r25
    f376:	0e 94 49 7a 	call	0xf492	; 0xf492 <__muluhisi3>
    f37a:	bf 91       	pop	r27
    f37c:	af 91       	pop	r26
    f37e:	a2 9f       	mul	r26, r18
    f380:	80 0d       	add	r24, r0
    f382:	91 1d       	adc	r25, r1
    f384:	a3 9f       	mul	r26, r19
    f386:	90 0d       	add	r25, r0
    f388:	b2 9f       	mul	r27, r18
    f38a:	90 0d       	add	r25, r0
    f38c:	11 24       	eor	r1, r1
    f38e:	08 95       	ret

0000f390 <__udivmodhi4>:
    f390:	aa 1b       	sub	r26, r26
    f392:	bb 1b       	sub	r27, r27
    f394:	51 e1       	ldi	r21, 0x11	; 17
    f396:	07 c0       	rjmp	.+14     	; 0xf3a6 <__udivmodhi4_ep>

0000f398 <__udivmodhi4_loop>:
    f398:	aa 1f       	adc	r26, r26
    f39a:	bb 1f       	adc	r27, r27
    f39c:	a6 17       	cp	r26, r22
    f39e:	b7 07       	cpc	r27, r23
    f3a0:	10 f0       	brcs	.+4      	; 0xf3a6 <__udivmodhi4_ep>
    f3a2:	a6 1b       	sub	r26, r22
    f3a4:	b7 0b       	sbc	r27, r23

0000f3a6 <__udivmodhi4_ep>:
    f3a6:	88 1f       	adc	r24, r24
    f3a8:	99 1f       	adc	r25, r25
    f3aa:	5a 95       	dec	r21
    f3ac:	a9 f7       	brne	.-22     	; 0xf398 <__udivmodhi4_loop>
    f3ae:	80 95       	com	r24
    f3b0:	90 95       	com	r25
    f3b2:	bc 01       	movw	r22, r24
    f3b4:	cd 01       	movw	r24, r26
    f3b6:	08 95       	ret

0000f3b8 <__divmodhi4>:
    f3b8:	97 fb       	bst	r25, 7
    f3ba:	07 2e       	mov	r0, r23
    f3bc:	16 f4       	brtc	.+4      	; 0xf3c2 <__divmodhi4+0xa>
    f3be:	00 94       	com	r0
    f3c0:	07 d0       	rcall	.+14     	; 0xf3d0 <__divmodhi4_neg1>
    f3c2:	77 fd       	sbrc	r23, 7
    f3c4:	09 d0       	rcall	.+18     	; 0xf3d8 <__divmodhi4_neg2>
    f3c6:	0e 94 c8 79 	call	0xf390	; 0xf390 <__udivmodhi4>
    f3ca:	07 fc       	sbrc	r0, 7
    f3cc:	05 d0       	rcall	.+10     	; 0xf3d8 <__divmodhi4_neg2>
    f3ce:	3e f4       	brtc	.+14     	; 0xf3de <__divmodhi4_exit>

0000f3d0 <__divmodhi4_neg1>:
    f3d0:	90 95       	com	r25
    f3d2:	81 95       	neg	r24
    f3d4:	9f 4f       	sbci	r25, 0xFF	; 255
    f3d6:	08 95       	ret

0000f3d8 <__divmodhi4_neg2>:
    f3d8:	70 95       	com	r23
    f3da:	61 95       	neg	r22
    f3dc:	7f 4f       	sbci	r23, 0xFF	; 255

0000f3de <__divmodhi4_exit>:
    f3de:	08 95       	ret

0000f3e0 <__udivmodsi4>:
    f3e0:	a1 e2       	ldi	r26, 0x21	; 33
    f3e2:	1a 2e       	mov	r1, r26
    f3e4:	aa 1b       	sub	r26, r26
    f3e6:	bb 1b       	sub	r27, r27
    f3e8:	fd 01       	movw	r30, r26
    f3ea:	0d c0       	rjmp	.+26     	; 0xf406 <__udivmodsi4_ep>

0000f3ec <__udivmodsi4_loop>:
    f3ec:	aa 1f       	adc	r26, r26
    f3ee:	bb 1f       	adc	r27, r27
    f3f0:	ee 1f       	adc	r30, r30
    f3f2:	ff 1f       	adc	r31, r31
    f3f4:	a2 17       	cp	r26, r18
    f3f6:	b3 07       	cpc	r27, r19
    f3f8:	e4 07       	cpc	r30, r20
    f3fa:	f5 07       	cpc	r31, r21
    f3fc:	20 f0       	brcs	.+8      	; 0xf406 <__udivmodsi4_ep>
    f3fe:	a2 1b       	sub	r26, r18
    f400:	b3 0b       	sbc	r27, r19
    f402:	e4 0b       	sbc	r30, r20
    f404:	f5 0b       	sbc	r31, r21

0000f406 <__udivmodsi4_ep>:
    f406:	66 1f       	adc	r22, r22
    f408:	77 1f       	adc	r23, r23
    f40a:	88 1f       	adc	r24, r24
    f40c:	99 1f       	adc	r25, r25
    f40e:	1a 94       	dec	r1
    f410:	69 f7       	brne	.-38     	; 0xf3ec <__udivmodsi4_loop>
    f412:	60 95       	com	r22
    f414:	70 95       	com	r23
    f416:	80 95       	com	r24
    f418:	90 95       	com	r25
    f41a:	9b 01       	movw	r18, r22
    f41c:	ac 01       	movw	r20, r24
    f41e:	bd 01       	movw	r22, r26
    f420:	cf 01       	movw	r24, r30
    f422:	08 95       	ret

0000f424 <__divmodsi4>:
    f424:	05 2e       	mov	r0, r21
    f426:	97 fb       	bst	r25, 7
    f428:	1e f4       	brtc	.+6      	; 0xf430 <__divmodsi4+0xc>
    f42a:	00 94       	com	r0
    f42c:	0e 94 29 7a 	call	0xf452	; 0xf452 <__negsi2>
    f430:	57 fd       	sbrc	r21, 7
    f432:	07 d0       	rcall	.+14     	; 0xf442 <__divmodsi4_neg2>
    f434:	0e 94 f0 79 	call	0xf3e0	; 0xf3e0 <__udivmodsi4>
    f438:	07 fc       	sbrc	r0, 7
    f43a:	03 d0       	rcall	.+6      	; 0xf442 <__divmodsi4_neg2>
    f43c:	4e f4       	brtc	.+18     	; 0xf450 <__divmodsi4_exit>
    f43e:	0c 94 29 7a 	jmp	0xf452	; 0xf452 <__negsi2>

0000f442 <__divmodsi4_neg2>:
    f442:	50 95       	com	r21
    f444:	40 95       	com	r20
    f446:	30 95       	com	r19
    f448:	21 95       	neg	r18
    f44a:	3f 4f       	sbci	r19, 0xFF	; 255
    f44c:	4f 4f       	sbci	r20, 0xFF	; 255
    f44e:	5f 4f       	sbci	r21, 0xFF	; 255

0000f450 <__divmodsi4_exit>:
    f450:	08 95       	ret

0000f452 <__negsi2>:
    f452:	90 95       	com	r25
    f454:	80 95       	com	r24
    f456:	70 95       	com	r23
    f458:	61 95       	neg	r22
    f45a:	7f 4f       	sbci	r23, 0xFF	; 255
    f45c:	8f 4f       	sbci	r24, 0xFF	; 255
    f45e:	9f 4f       	sbci	r25, 0xFF	; 255
    f460:	08 95       	ret

0000f462 <__tablejump2__>:
    f462:	ee 0f       	add	r30, r30
    f464:	ff 1f       	adc	r31, r31
    f466:	00 24       	eor	r0, r0
    f468:	00 1c       	adc	r0, r0
    f46a:	0b be       	out	0x3b, r0	; 59
    f46c:	07 90       	elpm	r0, Z+
    f46e:	f6 91       	elpm	r31, Z
    f470:	e0 2d       	mov	r30, r0
    f472:	09 94       	ijmp

0000f474 <__umulhisi3>:
    f474:	a2 9f       	mul	r26, r18
    f476:	b0 01       	movw	r22, r0
    f478:	b3 9f       	mul	r27, r19
    f47a:	c0 01       	movw	r24, r0
    f47c:	a3 9f       	mul	r26, r19
    f47e:	70 0d       	add	r23, r0
    f480:	81 1d       	adc	r24, r1
    f482:	11 24       	eor	r1, r1
    f484:	91 1d       	adc	r25, r1
    f486:	b2 9f       	mul	r27, r18
    f488:	70 0d       	add	r23, r0
    f48a:	81 1d       	adc	r24, r1
    f48c:	11 24       	eor	r1, r1
    f48e:	91 1d       	adc	r25, r1
    f490:	08 95       	ret

0000f492 <__muluhisi3>:
    f492:	0e 94 3a 7a 	call	0xf474	; 0xf474 <__umulhisi3>
    f496:	a5 9f       	mul	r26, r21
    f498:	90 0d       	add	r25, r0
    f49a:	b4 9f       	mul	r27, r20
    f49c:	90 0d       	add	r25, r0
    f49e:	a4 9f       	mul	r26, r20
    f4a0:	80 0d       	add	r24, r0
    f4a2:	91 1d       	adc	r25, r1
    f4a4:	11 24       	eor	r1, r1
    f4a6:	08 95       	ret

0000f4a8 <dtostrf>:
    f4a8:	ef 92       	push	r14
    f4aa:	0f 93       	push	r16
    f4ac:	1f 93       	push	r17
    f4ae:	cf 93       	push	r28
    f4b0:	df 93       	push	r29
    f4b2:	e8 01       	movw	r28, r16
    f4b4:	47 fd       	sbrc	r20, 7
    f4b6:	02 c0       	rjmp	.+4      	; 0xf4bc <dtostrf+0x14>
    f4b8:	34 e0       	ldi	r19, 0x04	; 4
    f4ba:	01 c0       	rjmp	.+2      	; 0xf4be <dtostrf+0x16>
    f4bc:	34 e1       	ldi	r19, 0x14	; 20
    f4be:	04 2e       	mov	r0, r20
    f4c0:	00 0c       	add	r0, r0
    f4c2:	55 0b       	sbc	r21, r21
    f4c4:	57 ff       	sbrs	r21, 7
    f4c6:	03 c0       	rjmp	.+6      	; 0xf4ce <dtostrf+0x26>
    f4c8:	51 95       	neg	r21
    f4ca:	41 95       	neg	r20
    f4cc:	51 09       	sbc	r21, r1
    f4ce:	e3 2e       	mov	r14, r19
    f4d0:	02 2f       	mov	r16, r18
    f4d2:	24 2f       	mov	r18, r20
    f4d4:	ae 01       	movw	r20, r28
    f4d6:	0e 94 75 7e 	call	0xfcea	; 0xfcea <dtoa_prf>
    f4da:	ce 01       	movw	r24, r28
    f4dc:	df 91       	pop	r29
    f4de:	cf 91       	pop	r28
    f4e0:	1f 91       	pop	r17
    f4e2:	0f 91       	pop	r16
    f4e4:	ef 90       	pop	r14
    f4e6:	08 95       	ret

0000f4e8 <malloc>:
    f4e8:	0f 93       	push	r16
    f4ea:	1f 93       	push	r17
    f4ec:	cf 93       	push	r28
    f4ee:	df 93       	push	r29
    f4f0:	82 30       	cpi	r24, 0x02	; 2
    f4f2:	91 05       	cpc	r25, r1
    f4f4:	10 f4       	brcc	.+4      	; 0xf4fa <malloc+0x12>
    f4f6:	82 e0       	ldi	r24, 0x02	; 2
    f4f8:	90 e0       	ldi	r25, 0x00	; 0
    f4fa:	e0 91 d4 4a 	lds	r30, 0x4AD4	; 0x804ad4 <__flp>
    f4fe:	f0 91 d5 4a 	lds	r31, 0x4AD5	; 0x804ad5 <__flp+0x1>
    f502:	20 e0       	ldi	r18, 0x00	; 0
    f504:	30 e0       	ldi	r19, 0x00	; 0
    f506:	a0 e0       	ldi	r26, 0x00	; 0
    f508:	b0 e0       	ldi	r27, 0x00	; 0
    f50a:	30 97       	sbiw	r30, 0x00	; 0
    f50c:	19 f1       	breq	.+70     	; 0xf554 <malloc+0x6c>
    f50e:	40 81       	ld	r20, Z
    f510:	51 81       	ldd	r21, Z+1	; 0x01
    f512:	02 81       	ldd	r16, Z+2	; 0x02
    f514:	13 81       	ldd	r17, Z+3	; 0x03
    f516:	48 17       	cp	r20, r24
    f518:	59 07       	cpc	r21, r25
    f51a:	c8 f0       	brcs	.+50     	; 0xf54e <malloc+0x66>
    f51c:	84 17       	cp	r24, r20
    f51e:	95 07       	cpc	r25, r21
    f520:	69 f4       	brne	.+26     	; 0xf53c <malloc+0x54>
    f522:	10 97       	sbiw	r26, 0x00	; 0
    f524:	31 f0       	breq	.+12     	; 0xf532 <malloc+0x4a>
    f526:	12 96       	adiw	r26, 0x02	; 2
    f528:	0c 93       	st	X, r16
    f52a:	12 97       	sbiw	r26, 0x02	; 2
    f52c:	13 96       	adiw	r26, 0x03	; 3
    f52e:	1c 93       	st	X, r17
    f530:	27 c0       	rjmp	.+78     	; 0xf580 <malloc+0x98>
    f532:	00 93 d4 4a 	sts	0x4AD4, r16	; 0x804ad4 <__flp>
    f536:	10 93 d5 4a 	sts	0x4AD5, r17	; 0x804ad5 <__flp+0x1>
    f53a:	22 c0       	rjmp	.+68     	; 0xf580 <malloc+0x98>
    f53c:	21 15       	cp	r18, r1
    f53e:	31 05       	cpc	r19, r1
    f540:	19 f0       	breq	.+6      	; 0xf548 <malloc+0x60>
    f542:	42 17       	cp	r20, r18
    f544:	53 07       	cpc	r21, r19
    f546:	18 f4       	brcc	.+6      	; 0xf54e <malloc+0x66>
    f548:	9a 01       	movw	r18, r20
    f54a:	bd 01       	movw	r22, r26
    f54c:	ef 01       	movw	r28, r30
    f54e:	df 01       	movw	r26, r30
    f550:	f8 01       	movw	r30, r16
    f552:	db cf       	rjmp	.-74     	; 0xf50a <malloc+0x22>
    f554:	21 15       	cp	r18, r1
    f556:	31 05       	cpc	r19, r1
    f558:	f9 f0       	breq	.+62     	; 0xf598 <malloc+0xb0>
    f55a:	28 1b       	sub	r18, r24
    f55c:	39 0b       	sbc	r19, r25
    f55e:	24 30       	cpi	r18, 0x04	; 4
    f560:	31 05       	cpc	r19, r1
    f562:	80 f4       	brcc	.+32     	; 0xf584 <malloc+0x9c>
    f564:	8a 81       	ldd	r24, Y+2	; 0x02
    f566:	9b 81       	ldd	r25, Y+3	; 0x03
    f568:	61 15       	cp	r22, r1
    f56a:	71 05       	cpc	r23, r1
    f56c:	21 f0       	breq	.+8      	; 0xf576 <malloc+0x8e>
    f56e:	fb 01       	movw	r30, r22
    f570:	82 83       	std	Z+2, r24	; 0x02
    f572:	93 83       	std	Z+3, r25	; 0x03
    f574:	04 c0       	rjmp	.+8      	; 0xf57e <malloc+0x96>
    f576:	80 93 d4 4a 	sts	0x4AD4, r24	; 0x804ad4 <__flp>
    f57a:	90 93 d5 4a 	sts	0x4AD5, r25	; 0x804ad5 <__flp+0x1>
    f57e:	fe 01       	movw	r30, r28
    f580:	32 96       	adiw	r30, 0x02	; 2
    f582:	44 c0       	rjmp	.+136    	; 0xf60c <malloc+0x124>
    f584:	fe 01       	movw	r30, r28
    f586:	e2 0f       	add	r30, r18
    f588:	f3 1f       	adc	r31, r19
    f58a:	81 93       	st	Z+, r24
    f58c:	91 93       	st	Z+, r25
    f58e:	22 50       	subi	r18, 0x02	; 2
    f590:	31 09       	sbc	r19, r1
    f592:	28 83       	st	Y, r18
    f594:	39 83       	std	Y+1, r19	; 0x01
    f596:	3a c0       	rjmp	.+116    	; 0xf60c <malloc+0x124>
    f598:	20 91 d2 4a 	lds	r18, 0x4AD2	; 0x804ad2 <__brkval>
    f59c:	30 91 d3 4a 	lds	r19, 0x4AD3	; 0x804ad3 <__brkval+0x1>
    f5a0:	23 2b       	or	r18, r19
    f5a2:	41 f4       	brne	.+16     	; 0xf5b4 <malloc+0xcc>
    f5a4:	20 91 02 40 	lds	r18, 0x4002	; 0x804002 <__malloc_heap_start>
    f5a8:	30 91 03 40 	lds	r19, 0x4003	; 0x804003 <__malloc_heap_start+0x1>
    f5ac:	20 93 d2 4a 	sts	0x4AD2, r18	; 0x804ad2 <__brkval>
    f5b0:	30 93 d3 4a 	sts	0x4AD3, r19	; 0x804ad3 <__brkval+0x1>
    f5b4:	20 91 00 40 	lds	r18, 0x4000	; 0x804000 <__DATA_REGION_ORIGIN__>
    f5b8:	30 91 01 40 	lds	r19, 0x4001	; 0x804001 <__DATA_REGION_ORIGIN__+0x1>
    f5bc:	21 15       	cp	r18, r1
    f5be:	31 05       	cpc	r19, r1
    f5c0:	41 f4       	brne	.+16     	; 0xf5d2 <malloc+0xea>
    f5c2:	2d b7       	in	r18, 0x3d	; 61
    f5c4:	3e b7       	in	r19, 0x3e	; 62
    f5c6:	40 91 04 40 	lds	r20, 0x4004	; 0x804004 <__malloc_margin>
    f5ca:	50 91 05 40 	lds	r21, 0x4005	; 0x804005 <__malloc_margin+0x1>
    f5ce:	24 1b       	sub	r18, r20
    f5d0:	35 0b       	sbc	r19, r21
    f5d2:	e0 91 d2 4a 	lds	r30, 0x4AD2	; 0x804ad2 <__brkval>
    f5d6:	f0 91 d3 4a 	lds	r31, 0x4AD3	; 0x804ad3 <__brkval+0x1>
    f5da:	e2 17       	cp	r30, r18
    f5dc:	f3 07       	cpc	r31, r19
    f5de:	a0 f4       	brcc	.+40     	; 0xf608 <malloc+0x120>
    f5e0:	2e 1b       	sub	r18, r30
    f5e2:	3f 0b       	sbc	r19, r31
    f5e4:	28 17       	cp	r18, r24
    f5e6:	39 07       	cpc	r19, r25
    f5e8:	78 f0       	brcs	.+30     	; 0xf608 <malloc+0x120>
    f5ea:	ac 01       	movw	r20, r24
    f5ec:	4e 5f       	subi	r20, 0xFE	; 254
    f5ee:	5f 4f       	sbci	r21, 0xFF	; 255
    f5f0:	24 17       	cp	r18, r20
    f5f2:	35 07       	cpc	r19, r21
    f5f4:	48 f0       	brcs	.+18     	; 0xf608 <malloc+0x120>
    f5f6:	4e 0f       	add	r20, r30
    f5f8:	5f 1f       	adc	r21, r31
    f5fa:	40 93 d2 4a 	sts	0x4AD2, r20	; 0x804ad2 <__brkval>
    f5fe:	50 93 d3 4a 	sts	0x4AD3, r21	; 0x804ad3 <__brkval+0x1>
    f602:	81 93       	st	Z+, r24
    f604:	91 93       	st	Z+, r25
    f606:	02 c0       	rjmp	.+4      	; 0xf60c <malloc+0x124>
    f608:	e0 e0       	ldi	r30, 0x00	; 0
    f60a:	f0 e0       	ldi	r31, 0x00	; 0
    f60c:	cf 01       	movw	r24, r30
    f60e:	df 91       	pop	r29
    f610:	cf 91       	pop	r28
    f612:	1f 91       	pop	r17
    f614:	0f 91       	pop	r16
    f616:	08 95       	ret

0000f618 <free>:
    f618:	cf 93       	push	r28
    f61a:	df 93       	push	r29
    f61c:	00 97       	sbiw	r24, 0x00	; 0
    f61e:	09 f4       	brne	.+2      	; 0xf622 <free+0xa>
    f620:	81 c0       	rjmp	.+258    	; 0xf724 <free+0x10c>
    f622:	fc 01       	movw	r30, r24
    f624:	32 97       	sbiw	r30, 0x02	; 2
    f626:	12 82       	std	Z+2, r1	; 0x02
    f628:	13 82       	std	Z+3, r1	; 0x03
    f62a:	a0 91 d4 4a 	lds	r26, 0x4AD4	; 0x804ad4 <__flp>
    f62e:	b0 91 d5 4a 	lds	r27, 0x4AD5	; 0x804ad5 <__flp+0x1>
    f632:	10 97       	sbiw	r26, 0x00	; 0
    f634:	81 f4       	brne	.+32     	; 0xf656 <free+0x3e>
    f636:	20 81       	ld	r18, Z
    f638:	31 81       	ldd	r19, Z+1	; 0x01
    f63a:	82 0f       	add	r24, r18
    f63c:	93 1f       	adc	r25, r19
    f63e:	20 91 d2 4a 	lds	r18, 0x4AD2	; 0x804ad2 <__brkval>
    f642:	30 91 d3 4a 	lds	r19, 0x4AD3	; 0x804ad3 <__brkval+0x1>
    f646:	28 17       	cp	r18, r24
    f648:	39 07       	cpc	r19, r25
    f64a:	51 f5       	brne	.+84     	; 0xf6a0 <free+0x88>
    f64c:	e0 93 d2 4a 	sts	0x4AD2, r30	; 0x804ad2 <__brkval>
    f650:	f0 93 d3 4a 	sts	0x4AD3, r31	; 0x804ad3 <__brkval+0x1>
    f654:	67 c0       	rjmp	.+206    	; 0xf724 <free+0x10c>
    f656:	ed 01       	movw	r28, r26
    f658:	20 e0       	ldi	r18, 0x00	; 0
    f65a:	30 e0       	ldi	r19, 0x00	; 0
    f65c:	ce 17       	cp	r28, r30
    f65e:	df 07       	cpc	r29, r31
    f660:	40 f4       	brcc	.+16     	; 0xf672 <free+0x5a>
    f662:	4a 81       	ldd	r20, Y+2	; 0x02
    f664:	5b 81       	ldd	r21, Y+3	; 0x03
    f666:	9e 01       	movw	r18, r28
    f668:	41 15       	cp	r20, r1
    f66a:	51 05       	cpc	r21, r1
    f66c:	f1 f0       	breq	.+60     	; 0xf6aa <free+0x92>
    f66e:	ea 01       	movw	r28, r20
    f670:	f5 cf       	rjmp	.-22     	; 0xf65c <free+0x44>
    f672:	c2 83       	std	Z+2, r28	; 0x02
    f674:	d3 83       	std	Z+3, r29	; 0x03
    f676:	40 81       	ld	r20, Z
    f678:	51 81       	ldd	r21, Z+1	; 0x01
    f67a:	84 0f       	add	r24, r20
    f67c:	95 1f       	adc	r25, r21
    f67e:	c8 17       	cp	r28, r24
    f680:	d9 07       	cpc	r29, r25
    f682:	59 f4       	brne	.+22     	; 0xf69a <free+0x82>
    f684:	88 81       	ld	r24, Y
    f686:	99 81       	ldd	r25, Y+1	; 0x01
    f688:	84 0f       	add	r24, r20
    f68a:	95 1f       	adc	r25, r21
    f68c:	02 96       	adiw	r24, 0x02	; 2
    f68e:	80 83       	st	Z, r24
    f690:	91 83       	std	Z+1, r25	; 0x01
    f692:	8a 81       	ldd	r24, Y+2	; 0x02
    f694:	9b 81       	ldd	r25, Y+3	; 0x03
    f696:	82 83       	std	Z+2, r24	; 0x02
    f698:	93 83       	std	Z+3, r25	; 0x03
    f69a:	21 15       	cp	r18, r1
    f69c:	31 05       	cpc	r19, r1
    f69e:	29 f4       	brne	.+10     	; 0xf6aa <free+0x92>
    f6a0:	e0 93 d4 4a 	sts	0x4AD4, r30	; 0x804ad4 <__flp>
    f6a4:	f0 93 d5 4a 	sts	0x4AD5, r31	; 0x804ad5 <__flp+0x1>
    f6a8:	3d c0       	rjmp	.+122    	; 0xf724 <free+0x10c>
    f6aa:	e9 01       	movw	r28, r18
    f6ac:	ea 83       	std	Y+2, r30	; 0x02
    f6ae:	fb 83       	std	Y+3, r31	; 0x03
    f6b0:	49 91       	ld	r20, Y+
    f6b2:	59 91       	ld	r21, Y+
    f6b4:	c4 0f       	add	r28, r20
    f6b6:	d5 1f       	adc	r29, r21
    f6b8:	ec 17       	cp	r30, r28
    f6ba:	fd 07       	cpc	r31, r29
    f6bc:	61 f4       	brne	.+24     	; 0xf6d6 <free+0xbe>
    f6be:	80 81       	ld	r24, Z
    f6c0:	91 81       	ldd	r25, Z+1	; 0x01
    f6c2:	84 0f       	add	r24, r20
    f6c4:	95 1f       	adc	r25, r21
    f6c6:	02 96       	adiw	r24, 0x02	; 2
    f6c8:	e9 01       	movw	r28, r18
    f6ca:	88 83       	st	Y, r24
    f6cc:	99 83       	std	Y+1, r25	; 0x01
    f6ce:	82 81       	ldd	r24, Z+2	; 0x02
    f6d0:	93 81       	ldd	r25, Z+3	; 0x03
    f6d2:	8a 83       	std	Y+2, r24	; 0x02
    f6d4:	9b 83       	std	Y+3, r25	; 0x03
    f6d6:	e0 e0       	ldi	r30, 0x00	; 0
    f6d8:	f0 e0       	ldi	r31, 0x00	; 0
    f6da:	12 96       	adiw	r26, 0x02	; 2
    f6dc:	8d 91       	ld	r24, X+
    f6de:	9c 91       	ld	r25, X
    f6e0:	13 97       	sbiw	r26, 0x03	; 3
    f6e2:	00 97       	sbiw	r24, 0x00	; 0
    f6e4:	19 f0       	breq	.+6      	; 0xf6ec <free+0xd4>
    f6e6:	fd 01       	movw	r30, r26
    f6e8:	dc 01       	movw	r26, r24
    f6ea:	f7 cf       	rjmp	.-18     	; 0xf6da <free+0xc2>
    f6ec:	8d 91       	ld	r24, X+
    f6ee:	9c 91       	ld	r25, X
    f6f0:	11 97       	sbiw	r26, 0x01	; 1
    f6f2:	9d 01       	movw	r18, r26
    f6f4:	2e 5f       	subi	r18, 0xFE	; 254
    f6f6:	3f 4f       	sbci	r19, 0xFF	; 255
    f6f8:	82 0f       	add	r24, r18
    f6fa:	93 1f       	adc	r25, r19
    f6fc:	20 91 d2 4a 	lds	r18, 0x4AD2	; 0x804ad2 <__brkval>
    f700:	30 91 d3 4a 	lds	r19, 0x4AD3	; 0x804ad3 <__brkval+0x1>
    f704:	28 17       	cp	r18, r24
    f706:	39 07       	cpc	r19, r25
    f708:	69 f4       	brne	.+26     	; 0xf724 <free+0x10c>
    f70a:	30 97       	sbiw	r30, 0x00	; 0
    f70c:	29 f4       	brne	.+10     	; 0xf718 <free+0x100>
    f70e:	10 92 d4 4a 	sts	0x4AD4, r1	; 0x804ad4 <__flp>
    f712:	10 92 d5 4a 	sts	0x4AD5, r1	; 0x804ad5 <__flp+0x1>
    f716:	02 c0       	rjmp	.+4      	; 0xf71c <free+0x104>
    f718:	12 82       	std	Z+2, r1	; 0x02
    f71a:	13 82       	std	Z+3, r1	; 0x03
    f71c:	a0 93 d2 4a 	sts	0x4AD2, r26	; 0x804ad2 <__brkval>
    f720:	b0 93 d3 4a 	sts	0x4AD3, r27	; 0x804ad3 <__brkval+0x1>
    f724:	df 91       	pop	r29
    f726:	cf 91       	pop	r28
    f728:	08 95       	ret

0000f72a <atof>:
    f72a:	66 27       	eor	r22, r22
    f72c:	77 27       	eor	r23, r23
    f72e:	0c 94 e6 7f 	jmp	0xffcc	; 0xffcc <strtod>

0000f732 <atoi>:
    f732:	fc 01       	movw	r30, r24
    f734:	88 27       	eor	r24, r24
    f736:	99 27       	eor	r25, r25
    f738:	e8 94       	clt
    f73a:	21 91       	ld	r18, Z+
    f73c:	20 32       	cpi	r18, 0x20	; 32
    f73e:	e9 f3       	breq	.-6      	; 0xf73a <atoi+0x8>
    f740:	29 30       	cpi	r18, 0x09	; 9
    f742:	10 f0       	brcs	.+4      	; 0xf748 <atoi+0x16>
    f744:	2e 30       	cpi	r18, 0x0E	; 14
    f746:	c8 f3       	brcs	.-14     	; 0xf73a <atoi+0x8>
    f748:	2b 32       	cpi	r18, 0x2B	; 43
    f74a:	41 f0       	breq	.+16     	; 0xf75c <atoi+0x2a>
    f74c:	2d 32       	cpi	r18, 0x2D	; 45
    f74e:	39 f4       	brne	.+14     	; 0xf75e <atoi+0x2c>
    f750:	68 94       	set
    f752:	04 c0       	rjmp	.+8      	; 0xf75c <atoi+0x2a>
    f754:	0e 94 40 7c 	call	0xf880	; 0xf880 <__mulhi_const_10>
    f758:	82 0f       	add	r24, r18
    f75a:	91 1d       	adc	r25, r1
    f75c:	21 91       	ld	r18, Z+
    f75e:	20 53       	subi	r18, 0x30	; 48
    f760:	2a 30       	cpi	r18, 0x0A	; 10
    f762:	c0 f3       	brcs	.-16     	; 0xf754 <atoi+0x22>
    f764:	1e f4       	brtc	.+6      	; 0xf76c <atoi+0x3a>
    f766:	90 95       	com	r25
    f768:	81 95       	neg	r24
    f76a:	9f 4f       	sbci	r25, 0xFF	; 255
    f76c:	08 95       	ret

0000f76e <atol>:
    f76e:	1f 93       	push	r17
    f770:	fc 01       	movw	r30, r24
    f772:	99 27       	eor	r25, r25
    f774:	88 27       	eor	r24, r24
    f776:	bc 01       	movw	r22, r24
    f778:	e8 94       	clt
    f77a:	11 91       	ld	r17, Z+
    f77c:	10 32       	cpi	r17, 0x20	; 32
    f77e:	e9 f3       	breq	.-6      	; 0xf77a <atol+0xc>
    f780:	19 30       	cpi	r17, 0x09	; 9
    f782:	10 f0       	brcs	.+4      	; 0xf788 <atol+0x1a>
    f784:	1e 30       	cpi	r17, 0x0E	; 14
    f786:	c8 f3       	brcs	.-14     	; 0xf77a <atol+0xc>
    f788:	1b 32       	cpi	r17, 0x2B	; 43
    f78a:	51 f0       	breq	.+20     	; 0xf7a0 <atol+0x32>
    f78c:	1d 32       	cpi	r17, 0x2D	; 45
    f78e:	49 f4       	brne	.+18     	; 0xf7a2 <atol+0x34>
    f790:	68 94       	set
    f792:	06 c0       	rjmp	.+12     	; 0xf7a0 <atol+0x32>
    f794:	0e 94 2b 7c 	call	0xf856	; 0xf856 <__mulsi_const_10>
    f798:	61 0f       	add	r22, r17
    f79a:	71 1d       	adc	r23, r1
    f79c:	81 1d       	adc	r24, r1
    f79e:	91 1d       	adc	r25, r1
    f7a0:	11 91       	ld	r17, Z+
    f7a2:	10 53       	subi	r17, 0x30	; 48
    f7a4:	1a 30       	cpi	r17, 0x0A	; 10
    f7a6:	b0 f3       	brcs	.-20     	; 0xf794 <atol+0x26>
    f7a8:	3e f4       	brtc	.+14     	; 0xf7b8 <atol+0x4a>
    f7aa:	90 95       	com	r25
    f7ac:	80 95       	com	r24
    f7ae:	70 95       	com	r23
    f7b0:	61 95       	neg	r22
    f7b2:	7f 4f       	sbci	r23, 0xFF	; 255
    f7b4:	8f 4f       	sbci	r24, 0xFF	; 255
    f7b6:	9f 4f       	sbci	r25, 0xFF	; 255
    f7b8:	1f 91       	pop	r17
    f7ba:	08 95       	ret

0000f7bc <toupper>:
    f7bc:	91 11       	cpse	r25, r1
    f7be:	08 95       	ret
    f7c0:	81 56       	subi	r24, 0x61	; 97
    f7c2:	8a 51       	subi	r24, 0x1A	; 26
    f7c4:	08 f4       	brcc	.+2      	; 0xf7c8 <toupper+0xc>
    f7c6:	80 52       	subi	r24, 0x20	; 32
    f7c8:	85 58       	subi	r24, 0x85	; 133
    f7ca:	08 95       	ret

0000f7cc <memset>:
    f7cc:	dc 01       	movw	r26, r24
    f7ce:	01 c0       	rjmp	.+2      	; 0xf7d2 <memset+0x6>
    f7d0:	6d 93       	st	X+, r22
    f7d2:	41 50       	subi	r20, 0x01	; 1
    f7d4:	50 40       	sbci	r21, 0x00	; 0
    f7d6:	e0 f7       	brcc	.-8      	; 0xf7d0 <memset+0x4>
    f7d8:	08 95       	ret

0000f7da <strcat>:
    f7da:	fb 01       	movw	r30, r22
    f7dc:	dc 01       	movw	r26, r24
    f7de:	0d 90       	ld	r0, X+
    f7e0:	00 20       	and	r0, r0
    f7e2:	e9 f7       	brne	.-6      	; 0xf7de <strcat+0x4>
    f7e4:	11 97       	sbiw	r26, 0x01	; 1
    f7e6:	01 90       	ld	r0, Z+
    f7e8:	0d 92       	st	X+, r0
    f7ea:	00 20       	and	r0, r0
    f7ec:	e1 f7       	brne	.-8      	; 0xf7e6 <strcat+0xc>
    f7ee:	08 95       	ret

0000f7f0 <strchr>:
    f7f0:	fc 01       	movw	r30, r24
    f7f2:	81 91       	ld	r24, Z+
    f7f4:	86 17       	cp	r24, r22
    f7f6:	21 f0       	breq	.+8      	; 0xf800 <strchr+0x10>
    f7f8:	88 23       	and	r24, r24
    f7fa:	d9 f7       	brne	.-10     	; 0xf7f2 <strchr+0x2>
    f7fc:	99 27       	eor	r25, r25
    f7fe:	08 95       	ret
    f800:	31 97       	sbiw	r30, 0x01	; 1
    f802:	cf 01       	movw	r24, r30
    f804:	08 95       	ret

0000f806 <strcmp>:
    f806:	fb 01       	movw	r30, r22
    f808:	dc 01       	movw	r26, r24
    f80a:	8d 91       	ld	r24, X+
    f80c:	01 90       	ld	r0, Z+
    f80e:	80 19       	sub	r24, r0
    f810:	01 10       	cpse	r0, r1
    f812:	d9 f3       	breq	.-10     	; 0xf80a <strcmp+0x4>
    f814:	99 0b       	sbc	r25, r25
    f816:	08 95       	ret

0000f818 <strcpy>:
    f818:	fb 01       	movw	r30, r22
    f81a:	dc 01       	movw	r26, r24
    f81c:	01 90       	ld	r0, Z+
    f81e:	0d 92       	st	X+, r0
    f820:	00 20       	and	r0, r0
    f822:	e1 f7       	brne	.-8      	; 0xf81c <strcpy+0x4>
    f824:	08 95       	ret

0000f826 <strlen>:
    f826:	fc 01       	movw	r30, r24
    f828:	01 90       	ld	r0, Z+
    f82a:	00 20       	and	r0, r0
    f82c:	e9 f7       	brne	.-6      	; 0xf828 <strlen+0x2>
    f82e:	80 95       	com	r24
    f830:	90 95       	com	r25
    f832:	8e 0f       	add	r24, r30
    f834:	9f 1f       	adc	r25, r31
    f836:	08 95       	ret

0000f838 <strncpy>:
    f838:	fb 01       	movw	r30, r22
    f83a:	dc 01       	movw	r26, r24
    f83c:	41 50       	subi	r20, 0x01	; 1
    f83e:	50 40       	sbci	r21, 0x00	; 0
    f840:	48 f0       	brcs	.+18     	; 0xf854 <strncpy+0x1c>
    f842:	01 90       	ld	r0, Z+
    f844:	0d 92       	st	X+, r0
    f846:	00 20       	and	r0, r0
    f848:	c9 f7       	brne	.-14     	; 0xf83c <strncpy+0x4>
    f84a:	01 c0       	rjmp	.+2      	; 0xf84e <strncpy+0x16>
    f84c:	1d 92       	st	X+, r1
    f84e:	41 50       	subi	r20, 0x01	; 1
    f850:	50 40       	sbci	r21, 0x00	; 0
    f852:	e0 f7       	brcc	.-8      	; 0xf84c <strncpy+0x14>
    f854:	08 95       	ret

0000f856 <__mulsi_const_10>:
    f856:	59 2f       	mov	r21, r25
    f858:	48 2f       	mov	r20, r24
    f85a:	37 2f       	mov	r19, r23
    f85c:	26 2f       	mov	r18, r22
    f85e:	66 0f       	add	r22, r22
    f860:	77 1f       	adc	r23, r23
    f862:	88 1f       	adc	r24, r24
    f864:	99 1f       	adc	r25, r25
    f866:	66 0f       	add	r22, r22
    f868:	77 1f       	adc	r23, r23
    f86a:	88 1f       	adc	r24, r24
    f86c:	99 1f       	adc	r25, r25
    f86e:	62 0f       	add	r22, r18
    f870:	73 1f       	adc	r23, r19
    f872:	84 1f       	adc	r24, r20
    f874:	95 1f       	adc	r25, r21
    f876:	66 0f       	add	r22, r22
    f878:	77 1f       	adc	r23, r23
    f87a:	88 1f       	adc	r24, r24
    f87c:	99 1f       	adc	r25, r25
    f87e:	08 95       	ret

0000f880 <__mulhi_const_10>:
    f880:	7a e0       	ldi	r23, 0x0A	; 10
    f882:	97 9f       	mul	r25, r23
    f884:	90 2d       	mov	r25, r0
    f886:	87 9f       	mul	r24, r23
    f888:	80 2d       	mov	r24, r0
    f88a:	91 0d       	add	r25, r1
    f88c:	11 24       	eor	r1, r1
    f88e:	08 95       	ret

0000f890 <sprintf>:
    f890:	0f 93       	push	r16
    f892:	1f 93       	push	r17
    f894:	cf 93       	push	r28
    f896:	df 93       	push	r29
    f898:	cd b7       	in	r28, 0x3d	; 61
    f89a:	de b7       	in	r29, 0x3e	; 62
    f89c:	2e 97       	sbiw	r28, 0x0e	; 14
    f89e:	cd bf       	out	0x3d, r28	; 61
    f8a0:	de bf       	out	0x3e, r29	; 62
    f8a2:	0d 89       	ldd	r16, Y+21	; 0x15
    f8a4:	1e 89       	ldd	r17, Y+22	; 0x16
    f8a6:	86 e0       	ldi	r24, 0x06	; 6
    f8a8:	8c 83       	std	Y+4, r24	; 0x04
    f8aa:	09 83       	std	Y+1, r16	; 0x01
    f8ac:	1a 83       	std	Y+2, r17	; 0x02
    f8ae:	8f ef       	ldi	r24, 0xFF	; 255
    f8b0:	9f e7       	ldi	r25, 0x7F	; 127
    f8b2:	8d 83       	std	Y+5, r24	; 0x05
    f8b4:	9e 83       	std	Y+6, r25	; 0x06
    f8b6:	ae 01       	movw	r20, r28
    f8b8:	47 5e       	subi	r20, 0xE7	; 231
    f8ba:	5f 4f       	sbci	r21, 0xFF	; 255
    f8bc:	6f 89       	ldd	r22, Y+23	; 0x17
    f8be:	78 8d       	ldd	r23, Y+24	; 0x18
    f8c0:	ce 01       	movw	r24, r28
    f8c2:	01 96       	adiw	r24, 0x01	; 1
    f8c4:	0e 94 71 7c 	call	0xf8e2	; 0xf8e2 <vfprintf>
    f8c8:	ef 81       	ldd	r30, Y+7	; 0x07
    f8ca:	f8 85       	ldd	r31, Y+8	; 0x08
    f8cc:	e0 0f       	add	r30, r16
    f8ce:	f1 1f       	adc	r31, r17
    f8d0:	10 82       	st	Z, r1
    f8d2:	2e 96       	adiw	r28, 0x0e	; 14
    f8d4:	cd bf       	out	0x3d, r28	; 61
    f8d6:	de bf       	out	0x3e, r29	; 62
    f8d8:	df 91       	pop	r29
    f8da:	cf 91       	pop	r28
    f8dc:	1f 91       	pop	r17
    f8de:	0f 91       	pop	r16
    f8e0:	08 95       	ret

0000f8e2 <vfprintf>:
    f8e2:	2f 92       	push	r2
    f8e4:	3f 92       	push	r3
    f8e6:	4f 92       	push	r4
    f8e8:	5f 92       	push	r5
    f8ea:	6f 92       	push	r6
    f8ec:	7f 92       	push	r7
    f8ee:	8f 92       	push	r8
    f8f0:	9f 92       	push	r9
    f8f2:	af 92       	push	r10
    f8f4:	bf 92       	push	r11
    f8f6:	cf 92       	push	r12
    f8f8:	df 92       	push	r13
    f8fa:	ef 92       	push	r14
    f8fc:	ff 92       	push	r15
    f8fe:	0f 93       	push	r16
    f900:	1f 93       	push	r17
    f902:	cf 93       	push	r28
    f904:	df 93       	push	r29
    f906:	cd b7       	in	r28, 0x3d	; 61
    f908:	de b7       	in	r29, 0x3e	; 62
    f90a:	2b 97       	sbiw	r28, 0x0b	; 11
    f90c:	cd bf       	out	0x3d, r28	; 61
    f90e:	de bf       	out	0x3e, r29	; 62
    f910:	6c 01       	movw	r12, r24
    f912:	7b 01       	movw	r14, r22
    f914:	8a 01       	movw	r16, r20
    f916:	fc 01       	movw	r30, r24
    f918:	16 82       	std	Z+6, r1	; 0x06
    f91a:	17 82       	std	Z+7, r1	; 0x07
    f91c:	83 81       	ldd	r24, Z+3	; 0x03
    f91e:	81 ff       	sbrs	r24, 1
    f920:	cc c1       	rjmp	.+920    	; 0xfcba <vfprintf+0x3d8>
    f922:	ce 01       	movw	r24, r28
    f924:	01 96       	adiw	r24, 0x01	; 1
    f926:	3c 01       	movw	r6, r24
    f928:	f6 01       	movw	r30, r12
    f92a:	93 81       	ldd	r25, Z+3	; 0x03
    f92c:	f7 01       	movw	r30, r14
    f92e:	93 fd       	sbrc	r25, 3
    f930:	85 91       	lpm	r24, Z+
    f932:	93 ff       	sbrs	r25, 3
    f934:	81 91       	ld	r24, Z+
    f936:	7f 01       	movw	r14, r30
    f938:	88 23       	and	r24, r24
    f93a:	09 f4       	brne	.+2      	; 0xf93e <vfprintf+0x5c>
    f93c:	ba c1       	rjmp	.+884    	; 0xfcb2 <vfprintf+0x3d0>
    f93e:	85 32       	cpi	r24, 0x25	; 37
    f940:	39 f4       	brne	.+14     	; 0xf950 <vfprintf+0x6e>
    f942:	93 fd       	sbrc	r25, 3
    f944:	85 91       	lpm	r24, Z+
    f946:	93 ff       	sbrs	r25, 3
    f948:	81 91       	ld	r24, Z+
    f94a:	7f 01       	movw	r14, r30
    f94c:	85 32       	cpi	r24, 0x25	; 37
    f94e:	29 f4       	brne	.+10     	; 0xf95a <vfprintf+0x78>
    f950:	b6 01       	movw	r22, r12
    f952:	90 e0       	ldi	r25, 0x00	; 0
    f954:	0e 94 51 82 	call	0x104a2	; 0x104a2 <fputc>
    f958:	e7 cf       	rjmp	.-50     	; 0xf928 <vfprintf+0x46>
    f95a:	91 2c       	mov	r9, r1
    f95c:	21 2c       	mov	r2, r1
    f95e:	31 2c       	mov	r3, r1
    f960:	ff e1       	ldi	r31, 0x1F	; 31
    f962:	f3 15       	cp	r31, r3
    f964:	d8 f0       	brcs	.+54     	; 0xf99c <vfprintf+0xba>
    f966:	8b 32       	cpi	r24, 0x2B	; 43
    f968:	79 f0       	breq	.+30     	; 0xf988 <vfprintf+0xa6>
    f96a:	38 f4       	brcc	.+14     	; 0xf97a <vfprintf+0x98>
    f96c:	80 32       	cpi	r24, 0x20	; 32
    f96e:	79 f0       	breq	.+30     	; 0xf98e <vfprintf+0xac>
    f970:	83 32       	cpi	r24, 0x23	; 35
    f972:	a1 f4       	brne	.+40     	; 0xf99c <vfprintf+0xba>
    f974:	23 2d       	mov	r18, r3
    f976:	20 61       	ori	r18, 0x10	; 16
    f978:	1d c0       	rjmp	.+58     	; 0xf9b4 <vfprintf+0xd2>
    f97a:	8d 32       	cpi	r24, 0x2D	; 45
    f97c:	61 f0       	breq	.+24     	; 0xf996 <vfprintf+0xb4>
    f97e:	80 33       	cpi	r24, 0x30	; 48
    f980:	69 f4       	brne	.+26     	; 0xf99c <vfprintf+0xba>
    f982:	23 2d       	mov	r18, r3
    f984:	21 60       	ori	r18, 0x01	; 1
    f986:	16 c0       	rjmp	.+44     	; 0xf9b4 <vfprintf+0xd2>
    f988:	83 2d       	mov	r24, r3
    f98a:	82 60       	ori	r24, 0x02	; 2
    f98c:	38 2e       	mov	r3, r24
    f98e:	e3 2d       	mov	r30, r3
    f990:	e4 60       	ori	r30, 0x04	; 4
    f992:	3e 2e       	mov	r3, r30
    f994:	2a c0       	rjmp	.+84     	; 0xf9ea <vfprintf+0x108>
    f996:	f3 2d       	mov	r31, r3
    f998:	f8 60       	ori	r31, 0x08	; 8
    f99a:	1d c0       	rjmp	.+58     	; 0xf9d6 <vfprintf+0xf4>
    f99c:	37 fc       	sbrc	r3, 7
    f99e:	2d c0       	rjmp	.+90     	; 0xf9fa <vfprintf+0x118>
    f9a0:	20 ed       	ldi	r18, 0xD0	; 208
    f9a2:	28 0f       	add	r18, r24
    f9a4:	2a 30       	cpi	r18, 0x0A	; 10
    f9a6:	40 f0       	brcs	.+16     	; 0xf9b8 <vfprintf+0xd6>
    f9a8:	8e 32       	cpi	r24, 0x2E	; 46
    f9aa:	b9 f4       	brne	.+46     	; 0xf9da <vfprintf+0xf8>
    f9ac:	36 fc       	sbrc	r3, 6
    f9ae:	81 c1       	rjmp	.+770    	; 0xfcb2 <vfprintf+0x3d0>
    f9b0:	23 2d       	mov	r18, r3
    f9b2:	20 64       	ori	r18, 0x40	; 64
    f9b4:	32 2e       	mov	r3, r18
    f9b6:	19 c0       	rjmp	.+50     	; 0xf9ea <vfprintf+0x108>
    f9b8:	36 fe       	sbrs	r3, 6
    f9ba:	06 c0       	rjmp	.+12     	; 0xf9c8 <vfprintf+0xe6>
    f9bc:	8a e0       	ldi	r24, 0x0A	; 10
    f9be:	98 9e       	mul	r9, r24
    f9c0:	20 0d       	add	r18, r0
    f9c2:	11 24       	eor	r1, r1
    f9c4:	92 2e       	mov	r9, r18
    f9c6:	11 c0       	rjmp	.+34     	; 0xf9ea <vfprintf+0x108>
    f9c8:	ea e0       	ldi	r30, 0x0A	; 10
    f9ca:	2e 9e       	mul	r2, r30
    f9cc:	20 0d       	add	r18, r0
    f9ce:	11 24       	eor	r1, r1
    f9d0:	22 2e       	mov	r2, r18
    f9d2:	f3 2d       	mov	r31, r3
    f9d4:	f0 62       	ori	r31, 0x20	; 32
    f9d6:	3f 2e       	mov	r3, r31
    f9d8:	08 c0       	rjmp	.+16     	; 0xf9ea <vfprintf+0x108>
    f9da:	8c 36       	cpi	r24, 0x6C	; 108
    f9dc:	21 f4       	brne	.+8      	; 0xf9e6 <vfprintf+0x104>
    f9de:	83 2d       	mov	r24, r3
    f9e0:	80 68       	ori	r24, 0x80	; 128
    f9e2:	38 2e       	mov	r3, r24
    f9e4:	02 c0       	rjmp	.+4      	; 0xf9ea <vfprintf+0x108>
    f9e6:	88 36       	cpi	r24, 0x68	; 104
    f9e8:	41 f4       	brne	.+16     	; 0xf9fa <vfprintf+0x118>
    f9ea:	f7 01       	movw	r30, r14
    f9ec:	93 fd       	sbrc	r25, 3
    f9ee:	85 91       	lpm	r24, Z+
    f9f0:	93 ff       	sbrs	r25, 3
    f9f2:	81 91       	ld	r24, Z+
    f9f4:	7f 01       	movw	r14, r30
    f9f6:	81 11       	cpse	r24, r1
    f9f8:	b3 cf       	rjmp	.-154    	; 0xf960 <vfprintf+0x7e>
    f9fa:	98 2f       	mov	r25, r24
    f9fc:	9f 7d       	andi	r25, 0xDF	; 223
    f9fe:	95 54       	subi	r25, 0x45	; 69
    fa00:	93 30       	cpi	r25, 0x03	; 3
    fa02:	28 f4       	brcc	.+10     	; 0xfa0e <vfprintf+0x12c>
    fa04:	0c 5f       	subi	r16, 0xFC	; 252
    fa06:	1f 4f       	sbci	r17, 0xFF	; 255
    fa08:	9f e3       	ldi	r25, 0x3F	; 63
    fa0a:	99 83       	std	Y+1, r25	; 0x01
    fa0c:	0d c0       	rjmp	.+26     	; 0xfa28 <vfprintf+0x146>
    fa0e:	83 36       	cpi	r24, 0x63	; 99
    fa10:	31 f0       	breq	.+12     	; 0xfa1e <vfprintf+0x13c>
    fa12:	83 37       	cpi	r24, 0x73	; 115
    fa14:	71 f0       	breq	.+28     	; 0xfa32 <vfprintf+0x150>
    fa16:	83 35       	cpi	r24, 0x53	; 83
    fa18:	09 f0       	breq	.+2      	; 0xfa1c <vfprintf+0x13a>
    fa1a:	59 c0       	rjmp	.+178    	; 0xface <vfprintf+0x1ec>
    fa1c:	21 c0       	rjmp	.+66     	; 0xfa60 <vfprintf+0x17e>
    fa1e:	f8 01       	movw	r30, r16
    fa20:	80 81       	ld	r24, Z
    fa22:	89 83       	std	Y+1, r24	; 0x01
    fa24:	0e 5f       	subi	r16, 0xFE	; 254
    fa26:	1f 4f       	sbci	r17, 0xFF	; 255
    fa28:	88 24       	eor	r8, r8
    fa2a:	83 94       	inc	r8
    fa2c:	91 2c       	mov	r9, r1
    fa2e:	53 01       	movw	r10, r6
    fa30:	13 c0       	rjmp	.+38     	; 0xfa58 <vfprintf+0x176>
    fa32:	28 01       	movw	r4, r16
    fa34:	f2 e0       	ldi	r31, 0x02	; 2
    fa36:	4f 0e       	add	r4, r31
    fa38:	51 1c       	adc	r5, r1
    fa3a:	f8 01       	movw	r30, r16
    fa3c:	a0 80       	ld	r10, Z
    fa3e:	b1 80       	ldd	r11, Z+1	; 0x01
    fa40:	36 fe       	sbrs	r3, 6
    fa42:	03 c0       	rjmp	.+6      	; 0xfa4a <vfprintf+0x168>
    fa44:	69 2d       	mov	r22, r9
    fa46:	70 e0       	ldi	r23, 0x00	; 0
    fa48:	02 c0       	rjmp	.+4      	; 0xfa4e <vfprintf+0x16c>
    fa4a:	6f ef       	ldi	r22, 0xFF	; 255
    fa4c:	7f ef       	ldi	r23, 0xFF	; 255
    fa4e:	c5 01       	movw	r24, r10
    fa50:	0e 94 46 82 	call	0x1048c	; 0x1048c <strnlen>
    fa54:	4c 01       	movw	r8, r24
    fa56:	82 01       	movw	r16, r4
    fa58:	f3 2d       	mov	r31, r3
    fa5a:	ff 77       	andi	r31, 0x7F	; 127
    fa5c:	3f 2e       	mov	r3, r31
    fa5e:	16 c0       	rjmp	.+44     	; 0xfa8c <vfprintf+0x1aa>
    fa60:	28 01       	movw	r4, r16
    fa62:	22 e0       	ldi	r18, 0x02	; 2
    fa64:	42 0e       	add	r4, r18
    fa66:	51 1c       	adc	r5, r1
    fa68:	f8 01       	movw	r30, r16
    fa6a:	a0 80       	ld	r10, Z
    fa6c:	b1 80       	ldd	r11, Z+1	; 0x01
    fa6e:	36 fe       	sbrs	r3, 6
    fa70:	03 c0       	rjmp	.+6      	; 0xfa78 <vfprintf+0x196>
    fa72:	69 2d       	mov	r22, r9
    fa74:	70 e0       	ldi	r23, 0x00	; 0
    fa76:	02 c0       	rjmp	.+4      	; 0xfa7c <vfprintf+0x19a>
    fa78:	6f ef       	ldi	r22, 0xFF	; 255
    fa7a:	7f ef       	ldi	r23, 0xFF	; 255
    fa7c:	c5 01       	movw	r24, r10
    fa7e:	0e 94 3b 82 	call	0x10476	; 0x10476 <strnlen_P>
    fa82:	4c 01       	movw	r8, r24
    fa84:	f3 2d       	mov	r31, r3
    fa86:	f0 68       	ori	r31, 0x80	; 128
    fa88:	3f 2e       	mov	r3, r31
    fa8a:	82 01       	movw	r16, r4
    fa8c:	33 fc       	sbrc	r3, 3
    fa8e:	1b c0       	rjmp	.+54     	; 0xfac6 <vfprintf+0x1e4>
    fa90:	82 2d       	mov	r24, r2
    fa92:	90 e0       	ldi	r25, 0x00	; 0
    fa94:	88 16       	cp	r8, r24
    fa96:	99 06       	cpc	r9, r25
    fa98:	b0 f4       	brcc	.+44     	; 0xfac6 <vfprintf+0x1e4>
    fa9a:	b6 01       	movw	r22, r12
    fa9c:	80 e2       	ldi	r24, 0x20	; 32
    fa9e:	90 e0       	ldi	r25, 0x00	; 0
    faa0:	0e 94 51 82 	call	0x104a2	; 0x104a2 <fputc>
    faa4:	2a 94       	dec	r2
    faa6:	f4 cf       	rjmp	.-24     	; 0xfa90 <vfprintf+0x1ae>
    faa8:	f5 01       	movw	r30, r10
    faaa:	37 fc       	sbrc	r3, 7
    faac:	85 91       	lpm	r24, Z+
    faae:	37 fe       	sbrs	r3, 7
    fab0:	81 91       	ld	r24, Z+
    fab2:	5f 01       	movw	r10, r30
    fab4:	b6 01       	movw	r22, r12
    fab6:	90 e0       	ldi	r25, 0x00	; 0
    fab8:	0e 94 51 82 	call	0x104a2	; 0x104a2 <fputc>
    fabc:	21 10       	cpse	r2, r1
    fabe:	2a 94       	dec	r2
    fac0:	21 e0       	ldi	r18, 0x01	; 1
    fac2:	82 1a       	sub	r8, r18
    fac4:	91 08       	sbc	r9, r1
    fac6:	81 14       	cp	r8, r1
    fac8:	91 04       	cpc	r9, r1
    faca:	71 f7       	brne	.-36     	; 0xfaa8 <vfprintf+0x1c6>
    facc:	e8 c0       	rjmp	.+464    	; 0xfc9e <vfprintf+0x3bc>
    face:	84 36       	cpi	r24, 0x64	; 100
    fad0:	11 f0       	breq	.+4      	; 0xfad6 <vfprintf+0x1f4>
    fad2:	89 36       	cpi	r24, 0x69	; 105
    fad4:	41 f5       	brne	.+80     	; 0xfb26 <vfprintf+0x244>
    fad6:	f8 01       	movw	r30, r16
    fad8:	37 fe       	sbrs	r3, 7
    fada:	07 c0       	rjmp	.+14     	; 0xfaea <vfprintf+0x208>
    fadc:	60 81       	ld	r22, Z
    fade:	71 81       	ldd	r23, Z+1	; 0x01
    fae0:	82 81       	ldd	r24, Z+2	; 0x02
    fae2:	93 81       	ldd	r25, Z+3	; 0x03
    fae4:	0c 5f       	subi	r16, 0xFC	; 252
    fae6:	1f 4f       	sbci	r17, 0xFF	; 255
    fae8:	08 c0       	rjmp	.+16     	; 0xfafa <vfprintf+0x218>
    faea:	60 81       	ld	r22, Z
    faec:	71 81       	ldd	r23, Z+1	; 0x01
    faee:	07 2e       	mov	r0, r23
    faf0:	00 0c       	add	r0, r0
    faf2:	88 0b       	sbc	r24, r24
    faf4:	99 0b       	sbc	r25, r25
    faf6:	0e 5f       	subi	r16, 0xFE	; 254
    faf8:	1f 4f       	sbci	r17, 0xFF	; 255
    fafa:	f3 2d       	mov	r31, r3
    fafc:	ff 76       	andi	r31, 0x6F	; 111
    fafe:	3f 2e       	mov	r3, r31
    fb00:	97 ff       	sbrs	r25, 7
    fb02:	09 c0       	rjmp	.+18     	; 0xfb16 <vfprintf+0x234>
    fb04:	90 95       	com	r25
    fb06:	80 95       	com	r24
    fb08:	70 95       	com	r23
    fb0a:	61 95       	neg	r22
    fb0c:	7f 4f       	sbci	r23, 0xFF	; 255
    fb0e:	8f 4f       	sbci	r24, 0xFF	; 255
    fb10:	9f 4f       	sbci	r25, 0xFF	; 255
    fb12:	f0 68       	ori	r31, 0x80	; 128
    fb14:	3f 2e       	mov	r3, r31
    fb16:	2a e0       	ldi	r18, 0x0A	; 10
    fb18:	30 e0       	ldi	r19, 0x00	; 0
    fb1a:	a3 01       	movw	r20, r6
    fb1c:	0e 94 8d 82 	call	0x1051a	; 0x1051a <__ultoa_invert>
    fb20:	88 2e       	mov	r8, r24
    fb22:	86 18       	sub	r8, r6
    fb24:	45 c0       	rjmp	.+138    	; 0xfbb0 <vfprintf+0x2ce>
    fb26:	85 37       	cpi	r24, 0x75	; 117
    fb28:	31 f4       	brne	.+12     	; 0xfb36 <vfprintf+0x254>
    fb2a:	23 2d       	mov	r18, r3
    fb2c:	2f 7e       	andi	r18, 0xEF	; 239
    fb2e:	b2 2e       	mov	r11, r18
    fb30:	2a e0       	ldi	r18, 0x0A	; 10
    fb32:	30 e0       	ldi	r19, 0x00	; 0
    fb34:	25 c0       	rjmp	.+74     	; 0xfb80 <vfprintf+0x29e>
    fb36:	93 2d       	mov	r25, r3
    fb38:	99 7f       	andi	r25, 0xF9	; 249
    fb3a:	b9 2e       	mov	r11, r25
    fb3c:	8f 36       	cpi	r24, 0x6F	; 111
    fb3e:	c1 f0       	breq	.+48     	; 0xfb70 <vfprintf+0x28e>
    fb40:	18 f4       	brcc	.+6      	; 0xfb48 <vfprintf+0x266>
    fb42:	88 35       	cpi	r24, 0x58	; 88
    fb44:	79 f0       	breq	.+30     	; 0xfb64 <vfprintf+0x282>
    fb46:	b5 c0       	rjmp	.+362    	; 0xfcb2 <vfprintf+0x3d0>
    fb48:	80 37       	cpi	r24, 0x70	; 112
    fb4a:	19 f0       	breq	.+6      	; 0xfb52 <vfprintf+0x270>
    fb4c:	88 37       	cpi	r24, 0x78	; 120
    fb4e:	21 f0       	breq	.+8      	; 0xfb58 <vfprintf+0x276>
    fb50:	b0 c0       	rjmp	.+352    	; 0xfcb2 <vfprintf+0x3d0>
    fb52:	e9 2f       	mov	r30, r25
    fb54:	e0 61       	ori	r30, 0x10	; 16
    fb56:	be 2e       	mov	r11, r30
    fb58:	b4 fe       	sbrs	r11, 4
    fb5a:	0d c0       	rjmp	.+26     	; 0xfb76 <vfprintf+0x294>
    fb5c:	fb 2d       	mov	r31, r11
    fb5e:	f4 60       	ori	r31, 0x04	; 4
    fb60:	bf 2e       	mov	r11, r31
    fb62:	09 c0       	rjmp	.+18     	; 0xfb76 <vfprintf+0x294>
    fb64:	34 fe       	sbrs	r3, 4
    fb66:	0a c0       	rjmp	.+20     	; 0xfb7c <vfprintf+0x29a>
    fb68:	29 2f       	mov	r18, r25
    fb6a:	26 60       	ori	r18, 0x06	; 6
    fb6c:	b2 2e       	mov	r11, r18
    fb6e:	06 c0       	rjmp	.+12     	; 0xfb7c <vfprintf+0x29a>
    fb70:	28 e0       	ldi	r18, 0x08	; 8
    fb72:	30 e0       	ldi	r19, 0x00	; 0
    fb74:	05 c0       	rjmp	.+10     	; 0xfb80 <vfprintf+0x29e>
    fb76:	20 e1       	ldi	r18, 0x10	; 16
    fb78:	30 e0       	ldi	r19, 0x00	; 0
    fb7a:	02 c0       	rjmp	.+4      	; 0xfb80 <vfprintf+0x29e>
    fb7c:	20 e1       	ldi	r18, 0x10	; 16
    fb7e:	32 e0       	ldi	r19, 0x02	; 2
    fb80:	f8 01       	movw	r30, r16
    fb82:	b7 fe       	sbrs	r11, 7
    fb84:	07 c0       	rjmp	.+14     	; 0xfb94 <vfprintf+0x2b2>
    fb86:	60 81       	ld	r22, Z
    fb88:	71 81       	ldd	r23, Z+1	; 0x01
    fb8a:	82 81       	ldd	r24, Z+2	; 0x02
    fb8c:	93 81       	ldd	r25, Z+3	; 0x03
    fb8e:	0c 5f       	subi	r16, 0xFC	; 252
    fb90:	1f 4f       	sbci	r17, 0xFF	; 255
    fb92:	06 c0       	rjmp	.+12     	; 0xfba0 <vfprintf+0x2be>
    fb94:	60 81       	ld	r22, Z
    fb96:	71 81       	ldd	r23, Z+1	; 0x01
    fb98:	80 e0       	ldi	r24, 0x00	; 0
    fb9a:	90 e0       	ldi	r25, 0x00	; 0
    fb9c:	0e 5f       	subi	r16, 0xFE	; 254
    fb9e:	1f 4f       	sbci	r17, 0xFF	; 255
    fba0:	a3 01       	movw	r20, r6
    fba2:	0e 94 8d 82 	call	0x1051a	; 0x1051a <__ultoa_invert>
    fba6:	88 2e       	mov	r8, r24
    fba8:	86 18       	sub	r8, r6
    fbaa:	fb 2d       	mov	r31, r11
    fbac:	ff 77       	andi	r31, 0x7F	; 127
    fbae:	3f 2e       	mov	r3, r31
    fbb0:	36 fe       	sbrs	r3, 6
    fbb2:	0d c0       	rjmp	.+26     	; 0xfbce <vfprintf+0x2ec>
    fbb4:	23 2d       	mov	r18, r3
    fbb6:	2e 7f       	andi	r18, 0xFE	; 254
    fbb8:	a2 2e       	mov	r10, r18
    fbba:	89 14       	cp	r8, r9
    fbbc:	58 f4       	brcc	.+22     	; 0xfbd4 <vfprintf+0x2f2>
    fbbe:	34 fe       	sbrs	r3, 4
    fbc0:	0b c0       	rjmp	.+22     	; 0xfbd8 <vfprintf+0x2f6>
    fbc2:	32 fc       	sbrc	r3, 2
    fbc4:	09 c0       	rjmp	.+18     	; 0xfbd8 <vfprintf+0x2f6>
    fbc6:	83 2d       	mov	r24, r3
    fbc8:	8e 7e       	andi	r24, 0xEE	; 238
    fbca:	a8 2e       	mov	r10, r24
    fbcc:	05 c0       	rjmp	.+10     	; 0xfbd8 <vfprintf+0x2f6>
    fbce:	b8 2c       	mov	r11, r8
    fbd0:	a3 2c       	mov	r10, r3
    fbd2:	03 c0       	rjmp	.+6      	; 0xfbda <vfprintf+0x2f8>
    fbd4:	b8 2c       	mov	r11, r8
    fbd6:	01 c0       	rjmp	.+2      	; 0xfbda <vfprintf+0x2f8>
    fbd8:	b9 2c       	mov	r11, r9
    fbda:	a4 fe       	sbrs	r10, 4
    fbdc:	0f c0       	rjmp	.+30     	; 0xfbfc <vfprintf+0x31a>
    fbde:	fe 01       	movw	r30, r28
    fbe0:	e8 0d       	add	r30, r8
    fbe2:	f1 1d       	adc	r31, r1
    fbe4:	80 81       	ld	r24, Z
    fbe6:	80 33       	cpi	r24, 0x30	; 48
    fbe8:	21 f4       	brne	.+8      	; 0xfbf2 <vfprintf+0x310>
    fbea:	9a 2d       	mov	r25, r10
    fbec:	99 7e       	andi	r25, 0xE9	; 233
    fbee:	a9 2e       	mov	r10, r25
    fbf0:	09 c0       	rjmp	.+18     	; 0xfc04 <vfprintf+0x322>
    fbf2:	a2 fe       	sbrs	r10, 2
    fbf4:	06 c0       	rjmp	.+12     	; 0xfc02 <vfprintf+0x320>
    fbf6:	b3 94       	inc	r11
    fbf8:	b3 94       	inc	r11
    fbfa:	04 c0       	rjmp	.+8      	; 0xfc04 <vfprintf+0x322>
    fbfc:	8a 2d       	mov	r24, r10
    fbfe:	86 78       	andi	r24, 0x86	; 134
    fc00:	09 f0       	breq	.+2      	; 0xfc04 <vfprintf+0x322>
    fc02:	b3 94       	inc	r11
    fc04:	a3 fc       	sbrc	r10, 3
    fc06:	11 c0       	rjmp	.+34     	; 0xfc2a <vfprintf+0x348>
    fc08:	a0 fe       	sbrs	r10, 0
    fc0a:	06 c0       	rjmp	.+12     	; 0xfc18 <vfprintf+0x336>
    fc0c:	b2 14       	cp	r11, r2
    fc0e:	88 f4       	brcc	.+34     	; 0xfc32 <vfprintf+0x350>
    fc10:	28 0c       	add	r2, r8
    fc12:	92 2c       	mov	r9, r2
    fc14:	9b 18       	sub	r9, r11
    fc16:	0e c0       	rjmp	.+28     	; 0xfc34 <vfprintf+0x352>
    fc18:	b2 14       	cp	r11, r2
    fc1a:	60 f4       	brcc	.+24     	; 0xfc34 <vfprintf+0x352>
    fc1c:	b6 01       	movw	r22, r12
    fc1e:	80 e2       	ldi	r24, 0x20	; 32
    fc20:	90 e0       	ldi	r25, 0x00	; 0
    fc22:	0e 94 51 82 	call	0x104a2	; 0x104a2 <fputc>
    fc26:	b3 94       	inc	r11
    fc28:	f7 cf       	rjmp	.-18     	; 0xfc18 <vfprintf+0x336>
    fc2a:	b2 14       	cp	r11, r2
    fc2c:	18 f4       	brcc	.+6      	; 0xfc34 <vfprintf+0x352>
    fc2e:	2b 18       	sub	r2, r11
    fc30:	02 c0       	rjmp	.+4      	; 0xfc36 <vfprintf+0x354>
    fc32:	98 2c       	mov	r9, r8
    fc34:	21 2c       	mov	r2, r1
    fc36:	a4 fe       	sbrs	r10, 4
    fc38:	10 c0       	rjmp	.+32     	; 0xfc5a <vfprintf+0x378>
    fc3a:	b6 01       	movw	r22, r12
    fc3c:	80 e3       	ldi	r24, 0x30	; 48
    fc3e:	90 e0       	ldi	r25, 0x00	; 0
    fc40:	0e 94 51 82 	call	0x104a2	; 0x104a2 <fputc>
    fc44:	a2 fe       	sbrs	r10, 2
    fc46:	17 c0       	rjmp	.+46     	; 0xfc76 <vfprintf+0x394>
    fc48:	a1 fc       	sbrc	r10, 1
    fc4a:	03 c0       	rjmp	.+6      	; 0xfc52 <vfprintf+0x370>
    fc4c:	88 e7       	ldi	r24, 0x78	; 120
    fc4e:	90 e0       	ldi	r25, 0x00	; 0
    fc50:	02 c0       	rjmp	.+4      	; 0xfc56 <vfprintf+0x374>
    fc52:	88 e5       	ldi	r24, 0x58	; 88
    fc54:	90 e0       	ldi	r25, 0x00	; 0
    fc56:	b6 01       	movw	r22, r12
    fc58:	0c c0       	rjmp	.+24     	; 0xfc72 <vfprintf+0x390>
    fc5a:	8a 2d       	mov	r24, r10
    fc5c:	86 78       	andi	r24, 0x86	; 134
    fc5e:	59 f0       	breq	.+22     	; 0xfc76 <vfprintf+0x394>
    fc60:	a1 fe       	sbrs	r10, 1
    fc62:	02 c0       	rjmp	.+4      	; 0xfc68 <vfprintf+0x386>
    fc64:	8b e2       	ldi	r24, 0x2B	; 43
    fc66:	01 c0       	rjmp	.+2      	; 0xfc6a <vfprintf+0x388>
    fc68:	80 e2       	ldi	r24, 0x20	; 32
    fc6a:	a7 fc       	sbrc	r10, 7
    fc6c:	8d e2       	ldi	r24, 0x2D	; 45
    fc6e:	b6 01       	movw	r22, r12
    fc70:	90 e0       	ldi	r25, 0x00	; 0
    fc72:	0e 94 51 82 	call	0x104a2	; 0x104a2 <fputc>
    fc76:	89 14       	cp	r8, r9
    fc78:	38 f4       	brcc	.+14     	; 0xfc88 <vfprintf+0x3a6>
    fc7a:	b6 01       	movw	r22, r12
    fc7c:	80 e3       	ldi	r24, 0x30	; 48
    fc7e:	90 e0       	ldi	r25, 0x00	; 0
    fc80:	0e 94 51 82 	call	0x104a2	; 0x104a2 <fputc>
    fc84:	9a 94       	dec	r9
    fc86:	f7 cf       	rjmp	.-18     	; 0xfc76 <vfprintf+0x394>
    fc88:	8a 94       	dec	r8
    fc8a:	f3 01       	movw	r30, r6
    fc8c:	e8 0d       	add	r30, r8
    fc8e:	f1 1d       	adc	r31, r1
    fc90:	80 81       	ld	r24, Z
    fc92:	b6 01       	movw	r22, r12
    fc94:	90 e0       	ldi	r25, 0x00	; 0
    fc96:	0e 94 51 82 	call	0x104a2	; 0x104a2 <fputc>
    fc9a:	81 10       	cpse	r8, r1
    fc9c:	f5 cf       	rjmp	.-22     	; 0xfc88 <vfprintf+0x3a6>
    fc9e:	22 20       	and	r2, r2
    fca0:	09 f4       	brne	.+2      	; 0xfca4 <vfprintf+0x3c2>
    fca2:	42 ce       	rjmp	.-892    	; 0xf928 <vfprintf+0x46>
    fca4:	b6 01       	movw	r22, r12
    fca6:	80 e2       	ldi	r24, 0x20	; 32
    fca8:	90 e0       	ldi	r25, 0x00	; 0
    fcaa:	0e 94 51 82 	call	0x104a2	; 0x104a2 <fputc>
    fcae:	2a 94       	dec	r2
    fcb0:	f6 cf       	rjmp	.-20     	; 0xfc9e <vfprintf+0x3bc>
    fcb2:	f6 01       	movw	r30, r12
    fcb4:	86 81       	ldd	r24, Z+6	; 0x06
    fcb6:	97 81       	ldd	r25, Z+7	; 0x07
    fcb8:	02 c0       	rjmp	.+4      	; 0xfcbe <vfprintf+0x3dc>
    fcba:	8f ef       	ldi	r24, 0xFF	; 255
    fcbc:	9f ef       	ldi	r25, 0xFF	; 255
    fcbe:	2b 96       	adiw	r28, 0x0b	; 11
    fcc0:	cd bf       	out	0x3d, r28	; 61
    fcc2:	de bf       	out	0x3e, r29	; 62
    fcc4:	df 91       	pop	r29
    fcc6:	cf 91       	pop	r28
    fcc8:	1f 91       	pop	r17
    fcca:	0f 91       	pop	r16
    fccc:	ff 90       	pop	r15
    fcce:	ef 90       	pop	r14
    fcd0:	df 90       	pop	r13
    fcd2:	cf 90       	pop	r12
    fcd4:	bf 90       	pop	r11
    fcd6:	af 90       	pop	r10
    fcd8:	9f 90       	pop	r9
    fcda:	8f 90       	pop	r8
    fcdc:	7f 90       	pop	r7
    fcde:	6f 90       	pop	r6
    fce0:	5f 90       	pop	r5
    fce2:	4f 90       	pop	r4
    fce4:	3f 90       	pop	r3
    fce6:	2f 90       	pop	r2
    fce8:	08 95       	ret

0000fcea <dtoa_prf>:
    fcea:	8f 92       	push	r8
    fcec:	9f 92       	push	r9
    fcee:	af 92       	push	r10
    fcf0:	bf 92       	push	r11
    fcf2:	cf 92       	push	r12
    fcf4:	df 92       	push	r13
    fcf6:	ef 92       	push	r14
    fcf8:	ff 92       	push	r15
    fcfa:	0f 93       	push	r16
    fcfc:	1f 93       	push	r17
    fcfe:	cf 93       	push	r28
    fd00:	df 93       	push	r29
    fd02:	cd b7       	in	r28, 0x3d	; 61
    fd04:	de b7       	in	r29, 0x3e	; 62
    fd06:	29 97       	sbiw	r28, 0x09	; 9
    fd08:	cd bf       	out	0x3d, r28	; 61
    fd0a:	de bf       	out	0x3e, r29	; 62
    fd0c:	6a 01       	movw	r12, r20
    fd0e:	12 2f       	mov	r17, r18
    fd10:	b0 2e       	mov	r11, r16
    fd12:	2b e3       	ldi	r18, 0x3B	; 59
    fd14:	20 17       	cp	r18, r16
    fd16:	20 f0       	brcs	.+8      	; 0xfd20 <dtoa_prf+0x36>
    fd18:	ff 24       	eor	r15, r15
    fd1a:	f3 94       	inc	r15
    fd1c:	f0 0e       	add	r15, r16
    fd1e:	02 c0       	rjmp	.+4      	; 0xfd24 <dtoa_prf+0x3a>
    fd20:	2c e3       	ldi	r18, 0x3C	; 60
    fd22:	f2 2e       	mov	r15, r18
    fd24:	0f 2d       	mov	r16, r15
    fd26:	27 e0       	ldi	r18, 0x07	; 7
    fd28:	ae 01       	movw	r20, r28
    fd2a:	4f 5f       	subi	r20, 0xFF	; 255
    fd2c:	5f 4f       	sbci	r21, 0xFF	; 255
    fd2e:	0e 94 42 81 	call	0x10284	; 0x10284 <__ftoa_engine>
    fd32:	bc 01       	movw	r22, r24
    fd34:	49 81       	ldd	r20, Y+1	; 0x01
    fd36:	84 2f       	mov	r24, r20
    fd38:	89 70       	andi	r24, 0x09	; 9
    fd3a:	81 30       	cpi	r24, 0x01	; 1
    fd3c:	31 f0       	breq	.+12     	; 0xfd4a <dtoa_prf+0x60>
    fd3e:	e1 fc       	sbrc	r14, 1
    fd40:	06 c0       	rjmp	.+12     	; 0xfd4e <dtoa_prf+0x64>
    fd42:	e0 fe       	sbrs	r14, 0
    fd44:	06 c0       	rjmp	.+12     	; 0xfd52 <dtoa_prf+0x68>
    fd46:	90 e2       	ldi	r25, 0x20	; 32
    fd48:	05 c0       	rjmp	.+10     	; 0xfd54 <dtoa_prf+0x6a>
    fd4a:	9d e2       	ldi	r25, 0x2D	; 45
    fd4c:	03 c0       	rjmp	.+6      	; 0xfd54 <dtoa_prf+0x6a>
    fd4e:	9b e2       	ldi	r25, 0x2B	; 43
    fd50:	01 c0       	rjmp	.+2      	; 0xfd54 <dtoa_prf+0x6a>
    fd52:	90 e0       	ldi	r25, 0x00	; 0
    fd54:	5e 2d       	mov	r21, r14
    fd56:	50 71       	andi	r21, 0x10	; 16
    fd58:	43 ff       	sbrs	r20, 3
    fd5a:	3c c0       	rjmp	.+120    	; 0xfdd4 <dtoa_prf+0xea>
    fd5c:	91 11       	cpse	r25, r1
    fd5e:	02 c0       	rjmp	.+4      	; 0xfd64 <dtoa_prf+0x7a>
    fd60:	83 e0       	ldi	r24, 0x03	; 3
    fd62:	01 c0       	rjmp	.+2      	; 0xfd66 <dtoa_prf+0x7c>
    fd64:	84 e0       	ldi	r24, 0x04	; 4
    fd66:	81 17       	cp	r24, r17
    fd68:	18 f4       	brcc	.+6      	; 0xfd70 <dtoa_prf+0x86>
    fd6a:	21 2f       	mov	r18, r17
    fd6c:	28 1b       	sub	r18, r24
    fd6e:	01 c0       	rjmp	.+2      	; 0xfd72 <dtoa_prf+0x88>
    fd70:	20 e0       	ldi	r18, 0x00	; 0
    fd72:	51 11       	cpse	r21, r1
    fd74:	0b c0       	rjmp	.+22     	; 0xfd8c <dtoa_prf+0xa2>
    fd76:	f6 01       	movw	r30, r12
    fd78:	82 2f       	mov	r24, r18
    fd7a:	30 e2       	ldi	r19, 0x20	; 32
    fd7c:	88 23       	and	r24, r24
    fd7e:	19 f0       	breq	.+6      	; 0xfd86 <dtoa_prf+0x9c>
    fd80:	31 93       	st	Z+, r19
    fd82:	81 50       	subi	r24, 0x01	; 1
    fd84:	fb cf       	rjmp	.-10     	; 0xfd7c <dtoa_prf+0x92>
    fd86:	c2 0e       	add	r12, r18
    fd88:	d1 1c       	adc	r13, r1
    fd8a:	20 e0       	ldi	r18, 0x00	; 0
    fd8c:	99 23       	and	r25, r25
    fd8e:	29 f0       	breq	.+10     	; 0xfd9a <dtoa_prf+0xb0>
    fd90:	d6 01       	movw	r26, r12
    fd92:	9c 93       	st	X, r25
    fd94:	f6 01       	movw	r30, r12
    fd96:	31 96       	adiw	r30, 0x01	; 1
    fd98:	6f 01       	movw	r12, r30
    fd9a:	c6 01       	movw	r24, r12
    fd9c:	03 96       	adiw	r24, 0x03	; 3
    fd9e:	e2 fe       	sbrs	r14, 2
    fda0:	0a c0       	rjmp	.+20     	; 0xfdb6 <dtoa_prf+0xcc>
    fda2:	3e e4       	ldi	r19, 0x4E	; 78
    fda4:	d6 01       	movw	r26, r12
    fda6:	3c 93       	st	X, r19
    fda8:	41 e4       	ldi	r20, 0x41	; 65
    fdaa:	11 96       	adiw	r26, 0x01	; 1
    fdac:	4c 93       	st	X, r20
    fdae:	11 97       	sbiw	r26, 0x01	; 1
    fdb0:	12 96       	adiw	r26, 0x02	; 2
    fdb2:	3c 93       	st	X, r19
    fdb4:	06 c0       	rjmp	.+12     	; 0xfdc2 <dtoa_prf+0xd8>
    fdb6:	3e e6       	ldi	r19, 0x6E	; 110
    fdb8:	f6 01       	movw	r30, r12
    fdba:	30 83       	st	Z, r19
    fdbc:	41 e6       	ldi	r20, 0x61	; 97
    fdbe:	41 83       	std	Z+1, r20	; 0x01
    fdc0:	32 83       	std	Z+2, r19	; 0x02
    fdc2:	fc 01       	movw	r30, r24
    fdc4:	32 2f       	mov	r19, r18
    fdc6:	40 e2       	ldi	r20, 0x20	; 32
    fdc8:	33 23       	and	r19, r19
    fdca:	09 f4       	brne	.+2      	; 0xfdce <dtoa_prf+0xe4>
    fdcc:	42 c0       	rjmp	.+132    	; 0xfe52 <dtoa_prf+0x168>
    fdce:	41 93       	st	Z+, r20
    fdd0:	31 50       	subi	r19, 0x01	; 1
    fdd2:	fa cf       	rjmp	.-12     	; 0xfdc8 <dtoa_prf+0xde>
    fdd4:	42 ff       	sbrs	r20, 2
    fdd6:	44 c0       	rjmp	.+136    	; 0xfe60 <dtoa_prf+0x176>
    fdd8:	91 11       	cpse	r25, r1
    fdda:	02 c0       	rjmp	.+4      	; 0xfde0 <dtoa_prf+0xf6>
    fddc:	83 e0       	ldi	r24, 0x03	; 3
    fdde:	01 c0       	rjmp	.+2      	; 0xfde2 <dtoa_prf+0xf8>
    fde0:	84 e0       	ldi	r24, 0x04	; 4
    fde2:	81 17       	cp	r24, r17
    fde4:	18 f4       	brcc	.+6      	; 0xfdec <dtoa_prf+0x102>
    fde6:	21 2f       	mov	r18, r17
    fde8:	28 1b       	sub	r18, r24
    fdea:	01 c0       	rjmp	.+2      	; 0xfdee <dtoa_prf+0x104>
    fdec:	20 e0       	ldi	r18, 0x00	; 0
    fdee:	51 11       	cpse	r21, r1
    fdf0:	0b c0       	rjmp	.+22     	; 0xfe08 <dtoa_prf+0x11e>
    fdf2:	f6 01       	movw	r30, r12
    fdf4:	82 2f       	mov	r24, r18
    fdf6:	30 e2       	ldi	r19, 0x20	; 32
    fdf8:	88 23       	and	r24, r24
    fdfa:	19 f0       	breq	.+6      	; 0xfe02 <dtoa_prf+0x118>
    fdfc:	31 93       	st	Z+, r19
    fdfe:	81 50       	subi	r24, 0x01	; 1
    fe00:	fb cf       	rjmp	.-10     	; 0xfdf8 <dtoa_prf+0x10e>
    fe02:	c2 0e       	add	r12, r18
    fe04:	d1 1c       	adc	r13, r1
    fe06:	20 e0       	ldi	r18, 0x00	; 0
    fe08:	99 23       	and	r25, r25
    fe0a:	29 f0       	breq	.+10     	; 0xfe16 <dtoa_prf+0x12c>
    fe0c:	d6 01       	movw	r26, r12
    fe0e:	9c 93       	st	X, r25
    fe10:	f6 01       	movw	r30, r12
    fe12:	31 96       	adiw	r30, 0x01	; 1
    fe14:	6f 01       	movw	r12, r30
    fe16:	c6 01       	movw	r24, r12
    fe18:	03 96       	adiw	r24, 0x03	; 3
    fe1a:	e2 fe       	sbrs	r14, 2
    fe1c:	0b c0       	rjmp	.+22     	; 0xfe34 <dtoa_prf+0x14a>
    fe1e:	39 e4       	ldi	r19, 0x49	; 73
    fe20:	d6 01       	movw	r26, r12
    fe22:	3c 93       	st	X, r19
    fe24:	3e e4       	ldi	r19, 0x4E	; 78
    fe26:	11 96       	adiw	r26, 0x01	; 1
    fe28:	3c 93       	st	X, r19
    fe2a:	11 97       	sbiw	r26, 0x01	; 1
    fe2c:	36 e4       	ldi	r19, 0x46	; 70
    fe2e:	12 96       	adiw	r26, 0x02	; 2
    fe30:	3c 93       	st	X, r19
    fe32:	07 c0       	rjmp	.+14     	; 0xfe42 <dtoa_prf+0x158>
    fe34:	39 e6       	ldi	r19, 0x69	; 105
    fe36:	f6 01       	movw	r30, r12
    fe38:	30 83       	st	Z, r19
    fe3a:	3e e6       	ldi	r19, 0x6E	; 110
    fe3c:	31 83       	std	Z+1, r19	; 0x01
    fe3e:	36 e6       	ldi	r19, 0x66	; 102
    fe40:	32 83       	std	Z+2, r19	; 0x02
    fe42:	fc 01       	movw	r30, r24
    fe44:	32 2f       	mov	r19, r18
    fe46:	40 e2       	ldi	r20, 0x20	; 32
    fe48:	33 23       	and	r19, r19
    fe4a:	19 f0       	breq	.+6      	; 0xfe52 <dtoa_prf+0x168>
    fe4c:	41 93       	st	Z+, r20
    fe4e:	31 50       	subi	r19, 0x01	; 1
    fe50:	fb cf       	rjmp	.-10     	; 0xfe48 <dtoa_prf+0x15e>
    fe52:	fc 01       	movw	r30, r24
    fe54:	e2 0f       	add	r30, r18
    fe56:	f1 1d       	adc	r31, r1
    fe58:	10 82       	st	Z, r1
    fe5a:	8e ef       	ldi	r24, 0xFE	; 254
    fe5c:	9f ef       	ldi	r25, 0xFF	; 255
    fe5e:	a6 c0       	rjmp	.+332    	; 0xffac <dtoa_prf+0x2c2>
    fe60:	21 e0       	ldi	r18, 0x01	; 1
    fe62:	30 e0       	ldi	r19, 0x00	; 0
    fe64:	91 11       	cpse	r25, r1
    fe66:	02 c0       	rjmp	.+4      	; 0xfe6c <dtoa_prf+0x182>
    fe68:	20 e0       	ldi	r18, 0x00	; 0
    fe6a:	30 e0       	ldi	r19, 0x00	; 0
    fe6c:	16 16       	cp	r1, r22
    fe6e:	17 06       	cpc	r1, r23
    fe70:	1c f4       	brge	.+6      	; 0xfe78 <dtoa_prf+0x18e>
    fe72:	fb 01       	movw	r30, r22
    fe74:	31 96       	adiw	r30, 0x01	; 1
    fe76:	02 c0       	rjmp	.+4      	; 0xfe7c <dtoa_prf+0x192>
    fe78:	e1 e0       	ldi	r30, 0x01	; 1
    fe7a:	f0 e0       	ldi	r31, 0x00	; 0
    fe7c:	2e 0f       	add	r18, r30
    fe7e:	3f 1f       	adc	r19, r31
    fe80:	bb 20       	and	r11, r11
    fe82:	21 f0       	breq	.+8      	; 0xfe8c <dtoa_prf+0x1a2>
    fe84:	eb 2d       	mov	r30, r11
    fe86:	f0 e0       	ldi	r31, 0x00	; 0
    fe88:	31 96       	adiw	r30, 0x01	; 1
    fe8a:	02 c0       	rjmp	.+4      	; 0xfe90 <dtoa_prf+0x1a6>
    fe8c:	e0 e0       	ldi	r30, 0x00	; 0
    fe8e:	f0 e0       	ldi	r31, 0x00	; 0
    fe90:	2e 0f       	add	r18, r30
    fe92:	3f 1f       	adc	r19, r31
    fe94:	e1 2f       	mov	r30, r17
    fe96:	f0 e0       	ldi	r31, 0x00	; 0
    fe98:	2e 17       	cp	r18, r30
    fe9a:	3f 07       	cpc	r19, r31
    fe9c:	1c f4       	brge	.+6      	; 0xfea4 <dtoa_prf+0x1ba>
    fe9e:	12 1b       	sub	r17, r18
    fea0:	21 2f       	mov	r18, r17
    fea2:	01 c0       	rjmp	.+2      	; 0xfea6 <dtoa_prf+0x1bc>
    fea4:	20 e0       	ldi	r18, 0x00	; 0
    fea6:	8e 2d       	mov	r24, r14
    fea8:	88 71       	andi	r24, 0x18	; 24
    feaa:	59 f4       	brne	.+22     	; 0xfec2 <dtoa_prf+0x1d8>
    feac:	f6 01       	movw	r30, r12
    feae:	82 2f       	mov	r24, r18
    feb0:	30 e2       	ldi	r19, 0x20	; 32
    feb2:	88 23       	and	r24, r24
    feb4:	19 f0       	breq	.+6      	; 0xfebc <dtoa_prf+0x1d2>
    feb6:	31 93       	st	Z+, r19
    feb8:	81 50       	subi	r24, 0x01	; 1
    feba:	fb cf       	rjmp	.-10     	; 0xfeb2 <dtoa_prf+0x1c8>
    febc:	c2 0e       	add	r12, r18
    febe:	d1 1c       	adc	r13, r1
    fec0:	20 e0       	ldi	r18, 0x00	; 0
    fec2:	99 23       	and	r25, r25
    fec4:	29 f0       	breq	.+10     	; 0xfed0 <dtoa_prf+0x1e6>
    fec6:	d6 01       	movw	r26, r12
    fec8:	9c 93       	st	X, r25
    feca:	f6 01       	movw	r30, r12
    fecc:	31 96       	adiw	r30, 0x01	; 1
    fece:	6f 01       	movw	r12, r30
    fed0:	51 11       	cpse	r21, r1
    fed2:	0b c0       	rjmp	.+22     	; 0xfeea <dtoa_prf+0x200>
    fed4:	f6 01       	movw	r30, r12
    fed6:	82 2f       	mov	r24, r18
    fed8:	90 e3       	ldi	r25, 0x30	; 48
    feda:	88 23       	and	r24, r24
    fedc:	19 f0       	breq	.+6      	; 0xfee4 <dtoa_prf+0x1fa>
    fede:	91 93       	st	Z+, r25
    fee0:	81 50       	subi	r24, 0x01	; 1
    fee2:	fb cf       	rjmp	.-10     	; 0xfeda <dtoa_prf+0x1f0>
    fee4:	c2 0e       	add	r12, r18
    fee6:	d1 1c       	adc	r13, r1
    fee8:	20 e0       	ldi	r18, 0x00	; 0
    feea:	0f 2d       	mov	r16, r15
    feec:	06 0f       	add	r16, r22
    feee:	9a 81       	ldd	r25, Y+2	; 0x02
    fef0:	34 2f       	mov	r19, r20
    fef2:	30 71       	andi	r19, 0x10	; 16
    fef4:	44 ff       	sbrs	r20, 4
    fef6:	03 c0       	rjmp	.+6      	; 0xfefe <dtoa_prf+0x214>
    fef8:	91 33       	cpi	r25, 0x31	; 49
    fefa:	09 f4       	brne	.+2      	; 0xfefe <dtoa_prf+0x214>
    fefc:	01 50       	subi	r16, 0x01	; 1
    fefe:	10 16       	cp	r1, r16
    ff00:	24 f4       	brge	.+8      	; 0xff0a <dtoa_prf+0x220>
    ff02:	09 30       	cpi	r16, 0x09	; 9
    ff04:	18 f0       	brcs	.+6      	; 0xff0c <dtoa_prf+0x222>
    ff06:	08 e0       	ldi	r16, 0x08	; 8
    ff08:	01 c0       	rjmp	.+2      	; 0xff0c <dtoa_prf+0x222>
    ff0a:	01 e0       	ldi	r16, 0x01	; 1
    ff0c:	ab 01       	movw	r20, r22
    ff0e:	77 ff       	sbrs	r23, 7
    ff10:	02 c0       	rjmp	.+4      	; 0xff16 <dtoa_prf+0x22c>
    ff12:	40 e0       	ldi	r20, 0x00	; 0
    ff14:	50 e0       	ldi	r21, 0x00	; 0
    ff16:	fb 01       	movw	r30, r22
    ff18:	e4 1b       	sub	r30, r20
    ff1a:	f5 0b       	sbc	r31, r21
    ff1c:	a1 e0       	ldi	r26, 0x01	; 1
    ff1e:	b0 e0       	ldi	r27, 0x00	; 0
    ff20:	ac 0f       	add	r26, r28
    ff22:	bd 1f       	adc	r27, r29
    ff24:	ea 0f       	add	r30, r26
    ff26:	fb 1f       	adc	r31, r27
    ff28:	8e e2       	ldi	r24, 0x2E	; 46
    ff2a:	a8 2e       	mov	r10, r24
    ff2c:	4b 01       	movw	r8, r22
    ff2e:	80 1a       	sub	r8, r16
    ff30:	91 08       	sbc	r9, r1
    ff32:	0b 2d       	mov	r16, r11
    ff34:	10 e0       	ldi	r17, 0x00	; 0
    ff36:	11 95       	neg	r17
    ff38:	01 95       	neg	r16
    ff3a:	11 09       	sbc	r17, r1
    ff3c:	4f 3f       	cpi	r20, 0xFF	; 255
    ff3e:	bf ef       	ldi	r27, 0xFF	; 255
    ff40:	5b 07       	cpc	r21, r27
    ff42:	21 f4       	brne	.+8      	; 0xff4c <dtoa_prf+0x262>
    ff44:	d6 01       	movw	r26, r12
    ff46:	ac 92       	st	X, r10
    ff48:	11 96       	adiw	r26, 0x01	; 1
    ff4a:	6d 01       	movw	r12, r26
    ff4c:	64 17       	cp	r22, r20
    ff4e:	75 07       	cpc	r23, r21
    ff50:	2c f0       	brlt	.+10     	; 0xff5c <dtoa_prf+0x272>
    ff52:	84 16       	cp	r8, r20
    ff54:	95 06       	cpc	r9, r21
    ff56:	14 f4       	brge	.+4      	; 0xff5c <dtoa_prf+0x272>
    ff58:	81 81       	ldd	r24, Z+1	; 0x01
    ff5a:	01 c0       	rjmp	.+2      	; 0xff5e <dtoa_prf+0x274>
    ff5c:	80 e3       	ldi	r24, 0x30	; 48
    ff5e:	41 50       	subi	r20, 0x01	; 1
    ff60:	51 09       	sbc	r21, r1
    ff62:	31 96       	adiw	r30, 0x01	; 1
    ff64:	d6 01       	movw	r26, r12
    ff66:	11 96       	adiw	r26, 0x01	; 1
    ff68:	7d 01       	movw	r14, r26
    ff6a:	40 17       	cp	r20, r16
    ff6c:	51 07       	cpc	r21, r17
    ff6e:	24 f0       	brlt	.+8      	; 0xff78 <dtoa_prf+0x28e>
    ff70:	d6 01       	movw	r26, r12
    ff72:	8c 93       	st	X, r24
    ff74:	67 01       	movw	r12, r14
    ff76:	e2 cf       	rjmp	.-60     	; 0xff3c <dtoa_prf+0x252>
    ff78:	64 17       	cp	r22, r20
    ff7a:	75 07       	cpc	r23, r21
    ff7c:	39 f4       	brne	.+14     	; 0xff8c <dtoa_prf+0x2a2>
    ff7e:	96 33       	cpi	r25, 0x36	; 54
    ff80:	20 f4       	brcc	.+8      	; 0xff8a <dtoa_prf+0x2a0>
    ff82:	95 33       	cpi	r25, 0x35	; 53
    ff84:	19 f4       	brne	.+6      	; 0xff8c <dtoa_prf+0x2a2>
    ff86:	31 11       	cpse	r19, r1
    ff88:	01 c0       	rjmp	.+2      	; 0xff8c <dtoa_prf+0x2a2>
    ff8a:	81 e3       	ldi	r24, 0x31	; 49
    ff8c:	f6 01       	movw	r30, r12
    ff8e:	80 83       	st	Z, r24
    ff90:	f7 01       	movw	r30, r14
    ff92:	82 2f       	mov	r24, r18
    ff94:	90 e2       	ldi	r25, 0x20	; 32
    ff96:	88 23       	and	r24, r24
    ff98:	19 f0       	breq	.+6      	; 0xffa0 <dtoa_prf+0x2b6>
    ff9a:	91 93       	st	Z+, r25
    ff9c:	81 50       	subi	r24, 0x01	; 1
    ff9e:	fb cf       	rjmp	.-10     	; 0xff96 <dtoa_prf+0x2ac>
    ffa0:	f7 01       	movw	r30, r14
    ffa2:	e2 0f       	add	r30, r18
    ffa4:	f1 1d       	adc	r31, r1
    ffa6:	10 82       	st	Z, r1
    ffa8:	80 e0       	ldi	r24, 0x00	; 0
    ffaa:	90 e0       	ldi	r25, 0x00	; 0
    ffac:	29 96       	adiw	r28, 0x09	; 9
    ffae:	cd bf       	out	0x3d, r28	; 61
    ffb0:	de bf       	out	0x3e, r29	; 62
    ffb2:	df 91       	pop	r29
    ffb4:	cf 91       	pop	r28
    ffb6:	1f 91       	pop	r17
    ffb8:	0f 91       	pop	r16
    ffba:	ff 90       	pop	r15
    ffbc:	ef 90       	pop	r14
    ffbe:	df 90       	pop	r13
    ffc0:	cf 90       	pop	r12
    ffc2:	bf 90       	pop	r11
    ffc4:	af 90       	pop	r10
    ffc6:	9f 90       	pop	r9
    ffc8:	8f 90       	pop	r8
    ffca:	08 95       	ret

0000ffcc <strtod>:
    ffcc:	8f 92       	push	r8
    ffce:	9f 92       	push	r9
    ffd0:	af 92       	push	r10
    ffd2:	bf 92       	push	r11
    ffd4:	cf 92       	push	r12
    ffd6:	df 92       	push	r13
    ffd8:	ef 92       	push	r14
    ffda:	ff 92       	push	r15
    ffdc:	0f 93       	push	r16
    ffde:	1f 93       	push	r17
    ffe0:	cf 93       	push	r28
    ffe2:	df 93       	push	r29
    ffe4:	ec 01       	movw	r28, r24
    ffe6:	6b 01       	movw	r12, r22
    ffe8:	61 15       	cp	r22, r1
    ffea:	71 05       	cpc	r23, r1
    ffec:	19 f0       	breq	.+6      	; 0xfff4 <strtod+0x28>
    ffee:	fb 01       	movw	r30, r22
    fff0:	80 83       	st	Z, r24
    fff2:	91 83       	std	Z+1, r25	; 0x01
    fff4:	7e 01       	movw	r14, r28
    fff6:	ff ef       	ldi	r31, 0xFF	; 255
    fff8:	ef 1a       	sub	r14, r31
    fffa:	ff 0a       	sbc	r15, r31
    fffc:	08 81       	ld	r16, Y
    fffe:	80 2f       	mov	r24, r16
   10000:	90 e0       	ldi	r25, 0x00	; 0
   10002:	0e 94 1a 82 	call	0x10434	; 0x10434 <isspace>
   10006:	89 2b       	or	r24, r25
   10008:	11 f0       	breq	.+4      	; 0x1000e <strtod+0x42>
   1000a:	e7 01       	movw	r28, r14
   1000c:	f3 cf       	rjmp	.-26     	; 0xfff4 <strtod+0x28>
   1000e:	0d 32       	cpi	r16, 0x2D	; 45
   10010:	39 f4       	brne	.+14     	; 0x10020 <strtod+0x54>
   10012:	7e 01       	movw	r14, r28
   10014:	82 e0       	ldi	r24, 0x02	; 2
   10016:	e8 0e       	add	r14, r24
   10018:	f1 1c       	adc	r15, r1
   1001a:	09 81       	ldd	r16, Y+1	; 0x01
   1001c:	11 e0       	ldi	r17, 0x01	; 1
   1001e:	08 c0       	rjmp	.+16     	; 0x10030 <strtod+0x64>
   10020:	0b 32       	cpi	r16, 0x2B	; 43
   10022:	29 f4       	brne	.+10     	; 0x1002e <strtod+0x62>
   10024:	7e 01       	movw	r14, r28
   10026:	92 e0       	ldi	r25, 0x02	; 2
   10028:	e9 0e       	add	r14, r25
   1002a:	f1 1c       	adc	r15, r1
   1002c:	09 81       	ldd	r16, Y+1	; 0x01
   1002e:	10 e0       	ldi	r17, 0x00	; 0
   10030:	e7 01       	movw	r28, r14
   10032:	21 97       	sbiw	r28, 0x01	; 1
   10034:	43 e0       	ldi	r20, 0x03	; 3
   10036:	50 e0       	ldi	r21, 0x00	; 0
   10038:	6e ea       	ldi	r22, 0xAE	; 174
   1003a:	72 e0       	ldi	r23, 0x02	; 2
   1003c:	ce 01       	movw	r24, r28
   1003e:	0e 94 23 82 	call	0x10446	; 0x10446 <strncasecmp_P>
   10042:	89 2b       	or	r24, r25
   10044:	c1 f4       	brne	.+48     	; 0x10076 <strtod+0xaa>
   10046:	23 96       	adiw	r28, 0x03	; 3
   10048:	45 e0       	ldi	r20, 0x05	; 5
   1004a:	50 e0       	ldi	r21, 0x00	; 0
   1004c:	69 ea       	ldi	r22, 0xA9	; 169
   1004e:	72 e0       	ldi	r23, 0x02	; 2
   10050:	ce 01       	movw	r24, r28
   10052:	0e 94 23 82 	call	0x10446	; 0x10446 <strncasecmp_P>
   10056:	89 2b       	or	r24, r25
   10058:	09 f4       	brne	.+2      	; 0x1005c <strtod+0x90>
   1005a:	25 96       	adiw	r28, 0x05	; 5
   1005c:	c1 14       	cp	r12, r1
   1005e:	d1 04       	cpc	r13, r1
   10060:	19 f0       	breq	.+6      	; 0x10068 <strtod+0x9c>
   10062:	f6 01       	movw	r30, r12
   10064:	c0 83       	st	Z, r28
   10066:	d1 83       	std	Z+1, r29	; 0x01
   10068:	11 11       	cpse	r17, r1
   1006a:	f6 c0       	rjmp	.+492    	; 0x10258 <strtod+0x28c>
   1006c:	60 e0       	ldi	r22, 0x00	; 0
   1006e:	70 e0       	ldi	r23, 0x00	; 0
   10070:	80 e8       	ldi	r24, 0x80	; 128
   10072:	9f e7       	ldi	r25, 0x7F	; 127
   10074:	fa c0       	rjmp	.+500    	; 0x1026a <strtod+0x29e>
   10076:	43 e0       	ldi	r20, 0x03	; 3
   10078:	50 e0       	ldi	r21, 0x00	; 0
   1007a:	66 ea       	ldi	r22, 0xA6	; 166
   1007c:	72 e0       	ldi	r23, 0x02	; 2
   1007e:	ce 01       	movw	r24, r28
   10080:	0e 94 23 82 	call	0x10446	; 0x10446 <strncasecmp_P>
   10084:	89 2b       	or	r24, r25
   10086:	59 f4       	brne	.+22     	; 0x1009e <strtod+0xd2>
   10088:	c1 14       	cp	r12, r1
   1008a:	d1 04       	cpc	r13, r1
   1008c:	09 f4       	brne	.+2      	; 0x10090 <strtod+0xc4>
   1008e:	e9 c0       	rjmp	.+466    	; 0x10262 <strtod+0x296>
   10090:	f2 e0       	ldi	r31, 0x02	; 2
   10092:	ef 0e       	add	r14, r31
   10094:	f1 1c       	adc	r15, r1
   10096:	f6 01       	movw	r30, r12
   10098:	e0 82       	st	Z, r14
   1009a:	f1 82       	std	Z+1, r15	; 0x01
   1009c:	e2 c0       	rjmp	.+452    	; 0x10262 <strtod+0x296>
   1009e:	20 e0       	ldi	r18, 0x00	; 0
   100a0:	30 e0       	ldi	r19, 0x00	; 0
   100a2:	a9 01       	movw	r20, r18
   100a4:	c0 e0       	ldi	r28, 0x00	; 0
   100a6:	d0 e0       	ldi	r29, 0x00	; 0
   100a8:	f7 01       	movw	r30, r14
   100aa:	60 ed       	ldi	r22, 0xD0	; 208
   100ac:	a6 2e       	mov	r10, r22
   100ae:	a0 0e       	add	r10, r16
   100b0:	89 e0       	ldi	r24, 0x09	; 9
   100b2:	8a 15       	cp	r24, r10
   100b4:	30 f1       	brcs	.+76     	; 0x10102 <strtod+0x136>
   100b6:	91 2f       	mov	r25, r17
   100b8:	92 60       	ori	r25, 0x02	; 2
   100ba:	b9 2e       	mov	r11, r25
   100bc:	81 2f       	mov	r24, r17
   100be:	88 70       	andi	r24, 0x08	; 8
   100c0:	12 ff       	sbrs	r17, 2
   100c2:	04 c0       	rjmp	.+8      	; 0x100cc <strtod+0x100>
   100c4:	81 11       	cpse	r24, r1
   100c6:	24 c0       	rjmp	.+72     	; 0x10110 <strtod+0x144>
   100c8:	21 96       	adiw	r28, 0x01	; 1
   100ca:	22 c0       	rjmp	.+68     	; 0x10110 <strtod+0x144>
   100cc:	81 11       	cpse	r24, r1
   100ce:	21 97       	sbiw	r28, 0x01	; 1
   100d0:	a5 e0       	ldi	r26, 0x05	; 5
   100d2:	b0 e0       	ldi	r27, 0x00	; 0
   100d4:	0e 94 49 7a 	call	0xf492	; 0xf492 <__muluhisi3>
   100d8:	dc 01       	movw	r26, r24
   100da:	cb 01       	movw	r24, r22
   100dc:	88 0f       	add	r24, r24
   100de:	99 1f       	adc	r25, r25
   100e0:	aa 1f       	adc	r26, r26
   100e2:	bb 1f       	adc	r27, r27
   100e4:	9c 01       	movw	r18, r24
   100e6:	ad 01       	movw	r20, r26
   100e8:	2a 0d       	add	r18, r10
   100ea:	31 1d       	adc	r19, r1
   100ec:	41 1d       	adc	r20, r1
   100ee:	51 1d       	adc	r21, r1
   100f0:	28 39       	cpi	r18, 0x98	; 152
   100f2:	89 e9       	ldi	r24, 0x99	; 153
   100f4:	38 07       	cpc	r19, r24
   100f6:	48 07       	cpc	r20, r24
   100f8:	89 e1       	ldi	r24, 0x19	; 25
   100fa:	58 07       	cpc	r21, r24
   100fc:	48 f0       	brcs	.+18     	; 0x10110 <strtod+0x144>
   100fe:	16 60       	ori	r17, 0x06	; 6
   10100:	06 c0       	rjmp	.+12     	; 0x1010e <strtod+0x142>
   10102:	9e ef       	ldi	r25, 0xFE	; 254
   10104:	a9 12       	cpse	r10, r25
   10106:	0a c0       	rjmp	.+20     	; 0x1011c <strtod+0x150>
   10108:	13 fd       	sbrc	r17, 3
   1010a:	40 c0       	rjmp	.+128    	; 0x1018c <strtod+0x1c0>
   1010c:	18 60       	ori	r17, 0x08	; 8
   1010e:	b1 2e       	mov	r11, r17
   10110:	8f ef       	ldi	r24, 0xFF	; 255
   10112:	e8 1a       	sub	r14, r24
   10114:	f8 0a       	sbc	r15, r24
   10116:	00 81       	ld	r16, Z
   10118:	1b 2d       	mov	r17, r11
   1011a:	c6 cf       	rjmp	.-116    	; 0x100a8 <strtod+0xdc>
   1011c:	80 2f       	mov	r24, r16
   1011e:	8f 7d       	andi	r24, 0xDF	; 223
   10120:	85 34       	cpi	r24, 0x45	; 69
   10122:	a1 f5       	brne	.+104    	; 0x1018c <strtod+0x1c0>
   10124:	80 81       	ld	r24, Z
   10126:	8d 32       	cpi	r24, 0x2D	; 45
   10128:	11 f4       	brne	.+4      	; 0x1012e <strtod+0x162>
   1012a:	10 61       	ori	r17, 0x10	; 16
   1012c:	06 c0       	rjmp	.+12     	; 0x1013a <strtod+0x16e>
   1012e:	8b 32       	cpi	r24, 0x2B	; 43
   10130:	21 f0       	breq	.+8      	; 0x1013a <strtod+0x16e>
   10132:	31 96       	adiw	r30, 0x01	; 1
   10134:	61 e0       	ldi	r22, 0x01	; 1
   10136:	70 e0       	ldi	r23, 0x00	; 0
   10138:	04 c0       	rjmp	.+8      	; 0x10142 <strtod+0x176>
   1013a:	81 81       	ldd	r24, Z+1	; 0x01
   1013c:	32 96       	adiw	r30, 0x02	; 2
   1013e:	62 e0       	ldi	r22, 0x02	; 2
   10140:	70 e0       	ldi	r23, 0x00	; 0
   10142:	80 53       	subi	r24, 0x30	; 48
   10144:	8a 30       	cpi	r24, 0x0A	; 10
   10146:	18 f0       	brcs	.+6      	; 0x1014e <strtod+0x182>
   10148:	e6 1b       	sub	r30, r22
   1014a:	f7 0b       	sbc	r31, r23
   1014c:	1f c0       	rjmp	.+62     	; 0x1018c <strtod+0x1c0>
   1014e:	60 e0       	ldi	r22, 0x00	; 0
   10150:	70 e0       	ldi	r23, 0x00	; 0
   10152:	60 38       	cpi	r22, 0x80	; 128
   10154:	9c e0       	ldi	r25, 0x0C	; 12
   10156:	79 07       	cpc	r23, r25
   10158:	5c f4       	brge	.+22     	; 0x10170 <strtod+0x1a4>
   1015a:	db 01       	movw	r26, r22
   1015c:	aa 0f       	add	r26, r26
   1015e:	bb 1f       	adc	r27, r27
   10160:	aa 0f       	add	r26, r26
   10162:	bb 1f       	adc	r27, r27
   10164:	6a 0f       	add	r22, r26
   10166:	7b 1f       	adc	r23, r27
   10168:	66 0f       	add	r22, r22
   1016a:	77 1f       	adc	r23, r23
   1016c:	68 0f       	add	r22, r24
   1016e:	71 1d       	adc	r23, r1
   10170:	31 96       	adiw	r30, 0x01	; 1
   10172:	df 01       	movw	r26, r30
   10174:	11 97       	sbiw	r26, 0x01	; 1
   10176:	8c 91       	ld	r24, X
   10178:	80 53       	subi	r24, 0x30	; 48
   1017a:	8a 30       	cpi	r24, 0x0A	; 10
   1017c:	50 f3       	brcs	.-44     	; 0x10152 <strtod+0x186>
   1017e:	14 ff       	sbrs	r17, 4
   10180:	03 c0       	rjmp	.+6      	; 0x10188 <strtod+0x1bc>
   10182:	71 95       	neg	r23
   10184:	61 95       	neg	r22
   10186:	71 09       	sbc	r23, r1
   10188:	c6 0f       	add	r28, r22
   1018a:	d7 1f       	adc	r29, r23
   1018c:	11 ff       	sbrs	r17, 1
   1018e:	08 c0       	rjmp	.+16     	; 0x101a0 <strtod+0x1d4>
   10190:	c1 14       	cp	r12, r1
   10192:	d1 04       	cpc	r13, r1
   10194:	29 f0       	breq	.+10     	; 0x101a0 <strtod+0x1d4>
   10196:	cf 01       	movw	r24, r30
   10198:	01 97       	sbiw	r24, 0x01	; 1
   1019a:	f6 01       	movw	r30, r12
   1019c:	80 83       	st	Z, r24
   1019e:	91 83       	std	Z+1, r25	; 0x01
   101a0:	ca 01       	movw	r24, r20
   101a2:	b9 01       	movw	r22, r18
   101a4:	0e 94 53 78 	call	0xf0a6	; 0xf0a6 <__floatunsisf>
   101a8:	21 2f       	mov	r18, r17
   101aa:	23 70       	andi	r18, 0x03	; 3
   101ac:	23 30       	cpi	r18, 0x03	; 3
   101ae:	19 f0       	breq	.+6      	; 0x101b6 <strtod+0x1ea>
   101b0:	4b 01       	movw	r8, r22
   101b2:	5c 01       	movw	r10, r24
   101b4:	06 c0       	rjmp	.+12     	; 0x101c2 <strtod+0x1f6>
   101b6:	4b 01       	movw	r8, r22
   101b8:	5c 01       	movw	r10, r24
   101ba:	b7 fa       	bst	r11, 7
   101bc:	b0 94       	com	r11
   101be:	b7 f8       	bld	r11, 7
   101c0:	b0 94       	com	r11
   101c2:	20 e0       	ldi	r18, 0x00	; 0
   101c4:	30 e0       	ldi	r19, 0x00	; 0
   101c6:	a9 01       	movw	r20, r18
   101c8:	c5 01       	movw	r24, r10
   101ca:	b4 01       	movw	r22, r8
   101cc:	0e 94 a6 77 	call	0xef4c	; 0xef4c <__cmpsf2>
   101d0:	88 23       	and	r24, r24
   101d2:	09 f4       	brne	.+2      	; 0x101d6 <strtod+0x20a>
   101d4:	3e c0       	rjmp	.+124    	; 0x10252 <strtod+0x286>
   101d6:	d7 ff       	sbrs	r29, 7
   101d8:	06 c0       	rjmp	.+12     	; 0x101e6 <strtod+0x21a>
   101da:	d1 95       	neg	r29
   101dc:	c1 95       	neg	r28
   101de:	d1 09       	sbc	r29, r1
   101e0:	05 ec       	ldi	r16, 0xC5	; 197
   101e2:	12 e0       	ldi	r17, 0x02	; 2
   101e4:	02 c0       	rjmp	.+4      	; 0x101ea <strtod+0x21e>
   101e6:	0d ed       	ldi	r16, 0xDD	; 221
   101e8:	12 e0       	ldi	r17, 0x02	; 2
   101ea:	68 01       	movw	r12, r16
   101ec:	f8 e1       	ldi	r31, 0x18	; 24
   101ee:	cf 1a       	sub	r12, r31
   101f0:	d1 08       	sbc	r13, r1
   101f2:	90 e2       	ldi	r25, 0x20	; 32
   101f4:	e9 2e       	mov	r14, r25
   101f6:	f1 2c       	mov	r15, r1
   101f8:	ce 15       	cp	r28, r14
   101fa:	df 05       	cpc	r29, r15
   101fc:	74 f0       	brlt	.+28     	; 0x1021a <strtod+0x24e>
   101fe:	f8 01       	movw	r30, r16
   10200:	25 91       	lpm	r18, Z+
   10202:	35 91       	lpm	r19, Z+
   10204:	45 91       	lpm	r20, Z+
   10206:	54 91       	lpm	r21, Z
   10208:	c5 01       	movw	r24, r10
   1020a:	b4 01       	movw	r22, r8
   1020c:	0e 94 4b 79 	call	0xf296	; 0xf296 <__mulsf3>
   10210:	4b 01       	movw	r8, r22
   10212:	5c 01       	movw	r10, r24
   10214:	ce 19       	sub	r28, r14
   10216:	df 09       	sbc	r29, r15
   10218:	ef cf       	rjmp	.-34     	; 0x101f8 <strtod+0x22c>
   1021a:	04 50       	subi	r16, 0x04	; 4
   1021c:	11 09       	sbc	r17, r1
   1021e:	f5 94       	asr	r15
   10220:	e7 94       	ror	r14
   10222:	0c 15       	cp	r16, r12
   10224:	1d 05       	cpc	r17, r13
   10226:	41 f7       	brne	.-48     	; 0x101f8 <strtod+0x22c>
   10228:	8a 2d       	mov	r24, r10
   1022a:	88 0f       	add	r24, r24
   1022c:	8b 2d       	mov	r24, r11
   1022e:	88 1f       	adc	r24, r24
   10230:	8f 3f       	cpi	r24, 0xFF	; 255
   10232:	49 f0       	breq	.+18     	; 0x10246 <strtod+0x27a>
   10234:	20 e0       	ldi	r18, 0x00	; 0
   10236:	30 e0       	ldi	r19, 0x00	; 0
   10238:	a9 01       	movw	r20, r18
   1023a:	c5 01       	movw	r24, r10
   1023c:	b4 01       	movw	r22, r8
   1023e:	0e 94 a6 77 	call	0xef4c	; 0xef4c <__cmpsf2>
   10242:	81 11       	cpse	r24, r1
   10244:	06 c0       	rjmp	.+12     	; 0x10252 <strtod+0x286>
   10246:	82 e2       	ldi	r24, 0x22	; 34
   10248:	90 e0       	ldi	r25, 0x00	; 0
   1024a:	80 93 ec 4a 	sts	0x4AEC, r24	; 0x804aec <errno>
   1024e:	90 93 ed 4a 	sts	0x4AED, r25	; 0x804aed <errno+0x1>
   10252:	c5 01       	movw	r24, r10
   10254:	b4 01       	movw	r22, r8
   10256:	09 c0       	rjmp	.+18     	; 0x1026a <strtod+0x29e>
   10258:	60 e0       	ldi	r22, 0x00	; 0
   1025a:	70 e0       	ldi	r23, 0x00	; 0
   1025c:	80 e8       	ldi	r24, 0x80	; 128
   1025e:	9f ef       	ldi	r25, 0xFF	; 255
   10260:	04 c0       	rjmp	.+8      	; 0x1026a <strtod+0x29e>
   10262:	60 e0       	ldi	r22, 0x00	; 0
   10264:	70 e0       	ldi	r23, 0x00	; 0
   10266:	80 ec       	ldi	r24, 0xC0	; 192
   10268:	9f e7       	ldi	r25, 0x7F	; 127
   1026a:	df 91       	pop	r29
   1026c:	cf 91       	pop	r28
   1026e:	1f 91       	pop	r17
   10270:	0f 91       	pop	r16
   10272:	ff 90       	pop	r15
   10274:	ef 90       	pop	r14
   10276:	df 90       	pop	r13
   10278:	cf 90       	pop	r12
   1027a:	bf 90       	pop	r11
   1027c:	af 90       	pop	r10
   1027e:	9f 90       	pop	r9
   10280:	8f 90       	pop	r8
   10282:	08 95       	ret

00010284 <__ftoa_engine>:
   10284:	28 30       	cpi	r18, 0x08	; 8
   10286:	08 f0       	brcs	.+2      	; 0x1028a <__ftoa_engine+0x6>
   10288:	27 e0       	ldi	r18, 0x07	; 7
   1028a:	33 27       	eor	r19, r19
   1028c:	da 01       	movw	r26, r20
   1028e:	99 0f       	add	r25, r25
   10290:	31 1d       	adc	r19, r1
   10292:	87 fd       	sbrc	r24, 7
   10294:	91 60       	ori	r25, 0x01	; 1
   10296:	00 96       	adiw	r24, 0x00	; 0
   10298:	61 05       	cpc	r22, r1
   1029a:	71 05       	cpc	r23, r1
   1029c:	39 f4       	brne	.+14     	; 0x102ac <__ftoa_engine+0x28>
   1029e:	32 60       	ori	r19, 0x02	; 2
   102a0:	2e 5f       	subi	r18, 0xFE	; 254
   102a2:	3d 93       	st	X+, r19
   102a4:	30 e3       	ldi	r19, 0x30	; 48
   102a6:	2a 95       	dec	r18
   102a8:	e1 f7       	brne	.-8      	; 0x102a2 <__ftoa_engine+0x1e>
   102aa:	08 95       	ret
   102ac:	9f 3f       	cpi	r25, 0xFF	; 255
   102ae:	30 f0       	brcs	.+12     	; 0x102bc <__ftoa_engine+0x38>
   102b0:	80 38       	cpi	r24, 0x80	; 128
   102b2:	71 05       	cpc	r23, r1
   102b4:	61 05       	cpc	r22, r1
   102b6:	09 f0       	breq	.+2      	; 0x102ba <__ftoa_engine+0x36>
   102b8:	3c 5f       	subi	r19, 0xFC	; 252
   102ba:	3c 5f       	subi	r19, 0xFC	; 252
   102bc:	3d 93       	st	X+, r19
   102be:	91 30       	cpi	r25, 0x01	; 1
   102c0:	08 f0       	brcs	.+2      	; 0x102c4 <__ftoa_engine+0x40>
   102c2:	80 68       	ori	r24, 0x80	; 128
   102c4:	91 1d       	adc	r25, r1
   102c6:	df 93       	push	r29
   102c8:	cf 93       	push	r28
   102ca:	1f 93       	push	r17
   102cc:	0f 93       	push	r16
   102ce:	ff 92       	push	r15
   102d0:	ef 92       	push	r14
   102d2:	19 2f       	mov	r17, r25
   102d4:	98 7f       	andi	r25, 0xF8	; 248
   102d6:	96 95       	lsr	r25
   102d8:	e9 2f       	mov	r30, r25
   102da:	96 95       	lsr	r25
   102dc:	96 95       	lsr	r25
   102de:	e9 0f       	add	r30, r25
   102e0:	ff 27       	eor	r31, r31
   102e2:	e5 5c       	subi	r30, 0xC5	; 197
   102e4:	fc 4f       	sbci	r31, 0xFC	; 252
   102e6:	99 27       	eor	r25, r25
   102e8:	33 27       	eor	r19, r19
   102ea:	ee 24       	eor	r14, r14
   102ec:	ff 24       	eor	r15, r15
   102ee:	a7 01       	movw	r20, r14
   102f0:	e7 01       	movw	r28, r14
   102f2:	05 90       	lpm	r0, Z+
   102f4:	08 94       	sec
   102f6:	07 94       	ror	r0
   102f8:	28 f4       	brcc	.+10     	; 0x10304 <__ftoa_engine+0x80>
   102fa:	36 0f       	add	r19, r22
   102fc:	e7 1e       	adc	r14, r23
   102fe:	f8 1e       	adc	r15, r24
   10300:	49 1f       	adc	r20, r25
   10302:	51 1d       	adc	r21, r1
   10304:	66 0f       	add	r22, r22
   10306:	77 1f       	adc	r23, r23
   10308:	88 1f       	adc	r24, r24
   1030a:	99 1f       	adc	r25, r25
   1030c:	06 94       	lsr	r0
   1030e:	a1 f7       	brne	.-24     	; 0x102f8 <__ftoa_engine+0x74>
   10310:	05 90       	lpm	r0, Z+
   10312:	07 94       	ror	r0
   10314:	28 f4       	brcc	.+10     	; 0x10320 <__ftoa_engine+0x9c>
   10316:	e7 0e       	add	r14, r23
   10318:	f8 1e       	adc	r15, r24
   1031a:	49 1f       	adc	r20, r25
   1031c:	56 1f       	adc	r21, r22
   1031e:	c1 1d       	adc	r28, r1
   10320:	77 0f       	add	r23, r23
   10322:	88 1f       	adc	r24, r24
   10324:	99 1f       	adc	r25, r25
   10326:	66 1f       	adc	r22, r22
   10328:	06 94       	lsr	r0
   1032a:	a1 f7       	brne	.-24     	; 0x10314 <__ftoa_engine+0x90>
   1032c:	05 90       	lpm	r0, Z+
   1032e:	07 94       	ror	r0
   10330:	28 f4       	brcc	.+10     	; 0x1033c <__ftoa_engine+0xb8>
   10332:	f8 0e       	add	r15, r24
   10334:	49 1f       	adc	r20, r25
   10336:	56 1f       	adc	r21, r22
   10338:	c7 1f       	adc	r28, r23
   1033a:	d1 1d       	adc	r29, r1
   1033c:	88 0f       	add	r24, r24
   1033e:	99 1f       	adc	r25, r25
   10340:	66 1f       	adc	r22, r22
   10342:	77 1f       	adc	r23, r23
   10344:	06 94       	lsr	r0
   10346:	a1 f7       	brne	.-24     	; 0x10330 <__ftoa_engine+0xac>
   10348:	05 90       	lpm	r0, Z+
   1034a:	07 94       	ror	r0
   1034c:	20 f4       	brcc	.+8      	; 0x10356 <__ftoa_engine+0xd2>
   1034e:	49 0f       	add	r20, r25
   10350:	56 1f       	adc	r21, r22
   10352:	c7 1f       	adc	r28, r23
   10354:	d8 1f       	adc	r29, r24
   10356:	99 0f       	add	r25, r25
   10358:	66 1f       	adc	r22, r22
   1035a:	77 1f       	adc	r23, r23
   1035c:	88 1f       	adc	r24, r24
   1035e:	06 94       	lsr	r0
   10360:	a9 f7       	brne	.-22     	; 0x1034c <__ftoa_engine+0xc8>
   10362:	84 91       	lpm	r24, Z
   10364:	10 95       	com	r17
   10366:	17 70       	andi	r17, 0x07	; 7
   10368:	41 f0       	breq	.+16     	; 0x1037a <__ftoa_engine+0xf6>
   1036a:	d6 95       	lsr	r29
   1036c:	c7 95       	ror	r28
   1036e:	57 95       	ror	r21
   10370:	47 95       	ror	r20
   10372:	f7 94       	ror	r15
   10374:	e7 94       	ror	r14
   10376:	1a 95       	dec	r17
   10378:	c1 f7       	brne	.-16     	; 0x1036a <__ftoa_engine+0xe6>
   1037a:	e1 ee       	ldi	r30, 0xE1	; 225
   1037c:	f2 e0       	ldi	r31, 0x02	; 2
   1037e:	68 94       	set
   10380:	15 90       	lpm	r1, Z+
   10382:	15 91       	lpm	r17, Z+
   10384:	35 91       	lpm	r19, Z+
   10386:	65 91       	lpm	r22, Z+
   10388:	95 91       	lpm	r25, Z+
   1038a:	05 90       	lpm	r0, Z+
   1038c:	7f e2       	ldi	r23, 0x2F	; 47
   1038e:	73 95       	inc	r23
   10390:	e1 18       	sub	r14, r1
   10392:	f1 0a       	sbc	r15, r17
   10394:	43 0b       	sbc	r20, r19
   10396:	56 0b       	sbc	r21, r22
   10398:	c9 0b       	sbc	r28, r25
   1039a:	d0 09       	sbc	r29, r0
   1039c:	c0 f7       	brcc	.-16     	; 0x1038e <__ftoa_engine+0x10a>
   1039e:	e1 0c       	add	r14, r1
   103a0:	f1 1e       	adc	r15, r17
   103a2:	43 1f       	adc	r20, r19
   103a4:	56 1f       	adc	r21, r22
   103a6:	c9 1f       	adc	r28, r25
   103a8:	d0 1d       	adc	r29, r0
   103aa:	7e f4       	brtc	.+30     	; 0x103ca <__ftoa_engine+0x146>
   103ac:	70 33       	cpi	r23, 0x30	; 48
   103ae:	11 f4       	brne	.+4      	; 0x103b4 <__ftoa_engine+0x130>
   103b0:	8a 95       	dec	r24
   103b2:	e6 cf       	rjmp	.-52     	; 0x10380 <__ftoa_engine+0xfc>
   103b4:	e8 94       	clt
   103b6:	01 50       	subi	r16, 0x01	; 1
   103b8:	30 f0       	brcs	.+12     	; 0x103c6 <__ftoa_engine+0x142>
   103ba:	08 0f       	add	r16, r24
   103bc:	0a f4       	brpl	.+2      	; 0x103c0 <__ftoa_engine+0x13c>
   103be:	00 27       	eor	r16, r16
   103c0:	02 17       	cp	r16, r18
   103c2:	08 f4       	brcc	.+2      	; 0x103c6 <__ftoa_engine+0x142>
   103c4:	20 2f       	mov	r18, r16
   103c6:	23 95       	inc	r18
   103c8:	02 2f       	mov	r16, r18
   103ca:	7a 33       	cpi	r23, 0x3A	; 58
   103cc:	28 f0       	brcs	.+10     	; 0x103d8 <__ftoa_engine+0x154>
   103ce:	79 e3       	ldi	r23, 0x39	; 57
   103d0:	7d 93       	st	X+, r23
   103d2:	2a 95       	dec	r18
   103d4:	e9 f7       	brne	.-6      	; 0x103d0 <__ftoa_engine+0x14c>
   103d6:	10 c0       	rjmp	.+32     	; 0x103f8 <__ftoa_engine+0x174>
   103d8:	7d 93       	st	X+, r23
   103da:	2a 95       	dec	r18
   103dc:	89 f6       	brne	.-94     	; 0x10380 <__ftoa_engine+0xfc>
   103de:	06 94       	lsr	r0
   103e0:	97 95       	ror	r25
   103e2:	67 95       	ror	r22
   103e4:	37 95       	ror	r19
   103e6:	17 95       	ror	r17
   103e8:	17 94       	ror	r1
   103ea:	e1 18       	sub	r14, r1
   103ec:	f1 0a       	sbc	r15, r17
   103ee:	43 0b       	sbc	r20, r19
   103f0:	56 0b       	sbc	r21, r22
   103f2:	c9 0b       	sbc	r28, r25
   103f4:	d0 09       	sbc	r29, r0
   103f6:	98 f0       	brcs	.+38     	; 0x1041e <__ftoa_engine+0x19a>
   103f8:	23 95       	inc	r18
   103fa:	7e 91       	ld	r23, -X
   103fc:	73 95       	inc	r23
   103fe:	7a 33       	cpi	r23, 0x3A	; 58
   10400:	08 f0       	brcs	.+2      	; 0x10404 <__ftoa_engine+0x180>
   10402:	70 e3       	ldi	r23, 0x30	; 48
   10404:	7c 93       	st	X, r23
   10406:	20 13       	cpse	r18, r16
   10408:	b8 f7       	brcc	.-18     	; 0x103f8 <__ftoa_engine+0x174>
   1040a:	7e 91       	ld	r23, -X
   1040c:	70 61       	ori	r23, 0x10	; 16
   1040e:	7d 93       	st	X+, r23
   10410:	30 f0       	brcs	.+12     	; 0x1041e <__ftoa_engine+0x19a>
   10412:	83 95       	inc	r24
   10414:	71 e3       	ldi	r23, 0x31	; 49
   10416:	7d 93       	st	X+, r23
   10418:	70 e3       	ldi	r23, 0x30	; 48
   1041a:	2a 95       	dec	r18
   1041c:	e1 f7       	brne	.-8      	; 0x10416 <__ftoa_engine+0x192>
   1041e:	11 24       	eor	r1, r1
   10420:	ef 90       	pop	r14
   10422:	ff 90       	pop	r15
   10424:	0f 91       	pop	r16
   10426:	1f 91       	pop	r17
   10428:	cf 91       	pop	r28
   1042a:	df 91       	pop	r29
   1042c:	99 27       	eor	r25, r25
   1042e:	87 fd       	sbrc	r24, 7
   10430:	90 95       	com	r25
   10432:	08 95       	ret

00010434 <isspace>:
   10434:	91 11       	cpse	r25, r1
   10436:	0c 94 eb 82 	jmp	0x105d6	; 0x105d6 <__ctype_isfalse>
   1043a:	80 32       	cpi	r24, 0x20	; 32
   1043c:	19 f0       	breq	.+6      	; 0x10444 <isspace+0x10>
   1043e:	89 50       	subi	r24, 0x09	; 9
   10440:	85 50       	subi	r24, 0x05	; 5
   10442:	c8 f7       	brcc	.-14     	; 0x10436 <isspace+0x2>
   10444:	08 95       	ret

00010446 <strncasecmp_P>:
   10446:	fb 01       	movw	r30, r22
   10448:	dc 01       	movw	r26, r24
   1044a:	41 50       	subi	r20, 0x01	; 1
   1044c:	50 40       	sbci	r21, 0x00	; 0
   1044e:	88 f0       	brcs	.+34     	; 0x10472 <strncasecmp_P+0x2c>
   10450:	8d 91       	ld	r24, X+
   10452:	81 34       	cpi	r24, 0x41	; 65
   10454:	1c f0       	brlt	.+6      	; 0x1045c <strncasecmp_P+0x16>
   10456:	8b 35       	cpi	r24, 0x5B	; 91
   10458:	0c f4       	brge	.+2      	; 0x1045c <strncasecmp_P+0x16>
   1045a:	80 5e       	subi	r24, 0xE0	; 224
   1045c:	65 91       	lpm	r22, Z+
   1045e:	61 34       	cpi	r22, 0x41	; 65
   10460:	1c f0       	brlt	.+6      	; 0x10468 <strncasecmp_P+0x22>
   10462:	6b 35       	cpi	r22, 0x5B	; 91
   10464:	0c f4       	brge	.+2      	; 0x10468 <strncasecmp_P+0x22>
   10466:	60 5e       	subi	r22, 0xE0	; 224
   10468:	86 1b       	sub	r24, r22
   1046a:	61 11       	cpse	r22, r1
   1046c:	71 f3       	breq	.-36     	; 0x1044a <strncasecmp_P+0x4>
   1046e:	99 0b       	sbc	r25, r25
   10470:	08 95       	ret
   10472:	88 1b       	sub	r24, r24
   10474:	fc cf       	rjmp	.-8      	; 0x1046e <strncasecmp_P+0x28>

00010476 <strnlen_P>:
   10476:	fc 01       	movw	r30, r24
   10478:	05 90       	lpm	r0, Z+
   1047a:	61 50       	subi	r22, 0x01	; 1
   1047c:	70 40       	sbci	r23, 0x00	; 0
   1047e:	01 10       	cpse	r0, r1
   10480:	d8 f7       	brcc	.-10     	; 0x10478 <strnlen_P+0x2>
   10482:	80 95       	com	r24
   10484:	90 95       	com	r25
   10486:	8e 0f       	add	r24, r30
   10488:	9f 1f       	adc	r25, r31
   1048a:	08 95       	ret

0001048c <strnlen>:
   1048c:	fc 01       	movw	r30, r24
   1048e:	61 50       	subi	r22, 0x01	; 1
   10490:	70 40       	sbci	r23, 0x00	; 0
   10492:	01 90       	ld	r0, Z+
   10494:	01 10       	cpse	r0, r1
   10496:	d8 f7       	brcc	.-10     	; 0x1048e <strnlen+0x2>
   10498:	80 95       	com	r24
   1049a:	90 95       	com	r25
   1049c:	8e 0f       	add	r24, r30
   1049e:	9f 1f       	adc	r25, r31
   104a0:	08 95       	ret

000104a2 <fputc>:
   104a2:	0f 93       	push	r16
   104a4:	1f 93       	push	r17
   104a6:	cf 93       	push	r28
   104a8:	df 93       	push	r29
   104aa:	fb 01       	movw	r30, r22
   104ac:	23 81       	ldd	r18, Z+3	; 0x03
   104ae:	21 fd       	sbrc	r18, 1
   104b0:	03 c0       	rjmp	.+6      	; 0x104b8 <fputc+0x16>
   104b2:	8f ef       	ldi	r24, 0xFF	; 255
   104b4:	9f ef       	ldi	r25, 0xFF	; 255
   104b6:	2c c0       	rjmp	.+88     	; 0x10510 <fputc+0x6e>
   104b8:	22 ff       	sbrs	r18, 2
   104ba:	16 c0       	rjmp	.+44     	; 0x104e8 <fputc+0x46>
   104bc:	46 81       	ldd	r20, Z+6	; 0x06
   104be:	57 81       	ldd	r21, Z+7	; 0x07
   104c0:	24 81       	ldd	r18, Z+4	; 0x04
   104c2:	35 81       	ldd	r19, Z+5	; 0x05
   104c4:	42 17       	cp	r20, r18
   104c6:	53 07       	cpc	r21, r19
   104c8:	44 f4       	brge	.+16     	; 0x104da <fputc+0x38>
   104ca:	a0 81       	ld	r26, Z
   104cc:	b1 81       	ldd	r27, Z+1	; 0x01
   104ce:	9d 01       	movw	r18, r26
   104d0:	2f 5f       	subi	r18, 0xFF	; 255
   104d2:	3f 4f       	sbci	r19, 0xFF	; 255
   104d4:	20 83       	st	Z, r18
   104d6:	31 83       	std	Z+1, r19	; 0x01
   104d8:	8c 93       	st	X, r24
   104da:	26 81       	ldd	r18, Z+6	; 0x06
   104dc:	37 81       	ldd	r19, Z+7	; 0x07
   104de:	2f 5f       	subi	r18, 0xFF	; 255
   104e0:	3f 4f       	sbci	r19, 0xFF	; 255
   104e2:	26 83       	std	Z+6, r18	; 0x06
   104e4:	37 83       	std	Z+7, r19	; 0x07
   104e6:	14 c0       	rjmp	.+40     	; 0x10510 <fputc+0x6e>
   104e8:	8b 01       	movw	r16, r22
   104ea:	ec 01       	movw	r28, r24
   104ec:	fb 01       	movw	r30, r22
   104ee:	00 84       	ldd	r0, Z+8	; 0x08
   104f0:	f1 85       	ldd	r31, Z+9	; 0x09
   104f2:	e0 2d       	mov	r30, r0
   104f4:	09 95       	icall
   104f6:	89 2b       	or	r24, r25
   104f8:	e1 f6       	brne	.-72     	; 0x104b2 <fputc+0x10>
   104fa:	d8 01       	movw	r26, r16
   104fc:	16 96       	adiw	r26, 0x06	; 6
   104fe:	8d 91       	ld	r24, X+
   10500:	9c 91       	ld	r25, X
   10502:	17 97       	sbiw	r26, 0x07	; 7
   10504:	01 96       	adiw	r24, 0x01	; 1
   10506:	16 96       	adiw	r26, 0x06	; 6
   10508:	8d 93       	st	X+, r24
   1050a:	9c 93       	st	X, r25
   1050c:	17 97       	sbiw	r26, 0x07	; 7
   1050e:	ce 01       	movw	r24, r28
   10510:	df 91       	pop	r29
   10512:	cf 91       	pop	r28
   10514:	1f 91       	pop	r17
   10516:	0f 91       	pop	r16
   10518:	08 95       	ret

0001051a <__ultoa_invert>:
   1051a:	fa 01       	movw	r30, r20
   1051c:	aa 27       	eor	r26, r26
   1051e:	28 30       	cpi	r18, 0x08	; 8
   10520:	51 f1       	breq	.+84     	; 0x10576 <__ultoa_invert+0x5c>
   10522:	20 31       	cpi	r18, 0x10	; 16
   10524:	81 f1       	breq	.+96     	; 0x10586 <__ultoa_invert+0x6c>
   10526:	e8 94       	clt
   10528:	6f 93       	push	r22
   1052a:	6e 7f       	andi	r22, 0xFE	; 254
   1052c:	6e 5f       	subi	r22, 0xFE	; 254
   1052e:	7f 4f       	sbci	r23, 0xFF	; 255
   10530:	8f 4f       	sbci	r24, 0xFF	; 255
   10532:	9f 4f       	sbci	r25, 0xFF	; 255
   10534:	af 4f       	sbci	r26, 0xFF	; 255
   10536:	b1 e0       	ldi	r27, 0x01	; 1
   10538:	3e d0       	rcall	.+124    	; 0x105b6 <__ultoa_invert+0x9c>
   1053a:	b4 e0       	ldi	r27, 0x04	; 4
   1053c:	3c d0       	rcall	.+120    	; 0x105b6 <__ultoa_invert+0x9c>
   1053e:	67 0f       	add	r22, r23
   10540:	78 1f       	adc	r23, r24
   10542:	89 1f       	adc	r24, r25
   10544:	9a 1f       	adc	r25, r26
   10546:	a1 1d       	adc	r26, r1
   10548:	68 0f       	add	r22, r24
   1054a:	79 1f       	adc	r23, r25
   1054c:	8a 1f       	adc	r24, r26
   1054e:	91 1d       	adc	r25, r1
   10550:	a1 1d       	adc	r26, r1
   10552:	6a 0f       	add	r22, r26
   10554:	71 1d       	adc	r23, r1
   10556:	81 1d       	adc	r24, r1
   10558:	91 1d       	adc	r25, r1
   1055a:	a1 1d       	adc	r26, r1
   1055c:	20 d0       	rcall	.+64     	; 0x1059e <__ultoa_invert+0x84>
   1055e:	09 f4       	brne	.+2      	; 0x10562 <__ultoa_invert+0x48>
   10560:	68 94       	set
   10562:	3f 91       	pop	r19
   10564:	2a e0       	ldi	r18, 0x0A	; 10
   10566:	26 9f       	mul	r18, r22
   10568:	11 24       	eor	r1, r1
   1056a:	30 19       	sub	r19, r0
   1056c:	30 5d       	subi	r19, 0xD0	; 208
   1056e:	31 93       	st	Z+, r19
   10570:	de f6       	brtc	.-74     	; 0x10528 <__ultoa_invert+0xe>
   10572:	cf 01       	movw	r24, r30
   10574:	08 95       	ret
   10576:	46 2f       	mov	r20, r22
   10578:	47 70       	andi	r20, 0x07	; 7
   1057a:	40 5d       	subi	r20, 0xD0	; 208
   1057c:	41 93       	st	Z+, r20
   1057e:	b3 e0       	ldi	r27, 0x03	; 3
   10580:	0f d0       	rcall	.+30     	; 0x105a0 <__ultoa_invert+0x86>
   10582:	c9 f7       	brne	.-14     	; 0x10576 <__ultoa_invert+0x5c>
   10584:	f6 cf       	rjmp	.-20     	; 0x10572 <__ultoa_invert+0x58>
   10586:	46 2f       	mov	r20, r22
   10588:	4f 70       	andi	r20, 0x0F	; 15
   1058a:	40 5d       	subi	r20, 0xD0	; 208
   1058c:	4a 33       	cpi	r20, 0x3A	; 58
   1058e:	18 f0       	brcs	.+6      	; 0x10596 <__ultoa_invert+0x7c>
   10590:	49 5d       	subi	r20, 0xD9	; 217
   10592:	31 fd       	sbrc	r19, 1
   10594:	40 52       	subi	r20, 0x20	; 32
   10596:	41 93       	st	Z+, r20
   10598:	02 d0       	rcall	.+4      	; 0x1059e <__ultoa_invert+0x84>
   1059a:	a9 f7       	brne	.-22     	; 0x10586 <__ultoa_invert+0x6c>
   1059c:	ea cf       	rjmp	.-44     	; 0x10572 <__ultoa_invert+0x58>
   1059e:	b4 e0       	ldi	r27, 0x04	; 4
   105a0:	a6 95       	lsr	r26
   105a2:	97 95       	ror	r25
   105a4:	87 95       	ror	r24
   105a6:	77 95       	ror	r23
   105a8:	67 95       	ror	r22
   105aa:	ba 95       	dec	r27
   105ac:	c9 f7       	brne	.-14     	; 0x105a0 <__ultoa_invert+0x86>
   105ae:	00 97       	sbiw	r24, 0x00	; 0
   105b0:	61 05       	cpc	r22, r1
   105b2:	71 05       	cpc	r23, r1
   105b4:	08 95       	ret
   105b6:	9b 01       	movw	r18, r22
   105b8:	ac 01       	movw	r20, r24
   105ba:	0a 2e       	mov	r0, r26
   105bc:	06 94       	lsr	r0
   105be:	57 95       	ror	r21
   105c0:	47 95       	ror	r20
   105c2:	37 95       	ror	r19
   105c4:	27 95       	ror	r18
   105c6:	ba 95       	dec	r27
   105c8:	c9 f7       	brne	.-14     	; 0x105bc <__ultoa_invert+0xa2>
   105ca:	62 0f       	add	r22, r18
   105cc:	73 1f       	adc	r23, r19
   105ce:	84 1f       	adc	r24, r20
   105d0:	95 1f       	adc	r25, r21
   105d2:	a0 1d       	adc	r26, r0
   105d4:	08 95       	ret

000105d6 <__ctype_isfalse>:
   105d6:	99 27       	eor	r25, r25
   105d8:	88 27       	eor	r24, r24

000105da <__ctype_istrue>:
   105da:	08 95       	ret

000105dc <eeprom_read_byte>:
   105dc:	03 d0       	rcall	.+6      	; 0x105e4 <eeprom_mapen>
   105de:	80 81       	ld	r24, Z
   105e0:	99 27       	eor	r25, r25
   105e2:	08 95       	ret

000105e4 <eeprom_mapen>:
   105e4:	fc 01       	movw	r30, r24
   105e6:	e0 50       	subi	r30, 0x00	; 0
   105e8:	fc 4e       	sbci	r31, 0xEC	; 236
   105ea:	08 95       	ret

000105ec <eeprom_read_dword>:
   105ec:	0e 94 f2 82 	call	0x105e4	; 0x105e4 <eeprom_mapen>
   105f0:	60 81       	ld	r22, Z
   105f2:	71 81       	ldd	r23, Z+1	; 0x01
   105f4:	82 81       	ldd	r24, Z+2	; 0x02
   105f6:	93 81       	ldd	r25, Z+3	; 0x03
   105f8:	08 95       	ret

000105fa <eeprom_read_word>:
   105fa:	0e 94 f2 82 	call	0x105e4	; 0x105e4 <eeprom_mapen>
   105fe:	80 81       	ld	r24, Z
   10600:	91 81       	ldd	r25, Z+1	; 0x01
   10602:	08 95       	ret

00010604 <__divmodqi4>:
   10604:	87 fb       	bst	r24, 7
   10606:	08 2e       	mov	r0, r24
   10608:	06 26       	eor	r0, r22
   1060a:	87 fd       	sbrc	r24, 7
   1060c:	81 95       	neg	r24
   1060e:	67 fd       	sbrc	r22, 7
   10610:	61 95       	neg	r22
   10612:	0e 94 17 83 	call	0x1062e	; 0x1062e <__udivmodqi4>
   10616:	0e f4       	brtc	.+2      	; 0x1061a <__divmodqi4_1>
   10618:	91 95       	neg	r25

0001061a <__divmodqi4_1>:
   1061a:	07 fc       	sbrc	r0, 7
   1061c:	81 95       	neg	r24

0001061e <__divmodqi4_exit>:
   1061e:	08 95       	ret

00010620 <__xload_1>:
   10620:	57 fd       	sbrc	r21, 7
   10622:	03 c0       	rjmp	.+6      	; 0x1062a <__xload_1+0xa>
   10624:	5b bf       	out	0x3b, r21	; 59
   10626:	67 91       	elpm	r22, Z+
   10628:	08 95       	ret
   1062a:	60 81       	ld	r22, Z
   1062c:	08 95       	ret

0001062e <__udivmodqi4>:
   1062e:	99 1b       	sub	r25, r25
   10630:	79 e0       	ldi	r23, 0x09	; 9
   10632:	04 c0       	rjmp	.+8      	; 0x1063c <__udivmodqi4_ep>

00010634 <__udivmodqi4_loop>:
   10634:	99 1f       	adc	r25, r25
   10636:	96 17       	cp	r25, r22
   10638:	08 f0       	brcs	.+2      	; 0x1063c <__udivmodqi4_ep>
   1063a:	96 1b       	sub	r25, r22

0001063c <__udivmodqi4_ep>:
   1063c:	88 1f       	adc	r24, r24
   1063e:	7a 95       	dec	r23
   10640:	c9 f7       	brne	.-14     	; 0x10634 <__udivmodqi4_loop>
   10642:	80 95       	com	r24
   10644:	08 95       	ret

00010646 <__do_global_dtors>:
   10646:	12 e0       	ldi	r17, 0x02	; 2
   10648:	c6 e5       	ldi	r28, 0x56	; 86
   1064a:	d2 e0       	ldi	r29, 0x02	; 2
   1064c:	04 c0       	rjmp	.+8      	; 0x10656 <__do_global_dtors+0x10>
   1064e:	fe 01       	movw	r30, r28
   10650:	0e 94 31 7a 	call	0xf462	; 0xf462 <__tablejump2__>
   10654:	21 96       	adiw	r28, 0x01	; 1
   10656:	c8 35       	cpi	r28, 0x58	; 88
   10658:	d1 07       	cpc	r29, r17
   1065a:	c9 f7       	brne	.-14     	; 0x1064e <__do_global_dtors+0x8>
   1065c:	f8 94       	cli

0001065e <__stop_program>:
   1065e:	ff cf       	rjmp	.-2      	; 0x1065e <__stop_program>
