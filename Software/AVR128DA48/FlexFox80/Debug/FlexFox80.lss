
FlexFox80.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000006c2  00804000  00010744  000107f8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00010744  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000041f  008046c2  008046c2  00010eba  2**0
                  ALLOC
  3 .eeprom       00000053  00810000  00810000  00010eba  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .comment      0000005c  00000000  00000000  00010f0d  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00010f6c  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 00000c28  00000000  00000000  00010fb0  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000f481  00000000  00000000  00011bd8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00005666  00000000  00000000  00021059  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000a362  00000000  00000000  000266bf  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00002ccc  00000000  00000000  00030a24  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00006418  00000000  00000000  000336f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00005ddf  00000000  00000000  00039b08  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000b48  00000000  00000000  0003f8e7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 58 02 	jmp	0x4b0	; 0x4b0 <__dtors_end>
       4:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
       8:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
       c:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      10:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      14:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      18:	0c 94 f1 10 	jmp	0x21e2	; 0x21e2 <__vector_6>
      1c:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      20:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      24:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      28:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      2c:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      30:	0c 94 72 15 	jmp	0x2ae4	; 0x2ae4 <__vector_12>
      34:	0c 94 2a 6f 	jmp	0xde54	; 0xde54 <__vector_13>
      38:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      3c:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      40:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      44:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      48:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      4c:	0c 94 c9 08 	jmp	0x1192	; 0x1192 <__vector_19>
      50:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <__vector_20>
      54:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      58:	0c 94 16 15 	jmp	0x2a2c	; 0x2a2c <__vector_22>
      5c:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      60:	0c 94 e3 36 	jmp	0x6dc6	; 0x6dc6 <__vector_24>
      64:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      68:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      6c:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      70:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      74:	0c 94 91 17 	jmp	0x2f22	; 0x2f22 <__vector_29>
      78:	0c 94 93 08 	jmp	0x1126	; 0x1126 <__vector_30>
      7c:	0c 94 5b 0d 	jmp	0x1ab6	; 0x1ab6 <__vector_31>
      80:	0c 94 00 0f 	jmp	0x1e00	; 0x1e00 <__vector_32>
      84:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      88:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      8c:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      90:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      94:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      98:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      9c:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      a0:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      a4:	0c 94 df 52 	jmp	0xa5be	; 0xa5be <__vector_41>
      a8:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      ac:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      b0:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      b4:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      b8:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      bc:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      c0:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      c4:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      c8:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      cc:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      d0:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      d4:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      d8:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      dc:	0c 94 0d 09 	jmp	0x121a	; 0x121a <__vector_55>
      e0:	0c 94 96 0c 	jmp	0x192c	; 0x192c <__vector_56>
      e4:	0c 94 82 02 	jmp	0x504	; 0x504 <__bad_interrupt>
      e8:	b4 2d       	mov	r27, r4
      ea:	c8 2d       	mov	r28, r8
      ec:	de 2d       	mov	r29, r14
      ee:	f4 2d       	mov	r31, r4
      f0:	0a 2e       	mov	r0, r26
      f2:	50 2f       	mov	r21, r16
      f4:	45 2f       	mov	r20, r21
      f6:	45 2e       	mov	r4, r21
      f8:	55 2e       	mov	r5, r21
      fa:	67 2e       	mov	r6, r23
      fc:	79 2e       	mov	r7, r25
      fe:	8b 2e       	mov	r8, r27
     100:	c5 2e       	mov	r12, r21
     102:	d5 2e       	mov	r13, r21
     104:	e7 2e       	mov	r14, r23
     106:	f9 2e       	mov	r15, r25
     108:	0b 2f       	mov	r16, r27
     10a:	a6 47       	sbci	r26, 0x76	; 118
     10c:	b3 47       	sbci	r27, 0x73	; 115
     10e:	4a 47       	sbci	r20, 0x7A	; 122
     110:	b3 47       	sbci	r27, 0x73	; 115
     112:	b3 47       	sbci	r27, 0x73	; 115
     114:	b3 47       	sbci	r27, 0x73	; 115
     116:	58 47       	sbci	r21, 0x78	; 120
     118:	b3 47       	sbci	r27, 0x73	; 115
     11a:	b3 47       	sbci	r27, 0x73	; 115
     11c:	b3 47       	sbci	r27, 0x73	; 115
     11e:	a2 46       	sbci	r26, 0x62	; 98
     120:	b3 47       	sbci	r27, 0x73	; 115
     122:	b3 47       	sbci	r27, 0x73	; 115
     124:	b3 47       	sbci	r27, 0x73	; 115
     126:	b3 47       	sbci	r27, 0x73	; 115
     128:	b3 47       	sbci	r27, 0x73	; 115
     12a:	b3 47       	sbci	r27, 0x73	; 115
     12c:	b3 47       	sbci	r27, 0x73	; 115
     12e:	b3 47       	sbci	r27, 0x73	; 115
     130:	b3 47       	sbci	r27, 0x73	; 115
     132:	b3 47       	sbci	r27, 0x73	; 115
     134:	b3 47       	sbci	r27, 0x73	; 115
     136:	b3 47       	sbci	r27, 0x73	; 115
     138:	b3 47       	sbci	r27, 0x73	; 115
     13a:	b3 47       	sbci	r27, 0x73	; 115
     13c:	b3 47       	sbci	r27, 0x73	; 115
     13e:	b3 47       	sbci	r27, 0x73	; 115
     140:	b3 47       	sbci	r27, 0x73	; 115
     142:	b3 47       	sbci	r27, 0x73	; 115
     144:	b3 47       	sbci	r27, 0x73	; 115
     146:	b3 47       	sbci	r27, 0x73	; 115
     148:	d2 46       	sbci	r29, 0x62	; 98
     14a:	b3 47       	sbci	r27, 0x73	; 115
     14c:	b3 47       	sbci	r27, 0x73	; 115
     14e:	b3 47       	sbci	r27, 0x73	; 115
     150:	b3 47       	sbci	r27, 0x73	; 115
     152:	b3 47       	sbci	r27, 0x73	; 115
     154:	b3 47       	sbci	r27, 0x73	; 115
     156:	b3 47       	sbci	r27, 0x73	; 115
     158:	b3 47       	sbci	r27, 0x73	; 115
     15a:	b3 47       	sbci	r27, 0x73	; 115
     15c:	b3 47       	sbci	r27, 0x73	; 115
     15e:	b3 47       	sbci	r27, 0x73	; 115
     160:	b3 47       	sbci	r27, 0x73	; 115
     162:	b3 47       	sbci	r27, 0x73	; 115
     164:	b3 47       	sbci	r27, 0x73	; 115
     166:	b3 47       	sbci	r27, 0x73	; 115
     168:	b3 47       	sbci	r27, 0x73	; 115
     16a:	b3 47       	sbci	r27, 0x73	; 115
     16c:	b3 47       	sbci	r27, 0x73	; 115
     16e:	b3 47       	sbci	r27, 0x73	; 115
     170:	b3 47       	sbci	r27, 0x73	; 115
     172:	02 47       	sbci	r16, 0x72	; 114
     174:	b3 47       	sbci	r27, 0x73	; 115
     176:	b3 47       	sbci	r27, 0x73	; 115
     178:	b3 47       	sbci	r27, 0x73	; 115
     17a:	b3 47       	sbci	r27, 0x73	; 115
     17c:	b3 47       	sbci	r27, 0x73	; 115
     17e:	b3 47       	sbci	r27, 0x73	; 115
     180:	b3 47       	sbci	r27, 0x73	; 115
     182:	b3 47       	sbci	r27, 0x73	; 115
     184:	36 47       	sbci	r19, 0x76	; 118
     186:	40 47       	sbci	r20, 0x70	; 112
     188:	66 47       	sbci	r22, 0x76	; 118
     18a:	79 46       	sbci	r23, 0x69	; 105
     18c:	b3 47       	sbci	r27, 0x73	; 115
     18e:	b3 47       	sbci	r27, 0x73	; 115
     190:	b3 47       	sbci	r27, 0x73	; 115
     192:	87 46       	sbci	r24, 0x67	; 103
     194:	b3 47       	sbci	r27, 0x73	; 115
     196:	b3 47       	sbci	r27, 0x73	; 115
     198:	b3 47       	sbci	r27, 0x73	; 115
     19a:	95 46       	sbci	r25, 0x65	; 101
     19c:	b3 47       	sbci	r27, 0x73	; 115
     19e:	70 47       	sbci	r23, 0x70	; 112
     1a0:	7a 47       	sbci	r23, 0x7A	; 122
     1a2:	b3 47       	sbci	r27, 0x73	; 115
     1a4:	85 47       	sbci	r24, 0x75	; 117
     1a6:	b3 47       	sbci	r27, 0x73	; 115
     1a8:	90 47       	sbci	r25, 0x70	; 112
     1aa:	b3 47       	sbci	r27, 0x73	; 115
     1ac:	9b 47       	sbci	r25, 0x7B	; 123
     1ae:	96 54       	subi	r25, 0x46	; 70
     1b0:	a9 54       	subi	r26, 0x49	; 73
     1b2:	b3 54       	subi	r27, 0x43	; 67
     1b4:	bd 54       	subi	r27, 0x4D	; 77
     1b6:	ed 54       	subi	r30, 0x4D	; 77
     1b8:	d5 54       	subi	r29, 0x45	; 69
     1ba:	05 55       	subi	r16, 0x55	; 85
     1bc:	df 55       	subi	r29, 0x5F	; 95
     1be:	f5 55       	subi	r31, 0x55	; 85
     1c0:	b0 55       	subi	r27, 0x50	; 80
     1c2:	81 55       	subi	r24, 0x51	; 81
     1c4:	4f 55       	subi	r20, 0x5F	; 95
     1c6:	1d 55       	subi	r17, 0x5D	; 93
     1c8:	85 5e       	subi	r24, 0xE5	; 229
     1ca:	1c 5e       	subi	r17, 0xEC	; 236
     1cc:	69 5e       	subi	r22, 0xE9	; 233
     1ce:	93 5e       	subi	r25, 0xE3	; 227
     1d0:	70 5e       	subi	r23, 0xE0	; 224
     1d2:	93 5e       	subi	r25, 0xE3	; 227
     1d4:	38 5e       	subi	r19, 0xE8	; 232
     1d6:	15 5e       	subi	r17, 0xE5	; 229
     1d8:	2a 5e       	subi	r18, 0xEA	; 234
     1da:	31 5e       	subi	r19, 0xE1	; 225
     1dc:	93 5e       	subi	r25, 0xE3	; 227
     1de:	54 5e       	subi	r21, 0xE4	; 228
     1e0:	07 5e       	subi	r16, 0xE7	; 231
     1e2:	5b 5e       	subi	r21, 0xEB	; 235
     1e4:	00 5e       	subi	r16, 0xE0	; 224
     1e6:	23 5e       	subi	r18, 0xE3	; 227
     1e8:	bb 5d       	subi	r27, 0xDB	; 219
     1ea:	c2 5d       	subi	r28, 0xD2	; 210
     1ec:	c9 5d       	subi	r28, 0xD9	; 217
     1ee:	d0 5d       	subi	r29, 0xD0	; 208
     1f0:	d7 5d       	subi	r29, 0xD7	; 215
     1f2:	de 5d       	subi	r29, 0xDE	; 222
     1f4:	e4 5d       	subi	r30, 0xD4	; 212
     1f6:	eb 5d       	subi	r30, 0xDB	; 219
     1f8:	f2 5d       	subi	r31, 0xD2	; 210
     1fa:	f9 5d       	subi	r31, 0xD9	; 217
     1fc:	3f 5e       	subi	r19, 0xEF	; 239
     1fe:	46 5e       	subi	r20, 0xE6	; 230
     200:	8c 5e       	subi	r24, 0xEC	; 236
     202:	4d 5e       	subi	r20, 0xED	; 237
     204:	93 5e       	subi	r25, 0xE3	; 227
     206:	0e 5e       	subi	r16, 0xEE	; 238
     208:	77 5e       	subi	r23, 0xE7	; 231
     20a:	09 5d       	subi	r16, 0xD9	; 217
     20c:	10 5d       	subi	r17, 0xD0	; 208
     20e:	17 5d       	subi	r17, 0xD7	; 215
     210:	1e 5d       	subi	r17, 0xDE	; 222
     212:	25 5d       	subi	r18, 0xD5	; 213
     214:	2b 5d       	subi	r18, 0xDB	; 219
     216:	32 5d       	subi	r19, 0xD2	; 210
     218:	39 5d       	subi	r19, 0xD9	; 217
     21a:	3f 5d       	subi	r19, 0xDF	; 223
     21c:	45 5d       	subi	r20, 0xD5	; 213
     21e:	4c 5d       	subi	r20, 0xDC	; 220
     220:	53 5d       	subi	r21, 0xD3	; 211
     222:	5a 5d       	subi	r21, 0xDA	; 218
     224:	61 5d       	subi	r22, 0xD1	; 209
     226:	68 5d       	subi	r22, 0xD8	; 216
     228:	6f 5d       	subi	r22, 0xDF	; 223
     22a:	76 5d       	subi	r23, 0xD6	; 214
     22c:	7d 5d       	subi	r23, 0xDD	; 221
     22e:	84 5d       	subi	r24, 0xD4	; 212
     230:	8a 5d       	subi	r24, 0xDA	; 218
     232:	91 5d       	subi	r25, 0xD1	; 209
     234:	98 5d       	subi	r25, 0xD8	; 216
     236:	9f 5d       	subi	r25, 0xDF	; 223
     238:	a6 5d       	subi	r26, 0xD6	; 214
     23a:	ad 5d       	subi	r26, 0xDD	; 221
     23c:	b4 5d       	subi	r27, 0xD4	; 212
     23e:	93 5e       	subi	r25, 0xE3	; 227
     240:	93 5e       	subi	r25, 0xE3	; 227
     242:	93 5e       	subi	r25, 0xE3	; 227
     244:	93 5e       	subi	r25, 0xE3	; 227
     246:	62 5e       	subi	r22, 0xE2	; 226
     248:	93 5e       	subi	r25, 0xE3	; 227
     24a:	93 5e       	subi	r25, 0xE3	; 227
     24c:	93 5e       	subi	r25, 0xE3	; 227
     24e:	93 5e       	subi	r25, 0xE3	; 227
     250:	93 5e       	subi	r25, 0xE3	; 227
     252:	93 5e       	subi	r25, 0xE3	; 227
     254:	93 5e       	subi	r25, 0xE3	; 227
     256:	93 5e       	subi	r25, 0xE3	; 227
     258:	93 5e       	subi	r25, 0xE3	; 227
     25a:	93 5e       	subi	r25, 0xE3	; 227
     25c:	93 5e       	subi	r25, 0xE3	; 227
     25e:	93 5e       	subi	r25, 0xE3	; 227
     260:	93 5e       	subi	r25, 0xE3	; 227
     262:	93 5e       	subi	r25, 0xE3	; 227
     264:	93 5e       	subi	r25, 0xE3	; 227
     266:	93 5e       	subi	r25, 0xE3	; 227
     268:	93 5e       	subi	r25, 0xE3	; 227
     26a:	93 5e       	subi	r25, 0xE3	; 227
     26c:	93 5e       	subi	r25, 0xE3	; 227
     26e:	93 5e       	subi	r25, 0xE3	; 227
     270:	93 5e       	subi	r25, 0xE3	; 227
     272:	93 5e       	subi	r25, 0xE3	; 227
     274:	93 5e       	subi	r25, 0xE3	; 227
     276:	93 5e       	subi	r25, 0xE3	; 227
     278:	93 5e       	subi	r25, 0xE3	; 227
     27a:	93 5e       	subi	r25, 0xE3	; 227
     27c:	93 5e       	subi	r25, 0xE3	; 227
     27e:	93 5e       	subi	r25, 0xE3	; 227
     280:	7e 5e       	subi	r23, 0xEE	; 238
     282:	c4 76       	andi	r28, 0x64	; 100
     284:	cf 76       	andi	r28, 0x6F	; 111
     286:	da 76       	andi	r29, 0x6A	; 106
     288:	e5 76       	andi	r30, 0x65	; 101
     28a:	f0 76       	andi	r31, 0x60	; 96
     28c:	fb 76       	andi	r31, 0x6B	; 107
     28e:	06 77       	andi	r16, 0x76	; 118
     290:	11 77       	andi	r17, 0x71	; 113
     292:	1c 77       	andi	r17, 0x7C	; 124
     294:	27 77       	andi	r18, 0x77	; 119
     296:	32 77       	andi	r19, 0x72	; 114
     298:	3d 77       	andi	r19, 0x7D	; 125
     29a:	48 77       	andi	r20, 0x78	; 120
     29c:	53 77       	andi	r21, 0x73	; 115
     29e:	5e 77       	andi	r21, 0x7E	; 126
     2a0:	69 77       	andi	r22, 0x79	; 121
     2a2:	74 77       	andi	r23, 0x74	; 116
     2a4:	7f 77       	andi	r23, 0x7F	; 127

000002a6 <__trampolines_end>:
     2a6:	4e 41       	sbci	r20, 0x1E	; 30
     2a8:	4e 49       	Address 0x000002a8 is out of bounds.
.word	0xffff	; ????

000002a9 <pstr_inity>:
     2a9:	49 4e 49 54 59                                      INITY

000002ae <pstr_inf>:
     2ae:	49 4e 46                                            INF

000002b1 <pwr_m10>:
     2b1:	cd cc cc 3d 0a d7 23 3c 17 b7 d1 38 77 cc 2b 32     ...=..#<...8w.+2
     2c1:	95 95 e6 24 1f b1 4f 0a                             ...$..O.

000002c9 <pwr_p10>:
     2c9:	00 00 20 41 00 00 c8 42 00 40 1c 46 20 bc be 4c     .. A...B.@.F ..L
     2d9:	ca 1b 0e 5a ae c5 9d 74 00 40 7a 10 f3 5a 00 a0     ...Z...t.@z..Z..
     2e9:	72 4e 18 09 00 10 a5 d4 e8 00 00 e8 76 48 17 00     rN..........vH..
     2f9:	00 e4 0b 54 02 00 00 ca 9a 3b 00 00 00 e1 f5 05     ...T.....;......
     309:	00 00 80 96 98 00 00 00 40 42 0f 00 00 00 a0 86     ........@B......
     319:	01 00 00 00 10 27 00 00 00 00 e8 03 00 00 00 00     .....'..........
     329:	64 00 00 00 00 00 0a 00 00 00 00 00 01 00 00 00     d...............
     339:	00 00 2c 76 d8 88 dc 67 4f 08 23 df c1 df ae 59     ..,v...gO.#....Y
     349:	e1 b1 b7 96 e5 e3 e4 53 c6 3a e6 51 99 76 96 e8     .......S.:.Q.v..
     359:	e6 c2 84 26 eb 89 8c 9b 62 ed 40 7c 6f fc ef bc     ...&....b.@|o...
     369:	9c 9f 40 f2 ba a5 6f a5 f4 90 05 5a 2a f7 5c 93     ..@...o....Z*.\.
     379:	6b 6c f9 67 6d c1 1b fc e0 e4 0d 47 fe f5 20 e6     kl.gm......G.. .
     389:	b5 00 d0 ed 90 2e 03 00 94 35 77 05 00 80 84 1e     .........5w.....
     399:	08 00 00 20 4e 0a 00 00 00 c8 0c 33 33 33 33 0f     ... N......3333.
     3a9:	98 6e 12 83 11 41 ef 8d 21 14 89 3b e6 55 16 cf     .n...A..!..;.U..
     3b9:	fe e6 db 18 d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb     ......K8..|.....
     3c9:	e4 24 20 32 84 72 5e 22 81 00 c9 f1 24 ec a1 e5     .$ 2.r^"....$...
     3d9:	3d 27                                               ='

000003db <strfmonths>:
     3db:	4a 61 6e 75 61 72 79 20 46 65 62 72 75 61 72 79     January February
     3eb:	20 4d 61 72 63 68 20 41 70 72 69 6c 20 4d 61 79      March April May
     3fb:	20 4a 75 6e 65 20 4a 75 6c 79 20 41 75 67 75 73      June July Augus
     40b:	74 20 53 65 70 74 65 6d 62 65 72 20 4f 63 74 6f     t September Octo
     41b:	62 65 72 20 4e 6f 76 65 6d 62 65 72 20 44 65 63     ber November Dec
     42b:	65 6d 62 65 72 20 00                                ember .

00000432 <strfwkdays>:
     432:	53 75 6e 64 61 79 20 4d 6f 6e 64 61 79 20 54 75     Sunday Monday Tu
     442:	65 73 64 61 79 20 57 65 64 6e 65 73 64 61 79 20     esday Wednesday 
     452:	54 68 75 72 73 64 61 79 20 46 72 69 64 61 79 20     Thursday Friday 
     462:	53 61 74 75 72 64 61 79 20 00                       Saturday .

0000046c <ascdays>:
     46c:	53 75 6e 4d 6f 6e 54 75 65 57 65 64 54 68 75 46     SunMonTueWedThuF
     47c:	72 69 53 61 74 00                                   riSat.

00000482 <ascmonths>:
     482:	4a 61 6e 46 65 62 4d 61 72 41 70 72 4d 61 79 4a     JanFebMarAprMayJ
     492:	75 6e 4a 75 6c 41 75 67 53 65 70 4f 63 74 4e 6f     unJulAugSepOctNo
     4a2:	76 44 65 63 00 00                                   vDec..

000004a8 <__ctors_start>:
     4a8:	8e 34       	cpi	r24, 0x4E	; 78
     4aa:	5f 37       	cpi	r21, 0x7F	; 127

000004ac <__ctors_end>:
     4ac:	9b 34       	cpi	r25, 0x4B	; 75
     4ae:	6c 37       	cpi	r22, 0x7C	; 124

000004b0 <__dtors_end>:
     4b0:	11 24       	eor	r1, r1
     4b2:	1f be       	out	0x3f, r1	; 63
     4b4:	cf ef       	ldi	r28, 0xFF	; 255
     4b6:	cd bf       	out	0x3d, r28	; 61
     4b8:	df e7       	ldi	r29, 0x7F	; 127
     4ba:	de bf       	out	0x3e, r29	; 62

000004bc <__do_copy_data>:
     4bc:	16 e4       	ldi	r17, 0x46	; 70
     4be:	a0 e0       	ldi	r26, 0x00	; 0
     4c0:	b0 e4       	ldi	r27, 0x40	; 64
     4c2:	e4 e4       	ldi	r30, 0x44	; 68
     4c4:	f7 e0       	ldi	r31, 0x07	; 7
     4c6:	01 e0       	ldi	r16, 0x01	; 1
     4c8:	0b bf       	out	0x3b, r16	; 59
     4ca:	02 c0       	rjmp	.+4      	; 0x4d0 <__do_copy_data+0x14>
     4cc:	07 90       	elpm	r0, Z+
     4ce:	0d 92       	st	X+, r0
     4d0:	a2 3c       	cpi	r26, 0xC2	; 194
     4d2:	b1 07       	cpc	r27, r17
     4d4:	d9 f7       	brne	.-10     	; 0x4cc <__do_copy_data+0x10>

000004d6 <__do_clear_bss>:
     4d6:	2a e4       	ldi	r18, 0x4A	; 74
     4d8:	a2 ec       	ldi	r26, 0xC2	; 194
     4da:	b6 e4       	ldi	r27, 0x46	; 70
     4dc:	01 c0       	rjmp	.+2      	; 0x4e0 <.do_clear_bss_start>

000004de <.do_clear_bss_loop>:
     4de:	1d 92       	st	X+, r1

000004e0 <.do_clear_bss_start>:
     4e0:	a1 3e       	cpi	r26, 0xE1	; 225
     4e2:	b2 07       	cpc	r27, r18
     4e4:	e1 f7       	brne	.-8      	; 0x4de <.do_clear_bss_loop>

000004e6 <__do_global_ctors>:
     4e6:	12 e0       	ldi	r17, 0x02	; 2
     4e8:	c6 e5       	ldi	r28, 0x56	; 86
     4ea:	d2 e0       	ldi	r29, 0x02	; 2
     4ec:	04 c0       	rjmp	.+8      	; 0x4f6 <__do_global_ctors+0x10>
     4ee:	21 97       	sbiw	r28, 0x01	; 1
     4f0:	fe 01       	movw	r30, r28
     4f2:	0e 94 a3 7a 	call	0xf546	; 0xf546 <__tablejump2__>
     4f6:	c4 35       	cpi	r28, 0x54	; 84
     4f8:	d1 07       	cpc	r29, r17
     4fa:	c9 f7       	brne	.-14     	; 0x4ee <__do_global_ctors+0x8>
     4fc:	0e 94 1e 18 	call	0x303c	; 0x303c <main>
     500:	0c 94 95 83 	jmp	0x1072a	; 0x1072a <__do_global_dtors>

00000504 <__bad_interrupt>:
     504:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000508 <is_leap_year>:
     508:	9c 01       	movw	r18, r24
     50a:	23 70       	andi	r18, 0x03	; 3
     50c:	33 27       	eor	r19, r19
     50e:	23 2b       	or	r18, r19
     510:	59 f4       	brne	.+22     	; 0x528 <is_leap_year+0x20>
     512:	64 e6       	ldi	r22, 0x64	; 100
     514:	70 e0       	ldi	r23, 0x00	; 0
     516:	0e 94 4e 7a 	call	0xf49c	; 0xf49c <__divmodhi4>
     51a:	89 2b       	or	r24, r25
     51c:	39 f4       	brne	.+14     	; 0x52c <is_leap_year+0x24>
     51e:	63 70       	andi	r22, 0x03	; 3
     520:	77 27       	eor	r23, r23
     522:	81 e0       	ldi	r24, 0x01	; 1
     524:	67 2b       	or	r22, r23
     526:	19 f0       	breq	.+6      	; 0x52e <is_leap_year+0x26>
     528:	80 e0       	ldi	r24, 0x00	; 0
     52a:	08 95       	ret
     52c:	81 e0       	ldi	r24, 0x01	; 1
     52e:	08 95       	ret

00000530 <localtime>:
     530:	6d ec       	ldi	r22, 0xCD	; 205
     532:	7a e4       	ldi	r23, 0x4A	; 74
     534:	0e 94 9f 02 	call	0x53e	; 0x53e <localtime_r>
     538:	8d ec       	ldi	r24, 0xCD	; 205
     53a:	9a e4       	ldi	r25, 0x4A	; 74
     53c:	08 95       	ret

0000053e <localtime_r>:
     53e:	cf 92       	push	r12
     540:	df 92       	push	r13
     542:	ef 92       	push	r14
     544:	ff 92       	push	r15
     546:	0f 93       	push	r16
     548:	1f 93       	push	r17
     54a:	cf 93       	push	r28
     54c:	df 93       	push	r29
     54e:	00 d0       	rcall	.+0      	; 0x550 <localtime_r+0x12>
     550:	00 d0       	rcall	.+0      	; 0x552 <localtime_r+0x14>
     552:	cd b7       	in	r28, 0x3d	; 61
     554:	de b7       	in	r29, 0x3e	; 62
     556:	6c 01       	movw	r12, r24
     558:	7b 01       	movw	r14, r22
     55a:	e0 91 dd 4a 	lds	r30, 0x4ADD	; 0x804add <__dst_ptr>
     55e:	f0 91 de 4a 	lds	r31, 0x4ADE	; 0x804ade <__dst_ptr+0x1>
     562:	30 97       	sbiw	r30, 0x00	; 0
     564:	29 f0       	breq	.+10     	; 0x570 <localtime_r+0x32>
     566:	69 ed       	ldi	r22, 0xD9	; 217
     568:	7a e4       	ldi	r23, 0x4A	; 74
     56a:	09 95       	icall
     56c:	8c 01       	movw	r16, r24
     56e:	02 c0       	rjmp	.+4      	; 0x574 <localtime_r+0x36>
     570:	0f ef       	ldi	r16, 0xFF	; 255
     572:	1f ef       	ldi	r17, 0xFF	; 255
     574:	f6 01       	movw	r30, r12
     576:	40 81       	ld	r20, Z
     578:	51 81       	ldd	r21, Z+1	; 0x01
     57a:	62 81       	ldd	r22, Z+2	; 0x02
     57c:	73 81       	ldd	r23, Z+3	; 0x03
     57e:	80 91 d9 4a 	lds	r24, 0x4AD9	; 0x804ad9 <__utc_offset>
     582:	90 91 da 4a 	lds	r25, 0x4ADA	; 0x804ada <__utc_offset+0x1>
     586:	a0 91 db 4a 	lds	r26, 0x4ADB	; 0x804adb <__utc_offset+0x2>
     58a:	b0 91 dc 4a 	lds	r27, 0x4ADC	; 0x804adc <__utc_offset+0x3>
     58e:	84 0f       	add	r24, r20
     590:	95 1f       	adc	r25, r21
     592:	a6 1f       	adc	r26, r22
     594:	b7 1f       	adc	r27, r23
     596:	10 16       	cp	r1, r16
     598:	11 06       	cpc	r1, r17
     59a:	4c f4       	brge	.+18     	; 0x5ae <localtime_r+0x70>
     59c:	a8 01       	movw	r20, r16
     59e:	01 2e       	mov	r0, r17
     5a0:	00 0c       	add	r0, r0
     5a2:	66 0b       	sbc	r22, r22
     5a4:	77 0b       	sbc	r23, r23
     5a6:	84 0f       	add	r24, r20
     5a8:	95 1f       	adc	r25, r21
     5aa:	a6 1f       	adc	r26, r22
     5ac:	b7 1f       	adc	r27, r23
     5ae:	89 83       	std	Y+1, r24	; 0x01
     5b0:	9a 83       	std	Y+2, r25	; 0x02
     5b2:	ab 83       	std	Y+3, r26	; 0x03
     5b4:	bc 83       	std	Y+4, r27	; 0x04
     5b6:	b7 01       	movw	r22, r14
     5b8:	ce 01       	movw	r24, r28
     5ba:	01 96       	adiw	r24, 0x01	; 1
     5bc:	0e 94 27 07 	call	0xe4e	; 0xe4e <gmtime_r>
     5c0:	f7 01       	movw	r30, r14
     5c2:	02 87       	std	Z+10, r16	; 0x0a
     5c4:	13 87       	std	Z+11, r17	; 0x0b
     5c6:	24 96       	adiw	r28, 0x04	; 4
     5c8:	cd bf       	out	0x3d, r28	; 61
     5ca:	de bf       	out	0x3e, r29	; 62
     5cc:	df 91       	pop	r29
     5ce:	cf 91       	pop	r28
     5d0:	1f 91       	pop	r17
     5d2:	0f 91       	pop	r16
     5d4:	ff 90       	pop	r15
     5d6:	ef 90       	pop	r14
     5d8:	df 90       	pop	r13
     5da:	cf 90       	pop	r12
     5dc:	08 95       	ret

000005de <month_length>:
     5de:	62 30       	cpi	r22, 0x02	; 2
     5e0:	21 f4       	brne	.+8      	; 0x5ea <month_length+0xc>
     5e2:	0e 94 84 02 	call	0x508	; 0x508 <is_leap_year>
     5e6:	84 5e       	subi	r24, 0xE4	; 228
     5e8:	08 95       	ret
     5ea:	68 30       	cpi	r22, 0x08	; 8
     5ec:	08 f0       	brcs	.+2      	; 0x5f0 <month_length+0x12>
     5ee:	6f 5f       	subi	r22, 0xFF	; 255
     5f0:	61 70       	andi	r22, 0x01	; 1
     5f2:	8e e1       	ldi	r24, 0x1E	; 30
     5f4:	86 0f       	add	r24, r22
     5f6:	08 95       	ret

000005f8 <set_system_time>:
     5f8:	0f b6       	in	r0, 0x3f	; 63
     5fa:	f8 94       	cli
     5fc:	60 93 c9 4a 	sts	0x4AC9, r22	; 0x804ac9 <__system_time>
     600:	70 93 ca 4a 	sts	0x4ACA, r23	; 0x804aca <__system_time+0x1>
     604:	80 93 cb 4a 	sts	0x4ACB, r24	; 0x804acb <__system_time+0x2>
     608:	90 93 cc 4a 	sts	0x4ACC, r25	; 0x804acc <__system_time+0x3>
     60c:	0f be       	out	0x3f, r0	; 63
     60e:	08 95       	ret

00000610 <pgm_copystring>:
     610:	cf 92       	push	r12
     612:	df 92       	push	r13
     614:	ef 92       	push	r14
     616:	0f 93       	push	r16
     618:	6b 01       	movw	r12, r22
     61a:	e8 2e       	mov	r14, r24
     61c:	7c 2d       	mov	r23, r12
     61e:	6d 2d       	mov	r22, r13
     620:	5e 2d       	mov	r21, r14
     622:	ae 2d       	mov	r26, r14
     624:	c6 01       	movw	r24, r12
     626:	01 96       	adiw	r24, 0x01	; 1
     628:	a1 1d       	adc	r26, r1
     62a:	44 23       	and	r20, r20
     62c:	51 f0       	breq	.+20     	; 0x642 <pgm_copystring+0x32>
     62e:	6c 01       	movw	r12, r24
     630:	ea 2e       	mov	r14, r26
     632:	e7 2f       	mov	r30, r23
     634:	f6 2f       	mov	r31, r22
     636:	0e 94 82 83 	call	0x10704	; 0x10704 <__xload_1>
     63a:	60 32       	cpi	r22, 0x20	; 32
     63c:	79 f7       	brne	.-34     	; 0x61c <pgm_copystring+0xc>
     63e:	41 50       	subi	r20, 0x01	; 1
     640:	ed cf       	rjmp	.-38     	; 0x61c <pgm_copystring+0xc>
     642:	f6 01       	movw	r30, r12
     644:	0e 94 82 83 	call	0x10704	; 0x10704 <__xload_1>
     648:	6c 01       	movw	r12, r24
     64a:	ea 2e       	mov	r14, r26
     64c:	80 e0       	ldi	r24, 0x00	; 0
     64e:	60 32       	cpi	r22, 0x20	; 32
     650:	39 f4       	brne	.+14     	; 0x660 <pgm_copystring+0x50>
     652:	f9 01       	movw	r30, r18
     654:	10 82       	st	Z, r1
     656:	0f 91       	pop	r16
     658:	ef 90       	pop	r14
     65a:	df 90       	pop	r13
     65c:	cf 90       	pop	r12
     65e:	08 95       	ret
     660:	80 17       	cp	r24, r16
     662:	b9 f3       	breq	.-18     	; 0x652 <pgm_copystring+0x42>
     664:	2f 5f       	subi	r18, 0xFF	; 255
     666:	3f 4f       	sbci	r19, 0xFF	; 255
     668:	f9 01       	movw	r30, r18
     66a:	31 97       	sbiw	r30, 0x01	; 1
     66c:	60 83       	st	Z, r22
     66e:	8f 5f       	subi	r24, 0xFF	; 255
     670:	f6 01       	movw	r30, r12
     672:	5e 2d       	mov	r21, r14
     674:	0e 94 82 83 	call	0x10704	; 0x10704 <__xload_1>
     678:	9f ef       	ldi	r25, 0xFF	; 255
     67a:	c9 1a       	sub	r12, r25
     67c:	d9 0a       	sbc	r13, r25
     67e:	e9 0a       	sbc	r14, r25
     680:	e6 cf       	rjmp	.-52     	; 0x64e <pgm_copystring+0x3e>

00000682 <strftime>:
     682:	2f 92       	push	r2
     684:	3f 92       	push	r3
     686:	4f 92       	push	r4
     688:	5f 92       	push	r5
     68a:	6f 92       	push	r6
     68c:	7f 92       	push	r7
     68e:	8f 92       	push	r8
     690:	9f 92       	push	r9
     692:	af 92       	push	r10
     694:	bf 92       	push	r11
     696:	cf 92       	push	r12
     698:	df 92       	push	r13
     69a:	ef 92       	push	r14
     69c:	ff 92       	push	r15
     69e:	0f 93       	push	r16
     6a0:	1f 93       	push	r17
     6a2:	cf 93       	push	r28
     6a4:	df 93       	push	r29
     6a6:	cd b7       	in	r28, 0x3d	; 61
     6a8:	de b7       	in	r29, 0x3e	; 62
     6aa:	a2 97       	sbiw	r28, 0x22	; 34
     6ac:	cd bf       	out	0x3d, r28	; 61
     6ae:	de bf       	out	0x3e, r29	; 62
     6b0:	2c 01       	movw	r4, r24
     6b2:	69 a3       	std	Y+33, r22	; 0x21
     6b4:	7a a3       	std	Y+34, r23	; 0x22
     6b6:	4a 01       	movw	r8, r20
     6b8:	79 01       	movw	r14, r18
     6ba:	61 2c       	mov	r6, r1
     6bc:	71 2c       	mov	r7, r1
     6be:	9e 01       	movw	r18, r28
     6c0:	2f 5f       	subi	r18, 0xFF	; 255
     6c2:	3f 4f       	sbci	r19, 0xFF	; 255
     6c4:	69 01       	movw	r12, r18
     6c6:	84 e6       	ldi	r24, 0x64	; 100
     6c8:	28 2e       	mov	r2, r24
     6ca:	31 2c       	mov	r3, r1
     6cc:	90 e6       	ldi	r25, 0x60	; 96
     6ce:	a9 2e       	mov	r10, r25
     6d0:	96 e4       	ldi	r25, 0x46	; 70
     6d2:	b9 2e       	mov	r11, r25
     6d4:	29 a1       	ldd	r18, Y+33	; 0x21
     6d6:	3a a1       	ldd	r19, Y+34	; 0x22
     6d8:	62 16       	cp	r6, r18
     6da:	73 06       	cpc	r7, r19
     6dc:	08 f0       	brcs	.+2      	; 0x6e0 <strftime+0x5e>
     6de:	cd c2       	rjmp	.+1434   	; 0xc7a <strftime+0x5f8>
     6e0:	d4 01       	movw	r26, r8
     6e2:	8c 91       	ld	r24, X
     6e4:	85 32       	cpi	r24, 0x25	; 37
     6e6:	09 f0       	breq	.+2      	; 0x6ea <strftime+0x68>
     6e8:	bc c2       	rjmp	.+1400   	; 0xc62 <strftime+0x5e0>
     6ea:	11 96       	adiw	r26, 0x01	; 1
     6ec:	1c 91       	ld	r17, X
     6ee:	15 34       	cpi	r17, 0x45	; 69
     6f0:	31 f0       	breq	.+12     	; 0x6fe <strftime+0x7c>
     6f2:	1f 34       	cpi	r17, 0x4F	; 79
     6f4:	21 f0       	breq	.+8      	; 0x6fe <strftime+0x7c>
     6f6:	b2 e0       	ldi	r27, 0x02	; 2
     6f8:	8b 0e       	add	r8, r27
     6fa:	91 1c       	adc	r9, r1
     6fc:	06 c0       	rjmp	.+12     	; 0x70a <strftime+0x88>
     6fe:	f4 01       	movw	r30, r8
     700:	12 81       	ldd	r17, Z+2	; 0x02
     702:	94 01       	movw	r18, r8
     704:	2d 5f       	subi	r18, 0xFD	; 253
     706:	3f 4f       	sbci	r19, 0xFF	; 255
     708:	49 01       	movw	r8, r18
     70a:	19 35       	cpi	r17, 0x59	; 89
     70c:	09 f4       	brne	.+2      	; 0x710 <strftime+0x8e>
     70e:	32 c2       	rjmp	.+1124   	; 0xb74 <strftime+0x4f2>
     710:	0c f0       	brlt	.+2      	; 0x714 <strftime+0x92>
     712:	60 c0       	rjmp	.+192    	; 0x7d4 <strftime+0x152>
     714:	19 34       	cpi	r17, 0x49	; 73
     716:	09 f4       	brne	.+2      	; 0x71a <strftime+0x98>
     718:	3f c1       	rjmp	.+638    	; 0x998 <strftime+0x316>
     71a:	44 f5       	brge	.+80     	; 0x76c <strftime+0xea>
     71c:	13 34       	cpi	r17, 0x43	; 67
     71e:	09 f4       	brne	.+2      	; 0x722 <strftime+0xa0>
     720:	e7 c0       	rjmp	.+462    	; 0x8f0 <strftime+0x26e>
     722:	54 f4       	brge	.+20     	; 0x738 <strftime+0xb6>
     724:	11 34       	cpi	r17, 0x41	; 65
     726:	09 f4       	brne	.+2      	; 0x72a <strftime+0xa8>
     728:	be c0       	rjmp	.+380    	; 0x8a6 <strftime+0x224>
     72a:	0c f0       	brlt	.+2      	; 0x72e <strftime+0xac>
     72c:	ca c0       	rjmp	.+404    	; 0x8c2 <strftime+0x240>
     72e:	15 32       	cpi	r17, 0x25	; 37
     730:	09 f0       	breq	.+2      	; 0x734 <strftime+0xb2>
     732:	74 c2       	rjmp	.+1256   	; 0xc1c <strftime+0x59a>
     734:	19 83       	std	Y+1, r17	; 0x01
     736:	75 c2       	rjmp	.+1258   	; 0xc22 <strftime+0x5a0>
     738:	16 34       	cpi	r17, 0x46	; 70
     73a:	09 f4       	brne	.+2      	; 0x73e <strftime+0xbc>
     73c:	ea c0       	rjmp	.+468    	; 0x912 <strftime+0x290>
     73e:	64 f4       	brge	.+24     	; 0x758 <strftime+0xd6>
     740:	14 34       	cpi	r17, 0x44	; 68
     742:	09 f0       	breq	.+2      	; 0x746 <strftime+0xc4>
     744:	6b c2       	rjmp	.+1238   	; 0xc1c <strftime+0x59a>
     746:	f7 01       	movw	r30, r14
     748:	86 81       	ldd	r24, Z+6	; 0x06
     74a:	97 81       	ldd	r25, Z+7	; 0x07
     74c:	b1 01       	movw	r22, r2
     74e:	0e 94 4e 7a 	call	0xf49c	; 0xf49c <__divmodhi4>
     752:	9f 93       	push	r25
     754:	8f 93       	push	r24
     756:	e7 c1       	rjmp	.+974    	; 0xb26 <strftime+0x4a4>
     758:	17 34       	cpi	r17, 0x47	; 71
     75a:	09 f4       	brne	.+2      	; 0x75e <strftime+0xdc>
     75c:	f8 c0       	rjmp	.+496    	; 0x94e <strftime+0x2cc>
     75e:	18 34       	cpi	r17, 0x48	; 72
     760:	09 f0       	breq	.+2      	; 0x764 <strftime+0xe2>
     762:	5c c2       	rjmp	.+1208   	; 0xc1c <strftime+0x59a>
     764:	d7 01       	movw	r26, r14
     766:	12 96       	adiw	r26, 0x02	; 2
     768:	8c 91       	ld	r24, X
     76a:	30 c1       	rjmp	.+608    	; 0x9cc <strftime+0x34a>
     76c:	14 35       	cpi	r17, 0x54	; 84
     76e:	09 f4       	brne	.+2      	; 0x772 <strftime+0xf0>
     770:	89 c1       	rjmp	.+786    	; 0xa84 <strftime+0x402>
     772:	64 f4       	brge	.+24     	; 0x78c <strftime+0x10a>
     774:	12 35       	cpi	r17, 0x52	; 82
     776:	09 f4       	brne	.+2      	; 0x77a <strftime+0xf8>
     778:	6e c1       	rjmp	.+732    	; 0xa56 <strftime+0x3d4>
     77a:	0c f0       	brlt	.+2      	; 0x77e <strftime+0xfc>
     77c:	25 c1       	rjmp	.+586    	; 0x9c8 <strftime+0x346>
     77e:	1d 34       	cpi	r17, 0x4D	; 77
     780:	09 f0       	breq	.+2      	; 0x784 <strftime+0x102>
     782:	4c c2       	rjmp	.+1176   	; 0xc1c <strftime+0x59a>
     784:	d7 01       	movw	r26, r14
     786:	11 96       	adiw	r26, 0x01	; 1
     788:	8c 91       	ld	r24, X
     78a:	20 c1       	rjmp	.+576    	; 0x9cc <strftime+0x34a>
     78c:	16 35       	cpi	r17, 0x56	; 86
     78e:	09 f4       	brne	.+2      	; 0x792 <strftime+0x110>
     790:	a5 c1       	rjmp	.+842    	; 0xadc <strftime+0x45a>
     792:	0c f4       	brge	.+2      	; 0x796 <strftime+0x114>
     794:	a1 c1       	rjmp	.+834    	; 0xad8 <strftime+0x456>
     796:	17 35       	cpi	r17, 0x57	; 87
     798:	09 f4       	brne	.+2      	; 0x79c <strftime+0x11a>
     79a:	b4 c1       	rjmp	.+872    	; 0xb04 <strftime+0x482>
     79c:	18 35       	cpi	r17, 0x58	; 88
     79e:	09 f0       	breq	.+2      	; 0x7a2 <strftime+0x120>
     7a0:	3d c2       	rjmp	.+1146   	; 0xc1c <strftime+0x59a>
     7a2:	f7 01       	movw	r30, r14
     7a4:	80 81       	ld	r24, Z
     7a6:	28 2f       	mov	r18, r24
     7a8:	08 2e       	mov	r0, r24
     7aa:	00 0c       	add	r0, r0
     7ac:	33 0b       	sbc	r19, r19
     7ae:	3f 93       	push	r19
     7b0:	8f 93       	push	r24
     7b2:	81 81       	ldd	r24, Z+1	; 0x01
     7b4:	28 2f       	mov	r18, r24
     7b6:	08 2e       	mov	r0, r24
     7b8:	00 0c       	add	r0, r0
     7ba:	33 0b       	sbc	r19, r19
     7bc:	3f 93       	push	r19
     7be:	8f 93       	push	r24
     7c0:	82 81       	ldd	r24, Z+2	; 0x02
     7c2:	28 2f       	mov	r18, r24
     7c4:	08 2e       	mov	r0, r24
     7c6:	00 0c       	add	r0, r0
     7c8:	33 0b       	sbc	r19, r19
     7ca:	3f 93       	push	r19
     7cc:	8f 93       	push	r24
     7ce:	88 ea       	ldi	r24, 0xA8	; 168
     7d0:	96 e4       	ldi	r25, 0x46	; 70
     7d2:	c0 c1       	rjmp	.+896    	; 0xb54 <strftime+0x4d2>
     7d4:	1d 36       	cpi	r17, 0x6D	; 109
     7d6:	09 f4       	brne	.+2      	; 0x7da <strftime+0x158>
     7d8:	f0 c0       	rjmp	.+480    	; 0x9ba <strftime+0x338>
     7da:	ac f5       	brge	.+106    	; 0x846 <strftime+0x1c4>
     7dc:	14 36       	cpi	r17, 0x64	; 100
     7de:	09 f4       	brne	.+2      	; 0x7e2 <strftime+0x160>
     7e0:	94 c0       	rjmp	.+296    	; 0x90a <strftime+0x288>
     7e2:	74 f4       	brge	.+28     	; 0x800 <strftime+0x17e>
     7e4:	12 36       	cpi	r17, 0x62	; 98
     7e6:	09 f4       	brne	.+2      	; 0x7ea <strftime+0x168>
     7e8:	66 c0       	rjmp	.+204    	; 0x8b6 <strftime+0x234>
     7ea:	0c f0       	brlt	.+2      	; 0x7ee <strftime+0x16c>
     7ec:	75 c0       	rjmp	.+234    	; 0x8d8 <strftime+0x256>
     7ee:	11 36       	cpi	r17, 0x61	; 97
     7f0:	09 f0       	breq	.+2      	; 0x7f4 <strftime+0x172>
     7f2:	14 c2       	rjmp	.+1064   	; 0xc1c <strftime+0x59a>
     7f4:	03 e0       	ldi	r16, 0x03	; 3
     7f6:	96 01       	movw	r18, r12
     7f8:	d7 01       	movw	r26, r14
     7fa:	14 96       	adiw	r26, 0x04	; 4
     7fc:	4c 91       	ld	r20, X
     7fe:	57 c0       	rjmp	.+174    	; 0x8ae <strftime+0x22c>
     800:	17 36       	cpi	r17, 0x67	; 103
     802:	09 f4       	brne	.+2      	; 0x806 <strftime+0x184>
     804:	a4 c0       	rjmp	.+328    	; 0x94e <strftime+0x2cc>
     806:	74 f4       	brge	.+28     	; 0x824 <strftime+0x1a2>
     808:	15 36       	cpi	r17, 0x65	; 101
     80a:	09 f0       	breq	.+2      	; 0x80e <strftime+0x18c>
     80c:	07 c2       	rjmp	.+1038   	; 0xc1c <strftime+0x59a>
     80e:	f7 01       	movw	r30, r14
     810:	83 81       	ldd	r24, Z+3	; 0x03
     812:	28 2f       	mov	r18, r24
     814:	08 2e       	mov	r0, r24
     816:	00 0c       	add	r0, r0
     818:	33 0b       	sbc	r19, r19
     81a:	3f 93       	push	r19
     81c:	8f 93       	push	r24
     81e:	85 e6       	ldi	r24, 0x65	; 101
     820:	96 e4       	ldi	r25, 0x46	; 70
     822:	c8 c0       	rjmp	.+400    	; 0x9b4 <strftime+0x332>
     824:	18 36       	cpi	r17, 0x68	; 104
     826:	09 f4       	brne	.+2      	; 0x82a <strftime+0x1a8>
     828:	46 c0       	rjmp	.+140    	; 0x8b6 <strftime+0x234>
     82a:	1a 36       	cpi	r17, 0x6A	; 106
     82c:	09 f0       	breq	.+2      	; 0x830 <strftime+0x1ae>
     82e:	f6 c1       	rjmp	.+1004   	; 0xc1c <strftime+0x59a>
     830:	d7 01       	movw	r26, r14
     832:	18 96       	adiw	r26, 0x08	; 8
     834:	8d 91       	ld	r24, X+
     836:	9c 91       	ld	r25, X
     838:	19 97       	sbiw	r26, 0x09	; 9
     83a:	01 96       	adiw	r24, 0x01	; 1
     83c:	9f 93       	push	r25
     83e:	8f 93       	push	r24
     840:	8b e7       	ldi	r24, 0x7B	; 123
     842:	96 e4       	ldi	r25, 0x46	; 70
     844:	b7 c0       	rjmp	.+366    	; 0x9b4 <strftime+0x332>
     846:	15 37       	cpi	r17, 0x75	; 117
     848:	09 f4       	brne	.+2      	; 0x84c <strftime+0x1ca>
     84a:	35 c1       	rjmp	.+618    	; 0xab6 <strftime+0x434>
     84c:	b4 f4       	brge	.+44     	; 0x87a <strftime+0x1f8>
     84e:	10 37       	cpi	r17, 0x70	; 112
     850:	09 f4       	brne	.+2      	; 0x854 <strftime+0x1d2>
     852:	c2 c0       	rjmp	.+388    	; 0x9d8 <strftime+0x356>
     854:	34 f4       	brge	.+12     	; 0x862 <strftime+0x1e0>
     856:	1e 36       	cpi	r17, 0x6E	; 110
     858:	09 f0       	breq	.+2      	; 0x85c <strftime+0x1da>
     85a:	e0 c1       	rjmp	.+960    	; 0xc1c <strftime+0x59a>
     85c:	8a e0       	ldi	r24, 0x0A	; 10
     85e:	89 83       	std	Y+1, r24	; 0x01
     860:	e0 c1       	rjmp	.+960    	; 0xc22 <strftime+0x5a0>
     862:	12 37       	cpi	r17, 0x72	; 114
     864:	09 f4       	brne	.+2      	; 0x868 <strftime+0x1e6>
     866:	c6 c0       	rjmp	.+396    	; 0x9f4 <strftime+0x372>
     868:	14 37       	cpi	r17, 0x74	; 116
     86a:	09 f0       	breq	.+2      	; 0x86e <strftime+0x1ec>
     86c:	d7 c1       	rjmp	.+942    	; 0xc1c <strftime+0x59a>
     86e:	61 e9       	ldi	r22, 0x91	; 145
     870:	76 e4       	ldi	r23, 0x46	; 70
     872:	c6 01       	movw	r24, r12
     874:	0e 94 7e 7c 	call	0xf8fc	; 0xf8fc <strcpy>
     878:	d4 c1       	rjmp	.+936    	; 0xc22 <strftime+0x5a0>
     87a:	18 37       	cpi	r17, 0x78	; 120
     87c:	09 f4       	brne	.+2      	; 0x880 <strftime+0x1fe>
     87e:	48 c1       	rjmp	.+656    	; 0xb10 <strftime+0x48e>
     880:	5c f4       	brge	.+22     	; 0x898 <strftime+0x216>
     882:	17 37       	cpi	r17, 0x77	; 119
     884:	09 f0       	breq	.+2      	; 0x888 <strftime+0x206>
     886:	ca c1       	rjmp	.+916    	; 0xc1c <strftime+0x59a>
     888:	f7 01       	movw	r30, r14
     88a:	84 81       	ldd	r24, Z+4	; 0x04
     88c:	28 2f       	mov	r18, r24
     88e:	08 2e       	mov	r0, r24
     890:	00 0c       	add	r0, r0
     892:	33 0b       	sbc	r19, r19
     894:	3f 93       	push	r19
     896:	74 c1       	rjmp	.+744    	; 0xb80 <strftime+0x4fe>
     898:	19 37       	cpi	r17, 0x79	; 121
     89a:	09 f4       	brne	.+2      	; 0x89e <strftime+0x21c>
     89c:	5e c1       	rjmp	.+700    	; 0xb5a <strftime+0x4d8>
     89e:	1a 37       	cpi	r17, 0x7A	; 122
     8a0:	09 f4       	brne	.+2      	; 0x8a4 <strftime+0x222>
     8a2:	7e c1       	rjmp	.+764    	; 0xba0 <strftime+0x51e>
     8a4:	bb c1       	rjmp	.+886    	; 0xc1c <strftime+0x59a>
     8a6:	0f ef       	ldi	r16, 0xFF	; 255
     8a8:	96 01       	movw	r18, r12
     8aa:	f7 01       	movw	r30, r14
     8ac:	44 81       	ldd	r20, Z+4	; 0x04
     8ae:	62 e3       	ldi	r22, 0x32	; 50
     8b0:	74 e0       	ldi	r23, 0x04	; 4
     8b2:	80 e0       	ldi	r24, 0x00	; 0
     8b4:	0d c0       	rjmp	.+26     	; 0x8d0 <strftime+0x24e>
     8b6:	03 e0       	ldi	r16, 0x03	; 3
     8b8:	96 01       	movw	r18, r12
     8ba:	d7 01       	movw	r26, r14
     8bc:	15 96       	adiw	r26, 0x05	; 5
     8be:	4c 91       	ld	r20, X
     8c0:	04 c0       	rjmp	.+8      	; 0x8ca <strftime+0x248>
     8c2:	0f ef       	ldi	r16, 0xFF	; 255
     8c4:	96 01       	movw	r18, r12
     8c6:	f7 01       	movw	r30, r14
     8c8:	45 81       	ldd	r20, Z+5	; 0x05
     8ca:	6b ed       	ldi	r22, 0xDB	; 219
     8cc:	73 e0       	ldi	r23, 0x03	; 3
     8ce:	80 e0       	ldi	r24, 0x00	; 0
     8d0:	0e 94 08 03 	call	0x610	; 0x610 <pgm_copystring>
     8d4:	90 e0       	ldi	r25, 0x00	; 0
     8d6:	a7 c1       	rjmp	.+846    	; 0xc26 <strftime+0x5a4>
     8d8:	b6 01       	movw	r22, r12
     8da:	c7 01       	movw	r24, r14
     8dc:	0e 94 a4 06 	call	0xd48	; 0xd48 <asctime_r>
     8e0:	f6 01       	movw	r30, r12
     8e2:	cf 01       	movw	r24, r30
     8e4:	8c 19       	sub	r24, r12
     8e6:	9d 09       	sbc	r25, r13
     8e8:	21 91       	ld	r18, Z+
     8ea:	21 11       	cpse	r18, r1
     8ec:	fa cf       	rjmp	.-12     	; 0x8e2 <strftime+0x260>
     8ee:	9b c1       	rjmp	.+822    	; 0xc26 <strftime+0x5a4>
     8f0:	d7 01       	movw	r26, r14
     8f2:	16 96       	adiw	r26, 0x06	; 6
     8f4:	8d 91       	ld	r24, X+
     8f6:	9c 91       	ld	r25, X
     8f8:	17 97       	sbiw	r26, 0x07	; 7
     8fa:	84 59       	subi	r24, 0x94	; 148
     8fc:	98 4f       	sbci	r25, 0xF8	; 248
     8fe:	b1 01       	movw	r22, r2
     900:	0e 94 4e 7a 	call	0xf49c	; 0xf49c <__divmodhi4>
     904:	7f 93       	push	r23
     906:	6f 93       	push	r22
     908:	3b c0       	rjmp	.+118    	; 0x980 <strftime+0x2fe>
     90a:	d7 01       	movw	r26, r14
     90c:	13 96       	adiw	r26, 0x03	; 3
     90e:	8c 91       	ld	r24, X
     910:	5d c0       	rjmp	.+186    	; 0x9cc <strftime+0x34a>
     912:	d7 01       	movw	r26, r14
     914:	13 96       	adiw	r26, 0x03	; 3
     916:	8c 91       	ld	r24, X
     918:	13 97       	sbiw	r26, 0x03	; 3
     91a:	28 2f       	mov	r18, r24
     91c:	08 2e       	mov	r0, r24
     91e:	00 0c       	add	r0, r0
     920:	33 0b       	sbc	r19, r19
     922:	3f 93       	push	r19
     924:	8f 93       	push	r24
     926:	15 96       	adiw	r26, 0x05	; 5
     928:	8c 91       	ld	r24, X
     92a:	15 97       	sbiw	r26, 0x05	; 5
     92c:	08 2e       	mov	r0, r24
     92e:	00 0c       	add	r0, r0
     930:	99 0b       	sbc	r25, r25
     932:	01 96       	adiw	r24, 0x01	; 1
     934:	9f 93       	push	r25
     936:	8f 93       	push	r24
     938:	16 96       	adiw	r26, 0x06	; 6
     93a:	8d 91       	ld	r24, X+
     93c:	9c 91       	ld	r25, X
     93e:	17 97       	sbiw	r26, 0x07	; 7
     940:	84 59       	subi	r24, 0x94	; 148
     942:	98 4f       	sbci	r25, 0xF8	; 248
     944:	9f 93       	push	r25
     946:	8f 93       	push	r24
     948:	89 e6       	ldi	r24, 0x69	; 105
     94a:	96 e4       	ldi	r25, 0x46	; 70
     94c:	03 c1       	rjmp	.+518    	; 0xb54 <strftime+0x4d2>
     94e:	d7 01       	movw	r26, r14
     950:	18 96       	adiw	r26, 0x08	; 8
     952:	6d 91       	ld	r22, X+
     954:	7c 91       	ld	r23, X
     956:	19 97       	sbiw	r26, 0x09	; 9
     958:	16 96       	adiw	r26, 0x06	; 6
     95a:	8d 91       	ld	r24, X+
     95c:	9c 91       	ld	r25, X
     95e:	17 97       	sbiw	r26, 0x07	; 7
     960:	ae 01       	movw	r20, r28
     962:	45 5e       	subi	r20, 0xE5	; 229
     964:	5f 4f       	sbci	r21, 0xFF	; 255
     966:	84 59       	subi	r24, 0x94	; 148
     968:	98 4f       	sbci	r25, 0xF8	; 248
     96a:	0e 94 fd 07 	call	0xffa	; 0xffa <iso_week_date_r>
     96e:	17 36       	cpi	r17, 0x67	; 103
     970:	51 f4       	brne	.+20     	; 0x986 <strftime+0x304>
     972:	8b 8d       	ldd	r24, Y+27	; 0x1b
     974:	9c 8d       	ldd	r25, Y+28	; 0x1c
     976:	b1 01       	movw	r22, r2
     978:	0e 94 4e 7a 	call	0xf49c	; 0xf49c <__divmodhi4>
     97c:	9f 93       	push	r25
     97e:	8f 93       	push	r24
     980:	e1 e7       	ldi	r30, 0x71	; 113
     982:	f6 e4       	ldi	r31, 0x46	; 70
     984:	a6 c0       	rjmp	.+332    	; 0xad2 <strftime+0x450>
     986:	8c 8d       	ldd	r24, Y+28	; 0x1c
     988:	8f 93       	push	r24
     98a:	8b 8d       	ldd	r24, Y+27	; 0x1b
     98c:	8f 93       	push	r24
     98e:	46 e7       	ldi	r20, 0x76	; 118
     990:	56 e4       	ldi	r21, 0x46	; 70
     992:	5f 93       	push	r21
     994:	4f 93       	push	r20
     996:	f9 c0       	rjmp	.+498    	; 0xb8a <strftime+0x508>
     998:	f7 01       	movw	r30, r14
     99a:	82 81       	ldd	r24, Z+2	; 0x02
     99c:	6c e0       	ldi	r22, 0x0C	; 12
     99e:	0e 94 74 83 	call	0x106e8	; 0x106e8 <__divmodqi4>
     9a2:	99 23       	and	r25, r25
     9a4:	21 f0       	breq	.+8      	; 0x9ae <strftime+0x32c>
     9a6:	89 2f       	mov	r24, r25
     9a8:	99 0f       	add	r25, r25
     9aa:	99 0b       	sbc	r25, r25
     9ac:	de c0       	rjmp	.+444    	; 0xb6a <strftime+0x4e8>
     9ae:	8c e0       	ldi	r24, 0x0C	; 12
     9b0:	90 e0       	ldi	r25, 0x00	; 0
     9b2:	db c0       	rjmp	.+438    	; 0xb6a <strftime+0x4e8>
     9b4:	9f 93       	push	r25
     9b6:	8f 93       	push	r24
     9b8:	e8 c0       	rjmp	.+464    	; 0xb8a <strftime+0x508>
     9ba:	f7 01       	movw	r30, r14
     9bc:	85 81       	ldd	r24, Z+5	; 0x05
     9be:	08 2e       	mov	r0, r24
     9c0:	00 0c       	add	r0, r0
     9c2:	99 0b       	sbc	r25, r25
     9c4:	01 96       	adiw	r24, 0x01	; 1
     9c6:	d1 c0       	rjmp	.+418    	; 0xb6a <strftime+0x4e8>
     9c8:	d7 01       	movw	r26, r14
     9ca:	8c 91       	ld	r24, X
     9cc:	28 2f       	mov	r18, r24
     9ce:	08 2e       	mov	r0, r24
     9d0:	00 0c       	add	r0, r0
     9d2:	33 0b       	sbc	r19, r19
     9d4:	3f 93       	push	r19
     9d6:	ca c0       	rjmp	.+404    	; 0xb6c <strftime+0x4ea>
     9d8:	81 e4       	ldi	r24, 0x41	; 65
     9da:	89 83       	std	Y+1, r24	; 0x01
     9dc:	f7 01       	movw	r30, r14
     9de:	82 81       	ldd	r24, Z+2	; 0x02
     9e0:	8c 30       	cpi	r24, 0x0C	; 12
     9e2:	14 f0       	brlt	.+4      	; 0x9e8 <strftime+0x366>
     9e4:	80 e5       	ldi	r24, 0x50	; 80
     9e6:	89 83       	std	Y+1, r24	; 0x01
     9e8:	8d e4       	ldi	r24, 0x4D	; 77
     9ea:	8a 83       	std	Y+2, r24	; 0x02
     9ec:	1b 82       	std	Y+3, r1	; 0x03
     9ee:	82 e0       	ldi	r24, 0x02	; 2
     9f0:	90 e0       	ldi	r25, 0x00	; 0
     9f2:	19 c1       	rjmp	.+562    	; 0xc26 <strftime+0x5a4>
     9f4:	d7 01       	movw	r26, r14
     9f6:	12 96       	adiw	r26, 0x02	; 2
     9f8:	8c 91       	ld	r24, X
     9fa:	6c e0       	ldi	r22, 0x0C	; 12
     9fc:	0e 94 74 83 	call	0x106e8	; 0x106e8 <__divmodqi4>
     a00:	99 23       	and	r25, r25
     a02:	21 f0       	breq	.+8      	; 0xa0c <strftime+0x38a>
     a04:	89 2f       	mov	r24, r25
     a06:	99 0f       	add	r25, r25
     a08:	99 0b       	sbc	r25, r25
     a0a:	02 c0       	rjmp	.+4      	; 0xa10 <strftime+0x38e>
     a0c:	8c e0       	ldi	r24, 0x0C	; 12
     a0e:	90 e0       	ldi	r25, 0x00	; 0
     a10:	f7 01       	movw	r30, r14
     a12:	20 81       	ld	r18, Z
     a14:	42 2f       	mov	r20, r18
     a16:	02 2e       	mov	r0, r18
     a18:	00 0c       	add	r0, r0
     a1a:	55 0b       	sbc	r21, r21
     a1c:	5f 93       	push	r21
     a1e:	2f 93       	push	r18
     a20:	21 81       	ldd	r18, Z+1	; 0x01
     a22:	42 2f       	mov	r20, r18
     a24:	02 2e       	mov	r0, r18
     a26:	00 0c       	add	r0, r0
     a28:	55 0b       	sbc	r21, r21
     a2a:	5f 93       	push	r21
     a2c:	2f 93       	push	r18
     a2e:	9f 93       	push	r25
     a30:	8f 93       	push	r24
     a32:	20 e8       	ldi	r18, 0x80	; 128
     a34:	36 e4       	ldi	r19, 0x46	; 70
     a36:	3f 93       	push	r19
     a38:	2f 93       	push	r18
     a3a:	df 92       	push	r13
     a3c:	cf 92       	push	r12
     a3e:	0e 94 ba 7c 	call	0xf974	; 0xf974 <sprintf>
     a42:	cd bf       	out	0x3d, r28	; 61
     a44:	de bf       	out	0x3e, r29	; 62
     a46:	f7 01       	movw	r30, r14
     a48:	22 81       	ldd	r18, Z+2	; 0x02
     a4a:	2c 30       	cpi	r18, 0x0C	; 12
     a4c:	0c f4       	brge	.+2      	; 0xa50 <strftime+0x3ce>
     a4e:	eb c0       	rjmp	.+470    	; 0xc26 <strftime+0x5a4>
     a50:	20 e5       	ldi	r18, 0x50	; 80
     a52:	2b 87       	std	Y+11, r18	; 0x0b
     a54:	e8 c0       	rjmp	.+464    	; 0xc26 <strftime+0x5a4>
     a56:	d7 01       	movw	r26, r14
     a58:	11 96       	adiw	r26, 0x01	; 1
     a5a:	8c 91       	ld	r24, X
     a5c:	11 97       	sbiw	r26, 0x01	; 1
     a5e:	28 2f       	mov	r18, r24
     a60:	08 2e       	mov	r0, r24
     a62:	00 0c       	add	r0, r0
     a64:	33 0b       	sbc	r19, r19
     a66:	3f 93       	push	r19
     a68:	8f 93       	push	r24
     a6a:	12 96       	adiw	r26, 0x02	; 2
     a6c:	8c 91       	ld	r24, X
     a6e:	28 2f       	mov	r18, r24
     a70:	08 2e       	mov	r0, r24
     a72:	00 0c       	add	r0, r0
     a74:	33 0b       	sbc	r19, r19
     a76:	3f 93       	push	r19
     a78:	8f 93       	push	r24
     a7a:	88 e9       	ldi	r24, 0x98	; 152
     a7c:	96 e4       	ldi	r25, 0x46	; 70
     a7e:	9f 93       	push	r25
     a80:	8f 93       	push	r24
     a82:	c5 c0       	rjmp	.+394    	; 0xc0e <strftime+0x58c>
     a84:	f7 01       	movw	r30, r14
     a86:	80 81       	ld	r24, Z
     a88:	28 2f       	mov	r18, r24
     a8a:	08 2e       	mov	r0, r24
     a8c:	00 0c       	add	r0, r0
     a8e:	33 0b       	sbc	r19, r19
     a90:	3f 93       	push	r19
     a92:	8f 93       	push	r24
     a94:	81 81       	ldd	r24, Z+1	; 0x01
     a96:	28 2f       	mov	r18, r24
     a98:	08 2e       	mov	r0, r24
     a9a:	00 0c       	add	r0, r0
     a9c:	33 0b       	sbc	r19, r19
     a9e:	3f 93       	push	r19
     aa0:	8f 93       	push	r24
     aa2:	82 81       	ldd	r24, Z+2	; 0x02
     aa4:	28 2f       	mov	r18, r24
     aa6:	08 2e       	mov	r0, r24
     aa8:	00 0c       	add	r0, r0
     aaa:	33 0b       	sbc	r19, r19
     aac:	3f 93       	push	r19
     aae:	8f 93       	push	r24
     ab0:	83 e9       	ldi	r24, 0x93	; 147
     ab2:	96 e4       	ldi	r25, 0x46	; 70
     ab4:	4f c0       	rjmp	.+158    	; 0xb54 <strftime+0x4d2>
     ab6:	d7 01       	movw	r26, r14
     ab8:	14 96       	adiw	r26, 0x04	; 4
     aba:	8c 91       	ld	r24, X
     abc:	08 2e       	mov	r0, r24
     abe:	00 0c       	add	r0, r0
     ac0:	99 0b       	sbc	r25, r25
     ac2:	00 97       	sbiw	r24, 0x00	; 0
     ac4:	11 f4       	brne	.+4      	; 0xaca <strftime+0x448>
     ac6:	87 e0       	ldi	r24, 0x07	; 7
     ac8:	90 e0       	ldi	r25, 0x00	; 0
     aca:	9f 93       	push	r25
     acc:	8f 93       	push	r24
     ace:	e2 ea       	ldi	r30, 0xA2	; 162
     ad0:	f6 e4       	ldi	r31, 0x46	; 70
     ad2:	ff 93       	push	r31
     ad4:	ef 93       	push	r30
     ad6:	59 c0       	rjmp	.+178    	; 0xb8a <strftime+0x508>
     ad8:	60 e0       	ldi	r22, 0x00	; 0
     ada:	15 c0       	rjmp	.+42     	; 0xb06 <strftime+0x484>
     adc:	d7 01       	movw	r26, r14
     ade:	18 96       	adiw	r26, 0x08	; 8
     ae0:	6d 91       	ld	r22, X+
     ae2:	7c 91       	ld	r23, X
     ae4:	19 97       	sbiw	r26, 0x09	; 9
     ae6:	16 96       	adiw	r26, 0x06	; 6
     ae8:	8d 91       	ld	r24, X+
     aea:	9c 91       	ld	r25, X
     aec:	17 97       	sbiw	r26, 0x07	; 7
     aee:	ae 01       	movw	r20, r28
     af0:	45 5e       	subi	r20, 0xE5	; 229
     af2:	5f 4f       	sbci	r21, 0xFF	; 255
     af4:	84 59       	subi	r24, 0x94	; 148
     af6:	98 4f       	sbci	r25, 0xF8	; 248
     af8:	0e 94 fd 07 	call	0xffa	; 0xffa <iso_week_date_r>
     afc:	8e 8d       	ldd	r24, Y+30	; 0x1e
     afe:	8f 93       	push	r24
     b00:	8d 8d       	ldd	r24, Y+29	; 0x1d
     b02:	34 c0       	rjmp	.+104    	; 0xb6c <strftime+0x4ea>
     b04:	61 e0       	ldi	r22, 0x01	; 1
     b06:	c7 01       	movw	r24, r14
     b08:	0e 94 69 06 	call	0xcd2	; 0xcd2 <week_of_year>
     b0c:	1f 92       	push	r1
     b0e:	2e c0       	rjmp	.+92     	; 0xb6c <strftime+0x4ea>
     b10:	d7 01       	movw	r26, r14
     b12:	16 96       	adiw	r26, 0x06	; 6
     b14:	8d 91       	ld	r24, X+
     b16:	9c 91       	ld	r25, X
     b18:	17 97       	sbiw	r26, 0x07	; 7
     b1a:	b1 01       	movw	r22, r2
     b1c:	0e 94 4e 7a 	call	0xf49c	; 0xf49c <__divmodhi4>
     b20:	9f 93       	push	r25
     b22:	8f 93       	push	r24
     b24:	f7 01       	movw	r30, r14
     b26:	83 81       	ldd	r24, Z+3	; 0x03
     b28:	28 2f       	mov	r18, r24
     b2a:	08 2e       	mov	r0, r24
     b2c:	00 0c       	add	r0, r0
     b2e:	33 0b       	sbc	r19, r19
     b30:	3f 93       	push	r19
     b32:	8f 93       	push	r24
     b34:	85 81       	ldd	r24, Z+5	; 0x05
     b36:	08 2e       	mov	r0, r24
     b38:	00 0c       	add	r0, r0
     b3a:	99 0b       	sbc	r25, r25
     b3c:	01 96       	adiw	r24, 0x01	; 1
     b3e:	9f 93       	push	r25
     b40:	8f 93       	push	r24
     b42:	26 e5       	ldi	r18, 0x56	; 86
     b44:	36 e4       	ldi	r19, 0x46	; 70
     b46:	3f 93       	push	r19
     b48:	2f 93       	push	r18
     b4a:	df 92       	push	r13
     b4c:	cf 92       	push	r12
     b4e:	0e 94 ba 7c 	call	0xf974	; 0xf974 <sprintf>
     b52:	61 c0       	rjmp	.+194    	; 0xc16 <strftime+0x594>
     b54:	9f 93       	push	r25
     b56:	8f 93       	push	r24
     b58:	f8 cf       	rjmp	.-16     	; 0xb4a <strftime+0x4c8>
     b5a:	d7 01       	movw	r26, r14
     b5c:	16 96       	adiw	r26, 0x06	; 6
     b5e:	8d 91       	ld	r24, X+
     b60:	9c 91       	ld	r25, X
     b62:	17 97       	sbiw	r26, 0x07	; 7
     b64:	b1 01       	movw	r22, r2
     b66:	0e 94 4e 7a 	call	0xf49c	; 0xf49c <__divmodhi4>
     b6a:	9f 93       	push	r25
     b6c:	8f 93       	push	r24
     b6e:	bf 92       	push	r11
     b70:	af 92       	push	r10
     b72:	0b c0       	rjmp	.+22     	; 0xb8a <strftime+0x508>
     b74:	f7 01       	movw	r30, r14
     b76:	86 81       	ldd	r24, Z+6	; 0x06
     b78:	97 81       	ldd	r25, Z+7	; 0x07
     b7a:	84 59       	subi	r24, 0x94	; 148
     b7c:	98 4f       	sbci	r25, 0xF8	; 248
     b7e:	9f 93       	push	r25
     b80:	8f 93       	push	r24
     b82:	25 ea       	ldi	r18, 0xA5	; 165
     b84:	36 e4       	ldi	r19, 0x46	; 70
     b86:	3f 93       	push	r19
     b88:	2f 93       	push	r18
     b8a:	df 92       	push	r13
     b8c:	cf 92       	push	r12
     b8e:	0e 94 ba 7c 	call	0xf974	; 0xf974 <sprintf>
     b92:	0f 90       	pop	r0
     b94:	0f 90       	pop	r0
     b96:	0f 90       	pop	r0
     b98:	0f 90       	pop	r0
     b9a:	0f 90       	pop	r0
     b9c:	0f 90       	pop	r0
     b9e:	43 c0       	rjmp	.+134    	; 0xc26 <strftime+0x5a4>
     ba0:	60 91 d9 4a 	lds	r22, 0x4AD9	; 0x804ad9 <__utc_offset>
     ba4:	70 91 da 4a 	lds	r23, 0x4ADA	; 0x804ada <__utc_offset+0x1>
     ba8:	80 91 db 4a 	lds	r24, 0x4ADB	; 0x804adb <__utc_offset+0x2>
     bac:	90 91 dc 4a 	lds	r25, 0x4ADC	; 0x804adc <__utc_offset+0x3>
     bb0:	2c e3       	ldi	r18, 0x3C	; 60
     bb2:	30 e0       	ldi	r19, 0x00	; 0
     bb4:	40 e0       	ldi	r20, 0x00	; 0
     bb6:	50 e0       	ldi	r21, 0x00	; 0
     bb8:	0e 94 84 7a 	call	0xf508	; 0xf508 <__divmodsi4>
     bbc:	89 01       	movw	r16, r18
     bbe:	9a 01       	movw	r18, r20
     bc0:	f8 01       	movw	r30, r16
     bc2:	d7 01       	movw	r26, r14
     bc4:	1a 96       	adiw	r26, 0x0a	; 10
     bc6:	8d 91       	ld	r24, X+
     bc8:	9c 91       	ld	r25, X
     bca:	1b 97       	sbiw	r26, 0x0b	; 11
     bcc:	6c e3       	ldi	r22, 0x3C	; 60
     bce:	70 e0       	ldi	r23, 0x00	; 0
     bd0:	0e 94 4e 7a 	call	0xf49c	; 0xf49c <__divmodhi4>
     bd4:	16 16       	cp	r1, r22
     bd6:	17 06       	cpc	r1, r23
     bd8:	1c f4       	brge	.+6      	; 0xbe0 <strftime+0x55e>
     bda:	fb 01       	movw	r30, r22
     bdc:	e0 0f       	add	r30, r16
     bde:	f1 1f       	adc	r31, r17
     be0:	cf 01       	movw	r24, r30
     be2:	6c e3       	ldi	r22, 0x3C	; 60
     be4:	70 e0       	ldi	r23, 0x00	; 0
     be6:	0e 94 4e 7a 	call	0xf49c	; 0xf49c <__divmodhi4>
     bea:	97 ff       	sbrs	r25, 7
     bec:	03 c0       	rjmp	.+6      	; 0xbf4 <strftime+0x572>
     bee:	91 95       	neg	r25
     bf0:	81 95       	neg	r24
     bf2:	91 09       	sbc	r25, r1
     bf4:	9f 93       	push	r25
     bf6:	8f 93       	push	r24
     bf8:	cf 01       	movw	r24, r30
     bfa:	6c e3       	ldi	r22, 0x3C	; 60
     bfc:	70 e0       	ldi	r23, 0x00	; 0
     bfe:	0e 94 4e 7a 	call	0xf49c	; 0xf49c <__divmodhi4>
     c02:	7f 93       	push	r23
     c04:	6f 93       	push	r22
     c06:	e7 eb       	ldi	r30, 0xB7	; 183
     c08:	f6 e4       	ldi	r31, 0x46	; 70
     c0a:	ff 93       	push	r31
     c0c:	ef 93       	push	r30
     c0e:	df 92       	push	r13
     c10:	cf 92       	push	r12
     c12:	0e 94 ba 7c 	call	0xf974	; 0xf974 <sprintf>
     c16:	cd bf       	out	0x3d, r28	; 61
     c18:	de bf       	out	0x3e, r29	; 62
     c1a:	05 c0       	rjmp	.+10     	; 0xc26 <strftime+0x5a4>
     c1c:	8f e3       	ldi	r24, 0x3F	; 63
     c1e:	89 83       	std	Y+1, r24	; 0x01
     c20:	1a 82       	std	Y+2, r1	; 0x02
     c22:	81 e0       	ldi	r24, 0x01	; 1
     c24:	90 e0       	ldi	r25, 0x00	; 0
     c26:	93 01       	movw	r18, r6
     c28:	28 0f       	add	r18, r24
     c2a:	39 1f       	adc	r19, r25
     c2c:	a9 a1       	ldd	r26, Y+33	; 0x21
     c2e:	ba a1       	ldd	r27, Y+34	; 0x22
     c30:	2a 17       	cp	r18, r26
     c32:	3b 07       	cpc	r19, r27
     c34:	98 f4       	brcc	.+38     	; 0xc5c <strftime+0x5da>
     c36:	d2 01       	movw	r26, r4
     c38:	f6 01       	movw	r30, r12
     c3a:	af 01       	movw	r20, r30
     c3c:	4c 19       	sub	r20, r12
     c3e:	5d 09       	sbc	r21, r13
     c40:	48 17       	cp	r20, r24
     c42:	59 07       	cpc	r21, r25
     c44:	1c f4       	brge	.+6      	; 0xc4c <strftime+0x5ca>
     c46:	41 91       	ld	r20, Z+
     c48:	4d 93       	st	X+, r20
     c4a:	f7 cf       	rjmp	.-18     	; 0xc3a <strftime+0x5b8>
     c4c:	97 ff       	sbrs	r25, 7
     c4e:	02 c0       	rjmp	.+4      	; 0xc54 <strftime+0x5d2>
     c50:	80 e0       	ldi	r24, 0x00	; 0
     c52:	90 e0       	ldi	r25, 0x00	; 0
     c54:	48 0e       	add	r4, r24
     c56:	59 1e       	adc	r5, r25
     c58:	39 01       	movw	r6, r18
     c5a:	3c cd       	rjmp	.-1416   	; 0x6d4 <strftime+0x52>
     c5c:	f2 01       	movw	r30, r4
     c5e:	10 82       	st	Z, r1
     c60:	0e c0       	rjmp	.+28     	; 0xc7e <strftime+0x5fc>
     c62:	d2 01       	movw	r26, r4
     c64:	8d 93       	st	X+, r24
     c66:	2d 01       	movw	r4, r26
     c68:	bf ef       	ldi	r27, 0xFF	; 255
     c6a:	6b 1a       	sub	r6, r27
     c6c:	7b 0a       	sbc	r7, r27
     c6e:	88 23       	and	r24, r24
     c70:	31 f0       	breq	.+12     	; 0xc7e <strftime+0x5fc>
     c72:	ef ef       	ldi	r30, 0xFF	; 255
     c74:	8e 1a       	sub	r8, r30
     c76:	9e 0a       	sbc	r9, r30
     c78:	2d cd       	rjmp	.-1446   	; 0x6d4 <strftime+0x52>
     c7a:	d2 01       	movw	r26, r4
     c7c:	1c 92       	st	X, r1
     c7e:	c3 01       	movw	r24, r6
     c80:	a2 96       	adiw	r28, 0x22	; 34
     c82:	cd bf       	out	0x3d, r28	; 61
     c84:	de bf       	out	0x3e, r29	; 62
     c86:	df 91       	pop	r29
     c88:	cf 91       	pop	r28
     c8a:	1f 91       	pop	r17
     c8c:	0f 91       	pop	r16
     c8e:	ff 90       	pop	r15
     c90:	ef 90       	pop	r14
     c92:	df 90       	pop	r13
     c94:	cf 90       	pop	r12
     c96:	bf 90       	pop	r11
     c98:	af 90       	pop	r10
     c9a:	9f 90       	pop	r9
     c9c:	8f 90       	pop	r8
     c9e:	7f 90       	pop	r7
     ca0:	6f 90       	pop	r6
     ca2:	5f 90       	pop	r5
     ca4:	4f 90       	pop	r4
     ca6:	3f 90       	pop	r3
     ca8:	2f 90       	pop	r2
     caa:	08 95       	ret

00000cac <time>:
     cac:	fc 01       	movw	r30, r24
     cae:	0f b6       	in	r0, 0x3f	; 63
     cb0:	f8 94       	cli
     cb2:	60 91 c9 4a 	lds	r22, 0x4AC9	; 0x804ac9 <__system_time>
     cb6:	70 91 ca 4a 	lds	r23, 0x4ACA	; 0x804aca <__system_time+0x1>
     cba:	80 91 cb 4a 	lds	r24, 0x4ACB	; 0x804acb <__system_time+0x2>
     cbe:	90 91 cc 4a 	lds	r25, 0x4ACC	; 0x804acc <__system_time+0x3>
     cc2:	0f be       	out	0x3f, r0	; 63
     cc4:	30 97       	sbiw	r30, 0x00	; 0
     cc6:	21 f0       	breq	.+8      	; 0xcd0 <time+0x24>
     cc8:	60 83       	st	Z, r22
     cca:	71 83       	std	Z+1, r23	; 0x01
     ccc:	82 83       	std	Z+2, r24	; 0x02
     cce:	93 83       	std	Z+3, r25	; 0x03
     cd0:	08 95       	ret

00000cd2 <week_of_year>:
     cd2:	fc 01       	movw	r30, r24
     cd4:	20 85       	ldd	r18, Z+8	; 0x08
     cd6:	31 85       	ldd	r19, Z+9	; 0x09
     cd8:	c9 01       	movw	r24, r18
     cda:	07 96       	adiw	r24, 0x07	; 7
     cdc:	44 81       	ldd	r20, Z+4	; 0x04
     cde:	84 1b       	sub	r24, r20
     ce0:	91 09       	sbc	r25, r1
     ce2:	47 fd       	sbrc	r20, 7
     ce4:	93 95       	inc	r25
     ce6:	86 0f       	add	r24, r22
     ce8:	91 1d       	adc	r25, r1
     cea:	e7 e0       	ldi	r30, 0x07	; 7
     cec:	f0 e0       	ldi	r31, 0x00	; 0
     cee:	bf 01       	movw	r22, r30
     cf0:	0e 94 4e 7a 	call	0xf49c	; 0xf49c <__divmodhi4>
     cf4:	a9 01       	movw	r20, r18
     cf6:	48 1b       	sub	r20, r24
     cf8:	59 0b       	sbc	r21, r25
     cfa:	ca 01       	movw	r24, r20
     cfc:	57 fd       	sbrc	r21, 7
     cfe:	06 c0       	rjmp	.+12     	; 0xd0c <week_of_year+0x3a>
     d00:	bf 01       	movw	r22, r30
     d02:	0e 94 4e 7a 	call	0xf49c	; 0xf49c <__divmodhi4>
     d06:	81 e0       	ldi	r24, 0x01	; 1
     d08:	86 0f       	add	r24, r22
     d0a:	08 95       	ret
     d0c:	80 e0       	ldi	r24, 0x00	; 0
     d0e:	08 95       	ret

00000d10 <system_tick>:
     d10:	8f 93       	push	r24
     d12:	8f b7       	in	r24, 0x3f	; 63
     d14:	8f 93       	push	r24
     d16:	f8 94       	cli
     d18:	80 91 c9 4a 	lds	r24, 0x4AC9	; 0x804ac9 <__system_time>
     d1c:	8f 5f       	subi	r24, 0xFF	; 255
     d1e:	80 93 c9 4a 	sts	0x4AC9, r24	; 0x804ac9 <__system_time>
     d22:	80 91 ca 4a 	lds	r24, 0x4ACA	; 0x804aca <__system_time+0x1>
     d26:	8f 4f       	sbci	r24, 0xFF	; 255
     d28:	80 93 ca 4a 	sts	0x4ACA, r24	; 0x804aca <__system_time+0x1>
     d2c:	80 91 cb 4a 	lds	r24, 0x4ACB	; 0x804acb <__system_time+0x2>
     d30:	8f 4f       	sbci	r24, 0xFF	; 255
     d32:	80 93 cb 4a 	sts	0x4ACB, r24	; 0x804acb <__system_time+0x2>
     d36:	80 91 cc 4a 	lds	r24, 0x4ACC	; 0x804acc <__system_time+0x3>
     d3a:	8f 4f       	sbci	r24, 0xFF	; 255
     d3c:	80 93 cc 4a 	sts	0x4ACC, r24	; 0x804acc <__system_time+0x3>
     d40:	8f 91       	pop	r24
     d42:	8f bf       	out	0x3f, r24	; 63
     d44:	8f 91       	pop	r24
     d46:	08 95       	ret

00000d48 <asctime_r>:
     d48:	cf 92       	push	r12
     d4a:	df 92       	push	r13
     d4c:	ef 92       	push	r14
     d4e:	ff 92       	push	r15
     d50:	0f 93       	push	r16
     d52:	1f 93       	push	r17
     d54:	cf 93       	push	r28
     d56:	df 93       	push	r29
     d58:	8c 01       	movw	r16, r24
     d5a:	eb 01       	movw	r28, r22
     d5c:	fc 01       	movw	r30, r24
     d5e:	84 81       	ldd	r24, Z+4	; 0x04
     d60:	b8 2f       	mov	r27, r24
     d62:	bb 0f       	add	r27, r27
     d64:	b8 0f       	add	r27, r24
     d66:	85 81       	ldd	r24, Z+5	; 0x05
     d68:	78 2f       	mov	r23, r24
     d6a:	77 0f       	add	r23, r23
     d6c:	78 0f       	add	r23, r24
     d6e:	9e 01       	movw	r18, r28
     d70:	40 e0       	ldi	r20, 0x00	; 0
     d72:	8b 2f       	mov	r24, r27
     d74:	84 0f       	add	r24, r20
     d76:	90 e0       	ldi	r25, 0x00	; 0
     d78:	a0 e0       	ldi	r26, 0x00	; 0
     d7a:	84 59       	subi	r24, 0x94	; 148
     d7c:	9b 4f       	sbci	r25, 0xFB	; 251
     d7e:	af 4f       	sbci	r26, 0xFF	; 255
     d80:	fc 01       	movw	r30, r24
     d82:	5a 2f       	mov	r21, r26
     d84:	0e 94 82 83 	call	0x10704	; 0x10704 <__xload_1>
     d88:	f9 01       	movw	r30, r18
     d8a:	61 93       	st	Z+, r22
     d8c:	9f 01       	movw	r18, r30
     d8e:	87 2f       	mov	r24, r23
     d90:	84 0f       	add	r24, r20
     d92:	90 e0       	ldi	r25, 0x00	; 0
     d94:	a0 e0       	ldi	r26, 0x00	; 0
     d96:	8e 57       	subi	r24, 0x7E	; 126
     d98:	9b 4f       	sbci	r25, 0xFB	; 251
     d9a:	af 4f       	sbci	r26, 0xFF	; 255
     d9c:	fc 01       	movw	r30, r24
     d9e:	5a 2f       	mov	r21, r26
     da0:	0e 94 82 83 	call	0x10704	; 0x10704 <__xload_1>
     da4:	f9 01       	movw	r30, r18
     da6:	63 83       	std	Z+3, r22	; 0x03
     da8:	4f 5f       	subi	r20, 0xFF	; 255
     daa:	43 30       	cpi	r20, 0x03	; 3
     dac:	11 f7       	brne	.-60     	; 0xd72 <asctime_r+0x2a>
     dae:	80 e2       	ldi	r24, 0x20	; 32
     db0:	8f 83       	std	Y+7, r24	; 0x07
     db2:	8b 83       	std	Y+3, r24	; 0x03
     db4:	be 01       	movw	r22, r28
     db6:	68 5f       	subi	r22, 0xF8	; 248
     db8:	7f 4f       	sbci	r23, 0xFF	; 255
     dba:	f8 01       	movw	r30, r16
     dbc:	83 81       	ldd	r24, Z+3	; 0x03
     dbe:	40 e2       	ldi	r20, 0x20	; 32
     dc0:	08 2e       	mov	r0, r24
     dc2:	00 0c       	add	r0, r0
     dc4:	99 0b       	sbc	r25, r25
     dc6:	0e 94 77 08 	call	0x10ee	; 0x10ee <__print_lz>
     dca:	be 01       	movw	r22, r28
     dcc:	65 5f       	subi	r22, 0xF5	; 245
     dce:	7f 4f       	sbci	r23, 0xFF	; 255
     dd0:	f8 01       	movw	r30, r16
     dd2:	82 81       	ldd	r24, Z+2	; 0x02
     dd4:	4a e3       	ldi	r20, 0x3A	; 58
     dd6:	08 2e       	mov	r0, r24
     dd8:	00 0c       	add	r0, r0
     dda:	99 0b       	sbc	r25, r25
     ddc:	0e 94 77 08 	call	0x10ee	; 0x10ee <__print_lz>
     de0:	be 01       	movw	r22, r28
     de2:	62 5f       	subi	r22, 0xF2	; 242
     de4:	7f 4f       	sbci	r23, 0xFF	; 255
     de6:	f8 01       	movw	r30, r16
     de8:	81 81       	ldd	r24, Z+1	; 0x01
     dea:	4a e3       	ldi	r20, 0x3A	; 58
     dec:	08 2e       	mov	r0, r24
     dee:	00 0c       	add	r0, r0
     df0:	99 0b       	sbc	r25, r25
     df2:	0e 94 77 08 	call	0x10ee	; 0x10ee <__print_lz>
     df6:	be 01       	movw	r22, r28
     df8:	6f 5e       	subi	r22, 0xEF	; 239
     dfa:	7f 4f       	sbci	r23, 0xFF	; 255
     dfc:	f8 01       	movw	r30, r16
     dfe:	80 81       	ld	r24, Z
     e00:	40 e2       	ldi	r20, 0x20	; 32
     e02:	08 2e       	mov	r0, r24
     e04:	00 0c       	add	r0, r0
     e06:	99 0b       	sbc	r25, r25
     e08:	0e 94 77 08 	call	0x10ee	; 0x10ee <__print_lz>
     e0c:	f8 01       	movw	r30, r16
     e0e:	86 81       	ldd	r24, Z+6	; 0x06
     e10:	97 81       	ldd	r25, Z+7	; 0x07
     e12:	64 e6       	ldi	r22, 0x64	; 100
     e14:	70 e0       	ldi	r23, 0x00	; 0
     e16:	84 59       	subi	r24, 0x94	; 148
     e18:	98 4f       	sbci	r25, 0xF8	; 248
     e1a:	0e 94 4e 7a 	call	0xf49c	; 0xf49c <__divmodhi4>
     e1e:	6b 01       	movw	r12, r22
     e20:	7c 01       	movw	r14, r24
     e22:	be 01       	movw	r22, r28
     e24:	6c 5e       	subi	r22, 0xEC	; 236
     e26:	7f 4f       	sbci	r23, 0xFF	; 255
     e28:	40 e2       	ldi	r20, 0x20	; 32
     e2a:	c6 01       	movw	r24, r12
     e2c:	0e 94 77 08 	call	0x10ee	; 0x10ee <__print_lz>
     e30:	be 01       	movw	r22, r28
     e32:	6a 5e       	subi	r22, 0xEA	; 234
     e34:	7f 4f       	sbci	r23, 0xFF	; 255
     e36:	40 e0       	ldi	r20, 0x00	; 0
     e38:	c7 01       	movw	r24, r14
     e3a:	df 91       	pop	r29
     e3c:	cf 91       	pop	r28
     e3e:	1f 91       	pop	r17
     e40:	0f 91       	pop	r16
     e42:	ff 90       	pop	r15
     e44:	ef 90       	pop	r14
     e46:	df 90       	pop	r13
     e48:	cf 90       	pop	r12
     e4a:	0c 94 77 08 	jmp	0x10ee	; 0x10ee <__print_lz>

00000e4e <gmtime_r>:
     e4e:	cf 92       	push	r12
     e50:	df 92       	push	r13
     e52:	ef 92       	push	r14
     e54:	ff 92       	push	r15
     e56:	0f 93       	push	r16
     e58:	1f 93       	push	r17
     e5a:	cf 93       	push	r28
     e5c:	df 93       	push	r29
     e5e:	cd b7       	in	r28, 0x3d	; 61
     e60:	de b7       	in	r29, 0x3e	; 62
     e62:	28 97       	sbiw	r28, 0x08	; 8
     e64:	cd bf       	out	0x3d, r28	; 61
     e66:	de bf       	out	0x3e, r29	; 62
     e68:	8b 01       	movw	r16, r22
     e6a:	fc 01       	movw	r30, r24
     e6c:	60 81       	ld	r22, Z
     e6e:	71 81       	ldd	r23, Z+1	; 0x01
     e70:	82 81       	ldd	r24, Z+2	; 0x02
     e72:	93 81       	ldd	r25, Z+3	; 0x03
     e74:	20 e8       	ldi	r18, 0x80	; 128
     e76:	31 e5       	ldi	r19, 0x51	; 81
     e78:	41 e0       	ldi	r20, 0x01	; 1
     e7a:	50 e0       	ldi	r21, 0x00	; 0
     e7c:	0e 94 62 7a 	call	0xf4c4	; 0xf4c4 <__udivmodsi4>
     e80:	69 01       	movw	r12, r18
     e82:	7a 01       	movw	r14, r20
     e84:	2c e3       	ldi	r18, 0x3C	; 60
     e86:	30 e0       	ldi	r19, 0x00	; 0
     e88:	40 e0       	ldi	r20, 0x00	; 0
     e8a:	50 e0       	ldi	r21, 0x00	; 0
     e8c:	0e 94 84 7a 	call	0xf508	; 0xf508 <__divmodsi4>
     e90:	29 83       	std	Y+1, r18	; 0x01
     e92:	3a 83       	std	Y+2, r19	; 0x02
     e94:	4b 83       	std	Y+3, r20	; 0x03
     e96:	5c 83       	std	Y+4, r21	; 0x04
     e98:	89 81       	ldd	r24, Y+1	; 0x01
     e9a:	9a 81       	ldd	r25, Y+2	; 0x02
     e9c:	ab 81       	ldd	r26, Y+3	; 0x03
     e9e:	bc 81       	ldd	r27, Y+4	; 0x04
     ea0:	f8 01       	movw	r30, r16
     ea2:	60 83       	st	Z, r22
     ea4:	6c e3       	ldi	r22, 0x3C	; 60
     ea6:	70 e0       	ldi	r23, 0x00	; 0
     ea8:	0e 94 4e 7a 	call	0xf49c	; 0xf49c <__divmodhi4>
     eac:	dc 01       	movw	r26, r24
     eae:	cb 01       	movw	r24, r22
     eb0:	f8 01       	movw	r30, r16
     eb2:	a1 83       	std	Z+1, r26	; 0x01
     eb4:	82 83       	std	Z+2, r24	; 0x02
     eb6:	c6 01       	movw	r24, r12
     eb8:	06 96       	adiw	r24, 0x06	; 6
     eba:	67 e0       	ldi	r22, 0x07	; 7
     ebc:	70 e0       	ldi	r23, 0x00	; 0
     ebe:	0e 94 3a 7a 	call	0xf474	; 0xf474 <__udivmodhi4>
     ec2:	84 83       	std	Z+4, r24	; 0x04
     ec4:	2d ea       	ldi	r18, 0xAD	; 173
     ec6:	3e e8       	ldi	r19, 0x8E	; 142
     ec8:	40 e0       	ldi	r20, 0x00	; 0
     eca:	50 e0       	ldi	r21, 0x00	; 0
     ecc:	c7 01       	movw	r24, r14
     ece:	b6 01       	movw	r22, r12
     ed0:	0e 94 84 7a 	call	0xf508	; 0xf508 <__divmodsi4>
     ed4:	29 83       	std	Y+1, r18	; 0x01
     ed6:	3a 83       	std	Y+2, r19	; 0x02
     ed8:	6d 83       	std	Y+5, r22	; 0x05
     eda:	7e 83       	std	Y+6, r23	; 0x06
     edc:	8f 83       	std	Y+7, r24	; 0x07
     ede:	98 87       	std	Y+8, r25	; 0x08
     ee0:	89 81       	ldd	r24, Y+1	; 0x01
     ee2:	9a 81       	ldd	r25, Y+2	; 0x02
     ee4:	24 e6       	ldi	r18, 0x64	; 100
     ee6:	28 9f       	mul	r18, r24
     ee8:	60 01       	movw	r12, r0
     eea:	29 9f       	mul	r18, r25
     eec:	d0 0c       	add	r13, r0
     eee:	11 24       	eor	r1, r1
     ef0:	6d 81       	ldd	r22, Y+5	; 0x05
     ef2:	7e 81       	ldd	r23, Y+6	; 0x06
     ef4:	8f 81       	ldd	r24, Y+7	; 0x07
     ef6:	98 85       	ldd	r25, Y+8	; 0x08
     ef8:	25 eb       	ldi	r18, 0xB5	; 181
     efa:	35 e0       	ldi	r19, 0x05	; 5
     efc:	40 e0       	ldi	r20, 0x00	; 0
     efe:	50 e0       	ldi	r21, 0x00	; 0
     f00:	0e 94 84 7a 	call	0xf508	; 0xf508 <__divmodsi4>
     f04:	29 83       	std	Y+1, r18	; 0x01
     f06:	3a 83       	std	Y+2, r19	; 0x02
     f08:	6d 83       	std	Y+5, r22	; 0x05
     f0a:	7e 83       	std	Y+6, r23	; 0x06
     f0c:	e9 80       	ldd	r14, Y+1	; 0x01
     f0e:	fa 80       	ldd	r15, Y+2	; 0x02
     f10:	ee 0c       	add	r14, r14
     f12:	ff 1c       	adc	r15, r15
     f14:	ee 0c       	add	r14, r14
     f16:	ff 1c       	adc	r15, r15
     f18:	ec 0c       	add	r14, r12
     f1a:	fd 1c       	adc	r15, r13
     f1c:	8d 81       	ldd	r24, Y+5	; 0x05
     f1e:	9e 81       	ldd	r25, Y+6	; 0x06
     f20:	f5 e6       	ldi	r31, 0x65	; 101
     f22:	ef 16       	cp	r14, r31
     f24:	f1 04       	cpc	r15, r1
     f26:	10 f0       	brcs	.+4      	; 0xf2c <gmtime_r+0xde>
     f28:	01 96       	adiw	r24, 0x01	; 1
     f2a:	04 c0       	rjmp	.+8      	; 0xf34 <gmtime_r+0xe6>
     f2c:	24 e6       	ldi	r18, 0x64	; 100
     f2e:	e2 16       	cp	r14, r18
     f30:	f1 04       	cpc	r15, r1
     f32:	19 f0       	breq	.+6      	; 0xf3a <gmtime_r+0xec>
     f34:	21 e0       	ldi	r18, 0x01	; 1
     f36:	30 e0       	ldi	r19, 0x00	; 0
     f38:	02 c0       	rjmp	.+4      	; 0xf3e <gmtime_r+0xf0>
     f3a:	20 e0       	ldi	r18, 0x00	; 0
     f3c:	30 e0       	ldi	r19, 0x00	; 0
     f3e:	a9 01       	movw	r20, r18
     f40:	44 59       	subi	r20, 0x94	; 148
     f42:	5e 4f       	sbci	r21, 0xFE	; 254
     f44:	48 17       	cp	r20, r24
     f46:	59 07       	cpc	r21, r25
     f48:	68 f4       	brcc	.+26     	; 0xf64 <gmtime_r+0x116>
     f4a:	6d e6       	ldi	r22, 0x6D	; 109
     f4c:	71 e0       	ldi	r23, 0x01	; 1
     f4e:	82 1b       	sub	r24, r18
     f50:	93 0b       	sbc	r25, r19
     f52:	0e 94 4e 7a 	call	0xf49c	; 0xf49c <__divmodhi4>
     f56:	dc 01       	movw	r26, r24
     f58:	cb 01       	movw	r24, r22
     f5a:	e8 0e       	add	r14, r24
     f5c:	f9 1e       	adc	r15, r25
     f5e:	cd 01       	movw	r24, r26
     f60:	20 e0       	ldi	r18, 0x00	; 0
     f62:	30 e0       	ldi	r19, 0x00	; 0
     f64:	44 e6       	ldi	r20, 0x64	; 100
     f66:	e4 0e       	add	r14, r20
     f68:	f1 1c       	adc	r15, r1
     f6a:	f8 01       	movw	r30, r16
     f6c:	e6 82       	std	Z+6, r14	; 0x06
     f6e:	f7 82       	std	Z+7, r15	; 0x07
     f70:	80 87       	std	Z+8, r24	; 0x08
     f72:	91 87       	std	Z+9, r25	; 0x09
     f74:	25 5c       	subi	r18, 0xC5	; 197
     f76:	3f 4f       	sbci	r19, 0xFF	; 255
     f78:	82 17       	cp	r24, r18
     f7a:	93 07       	cpc	r25, r19
     f7c:	48 f4       	brcc	.+18     	; 0xf90 <gmtime_r+0x142>
     f7e:	6f e1       	ldi	r22, 0x1F	; 31
     f80:	70 e0       	ldi	r23, 0x00	; 0
     f82:	0e 94 4e 7a 	call	0xf49c	; 0xf49c <__divmodhi4>
     f86:	dc 01       	movw	r26, r24
     f88:	cb 01       	movw	r24, r22
     f8a:	f8 01       	movw	r30, r16
     f8c:	85 83       	std	Z+5, r24	; 0x05
     f8e:	22 c0       	rjmp	.+68     	; 0xfd4 <gmtime_r+0x186>
     f90:	69 e9       	ldi	r22, 0x99	; 153
     f92:	70 e0       	ldi	r23, 0x00	; 0
     f94:	82 1b       	sub	r24, r18
     f96:	93 0b       	sbc	r25, r19
     f98:	0e 94 4e 7a 	call	0xf49c	; 0xf49c <__divmodhi4>
     f9c:	dc 01       	movw	r26, r24
     f9e:	cb 01       	movw	r24, r22
     fa0:	f8 2e       	mov	r15, r24
     fa2:	ff 0c       	add	r15, r15
     fa4:	ff 0c       	add	r15, r15
     fa6:	f8 0e       	add	r15, r24
     fa8:	6d e3       	ldi	r22, 0x3D	; 61
     faa:	70 e0       	ldi	r23, 0x00	; 0
     fac:	cd 01       	movw	r24, r26
     fae:	0e 94 4e 7a 	call	0xf49c	; 0xf49c <__divmodhi4>
     fb2:	dc 01       	movw	r26, r24
     fb4:	cb 01       	movw	r24, r22
     fb6:	e8 2e       	mov	r14, r24
     fb8:	ee 0c       	add	r14, r14
     fba:	6f e1       	ldi	r22, 0x1F	; 31
     fbc:	70 e0       	ldi	r23, 0x00	; 0
     fbe:	cd 01       	movw	r24, r26
     fc0:	0e 94 4e 7a 	call	0xf49c	; 0xf49c <__divmodhi4>
     fc4:	dc 01       	movw	r26, r24
     fc6:	cb 01       	movw	r24, r22
     fc8:	22 e0       	ldi	r18, 0x02	; 2
     fca:	28 0f       	add	r18, r24
     fcc:	f2 0e       	add	r15, r18
     fce:	fe 0c       	add	r15, r14
     fd0:	f8 01       	movw	r30, r16
     fd2:	f5 82       	std	Z+5, r15	; 0x05
     fd4:	a3 83       	std	Z+3, r26	; 0x03
     fd6:	f8 01       	movw	r30, r16
     fd8:	12 86       	std	Z+10, r1	; 0x0a
     fda:	13 86       	std	Z+11, r1	; 0x0b
     fdc:	83 81       	ldd	r24, Z+3	; 0x03
     fde:	8f 5f       	subi	r24, 0xFF	; 255
     fe0:	83 83       	std	Z+3, r24	; 0x03
     fe2:	28 96       	adiw	r28, 0x08	; 8
     fe4:	cd bf       	out	0x3d, r28	; 61
     fe6:	de bf       	out	0x3e, r29	; 62
     fe8:	df 91       	pop	r29
     fea:	cf 91       	pop	r28
     fec:	1f 91       	pop	r17
     fee:	0f 91       	pop	r16
     ff0:	ff 90       	pop	r15
     ff2:	ef 90       	pop	r14
     ff4:	df 90       	pop	r13
     ff6:	cf 90       	pop	r12
     ff8:	08 95       	ret

00000ffa <iso_week_date_r>:
     ffa:	cf 92       	push	r12
     ffc:	df 92       	push	r13
     ffe:	ef 92       	push	r14
    1000:	ff 92       	push	r15
    1002:	0f 93       	push	r16
    1004:	1f 93       	push	r17
    1006:	cf 93       	push	r28
    1008:	df 93       	push	r29
    100a:	8c 01       	movw	r16, r24
    100c:	7b 01       	movw	r14, r22
    100e:	ea 01       	movw	r28, r20
    1010:	88 83       	st	Y, r24
    1012:	99 83       	std	Y+1, r25	; 0x01
    1014:	0e 94 84 02 	call	0x508	; 0x508 <is_leap_year>
    1018:	28 2f       	mov	r18, r24
    101a:	a8 01       	movw	r20, r16
    101c:	40 5d       	subi	r20, 0xD0	; 208
    101e:	57 40       	sbci	r21, 0x07	; 7
    1020:	6d e6       	ldi	r22, 0x6D	; 109
    1022:	71 e0       	ldi	r23, 0x01	; 1
    1024:	46 9f       	mul	r20, r22
    1026:	c0 01       	movw	r24, r0
    1028:	47 9f       	mul	r20, r23
    102a:	90 0d       	add	r25, r0
    102c:	56 9f       	mul	r21, r22
    102e:	90 0d       	add	r25, r0
    1030:	11 24       	eor	r1, r1
    1032:	8e 0d       	add	r24, r14
    1034:	9f 1d       	adc	r25, r15
    1036:	41 15       	cp	r20, r1
    1038:	51 05       	cpc	r21, r1
    103a:	79 f0       	breq	.+30     	; 0x105a <iso_week_date_r+0x60>
    103c:	ba 01       	movw	r22, r20
    103e:	76 95       	lsr	r23
    1040:	67 95       	ror	r22
    1042:	76 95       	lsr	r23
    1044:	67 95       	ror	r22
    1046:	6f 5f       	subi	r22, 0xFF	; 255
    1048:	7f 4f       	sbci	r23, 0xFF	; 255
    104a:	86 0f       	add	r24, r22
    104c:	97 1f       	adc	r25, r23
    104e:	82 1b       	sub	r24, r18
    1050:	91 09       	sbc	r25, r1
    1052:	45 36       	cpi	r20, 0x65	; 101
    1054:	51 05       	cpc	r21, r1
    1056:	08 f0       	brcs	.+2      	; 0x105a <iso_week_date_r+0x60>
    1058:	01 97       	sbiw	r24, 0x01	; 1
    105a:	06 96       	adiw	r24, 0x06	; 6
    105c:	67 e0       	ldi	r22, 0x07	; 7
    105e:	70 e0       	ldi	r23, 0x00	; 0
    1060:	0e 94 3a 7a 	call	0xf474	; 0xf474 <__udivmodhi4>
    1064:	6c 01       	movw	r12, r24
    1066:	89 2b       	or	r24, r25
    1068:	19 f4       	brne	.+6      	; 0x1070 <iso_week_date_r+0x76>
    106a:	87 e0       	ldi	r24, 0x07	; 7
    106c:	c8 2e       	mov	r12, r24
    106e:	d1 2c       	mov	r13, r1
    1070:	cc 82       	std	Y+4, r12	; 0x04
    1072:	dd 82       	std	Y+5, r13	; 0x05
    1074:	c7 01       	movw	r24, r14
    1076:	0b 96       	adiw	r24, 0x0b	; 11
    1078:	8c 19       	sub	r24, r12
    107a:	9d 09       	sbc	r25, r13
    107c:	67 e0       	ldi	r22, 0x07	; 7
    107e:	70 e0       	ldi	r23, 0x00	; 0
    1080:	0e 94 4e 7a 	call	0xf49c	; 0xf49c <__divmodhi4>
    1084:	65 33       	cpi	r22, 0x35	; 53
    1086:	71 05       	cpc	r23, r1
    1088:	b1 f4       	brne	.+44     	; 0x10b6 <iso_week_date_r+0xbc>
    108a:	81 e0       	ldi	r24, 0x01	; 1
    108c:	c8 1a       	sub	r12, r24
    108e:	d1 08       	sbc	r13, r1
    1090:	ec 18       	sub	r14, r12
    1092:	fd 08       	sbc	r15, r13
    1094:	82 2f       	mov	r24, r18
    1096:	90 e0       	ldi	r25, 0x00	; 0
    1098:	84 59       	subi	r24, 0x94	; 148
    109a:	9e 4f       	sbci	r25, 0xFE	; 254
    109c:	23 e0       	ldi	r18, 0x03	; 3
    109e:	e2 0e       	add	r14, r18
    10a0:	f1 1c       	adc	r15, r1
    10a2:	8e 15       	cp	r24, r14
    10a4:	9f 05       	cpc	r25, r15
    10a6:	3c f4       	brge	.+14     	; 0x10b6 <iso_week_date_r+0xbc>
    10a8:	88 81       	ld	r24, Y
    10aa:	99 81       	ldd	r25, Y+1	; 0x01
    10ac:	01 96       	adiw	r24, 0x01	; 1
    10ae:	88 83       	st	Y, r24
    10b0:	99 83       	std	Y+1, r25	; 0x01
    10b2:	61 e0       	ldi	r22, 0x01	; 1
    10b4:	70 e0       	ldi	r23, 0x00	; 0
    10b6:	6a 83       	std	Y+2, r22	; 0x02
    10b8:	7b 83       	std	Y+3, r23	; 0x03
    10ba:	67 2b       	or	r22, r23
    10bc:	79 f4       	brne	.+30     	; 0x10dc <iso_week_date_r+0xe2>
    10be:	01 50       	subi	r16, 0x01	; 1
    10c0:	11 09       	sbc	r17, r1
    10c2:	c8 01       	movw	r24, r16
    10c4:	0e 94 84 02 	call	0x508	; 0x508 <is_leap_year>
    10c8:	68 2f       	mov	r22, r24
    10ca:	70 e0       	ldi	r23, 0x00	; 0
    10cc:	64 59       	subi	r22, 0x94	; 148
    10ce:	7e 4f       	sbci	r23, 0xFE	; 254
    10d0:	ae 01       	movw	r20, r28
    10d2:	c8 01       	movw	r24, r16
    10d4:	0e 94 fd 07 	call	0xffa	; 0xffa <iso_week_date_r>
    10d8:	cc 82       	std	Y+4, r12	; 0x04
    10da:	dd 82       	std	Y+5, r13	; 0x05
    10dc:	df 91       	pop	r29
    10de:	cf 91       	pop	r28
    10e0:	1f 91       	pop	r17
    10e2:	0f 91       	pop	r16
    10e4:	ff 90       	pop	r15
    10e6:	ef 90       	pop	r14
    10e8:	df 90       	pop	r13
    10ea:	cf 90       	pop	r12
    10ec:	08 95       	ret

000010ee <__print_lz>:
    10ee:	1f 93       	push	r17
    10f0:	cf 93       	push	r28
    10f2:	df 93       	push	r29
    10f4:	eb 01       	movw	r28, r22
    10f6:	14 2f       	mov	r17, r20
    10f8:	6a e0       	ldi	r22, 0x0A	; 10
    10fa:	70 e0       	ldi	r23, 0x00	; 0
    10fc:	0e 94 4e 7a 	call	0xf49c	; 0xf49c <__divmodhi4>
    1100:	60 5d       	subi	r22, 0xD0	; 208
    1102:	68 83       	st	Y, r22
    1104:	80 5d       	subi	r24, 0xD0	; 208
    1106:	89 83       	std	Y+1, r24	; 0x01
    1108:	1a 83       	std	Y+2, r17	; 0x02
    110a:	df 91       	pop	r29
    110c:	cf 91       	pop	r28
    110e:	1f 91       	pop	r17
    1110:	08 95       	ret

00001112 <atmel_start_init>:

/**
 * Initializes MCU, drivers and middleware in the project
 **/
void atmel_start_init(void)
{
    1112:	cf 93       	push	r28
    1114:	df 93       	push	r29
    1116:	cd b7       	in	r28, 0x3d	; 61
    1118:	de b7       	in	r29, 0x3e	; 62
	system_init();
    111a:	0e 94 f2 3d 	call	0x7be4	; 0x7be4 <system_init>
}
    111e:	00 00       	nop
    1120:	df 91       	pop	r29
    1122:	cf 91       	pop	r28
    1124:	08 95       	ret

00001126 <__vector_30>:

extern USART_Number_t g_serialbus_usart_number;
extern USART_Number_t g_linkbus_usart_number;

ISR(TCB2_INT_vect)
{
    1126:	1f 92       	push	r1
    1128:	0f 92       	push	r0
    112a:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    112e:	0f 92       	push	r0
    1130:	11 24       	eor	r1, r1
    1132:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    1136:	0f 92       	push	r0
    1138:	2f 93       	push	r18
    113a:	8f 93       	push	r24
    113c:	9f 93       	push	r25
    113e:	ef 93       	push	r30
    1140:	ff 93       	push	r31
    1142:	cf 93       	push	r28
    1144:	df 93       	push	r29
    1146:	cd b7       	in	r28, 0x3d	; 61
    1148:	de b7       	in	r29, 0x3e	; 62
	if(TCB2.INTFLAGS & TCB_CAPT_bm)
    114a:	80 e2       	ldi	r24, 0x20	; 32
    114c:	9b e0       	ldi	r25, 0x0B	; 11
    114e:	fc 01       	movw	r30, r24
    1150:	86 81       	ldd	r24, Z+6	; 0x06
    1152:	88 2f       	mov	r24, r24
    1154:	90 e0       	ldi	r25, 0x00	; 0
    1156:	81 70       	andi	r24, 0x01	; 1
    1158:	99 27       	eor	r25, r25
    115a:	21 e0       	ldi	r18, 0x01	; 1
    115c:	89 2b       	or	r24, r25
    115e:	09 f4       	brne	.+2      	; 0x1162 <__vector_30+0x3c>
    1160:	20 e0       	ldi	r18, 0x00	; 0
    1162:	22 23       	and	r18, r18
    1164:	29 f0       	breq	.+10     	; 0x1170 <__vector_30+0x4a>
    {
        TCB2.INTFLAGS = TCB_CAPT_bm;
    1166:	80 e2       	ldi	r24, 0x20	; 32
    1168:	9b e0       	ldi	r25, 0x0B	; 11
    116a:	21 e0       	ldi	r18, 0x01	; 1
    116c:	fc 01       	movw	r30, r24
    116e:	26 83       	std	Z+6, r18	; 0x06
    }
}
    1170:	00 00       	nop
    1172:	df 91       	pop	r29
    1174:	cf 91       	pop	r28
    1176:	ff 91       	pop	r31
    1178:	ef 91       	pop	r30
    117a:	9f 91       	pop	r25
    117c:	8f 91       	pop	r24
    117e:	2f 91       	pop	r18
    1180:	0f 90       	pop	r0
    1182:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    1186:	0f 90       	pop	r0
    1188:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    118c:	0f 90       	pop	r0
    118e:	1f 90       	pop	r1
    1190:	18 95       	reti

00001192 <__vector_19>:

ISR(USART0_RXC_vect)
{
    1192:	1f 92       	push	r1
    1194:	0f 92       	push	r0
    1196:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    119a:	0f 92       	push	r0
    119c:	11 24       	eor	r1, r1
    119e:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    11a2:	0f 92       	push	r0
    11a4:	2f 93       	push	r18
    11a6:	3f 93       	push	r19
    11a8:	4f 93       	push	r20
    11aa:	5f 93       	push	r21
    11ac:	6f 93       	push	r22
    11ae:	7f 93       	push	r23
    11b0:	8f 93       	push	r24
    11b2:	9f 93       	push	r25
    11b4:	af 93       	push	r26
    11b6:	bf 93       	push	r27
    11b8:	ef 93       	push	r30
    11ba:	ff 93       	push	r31
    11bc:	cf 93       	push	r28
    11be:	df 93       	push	r29
    11c0:	1f 92       	push	r1
    11c2:	cd b7       	in	r28, 0x3d	; 61
    11c4:	de b7       	in	r29, 0x3e	; 62
	uint8_t rx_char = USART0_get_data();
    11c6:	0e 94 c5 72 	call	0xe58a	; 0xe58a <USART0_get_data>
    11ca:	89 83       	std	Y+1, r24	; 0x01
	
	if(g_linkbus_usart_number == USART_0)
    11cc:	80 91 2d 40 	lds	r24, 0x402D	; 0x80402d <g_linkbus_usart_number>
    11d0:	88 23       	and	r24, r24
    11d2:	19 f4       	brne	.+6      	; 0x11da <__vector_19+0x48>
	{
		linkbus_Rx(rx_char);
    11d4:	89 81       	ldd	r24, Y+1	; 0x01
    11d6:	0e 94 9f 0d 	call	0x1b3e	; 0x1b3e <_Z10linkbus_Rxh>
	}
	
	if(g_serialbus_usart_number == USART_0)
    11da:	80 91 30 40 	lds	r24, 0x4030	; 0x804030 <g_serialbus_usart_number>
    11de:	88 23       	and	r24, r24
    11e0:	19 f4       	brne	.+6      	; 0x11e8 <__vector_19+0x56>
	{
		serial_Rx(rx_char);
    11e2:	89 81       	ldd	r24, Y+1	; 0x01
    11e4:	0e 94 51 09 	call	0x12a2	; 0x12a2 <_Z9serial_Rxh>
	}
}
    11e8:	00 00       	nop
    11ea:	0f 90       	pop	r0
    11ec:	df 91       	pop	r29
    11ee:	cf 91       	pop	r28
    11f0:	ff 91       	pop	r31
    11f2:	ef 91       	pop	r30
    11f4:	bf 91       	pop	r27
    11f6:	af 91       	pop	r26
    11f8:	9f 91       	pop	r25
    11fa:	8f 91       	pop	r24
    11fc:	7f 91       	pop	r23
    11fe:	6f 91       	pop	r22
    1200:	5f 91       	pop	r21
    1202:	4f 91       	pop	r20
    1204:	3f 91       	pop	r19
    1206:	2f 91       	pop	r18
    1208:	0f 90       	pop	r0
    120a:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    120e:	0f 90       	pop	r0
    1210:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    1214:	0f 90       	pop	r0
    1216:	1f 90       	pop	r1
    1218:	18 95       	reti

0000121a <__vector_55>:

ISR(USART4_RXC_vect)
{
    121a:	1f 92       	push	r1
    121c:	0f 92       	push	r0
    121e:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    1222:	0f 92       	push	r0
    1224:	11 24       	eor	r1, r1
    1226:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    122a:	0f 92       	push	r0
    122c:	2f 93       	push	r18
    122e:	3f 93       	push	r19
    1230:	4f 93       	push	r20
    1232:	5f 93       	push	r21
    1234:	6f 93       	push	r22
    1236:	7f 93       	push	r23
    1238:	8f 93       	push	r24
    123a:	9f 93       	push	r25
    123c:	af 93       	push	r26
    123e:	bf 93       	push	r27
    1240:	ef 93       	push	r30
    1242:	ff 93       	push	r31
    1244:	cf 93       	push	r28
    1246:	df 93       	push	r29
    1248:	1f 92       	push	r1
    124a:	cd b7       	in	r28, 0x3d	; 61
    124c:	de b7       	in	r29, 0x3e	; 62
	uint8_t rx_char = USART4_get_data();
    124e:	0e 94 d8 73 	call	0xe7b0	; 0xe7b0 <USART4_get_data>
    1252:	89 83       	std	Y+1, r24	; 0x01
	
	if(g_linkbus_usart_number == USART_4)
    1254:	80 91 2d 40 	lds	r24, 0x402D	; 0x80402d <g_linkbus_usart_number>
    1258:	84 30       	cpi	r24, 0x04	; 4
    125a:	19 f4       	brne	.+6      	; 0x1262 <__vector_55+0x48>
	{
		linkbus_Rx(rx_char);
    125c:	89 81       	ldd	r24, Y+1	; 0x01
    125e:	0e 94 9f 0d 	call	0x1b3e	; 0x1b3e <_Z10linkbus_Rxh>
	}
	
	if(g_serialbus_usart_number == USART_4)
    1262:	80 91 30 40 	lds	r24, 0x4030	; 0x804030 <g_serialbus_usart_number>
    1266:	84 30       	cpi	r24, 0x04	; 4
    1268:	19 f4       	brne	.+6      	; 0x1270 <__vector_55+0x56>
	{
		serial_Rx(rx_char);
    126a:	89 81       	ldd	r24, Y+1	; 0x01
    126c:	0e 94 51 09 	call	0x12a2	; 0x12a2 <_Z9serial_Rxh>
	}
}
    1270:	00 00       	nop
    1272:	0f 90       	pop	r0
    1274:	df 91       	pop	r29
    1276:	cf 91       	pop	r28
    1278:	ff 91       	pop	r31
    127a:	ef 91       	pop	r30
    127c:	bf 91       	pop	r27
    127e:	af 91       	pop	r26
    1280:	9f 91       	pop	r25
    1282:	8f 91       	pop	r24
    1284:	7f 91       	pop	r23
    1286:	6f 91       	pop	r22
    1288:	5f 91       	pop	r21
    128a:	4f 91       	pop	r20
    128c:	3f 91       	pop	r19
    128e:	2f 91       	pop	r18
    1290:	0f 90       	pop	r0
    1292:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    1296:	0f 90       	pop	r0
    1298:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    129c:	0f 90       	pop	r0
    129e:	1f 90       	pop	r1
    12a0:	18 95       	reti

000012a2 <_Z9serial_Rxh>:

void serial_Rx(uint8_t rx_char)
{
    12a2:	cf 93       	push	r28
    12a4:	df 93       	push	r29
    12a6:	cd b7       	in	r28, 0x3d	; 61
    12a8:	de b7       	in	r29, 0x3e	; 62
    12aa:	2a 97       	sbiw	r28, 0x0a	; 10
    12ac:	cd bf       	out	0x3d, r28	; 61
    12ae:	de bf       	out	0x3e, r29	; 62
    12b0:	8a 87       	std	Y+10, r24	; 0x0a
	static uint8_t field_index = 0;
	static uint8_t field_len = 0;
	static int msg_ID = 0;
	static bool receiving_msg = false;

	if(!buff)
    12b2:	80 91 c2 46 	lds	r24, 0x46C2	; 0x8046c2 <__data_end>
    12b6:	90 91 c3 46 	lds	r25, 0x46C3	; 0x8046c3 <__data_end+0x1>
    12ba:	89 2b       	or	r24, r25
    12bc:	31 f4       	brne	.+12     	; 0x12ca <_Z9serial_Rxh+0x28>
	{
		buff = nextEmptySBRxBuffer();
    12be:	0e 94 33 61 	call	0xc266	; 0xc266 <nextEmptySBRxBuffer>
    12c2:	80 93 c2 46 	sts	0x46C2, r24	; 0x8046c2 <__data_end>
    12c6:	90 93 c3 46 	sts	0x46C3, r25	; 0x8046c3 <__data_end+0x1>
	}

	if(buff)
    12ca:	80 91 c2 46 	lds	r24, 0x46C2	; 0x8046c2 <__data_end>
    12ce:	90 91 c3 46 	lds	r25, 0x46C3	; 0x8046c3 <__data_end+0x1>
    12d2:	89 2b       	or	r24, r25
    12d4:	09 f4       	brne	.+2      	; 0x12d8 <_Z9serial_Rxh+0x36>
    12d6:	5e c2       	rjmp	.+1212   	; 0x1794 <_Z9serial_Rxh+0x4f2>
	{
		static uint8_t ignoreCount = 0;
		rx_char = toupper(rx_char);
    12d8:	8a 85       	ldd	r24, Y+10	; 0x0a
    12da:	88 2f       	mov	r24, r24
    12dc:	90 e0       	ldi	r25, 0x00	; 0
    12de:	0e 94 50 7c 	call	0xf8a0	; 0xf8a0 <toupper>
    12e2:	8a 87       	std	Y+10, r24	; 0x0a

		if(ignoreCount)
    12e4:	80 91 c4 46 	lds	r24, 0x46C4	; 0x8046c4 <_ZZ9serial_RxhE11ignoreCount>
    12e8:	88 23       	and	r24, r24
    12ea:	39 f0       	breq	.+14     	; 0x12fa <_Z9serial_Rxh+0x58>
		{
			rx_char = '\0';
    12ec:	1a 86       	std	Y+10, r1	; 0x0a
			ignoreCount--;
    12ee:	80 91 c4 46 	lds	r24, 0x46C4	; 0x8046c4 <_ZZ9serial_RxhE11ignoreCount>
    12f2:	81 50       	subi	r24, 0x01	; 1
    12f4:	80 93 c4 46 	sts	0x46C4, r24	; 0x8046c4 <_ZZ9serial_RxhE11ignoreCount>
			{
				sb_echo_char(rx_char);
			}
		}
	}	
}
    12f8:	4d c2       	rjmp	.+1178   	; 0x1794 <_Z9serial_Rxh+0x4f2>
		if(ignoreCount)
		{
			rx_char = '\0';
			ignoreCount--;
		}
		else if(rx_char == 0x1B)    /* Ignore ESC sequences */
    12fa:	8a 85       	ldd	r24, Y+10	; 0x0a
    12fc:	8b 31       	cpi	r24, 0x1B	; 27
    12fe:	91 f4       	brne	.+36     	; 0x1324 <_Z9serial_Rxh+0x82>
		{
			rx_char = '\0';
    1300:	1a 86       	std	Y+10, r1	; 0x0a

			if(charIndex < SERIALBUS_MAX_MSG_FIELD_LENGTH)
    1302:	80 91 c5 46 	lds	r24, 0x46C5	; 0x8046c5 <_ZZ9serial_RxhE9charIndex>
    1306:	84 31       	cpi	r24, 0x14	; 20
    1308:	48 f4       	brcc	.+18     	; 0x131c <_Z9serial_Rxh+0x7a>
			{
				rx_char = textBuff[charIndex];
    130a:	80 91 c5 46 	lds	r24, 0x46C5	; 0x8046c5 <_ZZ9serial_RxhE9charIndex>
    130e:	88 2f       	mov	r24, r24
    1310:	90 e0       	ldi	r25, 0x00	; 0
    1312:	8a 53       	subi	r24, 0x3A	; 58
    1314:	99 4b       	sbci	r25, 0xB9	; 185
    1316:	fc 01       	movw	r30, r24
    1318:	80 81       	ld	r24, Z
    131a:	8a 87       	std	Y+10, r24	; 0x0a
			}

			ignoreCount = 2;        /* throw out the next two characters */
    131c:	82 e0       	ldi	r24, 0x02	; 2
    131e:	80 93 c4 46 	sts	0x46C4, r24	; 0x8046c4 <_ZZ9serial_RxhE11ignoreCount>
			{
				sb_echo_char(rx_char);
			}
		}
	}	
}
    1322:	38 c2       	rjmp	.+1136   	; 0x1794 <_Z9serial_Rxh+0x4f2>
				rx_char = textBuff[charIndex];
			}

			ignoreCount = 2;        /* throw out the next two characters */
		}
		else if(rx_char == 0x0D)    /* Handle carriage return */
    1324:	8a 85       	ldd	r24, Y+10	; 0x0a
    1326:	8d 30       	cpi	r24, 0x0D	; 13
    1328:	09 f0       	breq	.+2      	; 0x132c <_Z9serial_Rxh+0x8a>
    132a:	60 c0       	rjmp	.+192    	; 0x13ec <_Z9serial_Rxh+0x14a>
		{
			if(receiving_msg)
    132c:	80 91 f8 46 	lds	r24, 0x46F8	; 0x8046f8 <_ZZ9serial_RxhE13receiving_msg>
    1330:	88 23       	and	r24, r24
    1332:	09 f4       	brne	.+2      	; 0x1336 <_Z9serial_Rxh+0x94>
    1334:	41 c0       	rjmp	.+130    	; 0x13b8 <_Z9serial_Rxh+0x116>
			{
				if(charIndex > 0)
    1336:	80 91 c5 46 	lds	r24, 0x46C5	; 0x8046c5 <_ZZ9serial_RxhE9charIndex>
    133a:	88 23       	and	r24, r24
    133c:	d1 f1       	breq	.+116    	; 0x13b2 <_Z9serial_Rxh+0x110>
				{
					buff->type = SERIALBUS_MSG_QUERY;
    133e:	80 91 c2 46 	lds	r24, 0x46C2	; 0x8046c2 <__data_end>
    1342:	90 91 c3 46 	lds	r25, 0x46C3	; 0x8046c3 <__data_end+0x1>
    1346:	22 e0       	ldi	r18, 0x02	; 2
    1348:	fc 01       	movw	r30, r24
    134a:	20 83       	st	Z, r18
					buff->id = (SBMessageID)msg_ID;
    134c:	80 91 c2 46 	lds	r24, 0x46C2	; 0x8046c2 <__data_end>
    1350:	90 91 c3 46 	lds	r25, 0x46C3	; 0x8046c3 <__data_end+0x1>
    1354:	20 91 f9 46 	lds	r18, 0x46F9	; 0x8046f9 <_ZZ9serial_RxhE6msg_ID>
    1358:	30 91 fa 46 	lds	r19, 0x46FA	; 0x8046fa <_ZZ9serial_RxhE6msg_ID+0x1>
    135c:	fc 01       	movw	r30, r24
    135e:	21 83       	std	Z+1, r18	; 0x01
    1360:	32 83       	std	Z+2, r19	; 0x02

					if(field_index > 0) /* terminate the last field */
    1362:	80 91 fb 46 	lds	r24, 0x46FB	; 0x8046fb <_ZZ9serial_RxhE11field_index>
    1366:	88 23       	and	r24, r24
    1368:	e1 f0       	breq	.+56     	; 0x13a2 <_Z9serial_Rxh+0x100>
					{
						buff->fields[field_index - 1][field_len] = 0;
    136a:	40 91 c2 46 	lds	r20, 0x46C2	; 0x8046c2 <__data_end>
    136e:	50 91 c3 46 	lds	r21, 0x46C3	; 0x8046c3 <__data_end+0x1>
    1372:	80 91 fb 46 	lds	r24, 0x46FB	; 0x8046fb <_ZZ9serial_RxhE11field_index>
    1376:	88 2f       	mov	r24, r24
    1378:	90 e0       	ldi	r25, 0x00	; 0
    137a:	bc 01       	movw	r22, r24
    137c:	61 50       	subi	r22, 0x01	; 1
    137e:	71 09       	sbc	r23, r1
    1380:	80 91 fc 46 	lds	r24, 0x46FC	; 0x8046fc <_ZZ9serial_RxhE9field_len>
    1384:	88 2f       	mov	r24, r24
    1386:	90 e0       	ldi	r25, 0x00	; 0
    1388:	e4 e1       	ldi	r30, 0x14	; 20
    138a:	e6 9f       	mul	r30, r22
    138c:	90 01       	movw	r18, r0
    138e:	e7 9f       	mul	r30, r23
    1390:	30 0d       	add	r19, r0
    1392:	11 24       	eor	r1, r1
    1394:	24 0f       	add	r18, r20
    1396:	35 1f       	adc	r19, r21
    1398:	82 0f       	add	r24, r18
    139a:	93 1f       	adc	r25, r19
    139c:	03 96       	adiw	r24, 0x03	; 3
    139e:	fc 01       	movw	r30, r24
    13a0:	10 82       	st	Z, r1
					}

					textBuff[charIndex] = '\0'; /* terminate last-message buffer */
    13a2:	80 91 c5 46 	lds	r24, 0x46C5	; 0x8046c5 <_ZZ9serial_RxhE9charIndex>
    13a6:	88 2f       	mov	r24, r24
    13a8:	90 e0       	ldi	r25, 0x00	; 0
    13aa:	8a 53       	subi	r24, 0x3A	; 58
    13ac:	99 4b       	sbci	r25, 0xB9	; 185
    13ae:	fc 01       	movw	r30, r24
    13b0:	10 82       	st	Z, r1
				}

				sb_send_NewLine();
    13b2:	0e 94 24 63 	call	0xc648	; 0xc648 <sb_send_NewLine>
    13b6:	09 c0       	rjmp	.+18     	; 0x13ca <_Z9serial_Rxh+0x128>
			}
			else
			{
				buff->id = SB_INVALID_MESSAGE; /* print help message */
    13b8:	80 91 c2 46 	lds	r24, 0x46C2	; 0x8046c2 <__data_end>
    13bc:	90 91 c3 46 	lds	r25, 0x46C3	; 0x8046c3 <__data_end+0x1>
    13c0:	2f ef       	ldi	r18, 0xFF	; 255
    13c2:	3f ef       	ldi	r19, 0xFF	; 255
    13c4:	fc 01       	movw	r30, r24
    13c6:	21 83       	std	Z+1, r18	; 0x01
    13c8:	32 83       	std	Z+2, r19	; 0x02
			}

			charIndex = 0;
    13ca:	10 92 c5 46 	sts	0x46C5, r1	; 0x8046c5 <_ZZ9serial_RxhE9charIndex>
			field_len = 0;
    13ce:	10 92 fc 46 	sts	0x46FC, r1	; 0x8046fc <_ZZ9serial_RxhE9field_len>
			msg_ID = LB_MESSAGE_EMPTY;
    13d2:	10 92 f9 46 	sts	0x46F9, r1	; 0x8046f9 <_ZZ9serial_RxhE6msg_ID>
    13d6:	10 92 fa 46 	sts	0x46FA, r1	; 0x8046fa <_ZZ9serial_RxhE6msg_ID+0x1>

			field_index = 0;
    13da:	10 92 fb 46 	sts	0x46FB, r1	; 0x8046fb <_ZZ9serial_RxhE11field_index>
			buff = NULL;
    13de:	10 92 c2 46 	sts	0x46C2, r1	; 0x8046c2 <__data_end>
    13e2:	10 92 c3 46 	sts	0x46C3, r1	; 0x8046c3 <__data_end+0x1>

			receiving_msg = false;
    13e6:	10 92 f8 46 	sts	0x46F8, r1	; 0x8046f8 <_ZZ9serial_RxhE13receiving_msg>
			{
				sb_echo_char(rx_char);
			}
		}
	}	
}
    13ea:	d4 c1       	rjmp	.+936    	; 0x1794 <_Z9serial_Rxh+0x4f2>
			field_index = 0;
			buff = NULL;

			receiving_msg = false;
		}
		else if(rx_char)
    13ec:	8a 85       	ldd	r24, Y+10	; 0x0a
    13ee:	88 23       	and	r24, r24
    13f0:	09 f4       	brne	.+2      	; 0x13f4 <_Z9serial_Rxh+0x152>
    13f2:	d0 c1       	rjmp	.+928    	; 0x1794 <_Z9serial_Rxh+0x4f2>
		{
			textBuff[charIndex] = rx_char;  /* hold the characters for re-use */
    13f4:	80 91 c5 46 	lds	r24, 0x46C5	; 0x8046c5 <_ZZ9serial_RxhE9charIndex>
    13f8:	88 2f       	mov	r24, r24
    13fa:	90 e0       	ldi	r25, 0x00	; 0
    13fc:	8a 53       	subi	r24, 0x3A	; 58
    13fe:	99 4b       	sbci	r25, 0xB9	; 185
    1400:	2a 85       	ldd	r18, Y+10	; 0x0a
    1402:	fc 01       	movw	r30, r24
    1404:	20 83       	st	Z, r18

			if(charIndex)
    1406:	80 91 c5 46 	lds	r24, 0x46C5	; 0x8046c5 <_ZZ9serial_RxhE9charIndex>
    140a:	88 23       	and	r24, r24
    140c:	09 f4       	brne	.+2      	; 0x1410 <_Z9serial_Rxh+0x16e>
    140e:	7c c1       	rjmp	.+760    	; 0x1708 <_Z9serial_Rxh+0x466>
			{
				if(rx_char == 0x7F)         /* Handle backspace */
    1410:	8a 85       	ldd	r24, Y+10	; 0x0a
    1412:	8f 37       	cpi	r24, 0x7F	; 127
    1414:	09 f0       	breq	.+2      	; 0x1418 <_Z9serial_Rxh+0x176>
    1416:	a1 c0       	rjmp	.+322    	; 0x155a <_Z9serial_Rxh+0x2b8>
				{
					charIndex--;
    1418:	80 91 c5 46 	lds	r24, 0x46C5	; 0x8046c5 <_ZZ9serial_RxhE9charIndex>
    141c:	81 50       	subi	r24, 0x01	; 1
    141e:	80 93 c5 46 	sts	0x46C5, r24	; 0x8046c5 <_ZZ9serial_RxhE9charIndex>
					if(field_index == 0)
    1422:	80 91 fb 46 	lds	r24, 0x46FB	; 0x8046fb <_ZZ9serial_RxhE11field_index>
    1426:	88 23       	and	r24, r24
    1428:	29 f5       	brne	.+74     	; 0x1474 <_Z9serial_Rxh+0x1d2>
					{
						msg_ID -= textBuff[charIndex];
    142a:	20 91 f9 46 	lds	r18, 0x46F9	; 0x8046f9 <_ZZ9serial_RxhE6msg_ID>
    142e:	30 91 fa 46 	lds	r19, 0x46FA	; 0x8046fa <_ZZ9serial_RxhE6msg_ID+0x1>
    1432:	80 91 c5 46 	lds	r24, 0x46C5	; 0x8046c5 <_ZZ9serial_RxhE9charIndex>
    1436:	88 2f       	mov	r24, r24
    1438:	90 e0       	ldi	r25, 0x00	; 0
    143a:	8a 53       	subi	r24, 0x3A	; 58
    143c:	99 4b       	sbci	r25, 0xB9	; 185
    143e:	fc 01       	movw	r30, r24
    1440:	80 81       	ld	r24, Z
    1442:	88 2f       	mov	r24, r24
    1444:	90 e0       	ldi	r25, 0x00	; 0
    1446:	a9 01       	movw	r20, r18
    1448:	48 1b       	sub	r20, r24
    144a:	59 0b       	sbc	r21, r25
    144c:	ca 01       	movw	r24, r20
    144e:	80 93 f9 46 	sts	0x46F9, r24	; 0x8046f9 <_ZZ9serial_RxhE6msg_ID>
    1452:	90 93 fa 46 	sts	0x46FA, r25	; 0x8046fa <_ZZ9serial_RxhE6msg_ID+0x1>
						msg_ID /= 10;
    1456:	80 91 f9 46 	lds	r24, 0x46F9	; 0x8046f9 <_ZZ9serial_RxhE6msg_ID>
    145a:	90 91 fa 46 	lds	r25, 0x46FA	; 0x8046fa <_ZZ9serial_RxhE6msg_ID+0x1>
    145e:	2a e0       	ldi	r18, 0x0A	; 10
    1460:	30 e0       	ldi	r19, 0x00	; 0
    1462:	b9 01       	movw	r22, r18
    1464:	0e 94 4e 7a 	call	0xf49c	; 0xf49c <__divmodhi4>
    1468:	cb 01       	movw	r24, r22
    146a:	80 93 f9 46 	sts	0x46F9, r24	; 0x8046f9 <_ZZ9serial_RxhE6msg_ID>
    146e:	90 93 fa 46 	sts	0x46FA, r25	; 0x8046fa <_ZZ9serial_RxhE6msg_ID+0x1>
    1472:	63 c0       	rjmp	.+198    	; 0x153a <_Z9serial_Rxh+0x298>
					}
					else if(field_len)
    1474:	80 91 fc 46 	lds	r24, 0x46FC	; 0x8046fc <_ZZ9serial_RxhE9field_len>
    1478:	88 23       	and	r24, r24
    147a:	11 f1       	breq	.+68     	; 0x14c0 <_Z9serial_Rxh+0x21e>
					{
						field_len--;
    147c:	80 91 fc 46 	lds	r24, 0x46FC	; 0x8046fc <_ZZ9serial_RxhE9field_len>
    1480:	81 50       	subi	r24, 0x01	; 1
    1482:	80 93 fc 46 	sts	0x46FC, r24	; 0x8046fc <_ZZ9serial_RxhE9field_len>
						buff->fields[field_index - 1][field_len] = '\0';
    1486:	40 91 c2 46 	lds	r20, 0x46C2	; 0x8046c2 <__data_end>
    148a:	50 91 c3 46 	lds	r21, 0x46C3	; 0x8046c3 <__data_end+0x1>
    148e:	80 91 fb 46 	lds	r24, 0x46FB	; 0x8046fb <_ZZ9serial_RxhE11field_index>
    1492:	88 2f       	mov	r24, r24
    1494:	90 e0       	ldi	r25, 0x00	; 0
    1496:	bc 01       	movw	r22, r24
    1498:	61 50       	subi	r22, 0x01	; 1
    149a:	71 09       	sbc	r23, r1
    149c:	80 91 fc 46 	lds	r24, 0x46FC	; 0x8046fc <_ZZ9serial_RxhE9field_len>
    14a0:	88 2f       	mov	r24, r24
    14a2:	90 e0       	ldi	r25, 0x00	; 0
    14a4:	e4 e1       	ldi	r30, 0x14	; 20
    14a6:	e6 9f       	mul	r30, r22
    14a8:	90 01       	movw	r18, r0
    14aa:	e7 9f       	mul	r30, r23
    14ac:	30 0d       	add	r19, r0
    14ae:	11 24       	eor	r1, r1
    14b0:	24 0f       	add	r18, r20
    14b2:	35 1f       	adc	r19, r21
    14b4:	82 0f       	add	r24, r18
    14b6:	93 1f       	adc	r25, r19
    14b8:	03 96       	adiw	r24, 0x03	; 3
    14ba:	fc 01       	movw	r30, r24
    14bc:	10 82       	st	Z, r1
    14be:	3d c0       	rjmp	.+122    	; 0x153a <_Z9serial_Rxh+0x298>
					}
					else if(textBuff[charIndex] == ' ')
    14c0:	80 91 c5 46 	lds	r24, 0x46C5	; 0x8046c5 <_ZZ9serial_RxhE9charIndex>
    14c4:	88 2f       	mov	r24, r24
    14c6:	90 e0       	ldi	r25, 0x00	; 0
    14c8:	8a 53       	subi	r24, 0x3A	; 58
    14ca:	99 4b       	sbci	r25, 0xB9	; 185
    14cc:	fc 01       	movw	r30, r24
    14ce:	80 81       	ld	r24, Z
    14d0:	80 32       	cpi	r24, 0x20	; 32
    14d2:	d9 f4       	brne	.+54     	; 0x150a <_Z9serial_Rxh+0x268>
					{
						field_index--;
    14d4:	80 91 fb 46 	lds	r24, 0x46FB	; 0x8046fb <_ZZ9serial_RxhE11field_index>
    14d8:	81 50       	subi	r24, 0x01	; 1
    14da:	80 93 fb 46 	sts	0x46FB, r24	; 0x8046fb <_ZZ9serial_RxhE11field_index>
						field_len = strlen(buff->fields[field_index]);
    14de:	20 91 c2 46 	lds	r18, 0x46C2	; 0x8046c2 <__data_end>
    14e2:	30 91 c3 46 	lds	r19, 0x46C3	; 0x8046c3 <__data_end+0x1>
    14e6:	80 91 fb 46 	lds	r24, 0x46FB	; 0x8046fb <_ZZ9serial_RxhE11field_index>
    14ea:	48 2f       	mov	r20, r24
    14ec:	50 e0       	ldi	r21, 0x00	; 0
    14ee:	64 e1       	ldi	r22, 0x14	; 20
    14f0:	64 9f       	mul	r22, r20
    14f2:	c0 01       	movw	r24, r0
    14f4:	65 9f       	mul	r22, r21
    14f6:	90 0d       	add	r25, r0
    14f8:	11 24       	eor	r1, r1
    14fa:	03 96       	adiw	r24, 0x03	; 3
    14fc:	82 0f       	add	r24, r18
    14fe:	93 1f       	adc	r25, r19
    1500:	0e 94 85 7c 	call	0xf90a	; 0xf90a <strlen>
    1504:	80 93 fc 46 	sts	0x46FC, r24	; 0x8046fc <_ZZ9serial_RxhE9field_len>
    1508:	18 c0       	rjmp	.+48     	; 0x153a <_Z9serial_Rxh+0x298>
					}
					else
					{
						buff->fields[field_index][0] = '\0';
    150a:	20 91 c2 46 	lds	r18, 0x46C2	; 0x8046c2 <__data_end>
    150e:	30 91 c3 46 	lds	r19, 0x46C3	; 0x8046c3 <__data_end+0x1>
    1512:	80 91 fb 46 	lds	r24, 0x46FB	; 0x8046fb <_ZZ9serial_RxhE11field_index>
    1516:	48 2f       	mov	r20, r24
    1518:	50 e0       	ldi	r21, 0x00	; 0
    151a:	64 e1       	ldi	r22, 0x14	; 20
    151c:	64 9f       	mul	r22, r20
    151e:	c0 01       	movw	r24, r0
    1520:	65 9f       	mul	r22, r21
    1522:	90 0d       	add	r25, r0
    1524:	11 24       	eor	r1, r1
    1526:	82 0f       	add	r24, r18
    1528:	93 1f       	adc	r25, r19
    152a:	03 96       	adiw	r24, 0x03	; 3
    152c:	fc 01       	movw	r30, r24
    152e:	10 82       	st	Z, r1
						field_index--;
    1530:	80 91 fb 46 	lds	r24, 0x46FB	; 0x8046fb <_ZZ9serial_RxhE11field_index>
    1534:	81 50       	subi	r24, 0x01	; 1
    1536:	80 93 fb 46 	sts	0x46FB, r24	; 0x8046fb <_ZZ9serial_RxhE11field_index>
					}

					textBuff[charIndex] = '\0'; /* replace deleted char with null */
    153a:	80 91 c5 46 	lds	r24, 0x46C5	; 0x8046c5 <_ZZ9serial_RxhE9charIndex>
    153e:	88 2f       	mov	r24, r24
    1540:	90 e0       	ldi	r25, 0x00	; 0
    1542:	8a 53       	subi	r24, 0x3A	; 58
    1544:	99 4b       	sbci	r25, 0xB9	; 185
    1546:	fc 01       	movw	r30, r24
    1548:	10 82       	st	Z, r1

					if(charIndex == 0)
    154a:	80 91 c5 46 	lds	r24, 0x46C5	; 0x8046c5 <_ZZ9serial_RxhE9charIndex>
    154e:	88 23       	and	r24, r24
    1550:	09 f0       	breq	.+2      	; 0x1554 <_Z9serial_Rxh+0x2b2>
    1552:	1a c1       	rjmp	.+564    	; 0x1788 <_Z9serial_Rxh+0x4e6>
					{
						receiving_msg = false;
    1554:	10 92 f8 46 	sts	0x46F8, r1	; 0x8046f8 <_ZZ9serial_RxhE13receiving_msg>
    1558:	17 c1       	rjmp	.+558    	; 0x1788 <_Z9serial_Rxh+0x4e6>
					}
				}
				else
				{
					if(rx_char == ' ')
    155a:	8a 85       	ldd	r24, Y+10	; 0x0a
    155c:	80 32       	cpi	r24, 0x20	; 32
    155e:	09 f0       	breq	.+2      	; 0x1562 <_Z9serial_Rxh+0x2c0>
    1560:	55 c0       	rjmp	.+170    	; 0x160c <_Z9serial_Rxh+0x36a>
					{
						if((textBuff[charIndex - 1] == ' ') || ((field_index + 1) >= LINKBUS_MAX_MSG_NUMBER_OF_FIELDS))
    1562:	80 91 c5 46 	lds	r24, 0x46C5	; 0x8046c5 <_ZZ9serial_RxhE9charIndex>
    1566:	88 2f       	mov	r24, r24
    1568:	90 e0       	ldi	r25, 0x00	; 0
    156a:	01 97       	sbiw	r24, 0x01	; 1
    156c:	8a 53       	subi	r24, 0x3A	; 58
    156e:	99 4b       	sbci	r25, 0xB9	; 185
    1570:	fc 01       	movw	r30, r24
    1572:	80 81       	ld	r24, Z
    1574:	80 32       	cpi	r24, 0x20	; 32
    1576:	39 f0       	breq	.+14     	; 0x1586 <_Z9serial_Rxh+0x2e4>
    1578:	80 91 fb 46 	lds	r24, 0x46FB	; 0x8046fb <_ZZ9serial_RxhE11field_index>
    157c:	88 2f       	mov	r24, r24
    157e:	90 e0       	ldi	r25, 0x00	; 0
    1580:	01 96       	adiw	r24, 0x01	; 1
    1582:	03 97       	sbiw	r24, 0x03	; 3
    1584:	14 f0       	brlt	.+4      	; 0x158a <_Z9serial_Rxh+0x2e8>
						{
							rx_char = '\0';
    1586:	1a 86       	std	Y+10, r1	; 0x0a
    1588:	ff c0       	rjmp	.+510    	; 0x1788 <_Z9serial_Rxh+0x4e6>
						}
						else
						{
							if(field_index > 0)
    158a:	80 91 fb 46 	lds	r24, 0x46FB	; 0x8046fb <_ZZ9serial_RxhE11field_index>
    158e:	88 23       	and	r24, r24
    1590:	e1 f0       	breq	.+56     	; 0x15ca <_Z9serial_Rxh+0x328>
							{
								buff->fields[field_index - 1][field_len] = '\0';
    1592:	40 91 c2 46 	lds	r20, 0x46C2	; 0x8046c2 <__data_end>
    1596:	50 91 c3 46 	lds	r21, 0x46C3	; 0x8046c3 <__data_end+0x1>
    159a:	80 91 fb 46 	lds	r24, 0x46FB	; 0x8046fb <_ZZ9serial_RxhE11field_index>
    159e:	88 2f       	mov	r24, r24
    15a0:	90 e0       	ldi	r25, 0x00	; 0
    15a2:	bc 01       	movw	r22, r24
    15a4:	61 50       	subi	r22, 0x01	; 1
    15a6:	71 09       	sbc	r23, r1
    15a8:	80 91 fc 46 	lds	r24, 0x46FC	; 0x8046fc <_ZZ9serial_RxhE9field_len>
    15ac:	88 2f       	mov	r24, r24
    15ae:	90 e0       	ldi	r25, 0x00	; 0
    15b0:	e4 e1       	ldi	r30, 0x14	; 20
    15b2:	e6 9f       	mul	r30, r22
    15b4:	90 01       	movw	r18, r0
    15b6:	e7 9f       	mul	r30, r23
    15b8:	30 0d       	add	r19, r0
    15ba:	11 24       	eor	r1, r1
    15bc:	24 0f       	add	r18, r20
    15be:	35 1f       	adc	r19, r21
    15c0:	82 0f       	add	r24, r18
    15c2:	93 1f       	adc	r25, r19
    15c4:	03 96       	adiw	r24, 0x03	; 3
    15c6:	fc 01       	movw	r30, r24
    15c8:	10 82       	st	Z, r1
							}

							field_index++;
    15ca:	80 91 fb 46 	lds	r24, 0x46FB	; 0x8046fb <_ZZ9serial_RxhE11field_index>
    15ce:	8f 5f       	subi	r24, 0xFF	; 255
    15d0:	80 93 fb 46 	sts	0x46FB, r24	; 0x8046fb <_ZZ9serial_RxhE11field_index>
							field_len = 0;
    15d4:	10 92 fc 46 	sts	0x46FC, r1	; 0x8046fc <_ZZ9serial_RxhE9field_len>
							charIndex = MIN(charIndex + 1, (LINKBUS_MAX_MSG_LENGTH - 1));
    15d8:	80 91 c5 46 	lds	r24, 0x46C5	; 0x8046c5 <_ZZ9serial_RxhE9charIndex>
    15dc:	88 2f       	mov	r24, r24
    15de:	90 e0       	ldi	r25, 0x00	; 0
    15e0:	01 96       	adiw	r24, 0x01	; 1
    15e2:	8a 83       	std	Y+2, r24	; 0x02
    15e4:	9b 83       	std	Y+3, r25	; 0x03
    15e6:	81 e3       	ldi	r24, 0x31	; 49
    15e8:	90 e0       	ldi	r25, 0x00	; 0
    15ea:	8c 83       	std	Y+4, r24	; 0x04
    15ec:	9d 83       	std	Y+5, r25	; 0x05
    15ee:	2a 81       	ldd	r18, Y+2	; 0x02
    15f0:	3b 81       	ldd	r19, Y+3	; 0x03
    15f2:	8c 81       	ldd	r24, Y+4	; 0x04
    15f4:	9d 81       	ldd	r25, Y+5	; 0x05
    15f6:	28 17       	cp	r18, r24
    15f8:	39 07       	cpc	r19, r25
    15fa:	1c f4       	brge	.+6      	; 0x1602 <_Z9serial_Rxh+0x360>
    15fc:	8a 81       	ldd	r24, Y+2	; 0x02
    15fe:	9b 81       	ldd	r25, Y+3	; 0x03
    1600:	02 c0       	rjmp	.+4      	; 0x1606 <_Z9serial_Rxh+0x364>
    1602:	8c 81       	ldd	r24, Y+4	; 0x04
    1604:	9d 81       	ldd	r25, Y+5	; 0x05
    1606:	80 93 c5 46 	sts	0x46C5, r24	; 0x8046c5 <_ZZ9serial_RxhE9charIndex>
    160a:	be c0       	rjmp	.+380    	; 0x1788 <_Z9serial_Rxh+0x4e6>
						}
					}
					else if(field_len < LINKBUS_MAX_MSG_FIELD_LENGTH)
    160c:	80 91 fc 46 	lds	r24, 0x46FC	; 0x8046fc <_ZZ9serial_RxhE9field_len>
    1610:	85 31       	cpi	r24, 0x15	; 21
    1612:	08 f0       	brcs	.+2      	; 0x1616 <_Z9serial_Rxh+0x374>
    1614:	77 c0       	rjmp	.+238    	; 0x1704 <_Z9serial_Rxh+0x462>
					{
						if(field_index == 0)    /* message ID received */
    1616:	80 91 fb 46 	lds	r24, 0x46FB	; 0x8046fb <_ZZ9serial_RxhE11field_index>
    161a:	88 23       	and	r24, r24
    161c:	e1 f4       	brne	.+56     	; 0x1656 <_Z9serial_Rxh+0x3b4>
						{
							msg_ID = msg_ID * 10 + rx_char;
    161e:	80 91 f9 46 	lds	r24, 0x46F9	; 0x8046f9 <_ZZ9serial_RxhE6msg_ID>
    1622:	90 91 fa 46 	lds	r25, 0x46FA	; 0x8046fa <_ZZ9serial_RxhE6msg_ID+0x1>
    1626:	88 0f       	add	r24, r24
    1628:	99 1f       	adc	r25, r25
    162a:	9c 01       	movw	r18, r24
    162c:	22 0f       	add	r18, r18
    162e:	33 1f       	adc	r19, r19
    1630:	22 0f       	add	r18, r18
    1632:	33 1f       	adc	r19, r19
    1634:	28 0f       	add	r18, r24
    1636:	39 1f       	adc	r19, r25
    1638:	8a 85       	ldd	r24, Y+10	; 0x0a
    163a:	88 2f       	mov	r24, r24
    163c:	90 e0       	ldi	r25, 0x00	; 0
    163e:	82 0f       	add	r24, r18
    1640:	93 1f       	adc	r25, r19
    1642:	80 93 f9 46 	sts	0x46F9, r24	; 0x8046f9 <_ZZ9serial_RxhE6msg_ID>
    1646:	90 93 fa 46 	sts	0x46FA, r25	; 0x8046fa <_ZZ9serial_RxhE6msg_ID+0x1>
							field_len++;
    164a:	80 91 fc 46 	lds	r24, 0x46FC	; 0x8046fc <_ZZ9serial_RxhE9field_len>
    164e:	8f 5f       	subi	r24, 0xFF	; 255
    1650:	80 93 fc 46 	sts	0x46FC, r24	; 0x8046fc <_ZZ9serial_RxhE9field_len>
    1654:	3d c0       	rjmp	.+122    	; 0x16d0 <_Z9serial_Rxh+0x42e>
						}
						else
						{
							buff->fields[field_index - 1][field_len++] = rx_char;
    1656:	40 91 c2 46 	lds	r20, 0x46C2	; 0x8046c2 <__data_end>
    165a:	50 91 c3 46 	lds	r21, 0x46C3	; 0x8046c3 <__data_end+0x1>
    165e:	80 91 fb 46 	lds	r24, 0x46FB	; 0x8046fb <_ZZ9serial_RxhE11field_index>
    1662:	88 2f       	mov	r24, r24
    1664:	90 e0       	ldi	r25, 0x00	; 0
    1666:	bc 01       	movw	r22, r24
    1668:	61 50       	subi	r22, 0x01	; 1
    166a:	71 09       	sbc	r23, r1
    166c:	80 91 fc 46 	lds	r24, 0x46FC	; 0x8046fc <_ZZ9serial_RxhE9field_len>
    1670:	91 e0       	ldi	r25, 0x01	; 1
    1672:	98 0f       	add	r25, r24
    1674:	90 93 fc 46 	sts	0x46FC, r25	; 0x8046fc <_ZZ9serial_RxhE9field_len>
    1678:	88 2f       	mov	r24, r24
    167a:	90 e0       	ldi	r25, 0x00	; 0
    167c:	e4 e1       	ldi	r30, 0x14	; 20
    167e:	e6 9f       	mul	r30, r22
    1680:	90 01       	movw	r18, r0
    1682:	e7 9f       	mul	r30, r23
    1684:	30 0d       	add	r19, r0
    1686:	11 24       	eor	r1, r1
    1688:	24 0f       	add	r18, r20
    168a:	35 1f       	adc	r19, r21
    168c:	82 0f       	add	r24, r18
    168e:	93 1f       	adc	r25, r19
    1690:	03 96       	adiw	r24, 0x03	; 3
    1692:	2a 85       	ldd	r18, Y+10	; 0x0a
    1694:	fc 01       	movw	r30, r24
    1696:	20 83       	st	Z, r18
							buff->fields[field_index - 1][field_len] = '\0';
    1698:	40 91 c2 46 	lds	r20, 0x46C2	; 0x8046c2 <__data_end>
    169c:	50 91 c3 46 	lds	r21, 0x46C3	; 0x8046c3 <__data_end+0x1>
    16a0:	80 91 fb 46 	lds	r24, 0x46FB	; 0x8046fb <_ZZ9serial_RxhE11field_index>
    16a4:	88 2f       	mov	r24, r24
    16a6:	90 e0       	ldi	r25, 0x00	; 0
    16a8:	bc 01       	movw	r22, r24
    16aa:	61 50       	subi	r22, 0x01	; 1
    16ac:	71 09       	sbc	r23, r1
    16ae:	80 91 fc 46 	lds	r24, 0x46FC	; 0x8046fc <_ZZ9serial_RxhE9field_len>
    16b2:	88 2f       	mov	r24, r24
    16b4:	90 e0       	ldi	r25, 0x00	; 0
    16b6:	e4 e1       	ldi	r30, 0x14	; 20
    16b8:	e6 9f       	mul	r30, r22
    16ba:	90 01       	movw	r18, r0
    16bc:	e7 9f       	mul	r30, r23
    16be:	30 0d       	add	r19, r0
    16c0:	11 24       	eor	r1, r1
    16c2:	24 0f       	add	r18, r20
    16c4:	35 1f       	adc	r19, r21
    16c6:	82 0f       	add	r24, r18
    16c8:	93 1f       	adc	r25, r19
    16ca:	03 96       	adiw	r24, 0x03	; 3
    16cc:	fc 01       	movw	r30, r24
    16ce:	10 82       	st	Z, r1
						}

						charIndex = MIN(charIndex + 1, (LINKBUS_MAX_MSG_LENGTH - 1));
    16d0:	80 91 c5 46 	lds	r24, 0x46C5	; 0x8046c5 <_ZZ9serial_RxhE9charIndex>
    16d4:	88 2f       	mov	r24, r24
    16d6:	90 e0       	ldi	r25, 0x00	; 0
    16d8:	01 96       	adiw	r24, 0x01	; 1
    16da:	8e 83       	std	Y+6, r24	; 0x06
    16dc:	9f 83       	std	Y+7, r25	; 0x07
    16de:	81 e3       	ldi	r24, 0x31	; 49
    16e0:	90 e0       	ldi	r25, 0x00	; 0
    16e2:	88 87       	std	Y+8, r24	; 0x08
    16e4:	99 87       	std	Y+9, r25	; 0x09
    16e6:	2e 81       	ldd	r18, Y+6	; 0x06
    16e8:	3f 81       	ldd	r19, Y+7	; 0x07
    16ea:	88 85       	ldd	r24, Y+8	; 0x08
    16ec:	99 85       	ldd	r25, Y+9	; 0x09
    16ee:	28 17       	cp	r18, r24
    16f0:	39 07       	cpc	r19, r25
    16f2:	1c f4       	brge	.+6      	; 0x16fa <_Z9serial_Rxh+0x458>
    16f4:	8e 81       	ldd	r24, Y+6	; 0x06
    16f6:	9f 81       	ldd	r25, Y+7	; 0x07
    16f8:	02 c0       	rjmp	.+4      	; 0x16fe <_Z9serial_Rxh+0x45c>
    16fa:	88 85       	ldd	r24, Y+8	; 0x08
    16fc:	99 85       	ldd	r25, Y+9	; 0x09
    16fe:	80 93 c5 46 	sts	0x46C5, r24	; 0x8046c5 <_ZZ9serial_RxhE9charIndex>
    1702:	42 c0       	rjmp	.+132    	; 0x1788 <_Z9serial_Rxh+0x4e6>
					}
					else
					{
						rx_char = '\0';
    1704:	1a 86       	std	Y+10, r1	; 0x0a
    1706:	40 c0       	rjmp	.+128    	; 0x1788 <_Z9serial_Rxh+0x4e6>
					}
				}
			}
			else
			{
				if(rx_char == 0x7F) /* Handle Backspace */
    1708:	8a 85       	ldd	r24, Y+10	; 0x0a
    170a:	8f 37       	cpi	r24, 0x7F	; 127
    170c:	69 f4       	brne	.+26     	; 0x1728 <_Z9serial_Rxh+0x486>
				{
					if(msg_ID <= 0)
    170e:	80 91 f9 46 	lds	r24, 0x46F9	; 0x8046f9 <_ZZ9serial_RxhE6msg_ID>
    1712:	90 91 fa 46 	lds	r25, 0x46FA	; 0x8046fa <_ZZ9serial_RxhE6msg_ID+0x1>
    1716:	18 16       	cp	r1, r24
    1718:	19 06       	cpc	r1, r25
    171a:	0c f0       	brlt	.+2      	; 0x171e <_Z9serial_Rxh+0x47c>
					{
						rx_char = '\0';
    171c:	1a 86       	std	Y+10, r1	; 0x0a
					}

					msg_ID = 0;
    171e:	10 92 f9 46 	sts	0x46F9, r1	; 0x8046f9 <_ZZ9serial_RxhE6msg_ID>
    1722:	10 92 fa 46 	sts	0x46FA, r1	; 0x8046fa <_ZZ9serial_RxhE6msg_ID+0x1>
    1726:	30 c0       	rjmp	.+96     	; 0x1788 <_Z9serial_Rxh+0x4e6>
				}
				else if(rx_char == ' ') /* Handle Space */
    1728:	8a 85       	ldd	r24, Y+10	; 0x0a
    172a:	80 32       	cpi	r24, 0x20	; 32
    172c:	11 f4       	brne	.+4      	; 0x1732 <_Z9serial_Rxh+0x490>
				{
					rx_char = '\0';
    172e:	1a 86       	std	Y+10, r1	; 0x0a
    1730:	2b c0       	rjmp	.+86     	; 0x1788 <_Z9serial_Rxh+0x4e6>
				}
				else                    /* start of new message */
				{
					uint8_t i;
					field_index = 0;
    1732:	10 92 fb 46 	sts	0x46FB, r1	; 0x8046fb <_ZZ9serial_RxhE11field_index>
					msg_ID = rx_char;
    1736:	8a 85       	ldd	r24, Y+10	; 0x0a
    1738:	88 2f       	mov	r24, r24
    173a:	90 e0       	ldi	r25, 0x00	; 0
    173c:	80 93 f9 46 	sts	0x46F9, r24	; 0x8046f9 <_ZZ9serial_RxhE6msg_ID>
    1740:	90 93 fa 46 	sts	0x46FA, r25	; 0x8046fa <_ZZ9serial_RxhE6msg_ID+0x1>

					/* Empty the field buffers */
					for(i = 0; i < LINKBUS_MAX_MSG_NUMBER_OF_FIELDS; i++)
    1744:	19 82       	std	Y+1, r1	; 0x01
    1746:	89 81       	ldd	r24, Y+1	; 0x01
    1748:	83 30       	cpi	r24, 0x03	; 3
    174a:	b0 f4       	brcc	.+44     	; 0x1778 <_Z9serial_Rxh+0x4d6>
					{
						buff->fields[i][0] = '\0';
    174c:	20 91 c2 46 	lds	r18, 0x46C2	; 0x8046c2 <__data_end>
    1750:	30 91 c3 46 	lds	r19, 0x46C3	; 0x8046c3 <__data_end+0x1>
    1754:	89 81       	ldd	r24, Y+1	; 0x01
    1756:	48 2f       	mov	r20, r24
    1758:	50 e0       	ldi	r21, 0x00	; 0
    175a:	64 e1       	ldi	r22, 0x14	; 20
    175c:	64 9f       	mul	r22, r20
    175e:	c0 01       	movw	r24, r0
    1760:	65 9f       	mul	r22, r21
    1762:	90 0d       	add	r25, r0
    1764:	11 24       	eor	r1, r1
    1766:	82 0f       	add	r24, r18
    1768:	93 1f       	adc	r25, r19
    176a:	03 96       	adiw	r24, 0x03	; 3
    176c:	fc 01       	movw	r30, r24
    176e:	10 82       	st	Z, r1
					uint8_t i;
					field_index = 0;
					msg_ID = rx_char;

					/* Empty the field buffers */
					for(i = 0; i < LINKBUS_MAX_MSG_NUMBER_OF_FIELDS; i++)
    1770:	89 81       	ldd	r24, Y+1	; 0x01
    1772:	8f 5f       	subi	r24, 0xFF	; 255
    1774:	89 83       	std	Y+1, r24	; 0x01
    1776:	e7 cf       	rjmp	.-50     	; 0x1746 <_Z9serial_Rxh+0x4a4>
					{
						buff->fields[i][0] = '\0';
					}

					receiving_msg = true;
    1778:	81 e0       	ldi	r24, 0x01	; 1
    177a:	80 93 f8 46 	sts	0x46F8, r24	; 0x8046f8 <_ZZ9serial_RxhE13receiving_msg>
					charIndex++;
    177e:	80 91 c5 46 	lds	r24, 0x46C5	; 0x8046c5 <_ZZ9serial_RxhE9charIndex>
    1782:	8f 5f       	subi	r24, 0xFF	; 255
    1784:	80 93 c5 46 	sts	0x46C5, r24	; 0x8046c5 <_ZZ9serial_RxhE9charIndex>
				}
			}

			if(rx_char)
    1788:	8a 85       	ldd	r24, Y+10	; 0x0a
    178a:	88 23       	and	r24, r24
    178c:	19 f0       	breq	.+6      	; 0x1794 <_Z9serial_Rxh+0x4f2>
			{
				sb_echo_char(rx_char);
    178e:	8a 85       	ldd	r24, Y+10	; 0x0a
    1790:	0e 94 35 63 	call	0xc66a	; 0xc66a <sb_echo_char>
			}
		}
	}	
}
    1794:	00 00       	nop
    1796:	2a 96       	adiw	r28, 0x0a	; 10
    1798:	cd bf       	out	0x3d, r28	; 61
    179a:	de bf       	out	0x3e, r29	; 62
    179c:	df 91       	pop	r29
    179e:	cf 91       	pop	r28
    17a0:	08 95       	ret

000017a2 <__vector_20>:

/**

*/
ISR(USART0_DRE_vect)
{
    17a2:	1f 92       	push	r1
    17a4:	0f 92       	push	r0
    17a6:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    17aa:	0f 92       	push	r0
    17ac:	11 24       	eor	r1, r1
    17ae:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    17b2:	0f 92       	push	r0
    17b4:	2f 93       	push	r18
    17b6:	3f 93       	push	r19
    17b8:	4f 93       	push	r20
    17ba:	5f 93       	push	r21
    17bc:	6f 93       	push	r22
    17be:	7f 93       	push	r23
    17c0:	8f 93       	push	r24
    17c2:	9f 93       	push	r25
    17c4:	af 93       	push	r26
    17c6:	bf 93       	push	r27
    17c8:	ef 93       	push	r30
    17ca:	ff 93       	push	r31
    17cc:	cf 93       	push	r28
    17ce:	df 93       	push	r29
    17d0:	cd b7       	in	r28, 0x3d	; 61
    17d2:	de b7       	in	r29, 0x3e	; 62
	if(g_linkbus_usart_number == USART_0)
    17d4:	80 91 2d 40 	lds	r24, 0x402D	; 0x80402d <g_linkbus_usart_number>
    17d8:	88 23       	and	r24, r24
    17da:	09 f0       	breq	.+2      	; 0x17de <__vector_20+0x3c>
    17dc:	45 c0       	rjmp	.+138    	; 0x1868 <__vector_20+0xc6>
	{
		static LinkbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
    17de:	80 91 fd 46 	lds	r24, 0x46FD	; 0x8046fd <_ZZ11__vector_20E4buff>
    17e2:	90 91 fe 46 	lds	r25, 0x46FE	; 0x8046fe <_ZZ11__vector_20E4buff+0x1>
    17e6:	89 2b       	or	r24, r25
    17e8:	31 f4       	brne	.+12     	; 0x17f6 <__vector_20+0x54>
		{
			buff = nextFullLBTxBuffer();
    17ea:	0e 94 22 58 	call	0xb044	; 0xb044 <_Z18nextFullLBTxBufferv>
    17ee:	80 93 fd 46 	sts	0x46FD, r24	; 0x8046fd <_ZZ11__vector_20E4buff>
    17f2:	90 93 fe 46 	sts	0x46FE, r25	; 0x8046fe <_ZZ11__vector_20E4buff+0x1>
		}

		if((*buff)[charIndex])
    17f6:	20 91 fd 46 	lds	r18, 0x46FD	; 0x8046fd <_ZZ11__vector_20E4buff>
    17fa:	30 91 fe 46 	lds	r19, 0x46FE	; 0x8046fe <_ZZ11__vector_20E4buff+0x1>
    17fe:	80 91 ff 46 	lds	r24, 0x46FF	; 0x8046ff <_ZZ11__vector_20E9charIndex>
    1802:	88 2f       	mov	r24, r24
    1804:	90 e0       	ldi	r25, 0x00	; 0
    1806:	82 0f       	add	r24, r18
    1808:	93 1f       	adc	r25, r19
    180a:	fc 01       	movw	r30, r24
    180c:	80 81       	ld	r24, Z
    180e:	88 23       	and	r24, r24
    1810:	a9 f0       	breq	.+42     	; 0x183c <__vector_20+0x9a>
		{
			/* Put data into buffer, sends the data */
			USART0.TXDATAL = (*buff)[charIndex++];
    1812:	80 e0       	ldi	r24, 0x00	; 0
    1814:	98 e0       	ldi	r25, 0x08	; 8
    1816:	40 91 fd 46 	lds	r20, 0x46FD	; 0x8046fd <_ZZ11__vector_20E4buff>
    181a:	50 91 fe 46 	lds	r21, 0x46FE	; 0x8046fe <_ZZ11__vector_20E4buff+0x1>
    181e:	20 91 ff 46 	lds	r18, 0x46FF	; 0x8046ff <_ZZ11__vector_20E9charIndex>
    1822:	31 e0       	ldi	r19, 0x01	; 1
    1824:	32 0f       	add	r19, r18
    1826:	30 93 ff 46 	sts	0x46FF, r19	; 0x8046ff <_ZZ11__vector_20E9charIndex>
    182a:	22 2f       	mov	r18, r18
    182c:	30 e0       	ldi	r19, 0x00	; 0
    182e:	24 0f       	add	r18, r20
    1830:	35 1f       	adc	r19, r21
    1832:	f9 01       	movw	r30, r18
    1834:	20 81       	ld	r18, Z
    1836:	fc 01       	movw	r30, r24
    1838:	22 83       	std	Z+2, r18	; 0x02
    183a:	16 c0       	rjmp	.+44     	; 0x1868 <__vector_20+0xc6>
		}
		else
		{
			charIndex = 0;
    183c:	10 92 ff 46 	sts	0x46FF, r1	; 0x8046ff <_ZZ11__vector_20E9charIndex>
			(*buff)[0] = '\0';
    1840:	80 91 fd 46 	lds	r24, 0x46FD	; 0x8046fd <_ZZ11__vector_20E4buff>
    1844:	90 91 fe 46 	lds	r25, 0x46FE	; 0x8046fe <_ZZ11__vector_20E4buff+0x1>
    1848:	fc 01       	movw	r30, r24
    184a:	10 82       	st	Z, r1
			buff = nextFullLBTxBuffer();
    184c:	0e 94 22 58 	call	0xb044	; 0xb044 <_Z18nextFullLBTxBufferv>
    1850:	80 93 fd 46 	sts	0x46FD, r24	; 0x8046fd <_ZZ11__vector_20E4buff>
    1854:	90 93 fe 46 	sts	0x46FE, r25	; 0x8046fe <_ZZ11__vector_20E4buff+0x1>
			if(!buff)
    1858:	80 91 fd 46 	lds	r24, 0x46FD	; 0x8046fd <_ZZ11__vector_20E4buff>
    185c:	90 91 fe 46 	lds	r25, 0x46FE	; 0x8046fe <_ZZ11__vector_20E4buff+0x1>
    1860:	89 2b       	or	r24, r25
    1862:	11 f4       	brne	.+4      	; 0x1868 <__vector_20+0xc6>
			{
				linkbus_end_tx();
    1864:	0e 94 67 59 	call	0xb2ce	; 0xb2ce <_Z14linkbus_end_txv>
			}
		}
	}
	
	if(g_serialbus_usart_number == USART_0)
    1868:	80 91 30 40 	lds	r24, 0x4030	; 0x804030 <g_serialbus_usart_number>
    186c:	88 23       	and	r24, r24
    186e:	09 f0       	breq	.+2      	; 0x1872 <__vector_20+0xd0>
    1870:	45 c0       	rjmp	.+138    	; 0x18fc <__vector_20+0x15a>
	{
		static SerialbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
    1872:	80 91 00 47 	lds	r24, 0x4700	; 0x804700 <_ZZ11__vector_20E4buff_0>
    1876:	90 91 01 47 	lds	r25, 0x4701	; 0x804701 <_ZZ11__vector_20E4buff_0+0x1>
    187a:	89 2b       	or	r24, r25
    187c:	31 f4       	brne	.+12     	; 0x188a <__vector_20+0xe8>
		{
			buff = nextFullSBTxBuffer();
    187e:	0e 94 9d 60 	call	0xc13a	; 0xc13a <nextFullSBTxBuffer>
    1882:	80 93 00 47 	sts	0x4700, r24	; 0x804700 <_ZZ11__vector_20E4buff_0>
    1886:	90 93 01 47 	sts	0x4701, r25	; 0x804701 <_ZZ11__vector_20E4buff_0+0x1>
		}

		if((*buff)[charIndex])
    188a:	20 91 00 47 	lds	r18, 0x4700	; 0x804700 <_ZZ11__vector_20E4buff_0>
    188e:	30 91 01 47 	lds	r19, 0x4701	; 0x804701 <_ZZ11__vector_20E4buff_0+0x1>
    1892:	80 91 02 47 	lds	r24, 0x4702	; 0x804702 <_ZZ11__vector_20E9charIndex_0>
    1896:	88 2f       	mov	r24, r24
    1898:	90 e0       	ldi	r25, 0x00	; 0
    189a:	82 0f       	add	r24, r18
    189c:	93 1f       	adc	r25, r19
    189e:	fc 01       	movw	r30, r24
    18a0:	80 81       	ld	r24, Z
    18a2:	88 23       	and	r24, r24
    18a4:	a9 f0       	breq	.+42     	; 0x18d0 <__vector_20+0x12e>
		{
			/* Put data into buffer, sends the data */
			USART0.TXDATAL = (*buff)[charIndex++];
    18a6:	80 e0       	ldi	r24, 0x00	; 0
    18a8:	98 e0       	ldi	r25, 0x08	; 8
    18aa:	40 91 00 47 	lds	r20, 0x4700	; 0x804700 <_ZZ11__vector_20E4buff_0>
    18ae:	50 91 01 47 	lds	r21, 0x4701	; 0x804701 <_ZZ11__vector_20E4buff_0+0x1>
    18b2:	20 91 02 47 	lds	r18, 0x4702	; 0x804702 <_ZZ11__vector_20E9charIndex_0>
    18b6:	31 e0       	ldi	r19, 0x01	; 1
    18b8:	32 0f       	add	r19, r18
    18ba:	30 93 02 47 	sts	0x4702, r19	; 0x804702 <_ZZ11__vector_20E9charIndex_0>
    18be:	22 2f       	mov	r18, r18
    18c0:	30 e0       	ldi	r19, 0x00	; 0
    18c2:	24 0f       	add	r18, r20
    18c4:	35 1f       	adc	r19, r21
    18c6:	f9 01       	movw	r30, r18
    18c8:	20 81       	ld	r18, Z
    18ca:	fc 01       	movw	r30, r24
    18cc:	22 83       	std	Z+2, r18	; 0x02
			{
				serialbus_end_tx();
			}
		}
	}
}
    18ce:	16 c0       	rjmp	.+44     	; 0x18fc <__vector_20+0x15a>
			/* Put data into buffer, sends the data */
			USART0.TXDATAL = (*buff)[charIndex++];
		}
		else
		{
			charIndex = 0;
    18d0:	10 92 02 47 	sts	0x4702, r1	; 0x804702 <_ZZ11__vector_20E9charIndex_0>
			(*buff)[0] = '\0';
    18d4:	80 91 00 47 	lds	r24, 0x4700	; 0x804700 <_ZZ11__vector_20E4buff_0>
    18d8:	90 91 01 47 	lds	r25, 0x4701	; 0x804701 <_ZZ11__vector_20E4buff_0+0x1>
    18dc:	fc 01       	movw	r30, r24
    18de:	10 82       	st	Z, r1
			buff = nextFullSBTxBuffer();
    18e0:	0e 94 9d 60 	call	0xc13a	; 0xc13a <nextFullSBTxBuffer>
    18e4:	80 93 00 47 	sts	0x4700, r24	; 0x804700 <_ZZ11__vector_20E4buff_0>
    18e8:	90 93 01 47 	sts	0x4701, r25	; 0x804701 <_ZZ11__vector_20E4buff_0+0x1>
			if(!buff)
    18ec:	80 91 00 47 	lds	r24, 0x4700	; 0x804700 <_ZZ11__vector_20E4buff_0>
    18f0:	90 91 01 47 	lds	r25, 0x4701	; 0x804701 <_ZZ11__vector_20E4buff_0+0x1>
    18f4:	89 2b       	or	r24, r25
    18f6:	11 f4       	brne	.+4      	; 0x18fc <__vector_20+0x15a>
			{
				serialbus_end_tx();
    18f8:	0e 94 f2 61 	call	0xc3e4	; 0xc3e4 <serialbus_end_tx>
			}
		}
	}
}
    18fc:	00 00       	nop
    18fe:	df 91       	pop	r29
    1900:	cf 91       	pop	r28
    1902:	ff 91       	pop	r31
    1904:	ef 91       	pop	r30
    1906:	bf 91       	pop	r27
    1908:	af 91       	pop	r26
    190a:	9f 91       	pop	r25
    190c:	8f 91       	pop	r24
    190e:	7f 91       	pop	r23
    1910:	6f 91       	pop	r22
    1912:	5f 91       	pop	r21
    1914:	4f 91       	pop	r20
    1916:	3f 91       	pop	r19
    1918:	2f 91       	pop	r18
    191a:	0f 90       	pop	r0
    191c:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    1920:	0f 90       	pop	r0
    1922:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    1926:	0f 90       	pop	r0
    1928:	1f 90       	pop	r1
    192a:	18 95       	reti

0000192c <__vector_56>:

/**

*/
ISR(USART4_DRE_vect)
{
    192c:	1f 92       	push	r1
    192e:	0f 92       	push	r0
    1930:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    1934:	0f 92       	push	r0
    1936:	11 24       	eor	r1, r1
    1938:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    193c:	0f 92       	push	r0
    193e:	2f 93       	push	r18
    1940:	3f 93       	push	r19
    1942:	4f 93       	push	r20
    1944:	5f 93       	push	r21
    1946:	6f 93       	push	r22
    1948:	7f 93       	push	r23
    194a:	8f 93       	push	r24
    194c:	9f 93       	push	r25
    194e:	af 93       	push	r26
    1950:	bf 93       	push	r27
    1952:	ef 93       	push	r30
    1954:	ff 93       	push	r31
    1956:	cf 93       	push	r28
    1958:	df 93       	push	r29
    195a:	cd b7       	in	r28, 0x3d	; 61
    195c:	de b7       	in	r29, 0x3e	; 62
	if(g_linkbus_usart_number == USART_4)
    195e:	80 91 2d 40 	lds	r24, 0x402D	; 0x80402d <g_linkbus_usart_number>
    1962:	84 30       	cpi	r24, 0x04	; 4
    1964:	09 f0       	breq	.+2      	; 0x1968 <__vector_56+0x3c>
    1966:	45 c0       	rjmp	.+138    	; 0x19f2 <__vector_56+0xc6>
	{
		static LinkbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
    1968:	80 91 03 47 	lds	r24, 0x4703	; 0x804703 <_ZZ11__vector_56E4buff>
    196c:	90 91 04 47 	lds	r25, 0x4704	; 0x804704 <_ZZ11__vector_56E4buff+0x1>
    1970:	89 2b       	or	r24, r25
    1972:	31 f4       	brne	.+12     	; 0x1980 <__vector_56+0x54>
		{
			buff = nextFullLBTxBuffer();
    1974:	0e 94 22 58 	call	0xb044	; 0xb044 <_Z18nextFullLBTxBufferv>
    1978:	80 93 03 47 	sts	0x4703, r24	; 0x804703 <_ZZ11__vector_56E4buff>
    197c:	90 93 04 47 	sts	0x4704, r25	; 0x804704 <_ZZ11__vector_56E4buff+0x1>
		}

		if((*buff)[charIndex])
    1980:	20 91 03 47 	lds	r18, 0x4703	; 0x804703 <_ZZ11__vector_56E4buff>
    1984:	30 91 04 47 	lds	r19, 0x4704	; 0x804704 <_ZZ11__vector_56E4buff+0x1>
    1988:	80 91 05 47 	lds	r24, 0x4705	; 0x804705 <_ZZ11__vector_56E9charIndex>
    198c:	88 2f       	mov	r24, r24
    198e:	90 e0       	ldi	r25, 0x00	; 0
    1990:	82 0f       	add	r24, r18
    1992:	93 1f       	adc	r25, r19
    1994:	fc 01       	movw	r30, r24
    1996:	80 81       	ld	r24, Z
    1998:	88 23       	and	r24, r24
    199a:	a9 f0       	breq	.+42     	; 0x19c6 <__vector_56+0x9a>
		{
			/* Put data into buffer, sends the data */
			USART4.TXDATAL = (*buff)[charIndex++];
    199c:	80 e8       	ldi	r24, 0x80	; 128
    199e:	98 e0       	ldi	r25, 0x08	; 8
    19a0:	40 91 03 47 	lds	r20, 0x4703	; 0x804703 <_ZZ11__vector_56E4buff>
    19a4:	50 91 04 47 	lds	r21, 0x4704	; 0x804704 <_ZZ11__vector_56E4buff+0x1>
    19a8:	20 91 05 47 	lds	r18, 0x4705	; 0x804705 <_ZZ11__vector_56E9charIndex>
    19ac:	31 e0       	ldi	r19, 0x01	; 1
    19ae:	32 0f       	add	r19, r18
    19b0:	30 93 05 47 	sts	0x4705, r19	; 0x804705 <_ZZ11__vector_56E9charIndex>
    19b4:	22 2f       	mov	r18, r18
    19b6:	30 e0       	ldi	r19, 0x00	; 0
    19b8:	24 0f       	add	r18, r20
    19ba:	35 1f       	adc	r19, r21
    19bc:	f9 01       	movw	r30, r18
    19be:	20 81       	ld	r18, Z
    19c0:	fc 01       	movw	r30, r24
    19c2:	22 83       	std	Z+2, r18	; 0x02
    19c4:	16 c0       	rjmp	.+44     	; 0x19f2 <__vector_56+0xc6>
		}
		else
		{
			charIndex = 0;
    19c6:	10 92 05 47 	sts	0x4705, r1	; 0x804705 <_ZZ11__vector_56E9charIndex>
			(*buff)[0] = '\0';
    19ca:	80 91 03 47 	lds	r24, 0x4703	; 0x804703 <_ZZ11__vector_56E4buff>
    19ce:	90 91 04 47 	lds	r25, 0x4704	; 0x804704 <_ZZ11__vector_56E4buff+0x1>
    19d2:	fc 01       	movw	r30, r24
    19d4:	10 82       	st	Z, r1
			buff = nextFullLBTxBuffer();
    19d6:	0e 94 22 58 	call	0xb044	; 0xb044 <_Z18nextFullLBTxBufferv>
    19da:	80 93 03 47 	sts	0x4703, r24	; 0x804703 <_ZZ11__vector_56E4buff>
    19de:	90 93 04 47 	sts	0x4704, r25	; 0x804704 <_ZZ11__vector_56E4buff+0x1>
			if(!buff)
    19e2:	80 91 03 47 	lds	r24, 0x4703	; 0x804703 <_ZZ11__vector_56E4buff>
    19e6:	90 91 04 47 	lds	r25, 0x4704	; 0x804704 <_ZZ11__vector_56E4buff+0x1>
    19ea:	89 2b       	or	r24, r25
    19ec:	11 f4       	brne	.+4      	; 0x19f2 <__vector_56+0xc6>
			{
				linkbus_end_tx();
    19ee:	0e 94 67 59 	call	0xb2ce	; 0xb2ce <_Z14linkbus_end_txv>
			}
		}
	}
	
	if(g_serialbus_usart_number == USART_4)
    19f2:	80 91 30 40 	lds	r24, 0x4030	; 0x804030 <g_serialbus_usart_number>
    19f6:	84 30       	cpi	r24, 0x04	; 4
    19f8:	09 f0       	breq	.+2      	; 0x19fc <__vector_56+0xd0>
    19fa:	45 c0       	rjmp	.+138    	; 0x1a86 <__vector_56+0x15a>
	{
		static SerialbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
    19fc:	80 91 06 47 	lds	r24, 0x4706	; 0x804706 <_ZZ11__vector_56E4buff_0>
    1a00:	90 91 07 47 	lds	r25, 0x4707	; 0x804707 <_ZZ11__vector_56E4buff_0+0x1>
    1a04:	89 2b       	or	r24, r25
    1a06:	31 f4       	brne	.+12     	; 0x1a14 <__vector_56+0xe8>
		{
			buff = nextFullSBTxBuffer();
    1a08:	0e 94 9d 60 	call	0xc13a	; 0xc13a <nextFullSBTxBuffer>
    1a0c:	80 93 06 47 	sts	0x4706, r24	; 0x804706 <_ZZ11__vector_56E4buff_0>
    1a10:	90 93 07 47 	sts	0x4707, r25	; 0x804707 <_ZZ11__vector_56E4buff_0+0x1>
		}

		if((*buff)[charIndex])
    1a14:	20 91 06 47 	lds	r18, 0x4706	; 0x804706 <_ZZ11__vector_56E4buff_0>
    1a18:	30 91 07 47 	lds	r19, 0x4707	; 0x804707 <_ZZ11__vector_56E4buff_0+0x1>
    1a1c:	80 91 08 47 	lds	r24, 0x4708	; 0x804708 <_ZZ11__vector_56E9charIndex_0>
    1a20:	88 2f       	mov	r24, r24
    1a22:	90 e0       	ldi	r25, 0x00	; 0
    1a24:	82 0f       	add	r24, r18
    1a26:	93 1f       	adc	r25, r19
    1a28:	fc 01       	movw	r30, r24
    1a2a:	80 81       	ld	r24, Z
    1a2c:	88 23       	and	r24, r24
    1a2e:	a9 f0       	breq	.+42     	; 0x1a5a <__vector_56+0x12e>
		{
			/* Put data into buffer, sends the data */
			USART4.TXDATAL = (*buff)[charIndex++];
    1a30:	80 e8       	ldi	r24, 0x80	; 128
    1a32:	98 e0       	ldi	r25, 0x08	; 8
    1a34:	40 91 06 47 	lds	r20, 0x4706	; 0x804706 <_ZZ11__vector_56E4buff_0>
    1a38:	50 91 07 47 	lds	r21, 0x4707	; 0x804707 <_ZZ11__vector_56E4buff_0+0x1>
    1a3c:	20 91 08 47 	lds	r18, 0x4708	; 0x804708 <_ZZ11__vector_56E9charIndex_0>
    1a40:	31 e0       	ldi	r19, 0x01	; 1
    1a42:	32 0f       	add	r19, r18
    1a44:	30 93 08 47 	sts	0x4708, r19	; 0x804708 <_ZZ11__vector_56E9charIndex_0>
    1a48:	22 2f       	mov	r18, r18
    1a4a:	30 e0       	ldi	r19, 0x00	; 0
    1a4c:	24 0f       	add	r18, r20
    1a4e:	35 1f       	adc	r19, r21
    1a50:	f9 01       	movw	r30, r18
    1a52:	20 81       	ld	r18, Z
    1a54:	fc 01       	movw	r30, r24
    1a56:	22 83       	std	Z+2, r18	; 0x02
			{
				serialbus_end_tx();
			}
		}
	}
}
    1a58:	16 c0       	rjmp	.+44     	; 0x1a86 <__vector_56+0x15a>
			/* Put data into buffer, sends the data */
			USART4.TXDATAL = (*buff)[charIndex++];
		}
		else
		{
			charIndex = 0;
    1a5a:	10 92 08 47 	sts	0x4708, r1	; 0x804708 <_ZZ11__vector_56E9charIndex_0>
			(*buff)[0] = '\0';
    1a5e:	80 91 06 47 	lds	r24, 0x4706	; 0x804706 <_ZZ11__vector_56E4buff_0>
    1a62:	90 91 07 47 	lds	r25, 0x4707	; 0x804707 <_ZZ11__vector_56E4buff_0+0x1>
    1a66:	fc 01       	movw	r30, r24
    1a68:	10 82       	st	Z, r1
			buff = nextFullSBTxBuffer();
    1a6a:	0e 94 9d 60 	call	0xc13a	; 0xc13a <nextFullSBTxBuffer>
    1a6e:	80 93 06 47 	sts	0x4706, r24	; 0x804706 <_ZZ11__vector_56E4buff_0>
    1a72:	90 93 07 47 	sts	0x4707, r25	; 0x804707 <_ZZ11__vector_56E4buff_0+0x1>
			if(!buff)
    1a76:	80 91 06 47 	lds	r24, 0x4706	; 0x804706 <_ZZ11__vector_56E4buff_0>
    1a7a:	90 91 07 47 	lds	r25, 0x4707	; 0x804707 <_ZZ11__vector_56E4buff_0+0x1>
    1a7e:	89 2b       	or	r24, r25
    1a80:	11 f4       	brne	.+4      	; 0x1a86 <__vector_56+0x15a>
			{
				serialbus_end_tx();
    1a82:	0e 94 f2 61 	call	0xc3e4	; 0xc3e4 <serialbus_end_tx>
			}
		}
	}
}
    1a86:	00 00       	nop
    1a88:	df 91       	pop	r29
    1a8a:	cf 91       	pop	r28
    1a8c:	ff 91       	pop	r31
    1a8e:	ef 91       	pop	r30
    1a90:	bf 91       	pop	r27
    1a92:	af 91       	pop	r26
    1a94:	9f 91       	pop	r25
    1a96:	8f 91       	pop	r24
    1a98:	7f 91       	pop	r23
    1a9a:	6f 91       	pop	r22
    1a9c:	5f 91       	pop	r21
    1a9e:	4f 91       	pop	r20
    1aa0:	3f 91       	pop	r19
    1aa2:	2f 91       	pop	r18
    1aa4:	0f 90       	pop	r0
    1aa6:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    1aaa:	0f 90       	pop	r0
    1aac:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    1ab0:	0f 90       	pop	r0
    1ab2:	1f 90       	pop	r1
    1ab4:	18 95       	reti

00001ab6 <__vector_31>:

/**

*/
ISR(USART1_RXC_vect)
{
    1ab6:	1f 92       	push	r1
    1ab8:	0f 92       	push	r0
    1aba:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    1abe:	0f 92       	push	r0
    1ac0:	11 24       	eor	r1, r1
    1ac2:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    1ac6:	0f 92       	push	r0
    1ac8:	2f 93       	push	r18
    1aca:	3f 93       	push	r19
    1acc:	4f 93       	push	r20
    1ace:	5f 93       	push	r21
    1ad0:	6f 93       	push	r22
    1ad2:	7f 93       	push	r23
    1ad4:	8f 93       	push	r24
    1ad6:	9f 93       	push	r25
    1ad8:	af 93       	push	r26
    1ada:	bf 93       	push	r27
    1adc:	ef 93       	push	r30
    1ade:	ff 93       	push	r31
    1ae0:	cf 93       	push	r28
    1ae2:	df 93       	push	r29
    1ae4:	1f 92       	push	r1
    1ae6:	cd b7       	in	r28, 0x3d	; 61
    1ae8:	de b7       	in	r29, 0x3e	; 62
	uint8_t rx_char = USART1_get_data();	
    1aea:	0e 94 52 73 	call	0xe6a4	; 0xe6a4 <USART1_get_data>
    1aee:	89 83       	std	Y+1, r24	; 0x01
	
	if(g_linkbus_usart_number == USART_1)
    1af0:	80 91 2d 40 	lds	r24, 0x402D	; 0x80402d <g_linkbus_usart_number>
    1af4:	81 30       	cpi	r24, 0x01	; 1
    1af6:	19 f4       	brne	.+6      	; 0x1afe <__vector_31+0x48>
	{
		linkbus_Rx(rx_char);
    1af8:	89 81       	ldd	r24, Y+1	; 0x01
    1afa:	0e 94 9f 0d 	call	0x1b3e	; 0x1b3e <_Z10linkbus_Rxh>
	}
	
	if(g_serialbus_usart_number == USART_1)
    1afe:	80 91 30 40 	lds	r24, 0x4030	; 0x804030 <g_serialbus_usart_number>
    1b02:	81 30       	cpi	r24, 0x01	; 1
    1b04:	19 f4       	brne	.+6      	; 0x1b0c <__vector_31+0x56>
	{
		serial_Rx(rx_char);
    1b06:	89 81       	ldd	r24, Y+1	; 0x01
    1b08:	0e 94 51 09 	call	0x12a2	; 0x12a2 <_Z9serial_Rxh>
	}
}
    1b0c:	00 00       	nop
    1b0e:	0f 90       	pop	r0
    1b10:	df 91       	pop	r29
    1b12:	cf 91       	pop	r28
    1b14:	ff 91       	pop	r31
    1b16:	ef 91       	pop	r30
    1b18:	bf 91       	pop	r27
    1b1a:	af 91       	pop	r26
    1b1c:	9f 91       	pop	r25
    1b1e:	8f 91       	pop	r24
    1b20:	7f 91       	pop	r23
    1b22:	6f 91       	pop	r22
    1b24:	5f 91       	pop	r21
    1b26:	4f 91       	pop	r20
    1b28:	3f 91       	pop	r19
    1b2a:	2f 91       	pop	r18
    1b2c:	0f 90       	pop	r0
    1b2e:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    1b32:	0f 90       	pop	r0
    1b34:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    1b38:	0f 90       	pop	r0
    1b3a:	1f 90       	pop	r1
    1b3c:	18 95       	reti

00001b3e <_Z10linkbus_Rxh>:

void linkbus_Rx(uint8_t rx_char)
{
    1b3e:	cf 93       	push	r28
    1b40:	df 93       	push	r29
    1b42:	1f 92       	push	r1
    1b44:	cd b7       	in	r28, 0x3d	; 61
    1b46:	de b7       	in	r29, 0x3e	; 62
    1b48:	89 83       	std	Y+1, r24	; 0x01
	static uint8_t field_index = 0;
	static uint8_t field_len = 0;
	static uint32_t tempMsg_ID = 0;
	static bool receiving_msg = false;

	if(!buff)
    1b4a:	80 91 09 47 	lds	r24, 0x4709	; 0x804709 <_ZZ10linkbus_RxhE4buff>
    1b4e:	90 91 0a 47 	lds	r25, 0x470A	; 0x80470a <_ZZ10linkbus_RxhE4buff+0x1>
    1b52:	89 2b       	or	r24, r25
    1b54:	31 f4       	brne	.+12     	; 0x1b62 <_Z10linkbus_Rxh+0x24>
	{
		buff = nextEmptyLBRxBuffer();
    1b56:	0e 94 b0 58 	call	0xb160	; 0xb160 <_Z19nextEmptyLBRxBufferv>
    1b5a:	80 93 09 47 	sts	0x4709, r24	; 0x804709 <_ZZ10linkbus_RxhE4buff>
    1b5e:	90 93 0a 47 	sts	0x470A, r25	; 0x80470a <_ZZ10linkbus_RxhE4buff+0x1>
	}

	if(buff)
    1b62:	80 91 09 47 	lds	r24, 0x4709	; 0x804709 <_ZZ10linkbus_RxhE4buff>
    1b66:	90 91 0a 47 	lds	r25, 0x470A	; 0x80470a <_ZZ10linkbus_RxhE4buff+0x1>
    1b6a:	89 2b       	or	r24, r25
    1b6c:	09 f4       	brne	.+2      	; 0x1b70 <_Z10linkbus_Rxh+0x32>
    1b6e:	43 c1       	rjmp	.+646    	; 0x1df6 <_Z10linkbus_Rxh+0x2b8>
	{
		rx_char = toupper(rx_char);
    1b70:	89 81       	ldd	r24, Y+1	; 0x01
    1b72:	88 2f       	mov	r24, r24
    1b74:	90 e0       	ldi	r25, 0x00	; 0
    1b76:	0e 94 50 7c 	call	0xf8a0	; 0xf8a0 <toupper>
    1b7a:	89 83       	std	Y+1, r24	; 0x01

		if((rx_char == '$') || (rx_char == '!'))    /* start of new message = $ */
    1b7c:	89 81       	ldd	r24, Y+1	; 0x01
    1b7e:	84 32       	cpi	r24, 0x24	; 36
    1b80:	19 f0       	breq	.+6      	; 0x1b88 <_Z10linkbus_Rxh+0x4a>
    1b82:	89 81       	ldd	r24, Y+1	; 0x01
    1b84:	81 32       	cpi	r24, 0x21	; 33
    1b86:	e9 f5       	brne	.+122    	; 0x1c02 <_Z10linkbus_Rxh+0xc4>
		{
			charIndex = 0;
    1b88:	10 92 0b 47 	sts	0x470B, r1	; 0x80470b <_ZZ10linkbus_RxhE9charIndex>
			buff->type = (rx_char == '!') ? LINKBUS_MSG_REPLY : LINKBUS_MSG_COMMAND;
    1b8c:	80 91 09 47 	lds	r24, 0x4709	; 0x804709 <_ZZ10linkbus_RxhE4buff>
    1b90:	90 91 0a 47 	lds	r25, 0x470A	; 0x80470a <_ZZ10linkbus_RxhE4buff+0x1>
    1b94:	29 81       	ldd	r18, Y+1	; 0x01
    1b96:	21 32       	cpi	r18, 0x21	; 33
    1b98:	11 f4       	brne	.+4      	; 0x1b9e <_Z10linkbus_Rxh+0x60>
    1b9a:	23 e0       	ldi	r18, 0x03	; 3
    1b9c:	01 c0       	rjmp	.+2      	; 0x1ba0 <_Z10linkbus_Rxh+0x62>
    1b9e:	21 e0       	ldi	r18, 0x01	; 1
    1ba0:	fc 01       	movw	r30, r24
    1ba2:	20 83       	st	Z, r18
			field_len = 0;
    1ba4:	10 92 0c 47 	sts	0x470C, r1	; 0x80470c <_ZZ10linkbus_RxhE9field_len>
			tempMsg_ID = 0;
    1ba8:	10 92 0d 47 	sts	0x470D, r1	; 0x80470d <_ZZ10linkbus_RxhE10tempMsg_ID>
    1bac:	10 92 0e 47 	sts	0x470E, r1	; 0x80470e <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
    1bb0:	10 92 0f 47 	sts	0x470F, r1	; 0x80470f <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
    1bb4:	10 92 10 47 	sts	0x4710, r1	; 0x804710 <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
			receiving_msg = true;
    1bb8:	81 e0       	ldi	r24, 0x01	; 1
    1bba:	80 93 11 47 	sts	0x4711, r24	; 0x804711 <_ZZ10linkbus_RxhE13receiving_msg>

			/* Empty the field buffers */
			for(field_index = 0; field_index < LINKBUS_MAX_MSG_NUMBER_OF_FIELDS; field_index++)
    1bbe:	10 92 12 47 	sts	0x4712, r1	; 0x804712 <_ZZ10linkbus_RxhE11field_index>
    1bc2:	80 91 12 47 	lds	r24, 0x4712	; 0x804712 <_ZZ10linkbus_RxhE11field_index>
    1bc6:	83 30       	cpi	r24, 0x03	; 3
    1bc8:	c8 f4       	brcc	.+50     	; 0x1bfc <_Z10linkbus_Rxh+0xbe>
			{
				buff->fields[field_index][0] = '\0';
    1bca:	20 91 09 47 	lds	r18, 0x4709	; 0x804709 <_ZZ10linkbus_RxhE4buff>
    1bce:	30 91 0a 47 	lds	r19, 0x470A	; 0x80470a <_ZZ10linkbus_RxhE4buff+0x1>
    1bd2:	80 91 12 47 	lds	r24, 0x4712	; 0x804712 <_ZZ10linkbus_RxhE11field_index>
    1bd6:	48 2f       	mov	r20, r24
    1bd8:	50 e0       	ldi	r21, 0x00	; 0
    1bda:	65 e1       	ldi	r22, 0x15	; 21
    1bdc:	64 9f       	mul	r22, r20
    1bde:	c0 01       	movw	r24, r0
    1be0:	65 9f       	mul	r22, r21
    1be2:	90 0d       	add	r25, r0
    1be4:	11 24       	eor	r1, r1
    1be6:	82 0f       	add	r24, r18
    1be8:	93 1f       	adc	r25, r19
    1bea:	03 96       	adiw	r24, 0x03	; 3
    1bec:	fc 01       	movw	r30, r24
    1bee:	10 82       	st	Z, r1
			field_len = 0;
			tempMsg_ID = 0;
			receiving_msg = true;

			/* Empty the field buffers */
			for(field_index = 0; field_index < LINKBUS_MAX_MSG_NUMBER_OF_FIELDS; field_index++)
    1bf0:	80 91 12 47 	lds	r24, 0x4712	; 0x804712 <_ZZ10linkbus_RxhE11field_index>
    1bf4:	8f 5f       	subi	r24, 0xFF	; 255
    1bf6:	80 93 12 47 	sts	0x4712, r24	; 0x804712 <_ZZ10linkbus_RxhE11field_index>
    1bfa:	e3 cf       	rjmp	.-58     	; 0x1bc2 <_Z10linkbus_Rxh+0x84>
			{
				buff->fields[field_index][0] = '\0';
			}

			field_index = 0;
    1bfc:	10 92 12 47 	sts	0x4712, r1	; 0x804712 <_ZZ10linkbus_RxhE11field_index>
    1c00:	e9 c0       	rjmp	.+466    	; 0x1dd4 <_Z10linkbus_Rxh+0x296>
		}
		else if(receiving_msg)
    1c02:	80 91 11 47 	lds	r24, 0x4711	; 0x804711 <_ZZ10linkbus_RxhE13receiving_msg>
    1c06:	88 23       	and	r24, r24
    1c08:	09 f4       	brne	.+2      	; 0x1c0c <_Z10linkbus_Rxh+0xce>
    1c0a:	c7 c0       	rjmp	.+398    	; 0x1d9a <_Z10linkbus_Rxh+0x25c>
		{
			if((rx_char == ',') || (rx_char == ';') || (rx_char == '?'))    /* new field = ,; end of message = ; */
    1c0c:	89 81       	ldd	r24, Y+1	; 0x01
    1c0e:	8c 32       	cpi	r24, 0x2C	; 44
    1c10:	39 f0       	breq	.+14     	; 0x1c20 <_Z10linkbus_Rxh+0xe2>
    1c12:	89 81       	ldd	r24, Y+1	; 0x01
    1c14:	8b 33       	cpi	r24, 0x3B	; 59
    1c16:	21 f0       	breq	.+8      	; 0x1c20 <_Z10linkbus_Rxh+0xe2>
    1c18:	89 81       	ldd	r24, Y+1	; 0x01
    1c1a:	8f 33       	cpi	r24, 0x3F	; 63
    1c1c:	09 f0       	breq	.+2      	; 0x1c20 <_Z10linkbus_Rxh+0xe2>
    1c1e:	6b c0       	rjmp	.+214    	; 0x1cf6 <_Z10linkbus_Rxh+0x1b8>
			{
				/* if(field_index == 0) // message ID received */
				if(field_index > 0)
    1c20:	80 91 12 47 	lds	r24, 0x4712	; 0x804712 <_ZZ10linkbus_RxhE11field_index>
    1c24:	88 23       	and	r24, r24
    1c26:	e1 f0       	breq	.+56     	; 0x1c60 <_Z10linkbus_Rxh+0x122>
				{
					buff->fields[field_index - 1][field_len] = 0;
    1c28:	40 91 09 47 	lds	r20, 0x4709	; 0x804709 <_ZZ10linkbus_RxhE4buff>
    1c2c:	50 91 0a 47 	lds	r21, 0x470A	; 0x80470a <_ZZ10linkbus_RxhE4buff+0x1>
    1c30:	80 91 12 47 	lds	r24, 0x4712	; 0x804712 <_ZZ10linkbus_RxhE11field_index>
    1c34:	88 2f       	mov	r24, r24
    1c36:	90 e0       	ldi	r25, 0x00	; 0
    1c38:	bc 01       	movw	r22, r24
    1c3a:	61 50       	subi	r22, 0x01	; 1
    1c3c:	71 09       	sbc	r23, r1
    1c3e:	80 91 0c 47 	lds	r24, 0x470C	; 0x80470c <_ZZ10linkbus_RxhE9field_len>
    1c42:	88 2f       	mov	r24, r24
    1c44:	90 e0       	ldi	r25, 0x00	; 0
    1c46:	e5 e1       	ldi	r30, 0x15	; 21
    1c48:	e6 9f       	mul	r30, r22
    1c4a:	90 01       	movw	r18, r0
    1c4c:	e7 9f       	mul	r30, r23
    1c4e:	30 0d       	add	r19, r0
    1c50:	11 24       	eor	r1, r1
    1c52:	24 0f       	add	r18, r20
    1c54:	35 1f       	adc	r19, r21
    1c56:	82 0f       	add	r24, r18
    1c58:	93 1f       	adc	r25, r19
    1c5a:	03 96       	adiw	r24, 0x03	; 3
    1c5c:	fc 01       	movw	r30, r24
    1c5e:	10 82       	st	Z, r1
				}

				field_index++;
    1c60:	80 91 12 47 	lds	r24, 0x4712	; 0x804712 <_ZZ10linkbus_RxhE11field_index>
    1c64:	8f 5f       	subi	r24, 0xFF	; 255
    1c66:	80 93 12 47 	sts	0x4712, r24	; 0x804712 <_ZZ10linkbus_RxhE11field_index>
				field_len = 0;
    1c6a:	10 92 0c 47 	sts	0x470C, r1	; 0x80470c <_ZZ10linkbus_RxhE9field_len>

				if(rx_char == ';')
    1c6e:	89 81       	ldd	r24, Y+1	; 0x01
    1c70:	8b 33       	cpi	r24, 0x3B	; 59
    1c72:	b1 f4       	brne	.+44     	; 0x1ca0 <_Z10linkbus_Rxh+0x162>
				{
					if(charIndex > LINKBUS_MIN_MSG_LENGTH)
    1c74:	80 91 0b 47 	lds	r24, 0x470B	; 0x80470b <_ZZ10linkbus_RxhE9charIndex>
    1c78:	84 30       	cpi	r24, 0x04	; 4
    1c7a:	78 f0       	brcs	.+30     	; 0x1c9a <_Z10linkbus_Rxh+0x15c>
					{
						buff->id = (LBMessageID)tempMsg_ID;
    1c7c:	20 91 09 47 	lds	r18, 0x4709	; 0x804709 <_ZZ10linkbus_RxhE4buff>
    1c80:	30 91 0a 47 	lds	r19, 0x470A	; 0x80470a <_ZZ10linkbus_RxhE4buff+0x1>
    1c84:	80 91 0d 47 	lds	r24, 0x470D	; 0x80470d <_ZZ10linkbus_RxhE10tempMsg_ID>
    1c88:	90 91 0e 47 	lds	r25, 0x470E	; 0x80470e <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
    1c8c:	a0 91 0f 47 	lds	r26, 0x470F	; 0x80470f <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
    1c90:	b0 91 10 47 	lds	r27, 0x4710	; 0x804710 <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
    1c94:	f9 01       	movw	r30, r18
    1c96:	81 83       	std	Z+1, r24	; 0x01
    1c98:	92 83       	std	Z+2, r25	; 0x02
					}
					receiving_msg = false;
    1c9a:	10 92 11 47 	sts	0x4711, r1	; 0x804711 <_ZZ10linkbus_RxhE13receiving_msg>
    1c9e:	1f c0       	rjmp	.+62     	; 0x1cde <_Z10linkbus_Rxh+0x1a0>
				}
				else if(rx_char == '?')
    1ca0:	89 81       	ldd	r24, Y+1	; 0x01
    1ca2:	8f 33       	cpi	r24, 0x3F	; 63
    1ca4:	e1 f4       	brne	.+56     	; 0x1cde <_Z10linkbus_Rxh+0x1a0>
				{
					buff->type = LINKBUS_MSG_QUERY;
    1ca6:	80 91 09 47 	lds	r24, 0x4709	; 0x804709 <_ZZ10linkbus_RxhE4buff>
    1caa:	90 91 0a 47 	lds	r25, 0x470A	; 0x80470a <_ZZ10linkbus_RxhE4buff+0x1>
    1cae:	22 e0       	ldi	r18, 0x02	; 2
    1cb0:	fc 01       	movw	r30, r24
    1cb2:	20 83       	st	Z, r18
					if(charIndex >= LINKBUS_MIN_MSG_LENGTH)
    1cb4:	80 91 0b 47 	lds	r24, 0x470B	; 0x80470b <_ZZ10linkbus_RxhE9charIndex>
    1cb8:	83 30       	cpi	r24, 0x03	; 3
    1cba:	78 f0       	brcs	.+30     	; 0x1cda <_Z10linkbus_Rxh+0x19c>
					{
						buff->id = (LBMessageID)tempMsg_ID;
    1cbc:	20 91 09 47 	lds	r18, 0x4709	; 0x804709 <_ZZ10linkbus_RxhE4buff>
    1cc0:	30 91 0a 47 	lds	r19, 0x470A	; 0x80470a <_ZZ10linkbus_RxhE4buff+0x1>
    1cc4:	80 91 0d 47 	lds	r24, 0x470D	; 0x80470d <_ZZ10linkbus_RxhE10tempMsg_ID>
    1cc8:	90 91 0e 47 	lds	r25, 0x470E	; 0x80470e <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
    1ccc:	a0 91 0f 47 	lds	r26, 0x470F	; 0x80470f <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
    1cd0:	b0 91 10 47 	lds	r27, 0x4710	; 0x804710 <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
    1cd4:	f9 01       	movw	r30, r18
    1cd6:	81 83       	std	Z+1, r24	; 0x01
    1cd8:	92 83       	std	Z+2, r25	; 0x02
					}
					receiving_msg = false;
    1cda:	10 92 11 47 	sts	0x4711, r1	; 0x804711 <_ZZ10linkbus_RxhE13receiving_msg>
				}

				if(!receiving_msg)
    1cde:	90 91 11 47 	lds	r25, 0x4711	; 0x804711 <_ZZ10linkbus_RxhE13receiving_msg>
    1ce2:	81 e0       	ldi	r24, 0x01	; 1
    1ce4:	89 27       	eor	r24, r25
    1ce6:	88 23       	and	r24, r24
    1ce8:	09 f4       	brne	.+2      	; 0x1cec <_Z10linkbus_Rxh+0x1ae>
    1cea:	74 c0       	rjmp	.+232    	; 0x1dd4 <_Z10linkbus_Rxh+0x296>
				{
					buff = 0;
    1cec:	10 92 09 47 	sts	0x4709, r1	; 0x804709 <_ZZ10linkbus_RxhE4buff>
    1cf0:	10 92 0a 47 	sts	0x470A, r1	; 0x80470a <_ZZ10linkbus_RxhE4buff+0x1>
						buff->id = (LBMessageID)tempMsg_ID;
					}
					receiving_msg = false;
				}

				if(!receiving_msg)
    1cf4:	6f c0       	rjmp	.+222    	; 0x1dd4 <_Z10linkbus_Rxh+0x296>
					buff = 0;
				}
			}
			else
			{
				if(field_index == 0)    /* message ID received */
    1cf6:	80 91 12 47 	lds	r24, 0x4712	; 0x804712 <_ZZ10linkbus_RxhE11field_index>
    1cfa:	88 23       	and	r24, r24
    1cfc:	61 f5       	brne	.+88     	; 0x1d56 <_Z10linkbus_Rxh+0x218>
				{
					tempMsg_ID = tempMsg_ID * 10 + rx_char;
    1cfe:	80 91 0d 47 	lds	r24, 0x470D	; 0x80470d <_ZZ10linkbus_RxhE10tempMsg_ID>
    1d02:	90 91 0e 47 	lds	r25, 0x470E	; 0x80470e <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
    1d06:	a0 91 0f 47 	lds	r26, 0x470F	; 0x80470f <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
    1d0a:	b0 91 10 47 	lds	r27, 0x4710	; 0x804710 <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
    1d0e:	88 0f       	add	r24, r24
    1d10:	99 1f       	adc	r25, r25
    1d12:	aa 1f       	adc	r26, r26
    1d14:	bb 1f       	adc	r27, r27
    1d16:	9c 01       	movw	r18, r24
    1d18:	ad 01       	movw	r20, r26
    1d1a:	22 0f       	add	r18, r18
    1d1c:	33 1f       	adc	r19, r19
    1d1e:	44 1f       	adc	r20, r20
    1d20:	55 1f       	adc	r21, r21
    1d22:	22 0f       	add	r18, r18
    1d24:	33 1f       	adc	r19, r19
    1d26:	44 1f       	adc	r20, r20
    1d28:	55 1f       	adc	r21, r21
    1d2a:	28 0f       	add	r18, r24
    1d2c:	39 1f       	adc	r19, r25
    1d2e:	4a 1f       	adc	r20, r26
    1d30:	5b 1f       	adc	r21, r27
    1d32:	89 81       	ldd	r24, Y+1	; 0x01
    1d34:	88 2f       	mov	r24, r24
    1d36:	90 e0       	ldi	r25, 0x00	; 0
    1d38:	a0 e0       	ldi	r26, 0x00	; 0
    1d3a:	b0 e0       	ldi	r27, 0x00	; 0
    1d3c:	82 0f       	add	r24, r18
    1d3e:	93 1f       	adc	r25, r19
    1d40:	a4 1f       	adc	r26, r20
    1d42:	b5 1f       	adc	r27, r21
    1d44:	80 93 0d 47 	sts	0x470D, r24	; 0x80470d <_ZZ10linkbus_RxhE10tempMsg_ID>
    1d48:	90 93 0e 47 	sts	0x470E, r25	; 0x80470e <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
    1d4c:	a0 93 0f 47 	sts	0x470F, r26	; 0x80470f <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
    1d50:	b0 93 10 47 	sts	0x4710, r27	; 0x804710 <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
    1d54:	3f c0       	rjmp	.+126    	; 0x1dd4 <_Z10linkbus_Rxh+0x296>
				}
				else
				{
					buff->fields[field_index - 1][field_len++] = rx_char;
    1d56:	40 91 09 47 	lds	r20, 0x4709	; 0x804709 <_ZZ10linkbus_RxhE4buff>
    1d5a:	50 91 0a 47 	lds	r21, 0x470A	; 0x80470a <_ZZ10linkbus_RxhE4buff+0x1>
    1d5e:	80 91 12 47 	lds	r24, 0x4712	; 0x804712 <_ZZ10linkbus_RxhE11field_index>
    1d62:	88 2f       	mov	r24, r24
    1d64:	90 e0       	ldi	r25, 0x00	; 0
    1d66:	bc 01       	movw	r22, r24
    1d68:	61 50       	subi	r22, 0x01	; 1
    1d6a:	71 09       	sbc	r23, r1
    1d6c:	80 91 0c 47 	lds	r24, 0x470C	; 0x80470c <_ZZ10linkbus_RxhE9field_len>
    1d70:	91 e0       	ldi	r25, 0x01	; 1
    1d72:	98 0f       	add	r25, r24
    1d74:	90 93 0c 47 	sts	0x470C, r25	; 0x80470c <_ZZ10linkbus_RxhE9field_len>
    1d78:	88 2f       	mov	r24, r24
    1d7a:	90 e0       	ldi	r25, 0x00	; 0
    1d7c:	e5 e1       	ldi	r30, 0x15	; 21
    1d7e:	e6 9f       	mul	r30, r22
    1d80:	90 01       	movw	r18, r0
    1d82:	e7 9f       	mul	r30, r23
    1d84:	30 0d       	add	r19, r0
    1d86:	11 24       	eor	r1, r1
    1d88:	24 0f       	add	r18, r20
    1d8a:	35 1f       	adc	r19, r21
    1d8c:	82 0f       	add	r24, r18
    1d8e:	93 1f       	adc	r25, r19
    1d90:	03 96       	adiw	r24, 0x03	; 3
    1d92:	29 81       	ldd	r18, Y+1	; 0x01
    1d94:	fc 01       	movw	r30, r24
    1d96:	20 83       	st	Z, r18
    1d98:	1d c0       	rjmp	.+58     	; 0x1dd4 <_Z10linkbus_Rxh+0x296>
				}
			}
		}
		else if(rx_char == 0x0D)    /* Carriage return resets any message in progress */
    1d9a:	89 81       	ldd	r24, Y+1	; 0x01
    1d9c:	8d 30       	cpi	r24, 0x0D	; 13
    1d9e:	d1 f4       	brne	.+52     	; 0x1dd4 <_Z10linkbus_Rxh+0x296>
		{
			buff->id = LB_MESSAGE_EMPTY;
    1da0:	80 91 09 47 	lds	r24, 0x4709	; 0x804709 <_ZZ10linkbus_RxhE4buff>
    1da4:	90 91 0a 47 	lds	r25, 0x470A	; 0x80470a <_ZZ10linkbus_RxhE4buff+0x1>
    1da8:	fc 01       	movw	r30, r24
    1daa:	11 82       	std	Z+1, r1	; 0x01
    1dac:	12 82       	std	Z+2, r1	; 0x02
			charIndex = LINKBUS_MAX_MSG_LENGTH;
    1dae:	82 e3       	ldi	r24, 0x32	; 50
    1db0:	80 93 0b 47 	sts	0x470B, r24	; 0x80470b <_ZZ10linkbus_RxhE9charIndex>
			field_len = 0;
    1db4:	10 92 0c 47 	sts	0x470C, r1	; 0x80470c <_ZZ10linkbus_RxhE9field_len>
			tempMsg_ID = 0;
    1db8:	10 92 0d 47 	sts	0x470D, r1	; 0x80470d <_ZZ10linkbus_RxhE10tempMsg_ID>
    1dbc:	10 92 0e 47 	sts	0x470E, r1	; 0x80470e <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
    1dc0:	10 92 0f 47 	sts	0x470F, r1	; 0x80470f <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
    1dc4:	10 92 10 47 	sts	0x4710, r1	; 0x804710 <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
			field_index = 0;
    1dc8:	10 92 12 47 	sts	0x4712, r1	; 0x804712 <_ZZ10linkbus_RxhE11field_index>
			buff = NULL;
    1dcc:	10 92 09 47 	sts	0x4709, r1	; 0x804709 <_ZZ10linkbus_RxhE4buff>
    1dd0:	10 92 0a 47 	sts	0x470A, r1	; 0x80470a <_ZZ10linkbus_RxhE4buff+0x1>
		}

		if(++charIndex >= LINKBUS_MAX_MSG_LENGTH)
    1dd4:	80 91 0b 47 	lds	r24, 0x470B	; 0x80470b <_ZZ10linkbus_RxhE9charIndex>
    1dd8:	8f 5f       	subi	r24, 0xFF	; 255
    1dda:	80 93 0b 47 	sts	0x470B, r24	; 0x80470b <_ZZ10linkbus_RxhE9charIndex>
    1dde:	90 91 0b 47 	lds	r25, 0x470B	; 0x80470b <_ZZ10linkbus_RxhE9charIndex>
    1de2:	81 e0       	ldi	r24, 0x01	; 1
    1de4:	92 33       	cpi	r25, 0x32	; 50
    1de6:	08 f4       	brcc	.+2      	; 0x1dea <_Z10linkbus_Rxh+0x2ac>
    1de8:	80 e0       	ldi	r24, 0x00	; 0
    1dea:	88 23       	and	r24, r24
    1dec:	21 f0       	breq	.+8      	; 0x1df6 <_Z10linkbus_Rxh+0x2b8>
		{
			receiving_msg = false;
    1dee:	10 92 11 47 	sts	0x4711, r1	; 0x804711 <_ZZ10linkbus_RxhE13receiving_msg>
			charIndex = 0;
    1df2:	10 92 0b 47 	sts	0x470B, r1	; 0x80470b <_ZZ10linkbus_RxhE9charIndex>
		}
	}
}
    1df6:	00 00       	nop
    1df8:	0f 90       	pop	r0
    1dfa:	df 91       	pop	r29
    1dfc:	cf 91       	pop	r28
    1dfe:	08 95       	ret

00001e00 <__vector_32>:

/**

*/
ISR(USART1_DRE_vect)
{
    1e00:	1f 92       	push	r1
    1e02:	0f 92       	push	r0
    1e04:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    1e08:	0f 92       	push	r0
    1e0a:	11 24       	eor	r1, r1
    1e0c:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    1e10:	0f 92       	push	r0
    1e12:	2f 93       	push	r18
    1e14:	3f 93       	push	r19
    1e16:	4f 93       	push	r20
    1e18:	5f 93       	push	r21
    1e1a:	6f 93       	push	r22
    1e1c:	7f 93       	push	r23
    1e1e:	8f 93       	push	r24
    1e20:	9f 93       	push	r25
    1e22:	af 93       	push	r26
    1e24:	bf 93       	push	r27
    1e26:	ef 93       	push	r30
    1e28:	ff 93       	push	r31
    1e2a:	cf 93       	push	r28
    1e2c:	df 93       	push	r29
    1e2e:	cd b7       	in	r28, 0x3d	; 61
    1e30:	de b7       	in	r29, 0x3e	; 62
	if(g_serialbus_usart_number == USART_1)
    1e32:	80 91 30 40 	lds	r24, 0x4030	; 0x804030 <g_serialbus_usart_number>
    1e36:	81 30       	cpi	r24, 0x01	; 1
    1e38:	09 f0       	breq	.+2      	; 0x1e3c <__vector_32+0x3c>
    1e3a:	45 c0       	rjmp	.+138    	; 0x1ec6 <__vector_32+0xc6>
	{
		static SerialbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
    1e3c:	80 91 13 47 	lds	r24, 0x4713	; 0x804713 <_ZZ11__vector_32E4buff>
    1e40:	90 91 14 47 	lds	r25, 0x4714	; 0x804714 <_ZZ11__vector_32E4buff+0x1>
    1e44:	89 2b       	or	r24, r25
    1e46:	31 f4       	brne	.+12     	; 0x1e54 <__vector_32+0x54>
		{
			buff = nextFullSBTxBuffer();
    1e48:	0e 94 9d 60 	call	0xc13a	; 0xc13a <nextFullSBTxBuffer>
    1e4c:	80 93 13 47 	sts	0x4713, r24	; 0x804713 <_ZZ11__vector_32E4buff>
    1e50:	90 93 14 47 	sts	0x4714, r25	; 0x804714 <_ZZ11__vector_32E4buff+0x1>
		}

		if((*buff)[charIndex])
    1e54:	20 91 13 47 	lds	r18, 0x4713	; 0x804713 <_ZZ11__vector_32E4buff>
    1e58:	30 91 14 47 	lds	r19, 0x4714	; 0x804714 <_ZZ11__vector_32E4buff+0x1>
    1e5c:	80 91 15 47 	lds	r24, 0x4715	; 0x804715 <_ZZ11__vector_32E9charIndex>
    1e60:	88 2f       	mov	r24, r24
    1e62:	90 e0       	ldi	r25, 0x00	; 0
    1e64:	82 0f       	add	r24, r18
    1e66:	93 1f       	adc	r25, r19
    1e68:	fc 01       	movw	r30, r24
    1e6a:	80 81       	ld	r24, Z
    1e6c:	88 23       	and	r24, r24
    1e6e:	a9 f0       	breq	.+42     	; 0x1e9a <__vector_32+0x9a>
		{
			/* Put data into buffer, sends the data */
			USART1.TXDATAL = (*buff)[charIndex++];
    1e70:	80 e2       	ldi	r24, 0x20	; 32
    1e72:	98 e0       	ldi	r25, 0x08	; 8
    1e74:	40 91 13 47 	lds	r20, 0x4713	; 0x804713 <_ZZ11__vector_32E4buff>
    1e78:	50 91 14 47 	lds	r21, 0x4714	; 0x804714 <_ZZ11__vector_32E4buff+0x1>
    1e7c:	20 91 15 47 	lds	r18, 0x4715	; 0x804715 <_ZZ11__vector_32E9charIndex>
    1e80:	31 e0       	ldi	r19, 0x01	; 1
    1e82:	32 0f       	add	r19, r18
    1e84:	30 93 15 47 	sts	0x4715, r19	; 0x804715 <_ZZ11__vector_32E9charIndex>
    1e88:	22 2f       	mov	r18, r18
    1e8a:	30 e0       	ldi	r19, 0x00	; 0
    1e8c:	24 0f       	add	r18, r20
    1e8e:	35 1f       	adc	r19, r21
    1e90:	f9 01       	movw	r30, r18
    1e92:	20 81       	ld	r18, Z
    1e94:	fc 01       	movw	r30, r24
    1e96:	22 83       	std	Z+2, r18	; 0x02
    1e98:	16 c0       	rjmp	.+44     	; 0x1ec6 <__vector_32+0xc6>
		}
		else
		{
			charIndex = 0;
    1e9a:	10 92 15 47 	sts	0x4715, r1	; 0x804715 <_ZZ11__vector_32E9charIndex>
			(*buff)[0] = '\0';
    1e9e:	80 91 13 47 	lds	r24, 0x4713	; 0x804713 <_ZZ11__vector_32E4buff>
    1ea2:	90 91 14 47 	lds	r25, 0x4714	; 0x804714 <_ZZ11__vector_32E4buff+0x1>
    1ea6:	fc 01       	movw	r30, r24
    1ea8:	10 82       	st	Z, r1
			buff = nextFullSBTxBuffer();
    1eaa:	0e 94 9d 60 	call	0xc13a	; 0xc13a <nextFullSBTxBuffer>
    1eae:	80 93 13 47 	sts	0x4713, r24	; 0x804713 <_ZZ11__vector_32E4buff>
    1eb2:	90 93 14 47 	sts	0x4714, r25	; 0x804714 <_ZZ11__vector_32E4buff+0x1>
			if(!buff)
    1eb6:	80 91 13 47 	lds	r24, 0x4713	; 0x804713 <_ZZ11__vector_32E4buff>
    1eba:	90 91 14 47 	lds	r25, 0x4714	; 0x804714 <_ZZ11__vector_32E4buff+0x1>
    1ebe:	89 2b       	or	r24, r25
    1ec0:	11 f4       	brne	.+4      	; 0x1ec6 <__vector_32+0xc6>
			{
				serialbus_end_tx();
    1ec2:	0e 94 f2 61 	call	0xc3e4	; 0xc3e4 <serialbus_end_tx>
			}
		}
	}
	
	if(g_linkbus_usart_number == USART_1)
    1ec6:	80 91 2d 40 	lds	r24, 0x402D	; 0x80402d <g_linkbus_usart_number>
    1eca:	81 30       	cpi	r24, 0x01	; 1
    1ecc:	09 f0       	breq	.+2      	; 0x1ed0 <__vector_32+0xd0>
    1ece:	45 c0       	rjmp	.+138    	; 0x1f5a <__vector_32+0x15a>
	{
		static LinkbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
    1ed0:	80 91 16 47 	lds	r24, 0x4716	; 0x804716 <_ZZ11__vector_32E4buff_0>
    1ed4:	90 91 17 47 	lds	r25, 0x4717	; 0x804717 <_ZZ11__vector_32E4buff_0+0x1>
    1ed8:	89 2b       	or	r24, r25
    1eda:	31 f4       	brne	.+12     	; 0x1ee8 <__vector_32+0xe8>
		{
			buff = nextFullLBTxBuffer();
    1edc:	0e 94 22 58 	call	0xb044	; 0xb044 <_Z18nextFullLBTxBufferv>
    1ee0:	80 93 16 47 	sts	0x4716, r24	; 0x804716 <_ZZ11__vector_32E4buff_0>
    1ee4:	90 93 17 47 	sts	0x4717, r25	; 0x804717 <_ZZ11__vector_32E4buff_0+0x1>
		}

		if((*buff)[charIndex])
    1ee8:	20 91 16 47 	lds	r18, 0x4716	; 0x804716 <_ZZ11__vector_32E4buff_0>
    1eec:	30 91 17 47 	lds	r19, 0x4717	; 0x804717 <_ZZ11__vector_32E4buff_0+0x1>
    1ef0:	80 91 18 47 	lds	r24, 0x4718	; 0x804718 <_ZZ11__vector_32E9charIndex_0>
    1ef4:	88 2f       	mov	r24, r24
    1ef6:	90 e0       	ldi	r25, 0x00	; 0
    1ef8:	82 0f       	add	r24, r18
    1efa:	93 1f       	adc	r25, r19
    1efc:	fc 01       	movw	r30, r24
    1efe:	80 81       	ld	r24, Z
    1f00:	88 23       	and	r24, r24
    1f02:	a9 f0       	breq	.+42     	; 0x1f2e <__vector_32+0x12e>
		{
			/* Put data into buffer, sends the data */
			USART1.TXDATAL = (*buff)[charIndex++];
    1f04:	80 e2       	ldi	r24, 0x20	; 32
    1f06:	98 e0       	ldi	r25, 0x08	; 8
    1f08:	40 91 16 47 	lds	r20, 0x4716	; 0x804716 <_ZZ11__vector_32E4buff_0>
    1f0c:	50 91 17 47 	lds	r21, 0x4717	; 0x804717 <_ZZ11__vector_32E4buff_0+0x1>
    1f10:	20 91 18 47 	lds	r18, 0x4718	; 0x804718 <_ZZ11__vector_32E9charIndex_0>
    1f14:	31 e0       	ldi	r19, 0x01	; 1
    1f16:	32 0f       	add	r19, r18
    1f18:	30 93 18 47 	sts	0x4718, r19	; 0x804718 <_ZZ11__vector_32E9charIndex_0>
    1f1c:	22 2f       	mov	r18, r18
    1f1e:	30 e0       	ldi	r19, 0x00	; 0
    1f20:	24 0f       	add	r18, r20
    1f22:	35 1f       	adc	r19, r21
    1f24:	f9 01       	movw	r30, r18
    1f26:	20 81       	ld	r18, Z
    1f28:	fc 01       	movw	r30, r24
    1f2a:	22 83       	std	Z+2, r18	; 0x02
			{
				linkbus_end_tx();
			}
		}
	}
}
    1f2c:	16 c0       	rjmp	.+44     	; 0x1f5a <__vector_32+0x15a>
			/* Put data into buffer, sends the data */
			USART1.TXDATAL = (*buff)[charIndex++];
		}
		else
		{
			charIndex = 0;
    1f2e:	10 92 18 47 	sts	0x4718, r1	; 0x804718 <_ZZ11__vector_32E9charIndex_0>
			(*buff)[0] = '\0';
    1f32:	80 91 16 47 	lds	r24, 0x4716	; 0x804716 <_ZZ11__vector_32E4buff_0>
    1f36:	90 91 17 47 	lds	r25, 0x4717	; 0x804717 <_ZZ11__vector_32E4buff_0+0x1>
    1f3a:	fc 01       	movw	r30, r24
    1f3c:	10 82       	st	Z, r1
			buff = nextFullLBTxBuffer();
    1f3e:	0e 94 22 58 	call	0xb044	; 0xb044 <_Z18nextFullLBTxBufferv>
    1f42:	80 93 16 47 	sts	0x4716, r24	; 0x804716 <_ZZ11__vector_32E4buff_0>
    1f46:	90 93 17 47 	sts	0x4717, r25	; 0x804717 <_ZZ11__vector_32E4buff_0+0x1>
			if(!buff)
    1f4a:	80 91 16 47 	lds	r24, 0x4716	; 0x804716 <_ZZ11__vector_32E4buff_0>
    1f4e:	90 91 17 47 	lds	r25, 0x4717	; 0x804717 <_ZZ11__vector_32E4buff_0+0x1>
    1f52:	89 2b       	or	r24, r25
    1f54:	11 f4       	brne	.+4      	; 0x1f5a <__vector_32+0x15a>
			{
				linkbus_end_tx();
    1f56:	0e 94 67 59 	call	0xb2ce	; 0xb2ce <_Z14linkbus_end_txv>
			}
		}
	}
}
    1f5a:	00 00       	nop
    1f5c:	df 91       	pop	r29
    1f5e:	cf 91       	pop	r28
    1f60:	ff 91       	pop	r31
    1f62:	ef 91       	pop	r30
    1f64:	bf 91       	pop	r27
    1f66:	af 91       	pop	r26
    1f68:	9f 91       	pop	r25
    1f6a:	8f 91       	pop	r24
    1f6c:	7f 91       	pop	r23
    1f6e:	6f 91       	pop	r22
    1f70:	5f 91       	pop	r21
    1f72:	4f 91       	pop	r20
    1f74:	3f 91       	pop	r19
    1f76:	2f 91       	pop	r18
    1f78:	0f 90       	pop	r0
    1f7a:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    1f7e:	0f 90       	pop	r0
    1f80:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    1f84:	0f 90       	pop	r0
    1f86:	1f 90       	pop	r1
    1f88:	18 95       	reti

00001f8a <PORTA_set_pin_level>:
}

void initializeAllEventSettings(bool disableEvent)
{
	
}
    1f8a:	cf 93       	push	r28
    1f8c:	df 93       	push	r29
    1f8e:	00 d0       	rcall	.+0      	; 0x1f90 <PORTA_set_pin_level+0x6>
    1f90:	cd b7       	in	r28, 0x3d	; 61
    1f92:	de b7       	in	r29, 0x3e	; 62
    1f94:	89 83       	std	Y+1, r24	; 0x01
    1f96:	6a 83       	std	Y+2, r22	; 0x02
    1f98:	8a 81       	ldd	r24, Y+2	; 0x02
    1f9a:	88 23       	and	r24, r24
    1f9c:	a9 f0       	breq	.+42     	; 0x1fc8 <PORTA_set_pin_level+0x3e>
    1f9e:	20 e0       	ldi	r18, 0x00	; 0
    1fa0:	30 e0       	ldi	r19, 0x00	; 0
    1fa2:	80 e0       	ldi	r24, 0x00	; 0
    1fa4:	90 e0       	ldi	r25, 0x00	; 0
    1fa6:	fc 01       	movw	r30, r24
    1fa8:	81 81       	ldd	r24, Z+1	; 0x01
    1faa:	68 2f       	mov	r22, r24
    1fac:	89 81       	ldd	r24, Y+1	; 0x01
    1fae:	48 2f       	mov	r20, r24
    1fb0:	50 e0       	ldi	r21, 0x00	; 0
    1fb2:	81 e0       	ldi	r24, 0x01	; 1
    1fb4:	90 e0       	ldi	r25, 0x00	; 0
    1fb6:	02 c0       	rjmp	.+4      	; 0x1fbc <PORTA_set_pin_level+0x32>
    1fb8:	88 0f       	add	r24, r24
    1fba:	99 1f       	adc	r25, r25
    1fbc:	4a 95       	dec	r20
    1fbe:	e2 f7       	brpl	.-8      	; 0x1fb8 <PORTA_set_pin_level+0x2e>
    1fc0:	86 2b       	or	r24, r22
    1fc2:	f9 01       	movw	r30, r18
    1fc4:	81 83       	std	Z+1, r24	; 0x01
    1fc6:	15 c0       	rjmp	.+42     	; 0x1ff2 <PORTA_set_pin_level+0x68>
    1fc8:	20 e0       	ldi	r18, 0x00	; 0
    1fca:	30 e0       	ldi	r19, 0x00	; 0
    1fcc:	80 e0       	ldi	r24, 0x00	; 0
    1fce:	90 e0       	ldi	r25, 0x00	; 0
    1fd0:	fc 01       	movw	r30, r24
    1fd2:	81 81       	ldd	r24, Z+1	; 0x01
    1fd4:	68 2f       	mov	r22, r24
    1fd6:	89 81       	ldd	r24, Y+1	; 0x01
    1fd8:	48 2f       	mov	r20, r24
    1fda:	50 e0       	ldi	r21, 0x00	; 0
    1fdc:	81 e0       	ldi	r24, 0x01	; 1
    1fde:	90 e0       	ldi	r25, 0x00	; 0
    1fe0:	02 c0       	rjmp	.+4      	; 0x1fe6 <PORTA_set_pin_level+0x5c>
    1fe2:	88 0f       	add	r24, r24
    1fe4:	99 1f       	adc	r25, r25
    1fe6:	4a 95       	dec	r20
    1fe8:	e2 f7       	brpl	.-8      	; 0x1fe2 <PORTA_set_pin_level+0x58>
    1fea:	80 95       	com	r24
    1fec:	86 23       	and	r24, r22
    1fee:	f9 01       	movw	r30, r18
    1ff0:	81 83       	std	Z+1, r24	; 0x01
    1ff2:	00 00       	nop
    1ff4:	0f 90       	pop	r0
    1ff6:	0f 90       	pop	r0
    1ff8:	df 91       	pop	r29
    1ffa:	cf 91       	pop	r28
    1ffc:	08 95       	ret

00001ffe <PORTB_set_pin_level>:
    1ffe:	cf 93       	push	r28
    2000:	df 93       	push	r29
    2002:	00 d0       	rcall	.+0      	; 0x2004 <PORTB_set_pin_level+0x6>
    2004:	cd b7       	in	r28, 0x3d	; 61
    2006:	de b7       	in	r29, 0x3e	; 62
    2008:	89 83       	std	Y+1, r24	; 0x01
    200a:	6a 83       	std	Y+2, r22	; 0x02
    200c:	8a 81       	ldd	r24, Y+2	; 0x02
    200e:	88 23       	and	r24, r24
    2010:	a9 f0       	breq	.+42     	; 0x203c <PORTB_set_pin_level+0x3e>
    2012:	84 e0       	ldi	r24, 0x04	; 4
    2014:	90 e0       	ldi	r25, 0x00	; 0
    2016:	24 e0       	ldi	r18, 0x04	; 4
    2018:	30 e0       	ldi	r19, 0x00	; 0
    201a:	f9 01       	movw	r30, r18
    201c:	21 81       	ldd	r18, Z+1	; 0x01
    201e:	62 2f       	mov	r22, r18
    2020:	29 81       	ldd	r18, Y+1	; 0x01
    2022:	42 2f       	mov	r20, r18
    2024:	50 e0       	ldi	r21, 0x00	; 0
    2026:	21 e0       	ldi	r18, 0x01	; 1
    2028:	30 e0       	ldi	r19, 0x00	; 0
    202a:	02 c0       	rjmp	.+4      	; 0x2030 <PORTB_set_pin_level+0x32>
    202c:	22 0f       	add	r18, r18
    202e:	33 1f       	adc	r19, r19
    2030:	4a 95       	dec	r20
    2032:	e2 f7       	brpl	.-8      	; 0x202c <PORTB_set_pin_level+0x2e>
    2034:	26 2b       	or	r18, r22
    2036:	fc 01       	movw	r30, r24
    2038:	21 83       	std	Z+1, r18	; 0x01
    203a:	15 c0       	rjmp	.+42     	; 0x2066 <PORTB_set_pin_level+0x68>
    203c:	84 e0       	ldi	r24, 0x04	; 4
    203e:	90 e0       	ldi	r25, 0x00	; 0
    2040:	24 e0       	ldi	r18, 0x04	; 4
    2042:	30 e0       	ldi	r19, 0x00	; 0
    2044:	f9 01       	movw	r30, r18
    2046:	21 81       	ldd	r18, Z+1	; 0x01
    2048:	62 2f       	mov	r22, r18
    204a:	29 81       	ldd	r18, Y+1	; 0x01
    204c:	42 2f       	mov	r20, r18
    204e:	50 e0       	ldi	r21, 0x00	; 0
    2050:	21 e0       	ldi	r18, 0x01	; 1
    2052:	30 e0       	ldi	r19, 0x00	; 0
    2054:	02 c0       	rjmp	.+4      	; 0x205a <PORTB_set_pin_level+0x5c>
    2056:	22 0f       	add	r18, r18
    2058:	33 1f       	adc	r19, r19
    205a:	4a 95       	dec	r20
    205c:	e2 f7       	brpl	.-8      	; 0x2056 <PORTB_set_pin_level+0x58>
    205e:	20 95       	com	r18
    2060:	26 23       	and	r18, r22
    2062:	fc 01       	movw	r30, r24
    2064:	21 83       	std	Z+1, r18	; 0x01
    2066:	00 00       	nop
    2068:	0f 90       	pop	r0
    206a:	0f 90       	pop	r0
    206c:	df 91       	pop	r29
    206e:	cf 91       	pop	r28
    2070:	08 95       	ret

00002072 <PORTC_set_pin_pull_mode>:
    2072:	cf 93       	push	r28
    2074:	df 93       	push	r29
    2076:	00 d0       	rcall	.+0      	; 0x2078 <PORTC_set_pin_pull_mode+0x6>
    2078:	00 d0       	rcall	.+0      	; 0x207a <PORTC_set_pin_pull_mode+0x8>
    207a:	cd b7       	in	r28, 0x3d	; 61
    207c:	de b7       	in	r29, 0x3e	; 62
    207e:	8b 83       	std	Y+3, r24	; 0x03
    2080:	6c 83       	std	Y+4, r22	; 0x04
    2082:	8b 81       	ldd	r24, Y+3	; 0x03
    2084:	88 2f       	mov	r24, r24
    2086:	90 e0       	ldi	r25, 0x00	; 0
    2088:	80 5b       	subi	r24, 0xB0	; 176
    208a:	9b 4f       	sbci	r25, 0xFB	; 251
    208c:	89 83       	std	Y+1, r24	; 0x01
    208e:	9a 83       	std	Y+2, r25	; 0x02
    2090:	8c 81       	ldd	r24, Y+4	; 0x04
    2092:	81 30       	cpi	r24, 0x01	; 1
    2094:	59 f4       	brne	.+22     	; 0x20ac <PORTC_set_pin_pull_mode+0x3a>
    2096:	89 81       	ldd	r24, Y+1	; 0x01
    2098:	9a 81       	ldd	r25, Y+2	; 0x02
    209a:	fc 01       	movw	r30, r24
    209c:	80 81       	ld	r24, Z
    209e:	28 2f       	mov	r18, r24
    20a0:	28 60       	ori	r18, 0x08	; 8
    20a2:	89 81       	ldd	r24, Y+1	; 0x01
    20a4:	9a 81       	ldd	r25, Y+2	; 0x02
    20a6:	fc 01       	movw	r30, r24
    20a8:	20 83       	st	Z, r18
    20aa:	0d c0       	rjmp	.+26     	; 0x20c6 <PORTC_set_pin_pull_mode+0x54>
    20ac:	8c 81       	ldd	r24, Y+4	; 0x04
    20ae:	88 23       	and	r24, r24
    20b0:	51 f4       	brne	.+20     	; 0x20c6 <PORTC_set_pin_pull_mode+0x54>
    20b2:	89 81       	ldd	r24, Y+1	; 0x01
    20b4:	9a 81       	ldd	r25, Y+2	; 0x02
    20b6:	fc 01       	movw	r30, r24
    20b8:	80 81       	ld	r24, Z
    20ba:	28 2f       	mov	r18, r24
    20bc:	27 7f       	andi	r18, 0xF7	; 247
    20be:	89 81       	ldd	r24, Y+1	; 0x01
    20c0:	9a 81       	ldd	r25, Y+2	; 0x02
    20c2:	fc 01       	movw	r30, r24
    20c4:	20 83       	st	Z, r18
    20c6:	00 00       	nop
    20c8:	24 96       	adiw	r28, 0x04	; 4
    20ca:	cd bf       	out	0x3d, r28	; 61
    20cc:	de bf       	out	0x3e, r29	; 62
    20ce:	df 91       	pop	r29
    20d0:	cf 91       	pop	r28
    20d2:	08 95       	ret

000020d4 <PORTC_set_pin_level>:
    20d4:	cf 93       	push	r28
    20d6:	df 93       	push	r29
    20d8:	00 d0       	rcall	.+0      	; 0x20da <PORTC_set_pin_level+0x6>
    20da:	cd b7       	in	r28, 0x3d	; 61
    20dc:	de b7       	in	r29, 0x3e	; 62
    20de:	89 83       	std	Y+1, r24	; 0x01
    20e0:	6a 83       	std	Y+2, r22	; 0x02
    20e2:	8a 81       	ldd	r24, Y+2	; 0x02
    20e4:	88 23       	and	r24, r24
    20e6:	a9 f0       	breq	.+42     	; 0x2112 <PORTC_set_pin_level+0x3e>
    20e8:	88 e0       	ldi	r24, 0x08	; 8
    20ea:	90 e0       	ldi	r25, 0x00	; 0
    20ec:	28 e0       	ldi	r18, 0x08	; 8
    20ee:	30 e0       	ldi	r19, 0x00	; 0
    20f0:	f9 01       	movw	r30, r18
    20f2:	21 81       	ldd	r18, Z+1	; 0x01
    20f4:	62 2f       	mov	r22, r18
    20f6:	29 81       	ldd	r18, Y+1	; 0x01
    20f8:	42 2f       	mov	r20, r18
    20fa:	50 e0       	ldi	r21, 0x00	; 0
    20fc:	21 e0       	ldi	r18, 0x01	; 1
    20fe:	30 e0       	ldi	r19, 0x00	; 0
    2100:	02 c0       	rjmp	.+4      	; 0x2106 <PORTC_set_pin_level+0x32>
    2102:	22 0f       	add	r18, r18
    2104:	33 1f       	adc	r19, r19
    2106:	4a 95       	dec	r20
    2108:	e2 f7       	brpl	.-8      	; 0x2102 <PORTC_set_pin_level+0x2e>
    210a:	26 2b       	or	r18, r22
    210c:	fc 01       	movw	r30, r24
    210e:	21 83       	std	Z+1, r18	; 0x01
    2110:	15 c0       	rjmp	.+42     	; 0x213c <PORTC_set_pin_level+0x68>
    2112:	88 e0       	ldi	r24, 0x08	; 8
    2114:	90 e0       	ldi	r25, 0x00	; 0
    2116:	28 e0       	ldi	r18, 0x08	; 8
    2118:	30 e0       	ldi	r19, 0x00	; 0
    211a:	f9 01       	movw	r30, r18
    211c:	21 81       	ldd	r18, Z+1	; 0x01
    211e:	62 2f       	mov	r22, r18
    2120:	29 81       	ldd	r18, Y+1	; 0x01
    2122:	42 2f       	mov	r20, r18
    2124:	50 e0       	ldi	r21, 0x00	; 0
    2126:	21 e0       	ldi	r18, 0x01	; 1
    2128:	30 e0       	ldi	r19, 0x00	; 0
    212a:	02 c0       	rjmp	.+4      	; 0x2130 <PORTC_set_pin_level+0x5c>
    212c:	22 0f       	add	r18, r18
    212e:	33 1f       	adc	r19, r19
    2130:	4a 95       	dec	r20
    2132:	e2 f7       	brpl	.-8      	; 0x212c <PORTC_set_pin_level+0x58>
    2134:	20 95       	com	r18
    2136:	26 23       	and	r18, r22
    2138:	fc 01       	movw	r30, r24
    213a:	21 83       	std	Z+1, r18	; 0x01
    213c:	00 00       	nop
    213e:	0f 90       	pop	r0
    2140:	0f 90       	pop	r0
    2142:	df 91       	pop	r29
    2144:	cf 91       	pop	r28
    2146:	08 95       	ret

00002148 <PORTC_get_pin_level>:
    2148:	cf 93       	push	r28
    214a:	df 93       	push	r29
    214c:	1f 92       	push	r1
    214e:	cd b7       	in	r28, 0x3d	; 61
    2150:	de b7       	in	r29, 0x3e	; 62
    2152:	89 83       	std	Y+1, r24	; 0x01
    2154:	88 e0       	ldi	r24, 0x08	; 8
    2156:	90 e0       	ldi	r25, 0x00	; 0
    2158:	fc 01       	movw	r30, r24
    215a:	82 81       	ldd	r24, Z+2	; 0x02
    215c:	88 2f       	mov	r24, r24
    215e:	90 e0       	ldi	r25, 0x00	; 0
    2160:	29 81       	ldd	r18, Y+1	; 0x01
    2162:	22 2f       	mov	r18, r18
    2164:	30 e0       	ldi	r19, 0x00	; 0
    2166:	02 c0       	rjmp	.+4      	; 0x216c <PORTC_get_pin_level+0x24>
    2168:	95 95       	asr	r25
    216a:	87 95       	ror	r24
    216c:	2a 95       	dec	r18
    216e:	e2 f7       	brpl	.-8      	; 0x2168 <PORTC_get_pin_level+0x20>
    2170:	81 70       	andi	r24, 0x01	; 1
    2172:	99 27       	eor	r25, r25
    2174:	21 e0       	ldi	r18, 0x01	; 1
    2176:	89 2b       	or	r24, r25
    2178:	09 f4       	brne	.+2      	; 0x217c <PORTC_get_pin_level+0x34>
    217a:	20 e0       	ldi	r18, 0x00	; 0
    217c:	82 2f       	mov	r24, r18
    217e:	0f 90       	pop	r0
    2180:	df 91       	pop	r29
    2182:	cf 91       	pop	r28
    2184:	08 95       	ret

00002186 <PORTD_get_pin_level>:
    2186:	cf 93       	push	r28
    2188:	df 93       	push	r29
    218a:	1f 92       	push	r1
    218c:	cd b7       	in	r28, 0x3d	; 61
    218e:	de b7       	in	r29, 0x3e	; 62
    2190:	89 83       	std	Y+1, r24	; 0x01
    2192:	8c e0       	ldi	r24, 0x0C	; 12
    2194:	90 e0       	ldi	r25, 0x00	; 0
    2196:	fc 01       	movw	r30, r24
    2198:	82 81       	ldd	r24, Z+2	; 0x02
    219a:	88 2f       	mov	r24, r24
    219c:	90 e0       	ldi	r25, 0x00	; 0
    219e:	29 81       	ldd	r18, Y+1	; 0x01
    21a0:	22 2f       	mov	r18, r18
    21a2:	30 e0       	ldi	r19, 0x00	; 0
    21a4:	02 c0       	rjmp	.+4      	; 0x21aa <PORTD_get_pin_level+0x24>
    21a6:	95 95       	asr	r25
    21a8:	87 95       	ror	r24
    21aa:	2a 95       	dec	r18
    21ac:	e2 f7       	brpl	.-8      	; 0x21a6 <PORTD_get_pin_level+0x20>
    21ae:	81 70       	andi	r24, 0x01	; 1
    21b0:	99 27       	eor	r25, r25
    21b2:	21 e0       	ldi	r18, 0x01	; 1
    21b4:	89 2b       	or	r24, r25
    21b6:	09 f4       	brne	.+2      	; 0x21ba <PORTD_get_pin_level+0x34>
    21b8:	20 e0       	ldi	r18, 0x00	; 0
    21ba:	82 2f       	mov	r24, r18
    21bc:	0f 90       	pop	r0
    21be:	df 91       	pop	r29
    21c0:	cf 91       	pop	r28
    21c2:	08 95       	ret

000021c4 <LED_set_RED_level>:
    21c4:	cf 93       	push	r28
    21c6:	df 93       	push	r29
    21c8:	1f 92       	push	r1
    21ca:	cd b7       	in	r28, 0x3d	; 61
    21cc:	de b7       	in	r29, 0x3e	; 62
    21ce:	89 83       	std	Y+1, r24	; 0x01
    21d0:	69 81       	ldd	r22, Y+1	; 0x01
    21d2:	86 e0       	ldi	r24, 0x06	; 6
    21d4:	0e 94 6a 10 	call	0x20d4	; 0x20d4 <PORTC_set_pin_level>
    21d8:	00 00       	nop
    21da:	0f 90       	pop	r0
    21dc:	df 91       	pop	r29
    21de:	cf 91       	pop	r28
    21e0:	08 95       	ret

000021e2 <__vector_6>:
    21e2:	1f 92       	push	r1
    21e4:	0f 92       	push	r0
    21e6:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    21ea:	0f 92       	push	r0
    21ec:	11 24       	eor	r1, r1
    21ee:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    21f2:	0f 92       	push	r0
    21f4:	ef 92       	push	r14
    21f6:	ff 92       	push	r15
    21f8:	0f 93       	push	r16
    21fa:	1f 93       	push	r17
    21fc:	2f 93       	push	r18
    21fe:	3f 93       	push	r19
    2200:	4f 93       	push	r20
    2202:	5f 93       	push	r21
    2204:	6f 93       	push	r22
    2206:	7f 93       	push	r23
    2208:	8f 93       	push	r24
    220a:	9f 93       	push	r25
    220c:	af 93       	push	r26
    220e:	bf 93       	push	r27
    2210:	ef 93       	push	r30
    2212:	ff 93       	push	r31
    2214:	cf 93       	push	r28
    2216:	df 93       	push	r29
    2218:	cd b7       	in	r28, 0x3d	; 61
    221a:	de b7       	in	r29, 0x3e	; 62
    221c:	2f 97       	sbiw	r28, 0x0f	; 15
    221e:	cd bf       	out	0x3d, r28	; 61
    2220:	de bf       	out	0x3e, r29	; 62
    2222:	80 e0       	ldi	r24, 0x00	; 0
    2224:	94 e0       	ldi	r25, 0x04	; 4
    2226:	fc 01       	movw	r30, r24
    2228:	81 85       	ldd	r24, Z+9	; 0x09
    222a:	88 2f       	mov	r24, r24
    222c:	90 e0       	ldi	r25, 0x00	; 0
    222e:	84 70       	andi	r24, 0x04	; 4
    2230:	99 27       	eor	r25, r25
    2232:	21 e0       	ldi	r18, 0x01	; 1
    2234:	89 2b       	or	r24, r25
    2236:	09 f4       	brne	.+2      	; 0x223a <__vector_6+0x58>
    2238:	20 e0       	ldi	r18, 0x00	; 0
    223a:	22 23       	and	r18, r18
    223c:	09 f4       	brne	.+2      	; 0x2240 <__vector_6+0x5e>
    223e:	d2 c3       	rjmp	.+1956   	; 0x29e4 <__vector_6+0x802>
    2240:	0e 94 88 06 	call	0xd10	; 0xd10 <system_tick>
    2244:	80 91 99 47 	lds	r24, 0x4799	; 0x804799 <_ZL10g_sleeping>
    2248:	88 23       	and	r24, r24
    224a:	09 f4       	brne	.+2      	; 0x224e <__vector_6+0x6c>
    224c:	3e c0       	rjmp	.+124    	; 0x22ca <__vector_6+0xe8>
    224e:	80 91 9a 47 	lds	r24, 0x479A	; 0x80479a <_ZL23g_seconds_left_to_sleep>
    2252:	90 91 9b 47 	lds	r25, 0x479B	; 0x80479b <_ZL23g_seconds_left_to_sleep+0x1>
    2256:	a0 91 9c 47 	lds	r26, 0x479C	; 0x80479c <_ZL23g_seconds_left_to_sleep+0x2>
    225a:	b0 91 9d 47 	lds	r27, 0x479D	; 0x80479d <_ZL23g_seconds_left_to_sleep+0x3>
    225e:	21 e0       	ldi	r18, 0x01	; 1
    2260:	89 2b       	or	r24, r25
    2262:	8a 2b       	or	r24, r26
    2264:	8b 2b       	or	r24, r27
    2266:	09 f4       	brne	.+2      	; 0x226a <__vector_6+0x88>
    2268:	20 e0       	ldi	r18, 0x00	; 0
    226a:	22 23       	and	r18, r18
    226c:	99 f0       	breq	.+38     	; 0x2294 <__vector_6+0xb2>
    226e:	80 91 9a 47 	lds	r24, 0x479A	; 0x80479a <_ZL23g_seconds_left_to_sleep>
    2272:	90 91 9b 47 	lds	r25, 0x479B	; 0x80479b <_ZL23g_seconds_left_to_sleep+0x1>
    2276:	a0 91 9c 47 	lds	r26, 0x479C	; 0x80479c <_ZL23g_seconds_left_to_sleep+0x2>
    227a:	b0 91 9d 47 	lds	r27, 0x479D	; 0x80479d <_ZL23g_seconds_left_to_sleep+0x3>
    227e:	01 97       	sbiw	r24, 0x01	; 1
    2280:	a1 09       	sbc	r26, r1
    2282:	b1 09       	sbc	r27, r1
    2284:	80 93 9a 47 	sts	0x479A, r24	; 0x80479a <_ZL23g_seconds_left_to_sleep>
    2288:	90 93 9b 47 	sts	0x479B, r25	; 0x80479b <_ZL23g_seconds_left_to_sleep+0x1>
    228c:	a0 93 9c 47 	sts	0x479C, r26	; 0x80479c <_ZL23g_seconds_left_to_sleep+0x2>
    2290:	b0 93 9d 47 	sts	0x479D, r27	; 0x80479d <_ZL23g_seconds_left_to_sleep+0x3>
    2294:	80 91 9a 47 	lds	r24, 0x479A	; 0x80479a <_ZL23g_seconds_left_to_sleep>
    2298:	90 91 9b 47 	lds	r25, 0x479B	; 0x80479b <_ZL23g_seconds_left_to_sleep+0x1>
    229c:	a0 91 9c 47 	lds	r26, 0x479C	; 0x80479c <_ZL23g_seconds_left_to_sleep+0x2>
    22a0:	b0 91 9d 47 	lds	r27, 0x479D	; 0x80479d <_ZL23g_seconds_left_to_sleep+0x3>
    22a4:	89 2b       	or	r24, r25
    22a6:	8a 2b       	or	r24, r26
    22a8:	8b 2b       	or	r24, r27
    22aa:	21 f0       	breq	.+8      	; 0x22b4 <__vector_6+0xd2>
    22ac:	80 91 06 40 	lds	r24, 0x4006	; 0x804006 <_ZL28g_antenna_connection_changed>
    22b0:	88 23       	and	r24, r24
    22b2:	11 f0       	breq	.+4      	; 0x22b8 <__vector_6+0xd6>
    22b4:	81 e0       	ldi	r24, 0x01	; 1
    22b6:	01 c0       	rjmp	.+2      	; 0x22ba <__vector_6+0xd8>
    22b8:	80 e0       	ldi	r24, 0x00	; 0
    22ba:	88 23       	and	r24, r24
    22bc:	09 f4       	brne	.+2      	; 0x22c0 <__vector_6+0xde>
    22be:	92 c3       	rjmp	.+1828   	; 0x29e4 <__vector_6+0x802>
    22c0:	10 92 98 47 	sts	0x4798, r1	; 0x804798 <_ZL13g_go_to_sleep>
    22c4:	10 92 99 47 	sts	0x4799, r1	; 0x804799 <_ZL10g_sleeping>
    22c8:	8d c3       	rjmp	.+1818   	; 0x29e4 <__vector_6+0x802>
    22ca:	19 86       	std	Y+9, r1	; 0x09
    22cc:	1a 86       	std	Y+10, r1	; 0x0a
    22ce:	1b 86       	std	Y+11, r1	; 0x0b
    22d0:	1c 86       	std	Y+12, r1	; 0x0c
    22d2:	80 91 13 40 	lds	r24, 0x4013	; 0x804013 <g_update_timeout_seconds>
    22d6:	90 91 14 40 	lds	r25, 0x4014	; 0x804014 <g_update_timeout_seconds+0x1>
    22da:	21 e0       	ldi	r18, 0x01	; 1
    22dc:	89 2b       	or	r24, r25
    22de:	09 f4       	brne	.+2      	; 0x22e2 <__vector_6+0x100>
    22e0:	20 e0       	ldi	r18, 0x00	; 0
    22e2:	22 23       	and	r18, r18
    22e4:	49 f0       	breq	.+18     	; 0x22f8 <__vector_6+0x116>
    22e6:	80 91 13 40 	lds	r24, 0x4013	; 0x804013 <g_update_timeout_seconds>
    22ea:	90 91 14 40 	lds	r25, 0x4014	; 0x804014 <g_update_timeout_seconds+0x1>
    22ee:	01 97       	sbiw	r24, 0x01	; 1
    22f0:	80 93 13 40 	sts	0x4013, r24	; 0x804013 <g_update_timeout_seconds>
    22f4:	90 93 14 40 	sts	0x4014, r25	; 0x804014 <g_update_timeout_seconds+0x1>
    22f8:	80 91 95 47 	lds	r24, 0x4795	; 0x804795 <g_event_commenced>
    22fc:	88 23       	and	r24, r24
    22fe:	09 f4       	brne	.+2      	; 0x2302 <__vector_6+0x120>
    2300:	5c c0       	rjmp	.+184    	; 0x23ba <__vector_6+0x1d8>
    2302:	80 91 90 47 	lds	r24, 0x4790	; 0x804790 <g_event_finish_epoch>
    2306:	90 91 91 47 	lds	r25, 0x4791	; 0x804791 <g_event_finish_epoch+0x1>
    230a:	a0 91 92 47 	lds	r26, 0x4792	; 0x804792 <g_event_finish_epoch+0x2>
    230e:	b0 91 93 47 	lds	r27, 0x4793	; 0x804793 <g_event_finish_epoch+0x3>
    2312:	89 2b       	or	r24, r25
    2314:	8a 2b       	or	r24, r26
    2316:	8b 2b       	or	r24, r27
    2318:	71 f0       	breq	.+28     	; 0x2336 <__vector_6+0x154>
    231a:	90 91 96 47 	lds	r25, 0x4796	; 0x804796 <g_check_for_next_event>
    231e:	81 e0       	ldi	r24, 0x01	; 1
    2320:	89 27       	eor	r24, r25
    2322:	88 23       	and	r24, r24
    2324:	41 f0       	breq	.+16     	; 0x2336 <__vector_6+0x154>
    2326:	90 91 5c 47 	lds	r25, 0x475C	; 0x80475c <_ZL20g_shutting_down_wifi>
    232a:	81 e0       	ldi	r24, 0x01	; 1
    232c:	89 27       	eor	r24, r25
    232e:	88 23       	and	r24, r24
    2330:	11 f0       	breq	.+4      	; 0x2336 <__vector_6+0x154>
    2332:	81 e0       	ldi	r24, 0x01	; 1
    2334:	01 c0       	rjmp	.+2      	; 0x2338 <__vector_6+0x156>
    2336:	80 e0       	ldi	r24, 0x00	; 0
    2338:	88 23       	and	r24, r24
    233a:	09 f4       	brne	.+2      	; 0x233e <__vector_6+0x15c>
    233c:	3e c0       	rjmp	.+124    	; 0x23ba <__vector_6+0x1d8>
    233e:	ce 01       	movw	r24, r28
    2340:	09 96       	adiw	r24, 0x09	; 9
    2342:	0e 94 56 06 	call	0xcac	; 0xcac <time>
    2346:	29 85       	ldd	r18, Y+9	; 0x09
    2348:	3a 85       	ldd	r19, Y+10	; 0x0a
    234a:	4b 85       	ldd	r20, Y+11	; 0x0b
    234c:	5c 85       	ldd	r21, Y+12	; 0x0c
    234e:	80 91 90 47 	lds	r24, 0x4790	; 0x804790 <g_event_finish_epoch>
    2352:	90 91 91 47 	lds	r25, 0x4791	; 0x804791 <g_event_finish_epoch+0x1>
    2356:	a0 91 92 47 	lds	r26, 0x4792	; 0x804792 <g_event_finish_epoch+0x2>
    235a:	b0 91 93 47 	lds	r27, 0x4793	; 0x804793 <g_event_finish_epoch+0x3>
    235e:	61 e0       	ldi	r22, 0x01	; 1
    2360:	28 17       	cp	r18, r24
    2362:	39 07       	cpc	r19, r25
    2364:	4a 07       	cpc	r20, r26
    2366:	5b 07       	cpc	r21, r27
    2368:	08 f4       	brcc	.+2      	; 0x236c <__vector_6+0x18a>
    236a:	60 e0       	ldi	r22, 0x00	; 0
    236c:	66 23       	and	r22, r22
    236e:	29 f1       	breq	.+74     	; 0x23ba <__vector_6+0x1d8>
    2370:	8c ef       	ldi	r24, 0xFC	; 252
    2372:	80 93 4c 47 	sts	0x474C, r24	; 0x80474c <_ZL18g_last_status_code>
    2376:	10 92 54 47 	sts	0x4754, r1	; 0x804754 <_ZL12g_on_the_air>
    237a:	10 92 55 47 	sts	0x4755, r1	; 0x804755 <_ZL12g_on_the_air+0x1>
    237e:	10 92 56 47 	sts	0x4756, r1	; 0x804756 <_ZL12g_on_the_air+0x2>
    2382:	10 92 57 47 	sts	0x4757, r1	; 0x804757 <_ZL12g_on_the_air+0x3>
    2386:	80 e0       	ldi	r24, 0x00	; 0
    2388:	0e 94 f9 6f 	call	0xdff2	; 0xdff2 <_Z14keyTransmitterb>
    238c:	10 92 94 47 	sts	0x4794, r1	; 0x804794 <g_event_enabled>
    2390:	10 92 95 47 	sts	0x4795, r1	; 0x804795 <g_event_commenced>
    2394:	81 e0       	ldi	r24, 0x01	; 1
    2396:	80 93 96 47 	sts	0x4796, r24	; 0x804796 <g_check_for_next_event>
    239a:	8a e5       	ldi	r24, 0x5A	; 90
    239c:	90 e0       	ldi	r25, 0x00	; 0
    239e:	80 93 13 40 	sts	0x4013, r24	; 0x804013 <g_update_timeout_seconds>
    23a2:	90 93 14 40 	sts	0x4014, r25	; 0x804014 <g_update_timeout_seconds+0x1>
    23a6:	80 91 0a 40 	lds	r24, 0x400A	; 0x80400a <_ZL13g_wifi_active>
    23aa:	88 23       	and	r24, r24
    23ac:	19 f0       	breq	.+6      	; 0x23b4 <__vector_6+0x1d2>
    23ae:	8c e3       	ldi	r24, 0x3C	; 60
    23b0:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    23b4:	80 e0       	ldi	r24, 0x00	; 0
    23b6:	0e 94 e2 10 	call	0x21c4	; 0x21c4 <LED_set_RED_level>
    23ba:	80 91 94 47 	lds	r24, 0x4794	; 0x804794 <g_event_enabled>
    23be:	88 23       	and	r24, r24
    23c0:	09 f4       	brne	.+2      	; 0x23c4 <__vector_6+0x1e2>
    23c2:	92 c2       	rjmp	.+1316   	; 0x28e8 <__vector_6+0x706>
    23c4:	80 91 95 47 	lds	r24, 0x4795	; 0x804795 <g_event_commenced>
    23c8:	88 23       	and	r24, r24
    23ca:	09 f4       	brne	.+2      	; 0x23ce <__vector_6+0x1ec>
    23cc:	f0 c1       	rjmp	.+992    	; 0x27ae <__vector_6+0x5cc>
    23ce:	80 91 58 47 	lds	r24, 0x4758	; 0x804758 <_ZL26g_sendID_seconds_countdown>
    23d2:	90 91 59 47 	lds	r25, 0x4759	; 0x804759 <_ZL26g_sendID_seconds_countdown+0x1>
    23d6:	21 e0       	ldi	r18, 0x01	; 1
    23d8:	89 2b       	or	r24, r25
    23da:	09 f4       	brne	.+2      	; 0x23de <__vector_6+0x1fc>
    23dc:	20 e0       	ldi	r18, 0x00	; 0
    23de:	22 23       	and	r18, r18
    23e0:	49 f0       	breq	.+18     	; 0x23f4 <__vector_6+0x212>
    23e2:	80 91 58 47 	lds	r24, 0x4758	; 0x804758 <_ZL26g_sendID_seconds_countdown>
    23e6:	90 91 59 47 	lds	r25, 0x4759	; 0x804759 <_ZL26g_sendID_seconds_countdown+0x1>
    23ea:	01 97       	sbiw	r24, 0x01	; 1
    23ec:	80 93 58 47 	sts	0x4758, r24	; 0x804758 <_ZL26g_sendID_seconds_countdown>
    23f0:	90 93 59 47 	sts	0x4759, r25	; 0x804759 <_ZL26g_sendID_seconds_countdown+0x1>
    23f4:	80 91 54 47 	lds	r24, 0x4754	; 0x804754 <_ZL12g_on_the_air>
    23f8:	90 91 55 47 	lds	r25, 0x4755	; 0x804755 <_ZL12g_on_the_air+0x1>
    23fc:	a0 91 56 47 	lds	r26, 0x4756	; 0x804756 <_ZL12g_on_the_air+0x2>
    2400:	b0 91 57 47 	lds	r27, 0x4757	; 0x804757 <_ZL12g_on_the_air+0x3>
    2404:	21 e0       	ldi	r18, 0x01	; 1
    2406:	89 2b       	or	r24, r25
    2408:	8a 2b       	or	r24, r26
    240a:	8b 2b       	or	r24, r27
    240c:	09 f4       	brne	.+2      	; 0x2410 <__vector_6+0x22e>
    240e:	20 e0       	ldi	r18, 0x00	; 0
    2410:	22 23       	and	r18, r18
    2412:	09 f4       	brne	.+2      	; 0x2416 <__vector_6+0x234>
    2414:	69 c2       	rjmp	.+1234   	; 0x28e8 <__vector_6+0x706>
    2416:	80 91 54 47 	lds	r24, 0x4754	; 0x804754 <_ZL12g_on_the_air>
    241a:	90 91 55 47 	lds	r25, 0x4755	; 0x804755 <_ZL12g_on_the_air+0x1>
    241e:	a0 91 56 47 	lds	r26, 0x4756	; 0x804756 <_ZL12g_on_the_air+0x2>
    2422:	b0 91 57 47 	lds	r27, 0x4757	; 0x804757 <_ZL12g_on_the_air+0x3>
    2426:	21 e0       	ldi	r18, 0x01	; 1
    2428:	18 16       	cp	r1, r24
    242a:	19 06       	cpc	r1, r25
    242c:	1a 06       	cpc	r1, r26
    242e:	1b 06       	cpc	r1, r27
    2430:	0c f0       	brlt	.+2      	; 0x2434 <__vector_6+0x252>
    2432:	20 e0       	ldi	r18, 0x00	; 0
    2434:	22 23       	and	r18, r18
    2436:	09 f4       	brne	.+2      	; 0x243a <__vector_6+0x258>
    2438:	5e c1       	rjmp	.+700    	; 0x26f6 <__vector_6+0x514>
    243a:	80 91 54 47 	lds	r24, 0x4754	; 0x804754 <_ZL12g_on_the_air>
    243e:	90 91 55 47 	lds	r25, 0x4755	; 0x804755 <_ZL12g_on_the_air+0x1>
    2442:	a0 91 56 47 	lds	r26, 0x4756	; 0x804756 <_ZL12g_on_the_air+0x2>
    2446:	b0 91 57 47 	lds	r27, 0x4757	; 0x804757 <_ZL12g_on_the_air+0x3>
    244a:	01 97       	sbiw	r24, 0x01	; 1
    244c:	a1 09       	sbc	r26, r1
    244e:	b1 09       	sbc	r27, r1
    2450:	80 93 54 47 	sts	0x4754, r24	; 0x804754 <_ZL12g_on_the_air>
    2454:	90 93 55 47 	sts	0x4755, r25	; 0x804755 <_ZL12g_on_the_air+0x1>
    2458:	a0 93 56 47 	sts	0x4756, r26	; 0x804756 <_ZL12g_on_the_air+0x2>
    245c:	b0 93 57 47 	sts	0x4757, r27	; 0x804757 <_ZL12g_on_the_air+0x3>
    2460:	80 91 58 47 	lds	r24, 0x4758	; 0x804758 <_ZL26g_sendID_seconds_countdown>
    2464:	90 91 59 47 	lds	r25, 0x4759	; 0x804759 <_ZL26g_sendID_seconds_countdown+0x1>
    2468:	89 2b       	or	r24, r25
    246a:	41 f4       	brne	.+16     	; 0x247c <__vector_6+0x29a>
    246c:	80 91 88 47 	lds	r24, 0x4788	; 0x804788 <g_time_needed_for_ID>
    2470:	90 91 89 47 	lds	r25, 0x4789	; 0x804789 <g_time_needed_for_ID+0x1>
    2474:	89 2b       	or	r24, r25
    2476:	11 f0       	breq	.+4      	; 0x247c <__vector_6+0x29a>
    2478:	81 e0       	ldi	r24, 0x01	; 1
    247a:	01 c0       	rjmp	.+2      	; 0x247e <__vector_6+0x29c>
    247c:	80 e0       	ldi	r24, 0x00	; 0
    247e:	88 23       	and	r24, r24
    2480:	a9 f1       	breq	.+106    	; 0x24ec <__vector_6+0x30a>
    2482:	80 91 88 47 	lds	r24, 0x4788	; 0x804788 <g_time_needed_for_ID>
    2486:	90 91 89 47 	lds	r25, 0x4789	; 0x804789 <g_time_needed_for_ID+0x1>
    248a:	9c 01       	movw	r18, r24
    248c:	40 e0       	ldi	r20, 0x00	; 0
    248e:	50 e0       	ldi	r21, 0x00	; 0
    2490:	80 91 54 47 	lds	r24, 0x4754	; 0x804754 <_ZL12g_on_the_air>
    2494:	90 91 55 47 	lds	r25, 0x4755	; 0x804755 <_ZL12g_on_the_air+0x1>
    2498:	a0 91 56 47 	lds	r26, 0x4756	; 0x804756 <_ZL12g_on_the_air+0x2>
    249c:	b0 91 57 47 	lds	r27, 0x4757	; 0x804757 <_ZL12g_on_the_air+0x3>
    24a0:	61 e0       	ldi	r22, 0x01	; 1
    24a2:	28 17       	cp	r18, r24
    24a4:	39 07       	cpc	r19, r25
    24a6:	4a 07       	cpc	r20, r26
    24a8:	5b 07       	cpc	r21, r27
    24aa:	09 f0       	breq	.+2      	; 0x24ae <__vector_6+0x2cc>
    24ac:	60 e0       	ldi	r22, 0x00	; 0
    24ae:	66 23       	and	r22, r22
    24b0:	e9 f0       	breq	.+58     	; 0x24ec <__vector_6+0x30a>
    24b2:	8f ee       	ldi	r24, 0xEF	; 239
    24b4:	80 93 4c 47 	sts	0x474C, r24	; 0x80474c <_ZL18g_last_status_code>
    24b8:	80 91 11 40 	lds	r24, 0x4011	; 0x804011 <g_ID_period_seconds>
    24bc:	90 91 12 40 	lds	r25, 0x4012	; 0x804012 <g_ID_period_seconds+0x1>
    24c0:	80 93 58 47 	sts	0x4758, r24	; 0x804758 <_ZL26g_sendID_seconds_countdown>
    24c4:	90 93 59 47 	sts	0x4759, r25	; 0x804759 <_ZL26g_sendID_seconds_countdown+0x1>
    24c8:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    24cc:	0e 94 4c 29 	call	0x5298	; 0x5298 <_Z13throttleValueh>
    24d0:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    24d4:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    24d8:	1d 86       	std	Y+13, r1	; 0x0d
    24da:	ce 01       	movw	r24, r28
    24dc:	0d 96       	adiw	r24, 0x0d	; 13
    24de:	40 e0       	ldi	r20, 0x00	; 0
    24e0:	50 e0       	ldi	r21, 0x00	; 0
    24e2:	bc 01       	movw	r22, r24
    24e4:	83 e7       	ldi	r24, 0x73	; 115
    24e6:	97 e4       	ldi	r25, 0x47	; 71
    24e8:	0e 94 44 5b 	call	0xb688	; 0xb688 <_Z9makeMorsePcPbS0_>
    24ec:	80 91 54 47 	lds	r24, 0x4754	; 0x804754 <_ZL12g_on_the_air>
    24f0:	90 91 55 47 	lds	r25, 0x4755	; 0x804755 <_ZL12g_on_the_air+0x1>
    24f4:	a0 91 56 47 	lds	r26, 0x4756	; 0x804756 <_ZL12g_on_the_air+0x2>
    24f8:	b0 91 57 47 	lds	r27, 0x4757	; 0x804757 <_ZL12g_on_the_air+0x3>
    24fc:	21 e0       	ldi	r18, 0x01	; 1
    24fe:	89 2b       	or	r24, r25
    2500:	8a 2b       	or	r24, r26
    2502:	8b 2b       	or	r24, r27
    2504:	09 f0       	breq	.+2      	; 0x2508 <__vector_6+0x326>
    2506:	20 e0       	ldi	r18, 0x00	; 0
    2508:	22 23       	and	r18, r18
    250a:	09 f4       	brne	.+2      	; 0x250e <__vector_6+0x32c>
    250c:	ed c1       	rjmp	.+986    	; 0x28e8 <__vector_6+0x706>
    250e:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_off_air_seconds>
    2512:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    2516:	21 e0       	ldi	r18, 0x01	; 1
    2518:	89 2b       	or	r24, r25
    251a:	09 f4       	brne	.+2      	; 0x251e <__vector_6+0x33c>
    251c:	20 e0       	ldi	r18, 0x00	; 0
    251e:	22 23       	and	r18, r18
    2520:	09 f4       	brne	.+2      	; 0x2524 <__vector_6+0x342>
    2522:	d0 c0       	rjmp	.+416    	; 0x26c4 <__vector_6+0x4e2>
    2524:	80 e0       	ldi	r24, 0x00	; 0
    2526:	0e 94 f9 6f 	call	0xdff2	; 0xdff2 <_Z14keyTransmitterb>
    252a:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_off_air_seconds>
    252e:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    2532:	20 91 54 47 	lds	r18, 0x4754	; 0x804754 <_ZL12g_on_the_air>
    2536:	30 91 55 47 	lds	r19, 0x4755	; 0x804755 <_ZL12g_on_the_air+0x1>
    253a:	40 91 56 47 	lds	r20, 0x4756	; 0x804756 <_ZL12g_on_the_air+0x2>
    253e:	50 91 57 47 	lds	r21, 0x4757	; 0x804757 <_ZL12g_on_the_air+0x3>
    2542:	09 2e       	mov	r0, r25
    2544:	00 0c       	add	r0, r0
    2546:	aa 0b       	sbc	r26, r26
    2548:	bb 0b       	sbc	r27, r27
    254a:	79 01       	movw	r14, r18
    254c:	8a 01       	movw	r16, r20
    254e:	e8 1a       	sub	r14, r24
    2550:	f9 0a       	sbc	r15, r25
    2552:	0a 0b       	sbc	r16, r26
    2554:	1b 0b       	sbc	r17, r27
    2556:	d8 01       	movw	r26, r16
    2558:	c7 01       	movw	r24, r14
    255a:	80 93 54 47 	sts	0x4754, r24	; 0x804754 <_ZL12g_on_the_air>
    255e:	90 93 55 47 	sts	0x4755, r25	; 0x804755 <_ZL12g_on_the_air+0x1>
    2562:	a0 93 56 47 	sts	0x4756, r26	; 0x804756 <_ZL12g_on_the_air+0x2>
    2566:	b0 93 57 47 	sts	0x4757, r27	; 0x804757 <_ZL12g_on_the_air+0x3>
    256a:	81 e0       	ldi	r24, 0x01	; 1
    256c:	8d 87       	std	Y+13, r24	; 0x0d
    256e:	ce 01       	movw	r24, r28
    2570:	0d 96       	adiw	r24, 0x0d	; 13
    2572:	40 e0       	ldi	r20, 0x00	; 0
    2574:	50 e0       	ldi	r21, 0x00	; 0
    2576:	bc 01       	movw	r22, r24
    2578:	8e e5       	ldi	r24, 0x5E	; 94
    257a:	97 e4       	ldi	r25, 0x47	; 71
    257c:	0e 94 44 5b 	call	0xb688	; 0xb688 <_Z9makeMorsePcPbS0_>
    2580:	8e ef       	ldi	r24, 0xFE	; 254
    2582:	80 93 4c 47 	sts	0x474C, r24	; 0x80474c <_ZL18g_last_status_code>
    2586:	80 e0       	ldi	r24, 0x00	; 0
    2588:	0e 94 e2 10 	call	0x21c4	; 0x21c4 <LED_set_RED_level>
    258c:	19 82       	std	Y+1, r1	; 0x01
    258e:	1a 82       	std	Y+2, r1	; 0x02
    2590:	1b 82       	std	Y+3, r1	; 0x03
    2592:	1c 82       	std	Y+4, r1	; 0x04
    2594:	ce 01       	movw	r24, r28
    2596:	09 96       	adiw	r24, 0x09	; 9
    2598:	0e 94 56 06 	call	0xcac	; 0xcac <time>
    259c:	29 85       	ldd	r18, Y+9	; 0x09
    259e:	3a 85       	ldd	r19, Y+10	; 0x0a
    25a0:	4b 85       	ldd	r20, Y+11	; 0x0b
    25a2:	5c 85       	ldd	r21, Y+12	; 0x0c
    25a4:	80 91 90 47 	lds	r24, 0x4790	; 0x804790 <g_event_finish_epoch>
    25a8:	90 91 91 47 	lds	r25, 0x4791	; 0x804791 <g_event_finish_epoch+0x1>
    25ac:	a0 91 92 47 	lds	r26, 0x4792	; 0x804792 <g_event_finish_epoch+0x2>
    25b0:	b0 91 93 47 	lds	r27, 0x4793	; 0x804793 <g_event_finish_epoch+0x3>
    25b4:	61 e0       	ldi	r22, 0x01	; 1
    25b6:	28 17       	cp	r18, r24
    25b8:	39 07       	cpc	r19, r25
    25ba:	4a 07       	cpc	r20, r26
    25bc:	5b 07       	cpc	r21, r27
    25be:	08 f0       	brcs	.+2      	; 0x25c2 <__vector_6+0x3e0>
    25c0:	60 e0       	ldi	r22, 0x00	; 0
    25c2:	66 23       	and	r22, r22
    25c4:	b1 f0       	breq	.+44     	; 0x25f2 <__vector_6+0x410>
    25c6:	29 85       	ldd	r18, Y+9	; 0x09
    25c8:	3a 85       	ldd	r19, Y+10	; 0x0a
    25ca:	4b 85       	ldd	r20, Y+11	; 0x0b
    25cc:	5c 85       	ldd	r21, Y+12	; 0x0c
    25ce:	80 91 90 47 	lds	r24, 0x4790	; 0x804790 <g_event_finish_epoch>
    25d2:	90 91 91 47 	lds	r25, 0x4791	; 0x804791 <g_event_finish_epoch+0x1>
    25d6:	a0 91 92 47 	lds	r26, 0x4792	; 0x804792 <g_event_finish_epoch+0x2>
    25da:	b0 91 93 47 	lds	r27, 0x4793	; 0x804793 <g_event_finish_epoch+0x3>
    25de:	bc 01       	movw	r22, r24
    25e0:	cd 01       	movw	r24, r26
    25e2:	0e 94 e3 73 	call	0xe7c6	; 0xe7c6 <_Z7timeDifmm>
    25e6:	dc 01       	movw	r26, r24
    25e8:	cb 01       	movw	r24, r22
    25ea:	89 83       	std	Y+1, r24	; 0x01
    25ec:	9a 83       	std	Y+2, r25	; 0x02
    25ee:	ab 83       	std	Y+3, r26	; 0x03
    25f0:	bc 83       	std	Y+4, r27	; 0x04
    25f2:	20 91 0f 40 	lds	r18, 0x400F	; 0x80400f <g_off_air_seconds>
    25f6:	30 91 10 40 	lds	r19, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    25fa:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    25fe:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    2602:	82 0f       	add	r24, r18
    2604:	93 1f       	adc	r25, r19
    2606:	0f 96       	adiw	r24, 0x0f	; 15
    2608:	9c 01       	movw	r18, r24
    260a:	99 0f       	add	r25, r25
    260c:	44 0b       	sbc	r20, r20
    260e:	55 0b       	sbc	r21, r21
    2610:	61 e0       	ldi	r22, 0x01	; 1
    2612:	89 81       	ldd	r24, Y+1	; 0x01
    2614:	9a 81       	ldd	r25, Y+2	; 0x02
    2616:	ab 81       	ldd	r26, Y+3	; 0x03
    2618:	bc 81       	ldd	r27, Y+4	; 0x04
    261a:	28 17       	cp	r18, r24
    261c:	39 07       	cpc	r19, r25
    261e:	4a 07       	cpc	r20, r26
    2620:	5b 07       	cpc	r21, r27
    2622:	0c f0       	brlt	.+2      	; 0x2626 <__vector_6+0x444>
    2624:	60 e0       	ldi	r22, 0x00	; 0
    2626:	66 23       	and	r22, r22
    2628:	09 f4       	brne	.+2      	; 0x262c <__vector_6+0x44a>
    262a:	5e c1       	rjmp	.+700    	; 0x28e8 <__vector_6+0x706>
    262c:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_off_air_seconds>
    2630:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    2634:	40 97       	sbiw	r24, 0x10	; 16
    2636:	34 f0       	brlt	.+12     	; 0x2644 <__vector_6+0x462>
    2638:	80 91 09 40 	lds	r24, 0x4009	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    263c:	88 23       	and	r24, r24
    263e:	11 f4       	brne	.+4      	; 0x2644 <__vector_6+0x462>
    2640:	81 e0       	ldi	r24, 0x01	; 1
    2642:	01 c0       	rjmp	.+2      	; 0x2646 <__vector_6+0x464>
    2644:	80 e0       	ldi	r24, 0x00	; 0
    2646:	88 23       	and	r24, r24
    2648:	09 f4       	brne	.+2      	; 0x264c <__vector_6+0x46a>
    264a:	4e c1       	rjmp	.+668    	; 0x28e8 <__vector_6+0x706>
    264c:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_off_air_seconds>
    2650:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    2654:	0a 97       	sbiw	r24, 0x0a	; 10
    2656:	09 2e       	mov	r0, r25
    2658:	00 0c       	add	r0, r0
    265a:	aa 0b       	sbc	r26, r26
    265c:	bb 0b       	sbc	r27, r27
    265e:	80 93 15 40 	sts	0x4015, r24	; 0x804015 <_ZL18g_seconds_to_sleep>
    2662:	90 93 16 40 	sts	0x4016, r25	; 0x804016 <_ZL18g_seconds_to_sleep+0x1>
    2666:	a0 93 17 40 	sts	0x4017, r26	; 0x804017 <_ZL18g_seconds_to_sleep+0x2>
    266a:	b0 93 18 40 	sts	0x4018, r27	; 0x804018 <_ZL18g_seconds_to_sleep+0x3>
    266e:	82 e0       	ldi	r24, 0x02	; 2
    2670:	80 93 5d 47 	sts	0x475D, r24	; 0x80475d <_ZL11g_sleepType>
    2674:	81 e0       	ldi	r24, 0x01	; 1
    2676:	80 93 98 47 	sts	0x4798, r24	; 0x804798 <_ZL13g_go_to_sleep>
    267a:	1d 82       	std	Y+5, r1	; 0x05
    267c:	1e 82       	std	Y+6, r1	; 0x06
    267e:	20 91 58 47 	lds	r18, 0x4758	; 0x804758 <_ZL26g_sendID_seconds_countdown>
    2682:	30 91 59 47 	lds	r19, 0x4759	; 0x804759 <_ZL26g_sendID_seconds_countdown+0x1>
    2686:	80 91 15 40 	lds	r24, 0x4015	; 0x804015 <_ZL18g_seconds_to_sleep>
    268a:	90 91 16 40 	lds	r25, 0x4016	; 0x804016 <_ZL18g_seconds_to_sleep+0x1>
    268e:	a0 91 17 40 	lds	r26, 0x4017	; 0x804017 <_ZL18g_seconds_to_sleep+0x2>
    2692:	b0 91 18 40 	lds	r27, 0x4018	; 0x804018 <_ZL18g_seconds_to_sleep+0x3>
    2696:	89 01       	movw	r16, r18
    2698:	08 1b       	sub	r16, r24
    269a:	19 0b       	sbc	r17, r25
    269c:	c8 01       	movw	r24, r16
    269e:	8f 83       	std	Y+7, r24	; 0x07
    26a0:	98 87       	std	Y+8, r25	; 0x08
    26a2:	2d 81       	ldd	r18, Y+5	; 0x05
    26a4:	3e 81       	ldd	r19, Y+6	; 0x06
    26a6:	8f 81       	ldd	r24, Y+7	; 0x07
    26a8:	98 85       	ldd	r25, Y+8	; 0x08
    26aa:	28 17       	cp	r18, r24
    26ac:	39 07       	cpc	r19, r25
    26ae:	1c f4       	brge	.+6      	; 0x26b6 <__vector_6+0x4d4>
    26b0:	8f 81       	ldd	r24, Y+7	; 0x07
    26b2:	98 85       	ldd	r25, Y+8	; 0x08
    26b4:	02 c0       	rjmp	.+4      	; 0x26ba <__vector_6+0x4d8>
    26b6:	8d 81       	ldd	r24, Y+5	; 0x05
    26b8:	9e 81       	ldd	r25, Y+6	; 0x06
    26ba:	80 93 58 47 	sts	0x4758, r24	; 0x804758 <_ZL26g_sendID_seconds_countdown>
    26be:	90 93 59 47 	sts	0x4759, r25	; 0x804759 <_ZL26g_sendID_seconds_countdown+0x1>
    26c2:	12 c1       	rjmp	.+548    	; 0x28e8 <__vector_6+0x706>
    26c4:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    26c8:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    26cc:	09 2e       	mov	r0, r25
    26ce:	00 0c       	add	r0, r0
    26d0:	aa 0b       	sbc	r26, r26
    26d2:	bb 0b       	sbc	r27, r27
    26d4:	80 93 54 47 	sts	0x4754, r24	; 0x804754 <_ZL12g_on_the_air>
    26d8:	90 93 55 47 	sts	0x4755, r25	; 0x804755 <_ZL12g_on_the_air+0x1>
    26dc:	a0 93 56 47 	sts	0x4756, r26	; 0x804756 <_ZL12g_on_the_air+0x2>
    26e0:	b0 93 57 47 	sts	0x4757, r27	; 0x804757 <_ZL12g_on_the_air+0x3>
    26e4:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    26e8:	0e 94 4c 29 	call	0x5298	; 0x5298 <_Z13throttleValueh>
    26ec:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    26f0:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    26f4:	f9 c0       	rjmp	.+498    	; 0x28e8 <__vector_6+0x706>
    26f6:	80 91 54 47 	lds	r24, 0x4754	; 0x804754 <_ZL12g_on_the_air>
    26fa:	90 91 55 47 	lds	r25, 0x4755	; 0x804755 <_ZL12g_on_the_air+0x1>
    26fe:	a0 91 56 47 	lds	r26, 0x4756	; 0x804756 <_ZL12g_on_the_air+0x2>
    2702:	b0 91 57 47 	lds	r27, 0x4757	; 0x804757 <_ZL12g_on_the_air+0x3>
    2706:	88 27       	eor	r24, r24
    2708:	b7 fd       	sbrc	r27, 7
    270a:	83 95       	inc	r24
    270c:	99 27       	eor	r25, r25
    270e:	aa 27       	eor	r26, r26
    2710:	bb 27       	eor	r27, r27
    2712:	88 23       	and	r24, r24
    2714:	09 f4       	brne	.+2      	; 0x2718 <__vector_6+0x536>
    2716:	e8 c0       	rjmp	.+464    	; 0x28e8 <__vector_6+0x706>
    2718:	80 91 54 47 	lds	r24, 0x4754	; 0x804754 <_ZL12g_on_the_air>
    271c:	90 91 55 47 	lds	r25, 0x4755	; 0x804755 <_ZL12g_on_the_air+0x1>
    2720:	a0 91 56 47 	lds	r26, 0x4756	; 0x804756 <_ZL12g_on_the_air+0x2>
    2724:	b0 91 57 47 	lds	r27, 0x4757	; 0x804757 <_ZL12g_on_the_air+0x3>
    2728:	01 96       	adiw	r24, 0x01	; 1
    272a:	a1 1d       	adc	r26, r1
    272c:	b1 1d       	adc	r27, r1
    272e:	80 93 54 47 	sts	0x4754, r24	; 0x804754 <_ZL12g_on_the_air>
    2732:	90 93 55 47 	sts	0x4755, r25	; 0x804755 <_ZL12g_on_the_air+0x1>
    2736:	a0 93 56 47 	sts	0x4756, r26	; 0x804756 <_ZL12g_on_the_air+0x2>
    273a:	b0 93 57 47 	sts	0x4757, r27	; 0x804757 <_ZL12g_on_the_air+0x3>
    273e:	80 91 54 47 	lds	r24, 0x4754	; 0x804754 <_ZL12g_on_the_air>
    2742:	90 91 55 47 	lds	r25, 0x4755	; 0x804755 <_ZL12g_on_the_air+0x1>
    2746:	a0 91 56 47 	lds	r26, 0x4756	; 0x804756 <_ZL12g_on_the_air+0x2>
    274a:	b0 91 57 47 	lds	r27, 0x4757	; 0x804757 <_ZL12g_on_the_air+0x3>
    274e:	21 e0       	ldi	r18, 0x01	; 1
    2750:	89 2b       	or	r24, r25
    2752:	8a 2b       	or	r24, r26
    2754:	8b 2b       	or	r24, r27
    2756:	09 f0       	breq	.+2      	; 0x275a <__vector_6+0x578>
    2758:	20 e0       	ldi	r18, 0x00	; 0
    275a:	22 23       	and	r18, r18
    275c:	09 f4       	brne	.+2      	; 0x2760 <__vector_6+0x57e>
    275e:	c4 c0       	rjmp	.+392    	; 0x28e8 <__vector_6+0x706>
    2760:	8d ef       	ldi	r24, 0xFD	; 253
    2762:	80 93 4c 47 	sts	0x474C, r24	; 0x80474c <_ZL18g_last_status_code>
    2766:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    276a:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    276e:	09 2e       	mov	r0, r25
    2770:	00 0c       	add	r0, r0
    2772:	aa 0b       	sbc	r26, r26
    2774:	bb 0b       	sbc	r27, r27
    2776:	80 93 54 47 	sts	0x4754, r24	; 0x804754 <_ZL12g_on_the_air>
    277a:	90 93 55 47 	sts	0x4755, r25	; 0x804755 <_ZL12g_on_the_air+0x1>
    277e:	a0 93 56 47 	sts	0x4756, r26	; 0x804756 <_ZL12g_on_the_air+0x2>
    2782:	b0 93 57 47 	sts	0x4757, r27	; 0x804757 <_ZL12g_on_the_air+0x3>
    2786:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    278a:	0e 94 4c 29 	call	0x5298	; 0x5298 <_Z13throttleValueh>
    278e:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    2792:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    2796:	81 e0       	ldi	r24, 0x01	; 1
    2798:	8e 87       	std	Y+14, r24	; 0x0e
    279a:	ce 01       	movw	r24, r28
    279c:	0e 96       	adiw	r24, 0x0e	; 14
    279e:	40 e0       	ldi	r20, 0x00	; 0
    27a0:	50 e0       	ldi	r21, 0x00	; 0
    27a2:	bc 01       	movw	r22, r24
    27a4:	8e e5       	ldi	r24, 0x5E	; 94
    27a6:	97 e4       	ldi	r25, 0x47	; 71
    27a8:	0e 94 44 5b 	call	0xb688	; 0xb688 <_Z9makeMorsePcPbS0_>
    27ac:	9d c0       	rjmp	.+314    	; 0x28e8 <__vector_6+0x706>
    27ae:	80 91 8c 47 	lds	r24, 0x478C	; 0x80478c <g_event_start_epoch>
    27b2:	90 91 8d 47 	lds	r25, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    27b6:	a0 91 8e 47 	lds	r26, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    27ba:	b0 91 8f 47 	lds	r27, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    27be:	21 e0       	ldi	r18, 0x01	; 1
    27c0:	89 2b       	or	r24, r25
    27c2:	8a 2b       	or	r24, r26
    27c4:	8b 2b       	or	r24, r27
    27c6:	09 f4       	brne	.+2      	; 0x27ca <__vector_6+0x5e8>
    27c8:	20 e0       	ldi	r18, 0x00	; 0
    27ca:	22 23       	and	r18, r18
    27cc:	09 f4       	brne	.+2      	; 0x27d0 <__vector_6+0x5ee>
    27ce:	8c c0       	rjmp	.+280    	; 0x28e8 <__vector_6+0x706>
    27d0:	ce 01       	movw	r24, r28
    27d2:	09 96       	adiw	r24, 0x09	; 9
    27d4:	0e 94 56 06 	call	0xcac	; 0xcac <time>
    27d8:	29 85       	ldd	r18, Y+9	; 0x09
    27da:	3a 85       	ldd	r19, Y+10	; 0x0a
    27dc:	4b 85       	ldd	r20, Y+11	; 0x0b
    27de:	5c 85       	ldd	r21, Y+12	; 0x0c
    27e0:	80 91 8c 47 	lds	r24, 0x478C	; 0x80478c <g_event_start_epoch>
    27e4:	90 91 8d 47 	lds	r25, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    27e8:	a0 91 8e 47 	lds	r26, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    27ec:	b0 91 8f 47 	lds	r27, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    27f0:	61 e0       	ldi	r22, 0x01	; 1
    27f2:	28 17       	cp	r18, r24
    27f4:	39 07       	cpc	r19, r25
    27f6:	4a 07       	cpc	r20, r26
    27f8:	5b 07       	cpc	r21, r27
    27fa:	08 f4       	brcc	.+2      	; 0x27fe <__vector_6+0x61c>
    27fc:	60 e0       	ldi	r22, 0x00	; 0
    27fe:	66 23       	and	r22, r22
    2800:	09 f4       	brne	.+2      	; 0x2804 <__vector_6+0x622>
    2802:	72 c0       	rjmp	.+228    	; 0x28e8 <__vector_6+0x706>
    2804:	80 91 8a 47 	lds	r24, 0x478A	; 0x80478a <g_intra_cycle_delay_time>
    2808:	90 91 8b 47 	lds	r25, 0x478B	; 0x80478b <g_intra_cycle_delay_time+0x1>
    280c:	21 e0       	ldi	r18, 0x01	; 1
    280e:	89 2b       	or	r24, r25
    2810:	09 f4       	brne	.+2      	; 0x2814 <__vector_6+0x632>
    2812:	20 e0       	ldi	r18, 0x00	; 0
    2814:	22 23       	and	r18, r18
    2816:	71 f1       	breq	.+92     	; 0x2874 <__vector_6+0x692>
    2818:	8e ef       	ldi	r24, 0xFE	; 254
    281a:	80 93 4c 47 	sts	0x474C, r24	; 0x80474c <_ZL18g_last_status_code>
    281e:	80 91 8a 47 	lds	r24, 0x478A	; 0x80478a <g_intra_cycle_delay_time>
    2822:	90 91 8b 47 	lds	r25, 0x478B	; 0x80478b <g_intra_cycle_delay_time+0x1>
    2826:	91 95       	neg	r25
    2828:	81 95       	neg	r24
    282a:	91 09       	sbc	r25, r1
    282c:	09 2e       	mov	r0, r25
    282e:	00 0c       	add	r0, r0
    2830:	aa 0b       	sbc	r26, r26
    2832:	bb 0b       	sbc	r27, r27
    2834:	80 93 54 47 	sts	0x4754, r24	; 0x804754 <_ZL12g_on_the_air>
    2838:	90 93 55 47 	sts	0x4755, r25	; 0x804755 <_ZL12g_on_the_air+0x1>
    283c:	a0 93 56 47 	sts	0x4756, r26	; 0x804756 <_ZL12g_on_the_air+0x2>
    2840:	b0 93 57 47 	sts	0x4757, r27	; 0x804757 <_ZL12g_on_the_air+0x3>
    2844:	20 91 8a 47 	lds	r18, 0x478A	; 0x80478a <g_intra_cycle_delay_time>
    2848:	30 91 8b 47 	lds	r19, 0x478B	; 0x80478b <g_intra_cycle_delay_time+0x1>
    284c:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    2850:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    2854:	82 0f       	add	r24, r18
    2856:	93 1f       	adc	r25, r19
    2858:	9c 01       	movw	r18, r24
    285a:	80 91 88 47 	lds	r24, 0x4788	; 0x804788 <g_time_needed_for_ID>
    285e:	90 91 89 47 	lds	r25, 0x4789	; 0x804789 <g_time_needed_for_ID+0x1>
    2862:	a9 01       	movw	r20, r18
    2864:	48 1b       	sub	r20, r24
    2866:	59 0b       	sbc	r21, r25
    2868:	ca 01       	movw	r24, r20
    286a:	80 93 58 47 	sts	0x4758, r24	; 0x804758 <_ZL26g_sendID_seconds_countdown>
    286e:	90 93 59 47 	sts	0x4759, r25	; 0x804759 <_ZL26g_sendID_seconds_countdown+0x1>
    2872:	37 c0       	rjmp	.+110    	; 0x28e2 <__vector_6+0x700>
    2874:	8d ef       	ldi	r24, 0xFD	; 253
    2876:	80 93 4c 47 	sts	0x474C, r24	; 0x80474c <_ZL18g_last_status_code>
    287a:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    287e:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    2882:	09 2e       	mov	r0, r25
    2884:	00 0c       	add	r0, r0
    2886:	aa 0b       	sbc	r26, r26
    2888:	bb 0b       	sbc	r27, r27
    288a:	80 93 54 47 	sts	0x4754, r24	; 0x804754 <_ZL12g_on_the_air>
    288e:	90 93 55 47 	sts	0x4755, r25	; 0x804755 <_ZL12g_on_the_air+0x1>
    2892:	a0 93 56 47 	sts	0x4756, r26	; 0x804756 <_ZL12g_on_the_air+0x2>
    2896:	b0 93 57 47 	sts	0x4757, r27	; 0x804757 <_ZL12g_on_the_air+0x3>
    289a:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    289e:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    28a2:	9c 01       	movw	r18, r24
    28a4:	80 91 88 47 	lds	r24, 0x4788	; 0x804788 <g_time_needed_for_ID>
    28a8:	90 91 89 47 	lds	r25, 0x4789	; 0x804789 <g_time_needed_for_ID+0x1>
    28ac:	f9 01       	movw	r30, r18
    28ae:	e8 1b       	sub	r30, r24
    28b0:	f9 0b       	sbc	r31, r25
    28b2:	cf 01       	movw	r24, r30
    28b4:	80 93 58 47 	sts	0x4758, r24	; 0x804758 <_ZL26g_sendID_seconds_countdown>
    28b8:	90 93 59 47 	sts	0x4759, r25	; 0x804759 <_ZL26g_sendID_seconds_countdown+0x1>
    28bc:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    28c0:	0e 94 4c 29 	call	0x5298	; 0x5298 <_Z13throttleValueh>
    28c4:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    28c8:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    28cc:	81 e0       	ldi	r24, 0x01	; 1
    28ce:	8f 87       	std	Y+15, r24	; 0x0f
    28d0:	ce 01       	movw	r24, r28
    28d2:	0f 96       	adiw	r24, 0x0f	; 15
    28d4:	40 e0       	ldi	r20, 0x00	; 0
    28d6:	50 e0       	ldi	r21, 0x00	; 0
    28d8:	bc 01       	movw	r22, r24
    28da:	8e e5       	ldi	r24, 0x5E	; 94
    28dc:	97 e4       	ldi	r25, 0x47	; 71
    28de:	0e 94 44 5b 	call	0xb688	; 0xb688 <_Z9makeMorsePcPbS0_>
    28e2:	81 e0       	ldi	r24, 0x01	; 1
    28e4:	80 93 95 47 	sts	0x4795, r24	; 0x804795 <g_event_commenced>
    28e8:	90 91 5b 47 	lds	r25, 0x475B	; 0x80475b <_ZL19g_wifi_enable_delay>
    28ec:	81 e0       	ldi	r24, 0x01	; 1
    28ee:	99 23       	and	r25, r25
    28f0:	09 f4       	brne	.+2      	; 0x28f4 <__vector_6+0x712>
    28f2:	80 e0       	ldi	r24, 0x00	; 0
    28f4:	88 23       	and	r24, r24
    28f6:	91 f0       	breq	.+36     	; 0x291c <__vector_6+0x73a>
    28f8:	80 91 5b 47 	lds	r24, 0x475B	; 0x80475b <_ZL19g_wifi_enable_delay>
    28fc:	81 50       	subi	r24, 0x01	; 1
    28fe:	80 93 5b 47 	sts	0x475B, r24	; 0x80475b <_ZL19g_wifi_enable_delay>
    2902:	90 91 5b 47 	lds	r25, 0x475B	; 0x80475b <_ZL19g_wifi_enable_delay>
    2906:	81 e0       	ldi	r24, 0x01	; 1
    2908:	99 23       	and	r25, r25
    290a:	09 f0       	breq	.+2      	; 0x290e <__vector_6+0x72c>
    290c:	80 e0       	ldi	r24, 0x00	; 0
    290e:	88 23       	and	r24, r24
    2910:	09 f4       	brne	.+2      	; 0x2914 <__vector_6+0x732>
    2912:	68 c0       	rjmp	.+208    	; 0x29e4 <__vector_6+0x802>
    2914:	80 e0       	ldi	r24, 0x00	; 0
    2916:	0e 94 42 4e 	call	0x9c84	; 0x9c84 <_Z10wifi_resetb>
    291a:	64 c0       	rjmp	.+200    	; 0x29e4 <__vector_6+0x802>
    291c:	80 91 13 40 	lds	r24, 0x4013	; 0x804013 <g_update_timeout_seconds>
    2920:	90 91 14 40 	lds	r25, 0x4014	; 0x804014 <g_update_timeout_seconds+0x1>
    2924:	89 2b       	or	r24, r25
    2926:	81 f0       	breq	.+32     	; 0x2948 <__vector_6+0x766>
    2928:	80 91 5c 47 	lds	r24, 0x475C	; 0x80475c <_ZL20g_shutting_down_wifi>
    292c:	88 23       	and	r24, r24
    292e:	61 f4       	brne	.+24     	; 0x2948 <__vector_6+0x766>
    2930:	90 91 96 47 	lds	r25, 0x4796	; 0x804796 <g_check_for_next_event>
    2934:	81 e0       	ldi	r24, 0x01	; 1
    2936:	89 27       	eor	r24, r25
    2938:	88 23       	and	r24, r24
    293a:	41 f0       	breq	.+16     	; 0x294c <__vector_6+0x76a>
    293c:	90 91 97 47 	lds	r25, 0x4797	; 0x804797 <g_waiting_for_next_event>
    2940:	81 e0       	ldi	r24, 0x01	; 1
    2942:	89 27       	eor	r24, r25
    2944:	88 23       	and	r24, r24
    2946:	11 f0       	breq	.+4      	; 0x294c <__vector_6+0x76a>
    2948:	81 e0       	ldi	r24, 0x01	; 1
    294a:	01 c0       	rjmp	.+2      	; 0x294e <__vector_6+0x76c>
    294c:	80 e0       	ldi	r24, 0x00	; 0
    294e:	88 23       	and	r24, r24
    2950:	09 f4       	brne	.+2      	; 0x2954 <__vector_6+0x772>
    2952:	41 c0       	rjmp	.+130    	; 0x29d6 <__vector_6+0x7f4>
    2954:	90 91 09 40 	lds	r25, 0x4009	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    2958:	81 e0       	ldi	r24, 0x01	; 1
    295a:	99 23       	and	r25, r25
    295c:	09 f4       	brne	.+2      	; 0x2960 <__vector_6+0x77e>
    295e:	80 e0       	ldi	r24, 0x00	; 0
    2960:	88 23       	and	r24, r24
    2962:	c9 f1       	breq	.+114    	; 0x29d6 <__vector_6+0x7f4>
    2964:	80 91 09 40 	lds	r24, 0x4009	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    2968:	81 50       	subi	r24, 0x01	; 1
    296a:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    296e:	90 91 09 40 	lds	r25, 0x4009	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    2972:	81 e0       	ldi	r24, 0x01	; 1
    2974:	99 23       	and	r25, r25
    2976:	09 f0       	breq	.+2      	; 0x297a <__vector_6+0x798>
    2978:	80 e0       	ldi	r24, 0x00	; 0
    297a:	88 23       	and	r24, r24
    297c:	61 f1       	breq	.+88     	; 0x29d6 <__vector_6+0x7f4>
    297e:	81 e0       	ldi	r24, 0x01	; 1
    2980:	0e 94 42 4e 	call	0x9c84	; 0x9c84 <_Z10wifi_resetb>
    2984:	80 e0       	ldi	r24, 0x00	; 0
    2986:	0e 94 2b 4e 	call	0x9c56	; 0x9c56 <_Z10wifi_powerb>
    298a:	10 92 5c 47 	sts	0x475C, r1	; 0x80475c <_ZL20g_shutting_down_wifi>
    298e:	90 91 94 47 	lds	r25, 0x4794	; 0x804794 <g_event_enabled>
    2992:	81 e0       	ldi	r24, 0x01	; 1
    2994:	89 27       	eor	r24, r25
    2996:	88 23       	and	r24, r24
    2998:	91 f0       	breq	.+36     	; 0x29be <__vector_6+0x7dc>
    299a:	84 e0       	ldi	r24, 0x04	; 4
    299c:	80 93 5d 47 	sts	0x475D, r24	; 0x80475d <_ZL11g_sleepType>
    29a0:	81 e0       	ldi	r24, 0x01	; 1
    29a2:	80 93 98 47 	sts	0x4798, r24	; 0x804798 <_ZL13g_go_to_sleep>
    29a6:	8f ef       	ldi	r24, 0xFF	; 255
    29a8:	9f ef       	ldi	r25, 0xFF	; 255
    29aa:	dc 01       	movw	r26, r24
    29ac:	80 93 15 40 	sts	0x4015, r24	; 0x804015 <_ZL18g_seconds_to_sleep>
    29b0:	90 93 16 40 	sts	0x4016, r25	; 0x804016 <_ZL18g_seconds_to_sleep+0x1>
    29b4:	a0 93 17 40 	sts	0x4017, r26	; 0x804017 <_ZL18g_seconds_to_sleep+0x2>
    29b8:	b0 93 18 40 	sts	0x4018, r27	; 0x804018 <_ZL18g_seconds_to_sleep+0x3>
    29bc:	0a c0       	rjmp	.+20     	; 0x29d2 <__vector_6+0x7f0>
    29be:	90 91 5d 47 	lds	r25, 0x475D	; 0x80475d <_ZL11g_sleepType>
    29c2:	81 e0       	ldi	r24, 0x01	; 1
    29c4:	93 30       	cpi	r25, 0x03	; 3
    29c6:	09 f0       	breq	.+2      	; 0x29ca <__vector_6+0x7e8>
    29c8:	80 e0       	ldi	r24, 0x00	; 0
    29ca:	88 23       	and	r24, r24
    29cc:	11 f0       	breq	.+4      	; 0x29d2 <__vector_6+0x7f0>
    29ce:	0e 94 97 28 	call	0x512e	; 0x512e <_Z12eventEnabledv>
    29d2:	10 92 0a 40 	sts	0x400A, r1	; 0x80400a <_ZL13g_wifi_active>
    29d6:	80 91 0a 40 	lds	r24, 0x400A	; 0x80400a <_ZL13g_wifi_active>
    29da:	88 23       	and	r24, r24
    29dc:	19 f0       	breq	.+6      	; 0x29e4 <__vector_6+0x802>
    29de:	81 e0       	ldi	r24, 0x01	; 1
    29e0:	80 93 5a 47 	sts	0x475A, r24	; 0x80475a <_ZL16g_report_seconds>
    29e4:	80 e0       	ldi	r24, 0x00	; 0
    29e6:	94 e0       	ldi	r25, 0x04	; 4
    29e8:	2f ef       	ldi	r18, 0xFF	; 255
    29ea:	fc 01       	movw	r30, r24
    29ec:	21 87       	std	Z+9, r18	; 0x09
    29ee:	00 00       	nop
    29f0:	2f 96       	adiw	r28, 0x0f	; 15
    29f2:	cd bf       	out	0x3d, r28	; 61
    29f4:	de bf       	out	0x3e, r29	; 62
    29f6:	df 91       	pop	r29
    29f8:	cf 91       	pop	r28
    29fa:	ff 91       	pop	r31
    29fc:	ef 91       	pop	r30
    29fe:	bf 91       	pop	r27
    2a00:	af 91       	pop	r26
    2a02:	9f 91       	pop	r25
    2a04:	8f 91       	pop	r24
    2a06:	7f 91       	pop	r23
    2a08:	6f 91       	pop	r22
    2a0a:	5f 91       	pop	r21
    2a0c:	4f 91       	pop	r20
    2a0e:	3f 91       	pop	r19
    2a10:	2f 91       	pop	r18
    2a12:	1f 91       	pop	r17
    2a14:	0f 91       	pop	r16
    2a16:	ff 90       	pop	r15
    2a18:	ef 90       	pop	r14
    2a1a:	0f 90       	pop	r0
    2a1c:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    2a20:	0f 90       	pop	r0
    2a22:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    2a26:	0f 90       	pop	r0
    2a28:	1f 90       	pop	r1
    2a2a:	18 95       	reti

00002a2c <__vector_22>:
    2a2c:	1f 92       	push	r1
    2a2e:	0f 92       	push	r0
    2a30:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    2a34:	0f 92       	push	r0
    2a36:	11 24       	eor	r1, r1
    2a38:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    2a3c:	0f 92       	push	r0
    2a3e:	2f 93       	push	r18
    2a40:	3f 93       	push	r19
    2a42:	4f 93       	push	r20
    2a44:	5f 93       	push	r21
    2a46:	6f 93       	push	r22
    2a48:	7f 93       	push	r23
    2a4a:	8f 93       	push	r24
    2a4c:	9f 93       	push	r25
    2a4e:	af 93       	push	r26
    2a50:	bf 93       	push	r27
    2a52:	ef 93       	push	r30
    2a54:	ff 93       	push	r31
    2a56:	cf 93       	push	r28
    2a58:	df 93       	push	r29
    2a5a:	1f 92       	push	r1
    2a5c:	cd b7       	in	r28, 0x3d	; 61
    2a5e:	de b7       	in	r29, 0x3e	; 62
    2a60:	80 e6       	ldi	r24, 0x60	; 96
    2a62:	94 e0       	ldi	r25, 0x04	; 4
    2a64:	fc 01       	movw	r30, r24
    2a66:	81 85       	ldd	r24, Z+9	; 0x09
    2a68:	88 2f       	mov	r24, r24
    2a6a:	90 e0       	ldi	r25, 0x00	; 0
    2a6c:	82 70       	andi	r24, 0x02	; 2
    2a6e:	99 27       	eor	r25, r25
    2a70:	21 e0       	ldi	r18, 0x01	; 1
    2a72:	89 2b       	or	r24, r25
    2a74:	09 f4       	brne	.+2      	; 0x2a78 <__vector_22+0x4c>
    2a76:	20 e0       	ldi	r18, 0x00	; 0
    2a78:	22 23       	and	r18, r18
    2a7a:	b1 f0       	breq	.+44     	; 0x2aa8 <__vector_22+0x7c>
    2a7c:	0e 94 23 2c 	call	0x5846	; 0x5846 <_Z18antennaIsConnectedv>
    2a80:	89 83       	std	Y+1, r24	; 0x01
    2a82:	99 81       	ldd	r25, Y+1	; 0x01
    2a84:	81 e0       	ldi	r24, 0x01	; 1
    2a86:	89 27       	eor	r24, r25
    2a88:	88 23       	and	r24, r24
    2a8a:	71 f0       	breq	.+28     	; 0x2aa8 <__vector_22+0x7c>
    2a8c:	90 91 51 47 	lds	r25, 0x4751	; 0x804751 <g_antenna_connect_state>
    2a90:	81 e0       	ldi	r24, 0x01	; 1
    2a92:	91 30       	cpi	r25, 0x01	; 1
    2a94:	09 f4       	brne	.+2      	; 0x2a98 <__vector_22+0x6c>
    2a96:	80 e0       	ldi	r24, 0x00	; 0
    2a98:	88 23       	and	r24, r24
    2a9a:	31 f0       	breq	.+12     	; 0x2aa8 <__vector_22+0x7c>
    2a9c:	81 e0       	ldi	r24, 0x01	; 1
    2a9e:	80 93 51 47 	sts	0x4751, r24	; 0x804751 <g_antenna_connect_state>
    2aa2:	81 e0       	ldi	r24, 0x01	; 1
    2aa4:	80 93 06 40 	sts	0x4006, r24	; 0x804006 <_ZL28g_antenna_connection_changed>
    2aa8:	80 e6       	ldi	r24, 0x60	; 96
    2aaa:	94 e0       	ldi	r25, 0x04	; 4
    2aac:	2f ef       	ldi	r18, 0xFF	; 255
    2aae:	fc 01       	movw	r30, r24
    2ab0:	21 87       	std	Z+9, r18	; 0x09
    2ab2:	00 00       	nop
    2ab4:	0f 90       	pop	r0
    2ab6:	df 91       	pop	r29
    2ab8:	cf 91       	pop	r28
    2aba:	ff 91       	pop	r31
    2abc:	ef 91       	pop	r30
    2abe:	bf 91       	pop	r27
    2ac0:	af 91       	pop	r26
    2ac2:	9f 91       	pop	r25
    2ac4:	8f 91       	pop	r24
    2ac6:	7f 91       	pop	r23
    2ac8:	6f 91       	pop	r22
    2aca:	5f 91       	pop	r21
    2acc:	4f 91       	pop	r20
    2ace:	3f 91       	pop	r19
    2ad0:	2f 91       	pop	r18
    2ad2:	0f 90       	pop	r0
    2ad4:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    2ad8:	0f 90       	pop	r0
    2ada:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    2ade:	0f 90       	pop	r0
    2ae0:	1f 90       	pop	r1
    2ae2:	18 95       	reti

00002ae4 <__vector_12>:
    2ae4:	1f 92       	push	r1
    2ae6:	0f 92       	push	r0
    2ae8:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    2aec:	0f 92       	push	r0
    2aee:	11 24       	eor	r1, r1
    2af0:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    2af4:	0f 92       	push	r0
    2af6:	2f 93       	push	r18
    2af8:	3f 93       	push	r19
    2afa:	4f 93       	push	r20
    2afc:	5f 93       	push	r21
    2afe:	6f 93       	push	r22
    2b00:	7f 93       	push	r23
    2b02:	8f 93       	push	r24
    2b04:	9f 93       	push	r25
    2b06:	af 93       	push	r26
    2b08:	bf 93       	push	r27
    2b0a:	ef 93       	push	r30
    2b0c:	ff 93       	push	r31
    2b0e:	cf 93       	push	r28
    2b10:	df 93       	push	r29
    2b12:	cd b7       	in	r28, 0x3d	; 61
    2b14:	de b7       	in	r29, 0x3e	; 62
    2b16:	27 97       	sbiw	r28, 0x07	; 7
    2b18:	cd bf       	out	0x3d, r28	; 61
    2b1a:	de bf       	out	0x3e, r29	; 62
    2b1c:	80 e0       	ldi	r24, 0x00	; 0
    2b1e:	9b e0       	ldi	r25, 0x0B	; 11
    2b20:	fc 01       	movw	r30, r24
    2b22:	86 81       	ldd	r24, Z+6	; 0x06
    2b24:	88 2f       	mov	r24, r24
    2b26:	90 e0       	ldi	r25, 0x00	; 0
    2b28:	81 70       	andi	r24, 0x01	; 1
    2b2a:	99 27       	eor	r25, r25
    2b2c:	21 e0       	ldi	r18, 0x01	; 1
    2b2e:	89 2b       	or	r24, r25
    2b30:	09 f4       	brne	.+2      	; 0x2b34 <__vector_12+0x50>
    2b32:	20 e0       	ldi	r18, 0x00	; 0
    2b34:	22 23       	and	r18, r18
    2b36:	09 f4       	brne	.+2      	; 0x2b3a <__vector_12+0x56>
    2b38:	d4 c1       	rjmp	.+936    	; 0x2ee2 <__vector_12+0x3fe>
    2b3a:	80 91 28 40 	lds	r24, 0x4028	; 0x804028 <g_i2c0_timeout_ticks>
    2b3e:	90 91 29 40 	lds	r25, 0x4029	; 0x804029 <g_i2c0_timeout_ticks+0x1>
    2b42:	21 e0       	ldi	r18, 0x01	; 1
    2b44:	89 2b       	or	r24, r25
    2b46:	09 f4       	brne	.+2      	; 0x2b4a <__vector_12+0x66>
    2b48:	20 e0       	ldi	r18, 0x00	; 0
    2b4a:	22 23       	and	r18, r18
    2b4c:	49 f0       	breq	.+18     	; 0x2b60 <__vector_12+0x7c>
    2b4e:	80 91 28 40 	lds	r24, 0x4028	; 0x804028 <g_i2c0_timeout_ticks>
    2b52:	90 91 29 40 	lds	r25, 0x4029	; 0x804029 <g_i2c0_timeout_ticks+0x1>
    2b56:	01 97       	sbiw	r24, 0x01	; 1
    2b58:	80 93 28 40 	sts	0x4028, r24	; 0x804028 <g_i2c0_timeout_ticks>
    2b5c:	90 93 29 40 	sts	0x4029, r25	; 0x804029 <g_i2c0_timeout_ticks+0x1>
    2b60:	80 91 2a 40 	lds	r24, 0x402A	; 0x80402a <g_i2c1_timeout_ticks>
    2b64:	90 91 2b 40 	lds	r25, 0x402B	; 0x80402b <g_i2c1_timeout_ticks+0x1>
    2b68:	21 e0       	ldi	r18, 0x01	; 1
    2b6a:	89 2b       	or	r24, r25
    2b6c:	09 f4       	brne	.+2      	; 0x2b70 <__vector_12+0x8c>
    2b6e:	20 e0       	ldi	r18, 0x00	; 0
    2b70:	22 23       	and	r18, r18
    2b72:	49 f0       	breq	.+18     	; 0x2b86 <__vector_12+0xa2>
    2b74:	80 91 2a 40 	lds	r24, 0x402A	; 0x80402a <g_i2c1_timeout_ticks>
    2b78:	90 91 2b 40 	lds	r25, 0x402B	; 0x80402b <g_i2c1_timeout_ticks+0x1>
    2b7c:	01 97       	sbiw	r24, 0x01	; 1
    2b7e:	80 93 2a 40 	sts	0x402A, r24	; 0x80402a <g_i2c1_timeout_ticks>
    2b82:	90 93 2b 40 	sts	0x402B, r25	; 0x80402b <g_i2c1_timeout_ticks+0x1>
    2b86:	80 91 4f 47 	lds	r24, 0x474F	; 0x80474f <_ZL21g_util_tick_countdown>
    2b8a:	90 91 50 47 	lds	r25, 0x4750	; 0x804750 <_ZL21g_util_tick_countdown+0x1>
    2b8e:	21 e0       	ldi	r18, 0x01	; 1
    2b90:	89 2b       	or	r24, r25
    2b92:	09 f4       	brne	.+2      	; 0x2b96 <__vector_12+0xb2>
    2b94:	20 e0       	ldi	r18, 0x00	; 0
    2b96:	22 23       	and	r18, r18
    2b98:	49 f0       	breq	.+18     	; 0x2bac <__vector_12+0xc8>
    2b9a:	80 91 4f 47 	lds	r24, 0x474F	; 0x80474f <_ZL21g_util_tick_countdown>
    2b9e:	90 91 50 47 	lds	r25, 0x4750	; 0x804750 <_ZL21g_util_tick_countdown+0x1>
    2ba2:	01 97       	sbiw	r24, 0x01	; 1
    2ba4:	80 93 4f 47 	sts	0x474F, r24	; 0x80474f <_ZL21g_util_tick_countdown>
    2ba8:	90 93 50 47 	sts	0x4750, r25	; 0x804750 <_ZL21g_util_tick_countdown+0x1>
    2bac:	87 e0       	ldi	r24, 0x07	; 7
    2bae:	0e 94 a4 10 	call	0x2148	; 0x2148 <PORTC_get_pin_level>
    2bb2:	98 2f       	mov	r25, r24
    2bb4:	81 e0       	ldi	r24, 0x01	; 1
    2bb6:	89 27       	eor	r24, r25
    2bb8:	88 23       	and	r24, r24
    2bba:	a1 f0       	breq	.+40     	; 0x2be4 <__vector_12+0x100>
    2bbc:	80 91 a7 47 	lds	r24, 0x47A7	; 0x8047a7 <g_switch_closed_count>
    2bc0:	90 91 a8 47 	lds	r25, 0x47A8	; 0x8047a8 <g_switch_closed_count+0x1>
    2bc4:	21 e0       	ldi	r18, 0x01	; 1
    2bc6:	88 3e       	cpi	r24, 0xE8	; 232
    2bc8:	93 40       	sbci	r25, 0x03	; 3
    2bca:	08 f0       	brcs	.+2      	; 0x2bce <__vector_12+0xea>
    2bcc:	20 e0       	ldi	r18, 0x00	; 0
    2bce:	22 23       	and	r18, r18
    2bd0:	49 f0       	breq	.+18     	; 0x2be4 <__vector_12+0x100>
    2bd2:	80 91 a7 47 	lds	r24, 0x47A7	; 0x8047a7 <g_switch_closed_count>
    2bd6:	90 91 a8 47 	lds	r25, 0x47A8	; 0x8047a8 <g_switch_closed_count+0x1>
    2bda:	01 96       	adiw	r24, 0x01	; 1
    2bdc:	80 93 a7 47 	sts	0x47A7, r24	; 0x8047a7 <g_switch_closed_count>
    2be0:	90 93 a8 47 	sts	0x47A8, r25	; 0x8047a8 <g_switch_closed_count+0x1>
    2be4:	0e 94 49 28 	call	0x5092	; 0x5092 <_Z19updateAntennaStatusv>
    2be8:	80 91 94 47 	lds	r24, 0x4794	; 0x804794 <g_event_enabled>
    2bec:	88 23       	and	r24, r24
    2bee:	31 f0       	breq	.+12     	; 0x2bfc <__vector_12+0x118>
    2bf0:	80 91 95 47 	lds	r24, 0x4795	; 0x804795 <g_event_commenced>
    2bf4:	88 23       	and	r24, r24
    2bf6:	11 f0       	breq	.+4      	; 0x2bfc <__vector_12+0x118>
    2bf8:	81 e0       	ldi	r24, 0x01	; 1
    2bfa:	01 c0       	rjmp	.+2      	; 0x2bfe <__vector_12+0x11a>
    2bfc:	80 e0       	ldi	r24, 0x00	; 0
    2bfe:	88 23       	and	r24, r24
    2c00:	09 f4       	brne	.+2      	; 0x2c04 <__vector_12+0x120>
    2c02:	9f c0       	rjmp	.+318    	; 0x2d42 <__vector_12+0x25e>
    2c04:	80 91 54 47 	lds	r24, 0x4754	; 0x804754 <_ZL12g_on_the_air>
    2c08:	90 91 55 47 	lds	r25, 0x4755	; 0x804755 <_ZL12g_on_the_air+0x1>
    2c0c:	a0 91 56 47 	lds	r26, 0x4756	; 0x804756 <_ZL12g_on_the_air+0x2>
    2c10:	b0 91 57 47 	lds	r27, 0x4757	; 0x804757 <_ZL12g_on_the_air+0x3>
    2c14:	21 e0       	ldi	r18, 0x01	; 1
    2c16:	18 16       	cp	r1, r24
    2c18:	19 06       	cpc	r1, r25
    2c1a:	1a 06       	cpc	r1, r26
    2c1c:	1b 06       	cpc	r1, r27
    2c1e:	0c f0       	brlt	.+2      	; 0x2c22 <__vector_12+0x13e>
    2c20:	20 e0       	ldi	r18, 0x00	; 0
    2c22:	22 23       	and	r18, r18
    2c24:	09 f4       	brne	.+2      	; 0x2c28 <__vector_12+0x144>
    2c26:	6b c0       	rjmp	.+214    	; 0x2cfe <__vector_12+0x21a>
    2c28:	80 91 b6 47 	lds	r24, 0x47B6	; 0x8047b6 <_ZZ11__vector_12E7codeInc>
    2c2c:	90 91 b7 47 	lds	r25, 0x47B7	; 0x8047b7 <_ZZ11__vector_12E7codeInc+0x1>
    2c30:	89 2b       	or	r24, r25
    2c32:	09 f4       	brne	.+2      	; 0x2c36 <__vector_12+0x152>
    2c34:	53 c0       	rjmp	.+166    	; 0x2cdc <__vector_12+0x1f8>
    2c36:	80 91 b6 47 	lds	r24, 0x47B6	; 0x8047b6 <_ZZ11__vector_12E7codeInc>
    2c3a:	90 91 b7 47 	lds	r25, 0x47B7	; 0x8047b7 <_ZZ11__vector_12E7codeInc+0x1>
    2c3e:	01 97       	sbiw	r24, 0x01	; 1
    2c40:	80 93 b6 47 	sts	0x47B6, r24	; 0x8047b6 <_ZZ11__vector_12E7codeInc>
    2c44:	90 93 b7 47 	sts	0x47B7, r25	; 0x8047b7 <_ZZ11__vector_12E7codeInc+0x1>
    2c48:	80 91 b6 47 	lds	r24, 0x47B6	; 0x8047b6 <_ZZ11__vector_12E7codeInc>
    2c4c:	90 91 b7 47 	lds	r25, 0x47B7	; 0x8047b7 <_ZZ11__vector_12E7codeInc+0x1>
    2c50:	89 2b       	or	r24, r25
    2c52:	09 f0       	breq	.+2      	; 0x2c56 <__vector_12+0x172>
    2c54:	76 c0       	rjmp	.+236    	; 0x2d42 <__vector_12+0x25e>
    2c56:	9e 01       	movw	r18, r28
    2c58:	2a 5f       	subi	r18, 0xFA	; 250
    2c5a:	3f 4f       	sbci	r19, 0xFF	; 255
    2c5c:	ce 01       	movw	r24, r28
    2c5e:	05 96       	adiw	r24, 0x05	; 5
    2c60:	a9 01       	movw	r20, r18
    2c62:	bc 01       	movw	r22, r24
    2c64:	80 e0       	ldi	r24, 0x00	; 0
    2c66:	90 e0       	ldi	r25, 0x00	; 0
    2c68:	0e 94 44 5b 	call	0xb688	; 0xb688 <_Z9makeMorsePcPbS0_>
    2c6c:	80 93 b8 47 	sts	0x47B8, r24	; 0x8047b8 <_ZZ11__vector_12E3key>
    2c70:	9d 81       	ldd	r25, Y+5	; 0x05
    2c72:	81 e0       	ldi	r24, 0x01	; 1
    2c74:	89 27       	eor	r24, r25
    2c76:	88 23       	and	r24, r24
    2c78:	31 f1       	breq	.+76     	; 0x2cc6 <__vector_12+0x1e2>
    2c7a:	8e 81       	ldd	r24, Y+6	; 0x06
    2c7c:	88 23       	and	r24, r24
    2c7e:	19 f1       	breq	.+70     	; 0x2cc6 <__vector_12+0x1e2>
    2c80:	8d ef       	ldi	r24, 0xFD	; 253
    2c82:	80 93 4c 47 	sts	0x474C, r24	; 0x80474c <_ZL18g_last_status_code>
    2c86:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    2c8a:	0e 94 4c 29 	call	0x5298	; 0x5298 <_Z13throttleValueh>
    2c8e:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    2c92:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    2c96:	81 e0       	ldi	r24, 0x01	; 1
    2c98:	8d 83       	std	Y+5, r24	; 0x05
    2c9a:	ce 01       	movw	r24, r28
    2c9c:	05 96       	adiw	r24, 0x05	; 5
    2c9e:	40 e0       	ldi	r20, 0x00	; 0
    2ca0:	50 e0       	ldi	r21, 0x00	; 0
    2ca2:	bc 01       	movw	r22, r24
    2ca4:	8e e5       	ldi	r24, 0x5E	; 94
    2ca6:	97 e4       	ldi	r25, 0x47	; 71
    2ca8:	0e 94 44 5b 	call	0xb688	; 0xb688 <_Z9makeMorsePcPbS0_>
    2cac:	9e 01       	movw	r18, r28
    2cae:	2a 5f       	subi	r18, 0xFA	; 250
    2cb0:	3f 4f       	sbci	r19, 0xFF	; 255
    2cb2:	ce 01       	movw	r24, r28
    2cb4:	05 96       	adiw	r24, 0x05	; 5
    2cb6:	a9 01       	movw	r20, r18
    2cb8:	bc 01       	movw	r22, r24
    2cba:	80 e0       	ldi	r24, 0x00	; 0
    2cbc:	90 e0       	ldi	r25, 0x00	; 0
    2cbe:	0e 94 44 5b 	call	0xb688	; 0xb688 <_Z9makeMorsePcPbS0_>
    2cc2:	80 93 b8 47 	sts	0x47B8, r24	; 0x8047b8 <_ZZ11__vector_12E3key>
    2cc6:	80 91 b8 47 	lds	r24, 0x47B8	; 0x8047b8 <_ZZ11__vector_12E3key>
    2cca:	88 23       	and	r24, r24
    2ccc:	d1 f1       	breq	.+116    	; 0x2d42 <__vector_12+0x25e>
    2cce:	81 e0       	ldi	r24, 0x01	; 1
    2cd0:	0e 94 eb 6f 	call	0xdfd6	; 0xdfd6 <_Z18powerToTransmitterb>
    2cd4:	81 e0       	ldi	r24, 0x01	; 1
    2cd6:	0e 94 e2 10 	call	0x21c4	; 0x21c4 <LED_set_RED_level>
    2cda:	33 c0       	rjmp	.+102    	; 0x2d42 <__vector_12+0x25e>
    2cdc:	80 91 b8 47 	lds	r24, 0x47B8	; 0x8047b8 <_ZZ11__vector_12E3key>
    2ce0:	0e 94 f9 6f 	call	0xdff2	; 0xdff2 <_Z14keyTransmitterb>
    2ce4:	80 91 b8 47 	lds	r24, 0x47B8	; 0x8047b8 <_ZZ11__vector_12E3key>
    2ce8:	0e 94 e2 10 	call	0x21c4	; 0x21c4 <LED_set_RED_level>
    2cec:	80 91 07 40 	lds	r24, 0x4007	; 0x804007 <_ZL15g_code_throttle>
    2cf0:	90 91 08 40 	lds	r25, 0x4008	; 0x804008 <_ZL15g_code_throttle+0x1>
    2cf4:	80 93 b6 47 	sts	0x47B6, r24	; 0x8047b6 <_ZZ11__vector_12E7codeInc>
    2cf8:	90 93 b7 47 	sts	0x47B7, r25	; 0x8047b7 <_ZZ11__vector_12E7codeInc+0x1>
    2cfc:	22 c0       	rjmp	.+68     	; 0x2d42 <__vector_12+0x25e>
    2cfe:	80 91 54 47 	lds	r24, 0x4754	; 0x804754 <_ZL12g_on_the_air>
    2d02:	90 91 55 47 	lds	r25, 0x4755	; 0x804755 <_ZL12g_on_the_air+0x1>
    2d06:	a0 91 56 47 	lds	r26, 0x4756	; 0x804756 <_ZL12g_on_the_air+0x2>
    2d0a:	b0 91 57 47 	lds	r27, 0x4757	; 0x804757 <_ZL12g_on_the_air+0x3>
    2d0e:	21 e0       	ldi	r18, 0x01	; 1
    2d10:	89 2b       	or	r24, r25
    2d12:	8a 2b       	or	r24, r26
    2d14:	8b 2b       	or	r24, r27
    2d16:	09 f0       	breq	.+2      	; 0x2d1a <__vector_12+0x236>
    2d18:	20 e0       	ldi	r18, 0x00	; 0
    2d1a:	22 23       	and	r18, r18
    2d1c:	91 f0       	breq	.+36     	; 0x2d42 <__vector_12+0x25e>
    2d1e:	80 91 b8 47 	lds	r24, 0x47B8	; 0x8047b8 <_ZZ11__vector_12E3key>
    2d22:	88 23       	and	r24, r24
    2d24:	71 f0       	breq	.+28     	; 0x2d42 <__vector_12+0x25e>
    2d26:	10 92 b8 47 	sts	0x47B8, r1	; 0x8047b8 <_ZZ11__vector_12E3key>
    2d2a:	80 e0       	ldi	r24, 0x00	; 0
    2d2c:	0e 94 f9 6f 	call	0xdff2	; 0xdff2 <_Z14keyTransmitterb>
    2d30:	80 e0       	ldi	r24, 0x00	; 0
    2d32:	0e 94 e2 10 	call	0x21c4	; 0x21c4 <LED_set_RED_level>
    2d36:	80 e0       	ldi	r24, 0x00	; 0
    2d38:	0e 94 eb 6f 	call	0xdfd6	; 0xdfd6 <_Z18powerToTransmitterb>
    2d3c:	8e ef       	ldi	r24, 0xFE	; 254
    2d3e:	80 93 4c 47 	sts	0x474C, r24	; 0x80474c <_ZL18g_last_status_code>
    2d42:	90 91 b9 47 	lds	r25, 0x47B9	; 0x8047b9 <_ZZ11__vector_12E19conversionInProcess>
    2d46:	81 e0       	ldi	r24, 0x01	; 1
    2d48:	89 27       	eor	r24, r25
    2d4a:	88 23       	and	r24, r24
    2d4c:	09 f4       	brne	.+2      	; 0x2d50 <__vector_12+0x26c>
    2d4e:	74 c0       	rjmp	.+232    	; 0x2e38 <__vector_12+0x354>
    2d50:	8f ef       	ldi	r24, 0xFF	; 255
    2d52:	80 93 ba 47 	sts	0x47BA, r24	; 0x8047ba <_ZZ11__vector_12E24indexConversionInProcess>
    2d56:	1f 82       	std	Y+7, r1	; 0x07
    2d58:	9f 81       	ldd	r25, Y+7	; 0x07
    2d5a:	81 e0       	ldi	r24, 0x01	; 1
    2d5c:	93 30       	cpi	r25, 0x03	; 3
    2d5e:	08 f0       	brcs	.+2      	; 0x2d62 <__vector_12+0x27e>
    2d60:	80 e0       	ldi	r24, 0x00	; 0
    2d62:	88 23       	and	r24, r24
    2d64:	d9 f1       	breq	.+118    	; 0x2ddc <__vector_12+0x2f8>
    2d66:	8f 81       	ldd	r24, Y+7	; 0x07
    2d68:	88 2f       	mov	r24, r24
    2d6a:	90 e0       	ldi	r25, 0x00	; 0
    2d6c:	88 0f       	add	r24, r24
    2d6e:	99 1f       	adc	r25, r25
    2d70:	84 5e       	subi	r24, 0xE4	; 228
    2d72:	9f 4b       	sbci	r25, 0xBF	; 191
    2d74:	fc 01       	movw	r30, r24
    2d76:	80 81       	ld	r24, Z
    2d78:	91 81       	ldd	r25, Z+1	; 0x01
    2d7a:	21 e0       	ldi	r18, 0x01	; 1
    2d7c:	89 2b       	or	r24, r25
    2d7e:	09 f4       	brne	.+2      	; 0x2d82 <__vector_12+0x29e>
    2d80:	20 e0       	ldi	r18, 0x00	; 0
    2d82:	22 23       	and	r18, r18
    2d84:	a1 f0       	breq	.+40     	; 0x2dae <__vector_12+0x2ca>
    2d86:	8f 81       	ldd	r24, Y+7	; 0x07
    2d88:	88 2f       	mov	r24, r24
    2d8a:	90 e0       	ldi	r25, 0x00	; 0
    2d8c:	9c 01       	movw	r18, r24
    2d8e:	22 0f       	add	r18, r18
    2d90:	33 1f       	adc	r19, r19
    2d92:	24 5e       	subi	r18, 0xE4	; 228
    2d94:	3f 4b       	sbci	r19, 0xBF	; 191
    2d96:	f9 01       	movw	r30, r18
    2d98:	20 81       	ld	r18, Z
    2d9a:	31 81       	ldd	r19, Z+1	; 0x01
    2d9c:	21 50       	subi	r18, 0x01	; 1
    2d9e:	31 09       	sbc	r19, r1
    2da0:	88 0f       	add	r24, r24
    2da2:	99 1f       	adc	r25, r25
    2da4:	84 5e       	subi	r24, 0xE4	; 228
    2da6:	9f 4b       	sbci	r25, 0xBF	; 191
    2da8:	fc 01       	movw	r30, r24
    2daa:	20 83       	st	Z, r18
    2dac:	31 83       	std	Z+1, r19	; 0x01
    2dae:	8f 81       	ldd	r24, Y+7	; 0x07
    2db0:	88 2f       	mov	r24, r24
    2db2:	90 e0       	ldi	r25, 0x00	; 0
    2db4:	88 0f       	add	r24, r24
    2db6:	99 1f       	adc	r25, r25
    2db8:	84 5e       	subi	r24, 0xE4	; 228
    2dba:	9f 4b       	sbci	r25, 0xBF	; 191
    2dbc:	fc 01       	movw	r30, r24
    2dbe:	80 81       	ld	r24, Z
    2dc0:	91 81       	ldd	r25, Z+1	; 0x01
    2dc2:	21 e0       	ldi	r18, 0x01	; 1
    2dc4:	89 2b       	or	r24, r25
    2dc6:	09 f0       	breq	.+2      	; 0x2dca <__vector_12+0x2e6>
    2dc8:	20 e0       	ldi	r18, 0x00	; 0
    2dca:	22 23       	and	r18, r18
    2dcc:	19 f0       	breq	.+6      	; 0x2dd4 <__vector_12+0x2f0>
    2dce:	8f 81       	ldd	r24, Y+7	; 0x07
    2dd0:	80 93 ba 47 	sts	0x47BA, r24	; 0x8047ba <_ZZ11__vector_12E24indexConversionInProcess>
    2dd4:	8f 81       	ldd	r24, Y+7	; 0x07
    2dd6:	8f 5f       	subi	r24, 0xFF	; 255
    2dd8:	8f 83       	std	Y+7, r24	; 0x07
    2dda:	be cf       	rjmp	.-132    	; 0x2d58 <__vector_12+0x274>
    2ddc:	80 91 ba 47 	lds	r24, 0x47BA	; 0x8047ba <_ZZ11__vector_12E24indexConversionInProcess>
    2de0:	88 23       	and	r24, r24
    2de2:	0c f4       	brge	.+2      	; 0x2de6 <__vector_12+0x302>
    2de4:	7e c0       	rjmp	.+252    	; 0x2ee2 <__vector_12+0x3fe>
    2de6:	80 91 ba 47 	lds	r24, 0x47BA	; 0x8047ba <_ZZ11__vector_12E24indexConversionInProcess>
    2dea:	08 2e       	mov	r0, r24
    2dec:	00 0c       	add	r0, r0
    2dee:	99 0b       	sbc	r25, r25
    2df0:	20 91 ba 47 	lds	r18, 0x47BA	; 0x8047ba <_ZZ11__vector_12E24indexConversionInProcess>
    2df4:	02 2e       	mov	r0, r18
    2df6:	00 0c       	add	r0, r0
    2df8:	33 0b       	sbc	r19, r19
    2dfa:	22 0f       	add	r18, r18
    2dfc:	33 1f       	adc	r19, r19
    2dfe:	25 5b       	subi	r18, 0xB5	; 181
    2e00:	39 4b       	sbci	r19, 0xB9	; 185
    2e02:	f9 01       	movw	r30, r18
    2e04:	20 81       	ld	r18, Z
    2e06:	31 81       	ldd	r19, Z+1	; 0x01
    2e08:	88 0f       	add	r24, r24
    2e0a:	99 1f       	adc	r25, r25
    2e0c:	84 5e       	subi	r24, 0xE4	; 228
    2e0e:	9f 4b       	sbci	r25, 0xBF	; 191
    2e10:	fc 01       	movw	r30, r24
    2e12:	20 83       	st	Z, r18
    2e14:	31 83       	std	Z+1, r19	; 0x01
    2e16:	80 91 ba 47 	lds	r24, 0x47BA	; 0x8047ba <_ZZ11__vector_12E24indexConversionInProcess>
    2e1a:	08 2e       	mov	r0, r24
    2e1c:	00 0c       	add	r0, r0
    2e1e:	99 0b       	sbc	r25, r25
    2e20:	87 5e       	subi	r24, 0xE7	; 231
    2e22:	9f 4b       	sbci	r25, 0xBF	; 191
    2e24:	fc 01       	movw	r30, r24
    2e26:	80 81       	ld	r24, Z
    2e28:	0e 94 a8 34 	call	0x6950	; 0x6950 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t>
    2e2c:	0e 94 0b 35 	call	0x6a16	; 0x6a16 <_Z20ADC0_startConversionv>
    2e30:	81 e0       	ldi	r24, 0x01	; 1
    2e32:	80 93 b9 47 	sts	0x47B9, r24	; 0x8047b9 <_ZZ11__vector_12E19conversionInProcess>
    2e36:	55 c0       	rjmp	.+170    	; 0x2ee2 <__vector_12+0x3fe>
    2e38:	0e 94 20 35 	call	0x6a40	; 0x6a40 <_Z19ADC0_conversionDonev>
    2e3c:	88 23       	and	r24, r24
    2e3e:	09 f4       	brne	.+2      	; 0x2e42 <__vector_12+0x35e>
    2e40:	50 c0       	rjmp	.+160    	; 0x2ee2 <__vector_12+0x3fe>
    2e42:	0e 94 34 35 	call	0x6a68	; 0x6a68 <_Z9ADC0_readv>
    2e46:	89 83       	std	Y+1, r24	; 0x01
    2e48:	9a 83       	std	Y+2, r25	; 0x02
    2e4a:	89 81       	ldd	r24, Y+1	; 0x01
    2e4c:	9a 81       	ldd	r25, Y+2	; 0x02
    2e4e:	0b 97       	sbiw	r24, 0x0b	; 11
    2e50:	c0 f1       	brcs	.+112    	; 0x2ec2 <__vector_12+0x3de>
    2e52:	89 81       	ldd	r24, Y+1	; 0x01
    2e54:	9a 81       	ldd	r25, Y+2	; 0x02
    2e56:	8a 3f       	cpi	r24, 0xFA	; 250
    2e58:	9f 40       	sbci	r25, 0x0F	; 15
    2e5a:	98 f5       	brcc	.+102    	; 0x2ec2 <__vector_12+0x3de>
    2e5c:	89 81       	ldd	r24, Y+1	; 0x01
    2e5e:	9a 81       	ldd	r25, Y+2	; 0x02
    2e60:	80 93 bb 47 	sts	0x47BB, r24	; 0x8047bb <_ZZ11__vector_12E20holdConversionResult>
    2e64:	90 93 bc 47 	sts	0x47BC, r25	; 0x8047bc <_ZZ11__vector_12E20holdConversionResult+0x1>
    2e68:	80 91 ba 47 	lds	r24, 0x47BA	; 0x8047ba <_ZZ11__vector_12E24indexConversionInProcess>
    2e6c:	08 2e       	mov	r0, r24
    2e6e:	00 0c       	add	r0, r0
    2e70:	99 0b       	sbc	r25, r25
    2e72:	88 0f       	add	r24, r24
    2e74:	99 1f       	adc	r25, r25
    2e76:	8f 55       	subi	r24, 0x5F	; 95
    2e78:	98 4b       	sbci	r25, 0xB8	; 184
    2e7a:	fc 01       	movw	r30, r24
    2e7c:	80 81       	ld	r24, Z
    2e7e:	91 81       	ldd	r25, Z+1	; 0x01
    2e80:	8b 83       	std	Y+3, r24	; 0x03
    2e82:	9c 83       	std	Y+4, r25	; 0x04
    2e84:	80 91 ba 47 	lds	r24, 0x47BA	; 0x8047ba <_ZZ11__vector_12E24indexConversionInProcess>
    2e88:	08 2e       	mov	r0, r24
    2e8a:	00 0c       	add	r0, r0
    2e8c:	99 0b       	sbc	r25, r25
    2e8e:	82 56       	subi	r24, 0x62	; 98
    2e90:	98 4b       	sbci	r25, 0xB8	; 184
    2e92:	21 e0       	ldi	r18, 0x01	; 1
    2e94:	fc 01       	movw	r30, r24
    2e96:	20 83       	st	Z, r18
    2e98:	80 91 bb 47 	lds	r24, 0x47BB	; 0x8047bb <_ZZ11__vector_12E20holdConversionResult>
    2e9c:	90 91 bc 47 	lds	r25, 0x47BC	; 0x8047bc <_ZZ11__vector_12E20holdConversionResult+0x1>
    2ea0:	8b 83       	std	Y+3, r24	; 0x03
    2ea2:	9c 83       	std	Y+4, r25	; 0x04
    2ea4:	80 91 ba 47 	lds	r24, 0x47BA	; 0x8047ba <_ZZ11__vector_12E24indexConversionInProcess>
    2ea8:	08 2e       	mov	r0, r24
    2eaa:	00 0c       	add	r0, r0
    2eac:	99 0b       	sbc	r25, r25
    2eae:	88 0f       	add	r24, r24
    2eb0:	99 1f       	adc	r25, r25
    2eb2:	8f 55       	subi	r24, 0x5F	; 95
    2eb4:	98 4b       	sbci	r25, 0xB8	; 184
    2eb6:	2b 81       	ldd	r18, Y+3	; 0x03
    2eb8:	3c 81       	ldd	r19, Y+4	; 0x04
    2eba:	fc 01       	movw	r30, r24
    2ebc:	20 83       	st	Z, r18
    2ebe:	31 83       	std	Z+1, r19	; 0x01
    2ec0:	0e c0       	rjmp	.+28     	; 0x2ede <__vector_12+0x3fa>
    2ec2:	80 91 ba 47 	lds	r24, 0x47BA	; 0x8047ba <_ZZ11__vector_12E24indexConversionInProcess>
    2ec6:	08 2e       	mov	r0, r24
    2ec8:	00 0c       	add	r0, r0
    2eca:	99 0b       	sbc	r25, r25
    2ecc:	88 0f       	add	r24, r24
    2ece:	99 1f       	adc	r25, r25
    2ed0:	8f 55       	subi	r24, 0x5F	; 95
    2ed2:	98 4b       	sbci	r25, 0xB8	; 184
    2ed4:	fc 01       	movw	r30, r24
    2ed6:	80 81       	ld	r24, Z
    2ed8:	91 81       	ldd	r25, Z+1	; 0x01
    2eda:	89 83       	std	Y+1, r24	; 0x01
    2edc:	9a 83       	std	Y+2, r25	; 0x02
    2ede:	10 92 b9 47 	sts	0x47B9, r1	; 0x8047b9 <_ZZ11__vector_12E19conversionInProcess>
    2ee2:	80 e0       	ldi	r24, 0x00	; 0
    2ee4:	9b e0       	ldi	r25, 0x0B	; 11
    2ee6:	21 e0       	ldi	r18, 0x01	; 1
    2ee8:	fc 01       	movw	r30, r24
    2eea:	26 83       	std	Z+6, r18	; 0x06
    2eec:	00 00       	nop
    2eee:	27 96       	adiw	r28, 0x07	; 7
    2ef0:	cd bf       	out	0x3d, r28	; 61
    2ef2:	de bf       	out	0x3e, r29	; 62
    2ef4:	df 91       	pop	r29
    2ef6:	cf 91       	pop	r28
    2ef8:	ff 91       	pop	r31
    2efa:	ef 91       	pop	r30
    2efc:	bf 91       	pop	r27
    2efe:	af 91       	pop	r26
    2f00:	9f 91       	pop	r25
    2f02:	8f 91       	pop	r24
    2f04:	7f 91       	pop	r23
    2f06:	6f 91       	pop	r22
    2f08:	5f 91       	pop	r21
    2f0a:	4f 91       	pop	r20
    2f0c:	3f 91       	pop	r19
    2f0e:	2f 91       	pop	r18
    2f10:	0f 90       	pop	r0
    2f12:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    2f16:	0f 90       	pop	r0
    2f18:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    2f1c:	0f 90       	pop	r0
    2f1e:	1f 90       	pop	r1
    2f20:	18 95       	reti

00002f22 <__vector_29>:
    2f22:	1f 92       	push	r1
    2f24:	0f 92       	push	r0
    2f26:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    2f2a:	0f 92       	push	r0
    2f2c:	11 24       	eor	r1, r1
    2f2e:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    2f32:	0f 92       	push	r0
    2f34:	2f 93       	push	r18
    2f36:	3f 93       	push	r19
    2f38:	4f 93       	push	r20
    2f3a:	5f 93       	push	r21
    2f3c:	6f 93       	push	r22
    2f3e:	7f 93       	push	r23
    2f40:	8f 93       	push	r24
    2f42:	9f 93       	push	r25
    2f44:	af 93       	push	r26
    2f46:	bf 93       	push	r27
    2f48:	ef 93       	push	r30
    2f4a:	ff 93       	push	r31
    2f4c:	cf 93       	push	r28
    2f4e:	df 93       	push	r29
    2f50:	cd b7       	in	r28, 0x3d	; 61
    2f52:	de b7       	in	r29, 0x3e	; 62
    2f54:	80 e4       	ldi	r24, 0x40	; 64
    2f56:	94 e0       	ldi	r25, 0x04	; 4
    2f58:	fc 01       	movw	r30, r24
    2f5a:	81 85       	ldd	r24, Z+9	; 0x09
    2f5c:	88 1f       	adc	r24, r24
    2f5e:	88 27       	eor	r24, r24
    2f60:	88 1f       	adc	r24, r24
    2f62:	88 23       	and	r24, r24
    2f64:	d9 f1       	breq	.+118    	; 0x2fdc <__vector_29+0xba>
    2f66:	80 91 a7 47 	lds	r24, 0x47A7	; 0x8047a7 <g_switch_closed_count>
    2f6a:	90 91 a8 47 	lds	r25, 0x47A8	; 0x8047a8 <g_switch_closed_count+0x1>
    2f6e:	21 e0       	ldi	r18, 0x01	; 1
    2f70:	88 3e       	cpi	r24, 0xE8	; 232
    2f72:	93 40       	sbci	r25, 0x03	; 3
    2f74:	08 f4       	brcc	.+2      	; 0x2f78 <__vector_29+0x56>
    2f76:	20 e0       	ldi	r18, 0x00	; 0
    2f78:	22 23       	and	r18, r18
    2f7a:	21 f0       	breq	.+8      	; 0x2f84 <__vector_29+0x62>
    2f7c:	81 e0       	ldi	r24, 0x01	; 1
    2f7e:	80 93 a9 47 	sts	0x47A9, r24	; 0x8047a9 <g_long_button_press>
    2f82:	28 c0       	rjmp	.+80     	; 0x2fd4 <__vector_29+0xb2>
    2f84:	80 91 a7 47 	lds	r24, 0x47A7	; 0x8047a7 <g_switch_closed_count>
    2f88:	90 91 a8 47 	lds	r25, 0x47A8	; 0x8047a8 <g_switch_closed_count+0x1>
    2f8c:	21 e0       	ldi	r18, 0x01	; 1
    2f8e:	0b 97       	sbiw	r24, 0x0b	; 11
    2f90:	08 f4       	brcc	.+2      	; 0x2f94 <__vector_29+0x72>
    2f92:	20 e0       	ldi	r18, 0x00	; 0
    2f94:	22 23       	and	r18, r18
    2f96:	f1 f0       	breq	.+60     	; 0x2fd4 <__vector_29+0xb2>
    2f98:	0e 94 67 4e 	call	0x9cce	; 0x9cce <_Z11wifiEnabledv>
    2f9c:	88 23       	and	r24, r24
    2f9e:	a1 f0       	breq	.+40     	; 0x2fc8 <__vector_29+0xa6>
    2fa0:	88 e0       	ldi	r24, 0x08	; 8
    2fa2:	e1 e5       	ldi	r30, 0x51	; 81
    2fa4:	f0 e4       	ldi	r31, 0x40	; 64
    2fa6:	a9 e1       	ldi	r26, 0x19	; 25
    2fa8:	b7 e4       	ldi	r27, 0x47	; 71
    2faa:	01 90       	ld	r0, Z+
    2fac:	0d 92       	st	X+, r0
    2fae:	8a 95       	dec	r24
    2fb0:	e1 f7       	brne	.-8      	; 0x2faa <__vector_29+0x88>
    2fb2:	49 e1       	ldi	r20, 0x19	; 25
    2fb4:	57 e4       	ldi	r21, 0x47	; 71
    2fb6:	69 e5       	ldi	r22, 0x59	; 89
    2fb8:	70 e4       	ldi	r23, 0x40	; 64
    2fba:	81 e0       	ldi	r24, 0x01	; 1
    2fbc:	0e 94 bb 5a 	call	0xb576	; 0xb576 <_Z11lb_send_msg13LBMessageTypePKcPc>
    2fc0:	8a e0       	ldi	r24, 0x0A	; 10
    2fc2:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    2fc6:	06 c0       	rjmp	.+12     	; 0x2fd4 <__vector_29+0xb2>
    2fc8:	81 e0       	ldi	r24, 0x01	; 1
    2fca:	0e 94 2b 4e 	call	0x9c56	; 0x9c56 <_Z10wifi_powerb>
    2fce:	80 e0       	ldi	r24, 0x00	; 0
    2fd0:	0e 94 42 4e 	call	0x9c84	; 0x9c84 <_Z10wifi_resetb>
    2fd4:	10 92 a7 47 	sts	0x47A7, r1	; 0x8047a7 <g_switch_closed_count>
    2fd8:	10 92 a8 47 	sts	0x47A8, r1	; 0x8047a8 <g_switch_closed_count+0x1>
    2fdc:	80 e4       	ldi	r24, 0x40	; 64
    2fde:	94 e0       	ldi	r25, 0x04	; 4
    2fe0:	2f ef       	ldi	r18, 0xFF	; 255
    2fe2:	fc 01       	movw	r30, r24
    2fe4:	21 87       	std	Z+9, r18	; 0x09
    2fe6:	00 00       	nop
    2fe8:	df 91       	pop	r29
    2fea:	cf 91       	pop	r28
    2fec:	ff 91       	pop	r31
    2fee:	ef 91       	pop	r30
    2ff0:	bf 91       	pop	r27
    2ff2:	af 91       	pop	r26
    2ff4:	9f 91       	pop	r25
    2ff6:	8f 91       	pop	r24
    2ff8:	7f 91       	pop	r23
    2ffa:	6f 91       	pop	r22
    2ffc:	5f 91       	pop	r21
    2ffe:	4f 91       	pop	r20
    3000:	3f 91       	pop	r19
    3002:	2f 91       	pop	r18
    3004:	0f 90       	pop	r0
    3006:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    300a:	0f 90       	pop	r0
    300c:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    3010:	0f 90       	pop	r0
    3012:	1f 90       	pop	r1
    3014:	18 95       	reti

00003016 <_Z10powerUp3V3v>:
    3016:	cf 93       	push	r28
    3018:	df 93       	push	r29
    301a:	cd b7       	in	r28, 0x3d	; 61
    301c:	de b7       	in	r29, 0x3e	; 62
    301e:	61 e0       	ldi	r22, 0x01	; 1
    3020:	84 e0       	ldi	r24, 0x04	; 4
    3022:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <PORTB_set_pin_level>
    3026:	61 e0       	ldi	r22, 0x01	; 1
    3028:	87 e0       	ldi	r24, 0x07	; 7
    302a:	0e 94 c5 0f 	call	0x1f8a	; 0x1f8a <PORTA_set_pin_level>
    302e:	81 e0       	ldi	r24, 0x01	; 1
    3030:	80 93 4e 47 	sts	0x474E, r24	; 0x80474e <_ZL18g_perform_3V3_init>
    3034:	00 00       	nop
    3036:	df 91       	pop	r29
    3038:	cf 91       	pop	r28
    303a:	08 95       	ret

0000303c <main>:
    303c:	cf 93       	push	r28
    303e:	df 93       	push	r29
    3040:	cd b7       	in	r28, 0x3d	; 61
    3042:	de b7       	in	r29, 0x3e	; 62
    3044:	26 97       	sbiw	r28, 0x06	; 6
    3046:	cd bf       	out	0x3d, r28	; 61
    3048:	de bf       	out	0x3e, r29	; 62
    304a:	0e 94 89 08 	call	0x1112	; 0x1112 <atmel_start_init>
    304e:	80 e0       	ldi	r24, 0x00	; 0
    3050:	0e 94 e2 10 	call	0x21c4	; 0x21c4 <LED_set_RED_level>
    3054:	61 e0       	ldi	r22, 0x01	; 1
    3056:	84 e0       	ldi	r24, 0x04	; 4
    3058:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <PORTB_set_pin_level>
    305c:	81 e0       	ldi	r24, 0x01	; 1
    305e:	0e 94 2b 4e 	call	0x9c56	; 0x9c56 <_Z10wifi_powerb>
    3062:	80 e0       	ldi	r24, 0x00	; 0
    3064:	0e 94 42 4e 	call	0x9c84	; 0x9c84 <_Z10wifi_resetb>
    3068:	84 e6       	ldi	r24, 0x64	; 100
    306a:	80 93 5b 47 	sts	0x475B, r24	; 0x80475b <_ZL19g_wifi_enable_delay>
    306e:	0e 94 0b 18 	call	0x3016	; 0x3016 <_Z10powerUp3V3v>
    3072:	8b ea       	ldi	r24, 0xAB	; 171
    3074:	97 e4       	ldi	r25, 0x47	; 71
    3076:	0e 94 b6 4b 	call	0x976c	; 0x976c <_ZN13EepromManager20initializeEEPROMVarsEv>
    307a:	8b ea       	ldi	r24, 0xAB	; 171
    307c:	97 e4       	ldi	r25, 0x47	; 71
    307e:	0e 94 6a 49 	call	0x92d4	; 0x92d4 <_ZN13EepromManager11readNonVolsEv>
    3082:	0e 94 0a 2c 	call	0x5814	; 0x5814 <_Z8rtc_initv>
    3086:	98 2f       	mov	r25, r24
    3088:	81 e0       	ldi	r24, 0x01	; 1
    308a:	9c 3f       	cpi	r25, 0xFC	; 252
    308c:	09 f0       	breq	.+2      	; 0x3090 <main+0x54>
    308e:	80 e0       	ldi	r24, 0x00	; 0
    3090:	88 23       	and	r24, r24
    3092:	a9 f4       	brne	.+42     	; 0x30be <main+0x82>
    3094:	ce 01       	movw	r24, r28
    3096:	05 96       	adiw	r24, 0x05	; 5
    3098:	0e 94 53 40 	call	0x80a6	; 0x80a6 <ds3231_get_epoch>
    309c:	dc 01       	movw	r26, r24
    309e:	cb 01       	movw	r24, r22
    30a0:	89 83       	std	Y+1, r24	; 0x01
    30a2:	9a 83       	std	Y+2, r25	; 0x02
    30a4:	ab 83       	std	Y+3, r26	; 0x03
    30a6:	bc 83       	std	Y+4, r27	; 0x04
    30a8:	8d 81       	ldd	r24, Y+5	; 0x05
    30aa:	88 23       	and	r24, r24
    30ac:	41 f4       	brne	.+16     	; 0x30be <main+0x82>
    30ae:	89 81       	ldd	r24, Y+1	; 0x01
    30b0:	9a 81       	ldd	r25, Y+2	; 0x02
    30b2:	ab 81       	ldd	r26, Y+3	; 0x03
    30b4:	bc 81       	ldd	r27, Y+4	; 0x04
    30b6:	bc 01       	movw	r22, r24
    30b8:	cd 01       	movw	r24, r26
    30ba:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <set_system_time>
    30be:	0e 94 59 4e 	call	0x9cb2	; 0x9cb2 <_Z11wifiPresentv>
    30c2:	98 2f       	mov	r25, r24
    30c4:	81 e0       	ldi	r24, 0x01	; 1
    30c6:	89 27       	eor	r24, r25
    30c8:	88 23       	and	r24, r24
    30ca:	51 f0       	breq	.+20     	; 0x30e0 <main+0xa4>
    30cc:	80 e0       	ldi	r24, 0x00	; 0
    30ce:	0e 94 2b 4e 	call	0x9c56	; 0x9c56 <_Z10wifi_powerb>
    30d2:	81 e0       	ldi	r24, 0x01	; 1
    30d4:	0e 94 42 4e 	call	0x9c84	; 0x9c84 <_Z10wifi_resetb>
    30d8:	10 92 5b 47 	sts	0x475B, r1	; 0x80475b <_ZL19g_wifi_enable_delay>
    30dc:	10 92 09 40 	sts	0x4009, r1	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    30e0:	0e 94 ea 20 	call	0x41d4	; 0x41d4 <_Z17handleLinkBusMsgsv>
    30e4:	0e 94 83 19 	call	0x3306	; 0x3306 <_Z19handleSerialBusMsgsv>
    30e8:	80 91 4e 47 	lds	r24, 0x474E	; 0x80474e <_ZL18g_perform_3V3_init>
    30ec:	88 23       	and	r24, r24
    30ee:	b9 f0       	breq	.+46     	; 0x311e <main+0xe2>
    30f0:	10 92 4e 47 	sts	0x474E, r1	; 0x80474e <_ZL18g_perform_3V3_init>
    30f4:	0e 94 ca 70 	call	0xe194	; 0xe194 <_Z16init_transmitterv>
    30f8:	98 2f       	mov	r25, r24
    30fa:	81 e0       	ldi	r24, 0x01	; 1
    30fc:	92 3d       	cpi	r25, 0xD2	; 210
    30fe:	09 f4       	brne	.+2      	; 0x3102 <main+0xc6>
    3100:	80 e0       	ldi	r24, 0x00	; 0
    3102:	88 23       	and	r24, r24
    3104:	31 f0       	breq	.+12     	; 0x3112 <main+0xd6>
    3106:	81 e0       	ldi	r24, 0x01	; 1
    3108:	80 93 4d 47 	sts	0x474D, r24	; 0x80474d <_ZL33g_powerUp_initialization_complete>
    310c:	81 e0       	ldi	r24, 0x01	; 1
    310e:	80 93 52 47 	sts	0x4752, r24	; 0x804752 <_ZL13g_start_event>
    3112:	8c e3       	ldi	r24, 0x3C	; 60
    3114:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    3118:	80 e0       	ldi	r24, 0x00	; 0
    311a:	0e 94 42 4e 	call	0x9c84	; 0x9c84 <_Z10wifi_resetb>
    311e:	80 91 a7 47 	lds	r24, 0x47A7	; 0x8047a7 <g_switch_closed_count>
    3122:	90 91 a8 47 	lds	r25, 0x47A8	; 0x8047a8 <g_switch_closed_count+0x1>
    3126:	21 e0       	ldi	r18, 0x01	; 1
    3128:	88 3e       	cpi	r24, 0xE8	; 232
    312a:	93 40       	sbci	r25, 0x03	; 3
    312c:	08 f4       	brcc	.+2      	; 0x3130 <main+0xf4>
    312e:	20 e0       	ldi	r18, 0x00	; 0
    3130:	22 23       	and	r18, r18
    3132:	51 f0       	breq	.+20     	; 0x3148 <main+0x10c>
    3134:	68 e0       	ldi	r22, 0x08	; 8
    3136:	8a ea       	ldi	r24, 0xAA	; 170
    3138:	97 e4       	ldi	r25, 0x47	; 71
    313a:	0e 94 58 54 	call	0xa8b0	; 0xa8b0 <_ZN4leds5blinkE7Blink_t>
    313e:	67 e0       	ldi	r22, 0x07	; 7
    3140:	8a ea       	ldi	r24, 0xAA	; 170
    3142:	97 e4       	ldi	r25, 0x47	; 71
    3144:	0e 94 58 54 	call	0xa8b0	; 0xa8b0 <_ZN4leds5blinkE7Blink_t>
    3148:	80 91 a9 47 	lds	r24, 0x47A9	; 0x8047a9 <g_long_button_press>
    314c:	88 23       	and	r24, r24
    314e:	81 f0       	breq	.+32     	; 0x3170 <main+0x134>
    3150:	80 91 94 47 	lds	r24, 0x4794	; 0x804794 <g_event_enabled>
    3154:	88 23       	and	r24, r24
    3156:	39 f0       	breq	.+14     	; 0x3166 <main+0x12a>
    3158:	81 e0       	ldi	r24, 0x01	; 1
    315a:	80 93 53 47 	sts	0x4753, r24	; 0x804753 <_ZL11g_end_event>
    315e:	81 e0       	ldi	r24, 0x01	; 1
    3160:	80 93 4c 47 	sts	0x474C, r24	; 0x80474c <_ZL18g_last_status_code>
    3164:	03 c0       	rjmp	.+6      	; 0x316c <main+0x130>
    3166:	81 e0       	ldi	r24, 0x01	; 1
    3168:	80 93 52 47 	sts	0x4752, r24	; 0x804752 <_ZL13g_start_event>
    316c:	10 92 a9 47 	sts	0x47A9, r1	; 0x8047a9 <g_long_button_press>
    3170:	80 91 52 47 	lds	r24, 0x4752	; 0x804752 <_ZL13g_start_event>
    3174:	88 23       	and	r24, r24
    3176:	41 f1       	breq	.+80     	; 0x31c8 <main+0x18c>
    3178:	10 92 52 47 	sts	0x4752, r1	; 0x804752 <_ZL13g_start_event>
    317c:	1e 82       	std	Y+6, r1	; 0x06
    317e:	ce 01       	movw	r24, r28
    3180:	06 96       	adiw	r24, 0x06	; 6
    3182:	0e 94 a6 29 	call	0x534c	; 0x534c <_Z11launchEventP2SC>
    3186:	80 93 4b 47 	sts	0x474B, r24	; 0x80474b <_ZL17g_last_error_code>
    318a:	80 91 98 47 	lds	r24, 0x4798	; 0x804798 <_ZL13g_go_to_sleep>
    318e:	88 23       	and	r24, r24
    3190:	31 f0       	breq	.+12     	; 0x319e <main+0x162>
    3192:	80 91 5d 47 	lds	r24, 0x475D	; 0x80475d <_ZL11g_sleepType>
    3196:	88 23       	and	r24, r24
    3198:	11 f0       	breq	.+4      	; 0x319e <main+0x162>
    319a:	81 e0       	ldi	r24, 0x01	; 1
    319c:	01 c0       	rjmp	.+2      	; 0x31a0 <main+0x164>
    319e:	80 e0       	ldi	r24, 0x00	; 0
    31a0:	88 23       	and	r24, r24
    31a2:	29 f0       	breq	.+10     	; 0x31ae <main+0x172>
    31a4:	83 e0       	ldi	r24, 0x03	; 3
    31a6:	80 93 5d 47 	sts	0x475D, r24	; 0x80475d <_ZL11g_sleepType>
    31aa:	10 92 98 47 	sts	0x4798, r1	; 0x804798 <_ZL13g_go_to_sleep>
    31ae:	8c e3       	ldi	r24, 0x3C	; 60
    31b0:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    31b4:	65 e0       	ldi	r22, 0x05	; 5
    31b6:	8a ea       	ldi	r24, 0xAA	; 170
    31b8:	97 e4       	ldi	r25, 0x47	; 71
    31ba:	0e 94 58 54 	call	0xa8b0	; 0xa8b0 <_ZN4leds5blinkE7Blink_t>
    31be:	61 e0       	ldi	r22, 0x01	; 1
    31c0:	8a ea       	ldi	r24, 0xAA	; 170
    31c2:	97 e4       	ldi	r25, 0x47	; 71
    31c4:	0e 94 58 54 	call	0xa8b0	; 0xa8b0 <_ZN4leds5blinkE7Blink_t>
    31c8:	80 91 53 47 	lds	r24, 0x4753	; 0x804753 <_ZL11g_end_event>
    31cc:	88 23       	and	r24, r24
    31ce:	71 f0       	breq	.+28     	; 0x31ec <main+0x1b0>
    31d0:	10 92 53 47 	sts	0x4753, r1	; 0x804753 <_ZL11g_end_event>
    31d4:	0e 94 33 2c 	call	0x5866	; 0x5866 <_Z12suspendEventv>
    31d8:	68 e0       	ldi	r22, 0x08	; 8
    31da:	8a ea       	ldi	r24, 0xAA	; 170
    31dc:	97 e4       	ldi	r25, 0x47	; 71
    31de:	0e 94 58 54 	call	0xa8b0	; 0xa8b0 <_ZN4leds5blinkE7Blink_t>
    31e2:	61 e0       	ldi	r22, 0x01	; 1
    31e4:	8a ea       	ldi	r24, 0xAA	; 170
    31e6:	97 e4       	ldi	r25, 0x47	; 71
    31e8:	0e 94 58 54 	call	0xa8b0	; 0xa8b0 <_ZN4leds5blinkE7Blink_t>
    31ec:	80 91 5a 47 	lds	r24, 0x475A	; 0x80475a <_ZL16g_report_seconds>
    31f0:	88 23       	and	r24, r24
    31f2:	59 f1       	breq	.+86     	; 0x324a <main+0x20e>
    31f4:	10 92 5a 47 	sts	0x475A, r1	; 0x80475a <_ZL16g_report_seconds>
    31f8:	80 e0       	ldi	r24, 0x00	; 0
    31fa:	90 e0       	ldi	r25, 0x00	; 0
    31fc:	0e 94 56 06 	call	0xcac	; 0xcac <time>
    3200:	dc 01       	movw	r26, r24
    3202:	cb 01       	movw	r24, r22
    3204:	2b 2f       	mov	r18, r27
    3206:	2f 93       	push	r18
    3208:	2a 2f       	mov	r18, r26
    320a:	2f 93       	push	r18
    320c:	29 2f       	mov	r18, r25
    320e:	2f 93       	push	r18
    3210:	8f 93       	push	r24
    3212:	8d e5       	ldi	r24, 0x5D	; 93
    3214:	90 e4       	ldi	r25, 0x40	; 64
    3216:	89 2f       	mov	r24, r25
    3218:	8f 93       	push	r24
    321a:	8d e5       	ldi	r24, 0x5D	; 93
    321c:	90 e4       	ldi	r25, 0x40	; 64
    321e:	8f 93       	push	r24
    3220:	89 e1       	ldi	r24, 0x19	; 25
    3222:	97 e4       	ldi	r25, 0x47	; 71
    3224:	89 2f       	mov	r24, r25
    3226:	8f 93       	push	r24
    3228:	89 e1       	ldi	r24, 0x19	; 25
    322a:	97 e4       	ldi	r25, 0x47	; 71
    322c:	8f 93       	push	r24
    322e:	0e 94 ba 7c 	call	0xf974	; 0xf974 <sprintf>
    3232:	8d b7       	in	r24, 0x3d	; 61
    3234:	9e b7       	in	r25, 0x3e	; 62
    3236:	08 96       	adiw	r24, 0x08	; 8
    3238:	cd bf       	out	0x3d, r28	; 61
    323a:	de bf       	out	0x3e, r29	; 62
    323c:	49 e1       	ldi	r20, 0x19	; 25
    323e:	57 e4       	ldi	r21, 0x47	; 71
    3240:	61 e6       	ldi	r22, 0x61	; 97
    3242:	70 e4       	ldi	r23, 0x40	; 64
    3244:	83 e0       	ldi	r24, 0x03	; 3
    3246:	0e 94 bb 5a 	call	0xb576	; 0xb576 <_Z11lb_send_msg13LBMessageTypePKcPc>
    324a:	90 91 4b 47 	lds	r25, 0x474B	; 0x80474b <_ZL17g_last_error_code>
    324e:	81 e0       	ldi	r24, 0x01	; 1
    3250:	99 23       	and	r25, r25
    3252:	09 f4       	brne	.+2      	; 0x3256 <main+0x21a>
    3254:	80 e0       	ldi	r24, 0x00	; 0
    3256:	88 23       	and	r24, r24
    3258:	31 f1       	breq	.+76     	; 0x32a6 <main+0x26a>
    325a:	80 91 4b 47 	lds	r24, 0x474B	; 0x80474b <_ZL17g_last_error_code>
    325e:	88 2f       	mov	r24, r24
    3260:	90 e0       	ldi	r25, 0x00	; 0
    3262:	29 2f       	mov	r18, r25
    3264:	2f 93       	push	r18
    3266:	8f 93       	push	r24
    3268:	85 e6       	ldi	r24, 0x65	; 101
    326a:	90 e4       	ldi	r25, 0x40	; 64
    326c:	89 2f       	mov	r24, r25
    326e:	8f 93       	push	r24
    3270:	85 e6       	ldi	r24, 0x65	; 101
    3272:	90 e4       	ldi	r25, 0x40	; 64
    3274:	8f 93       	push	r24
    3276:	89 e1       	ldi	r24, 0x19	; 25
    3278:	97 e4       	ldi	r25, 0x47	; 71
    327a:	89 2f       	mov	r24, r25
    327c:	8f 93       	push	r24
    327e:	89 e1       	ldi	r24, 0x19	; 25
    3280:	97 e4       	ldi	r25, 0x47	; 71
    3282:	8f 93       	push	r24
    3284:	0e 94 ba 7c 	call	0xf974	; 0xf974 <sprintf>
    3288:	0f 90       	pop	r0
    328a:	0f 90       	pop	r0
    328c:	0f 90       	pop	r0
    328e:	0f 90       	pop	r0
    3290:	0f 90       	pop	r0
    3292:	0f 90       	pop	r0
    3294:	49 e1       	ldi	r20, 0x19	; 25
    3296:	57 e4       	ldi	r21, 0x47	; 71
    3298:	68 e6       	ldi	r22, 0x68	; 104
    329a:	70 e4       	ldi	r23, 0x40	; 64
    329c:	83 e0       	ldi	r24, 0x03	; 3
    329e:	0e 94 bb 5a 	call	0xb576	; 0xb576 <_Z11lb_send_msg13LBMessageTypePKcPc>
    32a2:	10 92 4b 47 	sts	0x474B, r1	; 0x80474b <_ZL17g_last_error_code>
    32a6:	90 91 4c 47 	lds	r25, 0x474C	; 0x80474c <_ZL18g_last_status_code>
    32aa:	81 e0       	ldi	r24, 0x01	; 1
    32ac:	99 23       	and	r25, r25
    32ae:	09 f4       	brne	.+2      	; 0x32b2 <main+0x276>
    32b0:	80 e0       	ldi	r24, 0x00	; 0
    32b2:	88 23       	and	r24, r24
    32b4:	09 f4       	brne	.+2      	; 0x32b8 <main+0x27c>
    32b6:	14 cf       	rjmp	.-472    	; 0x30e0 <main+0xa4>
    32b8:	80 91 4c 47 	lds	r24, 0x474C	; 0x80474c <_ZL18g_last_status_code>
    32bc:	88 2f       	mov	r24, r24
    32be:	90 e0       	ldi	r25, 0x00	; 0
    32c0:	29 2f       	mov	r18, r25
    32c2:	2f 93       	push	r18
    32c4:	8f 93       	push	r24
    32c6:	85 e6       	ldi	r24, 0x65	; 101
    32c8:	90 e4       	ldi	r25, 0x40	; 64
    32ca:	89 2f       	mov	r24, r25
    32cc:	8f 93       	push	r24
    32ce:	85 e6       	ldi	r24, 0x65	; 101
    32d0:	90 e4       	ldi	r25, 0x40	; 64
    32d2:	8f 93       	push	r24
    32d4:	89 e1       	ldi	r24, 0x19	; 25
    32d6:	97 e4       	ldi	r25, 0x47	; 71
    32d8:	89 2f       	mov	r24, r25
    32da:	8f 93       	push	r24
    32dc:	89 e1       	ldi	r24, 0x19	; 25
    32de:	97 e4       	ldi	r25, 0x47	; 71
    32e0:	8f 93       	push	r24
    32e2:	0e 94 ba 7c 	call	0xf974	; 0xf974 <sprintf>
    32e6:	0f 90       	pop	r0
    32e8:	0f 90       	pop	r0
    32ea:	0f 90       	pop	r0
    32ec:	0f 90       	pop	r0
    32ee:	0f 90       	pop	r0
    32f0:	0f 90       	pop	r0
    32f2:	49 e1       	ldi	r20, 0x19	; 25
    32f4:	57 e4       	ldi	r21, 0x47	; 71
    32f6:	6b e6       	ldi	r22, 0x6B	; 107
    32f8:	70 e4       	ldi	r23, 0x40	; 64
    32fa:	83 e0       	ldi	r24, 0x03	; 3
    32fc:	0e 94 bb 5a 	call	0xb576	; 0xb576 <_Z11lb_send_msg13LBMessageTypePKcPc>
    3300:	10 92 4c 47 	sts	0x474C, r1	; 0x80474c <_ZL18g_last_status_code>
    3304:	ed ce       	rjmp	.-550    	; 0x30e0 <main+0xa4>

00003306 <_Z19handleSerialBusMsgsv>:
    3306:	ef 92       	push	r14
    3308:	ff 92       	push	r15
    330a:	0f 93       	push	r16
    330c:	1f 93       	push	r17
    330e:	cf 93       	push	r28
    3310:	df 93       	push	r29
    3312:	cd b7       	in	r28, 0x3d	; 61
    3314:	de b7       	in	r29, 0x3e	; 62
    3316:	ce 59       	subi	r28, 0x9E	; 158
    3318:	d1 09       	sbc	r29, r1
    331a:	cd bf       	out	0x3d, r28	; 61
    331c:	de bf       	out	0x3e, r29	; 62
    331e:	0e 94 7f 61 	call	0xc2fe	; 0xc2fe <nextFullSBRxBuffer>
    3322:	8e 83       	std	Y+6, r24	; 0x06
    3324:	9f 83       	std	Y+7, r25	; 0x07
    3326:	21 e0       	ldi	r18, 0x01	; 1
    3328:	8e 81       	ldd	r24, Y+6	; 0x06
    332a:	9f 81       	ldd	r25, Y+7	; 0x07
    332c:	89 2b       	or	r24, r25
    332e:	09 f4       	brne	.+2      	; 0x3332 <_Z19handleSerialBusMsgsv+0x2c>
    3330:	20 e0       	ldi	r18, 0x00	; 0
    3332:	22 23       	and	r18, r18
    3334:	09 f4       	brne	.+2      	; 0x3338 <_Z19handleSerialBusMsgsv+0x32>
    3336:	42 c7       	rjmp	.+3716   	; 0x41bc <__DATA_REGION_LENGTH__+0x1bc>
    3338:	8e 81       	ldd	r24, Y+6	; 0x06
    333a:	9f 81       	ldd	r25, Y+7	; 0x07
    333c:	fc 01       	movw	r30, r24
    333e:	81 81       	ldd	r24, Z+1	; 0x01
    3340:	92 81       	ldd	r25, Z+2	; 0x02
    3342:	88 87       	std	Y+8, r24	; 0x08
    3344:	99 87       	std	Y+9, r25	; 0x09
    3346:	88 85       	ldd	r24, Y+8	; 0x08
    3348:	99 85       	ldd	r25, Y+9	; 0x09
    334a:	8a 3e       	cpi	r24, 0xEA	; 234
    334c:	f2 e2       	ldi	r31, 0x22	; 34
    334e:	9f 07       	cpc	r25, r31
    3350:	09 f4       	brne	.+2      	; 0x3354 <_Z19handleSerialBusMsgsv+0x4e>
    3352:	a4 c3       	rjmp	.+1864   	; 0x3a9c <_Z19handleSerialBusMsgsv+0x796>
    3354:	8b 3e       	cpi	r24, 0xEB	; 235
    3356:	22 e2       	ldi	r18, 0x22	; 34
    3358:	92 07       	cpc	r25, r18
    335a:	b8 f4       	brcc	.+46     	; 0x338a <_Z19handleSerialBusMsgsv+0x84>
    335c:	8f 36       	cpi	r24, 0x6F	; 111
    335e:	ed e1       	ldi	r30, 0x1D	; 29
    3360:	9e 07       	cpc	r25, r30
    3362:	09 f4       	brne	.+2      	; 0x3366 <_Z19handleSerialBusMsgsv+0x60>
    3364:	ed c3       	rjmp	.+2010   	; 0x3b40 <_Z19handleSerialBusMsgsv+0x83a>
    3366:	80 37       	cpi	r24, 0x70	; 112
    3368:	fd e1       	ldi	r31, 0x1D	; 29
    336a:	9f 07       	cpc	r25, r31
    336c:	28 f4       	brcc	.+10     	; 0x3378 <_Z19handleSerialBusMsgsv+0x72>
    336e:	8e 31       	cpi	r24, 0x1E	; 30
    3370:	93 40       	sbci	r25, 0x03	; 3
    3372:	09 f4       	brne	.+2      	; 0x3376 <_Z19handleSerialBusMsgsv+0x70>
    3374:	81 c2       	rjmp	.+1282   	; 0x3878 <_Z19handleSerialBusMsgsv+0x572>
    3376:	10 c7       	rjmp	.+3616   	; 0x4198 <__DATA_REGION_LENGTH__+0x198>
    3378:	86 3c       	cpi	r24, 0xC6	; 198
    337a:	ee e1       	ldi	r30, 0x1E	; 30
    337c:	9e 07       	cpc	r25, r30
    337e:	e9 f0       	breq	.+58     	; 0x33ba <_Z19handleSerialBusMsgsv+0xb4>
    3380:	81 3d       	cpi	r24, 0xD1	; 209
    3382:	9e 41       	sbci	r25, 0x1E	; 30
    3384:	09 f4       	brne	.+2      	; 0x3388 <_Z19handleSerialBusMsgsv+0x82>
    3386:	a9 c1       	rjmp	.+850    	; 0x36da <_Z19handleSerialBusMsgsv+0x3d4>
    3388:	07 c7       	rjmp	.+3598   	; 0x4198 <__DATA_REGION_LENGTH__+0x198>
    338a:	82 37       	cpi	r24, 0x72	; 114
    338c:	23 e2       	ldi	r18, 0x23	; 35
    338e:	92 07       	cpc	r25, r18
    3390:	09 f4       	brne	.+2      	; 0x3394 <_Z19handleSerialBusMsgsv+0x8e>
    3392:	00 c3       	rjmp	.+1536   	; 0x3994 <_Z19handleSerialBusMsgsv+0x68e>
    3394:	83 37       	cpi	r24, 0x73	; 115
    3396:	e3 e2       	ldi	r30, 0x23	; 35
    3398:	9e 07       	cpc	r25, r30
    339a:	28 f4       	brcc	.+10     	; 0x33a6 <_Z19handleSerialBusMsgsv+0xa0>
    339c:	88 3f       	cpi	r24, 0xF8	; 248
    339e:	92 42       	sbci	r25, 0x22	; 34
    33a0:	09 f4       	brne	.+2      	; 0x33a4 <_Z19handleSerialBusMsgsv+0x9e>
    33a2:	38 c1       	rjmp	.+624    	; 0x3614 <_Z19handleSerialBusMsgsv+0x30e>
    33a4:	f9 c6       	rjmp	.+3570   	; 0x4198 <__DATA_REGION_LENGTH__+0x198>
    33a6:	84 33       	cpi	r24, 0x34	; 52
    33a8:	24 e2       	ldi	r18, 0x24	; 36
    33aa:	92 07       	cpc	r25, r18
    33ac:	09 f4       	brne	.+2      	; 0x33b0 <_Z19handleSerialBusMsgsv+0xaa>
    33ae:	29 c2       	rjmp	.+1106   	; 0x3802 <_Z19handleSerialBusMsgsv+0x4fc>
    33b0:	85 3c       	cpi	r24, 0xC5	; 197
    33b2:	94 42       	sbci	r25, 0x24	; 36
    33b4:	09 f4       	brne	.+2      	; 0x33b8 <_Z19handleSerialBusMsgsv+0xb2>
    33b6:	dc c6       	rjmp	.+3512   	; 0x4170 <__DATA_REGION_LENGTH__+0x170>
    33b8:	ef c6       	rjmp	.+3550   	; 0x4198 <__DATA_REGION_LENGTH__+0x198>
    33ba:	8e 81       	ldd	r24, Y+6	; 0x06
    33bc:	9f 81       	ldd	r25, Y+7	; 0x07
    33be:	fc 01       	movw	r30, r24
    33c0:	83 81       	ldd	r24, Z+3	; 0x03
    33c2:	88 2f       	mov	r24, r24
    33c4:	90 e0       	ldi	r25, 0x00	; 0
    33c6:	89 83       	std	Y+1, r24	; 0x01
    33c8:	9a 83       	std	Y+2, r25	; 0x02
    33ca:	89 81       	ldd	r24, Y+1	; 0x01
    33cc:	9a 81       	ldd	r25, Y+2	; 0x02
    33ce:	89 2b       	or	r24, r25
    33d0:	09 f4       	brne	.+2      	; 0x33d4 <_Z19handleSerialBusMsgsv+0xce>
    33d2:	d0 c0       	rjmp	.+416    	; 0x3574 <_Z19handleSerialBusMsgsv+0x26e>
    33d4:	89 81       	ldd	r24, Y+1	; 0x01
    33d6:	9a 81       	ldd	r25, Y+2	; 0x02
    33d8:	82 34       	cpi	r24, 0x42	; 66
    33da:	91 05       	cpc	r25, r1
    33dc:	19 f4       	brne	.+6      	; 0x33e4 <_Z19handleSerialBusMsgsv+0xde>
    33de:	19 82       	std	Y+1, r1	; 0x01
    33e0:	1a 82       	std	Y+2, r1	; 0x02
    33e2:	ac c0       	rjmp	.+344    	; 0x353c <_Z19handleSerialBusMsgsv+0x236>
    33e4:	89 81       	ldd	r24, Y+1	; 0x01
    33e6:	9a 81       	ldd	r25, Y+2	; 0x02
    33e8:	86 34       	cpi	r24, 0x46	; 70
    33ea:	91 05       	cpc	r25, r1
    33ec:	29 f4       	brne	.+10     	; 0x33f8 <_Z19handleSerialBusMsgsv+0xf2>
    33ee:	86 e0       	ldi	r24, 0x06	; 6
    33f0:	90 e0       	ldi	r25, 0x00	; 0
    33f2:	89 83       	std	Y+1, r24	; 0x01
    33f4:	9a 83       	std	Y+2, r25	; 0x02
    33f6:	a2 c0       	rjmp	.+324    	; 0x353c <_Z19handleSerialBusMsgsv+0x236>
    33f8:	89 81       	ldd	r24, Y+1	; 0x01
    33fa:	9a 81       	ldd	r25, Y+2	; 0x02
    33fc:	83 34       	cpi	r24, 0x43	; 67
    33fe:	91 05       	cpc	r25, r1
    3400:	b9 f5       	brne	.+110    	; 0x3470 <_Z19handleSerialBusMsgsv+0x16a>
    3402:	8e 81       	ldd	r24, Y+6	; 0x06
    3404:	9f 81       	ldd	r25, Y+7	; 0x07
    3406:	fc 01       	movw	r30, r24
    3408:	87 89       	ldd	r24, Z+23	; 0x17
    340a:	8b 83       	std	Y+3, r24	; 0x03
    340c:	8e 81       	ldd	r24, Y+6	; 0x06
    340e:	9f 81       	ldd	r25, Y+7	; 0x07
    3410:	fc 01       	movw	r30, r24
    3412:	10 8e       	std	Z+24, r1	; 0x18
    3414:	8b 81       	ldd	r24, Y+3	; 0x03
    3416:	82 34       	cpi	r24, 0x42	; 66
    3418:	11 f4       	brne	.+4      	; 0x341e <_Z19handleSerialBusMsgsv+0x118>
    341a:	80 e3       	ldi	r24, 0x30	; 48
    341c:	8b 83       	std	Y+3, r24	; 0x03
    341e:	8b 81       	ldd	r24, Y+3	; 0x03
    3420:	88 2f       	mov	r24, r24
    3422:	90 e0       	ldi	r25, 0x00	; 0
    3424:	c0 97       	sbiw	r24, 0x30	; 48
    3426:	0a 97       	sbiw	r24, 0x0a	; 10
    3428:	08 f0       	brcs	.+2      	; 0x342c <_Z19handleSerialBusMsgsv+0x126>
    342a:	88 c0       	rjmp	.+272    	; 0x353c <_Z19handleSerialBusMsgsv+0x236>
    342c:	8e 81       	ldd	r24, Y+6	; 0x06
    342e:	9f 81       	ldd	r25, Y+7	; 0x07
    3430:	47 96       	adiw	r24, 0x17	; 23
    3432:	0e 94 0b 7c 	call	0xf816	; 0xf816 <atoi>
    3436:	8a 87       	std	Y+10, r24	; 0x0a
    3438:	9b 87       	std	Y+11, r25	; 0x0b
    343a:	1c 86       	std	Y+12, r1	; 0x0c
    343c:	85 e0       	ldi	r24, 0x05	; 5
    343e:	8d 87       	std	Y+13, r24	; 0x0d
    3440:	8d 85       	ldd	r24, Y+13	; 0x0d
    3442:	28 2f       	mov	r18, r24
    3444:	30 e0       	ldi	r19, 0x00	; 0
    3446:	8a 85       	ldd	r24, Y+10	; 0x0a
    3448:	9b 85       	ldd	r25, Y+11	; 0x0b
    344a:	28 17       	cp	r18, r24
    344c:	39 07       	cpc	r19, r25
    344e:	24 f4       	brge	.+8      	; 0x3458 <_Z19handleSerialBusMsgsv+0x152>
    3450:	8d 85       	ldd	r24, Y+13	; 0x0d
    3452:	88 2f       	mov	r24, r24
    3454:	90 e0       	ldi	r25, 0x00	; 0
    3456:	09 c0       	rjmp	.+18     	; 0x346a <_Z19handleSerialBusMsgsv+0x164>
    3458:	8c 85       	ldd	r24, Y+12	; 0x0c
    345a:	88 2f       	mov	r24, r24
    345c:	90 e0       	ldi	r25, 0x00	; 0
    345e:	2a 85       	ldd	r18, Y+10	; 0x0a
    3460:	3b 85       	ldd	r19, Y+11	; 0x0b
    3462:	82 17       	cp	r24, r18
    3464:	93 07       	cpc	r25, r19
    3466:	0c f4       	brge	.+2      	; 0x346a <_Z19handleSerialBusMsgsv+0x164>
    3468:	c9 01       	movw	r24, r18
    346a:	89 83       	std	Y+1, r24	; 0x01
    346c:	9a 83       	std	Y+2, r25	; 0x02
    346e:	66 c0       	rjmp	.+204    	; 0x353c <_Z19handleSerialBusMsgsv+0x236>
    3470:	89 81       	ldd	r24, Y+1	; 0x01
    3472:	9a 81       	ldd	r25, Y+2	; 0x02
    3474:	83 35       	cpi	r24, 0x53	; 83
    3476:	91 05       	cpc	r25, r1
    3478:	09 f0       	breq	.+2      	; 0x347c <_Z19handleSerialBusMsgsv+0x176>
    347a:	59 c0       	rjmp	.+178    	; 0x352e <_Z19handleSerialBusMsgsv+0x228>
    347c:	1c 82       	std	Y+4, r1	; 0x04
    347e:	8e 81       	ldd	r24, Y+6	; 0x06
    3480:	9f 81       	ldd	r25, Y+7	; 0x07
    3482:	fc 01       	movw	r30, r24
    3484:	87 89       	ldd	r24, Z+23	; 0x17
    3486:	8e 87       	std	Y+14, r24	; 0x0e
    3488:	8e 81       	ldd	r24, Y+6	; 0x06
    348a:	9f 81       	ldd	r25, Y+7	; 0x07
    348c:	fc 01       	movw	r30, r24
    348e:	80 8d       	ldd	r24, Z+24	; 0x18
    3490:	8f 87       	std	Y+15, r24	; 0x0f
    3492:	8e 81       	ldd	r24, Y+6	; 0x06
    3494:	9f 81       	ldd	r25, Y+7	; 0x07
    3496:	fc 01       	movw	r30, r24
    3498:	11 8e       	std	Z+25, r1	; 0x19
    349a:	8e 85       	ldd	r24, Y+14	; 0x0e
    349c:	82 34       	cpi	r24, 0x42	; 66
    349e:	11 f4       	brne	.+4      	; 0x34a4 <_Z19handleSerialBusMsgsv+0x19e>
    34a0:	1c 82       	std	Y+4, r1	; 0x04
    34a2:	36 c0       	rjmp	.+108    	; 0x3510 <_Z19handleSerialBusMsgsv+0x20a>
    34a4:	8e 85       	ldd	r24, Y+14	; 0x0e
    34a6:	86 34       	cpi	r24, 0x46	; 70
    34a8:	51 f4       	brne	.+20     	; 0x34be <_Z19handleSerialBusMsgsv+0x1b8>
    34aa:	8f 85       	ldd	r24, Y+15	; 0x0f
    34ac:	81 33       	cpi	r24, 0x31	; 49
    34ae:	80 f1       	brcs	.+96     	; 0x3510 <_Z19handleSerialBusMsgsv+0x20a>
    34b0:	8f 85       	ldd	r24, Y+15	; 0x0f
    34b2:	86 33       	cpi	r24, 0x36	; 54
    34b4:	68 f5       	brcc	.+90     	; 0x3510 <_Z19handleSerialBusMsgsv+0x20a>
    34b6:	8f 85       	ldd	r24, Y+15	; 0x0f
    34b8:	84 52       	subi	r24, 0x24	; 36
    34ba:	8c 83       	std	Y+4, r24	; 0x04
    34bc:	29 c0       	rjmp	.+82     	; 0x3510 <_Z19handleSerialBusMsgsv+0x20a>
    34be:	8e 85       	ldd	r24, Y+14	; 0x0e
    34c0:	83 35       	cpi	r24, 0x53	; 83
    34c2:	69 f4       	brne	.+26     	; 0x34de <_Z19handleSerialBusMsgsv+0x1d8>
    34c4:	8f 85       	ldd	r24, Y+15	; 0x0f
    34c6:	81 33       	cpi	r24, 0x31	; 49
    34c8:	38 f0       	brcs	.+14     	; 0x34d8 <_Z19handleSerialBusMsgsv+0x1d2>
    34ca:	8f 85       	ldd	r24, Y+15	; 0x0f
    34cc:	86 33       	cpi	r24, 0x36	; 54
    34ce:	20 f4       	brcc	.+8      	; 0x34d8 <_Z19handleSerialBusMsgsv+0x1d2>
    34d0:	8f 85       	ldd	r24, Y+15	; 0x0f
    34d2:	89 52       	subi	r24, 0x29	; 41
    34d4:	8c 83       	std	Y+4, r24	; 0x04
    34d6:	1c c0       	rjmp	.+56     	; 0x3510 <_Z19handleSerialBusMsgsv+0x20a>
    34d8:	87 e0       	ldi	r24, 0x07	; 7
    34da:	8c 83       	std	Y+4, r24	; 0x04
    34dc:	19 c0       	rjmp	.+50     	; 0x3510 <_Z19handleSerialBusMsgsv+0x20a>
    34de:	8f 85       	ldd	r24, Y+15	; 0x0f
    34e0:	86 34       	cpi	r24, 0x46	; 70
    34e2:	51 f4       	brne	.+20     	; 0x34f8 <_Z19handleSerialBusMsgsv+0x1f2>
    34e4:	8e 85       	ldd	r24, Y+14	; 0x0e
    34e6:	81 33       	cpi	r24, 0x31	; 49
    34e8:	98 f0       	brcs	.+38     	; 0x3510 <_Z19handleSerialBusMsgsv+0x20a>
    34ea:	8e 85       	ldd	r24, Y+14	; 0x0e
    34ec:	86 33       	cpi	r24, 0x36	; 54
    34ee:	80 f4       	brcc	.+32     	; 0x3510 <_Z19handleSerialBusMsgsv+0x20a>
    34f0:	8e 85       	ldd	r24, Y+14	; 0x0e
    34f2:	84 52       	subi	r24, 0x24	; 36
    34f4:	8c 83       	std	Y+4, r24	; 0x04
    34f6:	0c c0       	rjmp	.+24     	; 0x3510 <_Z19handleSerialBusMsgsv+0x20a>
    34f8:	8f 85       	ldd	r24, Y+15	; 0x0f
    34fa:	83 35       	cpi	r24, 0x53	; 83
    34fc:	49 f4       	brne	.+18     	; 0x3510 <_Z19handleSerialBusMsgsv+0x20a>
    34fe:	8e 85       	ldd	r24, Y+14	; 0x0e
    3500:	81 33       	cpi	r24, 0x31	; 49
    3502:	30 f0       	brcs	.+12     	; 0x3510 <_Z19handleSerialBusMsgsv+0x20a>
    3504:	8e 85       	ldd	r24, Y+14	; 0x0e
    3506:	86 33       	cpi	r24, 0x36	; 54
    3508:	18 f4       	brcc	.+6      	; 0x3510 <_Z19handleSerialBusMsgsv+0x20a>
    350a:	8e 85       	ldd	r24, Y+14	; 0x0e
    350c:	89 52       	subi	r24, 0x29	; 41
    350e:	8c 83       	std	Y+4, r24	; 0x04
    3510:	8c 81       	ldd	r24, Y+4	; 0x04
    3512:	87 30       	cpi	r24, 0x07	; 7
    3514:	48 f0       	brcs	.+18     	; 0x3528 <_Z19handleSerialBusMsgsv+0x222>
    3516:	8c 81       	ldd	r24, Y+4	; 0x04
    3518:	82 31       	cpi	r24, 0x12	; 18
    351a:	30 f4       	brcc	.+12     	; 0x3528 <_Z19handleSerialBusMsgsv+0x222>
    351c:	8c 81       	ldd	r24, Y+4	; 0x04
    351e:	88 2f       	mov	r24, r24
    3520:	90 e0       	ldi	r25, 0x00	; 0
    3522:	89 83       	std	Y+1, r24	; 0x01
    3524:	9a 83       	std	Y+2, r25	; 0x02
    3526:	0a c0       	rjmp	.+20     	; 0x353c <_Z19handleSerialBusMsgsv+0x236>
    3528:	19 82       	std	Y+1, r1	; 0x01
    352a:	1a 82       	std	Y+2, r1	; 0x02
    352c:	07 c0       	rjmp	.+14     	; 0x353c <_Z19handleSerialBusMsgsv+0x236>
    352e:	8e 81       	ldd	r24, Y+6	; 0x06
    3530:	9f 81       	ldd	r25, Y+7	; 0x07
    3532:	03 96       	adiw	r24, 0x03	; 3
    3534:	0e 94 0b 7c 	call	0xf816	; 0xf816 <atoi>
    3538:	89 83       	std	Y+1, r24	; 0x01
    353a:	9a 83       	std	Y+2, r25	; 0x02
    353c:	89 81       	ldd	r24, Y+1	; 0x01
    353e:	9a 81       	ldd	r25, Y+2	; 0x02
    3540:	99 23       	and	r25, r25
    3542:	c4 f0       	brlt	.+48     	; 0x3574 <_Z19handleSerialBusMsgsv+0x26e>
    3544:	89 81       	ldd	r24, Y+1	; 0x01
    3546:	9a 81       	ldd	r25, Y+2	; 0x02
    3548:	42 97       	sbiw	r24, 0x12	; 18
    354a:	a4 f4       	brge	.+40     	; 0x3574 <_Z19handleSerialBusMsgsv+0x26e>
    354c:	89 81       	ldd	r24, Y+1	; 0x01
    354e:	8e a7       	std	Y+46, r24	; 0x2e
    3550:	ce 01       	movw	r24, r28
    3552:	8e 96       	adiw	r24, 0x2e	; 46
    3554:	ac 01       	movw	r20, r24
    3556:	6e e3       	ldi	r22, 0x3E	; 62
    3558:	8b ea       	ldi	r24, 0xAB	; 171
    355a:	97 e4       	ldi	r25, 0x47	; 71
    355c:	0e 94 52 46 	call	0x8ca4	; 0x8ca4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
    3560:	9e a5       	ldd	r25, Y+46	; 0x2e
    3562:	80 91 22 40 	lds	r24, 0x4022	; 0x804022 <g_fox>
    3566:	98 17       	cp	r25, r24
    3568:	29 f0       	breq	.+10     	; 0x3574 <_Z19handleSerialBusMsgsv+0x26e>
    356a:	ce 01       	movw	r24, r28
    356c:	8e 96       	adiw	r24, 0x2e	; 46
    356e:	60 e0       	ldi	r22, 0x00	; 0
    3570:	0e 94 70 2d 	call	0x5ae0	; 0x5ae0 <_Z11setupForFoxP5Fox_t13EventAction_t>
    3574:	80 91 22 40 	lds	r24, 0x4022	; 0x804022 <g_fox>
    3578:	68 2f       	mov	r22, r24
    357a:	89 e1       	ldi	r24, 0x19	; 25
    357c:	97 e4       	ldi	r25, 0x47	; 71
    357e:	0e 94 a4 76 	call	0xed48	; 0xed48 <_Z8fox2TextPc5Fox_t>
    3582:	98 2f       	mov	r25, r24
    3584:	81 e0       	ldi	r24, 0x01	; 1
    3586:	89 27       	eor	r24, r25
    3588:	88 23       	and	r24, r24
    358a:	11 f1       	breq	.+68     	; 0x35d0 <_Z19handleSerialBusMsgsv+0x2ca>
    358c:	ce 01       	movw	r24, r28
    358e:	8f 96       	adiw	r24, 0x2f	; 47
    3590:	69 e1       	ldi	r22, 0x19	; 25
    3592:	77 e4       	ldi	r23, 0x47	; 71
    3594:	0e 94 7e 7c 	call	0xf8fc	; 0xf8fc <strcpy>
    3598:	ce 01       	movw	r24, r28
    359a:	8f 96       	adiw	r24, 0x2f	; 47
    359c:	29 2f       	mov	r18, r25
    359e:	2f 93       	push	r18
    35a0:	8f 93       	push	r24
    35a2:	8e e6       	ldi	r24, 0x6E	; 110
    35a4:	90 e4       	ldi	r25, 0x40	; 64
    35a6:	89 2f       	mov	r24, r25
    35a8:	8f 93       	push	r24
    35aa:	8e e6       	ldi	r24, 0x6E	; 110
    35ac:	90 e4       	ldi	r25, 0x40	; 64
    35ae:	8f 93       	push	r24
    35b0:	89 e1       	ldi	r24, 0x19	; 25
    35b2:	97 e4       	ldi	r25, 0x47	; 71
    35b4:	89 2f       	mov	r24, r25
    35b6:	8f 93       	push	r24
    35b8:	89 e1       	ldi	r24, 0x19	; 25
    35ba:	97 e4       	ldi	r25, 0x47	; 71
    35bc:	8f 93       	push	r24
    35be:	0e 94 ba 7c 	call	0xf974	; 0xf974 <sprintf>
    35c2:	0f 90       	pop	r0
    35c4:	0f 90       	pop	r0
    35c6:	0f 90       	pop	r0
    35c8:	0f 90       	pop	r0
    35ca:	0f 90       	pop	r0
    35cc:	0f 90       	pop	r0
    35ce:	1d c0       	rjmp	.+58     	; 0x360a <_Z19handleSerialBusMsgsv+0x304>
    35d0:	80 91 22 40 	lds	r24, 0x4022	; 0x804022 <g_fox>
    35d4:	88 2f       	mov	r24, r24
    35d6:	90 e0       	ldi	r25, 0x00	; 0
    35d8:	29 2f       	mov	r18, r25
    35da:	2f 93       	push	r18
    35dc:	8f 93       	push	r24
    35de:	86 e7       	ldi	r24, 0x76	; 118
    35e0:	90 e4       	ldi	r25, 0x40	; 64
    35e2:	89 2f       	mov	r24, r25
    35e4:	8f 93       	push	r24
    35e6:	86 e7       	ldi	r24, 0x76	; 118
    35e8:	90 e4       	ldi	r25, 0x40	; 64
    35ea:	8f 93       	push	r24
    35ec:	89 e1       	ldi	r24, 0x19	; 25
    35ee:	97 e4       	ldi	r25, 0x47	; 71
    35f0:	89 2f       	mov	r24, r25
    35f2:	8f 93       	push	r24
    35f4:	89 e1       	ldi	r24, 0x19	; 25
    35f6:	97 e4       	ldi	r25, 0x47	; 71
    35f8:	8f 93       	push	r24
    35fa:	0e 94 ba 7c 	call	0xf974	; 0xf974 <sprintf>
    35fe:	0f 90       	pop	r0
    3600:	0f 90       	pop	r0
    3602:	0f 90       	pop	r0
    3604:	0f 90       	pop	r0
    3606:	0f 90       	pop	r0
    3608:	0f 90       	pop	r0
    360a:	89 e1       	ldi	r24, 0x19	; 25
    360c:	97 e4       	ldi	r25, 0x47	; 71
    360e:	0e 94 4e 63 	call	0xc69c	; 0xc69c <sb_send_string>
    3612:	cc c5       	rjmp	.+2968   	; 0x41ac <__DATA_REGION_LENGTH__+0x1ac>
    3614:	8e 81       	ldd	r24, Y+6	; 0x06
    3616:	9f 81       	ldd	r25, Y+7	; 0x07
    3618:	fc 01       	movw	r30, r24
    361a:	83 81       	ldd	r24, Z+3	; 0x03
    361c:	88 23       	and	r24, r24
    361e:	e9 f1       	breq	.+122    	; 0x369a <_Z19handleSerialBusMsgsv+0x394>
    3620:	8e 81       	ldd	r24, Y+6	; 0x06
    3622:	9f 81       	ldd	r25, Y+7	; 0x07
    3624:	03 96       	adiw	r24, 0x03	; 3
    3626:	0e 94 0b 7c 	call	0xf816	; 0xf816 <atoi>
    362a:	80 93 bd 47 	sts	0x47BD, r24	; 0x8047bd <_ZZ19handleSerialBusMsgsvE6pwr_mW>
    362e:	90 93 be 47 	sts	0x47BE, r25	; 0x8047be <_ZZ19handleSerialBusMsgsvE6pwr_mW+0x1>
    3632:	80 91 bd 47 	lds	r24, 0x47BD	; 0x8047bd <_ZZ19handleSerialBusMsgsvE6pwr_mW>
    3636:	90 91 be 47 	lds	r25, 0x47BE	; 0x8047be <_ZZ19handleSerialBusMsgsvE6pwr_mW+0x1>
    363a:	89 38       	cpi	r24, 0x89	; 137
    363c:	93 41       	sbci	r25, 0x13	; 19
    363e:	68 f4       	brcc	.+26     	; 0x365a <_Z19handleSerialBusMsgsv+0x354>
    3640:	60 e0       	ldi	r22, 0x00	; 0
    3642:	70 e0       	ldi	r23, 0x00	; 0
    3644:	8d eb       	ldi	r24, 0xBD	; 189
    3646:	97 e4       	ldi	r25, 0x47	; 71
    3648:	0e 94 38 70 	call	0xe070	; 0xe070 <_Z15txSetParametersPjPb>
    364c:	88 8b       	std	Y+16, r24	; 0x10
    364e:	88 89       	ldd	r24, Y+16	; 0x10
    3650:	88 23       	and	r24, r24
    3652:	19 f0       	breq	.+6      	; 0x365a <_Z19handleSerialBusMsgsv+0x354>
    3654:	88 89       	ldd	r24, Y+16	; 0x10
    3656:	80 93 4b 47 	sts	0x474B, r24	; 0x80474b <_ZL17g_last_error_code>
    365a:	0e 94 2d 70 	call	0xe05a	; 0xe05a <_Z12txGetPowerMwv>
    365e:	29 2f       	mov	r18, r25
    3660:	2f 93       	push	r18
    3662:	8f 93       	push	r24
    3664:	8e e7       	ldi	r24, 0x7E	; 126
    3666:	90 e4       	ldi	r25, 0x40	; 64
    3668:	89 2f       	mov	r24, r25
    366a:	8f 93       	push	r24
    366c:	8e e7       	ldi	r24, 0x7E	; 126
    366e:	90 e4       	ldi	r25, 0x40	; 64
    3670:	8f 93       	push	r24
    3672:	89 e1       	ldi	r24, 0x19	; 25
    3674:	97 e4       	ldi	r25, 0x47	; 71
    3676:	89 2f       	mov	r24, r25
    3678:	8f 93       	push	r24
    367a:	89 e1       	ldi	r24, 0x19	; 25
    367c:	97 e4       	ldi	r25, 0x47	; 71
    367e:	8f 93       	push	r24
    3680:	0e 94 ba 7c 	call	0xf974	; 0xf974 <sprintf>
    3684:	0f 90       	pop	r0
    3686:	0f 90       	pop	r0
    3688:	0f 90       	pop	r0
    368a:	0f 90       	pop	r0
    368c:	0f 90       	pop	r0
    368e:	0f 90       	pop	r0
    3690:	89 e1       	ldi	r24, 0x19	; 25
    3692:	97 e4       	ldi	r25, 0x47	; 71
    3694:	0e 94 4e 63 	call	0xc69c	; 0xc69c <sb_send_string>
    3698:	89 c5       	rjmp	.+2834   	; 0x41ac <__DATA_REGION_LENGTH__+0x1ac>
    369a:	0e 94 2d 70 	call	0xe05a	; 0xe05a <_Z12txGetPowerMwv>
    369e:	29 2f       	mov	r18, r25
    36a0:	2f 93       	push	r18
    36a2:	8f 93       	push	r24
    36a4:	8e e7       	ldi	r24, 0x7E	; 126
    36a6:	90 e4       	ldi	r25, 0x40	; 64
    36a8:	89 2f       	mov	r24, r25
    36aa:	8f 93       	push	r24
    36ac:	8e e7       	ldi	r24, 0x7E	; 126
    36ae:	90 e4       	ldi	r25, 0x40	; 64
    36b0:	8f 93       	push	r24
    36b2:	89 e1       	ldi	r24, 0x19	; 25
    36b4:	97 e4       	ldi	r25, 0x47	; 71
    36b6:	89 2f       	mov	r24, r25
    36b8:	8f 93       	push	r24
    36ba:	89 e1       	ldi	r24, 0x19	; 25
    36bc:	97 e4       	ldi	r25, 0x47	; 71
    36be:	8f 93       	push	r24
    36c0:	0e 94 ba 7c 	call	0xf974	; 0xf974 <sprintf>
    36c4:	0f 90       	pop	r0
    36c6:	0f 90       	pop	r0
    36c8:	0f 90       	pop	r0
    36ca:	0f 90       	pop	r0
    36cc:	0f 90       	pop	r0
    36ce:	0f 90       	pop	r0
    36d0:	89 e1       	ldi	r24, 0x19	; 25
    36d2:	97 e4       	ldi	r25, 0x47	; 71
    36d4:	0e 94 4e 63 	call	0xc69c	; 0xc69c <sb_send_string>
    36d8:	69 c5       	rjmp	.+2770   	; 0x41ac <__DATA_REGION_LENGTH__+0x1ac>
    36da:	19 8a       	std	Y+17, r1	; 0x11
    36dc:	1a 8a       	std	Y+18, r1	; 0x12
    36de:	1b 8a       	std	Y+19, r1	; 0x13
    36e0:	1c 8a       	std	Y+20, r1	; 0x14
    36e2:	8e 81       	ldd	r24, Y+6	; 0x06
    36e4:	9f 81       	ldd	r25, Y+7	; 0x07
    36e6:	fc 01       	movw	r30, r24
    36e8:	83 81       	ldd	r24, Z+3	; 0x03
    36ea:	88 23       	and	r24, r24
    36ec:	49 f1       	breq	.+82     	; 0x3740 <_Z19handleSerialBusMsgsv+0x43a>
    36ee:	8e 81       	ldd	r24, Y+6	; 0x06
    36f0:	9f 81       	ldd	r25, Y+7	; 0x07
    36f2:	03 96       	adiw	r24, 0x03	; 3
    36f4:	9e 01       	movw	r18, r28
    36f6:	28 5b       	subi	r18, 0xB8	; 184
    36f8:	3f 4f       	sbci	r19, 0xFF	; 255
    36fa:	b9 01       	movw	r22, r18
    36fc:	0e 94 df 74 	call	0xe9be	; 0xe9be <_Z12frequencyValPcPm>
    3700:	ce 01       	movw	r24, r28
    3702:	88 5b       	subi	r24, 0xB8	; 184
    3704:	9f 4f       	sbci	r25, 0xFF	; 255
    3706:	61 e0       	ldi	r22, 0x01	; 1
    3708:	0e 94 88 6f 	call	0xdf10	; 0xdf10 <_Z14txSetFrequencyPmb>
    370c:	98 2f       	mov	r25, r24
    370e:	81 e0       	ldi	r24, 0x01	; 1
    3710:	89 27       	eor	r24, r25
    3712:	88 23       	and	r24, r24
    3714:	89 f0       	breq	.+34     	; 0x3738 <_Z19handleSerialBusMsgsv+0x432>
    3716:	ce 01       	movw	r24, r28
    3718:	88 5b       	subi	r24, 0xB8	; 184
    371a:	9f 4f       	sbci	r25, 0xFF	; 255
    371c:	fc 01       	movw	r30, r24
    371e:	80 81       	ld	r24, Z
    3720:	91 81       	ldd	r25, Z+1	; 0x01
    3722:	a2 81       	ldd	r26, Z+2	; 0x02
    3724:	b3 81       	ldd	r27, Z+3	; 0x03
    3726:	89 8b       	std	Y+17, r24	; 0x11
    3728:	9a 8b       	std	Y+18, r25	; 0x12
    372a:	ab 8b       	std	Y+19, r26	; 0x13
    372c:	bc 8b       	std	Y+20, r27	; 0x14
    372e:	8b ea       	ldi	r24, 0xAB	; 171
    3730:	97 e4       	ldi	r25, 0x47	; 71
    3732:	0e 94 ba 47 	call	0x8f74	; 0x8f74 <_ZN13EepromManager13saveAllEEPROMEv>
    3736:	04 c0       	rjmp	.+8      	; 0x3740 <_Z19handleSerialBusMsgsv+0x43a>
    3738:	89 e8       	ldi	r24, 0x89	; 137
    373a:	90 e4       	ldi	r25, 0x40	; 64
    373c:	0e 94 4e 63 	call	0xc69c	; 0xc69c <sb_send_string>
    3740:	0e 94 da 6f 	call	0xdfb4	; 0xdfb4 <_Z14txGetFrequencyv>
    3744:	dc 01       	movw	r26, r24
    3746:	cb 01       	movw	r24, r22
    3748:	89 8b       	std	Y+17, r24	; 0x11
    374a:	9a 8b       	std	Y+18, r25	; 0x12
    374c:	ab 8b       	std	Y+19, r26	; 0x13
    374e:	bc 8b       	std	Y+20, r27	; 0x14
    3750:	89 89       	ldd	r24, Y+17	; 0x11
    3752:	9a 89       	ldd	r25, Y+18	; 0x12
    3754:	ab 89       	ldd	r26, Y+19	; 0x13
    3756:	bc 89       	ldd	r27, Y+20	; 0x14
    3758:	89 2b       	or	r24, r25
    375a:	8a 2b       	or	r24, r26
    375c:	8b 2b       	or	r24, r27
    375e:	09 f4       	brne	.+2      	; 0x3762 <_Z19handleSerialBusMsgsv+0x45c>
    3760:	20 c5       	rjmp	.+2624   	; 0x41a2 <__DATA_REGION_LENGTH__+0x1a2>
    3762:	89 89       	ldd	r24, Y+17	; 0x11
    3764:	9a 89       	ldd	r25, Y+18	; 0x12
    3766:	ab 89       	ldd	r26, Y+19	; 0x13
    3768:	bc 89       	ldd	r27, Y+20	; 0x14
    376a:	9e 01       	movw	r18, r28
    376c:	24 5b       	subi	r18, 0xB4	; 180
    376e:	3f 4f       	sbci	r19, 0xFF	; 255
    3770:	ac 01       	movw	r20, r24
    3772:	bd 01       	movw	r22, r26
    3774:	c9 01       	movw	r24, r18
    3776:	0e 94 63 74 	call	0xe8c6	; 0xe8c6 <_Z15frequencyStringPcm>
    377a:	98 2f       	mov	r25, r24
    377c:	81 e0       	ldi	r24, 0x01	; 1
    377e:	89 27       	eor	r24, r25
    3780:	88 23       	and	r24, r24
    3782:	e9 f0       	breq	.+58     	; 0x37be <_Z19handleSerialBusMsgsv+0x4b8>
    3784:	ce 01       	movw	r24, r28
    3786:	84 5b       	subi	r24, 0xB4	; 180
    3788:	9f 4f       	sbci	r25, 0xFF	; 255
    378a:	29 2f       	mov	r18, r25
    378c:	2f 93       	push	r18
    378e:	8f 93       	push	r24
    3790:	84 eb       	ldi	r24, 0xB4	; 180
    3792:	90 e4       	ldi	r25, 0x40	; 64
    3794:	89 2f       	mov	r24, r25
    3796:	8f 93       	push	r24
    3798:	84 eb       	ldi	r24, 0xB4	; 180
    379a:	90 e4       	ldi	r25, 0x40	; 64
    379c:	8f 93       	push	r24
    379e:	89 e1       	ldi	r24, 0x19	; 25
    37a0:	97 e4       	ldi	r25, 0x47	; 71
    37a2:	89 2f       	mov	r24, r25
    37a4:	8f 93       	push	r24
    37a6:	89 e1       	ldi	r24, 0x19	; 25
    37a8:	97 e4       	ldi	r25, 0x47	; 71
    37aa:	8f 93       	push	r24
    37ac:	0e 94 ba 7c 	call	0xf974	; 0xf974 <sprintf>
    37b0:	0f 90       	pop	r0
    37b2:	0f 90       	pop	r0
    37b4:	0f 90       	pop	r0
    37b6:	0f 90       	pop	r0
    37b8:	0f 90       	pop	r0
    37ba:	0f 90       	pop	r0
    37bc:	1d c0       	rjmp	.+58     	; 0x37f8 <_Z19handleSerialBusMsgsv+0x4f2>
    37be:	8c 89       	ldd	r24, Y+20	; 0x14
    37c0:	8f 93       	push	r24
    37c2:	8b 89       	ldd	r24, Y+19	; 0x13
    37c4:	8f 93       	push	r24
    37c6:	8a 89       	ldd	r24, Y+18	; 0x12
    37c8:	8f 93       	push	r24
    37ca:	89 89       	ldd	r24, Y+17	; 0x11
    37cc:	8f 93       	push	r24
    37ce:	8c eb       	ldi	r24, 0xBC	; 188
    37d0:	90 e4       	ldi	r25, 0x40	; 64
    37d2:	89 2f       	mov	r24, r25
    37d4:	8f 93       	push	r24
    37d6:	8c eb       	ldi	r24, 0xBC	; 188
    37d8:	90 e4       	ldi	r25, 0x40	; 64
    37da:	8f 93       	push	r24
    37dc:	89 e1       	ldi	r24, 0x19	; 25
    37de:	97 e4       	ldi	r25, 0x47	; 71
    37e0:	89 2f       	mov	r24, r25
    37e2:	8f 93       	push	r24
    37e4:	89 e1       	ldi	r24, 0x19	; 25
    37e6:	97 e4       	ldi	r25, 0x47	; 71
    37e8:	8f 93       	push	r24
    37ea:	0e 94 ba 7c 	call	0xf974	; 0xf974 <sprintf>
    37ee:	8d b7       	in	r24, 0x3d	; 61
    37f0:	9e b7       	in	r25, 0x3e	; 62
    37f2:	08 96       	adiw	r24, 0x08	; 8
    37f4:	cd bf       	out	0x3d, r28	; 61
    37f6:	de bf       	out	0x3e, r29	; 62
    37f8:	89 e1       	ldi	r24, 0x19	; 25
    37fa:	97 e4       	ldi	r25, 0x47	; 71
    37fc:	0e 94 4e 63 	call	0xc69c	; 0xc69c <sb_send_string>
    3800:	d0 c4       	rjmp	.+2464   	; 0x41a2 <__DATA_REGION_LENGTH__+0x1a2>
    3802:	8e 81       	ldd	r24, Y+6	; 0x06
    3804:	9f 81       	ldd	r25, Y+7	; 0x07
    3806:	fc 01       	movw	r30, r24
    3808:	83 81       	ldd	r24, Z+3	; 0x03
    380a:	88 23       	and	r24, r24
    380c:	81 f1       	breq	.+96     	; 0x386e <_Z19handleSerialBusMsgsv+0x568>
    380e:	8e 81       	ldd	r24, Y+6	; 0x06
    3810:	9f 81       	ldd	r25, Y+7	; 0x07
    3812:	fc 01       	movw	r30, r24
    3814:	83 81       	ldd	r24, Z+3	; 0x03
    3816:	80 33       	cpi	r24, 0x30	; 48
    3818:	21 f4       	brne	.+8      	; 0x3822 <_Z19handleSerialBusMsgsv+0x51c>
    381a:	82 e0       	ldi	r24, 0x02	; 2
    381c:	0e 94 af 2c 	call	0x595e	; 0x595e <_Z12stopEventNow19EventActionSource_t>
    3820:	c5 c4       	rjmp	.+2442   	; 0x41ac <__DATA_REGION_LENGTH__+0x1ac>
    3822:	8e 81       	ldd	r24, Y+6	; 0x06
    3824:	9f 81       	ldd	r25, Y+7	; 0x07
    3826:	fc 01       	movw	r30, r24
    3828:	83 81       	ldd	r24, Z+3	; 0x03
    382a:	81 33       	cpi	r24, 0x31	; 49
    382c:	21 f4       	brne	.+8      	; 0x3836 <_Z19handleSerialBusMsgsv+0x530>
    382e:	82 e0       	ldi	r24, 0x02	; 2
    3830:	0e 94 4d 2c 	call	0x589a	; 0x589a <_Z13startEventNow19EventActionSource_t>
    3834:	bb c4       	rjmp	.+2422   	; 0x41ac <__DATA_REGION_LENGTH__+0x1ac>
    3836:	8e 81       	ldd	r24, Y+6	; 0x06
    3838:	9f 81       	ldd	r25, Y+7	; 0x07
    383a:	fc 01       	movw	r30, r24
    383c:	83 81       	ldd	r24, Z+3	; 0x03
    383e:	82 33       	cpi	r24, 0x32	; 50
    3840:	29 f4       	brne	.+10     	; 0x384c <_Z19handleSerialBusMsgsv+0x546>
    3842:	10 92 94 47 	sts	0x4794, r1	; 0x804794 <g_event_enabled>
    3846:	0e 94 dd 2c 	call	0x59ba	; 0x59ba <_Z18startEventUsingRTCv>
    384a:	b0 c4       	rjmp	.+2400   	; 0x41ac <__DATA_REGION_LENGTH__+0x1ac>
    384c:	8e 81       	ldd	r24, Y+6	; 0x06
    384e:	9f 81       	ldd	r25, Y+7	; 0x07
    3850:	fc 01       	movw	r30, r24
    3852:	83 81       	ldd	r24, Z+3	; 0x03
    3854:	83 33       	cpi	r24, 0x33	; 51
    3856:	31 f4       	brne	.+12     	; 0x3864 <_Z19handleSerialBusMsgsv+0x55e>
    3858:	62 e0       	ldi	r22, 0x02	; 2
    385a:	80 e0       	ldi	r24, 0x00	; 0
    385c:	90 e0       	ldi	r25, 0x00	; 0
    385e:	0e 94 70 2d 	call	0x5ae0	; 0x5ae0 <_Z11setupForFoxP5Fox_t13EventAction_t>
    3862:	a4 c4       	rjmp	.+2376   	; 0x41ac <__DATA_REGION_LENGTH__+0x1ac>
    3864:	85 ec       	ldi	r24, 0xC5	; 197
    3866:	90 e4       	ldi	r25, 0x40	; 64
    3868:	0e 94 4e 63 	call	0xc69c	; 0xc69c <sb_send_string>
    386c:	9f c4       	rjmp	.+2366   	; 0x41ac <__DATA_REGION_LENGTH__+0x1ac>
    386e:	85 ec       	ldi	r24, 0xC5	; 197
    3870:	90 e4       	ldi	r25, 0x40	; 64
    3872:	0e 94 4e 63 	call	0xc69c	; 0xc69c <sb_send_string>
    3876:	9a c4       	rjmp	.+2356   	; 0x41ac <__DATA_REGION_LENGTH__+0x1ac>
    3878:	8e 81       	ldd	r24, Y+6	; 0x06
    387a:	9f 81       	ldd	r25, Y+7	; 0x07
    387c:	fc 01       	movw	r30, r24
    387e:	83 81       	ldd	r24, Z+3	; 0x03
    3880:	88 23       	and	r24, r24
    3882:	09 f4       	brne	.+2      	; 0x3886 <_Z19handleSerialBusMsgsv+0x580>
    3884:	41 c0       	rjmp	.+130    	; 0x3908 <_Z19handleSerialBusMsgsv+0x602>
    3886:	80 e2       	ldi	r24, 0x20	; 32
    3888:	90 e0       	ldi	r25, 0x00	; 0
    388a:	80 93 19 47 	sts	0x4719, r24	; 0x804719 <_ZL9g_tempStr>
    388e:	90 93 1a 47 	sts	0x471A, r25	; 0x80471a <_ZL9g_tempStr+0x1>
    3892:	8e 81       	ldd	r24, Y+6	; 0x06
    3894:	9f 81       	ldd	r25, Y+7	; 0x07
    3896:	03 96       	adiw	r24, 0x03	; 3
    3898:	bc 01       	movw	r22, r24
    389a:	89 e1       	ldi	r24, 0x19	; 25
    389c:	97 e4       	ldi	r25, 0x47	; 71
    389e:	0e 94 5f 7c 	call	0xf8be	; 0xf8be <strcat>
    38a2:	8e 81       	ldd	r24, Y+6	; 0x06
    38a4:	9f 81       	ldd	r25, Y+7	; 0x07
    38a6:	fc 01       	movw	r30, r24
    38a8:	87 89       	ldd	r24, Z+23	; 0x17
    38aa:	88 23       	and	r24, r24
    38ac:	d1 f0       	breq	.+52     	; 0x38e2 <_Z19handleSerialBusMsgsv+0x5dc>
    38ae:	89 e1       	ldi	r24, 0x19	; 25
    38b0:	97 e4       	ldi	r25, 0x47	; 71
    38b2:	9c 01       	movw	r18, r24
    38b4:	f9 01       	movw	r30, r18
    38b6:	01 90       	ld	r0, Z+
    38b8:	00 20       	and	r0, r0
    38ba:	e9 f7       	brne	.-6      	; 0x38b6 <_Z19handleSerialBusMsgsv+0x5b0>
    38bc:	cf 01       	movw	r24, r30
    38be:	01 97       	sbiw	r24, 0x01	; 1
    38c0:	82 1b       	sub	r24, r18
    38c2:	93 0b       	sbc	r25, r19
    38c4:	87 5e       	subi	r24, 0xE7	; 231
    38c6:	98 4b       	sbci	r25, 0xB8	; 184
    38c8:	20 e2       	ldi	r18, 0x20	; 32
    38ca:	30 e0       	ldi	r19, 0x00	; 0
    38cc:	fc 01       	movw	r30, r24
    38ce:	20 83       	st	Z, r18
    38d0:	31 83       	std	Z+1, r19	; 0x01
    38d2:	8e 81       	ldd	r24, Y+6	; 0x06
    38d4:	9f 81       	ldd	r25, Y+7	; 0x07
    38d6:	47 96       	adiw	r24, 0x17	; 23
    38d8:	bc 01       	movw	r22, r24
    38da:	89 e1       	ldi	r24, 0x19	; 25
    38dc:	97 e4       	ldi	r25, 0x47	; 71
    38de:	0e 94 5f 7c 	call	0xf8be	; 0xf8be <strcat>
    38e2:	89 e1       	ldi	r24, 0x19	; 25
    38e4:	97 e4       	ldi	r25, 0x47	; 71
    38e6:	0e 94 85 7c 	call	0xf90a	; 0xf90a <strlen>
    38ea:	45 97       	sbiw	r24, 0x15	; 21
    38ec:	68 f4       	brcc	.+26     	; 0x3908 <_Z19handleSerialBusMsgsv+0x602>
    38ee:	69 e1       	ldi	r22, 0x19	; 25
    38f0:	77 e4       	ldi	r23, 0x47	; 71
    38f2:	83 e7       	ldi	r24, 0x73	; 115
    38f4:	97 e4       	ldi	r25, 0x47	; 71
    38f6:	0e 94 7e 7c 	call	0xf8fc	; 0xf8fc <strcpy>
    38fa:	49 e1       	ldi	r20, 0x19	; 25
    38fc:	57 e4       	ldi	r21, 0x47	; 71
    38fe:	6a e0       	ldi	r22, 0x0A	; 10
    3900:	8b ea       	ldi	r24, 0xAB	; 171
    3902:	97 e4       	ldi	r25, 0x47	; 71
    3904:	0e 94 52 46 	call	0x8ca4	; 0x8ca4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
    3908:	80 91 73 47 	lds	r24, 0x4773	; 0x804773 <g_messages_text+0x15>
    390c:	88 23       	and	r24, r24
    390e:	01 f1       	breq	.+64     	; 0x3950 <_Z19handleSerialBusMsgsv+0x64a>
    3910:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    3914:	88 2f       	mov	r24, r24
    3916:	90 e0       	ldi	r25, 0x00	; 0
    3918:	bc 01       	movw	r22, r24
    391a:	83 e7       	ldi	r24, 0x73	; 115
    391c:	97 e4       	ldi	r25, 0x47	; 71
    391e:	0e 94 9c 5c 	call	0xb938	; 0xb938 <_Z26timeRequiredToSendStrAtWPMPcj>
    3922:	88 5a       	subi	r24, 0xA8	; 168
    3924:	9d 4f       	sbci	r25, 0xFD	; 253
    3926:	96 95       	lsr	r25
    3928:	87 95       	ror	r24
    392a:	96 95       	lsr	r25
    392c:	87 95       	ror	r24
    392e:	96 95       	lsr	r25
    3930:	87 95       	ror	r24
    3932:	9c 01       	movw	r18, r24
    3934:	a5 ec       	ldi	r26, 0xC5	; 197
    3936:	b0 e2       	ldi	r27, 0x20	; 32
    3938:	0e 94 ac 7a 	call	0xf558	; 0xf558 <__umulhisi3>
    393c:	92 95       	swap	r25
    393e:	82 95       	swap	r24
    3940:	8f 70       	andi	r24, 0x0F	; 15
    3942:	89 27       	eor	r24, r25
    3944:	9f 70       	andi	r25, 0x0F	; 15
    3946:	89 27       	eor	r24, r25
    3948:	80 93 88 47 	sts	0x4788, r24	; 0x804788 <g_time_needed_for_ID>
    394c:	90 93 89 47 	sts	0x4789, r25	; 0x804789 <g_time_needed_for_ID+0x1>
    3950:	83 e7       	ldi	r24, 0x73	; 115
    3952:	97 e4       	ldi	r25, 0x47	; 71
    3954:	89 2f       	mov	r24, r25
    3956:	8f 93       	push	r24
    3958:	83 e7       	ldi	r24, 0x73	; 115
    395a:	97 e4       	ldi	r25, 0x47	; 71
    395c:	8f 93       	push	r24
    395e:	8a ec       	ldi	r24, 0xCA	; 202
    3960:	90 e4       	ldi	r25, 0x40	; 64
    3962:	89 2f       	mov	r24, r25
    3964:	8f 93       	push	r24
    3966:	8a ec       	ldi	r24, 0xCA	; 202
    3968:	90 e4       	ldi	r25, 0x40	; 64
    396a:	8f 93       	push	r24
    396c:	89 e1       	ldi	r24, 0x19	; 25
    396e:	97 e4       	ldi	r25, 0x47	; 71
    3970:	89 2f       	mov	r24, r25
    3972:	8f 93       	push	r24
    3974:	89 e1       	ldi	r24, 0x19	; 25
    3976:	97 e4       	ldi	r25, 0x47	; 71
    3978:	8f 93       	push	r24
    397a:	0e 94 ba 7c 	call	0xf974	; 0xf974 <sprintf>
    397e:	0f 90       	pop	r0
    3980:	0f 90       	pop	r0
    3982:	0f 90       	pop	r0
    3984:	0f 90       	pop	r0
    3986:	0f 90       	pop	r0
    3988:	0f 90       	pop	r0
    398a:	89 e1       	ldi	r24, 0x19	; 25
    398c:	97 e4       	ldi	r25, 0x47	; 71
    398e:	0e 94 4e 63 	call	0xc69c	; 0xc69c <sb_send_string>
    3992:	0c c4       	rjmp	.+2072   	; 0x41ac <__DATA_REGION_LENGTH__+0x1ac>
    3994:	8e 81       	ldd	r24, Y+6	; 0x06
    3996:	9f 81       	ldd	r25, Y+7	; 0x07
    3998:	fc 01       	movw	r30, r24
    399a:	83 81       	ldd	r24, Z+3	; 0x03
    399c:	83 35       	cpi	r24, 0x53	; 83
    399e:	09 f0       	breq	.+2      	; 0x39a2 <_Z19handleSerialBusMsgsv+0x69c>
    39a0:	6f c0       	rjmp	.+222    	; 0x3a80 <_Z19handleSerialBusMsgsv+0x77a>
    39a2:	8e 81       	ldd	r24, Y+6	; 0x06
    39a4:	9f 81       	ldd	r25, Y+7	; 0x07
    39a6:	fc 01       	movw	r30, r24
    39a8:	87 89       	ldd	r24, Z+23	; 0x17
    39aa:	8d 8b       	std	Y+21, r24	; 0x15
    39ac:	8d 89       	ldd	r24, Y+21	; 0x15
    39ae:	88 23       	and	r24, r24
    39b0:	09 f4       	brne	.+2      	; 0x39b4 <_Z19handleSerialBusMsgsv+0x6ae>
    39b2:	48 c0       	rjmp	.+144    	; 0x3a44 <_Z19handleSerialBusMsgsv+0x73e>
    39b4:	8e 81       	ldd	r24, Y+6	; 0x06
    39b6:	9f 81       	ldd	r25, Y+7	; 0x07
    39b8:	47 96       	adiw	r24, 0x17	; 23
    39ba:	0e 94 29 7c 	call	0xf852	; 0xf852 <atol>
    39be:	dc 01       	movw	r26, r24
    39c0:	cb 01       	movw	r24, r22
    39c2:	8e 8b       	std	Y+22, r24	; 0x16
    39c4:	8e 89       	ldd	r24, Y+22	; 0x16
    39c6:	8f 8b       	std	Y+23, r24	; 0x17
    39c8:	85 e0       	ldi	r24, 0x05	; 5
    39ca:	88 8f       	std	Y+24, r24	; 0x18
    39cc:	84 e1       	ldi	r24, 0x14	; 20
    39ce:	89 8f       	std	Y+25, r24	; 0x19
    39d0:	9f 89       	ldd	r25, Y+23	; 0x17
    39d2:	89 8d       	ldd	r24, Y+25	; 0x19
    39d4:	89 17       	cp	r24, r25
    39d6:	40 f0       	brcs	.+16     	; 0x39e8 <_Z19handleSerialBusMsgsv+0x6e2>
    39d8:	9f 89       	ldd	r25, Y+23	; 0x17
    39da:	88 8d       	ldd	r24, Y+24	; 0x18
    39dc:	98 17       	cp	r25, r24
    39de:	10 f4       	brcc	.+4      	; 0x39e4 <_Z19handleSerialBusMsgsv+0x6de>
    39e0:	88 8d       	ldd	r24, Y+24	; 0x18
    39e2:	03 c0       	rjmp	.+6      	; 0x39ea <_Z19handleSerialBusMsgsv+0x6e4>
    39e4:	8f 89       	ldd	r24, Y+23	; 0x17
    39e6:	01 c0       	rjmp	.+2      	; 0x39ea <_Z19handleSerialBusMsgsv+0x6e4>
    39e8:	89 8d       	ldd	r24, Y+25	; 0x19
    39ea:	80 93 0b 40 	sts	0x400B, r24	; 0x80400b <g_id_codespeed>
    39ee:	4b e0       	ldi	r20, 0x0B	; 11
    39f0:	50 e4       	ldi	r21, 0x40	; 64
    39f2:	6d e3       	ldi	r22, 0x3D	; 61
    39f4:	8b ea       	ldi	r24, 0xAB	; 171
    39f6:	97 e4       	ldi	r25, 0x47	; 71
    39f8:	0e 94 52 46 	call	0x8ca4	; 0x8ca4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
    39fc:	80 91 73 47 	lds	r24, 0x4773	; 0x804773 <g_messages_text+0x15>
    3a00:	88 23       	and	r24, r24
    3a02:	01 f1       	breq	.+64     	; 0x3a44 <_Z19handleSerialBusMsgsv+0x73e>
    3a04:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    3a08:	88 2f       	mov	r24, r24
    3a0a:	90 e0       	ldi	r25, 0x00	; 0
    3a0c:	bc 01       	movw	r22, r24
    3a0e:	83 e7       	ldi	r24, 0x73	; 115
    3a10:	97 e4       	ldi	r25, 0x47	; 71
    3a12:	0e 94 9c 5c 	call	0xb938	; 0xb938 <_Z26timeRequiredToSendStrAtWPMPcj>
    3a16:	88 5a       	subi	r24, 0xA8	; 168
    3a18:	9d 4f       	sbci	r25, 0xFD	; 253
    3a1a:	96 95       	lsr	r25
    3a1c:	87 95       	ror	r24
    3a1e:	96 95       	lsr	r25
    3a20:	87 95       	ror	r24
    3a22:	96 95       	lsr	r25
    3a24:	87 95       	ror	r24
    3a26:	9c 01       	movw	r18, r24
    3a28:	a5 ec       	ldi	r26, 0xC5	; 197
    3a2a:	b0 e2       	ldi	r27, 0x20	; 32
    3a2c:	0e 94 ac 7a 	call	0xf558	; 0xf558 <__umulhisi3>
    3a30:	92 95       	swap	r25
    3a32:	82 95       	swap	r24
    3a34:	8f 70       	andi	r24, 0x0F	; 15
    3a36:	89 27       	eor	r24, r25
    3a38:	9f 70       	andi	r25, 0x0F	; 15
    3a3a:	89 27       	eor	r24, r25
    3a3c:	80 93 88 47 	sts	0x4788, r24	; 0x804788 <g_time_needed_for_ID>
    3a40:	90 93 89 47 	sts	0x4789, r25	; 0x804789 <g_time_needed_for_ID+0x1>
    3a44:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    3a48:	88 2f       	mov	r24, r24
    3a4a:	90 e0       	ldi	r25, 0x00	; 0
    3a4c:	29 2f       	mov	r18, r25
    3a4e:	2f 93       	push	r18
    3a50:	8f 93       	push	r24
    3a52:	81 ed       	ldi	r24, 0xD1	; 209
    3a54:	90 e4       	ldi	r25, 0x40	; 64
    3a56:	89 2f       	mov	r24, r25
    3a58:	8f 93       	push	r24
    3a5a:	81 ed       	ldi	r24, 0xD1	; 209
    3a5c:	90 e4       	ldi	r25, 0x40	; 64
    3a5e:	8f 93       	push	r24
    3a60:	89 e1       	ldi	r24, 0x19	; 25
    3a62:	97 e4       	ldi	r25, 0x47	; 71
    3a64:	89 2f       	mov	r24, r25
    3a66:	8f 93       	push	r24
    3a68:	89 e1       	ldi	r24, 0x19	; 25
    3a6a:	97 e4       	ldi	r25, 0x47	; 71
    3a6c:	8f 93       	push	r24
    3a6e:	0e 94 ba 7c 	call	0xf974	; 0xf974 <sprintf>
    3a72:	0f 90       	pop	r0
    3a74:	0f 90       	pop	r0
    3a76:	0f 90       	pop	r0
    3a78:	0f 90       	pop	r0
    3a7a:	0f 90       	pop	r0
    3a7c:	0f 90       	pop	r0
    3a7e:	09 c0       	rjmp	.+18     	; 0x3a92 <_Z19handleSerialBusMsgsv+0x78c>
    3a80:	85 e0       	ldi	r24, 0x05	; 5
    3a82:	e5 ec       	ldi	r30, 0xC5	; 197
    3a84:	f0 e4       	ldi	r31, 0x40	; 64
    3a86:	a9 e1       	ldi	r26, 0x19	; 25
    3a88:	b7 e4       	ldi	r27, 0x47	; 71
    3a8a:	01 90       	ld	r0, Z+
    3a8c:	0d 92       	st	X+, r0
    3a8e:	8a 95       	dec	r24
    3a90:	e1 f7       	brne	.-8      	; 0x3a8a <_Z19handleSerialBusMsgsv+0x784>
    3a92:	89 e1       	ldi	r24, 0x19	; 25
    3a94:	97 e4       	ldi	r25, 0x47	; 71
    3a96:	0e 94 4e 63 	call	0xc69c	; 0xc69c <sb_send_string>
    3a9a:	88 c3       	rjmp	.+1808   	; 0x41ac <__DATA_REGION_LENGTH__+0x1ac>
    3a9c:	8e 81       	ldd	r24, Y+6	; 0x06
    3a9e:	9f 81       	ldd	r25, Y+7	; 0x07
    3aa0:	fc 01       	movw	r30, r24
    3aa2:	83 81       	ldd	r24, Z+3	; 0x03
    3aa4:	88 23       	and	r24, r24
    3aa6:	51 f1       	breq	.+84     	; 0x3afc <_Z19handleSerialBusMsgsv+0x7f6>
    3aa8:	8e 81       	ldd	r24, Y+6	; 0x06
    3aaa:	9f 81       	ldd	r25, Y+7	; 0x07
    3aac:	03 96       	adiw	r24, 0x03	; 3
    3aae:	48 e0       	ldi	r20, 0x08	; 8
    3ab0:	50 e0       	ldi	r21, 0x00	; 0
    3ab2:	bc 01       	movw	r22, r24
    3ab4:	89 e1       	ldi	r24, 0x19	; 25
    3ab6:	97 e4       	ldi	r25, 0x47	; 71
    3ab8:	0e 94 8e 7c 	call	0xf91c	; 0xf91c <strncpy>
    3abc:	10 92 21 47 	sts	0x4721, r1	; 0x804721 <_ZL9g_tempStr+0x8>
    3ac0:	89 e1       	ldi	r24, 0x19	; 25
    3ac2:	97 e4       	ldi	r25, 0x47	; 71
    3ac4:	0e 94 3c 74 	call	0xe878	; 0xe878 <_Z11only_digitsPc>
    3ac8:	88 23       	and	r24, r24
    3aca:	41 f0       	breq	.+16     	; 0x3adc <_Z19handleSerialBusMsgsv+0x7d6>
    3acc:	89 e1       	ldi	r24, 0x19	; 25
    3ace:	97 e4       	ldi	r25, 0x47	; 71
    3ad0:	0e 94 85 7c 	call	0xf90a	; 0xf90a <strlen>
    3ad4:	04 97       	sbiw	r24, 0x04	; 4
    3ad6:	10 f0       	brcs	.+4      	; 0x3adc <_Z19handleSerialBusMsgsv+0x7d6>
    3ad8:	81 e0       	ldi	r24, 0x01	; 1
    3ada:	01 c0       	rjmp	.+2      	; 0x3ade <_Z19handleSerialBusMsgsv+0x7d8>
    3adc:	80 e0       	ldi	r24, 0x00	; 0
    3ade:	88 23       	and	r24, r24
    3ae0:	69 f0       	breq	.+26     	; 0x3afc <_Z19handleSerialBusMsgsv+0x7f6>
    3ae2:	69 e1       	ldi	r22, 0x19	; 25
    3ae4:	77 e4       	ldi	r23, 0x47	; 71
    3ae6:	8d ea       	ldi	r24, 0xAD	; 173
    3ae8:	97 e4       	ldi	r25, 0x47	; 71
    3aea:	0e 94 7e 7c 	call	0xf8fc	; 0xf8fc <strcpy>
    3aee:	4d ea       	ldi	r20, 0xAD	; 173
    3af0:	57 e4       	ldi	r21, 0x47	; 71
    3af2:	64 e3       	ldi	r22, 0x34	; 52
    3af4:	8b ea       	ldi	r24, 0xAB	; 171
    3af6:	97 e4       	ldi	r25, 0x47	; 71
    3af8:	0e 94 52 46 	call	0x8ca4	; 0x8ca4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
    3afc:	8d ea       	ldi	r24, 0xAD	; 173
    3afe:	97 e4       	ldi	r25, 0x47	; 71
    3b00:	89 2f       	mov	r24, r25
    3b02:	8f 93       	push	r24
    3b04:	8d ea       	ldi	r24, 0xAD	; 173
    3b06:	97 e4       	ldi	r25, 0x47	; 71
    3b08:	8f 93       	push	r24
    3b0a:	83 ee       	ldi	r24, 0xE3	; 227
    3b0c:	90 e4       	ldi	r25, 0x40	; 64
    3b0e:	89 2f       	mov	r24, r25
    3b10:	8f 93       	push	r24
    3b12:	83 ee       	ldi	r24, 0xE3	; 227
    3b14:	90 e4       	ldi	r25, 0x40	; 64
    3b16:	8f 93       	push	r24
    3b18:	89 e1       	ldi	r24, 0x19	; 25
    3b1a:	97 e4       	ldi	r25, 0x47	; 71
    3b1c:	89 2f       	mov	r24, r25
    3b1e:	8f 93       	push	r24
    3b20:	89 e1       	ldi	r24, 0x19	; 25
    3b22:	97 e4       	ldi	r25, 0x47	; 71
    3b24:	8f 93       	push	r24
    3b26:	0e 94 ba 7c 	call	0xf974	; 0xf974 <sprintf>
    3b2a:	0f 90       	pop	r0
    3b2c:	0f 90       	pop	r0
    3b2e:	0f 90       	pop	r0
    3b30:	0f 90       	pop	r0
    3b32:	0f 90       	pop	r0
    3b34:	0f 90       	pop	r0
    3b36:	89 e1       	ldi	r24, 0x19	; 25
    3b38:	97 e4       	ldi	r25, 0x47	; 71
    3b3a:	0e 94 4e 63 	call	0xc69c	; 0xc69c <sb_send_string>
    3b3e:	36 c3       	rjmp	.+1644   	; 0x41ac <__DATA_REGION_LENGTH__+0x1ac>
    3b40:	1d 82       	std	Y+5, r1	; 0x05
    3b42:	80 e0       	ldi	r24, 0x00	; 0
    3b44:	90 e0       	ldi	r25, 0x00	; 0
    3b46:	0e 94 56 06 	call	0xcac	; 0xcac <time>
    3b4a:	dc 01       	movw	r26, r24
    3b4c:	cb 01       	movw	r24, r22
    3b4e:	8a 8f       	std	Y+26, r24	; 0x1a
    3b50:	9b 8f       	std	Y+27, r25	; 0x1b
    3b52:	ac 8f       	std	Y+28, r26	; 0x1c
    3b54:	bd 8f       	std	Y+29, r27	; 0x1d
    3b56:	8e 81       	ldd	r24, Y+6	; 0x06
    3b58:	9f 81       	ldd	r25, Y+7	; 0x07
    3b5a:	fc 01       	movw	r30, r24
    3b5c:	83 81       	ldd	r24, Z+3	; 0x03
    3b5e:	88 23       	and	r24, r24
    3b60:	39 f0       	breq	.+14     	; 0x3b70 <_Z19handleSerialBusMsgsv+0x86a>
    3b62:	8e 81       	ldd	r24, Y+6	; 0x06
    3b64:	9f 81       	ldd	r25, Y+7	; 0x07
    3b66:	fc 01       	movw	r30, r24
    3b68:	83 81       	ldd	r24, Z+3	; 0x03
    3b6a:	84 35       	cpi	r24, 0x54	; 84
    3b6c:	09 f0       	breq	.+2      	; 0x3b70 <_Z19handleSerialBusMsgsv+0x86a>
    3b6e:	8e c1       	rjmp	.+796    	; 0x3e8c <_Z19handleSerialBusMsgsv+0xb86>
    3b70:	8e 81       	ldd	r24, Y+6	; 0x06
    3b72:	9f 81       	ldd	r25, Y+7	; 0x07
    3b74:	fc 01       	movw	r30, r24
    3b76:	87 89       	ldd	r24, Z+23	; 0x17
    3b78:	88 23       	and	r24, r24
    3b7a:	09 f4       	brne	.+2      	; 0x3b7e <_Z19handleSerialBusMsgsv+0x878>
    3b7c:	83 c0       	rjmp	.+262    	; 0x3c84 <_Z19handleSerialBusMsgsv+0x97e>
    3b7e:	8e 81       	ldd	r24, Y+6	; 0x06
    3b80:	9f 81       	ldd	r25, Y+7	; 0x07
    3b82:	47 96       	adiw	r24, 0x17	; 23
    3b84:	4c e0       	ldi	r20, 0x0C	; 12
    3b86:	50 e0       	ldi	r21, 0x00	; 0
    3b88:	bc 01       	movw	r22, r24
    3b8a:	89 e1       	ldi	r24, 0x19	; 25
    3b8c:	97 e4       	ldi	r25, 0x47	; 71
    3b8e:	0e 94 8e 7c 	call	0xf91c	; 0xf91c <strncpy>
    3b92:	10 92 25 47 	sts	0x4725, r1	; 0x804725 <_ZL9g_tempStr+0xc>
    3b96:	80 e0       	ldi	r24, 0x00	; 0
    3b98:	90 e0       	ldi	r25, 0x00	; 0
    3b9a:	0e 94 56 06 	call	0xcac	; 0xcac <time>
    3b9e:	dc 01       	movw	r26, r24
    3ba0:	cb 01       	movw	r24, r22
    3ba2:	9e 01       	movw	r18, r28
    3ba4:	20 5a       	subi	r18, 0xA0	; 160
    3ba6:	3f 4f       	sbci	r19, 0xFF	; 255
    3ba8:	f9 01       	movw	r30, r18
    3baa:	80 83       	st	Z, r24
    3bac:	91 83       	std	Z+1, r25	; 0x01
    3bae:	a2 83       	std	Z+2, r26	; 0x02
    3bb0:	b3 83       	std	Z+3, r27	; 0x03
    3bb2:	80 91 ac 47 	lds	r24, 0x47AC	; 0x8047ac <g_utc_offset>
    3bb6:	81 95       	neg	r24
    3bb8:	28 2f       	mov	r18, r24
    3bba:	ce 01       	movw	r24, r28
    3bbc:	80 5a       	subi	r24, 0xA0	; 160
    3bbe:	9f 4f       	sbci	r25, 0xFF	; 255
    3bc0:	42 2f       	mov	r20, r18
    3bc2:	bc 01       	movw	r22, r24
    3bc4:	89 e1       	ldi	r24, 0x19	; 25
    3bc6:	97 e4       	ldi	r25, 0x47	; 71
    3bc8:	0e 94 53 30 	call	0x60a6	; 0x60a6 <_Z18validateTimeStringPcPma>
    3bcc:	dc 01       	movw	r26, r24
    3bce:	cb 01       	movw	r24, r22
    3bd0:	8e a3       	std	Y+38, r24	; 0x26
    3bd2:	9f a3       	std	Y+39, r25	; 0x27
    3bd4:	a8 a7       	std	Y+40, r26	; 0x28
    3bd6:	b9 a7       	std	Y+41, r27	; 0x29
    3bd8:	8e a1       	ldd	r24, Y+38	; 0x26
    3bda:	9f a1       	ldd	r25, Y+39	; 0x27
    3bdc:	a8 a5       	ldd	r26, Y+40	; 0x28
    3bde:	b9 a5       	ldd	r27, Y+41	; 0x29
    3be0:	89 2b       	or	r24, r25
    3be2:	8a 2b       	or	r24, r26
    3be4:	8b 2b       	or	r24, r27
    3be6:	09 f4       	brne	.+2      	; 0x3bea <_Z19handleSerialBusMsgsv+0x8e4>
    3be8:	4e c1       	rjmp	.+668    	; 0x3e86 <_Z19handleSerialBusMsgsv+0xb80>
    3bea:	60 e0       	ldi	r22, 0x00	; 0
    3bec:	89 e1       	ldi	r24, 0x19	; 25
    3bee:	97 e4       	ldi	r25, 0x47	; 71
    3bf0:	0e 94 2d 42 	call	0x845a	; 0x845a <ds3231_set_date_time_arducon>
    3bf4:	8a a7       	std	Y+42, r24	; 0x2a
    3bf6:	8a a5       	ldd	r24, Y+42	; 0x2a
    3bf8:	88 23       	and	r24, r24
    3bfa:	51 f0       	breq	.+20     	; 0x3c10 <_Z19handleSerialBusMsgsv+0x90a>
    3bfc:	88 e2       	ldi	r24, 0x28	; 40
    3bfe:	eb ee       	ldi	r30, 0xEB	; 235
    3c00:	f0 e4       	ldi	r31, 0x40	; 64
    3c02:	a9 e1       	ldi	r26, 0x19	; 25
    3c04:	b7 e4       	ldi	r27, 0x47	; 71
    3c06:	01 90       	ld	r0, Z+
    3c08:	0d 92       	st	X+, r0
    3c0a:	8a 95       	dec	r24
    3c0c:	e1 f7       	brne	.-8      	; 0x3c06 <_Z19handleSerialBusMsgsv+0x900>
    3c0e:	3b c1       	rjmp	.+630    	; 0x3e86 <_Z19handleSerialBusMsgsv+0xb80>
    3c10:	80 e0       	ldi	r24, 0x00	; 0
    3c12:	90 e0       	ldi	r25, 0x00	; 0
    3c14:	0e 94 53 40 	call	0x80a6	; 0x80a6 <ds3231_get_epoch>
    3c18:	dc 01       	movw	r26, r24
    3c1a:	cb 01       	movw	r24, r22
    3c1c:	bc 01       	movw	r22, r24
    3c1e:	cd 01       	movw	r24, r26
    3c20:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <set_system_time>
    3c24:	ce 01       	movw	r24, r28
    3c26:	80 5a       	subi	r24, 0xA0	; 160
    3c28:	9f 4f       	sbci	r25, 0xFF	; 255
    3c2a:	fc 01       	movw	r30, r24
    3c2c:	80 81       	ld	r24, Z
    3c2e:	91 81       	ldd	r25, Z+1	; 0x01
    3c30:	a2 81       	ldd	r26, Z+2	; 0x02
    3c32:	b3 81       	ldd	r27, Z+3	; 0x03
    3c34:	ae 01       	movw	r20, r28
    3c36:	43 59       	subi	r20, 0x93	; 147
    3c38:	5f 4f       	sbci	r21, 0xFF	; 255
    3c3a:	22 e3       	ldi	r18, 0x32	; 50
    3c3c:	30 e0       	ldi	r19, 0x00	; 0
    3c3e:	bc 01       	movw	r22, r24
    3c40:	cd 01       	movw	r24, r26
    3c42:	0e 94 61 45 	call	0x8ac2	; 0x8ac2 <convertEpochToTimeString>
    3c46:	29 2f       	mov	r18, r25
    3c48:	2f 93       	push	r18
    3c4a:	8f 93       	push	r24
    3c4c:	83 e1       	ldi	r24, 0x13	; 19
    3c4e:	91 e4       	ldi	r25, 0x41	; 65
    3c50:	89 2f       	mov	r24, r25
    3c52:	8f 93       	push	r24
    3c54:	83 e1       	ldi	r24, 0x13	; 19
    3c56:	91 e4       	ldi	r25, 0x41	; 65
    3c58:	8f 93       	push	r24
    3c5a:	89 e1       	ldi	r24, 0x19	; 25
    3c5c:	97 e4       	ldi	r25, 0x47	; 71
    3c5e:	89 2f       	mov	r24, r25
    3c60:	8f 93       	push	r24
    3c62:	89 e1       	ldi	r24, 0x19	; 25
    3c64:	97 e4       	ldi	r25, 0x47	; 71
    3c66:	8f 93       	push	r24
    3c68:	0e 94 ba 7c 	call	0xf974	; 0xf974 <sprintf>
    3c6c:	0f 90       	pop	r0
    3c6e:	0f 90       	pop	r0
    3c70:	0f 90       	pop	r0
    3c72:	0f 90       	pop	r0
    3c74:	0f 90       	pop	r0
    3c76:	0f 90       	pop	r0
    3c78:	60 e0       	ldi	r22, 0x00	; 0
    3c7a:	80 e0       	ldi	r24, 0x00	; 0
    3c7c:	90 e0       	ldi	r25, 0x00	; 0
    3c7e:	0e 94 70 2d 	call	0x5ae0	; 0x5ae0 <_Z11setupForFoxP5Fox_t13EventAction_t>
    3c82:	01 c1       	rjmp	.+514    	; 0x3e86 <_Z19handleSerialBusMsgsv+0xb80>
    3c84:	ce 01       	movw	r24, r28
    3c86:	8c 59       	subi	r24, 0x9C	; 156
    3c88:	9f 4f       	sbci	r25, 0xFF	; 255
    3c8a:	0e 94 53 40 	call	0x80a6	; 0x80a6 <ds3231_get_epoch>
    3c8e:	ce 01       	movw	r24, r28
    3c90:	8c 59       	subi	r24, 0x9C	; 156
    3c92:	9f 4f       	sbci	r25, 0xFF	; 255
    3c94:	fc 01       	movw	r30, r24
    3c96:	80 81       	ld	r24, Z
    3c98:	88 23       	and	r24, r24
    3c9a:	51 f0       	breq	.+20     	; 0x3cb0 <_Z19handleSerialBusMsgsv+0x9aa>
    3c9c:	88 e2       	ldi	r24, 0x28	; 40
    3c9e:	eb ee       	ldi	r30, 0xEB	; 235
    3ca0:	f0 e4       	ldi	r31, 0x40	; 64
    3ca2:	a9 e1       	ldi	r26, 0x19	; 25
    3ca4:	b7 e4       	ldi	r27, 0x47	; 71
    3ca6:	01 90       	ld	r0, Z+
    3ca8:	0d 92       	st	X+, r0
    3caa:	8a 95       	dec	r24
    3cac:	e1 f7       	brne	.-8      	; 0x3ca6 <_Z19handleSerialBusMsgsv+0x9a0>
    3cae:	eb c0       	rjmp	.+470    	; 0x3e86 <_Z19handleSerialBusMsgsv+0xb80>
    3cb0:	ae 01       	movw	r20, r28
    3cb2:	43 59       	subi	r20, 0x93	; 147
    3cb4:	5f 4f       	sbci	r21, 0xFF	; 255
    3cb6:	8a 8d       	ldd	r24, Y+26	; 0x1a
    3cb8:	9b 8d       	ldd	r25, Y+27	; 0x1b
    3cba:	ac 8d       	ldd	r26, Y+28	; 0x1c
    3cbc:	bd 8d       	ldd	r27, Y+29	; 0x1d
    3cbe:	22 e3       	ldi	r18, 0x32	; 50
    3cc0:	30 e0       	ldi	r19, 0x00	; 0
    3cc2:	bc 01       	movw	r22, r24
    3cc4:	cd 01       	movw	r24, r26
    3cc6:	0e 94 61 45 	call	0x8ac2	; 0x8ac2 <convertEpochToTimeString>
    3cca:	29 2f       	mov	r18, r25
    3ccc:	2f 93       	push	r18
    3cce:	8f 93       	push	r24
    3cd0:	8d e1       	ldi	r24, 0x1D	; 29
    3cd2:	91 e4       	ldi	r25, 0x41	; 65
    3cd4:	89 2f       	mov	r24, r25
    3cd6:	8f 93       	push	r24
    3cd8:	8d e1       	ldi	r24, 0x1D	; 29
    3cda:	91 e4       	ldi	r25, 0x41	; 65
    3cdc:	8f 93       	push	r24
    3cde:	89 e1       	ldi	r24, 0x19	; 25
    3ce0:	97 e4       	ldi	r25, 0x47	; 71
    3ce2:	89 2f       	mov	r24, r25
    3ce4:	8f 93       	push	r24
    3ce6:	89 e1       	ldi	r24, 0x19	; 25
    3ce8:	97 e4       	ldi	r25, 0x47	; 71
    3cea:	8f 93       	push	r24
    3cec:	0e 94 ba 7c 	call	0xf974	; 0xf974 <sprintf>
    3cf0:	0f 90       	pop	r0
    3cf2:	0f 90       	pop	r0
    3cf4:	0f 90       	pop	r0
    3cf6:	0f 90       	pop	r0
    3cf8:	0f 90       	pop	r0
    3cfa:	0f 90       	pop	r0
    3cfc:	89 e1       	ldi	r24, 0x19	; 25
    3cfe:	97 e4       	ldi	r25, 0x47	; 71
    3d00:	0e 94 4e 63 	call	0xc69c	; 0xc69c <sb_send_string>
    3d04:	80 91 8c 47 	lds	r24, 0x478C	; 0x80478c <g_event_start_epoch>
    3d08:	90 91 8d 47 	lds	r25, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    3d0c:	a0 91 8e 47 	lds	r26, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    3d10:	b0 91 8f 47 	lds	r27, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    3d14:	ae 01       	movw	r20, r28
    3d16:	43 59       	subi	r20, 0x93	; 147
    3d18:	5f 4f       	sbci	r21, 0xFF	; 255
    3d1a:	22 e3       	ldi	r18, 0x32	; 50
    3d1c:	30 e0       	ldi	r19, 0x00	; 0
    3d1e:	bc 01       	movw	r22, r24
    3d20:	cd 01       	movw	r24, r26
    3d22:	0e 94 61 45 	call	0x8ac2	; 0x8ac2 <convertEpochToTimeString>
    3d26:	29 2f       	mov	r18, r25
    3d28:	2f 93       	push	r18
    3d2a:	8f 93       	push	r24
    3d2c:	89 e2       	ldi	r24, 0x29	; 41
    3d2e:	91 e4       	ldi	r25, 0x41	; 65
    3d30:	89 2f       	mov	r24, r25
    3d32:	8f 93       	push	r24
    3d34:	89 e2       	ldi	r24, 0x29	; 41
    3d36:	91 e4       	ldi	r25, 0x41	; 65
    3d38:	8f 93       	push	r24
    3d3a:	89 e1       	ldi	r24, 0x19	; 25
    3d3c:	97 e4       	ldi	r25, 0x47	; 71
    3d3e:	89 2f       	mov	r24, r25
    3d40:	8f 93       	push	r24
    3d42:	89 e1       	ldi	r24, 0x19	; 25
    3d44:	97 e4       	ldi	r25, 0x47	; 71
    3d46:	8f 93       	push	r24
    3d48:	0e 94 ba 7c 	call	0xf974	; 0xf974 <sprintf>
    3d4c:	0f 90       	pop	r0
    3d4e:	0f 90       	pop	r0
    3d50:	0f 90       	pop	r0
    3d52:	0f 90       	pop	r0
    3d54:	0f 90       	pop	r0
    3d56:	0f 90       	pop	r0
    3d58:	89 e1       	ldi	r24, 0x19	; 25
    3d5a:	97 e4       	ldi	r25, 0x47	; 71
    3d5c:	0e 94 4e 63 	call	0xc69c	; 0xc69c <sb_send_string>
    3d60:	80 91 90 47 	lds	r24, 0x4790	; 0x804790 <g_event_finish_epoch>
    3d64:	90 91 91 47 	lds	r25, 0x4791	; 0x804791 <g_event_finish_epoch+0x1>
    3d68:	a0 91 92 47 	lds	r26, 0x4792	; 0x804792 <g_event_finish_epoch+0x2>
    3d6c:	b0 91 93 47 	lds	r27, 0x4793	; 0x804793 <g_event_finish_epoch+0x3>
    3d70:	ae 01       	movw	r20, r28
    3d72:	43 59       	subi	r20, 0x93	; 147
    3d74:	5f 4f       	sbci	r21, 0xFF	; 255
    3d76:	22 e3       	ldi	r18, 0x32	; 50
    3d78:	30 e0       	ldi	r19, 0x00	; 0
    3d7a:	bc 01       	movw	r22, r24
    3d7c:	cd 01       	movw	r24, r26
    3d7e:	0e 94 61 45 	call	0x8ac2	; 0x8ac2 <convertEpochToTimeString>
    3d82:	29 2f       	mov	r18, r25
    3d84:	2f 93       	push	r18
    3d86:	8f 93       	push	r24
    3d88:	85 e3       	ldi	r24, 0x35	; 53
    3d8a:	91 e4       	ldi	r25, 0x41	; 65
    3d8c:	89 2f       	mov	r24, r25
    3d8e:	8f 93       	push	r24
    3d90:	85 e3       	ldi	r24, 0x35	; 53
    3d92:	91 e4       	ldi	r25, 0x41	; 65
    3d94:	8f 93       	push	r24
    3d96:	89 e1       	ldi	r24, 0x19	; 25
    3d98:	97 e4       	ldi	r25, 0x47	; 71
    3d9a:	89 2f       	mov	r24, r25
    3d9c:	8f 93       	push	r24
    3d9e:	89 e1       	ldi	r24, 0x19	; 25
    3da0:	97 e4       	ldi	r25, 0x47	; 71
    3da2:	8f 93       	push	r24
    3da4:	0e 94 ba 7c 	call	0xf974	; 0xf974 <sprintf>
    3da8:	0f 90       	pop	r0
    3daa:	0f 90       	pop	r0
    3dac:	0f 90       	pop	r0
    3dae:	0f 90       	pop	r0
    3db0:	0f 90       	pop	r0
    3db2:	0f 90       	pop	r0
    3db4:	89 e1       	ldi	r24, 0x19	; 25
    3db6:	97 e4       	ldi	r25, 0x47	; 71
    3db8:	0e 94 4e 63 	call	0xc69c	; 0xc69c <sb_send_string>
    3dbc:	0e 94 2b 33 	call	0x6656	; 0x6656 <_Z23clockConfigurationCheckv>
    3dc0:	8b a7       	std	Y+43, r24	; 0x2b
    3dc2:	8b a5       	ldd	r24, Y+43	; 0x2b
    3dc4:	81 30       	cpi	r24, 0x01	; 1
    3dc6:	31 f0       	breq	.+12     	; 0x3dd4 <_Z19handleSerialBusMsgsv+0xace>
    3dc8:	8b a5       	ldd	r24, Y+43	; 0x2b
    3dca:	85 30       	cpi	r24, 0x05	; 5
    3dcc:	19 f0       	breq	.+6      	; 0x3dd4 <_Z19handleSerialBusMsgsv+0xace>
    3dce:	0e 94 c5 33 	call	0x678a	; 0x678a <_Z18reportConfigErrorsv>
    3dd2:	59 c0       	rjmp	.+178    	; 0x3e86 <_Z19handleSerialBusMsgsv+0xb80>
    3dd4:	20 91 8c 47 	lds	r18, 0x478C	; 0x80478c <g_event_start_epoch>
    3dd8:	30 91 8d 47 	lds	r19, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    3ddc:	40 91 8e 47 	lds	r20, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    3de0:	50 91 8f 47 	lds	r21, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    3de4:	8a 8d       	ldd	r24, Y+26	; 0x1a
    3de6:	9b 8d       	ldd	r25, Y+27	; 0x1b
    3de8:	ac 8d       	ldd	r26, Y+28	; 0x1c
    3dea:	bd 8d       	ldd	r27, Y+29	; 0x1d
    3dec:	0f 2e       	mov	r0, r31
    3dee:	f1 e4       	ldi	r31, 0x41	; 65
    3df0:	ef 2e       	mov	r14, r31
    3df2:	f1 e4       	ldi	r31, 0x41	; 65
    3df4:	ff 2e       	mov	r15, r31
    3df6:	f0 2d       	mov	r31, r0
    3df8:	0e e4       	ldi	r16, 0x4E	; 78
    3dfa:	11 e4       	ldi	r17, 0x41	; 65
    3dfc:	bc 01       	movw	r22, r24
    3dfe:	cd 01       	movw	r24, r26
    3e00:	0e 94 89 31 	call	0x6312	; 0x6312 <_Z14reportTimeTillmmPKcS0_>
    3e04:	20 91 90 47 	lds	r18, 0x4790	; 0x804790 <g_event_finish_epoch>
    3e08:	30 91 91 47 	lds	r19, 0x4791	; 0x804791 <g_event_finish_epoch+0x1>
    3e0c:	40 91 92 47 	lds	r20, 0x4792	; 0x804792 <g_event_finish_epoch+0x2>
    3e10:	50 91 93 47 	lds	r21, 0x4793	; 0x804793 <g_event_finish_epoch+0x3>
    3e14:	80 91 8c 47 	lds	r24, 0x478C	; 0x80478c <g_event_start_epoch>
    3e18:	90 91 8d 47 	lds	r25, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    3e1c:	a0 91 8e 47 	lds	r26, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    3e20:	b0 91 8f 47 	lds	r27, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    3e24:	e1 2c       	mov	r14, r1
    3e26:	f1 2c       	mov	r15, r1
    3e28:	0a e5       	ldi	r16, 0x5A	; 90
    3e2a:	11 e4       	ldi	r17, 0x41	; 65
    3e2c:	bc 01       	movw	r22, r24
    3e2e:	cd 01       	movw	r24, r26
    3e30:	0e 94 89 31 	call	0x6312	; 0x6312 <_Z14reportTimeTillmmPKcS0_>
    3e34:	20 91 8c 47 	lds	r18, 0x478C	; 0x80478c <g_event_start_epoch>
    3e38:	30 91 8d 47 	lds	r19, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    3e3c:	40 91 8e 47 	lds	r20, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    3e40:	50 91 8f 47 	lds	r21, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    3e44:	61 e0       	ldi	r22, 0x01	; 1
    3e46:	8a 8d       	ldd	r24, Y+26	; 0x1a
    3e48:	9b 8d       	ldd	r25, Y+27	; 0x1b
    3e4a:	ac 8d       	ldd	r26, Y+28	; 0x1c
    3e4c:	bd 8d       	ldd	r27, Y+29	; 0x1d
    3e4e:	28 17       	cp	r18, r24
    3e50:	39 07       	cpc	r19, r25
    3e52:	4a 07       	cpc	r20, r26
    3e54:	5b 07       	cpc	r21, r27
    3e56:	08 f0       	brcs	.+2      	; 0x3e5a <_Z19handleSerialBusMsgsv+0xb54>
    3e58:	60 e0       	ldi	r22, 0x00	; 0
    3e5a:	66 23       	and	r22, r22
    3e5c:	a1 f0       	breq	.+40     	; 0x3e86 <_Z19handleSerialBusMsgsv+0xb80>
    3e5e:	20 91 90 47 	lds	r18, 0x4790	; 0x804790 <g_event_finish_epoch>
    3e62:	30 91 91 47 	lds	r19, 0x4791	; 0x804791 <g_event_finish_epoch+0x1>
    3e66:	40 91 92 47 	lds	r20, 0x4792	; 0x804792 <g_event_finish_epoch+0x2>
    3e6a:	50 91 93 47 	lds	r21, 0x4793	; 0x804793 <g_event_finish_epoch+0x3>
    3e6e:	8a 8d       	ldd	r24, Y+26	; 0x1a
    3e70:	9b 8d       	ldd	r25, Y+27	; 0x1b
    3e72:	ac 8d       	ldd	r26, Y+28	; 0x1c
    3e74:	bd 8d       	ldd	r27, Y+29	; 0x1d
    3e76:	e1 2c       	mov	r14, r1
    3e78:	f1 2c       	mov	r15, r1
    3e7a:	02 e6       	ldi	r16, 0x62	; 98
    3e7c:	11 e4       	ldi	r17, 0x41	; 65
    3e7e:	bc 01       	movw	r22, r24
    3e80:	cd 01       	movw	r24, r26
    3e82:	0e 94 89 31 	call	0x6312	; 0x6312 <_Z14reportTimeTillmmPKcS0_>
    3e86:	81 e0       	ldi	r24, 0x01	; 1
    3e88:	8d 83       	std	Y+5, r24	; 0x05
    3e8a:	6a c1       	rjmp	.+724    	; 0x4160 <__DATA_REGION_LENGTH__+0x160>
    3e8c:	8e 81       	ldd	r24, Y+6	; 0x06
    3e8e:	9f 81       	ldd	r25, Y+7	; 0x07
    3e90:	fc 01       	movw	r30, r24
    3e92:	83 81       	ldd	r24, Z+3	; 0x03
    3e94:	83 35       	cpi	r24, 0x53	; 83
    3e96:	09 f0       	breq	.+2      	; 0x3e9a <_Z19handleSerialBusMsgsv+0xb94>
    3e98:	d8 c0       	rjmp	.+432    	; 0x404a <__DATA_REGION_LENGTH__+0x4a>
    3e9a:	8e 81       	ldd	r24, Y+6	; 0x06
    3e9c:	9f 81       	ldd	r25, Y+7	; 0x07
    3e9e:	47 96       	adiw	r24, 0x17	; 23
    3ea0:	bc 01       	movw	r22, r24
    3ea2:	89 e1       	ldi	r24, 0x19	; 25
    3ea4:	97 e4       	ldi	r25, 0x47	; 71
    3ea6:	0e 94 7e 7c 	call	0xf8fc	; 0xf8fc <strcpy>
    3eaa:	80 91 ac 47 	lds	r24, 0x47AC	; 0x8047ac <g_utc_offset>
    3eae:	81 95       	neg	r24
    3eb0:	48 2f       	mov	r20, r24
    3eb2:	6c e8       	ldi	r22, 0x8C	; 140
    3eb4:	77 e4       	ldi	r23, 0x47	; 71
    3eb6:	89 e1       	ldi	r24, 0x19	; 25
    3eb8:	97 e4       	ldi	r25, 0x47	; 71
    3eba:	0e 94 53 30 	call	0x60a6	; 0x60a6 <_Z18validateTimeStringPcPma>
    3ebe:	dc 01       	movw	r26, r24
    3ec0:	cb 01       	movw	r24, r22
    3ec2:	8e 8f       	std	Y+30, r24	; 0x1e
    3ec4:	9f 8f       	std	Y+31, r25	; 0x1f
    3ec6:	a8 a3       	std	Y+32, r26	; 0x20
    3ec8:	b9 a3       	std	Y+33, r27	; 0x21
    3eca:	8e 8d       	ldd	r24, Y+30	; 0x1e
    3ecc:	9f 8d       	ldd	r25, Y+31	; 0x1f
    3ece:	a8 a1       	ldd	r26, Y+32	; 0x20
    3ed0:	b9 a1       	ldd	r27, Y+33	; 0x21
    3ed2:	89 2b       	or	r24, r25
    3ed4:	8a 2b       	or	r24, r26
    3ed6:	8b 2b       	or	r24, r27
    3ed8:	09 f4       	brne	.+2      	; 0x3edc <_Z19handleSerialBusMsgsv+0xbd6>
    3eda:	8a c0       	rjmp	.+276    	; 0x3ff0 <_Z19handleSerialBusMsgsv+0xcea>
    3edc:	8e 8d       	ldd	r24, Y+30	; 0x1e
    3ede:	9f 8d       	ldd	r25, Y+31	; 0x1f
    3ee0:	a8 a1       	ldd	r26, Y+32	; 0x20
    3ee2:	b9 a1       	ldd	r27, Y+33	; 0x21
    3ee4:	80 93 8c 47 	sts	0x478C, r24	; 0x80478c <g_event_start_epoch>
    3ee8:	90 93 8d 47 	sts	0x478D, r25	; 0x80478d <g_event_start_epoch+0x1>
    3eec:	a0 93 8e 47 	sts	0x478E, r26	; 0x80478e <g_event_start_epoch+0x2>
    3ef0:	b0 93 8f 47 	sts	0x478F, r27	; 0x80478f <g_event_start_epoch+0x3>
    3ef4:	4c e8       	ldi	r20, 0x8C	; 140
    3ef6:	57 e4       	ldi	r21, 0x47	; 71
    3ef8:	62 e0       	ldi	r22, 0x02	; 2
    3efa:	8b ea       	ldi	r24, 0xAB	; 171
    3efc:	97 e4       	ldi	r25, 0x47	; 71
    3efe:	0e 94 52 46 	call	0x8ca4	; 0x8ca4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
    3f02:	80 91 90 47 	lds	r24, 0x4790	; 0x804790 <g_event_finish_epoch>
    3f06:	90 91 91 47 	lds	r25, 0x4791	; 0x804791 <g_event_finish_epoch+0x1>
    3f0a:	a0 91 92 47 	lds	r26, 0x4792	; 0x804792 <g_event_finish_epoch+0x2>
    3f0e:	b0 91 93 47 	lds	r27, 0x4793	; 0x804793 <g_event_finish_epoch+0x3>
    3f12:	9e 01       	movw	r18, r28
    3f14:	2b 59       	subi	r18, 0x9B	; 155
    3f16:	3f 4f       	sbci	r19, 0xFF	; 255
    3f18:	f9 01       	movw	r30, r18
    3f1a:	80 83       	st	Z, r24
    3f1c:	91 83       	std	Z+1, r25	; 0x01
    3f1e:	a2 83       	std	Z+2, r26	; 0x02
    3f20:	b3 83       	std	Z+3, r27	; 0x03
    3f22:	80 91 8c 47 	lds	r24, 0x478C	; 0x80478c <g_event_start_epoch>
    3f26:	90 91 8d 47 	lds	r25, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    3f2a:	a0 91 8e 47 	lds	r26, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    3f2e:	b0 91 8f 47 	lds	r27, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    3f32:	80 58       	subi	r24, 0x80	; 128
    3f34:	9e 4a       	sbci	r25, 0xAE	; 174
    3f36:	ae 4f       	sbci	r26, 0xFE	; 254
    3f38:	bf 4f       	sbci	r27, 0xFF	; 255
    3f3a:	9e 01       	movw	r18, r28
    3f3c:	27 59       	subi	r18, 0x97	; 151
    3f3e:	3f 4f       	sbci	r19, 0xFF	; 255
    3f40:	f9 01       	movw	r30, r18
    3f42:	80 83       	st	Z, r24
    3f44:	91 83       	std	Z+1, r25	; 0x01
    3f46:	a2 83       	std	Z+2, r26	; 0x02
    3f48:	b3 83       	std	Z+3, r27	; 0x03
    3f4a:	ce 01       	movw	r24, r28
    3f4c:	8b 59       	subi	r24, 0x9B	; 155
    3f4e:	9f 4f       	sbci	r25, 0xFF	; 255
    3f50:	fc 01       	movw	r30, r24
    3f52:	20 81       	ld	r18, Z
    3f54:	31 81       	ldd	r19, Z+1	; 0x01
    3f56:	42 81       	ldd	r20, Z+2	; 0x02
    3f58:	53 81       	ldd	r21, Z+3	; 0x03
    3f5a:	ce 01       	movw	r24, r28
    3f5c:	87 59       	subi	r24, 0x97	; 151
    3f5e:	9f 4f       	sbci	r25, 0xFF	; 255
    3f60:	fc 01       	movw	r30, r24
    3f62:	80 81       	ld	r24, Z
    3f64:	91 81       	ldd	r25, Z+1	; 0x01
    3f66:	a2 81       	ldd	r26, Z+2	; 0x02
    3f68:	b3 81       	ldd	r27, Z+3	; 0x03
    3f6a:	28 17       	cp	r18, r24
    3f6c:	39 07       	cpc	r19, r25
    3f6e:	4a 07       	cpc	r20, r26
    3f70:	5b 07       	cpc	r21, r27
    3f72:	48 f4       	brcc	.+18     	; 0x3f86 <_Z19handleSerialBusMsgsv+0xc80>
    3f74:	ce 01       	movw	r24, r28
    3f76:	87 59       	subi	r24, 0x97	; 151
    3f78:	9f 4f       	sbci	r25, 0xFF	; 255
    3f7a:	fc 01       	movw	r30, r24
    3f7c:	80 81       	ld	r24, Z
    3f7e:	91 81       	ldd	r25, Z+1	; 0x01
    3f80:	a2 81       	ldd	r26, Z+2	; 0x02
    3f82:	b3 81       	ldd	r27, Z+3	; 0x03
    3f84:	08 c0       	rjmp	.+16     	; 0x3f96 <_Z19handleSerialBusMsgsv+0xc90>
    3f86:	ce 01       	movw	r24, r28
    3f88:	8b 59       	subi	r24, 0x9B	; 155
    3f8a:	9f 4f       	sbci	r25, 0xFF	; 255
    3f8c:	fc 01       	movw	r30, r24
    3f8e:	80 81       	ld	r24, Z
    3f90:	91 81       	ldd	r25, Z+1	; 0x01
    3f92:	a2 81       	ldd	r26, Z+2	; 0x02
    3f94:	b3 81       	ldd	r27, Z+3	; 0x03
    3f96:	80 93 90 47 	sts	0x4790, r24	; 0x804790 <g_event_finish_epoch>
    3f9a:	90 93 91 47 	sts	0x4791, r25	; 0x804791 <g_event_finish_epoch+0x1>
    3f9e:	a0 93 92 47 	sts	0x4792, r26	; 0x804792 <g_event_finish_epoch+0x2>
    3fa2:	b0 93 93 47 	sts	0x4793, r27	; 0x804793 <g_event_finish_epoch+0x3>
    3fa6:	40 e9       	ldi	r20, 0x90	; 144
    3fa8:	57 e4       	ldi	r21, 0x47	; 71
    3faa:	66 e0       	ldi	r22, 0x06	; 6
    3fac:	8b ea       	ldi	r24, 0xAB	; 171
    3fae:	97 e4       	ldi	r25, 0x47	; 71
    3fb0:	0e 94 52 46 	call	0x8ca4	; 0x8ca4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
    3fb4:	63 e0       	ldi	r22, 0x03	; 3
    3fb6:	80 e0       	ldi	r24, 0x00	; 0
    3fb8:	90 e0       	ldi	r25, 0x00	; 0
    3fba:	0e 94 70 2d 	call	0x5ae0	; 0x5ae0 <_Z11setupForFoxP5Fox_t13EventAction_t>
    3fbe:	80 e0       	ldi	r24, 0x00	; 0
    3fc0:	90 e0       	ldi	r25, 0x00	; 0
    3fc2:	0e 94 56 06 	call	0xcac	; 0xcac <time>
    3fc6:	9b 01       	movw	r18, r22
    3fc8:	ac 01       	movw	r20, r24
    3fca:	80 91 8c 47 	lds	r24, 0x478C	; 0x80478c <g_event_start_epoch>
    3fce:	90 91 8d 47 	lds	r25, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    3fd2:	a0 91 8e 47 	lds	r26, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    3fd6:	b0 91 8f 47 	lds	r27, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    3fda:	61 e0       	ldi	r22, 0x01	; 1
    3fdc:	28 17       	cp	r18, r24
    3fde:	39 07       	cpc	r19, r25
    3fe0:	4a 07       	cpc	r20, r26
    3fe2:	5b 07       	cpc	r21, r27
    3fe4:	08 f0       	brcs	.+2      	; 0x3fe8 <_Z19handleSerialBusMsgsv+0xce2>
    3fe6:	60 e0       	ldi	r22, 0x00	; 0
    3fe8:	66 23       	and	r22, r22
    3fea:	11 f0       	breq	.+4      	; 0x3ff0 <_Z19handleSerialBusMsgsv+0xcea>
    3fec:	0e 94 dd 2c 	call	0x59ba	; 0x59ba <_Z18startEventUsingRTCv>
    3ff0:	80 91 8c 47 	lds	r24, 0x478C	; 0x80478c <g_event_start_epoch>
    3ff4:	90 91 8d 47 	lds	r25, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    3ff8:	a0 91 8e 47 	lds	r26, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    3ffc:	b0 91 8f 47 	lds	r27, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    4000:	ae 01       	movw	r20, r28
    4002:	43 59       	subi	r20, 0x93	; 147
    4004:	5f 4f       	sbci	r21, 0xFF	; 255
    4006:	22 e3       	ldi	r18, 0x32	; 50
    4008:	30 e0       	ldi	r19, 0x00	; 0
    400a:	bc 01       	movw	r22, r24
    400c:	cd 01       	movw	r24, r26
    400e:	0e 94 61 45 	call	0x8ac2	; 0x8ac2 <convertEpochToTimeString>
    4012:	29 2f       	mov	r18, r25
    4014:	2f 93       	push	r18
    4016:	8f 93       	push	r24
    4018:	83 e7       	ldi	r24, 0x73	; 115
    401a:	91 e4       	ldi	r25, 0x41	; 65
    401c:	89 2f       	mov	r24, r25
    401e:	8f 93       	push	r24
    4020:	83 e7       	ldi	r24, 0x73	; 115
    4022:	91 e4       	ldi	r25, 0x41	; 65
    4024:	8f 93       	push	r24
    4026:	89 e1       	ldi	r24, 0x19	; 25
    4028:	97 e4       	ldi	r25, 0x47	; 71
    402a:	89 2f       	mov	r24, r25
    402c:	8f 93       	push	r24
    402e:	89 e1       	ldi	r24, 0x19	; 25
    4030:	97 e4       	ldi	r25, 0x47	; 71
    4032:	8f 93       	push	r24
    4034:	0e 94 ba 7c 	call	0xf974	; 0xf974 <sprintf>
    4038:	0f 90       	pop	r0
    403a:	0f 90       	pop	r0
    403c:	0f 90       	pop	r0
    403e:	0f 90       	pop	r0
    4040:	0f 90       	pop	r0
    4042:	0f 90       	pop	r0
    4044:	81 e0       	ldi	r24, 0x01	; 1
    4046:	8d 83       	std	Y+5, r24	; 0x05
    4048:	8b c0       	rjmp	.+278    	; 0x4160 <__DATA_REGION_LENGTH__+0x160>
    404a:	8e 81       	ldd	r24, Y+6	; 0x06
    404c:	9f 81       	ldd	r25, Y+7	; 0x07
    404e:	fc 01       	movw	r30, r24
    4050:	83 81       	ldd	r24, Z+3	; 0x03
    4052:	86 34       	cpi	r24, 0x46	; 70
    4054:	09 f0       	breq	.+2      	; 0x4058 <__DATA_REGION_LENGTH__+0x58>
    4056:	7c c0       	rjmp	.+248    	; 0x4150 <__DATA_REGION_LENGTH__+0x150>
    4058:	8e 81       	ldd	r24, Y+6	; 0x06
    405a:	9f 81       	ldd	r25, Y+7	; 0x07
    405c:	47 96       	adiw	r24, 0x17	; 23
    405e:	bc 01       	movw	r22, r24
    4060:	89 e1       	ldi	r24, 0x19	; 25
    4062:	97 e4       	ldi	r25, 0x47	; 71
    4064:	0e 94 7e 7c 	call	0xf8fc	; 0xf8fc <strcpy>
    4068:	80 91 ac 47 	lds	r24, 0x47AC	; 0x8047ac <g_utc_offset>
    406c:	81 95       	neg	r24
    406e:	48 2f       	mov	r20, r24
    4070:	60 e9       	ldi	r22, 0x90	; 144
    4072:	77 e4       	ldi	r23, 0x47	; 71
    4074:	89 e1       	ldi	r24, 0x19	; 25
    4076:	97 e4       	ldi	r25, 0x47	; 71
    4078:	0e 94 53 30 	call	0x60a6	; 0x60a6 <_Z18validateTimeStringPcPma>
    407c:	dc 01       	movw	r26, r24
    407e:	cb 01       	movw	r24, r22
    4080:	8a a3       	std	Y+34, r24	; 0x22
    4082:	9b a3       	std	Y+35, r25	; 0x23
    4084:	ac a3       	std	Y+36, r26	; 0x24
    4086:	bd a3       	std	Y+37, r27	; 0x25
    4088:	8a a1       	ldd	r24, Y+34	; 0x22
    408a:	9b a1       	ldd	r25, Y+35	; 0x23
    408c:	ac a1       	ldd	r26, Y+36	; 0x24
    408e:	bd a1       	ldd	r27, Y+37	; 0x25
    4090:	89 2b       	or	r24, r25
    4092:	8a 2b       	or	r24, r26
    4094:	8b 2b       	or	r24, r27
    4096:	79 f1       	breq	.+94     	; 0x40f6 <__DATA_REGION_LENGTH__+0xf6>
    4098:	8a a1       	ldd	r24, Y+34	; 0x22
    409a:	9b a1       	ldd	r25, Y+35	; 0x23
    409c:	ac a1       	ldd	r26, Y+36	; 0x24
    409e:	bd a1       	ldd	r27, Y+37	; 0x25
    40a0:	80 93 90 47 	sts	0x4790, r24	; 0x804790 <g_event_finish_epoch>
    40a4:	90 93 91 47 	sts	0x4791, r25	; 0x804791 <g_event_finish_epoch+0x1>
    40a8:	a0 93 92 47 	sts	0x4792, r26	; 0x804792 <g_event_finish_epoch+0x2>
    40ac:	b0 93 93 47 	sts	0x4793, r27	; 0x804793 <g_event_finish_epoch+0x3>
    40b0:	40 e9       	ldi	r20, 0x90	; 144
    40b2:	57 e4       	ldi	r21, 0x47	; 71
    40b4:	66 e0       	ldi	r22, 0x06	; 6
    40b6:	8b ea       	ldi	r24, 0xAB	; 171
    40b8:	97 e4       	ldi	r25, 0x47	; 71
    40ba:	0e 94 52 46 	call	0x8ca4	; 0x8ca4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
    40be:	63 e0       	ldi	r22, 0x03	; 3
    40c0:	80 e0       	ldi	r24, 0x00	; 0
    40c2:	90 e0       	ldi	r25, 0x00	; 0
    40c4:	0e 94 70 2d 	call	0x5ae0	; 0x5ae0 <_Z11setupForFoxP5Fox_t13EventAction_t>
    40c8:	20 91 8c 47 	lds	r18, 0x478C	; 0x80478c <g_event_start_epoch>
    40cc:	30 91 8d 47 	lds	r19, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    40d0:	40 91 8e 47 	lds	r20, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    40d4:	50 91 8f 47 	lds	r21, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    40d8:	61 e0       	ldi	r22, 0x01	; 1
    40da:	8a 8d       	ldd	r24, Y+26	; 0x1a
    40dc:	9b 8d       	ldd	r25, Y+27	; 0x1b
    40de:	ac 8d       	ldd	r26, Y+28	; 0x1c
    40e0:	bd 8d       	ldd	r27, Y+29	; 0x1d
    40e2:	82 17       	cp	r24, r18
    40e4:	93 07       	cpc	r25, r19
    40e6:	a4 07       	cpc	r26, r20
    40e8:	b5 07       	cpc	r27, r21
    40ea:	08 f0       	brcs	.+2      	; 0x40ee <__DATA_REGION_LENGTH__+0xee>
    40ec:	60 e0       	ldi	r22, 0x00	; 0
    40ee:	66 23       	and	r22, r22
    40f0:	11 f0       	breq	.+4      	; 0x40f6 <__DATA_REGION_LENGTH__+0xf6>
    40f2:	0e 94 dd 2c 	call	0x59ba	; 0x59ba <_Z18startEventUsingRTCv>
    40f6:	80 91 90 47 	lds	r24, 0x4790	; 0x804790 <g_event_finish_epoch>
    40fa:	90 91 91 47 	lds	r25, 0x4791	; 0x804791 <g_event_finish_epoch+0x1>
    40fe:	a0 91 92 47 	lds	r26, 0x4792	; 0x804792 <g_event_finish_epoch+0x2>
    4102:	b0 91 93 47 	lds	r27, 0x4793	; 0x804793 <g_event_finish_epoch+0x3>
    4106:	ae 01       	movw	r20, r28
    4108:	43 59       	subi	r20, 0x93	; 147
    410a:	5f 4f       	sbci	r21, 0xFF	; 255
    410c:	22 e3       	ldi	r18, 0x32	; 50
    410e:	30 e0       	ldi	r19, 0x00	; 0
    4110:	bc 01       	movw	r22, r24
    4112:	cd 01       	movw	r24, r26
    4114:	0e 94 61 45 	call	0x8ac2	; 0x8ac2 <convertEpochToTimeString>
    4118:	29 2f       	mov	r18, r25
    411a:	2f 93       	push	r18
    411c:	8f 93       	push	r24
    411e:	85 e3       	ldi	r24, 0x35	; 53
    4120:	91 e4       	ldi	r25, 0x41	; 65
    4122:	89 2f       	mov	r24, r25
    4124:	8f 93       	push	r24
    4126:	85 e3       	ldi	r24, 0x35	; 53
    4128:	91 e4       	ldi	r25, 0x41	; 65
    412a:	8f 93       	push	r24
    412c:	89 e1       	ldi	r24, 0x19	; 25
    412e:	97 e4       	ldi	r25, 0x47	; 71
    4130:	89 2f       	mov	r24, r25
    4132:	8f 93       	push	r24
    4134:	89 e1       	ldi	r24, 0x19	; 25
    4136:	97 e4       	ldi	r25, 0x47	; 71
    4138:	8f 93       	push	r24
    413a:	0e 94 ba 7c 	call	0xf974	; 0xf974 <sprintf>
    413e:	0f 90       	pop	r0
    4140:	0f 90       	pop	r0
    4142:	0f 90       	pop	r0
    4144:	0f 90       	pop	r0
    4146:	0f 90       	pop	r0
    4148:	0f 90       	pop	r0
    414a:	81 e0       	ldi	r24, 0x01	; 1
    414c:	8d 83       	std	Y+5, r24	; 0x05
    414e:	08 c0       	rjmp	.+16     	; 0x4160 <__DATA_REGION_LENGTH__+0x160>
    4150:	8e 81       	ldd	r24, Y+6	; 0x06
    4152:	9f 81       	ldd	r25, Y+7	; 0x07
    4154:	fc 01       	movw	r30, r24
    4156:	83 81       	ldd	r24, Z+3	; 0x03
    4158:	8a 32       	cpi	r24, 0x2A	; 42
    415a:	11 f4       	brne	.+4      	; 0x4160 <__DATA_REGION_LENGTH__+0x160>
    415c:	0e 94 78 44 	call	0x88f0	; 0x88f0 <ds3231_sync2nearestMinute>
    4160:	8d 81       	ldd	r24, Y+5	; 0x05
    4162:	88 23       	and	r24, r24
    4164:	01 f1       	breq	.+64     	; 0x41a6 <__DATA_REGION_LENGTH__+0x1a6>
    4166:	89 e1       	ldi	r24, 0x19	; 25
    4168:	97 e4       	ldi	r25, 0x47	; 71
    416a:	0e 94 4e 63 	call	0xc69c	; 0xc69c <sb_send_string>
    416e:	1b c0       	rjmp	.+54     	; 0x41a6 <__DATA_REGION_LENGTH__+0x1a6>
    4170:	8e 81       	ldd	r24, Y+6	; 0x06
    4172:	9f 81       	ldd	r25, Y+7	; 0x07
    4174:	fc 01       	movw	r30, r24
    4176:	83 81       	ldd	r24, Z+3	; 0x03
    4178:	83 34       	cpi	r24, 0x43	; 67
    417a:	b9 f4       	brne	.+46     	; 0x41aa <__DATA_REGION_LENGTH__+0x1aa>
    417c:	8e 81       	ldd	r24, Y+6	; 0x06
    417e:	9f 81       	ldd	r25, Y+7	; 0x07
    4180:	fc 01       	movw	r30, r24
    4182:	87 89       	ldd	r24, Z+23	; 0x17
    4184:	88 23       	and	r24, r24
    4186:	89 f0       	breq	.+34     	; 0x41aa <__DATA_REGION_LENGTH__+0x1aa>
    4188:	8e 81       	ldd	r24, Y+6	; 0x06
    418a:	9f 81       	ldd	r25, Y+7	; 0x07
    418c:	47 96       	adiw	r24, 0x17	; 23
    418e:	0e 94 0b 7c 	call	0xf816	; 0xf816 <atoi>
    4192:	8c a7       	std	Y+44, r24	; 0x2c
    4194:	9d a7       	std	Y+45, r25	; 0x2d
    4196:	09 c0       	rjmp	.+18     	; 0x41aa <__DATA_REGION_LENGTH__+0x1aa>
    4198:	8e e7       	ldi	r24, 0x7E	; 126
    419a:	91 e4       	ldi	r25, 0x41	; 65
    419c:	0e 94 4e 63 	call	0xc69c	; 0xc69c <sb_send_string>
    41a0:	05 c0       	rjmp	.+10     	; 0x41ac <__DATA_REGION_LENGTH__+0x1ac>
    41a2:	00 00       	nop
    41a4:	03 c0       	rjmp	.+6      	; 0x41ac <__DATA_REGION_LENGTH__+0x1ac>
    41a6:	00 00       	nop
    41a8:	01 c0       	rjmp	.+2      	; 0x41ac <__DATA_REGION_LENGTH__+0x1ac>
    41aa:	00 00       	nop
    41ac:	8e 81       	ldd	r24, Y+6	; 0x06
    41ae:	9f 81       	ldd	r25, Y+7	; 0x07
    41b0:	fc 01       	movw	r30, r24
    41b2:	11 82       	std	Z+1, r1	; 0x01
    41b4:	12 82       	std	Z+2, r1	; 0x02
    41b6:	0e 94 11 63 	call	0xc622	; 0xc622 <sb_send_NewPrompt>
    41ba:	b1 c8       	rjmp	.-3742   	; 0x331e <_Z19handleSerialBusMsgsv+0x18>
    41bc:	00 00       	nop
    41be:	c2 56       	subi	r28, 0x62	; 98
    41c0:	df 4f       	sbci	r29, 0xFF	; 255
    41c2:	cd bf       	out	0x3d, r28	; 61
    41c4:	de bf       	out	0x3e, r29	; 62
    41c6:	df 91       	pop	r29
    41c8:	cf 91       	pop	r28
    41ca:	1f 91       	pop	r17
    41cc:	0f 91       	pop	r16
    41ce:	ff 90       	pop	r15
    41d0:	ef 90       	pop	r14
    41d2:	08 95       	ret

000041d4 <_Z17handleLinkBusMsgsv>:
    41d4:	0f 93       	push	r16
    41d6:	1f 93       	push	r17
    41d8:	cf 93       	push	r28
    41da:	df 93       	push	r29
    41dc:	cd b7       	in	r28, 0x3d	; 61
    41de:	de b7       	in	r29, 0x3e	; 62
    41e0:	af 97       	sbiw	r28, 0x2f	; 47
    41e2:	cd bf       	out	0x3d, r28	; 61
    41e4:	de bf       	out	0x3e, r29	; 62
    41e6:	81 e0       	ldi	r24, 0x01	; 1
    41e8:	89 83       	std	Y+1, r24	; 0x01
    41ea:	0e 94 f8 58 	call	0xb1f0	; 0xb1f0 <_Z18nextFullLBRxBufferv>
    41ee:	8a 87       	std	Y+10, r24	; 0x0a
    41f0:	9b 87       	std	Y+11, r25	; 0x0b
    41f2:	21 e0       	ldi	r18, 0x01	; 1
    41f4:	8a 85       	ldd	r24, Y+10	; 0x0a
    41f6:	9b 85       	ldd	r25, Y+11	; 0x0b
    41f8:	89 2b       	or	r24, r25
    41fa:	09 f4       	brne	.+2      	; 0x41fe <_Z17handleLinkBusMsgsv+0x2a>
    41fc:	20 e0       	ldi	r18, 0x00	; 0
    41fe:	22 23       	and	r18, r18
    4200:	09 f4       	brne	.+2      	; 0x4204 <_Z17handleLinkBusMsgsv+0x30>
    4202:	3e c7       	rjmp	.+3708   	; 0x5080 <_Z17handleLinkBusMsgsv+0xeac>
    4204:	8a 85       	ldd	r24, Y+10	; 0x0a
    4206:	9b 85       	ldd	r25, Y+11	; 0x0b
    4208:	fc 01       	movw	r30, r24
    420a:	81 81       	ldd	r24, Z+1	; 0x01
    420c:	92 81       	ldd	r25, Z+2	; 0x02
    420e:	8c 87       	std	Y+12, r24	; 0x0c
    4210:	9d 87       	std	Y+13, r25	; 0x0d
    4212:	8c 85       	ldd	r24, Y+12	; 0x0c
    4214:	9d 85       	ldd	r25, Y+13	; 0x0d
    4216:	82 38       	cpi	r24, 0x82	; 130
    4218:	fe e1       	ldi	r31, 0x1E	; 30
    421a:	9f 07       	cpc	r25, r31
    421c:	09 f4       	brne	.+2      	; 0x4220 <_Z17handleLinkBusMsgsv+0x4c>
    421e:	92 c0       	rjmp	.+292    	; 0x4344 <_Z17handleLinkBusMsgsv+0x170>
    4220:	83 38       	cpi	r24, 0x83	; 131
    4222:	2e e1       	ldi	r18, 0x1E	; 30
    4224:	92 07       	cpc	r25, r18
    4226:	80 f5       	brcc	.+96     	; 0x4288 <_Z17handleLinkBusMsgsv+0xb4>
    4228:	81 36       	cpi	r24, 0x61	; 97
    422a:	e3 e0       	ldi	r30, 0x03	; 3
    422c:	9e 07       	cpc	r25, r30
    422e:	09 f4       	brne	.+2      	; 0x4232 <_Z17handleLinkBusMsgsv+0x5e>
    4230:	e0 c5       	rjmp	.+3008   	; 0x4df2 <_Z17handleLinkBusMsgsv+0xc1e>
    4232:	82 36       	cpi	r24, 0x62	; 98
    4234:	f3 e0       	ldi	r31, 0x03	; 3
    4236:	9f 07       	cpc	r25, r31
    4238:	78 f4       	brcc	.+30     	; 0x4258 <_Z17handleLinkBusMsgsv+0x84>
    423a:	85 31       	cpi	r24, 0x15	; 21
    423c:	23 e0       	ldi	r18, 0x03	; 3
    423e:	92 07       	cpc	r25, r18
    4240:	09 f4       	brne	.+2      	; 0x4244 <_Z17handleLinkBusMsgsv+0x70>
    4242:	50 c1       	rjmp	.+672    	; 0x44e4 <_Z17handleLinkBusMsgsv+0x310>
    4244:	8e 31       	cpi	r24, 0x1E	; 30
    4246:	e3 e0       	ldi	r30, 0x03	; 3
    4248:	9e 07       	cpc	r25, r30
    424a:	09 f4       	brne	.+2      	; 0x424e <_Z17handleLinkBusMsgsv+0x7a>
    424c:	ac c3       	rjmp	.+1880   	; 0x49a6 <_Z17handleLinkBusMsgsv+0x7d2>
    424e:	84 35       	cpi	r24, 0x54	; 84
    4250:	91 05       	cpc	r25, r1
    4252:	09 f4       	brne	.+2      	; 0x4256 <_Z17handleLinkBusMsgsv+0x82>
    4254:	fb c4       	rjmp	.+2550   	; 0x4c4c <_Z17handleLinkBusMsgsv+0xa78>
    4256:	e9 c6       	rjmp	.+3538   	; 0x502a <_Z17handleLinkBusMsgsv+0xe56>
    4258:	8f 3a       	cpi	r24, 0xAF	; 175
    425a:	f3 e0       	ldi	r31, 0x03	; 3
    425c:	9f 07       	cpc	r25, r31
    425e:	09 f4       	brne	.+2      	; 0x4262 <_Z17handleLinkBusMsgsv+0x8e>
    4260:	4c c0       	rjmp	.+152    	; 0x42fa <_Z17handleLinkBusMsgsv+0x126>
    4262:	80 3b       	cpi	r24, 0xB0	; 176
    4264:	23 e0       	ldi	r18, 0x03	; 3
    4266:	92 07       	cpc	r25, r18
    4268:	28 f4       	brcc	.+10     	; 0x4274 <_Z17handleLinkBusMsgsv+0xa0>
    426a:	84 38       	cpi	r24, 0x84	; 132
    426c:	93 40       	sbci	r25, 0x03	; 3
    426e:	09 f4       	brne	.+2      	; 0x4272 <_Z17handleLinkBusMsgsv+0x9e>
    4270:	15 c2       	rjmp	.+1066   	; 0x469c <_Z17handleLinkBusMsgsv+0x4c8>
    4272:	db c6       	rjmp	.+3510   	; 0x502a <_Z17handleLinkBusMsgsv+0xe56>
    4274:	86 3a       	cpi	r24, 0xA6	; 166
    4276:	fc e1       	ldi	r31, 0x1C	; 28
    4278:	9f 07       	cpc	r25, r31
    427a:	09 f4       	brne	.+2      	; 0x427e <_Z17handleLinkBusMsgsv+0xaa>
    427c:	59 c6       	rjmp	.+3250   	; 0x4f30 <_Z17handleLinkBusMsgsv+0xd5c>
    427e:	88 31       	cpi	r24, 0x18	; 24
    4280:	9d 41       	sbci	r25, 0x1D	; 29
    4282:	09 f4       	brne	.+2      	; 0x4286 <_Z17handleLinkBusMsgsv+0xb2>
    4284:	d8 c6       	rjmp	.+3504   	; 0x5036 <_Z17handleLinkBusMsgsv+0xe62>
    4286:	d1 c6       	rjmp	.+3490   	; 0x502a <_Z17handleLinkBusMsgsv+0xe56>
    4288:	8a 39       	cpi	r24, 0x9A	; 154
    428a:	e3 e2       	ldi	r30, 0x23	; 35
    428c:	9e 07       	cpc	r25, r30
    428e:	09 f4       	brne	.+2      	; 0x4292 <_Z17handleLinkBusMsgsv+0xbe>
    4290:	55 c0       	rjmp	.+170    	; 0x433c <_Z17handleLinkBusMsgsv+0x168>
    4292:	8b 39       	cpi	r24, 0x9B	; 155
    4294:	f3 e2       	ldi	r31, 0x23	; 35
    4296:	9f 07       	cpc	r25, r31
    4298:	c0 f4       	brcc	.+48     	; 0x42ca <_Z17handleLinkBusMsgsv+0xf6>
    429a:	8e 36       	cpi	r24, 0x6E	; 110
    429c:	21 e2       	ldi	r18, 0x21	; 33
    429e:	92 07       	cpc	r25, r18
    42a0:	09 f4       	brne	.+2      	; 0x42a4 <_Z17handleLinkBusMsgsv+0xd0>
    42a2:	c9 c6       	rjmp	.+3474   	; 0x5036 <_Z17handleLinkBusMsgsv+0xe62>
    42a4:	8f 36       	cpi	r24, 0x6F	; 111
    42a6:	e1 e2       	ldi	r30, 0x21	; 33
    42a8:	9e 07       	cpc	r25, r30
    42aa:	28 f4       	brcc	.+10     	; 0x42b6 <_Z17handleLinkBusMsgsv+0xe2>
    42ac:	81 3d       	cpi	r24, 0xD1	; 209
    42ae:	9e 41       	sbci	r25, 0x1E	; 30
    42b0:	09 f4       	brne	.+2      	; 0x42b4 <_Z17handleLinkBusMsgsv+0xe0>
    42b2:	c5 c5       	rjmp	.+2954   	; 0x4e3e <_Z17handleLinkBusMsgsv+0xc6a>
    42b4:	ba c6       	rjmp	.+3444   	; 0x502a <_Z17handleLinkBusMsgsv+0xe56>
    42b6:	8d 3a       	cpi	r24, 0xAD	; 173
    42b8:	22 e2       	ldi	r18, 0x22	; 34
    42ba:	92 07       	cpc	r25, r18
    42bc:	09 f4       	brne	.+2      	; 0x42c0 <_Z17handleLinkBusMsgsv+0xec>
    42be:	9c c0       	rjmp	.+312    	; 0x43f8 <_Z17handleLinkBusMsgsv+0x224>
    42c0:	81 3c       	cpi	r24, 0xC1	; 193
    42c2:	92 42       	sbci	r25, 0x22	; 34
    42c4:	09 f4       	brne	.+2      	; 0x42c8 <_Z17handleLinkBusMsgsv+0xf4>
    42c6:	09 c1       	rjmp	.+530    	; 0x44da <_Z17handleLinkBusMsgsv+0x306>
    42c8:	b0 c6       	rjmp	.+3424   	; 0x502a <_Z17handleLinkBusMsgsv+0xe56>
    42ca:	80 3d       	cpi	r24, 0xD0	; 208
    42cc:	f3 e2       	ldi	r31, 0x23	; 35
    42ce:	9f 07       	cpc	r25, r31
    42d0:	09 f4       	brne	.+2      	; 0x42d4 <_Z17handleLinkBusMsgsv+0x100>
    42d2:	db c3       	rjmp	.+1974   	; 0x4a8a <_Z17handleLinkBusMsgsv+0x8b6>
    42d4:	81 3d       	cpi	r24, 0xD1	; 209
    42d6:	23 e2       	ldi	r18, 0x23	; 35
    42d8:	92 07       	cpc	r25, r18
    42da:	28 f4       	brcc	.+10     	; 0x42e6 <_Z17handleLinkBusMsgsv+0x112>
    42dc:	8f 3c       	cpi	r24, 0xCF	; 207
    42de:	93 42       	sbci	r25, 0x23	; 35
    42e0:	09 f4       	brne	.+2      	; 0x42e4 <_Z17handleLinkBusMsgsv+0x110>
    42e2:	86 c6       	rjmp	.+3340   	; 0x4ff0 <_Z17handleLinkBusMsgsv+0xe1c>
    42e4:	a2 c6       	rjmp	.+3396   	; 0x502a <_Z17handleLinkBusMsgsv+0xe56>
    42e6:	87 3f       	cpi	r24, 0xF7	; 247
    42e8:	f3 e2       	ldi	r31, 0x23	; 35
    42ea:	9f 07       	cpc	r25, r31
    42ec:	09 f4       	brne	.+2      	; 0x42f0 <_Z17handleLinkBusMsgsv+0x11c>
    42ee:	6c c2       	rjmp	.+1240   	; 0x47c8 <_Z17handleLinkBusMsgsv+0x5f4>
    42f0:	8c 39       	cpi	r24, 0x9C	; 156
    42f2:	94 42       	sbci	r25, 0x24	; 36
    42f4:	09 f4       	brne	.+2      	; 0x42f8 <_Z17handleLinkBusMsgsv+0x124>
    42f6:	91 c6       	rjmp	.+3362   	; 0x501a <_Z17handleLinkBusMsgsv+0xe46>
    42f8:	98 c6       	rjmp	.+3376   	; 0x502a <_Z17handleLinkBusMsgsv+0xe56>
    42fa:	8a 85       	ldd	r24, Y+10	; 0x0a
    42fc:	9b 85       	ldd	r25, Y+11	; 0x0b
    42fe:	fc 01       	movw	r30, r24
    4300:	83 81       	ldd	r24, Z+3	; 0x03
    4302:	88 23       	and	r24, r24
    4304:	09 f4       	brne	.+2      	; 0x4308 <_Z17handleLinkBusMsgsv+0x134>
    4306:	99 c6       	rjmp	.+3378   	; 0x503a <_Z17handleLinkBusMsgsv+0xe66>
    4308:	8a 85       	ldd	r24, Y+10	; 0x0a
    430a:	9b 85       	ldd	r25, Y+11	; 0x0b
    430c:	03 96       	adiw	r24, 0x03	; 3
    430e:	0e 94 0b 7c 	call	0xf816	; 0xf816 <atoi>
    4312:	21 e0       	ldi	r18, 0x01	; 1
    4314:	89 2b       	or	r24, r25
    4316:	09 f4       	brne	.+2      	; 0x431a <_Z17handleLinkBusMsgsv+0x146>
    4318:	20 e0       	ldi	r18, 0x00	; 0
    431a:	2e 87       	std	Y+14, r18	; 0x0e
    431c:	0e 94 33 2c 	call	0x5866	; 0x5866 <_Z12suspendEventv>
    4320:	0e 94 29 5a 	call	0xb452	; 0xb452 <_Z15linkbus_disablev>
    4324:	10 92 09 40 	sts	0x4009, r1	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    4328:	9e 85       	ldd	r25, Y+14	; 0x0e
    432a:	81 e0       	ldi	r24, 0x01	; 1
    432c:	89 27       	eor	r24, r25
    432e:	88 23       	and	r24, r24
    4330:	09 f4       	brne	.+2      	; 0x4334 <_Z17handleLinkBusMsgsv+0x160>
    4332:	83 c6       	rjmp	.+3334   	; 0x503a <_Z17handleLinkBusMsgsv+0xe66>
    4334:	80 e0       	ldi	r24, 0x00	; 0
    4336:	0e 94 2b 4e 	call	0x9c56	; 0x9c56 <_Z10wifi_powerb>
    433a:	7f c6       	rjmp	.+3326   	; 0x503a <_Z17handleLinkBusMsgsv+0xe66>
    433c:	82 e0       	ldi	r24, 0x02	; 2
    433e:	0e 94 41 29 	call	0x5282	; 0x5282 <_Z8wdt_init7WDReset>
    4342:	ff cf       	rjmp	.-2      	; 0x4342 <_Z17handleLinkBusMsgsv+0x16e>
    4344:	8a 85       	ldd	r24, Y+10	; 0x0a
    4346:	9b 85       	ldd	r25, Y+11	; 0x0b
    4348:	fc 01       	movw	r30, r24
    434a:	83 81       	ldd	r24, Z+3	; 0x03
    434c:	8f 87       	std	Y+15, r24	; 0x0f
    434e:	81 e0       	ldi	r24, 0x01	; 1
    4350:	80 93 0a 40 	sts	0x400A, r24	; 0x80400a <_ZL13g_wifi_active>
    4354:	8f 85       	ldd	r24, Y+15	; 0x0f
    4356:	8a 35       	cpi	r24, 0x5A	; 90
    4358:	21 f4       	brne	.+8      	; 0x4362 <_Z17handleLinkBusMsgsv+0x18e>
    435a:	88 e7       	ldi	r24, 0x78	; 120
    435c:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    4360:	6e c6       	rjmp	.+3292   	; 0x503e <_Z17handleLinkBusMsgsv+0xe6a>
    4362:	8f 85       	ldd	r24, Y+15	; 0x0f
    4364:	80 33       	cpi	r24, 0x30	; 48
    4366:	a9 f5       	brne	.+106    	; 0x43d2 <_Z17handleLinkBusMsgsv+0x1fe>
    4368:	80 91 97 47 	lds	r24, 0x4797	; 0x804797 <g_waiting_for_next_event>
    436c:	88 23       	and	r24, r24
    436e:	39 f0       	breq	.+14     	; 0x437e <_Z17handleLinkBusMsgsv+0x1aa>
    4370:	45 ec       	ldi	r20, 0xC5	; 197
    4372:	52 e4       	ldi	r21, 0x42	; 66
    4374:	69 e5       	ldi	r22, 0x59	; 89
    4376:	70 e4       	ldi	r23, 0x40	; 64
    4378:	83 e0       	ldi	r24, 0x03	; 3
    437a:	0e 94 bb 5a 	call	0xb576	; 0xb576 <_Z11lb_send_msg13LBMessageTypePKcPc>
    437e:	80 e0       	ldi	r24, 0x00	; 0
    4380:	90 e0       	ldi	r25, 0x00	; 0
    4382:	0e 94 56 06 	call	0xcac	; 0xcac <time>
    4386:	dc 01       	movw	r26, r24
    4388:	cb 01       	movw	r24, r22
    438a:	2b 2f       	mov	r18, r27
    438c:	2f 93       	push	r18
    438e:	2a 2f       	mov	r18, r26
    4390:	2f 93       	push	r18
    4392:	29 2f       	mov	r18, r25
    4394:	2f 93       	push	r18
    4396:	8f 93       	push	r24
    4398:	8d e5       	ldi	r24, 0x5D	; 93
    439a:	90 e4       	ldi	r25, 0x40	; 64
    439c:	89 2f       	mov	r24, r25
    439e:	8f 93       	push	r24
    43a0:	8d e5       	ldi	r24, 0x5D	; 93
    43a2:	90 e4       	ldi	r25, 0x40	; 64
    43a4:	8f 93       	push	r24
    43a6:	89 e1       	ldi	r24, 0x19	; 25
    43a8:	97 e4       	ldi	r25, 0x47	; 71
    43aa:	89 2f       	mov	r24, r25
    43ac:	8f 93       	push	r24
    43ae:	89 e1       	ldi	r24, 0x19	; 25
    43b0:	97 e4       	ldi	r25, 0x47	; 71
    43b2:	8f 93       	push	r24
    43b4:	0e 94 ba 7c 	call	0xf974	; 0xf974 <sprintf>
    43b8:	8d b7       	in	r24, 0x3d	; 61
    43ba:	9e b7       	in	r25, 0x3e	; 62
    43bc:	08 96       	adiw	r24, 0x08	; 8
    43be:	cd bf       	out	0x3d, r28	; 61
    43c0:	de bf       	out	0x3e, r29	; 62
    43c2:	49 e1       	ldi	r20, 0x19	; 25
    43c4:	57 e4       	ldi	r21, 0x47	; 71
    43c6:	61 e6       	ldi	r22, 0x61	; 97
    43c8:	70 e4       	ldi	r23, 0x40	; 64
    43ca:	83 e0       	ldi	r24, 0x03	; 3
    43cc:	0e 94 bb 5a 	call	0xb576	; 0xb576 <_Z11lb_send_msg13LBMessageTypePKcPc>
    43d0:	36 c6       	rjmp	.+3180   	; 0x503e <_Z17handleLinkBusMsgsv+0xe6a>
    43d2:	8f 85       	ldd	r24, Y+15	; 0x0f
    43d4:	83 33       	cpi	r24, 0x33	; 51
    43d6:	09 f0       	breq	.+2      	; 0x43da <_Z17handleLinkBusMsgsv+0x206>
    43d8:	32 c6       	rjmp	.+3172   	; 0x503e <_Z17handleLinkBusMsgsv+0xe6a>
    43da:	10 92 5b 47 	sts	0x475B, r1	; 0x80475b <_ZL19g_wifi_enable_delay>
    43de:	81 e0       	ldi	r24, 0x01	; 1
    43e0:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    43e4:	10 92 97 47 	sts	0x4797, r1	; 0x804797 <g_waiting_for_next_event>
    43e8:	10 92 96 47 	sts	0x4796, r1	; 0x804796 <g_check_for_next_event>
    43ec:	10 92 0a 40 	sts	0x400A, r1	; 0x80400a <_ZL13g_wifi_active>
    43f0:	81 e0       	ldi	r24, 0x01	; 1
    43f2:	80 93 5c 47 	sts	0x475C, r24	; 0x80475c <_ZL20g_shutting_down_wifi>
    43f6:	23 c6       	rjmp	.+3142   	; 0x503e <_Z17handleLinkBusMsgsv+0xe6a>
    43f8:	8a 85       	ldd	r24, Y+10	; 0x0a
    43fa:	9b 85       	ldd	r25, Y+11	; 0x0b
    43fc:	fc 01       	movw	r30, r24
    43fe:	83 81       	ldd	r24, Z+3	; 0x03
    4400:	88 23       	and	r24, r24
    4402:	09 f4       	brne	.+2      	; 0x4406 <_Z17handleLinkBusMsgsv+0x232>
    4404:	1e c6       	rjmp	.+3132   	; 0x5042 <_Z17handleLinkBusMsgsv+0xe6e>
    4406:	8a 85       	ldd	r24, Y+10	; 0x0a
    4408:	9b 85       	ldd	r25, Y+11	; 0x0b
    440a:	fc 01       	movw	r30, r24
    440c:	83 81       	ldd	r24, Z+3	; 0x03
    440e:	8d 34       	cpi	r24, 0x4D	; 77
    4410:	81 f4       	brne	.+32     	; 0x4432 <_Z17handleLinkBusMsgsv+0x25e>
    4412:	8a 85       	ldd	r24, Y+10	; 0x0a
    4414:	9b 85       	ldd	r25, Y+11	; 0x0b
    4416:	fc 01       	movw	r30, r24
    4418:	80 8d       	ldd	r24, Z+24	; 0x18
    441a:	88 23       	and	r24, r24
    441c:	51 f0       	breq	.+20     	; 0x4432 <_Z17handleLinkBusMsgsv+0x25e>
    441e:	8a 85       	ldd	r24, Y+10	; 0x0a
    4420:	9b 85       	ldd	r25, Y+11	; 0x0b
    4422:	48 96       	adiw	r24, 0x18	; 24
    4424:	0e 94 0b 7c 	call	0xf816	; 0xf816 <atoi>
    4428:	80 93 bf 47 	sts	0x47BF, r24	; 0x8047bf <_ZZ17handleLinkBusMsgsvE6pwr_mW>
    442c:	90 93 c0 47 	sts	0x47C0, r25	; 0x8047c0 <_ZZ17handleLinkBusMsgsvE6pwr_mW+0x1>
    4430:	09 c0       	rjmp	.+18     	; 0x4444 <_Z17handleLinkBusMsgsv+0x270>
    4432:	8a 85       	ldd	r24, Y+10	; 0x0a
    4434:	9b 85       	ldd	r25, Y+11	; 0x0b
    4436:	03 96       	adiw	r24, 0x03	; 3
    4438:	0e 94 0b 7c 	call	0xf816	; 0xf816 <atoi>
    443c:	80 93 bf 47 	sts	0x47BF, r24	; 0x8047bf <_ZZ17handleLinkBusMsgsvE6pwr_mW>
    4440:	90 93 c0 47 	sts	0x47C0, r25	; 0x8047c0 <_ZZ17handleLinkBusMsgsvE6pwr_mW+0x1>
    4444:	0e 94 2d 70 	call	0xe05a	; 0xe05a <_Z12txGetPowerMwv>
    4448:	9c 01       	movw	r18, r24
    444a:	80 91 bf 47 	lds	r24, 0x47BF	; 0x8047bf <_ZZ17handleLinkBusMsgsvE6pwr_mW>
    444e:	90 91 c0 47 	lds	r25, 0x47C0	; 0x8047c0 <_ZZ17handleLinkBusMsgsvE6pwr_mW+0x1>
    4452:	41 e0       	ldi	r20, 0x01	; 1
    4454:	28 17       	cp	r18, r24
    4456:	39 07       	cpc	r19, r25
    4458:	09 f4       	brne	.+2      	; 0x445c <_Z17handleLinkBusMsgsv+0x288>
    445a:	40 e0       	ldi	r20, 0x00	; 0
    445c:	44 23       	and	r20, r20
    445e:	b9 f1       	breq	.+110    	; 0x44ce <_Z17handleLinkBusMsgsv+0x2fa>
    4460:	60 e0       	ldi	r22, 0x00	; 0
    4462:	70 e0       	ldi	r23, 0x00	; 0
    4464:	8f eb       	ldi	r24, 0xBF	; 191
    4466:	97 e4       	ldi	r25, 0x47	; 71
    4468:	0e 94 38 70 	call	0xe070	; 0xe070 <_Z15txSetParametersPjPb>
    446c:	88 8b       	std	Y+16, r24	; 0x10
    446e:	88 89       	ldd	r24, Y+16	; 0x10
    4470:	88 23       	and	r24, r24
    4472:	21 f0       	breq	.+8      	; 0x447c <_Z17handleLinkBusMsgsv+0x2a8>
    4474:	88 89       	ldd	r24, Y+16	; 0x10
    4476:	80 93 4b 47 	sts	0x474B, r24	; 0x80474b <_ZL17g_last_error_code>
    447a:	05 c0       	rjmp	.+10     	; 0x4486 <_Z17handleLinkBusMsgsv+0x2b2>
    447c:	80 91 c1 47 	lds	r24, 0x47C1	; 0x8047c1 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4480:	8f 5f       	subi	r24, 0xFF	; 255
    4482:	80 93 c1 47 	sts	0x47C1, r24	; 0x8047c1 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4486:	80 91 bf 47 	lds	r24, 0x47BF	; 0x8047bf <_ZZ17handleLinkBusMsgsvE6pwr_mW>
    448a:	90 91 c0 47 	lds	r25, 0x47C0	; 0x8047c0 <_ZZ17handleLinkBusMsgsvE6pwr_mW+0x1>
    448e:	29 2f       	mov	r18, r25
    4490:	2f 93       	push	r18
    4492:	8f 93       	push	r24
    4494:	87 ec       	ldi	r24, 0xC7	; 199
    4496:	92 e4       	ldi	r25, 0x42	; 66
    4498:	89 2f       	mov	r24, r25
    449a:	8f 93       	push	r24
    449c:	87 ec       	ldi	r24, 0xC7	; 199
    449e:	92 e4       	ldi	r25, 0x42	; 66
    44a0:	8f 93       	push	r24
    44a2:	89 e1       	ldi	r24, 0x19	; 25
    44a4:	97 e4       	ldi	r25, 0x47	; 71
    44a6:	89 2f       	mov	r24, r25
    44a8:	8f 93       	push	r24
    44aa:	89 e1       	ldi	r24, 0x19	; 25
    44ac:	97 e4       	ldi	r25, 0x47	; 71
    44ae:	8f 93       	push	r24
    44b0:	0e 94 ba 7c 	call	0xf974	; 0xf974 <sprintf>
    44b4:	0f 90       	pop	r0
    44b6:	0f 90       	pop	r0
    44b8:	0f 90       	pop	r0
    44ba:	0f 90       	pop	r0
    44bc:	0f 90       	pop	r0
    44be:	0f 90       	pop	r0
    44c0:	49 e1       	ldi	r20, 0x19	; 25
    44c2:	57 e4       	ldi	r21, 0x47	; 71
    44c4:	6c ec       	ldi	r22, 0xCC	; 204
    44c6:	72 e4       	ldi	r23, 0x42	; 66
    44c8:	83 e0       	ldi	r24, 0x03	; 3
    44ca:	0e 94 bb 5a 	call	0xb576	; 0xb576 <_Z11lb_send_msg13LBMessageTypePKcPc>
    44ce:	80 91 c2 47 	lds	r24, 0x47C2	; 0x8047c2 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    44d2:	8f 5f       	subi	r24, 0xFF	; 255
    44d4:	80 93 c2 47 	sts	0x47C2, r24	; 0x8047c2 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    44d8:	b4 c5       	rjmp	.+2920   	; 0x5042 <_Z17handleLinkBusMsgsv+0xe6e>
    44da:	8b ea       	ldi	r24, 0xAB	; 171
    44dc:	97 e4       	ldi	r25, 0x47	; 71
    44de:	0e 94 ba 47 	call	0x8f74	; 0x8f74 <_ZN13EepromManager13saveAllEEPROMEv>
    44e2:	c0 c5       	rjmp	.+2944   	; 0x5064 <_Z17handleLinkBusMsgsv+0xe90>
    44e4:	8a 85       	ldd	r24, Y+10	; 0x0a
    44e6:	9b 85       	ldd	r25, Y+11	; 0x0b
    44e8:	fc 01       	movw	r30, r24
    44ea:	83 81       	ldd	r24, Z+3	; 0x03
    44ec:	89 8b       	std	Y+17, r24	; 0x11
    44ee:	89 89       	ldd	r24, Y+17	; 0x11
    44f0:	81 33       	cpi	r24, 0x31	; 49
    44f2:	21 f0       	breq	.+8      	; 0x44fc <_Z17handleLinkBusMsgsv+0x328>
    44f4:	89 89       	ldd	r24, Y+17	; 0x11
    44f6:	82 33       	cpi	r24, 0x32	; 50
    44f8:	09 f0       	breq	.+2      	; 0x44fc <_Z17handleLinkBusMsgsv+0x328>
    44fa:	c0 c0       	rjmp	.+384    	; 0x467c <_Z17handleLinkBusMsgsv+0x4a8>
    44fc:	80 91 51 47 	lds	r24, 0x4751	; 0x804751 <g_antenna_connect_state>
    4500:	82 30       	cpi	r24, 0x02	; 2
    4502:	41 f0       	breq	.+16     	; 0x4514 <_Z17handleLinkBusMsgsv+0x340>
    4504:	90 91 40 40 	lds	r25, 0x4040	; 0x804040 <g_tx_power_is_zero>
    4508:	81 e0       	ldi	r24, 0x01	; 1
    450a:	89 27       	eor	r24, r25
    450c:	88 23       	and	r24, r24
    450e:	11 f0       	breq	.+4      	; 0x4514 <_Z17handleLinkBusMsgsv+0x340>
    4510:	81 e0       	ldi	r24, 0x01	; 1
    4512:	01 c0       	rjmp	.+2      	; 0x4516 <_Z17handleLinkBusMsgsv+0x342>
    4514:	80 e0       	ldi	r24, 0x00	; 0
    4516:	88 23       	and	r24, r24
    4518:	21 f0       	breq	.+8      	; 0x4522 <_Z17handleLinkBusMsgsv+0x34e>
    451a:	87 ef       	ldi	r24, 0xF7	; 247
    451c:	80 93 4b 47 	sts	0x474B, r24	; 0x80474b <_ZL17g_last_error_code>
    4520:	bb c0       	rjmp	.+374    	; 0x4698 <_Z17handleLinkBusMsgsv+0x4c4>
    4522:	89 89       	ldd	r24, Y+17	; 0x11
    4524:	81 33       	cpi	r24, 0x31	; 49
    4526:	09 f0       	breq	.+2      	; 0x452a <_Z17handleLinkBusMsgsv+0x356>
    4528:	64 c0       	rjmp	.+200    	; 0x45f2 <_Z17handleLinkBusMsgsv+0x41e>
    452a:	80 91 51 47 	lds	r24, 0x4751	; 0x804751 <g_antenna_connect_state>
    452e:	82 30       	cpi	r24, 0x02	; 2
    4530:	21 f0       	breq	.+8      	; 0x453a <_Z17handleLinkBusMsgsv+0x366>
    4532:	80 91 40 40 	lds	r24, 0x4040	; 0x804040 <g_tx_power_is_zero>
    4536:	88 23       	and	r24, r24
    4538:	11 f0       	breq	.+4      	; 0x453e <_Z17handleLinkBusMsgsv+0x36a>
    453a:	81 e0       	ldi	r24, 0x01	; 1
    453c:	01 c0       	rjmp	.+2      	; 0x4540 <_Z17handleLinkBusMsgsv+0x36c>
    453e:	80 e0       	ldi	r24, 0x00	; 0
    4540:	88 23       	and	r24, r24
    4542:	09 f4       	brne	.+2      	; 0x4546 <_Z17handleLinkBusMsgsv+0x372>
    4544:	52 c0       	rjmp	.+164    	; 0x45ea <_Z17handleLinkBusMsgsv+0x416>
    4546:	10 92 94 47 	sts	0x4794, r1	; 0x804794 <g_event_enabled>
    454a:	81 e0       	ldi	r24, 0x01	; 1
    454c:	8a a7       	std	Y+42, r24	; 0x2a
    454e:	ce 01       	movw	r24, r28
    4550:	8a 96       	adiw	r24, 0x2a	; 42
    4552:	40 e0       	ldi	r20, 0x00	; 0
    4554:	50 e0       	ldi	r21, 0x00	; 0
    4556:	bc 01       	movw	r22, r24
    4558:	8e e5       	ldi	r24, 0x5E	; 94
    455a:	97 e4       	ldi	r25, 0x47	; 71
    455c:	0e 94 44 5b 	call	0xb688	; 0xb688 <_Z9makeMorsePcPbS0_>
    4560:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    4564:	0e 94 4c 29 	call	0x5298	; 0x5298 <_Z13throttleValueh>
    4568:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    456c:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    4570:	81 e0       	ldi	r24, 0x01	; 1
    4572:	90 e0       	ldi	r25, 0x00	; 0
    4574:	a0 e0       	ldi	r26, 0x00	; 0
    4576:	b0 e0       	ldi	r27, 0x00	; 0
    4578:	80 93 8c 47 	sts	0x478C, r24	; 0x80478c <g_event_start_epoch>
    457c:	90 93 8d 47 	sts	0x478D, r25	; 0x80478d <g_event_start_epoch+0x1>
    4580:	a0 93 8e 47 	sts	0x478E, r26	; 0x80478e <g_event_start_epoch+0x2>
    4584:	b0 93 8f 47 	sts	0x478F, r27	; 0x80478f <g_event_start_epoch+0x3>
    4588:	8f ef       	ldi	r24, 0xFF	; 255
    458a:	9f ef       	ldi	r25, 0xFF	; 255
    458c:	dc 01       	movw	r26, r24
    458e:	80 93 90 47 	sts	0x4790, r24	; 0x804790 <g_event_finish_epoch>
    4592:	90 93 91 47 	sts	0x4791, r25	; 0x804791 <g_event_finish_epoch+0x1>
    4596:	a0 93 92 47 	sts	0x4792, r26	; 0x804792 <g_event_finish_epoch+0x2>
    459a:	b0 93 93 47 	sts	0x4793, r27	; 0x804793 <g_event_finish_epoch+0x3>
    459e:	8f e0       	ldi	r24, 0x0F	; 15
    45a0:	97 e2       	ldi	r25, 0x27	; 39
    45a2:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_on_air_seconds>
    45a6:	90 93 0e 40 	sts	0x400E, r25	; 0x80400e <g_on_air_seconds+0x1>
    45aa:	10 92 0f 40 	sts	0x400F, r1	; 0x80400f <g_off_air_seconds>
    45ae:	10 92 10 40 	sts	0x4010, r1	; 0x804010 <g_off_air_seconds+0x1>
    45b2:	8f e0       	ldi	r24, 0x0F	; 15
    45b4:	97 e2       	ldi	r25, 0x27	; 39
    45b6:	a0 e0       	ldi	r26, 0x00	; 0
    45b8:	b0 e0       	ldi	r27, 0x00	; 0
    45ba:	80 93 54 47 	sts	0x4754, r24	; 0x804754 <_ZL12g_on_the_air>
    45be:	90 93 55 47 	sts	0x4755, r25	; 0x804755 <_ZL12g_on_the_air+0x1>
    45c2:	a0 93 56 47 	sts	0x4756, r26	; 0x804756 <_ZL12g_on_the_air+0x2>
    45c6:	b0 93 57 47 	sts	0x4757, r27	; 0x804757 <_ZL12g_on_the_air+0x3>
    45ca:	8f ef       	ldi	r24, 0xFF	; 255
    45cc:	9f ef       	ldi	r25, 0xFF	; 255
    45ce:	80 93 58 47 	sts	0x4758, r24	; 0x804758 <_ZL26g_sendID_seconds_countdown>
    45d2:	90 93 59 47 	sts	0x4759, r25	; 0x804759 <_ZL26g_sendID_seconds_countdown+0x1>
    45d6:	81 e0       	ldi	r24, 0x01	; 1
    45d8:	80 93 95 47 	sts	0x4795, r24	; 0x804795 <g_event_commenced>
    45dc:	81 e0       	ldi	r24, 0x01	; 1
    45de:	80 93 94 47 	sts	0x4794, r24	; 0x804794 <g_event_enabled>
    45e2:	8d ef       	ldi	r24, 0xFD	; 253
    45e4:	80 93 4c 47 	sts	0x474C, r24	; 0x80474c <_ZL18g_last_status_code>
    45e8:	57 c0       	rjmp	.+174    	; 0x4698 <_Z17handleLinkBusMsgsv+0x4c4>
    45ea:	87 ef       	ldi	r24, 0xF7	; 247
    45ec:	80 93 4b 47 	sts	0x474B, r24	; 0x80474b <_ZL17g_last_error_code>
    45f0:	53 c0       	rjmp	.+166    	; 0x4698 <_Z17handleLinkBusMsgsv+0x4c4>
    45f2:	89 89       	ldd	r24, Y+17	; 0x11
    45f4:	82 33       	cpi	r24, 0x32	; 50
    45f6:	09 f0       	breq	.+2      	; 0x45fa <_Z17handleLinkBusMsgsv+0x426>
    45f8:	4f c0       	rjmp	.+158    	; 0x4698 <_Z17handleLinkBusMsgsv+0x4c4>
    45fa:	80 91 c2 47 	lds	r24, 0x47C2	; 0x8047c2 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    45fe:	88 23       	and	r24, r24
    4600:	41 f0       	breq	.+16     	; 0x4612 <_Z17handleLinkBusMsgsv+0x43e>
    4602:	80 91 c2 47 	lds	r24, 0x47C2	; 0x8047c2 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    4606:	8c 30       	cpi	r24, 0x0C	; 12
    4608:	20 f4       	brcc	.+8      	; 0x4612 <_Z17handleLinkBusMsgsv+0x43e>
    460a:	8d ec       	ldi	r24, 0xCD	; 205
    460c:	80 93 4b 47 	sts	0x474B, r24	; 0x80474b <_ZL17g_last_error_code>
    4610:	43 c0       	rjmp	.+134    	; 0x4698 <_Z17handleLinkBusMsgsv+0x4c4>
    4612:	80 91 c1 47 	lds	r24, 0x47C1	; 0x8047c1 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4616:	88 23       	and	r24, r24
    4618:	51 f0       	breq	.+20     	; 0x462e <_Z17handleLinkBusMsgsv+0x45a>
    461a:	80 91 94 47 	lds	r24, 0x4794	; 0x804794 <g_event_enabled>
    461e:	88 23       	and	r24, r24
    4620:	11 f0       	breq	.+4      	; 0x4626 <_Z17handleLinkBusMsgsv+0x452>
    4622:	0e 94 33 2c 	call	0x5866	; 0x5866 <_Z12suspendEventv>
    4626:	8b ea       	ldi	r24, 0xAB	; 171
    4628:	97 e4       	ldi	r25, 0x47	; 71
    462a:	0e 94 ba 47 	call	0x8f74	; 0x8f74 <_ZN13EepromManager13saveAllEEPROMEv>
    462e:	90 91 94 47 	lds	r25, 0x4794	; 0x804794 <g_event_enabled>
    4632:	81 e0       	ldi	r24, 0x01	; 1
    4634:	89 27       	eor	r24, r25
    4636:	88 23       	and	r24, r24
    4638:	c9 f0       	breq	.+50     	; 0x466c <_Z17handleLinkBusMsgsv+0x498>
    463a:	1b a6       	std	Y+43, r1	; 0x2b
    463c:	ce 01       	movw	r24, r28
    463e:	8b 96       	adiw	r24, 0x2b	; 43
    4640:	0e 94 a6 29 	call	0x534c	; 0x534c <_Z11launchEventP2SC>
    4644:	80 93 4b 47 	sts	0x474B, r24	; 0x80474b <_ZL17g_last_error_code>
    4648:	80 91 98 47 	lds	r24, 0x4798	; 0x804798 <_ZL13g_go_to_sleep>
    464c:	88 23       	and	r24, r24
    464e:	31 f0       	breq	.+12     	; 0x465c <_Z17handleLinkBusMsgsv+0x488>
    4650:	80 91 5d 47 	lds	r24, 0x475D	; 0x80475d <_ZL11g_sleepType>
    4654:	88 23       	and	r24, r24
    4656:	11 f0       	breq	.+4      	; 0x465c <_Z17handleLinkBusMsgsv+0x488>
    4658:	81 e0       	ldi	r24, 0x01	; 1
    465a:	01 c0       	rjmp	.+2      	; 0x465e <_Z17handleLinkBusMsgsv+0x48a>
    465c:	80 e0       	ldi	r24, 0x00	; 0
    465e:	88 23       	and	r24, r24
    4660:	29 f0       	breq	.+10     	; 0x466c <_Z17handleLinkBusMsgsv+0x498>
    4662:	83 e0       	ldi	r24, 0x03	; 3
    4664:	80 93 5d 47 	sts	0x475D, r24	; 0x80475d <_ZL11g_sleepType>
    4668:	10 92 98 47 	sts	0x4798, r1	; 0x804798 <_ZL13g_go_to_sleep>
    466c:	8c e3       	ldi	r24, 0x3C	; 60
    466e:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    4672:	10 92 c1 47 	sts	0x47C1, r1	; 0x8047c1 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4676:	10 92 c2 47 	sts	0x47C2, r1	; 0x8047c2 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    467a:	0e c0       	rjmp	.+28     	; 0x4698 <_Z17handleLinkBusMsgsv+0x4c4>
    467c:	89 89       	ldd	r24, Y+17	; 0x11
    467e:	80 33       	cpi	r24, 0x30	; 48
    4680:	09 f0       	breq	.+2      	; 0x4684 <_Z17handleLinkBusMsgsv+0x4b0>
    4682:	e1 c4       	rjmp	.+2498   	; 0x5046 <_Z17handleLinkBusMsgsv+0xe72>
    4684:	0e 94 33 2c 	call	0x5866	; 0x5866 <_Z12suspendEventv>
    4688:	10 92 c1 47 	sts	0x47C1, r1	; 0x8047c1 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    468c:	10 92 c2 47 	sts	0x47C2, r1	; 0x8047c2 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    4690:	8c ee       	ldi	r24, 0xEC	; 236
    4692:	80 93 4c 47 	sts	0x474C, r24	; 0x80474c <_ZL18g_last_status_code>
    4696:	d7 c4       	rjmp	.+2478   	; 0x5046 <_Z17handleLinkBusMsgsv+0xe72>
    4698:	00 00       	nop
    469a:	d5 c4       	rjmp	.+2474   	; 0x5046 <_Z17handleLinkBusMsgsv+0xe72>
    469c:	1a 82       	std	Y+2, r1	; 0x02
    469e:	1b 82       	std	Y+3, r1	; 0x03
    46a0:	1c 82       	std	Y+4, r1	; 0x04
    46a2:	1d 82       	std	Y+5, r1	; 0x05
    46a4:	8a 85       	ldd	r24, Y+10	; 0x0a
    46a6:	9b 85       	ldd	r25, Y+11	; 0x0b
    46a8:	fc 01       	movw	r30, r24
    46aa:	83 81       	ldd	r24, Z+3	; 0x03
    46ac:	83 35       	cpi	r24, 0x53	; 83
    46ae:	09 f0       	breq	.+2      	; 0x46b2 <_Z17handleLinkBusMsgsv+0x4de>
    46b0:	47 c0       	rjmp	.+142    	; 0x4740 <_Z17handleLinkBusMsgsv+0x56c>
    46b2:	8a 85       	ldd	r24, Y+10	; 0x0a
    46b4:	9b 85       	ldd	r25, Y+11	; 0x0b
    46b6:	fc 01       	movw	r30, r24
    46b8:	80 8d       	ldd	r24, Z+24	; 0x18
    46ba:	88 23       	and	r24, r24
    46bc:	59 f0       	breq	.+22     	; 0x46d4 <_Z17handleLinkBusMsgsv+0x500>
    46be:	8a 85       	ldd	r24, Y+10	; 0x0a
    46c0:	9b 85       	ldd	r25, Y+11	; 0x0b
    46c2:	48 96       	adiw	r24, 0x18	; 24
    46c4:	0e 94 29 7c 	call	0xf852	; 0xf852 <atol>
    46c8:	dc 01       	movw	r26, r24
    46ca:	cb 01       	movw	r24, r22
    46cc:	8a 83       	std	Y+2, r24	; 0x02
    46ce:	9b 83       	std	Y+3, r25	; 0x03
    46d0:	ac 83       	std	Y+4, r26	; 0x04
    46d2:	bd 83       	std	Y+5, r27	; 0x05
    46d4:	80 91 8c 47 	lds	r24, 0x478C	; 0x80478c <g_event_start_epoch>
    46d8:	90 91 8d 47 	lds	r25, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    46dc:	a0 91 8e 47 	lds	r26, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    46e0:	b0 91 8f 47 	lds	r27, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    46e4:	61 e0       	ldi	r22, 0x01	; 1
    46e6:	2a 81       	ldd	r18, Y+2	; 0x02
    46e8:	3b 81       	ldd	r19, Y+3	; 0x03
    46ea:	4c 81       	ldd	r20, Y+4	; 0x04
    46ec:	5d 81       	ldd	r21, Y+5	; 0x05
    46ee:	28 17       	cp	r18, r24
    46f0:	39 07       	cpc	r19, r25
    46f2:	4a 07       	cpc	r20, r26
    46f4:	5b 07       	cpc	r21, r27
    46f6:	09 f4       	brne	.+2      	; 0x46fa <_Z17handleLinkBusMsgsv+0x526>
    46f8:	60 e0       	ldi	r22, 0x00	; 0
    46fa:	66 23       	and	r22, r22
    46fc:	d9 f0       	breq	.+54     	; 0x4734 <_Z17handleLinkBusMsgsv+0x560>
    46fe:	8a 81       	ldd	r24, Y+2	; 0x02
    4700:	9b 81       	ldd	r25, Y+3	; 0x03
    4702:	ac 81       	ldd	r26, Y+4	; 0x04
    4704:	bd 81       	ldd	r27, Y+5	; 0x05
    4706:	80 93 8c 47 	sts	0x478C, r24	; 0x80478c <g_event_start_epoch>
    470a:	90 93 8d 47 	sts	0x478D, r25	; 0x80478d <g_event_start_epoch+0x1>
    470e:	a0 93 8e 47 	sts	0x478E, r26	; 0x80478e <g_event_start_epoch+0x2>
    4712:	b0 93 8f 47 	sts	0x478F, r27	; 0x80478f <g_event_start_epoch+0x3>
    4716:	80 e0       	ldi	r24, 0x00	; 0
    4718:	90 e0       	ldi	r25, 0x00	; 0
    471a:	0e 94 53 40 	call	0x80a6	; 0x80a6 <ds3231_get_epoch>
    471e:	dc 01       	movw	r26, r24
    4720:	cb 01       	movw	r24, r22
    4722:	bc 01       	movw	r22, r24
    4724:	cd 01       	movw	r24, r26
    4726:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <set_system_time>
    472a:	80 91 c1 47 	lds	r24, 0x47C1	; 0x8047c1 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    472e:	8f 5f       	subi	r24, 0xFF	; 255
    4730:	80 93 c1 47 	sts	0x47C1, r24	; 0x8047c1 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4734:	80 91 c2 47 	lds	r24, 0x47C2	; 0x8047c2 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    4738:	8f 5f       	subi	r24, 0xFF	; 255
    473a:	80 93 c2 47 	sts	0x47C2, r24	; 0x8047c2 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    473e:	85 c4       	rjmp	.+2314   	; 0x504a <_Z17handleLinkBusMsgsv+0xe76>
    4740:	8a 85       	ldd	r24, Y+10	; 0x0a
    4742:	9b 85       	ldd	r25, Y+11	; 0x0b
    4744:	fc 01       	movw	r30, r24
    4746:	83 81       	ldd	r24, Z+3	; 0x03
    4748:	86 34       	cpi	r24, 0x46	; 70
    474a:	09 f0       	breq	.+2      	; 0x474e <_Z17handleLinkBusMsgsv+0x57a>
    474c:	7e c4       	rjmp	.+2300   	; 0x504a <_Z17handleLinkBusMsgsv+0xe76>
    474e:	8a 85       	ldd	r24, Y+10	; 0x0a
    4750:	9b 85       	ldd	r25, Y+11	; 0x0b
    4752:	fc 01       	movw	r30, r24
    4754:	80 8d       	ldd	r24, Z+24	; 0x18
    4756:	88 23       	and	r24, r24
    4758:	59 f0       	breq	.+22     	; 0x4770 <_Z17handleLinkBusMsgsv+0x59c>
    475a:	8a 85       	ldd	r24, Y+10	; 0x0a
    475c:	9b 85       	ldd	r25, Y+11	; 0x0b
    475e:	48 96       	adiw	r24, 0x18	; 24
    4760:	0e 94 29 7c 	call	0xf852	; 0xf852 <atol>
    4764:	dc 01       	movw	r26, r24
    4766:	cb 01       	movw	r24, r22
    4768:	8a 83       	std	Y+2, r24	; 0x02
    476a:	9b 83       	std	Y+3, r25	; 0x03
    476c:	ac 83       	std	Y+4, r26	; 0x04
    476e:	bd 83       	std	Y+5, r27	; 0x05
    4770:	80 91 90 47 	lds	r24, 0x4790	; 0x804790 <g_event_finish_epoch>
    4774:	90 91 91 47 	lds	r25, 0x4791	; 0x804791 <g_event_finish_epoch+0x1>
    4778:	a0 91 92 47 	lds	r26, 0x4792	; 0x804792 <g_event_finish_epoch+0x2>
    477c:	b0 91 93 47 	lds	r27, 0x4793	; 0x804793 <g_event_finish_epoch+0x3>
    4780:	61 e0       	ldi	r22, 0x01	; 1
    4782:	2a 81       	ldd	r18, Y+2	; 0x02
    4784:	3b 81       	ldd	r19, Y+3	; 0x03
    4786:	4c 81       	ldd	r20, Y+4	; 0x04
    4788:	5d 81       	ldd	r21, Y+5	; 0x05
    478a:	28 17       	cp	r18, r24
    478c:	39 07       	cpc	r19, r25
    478e:	4a 07       	cpc	r20, r26
    4790:	5b 07       	cpc	r21, r27
    4792:	09 f4       	brne	.+2      	; 0x4796 <_Z17handleLinkBusMsgsv+0x5c2>
    4794:	60 e0       	ldi	r22, 0x00	; 0
    4796:	66 23       	and	r22, r22
    4798:	89 f0       	breq	.+34     	; 0x47bc <_Z17handleLinkBusMsgsv+0x5e8>
    479a:	8a 81       	ldd	r24, Y+2	; 0x02
    479c:	9b 81       	ldd	r25, Y+3	; 0x03
    479e:	ac 81       	ldd	r26, Y+4	; 0x04
    47a0:	bd 81       	ldd	r27, Y+5	; 0x05
    47a2:	80 93 90 47 	sts	0x4790, r24	; 0x804790 <g_event_finish_epoch>
    47a6:	90 93 91 47 	sts	0x4791, r25	; 0x804791 <g_event_finish_epoch+0x1>
    47aa:	a0 93 92 47 	sts	0x4792, r26	; 0x804792 <g_event_finish_epoch+0x2>
    47ae:	b0 93 93 47 	sts	0x4793, r27	; 0x804793 <g_event_finish_epoch+0x3>
    47b2:	80 91 c1 47 	lds	r24, 0x47C1	; 0x8047c1 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    47b6:	8f 5f       	subi	r24, 0xFF	; 255
    47b8:	80 93 c1 47 	sts	0x47C1, r24	; 0x8047c1 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    47bc:	80 91 c2 47 	lds	r24, 0x47C2	; 0x8047c2 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    47c0:	8f 5f       	subi	r24, 0xFF	; 255
    47c2:	80 93 c2 47 	sts	0x47C2, r24	; 0x8047c2 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    47c6:	41 c4       	rjmp	.+2178   	; 0x504a <_Z17handleLinkBusMsgsv+0xe76>
    47c8:	81 e0       	ldi	r24, 0x01	; 1
    47ca:	80 93 0a 40 	sts	0x400A, r24	; 0x80400a <_ZL13g_wifi_active>
    47ce:	8a 85       	ldd	r24, Y+10	; 0x0a
    47d0:	9b 85       	ldd	r25, Y+11	; 0x0b
    47d2:	fc 01       	movw	r30, r24
    47d4:	80 81       	ld	r24, Z
    47d6:	81 30       	cpi	r24, 0x01	; 1
    47d8:	09 f0       	breq	.+2      	; 0x47dc <_Z17handleLinkBusMsgsv+0x608>
    47da:	4a c0       	rjmp	.+148    	; 0x4870 <_Z17handleLinkBusMsgsv+0x69c>
    47dc:	8a 85       	ldd	r24, Y+10	; 0x0a
    47de:	9b 85       	ldd	r25, Y+11	; 0x0b
    47e0:	fc 01       	movw	r30, r24
    47e2:	83 81       	ldd	r24, Z+3	; 0x03
    47e4:	88 23       	and	r24, r24
    47e6:	d1 f0       	breq	.+52     	; 0x481c <_Z17handleLinkBusMsgsv+0x648>
    47e8:	8a 85       	ldd	r24, Y+10	; 0x0a
    47ea:	9b 85       	ldd	r25, Y+11	; 0x0b
    47ec:	03 96       	adiw	r24, 0x03	; 3
    47ee:	44 e1       	ldi	r20, 0x14	; 20
    47f0:	50 e0       	ldi	r21, 0x00	; 0
    47f2:	bc 01       	movw	r22, r24
    47f4:	89 e1       	ldi	r24, 0x19	; 25
    47f6:	97 e4       	ldi	r25, 0x47	; 71
    47f8:	0e 94 8e 7c 	call	0xf91c	; 0xf91c <strncpy>
    47fc:	60 e0       	ldi	r22, 0x00	; 0
    47fe:	89 e1       	ldi	r24, 0x19	; 25
    4800:	97 e4       	ldi	r25, 0x47	; 71
    4802:	0e 94 96 42 	call	0x852c	; 0x852c <ds3231_set_date_time>
    4806:	80 e0       	ldi	r24, 0x00	; 0
    4808:	90 e0       	ldi	r25, 0x00	; 0
    480a:	0e 94 53 40 	call	0x80a6	; 0x80a6 <ds3231_get_epoch>
    480e:	dc 01       	movw	r26, r24
    4810:	cb 01       	movw	r24, r22
    4812:	bc 01       	movw	r22, r24
    4814:	cd 01       	movw	r24, r26
    4816:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <set_system_time>
    481a:	19 c4       	rjmp	.+2098   	; 0x504e <_Z17handleLinkBusMsgsv+0xe7a>
    481c:	80 e0       	ldi	r24, 0x00	; 0
    481e:	90 e0       	ldi	r25, 0x00	; 0
    4820:	0e 94 56 06 	call	0xcac	; 0xcac <time>
    4824:	dc 01       	movw	r26, r24
    4826:	cb 01       	movw	r24, r22
    4828:	2b 2f       	mov	r18, r27
    482a:	2f 93       	push	r18
    482c:	2a 2f       	mov	r18, r26
    482e:	2f 93       	push	r18
    4830:	29 2f       	mov	r18, r25
    4832:	2f 93       	push	r18
    4834:	8f 93       	push	r24
    4836:	8d e5       	ldi	r24, 0x5D	; 93
    4838:	90 e4       	ldi	r25, 0x40	; 64
    483a:	89 2f       	mov	r24, r25
    483c:	8f 93       	push	r24
    483e:	8d e5       	ldi	r24, 0x5D	; 93
    4840:	90 e4       	ldi	r25, 0x40	; 64
    4842:	8f 93       	push	r24
    4844:	89 e1       	ldi	r24, 0x19	; 25
    4846:	97 e4       	ldi	r25, 0x47	; 71
    4848:	89 2f       	mov	r24, r25
    484a:	8f 93       	push	r24
    484c:	89 e1       	ldi	r24, 0x19	; 25
    484e:	97 e4       	ldi	r25, 0x47	; 71
    4850:	8f 93       	push	r24
    4852:	0e 94 ba 7c 	call	0xf974	; 0xf974 <sprintf>
    4856:	8d b7       	in	r24, 0x3d	; 61
    4858:	9e b7       	in	r25, 0x3e	; 62
    485a:	08 96       	adiw	r24, 0x08	; 8
    485c:	cd bf       	out	0x3d, r28	; 61
    485e:	de bf       	out	0x3e, r29	; 62
    4860:	49 e1       	ldi	r20, 0x19	; 25
    4862:	57 e4       	ldi	r21, 0x47	; 71
    4864:	61 e6       	ldi	r22, 0x61	; 97
    4866:	70 e4       	ldi	r23, 0x40	; 64
    4868:	83 e0       	ldi	r24, 0x03	; 3
    486a:	0e 94 bb 5a 	call	0xb576	; 0xb576 <_Z11lb_send_msg13LBMessageTypePKcPc>
    486e:	ef c3       	rjmp	.+2014   	; 0x504e <_Z17handleLinkBusMsgsv+0xe7a>
    4870:	8a 85       	ldd	r24, Y+10	; 0x0a
    4872:	9b 85       	ldd	r25, Y+11	; 0x0b
    4874:	fc 01       	movw	r30, r24
    4876:	80 81       	ld	r24, Z
    4878:	82 30       	cpi	r24, 0x02	; 2
    487a:	09 f0       	breq	.+2      	; 0x487e <_Z17handleLinkBusMsgsv+0x6aa>
    487c:	e8 c3       	rjmp	.+2000   	; 0x504e <_Z17handleLinkBusMsgsv+0xe7a>
    487e:	8a 85       	ldd	r24, Y+10	; 0x0a
    4880:	9b 85       	ldd	r25, Y+11	; 0x0b
    4882:	fc 01       	movw	r30, r24
    4884:	83 81       	ldd	r24, Z+3	; 0x03
    4886:	88 35       	cpi	r24, 0x58	; 88
    4888:	c9 f5       	brne	.+114    	; 0x48fc <_Z17handleLinkBusMsgsv+0x728>
    488a:	1a 8a       	std	Y+18, r1	; 0x12
    488c:	8a 85       	ldd	r24, Y+10	; 0x0a
    488e:	9b 85       	ldd	r25, Y+11	; 0x0b
    4890:	fc 01       	movw	r30, r24
    4892:	80 8d       	ldd	r24, Z+24	; 0x18
    4894:	88 23       	and	r24, r24
    4896:	51 f0       	breq	.+20     	; 0x48ac <_Z17handleLinkBusMsgsv+0x6d8>
    4898:	8a 85       	ldd	r24, Y+10	; 0x0a
    489a:	9b 85       	ldd	r25, Y+11	; 0x0b
    489c:	48 96       	adiw	r24, 0x18	; 24
    489e:	0e 94 0b 7c 	call	0xf816	; 0xf816 <atoi>
    48a2:	8a 8b       	std	Y+18, r24	; 0x12
    48a4:	8a 89       	ldd	r24, Y+18	; 0x12
    48a6:	0e 94 ee 43 	call	0x87dc	; 0x87dc <ds3231_set_aging>
    48aa:	d1 c3       	rjmp	.+1954   	; 0x504e <_Z17handleLinkBusMsgsv+0xe7a>
    48ac:	0e 94 1d 44 	call	0x883a	; 0x883a <ds3231_get_aging>
    48b0:	8a 8b       	std	Y+18, r24	; 0x12
    48b2:	8a 89       	ldd	r24, Y+18	; 0x12
    48b4:	08 2e       	mov	r0, r24
    48b6:	00 0c       	add	r0, r0
    48b8:	99 0b       	sbc	r25, r25
    48ba:	29 2f       	mov	r18, r25
    48bc:	2f 93       	push	r18
    48be:	8f 93       	push	r24
    48c0:	80 ed       	ldi	r24, 0xD0	; 208
    48c2:	92 e4       	ldi	r25, 0x42	; 66
    48c4:	89 2f       	mov	r24, r25
    48c6:	8f 93       	push	r24
    48c8:	80 ed       	ldi	r24, 0xD0	; 208
    48ca:	92 e4       	ldi	r25, 0x42	; 66
    48cc:	8f 93       	push	r24
    48ce:	89 e1       	ldi	r24, 0x19	; 25
    48d0:	97 e4       	ldi	r25, 0x47	; 71
    48d2:	89 2f       	mov	r24, r25
    48d4:	8f 93       	push	r24
    48d6:	89 e1       	ldi	r24, 0x19	; 25
    48d8:	97 e4       	ldi	r25, 0x47	; 71
    48da:	8f 93       	push	r24
    48dc:	0e 94 ba 7c 	call	0xf974	; 0xf974 <sprintf>
    48e0:	0f 90       	pop	r0
    48e2:	0f 90       	pop	r0
    48e4:	0f 90       	pop	r0
    48e6:	0f 90       	pop	r0
    48e8:	0f 90       	pop	r0
    48ea:	0f 90       	pop	r0
    48ec:	49 e1       	ldi	r20, 0x19	; 25
    48ee:	57 e4       	ldi	r21, 0x47	; 71
    48f0:	61 e6       	ldi	r22, 0x61	; 97
    48f2:	70 e4       	ldi	r23, 0x40	; 64
    48f4:	83 e0       	ldi	r24, 0x03	; 3
    48f6:	0e 94 bb 5a 	call	0xb576	; 0xb576 <_Z11lb_send_msg13LBMessageTypePKcPc>
    48fa:	a9 c3       	rjmp	.+1874   	; 0x504e <_Z17handleLinkBusMsgsv+0xe7a>
    48fc:	80 e0       	ldi	r24, 0x00	; 0
    48fe:	90 e0       	ldi	r25, 0x00	; 0
    4900:	0e 94 53 40 	call	0x80a6	; 0x80a6 <ds3231_get_epoch>
    4904:	dc 01       	movw	r26, r24
    4906:	cb 01       	movw	r24, r22
    4908:	8b 8b       	std	Y+19, r24	; 0x13
    490a:	9c 8b       	std	Y+20, r25	; 0x14
    490c:	ad 8b       	std	Y+21, r26	; 0x15
    490e:	be 8b       	std	Y+22, r27	; 0x16
    4910:	8b 89       	ldd	r24, Y+19	; 0x13
    4912:	9c 89       	ldd	r25, Y+20	; 0x14
    4914:	ad 89       	ldd	r26, Y+21	; 0x15
    4916:	be 89       	ldd	r27, Y+22	; 0x16
    4918:	bc 01       	movw	r22, r24
    491a:	cd 01       	movw	r24, r26
    491c:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <set_system_time>
    4920:	80 91 c3 47 	lds	r24, 0x47C3	; 0x8047c3 <_ZZ17handleLinkBusMsgsvE8lastTime>
    4924:	90 91 c4 47 	lds	r25, 0x47C4	; 0x8047c4 <_ZZ17handleLinkBusMsgsvE8lastTime+0x1>
    4928:	a0 91 c5 47 	lds	r26, 0x47C5	; 0x8047c5 <_ZZ17handleLinkBusMsgsvE8lastTime+0x2>
    492c:	b0 91 c6 47 	lds	r27, 0x47C6	; 0x8047c6 <_ZZ17handleLinkBusMsgsvE8lastTime+0x3>
    4930:	2b 89       	ldd	r18, Y+19	; 0x13
    4932:	3c 89       	ldd	r19, Y+20	; 0x14
    4934:	4d 89       	ldd	r20, Y+21	; 0x15
    4936:	5e 89       	ldd	r21, Y+22	; 0x16
    4938:	28 17       	cp	r18, r24
    493a:	39 07       	cpc	r19, r25
    493c:	4a 07       	cpc	r20, r26
    493e:	5b 07       	cpc	r21, r27
    4940:	09 f4       	brne	.+2      	; 0x4944 <_Z17handleLinkBusMsgsv+0x770>
    4942:	85 c3       	rjmp	.+1802   	; 0x504e <_Z17handleLinkBusMsgsv+0xe7a>
    4944:	8e 89       	ldd	r24, Y+22	; 0x16
    4946:	8f 93       	push	r24
    4948:	8d 89       	ldd	r24, Y+21	; 0x15
    494a:	8f 93       	push	r24
    494c:	8c 89       	ldd	r24, Y+20	; 0x14
    494e:	8f 93       	push	r24
    4950:	8b 89       	ldd	r24, Y+19	; 0x13
    4952:	8f 93       	push	r24
    4954:	8d e5       	ldi	r24, 0x5D	; 93
    4956:	90 e4       	ldi	r25, 0x40	; 64
    4958:	89 2f       	mov	r24, r25
    495a:	8f 93       	push	r24
    495c:	8d e5       	ldi	r24, 0x5D	; 93
    495e:	90 e4       	ldi	r25, 0x40	; 64
    4960:	8f 93       	push	r24
    4962:	89 e1       	ldi	r24, 0x19	; 25
    4964:	97 e4       	ldi	r25, 0x47	; 71
    4966:	89 2f       	mov	r24, r25
    4968:	8f 93       	push	r24
    496a:	89 e1       	ldi	r24, 0x19	; 25
    496c:	97 e4       	ldi	r25, 0x47	; 71
    496e:	8f 93       	push	r24
    4970:	0e 94 ba 7c 	call	0xf974	; 0xf974 <sprintf>
    4974:	8d b7       	in	r24, 0x3d	; 61
    4976:	9e b7       	in	r25, 0x3e	; 62
    4978:	08 96       	adiw	r24, 0x08	; 8
    497a:	cd bf       	out	0x3d, r28	; 61
    497c:	de bf       	out	0x3e, r29	; 62
    497e:	49 e1       	ldi	r20, 0x19	; 25
    4980:	57 e4       	ldi	r21, 0x47	; 71
    4982:	61 e6       	ldi	r22, 0x61	; 97
    4984:	70 e4       	ldi	r23, 0x40	; 64
    4986:	83 e0       	ldi	r24, 0x03	; 3
    4988:	0e 94 bb 5a 	call	0xb576	; 0xb576 <_Z11lb_send_msg13LBMessageTypePKcPc>
    498c:	8b 89       	ldd	r24, Y+19	; 0x13
    498e:	9c 89       	ldd	r25, Y+20	; 0x14
    4990:	ad 89       	ldd	r26, Y+21	; 0x15
    4992:	be 89       	ldd	r27, Y+22	; 0x16
    4994:	80 93 c3 47 	sts	0x47C3, r24	; 0x8047c3 <_ZZ17handleLinkBusMsgsvE8lastTime>
    4998:	90 93 c4 47 	sts	0x47C4, r25	; 0x8047c4 <_ZZ17handleLinkBusMsgsvE8lastTime+0x1>
    499c:	a0 93 c5 47 	sts	0x47C5, r26	; 0x8047c5 <_ZZ17handleLinkBusMsgsvE8lastTime+0x2>
    49a0:	b0 93 c6 47 	sts	0x47C6, r27	; 0x8047c6 <_ZZ17handleLinkBusMsgsvE8lastTime+0x3>
    49a4:	54 c3       	rjmp	.+1704   	; 0x504e <_Z17handleLinkBusMsgsv+0xe7a>
    49a6:	8a 85       	ldd	r24, Y+10	; 0x0a
    49a8:	9b 85       	ldd	r25, Y+11	; 0x0b
    49aa:	fc 01       	movw	r30, r24
    49ac:	83 81       	ldd	r24, Z+3	; 0x03
    49ae:	88 23       	and	r24, r24
    49b0:	09 f4       	brne	.+2      	; 0x49b4 <_Z17handleLinkBusMsgsv+0x7e0>
    49b2:	43 c0       	rjmp	.+134    	; 0x4a3a <_Z17handleLinkBusMsgsv+0x866>
    49b4:	8a 85       	ldd	r24, Y+10	; 0x0a
    49b6:	9b 85       	ldd	r25, Y+11	; 0x0b
    49b8:	03 96       	adiw	r24, 0x03	; 3
    49ba:	bc 01       	movw	r22, r24
    49bc:	83 e7       	ldi	r24, 0x73	; 115
    49be:	97 e4       	ldi	r25, 0x47	; 71
    49c0:	0e 94 75 7c 	call	0xf8ea	; 0xf8ea <strcmp>
    49c4:	89 2b       	or	r24, r25
    49c6:	99 f1       	breq	.+102    	; 0x4a2e <_Z17handleLinkBusMsgsv+0x85a>
    49c8:	8a 85       	ldd	r24, Y+10	; 0x0a
    49ca:	9b 85       	ldd	r25, Y+11	; 0x0b
    49cc:	03 96       	adiw	r24, 0x03	; 3
    49ce:	44 e1       	ldi	r20, 0x14	; 20
    49d0:	50 e0       	ldi	r21, 0x00	; 0
    49d2:	bc 01       	movw	r22, r24
    49d4:	83 e7       	ldi	r24, 0x73	; 115
    49d6:	97 e4       	ldi	r25, 0x47	; 71
    49d8:	0e 94 8e 7c 	call	0xf91c	; 0xf91c <strncpy>
    49dc:	80 91 73 47 	lds	r24, 0x4773	; 0x804773 <g_messages_text+0x15>
    49e0:	88 23       	and	r24, r24
    49e2:	01 f1       	breq	.+64     	; 0x4a24 <_Z17handleLinkBusMsgsv+0x850>
    49e4:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    49e8:	88 2f       	mov	r24, r24
    49ea:	90 e0       	ldi	r25, 0x00	; 0
    49ec:	bc 01       	movw	r22, r24
    49ee:	83 e7       	ldi	r24, 0x73	; 115
    49f0:	97 e4       	ldi	r25, 0x47	; 71
    49f2:	0e 94 9c 5c 	call	0xb938	; 0xb938 <_Z26timeRequiredToSendStrAtWPMPcj>
    49f6:	8c 50       	subi	r24, 0x0C	; 12
    49f8:	9e 4f       	sbci	r25, 0xFE	; 254
    49fa:	96 95       	lsr	r25
    49fc:	87 95       	ror	r24
    49fe:	96 95       	lsr	r25
    4a00:	87 95       	ror	r24
    4a02:	96 95       	lsr	r25
    4a04:	87 95       	ror	r24
    4a06:	9c 01       	movw	r18, r24
    4a08:	a5 ec       	ldi	r26, 0xC5	; 197
    4a0a:	b0 e2       	ldi	r27, 0x20	; 32
    4a0c:	0e 94 ac 7a 	call	0xf558	; 0xf558 <__umulhisi3>
    4a10:	92 95       	swap	r25
    4a12:	82 95       	swap	r24
    4a14:	8f 70       	andi	r24, 0x0F	; 15
    4a16:	89 27       	eor	r24, r25
    4a18:	9f 70       	andi	r25, 0x0F	; 15
    4a1a:	89 27       	eor	r24, r25
    4a1c:	80 93 88 47 	sts	0x4788, r24	; 0x804788 <g_time_needed_for_ID>
    4a20:	90 93 89 47 	sts	0x4789, r25	; 0x804789 <g_time_needed_for_ID+0x1>
    4a24:	80 91 c1 47 	lds	r24, 0x47C1	; 0x8047c1 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4a28:	8f 5f       	subi	r24, 0xFF	; 255
    4a2a:	80 93 c1 47 	sts	0x47C1, r24	; 0x8047c1 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4a2e:	80 91 c2 47 	lds	r24, 0x47C2	; 0x8047c2 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    4a32:	8f 5f       	subi	r24, 0xFF	; 255
    4a34:	80 93 c2 47 	sts	0x47C2, r24	; 0x8047c2 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    4a38:	0c c3       	rjmp	.+1560   	; 0x5052 <_Z17handleLinkBusMsgsv+0xe7e>
    4a3a:	80 91 73 47 	lds	r24, 0x4773	; 0x804773 <g_messages_text+0x15>
    4a3e:	88 23       	and	r24, r24
    4a40:	09 f4       	brne	.+2      	; 0x4a44 <_Z17handleLinkBusMsgsv+0x870>
    4a42:	07 c3       	rjmp	.+1550   	; 0x5052 <_Z17handleLinkBusMsgsv+0xe7e>
    4a44:	83 e7       	ldi	r24, 0x73	; 115
    4a46:	97 e4       	ldi	r25, 0x47	; 71
    4a48:	89 2f       	mov	r24, r25
    4a4a:	8f 93       	push	r24
    4a4c:	83 e7       	ldi	r24, 0x73	; 115
    4a4e:	97 e4       	ldi	r25, 0x47	; 71
    4a50:	8f 93       	push	r24
    4a52:	85 ed       	ldi	r24, 0xD5	; 213
    4a54:	92 e4       	ldi	r25, 0x42	; 66
    4a56:	89 2f       	mov	r24, r25
    4a58:	8f 93       	push	r24
    4a5a:	85 ed       	ldi	r24, 0xD5	; 213
    4a5c:	92 e4       	ldi	r25, 0x42	; 66
    4a5e:	8f 93       	push	r24
    4a60:	89 e1       	ldi	r24, 0x19	; 25
    4a62:	97 e4       	ldi	r25, 0x47	; 71
    4a64:	89 2f       	mov	r24, r25
    4a66:	8f 93       	push	r24
    4a68:	89 e1       	ldi	r24, 0x19	; 25
    4a6a:	97 e4       	ldi	r25, 0x47	; 71
    4a6c:	8f 93       	push	r24
    4a6e:	0e 94 ba 7c 	call	0xf974	; 0xf974 <sprintf>
    4a72:	0f 90       	pop	r0
    4a74:	0f 90       	pop	r0
    4a76:	0f 90       	pop	r0
    4a78:	0f 90       	pop	r0
    4a7a:	0f 90       	pop	r0
    4a7c:	0f 90       	pop	r0
    4a7e:	89 e1       	ldi	r24, 0x19	; 25
    4a80:	97 e4       	ldi	r25, 0x47	; 71
    4a82:	0e 94 5e 5a 	call	0xb4bc	; 0xb4bc <_Z12lb_send_textPc>
    4a86:	19 82       	std	Y+1, r1	; 0x01
    4a88:	e4 c2       	rjmp	.+1480   	; 0x5052 <_Z17handleLinkBusMsgsv+0xe7e>
    4a8a:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    4a8e:	8f 8b       	std	Y+23, r24	; 0x17
    4a90:	8a 85       	ldd	r24, Y+10	; 0x0a
    4a92:	9b 85       	ldd	r25, Y+11	; 0x0b
    4a94:	fc 01       	movw	r30, r24
    4a96:	83 81       	ldd	r24, Z+3	; 0x03
    4a98:	89 34       	cpi	r24, 0x49	; 73
    4a9a:	09 f0       	breq	.+2      	; 0x4a9e <_Z17handleLinkBusMsgsv+0x8ca>
    4a9c:	76 c0       	rjmp	.+236    	; 0x4b8a <_Z17handleLinkBusMsgsv+0x9b6>
    4a9e:	8a 85       	ldd	r24, Y+10	; 0x0a
    4aa0:	9b 85       	ldd	r25, Y+11	; 0x0b
    4aa2:	fc 01       	movw	r30, r24
    4aa4:	80 8d       	ldd	r24, Z+24	; 0x18
    4aa6:	88 23       	and	r24, r24
    4aa8:	09 f4       	brne	.+2      	; 0x4aac <_Z17handleLinkBusMsgsv+0x8d8>
    4aaa:	d5 c2       	rjmp	.+1450   	; 0x5056 <_Z17handleLinkBusMsgsv+0xe82>
    4aac:	8a 85       	ldd	r24, Y+10	; 0x0a
    4aae:	9b 85       	ldd	r25, Y+11	; 0x0b
    4ab0:	48 96       	adiw	r24, 0x18	; 24
    4ab2:	0e 94 29 7c 	call	0xf852	; 0xf852 <atol>
    4ab6:	dc 01       	movw	r26, r24
    4ab8:	cb 01       	movw	r24, r22
    4aba:	88 8f       	std	Y+24, r24	; 0x18
    4abc:	99 8f       	std	Y+25, r25	; 0x19
    4abe:	aa 8f       	std	Y+26, r26	; 0x1a
    4ac0:	bb 8f       	std	Y+27, r27	; 0x1b
    4ac2:	85 e0       	ldi	r24, 0x05	; 5
    4ac4:	8c 8f       	std	Y+28, r24	; 0x1c
    4ac6:	84 e1       	ldi	r24, 0x14	; 20
    4ac8:	8d 8f       	std	Y+29, r24	; 0x1d
    4aca:	8d 8d       	ldd	r24, Y+29	; 0x1d
    4acc:	28 2f       	mov	r18, r24
    4ace:	30 e0       	ldi	r19, 0x00	; 0
    4ad0:	40 e0       	ldi	r20, 0x00	; 0
    4ad2:	50 e0       	ldi	r21, 0x00	; 0
    4ad4:	88 8d       	ldd	r24, Y+24	; 0x18
    4ad6:	99 8d       	ldd	r25, Y+25	; 0x19
    4ad8:	aa 8d       	ldd	r26, Y+26	; 0x1a
    4ada:	bb 8d       	ldd	r27, Y+27	; 0x1b
    4adc:	28 17       	cp	r18, r24
    4ade:	39 07       	cpc	r19, r25
    4ae0:	4a 07       	cpc	r20, r26
    4ae2:	5b 07       	cpc	r21, r27
    4ae4:	34 f4       	brge	.+12     	; 0x4af2 <_Z17handleLinkBusMsgsv+0x91e>
    4ae6:	8d 8d       	ldd	r24, Y+29	; 0x1d
    4ae8:	88 2f       	mov	r24, r24
    4aea:	90 e0       	ldi	r25, 0x00	; 0
    4aec:	a0 e0       	ldi	r26, 0x00	; 0
    4aee:	b0 e0       	ldi	r27, 0x00	; 0
    4af0:	10 c0       	rjmp	.+32     	; 0x4b12 <_Z17handleLinkBusMsgsv+0x93e>
    4af2:	8c 8d       	ldd	r24, Y+28	; 0x1c
    4af4:	88 2f       	mov	r24, r24
    4af6:	90 e0       	ldi	r25, 0x00	; 0
    4af8:	a0 e0       	ldi	r26, 0x00	; 0
    4afa:	b0 e0       	ldi	r27, 0x00	; 0
    4afc:	28 8d       	ldd	r18, Y+24	; 0x18
    4afe:	39 8d       	ldd	r19, Y+25	; 0x19
    4b00:	4a 8d       	ldd	r20, Y+26	; 0x1a
    4b02:	5b 8d       	ldd	r21, Y+27	; 0x1b
    4b04:	82 17       	cp	r24, r18
    4b06:	93 07       	cpc	r25, r19
    4b08:	a4 07       	cpc	r26, r20
    4b0a:	b5 07       	cpc	r27, r21
    4b0c:	14 f4       	brge	.+4      	; 0x4b12 <_Z17handleLinkBusMsgsv+0x93e>
    4b0e:	da 01       	movw	r26, r20
    4b10:	c9 01       	movw	r24, r18
    4b12:	8f 8b       	std	Y+23, r24	; 0x17
    4b14:	90 91 0b 40 	lds	r25, 0x400B	; 0x80400b <g_id_codespeed>
    4b18:	81 e0       	ldi	r24, 0x01	; 1
    4b1a:	2f 89       	ldd	r18, Y+23	; 0x17
    4b1c:	29 17       	cp	r18, r25
    4b1e:	09 f4       	brne	.+2      	; 0x4b22 <_Z17handleLinkBusMsgsv+0x94e>
    4b20:	80 e0       	ldi	r24, 0x00	; 0
    4b22:	88 23       	and	r24, r24
    4b24:	61 f1       	breq	.+88     	; 0x4b7e <_Z17handleLinkBusMsgsv+0x9aa>
    4b26:	8f 89       	ldd	r24, Y+23	; 0x17
    4b28:	80 93 0b 40 	sts	0x400B, r24	; 0x80400b <g_id_codespeed>
    4b2c:	80 91 c1 47 	lds	r24, 0x47C1	; 0x8047c1 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4b30:	8f 5f       	subi	r24, 0xFF	; 255
    4b32:	80 93 c1 47 	sts	0x47C1, r24	; 0x8047c1 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4b36:	80 91 73 47 	lds	r24, 0x4773	; 0x804773 <g_messages_text+0x15>
    4b3a:	88 23       	and	r24, r24
    4b3c:	01 f1       	breq	.+64     	; 0x4b7e <_Z17handleLinkBusMsgsv+0x9aa>
    4b3e:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    4b42:	88 2f       	mov	r24, r24
    4b44:	90 e0       	ldi	r25, 0x00	; 0
    4b46:	bc 01       	movw	r22, r24
    4b48:	83 e7       	ldi	r24, 0x73	; 115
    4b4a:	97 e4       	ldi	r25, 0x47	; 71
    4b4c:	0e 94 9c 5c 	call	0xb938	; 0xb938 <_Z26timeRequiredToSendStrAtWPMPcj>
    4b50:	8c 50       	subi	r24, 0x0C	; 12
    4b52:	9e 4f       	sbci	r25, 0xFE	; 254
    4b54:	96 95       	lsr	r25
    4b56:	87 95       	ror	r24
    4b58:	96 95       	lsr	r25
    4b5a:	87 95       	ror	r24
    4b5c:	96 95       	lsr	r25
    4b5e:	87 95       	ror	r24
    4b60:	9c 01       	movw	r18, r24
    4b62:	a5 ec       	ldi	r26, 0xC5	; 197
    4b64:	b0 e2       	ldi	r27, 0x20	; 32
    4b66:	0e 94 ac 7a 	call	0xf558	; 0xf558 <__umulhisi3>
    4b6a:	92 95       	swap	r25
    4b6c:	82 95       	swap	r24
    4b6e:	8f 70       	andi	r24, 0x0F	; 15
    4b70:	89 27       	eor	r24, r25
    4b72:	9f 70       	andi	r25, 0x0F	; 15
    4b74:	89 27       	eor	r24, r25
    4b76:	80 93 88 47 	sts	0x4788, r24	; 0x804788 <g_time_needed_for_ID>
    4b7a:	90 93 89 47 	sts	0x4789, r25	; 0x804789 <g_time_needed_for_ID+0x1>
    4b7e:	80 91 c2 47 	lds	r24, 0x47C2	; 0x8047c2 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    4b82:	8f 5f       	subi	r24, 0xFF	; 255
    4b84:	80 93 c2 47 	sts	0x47C2, r24	; 0x8047c2 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    4b88:	66 c2       	rjmp	.+1228   	; 0x5056 <_Z17handleLinkBusMsgsv+0xe82>
    4b8a:	8a 85       	ldd	r24, Y+10	; 0x0a
    4b8c:	9b 85       	ldd	r25, Y+11	; 0x0b
    4b8e:	fc 01       	movw	r30, r24
    4b90:	83 81       	ldd	r24, Z+3	; 0x03
    4b92:	80 35       	cpi	r24, 0x50	; 80
    4b94:	09 f0       	breq	.+2      	; 0x4b98 <_Z17handleLinkBusMsgsv+0x9c4>
    4b96:	5f c2       	rjmp	.+1214   	; 0x5056 <_Z17handleLinkBusMsgsv+0xe82>
    4b98:	8a 85       	ldd	r24, Y+10	; 0x0a
    4b9a:	9b 85       	ldd	r25, Y+11	; 0x0b
    4b9c:	fc 01       	movw	r30, r24
    4b9e:	80 8d       	ldd	r24, Z+24	; 0x18
    4ba0:	88 23       	and	r24, r24
    4ba2:	09 f4       	brne	.+2      	; 0x4ba6 <_Z17handleLinkBusMsgsv+0x9d2>
    4ba4:	58 c2       	rjmp	.+1200   	; 0x5056 <_Z17handleLinkBusMsgsv+0xe82>
    4ba6:	8a 85       	ldd	r24, Y+10	; 0x0a
    4ba8:	9b 85       	ldd	r25, Y+11	; 0x0b
    4baa:	48 96       	adiw	r24, 0x18	; 24
    4bac:	0e 94 29 7c 	call	0xf852	; 0xf852 <atol>
    4bb0:	dc 01       	movw	r26, r24
    4bb2:	cb 01       	movw	r24, r22
    4bb4:	8e 8f       	std	Y+30, r24	; 0x1e
    4bb6:	9f 8f       	std	Y+31, r25	; 0x1f
    4bb8:	a8 a3       	std	Y+32, r26	; 0x20
    4bba:	b9 a3       	std	Y+33, r27	; 0x21
    4bbc:	85 e0       	ldi	r24, 0x05	; 5
    4bbe:	8a a3       	std	Y+34, r24	; 0x22
    4bc0:	84 e1       	ldi	r24, 0x14	; 20
    4bc2:	8b a3       	std	Y+35, r24	; 0x23
    4bc4:	8b a1       	ldd	r24, Y+35	; 0x23
    4bc6:	28 2f       	mov	r18, r24
    4bc8:	30 e0       	ldi	r19, 0x00	; 0
    4bca:	40 e0       	ldi	r20, 0x00	; 0
    4bcc:	50 e0       	ldi	r21, 0x00	; 0
    4bce:	8e 8d       	ldd	r24, Y+30	; 0x1e
    4bd0:	9f 8d       	ldd	r25, Y+31	; 0x1f
    4bd2:	a8 a1       	ldd	r26, Y+32	; 0x20
    4bd4:	b9 a1       	ldd	r27, Y+33	; 0x21
    4bd6:	28 17       	cp	r18, r24
    4bd8:	39 07       	cpc	r19, r25
    4bda:	4a 07       	cpc	r20, r26
    4bdc:	5b 07       	cpc	r21, r27
    4bde:	34 f4       	brge	.+12     	; 0x4bec <_Z17handleLinkBusMsgsv+0xa18>
    4be0:	8b a1       	ldd	r24, Y+35	; 0x23
    4be2:	88 2f       	mov	r24, r24
    4be4:	90 e0       	ldi	r25, 0x00	; 0
    4be6:	a0 e0       	ldi	r26, 0x00	; 0
    4be8:	b0 e0       	ldi	r27, 0x00	; 0
    4bea:	10 c0       	rjmp	.+32     	; 0x4c0c <_Z17handleLinkBusMsgsv+0xa38>
    4bec:	8a a1       	ldd	r24, Y+34	; 0x22
    4bee:	88 2f       	mov	r24, r24
    4bf0:	90 e0       	ldi	r25, 0x00	; 0
    4bf2:	a0 e0       	ldi	r26, 0x00	; 0
    4bf4:	b0 e0       	ldi	r27, 0x00	; 0
    4bf6:	2e 8d       	ldd	r18, Y+30	; 0x1e
    4bf8:	3f 8d       	ldd	r19, Y+31	; 0x1f
    4bfa:	48 a1       	ldd	r20, Y+32	; 0x20
    4bfc:	59 a1       	ldd	r21, Y+33	; 0x21
    4bfe:	82 17       	cp	r24, r18
    4c00:	93 07       	cpc	r25, r19
    4c02:	a4 07       	cpc	r26, r20
    4c04:	b5 07       	cpc	r27, r21
    4c06:	14 f4       	brge	.+4      	; 0x4c0c <_Z17handleLinkBusMsgsv+0xa38>
    4c08:	da 01       	movw	r26, r20
    4c0a:	c9 01       	movw	r24, r18
    4c0c:	8f 8b       	std	Y+23, r24	; 0x17
    4c0e:	90 91 0c 40 	lds	r25, 0x400C	; 0x80400c <g_pattern_codespeed>
    4c12:	81 e0       	ldi	r24, 0x01	; 1
    4c14:	2f 89       	ldd	r18, Y+23	; 0x17
    4c16:	29 17       	cp	r18, r25
    4c18:	09 f4       	brne	.+2      	; 0x4c1c <_Z17handleLinkBusMsgsv+0xa48>
    4c1a:	80 e0       	ldi	r24, 0x00	; 0
    4c1c:	88 23       	and	r24, r24
    4c1e:	81 f0       	breq	.+32     	; 0x4c40 <_Z17handleLinkBusMsgsv+0xa6c>
    4c20:	8f 89       	ldd	r24, Y+23	; 0x17
    4c22:	80 93 0c 40 	sts	0x400C, r24	; 0x80400c <g_pattern_codespeed>
    4c26:	80 91 c1 47 	lds	r24, 0x47C1	; 0x8047c1 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4c2a:	8f 5f       	subi	r24, 0xFF	; 255
    4c2c:	80 93 c1 47 	sts	0x47C1, r24	; 0x8047c1 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4c30:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    4c34:	0e 94 4c 29 	call	0x5298	; 0x5298 <_Z13throttleValueh>
    4c38:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    4c3c:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    4c40:	80 91 c2 47 	lds	r24, 0x47C2	; 0x8047c2 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    4c44:	8f 5f       	subi	r24, 0xFF	; 255
    4c46:	80 93 c2 47 	sts	0x47C2, r24	; 0x8047c2 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    4c4a:	05 c2       	rjmp	.+1034   	; 0x5056 <_Z17handleLinkBusMsgsv+0xe82>
    4c4c:	1c a2       	std	Y+36, r1	; 0x24
    4c4e:	1d a2       	std	Y+37, r1	; 0x25
    4c50:	8a 85       	ldd	r24, Y+10	; 0x0a
    4c52:	9b 85       	ldd	r25, Y+11	; 0x0b
    4c54:	fc 01       	movw	r30, r24
    4c56:	83 81       	ldd	r24, Z+3	; 0x03
    4c58:	80 33       	cpi	r24, 0x30	; 48
    4c5a:	71 f5       	brne	.+92     	; 0x4cb8 <_Z17handleLinkBusMsgsv+0xae4>
    4c5c:	8a 85       	ldd	r24, Y+10	; 0x0a
    4c5e:	9b 85       	ldd	r25, Y+11	; 0x0b
    4c60:	fc 01       	movw	r30, r24
    4c62:	80 8d       	ldd	r24, Z+24	; 0x18
    4c64:	88 23       	and	r24, r24
    4c66:	09 f4       	brne	.+2      	; 0x4c6a <_Z17handleLinkBusMsgsv+0xa96>
    4c68:	f8 c1       	rjmp	.+1008   	; 0x505a <_Z17handleLinkBusMsgsv+0xe86>
    4c6a:	8a 85       	ldd	r24, Y+10	; 0x0a
    4c6c:	9b 85       	ldd	r25, Y+11	; 0x0b
    4c6e:	48 96       	adiw	r24, 0x18	; 24
    4c70:	0e 94 29 7c 	call	0xf852	; 0xf852 <atol>
    4c74:	dc 01       	movw	r26, r24
    4c76:	cb 01       	movw	r24, r22
    4c78:	8c a3       	std	Y+36, r24	; 0x24
    4c7a:	9d a3       	std	Y+37, r25	; 0x25
    4c7c:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_off_air_seconds>
    4c80:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    4c84:	41 e0       	ldi	r20, 0x01	; 1
    4c86:	2c a1       	ldd	r18, Y+36	; 0x24
    4c88:	3d a1       	ldd	r19, Y+37	; 0x25
    4c8a:	28 17       	cp	r18, r24
    4c8c:	39 07       	cpc	r19, r25
    4c8e:	09 f4       	brne	.+2      	; 0x4c92 <_Z17handleLinkBusMsgsv+0xabe>
    4c90:	40 e0       	ldi	r20, 0x00	; 0
    4c92:	44 23       	and	r20, r20
    4c94:	59 f0       	breq	.+22     	; 0x4cac <_Z17handleLinkBusMsgsv+0xad8>
    4c96:	8c a1       	ldd	r24, Y+36	; 0x24
    4c98:	9d a1       	ldd	r25, Y+37	; 0x25
    4c9a:	80 93 0f 40 	sts	0x400F, r24	; 0x80400f <g_off_air_seconds>
    4c9e:	90 93 10 40 	sts	0x4010, r25	; 0x804010 <g_off_air_seconds+0x1>
    4ca2:	80 91 c1 47 	lds	r24, 0x47C1	; 0x8047c1 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4ca6:	8f 5f       	subi	r24, 0xFF	; 255
    4ca8:	80 93 c1 47 	sts	0x47C1, r24	; 0x8047c1 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4cac:	80 91 c2 47 	lds	r24, 0x47C2	; 0x8047c2 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    4cb0:	8f 5f       	subi	r24, 0xFF	; 255
    4cb2:	80 93 c2 47 	sts	0x47C2, r24	; 0x8047c2 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    4cb6:	d1 c1       	rjmp	.+930    	; 0x505a <_Z17handleLinkBusMsgsv+0xe86>
    4cb8:	8a 85       	ldd	r24, Y+10	; 0x0a
    4cba:	9b 85       	ldd	r25, Y+11	; 0x0b
    4cbc:	fc 01       	movw	r30, r24
    4cbe:	83 81       	ldd	r24, Z+3	; 0x03
    4cc0:	81 33       	cpi	r24, 0x31	; 49
    4cc2:	71 f5       	brne	.+92     	; 0x4d20 <_Z17handleLinkBusMsgsv+0xb4c>
    4cc4:	8a 85       	ldd	r24, Y+10	; 0x0a
    4cc6:	9b 85       	ldd	r25, Y+11	; 0x0b
    4cc8:	fc 01       	movw	r30, r24
    4cca:	80 8d       	ldd	r24, Z+24	; 0x18
    4ccc:	88 23       	and	r24, r24
    4cce:	09 f4       	brne	.+2      	; 0x4cd2 <_Z17handleLinkBusMsgsv+0xafe>
    4cd0:	c4 c1       	rjmp	.+904    	; 0x505a <_Z17handleLinkBusMsgsv+0xe86>
    4cd2:	8a 85       	ldd	r24, Y+10	; 0x0a
    4cd4:	9b 85       	ldd	r25, Y+11	; 0x0b
    4cd6:	48 96       	adiw	r24, 0x18	; 24
    4cd8:	0e 94 29 7c 	call	0xf852	; 0xf852 <atol>
    4cdc:	dc 01       	movw	r26, r24
    4cde:	cb 01       	movw	r24, r22
    4ce0:	8c a3       	std	Y+36, r24	; 0x24
    4ce2:	9d a3       	std	Y+37, r25	; 0x25
    4ce4:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    4ce8:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    4cec:	41 e0       	ldi	r20, 0x01	; 1
    4cee:	2c a1       	ldd	r18, Y+36	; 0x24
    4cf0:	3d a1       	ldd	r19, Y+37	; 0x25
    4cf2:	28 17       	cp	r18, r24
    4cf4:	39 07       	cpc	r19, r25
    4cf6:	09 f4       	brne	.+2      	; 0x4cfa <_Z17handleLinkBusMsgsv+0xb26>
    4cf8:	40 e0       	ldi	r20, 0x00	; 0
    4cfa:	44 23       	and	r20, r20
    4cfc:	59 f0       	breq	.+22     	; 0x4d14 <_Z17handleLinkBusMsgsv+0xb40>
    4cfe:	8c a1       	ldd	r24, Y+36	; 0x24
    4d00:	9d a1       	ldd	r25, Y+37	; 0x25
    4d02:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_on_air_seconds>
    4d06:	90 93 0e 40 	sts	0x400E, r25	; 0x80400e <g_on_air_seconds+0x1>
    4d0a:	80 91 c1 47 	lds	r24, 0x47C1	; 0x8047c1 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4d0e:	8f 5f       	subi	r24, 0xFF	; 255
    4d10:	80 93 c1 47 	sts	0x47C1, r24	; 0x8047c1 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4d14:	80 91 c2 47 	lds	r24, 0x47C2	; 0x8047c2 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    4d18:	8f 5f       	subi	r24, 0xFF	; 255
    4d1a:	80 93 c2 47 	sts	0x47C2, r24	; 0x8047c2 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    4d1e:	9d c1       	rjmp	.+826    	; 0x505a <_Z17handleLinkBusMsgsv+0xe86>
    4d20:	8a 85       	ldd	r24, Y+10	; 0x0a
    4d22:	9b 85       	ldd	r25, Y+11	; 0x0b
    4d24:	fc 01       	movw	r30, r24
    4d26:	83 81       	ldd	r24, Z+3	; 0x03
    4d28:	89 34       	cpi	r24, 0x49	; 73
    4d2a:	71 f5       	brne	.+92     	; 0x4d88 <_Z17handleLinkBusMsgsv+0xbb4>
    4d2c:	8a 85       	ldd	r24, Y+10	; 0x0a
    4d2e:	9b 85       	ldd	r25, Y+11	; 0x0b
    4d30:	fc 01       	movw	r30, r24
    4d32:	80 8d       	ldd	r24, Z+24	; 0x18
    4d34:	88 23       	and	r24, r24
    4d36:	09 f4       	brne	.+2      	; 0x4d3a <_Z17handleLinkBusMsgsv+0xb66>
    4d38:	90 c1       	rjmp	.+800    	; 0x505a <_Z17handleLinkBusMsgsv+0xe86>
    4d3a:	8a 85       	ldd	r24, Y+10	; 0x0a
    4d3c:	9b 85       	ldd	r25, Y+11	; 0x0b
    4d3e:	48 96       	adiw	r24, 0x18	; 24
    4d40:	0e 94 29 7c 	call	0xf852	; 0xf852 <atol>
    4d44:	dc 01       	movw	r26, r24
    4d46:	cb 01       	movw	r24, r22
    4d48:	8c a3       	std	Y+36, r24	; 0x24
    4d4a:	9d a3       	std	Y+37, r25	; 0x25
    4d4c:	80 91 11 40 	lds	r24, 0x4011	; 0x804011 <g_ID_period_seconds>
    4d50:	90 91 12 40 	lds	r25, 0x4012	; 0x804012 <g_ID_period_seconds+0x1>
    4d54:	41 e0       	ldi	r20, 0x01	; 1
    4d56:	2c a1       	ldd	r18, Y+36	; 0x24
    4d58:	3d a1       	ldd	r19, Y+37	; 0x25
    4d5a:	28 17       	cp	r18, r24
    4d5c:	39 07       	cpc	r19, r25
    4d5e:	09 f4       	brne	.+2      	; 0x4d62 <_Z17handleLinkBusMsgsv+0xb8e>
    4d60:	40 e0       	ldi	r20, 0x00	; 0
    4d62:	44 23       	and	r20, r20
    4d64:	59 f0       	breq	.+22     	; 0x4d7c <_Z17handleLinkBusMsgsv+0xba8>
    4d66:	8c a1       	ldd	r24, Y+36	; 0x24
    4d68:	9d a1       	ldd	r25, Y+37	; 0x25
    4d6a:	80 93 11 40 	sts	0x4011, r24	; 0x804011 <g_ID_period_seconds>
    4d6e:	90 93 12 40 	sts	0x4012, r25	; 0x804012 <g_ID_period_seconds+0x1>
    4d72:	80 91 c1 47 	lds	r24, 0x47C1	; 0x8047c1 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4d76:	8f 5f       	subi	r24, 0xFF	; 255
    4d78:	80 93 c1 47 	sts	0x47C1, r24	; 0x8047c1 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4d7c:	80 91 c2 47 	lds	r24, 0x47C2	; 0x8047c2 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    4d80:	8f 5f       	subi	r24, 0xFF	; 255
    4d82:	80 93 c2 47 	sts	0x47C2, r24	; 0x8047c2 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    4d86:	69 c1       	rjmp	.+722    	; 0x505a <_Z17handleLinkBusMsgsv+0xe86>
    4d88:	8a 85       	ldd	r24, Y+10	; 0x0a
    4d8a:	9b 85       	ldd	r25, Y+11	; 0x0b
    4d8c:	fc 01       	movw	r30, r24
    4d8e:	83 81       	ldd	r24, Z+3	; 0x03
    4d90:	84 34       	cpi	r24, 0x44	; 68
    4d92:	09 f0       	breq	.+2      	; 0x4d96 <_Z17handleLinkBusMsgsv+0xbc2>
    4d94:	62 c1       	rjmp	.+708    	; 0x505a <_Z17handleLinkBusMsgsv+0xe86>
    4d96:	8a 85       	ldd	r24, Y+10	; 0x0a
    4d98:	9b 85       	ldd	r25, Y+11	; 0x0b
    4d9a:	fc 01       	movw	r30, r24
    4d9c:	80 8d       	ldd	r24, Z+24	; 0x18
    4d9e:	88 23       	and	r24, r24
    4da0:	09 f4       	brne	.+2      	; 0x4da4 <_Z17handleLinkBusMsgsv+0xbd0>
    4da2:	5b c1       	rjmp	.+694    	; 0x505a <_Z17handleLinkBusMsgsv+0xe86>
    4da4:	8a 85       	ldd	r24, Y+10	; 0x0a
    4da6:	9b 85       	ldd	r25, Y+11	; 0x0b
    4da8:	48 96       	adiw	r24, 0x18	; 24
    4daa:	0e 94 29 7c 	call	0xf852	; 0xf852 <atol>
    4dae:	dc 01       	movw	r26, r24
    4db0:	cb 01       	movw	r24, r22
    4db2:	8c a3       	std	Y+36, r24	; 0x24
    4db4:	9d a3       	std	Y+37, r25	; 0x25
    4db6:	80 91 8a 47 	lds	r24, 0x478A	; 0x80478a <g_intra_cycle_delay_time>
    4dba:	90 91 8b 47 	lds	r25, 0x478B	; 0x80478b <g_intra_cycle_delay_time+0x1>
    4dbe:	41 e0       	ldi	r20, 0x01	; 1
    4dc0:	2c a1       	ldd	r18, Y+36	; 0x24
    4dc2:	3d a1       	ldd	r19, Y+37	; 0x25
    4dc4:	28 17       	cp	r18, r24
    4dc6:	39 07       	cpc	r19, r25
    4dc8:	09 f4       	brne	.+2      	; 0x4dcc <_Z17handleLinkBusMsgsv+0xbf8>
    4dca:	40 e0       	ldi	r20, 0x00	; 0
    4dcc:	44 23       	and	r20, r20
    4dce:	59 f0       	breq	.+22     	; 0x4de6 <_Z17handleLinkBusMsgsv+0xc12>
    4dd0:	8c a1       	ldd	r24, Y+36	; 0x24
    4dd2:	9d a1       	ldd	r25, Y+37	; 0x25
    4dd4:	80 93 8a 47 	sts	0x478A, r24	; 0x80478a <g_intra_cycle_delay_time>
    4dd8:	90 93 8b 47 	sts	0x478B, r25	; 0x80478b <g_intra_cycle_delay_time+0x1>
    4ddc:	80 91 c1 47 	lds	r24, 0x47C1	; 0x8047c1 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4de0:	8f 5f       	subi	r24, 0xFF	; 255
    4de2:	80 93 c1 47 	sts	0x47C1, r24	; 0x8047c1 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4de6:	80 91 c2 47 	lds	r24, 0x47C2	; 0x8047c2 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    4dea:	8f 5f       	subi	r24, 0xFF	; 255
    4dec:	80 93 c2 47 	sts	0x47C2, r24	; 0x8047c2 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    4df0:	34 c1       	rjmp	.+616    	; 0x505a <_Z17handleLinkBusMsgsv+0xe86>
    4df2:	8a 85       	ldd	r24, Y+10	; 0x0a
    4df4:	9b 85       	ldd	r25, Y+11	; 0x0b
    4df6:	fc 01       	movw	r30, r24
    4df8:	83 81       	ldd	r24, Z+3	; 0x03
    4dfa:	88 23       	and	r24, r24
    4dfc:	09 f4       	brne	.+2      	; 0x4e00 <_Z17handleLinkBusMsgsv+0xc2c>
    4dfe:	2f c1       	rjmp	.+606    	; 0x505e <_Z17handleLinkBusMsgsv+0xe8a>
    4e00:	8a 85       	ldd	r24, Y+10	; 0x0a
    4e02:	9b 85       	ldd	r25, Y+11	; 0x0b
    4e04:	03 96       	adiw	r24, 0x03	; 3
    4e06:	bc 01       	movw	r22, r24
    4e08:	8e e5       	ldi	r24, 0x5E	; 94
    4e0a:	97 e4       	ldi	r25, 0x47	; 71
    4e0c:	0e 94 75 7c 	call	0xf8ea	; 0xf8ea <strcmp>
    4e10:	89 2b       	or	r24, r25
    4e12:	79 f0       	breq	.+30     	; 0x4e32 <_Z17handleLinkBusMsgsv+0xc5e>
    4e14:	8a 85       	ldd	r24, Y+10	; 0x0a
    4e16:	9b 85       	ldd	r25, Y+11	; 0x0b
    4e18:	03 96       	adiw	r24, 0x03	; 3
    4e1a:	44 e1       	ldi	r20, 0x14	; 20
    4e1c:	50 e0       	ldi	r21, 0x00	; 0
    4e1e:	bc 01       	movw	r22, r24
    4e20:	8e e5       	ldi	r24, 0x5E	; 94
    4e22:	97 e4       	ldi	r25, 0x47	; 71
    4e24:	0e 94 8e 7c 	call	0xf91c	; 0xf91c <strncpy>
    4e28:	80 91 c1 47 	lds	r24, 0x47C1	; 0x8047c1 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4e2c:	8f 5f       	subi	r24, 0xFF	; 255
    4e2e:	80 93 c1 47 	sts	0x47C1, r24	; 0x8047c1 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4e32:	80 91 c2 47 	lds	r24, 0x47C2	; 0x8047c2 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    4e36:	8f 5f       	subi	r24, 0xFF	; 255
    4e38:	80 93 c2 47 	sts	0x47C2, r24	; 0x8047c2 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    4e3c:	10 c1       	rjmp	.+544    	; 0x505e <_Z17handleLinkBusMsgsv+0xe8a>
    4e3e:	1e 82       	std	Y+6, r1	; 0x06
    4e40:	1f 82       	std	Y+7, r1	; 0x07
    4e42:	18 86       	std	Y+8, r1	; 0x08
    4e44:	19 86       	std	Y+9, r1	; 0x09
    4e46:	8a 85       	ldd	r24, Y+10	; 0x0a
    4e48:	9b 85       	ldd	r25, Y+11	; 0x0b
    4e4a:	fc 01       	movw	r30, r24
    4e4c:	83 81       	ldd	r24, Z+3	; 0x03
    4e4e:	88 23       	and	r24, r24
    4e50:	c9 f1       	breq	.+114    	; 0x4ec4 <_Z17handleLinkBusMsgsv+0xcf0>
    4e52:	8a 85       	ldd	r24, Y+10	; 0x0a
    4e54:	9b 85       	ldd	r25, Y+11	; 0x0b
    4e56:	03 96       	adiw	r24, 0x03	; 3
    4e58:	0e 94 29 7c 	call	0xf852	; 0xf852 <atol>
    4e5c:	dc 01       	movw	r26, r24
    4e5e:	cb 01       	movw	r24, r22
    4e60:	8c a7       	std	Y+44, r24	; 0x2c
    4e62:	9d a7       	std	Y+45, r25	; 0x2d
    4e64:	ae a7       	std	Y+46, r26	; 0x2e
    4e66:	bf a7       	std	Y+47, r27	; 0x2f
    4e68:	0e 94 da 6f 	call	0xdfb4	; 0xdfb4 <_Z14txGetFrequencyv>
    4e6c:	9b 01       	movw	r18, r22
    4e6e:	ac 01       	movw	r20, r24
    4e70:	8c a5       	ldd	r24, Y+44	; 0x2c
    4e72:	9d a5       	ldd	r25, Y+45	; 0x2d
    4e74:	ae a5       	ldd	r26, Y+46	; 0x2e
    4e76:	bf a5       	ldd	r27, Y+47	; 0x2f
    4e78:	61 e0       	ldi	r22, 0x01	; 1
    4e7a:	28 17       	cp	r18, r24
    4e7c:	39 07       	cpc	r19, r25
    4e7e:	4a 07       	cpc	r20, r26
    4e80:	5b 07       	cpc	r21, r27
    4e82:	09 f4       	brne	.+2      	; 0x4e86 <_Z17handleLinkBusMsgsv+0xcb2>
    4e84:	60 e0       	ldi	r22, 0x00	; 0
    4e86:	66 23       	and	r22, r22
    4e88:	b9 f0       	breq	.+46     	; 0x4eb8 <_Z17handleLinkBusMsgsv+0xce4>
    4e8a:	ce 01       	movw	r24, r28
    4e8c:	8c 96       	adiw	r24, 0x2c	; 44
    4e8e:	61 e0       	ldi	r22, 0x01	; 1
    4e90:	0e 94 88 6f 	call	0xdf10	; 0xdf10 <_Z14txSetFrequencyPmb>
    4e94:	98 2f       	mov	r25, r24
    4e96:	81 e0       	ldi	r24, 0x01	; 1
    4e98:	89 27       	eor	r24, r25
    4e9a:	88 23       	and	r24, r24
    4e9c:	69 f0       	breq	.+26     	; 0x4eb8 <_Z17handleLinkBusMsgsv+0xce4>
    4e9e:	8c a5       	ldd	r24, Y+44	; 0x2c
    4ea0:	9d a5       	ldd	r25, Y+45	; 0x2d
    4ea2:	ae a5       	ldd	r26, Y+46	; 0x2e
    4ea4:	bf a5       	ldd	r27, Y+47	; 0x2f
    4ea6:	8e 83       	std	Y+6, r24	; 0x06
    4ea8:	9f 83       	std	Y+7, r25	; 0x07
    4eaa:	a8 87       	std	Y+8, r26	; 0x08
    4eac:	b9 87       	std	Y+9, r27	; 0x09
    4eae:	80 91 c1 47 	lds	r24, 0x47C1	; 0x8047c1 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4eb2:	8f 5f       	subi	r24, 0xFF	; 255
    4eb4:	80 93 c1 47 	sts	0x47C1, r24	; 0x8047c1 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4eb8:	80 91 c2 47 	lds	r24, 0x47C2	; 0x8047c2 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    4ebc:	8f 5f       	subi	r24, 0xFF	; 255
    4ebe:	80 93 c2 47 	sts	0x47C2, r24	; 0x8047c2 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    4ec2:	08 c0       	rjmp	.+16     	; 0x4ed4 <_Z17handleLinkBusMsgsv+0xd00>
    4ec4:	0e 94 da 6f 	call	0xdfb4	; 0xdfb4 <_Z14txGetFrequencyv>
    4ec8:	dc 01       	movw	r26, r24
    4eca:	cb 01       	movw	r24, r22
    4ecc:	8e 83       	std	Y+6, r24	; 0x06
    4ece:	9f 83       	std	Y+7, r25	; 0x07
    4ed0:	a8 87       	std	Y+8, r26	; 0x08
    4ed2:	b9 87       	std	Y+9, r27	; 0x09
    4ed4:	8e 81       	ldd	r24, Y+6	; 0x06
    4ed6:	9f 81       	ldd	r25, Y+7	; 0x07
    4ed8:	a8 85       	ldd	r26, Y+8	; 0x08
    4eda:	b9 85       	ldd	r27, Y+9	; 0x09
    4edc:	89 2b       	or	r24, r25
    4ede:	8a 2b       	or	r24, r26
    4ee0:	8b 2b       	or	r24, r27
    4ee2:	09 f4       	brne	.+2      	; 0x4ee6 <_Z17handleLinkBusMsgsv+0xd12>
    4ee4:	be c0       	rjmp	.+380    	; 0x5062 <_Z17handleLinkBusMsgsv+0xe8e>
    4ee6:	89 85       	ldd	r24, Y+9	; 0x09
    4ee8:	8f 93       	push	r24
    4eea:	88 85       	ldd	r24, Y+8	; 0x08
    4eec:	8f 93       	push	r24
    4eee:	8f 81       	ldd	r24, Y+7	; 0x07
    4ef0:	8f 93       	push	r24
    4ef2:	8e 81       	ldd	r24, Y+6	; 0x06
    4ef4:	8f 93       	push	r24
    4ef6:	8e ed       	ldi	r24, 0xDE	; 222
    4ef8:	92 e4       	ldi	r25, 0x42	; 66
    4efa:	89 2f       	mov	r24, r25
    4efc:	8f 93       	push	r24
    4efe:	8e ed       	ldi	r24, 0xDE	; 222
    4f00:	92 e4       	ldi	r25, 0x42	; 66
    4f02:	8f 93       	push	r24
    4f04:	89 e1       	ldi	r24, 0x19	; 25
    4f06:	97 e4       	ldi	r25, 0x47	; 71
    4f08:	89 2f       	mov	r24, r25
    4f0a:	8f 93       	push	r24
    4f0c:	89 e1       	ldi	r24, 0x19	; 25
    4f0e:	97 e4       	ldi	r25, 0x47	; 71
    4f10:	8f 93       	push	r24
    4f12:	0e 94 ba 7c 	call	0xf974	; 0xf974 <sprintf>
    4f16:	8d b7       	in	r24, 0x3d	; 61
    4f18:	9e b7       	in	r25, 0x3e	; 62
    4f1a:	08 96       	adiw	r24, 0x08	; 8
    4f1c:	cd bf       	out	0x3d, r28	; 61
    4f1e:	de bf       	out	0x3e, r29	; 62
    4f20:	49 e1       	ldi	r20, 0x19	; 25
    4f22:	57 e4       	ldi	r21, 0x47	; 71
    4f24:	63 ee       	ldi	r22, 0xE3	; 227
    4f26:	72 e4       	ldi	r23, 0x42	; 66
    4f28:	83 e0       	ldi	r24, 0x03	; 3
    4f2a:	0e 94 bb 5a 	call	0xb576	; 0xb576 <_Z11lb_send_msg13LBMessageTypePKcPc>
    4f2e:	99 c0       	rjmp	.+306    	; 0x5062 <_Z17handleLinkBusMsgsv+0xe8e>
    4f30:	80 91 a1 47 	lds	r24, 0x47A1	; 0x8047a1 <_ZL22g_lastConversionResult>
    4f34:	90 91 a2 47 	lds	r25, 0x47A2	; 0x8047a2 <_ZL22g_lastConversionResult+0x1>
    4f38:	cc 01       	movw	r24, r24
    4f3a:	a0 e0       	ldi	r26, 0x00	; 0
    4f3c:	b0 e0       	ldi	r27, 0x00	; 0
    4f3e:	bc 01       	movw	r22, r24
    4f40:	cd 01       	movw	r24, r26
    4f42:	0e 94 c5 78 	call	0xf18a	; 0xf18a <__floatunsisf>
    4f46:	dc 01       	movw	r26, r24
    4f48:	cb 01       	movw	r24, r22
    4f4a:	8e a3       	std	Y+38, r24	; 0x26
    4f4c:	9f a3       	std	Y+39, r25	; 0x27
    4f4e:	a8 a7       	std	Y+40, r26	; 0x28
    4f50:	b9 a7       	std	Y+41, r27	; 0x29
    4f52:	20 e0       	ldi	r18, 0x00	; 0
    4f54:	30 e0       	ldi	r19, 0x00	; 0
    4f56:	4c e2       	ldi	r20, 0x2C	; 44
    4f58:	53 e4       	ldi	r21, 0x43	; 67
    4f5a:	6e a1       	ldd	r22, Y+38	; 0x26
    4f5c:	7f a1       	ldd	r23, Y+39	; 0x27
    4f5e:	88 a5       	ldd	r24, Y+40	; 0x28
    4f60:	99 a5       	ldd	r25, Y+41	; 0x29
    4f62:	0e 94 bd 79 	call	0xf37a	; 0xf37a <__mulsf3>
    4f66:	dc 01       	movw	r26, r24
    4f68:	cb 01       	movw	r24, r22
    4f6a:	8e a3       	std	Y+38, r24	; 0x26
    4f6c:	9f a3       	std	Y+39, r25	; 0x27
    4f6e:	a8 a7       	std	Y+40, r26	; 0x28
    4f70:	b9 a7       	std	Y+41, r27	; 0x29
    4f72:	2f e6       	ldi	r18, 0x6F	; 111
    4f74:	32 e1       	ldi	r19, 0x12	; 18
    4f76:	43 e0       	ldi	r20, 0x03	; 3
    4f78:	5a e3       	ldi	r21, 0x3A	; 58
    4f7a:	6e a1       	ldd	r22, Y+38	; 0x26
    4f7c:	7f a1       	ldd	r23, Y+39	; 0x27
    4f7e:	88 a5       	ldd	r24, Y+40	; 0x28
    4f80:	99 a5       	ldd	r25, Y+41	; 0x29
    4f82:	0e 94 bd 79 	call	0xf37a	; 0xf37a <__mulsf3>
    4f86:	dc 01       	movw	r26, r24
    4f88:	cb 01       	movw	r24, r22
    4f8a:	8e a3       	std	Y+38, r24	; 0x26
    4f8c:	9f a3       	std	Y+39, r25	; 0x27
    4f8e:	a8 a7       	std	Y+40, r26	; 0x28
    4f90:	b9 a7       	std	Y+41, r27	; 0x29
    4f92:	20 e0       	ldi	r18, 0x00	; 0
    4f94:	30 e0       	ldi	r19, 0x00	; 0
    4f96:	40 e8       	ldi	r20, 0x80	; 128
    4f98:	5f e3       	ldi	r21, 0x3F	; 63
    4f9a:	6e a1       	ldd	r22, Y+38	; 0x26
    4f9c:	7f a1       	ldd	r23, Y+39	; 0x27
    4f9e:	88 a5       	ldd	r24, Y+40	; 0x28
    4fa0:	99 a5       	ldd	r25, Y+41	; 0x29
    4fa2:	0e 94 95 77 	call	0xef2a	; 0xef2a <__addsf3>
    4fa6:	dc 01       	movw	r26, r24
    4fa8:	cb 01       	movw	r24, r22
    4faa:	8e a3       	std	Y+38, r24	; 0x26
    4fac:	9f a3       	std	Y+39, r25	; 0x27
    4fae:	a8 a7       	std	Y+40, r26	; 0x28
    4fb0:	b9 a7       	std	Y+41, r27	; 0x29
    4fb2:	8e a1       	ldd	r24, Y+38	; 0x26
    4fb4:	9f a1       	ldd	r25, Y+39	; 0x27
    4fb6:	a8 a5       	ldd	r26, Y+40	; 0x28
    4fb8:	b9 a5       	ldd	r27, Y+41	; 0x29
    4fba:	09 e1       	ldi	r16, 0x19	; 25
    4fbc:	17 e4       	ldi	r17, 0x47	; 71
    4fbe:	20 e0       	ldi	r18, 0x00	; 0
    4fc0:	44 e0       	ldi	r20, 0x04	; 4
    4fc2:	bc 01       	movw	r22, r24
    4fc4:	cd 01       	movw	r24, r26
    4fc6:	0e 94 c6 7a 	call	0xf58c	; 0xf58c <dtostrf>
    4fca:	10 92 1e 47 	sts	0x471E, r1	; 0x80471e <_ZL9g_tempStr+0x5>
    4fce:	67 ee       	ldi	r22, 0xE7	; 231
    4fd0:	72 e4       	ldi	r23, 0x42	; 66
    4fd2:	89 e1       	ldi	r24, 0x19	; 25
    4fd4:	97 e4       	ldi	r25, 0x47	; 71
    4fd6:	0e 94 0a 5b 	call	0xb614	; 0xb614 <_Z16lb_broadcast_strPKcS0_>
    4fda:	80 e0       	ldi	r24, 0x00	; 0
    4fdc:	90 e0       	ldi	r25, 0x00	; 0
    4fde:	0e 94 53 40 	call	0x80a6	; 0x80a6 <ds3231_get_epoch>
    4fe2:	dc 01       	movw	r26, r24
    4fe4:	cb 01       	movw	r24, r22
    4fe6:	bc 01       	movw	r22, r24
    4fe8:	cd 01       	movw	r24, r26
    4fea:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <set_system_time>
    4fee:	3a c0       	rjmp	.+116    	; 0x5064 <_Z17handleLinkBusMsgsv+0xe90>
    4ff0:	0e 94 40 35 	call	0x6a80	; 0x6a80 <_Z12temperatureCv>
    4ff4:	dc 01       	movw	r26, r24
    4ff6:	cb 01       	movw	r24, r22
    4ff8:	09 e1       	ldi	r16, 0x19	; 25
    4ffa:	17 e4       	ldi	r17, 0x47	; 71
    4ffc:	21 e0       	ldi	r18, 0x01	; 1
    4ffe:	44 e0       	ldi	r20, 0x04	; 4
    5000:	bc 01       	movw	r22, r24
    5002:	cd 01       	movw	r24, r26
    5004:	0e 94 c6 7a 	call	0xf58c	; 0xf58c <dtostrf>
    5008:	10 92 1e 47 	sts	0x471E, r1	; 0x80471e <_ZL9g_tempStr+0x5>
    500c:	6c ee       	ldi	r22, 0xEC	; 236
    500e:	72 e4       	ldi	r23, 0x42	; 66
    5010:	89 e1       	ldi	r24, 0x19	; 25
    5012:	97 e4       	ldi	r25, 0x47	; 71
    5014:	0e 94 0a 5b 	call	0xb614	; 0xb614 <_Z16lb_broadcast_strPKcS0_>
    5018:	25 c0       	rjmp	.+74     	; 0x5064 <_Z17handleLinkBusMsgsv+0xe90>
    501a:	41 ef       	ldi	r20, 0xF1	; 241
    501c:	52 e4       	ldi	r21, 0x42	; 66
    501e:	65 ef       	ldi	r22, 0xF5	; 245
    5020:	72 e4       	ldi	r23, 0x42	; 66
    5022:	83 e0       	ldi	r24, 0x03	; 3
    5024:	0e 94 bb 5a 	call	0xb576	; 0xb576 <_Z11lb_send_msg13LBMessageTypePKcPc>
    5028:	1d c0       	rjmp	.+58     	; 0x5064 <_Z17handleLinkBusMsgsv+0xe90>
    502a:	19 82       	std	Y+1, r1	; 0x01
    502c:	89 ef       	ldi	r24, 0xF9	; 249
    502e:	92 e4       	ldi	r25, 0x42	; 66
    5030:	0e 94 5e 5a 	call	0xb4bc	; 0xb4bc <_Z12lb_send_textPc>
    5034:	17 c0       	rjmp	.+46     	; 0x5064 <_Z17handleLinkBusMsgsv+0xe90>
    5036:	00 00       	nop
    5038:	15 c0       	rjmp	.+42     	; 0x5064 <_Z17handleLinkBusMsgsv+0xe90>
    503a:	00 00       	nop
    503c:	13 c0       	rjmp	.+38     	; 0x5064 <_Z17handleLinkBusMsgsv+0xe90>
    503e:	00 00       	nop
    5040:	11 c0       	rjmp	.+34     	; 0x5064 <_Z17handleLinkBusMsgsv+0xe90>
    5042:	00 00       	nop
    5044:	0f c0       	rjmp	.+30     	; 0x5064 <_Z17handleLinkBusMsgsv+0xe90>
    5046:	00 00       	nop
    5048:	0d c0       	rjmp	.+26     	; 0x5064 <_Z17handleLinkBusMsgsv+0xe90>
    504a:	00 00       	nop
    504c:	0b c0       	rjmp	.+22     	; 0x5064 <_Z17handleLinkBusMsgsv+0xe90>
    504e:	00 00       	nop
    5050:	09 c0       	rjmp	.+18     	; 0x5064 <_Z17handleLinkBusMsgsv+0xe90>
    5052:	00 00       	nop
    5054:	07 c0       	rjmp	.+14     	; 0x5064 <_Z17handleLinkBusMsgsv+0xe90>
    5056:	00 00       	nop
    5058:	05 c0       	rjmp	.+10     	; 0x5064 <_Z17handleLinkBusMsgsv+0xe90>
    505a:	00 00       	nop
    505c:	03 c0       	rjmp	.+6      	; 0x5064 <_Z17handleLinkBusMsgsv+0xe90>
    505e:	00 00       	nop
    5060:	01 c0       	rjmp	.+2      	; 0x5064 <_Z17handleLinkBusMsgsv+0xe90>
    5062:	00 00       	nop
    5064:	8a 85       	ldd	r24, Y+10	; 0x0a
    5066:	9b 85       	ldd	r25, Y+11	; 0x0b
    5068:	fc 01       	movw	r30, r24
    506a:	11 82       	std	Z+1, r1	; 0x01
    506c:	12 82       	std	Z+2, r1	; 0x02
    506e:	89 81       	ldd	r24, Y+1	; 0x01
    5070:	88 23       	and	r24, r24
    5072:	09 f4       	brne	.+2      	; 0x5076 <_Z17handleLinkBusMsgsv+0xea2>
    5074:	ba c8       	rjmp	.-3724   	; 0x41ea <_Z17handleLinkBusMsgsv+0x16>
    5076:	8f ef       	ldi	r24, 0xFF	; 255
    5078:	92 e4       	ldi	r25, 0x42	; 66
    507a:	0e 94 5e 5a 	call	0xb4bc	; 0xb4bc <_Z12lb_send_textPc>
    507e:	b5 c8       	rjmp	.-3734   	; 0x41ea <_Z17handleLinkBusMsgsv+0x16>
    5080:	00 00       	nop
    5082:	af 96       	adiw	r28, 0x2f	; 47
    5084:	cd bf       	out	0x3d, r28	; 61
    5086:	de bf       	out	0x3e, r29	; 62
    5088:	df 91       	pop	r29
    508a:	cf 91       	pop	r28
    508c:	1f 91       	pop	r17
    508e:	0f 91       	pop	r16
    5090:	08 95       	ret

00005092 <_Z19updateAntennaStatusv>:
    5092:	cf 93       	push	r28
    5094:	df 93       	push	r29
    5096:	1f 92       	push	r1
    5098:	cd b7       	in	r28, 0x3d	; 61
    509a:	de b7       	in	r29, 0x3e	; 62
    509c:	0e 94 23 2c 	call	0x5846	; 0x5846 <_Z18antennaIsConnectedv>
    50a0:	89 83       	std	Y+1, r24	; 0x01
    50a2:	99 81       	ldd	r25, Y+1	; 0x01
    50a4:	81 e0       	ldi	r24, 0x01	; 1
    50a6:	89 27       	eor	r24, r25
    50a8:	88 23       	and	r24, r24
    50aa:	91 f0       	breq	.+36     	; 0x50d0 <_Z19updateAntennaStatusv+0x3e>
    50ac:	90 91 51 47 	lds	r25, 0x4751	; 0x804751 <g_antenna_connect_state>
    50b0:	81 e0       	ldi	r24, 0x01	; 1
    50b2:	91 30       	cpi	r25, 0x01	; 1
    50b4:	09 f4       	brne	.+2      	; 0x50b8 <_Z19updateAntennaStatusv+0x26>
    50b6:	80 e0       	ldi	r24, 0x00	; 0
    50b8:	88 23       	and	r24, r24
    50ba:	31 f0       	breq	.+12     	; 0x50c8 <_Z19updateAntennaStatusv+0x36>
    50bc:	81 e0       	ldi	r24, 0x01	; 1
    50be:	80 93 51 47 	sts	0x4751, r24	; 0x804751 <g_antenna_connect_state>
    50c2:	81 e0       	ldi	r24, 0x01	; 1
    50c4:	80 93 06 40 	sts	0x4006, r24	; 0x804006 <_ZL28g_antenna_connection_changed>
    50c8:	83 e0       	ldi	r24, 0x03	; 3
    50ca:	80 93 23 40 	sts	0x4023, r24	; 0x804023 <_ZZ19updateAntennaStatusvE16antennaReadCount>
    50ce:	27 c0       	rjmp	.+78     	; 0x511e <_Z19updateAntennaStatusv+0x8c>
    50d0:	90 91 51 47 	lds	r25, 0x4751	; 0x804751 <g_antenna_connect_state>
    50d4:	81 e0       	ldi	r24, 0x01	; 1
    50d6:	92 30       	cpi	r25, 0x02	; 2
    50d8:	09 f4       	brne	.+2      	; 0x50dc <_Z19updateAntennaStatusv+0x4a>
    50da:	80 e0       	ldi	r24, 0x00	; 0
    50dc:	88 23       	and	r24, r24
    50de:	f9 f0       	breq	.+62     	; 0x511e <_Z19updateAntennaStatusv+0x8c>
    50e0:	80 91 c7 47 	lds	r24, 0x47C7	; 0x8047c7 <_ZZ19updateAntennaStatusvE26lastAntennaConnectionState>
    50e4:	99 81       	ldd	r25, Y+1	; 0x01
    50e6:	98 17       	cp	r25, r24
    50e8:	b9 f4       	brne	.+46     	; 0x5118 <_Z19updateAntennaStatusv+0x86>
    50ea:	80 91 23 40 	lds	r24, 0x4023	; 0x804023 <_ZZ19updateAntennaStatusvE16antennaReadCount>
    50ee:	88 23       	and	r24, r24
    50f0:	b1 f0       	breq	.+44     	; 0x511e <_Z19updateAntennaStatusv+0x8c>
    50f2:	80 91 23 40 	lds	r24, 0x4023	; 0x804023 <_ZZ19updateAntennaStatusvE16antennaReadCount>
    50f6:	81 50       	subi	r24, 0x01	; 1
    50f8:	80 93 23 40 	sts	0x4023, r24	; 0x804023 <_ZZ19updateAntennaStatusvE16antennaReadCount>
    50fc:	80 91 23 40 	lds	r24, 0x4023	; 0x804023 <_ZZ19updateAntennaStatusvE16antennaReadCount>
    5100:	88 23       	and	r24, r24
    5102:	69 f4       	brne	.+26     	; 0x511e <_Z19updateAntennaStatusv+0x8c>
    5104:	82 e0       	ldi	r24, 0x02	; 2
    5106:	80 93 51 47 	sts	0x4751, r24	; 0x804751 <g_antenna_connect_state>
    510a:	81 e0       	ldi	r24, 0x01	; 1
    510c:	80 93 06 40 	sts	0x4006, r24	; 0x804006 <_ZL28g_antenna_connection_changed>
    5110:	83 e0       	ldi	r24, 0x03	; 3
    5112:	80 93 23 40 	sts	0x4023, r24	; 0x804023 <_ZZ19updateAntennaStatusvE16antennaReadCount>
    5116:	03 c0       	rjmp	.+6      	; 0x511e <_Z19updateAntennaStatusv+0x8c>
    5118:	83 e0       	ldi	r24, 0x03	; 3
    511a:	80 93 23 40 	sts	0x4023, r24	; 0x804023 <_ZZ19updateAntennaStatusvE16antennaReadCount>
    511e:	89 81       	ldd	r24, Y+1	; 0x01
    5120:	80 93 c7 47 	sts	0x47C7, r24	; 0x8047c7 <_ZZ19updateAntennaStatusvE26lastAntennaConnectionState>
    5124:	00 00       	nop
    5126:	0f 90       	pop	r0
    5128:	df 91       	pop	r29
    512a:	cf 91       	pop	r28
    512c:	08 95       	ret

0000512e <_Z12eventEnabledv>:
    512e:	ef 92       	push	r14
    5130:	ff 92       	push	r15
    5132:	0f 93       	push	r16
    5134:	1f 93       	push	r17
    5136:	cf 93       	push	r28
    5138:	df 93       	push	r29
    513a:	cd b7       	in	r28, 0x3d	; 61
    513c:	de b7       	in	r29, 0x3e	; 62
    513e:	29 97       	sbiw	r28, 0x09	; 9
    5140:	cd bf       	out	0x3d, r28	; 61
    5142:	de bf       	out	0x3e, r29	; 62
    5144:	20 91 8c 47 	lds	r18, 0x478C	; 0x80478c <g_event_start_epoch>
    5148:	30 91 8d 47 	lds	r19, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    514c:	40 91 8e 47 	lds	r20, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    5150:	50 91 8f 47 	lds	r21, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    5154:	80 91 90 47 	lds	r24, 0x4790	; 0x804790 <g_event_finish_epoch>
    5158:	90 91 91 47 	lds	r25, 0x4791	; 0x804791 <g_event_finish_epoch+0x1>
    515c:	a0 91 92 47 	lds	r26, 0x4792	; 0x804792 <g_event_finish_epoch+0x2>
    5160:	b0 91 93 47 	lds	r27, 0x4793	; 0x804793 <g_event_finish_epoch+0x3>
    5164:	bc 01       	movw	r22, r24
    5166:	cd 01       	movw	r24, r26
    5168:	0e 94 e3 73 	call	0xe7c6	; 0xe7c6 <_Z7timeDifmm>
    516c:	dc 01       	movw	r26, r24
    516e:	cb 01       	movw	r24, r22
    5170:	89 83       	std	Y+1, r24	; 0x01
    5172:	9a 83       	std	Y+2, r25	; 0x02
    5174:	ab 83       	std	Y+3, r26	; 0x03
    5176:	bc 83       	std	Y+4, r27	; 0x04
    5178:	21 e0       	ldi	r18, 0x01	; 1
    517a:	89 81       	ldd	r24, Y+1	; 0x01
    517c:	9a 81       	ldd	r25, Y+2	; 0x02
    517e:	ab 81       	ldd	r26, Y+3	; 0x03
    5180:	bc 81       	ldd	r27, Y+4	; 0x04
    5182:	18 16       	cp	r1, r24
    5184:	19 06       	cpc	r1, r25
    5186:	1a 06       	cpc	r1, r26
    5188:	1b 06       	cpc	r1, r27
    518a:	0c f0       	brlt	.+2      	; 0x518e <_Z12eventEnabledv+0x60>
    518c:	20 e0       	ldi	r18, 0x00	; 0
    518e:	2d 83       	std	Y+5, r18	; 0x05
    5190:	ce 01       	movw	r24, r28
    5192:	06 96       	adiw	r24, 0x06	; 6
    5194:	0e 94 56 06 	call	0xcac	; 0xcac <time>
    5198:	20 91 90 47 	lds	r18, 0x4790	; 0x804790 <g_event_finish_epoch>
    519c:	30 91 91 47 	lds	r19, 0x4791	; 0x804791 <g_event_finish_epoch+0x1>
    51a0:	40 91 92 47 	lds	r20, 0x4792	; 0x804792 <g_event_finish_epoch+0x2>
    51a4:	50 91 93 47 	lds	r21, 0x4793	; 0x804793 <g_event_finish_epoch+0x3>
    51a8:	8e 81       	ldd	r24, Y+6	; 0x06
    51aa:	9f 81       	ldd	r25, Y+7	; 0x07
    51ac:	a8 85       	ldd	r26, Y+8	; 0x08
    51ae:	b9 85       	ldd	r27, Y+9	; 0x09
    51b0:	bc 01       	movw	r22, r24
    51b2:	cd 01       	movw	r24, r26
    51b4:	0e 94 e3 73 	call	0xe7c6	; 0xe7c6 <_Z7timeDifmm>
    51b8:	dc 01       	movw	r26, r24
    51ba:	cb 01       	movw	r24, r22
    51bc:	89 83       	std	Y+1, r24	; 0x01
    51be:	9a 83       	std	Y+2, r25	; 0x02
    51c0:	ab 83       	std	Y+3, r26	; 0x03
    51c2:	bc 83       	std	Y+4, r27	; 0x04
    51c4:	89 81       	ldd	r24, Y+1	; 0x01
    51c6:	9a 81       	ldd	r25, Y+2	; 0x02
    51c8:	ab 81       	ldd	r26, Y+3	; 0x03
    51ca:	bc 81       	ldd	r27, Y+4	; 0x04
    51cc:	bb 23       	and	r27, r27
    51ce:	2c f0       	brlt	.+10     	; 0x51da <_Z12eventEnabledv+0xac>
    51d0:	8d 81       	ldd	r24, Y+5	; 0x05
    51d2:	88 23       	and	r24, r24
    51d4:	11 f0       	breq	.+4      	; 0x51da <_Z12eventEnabledv+0xac>
    51d6:	80 e0       	ldi	r24, 0x00	; 0
    51d8:	4a c0       	rjmp	.+148    	; 0x526e <_Z12eventEnabledv+0x140>
    51da:	20 91 8c 47 	lds	r18, 0x478C	; 0x80478c <g_event_start_epoch>
    51de:	30 91 8d 47 	lds	r19, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    51e2:	40 91 8e 47 	lds	r20, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    51e6:	50 91 8f 47 	lds	r21, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    51ea:	8e 81       	ldd	r24, Y+6	; 0x06
    51ec:	9f 81       	ldd	r25, Y+7	; 0x07
    51ee:	a8 85       	ldd	r26, Y+8	; 0x08
    51f0:	b9 85       	ldd	r27, Y+9	; 0x09
    51f2:	bc 01       	movw	r22, r24
    51f4:	cd 01       	movw	r24, r26
    51f6:	0e 94 e3 73 	call	0xe7c6	; 0xe7c6 <_Z7timeDifmm>
    51fa:	dc 01       	movw	r26, r24
    51fc:	cb 01       	movw	r24, r22
    51fe:	89 83       	std	Y+1, r24	; 0x01
    5200:	9a 83       	std	Y+2, r25	; 0x02
    5202:	ab 83       	std	Y+3, r26	; 0x03
    5204:	bc 83       	std	Y+4, r27	; 0x04
    5206:	89 81       	ldd	r24, Y+1	; 0x01
    5208:	9a 81       	ldd	r25, Y+2	; 0x02
    520a:	ab 81       	ldd	r26, Y+3	; 0x03
    520c:	bc 81       	ldd	r27, Y+4	; 0x04
    520e:	84 3c       	cpi	r24, 0xC4	; 196
    5210:	9f 4f       	sbci	r25, 0xFF	; 255
    5212:	af 4f       	sbci	r26, 0xFF	; 255
    5214:	bf 4f       	sbci	r27, 0xFF	; 255
    5216:	64 f0       	brlt	.+24     	; 0x5230 <_Z12eventEnabledv+0x102>
    5218:	10 92 5d 47 	sts	0x475D, r1	; 0x80475d <_ZL11g_sleepType>
    521c:	10 92 15 40 	sts	0x4015, r1	; 0x804015 <_ZL18g_seconds_to_sleep>
    5220:	10 92 16 40 	sts	0x4016, r1	; 0x804016 <_ZL18g_seconds_to_sleep+0x1>
    5224:	10 92 17 40 	sts	0x4017, r1	; 0x804017 <_ZL18g_seconds_to_sleep+0x2>
    5228:	10 92 18 40 	sts	0x4018, r1	; 0x804018 <_ZL18g_seconds_to_sleep+0x3>
    522c:	81 e0       	ldi	r24, 0x01	; 1
    522e:	1f c0       	rjmp	.+62     	; 0x526e <_Z12eventEnabledv+0x140>
    5230:	24 ec       	ldi	r18, 0xC4	; 196
    5232:	3f ef       	ldi	r19, 0xFF	; 255
    5234:	4f ef       	ldi	r20, 0xFF	; 255
    5236:	5f ef       	ldi	r21, 0xFF	; 255
    5238:	89 81       	ldd	r24, Y+1	; 0x01
    523a:	9a 81       	ldd	r25, Y+2	; 0x02
    523c:	ab 81       	ldd	r26, Y+3	; 0x03
    523e:	bc 81       	ldd	r27, Y+4	; 0x04
    5240:	79 01       	movw	r14, r18
    5242:	8a 01       	movw	r16, r20
    5244:	e8 1a       	sub	r14, r24
    5246:	f9 0a       	sbc	r15, r25
    5248:	0a 0b       	sbc	r16, r26
    524a:	1b 0b       	sbc	r17, r27
    524c:	d8 01       	movw	r26, r16
    524e:	c7 01       	movw	r24, r14
    5250:	80 93 15 40 	sts	0x4015, r24	; 0x804015 <_ZL18g_seconds_to_sleep>
    5254:	90 93 16 40 	sts	0x4016, r25	; 0x804016 <_ZL18g_seconds_to_sleep+0x1>
    5258:	a0 93 17 40 	sts	0x4017, r26	; 0x804017 <_ZL18g_seconds_to_sleep+0x2>
    525c:	b0 93 18 40 	sts	0x4018, r27	; 0x804018 <_ZL18g_seconds_to_sleep+0x3>
    5260:	81 e0       	ldi	r24, 0x01	; 1
    5262:	80 93 5d 47 	sts	0x475D, r24	; 0x80475d <_ZL11g_sleepType>
    5266:	81 e0       	ldi	r24, 0x01	; 1
    5268:	80 93 98 47 	sts	0x4798, r24	; 0x804798 <_ZL13g_go_to_sleep>
    526c:	81 e0       	ldi	r24, 0x01	; 1
    526e:	29 96       	adiw	r28, 0x09	; 9
    5270:	cd bf       	out	0x3d, r28	; 61
    5272:	de bf       	out	0x3e, r29	; 62
    5274:	df 91       	pop	r29
    5276:	cf 91       	pop	r28
    5278:	1f 91       	pop	r17
    527a:	0f 91       	pop	r16
    527c:	ff 90       	pop	r15
    527e:	ef 90       	pop	r14
    5280:	08 95       	ret

00005282 <_Z8wdt_init7WDReset>:
    5282:	cf 93       	push	r28
    5284:	df 93       	push	r29
    5286:	1f 92       	push	r1
    5288:	cd b7       	in	r28, 0x3d	; 61
    528a:	de b7       	in	r29, 0x3e	; 62
    528c:	89 83       	std	Y+1, r24	; 0x01
    528e:	00 00       	nop
    5290:	0f 90       	pop	r0
    5292:	df 91       	pop	r29
    5294:	cf 91       	pop	r28
    5296:	08 95       	ret

00005298 <_Z13throttleValueh>:
    5298:	cf 93       	push	r28
    529a:	df 93       	push	r29
    529c:	cd b7       	in	r28, 0x3d	; 61
    529e:	de b7       	in	r29, 0x3e	; 62
    52a0:	2a 97       	sbiw	r28, 0x0a	; 10
    52a2:	cd bf       	out	0x3d, r28	; 61
    52a4:	de bf       	out	0x3e, r29	; 62
    52a6:	8a 87       	std	Y+10, r24	; 0x0a
    52a8:	8a 85       	ldd	r24, Y+10	; 0x0a
    52aa:	89 83       	std	Y+1, r24	; 0x01
    52ac:	85 e0       	ldi	r24, 0x05	; 5
    52ae:	90 e0       	ldi	r25, 0x00	; 0
    52b0:	8a 83       	std	Y+2, r24	; 0x02
    52b2:	9b 83       	std	Y+3, r25	; 0x03
    52b4:	84 e1       	ldi	r24, 0x14	; 20
    52b6:	90 e0       	ldi	r25, 0x00	; 0
    52b8:	8c 83       	std	Y+4, r24	; 0x04
    52ba:	9d 83       	std	Y+5, r25	; 0x05
    52bc:	89 81       	ldd	r24, Y+1	; 0x01
    52be:	28 2f       	mov	r18, r24
    52c0:	88 0f       	add	r24, r24
    52c2:	33 0b       	sbc	r19, r19
    52c4:	8c 81       	ldd	r24, Y+4	; 0x04
    52c6:	9d 81       	ldd	r25, Y+5	; 0x05
    52c8:	82 17       	cp	r24, r18
    52ca:	93 07       	cpc	r25, r19
    52cc:	5c f0       	brlt	.+22     	; 0x52e4 <_Z13throttleValueh+0x4c>
    52ce:	89 81       	ldd	r24, Y+1	; 0x01
    52d0:	08 2e       	mov	r0, r24
    52d2:	00 0c       	add	r0, r0
    52d4:	99 0b       	sbc	r25, r25
    52d6:	2a 81       	ldd	r18, Y+2	; 0x02
    52d8:	3b 81       	ldd	r19, Y+3	; 0x03
    52da:	82 17       	cp	r24, r18
    52dc:	93 07       	cpc	r25, r19
    52de:	24 f4       	brge	.+8      	; 0x52e8 <_Z13throttleValueh+0x50>
    52e0:	c9 01       	movw	r24, r18
    52e2:	02 c0       	rjmp	.+4      	; 0x52e8 <_Z13throttleValueh+0x50>
    52e4:	8c 81       	ldd	r24, Y+4	; 0x04
    52e6:	9d 81       	ldd	r25, Y+5	; 0x05
    52e8:	8a 87       	std	Y+10, r24	; 0x0a
    52ea:	8a 85       	ldd	r24, Y+10	; 0x0a
    52ec:	28 2f       	mov	r18, r24
    52ee:	30 e0       	ldi	r19, 0x00	; 0
    52f0:	40 e0       	ldi	r20, 0x00	; 0
    52f2:	50 e0       	ldi	r21, 0x00	; 0
    52f4:	88 ed       	ldi	r24, 0xD8	; 216
    52f6:	9d e0       	ldi	r25, 0x0D	; 13
    52f8:	a0 e0       	ldi	r26, 0x00	; 0
    52fa:	b0 e0       	ldi	r27, 0x00	; 0
    52fc:	bc 01       	movw	r22, r24
    52fe:	cd 01       	movw	r24, r26
    5300:	0e 94 84 7a 	call	0xf508	; 0xf508 <__divmodsi4>
    5304:	da 01       	movw	r26, r20
    5306:	c9 01       	movw	r24, r18
    5308:	2a e0       	ldi	r18, 0x0A	; 10
    530a:	30 e0       	ldi	r19, 0x00	; 0
    530c:	40 e0       	ldi	r20, 0x00	; 0
    530e:	50 e0       	ldi	r21, 0x00	; 0
    5310:	bc 01       	movw	r22, r24
    5312:	cd 01       	movw	r24, r26
    5314:	0e 94 84 7a 	call	0xf508	; 0xf508 <__divmodsi4>
    5318:	da 01       	movw	r26, r20
    531a:	c9 01       	movw	r24, r18
    531c:	bc 01       	movw	r22, r24
    531e:	cd 01       	movw	r24, r26
    5320:	0e 94 c7 78 	call	0xf18e	; 0xf18e <__floatsisf>
    5324:	dc 01       	movw	r26, r24
    5326:	cb 01       	movw	r24, r22
    5328:	8e 83       	std	Y+6, r24	; 0x06
    532a:	9f 83       	std	Y+7, r25	; 0x07
    532c:	a8 87       	std	Y+8, r26	; 0x08
    532e:	b9 87       	std	Y+9, r27	; 0x09
    5330:	6e 81       	ldd	r22, Y+6	; 0x06
    5332:	7f 81       	ldd	r23, Y+7	; 0x07
    5334:	88 85       	ldd	r24, Y+8	; 0x08
    5336:	99 85       	ldd	r25, Y+9	; 0x09
    5338:	0e 94 96 78 	call	0xf12c	; 0xf12c <__fixunssfsi>
    533c:	dc 01       	movw	r26, r24
    533e:	cb 01       	movw	r24, r22
    5340:	2a 96       	adiw	r28, 0x0a	; 10
    5342:	cd bf       	out	0x3d, r28	; 61
    5344:	de bf       	out	0x3e, r29	; 62
    5346:	df 91       	pop	r29
    5348:	cf 91       	pop	r28
    534a:	08 95       	ret

0000534c <_Z11launchEventP2SC>:
    534c:	cf 93       	push	r28
    534e:	df 93       	push	r29
    5350:	00 d0       	rcall	.+0      	; 0x5352 <_Z11launchEventP2SC+0x6>
    5352:	1f 92       	push	r1
    5354:	cd b7       	in	r28, 0x3d	; 61
    5356:	de b7       	in	r29, 0x3e	; 62
    5358:	8a 83       	std	Y+2, r24	; 0x02
    535a:	9b 83       	std	Y+3, r25	; 0x03
    535c:	8a 81       	ldd	r24, Y+2	; 0x02
    535e:	9b 81       	ldd	r25, Y+3	; 0x03
    5360:	0e 94 d1 29 	call	0x53a2	; 0x53a2 <_Z33activateEventUsingCurrentSettingsP2SC>
    5364:	89 83       	std	Y+1, r24	; 0x01
    5366:	8a 81       	ldd	r24, Y+2	; 0x02
    5368:	9b 81       	ldd	r25, Y+3	; 0x03
    536a:	fc 01       	movw	r30, r24
    536c:	80 81       	ld	r24, Z
    536e:	88 23       	and	r24, r24
    5370:	31 f0       	breq	.+12     	; 0x537e <_Z11launchEventP2SC+0x32>
    5372:	8a 81       	ldd	r24, Y+2	; 0x02
    5374:	9b 81       	ldd	r25, Y+3	; 0x03
    5376:	fc 01       	movw	r30, r24
    5378:	80 81       	ld	r24, Z
    537a:	80 93 4c 47 	sts	0x474C, r24	; 0x80474c <_ZL18g_last_status_code>
    537e:	89 81       	ldd	r24, Y+1	; 0x01
    5380:	88 23       	and	r24, r24
    5382:	21 f0       	breq	.+8      	; 0x538c <_Z11launchEventP2SC+0x40>
    5384:	89 81       	ldd	r24, Y+1	; 0x01
    5386:	80 93 4b 47 	sts	0x474B, r24	; 0x80474b <_ZL17g_last_error_code>
    538a:	04 c0       	rjmp	.+8      	; 0x5394 <_Z11launchEventP2SC+0x48>
    538c:	0e 94 97 28 	call	0x512e	; 0x512e <_Z12eventEnabledv>
    5390:	80 93 94 47 	sts	0x4794, r24	; 0x804794 <g_event_enabled>
    5394:	89 81       	ldd	r24, Y+1	; 0x01
    5396:	23 96       	adiw	r28, 0x03	; 3
    5398:	cd bf       	out	0x3d, r28	; 61
    539a:	de bf       	out	0x3e, r29	; 62
    539c:	df 91       	pop	r29
    539e:	cf 91       	pop	r28
    53a0:	08 95       	ret

000053a2 <_Z33activateEventUsingCurrentSettingsP2SC>:
    53a2:	cf 93       	push	r28
    53a4:	df 93       	push	r29
    53a6:	cd b7       	in	r28, 0x3d	; 61
    53a8:	de b7       	in	r29, 0x3e	; 62
    53aa:	63 97       	sbiw	r28, 0x13	; 19
    53ac:	cd bf       	out	0x3d, r28	; 61
    53ae:	de bf       	out	0x3e, r29	; 62
    53b0:	8a 8b       	std	Y+18, r24	; 0x12
    53b2:	9b 8b       	std	Y+19, r25	; 0x13
    53b4:	80 91 8c 47 	lds	r24, 0x478C	; 0x80478c <g_event_start_epoch>
    53b8:	90 91 8d 47 	lds	r25, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    53bc:	a0 91 8e 47 	lds	r26, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    53c0:	b0 91 8f 47 	lds	r27, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    53c4:	21 e0       	ldi	r18, 0x01	; 1
    53c6:	89 2b       	or	r24, r25
    53c8:	8a 2b       	or	r24, r26
    53ca:	8b 2b       	or	r24, r27
    53cc:	09 f0       	breq	.+2      	; 0x53d0 <_Z33activateEventUsingCurrentSettingsP2SC+0x2e>
    53ce:	20 e0       	ldi	r18, 0x00	; 0
    53d0:	22 23       	and	r18, r18
    53d2:	11 f0       	breq	.+4      	; 0x53d8 <_Z33activateEventUsingCurrentSettingsP2SC+0x36>
    53d4:	8c ec       	ldi	r24, 0xCC	; 204
    53d6:	18 c2       	rjmp	.+1072   	; 0x5808 <_Z33activateEventUsingCurrentSettingsP2SC+0x466>
    53d8:	20 91 8c 47 	lds	r18, 0x478C	; 0x80478c <g_event_start_epoch>
    53dc:	30 91 8d 47 	lds	r19, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    53e0:	40 91 8e 47 	lds	r20, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    53e4:	50 91 8f 47 	lds	r21, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    53e8:	80 91 90 47 	lds	r24, 0x4790	; 0x804790 <g_event_finish_epoch>
    53ec:	90 91 91 47 	lds	r25, 0x4791	; 0x804791 <g_event_finish_epoch+0x1>
    53f0:	a0 91 92 47 	lds	r26, 0x4792	; 0x804792 <g_event_finish_epoch+0x2>
    53f4:	b0 91 93 47 	lds	r27, 0x4793	; 0x804793 <g_event_finish_epoch+0x3>
    53f8:	61 e0       	ldi	r22, 0x01	; 1
    53fa:	28 17       	cp	r18, r24
    53fc:	39 07       	cpc	r19, r25
    53fe:	4a 07       	cpc	r20, r26
    5400:	5b 07       	cpc	r21, r27
    5402:	08 f4       	brcc	.+2      	; 0x5406 <_Z33activateEventUsingCurrentSettingsP2SC+0x64>
    5404:	60 e0       	ldi	r22, 0x00	; 0
    5406:	66 23       	and	r22, r22
    5408:	11 f0       	breq	.+4      	; 0x540e <_Z33activateEventUsingCurrentSettingsP2SC+0x6c>
    540a:	8d ec       	ldi	r24, 0xCD	; 205
    540c:	fd c1       	rjmp	.+1018   	; 0x5808 <_Z33activateEventUsingCurrentSettingsP2SC+0x466>
    540e:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    5412:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    5416:	21 e0       	ldi	r18, 0x01	; 1
    5418:	89 2b       	or	r24, r25
    541a:	09 f0       	breq	.+2      	; 0x541e <_Z33activateEventUsingCurrentSettingsP2SC+0x7c>
    541c:	20 e0       	ldi	r18, 0x00	; 0
    541e:	22 23       	and	r18, r18
    5420:	11 f0       	breq	.+4      	; 0x5426 <_Z33activateEventUsingCurrentSettingsP2SC+0x84>
    5422:	8b ec       	ldi	r24, 0xCB	; 203
    5424:	f1 c1       	rjmp	.+994    	; 0x5808 <_Z33activateEventUsingCurrentSettingsP2SC+0x466>
    5426:	20 91 0f 40 	lds	r18, 0x400F	; 0x80400f <g_off_air_seconds>
    542a:	30 91 10 40 	lds	r19, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    542e:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    5432:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    5436:	28 0f       	add	r18, r24
    5438:	39 1f       	adc	r19, r25
    543a:	80 91 8a 47 	lds	r24, 0x478A	; 0x80478a <g_intra_cycle_delay_time>
    543e:	90 91 8b 47 	lds	r25, 0x478B	; 0x80478b <g_intra_cycle_delay_time+0x1>
    5442:	41 e0       	ldi	r20, 0x01	; 1
    5444:	28 17       	cp	r18, r24
    5446:	39 07       	cpc	r19, r25
    5448:	0c f0       	brlt	.+2      	; 0x544c <_Z33activateEventUsingCurrentSettingsP2SC+0xaa>
    544a:	40 e0       	ldi	r20, 0x00	; 0
    544c:	44 23       	and	r20, r20
    544e:	11 f0       	breq	.+4      	; 0x5454 <_Z33activateEventUsingCurrentSettingsP2SC+0xb2>
    5450:	8a ec       	ldi	r24, 0xCA	; 202
    5452:	da c1       	rjmp	.+948    	; 0x5808 <_Z33activateEventUsingCurrentSettingsP2SC+0x466>
    5454:	80 91 5e 47 	lds	r24, 0x475E	; 0x80475e <g_messages_text>
    5458:	88 23       	and	r24, r24
    545a:	11 f4       	brne	.+4      	; 0x5460 <_Z33activateEventUsingCurrentSettingsP2SC+0xbe>
    545c:	89 ec       	ldi	r24, 0xC9	; 201
    545e:	d4 c1       	rjmp	.+936    	; 0x5808 <_Z33activateEventUsingCurrentSettingsP2SC+0x466>
    5460:	90 91 0c 40 	lds	r25, 0x400C	; 0x80400c <g_pattern_codespeed>
    5464:	81 e0       	ldi	r24, 0x01	; 1
    5466:	99 23       	and	r25, r25
    5468:	09 f0       	breq	.+2      	; 0x546c <_Z33activateEventUsingCurrentSettingsP2SC+0xca>
    546a:	80 e0       	ldi	r24, 0x00	; 0
    546c:	88 23       	and	r24, r24
    546e:	11 f0       	breq	.+4      	; 0x5474 <_Z33activateEventUsingCurrentSettingsP2SC+0xd2>
    5470:	88 ec       	ldi	r24, 0xC8	; 200
    5472:	ca c1       	rjmp	.+916    	; 0x5808 <_Z33activateEventUsingCurrentSettingsP2SC+0x466>
    5474:	80 91 73 47 	lds	r24, 0x4773	; 0x804773 <g_messages_text+0x15>
    5478:	88 23       	and	r24, r24
    547a:	91 f1       	breq	.+100    	; 0x54e0 <_Z33activateEventUsingCurrentSettingsP2SC+0x13e>
    547c:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    5480:	88 23       	and	r24, r24
    5482:	31 f0       	breq	.+12     	; 0x5490 <_Z33activateEventUsingCurrentSettingsP2SC+0xee>
    5484:	80 91 11 40 	lds	r24, 0x4011	; 0x804011 <g_ID_period_seconds>
    5488:	90 91 12 40 	lds	r25, 0x4012	; 0x804012 <g_ID_period_seconds+0x1>
    548c:	89 2b       	or	r24, r25
    548e:	11 f4       	brne	.+4      	; 0x5494 <_Z33activateEventUsingCurrentSettingsP2SC+0xf2>
    5490:	81 e0       	ldi	r24, 0x01	; 1
    5492:	01 c0       	rjmp	.+2      	; 0x5496 <_Z33activateEventUsingCurrentSettingsP2SC+0xf4>
    5494:	80 e0       	ldi	r24, 0x00	; 0
    5496:	88 23       	and	r24, r24
    5498:	11 f0       	breq	.+4      	; 0x549e <_Z33activateEventUsingCurrentSettingsP2SC+0xfc>
    549a:	87 ec       	ldi	r24, 0xC7	; 199
    549c:	b5 c1       	rjmp	.+874    	; 0x5808 <_Z33activateEventUsingCurrentSettingsP2SC+0x466>
    549e:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    54a2:	88 2f       	mov	r24, r24
    54a4:	90 e0       	ldi	r25, 0x00	; 0
    54a6:	bc 01       	movw	r22, r24
    54a8:	83 e7       	ldi	r24, 0x73	; 115
    54aa:	97 e4       	ldi	r25, 0x47	; 71
    54ac:	0e 94 9c 5c 	call	0xb938	; 0xb938 <_Z26timeRequiredToSendStrAtWPMPcj>
    54b0:	8c 50       	subi	r24, 0x0C	; 12
    54b2:	9e 4f       	sbci	r25, 0xFE	; 254
    54b4:	96 95       	lsr	r25
    54b6:	87 95       	ror	r24
    54b8:	96 95       	lsr	r25
    54ba:	87 95       	ror	r24
    54bc:	96 95       	lsr	r25
    54be:	87 95       	ror	r24
    54c0:	9c 01       	movw	r18, r24
    54c2:	a5 ec       	ldi	r26, 0xC5	; 197
    54c4:	b0 e2       	ldi	r27, 0x20	; 32
    54c6:	0e 94 ac 7a 	call	0xf558	; 0xf558 <__umulhisi3>
    54ca:	92 95       	swap	r25
    54cc:	82 95       	swap	r24
    54ce:	8f 70       	andi	r24, 0x0F	; 15
    54d0:	89 27       	eor	r24, r25
    54d2:	9f 70       	andi	r25, 0x0F	; 15
    54d4:	89 27       	eor	r24, r25
    54d6:	80 93 88 47 	sts	0x4788, r24	; 0x804788 <g_time_needed_for_ID>
    54da:	90 93 89 47 	sts	0x4789, r25	; 0x804789 <g_time_needed_for_ID+0x1>
    54de:	04 c0       	rjmp	.+8      	; 0x54e8 <_Z33activateEventUsingCurrentSettingsP2SC+0x146>
    54e0:	10 92 88 47 	sts	0x4788, r1	; 0x804788 <g_time_needed_for_ID>
    54e4:	10 92 89 47 	sts	0x4789, r1	; 0x804789 <g_time_needed_for_ID+0x1>
    54e8:	80 e0       	ldi	r24, 0x00	; 0
    54ea:	90 e0       	ldi	r25, 0x00	; 0
    54ec:	0e 94 56 06 	call	0xcac	; 0xcac <time>
    54f0:	dc 01       	movw	r26, r24
    54f2:	cb 01       	movw	r24, r22
    54f4:	8a 83       	std	Y+2, r24	; 0x02
    54f6:	9b 83       	std	Y+3, r25	; 0x03
    54f8:	ac 83       	std	Y+4, r26	; 0x04
    54fa:	bd 83       	std	Y+5, r27	; 0x05
    54fc:	20 91 90 47 	lds	r18, 0x4790	; 0x804790 <g_event_finish_epoch>
    5500:	30 91 91 47 	lds	r19, 0x4791	; 0x804791 <g_event_finish_epoch+0x1>
    5504:	40 91 92 47 	lds	r20, 0x4792	; 0x804792 <g_event_finish_epoch+0x2>
    5508:	50 91 93 47 	lds	r21, 0x4793	; 0x804793 <g_event_finish_epoch+0x3>
    550c:	61 e0       	ldi	r22, 0x01	; 1
    550e:	8a 81       	ldd	r24, Y+2	; 0x02
    5510:	9b 81       	ldd	r25, Y+3	; 0x03
    5512:	ac 81       	ldd	r26, Y+4	; 0x04
    5514:	bd 81       	ldd	r27, Y+5	; 0x05
    5516:	28 17       	cp	r18, r24
    5518:	39 07       	cpc	r19, r25
    551a:	4a 07       	cpc	r20, r26
    551c:	5b 07       	cpc	r21, r27
    551e:	08 f0       	brcs	.+2      	; 0x5522 <_Z33activateEventUsingCurrentSettingsP2SC+0x180>
    5520:	60 e0       	ldi	r22, 0x00	; 0
    5522:	66 23       	and	r22, r22
    5524:	59 f0       	breq	.+22     	; 0x553c <_Z33activateEventUsingCurrentSettingsP2SC+0x19a>
    5526:	8a 89       	ldd	r24, Y+18	; 0x12
    5528:	9b 89       	ldd	r25, Y+19	; 0x13
    552a:	89 2b       	or	r24, r25
    552c:	09 f4       	brne	.+2      	; 0x5530 <_Z33activateEventUsingCurrentSettingsP2SC+0x18e>
    552e:	6b c1       	rjmp	.+726    	; 0x5806 <_Z33activateEventUsingCurrentSettingsP2SC+0x464>
    5530:	8a 89       	ldd	r24, Y+18	; 0x12
    5532:	9b 89       	ldd	r25, Y+19	; 0x13
    5534:	2a ef       	ldi	r18, 0xFA	; 250
    5536:	fc 01       	movw	r30, r24
    5538:	20 83       	st	Z, r18
    553a:	65 c1       	rjmp	.+714    	; 0x5806 <_Z33activateEventUsingCurrentSettingsP2SC+0x464>
    553c:	20 91 8c 47 	lds	r18, 0x478C	; 0x80478c <g_event_start_epoch>
    5540:	30 91 8d 47 	lds	r19, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    5544:	40 91 8e 47 	lds	r20, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    5548:	50 91 8f 47 	lds	r21, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    554c:	8a 81       	ldd	r24, Y+2	; 0x02
    554e:	9b 81       	ldd	r25, Y+3	; 0x03
    5550:	ac 81       	ldd	r26, Y+4	; 0x04
    5552:	bd 81       	ldd	r27, Y+5	; 0x05
    5554:	bc 01       	movw	r22, r24
    5556:	cd 01       	movw	r24, r26
    5558:	0e 94 e3 73 	call	0xe7c6	; 0xe7c6 <_Z7timeDifmm>
    555c:	dc 01       	movw	r26, r24
    555e:	cb 01       	movw	r24, r22
    5560:	8e 83       	std	Y+6, r24	; 0x06
    5562:	9f 83       	std	Y+7, r25	; 0x07
    5564:	a8 87       	std	Y+8, r26	; 0x08
    5566:	b9 87       	std	Y+9, r27	; 0x09
    5568:	8e 81       	ldd	r24, Y+6	; 0x06
    556a:	9f 81       	ldd	r25, Y+7	; 0x07
    556c:	a8 85       	ldd	r26, Y+8	; 0x08
    556e:	b9 85       	ldd	r27, Y+9	; 0x09
    5570:	bb 23       	and	r27, r27
    5572:	0c f4       	brge	.+2      	; 0x5576 <_Z33activateEventUsingCurrentSettingsP2SC+0x1d4>
    5574:	34 c1       	rjmp	.+616    	; 0x57de <_Z33activateEventUsingCurrentSettingsP2SC+0x43c>
    5576:	19 82       	std	Y+1, r1	; 0x01
    5578:	20 91 0d 40 	lds	r18, 0x400D	; 0x80400d <g_on_air_seconds>
    557c:	30 91 0e 40 	lds	r19, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    5580:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_off_air_seconds>
    5584:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    5588:	82 0f       	add	r24, r18
    558a:	93 1f       	adc	r25, r19
    558c:	8a 87       	std	Y+10, r24	; 0x0a
    558e:	9b 87       	std	Y+11, r25	; 0x0b
    5590:	8a 85       	ldd	r24, Y+10	; 0x0a
    5592:	9b 85       	ldd	r25, Y+11	; 0x0b
    5594:	9c 01       	movw	r18, r24
    5596:	99 0f       	add	r25, r25
    5598:	44 0b       	sbc	r20, r20
    559a:	55 0b       	sbc	r21, r21
    559c:	8e 81       	ldd	r24, Y+6	; 0x06
    559e:	9f 81       	ldd	r25, Y+7	; 0x07
    55a0:	a8 85       	ldd	r26, Y+8	; 0x08
    55a2:	b9 85       	ldd	r27, Y+9	; 0x09
    55a4:	bc 01       	movw	r22, r24
    55a6:	cd 01       	movw	r24, r26
    55a8:	0e 94 84 7a 	call	0xf508	; 0xf508 <__divmodsi4>
    55ac:	dc 01       	movw	r26, r24
    55ae:	cb 01       	movw	r24, r22
    55b0:	8c 87       	std	Y+12, r24	; 0x0c
    55b2:	9d 87       	std	Y+13, r25	; 0x0d
    55b4:	20 91 8a 47 	lds	r18, 0x478A	; 0x80478a <g_intra_cycle_delay_time>
    55b8:	30 91 8b 47 	lds	r19, 0x478B	; 0x80478b <g_intra_cycle_delay_time+0x1>
    55bc:	8c 85       	ldd	r24, Y+12	; 0x0c
    55be:	9d 85       	ldd	r25, Y+13	; 0x0d
    55c0:	a9 01       	movw	r20, r18
    55c2:	48 1b       	sub	r20, r24
    55c4:	59 0b       	sbc	r21, r25
    55c6:	ca 01       	movw	r24, r20
    55c8:	8e 87       	std	Y+14, r24	; 0x0e
    55ca:	9f 87       	std	Y+15, r25	; 0x0f
    55cc:	8e 85       	ldd	r24, Y+14	; 0x0e
    55ce:	9f 85       	ldd	r25, Y+15	; 0x0f
    55d0:	18 16       	cp	r1, r24
    55d2:	19 06       	cpc	r1, r25
    55d4:	0c f4       	brge	.+2      	; 0x55d8 <_Z33activateEventUsingCurrentSettingsP2SC+0x236>
    55d6:	a8 c0       	rjmp	.+336    	; 0x5728 <_Z33activateEventUsingCurrentSettingsP2SC+0x386>
    55d8:	8e 85       	ldd	r24, Y+14	; 0x0e
    55da:	9f 85       	ldd	r25, Y+15	; 0x0f
    55dc:	22 27       	eor	r18, r18
    55de:	33 27       	eor	r19, r19
    55e0:	28 1b       	sub	r18, r24
    55e2:	39 0b       	sbc	r19, r25
    55e4:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    55e8:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    55ec:	41 e0       	ldi	r20, 0x01	; 1
    55ee:	28 17       	cp	r18, r24
    55f0:	39 07       	cpc	r19, r25
    55f2:	0c f4       	brge	.+2      	; 0x55f6 <_Z33activateEventUsingCurrentSettingsP2SC+0x254>
    55f4:	40 e0       	ldi	r20, 0x00	; 0
    55f6:	44 23       	and	r20, r20
    55f8:	09 f4       	brne	.+2      	; 0x55fc <_Z33activateEventUsingCurrentSettingsP2SC+0x25a>
    55fa:	41 c0       	rjmp	.+130    	; 0x567e <_Z33activateEventUsingCurrentSettingsP2SC+0x2dc>
    55fc:	2a 85       	ldd	r18, Y+10	; 0x0a
    55fe:	3b 85       	ldd	r19, Y+11	; 0x0b
    5600:	8e 85       	ldd	r24, Y+14	; 0x0e
    5602:	9f 85       	ldd	r25, Y+15	; 0x0f
    5604:	82 0f       	add	r24, r18
    5606:	93 1f       	adc	r25, r19
    5608:	91 95       	neg	r25
    560a:	81 95       	neg	r24
    560c:	91 09       	sbc	r25, r1
    560e:	09 2e       	mov	r0, r25
    5610:	00 0c       	add	r0, r0
    5612:	aa 0b       	sbc	r26, r26
    5614:	bb 0b       	sbc	r27, r27
    5616:	80 93 54 47 	sts	0x4754, r24	; 0x804754 <_ZL12g_on_the_air>
    561a:	90 93 55 47 	sts	0x4755, r25	; 0x804755 <_ZL12g_on_the_air+0x1>
    561e:	a0 93 56 47 	sts	0x4756, r26	; 0x804756 <_ZL12g_on_the_air+0x2>
    5622:	b0 93 57 47 	sts	0x4757, r27	; 0x804757 <_ZL12g_on_the_air+0x3>
    5626:	8a 89       	ldd	r24, Y+18	; 0x12
    5628:	9b 89       	ldd	r25, Y+19	; 0x13
    562a:	89 2b       	or	r24, r25
    562c:	29 f0       	breq	.+10     	; 0x5638 <_Z33activateEventUsingCurrentSettingsP2SC+0x296>
    562e:	8a 89       	ldd	r24, Y+18	; 0x12
    5630:	9b 89       	ldd	r25, Y+19	; 0x13
    5632:	2e ef       	ldi	r18, 0xFE	; 254
    5634:	fc 01       	movw	r30, r24
    5636:	20 83       	st	Z, r18
    5638:	90 91 94 47 	lds	r25, 0x4794	; 0x804794 <g_event_enabled>
    563c:	81 e0       	ldi	r24, 0x01	; 1
    563e:	89 27       	eor	r24, r25
    5640:	88 23       	and	r24, r24
    5642:	09 f4       	brne	.+2      	; 0x5646 <_Z33activateEventUsingCurrentSettingsP2SC+0x2a4>
    5644:	a6 c0       	rjmp	.+332    	; 0x5792 <_Z33activateEventUsingCurrentSettingsP2SC+0x3f0>
    5646:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    564a:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    564e:	9c 01       	movw	r18, r24
    5650:	80 91 54 47 	lds	r24, 0x4754	; 0x804754 <_ZL12g_on_the_air>
    5654:	90 91 55 47 	lds	r25, 0x4755	; 0x804755 <_ZL12g_on_the_air+0x1>
    5658:	a0 91 56 47 	lds	r26, 0x4756	; 0x804756 <_ZL12g_on_the_air+0x2>
    565c:	b0 91 57 47 	lds	r27, 0x4757	; 0x804757 <_ZL12g_on_the_air+0x3>
    5660:	28 1b       	sub	r18, r24
    5662:	39 0b       	sbc	r19, r25
    5664:	80 91 88 47 	lds	r24, 0x4788	; 0x804788 <g_time_needed_for_ID>
    5668:	90 91 89 47 	lds	r25, 0x4789	; 0x804789 <g_time_needed_for_ID+0x1>
    566c:	a9 01       	movw	r20, r18
    566e:	48 1b       	sub	r20, r24
    5670:	59 0b       	sbc	r21, r25
    5672:	ca 01       	movw	r24, r20
    5674:	80 93 58 47 	sts	0x4758, r24	; 0x804758 <_ZL26g_sendID_seconds_countdown>
    5678:	90 93 59 47 	sts	0x4759, r25	; 0x804759 <_ZL26g_sendID_seconds_countdown+0x1>
    567c:	8a c0       	rjmp	.+276    	; 0x5792 <_Z33activateEventUsingCurrentSettingsP2SC+0x3f0>
    567e:	20 91 0d 40 	lds	r18, 0x400D	; 0x80400d <g_on_air_seconds>
    5682:	30 91 0e 40 	lds	r19, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    5686:	8e 85       	ldd	r24, Y+14	; 0x0e
    5688:	9f 85       	ldd	r25, Y+15	; 0x0f
    568a:	82 0f       	add	r24, r18
    568c:	93 1f       	adc	r25, r19
    568e:	09 2e       	mov	r0, r25
    5690:	00 0c       	add	r0, r0
    5692:	aa 0b       	sbc	r26, r26
    5694:	bb 0b       	sbc	r27, r27
    5696:	80 93 54 47 	sts	0x4754, r24	; 0x804754 <_ZL12g_on_the_air>
    569a:	90 93 55 47 	sts	0x4755, r25	; 0x804755 <_ZL12g_on_the_air+0x1>
    569e:	a0 93 56 47 	sts	0x4756, r26	; 0x804756 <_ZL12g_on_the_air+0x2>
    56a2:	b0 93 57 47 	sts	0x4757, r27	; 0x804757 <_ZL12g_on_the_air+0x3>
    56a6:	81 e0       	ldi	r24, 0x01	; 1
    56a8:	89 83       	std	Y+1, r24	; 0x01
    56aa:	8a 89       	ldd	r24, Y+18	; 0x12
    56ac:	9b 89       	ldd	r25, Y+19	; 0x13
    56ae:	89 2b       	or	r24, r25
    56b0:	29 f0       	breq	.+10     	; 0x56bc <_Z33activateEventUsingCurrentSettingsP2SC+0x31a>
    56b2:	8a 89       	ldd	r24, Y+18	; 0x12
    56b4:	9b 89       	ldd	r25, Y+19	; 0x13
    56b6:	2d ef       	ldi	r18, 0xFD	; 253
    56b8:	fc 01       	movw	r30, r24
    56ba:	20 83       	st	Z, r18
    56bc:	90 91 94 47 	lds	r25, 0x4794	; 0x804794 <g_event_enabled>
    56c0:	81 e0       	ldi	r24, 0x01	; 1
    56c2:	89 27       	eor	r24, r25
    56c4:	88 23       	and	r24, r24
    56c6:	09 f4       	brne	.+2      	; 0x56ca <_Z33activateEventUsingCurrentSettingsP2SC+0x328>
    56c8:	64 c0       	rjmp	.+200    	; 0x5792 <_Z33activateEventUsingCurrentSettingsP2SC+0x3f0>
    56ca:	80 91 88 47 	lds	r24, 0x4788	; 0x804788 <g_time_needed_for_ID>
    56ce:	90 91 89 47 	lds	r25, 0x4789	; 0x804789 <g_time_needed_for_ID+0x1>
    56d2:	9c 01       	movw	r18, r24
    56d4:	40 e0       	ldi	r20, 0x00	; 0
    56d6:	50 e0       	ldi	r21, 0x00	; 0
    56d8:	80 91 54 47 	lds	r24, 0x4754	; 0x804754 <_ZL12g_on_the_air>
    56dc:	90 91 55 47 	lds	r25, 0x4755	; 0x804755 <_ZL12g_on_the_air+0x1>
    56e0:	a0 91 56 47 	lds	r26, 0x4756	; 0x804756 <_ZL12g_on_the_air+0x2>
    56e4:	b0 91 57 47 	lds	r27, 0x4757	; 0x804757 <_ZL12g_on_the_air+0x3>
    56e8:	61 e0       	ldi	r22, 0x01	; 1
    56ea:	28 17       	cp	r18, r24
    56ec:	39 07       	cpc	r19, r25
    56ee:	4a 07       	cpc	r20, r26
    56f0:	5b 07       	cpc	r21, r27
    56f2:	0c f0       	brlt	.+2      	; 0x56f6 <_Z33activateEventUsingCurrentSettingsP2SC+0x354>
    56f4:	60 e0       	ldi	r22, 0x00	; 0
    56f6:	66 23       	and	r22, r22
    56f8:	09 f4       	brne	.+2      	; 0x56fc <_Z33activateEventUsingCurrentSettingsP2SC+0x35a>
    56fa:	4b c0       	rjmp	.+150    	; 0x5792 <_Z33activateEventUsingCurrentSettingsP2SC+0x3f0>
    56fc:	80 91 54 47 	lds	r24, 0x4754	; 0x804754 <_ZL12g_on_the_air>
    5700:	90 91 55 47 	lds	r25, 0x4755	; 0x804755 <_ZL12g_on_the_air+0x1>
    5704:	a0 91 56 47 	lds	r26, 0x4756	; 0x804756 <_ZL12g_on_the_air+0x2>
    5708:	b0 91 57 47 	lds	r27, 0x4757	; 0x804757 <_ZL12g_on_the_air+0x3>
    570c:	9c 01       	movw	r18, r24
    570e:	80 91 88 47 	lds	r24, 0x4788	; 0x804788 <g_time_needed_for_ID>
    5712:	90 91 89 47 	lds	r25, 0x4789	; 0x804789 <g_time_needed_for_ID+0x1>
    5716:	a9 01       	movw	r20, r18
    5718:	48 1b       	sub	r20, r24
    571a:	59 0b       	sbc	r21, r25
    571c:	ca 01       	movw	r24, r20
    571e:	80 93 58 47 	sts	0x4758, r24	; 0x804758 <_ZL26g_sendID_seconds_countdown>
    5722:	90 93 59 47 	sts	0x4759, r25	; 0x804759 <_ZL26g_sendID_seconds_countdown+0x1>
    5726:	35 c0       	rjmp	.+106    	; 0x5792 <_Z33activateEventUsingCurrentSettingsP2SC+0x3f0>
    5728:	8e 85       	ldd	r24, Y+14	; 0x0e
    572a:	9f 85       	ldd	r25, Y+15	; 0x0f
    572c:	91 95       	neg	r25
    572e:	81 95       	neg	r24
    5730:	91 09       	sbc	r25, r1
    5732:	09 2e       	mov	r0, r25
    5734:	00 0c       	add	r0, r0
    5736:	aa 0b       	sbc	r26, r26
    5738:	bb 0b       	sbc	r27, r27
    573a:	80 93 54 47 	sts	0x4754, r24	; 0x804754 <_ZL12g_on_the_air>
    573e:	90 93 55 47 	sts	0x4755, r25	; 0x804755 <_ZL12g_on_the_air+0x1>
    5742:	a0 93 56 47 	sts	0x4756, r26	; 0x804756 <_ZL12g_on_the_air+0x2>
    5746:	b0 93 57 47 	sts	0x4757, r27	; 0x804757 <_ZL12g_on_the_air+0x3>
    574a:	8a 89       	ldd	r24, Y+18	; 0x12
    574c:	9b 89       	ldd	r25, Y+19	; 0x13
    574e:	89 2b       	or	r24, r25
    5750:	29 f0       	breq	.+10     	; 0x575c <_Z33activateEventUsingCurrentSettingsP2SC+0x3ba>
    5752:	8a 89       	ldd	r24, Y+18	; 0x12
    5754:	9b 89       	ldd	r25, Y+19	; 0x13
    5756:	2e ef       	ldi	r18, 0xFE	; 254
    5758:	fc 01       	movw	r30, r24
    575a:	20 83       	st	Z, r18
    575c:	90 91 94 47 	lds	r25, 0x4794	; 0x804794 <g_event_enabled>
    5760:	81 e0       	ldi	r24, 0x01	; 1
    5762:	89 27       	eor	r24, r25
    5764:	88 23       	and	r24, r24
    5766:	a9 f0       	breq	.+42     	; 0x5792 <_Z33activateEventUsingCurrentSettingsP2SC+0x3f0>
    5768:	20 91 0d 40 	lds	r18, 0x400D	; 0x80400d <g_on_air_seconds>
    576c:	30 91 0e 40 	lds	r19, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    5770:	8e 85       	ldd	r24, Y+14	; 0x0e
    5772:	9f 85       	ldd	r25, Y+15	; 0x0f
    5774:	82 0f       	add	r24, r18
    5776:	93 1f       	adc	r25, r19
    5778:	9c 01       	movw	r18, r24
    577a:	80 91 88 47 	lds	r24, 0x4788	; 0x804788 <g_time_needed_for_ID>
    577e:	90 91 89 47 	lds	r25, 0x4789	; 0x804789 <g_time_needed_for_ID+0x1>
    5782:	a9 01       	movw	r20, r18
    5784:	48 1b       	sub	r20, r24
    5786:	59 0b       	sbc	r21, r25
    5788:	ca 01       	movw	r24, r20
    578a:	80 93 58 47 	sts	0x4758, r24	; 0x804758 <_ZL26g_sendID_seconds_countdown>
    578e:	90 93 59 47 	sts	0x4759, r25	; 0x804759 <_ZL26g_sendID_seconds_countdown+0x1>
    5792:	89 81       	ldd	r24, Y+1	; 0x01
    5794:	88 23       	and	r24, r24
    5796:	e1 f0       	breq	.+56     	; 0x57d0 <_Z33activateEventUsingCurrentSettingsP2SC+0x42e>
    5798:	80 91 94 47 	lds	r24, 0x4794	; 0x804794 <g_event_enabled>
    579c:	88 8b       	std	Y+16, r24	; 0x10
    579e:	10 92 94 47 	sts	0x4794, r1	; 0x804794 <g_event_enabled>
    57a2:	81 e0       	ldi	r24, 0x01	; 1
    57a4:	89 8b       	std	Y+17, r24	; 0x11
    57a6:	ce 01       	movw	r24, r28
    57a8:	41 96       	adiw	r24, 0x11	; 17
    57aa:	40 e0       	ldi	r20, 0x00	; 0
    57ac:	50 e0       	ldi	r21, 0x00	; 0
    57ae:	bc 01       	movw	r22, r24
    57b0:	8e e5       	ldi	r24, 0x5E	; 94
    57b2:	97 e4       	ldi	r25, 0x47	; 71
    57b4:	0e 94 44 5b 	call	0xb688	; 0xb688 <_Z9makeMorsePcPbS0_>
    57b8:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    57bc:	0e 94 4c 29 	call	0x5298	; 0x5298 <_Z13throttleValueh>
    57c0:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    57c4:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    57c8:	88 89       	ldd	r24, Y+16	; 0x10
    57ca:	80 93 94 47 	sts	0x4794, r24	; 0x804794 <g_event_enabled>
    57ce:	03 c0       	rjmp	.+6      	; 0x57d6 <_Z33activateEventUsingCurrentSettingsP2SC+0x434>
    57d0:	80 e0       	ldi	r24, 0x00	; 0
    57d2:	0e 94 f9 6f 	call	0xdff2	; 0xdff2 <_Z14keyTransmitterb>
    57d6:	81 e0       	ldi	r24, 0x01	; 1
    57d8:	80 93 95 47 	sts	0x4795, r24	; 0x804795 <g_event_commenced>
    57dc:	0c c0       	rjmp	.+24     	; 0x57f6 <_Z33activateEventUsingCurrentSettingsP2SC+0x454>
    57de:	8a 89       	ldd	r24, Y+18	; 0x12
    57e0:	9b 89       	ldd	r25, Y+19	; 0x13
    57e2:	89 2b       	or	r24, r25
    57e4:	29 f0       	breq	.+10     	; 0x57f0 <_Z33activateEventUsingCurrentSettingsP2SC+0x44e>
    57e6:	8a 89       	ldd	r24, Y+18	; 0x12
    57e8:	9b 89       	ldd	r25, Y+19	; 0x13
    57ea:	2f ef       	ldi	r18, 0xFF	; 255
    57ec:	fc 01       	movw	r30, r24
    57ee:	20 83       	st	Z, r18
    57f0:	80 e0       	ldi	r24, 0x00	; 0
    57f2:	0e 94 f9 6f 	call	0xdff2	; 0xdff2 <_Z14keyTransmitterb>
    57f6:	10 92 97 47 	sts	0x4797, r1	; 0x804797 <g_waiting_for_next_event>
    57fa:	8a e5       	ldi	r24, 0x5A	; 90
    57fc:	90 e0       	ldi	r25, 0x00	; 0
    57fe:	80 93 13 40 	sts	0x4013, r24	; 0x804013 <g_update_timeout_seconds>
    5802:	90 93 14 40 	sts	0x4014, r25	; 0x804014 <g_update_timeout_seconds+0x1>
    5806:	80 e0       	ldi	r24, 0x00	; 0
    5808:	63 96       	adiw	r28, 0x13	; 19
    580a:	cd bf       	out	0x3d, r28	; 61
    580c:	de bf       	out	0x3e, r29	; 62
    580e:	df 91       	pop	r29
    5810:	cf 91       	pop	r28
    5812:	08 95       	ret

00005814 <_Z8rtc_initv>:
    5814:	cf 93       	push	r28
    5816:	df 93       	push	r29
    5818:	cd b7       	in	r28, 0x3d	; 61
    581a:	de b7       	in	r29, 0x3e	; 62
    581c:	61 e0       	ldi	r22, 0x01	; 1
    581e:	83 e0       	ldi	r24, 0x03	; 3
    5820:	0e 94 39 10 	call	0x2072	; 0x2072 <PORTC_set_pin_pull_mode>
    5824:	61 e0       	ldi	r22, 0x01	; 1
    5826:	82 e0       	ldi	r24, 0x02	; 2
    5828:	0e 94 39 10 	call	0x2072	; 0x2072 <PORTC_set_pin_pull_mode>
    582c:	0e 94 24 3e 	call	0x7c48	; 0x7c48 <ds3231_init>
    5830:	81 e0       	ldi	r24, 0x01	; 1
    5832:	0e 94 ba 43 	call	0x8774	; 0x8774 <ds3231_1s_sqw>
    5836:	88 23       	and	r24, r24
    5838:	11 f0       	breq	.+4      	; 0x583e <_Z8rtc_initv+0x2a>
    583a:	8c ef       	ldi	r24, 0xFC	; 252
    583c:	01 c0       	rjmp	.+2      	; 0x5840 <_Z8rtc_initv+0x2c>
    583e:	80 e0       	ldi	r24, 0x00	; 0
    5840:	df 91       	pop	r29
    5842:	cf 91       	pop	r28
    5844:	08 95       	ret

00005846 <_Z18antennaIsConnectedv>:
    5846:	cf 93       	push	r28
    5848:	df 93       	push	r29
    584a:	1f 92       	push	r1
    584c:	cd b7       	in	r28, 0x3d	; 61
    584e:	de b7       	in	r29, 0x3e	; 62
    5850:	81 e0       	ldi	r24, 0x01	; 1
    5852:	0e 94 c3 10 	call	0x2186	; 0x2186 <PORTD_get_pin_level>
    5856:	89 83       	std	Y+1, r24	; 0x01
    5858:	99 81       	ldd	r25, Y+1	; 0x01
    585a:	81 e0       	ldi	r24, 0x01	; 1
    585c:	89 27       	eor	r24, r25
    585e:	0f 90       	pop	r0
    5860:	df 91       	pop	r29
    5862:	cf 91       	pop	r28
    5864:	08 95       	ret

00005866 <_Z12suspendEventv>:

void suspendEvent()
{
    5866:	cf 93       	push	r28
    5868:	df 93       	push	r29
    586a:	cd b7       	in	r28, 0x3d	; 61
    586c:	de b7       	in	r29, 0x3e	; 62
	g_event_enabled = false;    /* get things stopped immediately */
    586e:	10 92 94 47 	sts	0x4794, r1	; 0x804794 <g_event_enabled>
	g_on_the_air = 0;           /*  stop transmitting */
    5872:	10 92 54 47 	sts	0x4754, r1	; 0x804754 <_ZL12g_on_the_air>
    5876:	10 92 55 47 	sts	0x4755, r1	; 0x804755 <_ZL12g_on_the_air+0x1>
    587a:	10 92 56 47 	sts	0x4756, r1	; 0x804756 <_ZL12g_on_the_air+0x2>
    587e:	10 92 57 47 	sts	0x4757, r1	; 0x804757 <_ZL12g_on_the_air+0x3>
	g_event_commenced = false;  /* get things stopped immediately */
    5882:	10 92 95 47 	sts	0x4795, r1	; 0x804795 <g_event_commenced>
	keyTransmitter(OFF);
    5886:	80 e0       	ldi	r24, 0x00	; 0
    5888:	0e 94 f9 6f 	call	0xdff2	; 0xdff2 <_Z14keyTransmitterb>
	powerToTransmitter(OFF);
    588c:	80 e0       	ldi	r24, 0x00	; 0
    588e:	0e 94 eb 6f 	call	0xdfd6	; 0xdfd6 <_Z18powerToTransmitterb>
}
    5892:	00 00       	nop
    5894:	df 91       	pop	r29
    5896:	cf 91       	pop	r28
    5898:	08 95       	ret

0000589a <_Z13startEventNow19EventActionSource_t>:


void startEventNow(EventActionSource_t activationSource)
{
    589a:	cf 93       	push	r28
    589c:	df 93       	push	r29
    589e:	00 d0       	rcall	.+0      	; 0x58a0 <_Z13startEventNow19EventActionSource_t+0x6>
    58a0:	cd b7       	in	r28, 0x3d	; 61
    58a2:	de b7       	in	r29, 0x3e	; 62
    58a4:	8a 83       	std	Y+2, r24	; 0x02
	ConfigurationState_t conf = clockConfigurationCheck();
    58a6:	0e 94 2b 33 	call	0x6656	; 0x6656 <_Z23clockConfigurationCheckv>
    58aa:	89 83       	std	Y+1, r24	; 0x01

	if(activationSource == POWER_UP)
    58ac:	8a 81       	ldd	r24, Y+2	; 0x02
    58ae:	88 23       	and	r24, r24
    58b0:	79 f4       	brne	.+30     	; 0x58d0 <_Z13startEventNow19EventActionSource_t+0x36>
	{
		if(conf == CONFIGURATION_ERROR)
    58b2:	89 81       	ldd	r24, Y+1	; 0x01
    58b4:	82 30       	cpi	r24, 0x02	; 2
    58b6:	31 f4       	brne	.+12     	; 0x58c4 <_Z13startEventNow19EventActionSource_t+0x2a>
		{
			setupForFox(NULL, START_NOTHING);
    58b8:	60 e0       	ldi	r22, 0x00	; 0
    58ba:	80 e0       	ldi	r24, 0x00	; 0
    58bc:	90 e0       	ldi	r25, 0x00	; 0
    58be:	0e 94 70 2d 	call	0x5ae0	; 0x5ae0 <_Z11setupForFoxP5Fox_t13EventAction_t>
			}
		}
	}

// 	g_LED_enunciating = false;
}
    58c2:	47 c0       	rjmp	.+142    	; 0x5952 <_Z13startEventNow19EventActionSource_t+0xb8>
		{
			setupForFox(NULL, START_NOTHING);
		}
		else
		{
			setupForFox(NULL, START_EVENT_WITH_STARTFINISH_TIMES);
    58c4:	63 e0       	ldi	r22, 0x03	; 3
    58c6:	80 e0       	ldi	r24, 0x00	; 0
    58c8:	90 e0       	ldi	r25, 0x00	; 0
    58ca:	0e 94 70 2d 	call	0x5ae0	; 0x5ae0 <_Z11setupForFoxP5Fox_t13EventAction_t>
			}
		}
	}

// 	g_LED_enunciating = false;
}
    58ce:	41 c0       	rjmp	.+130    	; 0x5952 <_Z13startEventNow19EventActionSource_t+0xb8>
		else
		{
			setupForFox(NULL, START_EVENT_WITH_STARTFINISH_TIMES);
		}
	}
	else if(activationSource == PROGRAMMATIC)
    58d0:	8a 81       	ldd	r24, Y+2	; 0x02
    58d2:	82 30       	cpi	r24, 0x02	; 2
    58d4:	f1 f4       	brne	.+60     	; 0x5912 <_Z13startEventNow19EventActionSource_t+0x78>
	{
		if(conf == CONFIGURATION_ERROR)                                                                                             /* Start immediately */
    58d6:	89 81       	ldd	r24, Y+1	; 0x01
    58d8:	82 30       	cpi	r24, 0x02	; 2
    58da:	31 f4       	brne	.+12     	; 0x58e8 <_Z13startEventNow19EventActionSource_t+0x4e>
		{
			setupForFox(NULL, START_EVENT_NOW);
    58dc:	61 e0       	ldi	r22, 0x01	; 1
    58de:	80 e0       	ldi	r24, 0x00	; 0
    58e0:	90 e0       	ldi	r25, 0x00	; 0
    58e2:	0e 94 70 2d 	call	0x5ae0	; 0x5ae0 <_Z11setupForFoxP5Fox_t13EventAction_t>
			}
		}
	}

// 	g_LED_enunciating = false;
}
    58e6:	35 c0       	rjmp	.+106    	; 0x5952 <_Z13startEventNow19EventActionSource_t+0xb8>
	{
		if(conf == CONFIGURATION_ERROR)                                                                                             /* Start immediately */
		{
			setupForFox(NULL, START_EVENT_NOW);
		}
		else if((conf == WAITING_FOR_START) || (conf == SCHEDULED_EVENT_WILL_NEVER_RUN) || (conf == SCHEDULED_EVENT_DID_NOT_START)) /* Start immediately */
    58e8:	89 81       	ldd	r24, Y+1	; 0x01
    58ea:	81 30       	cpi	r24, 0x01	; 1
    58ec:	31 f0       	breq	.+12     	; 0x58fa <_Z13startEventNow19EventActionSource_t+0x60>
    58ee:	89 81       	ldd	r24, Y+1	; 0x01
    58f0:	84 30       	cpi	r24, 0x04	; 4
    58f2:	19 f0       	breq	.+6      	; 0x58fa <_Z13startEventNow19EventActionSource_t+0x60>
    58f4:	89 81       	ldd	r24, Y+1	; 0x01
    58f6:	83 30       	cpi	r24, 0x03	; 3
    58f8:	31 f4       	brne	.+12     	; 0x5906 <_Z13startEventNow19EventActionSource_t+0x6c>
		{
			setupForFox(NULL, START_EVENT_NOW);
    58fa:	61 e0       	ldi	r22, 0x01	; 1
    58fc:	80 e0       	ldi	r24, 0x00	; 0
    58fe:	90 e0       	ldi	r25, 0x00	; 0
    5900:	0e 94 70 2d 	call	0x5ae0	; 0x5ae0 <_Z11setupForFoxP5Fox_t13EventAction_t>
			}
		}
	}

// 	g_LED_enunciating = false;
}
    5904:	26 c0       	rjmp	.+76     	; 0x5952 <_Z13startEventNow19EventActionSource_t+0xb8>
		{
			setupForFox(NULL, START_EVENT_NOW);
		}
		else                                                                                                                        /*if((conf == EVENT_IN_PROGRESS) */
		{
			setupForFox(NULL, START_EVENT_WITH_STARTFINISH_TIMES);                                                                  /* Let the RTC start the event */
    5906:	63 e0       	ldi	r22, 0x03	; 3
    5908:	80 e0       	ldi	r24, 0x00	; 0
    590a:	90 e0       	ldi	r25, 0x00	; 0
    590c:	0e 94 70 2d 	call	0x5ae0	; 0x5ae0 <_Z11setupForFoxP5Fox_t13EventAction_t>
			}
		}
	}

// 	g_LED_enunciating = false;
}
    5910:	20 c0       	rjmp	.+64     	; 0x5952 <_Z13startEventNow19EventActionSource_t+0xb8>
			setupForFox(NULL, START_EVENT_WITH_STARTFINISH_TIMES);                                                                  /* Let the RTC start the event */
		}
	}
	else                                                                                                                            /* PUSHBUTTON */
	{
		if(conf == CONFIGURATION_ERROR)                                                                                             /* No scheduled event */
    5912:	89 81       	ldd	r24, Y+1	; 0x01
    5914:	82 30       	cpi	r24, 0x02	; 2
    5916:	31 f4       	brne	.+12     	; 0x5924 <_Z13startEventNow19EventActionSource_t+0x8a>
		{
			setupForFox(NULL, START_EVENT_NOW);
    5918:	61 e0       	ldi	r22, 0x01	; 1
    591a:	80 e0       	ldi	r24, 0x00	; 0
    591c:	90 e0       	ldi	r25, 0x00	; 0
    591e:	0e 94 70 2d 	call	0x5ae0	; 0x5ae0 <_Z11setupForFoxP5Fox_t13EventAction_t>
			}
		}
	}

// 	g_LED_enunciating = false;
}
    5922:	17 c0       	rjmp	.+46     	; 0x5952 <_Z13startEventNow19EventActionSource_t+0xb8>
		{
			setupForFox(NULL, START_EVENT_NOW);
		}
		else                                                                                                                        /* if(buttonActivated) */
		{
			if(conf == WAITING_FOR_START)
    5924:	89 81       	ldd	r24, Y+1	; 0x01
    5926:	81 30       	cpi	r24, 0x01	; 1
    5928:	31 f4       	brne	.+12     	; 0x5936 <_Z13startEventNow19EventActionSource_t+0x9c>
			{
				setupForFox(NULL, START_TRANSMISSIONS_NOW);                                                                         /* Start transmitting! */
    592a:	62 e0       	ldi	r22, 0x02	; 2
    592c:	80 e0       	ldi	r24, 0x00	; 0
    592e:	90 e0       	ldi	r25, 0x00	; 0
    5930:	0e 94 70 2d 	call	0x5ae0	; 0x5ae0 <_Z11setupForFoxP5Fox_t13EventAction_t>
			}
		}
	}

// 	g_LED_enunciating = false;
}
    5934:	0e c0       	rjmp	.+28     	; 0x5952 <_Z13startEventNow19EventActionSource_t+0xb8>
		{
			if(conf == WAITING_FOR_START)
			{
				setupForFox(NULL, START_TRANSMISSIONS_NOW);                                                                         /* Start transmitting! */
			}
			else if(conf == SCHEDULED_EVENT_WILL_NEVER_RUN)
    5936:	89 81       	ldd	r24, Y+1	; 0x01
    5938:	84 30       	cpi	r24, 0x04	; 4
    593a:	31 f4       	brne	.+12     	; 0x5948 <_Z13startEventNow19EventActionSource_t+0xae>
			{
				setupForFox(NULL, START_EVENT_WITH_STARTFINISH_TIMES);                                                              /* rtc starts the event */
    593c:	63 e0       	ldi	r22, 0x03	; 3
    593e:	80 e0       	ldi	r24, 0x00	; 0
    5940:	90 e0       	ldi	r25, 0x00	; 0
    5942:	0e 94 70 2d 	call	0x5ae0	; 0x5ae0 <_Z11setupForFoxP5Fox_t13EventAction_t>
			}
		}
	}

// 	g_LED_enunciating = false;
}
    5946:	05 c0       	rjmp	.+10     	; 0x5952 <_Z13startEventNow19EventActionSource_t+0xb8>
			{
				setupForFox(NULL, START_EVENT_WITH_STARTFINISH_TIMES);                                                              /* rtc starts the event */
			}
			else                                                                                                                    /* Event should be running now */
			{
				setupForFox(NULL, START_EVENT_WITH_STARTFINISH_TIMES);                                                              /* start the running event */
    5948:	63 e0       	ldi	r22, 0x03	; 3
    594a:	80 e0       	ldi	r24, 0x00	; 0
    594c:	90 e0       	ldi	r25, 0x00	; 0
    594e:	0e 94 70 2d 	call	0x5ae0	; 0x5ae0 <_Z11setupForFoxP5Fox_t13EventAction_t>
			}
		}
	}

// 	g_LED_enunciating = false;
}
    5952:	00 00       	nop
    5954:	0f 90       	pop	r0
    5956:	0f 90       	pop	r0
    5958:	df 91       	pop	r29
    595a:	cf 91       	pop	r28
    595c:	08 95       	ret

0000595e <_Z12stopEventNow19EventActionSource_t>:

void stopEventNow(EventActionSource_t activationSource)
{
    595e:	cf 93       	push	r28
    5960:	df 93       	push	r29
    5962:	00 d0       	rcall	.+0      	; 0x5964 <_Z12stopEventNow19EventActionSource_t+0x6>
    5964:	cd b7       	in	r28, 0x3d	; 61
    5966:	de b7       	in	r29, 0x3e	; 62
    5968:	8a 83       	std	Y+2, r24	; 0x02
	ConfigurationState_t conf = clockConfigurationCheck();
    596a:	0e 94 2b 33 	call	0x6656	; 0x6656 <_Z23clockConfigurationCheckv>
    596e:	89 83       	std	Y+1, r24	; 0x01

	if(activationSource == PROGRAMMATIC)
    5970:	8a 81       	ldd	r24, Y+2	; 0x02
    5972:	82 30       	cpi	r24, 0x02	; 2
    5974:	31 f4       	brne	.+12     	; 0x5982 <_Z12stopEventNow19EventActionSource_t+0x24>
	{
		setupForFox(NULL, START_NOTHING);
    5976:	60 e0       	ldi	r22, 0x00	; 0
    5978:	80 e0       	ldi	r24, 0x00	; 0
    597a:	90 e0       	ldi	r25, 0x00	; 0
    597c:	0e 94 70 2d 	call	0x5ae0	; 0x5ae0 <_Z11setupForFoxP5Fox_t13EventAction_t>

// 	if(g_sync_pin_stable == STABLE_LOW)
// 	{
// 		digitalWrite(PIN_LED, OFF); /*  LED Off */
// 	}
}
    5980:	16 c0       	rjmp	.+44     	; 0x59ae <_Z12stopEventNow19EventActionSource_t+0x50>
	{
		setupForFox(NULL, START_NOTHING);
	}
	else    /* if(activationSource == PUSHBUTTON) */
	{
		if(conf == WAITING_FOR_START)
    5982:	89 81       	ldd	r24, Y+1	; 0x01
    5984:	81 30       	cpi	r24, 0x01	; 1
    5986:	29 f4       	brne	.+10     	; 0x5992 <_Z12stopEventNow19EventActionSource_t+0x34>
		{
			setupForFox(NULL, START_TRANSMISSIONS_NOW);
    5988:	62 e0       	ldi	r22, 0x02	; 2
    598a:	80 e0       	ldi	r24, 0x00	; 0
    598c:	90 e0       	ldi	r25, 0x00	; 0
    598e:	0e 94 70 2d 	call	0x5ae0	; 0x5ae0 <_Z11setupForFoxP5Fox_t13EventAction_t>
		}
		if(conf == SCHEDULED_EVENT_WILL_NEVER_RUN)
    5992:	89 81       	ldd	r24, Y+1	; 0x01
    5994:	84 30       	cpi	r24, 0x04	; 4
    5996:	31 f4       	brne	.+12     	; 0x59a4 <_Z12stopEventNow19EventActionSource_t+0x46>
		{
			setupForFox(NULL, START_NOTHING);
    5998:	60 e0       	ldi	r22, 0x00	; 0
    599a:	80 e0       	ldi	r24, 0x00	; 0
    599c:	90 e0       	ldi	r25, 0x00	; 0
    599e:	0e 94 70 2d 	call	0x5ae0	; 0x5ae0 <_Z11setupForFoxP5Fox_t13EventAction_t>

// 	if(g_sync_pin_stable == STABLE_LOW)
// 	{
// 		digitalWrite(PIN_LED, OFF); /*  LED Off */
// 	}
}
    59a2:	05 c0       	rjmp	.+10     	; 0x59ae <_Z12stopEventNow19EventActionSource_t+0x50>
		{
			setupForFox(NULL, START_NOTHING);
		}
		else    /*if(conf == CONFIGURATION_ERROR) */
		{
			setupForFox(NULL, START_NOTHING);
    59a4:	60 e0       	ldi	r22, 0x00	; 0
    59a6:	80 e0       	ldi	r24, 0x00	; 0
    59a8:	90 e0       	ldi	r25, 0x00	; 0
    59aa:	0e 94 70 2d 	call	0x5ae0	; 0x5ae0 <_Z11setupForFoxP5Fox_t13EventAction_t>

// 	if(g_sync_pin_stable == STABLE_LOW)
// 	{
// 		digitalWrite(PIN_LED, OFF); /*  LED Off */
// 	}
}
    59ae:	00 00       	nop
    59b0:	0f 90       	pop	r0
    59b2:	0f 90       	pop	r0
    59b4:	df 91       	pop	r29
    59b6:	cf 91       	pop	r28
    59b8:	08 95       	ret

000059ba <_Z18startEventUsingRTCv>:

void startEventUsingRTC(void)
{
    59ba:	ef 92       	push	r14
    59bc:	ff 92       	push	r15
    59be:	0f 93       	push	r16
    59c0:	1f 93       	push	r17
    59c2:	cf 93       	push	r28
    59c4:	df 93       	push	r29
    59c6:	cd b7       	in	r28, 0x3d	; 61
    59c8:	de b7       	in	r29, 0x3e	; 62
    59ca:	25 97       	sbiw	r28, 0x05	; 5
    59cc:	cd bf       	out	0x3d, r28	; 61
    59ce:	de bf       	out	0x3e, r29	; 62
	set_system_time(ds3231_get_epoch(null));
    59d0:	80 e0       	ldi	r24, 0x00	; 0
    59d2:	90 e0       	ldi	r25, 0x00	; 0
    59d4:	0e 94 53 40 	call	0x80a6	; 0x80a6 <ds3231_get_epoch>
    59d8:	dc 01       	movw	r26, r24
    59da:	cb 01       	movw	r24, r22
    59dc:	bc 01       	movw	r22, r24
    59de:	cd 01       	movw	r24, r26
    59e0:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <set_system_time>
	time_t now = time(null);
    59e4:	80 e0       	ldi	r24, 0x00	; 0
    59e6:	90 e0       	ldi	r25, 0x00	; 0
    59e8:	0e 94 56 06 	call	0xcac	; 0xcac <time>
    59ec:	dc 01       	movw	r26, r24
    59ee:	cb 01       	movw	r24, r22
    59f0:	89 83       	std	Y+1, r24	; 0x01
    59f2:	9a 83       	std	Y+2, r25	; 0x02
    59f4:	ab 83       	std	Y+3, r26	; 0x03
    59f6:	bc 83       	std	Y+4, r27	; 0x04
	ConfigurationState_t state = clockConfigurationCheck();
    59f8:	0e 94 2b 33 	call	0x6656	; 0x6656 <_Z23clockConfigurationCheckv>
    59fc:	8d 83       	std	Y+5, r24	; 0x05

	if(state != CONFIGURATION_ERROR)
    59fe:	8d 81       	ldd	r24, Y+5	; 0x05
    5a00:	82 30       	cpi	r24, 0x02	; 2
    5a02:	09 f4       	brne	.+2      	; 0x5a06 <_Z18startEventUsingRTCv+0x4c>
    5a04:	60 c0       	rjmp	.+192    	; 0x5ac6 <_Z18startEventUsingRTCv+0x10c>
	{
		setupForFox(NULL, START_EVENT_WITH_STARTFINISH_TIMES);
    5a06:	63 e0       	ldi	r22, 0x03	; 3
    5a08:	80 e0       	ldi	r24, 0x00	; 0
    5a0a:	90 e0       	ldi	r25, 0x00	; 0
    5a0c:	0e 94 70 2d 	call	0x5ae0	; 0x5ae0 <_Z11setupForFoxP5Fox_t13EventAction_t>
		reportTimeTill(now, g_event_start_epoch, "Starts in: ", "In progress\n");
    5a10:	20 91 8c 47 	lds	r18, 0x478C	; 0x80478c <g_event_start_epoch>
    5a14:	30 91 8d 47 	lds	r19, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    5a18:	40 91 8e 47 	lds	r20, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    5a1c:	50 91 8f 47 	lds	r21, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    5a20:	89 81       	ldd	r24, Y+1	; 0x01
    5a22:	9a 81       	ldd	r25, Y+2	; 0x02
    5a24:	ab 81       	ldd	r26, Y+3	; 0x03
    5a26:	bc 81       	ldd	r27, Y+4	; 0x04
    5a28:	0f 2e       	mov	r0, r31
    5a2a:	f1 e4       	ldi	r31, 0x41	; 65
    5a2c:	ef 2e       	mov	r14, r31
    5a2e:	f1 e4       	ldi	r31, 0x41	; 65
    5a30:	ff 2e       	mov	r15, r31
    5a32:	f0 2d       	mov	r31, r0
    5a34:	0e e4       	ldi	r16, 0x4E	; 78
    5a36:	11 e4       	ldi	r17, 0x41	; 65
    5a38:	bc 01       	movw	r22, r24
    5a3a:	cd 01       	movw	r24, r26
    5a3c:	0e 94 89 31 	call	0x6312	; 0x6312 <_Z14reportTimeTillmmPKcS0_>

		if(g_event_start_epoch < now)
    5a40:	20 91 8c 47 	lds	r18, 0x478C	; 0x80478c <g_event_start_epoch>
    5a44:	30 91 8d 47 	lds	r19, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    5a48:	40 91 8e 47 	lds	r20, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    5a4c:	50 91 8f 47 	lds	r21, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    5a50:	61 e0       	ldi	r22, 0x01	; 1
    5a52:	89 81       	ldd	r24, Y+1	; 0x01
    5a54:	9a 81       	ldd	r25, Y+2	; 0x02
    5a56:	ab 81       	ldd	r26, Y+3	; 0x03
    5a58:	bc 81       	ldd	r27, Y+4	; 0x04
    5a5a:	28 17       	cp	r18, r24
    5a5c:	39 07       	cpc	r19, r25
    5a5e:	4a 07       	cpc	r20, r26
    5a60:	5b 07       	cpc	r21, r27
    5a62:	08 f0       	brcs	.+2      	; 0x5a66 <_Z18startEventUsingRTCv+0xac>
    5a64:	60 e0       	ldi	r22, 0x00	; 0
    5a66:	66 23       	and	r22, r22
    5a68:	a9 f0       	breq	.+42     	; 0x5a94 <_Z18startEventUsingRTCv+0xda>
		{
			reportTimeTill(now, g_event_finish_epoch, "Time Remaining: ", NULL);
    5a6a:	20 91 90 47 	lds	r18, 0x4790	; 0x804790 <g_event_finish_epoch>
    5a6e:	30 91 91 47 	lds	r19, 0x4791	; 0x804791 <g_event_finish_epoch+0x1>
    5a72:	40 91 92 47 	lds	r20, 0x4792	; 0x804792 <g_event_finish_epoch+0x2>
    5a76:	50 91 93 47 	lds	r21, 0x4793	; 0x804793 <g_event_finish_epoch+0x3>
    5a7a:	89 81       	ldd	r24, Y+1	; 0x01
    5a7c:	9a 81       	ldd	r25, Y+2	; 0x02
    5a7e:	ab 81       	ldd	r26, Y+3	; 0x03
    5a80:	bc 81       	ldd	r27, Y+4	; 0x04
    5a82:	e1 2c       	mov	r14, r1
    5a84:	f1 2c       	mov	r15, r1
    5a86:	02 e6       	ldi	r16, 0x62	; 98
    5a88:	11 e4       	ldi	r17, 0x41	; 65
    5a8a:	bc 01       	movw	r22, r24
    5a8c:	cd 01       	movw	r24, r26
    5a8e:	0e 94 89 31 	call	0x6312	; 0x6312 <_Z14reportTimeTillmmPKcS0_>
	}
	else
	{
		reportConfigErrors();
	}
}
    5a92:	1b c0       	rjmp	.+54     	; 0x5aca <_Z18startEventUsingRTCv+0x110>
		{
			reportTimeTill(now, g_event_finish_epoch, "Time Remaining: ", NULL);
		}
		else
		{
			reportTimeTill(g_event_start_epoch, g_event_finish_epoch, "Lasts: ", NULL);
    5a94:	20 91 90 47 	lds	r18, 0x4790	; 0x804790 <g_event_finish_epoch>
    5a98:	30 91 91 47 	lds	r19, 0x4791	; 0x804791 <g_event_finish_epoch+0x1>
    5a9c:	40 91 92 47 	lds	r20, 0x4792	; 0x804792 <g_event_finish_epoch+0x2>
    5aa0:	50 91 93 47 	lds	r21, 0x4793	; 0x804793 <g_event_finish_epoch+0x3>
    5aa4:	80 91 8c 47 	lds	r24, 0x478C	; 0x80478c <g_event_start_epoch>
    5aa8:	90 91 8d 47 	lds	r25, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    5aac:	a0 91 8e 47 	lds	r26, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    5ab0:	b0 91 8f 47 	lds	r27, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    5ab4:	e1 2c       	mov	r14, r1
    5ab6:	f1 2c       	mov	r15, r1
    5ab8:	0a e5       	ldi	r16, 0x5A	; 90
    5aba:	11 e4       	ldi	r17, 0x41	; 65
    5abc:	bc 01       	movw	r22, r24
    5abe:	cd 01       	movw	r24, r26
    5ac0:	0e 94 89 31 	call	0x6312	; 0x6312 <_Z14reportTimeTillmmPKcS0_>
	}
	else
	{
		reportConfigErrors();
	}
}
    5ac4:	02 c0       	rjmp	.+4      	; 0x5aca <_Z18startEventUsingRTCv+0x110>
			reportTimeTill(g_event_start_epoch, g_event_finish_epoch, "Lasts: ", NULL);
		}
	}
	else
	{
		reportConfigErrors();
    5ac6:	0e 94 c5 33 	call	0x678a	; 0x678a <_Z18reportConfigErrorsv>
	}
}
    5aca:	00 00       	nop
    5acc:	25 96       	adiw	r28, 0x05	; 5
    5ace:	cd bf       	out	0x3d, r28	; 61
    5ad0:	de bf       	out	0x3e, r29	; 62
    5ad2:	df 91       	pop	r29
    5ad4:	cf 91       	pop	r28
    5ad6:	1f 91       	pop	r17
    5ad8:	0f 91       	pop	r16
    5ada:	ff 90       	pop	r15
    5adc:	ef 90       	pop	r14
    5ade:	08 95       	ret

00005ae0 <_Z11setupForFoxP5Fox_t13EventAction_t>:



void setupForFox(Fox_t* fox, EventAction_t action)
{
    5ae0:	cf 93       	push	r28
    5ae2:	df 93       	push	r29
    5ae4:	cd b7       	in	r28, 0x3d	; 61
    5ae6:	de b7       	in	r29, 0x3e	; 62
    5ae8:	60 97       	sbiw	r28, 0x10	; 16
    5aea:	cd bf       	out	0x3d, r28	; 61
    5aec:	de bf       	out	0x3e, r29	; 62
    5aee:	8e 87       	std	Y+14, r24	; 0x0e
    5af0:	9f 87       	std	Y+15, r25	; 0x0f
    5af2:	68 8b       	std	Y+16, r22	; 0x10
	bool patternNotSet = true;
    5af4:	81 e0       	ldi	r24, 0x01	; 1
    5af6:	89 83       	std	Y+1, r24	; 0x01
	
	if(fox)
    5af8:	8e 85       	ldd	r24, Y+14	; 0x0e
    5afa:	9f 85       	ldd	r25, Y+15	; 0x0f
    5afc:	89 2b       	or	r24, r25
    5afe:	61 f0       	breq	.+24     	; 0x5b18 <_Z11setupForFoxP5Fox_t13EventAction_t+0x38>
	{
		if(*fox != INVALID_FOX)
    5b00:	8e 85       	ldd	r24, Y+14	; 0x0e
    5b02:	9f 85       	ldd	r25, Y+15	; 0x0f
    5b04:	fc 01       	movw	r30, r24
    5b06:	80 81       	ld	r24, Z
    5b08:	82 31       	cpi	r24, 0x12	; 18
    5b0a:	31 f0       	breq	.+12     	; 0x5b18 <_Z11setupForFoxP5Fox_t13EventAction_t+0x38>
		{
			g_fox = *fox;
    5b0c:	8e 85       	ldd	r24, Y+14	; 0x0e
    5b0e:	9f 85       	ldd	r25, Y+15	; 0x0f
    5b10:	fc 01       	movw	r30, r24
    5b12:	80 81       	ld	r24, Z
    5b14:	80 93 22 40 	sts	0x4022, r24	; 0x804022 <g_fox>
		}
	}

	g_event_enabled = false;
    5b18:	10 92 94 47 	sts	0x4794, r1	; 0x804794 <g_event_enabled>
	g_event_commenced = false;
    5b1c:	10 92 95 47 	sts	0x4795, r1	; 0x804795 <g_event_commenced>
	LED_set_RED_level(OFF);
    5b20:	80 e0       	ldi	r24, 0x00	; 0
    5b22:	0e 94 e2 10 	call	0x21c4	; 0x21c4 <LED_set_RED_level>
 	set_system_time(ds3231_get_epoch(null));
    5b26:	80 e0       	ldi	r24, 0x00	; 0
    5b28:	90 e0       	ldi	r25, 0x00	; 0
    5b2a:	0e 94 53 40 	call	0x80a6	; 0x80a6 <ds3231_get_epoch>
    5b2e:	dc 01       	movw	r26, r24
    5b30:	cb 01       	movw	r24, r22
    5b32:	bc 01       	movw	r22, r24
    5b34:	cd 01       	movw	r24, r26
    5b36:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <set_system_time>

	switch(g_fox)
    5b3a:	80 91 22 40 	lds	r24, 0x4022	; 0x804022 <g_fox>
    5b3e:	88 2f       	mov	r24, r24
    5b40:	90 e0       	ldi	r25, 0x00	; 0
    5b42:	09 2e       	mov	r0, r25
    5b44:	00 0c       	add	r0, r0
    5b46:	aa 0b       	sbc	r26, r26
    5b48:	bb 0b       	sbc	r27, r27
    5b4a:	41 e0       	ldi	r20, 0x01	; 1
    5b4c:	50 e0       	ldi	r21, 0x00	; 0
    5b4e:	20 e1       	ldi	r18, 0x10	; 16
    5b50:	30 e0       	ldi	r19, 0x00	; 0
    5b52:	84 1b       	sub	r24, r20
    5b54:	95 0b       	sbc	r25, r21
    5b56:	28 17       	cp	r18, r24
    5b58:	39 07       	cpc	r19, r25
    5b5a:	08 f4       	brcc	.+2      	; 0x5b5e <_Z11setupForFoxP5Fox_t13EventAction_t+0x7e>
    5b5c:	a1 c1       	rjmp	.+834    	; 0x5ea0 <_Z11setupForFoxP5Fox_t13EventAction_t+0x3c0>
    5b5e:	8c 58       	subi	r24, 0x8C	; 140
    5b60:	9f 4f       	sbci	r25, 0xFF	; 255
    5b62:	fc 01       	movw	r30, r24
    5b64:	0c 94 a3 7a 	jmp	0xf546	; 0xf546 <__tablejump2__>
	{
		case FOX_1:
		{
			if(patternNotSet)
    5b68:	89 81       	ldd	r24, Y+1	; 0x01
    5b6a:	88 23       	and	r24, r24
    5b6c:	89 f0       	breq	.+34     	; 0x5b90 <_Z11setupForFoxP5Fox_t13EventAction_t+0xb0>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "MOE");
    5b6e:	8d e4       	ldi	r24, 0x4D	; 77
    5b70:	9f e4       	ldi	r25, 0x4F	; 79
    5b72:	80 93 5e 47 	sts	0x475E, r24	; 0x80475e <g_messages_text>
    5b76:	90 93 5f 47 	sts	0x475F, r25	; 0x80475f <g_messages_text+0x1>
    5b7a:	85 e4       	ldi	r24, 0x45	; 69
    5b7c:	90 e0       	ldi	r25, 0x00	; 0
    5b7e:	80 93 60 47 	sts	0x4760, r24	; 0x804760 <g_messages_text+0x2>
    5b82:	90 93 61 47 	sts	0x4761, r25	; 0x804761 <g_messages_text+0x3>
				patternNotSet = false;
    5b86:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 0;
    5b88:	10 92 8a 47 	sts	0x478A, r1	; 0x80478a <g_intra_cycle_delay_time>
    5b8c:	10 92 8b 47 	sts	0x478B, r1	; 0x80478b <g_intra_cycle_delay_time+0x1>
			}
		}
		case FOX_2:
		{
			if(patternNotSet)
    5b90:	89 81       	ldd	r24, Y+1	; 0x01
    5b92:	88 23       	and	r24, r24
    5b94:	99 f0       	breq	.+38     	; 0x5bbc <_Z11setupForFoxP5Fox_t13EventAction_t+0xdc>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "MOI");
    5b96:	8d e4       	ldi	r24, 0x4D	; 77
    5b98:	9f e4       	ldi	r25, 0x4F	; 79
    5b9a:	80 93 5e 47 	sts	0x475E, r24	; 0x80475e <g_messages_text>
    5b9e:	90 93 5f 47 	sts	0x475F, r25	; 0x80475f <g_messages_text+0x1>
    5ba2:	89 e4       	ldi	r24, 0x49	; 73
    5ba4:	90 e0       	ldi	r25, 0x00	; 0
    5ba6:	80 93 60 47 	sts	0x4760, r24	; 0x804760 <g_messages_text+0x2>
    5baa:	90 93 61 47 	sts	0x4761, r25	; 0x804761 <g_messages_text+0x3>
				patternNotSet = false;
    5bae:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 60;
    5bb0:	8c e3       	ldi	r24, 0x3C	; 60
    5bb2:	90 e0       	ldi	r25, 0x00	; 0
    5bb4:	80 93 8a 47 	sts	0x478A, r24	; 0x80478a <g_intra_cycle_delay_time>
    5bb8:	90 93 8b 47 	sts	0x478B, r25	; 0x80478b <g_intra_cycle_delay_time+0x1>
			}
		}
		case FOX_3:
		{
			if(patternNotSet)
    5bbc:	89 81       	ldd	r24, Y+1	; 0x01
    5bbe:	88 23       	and	r24, r24
    5bc0:	99 f0       	breq	.+38     	; 0x5be8 <_Z11setupForFoxP5Fox_t13EventAction_t+0x108>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "MOS");
    5bc2:	8d e4       	ldi	r24, 0x4D	; 77
    5bc4:	9f e4       	ldi	r25, 0x4F	; 79
    5bc6:	80 93 5e 47 	sts	0x475E, r24	; 0x80475e <g_messages_text>
    5bca:	90 93 5f 47 	sts	0x475F, r25	; 0x80475f <g_messages_text+0x1>
    5bce:	83 e5       	ldi	r24, 0x53	; 83
    5bd0:	90 e0       	ldi	r25, 0x00	; 0
    5bd2:	80 93 60 47 	sts	0x4760, r24	; 0x804760 <g_messages_text+0x2>
    5bd6:	90 93 61 47 	sts	0x4761, r25	; 0x804761 <g_messages_text+0x3>
				patternNotSet = false;
    5bda:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 120;
    5bdc:	88 e7       	ldi	r24, 0x78	; 120
    5bde:	90 e0       	ldi	r25, 0x00	; 0
    5be0:	80 93 8a 47 	sts	0x478A, r24	; 0x80478a <g_intra_cycle_delay_time>
    5be4:	90 93 8b 47 	sts	0x478B, r25	; 0x80478b <g_intra_cycle_delay_time+0x1>
			}
		}
		case FOX_4:
		{
			if(patternNotSet)
    5be8:	89 81       	ldd	r24, Y+1	; 0x01
    5bea:	88 23       	and	r24, r24
    5bec:	99 f0       	breq	.+38     	; 0x5c14 <_Z11setupForFoxP5Fox_t13EventAction_t+0x134>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "MOH");
    5bee:	8d e4       	ldi	r24, 0x4D	; 77
    5bf0:	9f e4       	ldi	r25, 0x4F	; 79
    5bf2:	80 93 5e 47 	sts	0x475E, r24	; 0x80475e <g_messages_text>
    5bf6:	90 93 5f 47 	sts	0x475F, r25	; 0x80475f <g_messages_text+0x1>
    5bfa:	88 e4       	ldi	r24, 0x48	; 72
    5bfc:	90 e0       	ldi	r25, 0x00	; 0
    5bfe:	80 93 60 47 	sts	0x4760, r24	; 0x804760 <g_messages_text+0x2>
    5c02:	90 93 61 47 	sts	0x4761, r25	; 0x804761 <g_messages_text+0x3>
				patternNotSet = false;
    5c06:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 180;
    5c08:	84 eb       	ldi	r24, 0xB4	; 180
    5c0a:	90 e0       	ldi	r25, 0x00	; 0
    5c0c:	80 93 8a 47 	sts	0x478A, r24	; 0x80478a <g_intra_cycle_delay_time>
    5c10:	90 93 8b 47 	sts	0x478B, r25	; 0x80478b <g_intra_cycle_delay_time+0x1>
			}
		}
		case FOX_5:
		{
			/* Set the Morse code pattern and speed */
			if(patternNotSet)
    5c14:	89 81       	ldd	r24, Y+1	; 0x01
    5c16:	88 23       	and	r24, r24
    5c18:	91 f0       	breq	.+36     	; 0x5c3e <_Z11setupForFoxP5Fox_t13EventAction_t+0x15e>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "MO5");
    5c1a:	8d e4       	ldi	r24, 0x4D	; 77
    5c1c:	9f e4       	ldi	r25, 0x4F	; 79
    5c1e:	80 93 5e 47 	sts	0x475E, r24	; 0x80475e <g_messages_text>
    5c22:	90 93 5f 47 	sts	0x475F, r25	; 0x80475f <g_messages_text+0x1>
    5c26:	85 e3       	ldi	r24, 0x35	; 53
    5c28:	90 e0       	ldi	r25, 0x00	; 0
    5c2a:	80 93 60 47 	sts	0x4760, r24	; 0x804760 <g_messages_text+0x2>
    5c2e:	90 93 61 47 	sts	0x4761, r25	; 0x804761 <g_messages_text+0x3>
				g_intra_cycle_delay_time = 240;
    5c32:	80 ef       	ldi	r24, 0xF0	; 240
    5c34:	90 e0       	ldi	r25, 0x00	; 0
    5c36:	80 93 8a 47 	sts	0x478A, r24	; 0x80478a <g_intra_cycle_delay_time>
    5c3a:	90 93 8b 47 	sts	0x478B, r25	; 0x80478b <g_intra_cycle_delay_time+0x1>
			}
			
			bool repeat = true;
    5c3e:	81 e0       	ldi	r24, 0x01	; 1
    5c40:	8e 83       	std	Y+6, r24	; 0x06
			makeMorse(g_messages_text[PATTERN_TEXT], &repeat, NULL);
    5c42:	ce 01       	movw	r24, r28
    5c44:	06 96       	adiw	r24, 0x06	; 6
    5c46:	40 e0       	ldi	r20, 0x00	; 0
    5c48:	50 e0       	ldi	r21, 0x00	; 0
    5c4a:	bc 01       	movw	r22, r24
    5c4c:	8e e5       	ldi	r24, 0x5E	; 94
    5c4e:	97 e4       	ldi	r25, 0x47	; 71
    5c50:	0e 94 44 5b 	call	0xb688	; 0xb688 <_Z9makeMorsePcPbS0_>
			g_code_throttle = throttleValue(g_pattern_codespeed);
    5c54:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    5c58:	0e 94 4c 29 	call	0x5298	; 0x5298 <_Z13throttleValueh>
    5c5c:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    5c60:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>

			g_sendID_seconds_countdown = 60;			/* wait 1 minute to send the ID */
    5c64:	8c e3       	ldi	r24, 0x3C	; 60
    5c66:	90 e0       	ldi	r25, 0x00	; 0
    5c68:	80 93 58 47 	sts	0x4758, r24	; 0x804758 <_ZL26g_sendID_seconds_countdown>
    5c6c:	90 93 59 47 	sts	0x4759, r25	; 0x804759 <_ZL26g_sendID_seconds_countdown+0x1>
			g_on_air_seconds = 60;						/* on period is very long */
    5c70:	8c e3       	ldi	r24, 0x3C	; 60
    5c72:	90 e0       	ldi	r25, 0x00	; 0
    5c74:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_on_air_seconds>
    5c78:	90 93 0e 40 	sts	0x400E, r25	; 0x80400e <g_on_air_seconds+0x1>
			g_off_air_seconds = 240;                    /* off period is very short */
    5c7c:	80 ef       	ldi	r24, 0xF0	; 240
    5c7e:	90 e0       	ldi	r25, 0x00	; 0
    5c80:	80 93 0f 40 	sts	0x400F, r24	; 0x80400f <g_off_air_seconds>
    5c84:	90 93 10 40 	sts	0x4010, r25	; 0x804010 <g_off_air_seconds+0x1>
		}
		break;
    5c88:	41 c1       	rjmp	.+642    	; 0x5f0c <_Z11setupForFoxP5Fox_t13EventAction_t+0x42c>

		case SPRINT_S1:
		{
			if(patternNotSet)
    5c8a:	89 81       	ldd	r24, Y+1	; 0x01
    5c8c:	88 23       	and	r24, r24
    5c8e:	69 f0       	breq	.+26     	; 0x5caa <_Z11setupForFoxP5Fox_t13EventAction_t+0x1ca>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "ME");
    5c90:	8d e4       	ldi	r24, 0x4D	; 77
    5c92:	95 e4       	ldi	r25, 0x45	; 69
    5c94:	80 93 5e 47 	sts	0x475E, r24	; 0x80475e <g_messages_text>
    5c98:	90 93 5f 47 	sts	0x475F, r25	; 0x80475f <g_messages_text+0x1>
    5c9c:	10 92 60 47 	sts	0x4760, r1	; 0x804760 <g_messages_text+0x2>
				patternNotSet = false;
    5ca0:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 0;
    5ca2:	10 92 8a 47 	sts	0x478A, r1	; 0x80478a <g_intra_cycle_delay_time>
    5ca6:	10 92 8b 47 	sts	0x478B, r1	; 0x80478b <g_intra_cycle_delay_time+0x1>
			}
		}
		case SPRINT_S2:
		{
			if(patternNotSet)
    5caa:	89 81       	ldd	r24, Y+1	; 0x01
    5cac:	88 23       	and	r24, r24
    5cae:	79 f0       	breq	.+30     	; 0x5cce <_Z11setupForFoxP5Fox_t13EventAction_t+0x1ee>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "MI");
    5cb0:	8d e4       	ldi	r24, 0x4D	; 77
    5cb2:	99 e4       	ldi	r25, 0x49	; 73
    5cb4:	80 93 5e 47 	sts	0x475E, r24	; 0x80475e <g_messages_text>
    5cb8:	90 93 5f 47 	sts	0x475F, r25	; 0x80475f <g_messages_text+0x1>
    5cbc:	10 92 60 47 	sts	0x4760, r1	; 0x804760 <g_messages_text+0x2>
				patternNotSet = false;
    5cc0:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 12;
    5cc2:	8c e0       	ldi	r24, 0x0C	; 12
    5cc4:	90 e0       	ldi	r25, 0x00	; 0
    5cc6:	80 93 8a 47 	sts	0x478A, r24	; 0x80478a <g_intra_cycle_delay_time>
    5cca:	90 93 8b 47 	sts	0x478B, r25	; 0x80478b <g_intra_cycle_delay_time+0x1>
			}
		}
		case SPRINT_S3:
		{
			if(patternNotSet)
    5cce:	89 81       	ldd	r24, Y+1	; 0x01
    5cd0:	88 23       	and	r24, r24
    5cd2:	79 f0       	breq	.+30     	; 0x5cf2 <_Z11setupForFoxP5Fox_t13EventAction_t+0x212>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "MS");
    5cd4:	8d e4       	ldi	r24, 0x4D	; 77
    5cd6:	93 e5       	ldi	r25, 0x53	; 83
    5cd8:	80 93 5e 47 	sts	0x475E, r24	; 0x80475e <g_messages_text>
    5cdc:	90 93 5f 47 	sts	0x475F, r25	; 0x80475f <g_messages_text+0x1>
    5ce0:	10 92 60 47 	sts	0x4760, r1	; 0x804760 <g_messages_text+0x2>
				patternNotSet = false;
    5ce4:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 24;
    5ce6:	88 e1       	ldi	r24, 0x18	; 24
    5ce8:	90 e0       	ldi	r25, 0x00	; 0
    5cea:	80 93 8a 47 	sts	0x478A, r24	; 0x80478a <g_intra_cycle_delay_time>
    5cee:	90 93 8b 47 	sts	0x478B, r25	; 0x80478b <g_intra_cycle_delay_time+0x1>
			}
		}
		case SPRINT_S4:
		{
			if(patternNotSet)
    5cf2:	89 81       	ldd	r24, Y+1	; 0x01
    5cf4:	88 23       	and	r24, r24
    5cf6:	79 f0       	breq	.+30     	; 0x5d16 <_Z11setupForFoxP5Fox_t13EventAction_t+0x236>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "MH");
    5cf8:	8d e4       	ldi	r24, 0x4D	; 77
    5cfa:	98 e4       	ldi	r25, 0x48	; 72
    5cfc:	80 93 5e 47 	sts	0x475E, r24	; 0x80475e <g_messages_text>
    5d00:	90 93 5f 47 	sts	0x475F, r25	; 0x80475f <g_messages_text+0x1>
    5d04:	10 92 60 47 	sts	0x4760, r1	; 0x804760 <g_messages_text+0x2>
				patternNotSet = false;
    5d08:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 36;
    5d0a:	84 e2       	ldi	r24, 0x24	; 36
    5d0c:	90 e0       	ldi	r25, 0x00	; 0
    5d0e:	80 93 8a 47 	sts	0x478A, r24	; 0x80478a <g_intra_cycle_delay_time>
    5d12:	90 93 8b 47 	sts	0x478B, r25	; 0x80478b <g_intra_cycle_delay_time+0x1>
			}
		}
		case SPRINT_S5:
		{
			{
				if(patternNotSet)
    5d16:	89 81       	ldd	r24, Y+1	; 0x01
    5d18:	88 23       	and	r24, r24
    5d1a:	71 f0       	breq	.+28     	; 0x5d38 <_Z11setupForFoxP5Fox_t13EventAction_t+0x258>
				{
					sprintf(g_messages_text[PATTERN_TEXT], "M5");
    5d1c:	8d e4       	ldi	r24, 0x4D	; 77
    5d1e:	95 e3       	ldi	r25, 0x35	; 53
    5d20:	80 93 5e 47 	sts	0x475E, r24	; 0x80475e <g_messages_text>
    5d24:	90 93 5f 47 	sts	0x475F, r25	; 0x80475f <g_messages_text+0x1>
    5d28:	10 92 60 47 	sts	0x4760, r1	; 0x804760 <g_messages_text+0x2>
					g_intra_cycle_delay_time = 48;
    5d2c:	80 e3       	ldi	r24, 0x30	; 48
    5d2e:	90 e0       	ldi	r25, 0x00	; 0
    5d30:	80 93 8a 47 	sts	0x478A, r24	; 0x80478a <g_intra_cycle_delay_time>
    5d34:	90 93 8b 47 	sts	0x478B, r25	; 0x80478b <g_intra_cycle_delay_time+0x1>
				}
			}
			
			bool repeat = true;
    5d38:	81 e0       	ldi	r24, 0x01	; 1
    5d3a:	8f 83       	std	Y+7, r24	; 0x07
			makeMorse(g_messages_text[PATTERN_TEXT], &repeat, NULL);
    5d3c:	ce 01       	movw	r24, r28
    5d3e:	07 96       	adiw	r24, 0x07	; 7
    5d40:	40 e0       	ldi	r20, 0x00	; 0
    5d42:	50 e0       	ldi	r21, 0x00	; 0
    5d44:	bc 01       	movw	r22, r24
    5d46:	8e e5       	ldi	r24, 0x5E	; 94
    5d48:	97 e4       	ldi	r25, 0x47	; 71
    5d4a:	0e 94 44 5b 	call	0xb688	; 0xb688 <_Z9makeMorsePcPbS0_>
			g_pattern_codespeed = 8;
    5d4e:	88 e0       	ldi	r24, 0x08	; 8
    5d50:	80 93 0c 40 	sts	0x400C, r24	; 0x80400c <g_pattern_codespeed>
			g_code_throttle = throttleValue(g_pattern_codespeed);
    5d54:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    5d58:	0e 94 4c 29 	call	0x5298	; 0x5298 <_Z13throttleValueh>
    5d5c:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    5d60:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>

			g_sendID_seconds_countdown = 600;			/* wait 10 minutes send the ID */
    5d64:	88 e5       	ldi	r24, 0x58	; 88
    5d66:	92 e0       	ldi	r25, 0x02	; 2
    5d68:	80 93 58 47 	sts	0x4758, r24	; 0x804758 <_ZL26g_sendID_seconds_countdown>
    5d6c:	90 93 59 47 	sts	0x4759, r25	; 0x804759 <_ZL26g_sendID_seconds_countdown+0x1>
			g_on_air_seconds = 12;						/* on period is very long */
    5d70:	8c e0       	ldi	r24, 0x0C	; 12
    5d72:	90 e0       	ldi	r25, 0x00	; 0
    5d74:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_on_air_seconds>
    5d78:	90 93 0e 40 	sts	0x400E, r25	; 0x80400e <g_on_air_seconds+0x1>
			g_off_air_seconds = 48;						/* off period is very short */
    5d7c:	80 e3       	ldi	r24, 0x30	; 48
    5d7e:	90 e0       	ldi	r25, 0x00	; 0
    5d80:	80 93 0f 40 	sts	0x400F, r24	; 0x80400f <g_off_air_seconds>
    5d84:	90 93 10 40 	sts	0x4010, r25	; 0x804010 <g_off_air_seconds+0x1>
		}
		break;
    5d88:	c1 c0       	rjmp	.+386    	; 0x5f0c <_Z11setupForFoxP5Fox_t13EventAction_t+0x42c>

		case SPRINT_F1:
		{
			if(patternNotSet)
    5d8a:	89 81       	ldd	r24, Y+1	; 0x01
    5d8c:	88 23       	and	r24, r24
    5d8e:	69 f0       	breq	.+26     	; 0x5daa <_Z11setupForFoxP5Fox_t13EventAction_t+0x2ca>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "OE");
    5d90:	8f e4       	ldi	r24, 0x4F	; 79
    5d92:	95 e4       	ldi	r25, 0x45	; 69
    5d94:	80 93 5e 47 	sts	0x475E, r24	; 0x80475e <g_messages_text>
    5d98:	90 93 5f 47 	sts	0x475F, r25	; 0x80475f <g_messages_text+0x1>
    5d9c:	10 92 60 47 	sts	0x4760, r1	; 0x804760 <g_messages_text+0x2>
				patternNotSet = false;
    5da0:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 0;
    5da2:	10 92 8a 47 	sts	0x478A, r1	; 0x80478a <g_intra_cycle_delay_time>
    5da6:	10 92 8b 47 	sts	0x478B, r1	; 0x80478b <g_intra_cycle_delay_time+0x1>
			}
		}
		case SPRINT_F2:
		{
			if(patternNotSet)
    5daa:	89 81       	ldd	r24, Y+1	; 0x01
    5dac:	88 23       	and	r24, r24
    5dae:	79 f0       	breq	.+30     	; 0x5dce <_Z11setupForFoxP5Fox_t13EventAction_t+0x2ee>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "OI");
    5db0:	8f e4       	ldi	r24, 0x4F	; 79
    5db2:	99 e4       	ldi	r25, 0x49	; 73
    5db4:	80 93 5e 47 	sts	0x475E, r24	; 0x80475e <g_messages_text>
    5db8:	90 93 5f 47 	sts	0x475F, r25	; 0x80475f <g_messages_text+0x1>
    5dbc:	10 92 60 47 	sts	0x4760, r1	; 0x804760 <g_messages_text+0x2>
				patternNotSet = false;
    5dc0:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 12;
    5dc2:	8c e0       	ldi	r24, 0x0C	; 12
    5dc4:	90 e0       	ldi	r25, 0x00	; 0
    5dc6:	80 93 8a 47 	sts	0x478A, r24	; 0x80478a <g_intra_cycle_delay_time>
    5dca:	90 93 8b 47 	sts	0x478B, r25	; 0x80478b <g_intra_cycle_delay_time+0x1>
			}
		}
		case SPRINT_F3:
		{
			if(patternNotSet)
    5dce:	89 81       	ldd	r24, Y+1	; 0x01
    5dd0:	88 23       	and	r24, r24
    5dd2:	79 f0       	breq	.+30     	; 0x5df2 <_Z11setupForFoxP5Fox_t13EventAction_t+0x312>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "OS");
    5dd4:	8f e4       	ldi	r24, 0x4F	; 79
    5dd6:	93 e5       	ldi	r25, 0x53	; 83
    5dd8:	80 93 5e 47 	sts	0x475E, r24	; 0x80475e <g_messages_text>
    5ddc:	90 93 5f 47 	sts	0x475F, r25	; 0x80475f <g_messages_text+0x1>
    5de0:	10 92 60 47 	sts	0x4760, r1	; 0x804760 <g_messages_text+0x2>
				patternNotSet = false;
    5de4:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 24;
    5de6:	88 e1       	ldi	r24, 0x18	; 24
    5de8:	90 e0       	ldi	r25, 0x00	; 0
    5dea:	80 93 8a 47 	sts	0x478A, r24	; 0x80478a <g_intra_cycle_delay_time>
    5dee:	90 93 8b 47 	sts	0x478B, r25	; 0x80478b <g_intra_cycle_delay_time+0x1>
			}
		}
		case SPRINT_F4:
		{
			if(patternNotSet)
    5df2:	89 81       	ldd	r24, Y+1	; 0x01
    5df4:	88 23       	and	r24, r24
    5df6:	79 f0       	breq	.+30     	; 0x5e16 <_Z11setupForFoxP5Fox_t13EventAction_t+0x336>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "OH");
    5df8:	8f e4       	ldi	r24, 0x4F	; 79
    5dfa:	98 e4       	ldi	r25, 0x48	; 72
    5dfc:	80 93 5e 47 	sts	0x475E, r24	; 0x80475e <g_messages_text>
    5e00:	90 93 5f 47 	sts	0x475F, r25	; 0x80475f <g_messages_text+0x1>
    5e04:	10 92 60 47 	sts	0x4760, r1	; 0x804760 <g_messages_text+0x2>
				patternNotSet = false;
    5e08:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 36;
    5e0a:	84 e2       	ldi	r24, 0x24	; 36
    5e0c:	90 e0       	ldi	r25, 0x00	; 0
    5e0e:	80 93 8a 47 	sts	0x478A, r24	; 0x80478a <g_intra_cycle_delay_time>
    5e12:	90 93 8b 47 	sts	0x478B, r25	; 0x80478b <g_intra_cycle_delay_time+0x1>
			}
		}
		case SPRINT_F5:
		{
			if(patternNotSet)
    5e16:	89 81       	ldd	r24, Y+1	; 0x01
    5e18:	88 23       	and	r24, r24
    5e1a:	71 f0       	breq	.+28     	; 0x5e38 <_Z11setupForFoxP5Fox_t13EventAction_t+0x358>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "O5");
    5e1c:	8f e4       	ldi	r24, 0x4F	; 79
    5e1e:	95 e3       	ldi	r25, 0x35	; 53
    5e20:	80 93 5e 47 	sts	0x475E, r24	; 0x80475e <g_messages_text>
    5e24:	90 93 5f 47 	sts	0x475F, r25	; 0x80475f <g_messages_text+0x1>
    5e28:	10 92 60 47 	sts	0x4760, r1	; 0x804760 <g_messages_text+0x2>
				g_intra_cycle_delay_time = 48;
    5e2c:	80 e3       	ldi	r24, 0x30	; 48
    5e2e:	90 e0       	ldi	r25, 0x00	; 0
    5e30:	80 93 8a 47 	sts	0x478A, r24	; 0x80478a <g_intra_cycle_delay_time>
    5e34:	90 93 8b 47 	sts	0x478B, r25	; 0x80478b <g_intra_cycle_delay_time+0x1>
			}
			
			bool repeat = true;
    5e38:	81 e0       	ldi	r24, 0x01	; 1
    5e3a:	88 87       	std	Y+8, r24	; 0x08
			makeMorse(g_messages_text[PATTERN_TEXT], &repeat, NULL);
    5e3c:	ce 01       	movw	r24, r28
    5e3e:	08 96       	adiw	r24, 0x08	; 8
    5e40:	40 e0       	ldi	r20, 0x00	; 0
    5e42:	50 e0       	ldi	r21, 0x00	; 0
    5e44:	bc 01       	movw	r22, r24
    5e46:	8e e5       	ldi	r24, 0x5E	; 94
    5e48:	97 e4       	ldi	r25, 0x47	; 71
    5e4a:	0e 94 44 5b 	call	0xb688	; 0xb688 <_Z9makeMorsePcPbS0_>
			g_pattern_codespeed = 15;
    5e4e:	8f e0       	ldi	r24, 0x0F	; 15
    5e50:	80 93 0c 40 	sts	0x400C, r24	; 0x80400c <g_pattern_codespeed>
			g_code_throttle = throttleValue(g_pattern_codespeed);
    5e54:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    5e58:	0e 94 4c 29 	call	0x5298	; 0x5298 <_Z13throttleValueh>
    5e5c:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    5e60:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>

			g_sendID_seconds_countdown = 600;			/* wait 10 minutes send the ID */
    5e64:	88 e5       	ldi	r24, 0x58	; 88
    5e66:	92 e0       	ldi	r25, 0x02	; 2
    5e68:	80 93 58 47 	sts	0x4758, r24	; 0x804758 <_ZL26g_sendID_seconds_countdown>
    5e6c:	90 93 59 47 	sts	0x4759, r25	; 0x804759 <_ZL26g_sendID_seconds_countdown+0x1>
			g_on_air_seconds = 12;						/* on period is very long */
    5e70:	8c e0       	ldi	r24, 0x0C	; 12
    5e72:	90 e0       	ldi	r25, 0x00	; 0
    5e74:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_on_air_seconds>
    5e78:	90 93 0e 40 	sts	0x400E, r25	; 0x80400e <g_on_air_seconds+0x1>
			g_off_air_seconds = 48;						/* off period is very short */
    5e7c:	80 e3       	ldi	r24, 0x30	; 48
    5e7e:	90 e0       	ldi	r25, 0x00	; 0
    5e80:	80 93 0f 40 	sts	0x400F, r24	; 0x80400f <g_off_air_seconds>
    5e84:	90 93 10 40 	sts	0x4010, r25	; 0x804010 <g_off_air_seconds+0x1>
		}
		break;
    5e88:	41 c0       	rjmp	.+130    	; 0x5f0c <_Z11setupForFoxP5Fox_t13EventAction_t+0x42c>
#endif // SUPPORT_TEMP_AND_VOLTAGE_REPORTING


		case SPECTATOR:
		{
			sprintf(g_messages_text[PATTERN_TEXT], "S");
    5e8a:	83 e5       	ldi	r24, 0x53	; 83
    5e8c:	90 e0       	ldi	r25, 0x00	; 0
    5e8e:	80 93 5e 47 	sts	0x475E, r24	; 0x80475e <g_messages_text>
    5e92:	90 93 5f 47 	sts	0x475F, r25	; 0x80475f <g_messages_text+0x1>
			patternNotSet = false;
    5e96:	19 82       	std	Y+1, r1	; 0x01
			g_intra_cycle_delay_time = 0;
    5e98:	10 92 8a 47 	sts	0x478A, r1	; 0x80478a <g_intra_cycle_delay_time>
    5e9c:	10 92 8b 47 	sts	0x478B, r1	; 0x80478b <g_intra_cycle_delay_time+0x1>
		}
		case BEACON:
		default:
		{
			if(patternNotSet)
    5ea0:	89 81       	ldd	r24, Y+1	; 0x01
    5ea2:	88 23       	and	r24, r24
    5ea4:	41 f0       	breq	.+16     	; 0x5eb6 <_Z11setupForFoxP5Fox_t13EventAction_t+0x3d6>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "MO");
    5ea6:	8d e4       	ldi	r24, 0x4D	; 77
    5ea8:	9f e4       	ldi	r25, 0x4F	; 79
    5eaa:	80 93 5e 47 	sts	0x475E, r24	; 0x80475e <g_messages_text>
    5eae:	90 93 5f 47 	sts	0x475F, r25	; 0x80475f <g_messages_text+0x1>
    5eb2:	10 92 60 47 	sts	0x4760, r1	; 0x804760 <g_messages_text+0x2>
			}
			
			g_intra_cycle_delay_time = 0;
    5eb6:	10 92 8a 47 	sts	0x478A, r1	; 0x80478a <g_intra_cycle_delay_time>
    5eba:	10 92 8b 47 	sts	0x478B, r1	; 0x80478b <g_intra_cycle_delay_time+0x1>
			bool repeat = true;
    5ebe:	81 e0       	ldi	r24, 0x01	; 1
    5ec0:	89 87       	std	Y+9, r24	; 0x09
			makeMorse(g_messages_text[PATTERN_TEXT], &repeat, NULL);
    5ec2:	ce 01       	movw	r24, r28
    5ec4:	09 96       	adiw	r24, 0x09	; 9
    5ec6:	40 e0       	ldi	r20, 0x00	; 0
    5ec8:	50 e0       	ldi	r21, 0x00	; 0
    5eca:	bc 01       	movw	r22, r24
    5ecc:	8e e5       	ldi	r24, 0x5E	; 94
    5ece:	97 e4       	ldi	r25, 0x47	; 71
    5ed0:	0e 94 44 5b 	call	0xb688	; 0xb688 <_Z9makeMorsePcPbS0_>
			g_pattern_codespeed = 8;
    5ed4:	88 e0       	ldi	r24, 0x08	; 8
    5ed6:	80 93 0c 40 	sts	0x400C, r24	; 0x80400c <g_pattern_codespeed>
			g_code_throttle = throttleValue(g_pattern_codespeed);
    5eda:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    5ede:	0e 94 4c 29 	call	0x5298	; 0x5298 <_Z13throttleValueh>
    5ee2:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    5ee6:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>

			g_sendID_seconds_countdown = 600;			/* wait 10 minutes send the ID */
    5eea:	88 e5       	ldi	r24, 0x58	; 88
    5eec:	92 e0       	ldi	r25, 0x02	; 2
    5eee:	80 93 58 47 	sts	0x4758, r24	; 0x804758 <_ZL26g_sendID_seconds_countdown>
    5ef2:	90 93 59 47 	sts	0x4759, r25	; 0x804759 <_ZL26g_sendID_seconds_countdown+0x1>
			g_on_air_seconds = 60;						/* on period is very long */
    5ef6:	8c e3       	ldi	r24, 0x3C	; 60
    5ef8:	90 e0       	ldi	r25, 0x00	; 0
    5efa:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_on_air_seconds>
    5efe:	90 93 0e 40 	sts	0x400E, r25	; 0x80400e <g_on_air_seconds+0x1>
			g_off_air_seconds = 0;						/* off period is very short */
    5f02:	10 92 0f 40 	sts	0x400F, r1	; 0x80400f <g_off_air_seconds>
    5f06:	10 92 10 40 	sts	0x4010, r1	; 0x804010 <g_off_air_seconds+0x1>
		}
		break;
    5f0a:	00 00       	nop
	}

	if(action == START_NOTHING)
    5f0c:	88 89       	ldd	r24, Y+16	; 0x10
    5f0e:	88 23       	and	r24, r24
    5f10:	91 f4       	brne	.+36     	; 0x5f36 <_Z11setupForFoxP5Fox_t13EventAction_t+0x456>
	{
		g_event_commenced = false;                   /* get things running immediately */
    5f12:	10 92 95 47 	sts	0x4795, r1	; 0x804795 <g_event_commenced>
		g_event_enabled = false;                     /* get things running immediately */
    5f16:	10 92 94 47 	sts	0x4794, r1	; 0x804794 <g_event_enabled>

 		g_use_rtc_for_startstop = false;
    5f1a:	10 92 b5 47 	sts	0x47B5, r1	; 0x8047b5 <g_use_rtc_for_startstop>
 		g_event_enabled = false;
    5f1e:	10 92 94 47 	sts	0x4794, r1	; 0x804794 <g_event_enabled>
		keyTransmitter(OFF);
    5f22:	80 e0       	ldi	r24, 0x00	; 0
    5f24:	0e 94 f9 6f 	call	0xdff2	; 0xdff2 <_Z14keyTransmitterb>
		LED_set_RED_level(OFF);
    5f28:	80 e0       	ldi	r24, 0x00	; 0
    5f2a:	0e 94 e2 10 	call	0x21c4	; 0x21c4 <LED_set_RED_level>
		powerToTransmitter(OFF);
    5f2e:	80 e0       	ldi	r24, 0x00	; 0
    5f30:	0e 94 eb 6f 	call	0xdfd6	; 0xdfd6 <_Z18powerToTransmitterb>
// 
// 	digitalWrite(PIN_CW_KEY_LOGIC, OFF);    /* TX key line */
// 	g_sendAMmodulation = false;
// 	g_LED_enunciating = false;
// 	g_config_error = NULL_CONFIG;           /* Trigger a new configuration enunciation */
}
    5f34:	b1 c0       	rjmp	.+354    	; 0x6098 <_Z11setupForFoxP5Fox_t13EventAction_t+0x5b8>
 		g_event_enabled = false;
		keyTransmitter(OFF);
		LED_set_RED_level(OFF);
		powerToTransmitter(OFF);
	}
	else if(action == START_EVENT_NOW)
    5f36:	88 89       	ldd	r24, Y+16	; 0x10
    5f38:	81 30       	cpi	r24, 0x01	; 1
    5f3a:	09 f0       	breq	.+2      	; 0x5f3e <_Z11setupForFoxP5Fox_t13EventAction_t+0x45e>
    5f3c:	74 c0       	rjmp	.+232    	; 0x6026 <_Z11setupForFoxP5Fox_t13EventAction_t+0x546>
//  		g_event_enabled = true;
// 		g_event_commenced = true;					/* get things running immediately */
// 		g_event_enabled = true;						/* get things running immediately */

		EC result;
		set_system_time(ds3231_get_epoch(&result));
    5f3e:	ce 01       	movw	r24, r28
    5f40:	0a 96       	adiw	r24, 0x0a	; 10
    5f42:	0e 94 53 40 	call	0x80a6	; 0x80a6 <ds3231_get_epoch>
    5f46:	dc 01       	movw	r26, r24
    5f48:	cb 01       	movw	r24, r22
    5f4a:	bc 01       	movw	r22, r24
    5f4c:	cd 01       	movw	r24, r26
    5f4e:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <set_system_time>
		time_t now = time(null);
    5f52:	80 e0       	ldi	r24, 0x00	; 0
    5f54:	90 e0       	ldi	r25, 0x00	; 0
    5f56:	0e 94 56 06 	call	0xcac	; 0xcac <time>
    5f5a:	dc 01       	movw	r26, r24
    5f5c:	cb 01       	movw	r24, r22
    5f5e:	8a 83       	std	Y+2, r24	; 0x02
    5f60:	9b 83       	std	Y+3, r25	; 0x03
    5f62:	ac 83       	std	Y+4, r26	; 0x04
    5f64:	bd 83       	std	Y+5, r27	; 0x05
		
		if(result == ERROR_CODE_NO_ERROR)
    5f66:	8a 85       	ldd	r24, Y+10	; 0x0a
    5f68:	88 23       	and	r24, r24
    5f6a:	c9 f5       	brne	.+114    	; 0x5fde <_Z11setupForFoxP5Fox_t13EventAction_t+0x4fe>
		{
			g_event_start_epoch = now;
    5f6c:	8a 81       	ldd	r24, Y+2	; 0x02
    5f6e:	9b 81       	ldd	r25, Y+3	; 0x03
    5f70:	ac 81       	ldd	r26, Y+4	; 0x04
    5f72:	bd 81       	ldd	r27, Y+5	; 0x05
    5f74:	80 93 8c 47 	sts	0x478C, r24	; 0x80478c <g_event_start_epoch>
    5f78:	90 93 8d 47 	sts	0x478D, r25	; 0x80478d <g_event_start_epoch+0x1>
    5f7c:	a0 93 8e 47 	sts	0x478E, r26	; 0x80478e <g_event_start_epoch+0x2>
    5f80:	b0 93 8f 47 	sts	0x478F, r27	; 0x80478f <g_event_start_epoch+0x3>
			if(g_event_start_epoch > g_event_finish_epoch)
    5f84:	20 91 8c 47 	lds	r18, 0x478C	; 0x80478c <g_event_start_epoch>
    5f88:	30 91 8d 47 	lds	r19, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    5f8c:	40 91 8e 47 	lds	r20, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    5f90:	50 91 8f 47 	lds	r21, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    5f94:	80 91 90 47 	lds	r24, 0x4790	; 0x804790 <g_event_finish_epoch>
    5f98:	90 91 91 47 	lds	r25, 0x4791	; 0x804791 <g_event_finish_epoch+0x1>
    5f9c:	a0 91 92 47 	lds	r26, 0x4792	; 0x804792 <g_event_finish_epoch+0x2>
    5fa0:	b0 91 93 47 	lds	r27, 0x4793	; 0x804793 <g_event_finish_epoch+0x3>
    5fa4:	61 e0       	ldi	r22, 0x01	; 1
    5fa6:	82 17       	cp	r24, r18
    5fa8:	93 07       	cpc	r25, r19
    5faa:	a4 07       	cpc	r26, r20
    5fac:	b5 07       	cpc	r27, r21
    5fae:	08 f0       	brcs	.+2      	; 0x5fb2 <_Z11setupForFoxP5Fox_t13EventAction_t+0x4d2>
    5fb0:	60 e0       	ldi	r22, 0x00	; 0
    5fb2:	66 23       	and	r22, r22
    5fb4:	a1 f0       	breq	.+40     	; 0x5fde <_Z11setupForFoxP5Fox_t13EventAction_t+0x4fe>
			{
				g_event_finish_epoch = g_event_start_epoch + DAY;
    5fb6:	80 91 8c 47 	lds	r24, 0x478C	; 0x80478c <g_event_start_epoch>
    5fba:	90 91 8d 47 	lds	r25, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    5fbe:	a0 91 8e 47 	lds	r26, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    5fc2:	b0 91 8f 47 	lds	r27, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    5fc6:	80 58       	subi	r24, 0x80	; 128
    5fc8:	9e 4a       	sbci	r25, 0xAE	; 174
    5fca:	ae 4f       	sbci	r26, 0xFE	; 254
    5fcc:	bf 4f       	sbci	r27, 0xFF	; 255
    5fce:	80 93 90 47 	sts	0x4790, r24	; 0x804790 <g_event_finish_epoch>
    5fd2:	90 93 91 47 	sts	0x4791, r25	; 0x804791 <g_event_finish_epoch+0x1>
    5fd6:	a0 93 92 47 	sts	0x4792, r26	; 0x804792 <g_event_finish_epoch+0x2>
    5fda:	b0 93 93 47 	sts	0x4793, r27	; 0x804793 <g_event_finish_epoch+0x3>
			}
		}
		
		SC status = STATUS_CODE_IDLE;
    5fde:	1b 86       	std	Y+11, r1	; 0x0b
		result = launchEvent(&status);
    5fe0:	ce 01       	movw	r24, r28
    5fe2:	0b 96       	adiw	r24, 0x0b	; 11
    5fe4:	0e 94 a6 29 	call	0x534c	; 0x534c <_Z11launchEventP2SC>
    5fe8:	8a 87       	std	Y+10, r24	; 0x0a
		
		if(g_go_to_sleep && g_sleepType)
    5fea:	80 91 98 47 	lds	r24, 0x4798	; 0x804798 <_ZL13g_go_to_sleep>
    5fee:	88 23       	and	r24, r24
    5ff0:	31 f0       	breq	.+12     	; 0x5ffe <_Z11setupForFoxP5Fox_t13EventAction_t+0x51e>
    5ff2:	80 91 5d 47 	lds	r24, 0x475D	; 0x80475d <_ZL11g_sleepType>
    5ff6:	88 23       	and	r24, r24
    5ff8:	11 f0       	breq	.+4      	; 0x5ffe <_Z11setupForFoxP5Fox_t13EventAction_t+0x51e>
    5ffa:	81 e0       	ldi	r24, 0x01	; 1
    5ffc:	01 c0       	rjmp	.+2      	; 0x6000 <_Z11setupForFoxP5Fox_t13EventAction_t+0x520>
    5ffe:	80 e0       	ldi	r24, 0x00	; 0
    6000:	88 23       	and	r24, r24
    6002:	29 f0       	breq	.+10     	; 0x600e <_Z11setupForFoxP5Fox_t13EventAction_t+0x52e>
		{
			g_sleepType = SLEEP_AFTER_WIFI_GOES_OFF;
    6004:	83 e0       	ldi	r24, 0x03	; 3
    6006:	80 93 5d 47 	sts	0x475D, r24	; 0x80475d <_ZL11g_sleepType>
			g_go_to_sleep = false;
    600a:	10 92 98 47 	sts	0x4798, r1	; 0x804798 <_ZL13g_go_to_sleep>
		}

		g_WiFi_shutdown_seconds = 60;
    600e:	8c e3       	ldi	r24, 0x3C	; 60
    6010:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>

		if(!result)
    6014:	8a 85       	ldd	r24, Y+10	; 0x0a
    6016:	88 23       	and	r24, r24
    6018:	09 f0       	breq	.+2      	; 0x601c <_Z11setupForFoxP5Fox_t13EventAction_t+0x53c>
    601a:	3e c0       	rjmp	.+124    	; 0x6098 <_Z11setupForFoxP5Fox_t13EventAction_t+0x5b8>
		{
			g_ee_mgr.saveAllEEPROM();
    601c:	8b ea       	ldi	r24, 0xAB	; 171
    601e:	97 e4       	ldi	r25, 0x47	; 71
    6020:	0e 94 ba 47 	call	0x8f74	; 0x8f74 <_ZN13EepromManager13saveAllEEPROMEv>
// 
// 	digitalWrite(PIN_CW_KEY_LOGIC, OFF);    /* TX key line */
// 	g_sendAMmodulation = false;
// 	g_LED_enunciating = false;
// 	g_config_error = NULL_CONFIG;           /* Trigger a new configuration enunciation */
}
    6024:	39 c0       	rjmp	.+114    	; 0x6098 <_Z11setupForFoxP5Fox_t13EventAction_t+0x5b8>
		if(!result)
		{
			g_ee_mgr.saveAllEEPROM();
		}
	}
	else if(action == START_TRANSMISSIONS_NOW)                                  /* Immediately start transmitting, regardless RTC or time slot */
    6026:	88 89       	ldd	r24, Y+16	; 0x10
    6028:	82 30       	cpi	r24, 0x02	; 2
    602a:	91 f5       	brne	.+100    	; 0x6090 <_Z11setupForFoxP5Fox_t13EventAction_t+0x5b0>
	{
		bool repeat = true;
    602c:	81 e0       	ldi	r24, 0x01	; 1
    602e:	8c 87       	std	Y+12, r24	; 0x0c
		makeMorse(g_messages_text[PATTERN_TEXT], &repeat, NULL);
    6030:	ce 01       	movw	r24, r28
    6032:	0c 96       	adiw	r24, 0x0c	; 12
    6034:	40 e0       	ldi	r20, 0x00	; 0
    6036:	50 e0       	ldi	r21, 0x00	; 0
    6038:	bc 01       	movw	r22, r24
    603a:	8e e5       	ldi	r24, 0x5E	; 94
    603c:	97 e4       	ldi	r25, 0x47	; 71
    603e:	0e 94 44 5b 	call	0xb688	; 0xb688 <_Z9makeMorsePcPbS0_>
		g_code_throttle = throttleValue(g_pattern_codespeed);
    6042:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    6046:	0e 94 4c 29 	call	0x5298	; 0x5298 <_Z13throttleValueh>
    604a:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    604e:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>

// 		g_event_start_epoch = 1;                     /* have it start a long time ago */
// 		g_event_finish_epoch = MAX_TIME;             /* run for a long long time */
		g_on_the_air = g_on_air_seconds;			/* start out transmitting */
    6052:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    6056:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    605a:	09 2e       	mov	r0, r25
    605c:	00 0c       	add	r0, r0
    605e:	aa 0b       	sbc	r26, r26
    6060:	bb 0b       	sbc	r27, r27
    6062:	80 93 54 47 	sts	0x4754, r24	; 0x804754 <_ZL12g_on_the_air>
    6066:	90 93 55 47 	sts	0x4755, r25	; 0x804755 <_ZL12g_on_the_air+0x1>
    606a:	a0 93 56 47 	sts	0x4756, r26	; 0x804756 <_ZL12g_on_the_air+0x2>
    606e:	b0 93 57 47 	sts	0x4757, r27	; 0x804757 <_ZL12g_on_the_air+0x3>
		g_event_commenced = true;                   /* get things running immediately */
    6072:	81 e0       	ldi	r24, 0x01	; 1
    6074:	80 93 95 47 	sts	0x4795, r24	; 0x804795 <g_event_commenced>
		g_event_enabled = true;                     /* get things running immediately */
    6078:	81 e0       	ldi	r24, 0x01	; 1
    607a:	80 93 94 47 	sts	0x4794, r24	; 0x804794 <g_event_enabled>
		g_last_status_code = STATUS_CODE_EVENT_STARTED_NOW_TRANSMITTING;
    607e:	8d ef       	ldi	r24, 0xFD	; 253
    6080:	80 93 4c 47 	sts	0x474C, r24	; 0x80474c <_ZL18g_last_status_code>
		
// 		g_seconds_since_sync = (g_fox_counter - 1) * g_on_air_interval_seconds; /* Total elapsed time since start of event */
 		g_use_rtc_for_startstop = false;
    6084:	10 92 b5 47 	sts	0x47B5, r1	; 0x8047b5 <g_use_rtc_for_startstop>
 		g_event_enabled = true;
    6088:	81 e0       	ldi	r24, 0x01	; 1
    608a:	80 93 94 47 	sts	0x4794, r24	; 0x804794 <g_event_enabled>
// 
// 	digitalWrite(PIN_CW_KEY_LOGIC, OFF);    /* TX key line */
// 	g_sendAMmodulation = false;
// 	g_LED_enunciating = false;
// 	g_config_error = NULL_CONFIG;           /* Trigger a new configuration enunciation */
}
    608e:	04 c0       	rjmp	.+8      	; 0x6098 <_Z11setupForFoxP5Fox_t13EventAction_t+0x5b8>
	}
	else         /* if(action == START_EVENT_WITH_STARTFINISH_TIMES) */
	{
		SC sc;
 //		EC ec = 
		launchEvent(&sc);
    6090:	ce 01       	movw	r24, r28
    6092:	0d 96       	adiw	r24, 0x0d	; 13
    6094:	0e 94 a6 29 	call	0x534c	; 0x534c <_Z11launchEventP2SC>
// 
// 	digitalWrite(PIN_CW_KEY_LOGIC, OFF);    /* TX key line */
// 	g_sendAMmodulation = false;
// 	g_LED_enunciating = false;
// 	g_config_error = NULL_CONFIG;           /* Trigger a new configuration enunciation */
}
    6098:	00 00       	nop
    609a:	60 96       	adiw	r28, 0x10	; 16
    609c:	cd bf       	out	0x3d, r28	; 61
    609e:	de bf       	out	0x3e, r29	; 62
    60a0:	df 91       	pop	r29
    60a2:	cf 91       	pop	r28
    60a4:	08 95       	ret

000060a6 <_Z18validateTimeStringPcPma>:

time_t validateTimeString(char* str, time_t* epochVar, int8_t offsetHours)
{
    60a6:	cf 93       	push	r28
    60a8:	df 93       	push	r29
    60aa:	cd b7       	in	r28, 0x3d	; 61
    60ac:	de b7       	in	r29, 0x3e	; 62
    60ae:	a8 97       	sbiw	r28, 0x28	; 40
    60b0:	cd bf       	out	0x3d, r28	; 61
    60b2:	de bf       	out	0x3e, r29	; 62
    60b4:	8c a3       	std	Y+36, r24	; 0x24
    60b6:	9d a3       	std	Y+37, r25	; 0x25
    60b8:	6e a3       	std	Y+38, r22	; 0x26
    60ba:	7f a3       	std	Y+39, r23	; 0x27
    60bc:	48 a7       	std	Y+40, r20	; 0x28
	time_t valid = 0;
    60be:	19 82       	std	Y+1, r1	; 0x01
    60c0:	1a 82       	std	Y+2, r1	; 0x02
    60c2:	1b 82       	std	Y+3, r1	; 0x03
    60c4:	1c 82       	std	Y+4, r1	; 0x04
	int len = strlen(str);
    60c6:	8c a1       	ldd	r24, Y+36	; 0x24
    60c8:	9d a1       	ldd	r25, Y+37	; 0x25
    60ca:	0e 94 85 7c 	call	0xf90a	; 0xf90a <strlen>
    60ce:	8d 83       	std	Y+5, r24	; 0x05
    60d0:	9e 83       	std	Y+6, r25	; 0x06
	time_t minimumEpoch = MINIMUM_EPOCH;
    60d2:	80 e0       	ldi	r24, 0x00	; 0
    60d4:	96 e6       	ldi	r25, 0x66	; 102
    60d6:	ae ee       	ldi	r26, 0xEE	; 238
    60d8:	bf e5       	ldi	r27, 0x5F	; 95
    60da:	8f 83       	std	Y+7, r24	; 0x07
    60dc:	98 87       	std	Y+8, r25	; 0x08
    60de:	a9 87       	std	Y+9, r26	; 0x09
    60e0:	ba 87       	std	Y+10, r27	; 0x0a
	uint8_t validationType = 0;
    60e2:	1b 86       	std	Y+11, r1	; 0x0b
	time_t now = time(null);
    60e4:	80 e0       	ldi	r24, 0x00	; 0
    60e6:	90 e0       	ldi	r25, 0x00	; 0
    60e8:	0e 94 56 06 	call	0xcac	; 0xcac <time>
    60ec:	dc 01       	movw	r26, r24
    60ee:	cb 01       	movw	r24, r22
    60f0:	8c 87       	std	Y+12, r24	; 0x0c
    60f2:	9d 87       	std	Y+13, r25	; 0x0d
    60f4:	ae 87       	std	Y+14, r26	; 0x0e
    60f6:	bf 87       	std	Y+15, r27	; 0x0f

	if(epochVar == &g_event_start_epoch)
    60f8:	8e a1       	ldd	r24, Y+38	; 0x26
    60fa:	9f a1       	ldd	r25, Y+39	; 0x27
    60fc:	8c 58       	subi	r24, 0x8C	; 140
    60fe:	97 44       	sbci	r25, 0x47	; 71
    6100:	69 f5       	brne	.+90     	; 0x615c <_Z18validateTimeStringPcPma+0xb6>
	{
		minimumEpoch = MAX(now, MINIMUM_EPOCH);
    6102:	8c 85       	ldd	r24, Y+12	; 0x0c
    6104:	9d 85       	ldd	r25, Y+13	; 0x0d
    6106:	ae 85       	ldd	r26, Y+14	; 0x0e
    6108:	bf 85       	ldd	r27, Y+15	; 0x0f
    610a:	88 8b       	std	Y+16, r24	; 0x10
    610c:	99 8b       	std	Y+17, r25	; 0x11
    610e:	aa 8b       	std	Y+18, r26	; 0x12
    6110:	bb 8b       	std	Y+19, r27	; 0x13
    6112:	80 e0       	ldi	r24, 0x00	; 0
    6114:	96 e6       	ldi	r25, 0x66	; 102
    6116:	ae ee       	ldi	r26, 0xEE	; 238
    6118:	bf e5       	ldi	r27, 0x5F	; 95
    611a:	8c 8b       	std	Y+20, r24	; 0x14
    611c:	9d 8b       	std	Y+21, r25	; 0x15
    611e:	ae 8b       	std	Y+22, r26	; 0x16
    6120:	bf 8b       	std	Y+23, r27	; 0x17
    6122:	28 89       	ldd	r18, Y+16	; 0x10
    6124:	39 89       	ldd	r19, Y+17	; 0x11
    6126:	4a 89       	ldd	r20, Y+18	; 0x12
    6128:	5b 89       	ldd	r21, Y+19	; 0x13
    612a:	8c 89       	ldd	r24, Y+20	; 0x14
    612c:	9d 89       	ldd	r25, Y+21	; 0x15
    612e:	ae 89       	ldd	r26, Y+22	; 0x16
    6130:	bf 89       	ldd	r27, Y+23	; 0x17
    6132:	28 17       	cp	r18, r24
    6134:	39 07       	cpc	r19, r25
    6136:	4a 07       	cpc	r20, r26
    6138:	5b 07       	cpc	r21, r27
    613a:	28 f4       	brcc	.+10     	; 0x6146 <_Z18validateTimeStringPcPma+0xa0>
    613c:	8c 89       	ldd	r24, Y+20	; 0x14
    613e:	9d 89       	ldd	r25, Y+21	; 0x15
    6140:	ae 89       	ldd	r26, Y+22	; 0x16
    6142:	bf 89       	ldd	r27, Y+23	; 0x17
    6144:	04 c0       	rjmp	.+8      	; 0x614e <_Z18validateTimeStringPcPma+0xa8>
    6146:	88 89       	ldd	r24, Y+16	; 0x10
    6148:	99 89       	ldd	r25, Y+17	; 0x11
    614a:	aa 89       	ldd	r26, Y+18	; 0x12
    614c:	bb 89       	ldd	r27, Y+19	; 0x13
    614e:	8f 83       	std	Y+7, r24	; 0x07
    6150:	98 87       	std	Y+8, r25	; 0x08
    6152:	a9 87       	std	Y+9, r26	; 0x09
    6154:	ba 87       	std	Y+10, r27	; 0x0a
		validationType = 1;
    6156:	81 e0       	ldi	r24, 0x01	; 1
    6158:	8b 87       	std	Y+11, r24	; 0x0b
    615a:	35 c0       	rjmp	.+106    	; 0x61c6 <_Z18validateTimeStringPcPma+0x120>
	}
	else if(epochVar == &g_event_finish_epoch)
    615c:	8e a1       	ldd	r24, Y+38	; 0x26
    615e:	9f a1       	ldd	r25, Y+39	; 0x27
    6160:	80 59       	subi	r24, 0x90	; 144
    6162:	97 44       	sbci	r25, 0x47	; 71
    6164:	81 f5       	brne	.+96     	; 0x61c6 <_Z18validateTimeStringPcPma+0x120>
	{
		minimumEpoch = MAX(g_event_start_epoch, now);
    6166:	80 91 8c 47 	lds	r24, 0x478C	; 0x80478c <g_event_start_epoch>
    616a:	90 91 8d 47 	lds	r25, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    616e:	a0 91 8e 47 	lds	r26, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    6172:	b0 91 8f 47 	lds	r27, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    6176:	8c 8f       	std	Y+28, r24	; 0x1c
    6178:	9d 8f       	std	Y+29, r25	; 0x1d
    617a:	ae 8f       	std	Y+30, r26	; 0x1e
    617c:	bf 8f       	std	Y+31, r27	; 0x1f
    617e:	8c 85       	ldd	r24, Y+12	; 0x0c
    6180:	9d 85       	ldd	r25, Y+13	; 0x0d
    6182:	ae 85       	ldd	r26, Y+14	; 0x0e
    6184:	bf 85       	ldd	r27, Y+15	; 0x0f
    6186:	88 a3       	std	Y+32, r24	; 0x20
    6188:	99 a3       	std	Y+33, r25	; 0x21
    618a:	aa a3       	std	Y+34, r26	; 0x22
    618c:	bb a3       	std	Y+35, r27	; 0x23
    618e:	2c 8d       	ldd	r18, Y+28	; 0x1c
    6190:	3d 8d       	ldd	r19, Y+29	; 0x1d
    6192:	4e 8d       	ldd	r20, Y+30	; 0x1e
    6194:	5f 8d       	ldd	r21, Y+31	; 0x1f
    6196:	88 a1       	ldd	r24, Y+32	; 0x20
    6198:	99 a1       	ldd	r25, Y+33	; 0x21
    619a:	aa a1       	ldd	r26, Y+34	; 0x22
    619c:	bb a1       	ldd	r27, Y+35	; 0x23
    619e:	28 17       	cp	r18, r24
    61a0:	39 07       	cpc	r19, r25
    61a2:	4a 07       	cpc	r20, r26
    61a4:	5b 07       	cpc	r21, r27
    61a6:	28 f4       	brcc	.+10     	; 0x61b2 <_Z18validateTimeStringPcPma+0x10c>
    61a8:	88 a1       	ldd	r24, Y+32	; 0x20
    61aa:	99 a1       	ldd	r25, Y+33	; 0x21
    61ac:	aa a1       	ldd	r26, Y+34	; 0x22
    61ae:	bb a1       	ldd	r27, Y+35	; 0x23
    61b0:	04 c0       	rjmp	.+8      	; 0x61ba <_Z18validateTimeStringPcPma+0x114>
    61b2:	8c 8d       	ldd	r24, Y+28	; 0x1c
    61b4:	9d 8d       	ldd	r25, Y+29	; 0x1d
    61b6:	ae 8d       	ldd	r26, Y+30	; 0x1e
    61b8:	bf 8d       	ldd	r27, Y+31	; 0x1f
    61ba:	8f 83       	std	Y+7, r24	; 0x07
    61bc:	98 87       	std	Y+8, r25	; 0x08
    61be:	a9 87       	std	Y+9, r26	; 0x09
    61c0:	ba 87       	std	Y+10, r27	; 0x0a
		validationType = 2;
    61c2:	82 e0       	ldi	r24, 0x02	; 2
    61c4:	8b 87       	std	Y+11, r24	; 0x0b
	}
	
	if(len == 10)
    61c6:	8d 81       	ldd	r24, Y+5	; 0x05
    61c8:	9e 81       	ldd	r25, Y+6	; 0x06
    61ca:	0a 97       	sbiw	r24, 0x0a	; 10
    61cc:	a9 f4       	brne	.+42     	; 0x61f8 <_Z18validateTimeStringPcPma+0x152>
	{
		str[10] = '0';
    61ce:	8c a1       	ldd	r24, Y+36	; 0x24
    61d0:	9d a1       	ldd	r25, Y+37	; 0x25
    61d2:	0a 96       	adiw	r24, 0x0a	; 10
    61d4:	20 e3       	ldi	r18, 0x30	; 48
    61d6:	fc 01       	movw	r30, r24
    61d8:	20 83       	st	Z, r18
		str[11] = '0';
    61da:	8c a1       	ldd	r24, Y+36	; 0x24
    61dc:	9d a1       	ldd	r25, Y+37	; 0x25
    61de:	0b 96       	adiw	r24, 0x0b	; 11
    61e0:	20 e3       	ldi	r18, 0x30	; 48
    61e2:	fc 01       	movw	r30, r24
    61e4:	20 83       	st	Z, r18
		str[12] = '\0';
    61e6:	8c a1       	ldd	r24, Y+36	; 0x24
    61e8:	9d a1       	ldd	r25, Y+37	; 0x25
    61ea:	0c 96       	adiw	r24, 0x0c	; 12
    61ec:	fc 01       	movw	r30, r24
    61ee:	10 82       	st	Z, r1
		len = 12;
    61f0:	8c e0       	ldi	r24, 0x0C	; 12
    61f2:	90 e0       	ldi	r25, 0x00	; 0
    61f4:	8d 83       	std	Y+5, r24	; 0x05
    61f6:	9e 83       	std	Y+6, r25	; 0x06
	}

	if((len == 12) && (only_digits(str)))
    61f8:	8d 81       	ldd	r24, Y+5	; 0x05
    61fa:	9e 81       	ldd	r25, Y+6	; 0x06
    61fc:	0c 97       	sbiw	r24, 0x0c	; 12
    61fe:	41 f4       	brne	.+16     	; 0x6210 <_Z18validateTimeStringPcPma+0x16a>
    6200:	8c a1       	ldd	r24, Y+36	; 0x24
    6202:	9d a1       	ldd	r25, Y+37	; 0x25
    6204:	0e 94 3c 74 	call	0xe878	; 0xe878 <_Z11only_digitsPc>
    6208:	88 23       	and	r24, r24
    620a:	11 f0       	breq	.+4      	; 0x6210 <_Z18validateTimeStringPcPma+0x16a>
    620c:	81 e0       	ldi	r24, 0x01	; 1
    620e:	01 c0       	rjmp	.+2      	; 0x6212 <_Z18validateTimeStringPcPma+0x16c>
    6210:	80 e0       	ldi	r24, 0x00	; 0
    6212:	88 23       	and	r24, r24
    6214:	09 f4       	brne	.+2      	; 0x6218 <_Z18validateTimeStringPcPma+0x172>
    6216:	69 c0       	rjmp	.+210    	; 0x62ea <_Z18validateTimeStringPcPma+0x244>
	{
		time_t ep = RTC_String2Epoch(NULL, str);    /* String format "YYMMDDhhmmss" */
    6218:	8c a1       	ldd	r24, Y+36	; 0x24
    621a:	9d a1       	ldd	r25, Y+37	; 0x25
    621c:	bc 01       	movw	r22, r24
    621e:	80 e0       	ldi	r24, 0x00	; 0
    6220:	90 e0       	ldi	r25, 0x00	; 0
    6222:	0e 94 a1 3e 	call	0x7d42	; 0x7d42 <RTC_String2Epoch>
    6226:	dc 01       	movw	r26, r24
    6228:	cb 01       	movw	r24, r22
    622a:	88 8f       	std	Y+24, r24	; 0x18
    622c:	99 8f       	std	Y+25, r25	; 0x19
    622e:	aa 8f       	std	Y+26, r26	; 0x1a
    6230:	bb 8f       	std	Y+27, r27	; 0x1b

		ep += (HOUR * offsetHours);
    6232:	88 a5       	ldd	r24, Y+40	; 0x28
    6234:	28 2f       	mov	r18, r24
    6236:	88 0f       	add	r24, r24
    6238:	33 0b       	sbc	r19, r19
    623a:	44 0b       	sbc	r20, r20
    623c:	55 0b       	sbc	r21, r21
    623e:	80 e1       	ldi	r24, 0x10	; 16
    6240:	9e e0       	ldi	r25, 0x0E	; 14
    6242:	dc 01       	movw	r26, r24
    6244:	0e 94 bb 7a 	call	0xf576	; 0xf576 <__muluhisi3>
    6248:	9b 01       	movw	r18, r22
    624a:	ac 01       	movw	r20, r24
    624c:	88 8d       	ldd	r24, Y+24	; 0x18
    624e:	99 8d       	ldd	r25, Y+25	; 0x19
    6250:	aa 8d       	ldd	r26, Y+26	; 0x1a
    6252:	bb 8d       	ldd	r27, Y+27	; 0x1b
    6254:	82 0f       	add	r24, r18
    6256:	93 1f       	adc	r25, r19
    6258:	a4 1f       	adc	r26, r20
    625a:	b5 1f       	adc	r27, r21
    625c:	88 8f       	std	Y+24, r24	; 0x18
    625e:	99 8f       	std	Y+25, r25	; 0x19
    6260:	aa 8f       	std	Y+26, r26	; 0x1a
    6262:	bb 8f       	std	Y+27, r27	; 0x1b

		if(ep > minimumEpoch)
    6264:	28 8d       	ldd	r18, Y+24	; 0x18
    6266:	39 8d       	ldd	r19, Y+25	; 0x19
    6268:	4a 8d       	ldd	r20, Y+26	; 0x1a
    626a:	5b 8d       	ldd	r21, Y+27	; 0x1b
    626c:	8f 81       	ldd	r24, Y+7	; 0x07
    626e:	98 85       	ldd	r25, Y+8	; 0x08
    6270:	a9 85       	ldd	r26, Y+9	; 0x09
    6272:	ba 85       	ldd	r27, Y+10	; 0x0a
    6274:	82 17       	cp	r24, r18
    6276:	93 07       	cpc	r25, r19
    6278:	a4 07       	cpc	r26, r20
    627a:	b5 07       	cpc	r27, r21
    627c:	48 f4       	brcc	.+18     	; 0x6290 <_Z18validateTimeStringPcPma+0x1ea>
		{
			valid = ep;
    627e:	88 8d       	ldd	r24, Y+24	; 0x18
    6280:	99 8d       	ldd	r25, Y+25	; 0x19
    6282:	aa 8d       	ldd	r26, Y+26	; 0x1a
    6284:	bb 8d       	ldd	r27, Y+27	; 0x1b
    6286:	89 83       	std	Y+1, r24	; 0x01
    6288:	9a 83       	std	Y+2, r25	; 0x02
    628a:	ab 83       	std	Y+3, r26	; 0x03
    628c:	bc 83       	std	Y+4, r27	; 0x04
    628e:	35 c0       	rjmp	.+106    	; 0x62fa <_Z18validateTimeStringPcPma+0x254>
		}
		else
		{
			if(validationType == 1)         /* start time validation */
    6290:	8b 85       	ldd	r24, Y+11	; 0x0b
    6292:	81 30       	cpi	r24, 0x01	; 1
    6294:	29 f4       	brne	.+10     	; 0x62a0 <_Z18validateTimeStringPcPma+0x1fa>
			{
				sb_send_string(TEXT_ERR_START_IN_PAST_TXT);
    6296:	85 e0       	ldi	r24, 0x05	; 5
    6298:	93 e4       	ldi	r25, 0x43	; 67
    629a:	0e 94 4e 63 	call	0xc69c	; 0xc69c <sb_send_string>
    629e:	2d c0       	rjmp	.+90     	; 0x62fa <_Z18validateTimeStringPcPma+0x254>
			}
			else if(validationType == 2)    /* finish time validation */
    62a0:	8b 85       	ldd	r24, Y+11	; 0x0b
    62a2:	82 30       	cpi	r24, 0x02	; 2
    62a4:	e9 f4       	brne	.+58     	; 0x62e0 <_Z18validateTimeStringPcPma+0x23a>
			{
				if(ep < time(null))
    62a6:	80 e0       	ldi	r24, 0x00	; 0
    62a8:	90 e0       	ldi	r25, 0x00	; 0
    62aa:	0e 94 56 06 	call	0xcac	; 0xcac <time>
    62ae:	9b 01       	movw	r18, r22
    62b0:	ac 01       	movw	r20, r24
    62b2:	61 e0       	ldi	r22, 0x01	; 1
    62b4:	88 8d       	ldd	r24, Y+24	; 0x18
    62b6:	99 8d       	ldd	r25, Y+25	; 0x19
    62b8:	aa 8d       	ldd	r26, Y+26	; 0x1a
    62ba:	bb 8d       	ldd	r27, Y+27	; 0x1b
    62bc:	82 17       	cp	r24, r18
    62be:	93 07       	cpc	r25, r19
    62c0:	a4 07       	cpc	r26, r20
    62c2:	b5 07       	cpc	r27, r21
    62c4:	08 f0       	brcs	.+2      	; 0x62c8 <_Z18validateTimeStringPcPma+0x222>
    62c6:	60 e0       	ldi	r22, 0x00	; 0
    62c8:	66 23       	and	r22, r22
    62ca:	29 f0       	breq	.+10     	; 0x62d6 <_Z18validateTimeStringPcPma+0x230>
				{
					sb_send_string(TEXT_ERR_FINISH_IN_PAST_TXT);
    62cc:	8a e1       	ldi	r24, 0x1A	; 26
    62ce:	93 e4       	ldi	r25, 0x43	; 67
    62d0:	0e 94 4e 63 	call	0xc69c	; 0xc69c <sb_send_string>
    62d4:	12 c0       	rjmp	.+36     	; 0x62fa <_Z18validateTimeStringPcPma+0x254>
				}
				else
				{
					sb_send_string(TEXT_ERR_FINISH_BEFORE_START_TXT);
    62d6:	80 e3       	ldi	r24, 0x30	; 48
    62d8:	93 e4       	ldi	r25, 0x43	; 67
    62da:	0e 94 4e 63 	call	0xc69c	; 0xc69c <sb_send_string>
    62de:	0d c0       	rjmp	.+26     	; 0x62fa <_Z18validateTimeStringPcPma+0x254>
				}
			}
			else    /* current time validation */
			{
				sb_send_string(TEXT_ERR_TIME_IN_PAST_TXT);
    62e0:	8b e4       	ldi	r24, 0x4B	; 75
    62e2:	93 e4       	ldi	r25, 0x43	; 67
    62e4:	0e 94 4e 63 	call	0xc69c	; 0xc69c <sb_send_string>
    62e8:	08 c0       	rjmp	.+16     	; 0x62fa <_Z18validateTimeStringPcPma+0x254>
			}
		}
	}
	else if(len)
    62ea:	8d 81       	ldd	r24, Y+5	; 0x05
    62ec:	9e 81       	ldd	r25, Y+6	; 0x06
    62ee:	89 2b       	or	r24, r25
    62f0:	21 f0       	breq	.+8      	; 0x62fa <_Z18validateTimeStringPcPma+0x254>
	{
		sb_send_string(TEXT_ERR_INVALID_TIME_TXT);
    62f2:	8f e5       	ldi	r24, 0x5F	; 95
    62f4:	93 e4       	ldi	r25, 0x43	; 67
    62f6:	0e 94 4e 63 	call	0xc69c	; 0xc69c <sb_send_string>
	}

	return(valid);
    62fa:	89 81       	ldd	r24, Y+1	; 0x01
    62fc:	9a 81       	ldd	r25, Y+2	; 0x02
    62fe:	ab 81       	ldd	r26, Y+3	; 0x03
    6300:	bc 81       	ldd	r27, Y+4	; 0x04
}
    6302:	bc 01       	movw	r22, r24
    6304:	cd 01       	movw	r24, r26
    6306:	a8 96       	adiw	r28, 0x28	; 40
    6308:	cd bf       	out	0x3d, r28	; 61
    630a:	de bf       	out	0x3e, r29	; 62
    630c:	df 91       	pop	r29
    630e:	cf 91       	pop	r28
    6310:	08 95       	ret

00006312 <_Z14reportTimeTillmmPKcS0_>:


bool reportTimeTill(time_t from, time_t until, const char* prefix, const char* failMsg)
{
    6312:	ef 92       	push	r14
    6314:	ff 92       	push	r15
    6316:	0f 93       	push	r16
    6318:	1f 93       	push	r17
    631a:	cf 93       	push	r28
    631c:	df 93       	push	r29
    631e:	cd b7       	in	r28, 0x3d	; 61
    6320:	de b7       	in	r29, 0x3e	; 62
    6322:	6f 97       	sbiw	r28, 0x1f	; 31
    6324:	cd bf       	out	0x3d, r28	; 61
    6326:	de bf       	out	0x3e, r29	; 62
    6328:	6c 8b       	std	Y+20, r22	; 0x14
    632a:	7d 8b       	std	Y+21, r23	; 0x15
    632c:	8e 8b       	std	Y+22, r24	; 0x16
    632e:	9f 8b       	std	Y+23, r25	; 0x17
    6330:	28 8f       	std	Y+24, r18	; 0x18
    6332:	39 8f       	std	Y+25, r19	; 0x19
    6334:	4a 8f       	std	Y+26, r20	; 0x1a
    6336:	5b 8f       	std	Y+27, r21	; 0x1b
    6338:	0c 8f       	std	Y+28, r16	; 0x1c
    633a:	1d 8f       	std	Y+29, r17	; 0x1d
    633c:	ee 8e       	std	Y+30, r14	; 0x1e
    633e:	ff 8e       	std	Y+31, r15	; 0x1f
	bool failure = false;
    6340:	19 82       	std	Y+1, r1	; 0x01

	if(from >= until)   /* Negative time */
    6342:	2c 89       	ldd	r18, Y+20	; 0x14
    6344:	3d 89       	ldd	r19, Y+21	; 0x15
    6346:	4e 89       	ldd	r20, Y+22	; 0x16
    6348:	5f 89       	ldd	r21, Y+23	; 0x17
    634a:	88 8d       	ldd	r24, Y+24	; 0x18
    634c:	99 8d       	ldd	r25, Y+25	; 0x19
    634e:	aa 8d       	ldd	r26, Y+26	; 0x1a
    6350:	bb 8d       	ldd	r27, Y+27	; 0x1b
    6352:	28 17       	cp	r18, r24
    6354:	39 07       	cpc	r19, r25
    6356:	4a 07       	cpc	r20, r26
    6358:	5b 07       	cpc	r21, r27
    635a:	60 f0       	brcs	.+24     	; 0x6374 <_Z14reportTimeTillmmPKcS0_+0x62>
	{
		failure = true;
    635c:	81 e0       	ldi	r24, 0x01	; 1
    635e:	89 83       	std	Y+1, r24	; 0x01
		if(failMsg)
    6360:	8e 8d       	ldd	r24, Y+30	; 0x1e
    6362:	9f 8d       	ldd	r25, Y+31	; 0x1f
    6364:	89 2b       	or	r24, r25
    6366:	09 f4       	brne	.+2      	; 0x636a <_Z14reportTimeTillmmPKcS0_+0x58>
    6368:	6b c1       	rjmp	.+726    	; 0x6640 <_Z14reportTimeTillmmPKcS0_+0x32e>
		{
			sb_send_string((char*)failMsg);
    636a:	8e 8d       	ldd	r24, Y+30	; 0x1e
    636c:	9f 8d       	ldd	r25, Y+31	; 0x1f
    636e:	0e 94 4e 63 	call	0xc69c	; 0xc69c <sb_send_string>
    6372:	66 c1       	rjmp	.+716    	; 0x6640 <_Z14reportTimeTillmmPKcS0_+0x32e>
		}
	}
	else
	{
		if(prefix)
    6374:	8c 8d       	ldd	r24, Y+28	; 0x1c
    6376:	9d 8d       	ldd	r25, Y+29	; 0x1d
    6378:	89 2b       	or	r24, r25
    637a:	21 f0       	breq	.+8      	; 0x6384 <_Z14reportTimeTillmmPKcS0_+0x72>
		{
			sb_send_string((char*)prefix);
    637c:	8c 8d       	ldd	r24, Y+28	; 0x1c
    637e:	9d 8d       	ldd	r25, Y+29	; 0x1d
    6380:	0e 94 4e 63 	call	0xc69c	; 0xc69c <sb_send_string>
		}
		time_t dif = until - from;
    6384:	28 8d       	ldd	r18, Y+24	; 0x18
    6386:	39 8d       	ldd	r19, Y+25	; 0x19
    6388:	4a 8d       	ldd	r20, Y+26	; 0x1a
    638a:	5b 8d       	ldd	r21, Y+27	; 0x1b
    638c:	8c 89       	ldd	r24, Y+20	; 0x14
    638e:	9d 89       	ldd	r25, Y+21	; 0x15
    6390:	ae 89       	ldd	r26, Y+22	; 0x16
    6392:	bf 89       	ldd	r27, Y+23	; 0x17
    6394:	79 01       	movw	r14, r18
    6396:	8a 01       	movw	r16, r20
    6398:	e8 1a       	sub	r14, r24
    639a:	f9 0a       	sbc	r15, r25
    639c:	0a 0b       	sbc	r16, r26
    639e:	1b 0b       	sbc	r17, r27
    63a0:	d8 01       	movw	r26, r16
    63a2:	c7 01       	movw	r24, r14
    63a4:	8a 83       	std	Y+2, r24	; 0x02
    63a6:	9b 83       	std	Y+3, r25	; 0x03
    63a8:	ac 83       	std	Y+4, r26	; 0x04
    63aa:	bd 83       	std	Y+5, r27	; 0x05
		uint16_t years = dif / YEAR;
    63ac:	8a 81       	ldd	r24, Y+2	; 0x02
    63ae:	9b 81       	ldd	r25, Y+3	; 0x03
    63b0:	ac 81       	ldd	r26, Y+4	; 0x04
    63b2:	bd 81       	ldd	r27, Y+5	; 0x05
    63b4:	20 e8       	ldi	r18, 0x80	; 128
    63b6:	33 e3       	ldi	r19, 0x33	; 51
    63b8:	41 ee       	ldi	r20, 0xE1	; 225
    63ba:	51 e0       	ldi	r21, 0x01	; 1
    63bc:	bc 01       	movw	r22, r24
    63be:	cd 01       	movw	r24, r26
    63c0:	0e 94 62 7a 	call	0xf4c4	; 0xf4c4 <__udivmodsi4>
    63c4:	da 01       	movw	r26, r20
    63c6:	c9 01       	movw	r24, r18
    63c8:	8e 83       	std	Y+6, r24	; 0x06
    63ca:	9f 83       	std	Y+7, r25	; 0x07
		time_t hold = dif - (years * YEAR);
    63cc:	8e 81       	ldd	r24, Y+6	; 0x06
    63ce:	9f 81       	ldd	r25, Y+7	; 0x07
    63d0:	cc 01       	movw	r24, r24
    63d2:	a0 e0       	ldi	r26, 0x00	; 0
    63d4:	b0 e0       	ldi	r27, 0x00	; 0
    63d6:	9c 01       	movw	r18, r24
    63d8:	ad 01       	movw	r20, r26
    63da:	60 e8       	ldi	r22, 0x80	; 128
    63dc:	73 e3       	ldi	r23, 0x33	; 51
    63de:	81 ee       	ldi	r24, 0xE1	; 225
    63e0:	91 e0       	ldi	r25, 0x01	; 1
    63e2:	0e 94 2a 7a 	call	0xf454	; 0xf454 <__mulsi3>
    63e6:	9b 01       	movw	r18, r22
    63e8:	ac 01       	movw	r20, r24
    63ea:	8a 81       	ldd	r24, Y+2	; 0x02
    63ec:	9b 81       	ldd	r25, Y+3	; 0x03
    63ee:	ac 81       	ldd	r26, Y+4	; 0x04
    63f0:	bd 81       	ldd	r27, Y+5	; 0x05
    63f2:	82 1b       	sub	r24, r18
    63f4:	93 0b       	sbc	r25, r19
    63f6:	a4 0b       	sbc	r26, r20
    63f8:	b5 0b       	sbc	r27, r21
    63fa:	88 87       	std	Y+8, r24	; 0x08
    63fc:	99 87       	std	Y+9, r25	; 0x09
    63fe:	aa 87       	std	Y+10, r26	; 0x0a
    6400:	bb 87       	std	Y+11, r27	; 0x0b
		uint16_t days = hold / DAY;
    6402:	88 85       	ldd	r24, Y+8	; 0x08
    6404:	99 85       	ldd	r25, Y+9	; 0x09
    6406:	aa 85       	ldd	r26, Y+10	; 0x0a
    6408:	bb 85       	ldd	r27, Y+11	; 0x0b
    640a:	20 e8       	ldi	r18, 0x80	; 128
    640c:	31 e5       	ldi	r19, 0x51	; 81
    640e:	41 e0       	ldi	r20, 0x01	; 1
    6410:	50 e0       	ldi	r21, 0x00	; 0
    6412:	bc 01       	movw	r22, r24
    6414:	cd 01       	movw	r24, r26
    6416:	0e 94 62 7a 	call	0xf4c4	; 0xf4c4 <__udivmodsi4>
    641a:	da 01       	movw	r26, r20
    641c:	c9 01       	movw	r24, r18
    641e:	8c 87       	std	Y+12, r24	; 0x0c
    6420:	9d 87       	std	Y+13, r25	; 0x0d
		hold -= (days * DAY);
    6422:	8c 85       	ldd	r24, Y+12	; 0x0c
    6424:	9d 85       	ldd	r25, Y+13	; 0x0d
    6426:	cc 01       	movw	r24, r24
    6428:	a0 e0       	ldi	r26, 0x00	; 0
    642a:	b0 e0       	ldi	r27, 0x00	; 0
    642c:	9c 01       	movw	r18, r24
    642e:	ad 01       	movw	r20, r26
    6430:	60 e8       	ldi	r22, 0x80	; 128
    6432:	71 e5       	ldi	r23, 0x51	; 81
    6434:	81 e0       	ldi	r24, 0x01	; 1
    6436:	90 e0       	ldi	r25, 0x00	; 0
    6438:	0e 94 2a 7a 	call	0xf454	; 0xf454 <__mulsi3>
    643c:	9b 01       	movw	r18, r22
    643e:	ac 01       	movw	r20, r24
    6440:	88 85       	ldd	r24, Y+8	; 0x08
    6442:	99 85       	ldd	r25, Y+9	; 0x09
    6444:	aa 85       	ldd	r26, Y+10	; 0x0a
    6446:	bb 85       	ldd	r27, Y+11	; 0x0b
    6448:	82 1b       	sub	r24, r18
    644a:	93 0b       	sbc	r25, r19
    644c:	a4 0b       	sbc	r26, r20
    644e:	b5 0b       	sbc	r27, r21
    6450:	88 87       	std	Y+8, r24	; 0x08
    6452:	99 87       	std	Y+9, r25	; 0x09
    6454:	aa 87       	std	Y+10, r26	; 0x0a
    6456:	bb 87       	std	Y+11, r27	; 0x0b
		uint16_t hours = hold / HOUR;
    6458:	88 85       	ldd	r24, Y+8	; 0x08
    645a:	99 85       	ldd	r25, Y+9	; 0x09
    645c:	aa 85       	ldd	r26, Y+10	; 0x0a
    645e:	bb 85       	ldd	r27, Y+11	; 0x0b
    6460:	20 e1       	ldi	r18, 0x10	; 16
    6462:	3e e0       	ldi	r19, 0x0E	; 14
    6464:	40 e0       	ldi	r20, 0x00	; 0
    6466:	50 e0       	ldi	r21, 0x00	; 0
    6468:	bc 01       	movw	r22, r24
    646a:	cd 01       	movw	r24, r26
    646c:	0e 94 62 7a 	call	0xf4c4	; 0xf4c4 <__udivmodsi4>
    6470:	da 01       	movw	r26, r20
    6472:	c9 01       	movw	r24, r18
    6474:	8e 87       	std	Y+14, r24	; 0x0e
    6476:	9f 87       	std	Y+15, r25	; 0x0f
		hold -= (hours * HOUR);
    6478:	8e 85       	ldd	r24, Y+14	; 0x0e
    647a:	9f 85       	ldd	r25, Y+15	; 0x0f
    647c:	9c 01       	movw	r18, r24
    647e:	40 e0       	ldi	r20, 0x00	; 0
    6480:	50 e0       	ldi	r21, 0x00	; 0
    6482:	80 e1       	ldi	r24, 0x10	; 16
    6484:	9e e0       	ldi	r25, 0x0E	; 14
    6486:	dc 01       	movw	r26, r24
    6488:	0e 94 bb 7a 	call	0xf576	; 0xf576 <__muluhisi3>
    648c:	9b 01       	movw	r18, r22
    648e:	ac 01       	movw	r20, r24
    6490:	88 85       	ldd	r24, Y+8	; 0x08
    6492:	99 85       	ldd	r25, Y+9	; 0x09
    6494:	aa 85       	ldd	r26, Y+10	; 0x0a
    6496:	bb 85       	ldd	r27, Y+11	; 0x0b
    6498:	82 1b       	sub	r24, r18
    649a:	93 0b       	sbc	r25, r19
    649c:	a4 0b       	sbc	r26, r20
    649e:	b5 0b       	sbc	r27, r21
    64a0:	88 87       	std	Y+8, r24	; 0x08
    64a2:	99 87       	std	Y+9, r25	; 0x09
    64a4:	aa 87       	std	Y+10, r26	; 0x0a
    64a6:	bb 87       	std	Y+11, r27	; 0x0b
		uint16_t minutes = hold / MINUTE;
    64a8:	88 85       	ldd	r24, Y+8	; 0x08
    64aa:	99 85       	ldd	r25, Y+9	; 0x09
    64ac:	aa 85       	ldd	r26, Y+10	; 0x0a
    64ae:	bb 85       	ldd	r27, Y+11	; 0x0b
    64b0:	2c e3       	ldi	r18, 0x3C	; 60
    64b2:	30 e0       	ldi	r19, 0x00	; 0
    64b4:	40 e0       	ldi	r20, 0x00	; 0
    64b6:	50 e0       	ldi	r21, 0x00	; 0
    64b8:	bc 01       	movw	r22, r24
    64ba:	cd 01       	movw	r24, r26
    64bc:	0e 94 62 7a 	call	0xf4c4	; 0xf4c4 <__udivmodsi4>
    64c0:	da 01       	movw	r26, r20
    64c2:	c9 01       	movw	r24, r18
    64c4:	88 8b       	std	Y+16, r24	; 0x10
    64c6:	99 8b       	std	Y+17, r25	; 0x11
		uint16_t seconds = hold - (minutes * MINUTE);
    64c8:	28 85       	ldd	r18, Y+8	; 0x08
    64ca:	39 85       	ldd	r19, Y+9	; 0x09
    64cc:	48 89       	ldd	r20, Y+16	; 0x10
    64ce:	59 89       	ldd	r21, Y+17	; 0x11
    64d0:	6c e3       	ldi	r22, 0x3C	; 60
    64d2:	64 9f       	mul	r22, r20
    64d4:	c0 01       	movw	r24, r0
    64d6:	65 9f       	mul	r22, r21
    64d8:	90 0d       	add	r25, r0
    64da:	11 24       	eor	r1, r1
    64dc:	89 01       	movw	r16, r18
    64de:	08 1b       	sub	r16, r24
    64e0:	19 0b       	sbc	r17, r25
    64e2:	c8 01       	movw	r24, r16
    64e4:	8a 8b       	std	Y+18, r24	; 0x12
    64e6:	9b 8b       	std	Y+19, r25	; 0x13

		g_tempStr[0] = '\0';
    64e8:	10 92 19 47 	sts	0x4719, r1	; 0x804719 <_ZL9g_tempStr>

		if(years)
    64ec:	8e 81       	ldd	r24, Y+6	; 0x06
    64ee:	9f 81       	ldd	r25, Y+7	; 0x07
    64f0:	89 2b       	or	r24, r25
    64f2:	f1 f0       	breq	.+60     	; 0x6530 <_Z14reportTimeTillmmPKcS0_+0x21e>
		{
			sprintf(g_tempStr, "%d yrs ", years);
    64f4:	8f 81       	ldd	r24, Y+7	; 0x07
    64f6:	8f 93       	push	r24
    64f8:	8e 81       	ldd	r24, Y+6	; 0x06
    64fa:	8f 93       	push	r24
    64fc:	83 e7       	ldi	r24, 0x73	; 115
    64fe:	93 e4       	ldi	r25, 0x43	; 67
    6500:	89 2f       	mov	r24, r25
    6502:	8f 93       	push	r24
    6504:	83 e7       	ldi	r24, 0x73	; 115
    6506:	93 e4       	ldi	r25, 0x43	; 67
    6508:	8f 93       	push	r24
    650a:	89 e1       	ldi	r24, 0x19	; 25
    650c:	97 e4       	ldi	r25, 0x47	; 71
    650e:	89 2f       	mov	r24, r25
    6510:	8f 93       	push	r24
    6512:	89 e1       	ldi	r24, 0x19	; 25
    6514:	97 e4       	ldi	r25, 0x47	; 71
    6516:	8f 93       	push	r24
    6518:	0e 94 ba 7c 	call	0xf974	; 0xf974 <sprintf>
    651c:	0f 90       	pop	r0
    651e:	0f 90       	pop	r0
    6520:	0f 90       	pop	r0
    6522:	0f 90       	pop	r0
    6524:	0f 90       	pop	r0
    6526:	0f 90       	pop	r0
			sb_send_string(g_tempStr);
    6528:	89 e1       	ldi	r24, 0x19	; 25
    652a:	97 e4       	ldi	r25, 0x47	; 71
    652c:	0e 94 4e 63 	call	0xc69c	; 0xc69c <sb_send_string>
		}

		if(days)
    6530:	8c 85       	ldd	r24, Y+12	; 0x0c
    6532:	9d 85       	ldd	r25, Y+13	; 0x0d
    6534:	89 2b       	or	r24, r25
    6536:	f1 f0       	breq	.+60     	; 0x6574 <_Z14reportTimeTillmmPKcS0_+0x262>
		{
			sprintf(g_tempStr, "%d days ", days);
    6538:	8d 85       	ldd	r24, Y+13	; 0x0d
    653a:	8f 93       	push	r24
    653c:	8c 85       	ldd	r24, Y+12	; 0x0c
    653e:	8f 93       	push	r24
    6540:	8b e7       	ldi	r24, 0x7B	; 123
    6542:	93 e4       	ldi	r25, 0x43	; 67
    6544:	89 2f       	mov	r24, r25
    6546:	8f 93       	push	r24
    6548:	8b e7       	ldi	r24, 0x7B	; 123
    654a:	93 e4       	ldi	r25, 0x43	; 67
    654c:	8f 93       	push	r24
    654e:	89 e1       	ldi	r24, 0x19	; 25
    6550:	97 e4       	ldi	r25, 0x47	; 71
    6552:	89 2f       	mov	r24, r25
    6554:	8f 93       	push	r24
    6556:	89 e1       	ldi	r24, 0x19	; 25
    6558:	97 e4       	ldi	r25, 0x47	; 71
    655a:	8f 93       	push	r24
    655c:	0e 94 ba 7c 	call	0xf974	; 0xf974 <sprintf>
    6560:	0f 90       	pop	r0
    6562:	0f 90       	pop	r0
    6564:	0f 90       	pop	r0
    6566:	0f 90       	pop	r0
    6568:	0f 90       	pop	r0
    656a:	0f 90       	pop	r0
			sb_send_string(g_tempStr);
    656c:	89 e1       	ldi	r24, 0x19	; 25
    656e:	97 e4       	ldi	r25, 0x47	; 71
    6570:	0e 94 4e 63 	call	0xc69c	; 0xc69c <sb_send_string>
		}

		if(hours)
    6574:	8e 85       	ldd	r24, Y+14	; 0x0e
    6576:	9f 85       	ldd	r25, Y+15	; 0x0f
    6578:	89 2b       	or	r24, r25
    657a:	f1 f0       	breq	.+60     	; 0x65b8 <_Z14reportTimeTillmmPKcS0_+0x2a6>
		{
			sprintf(g_tempStr, "%d hrs ", hours);
    657c:	8f 85       	ldd	r24, Y+15	; 0x0f
    657e:	8f 93       	push	r24
    6580:	8e 85       	ldd	r24, Y+14	; 0x0e
    6582:	8f 93       	push	r24
    6584:	84 e8       	ldi	r24, 0x84	; 132
    6586:	93 e4       	ldi	r25, 0x43	; 67
    6588:	89 2f       	mov	r24, r25
    658a:	8f 93       	push	r24
    658c:	84 e8       	ldi	r24, 0x84	; 132
    658e:	93 e4       	ldi	r25, 0x43	; 67
    6590:	8f 93       	push	r24
    6592:	89 e1       	ldi	r24, 0x19	; 25
    6594:	97 e4       	ldi	r25, 0x47	; 71
    6596:	89 2f       	mov	r24, r25
    6598:	8f 93       	push	r24
    659a:	89 e1       	ldi	r24, 0x19	; 25
    659c:	97 e4       	ldi	r25, 0x47	; 71
    659e:	8f 93       	push	r24
    65a0:	0e 94 ba 7c 	call	0xf974	; 0xf974 <sprintf>
    65a4:	0f 90       	pop	r0
    65a6:	0f 90       	pop	r0
    65a8:	0f 90       	pop	r0
    65aa:	0f 90       	pop	r0
    65ac:	0f 90       	pop	r0
    65ae:	0f 90       	pop	r0
			sb_send_string(g_tempStr);
    65b0:	89 e1       	ldi	r24, 0x19	; 25
    65b2:	97 e4       	ldi	r25, 0x47	; 71
    65b4:	0e 94 4e 63 	call	0xc69c	; 0xc69c <sb_send_string>
		}

		if(minutes)
    65b8:	88 89       	ldd	r24, Y+16	; 0x10
    65ba:	99 89       	ldd	r25, Y+17	; 0x11
    65bc:	89 2b       	or	r24, r25
    65be:	f1 f0       	breq	.+60     	; 0x65fc <_Z14reportTimeTillmmPKcS0_+0x2ea>
		{
			sprintf(g_tempStr, "%d min ", minutes);
    65c0:	89 89       	ldd	r24, Y+17	; 0x11
    65c2:	8f 93       	push	r24
    65c4:	88 89       	ldd	r24, Y+16	; 0x10
    65c6:	8f 93       	push	r24
    65c8:	8c e8       	ldi	r24, 0x8C	; 140
    65ca:	93 e4       	ldi	r25, 0x43	; 67
    65cc:	89 2f       	mov	r24, r25
    65ce:	8f 93       	push	r24
    65d0:	8c e8       	ldi	r24, 0x8C	; 140
    65d2:	93 e4       	ldi	r25, 0x43	; 67
    65d4:	8f 93       	push	r24
    65d6:	89 e1       	ldi	r24, 0x19	; 25
    65d8:	97 e4       	ldi	r25, 0x47	; 71
    65da:	89 2f       	mov	r24, r25
    65dc:	8f 93       	push	r24
    65de:	89 e1       	ldi	r24, 0x19	; 25
    65e0:	97 e4       	ldi	r25, 0x47	; 71
    65e2:	8f 93       	push	r24
    65e4:	0e 94 ba 7c 	call	0xf974	; 0xf974 <sprintf>
    65e8:	0f 90       	pop	r0
    65ea:	0f 90       	pop	r0
    65ec:	0f 90       	pop	r0
    65ee:	0f 90       	pop	r0
    65f0:	0f 90       	pop	r0
    65f2:	0f 90       	pop	r0
			sb_send_string(g_tempStr);
    65f4:	89 e1       	ldi	r24, 0x19	; 25
    65f6:	97 e4       	ldi	r25, 0x47	; 71
    65f8:	0e 94 4e 63 	call	0xc69c	; 0xc69c <sb_send_string>
		}

		sprintf(g_tempStr, "%d sec", seconds);
    65fc:	8b 89       	ldd	r24, Y+19	; 0x13
    65fe:	8f 93       	push	r24
    6600:	8a 89       	ldd	r24, Y+18	; 0x12
    6602:	8f 93       	push	r24
    6604:	84 e9       	ldi	r24, 0x94	; 148
    6606:	93 e4       	ldi	r25, 0x43	; 67
    6608:	89 2f       	mov	r24, r25
    660a:	8f 93       	push	r24
    660c:	84 e9       	ldi	r24, 0x94	; 148
    660e:	93 e4       	ldi	r25, 0x43	; 67
    6610:	8f 93       	push	r24
    6612:	89 e1       	ldi	r24, 0x19	; 25
    6614:	97 e4       	ldi	r25, 0x47	; 71
    6616:	89 2f       	mov	r24, r25
    6618:	8f 93       	push	r24
    661a:	89 e1       	ldi	r24, 0x19	; 25
    661c:	97 e4       	ldi	r25, 0x47	; 71
    661e:	8f 93       	push	r24
    6620:	0e 94 ba 7c 	call	0xf974	; 0xf974 <sprintf>
    6624:	0f 90       	pop	r0
    6626:	0f 90       	pop	r0
    6628:	0f 90       	pop	r0
    662a:	0f 90       	pop	r0
    662c:	0f 90       	pop	r0
    662e:	0f 90       	pop	r0
		sb_send_string(g_tempStr);
    6630:	89 e1       	ldi	r24, 0x19	; 25
    6632:	97 e4       	ldi	r25, 0x47	; 71
    6634:	0e 94 4e 63 	call	0xc69c	; 0xc69c <sb_send_string>

		sb_send_NewLine();
    6638:	0e 94 24 63 	call	0xc648	; 0xc648 <sb_send_NewLine>
		g_tempStr[0] = '\0';
    663c:	10 92 19 47 	sts	0x4719, r1	; 0x804719 <_ZL9g_tempStr>
	}

	return( failure);
    6640:	89 81       	ldd	r24, Y+1	; 0x01
}
    6642:	6f 96       	adiw	r28, 0x1f	; 31
    6644:	cd bf       	out	0x3d, r28	; 61
    6646:	de bf       	out	0x3e, r29	; 62
    6648:	df 91       	pop	r29
    664a:	cf 91       	pop	r28
    664c:	1f 91       	pop	r17
    664e:	0f 91       	pop	r16
    6650:	ff 90       	pop	r15
    6652:	ef 90       	pop	r14
    6654:	08 95       	ret

00006656 <_Z23clockConfigurationCheckv>:



ConfigurationState_t clockConfigurationCheck(void)
{
    6656:	cf 93       	push	r28
    6658:	df 93       	push	r29
    665a:	00 d0       	rcall	.+0      	; 0x665c <_Z23clockConfigurationCheckv+0x6>
    665c:	00 d0       	rcall	.+0      	; 0x665e <_Z23clockConfigurationCheckv+0x8>
    665e:	cd b7       	in	r28, 0x3d	; 61
    6660:	de b7       	in	r29, 0x3e	; 62
	time_t now = time(null);
    6662:	80 e0       	ldi	r24, 0x00	; 0
    6664:	90 e0       	ldi	r25, 0x00	; 0
    6666:	0e 94 56 06 	call	0xcac	; 0xcac <time>
    666a:	dc 01       	movw	r26, r24
    666c:	cb 01       	movw	r24, r22
    666e:	89 83       	std	Y+1, r24	; 0x01
    6670:	9a 83       	std	Y+2, r25	; 0x02
    6672:	ab 83       	std	Y+3, r26	; 0x03
    6674:	bc 83       	std	Y+4, r27	; 0x04
	
	if((g_event_finish_epoch < MINIMUM_EPOCH) || (g_event_start_epoch < MINIMUM_EPOCH) || (now < MINIMUM_EPOCH))
    6676:	80 91 90 47 	lds	r24, 0x4790	; 0x804790 <g_event_finish_epoch>
    667a:	90 91 91 47 	lds	r25, 0x4791	; 0x804791 <g_event_finish_epoch+0x1>
    667e:	a0 91 92 47 	lds	r26, 0x4792	; 0x804792 <g_event_finish_epoch+0x2>
    6682:	b0 91 93 47 	lds	r27, 0x4793	; 0x804793 <g_event_finish_epoch+0x3>
    6686:	81 15       	cp	r24, r1
    6688:	96 46       	sbci	r25, 0x66	; 102
    668a:	ae 4e       	sbci	r26, 0xEE	; 238
    668c:	bf 45       	sbci	r27, 0x5F	; 95
    668e:	b0 f0       	brcs	.+44     	; 0x66bc <_Z23clockConfigurationCheckv+0x66>
    6690:	80 91 8c 47 	lds	r24, 0x478C	; 0x80478c <g_event_start_epoch>
    6694:	90 91 8d 47 	lds	r25, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    6698:	a0 91 8e 47 	lds	r26, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    669c:	b0 91 8f 47 	lds	r27, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    66a0:	81 15       	cp	r24, r1
    66a2:	96 46       	sbci	r25, 0x66	; 102
    66a4:	ae 4e       	sbci	r26, 0xEE	; 238
    66a6:	bf 45       	sbci	r27, 0x5F	; 95
    66a8:	48 f0       	brcs	.+18     	; 0x66bc <_Z23clockConfigurationCheckv+0x66>
    66aa:	89 81       	ldd	r24, Y+1	; 0x01
    66ac:	9a 81       	ldd	r25, Y+2	; 0x02
    66ae:	ab 81       	ldd	r26, Y+3	; 0x03
    66b0:	bc 81       	ldd	r27, Y+4	; 0x04
    66b2:	81 15       	cp	r24, r1
    66b4:	96 46       	sbci	r25, 0x66	; 102
    66b6:	ae 4e       	sbci	r26, 0xEE	; 238
    66b8:	bf 45       	sbci	r27, 0x5F	; 95
    66ba:	10 f4       	brcc	.+4      	; 0x66c0 <_Z23clockConfigurationCheckv+0x6a>
    66bc:	81 e0       	ldi	r24, 0x01	; 1
    66be:	01 c0       	rjmp	.+2      	; 0x66c2 <_Z23clockConfigurationCheckv+0x6c>
    66c0:	80 e0       	ldi	r24, 0x00	; 0
    66c2:	88 23       	and	r24, r24
    66c4:	11 f0       	breq	.+4      	; 0x66ca <_Z23clockConfigurationCheckv+0x74>
	{
		return(CONFIGURATION_ERROR);
    66c6:	82 e0       	ldi	r24, 0x02	; 2
    66c8:	5a c0       	rjmp	.+180    	; 0x677e <_Z23clockConfigurationCheckv+0x128>
	}

	if(g_event_finish_epoch <= g_event_start_epoch) /* Event configured to finish before it started */
    66ca:	20 91 90 47 	lds	r18, 0x4790	; 0x804790 <g_event_finish_epoch>
    66ce:	30 91 91 47 	lds	r19, 0x4791	; 0x804791 <g_event_finish_epoch+0x1>
    66d2:	40 91 92 47 	lds	r20, 0x4792	; 0x804792 <g_event_finish_epoch+0x2>
    66d6:	50 91 93 47 	lds	r21, 0x4793	; 0x804793 <g_event_finish_epoch+0x3>
    66da:	80 91 8c 47 	lds	r24, 0x478C	; 0x80478c <g_event_start_epoch>
    66de:	90 91 8d 47 	lds	r25, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    66e2:	a0 91 8e 47 	lds	r26, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    66e6:	b0 91 8f 47 	lds	r27, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    66ea:	61 e0       	ldi	r22, 0x01	; 1
    66ec:	82 17       	cp	r24, r18
    66ee:	93 07       	cpc	r25, r19
    66f0:	a4 07       	cpc	r26, r20
    66f2:	b5 07       	cpc	r27, r21
    66f4:	08 f4       	brcc	.+2      	; 0x66f8 <_Z23clockConfigurationCheckv+0xa2>
    66f6:	60 e0       	ldi	r22, 0x00	; 0
    66f8:	66 23       	and	r22, r22
    66fa:	11 f0       	breq	.+4      	; 0x6700 <_Z23clockConfigurationCheckv+0xaa>
	{
		return(CONFIGURATION_ERROR);
    66fc:	82 e0       	ldi	r24, 0x02	; 2
    66fe:	3f c0       	rjmp	.+126    	; 0x677e <_Z23clockConfigurationCheckv+0x128>
	}

	if(now > g_event_finish_epoch)  /* The scheduled event is over */
    6700:	80 91 90 47 	lds	r24, 0x4790	; 0x804790 <g_event_finish_epoch>
    6704:	90 91 91 47 	lds	r25, 0x4791	; 0x804791 <g_event_finish_epoch+0x1>
    6708:	a0 91 92 47 	lds	r26, 0x4792	; 0x804792 <g_event_finish_epoch+0x2>
    670c:	b0 91 93 47 	lds	r27, 0x4793	; 0x804793 <g_event_finish_epoch+0x3>
    6710:	61 e0       	ldi	r22, 0x01	; 1
    6712:	29 81       	ldd	r18, Y+1	; 0x01
    6714:	3a 81       	ldd	r19, Y+2	; 0x02
    6716:	4b 81       	ldd	r20, Y+3	; 0x03
    6718:	5c 81       	ldd	r21, Y+4	; 0x04
    671a:	82 17       	cp	r24, r18
    671c:	93 07       	cpc	r25, r19
    671e:	a4 07       	cpc	r26, r20
    6720:	b5 07       	cpc	r27, r21
    6722:	08 f0       	brcs	.+2      	; 0x6726 <_Z23clockConfigurationCheckv+0xd0>
    6724:	60 e0       	ldi	r22, 0x00	; 0
    6726:	66 23       	and	r22, r22
    6728:	11 f0       	breq	.+4      	; 0x672e <_Z23clockConfigurationCheckv+0xd8>
	{
		return(CONFIGURATION_ERROR);
    672a:	82 e0       	ldi	r24, 0x02	; 2
    672c:	28 c0       	rjmp	.+80     	; 0x677e <_Z23clockConfigurationCheckv+0x128>
	}

	if(now > g_event_start_epoch)       /* Event should be running */
    672e:	80 91 8c 47 	lds	r24, 0x478C	; 0x80478c <g_event_start_epoch>
    6732:	90 91 8d 47 	lds	r25, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    6736:	a0 91 8e 47 	lds	r26, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    673a:	b0 91 8f 47 	lds	r27, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    673e:	61 e0       	ldi	r22, 0x01	; 1
    6740:	29 81       	ldd	r18, Y+1	; 0x01
    6742:	3a 81       	ldd	r19, Y+2	; 0x02
    6744:	4b 81       	ldd	r20, Y+3	; 0x03
    6746:	5c 81       	ldd	r21, Y+4	; 0x04
    6748:	82 17       	cp	r24, r18
    674a:	93 07       	cpc	r25, r19
    674c:	a4 07       	cpc	r26, r20
    674e:	b5 07       	cpc	r27, r21
    6750:	08 f0       	brcs	.+2      	; 0x6754 <_Z23clockConfigurationCheckv+0xfe>
    6752:	60 e0       	ldi	r22, 0x00	; 0
    6754:	66 23       	and	r22, r22
    6756:	51 f0       	breq	.+20     	; 0x676c <_Z23clockConfigurationCheckv+0x116>
	{
		if(!g_event_enabled)
    6758:	90 91 94 47 	lds	r25, 0x4794	; 0x804794 <g_event_enabled>
    675c:	81 e0       	ldi	r24, 0x01	; 1
    675e:	89 27       	eor	r24, r25
    6760:	88 23       	and	r24, r24
    6762:	11 f0       	breq	.+4      	; 0x6768 <_Z23clockConfigurationCheckv+0x112>
		{
			return(SCHEDULED_EVENT_DID_NOT_START);  /* Event scheduled to be running isn't */
    6764:	83 e0       	ldi	r24, 0x03	; 3
    6766:	0b c0       	rjmp	.+22     	; 0x677e <_Z23clockConfigurationCheckv+0x128>
		}
		else
		{
			return(EVENT_IN_PROGRESS);              /* Event is running, so clock settings don't matter */
    6768:	85 e0       	ldi	r24, 0x05	; 5
    676a:	09 c0       	rjmp	.+18     	; 0x677e <_Z23clockConfigurationCheckv+0x128>
		}
	}
	else if(!g_use_rtc_for_startstop)
    676c:	90 91 b5 47 	lds	r25, 0x47B5	; 0x8047b5 <g_use_rtc_for_startstop>
    6770:	81 e0       	ldi	r24, 0x01	; 1
    6772:	89 27       	eor	r24, r25
    6774:	88 23       	and	r24, r24
    6776:	11 f0       	breq	.+4      	; 0x677c <_Z23clockConfigurationCheckv+0x126>
	{
		return(SCHEDULED_EVENT_WILL_NEVER_RUN);
    6778:	84 e0       	ldi	r24, 0x04	; 4
    677a:	01 c0       	rjmp	.+2      	; 0x677e <_Z23clockConfigurationCheckv+0x128>
	}

	return(WAITING_FOR_START);  /* Future event hasn't started yet */
    677c:	81 e0       	ldi	r24, 0x01	; 1
}
    677e:	24 96       	adiw	r28, 0x04	; 4
    6780:	cd bf       	out	0x3d, r28	; 61
    6782:	de bf       	out	0x3e, r29	; 62
    6784:	df 91       	pop	r29
    6786:	cf 91       	pop	r28
    6788:	08 95       	ret

0000678a <_Z18reportConfigErrorsv>:

void reportConfigErrors(void)
{
    678a:	cf 93       	push	r28
    678c:	df 93       	push	r29
    678e:	00 d0       	rcall	.+0      	; 0x6790 <_Z18reportConfigErrorsv+0x6>
    6790:	00 d0       	rcall	.+0      	; 0x6792 <_Z18reportConfigErrorsv+0x8>
    6792:	cd b7       	in	r28, 0x3d	; 61
    6794:	de b7       	in	r29, 0x3e	; 62
	set_system_time(ds3231_get_epoch(null));
    6796:	80 e0       	ldi	r24, 0x00	; 0
    6798:	90 e0       	ldi	r25, 0x00	; 0
    679a:	0e 94 53 40 	call	0x80a6	; 0x80a6 <ds3231_get_epoch>
    679e:	dc 01       	movw	r26, r24
    67a0:	cb 01       	movw	r24, r22
    67a2:	bc 01       	movw	r22, r24
    67a4:	cd 01       	movw	r24, r26
    67a6:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <set_system_time>
	time_t now = time(null);
    67aa:	80 e0       	ldi	r24, 0x00	; 0
    67ac:	90 e0       	ldi	r25, 0x00	; 0
    67ae:	0e 94 56 06 	call	0xcac	; 0xcac <time>
    67b2:	dc 01       	movw	r26, r24
    67b4:	cb 01       	movw	r24, r22
    67b6:	89 83       	std	Y+1, r24	; 0x01
    67b8:	9a 83       	std	Y+2, r25	; 0x02
    67ba:	ab 83       	std	Y+3, r26	; 0x03
    67bc:	bc 83       	std	Y+4, r27	; 0x04

	if(g_messages_text[STATION_ID][0] == '\0')
    67be:	80 91 73 47 	lds	r24, 0x4773	; 0x804773 <g_messages_text+0x15>
    67c2:	88 23       	and	r24, r24
    67c4:	21 f4       	brne	.+8      	; 0x67ce <_Z18reportConfigErrorsv+0x44>
	{
		sb_send_string(TEXT_SET_ID_TXT);
    67c6:	8b e9       	ldi	r24, 0x9B	; 155
    67c8:	93 e4       	ldi	r25, 0x43	; 67
    67ca:	0e 94 4e 63 	call	0xc69c	; 0xc69c <sb_send_string>
	}

	if(now < MINIMUM_EPOCH) /* Current time is invalid */
    67ce:	89 81       	ldd	r24, Y+1	; 0x01
    67d0:	9a 81       	ldd	r25, Y+2	; 0x02
    67d2:	ab 81       	ldd	r26, Y+3	; 0x03
    67d4:	bc 81       	ldd	r27, Y+4	; 0x04
    67d6:	81 15       	cp	r24, r1
    67d8:	96 46       	sbci	r25, 0x66	; 102
    67da:	ae 4e       	sbci	r26, 0xEE	; 238
    67dc:	bf 45       	sbci	r27, 0x5F	; 95
    67de:	20 f4       	brcc	.+8      	; 0x67e8 <_Z18reportConfigErrorsv+0x5e>
	{
		sb_send_string(TEXT_SET_TIME_TXT);
    67e0:	8c eb       	ldi	r24, 0xBC	; 188
    67e2:	93 e4       	ldi	r25, 0x43	; 67
    67e4:	0e 94 4e 63 	call	0xc69c	; 0xc69c <sb_send_string>
	}

	if(g_event_finish_epoch < now)      /* Event has already finished */
    67e8:	20 91 90 47 	lds	r18, 0x4790	; 0x804790 <g_event_finish_epoch>
    67ec:	30 91 91 47 	lds	r19, 0x4791	; 0x804791 <g_event_finish_epoch+0x1>
    67f0:	40 91 92 47 	lds	r20, 0x4792	; 0x804792 <g_event_finish_epoch+0x2>
    67f4:	50 91 93 47 	lds	r21, 0x4793	; 0x804793 <g_event_finish_epoch+0x3>
    67f8:	61 e0       	ldi	r22, 0x01	; 1
    67fa:	89 81       	ldd	r24, Y+1	; 0x01
    67fc:	9a 81       	ldd	r25, Y+2	; 0x02
    67fe:	ab 81       	ldd	r26, Y+3	; 0x03
    6800:	bc 81       	ldd	r27, Y+4	; 0x04
    6802:	28 17       	cp	r18, r24
    6804:	39 07       	cpc	r19, r25
    6806:	4a 07       	cpc	r20, r26
    6808:	5b 07       	cpc	r21, r27
    680a:	08 f0       	brcs	.+2      	; 0x680e <_Z18reportConfigErrorsv+0x84>
    680c:	60 e0       	ldi	r22, 0x00	; 0
    680e:	66 23       	and	r22, r22
    6810:	f1 f0       	breq	.+60     	; 0x684e <_Z18reportConfigErrorsv+0xc4>
	{
		if(g_event_start_epoch < now)   /* Event has already started */
    6812:	20 91 8c 47 	lds	r18, 0x478C	; 0x80478c <g_event_start_epoch>
    6816:	30 91 8d 47 	lds	r19, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    681a:	40 91 8e 47 	lds	r20, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    681e:	50 91 8f 47 	lds	r21, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    6822:	61 e0       	ldi	r22, 0x01	; 1
    6824:	89 81       	ldd	r24, Y+1	; 0x01
    6826:	9a 81       	ldd	r25, Y+2	; 0x02
    6828:	ab 81       	ldd	r26, Y+3	; 0x03
    682a:	bc 81       	ldd	r27, Y+4	; 0x04
    682c:	28 17       	cp	r18, r24
    682e:	39 07       	cpc	r19, r25
    6830:	4a 07       	cpc	r20, r26
    6832:	5b 07       	cpc	r21, r27
    6834:	08 f0       	brcs	.+2      	; 0x6838 <_Z18reportConfigErrorsv+0xae>
    6836:	60 e0       	ldi	r22, 0x00	; 0
    6838:	66 23       	and	r22, r22
    683a:	21 f0       	breq	.+8      	; 0x6844 <_Z18reportConfigErrorsv+0xba>
		{
			sb_send_string(TEXT_SET_START_TXT);
    683c:	84 ee       	ldi	r24, 0xE4	; 228
    683e:	93 e4       	ldi	r25, 0x43	; 67
    6840:	0e 94 4e 63 	call	0xc69c	; 0xc69c <sb_send_string>
		}

		sb_send_string(TEXT_SET_FINISH_TXT);
    6844:	8a e0       	ldi	r24, 0x0A	; 10
    6846:	94 e4       	ldi	r25, 0x44	; 68
    6848:	0e 94 4e 63 	call	0xc69c	; 0xc69c <sb_send_string>
		else
		{
			sb_send_string((char*)"Event running...\n");
		}
	}
}
    684c:	2f c0       	rjmp	.+94     	; 0x68ac <_Z18reportConfigErrorsv+0x122>
			sb_send_string(TEXT_SET_START_TXT);
		}

		sb_send_string(TEXT_SET_FINISH_TXT);
	}
	else if(g_event_start_epoch < now)  /* Event has already started */
    684e:	20 91 8c 47 	lds	r18, 0x478C	; 0x80478c <g_event_start_epoch>
    6852:	30 91 8d 47 	lds	r19, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    6856:	40 91 8e 47 	lds	r20, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    685a:	50 91 8f 47 	lds	r21, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    685e:	61 e0       	ldi	r22, 0x01	; 1
    6860:	89 81       	ldd	r24, Y+1	; 0x01
    6862:	9a 81       	ldd	r25, Y+2	; 0x02
    6864:	ab 81       	ldd	r26, Y+3	; 0x03
    6866:	bc 81       	ldd	r27, Y+4	; 0x04
    6868:	28 17       	cp	r18, r24
    686a:	39 07       	cpc	r19, r25
    686c:	4a 07       	cpc	r20, r26
    686e:	5b 07       	cpc	r21, r27
    6870:	08 f0       	brcs	.+2      	; 0x6874 <_Z18reportConfigErrorsv+0xea>
    6872:	60 e0       	ldi	r22, 0x00	; 0
    6874:	66 23       	and	r22, r22
    6876:	d1 f0       	breq	.+52     	; 0x68ac <_Z18reportConfigErrorsv+0x122>
	{
		if(g_event_start_epoch < MINIMUM_EPOCH)     /* Start in invalid */
    6878:	80 91 8c 47 	lds	r24, 0x478C	; 0x80478c <g_event_start_epoch>
    687c:	90 91 8d 47 	lds	r25, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    6880:	a0 91 8e 47 	lds	r26, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    6884:	b0 91 8f 47 	lds	r27, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    6888:	21 e0       	ldi	r18, 0x01	; 1
    688a:	81 15       	cp	r24, r1
    688c:	96 46       	sbci	r25, 0x66	; 102
    688e:	ae 4e       	sbci	r26, 0xEE	; 238
    6890:	bf 45       	sbci	r27, 0x5F	; 95
    6892:	08 f0       	brcs	.+2      	; 0x6896 <_Z18reportConfigErrorsv+0x10c>
    6894:	20 e0       	ldi	r18, 0x00	; 0
    6896:	22 23       	and	r18, r18
    6898:	29 f0       	breq	.+10     	; 0x68a4 <_Z18reportConfigErrorsv+0x11a>
		{
			sb_send_string(TEXT_SET_START_TXT);
    689a:	84 ee       	ldi	r24, 0xE4	; 228
    689c:	93 e4       	ldi	r25, 0x43	; 67
    689e:	0e 94 4e 63 	call	0xc69c	; 0xc69c <sb_send_string>
		else
		{
			sb_send_string((char*)"Event running...\n");
		}
	}
}
    68a2:	04 c0       	rjmp	.+8      	; 0x68ac <_Z18reportConfigErrorsv+0x122>
		{
			sb_send_string(TEXT_SET_START_TXT);
		}
		else
		{
			sb_send_string((char*)"Event running...\n");
    68a4:	81 e3       	ldi	r24, 0x31	; 49
    68a6:	94 e4       	ldi	r25, 0x44	; 68
    68a8:	0e 94 4e 63 	call	0xc69c	; 0xc69c <sb_send_string>
		}
	}
}
    68ac:	00 00       	nop
    68ae:	24 96       	adiw	r28, 0x04	; 4
    68b0:	cd bf       	out	0x3d, r28	; 61
    68b2:	de bf       	out	0x3e, r29	; 62
    68b4:	df 91       	pop	r29
    68b6:	cf 91       	pop	r28
    68b8:	08 95       	ret

000068ba <_Z41__static_initialization_and_destruction_0ii>:
    68ba:	cf 93       	push	r28
    68bc:	df 93       	push	r29
    68be:	00 d0       	rcall	.+0      	; 0x68c0 <_Z41__static_initialization_and_destruction_0ii+0x6>
    68c0:	00 d0       	rcall	.+0      	; 0x68c2 <_Z41__static_initialization_and_destruction_0ii+0x8>
    68c2:	cd b7       	in	r28, 0x3d	; 61
    68c4:	de b7       	in	r29, 0x3e	; 62
    68c6:	89 83       	std	Y+1, r24	; 0x01
    68c8:	9a 83       	std	Y+2, r25	; 0x02
    68ca:	6b 83       	std	Y+3, r22	; 0x03
    68cc:	7c 83       	std	Y+4, r23	; 0x04
    68ce:	89 81       	ldd	r24, Y+1	; 0x01
    68d0:	9a 81       	ldd	r25, Y+2	; 0x02
    68d2:	01 97       	sbiw	r24, 0x01	; 1
    68d4:	61 f4       	brne	.+24     	; 0x68ee <_Z41__static_initialization_and_destruction_0ii+0x34>
    68d6:	8b 81       	ldd	r24, Y+3	; 0x03
    68d8:	9c 81       	ldd	r25, Y+4	; 0x04
    68da:	01 96       	adiw	r24, 0x01	; 1
    68dc:	41 f4       	brne	.+16     	; 0x68ee <_Z41__static_initialization_and_destruction_0ii+0x34>

extern Goertzel g_goertzel;
volatile uint16_t g_switch_closed_count = 0;
volatile bool g_long_button_press = false;

leds LEDS = leds();
    68de:	8a ea       	ldi	r24, 0xAA	; 170
    68e0:	97 e4       	ldi	r25, 0x47	; 71
    68e2:	0e 94 c5 52 	call	0xa58a	; 0xa58a <_ZN4ledsC1Ev>

EepromManager g_ee_mgr;
    68e6:	8b ea       	ldi	r24, 0xAB	; 171
    68e8:	97 e4       	ldi	r25, 0x47	; 71
    68ea:	0e 94 9c 45 	call	0x8b38	; 0x8b38 <_ZN13EepromManagerC1Ev>
    68ee:	89 81       	ldd	r24, Y+1	; 0x01
    68f0:	9a 81       	ldd	r25, Y+2	; 0x02
    68f2:	89 2b       	or	r24, r25
    68f4:	61 f4       	brne	.+24     	; 0x690e <_Z41__static_initialization_and_destruction_0ii+0x54>
    68f6:	8b 81       	ldd	r24, Y+3	; 0x03
    68f8:	9c 81       	ldd	r25, Y+4	; 0x04
    68fa:	01 96       	adiw	r24, 0x01	; 1
    68fc:	41 f4       	brne	.+16     	; 0x690e <_Z41__static_initialization_and_destruction_0ii+0x54>
    68fe:	8b ea       	ldi	r24, 0xAB	; 171
    6900:	97 e4       	ldi	r25, 0x47	; 71
    6902:	0e 94 a9 45 	call	0x8b52	; 0x8b52 <_ZN13EepromManagerD1Ev>

extern Goertzel g_goertzel;
volatile uint16_t g_switch_closed_count = 0;
volatile bool g_long_button_press = false;

leds LEDS = leds();
    6906:	8a ea       	ldi	r24, 0xAA	; 170
    6908:	97 e4       	ldi	r25, 0x47	; 71
    690a:	0e 94 d2 52 	call	0xa5a4	; 0xa5a4 <_ZN4ledsD1Ev>
		else
		{
			sb_send_string((char*)"Event running...\n");
		}
	}
}
    690e:	00 00       	nop
    6910:	24 96       	adiw	r28, 0x04	; 4
    6912:	cd bf       	out	0x3d, r28	; 61
    6914:	de bf       	out	0x3e, r29	; 62
    6916:	df 91       	pop	r29
    6918:	cf 91       	pop	r28
    691a:	08 95       	ret

0000691c <_GLOBAL__sub_I_g_antenna_connect_state>:
    691c:	cf 93       	push	r28
    691e:	df 93       	push	r29
    6920:	cd b7       	in	r28, 0x3d	; 61
    6922:	de b7       	in	r29, 0x3e	; 62
    6924:	6f ef       	ldi	r22, 0xFF	; 255
    6926:	7f ef       	ldi	r23, 0xFF	; 255
    6928:	81 e0       	ldi	r24, 0x01	; 1
    692a:	90 e0       	ldi	r25, 0x00	; 0
    692c:	0e 94 5d 34 	call	0x68ba	; 0x68ba <_Z41__static_initialization_and_destruction_0ii>
    6930:	df 91       	pop	r29
    6932:	cf 91       	pop	r28
    6934:	08 95       	ret

00006936 <_GLOBAL__sub_D_g_antenna_connect_state>:
    6936:	cf 93       	push	r28
    6938:	df 93       	push	r29
    693a:	cd b7       	in	r28, 0x3d	; 61
    693c:	de b7       	in	r29, 0x3e	; 62
    693e:	6f ef       	ldi	r22, 0xFF	; 255
    6940:	7f ef       	ldi	r23, 0xFF	; 255
    6942:	80 e0       	ldi	r24, 0x00	; 0
    6944:	90 e0       	ldi	r25, 0x00	; 0
    6946:	0e 94 5d 34 	call	0x68ba	; 0x68ba <_Z41__static_initialization_and_destruction_0ii>
    694a:	df 91       	pop	r29
    694c:	cf 91       	pop	r28
    694e:	08 95       	ret

00006950 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t>:
	} ADC_Init_t;
	
static ADC_Init_t g_adc_initialization = ADC_NOT_INITIALIZED;

void ADC0_setADCChannel(ADC_Active_Channel_t chan)
{
    6950:	cf 93       	push	r28
    6952:	df 93       	push	r29
    6954:	1f 92       	push	r1
    6956:	cd b7       	in	r28, 0x3d	; 61
    6958:	de b7       	in	r29, 0x3e	; 62
    695a:	89 83       	std	Y+1, r24	; 0x01
	switch(chan)
    695c:	89 81       	ldd	r24, Y+1	; 0x01
    695e:	88 2f       	mov	r24, r24
    6960:	90 e0       	ldi	r25, 0x00	; 0
    6962:	82 30       	cpi	r24, 0x02	; 2
    6964:	91 05       	cpc	r25, r1
    6966:	41 f1       	breq	.+80     	; 0x69b8 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x68>
    6968:	83 30       	cpi	r24, 0x03	; 3
    696a:	91 05       	cpc	r25, r1
    696c:	2c f4       	brge	.+10     	; 0x6978 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x28>
    696e:	00 97       	sbiw	r24, 0x00	; 0
    6970:	49 f0       	breq	.+18     	; 0x6984 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x34>
    6972:	01 97       	sbiw	r24, 0x01	; 1
    6974:	a1 f0       	breq	.+40     	; 0x699e <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x4e>
    6976:	47 c0       	rjmp	.+142    	; 0x6a06 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0xb6>
    6978:	83 30       	cpi	r24, 0x03	; 3
    697a:	91 05       	cpc	r25, r1
    697c:	51 f1       	breq	.+84     	; 0x69d2 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x82>
    697e:	04 97       	sbiw	r24, 0x04	; 4
    6980:	a9 f1       	breq	.+106    	; 0x69ec <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x9c>
    6982:	41 c0       	rjmp	.+130    	; 0x6a06 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0xb6>
	{
		case ADCAudioInput:
		{
			if(g_adc_initialization != ADC_FREE_RUN_INITIALIZED)
    6984:	80 91 c9 47 	lds	r24, 0x47C9	; 0x8047c9 <_ZL20g_adc_initialization>
    6988:	81 30       	cpi	r24, 0x01	; 1
    698a:	19 f0       	breq	.+6      	; 0x6992 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x42>
			{
				ADC0_SYSTEM_init(FREE_RUNNING); 
    698c:	81 e0       	ldi	r24, 0x01	; 1
    698e:	0e 94 bf 36 	call	0x6d7e	; 0x6d7e <_ZL16ADC0_SYSTEM_initb>
			}
			
			ADC0.MUXPOS = ADC_MUXPOS_AIN2_gc;
    6992:	80 e0       	ldi	r24, 0x00	; 0
    6994:	96 e0       	ldi	r25, 0x06	; 6
    6996:	22 e0       	ldi	r18, 0x02	; 2
    6998:	fc 01       	movw	r30, r24
    699a:	20 87       	std	Z+8, r18	; 0x08
		}
		break;
    699c:	37 c0       	rjmp	.+110    	; 0x6a0c <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0xbc>
		
		case ADCExternalBatteryVoltage:
		{
			if(g_adc_initialization != ADC_SINGLE_CONVERSION_INITIALIZED)
    699e:	80 91 c9 47 	lds	r24, 0x47C9	; 0x8047c9 <_ZL20g_adc_initialization>
    69a2:	82 30       	cpi	r24, 0x02	; 2
    69a4:	19 f0       	breq	.+6      	; 0x69ac <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x5c>
			{
				ADC0_SYSTEM_init(SINGLE_CONVERSION);
    69a6:	80 e0       	ldi	r24, 0x00	; 0
    69a8:	0e 94 bf 36 	call	0x6d7e	; 0x6d7e <_ZL16ADC0_SYSTEM_initb>
			}
			
			ADC0.MUXPOS = ADC_MUXPOS_AIN3_gc;
    69ac:	80 e0       	ldi	r24, 0x00	; 0
    69ae:	96 e0       	ldi	r25, 0x06	; 6
    69b0:	23 e0       	ldi	r18, 0x03	; 3
    69b2:	fc 01       	movw	r30, r24
    69b4:	20 87       	std	Z+8, r18	; 0x08
		}
		break;
    69b6:	2a c0       	rjmp	.+84     	; 0x6a0c <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0xbc>
		
		case ADC12VRegulatedVoltage:
		{
			if(g_adc_initialization != ADC_SINGLE_CONVERSION_INITIALIZED)
    69b8:	80 91 c9 47 	lds	r24, 0x47C9	; 0x8047c9 <_ZL20g_adc_initialization>
    69bc:	82 30       	cpi	r24, 0x02	; 2
    69be:	19 f0       	breq	.+6      	; 0x69c6 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x76>
			{
				ADC0_SYSTEM_init(SINGLE_CONVERSION);
    69c0:	80 e0       	ldi	r24, 0x00	; 0
    69c2:	0e 94 bf 36 	call	0x6d7e	; 0x6d7e <_ZL16ADC0_SYSTEM_initb>
			}
			
			ADC0.MUXPOS = ADC_MUXPOS_AIN4_gc;
    69c6:	80 e0       	ldi	r24, 0x00	; 0
    69c8:	96 e0       	ldi	r25, 0x06	; 6
    69ca:	24 e0       	ldi	r18, 0x04	; 4
    69cc:	fc 01       	movw	r30, r24
    69ce:	20 87       	std	Z+8, r18	; 0x08
		}
		break;
    69d0:	1d c0       	rjmp	.+58     	; 0x6a0c <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0xbc>
		
		case ADCTXAdjustableVoltage:
		{
			if(g_adc_initialization != ADC_SINGLE_CONVERSION_INITIALIZED)
    69d2:	80 91 c9 47 	lds	r24, 0x47C9	; 0x8047c9 <_ZL20g_adc_initialization>
    69d6:	82 30       	cpi	r24, 0x02	; 2
    69d8:	19 f0       	breq	.+6      	; 0x69e0 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x90>
			{
				ADC0_SYSTEM_init(SINGLE_CONVERSION);
    69da:	80 e0       	ldi	r24, 0x00	; 0
    69dc:	0e 94 bf 36 	call	0x6d7e	; 0x6d7e <_ZL16ADC0_SYSTEM_initb>
			}
			
			ADC0.MUXPOS = ADC_MUXPOS_AIN5_gc;
    69e0:	80 e0       	ldi	r24, 0x00	; 0
    69e2:	96 e0       	ldi	r25, 0x06	; 6
    69e4:	25 e0       	ldi	r18, 0x05	; 5
    69e6:	fc 01       	movw	r30, r24
    69e8:	20 87       	std	Z+8, r18	; 0x08
		}
		break;
    69ea:	10 c0       	rjmp	.+32     	; 0x6a0c <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0xbc>
		
		case ADCTemperature:
		{
			if(g_adc_initialization != ADC_SINGLE_CONVERSION_INITIALIZED)
    69ec:	80 91 c9 47 	lds	r24, 0x47C9	; 0x8047c9 <_ZL20g_adc_initialization>
    69f0:	82 30       	cpi	r24, 0x02	; 2
    69f2:	19 f0       	breq	.+6      	; 0x69fa <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0xaa>
			{
				ADC0_SYSTEM_init(SINGLE_CONVERSION);
    69f4:	80 e0       	ldi	r24, 0x00	; 0
    69f6:	0e 94 bf 36 	call	0x6d7e	; 0x6d7e <_ZL16ADC0_SYSTEM_initb>
			}
			
			ADC0.MUXPOS = ADC_MUXPOS_TEMPSENSE_gc;
    69fa:	80 e0       	ldi	r24, 0x00	; 0
    69fc:	96 e0       	ldi	r25, 0x06	; 6
    69fe:	22 e4       	ldi	r18, 0x42	; 66
    6a00:	fc 01       	movw	r30, r24
    6a02:	20 87       	std	Z+8, r18	; 0x08
		}
		break;
    6a04:	03 c0       	rjmp	.+6      	; 0x6a0c <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0xbc>
		
		default:
		{
			ADC0_SYSTEM_shutdown();
    6a06:	0e 94 d1 36 	call	0x6da2	; 0x6da2 <_ZL20ADC0_SYSTEM_shutdownv>
		}
		break;	
    6a0a:	00 00       	nop
	}
}
    6a0c:	00 00       	nop
    6a0e:	0f 90       	pop	r0
    6a10:	df 91       	pop	r29
    6a12:	cf 91       	pop	r28
    6a14:	08 95       	ret

00006a16 <_Z20ADC0_startConversionv>:

void ADC0_startConversion(void)
{
    6a16:	cf 93       	push	r28
    6a18:	df 93       	push	r29
    6a1a:	cd b7       	in	r28, 0x3d	; 61
    6a1c:	de b7       	in	r29, 0x3e	; 62
	if(g_adc_initialization != ADC_NOT_INITIALIZED)
    6a1e:	80 91 c9 47 	lds	r24, 0x47C9	; 0x8047c9 <_ZL20g_adc_initialization>
    6a22:	88 23       	and	r24, r24
    6a24:	49 f0       	breq	.+18     	; 0x6a38 <_Z20ADC0_startConversionv+0x22>
	{
		ADC0.INTCTRL = 0x00; /* Disable interrupt */
    6a26:	80 e0       	ldi	r24, 0x00	; 0
    6a28:	96 e0       	ldi	r25, 0x06	; 6
    6a2a:	fc 01       	movw	r30, r24
    6a2c:	14 86       	std	Z+12, r1	; 0x0c
		ADC0.COMMAND = ADC_STCONV_bm; /* Start conversion */
    6a2e:	80 e0       	ldi	r24, 0x00	; 0
    6a30:	96 e0       	ldi	r25, 0x06	; 6
    6a32:	21 e0       	ldi	r18, 0x01	; 1
    6a34:	fc 01       	movw	r30, r24
    6a36:	22 87       	std	Z+10, r18	; 0x0a
	}
}
    6a38:	00 00       	nop
    6a3a:	df 91       	pop	r29
    6a3c:	cf 91       	pop	r28
    6a3e:	08 95       	ret

00006a40 <_Z19ADC0_conversionDonev>:

bool ADC0_conversionDone(void)
{
    6a40:	cf 93       	push	r28
    6a42:	df 93       	push	r29
    6a44:	cd b7       	in	r28, 0x3d	; 61
    6a46:	de b7       	in	r29, 0x3e	; 62
	/* Check if the conversion is done  */
	return (ADC0.INTFLAGS & ADC_RESRDY_bm);
    6a48:	80 e0       	ldi	r24, 0x00	; 0
    6a4a:	96 e0       	ldi	r25, 0x06	; 6
    6a4c:	fc 01       	movw	r30, r24
    6a4e:	85 85       	ldd	r24, Z+13	; 0x0d
    6a50:	88 2f       	mov	r24, r24
    6a52:	90 e0       	ldi	r25, 0x00	; 0
    6a54:	81 70       	andi	r24, 0x01	; 1
    6a56:	99 27       	eor	r25, r25
    6a58:	21 e0       	ldi	r18, 0x01	; 1
    6a5a:	89 2b       	or	r24, r25
    6a5c:	09 f4       	brne	.+2      	; 0x6a60 <_Z19ADC0_conversionDonev+0x20>
    6a5e:	20 e0       	ldi	r18, 0x00	; 0
    6a60:	82 2f       	mov	r24, r18
}
    6a62:	df 91       	pop	r29
    6a64:	cf 91       	pop	r28
    6a66:	08 95       	ret

00006a68 <_Z9ADC0_readv>:

int ADC0_read(void)
{
    6a68:	cf 93       	push	r28
    6a6a:	df 93       	push	r29
    6a6c:	cd b7       	in	r28, 0x3d	; 61
    6a6e:	de b7       	in	r29, 0x3e	; 62
	return ADC0.RES; 	/* Reading the result also clears the interrupt flag */
    6a70:	80 e0       	ldi	r24, 0x00	; 0
    6a72:	96 e0       	ldi	r25, 0x06	; 6
    6a74:	fc 01       	movw	r30, r24
    6a76:	80 89       	ldd	r24, Z+16	; 0x10
    6a78:	91 89       	ldd	r25, Z+17	; 0x11
}
    6a7a:	df 91       	pop	r29
    6a7c:	cf 91       	pop	r28
    6a7e:	08 95       	ret

00006a80 <_Z12temperatureCv>:

float temperatureC(void)
{
    6a80:	cf 93       	push	r28
    6a82:	df 93       	push	r29
    6a84:	cd b7       	in	r28, 0x3d	; 61
    6a86:	de b7       	in	r29, 0x3e	; 62
    6a88:	2f 97       	sbiw	r28, 0x0f	; 15
    6a8a:	cd bf       	out	0x3d, r28	; 61
    6a8c:	de bf       	out	0x3e, r29	; 62
	uint16_t sigrow_offset = SIGROW.TEMPSENSE1; // Read unsigned value from signature row
    6a8e:	80 e0       	ldi	r24, 0x00	; 0
    6a90:	91 e1       	ldi	r25, 0x11	; 17
    6a92:	fc 01       	movw	r30, r24
    6a94:	86 81       	ldd	r24, Z+6	; 0x06
    6a96:	97 81       	ldd	r25, Z+7	; 0x07
    6a98:	8d 83       	std	Y+5, r24	; 0x05
    6a9a:	9e 83       	std	Y+6, r25	; 0x06
	uint16_t sigrow_slope = SIGROW.TEMPSENSE0; // Read unsigned value from signature row
    6a9c:	80 e0       	ldi	r24, 0x00	; 0
    6a9e:	91 e1       	ldi	r25, 0x11	; 17
    6aa0:	fc 01       	movw	r30, r24
    6aa2:	84 81       	ldd	r24, Z+4	; 0x04
    6aa4:	95 81       	ldd	r25, Z+5	; 0x05
    6aa6:	8f 83       	std	Y+7, r24	; 0x07
    6aa8:	98 87       	std	Y+8, r25	; 0x08
	static uint32_t wait = 10000;
	uint16_t adc_reading;
	float temperature_in_C = -273.15;
    6aaa:	83 e3       	ldi	r24, 0x33	; 51
    6aac:	93 e9       	ldi	r25, 0x93	; 147
    6aae:	a8 e8       	ldi	r26, 0x88	; 136
    6ab0:	b3 ec       	ldi	r27, 0xC3	; 195
    6ab2:	89 83       	std	Y+1, r24	; 0x01
    6ab4:	9a 83       	std	Y+2, r25	; 0x02
    6ab6:	ab 83       	std	Y+3, r26	; 0x03
    6ab8:	bc 83       	std	Y+4, r27	; 0x04
	uint8_t holdMux;
	
	holdMux = ADC0.MUXPOS;
    6aba:	80 e0       	ldi	r24, 0x00	; 0
    6abc:	96 e0       	ldi	r25, 0x06	; 6
    6abe:	fc 01       	movw	r30, r24
    6ac0:	80 85       	ldd	r24, Z+8	; 0x08
    6ac2:	89 87       	std	Y+9, r24	; 0x09
	ADC0_SYSTEM_init(SINGLE_CONVERSION);
    6ac4:	80 e0       	ldi	r24, 0x00	; 0
    6ac6:	0e 94 bf 36 	call	0x6d7e	; 0x6d7e <_ZL16ADC0_SYSTEM_initb>
	ADC0.MUXPOS = ADC_MUXPOS_TEMPSENSE_gc;
    6aca:	80 e0       	ldi	r24, 0x00	; 0
    6acc:	96 e0       	ldi	r25, 0x06	; 6
    6ace:	22 e4       	ldi	r18, 0x42	; 66
    6ad0:	fc 01       	movw	r30, r24
    6ad2:	20 87       	std	Z+8, r18	; 0x08
	ADC0_startConversion();
    6ad4:	0e 94 0b 35 	call	0x6a16	; 0x6a16 <_Z20ADC0_startConversionv>
	
	while((!ADC0_conversionDone()) && wait--);
    6ad8:	0e 94 20 35 	call	0x6a40	; 0x6a40 <_Z19ADC0_conversionDonev>
    6adc:	98 2f       	mov	r25, r24
    6ade:	81 e0       	ldi	r24, 0x01	; 1
    6ae0:	89 27       	eor	r24, r25
    6ae2:	88 23       	and	r24, r24
    6ae4:	e1 f0       	breq	.+56     	; 0x6b1e <_Z12temperatureCv+0x9e>
    6ae6:	80 91 24 40 	lds	r24, 0x4024	; 0x804024 <_ZZ12temperatureCvE4wait>
    6aea:	90 91 25 40 	lds	r25, 0x4025	; 0x804025 <_ZZ12temperatureCvE4wait+0x1>
    6aee:	a0 91 26 40 	lds	r26, 0x4026	; 0x804026 <_ZZ12temperatureCvE4wait+0x2>
    6af2:	b0 91 27 40 	lds	r27, 0x4027	; 0x804027 <_ZZ12temperatureCvE4wait+0x3>
    6af6:	9c 01       	movw	r18, r24
    6af8:	ad 01       	movw	r20, r26
    6afa:	21 50       	subi	r18, 0x01	; 1
    6afc:	31 09       	sbc	r19, r1
    6afe:	41 09       	sbc	r20, r1
    6b00:	51 09       	sbc	r21, r1
    6b02:	20 93 24 40 	sts	0x4024, r18	; 0x804024 <_ZZ12temperatureCvE4wait>
    6b06:	30 93 25 40 	sts	0x4025, r19	; 0x804025 <_ZZ12temperatureCvE4wait+0x1>
    6b0a:	40 93 26 40 	sts	0x4026, r20	; 0x804026 <_ZZ12temperatureCvE4wait+0x2>
    6b0e:	50 93 27 40 	sts	0x4027, r21	; 0x804027 <_ZZ12temperatureCvE4wait+0x3>
    6b12:	89 2b       	or	r24, r25
    6b14:	8a 2b       	or	r24, r26
    6b16:	8b 2b       	or	r24, r27
    6b18:	11 f0       	breq	.+4      	; 0x6b1e <_Z12temperatureCv+0x9e>
    6b1a:	81 e0       	ldi	r24, 0x01	; 1
    6b1c:	01 c0       	rjmp	.+2      	; 0x6b20 <_Z12temperatureCv+0xa0>
    6b1e:	80 e0       	ldi	r24, 0x00	; 0
    6b20:	88 23       	and	r24, r24
    6b22:	09 f0       	breq	.+2      	; 0x6b26 <_Z12temperatureCv+0xa6>
    6b24:	d9 cf       	rjmp	.-78     	; 0x6ad8 <_Z12temperatureCv+0x58>
	
	if(wait)
    6b26:	80 91 24 40 	lds	r24, 0x4024	; 0x804024 <_ZZ12temperatureCvE4wait>
    6b2a:	90 91 25 40 	lds	r25, 0x4025	; 0x804025 <_ZZ12temperatureCvE4wait+0x1>
    6b2e:	a0 91 26 40 	lds	r26, 0x4026	; 0x804026 <_ZZ12temperatureCvE4wait+0x2>
    6b32:	b0 91 27 40 	lds	r27, 0x4027	; 0x804027 <_ZZ12temperatureCvE4wait+0x3>
    6b36:	89 2b       	or	r24, r25
    6b38:	8a 2b       	or	r24, r26
    6b3a:	8b 2b       	or	r24, r27
    6b3c:	09 f4       	brne	.+2      	; 0x6b40 <_Z12temperatureCv+0xc0>
    6b3e:	5b c0       	rjmp	.+182    	; 0x6bf6 <_Z12temperatureCv+0x176>
	{
		adc_reading = ADC0.RES;
    6b40:	80 e0       	ldi	r24, 0x00	; 0
    6b42:	96 e0       	ldi	r25, 0x06	; 6
    6b44:	fc 01       	movw	r30, r24
    6b46:	80 89       	ldd	r24, Z+16	; 0x10
    6b48:	91 89       	ldd	r25, Z+17	; 0x11
    6b4a:	8a 87       	std	Y+10, r24	; 0x0a
    6b4c:	9b 87       	std	Y+11, r25	; 0x0b
		uint32_t temp = sigrow_offset - adc_reading;
    6b4e:	2d 81       	ldd	r18, Y+5	; 0x05
    6b50:	3e 81       	ldd	r19, Y+6	; 0x06
    6b52:	8a 85       	ldd	r24, Y+10	; 0x0a
    6b54:	9b 85       	ldd	r25, Y+11	; 0x0b
    6b56:	a9 01       	movw	r20, r18
    6b58:	48 1b       	sub	r20, r24
    6b5a:	59 0b       	sbc	r21, r25
    6b5c:	ca 01       	movw	r24, r20
    6b5e:	cc 01       	movw	r24, r24
    6b60:	a0 e0       	ldi	r26, 0x00	; 0
    6b62:	b0 e0       	ldi	r27, 0x00	; 0
    6b64:	8c 87       	std	Y+12, r24	; 0x0c
    6b66:	9d 87       	std	Y+13, r25	; 0x0d
    6b68:	ae 87       	std	Y+14, r26	; 0x0e
    6b6a:	bf 87       	std	Y+15, r27	; 0x0f
		temp *= sigrow_slope; // Result will overflow 16-bit variable
    6b6c:	8f 81       	ldd	r24, Y+7	; 0x07
    6b6e:	98 85       	ldd	r25, Y+8	; 0x08
    6b70:	cc 01       	movw	r24, r24
    6b72:	a0 e0       	ldi	r26, 0x00	; 0
    6b74:	b0 e0       	ldi	r27, 0x00	; 0
    6b76:	2c 85       	ldd	r18, Y+12	; 0x0c
    6b78:	3d 85       	ldd	r19, Y+13	; 0x0d
    6b7a:	4e 85       	ldd	r20, Y+14	; 0x0e
    6b7c:	5f 85       	ldd	r21, Y+15	; 0x0f
    6b7e:	bc 01       	movw	r22, r24
    6b80:	cd 01       	movw	r24, r26
    6b82:	0e 94 2a 7a 	call	0xf454	; 0xf454 <__mulsi3>
    6b86:	dc 01       	movw	r26, r24
    6b88:	cb 01       	movw	r24, r22
    6b8a:	8c 87       	std	Y+12, r24	; 0x0c
    6b8c:	9d 87       	std	Y+13, r25	; 0x0d
    6b8e:	ae 87       	std	Y+14, r26	; 0x0e
    6b90:	bf 87       	std	Y+15, r27	; 0x0f
		temp += 0x0800; // Add 4096/2 to get correct rounding on division below
    6b92:	8c 85       	ldd	r24, Y+12	; 0x0c
    6b94:	9d 85       	ldd	r25, Y+13	; 0x0d
    6b96:	ae 85       	ldd	r26, Y+14	; 0x0e
    6b98:	bf 85       	ldd	r27, Y+15	; 0x0f
    6b9a:	98 5f       	subi	r25, 0xF8	; 248
    6b9c:	af 4f       	sbci	r26, 0xFF	; 255
    6b9e:	bf 4f       	sbci	r27, 0xFF	; 255
    6ba0:	8c 87       	std	Y+12, r24	; 0x0c
    6ba2:	9d 87       	std	Y+13, r25	; 0x0d
    6ba4:	ae 87       	std	Y+14, r26	; 0x0e
    6ba6:	bf 87       	std	Y+15, r27	; 0x0f
		temp >>= 12; // Round off to nearest degree in Kelvin, by dividing with 2^12 (4096)
    6ba8:	8c 85       	ldd	r24, Y+12	; 0x0c
    6baa:	9d 85       	ldd	r25, Y+13	; 0x0d
    6bac:	ae 85       	ldd	r26, Y+14	; 0x0e
    6bae:	bf 85       	ldd	r27, Y+15	; 0x0f
    6bb0:	07 2e       	mov	r0, r23
    6bb2:	7c e0       	ldi	r23, 0x0C	; 12
    6bb4:	b6 95       	lsr	r27
    6bb6:	a7 95       	ror	r26
    6bb8:	97 95       	ror	r25
    6bba:	87 95       	ror	r24
    6bbc:	7a 95       	dec	r23
    6bbe:	d1 f7       	brne	.-12     	; 0x6bb4 <_Z12temperatureCv+0x134>
    6bc0:	70 2d       	mov	r23, r0
    6bc2:	8c 87       	std	Y+12, r24	; 0x0c
    6bc4:	9d 87       	std	Y+13, r25	; 0x0d
    6bc6:	ae 87       	std	Y+14, r26	; 0x0e
    6bc8:	bf 87       	std	Y+15, r27	; 0x0f
		temperature_in_C += (float)temp;
    6bca:	6c 85       	ldd	r22, Y+12	; 0x0c
    6bcc:	7d 85       	ldd	r23, Y+13	; 0x0d
    6bce:	8e 85       	ldd	r24, Y+14	; 0x0e
    6bd0:	9f 85       	ldd	r25, Y+15	; 0x0f
    6bd2:	0e 94 c5 78 	call	0xf18a	; 0xf18a <__floatunsisf>
    6bd6:	dc 01       	movw	r26, r24
    6bd8:	cb 01       	movw	r24, r22
    6bda:	9c 01       	movw	r18, r24
    6bdc:	ad 01       	movw	r20, r26
    6bde:	69 81       	ldd	r22, Y+1	; 0x01
    6be0:	7a 81       	ldd	r23, Y+2	; 0x02
    6be2:	8b 81       	ldd	r24, Y+3	; 0x03
    6be4:	9c 81       	ldd	r25, Y+4	; 0x04
    6be6:	0e 94 95 77 	call	0xef2a	; 0xef2a <__addsf3>
    6bea:	dc 01       	movw	r26, r24
    6bec:	cb 01       	movw	r24, r22
    6bee:	89 83       	std	Y+1, r24	; 0x01
    6bf0:	9a 83       	std	Y+2, r25	; 0x02
    6bf2:	ab 83       	std	Y+3, r26	; 0x03
    6bf4:	bc 83       	std	Y+4, r27	; 0x04
	}
	
	ADC0.MUXPOS = holdMux; /* Restore ADC registers */
    6bf6:	80 e0       	ldi	r24, 0x00	; 0
    6bf8:	96 e0       	ldi	r25, 0x06	; 6
    6bfa:	29 85       	ldd	r18, Y+9	; 0x09
    6bfc:	fc 01       	movw	r30, r24
    6bfe:	20 87       	std	Z+8, r18	; 0x08
	
	return(temperature_in_C);
    6c00:	89 81       	ldd	r24, Y+1	; 0x01
    6c02:	9a 81       	ldd	r25, Y+2	; 0x02
    6c04:	ab 81       	ldd	r26, Y+3	; 0x03
    6c06:	bc 81       	ldd	r27, Y+4	; 0x04
}
    6c08:	bc 01       	movw	r22, r24
    6c0a:	cd 01       	movw	r24, r26
    6c0c:	2f 96       	adiw	r28, 0x0f	; 15
    6c0e:	cd bf       	out	0x3d, r28	; 61
    6c10:	de bf       	out	0x3e, r29	; 62
    6c12:	df 91       	pop	r29
    6c14:	cf 91       	pop	r28
    6c16:	08 95       	ret

00006c18 <_ZL9PORT_initv>:


static void PORT_init(void)
{
    6c18:	cf 93       	push	r28
    6c1a:	df 93       	push	r29
    6c1c:	cd b7       	in	r28, 0x3d	; 61
    6c1e:	de b7       	in	r29, 0x3e	; 62
	/* Disable interrupt and digital input buffer on PD2 */
	PORTD.PIN2CTRL &= ~PORT_ISC_gm;
    6c20:	80 e6       	ldi	r24, 0x60	; 96
    6c22:	94 e0       	ldi	r25, 0x04	; 4
    6c24:	20 e6       	ldi	r18, 0x60	; 96
    6c26:	34 e0       	ldi	r19, 0x04	; 4
    6c28:	f9 01       	movw	r30, r18
    6c2a:	22 89       	ldd	r18, Z+18	; 0x12
    6c2c:	28 7f       	andi	r18, 0xF8	; 248
    6c2e:	fc 01       	movw	r30, r24
    6c30:	22 8b       	std	Z+18, r18	; 0x12
	PORTD.PIN2CTRL |= PORT_ISC_INPUT_DISABLE_gc;
    6c32:	80 e6       	ldi	r24, 0x60	; 96
    6c34:	94 e0       	ldi	r25, 0x04	; 4
    6c36:	20 e6       	ldi	r18, 0x60	; 96
    6c38:	34 e0       	ldi	r19, 0x04	; 4
    6c3a:	f9 01       	movw	r30, r18
    6c3c:	22 89       	ldd	r18, Z+18	; 0x12
    6c3e:	24 60       	ori	r18, 0x04	; 4
    6c40:	fc 01       	movw	r30, r24
    6c42:	22 8b       	std	Z+18, r18	; 0x12
	/* Disable interrupt and digital input buffer on PD3 */
	PORTD.PIN3CTRL &= ~PORT_ISC_gm;
    6c44:	80 e6       	ldi	r24, 0x60	; 96
    6c46:	94 e0       	ldi	r25, 0x04	; 4
    6c48:	20 e6       	ldi	r18, 0x60	; 96
    6c4a:	34 e0       	ldi	r19, 0x04	; 4
    6c4c:	f9 01       	movw	r30, r18
    6c4e:	23 89       	ldd	r18, Z+19	; 0x13
    6c50:	28 7f       	andi	r18, 0xF8	; 248
    6c52:	fc 01       	movw	r30, r24
    6c54:	23 8b       	std	Z+19, r18	; 0x13
	PORTD.PIN3CTRL |= PORT_ISC_INPUT_DISABLE_gc;
    6c56:	80 e6       	ldi	r24, 0x60	; 96
    6c58:	94 e0       	ldi	r25, 0x04	; 4
    6c5a:	20 e6       	ldi	r18, 0x60	; 96
    6c5c:	34 e0       	ldi	r19, 0x04	; 4
    6c5e:	f9 01       	movw	r30, r18
    6c60:	23 89       	ldd	r18, Z+19	; 0x13
    6c62:	24 60       	ori	r18, 0x04	; 4
    6c64:	fc 01       	movw	r30, r24
    6c66:	23 8b       	std	Z+19, r18	; 0x13
	/* Disable interrupt and digital input buffer on PD4 */
	PORTD.PIN4CTRL &= ~PORT_ISC_gm;
    6c68:	80 e6       	ldi	r24, 0x60	; 96
    6c6a:	94 e0       	ldi	r25, 0x04	; 4
    6c6c:	20 e6       	ldi	r18, 0x60	; 96
    6c6e:	34 e0       	ldi	r19, 0x04	; 4
    6c70:	f9 01       	movw	r30, r18
    6c72:	24 89       	ldd	r18, Z+20	; 0x14
    6c74:	28 7f       	andi	r18, 0xF8	; 248
    6c76:	fc 01       	movw	r30, r24
    6c78:	24 8b       	std	Z+20, r18	; 0x14
	PORTD.PIN4CTRL |= PORT_ISC_INPUT_DISABLE_gc;
    6c7a:	80 e6       	ldi	r24, 0x60	; 96
    6c7c:	94 e0       	ldi	r25, 0x04	; 4
    6c7e:	20 e6       	ldi	r18, 0x60	; 96
    6c80:	34 e0       	ldi	r19, 0x04	; 4
    6c82:	f9 01       	movw	r30, r18
    6c84:	24 89       	ldd	r18, Z+20	; 0x14
    6c86:	24 60       	ori	r18, 0x04	; 4
    6c88:	fc 01       	movw	r30, r24
    6c8a:	24 8b       	std	Z+20, r18	; 0x14
	/* Disable interrupt and digital input buffer on PD5 */
	PORTD.PIN5CTRL &= ~PORT_ISC_gm;
    6c8c:	80 e6       	ldi	r24, 0x60	; 96
    6c8e:	94 e0       	ldi	r25, 0x04	; 4
    6c90:	20 e6       	ldi	r18, 0x60	; 96
    6c92:	34 e0       	ldi	r19, 0x04	; 4
    6c94:	f9 01       	movw	r30, r18
    6c96:	25 89       	ldd	r18, Z+21	; 0x15
    6c98:	28 7f       	andi	r18, 0xF8	; 248
    6c9a:	fc 01       	movw	r30, r24
    6c9c:	25 8b       	std	Z+21, r18	; 0x15
	PORTD.PIN5CTRL |= PORT_ISC_INPUT_DISABLE_gc;
    6c9e:	80 e6       	ldi	r24, 0x60	; 96
    6ca0:	94 e0       	ldi	r25, 0x04	; 4
    6ca2:	20 e6       	ldi	r18, 0x60	; 96
    6ca4:	34 e0       	ldi	r19, 0x04	; 4
    6ca6:	f9 01       	movw	r30, r18
    6ca8:	25 89       	ldd	r18, Z+21	; 0x15
    6caa:	24 60       	ori	r18, 0x04	; 4
    6cac:	fc 01       	movw	r30, r24
    6cae:	25 8b       	std	Z+21, r18	; 0x15
	
	/* Disable pull-up resistor */
	PORTD.PIN2CTRL &= ~PORT_PULLUPEN_bm;
    6cb0:	80 e6       	ldi	r24, 0x60	; 96
    6cb2:	94 e0       	ldi	r25, 0x04	; 4
    6cb4:	20 e6       	ldi	r18, 0x60	; 96
    6cb6:	34 e0       	ldi	r19, 0x04	; 4
    6cb8:	f9 01       	movw	r30, r18
    6cba:	22 89       	ldd	r18, Z+18	; 0x12
    6cbc:	27 7f       	andi	r18, 0xF7	; 247
    6cbe:	fc 01       	movw	r30, r24
    6cc0:	22 8b       	std	Z+18, r18	; 0x12
	PORTD.PIN3CTRL &= ~PORT_PULLUPEN_bm;
    6cc2:	80 e6       	ldi	r24, 0x60	; 96
    6cc4:	94 e0       	ldi	r25, 0x04	; 4
    6cc6:	20 e6       	ldi	r18, 0x60	; 96
    6cc8:	34 e0       	ldi	r19, 0x04	; 4
    6cca:	f9 01       	movw	r30, r18
    6ccc:	23 89       	ldd	r18, Z+19	; 0x13
    6cce:	27 7f       	andi	r18, 0xF7	; 247
    6cd0:	fc 01       	movw	r30, r24
    6cd2:	23 8b       	std	Z+19, r18	; 0x13
	PORTD.PIN4CTRL &= ~PORT_PULLUPEN_bm;
    6cd4:	80 e6       	ldi	r24, 0x60	; 96
    6cd6:	94 e0       	ldi	r25, 0x04	; 4
    6cd8:	20 e6       	ldi	r18, 0x60	; 96
    6cda:	34 e0       	ldi	r19, 0x04	; 4
    6cdc:	f9 01       	movw	r30, r18
    6cde:	24 89       	ldd	r18, Z+20	; 0x14
    6ce0:	27 7f       	andi	r18, 0xF7	; 247
    6ce2:	fc 01       	movw	r30, r24
    6ce4:	24 8b       	std	Z+20, r18	; 0x14
	PORTD.PIN5CTRL &= ~PORT_PULLUPEN_bm;
    6ce6:	80 e6       	ldi	r24, 0x60	; 96
    6ce8:	94 e0       	ldi	r25, 0x04	; 4
    6cea:	20 e6       	ldi	r18, 0x60	; 96
    6cec:	34 e0       	ldi	r19, 0x04	; 4
    6cee:	f9 01       	movw	r30, r18
    6cf0:	25 89       	ldd	r18, Z+21	; 0x15
    6cf2:	27 7f       	andi	r18, 0xF7	; 247
    6cf4:	fc 01       	movw	r30, r24
    6cf6:	25 8b       	std	Z+21, r18	; 0x15
}
    6cf8:	00 00       	nop
    6cfa:	df 91       	pop	r29
    6cfc:	cf 91       	pop	r28
    6cfe:	08 95       	ret

00006d00 <_ZL10VREF0_initv>:

static void VREF0_init(void)
{
    6d00:	cf 93       	push	r28
    6d02:	df 93       	push	r29
    6d04:	cd b7       	in	r28, 0x3d	; 61
    6d06:	de b7       	in	r29, 0x3e	; 62
	VREF.ADC0REF = VREF_REFSEL_2V048_gc;  /* Internal 2.048V reference */
    6d08:	80 ea       	ldi	r24, 0xA0	; 160
    6d0a:	90 e0       	ldi	r25, 0x00	; 0
    6d0c:	21 e0       	ldi	r18, 0x01	; 1
    6d0e:	fc 01       	movw	r30, r24
    6d10:	20 83       	st	Z, r18
}
    6d12:	00 00       	nop
    6d14:	df 91       	pop	r29
    6d16:	cf 91       	pop	r28
    6d18:	08 95       	ret

00006d1a <_ZL9ADC0_initb>:

static void ADC0_init(bool freerun)
{
    6d1a:	cf 93       	push	r28
    6d1c:	df 93       	push	r29
    6d1e:	1f 92       	push	r1
    6d20:	cd b7       	in	r28, 0x3d	; 61
    6d22:	de b7       	in	r29, 0x3e	; 62
    6d24:	89 83       	std	Y+1, r24	; 0x01
	ADC0.CTRLC = ADC_PRESC_DIV64_gc;   /* CLK_PER divided by 4 => 24096 sps */
    6d26:	80 e0       	ldi	r24, 0x00	; 0
    6d28:	96 e0       	ldi	r25, 0x06	; 6
    6d2a:	2a e0       	ldi	r18, 0x0A	; 10
    6d2c:	fc 01       	movw	r30, r24
    6d2e:	22 83       	std	Z+2, r18	; 0x02
	
	if(freerun)
    6d30:	89 81       	ldd	r24, Y+1	; 0x01
    6d32:	88 23       	and	r24, r24
    6d34:	99 f0       	breq	.+38     	; 0x6d5c <_ZL9ADC0_initb+0x42>
	{
		ADC0.CTRLA = ADC_ENABLE_bm /* ADC Enable: enabled */
    6d36:	80 e0       	ldi	r24, 0x00	; 0
    6d38:	96 e0       	ldi	r25, 0x06	; 6
		| ADC_RESSEL_12BIT_gc      /* 12-bit mode */
		| ADC_FREERUN_bm;          /* Enable Free-Run mode */
    6d3a:	23 e0       	ldi	r18, 0x03	; 3
    6d3c:	fc 01       	movw	r30, r24
    6d3e:	20 83       	st	Z, r18
		
		ADC0.INTCTRL = 0x01; /* Enable interrupt */
    6d40:	80 e0       	ldi	r24, 0x00	; 0
    6d42:	96 e0       	ldi	r25, 0x06	; 6
    6d44:	21 e0       	ldi	r18, 0x01	; 1
    6d46:	fc 01       	movw	r30, r24
    6d48:	24 87       	std	Z+12, r18	; 0x0c
		
		ADC0.COMMAND = ADC_STCONV_bm; /* Start conversion */
    6d4a:	80 e0       	ldi	r24, 0x00	; 0
    6d4c:	96 e0       	ldi	r25, 0x06	; 6
    6d4e:	21 e0       	ldi	r18, 0x01	; 1
    6d50:	fc 01       	movw	r30, r24
    6d52:	22 87       	std	Z+10, r18	; 0x0a
		g_adc_initialization = ADC_FREE_RUN_INITIALIZED;
    6d54:	81 e0       	ldi	r24, 0x01	; 1
    6d56:	80 93 c9 47 	sts	0x47C9, r24	; 0x8047c9 <_ZL20g_adc_initialization>
	{
		ADC0.CTRLA = ADC_ENABLE_bm;  /* ADC Enable: enabled; 12-bit mode is default */
		ADC0.INTCTRL = 0x00; /* Disable interrupt */
		g_adc_initialization = ADC_SINGLE_CONVERSION_INITIALIZED;
	}
}
    6d5a:	0c c0       	rjmp	.+24     	; 0x6d74 <_ZL9ADC0_initb+0x5a>
		ADC0.COMMAND = ADC_STCONV_bm; /* Start conversion */
		g_adc_initialization = ADC_FREE_RUN_INITIALIZED;
	}
	else
	{
		ADC0.CTRLA = ADC_ENABLE_bm;  /* ADC Enable: enabled; 12-bit mode is default */
    6d5c:	80 e0       	ldi	r24, 0x00	; 0
    6d5e:	96 e0       	ldi	r25, 0x06	; 6
    6d60:	21 e0       	ldi	r18, 0x01	; 1
    6d62:	fc 01       	movw	r30, r24
    6d64:	20 83       	st	Z, r18
		ADC0.INTCTRL = 0x00; /* Disable interrupt */
    6d66:	80 e0       	ldi	r24, 0x00	; 0
    6d68:	96 e0       	ldi	r25, 0x06	; 6
    6d6a:	fc 01       	movw	r30, r24
    6d6c:	14 86       	std	Z+12, r1	; 0x0c
		g_adc_initialization = ADC_SINGLE_CONVERSION_INITIALIZED;
    6d6e:	82 e0       	ldi	r24, 0x02	; 2
    6d70:	80 93 c9 47 	sts	0x47C9, r24	; 0x8047c9 <_ZL20g_adc_initialization>
	}
}
    6d74:	00 00       	nop
    6d76:	0f 90       	pop	r0
    6d78:	df 91       	pop	r29
    6d7a:	cf 91       	pop	r28
    6d7c:	08 95       	ret

00006d7e <_ZL16ADC0_SYSTEM_initb>:

static void ADC0_SYSTEM_init(bool freerun)
{
    6d7e:	cf 93       	push	r28
    6d80:	df 93       	push	r29
    6d82:	1f 92       	push	r1
    6d84:	cd b7       	in	r28, 0x3d	; 61
    6d86:	de b7       	in	r29, 0x3e	; 62
    6d88:	89 83       	std	Y+1, r24	; 0x01
	PORT_init();
    6d8a:	0e 94 0c 36 	call	0x6c18	; 0x6c18 <_ZL9PORT_initv>
	VREF0_init();
    6d8e:	0e 94 80 36 	call	0x6d00	; 0x6d00 <_ZL10VREF0_initv>
	ADC0_init(freerun);
    6d92:	89 81       	ldd	r24, Y+1	; 0x01
    6d94:	0e 94 8d 36 	call	0x6d1a	; 0x6d1a <_ZL9ADC0_initb>
}
    6d98:	00 00       	nop
    6d9a:	0f 90       	pop	r0
    6d9c:	df 91       	pop	r29
    6d9e:	cf 91       	pop	r28
    6da0:	08 95       	ret

00006da2 <_ZL20ADC0_SYSTEM_shutdownv>:

static void ADC0_SYSTEM_shutdown(void)
{
    6da2:	cf 93       	push	r28
    6da4:	df 93       	push	r29
    6da6:	cd b7       	in	r28, 0x3d	; 61
    6da8:	de b7       	in	r29, 0x3e	; 62
	ADC0.INTCTRL = 0x00; /* Disable interrupt */
    6daa:	80 e0       	ldi	r24, 0x00	; 0
    6dac:	96 e0       	ldi	r25, 0x06	; 6
    6dae:	fc 01       	movw	r30, r24
    6db0:	14 86       	std	Z+12, r1	; 0x0c
	ADC0.CTRLA = ADC_RESSEL_12BIT_gc; /* Turn off ADC leaving 12-bit resolution set */
    6db2:	80 e0       	ldi	r24, 0x00	; 0
    6db4:	96 e0       	ldi	r25, 0x06	; 6
    6db6:	fc 01       	movw	r30, r24
    6db8:	10 82       	st	Z, r1
	g_adc_initialization = ADC_NOT_INITIALIZED;
    6dba:	10 92 c9 47 	sts	0x47C9, r1	; 0x8047c9 <_ZL20g_adc_initialization>
}
    6dbe:	00 00       	nop
    6dc0:	df 91       	pop	r29
    6dc2:	cf 91       	pop	r28
    6dc4:	08 95       	ret

00006dc6 <__vector_24>:

ISR(ADC0_RESRDY_vect)
{
    6dc6:	1f 92       	push	r1
    6dc8:	0f 92       	push	r0
    6dca:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    6dce:	0f 92       	push	r0
    6dd0:	11 24       	eor	r1, r1
    6dd2:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    6dd6:	0f 92       	push	r0
    6dd8:	2f 93       	push	r18
    6dda:	3f 93       	push	r19
    6ddc:	4f 93       	push	r20
    6dde:	5f 93       	push	r21
    6de0:	6f 93       	push	r22
    6de2:	7f 93       	push	r23
    6de4:	8f 93       	push	r24
    6de6:	9f 93       	push	r25
    6de8:	af 93       	push	r26
    6dea:	bf 93       	push	r27
    6dec:	ef 93       	push	r30
    6dee:	ff 93       	push	r31
    6df0:	cf 93       	push	r28
    6df2:	df 93       	push	r29
    6df4:	00 d0       	rcall	.+0      	; 0x6df6 <__vector_24+0x30>
    6df6:	cd b7       	in	r28, 0x3d	; 61
    6df8:	de b7       	in	r29, 0x3e	; 62
	/* Clear the interrupt flag by reading the result */
	int val = ADC0_read();
    6dfa:	0e 94 34 35 	call	0x6a68	; 0x6a68 <_Z9ADC0_readv>
    6dfe:	89 83       	std	Y+1, r24	; 0x01
    6e00:	9a 83       	std	Y+2, r25	; 0x02
//	LED_toggle_level();
	if(g_goertzel.DataPoint(val))
    6e02:	89 81       	ldd	r24, Y+1	; 0x01
    6e04:	9a 81       	ldd	r25, Y+2	; 0x02
    6e06:	bc 01       	movw	r22, r24
    6e08:	88 ec       	ldi	r24, 0xC8	; 200
    6e0a:	97 e4       	ldi	r25, 0x47	; 71
    6e0c:	0e 94 a8 4d 	call	0x9b50	; 0x9b50 <_ZN8Goertzel9DataPointEi>
    6e10:	88 23       	and	r24, r24
    6e12:	21 f0       	breq	.+8      	; 0x6e1c <__vector_24+0x56>
	{
		ADC0.INTCTRL = 0x00; /* disable ADC interrupt */
    6e14:	80 e0       	ldi	r24, 0x00	; 0
    6e16:	96 e0       	ldi	r25, 0x06	; 6
    6e18:	fc 01       	movw	r30, r24
    6e1a:	14 86       	std	Z+12, r1	; 0x0c
	}
    6e1c:	00 00       	nop
    6e1e:	0f 90       	pop	r0
    6e20:	0f 90       	pop	r0
    6e22:	df 91       	pop	r29
    6e24:	cf 91       	pop	r28
    6e26:	ff 91       	pop	r31
    6e28:	ef 91       	pop	r30
    6e2a:	bf 91       	pop	r27
    6e2c:	af 91       	pop	r26
    6e2e:	9f 91       	pop	r25
    6e30:	8f 91       	pop	r24
    6e32:	7f 91       	pop	r23
    6e34:	6f 91       	pop	r22
    6e36:	5f 91       	pop	r21
    6e38:	4f 91       	pop	r20
    6e3a:	3f 91       	pop	r19
    6e3c:	2f 91       	pop	r18
    6e3e:	0f 90       	pop	r0
    6e40:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    6e44:	0f 90       	pop	r0
    6e46:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    6e4a:	0f 90       	pop	r0
    6e4c:	1f 90       	pop	r1
    6e4e:	18 95       	reti

00006e50 <_Z41__static_initialization_and_destruction_0ii>:
    6e50:	0f 93       	push	r16
    6e52:	1f 93       	push	r17
    6e54:	cf 93       	push	r28
    6e56:	df 93       	push	r29
    6e58:	00 d0       	rcall	.+0      	; 0x6e5a <_Z41__static_initialization_and_destruction_0ii+0xa>
    6e5a:	00 d0       	rcall	.+0      	; 0x6e5c <_Z41__static_initialization_and_destruction_0ii+0xc>
    6e5c:	cd b7       	in	r28, 0x3d	; 61
    6e5e:	de b7       	in	r29, 0x3e	; 62
    6e60:	89 83       	std	Y+1, r24	; 0x01
    6e62:	9a 83       	std	Y+2, r25	; 0x02
    6e64:	6b 83       	std	Y+3, r22	; 0x03
    6e66:	7c 83       	std	Y+4, r23	; 0x04
    6e68:	89 81       	ldd	r24, Y+1	; 0x01
    6e6a:	9a 81       	ldd	r25, Y+2	; 0x02
    6e6c:	01 97       	sbiw	r24, 0x01	; 1
    6e6e:	91 f4       	brne	.+36     	; 0x6e94 <_Z41__static_initialization_and_destruction_0ii+0x44>
    6e70:	8b 81       	ldd	r24, Y+3	; 0x03
    6e72:	9c 81       	ldd	r25, Y+4	; 0x04
    6e74:	01 96       	adiw	r24, 0x01	; 1
    6e76:	71 f4       	brne	.+28     	; 0x6e94 <_Z41__static_initialization_and_destruction_0ii+0x44>
	
#define FREE_RUNNING true
#define SINGLE_CONVERSION false
	
volatile int16_t g_adcVal;
Goertzel g_goertzel(N, sampling_freq);
    6e78:	80 e0       	ldi	r24, 0x00	; 0
    6e7a:	90 e4       	ldi	r25, 0x40	; 64
    6e7c:	ac eb       	ldi	r26, 0xBC	; 188
    6e7e:	b6 e4       	ldi	r27, 0x46	; 70
    6e80:	8c 01       	movw	r16, r24
    6e82:	9d 01       	movw	r18, r26
    6e84:	40 e0       	ldi	r20, 0x00	; 0
    6e86:	50 e0       	ldi	r21, 0x00	; 0
    6e88:	69 e4       	ldi	r22, 0x49	; 73
    6e8a:	73 e4       	ldi	r23, 0x43	; 67
    6e8c:	88 ec       	ldi	r24, 0xC8	; 200
    6e8e:	97 e4       	ldi	r25, 0x47	; 71
    6e90:	0e 94 fd 4c 	call	0x99fa	; 0x99fa <_ZN8GoertzelC1Eff>
    6e94:	89 81       	ldd	r24, Y+1	; 0x01
    6e96:	9a 81       	ldd	r25, Y+2	; 0x02
    6e98:	89 2b       	or	r24, r25
    6e9a:	41 f4       	brne	.+16     	; 0x6eac <_Z41__static_initialization_and_destruction_0ii+0x5c>
    6e9c:	8b 81       	ldd	r24, Y+3	; 0x03
    6e9e:	9c 81       	ldd	r25, Y+4	; 0x04
    6ea0:	01 96       	adiw	r24, 0x01	; 1
    6ea2:	21 f4       	brne	.+8      	; 0x6eac <_Z41__static_initialization_and_destruction_0ii+0x5c>
    6ea4:	88 ec       	ldi	r24, 0xC8	; 200
    6ea6:	97 e4       	ldi	r25, 0x47	; 71
    6ea8:	0e 94 95 4d 	call	0x9b2a	; 0x9b2a <_ZN8GoertzelD1Ev>
//	LED_toggle_level();
	if(g_goertzel.DataPoint(val))
	{
		ADC0.INTCTRL = 0x00; /* disable ADC interrupt */
	}
    6eac:	00 00       	nop
    6eae:	24 96       	adiw	r28, 0x04	; 4
    6eb0:	cd bf       	out	0x3d, r28	; 61
    6eb2:	de bf       	out	0x3e, r29	; 62
    6eb4:	df 91       	pop	r29
    6eb6:	cf 91       	pop	r28
    6eb8:	1f 91       	pop	r17
    6eba:	0f 91       	pop	r16
    6ebc:	08 95       	ret

00006ebe <_GLOBAL__sub_I_g_adcVal>:
    6ebe:	cf 93       	push	r28
    6ec0:	df 93       	push	r29
    6ec2:	cd b7       	in	r28, 0x3d	; 61
    6ec4:	de b7       	in	r29, 0x3e	; 62
    6ec6:	6f ef       	ldi	r22, 0xFF	; 255
    6ec8:	7f ef       	ldi	r23, 0xFF	; 255
    6eca:	81 e0       	ldi	r24, 0x01	; 1
    6ecc:	90 e0       	ldi	r25, 0x00	; 0
    6ece:	0e 94 28 37 	call	0x6e50	; 0x6e50 <_Z41__static_initialization_and_destruction_0ii>
    6ed2:	df 91       	pop	r29
    6ed4:	cf 91       	pop	r28
    6ed6:	08 95       	ret

00006ed8 <_GLOBAL__sub_D_g_adcVal>:
    6ed8:	cf 93       	push	r28
    6eda:	df 93       	push	r29
    6edc:	cd b7       	in	r28, 0x3d	; 61
    6ede:	de b7       	in	r29, 0x3e	; 62
    6ee0:	6f ef       	ldi	r22, 0xFF	; 255
    6ee2:	7f ef       	ldi	r23, 0xFF	; 255
    6ee4:	80 e0       	ldi	r24, 0x00	; 0
    6ee6:	90 e0       	ldi	r25, 0x00	; 0
    6ee8:	0e 94 28 37 	call	0x6e50	; 0x6e50 <_Z41__static_initialization_and_destruction_0ii>
    6eec:	df 91       	pop	r29
    6eee:	cf 91       	pop	r28
    6ef0:	08 95       	ret

00006ef2 <PORTA_set_pin_pull_mode>:
} //binio

// default destructor
binio::~binio()
{
} //~binio
    6ef2:	cf 93       	push	r28
    6ef4:	df 93       	push	r29
    6ef6:	00 d0       	rcall	.+0      	; 0x6ef8 <PORTA_set_pin_pull_mode+0x6>
    6ef8:	00 d0       	rcall	.+0      	; 0x6efa <PORTA_set_pin_pull_mode+0x8>
    6efa:	cd b7       	in	r28, 0x3d	; 61
    6efc:	de b7       	in	r29, 0x3e	; 62
    6efe:	8b 83       	std	Y+3, r24	; 0x03
    6f00:	6c 83       	std	Y+4, r22	; 0x04
    6f02:	8b 81       	ldd	r24, Y+3	; 0x03
    6f04:	88 2f       	mov	r24, r24
    6f06:	90 e0       	ldi	r25, 0x00	; 0
    6f08:	80 5f       	subi	r24, 0xF0	; 240
    6f0a:	9b 4f       	sbci	r25, 0xFB	; 251
    6f0c:	89 83       	std	Y+1, r24	; 0x01
    6f0e:	9a 83       	std	Y+2, r25	; 0x02
    6f10:	8c 81       	ldd	r24, Y+4	; 0x04
    6f12:	81 30       	cpi	r24, 0x01	; 1
    6f14:	59 f4       	brne	.+22     	; 0x6f2c <PORTA_set_pin_pull_mode+0x3a>
    6f16:	89 81       	ldd	r24, Y+1	; 0x01
    6f18:	9a 81       	ldd	r25, Y+2	; 0x02
    6f1a:	fc 01       	movw	r30, r24
    6f1c:	80 81       	ld	r24, Z
    6f1e:	28 2f       	mov	r18, r24
    6f20:	28 60       	ori	r18, 0x08	; 8
    6f22:	89 81       	ldd	r24, Y+1	; 0x01
    6f24:	9a 81       	ldd	r25, Y+2	; 0x02
    6f26:	fc 01       	movw	r30, r24
    6f28:	20 83       	st	Z, r18
    6f2a:	0d c0       	rjmp	.+26     	; 0x6f46 <PORTA_set_pin_pull_mode+0x54>
    6f2c:	8c 81       	ldd	r24, Y+4	; 0x04
    6f2e:	88 23       	and	r24, r24
    6f30:	51 f4       	brne	.+20     	; 0x6f46 <PORTA_set_pin_pull_mode+0x54>
    6f32:	89 81       	ldd	r24, Y+1	; 0x01
    6f34:	9a 81       	ldd	r25, Y+2	; 0x02
    6f36:	fc 01       	movw	r30, r24
    6f38:	80 81       	ld	r24, Z
    6f3a:	28 2f       	mov	r18, r24
    6f3c:	27 7f       	andi	r18, 0xF7	; 247
    6f3e:	89 81       	ldd	r24, Y+1	; 0x01
    6f40:	9a 81       	ldd	r25, Y+2	; 0x02
    6f42:	fc 01       	movw	r30, r24
    6f44:	20 83       	st	Z, r18
    6f46:	00 00       	nop
    6f48:	24 96       	adiw	r28, 0x04	; 4
    6f4a:	cd bf       	out	0x3d, r28	; 61
    6f4c:	de bf       	out	0x3e, r29	; 62
    6f4e:	df 91       	pop	r29
    6f50:	cf 91       	pop	r28
    6f52:	08 95       	ret

00006f54 <PORTA_pin_set_isc>:
    6f54:	cf 93       	push	r28
    6f56:	df 93       	push	r29
    6f58:	00 d0       	rcall	.+0      	; 0x6f5a <PORTA_pin_set_isc+0x6>
    6f5a:	00 d0       	rcall	.+0      	; 0x6f5c <PORTA_pin_set_isc+0x8>
    6f5c:	cd b7       	in	r28, 0x3d	; 61
    6f5e:	de b7       	in	r29, 0x3e	; 62
    6f60:	8b 83       	std	Y+3, r24	; 0x03
    6f62:	6c 83       	std	Y+4, r22	; 0x04
    6f64:	8b 81       	ldd	r24, Y+3	; 0x03
    6f66:	88 2f       	mov	r24, r24
    6f68:	90 e0       	ldi	r25, 0x00	; 0
    6f6a:	80 5f       	subi	r24, 0xF0	; 240
    6f6c:	9b 4f       	sbci	r25, 0xFB	; 251
    6f6e:	89 83       	std	Y+1, r24	; 0x01
    6f70:	9a 83       	std	Y+2, r25	; 0x02
    6f72:	89 81       	ldd	r24, Y+1	; 0x01
    6f74:	9a 81       	ldd	r25, Y+2	; 0x02
    6f76:	fc 01       	movw	r30, r24
    6f78:	80 81       	ld	r24, Z
    6f7a:	98 2f       	mov	r25, r24
    6f7c:	98 7f       	andi	r25, 0xF8	; 248
    6f7e:	8c 81       	ldd	r24, Y+4	; 0x04
    6f80:	89 2b       	or	r24, r25
    6f82:	28 2f       	mov	r18, r24
    6f84:	89 81       	ldd	r24, Y+1	; 0x01
    6f86:	9a 81       	ldd	r25, Y+2	; 0x02
    6f88:	fc 01       	movw	r30, r24
    6f8a:	20 83       	st	Z, r18
    6f8c:	00 00       	nop
    6f8e:	24 96       	adiw	r28, 0x04	; 4
    6f90:	cd bf       	out	0x3d, r28	; 61
    6f92:	de bf       	out	0x3e, r29	; 62
    6f94:	df 91       	pop	r29
    6f96:	cf 91       	pop	r28
    6f98:	08 95       	ret

00006f9a <PORTA_set_pin_dir>:
    6f9a:	cf 93       	push	r28
    6f9c:	df 93       	push	r29
    6f9e:	00 d0       	rcall	.+0      	; 0x6fa0 <PORTA_set_pin_dir+0x6>
    6fa0:	cd b7       	in	r28, 0x3d	; 61
    6fa2:	de b7       	in	r29, 0x3e	; 62
    6fa4:	89 83       	std	Y+1, r24	; 0x01
    6fa6:	6a 83       	std	Y+2, r22	; 0x02
    6fa8:	8a 81       	ldd	r24, Y+2	; 0x02
    6faa:	88 2f       	mov	r24, r24
    6fac:	90 e0       	ldi	r25, 0x00	; 0
    6fae:	81 30       	cpi	r24, 0x01	; 1
    6fb0:	91 05       	cpc	r25, r1
    6fb2:	e1 f0       	breq	.+56     	; 0x6fec <PORTA_set_pin_dir+0x52>
    6fb4:	82 30       	cpi	r24, 0x02	; 2
    6fb6:	91 05       	cpc	r25, r1
    6fb8:	71 f1       	breq	.+92     	; 0x7016 <PORTA_set_pin_dir+0x7c>
    6fba:	89 2b       	or	r24, r25
    6fbc:	09 f0       	breq	.+2      	; 0x6fc0 <PORTA_set_pin_dir+0x26>
    6fbe:	3b c0       	rjmp	.+118    	; 0x7036 <PORTA_set_pin_dir+0x9c>
    6fc0:	20 e0       	ldi	r18, 0x00	; 0
    6fc2:	30 e0       	ldi	r19, 0x00	; 0
    6fc4:	80 e0       	ldi	r24, 0x00	; 0
    6fc6:	90 e0       	ldi	r25, 0x00	; 0
    6fc8:	fc 01       	movw	r30, r24
    6fca:	80 81       	ld	r24, Z
    6fcc:	68 2f       	mov	r22, r24
    6fce:	89 81       	ldd	r24, Y+1	; 0x01
    6fd0:	48 2f       	mov	r20, r24
    6fd2:	50 e0       	ldi	r21, 0x00	; 0
    6fd4:	81 e0       	ldi	r24, 0x01	; 1
    6fd6:	90 e0       	ldi	r25, 0x00	; 0
    6fd8:	02 c0       	rjmp	.+4      	; 0x6fde <PORTA_set_pin_dir+0x44>
    6fda:	88 0f       	add	r24, r24
    6fdc:	99 1f       	adc	r25, r25
    6fde:	4a 95       	dec	r20
    6fe0:	e2 f7       	brpl	.-8      	; 0x6fda <PORTA_set_pin_dir+0x40>
    6fe2:	80 95       	com	r24
    6fe4:	86 23       	and	r24, r22
    6fe6:	f9 01       	movw	r30, r18
    6fe8:	80 83       	st	Z, r24
    6fea:	25 c0       	rjmp	.+74     	; 0x7036 <PORTA_set_pin_dir+0x9c>
    6fec:	20 e0       	ldi	r18, 0x00	; 0
    6fee:	30 e0       	ldi	r19, 0x00	; 0
    6ff0:	80 e0       	ldi	r24, 0x00	; 0
    6ff2:	90 e0       	ldi	r25, 0x00	; 0
    6ff4:	fc 01       	movw	r30, r24
    6ff6:	80 81       	ld	r24, Z
    6ff8:	68 2f       	mov	r22, r24
    6ffa:	89 81       	ldd	r24, Y+1	; 0x01
    6ffc:	48 2f       	mov	r20, r24
    6ffe:	50 e0       	ldi	r21, 0x00	; 0
    7000:	81 e0       	ldi	r24, 0x01	; 1
    7002:	90 e0       	ldi	r25, 0x00	; 0
    7004:	02 c0       	rjmp	.+4      	; 0x700a <PORTA_set_pin_dir+0x70>
    7006:	88 0f       	add	r24, r24
    7008:	99 1f       	adc	r25, r25
    700a:	4a 95       	dec	r20
    700c:	e2 f7       	brpl	.-8      	; 0x7006 <PORTA_set_pin_dir+0x6c>
    700e:	86 2b       	or	r24, r22
    7010:	f9 01       	movw	r30, r18
    7012:	80 83       	st	Z, r24
    7014:	10 c0       	rjmp	.+32     	; 0x7036 <PORTA_set_pin_dir+0x9c>
    7016:	89 81       	ldd	r24, Y+1	; 0x01
    7018:	88 2f       	mov	r24, r24
    701a:	90 e0       	ldi	r25, 0x00	; 0
    701c:	80 5f       	subi	r24, 0xF0	; 240
    701e:	9b 4f       	sbci	r25, 0xFB	; 251
    7020:	29 81       	ldd	r18, Y+1	; 0x01
    7022:	22 2f       	mov	r18, r18
    7024:	30 e0       	ldi	r19, 0x00	; 0
    7026:	20 5f       	subi	r18, 0xF0	; 240
    7028:	3b 4f       	sbci	r19, 0xFB	; 251
    702a:	f9 01       	movw	r30, r18
    702c:	20 81       	ld	r18, Z
    702e:	28 60       	ori	r18, 0x08	; 8
    7030:	fc 01       	movw	r30, r24
    7032:	20 83       	st	Z, r18
    7034:	00 00       	nop
    7036:	00 00       	nop
    7038:	0f 90       	pop	r0
    703a:	0f 90       	pop	r0
    703c:	df 91       	pop	r29
    703e:	cf 91       	pop	r28
    7040:	08 95       	ret

00007042 <PORTA_set_pin_level>:
    7042:	cf 93       	push	r28
    7044:	df 93       	push	r29
    7046:	00 d0       	rcall	.+0      	; 0x7048 <PORTA_set_pin_level+0x6>
    7048:	cd b7       	in	r28, 0x3d	; 61
    704a:	de b7       	in	r29, 0x3e	; 62
    704c:	89 83       	std	Y+1, r24	; 0x01
    704e:	6a 83       	std	Y+2, r22	; 0x02
    7050:	8a 81       	ldd	r24, Y+2	; 0x02
    7052:	88 23       	and	r24, r24
    7054:	a9 f0       	breq	.+42     	; 0x7080 <PORTA_set_pin_level+0x3e>
    7056:	20 e0       	ldi	r18, 0x00	; 0
    7058:	30 e0       	ldi	r19, 0x00	; 0
    705a:	80 e0       	ldi	r24, 0x00	; 0
    705c:	90 e0       	ldi	r25, 0x00	; 0
    705e:	fc 01       	movw	r30, r24
    7060:	81 81       	ldd	r24, Z+1	; 0x01
    7062:	68 2f       	mov	r22, r24
    7064:	89 81       	ldd	r24, Y+1	; 0x01
    7066:	48 2f       	mov	r20, r24
    7068:	50 e0       	ldi	r21, 0x00	; 0
    706a:	81 e0       	ldi	r24, 0x01	; 1
    706c:	90 e0       	ldi	r25, 0x00	; 0
    706e:	02 c0       	rjmp	.+4      	; 0x7074 <PORTA_set_pin_level+0x32>
    7070:	88 0f       	add	r24, r24
    7072:	99 1f       	adc	r25, r25
    7074:	4a 95       	dec	r20
    7076:	e2 f7       	brpl	.-8      	; 0x7070 <PORTA_set_pin_level+0x2e>
    7078:	86 2b       	or	r24, r22
    707a:	f9 01       	movw	r30, r18
    707c:	81 83       	std	Z+1, r24	; 0x01
    707e:	15 c0       	rjmp	.+42     	; 0x70aa <PORTA_set_pin_level+0x68>
    7080:	20 e0       	ldi	r18, 0x00	; 0
    7082:	30 e0       	ldi	r19, 0x00	; 0
    7084:	80 e0       	ldi	r24, 0x00	; 0
    7086:	90 e0       	ldi	r25, 0x00	; 0
    7088:	fc 01       	movw	r30, r24
    708a:	81 81       	ldd	r24, Z+1	; 0x01
    708c:	68 2f       	mov	r22, r24
    708e:	89 81       	ldd	r24, Y+1	; 0x01
    7090:	48 2f       	mov	r20, r24
    7092:	50 e0       	ldi	r21, 0x00	; 0
    7094:	81 e0       	ldi	r24, 0x01	; 1
    7096:	90 e0       	ldi	r25, 0x00	; 0
    7098:	02 c0       	rjmp	.+4      	; 0x709e <PORTA_set_pin_level+0x5c>
    709a:	88 0f       	add	r24, r24
    709c:	99 1f       	adc	r25, r25
    709e:	4a 95       	dec	r20
    70a0:	e2 f7       	brpl	.-8      	; 0x709a <PORTA_set_pin_level+0x58>
    70a2:	80 95       	com	r24
    70a4:	86 23       	and	r24, r22
    70a6:	f9 01       	movw	r30, r18
    70a8:	81 83       	std	Z+1, r24	; 0x01
    70aa:	00 00       	nop
    70ac:	0f 90       	pop	r0
    70ae:	0f 90       	pop	r0
    70b0:	df 91       	pop	r29
    70b2:	cf 91       	pop	r28
    70b4:	08 95       	ret

000070b6 <PORTB_set_pin_dir>:
    70b6:	cf 93       	push	r28
    70b8:	df 93       	push	r29
    70ba:	00 d0       	rcall	.+0      	; 0x70bc <PORTB_set_pin_dir+0x6>
    70bc:	cd b7       	in	r28, 0x3d	; 61
    70be:	de b7       	in	r29, 0x3e	; 62
    70c0:	89 83       	std	Y+1, r24	; 0x01
    70c2:	6a 83       	std	Y+2, r22	; 0x02
    70c4:	8a 81       	ldd	r24, Y+2	; 0x02
    70c6:	88 2f       	mov	r24, r24
    70c8:	90 e0       	ldi	r25, 0x00	; 0
    70ca:	81 30       	cpi	r24, 0x01	; 1
    70cc:	91 05       	cpc	r25, r1
    70ce:	e1 f0       	breq	.+56     	; 0x7108 <PORTB_set_pin_dir+0x52>
    70d0:	82 30       	cpi	r24, 0x02	; 2
    70d2:	91 05       	cpc	r25, r1
    70d4:	71 f1       	breq	.+92     	; 0x7132 <PORTB_set_pin_dir+0x7c>
    70d6:	89 2b       	or	r24, r25
    70d8:	09 f0       	breq	.+2      	; 0x70dc <PORTB_set_pin_dir+0x26>
    70da:	3b c0       	rjmp	.+118    	; 0x7152 <PORTB_set_pin_dir+0x9c>
    70dc:	84 e0       	ldi	r24, 0x04	; 4
    70de:	90 e0       	ldi	r25, 0x00	; 0
    70e0:	24 e0       	ldi	r18, 0x04	; 4
    70e2:	30 e0       	ldi	r19, 0x00	; 0
    70e4:	f9 01       	movw	r30, r18
    70e6:	20 81       	ld	r18, Z
    70e8:	62 2f       	mov	r22, r18
    70ea:	29 81       	ldd	r18, Y+1	; 0x01
    70ec:	42 2f       	mov	r20, r18
    70ee:	50 e0       	ldi	r21, 0x00	; 0
    70f0:	21 e0       	ldi	r18, 0x01	; 1
    70f2:	30 e0       	ldi	r19, 0x00	; 0
    70f4:	02 c0       	rjmp	.+4      	; 0x70fa <PORTB_set_pin_dir+0x44>
    70f6:	22 0f       	add	r18, r18
    70f8:	33 1f       	adc	r19, r19
    70fa:	4a 95       	dec	r20
    70fc:	e2 f7       	brpl	.-8      	; 0x70f6 <PORTB_set_pin_dir+0x40>
    70fe:	20 95       	com	r18
    7100:	26 23       	and	r18, r22
    7102:	fc 01       	movw	r30, r24
    7104:	20 83       	st	Z, r18
    7106:	25 c0       	rjmp	.+74     	; 0x7152 <PORTB_set_pin_dir+0x9c>
    7108:	84 e0       	ldi	r24, 0x04	; 4
    710a:	90 e0       	ldi	r25, 0x00	; 0
    710c:	24 e0       	ldi	r18, 0x04	; 4
    710e:	30 e0       	ldi	r19, 0x00	; 0
    7110:	f9 01       	movw	r30, r18
    7112:	20 81       	ld	r18, Z
    7114:	62 2f       	mov	r22, r18
    7116:	29 81       	ldd	r18, Y+1	; 0x01
    7118:	42 2f       	mov	r20, r18
    711a:	50 e0       	ldi	r21, 0x00	; 0
    711c:	21 e0       	ldi	r18, 0x01	; 1
    711e:	30 e0       	ldi	r19, 0x00	; 0
    7120:	02 c0       	rjmp	.+4      	; 0x7126 <PORTB_set_pin_dir+0x70>
    7122:	22 0f       	add	r18, r18
    7124:	33 1f       	adc	r19, r19
    7126:	4a 95       	dec	r20
    7128:	e2 f7       	brpl	.-8      	; 0x7122 <PORTB_set_pin_dir+0x6c>
    712a:	26 2b       	or	r18, r22
    712c:	fc 01       	movw	r30, r24
    712e:	20 83       	st	Z, r18
    7130:	10 c0       	rjmp	.+32     	; 0x7152 <PORTB_set_pin_dir+0x9c>
    7132:	89 81       	ldd	r24, Y+1	; 0x01
    7134:	88 2f       	mov	r24, r24
    7136:	90 e0       	ldi	r25, 0x00	; 0
    7138:	80 5d       	subi	r24, 0xD0	; 208
    713a:	9b 4f       	sbci	r25, 0xFB	; 251
    713c:	29 81       	ldd	r18, Y+1	; 0x01
    713e:	22 2f       	mov	r18, r18
    7140:	30 e0       	ldi	r19, 0x00	; 0
    7142:	20 5d       	subi	r18, 0xD0	; 208
    7144:	3b 4f       	sbci	r19, 0xFB	; 251
    7146:	f9 01       	movw	r30, r18
    7148:	20 81       	ld	r18, Z
    714a:	28 60       	ori	r18, 0x08	; 8
    714c:	fc 01       	movw	r30, r24
    714e:	20 83       	st	Z, r18
    7150:	00 00       	nop
    7152:	00 00       	nop
    7154:	0f 90       	pop	r0
    7156:	0f 90       	pop	r0
    7158:	df 91       	pop	r29
    715a:	cf 91       	pop	r28
    715c:	08 95       	ret

0000715e <PORTB_set_pin_level>:
    715e:	cf 93       	push	r28
    7160:	df 93       	push	r29
    7162:	00 d0       	rcall	.+0      	; 0x7164 <PORTB_set_pin_level+0x6>
    7164:	cd b7       	in	r28, 0x3d	; 61
    7166:	de b7       	in	r29, 0x3e	; 62
    7168:	89 83       	std	Y+1, r24	; 0x01
    716a:	6a 83       	std	Y+2, r22	; 0x02
    716c:	8a 81       	ldd	r24, Y+2	; 0x02
    716e:	88 23       	and	r24, r24
    7170:	a9 f0       	breq	.+42     	; 0x719c <PORTB_set_pin_level+0x3e>
    7172:	84 e0       	ldi	r24, 0x04	; 4
    7174:	90 e0       	ldi	r25, 0x00	; 0
    7176:	24 e0       	ldi	r18, 0x04	; 4
    7178:	30 e0       	ldi	r19, 0x00	; 0
    717a:	f9 01       	movw	r30, r18
    717c:	21 81       	ldd	r18, Z+1	; 0x01
    717e:	62 2f       	mov	r22, r18
    7180:	29 81       	ldd	r18, Y+1	; 0x01
    7182:	42 2f       	mov	r20, r18
    7184:	50 e0       	ldi	r21, 0x00	; 0
    7186:	21 e0       	ldi	r18, 0x01	; 1
    7188:	30 e0       	ldi	r19, 0x00	; 0
    718a:	02 c0       	rjmp	.+4      	; 0x7190 <PORTB_set_pin_level+0x32>
    718c:	22 0f       	add	r18, r18
    718e:	33 1f       	adc	r19, r19
    7190:	4a 95       	dec	r20
    7192:	e2 f7       	brpl	.-8      	; 0x718c <PORTB_set_pin_level+0x2e>
    7194:	26 2b       	or	r18, r22
    7196:	fc 01       	movw	r30, r24
    7198:	21 83       	std	Z+1, r18	; 0x01
    719a:	15 c0       	rjmp	.+42     	; 0x71c6 <PORTB_set_pin_level+0x68>
    719c:	84 e0       	ldi	r24, 0x04	; 4
    719e:	90 e0       	ldi	r25, 0x00	; 0
    71a0:	24 e0       	ldi	r18, 0x04	; 4
    71a2:	30 e0       	ldi	r19, 0x00	; 0
    71a4:	f9 01       	movw	r30, r18
    71a6:	21 81       	ldd	r18, Z+1	; 0x01
    71a8:	62 2f       	mov	r22, r18
    71aa:	29 81       	ldd	r18, Y+1	; 0x01
    71ac:	42 2f       	mov	r20, r18
    71ae:	50 e0       	ldi	r21, 0x00	; 0
    71b0:	21 e0       	ldi	r18, 0x01	; 1
    71b2:	30 e0       	ldi	r19, 0x00	; 0
    71b4:	02 c0       	rjmp	.+4      	; 0x71ba <PORTB_set_pin_level+0x5c>
    71b6:	22 0f       	add	r18, r18
    71b8:	33 1f       	adc	r19, r19
    71ba:	4a 95       	dec	r20
    71bc:	e2 f7       	brpl	.-8      	; 0x71b6 <PORTB_set_pin_level+0x58>
    71be:	20 95       	com	r18
    71c0:	26 23       	and	r18, r22
    71c2:	fc 01       	movw	r30, r24
    71c4:	21 83       	std	Z+1, r18	; 0x01
    71c6:	00 00       	nop
    71c8:	0f 90       	pop	r0
    71ca:	0f 90       	pop	r0
    71cc:	df 91       	pop	r29
    71ce:	cf 91       	pop	r28
    71d0:	08 95       	ret

000071d2 <PORTC_set_pin_pull_mode>:
    71d2:	cf 93       	push	r28
    71d4:	df 93       	push	r29
    71d6:	00 d0       	rcall	.+0      	; 0x71d8 <PORTC_set_pin_pull_mode+0x6>
    71d8:	00 d0       	rcall	.+0      	; 0x71da <PORTC_set_pin_pull_mode+0x8>
    71da:	cd b7       	in	r28, 0x3d	; 61
    71dc:	de b7       	in	r29, 0x3e	; 62
    71de:	8b 83       	std	Y+3, r24	; 0x03
    71e0:	6c 83       	std	Y+4, r22	; 0x04
    71e2:	8b 81       	ldd	r24, Y+3	; 0x03
    71e4:	88 2f       	mov	r24, r24
    71e6:	90 e0       	ldi	r25, 0x00	; 0
    71e8:	80 5b       	subi	r24, 0xB0	; 176
    71ea:	9b 4f       	sbci	r25, 0xFB	; 251
    71ec:	89 83       	std	Y+1, r24	; 0x01
    71ee:	9a 83       	std	Y+2, r25	; 0x02
    71f0:	8c 81       	ldd	r24, Y+4	; 0x04
    71f2:	81 30       	cpi	r24, 0x01	; 1
    71f4:	59 f4       	brne	.+22     	; 0x720c <PORTC_set_pin_pull_mode+0x3a>
    71f6:	89 81       	ldd	r24, Y+1	; 0x01
    71f8:	9a 81       	ldd	r25, Y+2	; 0x02
    71fa:	fc 01       	movw	r30, r24
    71fc:	80 81       	ld	r24, Z
    71fe:	28 2f       	mov	r18, r24
    7200:	28 60       	ori	r18, 0x08	; 8
    7202:	89 81       	ldd	r24, Y+1	; 0x01
    7204:	9a 81       	ldd	r25, Y+2	; 0x02
    7206:	fc 01       	movw	r30, r24
    7208:	20 83       	st	Z, r18
    720a:	0d c0       	rjmp	.+26     	; 0x7226 <PORTC_set_pin_pull_mode+0x54>
    720c:	8c 81       	ldd	r24, Y+4	; 0x04
    720e:	88 23       	and	r24, r24
    7210:	51 f4       	brne	.+20     	; 0x7226 <PORTC_set_pin_pull_mode+0x54>
    7212:	89 81       	ldd	r24, Y+1	; 0x01
    7214:	9a 81       	ldd	r25, Y+2	; 0x02
    7216:	fc 01       	movw	r30, r24
    7218:	80 81       	ld	r24, Z
    721a:	28 2f       	mov	r18, r24
    721c:	27 7f       	andi	r18, 0xF7	; 247
    721e:	89 81       	ldd	r24, Y+1	; 0x01
    7220:	9a 81       	ldd	r25, Y+2	; 0x02
    7222:	fc 01       	movw	r30, r24
    7224:	20 83       	st	Z, r18
    7226:	00 00       	nop
    7228:	24 96       	adiw	r28, 0x04	; 4
    722a:	cd bf       	out	0x3d, r28	; 61
    722c:	de bf       	out	0x3e, r29	; 62
    722e:	df 91       	pop	r29
    7230:	cf 91       	pop	r28
    7232:	08 95       	ret

00007234 <PORTC_pin_set_isc>:
    7234:	cf 93       	push	r28
    7236:	df 93       	push	r29
    7238:	00 d0       	rcall	.+0      	; 0x723a <PORTC_pin_set_isc+0x6>
    723a:	00 d0       	rcall	.+0      	; 0x723c <PORTC_pin_set_isc+0x8>
    723c:	cd b7       	in	r28, 0x3d	; 61
    723e:	de b7       	in	r29, 0x3e	; 62
    7240:	8b 83       	std	Y+3, r24	; 0x03
    7242:	6c 83       	std	Y+4, r22	; 0x04
    7244:	8b 81       	ldd	r24, Y+3	; 0x03
    7246:	88 2f       	mov	r24, r24
    7248:	90 e0       	ldi	r25, 0x00	; 0
    724a:	80 5b       	subi	r24, 0xB0	; 176
    724c:	9b 4f       	sbci	r25, 0xFB	; 251
    724e:	89 83       	std	Y+1, r24	; 0x01
    7250:	9a 83       	std	Y+2, r25	; 0x02
    7252:	89 81       	ldd	r24, Y+1	; 0x01
    7254:	9a 81       	ldd	r25, Y+2	; 0x02
    7256:	fc 01       	movw	r30, r24
    7258:	80 81       	ld	r24, Z
    725a:	98 2f       	mov	r25, r24
    725c:	98 7f       	andi	r25, 0xF8	; 248
    725e:	8c 81       	ldd	r24, Y+4	; 0x04
    7260:	89 2b       	or	r24, r25
    7262:	28 2f       	mov	r18, r24
    7264:	89 81       	ldd	r24, Y+1	; 0x01
    7266:	9a 81       	ldd	r25, Y+2	; 0x02
    7268:	fc 01       	movw	r30, r24
    726a:	20 83       	st	Z, r18
    726c:	00 00       	nop
    726e:	24 96       	adiw	r28, 0x04	; 4
    7270:	cd bf       	out	0x3d, r28	; 61
    7272:	de bf       	out	0x3e, r29	; 62
    7274:	df 91       	pop	r29
    7276:	cf 91       	pop	r28
    7278:	08 95       	ret

0000727a <PORTC_set_pin_dir>:
    727a:	cf 93       	push	r28
    727c:	df 93       	push	r29
    727e:	00 d0       	rcall	.+0      	; 0x7280 <PORTC_set_pin_dir+0x6>
    7280:	cd b7       	in	r28, 0x3d	; 61
    7282:	de b7       	in	r29, 0x3e	; 62
    7284:	89 83       	std	Y+1, r24	; 0x01
    7286:	6a 83       	std	Y+2, r22	; 0x02
    7288:	8a 81       	ldd	r24, Y+2	; 0x02
    728a:	88 2f       	mov	r24, r24
    728c:	90 e0       	ldi	r25, 0x00	; 0
    728e:	81 30       	cpi	r24, 0x01	; 1
    7290:	91 05       	cpc	r25, r1
    7292:	e1 f0       	breq	.+56     	; 0x72cc <PORTC_set_pin_dir+0x52>
    7294:	82 30       	cpi	r24, 0x02	; 2
    7296:	91 05       	cpc	r25, r1
    7298:	71 f1       	breq	.+92     	; 0x72f6 <PORTC_set_pin_dir+0x7c>
    729a:	89 2b       	or	r24, r25
    729c:	09 f0       	breq	.+2      	; 0x72a0 <PORTC_set_pin_dir+0x26>
    729e:	3b c0       	rjmp	.+118    	; 0x7316 <PORTC_set_pin_dir+0x9c>
    72a0:	88 e0       	ldi	r24, 0x08	; 8
    72a2:	90 e0       	ldi	r25, 0x00	; 0
    72a4:	28 e0       	ldi	r18, 0x08	; 8
    72a6:	30 e0       	ldi	r19, 0x00	; 0
    72a8:	f9 01       	movw	r30, r18
    72aa:	20 81       	ld	r18, Z
    72ac:	62 2f       	mov	r22, r18
    72ae:	29 81       	ldd	r18, Y+1	; 0x01
    72b0:	42 2f       	mov	r20, r18
    72b2:	50 e0       	ldi	r21, 0x00	; 0
    72b4:	21 e0       	ldi	r18, 0x01	; 1
    72b6:	30 e0       	ldi	r19, 0x00	; 0
    72b8:	02 c0       	rjmp	.+4      	; 0x72be <PORTC_set_pin_dir+0x44>
    72ba:	22 0f       	add	r18, r18
    72bc:	33 1f       	adc	r19, r19
    72be:	4a 95       	dec	r20
    72c0:	e2 f7       	brpl	.-8      	; 0x72ba <PORTC_set_pin_dir+0x40>
    72c2:	20 95       	com	r18
    72c4:	26 23       	and	r18, r22
    72c6:	fc 01       	movw	r30, r24
    72c8:	20 83       	st	Z, r18
    72ca:	25 c0       	rjmp	.+74     	; 0x7316 <PORTC_set_pin_dir+0x9c>
    72cc:	88 e0       	ldi	r24, 0x08	; 8
    72ce:	90 e0       	ldi	r25, 0x00	; 0
    72d0:	28 e0       	ldi	r18, 0x08	; 8
    72d2:	30 e0       	ldi	r19, 0x00	; 0
    72d4:	f9 01       	movw	r30, r18
    72d6:	20 81       	ld	r18, Z
    72d8:	62 2f       	mov	r22, r18
    72da:	29 81       	ldd	r18, Y+1	; 0x01
    72dc:	42 2f       	mov	r20, r18
    72de:	50 e0       	ldi	r21, 0x00	; 0
    72e0:	21 e0       	ldi	r18, 0x01	; 1
    72e2:	30 e0       	ldi	r19, 0x00	; 0
    72e4:	02 c0       	rjmp	.+4      	; 0x72ea <PORTC_set_pin_dir+0x70>
    72e6:	22 0f       	add	r18, r18
    72e8:	33 1f       	adc	r19, r19
    72ea:	4a 95       	dec	r20
    72ec:	e2 f7       	brpl	.-8      	; 0x72e6 <PORTC_set_pin_dir+0x6c>
    72ee:	26 2b       	or	r18, r22
    72f0:	fc 01       	movw	r30, r24
    72f2:	20 83       	st	Z, r18
    72f4:	10 c0       	rjmp	.+32     	; 0x7316 <PORTC_set_pin_dir+0x9c>
    72f6:	89 81       	ldd	r24, Y+1	; 0x01
    72f8:	88 2f       	mov	r24, r24
    72fa:	90 e0       	ldi	r25, 0x00	; 0
    72fc:	80 5b       	subi	r24, 0xB0	; 176
    72fe:	9b 4f       	sbci	r25, 0xFB	; 251
    7300:	29 81       	ldd	r18, Y+1	; 0x01
    7302:	22 2f       	mov	r18, r18
    7304:	30 e0       	ldi	r19, 0x00	; 0
    7306:	20 5b       	subi	r18, 0xB0	; 176
    7308:	3b 4f       	sbci	r19, 0xFB	; 251
    730a:	f9 01       	movw	r30, r18
    730c:	20 81       	ld	r18, Z
    730e:	28 60       	ori	r18, 0x08	; 8
    7310:	fc 01       	movw	r30, r24
    7312:	20 83       	st	Z, r18
    7314:	00 00       	nop
    7316:	00 00       	nop
    7318:	0f 90       	pop	r0
    731a:	0f 90       	pop	r0
    731c:	df 91       	pop	r29
    731e:	cf 91       	pop	r28
    7320:	08 95       	ret

00007322 <PORTC_set_pin_level>:
    7322:	cf 93       	push	r28
    7324:	df 93       	push	r29
    7326:	00 d0       	rcall	.+0      	; 0x7328 <PORTC_set_pin_level+0x6>
    7328:	cd b7       	in	r28, 0x3d	; 61
    732a:	de b7       	in	r29, 0x3e	; 62
    732c:	89 83       	std	Y+1, r24	; 0x01
    732e:	6a 83       	std	Y+2, r22	; 0x02
    7330:	8a 81       	ldd	r24, Y+2	; 0x02
    7332:	88 23       	and	r24, r24
    7334:	a9 f0       	breq	.+42     	; 0x7360 <PORTC_set_pin_level+0x3e>
    7336:	88 e0       	ldi	r24, 0x08	; 8
    7338:	90 e0       	ldi	r25, 0x00	; 0
    733a:	28 e0       	ldi	r18, 0x08	; 8
    733c:	30 e0       	ldi	r19, 0x00	; 0
    733e:	f9 01       	movw	r30, r18
    7340:	21 81       	ldd	r18, Z+1	; 0x01
    7342:	62 2f       	mov	r22, r18
    7344:	29 81       	ldd	r18, Y+1	; 0x01
    7346:	42 2f       	mov	r20, r18
    7348:	50 e0       	ldi	r21, 0x00	; 0
    734a:	21 e0       	ldi	r18, 0x01	; 1
    734c:	30 e0       	ldi	r19, 0x00	; 0
    734e:	02 c0       	rjmp	.+4      	; 0x7354 <PORTC_set_pin_level+0x32>
    7350:	22 0f       	add	r18, r18
    7352:	33 1f       	adc	r19, r19
    7354:	4a 95       	dec	r20
    7356:	e2 f7       	brpl	.-8      	; 0x7350 <PORTC_set_pin_level+0x2e>
    7358:	26 2b       	or	r18, r22
    735a:	fc 01       	movw	r30, r24
    735c:	21 83       	std	Z+1, r18	; 0x01
    735e:	15 c0       	rjmp	.+42     	; 0x738a <PORTC_set_pin_level+0x68>
    7360:	88 e0       	ldi	r24, 0x08	; 8
    7362:	90 e0       	ldi	r25, 0x00	; 0
    7364:	28 e0       	ldi	r18, 0x08	; 8
    7366:	30 e0       	ldi	r19, 0x00	; 0
    7368:	f9 01       	movw	r30, r18
    736a:	21 81       	ldd	r18, Z+1	; 0x01
    736c:	62 2f       	mov	r22, r18
    736e:	29 81       	ldd	r18, Y+1	; 0x01
    7370:	42 2f       	mov	r20, r18
    7372:	50 e0       	ldi	r21, 0x00	; 0
    7374:	21 e0       	ldi	r18, 0x01	; 1
    7376:	30 e0       	ldi	r19, 0x00	; 0
    7378:	02 c0       	rjmp	.+4      	; 0x737e <PORTC_set_pin_level+0x5c>
    737a:	22 0f       	add	r18, r18
    737c:	33 1f       	adc	r19, r19
    737e:	4a 95       	dec	r20
    7380:	e2 f7       	brpl	.-8      	; 0x737a <PORTC_set_pin_level+0x58>
    7382:	20 95       	com	r18
    7384:	26 23       	and	r18, r22
    7386:	fc 01       	movw	r30, r24
    7388:	21 83       	std	Z+1, r18	; 0x01
    738a:	00 00       	nop
    738c:	0f 90       	pop	r0
    738e:	0f 90       	pop	r0
    7390:	df 91       	pop	r29
    7392:	cf 91       	pop	r28
    7394:	08 95       	ret

00007396 <PORTD_set_pin_pull_mode>:
    7396:	cf 93       	push	r28
    7398:	df 93       	push	r29
    739a:	00 d0       	rcall	.+0      	; 0x739c <PORTD_set_pin_pull_mode+0x6>
    739c:	00 d0       	rcall	.+0      	; 0x739e <PORTD_set_pin_pull_mode+0x8>
    739e:	cd b7       	in	r28, 0x3d	; 61
    73a0:	de b7       	in	r29, 0x3e	; 62
    73a2:	8b 83       	std	Y+3, r24	; 0x03
    73a4:	6c 83       	std	Y+4, r22	; 0x04
    73a6:	8b 81       	ldd	r24, Y+3	; 0x03
    73a8:	88 2f       	mov	r24, r24
    73aa:	90 e0       	ldi	r25, 0x00	; 0
    73ac:	80 59       	subi	r24, 0x90	; 144
    73ae:	9b 4f       	sbci	r25, 0xFB	; 251
    73b0:	89 83       	std	Y+1, r24	; 0x01
    73b2:	9a 83       	std	Y+2, r25	; 0x02
    73b4:	8c 81       	ldd	r24, Y+4	; 0x04
    73b6:	81 30       	cpi	r24, 0x01	; 1
    73b8:	59 f4       	brne	.+22     	; 0x73d0 <PORTD_set_pin_pull_mode+0x3a>
    73ba:	89 81       	ldd	r24, Y+1	; 0x01
    73bc:	9a 81       	ldd	r25, Y+2	; 0x02
    73be:	fc 01       	movw	r30, r24
    73c0:	80 81       	ld	r24, Z
    73c2:	28 2f       	mov	r18, r24
    73c4:	28 60       	ori	r18, 0x08	; 8
    73c6:	89 81       	ldd	r24, Y+1	; 0x01
    73c8:	9a 81       	ldd	r25, Y+2	; 0x02
    73ca:	fc 01       	movw	r30, r24
    73cc:	20 83       	st	Z, r18
    73ce:	0d c0       	rjmp	.+26     	; 0x73ea <PORTD_set_pin_pull_mode+0x54>
    73d0:	8c 81       	ldd	r24, Y+4	; 0x04
    73d2:	88 23       	and	r24, r24
    73d4:	51 f4       	brne	.+20     	; 0x73ea <PORTD_set_pin_pull_mode+0x54>
    73d6:	89 81       	ldd	r24, Y+1	; 0x01
    73d8:	9a 81       	ldd	r25, Y+2	; 0x02
    73da:	fc 01       	movw	r30, r24
    73dc:	80 81       	ld	r24, Z
    73de:	28 2f       	mov	r18, r24
    73e0:	27 7f       	andi	r18, 0xF7	; 247
    73e2:	89 81       	ldd	r24, Y+1	; 0x01
    73e4:	9a 81       	ldd	r25, Y+2	; 0x02
    73e6:	fc 01       	movw	r30, r24
    73e8:	20 83       	st	Z, r18
    73ea:	00 00       	nop
    73ec:	24 96       	adiw	r28, 0x04	; 4
    73ee:	cd bf       	out	0x3d, r28	; 61
    73f0:	de bf       	out	0x3e, r29	; 62
    73f2:	df 91       	pop	r29
    73f4:	cf 91       	pop	r28
    73f6:	08 95       	ret

000073f8 <PORTD_pin_set_isc>:
    73f8:	cf 93       	push	r28
    73fa:	df 93       	push	r29
    73fc:	00 d0       	rcall	.+0      	; 0x73fe <PORTD_pin_set_isc+0x6>
    73fe:	00 d0       	rcall	.+0      	; 0x7400 <PORTD_pin_set_isc+0x8>
    7400:	cd b7       	in	r28, 0x3d	; 61
    7402:	de b7       	in	r29, 0x3e	; 62
    7404:	8b 83       	std	Y+3, r24	; 0x03
    7406:	6c 83       	std	Y+4, r22	; 0x04
    7408:	8b 81       	ldd	r24, Y+3	; 0x03
    740a:	88 2f       	mov	r24, r24
    740c:	90 e0       	ldi	r25, 0x00	; 0
    740e:	80 59       	subi	r24, 0x90	; 144
    7410:	9b 4f       	sbci	r25, 0xFB	; 251
    7412:	89 83       	std	Y+1, r24	; 0x01
    7414:	9a 83       	std	Y+2, r25	; 0x02
    7416:	89 81       	ldd	r24, Y+1	; 0x01
    7418:	9a 81       	ldd	r25, Y+2	; 0x02
    741a:	fc 01       	movw	r30, r24
    741c:	80 81       	ld	r24, Z
    741e:	98 2f       	mov	r25, r24
    7420:	98 7f       	andi	r25, 0xF8	; 248
    7422:	8c 81       	ldd	r24, Y+4	; 0x04
    7424:	89 2b       	or	r24, r25
    7426:	28 2f       	mov	r18, r24
    7428:	89 81       	ldd	r24, Y+1	; 0x01
    742a:	9a 81       	ldd	r25, Y+2	; 0x02
    742c:	fc 01       	movw	r30, r24
    742e:	20 83       	st	Z, r18
    7430:	00 00       	nop
    7432:	24 96       	adiw	r28, 0x04	; 4
    7434:	cd bf       	out	0x3d, r28	; 61
    7436:	de bf       	out	0x3e, r29	; 62
    7438:	df 91       	pop	r29
    743a:	cf 91       	pop	r28
    743c:	08 95       	ret

0000743e <PORTD_set_pin_dir>:
    743e:	cf 93       	push	r28
    7440:	df 93       	push	r29
    7442:	00 d0       	rcall	.+0      	; 0x7444 <PORTD_set_pin_dir+0x6>
    7444:	cd b7       	in	r28, 0x3d	; 61
    7446:	de b7       	in	r29, 0x3e	; 62
    7448:	89 83       	std	Y+1, r24	; 0x01
    744a:	6a 83       	std	Y+2, r22	; 0x02
    744c:	8a 81       	ldd	r24, Y+2	; 0x02
    744e:	88 2f       	mov	r24, r24
    7450:	90 e0       	ldi	r25, 0x00	; 0
    7452:	81 30       	cpi	r24, 0x01	; 1
    7454:	91 05       	cpc	r25, r1
    7456:	e1 f0       	breq	.+56     	; 0x7490 <PORTD_set_pin_dir+0x52>
    7458:	82 30       	cpi	r24, 0x02	; 2
    745a:	91 05       	cpc	r25, r1
    745c:	71 f1       	breq	.+92     	; 0x74ba <PORTD_set_pin_dir+0x7c>
    745e:	89 2b       	or	r24, r25
    7460:	09 f0       	breq	.+2      	; 0x7464 <PORTD_set_pin_dir+0x26>
    7462:	3b c0       	rjmp	.+118    	; 0x74da <PORTD_set_pin_dir+0x9c>
    7464:	8c e0       	ldi	r24, 0x0C	; 12
    7466:	90 e0       	ldi	r25, 0x00	; 0
    7468:	2c e0       	ldi	r18, 0x0C	; 12
    746a:	30 e0       	ldi	r19, 0x00	; 0
    746c:	f9 01       	movw	r30, r18
    746e:	20 81       	ld	r18, Z
    7470:	62 2f       	mov	r22, r18
    7472:	29 81       	ldd	r18, Y+1	; 0x01
    7474:	42 2f       	mov	r20, r18
    7476:	50 e0       	ldi	r21, 0x00	; 0
    7478:	21 e0       	ldi	r18, 0x01	; 1
    747a:	30 e0       	ldi	r19, 0x00	; 0
    747c:	02 c0       	rjmp	.+4      	; 0x7482 <PORTD_set_pin_dir+0x44>
    747e:	22 0f       	add	r18, r18
    7480:	33 1f       	adc	r19, r19
    7482:	4a 95       	dec	r20
    7484:	e2 f7       	brpl	.-8      	; 0x747e <PORTD_set_pin_dir+0x40>
    7486:	20 95       	com	r18
    7488:	26 23       	and	r18, r22
    748a:	fc 01       	movw	r30, r24
    748c:	20 83       	st	Z, r18
    748e:	25 c0       	rjmp	.+74     	; 0x74da <PORTD_set_pin_dir+0x9c>
    7490:	8c e0       	ldi	r24, 0x0C	; 12
    7492:	90 e0       	ldi	r25, 0x00	; 0
    7494:	2c e0       	ldi	r18, 0x0C	; 12
    7496:	30 e0       	ldi	r19, 0x00	; 0
    7498:	f9 01       	movw	r30, r18
    749a:	20 81       	ld	r18, Z
    749c:	62 2f       	mov	r22, r18
    749e:	29 81       	ldd	r18, Y+1	; 0x01
    74a0:	42 2f       	mov	r20, r18
    74a2:	50 e0       	ldi	r21, 0x00	; 0
    74a4:	21 e0       	ldi	r18, 0x01	; 1
    74a6:	30 e0       	ldi	r19, 0x00	; 0
    74a8:	02 c0       	rjmp	.+4      	; 0x74ae <PORTD_set_pin_dir+0x70>
    74aa:	22 0f       	add	r18, r18
    74ac:	33 1f       	adc	r19, r19
    74ae:	4a 95       	dec	r20
    74b0:	e2 f7       	brpl	.-8      	; 0x74aa <PORTD_set_pin_dir+0x6c>
    74b2:	26 2b       	or	r18, r22
    74b4:	fc 01       	movw	r30, r24
    74b6:	20 83       	st	Z, r18
    74b8:	10 c0       	rjmp	.+32     	; 0x74da <PORTD_set_pin_dir+0x9c>
    74ba:	89 81       	ldd	r24, Y+1	; 0x01
    74bc:	88 2f       	mov	r24, r24
    74be:	90 e0       	ldi	r25, 0x00	; 0
    74c0:	80 59       	subi	r24, 0x90	; 144
    74c2:	9b 4f       	sbci	r25, 0xFB	; 251
    74c4:	29 81       	ldd	r18, Y+1	; 0x01
    74c6:	22 2f       	mov	r18, r18
    74c8:	30 e0       	ldi	r19, 0x00	; 0
    74ca:	20 59       	subi	r18, 0x90	; 144
    74cc:	3b 4f       	sbci	r19, 0xFB	; 251
    74ce:	f9 01       	movw	r30, r18
    74d0:	20 81       	ld	r18, Z
    74d2:	28 60       	ori	r18, 0x08	; 8
    74d4:	fc 01       	movw	r30, r24
    74d6:	20 83       	st	Z, r18
    74d8:	00 00       	nop
    74da:	00 00       	nop
    74dc:	0f 90       	pop	r0
    74de:	0f 90       	pop	r0
    74e0:	df 91       	pop	r29
    74e2:	cf 91       	pop	r28
    74e4:	08 95       	ret

000074e6 <PORTE_set_pin_dir>:
    74e6:	cf 93       	push	r28
    74e8:	df 93       	push	r29
    74ea:	00 d0       	rcall	.+0      	; 0x74ec <PORTE_set_pin_dir+0x6>
    74ec:	cd b7       	in	r28, 0x3d	; 61
    74ee:	de b7       	in	r29, 0x3e	; 62
    74f0:	89 83       	std	Y+1, r24	; 0x01
    74f2:	6a 83       	std	Y+2, r22	; 0x02
    74f4:	8a 81       	ldd	r24, Y+2	; 0x02
    74f6:	88 2f       	mov	r24, r24
    74f8:	90 e0       	ldi	r25, 0x00	; 0
    74fa:	81 30       	cpi	r24, 0x01	; 1
    74fc:	91 05       	cpc	r25, r1
    74fe:	e1 f0       	breq	.+56     	; 0x7538 <PORTE_set_pin_dir+0x52>
    7500:	82 30       	cpi	r24, 0x02	; 2
    7502:	91 05       	cpc	r25, r1
    7504:	71 f1       	breq	.+92     	; 0x7562 <PORTE_set_pin_dir+0x7c>
    7506:	89 2b       	or	r24, r25
    7508:	09 f0       	breq	.+2      	; 0x750c <PORTE_set_pin_dir+0x26>
    750a:	3b c0       	rjmp	.+118    	; 0x7582 <PORTE_set_pin_dir+0x9c>
    750c:	80 e1       	ldi	r24, 0x10	; 16
    750e:	90 e0       	ldi	r25, 0x00	; 0
    7510:	20 e1       	ldi	r18, 0x10	; 16
    7512:	30 e0       	ldi	r19, 0x00	; 0
    7514:	f9 01       	movw	r30, r18
    7516:	20 81       	ld	r18, Z
    7518:	62 2f       	mov	r22, r18
    751a:	29 81       	ldd	r18, Y+1	; 0x01
    751c:	42 2f       	mov	r20, r18
    751e:	50 e0       	ldi	r21, 0x00	; 0
    7520:	21 e0       	ldi	r18, 0x01	; 1
    7522:	30 e0       	ldi	r19, 0x00	; 0
    7524:	02 c0       	rjmp	.+4      	; 0x752a <PORTE_set_pin_dir+0x44>
    7526:	22 0f       	add	r18, r18
    7528:	33 1f       	adc	r19, r19
    752a:	4a 95       	dec	r20
    752c:	e2 f7       	brpl	.-8      	; 0x7526 <PORTE_set_pin_dir+0x40>
    752e:	20 95       	com	r18
    7530:	26 23       	and	r18, r22
    7532:	fc 01       	movw	r30, r24
    7534:	20 83       	st	Z, r18
    7536:	25 c0       	rjmp	.+74     	; 0x7582 <PORTE_set_pin_dir+0x9c>
    7538:	80 e1       	ldi	r24, 0x10	; 16
    753a:	90 e0       	ldi	r25, 0x00	; 0
    753c:	20 e1       	ldi	r18, 0x10	; 16
    753e:	30 e0       	ldi	r19, 0x00	; 0
    7540:	f9 01       	movw	r30, r18
    7542:	20 81       	ld	r18, Z
    7544:	62 2f       	mov	r22, r18
    7546:	29 81       	ldd	r18, Y+1	; 0x01
    7548:	42 2f       	mov	r20, r18
    754a:	50 e0       	ldi	r21, 0x00	; 0
    754c:	21 e0       	ldi	r18, 0x01	; 1
    754e:	30 e0       	ldi	r19, 0x00	; 0
    7550:	02 c0       	rjmp	.+4      	; 0x7556 <PORTE_set_pin_dir+0x70>
    7552:	22 0f       	add	r18, r18
    7554:	33 1f       	adc	r19, r19
    7556:	4a 95       	dec	r20
    7558:	e2 f7       	brpl	.-8      	; 0x7552 <PORTE_set_pin_dir+0x6c>
    755a:	26 2b       	or	r18, r22
    755c:	fc 01       	movw	r30, r24
    755e:	20 83       	st	Z, r18
    7560:	10 c0       	rjmp	.+32     	; 0x7582 <PORTE_set_pin_dir+0x9c>
    7562:	89 81       	ldd	r24, Y+1	; 0x01
    7564:	88 2f       	mov	r24, r24
    7566:	90 e0       	ldi	r25, 0x00	; 0
    7568:	80 57       	subi	r24, 0x70	; 112
    756a:	9b 4f       	sbci	r25, 0xFB	; 251
    756c:	29 81       	ldd	r18, Y+1	; 0x01
    756e:	22 2f       	mov	r18, r18
    7570:	30 e0       	ldi	r19, 0x00	; 0
    7572:	20 57       	subi	r18, 0x70	; 112
    7574:	3b 4f       	sbci	r19, 0xFB	; 251
    7576:	f9 01       	movw	r30, r18
    7578:	20 81       	ld	r18, Z
    757a:	28 60       	ori	r18, 0x08	; 8
    757c:	fc 01       	movw	r30, r24
    757e:	20 83       	st	Z, r18
    7580:	00 00       	nop
    7582:	00 00       	nop
    7584:	0f 90       	pop	r0
    7586:	0f 90       	pop	r0
    7588:	df 91       	pop	r29
    758a:	cf 91       	pop	r28
    758c:	08 95       	ret

0000758e <PORTF_set_pin_dir>:
    758e:	cf 93       	push	r28
    7590:	df 93       	push	r29
    7592:	00 d0       	rcall	.+0      	; 0x7594 <PORTF_set_pin_dir+0x6>
    7594:	cd b7       	in	r28, 0x3d	; 61
    7596:	de b7       	in	r29, 0x3e	; 62
    7598:	89 83       	std	Y+1, r24	; 0x01
    759a:	6a 83       	std	Y+2, r22	; 0x02
    759c:	8a 81       	ldd	r24, Y+2	; 0x02
    759e:	88 2f       	mov	r24, r24
    75a0:	90 e0       	ldi	r25, 0x00	; 0
    75a2:	81 30       	cpi	r24, 0x01	; 1
    75a4:	91 05       	cpc	r25, r1
    75a6:	e1 f0       	breq	.+56     	; 0x75e0 <PORTF_set_pin_dir+0x52>
    75a8:	82 30       	cpi	r24, 0x02	; 2
    75aa:	91 05       	cpc	r25, r1
    75ac:	71 f1       	breq	.+92     	; 0x760a <PORTF_set_pin_dir+0x7c>
    75ae:	89 2b       	or	r24, r25
    75b0:	09 f0       	breq	.+2      	; 0x75b4 <PORTF_set_pin_dir+0x26>
    75b2:	3b c0       	rjmp	.+118    	; 0x762a <PORTF_set_pin_dir+0x9c>
    75b4:	84 e1       	ldi	r24, 0x14	; 20
    75b6:	90 e0       	ldi	r25, 0x00	; 0
    75b8:	24 e1       	ldi	r18, 0x14	; 20
    75ba:	30 e0       	ldi	r19, 0x00	; 0
    75bc:	f9 01       	movw	r30, r18
    75be:	20 81       	ld	r18, Z
    75c0:	62 2f       	mov	r22, r18
    75c2:	29 81       	ldd	r18, Y+1	; 0x01
    75c4:	42 2f       	mov	r20, r18
    75c6:	50 e0       	ldi	r21, 0x00	; 0
    75c8:	21 e0       	ldi	r18, 0x01	; 1
    75ca:	30 e0       	ldi	r19, 0x00	; 0
    75cc:	02 c0       	rjmp	.+4      	; 0x75d2 <PORTF_set_pin_dir+0x44>
    75ce:	22 0f       	add	r18, r18
    75d0:	33 1f       	adc	r19, r19
    75d2:	4a 95       	dec	r20
    75d4:	e2 f7       	brpl	.-8      	; 0x75ce <PORTF_set_pin_dir+0x40>
    75d6:	20 95       	com	r18
    75d8:	26 23       	and	r18, r22
    75da:	fc 01       	movw	r30, r24
    75dc:	20 83       	st	Z, r18
    75de:	25 c0       	rjmp	.+74     	; 0x762a <PORTF_set_pin_dir+0x9c>
    75e0:	84 e1       	ldi	r24, 0x14	; 20
    75e2:	90 e0       	ldi	r25, 0x00	; 0
    75e4:	24 e1       	ldi	r18, 0x14	; 20
    75e6:	30 e0       	ldi	r19, 0x00	; 0
    75e8:	f9 01       	movw	r30, r18
    75ea:	20 81       	ld	r18, Z
    75ec:	62 2f       	mov	r22, r18
    75ee:	29 81       	ldd	r18, Y+1	; 0x01
    75f0:	42 2f       	mov	r20, r18
    75f2:	50 e0       	ldi	r21, 0x00	; 0
    75f4:	21 e0       	ldi	r18, 0x01	; 1
    75f6:	30 e0       	ldi	r19, 0x00	; 0
    75f8:	02 c0       	rjmp	.+4      	; 0x75fe <PORTF_set_pin_dir+0x70>
    75fa:	22 0f       	add	r18, r18
    75fc:	33 1f       	adc	r19, r19
    75fe:	4a 95       	dec	r20
    7600:	e2 f7       	brpl	.-8      	; 0x75fa <PORTF_set_pin_dir+0x6c>
    7602:	26 2b       	or	r18, r22
    7604:	fc 01       	movw	r30, r24
    7606:	20 83       	st	Z, r18
    7608:	10 c0       	rjmp	.+32     	; 0x762a <PORTF_set_pin_dir+0x9c>
    760a:	89 81       	ldd	r24, Y+1	; 0x01
    760c:	88 2f       	mov	r24, r24
    760e:	90 e0       	ldi	r25, 0x00	; 0
    7610:	80 55       	subi	r24, 0x50	; 80
    7612:	9b 4f       	sbci	r25, 0xFB	; 251
    7614:	29 81       	ldd	r18, Y+1	; 0x01
    7616:	22 2f       	mov	r18, r18
    7618:	30 e0       	ldi	r19, 0x00	; 0
    761a:	20 55       	subi	r18, 0x50	; 80
    761c:	3b 4f       	sbci	r19, 0xFB	; 251
    761e:	f9 01       	movw	r30, r18
    7620:	20 81       	ld	r18, Z
    7622:	28 60       	ori	r18, 0x08	; 8
    7624:	fc 01       	movw	r30, r24
    7626:	20 83       	st	Z, r18
    7628:	00 00       	nop
    762a:	00 00       	nop
    762c:	0f 90       	pop	r0
    762e:	0f 90       	pop	r0
    7630:	df 91       	pop	r29
    7632:	cf 91       	pop	r28
    7634:	08 95       	ret

00007636 <_Z10fet_driverb>:

void fet_driver(bool state)
{
    7636:	cf 93       	push	r28
    7638:	df 93       	push	r29
    763a:	1f 92       	push	r1
    763c:	cd b7       	in	r28, 0x3d	; 61
    763e:	de b7       	in	r29, 0x3e	; 62
    7640:	89 83       	std	Y+1, r24	; 0x01
	if(state == ON)
    7642:	89 81       	ldd	r24, Y+1	; 0x01
    7644:	88 23       	and	r24, r24
    7646:	29 f0       	breq	.+10     	; 0x7652 <_Z10fet_driverb+0x1c>
	{
		PORTA_set_pin_level(FET_DRIVER_ENABLE, HIGH);
    7648:	61 e0       	ldi	r22, 0x01	; 1
    764a:	83 e0       	ldi	r24, 0x03	; 3
    764c:	0e 94 21 38 	call	0x7042	; 0x7042 <PORTA_set_pin_level>
	}
	else
	{
		PORTA_set_pin_level(FET_DRIVER_ENABLE, LOW);
	}
}
    7650:	04 c0       	rjmp	.+8      	; 0x765a <_Z10fet_driverb+0x24>
	{
		PORTA_set_pin_level(FET_DRIVER_ENABLE, HIGH);
	}
	else
	{
		PORTA_set_pin_level(FET_DRIVER_ENABLE, LOW);
    7652:	60 e0       	ldi	r22, 0x00	; 0
    7654:	83 e0       	ldi	r24, 0x03	; 3
    7656:	0e 94 21 38 	call	0x7042	; 0x7042 <PORTA_set_pin_level>
	}
}
    765a:	00 00       	nop
    765c:	0f 90       	pop	r0
    765e:	df 91       	pop	r29
    7660:	cf 91       	pop	r28
    7662:	08 95       	ret

00007664 <_Z10BINIO_initv>:
// 	
// 	PORTA.INTFLAGS = 0xFF; /* Clear all flags */
// }

void BINIO_init(void)
{
    7664:	cf 93       	push	r28
    7666:	df 93       	push	r29
    7668:	cd b7       	in	r28, 0x3d	; 61
    766a:	de b7       	in	r29, 0x3e	; 62
	/* PORTA *************************************************************************************/
	
	/* PORTA.PIN0 = TXDO USART */
	/* PORTA.PIN1 = RXD0 USART */
	
	PORTA_set_pin_dir(FAN_ENABLE, PORT_DIR_OUT);
    766c:	61 e0       	ldi	r22, 0x01	; 1
    766e:	81 e0       	ldi	r24, 0x01	; 1
    7670:	0e 94 cd 37 	call	0x6f9a	; 0x6f9a <PORTA_set_pin_dir>
	PORTA_set_pin_level(FAN_ENABLE, LOW);
    7674:	60 e0       	ldi	r22, 0x00	; 0
    7676:	81 e0       	ldi	r24, 0x01	; 1
    7678:	0e 94 21 38 	call	0x7042	; 0x7042 <PORTA_set_pin_level>
	
	PORTA_set_pin_dir(RTC_SQW, PORT_DIR_IN);
    767c:	60 e0       	ldi	r22, 0x00	; 0
    767e:	82 e0       	ldi	r24, 0x02	; 2
    7680:	0e 94 cd 37 	call	0x6f9a	; 0x6f9a <PORTA_set_pin_dir>
	PORTA_set_pin_pull_mode(RTC_SQW, PORT_PULL_UP);
    7684:	61 e0       	ldi	r22, 0x01	; 1
    7686:	82 e0       	ldi	r24, 0x02	; 2
    7688:	0e 94 79 37 	call	0x6ef2	; 0x6ef2 <PORTA_set_pin_pull_mode>
	PORTA_pin_set_isc(RTC_SQW, PORT_ISC_RISING_gc);
    768c:	62 e0       	ldi	r22, 0x02	; 2
    768e:	82 e0       	ldi	r24, 0x02	; 2
    7690:	0e 94 aa 37 	call	0x6f54	; 0x6f54 <PORTA_pin_set_isc>
	
	PORTA_set_pin_dir(FET_DRIVER_ENABLE, PORT_DIR_OUT);
    7694:	61 e0       	ldi	r22, 0x01	; 1
    7696:	83 e0       	ldi	r24, 0x03	; 3
    7698:	0e 94 cd 37 	call	0x6f9a	; 0x6f9a <PORTA_set_pin_dir>
	PORTA_set_pin_level(FET_DRIVER_ENABLE, LOW);
    769c:	60 e0       	ldi	r22, 0x00	; 0
    769e:	83 e0       	ldi	r24, 0x03	; 3
    76a0:	0e 94 21 38 	call	0x7042	; 0x7042 <PORTA_set_pin_level>
	
// 	PORTA_set_pin_dir(ANT_CONNECT_INT, PORT_DIR_IN);
// 	PORTA_set_pin_pull_mode(ANT_CONNECT_INT, PORT_PULL_UP);
// 	PORTA_pin_set_isc(ANT_CONNECT_INT, PORT_ISC_FALLING_gc);

	PORTA_set_pin_dir(WIFI_ENABLE, PORT_DIR_OUT);
    76a4:	61 e0       	ldi	r22, 0x01	; 1
    76a6:	85 e0       	ldi	r24, 0x05	; 5
    76a8:	0e 94 cd 37 	call	0x6f9a	; 0x6f9a <PORTA_set_pin_dir>
	PORTA_set_pin_level(WIFI_ENABLE, HIGH);
    76ac:	61 e0       	ldi	r22, 0x01	; 1
    76ae:	85 e0       	ldi	r24, 0x05	; 5
    76b0:	0e 94 21 38 	call	0x7042	; 0x7042 <PORTA_set_pin_level>
	
	PORTA_set_pin_dir(WIFI_RESET, PORT_DIR_OUT);
    76b4:	61 e0       	ldi	r22, 0x01	; 1
    76b6:	86 e0       	ldi	r24, 0x06	; 6
    76b8:	0e 94 cd 37 	call	0x6f9a	; 0x6f9a <PORTA_set_pin_dir>
	PORTA_set_pin_level(WIFI_RESET, LOW);
    76bc:	60 e0       	ldi	r22, 0x00	; 0
    76be:	86 e0       	ldi	r24, 0x06	; 6
    76c0:	0e 94 21 38 	call	0x7042	; 0x7042 <PORTA_set_pin_level>
	
	PORTA_set_pin_dir(V3V3_PWR_ENABLE, PORT_DIR_OUT);
    76c4:	61 e0       	ldi	r22, 0x01	; 1
    76c6:	87 e0       	ldi	r24, 0x07	; 7
    76c8:	0e 94 cd 37 	call	0x6f9a	; 0x6f9a <PORTA_set_pin_dir>
	PORTA_set_pin_level(V3V3_PWR_ENABLE, LOW);
    76cc:	60 e0       	ldi	r22, 0x00	; 0
    76ce:	87 e0       	ldi	r24, 0x07	; 7
    76d0:	0e 94 21 38 	call	0x7042	; 0x7042 <PORTA_set_pin_level>
	
	/* PORTB *************************************************************************************/

	PORTB_set_pin_dir(PROC_PTT_OUT, PORT_DIR_OUT);
    76d4:	61 e0       	ldi	r22, 0x01	; 1
    76d6:	80 e0       	ldi	r24, 0x00	; 0
    76d8:	0e 94 5b 38 	call	0x70b6	; 0x70b6 <PORTB_set_pin_dir>
	PORTB_set_pin_level(PROC_PTT_OUT, LOW);
    76dc:	60 e0       	ldi	r22, 0x00	; 0
    76de:	80 e0       	ldi	r24, 0x00	; 0
    76e0:	0e 94 af 38 	call	0x715e	; 0x715e <PORTB_set_pin_level>
	
	PORTB_set_pin_dir(PROC_TONE_OUT, PORT_DIR_OUT);
    76e4:	61 e0       	ldi	r22, 0x01	; 1
    76e6:	81 e0       	ldi	r24, 0x01	; 1
    76e8:	0e 94 5b 38 	call	0x70b6	; 0x70b6 <PORTB_set_pin_dir>
	PORTB_set_pin_level(PROC_TONE_OUT, LOW);
    76ec:	60 e0       	ldi	r22, 0x00	; 0
    76ee:	81 e0       	ldi	r24, 0x01	; 1
    76f0:	0e 94 af 38 	call	0x715e	; 0x715e <PORTB_set_pin_level>
	
	/* PORTB.PIN2 = SDA1 I2C */
	/* PORTB.PIN3 = SCL1 I2C */
	PORTB_set_pin_dir(MAIN_PWR_ENABLE, PORT_DIR_OUT);
    76f4:	61 e0       	ldi	r22, 0x01	; 1
    76f6:	84 e0       	ldi	r24, 0x04	; 4
    76f8:	0e 94 5b 38 	call	0x70b6	; 0x70b6 <PORTB_set_pin_dir>
	PORTB_set_pin_level(MAIN_PWR_ENABLE, LOW);
    76fc:	60 e0       	ldi	r22, 0x00	; 0
    76fe:	84 e0       	ldi	r24, 0x04	; 4
    7700:	0e 94 af 38 	call	0x715e	; 0x715e <PORTB_set_pin_level>
	
	PORTB_set_pin_dir(TX_FINAL_VOLTAGE_ENABLE, PORT_DIR_OUT);
    7704:	61 e0       	ldi	r22, 0x01	; 1
    7706:	85 e0       	ldi	r24, 0x05	; 5
    7708:	0e 94 5b 38 	call	0x70b6	; 0x70b6 <PORTB_set_pin_dir>
	PORTB_set_pin_level(TX_FINAL_VOLTAGE_ENABLE, LOW);
    770c:	60 e0       	ldi	r22, 0x00	; 0
    770e:	85 e0       	ldi	r24, 0x05	; 5
    7710:	0e 94 af 38 	call	0x715e	; 0x715e <PORTB_set_pin_level>
	/* PORTC.PIN0 = TXD1 USART TO_WIFI_RX */
	/* PORTC.PIN1 = RXD1 USART FROM_WIFI_TX */
	/* PORTC.PIN2 = SDA0 I2C */
	/* PORTC.PIN3 = SCL0 I2C */

	PORTC_set_pin_dir(LED_GREEN, PORT_DIR_OUT);
    7714:	61 e0       	ldi	r22, 0x01	; 1
    7716:	85 e0       	ldi	r24, 0x05	; 5
    7718:	0e 94 3d 39 	call	0x727a	; 0x727a <PORTC_set_pin_dir>
	PORTC_set_pin_level(LED_GREEN, LOW);
    771c:	60 e0       	ldi	r22, 0x00	; 0
    771e:	85 e0       	ldi	r24, 0x05	; 5
    7720:	0e 94 91 39 	call	0x7322	; 0x7322 <PORTC_set_pin_level>
	
	PORTC_set_pin_dir(LED_RED, PORT_DIR_OUT);
    7724:	61 e0       	ldi	r22, 0x01	; 1
    7726:	86 e0       	ldi	r24, 0x06	; 6
    7728:	0e 94 3d 39 	call	0x727a	; 0x727a <PORTC_set_pin_dir>
	PORTC_set_pin_level(LED_RED, LOW);
    772c:	60 e0       	ldi	r22, 0x00	; 0
    772e:	86 e0       	ldi	r24, 0x06	; 6
    7730:	0e 94 91 39 	call	0x7322	; 0x7322 <PORTC_set_pin_level>
	
	PORTC_set_pin_dir(SWITCH, PORT_DIR_IN);
    7734:	60 e0       	ldi	r22, 0x00	; 0
    7736:	87 e0       	ldi	r24, 0x07	; 7
    7738:	0e 94 3d 39 	call	0x727a	; 0x727a <PORTC_set_pin_dir>
	PORTC_set_pin_pull_mode(SWITCH, PORT_PULL_UP);
    773c:	61 e0       	ldi	r22, 0x01	; 1
    773e:	87 e0       	ldi	r24, 0x07	; 7
    7740:	0e 94 e9 38 	call	0x71d2	; 0x71d2 <PORTC_set_pin_pull_mode>
	PORTC_pin_set_isc(SWITCH, PORT_ISC_RISING_gc);
    7744:	62 e0       	ldi	r22, 0x02	; 2
    7746:	87 e0       	ldi	r24, 0x07	; 7
    7748:	0e 94 1a 39 	call	0x7234	; 0x7234 <PORTC_pin_set_isc>
	
	/* PORTD *************************************************************************************/
	PORTD_set_pin_dir(X80M_ANTENNA_DETECT_V, PORT_DIR_IN); /* use ADC for reading voltage at antenna detect pin */
    774c:	60 e0       	ldi	r22, 0x00	; 0
    774e:	80 e0       	ldi	r24, 0x00	; 0
    7750:	0e 94 1f 3a 	call	0x743e	; 0x743e <PORTD_set_pin_dir>
	
	PORTD_set_pin_dir(X80M_ANTENNA_DETECT, PORT_DIR_IN);
    7754:	60 e0       	ldi	r22, 0x00	; 0
    7756:	81 e0       	ldi	r24, 0x01	; 1
    7758:	0e 94 1f 3a 	call	0x743e	; 0x743e <PORTD_set_pin_dir>
	PORTD_set_pin_pull_mode(X80M_ANTENNA_DETECT, PORT_PULL_UP);
    775c:	61 e0       	ldi	r22, 0x01	; 1
    775e:	81 e0       	ldi	r24, 0x01	; 1
    7760:	0e 94 cb 39 	call	0x7396	; 0x7396 <PORTD_set_pin_pull_mode>
	PORTD_pin_set_isc(X80M_ANTENNA_DETECT, PORT_ISC_BOTHEDGES_gc);
    7764:	61 e0       	ldi	r22, 0x01	; 1
    7766:	81 e0       	ldi	r24, 0x01	; 1
    7768:	0e 94 fc 39 	call	0x73f8	; 0x73f8 <PORTD_pin_set_isc>
	/* PORTD.PIN3 = ACD3 Audio in TX_BATTERY_VOLTAGE */
	/* PORTD.PIN4 = ACD4 Audio in TX_12_VOLTAGE */
	/* PORTD.PIN5 = ACD5 Audio in TX_PA_VOLTAGE */
	/* PORTD.PIN6 = DAC0 voltage out DAC_OUTPUT */
	
	PORTD_set_pin_dir(WIFI_MODULE_DETECT, PORT_DIR_IN); /* Detect presence of Huzzah module */
    776c:	60 e0       	ldi	r22, 0x00	; 0
    776e:	87 e0       	ldi	r24, 0x07	; 7
    7770:	0e 94 1f 3a 	call	0x743e	; 0x743e <PORTD_set_pin_dir>
	PORTD_set_pin_pull_mode(WIFI_MODULE_DETECT, PORT_PULL_OFF);
    7774:	60 e0       	ldi	r22, 0x00	; 0
    7776:	87 e0       	ldi	r24, 0x07	; 7
    7778:	0e 94 cb 39 	call	0x7396	; 0x7396 <PORTD_set_pin_pull_mode>

	/* PORTE *************************************************************************************/
	PORTE_set_pin_dir(0, PORT_DIR_OFF); /* Unused */
    777c:	62 e0       	ldi	r22, 0x02	; 2
    777e:	80 e0       	ldi	r24, 0x00	; 0
    7780:	0e 94 73 3a 	call	0x74e6	; 0x74e6 <PORTE_set_pin_dir>
	PORTE_set_pin_dir(1, PORT_DIR_OFF); /* Unused */
    7784:	62 e0       	ldi	r22, 0x02	; 2
    7786:	81 e0       	ldi	r24, 0x01	; 1
    7788:	0e 94 73 3a 	call	0x74e6	; 0x74e6 <PORTE_set_pin_dir>
	PORTE_set_pin_dir(2, PORT_DIR_OFF); /* Unused */
    778c:	62 e0       	ldi	r22, 0x02	; 2
    778e:	82 e0       	ldi	r24, 0x02	; 2
    7790:	0e 94 73 3a 	call	0x74e6	; 0x74e6 <PORTE_set_pin_dir>
	PORTE_set_pin_dir(3, PORT_DIR_OFF); /* Unused */
    7794:	62 e0       	ldi	r22, 0x02	; 2
    7796:	83 e0       	ldi	r24, 0x03	; 3
    7798:	0e 94 73 3a 	call	0x74e6	; 0x74e6 <PORTE_set_pin_dir>

	/* PORTF *************************************************************************************/
	PORTF_set_pin_dir(X32KHZ_SQUAREWAVE, PORT_DIR_OFF);	
    779c:	62 e0       	ldi	r22, 0x02	; 2
    779e:	80 e0       	ldi	r24, 0x00	; 0
    77a0:	0e 94 c7 3a 	call	0x758e	; 0x758e <PORTF_set_pin_dir>
	PORTF_set_pin_dir(1, PORT_DIR_OFF);	/* Unused */
    77a4:	62 e0       	ldi	r22, 0x02	; 2
    77a6:	81 e0       	ldi	r24, 0x01	; 1
    77a8:	0e 94 c7 3a 	call	0x758e	; 0x758e <PORTF_set_pin_dir>
	PORTF_set_pin_dir(2, PORT_DIR_OFF); /* Unused */
    77ac:	62 e0       	ldi	r22, 0x02	; 2
    77ae:	82 e0       	ldi	r24, 0x02	; 2
    77b0:	0e 94 c7 3a 	call	0x758e	; 0x758e <PORTF_set_pin_dir>
	PORTF_set_pin_dir(3, PORT_DIR_OFF); /* Unused */
    77b4:	62 e0       	ldi	r22, 0x02	; 2
    77b6:	83 e0       	ldi	r24, 0x03	; 3
    77b8:	0e 94 c7 3a 	call	0x758e	; 0x758e <PORTF_set_pin_dir>
	PORTF_set_pin_dir(4, PORT_DIR_OFF); /* Unused */
    77bc:	62 e0       	ldi	r22, 0x02	; 2
    77be:	84 e0       	ldi	r24, 0x04	; 4
    77c0:	0e 94 c7 3a 	call	0x758e	; 0x758e <PORTF_set_pin_dir>
	PORTF_set_pin_dir(5, PORT_DIR_OFF); /* Unused */
    77c4:	62 e0       	ldi	r22, 0x02	; 2
    77c6:	85 e0       	ldi	r24, 0x05	; 5
    77c8:	0e 94 c7 3a 	call	0x758e	; 0x758e <PORTF_set_pin_dir>
	/* PORTF.PIN6 = Reset */
	
	/* PORT Pin Interrupts */
	PORTA.PIN2CTRL = 0x0A; /* Enable RTC SQW 1-sec interrupts */
    77cc:	80 e0       	ldi	r24, 0x00	; 0
    77ce:	94 e0       	ldi	r25, 0x04	; 4
    77d0:	2a e0       	ldi	r18, 0x0A	; 10
    77d2:	fc 01       	movw	r30, r24
    77d4:	22 8b       	std	Z+18, r18	; 0x12
	PORTD.PIN1CTRL = 0x09; /* Enable antenna change interrupts */
    77d6:	80 e6       	ldi	r24, 0x60	; 96
    77d8:	94 e0       	ldi	r25, 0x04	; 4
    77da:	29 e0       	ldi	r18, 0x09	; 9
    77dc:	fc 01       	movw	r30, r24
    77de:	21 8b       	std	Z+17, r18	; 0x11
}
    77e0:	00 00       	nop
    77e2:	df 91       	pop	r29
    77e4:	cf 91       	pop	r28
    77e6:	08 95       	ret

000077e8 <BOD_init>:
 * \brief Initialize Brownout Detector
 *
 * \return Initialization status.
 */
int8_t BOD_init()
{
    77e8:	cf 93       	push	r28
    77ea:	df 93       	push	r29
    77ec:	cd b7       	in	r28, 0x3d	; 61
    77ee:	de b7       	in	r29, 0x3e	; 62

	// ccp_write_io((void*)&(BOD.CTRLA),BOD_SLEEP_DIS_gc /* Disabled */);

	BOD.INTCTRL = 0 << BOD_VLMIE_bp        /* voltage level monitor interrrupt enable: disabled */
    77f0:	80 e8       	ldi	r24, 0x80	; 128
    77f2:	90 e0       	ldi	r25, 0x00	; 0
	              | BOD_VLMCFG_FALLING_gc; /* Interrupt when supply goes below VLM level */
    77f4:	fc 01       	movw	r30, r24
    77f6:	11 86       	std	Z+9, r1	; 0x09

	// BOD.VLMCTRLA = BOD_VLMLVL_5ABOVE_gc; /* VLM threshold 5% above BOD level */

	return 0;
    77f8:	80 e0       	ldi	r24, 0x00	; 0
}
    77fa:	df 91       	pop	r29
    77fc:	cf 91       	pop	r28
    77fe:	08 95       	ret

00007800 <ccp_write_io>:
 * \note Using IAR Embedded workbench, the choice of memory model has an impact
 *       on calling convention. The memory model is not visible to the
 *       preprocessor, so it must be defined in the Assembler preprocessor directives.
 */
static inline void ccp_write_io(void *addr, uint8_t value)
{
    7800:	cf 93       	push	r28
    7802:	df 93       	push	r29
    7804:	00 d0       	rcall	.+0      	; 0x7806 <ccp_write_io+0x6>
    7806:	1f 92       	push	r1
    7808:	cd b7       	in	r28, 0x3d	; 61
    780a:	de b7       	in	r29, 0x3e	; 62
    780c:	89 83       	std	Y+1, r24	; 0x01
    780e:	9a 83       	std	Y+2, r25	; 0x02
    7810:	6b 83       	std	Y+3, r22	; 0x03
	protected_write_io(addr, CCP_IOREG_gc, value);
    7812:	89 81       	ldd	r24, Y+1	; 0x01
    7814:	9a 81       	ldd	r25, Y+2	; 0x02
    7816:	4b 81       	ldd	r20, Y+3	; 0x03
    7818:	68 ed       	ldi	r22, 0xD8	; 216
    781a:	0e 94 a2 5e 	call	0xbd44	; 0xbd44 <protected_write_io>
}
    781e:	00 00       	nop
    7820:	23 96       	adiw	r28, 0x03	; 3
    7822:	cd bf       	out	0x3d, r28	; 61
    7824:	de bf       	out	0x3e, r29	; 62
    7826:	df 91       	pop	r29
    7828:	cf 91       	pop	r28
    782a:	08 95       	ret

0000782c <CLKCTRL_init>:
 * \brief Initialize clkctrl interface
 *
 * \return Initialization status.
 */
int8_t CLKCTRL_init()
{
    782c:	cf 93       	push	r28
    782e:	df 93       	push	r29
    7830:	cd b7       	in	r28, 0x3d	; 61
    7832:	de b7       	in	r29, 0x3e	; 62
	//		 | CLKCTRL_MULFAC_DISABLE_gc /* 1 */
	//		 | 0 << CLKCTRL_SOURCE_bp /* Select Source for PLL: disabled */);

	ccp_write_io((void*)&(CLKCTRL.OSCHFCTRLA),CLKCTRL_FRQSEL_24M_gc /* 4 */
			 | 0 << CLKCTRL_AUTOTUNE_bp /* Auto-Tune enable: disabled */
			 | 0 << CLKCTRL_RUNSTDBY_bp /* Run standby: disabled */);
    7834:	64 e2       	ldi	r22, 0x24	; 36
    7836:	88 e6       	ldi	r24, 0x68	; 104
    7838:	90 e0       	ldi	r25, 0x00	; 0
    783a:	0e 94 00 3c 	call	0x7800	; 0x7800 <ccp_write_io>
	// ccp_write_io((void*)&(CLKCTRL.MCLKCTRLA),CLKCTRL_CLKSEL_OSCHF_gc /* Internal high-frequency oscillator */
	//		 | 0 << CLKCTRL_CLKOUT_bp /* System clock out: disabled */);

	// ccp_write_io((void*)&(CLKCTRL.MCLKLOCK),0 << CLKCTRL_LOCKEN_bp /* lock enable: disabled */);

	return 0;
    783e:	80 e0       	ldi	r24, 0x00	; 0
}
    7840:	df 91       	pop	r29
    7842:	cf 91       	pop	r28
    7844:	08 95       	ret

00007846 <CPUINT_init>:
 * \brief Initialize cpuint interface
 *
 * \return Initialization status
 */
int8_t CPUINT_init()
{
    7846:	cf 93       	push	r28
    7848:	df 93       	push	r29
    784a:	cd b7       	in	r28, 0x3d	; 61
    784c:	de b7       	in	r29, 0x3e	; 62

	// CPUINT.LVL0PRI = 0x0 << CPUINT_LVL0PRI_gp; /* Interrupt Level Priority: 0x0 */

	// CPUINT.LVL1VEC = 0x0 << CPUINT_LVL1VEC_gp; /* Interrupt Vector with High Priority: 0x0 */

	ENABLE_INTERRUPTS();
    784e:	78 94       	sei

	return 0;
    7850:	80 e0       	ldi	r24, 0x00	; 0
}
    7852:	df 91       	pop	r29
    7854:	cf 91       	pop	r28
    7856:	08 95       	ret

00007858 <_ZL9VREF_initv>:
#define LSB_MASK                 (0x03)



static void VREF_init(void)
{
    7858:	cf 93       	push	r28
    785a:	df 93       	push	r29
    785c:	cd b7       	in	r28, 0x3d	; 61
    785e:	de b7       	in	r29, 0x3e	; 62
//	VREF.DAC0REF = VREF_REFSEL_2V048_gc /* Select the 2.048V Internal Voltage Reference for DAC */
//	VREF.DAC0REF = VREF_REFSEL_2V500_gc /* Select the 2.048V Internal Voltage Reference for DAC */
//	| VREF_ALWAYSON_bm;    /* Set the Voltage Reference in Always On mode */
	VREF.DAC0REF = VREF_REFSEL_2V500_gc; /* Select the 2.048V Internal Voltage Reference for DAC */
    7860:	80 ea       	ldi	r24, 0xA0	; 160
    7862:	90 e0       	ldi	r25, 0x00	; 0
    7864:	23 e0       	ldi	r18, 0x03	; 3
    7866:	fc 01       	movw	r30, r24
    7868:	22 83       	std	Z+2, r18	; 0x02
	/* Wait VREF start-up time */
	while(util_delay_ms(VREF_STARTUP_TIME_MS));
    786a:	6a e0       	ldi	r22, 0x0A	; 10
    786c:	70 e0       	ldi	r23, 0x00	; 0
    786e:	80 e0       	ldi	r24, 0x00	; 0
    7870:	90 e0       	ldi	r25, 0x00	; 0
    7872:	0e 94 6f 6e 	call	0xdcde	; 0xdcde <util_delay_ms>
    7876:	88 23       	and	r24, r24
    7878:	09 f0       	breq	.+2      	; 0x787c <_ZL9VREF_initv+0x24>
    787a:	f7 cf       	rjmp	.-18     	; 0x786a <_ZL9VREF_initv+0x12>
}
    787c:	00 00       	nop
    787e:	df 91       	pop	r29
    7880:	cf 91       	pop	r28
    7882:	08 95       	ret

00007884 <_Z9DAC0_initv>:

void DAC0_init(void)
{
    7884:	cf 93       	push	r28
    7886:	df 93       	push	r29
    7888:	cd b7       	in	r28, 0x3d	; 61
    788a:	de b7       	in	r29, 0x3e	; 62
	VREF_init();
    788c:	0e 94 2c 3c 	call	0x7858	; 0x7858 <_ZL9VREF_initv>
	/* Disable digital input buffer */
	PORTD.PIN6CTRL &= ~PORT_ISC_gm;
    7890:	80 e6       	ldi	r24, 0x60	; 96
    7892:	94 e0       	ldi	r25, 0x04	; 4
    7894:	20 e6       	ldi	r18, 0x60	; 96
    7896:	34 e0       	ldi	r19, 0x04	; 4
    7898:	f9 01       	movw	r30, r18
    789a:	26 89       	ldd	r18, Z+22	; 0x16
    789c:	28 7f       	andi	r18, 0xF8	; 248
    789e:	fc 01       	movw	r30, r24
    78a0:	26 8b       	std	Z+22, r18	; 0x16
	PORTD.PIN6CTRL |= PORT_ISC_INPUT_DISABLE_gc;
    78a2:	80 e6       	ldi	r24, 0x60	; 96
    78a4:	94 e0       	ldi	r25, 0x04	; 4
    78a6:	20 e6       	ldi	r18, 0x60	; 96
    78a8:	34 e0       	ldi	r19, 0x04	; 4
    78aa:	f9 01       	movw	r30, r18
    78ac:	26 89       	ldd	r18, Z+22	; 0x16
    78ae:	24 60       	ori	r18, 0x04	; 4
    78b0:	fc 01       	movw	r30, r24
    78b2:	26 8b       	std	Z+22, r18	; 0x16
	/* Disable pull-up resistor */
	PORTD.PIN6CTRL &= ~PORT_PULLUPEN_bm;
    78b4:	80 e6       	ldi	r24, 0x60	; 96
    78b6:	94 e0       	ldi	r25, 0x04	; 4
    78b8:	20 e6       	ldi	r18, 0x60	; 96
    78ba:	34 e0       	ldi	r19, 0x04	; 4
    78bc:	f9 01       	movw	r30, r18
    78be:	26 89       	ldd	r18, Z+22	; 0x16
    78c0:	27 7f       	andi	r18, 0xF7	; 247
    78c2:	fc 01       	movw	r30, r24
    78c4:	26 8b       	std	Z+22, r18	; 0x16
	DAC0.CTRLA = DAC_ENABLE_bm          /* Enable DAC */
    78c6:	80 ea       	ldi	r24, 0xA0	; 160
    78c8:	96 e0       	ldi	r25, 0x06	; 6
	| DAC_OUTEN_bm           /* Enable output buffer */
	| DAC_RUNSTDBY_bm;       /* Enable Run in Standby mode */
    78ca:	21 ec       	ldi	r18, 0xC1	; 193
    78cc:	fc 01       	movw	r30, r24
    78ce:	20 83       	st	Z, r18
	
	DAC0_setVal(DAC_DEFAULT_VALUE);
    78d0:	80 e0       	ldi	r24, 0x00	; 0
    78d2:	90 e0       	ldi	r25, 0x00	; 0
    78d4:	0e 94 70 3c 	call	0x78e0	; 0x78e0 <_Z11DAC0_setValj>
}
    78d8:	00 00       	nop
    78da:	df 91       	pop	r29
    78dc:	cf 91       	pop	r28
    78de:	08 95       	ret

000078e0 <_Z11DAC0_setValj>:

void DAC0_setVal(uint16_t value)
{
    78e0:	cf 93       	push	r28
    78e2:	df 93       	push	r29
    78e4:	00 d0       	rcall	.+0      	; 0x78e6 <_Z11DAC0_setValj+0x6>
    78e6:	cd b7       	in	r28, 0x3d	; 61
    78e8:	de b7       	in	r29, 0x3e	; 62
    78ea:	89 83       	std	Y+1, r24	; 0x01
    78ec:	9a 83       	std	Y+2, r25	; 0x02
	/* Store the two LSbs in DAC0.DATAL */
	DAC0.DATAL = (value & LSB_MASK) << 6;
    78ee:	80 ea       	ldi	r24, 0xA0	; 160
    78f0:	96 e0       	ldi	r25, 0x06	; 6
    78f2:	29 81       	ldd	r18, Y+1	; 0x01
    78f4:	22 95       	swap	r18
    78f6:	22 0f       	add	r18, r18
    78f8:	22 0f       	add	r18, r18
    78fa:	20 7c       	andi	r18, 0xC0	; 192
    78fc:	fc 01       	movw	r30, r24
    78fe:	22 83       	std	Z+2, r18	; 0x02
	/* Store the eight MSbs in DAC0.DATAH */
	DAC0.DATAH = value >> 2;
    7900:	80 ea       	ldi	r24, 0xA0	; 160
    7902:	96 e0       	ldi	r25, 0x06	; 6
    7904:	29 81       	ldd	r18, Y+1	; 0x01
    7906:	3a 81       	ldd	r19, Y+2	; 0x02
    7908:	36 95       	lsr	r19
    790a:	27 95       	ror	r18
    790c:	36 95       	lsr	r19
    790e:	27 95       	ror	r18
    7910:	fc 01       	movw	r30, r24
    7912:	23 83       	std	Z+3, r18	; 0x03
}
    7914:	00 00       	nop
    7916:	0f 90       	pop	r0
    7918:	0f 90       	pop	r0
    791a:	df 91       	pop	r29
    791c:	cf 91       	pop	r28
    791e:	08 95       	ret

00007920 <PORTC_set_pin_dir>:
 *                      PORT_DIR_OUT = Data direction out
 *                      PORT_DIR_OFF = Disables the pin
 *                      (low power state)
 */
static inline void PORTC_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
    7920:	cf 93       	push	r28
    7922:	df 93       	push	r29
    7924:	00 d0       	rcall	.+0      	; 0x7926 <PORTC_set_pin_dir+0x6>
    7926:	cd b7       	in	r28, 0x3d	; 61
    7928:	de b7       	in	r29, 0x3e	; 62
    792a:	89 83       	std	Y+1, r24	; 0x01
    792c:	6a 83       	std	Y+2, r22	; 0x02
	switch (dir) {
    792e:	8a 81       	ldd	r24, Y+2	; 0x02
    7930:	88 2f       	mov	r24, r24
    7932:	90 e0       	ldi	r25, 0x00	; 0
    7934:	81 30       	cpi	r24, 0x01	; 1
    7936:	91 05       	cpc	r25, r1
    7938:	e1 f0       	breq	.+56     	; 0x7972 <PORTC_set_pin_dir+0x52>
    793a:	82 30       	cpi	r24, 0x02	; 2
    793c:	91 05       	cpc	r25, r1
    793e:	71 f1       	breq	.+92     	; 0x799c <PORTC_set_pin_dir+0x7c>
    7940:	89 2b       	or	r24, r25
    7942:	09 f0       	breq	.+2      	; 0x7946 <PORTC_set_pin_dir+0x26>
		break;
	case PORT_DIR_OFF:
		*((uint8_t *)&PORTC + 0x10 + pin) |= 1 << PORT_PULLUPEN_bp;
		break;
	default:
		break;
    7944:	3b c0       	rjmp	.+118    	; 0x79bc <PORTC_set_pin_dir+0x9c>
 */
static inline void PORTC_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTC.DIR &= ~(1 << pin);
    7946:	88 e0       	ldi	r24, 0x08	; 8
    7948:	90 e0       	ldi	r25, 0x00	; 0
    794a:	28 e0       	ldi	r18, 0x08	; 8
    794c:	30 e0       	ldi	r19, 0x00	; 0
    794e:	f9 01       	movw	r30, r18
    7950:	20 81       	ld	r18, Z
    7952:	62 2f       	mov	r22, r18
    7954:	29 81       	ldd	r18, Y+1	; 0x01
    7956:	42 2f       	mov	r20, r18
    7958:	50 e0       	ldi	r21, 0x00	; 0
    795a:	21 e0       	ldi	r18, 0x01	; 1
    795c:	30 e0       	ldi	r19, 0x00	; 0
    795e:	02 c0       	rjmp	.+4      	; 0x7964 <PORTC_set_pin_dir+0x44>
    7960:	22 0f       	add	r18, r18
    7962:	33 1f       	adc	r19, r19
    7964:	4a 95       	dec	r20
    7966:	e2 f7       	brpl	.-8      	; 0x7960 <PORTC_set_pin_dir+0x40>
    7968:	20 95       	com	r18
    796a:	26 23       	and	r18, r22
    796c:	fc 01       	movw	r30, r24
    796e:	20 83       	st	Z, r18
		break;
    7970:	25 c0       	rjmp	.+74     	; 0x79bc <PORTC_set_pin_dir+0x9c>
	case PORT_DIR_OUT:
		VPORTC.DIR |= (1 << pin);
    7972:	88 e0       	ldi	r24, 0x08	; 8
    7974:	90 e0       	ldi	r25, 0x00	; 0
    7976:	28 e0       	ldi	r18, 0x08	; 8
    7978:	30 e0       	ldi	r19, 0x00	; 0
    797a:	f9 01       	movw	r30, r18
    797c:	20 81       	ld	r18, Z
    797e:	62 2f       	mov	r22, r18
    7980:	29 81       	ldd	r18, Y+1	; 0x01
    7982:	42 2f       	mov	r20, r18
    7984:	50 e0       	ldi	r21, 0x00	; 0
    7986:	21 e0       	ldi	r18, 0x01	; 1
    7988:	30 e0       	ldi	r19, 0x00	; 0
    798a:	02 c0       	rjmp	.+4      	; 0x7990 <PORTC_set_pin_dir+0x70>
    798c:	22 0f       	add	r18, r18
    798e:	33 1f       	adc	r19, r19
    7990:	4a 95       	dec	r20
    7992:	e2 f7       	brpl	.-8      	; 0x798c <PORTC_set_pin_dir+0x6c>
    7994:	26 2b       	or	r18, r22
    7996:	fc 01       	movw	r30, r24
    7998:	20 83       	st	Z, r18
		break;
    799a:	10 c0       	rjmp	.+32     	; 0x79bc <PORTC_set_pin_dir+0x9c>
	case PORT_DIR_OFF:
		*((uint8_t *)&PORTC + 0x10 + pin) |= 1 << PORT_PULLUPEN_bp;
    799c:	89 81       	ldd	r24, Y+1	; 0x01
    799e:	88 2f       	mov	r24, r24
    79a0:	90 e0       	ldi	r25, 0x00	; 0
    79a2:	80 5b       	subi	r24, 0xB0	; 176
    79a4:	9b 4f       	sbci	r25, 0xFB	; 251
    79a6:	29 81       	ldd	r18, Y+1	; 0x01
    79a8:	22 2f       	mov	r18, r18
    79aa:	30 e0       	ldi	r19, 0x00	; 0
    79ac:	20 5b       	subi	r18, 0xB0	; 176
    79ae:	3b 4f       	sbci	r19, 0xFB	; 251
    79b0:	f9 01       	movw	r30, r18
    79b2:	20 81       	ld	r18, Z
    79b4:	28 60       	ori	r18, 0x08	; 8
    79b6:	fc 01       	movw	r30, r24
    79b8:	20 83       	st	Z, r18
		break;
    79ba:	00 00       	nop
	default:
		break;
	}
}
    79bc:	00 00       	nop
    79be:	0f 90       	pop	r0
    79c0:	0f 90       	pop	r0
    79c2:	df 91       	pop	r29
    79c4:	cf 91       	pop	r28
    79c6:	08 95       	ret

000079c8 <PORTC_set_pin_level>:
 * \param[in] pin       The pin number within port
 * \param[in] level true  = Pin level set to "high" state
 *                  false = Pin level set to "low" state
 */
static inline void PORTC_set_pin_level(const uint8_t pin, const bool level)
{
    79c8:	cf 93       	push	r28
    79ca:	df 93       	push	r29
    79cc:	00 d0       	rcall	.+0      	; 0x79ce <PORTC_set_pin_level+0x6>
    79ce:	cd b7       	in	r28, 0x3d	; 61
    79d0:	de b7       	in	r29, 0x3e	; 62
    79d2:	89 83       	std	Y+1, r24	; 0x01
    79d4:	6a 83       	std	Y+2, r22	; 0x02
	if (level == true) {
    79d6:	8a 81       	ldd	r24, Y+2	; 0x02
    79d8:	88 23       	and	r24, r24
    79da:	a9 f0       	breq	.+42     	; 0x7a06 <PORTC_set_pin_level+0x3e>
		VPORTC.OUT |= (1 << pin);
    79dc:	88 e0       	ldi	r24, 0x08	; 8
    79de:	90 e0       	ldi	r25, 0x00	; 0
    79e0:	28 e0       	ldi	r18, 0x08	; 8
    79e2:	30 e0       	ldi	r19, 0x00	; 0
    79e4:	f9 01       	movw	r30, r18
    79e6:	21 81       	ldd	r18, Z+1	; 0x01
    79e8:	62 2f       	mov	r22, r18
    79ea:	29 81       	ldd	r18, Y+1	; 0x01
    79ec:	42 2f       	mov	r20, r18
    79ee:	50 e0       	ldi	r21, 0x00	; 0
    79f0:	21 e0       	ldi	r18, 0x01	; 1
    79f2:	30 e0       	ldi	r19, 0x00	; 0
    79f4:	02 c0       	rjmp	.+4      	; 0x79fa <PORTC_set_pin_level+0x32>
    79f6:	22 0f       	add	r18, r18
    79f8:	33 1f       	adc	r19, r19
    79fa:	4a 95       	dec	r20
    79fc:	e2 f7       	brpl	.-8      	; 0x79f6 <PORTC_set_pin_level+0x2e>
    79fe:	26 2b       	or	r18, r22
    7a00:	fc 01       	movw	r30, r24
    7a02:	21 83       	std	Z+1, r18	; 0x01
	} else {
		VPORTC.OUT &= ~(1 << pin);
	}
}
    7a04:	15 c0       	rjmp	.+42     	; 0x7a30 <PORTC_set_pin_level+0x68>
static inline void PORTC_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTC.OUT |= (1 << pin);
	} else {
		VPORTC.OUT &= ~(1 << pin);
    7a06:	88 e0       	ldi	r24, 0x08	; 8
    7a08:	90 e0       	ldi	r25, 0x00	; 0
    7a0a:	28 e0       	ldi	r18, 0x08	; 8
    7a0c:	30 e0       	ldi	r19, 0x00	; 0
    7a0e:	f9 01       	movw	r30, r18
    7a10:	21 81       	ldd	r18, Z+1	; 0x01
    7a12:	62 2f       	mov	r22, r18
    7a14:	29 81       	ldd	r18, Y+1	; 0x01
    7a16:	42 2f       	mov	r20, r18
    7a18:	50 e0       	ldi	r21, 0x00	; 0
    7a1a:	21 e0       	ldi	r18, 0x01	; 1
    7a1c:	30 e0       	ldi	r19, 0x00	; 0
    7a1e:	02 c0       	rjmp	.+4      	; 0x7a24 <PORTC_set_pin_level+0x5c>
    7a20:	22 0f       	add	r18, r18
    7a22:	33 1f       	adc	r19, r19
    7a24:	4a 95       	dec	r20
    7a26:	e2 f7       	brpl	.-8      	; 0x7a20 <PORTC_set_pin_level+0x58>
    7a28:	20 95       	com	r18
    7a2a:	26 23       	and	r18, r22
    7a2c:	fc 01       	movw	r30, r24
    7a2e:	21 83       	std	Z+1, r18	; 0x01
	}
}
    7a30:	00 00       	nop
    7a32:	0f 90       	pop	r0
    7a34:	0f 90       	pop	r0
    7a36:	df 91       	pop	r29
    7a38:	cf 91       	pop	r28
    7a3a:	08 95       	ret

00007a3c <_ZL15LED_set_RED_dir8port_dir>:
 *                      PORT_DIR_OUT = Data direction out
 *                      PORT_DIR_OFF = Disables the pin
 *                      (low power state)
 */
static inline void LED_set_RED_dir(const enum port_dir dir)
{
    7a3c:	cf 93       	push	r28
    7a3e:	df 93       	push	r29
    7a40:	1f 92       	push	r1
    7a42:	cd b7       	in	r28, 0x3d	; 61
    7a44:	de b7       	in	r29, 0x3e	; 62
    7a46:	89 83       	std	Y+1, r24	; 0x01
	PORTC_set_pin_dir(6, dir);
    7a48:	69 81       	ldd	r22, Y+1	; 0x01
    7a4a:	86 e0       	ldi	r24, 0x06	; 6
    7a4c:	0e 94 90 3c 	call	0x7920	; 0x7920 <PORTC_set_pin_dir>
}
    7a50:	00 00       	nop
    7a52:	0f 90       	pop	r0
    7a54:	df 91       	pop	r29
    7a56:	cf 91       	pop	r28
    7a58:	08 95       	ret

00007a5a <_ZL17LED_set_GREEN_dir8port_dir>:
 *                      PORT_DIR_OUT = Data direction out
 *                      PORT_DIR_OFF = Disables the pin
 *                      (low power state)
 */
static inline void LED_set_GREEN_dir(const enum port_dir dir)
{
    7a5a:	cf 93       	push	r28
    7a5c:	df 93       	push	r29
    7a5e:	1f 92       	push	r1
    7a60:	cd b7       	in	r28, 0x3d	; 61
    7a62:	de b7       	in	r29, 0x3e	; 62
    7a64:	89 83       	std	Y+1, r24	; 0x01
	PORTC_set_pin_dir(5, dir);
    7a66:	69 81       	ldd	r22, Y+1	; 0x01
    7a68:	85 e0       	ldi	r24, 0x05	; 5
    7a6a:	0e 94 90 3c 	call	0x7920	; 0x7920 <PORTC_set_pin_dir>
}
    7a6e:	00 00       	nop
    7a70:	0f 90       	pop	r0
    7a72:	df 91       	pop	r29
    7a74:	cf 91       	pop	r28
    7a76:	08 95       	ret

00007a78 <_ZL17LED_set_RED_levelb>:
 *
 * \param[in] level true  = Pin level set to "high" state
 *                  false = Pin level set to "low" state
 */
static inline void LED_set_RED_level(const bool level)
{
    7a78:	cf 93       	push	r28
    7a7a:	df 93       	push	r29
    7a7c:	1f 92       	push	r1
    7a7e:	cd b7       	in	r28, 0x3d	; 61
    7a80:	de b7       	in	r29, 0x3e	; 62
    7a82:	89 83       	std	Y+1, r24	; 0x01
	PORTC_set_pin_level(6, level); /* Low == LED off */
    7a84:	69 81       	ldd	r22, Y+1	; 0x01
    7a86:	86 e0       	ldi	r24, 0x06	; 6
    7a88:	0e 94 e4 3c 	call	0x79c8	; 0x79c8 <PORTC_set_pin_level>
}
    7a8c:	00 00       	nop
    7a8e:	0f 90       	pop	r0
    7a90:	df 91       	pop	r29
    7a92:	cf 91       	pop	r28
    7a94:	08 95       	ret

00007a96 <_ZL19LED_set_GREEN_levelb>:
 *
 * \param[in] level true  = Pin level set to "high" state
 *                  false = Pin level set to "low" state
 */
static inline void LED_set_GREEN_level(const bool level)
{
    7a96:	cf 93       	push	r28
    7a98:	df 93       	push	r29
    7a9a:	1f 92       	push	r1
    7a9c:	cd b7       	in	r28, 0x3d	; 61
    7a9e:	de b7       	in	r29, 0x3e	; 62
    7aa0:	89 83       	std	Y+1, r24	; 0x01
	PORTC_set_pin_level(5, level); /* Low == LED off */
    7aa2:	69 81       	ldd	r22, Y+1	; 0x01
    7aa4:	85 e0       	ldi	r24, 0x05	; 5
    7aa6:	0e 94 e4 3c 	call	0x79c8	; 0x79c8 <PORTC_set_pin_level>
}
    7aaa:	00 00       	nop
    7aac:	0f 90       	pop	r0
    7aae:	df 91       	pop	r29
    7ab0:	cf 91       	pop	r28
    7ab2:	08 95       	ret

00007ab4 <mcu_init>:
#ifdef __cplusplus
extern "C" {
#endif

void mcu_init(void)
{
    7ab4:	cf 93       	push	r28
    7ab6:	df 93       	push	r29
    7ab8:	cd b7       	in	r28, 0x3d	; 61
    7aba:	de b7       	in	r29, 0x3e	; 62
    7abc:	26 97       	sbiw	r28, 0x06	; 6
    7abe:	cd bf       	out	0x3d, r28	; 61
    7ac0:	de bf       	out	0x3e, r29	; 62
	 * disables all peripherals to save power. Driver shall enable
	 * peripheral if used */

	/* Set all pins to low power mode */

	for (uint8_t i = 0; i < 8; i++) {
    7ac2:	19 82       	std	Y+1, r1	; 0x01
    7ac4:	89 81       	ldd	r24, Y+1	; 0x01
    7ac6:	88 30       	cpi	r24, 0x08	; 8
    7ac8:	98 f4       	brcc	.+38     	; 0x7af0 <mcu_init+0x3c>
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    7aca:	89 81       	ldd	r24, Y+1	; 0x01
    7acc:	88 2f       	mov	r24, r24
    7ace:	90 e0       	ldi	r25, 0x00	; 0
    7ad0:	80 5f       	subi	r24, 0xF0	; 240
    7ad2:	9b 4f       	sbci	r25, 0xFB	; 251
    7ad4:	29 81       	ldd	r18, Y+1	; 0x01
    7ad6:	22 2f       	mov	r18, r18
    7ad8:	30 e0       	ldi	r19, 0x00	; 0
    7ada:	20 5f       	subi	r18, 0xF0	; 240
    7adc:	3b 4f       	sbci	r19, 0xFB	; 251
    7ade:	f9 01       	movw	r30, r18
    7ae0:	20 81       	ld	r18, Z
    7ae2:	28 60       	ori	r18, 0x08	; 8
    7ae4:	fc 01       	movw	r30, r24
    7ae6:	20 83       	st	Z, r18
	 * disables all peripherals to save power. Driver shall enable
	 * peripheral if used */

	/* Set all pins to low power mode */

	for (uint8_t i = 0; i < 8; i++) {
    7ae8:	89 81       	ldd	r24, Y+1	; 0x01
    7aea:	8f 5f       	subi	r24, 0xFF	; 255
    7aec:	89 83       	std	Y+1, r24	; 0x01
    7aee:	ea cf       	rjmp	.-44     	; 0x7ac4 <mcu_init+0x10>
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    7af0:	1a 82       	std	Y+2, r1	; 0x02
    7af2:	8a 81       	ldd	r24, Y+2	; 0x02
    7af4:	88 30       	cpi	r24, 0x08	; 8
    7af6:	98 f4       	brcc	.+38     	; 0x7b1e <mcu_init+0x6a>
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    7af8:	8a 81       	ldd	r24, Y+2	; 0x02
    7afa:	88 2f       	mov	r24, r24
    7afc:	90 e0       	ldi	r25, 0x00	; 0
    7afe:	80 5d       	subi	r24, 0xD0	; 208
    7b00:	9b 4f       	sbci	r25, 0xFB	; 251
    7b02:	2a 81       	ldd	r18, Y+2	; 0x02
    7b04:	22 2f       	mov	r18, r18
    7b06:	30 e0       	ldi	r19, 0x00	; 0
    7b08:	20 5d       	subi	r18, 0xD0	; 208
    7b0a:	3b 4f       	sbci	r19, 0xFB	; 251
    7b0c:	f9 01       	movw	r30, r18
    7b0e:	20 81       	ld	r18, Z
    7b10:	28 60       	ori	r18, 0x08	; 8
    7b12:	fc 01       	movw	r30, r24
    7b14:	20 83       	st	Z, r18

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    7b16:	8a 81       	ldd	r24, Y+2	; 0x02
    7b18:	8f 5f       	subi	r24, 0xFF	; 255
    7b1a:	8a 83       	std	Y+2, r24	; 0x02
    7b1c:	ea cf       	rjmp	.-44     	; 0x7af2 <mcu_init+0x3e>
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    7b1e:	1b 82       	std	Y+3, r1	; 0x03
    7b20:	8b 81       	ldd	r24, Y+3	; 0x03
    7b22:	88 30       	cpi	r24, 0x08	; 8
    7b24:	98 f4       	brcc	.+38     	; 0x7b4c <mcu_init+0x98>
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    7b26:	8b 81       	ldd	r24, Y+3	; 0x03
    7b28:	88 2f       	mov	r24, r24
    7b2a:	90 e0       	ldi	r25, 0x00	; 0
    7b2c:	80 5b       	subi	r24, 0xB0	; 176
    7b2e:	9b 4f       	sbci	r25, 0xFB	; 251
    7b30:	2b 81       	ldd	r18, Y+3	; 0x03
    7b32:	22 2f       	mov	r18, r18
    7b34:	30 e0       	ldi	r19, 0x00	; 0
    7b36:	20 5b       	subi	r18, 0xB0	; 176
    7b38:	3b 4f       	sbci	r19, 0xFB	; 251
    7b3a:	f9 01       	movw	r30, r18
    7b3c:	20 81       	ld	r18, Z
    7b3e:	28 60       	ori	r18, 0x08	; 8
    7b40:	fc 01       	movw	r30, r24
    7b42:	20 83       	st	Z, r18

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    7b44:	8b 81       	ldd	r24, Y+3	; 0x03
    7b46:	8f 5f       	subi	r24, 0xFF	; 255
    7b48:	8b 83       	std	Y+3, r24	; 0x03
    7b4a:	ea cf       	rjmp	.-44     	; 0x7b20 <mcu_init+0x6c>
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    7b4c:	1c 82       	std	Y+4, r1	; 0x04
    7b4e:	8c 81       	ldd	r24, Y+4	; 0x04
    7b50:	88 30       	cpi	r24, 0x08	; 8
    7b52:	98 f4       	brcc	.+38     	; 0x7b7a <mcu_init+0xc6>
		*((uint8_t *)&PORTD + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    7b54:	8c 81       	ldd	r24, Y+4	; 0x04
    7b56:	88 2f       	mov	r24, r24
    7b58:	90 e0       	ldi	r25, 0x00	; 0
    7b5a:	80 59       	subi	r24, 0x90	; 144
    7b5c:	9b 4f       	sbci	r25, 0xFB	; 251
    7b5e:	2c 81       	ldd	r18, Y+4	; 0x04
    7b60:	22 2f       	mov	r18, r18
    7b62:	30 e0       	ldi	r19, 0x00	; 0
    7b64:	20 59       	subi	r18, 0x90	; 144
    7b66:	3b 4f       	sbci	r19, 0xFB	; 251
    7b68:	f9 01       	movw	r30, r18
    7b6a:	20 81       	ld	r18, Z
    7b6c:	28 60       	ori	r18, 0x08	; 8
    7b6e:	fc 01       	movw	r30, r24
    7b70:	20 83       	st	Z, r18

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    7b72:	8c 81       	ldd	r24, Y+4	; 0x04
    7b74:	8f 5f       	subi	r24, 0xFF	; 255
    7b76:	8c 83       	std	Y+4, r24	; 0x04
    7b78:	ea cf       	rjmp	.-44     	; 0x7b4e <mcu_init+0x9a>
		*((uint8_t *)&PORTD + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    7b7a:	1d 82       	std	Y+5, r1	; 0x05
    7b7c:	8d 81       	ldd	r24, Y+5	; 0x05
    7b7e:	88 30       	cpi	r24, 0x08	; 8
    7b80:	98 f4       	brcc	.+38     	; 0x7ba8 <mcu_init+0xf4>
		*((uint8_t *)&PORTE + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    7b82:	8d 81       	ldd	r24, Y+5	; 0x05
    7b84:	88 2f       	mov	r24, r24
    7b86:	90 e0       	ldi	r25, 0x00	; 0
    7b88:	80 57       	subi	r24, 0x70	; 112
    7b8a:	9b 4f       	sbci	r25, 0xFB	; 251
    7b8c:	2d 81       	ldd	r18, Y+5	; 0x05
    7b8e:	22 2f       	mov	r18, r18
    7b90:	30 e0       	ldi	r19, 0x00	; 0
    7b92:	20 57       	subi	r18, 0x70	; 112
    7b94:	3b 4f       	sbci	r19, 0xFB	; 251
    7b96:	f9 01       	movw	r30, r18
    7b98:	20 81       	ld	r18, Z
    7b9a:	28 60       	ori	r18, 0x08	; 8
    7b9c:	fc 01       	movw	r30, r24
    7b9e:	20 83       	st	Z, r18

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTD + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    7ba0:	8d 81       	ldd	r24, Y+5	; 0x05
    7ba2:	8f 5f       	subi	r24, 0xFF	; 255
    7ba4:	8d 83       	std	Y+5, r24	; 0x05
    7ba6:	ea cf       	rjmp	.-44     	; 0x7b7c <mcu_init+0xc8>
		*((uint8_t *)&PORTE + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    7ba8:	1e 82       	std	Y+6, r1	; 0x06
    7baa:	8e 81       	ldd	r24, Y+6	; 0x06
    7bac:	88 30       	cpi	r24, 0x08	; 8
    7bae:	98 f4       	brcc	.+38     	; 0x7bd6 <mcu_init+0x122>
		*((uint8_t *)&PORTF + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    7bb0:	8e 81       	ldd	r24, Y+6	; 0x06
    7bb2:	88 2f       	mov	r24, r24
    7bb4:	90 e0       	ldi	r25, 0x00	; 0
    7bb6:	80 55       	subi	r24, 0x50	; 80
    7bb8:	9b 4f       	sbci	r25, 0xFB	; 251
    7bba:	2e 81       	ldd	r18, Y+6	; 0x06
    7bbc:	22 2f       	mov	r18, r18
    7bbe:	30 e0       	ldi	r19, 0x00	; 0
    7bc0:	20 55       	subi	r18, 0x50	; 80
    7bc2:	3b 4f       	sbci	r19, 0xFB	; 251
    7bc4:	f9 01       	movw	r30, r18
    7bc6:	20 81       	ld	r18, Z
    7bc8:	28 60       	ori	r18, 0x08	; 8
    7bca:	fc 01       	movw	r30, r24
    7bcc:	20 83       	st	Z, r18

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTE + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    7bce:	8e 81       	ldd	r24, Y+6	; 0x06
    7bd0:	8f 5f       	subi	r24, 0xFF	; 255
    7bd2:	8e 83       	std	Y+6, r24	; 0x06
    7bd4:	ea cf       	rjmp	.-44     	; 0x7baa <mcu_init+0xf6>
		*((uint8_t *)&PORTF + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}
}
    7bd6:	00 00       	nop
    7bd8:	26 96       	adiw	r28, 0x06	; 6
    7bda:	cd bf       	out	0x3d, r28	; 61
    7bdc:	de bf       	out	0x3e, r29	; 62
    7bde:	df 91       	pop	r29
    7be0:	cf 91       	pop	r28
    7be2:	08 95       	ret

00007be4 <system_init>:

/**
 * \brief System initialization
 */
void system_init()
{
    7be4:	cf 93       	push	r28
    7be6:	df 93       	push	r29
    7be8:	cd b7       	in	r28, 0x3d	; 61
    7bea:	de b7       	in	r29, 0x3e	; 62
	mcu_init();
    7bec:	0e 94 5a 3d 	call	0x7ab4	; 0x7ab4 <mcu_init>

	CLKCTRL_init(); /* Set CPU clock speed appropriately */
    7bf0:	0e 94 16 3c 	call	0x782c	; 0x782c <CLKCTRL_init>
	TIMERB_init(); /* Timers must be initialized before utility_delay functions will work */
    7bf4:	0e 94 25 6e 	call	0xdc4a	; 0xdc4a <TIMERB_init>
	CPUINT_init(); /* Interrupts must also be enabled before timer interrupts will function */
    7bf8:	0e 94 23 3c 	call	0x7846	; 0x7846 <CPUINT_init>
	BINIO_init();
    7bfc:	0e 94 32 3b 	call	0x7664	; 0x7664 <_Z10BINIO_initv>

	LED_set_RED_dir(PORT_DIR_OUT);
    7c00:	81 e0       	ldi	r24, 0x01	; 1
    7c02:	0e 94 1e 3d 	call	0x7a3c	; 0x7a3c <_ZL15LED_set_RED_dir8port_dir>
	LED_set_RED_level(OFF);
    7c06:	80 e0       	ldi	r24, 0x00	; 0
    7c08:	0e 94 3c 3d 	call	0x7a78	; 0x7a78 <_ZL17LED_set_RED_levelb>
	LED_set_GREEN_dir(PORT_DIR_OUT);
    7c0c:	81 e0       	ldi	r24, 0x01	; 1
    7c0e:	0e 94 2d 3d 	call	0x7a5a	; 0x7a5a <_ZL17LED_set_GREEN_dir8port_dir>
	LED_set_GREEN_level(OFF);
    7c12:	80 e0       	ldi	r24, 0x00	; 0
    7c14:	0e 94 4b 3d 	call	0x7a96	; 0x7a96 <_ZL19LED_set_GREEN_levelb>

	SLPCTRL_init();
    7c18:	0e 94 1d 6e 	call	0xdc3a	; 0xdc3a <SLPCTRL_init>
	
	DAC0_init();
    7c1c:	0e 94 42 3c 	call	0x7884	; 0x7884 <_Z9DAC0_initv>

	linkbus_init(LB_BAUD, LINKBUS_USART);
    7c20:	41 e0       	ldi	r20, 0x01	; 1
    7c22:	60 e8       	ldi	r22, 0x80	; 128
    7c24:	75 e2       	ldi	r23, 0x25	; 37
    7c26:	80 e0       	ldi	r24, 0x00	; 0
    7c28:	90 e0       	ldi	r25, 0x00	; 0
    7c2a:	0e 94 d6 59 	call	0xb3ac	; 0xb3ac <_Z12linkbus_initm14USART_Number_t>
	serialbus_init(SB_BAUD, SERIALBUS_USART);
    7c2e:	44 e0       	ldi	r20, 0x04	; 4
    7c30:	60 e8       	ldi	r22, 0x80	; 128
    7c32:	75 e2       	ldi	r23, 0x25	; 37
    7c34:	80 e0       	ldi	r24, 0x00	; 0
    7c36:	90 e0       	ldi	r25, 0x00	; 0
    7c38:	0e 94 61 62 	call	0xc4c2	; 0xc4c2 <serialbus_init>

	BOD_init();
    7c3c:	0e 94 f4 3b 	call	0x77e8	; 0x77e8 <BOD_init>
}
    7c40:	00 00       	nop
    7c42:	df 91       	pop	r29
    7c44:	cf 91       	pop	r28
    7c46:	08 95       	ret

00007c48 <ds3231_init>:
				*val = second + 10 * second10 + 60 * (int32_t)minute + 600 * (int32_t)minute10 +  3600 * (int32_t)hour + 36000 * (int32_t)hour10;
			}
		}
		
		return(failure);
	}
    7c48:	cf 93       	push	r28
    7c4a:	df 93       	push	r29
    7c4c:	cd b7       	in	r28, 0x3d	; 61
    7c4e:	de b7       	in	r29, 0x3e	; 62
    7c50:	0e 94 f1 4e 	call	0x9de2	; 0x9de2 <I2C_0_Init>
    7c54:	0e 94 49 44 	call	0x8892	; 0x8892 <ds3231_responding>
    7c58:	98 2f       	mov	r25, r24
    7c5a:	81 e0       	ldi	r24, 0x01	; 1
    7c5c:	89 27       	eor	r24, r25
    7c5e:	df 91       	pop	r29
    7c60:	cf 91       	pop	r28
    7c62:	08 95       	ret

00007c64 <_Z7bcd2dech>:
    7c64:	cf 93       	push	r28
    7c66:	df 93       	push	r29
    7c68:	00 d0       	rcall	.+0      	; 0x7c6a <_Z7bcd2dech+0x6>
    7c6a:	cd b7       	in	r28, 0x3d	; 61
    7c6c:	de b7       	in	r29, 0x3e	; 62
    7c6e:	8a 83       	std	Y+2, r24	; 0x02
    7c70:	8a 81       	ldd	r24, Y+2	; 0x02
    7c72:	88 2f       	mov	r24, r24
    7c74:	90 e0       	ldi	r25, 0x00	; 0
    7c76:	95 95       	asr	r25
    7c78:	87 95       	ror	r24
    7c7a:	95 95       	asr	r25
    7c7c:	87 95       	ror	r24
    7c7e:	95 95       	asr	r25
    7c80:	87 95       	ror	r24
    7c82:	95 95       	asr	r25
    7c84:	87 95       	ror	r24
    7c86:	88 0f       	add	r24, r24
    7c88:	98 2f       	mov	r25, r24
    7c8a:	99 0f       	add	r25, r25
    7c8c:	99 0f       	add	r25, r25
    7c8e:	98 0f       	add	r25, r24
    7c90:	8a 81       	ldd	r24, Y+2	; 0x02
    7c92:	8f 70       	andi	r24, 0x0F	; 15
    7c94:	89 0f       	add	r24, r25
    7c96:	89 83       	std	Y+1, r24	; 0x01
    7c98:	89 81       	ldd	r24, Y+1	; 0x01
    7c9a:	0f 90       	pop	r0
    7c9c:	0f 90       	pop	r0
    7c9e:	df 91       	pop	r29
    7ca0:	cf 91       	pop	r28
    7ca2:	08 95       	ret

00007ca4 <_Z7dec2bcdh>:
    7ca4:	cf 93       	push	r28
    7ca6:	df 93       	push	r29
    7ca8:	00 d0       	rcall	.+0      	; 0x7caa <_Z7dec2bcdh+0x6>
    7caa:	cd b7       	in	r28, 0x3d	; 61
    7cac:	de b7       	in	r29, 0x3e	; 62
    7cae:	8a 83       	std	Y+2, r24	; 0x02
    7cb0:	9a 81       	ldd	r25, Y+2	; 0x02
    7cb2:	8d ec       	ldi	r24, 0xCD	; 205
    7cb4:	98 9f       	mul	r25, r24
    7cb6:	81 2d       	mov	r24, r1
    7cb8:	11 24       	eor	r1, r1
    7cba:	86 95       	lsr	r24
    7cbc:	86 95       	lsr	r24
    7cbe:	86 95       	lsr	r24
    7cc0:	88 0f       	add	r24, r24
    7cc2:	28 2f       	mov	r18, r24
    7cc4:	22 0f       	add	r18, r18
    7cc6:	22 0f       	add	r18, r18
    7cc8:	82 0f       	add	r24, r18
    7cca:	29 2f       	mov	r18, r25
    7ccc:	28 1b       	sub	r18, r24
    7cce:	82 2f       	mov	r24, r18
    7cd0:	89 83       	std	Y+1, r24	; 0x01
    7cd2:	9a 81       	ldd	r25, Y+2	; 0x02
    7cd4:	8d ec       	ldi	r24, 0xCD	; 205
    7cd6:	98 9f       	mul	r25, r24
    7cd8:	81 2d       	mov	r24, r1
    7cda:	11 24       	eor	r1, r1
    7cdc:	86 95       	lsr	r24
    7cde:	86 95       	lsr	r24
    7ce0:	86 95       	lsr	r24
    7ce2:	88 2f       	mov	r24, r24
    7ce4:	90 e0       	ldi	r25, 0x00	; 0
    7ce6:	82 95       	swap	r24
    7ce8:	92 95       	swap	r25
    7cea:	90 7f       	andi	r25, 0xF0	; 240
    7cec:	98 27       	eor	r25, r24
    7cee:	80 7f       	andi	r24, 0xF0	; 240
    7cf0:	98 27       	eor	r25, r24
    7cf2:	98 2f       	mov	r25, r24
    7cf4:	89 81       	ldd	r24, Y+1	; 0x01
    7cf6:	89 2b       	or	r24, r25
    7cf8:	89 83       	std	Y+1, r24	; 0x01
    7cfa:	89 81       	ldd	r24, Y+1	; 0x01
    7cfc:	0f 90       	pop	r0
    7cfe:	0f 90       	pop	r0
    7d00:	df 91       	pop	r29
    7d02:	cf 91       	pop	r28
    7d04:	08 95       	ret

00007d06 <_Z8char2bcdPc>:
    7d06:	cf 93       	push	r28
    7d08:	df 93       	push	r29
    7d0a:	00 d0       	rcall	.+0      	; 0x7d0c <_Z8char2bcdPc+0x6>
    7d0c:	1f 92       	push	r1
    7d0e:	cd b7       	in	r28, 0x3d	; 61
    7d10:	de b7       	in	r29, 0x3e	; 62
    7d12:	8a 83       	std	Y+2, r24	; 0x02
    7d14:	9b 83       	std	Y+3, r25	; 0x03
    7d16:	8a 81       	ldd	r24, Y+2	; 0x02
    7d18:	9b 81       	ldd	r25, Y+3	; 0x03
    7d1a:	01 96       	adiw	r24, 0x01	; 1
    7d1c:	fc 01       	movw	r30, r24
    7d1e:	20 81       	ld	r18, Z
    7d20:	8a 81       	ldd	r24, Y+2	; 0x02
    7d22:	9b 81       	ldd	r25, Y+3	; 0x03
    7d24:	fc 01       	movw	r30, r24
    7d26:	80 81       	ld	r24, Z
    7d28:	80 53       	subi	r24, 0x30	; 48
    7d2a:	82 95       	swap	r24
    7d2c:	80 7f       	andi	r24, 0xF0	; 240
    7d2e:	82 0f       	add	r24, r18
    7d30:	80 53       	subi	r24, 0x30	; 48
    7d32:	89 83       	std	Y+1, r24	; 0x01
    7d34:	89 81       	ldd	r24, Y+1	; 0x01
    7d36:	23 96       	adiw	r28, 0x03	; 3
    7d38:	cd bf       	out	0x3d, r28	; 61
    7d3a:	de bf       	out	0x3e, r29	; 62
    7d3c:	df 91       	pop	r29
    7d3e:	cf 91       	pop	r28
    7d40:	08 95       	ret

00007d42 <RTC_String2Epoch>:
    7d42:	cf 93       	push	r28
    7d44:	df 93       	push	r29
    7d46:	cd b7       	in	r28, 0x3d	; 61
    7d48:	de b7       	in	r29, 0x3e	; 62
    7d4a:	a3 97       	sbiw	r28, 0x23	; 35
    7d4c:	cd bf       	out	0x3d, r28	; 61
    7d4e:	de bf       	out	0x3e, r29	; 62
    7d50:	88 a3       	std	Y+32, r24	; 0x20
    7d52:	99 a3       	std	Y+33, r25	; 0x21
    7d54:	6a a3       	std	Y+34, r22	; 0x22
    7d56:	7b a3       	std	Y+35, r23	; 0x23
    7d58:	19 82       	std	Y+1, r1	; 0x01
    7d5a:	1a 82       	std	Y+2, r1	; 0x02
    7d5c:	1b 82       	std	Y+3, r1	; 0x03
    7d5e:	1c 82       	std	Y+4, r1	; 0x04
    7d60:	27 e0       	ldi	r18, 0x07	; 7
    7d62:	ce 01       	movw	r24, r28
    7d64:	0d 96       	adiw	r24, 0x0d	; 13
    7d66:	fc 01       	movw	r30, r24
    7d68:	32 2f       	mov	r19, r18
    7d6a:	11 92       	st	Z+, r1
    7d6c:	3a 95       	dec	r19
    7d6e:	e9 f7       	brne	.-6      	; 0x7d6a <RTC_String2Epoch+0x28>
    7d70:	2c e0       	ldi	r18, 0x0C	; 12
    7d72:	ce 01       	movw	r24, r28
    7d74:	44 96       	adiw	r24, 0x14	; 20
    7d76:	fc 01       	movw	r30, r24
    7d78:	32 2f       	mov	r19, r18
    7d7a:	11 92       	st	Z+, r1
    7d7c:	3a 95       	dec	r19
    7d7e:	e9 f7       	brne	.-6      	; 0x7d7a <RTC_String2Epoch+0x38>
    7d80:	84 e6       	ldi	r24, 0x64	; 100
    7d82:	90 e0       	ldi	r25, 0x00	; 0
    7d84:	8e 83       	std	Y+6, r24	; 0x06
    7d86:	9f 83       	std	Y+7, r25	; 0x07
    7d88:	8a a1       	ldd	r24, Y+34	; 0x22
    7d8a:	9b a1       	ldd	r25, Y+35	; 0x23
    7d8c:	89 2b       	or	r24, r25
    7d8e:	09 f4       	brne	.+2      	; 0x7d92 <RTC_String2Epoch+0x50>
    7d90:	86 c0       	rjmp	.+268    	; 0x7e9e <RTC_String2Epoch+0x15c>
    7d92:	8a a1       	ldd	r24, Y+34	; 0x22
    7d94:	9b a1       	ldd	r25, Y+35	; 0x23
    7d96:	0a 96       	adiw	r24, 0x0a	; 10
    7d98:	0e 94 83 3e 	call	0x7d06	; 0x7d06 <_Z8char2bcdPc>
    7d9c:	8d 87       	std	Y+13, r24	; 0x0d
    7d9e:	8a a1       	ldd	r24, Y+34	; 0x22
    7da0:	9b a1       	ldd	r25, Y+35	; 0x23
    7da2:	08 96       	adiw	r24, 0x08	; 8
    7da4:	0e 94 83 3e 	call	0x7d06	; 0x7d06 <_Z8char2bcdPc>
    7da8:	8e 87       	std	Y+14, r24	; 0x0e
    7daa:	8a a1       	ldd	r24, Y+34	; 0x22
    7dac:	9b a1       	ldd	r25, Y+35	; 0x23
    7dae:	06 96       	adiw	r24, 0x06	; 6
    7db0:	0e 94 83 3e 	call	0x7d06	; 0x7d06 <_Z8char2bcdPc>
    7db4:	8f 87       	std	Y+15, r24	; 0x0f
    7db6:	8a a1       	ldd	r24, Y+34	; 0x22
    7db8:	9b a1       	ldd	r25, Y+35	; 0x23
    7dba:	04 96       	adiw	r24, 0x04	; 4
    7dbc:	0e 94 83 3e 	call	0x7d06	; 0x7d06 <_Z8char2bcdPc>
    7dc0:	89 8b       	std	Y+17, r24	; 0x11
    7dc2:	8a a1       	ldd	r24, Y+34	; 0x22
    7dc4:	9b a1       	ldd	r25, Y+35	; 0x23
    7dc6:	02 96       	adiw	r24, 0x02	; 2
    7dc8:	0e 94 83 3e 	call	0x7d06	; 0x7d06 <_Z8char2bcdPc>
    7dcc:	8a 8b       	std	Y+18, r24	; 0x12
    7dce:	8a a1       	ldd	r24, Y+34	; 0x22
    7dd0:	9b a1       	ldd	r25, Y+35	; 0x23
    7dd2:	0e 94 83 3e 	call	0x7d06	; 0x7d06 <_Z8char2bcdPc>
    7dd6:	8b 8b       	std	Y+19, r24	; 0x13
    7dd8:	8f 85       	ldd	r24, Y+15	; 0x0f
    7dda:	0e 94 32 3e 	call	0x7c64	; 0x7c64 <_Z7bcd2dech>
    7dde:	88 87       	std	Y+8, r24	; 0x08
    7de0:	8b 89       	ldd	r24, Y+19	; 0x13
    7de2:	0e 94 32 3e 	call	0x7c64	; 0x7c64 <_Z7bcd2dech>
    7de6:	88 2f       	mov	r24, r24
    7de8:	90 e0       	ldi	r25, 0x00	; 0
    7dea:	2e 81       	ldd	r18, Y+6	; 0x06
    7dec:	3f 81       	ldd	r19, Y+7	; 0x07
    7dee:	82 0f       	add	r24, r18
    7df0:	93 1f       	adc	r25, r19
    7df2:	8e 83       	std	Y+6, r24	; 0x06
    7df4:	9f 83       	std	Y+7, r25	; 0x07
    7df6:	8e 81       	ldd	r24, Y+6	; 0x06
    7df8:	9f 81       	ldd	r25, Y+7	; 0x07
    7dfa:	8a 8f       	std	Y+26, r24	; 0x1a
    7dfc:	9b 8f       	std	Y+27, r25	; 0x1b
    7dfe:	8e 81       	ldd	r24, Y+6	; 0x06
    7e00:	9f 81       	ldd	r25, Y+7	; 0x07
    7e02:	84 59       	subi	r24, 0x94	; 148
    7e04:	98 4f       	sbci	r25, 0xF8	; 248
    7e06:	8e 83       	std	Y+6, r24	; 0x06
    7e08:	9f 83       	std	Y+7, r25	; 0x07
    7e0a:	8a 89       	ldd	r24, Y+18	; 0x12
    7e0c:	0e 94 32 3e 	call	0x7c64	; 0x7c64 <_Z7bcd2dech>
    7e10:	89 87       	std	Y+9, r24	; 0x09
    7e12:	89 85       	ldd	r24, Y+9	; 0x09
    7e14:	81 50       	subi	r24, 0x01	; 1
    7e16:	89 8f       	std	Y+25, r24	; 0x19
    7e18:	89 89       	ldd	r24, Y+17	; 0x11
    7e1a:	0e 94 32 3e 	call	0x7c64	; 0x7c64 <_Z7bcd2dech>
    7e1e:	8a 87       	std	Y+10, r24	; 0x0a
    7e20:	8a 85       	ldd	r24, Y+10	; 0x0a
    7e22:	8f 8b       	std	Y+23, r24	; 0x17
    7e24:	1c 8e       	std	Y+28, r1	; 0x1c
    7e26:	1d 8e       	std	Y+29, r1	; 0x1d
    7e28:	81 e0       	ldi	r24, 0x01	; 1
    7e2a:	8d 83       	std	Y+5, r24	; 0x05
    7e2c:	9d 81       	ldd	r25, Y+5	; 0x05
    7e2e:	89 85       	ldd	r24, Y+9	; 0x09
    7e30:	98 17       	cp	r25, r24
    7e32:	88 f4       	brcc	.+34     	; 0x7e56 <RTC_String2Epoch+0x114>
    7e34:	8e 81       	ldd	r24, Y+6	; 0x06
    7e36:	9f 81       	ldd	r25, Y+7	; 0x07
    7e38:	6d 81       	ldd	r22, Y+5	; 0x05
    7e3a:	0e 94 ef 02 	call	0x5de	; 0x5de <month_length>
    7e3e:	2c 8d       	ldd	r18, Y+28	; 0x1c
    7e40:	3d 8d       	ldd	r19, Y+29	; 0x1d
    7e42:	88 2f       	mov	r24, r24
    7e44:	90 e0       	ldi	r25, 0x00	; 0
    7e46:	82 0f       	add	r24, r18
    7e48:	93 1f       	adc	r25, r19
    7e4a:	8c 8f       	std	Y+28, r24	; 0x1c
    7e4c:	9d 8f       	std	Y+29, r25	; 0x1d
    7e4e:	8d 81       	ldd	r24, Y+5	; 0x05
    7e50:	8f 5f       	subi	r24, 0xFF	; 255
    7e52:	8d 83       	std	Y+5, r24	; 0x05
    7e54:	eb cf       	rjmp	.-42     	; 0x7e2c <RTC_String2Epoch+0xea>
    7e56:	2c 8d       	ldd	r18, Y+28	; 0x1c
    7e58:	3d 8d       	ldd	r19, Y+29	; 0x1d
    7e5a:	8f 89       	ldd	r24, Y+23	; 0x17
    7e5c:	08 2e       	mov	r0, r24
    7e5e:	00 0c       	add	r0, r0
    7e60:	99 0b       	sbc	r25, r25
    7e62:	01 97       	sbiw	r24, 0x01	; 1
    7e64:	82 0f       	add	r24, r18
    7e66:	93 1f       	adc	r25, r19
    7e68:	8c 8f       	std	Y+28, r24	; 0x1c
    7e6a:	9d 8f       	std	Y+29, r25	; 0x1d
    7e6c:	8d 85       	ldd	r24, Y+13	; 0x0d
    7e6e:	0e 94 32 3e 	call	0x7c64	; 0x7c64 <_Z7bcd2dech>
    7e72:	8b 87       	std	Y+11, r24	; 0x0b
    7e74:	8e 85       	ldd	r24, Y+14	; 0x0e
    7e76:	0e 94 32 3e 	call	0x7c64	; 0x7c64 <_Z7bcd2dech>
    7e7a:	8c 87       	std	Y+12, r24	; 0x0c
    7e7c:	88 85       	ldd	r24, Y+8	; 0x08
    7e7e:	8e 8b       	std	Y+22, r24	; 0x16
    7e80:	8c 85       	ldd	r24, Y+12	; 0x0c
    7e82:	8d 8b       	std	Y+21, r24	; 0x15
    7e84:	8b 85       	ldd	r24, Y+11	; 0x0b
    7e86:	8c 8b       	std	Y+20, r24	; 0x14
    7e88:	ce 01       	movw	r24, r28
    7e8a:	44 96       	adiw	r24, 0x14	; 20
    7e8c:	0e 94 77 3f 	call	0x7eee	; 0x7eee <_Z14epoch_from_ltmP2tm>
    7e90:	dc 01       	movw	r26, r24
    7e92:	cb 01       	movw	r24, r22
    7e94:	89 83       	std	Y+1, r24	; 0x01
    7e96:	9a 83       	std	Y+2, r25	; 0x02
    7e98:	ab 83       	std	Y+3, r26	; 0x03
    7e9a:	bc 83       	std	Y+4, r27	; 0x04
    7e9c:	0a c0       	rjmp	.+20     	; 0x7eb2 <RTC_String2Epoch+0x170>
    7e9e:	80 e0       	ldi	r24, 0x00	; 0
    7ea0:	90 e0       	ldi	r25, 0x00	; 0
    7ea2:	0e 94 53 40 	call	0x80a6	; 0x80a6 <ds3231_get_epoch>
    7ea6:	dc 01       	movw	r26, r24
    7ea8:	cb 01       	movw	r24, r22
    7eaa:	89 83       	std	Y+1, r24	; 0x01
    7eac:	9a 83       	std	Y+2, r25	; 0x02
    7eae:	ab 83       	std	Y+3, r26	; 0x03
    7eb0:	bc 83       	std	Y+4, r27	; 0x04
    7eb2:	88 a1       	ldd	r24, Y+32	; 0x20
    7eb4:	99 a1       	ldd	r25, Y+33	; 0x21
    7eb6:	89 2b       	or	r24, r25
    7eb8:	71 f0       	breq	.+28     	; 0x7ed6 <RTC_String2Epoch+0x194>
    7eba:	21 e0       	ldi	r18, 0x01	; 1
    7ebc:	89 81       	ldd	r24, Y+1	; 0x01
    7ebe:	9a 81       	ldd	r25, Y+2	; 0x02
    7ec0:	ab 81       	ldd	r26, Y+3	; 0x03
    7ec2:	bc 81       	ldd	r27, Y+4	; 0x04
    7ec4:	89 2b       	or	r24, r25
    7ec6:	8a 2b       	or	r24, r26
    7ec8:	8b 2b       	or	r24, r27
    7eca:	09 f0       	breq	.+2      	; 0x7ece <RTC_String2Epoch+0x18c>
    7ecc:	20 e0       	ldi	r18, 0x00	; 0
    7ece:	88 a1       	ldd	r24, Y+32	; 0x20
    7ed0:	99 a1       	ldd	r25, Y+33	; 0x21
    7ed2:	fc 01       	movw	r30, r24
    7ed4:	20 83       	st	Z, r18
    7ed6:	89 81       	ldd	r24, Y+1	; 0x01
    7ed8:	9a 81       	ldd	r25, Y+2	; 0x02
    7eda:	ab 81       	ldd	r26, Y+3	; 0x03
    7edc:	bc 81       	ldd	r27, Y+4	; 0x04
    7ede:	bc 01       	movw	r22, r24
    7ee0:	cd 01       	movw	r24, r26
    7ee2:	a3 96       	adiw	r28, 0x23	; 35
    7ee4:	cd bf       	out	0x3d, r28	; 61
    7ee6:	de bf       	out	0x3e, r29	; 62
    7ee8:	df 91       	pop	r29
    7eea:	cf 91       	pop	r28
    7eec:	08 95       	ret

00007eee <_Z14epoch_from_ltmP2tm>:
    7eee:	ef 92       	push	r14
    7ef0:	ff 92       	push	r15
    7ef2:	0f 93       	push	r16
    7ef4:	1f 93       	push	r17
    7ef6:	cf 93       	push	r28
    7ef8:	df 93       	push	r29
    7efa:	cd b7       	in	r28, 0x3d	; 61
    7efc:	de b7       	in	r29, 0x3e	; 62
    7efe:	26 97       	sbiw	r28, 0x06	; 6
    7f00:	cd bf       	out	0x3d, r28	; 61
    7f02:	de bf       	out	0x3e, r29	; 62
    7f04:	8d 83       	std	Y+5, r24	; 0x05
    7f06:	9e 83       	std	Y+6, r25	; 0x06
    7f08:	8d 81       	ldd	r24, Y+5	; 0x05
    7f0a:	9e 81       	ldd	r25, Y+6	; 0x06
    7f0c:	fc 01       	movw	r30, r24
    7f0e:	80 81       	ld	r24, Z
    7f10:	28 2f       	mov	r18, r24
    7f12:	88 0f       	add	r24, r24
    7f14:	33 0b       	sbc	r19, r19
    7f16:	8d 81       	ldd	r24, Y+5	; 0x05
    7f18:	9e 81       	ldd	r25, Y+6	; 0x06
    7f1a:	fc 01       	movw	r30, r24
    7f1c:	81 81       	ldd	r24, Z+1	; 0x01
    7f1e:	48 2f       	mov	r20, r24
    7f20:	88 0f       	add	r24, r24
    7f22:	55 0b       	sbc	r21, r21
    7f24:	6c e3       	ldi	r22, 0x3C	; 60
    7f26:	64 9f       	mul	r22, r20
    7f28:	c0 01       	movw	r24, r0
    7f2a:	65 9f       	mul	r22, r21
    7f2c:	90 0d       	add	r25, r0
    7f2e:	11 24       	eor	r1, r1
    7f30:	82 0f       	add	r24, r18
    7f32:	93 1f       	adc	r25, r19
    7f34:	7c 01       	movw	r14, r24
    7f36:	99 0f       	add	r25, r25
    7f38:	00 0b       	sbc	r16, r16
    7f3a:	11 0b       	sbc	r17, r17
    7f3c:	8d 81       	ldd	r24, Y+5	; 0x05
    7f3e:	9e 81       	ldd	r25, Y+6	; 0x06
    7f40:	fc 01       	movw	r30, r24
    7f42:	82 81       	ldd	r24, Z+2	; 0x02
    7f44:	28 2f       	mov	r18, r24
    7f46:	88 0f       	add	r24, r24
    7f48:	33 0b       	sbc	r19, r19
    7f4a:	44 0b       	sbc	r20, r20
    7f4c:	55 0b       	sbc	r21, r21
    7f4e:	80 e1       	ldi	r24, 0x10	; 16
    7f50:	9e e0       	ldi	r25, 0x0E	; 14
    7f52:	dc 01       	movw	r26, r24
    7f54:	0e 94 bb 7a 	call	0xf576	; 0xf576 <__muluhisi3>
    7f58:	dc 01       	movw	r26, r24
    7f5a:	cb 01       	movw	r24, r22
    7f5c:	e8 0e       	add	r14, r24
    7f5e:	f9 1e       	adc	r15, r25
    7f60:	0a 1f       	adc	r16, r26
    7f62:	1b 1f       	adc	r17, r27
    7f64:	8d 81       	ldd	r24, Y+5	; 0x05
    7f66:	9e 81       	ldd	r25, Y+6	; 0x06
    7f68:	fc 01       	movw	r30, r24
    7f6a:	80 85       	ldd	r24, Z+8	; 0x08
    7f6c:	91 85       	ldd	r25, Z+9	; 0x09
    7f6e:	09 2e       	mov	r0, r25
    7f70:	00 0c       	add	r0, r0
    7f72:	aa 0b       	sbc	r26, r26
    7f74:	bb 0b       	sbc	r27, r27
    7f76:	9c 01       	movw	r18, r24
    7f78:	ad 01       	movw	r20, r26
    7f7a:	60 e8       	ldi	r22, 0x80	; 128
    7f7c:	71 e5       	ldi	r23, 0x51	; 81
    7f7e:	81 e0       	ldi	r24, 0x01	; 1
    7f80:	90 e0       	ldi	r25, 0x00	; 0
    7f82:	0e 94 2a 7a 	call	0xf454	; 0xf454 <__mulsi3>
    7f86:	dc 01       	movw	r26, r24
    7f88:	cb 01       	movw	r24, r22
    7f8a:	e8 0e       	add	r14, r24
    7f8c:	f9 1e       	adc	r15, r25
    7f8e:	0a 1f       	adc	r16, r26
    7f90:	1b 1f       	adc	r17, r27
    7f92:	8d 81       	ldd	r24, Y+5	; 0x05
    7f94:	9e 81       	ldd	r25, Y+6	; 0x06
    7f96:	fc 01       	movw	r30, r24
    7f98:	86 81       	ldd	r24, Z+6	; 0x06
    7f9a:	97 81       	ldd	r25, Z+7	; 0x07
    7f9c:	86 54       	subi	r24, 0x46	; 70
    7f9e:	91 09       	sbc	r25, r1
    7fa0:	09 2e       	mov	r0, r25
    7fa2:	00 0c       	add	r0, r0
    7fa4:	aa 0b       	sbc	r26, r26
    7fa6:	bb 0b       	sbc	r27, r27
    7fa8:	9c 01       	movw	r18, r24
    7faa:	ad 01       	movw	r20, r26
    7fac:	60 e8       	ldi	r22, 0x80	; 128
    7fae:	73 e3       	ldi	r23, 0x33	; 51
    7fb0:	81 ee       	ldi	r24, 0xE1	; 225
    7fb2:	91 e0       	ldi	r25, 0x01	; 1
    7fb4:	0e 94 2a 7a 	call	0xf454	; 0xf454 <__mulsi3>
    7fb8:	dc 01       	movw	r26, r24
    7fba:	cb 01       	movw	r24, r22
    7fbc:	e8 0e       	add	r14, r24
    7fbe:	f9 1e       	adc	r15, r25
    7fc0:	0a 1f       	adc	r16, r26
    7fc2:	1b 1f       	adc	r17, r27
    7fc4:	8d 81       	ldd	r24, Y+5	; 0x05
    7fc6:	9e 81       	ldd	r25, Y+6	; 0x06
    7fc8:	fc 01       	movw	r30, r24
    7fca:	86 81       	ldd	r24, Z+6	; 0x06
    7fcc:	97 81       	ldd	r25, Z+7	; 0x07
    7fce:	85 54       	subi	r24, 0x45	; 69
    7fd0:	91 09       	sbc	r25, r1
    7fd2:	99 23       	and	r25, r25
    7fd4:	0c f4       	brge	.+2      	; 0x7fd8 <_Z14epoch_from_ltmP2tm+0xea>
    7fd6:	03 96       	adiw	r24, 0x03	; 3
    7fd8:	95 95       	asr	r25
    7fda:	87 95       	ror	r24
    7fdc:	95 95       	asr	r25
    7fde:	87 95       	ror	r24
    7fe0:	09 2e       	mov	r0, r25
    7fe2:	00 0c       	add	r0, r0
    7fe4:	aa 0b       	sbc	r26, r26
    7fe6:	bb 0b       	sbc	r27, r27
    7fe8:	9c 01       	movw	r18, r24
    7fea:	ad 01       	movw	r20, r26
    7fec:	60 e8       	ldi	r22, 0x80	; 128
    7fee:	71 e5       	ldi	r23, 0x51	; 81
    7ff0:	81 e0       	ldi	r24, 0x01	; 1
    7ff2:	90 e0       	ldi	r25, 0x00	; 0
    7ff4:	0e 94 2a 7a 	call	0xf454	; 0xf454 <__mulsi3>
    7ff8:	dc 01       	movw	r26, r24
    7ffa:	cb 01       	movw	r24, r22
    7ffc:	e8 0e       	add	r14, r24
    7ffe:	f9 1e       	adc	r15, r25
    8000:	0a 1f       	adc	r16, r26
    8002:	1b 1f       	adc	r17, r27
    8004:	8d 81       	ldd	r24, Y+5	; 0x05
    8006:	9e 81       	ldd	r25, Y+6	; 0x06
    8008:	fc 01       	movw	r30, r24
    800a:	86 81       	ldd	r24, Z+6	; 0x06
    800c:	97 81       	ldd	r25, Z+7	; 0x07
    800e:	01 97       	sbiw	r24, 0x01	; 1
    8010:	24 e6       	ldi	r18, 0x64	; 100
    8012:	30 e0       	ldi	r19, 0x00	; 0
    8014:	b9 01       	movw	r22, r18
    8016:	0e 94 4e 7a 	call	0xf49c	; 0xf49c <__divmodhi4>
    801a:	cb 01       	movw	r24, r22
    801c:	09 2e       	mov	r0, r25
    801e:	00 0c       	add	r0, r0
    8020:	aa 0b       	sbc	r26, r26
    8022:	bb 0b       	sbc	r27, r27
    8024:	9c 01       	movw	r18, r24
    8026:	ad 01       	movw	r20, r26
    8028:	60 e8       	ldi	r22, 0x80	; 128
    802a:	7e ea       	ldi	r23, 0xAE	; 174
    802c:	8e ef       	ldi	r24, 0xFE	; 254
    802e:	9f ef       	ldi	r25, 0xFF	; 255
    8030:	0e 94 2a 7a 	call	0xf454	; 0xf454 <__mulsi3>
    8034:	dc 01       	movw	r26, r24
    8036:	cb 01       	movw	r24, r22
    8038:	e8 0e       	add	r14, r24
    803a:	f9 1e       	adc	r15, r25
    803c:	0a 1f       	adc	r16, r26
    803e:	1b 1f       	adc	r17, r27
    8040:	8d 81       	ldd	r24, Y+5	; 0x05
    8042:	9e 81       	ldd	r25, Y+6	; 0x06
    8044:	fc 01       	movw	r30, r24
    8046:	86 81       	ldd	r24, Z+6	; 0x06
    8048:	97 81       	ldd	r25, Z+7	; 0x07
    804a:	85 5d       	subi	r24, 0xD5	; 213
    804c:	9e 4f       	sbci	r25, 0xFE	; 254
    804e:	20 e9       	ldi	r18, 0x90	; 144
    8050:	31 e0       	ldi	r19, 0x01	; 1
    8052:	b9 01       	movw	r22, r18
    8054:	0e 94 4e 7a 	call	0xf49c	; 0xf49c <__divmodhi4>
    8058:	cb 01       	movw	r24, r22
    805a:	09 2e       	mov	r0, r25
    805c:	00 0c       	add	r0, r0
    805e:	aa 0b       	sbc	r26, r26
    8060:	bb 0b       	sbc	r27, r27
    8062:	9c 01       	movw	r18, r24
    8064:	ad 01       	movw	r20, r26
    8066:	60 e8       	ldi	r22, 0x80	; 128
    8068:	71 e5       	ldi	r23, 0x51	; 81
    806a:	81 e0       	ldi	r24, 0x01	; 1
    806c:	90 e0       	ldi	r25, 0x00	; 0
    806e:	0e 94 2a 7a 	call	0xf454	; 0xf454 <__mulsi3>
    8072:	dc 01       	movw	r26, r24
    8074:	cb 01       	movw	r24, r22
    8076:	8e 0d       	add	r24, r14
    8078:	9f 1d       	adc	r25, r15
    807a:	a0 1f       	adc	r26, r16
    807c:	b1 1f       	adc	r27, r17
    807e:	89 83       	std	Y+1, r24	; 0x01
    8080:	9a 83       	std	Y+2, r25	; 0x02
    8082:	ab 83       	std	Y+3, r26	; 0x03
    8084:	bc 83       	std	Y+4, r27	; 0x04
    8086:	89 81       	ldd	r24, Y+1	; 0x01
    8088:	9a 81       	ldd	r25, Y+2	; 0x02
    808a:	ab 81       	ldd	r26, Y+3	; 0x03
    808c:	bc 81       	ldd	r27, Y+4	; 0x04
    808e:	bc 01       	movw	r22, r24
    8090:	cd 01       	movw	r24, r26
    8092:	26 96       	adiw	r28, 0x06	; 6
    8094:	cd bf       	out	0x3d, r28	; 61
    8096:	de bf       	out	0x3e, r29	; 62
    8098:	df 91       	pop	r29
    809a:	cf 91       	pop	r28
    809c:	1f 91       	pop	r17
    809e:	0f 91       	pop	r16
    80a0:	ff 90       	pop	r15
    80a2:	ef 90       	pop	r14
    80a4:	08 95       	ret

000080a6 <ds3231_get_epoch>:
    80a6:	ef 92       	push	r14
    80a8:	ff 92       	push	r15
    80aa:	0f 93       	push	r16
    80ac:	1f 93       	push	r17
    80ae:	cf 93       	push	r28
    80b0:	df 93       	push	r29
    80b2:	cd b7       	in	r28, 0x3d	; 61
    80b4:	de b7       	in	r29, 0x3e	; 62
    80b6:	a5 97       	sbiw	r28, 0x25	; 37
    80b8:	cd bf       	out	0x3d, r28	; 61
    80ba:	de bf       	out	0x3e, r29	; 62
    80bc:	8c a3       	std	Y+36, r24	; 0x24
    80be:	9d a3       	std	Y+37, r25	; 0x25
    80c0:	8a e0       	ldi	r24, 0x0A	; 10
    80c2:	89 83       	std	Y+1, r24	; 0x01
    80c4:	1a 82       	std	Y+2, r1	; 0x02
    80c6:	1b 82       	std	Y+3, r1	; 0x03
    80c8:	1c 82       	std	Y+4, r1	; 0x04
    80ca:	1d 82       	std	Y+5, r1	; 0x05
    80cc:	27 e0       	ldi	r18, 0x07	; 7
    80ce:	ce 01       	movw	r24, r28
    80d0:	41 96       	adiw	r24, 0x11	; 17
    80d2:	fc 01       	movw	r30, r24
    80d4:	32 2f       	mov	r19, r18
    80d6:	11 92       	st	Z+, r1
    80d8:	3a 95       	dec	r19
    80da:	e9 f7       	brne	.-6      	; 0x80d6 <ds3231_get_epoch+0x30>
    80dc:	89 81       	ldd	r24, Y+1	; 0x01
    80de:	9f ef       	ldi	r25, 0xFF	; 255
    80e0:	98 0f       	add	r25, r24
    80e2:	99 83       	std	Y+1, r25	; 0x01
    80e4:	88 23       	and	r24, r24
    80e6:	99 f0       	breq	.+38     	; 0x810e <ds3231_get_epoch+0x68>
    80e8:	ce 01       	movw	r24, r28
    80ea:	41 96       	adiw	r24, 0x11	; 17
    80ec:	27 e0       	ldi	r18, 0x07	; 7
    80ee:	ac 01       	movw	r20, r24
    80f0:	60 e0       	ldi	r22, 0x00	; 0
    80f2:	80 ed       	ldi	r24, 0xD0	; 208
    80f4:	0e 94 31 50 	call	0xa062	; 0xa062 <I2C_0_GetData>
    80f8:	98 2f       	mov	r25, r24
    80fa:	81 e0       	ldi	r24, 0x01	; 1
    80fc:	97 30       	cpi	r25, 0x07	; 7
    80fe:	09 f4       	brne	.+2      	; 0x8102 <ds3231_get_epoch+0x5c>
    8100:	80 e0       	ldi	r24, 0x00	; 0
    8102:	8e 83       	std	Y+6, r24	; 0x06
    8104:	8e 81       	ldd	r24, Y+6	; 0x06
    8106:	88 23       	and	r24, r24
    8108:	11 f0       	breq	.+4      	; 0x810e <ds3231_get_epoch+0x68>
    810a:	81 e0       	ldi	r24, 0x01	; 1
    810c:	01 c0       	rjmp	.+2      	; 0x8110 <ds3231_get_epoch+0x6a>
    810e:	80 e0       	ldi	r24, 0x00	; 0
    8110:	88 23       	and	r24, r24
    8112:	09 f0       	breq	.+2      	; 0x8116 <ds3231_get_epoch+0x70>
    8114:	e3 cf       	rjmp	.-58     	; 0x80dc <ds3231_get_epoch+0x36>
    8116:	9e 81       	ldd	r25, Y+6	; 0x06
    8118:	81 e0       	ldi	r24, 0x01	; 1
    811a:	89 27       	eor	r24, r25
    811c:	88 23       	and	r24, r24
    811e:	09 f4       	brne	.+2      	; 0x8122 <ds3231_get_epoch+0x7c>
    8120:	7e c1       	rjmp	.+764    	; 0x841e <ds3231_get_epoch+0x378>
    8122:	2c e0       	ldi	r18, 0x0C	; 12
    8124:	ce 01       	movw	r24, r28
    8126:	48 96       	adiw	r24, 0x18	; 24
    8128:	fc 01       	movw	r30, r24
    812a:	32 2f       	mov	r19, r18
    812c:	11 92       	st	Z+, r1
    812e:	3a 95       	dec	r19
    8130:	e9 f7       	brne	.-6      	; 0x812c <ds3231_get_epoch+0x86>
    8132:	84 e6       	ldi	r24, 0x64	; 100
    8134:	90 e0       	ldi	r25, 0x00	; 0
    8136:	89 87       	std	Y+9, r24	; 0x09
    8138:	9a 87       	std	Y+10, r25	; 0x0a
    813a:	8f 89       	ldd	r24, Y+23	; 0x17
    813c:	88 2f       	mov	r24, r24
    813e:	90 e0       	ldi	r25, 0x00	; 0
    8140:	8f 70       	andi	r24, 0x0F	; 15
    8142:	99 27       	eor	r25, r25
    8144:	29 85       	ldd	r18, Y+9	; 0x09
    8146:	3a 85       	ldd	r19, Y+10	; 0x0a
    8148:	82 0f       	add	r24, r18
    814a:	93 1f       	adc	r25, r19
    814c:	89 87       	std	Y+9, r24	; 0x09
    814e:	9a 87       	std	Y+10, r25	; 0x0a
    8150:	8f 89       	ldd	r24, Y+23	; 0x17
    8152:	82 95       	swap	r24
    8154:	8f 70       	andi	r24, 0x0F	; 15
    8156:	88 2f       	mov	r24, r24
    8158:	90 e0       	ldi	r25, 0x00	; 0
    815a:	88 0f       	add	r24, r24
    815c:	99 1f       	adc	r25, r25
    815e:	9c 01       	movw	r18, r24
    8160:	22 0f       	add	r18, r18
    8162:	33 1f       	adc	r19, r19
    8164:	22 0f       	add	r18, r18
    8166:	33 1f       	adc	r19, r19
    8168:	82 0f       	add	r24, r18
    816a:	93 1f       	adc	r25, r19
    816c:	29 85       	ldd	r18, Y+9	; 0x09
    816e:	3a 85       	ldd	r19, Y+10	; 0x0a
    8170:	82 0f       	add	r24, r18
    8172:	93 1f       	adc	r25, r19
    8174:	89 87       	std	Y+9, r24	; 0x09
    8176:	9a 87       	std	Y+10, r25	; 0x0a
    8178:	89 85       	ldd	r24, Y+9	; 0x09
    817a:	9a 85       	ldd	r25, Y+10	; 0x0a
    817c:	8e 8f       	std	Y+30, r24	; 0x1e
    817e:	9f 8f       	std	Y+31, r25	; 0x1f
    8180:	89 85       	ldd	r24, Y+9	; 0x09
    8182:	9a 85       	ldd	r25, Y+10	; 0x0a
    8184:	84 59       	subi	r24, 0x94	; 148
    8186:	98 4f       	sbci	r25, 0xF8	; 248
    8188:	89 87       	std	Y+9, r24	; 0x09
    818a:	9a 87       	std	Y+10, r25	; 0x0a
    818c:	8e 89       	ldd	r24, Y+22	; 0x16
    818e:	8f 70       	andi	r24, 0x0F	; 15
    8190:	8b 87       	std	Y+11, r24	; 0x0b
    8192:	8e 89       	ldd	r24, Y+22	; 0x16
    8194:	82 95       	swap	r24
    8196:	8f 70       	andi	r24, 0x0F	; 15
    8198:	88 0f       	add	r24, r24
    819a:	98 2f       	mov	r25, r24
    819c:	99 0f       	add	r25, r25
    819e:	99 0f       	add	r25, r25
    81a0:	89 0f       	add	r24, r25
    81a2:	9b 85       	ldd	r25, Y+11	; 0x0b
    81a4:	89 0f       	add	r24, r25
    81a6:	8b 87       	std	Y+11, r24	; 0x0b
    81a8:	8b 85       	ldd	r24, Y+11	; 0x0b
    81aa:	81 50       	subi	r24, 0x01	; 1
    81ac:	8d 8f       	std	Y+29, r24	; 0x1d
    81ae:	8d 89       	ldd	r24, Y+21	; 0x15
    81b0:	8f 70       	andi	r24, 0x0F	; 15
    81b2:	8c 87       	std	Y+12, r24	; 0x0c
    81b4:	8d 89       	ldd	r24, Y+21	; 0x15
    81b6:	82 95       	swap	r24
    81b8:	8f 70       	andi	r24, 0x0F	; 15
    81ba:	88 0f       	add	r24, r24
    81bc:	98 2f       	mov	r25, r24
    81be:	99 0f       	add	r25, r25
    81c0:	99 0f       	add	r25, r25
    81c2:	89 0f       	add	r24, r25
    81c4:	9c 85       	ldd	r25, Y+12	; 0x0c
    81c6:	89 0f       	add	r24, r25
    81c8:	8c 87       	std	Y+12, r24	; 0x0c
    81ca:	8c 85       	ldd	r24, Y+12	; 0x0c
    81cc:	8b 8f       	std	Y+27, r24	; 0x1b
    81ce:	18 a2       	std	Y+32, r1	; 0x20
    81d0:	19 a2       	std	Y+33, r1	; 0x21
    81d2:	81 e0       	ldi	r24, 0x01	; 1
    81d4:	88 87       	std	Y+8, r24	; 0x08
    81d6:	98 85       	ldd	r25, Y+8	; 0x08
    81d8:	8b 85       	ldd	r24, Y+11	; 0x0b
    81da:	98 17       	cp	r25, r24
    81dc:	88 f4       	brcc	.+34     	; 0x8200 <ds3231_get_epoch+0x15a>
    81de:	89 85       	ldd	r24, Y+9	; 0x09
    81e0:	9a 85       	ldd	r25, Y+10	; 0x0a
    81e2:	68 85       	ldd	r22, Y+8	; 0x08
    81e4:	0e 94 ef 02 	call	0x5de	; 0x5de <month_length>
    81e8:	28 a1       	ldd	r18, Y+32	; 0x20
    81ea:	39 a1       	ldd	r19, Y+33	; 0x21
    81ec:	88 2f       	mov	r24, r24
    81ee:	90 e0       	ldi	r25, 0x00	; 0
    81f0:	82 0f       	add	r24, r18
    81f2:	93 1f       	adc	r25, r19
    81f4:	88 a3       	std	Y+32, r24	; 0x20
    81f6:	99 a3       	std	Y+33, r25	; 0x21
    81f8:	88 85       	ldd	r24, Y+8	; 0x08
    81fa:	8f 5f       	subi	r24, 0xFF	; 255
    81fc:	88 87       	std	Y+8, r24	; 0x08
    81fe:	eb cf       	rjmp	.-42     	; 0x81d6 <ds3231_get_epoch+0x130>
    8200:	28 a1       	ldd	r18, Y+32	; 0x20
    8202:	39 a1       	ldd	r19, Y+33	; 0x21
    8204:	8b 8d       	ldd	r24, Y+27	; 0x1b
    8206:	08 2e       	mov	r0, r24
    8208:	00 0c       	add	r0, r0
    820a:	99 0b       	sbc	r25, r25
    820c:	01 97       	sbiw	r24, 0x01	; 1
    820e:	82 0f       	add	r24, r18
    8210:	93 1f       	adc	r25, r19
    8212:	88 a3       	std	Y+32, r24	; 0x20
    8214:	99 a3       	std	Y+33, r25	; 0x21
    8216:	89 89       	ldd	r24, Y+17	; 0x11
    8218:	82 95       	swap	r24
    821a:	8f 70       	andi	r24, 0x0F	; 15
    821c:	88 0f       	add	r24, r24
    821e:	98 2f       	mov	r25, r24
    8220:	99 0f       	add	r25, r25
    8222:	99 0f       	add	r25, r25
    8224:	89 0f       	add	r24, r25
    8226:	8d 87       	std	Y+13, r24	; 0x0d
    8228:	89 89       	ldd	r24, Y+17	; 0x11
    822a:	8f 70       	andi	r24, 0x0F	; 15
    822c:	9d 85       	ldd	r25, Y+13	; 0x0d
    822e:	89 0f       	add	r24, r25
    8230:	8d 87       	std	Y+13, r24	; 0x0d
    8232:	8a 89       	ldd	r24, Y+18	; 0x12
    8234:	82 95       	swap	r24
    8236:	8f 70       	andi	r24, 0x0F	; 15
    8238:	88 0f       	add	r24, r24
    823a:	98 2f       	mov	r25, r24
    823c:	99 0f       	add	r25, r25
    823e:	99 0f       	add	r25, r25
    8240:	89 0f       	add	r24, r25
    8242:	8e 87       	std	Y+14, r24	; 0x0e
    8244:	8a 89       	ldd	r24, Y+18	; 0x12
    8246:	8f 70       	andi	r24, 0x0F	; 15
    8248:	9e 85       	ldd	r25, Y+14	; 0x0e
    824a:	89 0f       	add	r24, r25
    824c:	8e 87       	std	Y+14, r24	; 0x0e
    824e:	8b 89       	ldd	r24, Y+19	; 0x13
    8250:	88 2f       	mov	r24, r24
    8252:	90 e0       	ldi	r25, 0x00	; 0
    8254:	80 72       	andi	r24, 0x20	; 32
    8256:	99 27       	eor	r25, r25
    8258:	21 e0       	ldi	r18, 0x01	; 1
    825a:	89 2b       	or	r24, r25
    825c:	09 f4       	brne	.+2      	; 0x8260 <ds3231_get_epoch+0x1ba>
    825e:	20 e0       	ldi	r18, 0x00	; 0
    8260:	2f 87       	std	Y+15, r18	; 0x0f
    8262:	8b 89       	ldd	r24, Y+19	; 0x13
    8264:	88 2f       	mov	r24, r24
    8266:	90 e0       	ldi	r25, 0x00	; 0
    8268:	95 95       	asr	r25
    826a:	87 95       	ror	r24
    826c:	95 95       	asr	r25
    826e:	87 95       	ror	r24
    8270:	95 95       	asr	r25
    8272:	87 95       	ror	r24
    8274:	95 95       	asr	r25
    8276:	87 95       	ror	r24
    8278:	81 70       	andi	r24, 0x01	; 1
    827a:	88 0f       	add	r24, r24
    827c:	98 2f       	mov	r25, r24
    827e:	99 0f       	add	r25, r25
    8280:	99 0f       	add	r25, r25
    8282:	89 0f       	add	r24, r25
    8284:	8f 83       	std	Y+7, r24	; 0x07
    8286:	8b 89       	ldd	r24, Y+19	; 0x13
    8288:	8f 70       	andi	r24, 0x0F	; 15
    828a:	9f 81       	ldd	r25, Y+7	; 0x07
    828c:	89 0f       	add	r24, r25
    828e:	8f 83       	std	Y+7, r24	; 0x07
    8290:	8b 89       	ldd	r24, Y+19	; 0x13
    8292:	88 2f       	mov	r24, r24
    8294:	90 e0       	ldi	r25, 0x00	; 0
    8296:	80 74       	andi	r24, 0x40	; 64
    8298:	99 27       	eor	r25, r25
    829a:	21 e0       	ldi	r18, 0x01	; 1
    829c:	89 2b       	or	r24, r25
    829e:	09 f4       	brne	.+2      	; 0x82a2 <ds3231_get_epoch+0x1fc>
    82a0:	20 e0       	ldi	r18, 0x00	; 0
    82a2:	28 8b       	std	Y+16, r18	; 0x10
    82a4:	88 89       	ldd	r24, Y+16	; 0x10
    82a6:	88 23       	and	r24, r24
    82a8:	39 f0       	breq	.+14     	; 0x82b8 <ds3231_get_epoch+0x212>
    82aa:	8f 85       	ldd	r24, Y+15	; 0x0f
    82ac:	88 23       	and	r24, r24
    82ae:	51 f0       	breq	.+20     	; 0x82c4 <ds3231_get_epoch+0x21e>
    82b0:	8f 81       	ldd	r24, Y+7	; 0x07
    82b2:	84 5f       	subi	r24, 0xF4	; 244
    82b4:	8f 83       	std	Y+7, r24	; 0x07
    82b6:	06 c0       	rjmp	.+12     	; 0x82c4 <ds3231_get_epoch+0x21e>
    82b8:	8f 85       	ldd	r24, Y+15	; 0x0f
    82ba:	88 23       	and	r24, r24
    82bc:	19 f0       	breq	.+6      	; 0x82c4 <ds3231_get_epoch+0x21e>
    82be:	8f 81       	ldd	r24, Y+7	; 0x07
    82c0:	8c 5e       	subi	r24, 0xEC	; 236
    82c2:	8f 83       	std	Y+7, r24	; 0x07
    82c4:	8f 81       	ldd	r24, Y+7	; 0x07
    82c6:	8a 8f       	std	Y+26, r24	; 0x1a
    82c8:	8e 85       	ldd	r24, Y+14	; 0x0e
    82ca:	89 8f       	std	Y+25, r24	; 0x19
    82cc:	8d 85       	ldd	r24, Y+13	; 0x0d
    82ce:	88 8f       	std	Y+24, r24	; 0x18
    82d0:	88 8d       	ldd	r24, Y+24	; 0x18
    82d2:	28 2f       	mov	r18, r24
    82d4:	88 0f       	add	r24, r24
    82d6:	33 0b       	sbc	r19, r19
    82d8:	89 8d       	ldd	r24, Y+25	; 0x19
    82da:	48 2f       	mov	r20, r24
    82dc:	88 0f       	add	r24, r24
    82de:	55 0b       	sbc	r21, r21
    82e0:	6c e3       	ldi	r22, 0x3C	; 60
    82e2:	64 9f       	mul	r22, r20
    82e4:	c0 01       	movw	r24, r0
    82e6:	65 9f       	mul	r22, r21
    82e8:	90 0d       	add	r25, r0
    82ea:	11 24       	eor	r1, r1
    82ec:	82 0f       	add	r24, r18
    82ee:	93 1f       	adc	r25, r19
    82f0:	7c 01       	movw	r14, r24
    82f2:	99 0f       	add	r25, r25
    82f4:	00 0b       	sbc	r16, r16
    82f6:	11 0b       	sbc	r17, r17
    82f8:	8a 8d       	ldd	r24, Y+26	; 0x1a
    82fa:	28 2f       	mov	r18, r24
    82fc:	88 0f       	add	r24, r24
    82fe:	33 0b       	sbc	r19, r19
    8300:	44 0b       	sbc	r20, r20
    8302:	55 0b       	sbc	r21, r21
    8304:	80 e1       	ldi	r24, 0x10	; 16
    8306:	9e e0       	ldi	r25, 0x0E	; 14
    8308:	dc 01       	movw	r26, r24
    830a:	0e 94 bb 7a 	call	0xf576	; 0xf576 <__muluhisi3>
    830e:	dc 01       	movw	r26, r24
    8310:	cb 01       	movw	r24, r22
    8312:	e8 0e       	add	r14, r24
    8314:	f9 1e       	adc	r15, r25
    8316:	0a 1f       	adc	r16, r26
    8318:	1b 1f       	adc	r17, r27
    831a:	88 a1       	ldd	r24, Y+32	; 0x20
    831c:	99 a1       	ldd	r25, Y+33	; 0x21
    831e:	09 2e       	mov	r0, r25
    8320:	00 0c       	add	r0, r0
    8322:	aa 0b       	sbc	r26, r26
    8324:	bb 0b       	sbc	r27, r27
    8326:	9c 01       	movw	r18, r24
    8328:	ad 01       	movw	r20, r26
    832a:	60 e8       	ldi	r22, 0x80	; 128
    832c:	71 e5       	ldi	r23, 0x51	; 81
    832e:	81 e0       	ldi	r24, 0x01	; 1
    8330:	90 e0       	ldi	r25, 0x00	; 0
    8332:	0e 94 2a 7a 	call	0xf454	; 0xf454 <__mulsi3>
    8336:	dc 01       	movw	r26, r24
    8338:	cb 01       	movw	r24, r22
    833a:	e8 0e       	add	r14, r24
    833c:	f9 1e       	adc	r15, r25
    833e:	0a 1f       	adc	r16, r26
    8340:	1b 1f       	adc	r17, r27
    8342:	8e 8d       	ldd	r24, Y+30	; 0x1e
    8344:	9f 8d       	ldd	r25, Y+31	; 0x1f
    8346:	86 54       	subi	r24, 0x46	; 70
    8348:	91 09       	sbc	r25, r1
    834a:	09 2e       	mov	r0, r25
    834c:	00 0c       	add	r0, r0
    834e:	aa 0b       	sbc	r26, r26
    8350:	bb 0b       	sbc	r27, r27
    8352:	9c 01       	movw	r18, r24
    8354:	ad 01       	movw	r20, r26
    8356:	60 e8       	ldi	r22, 0x80	; 128
    8358:	73 e3       	ldi	r23, 0x33	; 51
    835a:	81 ee       	ldi	r24, 0xE1	; 225
    835c:	91 e0       	ldi	r25, 0x01	; 1
    835e:	0e 94 2a 7a 	call	0xf454	; 0xf454 <__mulsi3>
    8362:	dc 01       	movw	r26, r24
    8364:	cb 01       	movw	r24, r22
    8366:	e8 0e       	add	r14, r24
    8368:	f9 1e       	adc	r15, r25
    836a:	0a 1f       	adc	r16, r26
    836c:	1b 1f       	adc	r17, r27
    836e:	8e 8d       	ldd	r24, Y+30	; 0x1e
    8370:	9f 8d       	ldd	r25, Y+31	; 0x1f
    8372:	85 54       	subi	r24, 0x45	; 69
    8374:	91 09       	sbc	r25, r1
    8376:	99 23       	and	r25, r25
    8378:	0c f4       	brge	.+2      	; 0x837c <ds3231_get_epoch+0x2d6>
    837a:	03 96       	adiw	r24, 0x03	; 3
    837c:	95 95       	asr	r25
    837e:	87 95       	ror	r24
    8380:	95 95       	asr	r25
    8382:	87 95       	ror	r24
    8384:	09 2e       	mov	r0, r25
    8386:	00 0c       	add	r0, r0
    8388:	aa 0b       	sbc	r26, r26
    838a:	bb 0b       	sbc	r27, r27
    838c:	9c 01       	movw	r18, r24
    838e:	ad 01       	movw	r20, r26
    8390:	60 e8       	ldi	r22, 0x80	; 128
    8392:	71 e5       	ldi	r23, 0x51	; 81
    8394:	81 e0       	ldi	r24, 0x01	; 1
    8396:	90 e0       	ldi	r25, 0x00	; 0
    8398:	0e 94 2a 7a 	call	0xf454	; 0xf454 <__mulsi3>
    839c:	dc 01       	movw	r26, r24
    839e:	cb 01       	movw	r24, r22
    83a0:	e8 0e       	add	r14, r24
    83a2:	f9 1e       	adc	r15, r25
    83a4:	0a 1f       	adc	r16, r26
    83a6:	1b 1f       	adc	r17, r27
    83a8:	8e 8d       	ldd	r24, Y+30	; 0x1e
    83aa:	9f 8d       	ldd	r25, Y+31	; 0x1f
    83ac:	01 97       	sbiw	r24, 0x01	; 1
    83ae:	24 e6       	ldi	r18, 0x64	; 100
    83b0:	30 e0       	ldi	r19, 0x00	; 0
    83b2:	b9 01       	movw	r22, r18
    83b4:	0e 94 4e 7a 	call	0xf49c	; 0xf49c <__divmodhi4>
    83b8:	cb 01       	movw	r24, r22
    83ba:	09 2e       	mov	r0, r25
    83bc:	00 0c       	add	r0, r0
    83be:	aa 0b       	sbc	r26, r26
    83c0:	bb 0b       	sbc	r27, r27
    83c2:	9c 01       	movw	r18, r24
    83c4:	ad 01       	movw	r20, r26
    83c6:	60 e8       	ldi	r22, 0x80	; 128
    83c8:	7e ea       	ldi	r23, 0xAE	; 174
    83ca:	8e ef       	ldi	r24, 0xFE	; 254
    83cc:	9f ef       	ldi	r25, 0xFF	; 255
    83ce:	0e 94 2a 7a 	call	0xf454	; 0xf454 <__mulsi3>
    83d2:	dc 01       	movw	r26, r24
    83d4:	cb 01       	movw	r24, r22
    83d6:	e8 0e       	add	r14, r24
    83d8:	f9 1e       	adc	r15, r25
    83da:	0a 1f       	adc	r16, r26
    83dc:	1b 1f       	adc	r17, r27
    83de:	8e 8d       	ldd	r24, Y+30	; 0x1e
    83e0:	9f 8d       	ldd	r25, Y+31	; 0x1f
    83e2:	85 5d       	subi	r24, 0xD5	; 213
    83e4:	9e 4f       	sbci	r25, 0xFE	; 254
    83e6:	20 e9       	ldi	r18, 0x90	; 144
    83e8:	31 e0       	ldi	r19, 0x01	; 1
    83ea:	b9 01       	movw	r22, r18
    83ec:	0e 94 4e 7a 	call	0xf49c	; 0xf49c <__divmodhi4>
    83f0:	cb 01       	movw	r24, r22
    83f2:	09 2e       	mov	r0, r25
    83f4:	00 0c       	add	r0, r0
    83f6:	aa 0b       	sbc	r26, r26
    83f8:	bb 0b       	sbc	r27, r27
    83fa:	9c 01       	movw	r18, r24
    83fc:	ad 01       	movw	r20, r26
    83fe:	60 e8       	ldi	r22, 0x80	; 128
    8400:	71 e5       	ldi	r23, 0x51	; 81
    8402:	81 e0       	ldi	r24, 0x01	; 1
    8404:	90 e0       	ldi	r25, 0x00	; 0
    8406:	0e 94 2a 7a 	call	0xf454	; 0xf454 <__mulsi3>
    840a:	dc 01       	movw	r26, r24
    840c:	cb 01       	movw	r24, r22
    840e:	8e 0d       	add	r24, r14
    8410:	9f 1d       	adc	r25, r15
    8412:	a0 1f       	adc	r26, r16
    8414:	b1 1f       	adc	r27, r17
    8416:	8a 83       	std	Y+2, r24	; 0x02
    8418:	9b 83       	std	Y+3, r25	; 0x03
    841a:	ac 83       	std	Y+4, r26	; 0x04
    841c:	bd 83       	std	Y+5, r27	; 0x05
    841e:	8c a1       	ldd	r24, Y+36	; 0x24
    8420:	9d a1       	ldd	r25, Y+37	; 0x25
    8422:	89 2b       	or	r24, r25
    8424:	51 f0       	breq	.+20     	; 0x843a <ds3231_get_epoch+0x394>
    8426:	8e 81       	ldd	r24, Y+6	; 0x06
    8428:	88 23       	and	r24, r24
    842a:	11 f0       	breq	.+4      	; 0x8430 <ds3231_get_epoch+0x38a>
    842c:	2c ef       	ldi	r18, 0xFC	; 252
    842e:	01 c0       	rjmp	.+2      	; 0x8432 <ds3231_get_epoch+0x38c>
    8430:	20 e0       	ldi	r18, 0x00	; 0
    8432:	8c a1       	ldd	r24, Y+36	; 0x24
    8434:	9d a1       	ldd	r25, Y+37	; 0x25
    8436:	fc 01       	movw	r30, r24
    8438:	20 83       	st	Z, r18
    843a:	8a 81       	ldd	r24, Y+2	; 0x02
    843c:	9b 81       	ldd	r25, Y+3	; 0x03
    843e:	ac 81       	ldd	r26, Y+4	; 0x04
    8440:	bd 81       	ldd	r27, Y+5	; 0x05
    8442:	bc 01       	movw	r22, r24
    8444:	cd 01       	movw	r24, r26
    8446:	a5 96       	adiw	r28, 0x25	; 37
    8448:	cd bf       	out	0x3d, r28	; 61
    844a:	de bf       	out	0x3e, r29	; 62
    844c:	df 91       	pop	r29
    844e:	cf 91       	pop	r28
    8450:	1f 91       	pop	r17
    8452:	0f 91       	pop	r16
    8454:	ff 90       	pop	r15
    8456:	ef 90       	pop	r14
    8458:	08 95       	ret

0000845a <ds3231_set_date_time_arducon>:
    845a:	cf 93       	push	r28
    845c:	df 93       	push	r29
    845e:	cd b7       	in	r28, 0x3d	; 61
    8460:	de b7       	in	r29, 0x3e	; 62
    8462:	2c 97       	sbiw	r28, 0x0c	; 12
    8464:	cd bf       	out	0x3d, r28	; 61
    8466:	de bf       	out	0x3e, r29	; 62
    8468:	8a 87       	std	Y+10, r24	; 0x0a
    846a:	9b 87       	std	Y+11, r25	; 0x0b
    846c:	6c 87       	std	Y+12, r22	; 0x0c
    846e:	8a e0       	ldi	r24, 0x0A	; 10
    8470:	89 83       	std	Y+1, r24	; 0x01
    8472:	81 e0       	ldi	r24, 0x01	; 1
    8474:	8a 83       	std	Y+2, r24	; 0x02
    8476:	27 e0       	ldi	r18, 0x07	; 7
    8478:	ce 01       	movw	r24, r28
    847a:	03 96       	adiw	r24, 0x03	; 3
    847c:	fc 01       	movw	r30, r24
    847e:	32 2f       	mov	r19, r18
    8480:	11 92       	st	Z+, r1
    8482:	3a 95       	dec	r19
    8484:	e9 f7       	brne	.-6      	; 0x8480 <ds3231_set_date_time_arducon+0x26>
    8486:	8a 85       	ldd	r24, Y+10	; 0x0a
    8488:	9b 85       	ldd	r25, Y+11	; 0x0b
    848a:	89 2b       	or	r24, r25
    848c:	09 f4       	brne	.+2      	; 0x8490 <ds3231_set_date_time_arducon+0x36>
    848e:	47 c0       	rjmp	.+142    	; 0x851e <ds3231_set_date_time_arducon+0xc4>
    8490:	8a 85       	ldd	r24, Y+10	; 0x0a
    8492:	9b 85       	ldd	r25, Y+11	; 0x0b
    8494:	0a 96       	adiw	r24, 0x0a	; 10
    8496:	0e 94 83 3e 	call	0x7d06	; 0x7d06 <_Z8char2bcdPc>
    849a:	8b 83       	std	Y+3, r24	; 0x03
    849c:	8a 85       	ldd	r24, Y+10	; 0x0a
    849e:	9b 85       	ldd	r25, Y+11	; 0x0b
    84a0:	08 96       	adiw	r24, 0x08	; 8
    84a2:	0e 94 83 3e 	call	0x7d06	; 0x7d06 <_Z8char2bcdPc>
    84a6:	8c 83       	std	Y+4, r24	; 0x04
    84a8:	8a 85       	ldd	r24, Y+10	; 0x0a
    84aa:	9b 85       	ldd	r25, Y+11	; 0x0b
    84ac:	06 96       	adiw	r24, 0x06	; 6
    84ae:	0e 94 83 3e 	call	0x7d06	; 0x7d06 <_Z8char2bcdPc>
    84b2:	8d 83       	std	Y+5, r24	; 0x05
    84b4:	8a 85       	ldd	r24, Y+10	; 0x0a
    84b6:	9b 85       	ldd	r25, Y+11	; 0x0b
    84b8:	04 96       	adiw	r24, 0x04	; 4
    84ba:	0e 94 83 3e 	call	0x7d06	; 0x7d06 <_Z8char2bcdPc>
    84be:	8f 83       	std	Y+7, r24	; 0x07
    84c0:	8a 85       	ldd	r24, Y+10	; 0x0a
    84c2:	9b 85       	ldd	r25, Y+11	; 0x0b
    84c4:	02 96       	adiw	r24, 0x02	; 2
    84c6:	0e 94 83 3e 	call	0x7d06	; 0x7d06 <_Z8char2bcdPc>
    84ca:	88 87       	std	Y+8, r24	; 0x08
    84cc:	8a 85       	ldd	r24, Y+10	; 0x0a
    84ce:	9b 85       	ldd	r25, Y+11	; 0x0b
    84d0:	0e 94 83 3e 	call	0x7d06	; 0x7d06 <_Z8char2bcdPc>
    84d4:	89 87       	std	Y+9, r24	; 0x09
    84d6:	89 81       	ldd	r24, Y+1	; 0x01
    84d8:	9f ef       	ldi	r25, 0xFF	; 255
    84da:	98 0f       	add	r25, r24
    84dc:	99 83       	std	Y+1, r25	; 0x01
    84de:	88 23       	and	r24, r24
    84e0:	d1 f0       	breq	.+52     	; 0x8516 <ds3231_set_date_time_arducon+0xbc>
    84e2:	9c 85       	ldd	r25, Y+12	; 0x0c
    84e4:	89 2f       	mov	r24, r25
    84e6:	88 0f       	add	r24, r24
    84e8:	88 0f       	add	r24, r24
    84ea:	88 0f       	add	r24, r24
    84ec:	38 2f       	mov	r19, r24
    84ee:	39 1b       	sub	r19, r25
    84f0:	ce 01       	movw	r24, r28
    84f2:	03 96       	adiw	r24, 0x03	; 3
    84f4:	27 e0       	ldi	r18, 0x07	; 7
    84f6:	ac 01       	movw	r20, r24
    84f8:	63 2f       	mov	r22, r19
    84fa:	80 ed       	ldi	r24, 0xD0	; 208
    84fc:	0e 94 c9 4f 	call	0x9f92	; 0x9f92 <I2C_0_SendData>
    8500:	98 2f       	mov	r25, r24
    8502:	81 e0       	ldi	r24, 0x01	; 1
    8504:	97 30       	cpi	r25, 0x07	; 7
    8506:	09 f4       	brne	.+2      	; 0x850a <ds3231_set_date_time_arducon+0xb0>
    8508:	80 e0       	ldi	r24, 0x00	; 0
    850a:	8a 83       	std	Y+2, r24	; 0x02
    850c:	8a 81       	ldd	r24, Y+2	; 0x02
    850e:	88 23       	and	r24, r24
    8510:	11 f0       	breq	.+4      	; 0x8516 <ds3231_set_date_time_arducon+0xbc>
    8512:	81 e0       	ldi	r24, 0x01	; 1
    8514:	01 c0       	rjmp	.+2      	; 0x8518 <ds3231_set_date_time_arducon+0xbe>
    8516:	80 e0       	ldi	r24, 0x00	; 0
    8518:	88 23       	and	r24, r24
    851a:	09 f0       	breq	.+2      	; 0x851e <ds3231_set_date_time_arducon+0xc4>
    851c:	dc cf       	rjmp	.-72     	; 0x84d6 <ds3231_set_date_time_arducon+0x7c>
    851e:	8a 81       	ldd	r24, Y+2	; 0x02
    8520:	2c 96       	adiw	r28, 0x0c	; 12
    8522:	cd bf       	out	0x3d, r28	; 61
    8524:	de bf       	out	0x3e, r29	; 62
    8526:	df 91       	pop	r29
    8528:	cf 91       	pop	r28
    852a:	08 95       	ret

0000852c <ds3231_set_date_time>:
    852c:	cf 93       	push	r28
    852e:	df 93       	push	r29
    8530:	cd b7       	in	r28, 0x3d	; 61
    8532:	de b7       	in	r29, 0x3e	; 62
    8534:	63 97       	sbiw	r28, 0x13	; 19
    8536:	cd bf       	out	0x3d, r28	; 61
    8538:	de bf       	out	0x3e, r29	; 62
    853a:	89 8b       	std	Y+17, r24	; 0x11
    853c:	9a 8b       	std	Y+18, r25	; 0x12
    853e:	6b 8b       	std	Y+19, r22	; 0x13
    8540:	8a e0       	ldi	r24, 0x0A	; 10
    8542:	89 83       	std	Y+1, r24	; 0x01
    8544:	1a 86       	std	Y+10, r1	; 0x0a
    8546:	1b 86       	std	Y+11, r1	; 0x0b
    8548:	1c 86       	std	Y+12, r1	; 0x0c
    854a:	81 e0       	ldi	r24, 0x01	; 1
    854c:	8d 87       	std	Y+13, r24	; 0x0d
    854e:	1e 86       	std	Y+14, r1	; 0x0e
    8550:	1f 86       	std	Y+15, r1	; 0x0f
    8552:	18 8a       	std	Y+16, r1	; 0x10
    8554:	80 ed       	ldi	r24, 0xD0	; 208
    8556:	97 e0       	ldi	r25, 0x07	; 7
    8558:	8a 83       	std	Y+2, r24	; 0x02
    855a:	9b 83       	std	Y+3, r25	; 0x03
    855c:	89 89       	ldd	r24, Y+17	; 0x11
    855e:	9a 89       	ldd	r25, Y+18	; 0x12
    8560:	42 96       	adiw	r24, 0x12	; 18
    8562:	fc 01       	movw	r30, r24
    8564:	80 81       	ld	r24, Z
    8566:	80 53       	subi	r24, 0x30	; 48
    8568:	8a 87       	std	Y+10, r24	; 0x0a
    856a:	8a 85       	ldd	r24, Y+10	; 0x0a
    856c:	28 2f       	mov	r18, r24
    856e:	89 89       	ldd	r24, Y+17	; 0x11
    8570:	9a 89       	ldd	r25, Y+18	; 0x12
    8572:	41 96       	adiw	r24, 0x11	; 17
    8574:	fc 01       	movw	r30, r24
    8576:	80 81       	ld	r24, Z
    8578:	88 2f       	mov	r24, r24
    857a:	90 e0       	ldi	r25, 0x00	; 0
    857c:	c0 97       	sbiw	r24, 0x30	; 48
    857e:	82 95       	swap	r24
    8580:	92 95       	swap	r25
    8582:	90 7f       	andi	r25, 0xF0	; 240
    8584:	98 27       	eor	r25, r24
    8586:	80 7f       	andi	r24, 0xF0	; 240
    8588:	98 27       	eor	r25, r24
    858a:	82 2b       	or	r24, r18
    858c:	8a 87       	std	Y+10, r24	; 0x0a
    858e:	89 89       	ldd	r24, Y+17	; 0x11
    8590:	9a 89       	ldd	r25, Y+18	; 0x12
    8592:	0f 96       	adiw	r24, 0x0f	; 15
    8594:	fc 01       	movw	r30, r24
    8596:	80 81       	ld	r24, Z
    8598:	80 53       	subi	r24, 0x30	; 48
    859a:	8b 87       	std	Y+11, r24	; 0x0b
    859c:	8b 85       	ldd	r24, Y+11	; 0x0b
    859e:	28 2f       	mov	r18, r24
    85a0:	89 89       	ldd	r24, Y+17	; 0x11
    85a2:	9a 89       	ldd	r25, Y+18	; 0x12
    85a4:	0e 96       	adiw	r24, 0x0e	; 14
    85a6:	fc 01       	movw	r30, r24
    85a8:	80 81       	ld	r24, Z
    85aa:	88 2f       	mov	r24, r24
    85ac:	90 e0       	ldi	r25, 0x00	; 0
    85ae:	c0 97       	sbiw	r24, 0x30	; 48
    85b0:	82 95       	swap	r24
    85b2:	92 95       	swap	r25
    85b4:	90 7f       	andi	r25, 0xF0	; 240
    85b6:	98 27       	eor	r25, r24
    85b8:	80 7f       	andi	r24, 0xF0	; 240
    85ba:	98 27       	eor	r25, r24
    85bc:	82 2b       	or	r24, r18
    85be:	8b 87       	std	Y+11, r24	; 0x0b
    85c0:	89 89       	ldd	r24, Y+17	; 0x11
    85c2:	9a 89       	ldd	r25, Y+18	; 0x12
    85c4:	0c 96       	adiw	r24, 0x0c	; 12
    85c6:	fc 01       	movw	r30, r24
    85c8:	80 81       	ld	r24, Z
    85ca:	80 53       	subi	r24, 0x30	; 48
    85cc:	8c 87       	std	Y+12, r24	; 0x0c
    85ce:	8c 85       	ldd	r24, Y+12	; 0x0c
    85d0:	28 2f       	mov	r18, r24
    85d2:	89 89       	ldd	r24, Y+17	; 0x11
    85d4:	9a 89       	ldd	r25, Y+18	; 0x12
    85d6:	0b 96       	adiw	r24, 0x0b	; 11
    85d8:	fc 01       	movw	r30, r24
    85da:	80 81       	ld	r24, Z
    85dc:	88 2f       	mov	r24, r24
    85de:	90 e0       	ldi	r25, 0x00	; 0
    85e0:	c0 97       	sbiw	r24, 0x30	; 48
    85e2:	82 95       	swap	r24
    85e4:	92 95       	swap	r25
    85e6:	90 7f       	andi	r25, 0xF0	; 240
    85e8:	98 27       	eor	r25, r24
    85ea:	80 7f       	andi	r24, 0xF0	; 240
    85ec:	98 27       	eor	r25, r24
    85ee:	82 2b       	or	r24, r18
    85f0:	8c 87       	std	Y+12, r24	; 0x0c
    85f2:	89 89       	ldd	r24, Y+17	; 0x11
    85f4:	9a 89       	ldd	r25, Y+18	; 0x12
    85f6:	09 96       	adiw	r24, 0x09	; 9
    85f8:	fc 01       	movw	r30, r24
    85fa:	80 81       	ld	r24, Z
    85fc:	80 53       	subi	r24, 0x30	; 48
    85fe:	8e 87       	std	Y+14, r24	; 0x0e
    8600:	8f 85       	ldd	r24, Y+15	; 0x0f
    8602:	88 2f       	mov	r24, r24
    8604:	90 e0       	ldi	r25, 0x00	; 0
    8606:	8c 83       	std	Y+4, r24	; 0x04
    8608:	9d 83       	std	Y+5, r25	; 0x05
    860a:	89 89       	ldd	r24, Y+17	; 0x11
    860c:	9a 89       	ldd	r25, Y+18	; 0x12
    860e:	08 96       	adiw	r24, 0x08	; 8
    8610:	fc 01       	movw	r30, r24
    8612:	80 81       	ld	r24, Z
    8614:	88 2f       	mov	r24, r24
    8616:	90 e0       	ldi	r25, 0x00	; 0
    8618:	c0 97       	sbiw	r24, 0x30	; 48
    861a:	8e 83       	std	Y+6, r24	; 0x06
    861c:	9f 83       	std	Y+7, r25	; 0x07
    861e:	8e 81       	ldd	r24, Y+6	; 0x06
    8620:	9f 81       	ldd	r25, Y+7	; 0x07
    8622:	88 0f       	add	r24, r24
    8624:	99 1f       	adc	r25, r25
    8626:	9c 01       	movw	r18, r24
    8628:	22 0f       	add	r18, r18
    862a:	33 1f       	adc	r19, r19
    862c:	22 0f       	add	r18, r18
    862e:	33 1f       	adc	r19, r19
    8630:	82 0f       	add	r24, r18
    8632:	93 1f       	adc	r25, r19
    8634:	2c 81       	ldd	r18, Y+4	; 0x04
    8636:	3d 81       	ldd	r19, Y+5	; 0x05
    8638:	82 0f       	add	r24, r18
    863a:	93 1f       	adc	r25, r19
    863c:	8c 83       	std	Y+4, r24	; 0x04
    863e:	9d 83       	std	Y+5, r25	; 0x05
    8640:	8e 85       	ldd	r24, Y+14	; 0x0e
    8642:	28 2f       	mov	r18, r24
    8644:	8e 81       	ldd	r24, Y+6	; 0x06
    8646:	9f 81       	ldd	r25, Y+7	; 0x07
    8648:	82 95       	swap	r24
    864a:	92 95       	swap	r25
    864c:	90 7f       	andi	r25, 0xF0	; 240
    864e:	98 27       	eor	r25, r24
    8650:	80 7f       	andi	r24, 0xF0	; 240
    8652:	98 27       	eor	r25, r24
    8654:	82 2b       	or	r24, r18
    8656:	8e 87       	std	Y+14, r24	; 0x0e
    8658:	89 89       	ldd	r24, Y+17	; 0x11
    865a:	9a 89       	ldd	r25, Y+18	; 0x12
    865c:	06 96       	adiw	r24, 0x06	; 6
    865e:	fc 01       	movw	r30, r24
    8660:	80 81       	ld	r24, Z
    8662:	80 53       	subi	r24, 0x30	; 48
    8664:	8f 87       	std	Y+15, r24	; 0x0f
    8666:	88 89       	ldd	r24, Y+16	; 0x10
    8668:	88 2f       	mov	r24, r24
    866a:	90 e0       	ldi	r25, 0x00	; 0
    866c:	88 87       	std	Y+8, r24	; 0x08
    866e:	99 87       	std	Y+9, r25	; 0x09
    8670:	89 89       	ldd	r24, Y+17	; 0x11
    8672:	9a 89       	ldd	r25, Y+18	; 0x12
    8674:	05 96       	adiw	r24, 0x05	; 5
    8676:	fc 01       	movw	r30, r24
    8678:	80 81       	ld	r24, Z
    867a:	88 2f       	mov	r24, r24
    867c:	90 e0       	ldi	r25, 0x00	; 0
    867e:	c0 97       	sbiw	r24, 0x30	; 48
    8680:	8e 83       	std	Y+6, r24	; 0x06
    8682:	9f 83       	std	Y+7, r25	; 0x07
    8684:	8e 81       	ldd	r24, Y+6	; 0x06
    8686:	9f 81       	ldd	r25, Y+7	; 0x07
    8688:	88 0f       	add	r24, r24
    868a:	99 1f       	adc	r25, r25
    868c:	9c 01       	movw	r18, r24
    868e:	22 0f       	add	r18, r18
    8690:	33 1f       	adc	r19, r19
    8692:	22 0f       	add	r18, r18
    8694:	33 1f       	adc	r19, r19
    8696:	82 0f       	add	r24, r18
    8698:	93 1f       	adc	r25, r19
    869a:	28 85       	ldd	r18, Y+8	; 0x08
    869c:	39 85       	ldd	r19, Y+9	; 0x09
    869e:	82 0f       	add	r24, r18
    86a0:	93 1f       	adc	r25, r19
    86a2:	88 87       	std	Y+8, r24	; 0x08
    86a4:	99 87       	std	Y+9, r25	; 0x09
    86a6:	8f 85       	ldd	r24, Y+15	; 0x0f
    86a8:	28 2f       	mov	r18, r24
    86aa:	8e 81       	ldd	r24, Y+6	; 0x06
    86ac:	9f 81       	ldd	r25, Y+7	; 0x07
    86ae:	82 95       	swap	r24
    86b0:	92 95       	swap	r25
    86b2:	90 7f       	andi	r25, 0xF0	; 240
    86b4:	98 27       	eor	r25, r24
    86b6:	80 7f       	andi	r24, 0xF0	; 240
    86b8:	98 27       	eor	r25, r24
    86ba:	82 2b       	or	r24, r18
    86bc:	8f 87       	std	Y+15, r24	; 0x0f
    86be:	89 89       	ldd	r24, Y+17	; 0x11
    86c0:	9a 89       	ldd	r25, Y+18	; 0x12
    86c2:	03 96       	adiw	r24, 0x03	; 3
    86c4:	fc 01       	movw	r30, r24
    86c6:	80 81       	ld	r24, Z
    86c8:	80 53       	subi	r24, 0x30	; 48
    86ca:	88 8b       	std	Y+16, r24	; 0x10
    86cc:	89 89       	ldd	r24, Y+17	; 0x11
    86ce:	88 2f       	mov	r24, r24
    86d0:	90 e0       	ldi	r25, 0x00	; 0
    86d2:	2a 81       	ldd	r18, Y+2	; 0x02
    86d4:	3b 81       	ldd	r19, Y+3	; 0x03
    86d6:	82 0f       	add	r24, r18
    86d8:	93 1f       	adc	r25, r19
    86da:	8a 83       	std	Y+2, r24	; 0x02
    86dc:	9b 83       	std	Y+3, r25	; 0x03
    86de:	89 89       	ldd	r24, Y+17	; 0x11
    86e0:	9a 89       	ldd	r25, Y+18	; 0x12
    86e2:	02 96       	adiw	r24, 0x02	; 2
    86e4:	fc 01       	movw	r30, r24
    86e6:	80 81       	ld	r24, Z
    86e8:	88 2f       	mov	r24, r24
    86ea:	90 e0       	ldi	r25, 0x00	; 0
    86ec:	c0 97       	sbiw	r24, 0x30	; 48
    86ee:	8e 83       	std	Y+6, r24	; 0x06
    86f0:	9f 83       	std	Y+7, r25	; 0x07
    86f2:	8e 81       	ldd	r24, Y+6	; 0x06
    86f4:	9f 81       	ldd	r25, Y+7	; 0x07
    86f6:	88 0f       	add	r24, r24
    86f8:	99 1f       	adc	r25, r25
    86fa:	9c 01       	movw	r18, r24
    86fc:	22 0f       	add	r18, r18
    86fe:	33 1f       	adc	r19, r19
    8700:	22 0f       	add	r18, r18
    8702:	33 1f       	adc	r19, r19
    8704:	82 0f       	add	r24, r18
    8706:	93 1f       	adc	r25, r19
    8708:	2a 81       	ldd	r18, Y+2	; 0x02
    870a:	3b 81       	ldd	r19, Y+3	; 0x03
    870c:	82 0f       	add	r24, r18
    870e:	93 1f       	adc	r25, r19
    8710:	8a 83       	std	Y+2, r24	; 0x02
    8712:	9b 83       	std	Y+3, r25	; 0x03
    8714:	88 89       	ldd	r24, Y+16	; 0x10
    8716:	28 2f       	mov	r18, r24
    8718:	8e 81       	ldd	r24, Y+6	; 0x06
    871a:	9f 81       	ldd	r25, Y+7	; 0x07
    871c:	82 95       	swap	r24
    871e:	92 95       	swap	r25
    8720:	90 7f       	andi	r25, 0xF0	; 240
    8722:	98 27       	eor	r25, r24
    8724:	80 7f       	andi	r24, 0xF0	; 240
    8726:	98 27       	eor	r25, r24
    8728:	82 2b       	or	r24, r18
    872a:	88 8b       	std	Y+16, r24	; 0x10
    872c:	89 81       	ldd	r24, Y+1	; 0x01
    872e:	9f ef       	ldi	r25, 0xFF	; 255
    8730:	98 0f       	add	r25, r24
    8732:	99 83       	std	Y+1, r25	; 0x01
    8734:	88 23       	and	r24, r24
    8736:	99 f0       	breq	.+38     	; 0x875e <ds3231_set_date_time+0x232>
    8738:	9b 89       	ldd	r25, Y+19	; 0x13
    873a:	89 2f       	mov	r24, r25
    873c:	88 0f       	add	r24, r24
    873e:	88 0f       	add	r24, r24
    8740:	88 0f       	add	r24, r24
    8742:	38 2f       	mov	r19, r24
    8744:	39 1b       	sub	r19, r25
    8746:	ce 01       	movw	r24, r28
    8748:	0a 96       	adiw	r24, 0x0a	; 10
    874a:	27 e0       	ldi	r18, 0x07	; 7
    874c:	ac 01       	movw	r20, r24
    874e:	63 2f       	mov	r22, r19
    8750:	80 ed       	ldi	r24, 0xD0	; 208
    8752:	0e 94 c9 4f 	call	0x9f92	; 0x9f92 <I2C_0_SendData>
    8756:	87 30       	cpi	r24, 0x07	; 7
    8758:	11 f0       	breq	.+4      	; 0x875e <ds3231_set_date_time+0x232>
    875a:	81 e0       	ldi	r24, 0x01	; 1
    875c:	01 c0       	rjmp	.+2      	; 0x8760 <ds3231_set_date_time+0x234>
    875e:	80 e0       	ldi	r24, 0x00	; 0
    8760:	88 23       	and	r24, r24
    8762:	09 f0       	breq	.+2      	; 0x8766 <ds3231_set_date_time+0x23a>
    8764:	e3 cf       	rjmp	.-58     	; 0x872c <ds3231_set_date_time+0x200>
    8766:	00 00       	nop
    8768:	63 96       	adiw	r28, 0x13	; 19
    876a:	cd bf       	out	0x3d, r28	; 61
    876c:	de bf       	out	0x3e, r29	; 62
    876e:	df 91       	pop	r29
    8770:	cf 91       	pop	r28
    8772:	08 95       	ret

00008774 <ds3231_1s_sqw>:
#endif // DATE_STRING_SUPPORT_ENABLED
	
	bool ds3231_1s_sqw(bool enable)
	{
    8774:	cf 93       	push	r28
    8776:	df 93       	push	r29
    8778:	00 d0       	rcall	.+0      	; 0x877a <ds3231_1s_sqw+0x6>
    877a:	00 d0       	rcall	.+0      	; 0x877c <ds3231_1s_sqw+0x8>
    877c:	cd b7       	in	r28, 0x3d	; 61
    877e:	de b7       	in	r29, 0x3e	; 62
    8780:	8c 83       	std	Y+4, r24	; 0x04
		uint8_t tries = 10; /* try several times in case of transient bus issues */
    8782:	8a e0       	ldi	r24, 0x0A	; 10
    8784:	89 83       	std	Y+1, r24	; 0x01
		bool failure;
		uint8_t data[1];
		
		data[0] = enable ? 0x00:0x04;	
    8786:	8c 81       	ldd	r24, Y+4	; 0x04
    8788:	88 23       	and	r24, r24
    878a:	11 f0       	breq	.+4      	; 0x8790 <ds3231_1s_sqw+0x1c>
    878c:	80 e0       	ldi	r24, 0x00	; 0
    878e:	01 c0       	rjmp	.+2      	; 0x8792 <ds3231_1s_sqw+0x1e>
    8790:	84 e0       	ldi	r24, 0x04	; 4
    8792:	8b 83       	std	Y+3, r24	; 0x03
		while(tries-- && (failure = (I2C_0_SendData(DS3231_I2C_SLAVE_ADDR, RTC_CONTROL, data, 1) != 1)));
    8794:	89 81       	ldd	r24, Y+1	; 0x01
    8796:	9f ef       	ldi	r25, 0xFF	; 255
    8798:	98 0f       	add	r25, r24
    879a:	99 83       	std	Y+1, r25	; 0x01
    879c:	88 23       	and	r24, r24
    879e:	99 f0       	breq	.+38     	; 0x87c6 <ds3231_1s_sqw+0x52>
    87a0:	ce 01       	movw	r24, r28
    87a2:	03 96       	adiw	r24, 0x03	; 3
    87a4:	21 e0       	ldi	r18, 0x01	; 1
    87a6:	ac 01       	movw	r20, r24
    87a8:	6e e0       	ldi	r22, 0x0E	; 14
    87aa:	80 ed       	ldi	r24, 0xD0	; 208
    87ac:	0e 94 c9 4f 	call	0x9f92	; 0x9f92 <I2C_0_SendData>
    87b0:	98 2f       	mov	r25, r24
    87b2:	81 e0       	ldi	r24, 0x01	; 1
    87b4:	91 30       	cpi	r25, 0x01	; 1
    87b6:	09 f4       	brne	.+2      	; 0x87ba <ds3231_1s_sqw+0x46>
    87b8:	80 e0       	ldi	r24, 0x00	; 0
    87ba:	8a 83       	std	Y+2, r24	; 0x02
    87bc:	8a 81       	ldd	r24, Y+2	; 0x02
    87be:	88 23       	and	r24, r24
    87c0:	11 f0       	breq	.+4      	; 0x87c6 <ds3231_1s_sqw+0x52>
    87c2:	81 e0       	ldi	r24, 0x01	; 1
    87c4:	01 c0       	rjmp	.+2      	; 0x87c8 <ds3231_1s_sqw+0x54>
    87c6:	80 e0       	ldi	r24, 0x00	; 0
    87c8:	88 23       	and	r24, r24
    87ca:	09 f0       	breq	.+2      	; 0x87ce <ds3231_1s_sqw+0x5a>
    87cc:	e3 cf       	rjmp	.-58     	; 0x8794 <ds3231_1s_sqw+0x20>
		
		return(failure);
    87ce:	8a 81       	ldd	r24, Y+2	; 0x02
	}
    87d0:	24 96       	adiw	r28, 0x04	; 4
    87d2:	cd bf       	out	0x3d, r28	; 61
    87d4:	de bf       	out	0x3e, r29	; 62
    87d6:	df 91       	pop	r29
    87d8:	cf 91       	pop	r28
    87da:	08 95       	ret

000087dc <ds3231_set_aging>:


	bool ds3231_set_aging(int8_t data_in)
	{
    87dc:	cf 93       	push	r28
    87de:	df 93       	push	r29
    87e0:	00 d0       	rcall	.+0      	; 0x87e2 <ds3231_set_aging+0x6>
    87e2:	00 d0       	rcall	.+0      	; 0x87e4 <ds3231_set_aging+0x8>
    87e4:	cd b7       	in	r28, 0x3d	; 61
    87e6:	de b7       	in	r29, 0x3e	; 62
    87e8:	8c 83       	std	Y+4, r24	; 0x04
		uint8_t tries = 10; /* try several times in case of transient bus issues */
    87ea:	8a e0       	ldi	r24, 0x0A	; 10
    87ec:	89 83       	std	Y+1, r24	; 0x01
		bool failure;
		int8_t data[1];
		
		data[0] = data_in;
    87ee:	8c 81       	ldd	r24, Y+4	; 0x04
    87f0:	8b 83       	std	Y+3, r24	; 0x03
		while(tries-- && (failure = (I2C_0_SendData(DS3231_I2C_SLAVE_ADDR, RTC_AGING, (uint8_t *)data, 1) != 1)));
    87f2:	89 81       	ldd	r24, Y+1	; 0x01
    87f4:	9f ef       	ldi	r25, 0xFF	; 255
    87f6:	98 0f       	add	r25, r24
    87f8:	99 83       	std	Y+1, r25	; 0x01
    87fa:	88 23       	and	r24, r24
    87fc:	99 f0       	breq	.+38     	; 0x8824 <ds3231_set_aging+0x48>
    87fe:	ce 01       	movw	r24, r28
    8800:	03 96       	adiw	r24, 0x03	; 3
    8802:	21 e0       	ldi	r18, 0x01	; 1
    8804:	ac 01       	movw	r20, r24
    8806:	60 e1       	ldi	r22, 0x10	; 16
    8808:	80 ed       	ldi	r24, 0xD0	; 208
    880a:	0e 94 c9 4f 	call	0x9f92	; 0x9f92 <I2C_0_SendData>
    880e:	98 2f       	mov	r25, r24
    8810:	81 e0       	ldi	r24, 0x01	; 1
    8812:	91 30       	cpi	r25, 0x01	; 1
    8814:	09 f4       	brne	.+2      	; 0x8818 <ds3231_set_aging+0x3c>
    8816:	80 e0       	ldi	r24, 0x00	; 0
    8818:	8a 83       	std	Y+2, r24	; 0x02
    881a:	8a 81       	ldd	r24, Y+2	; 0x02
    881c:	88 23       	and	r24, r24
    881e:	11 f0       	breq	.+4      	; 0x8824 <ds3231_set_aging+0x48>
    8820:	81 e0       	ldi	r24, 0x01	; 1
    8822:	01 c0       	rjmp	.+2      	; 0x8826 <ds3231_set_aging+0x4a>
    8824:	80 e0       	ldi	r24, 0x00	; 0
    8826:	88 23       	and	r24, r24
    8828:	09 f0       	breq	.+2      	; 0x882c <ds3231_set_aging+0x50>
    882a:	e3 cf       	rjmp	.-58     	; 0x87f2 <ds3231_set_aging+0x16>
		return(failure);
    882c:	8a 81       	ldd	r24, Y+2	; 0x02
	}
    882e:	24 96       	adiw	r28, 0x04	; 4
    8830:	cd bf       	out	0x3d, r28	; 61
    8832:	de bf       	out	0x3e, r29	; 62
    8834:	df 91       	pop	r29
    8836:	cf 91       	pop	r28
    8838:	08 95       	ret

0000883a <ds3231_get_aging>:


	int8_t ds3231_get_aging()
	{
    883a:	cf 93       	push	r28
    883c:	df 93       	push	r29
    883e:	00 d0       	rcall	.+0      	; 0x8840 <ds3231_get_aging+0x6>
    8840:	1f 92       	push	r1
    8842:	cd b7       	in	r28, 0x3d	; 61
    8844:	de b7       	in	r29, 0x3e	; 62
		uint8_t tries = 10; /* try several times in case of transient bus issues */
    8846:	8a e0       	ldi	r24, 0x0A	; 10
    8848:	89 83       	std	Y+1, r24	; 0x01
		bool failure;
		int8_t data[1];
		
		while(tries-- && (failure = (I2C_0_GetData(DS3231_I2C_SLAVE_ADDR, RTC_AGING, (uint8_t *)data, 1) != 1)));
    884a:	89 81       	ldd	r24, Y+1	; 0x01
    884c:	9f ef       	ldi	r25, 0xFF	; 255
    884e:	98 0f       	add	r25, r24
    8850:	99 83       	std	Y+1, r25	; 0x01
    8852:	88 23       	and	r24, r24
    8854:	99 f0       	breq	.+38     	; 0x887c <ds3231_get_aging+0x42>
    8856:	ce 01       	movw	r24, r28
    8858:	03 96       	adiw	r24, 0x03	; 3
    885a:	21 e0       	ldi	r18, 0x01	; 1
    885c:	ac 01       	movw	r20, r24
    885e:	60 e1       	ldi	r22, 0x10	; 16
    8860:	80 ed       	ldi	r24, 0xD0	; 208
    8862:	0e 94 31 50 	call	0xa062	; 0xa062 <I2C_0_GetData>
    8866:	98 2f       	mov	r25, r24
    8868:	81 e0       	ldi	r24, 0x01	; 1
    886a:	91 30       	cpi	r25, 0x01	; 1
    886c:	09 f4       	brne	.+2      	; 0x8870 <ds3231_get_aging+0x36>
    886e:	80 e0       	ldi	r24, 0x00	; 0
    8870:	8a 83       	std	Y+2, r24	; 0x02
    8872:	8a 81       	ldd	r24, Y+2	; 0x02
    8874:	88 23       	and	r24, r24
    8876:	11 f0       	breq	.+4      	; 0x887c <ds3231_get_aging+0x42>
    8878:	81 e0       	ldi	r24, 0x01	; 1
    887a:	01 c0       	rjmp	.+2      	; 0x887e <ds3231_get_aging+0x44>
    887c:	80 e0       	ldi	r24, 0x00	; 0
    887e:	88 23       	and	r24, r24
    8880:	09 f0       	breq	.+2      	; 0x8884 <ds3231_get_aging+0x4a>
    8882:	e3 cf       	rjmp	.-58     	; 0x884a <ds3231_get_aging+0x10>
		return(data[0]);
    8884:	8b 81       	ldd	r24, Y+3	; 0x03
	}
    8886:	23 96       	adiw	r28, 0x03	; 3
    8888:	cd bf       	out	0x3d, r28	; 61
    888a:	de bf       	out	0x3e, r29	; 62
    888c:	df 91       	pop	r29
    888e:	cf 91       	pop	r28
    8890:	08 95       	ret

00008892 <ds3231_responding>:

	bool ds3231_responding()
	{
    8892:	cf 93       	push	r28
    8894:	df 93       	push	r29
    8896:	00 d0       	rcall	.+0      	; 0x8898 <ds3231_responding+0x6>
    8898:	1f 92       	push	r1
    889a:	cd b7       	in	r28, 0x3d	; 61
    889c:	de b7       	in	r29, 0x3e	; 62
		bool responseReceived = false;
    889e:	19 82       	std	Y+1, r1	; 0x01
		uint8_t tries = 10;
    88a0:	8a e0       	ldi	r24, 0x0A	; 10
    88a2:	8a 83       	std	Y+2, r24	; 0x02
		int8_t data[1];		
		while(tries-- && !(responseReceived = (I2C_0_GetData(DS3231_I2C_SLAVE_ADDR, RTC_AGING, (uint8_t *)data, 1) == 1)));
    88a4:	8a 81       	ldd	r24, Y+2	; 0x02
    88a6:	9f ef       	ldi	r25, 0xFF	; 255
    88a8:	98 0f       	add	r25, r24
    88aa:	9a 83       	std	Y+2, r25	; 0x02
    88ac:	88 23       	and	r24, r24
    88ae:	a9 f0       	breq	.+42     	; 0x88da <ds3231_responding+0x48>
    88b0:	ce 01       	movw	r24, r28
    88b2:	03 96       	adiw	r24, 0x03	; 3
    88b4:	21 e0       	ldi	r18, 0x01	; 1
    88b6:	ac 01       	movw	r20, r24
    88b8:	60 e1       	ldi	r22, 0x10	; 16
    88ba:	80 ed       	ldi	r24, 0xD0	; 208
    88bc:	0e 94 31 50 	call	0xa062	; 0xa062 <I2C_0_GetData>
    88c0:	98 2f       	mov	r25, r24
    88c2:	81 e0       	ldi	r24, 0x01	; 1
    88c4:	91 30       	cpi	r25, 0x01	; 1
    88c6:	09 f0       	breq	.+2      	; 0x88ca <ds3231_responding+0x38>
    88c8:	80 e0       	ldi	r24, 0x00	; 0
    88ca:	89 83       	std	Y+1, r24	; 0x01
    88cc:	99 81       	ldd	r25, Y+1	; 0x01
    88ce:	81 e0       	ldi	r24, 0x01	; 1
    88d0:	89 27       	eor	r24, r25
    88d2:	88 23       	and	r24, r24
    88d4:	11 f0       	breq	.+4      	; 0x88da <ds3231_responding+0x48>
    88d6:	81 e0       	ldi	r24, 0x01	; 1
    88d8:	01 c0       	rjmp	.+2      	; 0x88dc <ds3231_responding+0x4a>
    88da:	80 e0       	ldi	r24, 0x00	; 0
    88dc:	88 23       	and	r24, r24
    88de:	09 f0       	breq	.+2      	; 0x88e2 <ds3231_responding+0x50>
    88e0:	e1 cf       	rjmp	.-62     	; 0x88a4 <ds3231_responding+0x12>
		return(responseReceived);
    88e2:	89 81       	ldd	r24, Y+1	; 0x01
	}
    88e4:	23 96       	adiw	r28, 0x03	; 3
    88e6:	cd bf       	out	0x3d, r28	; 61
    88e8:	de bf       	out	0x3e, r29	; 62
    88ea:	df 91       	pop	r29
    88ec:	cf 91       	pop	r28
    88ee:	08 95       	ret

000088f0 <ds3231_sync2nearestMinute>:

/* This simple synchronization approach works for all times except 12 midnight. If synchronization
results in the advancement to the next day, then one day would be lost. Instead of introducing that
error, this function merely fails to synchronize at midnight. */
bool ds3231_sync2nearestMinute()
{
    88f0:	cf 93       	push	r28
    88f2:	df 93       	push	r29
    88f4:	cd b7       	in	r28, 0x3d	; 61
    88f6:	de b7       	in	r29, 0x3e	; 62
    88f8:	61 97       	sbiw	r28, 0x11	; 17
    88fa:	cd bf       	out	0x3d, r28	; 61
    88fc:	de bf       	out	0x3e, r29	; 62
	uint8_t tries = 10; /* try several times in case of transient bus issues */
    88fe:	8a e0       	ldi	r24, 0x0A	; 10
    8900:	89 83       	std	Y+1, r24	; 0x01
	bool err = false;
    8902:	1a 82       	std	Y+2, r1	; 0x02
	uint8_t data[8] = { 0, 0, 0 };
    8904:	28 e0       	ldi	r18, 0x08	; 8
    8906:	ce 01       	movw	r24, r28
    8908:	0a 96       	adiw	r24, 0x0a	; 10
    890a:	fc 01       	movw	r30, r24
    890c:	32 2f       	mov	r19, r18
    890e:	11 92       	st	Z+, r1
    8910:	3a 95       	dec	r19
    8912:	e9 f7       	brne	.-6      	; 0x890e <ds3231_sync2nearestMinute+0x1e>
		
	while(tries-- && (err = (I2C_0_GetData(DS3231_I2C_SLAVE_ADDR, RTC_SECONDS, (uint8_t *)data, 3) != 3)));
    8914:	89 81       	ldd	r24, Y+1	; 0x01
    8916:	9f ef       	ldi	r25, 0xFF	; 255
    8918:	98 0f       	add	r25, r24
    891a:	99 83       	std	Y+1, r25	; 0x01
    891c:	88 23       	and	r24, r24
    891e:	99 f0       	breq	.+38     	; 0x8946 <ds3231_sync2nearestMinute+0x56>
    8920:	ce 01       	movw	r24, r28
    8922:	0a 96       	adiw	r24, 0x0a	; 10
    8924:	23 e0       	ldi	r18, 0x03	; 3
    8926:	ac 01       	movw	r20, r24
    8928:	60 e0       	ldi	r22, 0x00	; 0
    892a:	80 ed       	ldi	r24, 0xD0	; 208
    892c:	0e 94 31 50 	call	0xa062	; 0xa062 <I2C_0_GetData>
    8930:	98 2f       	mov	r25, r24
    8932:	81 e0       	ldi	r24, 0x01	; 1
    8934:	93 30       	cpi	r25, 0x03	; 3
    8936:	09 f4       	brne	.+2      	; 0x893a <ds3231_sync2nearestMinute+0x4a>
    8938:	80 e0       	ldi	r24, 0x00	; 0
    893a:	8a 83       	std	Y+2, r24	; 0x02
    893c:	8a 81       	ldd	r24, Y+2	; 0x02
    893e:	88 23       	and	r24, r24
    8940:	11 f0       	breq	.+4      	; 0x8946 <ds3231_sync2nearestMinute+0x56>
    8942:	81 e0       	ldi	r24, 0x01	; 1
    8944:	01 c0       	rjmp	.+2      	; 0x8948 <ds3231_sync2nearestMinute+0x58>
    8946:	80 e0       	ldi	r24, 0x00	; 0
    8948:	88 23       	and	r24, r24
    894a:	09 f0       	breq	.+2      	; 0x894e <ds3231_sync2nearestMinute+0x5e>
    894c:	e3 cf       	rjmp	.-58     	; 0x8914 <ds3231_sync2nearestMinute+0x24>

	if(!err)
    894e:	9a 81       	ldd	r25, Y+2	; 0x02
    8950:	81 e0       	ldi	r24, 0x01	; 1
    8952:	89 27       	eor	r24, r25
    8954:	88 23       	and	r24, r24
    8956:	09 f4       	brne	.+2      	; 0x895a <ds3231_sync2nearestMinute+0x6a>
    8958:	ad c0       	rjmp	.+346    	; 0x8ab4 <ds3231_sync2nearestMinute+0x1c4>
		uint8_t hour10;
		uint8_t hour;
		bool am_pm;
		bool twelvehour;

		seconds = bcd2dec(data[0]);
    895a:	8a 85       	ldd	r24, Y+10	; 0x0a
    895c:	0e 94 32 3e 	call	0x7c64	; 0x7c64 <_Z7bcd2dech>
    8960:	8e 83       	std	Y+6, r24	; 0x06
		minutes = bcd2dec(data[1]);
    8962:	8b 85       	ldd	r24, Y+11	; 0x0b
    8964:	0e 94 32 3e 	call	0x7c64	; 0x7c64 <_Z7bcd2dech>
    8968:	8c 83       	std	Y+4, r24	; 0x04
		am_pm = ((data[2] >> 5) & 0x01);
    896a:	8c 85       	ldd	r24, Y+12	; 0x0c
    896c:	88 2f       	mov	r24, r24
    896e:	90 e0       	ldi	r25, 0x00	; 0
    8970:	80 72       	andi	r24, 0x20	; 32
    8972:	99 27       	eor	r25, r25
    8974:	21 e0       	ldi	r18, 0x01	; 1
    8976:	89 2b       	or	r24, r25
    8978:	09 f4       	brne	.+2      	; 0x897c <ds3231_sync2nearestMinute+0x8c>
    897a:	20 e0       	ldi	r18, 0x00	; 0
    897c:	2f 83       	std	Y+7, r18	; 0x07
		hour10 = ((data[2] >> 4) & 0x01);
    897e:	8c 85       	ldd	r24, Y+12	; 0x0c
    8980:	88 2f       	mov	r24, r24
    8982:	90 e0       	ldi	r25, 0x00	; 0
    8984:	95 95       	asr	r25
    8986:	87 95       	ror	r24
    8988:	95 95       	asr	r25
    898a:	87 95       	ror	r24
    898c:	95 95       	asr	r25
    898e:	87 95       	ror	r24
    8990:	95 95       	asr	r25
    8992:	87 95       	ror	r24
    8994:	81 70       	andi	r24, 0x01	; 1
    8996:	8d 83       	std	Y+5, r24	; 0x05
		hour = (data[2] & 0x0f);
    8998:	8c 85       	ldd	r24, Y+12	; 0x0c
    899a:	8f 70       	andi	r24, 0x0F	; 15
    899c:	88 87       	std	Y+8, r24	; 0x08

		twelvehour = ((data[2] >> 6) & 0x01);
    899e:	8c 85       	ldd	r24, Y+12	; 0x0c
    89a0:	88 2f       	mov	r24, r24
    89a2:	90 e0       	ldi	r25, 0x00	; 0
    89a4:	80 74       	andi	r24, 0x40	; 64
    89a6:	99 27       	eor	r25, r25
    89a8:	21 e0       	ldi	r18, 0x01	; 1
    89aa:	89 2b       	or	r24, r25
    89ac:	09 f4       	brne	.+2      	; 0x89b0 <ds3231_sync2nearestMinute+0xc0>
    89ae:	20 e0       	ldi	r18, 0x00	; 0
    89b0:	29 87       	std	Y+9, r18	; 0x09

		if(!twelvehour && am_pm)
    89b2:	99 85       	ldd	r25, Y+9	; 0x09
    89b4:	81 e0       	ldi	r24, 0x01	; 1
    89b6:	89 27       	eor	r24, r25
    89b8:	88 23       	and	r24, r24
    89ba:	29 f0       	breq	.+10     	; 0x89c6 <ds3231_sync2nearestMinute+0xd6>
    89bc:	8f 81       	ldd	r24, Y+7	; 0x07
    89be:	88 23       	and	r24, r24
    89c0:	11 f0       	breq	.+4      	; 0x89c6 <ds3231_sync2nearestMinute+0xd6>
		{
			hour10 = 2;
    89c2:	82 e0       	ldi	r24, 0x02	; 2
    89c4:	8d 83       	std	Y+5, r24	; 0x05
		}

		hours = 10 * hour10 + hour;
    89c6:	8d 81       	ldd	r24, Y+5	; 0x05
    89c8:	88 0f       	add	r24, r24
    89ca:	98 2f       	mov	r25, r24
    89cc:	99 0f       	add	r25, r25
    89ce:	99 0f       	add	r25, r25
    89d0:	98 0f       	add	r25, r24
    89d2:	88 85       	ldd	r24, Y+8	; 0x08
    89d4:	89 0f       	add	r24, r25
    89d6:	8b 83       	std	Y+3, r24	; 0x03

		if(seconds > 30)
    89d8:	8e 81       	ldd	r24, Y+6	; 0x06
    89da:	8f 31       	cpi	r24, 0x1F	; 31
    89dc:	78 f0       	brcs	.+30     	; 0x89fc <ds3231_sync2nearestMinute+0x10c>
		{
			minutes++;
    89de:	8c 81       	ldd	r24, Y+4	; 0x04
    89e0:	8f 5f       	subi	r24, 0xFF	; 255
    89e2:	8c 83       	std	Y+4, r24	; 0x04

			if(minutes > 59)
    89e4:	8c 81       	ldd	r24, Y+4	; 0x04
    89e6:	8c 33       	cpi	r24, 0x3C	; 60
    89e8:	48 f0       	brcs	.+18     	; 0x89fc <ds3231_sync2nearestMinute+0x10c>
			{
				minutes = 0;
    89ea:	1c 82       	std	Y+4, r1	; 0x04
				hours++;
    89ec:	8b 81       	ldd	r24, Y+3	; 0x03
    89ee:	8f 5f       	subi	r24, 0xFF	; 255
    89f0:	8b 83       	std	Y+3, r24	; 0x03

				if(hours > 23) /* Don't attempt to synchronize at midnight */
    89f2:	8b 81       	ldd	r24, Y+3	; 0x03
    89f4:	88 31       	cpi	r24, 0x18	; 24
    89f6:	10 f0       	brcs	.+4      	; 0x89fc <ds3231_sync2nearestMinute+0x10c>
				{
					err = true;
    89f8:	81 e0       	ldi	r24, 0x01	; 1
    89fa:	8a 83       	std	Y+2, r24	; 0x02
				}
			}
		}

		if(!err)
    89fc:	9a 81       	ldd	r25, Y+2	; 0x02
    89fe:	81 e0       	ldi	r24, 0x01	; 1
    8a00:	89 27       	eor	r24, r25
    8a02:	88 23       	and	r24, r24
    8a04:	09 f4       	brne	.+2      	; 0x8a08 <ds3231_sync2nearestMinute+0x118>
    8a06:	56 c0       	rjmp	.+172    	; 0x8ab4 <ds3231_sync2nearestMinute+0x1c4>
		{
			data[0] = 0; /* seconds = 00 */
    8a08:	1a 86       	std	Y+10, r1	; 0x0a
			data[1] = dec2bcd(minutes);
    8a0a:	8c 81       	ldd	r24, Y+4	; 0x04
    8a0c:	0e 94 52 3e 	call	0x7ca4	; 0x7ca4 <_Z7dec2bcdh>
    8a10:	8b 87       	std	Y+11, r24	; 0x0b
			data[2] = 0;
    8a12:	1c 86       	std	Y+12, r1	; 0x0c

			if(twelvehour)
    8a14:	89 85       	ldd	r24, Y+9	; 0x09
    8a16:	88 23       	and	r24, r24
    8a18:	81 f0       	breq	.+32     	; 0x8a3a <ds3231_sync2nearestMinute+0x14a>
			{
				data[2] |= 0x40; /* set  12-hour bit */
    8a1a:	8c 85       	ldd	r24, Y+12	; 0x0c
    8a1c:	80 64       	ori	r24, 0x40	; 64
    8a1e:	8c 87       	std	Y+12, r24	; 0x0c

				if(hours >= 12)
    8a20:	8b 81       	ldd	r24, Y+3	; 0x03
    8a22:	8c 30       	cpi	r24, 0x0C	; 12
    8a24:	18 f0       	brcs	.+6      	; 0x8a2c <ds3231_sync2nearestMinute+0x13c>
				{
					data[2] |= 0x20; /* set pm bit */
    8a26:	8c 85       	ldd	r24, Y+12	; 0x0c
    8a28:	80 62       	ori	r24, 0x20	; 32
    8a2a:	8c 87       	std	Y+12, r24	; 0x0c
				}

				if(hours >= 10)
    8a2c:	8b 81       	ldd	r24, Y+3	; 0x03
    8a2e:	8a 30       	cpi	r24, 0x0A	; 10
    8a30:	88 f0       	brcs	.+34     	; 0x8a54 <ds3231_sync2nearestMinute+0x164>
				{
					data[2] |= 0x10;
    8a32:	8c 85       	ldd	r24, Y+12	; 0x0c
    8a34:	80 61       	ori	r24, 0x10	; 16
    8a36:	8c 87       	std	Y+12, r24	; 0x0c
    8a38:	0d c0       	rjmp	.+26     	; 0x8a54 <ds3231_sync2nearestMinute+0x164>
				}
			}
			else
			{
				if(hours >= 20)
    8a3a:	8b 81       	ldd	r24, Y+3	; 0x03
    8a3c:	84 31       	cpi	r24, 0x14	; 20
    8a3e:	20 f0       	brcs	.+8      	; 0x8a48 <ds3231_sync2nearestMinute+0x158>
				{
					data[2] |= 0x20; /* set 20 bit */
    8a40:	8c 85       	ldd	r24, Y+12	; 0x0c
    8a42:	80 62       	ori	r24, 0x20	; 32
    8a44:	8c 87       	std	Y+12, r24	; 0x0c
    8a46:	06 c0       	rjmp	.+12     	; 0x8a54 <ds3231_sync2nearestMinute+0x164>
				}
				else if(hours >= 10)
    8a48:	8b 81       	ldd	r24, Y+3	; 0x03
    8a4a:	8a 30       	cpi	r24, 0x0A	; 10
    8a4c:	18 f0       	brcs	.+6      	; 0x8a54 <ds3231_sync2nearestMinute+0x164>
				{
					data[2] |= 0x10; /* set 10 bit */
    8a4e:	8c 85       	ldd	r24, Y+12	; 0x0c
    8a50:	80 61       	ori	r24, 0x10	; 16
    8a52:	8c 87       	std	Y+12, r24	; 0x0c
				}
			}

			data[2] |= hours % 10;
    8a54:	2c 85       	ldd	r18, Y+12	; 0x0c
    8a56:	9b 81       	ldd	r25, Y+3	; 0x03
    8a58:	8d ec       	ldi	r24, 0xCD	; 205
    8a5a:	98 9f       	mul	r25, r24
    8a5c:	81 2d       	mov	r24, r1
    8a5e:	11 24       	eor	r1, r1
    8a60:	86 95       	lsr	r24
    8a62:	86 95       	lsr	r24
    8a64:	86 95       	lsr	r24
    8a66:	88 0f       	add	r24, r24
    8a68:	38 2f       	mov	r19, r24
    8a6a:	33 0f       	add	r19, r19
    8a6c:	33 0f       	add	r19, r19
    8a6e:	83 0f       	add	r24, r19
    8a70:	e9 2f       	mov	r30, r25
    8a72:	e8 1b       	sub	r30, r24
    8a74:	8e 2f       	mov	r24, r30
    8a76:	82 2b       	or	r24, r18
    8a78:	8c 87       	std	Y+12, r24	; 0x0c
			
			while(tries-- && (err = (I2C_0_SendData(DS3231_I2C_SLAVE_ADDR, RTC_SECONDS, (uint8_t *)data, 4) != 4)));
    8a7a:	89 81       	ldd	r24, Y+1	; 0x01
    8a7c:	9f ef       	ldi	r25, 0xFF	; 255
    8a7e:	98 0f       	add	r25, r24
    8a80:	99 83       	std	Y+1, r25	; 0x01
    8a82:	88 23       	and	r24, r24
    8a84:	99 f0       	breq	.+38     	; 0x8aac <ds3231_sync2nearestMinute+0x1bc>
    8a86:	ce 01       	movw	r24, r28
    8a88:	0a 96       	adiw	r24, 0x0a	; 10
    8a8a:	24 e0       	ldi	r18, 0x04	; 4
    8a8c:	ac 01       	movw	r20, r24
    8a8e:	60 e0       	ldi	r22, 0x00	; 0
    8a90:	80 ed       	ldi	r24, 0xD0	; 208
    8a92:	0e 94 c9 4f 	call	0x9f92	; 0x9f92 <I2C_0_SendData>
    8a96:	98 2f       	mov	r25, r24
    8a98:	81 e0       	ldi	r24, 0x01	; 1
    8a9a:	94 30       	cpi	r25, 0x04	; 4
    8a9c:	09 f4       	brne	.+2      	; 0x8aa0 <ds3231_sync2nearestMinute+0x1b0>
    8a9e:	80 e0       	ldi	r24, 0x00	; 0
    8aa0:	8a 83       	std	Y+2, r24	; 0x02
    8aa2:	8a 81       	ldd	r24, Y+2	; 0x02
    8aa4:	88 23       	and	r24, r24
    8aa6:	11 f0       	breq	.+4      	; 0x8aac <ds3231_sync2nearestMinute+0x1bc>
    8aa8:	81 e0       	ldi	r24, 0x01	; 1
    8aaa:	01 c0       	rjmp	.+2      	; 0x8aae <ds3231_sync2nearestMinute+0x1be>
    8aac:	80 e0       	ldi	r24, 0x00	; 0
    8aae:	88 23       	and	r24, r24
    8ab0:	09 f0       	breq	.+2      	; 0x8ab4 <ds3231_sync2nearestMinute+0x1c4>
    8ab2:	e3 cf       	rjmp	.-58     	; 0x8a7a <ds3231_sync2nearestMinute+0x18a>
		}
	}

	return err;
    8ab4:	8a 81       	ldd	r24, Y+2	; 0x02
}
    8ab6:	61 96       	adiw	r28, 0x11	; 17
    8ab8:	cd bf       	out	0x3d, r28	; 61
    8aba:	de bf       	out	0x3e, r29	; 62
    8abc:	df 91       	pop	r29
    8abe:	cf 91       	pop	r28
    8ac0:	08 95       	ret

00008ac2 <convertEpochToTimeString>:
/**
 *   Converts an epoch (seconds since 1900)  into a string with format "ddd dd-mon-yyyy hh:mm:ss zzz"
 */
#define THIRTY_YEARS 946684800
char* convertEpochToTimeString(time_t epoch, char* buf, size_t size)
 {
    8ac2:	cf 93       	push	r28
    8ac4:	df 93       	push	r29
    8ac6:	cd b7       	in	r28, 0x3d	; 61
    8ac8:	de b7       	in	r29, 0x3e	; 62
    8aca:	68 97       	sbiw	r28, 0x18	; 24
    8acc:	cd bf       	out	0x3d, r28	; 61
    8ace:	de bf       	out	0x3e, r29	; 62
    8ad0:	69 8b       	std	Y+17, r22	; 0x11
    8ad2:	7a 8b       	std	Y+18, r23	; 0x12
    8ad4:	8b 8b       	std	Y+19, r24	; 0x13
    8ad6:	9c 8b       	std	Y+20, r25	; 0x14
    8ad8:	4d 8b       	std	Y+21, r20	; 0x15
    8ada:	5e 8b       	std	Y+22, r21	; 0x16
    8adc:	2f 8b       	std	Y+23, r18	; 0x17
    8ade:	38 8f       	std	Y+24, r19	; 0x18
   struct tm  ts;
	time_t t = epoch - THIRTY_YEARS;
    8ae0:	89 89       	ldd	r24, Y+17	; 0x11
    8ae2:	9a 89       	ldd	r25, Y+18	; 0x12
    8ae4:	ab 89       	ldd	r26, Y+19	; 0x13
    8ae6:	bc 89       	ldd	r27, Y+20	; 0x14
    8ae8:	80 58       	subi	r24, 0x80	; 128
    8aea:	93 44       	sbci	r25, 0x43	; 67
    8aec:	ad 46       	sbci	r26, 0x6D	; 109
    8aee:	b8 43       	sbci	r27, 0x38	; 56
    8af0:	8d 87       	std	Y+13, r24	; 0x0d
    8af2:	9e 87       	std	Y+14, r25	; 0x0e
    8af4:	af 87       	std	Y+15, r26	; 0x0f
    8af6:	b8 8b       	std	Y+16, r27	; 0x10

    // Format time, "ddd dd-mon-yyyy hh:mm:ss zzz"
    ts = *localtime(&t);
    8af8:	ce 01       	movw	r24, r28
    8afa:	0d 96       	adiw	r24, 0x0d	; 13
    8afc:	0e 94 98 02 	call	0x530	; 0x530 <localtime>
    8b00:	2c e0       	ldi	r18, 0x0C	; 12
    8b02:	fc 01       	movw	r30, r24
    8b04:	ce 01       	movw	r24, r28
    8b06:	01 96       	adiw	r24, 0x01	; 1
    8b08:	dc 01       	movw	r26, r24
    8b0a:	01 90       	ld	r0, Z+
    8b0c:	0d 92       	st	X+, r0
    8b0e:	2a 95       	dec	r18
    8b10:	e1 f7       	brne	.-8      	; 0x8b0a <convertEpochToTimeString+0x48>
    strftime(buf, size, "%a %d-%b-%Y %H:%M:%S", &ts);
    8b12:	6f 89       	ldd	r22, Y+23	; 0x17
    8b14:	78 8d       	ldd	r23, Y+24	; 0x18
    8b16:	8d 89       	ldd	r24, Y+21	; 0x15
    8b18:	9e 89       	ldd	r25, Y+22	; 0x16
    8b1a:	9e 01       	movw	r18, r28
    8b1c:	2f 5f       	subi	r18, 0xFF	; 255
    8b1e:	3f 4f       	sbci	r19, 0xFF	; 255
    8b20:	46 ea       	ldi	r20, 0xA6	; 166
    8b22:	54 e4       	ldi	r21, 0x44	; 68
    8b24:	0e 94 41 03 	call	0x682	; 0x682 <strftime>
   return buf;
    8b28:	8d 89       	ldd	r24, Y+21	; 0x15
    8b2a:	9e 89       	ldd	r25, Y+22	; 0x16
 }
    8b2c:	68 96       	adiw	r28, 0x18	; 24
    8b2e:	cd bf       	out	0x3d, r28	; 61
    8b30:	de bf       	out	0x3e, r29	; 62
    8b32:	df 91       	pop	r29
    8b34:	cf 91       	pop	r28
    8b36:	08 95       	ret

00008b38 <_ZN13EepromManagerC1Ev>:
extern volatile int16_t g_intra_cycle_delay_time;

extern char g_tempStr[];

/* default constructor */
EepromManager::EepromManager()
    8b38:	cf 93       	push	r28
    8b3a:	df 93       	push	r29
    8b3c:	00 d0       	rcall	.+0      	; 0x8b3e <_ZN13EepromManagerC1Ev+0x6>
    8b3e:	cd b7       	in	r28, 0x3d	; 61
    8b40:	de b7       	in	r29, 0x3e	; 62
    8b42:	89 83       	std	Y+1, r24	; 0x01
    8b44:	9a 83       	std	Y+2, r25	; 0x02
{
}   /*EepromManager */
    8b46:	00 00       	nop
    8b48:	0f 90       	pop	r0
    8b4a:	0f 90       	pop	r0
    8b4c:	df 91       	pop	r29
    8b4e:	cf 91       	pop	r28
    8b50:	08 95       	ret

00008b52 <_ZN13EepromManagerD1Ev>:

/* default destructor */
EepromManager::~EepromManager()
    8b52:	cf 93       	push	r28
    8b54:	df 93       	push	r29
    8b56:	00 d0       	rcall	.+0      	; 0x8b58 <_ZN13EepromManagerD1Ev+0x6>
    8b58:	cd b7       	in	r28, 0x3d	; 61
    8b5a:	de b7       	in	r29, 0x3e	; 62
    8b5c:	89 83       	std	Y+1, r24	; 0x01
    8b5e:	9a 83       	std	Y+2, r25	; 0x02
{
}   /*~EepromManager */
    8b60:	00 00       	nop
    8b62:	0f 90       	pop	r0
    8b64:	0f 90       	pop	r0
    8b66:	df 91       	pop	r29
    8b68:	cf 91       	pop	r28
    8b6a:	08 95       	ret

00008b6c <_Z21avr_eeprom_write_bytejh>:
#include <avr/io.h>

typedef uint16_t eeprom_addr_t;

// to write
void avr_eeprom_write_byte(eeprom_addr_t index, uint8_t in) {
    8b6c:	cf 93       	push	r28
    8b6e:	df 93       	push	r29
    8b70:	00 d0       	rcall	.+0      	; 0x8b72 <_Z21avr_eeprom_write_bytejh+0x6>
    8b72:	1f 92       	push	r1
    8b74:	cd b7       	in	r28, 0x3d	; 61
    8b76:	de b7       	in	r29, 0x3e	; 62
    8b78:	89 83       	std	Y+1, r24	; 0x01
    8b7a:	9a 83       	std	Y+2, r25	; 0x02
    8b7c:	6b 83       	std	Y+3, r22	; 0x03
	while (NVMCTRL.STATUS & NVMCTRL_EEBUSY_bm);
    8b7e:	80 e0       	ldi	r24, 0x00	; 0
    8b80:	90 e1       	ldi	r25, 0x10	; 16
    8b82:	fc 01       	movw	r30, r24
    8b84:	82 81       	ldd	r24, Z+2	; 0x02
    8b86:	88 2f       	mov	r24, r24
    8b88:	90 e0       	ldi	r25, 0x00	; 0
    8b8a:	82 70       	andi	r24, 0x02	; 2
    8b8c:	99 27       	eor	r25, r25
    8b8e:	21 e0       	ldi	r18, 0x01	; 1
    8b90:	89 2b       	or	r24, r25
    8b92:	09 f4       	brne	.+2      	; 0x8b96 <_Z21avr_eeprom_write_bytejh+0x2a>
    8b94:	20 e0       	ldi	r18, 0x00	; 0
    8b96:	22 23       	and	r18, r18
    8b98:	09 f0       	breq	.+2      	; 0x8b9c <_Z21avr_eeprom_write_bytejh+0x30>
    8b9a:	f1 cf       	rjmp	.-30     	; 0x8b7e <_Z21avr_eeprom_write_bytejh+0x12>
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_EEERWR_gc);
    8b9c:	8d e9       	ldi	r24, 0x9D	; 157
    8b9e:	93 e1       	ldi	r25, 0x13	; 19
    8ba0:	84 bf       	out	0x34, r24	; 52
    8ba2:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
	*(uint8_t*)(eeprom_addr_t)(MAPPED_EEPROM_START+index) = in;
    8ba6:	89 81       	ldd	r24, Y+1	; 0x01
    8ba8:	9a 81       	ldd	r25, Y+2	; 0x02
    8baa:	9c 5e       	subi	r25, 0xEC	; 236
    8bac:	2b 81       	ldd	r18, Y+3	; 0x03
    8bae:	fc 01       	movw	r30, r24
    8bb0:	20 83       	st	Z, r18
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_NONE_gc);
    8bb2:	8d e9       	ldi	r24, 0x9D	; 157
    8bb4:	90 e0       	ldi	r25, 0x00	; 0
    8bb6:	84 bf       	out	0x34, r24	; 52
    8bb8:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
}
    8bbc:	00 00       	nop
    8bbe:	23 96       	adiw	r28, 0x03	; 3
    8bc0:	cd bf       	out	0x3d, r28	; 61
    8bc2:	de bf       	out	0x3e, r29	; 62
    8bc4:	df 91       	pop	r29
    8bc6:	cf 91       	pop	r28
    8bc8:	08 95       	ret

00008bca <_Z21avr_eeprom_write_wordjj>:

void avr_eeprom_write_word(eeprom_addr_t index, uint16_t in) {
    8bca:	cf 93       	push	r28
    8bcc:	df 93       	push	r29
    8bce:	00 d0       	rcall	.+0      	; 0x8bd0 <_Z21avr_eeprom_write_wordjj+0x6>
    8bd0:	00 d0       	rcall	.+0      	; 0x8bd2 <_Z21avr_eeprom_write_wordjj+0x8>
    8bd2:	cd b7       	in	r28, 0x3d	; 61
    8bd4:	de b7       	in	r29, 0x3e	; 62
    8bd6:	89 83       	std	Y+1, r24	; 0x01
    8bd8:	9a 83       	std	Y+2, r25	; 0x02
    8bda:	6b 83       	std	Y+3, r22	; 0x03
    8bdc:	7c 83       	std	Y+4, r23	; 0x04
	while (NVMCTRL.STATUS & NVMCTRL_EEBUSY_bm);
    8bde:	80 e0       	ldi	r24, 0x00	; 0
    8be0:	90 e1       	ldi	r25, 0x10	; 16
    8be2:	fc 01       	movw	r30, r24
    8be4:	82 81       	ldd	r24, Z+2	; 0x02
    8be6:	88 2f       	mov	r24, r24
    8be8:	90 e0       	ldi	r25, 0x00	; 0
    8bea:	82 70       	andi	r24, 0x02	; 2
    8bec:	99 27       	eor	r25, r25
    8bee:	21 e0       	ldi	r18, 0x01	; 1
    8bf0:	89 2b       	or	r24, r25
    8bf2:	09 f4       	brne	.+2      	; 0x8bf6 <_Z21avr_eeprom_write_wordjj+0x2c>
    8bf4:	20 e0       	ldi	r18, 0x00	; 0
    8bf6:	22 23       	and	r18, r18
    8bf8:	09 f0       	breq	.+2      	; 0x8bfc <_Z21avr_eeprom_write_wordjj+0x32>
    8bfa:	f1 cf       	rjmp	.-30     	; 0x8bde <_Z21avr_eeprom_write_wordjj+0x14>
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_EEERWR_gc);
    8bfc:	8d e9       	ldi	r24, 0x9D	; 157
    8bfe:	93 e1       	ldi	r25, 0x13	; 19
    8c00:	84 bf       	out	0x34, r24	; 52
    8c02:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
	*(uint16_t*)(eeprom_addr_t)(MAPPED_EEPROM_START+index) = in;
    8c06:	89 81       	ldd	r24, Y+1	; 0x01
    8c08:	9a 81       	ldd	r25, Y+2	; 0x02
    8c0a:	9c 5e       	subi	r25, 0xEC	; 236
    8c0c:	9c 01       	movw	r18, r24
    8c0e:	8b 81       	ldd	r24, Y+3	; 0x03
    8c10:	9c 81       	ldd	r25, Y+4	; 0x04
    8c12:	f9 01       	movw	r30, r18
    8c14:	80 83       	st	Z, r24
    8c16:	91 83       	std	Z+1, r25	; 0x01
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_NONE_gc);
    8c18:	8d e9       	ldi	r24, 0x9D	; 157
    8c1a:	90 e0       	ldi	r25, 0x00	; 0
    8c1c:	84 bf       	out	0x34, r24	; 52
    8c1e:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
}
    8c22:	00 00       	nop
    8c24:	24 96       	adiw	r28, 0x04	; 4
    8c26:	cd bf       	out	0x3d, r28	; 61
    8c28:	de bf       	out	0x3e, r29	; 62
    8c2a:	df 91       	pop	r29
    8c2c:	cf 91       	pop	r28
    8c2e:	08 95       	ret

00008c30 <_Z22avr_eeprom_write_dwordjm>:

void avr_eeprom_write_dword(eeprom_addr_t index, uint32_t in) {
    8c30:	cf 93       	push	r28
    8c32:	df 93       	push	r29
    8c34:	cd b7       	in	r28, 0x3d	; 61
    8c36:	de b7       	in	r29, 0x3e	; 62
    8c38:	26 97       	sbiw	r28, 0x06	; 6
    8c3a:	cd bf       	out	0x3d, r28	; 61
    8c3c:	de bf       	out	0x3e, r29	; 62
    8c3e:	89 83       	std	Y+1, r24	; 0x01
    8c40:	9a 83       	std	Y+2, r25	; 0x02
    8c42:	4b 83       	std	Y+3, r20	; 0x03
    8c44:	5c 83       	std	Y+4, r21	; 0x04
    8c46:	6d 83       	std	Y+5, r22	; 0x05
    8c48:	7e 83       	std	Y+6, r23	; 0x06
	while (NVMCTRL.STATUS & NVMCTRL_EEBUSY_bm);
    8c4a:	80 e0       	ldi	r24, 0x00	; 0
    8c4c:	90 e1       	ldi	r25, 0x10	; 16
    8c4e:	fc 01       	movw	r30, r24
    8c50:	82 81       	ldd	r24, Z+2	; 0x02
    8c52:	88 2f       	mov	r24, r24
    8c54:	90 e0       	ldi	r25, 0x00	; 0
    8c56:	82 70       	andi	r24, 0x02	; 2
    8c58:	99 27       	eor	r25, r25
    8c5a:	21 e0       	ldi	r18, 0x01	; 1
    8c5c:	89 2b       	or	r24, r25
    8c5e:	09 f4       	brne	.+2      	; 0x8c62 <_Z22avr_eeprom_write_dwordjm+0x32>
    8c60:	20 e0       	ldi	r18, 0x00	; 0
    8c62:	22 23       	and	r18, r18
    8c64:	09 f0       	breq	.+2      	; 0x8c68 <_Z22avr_eeprom_write_dwordjm+0x38>
    8c66:	f1 cf       	rjmp	.-30     	; 0x8c4a <_Z22avr_eeprom_write_dwordjm+0x1a>
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_EEERWR_gc);
    8c68:	8d e9       	ldi	r24, 0x9D	; 157
    8c6a:	93 e1       	ldi	r25, 0x13	; 19
    8c6c:	84 bf       	out	0x34, r24	; 52
    8c6e:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
	*(uint32_t*)(eeprom_addr_t)(MAPPED_EEPROM_START+index) = in;
    8c72:	89 81       	ldd	r24, Y+1	; 0x01
    8c74:	9a 81       	ldd	r25, Y+2	; 0x02
    8c76:	9c 5e       	subi	r25, 0xEC	; 236
    8c78:	9c 01       	movw	r18, r24
    8c7a:	8b 81       	ldd	r24, Y+3	; 0x03
    8c7c:	9c 81       	ldd	r25, Y+4	; 0x04
    8c7e:	ad 81       	ldd	r26, Y+5	; 0x05
    8c80:	be 81       	ldd	r27, Y+6	; 0x06
    8c82:	f9 01       	movw	r30, r18
    8c84:	80 83       	st	Z, r24
    8c86:	91 83       	std	Z+1, r25	; 0x01
    8c88:	a2 83       	std	Z+2, r26	; 0x02
    8c8a:	b3 83       	std	Z+3, r27	; 0x03
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_NONE_gc);
    8c8c:	8d e9       	ldi	r24, 0x9D	; 157
    8c8e:	90 e0       	ldi	r25, 0x00	; 0
    8c90:	84 bf       	out	0x34, r24	; 52
    8c92:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
}
    8c96:	00 00       	nop
    8c98:	26 96       	adiw	r28, 0x06	; 6
    8c9a:	cd bf       	out	0x3d, r28	; 61
    8c9c:	de bf       	out	0x3e, r29	; 62
    8c9e:	df 91       	pop	r29
    8ca0:	cf 91       	pop	r28
    8ca2:	08 95       	ret

00008ca4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>:

void EepromManager::updateEEPROMVar(EE_var_t v, void* val)
{
    8ca4:	cf 93       	push	r28
    8ca6:	df 93       	push	r29
    8ca8:	cd b7       	in	r28, 0x3d	; 61
    8caa:	de b7       	in	r29, 0x3e	; 62
    8cac:	65 97       	sbiw	r28, 0x15	; 21
    8cae:	cd bf       	out	0x3d, r28	; 61
    8cb0:	de bf       	out	0x3e, r29	; 62
    8cb2:	89 8b       	std	Y+17, r24	; 0x11
    8cb4:	9a 8b       	std	Y+18, r25	; 0x12
    8cb6:	6b 8b       	std	Y+19, r22	; 0x13
    8cb8:	4c 8b       	std	Y+20, r20	; 0x14
    8cba:	5d 8b       	std	Y+21, r21	; 0x15
	if(!val)
    8cbc:	8c 89       	ldd	r24, Y+20	; 0x14
    8cbe:	9d 89       	ldd	r25, Y+21	; 0x15
    8cc0:	89 2b       	or	r24, r25
    8cc2:	09 f4       	brne	.+2      	; 0x8cc6 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x22>
    8cc4:	4e c1       	rjmp	.+668    	; 0x8f62 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2be>
	{
		return;
	}

	switch(v)
    8cc6:	8b 89       	ldd	r24, Y+19	; 0x13
    8cc8:	88 2f       	mov	r24, r24
    8cca:	90 e0       	ldi	r25, 0x00	; 0
    8ccc:	09 2e       	mov	r0, r25
    8cce:	00 0c       	add	r0, r0
    8cd0:	aa 0b       	sbc	r26, r26
    8cd2:	bb 0b       	sbc	r27, r27
    8cd4:	40 e0       	ldi	r20, 0x00	; 0
    8cd6:	50 e0       	ldi	r21, 0x00	; 0
    8cd8:	21 e5       	ldi	r18, 0x51	; 81
    8cda:	30 e0       	ldi	r19, 0x00	; 0
    8cdc:	84 1b       	sub	r24, r20
    8cde:	95 0b       	sbc	r25, r21
    8ce0:	28 17       	cp	r18, r24
    8ce2:	39 07       	cpc	r19, r25
    8ce4:	08 f4       	brcc	.+2      	; 0x8ce8 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x44>
    8ce6:	3f c1       	rjmp	.+638    	; 0x8f66 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c2>
    8ce8:	8b 57       	subi	r24, 0x7B	; 123
    8cea:	9f 4f       	sbci	r25, 0xFF	; 255
    8cec:	fc 01       	movw	r30, r24
    8cee:	0c 94 a3 7a 	jmp	0xf546	; 0xf546 <__tablejump2__>
	{
		case Frequency:
		{
			avr_eeprom_write_dword(Frequency, *(uint32_t*)val);
    8cf2:	8c 89       	ldd	r24, Y+20	; 0x14
    8cf4:	9d 89       	ldd	r25, Y+21	; 0x15
    8cf6:	fc 01       	movw	r30, r24
    8cf8:	80 81       	ld	r24, Z
    8cfa:	91 81       	ldd	r25, Z+1	; 0x01
    8cfc:	a2 81       	ldd	r26, Z+2	; 0x02
    8cfe:	b3 81       	ldd	r27, Z+3	; 0x03
    8d00:	ac 01       	movw	r20, r24
    8d02:	bd 01       	movw	r22, r26
    8d04:	80 e4       	ldi	r24, 0x40	; 64
    8d06:	90 e0       	ldi	r25, 0x00	; 0
    8d08:	0e 94 18 46 	call	0x8c30	; 0x8c30 <_Z22avr_eeprom_write_dwordjm>
		}
		break;
    8d0c:	2d c1       	rjmp	.+602    	; 0x8f68 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>
		
		case RTTY_offset:
		{
			avr_eeprom_write_dword(RTTY_offset, *(uint32_t*)val);
    8d0e:	8c 89       	ldd	r24, Y+20	; 0x14
    8d10:	9d 89       	ldd	r25, Y+21	; 0x15
    8d12:	fc 01       	movw	r30, r24
    8d14:	80 81       	ld	r24, Z
    8d16:	91 81       	ldd	r25, Z+1	; 0x01
    8d18:	a2 81       	ldd	r26, Z+2	; 0x02
    8d1a:	b3 81       	ldd	r27, Z+3	; 0x03
    8d1c:	ac 01       	movw	r20, r24
    8d1e:	bd 01       	movw	r22, r26
    8d20:	84 e4       	ldi	r24, 0x44	; 68
    8d22:	90 e0       	ldi	r25, 0x00	; 0
    8d24:	0e 94 18 46 	call	0x8c30	; 0x8c30 <_Z22avr_eeprom_write_dwordjm>
		}
		break;
    8d28:	1f c1       	rjmp	.+574    	; 0x8f68 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>
		
		case RF_Power:
		{
			avr_eeprom_write_word(RF_Power, *(uint32_t*)val);			
    8d2a:	8c 89       	ldd	r24, Y+20	; 0x14
    8d2c:	9d 89       	ldd	r25, Y+21	; 0x15
    8d2e:	fc 01       	movw	r30, r24
    8d30:	80 81       	ld	r24, Z
    8d32:	91 81       	ldd	r25, Z+1	; 0x01
    8d34:	a2 81       	ldd	r26, Z+2	; 0x02
    8d36:	b3 81       	ldd	r27, Z+3	; 0x03
    8d38:	bc 01       	movw	r22, r24
    8d3a:	88 e4       	ldi	r24, 0x48	; 72
    8d3c:	90 e0       	ldi	r25, 0x00	; 0
    8d3e:	0e 94 e5 45 	call	0x8bca	; 0x8bca <_Z21avr_eeprom_write_wordjj>
		}
		break;
    8d42:	12 c1       	rjmp	.+548    	; 0x8f68 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>
		
		case StationID_text:
		{
			char* char_addr = (char*)val;
    8d44:	8c 89       	ldd	r24, Y+20	; 0x14
    8d46:	9d 89       	ldd	r25, Y+21	; 0x15
    8d48:	89 83       	std	Y+1, r24	; 0x01
    8d4a:	9a 83       	std	Y+2, r25	; 0x02
			char c = *char_addr++;
    8d4c:	89 81       	ldd	r24, Y+1	; 0x01
    8d4e:	9a 81       	ldd	r25, Y+2	; 0x02
    8d50:	9c 01       	movw	r18, r24
    8d52:	2f 5f       	subi	r18, 0xFF	; 255
    8d54:	3f 4f       	sbci	r19, 0xFF	; 255
    8d56:	29 83       	std	Y+1, r18	; 0x01
    8d58:	3a 83       	std	Y+2, r19	; 0x02
    8d5a:	fc 01       	movw	r30, r24
    8d5c:	80 81       	ld	r24, Z
    8d5e:	8b 83       	std	Y+3, r24	; 0x03
			
			eeprom_addr_t j = (eeprom_addr_t)StationID_text;
    8d60:	8a e0       	ldi	r24, 0x0A	; 10
    8d62:	90 e0       	ldi	r25, 0x00	; 0
    8d64:	8c 83       	std	Y+4, r24	; 0x04
    8d66:	9d 83       	std	Y+5, r25	; 0x05

			while(c)
    8d68:	8b 81       	ldd	r24, Y+3	; 0x03
    8d6a:	88 23       	and	r24, r24
    8d6c:	a9 f0       	breq	.+42     	; 0x8d98 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0xf4>
			{
				avr_eeprom_write_byte(j++, c);
    8d6e:	8c 81       	ldd	r24, Y+4	; 0x04
    8d70:	9d 81       	ldd	r25, Y+5	; 0x05
    8d72:	9c 01       	movw	r18, r24
    8d74:	2f 5f       	subi	r18, 0xFF	; 255
    8d76:	3f 4f       	sbci	r19, 0xFF	; 255
    8d78:	2c 83       	std	Y+4, r18	; 0x04
    8d7a:	3d 83       	std	Y+5, r19	; 0x05
    8d7c:	6b 81       	ldd	r22, Y+3	; 0x03
    8d7e:	0e 94 b6 45 	call	0x8b6c	; 0x8b6c <_Z21avr_eeprom_write_bytejh>
				c = *char_addr++;
    8d82:	89 81       	ldd	r24, Y+1	; 0x01
    8d84:	9a 81       	ldd	r25, Y+2	; 0x02
    8d86:	9c 01       	movw	r18, r24
    8d88:	2f 5f       	subi	r18, 0xFF	; 255
    8d8a:	3f 4f       	sbci	r19, 0xFF	; 255
    8d8c:	29 83       	std	Y+1, r18	; 0x01
    8d8e:	3a 83       	std	Y+2, r19	; 0x02
    8d90:	fc 01       	movw	r30, r24
    8d92:	80 81       	ld	r24, Z
    8d94:	8b 83       	std	Y+3, r24	; 0x03
			char* char_addr = (char*)val;
			char c = *char_addr++;
			
			eeprom_addr_t j = (eeprom_addr_t)StationID_text;

			while(c)
    8d96:	e8 cf       	rjmp	.-48     	; 0x8d68 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0xc4>
			{
				avr_eeprom_write_byte(j++, c);
				c = *char_addr++;
			}

			avr_eeprom_write_byte(j, 0);
    8d98:	8c 81       	ldd	r24, Y+4	; 0x04
    8d9a:	9d 81       	ldd	r25, Y+5	; 0x05
    8d9c:	60 e0       	ldi	r22, 0x00	; 0
    8d9e:	0e 94 b6 45 	call	0x8b6c	; 0x8b6c <_Z21avr_eeprom_write_bytejh>
		}
		break;
    8da2:	e2 c0       	rjmp	.+452    	; 0x8f68 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>

		case Pattern_text:
		{
			char* char_addr = (char*)val;
    8da4:	8c 89       	ldd	r24, Y+20	; 0x14
    8da6:	9d 89       	ldd	r25, Y+21	; 0x15
    8da8:	8e 83       	std	Y+6, r24	; 0x06
    8daa:	9f 83       	std	Y+7, r25	; 0x07
			char c = *char_addr++;
    8dac:	8e 81       	ldd	r24, Y+6	; 0x06
    8dae:	9f 81       	ldd	r25, Y+7	; 0x07
    8db0:	9c 01       	movw	r18, r24
    8db2:	2f 5f       	subi	r18, 0xFF	; 255
    8db4:	3f 4f       	sbci	r19, 0xFF	; 255
    8db6:	2e 83       	std	Y+6, r18	; 0x06
    8db8:	3f 83       	std	Y+7, r19	; 0x07
    8dba:	fc 01       	movw	r30, r24
    8dbc:	80 81       	ld	r24, Z
    8dbe:	88 87       	std	Y+8, r24	; 0x08
			
			eeprom_addr_t j = (eeprom_addr_t)Pattern_text;
    8dc0:	8f e1       	ldi	r24, 0x1F	; 31
    8dc2:	90 e0       	ldi	r25, 0x00	; 0
    8dc4:	89 87       	std	Y+9, r24	; 0x09
    8dc6:	9a 87       	std	Y+10, r25	; 0x0a

			while(c)
    8dc8:	88 85       	ldd	r24, Y+8	; 0x08
    8dca:	88 23       	and	r24, r24
    8dcc:	a9 f0       	breq	.+42     	; 0x8df8 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x154>
			{
				avr_eeprom_write_byte(j++, c);
    8dce:	89 85       	ldd	r24, Y+9	; 0x09
    8dd0:	9a 85       	ldd	r25, Y+10	; 0x0a
    8dd2:	9c 01       	movw	r18, r24
    8dd4:	2f 5f       	subi	r18, 0xFF	; 255
    8dd6:	3f 4f       	sbci	r19, 0xFF	; 255
    8dd8:	29 87       	std	Y+9, r18	; 0x09
    8dda:	3a 87       	std	Y+10, r19	; 0x0a
    8ddc:	68 85       	ldd	r22, Y+8	; 0x08
    8dde:	0e 94 b6 45 	call	0x8b6c	; 0x8b6c <_Z21avr_eeprom_write_bytejh>
				c = *char_addr++;
    8de2:	8e 81       	ldd	r24, Y+6	; 0x06
    8de4:	9f 81       	ldd	r25, Y+7	; 0x07
    8de6:	9c 01       	movw	r18, r24
    8de8:	2f 5f       	subi	r18, 0xFF	; 255
    8dea:	3f 4f       	sbci	r19, 0xFF	; 255
    8dec:	2e 83       	std	Y+6, r18	; 0x06
    8dee:	3f 83       	std	Y+7, r19	; 0x07
    8df0:	fc 01       	movw	r30, r24
    8df2:	80 81       	ld	r24, Z
    8df4:	88 87       	std	Y+8, r24	; 0x08
			char* char_addr = (char*)val;
			char c = *char_addr++;
			
			eeprom_addr_t j = (eeprom_addr_t)Pattern_text;

			while(c)
    8df6:	e8 cf       	rjmp	.-48     	; 0x8dc8 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x124>
			{
				avr_eeprom_write_byte(j++, c);
				c = *char_addr++;
			}

			avr_eeprom_write_byte(j, 0);
    8df8:	89 85       	ldd	r24, Y+9	; 0x09
    8dfa:	9a 85       	ldd	r25, Y+10	; 0x0a
    8dfc:	60 e0       	ldi	r22, 0x00	; 0
    8dfe:	0e 94 b6 45 	call	0x8b6c	; 0x8b6c <_Z21avr_eeprom_write_bytejh>
		}
		break;
    8e02:	b2 c0       	rjmp	.+356    	; 0x8f68 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>

		case UnlockCode:
		{
			uint8_t* uint8_addr = (uint8_t*)val;
    8e04:	8c 89       	ldd	r24, Y+20	; 0x14
    8e06:	9d 89       	ldd	r25, Y+21	; 0x15
    8e08:	8b 87       	std	Y+11, r24	; 0x0b
    8e0a:	9c 87       	std	Y+12, r25	; 0x0c
			uint8_t c = *uint8_addr++;
    8e0c:	8b 85       	ldd	r24, Y+11	; 0x0b
    8e0e:	9c 85       	ldd	r25, Y+12	; 0x0c
    8e10:	9c 01       	movw	r18, r24
    8e12:	2f 5f       	subi	r18, 0xFF	; 255
    8e14:	3f 4f       	sbci	r19, 0xFF	; 255
    8e16:	2b 87       	std	Y+11, r18	; 0x0b
    8e18:	3c 87       	std	Y+12, r19	; 0x0c
    8e1a:	fc 01       	movw	r30, r24
    8e1c:	80 81       	ld	r24, Z
    8e1e:	8d 87       	std	Y+13, r24	; 0x0d
			int i = 0;
    8e20:	1f 86       	std	Y+15, r1	; 0x0f
    8e22:	18 8a       	std	Y+16, r1	; 0x10
			uint8_t j = (uint8_t)UnlockCode;
    8e24:	84 e3       	ldi	r24, 0x34	; 52
    8e26:	8e 87       	std	Y+14, r24	; 0x0e
			
			while(c && (i < MAX_UNLOCK_CODE_LENGTH))
    8e28:	8d 85       	ldd	r24, Y+13	; 0x0d
    8e2a:	88 23       	and	r24, r24
    8e2c:	c1 f0       	breq	.+48     	; 0x8e5e <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x1ba>
    8e2e:	8f 85       	ldd	r24, Y+15	; 0x0f
    8e30:	98 89       	ldd	r25, Y+16	; 0x10
    8e32:	08 97       	sbiw	r24, 0x08	; 8
    8e34:	a4 f4       	brge	.+40     	; 0x8e5e <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x1ba>
			{
				avr_eeprom_write_byte(j++, c);
    8e36:	8e 85       	ldd	r24, Y+14	; 0x0e
    8e38:	91 e0       	ldi	r25, 0x01	; 1
    8e3a:	98 0f       	add	r25, r24
    8e3c:	9e 87       	std	Y+14, r25	; 0x0e
    8e3e:	88 2f       	mov	r24, r24
    8e40:	90 e0       	ldi	r25, 0x00	; 0
    8e42:	6d 85       	ldd	r22, Y+13	; 0x0d
    8e44:	0e 94 b6 45 	call	0x8b6c	; 0x8b6c <_Z21avr_eeprom_write_bytejh>
				c = *uint8_addr++;
    8e48:	8b 85       	ldd	r24, Y+11	; 0x0b
    8e4a:	9c 85       	ldd	r25, Y+12	; 0x0c
    8e4c:	9c 01       	movw	r18, r24
    8e4e:	2f 5f       	subi	r18, 0xFF	; 255
    8e50:	3f 4f       	sbci	r19, 0xFF	; 255
    8e52:	2b 87       	std	Y+11, r18	; 0x0b
    8e54:	3c 87       	std	Y+12, r19	; 0x0c
    8e56:	fc 01       	movw	r30, r24
    8e58:	80 81       	ld	r24, Z
    8e5a:	8d 87       	std	Y+13, r24	; 0x0d
			uint8_t* uint8_addr = (uint8_t*)val;
			uint8_t c = *uint8_addr++;
			int i = 0;
			uint8_t j = (uint8_t)UnlockCode;
			
			while(c && (i < MAX_UNLOCK_CODE_LENGTH))
    8e5c:	e5 cf       	rjmp	.-54     	; 0x8e28 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x184>
			{
				avr_eeprom_write_byte(j++, c);
				c = *uint8_addr++;
			}

			avr_eeprom_write_byte(j, 0);
    8e5e:	8e 85       	ldd	r24, Y+14	; 0x0e
    8e60:	88 2f       	mov	r24, r24
    8e62:	90 e0       	ldi	r25, 0x00	; 0
    8e64:	60 e0       	ldi	r22, 0x00	; 0
    8e66:	0e 94 b6 45 	call	0x8b6c	; 0x8b6c <_Z21avr_eeprom_write_bytejh>
		}
		break;
    8e6a:	7e c0       	rjmp	.+252    	; 0x8f68 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>

		case Id_codespeed:
		{
			avr_eeprom_write_byte(Id_codespeed, *(uint8_t*)val);
    8e6c:	8c 89       	ldd	r24, Y+20	; 0x14
    8e6e:	9d 89       	ldd	r25, Y+21	; 0x15
    8e70:	fc 01       	movw	r30, r24
    8e72:	80 81       	ld	r24, Z
    8e74:	68 2f       	mov	r22, r24
    8e76:	8d e3       	ldi	r24, 0x3D	; 61
    8e78:	90 e0       	ldi	r25, 0x00	; 0
    8e7a:	0e 94 b6 45 	call	0x8b6c	; 0x8b6c <_Z21avr_eeprom_write_bytejh>
		}
		break;
    8e7e:	74 c0       	rjmp	.+232    	; 0x8f68 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>

		case Fox_setting:
		{
			avr_eeprom_write_byte(Fox_setting, *(uint8_t*)val);
    8e80:	8c 89       	ldd	r24, Y+20	; 0x14
    8e82:	9d 89       	ldd	r25, Y+21	; 0x15
    8e84:	fc 01       	movw	r30, r24
    8e86:	80 81       	ld	r24, Z
    8e88:	68 2f       	mov	r22, r24
    8e8a:	8e e3       	ldi	r24, 0x3E	; 62
    8e8c:	90 e0       	ldi	r25, 0x00	; 0
    8e8e:	0e 94 b6 45 	call	0x8b6c	; 0x8b6c <_Z21avr_eeprom_write_bytejh>
		}
		break;
    8e92:	6a c0       	rjmp	.+212    	; 0x8f68 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>

		case Event_start_epoch:
		{
			avr_eeprom_write_dword(Event_start_epoch, *(uint32_t*)val);
    8e94:	8c 89       	ldd	r24, Y+20	; 0x14
    8e96:	9d 89       	ldd	r25, Y+21	; 0x15
    8e98:	fc 01       	movw	r30, r24
    8e9a:	80 81       	ld	r24, Z
    8e9c:	91 81       	ldd	r25, Z+1	; 0x01
    8e9e:	a2 81       	ldd	r26, Z+2	; 0x02
    8ea0:	b3 81       	ldd	r27, Z+3	; 0x03
    8ea2:	ac 01       	movw	r20, r24
    8ea4:	bd 01       	movw	r22, r26
    8ea6:	82 e0       	ldi	r24, 0x02	; 2
    8ea8:	90 e0       	ldi	r25, 0x00	; 0
    8eaa:	0e 94 18 46 	call	0x8c30	; 0x8c30 <_Z22avr_eeprom_write_dwordjm>
		}
		break;
    8eae:	5c c0       	rjmp	.+184    	; 0x8f68 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>

		case Event_finish_epoch:
		{
			avr_eeprom_write_dword(Event_finish_epoch, *(uint32_t*)val);
    8eb0:	8c 89       	ldd	r24, Y+20	; 0x14
    8eb2:	9d 89       	ldd	r25, Y+21	; 0x15
    8eb4:	fc 01       	movw	r30, r24
    8eb6:	80 81       	ld	r24, Z
    8eb8:	91 81       	ldd	r25, Z+1	; 0x01
    8eba:	a2 81       	ldd	r26, Z+2	; 0x02
    8ebc:	b3 81       	ldd	r27, Z+3	; 0x03
    8ebe:	ac 01       	movw	r20, r24
    8ec0:	bd 01       	movw	r22, r26
    8ec2:	86 e0       	ldi	r24, 0x06	; 6
    8ec4:	90 e0       	ldi	r25, 0x00	; 0
    8ec6:	0e 94 18 46 	call	0x8c30	; 0x8c30 <_Z22avr_eeprom_write_dwordjm>
		}
		break;
    8eca:	4e c0       	rjmp	.+156    	; 0x8f68 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>

		case Utc_offset:
		{
			avr_eeprom_write_byte(Utc_offset, *(uint8_t*)val);
    8ecc:	8c 89       	ldd	r24, Y+20	; 0x14
    8ece:	9d 89       	ldd	r25, Y+21	; 0x15
    8ed0:	fc 01       	movw	r30, r24
    8ed2:	80 81       	ld	r24, Z
    8ed4:	68 2f       	mov	r22, r24
    8ed6:	8f e3       	ldi	r24, 0x3F	; 63
    8ed8:	90 e0       	ldi	r25, 0x00	; 0
    8eda:	0e 94 b6 45 	call	0x8b6c	; 0x8b6c <_Z21avr_eeprom_write_bytejh>
		}
		break;
    8ede:	44 c0       	rjmp	.+136    	; 0x8f68 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>
		
		case Pattern_Code_Speed:
		{
			avr_eeprom_write_byte(Pattern_Code_Speed, *(uint8_t*)val);
    8ee0:	8c 89       	ldd	r24, Y+20	; 0x14
    8ee2:	9d 89       	ldd	r25, Y+21	; 0x15
    8ee4:	fc 01       	movw	r30, r24
    8ee6:	80 81       	ld	r24, Z
    8ee8:	68 2f       	mov	r22, r24
    8eea:	8a e4       	ldi	r24, 0x4A	; 74
    8eec:	90 e0       	ldi	r25, 0x00	; 0
    8eee:	0e 94 b6 45 	call	0x8b6c	; 0x8b6c <_Z21avr_eeprom_write_bytejh>
		}
		break;
    8ef2:	3a c0       	rjmp	.+116    	; 0x8f68 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>

		case Off_Air_Seconds:
		{
			avr_eeprom_write_word(Off_Air_Seconds, *(uint16_t*)val);
    8ef4:	8c 89       	ldd	r24, Y+20	; 0x14
    8ef6:	9d 89       	ldd	r25, Y+21	; 0x15
    8ef8:	fc 01       	movw	r30, r24
    8efa:	80 81       	ld	r24, Z
    8efc:	91 81       	ldd	r25, Z+1	; 0x01
    8efe:	bc 01       	movw	r22, r24
    8f00:	8b e4       	ldi	r24, 0x4B	; 75
    8f02:	90 e0       	ldi	r25, 0x00	; 0
    8f04:	0e 94 e5 45 	call	0x8bca	; 0x8bca <_Z21avr_eeprom_write_wordjj>
		}
		break;
    8f08:	2f c0       	rjmp	.+94     	; 0x8f68 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>
		
		case On_Air_Seconds:
		{
			avr_eeprom_write_word(On_Air_Seconds, *(uint16_t*)val);
    8f0a:	8c 89       	ldd	r24, Y+20	; 0x14
    8f0c:	9d 89       	ldd	r25, Y+21	; 0x15
    8f0e:	fc 01       	movw	r30, r24
    8f10:	80 81       	ld	r24, Z
    8f12:	91 81       	ldd	r25, Z+1	; 0x01
    8f14:	bc 01       	movw	r22, r24
    8f16:	8d e4       	ldi	r24, 0x4D	; 77
    8f18:	90 e0       	ldi	r25, 0x00	; 0
    8f1a:	0e 94 e5 45 	call	0x8bca	; 0x8bca <_Z21avr_eeprom_write_wordjj>
		}
		break;
    8f1e:	24 c0       	rjmp	.+72     	; 0x8f68 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>
		
		case ID_Period_Seconds:
		{
			avr_eeprom_write_word(ID_Period_Seconds, *(uint16_t*)val);
    8f20:	8c 89       	ldd	r24, Y+20	; 0x14
    8f22:	9d 89       	ldd	r25, Y+21	; 0x15
    8f24:	fc 01       	movw	r30, r24
    8f26:	80 81       	ld	r24, Z
    8f28:	91 81       	ldd	r25, Z+1	; 0x01
    8f2a:	bc 01       	movw	r22, r24
    8f2c:	8f e4       	ldi	r24, 0x4F	; 79
    8f2e:	90 e0       	ldi	r25, 0x00	; 0
    8f30:	0e 94 e5 45 	call	0x8bca	; 0x8bca <_Z21avr_eeprom_write_wordjj>
		}
		break;
    8f34:	19 c0       	rjmp	.+50     	; 0x8f68 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>
		
		case Intra_Cycle_Delay_Seconds:
		{
			avr_eeprom_write_word(Intra_Cycle_Delay_Seconds, *(uint16_t*)val);
    8f36:	8c 89       	ldd	r24, Y+20	; 0x14
    8f38:	9d 89       	ldd	r25, Y+21	; 0x15
    8f3a:	fc 01       	movw	r30, r24
    8f3c:	80 81       	ld	r24, Z
    8f3e:	91 81       	ldd	r25, Z+1	; 0x01
    8f40:	bc 01       	movw	r22, r24
    8f42:	81 e5       	ldi	r24, 0x51	; 81
    8f44:	90 e0       	ldi	r25, 0x00	; 0
    8f46:	0e 94 e5 45 	call	0x8bca	; 0x8bca <_Z21avr_eeprom_write_wordjj>
		}
		break;
    8f4a:	0e c0       	rjmp	.+28     	; 0x8f68 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>

		case Eeprom_initialization_flag:
		{
			avr_eeprom_write_word(Eeprom_initialization_flag, *(uint16_t*)val);
    8f4c:	8c 89       	ldd	r24, Y+20	; 0x14
    8f4e:	9d 89       	ldd	r25, Y+21	; 0x15
    8f50:	fc 01       	movw	r30, r24
    8f52:	80 81       	ld	r24, Z
    8f54:	91 81       	ldd	r25, Z+1	; 0x01
    8f56:	bc 01       	movw	r22, r24
    8f58:	80 e0       	ldi	r24, 0x00	; 0
    8f5a:	90 e0       	ldi	r25, 0x00	; 0
    8f5c:	0e 94 e5 45 	call	0x8bca	; 0x8bca <_Z21avr_eeprom_write_wordjj>
		}
		break;
    8f60:	03 c0       	rjmp	.+6      	; 0x8f68 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>

void EepromManager::updateEEPROMVar(EE_var_t v, void* val)
{
	if(!val)
	{
		return;
    8f62:	00 00       	nop
    8f64:	01 c0       	rjmp	.+2      	; 0x8f68 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>

		default:
		{

		}
		break;
    8f66:	00 00       	nop
	}
}
    8f68:	65 96       	adiw	r28, 0x15	; 21
    8f6a:	cd bf       	out	0x3d, r28	; 61
    8f6c:	de bf       	out	0x3e, r29	; 62
    8f6e:	df 91       	pop	r29
    8f70:	cf 91       	pop	r28
    8f72:	08 95       	ret

00008f74 <_ZN13EepromManager13saveAllEEPROMEv>:

/** 
 * Store any changed EEPROM variables
 */
void EepromManager::saveAllEEPROM(void)
{
    8f74:	0f 93       	push	r16
    8f76:	1f 93       	push	r17
    8f78:	cf 93       	push	r28
    8f7a:	df 93       	push	r29
    8f7c:	00 d0       	rcall	.+0      	; 0x8f7e <_ZN13EepromManager13saveAllEEPROMEv+0xa>
    8f7e:	00 d0       	rcall	.+0      	; 0x8f80 <_ZN13EepromManager13saveAllEEPROMEv+0xc>
    8f80:	cd b7       	in	r28, 0x3d	; 61
    8f82:	de b7       	in	r29, 0x3e	; 62
    8f84:	8b 83       	std	Y+3, r24	; 0x03
    8f86:	9c 83       	std	Y+4, r25	; 0x04
	uint16_t i;
	
	if(g_id_codespeed != eeprom_read_byte(&(EepromManager::ee_vars.id_codespeed)))
    8f88:	8d e3       	ldi	r24, 0x3D	; 61
    8f8a:	90 e0       	ldi	r25, 0x00	; 0
    8f8c:	0e 94 60 83 	call	0x106c0	; 0x106c0 <eeprom_read_byte>
    8f90:	28 2f       	mov	r18, r24
    8f92:	90 91 0b 40 	lds	r25, 0x400B	; 0x80400b <g_id_codespeed>
    8f96:	81 e0       	ldi	r24, 0x01	; 1
    8f98:	29 17       	cp	r18, r25
    8f9a:	09 f4       	brne	.+2      	; 0x8f9e <_ZN13EepromManager13saveAllEEPROMEv+0x2a>
    8f9c:	80 e0       	ldi	r24, 0x00	; 0
    8f9e:	88 23       	and	r24, r24
    8fa0:	39 f0       	breq	.+14     	; 0x8fb0 <_ZN13EepromManager13saveAllEEPROMEv+0x3c>
	{
		updateEEPROMVar(Id_codespeed, (void*)&g_id_codespeed);
    8fa2:	8b 81       	ldd	r24, Y+3	; 0x03
    8fa4:	9c 81       	ldd	r25, Y+4	; 0x04
    8fa6:	4b e0       	ldi	r20, 0x0B	; 11
    8fa8:	50 e4       	ldi	r21, 0x40	; 64
    8faa:	6d e3       	ldi	r22, 0x3D	; 61
    8fac:	0e 94 52 46 	call	0x8ca4	; 0x8ca4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
	
	if(g_fox != eeprom_read_byte(&(EepromManager::ee_vars.fox_setting)))
    8fb0:	8e e3       	ldi	r24, 0x3E	; 62
    8fb2:	90 e0       	ldi	r25, 0x00	; 0
    8fb4:	0e 94 60 83 	call	0x106c0	; 0x106c0 <eeprom_read_byte>
    8fb8:	28 2f       	mov	r18, r24
    8fba:	90 91 22 40 	lds	r25, 0x4022	; 0x804022 <g_fox>
    8fbe:	81 e0       	ldi	r24, 0x01	; 1
    8fc0:	29 17       	cp	r18, r25
    8fc2:	09 f4       	brne	.+2      	; 0x8fc6 <_ZN13EepromManager13saveAllEEPROMEv+0x52>
    8fc4:	80 e0       	ldi	r24, 0x00	; 0
    8fc6:	88 23       	and	r24, r24
    8fc8:	39 f0       	breq	.+14     	; 0x8fd8 <_ZN13EepromManager13saveAllEEPROMEv+0x64>
	{
		updateEEPROMVar(Fox_setting, (void*)&g_fox);
    8fca:	8b 81       	ldd	r24, Y+3	; 0x03
    8fcc:	9c 81       	ldd	r25, Y+4	; 0x04
    8fce:	42 e2       	ldi	r20, 0x22	; 34
    8fd0:	50 e4       	ldi	r21, 0x40	; 64
    8fd2:	6e e3       	ldi	r22, 0x3E	; 62
    8fd4:	0e 94 52 46 	call	0x8ca4	; 0x8ca4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
	
	if(g_event_start_epoch != eeprom_read_dword(&(EepromManager::ee_vars.event_start_epoch)))
    8fd8:	82 e0       	ldi	r24, 0x02	; 2
    8fda:	90 e0       	ldi	r25, 0x00	; 0
    8fdc:	0e 94 68 83 	call	0x106d0	; 0x106d0 <eeprom_read_dword>
    8fe0:	9b 01       	movw	r18, r22
    8fe2:	ac 01       	movw	r20, r24
    8fe4:	80 91 8c 47 	lds	r24, 0x478C	; 0x80478c <g_event_start_epoch>
    8fe8:	90 91 8d 47 	lds	r25, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    8fec:	a0 91 8e 47 	lds	r26, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    8ff0:	b0 91 8f 47 	lds	r27, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    8ff4:	61 e0       	ldi	r22, 0x01	; 1
    8ff6:	28 17       	cp	r18, r24
    8ff8:	39 07       	cpc	r19, r25
    8ffa:	4a 07       	cpc	r20, r26
    8ffc:	5b 07       	cpc	r21, r27
    8ffe:	09 f4       	brne	.+2      	; 0x9002 <_ZN13EepromManager13saveAllEEPROMEv+0x8e>
    9000:	60 e0       	ldi	r22, 0x00	; 0
    9002:	66 23       	and	r22, r22
    9004:	39 f0       	breq	.+14     	; 0x9014 <_ZN13EepromManager13saveAllEEPROMEv+0xa0>
	{
		updateEEPROMVar(Event_start_epoch, (void*)&g_event_start_epoch);
    9006:	8b 81       	ldd	r24, Y+3	; 0x03
    9008:	9c 81       	ldd	r25, Y+4	; 0x04
    900a:	4c e8       	ldi	r20, 0x8C	; 140
    900c:	57 e4       	ldi	r21, 0x47	; 71
    900e:	62 e0       	ldi	r22, 0x02	; 2
    9010:	0e 94 52 46 	call	0x8ca4	; 0x8ca4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
	
	if(g_event_finish_epoch != eeprom_read_dword(&(EepromManager::ee_vars.event_finish_epoch)))
    9014:	86 e0       	ldi	r24, 0x06	; 6
    9016:	90 e0       	ldi	r25, 0x00	; 0
    9018:	0e 94 68 83 	call	0x106d0	; 0x106d0 <eeprom_read_dword>
    901c:	9b 01       	movw	r18, r22
    901e:	ac 01       	movw	r20, r24
    9020:	80 91 90 47 	lds	r24, 0x4790	; 0x804790 <g_event_finish_epoch>
    9024:	90 91 91 47 	lds	r25, 0x4791	; 0x804791 <g_event_finish_epoch+0x1>
    9028:	a0 91 92 47 	lds	r26, 0x4792	; 0x804792 <g_event_finish_epoch+0x2>
    902c:	b0 91 93 47 	lds	r27, 0x4793	; 0x804793 <g_event_finish_epoch+0x3>
    9030:	61 e0       	ldi	r22, 0x01	; 1
    9032:	28 17       	cp	r18, r24
    9034:	39 07       	cpc	r19, r25
    9036:	4a 07       	cpc	r20, r26
    9038:	5b 07       	cpc	r21, r27
    903a:	09 f4       	brne	.+2      	; 0x903e <_ZN13EepromManager13saveAllEEPROMEv+0xca>
    903c:	60 e0       	ldi	r22, 0x00	; 0
    903e:	66 23       	and	r22, r22
    9040:	39 f0       	breq	.+14     	; 0x9050 <_ZN13EepromManager13saveAllEEPROMEv+0xdc>
	{
		updateEEPROMVar(Event_finish_epoch, (void*)&g_event_finish_epoch);
    9042:	8b 81       	ldd	r24, Y+3	; 0x03
    9044:	9c 81       	ldd	r25, Y+4	; 0x04
    9046:	40 e9       	ldi	r20, 0x90	; 144
    9048:	57 e4       	ldi	r21, 0x47	; 71
    904a:	66 e0       	ldi	r22, 0x06	; 6
    904c:	0e 94 52 46 	call	0x8ca4	; 0x8ca4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
	
	if(g_utc_offset != eeprom_read_byte(&(EepromManager::ee_vars.utc_offset)))
    9050:	80 91 ac 47 	lds	r24, 0x47AC	; 0x8047ac <g_utc_offset>
    9054:	08 2f       	mov	r16, r24
    9056:	88 0f       	add	r24, r24
    9058:	11 0b       	sbc	r17, r17
    905a:	8f e3       	ldi	r24, 0x3F	; 63
    905c:	90 e0       	ldi	r25, 0x00	; 0
    905e:	0e 94 60 83 	call	0x106c0	; 0x106c0 <eeprom_read_byte>
    9062:	88 2f       	mov	r24, r24
    9064:	90 e0       	ldi	r25, 0x00	; 0
    9066:	21 e0       	ldi	r18, 0x01	; 1
    9068:	08 17       	cp	r16, r24
    906a:	19 07       	cpc	r17, r25
    906c:	09 f4       	brne	.+2      	; 0x9070 <_ZN13EepromManager13saveAllEEPROMEv+0xfc>
    906e:	20 e0       	ldi	r18, 0x00	; 0
    9070:	22 23       	and	r18, r18
    9072:	39 f0       	breq	.+14     	; 0x9082 <_ZN13EepromManager13saveAllEEPROMEv+0x10e>
	{
		updateEEPROMVar(Utc_offset, (void*)&g_utc_offset);
    9074:	8b 81       	ldd	r24, Y+3	; 0x03
    9076:	9c 81       	ldd	r25, Y+4	; 0x04
    9078:	4c ea       	ldi	r20, 0xAC	; 172
    907a:	57 e4       	ldi	r21, 0x47	; 71
    907c:	6f e3       	ldi	r22, 0x3F	; 63
    907e:	0e 94 52 46 	call	0x8ca4	; 0x8ca4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
	
	for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    9082:	19 82       	std	Y+1, r1	; 0x01
    9084:	1a 82       	std	Y+2, r1	; 0x02
    9086:	89 81       	ldd	r24, Y+1	; 0x01
    9088:	9a 81       	ldd	r25, Y+2	; 0x02
    908a:	44 97       	sbiw	r24, 0x14	; 20
    908c:	e8 f4       	brcc	.+58     	; 0x90c8 <_ZN13EepromManager13saveAllEEPROMEv+0x154>
	{
		if(g_messages_text[STATION_ID][i] != (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.stationID_text[i]))))
    908e:	89 81       	ldd	r24, Y+1	; 0x01
    9090:	9a 81       	ldd	r25, Y+2	; 0x02
    9092:	8d 58       	subi	r24, 0x8D	; 141
    9094:	98 4b       	sbci	r25, 0xB8	; 184
    9096:	fc 01       	movw	r30, r24
    9098:	10 81       	ld	r17, Z
    909a:	89 81       	ldd	r24, Y+1	; 0x01
    909c:	9a 81       	ldd	r25, Y+2	; 0x02
    909e:	0a 96       	adiw	r24, 0x0a	; 10
    90a0:	80 50       	subi	r24, 0x00	; 0
    90a2:	90 40       	sbci	r25, 0x00	; 0
    90a4:	0e 94 60 83 	call	0x106c0	; 0x106c0 <eeprom_read_byte>
    90a8:	18 17       	cp	r17, r24
    90aa:	41 f0       	breq	.+16     	; 0x90bc <_ZN13EepromManager13saveAllEEPROMEv+0x148>
		{
			updateEEPROMVar(StationID_text, (void*)g_messages_text[STATION_ID]);
    90ac:	8b 81       	ldd	r24, Y+3	; 0x03
    90ae:	9c 81       	ldd	r25, Y+4	; 0x04
    90b0:	43 e7       	ldi	r20, 0x73	; 115
    90b2:	57 e4       	ldi	r21, 0x47	; 71
    90b4:	6a e0       	ldi	r22, 0x0A	; 10
    90b6:	0e 94 52 46 	call	0x8ca4	; 0x8ca4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
			break;
    90ba:	06 c0       	rjmp	.+12     	; 0x90c8 <_ZN13EepromManager13saveAllEEPROMEv+0x154>
	if(g_utc_offset != eeprom_read_byte(&(EepromManager::ee_vars.utc_offset)))
	{
		updateEEPROMVar(Utc_offset, (void*)&g_utc_offset);
	}
	
	for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    90bc:	89 81       	ldd	r24, Y+1	; 0x01
    90be:	9a 81       	ldd	r25, Y+2	; 0x02
    90c0:	01 96       	adiw	r24, 0x01	; 1
    90c2:	89 83       	std	Y+1, r24	; 0x01
    90c4:	9a 83       	std	Y+2, r25	; 0x02
    90c6:	df cf       	rjmp	.-66     	; 0x9086 <_ZN13EepromManager13saveAllEEPROMEv+0x112>
			updateEEPROMVar(StationID_text, (void*)g_messages_text[STATION_ID]);
			break;
		}
	}

	for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    90c8:	19 82       	std	Y+1, r1	; 0x01
    90ca:	1a 82       	std	Y+2, r1	; 0x02
    90cc:	89 81       	ldd	r24, Y+1	; 0x01
    90ce:	9a 81       	ldd	r25, Y+2	; 0x02
    90d0:	44 97       	sbiw	r24, 0x14	; 20
    90d2:	e8 f4       	brcc	.+58     	; 0x910e <_ZN13EepromManager13saveAllEEPROMEv+0x19a>
	{
		if(g_messages_text[PATTERN_TEXT][i] != (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.pattern_text[i]))))
    90d4:	89 81       	ldd	r24, Y+1	; 0x01
    90d6:	9a 81       	ldd	r25, Y+2	; 0x02
    90d8:	82 5a       	subi	r24, 0xA2	; 162
    90da:	98 4b       	sbci	r25, 0xB8	; 184
    90dc:	fc 01       	movw	r30, r24
    90de:	10 81       	ld	r17, Z
    90e0:	89 81       	ldd	r24, Y+1	; 0x01
    90e2:	9a 81       	ldd	r25, Y+2	; 0x02
    90e4:	4f 96       	adiw	r24, 0x1f	; 31
    90e6:	80 50       	subi	r24, 0x00	; 0
    90e8:	90 40       	sbci	r25, 0x00	; 0
    90ea:	0e 94 60 83 	call	0x106c0	; 0x106c0 <eeprom_read_byte>
    90ee:	18 17       	cp	r17, r24
    90f0:	41 f0       	breq	.+16     	; 0x9102 <_ZN13EepromManager13saveAllEEPROMEv+0x18e>
		{
			updateEEPROMVar(Pattern_text, (void*)g_messages_text[PATTERN_TEXT]);
    90f2:	8b 81       	ldd	r24, Y+3	; 0x03
    90f4:	9c 81       	ldd	r25, Y+4	; 0x04
    90f6:	4e e5       	ldi	r20, 0x5E	; 94
    90f8:	57 e4       	ldi	r21, 0x47	; 71
    90fa:	6f e1       	ldi	r22, 0x1F	; 31
    90fc:	0e 94 52 46 	call	0x8ca4	; 0x8ca4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
			break;
    9100:	06 c0       	rjmp	.+12     	; 0x910e <_ZN13EepromManager13saveAllEEPROMEv+0x19a>
			updateEEPROMVar(StationID_text, (void*)g_messages_text[STATION_ID]);
			break;
		}
	}

	for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    9102:	89 81       	ldd	r24, Y+1	; 0x01
    9104:	9a 81       	ldd	r25, Y+2	; 0x02
    9106:	01 96       	adiw	r24, 0x01	; 1
    9108:	89 83       	std	Y+1, r24	; 0x01
    910a:	9a 83       	std	Y+2, r25	; 0x02
    910c:	df cf       	rjmp	.-66     	; 0x90cc <_ZN13EepromManager13saveAllEEPROMEv+0x158>
			updateEEPROMVar(Pattern_text, (void*)g_messages_text[PATTERN_TEXT]);
			break;
		}
	}

	for(i = 0; i < MAX_UNLOCK_CODE_LENGTH; i++)
    910e:	19 82       	std	Y+1, r1	; 0x01
    9110:	1a 82       	std	Y+2, r1	; 0x02
    9112:	89 81       	ldd	r24, Y+1	; 0x01
    9114:	9a 81       	ldd	r25, Y+2	; 0x02
    9116:	08 97       	sbiw	r24, 0x08	; 8
    9118:	e8 f4       	brcc	.+58     	; 0x9154 <_ZN13EepromManager13saveAllEEPROMEv+0x1e0>
	{
		if(g_unlockCode[i] != (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.unlockCode[i]))))
    911a:	89 81       	ldd	r24, Y+1	; 0x01
    911c:	9a 81       	ldd	r25, Y+2	; 0x02
    911e:	83 55       	subi	r24, 0x53	; 83
    9120:	98 4b       	sbci	r25, 0xB8	; 184
    9122:	fc 01       	movw	r30, r24
    9124:	10 81       	ld	r17, Z
    9126:	89 81       	ldd	r24, Y+1	; 0x01
    9128:	9a 81       	ldd	r25, Y+2	; 0x02
    912a:	c4 96       	adiw	r24, 0x34	; 52
    912c:	80 50       	subi	r24, 0x00	; 0
    912e:	90 40       	sbci	r25, 0x00	; 0
    9130:	0e 94 60 83 	call	0x106c0	; 0x106c0 <eeprom_read_byte>
    9134:	18 17       	cp	r17, r24
    9136:	41 f0       	breq	.+16     	; 0x9148 <_ZN13EepromManager13saveAllEEPROMEv+0x1d4>
		{
			updateEEPROMVar(UnlockCode, (void*)g_unlockCode);
    9138:	8b 81       	ldd	r24, Y+3	; 0x03
    913a:	9c 81       	ldd	r25, Y+4	; 0x04
    913c:	4d ea       	ldi	r20, 0xAD	; 173
    913e:	57 e4       	ldi	r21, 0x47	; 71
    9140:	64 e3       	ldi	r22, 0x34	; 52
    9142:	0e 94 52 46 	call	0x8ca4	; 0x8ca4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
			break;
    9146:	06 c0       	rjmp	.+12     	; 0x9154 <_ZN13EepromManager13saveAllEEPROMEv+0x1e0>
			updateEEPROMVar(Pattern_text, (void*)g_messages_text[PATTERN_TEXT]);
			break;
		}
	}

	for(i = 0; i < MAX_UNLOCK_CODE_LENGTH; i++)
    9148:	89 81       	ldd	r24, Y+1	; 0x01
    914a:	9a 81       	ldd	r25, Y+2	; 0x02
    914c:	01 96       	adiw	r24, 0x01	; 1
    914e:	89 83       	std	Y+1, r24	; 0x01
    9150:	9a 83       	std	Y+2, r25	; 0x02
    9152:	df cf       	rjmp	.-66     	; 0x9112 <_ZN13EepromManager13saveAllEEPROMEv+0x19e>
			updateEEPROMVar(UnlockCode, (void*)g_unlockCode);
			break;
		}
	}
	
	if(g_80m_frequency != eeprom_read_dword(&(EepromManager::ee_vars.frequency)))
    9154:	80 e4       	ldi	r24, 0x40	; 64
    9156:	90 e0       	ldi	r25, 0x00	; 0
    9158:	0e 94 68 83 	call	0x106d0	; 0x106d0 <eeprom_read_dword>
    915c:	9b 01       	movw	r18, r22
    915e:	ac 01       	movw	r20, r24
    9160:	80 91 36 40 	lds	r24, 0x4036	; 0x804036 <g_80m_frequency>
    9164:	90 91 37 40 	lds	r25, 0x4037	; 0x804037 <g_80m_frequency+0x1>
    9168:	a0 91 38 40 	lds	r26, 0x4038	; 0x804038 <g_80m_frequency+0x2>
    916c:	b0 91 39 40 	lds	r27, 0x4039	; 0x804039 <g_80m_frequency+0x3>
    9170:	28 17       	cp	r18, r24
    9172:	39 07       	cpc	r19, r25
    9174:	4a 07       	cpc	r20, r26
    9176:	5b 07       	cpc	r21, r27
    9178:	39 f0       	breq	.+14     	; 0x9188 <_ZN13EepromManager13saveAllEEPROMEv+0x214>
	{
		updateEEPROMVar(Frequency, (void*)&g_80m_frequency);
    917a:	8b 81       	ldd	r24, Y+3	; 0x03
    917c:	9c 81       	ldd	r25, Y+4	; 0x04
    917e:	46 e3       	ldi	r20, 0x36	; 54
    9180:	50 e4       	ldi	r21, 0x40	; 64
    9182:	60 e4       	ldi	r22, 0x40	; 64
    9184:	0e 94 52 46 	call	0x8ca4	; 0x8ca4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
	
	if(g_rtty_offset != eeprom_read_dword(&(EepromManager::ee_vars.rtty_offset)))
    9188:	84 e4       	ldi	r24, 0x44	; 68
    918a:	90 e0       	ldi	r25, 0x00	; 0
    918c:	0e 94 68 83 	call	0x106d0	; 0x106d0 <eeprom_read_dword>
    9190:	9b 01       	movw	r18, r22
    9192:	ac 01       	movw	r20, r24
    9194:	80 91 3c 40 	lds	r24, 0x403C	; 0x80403c <g_rtty_offset>
    9198:	90 91 3d 40 	lds	r25, 0x403D	; 0x80403d <g_rtty_offset+0x1>
    919c:	a0 91 3e 40 	lds	r26, 0x403E	; 0x80403e <g_rtty_offset+0x2>
    91a0:	b0 91 3f 40 	lds	r27, 0x403F	; 0x80403f <g_rtty_offset+0x3>
    91a4:	28 17       	cp	r18, r24
    91a6:	39 07       	cpc	r19, r25
    91a8:	4a 07       	cpc	r20, r26
    91aa:	5b 07       	cpc	r21, r27
    91ac:	39 f0       	breq	.+14     	; 0x91bc <_ZN13EepromManager13saveAllEEPROMEv+0x248>
	{
		updateEEPROMVar(RTTY_offset, (void*)&g_rtty_offset);
    91ae:	8b 81       	ldd	r24, Y+3	; 0x03
    91b0:	9c 81       	ldd	r25, Y+4	; 0x04
    91b2:	4c e3       	ldi	r20, 0x3C	; 60
    91b4:	50 e4       	ldi	r21, 0x40	; 64
    91b6:	64 e4       	ldi	r22, 0x44	; 68
    91b8:	0e 94 52 46 	call	0x8ca4	; 0x8ca4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
	
	if(g_80m_power_level_mW != eeprom_read_word(&(EepromManager::ee_vars.rf_power)))
    91bc:	88 e4       	ldi	r24, 0x48	; 72
    91be:	90 e0       	ldi	r25, 0x00	; 0
    91c0:	0e 94 6f 83 	call	0x106de	; 0x106de <eeprom_read_word>
    91c4:	9c 01       	movw	r18, r24
    91c6:	80 91 3a 40 	lds	r24, 0x403A	; 0x80403a <g_80m_power_level_mW>
    91ca:	90 91 3b 40 	lds	r25, 0x403B	; 0x80403b <g_80m_power_level_mW+0x1>
    91ce:	28 17       	cp	r18, r24
    91d0:	39 07       	cpc	r19, r25
    91d2:	39 f0       	breq	.+14     	; 0x91e2 <_ZN13EepromManager13saveAllEEPROMEv+0x26e>
	{
		updateEEPROMVar(RF_Power, (void*)&g_80m_power_level_mW);
    91d4:	8b 81       	ldd	r24, Y+3	; 0x03
    91d6:	9c 81       	ldd	r25, Y+4	; 0x04
    91d8:	4a e3       	ldi	r20, 0x3A	; 58
    91da:	50 e4       	ldi	r21, 0x40	; 64
    91dc:	68 e4       	ldi	r22, 0x48	; 72
    91de:	0e 94 52 46 	call	0x8ca4	; 0x8ca4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
	
	if(g_pattern_codespeed != eeprom_read_byte(&(EepromManager::ee_vars.pattern_codespeed)))
    91e2:	8a e4       	ldi	r24, 0x4A	; 74
    91e4:	90 e0       	ldi	r25, 0x00	; 0
    91e6:	0e 94 60 83 	call	0x106c0	; 0x106c0 <eeprom_read_byte>
    91ea:	28 2f       	mov	r18, r24
    91ec:	90 91 0c 40 	lds	r25, 0x400C	; 0x80400c <g_pattern_codespeed>
    91f0:	81 e0       	ldi	r24, 0x01	; 1
    91f2:	29 17       	cp	r18, r25
    91f4:	09 f4       	brne	.+2      	; 0x91f8 <_ZN13EepromManager13saveAllEEPROMEv+0x284>
    91f6:	80 e0       	ldi	r24, 0x00	; 0
    91f8:	88 23       	and	r24, r24
    91fa:	39 f0       	breq	.+14     	; 0x920a <_ZN13EepromManager13saveAllEEPROMEv+0x296>
	{
		updateEEPROMVar(Pattern_Code_Speed, (void*)&g_pattern_codespeed);
    91fc:	8b 81       	ldd	r24, Y+3	; 0x03
    91fe:	9c 81       	ldd	r25, Y+4	; 0x04
    9200:	4c e0       	ldi	r20, 0x0C	; 12
    9202:	50 e4       	ldi	r21, 0x40	; 64
    9204:	6a e4       	ldi	r22, 0x4A	; 74
    9206:	0e 94 52 46 	call	0x8ca4	; 0x8ca4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}

	if(g_off_air_seconds != (int16_t)eeprom_read_word((const uint16_t *)&(EepromManager::ee_vars.off_air_seconds)))
    920a:	8b e4       	ldi	r24, 0x4B	; 75
    920c:	90 e0       	ldi	r25, 0x00	; 0
    920e:	0e 94 6f 83 	call	0x106de	; 0x106de <eeprom_read_word>
    9212:	9c 01       	movw	r18, r24
    9214:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_off_air_seconds>
    9218:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    921c:	41 e0       	ldi	r20, 0x01	; 1
    921e:	28 17       	cp	r18, r24
    9220:	39 07       	cpc	r19, r25
    9222:	09 f4       	brne	.+2      	; 0x9226 <_ZN13EepromManager13saveAllEEPROMEv+0x2b2>
    9224:	40 e0       	ldi	r20, 0x00	; 0
    9226:	44 23       	and	r20, r20
    9228:	39 f0       	breq	.+14     	; 0x9238 <_ZN13EepromManager13saveAllEEPROMEv+0x2c4>
	{
		updateEEPROMVar(Off_Air_Seconds, (void*)&g_off_air_seconds);
    922a:	8b 81       	ldd	r24, Y+3	; 0x03
    922c:	9c 81       	ldd	r25, Y+4	; 0x04
    922e:	4f e0       	ldi	r20, 0x0F	; 15
    9230:	50 e4       	ldi	r21, 0x40	; 64
    9232:	6b e4       	ldi	r22, 0x4B	; 75
    9234:	0e 94 52 46 	call	0x8ca4	; 0x8ca4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
	
	if(g_on_air_seconds != (int16_t)eeprom_read_word((const uint16_t *)&(EepromManager::ee_vars.on_air_seconds)))
    9238:	8d e4       	ldi	r24, 0x4D	; 77
    923a:	90 e0       	ldi	r25, 0x00	; 0
    923c:	0e 94 6f 83 	call	0x106de	; 0x106de <eeprom_read_word>
    9240:	9c 01       	movw	r18, r24
    9242:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    9246:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    924a:	41 e0       	ldi	r20, 0x01	; 1
    924c:	28 17       	cp	r18, r24
    924e:	39 07       	cpc	r19, r25
    9250:	09 f4       	brne	.+2      	; 0x9254 <_ZN13EepromManager13saveAllEEPROMEv+0x2e0>
    9252:	40 e0       	ldi	r20, 0x00	; 0
    9254:	44 23       	and	r20, r20
    9256:	39 f0       	breq	.+14     	; 0x9266 <_ZN13EepromManager13saveAllEEPROMEv+0x2f2>
	{
		updateEEPROMVar(On_Air_Seconds, (void*)&g_on_air_seconds);
    9258:	8b 81       	ldd	r24, Y+3	; 0x03
    925a:	9c 81       	ldd	r25, Y+4	; 0x04
    925c:	4d e0       	ldi	r20, 0x0D	; 13
    925e:	50 e4       	ldi	r21, 0x40	; 64
    9260:	6d e4       	ldi	r22, 0x4D	; 77
    9262:	0e 94 52 46 	call	0x8ca4	; 0x8ca4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
	
	if(g_ID_period_seconds != (int16_t)eeprom_read_word((const uint16_t *)&(EepromManager::ee_vars.ID_period_seconds)))
    9266:	8f e4       	ldi	r24, 0x4F	; 79
    9268:	90 e0       	ldi	r25, 0x00	; 0
    926a:	0e 94 6f 83 	call	0x106de	; 0x106de <eeprom_read_word>
    926e:	9c 01       	movw	r18, r24
    9270:	80 91 11 40 	lds	r24, 0x4011	; 0x804011 <g_ID_period_seconds>
    9274:	90 91 12 40 	lds	r25, 0x4012	; 0x804012 <g_ID_period_seconds+0x1>
    9278:	41 e0       	ldi	r20, 0x01	; 1
    927a:	28 17       	cp	r18, r24
    927c:	39 07       	cpc	r19, r25
    927e:	09 f4       	brne	.+2      	; 0x9282 <_ZN13EepromManager13saveAllEEPROMEv+0x30e>
    9280:	40 e0       	ldi	r20, 0x00	; 0
    9282:	44 23       	and	r20, r20
    9284:	39 f0       	breq	.+14     	; 0x9294 <_ZN13EepromManager13saveAllEEPROMEv+0x320>
	{
		updateEEPROMVar(ID_Period_Seconds, (void*)&g_ID_period_seconds);
    9286:	8b 81       	ldd	r24, Y+3	; 0x03
    9288:	9c 81       	ldd	r25, Y+4	; 0x04
    928a:	41 e1       	ldi	r20, 0x11	; 17
    928c:	50 e4       	ldi	r21, 0x40	; 64
    928e:	6f e4       	ldi	r22, 0x4F	; 79
    9290:	0e 94 52 46 	call	0x8ca4	; 0x8ca4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
	
	if(g_intra_cycle_delay_time != (int16_t)eeprom_read_word((const uint16_t *)&(EepromManager::ee_vars.intra_cycle_delay_time)))
    9294:	81 e5       	ldi	r24, 0x51	; 81
    9296:	90 e0       	ldi	r25, 0x00	; 0
    9298:	0e 94 6f 83 	call	0x106de	; 0x106de <eeprom_read_word>
    929c:	9c 01       	movw	r18, r24
    929e:	80 91 8a 47 	lds	r24, 0x478A	; 0x80478a <g_intra_cycle_delay_time>
    92a2:	90 91 8b 47 	lds	r25, 0x478B	; 0x80478b <g_intra_cycle_delay_time+0x1>
    92a6:	41 e0       	ldi	r20, 0x01	; 1
    92a8:	28 17       	cp	r18, r24
    92aa:	39 07       	cpc	r19, r25
    92ac:	09 f4       	brne	.+2      	; 0x92b0 <_ZN13EepromManager13saveAllEEPROMEv+0x33c>
    92ae:	40 e0       	ldi	r20, 0x00	; 0
    92b0:	44 23       	and	r20, r20
    92b2:	39 f0       	breq	.+14     	; 0x92c2 <_ZN13EepromManager13saveAllEEPROMEv+0x34e>
	{
		updateEEPROMVar(Intra_Cycle_Delay_Seconds, (void*)&g_intra_cycle_delay_time);
    92b4:	8b 81       	ldd	r24, Y+3	; 0x03
    92b6:	9c 81       	ldd	r25, Y+4	; 0x04
    92b8:	4a e8       	ldi	r20, 0x8A	; 138
    92ba:	57 e4       	ldi	r21, 0x47	; 71
    92bc:	61 e5       	ldi	r22, 0x51	; 81
    92be:	0e 94 52 46 	call	0x8ca4	; 0x8ca4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}	
}
    92c2:	00 00       	nop
    92c4:	24 96       	adiw	r28, 0x04	; 4
    92c6:	cd bf       	out	0x3d, r28	; 61
    92c8:	de bf       	out	0x3e, r29	; 62
    92ca:	df 91       	pop	r29
    92cc:	cf 91       	pop	r28
    92ce:	1f 91       	pop	r17
    92d0:	0f 91       	pop	r16
    92d2:	08 95       	ret

000092d4 <_ZN13EepromManager11readNonVolsEv>:


bool EepromManager::readNonVols(void)
{
    92d4:	cf 93       	push	r28
    92d6:	df 93       	push	r29
    92d8:	cd b7       	in	r28, 0x3d	; 61
    92da:	de b7       	in	r29, 0x3e	; 62
    92dc:	ec 97       	sbiw	r28, 0x3c	; 60
    92de:	cd bf       	out	0x3d, r28	; 61
    92e0:	de bf       	out	0x3e, r29	; 62
    92e2:	8b af       	std	Y+59, r24	; 0x3b
    92e4:	9c af       	std	Y+60, r25	; 0x3c
	bool failure = true;
    92e6:	81 e0       	ldi	r24, 0x01	; 1
    92e8:	89 83       	std	Y+1, r24	; 0x01
	uint16_t i;
	uint16_t initialization_flag = eeprom_read_word(0);
    92ea:	80 e0       	ldi	r24, 0x00	; 0
    92ec:	90 e0       	ldi	r25, 0x00	; 0
    92ee:	0e 94 6f 83 	call	0x106de	; 0x106de <eeprom_read_word>
    92f2:	8c 83       	std	Y+4, r24	; 0x04
    92f4:	9d 83       	std	Y+5, r25	; 0x05

	if(initialization_flag == EEPROM_INITIALIZED_FLAG)  /* EEPROM is up to date */
    92f6:	8c 81       	ldd	r24, Y+4	; 0x04
    92f8:	9d 81       	ldd	r25, Y+5	; 0x05
    92fa:	8e 3c       	cpi	r24, 0xCE	; 206
    92fc:	91 05       	cpc	r25, r1
    92fe:	09 f0       	breq	.+2      	; 0x9302 <_ZN13EepromManager11readNonVolsEv+0x2e>
    9300:	2e c2       	rjmp	.+1116   	; 0x975e <_ZN13EepromManager11readNonVolsEv+0x48a>
	{
		g_id_codespeed = CLAMP(MIN_CODE_SPEED_WPM, eeprom_read_byte(&(EepromManager::ee_vars.id_codespeed)), MAX_CODE_SPEED_WPM);
    9302:	8d e3       	ldi	r24, 0x3D	; 61
    9304:	90 e0       	ldi	r25, 0x00	; 0
    9306:	0e 94 60 83 	call	0x106c0	; 0x106c0 <eeprom_read_byte>
    930a:	8e 83       	std	Y+6, r24	; 0x06
    930c:	85 e0       	ldi	r24, 0x05	; 5
    930e:	8f 83       	std	Y+7, r24	; 0x07
    9310:	84 e1       	ldi	r24, 0x14	; 20
    9312:	88 87       	std	Y+8, r24	; 0x08
    9314:	9e 81       	ldd	r25, Y+6	; 0x06
    9316:	88 85       	ldd	r24, Y+8	; 0x08
    9318:	89 17       	cp	r24, r25
    931a:	40 f0       	brcs	.+16     	; 0x932c <_ZN13EepromManager11readNonVolsEv+0x58>
    931c:	9e 81       	ldd	r25, Y+6	; 0x06
    931e:	8f 81       	ldd	r24, Y+7	; 0x07
    9320:	98 17       	cp	r25, r24
    9322:	10 f4       	brcc	.+4      	; 0x9328 <_ZN13EepromManager11readNonVolsEv+0x54>
    9324:	8f 81       	ldd	r24, Y+7	; 0x07
    9326:	03 c0       	rjmp	.+6      	; 0x932e <_ZN13EepromManager11readNonVolsEv+0x5a>
    9328:	8e 81       	ldd	r24, Y+6	; 0x06
    932a:	01 c0       	rjmp	.+2      	; 0x932e <_ZN13EepromManager11readNonVolsEv+0x5a>
    932c:	88 85       	ldd	r24, Y+8	; 0x08
    932e:	80 93 0b 40 	sts	0x400B, r24	; 0x80400b <g_id_codespeed>
		g_fox = CLAMP(BEACON, (Fox_t)eeprom_read_byte(&(EepromManager::ee_vars.fox_setting)), SPRINT_F5);
    9332:	8e e3       	ldi	r24, 0x3E	; 62
    9334:	90 e0       	ldi	r25, 0x00	; 0
    9336:	0e 94 60 83 	call	0x106c0	; 0x106c0 <eeprom_read_byte>
    933a:	89 87       	std	Y+9, r24	; 0x09
    933c:	1a 86       	std	Y+10, r1	; 0x0a
    933e:	81 e1       	ldi	r24, 0x11	; 17
    9340:	8b 87       	std	Y+11, r24	; 0x0b
    9342:	99 85       	ldd	r25, Y+9	; 0x09
    9344:	8b 85       	ldd	r24, Y+11	; 0x0b
    9346:	89 17       	cp	r24, r25
    9348:	40 f0       	brcs	.+16     	; 0x935a <_ZN13EepromManager11readNonVolsEv+0x86>
    934a:	99 85       	ldd	r25, Y+9	; 0x09
    934c:	8a 85       	ldd	r24, Y+10	; 0x0a
    934e:	98 17       	cp	r25, r24
    9350:	10 f4       	brcc	.+4      	; 0x9356 <_ZN13EepromManager11readNonVolsEv+0x82>
    9352:	8a 85       	ldd	r24, Y+10	; 0x0a
    9354:	03 c0       	rjmp	.+6      	; 0x935c <_ZN13EepromManager11readNonVolsEv+0x88>
    9356:	89 85       	ldd	r24, Y+9	; 0x09
    9358:	01 c0       	rjmp	.+2      	; 0x935c <_ZN13EepromManager11readNonVolsEv+0x88>
    935a:	8b 85       	ldd	r24, Y+11	; 0x0b
    935c:	80 93 22 40 	sts	0x4022, r24	; 0x804022 <g_fox>
		g_event_start_epoch = eeprom_read_dword(&(EepromManager::ee_vars.event_start_epoch));
    9360:	82 e0       	ldi	r24, 0x02	; 2
    9362:	90 e0       	ldi	r25, 0x00	; 0
    9364:	0e 94 68 83 	call	0x106d0	; 0x106d0 <eeprom_read_dword>
    9368:	dc 01       	movw	r26, r24
    936a:	cb 01       	movw	r24, r22
    936c:	80 93 8c 47 	sts	0x478C, r24	; 0x80478c <g_event_start_epoch>
    9370:	90 93 8d 47 	sts	0x478D, r25	; 0x80478d <g_event_start_epoch+0x1>
    9374:	a0 93 8e 47 	sts	0x478E, r26	; 0x80478e <g_event_start_epoch+0x2>
    9378:	b0 93 8f 47 	sts	0x478F, r27	; 0x80478f <g_event_start_epoch+0x3>
		g_event_finish_epoch = eeprom_read_dword(&(EepromManager::ee_vars.event_finish_epoch));
    937c:	86 e0       	ldi	r24, 0x06	; 6
    937e:	90 e0       	ldi	r25, 0x00	; 0
    9380:	0e 94 68 83 	call	0x106d0	; 0x106d0 <eeprom_read_dword>
    9384:	dc 01       	movw	r26, r24
    9386:	cb 01       	movw	r24, r22
    9388:	80 93 90 47 	sts	0x4790, r24	; 0x804790 <g_event_finish_epoch>
    938c:	90 93 91 47 	sts	0x4791, r25	; 0x804791 <g_event_finish_epoch+0x1>
    9390:	a0 93 92 47 	sts	0x4792, r26	; 0x804792 <g_event_finish_epoch+0x2>
    9394:	b0 93 93 47 	sts	0x4793, r27	; 0x804793 <g_event_finish_epoch+0x3>
		g_utc_offset = (int8_t)eeprom_read_byte(&(EepromManager::ee_vars.utc_offset));
    9398:	8f e3       	ldi	r24, 0x3F	; 63
    939a:	90 e0       	ldi	r25, 0x00	; 0
    939c:	0e 94 60 83 	call	0x106c0	; 0x106c0 <eeprom_read_byte>
    93a0:	80 93 ac 47 	sts	0x47AC, r24	; 0x8047ac <g_utc_offset>

		for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    93a4:	1a 82       	std	Y+2, r1	; 0x02
    93a6:	1b 82       	std	Y+3, r1	; 0x03
    93a8:	8a 81       	ldd	r24, Y+2	; 0x02
    93aa:	9b 81       	ldd	r25, Y+3	; 0x03
    93ac:	44 97       	sbiw	r24, 0x14	; 20
    93ae:	e8 f4       	brcc	.+58     	; 0x93ea <_ZN13EepromManager11readNonVolsEv+0x116>
		{
			g_messages_text[STATION_ID][i] = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.stationID_text[i])));
    93b0:	8a 81       	ldd	r24, Y+2	; 0x02
    93b2:	9b 81       	ldd	r25, Y+3	; 0x03
    93b4:	0a 96       	adiw	r24, 0x0a	; 10
    93b6:	80 50       	subi	r24, 0x00	; 0
    93b8:	90 40       	sbci	r25, 0x00	; 0
    93ba:	0e 94 60 83 	call	0x106c0	; 0x106c0 <eeprom_read_byte>
    93be:	28 2f       	mov	r18, r24
    93c0:	8a 81       	ldd	r24, Y+2	; 0x02
    93c2:	9b 81       	ldd	r25, Y+3	; 0x03
    93c4:	8d 58       	subi	r24, 0x8D	; 141
    93c6:	98 4b       	sbci	r25, 0xB8	; 184
    93c8:	fc 01       	movw	r30, r24
    93ca:	20 83       	st	Z, r18
			if(!g_messages_text[STATION_ID][i])
    93cc:	8a 81       	ldd	r24, Y+2	; 0x02
    93ce:	9b 81       	ldd	r25, Y+3	; 0x03
    93d0:	8d 58       	subi	r24, 0x8D	; 141
    93d2:	98 4b       	sbci	r25, 0xB8	; 184
    93d4:	fc 01       	movw	r30, r24
    93d6:	80 81       	ld	r24, Z
    93d8:	88 23       	and	r24, r24
    93da:	31 f0       	breq	.+12     	; 0x93e8 <_ZN13EepromManager11readNonVolsEv+0x114>
		g_fox = CLAMP(BEACON, (Fox_t)eeprom_read_byte(&(EepromManager::ee_vars.fox_setting)), SPRINT_F5);
		g_event_start_epoch = eeprom_read_dword(&(EepromManager::ee_vars.event_start_epoch));
		g_event_finish_epoch = eeprom_read_dword(&(EepromManager::ee_vars.event_finish_epoch));
		g_utc_offset = (int8_t)eeprom_read_byte(&(EepromManager::ee_vars.utc_offset));

		for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    93dc:	8a 81       	ldd	r24, Y+2	; 0x02
    93de:	9b 81       	ldd	r25, Y+3	; 0x03
    93e0:	01 96       	adiw	r24, 0x01	; 1
    93e2:	8a 83       	std	Y+2, r24	; 0x02
    93e4:	9b 83       	std	Y+3, r25	; 0x03
    93e6:	e0 cf       	rjmp	.-64     	; 0x93a8 <_ZN13EepromManager11readNonVolsEv+0xd4>
		{
			g_messages_text[STATION_ID][i] = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.stationID_text[i])));
			if(!g_messages_text[STATION_ID][i])
			{
				break;
    93e8:	00 00       	nop
			}
		}

		for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    93ea:	1a 82       	std	Y+2, r1	; 0x02
    93ec:	1b 82       	std	Y+3, r1	; 0x03
    93ee:	8a 81       	ldd	r24, Y+2	; 0x02
    93f0:	9b 81       	ldd	r25, Y+3	; 0x03
    93f2:	44 97       	sbiw	r24, 0x14	; 20
    93f4:	e8 f4       	brcc	.+58     	; 0x9430 <_ZN13EepromManager11readNonVolsEv+0x15c>
		{
			g_messages_text[PATTERN_TEXT][i] = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.pattern_text[i])));
    93f6:	8a 81       	ldd	r24, Y+2	; 0x02
    93f8:	9b 81       	ldd	r25, Y+3	; 0x03
    93fa:	4f 96       	adiw	r24, 0x1f	; 31
    93fc:	80 50       	subi	r24, 0x00	; 0
    93fe:	90 40       	sbci	r25, 0x00	; 0
    9400:	0e 94 60 83 	call	0x106c0	; 0x106c0 <eeprom_read_byte>
    9404:	28 2f       	mov	r18, r24
    9406:	8a 81       	ldd	r24, Y+2	; 0x02
    9408:	9b 81       	ldd	r25, Y+3	; 0x03
    940a:	82 5a       	subi	r24, 0xA2	; 162
    940c:	98 4b       	sbci	r25, 0xB8	; 184
    940e:	fc 01       	movw	r30, r24
    9410:	20 83       	st	Z, r18
			if(!g_messages_text[PATTERN_TEXT][i])
    9412:	8a 81       	ldd	r24, Y+2	; 0x02
    9414:	9b 81       	ldd	r25, Y+3	; 0x03
    9416:	82 5a       	subi	r24, 0xA2	; 162
    9418:	98 4b       	sbci	r25, 0xB8	; 184
    941a:	fc 01       	movw	r30, r24
    941c:	80 81       	ld	r24, Z
    941e:	88 23       	and	r24, r24
    9420:	31 f0       	breq	.+12     	; 0x942e <_ZN13EepromManager11readNonVolsEv+0x15a>
			{
				break;
			}
		}

		for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    9422:	8a 81       	ldd	r24, Y+2	; 0x02
    9424:	9b 81       	ldd	r25, Y+3	; 0x03
    9426:	01 96       	adiw	r24, 0x01	; 1
    9428:	8a 83       	std	Y+2, r24	; 0x02
    942a:	9b 83       	std	Y+3, r25	; 0x03
    942c:	e0 cf       	rjmp	.-64     	; 0x93ee <_ZN13EepromManager11readNonVolsEv+0x11a>
		{
			g_messages_text[PATTERN_TEXT][i] = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.pattern_text[i])));
			if(!g_messages_text[PATTERN_TEXT][i])
			{
				break;
    942e:	00 00       	nop
			}
		}

		for(i = 0; i < MAX_UNLOCK_CODE_LENGTH; i++)
    9430:	1a 82       	std	Y+2, r1	; 0x02
    9432:	1b 82       	std	Y+3, r1	; 0x03
    9434:	8a 81       	ldd	r24, Y+2	; 0x02
    9436:	9b 81       	ldd	r25, Y+3	; 0x03
    9438:	08 97       	sbiw	r24, 0x08	; 8
    943a:	e8 f4       	brcc	.+58     	; 0x9476 <_ZN13EepromManager11readNonVolsEv+0x1a2>
		{
			g_unlockCode[i] = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.unlockCode[i])));
    943c:	8a 81       	ldd	r24, Y+2	; 0x02
    943e:	9b 81       	ldd	r25, Y+3	; 0x03
    9440:	c4 96       	adiw	r24, 0x34	; 52
    9442:	80 50       	subi	r24, 0x00	; 0
    9444:	90 40       	sbci	r25, 0x00	; 0
    9446:	0e 94 60 83 	call	0x106c0	; 0x106c0 <eeprom_read_byte>
    944a:	28 2f       	mov	r18, r24
    944c:	8a 81       	ldd	r24, Y+2	; 0x02
    944e:	9b 81       	ldd	r25, Y+3	; 0x03
    9450:	83 55       	subi	r24, 0x53	; 83
    9452:	98 4b       	sbci	r25, 0xB8	; 184
    9454:	fc 01       	movw	r30, r24
    9456:	20 83       	st	Z, r18
			if(!g_unlockCode[i])
    9458:	8a 81       	ldd	r24, Y+2	; 0x02
    945a:	9b 81       	ldd	r25, Y+3	; 0x03
    945c:	83 55       	subi	r24, 0x53	; 83
    945e:	98 4b       	sbci	r25, 0xB8	; 184
    9460:	fc 01       	movw	r30, r24
    9462:	80 81       	ld	r24, Z
    9464:	88 23       	and	r24, r24
    9466:	31 f0       	breq	.+12     	; 0x9474 <_ZN13EepromManager11readNonVolsEv+0x1a0>
			{
				break;
			}
		}

		for(i = 0; i < MAX_UNLOCK_CODE_LENGTH; i++)
    9468:	8a 81       	ldd	r24, Y+2	; 0x02
    946a:	9b 81       	ldd	r25, Y+3	; 0x03
    946c:	01 96       	adiw	r24, 0x01	; 1
    946e:	8a 83       	std	Y+2, r24	; 0x02
    9470:	9b 83       	std	Y+3, r25	; 0x03
    9472:	e0 cf       	rjmp	.-64     	; 0x9434 <_ZN13EepromManager11readNonVolsEv+0x160>
		{
			g_unlockCode[i] = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.unlockCode[i])));
			if(!g_unlockCode[i])
			{
				break;
    9474:	00 00       	nop
			}
		}
		
		g_80m_frequency = CLAMP(TX_MINIMUM_80M_FREQUENCY, eeprom_read_dword(&(EepromManager::ee_vars.frequency)), TX_MAXIMUM_80M_FREQUENCY);
    9476:	80 e4       	ldi	r24, 0x40	; 64
    9478:	90 e0       	ldi	r25, 0x00	; 0
    947a:	0e 94 68 83 	call	0x106d0	; 0x106d0 <eeprom_read_dword>
    947e:	dc 01       	movw	r26, r24
    9480:	cb 01       	movw	r24, r22
    9482:	8c 87       	std	Y+12, r24	; 0x0c
    9484:	9d 87       	std	Y+13, r25	; 0x0d
    9486:	ae 87       	std	Y+14, r26	; 0x0e
    9488:	bf 87       	std	Y+15, r27	; 0x0f
    948a:	80 ee       	ldi	r24, 0xE0	; 224
    948c:	97 e6       	ldi	r25, 0x67	; 103
    948e:	a5 e3       	ldi	r26, 0x35	; 53
    9490:	b0 e0       	ldi	r27, 0x00	; 0
    9492:	88 8b       	std	Y+16, r24	; 0x10
    9494:	99 8b       	std	Y+17, r25	; 0x11
    9496:	aa 8b       	std	Y+18, r26	; 0x12
    9498:	bb 8b       	std	Y+19, r27	; 0x13
    949a:	80 e0       	ldi	r24, 0x00	; 0
    949c:	99 e0       	ldi	r25, 0x09	; 9
    949e:	ad e3       	ldi	r26, 0x3D	; 61
    94a0:	b0 e0       	ldi	r27, 0x00	; 0
    94a2:	8c 8b       	std	Y+20, r24	; 0x14
    94a4:	9d 8b       	std	Y+21, r25	; 0x15
    94a6:	ae 8b       	std	Y+22, r26	; 0x16
    94a8:	bf 8b       	std	Y+23, r27	; 0x17
    94aa:	2c 85       	ldd	r18, Y+12	; 0x0c
    94ac:	3d 85       	ldd	r19, Y+13	; 0x0d
    94ae:	4e 85       	ldd	r20, Y+14	; 0x0e
    94b0:	5f 85       	ldd	r21, Y+15	; 0x0f
    94b2:	8c 89       	ldd	r24, Y+20	; 0x14
    94b4:	9d 89       	ldd	r25, Y+21	; 0x15
    94b6:	ae 89       	ldd	r26, Y+22	; 0x16
    94b8:	bf 89       	ldd	r27, Y+23	; 0x17
    94ba:	82 17       	cp	r24, r18
    94bc:	93 07       	cpc	r25, r19
    94be:	a4 07       	cpc	r26, r20
    94c0:	b5 07       	cpc	r27, r21
    94c2:	b8 f0       	brcs	.+46     	; 0x94f2 <_ZN13EepromManager11readNonVolsEv+0x21e>
    94c4:	2c 85       	ldd	r18, Y+12	; 0x0c
    94c6:	3d 85       	ldd	r19, Y+13	; 0x0d
    94c8:	4e 85       	ldd	r20, Y+14	; 0x0e
    94ca:	5f 85       	ldd	r21, Y+15	; 0x0f
    94cc:	88 89       	ldd	r24, Y+16	; 0x10
    94ce:	99 89       	ldd	r25, Y+17	; 0x11
    94d0:	aa 89       	ldd	r26, Y+18	; 0x12
    94d2:	bb 89       	ldd	r27, Y+19	; 0x13
    94d4:	28 17       	cp	r18, r24
    94d6:	39 07       	cpc	r19, r25
    94d8:	4a 07       	cpc	r20, r26
    94da:	5b 07       	cpc	r21, r27
    94dc:	28 f4       	brcc	.+10     	; 0x94e8 <_ZN13EepromManager11readNonVolsEv+0x214>
    94de:	88 89       	ldd	r24, Y+16	; 0x10
    94e0:	99 89       	ldd	r25, Y+17	; 0x11
    94e2:	aa 89       	ldd	r26, Y+18	; 0x12
    94e4:	bb 89       	ldd	r27, Y+19	; 0x13
    94e6:	09 c0       	rjmp	.+18     	; 0x94fa <_ZN13EepromManager11readNonVolsEv+0x226>
    94e8:	8c 85       	ldd	r24, Y+12	; 0x0c
    94ea:	9d 85       	ldd	r25, Y+13	; 0x0d
    94ec:	ae 85       	ldd	r26, Y+14	; 0x0e
    94ee:	bf 85       	ldd	r27, Y+15	; 0x0f
    94f0:	04 c0       	rjmp	.+8      	; 0x94fa <_ZN13EepromManager11readNonVolsEv+0x226>
    94f2:	8c 89       	ldd	r24, Y+20	; 0x14
    94f4:	9d 89       	ldd	r25, Y+21	; 0x15
    94f6:	ae 89       	ldd	r26, Y+22	; 0x16
    94f8:	bf 89       	ldd	r27, Y+23	; 0x17
    94fa:	80 93 36 40 	sts	0x4036, r24	; 0x804036 <g_80m_frequency>
    94fe:	90 93 37 40 	sts	0x4037, r25	; 0x804037 <g_80m_frequency+0x1>
    9502:	a0 93 38 40 	sts	0x4038, r26	; 0x804038 <g_80m_frequency+0x2>
    9506:	b0 93 39 40 	sts	0x4039, r27	; 0x804039 <g_80m_frequency+0x3>
		g_rtty_offset =eeprom_read_dword(&(EepromManager::ee_vars.rtty_offset));
    950a:	84 e4       	ldi	r24, 0x44	; 68
    950c:	90 e0       	ldi	r25, 0x00	; 0
    950e:	0e 94 68 83 	call	0x106d0	; 0x106d0 <eeprom_read_dword>
    9512:	dc 01       	movw	r26, r24
    9514:	cb 01       	movw	r24, r22
    9516:	80 93 3c 40 	sts	0x403C, r24	; 0x80403c <g_rtty_offset>
    951a:	90 93 3d 40 	sts	0x403D, r25	; 0x80403d <g_rtty_offset+0x1>
    951e:	a0 93 3e 40 	sts	0x403E, r26	; 0x80403e <g_rtty_offset+0x2>
    9522:	b0 93 3f 40 	sts	0x403F, r27	; 0x80403f <g_rtty_offset+0x3>
		g_80m_power_level_mW = CLAMP(MIN_RF_POWER_MW, eeprom_read_word(&(EepromManager::ee_vars.rf_power)), MAX_TX_POWER_80M_MW);
    9526:	88 e4       	ldi	r24, 0x48	; 72
    9528:	90 e0       	ldi	r25, 0x00	; 0
    952a:	0e 94 6f 83 	call	0x106de	; 0x106de <eeprom_read_word>
    952e:	88 8f       	std	Y+24, r24	; 0x18
    9530:	99 8f       	std	Y+25, r25	; 0x19
    9532:	1a 8e       	std	Y+26, r1	; 0x1a
    9534:	1b 8e       	std	Y+27, r1	; 0x1b
    9536:	88 e8       	ldi	r24, 0x88	; 136
    9538:	93 e1       	ldi	r25, 0x13	; 19
    953a:	8c 8f       	std	Y+28, r24	; 0x1c
    953c:	9d 8f       	std	Y+29, r25	; 0x1d
    953e:	28 8d       	ldd	r18, Y+24	; 0x18
    9540:	39 8d       	ldd	r19, Y+25	; 0x19
    9542:	8c 8d       	ldd	r24, Y+28	; 0x1c
    9544:	9d 8d       	ldd	r25, Y+29	; 0x1d
    9546:	82 17       	cp	r24, r18
    9548:	93 07       	cpc	r25, r19
    954a:	68 f0       	brcs	.+26     	; 0x9566 <_ZN13EepromManager11readNonVolsEv+0x292>
    954c:	28 8d       	ldd	r18, Y+24	; 0x18
    954e:	39 8d       	ldd	r19, Y+25	; 0x19
    9550:	8a 8d       	ldd	r24, Y+26	; 0x1a
    9552:	9b 8d       	ldd	r25, Y+27	; 0x1b
    9554:	28 17       	cp	r18, r24
    9556:	39 07       	cpc	r19, r25
    9558:	18 f4       	brcc	.+6      	; 0x9560 <_ZN13EepromManager11readNonVolsEv+0x28c>
    955a:	8a 8d       	ldd	r24, Y+26	; 0x1a
    955c:	9b 8d       	ldd	r25, Y+27	; 0x1b
    955e:	05 c0       	rjmp	.+10     	; 0x956a <_ZN13EepromManager11readNonVolsEv+0x296>
    9560:	88 8d       	ldd	r24, Y+24	; 0x18
    9562:	99 8d       	ldd	r25, Y+25	; 0x19
    9564:	02 c0       	rjmp	.+4      	; 0x956a <_ZN13EepromManager11readNonVolsEv+0x296>
    9566:	8c 8d       	ldd	r24, Y+28	; 0x1c
    9568:	9d 8d       	ldd	r25, Y+29	; 0x1d
    956a:	80 93 3a 40 	sts	0x403A, r24	; 0x80403a <g_80m_power_level_mW>
    956e:	90 93 3b 40 	sts	0x403B, r25	; 0x80403b <g_80m_power_level_mW+0x1>

		/* Perform sanity checks */
		if(g_event_start_epoch && (g_event_finish_epoch <= g_event_start_epoch))
    9572:	80 91 8c 47 	lds	r24, 0x478C	; 0x80478c <g_event_start_epoch>
    9576:	90 91 8d 47 	lds	r25, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    957a:	a0 91 8e 47 	lds	r26, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    957e:	b0 91 8f 47 	lds	r27, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    9582:	89 2b       	or	r24, r25
    9584:	8a 2b       	or	r24, r26
    9586:	8b 2b       	or	r24, r27
    9588:	b9 f0       	breq	.+46     	; 0x95b8 <_ZN13EepromManager11readNonVolsEv+0x2e4>
    958a:	20 91 90 47 	lds	r18, 0x4790	; 0x804790 <g_event_finish_epoch>
    958e:	30 91 91 47 	lds	r19, 0x4791	; 0x804791 <g_event_finish_epoch+0x1>
    9592:	40 91 92 47 	lds	r20, 0x4792	; 0x804792 <g_event_finish_epoch+0x2>
    9596:	50 91 93 47 	lds	r21, 0x4793	; 0x804793 <g_event_finish_epoch+0x3>
    959a:	80 91 8c 47 	lds	r24, 0x478C	; 0x80478c <g_event_start_epoch>
    959e:	90 91 8d 47 	lds	r25, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    95a2:	a0 91 8e 47 	lds	r26, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    95a6:	b0 91 8f 47 	lds	r27, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    95aa:	82 17       	cp	r24, r18
    95ac:	93 07       	cpc	r25, r19
    95ae:	a4 07       	cpc	r26, r20
    95b0:	b5 07       	cpc	r27, r21
    95b2:	10 f0       	brcs	.+4      	; 0x95b8 <_ZN13EepromManager11readNonVolsEv+0x2e4>
    95b4:	81 e0       	ldi	r24, 0x01	; 1
    95b6:	01 c0       	rjmp	.+2      	; 0x95ba <_ZN13EepromManager11readNonVolsEv+0x2e6>
    95b8:	80 e0       	ldi	r24, 0x00	; 0
    95ba:	88 23       	and	r24, r24
    95bc:	a1 f0       	breq	.+40     	; 0x95e6 <_ZN13EepromManager11readNonVolsEv+0x312>
		{
			g_event_finish_epoch = g_event_start_epoch + SECONDS_24H;
    95be:	80 91 8c 47 	lds	r24, 0x478C	; 0x80478c <g_event_start_epoch>
    95c2:	90 91 8d 47 	lds	r25, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    95c6:	a0 91 8e 47 	lds	r26, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    95ca:	b0 91 8f 47 	lds	r27, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    95ce:	80 58       	subi	r24, 0x80	; 128
    95d0:	9e 4a       	sbci	r25, 0xAE	; 174
    95d2:	ae 4f       	sbci	r26, 0xFE	; 254
    95d4:	bf 4f       	sbci	r27, 0xFF	; 255
    95d6:	80 93 90 47 	sts	0x4790, r24	; 0x804790 <g_event_finish_epoch>
    95da:	90 93 91 47 	sts	0x4791, r25	; 0x804791 <g_event_finish_epoch+0x1>
    95de:	a0 93 92 47 	sts	0x4792, r26	; 0x804792 <g_event_finish_epoch+0x2>
    95e2:	b0 93 93 47 	sts	0x4793, r27	; 0x804793 <g_event_finish_epoch+0x3>
		}
		
		g_pattern_codespeed = CLAMP(5, eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.pattern_codespeed))), 20);
    95e6:	8a e4       	ldi	r24, 0x4A	; 74
    95e8:	90 e0       	ldi	r25, 0x00	; 0
    95ea:	0e 94 60 83 	call	0x106c0	; 0x106c0 <eeprom_read_byte>
    95ee:	8e 8f       	std	Y+30, r24	; 0x1e
    95f0:	85 e0       	ldi	r24, 0x05	; 5
    95f2:	90 e0       	ldi	r25, 0x00	; 0
    95f4:	8f 8f       	std	Y+31, r24	; 0x1f
    95f6:	98 a3       	std	Y+32, r25	; 0x20
    95f8:	84 e1       	ldi	r24, 0x14	; 20
    95fa:	90 e0       	ldi	r25, 0x00	; 0
    95fc:	89 a3       	std	Y+33, r24	; 0x21
    95fe:	9a a3       	std	Y+34, r25	; 0x22
    9600:	8e 8d       	ldd	r24, Y+30	; 0x1e
    9602:	28 2f       	mov	r18, r24
    9604:	30 e0       	ldi	r19, 0x00	; 0
    9606:	89 a1       	ldd	r24, Y+33	; 0x21
    9608:	9a a1       	ldd	r25, Y+34	; 0x22
    960a:	82 17       	cp	r24, r18
    960c:	93 07       	cpc	r25, r19
    960e:	54 f0       	brlt	.+20     	; 0x9624 <_ZN13EepromManager11readNonVolsEv+0x350>
    9610:	8e 8d       	ldd	r24, Y+30	; 0x1e
    9612:	88 2f       	mov	r24, r24
    9614:	90 e0       	ldi	r25, 0x00	; 0
    9616:	2f 8d       	ldd	r18, Y+31	; 0x1f
    9618:	38 a1       	ldd	r19, Y+32	; 0x20
    961a:	82 17       	cp	r24, r18
    961c:	93 07       	cpc	r25, r19
    961e:	24 f4       	brge	.+8      	; 0x9628 <_ZN13EepromManager11readNonVolsEv+0x354>
    9620:	c9 01       	movw	r24, r18
    9622:	02 c0       	rjmp	.+4      	; 0x9628 <_ZN13EepromManager11readNonVolsEv+0x354>
    9624:	89 a1       	ldd	r24, Y+33	; 0x21
    9626:	9a a1       	ldd	r25, Y+34	; 0x22
    9628:	80 93 0c 40 	sts	0x400C, r24	; 0x80400c <g_pattern_codespeed>
		g_off_air_seconds = CLAMP(0, (int16_t)eeprom_read_word((const uint16_t*)&(EepromManager::ee_vars.off_air_seconds)), 3600);
    962c:	8b e4       	ldi	r24, 0x4B	; 75
    962e:	90 e0       	ldi	r25, 0x00	; 0
    9630:	0e 94 6f 83 	call	0x106de	; 0x106de <eeprom_read_word>
    9634:	8b a3       	std	Y+35, r24	; 0x23
    9636:	9c a3       	std	Y+36, r25	; 0x24
    9638:	1d a2       	std	Y+37, r1	; 0x25
    963a:	1e a2       	std	Y+38, r1	; 0x26
    963c:	80 e1       	ldi	r24, 0x10	; 16
    963e:	9e e0       	ldi	r25, 0x0E	; 14
    9640:	8f a3       	std	Y+39, r24	; 0x27
    9642:	98 a7       	std	Y+40, r25	; 0x28
    9644:	2b a1       	ldd	r18, Y+35	; 0x23
    9646:	3c a1       	ldd	r19, Y+36	; 0x24
    9648:	8f a1       	ldd	r24, Y+39	; 0x27
    964a:	98 a5       	ldd	r25, Y+40	; 0x28
    964c:	82 17       	cp	r24, r18
    964e:	93 07       	cpc	r25, r19
    9650:	6c f0       	brlt	.+26     	; 0x966c <_ZN13EepromManager11readNonVolsEv+0x398>
    9652:	2b a1       	ldd	r18, Y+35	; 0x23
    9654:	3c a1       	ldd	r19, Y+36	; 0x24
    9656:	8d a1       	ldd	r24, Y+37	; 0x25
    9658:	9e a1       	ldd	r25, Y+38	; 0x26
    965a:	28 17       	cp	r18, r24
    965c:	39 07       	cpc	r19, r25
    965e:	1c f4       	brge	.+6      	; 0x9666 <_ZN13EepromManager11readNonVolsEv+0x392>
    9660:	8d a1       	ldd	r24, Y+37	; 0x25
    9662:	9e a1       	ldd	r25, Y+38	; 0x26
    9664:	05 c0       	rjmp	.+10     	; 0x9670 <_ZN13EepromManager11readNonVolsEv+0x39c>
    9666:	8b a1       	ldd	r24, Y+35	; 0x23
    9668:	9c a1       	ldd	r25, Y+36	; 0x24
    966a:	02 c0       	rjmp	.+4      	; 0x9670 <_ZN13EepromManager11readNonVolsEv+0x39c>
    966c:	8f a1       	ldd	r24, Y+39	; 0x27
    966e:	98 a5       	ldd	r25, Y+40	; 0x28
    9670:	80 93 0f 40 	sts	0x400F, r24	; 0x80400f <g_off_air_seconds>
    9674:	90 93 10 40 	sts	0x4010, r25	; 0x804010 <g_off_air_seconds+0x1>
		g_on_air_seconds = CLAMP(0, (int16_t)eeprom_read_word((const uint16_t*)&(EepromManager::ee_vars.on_air_seconds)), 3600);
    9678:	8d e4       	ldi	r24, 0x4D	; 77
    967a:	90 e0       	ldi	r25, 0x00	; 0
    967c:	0e 94 6f 83 	call	0x106de	; 0x106de <eeprom_read_word>
    9680:	89 a7       	std	Y+41, r24	; 0x29
    9682:	9a a7       	std	Y+42, r25	; 0x2a
    9684:	1b a6       	std	Y+43, r1	; 0x2b
    9686:	1c a6       	std	Y+44, r1	; 0x2c
    9688:	80 e1       	ldi	r24, 0x10	; 16
    968a:	9e e0       	ldi	r25, 0x0E	; 14
    968c:	8d a7       	std	Y+45, r24	; 0x2d
    968e:	9e a7       	std	Y+46, r25	; 0x2e
    9690:	29 a5       	ldd	r18, Y+41	; 0x29
    9692:	3a a5       	ldd	r19, Y+42	; 0x2a
    9694:	8d a5       	ldd	r24, Y+45	; 0x2d
    9696:	9e a5       	ldd	r25, Y+46	; 0x2e
    9698:	82 17       	cp	r24, r18
    969a:	93 07       	cpc	r25, r19
    969c:	6c f0       	brlt	.+26     	; 0x96b8 <_ZN13EepromManager11readNonVolsEv+0x3e4>
    969e:	29 a5       	ldd	r18, Y+41	; 0x29
    96a0:	3a a5       	ldd	r19, Y+42	; 0x2a
    96a2:	8b a5       	ldd	r24, Y+43	; 0x2b
    96a4:	9c a5       	ldd	r25, Y+44	; 0x2c
    96a6:	28 17       	cp	r18, r24
    96a8:	39 07       	cpc	r19, r25
    96aa:	1c f4       	brge	.+6      	; 0x96b2 <_ZN13EepromManager11readNonVolsEv+0x3de>
    96ac:	8b a5       	ldd	r24, Y+43	; 0x2b
    96ae:	9c a5       	ldd	r25, Y+44	; 0x2c
    96b0:	05 c0       	rjmp	.+10     	; 0x96bc <_ZN13EepromManager11readNonVolsEv+0x3e8>
    96b2:	89 a5       	ldd	r24, Y+41	; 0x29
    96b4:	9a a5       	ldd	r25, Y+42	; 0x2a
    96b6:	02 c0       	rjmp	.+4      	; 0x96bc <_ZN13EepromManager11readNonVolsEv+0x3e8>
    96b8:	8d a5       	ldd	r24, Y+45	; 0x2d
    96ba:	9e a5       	ldd	r25, Y+46	; 0x2e
    96bc:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_on_air_seconds>
    96c0:	90 93 0e 40 	sts	0x400E, r25	; 0x80400e <g_on_air_seconds+0x1>
		g_ID_period_seconds = CLAMP(0, (int16_t)eeprom_read_word((const uint16_t*)&(EepromManager::ee_vars.ID_period_seconds)), 3600);
    96c4:	8f e4       	ldi	r24, 0x4F	; 79
    96c6:	90 e0       	ldi	r25, 0x00	; 0
    96c8:	0e 94 6f 83 	call	0x106de	; 0x106de <eeprom_read_word>
    96cc:	8f a7       	std	Y+47, r24	; 0x2f
    96ce:	98 ab       	std	Y+48, r25	; 0x30
    96d0:	19 aa       	std	Y+49, r1	; 0x31
    96d2:	1a aa       	std	Y+50, r1	; 0x32
    96d4:	80 e1       	ldi	r24, 0x10	; 16
    96d6:	9e e0       	ldi	r25, 0x0E	; 14
    96d8:	8b ab       	std	Y+51, r24	; 0x33
    96da:	9c ab       	std	Y+52, r25	; 0x34
    96dc:	2f a5       	ldd	r18, Y+47	; 0x2f
    96de:	38 a9       	ldd	r19, Y+48	; 0x30
    96e0:	8b a9       	ldd	r24, Y+51	; 0x33
    96e2:	9c a9       	ldd	r25, Y+52	; 0x34
    96e4:	82 17       	cp	r24, r18
    96e6:	93 07       	cpc	r25, r19
    96e8:	6c f0       	brlt	.+26     	; 0x9704 <_ZN13EepromManager11readNonVolsEv+0x430>
    96ea:	2f a5       	ldd	r18, Y+47	; 0x2f
    96ec:	38 a9       	ldd	r19, Y+48	; 0x30
    96ee:	89 a9       	ldd	r24, Y+49	; 0x31
    96f0:	9a a9       	ldd	r25, Y+50	; 0x32
    96f2:	28 17       	cp	r18, r24
    96f4:	39 07       	cpc	r19, r25
    96f6:	1c f4       	brge	.+6      	; 0x96fe <_ZN13EepromManager11readNonVolsEv+0x42a>
    96f8:	89 a9       	ldd	r24, Y+49	; 0x31
    96fa:	9a a9       	ldd	r25, Y+50	; 0x32
    96fc:	05 c0       	rjmp	.+10     	; 0x9708 <_ZN13EepromManager11readNonVolsEv+0x434>
    96fe:	8f a5       	ldd	r24, Y+47	; 0x2f
    9700:	98 a9       	ldd	r25, Y+48	; 0x30
    9702:	02 c0       	rjmp	.+4      	; 0x9708 <_ZN13EepromManager11readNonVolsEv+0x434>
    9704:	8b a9       	ldd	r24, Y+51	; 0x33
    9706:	9c a9       	ldd	r25, Y+52	; 0x34
    9708:	80 93 11 40 	sts	0x4011, r24	; 0x804011 <g_ID_period_seconds>
    970c:	90 93 12 40 	sts	0x4012, r25	; 0x804012 <g_ID_period_seconds+0x1>
		g_intra_cycle_delay_time = CLAMP(0, (int16_t)eeprom_read_word((const uint16_t*)&(EepromManager::ee_vars.intra_cycle_delay_time)), 3600);
    9710:	81 e5       	ldi	r24, 0x51	; 81
    9712:	90 e0       	ldi	r25, 0x00	; 0
    9714:	0e 94 6f 83 	call	0x106de	; 0x106de <eeprom_read_word>
    9718:	8d ab       	std	Y+53, r24	; 0x35
    971a:	9e ab       	std	Y+54, r25	; 0x36
    971c:	1f aa       	std	Y+55, r1	; 0x37
    971e:	18 ae       	std	Y+56, r1	; 0x38
    9720:	80 e1       	ldi	r24, 0x10	; 16
    9722:	9e e0       	ldi	r25, 0x0E	; 14
    9724:	89 af       	std	Y+57, r24	; 0x39
    9726:	9a af       	std	Y+58, r25	; 0x3a
    9728:	2d a9       	ldd	r18, Y+53	; 0x35
    972a:	3e a9       	ldd	r19, Y+54	; 0x36
    972c:	89 ad       	ldd	r24, Y+57	; 0x39
    972e:	9a ad       	ldd	r25, Y+58	; 0x3a
    9730:	82 17       	cp	r24, r18
    9732:	93 07       	cpc	r25, r19
    9734:	6c f0       	brlt	.+26     	; 0x9750 <_ZN13EepromManager11readNonVolsEv+0x47c>
    9736:	2d a9       	ldd	r18, Y+53	; 0x35
    9738:	3e a9       	ldd	r19, Y+54	; 0x36
    973a:	8f a9       	ldd	r24, Y+55	; 0x37
    973c:	98 ad       	ldd	r25, Y+56	; 0x38
    973e:	28 17       	cp	r18, r24
    9740:	39 07       	cpc	r19, r25
    9742:	1c f4       	brge	.+6      	; 0x974a <_ZN13EepromManager11readNonVolsEv+0x476>
    9744:	8f a9       	ldd	r24, Y+55	; 0x37
    9746:	98 ad       	ldd	r25, Y+56	; 0x38
    9748:	05 c0       	rjmp	.+10     	; 0x9754 <_ZN13EepromManager11readNonVolsEv+0x480>
    974a:	8d a9       	ldd	r24, Y+53	; 0x35
    974c:	9e a9       	ldd	r25, Y+54	; 0x36
    974e:	02 c0       	rjmp	.+4      	; 0x9754 <_ZN13EepromManager11readNonVolsEv+0x480>
    9750:	89 ad       	ldd	r24, Y+57	; 0x39
    9752:	9a ad       	ldd	r25, Y+58	; 0x3a
    9754:	80 93 8a 47 	sts	0x478A, r24	; 0x80478a <g_intra_cycle_delay_time>
    9758:	90 93 8b 47 	sts	0x478B, r25	; 0x80478b <g_intra_cycle_delay_time+0x1>

		failure = false;
    975c:	19 82       	std	Y+1, r1	; 0x01
	}

	return( failure);
    975e:	89 81       	ldd	r24, Y+1	; 0x01
}
    9760:	ec 96       	adiw	r28, 0x3c	; 60
    9762:	cd bf       	out	0x3d, r28	; 61
    9764:	de bf       	out	0x3e, r29	; 62
    9766:	df 91       	pop	r29
    9768:	cf 91       	pop	r28
    976a:	08 95       	ret

0000976c <_ZN13EepromManager20initializeEEPROMVarsEv>:

/*
 * Set volatile variables to their values stored in EEPROM
 */
	bool EepromManager::initializeEEPROMVars(void)
	{
    976c:	cf 93       	push	r28
    976e:	df 93       	push	r29
    9770:	cd b7       	in	r28, 0x3d	; 61
    9772:	de b7       	in	r29, 0x3e	; 62
    9774:	2b 97       	sbiw	r28, 0x0b	; 11
    9776:	cd bf       	out	0x3d, r28	; 61
    9778:	de bf       	out	0x3e, r29	; 62
    977a:	8a 87       	std	Y+10, r24	; 0x0a
    977c:	9b 87       	std	Y+11, r25	; 0x0b
		bool err = false;
    977e:	1f 82       	std	Y+7, r1	; 0x07
		uint16_t i, j;

		uint16_t initialization_flag = eeprom_read_word(0);
    9780:	80 e0       	ldi	r24, 0x00	; 0
    9782:	90 e0       	ldi	r25, 0x00	; 0
    9784:	0e 94 6f 83 	call	0x106de	; 0x106de <eeprom_read_word>
    9788:	88 87       	std	Y+8, r24	; 0x08
    978a:	99 87       	std	Y+9, r25	; 0x09

		if(initialization_flag != EEPROM_INITIALIZED_FLAG)
    978c:	88 85       	ldd	r24, Y+8	; 0x08
    978e:	99 85       	ldd	r25, Y+9	; 0x09
    9790:	8e 3c       	cpi	r24, 0xCE	; 206
    9792:	91 05       	cpc	r25, r1
    9794:	09 f4       	brne	.+2      	; 0x9798 <_ZN13EepromManager20initializeEEPROMVarsEv+0x2c>
    9796:	2a c1       	rjmp	.+596    	; 0x99ec <_ZN13EepromManager20initializeEEPROMVarsEv+0x280>
		{
			g_id_codespeed = EEPROM_ID_CODE_SPEED_DEFAULT;
    9798:	84 e1       	ldi	r24, 0x14	; 20
    979a:	80 93 0b 40 	sts	0x400B, r24	; 0x80400b <g_id_codespeed>
			avr_eeprom_write_byte(Id_codespeed, g_id_codespeed);
    979e:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    97a2:	68 2f       	mov	r22, r24
    97a4:	8d e3       	ldi	r24, 0x3D	; 61
    97a6:	90 e0       	ldi	r25, 0x00	; 0
    97a8:	0e 94 b6 45 	call	0x8b6c	; 0x8b6c <_Z21avr_eeprom_write_bytejh>

			g_fox = EEPROM_FOX_SETTING_DEFAULT;
    97ac:	81 e0       	ldi	r24, 0x01	; 1
    97ae:	80 93 22 40 	sts	0x4022, r24	; 0x804022 <g_fox>
			avr_eeprom_write_byte(Fox_setting, g_fox);
    97b2:	80 91 22 40 	lds	r24, 0x4022	; 0x804022 <g_fox>
    97b6:	68 2f       	mov	r22, r24
    97b8:	8e e3       	ldi	r24, 0x3E	; 62
    97ba:	90 e0       	ldi	r25, 0x00	; 0
    97bc:	0e 94 b6 45 	call	0x8b6c	; 0x8b6c <_Z21avr_eeprom_write_bytejh>

			g_event_start_epoch = EEPROM_START_EPOCH_DEFAULT;
    97c0:	10 92 8c 47 	sts	0x478C, r1	; 0x80478c <g_event_start_epoch>
    97c4:	10 92 8d 47 	sts	0x478D, r1	; 0x80478d <g_event_start_epoch+0x1>
    97c8:	10 92 8e 47 	sts	0x478E, r1	; 0x80478e <g_event_start_epoch+0x2>
    97cc:	10 92 8f 47 	sts	0x478F, r1	; 0x80478f <g_event_start_epoch+0x3>
			avr_eeprom_write_dword(Event_start_epoch, g_event_start_epoch);
    97d0:	80 91 8c 47 	lds	r24, 0x478C	; 0x80478c <g_event_start_epoch>
    97d4:	90 91 8d 47 	lds	r25, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    97d8:	a0 91 8e 47 	lds	r26, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    97dc:	b0 91 8f 47 	lds	r27, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    97e0:	ac 01       	movw	r20, r24
    97e2:	bd 01       	movw	r22, r26
    97e4:	82 e0       	ldi	r24, 0x02	; 2
    97e6:	90 e0       	ldi	r25, 0x00	; 0
    97e8:	0e 94 18 46 	call	0x8c30	; 0x8c30 <_Z22avr_eeprom_write_dwordjm>

			g_event_finish_epoch = EEPROM_FINISH_EPOCH_DEFAULT;
    97ec:	10 92 90 47 	sts	0x4790, r1	; 0x804790 <g_event_finish_epoch>
    97f0:	10 92 91 47 	sts	0x4791, r1	; 0x804791 <g_event_finish_epoch+0x1>
    97f4:	10 92 92 47 	sts	0x4792, r1	; 0x804792 <g_event_finish_epoch+0x2>
    97f8:	10 92 93 47 	sts	0x4793, r1	; 0x804793 <g_event_finish_epoch+0x3>
			avr_eeprom_write_dword(Event_finish_epoch, g_event_finish_epoch);
    97fc:	80 91 90 47 	lds	r24, 0x4790	; 0x804790 <g_event_finish_epoch>
    9800:	90 91 91 47 	lds	r25, 0x4791	; 0x804791 <g_event_finish_epoch+0x1>
    9804:	a0 91 92 47 	lds	r26, 0x4792	; 0x804792 <g_event_finish_epoch+0x2>
    9808:	b0 91 93 47 	lds	r27, 0x4793	; 0x804793 <g_event_finish_epoch+0x3>
    980c:	ac 01       	movw	r20, r24
    980e:	bd 01       	movw	r22, r26
    9810:	86 e0       	ldi	r24, 0x06	; 6
    9812:	90 e0       	ldi	r25, 0x00	; 0
    9814:	0e 94 18 46 	call	0x8c30	; 0x8c30 <_Z22avr_eeprom_write_dwordjm>

			g_utc_offset = EEPROM_UTC_OFFSET_DEFAULT;
    9818:	10 92 ac 47 	sts	0x47AC, r1	; 0x8047ac <g_utc_offset>
			avr_eeprom_write_byte(Utc_offset, (uint8_t)g_utc_offset);
    981c:	80 91 ac 47 	lds	r24, 0x47AC	; 0x8047ac <g_utc_offset>
    9820:	68 2f       	mov	r22, r24
    9822:	8f e3       	ldi	r24, 0x3F	; 63
    9824:	90 e0       	ldi	r25, 0x00	; 0
    9826:	0e 94 b6 45 	call	0x8b6c	; 0x8b6c <_Z21avr_eeprom_write_bytejh>

			g_messages_text[STATION_ID][0] = '\0';
    982a:	10 92 73 47 	sts	0x4773, r1	; 0x804773 <g_messages_text+0x15>
			avr_eeprom_write_byte(StationID_text, 0);
    982e:	60 e0       	ldi	r22, 0x00	; 0
    9830:	8a e0       	ldi	r24, 0x0A	; 10
    9832:	90 e0       	ldi	r25, 0x00	; 0
    9834:	0e 94 b6 45 	call	0x8b6c	; 0x8b6c <_Z21avr_eeprom_write_bytejh>

			g_messages_text[PATTERN_TEXT][0] = 'M';
    9838:	8d e4       	ldi	r24, 0x4D	; 77
    983a:	80 93 5e 47 	sts	0x475E, r24	; 0x80475e <g_messages_text>
			g_messages_text[PATTERN_TEXT][0] = 'O';
    983e:	8f e4       	ldi	r24, 0x4F	; 79
    9840:	80 93 5e 47 	sts	0x475E, r24	; 0x80475e <g_messages_text>
			g_messages_text[PATTERN_TEXT][0] = '\0';
    9844:	10 92 5e 47 	sts	0x475E, r1	; 0x80475e <g_messages_text>
			avr_eeprom_write_byte(Pattern_text, 0);
    9848:	60 e0       	ldi	r22, 0x00	; 0
    984a:	8f e1       	ldi	r24, 0x1F	; 31
    984c:	90 e0       	ldi	r25, 0x00	; 0
    984e:	0e 94 b6 45 	call	0x8b6c	; 0x8b6c <_Z21avr_eeprom_write_bytejh>

			uint8_t *v = (uint8_t*)EEPROM_DTMF_UNLOCK_CODE_DEFAULT;
    9852:	8b eb       	ldi	r24, 0xBB	; 187
    9854:	94 e4       	ldi	r25, 0x44	; 68
    9856:	8d 83       	std	Y+5, r24	; 0x05
    9858:	9e 83       	std	Y+6, r25	; 0x06
			i = UnlockCode;
    985a:	84 e3       	ldi	r24, 0x34	; 52
    985c:	90 e0       	ldi	r25, 0x00	; 0
    985e:	89 83       	std	Y+1, r24	; 0x01
    9860:	9a 83       	std	Y+2, r25	; 0x02
			for(j = 0; j < strlen(EEPROM_DTMF_UNLOCK_CODE_DEFAULT); j++)
    9862:	1b 82       	std	Y+3, r1	; 0x03
    9864:	1c 82       	std	Y+4, r1	; 0x04
    9866:	8b 81       	ldd	r24, Y+3	; 0x03
    9868:	9c 81       	ldd	r25, Y+4	; 0x04
    986a:	04 97       	sbiw	r24, 0x04	; 4
    986c:	18 f5       	brcc	.+70     	; 0x98b4 <_ZN13EepromManager20initializeEEPROMVarsEv+0x148>
			{
				g_unlockCode[j] = *v;
    986e:	8d 81       	ldd	r24, Y+5	; 0x05
    9870:	9e 81       	ldd	r25, Y+6	; 0x06
    9872:	fc 01       	movw	r30, r24
    9874:	20 81       	ld	r18, Z
    9876:	8b 81       	ldd	r24, Y+3	; 0x03
    9878:	9c 81       	ldd	r25, Y+4	; 0x04
    987a:	83 55       	subi	r24, 0x53	; 83
    987c:	98 4b       	sbci	r25, 0xB8	; 184
    987e:	fc 01       	movw	r30, r24
    9880:	20 83       	st	Z, r18
				avr_eeprom_write_byte(i++, *v++);
    9882:	8d 81       	ldd	r24, Y+5	; 0x05
    9884:	9e 81       	ldd	r25, Y+6	; 0x06
    9886:	9c 01       	movw	r18, r24
    9888:	2f 5f       	subi	r18, 0xFF	; 255
    988a:	3f 4f       	sbci	r19, 0xFF	; 255
    988c:	2d 83       	std	Y+5, r18	; 0x05
    988e:	3e 83       	std	Y+6, r19	; 0x06
    9890:	fc 01       	movw	r30, r24
    9892:	40 81       	ld	r20, Z
    9894:	89 81       	ldd	r24, Y+1	; 0x01
    9896:	9a 81       	ldd	r25, Y+2	; 0x02
    9898:	9c 01       	movw	r18, r24
    989a:	2f 5f       	subi	r18, 0xFF	; 255
    989c:	3f 4f       	sbci	r19, 0xFF	; 255
    989e:	29 83       	std	Y+1, r18	; 0x01
    98a0:	3a 83       	std	Y+2, r19	; 0x02
    98a2:	64 2f       	mov	r22, r20
    98a4:	0e 94 b6 45 	call	0x8b6c	; 0x8b6c <_Z21avr_eeprom_write_bytejh>
			g_messages_text[PATTERN_TEXT][0] = '\0';
			avr_eeprom_write_byte(Pattern_text, 0);

			uint8_t *v = (uint8_t*)EEPROM_DTMF_UNLOCK_CODE_DEFAULT;
			i = UnlockCode;
			for(j = 0; j < strlen(EEPROM_DTMF_UNLOCK_CODE_DEFAULT); j++)
    98a8:	8b 81       	ldd	r24, Y+3	; 0x03
    98aa:	9c 81       	ldd	r25, Y+4	; 0x04
    98ac:	01 96       	adiw	r24, 0x01	; 1
    98ae:	8b 83       	std	Y+3, r24	; 0x03
    98b0:	9c 83       	std	Y+4, r25	; 0x04
    98b2:	d9 cf       	rjmp	.-78     	; 0x9866 <_ZN13EepromManager20initializeEEPROMVarsEv+0xfa>
			{
				g_unlockCode[j] = *v;
				avr_eeprom_write_byte(i++, *v++);
			}

			avr_eeprom_write_byte(i, 0);
    98b4:	89 81       	ldd	r24, Y+1	; 0x01
    98b6:	9a 81       	ldd	r25, Y+2	; 0x02
    98b8:	60 e0       	ldi	r22, 0x00	; 0
    98ba:	0e 94 b6 45 	call	0x8b6c	; 0x8b6c <_Z21avr_eeprom_write_bytejh>
			g_unlockCode[j] = '\0';
    98be:	8b 81       	ldd	r24, Y+3	; 0x03
    98c0:	9c 81       	ldd	r25, Y+4	; 0x04
    98c2:	83 55       	subi	r24, 0x53	; 83
    98c4:	98 4b       	sbci	r25, 0xB8	; 184
    98c6:	fc 01       	movw	r30, r24
    98c8:	10 82       	st	Z, r1
			
			g_80m_frequency = EEPROM_TX_80M_FREQUENCY_DEFAULT;
    98ca:	80 e2       	ldi	r24, 0x20	; 32
    98cc:	94 e0       	ldi	r25, 0x04	; 4
    98ce:	a6 e3       	ldi	r26, 0x36	; 54
    98d0:	b0 e0       	ldi	r27, 0x00	; 0
    98d2:	80 93 36 40 	sts	0x4036, r24	; 0x804036 <g_80m_frequency>
    98d6:	90 93 37 40 	sts	0x4037, r25	; 0x804037 <g_80m_frequency+0x1>
    98da:	a0 93 38 40 	sts	0x4038, r26	; 0x804038 <g_80m_frequency+0x2>
    98de:	b0 93 39 40 	sts	0x4039, r27	; 0x804039 <g_80m_frequency+0x3>
			avr_eeprom_write_dword(Frequency, g_80m_frequency);
    98e2:	80 91 36 40 	lds	r24, 0x4036	; 0x804036 <g_80m_frequency>
    98e6:	90 91 37 40 	lds	r25, 0x4037	; 0x804037 <g_80m_frequency+0x1>
    98ea:	a0 91 38 40 	lds	r26, 0x4038	; 0x804038 <g_80m_frequency+0x2>
    98ee:	b0 91 39 40 	lds	r27, 0x4039	; 0x804039 <g_80m_frequency+0x3>
    98f2:	ac 01       	movw	r20, r24
    98f4:	bd 01       	movw	r22, r26
    98f6:	80 e4       	ldi	r24, 0x40	; 64
    98f8:	90 e0       	ldi	r25, 0x00	; 0
    98fa:	0e 94 18 46 	call	0x8c30	; 0x8c30 <_Z22avr_eeprom_write_dwordjm>

			g_rtty_offset = EEPROM_RTTY_OFFSET_FREQUENCY_DEFAULT;
    98fe:	8a ea       	ldi	r24, 0xAA	; 170
    9900:	90 e0       	ldi	r25, 0x00	; 0
    9902:	a0 e0       	ldi	r26, 0x00	; 0
    9904:	b0 e0       	ldi	r27, 0x00	; 0
    9906:	80 93 3c 40 	sts	0x403C, r24	; 0x80403c <g_rtty_offset>
    990a:	90 93 3d 40 	sts	0x403D, r25	; 0x80403d <g_rtty_offset+0x1>
    990e:	a0 93 3e 40 	sts	0x403E, r26	; 0x80403e <g_rtty_offset+0x2>
    9912:	b0 93 3f 40 	sts	0x403F, r27	; 0x80403f <g_rtty_offset+0x3>
			avr_eeprom_write_dword(Frequency, g_80m_frequency);
    9916:	80 91 36 40 	lds	r24, 0x4036	; 0x804036 <g_80m_frequency>
    991a:	90 91 37 40 	lds	r25, 0x4037	; 0x804037 <g_80m_frequency+0x1>
    991e:	a0 91 38 40 	lds	r26, 0x4038	; 0x804038 <g_80m_frequency+0x2>
    9922:	b0 91 39 40 	lds	r27, 0x4039	; 0x804039 <g_80m_frequency+0x3>
    9926:	ac 01       	movw	r20, r24
    9928:	bd 01       	movw	r22, r26
    992a:	80 e4       	ldi	r24, 0x40	; 64
    992c:	90 e0       	ldi	r25, 0x00	; 0
    992e:	0e 94 18 46 	call	0x8c30	; 0x8c30 <_Z22avr_eeprom_write_dwordjm>

			g_80m_power_level_mW = EEPROM_TX_80M_POWER_MW_DEFAULT;
    9932:	84 ef       	ldi	r24, 0xF4	; 244
    9934:	91 e0       	ldi	r25, 0x01	; 1
    9936:	80 93 3a 40 	sts	0x403A, r24	; 0x80403a <g_80m_power_level_mW>
    993a:	90 93 3b 40 	sts	0x403B, r25	; 0x80403b <g_80m_power_level_mW+0x1>
			avr_eeprom_write_dword(RF_Power, g_80m_power_level_mW);
    993e:	80 91 3a 40 	lds	r24, 0x403A	; 0x80403a <g_80m_power_level_mW>
    9942:	90 91 3b 40 	lds	r25, 0x403B	; 0x80403b <g_80m_power_level_mW+0x1>
    9946:	cc 01       	movw	r24, r24
    9948:	a0 e0       	ldi	r26, 0x00	; 0
    994a:	b0 e0       	ldi	r27, 0x00	; 0
    994c:	ac 01       	movw	r20, r24
    994e:	bd 01       	movw	r22, r26
    9950:	88 e4       	ldi	r24, 0x48	; 72
    9952:	90 e0       	ldi	r25, 0x00	; 0
    9954:	0e 94 18 46 	call	0x8c30	; 0x8c30 <_Z22avr_eeprom_write_dwordjm>
			
			g_pattern_codespeed = EEPROM_PATTERN_CODE_SPEED_DEFAULT;
    9958:	88 e0       	ldi	r24, 0x08	; 8
    995a:	80 93 0c 40 	sts	0x400C, r24	; 0x80400c <g_pattern_codespeed>
			avr_eeprom_write_byte(Pattern_Code_Speed, g_pattern_codespeed);
    995e:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    9962:	68 2f       	mov	r22, r24
    9964:	8a e4       	ldi	r24, 0x4A	; 74
    9966:	90 e0       	ldi	r25, 0x00	; 0
    9968:	0e 94 b6 45 	call	0x8b6c	; 0x8b6c <_Z21avr_eeprom_write_bytejh>
			
			g_off_air_seconds = EEPROM_OFF_AIR_TIME_DEFAULT;
    996c:	80 ef       	ldi	r24, 0xF0	; 240
    996e:	90 e0       	ldi	r25, 0x00	; 0
    9970:	80 93 0f 40 	sts	0x400F, r24	; 0x80400f <g_off_air_seconds>
    9974:	90 93 10 40 	sts	0x4010, r25	; 0x804010 <g_off_air_seconds+0x1>
			avr_eeprom_write_word(Off_Air_Seconds, g_off_air_seconds);
    9978:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_off_air_seconds>
    997c:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    9980:	bc 01       	movw	r22, r24
    9982:	8b e4       	ldi	r24, 0x4B	; 75
    9984:	90 e0       	ldi	r25, 0x00	; 0
    9986:	0e 94 e5 45 	call	0x8bca	; 0x8bca <_Z21avr_eeprom_write_wordjj>
			
			g_on_air_seconds = EEPROM_ON_AIR_TIME_DEFAULT;
    998a:	8c e3       	ldi	r24, 0x3C	; 60
    998c:	90 e0       	ldi	r25, 0x00	; 0
    998e:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_on_air_seconds>
    9992:	90 93 0e 40 	sts	0x400E, r25	; 0x80400e <g_on_air_seconds+0x1>
			avr_eeprom_write_word(On_Air_Seconds, g_on_air_seconds);
    9996:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    999a:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    999e:	bc 01       	movw	r22, r24
    99a0:	8d e4       	ldi	r24, 0x4D	; 77
    99a2:	90 e0       	ldi	r25, 0x00	; 0
    99a4:	0e 94 e5 45 	call	0x8bca	; 0x8bca <_Z21avr_eeprom_write_wordjj>
			
			g_ID_period_seconds = EEPROM_ID_TIME_INTERVAL_DEFAULT;
    99a8:	8c e2       	ldi	r24, 0x2C	; 44
    99aa:	91 e0       	ldi	r25, 0x01	; 1
    99ac:	80 93 11 40 	sts	0x4011, r24	; 0x804011 <g_ID_period_seconds>
    99b0:	90 93 12 40 	sts	0x4012, r25	; 0x804012 <g_ID_period_seconds+0x1>
			avr_eeprom_write_word(ID_Period_Seconds, g_ID_period_seconds);
    99b4:	80 91 11 40 	lds	r24, 0x4011	; 0x804011 <g_ID_period_seconds>
    99b8:	90 91 12 40 	lds	r25, 0x4012	; 0x804012 <g_ID_period_seconds+0x1>
    99bc:	bc 01       	movw	r22, r24
    99be:	8f e4       	ldi	r24, 0x4F	; 79
    99c0:	90 e0       	ldi	r25, 0x00	; 0
    99c2:	0e 94 e5 45 	call	0x8bca	; 0x8bca <_Z21avr_eeprom_write_wordjj>
			
			g_intra_cycle_delay_time = EEPROM_INTRA_CYCLE_DELAY_TIME_DEFAULT;
    99c6:	10 92 8a 47 	sts	0x478A, r1	; 0x80478a <g_intra_cycle_delay_time>
    99ca:	10 92 8b 47 	sts	0x478B, r1	; 0x80478b <g_intra_cycle_delay_time+0x1>
			avr_eeprom_write_word(Intra_Cycle_Delay_Seconds, g_intra_cycle_delay_time);
    99ce:	80 91 8a 47 	lds	r24, 0x478A	; 0x80478a <g_intra_cycle_delay_time>
    99d2:	90 91 8b 47 	lds	r25, 0x478B	; 0x80478b <g_intra_cycle_delay_time+0x1>
    99d6:	bc 01       	movw	r22, r24
    99d8:	81 e5       	ldi	r24, 0x51	; 81
    99da:	90 e0       	ldi	r25, 0x00	; 0
    99dc:	0e 94 e5 45 	call	0x8bca	; 0x8bca <_Z21avr_eeprom_write_wordjj>

			/* Done */

			avr_eeprom_write_word(0, EEPROM_INITIALIZED_FLAG);
    99e0:	6e ec       	ldi	r22, 0xCE	; 206
    99e2:	70 e0       	ldi	r23, 0x00	; 0
    99e4:	80 e0       	ldi	r24, 0x00	; 0
    99e6:	90 e0       	ldi	r25, 0x00	; 0
    99e8:	0e 94 e5 45 	call	0x8bca	; 0x8bca <_Z21avr_eeprom_write_wordjj>
		}
		
		return(err);
    99ec:	8f 81       	ldd	r24, Y+7	; 0x07
	}
    99ee:	2b 96       	adiw	r28, 0x0b	; 11
    99f0:	cd bf       	out	0x3d, r28	; 61
    99f2:	de bf       	out	0x3e, r29	; 62
    99f4:	df 91       	pop	r29
    99f6:	cf 91       	pop	r28
    99f8:	08 95       	ret

000099fa <_ZN8GoertzelC1Eff>:
		highValueCount++;
	}

	Q2 = Q1;
	Q1 = Q0;
}
    99fa:	0f 93       	push	r16
    99fc:	1f 93       	push	r17
    99fe:	cf 93       	push	r28
    9a00:	df 93       	push	r29
    9a02:	cd b7       	in	r28, 0x3d	; 61
    9a04:	de b7       	in	r29, 0x3e	; 62
    9a06:	62 97       	sbiw	r28, 0x12	; 18
    9a08:	cd bf       	out	0x3d, r28	; 61
    9a0a:	de bf       	out	0x3e, r29	; 62
    9a0c:	89 87       	std	Y+9, r24	; 0x09
    9a0e:	9a 87       	std	Y+10, r25	; 0x0a
    9a10:	4b 87       	std	Y+11, r20	; 0x0b
    9a12:	5c 87       	std	Y+12, r21	; 0x0c
    9a14:	6d 87       	std	Y+13, r22	; 0x0d
    9a16:	7e 87       	std	Y+14, r23	; 0x0e
    9a18:	0f 87       	std	Y+15, r16	; 0x0f
    9a1a:	18 8b       	std	Y+16, r17	; 0x10
    9a1c:	29 8b       	std	Y+17, r18	; 0x11
    9a1e:	3a 8b       	std	Y+18, r19	; 0x12
    9a20:	8f 85       	ldd	r24, Y+15	; 0x0f
    9a22:	98 89       	ldd	r25, Y+16	; 0x10
    9a24:	a9 89       	ldd	r26, Y+17	; 0x11
    9a26:	ba 89       	ldd	r27, Y+18	; 0x12
    9a28:	80 93 ca 47 	sts	0x47CA, r24	; 0x8047ca <_SAMPLING_FREQUENCY>
    9a2c:	90 93 cb 47 	sts	0x47CB, r25	; 0x8047cb <_SAMPLING_FREQUENCY+0x1>
    9a30:	a0 93 cc 47 	sts	0x47CC, r26	; 0x8047cc <_SAMPLING_FREQUENCY+0x2>
    9a34:	b0 93 cd 47 	sts	0x47CD, r27	; 0x8047cd <_SAMPLING_FREQUENCY+0x3>
    9a38:	8b 85       	ldd	r24, Y+11	; 0x0b
    9a3a:	9c 85       	ldd	r25, Y+12	; 0x0c
    9a3c:	ad 85       	ldd	r26, Y+13	; 0x0d
    9a3e:	be 85       	ldd	r27, Y+14	; 0x0e
    9a40:	89 83       	std	Y+1, r24	; 0x01
    9a42:	9a 83       	std	Y+2, r25	; 0x02
    9a44:	ab 83       	std	Y+3, r26	; 0x03
    9a46:	bc 83       	std	Y+4, r27	; 0x04
    9a48:	84 e6       	ldi	r24, 0x64	; 100
    9a4a:	90 e0       	ldi	r25, 0x00	; 0
    9a4c:	8d 83       	std	Y+5, r24	; 0x05
    9a4e:	9e 83       	std	Y+6, r25	; 0x06
    9a50:	81 ed       	ldi	r24, 0xD1	; 209
    9a52:	90 e0       	ldi	r25, 0x00	; 0
    9a54:	8f 83       	std	Y+7, r24	; 0x07
    9a56:	98 87       	std	Y+8, r25	; 0x08
    9a58:	8f 81       	ldd	r24, Y+7	; 0x07
    9a5a:	98 85       	ldd	r25, Y+8	; 0x08
    9a5c:	09 2e       	mov	r0, r25
    9a5e:	00 0c       	add	r0, r0
    9a60:	aa 0b       	sbc	r26, r26
    9a62:	bb 0b       	sbc	r27, r27
    9a64:	bc 01       	movw	r22, r24
    9a66:	cd 01       	movw	r24, r26
    9a68:	0e 94 c7 78 	call	0xf18e	; 0xf18e <__floatsisf>
    9a6c:	dc 01       	movw	r26, r24
    9a6e:	cb 01       	movw	r24, r22
    9a70:	29 81       	ldd	r18, Y+1	; 0x01
    9a72:	3a 81       	ldd	r19, Y+2	; 0x02
    9a74:	4b 81       	ldd	r20, Y+3	; 0x03
    9a76:	5c 81       	ldd	r21, Y+4	; 0x04
    9a78:	bc 01       	movw	r22, r24
    9a7a:	cd 01       	movw	r24, r26
    9a7c:	0e 94 18 78 	call	0xf030	; 0xf030 <__cmpsf2>
    9a80:	88 23       	and	r24, r24
    9a82:	6c f4       	brge	.+26     	; 0x9a9e <_ZN8GoertzelC1Eff+0xa4>
    9a84:	8f 81       	ldd	r24, Y+7	; 0x07
    9a86:	98 85       	ldd	r25, Y+8	; 0x08
    9a88:	09 2e       	mov	r0, r25
    9a8a:	00 0c       	add	r0, r0
    9a8c:	aa 0b       	sbc	r26, r26
    9a8e:	bb 0b       	sbc	r27, r27
    9a90:	bc 01       	movw	r22, r24
    9a92:	cd 01       	movw	r24, r26
    9a94:	0e 94 c7 78 	call	0xf18e	; 0xf18e <__floatsisf>
    9a98:	dc 01       	movw	r26, r24
    9a9a:	cb 01       	movw	r24, r22
    9a9c:	27 c0       	rjmp	.+78     	; 0x9aec <_ZN8GoertzelC1Eff+0xf2>
    9a9e:	8d 81       	ldd	r24, Y+5	; 0x05
    9aa0:	9e 81       	ldd	r25, Y+6	; 0x06
    9aa2:	09 2e       	mov	r0, r25
    9aa4:	00 0c       	add	r0, r0
    9aa6:	aa 0b       	sbc	r26, r26
    9aa8:	bb 0b       	sbc	r27, r27
    9aaa:	bc 01       	movw	r22, r24
    9aac:	cd 01       	movw	r24, r26
    9aae:	0e 94 c7 78 	call	0xf18e	; 0xf18e <__floatsisf>
    9ab2:	dc 01       	movw	r26, r24
    9ab4:	cb 01       	movw	r24, r22
    9ab6:	29 81       	ldd	r18, Y+1	; 0x01
    9ab8:	3a 81       	ldd	r19, Y+2	; 0x02
    9aba:	4b 81       	ldd	r20, Y+3	; 0x03
    9abc:	5c 81       	ldd	r21, Y+4	; 0x04
    9abe:	bc 01       	movw	r22, r24
    9ac0:	cd 01       	movw	r24, r26
    9ac2:	0e 94 b8 79 	call	0xf370	; 0xf370 <__gesf2>
    9ac6:	18 16       	cp	r1, r24
    9ac8:	6c f4       	brge	.+26     	; 0x9ae4 <_ZN8GoertzelC1Eff+0xea>
    9aca:	8d 81       	ldd	r24, Y+5	; 0x05
    9acc:	9e 81       	ldd	r25, Y+6	; 0x06
    9ace:	09 2e       	mov	r0, r25
    9ad0:	00 0c       	add	r0, r0
    9ad2:	aa 0b       	sbc	r26, r26
    9ad4:	bb 0b       	sbc	r27, r27
    9ad6:	bc 01       	movw	r22, r24
    9ad8:	cd 01       	movw	r24, r26
    9ada:	0e 94 c7 78 	call	0xf18e	; 0xf18e <__floatsisf>
    9ade:	dc 01       	movw	r26, r24
    9ae0:	cb 01       	movw	r24, r22
    9ae2:	04 c0       	rjmp	.+8      	; 0x9aec <_ZN8GoertzelC1Eff+0xf2>
    9ae4:	89 81       	ldd	r24, Y+1	; 0x01
    9ae6:	9a 81       	ldd	r25, Y+2	; 0x02
    9ae8:	ab 81       	ldd	r26, Y+3	; 0x03
    9aea:	bc 81       	ldd	r27, Y+4	; 0x04
    9aec:	bc 01       	movw	r22, r24
    9aee:	cd 01       	movw	r24, r26
    9af0:	0e 94 8f 78 	call	0xf11e	; 0xf11e <__fixsfsi>
    9af4:	dc 01       	movw	r26, r24
    9af6:	cb 01       	movw	r24, r22
    9af8:	80 93 ce 47 	sts	0x47CE, r24	; 0x8047ce <_N>
    9afc:	90 93 cf 47 	sts	0x47CF, r25	; 0x8047cf <_N+0x1>
    9b00:	80 91 ce 47 	lds	r24, 0x47CE	; 0x8047ce <_N>
    9b04:	90 91 cf 47 	lds	r25, 0x47CF	; 0x8047cf <_N+0x1>
    9b08:	88 0f       	add	r24, r24
    9b0a:	99 1f       	adc	r25, r25
    9b0c:	0e 94 e6 7a 	call	0xf5cc	; 0xf5cc <malloc>
    9b10:	80 93 d3 47 	sts	0x47D3, r24	; 0x8047d3 <testData>
    9b14:	90 93 d4 47 	sts	0x47D4, r25	; 0x8047d4 <testData+0x1>
    9b18:	00 00       	nop
    9b1a:	62 96       	adiw	r28, 0x12	; 18
    9b1c:	cd bf       	out	0x3d, r28	; 61
    9b1e:	de bf       	out	0x3e, r29	; 62
    9b20:	df 91       	pop	r29
    9b22:	cf 91       	pop	r28
    9b24:	1f 91       	pop	r17
    9b26:	0f 91       	pop	r16
    9b28:	08 95       	ret

00009b2a <_ZN8GoertzelD1Ev>:
    9b2a:	cf 93       	push	r28
    9b2c:	df 93       	push	r29
    9b2e:	00 d0       	rcall	.+0      	; 0x9b30 <_ZN8GoertzelD1Ev+0x6>
    9b30:	cd b7       	in	r28, 0x3d	; 61
    9b32:	de b7       	in	r29, 0x3e	; 62
    9b34:	89 83       	std	Y+1, r24	; 0x01
    9b36:	9a 83       	std	Y+2, r25	; 0x02
    9b38:	80 91 d3 47 	lds	r24, 0x47D3	; 0x8047d3 <testData>
    9b3c:	90 91 d4 47 	lds	r25, 0x47D4	; 0x8047d4 <testData+0x1>
    9b40:	0e 94 7e 7b 	call	0xf6fc	; 0xf6fc <free>
    9b44:	00 00       	nop
    9b46:	0f 90       	pop	r0
    9b48:	0f 90       	pop	r0
    9b4a:	df 91       	pop	r29
    9b4c:	cf 91       	pop	r28
    9b4e:	08 95       	ret

00009b50 <_ZN8Goertzel9DataPointEi>:

bool Goertzel::DataPoint(int data)
{
    9b50:	cf 93       	push	r28
    9b52:	df 93       	push	r29
    9b54:	00 d0       	rcall	.+0      	; 0x9b56 <_ZN8Goertzel9DataPointEi+0x6>
    9b56:	00 d0       	rcall	.+0      	; 0x9b58 <_ZN8Goertzel9DataPointEi+0x8>
    9b58:	cd b7       	in	r28, 0x3d	; 61
    9b5a:	de b7       	in	r29, 0x3e	; 62
    9b5c:	89 83       	std	Y+1, r24	; 0x01
    9b5e:	9a 83       	std	Y+2, r25	; 0x02
    9b60:	6b 83       	std	Y+3, r22	; 0x03
    9b62:	7c 83       	std	Y+4, r23	; 0x04
	if(_samplesReady)
    9b64:	80 91 d2 47 	lds	r24, 0x47D2	; 0x8047d2 <_samplesReady>
    9b68:	88 23       	and	r24, r24
    9b6a:	19 f0       	breq	.+6      	; 0x9b72 <_ZN8Goertzel9DataPointEi+0x22>
	{
		return(_samplesReady);
    9b6c:	80 91 d2 47 	lds	r24, 0x47D2	; 0x8047d2 <_samplesReady>
    9b70:	32 c0       	rjmp	.+100    	; 0x9bd6 <_ZN8Goertzel9DataPointEi+0x86>
	}

	testData[_index] = data;
    9b72:	20 91 d3 47 	lds	r18, 0x47D3	; 0x8047d3 <testData>
    9b76:	30 91 d4 47 	lds	r19, 0x47D4	; 0x8047d4 <testData+0x1>
    9b7a:	80 91 d0 47 	lds	r24, 0x47D0	; 0x8047d0 <_index>
    9b7e:	90 91 d1 47 	lds	r25, 0x47D1	; 0x8047d1 <_index+0x1>
    9b82:	88 0f       	add	r24, r24
    9b84:	99 1f       	adc	r25, r25
    9b86:	82 0f       	add	r24, r18
    9b88:	93 1f       	adc	r25, r19
    9b8a:	2b 81       	ldd	r18, Y+3	; 0x03
    9b8c:	3c 81       	ldd	r19, Y+4	; 0x04
    9b8e:	fc 01       	movw	r30, r24
    9b90:	20 83       	st	Z, r18
    9b92:	31 83       	std	Z+1, r19	; 0x01
	_index++;
    9b94:	80 91 d0 47 	lds	r24, 0x47D0	; 0x8047d0 <_index>
    9b98:	90 91 d1 47 	lds	r25, 0x47D1	; 0x8047d1 <_index+0x1>
    9b9c:	01 96       	adiw	r24, 0x01	; 1
    9b9e:	80 93 d0 47 	sts	0x47D0, r24	; 0x8047d0 <_index>
    9ba2:	90 93 d1 47 	sts	0x47D1, r25	; 0x8047d1 <_index+0x1>
	if(_index >= _N)
    9ba6:	20 91 d0 47 	lds	r18, 0x47D0	; 0x8047d0 <_index>
    9baa:	30 91 d1 47 	lds	r19, 0x47D1	; 0x8047d1 <_index+0x1>
    9bae:	80 91 ce 47 	lds	r24, 0x47CE	; 0x8047ce <_N>
    9bb2:	90 91 cf 47 	lds	r25, 0x47CF	; 0x8047cf <_N+0x1>
    9bb6:	41 e0       	ldi	r20, 0x01	; 1
    9bb8:	28 17       	cp	r18, r24
    9bba:	39 07       	cpc	r19, r25
    9bbc:	0c f4       	brge	.+2      	; 0x9bc0 <_ZN8Goertzel9DataPointEi+0x70>
    9bbe:	40 e0       	ldi	r20, 0x00	; 0
    9bc0:	44 23       	and	r20, r20
    9bc2:	39 f0       	breq	.+14     	; 0x9bd2 <_ZN8Goertzel9DataPointEi+0x82>
	{
		_index = 0;
    9bc4:	10 92 d0 47 	sts	0x47D0, r1	; 0x8047d0 <_index>
    9bc8:	10 92 d1 47 	sts	0x47D1, r1	; 0x8047d1 <_index+0x1>
		_samplesReady = true;
    9bcc:	81 e0       	ldi	r24, 0x01	; 1
    9bce:	80 93 d2 47 	sts	0x47D2, r24	; 0x8047d2 <_samplesReady>
	}

	return(_samplesReady);
    9bd2:	80 91 d2 47 	lds	r24, 0x47D2	; 0x8047d2 <_samplesReady>
}
    9bd6:	24 96       	adiw	r28, 0x04	; 4
    9bd8:	cd bf       	out	0x3d, r28	; 61
    9bda:	de bf       	out	0x3e, r29	; 62
    9bdc:	df 91       	pop	r29
    9bde:	cf 91       	pop	r28
    9be0:	08 95       	ret

00009be2 <PORTA_set_pin_level>:
 * \param[in] pin       The pin number within port
 * \param[in] level true  = Pin level set to "high" state
 *                  false = Pin level set to "low" state
 */
static inline void PORTA_set_pin_level(const uint8_t pin, const bool level)
{
    9be2:	cf 93       	push	r28
    9be4:	df 93       	push	r29
    9be6:	00 d0       	rcall	.+0      	; 0x9be8 <PORTA_set_pin_level+0x6>
    9be8:	cd b7       	in	r28, 0x3d	; 61
    9bea:	de b7       	in	r29, 0x3e	; 62
    9bec:	89 83       	std	Y+1, r24	; 0x01
    9bee:	6a 83       	std	Y+2, r22	; 0x02
	if (level == true) {
    9bf0:	8a 81       	ldd	r24, Y+2	; 0x02
    9bf2:	88 23       	and	r24, r24
    9bf4:	a9 f0       	breq	.+42     	; 0x9c20 <PORTA_set_pin_level+0x3e>
		VPORTA.OUT |= (1 << pin);
    9bf6:	20 e0       	ldi	r18, 0x00	; 0
    9bf8:	30 e0       	ldi	r19, 0x00	; 0
    9bfa:	80 e0       	ldi	r24, 0x00	; 0
    9bfc:	90 e0       	ldi	r25, 0x00	; 0
    9bfe:	fc 01       	movw	r30, r24
    9c00:	81 81       	ldd	r24, Z+1	; 0x01
    9c02:	68 2f       	mov	r22, r24
    9c04:	89 81       	ldd	r24, Y+1	; 0x01
    9c06:	48 2f       	mov	r20, r24
    9c08:	50 e0       	ldi	r21, 0x00	; 0
    9c0a:	81 e0       	ldi	r24, 0x01	; 1
    9c0c:	90 e0       	ldi	r25, 0x00	; 0
    9c0e:	02 c0       	rjmp	.+4      	; 0x9c14 <PORTA_set_pin_level+0x32>
    9c10:	88 0f       	add	r24, r24
    9c12:	99 1f       	adc	r25, r25
    9c14:	4a 95       	dec	r20
    9c16:	e2 f7       	brpl	.-8      	; 0x9c10 <PORTA_set_pin_level+0x2e>
    9c18:	86 2b       	or	r24, r22
    9c1a:	f9 01       	movw	r30, r18
    9c1c:	81 83       	std	Z+1, r24	; 0x01
	} else {
		VPORTA.OUT &= ~(1 << pin);
	}
}
    9c1e:	15 c0       	rjmp	.+42     	; 0x9c4a <PORTA_set_pin_level+0x68>
static inline void PORTA_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTA.OUT |= (1 << pin);
	} else {
		VPORTA.OUT &= ~(1 << pin);
    9c20:	20 e0       	ldi	r18, 0x00	; 0
    9c22:	30 e0       	ldi	r19, 0x00	; 0
    9c24:	80 e0       	ldi	r24, 0x00	; 0
    9c26:	90 e0       	ldi	r25, 0x00	; 0
    9c28:	fc 01       	movw	r30, r24
    9c2a:	81 81       	ldd	r24, Z+1	; 0x01
    9c2c:	68 2f       	mov	r22, r24
    9c2e:	89 81       	ldd	r24, Y+1	; 0x01
    9c30:	48 2f       	mov	r20, r24
    9c32:	50 e0       	ldi	r21, 0x00	; 0
    9c34:	81 e0       	ldi	r24, 0x01	; 1
    9c36:	90 e0       	ldi	r25, 0x00	; 0
    9c38:	02 c0       	rjmp	.+4      	; 0x9c3e <PORTA_set_pin_level+0x5c>
    9c3a:	88 0f       	add	r24, r24
    9c3c:	99 1f       	adc	r25, r25
    9c3e:	4a 95       	dec	r20
    9c40:	e2 f7       	brpl	.-8      	; 0x9c3a <PORTA_set_pin_level+0x58>
    9c42:	80 95       	com	r24
    9c44:	86 23       	and	r24, r22
    9c46:	f9 01       	movw	r30, r18
    9c48:	81 83       	std	Z+1, r24	; 0x01
	}
}
    9c4a:	00 00       	nop
    9c4c:	0f 90       	pop	r0
    9c4e:	0f 90       	pop	r0
    9c50:	df 91       	pop	r29
    9c52:	cf 91       	pop	r28
    9c54:	08 95       	ret

00009c56 <_Z10wifi_powerb>:
#define WIFI_RESET_gc (1 << 6)  /* WiFi reset port pin on PORTA*/
#define WIFI_POWER_gc (1 << 5)  /* WiFi enable power port pin on PORTA */
#define WIFI_MODULE_DETECT_gc (1 << 7) /* WiFi module detect pin on PORTD */

void wifi_power(bool state)
{
    9c56:	cf 93       	push	r28
    9c58:	df 93       	push	r29
    9c5a:	1f 92       	push	r1
    9c5c:	cd b7       	in	r28, 0x3d	; 61
    9c5e:	de b7       	in	r29, 0x3e	; 62
    9c60:	89 83       	std	Y+1, r24	; 0x01
	if(state == ON)
    9c62:	89 81       	ldd	r24, Y+1	; 0x01
    9c64:	88 23       	and	r24, r24
    9c66:	29 f0       	breq	.+10     	; 0x9c72 <_Z10wifi_powerb+0x1c>
	{
		PORTA_set_pin_level(WIFI_ENABLE, HIGH);
    9c68:	61 e0       	ldi	r22, 0x01	; 1
    9c6a:	85 e0       	ldi	r24, 0x05	; 5
    9c6c:	0e 94 f1 4d 	call	0x9be2	; 0x9be2 <PORTA_set_pin_level>
	}
	else
	{
		PORTA_set_pin_level(WIFI_ENABLE, LOW);
	}
}
    9c70:	04 c0       	rjmp	.+8      	; 0x9c7a <_Z10wifi_powerb+0x24>
	{
		PORTA_set_pin_level(WIFI_ENABLE, HIGH);
	}
	else
	{
		PORTA_set_pin_level(WIFI_ENABLE, LOW);
    9c72:	60 e0       	ldi	r22, 0x00	; 0
    9c74:	85 e0       	ldi	r24, 0x05	; 5
    9c76:	0e 94 f1 4d 	call	0x9be2	; 0x9be2 <PORTA_set_pin_level>
	}
}
    9c7a:	00 00       	nop
    9c7c:	0f 90       	pop	r0
    9c7e:	df 91       	pop	r29
    9c80:	cf 91       	pop	r28
    9c82:	08 95       	ret

00009c84 <_Z10wifi_resetb>:

void wifi_reset(bool state)
{
    9c84:	cf 93       	push	r28
    9c86:	df 93       	push	r29
    9c88:	1f 92       	push	r1
    9c8a:	cd b7       	in	r28, 0x3d	; 61
    9c8c:	de b7       	in	r29, 0x3e	; 62
    9c8e:	89 83       	std	Y+1, r24	; 0x01
	if(state == ON)
    9c90:	89 81       	ldd	r24, Y+1	; 0x01
    9c92:	88 23       	and	r24, r24
    9c94:	29 f0       	breq	.+10     	; 0x9ca0 <_Z10wifi_resetb+0x1c>
	{
		PORTA_set_pin_level(WIFI_RESET, LOW);
    9c96:	60 e0       	ldi	r22, 0x00	; 0
    9c98:	86 e0       	ldi	r24, 0x06	; 6
    9c9a:	0e 94 f1 4d 	call	0x9be2	; 0x9be2 <PORTA_set_pin_level>
	}
	else
	{
		PORTA_set_pin_level(WIFI_RESET, HIGH);
	}
}
    9c9e:	04 c0       	rjmp	.+8      	; 0x9ca8 <_Z10wifi_resetb+0x24>
	{
		PORTA_set_pin_level(WIFI_RESET, LOW);
	}
	else
	{
		PORTA_set_pin_level(WIFI_RESET, HIGH);
    9ca0:	61 e0       	ldi	r22, 0x01	; 1
    9ca2:	86 e0       	ldi	r24, 0x06	; 6
    9ca4:	0e 94 f1 4d 	call	0x9be2	; 0x9be2 <PORTA_set_pin_level>
	}
}
    9ca8:	00 00       	nop
    9caa:	0f 90       	pop	r0
    9cac:	df 91       	pop	r29
    9cae:	cf 91       	pop	r28
    9cb0:	08 95       	ret

00009cb2 <_Z11wifiPresentv>:

bool wifiPresent(void)
{
    9cb2:	cf 93       	push	r28
    9cb4:	df 93       	push	r29
    9cb6:	cd b7       	in	r28, 0x3d	; 61
    9cb8:	de b7       	in	r29, 0x3e	; 62
	return(VPORTD.IN & WIFI_MODULE_DETECT_gc);
    9cba:	8c e0       	ldi	r24, 0x0C	; 12
    9cbc:	90 e0       	ldi	r25, 0x00	; 0
    9cbe:	fc 01       	movw	r30, r24
    9cc0:	82 81       	ldd	r24, Z+2	; 0x02
    9cc2:	88 1f       	adc	r24, r24
    9cc4:	88 27       	eor	r24, r24
    9cc6:	88 1f       	adc	r24, r24
}
    9cc8:	df 91       	pop	r29
    9cca:	cf 91       	pop	r28
    9ccc:	08 95       	ret

00009cce <_Z11wifiEnabledv>:

bool wifiEnabled(void)
{
    9cce:	cf 93       	push	r28
    9cd0:	df 93       	push	r29
    9cd2:	cd b7       	in	r28, 0x3d	; 61
    9cd4:	de b7       	in	r29, 0x3e	; 62
	if(!(PORTA.OUT & (1 << WIFI_ENABLE))) /* read output setting on power-enable line */
    9cd6:	80 e0       	ldi	r24, 0x00	; 0
    9cd8:	94 e0       	ldi	r25, 0x04	; 4
    9cda:	fc 01       	movw	r30, r24
    9cdc:	84 81       	ldd	r24, Z+4	; 0x04
    9cde:	88 2f       	mov	r24, r24
    9ce0:	90 e0       	ldi	r25, 0x00	; 0
    9ce2:	80 72       	andi	r24, 0x20	; 32
    9ce4:	99 27       	eor	r25, r25
    9ce6:	21 e0       	ldi	r18, 0x01	; 1
    9ce8:	89 2b       	or	r24, r25
    9cea:	09 f0       	breq	.+2      	; 0x9cee <_Z11wifiEnabledv+0x20>
    9cec:	20 e0       	ldi	r18, 0x00	; 0
    9cee:	22 23       	and	r18, r18
    9cf0:	11 f0       	breq	.+4      	; 0x9cf6 <_Z11wifiEnabledv+0x28>
	{
		return false;
    9cf2:	80 e0       	ldi	r24, 0x00	; 0
    9cf4:	11 c0       	rjmp	.+34     	; 0x9d18 <_Z11wifiEnabledv+0x4a>
	}
	
	if(!(PORTA.OUT & (1 << WIFI_RESET))) /* read output setting on reset line */
    9cf6:	80 e0       	ldi	r24, 0x00	; 0
    9cf8:	94 e0       	ldi	r25, 0x04	; 4
    9cfa:	fc 01       	movw	r30, r24
    9cfc:	84 81       	ldd	r24, Z+4	; 0x04
    9cfe:	88 2f       	mov	r24, r24
    9d00:	90 e0       	ldi	r25, 0x00	; 0
    9d02:	80 74       	andi	r24, 0x40	; 64
    9d04:	99 27       	eor	r25, r25
    9d06:	21 e0       	ldi	r18, 0x01	; 1
    9d08:	89 2b       	or	r24, r25
    9d0a:	09 f0       	breq	.+2      	; 0x9d0e <_Z11wifiEnabledv+0x40>
    9d0c:	20 e0       	ldi	r18, 0x00	; 0
    9d0e:	22 23       	and	r18, r18
    9d10:	11 f0       	breq	.+4      	; 0x9d16 <_Z11wifiEnabledv+0x48>
	{
		return false;
    9d12:	80 e0       	ldi	r24, 0x00	; 0
    9d14:	01 c0       	rjmp	.+2      	; 0x9d18 <_Z11wifiEnabledv+0x4a>
	}

	return true;
    9d16:	81 e0       	ldi	r24, 0x01	; 1
}
    9d18:	df 91       	pop	r29
    9d1a:	cf 91       	pop	r28
    9d1c:	08 95       	ret

00009d1e <PORTB_set_pin_pull_mode>:
 *
 * \param[in] pin       The pin number within port
 * \param[in] pull_mode Pin pull mode
 */
static inline void PORTB_set_pin_pull_mode(const uint8_t pin, const enum port_pull_mode pull_mode)
{
    9d1e:	cf 93       	push	r28
    9d20:	df 93       	push	r29
    9d22:	00 d0       	rcall	.+0      	; 0x9d24 <PORTB_set_pin_pull_mode+0x6>
    9d24:	00 d0       	rcall	.+0      	; 0x9d26 <PORTB_set_pin_pull_mode+0x8>
    9d26:	cd b7       	in	r28, 0x3d	; 61
    9d28:	de b7       	in	r29, 0x3e	; 62
    9d2a:	8b 83       	std	Y+3, r24	; 0x03
    9d2c:	6c 83       	std	Y+4, r22	; 0x04
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTB + 0x10 + pin);
    9d2e:	8b 81       	ldd	r24, Y+3	; 0x03
    9d30:	88 2f       	mov	r24, r24
    9d32:	90 e0       	ldi	r25, 0x00	; 0
    9d34:	80 5d       	subi	r24, 0xD0	; 208
    9d36:	9b 4f       	sbci	r25, 0xFB	; 251
    9d38:	89 83       	std	Y+1, r24	; 0x01
    9d3a:	9a 83       	std	Y+2, r25	; 0x02

	if (pull_mode == PORT_PULL_UP) {
    9d3c:	8c 81       	ldd	r24, Y+4	; 0x04
    9d3e:	81 30       	cpi	r24, 0x01	; 1
    9d40:	59 f4       	brne	.+22     	; 0x9d58 <PORTB_set_pin_pull_mode+0x3a>
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
    9d42:	89 81       	ldd	r24, Y+1	; 0x01
    9d44:	9a 81       	ldd	r25, Y+2	; 0x02
    9d46:	fc 01       	movw	r30, r24
    9d48:	80 81       	ld	r24, Z
    9d4a:	28 2f       	mov	r18, r24
    9d4c:	28 60       	ori	r18, 0x08	; 8
    9d4e:	89 81       	ldd	r24, Y+1	; 0x01
    9d50:	9a 81       	ldd	r25, Y+2	; 0x02
    9d52:	fc 01       	movw	r30, r24
    9d54:	20 83       	st	Z, r18
	} else if (pull_mode == PORT_PULL_OFF) {
		*port_pin_ctrl &= ~PORT_PULLUPEN_bm;
	}
}
    9d56:	0d c0       	rjmp	.+26     	; 0x9d72 <PORTB_set_pin_pull_mode+0x54>
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTB + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
	} else if (pull_mode == PORT_PULL_OFF) {
    9d58:	8c 81       	ldd	r24, Y+4	; 0x04
    9d5a:	88 23       	and	r24, r24
    9d5c:	51 f4       	brne	.+20     	; 0x9d72 <PORTB_set_pin_pull_mode+0x54>
		*port_pin_ctrl &= ~PORT_PULLUPEN_bm;
    9d5e:	89 81       	ldd	r24, Y+1	; 0x01
    9d60:	9a 81       	ldd	r25, Y+2	; 0x02
    9d62:	fc 01       	movw	r30, r24
    9d64:	80 81       	ld	r24, Z
    9d66:	28 2f       	mov	r18, r24
    9d68:	27 7f       	andi	r18, 0xF7	; 247
    9d6a:	89 81       	ldd	r24, Y+1	; 0x01
    9d6c:	9a 81       	ldd	r25, Y+2	; 0x02
    9d6e:	fc 01       	movw	r30, r24
    9d70:	20 83       	st	Z, r18
	}
}
    9d72:	00 00       	nop
    9d74:	24 96       	adiw	r28, 0x04	; 4
    9d76:	cd bf       	out	0x3d, r28	; 61
    9d78:	de bf       	out	0x3e, r29	; 62
    9d7a:	df 91       	pop	r29
    9d7c:	cf 91       	pop	r28
    9d7e:	08 95       	ret

00009d80 <PORTC_set_pin_pull_mode>:
 *
 * \param[in] pin       The pin number within port
 * \param[in] pull_mode Pin pull mode
 */
static inline void PORTC_set_pin_pull_mode(const uint8_t pin, const enum port_pull_mode pull_mode)
{
    9d80:	cf 93       	push	r28
    9d82:	df 93       	push	r29
    9d84:	00 d0       	rcall	.+0      	; 0x9d86 <PORTC_set_pin_pull_mode+0x6>
    9d86:	00 d0       	rcall	.+0      	; 0x9d88 <PORTC_set_pin_pull_mode+0x8>
    9d88:	cd b7       	in	r28, 0x3d	; 61
    9d8a:	de b7       	in	r29, 0x3e	; 62
    9d8c:	8b 83       	std	Y+3, r24	; 0x03
    9d8e:	6c 83       	std	Y+4, r22	; 0x04
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTC + 0x10 + pin);
    9d90:	8b 81       	ldd	r24, Y+3	; 0x03
    9d92:	88 2f       	mov	r24, r24
    9d94:	90 e0       	ldi	r25, 0x00	; 0
    9d96:	80 5b       	subi	r24, 0xB0	; 176
    9d98:	9b 4f       	sbci	r25, 0xFB	; 251
    9d9a:	89 83       	std	Y+1, r24	; 0x01
    9d9c:	9a 83       	std	Y+2, r25	; 0x02

	if (pull_mode == PORT_PULL_UP) {
    9d9e:	8c 81       	ldd	r24, Y+4	; 0x04
    9da0:	81 30       	cpi	r24, 0x01	; 1
    9da2:	59 f4       	brne	.+22     	; 0x9dba <PORTC_set_pin_pull_mode+0x3a>
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
    9da4:	89 81       	ldd	r24, Y+1	; 0x01
    9da6:	9a 81       	ldd	r25, Y+2	; 0x02
    9da8:	fc 01       	movw	r30, r24
    9daa:	80 81       	ld	r24, Z
    9dac:	28 2f       	mov	r18, r24
    9dae:	28 60       	ori	r18, 0x08	; 8
    9db0:	89 81       	ldd	r24, Y+1	; 0x01
    9db2:	9a 81       	ldd	r25, Y+2	; 0x02
    9db4:	fc 01       	movw	r30, r24
    9db6:	20 83       	st	Z, r18
	} else if (pull_mode == PORT_PULL_OFF) {
		*port_pin_ctrl &= ~PORT_PULLUPEN_bm;
	}
}
    9db8:	0d c0       	rjmp	.+26     	; 0x9dd4 <PORTC_set_pin_pull_mode+0x54>
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTC + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
	} else if (pull_mode == PORT_PULL_OFF) {
    9dba:	8c 81       	ldd	r24, Y+4	; 0x04
    9dbc:	88 23       	and	r24, r24
    9dbe:	51 f4       	brne	.+20     	; 0x9dd4 <PORTC_set_pin_pull_mode+0x54>
		*port_pin_ctrl &= ~PORT_PULLUPEN_bm;
    9dc0:	89 81       	ldd	r24, Y+1	; 0x01
    9dc2:	9a 81       	ldd	r25, Y+2	; 0x02
    9dc4:	fc 01       	movw	r30, r24
    9dc6:	80 81       	ld	r24, Z
    9dc8:	28 2f       	mov	r18, r24
    9dca:	27 7f       	andi	r18, 0xF7	; 247
    9dcc:	89 81       	ldd	r24, Y+1	; 0x01
    9dce:	9a 81       	ldd	r25, Y+2	; 0x02
    9dd0:	fc 01       	movw	r30, r24
    9dd2:	20 83       	st	Z, r18
	}
}
    9dd4:	00 00       	nop
    9dd6:	24 96       	adiw	r28, 0x04	; 4
    9dd8:	cd bf       	out	0x3d, r28	; 61
    9dda:	de bf       	out	0x3e, r29	; 62
    9ddc:	df 91       	pop	r29
    9dde:	cf 91       	pop	r28
    9de0:	08 95       	ret

00009de2 <I2C_0_Init>:
/************************************************************************/
/* I2C_0                                                               */
/************************************************************************/

void I2C_0_Init(void)
{
    9de2:	cf 93       	push	r28
    9de4:	df 93       	push	r29
    9de6:	cd b7       	in	r28, 0x3d	; 61
    9de8:	de b7       	in	r29, 0x3e	; 62
	/* Select I2C pins PC2/PC3 */
	PORTMUX.TWIROUTEA &= 0x0A;
    9dea:	80 ee       	ldi	r24, 0xE0	; 224
    9dec:	95 e0       	ldi	r25, 0x05	; 5
    9dee:	20 ee       	ldi	r18, 0xE0	; 224
    9df0:	35 e0       	ldi	r19, 0x05	; 5
    9df2:	f9 01       	movw	r30, r18
    9df4:	25 81       	ldd	r18, Z+5	; 0x05
    9df6:	2a 70       	andi	r18, 0x0A	; 10
    9df8:	fc 01       	movw	r30, r24
    9dfa:	25 83       	std	Z+5, r18	; 0x05
	PORTMUX.TWIROUTEA |= 0x02;
    9dfc:	80 ee       	ldi	r24, 0xE0	; 224
    9dfe:	95 e0       	ldi	r25, 0x05	; 5
    9e00:	20 ee       	ldi	r18, 0xE0	; 224
    9e02:	35 e0       	ldi	r19, 0x05	; 5
    9e04:	f9 01       	movw	r30, r18
    9e06:	25 81       	ldd	r18, Z+5	; 0x05
    9e08:	22 60       	ori	r18, 0x02	; 2
    9e0a:	fc 01       	movw	r30, r24
    9e0c:	25 83       	std	Z+5, r18	; 0x05
	
	/* Host Baud Rate Control */
//	TWI0.MBAUD = TWI0_BAUD((I2C_SCL_FREQ), 0.3);
	TWI0.MBAUD = (uint8_t)TWI0_BAUD(I2C_SCL_FREQ, 0);
    9e0e:	80 e0       	ldi	r24, 0x00	; 0
    9e10:	99 e0       	ldi	r25, 0x09	; 9
    9e12:	23 e7       	ldi	r18, 0x73	; 115
    9e14:	fc 01       	movw	r30, r24
    9e16:	26 83       	std	Z+6, r18	; 0x06
	
	/* Enable TWI */
	TWI0.MCTRLA = TWI_ENABLE_bm;
    9e18:	80 e0       	ldi	r24, 0x00	; 0
    9e1a:	99 e0       	ldi	r25, 0x09	; 9
    9e1c:	21 e0       	ldi	r18, 0x01	; 1
    9e1e:	fc 01       	movw	r30, r24
    9e20:	23 83       	std	Z+3, r18	; 0x03
	
	/* Initialize the address register */
	TWI0.MADDR = 0x00;
    9e22:	80 e0       	ldi	r24, 0x00	; 0
    9e24:	99 e0       	ldi	r25, 0x09	; 9
    9e26:	fc 01       	movw	r30, r24
    9e28:	17 82       	std	Z+7, r1	; 0x07
	
	/* Initialize the data register */
	TWI0.MDATA = 0x00;
    9e2a:	80 e0       	ldi	r24, 0x00	; 0
    9e2c:	99 e0       	ldi	r25, 0x09	; 9
    9e2e:	fc 01       	movw	r30, r24
    9e30:	10 86       	std	Z+8, r1	; 0x08
	
	/* Set bus state idle */
	TWI0.MSTATUS = TWI_BUSSTATE_IDLE_gc;
    9e32:	80 e0       	ldi	r24, 0x00	; 0
    9e34:	99 e0       	ldi	r25, 0x09	; 9
    9e36:	21 e0       	ldi	r18, 0x01	; 1
    9e38:	fc 01       	movw	r30, r24
    9e3a:	25 83       	std	Z+5, r18	; 0x05
	/* Select I2C pins PC2/PC3 */
	
	PORTC_set_pin_pull_mode(2, PORT_PULL_UP);
    9e3c:	61 e0       	ldi	r22, 0x01	; 1
    9e3e:	82 e0       	ldi	r24, 0x02	; 2
    9e40:	0e 94 c0 4e 	call	0x9d80	; 0x9d80 <PORTC_set_pin_pull_mode>
	PORTC_set_pin_pull_mode(3, PORT_PULL_UP);
    9e44:	61 e0       	ldi	r22, 0x01	; 1
    9e46:	83 e0       	ldi	r24, 0x03	; 3
    9e48:	0e 94 c0 4e 	call	0x9d80	; 0x9d80 <PORTC_set_pin_pull_mode>
}
    9e4c:	00 00       	nop
    9e4e:	df 91       	pop	r29
    9e50:	cf 91       	pop	r28
    9e52:	08 95       	ret

00009e54 <_ZL11i2c_0_WaitWv>:

static uint8_t i2c_0_WaitW(void)
{
    9e54:	cf 93       	push	r28
    9e56:	df 93       	push	r29
    9e58:	1f 92       	push	r1
    9e5a:	cd b7       	in	r28, 0x3d	; 61
    9e5c:	de b7       	in	r29, 0x3e	; 62
	uint8_t state = I2C_INIT;
    9e5e:	19 82       	std	Y+1, r1	; 0x01
	
	g_i2c0_timeout_ticks = 300;
    9e60:	8c e2       	ldi	r24, 0x2C	; 44
    9e62:	91 e0       	ldi	r25, 0x01	; 1
    9e64:	80 93 28 40 	sts	0x4028, r24	; 0x804028 <g_i2c0_timeout_ticks>
    9e68:	90 93 29 40 	sts	0x4029, r25	; 0x804029 <g_i2c0_timeout_ticks+0x1>
	
	do
	{
		if(TWI0.MSTATUS & (TWI_WIF_bm | TWI_RIF_bm))
    9e6c:	80 e0       	ldi	r24, 0x00	; 0
    9e6e:	99 e0       	ldi	r25, 0x09	; 9
    9e70:	fc 01       	movw	r30, r24
    9e72:	85 81       	ldd	r24, Z+5	; 0x05
    9e74:	88 2f       	mov	r24, r24
    9e76:	90 e0       	ldi	r25, 0x00	; 0
    9e78:	80 7c       	andi	r24, 0xC0	; 192
    9e7a:	99 27       	eor	r25, r25
    9e7c:	21 e0       	ldi	r18, 0x01	; 1
    9e7e:	89 2b       	or	r24, r25
    9e80:	09 f4       	brne	.+2      	; 0x9e84 <_ZL11i2c_0_WaitWv+0x30>
    9e82:	20 e0       	ldi	r18, 0x00	; 0
    9e84:	22 23       	and	r18, r18
    9e86:	a1 f0       	breq	.+40     	; 0x9eb0 <_ZL11i2c_0_WaitWv+0x5c>
		{
			if(!(TWI0.MSTATUS & TWI_RXACK_bm))
    9e88:	80 e0       	ldi	r24, 0x00	; 0
    9e8a:	99 e0       	ldi	r25, 0x09	; 9
    9e8c:	fc 01       	movw	r30, r24
    9e8e:	85 81       	ldd	r24, Z+5	; 0x05
    9e90:	88 2f       	mov	r24, r24
    9e92:	90 e0       	ldi	r25, 0x00	; 0
    9e94:	80 71       	andi	r24, 0x10	; 16
    9e96:	99 27       	eor	r25, r25
    9e98:	21 e0       	ldi	r18, 0x01	; 1
    9e9a:	89 2b       	or	r24, r25
    9e9c:	09 f0       	breq	.+2      	; 0x9ea0 <_ZL11i2c_0_WaitWv+0x4c>
    9e9e:	20 e0       	ldi	r18, 0x00	; 0
    9ea0:	22 23       	and	r18, r18
    9ea2:	19 f0       	breq	.+6      	; 0x9eaa <_ZL11i2c_0_WaitWv+0x56>
			{
				/* client responded with ack - TWI goes to M1 state */
				state = I2C_ACKED;
    9ea4:	81 e0       	ldi	r24, 0x01	; 1
    9ea6:	89 83       	std	Y+1, r24	; 0x01
    9ea8:	13 c0       	rjmp	.+38     	; 0x9ed0 <_ZL11i2c_0_WaitWv+0x7c>
			}
			else
			{
				/* address sent but no ack received - TWI goes to M3 state */
				state = I2C_NACKED;
    9eaa:	82 e0       	ldi	r24, 0x02	; 2
    9eac:	89 83       	std	Y+1, r24	; 0x01
    9eae:	10 c0       	rjmp	.+32     	; 0x9ed0 <_ZL11i2c_0_WaitWv+0x7c>
			}
		}
		else if(TWI0.MSTATUS & (TWI_BUSERR_bm | TWI_ARBLOST_bm))
    9eb0:	80 e0       	ldi	r24, 0x00	; 0
    9eb2:	99 e0       	ldi	r25, 0x09	; 9
    9eb4:	fc 01       	movw	r30, r24
    9eb6:	85 81       	ldd	r24, Z+5	; 0x05
    9eb8:	88 2f       	mov	r24, r24
    9eba:	90 e0       	ldi	r25, 0x00	; 0
    9ebc:	8c 70       	andi	r24, 0x0C	; 12
    9ebe:	99 27       	eor	r25, r25
    9ec0:	21 e0       	ldi	r18, 0x01	; 1
    9ec2:	89 2b       	or	r24, r25
    9ec4:	09 f4       	brne	.+2      	; 0x9ec8 <_ZL11i2c_0_WaitWv+0x74>
    9ec6:	20 e0       	ldi	r18, 0x00	; 0
    9ec8:	22 23       	and	r18, r18
    9eca:	11 f0       	breq	.+4      	; 0x9ed0 <_ZL11i2c_0_WaitWv+0x7c>
		{
			/* get here only in case of bus error or arbitration lost - M4 state */
			state = I2C_ERROR;
    9ecc:	84 e0       	ldi	r24, 0x04	; 4
    9ece:	89 83       	std	Y+1, r24	; 0x01
		}
	} while(!state && g_i2c0_timeout_ticks);
    9ed0:	89 81       	ldd	r24, Y+1	; 0x01
    9ed2:	88 23       	and	r24, r24
    9ed4:	41 f4       	brne	.+16     	; 0x9ee6 <_ZL11i2c_0_WaitWv+0x92>
    9ed6:	80 91 28 40 	lds	r24, 0x4028	; 0x804028 <g_i2c0_timeout_ticks>
    9eda:	90 91 29 40 	lds	r25, 0x4029	; 0x804029 <g_i2c0_timeout_ticks+0x1>
    9ede:	89 2b       	or	r24, r25
    9ee0:	11 f0       	breq	.+4      	; 0x9ee6 <_ZL11i2c_0_WaitWv+0x92>
    9ee2:	81 e0       	ldi	r24, 0x01	; 1
    9ee4:	01 c0       	rjmp	.+2      	; 0x9ee8 <_ZL11i2c_0_WaitWv+0x94>
    9ee6:	80 e0       	ldi	r24, 0x00	; 0
{
	uint8_t state = I2C_INIT;
	
	g_i2c0_timeout_ticks = 300;
	
	do
    9ee8:	88 23       	and	r24, r24
    9eea:	09 f0       	breq	.+2      	; 0x9eee <_ZL11i2c_0_WaitWv+0x9a>
    9eec:	bf cf       	rjmp	.-130    	; 0x9e6c <_ZL11i2c_0_WaitWv+0x18>
			/* get here only in case of bus error or arbitration lost - M4 state */
			state = I2C_ERROR;
		}
	} while(!state && g_i2c0_timeout_ticks);
	
	if(!g_i2c0_timeout_ticks) 
    9eee:	80 91 28 40 	lds	r24, 0x4028	; 0x804028 <g_i2c0_timeout_ticks>
    9ef2:	90 91 29 40 	lds	r25, 0x4029	; 0x804029 <g_i2c0_timeout_ticks+0x1>
    9ef6:	21 e0       	ldi	r18, 0x01	; 1
    9ef8:	89 2b       	or	r24, r25
    9efa:	09 f0       	breq	.+2      	; 0x9efe <_ZL11i2c_0_WaitWv+0xaa>
    9efc:	20 e0       	ldi	r18, 0x00	; 0
    9efe:	22 23       	and	r18, r18
    9f00:	11 f0       	breq	.+4      	; 0x9f06 <_ZL11i2c_0_WaitWv+0xb2>
	{
		state = I2C_ERROR;
    9f02:	84 e0       	ldi	r24, 0x04	; 4
    9f04:	89 83       	std	Y+1, r24	; 0x01
	}
	
	return state;
    9f06:	89 81       	ldd	r24, Y+1	; 0x01
}
    9f08:	0f 90       	pop	r0
    9f0a:	df 91       	pop	r29
    9f0c:	cf 91       	pop	r28
    9f0e:	08 95       	ret

00009f10 <_ZL11i2c_0_WaitRv>:

static uint8_t i2c_0_WaitR(void)
{
    9f10:	cf 93       	push	r28
    9f12:	df 93       	push	r29
    9f14:	1f 92       	push	r1
    9f16:	cd b7       	in	r28, 0x3d	; 61
    9f18:	de b7       	in	r29, 0x3e	; 62
	uint8_t state = I2C_INIT;
    9f1a:	19 82       	std	Y+1, r1	; 0x01
	
	g_i2c0_timeout_ticks = 200;
    9f1c:	88 ec       	ldi	r24, 0xC8	; 200
    9f1e:	90 e0       	ldi	r25, 0x00	; 0
    9f20:	80 93 28 40 	sts	0x4028, r24	; 0x804028 <g_i2c0_timeout_ticks>
    9f24:	90 93 29 40 	sts	0x4029, r25	; 0x804029 <g_i2c0_timeout_ticks+0x1>
	
	do
	{
		if(TWI0.MSTATUS & (TWI_WIF_bm | TWI_RIF_bm))
    9f28:	80 e0       	ldi	r24, 0x00	; 0
    9f2a:	99 e0       	ldi	r25, 0x09	; 9
    9f2c:	fc 01       	movw	r30, r24
    9f2e:	85 81       	ldd	r24, Z+5	; 0x05
    9f30:	88 2f       	mov	r24, r24
    9f32:	90 e0       	ldi	r25, 0x00	; 0
    9f34:	80 7c       	andi	r24, 0xC0	; 192
    9f36:	99 27       	eor	r25, r25
    9f38:	21 e0       	ldi	r18, 0x01	; 1
    9f3a:	89 2b       	or	r24, r25
    9f3c:	09 f4       	brne	.+2      	; 0x9f40 <_ZL11i2c_0_WaitRv+0x30>
    9f3e:	20 e0       	ldi	r18, 0x00	; 0
    9f40:	22 23       	and	r18, r18
    9f42:	19 f0       	breq	.+6      	; 0x9f4a <_ZL11i2c_0_WaitRv+0x3a>
		{
			state = I2C_READY;
    9f44:	83 e0       	ldi	r24, 0x03	; 3
    9f46:	89 83       	std	Y+1, r24	; 0x01
    9f48:	10 c0       	rjmp	.+32     	; 0x9f6a <_ZL11i2c_0_WaitRv+0x5a>
		}
		else if(TWI0.MSTATUS & (TWI_BUSERR_bm | TWI_ARBLOST_bm))
    9f4a:	80 e0       	ldi	r24, 0x00	; 0
    9f4c:	99 e0       	ldi	r25, 0x09	; 9
    9f4e:	fc 01       	movw	r30, r24
    9f50:	85 81       	ldd	r24, Z+5	; 0x05
    9f52:	88 2f       	mov	r24, r24
    9f54:	90 e0       	ldi	r25, 0x00	; 0
    9f56:	8c 70       	andi	r24, 0x0C	; 12
    9f58:	99 27       	eor	r25, r25
    9f5a:	21 e0       	ldi	r18, 0x01	; 1
    9f5c:	89 2b       	or	r24, r25
    9f5e:	09 f4       	brne	.+2      	; 0x9f62 <_ZL11i2c_0_WaitRv+0x52>
    9f60:	20 e0       	ldi	r18, 0x00	; 0
    9f62:	22 23       	and	r18, r18
    9f64:	11 f0       	breq	.+4      	; 0x9f6a <_ZL11i2c_0_WaitRv+0x5a>
		{
			/* get here only in case of bus error or arbitration lost - M4 state */
			state = I2C_ERROR;
    9f66:	84 e0       	ldi	r24, 0x04	; 4
    9f68:	89 83       	std	Y+1, r24	; 0x01
		}
	} while(!state && g_i2c0_timeout_ticks);
    9f6a:	89 81       	ldd	r24, Y+1	; 0x01
    9f6c:	88 23       	and	r24, r24
    9f6e:	41 f4       	brne	.+16     	; 0x9f80 <_ZL11i2c_0_WaitRv+0x70>
    9f70:	80 91 28 40 	lds	r24, 0x4028	; 0x804028 <g_i2c0_timeout_ticks>
    9f74:	90 91 29 40 	lds	r25, 0x4029	; 0x804029 <g_i2c0_timeout_ticks+0x1>
    9f78:	89 2b       	or	r24, r25
    9f7a:	11 f0       	breq	.+4      	; 0x9f80 <_ZL11i2c_0_WaitRv+0x70>
    9f7c:	81 e0       	ldi	r24, 0x01	; 1
    9f7e:	01 c0       	rjmp	.+2      	; 0x9f82 <_ZL11i2c_0_WaitRv+0x72>
    9f80:	80 e0       	ldi	r24, 0x00	; 0
{
	uint8_t state = I2C_INIT;
	
	g_i2c0_timeout_ticks = 200;
	
	do
    9f82:	88 23       	and	r24, r24
    9f84:	09 f0       	breq	.+2      	; 0x9f88 <_ZL11i2c_0_WaitRv+0x78>
    9f86:	d0 cf       	rjmp	.-96     	; 0x9f28 <_ZL11i2c_0_WaitRv+0x18>
			/* get here only in case of bus error or arbitration lost - M4 state */
			state = I2C_ERROR;
		}
	} while(!state && g_i2c0_timeout_ticks);
	
	return state;
    9f88:	89 81       	ldd	r24, Y+1	; 0x01
}
    9f8a:	0f 90       	pop	r0
    9f8c:	df 91       	pop	r29
    9f8e:	cf 91       	pop	r28
    9f90:	08 95       	ret

00009f92 <I2C_0_SendData>:

/* Returns how many bytes have been sent, -1 means NACK at address, 0 means client ACKed to client address */
uint8_t I2C_0_SendData(uint8_t slaveAddr, uint8_t regAddr, uint8_t *pData, uint8_t len)
{
    9f92:	cf 93       	push	r28
    9f94:	df 93       	push	r29
    9f96:	cd b7       	in	r28, 0x3d	; 61
    9f98:	de b7       	in	r29, 0x3e	; 62
    9f9a:	26 97       	sbiw	r28, 0x06	; 6
    9f9c:	cd bf       	out	0x3d, r28	; 61
    9f9e:	de bf       	out	0x3e, r29	; 62
    9fa0:	8a 83       	std	Y+2, r24	; 0x02
    9fa2:	6b 83       	std	Y+3, r22	; 0x03
    9fa4:	4c 83       	std	Y+4, r20	; 0x04
    9fa6:	5d 83       	std	Y+5, r21	; 0x05
    9fa8:	2e 83       	std	Y+6, r18	; 0x06
	uint8_t retVal = (uint8_t) - 1;
    9faa:	8f ef       	ldi	r24, 0xFF	; 255
    9fac:	89 83       	std	Y+1, r24	; 0x01
	
	/* Send slave address */
	TWI0.MADDR = slaveAddr;
    9fae:	80 e0       	ldi	r24, 0x00	; 0
    9fb0:	99 e0       	ldi	r25, 0x09	; 9
    9fb2:	2a 81       	ldd	r18, Y+2	; 0x02
    9fb4:	fc 01       	movw	r30, r24
    9fb6:	27 83       	std	Z+7, r18	; 0x07
	if(i2c_0_WaitW() != I2C_ACKED)
    9fb8:	0e 94 2a 4f 	call	0x9e54	; 0x9e54 <_ZL11i2c_0_WaitWv>
    9fbc:	98 2f       	mov	r25, r24
    9fbe:	81 e0       	ldi	r24, 0x01	; 1
    9fc0:	91 30       	cpi	r25, 0x01	; 1
    9fc2:	09 f4       	brne	.+2      	; 0x9fc6 <I2C_0_SendData+0x34>
    9fc4:	80 e0       	ldi	r24, 0x00	; 0
    9fc6:	88 23       	and	r24, r24
    9fc8:	11 f0       	breq	.+4      	; 0x9fce <I2C_0_SendData+0x3c>
	{
		return retVal;
    9fca:	89 81       	ldd	r24, Y+1	; 0x01
    9fcc:	44 c0       	rjmp	.+136    	; 0xa056 <I2C_0_SendData+0xc4>
	}
	
	/* Send the register address */
	TWI0.MDATA = regAddr;
    9fce:	80 e0       	ldi	r24, 0x00	; 0
    9fd0:	99 e0       	ldi	r25, 0x09	; 9
    9fd2:	2b 81       	ldd	r18, Y+3	; 0x03
    9fd4:	fc 01       	movw	r30, r24
    9fd6:	20 87       	std	Z+8, r18	; 0x08
	if(i2c_0_WaitW() != I2C_ACKED)
    9fd8:	0e 94 2a 4f 	call	0x9e54	; 0x9e54 <_ZL11i2c_0_WaitWv>
    9fdc:	98 2f       	mov	r25, r24
    9fde:	81 e0       	ldi	r24, 0x01	; 1
    9fe0:	91 30       	cpi	r25, 0x01	; 1
    9fe2:	09 f4       	brne	.+2      	; 0x9fe6 <I2C_0_SendData+0x54>
    9fe4:	80 e0       	ldi	r24, 0x00	; 0
    9fe6:	88 23       	and	r24, r24
    9fe8:	11 f0       	breq	.+4      	; 0x9fee <I2C_0_SendData+0x5c>
	{
		return retVal;
    9fea:	89 81       	ldd	r24, Y+1	; 0x01
    9fec:	34 c0       	rjmp	.+104    	; 0xa056 <I2C_0_SendData+0xc4>
	}

	retVal = 0;
    9fee:	19 82       	std	Y+1, r1	; 0x01
	if((len != 0) && (pData != null))
    9ff0:	8e 81       	ldd	r24, Y+6	; 0x06
    9ff2:	88 23       	and	r24, r24
    9ff4:	79 f1       	breq	.+94     	; 0xa054 <I2C_0_SendData+0xc2>
    9ff6:	8c 81       	ldd	r24, Y+4	; 0x04
    9ff8:	9d 81       	ldd	r25, Y+5	; 0x05
    9ffa:	89 2b       	or	r24, r25
    9ffc:	59 f1       	breq	.+86     	; 0xa054 <I2C_0_SendData+0xc2>
	{
		while(len--)
    9ffe:	8e 81       	ldd	r24, Y+6	; 0x06
    a000:	9f ef       	ldi	r25, 0xFF	; 255
    a002:	98 0f       	add	r25, r24
    a004:	9e 83       	std	Y+6, r25	; 0x06
    a006:	91 e0       	ldi	r25, 0x01	; 1
    a008:	88 23       	and	r24, r24
    a00a:	09 f4       	brne	.+2      	; 0xa00e <I2C_0_SendData+0x7c>
    a00c:	90 e0       	ldi	r25, 0x00	; 0
    a00e:	99 23       	and	r25, r25
    a010:	09 f1       	breq	.+66     	; 0xa054 <I2C_0_SendData+0xc2>
		{
			TWI0.MDATA = *pData;
    a012:	80 e0       	ldi	r24, 0x00	; 0
    a014:	99 e0       	ldi	r25, 0x09	; 9
    a016:	2c 81       	ldd	r18, Y+4	; 0x04
    a018:	3d 81       	ldd	r19, Y+5	; 0x05
    a01a:	f9 01       	movw	r30, r18
    a01c:	20 81       	ld	r18, Z
    a01e:	fc 01       	movw	r30, r24
    a020:	20 87       	std	Z+8, r18	; 0x08
			if(i2c_0_WaitW() == I2C_ACKED)
    a022:	0e 94 2a 4f 	call	0x9e54	; 0x9e54 <_ZL11i2c_0_WaitWv>
    a026:	98 2f       	mov	r25, r24
    a028:	81 e0       	ldi	r24, 0x01	; 1
    a02a:	91 30       	cpi	r25, 0x01	; 1
    a02c:	09 f0       	breq	.+2      	; 0xa030 <I2C_0_SendData+0x9e>
    a02e:	80 e0       	ldi	r24, 0x00	; 0
    a030:	88 23       	and	r24, r24
    a032:	79 f0       	breq	.+30     	; 0xa052 <I2C_0_SendData+0xc0>
			{
				retVal++;
    a034:	89 81       	ldd	r24, Y+1	; 0x01
    a036:	8f 5f       	subi	r24, 0xFF	; 255
    a038:	89 83       	std	Y+1, r24	; 0x01
				pData++;
    a03a:	8c 81       	ldd	r24, Y+4	; 0x04
    a03c:	9d 81       	ldd	r25, Y+5	; 0x05
    a03e:	01 96       	adiw	r24, 0x01	; 1
    a040:	8c 83       	std	Y+4, r24	; 0x04
    a042:	9d 83       	std	Y+5, r25	; 0x05
				if(!len) I2C_0_EndSession();
    a044:	8e 81       	ldd	r24, Y+6	; 0x06
    a046:	88 23       	and	r24, r24
    a048:	11 f4       	brne	.+4      	; 0xa04e <I2C_0_SendData+0xbc>
    a04a:	0e 94 af 50 	call	0xa15e	; 0xa15e <I2C_0_EndSession>
				continue;
    a04e:	00 00       	nop
	}

	retVal = 0;
	if((len != 0) && (pData != null))
	{
		while(len--)
    a050:	d6 cf       	rjmp	.-84     	; 0x9ffe <I2C_0_SendData+0x6c>
				if(!len) I2C_0_EndSession();
				continue;
			}
			else // did not get ACK after client address
			{
				break;
    a052:	00 00       	nop
			}
		}
	}
	
	return retVal;
    a054:	89 81       	ldd	r24, Y+1	; 0x01
}
    a056:	26 96       	adiw	r28, 0x06	; 6
    a058:	cd bf       	out	0x3d, r28	; 61
    a05a:	de bf       	out	0x3e, r29	; 62
    a05c:	df 91       	pop	r29
    a05e:	cf 91       	pop	r28
    a060:	08 95       	ret

0000a062 <I2C_0_GetData>:

/* Returns how many bytes have been received, -1 means NACK at address */
uint8_t I2C_0_GetData(uint8_t slaveAddr, uint8_t regAddr, uint8_t *pData, uint8_t len)
{
    a062:	cf 93       	push	r28
    a064:	df 93       	push	r29
    a066:	cd b7       	in	r28, 0x3d	; 61
    a068:	de b7       	in	r29, 0x3e	; 62
    a06a:	26 97       	sbiw	r28, 0x06	; 6
    a06c:	cd bf       	out	0x3d, r28	; 61
    a06e:	de bf       	out	0x3e, r29	; 62
    a070:	8a 83       	std	Y+2, r24	; 0x02
    a072:	6b 83       	std	Y+3, r22	; 0x03
    a074:	4c 83       	std	Y+4, r20	; 0x04
    a076:	5d 83       	std	Y+5, r21	; 0x05
    a078:	2e 83       	std	Y+6, r18	; 0x06
	uint8_t retVal = (uint8_t) -1;
    a07a:	8f ef       	ldi	r24, 0xFF	; 255
    a07c:	89 83       	std	Y+1, r24	; 0x01
	
	/* Send the client address for write */
	TWI0.MADDR = slaveAddr;
    a07e:	80 e0       	ldi	r24, 0x00	; 0
    a080:	99 e0       	ldi	r25, 0x09	; 9
    a082:	2a 81       	ldd	r18, Y+2	; 0x02
    a084:	fc 01       	movw	r30, r24
    a086:	27 83       	std	Z+7, r18	; 0x07
	if(i2c_0_WaitW() != I2C_ACKED)
    a088:	0e 94 2a 4f 	call	0x9e54	; 0x9e54 <_ZL11i2c_0_WaitWv>
    a08c:	98 2f       	mov	r25, r24
    a08e:	81 e0       	ldi	r24, 0x01	; 1
    a090:	91 30       	cpi	r25, 0x01	; 1
    a092:	09 f4       	brne	.+2      	; 0xa096 <I2C_0_GetData+0x34>
    a094:	80 e0       	ldi	r24, 0x00	; 0
    a096:	88 23       	and	r24, r24
    a098:	11 f0       	breq	.+4      	; 0xa09e <I2C_0_GetData+0x3c>
	{
		return retVal;
    a09a:	89 81       	ldd	r24, Y+1	; 0x01
    a09c:	5a c0       	rjmp	.+180    	; 0xa152 <I2C_0_GetData+0xf0>
	}
	
	/* Send the register address */
	TWI0.MDATA = regAddr;
    a09e:	80 e0       	ldi	r24, 0x00	; 0
    a0a0:	99 e0       	ldi	r25, 0x09	; 9
    a0a2:	2b 81       	ldd	r18, Y+3	; 0x03
    a0a4:	fc 01       	movw	r30, r24
    a0a6:	20 87       	std	Z+8, r18	; 0x08
	if(i2c_0_WaitW() != I2C_ACKED)
    a0a8:	0e 94 2a 4f 	call	0x9e54	; 0x9e54 <_ZL11i2c_0_WaitWv>
    a0ac:	98 2f       	mov	r25, r24
    a0ae:	81 e0       	ldi	r24, 0x01	; 1
    a0b0:	91 30       	cpi	r25, 0x01	; 1
    a0b2:	09 f4       	brne	.+2      	; 0xa0b6 <I2C_0_GetData+0x54>
    a0b4:	80 e0       	ldi	r24, 0x00	; 0
    a0b6:	88 23       	and	r24, r24
    a0b8:	11 f0       	breq	.+4      	; 0xa0be <I2C_0_GetData+0x5c>
	{
		return retVal;
    a0ba:	89 81       	ldd	r24, Y+1	; 0x01
    a0bc:	4a c0       	rjmp	.+148    	; 0xa152 <I2C_0_GetData+0xf0>
	}
	
	/* Send the client address for read */
	TWI0.MADDR = slaveAddr | 0x01;
    a0be:	80 e0       	ldi	r24, 0x00	; 0
    a0c0:	99 e0       	ldi	r25, 0x09	; 9
    a0c2:	2a 81       	ldd	r18, Y+2	; 0x02
    a0c4:	21 60       	ori	r18, 0x01	; 1
    a0c6:	fc 01       	movw	r30, r24
    a0c8:	27 83       	std	Z+7, r18	; 0x07
	if(i2c_0_WaitW() != I2C_ACKED)
    a0ca:	0e 94 2a 4f 	call	0x9e54	; 0x9e54 <_ZL11i2c_0_WaitWv>
    a0ce:	98 2f       	mov	r25, r24
    a0d0:	81 e0       	ldi	r24, 0x01	; 1
    a0d2:	91 30       	cpi	r25, 0x01	; 1
    a0d4:	09 f4       	brne	.+2      	; 0xa0d8 <I2C_0_GetData+0x76>
    a0d6:	80 e0       	ldi	r24, 0x00	; 0
    a0d8:	88 23       	and	r24, r24
    a0da:	11 f0       	breq	.+4      	; 0xa0e0 <I2C_0_GetData+0x7e>
	{
		return retVal;
    a0dc:	89 81       	ldd	r24, Y+1	; 0x01
    a0de:	39 c0       	rjmp	.+114    	; 0xa152 <I2C_0_GetData+0xf0>
	}
	
	retVal = 0;
    a0e0:	19 82       	std	Y+1, r1	; 0x01
	if((len != 0) && (pData !=null ))
    a0e2:	8e 81       	ldd	r24, Y+6	; 0x06
    a0e4:	88 23       	and	r24, r24
    a0e6:	a1 f1       	breq	.+104    	; 0xa150 <I2C_0_GetData+0xee>
    a0e8:	8c 81       	ldd	r24, Y+4	; 0x04
    a0ea:	9d 81       	ldd	r25, Y+5	; 0x05
    a0ec:	89 2b       	or	r24, r25
    a0ee:	81 f1       	breq	.+96     	; 0xa150 <I2C_0_GetData+0xee>
	{
		while(len--)
    a0f0:	8e 81       	ldd	r24, Y+6	; 0x06
    a0f2:	9f ef       	ldi	r25, 0xFF	; 255
    a0f4:	98 0f       	add	r25, r24
    a0f6:	9e 83       	std	Y+6, r25	; 0x06
    a0f8:	91 e0       	ldi	r25, 0x01	; 1
    a0fa:	88 23       	and	r24, r24
    a0fc:	09 f4       	brne	.+2      	; 0xa100 <I2C_0_GetData+0x9e>
    a0fe:	90 e0       	ldi	r25, 0x00	; 0
    a100:	99 23       	and	r25, r25
    a102:	31 f1       	breq	.+76     	; 0xa150 <I2C_0_GetData+0xee>
		{
			if(i2c_0_WaitR() == I2C_READY)
    a104:	0e 94 88 4f 	call	0x9f10	; 0x9f10 <_ZL11i2c_0_WaitRv>
    a108:	98 2f       	mov	r25, r24
    a10a:	81 e0       	ldi	r24, 0x01	; 1
    a10c:	93 30       	cpi	r25, 0x03	; 3
    a10e:	09 f0       	breq	.+2      	; 0xa112 <I2C_0_GetData+0xb0>
    a110:	80 e0       	ldi	r24, 0x00	; 0
    a112:	88 23       	and	r24, r24
    a114:	e1 f0       	breq	.+56     	; 0xa14e <I2C_0_GetData+0xec>
			{
				*pData = TWI0.MDATA;
    a116:	80 e0       	ldi	r24, 0x00	; 0
    a118:	99 e0       	ldi	r25, 0x09	; 9
    a11a:	fc 01       	movw	r30, r24
    a11c:	20 85       	ldd	r18, Z+8	; 0x08
    a11e:	8c 81       	ldd	r24, Y+4	; 0x04
    a120:	9d 81       	ldd	r25, Y+5	; 0x05
    a122:	fc 01       	movw	r30, r24
    a124:	20 83       	st	Z, r18
				TWI0.MCTRLB = (len == 0)? TWI_ACKACT_bm | TWI_MCMD_STOP_gc : TWI_MCMD_RECVTRANS_gc;
    a126:	80 e0       	ldi	r24, 0x00	; 0
    a128:	99 e0       	ldi	r25, 0x09	; 9
    a12a:	2e 81       	ldd	r18, Y+6	; 0x06
    a12c:	22 23       	and	r18, r18
    a12e:	11 f4       	brne	.+4      	; 0xa134 <I2C_0_GetData+0xd2>
    a130:	27 e0       	ldi	r18, 0x07	; 7
    a132:	01 c0       	rjmp	.+2      	; 0xa136 <I2C_0_GetData+0xd4>
    a134:	22 e0       	ldi	r18, 0x02	; 2
    a136:	fc 01       	movw	r30, r24
    a138:	24 83       	std	Z+4, r18	; 0x04
				retVal++;
    a13a:	89 81       	ldd	r24, Y+1	; 0x01
    a13c:	8f 5f       	subi	r24, 0xFF	; 255
    a13e:	89 83       	std	Y+1, r24	; 0x01
				pData++;
    a140:	8c 81       	ldd	r24, Y+4	; 0x04
    a142:	9d 81       	ldd	r25, Y+5	; 0x05
    a144:	01 96       	adiw	r24, 0x01	; 1
    a146:	8c 83       	std	Y+4, r24	; 0x04
    a148:	9d 83       	std	Y+5, r25	; 0x05
				continue;
    a14a:	00 00       	nop
	}
	
	retVal = 0;
	if((len != 0) && (pData !=null ))
	{
		while(len--)
    a14c:	d1 cf       	rjmp	.-94     	; 0xa0f0 <I2C_0_GetData+0x8e>
				retVal++;
				pData++;
				continue;
			}
			else
			break;
    a14e:	00 00       	nop
		}
	}
	
	return retVal;
    a150:	89 81       	ldd	r24, Y+1	; 0x01
}
    a152:	26 96       	adiw	r28, 0x06	; 6
    a154:	cd bf       	out	0x3d, r28	; 61
    a156:	de bf       	out	0x3e, r29	; 62
    a158:	df 91       	pop	r29
    a15a:	cf 91       	pop	r28
    a15c:	08 95       	ret

0000a15e <I2C_0_EndSession>:

void I2C_0_EndSession(void)
{
    a15e:	cf 93       	push	r28
    a160:	df 93       	push	r29
    a162:	cd b7       	in	r28, 0x3d	; 61
    a164:	de b7       	in	r29, 0x3e	; 62
	TWI0.MCTRLB = TWI_MCMD_STOP_gc;
    a166:	80 e0       	ldi	r24, 0x00	; 0
    a168:	99 e0       	ldi	r25, 0x09	; 9
    a16a:	23 e0       	ldi	r18, 0x03	; 3
    a16c:	fc 01       	movw	r30, r24
    a16e:	24 83       	std	Z+4, r18	; 0x04
}
    a170:	00 00       	nop
    a172:	df 91       	pop	r29
    a174:	cf 91       	pop	r28
    a176:	08 95       	ret

0000a178 <I2C_1_Init>:
/* I2C_1                                                               */
/************************************************************************/


void I2C_1_Init(void)
{
    a178:	cf 93       	push	r28
    a17a:	df 93       	push	r29
    a17c:	cd b7       	in	r28, 0x3d	; 61
    a17e:	de b7       	in	r29, 0x3e	; 62
	/* Select I2C pins PB2/PB3 */
	PORTMUX.TWIROUTEA &= 0x03;
    a180:	80 ee       	ldi	r24, 0xE0	; 224
    a182:	95 e0       	ldi	r25, 0x05	; 5
    a184:	20 ee       	ldi	r18, 0xE0	; 224
    a186:	35 e0       	ldi	r19, 0x05	; 5
    a188:	f9 01       	movw	r30, r18
    a18a:	25 81       	ldd	r18, Z+5	; 0x05
    a18c:	23 70       	andi	r18, 0x03	; 3
    a18e:	fc 01       	movw	r30, r24
    a190:	25 83       	std	Z+5, r18	; 0x05
	PORTMUX.TWIROUTEA |= 0x08;
    a192:	80 ee       	ldi	r24, 0xE0	; 224
    a194:	95 e0       	ldi	r25, 0x05	; 5
    a196:	20 ee       	ldi	r18, 0xE0	; 224
    a198:	35 e0       	ldi	r19, 0x05	; 5
    a19a:	f9 01       	movw	r30, r18
    a19c:	25 81       	ldd	r18, Z+5	; 0x05
    a19e:	28 60       	ori	r18, 0x08	; 8
    a1a0:	fc 01       	movw	r30, r24
    a1a2:	25 83       	std	Z+5, r18	; 0x05
	
	/* Host Baud Rate Control */
//	TWI1.MBAUD = TWI1_BAUD((I2C_SCL_FREQ), 0.3);
	TWI1.MBAUD = (uint8_t)TWI0_BAUD(I2C_SCL_FREQ, 0);
    a1a4:	80 e2       	ldi	r24, 0x20	; 32
    a1a6:	99 e0       	ldi	r25, 0x09	; 9
    a1a8:	23 e7       	ldi	r18, 0x73	; 115
    a1aa:	fc 01       	movw	r30, r24
    a1ac:	26 83       	std	Z+6, r18	; 0x06
		
	/* Enable TWI */
	TWI1.MCTRLA = TWI_ENABLE_bm;
    a1ae:	80 e2       	ldi	r24, 0x20	; 32
    a1b0:	99 e0       	ldi	r25, 0x09	; 9
    a1b2:	21 e0       	ldi	r18, 0x01	; 1
    a1b4:	fc 01       	movw	r30, r24
    a1b6:	23 83       	std	Z+3, r18	; 0x03
	
	/* Initialize the address register */
	TWI1.MADDR = 0x00;
    a1b8:	80 e2       	ldi	r24, 0x20	; 32
    a1ba:	99 e0       	ldi	r25, 0x09	; 9
    a1bc:	fc 01       	movw	r30, r24
    a1be:	17 82       	std	Z+7, r1	; 0x07
	
	/* Initialize the data register */
	TWI1.MDATA = 0x00;
    a1c0:	80 e2       	ldi	r24, 0x20	; 32
    a1c2:	99 e0       	ldi	r25, 0x09	; 9
    a1c4:	fc 01       	movw	r30, r24
    a1c6:	10 86       	std	Z+8, r1	; 0x08
	
	/* Set bus state idle */
	TWI1.MSTATUS = TWI_BUSSTATE_IDLE_gc;
    a1c8:	80 e2       	ldi	r24, 0x20	; 32
    a1ca:	99 e0       	ldi	r25, 0x09	; 9
    a1cc:	21 e0       	ldi	r18, 0x01	; 1
    a1ce:	fc 01       	movw	r30, r24
    a1d0:	25 83       	std	Z+5, r18	; 0x05
	
	PORTB_set_pin_pull_mode(2, PORT_PULL_UP);
    a1d2:	61 e0       	ldi	r22, 0x01	; 1
    a1d4:	82 e0       	ldi	r24, 0x02	; 2
    a1d6:	0e 94 8f 4e 	call	0x9d1e	; 0x9d1e <PORTB_set_pin_pull_mode>
	PORTB_set_pin_pull_mode(3, PORT_PULL_UP);
    a1da:	61 e0       	ldi	r22, 0x01	; 1
    a1dc:	83 e0       	ldi	r24, 0x03	; 3
    a1de:	0e 94 8f 4e 	call	0x9d1e	; 0x9d1e <PORTB_set_pin_pull_mode>
}
    a1e2:	00 00       	nop
    a1e4:	df 91       	pop	r29
    a1e6:	cf 91       	pop	r28
    a1e8:	08 95       	ret

0000a1ea <_ZL11i2c_1_WaitWv>:

static uint8_t i2c_1_WaitW(void)
{
    a1ea:	cf 93       	push	r28
    a1ec:	df 93       	push	r29
    a1ee:	00 d0       	rcall	.+0      	; 0xa1f0 <_ZL11i2c_1_WaitWv+0x6>
    a1f0:	cd b7       	in	r28, 0x3d	; 61
    a1f2:	de b7       	in	r29, 0x3e	; 62
	uint8_t state = I2C_INIT;
    a1f4:	19 82       	std	Y+1, r1	; 0x01
	
	g_i2c1_timeout_ticks = 200;
    a1f6:	88 ec       	ldi	r24, 0xC8	; 200
    a1f8:	90 e0       	ldi	r25, 0x00	; 0
    a1fa:	80 93 2a 40 	sts	0x402A, r24	; 0x80402a <g_i2c1_timeout_ticks>
    a1fe:	90 93 2b 40 	sts	0x402B, r25	; 0x80402b <g_i2c1_timeout_ticks+0x1>
	
	do
	{
		uint8_t stat = TWI1.MSTATUS;
    a202:	80 e2       	ldi	r24, 0x20	; 32
    a204:	99 e0       	ldi	r25, 0x09	; 9
    a206:	fc 01       	movw	r30, r24
    a208:	85 81       	ldd	r24, Z+5	; 0x05
    a20a:	8a 83       	std	Y+2, r24	; 0x02
		if(stat & (TWI_WIF_bm | TWI_RIF_bm))
    a20c:	8a 81       	ldd	r24, Y+2	; 0x02
    a20e:	88 2f       	mov	r24, r24
    a210:	90 e0       	ldi	r25, 0x00	; 0
    a212:	80 7c       	andi	r24, 0xC0	; 192
    a214:	99 27       	eor	r25, r25
    a216:	89 2b       	or	r24, r25
    a218:	69 f0       	breq	.+26     	; 0xa234 <_ZL11i2c_1_WaitWv+0x4a>
		{
			if(!(stat & TWI_RXACK_bm))
    a21a:	8a 81       	ldd	r24, Y+2	; 0x02
    a21c:	88 2f       	mov	r24, r24
    a21e:	90 e0       	ldi	r25, 0x00	; 0
    a220:	80 71       	andi	r24, 0x10	; 16
    a222:	99 27       	eor	r25, r25
    a224:	89 2b       	or	r24, r25
    a226:	19 f4       	brne	.+6      	; 0xa22e <_ZL11i2c_1_WaitWv+0x44>
			{
				/* client responded with ack - TWI goes to M1 state */
				state = I2C_ACKED;
    a228:	81 e0       	ldi	r24, 0x01	; 1
    a22a:	89 83       	std	Y+1, r24	; 0x01
    a22c:	0c c0       	rjmp	.+24     	; 0xa246 <_ZL11i2c_1_WaitWv+0x5c>
			}
			else
			{
				/* address sent but no ack received - TWI goes to M3 state */
				state = I2C_NACKED;
    a22e:	82 e0       	ldi	r24, 0x02	; 2
    a230:	89 83       	std	Y+1, r24	; 0x01
    a232:	09 c0       	rjmp	.+18     	; 0xa246 <_ZL11i2c_1_WaitWv+0x5c>
			}
		}
		else if(stat & (TWI_BUSERR_bm | TWI_ARBLOST_bm))
    a234:	8a 81       	ldd	r24, Y+2	; 0x02
    a236:	88 2f       	mov	r24, r24
    a238:	90 e0       	ldi	r25, 0x00	; 0
    a23a:	8c 70       	andi	r24, 0x0C	; 12
    a23c:	99 27       	eor	r25, r25
    a23e:	89 2b       	or	r24, r25
    a240:	11 f0       	breq	.+4      	; 0xa246 <_ZL11i2c_1_WaitWv+0x5c>
		{
			/* get here only in case of bus error or arbitration lost - M4 state */
			state = I2C_ERROR;
    a242:	84 e0       	ldi	r24, 0x04	; 4
    a244:	89 83       	std	Y+1, r24	; 0x01
		}
	} while(!state && g_i2c1_timeout_ticks);
    a246:	89 81       	ldd	r24, Y+1	; 0x01
    a248:	88 23       	and	r24, r24
    a24a:	41 f4       	brne	.+16     	; 0xa25c <_ZL11i2c_1_WaitWv+0x72>
    a24c:	80 91 2a 40 	lds	r24, 0x402A	; 0x80402a <g_i2c1_timeout_ticks>
    a250:	90 91 2b 40 	lds	r25, 0x402B	; 0x80402b <g_i2c1_timeout_ticks+0x1>
    a254:	89 2b       	or	r24, r25
    a256:	11 f0       	breq	.+4      	; 0xa25c <_ZL11i2c_1_WaitWv+0x72>
    a258:	81 e0       	ldi	r24, 0x01	; 1
    a25a:	01 c0       	rjmp	.+2      	; 0xa25e <_ZL11i2c_1_WaitWv+0x74>
    a25c:	80 e0       	ldi	r24, 0x00	; 0
{
	uint8_t state = I2C_INIT;
	
	g_i2c1_timeout_ticks = 200;
	
	do
    a25e:	88 23       	and	r24, r24
    a260:	09 f0       	breq	.+2      	; 0xa264 <_ZL11i2c_1_WaitWv+0x7a>
    a262:	cf cf       	rjmp	.-98     	; 0xa202 <_ZL11i2c_1_WaitWv+0x18>
			/* get here only in case of bus error or arbitration lost - M4 state */
			state = I2C_ERROR;
		}
	} while(!state && g_i2c1_timeout_ticks);
	
	return state;
    a264:	89 81       	ldd	r24, Y+1	; 0x01
}
    a266:	0f 90       	pop	r0
    a268:	0f 90       	pop	r0
    a26a:	df 91       	pop	r29
    a26c:	cf 91       	pop	r28
    a26e:	08 95       	ret

0000a270 <_ZL11I2C_1_WaitRv>:

static uint8_t I2C_1_WaitR(void)
{
    a270:	cf 93       	push	r28
    a272:	df 93       	push	r29
    a274:	1f 92       	push	r1
    a276:	cd b7       	in	r28, 0x3d	; 61
    a278:	de b7       	in	r29, 0x3e	; 62
	uint8_t state = I2C_INIT;
    a27a:	19 82       	std	Y+1, r1	; 0x01
	
	g_i2c0_timeout_ticks = 200;
    a27c:	88 ec       	ldi	r24, 0xC8	; 200
    a27e:	90 e0       	ldi	r25, 0x00	; 0
    a280:	80 93 28 40 	sts	0x4028, r24	; 0x804028 <g_i2c0_timeout_ticks>
    a284:	90 93 29 40 	sts	0x4029, r25	; 0x804029 <g_i2c0_timeout_ticks+0x1>
	
	do
	{
		if(TWI1.MSTATUS & (TWI_WIF_bm | TWI_RIF_bm))
    a288:	80 e2       	ldi	r24, 0x20	; 32
    a28a:	99 e0       	ldi	r25, 0x09	; 9
    a28c:	fc 01       	movw	r30, r24
    a28e:	85 81       	ldd	r24, Z+5	; 0x05
    a290:	88 2f       	mov	r24, r24
    a292:	90 e0       	ldi	r25, 0x00	; 0
    a294:	80 7c       	andi	r24, 0xC0	; 192
    a296:	99 27       	eor	r25, r25
    a298:	21 e0       	ldi	r18, 0x01	; 1
    a29a:	89 2b       	or	r24, r25
    a29c:	09 f4       	brne	.+2      	; 0xa2a0 <_ZL11I2C_1_WaitRv+0x30>
    a29e:	20 e0       	ldi	r18, 0x00	; 0
    a2a0:	22 23       	and	r18, r18
    a2a2:	19 f0       	breq	.+6      	; 0xa2aa <_ZL11I2C_1_WaitRv+0x3a>
		{
			state = I2C_READY;
    a2a4:	83 e0       	ldi	r24, 0x03	; 3
    a2a6:	89 83       	std	Y+1, r24	; 0x01
    a2a8:	10 c0       	rjmp	.+32     	; 0xa2ca <_ZL11I2C_1_WaitRv+0x5a>
		}
		else if(TWI1.MSTATUS & (TWI_BUSERR_bm | TWI_ARBLOST_bm))
    a2aa:	80 e2       	ldi	r24, 0x20	; 32
    a2ac:	99 e0       	ldi	r25, 0x09	; 9
    a2ae:	fc 01       	movw	r30, r24
    a2b0:	85 81       	ldd	r24, Z+5	; 0x05
    a2b2:	88 2f       	mov	r24, r24
    a2b4:	90 e0       	ldi	r25, 0x00	; 0
    a2b6:	8c 70       	andi	r24, 0x0C	; 12
    a2b8:	99 27       	eor	r25, r25
    a2ba:	21 e0       	ldi	r18, 0x01	; 1
    a2bc:	89 2b       	or	r24, r25
    a2be:	09 f4       	brne	.+2      	; 0xa2c2 <_ZL11I2C_1_WaitRv+0x52>
    a2c0:	20 e0       	ldi	r18, 0x00	; 0
    a2c2:	22 23       	and	r18, r18
    a2c4:	11 f0       	breq	.+4      	; 0xa2ca <_ZL11I2C_1_WaitRv+0x5a>
		{
			/* get here only in case of bus error or arbitration lost - M4 state */
			state = I2C_ERROR;
    a2c6:	84 e0       	ldi	r24, 0x04	; 4
    a2c8:	89 83       	std	Y+1, r24	; 0x01
		}
	} while(!state && g_i2c0_timeout_ticks);
    a2ca:	89 81       	ldd	r24, Y+1	; 0x01
    a2cc:	88 23       	and	r24, r24
    a2ce:	41 f4       	brne	.+16     	; 0xa2e0 <_ZL11I2C_1_WaitRv+0x70>
    a2d0:	80 91 28 40 	lds	r24, 0x4028	; 0x804028 <g_i2c0_timeout_ticks>
    a2d4:	90 91 29 40 	lds	r25, 0x4029	; 0x804029 <g_i2c0_timeout_ticks+0x1>
    a2d8:	89 2b       	or	r24, r25
    a2da:	11 f0       	breq	.+4      	; 0xa2e0 <_ZL11I2C_1_WaitRv+0x70>
    a2dc:	81 e0       	ldi	r24, 0x01	; 1
    a2de:	01 c0       	rjmp	.+2      	; 0xa2e2 <_ZL11I2C_1_WaitRv+0x72>
    a2e0:	80 e0       	ldi	r24, 0x00	; 0
{
	uint8_t state = I2C_INIT;
	
	g_i2c0_timeout_ticks = 200;
	
	do
    a2e2:	88 23       	and	r24, r24
    a2e4:	09 f0       	breq	.+2      	; 0xa2e8 <_ZL11I2C_1_WaitRv+0x78>
    a2e6:	d0 cf       	rjmp	.-96     	; 0xa288 <_ZL11I2C_1_WaitRv+0x18>
			/* get here only in case of bus error or arbitration lost - M4 state */
			state = I2C_ERROR;
		}
	} while(!state && g_i2c0_timeout_ticks);
	
	return state;
    a2e8:	89 81       	ldd	r24, Y+1	; 0x01
}
    a2ea:	0f 90       	pop	r0
    a2ec:	df 91       	pop	r29
    a2ee:	cf 91       	pop	r28
    a2f0:	08 95       	ret

0000a2f2 <I2C_1_SendData>:

/* Returns how many bytes have been sent, -1 means NACK at address, 0 means client ACKed to client address */
uint8_t I2C_1_SendData(uint8_t slaveAddr, uint8_t regAddr, uint8_t *pData, uint8_t len)
{
    a2f2:	cf 93       	push	r28
    a2f4:	df 93       	push	r29
    a2f6:	cd b7       	in	r28, 0x3d	; 61
    a2f8:	de b7       	in	r29, 0x3e	; 62
    a2fa:	26 97       	sbiw	r28, 0x06	; 6
    a2fc:	cd bf       	out	0x3d, r28	; 61
    a2fe:	de bf       	out	0x3e, r29	; 62
    a300:	8a 83       	std	Y+2, r24	; 0x02
    a302:	6b 83       	std	Y+3, r22	; 0x03
    a304:	4c 83       	std	Y+4, r20	; 0x04
    a306:	5d 83       	std	Y+5, r21	; 0x05
    a308:	2e 83       	std	Y+6, r18	; 0x06
	uint8_t retVal = (uint8_t) - 1;
    a30a:	8f ef       	ldi	r24, 0xFF	; 255
    a30c:	89 83       	std	Y+1, r24	; 0x01
	
	/* Send the slave address */
	TWI1.MADDR = slaveAddr & ~0x01;
    a30e:	80 e2       	ldi	r24, 0x20	; 32
    a310:	99 e0       	ldi	r25, 0x09	; 9
    a312:	2a 81       	ldd	r18, Y+2	; 0x02
    a314:	2e 7f       	andi	r18, 0xFE	; 254
    a316:	fc 01       	movw	r30, r24
    a318:	27 83       	std	Z+7, r18	; 0x07
	if(i2c_1_WaitW() != I2C_ACKED)
    a31a:	0e 94 f5 50 	call	0xa1ea	; 0xa1ea <_ZL11i2c_1_WaitWv>
    a31e:	98 2f       	mov	r25, r24
    a320:	81 e0       	ldi	r24, 0x01	; 1
    a322:	91 30       	cpi	r25, 0x01	; 1
    a324:	09 f4       	brne	.+2      	; 0xa328 <I2C_1_SendData+0x36>
    a326:	80 e0       	ldi	r24, 0x00	; 0
    a328:	88 23       	and	r24, r24
    a32a:	11 f0       	breq	.+4      	; 0xa330 <I2C_1_SendData+0x3e>
	{
		return retVal;
    a32c:	89 81       	ldd	r24, Y+1	; 0x01
    a32e:	44 c0       	rjmp	.+136    	; 0xa3b8 <I2C_1_SendData+0xc6>
	}
	
	/* Send the register address */
	TWI1.MDATA = regAddr;	
    a330:	80 e2       	ldi	r24, 0x20	; 32
    a332:	99 e0       	ldi	r25, 0x09	; 9
    a334:	2b 81       	ldd	r18, Y+3	; 0x03
    a336:	fc 01       	movw	r30, r24
    a338:	20 87       	std	Z+8, r18	; 0x08
	if(i2c_1_WaitW() != I2C_ACKED)
    a33a:	0e 94 f5 50 	call	0xa1ea	; 0xa1ea <_ZL11i2c_1_WaitWv>
    a33e:	98 2f       	mov	r25, r24
    a340:	81 e0       	ldi	r24, 0x01	; 1
    a342:	91 30       	cpi	r25, 0x01	; 1
    a344:	09 f4       	brne	.+2      	; 0xa348 <I2C_1_SendData+0x56>
    a346:	80 e0       	ldi	r24, 0x00	; 0
    a348:	88 23       	and	r24, r24
    a34a:	11 f0       	breq	.+4      	; 0xa350 <I2C_1_SendData+0x5e>
	{
		return retVal;
    a34c:	89 81       	ldd	r24, Y+1	; 0x01
    a34e:	34 c0       	rjmp	.+104    	; 0xa3b8 <I2C_1_SendData+0xc6>
	}	

	retVal = 0;
    a350:	19 82       	std	Y+1, r1	; 0x01
	if((len != 0) && (pData != null))
    a352:	8e 81       	ldd	r24, Y+6	; 0x06
    a354:	88 23       	and	r24, r24
    a356:	79 f1       	breq	.+94     	; 0xa3b6 <I2C_1_SendData+0xc4>
    a358:	8c 81       	ldd	r24, Y+4	; 0x04
    a35a:	9d 81       	ldd	r25, Y+5	; 0x05
    a35c:	89 2b       	or	r24, r25
    a35e:	59 f1       	breq	.+86     	; 0xa3b6 <I2C_1_SendData+0xc4>
	{
		while(len--)
    a360:	8e 81       	ldd	r24, Y+6	; 0x06
    a362:	9f ef       	ldi	r25, 0xFF	; 255
    a364:	98 0f       	add	r25, r24
    a366:	9e 83       	std	Y+6, r25	; 0x06
    a368:	91 e0       	ldi	r25, 0x01	; 1
    a36a:	88 23       	and	r24, r24
    a36c:	09 f4       	brne	.+2      	; 0xa370 <I2C_1_SendData+0x7e>
    a36e:	90 e0       	ldi	r25, 0x00	; 0
    a370:	99 23       	and	r25, r25
    a372:	09 f1       	breq	.+66     	; 0xa3b6 <I2C_1_SendData+0xc4>
		{
			TWI1.MDATA = *pData;
    a374:	80 e2       	ldi	r24, 0x20	; 32
    a376:	99 e0       	ldi	r25, 0x09	; 9
    a378:	2c 81       	ldd	r18, Y+4	; 0x04
    a37a:	3d 81       	ldd	r19, Y+5	; 0x05
    a37c:	f9 01       	movw	r30, r18
    a37e:	20 81       	ld	r18, Z
    a380:	fc 01       	movw	r30, r24
    a382:	20 87       	std	Z+8, r18	; 0x08
			if(i2c_1_WaitW() == I2C_ACKED)
    a384:	0e 94 f5 50 	call	0xa1ea	; 0xa1ea <_ZL11i2c_1_WaitWv>
    a388:	98 2f       	mov	r25, r24
    a38a:	81 e0       	ldi	r24, 0x01	; 1
    a38c:	91 30       	cpi	r25, 0x01	; 1
    a38e:	09 f0       	breq	.+2      	; 0xa392 <I2C_1_SendData+0xa0>
    a390:	80 e0       	ldi	r24, 0x00	; 0
    a392:	88 23       	and	r24, r24
    a394:	79 f0       	breq	.+30     	; 0xa3b4 <I2C_1_SendData+0xc2>
			{
				retVal++;
    a396:	89 81       	ldd	r24, Y+1	; 0x01
    a398:	8f 5f       	subi	r24, 0xFF	; 255
    a39a:	89 83       	std	Y+1, r24	; 0x01
				pData++;
    a39c:	8c 81       	ldd	r24, Y+4	; 0x04
    a39e:	9d 81       	ldd	r25, Y+5	; 0x05
    a3a0:	01 96       	adiw	r24, 0x01	; 1
    a3a2:	8c 83       	std	Y+4, r24	; 0x04
    a3a4:	9d 83       	std	Y+5, r25	; 0x05
				if(!len) I2C_1_EndSession();
    a3a6:	8e 81       	ldd	r24, Y+6	; 0x06
    a3a8:	88 23       	and	r24, r24
    a3aa:	11 f4       	brne	.+4      	; 0xa3b0 <I2C_1_SendData+0xbe>
    a3ac:	0e 94 60 52 	call	0xa4c0	; 0xa4c0 <I2C_1_EndSession>
				continue;
    a3b0:	00 00       	nop
	}	

	retVal = 0;
	if((len != 0) && (pData != null))
	{
		while(len--)
    a3b2:	d6 cf       	rjmp	.-84     	; 0xa360 <I2C_1_SendData+0x6e>
				if(!len) I2C_1_EndSession();
				continue;
			}
			else // did not get ACK after client address
			{
				break;
    a3b4:	00 00       	nop
			}
		}
	}
	
	return retVal;
    a3b6:	89 81       	ldd	r24, Y+1	; 0x01
}
    a3b8:	26 96       	adiw	r28, 0x06	; 6
    a3ba:	cd bf       	out	0x3d, r28	; 61
    a3bc:	de bf       	out	0x3e, r29	; 62
    a3be:	df 91       	pop	r29
    a3c0:	cf 91       	pop	r28
    a3c2:	08 95       	ret

0000a3c4 <I2C_1_GetData>:


/* Returns how many bytes have been received, -1 means NACK at address */
uint8_t I2C_1_GetData(uint8_t slaveAddr, uint8_t regAddr, uint8_t *pData, uint8_t len)
{
    a3c4:	cf 93       	push	r28
    a3c6:	df 93       	push	r29
    a3c8:	cd b7       	in	r28, 0x3d	; 61
    a3ca:	de b7       	in	r29, 0x3e	; 62
    a3cc:	26 97       	sbiw	r28, 0x06	; 6
    a3ce:	cd bf       	out	0x3d, r28	; 61
    a3d0:	de bf       	out	0x3e, r29	; 62
    a3d2:	8a 83       	std	Y+2, r24	; 0x02
    a3d4:	6b 83       	std	Y+3, r22	; 0x03
    a3d6:	4c 83       	std	Y+4, r20	; 0x04
    a3d8:	5d 83       	std	Y+5, r21	; 0x05
    a3da:	2e 83       	std	Y+6, r18	; 0x06
	uint8_t retVal = (uint8_t) -1;
    a3dc:	8f ef       	ldi	r24, 0xFF	; 255
    a3de:	89 83       	std	Y+1, r24	; 0x01
	
	/* Send the client address for write */
	TWI1.MADDR = slaveAddr;
    a3e0:	80 e2       	ldi	r24, 0x20	; 32
    a3e2:	99 e0       	ldi	r25, 0x09	; 9
    a3e4:	2a 81       	ldd	r18, Y+2	; 0x02
    a3e6:	fc 01       	movw	r30, r24
    a3e8:	27 83       	std	Z+7, r18	; 0x07
	if(i2c_1_WaitW() != I2C_ACKED)
    a3ea:	0e 94 f5 50 	call	0xa1ea	; 0xa1ea <_ZL11i2c_1_WaitWv>
    a3ee:	98 2f       	mov	r25, r24
    a3f0:	81 e0       	ldi	r24, 0x01	; 1
    a3f2:	91 30       	cpi	r25, 0x01	; 1
    a3f4:	09 f4       	brne	.+2      	; 0xa3f8 <I2C_1_GetData+0x34>
    a3f6:	80 e0       	ldi	r24, 0x00	; 0
    a3f8:	88 23       	and	r24, r24
    a3fa:	11 f0       	breq	.+4      	; 0xa400 <I2C_1_GetData+0x3c>
	{
		return retVal;
    a3fc:	89 81       	ldd	r24, Y+1	; 0x01
    a3fe:	5a c0       	rjmp	.+180    	; 0xa4b4 <I2C_1_GetData+0xf0>
	}
	
	/* Send the register address */
	TWI1.MDATA = regAddr;	
    a400:	80 e2       	ldi	r24, 0x20	; 32
    a402:	99 e0       	ldi	r25, 0x09	; 9
    a404:	2b 81       	ldd	r18, Y+3	; 0x03
    a406:	fc 01       	movw	r30, r24
    a408:	20 87       	std	Z+8, r18	; 0x08
	if(i2c_1_WaitW() != I2C_ACKED)
    a40a:	0e 94 f5 50 	call	0xa1ea	; 0xa1ea <_ZL11i2c_1_WaitWv>
    a40e:	98 2f       	mov	r25, r24
    a410:	81 e0       	ldi	r24, 0x01	; 1
    a412:	91 30       	cpi	r25, 0x01	; 1
    a414:	09 f4       	brne	.+2      	; 0xa418 <I2C_1_GetData+0x54>
    a416:	80 e0       	ldi	r24, 0x00	; 0
    a418:	88 23       	and	r24, r24
    a41a:	11 f0       	breq	.+4      	; 0xa420 <I2C_1_GetData+0x5c>
	{
		return retVal;
    a41c:	89 81       	ldd	r24, Y+1	; 0x01
    a41e:	4a c0       	rjmp	.+148    	; 0xa4b4 <I2C_1_GetData+0xf0>
	}
	
	/* Send the client address for read */
	TWI1.MADDR = slaveAddr | 0x01;
    a420:	80 e2       	ldi	r24, 0x20	; 32
    a422:	99 e0       	ldi	r25, 0x09	; 9
    a424:	2a 81       	ldd	r18, Y+2	; 0x02
    a426:	21 60       	ori	r18, 0x01	; 1
    a428:	fc 01       	movw	r30, r24
    a42a:	27 83       	std	Z+7, r18	; 0x07
	if(i2c_1_WaitW() != I2C_ACKED)
    a42c:	0e 94 f5 50 	call	0xa1ea	; 0xa1ea <_ZL11i2c_1_WaitWv>
    a430:	98 2f       	mov	r25, r24
    a432:	81 e0       	ldi	r24, 0x01	; 1
    a434:	91 30       	cpi	r25, 0x01	; 1
    a436:	09 f4       	brne	.+2      	; 0xa43a <I2C_1_GetData+0x76>
    a438:	80 e0       	ldi	r24, 0x00	; 0
    a43a:	88 23       	and	r24, r24
    a43c:	11 f0       	breq	.+4      	; 0xa442 <I2C_1_GetData+0x7e>
	{
		return retVal;	
    a43e:	89 81       	ldd	r24, Y+1	; 0x01
    a440:	39 c0       	rjmp	.+114    	; 0xa4b4 <I2C_1_GetData+0xf0>
	}
	
	retVal = 0;
    a442:	19 82       	std	Y+1, r1	; 0x01
	if((len != 0) && (pData !=null ))
    a444:	8e 81       	ldd	r24, Y+6	; 0x06
    a446:	88 23       	and	r24, r24
    a448:	a1 f1       	breq	.+104    	; 0xa4b2 <I2C_1_GetData+0xee>
    a44a:	8c 81       	ldd	r24, Y+4	; 0x04
    a44c:	9d 81       	ldd	r25, Y+5	; 0x05
    a44e:	89 2b       	or	r24, r25
    a450:	81 f1       	breq	.+96     	; 0xa4b2 <I2C_1_GetData+0xee>
	{
		while(len--)
    a452:	8e 81       	ldd	r24, Y+6	; 0x06
    a454:	9f ef       	ldi	r25, 0xFF	; 255
    a456:	98 0f       	add	r25, r24
    a458:	9e 83       	std	Y+6, r25	; 0x06
    a45a:	91 e0       	ldi	r25, 0x01	; 1
    a45c:	88 23       	and	r24, r24
    a45e:	09 f4       	brne	.+2      	; 0xa462 <I2C_1_GetData+0x9e>
    a460:	90 e0       	ldi	r25, 0x00	; 0
    a462:	99 23       	and	r25, r25
    a464:	31 f1       	breq	.+76     	; 0xa4b2 <I2C_1_GetData+0xee>
		{
			if(I2C_1_WaitR() == I2C_READY)
    a466:	0e 94 38 51 	call	0xa270	; 0xa270 <_ZL11I2C_1_WaitRv>
    a46a:	98 2f       	mov	r25, r24
    a46c:	81 e0       	ldi	r24, 0x01	; 1
    a46e:	93 30       	cpi	r25, 0x03	; 3
    a470:	09 f0       	breq	.+2      	; 0xa474 <I2C_1_GetData+0xb0>
    a472:	80 e0       	ldi	r24, 0x00	; 0
    a474:	88 23       	and	r24, r24
    a476:	e1 f0       	breq	.+56     	; 0xa4b0 <I2C_1_GetData+0xec>
			{
				*pData = TWI1.MDATA;
    a478:	80 e2       	ldi	r24, 0x20	; 32
    a47a:	99 e0       	ldi	r25, 0x09	; 9
    a47c:	fc 01       	movw	r30, r24
    a47e:	20 85       	ldd	r18, Z+8	; 0x08
    a480:	8c 81       	ldd	r24, Y+4	; 0x04
    a482:	9d 81       	ldd	r25, Y+5	; 0x05
    a484:	fc 01       	movw	r30, r24
    a486:	20 83       	st	Z, r18
				TWI1.MCTRLB = (len == 0)? TWI_ACKACT_bm | TWI_MCMD_STOP_gc : TWI_MCMD_RECVTRANS_gc;
    a488:	80 e2       	ldi	r24, 0x20	; 32
    a48a:	99 e0       	ldi	r25, 0x09	; 9
    a48c:	2e 81       	ldd	r18, Y+6	; 0x06
    a48e:	22 23       	and	r18, r18
    a490:	11 f4       	brne	.+4      	; 0xa496 <I2C_1_GetData+0xd2>
    a492:	27 e0       	ldi	r18, 0x07	; 7
    a494:	01 c0       	rjmp	.+2      	; 0xa498 <I2C_1_GetData+0xd4>
    a496:	22 e0       	ldi	r18, 0x02	; 2
    a498:	fc 01       	movw	r30, r24
    a49a:	24 83       	std	Z+4, r18	; 0x04
				retVal++;
    a49c:	89 81       	ldd	r24, Y+1	; 0x01
    a49e:	8f 5f       	subi	r24, 0xFF	; 255
    a4a0:	89 83       	std	Y+1, r24	; 0x01
				pData++;
    a4a2:	8c 81       	ldd	r24, Y+4	; 0x04
    a4a4:	9d 81       	ldd	r25, Y+5	; 0x05
    a4a6:	01 96       	adiw	r24, 0x01	; 1
    a4a8:	8c 83       	std	Y+4, r24	; 0x04
    a4aa:	9d 83       	std	Y+5, r25	; 0x05
				continue;
    a4ac:	00 00       	nop
	}
	
	retVal = 0;
	if((len != 0) && (pData !=null ))
	{
		while(len--)
    a4ae:	d1 cf       	rjmp	.-94     	; 0xa452 <I2C_1_GetData+0x8e>
				retVal++;
				pData++;
				continue;
			}
			else
			break;
    a4b0:	00 00       	nop
		}
	}
	
	return retVal;
    a4b2:	89 81       	ldd	r24, Y+1	; 0x01
}
    a4b4:	26 96       	adiw	r28, 0x06	; 6
    a4b6:	cd bf       	out	0x3d, r28	; 61
    a4b8:	de bf       	out	0x3e, r29	; 62
    a4ba:	df 91       	pop	r29
    a4bc:	cf 91       	pop	r28
    a4be:	08 95       	ret

0000a4c0 <I2C_1_EndSession>:

void I2C_1_EndSession(void)
{
    a4c0:	cf 93       	push	r28
    a4c2:	df 93       	push	r29
    a4c4:	cd b7       	in	r28, 0x3d	; 61
    a4c6:	de b7       	in	r29, 0x3e	; 62
	TWI1.MCTRLB = TWI_MCMD_STOP_gc;
    a4c8:	80 e2       	ldi	r24, 0x20	; 32
    a4ca:	99 e0       	ldi	r25, 0x09	; 9
    a4cc:	23 e0       	ldi	r18, 0x03	; 3
    a4ce:	fc 01       	movw	r30, r24
    a4d0:	24 83       	std	Z+4, r18	; 0x04
}
    a4d2:	00 00       	nop
    a4d4:	df 91       	pop	r29
    a4d6:	cf 91       	pop	r28
    a4d8:	08 95       	ret

0000a4da <PORTC_set_pin_level>:
}

bool leds::active(void)
{
	return(led_timeout_count && (TCB3.INTCTRL & (1 << TCB_CAPT_bp)));
}
    a4da:	cf 93       	push	r28
    a4dc:	df 93       	push	r29
    a4de:	00 d0       	rcall	.+0      	; 0xa4e0 <PORTC_set_pin_level+0x6>
    a4e0:	cd b7       	in	r28, 0x3d	; 61
    a4e2:	de b7       	in	r29, 0x3e	; 62
    a4e4:	89 83       	std	Y+1, r24	; 0x01
    a4e6:	6a 83       	std	Y+2, r22	; 0x02
    a4e8:	8a 81       	ldd	r24, Y+2	; 0x02
    a4ea:	88 23       	and	r24, r24
    a4ec:	a9 f0       	breq	.+42     	; 0xa518 <PORTC_set_pin_level+0x3e>
    a4ee:	88 e0       	ldi	r24, 0x08	; 8
    a4f0:	90 e0       	ldi	r25, 0x00	; 0
    a4f2:	28 e0       	ldi	r18, 0x08	; 8
    a4f4:	30 e0       	ldi	r19, 0x00	; 0
    a4f6:	f9 01       	movw	r30, r18
    a4f8:	21 81       	ldd	r18, Z+1	; 0x01
    a4fa:	62 2f       	mov	r22, r18
    a4fc:	29 81       	ldd	r18, Y+1	; 0x01
    a4fe:	42 2f       	mov	r20, r18
    a500:	50 e0       	ldi	r21, 0x00	; 0
    a502:	21 e0       	ldi	r18, 0x01	; 1
    a504:	30 e0       	ldi	r19, 0x00	; 0
    a506:	02 c0       	rjmp	.+4      	; 0xa50c <PORTC_set_pin_level+0x32>
    a508:	22 0f       	add	r18, r18
    a50a:	33 1f       	adc	r19, r19
    a50c:	4a 95       	dec	r20
    a50e:	e2 f7       	brpl	.-8      	; 0xa508 <PORTC_set_pin_level+0x2e>
    a510:	26 2b       	or	r18, r22
    a512:	fc 01       	movw	r30, r24
    a514:	21 83       	std	Z+1, r18	; 0x01
    a516:	15 c0       	rjmp	.+42     	; 0xa542 <PORTC_set_pin_level+0x68>
    a518:	88 e0       	ldi	r24, 0x08	; 8
    a51a:	90 e0       	ldi	r25, 0x00	; 0
    a51c:	28 e0       	ldi	r18, 0x08	; 8
    a51e:	30 e0       	ldi	r19, 0x00	; 0
    a520:	f9 01       	movw	r30, r18
    a522:	21 81       	ldd	r18, Z+1	; 0x01
    a524:	62 2f       	mov	r22, r18
    a526:	29 81       	ldd	r18, Y+1	; 0x01
    a528:	42 2f       	mov	r20, r18
    a52a:	50 e0       	ldi	r21, 0x00	; 0
    a52c:	21 e0       	ldi	r18, 0x01	; 1
    a52e:	30 e0       	ldi	r19, 0x00	; 0
    a530:	02 c0       	rjmp	.+4      	; 0xa536 <PORTC_set_pin_level+0x5c>
    a532:	22 0f       	add	r18, r18
    a534:	33 1f       	adc	r19, r19
    a536:	4a 95       	dec	r20
    a538:	e2 f7       	brpl	.-8      	; 0xa532 <PORTC_set_pin_level+0x58>
    a53a:	20 95       	com	r18
    a53c:	26 23       	and	r18, r22
    a53e:	fc 01       	movw	r30, r24
    a540:	21 83       	std	Z+1, r18	; 0x01
    a542:	00 00       	nop
    a544:	0f 90       	pop	r0
    a546:	0f 90       	pop	r0
    a548:	df 91       	pop	r29
    a54a:	cf 91       	pop	r28
    a54c:	08 95       	ret

0000a54e <_ZL17LED_set_RED_levelb>:
    a54e:	cf 93       	push	r28
    a550:	df 93       	push	r29
    a552:	1f 92       	push	r1
    a554:	cd b7       	in	r28, 0x3d	; 61
    a556:	de b7       	in	r29, 0x3e	; 62
    a558:	89 83       	std	Y+1, r24	; 0x01
    a55a:	69 81       	ldd	r22, Y+1	; 0x01
    a55c:	86 e0       	ldi	r24, 0x06	; 6
    a55e:	0e 94 6d 52 	call	0xa4da	; 0xa4da <PORTC_set_pin_level>
    a562:	00 00       	nop
    a564:	0f 90       	pop	r0
    a566:	df 91       	pop	r29
    a568:	cf 91       	pop	r28
    a56a:	08 95       	ret

0000a56c <_ZL19LED_set_GREEN_levelb>:
    a56c:	cf 93       	push	r28
    a56e:	df 93       	push	r29
    a570:	1f 92       	push	r1
    a572:	cd b7       	in	r28, 0x3d	; 61
    a574:	de b7       	in	r29, 0x3e	; 62
    a576:	89 83       	std	Y+1, r24	; 0x01
    a578:	69 81       	ldd	r22, Y+1	; 0x01
    a57a:	85 e0       	ldi	r24, 0x05	; 5
    a57c:	0e 94 6d 52 	call	0xa4da	; 0xa4da <PORTC_set_pin_level>
    a580:	00 00       	nop
    a582:	0f 90       	pop	r0
    a584:	df 91       	pop	r29
    a586:	cf 91       	pop	r28
    a588:	08 95       	ret

0000a58a <_ZN4ledsC1Ev>:
    a58a:	cf 93       	push	r28
    a58c:	df 93       	push	r29
    a58e:	00 d0       	rcall	.+0      	; 0xa590 <_ZN4ledsC1Ev+0x6>
    a590:	cd b7       	in	r28, 0x3d	; 61
    a592:	de b7       	in	r29, 0x3e	; 62
    a594:	89 83       	std	Y+1, r24	; 0x01
    a596:	9a 83       	std	Y+2, r25	; 0x02
    a598:	00 00       	nop
    a59a:	0f 90       	pop	r0
    a59c:	0f 90       	pop	r0
    a59e:	df 91       	pop	r29
    a5a0:	cf 91       	pop	r28
    a5a2:	08 95       	ret

0000a5a4 <_ZN4ledsD1Ev>:
    a5a4:	cf 93       	push	r28
    a5a6:	df 93       	push	r29
    a5a8:	00 d0       	rcall	.+0      	; 0xa5aa <_ZN4ledsD1Ev+0x6>
    a5aa:	cd b7       	in	r28, 0x3d	; 61
    a5ac:	de b7       	in	r29, 0x3e	; 62
    a5ae:	89 83       	std	Y+1, r24	; 0x01
    a5b0:	9a 83       	std	Y+2, r25	; 0x02
    a5b2:	00 00       	nop
    a5b4:	0f 90       	pop	r0
    a5b6:	0f 90       	pop	r0
    a5b8:	df 91       	pop	r29
    a5ba:	cf 91       	pop	r28
    a5bc:	08 95       	ret

0000a5be <__vector_41>:
    a5be:	1f 92       	push	r1
    a5c0:	0f 92       	push	r0
    a5c2:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    a5c6:	0f 92       	push	r0
    a5c8:	11 24       	eor	r1, r1
    a5ca:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    a5ce:	0f 92       	push	r0
    a5d0:	2f 93       	push	r18
    a5d2:	3f 93       	push	r19
    a5d4:	4f 93       	push	r20
    a5d6:	5f 93       	push	r21
    a5d8:	6f 93       	push	r22
    a5da:	7f 93       	push	r23
    a5dc:	8f 93       	push	r24
    a5de:	9f 93       	push	r25
    a5e0:	af 93       	push	r26
    a5e2:	bf 93       	push	r27
    a5e4:	ef 93       	push	r30
    a5e6:	ff 93       	push	r31
    a5e8:	cf 93       	push	r28
    a5ea:	df 93       	push	r29
    a5ec:	cd b7       	in	r28, 0x3d	; 61
    a5ee:	de b7       	in	r29, 0x3e	; 62
    a5f0:	80 91 d6 47 	lds	r24, 0x47D6	; 0x8047d6 <_ZL17led_timeout_count>
    a5f4:	90 91 d7 47 	lds	r25, 0x47D7	; 0x8047d7 <_ZL17led_timeout_count+0x1>
    a5f8:	a0 91 d8 47 	lds	r26, 0x47D8	; 0x8047d8 <_ZL17led_timeout_count+0x2>
    a5fc:	b0 91 d9 47 	lds	r27, 0x47D9	; 0x8047d9 <_ZL17led_timeout_count+0x3>
    a600:	21 e0       	ldi	r18, 0x01	; 1
    a602:	89 2b       	or	r24, r25
    a604:	8a 2b       	or	r24, r26
    a606:	8b 2b       	or	r24, r27
    a608:	09 f4       	brne	.+2      	; 0xa60c <__vector_41+0x4e>
    a60a:	20 e0       	ldi	r18, 0x00	; 0
    a60c:	22 23       	and	r18, r18
    a60e:	09 f4       	brne	.+2      	; 0xa612 <__vector_41+0x54>
    a610:	1b c1       	rjmp	.+566    	; 0xa848 <__vector_41+0x28a>
    a612:	80 91 d6 47 	lds	r24, 0x47D6	; 0x8047d6 <_ZL17led_timeout_count>
    a616:	90 91 d7 47 	lds	r25, 0x47D7	; 0x8047d7 <_ZL17led_timeout_count+0x1>
    a61a:	a0 91 d8 47 	lds	r26, 0x47D8	; 0x8047d8 <_ZL17led_timeout_count+0x2>
    a61e:	b0 91 d9 47 	lds	r27, 0x47D9	; 0x8047d9 <_ZL17led_timeout_count+0x3>
    a622:	01 97       	sbiw	r24, 0x01	; 1
    a624:	a1 09       	sbc	r26, r1
    a626:	b1 09       	sbc	r27, r1
    a628:	80 93 d6 47 	sts	0x47D6, r24	; 0x8047d6 <_ZL17led_timeout_count>
    a62c:	90 93 d7 47 	sts	0x47D7, r25	; 0x8047d7 <_ZL17led_timeout_count+0x1>
    a630:	a0 93 d8 47 	sts	0x47D8, r26	; 0x8047d8 <_ZL17led_timeout_count+0x2>
    a634:	b0 93 d9 47 	sts	0x47D9, r27	; 0x8047d9 <_ZL17led_timeout_count+0x3>
    a638:	80 e3       	ldi	r24, 0x30	; 48
    a63a:	9b e0       	ldi	r25, 0x0B	; 11
    a63c:	fc 01       	movw	r30, r24
    a63e:	86 81       	ldd	r24, Z+6	; 0x06
    a640:	88 2f       	mov	r24, r24
    a642:	90 e0       	ldi	r25, 0x00	; 0
    a644:	81 70       	andi	r24, 0x01	; 1
    a646:	99 27       	eor	r25, r25
    a648:	21 e0       	ldi	r18, 0x01	; 1
    a64a:	89 2b       	or	r24, r25
    a64c:	09 f4       	brne	.+2      	; 0xa650 <__vector_41+0x92>
    a64e:	20 e0       	ldi	r18, 0x00	; 0
    a650:	22 23       	and	r18, r18
    a652:	09 f4       	brne	.+2      	; 0xa656 <__vector_41+0x98>
    a654:	0c c1       	rjmp	.+536    	; 0xa86e <__vector_41+0x2b0>
    a656:	80 91 e2 47 	lds	r24, 0x47E2	; 0x8047e2 <_ZL15red_blink_count>
    a65a:	90 91 e3 47 	lds	r25, 0x47E3	; 0x8047e3 <_ZL15red_blink_count+0x1>
    a65e:	21 e0       	ldi	r18, 0x01	; 1
    a660:	89 2b       	or	r24, r25
    a662:	09 f4       	brne	.+2      	; 0xa666 <__vector_41+0xa8>
    a664:	20 e0       	ldi	r18, 0x00	; 0
    a666:	22 23       	and	r18, r18
    a668:	09 f4       	brne	.+2      	; 0xa66c <__vector_41+0xae>
    a66a:	6a c0       	rjmp	.+212    	; 0xa740 <__vector_41+0x182>
    a66c:	80 91 e2 47 	lds	r24, 0x47E2	; 0x8047e2 <_ZL15red_blink_count>
    a670:	90 91 e3 47 	lds	r25, 0x47E3	; 0x8047e3 <_ZL15red_blink_count+0x1>
    a674:	21 e0       	ldi	r18, 0x01	; 1
    a676:	02 97       	sbiw	r24, 0x02	; 2
    a678:	0c f4       	brge	.+2      	; 0xa67c <__vector_41+0xbe>
    a67a:	20 e0       	ldi	r18, 0x00	; 0
    a67c:	22 23       	and	r18, r18
    a67e:	69 f0       	breq	.+26     	; 0xa69a <__vector_41+0xdc>
    a680:	81 e0       	ldi	r24, 0x01	; 1
    a682:	0e 94 a7 52 	call	0xa54e	; 0xa54e <_ZL17LED_set_RED_levelb>
    a686:	80 91 e2 47 	lds	r24, 0x47E2	; 0x8047e2 <_ZL15red_blink_count>
    a68a:	90 91 e3 47 	lds	r25, 0x47E3	; 0x8047e3 <_ZL15red_blink_count+0x1>
    a68e:	01 97       	sbiw	r24, 0x01	; 1
    a690:	80 93 e2 47 	sts	0x47E2, r24	; 0x8047e2 <_ZL15red_blink_count>
    a694:	90 93 e3 47 	sts	0x47E3, r25	; 0x8047e3 <_ZL15red_blink_count+0x1>
    a698:	17 c0       	rjmp	.+46     	; 0xa6c8 <__vector_41+0x10a>
    a69a:	80 91 e2 47 	lds	r24, 0x47E2	; 0x8047e2 <_ZL15red_blink_count>
    a69e:	90 91 e3 47 	lds	r25, 0x47E3	; 0x8047e3 <_ZL15red_blink_count+0x1>
    a6a2:	21 e0       	ldi	r18, 0x01	; 1
    a6a4:	8f 3f       	cpi	r24, 0xFF	; 255
    a6a6:	9f 4f       	sbci	r25, 0xFF	; 255
    a6a8:	0c f0       	brlt	.+2      	; 0xa6ac <__vector_41+0xee>
    a6aa:	20 e0       	ldi	r18, 0x00	; 0
    a6ac:	22 23       	and	r18, r18
    a6ae:	61 f0       	breq	.+24     	; 0xa6c8 <__vector_41+0x10a>
    a6b0:	80 e0       	ldi	r24, 0x00	; 0
    a6b2:	0e 94 a7 52 	call	0xa54e	; 0xa54e <_ZL17LED_set_RED_levelb>
    a6b6:	80 91 e2 47 	lds	r24, 0x47E2	; 0x8047e2 <_ZL15red_blink_count>
    a6ba:	90 91 e3 47 	lds	r25, 0x47E3	; 0x8047e3 <_ZL15red_blink_count+0x1>
    a6be:	01 96       	adiw	r24, 0x01	; 1
    a6c0:	80 93 e2 47 	sts	0x47E2, r24	; 0x8047e2 <_ZL15red_blink_count>
    a6c4:	90 93 e3 47 	sts	0x47E3, r25	; 0x8047e3 <_ZL15red_blink_count+0x1>
    a6c8:	80 91 e2 47 	lds	r24, 0x47E2	; 0x8047e2 <_ZL15red_blink_count>
    a6cc:	90 91 e3 47 	lds	r25, 0x47E3	; 0x8047e3 <_ZL15red_blink_count+0x1>
    a6d0:	21 e0       	ldi	r18, 0x01	; 1
    a6d2:	01 97       	sbiw	r24, 0x01	; 1
    a6d4:	09 f0       	breq	.+2      	; 0xa6d8 <__vector_41+0x11a>
    a6d6:	20 e0       	ldi	r18, 0x00	; 0
    a6d8:	22 23       	and	r18, r18
    a6da:	f9 f0       	breq	.+62     	; 0xa71a <__vector_41+0x15c>
    a6dc:	80 91 dc 47 	lds	r24, 0x47DC	; 0x8047dc <_ZL20red_blink_off_period>
    a6e0:	90 91 dd 47 	lds	r25, 0x47DD	; 0x8047dd <_ZL20red_blink_off_period+0x1>
    a6e4:	21 e0       	ldi	r18, 0x01	; 1
    a6e6:	89 2b       	or	r24, r25
    a6e8:	09 f4       	brne	.+2      	; 0xa6ec <__vector_41+0x12e>
    a6ea:	20 e0       	ldi	r18, 0x00	; 0
    a6ec:	22 23       	and	r18, r18
    a6ee:	61 f0       	breq	.+24     	; 0xa708 <__vector_41+0x14a>
    a6f0:	80 91 dc 47 	lds	r24, 0x47DC	; 0x8047dc <_ZL20red_blink_off_period>
    a6f4:	90 91 dd 47 	lds	r25, 0x47DD	; 0x8047dd <_ZL20red_blink_off_period+0x1>
    a6f8:	91 95       	neg	r25
    a6fa:	81 95       	neg	r24
    a6fc:	91 09       	sbc	r25, r1
    a6fe:	80 93 e2 47 	sts	0x47E2, r24	; 0x8047e2 <_ZL15red_blink_count>
    a702:	90 93 e3 47 	sts	0x47E3, r25	; 0x8047e3 <_ZL15red_blink_count+0x1>
    a706:	23 c0       	rjmp	.+70     	; 0xa74e <__vector_41+0x190>
    a708:	80 91 da 47 	lds	r24, 0x47DA	; 0x8047da <_ZL19red_blink_on_period>
    a70c:	90 91 db 47 	lds	r25, 0x47DB	; 0x8047db <_ZL19red_blink_on_period+0x1>
    a710:	80 93 e2 47 	sts	0x47E2, r24	; 0x8047e2 <_ZL15red_blink_count>
    a714:	90 93 e3 47 	sts	0x47E3, r25	; 0x8047e3 <_ZL15red_blink_count+0x1>
    a718:	1a c0       	rjmp	.+52     	; 0xa74e <__vector_41+0x190>
    a71a:	80 91 e2 47 	lds	r24, 0x47E2	; 0x8047e2 <_ZL15red_blink_count>
    a71e:	90 91 e3 47 	lds	r25, 0x47E3	; 0x8047e3 <_ZL15red_blink_count+0x1>
    a722:	21 e0       	ldi	r18, 0x01	; 1
    a724:	01 96       	adiw	r24, 0x01	; 1
    a726:	09 f0       	breq	.+2      	; 0xa72a <__vector_41+0x16c>
    a728:	20 e0       	ldi	r18, 0x00	; 0
    a72a:	22 23       	and	r18, r18
    a72c:	81 f0       	breq	.+32     	; 0xa74e <__vector_41+0x190>
    a72e:	80 91 da 47 	lds	r24, 0x47DA	; 0x8047da <_ZL19red_blink_on_period>
    a732:	90 91 db 47 	lds	r25, 0x47DB	; 0x8047db <_ZL19red_blink_on_period+0x1>
    a736:	80 93 e2 47 	sts	0x47E2, r24	; 0x8047e2 <_ZL15red_blink_count>
    a73a:	90 93 e3 47 	sts	0x47E3, r25	; 0x8047e3 <_ZL15red_blink_count+0x1>
    a73e:	07 c0       	rjmp	.+14     	; 0xa74e <__vector_41+0x190>
    a740:	80 91 e6 47 	lds	r24, 0x47E6	; 0x8047e6 <_ZL18red_led_configured>
    a744:	88 23       	and	r24, r24
    a746:	19 f0       	breq	.+6      	; 0xa74e <__vector_41+0x190>
    a748:	80 e0       	ldi	r24, 0x00	; 0
    a74a:	0e 94 a7 52 	call	0xa54e	; 0xa54e <_ZL17LED_set_RED_levelb>
    a74e:	80 91 e4 47 	lds	r24, 0x47E4	; 0x8047e4 <_ZL17green_blink_count>
    a752:	90 91 e5 47 	lds	r25, 0x47E5	; 0x8047e5 <_ZL17green_blink_count+0x1>
    a756:	21 e0       	ldi	r18, 0x01	; 1
    a758:	89 2b       	or	r24, r25
    a75a:	09 f4       	brne	.+2      	; 0xa75e <__vector_41+0x1a0>
    a75c:	20 e0       	ldi	r18, 0x00	; 0
    a75e:	22 23       	and	r18, r18
    a760:	09 f4       	brne	.+2      	; 0xa764 <__vector_41+0x1a6>
    a762:	6a c0       	rjmp	.+212    	; 0xa838 <__vector_41+0x27a>
    a764:	80 91 e4 47 	lds	r24, 0x47E4	; 0x8047e4 <_ZL17green_blink_count>
    a768:	90 91 e5 47 	lds	r25, 0x47E5	; 0x8047e5 <_ZL17green_blink_count+0x1>
    a76c:	21 e0       	ldi	r18, 0x01	; 1
    a76e:	02 97       	sbiw	r24, 0x02	; 2
    a770:	0c f4       	brge	.+2      	; 0xa774 <__vector_41+0x1b6>
    a772:	20 e0       	ldi	r18, 0x00	; 0
    a774:	22 23       	and	r18, r18
    a776:	69 f0       	breq	.+26     	; 0xa792 <__vector_41+0x1d4>
    a778:	81 e0       	ldi	r24, 0x01	; 1
    a77a:	0e 94 b6 52 	call	0xa56c	; 0xa56c <_ZL19LED_set_GREEN_levelb>
    a77e:	80 91 e4 47 	lds	r24, 0x47E4	; 0x8047e4 <_ZL17green_blink_count>
    a782:	90 91 e5 47 	lds	r25, 0x47E5	; 0x8047e5 <_ZL17green_blink_count+0x1>
    a786:	01 97       	sbiw	r24, 0x01	; 1
    a788:	80 93 e4 47 	sts	0x47E4, r24	; 0x8047e4 <_ZL17green_blink_count>
    a78c:	90 93 e5 47 	sts	0x47E5, r25	; 0x8047e5 <_ZL17green_blink_count+0x1>
    a790:	17 c0       	rjmp	.+46     	; 0xa7c0 <__vector_41+0x202>
    a792:	80 91 e4 47 	lds	r24, 0x47E4	; 0x8047e4 <_ZL17green_blink_count>
    a796:	90 91 e5 47 	lds	r25, 0x47E5	; 0x8047e5 <_ZL17green_blink_count+0x1>
    a79a:	21 e0       	ldi	r18, 0x01	; 1
    a79c:	8f 3f       	cpi	r24, 0xFF	; 255
    a79e:	9f 4f       	sbci	r25, 0xFF	; 255
    a7a0:	0c f0       	brlt	.+2      	; 0xa7a4 <__vector_41+0x1e6>
    a7a2:	20 e0       	ldi	r18, 0x00	; 0
    a7a4:	22 23       	and	r18, r18
    a7a6:	61 f0       	breq	.+24     	; 0xa7c0 <__vector_41+0x202>
    a7a8:	80 e0       	ldi	r24, 0x00	; 0
    a7aa:	0e 94 b6 52 	call	0xa56c	; 0xa56c <_ZL19LED_set_GREEN_levelb>
    a7ae:	80 91 e4 47 	lds	r24, 0x47E4	; 0x8047e4 <_ZL17green_blink_count>
    a7b2:	90 91 e5 47 	lds	r25, 0x47E5	; 0x8047e5 <_ZL17green_blink_count+0x1>
    a7b6:	01 96       	adiw	r24, 0x01	; 1
    a7b8:	80 93 e4 47 	sts	0x47E4, r24	; 0x8047e4 <_ZL17green_blink_count>
    a7bc:	90 93 e5 47 	sts	0x47E5, r25	; 0x8047e5 <_ZL17green_blink_count+0x1>
    a7c0:	80 91 e4 47 	lds	r24, 0x47E4	; 0x8047e4 <_ZL17green_blink_count>
    a7c4:	90 91 e5 47 	lds	r25, 0x47E5	; 0x8047e5 <_ZL17green_blink_count+0x1>
    a7c8:	21 e0       	ldi	r18, 0x01	; 1
    a7ca:	01 97       	sbiw	r24, 0x01	; 1
    a7cc:	09 f0       	breq	.+2      	; 0xa7d0 <__vector_41+0x212>
    a7ce:	20 e0       	ldi	r18, 0x00	; 0
    a7d0:	22 23       	and	r18, r18
    a7d2:	f9 f0       	breq	.+62     	; 0xa812 <__vector_41+0x254>
    a7d4:	80 91 e0 47 	lds	r24, 0x47E0	; 0x8047e0 <_ZL22green_blink_off_period>
    a7d8:	90 91 e1 47 	lds	r25, 0x47E1	; 0x8047e1 <_ZL22green_blink_off_period+0x1>
    a7dc:	21 e0       	ldi	r18, 0x01	; 1
    a7de:	89 2b       	or	r24, r25
    a7e0:	09 f4       	brne	.+2      	; 0xa7e4 <__vector_41+0x226>
    a7e2:	20 e0       	ldi	r18, 0x00	; 0
    a7e4:	22 23       	and	r18, r18
    a7e6:	61 f0       	breq	.+24     	; 0xa800 <__vector_41+0x242>
    a7e8:	80 91 e0 47 	lds	r24, 0x47E0	; 0x8047e0 <_ZL22green_blink_off_period>
    a7ec:	90 91 e1 47 	lds	r25, 0x47E1	; 0x8047e1 <_ZL22green_blink_off_period+0x1>
    a7f0:	91 95       	neg	r25
    a7f2:	81 95       	neg	r24
    a7f4:	91 09       	sbc	r25, r1
    a7f6:	80 93 e4 47 	sts	0x47E4, r24	; 0x8047e4 <_ZL17green_blink_count>
    a7fa:	90 93 e5 47 	sts	0x47E5, r25	; 0x8047e5 <_ZL17green_blink_count+0x1>
    a7fe:	37 c0       	rjmp	.+110    	; 0xa86e <__vector_41+0x2b0>
    a800:	80 91 de 47 	lds	r24, 0x47DE	; 0x8047de <_ZL21green_blink_on_period>
    a804:	90 91 df 47 	lds	r25, 0x47DF	; 0x8047df <_ZL21green_blink_on_period+0x1>
    a808:	80 93 e4 47 	sts	0x47E4, r24	; 0x8047e4 <_ZL17green_blink_count>
    a80c:	90 93 e5 47 	sts	0x47E5, r25	; 0x8047e5 <_ZL17green_blink_count+0x1>
    a810:	2e c0       	rjmp	.+92     	; 0xa86e <__vector_41+0x2b0>
    a812:	80 91 e4 47 	lds	r24, 0x47E4	; 0x8047e4 <_ZL17green_blink_count>
    a816:	90 91 e5 47 	lds	r25, 0x47E5	; 0x8047e5 <_ZL17green_blink_count+0x1>
    a81a:	21 e0       	ldi	r18, 0x01	; 1
    a81c:	01 96       	adiw	r24, 0x01	; 1
    a81e:	09 f0       	breq	.+2      	; 0xa822 <__vector_41+0x264>
    a820:	20 e0       	ldi	r18, 0x00	; 0
    a822:	22 23       	and	r18, r18
    a824:	21 f1       	breq	.+72     	; 0xa86e <__vector_41+0x2b0>
    a826:	80 91 de 47 	lds	r24, 0x47DE	; 0x8047de <_ZL21green_blink_on_period>
    a82a:	90 91 df 47 	lds	r25, 0x47DF	; 0x8047df <_ZL21green_blink_on_period+0x1>
    a82e:	80 93 e4 47 	sts	0x47E4, r24	; 0x8047e4 <_ZL17green_blink_count>
    a832:	90 93 e5 47 	sts	0x47E5, r25	; 0x8047e5 <_ZL17green_blink_count+0x1>
    a836:	1b c0       	rjmp	.+54     	; 0xa86e <__vector_41+0x2b0>
    a838:	80 91 e7 47 	lds	r24, 0x47E7	; 0x8047e7 <_ZL20green_led_configured>
    a83c:	88 23       	and	r24, r24
    a83e:	b9 f0       	breq	.+46     	; 0xa86e <__vector_41+0x2b0>
    a840:	80 e0       	ldi	r24, 0x00	; 0
    a842:	0e 94 b6 52 	call	0xa56c	; 0xa56c <_ZL19LED_set_GREEN_levelb>
    a846:	13 c0       	rjmp	.+38     	; 0xa86e <__vector_41+0x2b0>
    a848:	80 e3       	ldi	r24, 0x30	; 48
    a84a:	9b e0       	ldi	r25, 0x0B	; 11
    a84c:	20 e3       	ldi	r18, 0x30	; 48
    a84e:	3b e0       	ldi	r19, 0x0B	; 11
    a850:	f9 01       	movw	r30, r18
    a852:	25 81       	ldd	r18, Z+5	; 0x05
    a854:	2e 7f       	andi	r18, 0xFE	; 254
    a856:	fc 01       	movw	r30, r24
    a858:	25 83       	std	Z+5, r18	; 0x05
    a85a:	80 e0       	ldi	r24, 0x00	; 0
    a85c:	0e 94 a7 52 	call	0xa54e	; 0xa54e <_ZL17LED_set_RED_levelb>
    a860:	80 e0       	ldi	r24, 0x00	; 0
    a862:	0e 94 b6 52 	call	0xa56c	; 0xa56c <_ZL19LED_set_GREEN_levelb>
    a866:	10 92 e6 47 	sts	0x47E6, r1	; 0x8047e6 <_ZL18red_led_configured>
    a86a:	10 92 e7 47 	sts	0x47E7, r1	; 0x8047e7 <_ZL20green_led_configured>
    a86e:	80 e3       	ldi	r24, 0x30	; 48
    a870:	9b e0       	ldi	r25, 0x0B	; 11
    a872:	20 e3       	ldi	r18, 0x30	; 48
    a874:	3b e0       	ldi	r19, 0x0B	; 11
    a876:	f9 01       	movw	r30, r18
    a878:	26 81       	ldd	r18, Z+6	; 0x06
    a87a:	21 60       	ori	r18, 0x01	; 1
    a87c:	fc 01       	movw	r30, r24
    a87e:	26 83       	std	Z+6, r18	; 0x06
    a880:	00 00       	nop
    a882:	df 91       	pop	r29
    a884:	cf 91       	pop	r28
    a886:	ff 91       	pop	r31
    a888:	ef 91       	pop	r30
    a88a:	bf 91       	pop	r27
    a88c:	af 91       	pop	r26
    a88e:	9f 91       	pop	r25
    a890:	8f 91       	pop	r24
    a892:	7f 91       	pop	r23
    a894:	6f 91       	pop	r22
    a896:	5f 91       	pop	r21
    a898:	4f 91       	pop	r20
    a89a:	3f 91       	pop	r19
    a89c:	2f 91       	pop	r18
    a89e:	0f 90       	pop	r0
    a8a0:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    a8a4:	0f 90       	pop	r0
    a8a6:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    a8aa:	0f 90       	pop	r0
    a8ac:	1f 90       	pop	r1
    a8ae:	18 95       	reti

0000a8b0 <_ZN4leds5blinkE7Blink_t>:


void leds::blink(Blink_t blinkMode)
{
    a8b0:	cf 93       	push	r28
    a8b2:	df 93       	push	r29
    a8b4:	00 d0       	rcall	.+0      	; 0xa8b6 <_ZN4leds5blinkE7Blink_t+0x6>
    a8b6:	1f 92       	push	r1
    a8b8:	cd b7       	in	r28, 0x3d	; 61
    a8ba:	de b7       	in	r29, 0x3e	; 62
    a8bc:	89 83       	std	Y+1, r24	; 0x01
    a8be:	9a 83       	std	Y+2, r25	; 0x02
    a8c0:	6b 83       	std	Y+3, r22	; 0x03
	led_timeout_count = LED_TIMEOUT;
    a8c2:	80 e6       	ldi	r24, 0x60	; 96
    a8c4:	9a ee       	ldi	r25, 0xEA	; 234
    a8c6:	a0 e0       	ldi	r26, 0x00	; 0
    a8c8:	b0 e0       	ldi	r27, 0x00	; 0
    a8ca:	80 93 d6 47 	sts	0x47D6, r24	; 0x8047d6 <_ZL17led_timeout_count>
    a8ce:	90 93 d7 47 	sts	0x47D7, r25	; 0x8047d7 <_ZL17led_timeout_count+0x1>
    a8d2:	a0 93 d8 47 	sts	0x47D8, r26	; 0x8047d8 <_ZL17led_timeout_count+0x2>
    a8d6:	b0 93 d9 47 	sts	0x47D9, r27	; 0x8047d9 <_ZL17led_timeout_count+0x3>
	
	if(blinkMode != lastBlinkSetting)
    a8da:	90 91 d5 47 	lds	r25, 0x47D5	; 0x8047d5 <_ZL16lastBlinkSetting>
    a8de:	81 e0       	ldi	r24, 0x01	; 1
    a8e0:	2b 81       	ldd	r18, Y+3	; 0x03
    a8e2:	29 17       	cp	r18, r25
    a8e4:	09 f4       	brne	.+2      	; 0xa8e8 <_ZN4leds5blinkE7Blink_t+0x38>
    a8e6:	80 e0       	ldi	r24, 0x00	; 0
    a8e8:	88 23       	and	r24, r24
    a8ea:	09 f4       	brne	.+2      	; 0xa8ee <_ZN4leds5blinkE7Blink_t+0x3e>
    a8ec:	ab c1       	rjmp	.+854    	; 0xac44 <_ZN4leds5blinkE7Blink_t+0x394>
	{
		TCB3.INTCTRL &= ~TCB_CAPT_bm;   /* Capture or Timeout: disabled */
    a8ee:	80 e3       	ldi	r24, 0x30	; 48
    a8f0:	9b e0       	ldi	r25, 0x0B	; 11
    a8f2:	20 e3       	ldi	r18, 0x30	; 48
    a8f4:	3b e0       	ldi	r19, 0x0B	; 11
    a8f6:	f9 01       	movw	r30, r18
    a8f8:	25 81       	ldd	r18, Z+5	; 0x05
    a8fa:	2e 7f       	andi	r18, 0xFE	; 254
    a8fc:	fc 01       	movw	r30, r24
    a8fe:	25 83       	std	Z+5, r18	; 0x05

		switch(blinkMode)
    a900:	8b 81       	ldd	r24, Y+3	; 0x03
    a902:	88 2f       	mov	r24, r24
    a904:	90 e0       	ldi	r25, 0x00	; 0
    a906:	09 2e       	mov	r0, r25
    a908:	00 0c       	add	r0, r0
    a90a:	aa 0b       	sbc	r26, r26
    a90c:	bb 0b       	sbc	r27, r27
    a90e:	40 e0       	ldi	r20, 0x00	; 0
    a910:	50 e0       	ldi	r21, 0x00	; 0
    a912:	2c e0       	ldi	r18, 0x0C	; 12
    a914:	30 e0       	ldi	r19, 0x00	; 0
    a916:	84 1b       	sub	r24, r20
    a918:	95 0b       	sbc	r25, r21
    a91a:	28 17       	cp	r18, r24
    a91c:	39 07       	cpc	r19, r25
    a91e:	08 f4       	brcc	.+2      	; 0xa922 <_ZN4leds5blinkE7Blink_t+0x72>
    a920:	7a c1       	rjmp	.+756    	; 0xac16 <_ZN4leds5blinkE7Blink_t+0x366>
    a922:	89 52       	subi	r24, 0x29	; 41
    a924:	9f 4f       	sbci	r25, 0xFF	; 255
    a926:	fc 01       	movw	r30, r24
    a928:	0c 94 a3 7a 	jmp	0xf546	; 0xf546 <__tablejump2__>
		{
			case LEDS_OFF:
			{
				red_blink_count = 0;
    a92c:	10 92 e2 47 	sts	0x47E2, r1	; 0x8047e2 <_ZL15red_blink_count>
    a930:	10 92 e3 47 	sts	0x47E3, r1	; 0x8047e3 <_ZL15red_blink_count+0x1>
				green_blink_count = 0;
    a934:	10 92 e4 47 	sts	0x47E4, r1	; 0x8047e4 <_ZL17green_blink_count>
    a938:	10 92 e5 47 	sts	0x47E5, r1	; 0x8047e5 <_ZL17green_blink_count+0x1>
				LED_set_RED_level(OFF);
    a93c:	80 e0       	ldi	r24, 0x00	; 0
    a93e:	0e 94 a7 52 	call	0xa54e	; 0xa54e <_ZL17LED_set_RED_levelb>
				LED_set_GREEN_level(OFF);
    a942:	80 e0       	ldi	r24, 0x00	; 0
    a944:	0e 94 b6 52 	call	0xa56c	; 0xa56c <_ZL19LED_set_GREEN_levelb>
				red_led_configured = false;
    a948:	10 92 e6 47 	sts	0x47E6, r1	; 0x8047e6 <_ZL18red_led_configured>
				green_led_configured = false;
    a94c:	10 92 e7 47 	sts	0x47E7, r1	; 0x8047e7 <_ZL20green_led_configured>
			}
			break;
    a950:	63 c1       	rjmp	.+710    	; 0xac18 <_ZN4leds5blinkE7Blink_t+0x368>
			
			case LEDS_RED_OFF:
			{
				LED_set_RED_level(OFF);
    a952:	80 e0       	ldi	r24, 0x00	; 0
    a954:	0e 94 a7 52 	call	0xa54e	; 0xa54e <_ZL17LED_set_RED_levelb>
				red_blink_count = 0;
    a958:	10 92 e2 47 	sts	0x47E2, r1	; 0x8047e2 <_ZL15red_blink_count>
    a95c:	10 92 e3 47 	sts	0x47E3, r1	; 0x8047e3 <_ZL15red_blink_count+0x1>
				red_led_configured = false;
    a960:	10 92 e6 47 	sts	0x47E6, r1	; 0x8047e6 <_ZL18red_led_configured>
			}
			break;
    a964:	59 c1       	rjmp	.+690    	; 0xac18 <_ZN4leds5blinkE7Blink_t+0x368>
			
			case LEDS_GREEN_OFF:
			{
				LED_set_GREEN_level(OFF);
    a966:	80 e0       	ldi	r24, 0x00	; 0
    a968:	0e 94 b6 52 	call	0xa56c	; 0xa56c <_ZL19LED_set_GREEN_levelb>
				green_blink_count = 0;
    a96c:	10 92 e4 47 	sts	0x47E4, r1	; 0x8047e4 <_ZL17green_blink_count>
    a970:	10 92 e5 47 	sts	0x47E5, r1	; 0x8047e5 <_ZL17green_blink_count+0x1>
				green_led_configured = false;
    a974:	10 92 e7 47 	sts	0x47E7, r1	; 0x8047e7 <_ZL20green_led_configured>
			}
			break;
    a978:	4f c1       	rjmp	.+670    	; 0xac18 <_ZN4leds5blinkE7Blink_t+0x368>
			
			case LEDS_RED_BLINK_FAST:
			{
				red_blink_on_period = BRIEF_ON;
    a97a:	89 e1       	ldi	r24, 0x19	; 25
    a97c:	90 e0       	ldi	r25, 0x00	; 0
    a97e:	80 93 da 47 	sts	0x47DA, r24	; 0x8047da <_ZL19red_blink_on_period>
    a982:	90 93 db 47 	sts	0x47DB, r25	; 0x8047db <_ZL19red_blink_on_period+0x1>
				red_blink_off_period = BRIEF_OFF;
    a986:	86 e9       	ldi	r24, 0x96	; 150
    a988:	90 e0       	ldi	r25, 0x00	; 0
    a98a:	80 93 dc 47 	sts	0x47DC, r24	; 0x8047dc <_ZL20red_blink_off_period>
    a98e:	90 93 dd 47 	sts	0x47DD, r25	; 0x8047dd <_ZL20red_blink_off_period+0x1>
				red_blink_count = red_blink_on_period;	
    a992:	80 91 da 47 	lds	r24, 0x47DA	; 0x8047da <_ZL19red_blink_on_period>
    a996:	90 91 db 47 	lds	r25, 0x47DB	; 0x8047db <_ZL19red_blink_on_period+0x1>
    a99a:	80 93 e2 47 	sts	0x47E2, r24	; 0x8047e2 <_ZL15red_blink_count>
    a99e:	90 93 e3 47 	sts	0x47E3, r25	; 0x8047e3 <_ZL15red_blink_count+0x1>
				red_led_configured = true;			
    a9a2:	81 e0       	ldi	r24, 0x01	; 1
    a9a4:	80 93 e6 47 	sts	0x47E6, r24	; 0x8047e6 <_ZL18red_led_configured>
			}
			break;
    a9a8:	37 c1       	rjmp	.+622    	; 0xac18 <_ZN4leds5blinkE7Blink_t+0x368>
			
			case LEDS_GREEN_BLINK_FAST:
			{
				green_blink_on_period = BRIEF_ON;
    a9aa:	89 e1       	ldi	r24, 0x19	; 25
    a9ac:	90 e0       	ldi	r25, 0x00	; 0
    a9ae:	80 93 de 47 	sts	0x47DE, r24	; 0x8047de <_ZL21green_blink_on_period>
    a9b2:	90 93 df 47 	sts	0x47DF, r25	; 0x8047df <_ZL21green_blink_on_period+0x1>
				green_blink_off_period = BRIEF_OFF;	
    a9b6:	86 e9       	ldi	r24, 0x96	; 150
    a9b8:	90 e0       	ldi	r25, 0x00	; 0
    a9ba:	80 93 e0 47 	sts	0x47E0, r24	; 0x8047e0 <_ZL22green_blink_off_period>
    a9be:	90 93 e1 47 	sts	0x47E1, r25	; 0x8047e1 <_ZL22green_blink_off_period+0x1>
				green_blink_count = green_blink_on_period;			
    a9c2:	80 91 de 47 	lds	r24, 0x47DE	; 0x8047de <_ZL21green_blink_on_period>
    a9c6:	90 91 df 47 	lds	r25, 0x47DF	; 0x8047df <_ZL21green_blink_on_period+0x1>
    a9ca:	80 93 e4 47 	sts	0x47E4, r24	; 0x8047e4 <_ZL17green_blink_count>
    a9ce:	90 93 e5 47 	sts	0x47E5, r25	; 0x8047e5 <_ZL17green_blink_count+0x1>
				green_led_configured = true;			
    a9d2:	81 e0       	ldi	r24, 0x01	; 1
    a9d4:	80 93 e7 47 	sts	0x47E7, r24	; 0x8047e7 <_ZL20green_led_configured>
			}
			break;
    a9d8:	1f c1       	rjmp	.+574    	; 0xac18 <_ZN4leds5blinkE7Blink_t+0x368>
			
			case LEDS_RED_BLINK_SLOW:
			{
				red_blink_on_period = SLOW_ON;
    a9da:	84 ef       	ldi	r24, 0xF4	; 244
    a9dc:	91 e0       	ldi	r25, 0x01	; 1
    a9de:	80 93 da 47 	sts	0x47DA, r24	; 0x8047da <_ZL19red_blink_on_period>
    a9e2:	90 93 db 47 	sts	0x47DB, r25	; 0x8047db <_ZL19red_blink_on_period+0x1>
				red_blink_off_period = SLOW_OFF;
    a9e6:	84 ef       	ldi	r24, 0xF4	; 244
    a9e8:	91 e0       	ldi	r25, 0x01	; 1
    a9ea:	80 93 dc 47 	sts	0x47DC, r24	; 0x8047dc <_ZL20red_blink_off_period>
    a9ee:	90 93 dd 47 	sts	0x47DD, r25	; 0x8047dd <_ZL20red_blink_off_period+0x1>
				red_blink_count = red_blink_on_period;				
    a9f2:	80 91 da 47 	lds	r24, 0x47DA	; 0x8047da <_ZL19red_blink_on_period>
    a9f6:	90 91 db 47 	lds	r25, 0x47DB	; 0x8047db <_ZL19red_blink_on_period+0x1>
    a9fa:	80 93 e2 47 	sts	0x47E2, r24	; 0x8047e2 <_ZL15red_blink_count>
    a9fe:	90 93 e3 47 	sts	0x47E3, r25	; 0x8047e3 <_ZL15red_blink_count+0x1>
				red_led_configured = true;			
    aa02:	81 e0       	ldi	r24, 0x01	; 1
    aa04:	80 93 e6 47 	sts	0x47E6, r24	; 0x8047e6 <_ZL18red_led_configured>
			}
			break;
    aa08:	07 c1       	rjmp	.+526    	; 0xac18 <_ZN4leds5blinkE7Blink_t+0x368>
			
			case LEDS_GREEN_BLINK_SLOW:
			{
				green_blink_on_period = SLOW_ON;
    aa0a:	84 ef       	ldi	r24, 0xF4	; 244
    aa0c:	91 e0       	ldi	r25, 0x01	; 1
    aa0e:	80 93 de 47 	sts	0x47DE, r24	; 0x8047de <_ZL21green_blink_on_period>
    aa12:	90 93 df 47 	sts	0x47DF, r25	; 0x8047df <_ZL21green_blink_on_period+0x1>
				green_blink_off_period = SLOW_OFF;	
    aa16:	84 ef       	ldi	r24, 0xF4	; 244
    aa18:	91 e0       	ldi	r25, 0x01	; 1
    aa1a:	80 93 e0 47 	sts	0x47E0, r24	; 0x8047e0 <_ZL22green_blink_off_period>
    aa1e:	90 93 e1 47 	sts	0x47E1, r25	; 0x8047e1 <_ZL22green_blink_off_period+0x1>
				green_blink_count = green_blink_on_period;			
    aa22:	80 91 de 47 	lds	r24, 0x47DE	; 0x8047de <_ZL21green_blink_on_period>
    aa26:	90 91 df 47 	lds	r25, 0x47DF	; 0x8047df <_ZL21green_blink_on_period+0x1>
    aa2a:	80 93 e4 47 	sts	0x47E4, r24	; 0x8047e4 <_ZL17green_blink_count>
    aa2e:	90 93 e5 47 	sts	0x47E5, r25	; 0x8047e5 <_ZL17green_blink_count+0x1>
				green_led_configured = true;			
    aa32:	81 e0       	ldi	r24, 0x01	; 1
    aa34:	80 93 e7 47 	sts	0x47E7, r24	; 0x8047e7 <_ZL20green_led_configured>
			}
			break;
    aa38:	ef c0       	rjmp	.+478    	; 0xac18 <_ZN4leds5blinkE7Blink_t+0x368>
			
			case LEDS_RED_THEN_GREEN_BLINK_SLOW:
			{
				green_blink_on_period = SLOW_ON;
    aa3a:	84 ef       	ldi	r24, 0xF4	; 244
    aa3c:	91 e0       	ldi	r25, 0x01	; 1
    aa3e:	80 93 de 47 	sts	0x47DE, r24	; 0x8047de <_ZL21green_blink_on_period>
    aa42:	90 93 df 47 	sts	0x47DF, r25	; 0x8047df <_ZL21green_blink_on_period+0x1>
				green_blink_off_period = SLOW_OFF;	
    aa46:	84 ef       	ldi	r24, 0xF4	; 244
    aa48:	91 e0       	ldi	r25, 0x01	; 1
    aa4a:	80 93 e0 47 	sts	0x47E0, r24	; 0x8047e0 <_ZL22green_blink_off_period>
    aa4e:	90 93 e1 47 	sts	0x47E1, r25	; 0x8047e1 <_ZL22green_blink_off_period+0x1>
				green_blink_count = -green_blink_on_period;			
    aa52:	80 91 de 47 	lds	r24, 0x47DE	; 0x8047de <_ZL21green_blink_on_period>
    aa56:	90 91 df 47 	lds	r25, 0x47DF	; 0x8047df <_ZL21green_blink_on_period+0x1>
    aa5a:	91 95       	neg	r25
    aa5c:	81 95       	neg	r24
    aa5e:	91 09       	sbc	r25, r1
    aa60:	80 93 e4 47 	sts	0x47E4, r24	; 0x8047e4 <_ZL17green_blink_count>
    aa64:	90 93 e5 47 	sts	0x47E5, r25	; 0x8047e5 <_ZL17green_blink_count+0x1>
				red_blink_on_period = SLOW_ON;
    aa68:	84 ef       	ldi	r24, 0xF4	; 244
    aa6a:	91 e0       	ldi	r25, 0x01	; 1
    aa6c:	80 93 da 47 	sts	0x47DA, r24	; 0x8047da <_ZL19red_blink_on_period>
    aa70:	90 93 db 47 	sts	0x47DB, r25	; 0x8047db <_ZL19red_blink_on_period+0x1>
				red_blink_off_period = SLOW_OFF;
    aa74:	84 ef       	ldi	r24, 0xF4	; 244
    aa76:	91 e0       	ldi	r25, 0x01	; 1
    aa78:	80 93 dc 47 	sts	0x47DC, r24	; 0x8047dc <_ZL20red_blink_off_period>
    aa7c:	90 93 dd 47 	sts	0x47DD, r25	; 0x8047dd <_ZL20red_blink_off_period+0x1>
				red_blink_count = red_blink_on_period;				
    aa80:	80 91 da 47 	lds	r24, 0x47DA	; 0x8047da <_ZL19red_blink_on_period>
    aa84:	90 91 db 47 	lds	r25, 0x47DB	; 0x8047db <_ZL19red_blink_on_period+0x1>
    aa88:	80 93 e2 47 	sts	0x47E2, r24	; 0x8047e2 <_ZL15red_blink_count>
    aa8c:	90 93 e3 47 	sts	0x47E3, r25	; 0x8047e3 <_ZL15red_blink_count+0x1>
				red_led_configured = true;			
    aa90:	81 e0       	ldi	r24, 0x01	; 1
    aa92:	80 93 e6 47 	sts	0x47E6, r24	; 0x8047e6 <_ZL18red_led_configured>
				green_led_configured = true;			
    aa96:	81 e0       	ldi	r24, 0x01	; 1
    aa98:	80 93 e7 47 	sts	0x47E7, r24	; 0x8047e7 <_ZL20green_led_configured>
			}
			break;
    aa9c:	bd c0       	rjmp	.+378    	; 0xac18 <_ZN4leds5blinkE7Blink_t+0x368>
			
			case LEDS_RED_THEN_GREEN_BLINK_FAST:
			{
				green_blink_on_period = FAST_ON;
    aa9e:	89 e1       	ldi	r24, 0x19	; 25
    aaa0:	90 e0       	ldi	r25, 0x00	; 0
    aaa2:	80 93 de 47 	sts	0x47DE, r24	; 0x8047de <_ZL21green_blink_on_period>
    aaa6:	90 93 df 47 	sts	0x47DF, r25	; 0x8047df <_ZL21green_blink_on_period+0x1>
				green_blink_off_period = FAST_OFF;	
    aaaa:	89 e1       	ldi	r24, 0x19	; 25
    aaac:	90 e0       	ldi	r25, 0x00	; 0
    aaae:	80 93 e0 47 	sts	0x47E0, r24	; 0x8047e0 <_ZL22green_blink_off_period>
    aab2:	90 93 e1 47 	sts	0x47E1, r25	; 0x8047e1 <_ZL22green_blink_off_period+0x1>
				green_blink_count = -green_blink_on_period;			
    aab6:	80 91 de 47 	lds	r24, 0x47DE	; 0x8047de <_ZL21green_blink_on_period>
    aaba:	90 91 df 47 	lds	r25, 0x47DF	; 0x8047df <_ZL21green_blink_on_period+0x1>
    aabe:	91 95       	neg	r25
    aac0:	81 95       	neg	r24
    aac2:	91 09       	sbc	r25, r1
    aac4:	80 93 e4 47 	sts	0x47E4, r24	; 0x8047e4 <_ZL17green_blink_count>
    aac8:	90 93 e5 47 	sts	0x47E5, r25	; 0x8047e5 <_ZL17green_blink_count+0x1>
				red_blink_on_period = FAST_ON;
    aacc:	89 e1       	ldi	r24, 0x19	; 25
    aace:	90 e0       	ldi	r25, 0x00	; 0
    aad0:	80 93 da 47 	sts	0x47DA, r24	; 0x8047da <_ZL19red_blink_on_period>
    aad4:	90 93 db 47 	sts	0x47DB, r25	; 0x8047db <_ZL19red_blink_on_period+0x1>
				red_blink_off_period = FAST_OFF;
    aad8:	89 e1       	ldi	r24, 0x19	; 25
    aada:	90 e0       	ldi	r25, 0x00	; 0
    aadc:	80 93 dc 47 	sts	0x47DC, r24	; 0x8047dc <_ZL20red_blink_off_period>
    aae0:	90 93 dd 47 	sts	0x47DD, r25	; 0x8047dd <_ZL20red_blink_off_period+0x1>
				red_blink_count = red_blink_on_period;				
    aae4:	80 91 da 47 	lds	r24, 0x47DA	; 0x8047da <_ZL19red_blink_on_period>
    aae8:	90 91 db 47 	lds	r25, 0x47DB	; 0x8047db <_ZL19red_blink_on_period+0x1>
    aaec:	80 93 e2 47 	sts	0x47E2, r24	; 0x8047e2 <_ZL15red_blink_count>
    aaf0:	90 93 e3 47 	sts	0x47E3, r25	; 0x8047e3 <_ZL15red_blink_count+0x1>
				red_led_configured = true;			
    aaf4:	81 e0       	ldi	r24, 0x01	; 1
    aaf6:	80 93 e6 47 	sts	0x47E6, r24	; 0x8047e6 <_ZL18red_led_configured>
				green_led_configured = true;			
    aafa:	81 e0       	ldi	r24, 0x01	; 1
    aafc:	80 93 e7 47 	sts	0x47E7, r24	; 0x8047e7 <_ZL20green_led_configured>
			}
			break;
    ab00:	8b c0       	rjmp	.+278    	; 0xac18 <_ZN4leds5blinkE7Blink_t+0x368>
			
			case LEDS_RED_AND_GREEN_BLINK_SLOW:
			{
				green_blink_on_period = SLOW_ON;
    ab02:	84 ef       	ldi	r24, 0xF4	; 244
    ab04:	91 e0       	ldi	r25, 0x01	; 1
    ab06:	80 93 de 47 	sts	0x47DE, r24	; 0x8047de <_ZL21green_blink_on_period>
    ab0a:	90 93 df 47 	sts	0x47DF, r25	; 0x8047df <_ZL21green_blink_on_period+0x1>
				green_blink_off_period = SLOW_OFF;	
    ab0e:	84 ef       	ldi	r24, 0xF4	; 244
    ab10:	91 e0       	ldi	r25, 0x01	; 1
    ab12:	80 93 e0 47 	sts	0x47E0, r24	; 0x8047e0 <_ZL22green_blink_off_period>
    ab16:	90 93 e1 47 	sts	0x47E1, r25	; 0x8047e1 <_ZL22green_blink_off_period+0x1>
				green_blink_count = green_blink_on_period;			
    ab1a:	80 91 de 47 	lds	r24, 0x47DE	; 0x8047de <_ZL21green_blink_on_period>
    ab1e:	90 91 df 47 	lds	r25, 0x47DF	; 0x8047df <_ZL21green_blink_on_period+0x1>
    ab22:	80 93 e4 47 	sts	0x47E4, r24	; 0x8047e4 <_ZL17green_blink_count>
    ab26:	90 93 e5 47 	sts	0x47E5, r25	; 0x8047e5 <_ZL17green_blink_count+0x1>
				red_blink_on_period = SLOW_ON;
    ab2a:	84 ef       	ldi	r24, 0xF4	; 244
    ab2c:	91 e0       	ldi	r25, 0x01	; 1
    ab2e:	80 93 da 47 	sts	0x47DA, r24	; 0x8047da <_ZL19red_blink_on_period>
    ab32:	90 93 db 47 	sts	0x47DB, r25	; 0x8047db <_ZL19red_blink_on_period+0x1>
				red_blink_off_period = SLOW_OFF;
    ab36:	84 ef       	ldi	r24, 0xF4	; 244
    ab38:	91 e0       	ldi	r25, 0x01	; 1
    ab3a:	80 93 dc 47 	sts	0x47DC, r24	; 0x8047dc <_ZL20red_blink_off_period>
    ab3e:	90 93 dd 47 	sts	0x47DD, r25	; 0x8047dd <_ZL20red_blink_off_period+0x1>
				red_blink_count = red_blink_on_period;				
    ab42:	80 91 da 47 	lds	r24, 0x47DA	; 0x8047da <_ZL19red_blink_on_period>
    ab46:	90 91 db 47 	lds	r25, 0x47DB	; 0x8047db <_ZL19red_blink_on_period+0x1>
    ab4a:	80 93 e2 47 	sts	0x47E2, r24	; 0x8047e2 <_ZL15red_blink_count>
    ab4e:	90 93 e3 47 	sts	0x47E3, r25	; 0x8047e3 <_ZL15red_blink_count+0x1>
				red_led_configured = true;			
    ab52:	81 e0       	ldi	r24, 0x01	; 1
    ab54:	80 93 e6 47 	sts	0x47E6, r24	; 0x8047e6 <_ZL18red_led_configured>
				green_led_configured = true;			
    ab58:	81 e0       	ldi	r24, 0x01	; 1
    ab5a:	80 93 e7 47 	sts	0x47E7, r24	; 0x8047e7 <_ZL20green_led_configured>
			}
			break;
    ab5e:	5c c0       	rjmp	.+184    	; 0xac18 <_ZN4leds5blinkE7Blink_t+0x368>
			
			case LEDS_RED_AND_GREEN_BLINK_FAST:
			{
				green_blink_on_period = FAST_ON;
    ab60:	89 e1       	ldi	r24, 0x19	; 25
    ab62:	90 e0       	ldi	r25, 0x00	; 0
    ab64:	80 93 de 47 	sts	0x47DE, r24	; 0x8047de <_ZL21green_blink_on_period>
    ab68:	90 93 df 47 	sts	0x47DF, r25	; 0x8047df <_ZL21green_blink_on_period+0x1>
				green_blink_off_period = FAST_OFF;	
    ab6c:	89 e1       	ldi	r24, 0x19	; 25
    ab6e:	90 e0       	ldi	r25, 0x00	; 0
    ab70:	80 93 e0 47 	sts	0x47E0, r24	; 0x8047e0 <_ZL22green_blink_off_period>
    ab74:	90 93 e1 47 	sts	0x47E1, r25	; 0x8047e1 <_ZL22green_blink_off_period+0x1>
				green_blink_count = green_blink_on_period;			
    ab78:	80 91 de 47 	lds	r24, 0x47DE	; 0x8047de <_ZL21green_blink_on_period>
    ab7c:	90 91 df 47 	lds	r25, 0x47DF	; 0x8047df <_ZL21green_blink_on_period+0x1>
    ab80:	80 93 e4 47 	sts	0x47E4, r24	; 0x8047e4 <_ZL17green_blink_count>
    ab84:	90 93 e5 47 	sts	0x47E5, r25	; 0x8047e5 <_ZL17green_blink_count+0x1>
				red_blink_on_period = FAST_ON;
    ab88:	89 e1       	ldi	r24, 0x19	; 25
    ab8a:	90 e0       	ldi	r25, 0x00	; 0
    ab8c:	80 93 da 47 	sts	0x47DA, r24	; 0x8047da <_ZL19red_blink_on_period>
    ab90:	90 93 db 47 	sts	0x47DB, r25	; 0x8047db <_ZL19red_blink_on_period+0x1>
				red_blink_off_period = FAST_OFF;
    ab94:	89 e1       	ldi	r24, 0x19	; 25
    ab96:	90 e0       	ldi	r25, 0x00	; 0
    ab98:	80 93 dc 47 	sts	0x47DC, r24	; 0x8047dc <_ZL20red_blink_off_period>
    ab9c:	90 93 dd 47 	sts	0x47DD, r25	; 0x8047dd <_ZL20red_blink_off_period+0x1>
				red_blink_count = red_blink_on_period;				
    aba0:	80 91 da 47 	lds	r24, 0x47DA	; 0x8047da <_ZL19red_blink_on_period>
    aba4:	90 91 db 47 	lds	r25, 0x47DB	; 0x8047db <_ZL19red_blink_on_period+0x1>
    aba8:	80 93 e2 47 	sts	0x47E2, r24	; 0x8047e2 <_ZL15red_blink_count>
    abac:	90 93 e3 47 	sts	0x47E3, r25	; 0x8047e3 <_ZL15red_blink_count+0x1>
				red_led_configured = true;			
    abb0:	81 e0       	ldi	r24, 0x01	; 1
    abb2:	80 93 e6 47 	sts	0x47E6, r24	; 0x8047e6 <_ZL18red_led_configured>
				green_led_configured = true;			
    abb6:	81 e0       	ldi	r24, 0x01	; 1
    abb8:	80 93 e7 47 	sts	0x47E7, r24	; 0x8047e7 <_ZL20green_led_configured>
			}
			break;
    abbc:	2d c0       	rjmp	.+90     	; 0xac18 <_ZN4leds5blinkE7Blink_t+0x368>
			
			case LEDS_RED_ON_CONSTANT:
			{
				red_blink_on_period = SLOW_ON;
    abbe:	84 ef       	ldi	r24, 0xF4	; 244
    abc0:	91 e0       	ldi	r25, 0x01	; 1
    abc2:	80 93 da 47 	sts	0x47DA, r24	; 0x8047da <_ZL19red_blink_on_period>
    abc6:	90 93 db 47 	sts	0x47DB, r25	; 0x8047db <_ZL19red_blink_on_period+0x1>
				red_blink_off_period = 0;
    abca:	10 92 dc 47 	sts	0x47DC, r1	; 0x8047dc <_ZL20red_blink_off_period>
    abce:	10 92 dd 47 	sts	0x47DD, r1	; 0x8047dd <_ZL20red_blink_off_period+0x1>
				red_blink_count = red_blink_on_period;
    abd2:	80 91 da 47 	lds	r24, 0x47DA	; 0x8047da <_ZL19red_blink_on_period>
    abd6:	90 91 db 47 	lds	r25, 0x47DB	; 0x8047db <_ZL19red_blink_on_period+0x1>
    abda:	80 93 e2 47 	sts	0x47E2, r24	; 0x8047e2 <_ZL15red_blink_count>
    abde:	90 93 e3 47 	sts	0x47E3, r25	; 0x8047e3 <_ZL15red_blink_count+0x1>
				red_led_configured = true;			
    abe2:	81 e0       	ldi	r24, 0x01	; 1
    abe4:	80 93 e6 47 	sts	0x47E6, r24	; 0x8047e6 <_ZL18red_led_configured>
			}
			break;
    abe8:	17 c0       	rjmp	.+46     	; 0xac18 <_ZN4leds5blinkE7Blink_t+0x368>
			
			case LEDS_GREEN_ON_CONSTANT:
			{
				green_blink_on_period = SLOW_ON;
    abea:	84 ef       	ldi	r24, 0xF4	; 244
    abec:	91 e0       	ldi	r25, 0x01	; 1
    abee:	80 93 de 47 	sts	0x47DE, r24	; 0x8047de <_ZL21green_blink_on_period>
    abf2:	90 93 df 47 	sts	0x47DF, r25	; 0x8047df <_ZL21green_blink_on_period+0x1>
				green_blink_off_period = 0;
    abf6:	10 92 e0 47 	sts	0x47E0, r1	; 0x8047e0 <_ZL22green_blink_off_period>
    abfa:	10 92 e1 47 	sts	0x47E1, r1	; 0x8047e1 <_ZL22green_blink_off_period+0x1>
				green_blink_count = green_blink_on_period;
    abfe:	80 91 de 47 	lds	r24, 0x47DE	; 0x8047de <_ZL21green_blink_on_period>
    ac02:	90 91 df 47 	lds	r25, 0x47DF	; 0x8047df <_ZL21green_blink_on_period+0x1>
    ac06:	80 93 e4 47 	sts	0x47E4, r24	; 0x8047e4 <_ZL17green_blink_count>
    ac0a:	90 93 e5 47 	sts	0x47E5, r25	; 0x8047e5 <_ZL17green_blink_count+0x1>
				green_led_configured = true;			
    ac0e:	81 e0       	ldi	r24, 0x01	; 1
    ac10:	80 93 e7 47 	sts	0x47E7, r24	; 0x8047e7 <_ZL20green_led_configured>
			}
			break;
    ac14:	01 c0       	rjmp	.+2      	; 0xac18 <_ZN4leds5blinkE7Blink_t+0x368>
			
			default:
			{
				
			}
			break;
    ac16:	00 00       	nop
		}
		
		if(red_led_configured || green_led_configured) 
    ac18:	80 91 e6 47 	lds	r24, 0x47E6	; 0x8047e6 <_ZL18red_led_configured>
    ac1c:	88 23       	and	r24, r24
    ac1e:	21 f4       	brne	.+8      	; 0xac28 <_ZN4leds5blinkE7Blink_t+0x378>
    ac20:	80 91 e7 47 	lds	r24, 0x47E7	; 0x8047e7 <_ZL20green_led_configured>
    ac24:	88 23       	and	r24, r24
    ac26:	11 f0       	breq	.+4      	; 0xac2c <_ZN4leds5blinkE7Blink_t+0x37c>
    ac28:	81 e0       	ldi	r24, 0x01	; 1
    ac2a:	01 c0       	rjmp	.+2      	; 0xac2e <_ZN4leds5blinkE7Blink_t+0x37e>
    ac2c:	80 e0       	ldi	r24, 0x00	; 0
    ac2e:	88 23       	and	r24, r24
    ac30:	49 f0       	breq	.+18     	; 0xac44 <_ZN4leds5blinkE7Blink_t+0x394>
		{
			TCB3.INTCTRL |= TCB_CAPT_bm;   /* Capture or Timeout: enabled */
    ac32:	80 e3       	ldi	r24, 0x30	; 48
    ac34:	9b e0       	ldi	r25, 0x0B	; 11
    ac36:	20 e3       	ldi	r18, 0x30	; 48
    ac38:	3b e0       	ldi	r19, 0x0B	; 11
    ac3a:	f9 01       	movw	r30, r18
    ac3c:	25 81       	ldd	r18, Z+5	; 0x05
    ac3e:	21 60       	ori	r18, 0x01	; 1
    ac40:	fc 01       	movw	r30, r24
    ac42:	25 83       	std	Z+5, r18	; 0x05
		}
	}
	
	lastBlinkSetting = blinkMode;
    ac44:	8b 81       	ldd	r24, Y+3	; 0x03
    ac46:	80 93 d5 47 	sts	0x47D5, r24	; 0x8047d5 <_ZL16lastBlinkSetting>
}
    ac4a:	00 00       	nop
    ac4c:	23 96       	adiw	r28, 0x03	; 3
    ac4e:	cd bf       	out	0x3d, r28	; 61
    ac50:	de bf       	out	0x3e, r29	; 62
    ac52:	df 91       	pop	r29
    ac54:	cf 91       	pop	r28
    ac56:	08 95       	ret

0000ac58 <PORTC_set_pin_pull_mode>:

void lb_send_sync(void)
{
	sprintf(g_tempMsgBuff, ".....");
	lb_send_text(g_tempMsgBuff);
}
    ac58:	cf 93       	push	r28
    ac5a:	df 93       	push	r29
    ac5c:	00 d0       	rcall	.+0      	; 0xac5e <PORTC_set_pin_pull_mode+0x6>
    ac5e:	00 d0       	rcall	.+0      	; 0xac60 <PORTC_set_pin_pull_mode+0x8>
    ac60:	cd b7       	in	r28, 0x3d	; 61
    ac62:	de b7       	in	r29, 0x3e	; 62
    ac64:	8b 83       	std	Y+3, r24	; 0x03
    ac66:	6c 83       	std	Y+4, r22	; 0x04
    ac68:	8b 81       	ldd	r24, Y+3	; 0x03
    ac6a:	88 2f       	mov	r24, r24
    ac6c:	90 e0       	ldi	r25, 0x00	; 0
    ac6e:	80 5b       	subi	r24, 0xB0	; 176
    ac70:	9b 4f       	sbci	r25, 0xFB	; 251
    ac72:	89 83       	std	Y+1, r24	; 0x01
    ac74:	9a 83       	std	Y+2, r25	; 0x02
    ac76:	8c 81       	ldd	r24, Y+4	; 0x04
    ac78:	81 30       	cpi	r24, 0x01	; 1
    ac7a:	59 f4       	brne	.+22     	; 0xac92 <PORTC_set_pin_pull_mode+0x3a>
    ac7c:	89 81       	ldd	r24, Y+1	; 0x01
    ac7e:	9a 81       	ldd	r25, Y+2	; 0x02
    ac80:	fc 01       	movw	r30, r24
    ac82:	80 81       	ld	r24, Z
    ac84:	28 2f       	mov	r18, r24
    ac86:	28 60       	ori	r18, 0x08	; 8
    ac88:	89 81       	ldd	r24, Y+1	; 0x01
    ac8a:	9a 81       	ldd	r25, Y+2	; 0x02
    ac8c:	fc 01       	movw	r30, r24
    ac8e:	20 83       	st	Z, r18
    ac90:	0d c0       	rjmp	.+26     	; 0xacac <PORTC_set_pin_pull_mode+0x54>
    ac92:	8c 81       	ldd	r24, Y+4	; 0x04
    ac94:	88 23       	and	r24, r24
    ac96:	51 f4       	brne	.+20     	; 0xacac <PORTC_set_pin_pull_mode+0x54>
    ac98:	89 81       	ldd	r24, Y+1	; 0x01
    ac9a:	9a 81       	ldd	r25, Y+2	; 0x02
    ac9c:	fc 01       	movw	r30, r24
    ac9e:	80 81       	ld	r24, Z
    aca0:	28 2f       	mov	r18, r24
    aca2:	27 7f       	andi	r18, 0xF7	; 247
    aca4:	89 81       	ldd	r24, Y+1	; 0x01
    aca6:	9a 81       	ldd	r25, Y+2	; 0x02
    aca8:	fc 01       	movw	r30, r24
    acaa:	20 83       	st	Z, r18
    acac:	00 00       	nop
    acae:	24 96       	adiw	r28, 0x04	; 4
    acb0:	cd bf       	out	0x3d, r28	; 61
    acb2:	de bf       	out	0x3e, r29	; 62
    acb4:	df 91       	pop	r29
    acb6:	cf 91       	pop	r28
    acb8:	08 95       	ret

0000acba <PORTC_set_pin_dir>:
    acba:	cf 93       	push	r28
    acbc:	df 93       	push	r29
    acbe:	00 d0       	rcall	.+0      	; 0xacc0 <PORTC_set_pin_dir+0x6>
    acc0:	cd b7       	in	r28, 0x3d	; 61
    acc2:	de b7       	in	r29, 0x3e	; 62
    acc4:	89 83       	std	Y+1, r24	; 0x01
    acc6:	6a 83       	std	Y+2, r22	; 0x02
    acc8:	8a 81       	ldd	r24, Y+2	; 0x02
    acca:	88 2f       	mov	r24, r24
    accc:	90 e0       	ldi	r25, 0x00	; 0
    acce:	81 30       	cpi	r24, 0x01	; 1
    acd0:	91 05       	cpc	r25, r1
    acd2:	e1 f0       	breq	.+56     	; 0xad0c <PORTC_set_pin_dir+0x52>
    acd4:	82 30       	cpi	r24, 0x02	; 2
    acd6:	91 05       	cpc	r25, r1
    acd8:	71 f1       	breq	.+92     	; 0xad36 <PORTC_set_pin_dir+0x7c>
    acda:	89 2b       	or	r24, r25
    acdc:	09 f0       	breq	.+2      	; 0xace0 <PORTC_set_pin_dir+0x26>
    acde:	3b c0       	rjmp	.+118    	; 0xad56 <PORTC_set_pin_dir+0x9c>
    ace0:	88 e0       	ldi	r24, 0x08	; 8
    ace2:	90 e0       	ldi	r25, 0x00	; 0
    ace4:	28 e0       	ldi	r18, 0x08	; 8
    ace6:	30 e0       	ldi	r19, 0x00	; 0
    ace8:	f9 01       	movw	r30, r18
    acea:	20 81       	ld	r18, Z
    acec:	62 2f       	mov	r22, r18
    acee:	29 81       	ldd	r18, Y+1	; 0x01
    acf0:	42 2f       	mov	r20, r18
    acf2:	50 e0       	ldi	r21, 0x00	; 0
    acf4:	21 e0       	ldi	r18, 0x01	; 1
    acf6:	30 e0       	ldi	r19, 0x00	; 0
    acf8:	02 c0       	rjmp	.+4      	; 0xacfe <PORTC_set_pin_dir+0x44>
    acfa:	22 0f       	add	r18, r18
    acfc:	33 1f       	adc	r19, r19
    acfe:	4a 95       	dec	r20
    ad00:	e2 f7       	brpl	.-8      	; 0xacfa <PORTC_set_pin_dir+0x40>
    ad02:	20 95       	com	r18
    ad04:	26 23       	and	r18, r22
    ad06:	fc 01       	movw	r30, r24
    ad08:	20 83       	st	Z, r18
    ad0a:	25 c0       	rjmp	.+74     	; 0xad56 <PORTC_set_pin_dir+0x9c>
    ad0c:	88 e0       	ldi	r24, 0x08	; 8
    ad0e:	90 e0       	ldi	r25, 0x00	; 0
    ad10:	28 e0       	ldi	r18, 0x08	; 8
    ad12:	30 e0       	ldi	r19, 0x00	; 0
    ad14:	f9 01       	movw	r30, r18
    ad16:	20 81       	ld	r18, Z
    ad18:	62 2f       	mov	r22, r18
    ad1a:	29 81       	ldd	r18, Y+1	; 0x01
    ad1c:	42 2f       	mov	r20, r18
    ad1e:	50 e0       	ldi	r21, 0x00	; 0
    ad20:	21 e0       	ldi	r18, 0x01	; 1
    ad22:	30 e0       	ldi	r19, 0x00	; 0
    ad24:	02 c0       	rjmp	.+4      	; 0xad2a <PORTC_set_pin_dir+0x70>
    ad26:	22 0f       	add	r18, r18
    ad28:	33 1f       	adc	r19, r19
    ad2a:	4a 95       	dec	r20
    ad2c:	e2 f7       	brpl	.-8      	; 0xad26 <PORTC_set_pin_dir+0x6c>
    ad2e:	26 2b       	or	r18, r22
    ad30:	fc 01       	movw	r30, r24
    ad32:	20 83       	st	Z, r18
    ad34:	10 c0       	rjmp	.+32     	; 0xad56 <PORTC_set_pin_dir+0x9c>
    ad36:	89 81       	ldd	r24, Y+1	; 0x01
    ad38:	88 2f       	mov	r24, r24
    ad3a:	90 e0       	ldi	r25, 0x00	; 0
    ad3c:	80 5b       	subi	r24, 0xB0	; 176
    ad3e:	9b 4f       	sbci	r25, 0xFB	; 251
    ad40:	29 81       	ldd	r18, Y+1	; 0x01
    ad42:	22 2f       	mov	r18, r18
    ad44:	30 e0       	ldi	r19, 0x00	; 0
    ad46:	20 5b       	subi	r18, 0xB0	; 176
    ad48:	3b 4f       	sbci	r19, 0xFB	; 251
    ad4a:	f9 01       	movw	r30, r18
    ad4c:	20 81       	ld	r18, Z
    ad4e:	28 60       	ori	r18, 0x08	; 8
    ad50:	fc 01       	movw	r30, r24
    ad52:	20 83       	st	Z, r18
    ad54:	00 00       	nop
    ad56:	00 00       	nop
    ad58:	0f 90       	pop	r0
    ad5a:	0f 90       	pop	r0
    ad5c:	df 91       	pop	r29
    ad5e:	cf 91       	pop	r28
    ad60:	08 95       	ret

0000ad62 <PORTC_set_pin_level>:
    ad62:	cf 93       	push	r28
    ad64:	df 93       	push	r29
    ad66:	00 d0       	rcall	.+0      	; 0xad68 <PORTC_set_pin_level+0x6>
    ad68:	cd b7       	in	r28, 0x3d	; 61
    ad6a:	de b7       	in	r29, 0x3e	; 62
    ad6c:	89 83       	std	Y+1, r24	; 0x01
    ad6e:	6a 83       	std	Y+2, r22	; 0x02
    ad70:	8a 81       	ldd	r24, Y+2	; 0x02
    ad72:	88 23       	and	r24, r24
    ad74:	a9 f0       	breq	.+42     	; 0xada0 <PORTC_set_pin_level+0x3e>
    ad76:	88 e0       	ldi	r24, 0x08	; 8
    ad78:	90 e0       	ldi	r25, 0x00	; 0
    ad7a:	28 e0       	ldi	r18, 0x08	; 8
    ad7c:	30 e0       	ldi	r19, 0x00	; 0
    ad7e:	f9 01       	movw	r30, r18
    ad80:	21 81       	ldd	r18, Z+1	; 0x01
    ad82:	62 2f       	mov	r22, r18
    ad84:	29 81       	ldd	r18, Y+1	; 0x01
    ad86:	42 2f       	mov	r20, r18
    ad88:	50 e0       	ldi	r21, 0x00	; 0
    ad8a:	21 e0       	ldi	r18, 0x01	; 1
    ad8c:	30 e0       	ldi	r19, 0x00	; 0
    ad8e:	02 c0       	rjmp	.+4      	; 0xad94 <PORTC_set_pin_level+0x32>
    ad90:	22 0f       	add	r18, r18
    ad92:	33 1f       	adc	r19, r19
    ad94:	4a 95       	dec	r20
    ad96:	e2 f7       	brpl	.-8      	; 0xad90 <PORTC_set_pin_level+0x2e>
    ad98:	26 2b       	or	r18, r22
    ad9a:	fc 01       	movw	r30, r24
    ad9c:	21 83       	std	Z+1, r18	; 0x01
    ad9e:	15 c0       	rjmp	.+42     	; 0xadca <PORTC_set_pin_level+0x68>
    ada0:	88 e0       	ldi	r24, 0x08	; 8
    ada2:	90 e0       	ldi	r25, 0x00	; 0
    ada4:	28 e0       	ldi	r18, 0x08	; 8
    ada6:	30 e0       	ldi	r19, 0x00	; 0
    ada8:	f9 01       	movw	r30, r18
    adaa:	21 81       	ldd	r18, Z+1	; 0x01
    adac:	62 2f       	mov	r22, r18
    adae:	29 81       	ldd	r18, Y+1	; 0x01
    adb0:	42 2f       	mov	r20, r18
    adb2:	50 e0       	ldi	r21, 0x00	; 0
    adb4:	21 e0       	ldi	r18, 0x01	; 1
    adb6:	30 e0       	ldi	r19, 0x00	; 0
    adb8:	02 c0       	rjmp	.+4      	; 0xadbe <PORTC_set_pin_level+0x5c>
    adba:	22 0f       	add	r18, r18
    adbc:	33 1f       	adc	r19, r19
    adbe:	4a 95       	dec	r20
    adc0:	e2 f7       	brpl	.-8      	; 0xadba <PORTC_set_pin_level+0x58>
    adc2:	20 95       	com	r18
    adc4:	26 23       	and	r18, r22
    adc6:	fc 01       	movw	r30, r24
    adc8:	21 83       	std	Z+1, r18	; 0x01
    adca:	00 00       	nop
    adcc:	0f 90       	pop	r0
    adce:	0f 90       	pop	r0
    add0:	df 91       	pop	r29
    add2:	cf 91       	pop	r28
    add4:	08 95       	ret

0000add6 <PORTE_set_pin_pull_mode>:
    add6:	cf 93       	push	r28
    add8:	df 93       	push	r29
    adda:	00 d0       	rcall	.+0      	; 0xaddc <PORTE_set_pin_pull_mode+0x6>
    addc:	00 d0       	rcall	.+0      	; 0xadde <PORTE_set_pin_pull_mode+0x8>
    adde:	cd b7       	in	r28, 0x3d	; 61
    ade0:	de b7       	in	r29, 0x3e	; 62
    ade2:	8b 83       	std	Y+3, r24	; 0x03
    ade4:	6c 83       	std	Y+4, r22	; 0x04
    ade6:	8b 81       	ldd	r24, Y+3	; 0x03
    ade8:	88 2f       	mov	r24, r24
    adea:	90 e0       	ldi	r25, 0x00	; 0
    adec:	80 57       	subi	r24, 0x70	; 112
    adee:	9b 4f       	sbci	r25, 0xFB	; 251
    adf0:	89 83       	std	Y+1, r24	; 0x01
    adf2:	9a 83       	std	Y+2, r25	; 0x02
    adf4:	8c 81       	ldd	r24, Y+4	; 0x04
    adf6:	81 30       	cpi	r24, 0x01	; 1
    adf8:	59 f4       	brne	.+22     	; 0xae10 <PORTE_set_pin_pull_mode+0x3a>
    adfa:	89 81       	ldd	r24, Y+1	; 0x01
    adfc:	9a 81       	ldd	r25, Y+2	; 0x02
    adfe:	fc 01       	movw	r30, r24
    ae00:	80 81       	ld	r24, Z
    ae02:	28 2f       	mov	r18, r24
    ae04:	28 60       	ori	r18, 0x08	; 8
    ae06:	89 81       	ldd	r24, Y+1	; 0x01
    ae08:	9a 81       	ldd	r25, Y+2	; 0x02
    ae0a:	fc 01       	movw	r30, r24
    ae0c:	20 83       	st	Z, r18
    ae0e:	0d c0       	rjmp	.+26     	; 0xae2a <PORTE_set_pin_pull_mode+0x54>
    ae10:	8c 81       	ldd	r24, Y+4	; 0x04
    ae12:	88 23       	and	r24, r24
    ae14:	51 f4       	brne	.+20     	; 0xae2a <PORTE_set_pin_pull_mode+0x54>
    ae16:	89 81       	ldd	r24, Y+1	; 0x01
    ae18:	9a 81       	ldd	r25, Y+2	; 0x02
    ae1a:	fc 01       	movw	r30, r24
    ae1c:	80 81       	ld	r24, Z
    ae1e:	28 2f       	mov	r18, r24
    ae20:	27 7f       	andi	r18, 0xF7	; 247
    ae22:	89 81       	ldd	r24, Y+1	; 0x01
    ae24:	9a 81       	ldd	r25, Y+2	; 0x02
    ae26:	fc 01       	movw	r30, r24
    ae28:	20 83       	st	Z, r18
    ae2a:	00 00       	nop
    ae2c:	24 96       	adiw	r28, 0x04	; 4
    ae2e:	cd bf       	out	0x3d, r28	; 61
    ae30:	de bf       	out	0x3e, r29	; 62
    ae32:	df 91       	pop	r29
    ae34:	cf 91       	pop	r28
    ae36:	08 95       	ret

0000ae38 <PORTE_set_pin_dir>:
    ae38:	cf 93       	push	r28
    ae3a:	df 93       	push	r29
    ae3c:	00 d0       	rcall	.+0      	; 0xae3e <PORTE_set_pin_dir+0x6>
    ae3e:	cd b7       	in	r28, 0x3d	; 61
    ae40:	de b7       	in	r29, 0x3e	; 62
    ae42:	89 83       	std	Y+1, r24	; 0x01
    ae44:	6a 83       	std	Y+2, r22	; 0x02
    ae46:	8a 81       	ldd	r24, Y+2	; 0x02
    ae48:	88 2f       	mov	r24, r24
    ae4a:	90 e0       	ldi	r25, 0x00	; 0
    ae4c:	81 30       	cpi	r24, 0x01	; 1
    ae4e:	91 05       	cpc	r25, r1
    ae50:	e1 f0       	breq	.+56     	; 0xae8a <PORTE_set_pin_dir+0x52>
    ae52:	82 30       	cpi	r24, 0x02	; 2
    ae54:	91 05       	cpc	r25, r1
    ae56:	71 f1       	breq	.+92     	; 0xaeb4 <PORTE_set_pin_dir+0x7c>
    ae58:	89 2b       	or	r24, r25
    ae5a:	09 f0       	breq	.+2      	; 0xae5e <PORTE_set_pin_dir+0x26>
    ae5c:	3b c0       	rjmp	.+118    	; 0xaed4 <PORTE_set_pin_dir+0x9c>
    ae5e:	80 e1       	ldi	r24, 0x10	; 16
    ae60:	90 e0       	ldi	r25, 0x00	; 0
    ae62:	20 e1       	ldi	r18, 0x10	; 16
    ae64:	30 e0       	ldi	r19, 0x00	; 0
    ae66:	f9 01       	movw	r30, r18
    ae68:	20 81       	ld	r18, Z
    ae6a:	62 2f       	mov	r22, r18
    ae6c:	29 81       	ldd	r18, Y+1	; 0x01
    ae6e:	42 2f       	mov	r20, r18
    ae70:	50 e0       	ldi	r21, 0x00	; 0
    ae72:	21 e0       	ldi	r18, 0x01	; 1
    ae74:	30 e0       	ldi	r19, 0x00	; 0
    ae76:	02 c0       	rjmp	.+4      	; 0xae7c <PORTE_set_pin_dir+0x44>
    ae78:	22 0f       	add	r18, r18
    ae7a:	33 1f       	adc	r19, r19
    ae7c:	4a 95       	dec	r20
    ae7e:	e2 f7       	brpl	.-8      	; 0xae78 <PORTE_set_pin_dir+0x40>
    ae80:	20 95       	com	r18
    ae82:	26 23       	and	r18, r22
    ae84:	fc 01       	movw	r30, r24
    ae86:	20 83       	st	Z, r18
    ae88:	25 c0       	rjmp	.+74     	; 0xaed4 <PORTE_set_pin_dir+0x9c>
    ae8a:	80 e1       	ldi	r24, 0x10	; 16
    ae8c:	90 e0       	ldi	r25, 0x00	; 0
    ae8e:	20 e1       	ldi	r18, 0x10	; 16
    ae90:	30 e0       	ldi	r19, 0x00	; 0
    ae92:	f9 01       	movw	r30, r18
    ae94:	20 81       	ld	r18, Z
    ae96:	62 2f       	mov	r22, r18
    ae98:	29 81       	ldd	r18, Y+1	; 0x01
    ae9a:	42 2f       	mov	r20, r18
    ae9c:	50 e0       	ldi	r21, 0x00	; 0
    ae9e:	21 e0       	ldi	r18, 0x01	; 1
    aea0:	30 e0       	ldi	r19, 0x00	; 0
    aea2:	02 c0       	rjmp	.+4      	; 0xaea8 <PORTE_set_pin_dir+0x70>
    aea4:	22 0f       	add	r18, r18
    aea6:	33 1f       	adc	r19, r19
    aea8:	4a 95       	dec	r20
    aeaa:	e2 f7       	brpl	.-8      	; 0xaea4 <PORTE_set_pin_dir+0x6c>
    aeac:	26 2b       	or	r18, r22
    aeae:	fc 01       	movw	r30, r24
    aeb0:	20 83       	st	Z, r18
    aeb2:	10 c0       	rjmp	.+32     	; 0xaed4 <PORTE_set_pin_dir+0x9c>
    aeb4:	89 81       	ldd	r24, Y+1	; 0x01
    aeb6:	88 2f       	mov	r24, r24
    aeb8:	90 e0       	ldi	r25, 0x00	; 0
    aeba:	80 57       	subi	r24, 0x70	; 112
    aebc:	9b 4f       	sbci	r25, 0xFB	; 251
    aebe:	29 81       	ldd	r18, Y+1	; 0x01
    aec0:	22 2f       	mov	r18, r18
    aec2:	30 e0       	ldi	r19, 0x00	; 0
    aec4:	20 57       	subi	r18, 0x70	; 112
    aec6:	3b 4f       	sbci	r19, 0xFB	; 251
    aec8:	f9 01       	movw	r30, r18
    aeca:	20 81       	ld	r18, Z
    aecc:	28 60       	ori	r18, 0x08	; 8
    aece:	fc 01       	movw	r30, r24
    aed0:	20 83       	st	Z, r18
    aed2:	00 00       	nop
    aed4:	00 00       	nop
    aed6:	0f 90       	pop	r0
    aed8:	0f 90       	pop	r0
    aeda:	df 91       	pop	r29
    aedc:	cf 91       	pop	r28
    aede:	08 95       	ret

0000aee0 <PORTE_set_pin_level>:
    aee0:	cf 93       	push	r28
    aee2:	df 93       	push	r29
    aee4:	00 d0       	rcall	.+0      	; 0xaee6 <PORTE_set_pin_level+0x6>
    aee6:	cd b7       	in	r28, 0x3d	; 61
    aee8:	de b7       	in	r29, 0x3e	; 62
    aeea:	89 83       	std	Y+1, r24	; 0x01
    aeec:	6a 83       	std	Y+2, r22	; 0x02
    aeee:	8a 81       	ldd	r24, Y+2	; 0x02
    aef0:	88 23       	and	r24, r24
    aef2:	a9 f0       	breq	.+42     	; 0xaf1e <PORTE_set_pin_level+0x3e>
    aef4:	80 e1       	ldi	r24, 0x10	; 16
    aef6:	90 e0       	ldi	r25, 0x00	; 0
    aef8:	20 e1       	ldi	r18, 0x10	; 16
    aefa:	30 e0       	ldi	r19, 0x00	; 0
    aefc:	f9 01       	movw	r30, r18
    aefe:	21 81       	ldd	r18, Z+1	; 0x01
    af00:	62 2f       	mov	r22, r18
    af02:	29 81       	ldd	r18, Y+1	; 0x01
    af04:	42 2f       	mov	r20, r18
    af06:	50 e0       	ldi	r21, 0x00	; 0
    af08:	21 e0       	ldi	r18, 0x01	; 1
    af0a:	30 e0       	ldi	r19, 0x00	; 0
    af0c:	02 c0       	rjmp	.+4      	; 0xaf12 <PORTE_set_pin_level+0x32>
    af0e:	22 0f       	add	r18, r18
    af10:	33 1f       	adc	r19, r19
    af12:	4a 95       	dec	r20
    af14:	e2 f7       	brpl	.-8      	; 0xaf0e <PORTE_set_pin_level+0x2e>
    af16:	26 2b       	or	r18, r22
    af18:	fc 01       	movw	r30, r24
    af1a:	21 83       	std	Z+1, r18	; 0x01
    af1c:	15 c0       	rjmp	.+42     	; 0xaf48 <PORTE_set_pin_level+0x68>
    af1e:	80 e1       	ldi	r24, 0x10	; 16
    af20:	90 e0       	ldi	r25, 0x00	; 0
    af22:	20 e1       	ldi	r18, 0x10	; 16
    af24:	30 e0       	ldi	r19, 0x00	; 0
    af26:	f9 01       	movw	r30, r18
    af28:	21 81       	ldd	r18, Z+1	; 0x01
    af2a:	62 2f       	mov	r22, r18
    af2c:	29 81       	ldd	r18, Y+1	; 0x01
    af2e:	42 2f       	mov	r20, r18
    af30:	50 e0       	ldi	r21, 0x00	; 0
    af32:	21 e0       	ldi	r18, 0x01	; 1
    af34:	30 e0       	ldi	r19, 0x00	; 0
    af36:	02 c0       	rjmp	.+4      	; 0xaf3c <PORTE_set_pin_level+0x5c>
    af38:	22 0f       	add	r18, r18
    af3a:	33 1f       	adc	r19, r19
    af3c:	4a 95       	dec	r20
    af3e:	e2 f7       	brpl	.-8      	; 0xaf38 <PORTE_set_pin_level+0x58>
    af40:	20 95       	com	r18
    af42:	26 23       	and	r18, r22
    af44:	fc 01       	movw	r30, r24
    af46:	21 83       	std	Z+1, r18	; 0x01
    af48:	00 00       	nop
    af4a:	0f 90       	pop	r0
    af4c:	0f 90       	pop	r0
    af4e:	df 91       	pop	r29
    af50:	cf 91       	pop	r28
    af52:	08 95       	ret

0000af54 <PC0_set_dir>:
    af54:	cf 93       	push	r28
    af56:	df 93       	push	r29
    af58:	1f 92       	push	r1
    af5a:	cd b7       	in	r28, 0x3d	; 61
    af5c:	de b7       	in	r29, 0x3e	; 62
    af5e:	89 83       	std	Y+1, r24	; 0x01
    af60:	69 81       	ldd	r22, Y+1	; 0x01
    af62:	80 e0       	ldi	r24, 0x00	; 0
    af64:	0e 94 5d 56 	call	0xacba	; 0xacba <PORTC_set_pin_dir>
    af68:	00 00       	nop
    af6a:	0f 90       	pop	r0
    af6c:	df 91       	pop	r29
    af6e:	cf 91       	pop	r28
    af70:	08 95       	ret

0000af72 <PC0_set_level>:
    af72:	cf 93       	push	r28
    af74:	df 93       	push	r29
    af76:	1f 92       	push	r1
    af78:	cd b7       	in	r28, 0x3d	; 61
    af7a:	de b7       	in	r29, 0x3e	; 62
    af7c:	89 83       	std	Y+1, r24	; 0x01
    af7e:	69 81       	ldd	r22, Y+1	; 0x01
    af80:	80 e0       	ldi	r24, 0x00	; 0
    af82:	0e 94 b1 56 	call	0xad62	; 0xad62 <PORTC_set_pin_level>
    af86:	00 00       	nop
    af88:	0f 90       	pop	r0
    af8a:	df 91       	pop	r29
    af8c:	cf 91       	pop	r28
    af8e:	08 95       	ret

0000af90 <PC1_set_pull_mode>:
    af90:	cf 93       	push	r28
    af92:	df 93       	push	r29
    af94:	1f 92       	push	r1
    af96:	cd b7       	in	r28, 0x3d	; 61
    af98:	de b7       	in	r29, 0x3e	; 62
    af9a:	89 83       	std	Y+1, r24	; 0x01
    af9c:	69 81       	ldd	r22, Y+1	; 0x01
    af9e:	81 e0       	ldi	r24, 0x01	; 1
    afa0:	0e 94 2c 56 	call	0xac58	; 0xac58 <PORTC_set_pin_pull_mode>
    afa4:	00 00       	nop
    afa6:	0f 90       	pop	r0
    afa8:	df 91       	pop	r29
    afaa:	cf 91       	pop	r28
    afac:	08 95       	ret

0000afae <PC1_set_dir>:
    afae:	cf 93       	push	r28
    afb0:	df 93       	push	r29
    afb2:	1f 92       	push	r1
    afb4:	cd b7       	in	r28, 0x3d	; 61
    afb6:	de b7       	in	r29, 0x3e	; 62
    afb8:	89 83       	std	Y+1, r24	; 0x01
    afba:	69 81       	ldd	r22, Y+1	; 0x01
    afbc:	81 e0       	ldi	r24, 0x01	; 1
    afbe:	0e 94 5d 56 	call	0xacba	; 0xacba <PORTC_set_pin_dir>
    afc2:	00 00       	nop
    afc4:	0f 90       	pop	r0
    afc6:	df 91       	pop	r29
    afc8:	cf 91       	pop	r28
    afca:	08 95       	ret

0000afcc <PE0_set_dir>:
    afcc:	cf 93       	push	r28
    afce:	df 93       	push	r29
    afd0:	1f 92       	push	r1
    afd2:	cd b7       	in	r28, 0x3d	; 61
    afd4:	de b7       	in	r29, 0x3e	; 62
    afd6:	89 83       	std	Y+1, r24	; 0x01
    afd8:	69 81       	ldd	r22, Y+1	; 0x01
    afda:	80 e0       	ldi	r24, 0x00	; 0
    afdc:	0e 94 1c 57 	call	0xae38	; 0xae38 <PORTE_set_pin_dir>
    afe0:	00 00       	nop
    afe2:	0f 90       	pop	r0
    afe4:	df 91       	pop	r29
    afe6:	cf 91       	pop	r28
    afe8:	08 95       	ret

0000afea <PE0_set_level>:
    afea:	cf 93       	push	r28
    afec:	df 93       	push	r29
    afee:	1f 92       	push	r1
    aff0:	cd b7       	in	r28, 0x3d	; 61
    aff2:	de b7       	in	r29, 0x3e	; 62
    aff4:	89 83       	std	Y+1, r24	; 0x01
    aff6:	69 81       	ldd	r22, Y+1	; 0x01
    aff8:	80 e0       	ldi	r24, 0x00	; 0
    affa:	0e 94 70 57 	call	0xaee0	; 0xaee0 <PORTE_set_pin_level>
    affe:	00 00       	nop
    b000:	0f 90       	pop	r0
    b002:	df 91       	pop	r29
    b004:	cf 91       	pop	r28
    b006:	08 95       	ret

0000b008 <PE1_set_pull_mode>:
    b008:	cf 93       	push	r28
    b00a:	df 93       	push	r29
    b00c:	1f 92       	push	r1
    b00e:	cd b7       	in	r28, 0x3d	; 61
    b010:	de b7       	in	r29, 0x3e	; 62
    b012:	89 83       	std	Y+1, r24	; 0x01
    b014:	69 81       	ldd	r22, Y+1	; 0x01
    b016:	81 e0       	ldi	r24, 0x01	; 1
    b018:	0e 94 eb 56 	call	0xadd6	; 0xadd6 <PORTE_set_pin_pull_mode>
    b01c:	00 00       	nop
    b01e:	0f 90       	pop	r0
    b020:	df 91       	pop	r29
    b022:	cf 91       	pop	r28
    b024:	08 95       	ret

0000b026 <PE1_set_dir>:
    b026:	cf 93       	push	r28
    b028:	df 93       	push	r29
    b02a:	1f 92       	push	r1
    b02c:	cd b7       	in	r28, 0x3d	; 61
    b02e:	de b7       	in	r29, 0x3e	; 62
    b030:	89 83       	std	Y+1, r24	; 0x01
    b032:	69 81       	ldd	r22, Y+1	; 0x01
    b034:	81 e0       	ldi	r24, 0x01	; 1
    b036:	0e 94 1c 57 	call	0xae38	; 0xae38 <PORTE_set_pin_dir>
    b03a:	00 00       	nop
    b03c:	0f 90       	pop	r0
    b03e:	df 91       	pop	r29
    b040:	cf 91       	pop	r28
    b042:	08 95       	ret

0000b044 <_Z18nextFullLBTxBufferv>:
    b044:	cf 93       	push	r28
    b046:	df 93       	push	r29
    b048:	00 d0       	rcall	.+0      	; 0xb04a <_Z18nextFullLBTxBufferv+0x6>
    b04a:	cd b7       	in	r28, 0x3d	; 61
    b04c:	de b7       	in	r29, 0x3e	; 62
    b04e:	81 e0       	ldi	r24, 0x01	; 1
    b050:	89 83       	std	Y+1, r24	; 0x01
    b052:	1a 82       	std	Y+2, r1	; 0x02
    b054:	80 91 67 49 	lds	r24, 0x4967	; 0x804967 <_ZZ18nextFullLBTxBuffervE11bufferIndex>
    b058:	28 2f       	mov	r18, r24
    b05a:	30 e0       	ldi	r19, 0x00	; 0
    b05c:	42 e3       	ldi	r20, 0x32	; 50
    b05e:	42 9f       	mul	r20, r18
    b060:	c0 01       	movw	r24, r0
    b062:	43 9f       	mul	r20, r19
    b064:	90 0d       	add	r25, r0
    b066:	11 24       	eor	r1, r1
    b068:	85 5e       	subi	r24, 0xE5	; 229
    b06a:	97 4b       	sbci	r25, 0xB7	; 183
    b06c:	fc 01       	movw	r30, r24
    b06e:	80 81       	ld	r24, Z
    b070:	88 23       	and	r24, r24
    b072:	c1 f4       	brne	.+48     	; 0xb0a4 <_Z18nextFullLBTxBufferv+0x60>
    b074:	8a 81       	ldd	r24, Y+2	; 0x02
    b076:	8f 5f       	subi	r24, 0xFF	; 255
    b078:	8a 83       	std	Y+2, r24	; 0x02
    b07a:	81 e0       	ldi	r24, 0x01	; 1
    b07c:	9a 81       	ldd	r25, Y+2	; 0x02
    b07e:	94 30       	cpi	r25, 0x04	; 4
    b080:	08 f4       	brcc	.+2      	; 0xb084 <_Z18nextFullLBTxBufferv+0x40>
    b082:	80 e0       	ldi	r24, 0x00	; 0
    b084:	88 23       	and	r24, r24
    b086:	11 f0       	breq	.+4      	; 0xb08c <_Z18nextFullLBTxBufferv+0x48>
    b088:	19 82       	std	Y+1, r1	; 0x01
    b08a:	0c c0       	rjmp	.+24     	; 0xb0a4 <_Z18nextFullLBTxBufferv+0x60>
    b08c:	80 91 67 49 	lds	r24, 0x4967	; 0x804967 <_ZZ18nextFullLBTxBuffervE11bufferIndex>
    b090:	8f 5f       	subi	r24, 0xFF	; 255
    b092:	80 93 67 49 	sts	0x4967, r24	; 0x804967 <_ZZ18nextFullLBTxBuffervE11bufferIndex>
    b096:	80 91 67 49 	lds	r24, 0x4967	; 0x804967 <_ZZ18nextFullLBTxBuffervE11bufferIndex>
    b09a:	84 30       	cpi	r24, 0x04	; 4
    b09c:	d8 f2       	brcs	.-74     	; 0xb054 <_Z18nextFullLBTxBufferv+0x10>
    b09e:	10 92 67 49 	sts	0x4967, r1	; 0x804967 <_ZZ18nextFullLBTxBuffervE11bufferIndex>
    b0a2:	d8 cf       	rjmp	.-80     	; 0xb054 <_Z18nextFullLBTxBufferv+0x10>
    b0a4:	89 81       	ldd	r24, Y+1	; 0x01
    b0a6:	88 23       	and	r24, r24
    b0a8:	69 f0       	breq	.+26     	; 0xb0c4 <_Z18nextFullLBTxBufferv+0x80>
    b0aa:	80 91 67 49 	lds	r24, 0x4967	; 0x804967 <_ZZ18nextFullLBTxBuffervE11bufferIndex>
    b0ae:	28 2f       	mov	r18, r24
    b0b0:	30 e0       	ldi	r19, 0x00	; 0
    b0b2:	42 e3       	ldi	r20, 0x32	; 50
    b0b4:	42 9f       	mul	r20, r18
    b0b6:	c0 01       	movw	r24, r0
    b0b8:	43 9f       	mul	r20, r19
    b0ba:	90 0d       	add	r25, r0
    b0bc:	11 24       	eor	r1, r1
    b0be:	85 5e       	subi	r24, 0xE5	; 229
    b0c0:	97 4b       	sbci	r25, 0xB7	; 183
    b0c2:	02 c0       	rjmp	.+4      	; 0xb0c8 <_Z18nextFullLBTxBufferv+0x84>
    b0c4:	80 e0       	ldi	r24, 0x00	; 0
    b0c6:	90 e0       	ldi	r25, 0x00	; 0
    b0c8:	0f 90       	pop	r0
    b0ca:	0f 90       	pop	r0
    b0cc:	df 91       	pop	r29
    b0ce:	cf 91       	pop	r28
    b0d0:	08 95       	ret

0000b0d2 <_Z19nextEmptyLBTxBufferv>:
    b0d2:	cf 93       	push	r28
    b0d4:	df 93       	push	r29
    b0d6:	00 d0       	rcall	.+0      	; 0xb0d8 <_Z19nextEmptyLBTxBufferv+0x6>
    b0d8:	cd b7       	in	r28, 0x3d	; 61
    b0da:	de b7       	in	r29, 0x3e	; 62
    b0dc:	81 e0       	ldi	r24, 0x01	; 1
    b0de:	89 83       	std	Y+1, r24	; 0x01
    b0e0:	1a 82       	std	Y+2, r1	; 0x02
    b0e2:	80 91 68 49 	lds	r24, 0x4968	; 0x804968 <_ZZ19nextEmptyLBTxBuffervE11bufferIndex>
    b0e6:	28 2f       	mov	r18, r24
    b0e8:	30 e0       	ldi	r19, 0x00	; 0
    b0ea:	42 e3       	ldi	r20, 0x32	; 50
    b0ec:	42 9f       	mul	r20, r18
    b0ee:	c0 01       	movw	r24, r0
    b0f0:	43 9f       	mul	r20, r19
    b0f2:	90 0d       	add	r25, r0
    b0f4:	11 24       	eor	r1, r1
    b0f6:	85 5e       	subi	r24, 0xE5	; 229
    b0f8:	97 4b       	sbci	r25, 0xB7	; 183
    b0fa:	fc 01       	movw	r30, r24
    b0fc:	80 81       	ld	r24, Z
    b0fe:	88 23       	and	r24, r24
    b100:	c1 f0       	breq	.+48     	; 0xb132 <_Z19nextEmptyLBTxBufferv+0x60>
    b102:	8a 81       	ldd	r24, Y+2	; 0x02
    b104:	8f 5f       	subi	r24, 0xFF	; 255
    b106:	8a 83       	std	Y+2, r24	; 0x02
    b108:	81 e0       	ldi	r24, 0x01	; 1
    b10a:	9a 81       	ldd	r25, Y+2	; 0x02
    b10c:	94 30       	cpi	r25, 0x04	; 4
    b10e:	08 f4       	brcc	.+2      	; 0xb112 <_Z19nextEmptyLBTxBufferv+0x40>
    b110:	80 e0       	ldi	r24, 0x00	; 0
    b112:	88 23       	and	r24, r24
    b114:	11 f0       	breq	.+4      	; 0xb11a <_Z19nextEmptyLBTxBufferv+0x48>
    b116:	19 82       	std	Y+1, r1	; 0x01
    b118:	0c c0       	rjmp	.+24     	; 0xb132 <_Z19nextEmptyLBTxBufferv+0x60>
    b11a:	80 91 68 49 	lds	r24, 0x4968	; 0x804968 <_ZZ19nextEmptyLBTxBuffervE11bufferIndex>
    b11e:	8f 5f       	subi	r24, 0xFF	; 255
    b120:	80 93 68 49 	sts	0x4968, r24	; 0x804968 <_ZZ19nextEmptyLBTxBuffervE11bufferIndex>
    b124:	80 91 68 49 	lds	r24, 0x4968	; 0x804968 <_ZZ19nextEmptyLBTxBuffervE11bufferIndex>
    b128:	84 30       	cpi	r24, 0x04	; 4
    b12a:	d8 f2       	brcs	.-74     	; 0xb0e2 <_Z19nextEmptyLBTxBufferv+0x10>
    b12c:	10 92 68 49 	sts	0x4968, r1	; 0x804968 <_ZZ19nextEmptyLBTxBuffervE11bufferIndex>
    b130:	d8 cf       	rjmp	.-80     	; 0xb0e2 <_Z19nextEmptyLBTxBufferv+0x10>
    b132:	89 81       	ldd	r24, Y+1	; 0x01
    b134:	88 23       	and	r24, r24
    b136:	69 f0       	breq	.+26     	; 0xb152 <_Z19nextEmptyLBTxBufferv+0x80>
    b138:	80 91 68 49 	lds	r24, 0x4968	; 0x804968 <_ZZ19nextEmptyLBTxBuffervE11bufferIndex>
    b13c:	28 2f       	mov	r18, r24
    b13e:	30 e0       	ldi	r19, 0x00	; 0
    b140:	42 e3       	ldi	r20, 0x32	; 50
    b142:	42 9f       	mul	r20, r18
    b144:	c0 01       	movw	r24, r0
    b146:	43 9f       	mul	r20, r19
    b148:	90 0d       	add	r25, r0
    b14a:	11 24       	eor	r1, r1
    b14c:	85 5e       	subi	r24, 0xE5	; 229
    b14e:	97 4b       	sbci	r25, 0xB7	; 183
    b150:	02 c0       	rjmp	.+4      	; 0xb156 <_Z19nextEmptyLBTxBufferv+0x84>
    b152:	80 e0       	ldi	r24, 0x00	; 0
    b154:	90 e0       	ldi	r25, 0x00	; 0
    b156:	0f 90       	pop	r0
    b158:	0f 90       	pop	r0
    b15a:	df 91       	pop	r29
    b15c:	cf 91       	pop	r28
    b15e:	08 95       	ret

0000b160 <_Z19nextEmptyLBRxBufferv>:
    b160:	cf 93       	push	r28
    b162:	df 93       	push	r29
    b164:	00 d0       	rcall	.+0      	; 0xb166 <_Z19nextEmptyLBRxBufferv+0x6>
    b166:	cd b7       	in	r28, 0x3d	; 61
    b168:	de b7       	in	r29, 0x3e	; 62
    b16a:	81 e0       	ldi	r24, 0x01	; 1
    b16c:	89 83       	std	Y+1, r24	; 0x01
    b16e:	1a 82       	std	Y+2, r1	; 0x02
    b170:	80 91 69 49 	lds	r24, 0x4969	; 0x804969 <_ZZ19nextEmptyLBRxBuffervE11bufferIndex>
    b174:	28 2f       	mov	r18, r24
    b176:	30 e0       	ldi	r19, 0x00	; 0
    b178:	42 e4       	ldi	r20, 0x42	; 66
    b17a:	42 9f       	mul	r20, r18
    b17c:	c0 01       	movw	r24, r0
    b17e:	43 9f       	mul	r20, r19
    b180:	90 0d       	add	r25, r0
    b182:	11 24       	eor	r1, r1
    b184:	8c 51       	subi	r24, 0x1C	; 28
    b186:	97 4b       	sbci	r25, 0xB7	; 183
    b188:	fc 01       	movw	r30, r24
    b18a:	80 81       	ld	r24, Z
    b18c:	91 81       	ldd	r25, Z+1	; 0x01
    b18e:	89 2b       	or	r24, r25
    b190:	c1 f0       	breq	.+48     	; 0xb1c2 <_Z19nextEmptyLBRxBufferv+0x62>
    b192:	8a 81       	ldd	r24, Y+2	; 0x02
    b194:	8f 5f       	subi	r24, 0xFF	; 255
    b196:	8a 83       	std	Y+2, r24	; 0x02
    b198:	81 e0       	ldi	r24, 0x01	; 1
    b19a:	9a 81       	ldd	r25, Y+2	; 0x02
    b19c:	92 30       	cpi	r25, 0x02	; 2
    b19e:	08 f4       	brcc	.+2      	; 0xb1a2 <_Z19nextEmptyLBRxBufferv+0x42>
    b1a0:	80 e0       	ldi	r24, 0x00	; 0
    b1a2:	88 23       	and	r24, r24
    b1a4:	11 f0       	breq	.+4      	; 0xb1aa <_Z19nextEmptyLBRxBufferv+0x4a>
    b1a6:	19 82       	std	Y+1, r1	; 0x01
    b1a8:	0c c0       	rjmp	.+24     	; 0xb1c2 <_Z19nextEmptyLBRxBufferv+0x62>
    b1aa:	80 91 69 49 	lds	r24, 0x4969	; 0x804969 <_ZZ19nextEmptyLBRxBuffervE11bufferIndex>
    b1ae:	8f 5f       	subi	r24, 0xFF	; 255
    b1b0:	80 93 69 49 	sts	0x4969, r24	; 0x804969 <_ZZ19nextEmptyLBRxBuffervE11bufferIndex>
    b1b4:	80 91 69 49 	lds	r24, 0x4969	; 0x804969 <_ZZ19nextEmptyLBRxBuffervE11bufferIndex>
    b1b8:	82 30       	cpi	r24, 0x02	; 2
    b1ba:	d0 f2       	brcs	.-76     	; 0xb170 <_Z19nextEmptyLBRxBufferv+0x10>
    b1bc:	10 92 69 49 	sts	0x4969, r1	; 0x804969 <_ZZ19nextEmptyLBRxBuffervE11bufferIndex>
    b1c0:	d7 cf       	rjmp	.-82     	; 0xb170 <_Z19nextEmptyLBRxBufferv+0x10>
    b1c2:	89 81       	ldd	r24, Y+1	; 0x01
    b1c4:	88 23       	and	r24, r24
    b1c6:	69 f0       	breq	.+26     	; 0xb1e2 <_Z19nextEmptyLBRxBufferv+0x82>
    b1c8:	80 91 69 49 	lds	r24, 0x4969	; 0x804969 <_ZZ19nextEmptyLBRxBuffervE11bufferIndex>
    b1cc:	28 2f       	mov	r18, r24
    b1ce:	30 e0       	ldi	r19, 0x00	; 0
    b1d0:	42 e4       	ldi	r20, 0x42	; 66
    b1d2:	42 9f       	mul	r20, r18
    b1d4:	c0 01       	movw	r24, r0
    b1d6:	43 9f       	mul	r20, r19
    b1d8:	90 0d       	add	r25, r0
    b1da:	11 24       	eor	r1, r1
    b1dc:	8d 51       	subi	r24, 0x1D	; 29
    b1de:	97 4b       	sbci	r25, 0xB7	; 183
    b1e0:	02 c0       	rjmp	.+4      	; 0xb1e6 <_Z19nextEmptyLBRxBufferv+0x86>
    b1e2:	80 e0       	ldi	r24, 0x00	; 0
    b1e4:	90 e0       	ldi	r25, 0x00	; 0
    b1e6:	0f 90       	pop	r0
    b1e8:	0f 90       	pop	r0
    b1ea:	df 91       	pop	r29
    b1ec:	cf 91       	pop	r28
    b1ee:	08 95       	ret

0000b1f0 <_Z18nextFullLBRxBufferv>:
    b1f0:	cf 93       	push	r28
    b1f2:	df 93       	push	r29
    b1f4:	00 d0       	rcall	.+0      	; 0xb1f6 <_Z18nextFullLBRxBufferv+0x6>
    b1f6:	cd b7       	in	r28, 0x3d	; 61
    b1f8:	de b7       	in	r29, 0x3e	; 62
    b1fa:	81 e0       	ldi	r24, 0x01	; 1
    b1fc:	89 83       	std	Y+1, r24	; 0x01
    b1fe:	1a 82       	std	Y+2, r1	; 0x02
    b200:	80 91 6a 49 	lds	r24, 0x496A	; 0x80496a <_ZZ18nextFullLBRxBuffervE11bufferIndex>
    b204:	28 2f       	mov	r18, r24
    b206:	30 e0       	ldi	r19, 0x00	; 0
    b208:	42 e4       	ldi	r20, 0x42	; 66
    b20a:	42 9f       	mul	r20, r18
    b20c:	c0 01       	movw	r24, r0
    b20e:	43 9f       	mul	r20, r19
    b210:	90 0d       	add	r25, r0
    b212:	11 24       	eor	r1, r1
    b214:	8c 51       	subi	r24, 0x1C	; 28
    b216:	97 4b       	sbci	r25, 0xB7	; 183
    b218:	fc 01       	movw	r30, r24
    b21a:	80 81       	ld	r24, Z
    b21c:	91 81       	ldd	r25, Z+1	; 0x01
    b21e:	89 2b       	or	r24, r25
    b220:	c1 f4       	brne	.+48     	; 0xb252 <_Z18nextFullLBRxBufferv+0x62>
    b222:	8a 81       	ldd	r24, Y+2	; 0x02
    b224:	8f 5f       	subi	r24, 0xFF	; 255
    b226:	8a 83       	std	Y+2, r24	; 0x02
    b228:	81 e0       	ldi	r24, 0x01	; 1
    b22a:	9a 81       	ldd	r25, Y+2	; 0x02
    b22c:	92 30       	cpi	r25, 0x02	; 2
    b22e:	08 f4       	brcc	.+2      	; 0xb232 <_Z18nextFullLBRxBufferv+0x42>
    b230:	80 e0       	ldi	r24, 0x00	; 0
    b232:	88 23       	and	r24, r24
    b234:	11 f0       	breq	.+4      	; 0xb23a <_Z18nextFullLBRxBufferv+0x4a>
    b236:	19 82       	std	Y+1, r1	; 0x01
    b238:	0c c0       	rjmp	.+24     	; 0xb252 <_Z18nextFullLBRxBufferv+0x62>
    b23a:	80 91 6a 49 	lds	r24, 0x496A	; 0x80496a <_ZZ18nextFullLBRxBuffervE11bufferIndex>
    b23e:	8f 5f       	subi	r24, 0xFF	; 255
    b240:	80 93 6a 49 	sts	0x496A, r24	; 0x80496a <_ZZ18nextFullLBRxBuffervE11bufferIndex>
    b244:	80 91 6a 49 	lds	r24, 0x496A	; 0x80496a <_ZZ18nextFullLBRxBuffervE11bufferIndex>
    b248:	82 30       	cpi	r24, 0x02	; 2
    b24a:	d0 f2       	brcs	.-76     	; 0xb200 <_Z18nextFullLBRxBufferv+0x10>
    b24c:	10 92 6a 49 	sts	0x496A, r1	; 0x80496a <_ZZ18nextFullLBRxBuffervE11bufferIndex>
    b250:	d7 cf       	rjmp	.-82     	; 0xb200 <_Z18nextFullLBRxBufferv+0x10>
    b252:	89 81       	ldd	r24, Y+1	; 0x01
    b254:	88 23       	and	r24, r24
    b256:	69 f0       	breq	.+26     	; 0xb272 <_Z18nextFullLBRxBufferv+0x82>
    b258:	80 91 6a 49 	lds	r24, 0x496A	; 0x80496a <_ZZ18nextFullLBRxBuffervE11bufferIndex>
    b25c:	28 2f       	mov	r18, r24
    b25e:	30 e0       	ldi	r19, 0x00	; 0
    b260:	42 e4       	ldi	r20, 0x42	; 66
    b262:	42 9f       	mul	r20, r18
    b264:	c0 01       	movw	r24, r0
    b266:	43 9f       	mul	r20, r19
    b268:	90 0d       	add	r25, r0
    b26a:	11 24       	eor	r1, r1
    b26c:	8d 51       	subi	r24, 0x1D	; 29
    b26e:	97 4b       	sbci	r25, 0xB7	; 183
    b270:	02 c0       	rjmp	.+4      	; 0xb276 <_Z18nextFullLBRxBufferv+0x86>
    b272:	80 e0       	ldi	r24, 0x00	; 0
    b274:	90 e0       	ldi	r25, 0x00	; 0
    b276:	0f 90       	pop	r0
    b278:	0f 90       	pop	r0
    b27a:	df 91       	pop	r29
    b27c:	cf 91       	pop	r28
    b27e:	08 95       	ret

0000b280 <_Z19linkbusTxInProgressv>:
    b280:	cf 93       	push	r28
    b282:	df 93       	push	r29
    b284:	cd b7       	in	r28, 0x3d	; 61
    b286:	de b7       	in	r29, 0x3e	; 62
    b288:	80 91 1a 48 	lds	r24, 0x481A	; 0x80481a <_ZL17linkbus_tx_active>
    b28c:	df 91       	pop	r29
    b28e:	cf 91       	pop	r28
    b290:	08 95       	ret

0000b292 <_ZL16linkbus_start_txv>:
    b292:	cf 93       	push	r28
    b294:	df 93       	push	r29
    b296:	1f 92       	push	r1
    b298:	cd b7       	in	r28, 0x3d	; 61
    b29a:	de b7       	in	r29, 0x3e	; 62
    b29c:	90 91 1a 48 	lds	r25, 0x481A	; 0x80481a <_ZL17linkbus_tx_active>
    b2a0:	81 e0       	ldi	r24, 0x01	; 1
    b2a2:	89 27       	eor	r24, r25
    b2a4:	89 83       	std	Y+1, r24	; 0x01
    b2a6:	89 81       	ldd	r24, Y+1	; 0x01
    b2a8:	88 23       	and	r24, r24
    b2aa:	61 f0       	breq	.+24     	; 0xb2c4 <_ZL16linkbus_start_txv+0x32>
    b2ac:	81 e0       	ldi	r24, 0x01	; 1
    b2ae:	80 93 1a 48 	sts	0x481A, r24	; 0x80481a <_ZL17linkbus_tx_active>
    b2b2:	80 91 2d 40 	lds	r24, 0x402D	; 0x80402d <g_linkbus_usart_number>
    b2b6:	84 30       	cpi	r24, 0x04	; 4
    b2b8:	19 f4       	brne	.+6      	; 0xb2c0 <_ZL16linkbus_start_txv+0x2e>
    b2ba:	0e 94 ad 73 	call	0xe75a	; 0xe75a <USART4_enable_tx>
    b2be:	02 c0       	rjmp	.+4      	; 0xb2c4 <_ZL16linkbus_start_txv+0x32>
    b2c0:	0e 94 27 73 	call	0xe64e	; 0xe64e <USART1_enable_tx>
    b2c4:	89 81       	ldd	r24, Y+1	; 0x01
    b2c6:	0f 90       	pop	r0
    b2c8:	df 91       	pop	r29
    b2ca:	cf 91       	pop	r28
    b2cc:	08 95       	ret

0000b2ce <_Z14linkbus_end_txv>:
    b2ce:	cf 93       	push	r28
    b2d0:	df 93       	push	r29
    b2d2:	cd b7       	in	r28, 0x3d	; 61
    b2d4:	de b7       	in	r29, 0x3e	; 62
    b2d6:	80 91 1a 48 	lds	r24, 0x481A	; 0x80481a <_ZL17linkbus_tx_active>
    b2da:	88 23       	and	r24, r24
    b2dc:	c9 f0       	breq	.+50     	; 0xb310 <_Z14linkbus_end_txv+0x42>
    b2de:	80 91 2d 40 	lds	r24, 0x402D	; 0x80402d <g_linkbus_usart_number>
    b2e2:	88 23       	and	r24, r24
    b2e4:	51 f4       	brne	.+20     	; 0xb2fa <_Z14linkbus_end_txv+0x2c>
    b2e6:	80 e8       	ldi	r24, 0x80	; 128
    b2e8:	98 e0       	ldi	r25, 0x08	; 8
    b2ea:	20 e8       	ldi	r18, 0x80	; 128
    b2ec:	38 e0       	ldi	r19, 0x08	; 8
    b2ee:	f9 01       	movw	r30, r18
    b2f0:	25 81       	ldd	r18, Z+5	; 0x05
    b2f2:	2f 7d       	andi	r18, 0xDF	; 223
    b2f4:	fc 01       	movw	r30, r24
    b2f6:	25 83       	std	Z+5, r18	; 0x05
    b2f8:	09 c0       	rjmp	.+18     	; 0xb30c <_Z14linkbus_end_txv+0x3e>
    b2fa:	80 e2       	ldi	r24, 0x20	; 32
    b2fc:	98 e0       	ldi	r25, 0x08	; 8
    b2fe:	20 e2       	ldi	r18, 0x20	; 32
    b300:	38 e0       	ldi	r19, 0x08	; 8
    b302:	f9 01       	movw	r30, r18
    b304:	25 81       	ldd	r18, Z+5	; 0x05
    b306:	2f 7d       	andi	r18, 0xDF	; 223
    b308:	fc 01       	movw	r30, r24
    b30a:	25 83       	std	Z+5, r18	; 0x05
    b30c:	10 92 1a 48 	sts	0x481A, r1	; 0x80481a <_ZL17linkbus_tx_active>
    b310:	00 00       	nop
    b312:	df 91       	pop	r29
    b314:	cf 91       	pop	r28
    b316:	08 95       	ret

0000b318 <_ZL21USART1_initializationm>:
    b318:	cf 93       	push	r28
    b31a:	df 93       	push	r29
    b31c:	00 d0       	rcall	.+0      	; 0xb31e <_ZL21USART1_initializationm+0x6>
    b31e:	00 d0       	rcall	.+0      	; 0xb320 <_ZL21USART1_initializationm+0x8>
    b320:	cd b7       	in	r28, 0x3d	; 61
    b322:	de b7       	in	r29, 0x3e	; 62
    b324:	69 83       	std	Y+1, r22	; 0x01
    b326:	7a 83       	std	Y+2, r23	; 0x02
    b328:	8b 83       	std	Y+3, r24	; 0x03
    b32a:	9c 83       	std	Y+4, r25	; 0x04
    b32c:	80 e0       	ldi	r24, 0x00	; 0
    b32e:	0e 94 d7 57 	call	0xafae	; 0xafae <PC1_set_dir>
    b332:	80 e0       	ldi	r24, 0x00	; 0
    b334:	0e 94 c8 57 	call	0xaf90	; 0xaf90 <PC1_set_pull_mode>
    b338:	81 e0       	ldi	r24, 0x01	; 1
    b33a:	0e 94 aa 57 	call	0xaf54	; 0xaf54 <PC0_set_dir>
    b33e:	81 e0       	ldi	r24, 0x01	; 1
    b340:	0e 94 b9 57 	call	0xaf72	; 0xaf72 <PC0_set_level>
    b344:	89 81       	ldd	r24, Y+1	; 0x01
    b346:	9a 81       	ldd	r25, Y+2	; 0x02
    b348:	ab 81       	ldd	r26, Y+3	; 0x03
    b34a:	bc 81       	ldd	r27, Y+4	; 0x04
    b34c:	bc 01       	movw	r22, r24
    b34e:	cd 01       	movw	r24, r26
    b350:	0e 94 d0 72 	call	0xe5a0	; 0xe5a0 <USART1_init>
    b354:	00 00       	nop
    b356:	24 96       	adiw	r28, 0x04	; 4
    b358:	cd bf       	out	0x3d, r28	; 61
    b35a:	de bf       	out	0x3e, r29	; 62
    b35c:	df 91       	pop	r29
    b35e:	cf 91       	pop	r28
    b360:	08 95       	ret

0000b362 <_ZL21USART4_initializationm>:
    b362:	cf 93       	push	r28
    b364:	df 93       	push	r29
    b366:	00 d0       	rcall	.+0      	; 0xb368 <_ZL21USART4_initializationm+0x6>
    b368:	00 d0       	rcall	.+0      	; 0xb36a <_ZL21USART4_initializationm+0x8>
    b36a:	cd b7       	in	r28, 0x3d	; 61
    b36c:	de b7       	in	r29, 0x3e	; 62
    b36e:	69 83       	std	Y+1, r22	; 0x01
    b370:	7a 83       	std	Y+2, r23	; 0x02
    b372:	8b 83       	std	Y+3, r24	; 0x03
    b374:	9c 83       	std	Y+4, r25	; 0x04
    b376:	80 e0       	ldi	r24, 0x00	; 0
    b378:	0e 94 13 58 	call	0xb026	; 0xb026 <PE1_set_dir>
    b37c:	80 e0       	ldi	r24, 0x00	; 0
    b37e:	0e 94 04 58 	call	0xb008	; 0xb008 <PE1_set_pull_mode>
    b382:	81 e0       	ldi	r24, 0x01	; 1
    b384:	0e 94 e6 57 	call	0xafcc	; 0xafcc <PE0_set_dir>
    b388:	81 e0       	ldi	r24, 0x01	; 1
    b38a:	0e 94 f5 57 	call	0xafea	; 0xafea <PE0_set_level>
    b38e:	89 81       	ldd	r24, Y+1	; 0x01
    b390:	9a 81       	ldd	r25, Y+2	; 0x02
    b392:	ab 81       	ldd	r26, Y+3	; 0x03
    b394:	bc 81       	ldd	r27, Y+4	; 0x04
    b396:	bc 01       	movw	r22, r24
    b398:	cd 01       	movw	r24, r26
    b39a:	0e 94 5d 73 	call	0xe6ba	; 0xe6ba <USART4_init>
    b39e:	00 00       	nop
    b3a0:	24 96       	adiw	r28, 0x04	; 4
    b3a2:	cd bf       	out	0x3d, r28	; 61
    b3a4:	de bf       	out	0x3e, r29	; 62
    b3a6:	df 91       	pop	r29
    b3a8:	cf 91       	pop	r28
    b3aa:	08 95       	ret

0000b3ac <_Z12linkbus_initm14USART_Number_t>:
    b3ac:	cf 93       	push	r28
    b3ae:	df 93       	push	r29
    b3b0:	cd b7       	in	r28, 0x3d	; 61
    b3b2:	de b7       	in	r29, 0x3e	; 62
    b3b4:	27 97       	sbiw	r28, 0x07	; 7
    b3b6:	cd bf       	out	0x3d, r28	; 61
    b3b8:	de bf       	out	0x3e, r29	; 62
    b3ba:	6b 83       	std	Y+3, r22	; 0x03
    b3bc:	7c 83       	std	Y+4, r23	; 0x04
    b3be:	8d 83       	std	Y+5, r24	; 0x05
    b3c0:	9e 83       	std	Y+6, r25	; 0x06
    b3c2:	4f 83       	std	Y+7, r20	; 0x07
    b3c4:	44 e8       	ldi	r20, 0x84	; 132
    b3c6:	50 e0       	ldi	r21, 0x00	; 0
    b3c8:	60 e0       	ldi	r22, 0x00	; 0
    b3ca:	70 e0       	ldi	r23, 0x00	; 0
    b3cc:	83 ee       	ldi	r24, 0xE3	; 227
    b3ce:	98 e4       	ldi	r25, 0x48	; 72
    b3d0:	0e 94 58 7c 	call	0xf8b0	; 0xf8b0 <memset>
    b3d4:	19 82       	std	Y+1, r1	; 0x01
    b3d6:	1a 82       	std	Y+2, r1	; 0x02
    b3d8:	89 81       	ldd	r24, Y+1	; 0x01
    b3da:	9a 81       	ldd	r25, Y+2	; 0x02
    b3dc:	04 97       	sbiw	r24, 0x04	; 4
    b3de:	94 f4       	brge	.+36     	; 0xb404 <_Z12linkbus_initm14USART_Number_t+0x58>
    b3e0:	29 81       	ldd	r18, Y+1	; 0x01
    b3e2:	3a 81       	ldd	r19, Y+2	; 0x02
    b3e4:	42 e3       	ldi	r20, 0x32	; 50
    b3e6:	42 9f       	mul	r20, r18
    b3e8:	c0 01       	movw	r24, r0
    b3ea:	43 9f       	mul	r20, r19
    b3ec:	90 0d       	add	r25, r0
    b3ee:	11 24       	eor	r1, r1
    b3f0:	85 5e       	subi	r24, 0xE5	; 229
    b3f2:	97 4b       	sbci	r25, 0xB7	; 183
    b3f4:	fc 01       	movw	r30, r24
    b3f6:	10 82       	st	Z, r1
    b3f8:	89 81       	ldd	r24, Y+1	; 0x01
    b3fa:	9a 81       	ldd	r25, Y+2	; 0x02
    b3fc:	01 96       	adiw	r24, 0x01	; 1
    b3fe:	89 83       	std	Y+1, r24	; 0x01
    b400:	9a 83       	std	Y+2, r25	; 0x02
    b402:	ea cf       	rjmp	.-44     	; 0xb3d8 <_Z12linkbus_initm14USART_Number_t+0x2c>
    b404:	8f 81       	ldd	r24, Y+7	; 0x07
    b406:	86 30       	cpi	r24, 0x06	; 6
    b408:	21 f4       	brne	.+8      	; 0xb412 <_Z12linkbus_initm14USART_Number_t+0x66>
    b40a:	80 91 2d 40 	lds	r24, 0x402D	; 0x80402d <g_linkbus_usart_number>
    b40e:	87 30       	cpi	r24, 0x07	; 7
    b410:	b9 f4       	brne	.+46     	; 0xb440 <_Z12linkbus_initm14USART_Number_t+0x94>
    b412:	8f 81       	ldd	r24, Y+7	; 0x07
    b414:	84 30       	cpi	r24, 0x04	; 4
    b416:	49 f4       	brne	.+18     	; 0xb42a <_Z12linkbus_initm14USART_Number_t+0x7e>
    b418:	8b 81       	ldd	r24, Y+3	; 0x03
    b41a:	9c 81       	ldd	r25, Y+4	; 0x04
    b41c:	ad 81       	ldd	r26, Y+5	; 0x05
    b41e:	be 81       	ldd	r27, Y+6	; 0x06
    b420:	bc 01       	movw	r22, r24
    b422:	cd 01       	movw	r24, r26
    b424:	0e 94 b1 59 	call	0xb362	; 0xb362 <_ZL21USART4_initializationm>
    b428:	08 c0       	rjmp	.+16     	; 0xb43a <_Z12linkbus_initm14USART_Number_t+0x8e>
    b42a:	8b 81       	ldd	r24, Y+3	; 0x03
    b42c:	9c 81       	ldd	r25, Y+4	; 0x04
    b42e:	ad 81       	ldd	r26, Y+5	; 0x05
    b430:	be 81       	ldd	r27, Y+6	; 0x06
    b432:	bc 01       	movw	r22, r24
    b434:	cd 01       	movw	r24, r26
    b436:	0e 94 8c 59 	call	0xb318	; 0xb318 <_ZL21USART1_initializationm>
    b43a:	8f 81       	ldd	r24, Y+7	; 0x07
    b43c:	80 93 2d 40 	sts	0x402D, r24	; 0x80402d <g_linkbus_usart_number>
    b440:	10 92 2c 40 	sts	0x402C, r1	; 0x80402c <_ZL14g_bus_disabled>
    b444:	00 00       	nop
    b446:	27 96       	adiw	r28, 0x07	; 7
    b448:	cd bf       	out	0x3d, r28	; 61
    b44a:	de bf       	out	0x3e, r29	; 62
    b44c:	df 91       	pop	r29
    b44e:	cf 91       	pop	r28
    b450:	08 95       	ret

0000b452 <_Z15linkbus_disablev>:
    b452:	cf 93       	push	r28
    b454:	df 93       	push	r29
    b456:	1f 92       	push	r1
    b458:	cd b7       	in	r28, 0x3d	; 61
    b45a:	de b7       	in	r29, 0x3e	; 62
    b45c:	81 e0       	ldi	r24, 0x01	; 1
    b45e:	80 93 2c 40 	sts	0x402C, r24	; 0x80402c <_ZL14g_bus_disabled>
    b462:	80 91 2d 40 	lds	r24, 0x402D	; 0x80402d <g_linkbus_usart_number>
    b466:	84 30       	cpi	r24, 0x04	; 4
    b468:	19 f4       	brne	.+6      	; 0xb470 <_Z15linkbus_disablev+0x1e>
    b46a:	0e 94 c7 73 	call	0xe78e	; 0xe78e <USART4_disable>
    b46e:	02 c0       	rjmp	.+4      	; 0xb474 <_Z15linkbus_disablev+0x22>
    b470:	0e 94 41 73 	call	0xe682	; 0xe682 <USART1_disable>
    b474:	0e 94 67 59 	call	0xb2ce	; 0xb2ce <_Z14linkbus_end_txv>
    b478:	44 e8       	ldi	r20, 0x84	; 132
    b47a:	50 e0       	ldi	r21, 0x00	; 0
    b47c:	60 e0       	ldi	r22, 0x00	; 0
    b47e:	70 e0       	ldi	r23, 0x00	; 0
    b480:	83 ee       	ldi	r24, 0xE3	; 227
    b482:	98 e4       	ldi	r25, 0x48	; 72
    b484:	0e 94 58 7c 	call	0xf8b0	; 0xf8b0 <memset>
    b488:	19 82       	std	Y+1, r1	; 0x01
    b48a:	89 81       	ldd	r24, Y+1	; 0x01
    b48c:	84 30       	cpi	r24, 0x04	; 4
    b48e:	88 f4       	brcc	.+34     	; 0xb4b2 <_Z15linkbus_disablev+0x60>
    b490:	89 81       	ldd	r24, Y+1	; 0x01
    b492:	28 2f       	mov	r18, r24
    b494:	30 e0       	ldi	r19, 0x00	; 0
    b496:	42 e3       	ldi	r20, 0x32	; 50
    b498:	42 9f       	mul	r20, r18
    b49a:	c0 01       	movw	r24, r0
    b49c:	43 9f       	mul	r20, r19
    b49e:	90 0d       	add	r25, r0
    b4a0:	11 24       	eor	r1, r1
    b4a2:	85 5e       	subi	r24, 0xE5	; 229
    b4a4:	97 4b       	sbci	r25, 0xB7	; 183
    b4a6:	fc 01       	movw	r30, r24
    b4a8:	10 82       	st	Z, r1
    b4aa:	89 81       	ldd	r24, Y+1	; 0x01
    b4ac:	8f 5f       	subi	r24, 0xFF	; 255
    b4ae:	89 83       	std	Y+1, r24	; 0x01
    b4b0:	ec cf       	rjmp	.-40     	; 0xb48a <_Z15linkbus_disablev+0x38>
    b4b2:	00 00       	nop
    b4b4:	0f 90       	pop	r0
    b4b6:	df 91       	pop	r29
    b4b8:	cf 91       	pop	r28
    b4ba:	08 95       	ret

0000b4bc <_Z12lb_send_textPc>:
    b4bc:	cf 93       	push	r28
    b4be:	df 93       	push	r29
    b4c0:	cd b7       	in	r28, 0x3d	; 61
    b4c2:	de b7       	in	r29, 0x3e	; 62
    b4c4:	27 97       	sbiw	r28, 0x07	; 7
    b4c6:	cd bf       	out	0x3d, r28	; 61
    b4c8:	de bf       	out	0x3e, r29	; 62
    b4ca:	8e 83       	std	Y+6, r24	; 0x06
    b4cc:	9f 83       	std	Y+7, r25	; 0x07
    b4ce:	81 e0       	ldi	r24, 0x01	; 1
    b4d0:	89 83       	std	Y+1, r24	; 0x01
    b4d2:	88 ec       	ldi	r24, 0xC8	; 200
    b4d4:	90 e0       	ldi	r25, 0x00	; 0
    b4d6:	8a 83       	std	Y+2, r24	; 0x02
    b4d8:	9b 83       	std	Y+3, r25	; 0x03
    b4da:	80 91 2c 40 	lds	r24, 0x402C	; 0x80402c <_ZL14g_bus_disabled>
    b4de:	88 23       	and	r24, r24
    b4e0:	11 f0       	breq	.+4      	; 0xb4e6 <_Z12lb_send_textPc+0x2a>
    b4e2:	89 81       	ldd	r24, Y+1	; 0x01
    b4e4:	42 c0       	rjmp	.+132    	; 0xb56a <_Z12lb_send_textPc+0xae>
    b4e6:	8e 81       	ldd	r24, Y+6	; 0x06
    b4e8:	9f 81       	ldd	r25, Y+7	; 0x07
    b4ea:	89 2b       	or	r24, r25
    b4ec:	e9 f1       	breq	.+122    	; 0xb568 <_Z12lb_send_textPc+0xac>
    b4ee:	0e 94 69 58 	call	0xb0d2	; 0xb0d2 <_Z19nextEmptyLBTxBufferv>
    b4f2:	8c 83       	std	Y+4, r24	; 0x04
    b4f4:	9d 83       	std	Y+5, r25	; 0x05
    b4f6:	8c 81       	ldd	r24, Y+4	; 0x04
    b4f8:	9d 81       	ldd	r25, Y+5	; 0x05
    b4fa:	89 2b       	or	r24, r25
    b4fc:	01 f5       	brne	.+64     	; 0xb53e <_Z12lb_send_textPc+0x82>
    b4fe:	8a 81       	ldd	r24, Y+2	; 0x02
    b500:	9b 81       	ldd	r25, Y+3	; 0x03
    b502:	89 2b       	or	r24, r25
    b504:	e1 f0       	breq	.+56     	; 0xb53e <_Z12lb_send_textPc+0x82>
    b506:	0e 94 40 59 	call	0xb280	; 0xb280 <_Z19linkbusTxInProgressv>
    b50a:	88 23       	and	r24, r24
    b50c:	31 f0       	breq	.+12     	; 0xb51a <_Z12lb_send_textPc+0x5e>
    b50e:	8a 81       	ldd	r24, Y+2	; 0x02
    b510:	9b 81       	ldd	r25, Y+3	; 0x03
    b512:	89 2b       	or	r24, r25
    b514:	11 f0       	breq	.+4      	; 0xb51a <_Z12lb_send_textPc+0x5e>
    b516:	81 e0       	ldi	r24, 0x01	; 1
    b518:	01 c0       	rjmp	.+2      	; 0xb51c <_Z12lb_send_textPc+0x60>
    b51a:	80 e0       	ldi	r24, 0x00	; 0
    b51c:	88 23       	and	r24, r24
    b51e:	51 f0       	breq	.+20     	; 0xb534 <_Z12lb_send_textPc+0x78>
    b520:	8a 81       	ldd	r24, Y+2	; 0x02
    b522:	9b 81       	ldd	r25, Y+3	; 0x03
    b524:	89 2b       	or	r24, r25
    b526:	79 f3       	breq	.-34     	; 0xb506 <_Z12lb_send_textPc+0x4a>
    b528:	8a 81       	ldd	r24, Y+2	; 0x02
    b52a:	9b 81       	ldd	r25, Y+3	; 0x03
    b52c:	01 97       	sbiw	r24, 0x01	; 1
    b52e:	8a 83       	std	Y+2, r24	; 0x02
    b530:	9b 83       	std	Y+3, r25	; 0x03
    b532:	e9 cf       	rjmp	.-46     	; 0xb506 <_Z12lb_send_textPc+0x4a>
    b534:	0e 94 69 58 	call	0xb0d2	; 0xb0d2 <_Z19nextEmptyLBTxBufferv>
    b538:	8c 83       	std	Y+4, r24	; 0x04
    b53a:	9d 83       	std	Y+5, r25	; 0x05
    b53c:	dc cf       	rjmp	.-72     	; 0xb4f6 <_Z12lb_send_textPc+0x3a>
    b53e:	8c 81       	ldd	r24, Y+4	; 0x04
    b540:	9d 81       	ldd	r25, Y+5	; 0x05
    b542:	89 2b       	or	r24, r25
    b544:	89 f0       	breq	.+34     	; 0xb568 <_Z12lb_send_textPc+0xac>
    b546:	8f 81       	ldd	r24, Y+7	; 0x07
    b548:	8f 93       	push	r24
    b54a:	8e 81       	ldd	r24, Y+6	; 0x06
    b54c:	8f 93       	push	r24
    b54e:	8d 81       	ldd	r24, Y+5	; 0x05
    b550:	8f 93       	push	r24
    b552:	8c 81       	ldd	r24, Y+4	; 0x04
    b554:	8f 93       	push	r24
    b556:	0e 94 ba 7c 	call	0xf974	; 0xf974 <sprintf>
    b55a:	0f 90       	pop	r0
    b55c:	0f 90       	pop	r0
    b55e:	0f 90       	pop	r0
    b560:	0f 90       	pop	r0
    b562:	0e 94 49 59 	call	0xb292	; 0xb292 <_ZL16linkbus_start_txv>
    b566:	19 82       	std	Y+1, r1	; 0x01
    b568:	89 81       	ldd	r24, Y+1	; 0x01
    b56a:	27 96       	adiw	r28, 0x07	; 7
    b56c:	cd bf       	out	0x3d, r28	; 61
    b56e:	de bf       	out	0x3e, r29	; 62
    b570:	df 91       	pop	r29
    b572:	cf 91       	pop	r28
    b574:	08 95       	ret

0000b576 <_Z11lb_send_msg13LBMessageTypePKcPc>:
    b576:	cf 93       	push	r28
    b578:	df 93       	push	r29
    b57a:	cd b7       	in	r28, 0x3d	; 61
    b57c:	de b7       	in	r29, 0x3e	; 62
    b57e:	27 97       	sbiw	r28, 0x07	; 7
    b580:	cd bf       	out	0x3d, r28	; 61
    b582:	de bf       	out	0x3e, r29	; 62
    b584:	8b 83       	std	Y+3, r24	; 0x03
    b586:	6c 83       	std	Y+4, r22	; 0x04
    b588:	7d 83       	std	Y+5, r23	; 0x05
    b58a:	4e 83       	std	Y+6, r20	; 0x06
    b58c:	5f 83       	std	Y+7, r21	; 0x07
    b58e:	84 e2       	ldi	r24, 0x24	; 36
    b590:	89 83       	std	Y+1, r24	; 0x01
    b592:	8b e3       	ldi	r24, 0x3B	; 59
    b594:	8a 83       	std	Y+2, r24	; 0x02
    b596:	8b 81       	ldd	r24, Y+3	; 0x03
    b598:	83 30       	cpi	r24, 0x03	; 3
    b59a:	19 f4       	brne	.+6      	; 0xb5a2 <_Z11lb_send_msg13LBMessageTypePKcPc+0x2c>
    b59c:	81 e2       	ldi	r24, 0x21	; 33
    b59e:	89 83       	std	Y+1, r24	; 0x01
    b5a0:	05 c0       	rjmp	.+10     	; 0xb5ac <_Z11lb_send_msg13LBMessageTypePKcPc+0x36>
    b5a2:	8b 81       	ldd	r24, Y+3	; 0x03
    b5a4:	82 30       	cpi	r24, 0x02	; 2
    b5a6:	11 f4       	brne	.+4      	; 0xb5ac <_Z11lb_send_msg13LBMessageTypePKcPc+0x36>
    b5a8:	8f e3       	ldi	r24, 0x3F	; 63
    b5aa:	8a 83       	std	Y+2, r24	; 0x02
    b5ac:	8a 81       	ldd	r24, Y+2	; 0x02
    b5ae:	28 2f       	mov	r18, r24
    b5b0:	30 e0       	ldi	r19, 0x00	; 0
    b5b2:	89 81       	ldd	r24, Y+1	; 0x01
    b5b4:	88 2f       	mov	r24, r24
    b5b6:	90 e0       	ldi	r25, 0x00	; 0
    b5b8:	43 2f       	mov	r20, r19
    b5ba:	4f 93       	push	r20
    b5bc:	2f 93       	push	r18
    b5be:	2f 81       	ldd	r18, Y+7	; 0x07
    b5c0:	2f 93       	push	r18
    b5c2:	2e 81       	ldd	r18, Y+6	; 0x06
    b5c4:	2f 93       	push	r18
    b5c6:	2d 81       	ldd	r18, Y+5	; 0x05
    b5c8:	2f 93       	push	r18
    b5ca:	2c 81       	ldd	r18, Y+4	; 0x04
    b5cc:	2f 93       	push	r18
    b5ce:	29 2f       	mov	r18, r25
    b5d0:	2f 93       	push	r18
    b5d2:	8f 93       	push	r24
    b5d4:	80 ec       	ldi	r24, 0xC0	; 192
    b5d6:	94 e4       	ldi	r25, 0x44	; 68
    b5d8:	89 2f       	mov	r24, r25
    b5da:	8f 93       	push	r24
    b5dc:	80 ec       	ldi	r24, 0xC0	; 192
    b5de:	94 e4       	ldi	r25, 0x44	; 68
    b5e0:	8f 93       	push	r24
    b5e2:	88 ee       	ldi	r24, 0xE8	; 232
    b5e4:	97 e4       	ldi	r25, 0x47	; 71
    b5e6:	89 2f       	mov	r24, r25
    b5e8:	8f 93       	push	r24
    b5ea:	88 ee       	ldi	r24, 0xE8	; 232
    b5ec:	97 e4       	ldi	r25, 0x47	; 71
    b5ee:	8f 93       	push	r24
    b5f0:	0e 94 ba 7c 	call	0xf974	; 0xf974 <sprintf>
    b5f4:	8d b7       	in	r24, 0x3d	; 61
    b5f6:	9e b7       	in	r25, 0x3e	; 62
    b5f8:	0c 96       	adiw	r24, 0x0c	; 12
    b5fa:	cd bf       	out	0x3d, r28	; 61
    b5fc:	de bf       	out	0x3e, r29	; 62
    b5fe:	88 ee       	ldi	r24, 0xE8	; 232
    b600:	97 e4       	ldi	r25, 0x47	; 71
    b602:	0e 94 5e 5a 	call	0xb4bc	; 0xb4bc <_Z12lb_send_textPc>
    b606:	00 00       	nop
    b608:	27 96       	adiw	r28, 0x07	; 7
    b60a:	cd bf       	out	0x3d, r28	; 61
    b60c:	de bf       	out	0x3e, r29	; 62
    b60e:	df 91       	pop	r29
    b610:	cf 91       	pop	r28
    b612:	08 95       	ret

0000b614 <_Z16lb_broadcast_strPKcS0_>:


void lb_broadcast_str(const char* data, const char* str)
{
    b614:	cf 93       	push	r28
    b616:	df 93       	push	r29
    b618:	00 d0       	rcall	.+0      	; 0xb61a <_Z16lb_broadcast_strPKcS0_+0x6>
    b61a:	00 d0       	rcall	.+0      	; 0xb61c <_Z16lb_broadcast_strPKcS0_+0x8>
    b61c:	cd b7       	in	r28, 0x3d	; 61
    b61e:	de b7       	in	r29, 0x3e	; 62
    b620:	89 83       	std	Y+1, r24	; 0x01
    b622:	9a 83       	std	Y+2, r25	; 0x02
    b624:	6b 83       	std	Y+3, r22	; 0x03
    b626:	7c 83       	std	Y+4, r23	; 0x04
	if(str)
    b628:	8b 81       	ldd	r24, Y+3	; 0x03
    b62a:	9c 81       	ldd	r25, Y+4	; 0x04
    b62c:	89 2b       	or	r24, r25
    b62e:	e9 f0       	breq	.+58     	; 0xb66a <_Z16lb_broadcast_strPKcS0_+0x56>
	{
		sprintf(g_tempMsgBuff, "%s,%s;", str, data);
    b630:	8a 81       	ldd	r24, Y+2	; 0x02
    b632:	8f 93       	push	r24
    b634:	89 81       	ldd	r24, Y+1	; 0x01
    b636:	8f 93       	push	r24
    b638:	8c 81       	ldd	r24, Y+4	; 0x04
    b63a:	8f 93       	push	r24
    b63c:	8b 81       	ldd	r24, Y+3	; 0x03
    b63e:	8f 93       	push	r24
    b640:	80 ed       	ldi	r24, 0xD0	; 208
    b642:	94 e4       	ldi	r25, 0x44	; 68
    b644:	89 2f       	mov	r24, r25
    b646:	8f 93       	push	r24
    b648:	80 ed       	ldi	r24, 0xD0	; 208
    b64a:	94 e4       	ldi	r25, 0x44	; 68
    b64c:	8f 93       	push	r24
    b64e:	88 ee       	ldi	r24, 0xE8	; 232
    b650:	97 e4       	ldi	r25, 0x47	; 71
    b652:	89 2f       	mov	r24, r25
    b654:	8f 93       	push	r24
    b656:	88 ee       	ldi	r24, 0xE8	; 232
    b658:	97 e4       	ldi	r25, 0x47	; 71
    b65a:	8f 93       	push	r24
    b65c:	0e 94 ba 7c 	call	0xf974	; 0xf974 <sprintf>
    b660:	8d b7       	in	r24, 0x3d	; 61
    b662:	9e b7       	in	r25, 0x3e	; 62
    b664:	08 96       	adiw	r24, 0x08	; 8
    b666:	cd bf       	out	0x3d, r28	; 61
    b668:	de bf       	out	0x3e, r29	; 62
	}

	if(g_tempMsgBuff[0]) lb_send_text(g_tempMsgBuff);
    b66a:	80 91 e8 47 	lds	r24, 0x47E8	; 0x8047e8 <_ZL13g_tempMsgBuff>
    b66e:	88 23       	and	r24, r24
    b670:	21 f0       	breq	.+8      	; 0xb67a <_Z16lb_broadcast_strPKcS0_+0x66>
    b672:	88 ee       	ldi	r24, 0xE8	; 232
    b674:	97 e4       	ldi	r25, 0x47	; 71
    b676:	0e 94 5e 5a 	call	0xb4bc	; 0xb4bc <_Z12lb_send_textPc>
}
    b67a:	00 00       	nop
    b67c:	24 96       	adiw	r28, 0x04	; 4
    b67e:	cd bf       	out	0x3d, r28	; 61
    b680:	de bf       	out	0x3e, r29	; 62
    b682:	df 91       	pop	r29
    b684:	cf 91       	pop	r28
    b686:	08 95       	ret

0000b688 <_Z9makeMorsePcPbS0_>:
 *  Call this function with a NULL argument at intervals of 1 element of time to generate Morse code.
 *  Once loaded with a string each call to this function returns a bool indicating whether a CW carrier should be sent
 *  Pass in a pointer to a bool in the second and third arguments:
 */
bool makeMorse(char* s, bool* repeating, bool* finished)
{
    b688:	cf 93       	push	r28
    b68a:	df 93       	push	r29
    b68c:	cd b7       	in	r28, 0x3d	; 61
    b68e:	de b7       	in	r29, 0x3e	; 62
    b690:	28 97       	sbiw	r28, 0x08	; 8
    b692:	cd bf       	out	0x3d, r28	; 61
    b694:	de bf       	out	0x3e, r29	; 62
    b696:	8b 83       	std	Y+3, r24	; 0x03
    b698:	9c 83       	std	Y+4, r25	; 0x04
    b69a:	6d 83       	std	Y+5, r22	; 0x05
    b69c:	7e 83       	std	Y+6, r23	; 0x06
    b69e:	4f 83       	std	Y+7, r20	; 0x07
    b6a0:	58 87       	std	Y+8, r21	; 0x08
	static uint8_t addedSpace;      /* adds additional time to make an inter-character space */
	static bool completedString = false;
	static bool carrierOn = false;
	static bool holdKeyDown = false;

	if(s)   /* load a new NULL-terminated string to send */
    b6a2:	8b 81       	ldd	r24, Y+3	; 0x03
    b6a4:	9c 81       	ldd	r25, Y+4	; 0x04
    b6a6:	89 2b       	or	r24, r25
    b6a8:	09 f4       	brne	.+2      	; 0xb6ac <_Z9makeMorsePcPbS0_+0x24>
    b6aa:	4a c0       	rjmp	.+148    	; 0xb740 <_Z9makeMorsePcPbS0_+0xb8>
	{
		holdKeyDown = false;
    b6ac:	10 92 6b 49 	sts	0x496B, r1	; 0x80496b <_ZZ9makeMorsePcPbS0_E11holdKeyDown>

		if(repeating)
    b6b0:	8d 81       	ldd	r24, Y+5	; 0x05
    b6b2:	9e 81       	ldd	r25, Y+6	; 0x06
    b6b4:	89 2b       	or	r24, r25
    b6b6:	31 f0       	breq	.+12     	; 0xb6c4 <_Z9makeMorsePcPbS0_+0x3c>
		{
			repeat = *repeating;
    b6b8:	8d 81       	ldd	r24, Y+5	; 0x05
    b6ba:	9e 81       	ldd	r25, Y+6	; 0x06
    b6bc:	fc 01       	movw	r30, r24
    b6be:	80 81       	ld	r24, Z
    b6c0:	80 93 2e 40 	sts	0x402E, r24	; 0x80402e <_ZZ9makeMorsePcPbS0_E6repeat>
		}

		if(*s)
    b6c4:	8b 81       	ldd	r24, Y+3	; 0x03
    b6c6:	9c 81       	ldd	r25, Y+4	; 0x04
    b6c8:	fc 01       	movw	r30, r24
    b6ca:	80 81       	ld	r24, Z
    b6cc:	88 23       	and	r24, r24
    b6ce:	21 f1       	breq	.+72     	; 0xb718 <_Z9makeMorsePcPbS0_+0x90>
		{
			str = s;
    b6d0:	8b 81       	ldd	r24, Y+3	; 0x03
    b6d2:	9c 81       	ldd	r25, Y+4	; 0x04
    b6d4:	80 93 6c 49 	sts	0x496C, r24	; 0x80496c <_ZZ9makeMorsePcPbS0_E3str>
    b6d8:	90 93 6d 49 	sts	0x496D, r25	; 0x80496d <_ZZ9makeMorsePcPbS0_E3str+0x1>
			c = ' ';
    b6dc:	80 e2       	ldi	r24, 0x20	; 32
    b6de:	80 93 2f 40 	sts	0x402F, r24	; 0x80402f <_ZZ9makeMorsePcPbS0_E1c>
			morseInProgress = getMorseChar(*str);
    b6e2:	80 91 6c 49 	lds	r24, 0x496C	; 0x80496c <_ZZ9makeMorsePcPbS0_E3str>
    b6e6:	90 91 6d 49 	lds	r25, 0x496D	; 0x80496d <_ZZ9makeMorsePcPbS0_E3str+0x1>
    b6ea:	fc 01       	movw	r30, r24
    b6ec:	80 81       	ld	r24, Z
    b6ee:	0e 94 ec 5c 	call	0xb9d8	; 0xb9d8 <_Z12getMorseCharc>
    b6f2:	a8 2f       	mov	r26, r24
    b6f4:	cb 01       	movw	r24, r22
    b6f6:	80 93 6e 49 	sts	0x496E, r24	; 0x80496e <_ZZ9makeMorsePcPbS0_E15morseInProgress>
    b6fa:	90 93 6f 49 	sts	0x496F, r25	; 0x80496f <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x1>
    b6fe:	a0 93 70 49 	sts	0x4970, r26	; 0x804970 <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x2>
			charIndex = 0;
    b702:	10 92 71 49 	sts	0x4971, r1	; 0x804971 <_ZZ9makeMorsePcPbS0_E9charIndex>
			symbolIndex = 0;
    b706:	10 92 72 49 	sts	0x4972, r1	; 0x804972 <_ZZ9makeMorsePcPbS0_E11symbolIndex>
			elementIndex = 0;
    b70a:	10 92 73 49 	sts	0x4973, r1	; 0x804973 <_ZZ9makeMorsePcPbS0_E12elementIndex>
			addedSpace = 0;
    b70e:	10 92 74 49 	sts	0x4974, r1	; 0x804974 <_ZZ9makeMorsePcPbS0_E10addedSpace>
			completedString = false;
    b712:	10 92 75 49 	sts	0x4975, r1	; 0x804975 <_ZZ9makeMorsePcPbS0_E15completedString>
    b716:	10 c0       	rjmp	.+32     	; 0xb738 <_Z9makeMorsePcPbS0_+0xb0>
		}
		else    /* a zero-length string shuts down makeMorse */
		{
			str = NULL;
    b718:	10 92 6c 49 	sts	0x496C, r1	; 0x80496c <_ZZ9makeMorsePcPbS0_E3str>
    b71c:	10 92 6d 49 	sts	0x496D, r1	; 0x80496d <_ZZ9makeMorsePcPbS0_E3str+0x1>
			completedString = true;
    b720:	81 e0       	ldi	r24, 0x01	; 1
    b722:	80 93 75 49 	sts	0x4975, r24	; 0x804975 <_ZZ9makeMorsePcPbS0_E15completedString>
			if(finished)
    b726:	8f 81       	ldd	r24, Y+7	; 0x07
    b728:	98 85       	ldd	r25, Y+8	; 0x08
    b72a:	89 2b       	or	r24, r25
    b72c:	29 f0       	breq	.+10     	; 0xb738 <_Z9makeMorsePcPbS0_+0xb0>
			{
				*finished = true;
    b72e:	8f 81       	ldd	r24, Y+7	; 0x07
    b730:	98 85       	ldd	r25, Y+8	; 0x08
    b732:	21 e0       	ldi	r18, 0x01	; 1
    b734:	fc 01       	movw	r30, r24
    b736:	20 83       	st	Z, r18
			}
		}

		carrierOn = OFF;
    b738:	10 92 76 49 	sts	0x4976, r1	; 0x804976 <_ZZ9makeMorsePcPbS0_E9carrierOn>
		return( OFF);
    b73c:	80 e0       	ldi	r24, 0x00	; 0
    b73e:	f6 c0       	rjmp	.+492    	; 0xb92c <_Z9makeMorsePcPbS0_+0x2a4>
	}
	else if(str)
    b740:	80 91 6c 49 	lds	r24, 0x496C	; 0x80496c <_ZZ9makeMorsePcPbS0_E3str>
    b744:	90 91 6d 49 	lds	r25, 0x496D	; 0x80496d <_ZZ9makeMorsePcPbS0_E3str+0x1>
    b748:	89 2b       	or	r24, r25
    b74a:	09 f4       	brne	.+2      	; 0xb74e <_Z9makeMorsePcPbS0_+0xc6>
    b74c:	dd c0       	rjmp	.+442    	; 0xb908 <_Z9makeMorsePcPbS0_+0x280>
	{
		if(repeating)
    b74e:	8d 81       	ldd	r24, Y+5	; 0x05
    b750:	9e 81       	ldd	r25, Y+6	; 0x06
    b752:	89 2b       	or	r24, r25
    b754:	31 f0       	breq	.+12     	; 0xb762 <_Z9makeMorsePcPbS0_+0xda>
		{
			*repeating = repeat;
    b756:	20 91 2e 40 	lds	r18, 0x402E	; 0x80402e <_ZZ9makeMorsePcPbS0_E6repeat>
    b75a:	8d 81       	ldd	r24, Y+5	; 0x05
    b75c:	9e 81       	ldd	r25, Y+6	; 0x06
    b75e:	fc 01       	movw	r30, r24
    b760:	20 83       	st	Z, r18
		}

		if(completedString)
    b762:	80 91 75 49 	lds	r24, 0x4975	; 0x804975 <_ZZ9makeMorsePcPbS0_E15completedString>
    b766:	88 23       	and	r24, r24
    b768:	69 f0       	breq	.+26     	; 0xb784 <_Z9makeMorsePcPbS0_+0xfc>
		{
			if(finished)
    b76a:	8f 81       	ldd	r24, Y+7	; 0x07
    b76c:	98 85       	ldd	r25, Y+8	; 0x08
    b76e:	89 2b       	or	r24, r25
    b770:	39 f0       	breq	.+14     	; 0xb780 <_Z9makeMorsePcPbS0_+0xf8>
			{
				*finished = true;
    b772:	8f 81       	ldd	r24, Y+7	; 0x07
    b774:	98 85       	ldd	r25, Y+8	; 0x08
    b776:	21 e0       	ldi	r18, 0x01	; 1
    b778:	fc 01       	movw	r30, r24
    b77a:	20 83       	st	Z, r18
				holdKeyDown = false;
    b77c:	10 92 6b 49 	sts	0x496B, r1	; 0x80496b <_ZZ9makeMorsePcPbS0_E11holdKeyDown>
			}
			return( OFF);
    b780:	80 e0       	ldi	r24, 0x00	; 0
    b782:	d4 c0       	rjmp	.+424    	; 0xb92c <_Z9makeMorsePcPbS0_+0x2a4>
		}

		if(elementIndex)
    b784:	80 91 73 49 	lds	r24, 0x4973	; 0x804973 <_ZZ9makeMorsePcPbS0_E12elementIndex>
    b788:	88 23       	and	r24, r24
    b78a:	31 f0       	breq	.+12     	; 0xb798 <_Z9makeMorsePcPbS0_+0x110>
		{
			elementIndex--;
    b78c:	80 91 73 49 	lds	r24, 0x4973	; 0x804973 <_ZZ9makeMorsePcPbS0_E12elementIndex>
    b790:	81 50       	subi	r24, 0x01	; 1
    b792:	80 93 73 49 	sts	0x4973, r24	; 0x804973 <_ZZ9makeMorsePcPbS0_E12elementIndex>
    b796:	ae c0       	rjmp	.+348    	; 0xb8f4 <_Z9makeMorsePcPbS0_+0x26c>
		}
		else if(carrierOn && !holdKeyDown)  /* carrier is on, so turn it off and wait appropriate amount of space */
    b798:	80 91 76 49 	lds	r24, 0x4976	; 0x804976 <_ZZ9makeMorsePcPbS0_E9carrierOn>
    b79c:	88 23       	and	r24, r24
    b79e:	a1 f0       	breq	.+40     	; 0xb7c8 <_Z9makeMorsePcPbS0_+0x140>
    b7a0:	90 91 6b 49 	lds	r25, 0x496B	; 0x80496b <_ZZ9makeMorsePcPbS0_E11holdKeyDown>
    b7a4:	81 e0       	ldi	r24, 0x01	; 1
    b7a6:	89 27       	eor	r24, r25
    b7a8:	88 23       	and	r24, r24
    b7aa:	71 f0       	breq	.+28     	; 0xb7c8 <_Z9makeMorsePcPbS0_+0x140>
		{
			carrierOn = false;
    b7ac:	10 92 76 49 	sts	0x4976, r1	; 0x804976 <_ZZ9makeMorsePcPbS0_E9carrierOn>
			/* wait one element = inter-symbol space */
			if(addedSpace)
    b7b0:	80 91 74 49 	lds	r24, 0x4974	; 0x804974 <_ZZ9makeMorsePcPbS0_E10addedSpace>
    b7b4:	88 23       	and	r24, r24
    b7b6:	09 f4       	brne	.+2      	; 0xb7ba <_Z9makeMorsePcPbS0_+0x132>
    b7b8:	9d c0       	rjmp	.+314    	; 0xb8f4 <_Z9makeMorsePcPbS0_+0x26c>
			{
				elementIndex = addedSpace;
    b7ba:	80 91 74 49 	lds	r24, 0x4974	; 0x804974 <_ZZ9makeMorsePcPbS0_E10addedSpace>
    b7be:	80 93 73 49 	sts	0x4973, r24	; 0x804973 <_ZZ9makeMorsePcPbS0_E12elementIndex>
				addedSpace = 0;
    b7c2:	10 92 74 49 	sts	0x4974, r1	; 0x804974 <_ZZ9makeMorsePcPbS0_E10addedSpace>
		}
		else if(carrierOn && !holdKeyDown)  /* carrier is on, so turn it off and wait appropriate amount of space */
		{
			carrierOn = false;
			/* wait one element = inter-symbol space */
			if(addedSpace)
    b7c6:	96 c0       	rjmp	.+300    	; 0xb8f4 <_Z9makeMorsePcPbS0_+0x26c>
			}
			/* wait inter-character space */
		}
		else    /* carrier is off, so turn it on and get next symbol */
		{
			if(symbolIndex >= morseInProgress.lengthInSymbols)
    b7c8:	90 91 6f 49 	lds	r25, 0x496F	; 0x80496f <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x1>
    b7cc:	80 91 72 49 	lds	r24, 0x4972	; 0x804972 <_ZZ9makeMorsePcPbS0_E11symbolIndex>
    b7d0:	89 17       	cp	r24, r25
    b7d2:	08 f4       	brcc	.+2      	; 0xb7d6 <_Z9makeMorsePcPbS0_+0x14e>
    b7d4:	4a c0       	rjmp	.+148    	; 0xb86a <_Z9makeMorsePcPbS0_+0x1e2>
			{
				c = (*(str + ++charIndex));
    b7d6:	20 91 6c 49 	lds	r18, 0x496C	; 0x80496c <_ZZ9makeMorsePcPbS0_E3str>
    b7da:	30 91 6d 49 	lds	r19, 0x496D	; 0x80496d <_ZZ9makeMorsePcPbS0_E3str+0x1>
    b7de:	80 91 71 49 	lds	r24, 0x4971	; 0x804971 <_ZZ9makeMorsePcPbS0_E9charIndex>
    b7e2:	8f 5f       	subi	r24, 0xFF	; 255
    b7e4:	80 93 71 49 	sts	0x4971, r24	; 0x804971 <_ZZ9makeMorsePcPbS0_E9charIndex>
    b7e8:	80 91 71 49 	lds	r24, 0x4971	; 0x804971 <_ZZ9makeMorsePcPbS0_E9charIndex>
    b7ec:	88 2f       	mov	r24, r24
    b7ee:	90 e0       	ldi	r25, 0x00	; 0
    b7f0:	82 0f       	add	r24, r18
    b7f2:	93 1f       	adc	r25, r19
    b7f4:	fc 01       	movw	r30, r24
    b7f6:	80 81       	ld	r24, Z
    b7f8:	80 93 2f 40 	sts	0x402F, r24	; 0x80402f <_ZZ9makeMorsePcPbS0_E1c>

				if(!c)  /* wrap to beginning of text */
    b7fc:	80 91 2f 40 	lds	r24, 0x402F	; 0x80402f <_ZZ9makeMorsePcPbS0_E1c>
    b800:	88 23       	and	r24, r24
    b802:	29 f5       	brne	.+74     	; 0xb84e <_Z9makeMorsePcPbS0_+0x1c6>
				{
					if(repeat)
    b804:	80 91 2e 40 	lds	r24, 0x402E	; 0x80402e <_ZZ9makeMorsePcPbS0_E6repeat>
    b808:	88 23       	and	r24, r24
    b80a:	59 f0       	breq	.+22     	; 0xb822 <_Z9makeMorsePcPbS0_+0x19a>
					{
						c = *str;
    b80c:	80 91 6c 49 	lds	r24, 0x496C	; 0x80496c <_ZZ9makeMorsePcPbS0_E3str>
    b810:	90 91 6d 49 	lds	r25, 0x496D	; 0x80496d <_ZZ9makeMorsePcPbS0_E3str+0x1>
    b814:	fc 01       	movw	r30, r24
    b816:	80 81       	ld	r24, Z
    b818:	80 93 2f 40 	sts	0x402F, r24	; 0x80402f <_ZZ9makeMorsePcPbS0_E1c>
						charIndex = 0;
    b81c:	10 92 71 49 	sts	0x4971, r1	; 0x804971 <_ZZ9makeMorsePcPbS0_E9charIndex>
    b820:	16 c0       	rjmp	.+44     	; 0xb84e <_Z9makeMorsePcPbS0_+0x1c6>
					}
					else
					{
						str = NULL;
    b822:	10 92 6c 49 	sts	0x496C, r1	; 0x80496c <_ZZ9makeMorsePcPbS0_E3str>
    b826:	10 92 6d 49 	sts	0x496D, r1	; 0x80496d <_ZZ9makeMorsePcPbS0_E3str+0x1>
						carrierOn = OFF;
    b82a:	10 92 76 49 	sts	0x4976, r1	; 0x804976 <_ZZ9makeMorsePcPbS0_E9carrierOn>
						completedString = true;
    b82e:	81 e0       	ldi	r24, 0x01	; 1
    b830:	80 93 75 49 	sts	0x4975, r24	; 0x804975 <_ZZ9makeMorsePcPbS0_E15completedString>
						if(finished)
    b834:	8f 81       	ldd	r24, Y+7	; 0x07
    b836:	98 85       	ldd	r25, Y+8	; 0x08
    b838:	89 2b       	or	r24, r25
    b83a:	29 f0       	breq	.+10     	; 0xb846 <_Z9makeMorsePcPbS0_+0x1be>
						{
							*finished = true;
    b83c:	8f 81       	ldd	r24, Y+7	; 0x07
    b83e:	98 85       	ldd	r25, Y+8	; 0x08
    b840:	21 e0       	ldi	r18, 0x01	; 1
    b842:	fc 01       	movw	r30, r24
    b844:	20 83       	st	Z, r18
						}
						holdKeyDown = false;
    b846:	10 92 6b 49 	sts	0x496B, r1	; 0x80496b <_ZZ9makeMorsePcPbS0_E11holdKeyDown>
						return( OFF );
    b84a:	80 e0       	ldi	r24, 0x00	; 0
    b84c:	6f c0       	rjmp	.+222    	; 0xb92c <_Z9makeMorsePcPbS0_+0x2a4>
					}
				}

				morseInProgress = getMorseChar(c);
    b84e:	80 91 2f 40 	lds	r24, 0x402F	; 0x80402f <_ZZ9makeMorsePcPbS0_E1c>
    b852:	0e 94 ec 5c 	call	0xb9d8	; 0xb9d8 <_Z12getMorseCharc>
    b856:	a8 2f       	mov	r26, r24
    b858:	cb 01       	movw	r24, r22
    b85a:	80 93 6e 49 	sts	0x496E, r24	; 0x80496e <_ZZ9makeMorsePcPbS0_E15morseInProgress>
    b85e:	90 93 6f 49 	sts	0x496F, r25	; 0x80496f <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x1>
    b862:	a0 93 70 49 	sts	0x4970, r26	; 0x804970 <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x2>
				symbolIndex = 0;
    b866:	10 92 72 49 	sts	0x4972, r1	; 0x804972 <_ZZ9makeMorsePcPbS0_E11symbolIndex>
			}

			if(morseInProgress.pattern < INTER_WORD_SPACE)
    b86a:	80 91 6e 49 	lds	r24, 0x496E	; 0x80496e <_ZZ9makeMorsePcPbS0_E15morseInProgress>
    b86e:	8d 3f       	cpi	r24, 0xFD	; 253
    b870:	70 f5       	brcc	.+92     	; 0xb8ce <_Z9makeMorsePcPbS0_+0x246>
			{
				bool isDah = morseInProgress.pattern & (1 << symbolIndex++);
    b872:	80 91 6e 49 	lds	r24, 0x496E	; 0x80496e <_ZZ9makeMorsePcPbS0_E15morseInProgress>
    b876:	88 2f       	mov	r24, r24
    b878:	90 e0       	ldi	r25, 0x00	; 0
    b87a:	20 91 72 49 	lds	r18, 0x4972	; 0x804972 <_ZZ9makeMorsePcPbS0_E11symbolIndex>
    b87e:	31 e0       	ldi	r19, 0x01	; 1
    b880:	32 0f       	add	r19, r18
    b882:	30 93 72 49 	sts	0x4972, r19	; 0x804972 <_ZZ9makeMorsePcPbS0_E11symbolIndex>
    b886:	22 2f       	mov	r18, r18
    b888:	30 e0       	ldi	r19, 0x00	; 0
    b88a:	02 c0       	rjmp	.+4      	; 0xb890 <_Z9makeMorsePcPbS0_+0x208>
    b88c:	95 95       	asr	r25
    b88e:	87 95       	ror	r24
    b890:	2a 95       	dec	r18
    b892:	e2 f7       	brpl	.-8      	; 0xb88c <_Z9makeMorsePcPbS0_+0x204>
    b894:	81 70       	andi	r24, 0x01	; 1
    b896:	99 27       	eor	r25, r25
    b898:	21 e0       	ldi	r18, 0x01	; 1
    b89a:	89 2b       	or	r24, r25
    b89c:	09 f4       	brne	.+2      	; 0xb8a0 <_Z9makeMorsePcPbS0_+0x218>
    b89e:	20 e0       	ldi	r18, 0x00	; 0
    b8a0:	29 83       	std	Y+1, r18	; 0x01

				if(isDah)
    b8a2:	89 81       	ldd	r24, Y+1	; 0x01
    b8a4:	88 23       	and	r24, r24
    b8a6:	21 f0       	breq	.+8      	; 0xb8b0 <_Z9makeMorsePcPbS0_+0x228>
				{
					elementIndex = 2;
    b8a8:	82 e0       	ldi	r24, 0x02	; 2
    b8aa:	80 93 73 49 	sts	0x4973, r24	; 0x804973 <_ZZ9makeMorsePcPbS0_E12elementIndex>
    b8ae:	02 c0       	rjmp	.+4      	; 0xb8b4 <_Z9makeMorsePcPbS0_+0x22c>
				}
				else
				{
					elementIndex = 0;
    b8b0:	10 92 73 49 	sts	0x4973, r1	; 0x804973 <_ZZ9makeMorsePcPbS0_E12elementIndex>
				}

				carrierOn = true;
    b8b4:	81 e0       	ldi	r24, 0x01	; 1
    b8b6:	80 93 76 49 	sts	0x4976, r24	; 0x804976 <_ZZ9makeMorsePcPbS0_E9carrierOn>

				if(symbolIndex >= morseInProgress.lengthInSymbols)
    b8ba:	90 91 6f 49 	lds	r25, 0x496F	; 0x80496f <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x1>
    b8be:	80 91 72 49 	lds	r24, 0x4972	; 0x804972 <_ZZ9makeMorsePcPbS0_E11symbolIndex>
    b8c2:	89 17       	cp	r24, r25
    b8c4:	b8 f0       	brcs	.+46     	; 0xb8f4 <_Z9makeMorsePcPbS0_+0x26c>
				{
					addedSpace = 2;
    b8c6:	82 e0       	ldi	r24, 0x02	; 2
    b8c8:	80 93 74 49 	sts	0x4974, r24	; 0x804974 <_ZZ9makeMorsePcPbS0_E10addedSpace>
    b8cc:	13 c0       	rjmp	.+38     	; 0xb8f4 <_Z9makeMorsePcPbS0_+0x26c>
				}
			}
			else
			{
				uint8_t sym = morseInProgress.lengthInSymbols;
    b8ce:	80 91 6f 49 	lds	r24, 0x496F	; 0x80496f <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x1>
    b8d2:	8a 83       	std	Y+2, r24	; 0x02
				symbolIndex = 255;  /* ensure the next character gets read */
    b8d4:	8f ef       	ldi	r24, 0xFF	; 255
    b8d6:	80 93 72 49 	sts	0x4972, r24	; 0x804972 <_ZZ9makeMorsePcPbS0_E11symbolIndex>
				carrierOn = false;
    b8da:	10 92 76 49 	sts	0x4976, r1	; 0x804976 <_ZZ9makeMorsePcPbS0_E9carrierOn>
				if(sym >= 4 )
    b8de:	8a 81       	ldd	r24, Y+2	; 0x02
    b8e0:	84 30       	cpi	r24, 0x04	; 4
    b8e2:	30 f0       	brcs	.+12     	; 0xb8f0 <_Z9makeMorsePcPbS0_+0x268>
				{
					elementIndex = morseInProgress.lengthInSymbols - 4;
    b8e4:	80 91 6f 49 	lds	r24, 0x496F	; 0x80496f <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x1>
    b8e8:	84 50       	subi	r24, 0x04	; 4
    b8ea:	80 93 73 49 	sts	0x4973, r24	; 0x804973 <_ZZ9makeMorsePcPbS0_E12elementIndex>
    b8ee:	02 c0       	rjmp	.+4      	; 0xb8f4 <_Z9makeMorsePcPbS0_+0x26c>
				}
				else
				{
					elementIndex = 0;
    b8f0:	10 92 73 49 	sts	0x4973, r1	; 0x804973 <_ZZ9makeMorsePcPbS0_E12elementIndex>
				}
			}
		}

		/* Overrides for key on and key off special characters */
		if(c == '<')    /* constant tone */
    b8f4:	80 91 2f 40 	lds	r24, 0x402F	; 0x80402f <_ZZ9makeMorsePcPbS0_E1c>
    b8f8:	8c 33       	cpi	r24, 0x3C	; 60
    b8fa:	21 f4       	brne	.+8      	; 0xb904 <_Z9makeMorsePcPbS0_+0x27c>
		{
			holdKeyDown = true;
    b8fc:	81 e0       	ldi	r24, 0x01	; 1
    b8fe:	80 93 6b 49 	sts	0x496B, r24	; 0x80496b <_ZZ9makeMorsePcPbS0_E11holdKeyDown>
    b902:	02 c0       	rjmp	.+4      	; 0xb908 <_Z9makeMorsePcPbS0_+0x280>
		}
		else
		{
			holdKeyDown = false;
    b904:	10 92 6b 49 	sts	0x496B, r1	; 0x80496b <_ZZ9makeMorsePcPbS0_E11holdKeyDown>
		}
	}

	if(finished)
    b908:	8f 81       	ldd	r24, Y+7	; 0x07
    b90a:	98 85       	ldd	r25, Y+8	; 0x08
    b90c:	89 2b       	or	r24, r25
    b90e:	31 f0       	breq	.+12     	; 0xb91c <_Z9makeMorsePcPbS0_+0x294>
	{
		*finished = completedString;
    b910:	20 91 75 49 	lds	r18, 0x4975	; 0x804975 <_ZZ9makeMorsePcPbS0_E15completedString>
    b914:	8f 81       	ldd	r24, Y+7	; 0x07
    b916:	98 85       	ldd	r25, Y+8	; 0x08
    b918:	fc 01       	movw	r30, r24
    b91a:	20 83       	st	Z, r18
	}

	if(holdKeyDown)
    b91c:	80 91 6b 49 	lds	r24, 0x496B	; 0x80496b <_ZZ9makeMorsePcPbS0_E11holdKeyDown>
    b920:	88 23       	and	r24, r24
    b922:	11 f0       	breq	.+4      	; 0xb928 <_Z9makeMorsePcPbS0_+0x2a0>
	{
		return(true);
    b924:	81 e0       	ldi	r24, 0x01	; 1
    b926:	02 c0       	rjmp	.+4      	; 0xb92c <_Z9makeMorsePcPbS0_+0x2a4>
	}
	else
	{
		return( carrierOn);
    b928:	80 91 76 49 	lds	r24, 0x4976	; 0x804976 <_ZZ9makeMorsePcPbS0_E9carrierOn>
	}
}
    b92c:	28 96       	adiw	r28, 0x08	; 8
    b92e:	cd bf       	out	0x3d, r28	; 61
    b930:	de bf       	out	0x3e, r29	; 62
    b932:	df 91       	pop	r29
    b934:	cf 91       	pop	r28
    b936:	08 95       	ret

0000b938 <_Z26timeRequiredToSendStrAtWPMPcj>:
/**
 *  Returns the number of milliseconds required to send the string pointed to by the first argument at the WPM code speed
 *  passed in the second argument.
 */
uint16_t timeRequiredToSendStrAtWPM(char* str, uint16_t spd)
{
    b938:	cf 93       	push	r28
    b93a:	df 93       	push	r29
    b93c:	cd b7       	in	r28, 0x3d	; 61
    b93e:	de b7       	in	r29, 0x3e	; 62
    b940:	2b 97       	sbiw	r28, 0x0b	; 11
    b942:	cd bf       	out	0x3d, r28	; 61
    b944:	de bf       	out	0x3e, r29	; 62
    b946:	88 87       	std	Y+8, r24	; 0x08
    b948:	99 87       	std	Y+9, r25	; 0x09
    b94a:	6a 87       	std	Y+10, r22	; 0x0a
    b94c:	7b 87       	std	Y+11, r23	; 0x0b
	uint8_t elements = 0;
    b94e:	19 82       	std	Y+1, r1	; 0x01
	MorseCharacter m;
	char c;

	for(int i = 0; i < 20; i++)
    b950:	1a 82       	std	Y+2, r1	; 0x02
    b952:	1b 82       	std	Y+3, r1	; 0x03
    b954:	8a 81       	ldd	r24, Y+2	; 0x02
    b956:	9b 81       	ldd	r25, Y+3	; 0x03
    b958:	44 97       	sbiw	r24, 0x14	; 20
    b95a:	2c f5       	brge	.+74     	; 0xb9a6 <_Z26timeRequiredToSendStrAtWPMPcj+0x6e>
	{
		c = str[i];
    b95c:	8a 81       	ldd	r24, Y+2	; 0x02
    b95e:	9b 81       	ldd	r25, Y+3	; 0x03
    b960:	28 85       	ldd	r18, Y+8	; 0x08
    b962:	39 85       	ldd	r19, Y+9	; 0x09
    b964:	82 0f       	add	r24, r18
    b966:	93 1f       	adc	r25, r19
    b968:	fc 01       	movw	r30, r24
    b96a:	80 81       	ld	r24, Z
    b96c:	8c 83       	std	Y+4, r24	; 0x04
		if(!c)
    b96e:	8c 81       	ldd	r24, Y+4	; 0x04
    b970:	88 23       	and	r24, r24
    b972:	c1 f0       	breq	.+48     	; 0xb9a4 <_Z26timeRequiredToSendStrAtWPMPcj+0x6c>
		{
			break;
		}
		m = getMorseChar(c);
    b974:	8c 81       	ldd	r24, Y+4	; 0x04
    b976:	0e 94 ec 5c 	call	0xb9d8	; 0xb9d8 <_Z12getMorseCharc>
    b97a:	a8 2f       	mov	r26, r24
    b97c:	cb 01       	movw	r24, r22
    b97e:	8d 83       	std	Y+5, r24	; 0x05
    b980:	9e 83       	std	Y+6, r25	; 0x06
    b982:	af 83       	std	Y+7, r26	; 0x07
		if(m.pattern < INTER_WORD_SPACE)
    b984:	8d 81       	ldd	r24, Y+5	; 0x05
    b986:	8d 3f       	cpi	r24, 0xFD	; 253
    b988:	18 f4       	brcc	.+6      	; 0xb990 <_Z26timeRequiredToSendStrAtWPMPcj+0x58>
		{
			elements += 3;
    b98a:	89 81       	ldd	r24, Y+1	; 0x01
    b98c:	8d 5f       	subi	r24, 0xFD	; 253
    b98e:	89 83       	std	Y+1, r24	; 0x01
		}
		elements += m.lengthInElements;
    b990:	8f 81       	ldd	r24, Y+7	; 0x07
    b992:	99 81       	ldd	r25, Y+1	; 0x01
    b994:	89 0f       	add	r24, r25
    b996:	89 83       	std	Y+1, r24	; 0x01
{
	uint8_t elements = 0;
	MorseCharacter m;
	char c;

	for(int i = 0; i < 20; i++)
    b998:	8a 81       	ldd	r24, Y+2	; 0x02
    b99a:	9b 81       	ldd	r25, Y+3	; 0x03
    b99c:	01 96       	adiw	r24, 0x01	; 1
    b99e:	8a 83       	std	Y+2, r24	; 0x02
    b9a0:	9b 83       	std	Y+3, r25	; 0x03
    b9a2:	d8 cf       	rjmp	.-80     	; 0xb954 <_Z26timeRequiredToSendStrAtWPMPcj+0x1c>
	{
		c = str[i];
		if(!c)
		{
			break;
    b9a4:	00 00       	nop
			elements += 3;
		}
		elements += m.lengthInElements;
	}

	return(elements * WPM_TO_MS_PER_DOT(spd));
    b9a6:	89 81       	ldd	r24, Y+1	; 0x01
    b9a8:	28 2f       	mov	r18, r24
    b9aa:	30 e0       	ldi	r19, 0x00	; 0
    b9ac:	80 eb       	ldi	r24, 0xB0	; 176
    b9ae:	94 e0       	ldi	r25, 0x04	; 4
    b9b0:	4a 85       	ldd	r20, Y+10	; 0x0a
    b9b2:	5b 85       	ldd	r21, Y+11	; 0x0b
    b9b4:	ba 01       	movw	r22, r20
    b9b6:	0e 94 3a 7a 	call	0xf474	; 0xf474 <__udivmodhi4>
    b9ba:	cb 01       	movw	r24, r22
    b9bc:	ac 01       	movw	r20, r24
    b9be:	24 9f       	mul	r18, r20
    b9c0:	c0 01       	movw	r24, r0
    b9c2:	25 9f       	mul	r18, r21
    b9c4:	90 0d       	add	r25, r0
    b9c6:	34 9f       	mul	r19, r20
    b9c8:	90 0d       	add	r25, r0
    b9ca:	11 24       	eor	r1, r1
}
    b9cc:	2b 96       	adiw	r28, 0x0b	; 11
    b9ce:	cd bf       	out	0x3d, r28	; 61
    b9d0:	de bf       	out	0x3e, r29	; 62
    b9d2:	df 91       	pop	r29
    b9d4:	cf 91       	pop	r28
    b9d6:	08 95       	ret

0000b9d8 <_Z12getMorseCharc>:
 *  pattern = a sequence of up to 8 dit and dah symbols contained in an unsigned byte, sequentially read from LSB to MSB (first symbol is bit 0)
 *  lengthInSymbols = how many symbols (dits and dahs) the character contains; this is how many pattern bits are used to represent the character
 *  lengthInElements = how long (measured in "dit lengths") is the total character including all inter-symbol spaces.
 */
MorseCharacter getMorseChar(char c)
{
    b9d8:	cf 93       	push	r28
    b9da:	df 93       	push	r29
    b9dc:	00 d0       	rcall	.+0      	; 0xb9de <_Z12getMorseCharc+0x6>
    b9de:	00 d0       	rcall	.+0      	; 0xb9e0 <_Z12getMorseCharc+0x8>
    b9e0:	cd b7       	in	r28, 0x3d	; 61
    b9e2:	de b7       	in	r29, 0x3e	; 62
    b9e4:	8c 83       	std	Y+4, r24	; 0x04
	MorseCharacter morse;

	switch( c )
    b9e6:	8c 81       	ldd	r24, Y+4	; 0x04
    b9e8:	88 2f       	mov	r24, r24
    b9ea:	90 e0       	ldi	r25, 0x00	; 0
    b9ec:	09 2e       	mov	r0, r25
    b9ee:	00 0c       	add	r0, r0
    b9f0:	aa 0b       	sbc	r26, r26
    b9f2:	bb 0b       	sbc	r27, r27
    b9f4:	40 e2       	ldi	r20, 0x20	; 32
    b9f6:	50 e0       	ldi	r21, 0x00	; 0
    b9f8:	2c e5       	ldi	r18, 0x5C	; 92
    b9fa:	30 e0       	ldi	r19, 0x00	; 0
    b9fc:	84 1b       	sub	r24, r20
    b9fe:	95 0b       	sbc	r25, r21
    ba00:	28 17       	cp	r18, r24
    ba02:	39 07       	cpc	r19, r25
    ba04:	08 f4       	brcc	.+2      	; 0xba08 <_Z12getMorseCharc+0x30>
    ba06:	8f c1       	rjmp	.+798    	; 0xbd26 <_Z12getMorseCharc+0x34e>
    ba08:	8c 51       	subi	r24, 0x1C	; 28
    ba0a:	9f 4f       	sbci	r25, 0xFF	; 255
    ba0c:	fc 01       	movw	r30, r24
    ba0e:	0c 94 a3 7a 	jmp	0xf546	; 0xf546 <__tablejump2__>
	{
		case 'A':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
    ba12:	82 e0       	ldi	r24, 0x02	; 2
    ba14:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 2;
    ba16:	82 e0       	ldi	r24, 0x02	; 2
    ba18:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 5;
    ba1a:	85 e0       	ldi	r24, 0x05	; 5
    ba1c:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    ba1e:	87 c1       	rjmp	.+782    	; 0xbd2e <_Z12getMorseCharc+0x356>

		case 'B':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    ba20:	81 e0       	ldi	r24, 0x01	; 1
    ba22:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    ba24:	84 e0       	ldi	r24, 0x04	; 4
    ba26:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    ba28:	89 e0       	ldi	r24, 0x09	; 9
    ba2a:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    ba2c:	80 c1       	rjmp	.+768    	; 0xbd2e <_Z12getMorseCharc+0x356>

		case 'C':
		{
			morse.pattern = 0x05;   /* 0000 0101; */
    ba2e:	85 e0       	ldi	r24, 0x05	; 5
    ba30:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    ba32:	84 e0       	ldi	r24, 0x04	; 4
    ba34:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    ba36:	8b e0       	ldi	r24, 0x0B	; 11
    ba38:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    ba3a:	79 c1       	rjmp	.+754    	; 0xbd2e <_Z12getMorseCharc+0x356>

		case 'D':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    ba3c:	81 e0       	ldi	r24, 0x01	; 1
    ba3e:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 3;
    ba40:	83 e0       	ldi	r24, 0x03	; 3
    ba42:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 7;
    ba44:	87 e0       	ldi	r24, 0x07	; 7
    ba46:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    ba48:	72 c1       	rjmp	.+740    	; 0xbd2e <_Z12getMorseCharc+0x356>

		case 'E':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    ba4a:	19 82       	std	Y+1, r1	; 0x01
			morse.lengthInSymbols = 1;
    ba4c:	81 e0       	ldi	r24, 0x01	; 1
    ba4e:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 1;
    ba50:	81 e0       	ldi	r24, 0x01	; 1
    ba52:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    ba54:	6c c1       	rjmp	.+728    	; 0xbd2e <_Z12getMorseCharc+0x356>

		case 'F':
		{
			morse.pattern = 0x04;   /* 0000 0100; */
    ba56:	84 e0       	ldi	r24, 0x04	; 4
    ba58:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    ba5a:	84 e0       	ldi	r24, 0x04	; 4
    ba5c:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    ba5e:	89 e0       	ldi	r24, 0x09	; 9
    ba60:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    ba62:	65 c1       	rjmp	.+714    	; 0xbd2e <_Z12getMorseCharc+0x356>

		case 'G':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
    ba64:	83 e0       	ldi	r24, 0x03	; 3
    ba66:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 3;
    ba68:	83 e0       	ldi	r24, 0x03	; 3
    ba6a:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    ba6c:	89 e0       	ldi	r24, 0x09	; 9
    ba6e:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    ba70:	5e c1       	rjmp	.+700    	; 0xbd2e <_Z12getMorseCharc+0x356>

		case 'H':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    ba72:	19 82       	std	Y+1, r1	; 0x01
			morse.lengthInSymbols = 4;
    ba74:	84 e0       	ldi	r24, 0x04	; 4
    ba76:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 7;
    ba78:	87 e0       	ldi	r24, 0x07	; 7
    ba7a:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    ba7c:	58 c1       	rjmp	.+688    	; 0xbd2e <_Z12getMorseCharc+0x356>

		case 'I':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    ba7e:	19 82       	std	Y+1, r1	; 0x01
			morse.lengthInSymbols = 2;
    ba80:	82 e0       	ldi	r24, 0x02	; 2
    ba82:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 3;
    ba84:	83 e0       	ldi	r24, 0x03	; 3
    ba86:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    ba88:	52 c1       	rjmp	.+676    	; 0xbd2e <_Z12getMorseCharc+0x356>

		case 'J':
		{
			morse.pattern = 0x0e;   /* 0000 1110; */
    ba8a:	8e e0       	ldi	r24, 0x0E	; 14
    ba8c:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    ba8e:	84 e0       	ldi	r24, 0x04	; 4
    ba90:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    ba92:	8d e0       	ldi	r24, 0x0D	; 13
    ba94:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    ba96:	4b c1       	rjmp	.+662    	; 0xbd2e <_Z12getMorseCharc+0x356>

		case 'K':
		{
			morse.pattern = 0x05;   /* 0000 0101; */
    ba98:	85 e0       	ldi	r24, 0x05	; 5
    ba9a:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 3;
    ba9c:	83 e0       	ldi	r24, 0x03	; 3
    ba9e:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    baa0:	89 e0       	ldi	r24, 0x09	; 9
    baa2:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    baa4:	44 c1       	rjmp	.+648    	; 0xbd2e <_Z12getMorseCharc+0x356>

		case 'L':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
    baa6:	82 e0       	ldi	r24, 0x02	; 2
    baa8:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    baaa:	84 e0       	ldi	r24, 0x04	; 4
    baac:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    baae:	89 e0       	ldi	r24, 0x09	; 9
    bab0:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bab2:	3d c1       	rjmp	.+634    	; 0xbd2e <_Z12getMorseCharc+0x356>

		case 'M':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
    bab4:	83 e0       	ldi	r24, 0x03	; 3
    bab6:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 2;
    bab8:	82 e0       	ldi	r24, 0x02	; 2
    baba:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 7;
    babc:	87 e0       	ldi	r24, 0x07	; 7
    babe:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bac0:	36 c1       	rjmp	.+620    	; 0xbd2e <_Z12getMorseCharc+0x356>

		case 'N':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    bac2:	81 e0       	ldi	r24, 0x01	; 1
    bac4:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 2;
    bac6:	82 e0       	ldi	r24, 0x02	; 2
    bac8:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 5;
    baca:	85 e0       	ldi	r24, 0x05	; 5
    bacc:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bace:	2f c1       	rjmp	.+606    	; 0xbd2e <_Z12getMorseCharc+0x356>

		case 'O':
		{
			morse.pattern = 0x07;   /* 0000 0111; */
    bad0:	87 e0       	ldi	r24, 0x07	; 7
    bad2:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 3;
    bad4:	83 e0       	ldi	r24, 0x03	; 3
    bad6:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    bad8:	8b e0       	ldi	r24, 0x0B	; 11
    bada:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    badc:	28 c1       	rjmp	.+592    	; 0xbd2e <_Z12getMorseCharc+0x356>

		case 'P':
		{
			morse.pattern = 0x06;   /* 0000 0110; */
    bade:	86 e0       	ldi	r24, 0x06	; 6
    bae0:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    bae2:	84 e0       	ldi	r24, 0x04	; 4
    bae4:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    bae6:	8b e0       	ldi	r24, 0x0B	; 11
    bae8:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    baea:	21 c1       	rjmp	.+578    	; 0xbd2e <_Z12getMorseCharc+0x356>

		case 'Q':
		{
			morse.pattern = 0x0b;   /* 0000 1011; */
    baec:	8b e0       	ldi	r24, 0x0B	; 11
    baee:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    baf0:	84 e0       	ldi	r24, 0x04	; 4
    baf2:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    baf4:	8d e0       	ldi	r24, 0x0D	; 13
    baf6:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    baf8:	1a c1       	rjmp	.+564    	; 0xbd2e <_Z12getMorseCharc+0x356>

		case 'R':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
    bafa:	82 e0       	ldi	r24, 0x02	; 2
    bafc:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 3;
    bafe:	83 e0       	ldi	r24, 0x03	; 3
    bb00:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 7;
    bb02:	87 e0       	ldi	r24, 0x07	; 7
    bb04:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bb06:	13 c1       	rjmp	.+550    	; 0xbd2e <_Z12getMorseCharc+0x356>

		case 'S':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    bb08:	19 82       	std	Y+1, r1	; 0x01
			morse.lengthInSymbols = 3;
    bb0a:	83 e0       	ldi	r24, 0x03	; 3
    bb0c:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 5;
    bb0e:	85 e0       	ldi	r24, 0x05	; 5
    bb10:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bb12:	0d c1       	rjmp	.+538    	; 0xbd2e <_Z12getMorseCharc+0x356>

		case 'T':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    bb14:	81 e0       	ldi	r24, 0x01	; 1
    bb16:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 1;
    bb18:	81 e0       	ldi	r24, 0x01	; 1
    bb1a:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 3;
    bb1c:	83 e0       	ldi	r24, 0x03	; 3
    bb1e:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bb20:	06 c1       	rjmp	.+524    	; 0xbd2e <_Z12getMorseCharc+0x356>

		case 'U':
		{
			morse.pattern = 0x04;   /* 0000 0100; */
    bb22:	84 e0       	ldi	r24, 0x04	; 4
    bb24:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 3;
    bb26:	83 e0       	ldi	r24, 0x03	; 3
    bb28:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 7;
    bb2a:	87 e0       	ldi	r24, 0x07	; 7
    bb2c:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bb2e:	ff c0       	rjmp	.+510    	; 0xbd2e <_Z12getMorseCharc+0x356>

		case 'V':
		{
			morse.pattern = 0x08;   /* 0000 1000; */
    bb30:	88 e0       	ldi	r24, 0x08	; 8
    bb32:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    bb34:	84 e0       	ldi	r24, 0x04	; 4
    bb36:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    bb38:	89 e0       	ldi	r24, 0x09	; 9
    bb3a:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bb3c:	f8 c0       	rjmp	.+496    	; 0xbd2e <_Z12getMorseCharc+0x356>

		case 'W':
		{
			morse.pattern = 0x06;   /* 0000 0110; */
    bb3e:	86 e0       	ldi	r24, 0x06	; 6
    bb40:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 3;
    bb42:	83 e0       	ldi	r24, 0x03	; 3
    bb44:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    bb46:	89 e0       	ldi	r24, 0x09	; 9
    bb48:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bb4a:	f1 c0       	rjmp	.+482    	; 0xbd2e <_Z12getMorseCharc+0x356>

		case 'X':
		{
			morse.pattern = 0x09;   /* 0000 1001; */
    bb4c:	89 e0       	ldi	r24, 0x09	; 9
    bb4e:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    bb50:	84 e0       	ldi	r24, 0x04	; 4
    bb52:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    bb54:	8b e0       	ldi	r24, 0x0B	; 11
    bb56:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bb58:	ea c0       	rjmp	.+468    	; 0xbd2e <_Z12getMorseCharc+0x356>

		case 'Y':
		{
			morse.pattern = 0x0d;   /* 0000 1101; */
    bb5a:	8d e0       	ldi	r24, 0x0D	; 13
    bb5c:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    bb5e:	84 e0       	ldi	r24, 0x04	; 4
    bb60:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    bb62:	8d e0       	ldi	r24, 0x0D	; 13
    bb64:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bb66:	e3 c0       	rjmp	.+454    	; 0xbd2e <_Z12getMorseCharc+0x356>

		case 'Z':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
    bb68:	83 e0       	ldi	r24, 0x03	; 3
    bb6a:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    bb6c:	84 e0       	ldi	r24, 0x04	; 4
    bb6e:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    bb70:	8b e0       	ldi	r24, 0x0B	; 11
    bb72:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bb74:	dc c0       	rjmp	.+440    	; 0xbd2e <_Z12getMorseCharc+0x356>

		case '0':
		{
			morse.pattern = 0x1f;   /* 0001 1111; */
    bb76:	8f e1       	ldi	r24, 0x1F	; 31
    bb78:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    bb7a:	85 e0       	ldi	r24, 0x05	; 5
    bb7c:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 19;
    bb7e:	83 e1       	ldi	r24, 0x13	; 19
    bb80:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bb82:	d5 c0       	rjmp	.+426    	; 0xbd2e <_Z12getMorseCharc+0x356>

		case '1':
		{
			morse.pattern = 0x1e;   /* 0001 1110; */
    bb84:	8e e1       	ldi	r24, 0x1E	; 30
    bb86:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    bb88:	85 e0       	ldi	r24, 0x05	; 5
    bb8a:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 17;
    bb8c:	81 e1       	ldi	r24, 0x11	; 17
    bb8e:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bb90:	ce c0       	rjmp	.+412    	; 0xbd2e <_Z12getMorseCharc+0x356>

		case '2':
		{
			morse.pattern = 0x1c;   /* 0001 1100; */
    bb92:	8c e1       	ldi	r24, 0x1C	; 28
    bb94:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    bb96:	85 e0       	ldi	r24, 0x05	; 5
    bb98:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 15;
    bb9a:	8f e0       	ldi	r24, 0x0F	; 15
    bb9c:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bb9e:	c7 c0       	rjmp	.+398    	; 0xbd2e <_Z12getMorseCharc+0x356>

		case '3':
		{
			morse.pattern = 0x18;   /* 0001 1000; */
    bba0:	88 e1       	ldi	r24, 0x18	; 24
    bba2:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    bba4:	85 e0       	ldi	r24, 0x05	; 5
    bba6:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    bba8:	8d e0       	ldi	r24, 0x0D	; 13
    bbaa:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bbac:	c0 c0       	rjmp	.+384    	; 0xbd2e <_Z12getMorseCharc+0x356>

		case '4':
		{
			morse.pattern = 0x10;   /* 0001 0000; */
    bbae:	80 e1       	ldi	r24, 0x10	; 16
    bbb0:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    bbb2:	85 e0       	ldi	r24, 0x05	; 5
    bbb4:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    bbb6:	8b e0       	ldi	r24, 0x0B	; 11
    bbb8:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bbba:	b9 c0       	rjmp	.+370    	; 0xbd2e <_Z12getMorseCharc+0x356>

		case '5':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    bbbc:	19 82       	std	Y+1, r1	; 0x01
			morse.lengthInSymbols = 5;
    bbbe:	85 e0       	ldi	r24, 0x05	; 5
    bbc0:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    bbc2:	89 e0       	ldi	r24, 0x09	; 9
    bbc4:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bbc6:	b3 c0       	rjmp	.+358    	; 0xbd2e <_Z12getMorseCharc+0x356>

		case '6':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    bbc8:	81 e0       	ldi	r24, 0x01	; 1
    bbca:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    bbcc:	85 e0       	ldi	r24, 0x05	; 5
    bbce:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    bbd0:	8b e0       	ldi	r24, 0x0B	; 11
    bbd2:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bbd4:	ac c0       	rjmp	.+344    	; 0xbd2e <_Z12getMorseCharc+0x356>

		case '7':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
    bbd6:	83 e0       	ldi	r24, 0x03	; 3
    bbd8:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    bbda:	85 e0       	ldi	r24, 0x05	; 5
    bbdc:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    bbde:	8d e0       	ldi	r24, 0x0D	; 13
    bbe0:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bbe2:	a5 c0       	rjmp	.+330    	; 0xbd2e <_Z12getMorseCharc+0x356>

		case '8':
		{
			morse.pattern = 0x07;   /* 0000 0111; */
    bbe4:	87 e0       	ldi	r24, 0x07	; 7
    bbe6:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    bbe8:	85 e0       	ldi	r24, 0x05	; 5
    bbea:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 15;
    bbec:	8f e0       	ldi	r24, 0x0F	; 15
    bbee:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bbf0:	9e c0       	rjmp	.+316    	; 0xbd2e <_Z12getMorseCharc+0x356>

		case '9':
		{
			morse.pattern = 0x0f;   /* 0000 1111; */
    bbf2:	8f e0       	ldi	r24, 0x0F	; 15
    bbf4:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    bbf6:	85 e0       	ldi	r24, 0x05	; 5
    bbf8:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 17;
    bbfa:	81 e1       	ldi	r24, 0x11	; 17
    bbfc:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bbfe:	97 c0       	rjmp	.+302    	; 0xbd2e <_Z12getMorseCharc+0x356>

		case '.':
		{
			morse.pattern = 0x2a;   /* 0010 1010; */
    bc00:	8a e2       	ldi	r24, 0x2A	; 42
    bc02:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    bc04:	86 e0       	ldi	r24, 0x06	; 6
    bc06:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 17;
    bc08:	81 e1       	ldi	r24, 0x11	; 17
    bc0a:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bc0c:	90 c0       	rjmp	.+288    	; 0xbd2e <_Z12getMorseCharc+0x356>

		case ',':
		{
			morse.pattern = 0x33;   /* 0011 0011; */
    bc0e:	83 e3       	ldi	r24, 0x33	; 51
    bc10:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    bc12:	86 e0       	ldi	r24, 0x06	; 6
    bc14:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 19;
    bc16:	83 e1       	ldi	r24, 0x13	; 19
    bc18:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bc1a:	89 c0       	rjmp	.+274    	; 0xbd2e <_Z12getMorseCharc+0x356>

		case '?':
		{
			morse.pattern = 0x0c;   /* 0000 1100; */
    bc1c:	8c e0       	ldi	r24, 0x0C	; 12
    bc1e:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    bc20:	86 e0       	ldi	r24, 0x06	; 6
    bc22:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 15;
    bc24:	8f e0       	ldi	r24, 0x0F	; 15
    bc26:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bc28:	82 c0       	rjmp	.+260    	; 0xbd2e <_Z12getMorseCharc+0x356>

		case '\'':
		{
			morse.pattern = 0x1e;   /* 0001 1110; */
    bc2a:	8e e1       	ldi	r24, 0x1E	; 30
    bc2c:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    bc2e:	86 e0       	ldi	r24, 0x06	; 6
    bc30:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 19;
    bc32:	83 e1       	ldi	r24, 0x13	; 19
    bc34:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bc36:	7b c0       	rjmp	.+246    	; 0xbd2e <_Z12getMorseCharc+0x356>

		case '!':
		{
			morse.pattern = 0x35;   /* 0011 0101; */
    bc38:	85 e3       	ldi	r24, 0x35	; 53
    bc3a:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    bc3c:	86 e0       	ldi	r24, 0x06	; 6
    bc3e:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 19;
    bc40:	83 e1       	ldi	r24, 0x13	; 19
    bc42:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bc44:	74 c0       	rjmp	.+232    	; 0xbd2e <_Z12getMorseCharc+0x356>

		case '/':
		{
			morse.pattern = 0x09;   /* 0000 1001; */
    bc46:	89 e0       	ldi	r24, 0x09	; 9
    bc48:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    bc4a:	85 e0       	ldi	r24, 0x05	; 5
    bc4c:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    bc4e:	8d e0       	ldi	r24, 0x0D	; 13
    bc50:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bc52:	6d c0       	rjmp	.+218    	; 0xbd2e <_Z12getMorseCharc+0x356>

		case '(':
		{
			morse.pattern = 0x0d;   /* 0000 1101; */
    bc54:	8d e0       	ldi	r24, 0x0D	; 13
    bc56:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    bc58:	85 e0       	ldi	r24, 0x05	; 5
    bc5a:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 15;
    bc5c:	8f e0       	ldi	r24, 0x0F	; 15
    bc5e:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bc60:	66 c0       	rjmp	.+204    	; 0xbd2e <_Z12getMorseCharc+0x356>

		case ')':
		{
			morse.pattern = 0x2d;   /* 0010 1101; */
    bc62:	8d e2       	ldi	r24, 0x2D	; 45
    bc64:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    bc66:	86 e0       	ldi	r24, 0x06	; 6
    bc68:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 19;
    bc6a:	83 e1       	ldi	r24, 0x13	; 19
    bc6c:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bc6e:	5f c0       	rjmp	.+190    	; 0xbd2e <_Z12getMorseCharc+0x356>

		case '&':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
    bc70:	82 e0       	ldi	r24, 0x02	; 2
    bc72:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    bc74:	85 e0       	ldi	r24, 0x05	; 5
    bc76:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    bc78:	8b e0       	ldi	r24, 0x0B	; 11
    bc7a:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bc7c:	58 c0       	rjmp	.+176    	; 0xbd2e <_Z12getMorseCharc+0x356>

		case ':':
		{
			morse.pattern = 0x07;   /* 0000 0111; */
    bc7e:	87 e0       	ldi	r24, 0x07	; 7
    bc80:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    bc82:	86 e0       	ldi	r24, 0x06	; 6
    bc84:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 17;
    bc86:	81 e1       	ldi	r24, 0x11	; 17
    bc88:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bc8a:	51 c0       	rjmp	.+162    	; 0xbd2e <_Z12getMorseCharc+0x356>

		case ';':
		{
			morse.pattern = 0x15;   /* 0001 0101; */
    bc8c:	85 e1       	ldi	r24, 0x15	; 21
    bc8e:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    bc90:	86 e0       	ldi	r24, 0x06	; 6
    bc92:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 12;
    bc94:	8c e0       	ldi	r24, 0x0C	; 12
    bc96:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bc98:	4a c0       	rjmp	.+148    	; 0xbd2e <_Z12getMorseCharc+0x356>

		case '=':
		{
			morse.pattern = 0x11;   /* 0001 0001; */
    bc9a:	81 e1       	ldi	r24, 0x11	; 17
    bc9c:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    bc9e:	85 e0       	ldi	r24, 0x05	; 5
    bca0:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    bca2:	8d e0       	ldi	r24, 0x0D	; 13
    bca4:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bca6:	43 c0       	rjmp	.+134    	; 0xbd2e <_Z12getMorseCharc+0x356>

		case '+':
		{
			morse.pattern = 0x0a;   /* 0000 1010; */
    bca8:	8a e0       	ldi	r24, 0x0A	; 10
    bcaa:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    bcac:	85 e0       	ldi	r24, 0x05	; 5
    bcae:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    bcb0:	8d e0       	ldi	r24, 0x0D	; 13
    bcb2:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bcb4:	3c c0       	rjmp	.+120    	; 0xbd2e <_Z12getMorseCharc+0x356>

		case '-':
		{
			morse.pattern = 0x21;   /* 0010 0001; */
    bcb6:	81 e2       	ldi	r24, 0x21	; 33
    bcb8:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    bcba:	86 e0       	ldi	r24, 0x06	; 6
    bcbc:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 15;
    bcbe:	8f e0       	ldi	r24, 0x0F	; 15
    bcc0:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bcc2:	35 c0       	rjmp	.+106    	; 0xbd2e <_Z12getMorseCharc+0x356>

		case '_':
		{
			morse.pattern = 0x2c;   /* 0010 1100; */
    bcc4:	8c e2       	ldi	r24, 0x2C	; 44
    bcc6:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    bcc8:	86 e0       	ldi	r24, 0x06	; 6
    bcca:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 17;
    bccc:	81 e1       	ldi	r24, 0x11	; 17
    bcce:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bcd0:	2e c0       	rjmp	.+92     	; 0xbd2e <_Z12getMorseCharc+0x356>

		case '"':
		{
			morse.pattern = 0x12;   /* 0001 0010; */
    bcd2:	82 e1       	ldi	r24, 0x12	; 18
    bcd4:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    bcd6:	86 e0       	ldi	r24, 0x06	; 6
    bcd8:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 15;
    bcda:	8f e0       	ldi	r24, 0x0F	; 15
    bcdc:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bcde:	27 c0       	rjmp	.+78     	; 0xbd2e <_Z12getMorseCharc+0x356>

		case '$':
		{
			morse.pattern = 0x48;   /* 0100 1000; */
    bce0:	88 e4       	ldi	r24, 0x48	; 72
    bce2:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 7;
    bce4:	87 e0       	ldi	r24, 0x07	; 7
    bce6:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 17;
    bce8:	81 e1       	ldi	r24, 0x11	; 17
    bcea:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bcec:	20 c0       	rjmp	.+64     	; 0xbd2e <_Z12getMorseCharc+0x356>

		case '@':
		{
			morse.pattern = 0x16;   /* 0001 0110; */
    bcee:	86 e1       	ldi	r24, 0x16	; 22
    bcf0:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    bcf2:	86 e0       	ldi	r24, 0x06	; 6
    bcf4:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 17;
    bcf6:	81 e1       	ldi	r24, 0x11	; 17
    bcf8:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bcfa:	19 c0       	rjmp	.+50     	; 0xbd2e <_Z12getMorseCharc+0x356>

		case '|':                       /* inter-word space */
		{ morse.pattern = 0xff;         /* 1000 0000; */
    bcfc:	8f ef       	ldi	r24, 0xFF	; 255
    bcfe:	89 83       	std	Y+1, r24	; 0x01
		  morse.lengthInSymbols = 7;
    bd00:	87 e0       	ldi	r24, 0x07	; 7
    bd02:	8a 83       	std	Y+2, r24	; 0x02
		  morse.lengthInElements = 4;   /* adjusted by -3 to account for inter-character space */
    bd04:	84 e0       	ldi	r24, 0x04	; 4
    bd06:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bd08:	12 c0       	rjmp	.+36     	; 0xbd2e <_Z12getMorseCharc+0x356>

		case ' ':                       /* inter-word space */
		{ morse.pattern = 0xfe;         /* 1000 0000; */
    bd0a:	8e ef       	ldi	r24, 0xFE	; 254
    bd0c:	89 83       	std	Y+1, r24	; 0x01
		  morse.lengthInSymbols = 7;
    bd0e:	87 e0       	ldi	r24, 0x07	; 7
    bd10:	8a 83       	std	Y+2, r24	; 0x02
		  morse.lengthInElements = 7;   /* 4 + 3 (character space) = 7 */
    bd12:	87 e0       	ldi	r24, 0x07	; 7
    bd14:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bd16:	0b c0       	rjmp	.+22     	; 0xbd2e <_Z12getMorseCharc+0x356>

		case '<':                       /* long keydown */
		{
			morse.pattern = 0x1f;       /* 0001 1111; */
    bd18:	8f e1       	ldi	r24, 0x1F	; 31
    bd1a:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    bd1c:	85 e0       	ldi	r24, 0x05	; 5
    bd1e:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 19;
    bd20:	83 e1       	ldi	r24, 0x13	; 19
    bd22:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bd24:	04 c0       	rjmp	.+8      	; 0xbd2e <_Z12getMorseCharc+0x356>

		default:
		{
			morse.pattern = 0x0000; /* 0000 0000; */
    bd26:	19 82       	std	Y+1, r1	; 0x01
			morse.lengthInSymbols = 0;
    bd28:	1a 82       	std	Y+2, r1	; 0x02
			morse.lengthInElements = 0;
    bd2a:	1b 82       	std	Y+3, r1	; 0x03
		}
		break;
    bd2c:	00 00       	nop
	}

	return( morse);
    bd2e:	89 81       	ldd	r24, Y+1	; 0x01
    bd30:	9a 81       	ldd	r25, Y+2	; 0x02
    bd32:	ab 81       	ldd	r26, Y+3	; 0x03
}
    bd34:	bc 01       	movw	r22, r24
    bd36:	8a 2f       	mov	r24, r26
    bd38:	24 96       	adiw	r28, 0x04	; 4
    bd3a:	cd bf       	out	0x3d, r28	; 61
    bd3c:	de bf       	out	0x3e, r29	; 62
    bd3e:	df 91       	pop	r29
    bd40:	cf 91       	pop	r28
    bd42:	08 95       	ret

0000bd44 <protected_write_io>:
	PUBLIC_FUNCTION(protected_write_io)

#if defined(__GNUC__)
  
#ifdef RAMPZ
	out     _SFR_IO_ADDR(RAMPZ), r1         // Clear bits 23:16 of Z
    bd44:	1b be       	out	0x3b, r1	; 59
#endif
	movw    r30, r24                // Load addr into Z
    bd46:	fc 01       	movw	r30, r24
	out     CCP, r22                // Start CCP handshake
    bd48:	64 bf       	out	0x34, r22	; 52
	st      Z, r20                  // Write value to I/O register
    bd4a:	40 83       	st	Z, r20
	ret                             // Return to caller
    bd4c:	08 95       	ret

0000bd4e <PORTC_set_pin_pull_mode>:

	for(bufferIndex=0; bufferIndex<SERIALBUS_NUMBER_OF_TX_MSG_BUFFERS; bufferIndex++)
	{
		tx_buffer[bufferIndex][0] = '\0';
	}
}
    bd4e:	cf 93       	push	r28
    bd50:	df 93       	push	r29
    bd52:	00 d0       	rcall	.+0      	; 0xbd54 <PORTC_set_pin_pull_mode+0x6>
    bd54:	00 d0       	rcall	.+0      	; 0xbd56 <PORTC_set_pin_pull_mode+0x8>
    bd56:	cd b7       	in	r28, 0x3d	; 61
    bd58:	de b7       	in	r29, 0x3e	; 62
    bd5a:	8b 83       	std	Y+3, r24	; 0x03
    bd5c:	6c 83       	std	Y+4, r22	; 0x04
    bd5e:	8b 81       	ldd	r24, Y+3	; 0x03
    bd60:	88 2f       	mov	r24, r24
    bd62:	90 e0       	ldi	r25, 0x00	; 0
    bd64:	80 5b       	subi	r24, 0xB0	; 176
    bd66:	9b 4f       	sbci	r25, 0xFB	; 251
    bd68:	89 83       	std	Y+1, r24	; 0x01
    bd6a:	9a 83       	std	Y+2, r25	; 0x02
    bd6c:	8c 81       	ldd	r24, Y+4	; 0x04
    bd6e:	81 30       	cpi	r24, 0x01	; 1
    bd70:	59 f4       	brne	.+22     	; 0xbd88 <PORTC_set_pin_pull_mode+0x3a>
    bd72:	89 81       	ldd	r24, Y+1	; 0x01
    bd74:	9a 81       	ldd	r25, Y+2	; 0x02
    bd76:	fc 01       	movw	r30, r24
    bd78:	80 81       	ld	r24, Z
    bd7a:	28 2f       	mov	r18, r24
    bd7c:	28 60       	ori	r18, 0x08	; 8
    bd7e:	89 81       	ldd	r24, Y+1	; 0x01
    bd80:	9a 81       	ldd	r25, Y+2	; 0x02
    bd82:	fc 01       	movw	r30, r24
    bd84:	20 83       	st	Z, r18
    bd86:	0d c0       	rjmp	.+26     	; 0xbda2 <PORTC_set_pin_pull_mode+0x54>
    bd88:	8c 81       	ldd	r24, Y+4	; 0x04
    bd8a:	88 23       	and	r24, r24
    bd8c:	51 f4       	brne	.+20     	; 0xbda2 <PORTC_set_pin_pull_mode+0x54>
    bd8e:	89 81       	ldd	r24, Y+1	; 0x01
    bd90:	9a 81       	ldd	r25, Y+2	; 0x02
    bd92:	fc 01       	movw	r30, r24
    bd94:	80 81       	ld	r24, Z
    bd96:	28 2f       	mov	r18, r24
    bd98:	27 7f       	andi	r18, 0xF7	; 247
    bd9a:	89 81       	ldd	r24, Y+1	; 0x01
    bd9c:	9a 81       	ldd	r25, Y+2	; 0x02
    bd9e:	fc 01       	movw	r30, r24
    bda0:	20 83       	st	Z, r18
    bda2:	00 00       	nop
    bda4:	24 96       	adiw	r28, 0x04	; 4
    bda6:	cd bf       	out	0x3d, r28	; 61
    bda8:	de bf       	out	0x3e, r29	; 62
    bdaa:	df 91       	pop	r29
    bdac:	cf 91       	pop	r28
    bdae:	08 95       	ret

0000bdb0 <PORTC_set_pin_dir>:
    bdb0:	cf 93       	push	r28
    bdb2:	df 93       	push	r29
    bdb4:	00 d0       	rcall	.+0      	; 0xbdb6 <PORTC_set_pin_dir+0x6>
    bdb6:	cd b7       	in	r28, 0x3d	; 61
    bdb8:	de b7       	in	r29, 0x3e	; 62
    bdba:	89 83       	std	Y+1, r24	; 0x01
    bdbc:	6a 83       	std	Y+2, r22	; 0x02
    bdbe:	8a 81       	ldd	r24, Y+2	; 0x02
    bdc0:	88 2f       	mov	r24, r24
    bdc2:	90 e0       	ldi	r25, 0x00	; 0
    bdc4:	81 30       	cpi	r24, 0x01	; 1
    bdc6:	91 05       	cpc	r25, r1
    bdc8:	e1 f0       	breq	.+56     	; 0xbe02 <PORTC_set_pin_dir+0x52>
    bdca:	82 30       	cpi	r24, 0x02	; 2
    bdcc:	91 05       	cpc	r25, r1
    bdce:	71 f1       	breq	.+92     	; 0xbe2c <PORTC_set_pin_dir+0x7c>
    bdd0:	89 2b       	or	r24, r25
    bdd2:	09 f0       	breq	.+2      	; 0xbdd6 <PORTC_set_pin_dir+0x26>
    bdd4:	3b c0       	rjmp	.+118    	; 0xbe4c <PORTC_set_pin_dir+0x9c>
    bdd6:	88 e0       	ldi	r24, 0x08	; 8
    bdd8:	90 e0       	ldi	r25, 0x00	; 0
    bdda:	28 e0       	ldi	r18, 0x08	; 8
    bddc:	30 e0       	ldi	r19, 0x00	; 0
    bdde:	f9 01       	movw	r30, r18
    bde0:	20 81       	ld	r18, Z
    bde2:	62 2f       	mov	r22, r18
    bde4:	29 81       	ldd	r18, Y+1	; 0x01
    bde6:	42 2f       	mov	r20, r18
    bde8:	50 e0       	ldi	r21, 0x00	; 0
    bdea:	21 e0       	ldi	r18, 0x01	; 1
    bdec:	30 e0       	ldi	r19, 0x00	; 0
    bdee:	02 c0       	rjmp	.+4      	; 0xbdf4 <PORTC_set_pin_dir+0x44>
    bdf0:	22 0f       	add	r18, r18
    bdf2:	33 1f       	adc	r19, r19
    bdf4:	4a 95       	dec	r20
    bdf6:	e2 f7       	brpl	.-8      	; 0xbdf0 <PORTC_set_pin_dir+0x40>
    bdf8:	20 95       	com	r18
    bdfa:	26 23       	and	r18, r22
    bdfc:	fc 01       	movw	r30, r24
    bdfe:	20 83       	st	Z, r18
    be00:	25 c0       	rjmp	.+74     	; 0xbe4c <PORTC_set_pin_dir+0x9c>
    be02:	88 e0       	ldi	r24, 0x08	; 8
    be04:	90 e0       	ldi	r25, 0x00	; 0
    be06:	28 e0       	ldi	r18, 0x08	; 8
    be08:	30 e0       	ldi	r19, 0x00	; 0
    be0a:	f9 01       	movw	r30, r18
    be0c:	20 81       	ld	r18, Z
    be0e:	62 2f       	mov	r22, r18
    be10:	29 81       	ldd	r18, Y+1	; 0x01
    be12:	42 2f       	mov	r20, r18
    be14:	50 e0       	ldi	r21, 0x00	; 0
    be16:	21 e0       	ldi	r18, 0x01	; 1
    be18:	30 e0       	ldi	r19, 0x00	; 0
    be1a:	02 c0       	rjmp	.+4      	; 0xbe20 <PORTC_set_pin_dir+0x70>
    be1c:	22 0f       	add	r18, r18
    be1e:	33 1f       	adc	r19, r19
    be20:	4a 95       	dec	r20
    be22:	e2 f7       	brpl	.-8      	; 0xbe1c <PORTC_set_pin_dir+0x6c>
    be24:	26 2b       	or	r18, r22
    be26:	fc 01       	movw	r30, r24
    be28:	20 83       	st	Z, r18
    be2a:	10 c0       	rjmp	.+32     	; 0xbe4c <PORTC_set_pin_dir+0x9c>
    be2c:	89 81       	ldd	r24, Y+1	; 0x01
    be2e:	88 2f       	mov	r24, r24
    be30:	90 e0       	ldi	r25, 0x00	; 0
    be32:	80 5b       	subi	r24, 0xB0	; 176
    be34:	9b 4f       	sbci	r25, 0xFB	; 251
    be36:	29 81       	ldd	r18, Y+1	; 0x01
    be38:	22 2f       	mov	r18, r18
    be3a:	30 e0       	ldi	r19, 0x00	; 0
    be3c:	20 5b       	subi	r18, 0xB0	; 176
    be3e:	3b 4f       	sbci	r19, 0xFB	; 251
    be40:	f9 01       	movw	r30, r18
    be42:	20 81       	ld	r18, Z
    be44:	28 60       	ori	r18, 0x08	; 8
    be46:	fc 01       	movw	r30, r24
    be48:	20 83       	st	Z, r18
    be4a:	00 00       	nop
    be4c:	00 00       	nop
    be4e:	0f 90       	pop	r0
    be50:	0f 90       	pop	r0
    be52:	df 91       	pop	r29
    be54:	cf 91       	pop	r28
    be56:	08 95       	ret

0000be58 <PORTC_set_pin_level>:
    be58:	cf 93       	push	r28
    be5a:	df 93       	push	r29
    be5c:	00 d0       	rcall	.+0      	; 0xbe5e <PORTC_set_pin_level+0x6>
    be5e:	cd b7       	in	r28, 0x3d	; 61
    be60:	de b7       	in	r29, 0x3e	; 62
    be62:	89 83       	std	Y+1, r24	; 0x01
    be64:	6a 83       	std	Y+2, r22	; 0x02
    be66:	8a 81       	ldd	r24, Y+2	; 0x02
    be68:	88 23       	and	r24, r24
    be6a:	a9 f0       	breq	.+42     	; 0xbe96 <PORTC_set_pin_level+0x3e>
    be6c:	88 e0       	ldi	r24, 0x08	; 8
    be6e:	90 e0       	ldi	r25, 0x00	; 0
    be70:	28 e0       	ldi	r18, 0x08	; 8
    be72:	30 e0       	ldi	r19, 0x00	; 0
    be74:	f9 01       	movw	r30, r18
    be76:	21 81       	ldd	r18, Z+1	; 0x01
    be78:	62 2f       	mov	r22, r18
    be7a:	29 81       	ldd	r18, Y+1	; 0x01
    be7c:	42 2f       	mov	r20, r18
    be7e:	50 e0       	ldi	r21, 0x00	; 0
    be80:	21 e0       	ldi	r18, 0x01	; 1
    be82:	30 e0       	ldi	r19, 0x00	; 0
    be84:	02 c0       	rjmp	.+4      	; 0xbe8a <PORTC_set_pin_level+0x32>
    be86:	22 0f       	add	r18, r18
    be88:	33 1f       	adc	r19, r19
    be8a:	4a 95       	dec	r20
    be8c:	e2 f7       	brpl	.-8      	; 0xbe86 <PORTC_set_pin_level+0x2e>
    be8e:	26 2b       	or	r18, r22
    be90:	fc 01       	movw	r30, r24
    be92:	21 83       	std	Z+1, r18	; 0x01
    be94:	15 c0       	rjmp	.+42     	; 0xbec0 <PORTC_set_pin_level+0x68>
    be96:	88 e0       	ldi	r24, 0x08	; 8
    be98:	90 e0       	ldi	r25, 0x00	; 0
    be9a:	28 e0       	ldi	r18, 0x08	; 8
    be9c:	30 e0       	ldi	r19, 0x00	; 0
    be9e:	f9 01       	movw	r30, r18
    bea0:	21 81       	ldd	r18, Z+1	; 0x01
    bea2:	62 2f       	mov	r22, r18
    bea4:	29 81       	ldd	r18, Y+1	; 0x01
    bea6:	42 2f       	mov	r20, r18
    bea8:	50 e0       	ldi	r21, 0x00	; 0
    beaa:	21 e0       	ldi	r18, 0x01	; 1
    beac:	30 e0       	ldi	r19, 0x00	; 0
    beae:	02 c0       	rjmp	.+4      	; 0xbeb4 <PORTC_set_pin_level+0x5c>
    beb0:	22 0f       	add	r18, r18
    beb2:	33 1f       	adc	r19, r19
    beb4:	4a 95       	dec	r20
    beb6:	e2 f7       	brpl	.-8      	; 0xbeb0 <PORTC_set_pin_level+0x58>
    beb8:	20 95       	com	r18
    beba:	26 23       	and	r18, r22
    bebc:	fc 01       	movw	r30, r24
    bebe:	21 83       	std	Z+1, r18	; 0x01
    bec0:	00 00       	nop
    bec2:	0f 90       	pop	r0
    bec4:	0f 90       	pop	r0
    bec6:	df 91       	pop	r29
    bec8:	cf 91       	pop	r28
    beca:	08 95       	ret

0000becc <PORTE_set_pin_pull_mode>:
    becc:	cf 93       	push	r28
    bece:	df 93       	push	r29
    bed0:	00 d0       	rcall	.+0      	; 0xbed2 <PORTE_set_pin_pull_mode+0x6>
    bed2:	00 d0       	rcall	.+0      	; 0xbed4 <PORTE_set_pin_pull_mode+0x8>
    bed4:	cd b7       	in	r28, 0x3d	; 61
    bed6:	de b7       	in	r29, 0x3e	; 62
    bed8:	8b 83       	std	Y+3, r24	; 0x03
    beda:	6c 83       	std	Y+4, r22	; 0x04
    bedc:	8b 81       	ldd	r24, Y+3	; 0x03
    bede:	88 2f       	mov	r24, r24
    bee0:	90 e0       	ldi	r25, 0x00	; 0
    bee2:	80 57       	subi	r24, 0x70	; 112
    bee4:	9b 4f       	sbci	r25, 0xFB	; 251
    bee6:	89 83       	std	Y+1, r24	; 0x01
    bee8:	9a 83       	std	Y+2, r25	; 0x02
    beea:	8c 81       	ldd	r24, Y+4	; 0x04
    beec:	81 30       	cpi	r24, 0x01	; 1
    beee:	59 f4       	brne	.+22     	; 0xbf06 <PORTE_set_pin_pull_mode+0x3a>
    bef0:	89 81       	ldd	r24, Y+1	; 0x01
    bef2:	9a 81       	ldd	r25, Y+2	; 0x02
    bef4:	fc 01       	movw	r30, r24
    bef6:	80 81       	ld	r24, Z
    bef8:	28 2f       	mov	r18, r24
    befa:	28 60       	ori	r18, 0x08	; 8
    befc:	89 81       	ldd	r24, Y+1	; 0x01
    befe:	9a 81       	ldd	r25, Y+2	; 0x02
    bf00:	fc 01       	movw	r30, r24
    bf02:	20 83       	st	Z, r18
    bf04:	0d c0       	rjmp	.+26     	; 0xbf20 <PORTE_set_pin_pull_mode+0x54>
    bf06:	8c 81       	ldd	r24, Y+4	; 0x04
    bf08:	88 23       	and	r24, r24
    bf0a:	51 f4       	brne	.+20     	; 0xbf20 <PORTE_set_pin_pull_mode+0x54>
    bf0c:	89 81       	ldd	r24, Y+1	; 0x01
    bf0e:	9a 81       	ldd	r25, Y+2	; 0x02
    bf10:	fc 01       	movw	r30, r24
    bf12:	80 81       	ld	r24, Z
    bf14:	28 2f       	mov	r18, r24
    bf16:	27 7f       	andi	r18, 0xF7	; 247
    bf18:	89 81       	ldd	r24, Y+1	; 0x01
    bf1a:	9a 81       	ldd	r25, Y+2	; 0x02
    bf1c:	fc 01       	movw	r30, r24
    bf1e:	20 83       	st	Z, r18
    bf20:	00 00       	nop
    bf22:	24 96       	adiw	r28, 0x04	; 4
    bf24:	cd bf       	out	0x3d, r28	; 61
    bf26:	de bf       	out	0x3e, r29	; 62
    bf28:	df 91       	pop	r29
    bf2a:	cf 91       	pop	r28
    bf2c:	08 95       	ret

0000bf2e <PORTE_set_pin_dir>:
    bf2e:	cf 93       	push	r28
    bf30:	df 93       	push	r29
    bf32:	00 d0       	rcall	.+0      	; 0xbf34 <PORTE_set_pin_dir+0x6>
    bf34:	cd b7       	in	r28, 0x3d	; 61
    bf36:	de b7       	in	r29, 0x3e	; 62
    bf38:	89 83       	std	Y+1, r24	; 0x01
    bf3a:	6a 83       	std	Y+2, r22	; 0x02
    bf3c:	8a 81       	ldd	r24, Y+2	; 0x02
    bf3e:	88 2f       	mov	r24, r24
    bf40:	90 e0       	ldi	r25, 0x00	; 0
    bf42:	81 30       	cpi	r24, 0x01	; 1
    bf44:	91 05       	cpc	r25, r1
    bf46:	e1 f0       	breq	.+56     	; 0xbf80 <PORTE_set_pin_dir+0x52>
    bf48:	82 30       	cpi	r24, 0x02	; 2
    bf4a:	91 05       	cpc	r25, r1
    bf4c:	71 f1       	breq	.+92     	; 0xbfaa <PORTE_set_pin_dir+0x7c>
    bf4e:	89 2b       	or	r24, r25
    bf50:	09 f0       	breq	.+2      	; 0xbf54 <PORTE_set_pin_dir+0x26>
    bf52:	3b c0       	rjmp	.+118    	; 0xbfca <PORTE_set_pin_dir+0x9c>
    bf54:	80 e1       	ldi	r24, 0x10	; 16
    bf56:	90 e0       	ldi	r25, 0x00	; 0
    bf58:	20 e1       	ldi	r18, 0x10	; 16
    bf5a:	30 e0       	ldi	r19, 0x00	; 0
    bf5c:	f9 01       	movw	r30, r18
    bf5e:	20 81       	ld	r18, Z
    bf60:	62 2f       	mov	r22, r18
    bf62:	29 81       	ldd	r18, Y+1	; 0x01
    bf64:	42 2f       	mov	r20, r18
    bf66:	50 e0       	ldi	r21, 0x00	; 0
    bf68:	21 e0       	ldi	r18, 0x01	; 1
    bf6a:	30 e0       	ldi	r19, 0x00	; 0
    bf6c:	02 c0       	rjmp	.+4      	; 0xbf72 <PORTE_set_pin_dir+0x44>
    bf6e:	22 0f       	add	r18, r18
    bf70:	33 1f       	adc	r19, r19
    bf72:	4a 95       	dec	r20
    bf74:	e2 f7       	brpl	.-8      	; 0xbf6e <PORTE_set_pin_dir+0x40>
    bf76:	20 95       	com	r18
    bf78:	26 23       	and	r18, r22
    bf7a:	fc 01       	movw	r30, r24
    bf7c:	20 83       	st	Z, r18
    bf7e:	25 c0       	rjmp	.+74     	; 0xbfca <PORTE_set_pin_dir+0x9c>
    bf80:	80 e1       	ldi	r24, 0x10	; 16
    bf82:	90 e0       	ldi	r25, 0x00	; 0
    bf84:	20 e1       	ldi	r18, 0x10	; 16
    bf86:	30 e0       	ldi	r19, 0x00	; 0
    bf88:	f9 01       	movw	r30, r18
    bf8a:	20 81       	ld	r18, Z
    bf8c:	62 2f       	mov	r22, r18
    bf8e:	29 81       	ldd	r18, Y+1	; 0x01
    bf90:	42 2f       	mov	r20, r18
    bf92:	50 e0       	ldi	r21, 0x00	; 0
    bf94:	21 e0       	ldi	r18, 0x01	; 1
    bf96:	30 e0       	ldi	r19, 0x00	; 0
    bf98:	02 c0       	rjmp	.+4      	; 0xbf9e <PORTE_set_pin_dir+0x70>
    bf9a:	22 0f       	add	r18, r18
    bf9c:	33 1f       	adc	r19, r19
    bf9e:	4a 95       	dec	r20
    bfa0:	e2 f7       	brpl	.-8      	; 0xbf9a <PORTE_set_pin_dir+0x6c>
    bfa2:	26 2b       	or	r18, r22
    bfa4:	fc 01       	movw	r30, r24
    bfa6:	20 83       	st	Z, r18
    bfa8:	10 c0       	rjmp	.+32     	; 0xbfca <PORTE_set_pin_dir+0x9c>
    bfaa:	89 81       	ldd	r24, Y+1	; 0x01
    bfac:	88 2f       	mov	r24, r24
    bfae:	90 e0       	ldi	r25, 0x00	; 0
    bfb0:	80 57       	subi	r24, 0x70	; 112
    bfb2:	9b 4f       	sbci	r25, 0xFB	; 251
    bfb4:	29 81       	ldd	r18, Y+1	; 0x01
    bfb6:	22 2f       	mov	r18, r18
    bfb8:	30 e0       	ldi	r19, 0x00	; 0
    bfba:	20 57       	subi	r18, 0x70	; 112
    bfbc:	3b 4f       	sbci	r19, 0xFB	; 251
    bfbe:	f9 01       	movw	r30, r18
    bfc0:	20 81       	ld	r18, Z
    bfc2:	28 60       	ori	r18, 0x08	; 8
    bfc4:	fc 01       	movw	r30, r24
    bfc6:	20 83       	st	Z, r18
    bfc8:	00 00       	nop
    bfca:	00 00       	nop
    bfcc:	0f 90       	pop	r0
    bfce:	0f 90       	pop	r0
    bfd0:	df 91       	pop	r29
    bfd2:	cf 91       	pop	r28
    bfd4:	08 95       	ret

0000bfd6 <PORTE_set_pin_level>:
    bfd6:	cf 93       	push	r28
    bfd8:	df 93       	push	r29
    bfda:	00 d0       	rcall	.+0      	; 0xbfdc <PORTE_set_pin_level+0x6>
    bfdc:	cd b7       	in	r28, 0x3d	; 61
    bfde:	de b7       	in	r29, 0x3e	; 62
    bfe0:	89 83       	std	Y+1, r24	; 0x01
    bfe2:	6a 83       	std	Y+2, r22	; 0x02
    bfe4:	8a 81       	ldd	r24, Y+2	; 0x02
    bfe6:	88 23       	and	r24, r24
    bfe8:	a9 f0       	breq	.+42     	; 0xc014 <PORTE_set_pin_level+0x3e>
    bfea:	80 e1       	ldi	r24, 0x10	; 16
    bfec:	90 e0       	ldi	r25, 0x00	; 0
    bfee:	20 e1       	ldi	r18, 0x10	; 16
    bff0:	30 e0       	ldi	r19, 0x00	; 0
    bff2:	f9 01       	movw	r30, r18
    bff4:	21 81       	ldd	r18, Z+1	; 0x01
    bff6:	62 2f       	mov	r22, r18
    bff8:	29 81       	ldd	r18, Y+1	; 0x01
    bffa:	42 2f       	mov	r20, r18
    bffc:	50 e0       	ldi	r21, 0x00	; 0
    bffe:	21 e0       	ldi	r18, 0x01	; 1
    c000:	30 e0       	ldi	r19, 0x00	; 0
    c002:	02 c0       	rjmp	.+4      	; 0xc008 <PORTE_set_pin_level+0x32>
    c004:	22 0f       	add	r18, r18
    c006:	33 1f       	adc	r19, r19
    c008:	4a 95       	dec	r20
    c00a:	e2 f7       	brpl	.-8      	; 0xc004 <PORTE_set_pin_level+0x2e>
    c00c:	26 2b       	or	r18, r22
    c00e:	fc 01       	movw	r30, r24
    c010:	21 83       	std	Z+1, r18	; 0x01
    c012:	15 c0       	rjmp	.+42     	; 0xc03e <PORTE_set_pin_level+0x68>
    c014:	80 e1       	ldi	r24, 0x10	; 16
    c016:	90 e0       	ldi	r25, 0x00	; 0
    c018:	20 e1       	ldi	r18, 0x10	; 16
    c01a:	30 e0       	ldi	r19, 0x00	; 0
    c01c:	f9 01       	movw	r30, r18
    c01e:	21 81       	ldd	r18, Z+1	; 0x01
    c020:	62 2f       	mov	r22, r18
    c022:	29 81       	ldd	r18, Y+1	; 0x01
    c024:	42 2f       	mov	r20, r18
    c026:	50 e0       	ldi	r21, 0x00	; 0
    c028:	21 e0       	ldi	r18, 0x01	; 1
    c02a:	30 e0       	ldi	r19, 0x00	; 0
    c02c:	02 c0       	rjmp	.+4      	; 0xc032 <PORTE_set_pin_level+0x5c>
    c02e:	22 0f       	add	r18, r18
    c030:	33 1f       	adc	r19, r19
    c032:	4a 95       	dec	r20
    c034:	e2 f7       	brpl	.-8      	; 0xc02e <PORTE_set_pin_level+0x58>
    c036:	20 95       	com	r18
    c038:	26 23       	and	r18, r22
    c03a:	fc 01       	movw	r30, r24
    c03c:	21 83       	std	Z+1, r18	; 0x01
    c03e:	00 00       	nop
    c040:	0f 90       	pop	r0
    c042:	0f 90       	pop	r0
    c044:	df 91       	pop	r29
    c046:	cf 91       	pop	r28
    c048:	08 95       	ret

0000c04a <PC0_set_dir>:
    c04a:	cf 93       	push	r28
    c04c:	df 93       	push	r29
    c04e:	1f 92       	push	r1
    c050:	cd b7       	in	r28, 0x3d	; 61
    c052:	de b7       	in	r29, 0x3e	; 62
    c054:	89 83       	std	Y+1, r24	; 0x01
    c056:	69 81       	ldd	r22, Y+1	; 0x01
    c058:	80 e0       	ldi	r24, 0x00	; 0
    c05a:	0e 94 d8 5e 	call	0xbdb0	; 0xbdb0 <PORTC_set_pin_dir>
    c05e:	00 00       	nop
    c060:	0f 90       	pop	r0
    c062:	df 91       	pop	r29
    c064:	cf 91       	pop	r28
    c066:	08 95       	ret

0000c068 <PC0_set_level>:
    c068:	cf 93       	push	r28
    c06a:	df 93       	push	r29
    c06c:	1f 92       	push	r1
    c06e:	cd b7       	in	r28, 0x3d	; 61
    c070:	de b7       	in	r29, 0x3e	; 62
    c072:	89 83       	std	Y+1, r24	; 0x01
    c074:	69 81       	ldd	r22, Y+1	; 0x01
    c076:	80 e0       	ldi	r24, 0x00	; 0
    c078:	0e 94 2c 5f 	call	0xbe58	; 0xbe58 <PORTC_set_pin_level>
    c07c:	00 00       	nop
    c07e:	0f 90       	pop	r0
    c080:	df 91       	pop	r29
    c082:	cf 91       	pop	r28
    c084:	08 95       	ret

0000c086 <PC1_set_pull_mode>:
    c086:	cf 93       	push	r28
    c088:	df 93       	push	r29
    c08a:	1f 92       	push	r1
    c08c:	cd b7       	in	r28, 0x3d	; 61
    c08e:	de b7       	in	r29, 0x3e	; 62
    c090:	89 83       	std	Y+1, r24	; 0x01
    c092:	69 81       	ldd	r22, Y+1	; 0x01
    c094:	81 e0       	ldi	r24, 0x01	; 1
    c096:	0e 94 a7 5e 	call	0xbd4e	; 0xbd4e <PORTC_set_pin_pull_mode>
    c09a:	00 00       	nop
    c09c:	0f 90       	pop	r0
    c09e:	df 91       	pop	r29
    c0a0:	cf 91       	pop	r28
    c0a2:	08 95       	ret

0000c0a4 <PC1_set_dir>:
    c0a4:	cf 93       	push	r28
    c0a6:	df 93       	push	r29
    c0a8:	1f 92       	push	r1
    c0aa:	cd b7       	in	r28, 0x3d	; 61
    c0ac:	de b7       	in	r29, 0x3e	; 62
    c0ae:	89 83       	std	Y+1, r24	; 0x01
    c0b0:	69 81       	ldd	r22, Y+1	; 0x01
    c0b2:	81 e0       	ldi	r24, 0x01	; 1
    c0b4:	0e 94 d8 5e 	call	0xbdb0	; 0xbdb0 <PORTC_set_pin_dir>
    c0b8:	00 00       	nop
    c0ba:	0f 90       	pop	r0
    c0bc:	df 91       	pop	r29
    c0be:	cf 91       	pop	r28
    c0c0:	08 95       	ret

0000c0c2 <PE0_set_dir>:
    c0c2:	cf 93       	push	r28
    c0c4:	df 93       	push	r29
    c0c6:	1f 92       	push	r1
    c0c8:	cd b7       	in	r28, 0x3d	; 61
    c0ca:	de b7       	in	r29, 0x3e	; 62
    c0cc:	89 83       	std	Y+1, r24	; 0x01
    c0ce:	69 81       	ldd	r22, Y+1	; 0x01
    c0d0:	80 e0       	ldi	r24, 0x00	; 0
    c0d2:	0e 94 97 5f 	call	0xbf2e	; 0xbf2e <PORTE_set_pin_dir>
    c0d6:	00 00       	nop
    c0d8:	0f 90       	pop	r0
    c0da:	df 91       	pop	r29
    c0dc:	cf 91       	pop	r28
    c0de:	08 95       	ret

0000c0e0 <PE0_set_level>:
    c0e0:	cf 93       	push	r28
    c0e2:	df 93       	push	r29
    c0e4:	1f 92       	push	r1
    c0e6:	cd b7       	in	r28, 0x3d	; 61
    c0e8:	de b7       	in	r29, 0x3e	; 62
    c0ea:	89 83       	std	Y+1, r24	; 0x01
    c0ec:	69 81       	ldd	r22, Y+1	; 0x01
    c0ee:	80 e0       	ldi	r24, 0x00	; 0
    c0f0:	0e 94 eb 5f 	call	0xbfd6	; 0xbfd6 <PORTE_set_pin_level>
    c0f4:	00 00       	nop
    c0f6:	0f 90       	pop	r0
    c0f8:	df 91       	pop	r29
    c0fa:	cf 91       	pop	r28
    c0fc:	08 95       	ret

0000c0fe <PE1_set_pull_mode>:
    c0fe:	cf 93       	push	r28
    c100:	df 93       	push	r29
    c102:	1f 92       	push	r1
    c104:	cd b7       	in	r28, 0x3d	; 61
    c106:	de b7       	in	r29, 0x3e	; 62
    c108:	89 83       	std	Y+1, r24	; 0x01
    c10a:	69 81       	ldd	r22, Y+1	; 0x01
    c10c:	81 e0       	ldi	r24, 0x01	; 1
    c10e:	0e 94 66 5f 	call	0xbecc	; 0xbecc <PORTE_set_pin_pull_mode>
    c112:	00 00       	nop
    c114:	0f 90       	pop	r0
    c116:	df 91       	pop	r29
    c118:	cf 91       	pop	r28
    c11a:	08 95       	ret

0000c11c <PE1_set_dir>:
    c11c:	cf 93       	push	r28
    c11e:	df 93       	push	r29
    c120:	1f 92       	push	r1
    c122:	cd b7       	in	r28, 0x3d	; 61
    c124:	de b7       	in	r29, 0x3e	; 62
    c126:	89 83       	std	Y+1, r24	; 0x01
    c128:	69 81       	ldd	r22, Y+1	; 0x01
    c12a:	81 e0       	ldi	r24, 0x01	; 1
    c12c:	0e 94 97 5f 	call	0xbf2e	; 0xbf2e <PORTE_set_pin_dir>
    c130:	00 00       	nop
    c132:	0f 90       	pop	r0
    c134:	df 91       	pop	r29
    c136:	cf 91       	pop	r28
    c138:	08 95       	ret

0000c13a <nextFullSBTxBuffer>:
    c13a:	cf 93       	push	r28
    c13c:	df 93       	push	r29
    c13e:	00 d0       	rcall	.+0      	; 0xc140 <nextFullSBTxBuffer+0x6>
    c140:	cd b7       	in	r28, 0x3d	; 61
    c142:	de b7       	in	r29, 0x3e	; 62
    c144:	81 e0       	ldi	r24, 0x01	; 1
    c146:	89 83       	std	Y+1, r24	; 0x01
    c148:	1a 82       	std	Y+2, r1	; 0x02
    c14a:	80 91 a3 4a 	lds	r24, 0x4AA3	; 0x804aa3 <_ZZ18nextFullSBTxBufferE11bufferIndex>
    c14e:	28 2f       	mov	r18, r24
    c150:	30 e0       	ldi	r19, 0x00	; 0
    c152:	49 e2       	ldi	r20, 0x29	; 41
    c154:	42 9f       	mul	r20, r18
    c156:	c0 01       	movw	r24, r0
    c158:	43 9f       	mul	r20, r19
    c15a:	90 0d       	add	r25, r0
    c15c:	11 24       	eor	r1, r1
    c15e:	86 55       	subi	r24, 0x56	; 86
    c160:	96 4b       	sbci	r25, 0xB6	; 182
    c162:	fc 01       	movw	r30, r24
    c164:	90 81       	ld	r25, Z
    c166:	81 e0       	ldi	r24, 0x01	; 1
    c168:	99 23       	and	r25, r25
    c16a:	09 f0       	breq	.+2      	; 0xc16e <nextFullSBTxBuffer+0x34>
    c16c:	80 e0       	ldi	r24, 0x00	; 0
    c16e:	88 23       	and	r24, r24
    c170:	c1 f0       	breq	.+48     	; 0xc1a2 <nextFullSBTxBuffer+0x68>
    c172:	8a 81       	ldd	r24, Y+2	; 0x02
    c174:	8f 5f       	subi	r24, 0xFF	; 255
    c176:	8a 83       	std	Y+2, r24	; 0x02
    c178:	81 e0       	ldi	r24, 0x01	; 1
    c17a:	9a 81       	ldd	r25, Y+2	; 0x02
    c17c:	93 30       	cpi	r25, 0x03	; 3
    c17e:	08 f4       	brcc	.+2      	; 0xc182 <nextFullSBTxBuffer+0x48>
    c180:	80 e0       	ldi	r24, 0x00	; 0
    c182:	88 23       	and	r24, r24
    c184:	11 f0       	breq	.+4      	; 0xc18a <nextFullSBTxBuffer+0x50>
    c186:	19 82       	std	Y+1, r1	; 0x01
    c188:	0c c0       	rjmp	.+24     	; 0xc1a2 <nextFullSBTxBuffer+0x68>
    c18a:	80 91 a3 4a 	lds	r24, 0x4AA3	; 0x804aa3 <_ZZ18nextFullSBTxBufferE11bufferIndex>
    c18e:	8f 5f       	subi	r24, 0xFF	; 255
    c190:	80 93 a3 4a 	sts	0x4AA3, r24	; 0x804aa3 <_ZZ18nextFullSBTxBufferE11bufferIndex>
    c194:	80 91 a3 4a 	lds	r24, 0x4AA3	; 0x804aa3 <_ZZ18nextFullSBTxBufferE11bufferIndex>
    c198:	83 30       	cpi	r24, 0x03	; 3
    c19a:	b8 f2       	brcs	.-82     	; 0xc14a <nextFullSBTxBuffer+0x10>
    c19c:	10 92 a3 4a 	sts	0x4AA3, r1	; 0x804aa3 <_ZZ18nextFullSBTxBufferE11bufferIndex>
    c1a0:	d4 cf       	rjmp	.-88     	; 0xc14a <nextFullSBTxBuffer+0x10>
    c1a2:	89 81       	ldd	r24, Y+1	; 0x01
    c1a4:	88 23       	and	r24, r24
    c1a6:	69 f0       	breq	.+26     	; 0xc1c2 <nextFullSBTxBuffer+0x88>
    c1a8:	80 91 a3 4a 	lds	r24, 0x4AA3	; 0x804aa3 <_ZZ18nextFullSBTxBufferE11bufferIndex>
    c1ac:	28 2f       	mov	r18, r24
    c1ae:	30 e0       	ldi	r19, 0x00	; 0
    c1b0:	49 e2       	ldi	r20, 0x29	; 41
    c1b2:	42 9f       	mul	r20, r18
    c1b4:	c0 01       	movw	r24, r0
    c1b6:	43 9f       	mul	r20, r19
    c1b8:	90 0d       	add	r25, r0
    c1ba:	11 24       	eor	r1, r1
    c1bc:	86 55       	subi	r24, 0x56	; 86
    c1be:	96 4b       	sbci	r25, 0xB6	; 182
    c1c0:	02 c0       	rjmp	.+4      	; 0xc1c6 <nextFullSBTxBuffer+0x8c>
    c1c2:	80 e0       	ldi	r24, 0x00	; 0
    c1c4:	90 e0       	ldi	r25, 0x00	; 0
    c1c6:	0f 90       	pop	r0
    c1c8:	0f 90       	pop	r0
    c1ca:	df 91       	pop	r29
    c1cc:	cf 91       	pop	r28
    c1ce:	08 95       	ret

0000c1d0 <nextEmptySBTxBuffer>:
    c1d0:	cf 93       	push	r28
    c1d2:	df 93       	push	r29
    c1d4:	00 d0       	rcall	.+0      	; 0xc1d6 <nextEmptySBTxBuffer+0x6>
    c1d6:	cd b7       	in	r28, 0x3d	; 61
    c1d8:	de b7       	in	r29, 0x3e	; 62
    c1da:	81 e0       	ldi	r24, 0x01	; 1
    c1dc:	89 83       	std	Y+1, r24	; 0x01
    c1de:	1a 82       	std	Y+2, r1	; 0x02
    c1e0:	80 91 a4 4a 	lds	r24, 0x4AA4	; 0x804aa4 <_ZZ19nextEmptySBTxBufferE11bufferIndex>
    c1e4:	28 2f       	mov	r18, r24
    c1e6:	30 e0       	ldi	r19, 0x00	; 0
    c1e8:	49 e2       	ldi	r20, 0x29	; 41
    c1ea:	42 9f       	mul	r20, r18
    c1ec:	c0 01       	movw	r24, r0
    c1ee:	43 9f       	mul	r20, r19
    c1f0:	90 0d       	add	r25, r0
    c1f2:	11 24       	eor	r1, r1
    c1f4:	86 55       	subi	r24, 0x56	; 86
    c1f6:	96 4b       	sbci	r25, 0xB6	; 182
    c1f8:	fc 01       	movw	r30, r24
    c1fa:	90 81       	ld	r25, Z
    c1fc:	81 e0       	ldi	r24, 0x01	; 1
    c1fe:	99 23       	and	r25, r25
    c200:	09 f4       	brne	.+2      	; 0xc204 <nextEmptySBTxBuffer+0x34>
    c202:	80 e0       	ldi	r24, 0x00	; 0
    c204:	88 23       	and	r24, r24
    c206:	c1 f0       	breq	.+48     	; 0xc238 <nextEmptySBTxBuffer+0x68>
    c208:	8a 81       	ldd	r24, Y+2	; 0x02
    c20a:	8f 5f       	subi	r24, 0xFF	; 255
    c20c:	8a 83       	std	Y+2, r24	; 0x02
    c20e:	81 e0       	ldi	r24, 0x01	; 1
    c210:	9a 81       	ldd	r25, Y+2	; 0x02
    c212:	93 30       	cpi	r25, 0x03	; 3
    c214:	08 f4       	brcc	.+2      	; 0xc218 <nextEmptySBTxBuffer+0x48>
    c216:	80 e0       	ldi	r24, 0x00	; 0
    c218:	88 23       	and	r24, r24
    c21a:	11 f0       	breq	.+4      	; 0xc220 <nextEmptySBTxBuffer+0x50>
    c21c:	19 82       	std	Y+1, r1	; 0x01
    c21e:	0c c0       	rjmp	.+24     	; 0xc238 <nextEmptySBTxBuffer+0x68>
    c220:	80 91 a4 4a 	lds	r24, 0x4AA4	; 0x804aa4 <_ZZ19nextEmptySBTxBufferE11bufferIndex>
    c224:	8f 5f       	subi	r24, 0xFF	; 255
    c226:	80 93 a4 4a 	sts	0x4AA4, r24	; 0x804aa4 <_ZZ19nextEmptySBTxBufferE11bufferIndex>
    c22a:	80 91 a4 4a 	lds	r24, 0x4AA4	; 0x804aa4 <_ZZ19nextEmptySBTxBufferE11bufferIndex>
    c22e:	83 30       	cpi	r24, 0x03	; 3
    c230:	b8 f2       	brcs	.-82     	; 0xc1e0 <nextEmptySBTxBuffer+0x10>
    c232:	10 92 a4 4a 	sts	0x4AA4, r1	; 0x804aa4 <_ZZ19nextEmptySBTxBufferE11bufferIndex>
    c236:	d4 cf       	rjmp	.-88     	; 0xc1e0 <nextEmptySBTxBuffer+0x10>
    c238:	89 81       	ldd	r24, Y+1	; 0x01
    c23a:	88 23       	and	r24, r24
    c23c:	69 f0       	breq	.+26     	; 0xc258 <nextEmptySBTxBuffer+0x88>
    c23e:	80 91 a4 4a 	lds	r24, 0x4AA4	; 0x804aa4 <_ZZ19nextEmptySBTxBufferE11bufferIndex>
    c242:	28 2f       	mov	r18, r24
    c244:	30 e0       	ldi	r19, 0x00	; 0
    c246:	49 e2       	ldi	r20, 0x29	; 41
    c248:	42 9f       	mul	r20, r18
    c24a:	c0 01       	movw	r24, r0
    c24c:	43 9f       	mul	r20, r19
    c24e:	90 0d       	add	r25, r0
    c250:	11 24       	eor	r1, r1
    c252:	86 55       	subi	r24, 0x56	; 86
    c254:	96 4b       	sbci	r25, 0xB6	; 182
    c256:	02 c0       	rjmp	.+4      	; 0xc25c <nextEmptySBTxBuffer+0x8c>
    c258:	80 e0       	ldi	r24, 0x00	; 0
    c25a:	90 e0       	ldi	r25, 0x00	; 0
    c25c:	0f 90       	pop	r0
    c25e:	0f 90       	pop	r0
    c260:	df 91       	pop	r29
    c262:	cf 91       	pop	r28
    c264:	08 95       	ret

0000c266 <nextEmptySBRxBuffer>:
    c266:	cf 93       	push	r28
    c268:	df 93       	push	r29
    c26a:	00 d0       	rcall	.+0      	; 0xc26c <nextEmptySBRxBuffer+0x6>
    c26c:	cd b7       	in	r28, 0x3d	; 61
    c26e:	de b7       	in	r29, 0x3e	; 62
    c270:	81 e0       	ldi	r24, 0x01	; 1
    c272:	89 83       	std	Y+1, r24	; 0x01
    c274:	1a 82       	std	Y+2, r1	; 0x02
    c276:	80 91 a5 4a 	lds	r24, 0x4AA5	; 0x804aa5 <_ZZ19nextEmptySBRxBufferE11bufferIndex>
    c27a:	28 2f       	mov	r18, r24
    c27c:	30 e0       	ldi	r19, 0x00	; 0
    c27e:	4f e3       	ldi	r20, 0x3F	; 63
    c280:	42 9f       	mul	r20, r18
    c282:	c0 01       	movw	r24, r0
    c284:	43 9f       	mul	r20, r19
    c286:	90 0d       	add	r25, r0
    c288:	11 24       	eor	r1, r1
    c28a:	8a 5d       	subi	r24, 0xDA	; 218
    c28c:	95 4b       	sbci	r25, 0xB5	; 181
    c28e:	fc 01       	movw	r30, r24
    c290:	80 81       	ld	r24, Z
    c292:	91 81       	ldd	r25, Z+1	; 0x01
    c294:	21 e0       	ldi	r18, 0x01	; 1
    c296:	89 2b       	or	r24, r25
    c298:	09 f4       	brne	.+2      	; 0xc29c <nextEmptySBRxBuffer+0x36>
    c29a:	20 e0       	ldi	r18, 0x00	; 0
    c29c:	22 23       	and	r18, r18
    c29e:	c1 f0       	breq	.+48     	; 0xc2d0 <nextEmptySBRxBuffer+0x6a>
    c2a0:	8a 81       	ldd	r24, Y+2	; 0x02
    c2a2:	8f 5f       	subi	r24, 0xFF	; 255
    c2a4:	8a 83       	std	Y+2, r24	; 0x02
    c2a6:	81 e0       	ldi	r24, 0x01	; 1
    c2a8:	9a 81       	ldd	r25, Y+2	; 0x02
    c2aa:	92 30       	cpi	r25, 0x02	; 2
    c2ac:	08 f4       	brcc	.+2      	; 0xc2b0 <nextEmptySBRxBuffer+0x4a>
    c2ae:	80 e0       	ldi	r24, 0x00	; 0
    c2b0:	88 23       	and	r24, r24
    c2b2:	11 f0       	breq	.+4      	; 0xc2b8 <nextEmptySBRxBuffer+0x52>
    c2b4:	19 82       	std	Y+1, r1	; 0x01
    c2b6:	0c c0       	rjmp	.+24     	; 0xc2d0 <nextEmptySBRxBuffer+0x6a>
    c2b8:	80 91 a5 4a 	lds	r24, 0x4AA5	; 0x804aa5 <_ZZ19nextEmptySBRxBufferE11bufferIndex>
    c2bc:	8f 5f       	subi	r24, 0xFF	; 255
    c2be:	80 93 a5 4a 	sts	0x4AA5, r24	; 0x804aa5 <_ZZ19nextEmptySBRxBufferE11bufferIndex>
    c2c2:	80 91 a5 4a 	lds	r24, 0x4AA5	; 0x804aa5 <_ZZ19nextEmptySBRxBufferE11bufferIndex>
    c2c6:	82 30       	cpi	r24, 0x02	; 2
    c2c8:	b0 f2       	brcs	.-84     	; 0xc276 <nextEmptySBRxBuffer+0x10>
    c2ca:	10 92 a5 4a 	sts	0x4AA5, r1	; 0x804aa5 <_ZZ19nextEmptySBRxBufferE11bufferIndex>
    c2ce:	d3 cf       	rjmp	.-90     	; 0xc276 <nextEmptySBRxBuffer+0x10>
    c2d0:	89 81       	ldd	r24, Y+1	; 0x01
    c2d2:	88 23       	and	r24, r24
    c2d4:	69 f0       	breq	.+26     	; 0xc2f0 <nextEmptySBRxBuffer+0x8a>
    c2d6:	80 91 a5 4a 	lds	r24, 0x4AA5	; 0x804aa5 <_ZZ19nextEmptySBRxBufferE11bufferIndex>
    c2da:	28 2f       	mov	r18, r24
    c2dc:	30 e0       	ldi	r19, 0x00	; 0
    c2de:	4f e3       	ldi	r20, 0x3F	; 63
    c2e0:	42 9f       	mul	r20, r18
    c2e2:	c0 01       	movw	r24, r0
    c2e4:	43 9f       	mul	r20, r19
    c2e6:	90 0d       	add	r25, r0
    c2e8:	11 24       	eor	r1, r1
    c2ea:	8b 5d       	subi	r24, 0xDB	; 219
    c2ec:	95 4b       	sbci	r25, 0xB5	; 181
    c2ee:	02 c0       	rjmp	.+4      	; 0xc2f4 <nextEmptySBRxBuffer+0x8e>
    c2f0:	80 e0       	ldi	r24, 0x00	; 0
    c2f2:	90 e0       	ldi	r25, 0x00	; 0
    c2f4:	0f 90       	pop	r0
    c2f6:	0f 90       	pop	r0
    c2f8:	df 91       	pop	r29
    c2fa:	cf 91       	pop	r28
    c2fc:	08 95       	ret

0000c2fe <nextFullSBRxBuffer>:
    c2fe:	cf 93       	push	r28
    c300:	df 93       	push	r29
    c302:	00 d0       	rcall	.+0      	; 0xc304 <nextFullSBRxBuffer+0x6>
    c304:	cd b7       	in	r28, 0x3d	; 61
    c306:	de b7       	in	r29, 0x3e	; 62
    c308:	81 e0       	ldi	r24, 0x01	; 1
    c30a:	89 83       	std	Y+1, r24	; 0x01
    c30c:	1a 82       	std	Y+2, r1	; 0x02
    c30e:	80 91 a6 4a 	lds	r24, 0x4AA6	; 0x804aa6 <_ZZ18nextFullSBRxBufferE11bufferIndex>
    c312:	28 2f       	mov	r18, r24
    c314:	30 e0       	ldi	r19, 0x00	; 0
    c316:	4f e3       	ldi	r20, 0x3F	; 63
    c318:	42 9f       	mul	r20, r18
    c31a:	c0 01       	movw	r24, r0
    c31c:	43 9f       	mul	r20, r19
    c31e:	90 0d       	add	r25, r0
    c320:	11 24       	eor	r1, r1
    c322:	8a 5d       	subi	r24, 0xDA	; 218
    c324:	95 4b       	sbci	r25, 0xB5	; 181
    c326:	fc 01       	movw	r30, r24
    c328:	80 81       	ld	r24, Z
    c32a:	91 81       	ldd	r25, Z+1	; 0x01
    c32c:	21 e0       	ldi	r18, 0x01	; 1
    c32e:	89 2b       	or	r24, r25
    c330:	09 f0       	breq	.+2      	; 0xc334 <nextFullSBRxBuffer+0x36>
    c332:	20 e0       	ldi	r18, 0x00	; 0
    c334:	22 23       	and	r18, r18
    c336:	c1 f0       	breq	.+48     	; 0xc368 <nextFullSBRxBuffer+0x6a>
    c338:	8a 81       	ldd	r24, Y+2	; 0x02
    c33a:	8f 5f       	subi	r24, 0xFF	; 255
    c33c:	8a 83       	std	Y+2, r24	; 0x02
    c33e:	81 e0       	ldi	r24, 0x01	; 1
    c340:	9a 81       	ldd	r25, Y+2	; 0x02
    c342:	92 30       	cpi	r25, 0x02	; 2
    c344:	08 f4       	brcc	.+2      	; 0xc348 <nextFullSBRxBuffer+0x4a>
    c346:	80 e0       	ldi	r24, 0x00	; 0
    c348:	88 23       	and	r24, r24
    c34a:	11 f0       	breq	.+4      	; 0xc350 <nextFullSBRxBuffer+0x52>
    c34c:	19 82       	std	Y+1, r1	; 0x01
    c34e:	0c c0       	rjmp	.+24     	; 0xc368 <nextFullSBRxBuffer+0x6a>
    c350:	80 91 a6 4a 	lds	r24, 0x4AA6	; 0x804aa6 <_ZZ18nextFullSBRxBufferE11bufferIndex>
    c354:	8f 5f       	subi	r24, 0xFF	; 255
    c356:	80 93 a6 4a 	sts	0x4AA6, r24	; 0x804aa6 <_ZZ18nextFullSBRxBufferE11bufferIndex>
    c35a:	80 91 a6 4a 	lds	r24, 0x4AA6	; 0x804aa6 <_ZZ18nextFullSBRxBufferE11bufferIndex>
    c35e:	82 30       	cpi	r24, 0x02	; 2
    c360:	b0 f2       	brcs	.-84     	; 0xc30e <nextFullSBRxBuffer+0x10>
    c362:	10 92 a6 4a 	sts	0x4AA6, r1	; 0x804aa6 <_ZZ18nextFullSBRxBufferE11bufferIndex>
    c366:	d3 cf       	rjmp	.-90     	; 0xc30e <nextFullSBRxBuffer+0x10>
    c368:	89 81       	ldd	r24, Y+1	; 0x01
    c36a:	88 23       	and	r24, r24
    c36c:	69 f0       	breq	.+26     	; 0xc388 <nextFullSBRxBuffer+0x8a>
    c36e:	80 91 a6 4a 	lds	r24, 0x4AA6	; 0x804aa6 <_ZZ18nextFullSBRxBufferE11bufferIndex>
    c372:	28 2f       	mov	r18, r24
    c374:	30 e0       	ldi	r19, 0x00	; 0
    c376:	4f e3       	ldi	r20, 0x3F	; 63
    c378:	42 9f       	mul	r20, r18
    c37a:	c0 01       	movw	r24, r0
    c37c:	43 9f       	mul	r20, r19
    c37e:	90 0d       	add	r25, r0
    c380:	11 24       	eor	r1, r1
    c382:	8b 5d       	subi	r24, 0xDB	; 219
    c384:	95 4b       	sbci	r25, 0xB5	; 181
    c386:	02 c0       	rjmp	.+4      	; 0xc38c <nextFullSBRxBuffer+0x8e>
    c388:	80 e0       	ldi	r24, 0x00	; 0
    c38a:	90 e0       	ldi	r25, 0x00	; 0
    c38c:	0f 90       	pop	r0
    c38e:	0f 90       	pop	r0
    c390:	df 91       	pop	r29
    c392:	cf 91       	pop	r28
    c394:	08 95       	ret

0000c396 <serialbusTxInProgress>:
    c396:	cf 93       	push	r28
    c398:	df 93       	push	r29
    c39a:	cd b7       	in	r28, 0x3d	; 61
    c39c:	de b7       	in	r29, 0x3e	; 62
    c39e:	80 91 a9 49 	lds	r24, 0x49A9	; 0x8049a9 <_ZL19serialbus_tx_active>
    c3a2:	df 91       	pop	r29
    c3a4:	cf 91       	pop	r28
    c3a6:	08 95       	ret

0000c3a8 <_Z18serialbus_start_txv>:
    c3a8:	cf 93       	push	r28
    c3aa:	df 93       	push	r29
    c3ac:	1f 92       	push	r1
    c3ae:	cd b7       	in	r28, 0x3d	; 61
    c3b0:	de b7       	in	r29, 0x3e	; 62
    c3b2:	90 91 a9 49 	lds	r25, 0x49A9	; 0x8049a9 <_ZL19serialbus_tx_active>
    c3b6:	81 e0       	ldi	r24, 0x01	; 1
    c3b8:	89 27       	eor	r24, r25
    c3ba:	89 83       	std	Y+1, r24	; 0x01
    c3bc:	89 81       	ldd	r24, Y+1	; 0x01
    c3be:	88 23       	and	r24, r24
    c3c0:	61 f0       	breq	.+24     	; 0xc3da <_Z18serialbus_start_txv+0x32>
    c3c2:	81 e0       	ldi	r24, 0x01	; 1
    c3c4:	80 93 a9 49 	sts	0x49A9, r24	; 0x8049a9 <_ZL19serialbus_tx_active>
    c3c8:	80 91 30 40 	lds	r24, 0x4030	; 0x804030 <g_serialbus_usart_number>
    c3cc:	88 23       	and	r24, r24
    c3ce:	19 f4       	brne	.+6      	; 0xc3d6 <_Z18serialbus_start_txv+0x2e>
    c3d0:	0e 94 ad 73 	call	0xe75a	; 0xe75a <USART4_enable_tx>
    c3d4:	02 c0       	rjmp	.+4      	; 0xc3da <_Z18serialbus_start_txv+0x32>
    c3d6:	0e 94 27 73 	call	0xe64e	; 0xe64e <USART1_enable_tx>
    c3da:	89 81       	ldd	r24, Y+1	; 0x01
    c3dc:	0f 90       	pop	r0
    c3de:	df 91       	pop	r29
    c3e0:	cf 91       	pop	r28
    c3e2:	08 95       	ret

0000c3e4 <serialbus_end_tx>:
    c3e4:	cf 93       	push	r28
    c3e6:	df 93       	push	r29
    c3e8:	cd b7       	in	r28, 0x3d	; 61
    c3ea:	de b7       	in	r29, 0x3e	; 62
    c3ec:	80 91 a9 49 	lds	r24, 0x49A9	; 0x8049a9 <_ZL19serialbus_tx_active>
    c3f0:	88 23       	and	r24, r24
    c3f2:	c9 f0       	breq	.+50     	; 0xc426 <serialbus_end_tx+0x42>
    c3f4:	80 91 30 40 	lds	r24, 0x4030	; 0x804030 <g_serialbus_usart_number>
    c3f8:	84 30       	cpi	r24, 0x04	; 4
    c3fa:	51 f4       	brne	.+20     	; 0xc410 <serialbus_end_tx+0x2c>
    c3fc:	80 e8       	ldi	r24, 0x80	; 128
    c3fe:	98 e0       	ldi	r25, 0x08	; 8
    c400:	20 e8       	ldi	r18, 0x80	; 128
    c402:	38 e0       	ldi	r19, 0x08	; 8
    c404:	f9 01       	movw	r30, r18
    c406:	25 81       	ldd	r18, Z+5	; 0x05
    c408:	2f 7d       	andi	r18, 0xDF	; 223
    c40a:	fc 01       	movw	r30, r24
    c40c:	25 83       	std	Z+5, r18	; 0x05
    c40e:	09 c0       	rjmp	.+18     	; 0xc422 <serialbus_end_tx+0x3e>
    c410:	80 e2       	ldi	r24, 0x20	; 32
    c412:	98 e0       	ldi	r25, 0x08	; 8
    c414:	20 e2       	ldi	r18, 0x20	; 32
    c416:	38 e0       	ldi	r19, 0x08	; 8
    c418:	f9 01       	movw	r30, r18
    c41a:	25 81       	ldd	r18, Z+5	; 0x05
    c41c:	2f 7d       	andi	r18, 0xDF	; 223
    c41e:	fc 01       	movw	r30, r24
    c420:	25 83       	std	Z+5, r18	; 0x05
    c422:	10 92 a9 49 	sts	0x49A9, r1	; 0x8049a9 <_ZL19serialbus_tx_active>
    c426:	00 00       	nop
    c428:	df 91       	pop	r29
    c42a:	cf 91       	pop	r28
    c42c:	08 95       	ret

0000c42e <_ZL21USART1_initializationm>:
    c42e:	cf 93       	push	r28
    c430:	df 93       	push	r29
    c432:	00 d0       	rcall	.+0      	; 0xc434 <_ZL21USART1_initializationm+0x6>
    c434:	00 d0       	rcall	.+0      	; 0xc436 <_ZL21USART1_initializationm+0x8>
    c436:	cd b7       	in	r28, 0x3d	; 61
    c438:	de b7       	in	r29, 0x3e	; 62
    c43a:	69 83       	std	Y+1, r22	; 0x01
    c43c:	7a 83       	std	Y+2, r23	; 0x02
    c43e:	8b 83       	std	Y+3, r24	; 0x03
    c440:	9c 83       	std	Y+4, r25	; 0x04
    c442:	80 e0       	ldi	r24, 0x00	; 0
    c444:	0e 94 52 60 	call	0xc0a4	; 0xc0a4 <PC1_set_dir>
    c448:	80 e0       	ldi	r24, 0x00	; 0
    c44a:	0e 94 43 60 	call	0xc086	; 0xc086 <PC1_set_pull_mode>
    c44e:	81 e0       	ldi	r24, 0x01	; 1
    c450:	0e 94 25 60 	call	0xc04a	; 0xc04a <PC0_set_dir>
    c454:	81 e0       	ldi	r24, 0x01	; 1
    c456:	0e 94 34 60 	call	0xc068	; 0xc068 <PC0_set_level>
    c45a:	89 81       	ldd	r24, Y+1	; 0x01
    c45c:	9a 81       	ldd	r25, Y+2	; 0x02
    c45e:	ab 81       	ldd	r26, Y+3	; 0x03
    c460:	bc 81       	ldd	r27, Y+4	; 0x04
    c462:	bc 01       	movw	r22, r24
    c464:	cd 01       	movw	r24, r26
    c466:	0e 94 d0 72 	call	0xe5a0	; 0xe5a0 <USART1_init>
    c46a:	00 00       	nop
    c46c:	24 96       	adiw	r28, 0x04	; 4
    c46e:	cd bf       	out	0x3d, r28	; 61
    c470:	de bf       	out	0x3e, r29	; 62
    c472:	df 91       	pop	r29
    c474:	cf 91       	pop	r28
    c476:	08 95       	ret

0000c478 <_ZL21USART4_initializationm>:
    c478:	cf 93       	push	r28
    c47a:	df 93       	push	r29
    c47c:	00 d0       	rcall	.+0      	; 0xc47e <_ZL21USART4_initializationm+0x6>
    c47e:	00 d0       	rcall	.+0      	; 0xc480 <_ZL21USART4_initializationm+0x8>
    c480:	cd b7       	in	r28, 0x3d	; 61
    c482:	de b7       	in	r29, 0x3e	; 62
    c484:	69 83       	std	Y+1, r22	; 0x01
    c486:	7a 83       	std	Y+2, r23	; 0x02
    c488:	8b 83       	std	Y+3, r24	; 0x03
    c48a:	9c 83       	std	Y+4, r25	; 0x04
    c48c:	80 e0       	ldi	r24, 0x00	; 0
    c48e:	0e 94 8e 60 	call	0xc11c	; 0xc11c <PE1_set_dir>
    c492:	80 e0       	ldi	r24, 0x00	; 0
    c494:	0e 94 7f 60 	call	0xc0fe	; 0xc0fe <PE1_set_pull_mode>
    c498:	81 e0       	ldi	r24, 0x01	; 1
    c49a:	0e 94 61 60 	call	0xc0c2	; 0xc0c2 <PE0_set_dir>
    c49e:	81 e0       	ldi	r24, 0x01	; 1
    c4a0:	0e 94 70 60 	call	0xc0e0	; 0xc0e0 <PE0_set_level>
    c4a4:	89 81       	ldd	r24, Y+1	; 0x01
    c4a6:	9a 81       	ldd	r25, Y+2	; 0x02
    c4a8:	ab 81       	ldd	r26, Y+3	; 0x03
    c4aa:	bc 81       	ldd	r27, Y+4	; 0x04
    c4ac:	bc 01       	movw	r22, r24
    c4ae:	cd 01       	movw	r24, r26
    c4b0:	0e 94 5d 73 	call	0xe6ba	; 0xe6ba <USART4_init>
    c4b4:	00 00       	nop
    c4b6:	24 96       	adiw	r28, 0x04	; 4
    c4b8:	cd bf       	out	0x3d, r28	; 61
    c4ba:	de bf       	out	0x3e, r29	; 62
    c4bc:	df 91       	pop	r29
    c4be:	cf 91       	pop	r28
    c4c0:	08 95       	ret

0000c4c2 <serialbus_init>:
    c4c2:	cf 93       	push	r28
    c4c4:	df 93       	push	r29
    c4c6:	cd b7       	in	r28, 0x3d	; 61
    c4c8:	de b7       	in	r29, 0x3e	; 62
    c4ca:	27 97       	sbiw	r28, 0x07	; 7
    c4cc:	cd bf       	out	0x3d, r28	; 61
    c4ce:	de bf       	out	0x3e, r29	; 62
    c4d0:	6b 83       	std	Y+3, r22	; 0x03
    c4d2:	7c 83       	std	Y+4, r23	; 0x04
    c4d4:	8d 83       	std	Y+5, r24	; 0x05
    c4d6:	9e 83       	std	Y+6, r25	; 0x06
    c4d8:	4f 83       	std	Y+7, r20	; 0x07
    c4da:	4f e3       	ldi	r20, 0x3F	; 63
    c4dc:	50 e0       	ldi	r21, 0x00	; 0
    c4de:	60 e0       	ldi	r22, 0x00	; 0
    c4e0:	70 e0       	ldi	r23, 0x00	; 0
    c4e2:	85 e2       	ldi	r24, 0x25	; 37
    c4e4:	9a e4       	ldi	r25, 0x4A	; 74
    c4e6:	0e 94 58 7c 	call	0xf8b0	; 0xf8b0 <memset>
    c4ea:	19 82       	std	Y+1, r1	; 0x01
    c4ec:	1a 82       	std	Y+2, r1	; 0x02
    c4ee:	89 81       	ldd	r24, Y+1	; 0x01
    c4f0:	9a 81       	ldd	r25, Y+2	; 0x02
    c4f2:	03 97       	sbiw	r24, 0x03	; 3
    c4f4:	94 f4       	brge	.+36     	; 0xc51a <serialbus_init+0x58>
    c4f6:	29 81       	ldd	r18, Y+1	; 0x01
    c4f8:	3a 81       	ldd	r19, Y+2	; 0x02
    c4fa:	49 e2       	ldi	r20, 0x29	; 41
    c4fc:	42 9f       	mul	r20, r18
    c4fe:	c0 01       	movw	r24, r0
    c500:	43 9f       	mul	r20, r19
    c502:	90 0d       	add	r25, r0
    c504:	11 24       	eor	r1, r1
    c506:	86 55       	subi	r24, 0x56	; 86
    c508:	96 4b       	sbci	r25, 0xB6	; 182
    c50a:	fc 01       	movw	r30, r24
    c50c:	10 82       	st	Z, r1
    c50e:	89 81       	ldd	r24, Y+1	; 0x01
    c510:	9a 81       	ldd	r25, Y+2	; 0x02
    c512:	01 96       	adiw	r24, 0x01	; 1
    c514:	89 83       	std	Y+1, r24	; 0x01
    c516:	9a 83       	std	Y+2, r25	; 0x02
    c518:	ea cf       	rjmp	.-44     	; 0xc4ee <serialbus_init+0x2c>
    c51a:	8f 81       	ldd	r24, Y+7	; 0x07
    c51c:	86 30       	cpi	r24, 0x06	; 6
    c51e:	21 f4       	brne	.+8      	; 0xc528 <serialbus_init+0x66>
    c520:	80 91 30 40 	lds	r24, 0x4030	; 0x804030 <g_serialbus_usart_number>
    c524:	87 30       	cpi	r24, 0x07	; 7
    c526:	b9 f4       	brne	.+46     	; 0xc556 <serialbus_init+0x94>
    c528:	8f 81       	ldd	r24, Y+7	; 0x07
    c52a:	84 30       	cpi	r24, 0x04	; 4
    c52c:	49 f4       	brne	.+18     	; 0xc540 <serialbus_init+0x7e>
    c52e:	8b 81       	ldd	r24, Y+3	; 0x03
    c530:	9c 81       	ldd	r25, Y+4	; 0x04
    c532:	ad 81       	ldd	r26, Y+5	; 0x05
    c534:	be 81       	ldd	r27, Y+6	; 0x06
    c536:	bc 01       	movw	r22, r24
    c538:	cd 01       	movw	r24, r26
    c53a:	0e 94 3c 62 	call	0xc478	; 0xc478 <_ZL21USART4_initializationm>
    c53e:	08 c0       	rjmp	.+16     	; 0xc550 <serialbus_init+0x8e>
    c540:	8b 81       	ldd	r24, Y+3	; 0x03
    c542:	9c 81       	ldd	r25, Y+4	; 0x04
    c544:	ad 81       	ldd	r26, Y+5	; 0x05
    c546:	be 81       	ldd	r27, Y+6	; 0x06
    c548:	bc 01       	movw	r22, r24
    c54a:	cd 01       	movw	r24, r26
    c54c:	0e 94 17 62 	call	0xc42e	; 0xc42e <_ZL21USART1_initializationm>
    c550:	8f 81       	ldd	r24, Y+7	; 0x07
    c552:	80 93 30 40 	sts	0x4030, r24	; 0x804030 <g_serialbus_usart_number>
    c556:	10 92 31 40 	sts	0x4031, r1	; 0x804031 <_ZL14g_bus_disabled>
    c55a:	00 00       	nop
    c55c:	27 96       	adiw	r28, 0x07	; 7
    c55e:	cd bf       	out	0x3d, r28	; 61
    c560:	de bf       	out	0x3e, r29	; 62
    c562:	df 91       	pop	r29
    c564:	cf 91       	pop	r28
    c566:	08 95       	ret

0000c568 <_Z19serialbus_send_textPc>:


bool serialbus_send_text(char* text)
{
    c568:	cf 93       	push	r28
    c56a:	df 93       	push	r29
    c56c:	cd b7       	in	r28, 0x3d	; 61
    c56e:	de b7       	in	r29, 0x3e	; 62
    c570:	27 97       	sbiw	r28, 0x07	; 7
    c572:	cd bf       	out	0x3d, r28	; 61
    c574:	de bf       	out	0x3e, r29	; 62
    c576:	8e 83       	std	Y+6, r24	; 0x06
    c578:	9f 83       	std	Y+7, r25	; 0x07
	bool err = true;
    c57a:	81 e0       	ldi	r24, 0x01	; 1
    c57c:	89 83       	std	Y+1, r24	; 0x01
	uint16_t tries = 200;
    c57e:	88 ec       	ldi	r24, 0xC8	; 200
    c580:	90 e0       	ldi	r25, 0x00	; 0
    c582:	8a 83       	std	Y+2, r24	; 0x02
    c584:	9b 83       	std	Y+3, r25	; 0x03

	if(g_bus_disabled)
    c586:	80 91 31 40 	lds	r24, 0x4031	; 0x804031 <_ZL14g_bus_disabled>
    c58a:	88 23       	and	r24, r24
    c58c:	11 f0       	breq	.+4      	; 0xc592 <_Z19serialbus_send_textPc+0x2a>
	{
		return( err);
    c58e:	89 81       	ldd	r24, Y+1	; 0x01
    c590:	42 c0       	rjmp	.+132    	; 0xc616 <_Z19serialbus_send_textPc+0xae>
	}

	if(text)
    c592:	8e 81       	ldd	r24, Y+6	; 0x06
    c594:	9f 81       	ldd	r25, Y+7	; 0x07
    c596:	89 2b       	or	r24, r25
    c598:	e9 f1       	breq	.+122    	; 0xc614 <_Z19serialbus_send_textPc+0xac>
	{
		SerialbusTxBuffer* buff = nextEmptySBTxBuffer();
    c59a:	0e 94 e8 60 	call	0xc1d0	; 0xc1d0 <nextEmptySBTxBuffer>
    c59e:	8c 83       	std	Y+4, r24	; 0x04
    c5a0:	9d 83       	std	Y+5, r25	; 0x05

		while(!buff && tries)
    c5a2:	8c 81       	ldd	r24, Y+4	; 0x04
    c5a4:	9d 81       	ldd	r25, Y+5	; 0x05
    c5a6:	89 2b       	or	r24, r25
    c5a8:	01 f5       	brne	.+64     	; 0xc5ea <_Z19serialbus_send_textPc+0x82>
    c5aa:	8a 81       	ldd	r24, Y+2	; 0x02
    c5ac:	9b 81       	ldd	r25, Y+3	; 0x03
    c5ae:	89 2b       	or	r24, r25
    c5b0:	e1 f0       	breq	.+56     	; 0xc5ea <_Z19serialbus_send_textPc+0x82>
		{
			while(serialbusTxInProgress() && tries)
    c5b2:	0e 94 cb 61 	call	0xc396	; 0xc396 <serialbusTxInProgress>
    c5b6:	88 23       	and	r24, r24
    c5b8:	31 f0       	breq	.+12     	; 0xc5c6 <_Z19serialbus_send_textPc+0x5e>
    c5ba:	8a 81       	ldd	r24, Y+2	; 0x02
    c5bc:	9b 81       	ldd	r25, Y+3	; 0x03
    c5be:	89 2b       	or	r24, r25
    c5c0:	11 f0       	breq	.+4      	; 0xc5c6 <_Z19serialbus_send_textPc+0x5e>
    c5c2:	81 e0       	ldi	r24, 0x01	; 1
    c5c4:	01 c0       	rjmp	.+2      	; 0xc5c8 <_Z19serialbus_send_textPc+0x60>
    c5c6:	80 e0       	ldi	r24, 0x00	; 0
    c5c8:	88 23       	and	r24, r24
    c5ca:	51 f0       	breq	.+20     	; 0xc5e0 <_Z19serialbus_send_textPc+0x78>
			{
				if(tries)
    c5cc:	8a 81       	ldd	r24, Y+2	; 0x02
    c5ce:	9b 81       	ldd	r25, Y+3	; 0x03
    c5d0:	89 2b       	or	r24, r25
    c5d2:	79 f3       	breq	.-34     	; 0xc5b2 <_Z19serialbus_send_textPc+0x4a>
				{
					tries--;    /* wait until transmit finishes */
    c5d4:	8a 81       	ldd	r24, Y+2	; 0x02
    c5d6:	9b 81       	ldd	r25, Y+3	; 0x03
    c5d8:	01 97       	sbiw	r24, 0x01	; 1
    c5da:	8a 83       	std	Y+2, r24	; 0x02
    c5dc:	9b 83       	std	Y+3, r25	; 0x03
	{
		SerialbusTxBuffer* buff = nextEmptySBTxBuffer();

		while(!buff && tries)
		{
			while(serialbusTxInProgress() && tries)
    c5de:	e9 cf       	rjmp	.-46     	; 0xc5b2 <_Z19serialbus_send_textPc+0x4a>
				if(tries)
				{
					tries--;    /* wait until transmit finishes */
				}
			}
			buff = nextEmptySBTxBuffer();
    c5e0:	0e 94 e8 60 	call	0xc1d0	; 0xc1d0 <nextEmptySBTxBuffer>
    c5e4:	8c 83       	std	Y+4, r24	; 0x04
    c5e6:	9d 83       	std	Y+5, r25	; 0x05

	if(text)
	{
		SerialbusTxBuffer* buff = nextEmptySBTxBuffer();

		while(!buff && tries)
    c5e8:	dc cf       	rjmp	.-72     	; 0xc5a2 <_Z19serialbus_send_textPc+0x3a>
				}
			}
			buff = nextEmptySBTxBuffer();
		}

		if(buff)
    c5ea:	8c 81       	ldd	r24, Y+4	; 0x04
    c5ec:	9d 81       	ldd	r25, Y+5	; 0x05
    c5ee:	89 2b       	or	r24, r25
    c5f0:	89 f0       	breq	.+34     	; 0xc614 <_Z19serialbus_send_textPc+0xac>
		{
			sprintf(*buff, text);
    c5f2:	8f 81       	ldd	r24, Y+7	; 0x07
    c5f4:	8f 93       	push	r24
    c5f6:	8e 81       	ldd	r24, Y+6	; 0x06
    c5f8:	8f 93       	push	r24
    c5fa:	8d 81       	ldd	r24, Y+5	; 0x05
    c5fc:	8f 93       	push	r24
    c5fe:	8c 81       	ldd	r24, Y+4	; 0x04
    c600:	8f 93       	push	r24
    c602:	0e 94 ba 7c 	call	0xf974	; 0xf974 <sprintf>
    c606:	0f 90       	pop	r0
    c608:	0f 90       	pop	r0
    c60a:	0f 90       	pop	r0
    c60c:	0f 90       	pop	r0

			serialbus_start_tx();
    c60e:	0e 94 d4 61 	call	0xc3a8	; 0xc3a8 <_Z18serialbus_start_txv>
			err = false;
    c612:	19 82       	std	Y+1, r1	; 0x01
		}
	}

	return(err);
    c614:	89 81       	ldd	r24, Y+1	; 0x01
}
    c616:	27 96       	adiw	r28, 0x07	; 7
    c618:	cd bf       	out	0x3d, r28	; 61
    c61a:	de bf       	out	0x3e, r29	; 62
    c61c:	df 91       	pop	r29
    c61e:	cf 91       	pop	r28
    c620:	08 95       	ret

0000c622 <sb_send_NewPrompt>:
/***********************************************************************************
 *  Support for creating and sending various Terminal Mode Serialbus messages is provided below.
 ************************************************************************************/

void sb_send_NewPrompt(void)
{
    c622:	cf 93       	push	r28
    c624:	df 93       	push	r29
    c626:	cd b7       	in	r28, 0x3d	; 61
    c628:	de b7       	in	r29, 0x3e	; 62
	if(g_bus_disabled)
    c62a:	80 91 31 40 	lds	r24, 0x4031	; 0x804031 <_ZL14g_bus_disabled>
    c62e:	88 23       	and	r24, r24
    c630:	39 f4       	brne	.+14     	; 0xc640 <sb_send_NewPrompt+0x1e>
	{
		return;
	}

	while(serialbus_send_text((char*)textPrompt))
    c632:	83 e5       	ldi	r24, 0x53	; 83
    c634:	96 e4       	ldi	r25, 0x46	; 70
    c636:	0e 94 b4 62 	call	0xc568	; 0xc568 <_Z19serialbus_send_textPc>
    c63a:	88 23       	and	r24, r24
    c63c:	11 f0       	breq	.+4      	; 0xc642 <sb_send_NewPrompt+0x20>
    c63e:	f9 cf       	rjmp	.-14     	; 0xc632 <sb_send_NewPrompt+0x10>

void sb_send_NewPrompt(void)
{
	if(g_bus_disabled)
	{
		return;
    c640:	00 00       	nop

	while(serialbus_send_text((char*)textPrompt))
	{
		;
	}
}
    c642:	df 91       	pop	r29
    c644:	cf 91       	pop	r28
    c646:	08 95       	ret

0000c648 <sb_send_NewLine>:

void sb_send_NewLine(void)
{
    c648:	cf 93       	push	r28
    c64a:	df 93       	push	r29
    c64c:	cd b7       	in	r28, 0x3d	; 61
    c64e:	de b7       	in	r29, 0x3e	; 62
	if(g_bus_disabled)
    c650:	80 91 31 40 	lds	r24, 0x4031	; 0x804031 <_ZL14g_bus_disabled>
    c654:	88 23       	and	r24, r24
    c656:	29 f4       	brne	.+10     	; 0xc662 <sb_send_NewLine+0x1a>
	{
		return;
	}
	serialbus_send_text((char*)crlf);
    c658:	81 e5       	ldi	r24, 0x51	; 81
    c65a:	96 e4       	ldi	r25, 0x46	; 70
    c65c:	0e 94 b4 62 	call	0xc568	; 0xc568 <_Z19serialbus_send_textPc>
    c660:	01 c0       	rjmp	.+2      	; 0xc664 <sb_send_NewLine+0x1c>

void sb_send_NewLine(void)
{
	if(g_bus_disabled)
	{
		return;
    c662:	00 00       	nop
	}
	serialbus_send_text((char*)crlf);
}
    c664:	df 91       	pop	r29
    c666:	cf 91       	pop	r28
    c668:	08 95       	ret

0000c66a <sb_echo_char>:

void sb_echo_char(uint8_t c)
{
    c66a:	cf 93       	push	r28
    c66c:	df 93       	push	r29
    c66e:	1f 92       	push	r1
    c670:	cd b7       	in	r28, 0x3d	; 61
    c672:	de b7       	in	r29, 0x3e	; 62
    c674:	89 83       	std	Y+1, r24	; 0x01
	if(g_bus_disabled)
    c676:	80 91 31 40 	lds	r24, 0x4031	; 0x804031 <_ZL14g_bus_disabled>
    c67a:	88 23       	and	r24, r24
    c67c:	51 f4       	brne	.+20     	; 0xc692 <sb_echo_char+0x28>
	{
		return;
	}
	g_tempMsgBuff[0] = c;
    c67e:	89 81       	ldd	r24, Y+1	; 0x01
    c680:	80 93 77 49 	sts	0x4977, r24	; 0x804977 <_ZL13g_tempMsgBuff>
	g_tempMsgBuff[1] = '\0';
    c684:	10 92 78 49 	sts	0x4978, r1	; 0x804978 <_ZL13g_tempMsgBuff+0x1>
	serialbus_send_text(g_tempMsgBuff);
    c688:	87 e7       	ldi	r24, 0x77	; 119
    c68a:	99 e4       	ldi	r25, 0x49	; 73
    c68c:	0e 94 b4 62 	call	0xc568	; 0xc568 <_Z19serialbus_send_textPc>
    c690:	01 c0       	rjmp	.+2      	; 0xc694 <sb_echo_char+0x2a>

void sb_echo_char(uint8_t c)
{
	if(g_bus_disabled)
	{
		return;
    c692:	00 00       	nop
	}
	g_tempMsgBuff[0] = c;
	g_tempMsgBuff[1] = '\0';
	serialbus_send_text(g_tempMsgBuff);
}
    c694:	0f 90       	pop	r0
    c696:	df 91       	pop	r29
    c698:	cf 91       	pop	r28
    c69a:	08 95       	ret

0000c69c <sb_send_string>:

bool sb_send_string(char* str)
{
    c69c:	cf 93       	push	r28
    c69e:	df 93       	push	r29
    c6a0:	cd b7       	in	r28, 0x3d	; 61
    c6a2:	de b7       	in	r29, 0x3e	; 62
    c6a4:	e8 97       	sbiw	r28, 0x38	; 56
    c6a6:	cd bf       	out	0x3d, r28	; 61
    c6a8:	de bf       	out	0x3e, r29	; 62
    c6aa:	8f ab       	std	Y+55, r24	; 0x37
    c6ac:	98 af       	std	Y+56, r25	; 0x38
	char buf[SERIALBUS_MAX_TX_MSG_LENGTH+1];
	bool err = false;
    c6ae:	1b 82       	std	Y+3, r1	; 0x03
	uint16_t length, lengthToSend, lengthSent=0;
    c6b0:	19 82       	std	Y+1, r1	; 0x01
    c6b2:	1a 82       	std	Y+2, r1	; 0x02
	bool done = false;
    c6b4:	1c 82       	std	Y+4, r1	; 0x04

	if(g_bus_disabled)
    c6b6:	80 91 31 40 	lds	r24, 0x4031	; 0x804031 <_ZL14g_bus_disabled>
    c6ba:	88 23       	and	r24, r24
    c6bc:	11 f0       	breq	.+4      	; 0xc6c2 <sb_send_string+0x26>
	{
		return( true);
    c6be:	81 e0       	ldi	r24, 0x01	; 1
    c6c0:	70 c0       	rjmp	.+224    	; 0xc7a2 <sb_send_string+0x106>
	}

	if(str == NULL)
    c6c2:	8f a9       	ldd	r24, Y+55	; 0x37
    c6c4:	98 ad       	ldd	r25, Y+56	; 0x38
    c6c6:	89 2b       	or	r24, r25
    c6c8:	11 f4       	brne	.+4      	; 0xc6ce <sb_send_string+0x32>
	{
		return( true);
    c6ca:	81 e0       	ldi	r24, 0x01	; 1
    c6cc:	6a c0       	rjmp	.+212    	; 0xc7a2 <sb_send_string+0x106>
	}

	if(!*str)
    c6ce:	8f a9       	ldd	r24, Y+55	; 0x37
    c6d0:	98 ad       	ldd	r25, Y+56	; 0x38
    c6d2:	fc 01       	movw	r30, r24
    c6d4:	80 81       	ld	r24, Z
    c6d6:	88 23       	and	r24, r24
    c6d8:	11 f4       	brne	.+4      	; 0xc6de <sb_send_string+0x42>
	{
		return(true);
    c6da:	81 e0       	ldi	r24, 0x01	; 1
    c6dc:	62 c0       	rjmp	.+196    	; 0xc7a2 <sb_send_string+0x106>
	}

	length = strlen(str);
    c6de:	8f a9       	ldd	r24, Y+55	; 0x37
    c6e0:	98 ad       	ldd	r25, Y+56	; 0x38
    c6e2:	0e 94 85 7c 	call	0xf90a	; 0xf90a <strlen>
    c6e6:	8d 83       	std	Y+5, r24	; 0x05
    c6e8:	9e 83       	std	Y+6, r25	; 0x06

	do
	{
		lengthToSend = MIN(length-lengthSent, (uint16_t)SERIALBUS_MAX_TX_MSG_LENGTH);
    c6ea:	2d 81       	ldd	r18, Y+5	; 0x05
    c6ec:	3e 81       	ldd	r19, Y+6	; 0x06
    c6ee:	89 81       	ldd	r24, Y+1	; 0x01
    c6f0:	9a 81       	ldd	r25, Y+2	; 0x02
    c6f2:	a9 01       	movw	r20, r18
    c6f4:	48 1b       	sub	r20, r24
    c6f6:	59 0b       	sbc	r21, r25
    c6f8:	ca 01       	movw	r24, r20
    c6fa:	8f 83       	std	Y+7, r24	; 0x07
    c6fc:	98 87       	std	Y+8, r25	; 0x08
    c6fe:	89 e2       	ldi	r24, 0x29	; 41
    c700:	90 e0       	ldi	r25, 0x00	; 0
    c702:	89 87       	std	Y+9, r24	; 0x09
    c704:	9a 87       	std	Y+10, r25	; 0x0a
    c706:	2f 81       	ldd	r18, Y+7	; 0x07
    c708:	38 85       	ldd	r19, Y+8	; 0x08
    c70a:	89 85       	ldd	r24, Y+9	; 0x09
    c70c:	9a 85       	ldd	r25, Y+10	; 0x0a
    c70e:	28 17       	cp	r18, r24
    c710:	39 07       	cpc	r19, r25
    c712:	18 f4       	brcc	.+6      	; 0xc71a <sb_send_string+0x7e>
    c714:	8f 81       	ldd	r24, Y+7	; 0x07
    c716:	98 85       	ldd	r25, Y+8	; 0x08
    c718:	02 c0       	rjmp	.+4      	; 0xc71e <sb_send_string+0x82>
    c71a:	89 85       	ldd	r24, Y+9	; 0x09
    c71c:	9a 85       	ldd	r25, Y+10	; 0x0a
    c71e:	8b 87       	std	Y+11, r24	; 0x0b
    c720:	9c 87       	std	Y+12, r25	; 0x0c
		strncpy(buf, &str[lengthSent], lengthToSend);
    c722:	2f a9       	ldd	r18, Y+55	; 0x37
    c724:	38 ad       	ldd	r19, Y+56	; 0x38
    c726:	89 81       	ldd	r24, Y+1	; 0x01
    c728:	9a 81       	ldd	r25, Y+2	; 0x02
    c72a:	28 0f       	add	r18, r24
    c72c:	39 1f       	adc	r19, r25
    c72e:	4b 85       	ldd	r20, Y+11	; 0x0b
    c730:	5c 85       	ldd	r21, Y+12	; 0x0c
    c732:	ce 01       	movw	r24, r28
    c734:	0d 96       	adiw	r24, 0x0d	; 13
    c736:	b9 01       	movw	r22, r18
    c738:	0e 94 8e 7c 	call	0xf91c	; 0xf91c <strncpy>

		buf[lengthToSend] = '\0';
    c73c:	9e 01       	movw	r18, r28
    c73e:	23 5f       	subi	r18, 0xF3	; 243
    c740:	3f 4f       	sbci	r19, 0xFF	; 255
    c742:	8b 85       	ldd	r24, Y+11	; 0x0b
    c744:	9c 85       	ldd	r25, Y+12	; 0x0c
    c746:	82 0f       	add	r24, r18
    c748:	93 1f       	adc	r25, r19
    c74a:	fc 01       	movw	r30, r24
    c74c:	10 82       	st	Z, r1
		err = serialbus_send_text(buf);
    c74e:	ce 01       	movw	r24, r28
    c750:	0d 96       	adiw	r24, 0x0d	; 13
    c752:	0e 94 b4 62 	call	0xc568	; 0xc568 <_Z19serialbus_send_textPc>
    c756:	8b 83       	std	Y+3, r24	; 0x03
		
		if(!err)
    c758:	9b 81       	ldd	r25, Y+3	; 0x03
    c75a:	81 e0       	ldi	r24, 0x01	; 1
    c75c:	89 27       	eor	r24, r25
    c75e:	88 23       	and	r24, r24
    c760:	29 f0       	breq	.+10     	; 0xc76c <sb_send_string+0xd0>
		{
			while(serialbusTxInProgress())
    c762:	0e 94 cb 61 	call	0xc396	; 0xc396 <serialbusTxInProgress>
    c766:	88 23       	and	r24, r24
    c768:	09 f0       	breq	.+2      	; 0xc76c <sb_send_string+0xd0>
    c76a:	fb cf       	rjmp	.-10     	; 0xc762 <sb_send_string+0xc6>
			{
				;
			}
		}

		lengthSent += lengthToSend;
    c76c:	29 81       	ldd	r18, Y+1	; 0x01
    c76e:	3a 81       	ldd	r19, Y+2	; 0x02
    c770:	8b 85       	ldd	r24, Y+11	; 0x0b
    c772:	9c 85       	ldd	r25, Y+12	; 0x0c
    c774:	82 0f       	add	r24, r18
    c776:	93 1f       	adc	r25, r19
    c778:	89 83       	std	Y+1, r24	; 0x01
    c77a:	9a 83       	std	Y+2, r25	; 0x02
		done = err || (lengthSent >= length);
    c77c:	8b 81       	ldd	r24, Y+3	; 0x03
    c77e:	88 23       	and	r24, r24
    c780:	39 f4       	brne	.+14     	; 0xc790 <sb_send_string+0xf4>
    c782:	29 81       	ldd	r18, Y+1	; 0x01
    c784:	3a 81       	ldd	r19, Y+2	; 0x02
    c786:	8d 81       	ldd	r24, Y+5	; 0x05
    c788:	9e 81       	ldd	r25, Y+6	; 0x06
    c78a:	28 17       	cp	r18, r24
    c78c:	39 07       	cpc	r19, r25
    c78e:	10 f0       	brcs	.+4      	; 0xc794 <sb_send_string+0xf8>
    c790:	81 e0       	ldi	r24, 0x01	; 1
    c792:	01 c0       	rjmp	.+2      	; 0xc796 <sb_send_string+0xfa>
    c794:	80 e0       	ldi	r24, 0x00	; 0
    c796:	8c 83       	std	Y+4, r24	; 0x04
	}while(!done);
    c798:	8c 81       	ldd	r24, Y+4	; 0x04
    c79a:	88 23       	and	r24, r24
    c79c:	09 f4       	brne	.+2      	; 0xc7a0 <sb_send_string+0x104>
		return(true);
	}

	length = strlen(str);

	do
    c79e:	a5 cf       	rjmp	.-182    	; 0xc6ea <sb_send_string+0x4e>

		lengthSent += lengthToSend;
		done = err || (lengthSent >= length);
	}while(!done);

	return( err);
    c7a0:	8b 81       	ldd	r24, Y+3	; 0x03
}
    c7a2:	e8 96       	adiw	r28, 0x38	; 56
    c7a4:	cd bf       	out	0x3d, r28	; 61
    c7a6:	de bf       	out	0x3e, r29	; 62
    c7a8:	df 91       	pop	r29
    c7aa:	cf 91       	pop	r28
    c7ac:	08 95       	ret

0000c7ae <si5351_init>:
	void si5351_set_vcoB_freq(Frequency_Hz freq_VCO)
	{
		freqVCOB = freq_VCO;
		set_pll(freq_VCO, SI5351_PLLB);
		return;
	}
    c7ae:	cf 93       	push	r28
    c7b0:	df 93       	push	r29
    c7b2:	cd b7       	in	r28, 0x3d	; 61
    c7b4:	de b7       	in	r29, 0x3e	; 62
    c7b6:	28 97       	sbiw	r28, 0x08	; 8
    c7b8:	cd bf       	out	0x3d, r28	; 61
    c7ba:	de bf       	out	0x3e, r29	; 62
    c7bc:	8c 83       	std	Y+4, r24	; 0x04
    c7be:	4d 83       	std	Y+5, r20	; 0x05
    c7c0:	5e 83       	std	Y+6, r21	; 0x06
    c7c2:	6f 83       	std	Y+7, r22	; 0x07
    c7c4:	78 87       	std	Y+8, r23	; 0x08
    c7c6:	0e 94 bc 50 	call	0xa178	; 0xa178 <I2C_1_Init>
    c7ca:	10 92 a7 4a 	sts	0x4AA7, r1	; 0x804aa7 <_ZL8freqVCOB>
    c7ce:	10 92 a8 4a 	sts	0x4AA8, r1	; 0x804aa8 <_ZL8freqVCOB+0x1>
    c7d2:	10 92 a9 4a 	sts	0x4AA9, r1	; 0x804aa9 <_ZL8freqVCOB+0x2>
    c7d6:	10 92 aa 4a 	sts	0x4AAA, r1	; 0x804aaa <_ZL8freqVCOB+0x3>
    c7da:	80 e4       	ldi	r24, 0x40	; 64
    c7dc:	98 e7       	ldi	r25, 0x78	; 120
    c7de:	ad e7       	ldi	r26, 0x7D	; 125
    c7e0:	b1 e0       	ldi	r27, 0x01	; 1
    c7e2:	80 93 32 40 	sts	0x4032, r24	; 0x804032 <_ZL9xtal_freq>
    c7e6:	90 93 33 40 	sts	0x4033, r25	; 0x804033 <_ZL9xtal_freq+0x1>
    c7ea:	a0 93 34 40 	sts	0x4034, r26	; 0x804034 <_ZL9xtal_freq+0x2>
    c7ee:	b0 93 35 40 	sts	0x4035, r27	; 0x804035 <_ZL9xtal_freq+0x3>
    c7f2:	10 92 ab 4a 	sts	0x4AAB, r1	; 0x804aab <_ZL17enabledClocksMask>
    c7f6:	8f ef       	ldi	r24, 0xFF	; 255
    c7f8:	8a 83       	std	Y+2, r24	; 0x02
    c7fa:	ce 01       	movw	r24, r28
    c7fc:	02 96       	adiw	r24, 0x02	; 2
    c7fe:	41 e0       	ldi	r20, 0x01	; 1
    c800:	bc 01       	movw	r22, r24
    c802:	83 e0       	ldi	r24, 0x03	; 3
    c804:	0e 94 db 6b 	call	0xd7b6	; 0xd7b6 <_Z17si5351_write_bulkhPhh>
    c808:	80 93 b9 4a 	sts	0x4AB9, r24	; 0x804ab9 <_ZZ11si5351_initE3err>
    c80c:	80 91 b9 4a 	lds	r24, 0x4AB9	; 0x804ab9 <_ZZ11si5351_initE3err>
    c810:	88 23       	and	r24, r24
    c812:	19 f0       	breq	.+6      	; 0xc81a <si5351_init+0x6c>
    c814:	80 91 b9 4a 	lds	r24, 0x4AB9	; 0x804ab9 <_ZZ11si5351_initE3err>
    c818:	92 c0       	rjmp	.+292    	; 0xc93e <si5351_init+0x190>
    c81a:	8c ec       	ldi	r24, 0xCC	; 204
    c81c:	8a 83       	std	Y+2, r24	; 0x02
    c81e:	ce 01       	movw	r24, r28
    c820:	02 96       	adiw	r24, 0x02	; 2
    c822:	41 e0       	ldi	r20, 0x01	; 1
    c824:	bc 01       	movw	r22, r24
    c826:	80 e1       	ldi	r24, 0x10	; 16
    c828:	0e 94 db 6b 	call	0xd7b6	; 0xd7b6 <_Z17si5351_write_bulkhPhh>
    c82c:	98 2f       	mov	r25, r24
    c82e:	80 91 b9 4a 	lds	r24, 0x4AB9	; 0x804ab9 <_ZZ11si5351_initE3err>
    c832:	89 2b       	or	r24, r25
    c834:	80 93 b9 4a 	sts	0x4AB9, r24	; 0x804ab9 <_ZZ11si5351_initE3err>
    c838:	ce 01       	movw	r24, r28
    c83a:	02 96       	adiw	r24, 0x02	; 2
    c83c:	41 e0       	ldi	r20, 0x01	; 1
    c83e:	bc 01       	movw	r22, r24
    c840:	81 e1       	ldi	r24, 0x11	; 17
    c842:	0e 94 db 6b 	call	0xd7b6	; 0xd7b6 <_Z17si5351_write_bulkhPhh>
    c846:	98 2f       	mov	r25, r24
    c848:	80 91 b9 4a 	lds	r24, 0x4AB9	; 0x804ab9 <_ZZ11si5351_initE3err>
    c84c:	89 2b       	or	r24, r25
    c84e:	80 93 b9 4a 	sts	0x4AB9, r24	; 0x804ab9 <_ZZ11si5351_initE3err>
    c852:	ce 01       	movw	r24, r28
    c854:	02 96       	adiw	r24, 0x02	; 2
    c856:	41 e0       	ldi	r20, 0x01	; 1
    c858:	bc 01       	movw	r22, r24
    c85a:	82 e1       	ldi	r24, 0x12	; 18
    c85c:	0e 94 db 6b 	call	0xd7b6	; 0xd7b6 <_Z17si5351_write_bulkhPhh>
    c860:	98 2f       	mov	r25, r24
    c862:	80 91 b9 4a 	lds	r24, 0x4AB9	; 0x804ab9 <_ZZ11si5351_initE3err>
    c866:	89 2b       	or	r24, r25
    c868:	80 93 b9 4a 	sts	0x4AB9, r24	; 0x804ab9 <_ZZ11si5351_initE3err>
    c86c:	82 e1       	ldi	r24, 0x12	; 18
    c86e:	89 83       	std	Y+1, r24	; 0x01
    c870:	99 81       	ldd	r25, Y+1	; 0x01
    c872:	8c 81       	ldd	r24, Y+4	; 0x04
    c874:	89 2b       	or	r24, r25
    c876:	89 83       	std	Y+1, r24	; 0x01
    c878:	89 81       	ldd	r24, Y+1	; 0x01
    c87a:	8a 83       	std	Y+2, r24	; 0x02
    c87c:	ce 01       	movw	r24, r28
    c87e:	02 96       	adiw	r24, 0x02	; 2
    c880:	41 e0       	ldi	r20, 0x01	; 1
    c882:	bc 01       	movw	r22, r24
    c884:	87 eb       	ldi	r24, 0xB7	; 183
    c886:	0e 94 db 6b 	call	0xd7b6	; 0xd7b6 <_Z17si5351_write_bulkhPhh>
    c88a:	98 2f       	mov	r25, r24
    c88c:	80 91 b9 4a 	lds	r24, 0x4AB9	; 0x804ab9 <_ZZ11si5351_initE3err>
    c890:	89 2b       	or	r24, r25
    c892:	80 93 b9 4a 	sts	0x4AB9, r24	; 0x804ab9 <_ZZ11si5351_initE3err>
    c896:	8d 81       	ldd	r24, Y+5	; 0x05
    c898:	9e 81       	ldd	r25, Y+6	; 0x06
    c89a:	af 81       	ldd	r26, Y+7	; 0x07
    c89c:	b8 85       	ldd	r27, Y+8	; 0x08
    c89e:	89 2b       	or	r24, r25
    c8a0:	8a 2b       	or	r24, r26
    c8a2:	8b 2b       	or	r24, r27
    c8a4:	41 f4       	brne	.+16     	; 0xc8b6 <si5351_init+0x108>
    c8a6:	80 e4       	ldi	r24, 0x40	; 64
    c8a8:	98 e7       	ldi	r25, 0x78	; 120
    c8aa:	ad e7       	ldi	r26, 0x7D	; 125
    c8ac:	b1 e0       	ldi	r27, 0x01	; 1
    c8ae:	8d 83       	std	Y+5, r24	; 0x05
    c8b0:	9e 83       	std	Y+6, r25	; 0x06
    c8b2:	af 83       	std	Y+7, r26	; 0x07
    c8b4:	b8 87       	std	Y+8, r27	; 0x08
    c8b6:	80 91 32 40 	lds	r24, 0x4032	; 0x804032 <_ZL9xtal_freq>
    c8ba:	90 91 33 40 	lds	r25, 0x4033	; 0x804033 <_ZL9xtal_freq+0x1>
    c8be:	a0 91 34 40 	lds	r26, 0x4034	; 0x804034 <_ZL9xtal_freq+0x2>
    c8c2:	b0 91 35 40 	lds	r27, 0x4035	; 0x804035 <_ZL9xtal_freq+0x3>
    c8c6:	2d 81       	ldd	r18, Y+5	; 0x05
    c8c8:	3e 81       	ldd	r19, Y+6	; 0x06
    c8ca:	4f 81       	ldd	r20, Y+7	; 0x07
    c8cc:	58 85       	ldd	r21, Y+8	; 0x08
    c8ce:	28 17       	cp	r18, r24
    c8d0:	39 07       	cpc	r19, r25
    c8d2:	4a 07       	cpc	r20, r26
    c8d4:	5b 07       	cpc	r21, r27
    c8d6:	59 f1       	breq	.+86     	; 0xc92e <si5351_init+0x180>
    c8d8:	ce 01       	movw	r24, r28
    c8da:	02 96       	adiw	r24, 0x02	; 2
    c8dc:	41 e0       	ldi	r20, 0x01	; 1
    c8de:	bc 01       	movw	r22, r24
    c8e0:	8f e0       	ldi	r24, 0x0F	; 15
    c8e2:	0e 94 0d 6c 	call	0xd81a	; 0xd81a <_Z16si5351_read_bulkhPhh>
    c8e6:	88 23       	and	r24, r24
    c8e8:	11 f0       	breq	.+4      	; 0xc8ee <si5351_init+0x140>
    c8ea:	81 e0       	ldi	r24, 0x01	; 1
    c8ec:	28 c0       	rjmp	.+80     	; 0xc93e <si5351_init+0x190>
    c8ee:	8a 81       	ldd	r24, Y+2	; 0x02
    c8f0:	89 83       	std	Y+1, r24	; 0x01
    c8f2:	89 81       	ldd	r24, Y+1	; 0x01
    c8f4:	8f 73       	andi	r24, 0x3F	; 63
    c8f6:	89 83       	std	Y+1, r24	; 0x01
    c8f8:	8d 81       	ldd	r24, Y+5	; 0x05
    c8fa:	9e 81       	ldd	r25, Y+6	; 0x06
    c8fc:	af 81       	ldd	r26, Y+7	; 0x07
    c8fe:	b8 85       	ldd	r27, Y+8	; 0x08
    c900:	80 93 32 40 	sts	0x4032, r24	; 0x804032 <_ZL9xtal_freq>
    c904:	90 93 33 40 	sts	0x4033, r25	; 0x804033 <_ZL9xtal_freq+0x1>
    c908:	a0 93 34 40 	sts	0x4034, r26	; 0x804034 <_ZL9xtal_freq+0x2>
    c90c:	b0 93 35 40 	sts	0x4035, r27	; 0x804035 <_ZL9xtal_freq+0x3>
    c910:	89 81       	ldd	r24, Y+1	; 0x01
    c912:	8a 83       	std	Y+2, r24	; 0x02
    c914:	ce 01       	movw	r24, r28
    c916:	02 96       	adiw	r24, 0x02	; 2
    c918:	41 e0       	ldi	r20, 0x01	; 1
    c91a:	bc 01       	movw	r22, r24
    c91c:	8f e0       	ldi	r24, 0x0F	; 15
    c91e:	0e 94 db 6b 	call	0xd7b6	; 0xd7b6 <_Z17si5351_write_bulkhPhh>
    c922:	98 2f       	mov	r25, r24
    c924:	80 91 b9 4a 	lds	r24, 0x4AB9	; 0x804ab9 <_ZZ11si5351_initE3err>
    c928:	89 2b       	or	r24, r25
    c92a:	80 93 b9 4a 	sts	0x4AB9, r24	; 0x804ab9 <_ZZ11si5351_initE3err>
    c92e:	90 91 b9 4a 	lds	r25, 0x4AB9	; 0x804ab9 <_ZZ11si5351_initE3err>
    c932:	81 e0       	ldi	r24, 0x01	; 1
    c934:	89 27       	eor	r24, r25
    c936:	80 93 b8 4a 	sts	0x4AB8, r24	; 0x804ab8 <g_si5351_initialized>
    c93a:	80 91 b9 4a 	lds	r24, 0x4AB9	; 0x804ab9 <_ZZ11si5351_initE3err>
    c93e:	28 96       	adiw	r28, 0x08	; 8
    c940:	cd bf       	out	0x3d, r28	; 61
    c942:	de bf       	out	0x3e, r29	; 62
    c944:	df 91       	pop	r29
    c946:	cf 91       	pop	r28
    c948:	08 95       	ret

0000c94a <si5351_set_freq>:
    c94a:	8f 92       	push	r8
    c94c:	af 92       	push	r10
    c94e:	cf 92       	push	r12
    c950:	df 92       	push	r13
    c952:	ef 92       	push	r14
    c954:	ff 92       	push	r15
    c956:	0f 93       	push	r16
    c958:	1f 93       	push	r17
    c95a:	cf 93       	push	r28
    c95c:	df 93       	push	r29
    c95e:	cd b7       	in	r28, 0x3d	; 61
    c960:	de b7       	in	r29, 0x3e	; 62
    c962:	6d 97       	sbiw	r28, 0x1d	; 29
    c964:	cd bf       	out	0x3d, r28	; 61
    c966:	de bf       	out	0x3e, r29	; 62
    c968:	68 8f       	std	Y+24, r22	; 0x18
    c96a:	79 8f       	std	Y+25, r23	; 0x19
    c96c:	8a 8f       	std	Y+26, r24	; 0x1a
    c96e:	9b 8f       	std	Y+27, r25	; 0x1b
    c970:	4c 8f       	std	Y+28, r20	; 0x1c
    c972:	2d 8f       	std	Y+29, r18	; 0x1d
    c974:	19 82       	std	Y+1, r1	; 0x01
    c976:	1a 82       	std	Y+2, r1	; 0x02
    c978:	1b 82       	std	Y+3, r1	; 0x03
    c97a:	1c 82       	std	Y+4, r1	; 0x04
    c97c:	1f 82       	std	Y+7, r1	; 0x07
    c97e:	1c 8a       	std	Y+20, r1	; 0x14
    c980:	1d 8a       	std	Y+21, r1	; 0x15
    c982:	90 91 b8 4a 	lds	r25, 0x4AB8	; 0x804ab8 <g_si5351_initialized>
    c986:	81 e0       	ldi	r24, 0x01	; 1
    c988:	89 27       	eor	r24, r25
    c98a:	88 23       	and	r24, r24
    c98c:	11 f0       	breq	.+4      	; 0xc992 <si5351_set_freq+0x48>
    c98e:	81 e0       	ldi	r24, 0x01	; 1
    c990:	6f c1       	rjmp	.+734    	; 0xcc70 <si5351_set_freq+0x326>
    c992:	88 8d       	ldd	r24, Y+24	; 0x18
    c994:	99 8d       	ldd	r25, Y+25	; 0x19
    c996:	aa 8d       	ldd	r26, Y+26	; 0x1a
    c998:	bb 8d       	ldd	r27, Y+27	; 0x1b
    c99a:	80 34       	cpi	r24, 0x40	; 64
    c99c:	92 44       	sbci	r25, 0x42	; 66
    c99e:	af 40       	sbci	r26, 0x0F	; 15
    c9a0:	b1 05       	cpc	r27, r1
    c9a2:	08 f1       	brcs	.+66     	; 0xc9e6 <si5351_set_freq+0x9c>
    c9a4:	88 8d       	ldd	r24, Y+24	; 0x18
    c9a6:	99 8d       	ldd	r25, Y+25	; 0x19
    c9a8:	aa 8d       	ldd	r26, Y+26	; 0x1a
    c9aa:	bb 8d       	ldd	r27, Y+27	; 0x1b
    c9ac:	24 e6       	ldi	r18, 0x64	; 100
    c9ae:	30 e0       	ldi	r19, 0x00	; 0
    c9b0:	40 e0       	ldi	r20, 0x00	; 0
    c9b2:	50 e0       	ldi	r21, 0x00	; 0
    c9b4:	bc 01       	movw	r22, r24
    c9b6:	cd 01       	movw	r24, r26
    c9b8:	0e 94 62 7a 	call	0xf4c4	; 0xf4c4 <__udivmodsi4>
    c9bc:	da 01       	movw	r26, r20
    c9be:	c9 01       	movw	r24, r18
    c9c0:	88 8f       	std	Y+24, r24	; 0x18
    c9c2:	99 8f       	std	Y+25, r25	; 0x19
    c9c4:	aa 8f       	std	Y+26, r26	; 0x1a
    c9c6:	bb 8f       	std	Y+27, r27	; 0x1b
    c9c8:	28 8d       	ldd	r18, Y+24	; 0x18
    c9ca:	39 8d       	ldd	r19, Y+25	; 0x19
    c9cc:	4a 8d       	ldd	r20, Y+26	; 0x1a
    c9ce:	5b 8d       	ldd	r21, Y+27	; 0x1b
    c9d0:	84 e6       	ldi	r24, 0x64	; 100
    c9d2:	90 e0       	ldi	r25, 0x00	; 0
    c9d4:	dc 01       	movw	r26, r24
    c9d6:	0e 94 bb 7a 	call	0xf576	; 0xf576 <__muluhisi3>
    c9da:	dc 01       	movw	r26, r24
    c9dc:	cb 01       	movw	r24, r22
    c9de:	88 8f       	std	Y+24, r24	; 0x18
    c9e0:	99 8f       	std	Y+25, r25	; 0x19
    c9e2:	aa 8f       	std	Y+26, r26	; 0x1a
    c9e4:	bb 8f       	std	Y+27, r27	; 0x1b
    c9e6:	8c 8d       	ldd	r24, Y+28	; 0x1c
    c9e8:	88 2f       	mov	r24, r24
    c9ea:	90 e0       	ldi	r25, 0x00	; 0
    c9ec:	81 30       	cpi	r24, 0x01	; 1
    c9ee:	91 05       	cpc	r25, r1
    c9f0:	e9 f0       	breq	.+58     	; 0xca2c <si5351_set_freq+0xe2>
    c9f2:	82 30       	cpi	r24, 0x02	; 2
    c9f4:	91 05       	cpc	r25, r1
    c9f6:	09 f4       	brne	.+2      	; 0xc9fa <si5351_set_freq+0xb0>
    c9f8:	3f c0       	rjmp	.+126    	; 0xca78 <si5351_set_freq+0x12e>
    c9fa:	89 2b       	or	r24, r25
    c9fc:	09 f0       	breq	.+2      	; 0xca00 <si5351_set_freq+0xb6>
    c9fe:	62 c0       	rjmp	.+196    	; 0xcac4 <si5351_set_freq+0x17a>
    ca00:	80 91 ab 4a 	lds	r24, 0x4AAB	; 0x804aab <_ZL17enabledClocksMask>
    ca04:	81 60       	ori	r24, 0x01	; 1
    ca06:	80 93 ab 4a 	sts	0x4AAB, r24	; 0x804aab <_ZL17enabledClocksMask>
    ca0a:	80 e1       	ldi	r24, 0x10	; 16
    ca0c:	8e 83       	std	Y+6, r24	; 0x06
    ca0e:	81 e0       	ldi	r24, 0x01	; 1
    ca10:	8d 83       	std	Y+5, r24	; 0x05
    ca12:	88 8d       	ldd	r24, Y+24	; 0x18
    ca14:	99 8d       	ldd	r25, Y+25	; 0x19
    ca16:	aa 8d       	ldd	r26, Y+26	; 0x1a
    ca18:	bb 8d       	ldd	r27, Y+27	; 0x1b
    ca1a:	80 93 ac 4a 	sts	0x4AAC, r24	; 0x804aac <_ZL9clock_out>
    ca1e:	90 93 ad 4a 	sts	0x4AAD, r25	; 0x804aad <_ZL9clock_out+0x1>
    ca22:	a0 93 ae 4a 	sts	0x4AAE, r26	; 0x804aae <_ZL9clock_out+0x2>
    ca26:	b0 93 af 4a 	sts	0x4AAF, r27	; 0x804aaf <_ZL9clock_out+0x3>
    ca2a:	4e c0       	rjmp	.+156    	; 0xcac8 <si5351_set_freq+0x17e>
    ca2c:	80 91 ab 4a 	lds	r24, 0x4AAB	; 0x804aab <_ZL17enabledClocksMask>
    ca30:	82 60       	ori	r24, 0x02	; 2
    ca32:	80 93 ab 4a 	sts	0x4AAB, r24	; 0x804aab <_ZL17enabledClocksMask>
    ca36:	81 e1       	ldi	r24, 0x11	; 17
    ca38:	8e 83       	std	Y+6, r24	; 0x06
    ca3a:	80 91 ab 4a 	lds	r24, 0x4AAB	; 0x804aab <_ZL17enabledClocksMask>
    ca3e:	80 95       	com	r24
    ca40:	8a 6f       	ori	r24, 0xFA	; 250
    ca42:	8e 8b       	std	Y+22, r24	; 0x16
    ca44:	ce 01       	movw	r24, r28
    ca46:	46 96       	adiw	r24, 0x16	; 22
    ca48:	41 e0       	ldi	r20, 0x01	; 1
    ca4a:	bc 01       	movw	r22, r24
    ca4c:	83 e0       	ldi	r24, 0x03	; 3
    ca4e:	0e 94 db 6b 	call	0xd7b6	; 0xd7b6 <_Z17si5351_write_bulkhPhh>
    ca52:	88 23       	and	r24, r24
    ca54:	11 f0       	breq	.+4      	; 0xca5a <si5351_set_freq+0x110>
    ca56:	81 e0       	ldi	r24, 0x01	; 1
    ca58:	0b c1       	rjmp	.+534    	; 0xcc70 <si5351_set_freq+0x326>
    ca5a:	82 e0       	ldi	r24, 0x02	; 2
    ca5c:	8d 83       	std	Y+5, r24	; 0x05
    ca5e:	88 8d       	ldd	r24, Y+24	; 0x18
    ca60:	99 8d       	ldd	r25, Y+25	; 0x19
    ca62:	aa 8d       	ldd	r26, Y+26	; 0x1a
    ca64:	bb 8d       	ldd	r27, Y+27	; 0x1b
    ca66:	80 93 b0 4a 	sts	0x4AB0, r24	; 0x804ab0 <_ZL9clock_out+0x4>
    ca6a:	90 93 b1 4a 	sts	0x4AB1, r25	; 0x804ab1 <_ZL9clock_out+0x5>
    ca6e:	a0 93 b2 4a 	sts	0x4AB2, r26	; 0x804ab2 <_ZL9clock_out+0x6>
    ca72:	b0 93 b3 4a 	sts	0x4AB3, r27	; 0x804ab3 <_ZL9clock_out+0x7>
    ca76:	28 c0       	rjmp	.+80     	; 0xcac8 <si5351_set_freq+0x17e>
    ca78:	80 91 ab 4a 	lds	r24, 0x4AAB	; 0x804aab <_ZL17enabledClocksMask>
    ca7c:	84 60       	ori	r24, 0x04	; 4
    ca7e:	80 93 ab 4a 	sts	0x4AAB, r24	; 0x804aab <_ZL17enabledClocksMask>
    ca82:	82 e1       	ldi	r24, 0x12	; 18
    ca84:	8e 83       	std	Y+6, r24	; 0x06
    ca86:	80 91 ab 4a 	lds	r24, 0x4AAB	; 0x804aab <_ZL17enabledClocksMask>
    ca8a:	80 95       	com	r24
    ca8c:	8c 6f       	ori	r24, 0xFC	; 252
    ca8e:	8e 8b       	std	Y+22, r24	; 0x16
    ca90:	ce 01       	movw	r24, r28
    ca92:	46 96       	adiw	r24, 0x16	; 22
    ca94:	41 e0       	ldi	r20, 0x01	; 1
    ca96:	bc 01       	movw	r22, r24
    ca98:	83 e0       	ldi	r24, 0x03	; 3
    ca9a:	0e 94 db 6b 	call	0xd7b6	; 0xd7b6 <_Z17si5351_write_bulkhPhh>
    ca9e:	88 23       	and	r24, r24
    caa0:	11 f0       	breq	.+4      	; 0xcaa6 <si5351_set_freq+0x15c>
    caa2:	81 e0       	ldi	r24, 0x01	; 1
    caa4:	e5 c0       	rjmp	.+458    	; 0xcc70 <si5351_set_freq+0x326>
    caa6:	82 e0       	ldi	r24, 0x02	; 2
    caa8:	8d 83       	std	Y+5, r24	; 0x05
    caaa:	88 8d       	ldd	r24, Y+24	; 0x18
    caac:	99 8d       	ldd	r25, Y+25	; 0x19
    caae:	aa 8d       	ldd	r26, Y+26	; 0x1a
    cab0:	bb 8d       	ldd	r27, Y+27	; 0x1b
    cab2:	80 93 b4 4a 	sts	0x4AB4, r24	; 0x804ab4 <_ZL9clock_out+0x8>
    cab6:	90 93 b5 4a 	sts	0x4AB5, r25	; 0x804ab5 <_ZL9clock_out+0x9>
    caba:	a0 93 b6 4a 	sts	0x4AB6, r26	; 0x804ab6 <_ZL9clock_out+0xa>
    cabe:	b0 93 b7 4a 	sts	0x4AB7, r27	; 0x804ab7 <_ZL9clock_out+0xb>
    cac2:	02 c0       	rjmp	.+4      	; 0xcac8 <si5351_set_freq+0x17e>
    cac4:	81 e0       	ldi	r24, 0x01	; 1
    cac6:	d4 c0       	rjmp	.+424    	; 0xcc70 <si5351_set_freq+0x326>
    cac8:	8d 81       	ldd	r24, Y+5	; 0x05
    caca:	81 30       	cpi	r24, 0x01	; 1
    cacc:	61 f0       	breq	.+24     	; 0xcae6 <si5351_set_freq+0x19c>
    cace:	80 91 a7 4a 	lds	r24, 0x4AA7	; 0x804aa7 <_ZL8freqVCOB>
    cad2:	90 91 a8 4a 	lds	r25, 0x4AA8	; 0x804aa8 <_ZL8freqVCOB+0x1>
    cad6:	a0 91 a9 4a 	lds	r26, 0x4AA9	; 0x804aa9 <_ZL8freqVCOB+0x2>
    cada:	b0 91 aa 4a 	lds	r27, 0x4AAA	; 0x804aaa <_ZL8freqVCOB+0x3>
    cade:	89 2b       	or	r24, r25
    cae0:	8a 2b       	or	r24, r26
    cae2:	8b 2b       	or	r24, r27
    cae4:	c9 f4       	brne	.+50     	; 0xcb18 <si5351_set_freq+0x1ce>
    cae6:	be 01       	movw	r22, r28
    cae8:	6b 5e       	subi	r22, 0xEB	; 235
    caea:	7f 4f       	sbci	r23, 0xFF	; 255
    caec:	9e 01       	movw	r18, r28
    caee:	2c 5e       	subi	r18, 0xEC	; 236
    caf0:	3f 4f       	sbci	r19, 0xFF	; 255
    caf2:	ae 01       	movw	r20, r28
    caf4:	48 5f       	subi	r20, 0xF8	; 248
    caf6:	5f 4f       	sbci	r21, 0xFF	; 255
    caf8:	88 8d       	ldd	r24, Y+24	; 0x18
    cafa:	99 8d       	ldd	r25, Y+25	; 0x19
    cafc:	aa 8d       	ldd	r26, Y+26	; 0x1a
    cafe:	bb 8d       	ldd	r27, Y+27	; 0x1b
    cb00:	8b 01       	movw	r16, r22
    cb02:	bc 01       	movw	r22, r24
    cb04:	cd 01       	movw	r24, r26
    cb06:	0e 94 50 69 	call	0xd2a0	; 0xd2a0 <_Z15multisynth_calcmP13u_si5351_regsPbS1_>
    cb0a:	dc 01       	movw	r26, r24
    cb0c:	cb 01       	movw	r24, r22
    cb0e:	89 83       	std	Y+1, r24	; 0x01
    cb10:	9a 83       	std	Y+2, r25	; 0x02
    cb12:	ab 83       	std	Y+3, r26	; 0x03
    cb14:	bc 83       	std	Y+4, r27	; 0x04
    cb16:	18 c0       	rjmp	.+48     	; 0xcb48 <si5351_set_freq+0x1fe>
    cb18:	be 01       	movw	r22, r28
    cb1a:	6b 5e       	subi	r22, 0xEB	; 235
    cb1c:	7f 4f       	sbci	r23, 0xFF	; 255
    cb1e:	9e 01       	movw	r18, r28
    cb20:	2c 5e       	subi	r18, 0xEC	; 236
    cb22:	3f 4f       	sbci	r19, 0xFF	; 255
    cb24:	ae 01       	movw	r20, r28
    cb26:	48 5f       	subi	r20, 0xF8	; 248
    cb28:	5f 4f       	sbci	r21, 0xFF	; 255
    cb2a:	88 8d       	ldd	r24, Y+24	; 0x18
    cb2c:	99 8d       	ldd	r25, Y+25	; 0x19
    cb2e:	aa 8d       	ldd	r26, Y+26	; 0x1a
    cb30:	bb 8d       	ldd	r27, Y+27	; 0x1b
    cb32:	8b 01       	movw	r16, r22
    cb34:	bc 01       	movw	r22, r24
    cb36:	cd 01       	movw	r24, r26
    cb38:	0e 94 5a 6a 	call	0xd4b4	; 0xd4b4 <_Z19multisynth_estimatemP13u_si5351_regsPbS1_>
    cb3c:	dc 01       	movw	r26, r24
    cb3e:	cb 01       	movw	r24, r22
    cb40:	88 8f       	std	Y+24, r24	; 0x18
    cb42:	99 8f       	std	Y+25, r25	; 0x19
    cb44:	aa 8f       	std	Y+26, r26	; 0x1a
    cb46:	bb 8f       	std	Y+27, r27	; 0x1b
    cb48:	6d 81       	ldd	r22, Y+5	; 0x05
    cb4a:	8c 8d       	ldd	r24, Y+28	; 0x1c
    cb4c:	0e 94 3f 6c 	call	0xd87e	; 0xd87e <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll>
    cb50:	88 23       	and	r24, r24
    cb52:	11 f0       	breq	.+4      	; 0xcb58 <si5351_set_freq+0x20e>
    cb54:	81 e0       	ldi	r24, 0x01	; 1
    cb56:	8c c0       	rjmp	.+280    	; 0xcc70 <si5351_set_freq+0x326>
    cb58:	8d 89       	ldd	r24, Y+21	; 0x15
    cb5a:	9c 89       	ldd	r25, Y+20	; 0x14
    cb5c:	8f 93       	push	r24
    cb5e:	8f 80       	ldd	r8, Y+7	; 0x07
    cb60:	a9 2e       	mov	r10, r25
    cb62:	c8 84       	ldd	r12, Y+8	; 0x08
    cb64:	d9 84       	ldd	r13, Y+9	; 0x09
    cb66:	ea 84       	ldd	r14, Y+10	; 0x0a
    cb68:	fb 84       	ldd	r15, Y+11	; 0x0b
    cb6a:	0c 85       	ldd	r16, Y+12	; 0x0c
    cb6c:	1d 85       	ldd	r17, Y+13	; 0x0d
    cb6e:	2e 85       	ldd	r18, Y+14	; 0x0e
    cb70:	3f 85       	ldd	r19, Y+15	; 0x0f
    cb72:	48 89       	ldd	r20, Y+16	; 0x10
    cb74:	59 89       	ldd	r21, Y+17	; 0x11
    cb76:	6a 89       	ldd	r22, Y+18	; 0x12
    cb78:	7b 89       	ldd	r23, Y+19	; 0x13
    cb7a:	8c 8d       	ldd	r24, Y+28	; 0x1c
    cb7c:	0e 94 7c 6c 	call	0xd8f8	; 0xd8f8 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb>
    cb80:	0f 90       	pop	r0
    cb82:	88 23       	and	r24, r24
    cb84:	11 f0       	breq	.+4      	; 0xcb8a <si5351_set_freq+0x240>
    cb86:	81 e0       	ldi	r24, 0x01	; 1
    cb88:	73 c0       	rjmp	.+230    	; 0xcc70 <si5351_set_freq+0x326>
    cb8a:	89 81       	ldd	r24, Y+1	; 0x01
    cb8c:	9a 81       	ldd	r25, Y+2	; 0x02
    cb8e:	ab 81       	ldd	r26, Y+3	; 0x03
    cb90:	bc 81       	ldd	r27, Y+4	; 0x04
    cb92:	89 2b       	or	r24, r25
    cb94:	8a 2b       	or	r24, r26
    cb96:	8b 2b       	or	r24, r27
    cb98:	49 f0       	breq	.+18     	; 0xcbac <si5351_set_freq+0x262>
    cb9a:	89 81       	ldd	r24, Y+1	; 0x01
    cb9c:	9a 81       	ldd	r25, Y+2	; 0x02
    cb9e:	ab 81       	ldd	r26, Y+3	; 0x03
    cba0:	bc 81       	ldd	r27, Y+4	; 0x04
    cba2:	4d 81       	ldd	r20, Y+5	; 0x05
    cba4:	bc 01       	movw	r22, r24
    cba6:	cd 01       	movw	r24, r26
    cba8:	0e 94 ee 66 	call	0xcddc	; 0xcddc <_Z7set_pllm10si5351_pll>
    cbac:	8d 8d       	ldd	r24, Y+29	; 0x1d
    cbae:	88 23       	and	r24, r24
    cbb0:	71 f0       	breq	.+28     	; 0xcbce <si5351_set_freq+0x284>
    cbb2:	80 91 ab 4a 	lds	r24, 0x4AAB	; 0x804aab <_ZL17enabledClocksMask>
    cbb6:	8e 8b       	std	Y+22, r24	; 0x16
    cbb8:	ce 01       	movw	r24, r28
    cbba:	46 96       	adiw	r24, 0x16	; 22
    cbbc:	41 e0       	ldi	r20, 0x01	; 1
    cbbe:	bc 01       	movw	r22, r24
    cbc0:	83 e0       	ldi	r24, 0x03	; 3
    cbc2:	0e 94 db 6b 	call	0xd7b6	; 0xd7b6 <_Z17si5351_write_bulkhPhh>
    cbc6:	88 23       	and	r24, r24
    cbc8:	89 f0       	breq	.+34     	; 0xcbec <si5351_set_freq+0x2a2>
    cbca:	81 e0       	ldi	r24, 0x01	; 1
    cbcc:	51 c0       	rjmp	.+162    	; 0xcc70 <si5351_set_freq+0x326>
    cbce:	80 91 ab 4a 	lds	r24, 0x4AAB	; 0x804aab <_ZL17enabledClocksMask>
    cbd2:	80 95       	com	r24
    cbd4:	8e 8b       	std	Y+22, r24	; 0x16
    cbd6:	ce 01       	movw	r24, r28
    cbd8:	46 96       	adiw	r24, 0x16	; 22
    cbda:	41 e0       	ldi	r20, 0x01	; 1
    cbdc:	bc 01       	movw	r22, r24
    cbde:	83 e0       	ldi	r24, 0x03	; 3
    cbe0:	0e 94 db 6b 	call	0xd7b6	; 0xd7b6 <_Z17si5351_write_bulkhPhh>
    cbe4:	88 23       	and	r24, r24
    cbe6:	11 f0       	breq	.+4      	; 0xcbec <si5351_set_freq+0x2a2>
    cbe8:	81 e0       	ldi	r24, 0x01	; 1
    cbea:	42 c0       	rjmp	.+132    	; 0xcc70 <si5351_set_freq+0x326>
    cbec:	8d 81       	ldd	r24, Y+5	; 0x05
    cbee:	81 30       	cpi	r24, 0x01	; 1
    cbf0:	69 f4       	brne	.+26     	; 0xcc0c <si5351_set_freq+0x2c2>
    cbf2:	8c e4       	ldi	r24, 0x4C	; 76
    cbf4:	8e 8b       	std	Y+22, r24	; 0x16
    cbf6:	ce 01       	movw	r24, r28
    cbf8:	46 96       	adiw	r24, 0x16	; 22
    cbfa:	41 e0       	ldi	r20, 0x01	; 1
    cbfc:	bc 01       	movw	r22, r24
    cbfe:	8e 81       	ldd	r24, Y+6	; 0x06
    cc00:	0e 94 db 6b 	call	0xd7b6	; 0xd7b6 <_Z17si5351_write_bulkhPhh>
    cc04:	88 23       	and	r24, r24
    cc06:	99 f1       	breq	.+102    	; 0xcc6e <si5351_set_freq+0x324>
    cc08:	81 e0       	ldi	r24, 0x01	; 1
    cc0a:	32 c0       	rjmp	.+100    	; 0xcc70 <si5351_set_freq+0x326>
    cc0c:	8c 89       	ldd	r24, Y+20	; 0x14
    cc0e:	88 23       	and	r24, r24
    cc10:	69 f0       	breq	.+26     	; 0xcc2c <si5351_set_freq+0x2e2>
    cc12:	8c e6       	ldi	r24, 0x6C	; 108
    cc14:	8e 8b       	std	Y+22, r24	; 0x16
    cc16:	ce 01       	movw	r24, r28
    cc18:	46 96       	adiw	r24, 0x16	; 22
    cc1a:	41 e0       	ldi	r20, 0x01	; 1
    cc1c:	bc 01       	movw	r22, r24
    cc1e:	8e 81       	ldd	r24, Y+6	; 0x06
    cc20:	0e 94 db 6b 	call	0xd7b6	; 0xd7b6 <_Z17si5351_write_bulkhPhh>
    cc24:	88 23       	and	r24, r24
    cc26:	79 f0       	breq	.+30     	; 0xcc46 <si5351_set_freq+0x2fc>
    cc28:	81 e0       	ldi	r24, 0x01	; 1
    cc2a:	22 c0       	rjmp	.+68     	; 0xcc70 <si5351_set_freq+0x326>
    cc2c:	8c e2       	ldi	r24, 0x2C	; 44
    cc2e:	8e 8b       	std	Y+22, r24	; 0x16
    cc30:	ce 01       	movw	r24, r28
    cc32:	46 96       	adiw	r24, 0x16	; 22
    cc34:	41 e0       	ldi	r20, 0x01	; 1
    cc36:	bc 01       	movw	r22, r24
    cc38:	8e 81       	ldd	r24, Y+6	; 0x06
    cc3a:	0e 94 db 6b 	call	0xd7b6	; 0xd7b6 <_Z17si5351_write_bulkhPhh>
    cc3e:	88 23       	and	r24, r24
    cc40:	11 f0       	breq	.+4      	; 0xcc46 <si5351_set_freq+0x2fc>
    cc42:	81 e0       	ldi	r24, 0x01	; 1
    cc44:	15 c0       	rjmp	.+42     	; 0xcc70 <si5351_set_freq+0x326>
    cc46:	89 81       	ldd	r24, Y+1	; 0x01
    cc48:	9a 81       	ldd	r25, Y+2	; 0x02
    cc4a:	ab 81       	ldd	r26, Y+3	; 0x03
    cc4c:	bc 81       	ldd	r27, Y+4	; 0x04
    cc4e:	89 2b       	or	r24, r25
    cc50:	8a 2b       	or	r24, r26
    cc52:	8b 2b       	or	r24, r27
    cc54:	61 f0       	breq	.+24     	; 0xcc6e <si5351_set_freq+0x324>
    cc56:	89 81       	ldd	r24, Y+1	; 0x01
    cc58:	9a 81       	ldd	r25, Y+2	; 0x02
    cc5a:	ab 81       	ldd	r26, Y+3	; 0x03
    cc5c:	bc 81       	ldd	r27, Y+4	; 0x04
    cc5e:	80 93 a7 4a 	sts	0x4AA7, r24	; 0x804aa7 <_ZL8freqVCOB>
    cc62:	90 93 a8 4a 	sts	0x4AA8, r25	; 0x804aa8 <_ZL8freqVCOB+0x1>
    cc66:	a0 93 a9 4a 	sts	0x4AA9, r26	; 0x804aa9 <_ZL8freqVCOB+0x2>
    cc6a:	b0 93 aa 4a 	sts	0x4AAA, r27	; 0x804aaa <_ZL8freqVCOB+0x3>
    cc6e:	80 e0       	ldi	r24, 0x00	; 0
    cc70:	6d 96       	adiw	r28, 0x1d	; 29
    cc72:	cd bf       	out	0x3d, r28	; 61
    cc74:	de bf       	out	0x3e, r29	; 62
    cc76:	df 91       	pop	r29
    cc78:	cf 91       	pop	r28
    cc7a:	1f 91       	pop	r17
    cc7c:	0f 91       	pop	r16
    cc7e:	ff 90       	pop	r15
    cc80:	ef 90       	pop	r14
    cc82:	df 90       	pop	r13
    cc84:	cf 90       	pop	r12
    cc86:	af 90       	pop	r10
    cc88:	8f 90       	pop	r8
    cc8a:	08 95       	ret

0000cc8c <si5351_clock_enable>:
    cc8c:	cf 93       	push	r28
    cc8e:	df 93       	push	r29
    cc90:	cd b7       	in	r28, 0x3d	; 61
    cc92:	de b7       	in	r29, 0x3e	; 62
    cc94:	25 97       	sbiw	r28, 0x05	; 5
    cc96:	cd bf       	out	0x3d, r28	; 61
    cc98:	de bf       	out	0x3e, r29	; 62
    cc9a:	8c 83       	std	Y+4, r24	; 0x04
    cc9c:	6d 83       	std	Y+5, r22	; 0x05
    cc9e:	ce 01       	movw	r24, r28
    cca0:	02 96       	adiw	r24, 0x02	; 2
    cca2:	41 e0       	ldi	r20, 0x01	; 1
    cca4:	bc 01       	movw	r22, r24
    cca6:	83 e0       	ldi	r24, 0x03	; 3
    cca8:	0e 94 0d 6c 	call	0xd81a	; 0xd81a <_Z16si5351_read_bulkhPhh>
    ccac:	88 23       	and	r24, r24
    ccae:	11 f0       	breq	.+4      	; 0xccb4 <si5351_clock_enable+0x28>
    ccb0:	8c ef       	ldi	r24, 0xFC	; 252
    ccb2:	31 c0       	rjmp	.+98     	; 0xcd16 <si5351_clock_enable+0x8a>
    ccb4:	8a 81       	ldd	r24, Y+2	; 0x02
    ccb6:	89 83       	std	Y+1, r24	; 0x01
    ccb8:	8d 81       	ldd	r24, Y+5	; 0x05
    ccba:	88 23       	and	r24, r24
    ccbc:	81 f0       	breq	.+32     	; 0xccde <si5351_clock_enable+0x52>
    ccbe:	8c 81       	ldd	r24, Y+4	; 0x04
    ccc0:	28 2f       	mov	r18, r24
    ccc2:	30 e0       	ldi	r19, 0x00	; 0
    ccc4:	81 e0       	ldi	r24, 0x01	; 1
    ccc6:	90 e0       	ldi	r25, 0x00	; 0
    ccc8:	02 c0       	rjmp	.+4      	; 0xccce <si5351_clock_enable+0x42>
    ccca:	88 0f       	add	r24, r24
    cccc:	99 1f       	adc	r25, r25
    ccce:	2a 95       	dec	r18
    ccd0:	e2 f7       	brpl	.-8      	; 0xccca <si5351_clock_enable+0x3e>
    ccd2:	98 2f       	mov	r25, r24
    ccd4:	90 95       	com	r25
    ccd6:	89 81       	ldd	r24, Y+1	; 0x01
    ccd8:	89 23       	and	r24, r25
    ccda:	89 83       	std	Y+1, r24	; 0x01
    ccdc:	0e c0       	rjmp	.+28     	; 0xccfa <si5351_clock_enable+0x6e>
    ccde:	8c 81       	ldd	r24, Y+4	; 0x04
    cce0:	28 2f       	mov	r18, r24
    cce2:	30 e0       	ldi	r19, 0x00	; 0
    cce4:	81 e0       	ldi	r24, 0x01	; 1
    cce6:	90 e0       	ldi	r25, 0x00	; 0
    cce8:	02 c0       	rjmp	.+4      	; 0xccee <si5351_clock_enable+0x62>
    ccea:	88 0f       	add	r24, r24
    ccec:	99 1f       	adc	r25, r25
    ccee:	2a 95       	dec	r18
    ccf0:	e2 f7       	brpl	.-8      	; 0xccea <si5351_clock_enable+0x5e>
    ccf2:	98 2f       	mov	r25, r24
    ccf4:	89 81       	ldd	r24, Y+1	; 0x01
    ccf6:	89 2b       	or	r24, r25
    ccf8:	89 83       	std	Y+1, r24	; 0x01
    ccfa:	89 81       	ldd	r24, Y+1	; 0x01
    ccfc:	8a 83       	std	Y+2, r24	; 0x02
    ccfe:	ce 01       	movw	r24, r28
    cd00:	02 96       	adiw	r24, 0x02	; 2
    cd02:	41 e0       	ldi	r20, 0x01	; 1
    cd04:	bc 01       	movw	r22, r24
    cd06:	83 e0       	ldi	r24, 0x03	; 3
    cd08:	0e 94 db 6b 	call	0xd7b6	; 0xd7b6 <_Z17si5351_write_bulkhPhh>
    cd0c:	88 23       	and	r24, r24
    cd0e:	11 f0       	breq	.+4      	; 0xcd14 <si5351_clock_enable+0x88>
    cd10:	8c ef       	ldi	r24, 0xFC	; 252
    cd12:	01 c0       	rjmp	.+2      	; 0xcd16 <si5351_clock_enable+0x8a>
    cd14:	80 e0       	ldi	r24, 0x00	; 0
    cd16:	25 96       	adiw	r28, 0x05	; 5
    cd18:	cd bf       	out	0x3d, r28	; 61
    cd1a:	de bf       	out	0x3e, r29	; 62
    cd1c:	df 91       	pop	r29
    cd1e:	cf 91       	pop	r28
    cd20:	08 95       	ret

0000cd22 <si5351_drive_strength>:
    cd22:	cf 93       	push	r28
    cd24:	df 93       	push	r29
    cd26:	cd b7       	in	r28, 0x3d	; 61
    cd28:	de b7       	in	r29, 0x3e	; 62
    cd2a:	26 97       	sbiw	r28, 0x06	; 6
    cd2c:	cd bf       	out	0x3d, r28	; 61
    cd2e:	de bf       	out	0x3e, r29	; 62
    cd30:	8d 83       	std	Y+5, r24	; 0x05
    cd32:	6e 83       	std	Y+6, r22	; 0x06
    cd34:	83 e0       	ldi	r24, 0x03	; 3
    cd36:	8a 83       	std	Y+2, r24	; 0x02
    cd38:	8d 81       	ldd	r24, Y+5	; 0x05
    cd3a:	20 e1       	ldi	r18, 0x10	; 16
    cd3c:	28 0f       	add	r18, r24
    cd3e:	ce 01       	movw	r24, r28
    cd40:	03 96       	adiw	r24, 0x03	; 3
    cd42:	41 e0       	ldi	r20, 0x01	; 1
    cd44:	bc 01       	movw	r22, r24
    cd46:	82 2f       	mov	r24, r18
    cd48:	0e 94 0d 6c 	call	0xd81a	; 0xd81a <_Z16si5351_read_bulkhPhh>
    cd4c:	88 23       	and	r24, r24
    cd4e:	11 f0       	breq	.+4      	; 0xcd54 <si5351_drive_strength+0x32>
    cd50:	8b ef       	ldi	r24, 0xFB	; 251
    cd52:	3e c0       	rjmp	.+124    	; 0xcdd0 <si5351_drive_strength+0xae>
    cd54:	8b 81       	ldd	r24, Y+3	; 0x03
    cd56:	89 83       	std	Y+1, r24	; 0x01
    cd58:	8e 81       	ldd	r24, Y+6	; 0x06
    cd5a:	88 2f       	mov	r24, r24
    cd5c:	90 e0       	ldi	r25, 0x00	; 0
    cd5e:	81 30       	cpi	r24, 0x01	; 1
    cd60:	91 05       	cpc	r25, r1
    cd62:	81 f0       	breq	.+32     	; 0xcd84 <si5351_drive_strength+0x62>
    cd64:	82 30       	cpi	r24, 0x02	; 2
    cd66:	91 05       	cpc	r25, r1
    cd68:	1c f4       	brge	.+6      	; 0xcd70 <si5351_drive_strength+0x4e>
    cd6a:	89 2b       	or	r24, r25
    cd6c:	39 f0       	breq	.+14     	; 0xcd7c <si5351_drive_strength+0x5a>
    cd6e:	1f c0       	rjmp	.+62     	; 0xcdae <si5351_drive_strength+0x8c>
    cd70:	82 30       	cpi	r24, 0x02	; 2
    cd72:	91 05       	cpc	r25, r1
    cd74:	71 f0       	breq	.+28     	; 0xcd92 <si5351_drive_strength+0x70>
    cd76:	03 97       	sbiw	r24, 0x03	; 3
    cd78:	99 f0       	breq	.+38     	; 0xcda0 <si5351_drive_strength+0x7e>
    cd7a:	19 c0       	rjmp	.+50     	; 0xcdae <si5351_drive_strength+0x8c>
    cd7c:	89 81       	ldd	r24, Y+1	; 0x01
    cd7e:	8c 7f       	andi	r24, 0xFC	; 252
    cd80:	89 83       	std	Y+1, r24	; 0x01
    cd82:	15 c0       	rjmp	.+42     	; 0xcdae <si5351_drive_strength+0x8c>
    cd84:	89 81       	ldd	r24, Y+1	; 0x01
    cd86:	8c 7f       	andi	r24, 0xFC	; 252
    cd88:	89 83       	std	Y+1, r24	; 0x01
    cd8a:	89 81       	ldd	r24, Y+1	; 0x01
    cd8c:	81 60       	ori	r24, 0x01	; 1
    cd8e:	89 83       	std	Y+1, r24	; 0x01
    cd90:	0e c0       	rjmp	.+28     	; 0xcdae <si5351_drive_strength+0x8c>
    cd92:	89 81       	ldd	r24, Y+1	; 0x01
    cd94:	8c 7f       	andi	r24, 0xFC	; 252
    cd96:	89 83       	std	Y+1, r24	; 0x01
    cd98:	89 81       	ldd	r24, Y+1	; 0x01
    cd9a:	82 60       	ori	r24, 0x02	; 2
    cd9c:	89 83       	std	Y+1, r24	; 0x01
    cd9e:	07 c0       	rjmp	.+14     	; 0xcdae <si5351_drive_strength+0x8c>
    cda0:	89 81       	ldd	r24, Y+1	; 0x01
    cda2:	8c 7f       	andi	r24, 0xFC	; 252
    cda4:	89 83       	std	Y+1, r24	; 0x01
    cda6:	89 81       	ldd	r24, Y+1	; 0x01
    cda8:	83 60       	ori	r24, 0x03	; 3
    cdaa:	89 83       	std	Y+1, r24	; 0x01
    cdac:	00 00       	nop
    cdae:	89 81       	ldd	r24, Y+1	; 0x01
    cdb0:	8b 83       	std	Y+3, r24	; 0x03
    cdb2:	8d 81       	ldd	r24, Y+5	; 0x05
    cdb4:	20 e1       	ldi	r18, 0x10	; 16
    cdb6:	28 0f       	add	r18, r24
    cdb8:	ce 01       	movw	r24, r28
    cdba:	03 96       	adiw	r24, 0x03	; 3
    cdbc:	41 e0       	ldi	r20, 0x01	; 1
    cdbe:	bc 01       	movw	r22, r24
    cdc0:	82 2f       	mov	r24, r18
    cdc2:	0e 94 db 6b 	call	0xd7b6	; 0xd7b6 <_Z17si5351_write_bulkhPhh>
    cdc6:	88 23       	and	r24, r24
    cdc8:	11 f0       	breq	.+4      	; 0xcdce <si5351_drive_strength+0xac>
    cdca:	8b ef       	ldi	r24, 0xFB	; 251
    cdcc:	01 c0       	rjmp	.+2      	; 0xcdd0 <si5351_drive_strength+0xae>
    cdce:	80 e0       	ldi	r24, 0x00	; 0
    cdd0:	26 96       	adiw	r28, 0x06	; 6
    cdd2:	cd bf       	out	0x3d, r28	; 61
    cdd4:	de bf       	out	0x3e, r29	; 62
    cdd6:	df 91       	pop	r29
    cdd8:	cf 91       	pop	r28
    cdda:	08 95       	ret

0000cddc <_Z7set_pllm10si5351_pll>:
    cddc:	cf 93       	push	r28
    cdde:	df 93       	push	r29
    cde0:	cd b7       	in	r28, 0x3d	; 61
    cde2:	de b7       	in	r29, 0x3e	; 62
    cde4:	6c 97       	sbiw	r28, 0x1c	; 28
    cde6:	cd bf       	out	0x3d, r28	; 61
    cde8:	de bf       	out	0x3e, r29	; 62
    cdea:	68 8f       	std	Y+24, r22	; 0x18
    cdec:	79 8f       	std	Y+25, r23	; 0x19
    cdee:	8a 8f       	std	Y+26, r24	; 0x1a
    cdf0:	9b 8f       	std	Y+27, r25	; 0x1b
    cdf2:	4c 8f       	std	Y+28, r20	; 0x1c
    cdf4:	9e 01       	movw	r18, r28
    cdf6:	2e 5f       	subi	r18, 0xFE	; 254
    cdf8:	3f 4f       	sbci	r19, 0xFF	; 255
    cdfa:	88 8d       	ldd	r24, Y+24	; 0x18
    cdfc:	99 8d       	ldd	r25, Y+25	; 0x19
    cdfe:	aa 8d       	ldd	r26, Y+26	; 0x1a
    ce00:	bb 8d       	ldd	r27, Y+27	; 0x1b
    ce02:	a9 01       	movw	r20, r18
    ce04:	bc 01       	movw	r22, r24
    ce06:	cd 01       	movw	r24, r26
    ce08:	0e 94 b7 67 	call	0xcf6e	; 0xcf6e <_Z8pll_calcmP13u_si5351_regs>
    ce0c:	88 23       	and	r24, r24
    ce0e:	11 f0       	breq	.+4      	; 0xce14 <_Z7set_pllm10si5351_pll+0x38>
    ce10:	81 e0       	ldi	r24, 0x01	; 1
    ce12:	a7 c0       	rjmp	.+334    	; 0xcf62 <_Z7set_pllm10si5351_pll+0x186>
    ce14:	19 82       	std	Y+1, r1	; 0x01
    ce16:	89 81       	ldd	r24, Y+1	; 0x01
    ce18:	91 e0       	ldi	r25, 0x01	; 1
    ce1a:	98 0f       	add	r25, r24
    ce1c:	99 83       	std	Y+1, r25	; 0x01
    ce1e:	88 2f       	mov	r24, r24
    ce20:	90 e0       	ldi	r25, 0x00	; 0
    ce22:	4b 85       	ldd	r20, Y+11	; 0x0b
    ce24:	9e 01       	movw	r18, r28
    ce26:	22 5f       	subi	r18, 0xF2	; 242
    ce28:	3f 4f       	sbci	r19, 0xFF	; 255
    ce2a:	82 0f       	add	r24, r18
    ce2c:	93 1f       	adc	r25, r19
    ce2e:	fc 01       	movw	r30, r24
    ce30:	40 83       	st	Z, r20
    ce32:	89 81       	ldd	r24, Y+1	; 0x01
    ce34:	91 e0       	ldi	r25, 0x01	; 1
    ce36:	98 0f       	add	r25, r24
    ce38:	99 83       	std	Y+1, r25	; 0x01
    ce3a:	88 2f       	mov	r24, r24
    ce3c:	90 e0       	ldi	r25, 0x00	; 0
    ce3e:	4a 85       	ldd	r20, Y+10	; 0x0a
    ce40:	9e 01       	movw	r18, r28
    ce42:	22 5f       	subi	r18, 0xF2	; 242
    ce44:	3f 4f       	sbci	r19, 0xFF	; 255
    ce46:	82 0f       	add	r24, r18
    ce48:	93 1f       	adc	r25, r19
    ce4a:	fc 01       	movw	r30, r24
    ce4c:	40 83       	st	Z, r20
    ce4e:	89 81       	ldd	r24, Y+1	; 0x01
    ce50:	91 e0       	ldi	r25, 0x01	; 1
    ce52:	98 0f       	add	r25, r24
    ce54:	99 83       	std	Y+1, r25	; 0x01
    ce56:	88 2f       	mov	r24, r24
    ce58:	90 e0       	ldi	r25, 0x00	; 0
    ce5a:	2c 81       	ldd	r18, Y+4	; 0x04
    ce5c:	42 2f       	mov	r20, r18
    ce5e:	43 70       	andi	r20, 0x03	; 3
    ce60:	9e 01       	movw	r18, r28
    ce62:	22 5f       	subi	r18, 0xF2	; 242
    ce64:	3f 4f       	sbci	r19, 0xFF	; 255
    ce66:	82 0f       	add	r24, r18
    ce68:	93 1f       	adc	r25, r19
    ce6a:	fc 01       	movw	r30, r24
    ce6c:	40 83       	st	Z, r20
    ce6e:	89 81       	ldd	r24, Y+1	; 0x01
    ce70:	91 e0       	ldi	r25, 0x01	; 1
    ce72:	98 0f       	add	r25, r24
    ce74:	99 83       	std	Y+1, r25	; 0x01
    ce76:	88 2f       	mov	r24, r24
    ce78:	90 e0       	ldi	r25, 0x00	; 0
    ce7a:	4b 81       	ldd	r20, Y+3	; 0x03
    ce7c:	9e 01       	movw	r18, r28
    ce7e:	22 5f       	subi	r18, 0xF2	; 242
    ce80:	3f 4f       	sbci	r19, 0xFF	; 255
    ce82:	82 0f       	add	r24, r18
    ce84:	93 1f       	adc	r25, r19
    ce86:	fc 01       	movw	r30, r24
    ce88:	40 83       	st	Z, r20
    ce8a:	89 81       	ldd	r24, Y+1	; 0x01
    ce8c:	91 e0       	ldi	r25, 0x01	; 1
    ce8e:	98 0f       	add	r25, r24
    ce90:	99 83       	std	Y+1, r25	; 0x01
    ce92:	88 2f       	mov	r24, r24
    ce94:	90 e0       	ldi	r25, 0x00	; 0
    ce96:	4a 81       	ldd	r20, Y+2	; 0x02
    ce98:	9e 01       	movw	r18, r28
    ce9a:	22 5f       	subi	r18, 0xF2	; 242
    ce9c:	3f 4f       	sbci	r19, 0xFF	; 255
    ce9e:	82 0f       	add	r24, r18
    cea0:	93 1f       	adc	r25, r19
    cea2:	fc 01       	movw	r30, r24
    cea4:	40 83       	st	Z, r20
    cea6:	89 81       	ldd	r24, Y+1	; 0x01
    cea8:	88 2f       	mov	r24, r24
    ceaa:	90 e0       	ldi	r25, 0x00	; 0
    ceac:	2c 85       	ldd	r18, Y+12	; 0x0c
    ceae:	42 2f       	mov	r20, r18
    ceb0:	42 95       	swap	r20
    ceb2:	40 7f       	andi	r20, 0xF0	; 240
    ceb4:	9e 01       	movw	r18, r28
    ceb6:	22 5f       	subi	r18, 0xF2	; 242
    ceb8:	3f 4f       	sbci	r19, 0xFF	; 255
    ceba:	82 0f       	add	r24, r18
    cebc:	93 1f       	adc	r25, r19
    cebe:	fc 01       	movw	r30, r24
    cec0:	40 83       	st	Z, r20
    cec2:	29 81       	ldd	r18, Y+1	; 0x01
    cec4:	81 e0       	ldi	r24, 0x01	; 1
    cec6:	82 0f       	add	r24, r18
    cec8:	89 83       	std	Y+1, r24	; 0x01
    ceca:	82 2f       	mov	r24, r18
    cecc:	90 e0       	ldi	r25, 0x00	; 0
    cece:	22 2f       	mov	r18, r18
    ced0:	30 e0       	ldi	r19, 0x00	; 0
    ced2:	ae 01       	movw	r20, r28
    ced4:	42 5f       	subi	r20, 0xF2	; 242
    ced6:	5f 4f       	sbci	r21, 0xFF	; 255
    ced8:	24 0f       	add	r18, r20
    ceda:	35 1f       	adc	r19, r21
    cedc:	f9 01       	movw	r30, r18
    cede:	30 81       	ld	r19, Z
    cee0:	28 85       	ldd	r18, Y+8	; 0x08
    cee2:	2f 70       	andi	r18, 0x0F	; 15
    cee4:	43 2f       	mov	r20, r19
    cee6:	42 0f       	add	r20, r18
    cee8:	9e 01       	movw	r18, r28
    ceea:	22 5f       	subi	r18, 0xF2	; 242
    ceec:	3f 4f       	sbci	r19, 0xFF	; 255
    ceee:	82 0f       	add	r24, r18
    cef0:	93 1f       	adc	r25, r19
    cef2:	fc 01       	movw	r30, r24
    cef4:	40 83       	st	Z, r20
    cef6:	89 81       	ldd	r24, Y+1	; 0x01
    cef8:	91 e0       	ldi	r25, 0x01	; 1
    cefa:	98 0f       	add	r25, r24
    cefc:	99 83       	std	Y+1, r25	; 0x01
    cefe:	88 2f       	mov	r24, r24
    cf00:	90 e0       	ldi	r25, 0x00	; 0
    cf02:	4f 81       	ldd	r20, Y+7	; 0x07
    cf04:	9e 01       	movw	r18, r28
    cf06:	22 5f       	subi	r18, 0xF2	; 242
    cf08:	3f 4f       	sbci	r19, 0xFF	; 255
    cf0a:	82 0f       	add	r24, r18
    cf0c:	93 1f       	adc	r25, r19
    cf0e:	fc 01       	movw	r30, r24
    cf10:	40 83       	st	Z, r20
    cf12:	89 81       	ldd	r24, Y+1	; 0x01
    cf14:	91 e0       	ldi	r25, 0x01	; 1
    cf16:	98 0f       	add	r25, r24
    cf18:	99 83       	std	Y+1, r25	; 0x01
    cf1a:	88 2f       	mov	r24, r24
    cf1c:	90 e0       	ldi	r25, 0x00	; 0
    cf1e:	4e 81       	ldd	r20, Y+6	; 0x06
    cf20:	9e 01       	movw	r18, r28
    cf22:	22 5f       	subi	r18, 0xF2	; 242
    cf24:	3f 4f       	sbci	r19, 0xFF	; 255
    cf26:	82 0f       	add	r24, r18
    cf28:	93 1f       	adc	r25, r19
    cf2a:	fc 01       	movw	r30, r24
    cf2c:	40 83       	st	Z, r20
    cf2e:	8c 8d       	ldd	r24, Y+28	; 0x1c
    cf30:	81 30       	cpi	r24, 0x01	; 1
    cf32:	59 f4       	brne	.+22     	; 0xcf4a <_Z7set_pllm10si5351_pll+0x16e>
    cf34:	ce 01       	movw	r24, r28
    cf36:	0e 96       	adiw	r24, 0x0e	; 14
    cf38:	49 81       	ldd	r20, Y+1	; 0x01
    cf3a:	bc 01       	movw	r22, r24
    cf3c:	8a e1       	ldi	r24, 0x1A	; 26
    cf3e:	0e 94 db 6b 	call	0xd7b6	; 0xd7b6 <_Z17si5351_write_bulkhPhh>
    cf42:	88 23       	and	r24, r24
    cf44:	69 f0       	breq	.+26     	; 0xcf60 <_Z7set_pllm10si5351_pll+0x184>
    cf46:	81 e0       	ldi	r24, 0x01	; 1
    cf48:	0c c0       	rjmp	.+24     	; 0xcf62 <_Z7set_pllm10si5351_pll+0x186>
    cf4a:	ce 01       	movw	r24, r28
    cf4c:	0e 96       	adiw	r24, 0x0e	; 14
    cf4e:	49 81       	ldd	r20, Y+1	; 0x01
    cf50:	bc 01       	movw	r22, r24
    cf52:	82 e2       	ldi	r24, 0x22	; 34
    cf54:	0e 94 db 6b 	call	0xd7b6	; 0xd7b6 <_Z17si5351_write_bulkhPhh>
    cf58:	88 23       	and	r24, r24
    cf5a:	11 f0       	breq	.+4      	; 0xcf60 <_Z7set_pllm10si5351_pll+0x184>
    cf5c:	81 e0       	ldi	r24, 0x01	; 1
    cf5e:	01 c0       	rjmp	.+2      	; 0xcf62 <_Z7set_pllm10si5351_pll+0x186>
    cf60:	80 e0       	ldi	r24, 0x00	; 0
    cf62:	6c 96       	adiw	r28, 0x1c	; 28
    cf64:	cd bf       	out	0x3d, r28	; 61
    cf66:	de bf       	out	0x3e, r29	; 62
    cf68:	df 91       	pop	r29
    cf6a:	cf 91       	pop	r28
    cf6c:	08 95       	ret

0000cf6e <_Z8pll_calcmP13u_si5351_regs>:
    cf6e:	cf 93       	push	r28
    cf70:	df 93       	push	r29
    cf72:	cd b7       	in	r28, 0x3d	; 61
    cf74:	de b7       	in	r29, 0x3e	; 62
    cf76:	6e 97       	sbiw	r28, 0x1e	; 30
    cf78:	cd bf       	out	0x3d, r28	; 61
    cf7a:	de bf       	out	0x3e, r29	; 62
    cf7c:	69 8f       	std	Y+25, r22	; 0x19
    cf7e:	7a 8f       	std	Y+26, r23	; 0x1a
    cf80:	8b 8f       	std	Y+27, r24	; 0x1b
    cf82:	9c 8f       	std	Y+28, r25	; 0x1c
    cf84:	4d 8f       	std	Y+29, r20	; 0x1d
    cf86:	5e 8f       	std	Y+30, r21	; 0x1e
    cf88:	80 91 32 40 	lds	r24, 0x4032	; 0x804032 <_ZL9xtal_freq>
    cf8c:	90 91 33 40 	lds	r25, 0x4033	; 0x804033 <_ZL9xtal_freq+0x1>
    cf90:	a0 91 34 40 	lds	r26, 0x4034	; 0x804034 <_ZL9xtal_freq+0x2>
    cf94:	b0 91 35 40 	lds	r27, 0x4035	; 0x804035 <_ZL9xtal_freq+0x3>
    cf98:	89 83       	std	Y+1, r24	; 0x01
    cf9a:	9a 83       	std	Y+2, r25	; 0x02
    cf9c:	ab 83       	std	Y+3, r26	; 0x03
    cf9e:	bc 83       	std	Y+4, r27	; 0x04
    cfa0:	89 8d       	ldd	r24, Y+25	; 0x19
    cfa2:	9a 8d       	ldd	r25, Y+26	; 0x1a
    cfa4:	ab 8d       	ldd	r26, Y+27	; 0x1b
    cfa6:	bc 8d       	ldd	r27, Y+28	; 0x1c
    cfa8:	29 81       	ldd	r18, Y+1	; 0x01
    cfaa:	3a 81       	ldd	r19, Y+2	; 0x02
    cfac:	4b 81       	ldd	r20, Y+3	; 0x03
    cfae:	5c 81       	ldd	r21, Y+4	; 0x04
    cfb0:	bc 01       	movw	r22, r24
    cfb2:	cd 01       	movw	r24, r26
    cfb4:	0e 94 62 7a 	call	0xf4c4	; 0xf4c4 <__udivmodsi4>
    cfb8:	da 01       	movw	r26, r20
    cfba:	c9 01       	movw	r24, r18
    cfbc:	8d 83       	std	Y+5, r24	; 0x05
    cfbe:	9e 83       	std	Y+6, r25	; 0x06
    cfc0:	af 83       	std	Y+7, r26	; 0x07
    cfc2:	b8 87       	std	Y+8, r27	; 0x08
    cfc4:	89 8d       	ldd	r24, Y+25	; 0x19
    cfc6:	9a 8d       	ldd	r25, Y+26	; 0x1a
    cfc8:	ab 8d       	ldd	r26, Y+27	; 0x1b
    cfca:	bc 8d       	ldd	r27, Y+28	; 0x1c
    cfcc:	29 81       	ldd	r18, Y+1	; 0x01
    cfce:	3a 81       	ldd	r19, Y+2	; 0x02
    cfd0:	4b 81       	ldd	r20, Y+3	; 0x03
    cfd2:	5c 81       	ldd	r21, Y+4	; 0x04
    cfd4:	bc 01       	movw	r22, r24
    cfd6:	cd 01       	movw	r24, r26
    cfd8:	0e 94 62 7a 	call	0xf4c4	; 0xf4c4 <__udivmodsi4>
    cfdc:	dc 01       	movw	r26, r24
    cfde:	cb 01       	movw	r24, r22
    cfe0:	89 8b       	std	Y+17, r24	; 0x11
    cfe2:	9a 8b       	std	Y+18, r25	; 0x12
    cfe4:	ab 8b       	std	Y+19, r26	; 0x13
    cfe6:	bc 8b       	std	Y+20, r27	; 0x14
    cfe8:	89 81       	ldd	r24, Y+1	; 0x01
    cfea:	9a 81       	ldd	r25, Y+2	; 0x02
    cfec:	ab 81       	ldd	r26, Y+3	; 0x03
    cfee:	bc 81       	ldd	r27, Y+4	; 0x04
    cff0:	8d 8b       	std	Y+21, r24	; 0x15
    cff2:	9e 8b       	std	Y+22, r25	; 0x16
    cff4:	af 8b       	std	Y+23, r26	; 0x17
    cff6:	b8 8f       	std	Y+24, r27	; 0x18
    cff8:	9e 01       	movw	r18, r28
    cffa:	2b 5e       	subi	r18, 0xEB	; 235
    cffc:	3f 4f       	sbci	r19, 0xFF	; 255
    cffe:	ce 01       	movw	r24, r28
    d000:	41 96       	adiw	r24, 0x11	; 17
    d002:	b9 01       	movw	r22, r18
    d004:	0e 94 9d 68 	call	0xd13a	; 0xd13a <_Z13reduce_by_gcdPmS_>
    d008:	89 89       	ldd	r24, Y+17	; 0x11
    d00a:	9a 89       	ldd	r25, Y+18	; 0x12
    d00c:	ab 89       	ldd	r26, Y+19	; 0x13
    d00e:	bc 89       	ldd	r27, Y+20	; 0x14
    d010:	88 0f       	add	r24, r24
    d012:	99 1f       	adc	r25, r25
    d014:	aa 1f       	adc	r26, r26
    d016:	bb 1f       	adc	r27, r27
    d018:	88 0f       	add	r24, r24
    d01a:	99 1f       	adc	r25, r25
    d01c:	aa 1f       	adc	r26, r26
    d01e:	bb 1f       	adc	r27, r27
    d020:	88 0f       	add	r24, r24
    d022:	99 1f       	adc	r25, r25
    d024:	aa 1f       	adc	r26, r26
    d026:	bb 1f       	adc	r27, r27
    d028:	88 0f       	add	r24, r24
    d02a:	99 1f       	adc	r25, r25
    d02c:	aa 1f       	adc	r26, r26
    d02e:	bb 1f       	adc	r27, r27
    d030:	88 0f       	add	r24, r24
    d032:	99 1f       	adc	r25, r25
    d034:	aa 1f       	adc	r26, r26
    d036:	bb 1f       	adc	r27, r27
    d038:	88 0f       	add	r24, r24
    d03a:	99 1f       	adc	r25, r25
    d03c:	aa 1f       	adc	r26, r26
    d03e:	bb 1f       	adc	r27, r27
    d040:	88 0f       	add	r24, r24
    d042:	99 1f       	adc	r25, r25
    d044:	aa 1f       	adc	r26, r26
    d046:	bb 1f       	adc	r27, r27
    d048:	89 87       	std	Y+9, r24	; 0x09
    d04a:	9a 87       	std	Y+10, r25	; 0x0a
    d04c:	ab 87       	std	Y+11, r26	; 0x0b
    d04e:	bc 87       	std	Y+12, r27	; 0x0c
    d050:	2d 89       	ldd	r18, Y+21	; 0x15
    d052:	3e 89       	ldd	r19, Y+22	; 0x16
    d054:	4f 89       	ldd	r20, Y+23	; 0x17
    d056:	58 8d       	ldd	r21, Y+24	; 0x18
    d058:	89 85       	ldd	r24, Y+9	; 0x09
    d05a:	9a 85       	ldd	r25, Y+10	; 0x0a
    d05c:	ab 85       	ldd	r26, Y+11	; 0x0b
    d05e:	bc 85       	ldd	r27, Y+12	; 0x0c
    d060:	bc 01       	movw	r22, r24
    d062:	cd 01       	movw	r24, r26
    d064:	0e 94 62 7a 	call	0xf4c4	; 0xf4c4 <__udivmodsi4>
    d068:	da 01       	movw	r26, r20
    d06a:	c9 01       	movw	r24, r18
    d06c:	8d 87       	std	Y+13, r24	; 0x0d
    d06e:	9e 87       	std	Y+14, r25	; 0x0e
    d070:	af 87       	std	Y+15, r26	; 0x0f
    d072:	b8 8b       	std	Y+16, r27	; 0x10
    d074:	8d 81       	ldd	r24, Y+5	; 0x05
    d076:	9e 81       	ldd	r25, Y+6	; 0x06
    d078:	af 81       	ldd	r26, Y+7	; 0x07
    d07a:	b8 85       	ldd	r27, Y+8	; 0x08
    d07c:	88 0f       	add	r24, r24
    d07e:	99 1f       	adc	r25, r25
    d080:	aa 1f       	adc	r26, r26
    d082:	bb 1f       	adc	r27, r27
    d084:	88 0f       	add	r24, r24
    d086:	99 1f       	adc	r25, r25
    d088:	aa 1f       	adc	r26, r26
    d08a:	bb 1f       	adc	r27, r27
    d08c:	88 0f       	add	r24, r24
    d08e:	99 1f       	adc	r25, r25
    d090:	aa 1f       	adc	r26, r26
    d092:	bb 1f       	adc	r27, r27
    d094:	88 0f       	add	r24, r24
    d096:	99 1f       	adc	r25, r25
    d098:	aa 1f       	adc	r26, r26
    d09a:	bb 1f       	adc	r27, r27
    d09c:	88 0f       	add	r24, r24
    d09e:	99 1f       	adc	r25, r25
    d0a0:	aa 1f       	adc	r26, r26
    d0a2:	bb 1f       	adc	r27, r27
    d0a4:	88 0f       	add	r24, r24
    d0a6:	99 1f       	adc	r25, r25
    d0a8:	aa 1f       	adc	r26, r26
    d0aa:	bb 1f       	adc	r27, r27
    d0ac:	88 0f       	add	r24, r24
    d0ae:	99 1f       	adc	r25, r25
    d0b0:	aa 1f       	adc	r26, r26
    d0b2:	bb 1f       	adc	r27, r27
    d0b4:	9c 01       	movw	r18, r24
    d0b6:	ad 01       	movw	r20, r26
    d0b8:	8d 85       	ldd	r24, Y+13	; 0x0d
    d0ba:	9e 85       	ldd	r25, Y+14	; 0x0e
    d0bc:	af 85       	ldd	r26, Y+15	; 0x0f
    d0be:	b8 89       	ldd	r27, Y+16	; 0x10
    d0c0:	82 0f       	add	r24, r18
    d0c2:	93 1f       	adc	r25, r19
    d0c4:	a4 1f       	adc	r26, r20
    d0c6:	b5 1f       	adc	r27, r21
    d0c8:	92 50       	subi	r25, 0x02	; 2
    d0ca:	a1 09       	sbc	r26, r1
    d0cc:	b1 09       	sbc	r27, r1
    d0ce:	2d 8d       	ldd	r18, Y+29	; 0x1d
    d0d0:	3e 8d       	ldd	r19, Y+30	; 0x1e
    d0d2:	f9 01       	movw	r30, r18
    d0d4:	80 83       	st	Z, r24
    d0d6:	91 83       	std	Z+1, r25	; 0x01
    d0d8:	a2 83       	std	Z+2, r26	; 0x02
    d0da:	b3 83       	std	Z+3, r27	; 0x03
    d0dc:	2d 89       	ldd	r18, Y+21	; 0x15
    d0de:	3e 89       	ldd	r19, Y+22	; 0x16
    d0e0:	4f 89       	ldd	r20, Y+23	; 0x17
    d0e2:	58 8d       	ldd	r21, Y+24	; 0x18
    d0e4:	8d 85       	ldd	r24, Y+13	; 0x0d
    d0e6:	9e 85       	ldd	r25, Y+14	; 0x0e
    d0e8:	af 85       	ldd	r26, Y+15	; 0x0f
    d0ea:	b8 89       	ldd	r27, Y+16	; 0x10
    d0ec:	bc 01       	movw	r22, r24
    d0ee:	cd 01       	movw	r24, r26
    d0f0:	0e 94 2a 7a 	call	0xf454	; 0xf454 <__mulsi3>
    d0f4:	9b 01       	movw	r18, r22
    d0f6:	ac 01       	movw	r20, r24
    d0f8:	89 85       	ldd	r24, Y+9	; 0x09
    d0fa:	9a 85       	ldd	r25, Y+10	; 0x0a
    d0fc:	ab 85       	ldd	r26, Y+11	; 0x0b
    d0fe:	bc 85       	ldd	r27, Y+12	; 0x0c
    d100:	82 1b       	sub	r24, r18
    d102:	93 0b       	sbc	r25, r19
    d104:	a4 0b       	sbc	r26, r20
    d106:	b5 0b       	sbc	r27, r21
    d108:	2d 8d       	ldd	r18, Y+29	; 0x1d
    d10a:	3e 8d       	ldd	r19, Y+30	; 0x1e
    d10c:	f9 01       	movw	r30, r18
    d10e:	84 83       	std	Z+4, r24	; 0x04
    d110:	95 83       	std	Z+5, r25	; 0x05
    d112:	a6 83       	std	Z+6, r26	; 0x06
    d114:	b7 83       	std	Z+7, r27	; 0x07
    d116:	8d 89       	ldd	r24, Y+21	; 0x15
    d118:	9e 89       	ldd	r25, Y+22	; 0x16
    d11a:	af 89       	ldd	r26, Y+23	; 0x17
    d11c:	b8 8d       	ldd	r27, Y+24	; 0x18
    d11e:	2d 8d       	ldd	r18, Y+29	; 0x1d
    d120:	3e 8d       	ldd	r19, Y+30	; 0x1e
    d122:	f9 01       	movw	r30, r18
    d124:	80 87       	std	Z+8, r24	; 0x08
    d126:	91 87       	std	Z+9, r25	; 0x09
    d128:	a2 87       	std	Z+10, r26	; 0x0a
    d12a:	b3 87       	std	Z+11, r27	; 0x0b
    d12c:	80 e0       	ldi	r24, 0x00	; 0
    d12e:	6e 96       	adiw	r28, 0x1e	; 30
    d130:	cd bf       	out	0x3d, r28	; 61
    d132:	de bf       	out	0x3e, r29	; 62
    d134:	df 91       	pop	r29
    d136:	cf 91       	pop	r28
    d138:	08 95       	ret

0000d13a <_Z13reduce_by_gcdPmS_>:
    d13a:	cf 93       	push	r28
    d13c:	df 93       	push	r29
    d13e:	cd b7       	in	r28, 0x3d	; 61
    d140:	de b7       	in	r29, 0x3e	; 62
    d142:	60 97       	sbiw	r28, 0x10	; 16
    d144:	cd bf       	out	0x3d, r28	; 61
    d146:	de bf       	out	0x3e, r29	; 62
    d148:	8d 87       	std	Y+13, r24	; 0x0d
    d14a:	9e 87       	std	Y+14, r25	; 0x0e
    d14c:	6f 87       	std	Y+15, r22	; 0x0f
    d14e:	78 8b       	std	Y+16, r23	; 0x10
    d150:	8d 85       	ldd	r24, Y+13	; 0x0d
    d152:	9e 85       	ldd	r25, Y+14	; 0x0e
    d154:	fc 01       	movw	r30, r24
    d156:	80 81       	ld	r24, Z
    d158:	91 81       	ldd	r25, Z+1	; 0x01
    d15a:	a2 81       	ldd	r26, Z+2	; 0x02
    d15c:	b3 81       	ldd	r27, Z+3	; 0x03
    d15e:	89 87       	std	Y+9, r24	; 0x09
    d160:	9a 87       	std	Y+10, r25	; 0x0a
    d162:	ab 87       	std	Y+11, r26	; 0x0b
    d164:	bc 87       	std	Y+12, r27	; 0x0c
    d166:	8f 85       	ldd	r24, Y+15	; 0x0f
    d168:	98 89       	ldd	r25, Y+16	; 0x10
    d16a:	fc 01       	movw	r30, r24
    d16c:	80 81       	ld	r24, Z
    d16e:	91 81       	ldd	r25, Z+1	; 0x01
    d170:	a2 81       	ldd	r26, Z+2	; 0x02
    d172:	b3 81       	ldd	r27, Z+3	; 0x03
    d174:	8d 83       	std	Y+5, r24	; 0x05
    d176:	9e 83       	std	Y+6, r25	; 0x06
    d178:	af 83       	std	Y+7, r26	; 0x07
    d17a:	b8 87       	std	Y+8, r27	; 0x08
    d17c:	89 85       	ldd	r24, Y+9	; 0x09
    d17e:	9a 85       	ldd	r25, Y+10	; 0x0a
    d180:	ab 85       	ldd	r26, Y+11	; 0x0b
    d182:	bc 85       	ldd	r27, Y+12	; 0x0c
    d184:	89 2b       	or	r24, r25
    d186:	8a 2b       	or	r24, r26
    d188:	8b 2b       	or	r24, r27
    d18a:	09 f4       	brne	.+2      	; 0xd18e <_Z13reduce_by_gcdPmS_+0x54>
    d18c:	80 c0       	rjmp	.+256    	; 0xd28e <_Z13reduce_by_gcdPmS_+0x154>
    d18e:	8d 81       	ldd	r24, Y+5	; 0x05
    d190:	9e 81       	ldd	r25, Y+6	; 0x06
    d192:	af 81       	ldd	r26, Y+7	; 0x07
    d194:	b8 85       	ldd	r27, Y+8	; 0x08
    d196:	89 2b       	or	r24, r25
    d198:	8a 2b       	or	r24, r26
    d19a:	8b 2b       	or	r24, r27
    d19c:	09 f4       	brne	.+2      	; 0xd1a0 <_Z13reduce_by_gcdPmS_+0x66>
    d19e:	77 c0       	rjmp	.+238    	; 0xd28e <_Z13reduce_by_gcdPmS_+0x154>
    d1a0:	89 85       	ldd	r24, Y+9	; 0x09
    d1a2:	9a 85       	ldd	r25, Y+10	; 0x0a
    d1a4:	ab 85       	ldd	r26, Y+11	; 0x0b
    d1a6:	bc 85       	ldd	r27, Y+12	; 0x0c
    d1a8:	2d 81       	ldd	r18, Y+5	; 0x05
    d1aa:	3e 81       	ldd	r19, Y+6	; 0x06
    d1ac:	4f 81       	ldd	r20, Y+7	; 0x07
    d1ae:	58 85       	ldd	r21, Y+8	; 0x08
    d1b0:	bc 01       	movw	r22, r24
    d1b2:	cd 01       	movw	r24, r26
    d1b4:	0e 94 62 7a 	call	0xf4c4	; 0xf4c4 <__udivmodsi4>
    d1b8:	dc 01       	movw	r26, r24
    d1ba:	cb 01       	movw	r24, r22
    d1bc:	89 83       	std	Y+1, r24	; 0x01
    d1be:	9a 83       	std	Y+2, r25	; 0x02
    d1c0:	ab 83       	std	Y+3, r26	; 0x03
    d1c2:	bc 83       	std	Y+4, r27	; 0x04
    d1c4:	89 81       	ldd	r24, Y+1	; 0x01
    d1c6:	9a 81       	ldd	r25, Y+2	; 0x02
    d1c8:	ab 81       	ldd	r26, Y+3	; 0x03
    d1ca:	bc 81       	ldd	r27, Y+4	; 0x04
    d1cc:	89 2b       	or	r24, r25
    d1ce:	8a 2b       	or	r24, r26
    d1d0:	8b 2b       	or	r24, r27
    d1d2:	19 f1       	breq	.+70     	; 0xd21a <_Z13reduce_by_gcdPmS_+0xe0>
    d1d4:	8d 81       	ldd	r24, Y+5	; 0x05
    d1d6:	9e 81       	ldd	r25, Y+6	; 0x06
    d1d8:	af 81       	ldd	r26, Y+7	; 0x07
    d1da:	b8 85       	ldd	r27, Y+8	; 0x08
    d1dc:	89 87       	std	Y+9, r24	; 0x09
    d1de:	9a 87       	std	Y+10, r25	; 0x0a
    d1e0:	ab 87       	std	Y+11, r26	; 0x0b
    d1e2:	bc 87       	std	Y+12, r27	; 0x0c
    d1e4:	89 81       	ldd	r24, Y+1	; 0x01
    d1e6:	9a 81       	ldd	r25, Y+2	; 0x02
    d1e8:	ab 81       	ldd	r26, Y+3	; 0x03
    d1ea:	bc 81       	ldd	r27, Y+4	; 0x04
    d1ec:	8d 83       	std	Y+5, r24	; 0x05
    d1ee:	9e 83       	std	Y+6, r25	; 0x06
    d1f0:	af 83       	std	Y+7, r26	; 0x07
    d1f2:	b8 87       	std	Y+8, r27	; 0x08
    d1f4:	89 85       	ldd	r24, Y+9	; 0x09
    d1f6:	9a 85       	ldd	r25, Y+10	; 0x0a
    d1f8:	ab 85       	ldd	r26, Y+11	; 0x0b
    d1fa:	bc 85       	ldd	r27, Y+12	; 0x0c
    d1fc:	2d 81       	ldd	r18, Y+5	; 0x05
    d1fe:	3e 81       	ldd	r19, Y+6	; 0x06
    d200:	4f 81       	ldd	r20, Y+7	; 0x07
    d202:	58 85       	ldd	r21, Y+8	; 0x08
    d204:	bc 01       	movw	r22, r24
    d206:	cd 01       	movw	r24, r26
    d208:	0e 94 62 7a 	call	0xf4c4	; 0xf4c4 <__udivmodsi4>
    d20c:	dc 01       	movw	r26, r24
    d20e:	cb 01       	movw	r24, r22
    d210:	89 83       	std	Y+1, r24	; 0x01
    d212:	9a 83       	std	Y+2, r25	; 0x02
    d214:	ab 83       	std	Y+3, r26	; 0x03
    d216:	bc 83       	std	Y+4, r27	; 0x04
    d218:	d5 cf       	rjmp	.-86     	; 0xd1c4 <_Z13reduce_by_gcdPmS_+0x8a>
    d21a:	8d 81       	ldd	r24, Y+5	; 0x05
    d21c:	9e 81       	ldd	r25, Y+6	; 0x06
    d21e:	af 81       	ldd	r26, Y+7	; 0x07
    d220:	b8 85       	ldd	r27, Y+8	; 0x08
    d222:	02 97       	sbiw	r24, 0x02	; 2
    d224:	a1 05       	cpc	r26, r1
    d226:	b1 05       	cpc	r27, r1
    d228:	a0 f1       	brcs	.+104    	; 0xd292 <_Z13reduce_by_gcdPmS_+0x158>
    d22a:	8d 85       	ldd	r24, Y+13	; 0x0d
    d22c:	9e 85       	ldd	r25, Y+14	; 0x0e
    d22e:	fc 01       	movw	r30, r24
    d230:	80 81       	ld	r24, Z
    d232:	91 81       	ldd	r25, Z+1	; 0x01
    d234:	a2 81       	ldd	r26, Z+2	; 0x02
    d236:	b3 81       	ldd	r27, Z+3	; 0x03
    d238:	2d 81       	ldd	r18, Y+5	; 0x05
    d23a:	3e 81       	ldd	r19, Y+6	; 0x06
    d23c:	4f 81       	ldd	r20, Y+7	; 0x07
    d23e:	58 85       	ldd	r21, Y+8	; 0x08
    d240:	bc 01       	movw	r22, r24
    d242:	cd 01       	movw	r24, r26
    d244:	0e 94 62 7a 	call	0xf4c4	; 0xf4c4 <__udivmodsi4>
    d248:	da 01       	movw	r26, r20
    d24a:	c9 01       	movw	r24, r18
    d24c:	2d 85       	ldd	r18, Y+13	; 0x0d
    d24e:	3e 85       	ldd	r19, Y+14	; 0x0e
    d250:	f9 01       	movw	r30, r18
    d252:	80 83       	st	Z, r24
    d254:	91 83       	std	Z+1, r25	; 0x01
    d256:	a2 83       	std	Z+2, r26	; 0x02
    d258:	b3 83       	std	Z+3, r27	; 0x03
    d25a:	8f 85       	ldd	r24, Y+15	; 0x0f
    d25c:	98 89       	ldd	r25, Y+16	; 0x10
    d25e:	fc 01       	movw	r30, r24
    d260:	80 81       	ld	r24, Z
    d262:	91 81       	ldd	r25, Z+1	; 0x01
    d264:	a2 81       	ldd	r26, Z+2	; 0x02
    d266:	b3 81       	ldd	r27, Z+3	; 0x03
    d268:	2d 81       	ldd	r18, Y+5	; 0x05
    d26a:	3e 81       	ldd	r19, Y+6	; 0x06
    d26c:	4f 81       	ldd	r20, Y+7	; 0x07
    d26e:	58 85       	ldd	r21, Y+8	; 0x08
    d270:	bc 01       	movw	r22, r24
    d272:	cd 01       	movw	r24, r26
    d274:	0e 94 62 7a 	call	0xf4c4	; 0xf4c4 <__udivmodsi4>
    d278:	da 01       	movw	r26, r20
    d27a:	c9 01       	movw	r24, r18
    d27c:	2f 85       	ldd	r18, Y+15	; 0x0f
    d27e:	38 89       	ldd	r19, Y+16	; 0x10
    d280:	f9 01       	movw	r30, r18
    d282:	80 83       	st	Z, r24
    d284:	91 83       	std	Z+1, r25	; 0x01
    d286:	a2 83       	std	Z+2, r26	; 0x02
    d288:	b3 83       	std	Z+3, r27	; 0x03
    d28a:	00 00       	nop
    d28c:	02 c0       	rjmp	.+4      	; 0xd292 <_Z13reduce_by_gcdPmS_+0x158>
    d28e:	00 00       	nop
    d290:	01 c0       	rjmp	.+2      	; 0xd294 <_Z13reduce_by_gcdPmS_+0x15a>
    d292:	00 00       	nop
    d294:	60 96       	adiw	r28, 0x10	; 16
    d296:	cd bf       	out	0x3d, r28	; 61
    d298:	de bf       	out	0x3e, r29	; 62
    d29a:	df 91       	pop	r29
    d29c:	cf 91       	pop	r28
    d29e:	08 95       	ret

0000d2a0 <_Z15multisynth_calcmP13u_si5351_regsPbS1_>:
    d2a0:	0f 93       	push	r16
    d2a2:	1f 93       	push	r17
    d2a4:	cf 93       	push	r28
    d2a6:	df 93       	push	r29
    d2a8:	cd b7       	in	r28, 0x3d	; 61
    d2aa:	de b7       	in	r29, 0x3e	; 62
    d2ac:	69 97       	sbiw	r28, 0x19	; 25
    d2ae:	cd bf       	out	0x3d, r28	; 61
    d2b0:	de bf       	out	0x3e, r29	; 62
    d2b2:	68 8b       	std	Y+16, r22	; 0x10
    d2b4:	79 8b       	std	Y+17, r23	; 0x11
    d2b6:	8a 8b       	std	Y+18, r24	; 0x12
    d2b8:	9b 8b       	std	Y+19, r25	; 0x13
    d2ba:	4c 8b       	std	Y+20, r20	; 0x14
    d2bc:	5d 8b       	std	Y+21, r21	; 0x15
    d2be:	2e 8b       	std	Y+22, r18	; 0x16
    d2c0:	3f 8b       	std	Y+23, r19	; 0x17
    d2c2:	08 8f       	std	Y+24, r16	; 0x18
    d2c4:	19 8f       	std	Y+25, r17	; 0x19
    d2c6:	19 82       	std	Y+1, r1	; 0x01
    d2c8:	1a 82       	std	Y+2, r1	; 0x02
    d2ca:	1b 82       	std	Y+3, r1	; 0x03
    d2cc:	1c 82       	std	Y+4, r1	; 0x04
    d2ce:	1d 82       	std	Y+5, r1	; 0x05
    d2d0:	1e 82       	std	Y+6, r1	; 0x06
    d2d2:	1f 82       	std	Y+7, r1	; 0x07
    d2d4:	18 86       	std	Y+8, r1	; 0x08
    d2d6:	8e 89       	ldd	r24, Y+22	; 0x16
    d2d8:	9f 89       	ldd	r25, Y+23	; 0x17
    d2da:	21 e0       	ldi	r18, 0x01	; 1
    d2dc:	fc 01       	movw	r30, r24
    d2de:	20 83       	st	Z, r18
    d2e0:	88 89       	ldd	r24, Y+16	; 0x10
    d2e2:	99 89       	ldd	r25, Y+17	; 0x11
    d2e4:	aa 89       	ldd	r26, Y+18	; 0x12
    d2e6:	bb 89       	ldd	r27, Y+19	; 0x13
    d2e8:	80 38       	cpi	r24, 0x80	; 128
    d2ea:	91 4d       	sbci	r25, 0xD1	; 209
    d2ec:	a0 4f       	sbci	r26, 0xF0	; 240
    d2ee:	b8 40       	sbci	r27, 0x08	; 8
    d2f0:	d8 f0       	brcs	.+54     	; 0xd328 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x88>
    d2f2:	84 e0       	ldi	r24, 0x04	; 4
    d2f4:	90 e0       	ldi	r25, 0x00	; 0
    d2f6:	a0 e0       	ldi	r26, 0x00	; 0
    d2f8:	b0 e0       	ldi	r27, 0x00	; 0
    d2fa:	89 83       	std	Y+1, r24	; 0x01
    d2fc:	9a 83       	std	Y+2, r25	; 0x02
    d2fe:	ab 83       	std	Y+3, r26	; 0x03
    d300:	bc 83       	std	Y+4, r27	; 0x04
    d302:	29 81       	ldd	r18, Y+1	; 0x01
    d304:	3a 81       	ldd	r19, Y+2	; 0x02
    d306:	4b 81       	ldd	r20, Y+3	; 0x03
    d308:	5c 81       	ldd	r21, Y+4	; 0x04
    d30a:	88 89       	ldd	r24, Y+16	; 0x10
    d30c:	99 89       	ldd	r25, Y+17	; 0x11
    d30e:	aa 89       	ldd	r26, Y+18	; 0x12
    d310:	bb 89       	ldd	r27, Y+19	; 0x13
    d312:	bc 01       	movw	r22, r24
    d314:	cd 01       	movw	r24, r26
    d316:	0e 94 2a 7a 	call	0xf454	; 0xf454 <__mulsi3>
    d31a:	dc 01       	movw	r26, r24
    d31c:	cb 01       	movw	r24, r22
    d31e:	8d 83       	std	Y+5, r24	; 0x05
    d320:	9e 83       	std	Y+6, r25	; 0x06
    d322:	af 83       	std	Y+7, r26	; 0x07
    d324:	b8 87       	std	Y+8, r27	; 0x08
    d326:	6e c0       	rjmp	.+220    	; 0xd404 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x164>
    d328:	19 86       	std	Y+9, r1	; 0x09
    d32a:	1a 86       	std	Y+10, r1	; 0x0a
    d32c:	1b 86       	std	Y+11, r1	; 0x0b
    d32e:	89 85       	ldd	r24, Y+9	; 0x09
    d330:	88 23       	and	r24, r24
    d332:	09 f0       	breq	.+2      	; 0xd336 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x96>
    d334:	52 c0       	rjmp	.+164    	; 0xd3da <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x13a>
    d336:	8b 85       	ldd	r24, Y+11	; 0x0b
    d338:	28 2f       	mov	r18, r24
    d33a:	30 e0       	ldi	r19, 0x00	; 0
    d33c:	40 e0       	ldi	r20, 0x00	; 0
    d33e:	50 e0       	ldi	r21, 0x00	; 0
    d340:	88 89       	ldd	r24, Y+16	; 0x10
    d342:	99 89       	ldd	r25, Y+17	; 0x11
    d344:	aa 89       	ldd	r26, Y+18	; 0x12
    d346:	bb 89       	ldd	r27, Y+19	; 0x13
    d348:	bc 01       	movw	r22, r24
    d34a:	cd 01       	movw	r24, r26
    d34c:	0e 94 2a 7a 	call	0xf454	; 0xf454 <__mulsi3>
    d350:	9b 01       	movw	r18, r22
    d352:	ac 01       	movw	r20, r24
    d354:	80 e0       	ldi	r24, 0x00	; 0
    d356:	99 ee       	ldi	r25, 0xE9	; 233
    d358:	a4 ea       	ldi	r26, 0xA4	; 164
    d35a:	b5 e3       	ldi	r27, 0x35	; 53
    d35c:	82 1b       	sub	r24, r18
    d35e:	93 0b       	sbc	r25, r19
    d360:	a4 0b       	sbc	r26, r20
    d362:	b5 0b       	sbc	r27, r21
    d364:	8c 87       	std	Y+12, r24	; 0x0c
    d366:	9d 87       	std	Y+13, r25	; 0x0d
    d368:	ae 87       	std	Y+14, r26	; 0x0e
    d36a:	bf 87       	std	Y+15, r27	; 0x0f
    d36c:	8b 85       	ldd	r24, Y+11	; 0x0b
    d36e:	8e 5f       	subi	r24, 0xFE	; 254
    d370:	8b 87       	std	Y+11, r24	; 0x0b
    d372:	8c 85       	ldd	r24, Y+12	; 0x0c
    d374:	9d 85       	ldd	r25, Y+13	; 0x0d
    d376:	ae 85       	ldd	r26, Y+14	; 0x0e
    d378:	bf 85       	ldd	r27, Y+15	; 0x0f
    d37a:	81 15       	cp	r24, r1
    d37c:	96 44       	sbci	r25, 0x46	; 70
    d37e:	a3 4c       	sbci	r26, 0xC3	; 195
    d380:	b3 42       	sbci	r27, 0x23	; 35
    d382:	40 f1       	brcs	.+80     	; 0xd3d4 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x134>
    d384:	8c 85       	ldd	r24, Y+12	; 0x0c
    d386:	9d 85       	ldd	r25, Y+13	; 0x0d
    d388:	ae 85       	ldd	r26, Y+14	; 0x0e
    d38a:	bf 85       	ldd	r27, Y+15	; 0x0f
    d38c:	28 89       	ldd	r18, Y+16	; 0x10
    d38e:	39 89       	ldd	r19, Y+17	; 0x11
    d390:	4a 89       	ldd	r20, Y+18	; 0x12
    d392:	5b 89       	ldd	r21, Y+19	; 0x13
    d394:	bc 01       	movw	r22, r24
    d396:	cd 01       	movw	r24, r26
    d398:	0e 94 62 7a 	call	0xf4c4	; 0xf4c4 <__udivmodsi4>
    d39c:	da 01       	movw	r26, r20
    d39e:	c9 01       	movw	r24, r18
    d3a0:	8c 87       	std	Y+12, r24	; 0x0c
    d3a2:	9d 87       	std	Y+13, r25	; 0x0d
    d3a4:	ae 87       	std	Y+14, r26	; 0x0e
    d3a6:	bf 87       	std	Y+15, r27	; 0x0f
    d3a8:	8c 85       	ldd	r24, Y+12	; 0x0c
    d3aa:	9d 85       	ldd	r25, Y+13	; 0x0d
    d3ac:	ae 85       	ldd	r26, Y+14	; 0x0e
    d3ae:	bf 85       	ldd	r27, Y+15	; 0x0f
    d3b0:	04 97       	sbiw	r24, 0x04	; 4
    d3b2:	a1 05       	cpc	r26, r1
    d3b4:	b1 05       	cpc	r27, r1
    d3b6:	08 f4       	brcc	.+2      	; 0xd3ba <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x11a>
    d3b8:	ba cf       	rjmp	.-140    	; 0xd32e <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x8e>
    d3ba:	81 e0       	ldi	r24, 0x01	; 1
    d3bc:	89 87       	std	Y+9, r24	; 0x09
    d3be:	81 e0       	ldi	r24, 0x01	; 1
    d3c0:	8a 87       	std	Y+10, r24	; 0x0a
    d3c2:	8c 85       	ldd	r24, Y+12	; 0x0c
    d3c4:	9d 85       	ldd	r25, Y+13	; 0x0d
    d3c6:	ae 85       	ldd	r26, Y+14	; 0x0e
    d3c8:	bf 85       	ldd	r27, Y+15	; 0x0f
    d3ca:	89 83       	std	Y+1, r24	; 0x01
    d3cc:	9a 83       	std	Y+2, r25	; 0x02
    d3ce:	ab 83       	std	Y+3, r26	; 0x03
    d3d0:	bc 83       	std	Y+4, r27	; 0x04
    d3d2:	ad cf       	rjmp	.-166    	; 0xd32e <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x8e>
    d3d4:	81 e0       	ldi	r24, 0x01	; 1
    d3d6:	89 87       	std	Y+9, r24	; 0x09
    d3d8:	aa cf       	rjmp	.-172    	; 0xd32e <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x8e>
    d3da:	8a 85       	ldd	r24, Y+10	; 0x0a
    d3dc:	88 23       	and	r24, r24
    d3de:	91 f0       	breq	.+36     	; 0xd404 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x164>
    d3e0:	29 81       	ldd	r18, Y+1	; 0x01
    d3e2:	3a 81       	ldd	r19, Y+2	; 0x02
    d3e4:	4b 81       	ldd	r20, Y+3	; 0x03
    d3e6:	5c 81       	ldd	r21, Y+4	; 0x04
    d3e8:	88 89       	ldd	r24, Y+16	; 0x10
    d3ea:	99 89       	ldd	r25, Y+17	; 0x11
    d3ec:	aa 89       	ldd	r26, Y+18	; 0x12
    d3ee:	bb 89       	ldd	r27, Y+19	; 0x13
    d3f0:	bc 01       	movw	r22, r24
    d3f2:	cd 01       	movw	r24, r26
    d3f4:	0e 94 2a 7a 	call	0xf454	; 0xf454 <__mulsi3>
    d3f8:	dc 01       	movw	r26, r24
    d3fa:	cb 01       	movw	r24, r22
    d3fc:	8d 83       	std	Y+5, r24	; 0x05
    d3fe:	9e 83       	std	Y+6, r25	; 0x06
    d400:	af 83       	std	Y+7, r26	; 0x07
    d402:	b8 87       	std	Y+8, r27	; 0x08
    d404:	21 e0       	ldi	r18, 0x01	; 1
    d406:	89 81       	ldd	r24, Y+1	; 0x01
    d408:	9a 81       	ldd	r25, Y+2	; 0x02
    d40a:	ab 81       	ldd	r26, Y+3	; 0x03
    d40c:	bc 81       	ldd	r27, Y+4	; 0x04
    d40e:	04 97       	sbiw	r24, 0x04	; 4
    d410:	a1 05       	cpc	r26, r1
    d412:	b1 05       	cpc	r27, r1
    d414:	09 f0       	breq	.+2      	; 0xd418 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x178>
    d416:	20 e0       	ldi	r18, 0x00	; 0
    d418:	88 8d       	ldd	r24, Y+24	; 0x18
    d41a:	99 8d       	ldd	r25, Y+25	; 0x19
    d41c:	fc 01       	movw	r30, r24
    d41e:	20 83       	st	Z, r18
    d420:	89 81       	ldd	r24, Y+1	; 0x01
    d422:	9a 81       	ldd	r25, Y+2	; 0x02
    d424:	ab 81       	ldd	r26, Y+3	; 0x03
    d426:	bc 81       	ldd	r27, Y+4	; 0x04
    d428:	88 0f       	add	r24, r24
    d42a:	99 1f       	adc	r25, r25
    d42c:	aa 1f       	adc	r26, r26
    d42e:	bb 1f       	adc	r27, r27
    d430:	88 0f       	add	r24, r24
    d432:	99 1f       	adc	r25, r25
    d434:	aa 1f       	adc	r26, r26
    d436:	bb 1f       	adc	r27, r27
    d438:	88 0f       	add	r24, r24
    d43a:	99 1f       	adc	r25, r25
    d43c:	aa 1f       	adc	r26, r26
    d43e:	bb 1f       	adc	r27, r27
    d440:	88 0f       	add	r24, r24
    d442:	99 1f       	adc	r25, r25
    d444:	aa 1f       	adc	r26, r26
    d446:	bb 1f       	adc	r27, r27
    d448:	88 0f       	add	r24, r24
    d44a:	99 1f       	adc	r25, r25
    d44c:	aa 1f       	adc	r26, r26
    d44e:	bb 1f       	adc	r27, r27
    d450:	88 0f       	add	r24, r24
    d452:	99 1f       	adc	r25, r25
    d454:	aa 1f       	adc	r26, r26
    d456:	bb 1f       	adc	r27, r27
    d458:	88 0f       	add	r24, r24
    d45a:	99 1f       	adc	r25, r25
    d45c:	aa 1f       	adc	r26, r26
    d45e:	bb 1f       	adc	r27, r27
    d460:	92 50       	subi	r25, 0x02	; 2
    d462:	a1 09       	sbc	r26, r1
    d464:	b1 09       	sbc	r27, r1
    d466:	2c 89       	ldd	r18, Y+20	; 0x14
    d468:	3d 89       	ldd	r19, Y+21	; 0x15
    d46a:	f9 01       	movw	r30, r18
    d46c:	80 83       	st	Z, r24
    d46e:	91 83       	std	Z+1, r25	; 0x01
    d470:	a2 83       	std	Z+2, r26	; 0x02
    d472:	b3 83       	std	Z+3, r27	; 0x03
    d474:	8c 89       	ldd	r24, Y+20	; 0x14
    d476:	9d 89       	ldd	r25, Y+21	; 0x15
    d478:	fc 01       	movw	r30, r24
    d47a:	14 82       	std	Z+4, r1	; 0x04
    d47c:	15 82       	std	Z+5, r1	; 0x05
    d47e:	16 82       	std	Z+6, r1	; 0x06
    d480:	17 82       	std	Z+7, r1	; 0x07
    d482:	2c 89       	ldd	r18, Y+20	; 0x14
    d484:	3d 89       	ldd	r19, Y+21	; 0x15
    d486:	81 e0       	ldi	r24, 0x01	; 1
    d488:	90 e0       	ldi	r25, 0x00	; 0
    d48a:	a0 e0       	ldi	r26, 0x00	; 0
    d48c:	b0 e0       	ldi	r27, 0x00	; 0
    d48e:	f9 01       	movw	r30, r18
    d490:	80 87       	std	Z+8, r24	; 0x08
    d492:	91 87       	std	Z+9, r25	; 0x09
    d494:	a2 87       	std	Z+10, r26	; 0x0a
    d496:	b3 87       	std	Z+11, r27	; 0x0b
    d498:	8d 81       	ldd	r24, Y+5	; 0x05
    d49a:	9e 81       	ldd	r25, Y+6	; 0x06
    d49c:	af 81       	ldd	r26, Y+7	; 0x07
    d49e:	b8 85       	ldd	r27, Y+8	; 0x08
    d4a0:	bc 01       	movw	r22, r24
    d4a2:	cd 01       	movw	r24, r26
    d4a4:	69 96       	adiw	r28, 0x19	; 25
    d4a6:	cd bf       	out	0x3d, r28	; 61
    d4a8:	de bf       	out	0x3e, r29	; 62
    d4aa:	df 91       	pop	r29
    d4ac:	cf 91       	pop	r28
    d4ae:	1f 91       	pop	r17
    d4b0:	0f 91       	pop	r16
    d4b2:	08 95       	ret

0000d4b4 <_Z19multisynth_estimatemP13u_si5351_regsPbS1_>:
 * Frequency_Hz multisynth_estimate(Frequency_Hz freq_Fout, Union_si5351_regs *reg, bool *int_mode, bool *divBy4)
 *
 * Note: do not call this function with global value freqVCOB == zero
 */
	Frequency_Hz multisynth_estimate(Frequency_Hz freq_Fout, Union_si5351_regs *reg, bool *int_mode, bool *divBy4)
	{
    d4b4:	0f 93       	push	r16
    d4b6:	1f 93       	push	r17
    d4b8:	cf 93       	push	r28
    d4ba:	df 93       	push	r29
    d4bc:	cd b7       	in	r28, 0x3d	; 61
    d4be:	de b7       	in	r29, 0x3e	; 62
    d4c0:	6e 97       	sbiw	r28, 0x1e	; 30
    d4c2:	cd bf       	out	0x3d, r28	; 61
    d4c4:	de bf       	out	0x3e, r29	; 62
    d4c6:	6d 8b       	std	Y+21, r22	; 0x15
    d4c8:	7e 8b       	std	Y+22, r23	; 0x16
    d4ca:	8f 8b       	std	Y+23, r24	; 0x17
    d4cc:	98 8f       	std	Y+24, r25	; 0x18
    d4ce:	49 8f       	std	Y+25, r20	; 0x19
    d4d0:	5a 8f       	std	Y+26, r21	; 0x1a
    d4d2:	2b 8f       	std	Y+27, r18	; 0x1b
    d4d4:	3c 8f       	std	Y+28, r19	; 0x1c
    d4d6:	0d 8f       	std	Y+29, r16	; 0x1d
    d4d8:	1e 8f       	std	Y+30, r17	; 0x1e
				return(0);
			}
#endif  /* DO_BOUNDS_CHECKING */

		/* Determine integer part of feedback equation */
		a = freqVCOB / freq_Fout;
    d4da:	80 91 a7 4a 	lds	r24, 0x4AA7	; 0x804aa7 <_ZL8freqVCOB>
    d4de:	90 91 a8 4a 	lds	r25, 0x4AA8	; 0x804aa8 <_ZL8freqVCOB+0x1>
    d4e2:	a0 91 a9 4a 	lds	r26, 0x4AA9	; 0x804aa9 <_ZL8freqVCOB+0x2>
    d4e6:	b0 91 aa 4a 	lds	r27, 0x4AAA	; 0x804aaa <_ZL8freqVCOB+0x3>
    d4ea:	2d 89       	ldd	r18, Y+21	; 0x15
    d4ec:	3e 89       	ldd	r19, Y+22	; 0x16
    d4ee:	4f 89       	ldd	r20, Y+23	; 0x17
    d4f0:	58 8d       	ldd	r21, Y+24	; 0x18
    d4f2:	bc 01       	movw	r22, r24
    d4f4:	cd 01       	movw	r24, r26
    d4f6:	0e 94 62 7a 	call	0xf4c4	; 0xf4c4 <__udivmodsi4>
    d4fa:	da 01       	movw	r26, r20
    d4fc:	c9 01       	movw	r24, r18
    d4fe:	89 83       	std	Y+1, r24	; 0x01
    d500:	9a 83       	std	Y+2, r25	; 0x02
    d502:	ab 83       	std	Y+3, r26	; 0x03
    d504:	bc 83       	std	Y+4, r27	; 0x04
		b = freqVCOB % freq_Fout;
    d506:	80 91 a7 4a 	lds	r24, 0x4AA7	; 0x804aa7 <_ZL8freqVCOB>
    d50a:	90 91 a8 4a 	lds	r25, 0x4AA8	; 0x804aa8 <_ZL8freqVCOB+0x1>
    d50e:	a0 91 a9 4a 	lds	r26, 0x4AA9	; 0x804aa9 <_ZL8freqVCOB+0x2>
    d512:	b0 91 aa 4a 	lds	r27, 0x4AAA	; 0x804aaa <_ZL8freqVCOB+0x3>
    d516:	2d 89       	ldd	r18, Y+21	; 0x15
    d518:	3e 89       	ldd	r19, Y+22	; 0x16
    d51a:	4f 89       	ldd	r20, Y+23	; 0x17
    d51c:	58 8d       	ldd	r21, Y+24	; 0x18
    d51e:	bc 01       	movw	r22, r24
    d520:	cd 01       	movw	r24, r26
    d522:	0e 94 62 7a 	call	0xf4c4	; 0xf4c4 <__udivmodsi4>
    d526:	dc 01       	movw	r26, r24
    d528:	cb 01       	movw	r24, r22
    d52a:	8d 87       	std	Y+13, r24	; 0x0d
    d52c:	9e 87       	std	Y+14, r25	; 0x0e
    d52e:	af 87       	std	Y+15, r26	; 0x0f
    d530:	b8 8b       	std	Y+16, r27	; 0x10
		c = freq_Fout;
    d532:	8d 89       	ldd	r24, Y+21	; 0x15
    d534:	9e 89       	ldd	r25, Y+22	; 0x16
    d536:	af 89       	ldd	r26, Y+23	; 0x17
    d538:	b8 8d       	ldd	r27, Y+24	; 0x18
    d53a:	89 8b       	std	Y+17, r24	; 0x11
    d53c:	9a 8b       	std	Y+18, r25	; 0x12
    d53e:	ab 8b       	std	Y+19, r26	; 0x13
    d540:	bc 8b       	std	Y+20, r27	; 0x14
		reduce_by_gcd(&b, &c);  /* prevents overflow conditions and makes results agree with ClockBuilder */
    d542:	9e 01       	movw	r18, r28
    d544:	2f 5e       	subi	r18, 0xEF	; 239
    d546:	3f 4f       	sbci	r19, 0xFF	; 255
    d548:	ce 01       	movw	r24, r28
    d54a:	0d 96       	adiw	r24, 0x0d	; 13
    d54c:	b9 01       	movw	r22, r18
    d54e:	0e 94 9d 68 	call	0xd13a	; 0xd13a <_Z13reduce_by_gcdPmS_>

		/* Calculate the approximated output frequency given by fOUT = fvco / (a + b/c) */
		freq_Fout = freqVCOB;
    d552:	80 91 a7 4a 	lds	r24, 0x4AA7	; 0x804aa7 <_ZL8freqVCOB>
    d556:	90 91 a8 4a 	lds	r25, 0x4AA8	; 0x804aa8 <_ZL8freqVCOB+0x1>
    d55a:	a0 91 a9 4a 	lds	r26, 0x4AA9	; 0x804aa9 <_ZL8freqVCOB+0x2>
    d55e:	b0 91 aa 4a 	lds	r27, 0x4AAA	; 0x804aaa <_ZL8freqVCOB+0x3>
    d562:	8d 8b       	std	Y+21, r24	; 0x15
    d564:	9e 8b       	std	Y+22, r25	; 0x16
    d566:	af 8b       	std	Y+23, r26	; 0x17
    d568:	b8 8f       	std	Y+24, r27	; 0x18
		freq_Fout /= (a * c + b);
    d56a:	29 89       	ldd	r18, Y+17	; 0x11
    d56c:	3a 89       	ldd	r19, Y+18	; 0x12
    d56e:	4b 89       	ldd	r20, Y+19	; 0x13
    d570:	5c 89       	ldd	r21, Y+20	; 0x14
    d572:	89 81       	ldd	r24, Y+1	; 0x01
    d574:	9a 81       	ldd	r25, Y+2	; 0x02
    d576:	ab 81       	ldd	r26, Y+3	; 0x03
    d578:	bc 81       	ldd	r27, Y+4	; 0x04
    d57a:	bc 01       	movw	r22, r24
    d57c:	cd 01       	movw	r24, r26
    d57e:	0e 94 2a 7a 	call	0xf454	; 0xf454 <__mulsi3>
    d582:	9b 01       	movw	r18, r22
    d584:	ac 01       	movw	r20, r24
    d586:	8d 85       	ldd	r24, Y+13	; 0x0d
    d588:	9e 85       	ldd	r25, Y+14	; 0x0e
    d58a:	af 85       	ldd	r26, Y+15	; 0x0f
    d58c:	b8 89       	ldd	r27, Y+16	; 0x10
    d58e:	28 0f       	add	r18, r24
    d590:	39 1f       	adc	r19, r25
    d592:	4a 1f       	adc	r20, r26
    d594:	5b 1f       	adc	r21, r27
    d596:	8d 89       	ldd	r24, Y+21	; 0x15
    d598:	9e 89       	ldd	r25, Y+22	; 0x16
    d59a:	af 89       	ldd	r26, Y+23	; 0x17
    d59c:	b8 8d       	ldd	r27, Y+24	; 0x18
    d59e:	bc 01       	movw	r22, r24
    d5a0:	cd 01       	movw	r24, r26
    d5a2:	0e 94 62 7a 	call	0xf4c4	; 0xf4c4 <__udivmodsi4>
    d5a6:	da 01       	movw	r26, r20
    d5a8:	c9 01       	movw	r24, r18
    d5aa:	8d 8b       	std	Y+21, r24	; 0x15
    d5ac:	9e 8b       	std	Y+22, r25	; 0x16
    d5ae:	af 8b       	std	Y+23, r26	; 0x17
    d5b0:	b8 8f       	std	Y+24, r27	; 0x18
		freq_Fout *= c;
    d5b2:	89 89       	ldd	r24, Y+17	; 0x11
    d5b4:	9a 89       	ldd	r25, Y+18	; 0x12
    d5b6:	ab 89       	ldd	r26, Y+19	; 0x13
    d5b8:	bc 89       	ldd	r27, Y+20	; 0x14
    d5ba:	2d 89       	ldd	r18, Y+21	; 0x15
    d5bc:	3e 89       	ldd	r19, Y+22	; 0x16
    d5be:	4f 89       	ldd	r20, Y+23	; 0x17
    d5c0:	58 8d       	ldd	r21, Y+24	; 0x18
    d5c2:	bc 01       	movw	r22, r24
    d5c4:	cd 01       	movw	r24, r26
    d5c6:	0e 94 2a 7a 	call	0xf454	; 0xf454 <__mulsi3>
    d5ca:	dc 01       	movw	r26, r24
    d5cc:	cb 01       	movw	r24, r22
    d5ce:	8d 8b       	std	Y+21, r24	; 0x15
    d5d0:	9e 8b       	std	Y+22, r25	; 0x16
    d5d2:	af 8b       	std	Y+23, r26	; 0x17
    d5d4:	b8 8f       	std	Y+24, r27	; 0x18

		*int_mode = (b == 0) && !(a % 2);
    d5d6:	8d 85       	ldd	r24, Y+13	; 0x0d
    d5d8:	9e 85       	ldd	r25, Y+14	; 0x0e
    d5da:	af 85       	ldd	r26, Y+15	; 0x0f
    d5dc:	b8 89       	ldd	r27, Y+16	; 0x10
    d5de:	89 2b       	or	r24, r25
    d5e0:	8a 2b       	or	r24, r26
    d5e2:	8b 2b       	or	r24, r27
    d5e4:	71 f4       	brne	.+28     	; 0xd602 <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x14e>
    d5e6:	89 81       	ldd	r24, Y+1	; 0x01
    d5e8:	9a 81       	ldd	r25, Y+2	; 0x02
    d5ea:	ab 81       	ldd	r26, Y+3	; 0x03
    d5ec:	bc 81       	ldd	r27, Y+4	; 0x04
    d5ee:	81 70       	andi	r24, 0x01	; 1
    d5f0:	99 27       	eor	r25, r25
    d5f2:	aa 27       	eor	r26, r26
    d5f4:	bb 27       	eor	r27, r27
    d5f6:	89 2b       	or	r24, r25
    d5f8:	8a 2b       	or	r24, r26
    d5fa:	8b 2b       	or	r24, r27
    d5fc:	11 f4       	brne	.+4      	; 0xd602 <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x14e>
    d5fe:	21 e0       	ldi	r18, 0x01	; 1
    d600:	01 c0       	rjmp	.+2      	; 0xd604 <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x150>
    d602:	20 e0       	ldi	r18, 0x00	; 0
    d604:	8b 8d       	ldd	r24, Y+27	; 0x1b
    d606:	9c 8d       	ldd	r25, Y+28	; 0x1c
    d608:	fc 01       	movw	r30, r24
    d60a:	20 83       	st	Z, r18
		*divBy4 = (a == 4) && *int_mode;
    d60c:	89 81       	ldd	r24, Y+1	; 0x01
    d60e:	9a 81       	ldd	r25, Y+2	; 0x02
    d610:	ab 81       	ldd	r26, Y+3	; 0x03
    d612:	bc 81       	ldd	r27, Y+4	; 0x04
    d614:	04 97       	sbiw	r24, 0x04	; 4
    d616:	a1 05       	cpc	r26, r1
    d618:	b1 05       	cpc	r27, r1
    d61a:	41 f4       	brne	.+16     	; 0xd62c <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x178>
    d61c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    d61e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    d620:	fc 01       	movw	r30, r24
    d622:	80 81       	ld	r24, Z
    d624:	88 23       	and	r24, r24
    d626:	11 f0       	breq	.+4      	; 0xd62c <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x178>
    d628:	21 e0       	ldi	r18, 0x01	; 1
    d62a:	01 c0       	rjmp	.+2      	; 0xd62e <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x17a>
    d62c:	20 e0       	ldi	r18, 0x00	; 0
    d62e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    d630:	9e 8d       	ldd	r25, Y+30	; 0x1e
    d632:	fc 01       	movw	r30, r24
    d634:	20 83       	st	Z, r18

		/* Calculate parameters */
		if(*divBy4)
    d636:	8d 8d       	ldd	r24, Y+29	; 0x1d
    d638:	9e 8d       	ldd	r25, Y+30	; 0x1e
    d63a:	fc 01       	movw	r30, r24
    d63c:	80 81       	ld	r24, Z
    d63e:	88 23       	and	r24, r24
    d640:	d1 f0       	breq	.+52     	; 0xd676 <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x1c2>
		{
			reg->ms.p1 = 0;
    d642:	89 8d       	ldd	r24, Y+25	; 0x19
    d644:	9a 8d       	ldd	r25, Y+26	; 0x1a
    d646:	fc 01       	movw	r30, r24
    d648:	10 82       	st	Z, r1
    d64a:	11 82       	std	Z+1, r1	; 0x01
    d64c:	12 82       	std	Z+2, r1	; 0x02
    d64e:	13 82       	std	Z+3, r1	; 0x03
			reg->ms.p2 = 0;
    d650:	89 8d       	ldd	r24, Y+25	; 0x19
    d652:	9a 8d       	ldd	r25, Y+26	; 0x1a
    d654:	fc 01       	movw	r30, r24
    d656:	14 82       	std	Z+4, r1	; 0x04
    d658:	15 82       	std	Z+5, r1	; 0x05
    d65a:	16 82       	std	Z+6, r1	; 0x06
    d65c:	17 82       	std	Z+7, r1	; 0x07
			reg->ms.p3 = 1;
    d65e:	29 8d       	ldd	r18, Y+25	; 0x19
    d660:	3a 8d       	ldd	r19, Y+26	; 0x1a
    d662:	81 e0       	ldi	r24, 0x01	; 1
    d664:	90 e0       	ldi	r25, 0x00	; 0
    d666:	a0 e0       	ldi	r26, 0x00	; 0
    d668:	b0 e0       	ldi	r27, 0x00	; 0
    d66a:	f9 01       	movw	r30, r18
    d66c:	80 87       	std	Z+8, r24	; 0x08
    d66e:	91 87       	std	Z+9, r25	; 0x09
    d670:	a2 87       	std	Z+10, r26	; 0x0a
    d672:	b3 87       	std	Z+11, r27	; 0x0b
    d674:	92 c0       	rjmp	.+292    	; 0xd79a <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x2e6>
		}
		else
		{
			uint32_t bx128 = b << 7;
    d676:	8d 85       	ldd	r24, Y+13	; 0x0d
    d678:	9e 85       	ldd	r25, Y+14	; 0x0e
    d67a:	af 85       	ldd	r26, Y+15	; 0x0f
    d67c:	b8 89       	ldd	r27, Y+16	; 0x10
    d67e:	88 0f       	add	r24, r24
    d680:	99 1f       	adc	r25, r25
    d682:	aa 1f       	adc	r26, r26
    d684:	bb 1f       	adc	r27, r27
    d686:	88 0f       	add	r24, r24
    d688:	99 1f       	adc	r25, r25
    d68a:	aa 1f       	adc	r26, r26
    d68c:	bb 1f       	adc	r27, r27
    d68e:	88 0f       	add	r24, r24
    d690:	99 1f       	adc	r25, r25
    d692:	aa 1f       	adc	r26, r26
    d694:	bb 1f       	adc	r27, r27
    d696:	88 0f       	add	r24, r24
    d698:	99 1f       	adc	r25, r25
    d69a:	aa 1f       	adc	r26, r26
    d69c:	bb 1f       	adc	r27, r27
    d69e:	88 0f       	add	r24, r24
    d6a0:	99 1f       	adc	r25, r25
    d6a2:	aa 1f       	adc	r26, r26
    d6a4:	bb 1f       	adc	r27, r27
    d6a6:	88 0f       	add	r24, r24
    d6a8:	99 1f       	adc	r25, r25
    d6aa:	aa 1f       	adc	r26, r26
    d6ac:	bb 1f       	adc	r27, r27
    d6ae:	88 0f       	add	r24, r24
    d6b0:	99 1f       	adc	r25, r25
    d6b2:	aa 1f       	adc	r26, r26
    d6b4:	bb 1f       	adc	r27, r27
    d6b6:	8d 83       	std	Y+5, r24	; 0x05
    d6b8:	9e 83       	std	Y+6, r25	; 0x06
    d6ba:	af 83       	std	Y+7, r26	; 0x07
    d6bc:	b8 87       	std	Y+8, r27	; 0x08
			uint32_t bx128overc = bx128 / c;
    d6be:	29 89       	ldd	r18, Y+17	; 0x11
    d6c0:	3a 89       	ldd	r19, Y+18	; 0x12
    d6c2:	4b 89       	ldd	r20, Y+19	; 0x13
    d6c4:	5c 89       	ldd	r21, Y+20	; 0x14
    d6c6:	8d 81       	ldd	r24, Y+5	; 0x05
    d6c8:	9e 81       	ldd	r25, Y+6	; 0x06
    d6ca:	af 81       	ldd	r26, Y+7	; 0x07
    d6cc:	b8 85       	ldd	r27, Y+8	; 0x08
    d6ce:	bc 01       	movw	r22, r24
    d6d0:	cd 01       	movw	r24, r26
    d6d2:	0e 94 62 7a 	call	0xf4c4	; 0xf4c4 <__udivmodsi4>
    d6d6:	da 01       	movw	r26, r20
    d6d8:	c9 01       	movw	r24, r18
    d6da:	89 87       	std	Y+9, r24	; 0x09
    d6dc:	9a 87       	std	Y+10, r25	; 0x0a
    d6de:	ab 87       	std	Y+11, r26	; 0x0b
    d6e0:	bc 87       	std	Y+12, r27	; 0x0c
			reg->ms.p1 = (uint32_t)((a << 7) + bx128overc) - 512;   /* 128 * a + floor((128 * b) / c) - 512 */
    d6e2:	89 81       	ldd	r24, Y+1	; 0x01
    d6e4:	9a 81       	ldd	r25, Y+2	; 0x02
    d6e6:	ab 81       	ldd	r26, Y+3	; 0x03
    d6e8:	bc 81       	ldd	r27, Y+4	; 0x04
    d6ea:	88 0f       	add	r24, r24
    d6ec:	99 1f       	adc	r25, r25
    d6ee:	aa 1f       	adc	r26, r26
    d6f0:	bb 1f       	adc	r27, r27
    d6f2:	88 0f       	add	r24, r24
    d6f4:	99 1f       	adc	r25, r25
    d6f6:	aa 1f       	adc	r26, r26
    d6f8:	bb 1f       	adc	r27, r27
    d6fa:	88 0f       	add	r24, r24
    d6fc:	99 1f       	adc	r25, r25
    d6fe:	aa 1f       	adc	r26, r26
    d700:	bb 1f       	adc	r27, r27
    d702:	88 0f       	add	r24, r24
    d704:	99 1f       	adc	r25, r25
    d706:	aa 1f       	adc	r26, r26
    d708:	bb 1f       	adc	r27, r27
    d70a:	88 0f       	add	r24, r24
    d70c:	99 1f       	adc	r25, r25
    d70e:	aa 1f       	adc	r26, r26
    d710:	bb 1f       	adc	r27, r27
    d712:	88 0f       	add	r24, r24
    d714:	99 1f       	adc	r25, r25
    d716:	aa 1f       	adc	r26, r26
    d718:	bb 1f       	adc	r27, r27
    d71a:	88 0f       	add	r24, r24
    d71c:	99 1f       	adc	r25, r25
    d71e:	aa 1f       	adc	r26, r26
    d720:	bb 1f       	adc	r27, r27
    d722:	9c 01       	movw	r18, r24
    d724:	ad 01       	movw	r20, r26
    d726:	89 85       	ldd	r24, Y+9	; 0x09
    d728:	9a 85       	ldd	r25, Y+10	; 0x0a
    d72a:	ab 85       	ldd	r26, Y+11	; 0x0b
    d72c:	bc 85       	ldd	r27, Y+12	; 0x0c
    d72e:	82 0f       	add	r24, r18
    d730:	93 1f       	adc	r25, r19
    d732:	a4 1f       	adc	r26, r20
    d734:	b5 1f       	adc	r27, r21
    d736:	92 50       	subi	r25, 0x02	; 2
    d738:	a1 09       	sbc	r26, r1
    d73a:	b1 09       	sbc	r27, r1
    d73c:	29 8d       	ldd	r18, Y+25	; 0x19
    d73e:	3a 8d       	ldd	r19, Y+26	; 0x1a
    d740:	f9 01       	movw	r30, r18
    d742:	80 83       	st	Z, r24
    d744:	91 83       	std	Z+1, r25	; 0x01
    d746:	a2 83       	std	Z+2, r26	; 0x02
    d748:	b3 83       	std	Z+3, r27	; 0x03
			reg->ms.p2 = (uint32_t)bx128 - (c * bx128overc);        /* 128 * b - c * floor((128 * b) / c) */
    d74a:	29 89       	ldd	r18, Y+17	; 0x11
    d74c:	3a 89       	ldd	r19, Y+18	; 0x12
    d74e:	4b 89       	ldd	r20, Y+19	; 0x13
    d750:	5c 89       	ldd	r21, Y+20	; 0x14
    d752:	89 85       	ldd	r24, Y+9	; 0x09
    d754:	9a 85       	ldd	r25, Y+10	; 0x0a
    d756:	ab 85       	ldd	r26, Y+11	; 0x0b
    d758:	bc 85       	ldd	r27, Y+12	; 0x0c
    d75a:	bc 01       	movw	r22, r24
    d75c:	cd 01       	movw	r24, r26
    d75e:	0e 94 2a 7a 	call	0xf454	; 0xf454 <__mulsi3>
    d762:	9b 01       	movw	r18, r22
    d764:	ac 01       	movw	r20, r24
    d766:	8d 81       	ldd	r24, Y+5	; 0x05
    d768:	9e 81       	ldd	r25, Y+6	; 0x06
    d76a:	af 81       	ldd	r26, Y+7	; 0x07
    d76c:	b8 85       	ldd	r27, Y+8	; 0x08
    d76e:	82 1b       	sub	r24, r18
    d770:	93 0b       	sbc	r25, r19
    d772:	a4 0b       	sbc	r26, r20
    d774:	b5 0b       	sbc	r27, r21
    d776:	29 8d       	ldd	r18, Y+25	; 0x19
    d778:	3a 8d       	ldd	r19, Y+26	; 0x1a
    d77a:	f9 01       	movw	r30, r18
    d77c:	84 83       	std	Z+4, r24	; 0x04
    d77e:	95 83       	std	Z+5, r25	; 0x05
    d780:	a6 83       	std	Z+6, r26	; 0x06
    d782:	b7 83       	std	Z+7, r27	; 0x07
			reg->ms.p3 = c;
    d784:	89 89       	ldd	r24, Y+17	; 0x11
    d786:	9a 89       	ldd	r25, Y+18	; 0x12
    d788:	ab 89       	ldd	r26, Y+19	; 0x13
    d78a:	bc 89       	ldd	r27, Y+20	; 0x14
    d78c:	29 8d       	ldd	r18, Y+25	; 0x19
    d78e:	3a 8d       	ldd	r19, Y+26	; 0x1a
    d790:	f9 01       	movw	r30, r18
    d792:	80 87       	std	Z+8, r24	; 0x08
    d794:	91 87       	std	Z+9, r25	; 0x09
    d796:	a2 87       	std	Z+10, r26	; 0x0a
    d798:	b3 87       	std	Z+11, r27	; 0x0b
		}

		return(freq_Fout);
    d79a:	8d 89       	ldd	r24, Y+21	; 0x15
    d79c:	9e 89       	ldd	r25, Y+22	; 0x16
    d79e:	af 89       	ldd	r26, Y+23	; 0x17
    d7a0:	b8 8d       	ldd	r27, Y+24	; 0x18
	}
    d7a2:	bc 01       	movw	r22, r24
    d7a4:	cd 01       	movw	r24, r26
    d7a6:	6e 96       	adiw	r28, 0x1e	; 30
    d7a8:	cd bf       	out	0x3d, r28	; 61
    d7aa:	de bf       	out	0x3e, r29	; 62
    d7ac:	df 91       	pop	r29
    d7ae:	cf 91       	pop	r28
    d7b0:	1f 91       	pop	r17
    d7b2:	0f 91       	pop	r16
    d7b4:	08 95       	ret

0000d7b6 <_Z17si5351_write_bulkhPhh>:


	bool si5351_write_bulk(uint8_t regAddr, uint8_t *data, uint8_t bytes)
	{
    d7b6:	cf 93       	push	r28
    d7b8:	df 93       	push	r29
    d7ba:	cd b7       	in	r28, 0x3d	; 61
    d7bc:	de b7       	in	r29, 0x3e	; 62
    d7be:	26 97       	sbiw	r28, 0x06	; 6
    d7c0:	cd bf       	out	0x3d, r28	; 61
    d7c2:	de bf       	out	0x3e, r29	; 62
    d7c4:	8b 83       	std	Y+3, r24	; 0x03
    d7c6:	6c 83       	std	Y+4, r22	; 0x04
    d7c8:	7d 83       	std	Y+5, r23	; 0x05
    d7ca:	4e 83       	std	Y+6, r20	; 0x06
		uint8_t tries = 10;
    d7cc:	8a e0       	ldi	r24, 0x0A	; 10
    d7ce:	89 83       	std	Y+1, r24	; 0x01
		bool fail;
		while(tries-- && (fail = I2C_1_SendData(SI5351_I2C_SLAVE_ADDR, regAddr, data, bytes) != bytes));
    d7d0:	89 81       	ldd	r24, Y+1	; 0x01
    d7d2:	9f ef       	ldi	r25, 0xFF	; 255
    d7d4:	98 0f       	add	r25, r24
    d7d6:	99 83       	std	Y+1, r25	; 0x01
    d7d8:	88 23       	and	r24, r24
    d7da:	a1 f0       	breq	.+40     	; 0xd804 <_Z17si5351_write_bulkhPhh+0x4e>
    d7dc:	8c 81       	ldd	r24, Y+4	; 0x04
    d7de:	9d 81       	ldd	r25, Y+5	; 0x05
    d7e0:	2e 81       	ldd	r18, Y+6	; 0x06
    d7e2:	ac 01       	movw	r20, r24
    d7e4:	6b 81       	ldd	r22, Y+3	; 0x03
    d7e6:	80 ec       	ldi	r24, 0xC0	; 192
    d7e8:	0e 94 79 51 	call	0xa2f2	; 0xa2f2 <I2C_1_SendData>
    d7ec:	28 2f       	mov	r18, r24
    d7ee:	81 e0       	ldi	r24, 0x01	; 1
    d7f0:	9e 81       	ldd	r25, Y+6	; 0x06
    d7f2:	29 17       	cp	r18, r25
    d7f4:	09 f4       	brne	.+2      	; 0xd7f8 <_Z17si5351_write_bulkhPhh+0x42>
    d7f6:	80 e0       	ldi	r24, 0x00	; 0
    d7f8:	8a 83       	std	Y+2, r24	; 0x02
    d7fa:	8a 81       	ldd	r24, Y+2	; 0x02
    d7fc:	88 23       	and	r24, r24
    d7fe:	11 f0       	breq	.+4      	; 0xd804 <_Z17si5351_write_bulkhPhh+0x4e>
    d800:	81 e0       	ldi	r24, 0x01	; 1
    d802:	01 c0       	rjmp	.+2      	; 0xd806 <_Z17si5351_write_bulkhPhh+0x50>
    d804:	80 e0       	ldi	r24, 0x00	; 0
    d806:	88 23       	and	r24, r24
    d808:	09 f0       	breq	.+2      	; 0xd80c <_Z17si5351_write_bulkhPhh+0x56>
    d80a:	e2 cf       	rjmp	.-60     	; 0xd7d0 <_Z17si5351_write_bulkhPhh+0x1a>
		return(fail);
    d80c:	8a 81       	ldd	r24, Y+2	; 0x02
	}
    d80e:	26 96       	adiw	r28, 0x06	; 6
    d810:	cd bf       	out	0x3d, r28	; 61
    d812:	de bf       	out	0x3e, r29	; 62
    d814:	df 91       	pop	r29
    d816:	cf 91       	pop	r28
    d818:	08 95       	ret

0000d81a <_Z16si5351_read_bulkhPhh>:

	bool si5351_read_bulk(uint8_t regAddr, uint8_t *data, uint8_t bytes)
	{
    d81a:	cf 93       	push	r28
    d81c:	df 93       	push	r29
    d81e:	cd b7       	in	r28, 0x3d	; 61
    d820:	de b7       	in	r29, 0x3e	; 62
    d822:	26 97       	sbiw	r28, 0x06	; 6
    d824:	cd bf       	out	0x3d, r28	; 61
    d826:	de bf       	out	0x3e, r29	; 62
    d828:	8b 83       	std	Y+3, r24	; 0x03
    d82a:	6c 83       	std	Y+4, r22	; 0x04
    d82c:	7d 83       	std	Y+5, r23	; 0x05
    d82e:	4e 83       	std	Y+6, r20	; 0x06
		uint8_t tries = 10;
    d830:	8a e0       	ldi	r24, 0x0A	; 10
    d832:	89 83       	std	Y+1, r24	; 0x01
		bool fail;
		while(tries-- && (fail = I2C_1_GetData(SI5351_I2C_SLAVE_ADDR, regAddr, data, bytes) != bytes));
    d834:	89 81       	ldd	r24, Y+1	; 0x01
    d836:	9f ef       	ldi	r25, 0xFF	; 255
    d838:	98 0f       	add	r25, r24
    d83a:	99 83       	std	Y+1, r25	; 0x01
    d83c:	88 23       	and	r24, r24
    d83e:	a1 f0       	breq	.+40     	; 0xd868 <_Z16si5351_read_bulkhPhh+0x4e>
    d840:	8c 81       	ldd	r24, Y+4	; 0x04
    d842:	9d 81       	ldd	r25, Y+5	; 0x05
    d844:	2e 81       	ldd	r18, Y+6	; 0x06
    d846:	ac 01       	movw	r20, r24
    d848:	6b 81       	ldd	r22, Y+3	; 0x03
    d84a:	80 ec       	ldi	r24, 0xC0	; 192
    d84c:	0e 94 e2 51 	call	0xa3c4	; 0xa3c4 <I2C_1_GetData>
    d850:	28 2f       	mov	r18, r24
    d852:	81 e0       	ldi	r24, 0x01	; 1
    d854:	9e 81       	ldd	r25, Y+6	; 0x06
    d856:	29 17       	cp	r18, r25
    d858:	09 f4       	brne	.+2      	; 0xd85c <_Z16si5351_read_bulkhPhh+0x42>
    d85a:	80 e0       	ldi	r24, 0x00	; 0
    d85c:	8a 83       	std	Y+2, r24	; 0x02
    d85e:	8a 81       	ldd	r24, Y+2	; 0x02
    d860:	88 23       	and	r24, r24
    d862:	11 f0       	breq	.+4      	; 0xd868 <_Z16si5351_read_bulkhPhh+0x4e>
    d864:	81 e0       	ldi	r24, 0x01	; 1
    d866:	01 c0       	rjmp	.+2      	; 0xd86a <_Z16si5351_read_bulkhPhh+0x50>
    d868:	80 e0       	ldi	r24, 0x00	; 0
    d86a:	88 23       	and	r24, r24
    d86c:	09 f0       	breq	.+2      	; 0xd870 <_Z16si5351_read_bulkhPhh+0x56>
    d86e:	e2 cf       	rjmp	.-60     	; 0xd834 <_Z16si5351_read_bulkhPhh+0x1a>
		return(fail);
    d870:	8a 81       	ldd	r24, Y+2	; 0x02
	}
    d872:	26 96       	adiw	r28, 0x06	; 6
    d874:	cd bf       	out	0x3d, r28	; 61
    d876:	de bf       	out	0x3e, r29	; 62
    d878:	df 91       	pop	r29
    d87a:	cf 91       	pop	r28
    d87c:	08 95       	ret

0000d87e <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll>:
 *
 * Set the desired PLL source for a multisynth.
 *
 */
	bool set_multisynth_registers_source(Si5351_clock clk, Si5351_pll pll)
	{
    d87e:	cf 93       	push	r28
    d880:	df 93       	push	r29
    d882:	cd b7       	in	r28, 0x3d	; 61
    d884:	de b7       	in	r29, 0x3e	; 62
    d886:	25 97       	sbiw	r28, 0x05	; 5
    d888:	cd bf       	out	0x3d, r28	; 61
    d88a:	de bf       	out	0x3e, r29	; 62
    d88c:	8c 83       	std	Y+4, r24	; 0x04
    d88e:	6d 83       	std	Y+5, r22	; 0x05
		uint8_t reg_val;
		uint8_t data[2];
		
		if(si5351_read_bulk(SI5351_CLK0_CTRL + (uint8_t)clk, data, 1))
    d890:	8c 81       	ldd	r24, Y+4	; 0x04
    d892:	20 e1       	ldi	r18, 0x10	; 16
    d894:	28 0f       	add	r18, r24
    d896:	ce 01       	movw	r24, r28
    d898:	02 96       	adiw	r24, 0x02	; 2
    d89a:	41 e0       	ldi	r20, 0x01	; 1
    d89c:	bc 01       	movw	r22, r24
    d89e:	82 2f       	mov	r24, r18
    d8a0:	0e 94 0d 6c 	call	0xd81a	; 0xd81a <_Z16si5351_read_bulkhPhh>
    d8a4:	88 23       	and	r24, r24
    d8a6:	11 f0       	breq	.+4      	; 0xd8ac <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x2e>
		{
			return(true);
    d8a8:	81 e0       	ldi	r24, 0x01	; 1
    d8aa:	20 c0       	rjmp	.+64     	; 0xd8ec <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x6e>
		}
		
		reg_val = data[0];
    d8ac:	8a 81       	ldd	r24, Y+2	; 0x02
    d8ae:	89 83       	std	Y+1, r24	; 0x01

		if(pll == SI5351_PLLA)
    d8b0:	8d 81       	ldd	r24, Y+5	; 0x05
    d8b2:	81 30       	cpi	r24, 0x01	; 1
    d8b4:	21 f4       	brne	.+8      	; 0xd8be <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x40>
		{
			reg_val &= ~(SI5351_CLK_PLL_SELECT);
    d8b6:	89 81       	ldd	r24, Y+1	; 0x01
    d8b8:	8f 7d       	andi	r24, 0xDF	; 223
    d8ba:	89 83       	std	Y+1, r24	; 0x01
    d8bc:	06 c0       	rjmp	.+12     	; 0xd8ca <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x4c>
		}
		else if(pll == SI5351_PLLB)
    d8be:	8d 81       	ldd	r24, Y+5	; 0x05
    d8c0:	82 30       	cpi	r24, 0x02	; 2
    d8c2:	19 f4       	brne	.+6      	; 0xd8ca <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x4c>
		{
			reg_val |= SI5351_CLK_PLL_SELECT;
    d8c4:	89 81       	ldd	r24, Y+1	; 0x01
    d8c6:	80 62       	ori	r24, 0x20	; 32
    d8c8:	89 83       	std	Y+1, r24	; 0x01
		}

		data[0] = reg_val;
    d8ca:	89 81       	ldd	r24, Y+1	; 0x01
    d8cc:	8a 83       	std	Y+2, r24	; 0x02
		if(si5351_write_bulk(SI5351_CLK0_CTRL + (uint8_t)clk, data, 1))
    d8ce:	8c 81       	ldd	r24, Y+4	; 0x04
    d8d0:	20 e1       	ldi	r18, 0x10	; 16
    d8d2:	28 0f       	add	r18, r24
    d8d4:	ce 01       	movw	r24, r28
    d8d6:	02 96       	adiw	r24, 0x02	; 2
    d8d8:	41 e0       	ldi	r20, 0x01	; 1
    d8da:	bc 01       	movw	r22, r24
    d8dc:	82 2f       	mov	r24, r18
    d8de:	0e 94 db 6b 	call	0xd7b6	; 0xd7b6 <_Z17si5351_write_bulkhPhh>
    d8e2:	88 23       	and	r24, r24
    d8e4:	11 f0       	breq	.+4      	; 0xd8ea <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x6c>
		{
			return(true);
    d8e6:	81 e0       	ldi	r24, 0x01	; 1
    d8e8:	01 c0       	rjmp	.+2      	; 0xd8ec <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x6e>
		}
		
		return(false);
    d8ea:	80 e0       	ldi	r24, 0x00	; 0
	}
    d8ec:	25 96       	adiw	r28, 0x05	; 5
    d8ee:	cd bf       	out	0x3d, r28	; 61
    d8f0:	de bf       	out	0x3e, r29	; 62
    d8f2:	df 91       	pop	r29
    d8f4:	cf 91       	pop	r28
    d8f6:	08 95       	ret

0000d8f8 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb>:
 * r_div - Desired r_div ratio
 * div_by_4 - 1 Divide By 4 mode: 0 to disable
 *
 */
	bool set_multisynth_registers(Si5351_clock clk, Union_si5351_regs ms_reg, bool int_mode, uint8_t r_div, bool div_by_4)
	{
    d8f8:	8f 92       	push	r8
    d8fa:	af 92       	push	r10
    d8fc:	cf 92       	push	r12
    d8fe:	df 92       	push	r13
    d900:	ef 92       	push	r14
    d902:	ff 92       	push	r15
    d904:	0f 93       	push	r16
    d906:	1f 93       	push	r17
    d908:	cf 93       	push	r28
    d90a:	df 93       	push	r29
    d90c:	cd b7       	in	r28, 0x3d	; 61
    d90e:	de b7       	in	r29, 0x3e	; 62
    d910:	6e 97       	sbiw	r28, 0x1e	; 30
    d912:	cd bf       	out	0x3d, r28	; 61
    d914:	de bf       	out	0x3e, r29	; 62
    d916:	88 8b       	std	Y+16, r24	; 0x10
    d918:	c9 8a       	std	Y+17, r12	; 0x11
    d91a:	da 8a       	std	Y+18, r13	; 0x12
    d91c:	eb 8a       	std	Y+19, r14	; 0x13
    d91e:	fc 8a       	std	Y+20, r15	; 0x14
    d920:	0d 8b       	std	Y+21, r16	; 0x15
    d922:	1e 8b       	std	Y+22, r17	; 0x16
    d924:	2f 8b       	std	Y+23, r18	; 0x17
    d926:	38 8f       	std	Y+24, r19	; 0x18
    d928:	49 8f       	std	Y+25, r20	; 0x19
    d92a:	5a 8f       	std	Y+26, r21	; 0x1a
    d92c:	6b 8f       	std	Y+27, r22	; 0x1b
    d92e:	7c 8f       	std	Y+28, r23	; 0x1c
    d930:	ad 8e       	std	Y+29, r10	; 0x1d
    d932:	8e 8e       	std	Y+30, r8	; 0x1e
		uint8_t params[11];
		uint8_t i = 0;
    d934:	19 82       	std	Y+1, r1	; 0x01
		uint8_t reg_val;
		uint8_t data[2];

		/* Registers 42-43 for CLK0; 50-51 for CLK1 */
		params[i++] = ms_reg.reg.p3_1;
    d936:	89 81       	ldd	r24, Y+1	; 0x01
    d938:	91 e0       	ldi	r25, 0x01	; 1
    d93a:	98 0f       	add	r25, r24
    d93c:	99 83       	std	Y+1, r25	; 0x01
    d93e:	88 2f       	mov	r24, r24
    d940:	90 e0       	ldi	r25, 0x00	; 0
    d942:	4a 8d       	ldd	r20, Y+26	; 0x1a
    d944:	9e 01       	movw	r18, r28
    d946:	2d 5f       	subi	r18, 0xFD	; 253
    d948:	3f 4f       	sbci	r19, 0xFF	; 255
    d94a:	82 0f       	add	r24, r18
    d94c:	93 1f       	adc	r25, r19
    d94e:	fc 01       	movw	r30, r24
    d950:	40 83       	st	Z, r20
		params[i++] = ms_reg.reg.p3_0;
    d952:	89 81       	ldd	r24, Y+1	; 0x01
    d954:	91 e0       	ldi	r25, 0x01	; 1
    d956:	98 0f       	add	r25, r24
    d958:	99 83       	std	Y+1, r25	; 0x01
    d95a:	88 2f       	mov	r24, r24
    d95c:	90 e0       	ldi	r25, 0x00	; 0
    d95e:	49 8d       	ldd	r20, Y+25	; 0x19
    d960:	9e 01       	movw	r18, r28
    d962:	2d 5f       	subi	r18, 0xFD	; 253
    d964:	3f 4f       	sbci	r19, 0xFF	; 255
    d966:	82 0f       	add	r24, r18
    d968:	93 1f       	adc	r25, r19
    d96a:	fc 01       	movw	r30, r24
    d96c:	40 83       	st	Z, r20

		/* Register 44 for CLK0; 52 for CLK1 */
		if(si5351_read_bulk((SI5351_CLK0_PARAMETERS + 2) + (clk * 8), data, 1))
    d96e:	88 89       	ldd	r24, Y+16	; 0x10
    d970:	88 0f       	add	r24, r24
    d972:	88 0f       	add	r24, r24
    d974:	88 0f       	add	r24, r24
    d976:	2c e2       	ldi	r18, 0x2C	; 44
    d978:	28 0f       	add	r18, r24
    d97a:	ce 01       	movw	r24, r28
    d97c:	0e 96       	adiw	r24, 0x0e	; 14
    d97e:	41 e0       	ldi	r20, 0x01	; 1
    d980:	bc 01       	movw	r22, r24
    d982:	82 2f       	mov	r24, r18
    d984:	0e 94 0d 6c 	call	0xd81a	; 0xd81a <_Z16si5351_read_bulkhPhh>
    d988:	88 23       	and	r24, r24
    d98a:	11 f0       	breq	.+4      	; 0xd990 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x98>
		{
			return(true);
    d98c:	81 e0       	ldi	r24, 0x01	; 1
    d98e:	bc c0       	rjmp	.+376    	; 0xdb08 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x210>
		}
		
		reg_val = data[0];
    d990:	8e 85       	ldd	r24, Y+14	; 0x0e
    d992:	8a 83       	std	Y+2, r24	; 0x02

		reg_val &= 0xFC;    /*~(0x03); */
    d994:	8a 81       	ldd	r24, Y+2	; 0x02
    d996:	8c 7f       	andi	r24, 0xFC	; 252
    d998:	8a 83       	std	Y+2, r24	; 0x02
		params[i++] = reg_val | (ms_reg.reg.p1_2 & 0x03);
    d99a:	89 81       	ldd	r24, Y+1	; 0x01
    d99c:	91 e0       	ldi	r25, 0x01	; 1
    d99e:	98 0f       	add	r25, r24
    d9a0:	99 83       	std	Y+1, r25	; 0x01
    d9a2:	88 2f       	mov	r24, r24
    d9a4:	90 e0       	ldi	r25, 0x00	; 0
    d9a6:	2b 89       	ldd	r18, Y+19	; 0x13
    d9a8:	32 2f       	mov	r19, r18
    d9aa:	33 70       	andi	r19, 0x03	; 3
    d9ac:	2a 81       	ldd	r18, Y+2	; 0x02
    d9ae:	23 2b       	or	r18, r19
    d9b0:	42 2f       	mov	r20, r18
    d9b2:	9e 01       	movw	r18, r28
    d9b4:	2d 5f       	subi	r18, 0xFD	; 253
    d9b6:	3f 4f       	sbci	r19, 0xFF	; 255
    d9b8:	82 0f       	add	r24, r18
    d9ba:	93 1f       	adc	r25, r19
    d9bc:	fc 01       	movw	r30, r24
    d9be:	40 83       	st	Z, r20

		/* Registers 45-46 for CLK0 */
		params[i++] = ms_reg.reg.p1_1;
    d9c0:	89 81       	ldd	r24, Y+1	; 0x01
    d9c2:	91 e0       	ldi	r25, 0x01	; 1
    d9c4:	98 0f       	add	r25, r24
    d9c6:	99 83       	std	Y+1, r25	; 0x01
    d9c8:	88 2f       	mov	r24, r24
    d9ca:	90 e0       	ldi	r25, 0x00	; 0
    d9cc:	4a 89       	ldd	r20, Y+18	; 0x12
    d9ce:	9e 01       	movw	r18, r28
    d9d0:	2d 5f       	subi	r18, 0xFD	; 253
    d9d2:	3f 4f       	sbci	r19, 0xFF	; 255
    d9d4:	82 0f       	add	r24, r18
    d9d6:	93 1f       	adc	r25, r19
    d9d8:	fc 01       	movw	r30, r24
    d9da:	40 83       	st	Z, r20
		params[i++] = ms_reg.reg.p1_0;
    d9dc:	89 81       	ldd	r24, Y+1	; 0x01
    d9de:	91 e0       	ldi	r25, 0x01	; 1
    d9e0:	98 0f       	add	r25, r24
    d9e2:	99 83       	std	Y+1, r25	; 0x01
    d9e4:	88 2f       	mov	r24, r24
    d9e6:	90 e0       	ldi	r25, 0x00	; 0
    d9e8:	49 89       	ldd	r20, Y+17	; 0x11
    d9ea:	9e 01       	movw	r18, r28
    d9ec:	2d 5f       	subi	r18, 0xFD	; 253
    d9ee:	3f 4f       	sbci	r19, 0xFF	; 255
    d9f0:	82 0f       	add	r24, r18
    d9f2:	93 1f       	adc	r25, r19
    d9f4:	fc 01       	movw	r30, r24
    d9f6:	40 83       	st	Z, r20

		/* Register 47 for CLK0 */
		params[i] = (ms_reg.reg.p3_2 << 4);
    d9f8:	89 81       	ldd	r24, Y+1	; 0x01
    d9fa:	88 2f       	mov	r24, r24
    d9fc:	90 e0       	ldi	r25, 0x00	; 0
    d9fe:	2b 8d       	ldd	r18, Y+27	; 0x1b
    da00:	42 2f       	mov	r20, r18
    da02:	42 95       	swap	r20
    da04:	40 7f       	andi	r20, 0xF0	; 240
    da06:	9e 01       	movw	r18, r28
    da08:	2d 5f       	subi	r18, 0xFD	; 253
    da0a:	3f 4f       	sbci	r19, 0xFF	; 255
    da0c:	82 0f       	add	r24, r18
    da0e:	93 1f       	adc	r25, r19
    da10:	fc 01       	movw	r30, r24
    da12:	40 83       	st	Z, r20
		params[i++] += (ms_reg.reg.p2_2 & 0x0F);
    da14:	29 81       	ldd	r18, Y+1	; 0x01
    da16:	81 e0       	ldi	r24, 0x01	; 1
    da18:	82 0f       	add	r24, r18
    da1a:	89 83       	std	Y+1, r24	; 0x01
    da1c:	82 2f       	mov	r24, r18
    da1e:	90 e0       	ldi	r25, 0x00	; 0
    da20:	22 2f       	mov	r18, r18
    da22:	30 e0       	ldi	r19, 0x00	; 0
    da24:	ae 01       	movw	r20, r28
    da26:	4d 5f       	subi	r20, 0xFD	; 253
    da28:	5f 4f       	sbci	r21, 0xFF	; 255
    da2a:	24 0f       	add	r18, r20
    da2c:	35 1f       	adc	r19, r21
    da2e:	f9 01       	movw	r30, r18
    da30:	30 81       	ld	r19, Z
    da32:	2f 89       	ldd	r18, Y+23	; 0x17
    da34:	2f 70       	andi	r18, 0x0F	; 15
    da36:	43 2f       	mov	r20, r19
    da38:	42 0f       	add	r20, r18
    da3a:	9e 01       	movw	r18, r28
    da3c:	2d 5f       	subi	r18, 0xFD	; 253
    da3e:	3f 4f       	sbci	r19, 0xFF	; 255
    da40:	82 0f       	add	r24, r18
    da42:	93 1f       	adc	r25, r19
    da44:	fc 01       	movw	r30, r24
    da46:	40 83       	st	Z, r20

		/* Registers 48-49 for CLK0 */
		params[i++] = ms_reg.reg.p2_1;
    da48:	89 81       	ldd	r24, Y+1	; 0x01
    da4a:	91 e0       	ldi	r25, 0x01	; 1
    da4c:	98 0f       	add	r25, r24
    da4e:	99 83       	std	Y+1, r25	; 0x01
    da50:	88 2f       	mov	r24, r24
    da52:	90 e0       	ldi	r25, 0x00	; 0
    da54:	4e 89       	ldd	r20, Y+22	; 0x16
    da56:	9e 01       	movw	r18, r28
    da58:	2d 5f       	subi	r18, 0xFD	; 253
    da5a:	3f 4f       	sbci	r19, 0xFF	; 255
    da5c:	82 0f       	add	r24, r18
    da5e:	93 1f       	adc	r25, r19
    da60:	fc 01       	movw	r30, r24
    da62:	40 83       	st	Z, r20
		params[i++] = ms_reg.reg.p2_0;
    da64:	89 81       	ldd	r24, Y+1	; 0x01
    da66:	91 e0       	ldi	r25, 0x01	; 1
    da68:	98 0f       	add	r25, r24
    da6a:	99 83       	std	Y+1, r25	; 0x01
    da6c:	88 2f       	mov	r24, r24
    da6e:	90 e0       	ldi	r25, 0x00	; 0
    da70:	4d 89       	ldd	r20, Y+21	; 0x15
    da72:	9e 01       	movw	r18, r28
    da74:	2d 5f       	subi	r18, 0xFD	; 253
    da76:	3f 4f       	sbci	r19, 0xFF	; 255
    da78:	82 0f       	add	r24, r18
    da7a:	93 1f       	adc	r25, r19
    da7c:	fc 01       	movw	r30, r24
    da7e:	40 83       	st	Z, r20

		/* Write the parameters */
		switch(clk)
    da80:	88 89       	ldd	r24, Y+16	; 0x10
    da82:	88 2f       	mov	r24, r24
    da84:	90 e0       	ldi	r25, 0x00	; 0
    da86:	81 30       	cpi	r24, 0x01	; 1
    da88:	91 05       	cpc	r25, r1
    da8a:	89 f0       	breq	.+34     	; 0xdaae <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1b6>
    da8c:	82 30       	cpi	r24, 0x02	; 2
    da8e:	91 05       	cpc	r25, r1
    da90:	c9 f0       	breq	.+50     	; 0xdac4 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1cc>
    da92:	89 2b       	or	r24, r25
    da94:	09 f0       	breq	.+2      	; 0xda98 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1a0>
			break;

			default:
			{
			}
			break;
    da96:	26 c0       	rjmp	.+76     	; 0xdae4 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1ec>
		/* Write the parameters */
		switch(clk)
		{
			case SI5351_CLK0:
			{
				if(si5351_write_bulk(SI5351_CLK0_PARAMETERS, params, i))
    da98:	ce 01       	movw	r24, r28
    da9a:	03 96       	adiw	r24, 0x03	; 3
    da9c:	49 81       	ldd	r20, Y+1	; 0x01
    da9e:	bc 01       	movw	r22, r24
    daa0:	8a e2       	ldi	r24, 0x2A	; 42
    daa2:	0e 94 db 6b 	call	0xd7b6	; 0xd7b6 <_Z17si5351_write_bulkhPhh>
    daa6:	88 23       	and	r24, r24
    daa8:	c1 f0       	breq	.+48     	; 0xdada <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1e2>
				{
					return(true);
    daaa:	81 e0       	ldi	r24, 0x01	; 1
    daac:	2d c0       	rjmp	.+90     	; 0xdb08 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x210>
			}
			break;

			case SI5351_CLK1:
			{
				if(si5351_write_bulk(SI5351_CLK1_PARAMETERS, params, i))
    daae:	ce 01       	movw	r24, r28
    dab0:	03 96       	adiw	r24, 0x03	; 3
    dab2:	49 81       	ldd	r20, Y+1	; 0x01
    dab4:	bc 01       	movw	r22, r24
    dab6:	82 e3       	ldi	r24, 0x32	; 50
    dab8:	0e 94 db 6b 	call	0xd7b6	; 0xd7b6 <_Z17si5351_write_bulkhPhh>
    dabc:	88 23       	and	r24, r24
    dabe:	79 f0       	breq	.+30     	; 0xdade <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1e6>
				{
					return(true);
    dac0:	81 e0       	ldi	r24, 0x01	; 1
    dac2:	22 c0       	rjmp	.+68     	; 0xdb08 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x210>
			}
			break;

			case SI5351_CLK2:
			{
				if(si5351_write_bulk(SI5351_CLK2_PARAMETERS, params, i))
    dac4:	ce 01       	movw	r24, r28
    dac6:	03 96       	adiw	r24, 0x03	; 3
    dac8:	49 81       	ldd	r20, Y+1	; 0x01
    daca:	bc 01       	movw	r22, r24
    dacc:	8a e3       	ldi	r24, 0x3A	; 58
    dace:	0e 94 db 6b 	call	0xd7b6	; 0xd7b6 <_Z17si5351_write_bulkhPhh>
    dad2:	88 23       	and	r24, r24
    dad4:	31 f0       	breq	.+12     	; 0xdae2 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1ea>
				{
					return(true);
    dad6:	81 e0       	ldi	r24, 0x01	; 1
    dad8:	17 c0       	rjmp	.+46     	; 0xdb08 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x210>
				if(si5351_write_bulk(SI5351_CLK0_PARAMETERS, params, i))
				{
					return(true);
				}
			}
			break;
    dada:	00 00       	nop
    dadc:	03 c0       	rjmp	.+6      	; 0xdae4 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1ec>
				if(si5351_write_bulk(SI5351_CLK1_PARAMETERS, params, i))
				{
					return(true);
				}
			}
			break;
    dade:	00 00       	nop
    dae0:	01 c0       	rjmp	.+2      	; 0xdae4 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1ec>
				if(si5351_write_bulk(SI5351_CLK2_PARAMETERS, params, i))
				{
					return(true);
				}
			}
			break;
    dae2:	00 00       	nop
			{
			}
			break;
		}

		if(set_integer_mode(clk, int_mode))
    dae4:	6d 8d       	ldd	r22, Y+29	; 0x1d
    dae6:	88 89       	ldd	r24, Y+16	; 0x10
    dae8:	0e 94 92 6d 	call	0xdb24	; 0xdb24 <_Z16set_integer_mode12si5351_clockb>
    daec:	88 23       	and	r24, r24
    daee:	11 f0       	breq	.+4      	; 0xdaf4 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1fc>
		{
			return(true);
    daf0:	81 e0       	ldi	r24, 0x01	; 1
    daf2:	0a c0       	rjmp	.+20     	; 0xdb08 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x210>
		}
		
		if(ms_div(clk, r_div, div_by_4))
    daf4:	4b a5       	ldd	r20, Y+43	; 0x2b
    daf6:	6e 8d       	ldd	r22, Y+30	; 0x1e
    daf8:	88 89       	ldd	r24, Y+16	; 0x10
    dafa:	0e 94 c7 6d 	call	0xdb8e	; 0xdb8e <_Z6ms_div12si5351_clockhb>
    dafe:	88 23       	and	r24, r24
    db00:	11 f0       	breq	.+4      	; 0xdb06 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x20e>
		{
			return(true);
    db02:	81 e0       	ldi	r24, 0x01	; 1
    db04:	01 c0       	rjmp	.+2      	; 0xdb08 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x210>
		}
		
		return(false);
    db06:	80 e0       	ldi	r24, 0x00	; 0
	}
    db08:	6e 96       	adiw	r28, 0x1e	; 30
    db0a:	cd bf       	out	0x3d, r28	; 61
    db0c:	de bf       	out	0x3e, r29	; 62
    db0e:	df 91       	pop	r29
    db10:	cf 91       	pop	r28
    db12:	1f 91       	pop	r17
    db14:	0f 91       	pop	r16
    db16:	ff 90       	pop	r15
    db18:	ef 90       	pop	r14
    db1a:	df 90       	pop	r13
    db1c:	cf 90       	pop	r12
    db1e:	af 90       	pop	r10
    db20:	8f 90       	pop	r8
    db22:	08 95       	ret

0000db24 <_Z16set_integer_mode12si5351_clockb>:
 * enable - 1 to enable, 0 to disable
 *
 * Set the indicated multisynth into integer mode.
 */
	bool set_integer_mode(Si5351_clock clk, bool enable)
	{
    db24:	cf 93       	push	r28
    db26:	df 93       	push	r29
    db28:	cd b7       	in	r28, 0x3d	; 61
    db2a:	de b7       	in	r29, 0x3e	; 62
    db2c:	25 97       	sbiw	r28, 0x05	; 5
    db2e:	cd bf       	out	0x3d, r28	; 61
    db30:	de bf       	out	0x3e, r29	; 62
    db32:	8c 83       	std	Y+4, r24	; 0x04
    db34:	6d 83       	std	Y+5, r22	; 0x05
		uint8_t reg_val;
		uint8_t data[2];

		if(si5351_read_bulk(SI5351_CLK0_CTRL + (uint8_t)clk, data, 1))
    db36:	8c 81       	ldd	r24, Y+4	; 0x04
    db38:	20 e1       	ldi	r18, 0x10	; 16
    db3a:	28 0f       	add	r18, r24
    db3c:	ce 01       	movw	r24, r28
    db3e:	02 96       	adiw	r24, 0x02	; 2
    db40:	41 e0       	ldi	r20, 0x01	; 1
    db42:	bc 01       	movw	r22, r24
    db44:	82 2f       	mov	r24, r18
    db46:	0e 94 0d 6c 	call	0xd81a	; 0xd81a <_Z16si5351_read_bulkhPhh>
    db4a:	88 23       	and	r24, r24
    db4c:	11 f0       	breq	.+4      	; 0xdb52 <_Z16set_integer_mode12si5351_clockb+0x2e>
		{
			return(true);
    db4e:	81 e0       	ldi	r24, 0x01	; 1
    db50:	18 c0       	rjmp	.+48     	; 0xdb82 <_Z16set_integer_mode12si5351_clockb+0x5e>
		}
		
		reg_val = data[0];
    db52:	8a 81       	ldd	r24, Y+2	; 0x02
    db54:	89 83       	std	Y+1, r24	; 0x01

		if(enable)
    db56:	8d 81       	ldd	r24, Y+5	; 0x05
    db58:	88 23       	and	r24, r24
    db5a:	21 f0       	breq	.+8      	; 0xdb64 <_Z16set_integer_mode12si5351_clockb+0x40>
		{
			reg_val |= (SI5351_CLK_INTEGER_MODE);
    db5c:	89 81       	ldd	r24, Y+1	; 0x01
    db5e:	80 64       	ori	r24, 0x40	; 64
    db60:	89 83       	std	Y+1, r24	; 0x01
    db62:	03 c0       	rjmp	.+6      	; 0xdb6a <_Z16set_integer_mode12si5351_clockb+0x46>
		}
		else
		{
			reg_val &= ~(SI5351_CLK_INTEGER_MODE);
    db64:	89 81       	ldd	r24, Y+1	; 0x01
    db66:	8f 7b       	andi	r24, 0xBF	; 191
    db68:	89 83       	std	Y+1, r24	; 0x01
		}

		data[0] = reg_val;
    db6a:	89 81       	ldd	r24, Y+1	; 0x01
    db6c:	8a 83       	std	Y+2, r24	; 0x02
		return(si5351_write_bulk(SI5351_CLK0_CTRL + (uint8_t)clk, data, 1));
    db6e:	8c 81       	ldd	r24, Y+4	; 0x04
    db70:	20 e1       	ldi	r18, 0x10	; 16
    db72:	28 0f       	add	r18, r24
    db74:	ce 01       	movw	r24, r28
    db76:	02 96       	adiw	r24, 0x02	; 2
    db78:	41 e0       	ldi	r20, 0x01	; 1
    db7a:	bc 01       	movw	r22, r24
    db7c:	82 2f       	mov	r24, r18
    db7e:	0e 94 db 6b 	call	0xd7b6	; 0xd7b6 <_Z17si5351_write_bulkhPhh>
	}
    db82:	25 96       	adiw	r28, 0x05	; 5
    db84:	cd bf       	out	0x3d, r28	; 61
    db86:	de bf       	out	0x3e, r29	; 62
    db88:	df 91       	pop	r29
    db8a:	cf 91       	pop	r28
    db8c:	08 95       	ret

0000db8e <_Z6ms_div12si5351_clockhb>:


	bool ms_div(Si5351_clock clk, uint8_t r_div, bool div_by_4)
	{
    db8e:	cf 93       	push	r28
    db90:	df 93       	push	r29
    db92:	cd b7       	in	r28, 0x3d	; 61
    db94:	de b7       	in	r29, 0x3e	; 62
    db96:	27 97       	sbiw	r28, 0x07	; 7
    db98:	cd bf       	out	0x3d, r28	; 61
    db9a:	de bf       	out	0x3e, r29	; 62
    db9c:	8d 83       	std	Y+5, r24	; 0x05
    db9e:	6e 83       	std	Y+6, r22	; 0x06
    dba0:	4f 83       	std	Y+7, r20	; 0x07
		uint8_t reg_val, reg_addr;
		uint8_t data[2];

		switch(clk)
    dba2:	8d 81       	ldd	r24, Y+5	; 0x05
    dba4:	88 2f       	mov	r24, r24
    dba6:	90 e0       	ldi	r25, 0x00	; 0
    dba8:	81 30       	cpi	r24, 0x01	; 1
    dbaa:	91 05       	cpc	r25, r1
    dbac:	41 f0       	breq	.+16     	; 0xdbbe <_Z6ms_div12si5351_clockhb+0x30>
    dbae:	82 30       	cpi	r24, 0x02	; 2
    dbb0:	91 05       	cpc	r25, r1
    dbb2:	41 f0       	breq	.+16     	; 0xdbc4 <_Z6ms_div12si5351_clockhb+0x36>
    dbb4:	89 2b       	or	r24, r25
    dbb6:	49 f4       	brne	.+18     	; 0xdbca <_Z6ms_div12si5351_clockhb+0x3c>
		{
			case SI5351_CLK0:
			{
				reg_addr = SI5351_CLK0_PARAMETERS + 2;
    dbb8:	8c e2       	ldi	r24, 0x2C	; 44
    dbba:	8a 83       	std	Y+2, r24	; 0x02
			}
			break;
    dbbc:	08 c0       	rjmp	.+16     	; 0xdbce <_Z6ms_div12si5351_clockhb+0x40>

			case SI5351_CLK1:
			{
				reg_addr = SI5351_CLK1_PARAMETERS + 2;
    dbbe:	84 e3       	ldi	r24, 0x34	; 52
    dbc0:	8a 83       	std	Y+2, r24	; 0x02
			}
			break;
    dbc2:	05 c0       	rjmp	.+10     	; 0xdbce <_Z6ms_div12si5351_clockhb+0x40>

			case SI5351_CLK2:
			{
				reg_addr = SI5351_CLK2_PARAMETERS + 2;
    dbc4:	8c e3       	ldi	r24, 0x3C	; 60
    dbc6:	8a 83       	std	Y+2, r24	; 0x02
			}
			break;
    dbc8:	02 c0       	rjmp	.+4      	; 0xdbce <_Z6ms_div12si5351_clockhb+0x40>

			default:
				return(true);
    dbca:	81 e0       	ldi	r24, 0x01	; 1
    dbcc:	30 c0       	rjmp	.+96     	; 0xdc2e <_Z6ms_div12si5351_clockhb+0xa0>
		}

		if(si5351_read_bulk(reg_addr, data, 1))
    dbce:	ce 01       	movw	r24, r28
    dbd0:	03 96       	adiw	r24, 0x03	; 3
    dbd2:	41 e0       	ldi	r20, 0x01	; 1
    dbd4:	bc 01       	movw	r22, r24
    dbd6:	8a 81       	ldd	r24, Y+2	; 0x02
    dbd8:	0e 94 0d 6c 	call	0xd81a	; 0xd81a <_Z16si5351_read_bulkhPhh>
    dbdc:	88 23       	and	r24, r24
    dbde:	11 f0       	breq	.+4      	; 0xdbe4 <_Z6ms_div12si5351_clockhb+0x56>
		{
			return(true);
    dbe0:	81 e0       	ldi	r24, 0x01	; 1
    dbe2:	25 c0       	rjmp	.+74     	; 0xdc2e <_Z6ms_div12si5351_clockhb+0xa0>
		}
		
		reg_val = data[0];
    dbe4:	8b 81       	ldd	r24, Y+3	; 0x03
    dbe6:	89 83       	std	Y+1, r24	; 0x01

		/* Clear the appropriate bits */
		reg_val &= ~(0x7c);
    dbe8:	89 81       	ldd	r24, Y+1	; 0x01
    dbea:	83 78       	andi	r24, 0x83	; 131
    dbec:	89 83       	std	Y+1, r24	; 0x01

		if(div_by_4)
    dbee:	8f 81       	ldd	r24, Y+7	; 0x07
    dbf0:	88 23       	and	r24, r24
    dbf2:	21 f0       	breq	.+8      	; 0xdbfc <_Z6ms_div12si5351_clockhb+0x6e>
		{
			reg_val |= (SI5351_OUTPUT_CLK_DIVBY4);
    dbf4:	89 81       	ldd	r24, Y+1	; 0x01
    dbf6:	8c 60       	ori	r24, 0x0C	; 12
    dbf8:	89 83       	std	Y+1, r24	; 0x01
    dbfa:	03 c0       	rjmp	.+6      	; 0xdc02 <_Z6ms_div12si5351_clockhb+0x74>
		}
		else
		{
			reg_val &= ~(SI5351_OUTPUT_CLK_DIVBY4);
    dbfc:	89 81       	ldd	r24, Y+1	; 0x01
    dbfe:	83 7f       	andi	r24, 0xF3	; 243
    dc00:	89 83       	std	Y+1, r24	; 0x01
		}

		reg_val |= (r_div << SI5351_OUTPUT_CLK_DIV_SHIFT);
    dc02:	8e 81       	ldd	r24, Y+6	; 0x06
    dc04:	88 2f       	mov	r24, r24
    dc06:	90 e0       	ldi	r25, 0x00	; 0
    dc08:	82 95       	swap	r24
    dc0a:	92 95       	swap	r25
    dc0c:	90 7f       	andi	r25, 0xF0	; 240
    dc0e:	98 27       	eor	r25, r24
    dc10:	80 7f       	andi	r24, 0xF0	; 240
    dc12:	98 27       	eor	r25, r24
    dc14:	98 2f       	mov	r25, r24
    dc16:	89 81       	ldd	r24, Y+1	; 0x01
    dc18:	89 2b       	or	r24, r25
    dc1a:	89 83       	std	Y+1, r24	; 0x01

		data[0] = reg_val;
    dc1c:	89 81       	ldd	r24, Y+1	; 0x01
    dc1e:	8b 83       	std	Y+3, r24	; 0x03
		return(si5351_write_bulk(reg_addr, data, 1));
    dc20:	ce 01       	movw	r24, r28
    dc22:	03 96       	adiw	r24, 0x03	; 3
    dc24:	41 e0       	ldi	r20, 0x01	; 1
    dc26:	bc 01       	movw	r22, r24
    dc28:	8a 81       	ldd	r24, Y+2	; 0x02
    dc2a:	0e 94 db 6b 	call	0xd7b6	; 0xd7b6 <_Z17si5351_write_bulkhPhh>
	}
    dc2e:	27 96       	adiw	r28, 0x07	; 7
    dc30:	cd bf       	out	0x3d, r28	; 61
    dc32:	de bf       	out	0x3e, r29	; 62
    dc34:	df 91       	pop	r29
    dc36:	cf 91       	pop	r28
    dc38:	08 95       	ret

0000dc3a <SLPCTRL_init>:
 * \brief Initialize Sleep Controller
 *
 * \return Initialization status.
 */
int8_t SLPCTRL_init()
{
    dc3a:	cf 93       	push	r28
    dc3c:	df 93       	push	r29
    dc3e:	cd b7       	in	r28, 0x3d	; 61
    dc40:	de b7       	in	r29, 0x3e	; 62

	// SLPCTRL.CTRLA = 0 << SLPCTRL_SEN_bp /* Sleep enable: disabled */
	//		 | SLPCTRL_SMODE_IDLE_gc; /* Idle mode */

	return 0;
    dc42:	80 e0       	ldi	r24, 0x00	; 0
}
    dc44:	df 91       	pop	r29
    dc46:	cf 91       	pop	r28
    dc48:	08 95       	ret

0000dc4a <TIMERB_init>:
 * \brief Initialize tcb interface
 *
 * \return Initialization status.
 */
int8_t TIMERB_init()
{
    dc4a:	cf 93       	push	r28
    dc4c:	df 93       	push	r29
    dc4e:	cd b7       	in	r28, 0x3d	; 61
    dc50:	de b7       	in	r29, 0x3e	; 62
TCB0.INTCTRL = 1 << TCB_CAPT_bp   /* Capture or Timeout: enabled */
    dc52:	80 e0       	ldi	r24, 0x00	; 0
    dc54:	9b e0       	ldi	r25, 0x0B	; 11
| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    dc56:	21 e0       	ldi	r18, 0x01	; 1
    dc58:	fc 01       	movw	r30, r24
    dc5a:	25 83       	std	Z+5, r18	; 0x05

// Set TOP
TCB0.CCMP = 0x9C40;
    dc5c:	80 e0       	ldi	r24, 0x00	; 0
    dc5e:	9b e0       	ldi	r25, 0x0B	; 11
    dc60:	20 e4       	ldi	r18, 0x40	; 64
    dc62:	3c e9       	ldi	r19, 0x9C	; 156
    dc64:	fc 01       	movw	r30, r24
    dc66:	24 87       	std	Z+12, r18	; 0x0c
    dc68:	35 87       	std	Z+13, r19	; 0x0d

TCB0.CTRLA = TCB_CLKSEL_DIV2_gc     /* CLK_PER */
    dc6a:	80 e0       	ldi	r24, 0x00	; 0
    dc6c:	9b e0       	ldi	r25, 0x0B	; 11
| 1 << TCB_ENABLE_bp   /* Enable: enabled */
| 0 << TCB_RUNSTDBY_bp /* Run Standby: disabled */
| 0 << TCB_SYNCUPD_bp  /* Synchronize Update: disabled */
| 0 << TCB_CASCADE_bp; /* Cascade Two Timer/Counters: disabled */
    dc6e:	23 e0       	ldi	r18, 0x03	; 3
    dc70:	fc 01       	movw	r30, r24
    dc72:	20 83       	st	Z, r18

TCB0.INTFLAGS = TCB_CAPT_bm; /* Clear flag */
    dc74:	80 e0       	ldi	r24, 0x00	; 0
    dc76:	9b e0       	ldi	r25, 0x0B	; 11
    dc78:	21 e0       	ldi	r18, 0x01	; 1
    dc7a:	fc 01       	movw	r30, r24
    dc7c:	26 83       	std	Z+6, r18	; 0x06

/********************************************************************************/

TCB1.INTCTRL = 1 << TCB_CAPT_bp   /* Capture or Timeout: enabled */
    dc7e:	80 e1       	ldi	r24, 0x10	; 16
    dc80:	9b e0       	ldi	r25, 0x0B	; 11
| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    dc82:	21 e0       	ldi	r18, 0x01	; 1
    dc84:	fc 01       	movw	r30, r24
    dc86:	25 83       	std	Z+5, r18	; 0x05

// Set TOP
TCB1.CCMP = 0x5DC0;
    dc88:	80 e1       	ldi	r24, 0x10	; 16
    dc8a:	9b e0       	ldi	r25, 0x0B	; 11
    dc8c:	20 ec       	ldi	r18, 0xC0	; 192
    dc8e:	3d e5       	ldi	r19, 0x5D	; 93
    dc90:	fc 01       	movw	r30, r24
    dc92:	24 87       	std	Z+12, r18	; 0x0c
    dc94:	35 87       	std	Z+13, r19	; 0x0d

TCB1.CTRLA = TCB_CLKSEL_DIV1_gc     /* CLK_PER */
    dc96:	80 e1       	ldi	r24, 0x10	; 16
    dc98:	9b e0       	ldi	r25, 0x0B	; 11
| 1 << TCB_ENABLE_bp   /* Enable: enabled */
| 0 << TCB_RUNSTDBY_bp /* Run Standby: disabled */
| 0 << TCB_SYNCUPD_bp  /* Synchronize Update: disabled */
| 0 << TCB_CASCADE_bp; /* Cascade Two Timer/Counters: disabled */
    dc9a:	21 e0       	ldi	r18, 0x01	; 1
    dc9c:	fc 01       	movw	r30, r24
    dc9e:	20 83       	st	Z, r18

TCB1.INTFLAGS = TCB_CAPT_bm; /* Clear flag */
    dca0:	80 e1       	ldi	r24, 0x10	; 16
    dca2:	9b e0       	ldi	r25, 0x0B	; 11
    dca4:	21 e0       	ldi	r18, 0x01	; 1
    dca6:	fc 01       	movw	r30, r24
    dca8:	26 83       	std	Z+6, r18	; 0x06


/********************************************************************************/

TCB3.INTCTRL = 1 << TCB_CAPT_bp   /* Capture or Timeout: enabled */
    dcaa:	80 e3       	ldi	r24, 0x30	; 48
    dcac:	9b e0       	ldi	r25, 0x0B	; 11
| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    dcae:	21 e0       	ldi	r18, 0x01	; 1
    dcb0:	fc 01       	movw	r30, r24
    dcb2:	25 83       	std	Z+5, r18	; 0x05

// Set TOP
TCB3.CCMP = 0x9C40;
    dcb4:	80 e3       	ldi	r24, 0x30	; 48
    dcb6:	9b e0       	ldi	r25, 0x0B	; 11
    dcb8:	20 e4       	ldi	r18, 0x40	; 64
    dcba:	3c e9       	ldi	r19, 0x9C	; 156
    dcbc:	fc 01       	movw	r30, r24
    dcbe:	24 87       	std	Z+12, r18	; 0x0c
    dcc0:	35 87       	std	Z+13, r19	; 0x0d

TCB3.CTRLA = TCB_CLKSEL_DIV2_gc     /* CLK_PER */
    dcc2:	80 e3       	ldi	r24, 0x30	; 48
    dcc4:	9b e0       	ldi	r25, 0x0B	; 11
| 1 << TCB_ENABLE_bp   /* Enable: enabled */
| 0 << TCB_RUNSTDBY_bp /* Run Standby: disabled */
| 0 << TCB_SYNCUPD_bp  /* Synchronize Update: disabled */
| 0 << TCB_CASCADE_bp; /* Cascade Two Timer/Counters: disabled */
    dcc6:	23 e0       	ldi	r18, 0x03	; 3
    dcc8:	fc 01       	movw	r30, r24
    dcca:	20 83       	st	Z, r18

TCB3.INTFLAGS = TCB_CAPT_bm; /* Clear flag */
    dccc:	80 e3       	ldi	r24, 0x30	; 48
    dcce:	9b e0       	ldi	r25, 0x0B	; 11
    dcd0:	21 e0       	ldi	r18, 0x01	; 1
    dcd2:	fc 01       	movw	r30, r24
    dcd4:	26 83       	std	Z+6, r18	; 0x06

	return 0;
    dcd6:	80 e0       	ldi	r24, 0x00	; 0
}
    dcd8:	df 91       	pop	r29
    dcda:	cf 91       	pop	r28
    dcdc:	08 95       	ret

0000dcde <util_delay_ms>:


bool util_delay_ms(uint32_t delayValue)
{
    dcde:	cf 93       	push	r28
    dce0:	df 93       	push	r29
    dce2:	00 d0       	rcall	.+0      	; 0xdce4 <util_delay_ms+0x6>
    dce4:	00 d0       	rcall	.+0      	; 0xdce6 <util_delay_ms+0x8>
    dce6:	cd b7       	in	r28, 0x3d	; 61
    dce8:	de b7       	in	r29, 0x3e	; 62
    dcea:	69 83       	std	Y+1, r22	; 0x01
    dcec:	7a 83       	std	Y+2, r23	; 0x02
    dcee:	8b 83       	std	Y+3, r24	; 0x03
    dcf0:	9c 83       	std	Y+4, r25	; 0x04
	static uint32_t countdownValue=0;
	static bool counting = false;
	
	if(delayValue)
    dcf2:	89 81       	ldd	r24, Y+1	; 0x01
    dcf4:	9a 81       	ldd	r25, Y+2	; 0x02
    dcf6:	ab 81       	ldd	r26, Y+3	; 0x03
    dcf8:	bc 81       	ldd	r27, Y+4	; 0x04
    dcfa:	89 2b       	or	r24, r25
    dcfc:	8a 2b       	or	r24, r26
    dcfe:	8b 2b       	or	r24, r27
    dd00:	09 f4       	brne	.+2      	; 0xdd04 <util_delay_ms+0x26>
    dd02:	84 c0       	rjmp	.+264    	; 0xde0c <util_delay_ms+0x12e>
	{
		if(counting)
    dd04:	80 91 be 4a 	lds	r24, 0x4ABE	; 0x804abe <_ZZ13util_delay_msE8counting>
    dd08:	88 23       	and	r24, r24
    dd0a:	09 f4       	brne	.+2      	; 0xdd0e <util_delay_ms+0x30>
    dd0c:	4d c0       	rjmp	.+154    	; 0xdda8 <util_delay_ms+0xca>
		{
			if(!g_ms_counter)
    dd0e:	80 91 ba 4a 	lds	r24, 0x4ABA	; 0x804aba <_ZL12g_ms_counter>
    dd12:	90 91 bb 4a 	lds	r25, 0x4ABB	; 0x804abb <_ZL12g_ms_counter+0x1>
    dd16:	a0 91 bc 4a 	lds	r26, 0x4ABC	; 0x804abc <_ZL12g_ms_counter+0x2>
    dd1a:	b0 91 bd 4a 	lds	r27, 0x4ABD	; 0x804abd <_ZL12g_ms_counter+0x3>
    dd1e:	89 2b       	or	r24, r25
    dd20:	8a 2b       	or	r24, r26
    dd22:	8b 2b       	or	r24, r27
    dd24:	81 f4       	brne	.+32     	; 0xdd46 <util_delay_ms+0x68>
			{
				TCB1.INTCTRL = 0 << TCB_CAPT_bp   /* Capture or Timeout: disabled */
    dd26:	80 e1       	ldi	r24, 0x10	; 16
    dd28:	9b e0       	ldi	r25, 0x0B	; 11
				| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    dd2a:	fc 01       	movw	r30, r24
    dd2c:	15 82       	std	Z+5, r1	; 0x05

				counting = false;
    dd2e:	10 92 be 4a 	sts	0x4ABE, r1	; 0x804abe <_ZZ13util_delay_msE8counting>
				countdownValue = 0;
    dd32:	10 92 bf 4a 	sts	0x4ABF, r1	; 0x804abf <_ZZ13util_delay_msE14countdownValue>
    dd36:	10 92 c0 4a 	sts	0x4AC0, r1	; 0x804ac0 <_ZZ13util_delay_msE14countdownValue+0x1>
    dd3a:	10 92 c1 4a 	sts	0x4AC1, r1	; 0x804ac1 <_ZZ13util_delay_msE14countdownValue+0x2>
    dd3e:	10 92 c2 4a 	sts	0x4AC2, r1	; 0x804ac2 <_ZZ13util_delay_msE14countdownValue+0x3>
				return(false); /* time expired */
    dd42:	80 e0       	ldi	r24, 0x00	; 0
    dd44:	81 c0       	rjmp	.+258    	; 0xde48 <util_delay_ms+0x16a>
			}
			else if(delayValue != countdownValue) /* countdown delay changed */
    dd46:	80 91 bf 4a 	lds	r24, 0x4ABF	; 0x804abf <_ZZ13util_delay_msE14countdownValue>
    dd4a:	90 91 c0 4a 	lds	r25, 0x4AC0	; 0x804ac0 <_ZZ13util_delay_msE14countdownValue+0x1>
    dd4e:	a0 91 c1 4a 	lds	r26, 0x4AC1	; 0x804ac1 <_ZZ13util_delay_msE14countdownValue+0x2>
    dd52:	b0 91 c2 4a 	lds	r27, 0x4AC2	; 0x804ac2 <_ZZ13util_delay_msE14countdownValue+0x3>
    dd56:	29 81       	ldd	r18, Y+1	; 0x01
    dd58:	3a 81       	ldd	r19, Y+2	; 0x02
    dd5a:	4b 81       	ldd	r20, Y+3	; 0x03
    dd5c:	5c 81       	ldd	r21, Y+4	; 0x04
    dd5e:	28 17       	cp	r18, r24
    dd60:	39 07       	cpc	r19, r25
    dd62:	4a 07       	cpc	r20, r26
    dd64:	5b 07       	cpc	r21, r27
    dd66:	09 f4       	brne	.+2      	; 0xdd6a <util_delay_ms+0x8c>
    dd68:	69 c0       	rjmp	.+210    	; 0xde3c <util_delay_ms+0x15e>
			{
				TCB1.CNT = 0x0000;
    dd6a:	80 e1       	ldi	r24, 0x10	; 16
    dd6c:	9b e0       	ldi	r25, 0x0B	; 11
    dd6e:	fc 01       	movw	r30, r24
    dd70:	12 86       	std	Z+10, r1	; 0x0a
    dd72:	13 86       	std	Z+11, r1	; 0x0b
				countdownValue = delayValue;
    dd74:	89 81       	ldd	r24, Y+1	; 0x01
    dd76:	9a 81       	ldd	r25, Y+2	; 0x02
    dd78:	ab 81       	ldd	r26, Y+3	; 0x03
    dd7a:	bc 81       	ldd	r27, Y+4	; 0x04
    dd7c:	80 93 bf 4a 	sts	0x4ABF, r24	; 0x804abf <_ZZ13util_delay_msE14countdownValue>
    dd80:	90 93 c0 4a 	sts	0x4AC0, r25	; 0x804ac0 <_ZZ13util_delay_msE14countdownValue+0x1>
    dd84:	a0 93 c1 4a 	sts	0x4AC1, r26	; 0x804ac1 <_ZZ13util_delay_msE14countdownValue+0x2>
    dd88:	b0 93 c2 4a 	sts	0x4AC2, r27	; 0x804ac2 <_ZZ13util_delay_msE14countdownValue+0x3>
				g_ms_counter = delayValue;
    dd8c:	89 81       	ldd	r24, Y+1	; 0x01
    dd8e:	9a 81       	ldd	r25, Y+2	; 0x02
    dd90:	ab 81       	ldd	r26, Y+3	; 0x03
    dd92:	bc 81       	ldd	r27, Y+4	; 0x04
    dd94:	80 93 ba 4a 	sts	0x4ABA, r24	; 0x804aba <_ZL12g_ms_counter>
    dd98:	90 93 bb 4a 	sts	0x4ABB, r25	; 0x804abb <_ZL12g_ms_counter+0x1>
    dd9c:	a0 93 bc 4a 	sts	0x4ABC, r26	; 0x804abc <_ZL12g_ms_counter+0x2>
    dda0:	b0 93 bd 4a 	sts	0x4ABD, r27	; 0x804abd <_ZL12g_ms_counter+0x3>
				return(false);
    dda4:	80 e0       	ldi	r24, 0x00	; 0
    dda6:	50 c0       	rjmp	.+160    	; 0xde48 <util_delay_ms+0x16a>
			}
		}
		else if(delayValue != countdownValue)
    dda8:	80 91 bf 4a 	lds	r24, 0x4ABF	; 0x804abf <_ZZ13util_delay_msE14countdownValue>
    ddac:	90 91 c0 4a 	lds	r25, 0x4AC0	; 0x804ac0 <_ZZ13util_delay_msE14countdownValue+0x1>
    ddb0:	a0 91 c1 4a 	lds	r26, 0x4AC1	; 0x804ac1 <_ZZ13util_delay_msE14countdownValue+0x2>
    ddb4:	b0 91 c2 4a 	lds	r27, 0x4AC2	; 0x804ac2 <_ZZ13util_delay_msE14countdownValue+0x3>
    ddb8:	29 81       	ldd	r18, Y+1	; 0x01
    ddba:	3a 81       	ldd	r19, Y+2	; 0x02
    ddbc:	4b 81       	ldd	r20, Y+3	; 0x03
    ddbe:	5c 81       	ldd	r21, Y+4	; 0x04
    ddc0:	28 17       	cp	r18, r24
    ddc2:	39 07       	cpc	r19, r25
    ddc4:	4a 07       	cpc	r20, r26
    ddc6:	5b 07       	cpc	r21, r27
    ddc8:	c9 f1       	breq	.+114    	; 0xde3c <util_delay_ms+0x15e>
		{
			TCB1.CNT = 0x0000;
    ddca:	80 e1       	ldi	r24, 0x10	; 16
    ddcc:	9b e0       	ldi	r25, 0x0B	; 11
    ddce:	fc 01       	movw	r30, r24
    ddd0:	12 86       	std	Z+10, r1	; 0x0a
    ddd2:	13 86       	std	Z+11, r1	; 0x0b
			countdownValue = delayValue;
    ddd4:	89 81       	ldd	r24, Y+1	; 0x01
    ddd6:	9a 81       	ldd	r25, Y+2	; 0x02
    ddd8:	ab 81       	ldd	r26, Y+3	; 0x03
    ddda:	bc 81       	ldd	r27, Y+4	; 0x04
    dddc:	80 93 bf 4a 	sts	0x4ABF, r24	; 0x804abf <_ZZ13util_delay_msE14countdownValue>
    dde0:	90 93 c0 4a 	sts	0x4AC0, r25	; 0x804ac0 <_ZZ13util_delay_msE14countdownValue+0x1>
    dde4:	a0 93 c1 4a 	sts	0x4AC1, r26	; 0x804ac1 <_ZZ13util_delay_msE14countdownValue+0x2>
    dde8:	b0 93 c2 4a 	sts	0x4AC2, r27	; 0x804ac2 <_ZZ13util_delay_msE14countdownValue+0x3>
			g_ms_counter = delayValue;
    ddec:	89 81       	ldd	r24, Y+1	; 0x01
    ddee:	9a 81       	ldd	r25, Y+2	; 0x02
    ddf0:	ab 81       	ldd	r26, Y+3	; 0x03
    ddf2:	bc 81       	ldd	r27, Y+4	; 0x04
    ddf4:	80 93 ba 4a 	sts	0x4ABA, r24	; 0x804aba <_ZL12g_ms_counter>
    ddf8:	90 93 bb 4a 	sts	0x4ABB, r25	; 0x804abb <_ZL12g_ms_counter+0x1>
    ddfc:	a0 93 bc 4a 	sts	0x4ABC, r26	; 0x804abc <_ZL12g_ms_counter+0x2>
    de00:	b0 93 bd 4a 	sts	0x4ABD, r27	; 0x804abd <_ZL12g_ms_counter+0x3>
			counting = true;
    de04:	81 e0       	ldi	r24, 0x01	; 1
    de06:	80 93 be 4a 	sts	0x4ABE, r24	; 0x804abe <_ZZ13util_delay_msE8counting>
    de0a:	18 c0       	rjmp	.+48     	; 0xde3c <util_delay_ms+0x15e>
		}
	}
	else
	{
		TCB1.INTCTRL = 0 << TCB_CAPT_bp   /* Capture or Timeout: disabled */
    de0c:	80 e1       	ldi	r24, 0x10	; 16
    de0e:	9b e0       	ldi	r25, 0x0B	; 11
		| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    de10:	fc 01       	movw	r30, r24
    de12:	15 82       	std	Z+5, r1	; 0x05

		counting = false;
    de14:	10 92 be 4a 	sts	0x4ABE, r1	; 0x804abe <_ZZ13util_delay_msE8counting>
		countdownValue = 0;
    de18:	10 92 bf 4a 	sts	0x4ABF, r1	; 0x804abf <_ZZ13util_delay_msE14countdownValue>
    de1c:	10 92 c0 4a 	sts	0x4AC0, r1	; 0x804ac0 <_ZZ13util_delay_msE14countdownValue+0x1>
    de20:	10 92 c1 4a 	sts	0x4AC1, r1	; 0x804ac1 <_ZZ13util_delay_msE14countdownValue+0x2>
    de24:	10 92 c2 4a 	sts	0x4AC2, r1	; 0x804ac2 <_ZZ13util_delay_msE14countdownValue+0x3>
		g_ms_counter = 0;
    de28:	10 92 ba 4a 	sts	0x4ABA, r1	; 0x804aba <_ZL12g_ms_counter>
    de2c:	10 92 bb 4a 	sts	0x4ABB, r1	; 0x804abb <_ZL12g_ms_counter+0x1>
    de30:	10 92 bc 4a 	sts	0x4ABC, r1	; 0x804abc <_ZL12g_ms_counter+0x2>
    de34:	10 92 bd 4a 	sts	0x4ABD, r1	; 0x804abd <_ZL12g_ms_counter+0x3>
		return(false); /* timer reset */
    de38:	80 e0       	ldi	r24, 0x00	; 0
    de3a:	06 c0       	rjmp	.+12     	; 0xde48 <util_delay_ms+0x16a>
	}
	
	TCB1.INTCTRL = 1 << TCB_CAPT_bp   /* Capture or Timeout: enabled */
    de3c:	80 e1       	ldi	r24, 0x10	; 16
    de3e:	9b e0       	ldi	r25, 0x0B	; 11
	| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    de40:	21 e0       	ldi	r18, 0x01	; 1
    de42:	fc 01       	movw	r30, r24
    de44:	25 83       	std	Z+5, r18	; 0x05
	
	return(true);
    de46:	81 e0       	ldi	r24, 0x01	; 1
}
    de48:	24 96       	adiw	r28, 0x04	; 4
    de4a:	cd bf       	out	0x3d, r28	; 61
    de4c:	de bf       	out	0x3e, r29	; 62
    de4e:	df 91       	pop	r29
    de50:	cf 91       	pop	r28
    de52:	08 95       	ret

0000de54 <__vector_13>:

/**
One millisecond utility counter based on CPU clock.
*/
ISR(TCB1_INT_vect)
{
    de54:	1f 92       	push	r1
    de56:	0f 92       	push	r0
    de58:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    de5c:	0f 92       	push	r0
    de5e:	11 24       	eor	r1, r1
    de60:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    de64:	0f 92       	push	r0
    de66:	2f 93       	push	r18
    de68:	8f 93       	push	r24
    de6a:	9f 93       	push	r25
    de6c:	af 93       	push	r26
    de6e:	bf 93       	push	r27
    de70:	ef 93       	push	r30
    de72:	ff 93       	push	r31
    de74:	cf 93       	push	r28
    de76:	df 93       	push	r29
    de78:	cd b7       	in	r28, 0x3d	; 61
    de7a:	de b7       	in	r29, 0x3e	; 62
    if(TCB1.INTFLAGS & TCB_CAPT_bm)
    de7c:	80 e1       	ldi	r24, 0x10	; 16
    de7e:	9b e0       	ldi	r25, 0x0B	; 11
    de80:	fc 01       	movw	r30, r24
    de82:	86 81       	ldd	r24, Z+6	; 0x06
    de84:	88 2f       	mov	r24, r24
    de86:	90 e0       	ldi	r25, 0x00	; 0
    de88:	81 70       	andi	r24, 0x01	; 1
    de8a:	99 27       	eor	r25, r25
    de8c:	21 e0       	ldi	r18, 0x01	; 1
    de8e:	89 2b       	or	r24, r25
    de90:	09 f4       	brne	.+2      	; 0xde94 <__vector_13+0x40>
    de92:	20 e0       	ldi	r18, 0x00	; 0
    de94:	22 23       	and	r18, r18
    de96:	49 f1       	breq	.+82     	; 0xdeea <__vector_13+0x96>
    {
		if(g_ms_counter) /* check for 1-second interval */
    de98:	80 91 ba 4a 	lds	r24, 0x4ABA	; 0x804aba <_ZL12g_ms_counter>
    de9c:	90 91 bb 4a 	lds	r25, 0x4ABB	; 0x804abb <_ZL12g_ms_counter+0x1>
    dea0:	a0 91 bc 4a 	lds	r26, 0x4ABC	; 0x804abc <_ZL12g_ms_counter+0x2>
    dea4:	b0 91 bd 4a 	lds	r27, 0x4ABD	; 0x804abd <_ZL12g_ms_counter+0x3>
    dea8:	89 2b       	or	r24, r25
    deaa:	8a 2b       	or	r24, r26
    deac:	8b 2b       	or	r24, r27
    deae:	a1 f0       	breq	.+40     	; 0xded8 <__vector_13+0x84>
		{
			g_ms_counter--;	
    deb0:	80 91 ba 4a 	lds	r24, 0x4ABA	; 0x804aba <_ZL12g_ms_counter>
    deb4:	90 91 bb 4a 	lds	r25, 0x4ABB	; 0x804abb <_ZL12g_ms_counter+0x1>
    deb8:	a0 91 bc 4a 	lds	r26, 0x4ABC	; 0x804abc <_ZL12g_ms_counter+0x2>
    debc:	b0 91 bd 4a 	lds	r27, 0x4ABD	; 0x804abd <_ZL12g_ms_counter+0x3>
    dec0:	01 97       	sbiw	r24, 0x01	; 1
    dec2:	a1 09       	sbc	r26, r1
    dec4:	b1 09       	sbc	r27, r1
    dec6:	80 93 ba 4a 	sts	0x4ABA, r24	; 0x804aba <_ZL12g_ms_counter>
    deca:	90 93 bb 4a 	sts	0x4ABB, r25	; 0x804abb <_ZL12g_ms_counter+0x1>
    dece:	a0 93 bc 4a 	sts	0x4ABC, r26	; 0x804abc <_ZL12g_ms_counter+0x2>
    ded2:	b0 93 bd 4a 	sts	0x4ABD, r27	; 0x804abd <_ZL12g_ms_counter+0x3>
    ded6:	04 c0       	rjmp	.+8      	; 0xdee0 <__vector_13+0x8c>
		}
		else
		{
			TCB1.INTCTRL = 0 << TCB_CAPT_bp   /* Capture or Timeout: disabled */
    ded8:	80 e1       	ldi	r24, 0x10	; 16
    deda:	9b e0       	ldi	r25, 0x0B	; 11
			| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    dedc:	fc 01       	movw	r30, r24
    dede:	15 82       	std	Z+5, r1	; 0x05
		}

        TCB1.INTFLAGS = TCB_CAPT_bm; /* clear interrupt flag */
    dee0:	80 e1       	ldi	r24, 0x10	; 16
    dee2:	9b e0       	ldi	r25, 0x0B	; 11
    dee4:	21 e0       	ldi	r18, 0x01	; 1
    dee6:	fc 01       	movw	r30, r24
    dee8:	26 83       	std	Z+6, r18	; 0x06
    }
}
    deea:	00 00       	nop
    deec:	df 91       	pop	r29
    deee:	cf 91       	pop	r28
    def0:	ff 91       	pop	r31
    def2:	ef 91       	pop	r30
    def4:	bf 91       	pop	r27
    def6:	af 91       	pop	r26
    def8:	9f 91       	pop	r25
    defa:	8f 91       	pop	r24
    defc:	2f 91       	pop	r18
    defe:	0f 90       	pop	r0
    df00:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    df04:	0f 90       	pop	r0
    df06:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    df0a:	0f 90       	pop	r0
    df0c:	1f 90       	pop	r1
    df0e:	18 95       	reti

0000df10 <_Z14txSetFrequencyPmb>:
 *       This function sets the VFO frequency (CLK0 of the Si5351) based on the intended frequency passed in by the parameter (freq),
 *       and the VFO configuration in effect. The VFO  frequency might be above or below the intended  frequency, depending on the VFO
 *       configuration setting in effect for the radio band of the frequency.
 */
	bool txSetFrequency(Frequency_Hz *freq, bool leaveClockOff)
	{
    df10:	cf 93       	push	r28
    df12:	df 93       	push	r29
    df14:	00 d0       	rcall	.+0      	; 0xdf16 <_Z14txSetFrequencyPmb+0x6>
    df16:	00 d0       	rcall	.+0      	; 0xdf18 <_Z14txSetFrequencyPmb+0x8>
    df18:	cd b7       	in	r28, 0x3d	; 61
    df1a:	de b7       	in	r29, 0x3e	; 62
    df1c:	8a 83       	std	Y+2, r24	; 0x02
    df1e:	9b 83       	std	Y+3, r25	; 0x03
    df20:	6c 83       	std	Y+4, r22	; 0x04
		bool err = true;
    df22:	81 e0       	ldi	r24, 0x01	; 1
    df24:	89 83       	std	Y+1, r24	; 0x01

		if(!freq) return(err);
    df26:	8a 81       	ldd	r24, Y+2	; 0x02
    df28:	9b 81       	ldd	r25, Y+3	; 0x03
    df2a:	89 2b       	or	r24, r25
    df2c:	11 f4       	brne	.+4      	; 0xdf32 <_Z14txSetFrequencyPmb+0x22>
    df2e:	89 81       	ldd	r24, Y+1	; 0x01
    df30:	3b c0       	rjmp	.+118    	; 0xdfa8 <_Z14txSetFrequencyPmb+0x98>
		
		if((*freq < TX_MAXIMUM_80M_FREQUENCY) && (*freq > TX_MINIMUM_80M_FREQUENCY))    /* 80m */
    df32:	8a 81       	ldd	r24, Y+2	; 0x02
    df34:	9b 81       	ldd	r25, Y+3	; 0x03
    df36:	fc 01       	movw	r30, r24
    df38:	80 81       	ld	r24, Z
    df3a:	91 81       	ldd	r25, Z+1	; 0x01
    df3c:	a2 81       	ldd	r26, Z+2	; 0x02
    df3e:	b3 81       	ldd	r27, Z+3	; 0x03
    df40:	81 15       	cp	r24, r1
    df42:	99 40       	sbci	r25, 0x09	; 9
    df44:	ad 43       	sbci	r26, 0x3D	; 61
    df46:	b1 05       	cpc	r27, r1
    df48:	70 f5       	brcc	.+92     	; 0xdfa6 <_Z14txSetFrequencyPmb+0x96>
    df4a:	8a 81       	ldd	r24, Y+2	; 0x02
    df4c:	9b 81       	ldd	r25, Y+3	; 0x03
    df4e:	fc 01       	movw	r30, r24
    df50:	80 81       	ld	r24, Z
    df52:	91 81       	ldd	r25, Z+1	; 0x01
    df54:	a2 81       	ldd	r26, Z+2	; 0x02
    df56:	b3 81       	ldd	r27, Z+3	; 0x03
    df58:	81 3e       	cpi	r24, 0xE1	; 225
    df5a:	97 46       	sbci	r25, 0x67	; 103
    df5c:	a5 43       	sbci	r26, 0x35	; 53
    df5e:	b1 05       	cpc	r27, r1
    df60:	10 f1       	brcs	.+68     	; 0xdfa6 <_Z14txSetFrequencyPmb+0x96>
		{
			if(!si5351_set_freq(*freq, TX_CLOCK_HF_0, leaveClockOff))
    df62:	8a 81       	ldd	r24, Y+2	; 0x02
    df64:	9b 81       	ldd	r25, Y+3	; 0x03
    df66:	fc 01       	movw	r30, r24
    df68:	80 81       	ld	r24, Z
    df6a:	91 81       	ldd	r25, Z+1	; 0x01
    df6c:	a2 81       	ldd	r26, Z+2	; 0x02
    df6e:	b3 81       	ldd	r27, Z+3	; 0x03
    df70:	2c 81       	ldd	r18, Y+4	; 0x04
    df72:	41 e0       	ldi	r20, 0x01	; 1
    df74:	bc 01       	movw	r22, r24
    df76:	cd 01       	movw	r24, r26
    df78:	0e 94 a5 64 	call	0xc94a	; 0xc94a <si5351_set_freq>
    df7c:	98 2f       	mov	r25, r24
    df7e:	81 e0       	ldi	r24, 0x01	; 1
    df80:	89 27       	eor	r24, r25
    df82:	88 23       	and	r24, r24
    df84:	81 f0       	breq	.+32     	; 0xdfa6 <_Z14txSetFrequencyPmb+0x96>
			{
				g_80m_frequency = *freq;
    df86:	8a 81       	ldd	r24, Y+2	; 0x02
    df88:	9b 81       	ldd	r25, Y+3	; 0x03
    df8a:	fc 01       	movw	r30, r24
    df8c:	80 81       	ld	r24, Z
    df8e:	91 81       	ldd	r25, Z+1	; 0x01
    df90:	a2 81       	ldd	r26, Z+2	; 0x02
    df92:	b3 81       	ldd	r27, Z+3	; 0x03
    df94:	80 93 36 40 	sts	0x4036, r24	; 0x804036 <g_80m_frequency>
    df98:	90 93 37 40 	sts	0x4037, r25	; 0x804037 <g_80m_frequency+0x1>
    df9c:	a0 93 38 40 	sts	0x4038, r26	; 0x804038 <g_80m_frequency+0x2>
    dfa0:	b0 93 39 40 	sts	0x4039, r27	; 0x804039 <g_80m_frequency+0x3>
				err = false;
    dfa4:	19 82       	std	Y+1, r1	; 0x01
			}
		}

		return(err);
    dfa6:	89 81       	ldd	r24, Y+1	; 0x01
	}
    dfa8:	24 96       	adiw	r28, 0x04	; 4
    dfaa:	cd bf       	out	0x3d, r28	; 61
    dfac:	de bf       	out	0x3e, r29	; 62
    dfae:	df 91       	pop	r29
    dfb0:	cf 91       	pop	r28
    dfb2:	08 95       	ret

0000dfb4 <_Z14txGetFrequencyv>:

	Frequency_Hz txGetFrequency(void)
	{
    dfb4:	cf 93       	push	r28
    dfb6:	df 93       	push	r29
    dfb8:	cd b7       	in	r28, 0x3d	; 61
    dfba:	de b7       	in	r29, 0x3e	; 62
		return( g_80m_frequency);
    dfbc:	80 91 36 40 	lds	r24, 0x4036	; 0x804036 <g_80m_frequency>
    dfc0:	90 91 37 40 	lds	r25, 0x4037	; 0x804037 <g_80m_frequency+0x1>
    dfc4:	a0 91 38 40 	lds	r26, 0x4038	; 0x804038 <g_80m_frequency+0x2>
    dfc8:	b0 91 39 40 	lds	r27, 0x4039	; 0x804039 <g_80m_frequency+0x3>
	}
    dfcc:	bc 01       	movw	r22, r24
    dfce:	cd 01       	movw	r24, r26
    dfd0:	df 91       	pop	r29
    dfd2:	cf 91       	pop	r28
    dfd4:	08 95       	ret

0000dfd6 <_Z18powerToTransmitterb>:

	EC powerToTransmitter(bool on)
	{
    dfd6:	cf 93       	push	r28
    dfd8:	df 93       	push	r29
    dfda:	1f 92       	push	r1
    dfdc:	cd b7       	in	r28, 0x3d	; 61
    dfde:	de b7       	in	r29, 0x3e	; 62
    dfe0:	89 83       	std	Y+1, r24	; 0x01
		fet_driver(on);
    dfe2:	89 81       	ldd	r24, Y+1	; 0x01
    dfe4:	0e 94 1b 3b 	call	0x7636	; 0x7636 <_Z10fet_driverb>

		return(ERROR_CODE_NO_ERROR);
    dfe8:	80 e0       	ldi	r24, 0x00	; 0
	}
    dfea:	0f 90       	pop	r0
    dfec:	df 91       	pop	r29
    dfee:	cf 91       	pop	r28
    dff0:	08 95       	ret

0000dff2 <_Z14keyTransmitterb>:

	void keyTransmitter(bool on)
	{
    dff2:	cf 93       	push	r28
    dff4:	df 93       	push	r29
    dff6:	1f 92       	push	r1
    dff8:	cd b7       	in	r28, 0x3d	; 61
    dffa:	de b7       	in	r29, 0x3e	; 62
    dffc:	89 83       	std	Y+1, r24	; 0x01
		if(g_tx_initialized)
    dffe:	80 91 c3 4a 	lds	r24, 0x4AC3	; 0x804ac3 <_ZL16g_tx_initialized>
    e002:	88 23       	and	r24, r24
    e004:	29 f1       	breq	.+74     	; 0xe050 <_Z14keyTransmitterb+0x5e>
		{			
			if(on)
    e006:	89 81       	ldd	r24, Y+1	; 0x01
    e008:	88 23       	and	r24, r24
    e00a:	a9 f0       	breq	.+42     	; 0xe036 <_Z14keyTransmitterb+0x44>
			{
				if(!g_transmitter_keyed)
    e00c:	90 91 c4 4a 	lds	r25, 0x4AC4	; 0x804ac4 <_ZL19g_transmitter_keyed>
    e010:	81 e0       	ldi	r24, 0x01	; 1
    e012:	89 27       	eor	r24, r25
    e014:	88 23       	and	r24, r24
    e016:	e1 f0       	breq	.+56     	; 0xe050 <_Z14keyTransmitterb+0x5e>
				{
					if(si5351_clock_enable(TX_CLOCK_HF_0, SI5351_CLK_ENABLED) == ERROR_CODE_NO_ERROR)
    e018:	61 e0       	ldi	r22, 0x01	; 1
    e01a:	81 e0       	ldi	r24, 0x01	; 1
    e01c:	0e 94 46 66 	call	0xcc8c	; 0xcc8c <si5351_clock_enable>
    e020:	98 2f       	mov	r25, r24
    e022:	81 e0       	ldi	r24, 0x01	; 1
    e024:	99 23       	and	r25, r25
    e026:	09 f0       	breq	.+2      	; 0xe02a <_Z14keyTransmitterb+0x38>
    e028:	80 e0       	ldi	r24, 0x00	; 0
    e02a:	88 23       	and	r24, r24
    e02c:	89 f0       	breq	.+34     	; 0xe050 <_Z14keyTransmitterb+0x5e>
					{
						g_transmitter_keyed = true;
    e02e:	81 e0       	ldi	r24, 0x01	; 1
    e030:	80 93 c4 4a 	sts	0x4AC4, r24	; 0x804ac4 <_ZL19g_transmitter_keyed>
				{
					g_transmitter_keyed = false;
				}
			}
		}
	}
    e034:	0d c0       	rjmp	.+26     	; 0xe050 <_Z14keyTransmitterb+0x5e>
					}
				}
			}
			else
			{
				if(si5351_clock_enable(TX_CLOCK_HF_0, SI5351_CLK_DISABLED) == ERROR_CODE_NO_ERROR)
    e036:	60 e0       	ldi	r22, 0x00	; 0
    e038:	81 e0       	ldi	r24, 0x01	; 1
    e03a:	0e 94 46 66 	call	0xcc8c	; 0xcc8c <si5351_clock_enable>
    e03e:	98 2f       	mov	r25, r24
    e040:	81 e0       	ldi	r24, 0x01	; 1
    e042:	99 23       	and	r25, r25
    e044:	09 f0       	breq	.+2      	; 0xe048 <_Z14keyTransmitterb+0x56>
    e046:	80 e0       	ldi	r24, 0x00	; 0
    e048:	88 23       	and	r24, r24
    e04a:	11 f0       	breq	.+4      	; 0xe050 <_Z14keyTransmitterb+0x5e>
				{
					g_transmitter_keyed = false;
    e04c:	10 92 c4 4a 	sts	0x4AC4, r1	; 0x804ac4 <_ZL19g_transmitter_keyed>
				}
			}
		}
	}
    e050:	00 00       	nop
    e052:	0f 90       	pop	r0
    e054:	df 91       	pop	r29
    e056:	cf 91       	pop	r28
    e058:	08 95       	ret

0000e05a <_Z12txGetPowerMwv>:

	uint16_t txGetPowerMw(void)
	{
    e05a:	cf 93       	push	r28
    e05c:	df 93       	push	r29
    e05e:	cd b7       	in	r28, 0x3d	; 61
    e060:	de b7       	in	r29, 0x3e	; 62
		return( g_80m_power_level_mW);
    e062:	80 91 3a 40 	lds	r24, 0x403A	; 0x80403a <g_80m_power_level_mW>
    e066:	90 91 3b 40 	lds	r25, 0x403B	; 0x80403b <g_80m_power_level_mW+0x1>
	}
    e06a:	df 91       	pop	r29
    e06c:	cf 91       	pop	r28
    e06e:	08 95       	ret

0000e070 <_Z15txSetParametersPjPb>:

	EC __attribute__((optimize("O0"))) txSetParameters(uint16_t* power_mW, bool* enableDriverPwr)
/*	EC txSetParameters(uint16_t* power_mW, bool* enableDriverPwr) */
	{
    e070:	cf 93       	push	r28
    e072:	df 93       	push	r29
    e074:	cd b7       	in	r28, 0x3d	; 61
    e076:	de b7       	in	r29, 0x3e	; 62
    e078:	2b 97       	sbiw	r28, 0x0b	; 11
    e07a:	cd bf       	out	0x3d, r28	; 61
    e07c:	de bf       	out	0x3e, r29	; 62
    e07e:	88 87       	std	Y+8, r24	; 0x08
    e080:	99 87       	std	Y+9, r25	; 0x09
    e082:	6a 87       	std	Y+10, r22	; 0x0a
    e084:	7b 87       	std	Y+11, r23	; 0x0b
		bool err = false;
    e086:	19 82       	std	Y+1, r1	; 0x01
		EC code = ERROR_CODE_NO_ERROR;
    e088:	1a 82       	std	Y+2, r1	; 0x02
		uint16_t power = 0;
    e08a:	1b 82       	std	Y+3, r1	; 0x03
    e08c:	1c 82       	std	Y+4, r1	; 0x04

		if(power_mW != null)
    e08e:	88 85       	ldd	r24, Y+8	; 0x08
    e090:	99 85       	ldd	r25, Y+9	; 0x09
    e092:	89 2b       	or	r24, r25
    e094:	09 f4       	brne	.+2      	; 0xe098 <_Z15txSetParametersPjPb+0x28>
    e096:	68 c0       	rjmp	.+208    	; 0xe168 <_Z15txSetParametersPjPb+0xf8>
		{
			power = *power_mW;
    e098:	88 85       	ldd	r24, Y+8	; 0x08
    e09a:	99 85       	ldd	r25, Y+9	; 0x09
    e09c:	fc 01       	movw	r30, r24
    e09e:	80 81       	ld	r24, Z
    e0a0:	91 81       	ldd	r25, Z+1	; 0x01
    e0a2:	8b 83       	std	Y+3, r24	; 0x03
    e0a4:	9c 83       	std	Y+4, r25	; 0x04

			if(power <= MAX_TX_POWER_80M_MW)
    e0a6:	8b 81       	ldd	r24, Y+3	; 0x03
    e0a8:	9c 81       	ldd	r25, Y+4	; 0x04
    e0aa:	89 38       	cpi	r24, 0x89	; 137
    e0ac:	93 41       	sbci	r25, 0x13	; 19
    e0ae:	08 f0       	brcs	.+2      	; 0xe0b2 <_Z15txSetParametersPjPb+0x42>
    e0b0:	57 c0       	rjmp	.+174    	; 0xe160 <_Z15txSetParametersPjPb+0xf0>
			{
				uint8_t drainVoltageDAC, modLevelHigh, modLevelLow;
				code = txMilliwattsToSettings(&power, &drainVoltageDAC, &modLevelHigh, &modLevelLow);
    e0b2:	9e 01       	movw	r18, r28
    e0b4:	29 5f       	subi	r18, 0xF9	; 249
    e0b6:	3f 4f       	sbci	r19, 0xFF	; 255
    e0b8:	ae 01       	movw	r20, r28
    e0ba:	4a 5f       	subi	r20, 0xFA	; 250
    e0bc:	5f 4f       	sbci	r21, 0xFF	; 255
    e0be:	be 01       	movw	r22, r28
    e0c0:	6b 5f       	subi	r22, 0xFB	; 251
    e0c2:	7f 4f       	sbci	r23, 0xFF	; 255
    e0c4:	ce 01       	movw	r24, r28
    e0c6:	03 96       	adiw	r24, 0x03	; 3
    e0c8:	0e 94 32 71 	call	0xe264	; 0xe264 <_Z22txMilliwattsToSettingsPjPhS0_S0_>
    e0cc:	8a 83       	std	Y+2, r24	; 0x02
				err = (code == ERROR_CODE_SW_LOGIC_ERROR);
    e0ce:	81 e0       	ldi	r24, 0x01	; 1
    e0d0:	9a 81       	ldd	r25, Y+2	; 0x02
    e0d2:	9f 3c       	cpi	r25, 0xCF	; 207
    e0d4:	09 f0       	breq	.+2      	; 0xe0d8 <_Z15txSetParametersPjPb+0x68>
    e0d6:	80 e0       	ldi	r24, 0x00	; 0
    e0d8:	89 83       	std	Y+1, r24	; 0x01

				g_tx_power_is_zero = (power == 0);
    e0da:	8b 81       	ldd	r24, Y+3	; 0x03
    e0dc:	9c 81       	ldd	r25, Y+4	; 0x04
    e0de:	21 e0       	ldi	r18, 0x01	; 1
    e0e0:	89 2b       	or	r24, r25
    e0e2:	09 f0       	breq	.+2      	; 0xe0e6 <_Z15txSetParametersPjPb+0x76>
    e0e4:	20 e0       	ldi	r18, 0x00	; 0
    e0e6:	20 93 40 40 	sts	0x4040, r18	; 0x804040 <g_tx_power_is_zero>

				if(!err)
    e0ea:	99 81       	ldd	r25, Y+1	; 0x01
    e0ec:	81 e0       	ldi	r24, 0x01	; 1
    e0ee:	89 27       	eor	r24, r25
    e0f0:	88 23       	and	r24, r24
    e0f2:	71 f1       	breq	.+92     	; 0xe150 <_Z15txSetParametersPjPb+0xe0>
				{
					g_80m_power_level_mW = power;
    e0f4:	8b 81       	ldd	r24, Y+3	; 0x03
    e0f6:	9c 81       	ldd	r25, Y+4	; 0x04
    e0f8:	80 93 3a 40 	sts	0x403A, r24	; 0x80403a <g_80m_power_level_mW>
    e0fc:	90 93 3b 40 	sts	0x403B, r25	; 0x80403b <g_80m_power_level_mW+0x1>

					if(g_antenna_connect_state == ANT_CONNECTED)
    e100:	90 91 51 47 	lds	r25, 0x4751	; 0x804751 <g_antenna_connect_state>
    e104:	81 e0       	ldi	r24, 0x01	; 1
    e106:	92 30       	cpi	r25, 0x02	; 2
    e108:	09 f0       	breq	.+2      	; 0xe10c <_Z15txSetParametersPjPb+0x9c>
    e10a:	80 e0       	ldi	r24, 0x00	; 0
    e10c:	88 23       	and	r24, r24
    e10e:	31 f0       	breq	.+12     	; 0xe11c <_Z15txSetParametersPjPb+0xac>
					{
						DAC0_setVal(drainVoltageDAC);
    e110:	8d 81       	ldd	r24, Y+5	; 0x05
    e112:	88 2f       	mov	r24, r24
    e114:	90 e0       	ldi	r25, 0x00	; 0
    e116:	0e 94 70 3c 	call	0x78e0	; 0x78e0 <_Z11DAC0_setValj>
    e11a:	07 c0       	rjmp	.+14     	; 0xe12a <_Z15txSetParametersPjPb+0xba>
					}
					else
					{
						g_tx_power_is_zero = true;
    e11c:	81 e0       	ldi	r24, 0x01	; 1
    e11e:	80 93 40 40 	sts	0x4040, r24	; 0x804040 <g_tx_power_is_zero>
						err = true;
    e122:	81 e0       	ldi	r24, 0x01	; 1
    e124:	89 83       	std	Y+1, r24	; 0x01
						code = ERROR_CODE_NO_ANTENNA_PREVENTS_POWER_SETTING;
    e126:	86 ef       	ldi	r24, 0xF6	; 246
    e128:	8a 83       	std	Y+2, r24	; 0x02
					}

					if(g_tx_power_is_zero || (drainVoltageDAC == 0))
    e12a:	80 91 40 40 	lds	r24, 0x4040	; 0x804040 <g_tx_power_is_zero>
    e12e:	88 23       	and	r24, r24
    e130:	19 f4       	brne	.+6      	; 0xe138 <_Z15txSetParametersPjPb+0xc8>
    e132:	8d 81       	ldd	r24, Y+5	; 0x05
    e134:	88 23       	and	r24, r24
    e136:	11 f4       	brne	.+4      	; 0xe13c <_Z15txSetParametersPjPb+0xcc>
    e138:	81 e0       	ldi	r24, 0x01	; 1
    e13a:	01 c0       	rjmp	.+2      	; 0xe13e <_Z15txSetParametersPjPb+0xce>
    e13c:	80 e0       	ldi	r24, 0x00	; 0
    e13e:	88 23       	and	r24, r24
    e140:	21 f0       	breq	.+8      	; 0xe14a <_Z15txSetParametersPjPb+0xda>
					{
						powerToTransmitter(OFF); /* Turn off FET driver */
    e142:	80 e0       	ldi	r24, 0x00	; 0
    e144:	0e 94 eb 6f 	call	0xdfd6	; 0xdfd6 <_Z18powerToTransmitterb>
    e148:	03 c0       	rjmp	.+6      	; 0xe150 <_Z15txSetParametersPjPb+0xe0>
					}
					else
					{
						powerToTransmitter(ON); /* Turn on FET driver */
    e14a:	81 e0       	ldi	r24, 0x01	; 1
    e14c:	0e 94 eb 6f 	call	0xdfd6	; 0xdfd6 <_Z18powerToTransmitterb>
					}
				}

				*power_mW = power;
    e150:	2b 81       	ldd	r18, Y+3	; 0x03
    e152:	3c 81       	ldd	r19, Y+4	; 0x04
    e154:	88 85       	ldd	r24, Y+8	; 0x08
    e156:	99 85       	ldd	r25, Y+9	; 0x09
    e158:	fc 01       	movw	r30, r24
    e15a:	20 83       	st	Z, r18
    e15c:	31 83       	std	Z+1, r19	; 0x01
    e15e:	04 c0       	rjmp	.+8      	; 0xe168 <_Z15txSetParametersPjPb+0xf8>
			}
			else
			{
				err = true;
    e160:	81 e0       	ldi	r24, 0x01	; 1
    e162:	89 83       	std	Y+1, r24	; 0x01
				code = ERROR_CODE_POWER_LEVEL_NOT_SUPPORTED;
    e164:	85 ef       	ldi	r24, 0xF5	; 245
    e166:	8a 83       	std	Y+2, r24	; 0x02
			}
		}

		if(!err)
    e168:	99 81       	ldd	r25, Y+1	; 0x01
    e16a:	81 e0       	ldi	r24, 0x01	; 1
    e16c:	89 27       	eor	r24, r25
    e16e:	88 23       	and	r24, r24
    e170:	51 f0       	breq	.+20     	; 0xe186 <_Z15txSetParametersPjPb+0x116>
		{
			if(enableDriverPwr != NULL)
    e172:	8a 85       	ldd	r24, Y+10	; 0x0a
    e174:	9b 85       	ldd	r25, Y+11	; 0x0b
    e176:	89 2b       	or	r24, r25
    e178:	31 f0       	breq	.+12     	; 0xe186 <_Z15txSetParametersPjPb+0x116>
			{
				powerToTransmitter(*enableDriverPwr);
    e17a:	8a 85       	ldd	r24, Y+10	; 0x0a
    e17c:	9b 85       	ldd	r25, Y+11	; 0x0b
    e17e:	fc 01       	movw	r30, r24
    e180:	80 81       	ld	r24, Z
    e182:	0e 94 eb 6f 	call	0xdfd6	; 0xdfd6 <_Z18powerToTransmitterb>
			}
		}

		return(code);
    e186:	8a 81       	ldd	r24, Y+2	; 0x02
	}
    e188:	2b 96       	adiw	r28, 0x0b	; 11
    e18a:	cd bf       	out	0x3d, r28	; 61
    e18c:	de bf       	out	0x3e, r29	; 62
    e18e:	df 91       	pop	r29
    e190:	cf 91       	pop	r28
    e192:	08 95       	ret

0000e194 <_Z16init_transmitterv>:


	EC init_transmitter(void)
	{
    e194:	cf 93       	push	r28
    e196:	df 93       	push	r29
    e198:	00 d0       	rcall	.+0      	; 0xe19a <_Z16init_transmitterv+0x6>
    e19a:	00 d0       	rcall	.+0      	; 0xe19c <_Z16init_transmitterv+0x8>
    e19c:	cd b7       	in	r28, 0x3d	; 61
    e19e:	de b7       	in	r29, 0x3e	; 62
		EC code;
		bool err;
		
		DAC0_init();
    e1a0:	0e 94 42 3c 	call	0x7884	; 0x7884 <_Z9DAC0_initv>

		if((err = si5351_init(SI5351_CRYSTAL_LOAD_6PF, 0)))
    e1a4:	40 e0       	ldi	r20, 0x00	; 0
    e1a6:	50 e0       	ldi	r21, 0x00	; 0
    e1a8:	ba 01       	movw	r22, r20
    e1aa:	80 e4       	ldi	r24, 0x40	; 64
    e1ac:	0e 94 d7 63 	call	0xc7ae	; 0xc7ae <si5351_init>
    e1b0:	8a 83       	std	Y+2, r24	; 0x02
    e1b2:	8a 81       	ldd	r24, Y+2	; 0x02
    e1b4:	88 23       	and	r24, r24
    e1b6:	11 f0       	breq	.+4      	; 0xe1bc <_Z16init_transmitterv+0x28>
		{
			return(ERROR_CODE_RF_OSCILLATOR_ERROR);
    e1b8:	82 ed       	ldi	r24, 0xD2	; 210
    e1ba:	4e c0       	rjmp	.+156    	; 0xe258 <_Z16init_transmitterv+0xc4>
		}

		if((code = txSetParameters(NULL, NULL)))
    e1bc:	60 e0       	ldi	r22, 0x00	; 0
    e1be:	70 e0       	ldi	r23, 0x00	; 0
    e1c0:	80 e0       	ldi	r24, 0x00	; 0
    e1c2:	90 e0       	ldi	r25, 0x00	; 0
    e1c4:	0e 94 38 70 	call	0xe070	; 0xe070 <_Z15txSetParametersPjPb>
    e1c8:	89 83       	std	Y+1, r24	; 0x01
    e1ca:	81 e0       	ldi	r24, 0x01	; 1
    e1cc:	99 81       	ldd	r25, Y+1	; 0x01
    e1ce:	99 23       	and	r25, r25
    e1d0:	09 f4       	brne	.+2      	; 0xe1d4 <_Z16init_transmitterv+0x40>
    e1d2:	80 e0       	ldi	r24, 0x00	; 0
    e1d4:	88 23       	and	r24, r24
    e1d6:	11 f0       	breq	.+4      	; 0xe1dc <_Z16init_transmitterv+0x48>
		{
			return( code);
    e1d8:	89 81       	ldd	r24, Y+1	; 0x01
    e1da:	3e c0       	rjmp	.+124    	; 0xe258 <_Z16init_transmitterv+0xc4>
		}

		if((code = si5351_drive_strength(TX_CLOCK_HF_0, SI5351_DRIVE_8MA)))
    e1dc:	63 e0       	ldi	r22, 0x03	; 3
    e1de:	81 e0       	ldi	r24, 0x01	; 1
    e1e0:	0e 94 91 66 	call	0xcd22	; 0xcd22 <si5351_drive_strength>
    e1e4:	89 83       	std	Y+1, r24	; 0x01
    e1e6:	81 e0       	ldi	r24, 0x01	; 1
    e1e8:	99 81       	ldd	r25, Y+1	; 0x01
    e1ea:	99 23       	and	r25, r25
    e1ec:	09 f4       	brne	.+2      	; 0xe1f0 <_Z16init_transmitterv+0x5c>
    e1ee:	80 e0       	ldi	r24, 0x00	; 0
    e1f0:	88 23       	and	r24, r24
    e1f2:	11 f0       	breq	.+4      	; 0xe1f8 <_Z16init_transmitterv+0x64>
		{
			return( code);
    e1f4:	89 81       	ldd	r24, Y+1	; 0x01
    e1f6:	30 c0       	rjmp	.+96     	; 0xe258 <_Z16init_transmitterv+0xc4>
		}
		
		if((code = si5351_clock_enable(TX_CLOCK_HF_0, SI5351_CLK_DISABLED)))
    e1f8:	60 e0       	ldi	r22, 0x00	; 0
    e1fa:	81 e0       	ldi	r24, 0x01	; 1
    e1fc:	0e 94 46 66 	call	0xcc8c	; 0xcc8c <si5351_clock_enable>
    e200:	89 83       	std	Y+1, r24	; 0x01
    e202:	81 e0       	ldi	r24, 0x01	; 1
    e204:	99 81       	ldd	r25, Y+1	; 0x01
    e206:	99 23       	and	r25, r25
    e208:	09 f4       	brne	.+2      	; 0xe20c <_Z16init_transmitterv+0x78>
    e20a:	80 e0       	ldi	r24, 0x00	; 0
    e20c:	88 23       	and	r24, r24
    e20e:	11 f0       	breq	.+4      	; 0xe214 <_Z16init_transmitterv+0x80>
		{
			return( code);
    e210:	89 81       	ldd	r24, Y+1	; 0x01
    e212:	22 c0       	rjmp	.+68     	; 0xe258 <_Z16init_transmitterv+0xc4>
// 		if((code = si5351_clock_enable(TX_CLOCK_VHF_FM, SI5351_CLK_DISABLED)))
// 		{
// 			return( code);
// 		}

		uint16_t pwr_mW = g_80m_power_level_mW;
    e214:	80 91 3a 40 	lds	r24, 0x403A	; 0x80403a <g_80m_power_level_mW>
    e218:	90 91 3b 40 	lds	r25, 0x403B	; 0x80403b <g_80m_power_level_mW+0x1>
    e21c:	8b 83       	std	Y+3, r24	; 0x03
    e21e:	9c 83       	std	Y+4, r25	; 0x04
		
		err = txSetFrequency((Frequency_Hz*)&g_80m_frequency, true);
    e220:	61 e0       	ldi	r22, 0x01	; 1
    e222:	86 e3       	ldi	r24, 0x36	; 54
    e224:	90 e4       	ldi	r25, 0x40	; 64
    e226:	0e 94 88 6f 	call	0xdf10	; 0xdf10 <_Z14txSetFrequencyPmb>
    e22a:	8a 83       	std	Y+2, r24	; 0x02
		if(!err)
    e22c:	9a 81       	ldd	r25, Y+2	; 0x02
    e22e:	81 e0       	ldi	r24, 0x01	; 1
    e230:	89 27       	eor	r24, r25
    e232:	88 23       	and	r24, r24
    e234:	81 f0       	breq	.+32     	; 0xe256 <_Z16init_transmitterv+0xc2>
		{
			code = txSetParameters(&pwr_mW, NULL);
    e236:	ce 01       	movw	r24, r28
    e238:	03 96       	adiw	r24, 0x03	; 3
    e23a:	60 e0       	ldi	r22, 0x00	; 0
    e23c:	70 e0       	ldi	r23, 0x00	; 0
    e23e:	0e 94 38 70 	call	0xe070	; 0xe070 <_Z15txSetParametersPjPb>
    e242:	89 83       	std	Y+1, r24	; 0x01
			if((code == ERROR_CODE_NO_ERROR) || (code == ERROR_CODE_NO_ANTENNA_PREVENTS_POWER_SETTING))
    e244:	89 81       	ldd	r24, Y+1	; 0x01
    e246:	88 23       	and	r24, r24
    e248:	19 f0       	breq	.+6      	; 0xe250 <_Z16init_transmitterv+0xbc>
    e24a:	89 81       	ldd	r24, Y+1	; 0x01
    e24c:	86 3f       	cpi	r24, 0xF6	; 246
    e24e:	19 f4       	brne	.+6      	; 0xe256 <_Z16init_transmitterv+0xc2>
			{
				g_tx_initialized = true;
    e250:	81 e0       	ldi	r24, 0x01	; 1
    e252:	80 93 c3 4a 	sts	0x4AC3, r24	; 0x804ac3 <_ZL16g_tx_initialized>
			}
		}

		return( code);
    e256:	89 81       	ldd	r24, Y+1	; 0x01
	}
    e258:	24 96       	adiw	r28, 0x04	; 4
    e25a:	cd bf       	out	0x3d, r28	; 61
    e25c:	de bf       	out	0x3e, r29	; 62
    e25e:	df 91       	pop	r29
    e260:	cf 91       	pop	r28
    e262:	08 95       	ret

0000e264 <_Z22txMilliwattsToSettingsPjPhS0_S0_>:


EC txMilliwattsToSettings(uint16_t* powerMW, uint8_t* driveLevel, uint8_t* modLevelHigh, uint8_t* modLevelLow)
{
    e264:	cf 93       	push	r28
    e266:	df 93       	push	r29
    e268:	cd b7       	in	r28, 0x3d	; 61
    e26a:	de b7       	in	r29, 0x3e	; 62
    e26c:	65 97       	sbiw	r28, 0x15	; 21
    e26e:	cd bf       	out	0x3d, r28	; 61
    e270:	de bf       	out	0x3e, r29	; 62
    e272:	8e 87       	std	Y+14, r24	; 0x0e
    e274:	9f 87       	std	Y+15, r25	; 0x0f
    e276:	68 8b       	std	Y+16, r22	; 0x10
    e278:	79 8b       	std	Y+17, r23	; 0x11
    e27a:	4a 8b       	std	Y+18, r20	; 0x12
    e27c:	5b 8b       	std	Y+19, r21	; 0x13
    e27e:	2c 8b       	std	Y+20, r18	; 0x14
    e280:	3d 8b       	std	Y+21, r19	; 0x15
	EC ec = ERROR_CODE_NO_ERROR;
    e282:	19 82       	std	Y+1, r1	; 0x01
	int16_t maxPwr;
	uint8_t index;

	if(powerMW == NULL)
    e284:	8e 85       	ldd	r24, Y+14	; 0x0e
    e286:	9f 85       	ldd	r25, Y+15	; 0x0f
    e288:	89 2b       	or	r24, r25
    e28a:	11 f4       	brne	.+4      	; 0xe290 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c>
	{
		return(ERROR_CODE_SW_LOGIC_ERROR);
    e28c:	8f ec       	ldi	r24, 0xCF	; 207
    e28e:	77 c1       	rjmp	.+750    	; 0xe57e <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x31a>
	}

	maxPwr = MAX_TX_POWER_80M_MW;
    e290:	88 e8       	ldi	r24, 0x88	; 136
    e292:	93 e1       	ldi	r25, 0x13	; 19
    e294:	8b 83       	std	Y+3, r24	; 0x03
    e296:	9c 83       	std	Y+4, r25	; 0x04

	if((int16_t)*powerMW > maxPwr)
    e298:	8e 85       	ldd	r24, Y+14	; 0x0e
    e29a:	9f 85       	ldd	r25, Y+15	; 0x0f
    e29c:	fc 01       	movw	r30, r24
    e29e:	80 81       	ld	r24, Z
    e2a0:	91 81       	ldd	r25, Z+1	; 0x01
    e2a2:	9c 01       	movw	r18, r24
    e2a4:	8b 81       	ldd	r24, Y+3	; 0x03
    e2a6:	9c 81       	ldd	r25, Y+4	; 0x04
    e2a8:	82 17       	cp	r24, r18
    e2aa:	93 07       	cpc	r25, r19
    e2ac:	14 f4       	brge	.+4      	; 0xe2b2 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x4e>
	{
		ec = ERROR_CODE_POWER_LEVEL_NOT_SUPPORTED;
    e2ae:	85 ef       	ldi	r24, 0xF5	; 245
    e2b0:	89 83       	std	Y+1, r24	; 0x01
	}

	*powerMW = CLAMP(0, (int16_t)*powerMW, maxPwr);
    e2b2:	8e 85       	ldd	r24, Y+14	; 0x0e
    e2b4:	9f 85       	ldd	r25, Y+15	; 0x0f
    e2b6:	fc 01       	movw	r30, r24
    e2b8:	80 81       	ld	r24, Z
    e2ba:	91 81       	ldd	r25, Z+1	; 0x01
    e2bc:	8d 83       	std	Y+5, r24	; 0x05
    e2be:	9e 83       	std	Y+6, r25	; 0x06
    e2c0:	1f 82       	std	Y+7, r1	; 0x07
    e2c2:	18 86       	std	Y+8, r1	; 0x08
    e2c4:	8b 81       	ldd	r24, Y+3	; 0x03
    e2c6:	9c 81       	ldd	r25, Y+4	; 0x04
    e2c8:	89 87       	std	Y+9, r24	; 0x09
    e2ca:	9a 87       	std	Y+10, r25	; 0x0a
    e2cc:	2d 81       	ldd	r18, Y+5	; 0x05
    e2ce:	3e 81       	ldd	r19, Y+6	; 0x06
    e2d0:	89 85       	ldd	r24, Y+9	; 0x09
    e2d2:	9a 85       	ldd	r25, Y+10	; 0x0a
    e2d4:	82 17       	cp	r24, r18
    e2d6:	93 07       	cpc	r25, r19
    e2d8:	6c f0       	brlt	.+26     	; 0xe2f4 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x90>
    e2da:	2d 81       	ldd	r18, Y+5	; 0x05
    e2dc:	3e 81       	ldd	r19, Y+6	; 0x06
    e2de:	8f 81       	ldd	r24, Y+7	; 0x07
    e2e0:	98 85       	ldd	r25, Y+8	; 0x08
    e2e2:	28 17       	cp	r18, r24
    e2e4:	39 07       	cpc	r19, r25
    e2e6:	1c f4       	brge	.+6      	; 0xe2ee <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x8a>
    e2e8:	8f 81       	ldd	r24, Y+7	; 0x07
    e2ea:	98 85       	ldd	r25, Y+8	; 0x08
    e2ec:	05 c0       	rjmp	.+10     	; 0xe2f8 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x94>
    e2ee:	8d 81       	ldd	r24, Y+5	; 0x05
    e2f0:	9e 81       	ldd	r25, Y+6	; 0x06
    e2f2:	02 c0       	rjmp	.+4      	; 0xe2f8 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x94>
    e2f4:	89 85       	ldd	r24, Y+9	; 0x09
    e2f6:	9a 85       	ldd	r25, Y+10	; 0x0a
    e2f8:	9c 01       	movw	r18, r24
    e2fa:	8e 85       	ldd	r24, Y+14	; 0x0e
    e2fc:	9f 85       	ldd	r25, Y+15	; 0x0f
    e2fe:	fc 01       	movw	r30, r24
    e300:	20 83       	st	Z, r18
    e302:	31 83       	std	Z+1, r19	; 0x01

	if(*powerMW < 5)
    e304:	8e 85       	ldd	r24, Y+14	; 0x0e
    e306:	9f 85       	ldd	r25, Y+15	; 0x0f
    e308:	fc 01       	movw	r30, r24
    e30a:	80 81       	ld	r24, Z
    e30c:	91 81       	ldd	r25, Z+1	; 0x01
    e30e:	05 97       	sbiw	r24, 0x05	; 5
    e310:	38 f4       	brcc	.+14     	; 0xe320 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0xbc>
	{
		index = 0;
    e312:	1a 82       	std	Y+2, r1	; 0x02
		*powerMW = 0;
    e314:	8e 85       	ldd	r24, Y+14	; 0x0e
    e316:	9f 85       	ldd	r25, Y+15	; 0x0f
    e318:	fc 01       	movw	r30, r24
    e31a:	10 82       	st	Z, r1
    e31c:	11 82       	std	Z+1, r1	; 0x01
    e31e:	04 c1       	rjmp	.+520    	; 0xe528 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 50)
    e320:	8e 85       	ldd	r24, Y+14	; 0x0e
    e322:	9f 85       	ldd	r25, Y+15	; 0x0f
    e324:	fc 01       	movw	r30, r24
    e326:	80 81       	ld	r24, Z
    e328:	91 81       	ldd	r25, Z+1	; 0x01
    e32a:	c2 97       	sbiw	r24, 0x32	; 50
    e32c:	50 f4       	brcc	.+20     	; 0xe342 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0xde>
	{
		index = 1;
    e32e:	81 e0       	ldi	r24, 0x01	; 1
    e330:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 10;
    e332:	8e 85       	ldd	r24, Y+14	; 0x0e
    e334:	9f 85       	ldd	r25, Y+15	; 0x0f
    e336:	2a e0       	ldi	r18, 0x0A	; 10
    e338:	30 e0       	ldi	r19, 0x00	; 0
    e33a:	fc 01       	movw	r30, r24
    e33c:	20 83       	st	Z, r18
    e33e:	31 83       	std	Z+1, r19	; 0x01
    e340:	f3 c0       	rjmp	.+486    	; 0xe528 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 150)
    e342:	8e 85       	ldd	r24, Y+14	; 0x0e
    e344:	9f 85       	ldd	r25, Y+15	; 0x0f
    e346:	fc 01       	movw	r30, r24
    e348:	80 81       	ld	r24, Z
    e34a:	91 81       	ldd	r25, Z+1	; 0x01
    e34c:	86 39       	cpi	r24, 0x96	; 150
    e34e:	91 05       	cpc	r25, r1
    e350:	50 f4       	brcc	.+20     	; 0xe366 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x102>
	{
		index = 2;
    e352:	82 e0       	ldi	r24, 0x02	; 2
    e354:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 100;
    e356:	8e 85       	ldd	r24, Y+14	; 0x0e
    e358:	9f 85       	ldd	r25, Y+15	; 0x0f
    e35a:	24 e6       	ldi	r18, 0x64	; 100
    e35c:	30 e0       	ldi	r19, 0x00	; 0
    e35e:	fc 01       	movw	r30, r24
    e360:	20 83       	st	Z, r18
    e362:	31 83       	std	Z+1, r19	; 0x01
    e364:	e1 c0       	rjmp	.+450    	; 0xe528 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 250)
    e366:	8e 85       	ldd	r24, Y+14	; 0x0e
    e368:	9f 85       	ldd	r25, Y+15	; 0x0f
    e36a:	fc 01       	movw	r30, r24
    e36c:	80 81       	ld	r24, Z
    e36e:	91 81       	ldd	r25, Z+1	; 0x01
    e370:	8a 3f       	cpi	r24, 0xFA	; 250
    e372:	91 05       	cpc	r25, r1
    e374:	50 f4       	brcc	.+20     	; 0xe38a <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x126>
	{
		index = 3;
    e376:	83 e0       	ldi	r24, 0x03	; 3
    e378:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 200;
    e37a:	8e 85       	ldd	r24, Y+14	; 0x0e
    e37c:	9f 85       	ldd	r25, Y+15	; 0x0f
    e37e:	28 ec       	ldi	r18, 0xC8	; 200
    e380:	30 e0       	ldi	r19, 0x00	; 0
    e382:	fc 01       	movw	r30, r24
    e384:	20 83       	st	Z, r18
    e386:	31 83       	std	Z+1, r19	; 0x01
    e388:	cf c0       	rjmp	.+414    	; 0xe528 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 350)
    e38a:	8e 85       	ldd	r24, Y+14	; 0x0e
    e38c:	9f 85       	ldd	r25, Y+15	; 0x0f
    e38e:	fc 01       	movw	r30, r24
    e390:	80 81       	ld	r24, Z
    e392:	91 81       	ldd	r25, Z+1	; 0x01
    e394:	8e 35       	cpi	r24, 0x5E	; 94
    e396:	91 40       	sbci	r25, 0x01	; 1
    e398:	50 f4       	brcc	.+20     	; 0xe3ae <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x14a>
	{
		index = 4;
    e39a:	84 e0       	ldi	r24, 0x04	; 4
    e39c:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 300;
    e39e:	8e 85       	ldd	r24, Y+14	; 0x0e
    e3a0:	9f 85       	ldd	r25, Y+15	; 0x0f
    e3a2:	2c e2       	ldi	r18, 0x2C	; 44
    e3a4:	31 e0       	ldi	r19, 0x01	; 1
    e3a6:	fc 01       	movw	r30, r24
    e3a8:	20 83       	st	Z, r18
    e3aa:	31 83       	std	Z+1, r19	; 0x01
    e3ac:	bd c0       	rjmp	.+378    	; 0xe528 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 450)
    e3ae:	8e 85       	ldd	r24, Y+14	; 0x0e
    e3b0:	9f 85       	ldd	r25, Y+15	; 0x0f
    e3b2:	fc 01       	movw	r30, r24
    e3b4:	80 81       	ld	r24, Z
    e3b6:	91 81       	ldd	r25, Z+1	; 0x01
    e3b8:	82 3c       	cpi	r24, 0xC2	; 194
    e3ba:	91 40       	sbci	r25, 0x01	; 1
    e3bc:	50 f4       	brcc	.+20     	; 0xe3d2 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x16e>
	{
		index = 5;
    e3be:	85 e0       	ldi	r24, 0x05	; 5
    e3c0:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 400;
    e3c2:	8e 85       	ldd	r24, Y+14	; 0x0e
    e3c4:	9f 85       	ldd	r25, Y+15	; 0x0f
    e3c6:	20 e9       	ldi	r18, 0x90	; 144
    e3c8:	31 e0       	ldi	r19, 0x01	; 1
    e3ca:	fc 01       	movw	r30, r24
    e3cc:	20 83       	st	Z, r18
    e3ce:	31 83       	std	Z+1, r19	; 0x01
    e3d0:	ab c0       	rjmp	.+342    	; 0xe528 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 550)
    e3d2:	8e 85       	ldd	r24, Y+14	; 0x0e
    e3d4:	9f 85       	ldd	r25, Y+15	; 0x0f
    e3d6:	fc 01       	movw	r30, r24
    e3d8:	80 81       	ld	r24, Z
    e3da:	91 81       	ldd	r25, Z+1	; 0x01
    e3dc:	86 32       	cpi	r24, 0x26	; 38
    e3de:	92 40       	sbci	r25, 0x02	; 2
    e3e0:	50 f4       	brcc	.+20     	; 0xe3f6 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x192>
	{
		index = 6;
    e3e2:	86 e0       	ldi	r24, 0x06	; 6
    e3e4:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 500;
    e3e6:	8e 85       	ldd	r24, Y+14	; 0x0e
    e3e8:	9f 85       	ldd	r25, Y+15	; 0x0f
    e3ea:	24 ef       	ldi	r18, 0xF4	; 244
    e3ec:	31 e0       	ldi	r19, 0x01	; 1
    e3ee:	fc 01       	movw	r30, r24
    e3f0:	20 83       	st	Z, r18
    e3f2:	31 83       	std	Z+1, r19	; 0x01
    e3f4:	99 c0       	rjmp	.+306    	; 0xe528 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 650)
    e3f6:	8e 85       	ldd	r24, Y+14	; 0x0e
    e3f8:	9f 85       	ldd	r25, Y+15	; 0x0f
    e3fa:	fc 01       	movw	r30, r24
    e3fc:	80 81       	ld	r24, Z
    e3fe:	91 81       	ldd	r25, Z+1	; 0x01
    e400:	8a 38       	cpi	r24, 0x8A	; 138
    e402:	92 40       	sbci	r25, 0x02	; 2
    e404:	50 f4       	brcc	.+20     	; 0xe41a <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x1b6>
	{
		index = 7;
    e406:	87 e0       	ldi	r24, 0x07	; 7
    e408:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 600;
    e40a:	8e 85       	ldd	r24, Y+14	; 0x0e
    e40c:	9f 85       	ldd	r25, Y+15	; 0x0f
    e40e:	28 e5       	ldi	r18, 0x58	; 88
    e410:	32 e0       	ldi	r19, 0x02	; 2
    e412:	fc 01       	movw	r30, r24
    e414:	20 83       	st	Z, r18
    e416:	31 83       	std	Z+1, r19	; 0x01
    e418:	87 c0       	rjmp	.+270    	; 0xe528 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 900)
    e41a:	8e 85       	ldd	r24, Y+14	; 0x0e
    e41c:	9f 85       	ldd	r25, Y+15	; 0x0f
    e41e:	fc 01       	movw	r30, r24
    e420:	80 81       	ld	r24, Z
    e422:	91 81       	ldd	r25, Z+1	; 0x01
    e424:	84 38       	cpi	r24, 0x84	; 132
    e426:	93 40       	sbci	r25, 0x03	; 3
    e428:	50 f4       	brcc	.+20     	; 0xe43e <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x1da>
	{
		index = 8;
    e42a:	88 e0       	ldi	r24, 0x08	; 8
    e42c:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 800;
    e42e:	8e 85       	ldd	r24, Y+14	; 0x0e
    e430:	9f 85       	ldd	r25, Y+15	; 0x0f
    e432:	20 e2       	ldi	r18, 0x20	; 32
    e434:	33 e0       	ldi	r19, 0x03	; 3
    e436:	fc 01       	movw	r30, r24
    e438:	20 83       	st	Z, r18
    e43a:	31 83       	std	Z+1, r19	; 0x01
    e43c:	75 c0       	rjmp	.+234    	; 0xe528 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 1250)
    e43e:	8e 85       	ldd	r24, Y+14	; 0x0e
    e440:	9f 85       	ldd	r25, Y+15	; 0x0f
    e442:	fc 01       	movw	r30, r24
    e444:	80 81       	ld	r24, Z
    e446:	91 81       	ldd	r25, Z+1	; 0x01
    e448:	82 3e       	cpi	r24, 0xE2	; 226
    e44a:	94 40       	sbci	r25, 0x04	; 4
    e44c:	50 f4       	brcc	.+20     	; 0xe462 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x1fe>
	{
		index = 9;
    e44e:	89 e0       	ldi	r24, 0x09	; 9
    e450:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 1000;
    e452:	8e 85       	ldd	r24, Y+14	; 0x0e
    e454:	9f 85       	ldd	r25, Y+15	; 0x0f
    e456:	28 ee       	ldi	r18, 0xE8	; 232
    e458:	33 e0       	ldi	r19, 0x03	; 3
    e45a:	fc 01       	movw	r30, r24
    e45c:	20 83       	st	Z, r18
    e45e:	31 83       	std	Z+1, r19	; 0x01
    e460:	63 c0       	rjmp	.+198    	; 0xe528 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 1750)
    e462:	8e 85       	ldd	r24, Y+14	; 0x0e
    e464:	9f 85       	ldd	r25, Y+15	; 0x0f
    e466:	fc 01       	movw	r30, r24
    e468:	80 81       	ld	r24, Z
    e46a:	91 81       	ldd	r25, Z+1	; 0x01
    e46c:	86 3d       	cpi	r24, 0xD6	; 214
    e46e:	96 40       	sbci	r25, 0x06	; 6
    e470:	50 f4       	brcc	.+20     	; 0xe486 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x222>
	{
		index = 10;
    e472:	8a e0       	ldi	r24, 0x0A	; 10
    e474:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 1500;
    e476:	8e 85       	ldd	r24, Y+14	; 0x0e
    e478:	9f 85       	ldd	r25, Y+15	; 0x0f
    e47a:	2c ed       	ldi	r18, 0xDC	; 220
    e47c:	35 e0       	ldi	r19, 0x05	; 5
    e47e:	fc 01       	movw	r30, r24
    e480:	20 83       	st	Z, r18
    e482:	31 83       	std	Z+1, r19	; 0x01
    e484:	51 c0       	rjmp	.+162    	; 0xe528 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 2250)
    e486:	8e 85       	ldd	r24, Y+14	; 0x0e
    e488:	9f 85       	ldd	r25, Y+15	; 0x0f
    e48a:	fc 01       	movw	r30, r24
    e48c:	80 81       	ld	r24, Z
    e48e:	91 81       	ldd	r25, Z+1	; 0x01
    e490:	8a 3c       	cpi	r24, 0xCA	; 202
    e492:	98 40       	sbci	r25, 0x08	; 8
    e494:	50 f4       	brcc	.+20     	; 0xe4aa <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x246>
	{
		index = 11;
    e496:	8b e0       	ldi	r24, 0x0B	; 11
    e498:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 2000;
    e49a:	8e 85       	ldd	r24, Y+14	; 0x0e
    e49c:	9f 85       	ldd	r25, Y+15	; 0x0f
    e49e:	20 ed       	ldi	r18, 0xD0	; 208
    e4a0:	37 e0       	ldi	r19, 0x07	; 7
    e4a2:	fc 01       	movw	r30, r24
    e4a4:	20 83       	st	Z, r18
    e4a6:	31 83       	std	Z+1, r19	; 0x01
    e4a8:	3f c0       	rjmp	.+126    	; 0xe528 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 2750)
    e4aa:	8e 85       	ldd	r24, Y+14	; 0x0e
    e4ac:	9f 85       	ldd	r25, Y+15	; 0x0f
    e4ae:	fc 01       	movw	r30, r24
    e4b0:	80 81       	ld	r24, Z
    e4b2:	91 81       	ldd	r25, Z+1	; 0x01
    e4b4:	8e 3b       	cpi	r24, 0xBE	; 190
    e4b6:	9a 40       	sbci	r25, 0x0A	; 10
    e4b8:	50 f4       	brcc	.+20     	; 0xe4ce <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x26a>
	{
		index = 12;
    e4ba:	8c e0       	ldi	r24, 0x0C	; 12
    e4bc:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 2500;
    e4be:	8e 85       	ldd	r24, Y+14	; 0x0e
    e4c0:	9f 85       	ldd	r25, Y+15	; 0x0f
    e4c2:	24 ec       	ldi	r18, 0xC4	; 196
    e4c4:	39 e0       	ldi	r19, 0x09	; 9
    e4c6:	fc 01       	movw	r30, r24
    e4c8:	20 83       	st	Z, r18
    e4ca:	31 83       	std	Z+1, r19	; 0x01
    e4cc:	2d c0       	rjmp	.+90     	; 0xe528 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 3500)
    e4ce:	8e 85       	ldd	r24, Y+14	; 0x0e
    e4d0:	9f 85       	ldd	r25, Y+15	; 0x0f
    e4d2:	fc 01       	movw	r30, r24
    e4d4:	80 81       	ld	r24, Z
    e4d6:	91 81       	ldd	r25, Z+1	; 0x01
    e4d8:	8c 3a       	cpi	r24, 0xAC	; 172
    e4da:	9d 40       	sbci	r25, 0x0D	; 13
    e4dc:	50 f4       	brcc	.+20     	; 0xe4f2 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x28e>
	{
		index = 13;
    e4de:	8d e0       	ldi	r24, 0x0D	; 13
    e4e0:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 3000;
    e4e2:	8e 85       	ldd	r24, Y+14	; 0x0e
    e4e4:	9f 85       	ldd	r25, Y+15	; 0x0f
    e4e6:	28 eb       	ldi	r18, 0xB8	; 184
    e4e8:	3b e0       	ldi	r19, 0x0B	; 11
    e4ea:	fc 01       	movw	r30, r24
    e4ec:	20 83       	st	Z, r18
    e4ee:	31 83       	std	Z+1, r19	; 0x01
    e4f0:	1b c0       	rjmp	.+54     	; 0xe528 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 4500)
    e4f2:	8e 85       	ldd	r24, Y+14	; 0x0e
    e4f4:	9f 85       	ldd	r25, Y+15	; 0x0f
    e4f6:	fc 01       	movw	r30, r24
    e4f8:	80 81       	ld	r24, Z
    e4fa:	91 81       	ldd	r25, Z+1	; 0x01
    e4fc:	84 39       	cpi	r24, 0x94	; 148
    e4fe:	91 41       	sbci	r25, 0x11	; 17
    e500:	50 f4       	brcc	.+20     	; 0xe516 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2b2>
	{
		index = 14;
    e502:	8e e0       	ldi	r24, 0x0E	; 14
    e504:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 4000;
    e506:	8e 85       	ldd	r24, Y+14	; 0x0e
    e508:	9f 85       	ldd	r25, Y+15	; 0x0f
    e50a:	20 ea       	ldi	r18, 0xA0	; 160
    e50c:	3f e0       	ldi	r19, 0x0F	; 15
    e50e:	fc 01       	movw	r30, r24
    e510:	20 83       	st	Z, r18
    e512:	31 83       	std	Z+1, r19	; 0x01
    e514:	09 c0       	rjmp	.+18     	; 0xe528 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else
	{
		index = 15;
    e516:	8f e0       	ldi	r24, 0x0F	; 15
    e518:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 5000;
    e51a:	8e 85       	ldd	r24, Y+14	; 0x0e
    e51c:	9f 85       	ldd	r25, Y+15	; 0x0f
    e51e:	28 e8       	ldi	r18, 0x88	; 136
    e520:	33 e1       	ldi	r19, 0x13	; 19
    e522:	fc 01       	movw	r30, r24
    e524:	20 83       	st	Z, r18
    e526:	31 83       	std	Z+1, r19	; 0x01
	}

	*driveLevel = g_80m_power_table[index];
    e528:	8a 81       	ldd	r24, Y+2	; 0x02
    e52a:	88 2f       	mov	r24, r24
    e52c:	90 e0       	ldi	r25, 0x00	; 0
    e52e:	8f 5b       	subi	r24, 0xBF	; 191
    e530:	9f 4b       	sbci	r25, 0xBF	; 191
    e532:	fc 01       	movw	r30, r24
    e534:	20 81       	ld	r18, Z
    e536:	88 89       	ldd	r24, Y+16	; 0x10
    e538:	99 89       	ldd	r25, Y+17	; 0x11
    e53a:	fc 01       	movw	r30, r24
    e53c:	20 83       	st	Z, r18
	*modLevelHigh = 0;
    e53e:	8a 89       	ldd	r24, Y+18	; 0x12
    e540:	9b 89       	ldd	r25, Y+19	; 0x13
    e542:	fc 01       	movw	r30, r24
    e544:	10 82       	st	Z, r1
	*modLevelLow = 0;
    e546:	8c 89       	ldd	r24, Y+20	; 0x14
    e548:	9d 89       	ldd	r25, Y+21	; 0x15
    e54a:	fc 01       	movw	r30, r24
    e54c:	10 82       	st	Z, r1
	*driveLevel = MIN(*driveLevel, MAX_80M_PWR_SETTING);
    e54e:	88 89       	ldd	r24, Y+16	; 0x10
    e550:	99 89       	ldd	r25, Y+17	; 0x11
    e552:	fc 01       	movw	r30, r24
    e554:	80 81       	ld	r24, Z
    e556:	8b 87       	std	Y+11, r24	; 0x0b
    e558:	8f ef       	ldi	r24, 0xFF	; 255
    e55a:	90 e0       	ldi	r25, 0x00	; 0
    e55c:	8c 87       	std	Y+12, r24	; 0x0c
    e55e:	9d 87       	std	Y+13, r25	; 0x0d
    e560:	8b 85       	ldd	r24, Y+11	; 0x0b
    e562:	88 2f       	mov	r24, r24
    e564:	90 e0       	ldi	r25, 0x00	; 0
    e566:	2c 85       	ldd	r18, Y+12	; 0x0c
    e568:	3d 85       	ldd	r19, Y+13	; 0x0d
    e56a:	28 17       	cp	r18, r24
    e56c:	39 07       	cpc	r19, r25
    e56e:	0c f4       	brge	.+2      	; 0xe572 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x30e>
    e570:	c9 01       	movw	r24, r18
    e572:	28 2f       	mov	r18, r24
    e574:	88 89       	ldd	r24, Y+16	; 0x10
    e576:	99 89       	ldd	r25, Y+17	; 0x11
    e578:	fc 01       	movw	r30, r24
    e57a:	20 83       	st	Z, r18

	return(ec);
    e57c:	89 81       	ldd	r24, Y+1	; 0x01
    e57e:	65 96       	adiw	r28, 0x15	; 21
    e580:	cd bf       	out	0x3d, r28	; 61
    e582:	de bf       	out	0x3e, r29	; 62
    e584:	df 91       	pop	r29
    e586:	cf 91       	pop	r28
    e588:	08 95       	ret

0000e58a <USART0_get_data>:
 * \return Nothing
 */
void USART4_enable_rx()
{
	USART4.CTRLB |= USART_RXEN_bm;
}
    e58a:	cf 93       	push	r28
    e58c:	df 93       	push	r29
    e58e:	cd b7       	in	r28, 0x3d	; 61
    e590:	de b7       	in	r29, 0x3e	; 62
    e592:	80 e0       	ldi	r24, 0x00	; 0
    e594:	98 e0       	ldi	r25, 0x08	; 8
    e596:	fc 01       	movw	r30, r24
    e598:	80 81       	ld	r24, Z
    e59a:	df 91       	pop	r29
    e59c:	cf 91       	pop	r28
    e59e:	08 95       	ret

0000e5a0 <USART1_init>:
    e5a0:	0f 93       	push	r16
    e5a2:	1f 93       	push	r17
    e5a4:	cf 93       	push	r28
    e5a6:	df 93       	push	r29
    e5a8:	00 d0       	rcall	.+0      	; 0xe5aa <USART1_init+0xa>
    e5aa:	00 d0       	rcall	.+0      	; 0xe5ac <USART1_init+0xc>
    e5ac:	cd b7       	in	r28, 0x3d	; 61
    e5ae:	de b7       	in	r29, 0x3e	; 62
    e5b0:	69 83       	std	Y+1, r22	; 0x01
    e5b2:	7a 83       	std	Y+2, r23	; 0x02
    e5b4:	8b 83       	std	Y+3, r24	; 0x03
    e5b6:	9c 83       	std	Y+4, r25	; 0x04
    e5b8:	f8 94       	cli
    e5ba:	00 e2       	ldi	r16, 0x20	; 32
    e5bc:	18 e0       	ldi	r17, 0x08	; 8
    e5be:	69 81       	ldd	r22, Y+1	; 0x01
    e5c0:	7a 81       	ldd	r23, Y+2	; 0x02
    e5c2:	8b 81       	ldd	r24, Y+3	; 0x03
    e5c4:	9c 81       	ldd	r25, Y+4	; 0x04
    e5c6:	0e 94 c5 78 	call	0xf18a	; 0xf18a <__floatunsisf>
    e5ca:	dc 01       	movw	r26, r24
    e5cc:	cb 01       	movw	r24, r22
    e5ce:	20 e0       	ldi	r18, 0x00	; 0
    e5d0:	30 e0       	ldi	r19, 0x00	; 0
    e5d2:	40 e8       	ldi	r20, 0x80	; 128
    e5d4:	51 e4       	ldi	r21, 0x41	; 65
    e5d6:	bc 01       	movw	r22, r24
    e5d8:	cd 01       	movw	r24, r26
    e5da:	0e 94 bd 79 	call	0xf37a	; 0xf37a <__mulsf3>
    e5de:	dc 01       	movw	r26, r24
    e5e0:	cb 01       	movw	r24, r22
    e5e2:	9c 01       	movw	r18, r24
    e5e4:	ad 01       	movw	r20, r26
    e5e6:	60 e0       	ldi	r22, 0x00	; 0
    e5e8:	7b e1       	ldi	r23, 0x1B	; 27
    e5ea:	87 eb       	ldi	r24, 0xB7	; 183
    e5ec:	9e e4       	ldi	r25, 0x4E	; 78
    e5ee:	0e 94 1d 78 	call	0xf03a	; 0xf03a <__divsf3>
    e5f2:	dc 01       	movw	r26, r24
    e5f4:	cb 01       	movw	r24, r22
    e5f6:	20 e0       	ldi	r18, 0x00	; 0
    e5f8:	30 e0       	ldi	r19, 0x00	; 0
    e5fa:	40 e0       	ldi	r20, 0x00	; 0
    e5fc:	5f e3       	ldi	r21, 0x3F	; 63
    e5fe:	bc 01       	movw	r22, r24
    e600:	cd 01       	movw	r24, r26
    e602:	0e 94 95 77 	call	0xef2a	; 0xef2a <__addsf3>
    e606:	dc 01       	movw	r26, r24
    e608:	cb 01       	movw	r24, r22
    e60a:	bc 01       	movw	r22, r24
    e60c:	cd 01       	movw	r24, r26
    e60e:	0e 94 96 78 	call	0xf12c	; 0xf12c <__fixunssfsi>
    e612:	dc 01       	movw	r26, r24
    e614:	cb 01       	movw	r24, r22
    e616:	f8 01       	movw	r30, r16
    e618:	80 87       	std	Z+8, r24	; 0x08
    e61a:	91 87       	std	Z+9, r25	; 0x09
    e61c:	80 e2       	ldi	r24, 0x20	; 32
    e61e:	98 e0       	ldi	r25, 0x08	; 8
    e620:	20 e8       	ldi	r18, 0x80	; 128
    e622:	fc 01       	movw	r30, r24
    e624:	25 83       	std	Z+5, r18	; 0x05
    e626:	80 e2       	ldi	r24, 0x20	; 32
    e628:	98 e0       	ldi	r25, 0x08	; 8
    e62a:	23 e0       	ldi	r18, 0x03	; 3
    e62c:	fc 01       	movw	r30, r24
    e62e:	27 83       	std	Z+7, r18	; 0x07
    e630:	80 e2       	ldi	r24, 0x20	; 32
    e632:	98 e0       	ldi	r25, 0x08	; 8
    e634:	20 ec       	ldi	r18, 0xC0	; 192
    e636:	fc 01       	movw	r30, r24
    e638:	26 83       	std	Z+6, r18	; 0x06
    e63a:	78 94       	sei
    e63c:	80 e0       	ldi	r24, 0x00	; 0
    e63e:	24 96       	adiw	r28, 0x04	; 4
    e640:	cd bf       	out	0x3d, r28	; 61
    e642:	de bf       	out	0x3e, r29	; 62
    e644:	df 91       	pop	r29
    e646:	cf 91       	pop	r28
    e648:	1f 91       	pop	r17
    e64a:	0f 91       	pop	r16
    e64c:	08 95       	ret

0000e64e <USART1_enable_tx>:
    e64e:	cf 93       	push	r28
    e650:	df 93       	push	r29
    e652:	cd b7       	in	r28, 0x3d	; 61
    e654:	de b7       	in	r29, 0x3e	; 62
    e656:	80 e2       	ldi	r24, 0x20	; 32
    e658:	98 e0       	ldi	r25, 0x08	; 8
    e65a:	20 e2       	ldi	r18, 0x20	; 32
    e65c:	38 e0       	ldi	r19, 0x08	; 8
    e65e:	f9 01       	movw	r30, r18
    e660:	26 81       	ldd	r18, Z+6	; 0x06
    e662:	20 64       	ori	r18, 0x40	; 64
    e664:	fc 01       	movw	r30, r24
    e666:	26 83       	std	Z+6, r18	; 0x06
    e668:	80 e2       	ldi	r24, 0x20	; 32
    e66a:	98 e0       	ldi	r25, 0x08	; 8
    e66c:	20 e2       	ldi	r18, 0x20	; 32
    e66e:	38 e0       	ldi	r19, 0x08	; 8
    e670:	f9 01       	movw	r30, r18
    e672:	25 81       	ldd	r18, Z+5	; 0x05
    e674:	20 62       	ori	r18, 0x20	; 32
    e676:	fc 01       	movw	r30, r24
    e678:	25 83       	std	Z+5, r18	; 0x05
    e67a:	00 00       	nop
    e67c:	df 91       	pop	r29
    e67e:	cf 91       	pop	r28
    e680:	08 95       	ret

0000e682 <USART1_disable>:
    e682:	cf 93       	push	r28
    e684:	df 93       	push	r29
    e686:	cd b7       	in	r28, 0x3d	; 61
    e688:	de b7       	in	r29, 0x3e	; 62
    e68a:	80 e2       	ldi	r24, 0x20	; 32
    e68c:	98 e0       	ldi	r25, 0x08	; 8
    e68e:	20 e2       	ldi	r18, 0x20	; 32
    e690:	38 e0       	ldi	r19, 0x08	; 8
    e692:	f9 01       	movw	r30, r18
    e694:	26 81       	ldd	r18, Z+6	; 0x06
    e696:	2f 73       	andi	r18, 0x3F	; 63
    e698:	fc 01       	movw	r30, r24
    e69a:	26 83       	std	Z+6, r18	; 0x06
    e69c:	00 00       	nop
    e69e:	df 91       	pop	r29
    e6a0:	cf 91       	pop	r28
    e6a2:	08 95       	ret

0000e6a4 <USART1_get_data>:
    e6a4:	cf 93       	push	r28
    e6a6:	df 93       	push	r29
    e6a8:	cd b7       	in	r28, 0x3d	; 61
    e6aa:	de b7       	in	r29, 0x3e	; 62
    e6ac:	80 e2       	ldi	r24, 0x20	; 32
    e6ae:	98 e0       	ldi	r25, 0x08	; 8
    e6b0:	fc 01       	movw	r30, r24
    e6b2:	80 81       	ld	r24, Z
    e6b4:	df 91       	pop	r29
    e6b6:	cf 91       	pop	r28
    e6b8:	08 95       	ret

0000e6ba <USART4_init>:
    e6ba:	0f 93       	push	r16
    e6bc:	1f 93       	push	r17
    e6be:	cf 93       	push	r28
    e6c0:	df 93       	push	r29
    e6c2:	00 d0       	rcall	.+0      	; 0xe6c4 <USART4_init+0xa>
    e6c4:	00 d0       	rcall	.+0      	; 0xe6c6 <USART4_init+0xc>
    e6c6:	cd b7       	in	r28, 0x3d	; 61
    e6c8:	de b7       	in	r29, 0x3e	; 62
    e6ca:	69 83       	std	Y+1, r22	; 0x01
    e6cc:	7a 83       	std	Y+2, r23	; 0x02
    e6ce:	8b 83       	std	Y+3, r24	; 0x03
    e6d0:	9c 83       	std	Y+4, r25	; 0x04
    e6d2:	00 e8       	ldi	r16, 0x80	; 128
    e6d4:	18 e0       	ldi	r17, 0x08	; 8
    e6d6:	69 81       	ldd	r22, Y+1	; 0x01
    e6d8:	7a 81       	ldd	r23, Y+2	; 0x02
    e6da:	8b 81       	ldd	r24, Y+3	; 0x03
    e6dc:	9c 81       	ldd	r25, Y+4	; 0x04
    e6de:	0e 94 c5 78 	call	0xf18a	; 0xf18a <__floatunsisf>
    e6e2:	dc 01       	movw	r26, r24
    e6e4:	cb 01       	movw	r24, r22
    e6e6:	20 e0       	ldi	r18, 0x00	; 0
    e6e8:	30 e0       	ldi	r19, 0x00	; 0
    e6ea:	40 e8       	ldi	r20, 0x80	; 128
    e6ec:	51 e4       	ldi	r21, 0x41	; 65
    e6ee:	bc 01       	movw	r22, r24
    e6f0:	cd 01       	movw	r24, r26
    e6f2:	0e 94 bd 79 	call	0xf37a	; 0xf37a <__mulsf3>
    e6f6:	dc 01       	movw	r26, r24
    e6f8:	cb 01       	movw	r24, r22
    e6fa:	9c 01       	movw	r18, r24
    e6fc:	ad 01       	movw	r20, r26
    e6fe:	60 e0       	ldi	r22, 0x00	; 0
    e700:	7b e1       	ldi	r23, 0x1B	; 27
    e702:	87 eb       	ldi	r24, 0xB7	; 183
    e704:	9e e4       	ldi	r25, 0x4E	; 78
    e706:	0e 94 1d 78 	call	0xf03a	; 0xf03a <__divsf3>
    e70a:	dc 01       	movw	r26, r24
    e70c:	cb 01       	movw	r24, r22
    e70e:	20 e0       	ldi	r18, 0x00	; 0
    e710:	30 e0       	ldi	r19, 0x00	; 0
    e712:	40 e0       	ldi	r20, 0x00	; 0
    e714:	5f e3       	ldi	r21, 0x3F	; 63
    e716:	bc 01       	movw	r22, r24
    e718:	cd 01       	movw	r24, r26
    e71a:	0e 94 95 77 	call	0xef2a	; 0xef2a <__addsf3>
    e71e:	dc 01       	movw	r26, r24
    e720:	cb 01       	movw	r24, r22
    e722:	bc 01       	movw	r22, r24
    e724:	cd 01       	movw	r24, r26
    e726:	0e 94 96 78 	call	0xf12c	; 0xf12c <__fixunssfsi>
    e72a:	dc 01       	movw	r26, r24
    e72c:	cb 01       	movw	r24, r22
    e72e:	f8 01       	movw	r30, r16
    e730:	80 87       	std	Z+8, r24	; 0x08
    e732:	91 87       	std	Z+9, r25	; 0x09
    e734:	80 e8       	ldi	r24, 0x80	; 128
    e736:	98 e0       	ldi	r25, 0x08	; 8
    e738:	20 e8       	ldi	r18, 0x80	; 128
    e73a:	fc 01       	movw	r30, r24
    e73c:	25 83       	std	Z+5, r18	; 0x05
    e73e:	80 e8       	ldi	r24, 0x80	; 128
    e740:	98 e0       	ldi	r25, 0x08	; 8
    e742:	20 ec       	ldi	r18, 0xC0	; 192
    e744:	fc 01       	movw	r30, r24
    e746:	26 83       	std	Z+6, r18	; 0x06
    e748:	80 e0       	ldi	r24, 0x00	; 0
    e74a:	24 96       	adiw	r28, 0x04	; 4
    e74c:	cd bf       	out	0x3d, r28	; 61
    e74e:	de bf       	out	0x3e, r29	; 62
    e750:	df 91       	pop	r29
    e752:	cf 91       	pop	r28
    e754:	1f 91       	pop	r17
    e756:	0f 91       	pop	r16
    e758:	08 95       	ret

0000e75a <USART4_enable_tx>:
 * 2. Enables the USART module by setting the TX enable-bit in the USART control register
 *
 * \return Nothing
 */
void USART4_enable_tx()
{
    e75a:	cf 93       	push	r28
    e75c:	df 93       	push	r29
    e75e:	cd b7       	in	r28, 0x3d	; 61
    e760:	de b7       	in	r29, 0x3e	; 62
	USART4.CTRLB |= USART_TXEN_bm;
    e762:	80 e8       	ldi	r24, 0x80	; 128
    e764:	98 e0       	ldi	r25, 0x08	; 8
    e766:	20 e8       	ldi	r18, 0x80	; 128
    e768:	38 e0       	ldi	r19, 0x08	; 8
    e76a:	f9 01       	movw	r30, r18
    e76c:	26 81       	ldd	r18, Z+6	; 0x06
    e76e:	20 64       	ori	r18, 0x40	; 64
    e770:	fc 01       	movw	r30, r24
    e772:	26 83       	std	Z+6, r18	; 0x06
	USART4.CTRLA |= 1 << USART_DREIE_bp; /* Transmit Data Ready Interrupt Enable: enable */
    e774:	80 e8       	ldi	r24, 0x80	; 128
    e776:	98 e0       	ldi	r25, 0x08	; 8
    e778:	20 e8       	ldi	r18, 0x80	; 128
    e77a:	38 e0       	ldi	r19, 0x08	; 8
    e77c:	f9 01       	movw	r30, r18
    e77e:	25 81       	ldd	r18, Z+5	; 0x05
    e780:	20 62       	ori	r18, 0x20	; 32
    e782:	fc 01       	movw	r30, r24
    e784:	25 83       	std	Z+5, r18	; 0x05
//	USART4.STATUS |= 1 << USART_TXEN_bp; /* Clear any existing flag setting */
}
    e786:	00 00       	nop
    e788:	df 91       	pop	r29
    e78a:	cf 91       	pop	r28
    e78c:	08 95       	ret

0000e78e <USART4_disable>:
 * 2. If supported by the clock system, disables the clock to the USART
 *
 * \return Nothing
 */
void USART4_disable()
{
    e78e:	cf 93       	push	r28
    e790:	df 93       	push	r29
    e792:	cd b7       	in	r28, 0x3d	; 61
    e794:	de b7       	in	r29, 0x3e	; 62
	USART4.CTRLB &= ~(USART_RXEN_bm | USART_TXEN_bm);
    e796:	80 e8       	ldi	r24, 0x80	; 128
    e798:	98 e0       	ldi	r25, 0x08	; 8
    e79a:	20 e8       	ldi	r18, 0x80	; 128
    e79c:	38 e0       	ldi	r19, 0x08	; 8
    e79e:	f9 01       	movw	r30, r18
    e7a0:	26 81       	ldd	r18, Z+6	; 0x06
    e7a2:	2f 73       	andi	r18, 0x3F	; 63
    e7a4:	fc 01       	movw	r30, r24
    e7a6:	26 83       	std	Z+6, r18	; 0x06
}
    e7a8:	00 00       	nop
    e7aa:	df 91       	pop	r29
    e7ac:	cf 91       	pop	r28
    e7ae:	08 95       	ret

0000e7b0 <USART4_get_data>:
 * \brief Get recieved data from USART4
 *
 * \return Data register from USART4 module
 */
uint8_t USART4_get_data()
{
    e7b0:	cf 93       	push	r28
    e7b2:	df 93       	push	r29
    e7b4:	cd b7       	in	r28, 0x3d	; 61
    e7b6:	de b7       	in	r29, 0x3e	; 62
	return USART4.RXDATAL;
    e7b8:	80 e8       	ldi	r24, 0x80	; 128
    e7ba:	98 e0       	ldi	r25, 0x08	; 8
    e7bc:	fc 01       	movw	r30, r24
    e7be:	80 81       	ld	r24, Z
}
    e7c0:	df 91       	pop	r29
    e7c2:	cf 91       	pop	r28
    e7c4:	08 95       	ret

0000e7c6 <_Z7timeDifmm>:
    (ltm.tm_year-70)*31536000L + ((ltm.tm_year-69)/4)*86400L -
    ((ltm.tm_year-1)/100)*86400L + ((ltm.tm_year+299)/400)*86400L;
  }

  return result;
}
    e7c6:	ef 92       	push	r14
    e7c8:	ff 92       	push	r15
    e7ca:	0f 93       	push	r16
    e7cc:	1f 93       	push	r17
    e7ce:	cf 93       	push	r28
    e7d0:	df 93       	push	r29
    e7d2:	cd b7       	in	r28, 0x3d	; 61
    e7d4:	de b7       	in	r29, 0x3e	; 62
    e7d6:	2c 97       	sbiw	r28, 0x0c	; 12
    e7d8:	cd bf       	out	0x3d, r28	; 61
    e7da:	de bf       	out	0x3e, r29	; 62
    e7dc:	6d 83       	std	Y+5, r22	; 0x05
    e7de:	7e 83       	std	Y+6, r23	; 0x06
    e7e0:	8f 83       	std	Y+7, r24	; 0x07
    e7e2:	98 87       	std	Y+8, r25	; 0x08
    e7e4:	29 87       	std	Y+9, r18	; 0x09
    e7e6:	3a 87       	std	Y+10, r19	; 0x0a
    e7e8:	4b 87       	std	Y+11, r20	; 0x0b
    e7ea:	5c 87       	std	Y+12, r21	; 0x0c
    e7ec:	2d 81       	ldd	r18, Y+5	; 0x05
    e7ee:	3e 81       	ldd	r19, Y+6	; 0x06
    e7f0:	4f 81       	ldd	r20, Y+7	; 0x07
    e7f2:	58 85       	ldd	r21, Y+8	; 0x08
    e7f4:	89 85       	ldd	r24, Y+9	; 0x09
    e7f6:	9a 85       	ldd	r25, Y+10	; 0x0a
    e7f8:	ab 85       	ldd	r26, Y+11	; 0x0b
    e7fa:	bc 85       	ldd	r27, Y+12	; 0x0c
    e7fc:	82 17       	cp	r24, r18
    e7fe:	93 07       	cpc	r25, r19
    e800:	a4 07       	cpc	r26, r20
    e802:	b5 07       	cpc	r27, r21
    e804:	a8 f4       	brcc	.+42     	; 0xe830 <_Z7timeDifmm+0x6a>
    e806:	2d 81       	ldd	r18, Y+5	; 0x05
    e808:	3e 81       	ldd	r19, Y+6	; 0x06
    e80a:	4f 81       	ldd	r20, Y+7	; 0x07
    e80c:	58 85       	ldd	r21, Y+8	; 0x08
    e80e:	89 85       	ldd	r24, Y+9	; 0x09
    e810:	9a 85       	ldd	r25, Y+10	; 0x0a
    e812:	ab 85       	ldd	r26, Y+11	; 0x0b
    e814:	bc 85       	ldd	r27, Y+12	; 0x0c
    e816:	79 01       	movw	r14, r18
    e818:	8a 01       	movw	r16, r20
    e81a:	e8 1a       	sub	r14, r24
    e81c:	f9 0a       	sbc	r15, r25
    e81e:	0a 0b       	sbc	r16, r26
    e820:	1b 0b       	sbc	r17, r27
    e822:	d8 01       	movw	r26, r16
    e824:	c7 01       	movw	r24, r14
    e826:	89 83       	std	Y+1, r24	; 0x01
    e828:	9a 83       	std	Y+2, r25	; 0x02
    e82a:	ab 83       	std	Y+3, r26	; 0x03
    e82c:	bc 83       	std	Y+4, r27	; 0x04
    e82e:	14 c0       	rjmp	.+40     	; 0xe858 <_Z7timeDifmm+0x92>
    e830:	2d 81       	ldd	r18, Y+5	; 0x05
    e832:	3e 81       	ldd	r19, Y+6	; 0x06
    e834:	4f 81       	ldd	r20, Y+7	; 0x07
    e836:	58 85       	ldd	r21, Y+8	; 0x08
    e838:	89 85       	ldd	r24, Y+9	; 0x09
    e83a:	9a 85       	ldd	r25, Y+10	; 0x0a
    e83c:	ab 85       	ldd	r26, Y+11	; 0x0b
    e83e:	bc 85       	ldd	r27, Y+12	; 0x0c
    e840:	79 01       	movw	r14, r18
    e842:	8a 01       	movw	r16, r20
    e844:	e8 1a       	sub	r14, r24
    e846:	f9 0a       	sbc	r15, r25
    e848:	0a 0b       	sbc	r16, r26
    e84a:	1b 0b       	sbc	r17, r27
    e84c:	d8 01       	movw	r26, r16
    e84e:	c7 01       	movw	r24, r14
    e850:	89 83       	std	Y+1, r24	; 0x01
    e852:	9a 83       	std	Y+2, r25	; 0x02
    e854:	ab 83       	std	Y+3, r26	; 0x03
    e856:	bc 83       	std	Y+4, r27	; 0x04
    e858:	89 81       	ldd	r24, Y+1	; 0x01
    e85a:	9a 81       	ldd	r25, Y+2	; 0x02
    e85c:	ab 81       	ldd	r26, Y+3	; 0x03
    e85e:	bc 81       	ldd	r27, Y+4	; 0x04
    e860:	bc 01       	movw	r22, r24
    e862:	cd 01       	movw	r24, r26
    e864:	2c 96       	adiw	r28, 0x0c	; 12
    e866:	cd bf       	out	0x3d, r28	; 61
    e868:	de bf       	out	0x3e, r29	; 62
    e86a:	df 91       	pop	r29
    e86c:	cf 91       	pop	r28
    e86e:	1f 91       	pop	r17
    e870:	0f 91       	pop	r16
    e872:	ff 90       	pop	r15
    e874:	ef 90       	pop	r14
    e876:	08 95       	ret

0000e878 <_Z11only_digitsPc>:

/** 
 * Checks a string to see if it contains only numerical characters
 */
bool only_digits(char *s)
{
    e878:	cf 93       	push	r28
    e87a:	df 93       	push	r29
    e87c:	00 d0       	rcall	.+0      	; 0xe87e <_Z11only_digitsPc+0x6>
    e87e:	cd b7       	in	r28, 0x3d	; 61
    e880:	de b7       	in	r29, 0x3e	; 62
    e882:	89 83       	std	Y+1, r24	; 0x01
    e884:	9a 83       	std	Y+2, r25	; 0x02
	while(*s)
    e886:	89 81       	ldd	r24, Y+1	; 0x01
    e888:	9a 81       	ldd	r25, Y+2	; 0x02
    e88a:	fc 01       	movw	r30, r24
    e88c:	80 81       	ld	r24, Z
    e88e:	88 23       	and	r24, r24
    e890:	a1 f0       	breq	.+40     	; 0xe8ba <_Z11only_digitsPc+0x42>
	{
		if(isdigit(*s++) == 0)
    e892:	89 81       	ldd	r24, Y+1	; 0x01
    e894:	9a 81       	ldd	r25, Y+2	; 0x02
    e896:	9c 01       	movw	r18, r24
    e898:	2f 5f       	subi	r18, 0xFF	; 255
    e89a:	3f 4f       	sbci	r19, 0xFF	; 255
    e89c:	29 83       	std	Y+1, r18	; 0x01
    e89e:	3a 83       	std	Y+2, r19	; 0x02
    e8a0:	fc 01       	movw	r30, r24
    e8a2:	80 81       	ld	r24, Z
    e8a4:	88 2f       	mov	r24, r24
    e8a6:	90 e0       	ldi	r25, 0x00	; 0
    e8a8:	c0 97       	sbiw	r24, 0x30	; 48
    e8aa:	21 e0       	ldi	r18, 0x01	; 1
    e8ac:	0a 97       	sbiw	r24, 0x0a	; 10
    e8ae:	08 f4       	brcc	.+2      	; 0xe8b2 <_Z11only_digitsPc+0x3a>
    e8b0:	20 e0       	ldi	r18, 0x00	; 0
    e8b2:	22 23       	and	r18, r18
    e8b4:	41 f3       	breq	.-48     	; 0xe886 <_Z11only_digitsPc+0xe>
		{
			return( false);
    e8b6:	80 e0       	ldi	r24, 0x00	; 0
    e8b8:	01 c0       	rjmp	.+2      	; 0xe8bc <_Z11only_digitsPc+0x44>
		}
	}

	return( true);
    e8ba:	81 e0       	ldi	r24, 0x01	; 1
}
    e8bc:	0f 90       	pop	r0
    e8be:	0f 90       	pop	r0
    e8c0:	df 91       	pop	r29
    e8c2:	cf 91       	pop	r28
    e8c4:	08 95       	ret

0000e8c6 <_Z15frequencyStringPcm>:
 * result = pointer to a character sting to hold the frequency string
 * freq = the frequency value to be represented as a string
 * Returns 1 if an error is detected
 */
bool frequencyString(char* result, uint32_t freq)
{
    e8c6:	cf 93       	push	r28
    e8c8:	df 93       	push	r29
    e8ca:	cd b7       	in	r28, 0x3d	; 61
    e8cc:	de b7       	in	r29, 0x3e	; 62
    e8ce:	2b 97       	sbiw	r28, 0x0b	; 11
    e8d0:	cd bf       	out	0x3d, r28	; 61
    e8d2:	de bf       	out	0x3e, r29	; 62
    e8d4:	8e 83       	std	Y+6, r24	; 0x06
    e8d6:	9f 83       	std	Y+7, r25	; 0x07
    e8d8:	48 87       	std	Y+8, r20	; 0x08
    e8da:	59 87       	std	Y+9, r21	; 0x09
    e8dc:	6a 87       	std	Y+10, r22	; 0x0a
    e8de:	7b 87       	std	Y+11, r23	; 0x0b
	bool failure = true;
    e8e0:	81 e0       	ldi	r24, 0x01	; 1
    e8e2:	89 83       	std	Y+1, r24	; 0x01
	
	if(!result)
    e8e4:	8e 81       	ldd	r24, Y+6	; 0x06
    e8e6:	9f 81       	ldd	r25, Y+7	; 0x07
    e8e8:	89 2b       	or	r24, r25
    e8ea:	11 f4       	brne	.+4      	; 0xe8f0 <_Z15frequencyStringPcm+0x2a>
	{
		return(failure);
    e8ec:	89 81       	ldd	r24, Y+1	; 0x01
    e8ee:	61 c0       	rjmp	.+194    	; 0xe9b2 <_Z15frequencyStringPcm+0xec>
	}
	
	if((freq > 3500000) && (freq < 4000000)) // Accept only a Hz value to be expressed in kHz
    e8f0:	88 85       	ldd	r24, Y+8	; 0x08
    e8f2:	99 85       	ldd	r25, Y+9	; 0x09
    e8f4:	aa 85       	ldd	r26, Y+10	; 0x0a
    e8f6:	bb 85       	ldd	r27, Y+11	; 0x0b
    e8f8:	81 3e       	cpi	r24, 0xE1	; 225
    e8fa:	97 46       	sbci	r25, 0x67	; 103
    e8fc:	a5 43       	sbci	r26, 0x35	; 53
    e8fe:	b1 05       	cpc	r27, r1
    e900:	08 f4       	brcc	.+2      	; 0xe904 <_Z15frequencyStringPcm+0x3e>
    e902:	56 c0       	rjmp	.+172    	; 0xe9b0 <_Z15frequencyStringPcm+0xea>
    e904:	88 85       	ldd	r24, Y+8	; 0x08
    e906:	99 85       	ldd	r25, Y+9	; 0x09
    e908:	aa 85       	ldd	r26, Y+10	; 0x0a
    e90a:	bb 85       	ldd	r27, Y+11	; 0x0b
    e90c:	81 15       	cp	r24, r1
    e90e:	99 40       	sbci	r25, 0x09	; 9
    e910:	ad 43       	sbci	r26, 0x3D	; 61
    e912:	b1 05       	cpc	r27, r1
    e914:	08 f0       	brcs	.+2      	; 0xe918 <_Z15frequencyStringPcm+0x52>
    e916:	4c c0       	rjmp	.+152    	; 0xe9b0 <_Z15frequencyStringPcm+0xea>
	{
		uint32_t frac = (freq % 1000)/100;		
    e918:	88 85       	ldd	r24, Y+8	; 0x08
    e91a:	99 85       	ldd	r25, Y+9	; 0x09
    e91c:	aa 85       	ldd	r26, Y+10	; 0x0a
    e91e:	bb 85       	ldd	r27, Y+11	; 0x0b
    e920:	28 ee       	ldi	r18, 0xE8	; 232
    e922:	33 e0       	ldi	r19, 0x03	; 3
    e924:	40 e0       	ldi	r20, 0x00	; 0
    e926:	50 e0       	ldi	r21, 0x00	; 0
    e928:	bc 01       	movw	r22, r24
    e92a:	cd 01       	movw	r24, r26
    e92c:	0e 94 62 7a 	call	0xf4c4	; 0xf4c4 <__udivmodsi4>
    e930:	dc 01       	movw	r26, r24
    e932:	cb 01       	movw	r24, r22
    e934:	24 e6       	ldi	r18, 0x64	; 100
    e936:	30 e0       	ldi	r19, 0x00	; 0
    e938:	40 e0       	ldi	r20, 0x00	; 0
    e93a:	50 e0       	ldi	r21, 0x00	; 0
    e93c:	bc 01       	movw	r22, r24
    e93e:	cd 01       	movw	r24, r26
    e940:	0e 94 62 7a 	call	0xf4c4	; 0xf4c4 <__udivmodsi4>
    e944:	da 01       	movw	r26, r20
    e946:	c9 01       	movw	r24, r18
    e948:	8a 83       	std	Y+2, r24	; 0x02
    e94a:	9b 83       	std	Y+3, r25	; 0x03
    e94c:	ac 83       	std	Y+4, r26	; 0x04
    e94e:	bd 83       	std	Y+5, r27	; 0x05
		sprintf(result, "%lu.%1lu kHz", freq/1000, frac);
    e950:	88 85       	ldd	r24, Y+8	; 0x08
    e952:	99 85       	ldd	r25, Y+9	; 0x09
    e954:	aa 85       	ldd	r26, Y+10	; 0x0a
    e956:	bb 85       	ldd	r27, Y+11	; 0x0b
    e958:	28 ee       	ldi	r18, 0xE8	; 232
    e95a:	33 e0       	ldi	r19, 0x03	; 3
    e95c:	40 e0       	ldi	r20, 0x00	; 0
    e95e:	50 e0       	ldi	r21, 0x00	; 0
    e960:	bc 01       	movw	r22, r24
    e962:	cd 01       	movw	r24, r26
    e964:	0e 94 62 7a 	call	0xf4c4	; 0xf4c4 <__udivmodsi4>
    e968:	da 01       	movw	r26, r20
    e96a:	c9 01       	movw	r24, r18
    e96c:	2d 81       	ldd	r18, Y+5	; 0x05
    e96e:	2f 93       	push	r18
    e970:	2c 81       	ldd	r18, Y+4	; 0x04
    e972:	2f 93       	push	r18
    e974:	2b 81       	ldd	r18, Y+3	; 0x03
    e976:	2f 93       	push	r18
    e978:	2a 81       	ldd	r18, Y+2	; 0x02
    e97a:	2f 93       	push	r18
    e97c:	2b 2f       	mov	r18, r27
    e97e:	2f 93       	push	r18
    e980:	2a 2f       	mov	r18, r26
    e982:	2f 93       	push	r18
    e984:	29 2f       	mov	r18, r25
    e986:	2f 93       	push	r18
    e988:	8f 93       	push	r24
    e98a:	8f ee       	ldi	r24, 0xEF	; 239
    e98c:	94 e4       	ldi	r25, 0x44	; 68
    e98e:	89 2f       	mov	r24, r25
    e990:	8f 93       	push	r24
    e992:	8f ee       	ldi	r24, 0xEF	; 239
    e994:	94 e4       	ldi	r25, 0x44	; 68
    e996:	8f 93       	push	r24
    e998:	8f 81       	ldd	r24, Y+7	; 0x07
    e99a:	8f 93       	push	r24
    e99c:	8e 81       	ldd	r24, Y+6	; 0x06
    e99e:	8f 93       	push	r24
    e9a0:	0e 94 ba 7c 	call	0xf974	; 0xf974 <sprintf>
    e9a4:	8d b7       	in	r24, 0x3d	; 61
    e9a6:	9e b7       	in	r25, 0x3e	; 62
    e9a8:	0c 96       	adiw	r24, 0x0c	; 12
    e9aa:	cd bf       	out	0x3d, r28	; 61
    e9ac:	de bf       	out	0x3e, r29	; 62
		
		failure = false;
    e9ae:	19 82       	std	Y+1, r1	; 0x01
	}
	
	return(failure);	
    e9b0:	89 81       	ldd	r24, Y+1	; 0x01
}
    e9b2:	2b 96       	adiw	r28, 0x0b	; 11
    e9b4:	cd bf       	out	0x3d, r28	; 61
    e9b6:	de bf       	out	0x3e, r29	; 62
    e9b8:	df 91       	pop	r29
    e9ba:	cf 91       	pop	r28
    e9bc:	08 95       	ret

0000e9be <_Z12frequencyValPcPm>:
 * str = pointer to a string containing the frequency string
 * result = pointer to a Frequency_Hz variable to hold the frequency in Hz
 * Returns 1 if an error is detected
 */
bool frequencyVal(char* str, Frequency_Hz* result)
{
    e9be:	ef 92       	push	r14
    e9c0:	ff 92       	push	r15
    e9c2:	0f 93       	push	r16
    e9c4:	1f 93       	push	r17
    e9c6:	cf 93       	push	r28
    e9c8:	df 93       	push	r29
    e9ca:	cd b7       	in	r28, 0x3d	; 61
    e9cc:	de b7       	in	r29, 0x3e	; 62
    e9ce:	65 97       	sbiw	r28, 0x15	; 21
    e9d0:	cd bf       	out	0x3d, r28	; 61
    e9d2:	de bf       	out	0x3e, r29	; 62
    e9d4:	8a 8b       	std	Y+18, r24	; 0x12
    e9d6:	9b 8b       	std	Y+19, r25	; 0x13
    e9d8:	6c 8b       	std	Y+20, r22	; 0x14
    e9da:	7d 8b       	std	Y+21, r23	; 0x15
	bool failure = true;
    e9dc:	81 e0       	ldi	r24, 0x01	; 1
    e9de:	89 83       	std	Y+1, r24	; 0x01
	
	if(!str)
    e9e0:	8a 89       	ldd	r24, Y+18	; 0x12
    e9e2:	9b 89       	ldd	r25, Y+19	; 0x13
    e9e4:	89 2b       	or	r24, r25
    e9e6:	11 f4       	brne	.+4      	; 0xe9ec <_Z12frequencyValPcPm+0x2e>
	{
		return(failure);
    e9e8:	89 81       	ldd	r24, Y+1	; 0x01
    e9ea:	a4 c1       	rjmp	.+840    	; 0xed34 <_Z12frequencyValPcPm+0x376>
	}
	
	int decimal = '.';
    e9ec:	8e e2       	ldi	r24, 0x2E	; 46
    e9ee:	90 e0       	ldi	r25, 0x00	; 0
    e9f0:	8a 87       	std	Y+10, r24	; 0x0a
    e9f2:	9b 87       	std	Y+11, r25	; 0x0b
	char* decimalLocation = strchr(str, decimal);
    e9f4:	2a 85       	ldd	r18, Y+10	; 0x0a
    e9f6:	3b 85       	ldd	r19, Y+11	; 0x0b
    e9f8:	8a 89       	ldd	r24, Y+18	; 0x12
    e9fa:	9b 89       	ldd	r25, Y+19	; 0x13
    e9fc:	b9 01       	movw	r22, r18
    e9fe:	0e 94 6a 7c 	call	0xf8d4	; 0xf8d4 <strchr>
    ea02:	8c 87       	std	Y+12, r24	; 0x0c
    ea04:	9d 87       	std	Y+13, r25	; 0x0d
	Frequency_Hz temp;
	
	if(decimalLocation) // Assume Hz or kHz
    ea06:	8c 85       	ldd	r24, Y+12	; 0x0c
    ea08:	9d 85       	ldd	r25, Y+13	; 0x0d
    ea0a:	89 2b       	or	r24, r25
    ea0c:	09 f4       	brne	.+2      	; 0xea10 <_Z12frequencyValPcPm+0x52>
    ea0e:	d7 c0       	rjmp	.+430    	; 0xebbe <_Z12frequencyValPcPm+0x200>
	{
		float f = atof(str);
    ea10:	8a 89       	ldd	r24, Y+18	; 0x12
    ea12:	9b 89       	ldd	r25, Y+19	; 0x13
    ea14:	0e 94 07 7c 	call	0xf80e	; 0xf80e <atof>
    ea18:	dc 01       	movw	r26, r24
    ea1a:	cb 01       	movw	r24, r22
    ea1c:	8a 83       	std	Y+2, r24	; 0x02
    ea1e:	9b 83       	std	Y+3, r25	; 0x03
    ea20:	ac 83       	std	Y+4, r26	; 0x04
    ea22:	bd 83       	std	Y+5, r27	; 0x05
		
		if((f > 3.5) && (f < 4.0))
    ea24:	20 e0       	ldi	r18, 0x00	; 0
    ea26:	30 e0       	ldi	r19, 0x00	; 0
    ea28:	40 e6       	ldi	r20, 0x60	; 96
    ea2a:	50 e4       	ldi	r21, 0x40	; 64
    ea2c:	6a 81       	ldd	r22, Y+2	; 0x02
    ea2e:	7b 81       	ldd	r23, Y+3	; 0x03
    ea30:	8c 81       	ldd	r24, Y+4	; 0x04
    ea32:	9d 81       	ldd	r25, Y+5	; 0x05
    ea34:	0e 94 b8 79 	call	0xf370	; 0xf370 <__gesf2>
    ea38:	18 16       	cp	r1, r24
    ea3a:	f4 f4       	brge	.+60     	; 0xea78 <_Z12frequencyValPcPm+0xba>
    ea3c:	20 e0       	ldi	r18, 0x00	; 0
    ea3e:	30 e0       	ldi	r19, 0x00	; 0
    ea40:	40 e8       	ldi	r20, 0x80	; 128
    ea42:	50 e4       	ldi	r21, 0x40	; 64
    ea44:	6a 81       	ldd	r22, Y+2	; 0x02
    ea46:	7b 81       	ldd	r23, Y+3	; 0x03
    ea48:	8c 81       	ldd	r24, Y+4	; 0x04
    ea4a:	9d 81       	ldd	r25, Y+5	; 0x05
    ea4c:	0e 94 18 78 	call	0xf030	; 0xf030 <__cmpsf2>
    ea50:	88 23       	and	r24, r24
    ea52:	94 f4       	brge	.+36     	; 0xea78 <_Z12frequencyValPcPm+0xba>
		{
			f *= 1000000.;
    ea54:	20 e0       	ldi	r18, 0x00	; 0
    ea56:	34 e2       	ldi	r19, 0x24	; 36
    ea58:	44 e7       	ldi	r20, 0x74	; 116
    ea5a:	59 e4       	ldi	r21, 0x49	; 73
    ea5c:	6a 81       	ldd	r22, Y+2	; 0x02
    ea5e:	7b 81       	ldd	r23, Y+3	; 0x03
    ea60:	8c 81       	ldd	r24, Y+4	; 0x04
    ea62:	9d 81       	ldd	r25, Y+5	; 0x05
    ea64:	0e 94 bd 79 	call	0xf37a	; 0xf37a <__mulsf3>
    ea68:	dc 01       	movw	r26, r24
    ea6a:	cb 01       	movw	r24, r22
    ea6c:	8a 83       	std	Y+2, r24	; 0x02
    ea6e:	9b 83       	std	Y+3, r25	; 0x03
    ea70:	ac 83       	std	Y+4, r26	; 0x04
    ea72:	bd 83       	std	Y+5, r27	; 0x05
			failure = false;
    ea74:	19 82       	std	Y+1, r1	; 0x01
    ea76:	43 c0       	rjmp	.+134    	; 0xeafe <_Z12frequencyValPcPm+0x140>
		}
		else if((f > 3500.) && (f < 4000.))
    ea78:	20 e0       	ldi	r18, 0x00	; 0
    ea7a:	30 ec       	ldi	r19, 0xC0	; 192
    ea7c:	4a e5       	ldi	r20, 0x5A	; 90
    ea7e:	55 e4       	ldi	r21, 0x45	; 69
    ea80:	6a 81       	ldd	r22, Y+2	; 0x02
    ea82:	7b 81       	ldd	r23, Y+3	; 0x03
    ea84:	8c 81       	ldd	r24, Y+4	; 0x04
    ea86:	9d 81       	ldd	r25, Y+5	; 0x05
    ea88:	0e 94 b8 79 	call	0xf370	; 0xf370 <__gesf2>
    ea8c:	18 16       	cp	r1, r24
    ea8e:	f4 f4       	brge	.+60     	; 0xeacc <_Z12frequencyValPcPm+0x10e>
    ea90:	20 e0       	ldi	r18, 0x00	; 0
    ea92:	30 e0       	ldi	r19, 0x00	; 0
    ea94:	4a e7       	ldi	r20, 0x7A	; 122
    ea96:	55 e4       	ldi	r21, 0x45	; 69
    ea98:	6a 81       	ldd	r22, Y+2	; 0x02
    ea9a:	7b 81       	ldd	r23, Y+3	; 0x03
    ea9c:	8c 81       	ldd	r24, Y+4	; 0x04
    ea9e:	9d 81       	ldd	r25, Y+5	; 0x05
    eaa0:	0e 94 18 78 	call	0xf030	; 0xf030 <__cmpsf2>
    eaa4:	88 23       	and	r24, r24
    eaa6:	94 f4       	brge	.+36     	; 0xeacc <_Z12frequencyValPcPm+0x10e>
		{
			f *= 1000.;
    eaa8:	20 e0       	ldi	r18, 0x00	; 0
    eaaa:	30 e0       	ldi	r19, 0x00	; 0
    eaac:	4a e7       	ldi	r20, 0x7A	; 122
    eaae:	54 e4       	ldi	r21, 0x44	; 68
    eab0:	6a 81       	ldd	r22, Y+2	; 0x02
    eab2:	7b 81       	ldd	r23, Y+3	; 0x03
    eab4:	8c 81       	ldd	r24, Y+4	; 0x04
    eab6:	9d 81       	ldd	r25, Y+5	; 0x05
    eab8:	0e 94 bd 79 	call	0xf37a	; 0xf37a <__mulsf3>
    eabc:	dc 01       	movw	r26, r24
    eabe:	cb 01       	movw	r24, r22
    eac0:	8a 83       	std	Y+2, r24	; 0x02
    eac2:	9b 83       	std	Y+3, r25	; 0x03
    eac4:	ac 83       	std	Y+4, r26	; 0x04
    eac6:	bd 83       	std	Y+5, r27	; 0x05
			failure = false;
    eac8:	19 82       	std	Y+1, r1	; 0x01
    eaca:	19 c0       	rjmp	.+50     	; 0xeafe <_Z12frequencyValPcPm+0x140>
		}
		else if((f > 3500000.) && (f < 4000000.))
    eacc:	20 e8       	ldi	r18, 0x80	; 128
    eace:	3f e9       	ldi	r19, 0x9F	; 159
    ead0:	45 e5       	ldi	r20, 0x55	; 85
    ead2:	5a e4       	ldi	r21, 0x4A	; 74
    ead4:	6a 81       	ldd	r22, Y+2	; 0x02
    ead6:	7b 81       	ldd	r23, Y+3	; 0x03
    ead8:	8c 81       	ldd	r24, Y+4	; 0x04
    eada:	9d 81       	ldd	r25, Y+5	; 0x05
    eadc:	0e 94 b8 79 	call	0xf370	; 0xf370 <__gesf2>
    eae0:	18 16       	cp	r1, r24
    eae2:	6c f4       	brge	.+26     	; 0xeafe <_Z12frequencyValPcPm+0x140>
    eae4:	20 e0       	ldi	r18, 0x00	; 0
    eae6:	34 e2       	ldi	r19, 0x24	; 36
    eae8:	44 e7       	ldi	r20, 0x74	; 116
    eaea:	5a e4       	ldi	r21, 0x4A	; 74
    eaec:	6a 81       	ldd	r22, Y+2	; 0x02
    eaee:	7b 81       	ldd	r23, Y+3	; 0x03
    eaf0:	8c 81       	ldd	r24, Y+4	; 0x04
    eaf2:	9d 81       	ldd	r25, Y+5	; 0x05
    eaf4:	0e 94 18 78 	call	0xf030	; 0xf030 <__cmpsf2>
    eaf8:	88 23       	and	r24, r24
    eafa:	0c f4       	brge	.+2      	; 0xeafe <_Z12frequencyValPcPm+0x140>
		{
			failure = false;
    eafc:	19 82       	std	Y+1, r1	; 0x01
		}
		
		if(!failure)
    eafe:	99 81       	ldd	r25, Y+1	; 0x01
    eb00:	81 e0       	ldi	r24, 0x01	; 1
    eb02:	89 27       	eor	r24, r25
    eb04:	88 23       	and	r24, r24
    eb06:	09 f4       	brne	.+2      	; 0xeb0a <_Z12frequencyValPcPm+0x14c>
    eb08:	14 c1       	rjmp	.+552    	; 0xed32 <_Z12frequencyValPcPm+0x374>
		{
			temp = (Frequency_Hz)ceilf(f);
    eb0a:	8a 81       	ldd	r24, Y+2	; 0x02
    eb0c:	9b 81       	ldd	r25, Y+3	; 0x03
    eb0e:	ac 81       	ldd	r26, Y+4	; 0x04
    eb10:	bd 81       	ldd	r27, Y+5	; 0x05
    eb12:	bc 01       	movw	r22, r24
    eb14:	cd 01       	movw	r24, r26
    eb16:	0e 94 01 78 	call	0xf002	; 0xf002 <ceil>
    eb1a:	dc 01       	movw	r26, r24
    eb1c:	cb 01       	movw	r24, r22
    eb1e:	bc 01       	movw	r22, r24
    eb20:	cd 01       	movw	r24, r26
    eb22:	0e 94 96 78 	call	0xf12c	; 0xf12c <__fixunssfsi>
    eb26:	dc 01       	movw	r26, r24
    eb28:	cb 01       	movw	r24, r22
    eb2a:	8e 87       	std	Y+14, r24	; 0x0e
    eb2c:	9f 87       	std	Y+15, r25	; 0x0f
    eb2e:	a8 8b       	std	Y+16, r26	; 0x10
    eb30:	b9 8b       	std	Y+17, r27	; 0x11
			temp = temp - (temp % 100);
    eb32:	8e 85       	ldd	r24, Y+14	; 0x0e
    eb34:	9f 85       	ldd	r25, Y+15	; 0x0f
    eb36:	a8 89       	ldd	r26, Y+16	; 0x10
    eb38:	b9 89       	ldd	r27, Y+17	; 0x11
    eb3a:	24 e6       	ldi	r18, 0x64	; 100
    eb3c:	30 e0       	ldi	r19, 0x00	; 0
    eb3e:	40 e0       	ldi	r20, 0x00	; 0
    eb40:	50 e0       	ldi	r21, 0x00	; 0
    eb42:	bc 01       	movw	r22, r24
    eb44:	cd 01       	movw	r24, r26
    eb46:	0e 94 62 7a 	call	0xf4c4	; 0xf4c4 <__udivmodsi4>
    eb4a:	dc 01       	movw	r26, r24
    eb4c:	cb 01       	movw	r24, r22
    eb4e:	9c 01       	movw	r18, r24
    eb50:	ad 01       	movw	r20, r26
    eb52:	8e 85       	ldd	r24, Y+14	; 0x0e
    eb54:	9f 85       	ldd	r25, Y+15	; 0x0f
    eb56:	a8 89       	ldd	r26, Y+16	; 0x10
    eb58:	b9 89       	ldd	r27, Y+17	; 0x11
    eb5a:	82 1b       	sub	r24, r18
    eb5c:	93 0b       	sbc	r25, r19
    eb5e:	a4 0b       	sbc	r26, r20
    eb60:	b5 0b       	sbc	r27, r21
    eb62:	8e 87       	std	Y+14, r24	; 0x0e
    eb64:	9f 87       	std	Y+15, r25	; 0x0f
    eb66:	a8 8b       	std	Y+16, r26	; 0x10
    eb68:	b9 8b       	std	Y+17, r27	; 0x11
			if(result) *result = temp;
    eb6a:	8c 89       	ldd	r24, Y+20	; 0x14
    eb6c:	9d 89       	ldd	r25, Y+21	; 0x15
    eb6e:	89 2b       	or	r24, r25
    eb70:	59 f0       	breq	.+22     	; 0xeb88 <_Z12frequencyValPcPm+0x1ca>
    eb72:	2c 89       	ldd	r18, Y+20	; 0x14
    eb74:	3d 89       	ldd	r19, Y+21	; 0x15
    eb76:	8e 85       	ldd	r24, Y+14	; 0x0e
    eb78:	9f 85       	ldd	r25, Y+15	; 0x0f
    eb7a:	a8 89       	ldd	r26, Y+16	; 0x10
    eb7c:	b9 89       	ldd	r27, Y+17	; 0x11
    eb7e:	f9 01       	movw	r30, r18
    eb80:	80 83       	st	Z, r24
    eb82:	91 83       	std	Z+1, r25	; 0x01
    eb84:	a2 83       	std	Z+2, r26	; 0x02
    eb86:	b3 83       	std	Z+3, r27	; 0x03
			sprintf(str, "%4.1f kHz", (double)f);
    eb88:	8d 81       	ldd	r24, Y+5	; 0x05
    eb8a:	8f 93       	push	r24
    eb8c:	8c 81       	ldd	r24, Y+4	; 0x04
    eb8e:	8f 93       	push	r24
    eb90:	8b 81       	ldd	r24, Y+3	; 0x03
    eb92:	8f 93       	push	r24
    eb94:	8a 81       	ldd	r24, Y+2	; 0x02
    eb96:	8f 93       	push	r24
    eb98:	8c ef       	ldi	r24, 0xFC	; 252
    eb9a:	94 e4       	ldi	r25, 0x44	; 68
    eb9c:	89 2f       	mov	r24, r25
    eb9e:	8f 93       	push	r24
    eba0:	8c ef       	ldi	r24, 0xFC	; 252
    eba2:	94 e4       	ldi	r25, 0x44	; 68
    eba4:	8f 93       	push	r24
    eba6:	8b 89       	ldd	r24, Y+19	; 0x13
    eba8:	8f 93       	push	r24
    ebaa:	8a 89       	ldd	r24, Y+18	; 0x12
    ebac:	8f 93       	push	r24
    ebae:	0e 94 ba 7c 	call	0xf974	; 0xf974 <sprintf>
    ebb2:	8d b7       	in	r24, 0x3d	; 61
    ebb4:	9e b7       	in	r25, 0x3e	; 62
    ebb6:	08 96       	adiw	r24, 0x08	; 8
    ebb8:	cd bf       	out	0x3d, r28	; 61
    ebba:	de bf       	out	0x3e, r29	; 62
    ebbc:	ba c0       	rjmp	.+372    	; 0xed32 <_Z12frequencyValPcPm+0x374>
		}
	}
	else
	{
		Frequency_Hz f = (Frequency_Hz)atol(str);
    ebbe:	8a 89       	ldd	r24, Y+18	; 0x12
    ebc0:	9b 89       	ldd	r25, Y+19	; 0x13
    ebc2:	0e 94 29 7c 	call	0xf852	; 0xf852 <atol>
    ebc6:	dc 01       	movw	r26, r24
    ebc8:	cb 01       	movw	r24, r22
    ebca:	8e 83       	std	Y+6, r24	; 0x06
    ebcc:	9f 83       	std	Y+7, r25	; 0x07
    ebce:	a8 87       	std	Y+8, r26	; 0x08
    ebd0:	b9 87       	std	Y+9, r27	; 0x09
		
		if((f > 3500) && (f < 4000))
    ebd2:	8e 81       	ldd	r24, Y+6	; 0x06
    ebd4:	9f 81       	ldd	r25, Y+7	; 0x07
    ebd6:	a8 85       	ldd	r26, Y+8	; 0x08
    ebd8:	b9 85       	ldd	r27, Y+9	; 0x09
    ebda:	8d 3a       	cpi	r24, 0xAD	; 173
    ebdc:	9d 40       	sbci	r25, 0x0D	; 13
    ebde:	a1 05       	cpc	r26, r1
    ebe0:	b1 05       	cpc	r27, r1
    ebe2:	d0 f0       	brcs	.+52     	; 0xec18 <_Z12frequencyValPcPm+0x25a>
    ebe4:	8e 81       	ldd	r24, Y+6	; 0x06
    ebe6:	9f 81       	ldd	r25, Y+7	; 0x07
    ebe8:	a8 85       	ldd	r26, Y+8	; 0x08
    ebea:	b9 85       	ldd	r27, Y+9	; 0x09
    ebec:	80 3a       	cpi	r24, 0xA0	; 160
    ebee:	9f 40       	sbci	r25, 0x0F	; 15
    ebf0:	a1 05       	cpc	r26, r1
    ebf2:	b1 05       	cpc	r27, r1
    ebf4:	88 f4       	brcc	.+34     	; 0xec18 <_Z12frequencyValPcPm+0x25a>
		{
			f *= 1000;
    ebf6:	2e 81       	ldd	r18, Y+6	; 0x06
    ebf8:	3f 81       	ldd	r19, Y+7	; 0x07
    ebfa:	48 85       	ldd	r20, Y+8	; 0x08
    ebfc:	59 85       	ldd	r21, Y+9	; 0x09
    ebfe:	88 ee       	ldi	r24, 0xE8	; 232
    ec00:	93 e0       	ldi	r25, 0x03	; 3
    ec02:	dc 01       	movw	r26, r24
    ec04:	0e 94 bb 7a 	call	0xf576	; 0xf576 <__muluhisi3>
    ec08:	dc 01       	movw	r26, r24
    ec0a:	cb 01       	movw	r24, r22
    ec0c:	8e 83       	std	Y+6, r24	; 0x06
    ec0e:	9f 83       	std	Y+7, r25	; 0x07
    ec10:	a8 87       	std	Y+8, r26	; 0x08
    ec12:	b9 87       	std	Y+9, r27	; 0x09
			failure = false;
    ec14:	19 82       	std	Y+1, r1	; 0x01
    ec16:	2f c0       	rjmp	.+94     	; 0xec76 <_Z12frequencyValPcPm+0x2b8>
		}
		else if((f > 3500000) && (f < 4000000))
    ec18:	8e 81       	ldd	r24, Y+6	; 0x06
    ec1a:	9f 81       	ldd	r25, Y+7	; 0x07
    ec1c:	a8 85       	ldd	r26, Y+8	; 0x08
    ec1e:	b9 85       	ldd	r27, Y+9	; 0x09
    ec20:	81 3e       	cpi	r24, 0xE1	; 225
    ec22:	97 46       	sbci	r25, 0x67	; 103
    ec24:	a5 43       	sbci	r26, 0x35	; 53
    ec26:	b1 05       	cpc	r27, r1
    ec28:	30 f1       	brcs	.+76     	; 0xec76 <_Z12frequencyValPcPm+0x2b8>
    ec2a:	8e 81       	ldd	r24, Y+6	; 0x06
    ec2c:	9f 81       	ldd	r25, Y+7	; 0x07
    ec2e:	a8 85       	ldd	r26, Y+8	; 0x08
    ec30:	b9 85       	ldd	r27, Y+9	; 0x09
    ec32:	81 15       	cp	r24, r1
    ec34:	99 40       	sbci	r25, 0x09	; 9
    ec36:	ad 43       	sbci	r26, 0x3D	; 61
    ec38:	b1 05       	cpc	r27, r1
    ec3a:	e8 f4       	brcc	.+58     	; 0xec76 <_Z12frequencyValPcPm+0x2b8>
		{
			f = f - (f % 100);
    ec3c:	8e 81       	ldd	r24, Y+6	; 0x06
    ec3e:	9f 81       	ldd	r25, Y+7	; 0x07
    ec40:	a8 85       	ldd	r26, Y+8	; 0x08
    ec42:	b9 85       	ldd	r27, Y+9	; 0x09
    ec44:	24 e6       	ldi	r18, 0x64	; 100
    ec46:	30 e0       	ldi	r19, 0x00	; 0
    ec48:	40 e0       	ldi	r20, 0x00	; 0
    ec4a:	50 e0       	ldi	r21, 0x00	; 0
    ec4c:	bc 01       	movw	r22, r24
    ec4e:	cd 01       	movw	r24, r26
    ec50:	0e 94 62 7a 	call	0xf4c4	; 0xf4c4 <__udivmodsi4>
    ec54:	dc 01       	movw	r26, r24
    ec56:	cb 01       	movw	r24, r22
    ec58:	9c 01       	movw	r18, r24
    ec5a:	ad 01       	movw	r20, r26
    ec5c:	8e 81       	ldd	r24, Y+6	; 0x06
    ec5e:	9f 81       	ldd	r25, Y+7	; 0x07
    ec60:	a8 85       	ldd	r26, Y+8	; 0x08
    ec62:	b9 85       	ldd	r27, Y+9	; 0x09
    ec64:	82 1b       	sub	r24, r18
    ec66:	93 0b       	sbc	r25, r19
    ec68:	a4 0b       	sbc	r26, r20
    ec6a:	b5 0b       	sbc	r27, r21
    ec6c:	8e 83       	std	Y+6, r24	; 0x06
    ec6e:	9f 83       	std	Y+7, r25	; 0x07
    ec70:	a8 87       	std	Y+8, r26	; 0x08
    ec72:	b9 87       	std	Y+9, r27	; 0x09
			failure = false;
    ec74:	19 82       	std	Y+1, r1	; 0x01
		}
		
		if(!failure)
    ec76:	99 81       	ldd	r25, Y+1	; 0x01
    ec78:	81 e0       	ldi	r24, 0x01	; 1
    ec7a:	89 27       	eor	r24, r25
    ec7c:	88 23       	and	r24, r24
    ec7e:	09 f4       	brne	.+2      	; 0xec82 <_Z12frequencyValPcPm+0x2c4>
    ec80:	58 c0       	rjmp	.+176    	; 0xed32 <_Z12frequencyValPcPm+0x374>
		{
			if(result) *result = f;
    ec82:	8c 89       	ldd	r24, Y+20	; 0x14
    ec84:	9d 89       	ldd	r25, Y+21	; 0x15
    ec86:	89 2b       	or	r24, r25
    ec88:	59 f0       	breq	.+22     	; 0xeca0 <_Z12frequencyValPcPm+0x2e2>
    ec8a:	2c 89       	ldd	r18, Y+20	; 0x14
    ec8c:	3d 89       	ldd	r19, Y+21	; 0x15
    ec8e:	8e 81       	ldd	r24, Y+6	; 0x06
    ec90:	9f 81       	ldd	r25, Y+7	; 0x07
    ec92:	a8 85       	ldd	r26, Y+8	; 0x08
    ec94:	b9 85       	ldd	r27, Y+9	; 0x09
    ec96:	f9 01       	movw	r30, r18
    ec98:	80 83       	st	Z, r24
    ec9a:	91 83       	std	Z+1, r25	; 0x01
    ec9c:	a2 83       	std	Z+2, r26	; 0x02
    ec9e:	b3 83       	std	Z+3, r27	; 0x03
			sprintf(str, "%lu.%1lu kHz", f/1000, (f % 1000)/100);
    eca0:	8e 81       	ldd	r24, Y+6	; 0x06
    eca2:	9f 81       	ldd	r25, Y+7	; 0x07
    eca4:	a8 85       	ldd	r26, Y+8	; 0x08
    eca6:	b9 85       	ldd	r27, Y+9	; 0x09
    eca8:	28 ee       	ldi	r18, 0xE8	; 232
    ecaa:	33 e0       	ldi	r19, 0x03	; 3
    ecac:	40 e0       	ldi	r20, 0x00	; 0
    ecae:	50 e0       	ldi	r21, 0x00	; 0
    ecb0:	bc 01       	movw	r22, r24
    ecb2:	cd 01       	movw	r24, r26
    ecb4:	0e 94 62 7a 	call	0xf4c4	; 0xf4c4 <__udivmodsi4>
    ecb8:	dc 01       	movw	r26, r24
    ecba:	cb 01       	movw	r24, r22
    ecbc:	24 e6       	ldi	r18, 0x64	; 100
    ecbe:	30 e0       	ldi	r19, 0x00	; 0
    ecc0:	40 e0       	ldi	r20, 0x00	; 0
    ecc2:	50 e0       	ldi	r21, 0x00	; 0
    ecc4:	bc 01       	movw	r22, r24
    ecc6:	cd 01       	movw	r24, r26
    ecc8:	0e 94 62 7a 	call	0xf4c4	; 0xf4c4 <__udivmodsi4>
    eccc:	da 01       	movw	r26, r20
    ecce:	c9 01       	movw	r24, r18
    ecd0:	7c 01       	movw	r14, r24
    ecd2:	8d 01       	movw	r16, r26
    ecd4:	8e 81       	ldd	r24, Y+6	; 0x06
    ecd6:	9f 81       	ldd	r25, Y+7	; 0x07
    ecd8:	a8 85       	ldd	r26, Y+8	; 0x08
    ecda:	b9 85       	ldd	r27, Y+9	; 0x09
    ecdc:	28 ee       	ldi	r18, 0xE8	; 232
    ecde:	33 e0       	ldi	r19, 0x03	; 3
    ece0:	40 e0       	ldi	r20, 0x00	; 0
    ece2:	50 e0       	ldi	r21, 0x00	; 0
    ece4:	bc 01       	movw	r22, r24
    ece6:	cd 01       	movw	r24, r26
    ece8:	0e 94 62 7a 	call	0xf4c4	; 0xf4c4 <__udivmodsi4>
    ecec:	da 01       	movw	r26, r20
    ecee:	c9 01       	movw	r24, r18
    ecf0:	21 2f       	mov	r18, r17
    ecf2:	2f 93       	push	r18
    ecf4:	20 2f       	mov	r18, r16
    ecf6:	2f 93       	push	r18
    ecf8:	2f 2d       	mov	r18, r15
    ecfa:	2f 93       	push	r18
    ecfc:	2e 2d       	mov	r18, r14
    ecfe:	2f 93       	push	r18
    ed00:	2b 2f       	mov	r18, r27
    ed02:	2f 93       	push	r18
    ed04:	2a 2f       	mov	r18, r26
    ed06:	2f 93       	push	r18
    ed08:	29 2f       	mov	r18, r25
    ed0a:	2f 93       	push	r18
    ed0c:	8f 93       	push	r24
    ed0e:	8f ee       	ldi	r24, 0xEF	; 239
    ed10:	94 e4       	ldi	r25, 0x44	; 68
    ed12:	89 2f       	mov	r24, r25
    ed14:	8f 93       	push	r24
    ed16:	8f ee       	ldi	r24, 0xEF	; 239
    ed18:	94 e4       	ldi	r25, 0x44	; 68
    ed1a:	8f 93       	push	r24
    ed1c:	8b 89       	ldd	r24, Y+19	; 0x13
    ed1e:	8f 93       	push	r24
    ed20:	8a 89       	ldd	r24, Y+18	; 0x12
    ed22:	8f 93       	push	r24
    ed24:	0e 94 ba 7c 	call	0xf974	; 0xf974 <sprintf>
    ed28:	8d b7       	in	r24, 0x3d	; 61
    ed2a:	9e b7       	in	r25, 0x3e	; 62
    ed2c:	0c 96       	adiw	r24, 0x0c	; 12
    ed2e:	cd bf       	out	0x3d, r28	; 61
    ed30:	de bf       	out	0x3e, r29	; 62
		}
	}
	
	return(failure);	
    ed32:	89 81       	ldd	r24, Y+1	; 0x01
}
    ed34:	65 96       	adiw	r28, 0x15	; 21
    ed36:	cd bf       	out	0x3d, r28	; 61
    ed38:	de bf       	out	0x3e, r29	; 62
    ed3a:	df 91       	pop	r29
    ed3c:	cf 91       	pop	r28
    ed3e:	1f 91       	pop	r17
    ed40:	0f 91       	pop	r16
    ed42:	ff 90       	pop	r15
    ed44:	ef 90       	pop	r14
    ed46:	08 95       	ret

0000ed48 <_Z8fox2TextPc5Fox_t>:

bool fox2Text(char* str, Fox_t fox)
{
    ed48:	cf 93       	push	r28
    ed4a:	df 93       	push	r29
    ed4c:	00 d0       	rcall	.+0      	; 0xed4e <_Z8fox2TextPc5Fox_t+0x6>
    ed4e:	00 d0       	rcall	.+0      	; 0xed50 <_Z8fox2TextPc5Fox_t+0x8>
    ed50:	cd b7       	in	r28, 0x3d	; 61
    ed52:	de b7       	in	r29, 0x3e	; 62
    ed54:	8a 83       	std	Y+2, r24	; 0x02
    ed56:	9b 83       	std	Y+3, r25	; 0x03
    ed58:	6c 83       	std	Y+4, r22	; 0x04
	bool failure = false;
    ed5a:	19 82       	std	Y+1, r1	; 0x01
	
	switch(fox)
    ed5c:	8c 81       	ldd	r24, Y+4	; 0x04
    ed5e:	88 2f       	mov	r24, r24
    ed60:	90 e0       	ldi	r25, 0x00	; 0
    ed62:	09 2e       	mov	r0, r25
    ed64:	00 0c       	add	r0, r0
    ed66:	aa 0b       	sbc	r26, r26
    ed68:	bb 0b       	sbc	r27, r27
    ed6a:	40 e0       	ldi	r20, 0x00	; 0
    ed6c:	50 e0       	ldi	r21, 0x00	; 0
    ed6e:	21 e1       	ldi	r18, 0x11	; 17
    ed70:	30 e0       	ldi	r19, 0x00	; 0
    ed72:	84 1b       	sub	r24, r20
    ed74:	95 0b       	sbc	r25, r21
    ed76:	28 17       	cp	r18, r24
    ed78:	39 07       	cpc	r19, r25
    ed7a:	08 f4       	brcc	.+2      	; 0xed7e <_Z8fox2TextPc5Fox_t+0x36>
    ed7c:	cb c0       	rjmp	.+406    	; 0xef14 <_Z8fox2TextPc5Fox_t+0x1cc>
    ed7e:	8f 5b       	subi	r24, 0xBF	; 191
    ed80:	9e 4f       	sbci	r25, 0xFE	; 254
    ed82:	fc 01       	movw	r30, r24
    ed84:	0c 94 a3 7a 	jmp	0xf546	; 0xf546 <__tablejump2__>
	{
		case BEACON:
		{
			sprintf(str, "Finish \"MO\"");
    ed88:	8a 81       	ldd	r24, Y+2	; 0x02
    ed8a:	9b 81       	ldd	r25, Y+3	; 0x03
    ed8c:	2c e0       	ldi	r18, 0x0C	; 12
    ed8e:	e6 e0       	ldi	r30, 0x06	; 6
    ed90:	f5 e4       	ldi	r31, 0x45	; 69
    ed92:	dc 01       	movw	r26, r24
    ed94:	01 90       	ld	r0, Z+
    ed96:	0d 92       	st	X+, r0
    ed98:	2a 95       	dec	r18
    ed9a:	e1 f7       	brne	.-8      	; 0xed94 <_Z8fox2TextPc5Fox_t+0x4c>
		}
		break;
    ed9c:	be c0       	rjmp	.+380    	; 0xef1a <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case FOX_1:
		{
			sprintf(str, "Classic Fox 1 \"MOE\"");
    ed9e:	8a 81       	ldd	r24, Y+2	; 0x02
    eda0:	9b 81       	ldd	r25, Y+3	; 0x03
    eda2:	24 e1       	ldi	r18, 0x14	; 20
    eda4:	e2 e1       	ldi	r30, 0x12	; 18
    eda6:	f5 e4       	ldi	r31, 0x45	; 69
    eda8:	dc 01       	movw	r26, r24
    edaa:	01 90       	ld	r0, Z+
    edac:	0d 92       	st	X+, r0
    edae:	2a 95       	dec	r18
    edb0:	e1 f7       	brne	.-8      	; 0xedaa <_Z8fox2TextPc5Fox_t+0x62>
		}
		break;
    edb2:	b3 c0       	rjmp	.+358    	; 0xef1a <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case FOX_2:
		{
			sprintf(str, "Classic Fox 2 \"MOI\"");
    edb4:	8a 81       	ldd	r24, Y+2	; 0x02
    edb6:	9b 81       	ldd	r25, Y+3	; 0x03
    edb8:	24 e1       	ldi	r18, 0x14	; 20
    edba:	e6 e2       	ldi	r30, 0x26	; 38
    edbc:	f5 e4       	ldi	r31, 0x45	; 69
    edbe:	dc 01       	movw	r26, r24
    edc0:	01 90       	ld	r0, Z+
    edc2:	0d 92       	st	X+, r0
    edc4:	2a 95       	dec	r18
    edc6:	e1 f7       	brne	.-8      	; 0xedc0 <_Z8fox2TextPc5Fox_t+0x78>
		}
		break;
    edc8:	a8 c0       	rjmp	.+336    	; 0xef1a <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case FOX_3:
		{
			sprintf(str, "Classic Fox 3 \"MOS\"");
    edca:	8a 81       	ldd	r24, Y+2	; 0x02
    edcc:	9b 81       	ldd	r25, Y+3	; 0x03
    edce:	24 e1       	ldi	r18, 0x14	; 20
    edd0:	ea e3       	ldi	r30, 0x3A	; 58
    edd2:	f5 e4       	ldi	r31, 0x45	; 69
    edd4:	dc 01       	movw	r26, r24
    edd6:	01 90       	ld	r0, Z+
    edd8:	0d 92       	st	X+, r0
    edda:	2a 95       	dec	r18
    eddc:	e1 f7       	brne	.-8      	; 0xedd6 <_Z8fox2TextPc5Fox_t+0x8e>
		}
		break;
    edde:	9d c0       	rjmp	.+314    	; 0xef1a <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case FOX_4:
		{
			sprintf(str, "Classic Fox 4 \"MOH\"");
    ede0:	8a 81       	ldd	r24, Y+2	; 0x02
    ede2:	9b 81       	ldd	r25, Y+3	; 0x03
    ede4:	24 e1       	ldi	r18, 0x14	; 20
    ede6:	ee e4       	ldi	r30, 0x4E	; 78
    ede8:	f5 e4       	ldi	r31, 0x45	; 69
    edea:	dc 01       	movw	r26, r24
    edec:	01 90       	ld	r0, Z+
    edee:	0d 92       	st	X+, r0
    edf0:	2a 95       	dec	r18
    edf2:	e1 f7       	brne	.-8      	; 0xedec <_Z8fox2TextPc5Fox_t+0xa4>
		}
		break;
    edf4:	92 c0       	rjmp	.+292    	; 0xef1a <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case FOX_5:
		{
			sprintf(str, "Classic Fox 5 \"MO5\"");
    edf6:	8a 81       	ldd	r24, Y+2	; 0x02
    edf8:	9b 81       	ldd	r25, Y+3	; 0x03
    edfa:	24 e1       	ldi	r18, 0x14	; 20
    edfc:	e2 e6       	ldi	r30, 0x62	; 98
    edfe:	f5 e4       	ldi	r31, 0x45	; 69
    ee00:	dc 01       	movw	r26, r24
    ee02:	01 90       	ld	r0, Z+
    ee04:	0d 92       	st	X+, r0
    ee06:	2a 95       	dec	r18
    ee08:	e1 f7       	brne	.-8      	; 0xee02 <_Z8fox2TextPc5Fox_t+0xba>
		}
		break;
    ee0a:	87 c0       	rjmp	.+270    	; 0xef1a <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case FOXORING:
		{
			sprintf(str, "Foxoring");
    ee0c:	8a 81       	ldd	r24, Y+2	; 0x02
    ee0e:	9b 81       	ldd	r25, Y+3	; 0x03
    ee10:	29 e0       	ldi	r18, 0x09	; 9
    ee12:	e6 e7       	ldi	r30, 0x76	; 118
    ee14:	f5 e4       	ldi	r31, 0x45	; 69
    ee16:	dc 01       	movw	r26, r24
    ee18:	01 90       	ld	r0, Z+
    ee1a:	0d 92       	st	X+, r0
    ee1c:	2a 95       	dec	r18
    ee1e:	e1 f7       	brne	.-8      	; 0xee18 <_Z8fox2TextPc5Fox_t+0xd0>
		}
		break;
    ee20:	7c c0       	rjmp	.+248    	; 0xef1a <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPECTATOR:
		{
			sprintf(str, "Spectator \"S\"");
    ee22:	8a 81       	ldd	r24, Y+2	; 0x02
    ee24:	9b 81       	ldd	r25, Y+3	; 0x03
    ee26:	2e e0       	ldi	r18, 0x0E	; 14
    ee28:	ef e7       	ldi	r30, 0x7F	; 127
    ee2a:	f5 e4       	ldi	r31, 0x45	; 69
    ee2c:	dc 01       	movw	r26, r24
    ee2e:	01 90       	ld	r0, Z+
    ee30:	0d 92       	st	X+, r0
    ee32:	2a 95       	dec	r18
    ee34:	e1 f7       	brne	.-8      	; 0xee2e <_Z8fox2TextPc5Fox_t+0xe6>
		}
		break;
    ee36:	71 c0       	rjmp	.+226    	; 0xef1a <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_S1:
		{
			sprintf(str, "Sprint Slow 1 \"ME\"");
    ee38:	8a 81       	ldd	r24, Y+2	; 0x02
    ee3a:	9b 81       	ldd	r25, Y+3	; 0x03
    ee3c:	23 e1       	ldi	r18, 0x13	; 19
    ee3e:	ed e8       	ldi	r30, 0x8D	; 141
    ee40:	f5 e4       	ldi	r31, 0x45	; 69
    ee42:	dc 01       	movw	r26, r24
    ee44:	01 90       	ld	r0, Z+
    ee46:	0d 92       	st	X+, r0
    ee48:	2a 95       	dec	r18
    ee4a:	e1 f7       	brne	.-8      	; 0xee44 <_Z8fox2TextPc5Fox_t+0xfc>
		}
		break;
    ee4c:	66 c0       	rjmp	.+204    	; 0xef1a <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_S2:
		{
			sprintf(str, "Sprint Slow 2 \"MI\"");
    ee4e:	8a 81       	ldd	r24, Y+2	; 0x02
    ee50:	9b 81       	ldd	r25, Y+3	; 0x03
    ee52:	23 e1       	ldi	r18, 0x13	; 19
    ee54:	e0 ea       	ldi	r30, 0xA0	; 160
    ee56:	f5 e4       	ldi	r31, 0x45	; 69
    ee58:	dc 01       	movw	r26, r24
    ee5a:	01 90       	ld	r0, Z+
    ee5c:	0d 92       	st	X+, r0
    ee5e:	2a 95       	dec	r18
    ee60:	e1 f7       	brne	.-8      	; 0xee5a <_Z8fox2TextPc5Fox_t+0x112>
		}
		break;
    ee62:	5b c0       	rjmp	.+182    	; 0xef1a <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_S3:
		{
			sprintf(str, "Sprint Slow 3 \"MS\"");
    ee64:	8a 81       	ldd	r24, Y+2	; 0x02
    ee66:	9b 81       	ldd	r25, Y+3	; 0x03
    ee68:	23 e1       	ldi	r18, 0x13	; 19
    ee6a:	e3 eb       	ldi	r30, 0xB3	; 179
    ee6c:	f5 e4       	ldi	r31, 0x45	; 69
    ee6e:	dc 01       	movw	r26, r24
    ee70:	01 90       	ld	r0, Z+
    ee72:	0d 92       	st	X+, r0
    ee74:	2a 95       	dec	r18
    ee76:	e1 f7       	brne	.-8      	; 0xee70 <_Z8fox2TextPc5Fox_t+0x128>
		}
		break;
    ee78:	50 c0       	rjmp	.+160    	; 0xef1a <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_S4:
		{
			sprintf(str, "Sprint Slow 4 \"MH\"");
    ee7a:	8a 81       	ldd	r24, Y+2	; 0x02
    ee7c:	9b 81       	ldd	r25, Y+3	; 0x03
    ee7e:	23 e1       	ldi	r18, 0x13	; 19
    ee80:	e6 ec       	ldi	r30, 0xC6	; 198
    ee82:	f5 e4       	ldi	r31, 0x45	; 69
    ee84:	dc 01       	movw	r26, r24
    ee86:	01 90       	ld	r0, Z+
    ee88:	0d 92       	st	X+, r0
    ee8a:	2a 95       	dec	r18
    ee8c:	e1 f7       	brne	.-8      	; 0xee86 <_Z8fox2TextPc5Fox_t+0x13e>
		}
		break;
    ee8e:	45 c0       	rjmp	.+138    	; 0xef1a <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_S5:
		{
			sprintf(str, "Sprint Slow 5 \"M5\"");
    ee90:	8a 81       	ldd	r24, Y+2	; 0x02
    ee92:	9b 81       	ldd	r25, Y+3	; 0x03
    ee94:	23 e1       	ldi	r18, 0x13	; 19
    ee96:	e9 ed       	ldi	r30, 0xD9	; 217
    ee98:	f5 e4       	ldi	r31, 0x45	; 69
    ee9a:	dc 01       	movw	r26, r24
    ee9c:	01 90       	ld	r0, Z+
    ee9e:	0d 92       	st	X+, r0
    eea0:	2a 95       	dec	r18
    eea2:	e1 f7       	brne	.-8      	; 0xee9c <_Z8fox2TextPc5Fox_t+0x154>
		}
		break;
    eea4:	3a c0       	rjmp	.+116    	; 0xef1a <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_F1:
		{
			sprintf(str, "Sprint Fast 1 \"OE\"");
    eea6:	8a 81       	ldd	r24, Y+2	; 0x02
    eea8:	9b 81       	ldd	r25, Y+3	; 0x03
    eeaa:	23 e1       	ldi	r18, 0x13	; 19
    eeac:	ec ee       	ldi	r30, 0xEC	; 236
    eeae:	f5 e4       	ldi	r31, 0x45	; 69
    eeb0:	dc 01       	movw	r26, r24
    eeb2:	01 90       	ld	r0, Z+
    eeb4:	0d 92       	st	X+, r0
    eeb6:	2a 95       	dec	r18
    eeb8:	e1 f7       	brne	.-8      	; 0xeeb2 <_Z8fox2TextPc5Fox_t+0x16a>
		}
		break;
    eeba:	2f c0       	rjmp	.+94     	; 0xef1a <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_F2:
		{
			sprintf(str, "Sprint Fast 2 \"OI\"");
    eebc:	8a 81       	ldd	r24, Y+2	; 0x02
    eebe:	9b 81       	ldd	r25, Y+3	; 0x03
    eec0:	23 e1       	ldi	r18, 0x13	; 19
    eec2:	ef ef       	ldi	r30, 0xFF	; 255
    eec4:	f5 e4       	ldi	r31, 0x45	; 69
    eec6:	dc 01       	movw	r26, r24
    eec8:	01 90       	ld	r0, Z+
    eeca:	0d 92       	st	X+, r0
    eecc:	2a 95       	dec	r18
    eece:	e1 f7       	brne	.-8      	; 0xeec8 <_Z8fox2TextPc5Fox_t+0x180>
		}
		break;
    eed0:	24 c0       	rjmp	.+72     	; 0xef1a <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_F3:
		{
			sprintf(str, "Sprint Fast 3 \"OS\"");
    eed2:	8a 81       	ldd	r24, Y+2	; 0x02
    eed4:	9b 81       	ldd	r25, Y+3	; 0x03
    eed6:	23 e1       	ldi	r18, 0x13	; 19
    eed8:	e2 e1       	ldi	r30, 0x12	; 18
    eeda:	f6 e4       	ldi	r31, 0x46	; 70
    eedc:	dc 01       	movw	r26, r24
    eede:	01 90       	ld	r0, Z+
    eee0:	0d 92       	st	X+, r0
    eee2:	2a 95       	dec	r18
    eee4:	e1 f7       	brne	.-8      	; 0xeede <_Z8fox2TextPc5Fox_t+0x196>
		}
		break;
    eee6:	19 c0       	rjmp	.+50     	; 0xef1a <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_F4:
		{
			sprintf(str, "Sprint Fast 4 \"OH\"");
    eee8:	8a 81       	ldd	r24, Y+2	; 0x02
    eeea:	9b 81       	ldd	r25, Y+3	; 0x03
    eeec:	23 e1       	ldi	r18, 0x13	; 19
    eeee:	e5 e2       	ldi	r30, 0x25	; 37
    eef0:	f6 e4       	ldi	r31, 0x46	; 70
    eef2:	dc 01       	movw	r26, r24
    eef4:	01 90       	ld	r0, Z+
    eef6:	0d 92       	st	X+, r0
    eef8:	2a 95       	dec	r18
    eefa:	e1 f7       	brne	.-8      	; 0xeef4 <_Z8fox2TextPc5Fox_t+0x1ac>
		}
		break;
    eefc:	0e c0       	rjmp	.+28     	; 0xef1a <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_F5:
		{
			sprintf(str, "Sprint Fast 5 \"O5\"");
    eefe:	8a 81       	ldd	r24, Y+2	; 0x02
    ef00:	9b 81       	ldd	r25, Y+3	; 0x03
    ef02:	23 e1       	ldi	r18, 0x13	; 19
    ef04:	e8 e3       	ldi	r30, 0x38	; 56
    ef06:	f6 e4       	ldi	r31, 0x46	; 70
    ef08:	dc 01       	movw	r26, r24
    ef0a:	01 90       	ld	r0, Z+
    ef0c:	0d 92       	st	X+, r0
    ef0e:	2a 95       	dec	r18
    ef10:	e1 f7       	brne	.-8      	; 0xef0a <_Z8fox2TextPc5Fox_t+0x1c2>
		}
		break;
    ef12:	03 c0       	rjmp	.+6      	; 0xef1a <_Z8fox2TextPc5Fox_t+0x1d2>
		
		default:
		{
			failure = true;
    ef14:	81 e0       	ldi	r24, 0x01	; 1
    ef16:	89 83       	std	Y+1, r24	; 0x01
		}
		break;
    ef18:	00 00       	nop
	}
	
	return(failure);
    ef1a:	89 81       	ldd	r24, Y+1	; 0x01
    ef1c:	24 96       	adiw	r28, 0x04	; 4
    ef1e:	cd bf       	out	0x3d, r28	; 61
    ef20:	de bf       	out	0x3e, r29	; 62
    ef22:	df 91       	pop	r29
    ef24:	cf 91       	pop	r28
    ef26:	08 95       	ret

0000ef28 <__subsf3>:
    ef28:	50 58       	subi	r21, 0x80	; 128

0000ef2a <__addsf3>:
    ef2a:	bb 27       	eor	r27, r27
    ef2c:	aa 27       	eor	r26, r26
    ef2e:	0e 94 ac 77 	call	0xef58	; 0xef58 <__addsf3x>
    ef32:	0c 94 66 79 	jmp	0xf2cc	; 0xf2cc <__fp_round>
    ef36:	0e 94 58 79 	call	0xf2b0	; 0xf2b0 <__fp_pscA>
    ef3a:	38 f0       	brcs	.+14     	; 0xef4a <__addsf3+0x20>
    ef3c:	0e 94 5f 79 	call	0xf2be	; 0xf2be <__fp_pscB>
    ef40:	20 f0       	brcs	.+8      	; 0xef4a <__addsf3+0x20>
    ef42:	39 f4       	brne	.+14     	; 0xef52 <__addsf3+0x28>
    ef44:	9f 3f       	cpi	r25, 0xFF	; 255
    ef46:	19 f4       	brne	.+6      	; 0xef4e <__addsf3+0x24>
    ef48:	26 f4       	brtc	.+8      	; 0xef52 <__addsf3+0x28>
    ef4a:	0c 94 55 79 	jmp	0xf2aa	; 0xf2aa <__fp_nan>
    ef4e:	0e f4       	brtc	.+2      	; 0xef52 <__addsf3+0x28>
    ef50:	e0 95       	com	r30
    ef52:	e7 fb       	bst	r30, 7
    ef54:	0c 94 26 79 	jmp	0xf24c	; 0xf24c <__fp_inf>

0000ef58 <__addsf3x>:
    ef58:	e9 2f       	mov	r30, r25
    ef5a:	0e 94 77 79 	call	0xf2ee	; 0xf2ee <__fp_split3>
    ef5e:	58 f3       	brcs	.-42     	; 0xef36 <__addsf3+0xc>
    ef60:	ba 17       	cp	r27, r26
    ef62:	62 07       	cpc	r22, r18
    ef64:	73 07       	cpc	r23, r19
    ef66:	84 07       	cpc	r24, r20
    ef68:	95 07       	cpc	r25, r21
    ef6a:	20 f0       	brcs	.+8      	; 0xef74 <__addsf3x+0x1c>
    ef6c:	79 f4       	brne	.+30     	; 0xef8c <__addsf3x+0x34>
    ef6e:	a6 f5       	brtc	.+104    	; 0xefd8 <__addsf3x+0x80>
    ef70:	0c 94 b1 79 	jmp	0xf362	; 0xf362 <__fp_zero>
    ef74:	0e f4       	brtc	.+2      	; 0xef78 <__addsf3x+0x20>
    ef76:	e0 95       	com	r30
    ef78:	0b 2e       	mov	r0, r27
    ef7a:	ba 2f       	mov	r27, r26
    ef7c:	a0 2d       	mov	r26, r0
    ef7e:	0b 01       	movw	r0, r22
    ef80:	b9 01       	movw	r22, r18
    ef82:	90 01       	movw	r18, r0
    ef84:	0c 01       	movw	r0, r24
    ef86:	ca 01       	movw	r24, r20
    ef88:	a0 01       	movw	r20, r0
    ef8a:	11 24       	eor	r1, r1
    ef8c:	ff 27       	eor	r31, r31
    ef8e:	59 1b       	sub	r21, r25
    ef90:	99 f0       	breq	.+38     	; 0xefb8 <__addsf3x+0x60>
    ef92:	59 3f       	cpi	r21, 0xF9	; 249
    ef94:	50 f4       	brcc	.+20     	; 0xefaa <__addsf3x+0x52>
    ef96:	50 3e       	cpi	r21, 0xE0	; 224
    ef98:	68 f1       	brcs	.+90     	; 0xeff4 <__addsf3x+0x9c>
    ef9a:	1a 16       	cp	r1, r26
    ef9c:	f0 40       	sbci	r31, 0x00	; 0
    ef9e:	a2 2f       	mov	r26, r18
    efa0:	23 2f       	mov	r18, r19
    efa2:	34 2f       	mov	r19, r20
    efa4:	44 27       	eor	r20, r20
    efa6:	58 5f       	subi	r21, 0xF8	; 248
    efa8:	f3 cf       	rjmp	.-26     	; 0xef90 <__addsf3x+0x38>
    efaa:	46 95       	lsr	r20
    efac:	37 95       	ror	r19
    efae:	27 95       	ror	r18
    efb0:	a7 95       	ror	r26
    efb2:	f0 40       	sbci	r31, 0x00	; 0
    efb4:	53 95       	inc	r21
    efb6:	c9 f7       	brne	.-14     	; 0xefaa <__addsf3x+0x52>
    efb8:	7e f4       	brtc	.+30     	; 0xefd8 <__addsf3x+0x80>
    efba:	1f 16       	cp	r1, r31
    efbc:	ba 0b       	sbc	r27, r26
    efbe:	62 0b       	sbc	r22, r18
    efc0:	73 0b       	sbc	r23, r19
    efc2:	84 0b       	sbc	r24, r20
    efc4:	ba f0       	brmi	.+46     	; 0xeff4 <__addsf3x+0x9c>
    efc6:	91 50       	subi	r25, 0x01	; 1
    efc8:	a1 f0       	breq	.+40     	; 0xeff2 <__addsf3x+0x9a>
    efca:	ff 0f       	add	r31, r31
    efcc:	bb 1f       	adc	r27, r27
    efce:	66 1f       	adc	r22, r22
    efd0:	77 1f       	adc	r23, r23
    efd2:	88 1f       	adc	r24, r24
    efd4:	c2 f7       	brpl	.-16     	; 0xefc6 <__addsf3x+0x6e>
    efd6:	0e c0       	rjmp	.+28     	; 0xeff4 <__addsf3x+0x9c>
    efd8:	ba 0f       	add	r27, r26
    efda:	62 1f       	adc	r22, r18
    efdc:	73 1f       	adc	r23, r19
    efde:	84 1f       	adc	r24, r20
    efe0:	48 f4       	brcc	.+18     	; 0xeff4 <__addsf3x+0x9c>
    efe2:	87 95       	ror	r24
    efe4:	77 95       	ror	r23
    efe6:	67 95       	ror	r22
    efe8:	b7 95       	ror	r27
    efea:	f7 95       	ror	r31
    efec:	9e 3f       	cpi	r25, 0xFE	; 254
    efee:	08 f0       	brcs	.+2      	; 0xeff2 <__addsf3x+0x9a>
    eff0:	b0 cf       	rjmp	.-160    	; 0xef52 <__addsf3+0x28>
    eff2:	93 95       	inc	r25
    eff4:	88 0f       	add	r24, r24
    eff6:	08 f0       	brcs	.+2      	; 0xeffa <__addsf3x+0xa2>
    eff8:	99 27       	eor	r25, r25
    effa:	ee 0f       	add	r30, r30
    effc:	97 95       	ror	r25
    effe:	87 95       	ror	r24
    f000:	08 95       	ret

0000f002 <ceil>:
    f002:	0e 94 99 79 	call	0xf332	; 0xf332 <__fp_trunc>
    f006:	90 f0       	brcs	.+36     	; 0xf02c <ceil+0x2a>
    f008:	9f 37       	cpi	r25, 0x7F	; 127
    f00a:	48 f4       	brcc	.+18     	; 0xf01e <ceil+0x1c>
    f00c:	91 11       	cpse	r25, r1
    f00e:	16 f4       	brtc	.+4      	; 0xf014 <ceil+0x12>
    f010:	0c 94 b2 79 	jmp	0xf364	; 0xf364 <__fp_szero>
    f014:	60 e0       	ldi	r22, 0x00	; 0
    f016:	70 e0       	ldi	r23, 0x00	; 0
    f018:	80 e8       	ldi	r24, 0x80	; 128
    f01a:	9f e3       	ldi	r25, 0x3F	; 63
    f01c:	08 95       	ret
    f01e:	26 f0       	brts	.+8      	; 0xf028 <ceil+0x26>
    f020:	1b 16       	cp	r1, r27
    f022:	61 1d       	adc	r22, r1
    f024:	71 1d       	adc	r23, r1
    f026:	81 1d       	adc	r24, r1
    f028:	0c 94 2c 79 	jmp	0xf258	; 0xf258 <__fp_mintl>
    f02c:	0c 94 47 79 	jmp	0xf28e	; 0xf28e <__fp_mpack>

0000f030 <__cmpsf2>:
    f030:	0e 94 02 79 	call	0xf204	; 0xf204 <__fp_cmp>
    f034:	08 f4       	brcc	.+2      	; 0xf038 <__cmpsf2+0x8>
    f036:	81 e0       	ldi	r24, 0x01	; 1
    f038:	08 95       	ret

0000f03a <__divsf3>:
    f03a:	0e 94 31 78 	call	0xf062	; 0xf062 <__divsf3x>
    f03e:	0c 94 66 79 	jmp	0xf2cc	; 0xf2cc <__fp_round>
    f042:	0e 94 5f 79 	call	0xf2be	; 0xf2be <__fp_pscB>
    f046:	58 f0       	brcs	.+22     	; 0xf05e <__divsf3+0x24>
    f048:	0e 94 58 79 	call	0xf2b0	; 0xf2b0 <__fp_pscA>
    f04c:	40 f0       	brcs	.+16     	; 0xf05e <__divsf3+0x24>
    f04e:	29 f4       	brne	.+10     	; 0xf05a <__divsf3+0x20>
    f050:	5f 3f       	cpi	r21, 0xFF	; 255
    f052:	29 f0       	breq	.+10     	; 0xf05e <__divsf3+0x24>
    f054:	0c 94 26 79 	jmp	0xf24c	; 0xf24c <__fp_inf>
    f058:	51 11       	cpse	r21, r1
    f05a:	0c 94 b2 79 	jmp	0xf364	; 0xf364 <__fp_szero>
    f05e:	0c 94 55 79 	jmp	0xf2aa	; 0xf2aa <__fp_nan>

0000f062 <__divsf3x>:
    f062:	0e 94 77 79 	call	0xf2ee	; 0xf2ee <__fp_split3>
    f066:	68 f3       	brcs	.-38     	; 0xf042 <__divsf3+0x8>

0000f068 <__divsf3_pse>:
    f068:	99 23       	and	r25, r25
    f06a:	b1 f3       	breq	.-20     	; 0xf058 <__divsf3+0x1e>
    f06c:	55 23       	and	r21, r21
    f06e:	91 f3       	breq	.-28     	; 0xf054 <__divsf3+0x1a>
    f070:	95 1b       	sub	r25, r21
    f072:	55 0b       	sbc	r21, r21
    f074:	bb 27       	eor	r27, r27
    f076:	aa 27       	eor	r26, r26
    f078:	62 17       	cp	r22, r18
    f07a:	73 07       	cpc	r23, r19
    f07c:	84 07       	cpc	r24, r20
    f07e:	38 f0       	brcs	.+14     	; 0xf08e <__divsf3_pse+0x26>
    f080:	9f 5f       	subi	r25, 0xFF	; 255
    f082:	5f 4f       	sbci	r21, 0xFF	; 255
    f084:	22 0f       	add	r18, r18
    f086:	33 1f       	adc	r19, r19
    f088:	44 1f       	adc	r20, r20
    f08a:	aa 1f       	adc	r26, r26
    f08c:	a9 f3       	breq	.-22     	; 0xf078 <__divsf3_pse+0x10>
    f08e:	35 d0       	rcall	.+106    	; 0xf0fa <__divsf3_pse+0x92>
    f090:	0e 2e       	mov	r0, r30
    f092:	3a f0       	brmi	.+14     	; 0xf0a2 <__divsf3_pse+0x3a>
    f094:	e0 e8       	ldi	r30, 0x80	; 128
    f096:	32 d0       	rcall	.+100    	; 0xf0fc <__divsf3_pse+0x94>
    f098:	91 50       	subi	r25, 0x01	; 1
    f09a:	50 40       	sbci	r21, 0x00	; 0
    f09c:	e6 95       	lsr	r30
    f09e:	00 1c       	adc	r0, r0
    f0a0:	ca f7       	brpl	.-14     	; 0xf094 <__divsf3_pse+0x2c>
    f0a2:	2b d0       	rcall	.+86     	; 0xf0fa <__divsf3_pse+0x92>
    f0a4:	fe 2f       	mov	r31, r30
    f0a6:	29 d0       	rcall	.+82     	; 0xf0fa <__divsf3_pse+0x92>
    f0a8:	66 0f       	add	r22, r22
    f0aa:	77 1f       	adc	r23, r23
    f0ac:	88 1f       	adc	r24, r24
    f0ae:	bb 1f       	adc	r27, r27
    f0b0:	26 17       	cp	r18, r22
    f0b2:	37 07       	cpc	r19, r23
    f0b4:	48 07       	cpc	r20, r24
    f0b6:	ab 07       	cpc	r26, r27
    f0b8:	b0 e8       	ldi	r27, 0x80	; 128
    f0ba:	09 f0       	breq	.+2      	; 0xf0be <__divsf3_pse+0x56>
    f0bc:	bb 0b       	sbc	r27, r27
    f0be:	80 2d       	mov	r24, r0
    f0c0:	bf 01       	movw	r22, r30
    f0c2:	ff 27       	eor	r31, r31
    f0c4:	93 58       	subi	r25, 0x83	; 131
    f0c6:	5f 4f       	sbci	r21, 0xFF	; 255
    f0c8:	3a f0       	brmi	.+14     	; 0xf0d8 <__divsf3_pse+0x70>
    f0ca:	9e 3f       	cpi	r25, 0xFE	; 254
    f0cc:	51 05       	cpc	r21, r1
    f0ce:	78 f0       	brcs	.+30     	; 0xf0ee <__divsf3_pse+0x86>
    f0d0:	0c 94 26 79 	jmp	0xf24c	; 0xf24c <__fp_inf>
    f0d4:	0c 94 b2 79 	jmp	0xf364	; 0xf364 <__fp_szero>
    f0d8:	5f 3f       	cpi	r21, 0xFF	; 255
    f0da:	e4 f3       	brlt	.-8      	; 0xf0d4 <__divsf3_pse+0x6c>
    f0dc:	98 3e       	cpi	r25, 0xE8	; 232
    f0de:	d4 f3       	brlt	.-12     	; 0xf0d4 <__divsf3_pse+0x6c>
    f0e0:	86 95       	lsr	r24
    f0e2:	77 95       	ror	r23
    f0e4:	67 95       	ror	r22
    f0e6:	b7 95       	ror	r27
    f0e8:	f7 95       	ror	r31
    f0ea:	9f 5f       	subi	r25, 0xFF	; 255
    f0ec:	c9 f7       	brne	.-14     	; 0xf0e0 <__divsf3_pse+0x78>
    f0ee:	88 0f       	add	r24, r24
    f0f0:	91 1d       	adc	r25, r1
    f0f2:	96 95       	lsr	r25
    f0f4:	87 95       	ror	r24
    f0f6:	97 f9       	bld	r25, 7
    f0f8:	08 95       	ret
    f0fa:	e1 e0       	ldi	r30, 0x01	; 1
    f0fc:	66 0f       	add	r22, r22
    f0fe:	77 1f       	adc	r23, r23
    f100:	88 1f       	adc	r24, r24
    f102:	bb 1f       	adc	r27, r27
    f104:	62 17       	cp	r22, r18
    f106:	73 07       	cpc	r23, r19
    f108:	84 07       	cpc	r24, r20
    f10a:	ba 07       	cpc	r27, r26
    f10c:	20 f0       	brcs	.+8      	; 0xf116 <__divsf3_pse+0xae>
    f10e:	62 1b       	sub	r22, r18
    f110:	73 0b       	sbc	r23, r19
    f112:	84 0b       	sbc	r24, r20
    f114:	ba 0b       	sbc	r27, r26
    f116:	ee 1f       	adc	r30, r30
    f118:	88 f7       	brcc	.-30     	; 0xf0fc <__divsf3_pse+0x94>
    f11a:	e0 95       	com	r30
    f11c:	08 95       	ret

0000f11e <__fixsfsi>:
    f11e:	0e 94 96 78 	call	0xf12c	; 0xf12c <__fixunssfsi>
    f122:	68 94       	set
    f124:	b1 11       	cpse	r27, r1
    f126:	0c 94 b2 79 	jmp	0xf364	; 0xf364 <__fp_szero>
    f12a:	08 95       	ret

0000f12c <__fixunssfsi>:
    f12c:	0e 94 7f 79 	call	0xf2fe	; 0xf2fe <__fp_splitA>
    f130:	88 f0       	brcs	.+34     	; 0xf154 <__fixunssfsi+0x28>
    f132:	9f 57       	subi	r25, 0x7F	; 127
    f134:	98 f0       	brcs	.+38     	; 0xf15c <__fixunssfsi+0x30>
    f136:	b9 2f       	mov	r27, r25
    f138:	99 27       	eor	r25, r25
    f13a:	b7 51       	subi	r27, 0x17	; 23
    f13c:	b0 f0       	brcs	.+44     	; 0xf16a <__fixunssfsi+0x3e>
    f13e:	e1 f0       	breq	.+56     	; 0xf178 <__fixunssfsi+0x4c>
    f140:	66 0f       	add	r22, r22
    f142:	77 1f       	adc	r23, r23
    f144:	88 1f       	adc	r24, r24
    f146:	99 1f       	adc	r25, r25
    f148:	1a f0       	brmi	.+6      	; 0xf150 <__fixunssfsi+0x24>
    f14a:	ba 95       	dec	r27
    f14c:	c9 f7       	brne	.-14     	; 0xf140 <__fixunssfsi+0x14>
    f14e:	14 c0       	rjmp	.+40     	; 0xf178 <__fixunssfsi+0x4c>
    f150:	b1 30       	cpi	r27, 0x01	; 1
    f152:	91 f0       	breq	.+36     	; 0xf178 <__fixunssfsi+0x4c>
    f154:	0e 94 b1 79 	call	0xf362	; 0xf362 <__fp_zero>
    f158:	b1 e0       	ldi	r27, 0x01	; 1
    f15a:	08 95       	ret
    f15c:	0c 94 b1 79 	jmp	0xf362	; 0xf362 <__fp_zero>
    f160:	67 2f       	mov	r22, r23
    f162:	78 2f       	mov	r23, r24
    f164:	88 27       	eor	r24, r24
    f166:	b8 5f       	subi	r27, 0xF8	; 248
    f168:	39 f0       	breq	.+14     	; 0xf178 <__fixunssfsi+0x4c>
    f16a:	b9 3f       	cpi	r27, 0xF9	; 249
    f16c:	cc f3       	brlt	.-14     	; 0xf160 <__fixunssfsi+0x34>
    f16e:	86 95       	lsr	r24
    f170:	77 95       	ror	r23
    f172:	67 95       	ror	r22
    f174:	b3 95       	inc	r27
    f176:	d9 f7       	brne	.-10     	; 0xf16e <__fixunssfsi+0x42>
    f178:	3e f4       	brtc	.+14     	; 0xf188 <__fixunssfsi+0x5c>
    f17a:	90 95       	com	r25
    f17c:	80 95       	com	r24
    f17e:	70 95       	com	r23
    f180:	61 95       	neg	r22
    f182:	7f 4f       	sbci	r23, 0xFF	; 255
    f184:	8f 4f       	sbci	r24, 0xFF	; 255
    f186:	9f 4f       	sbci	r25, 0xFF	; 255
    f188:	08 95       	ret

0000f18a <__floatunsisf>:
    f18a:	e8 94       	clt
    f18c:	09 c0       	rjmp	.+18     	; 0xf1a0 <__floatsisf+0x12>

0000f18e <__floatsisf>:
    f18e:	97 fb       	bst	r25, 7
    f190:	3e f4       	brtc	.+14     	; 0xf1a0 <__floatsisf+0x12>
    f192:	90 95       	com	r25
    f194:	80 95       	com	r24
    f196:	70 95       	com	r23
    f198:	61 95       	neg	r22
    f19a:	7f 4f       	sbci	r23, 0xFF	; 255
    f19c:	8f 4f       	sbci	r24, 0xFF	; 255
    f19e:	9f 4f       	sbci	r25, 0xFF	; 255
    f1a0:	99 23       	and	r25, r25
    f1a2:	a9 f0       	breq	.+42     	; 0xf1ce <__floatsisf+0x40>
    f1a4:	f9 2f       	mov	r31, r25
    f1a6:	96 e9       	ldi	r25, 0x96	; 150
    f1a8:	bb 27       	eor	r27, r27
    f1aa:	93 95       	inc	r25
    f1ac:	f6 95       	lsr	r31
    f1ae:	87 95       	ror	r24
    f1b0:	77 95       	ror	r23
    f1b2:	67 95       	ror	r22
    f1b4:	b7 95       	ror	r27
    f1b6:	f1 11       	cpse	r31, r1
    f1b8:	f8 cf       	rjmp	.-16     	; 0xf1aa <__floatsisf+0x1c>
    f1ba:	fa f4       	brpl	.+62     	; 0xf1fa <__floatsisf+0x6c>
    f1bc:	bb 0f       	add	r27, r27
    f1be:	11 f4       	brne	.+4      	; 0xf1c4 <__floatsisf+0x36>
    f1c0:	60 ff       	sbrs	r22, 0
    f1c2:	1b c0       	rjmp	.+54     	; 0xf1fa <__floatsisf+0x6c>
    f1c4:	6f 5f       	subi	r22, 0xFF	; 255
    f1c6:	7f 4f       	sbci	r23, 0xFF	; 255
    f1c8:	8f 4f       	sbci	r24, 0xFF	; 255
    f1ca:	9f 4f       	sbci	r25, 0xFF	; 255
    f1cc:	16 c0       	rjmp	.+44     	; 0xf1fa <__floatsisf+0x6c>
    f1ce:	88 23       	and	r24, r24
    f1d0:	11 f0       	breq	.+4      	; 0xf1d6 <__floatsisf+0x48>
    f1d2:	96 e9       	ldi	r25, 0x96	; 150
    f1d4:	11 c0       	rjmp	.+34     	; 0xf1f8 <__floatsisf+0x6a>
    f1d6:	77 23       	and	r23, r23
    f1d8:	21 f0       	breq	.+8      	; 0xf1e2 <__floatsisf+0x54>
    f1da:	9e e8       	ldi	r25, 0x8E	; 142
    f1dc:	87 2f       	mov	r24, r23
    f1de:	76 2f       	mov	r23, r22
    f1e0:	05 c0       	rjmp	.+10     	; 0xf1ec <__floatsisf+0x5e>
    f1e2:	66 23       	and	r22, r22
    f1e4:	71 f0       	breq	.+28     	; 0xf202 <__floatsisf+0x74>
    f1e6:	96 e8       	ldi	r25, 0x86	; 134
    f1e8:	86 2f       	mov	r24, r22
    f1ea:	70 e0       	ldi	r23, 0x00	; 0
    f1ec:	60 e0       	ldi	r22, 0x00	; 0
    f1ee:	2a f0       	brmi	.+10     	; 0xf1fa <__floatsisf+0x6c>
    f1f0:	9a 95       	dec	r25
    f1f2:	66 0f       	add	r22, r22
    f1f4:	77 1f       	adc	r23, r23
    f1f6:	88 1f       	adc	r24, r24
    f1f8:	da f7       	brpl	.-10     	; 0xf1f0 <__floatsisf+0x62>
    f1fa:	88 0f       	add	r24, r24
    f1fc:	96 95       	lsr	r25
    f1fe:	87 95       	ror	r24
    f200:	97 f9       	bld	r25, 7
    f202:	08 95       	ret

0000f204 <__fp_cmp>:
    f204:	99 0f       	add	r25, r25
    f206:	00 08       	sbc	r0, r0
    f208:	55 0f       	add	r21, r21
    f20a:	aa 0b       	sbc	r26, r26
    f20c:	e0 e8       	ldi	r30, 0x80	; 128
    f20e:	fe ef       	ldi	r31, 0xFE	; 254
    f210:	16 16       	cp	r1, r22
    f212:	17 06       	cpc	r1, r23
    f214:	e8 07       	cpc	r30, r24
    f216:	f9 07       	cpc	r31, r25
    f218:	c0 f0       	brcs	.+48     	; 0xf24a <__fp_cmp+0x46>
    f21a:	12 16       	cp	r1, r18
    f21c:	13 06       	cpc	r1, r19
    f21e:	e4 07       	cpc	r30, r20
    f220:	f5 07       	cpc	r31, r21
    f222:	98 f0       	brcs	.+38     	; 0xf24a <__fp_cmp+0x46>
    f224:	62 1b       	sub	r22, r18
    f226:	73 0b       	sbc	r23, r19
    f228:	84 0b       	sbc	r24, r20
    f22a:	95 0b       	sbc	r25, r21
    f22c:	39 f4       	brne	.+14     	; 0xf23c <__fp_cmp+0x38>
    f22e:	0a 26       	eor	r0, r26
    f230:	61 f0       	breq	.+24     	; 0xf24a <__fp_cmp+0x46>
    f232:	23 2b       	or	r18, r19
    f234:	24 2b       	or	r18, r20
    f236:	25 2b       	or	r18, r21
    f238:	21 f4       	brne	.+8      	; 0xf242 <__fp_cmp+0x3e>
    f23a:	08 95       	ret
    f23c:	0a 26       	eor	r0, r26
    f23e:	09 f4       	brne	.+2      	; 0xf242 <__fp_cmp+0x3e>
    f240:	a1 40       	sbci	r26, 0x01	; 1
    f242:	a6 95       	lsr	r26
    f244:	8f ef       	ldi	r24, 0xFF	; 255
    f246:	81 1d       	adc	r24, r1
    f248:	81 1d       	adc	r24, r1
    f24a:	08 95       	ret

0000f24c <__fp_inf>:
    f24c:	97 f9       	bld	r25, 7
    f24e:	9f 67       	ori	r25, 0x7F	; 127
    f250:	80 e8       	ldi	r24, 0x80	; 128
    f252:	70 e0       	ldi	r23, 0x00	; 0
    f254:	60 e0       	ldi	r22, 0x00	; 0
    f256:	08 95       	ret

0000f258 <__fp_mintl>:
    f258:	88 23       	and	r24, r24
    f25a:	71 f4       	brne	.+28     	; 0xf278 <__fp_mintl+0x20>
    f25c:	77 23       	and	r23, r23
    f25e:	21 f0       	breq	.+8      	; 0xf268 <__fp_mintl+0x10>
    f260:	98 50       	subi	r25, 0x08	; 8
    f262:	87 2b       	or	r24, r23
    f264:	76 2f       	mov	r23, r22
    f266:	07 c0       	rjmp	.+14     	; 0xf276 <__fp_mintl+0x1e>
    f268:	66 23       	and	r22, r22
    f26a:	11 f4       	brne	.+4      	; 0xf270 <__fp_mintl+0x18>
    f26c:	99 27       	eor	r25, r25
    f26e:	0d c0       	rjmp	.+26     	; 0xf28a <__fp_mintl+0x32>
    f270:	90 51       	subi	r25, 0x10	; 16
    f272:	86 2b       	or	r24, r22
    f274:	70 e0       	ldi	r23, 0x00	; 0
    f276:	60 e0       	ldi	r22, 0x00	; 0
    f278:	2a f0       	brmi	.+10     	; 0xf284 <__fp_mintl+0x2c>
    f27a:	9a 95       	dec	r25
    f27c:	66 0f       	add	r22, r22
    f27e:	77 1f       	adc	r23, r23
    f280:	88 1f       	adc	r24, r24
    f282:	da f7       	brpl	.-10     	; 0xf27a <__fp_mintl+0x22>
    f284:	88 0f       	add	r24, r24
    f286:	96 95       	lsr	r25
    f288:	87 95       	ror	r24
    f28a:	97 f9       	bld	r25, 7
    f28c:	08 95       	ret

0000f28e <__fp_mpack>:
    f28e:	9f 3f       	cpi	r25, 0xFF	; 255
    f290:	31 f0       	breq	.+12     	; 0xf29e <__fp_mpack_finite+0xc>

0000f292 <__fp_mpack_finite>:
    f292:	91 50       	subi	r25, 0x01	; 1
    f294:	20 f4       	brcc	.+8      	; 0xf29e <__fp_mpack_finite+0xc>
    f296:	87 95       	ror	r24
    f298:	77 95       	ror	r23
    f29a:	67 95       	ror	r22
    f29c:	b7 95       	ror	r27
    f29e:	88 0f       	add	r24, r24
    f2a0:	91 1d       	adc	r25, r1
    f2a2:	96 95       	lsr	r25
    f2a4:	87 95       	ror	r24
    f2a6:	97 f9       	bld	r25, 7
    f2a8:	08 95       	ret

0000f2aa <__fp_nan>:
    f2aa:	9f ef       	ldi	r25, 0xFF	; 255
    f2ac:	80 ec       	ldi	r24, 0xC0	; 192
    f2ae:	08 95       	ret

0000f2b0 <__fp_pscA>:
    f2b0:	00 24       	eor	r0, r0
    f2b2:	0a 94       	dec	r0
    f2b4:	16 16       	cp	r1, r22
    f2b6:	17 06       	cpc	r1, r23
    f2b8:	18 06       	cpc	r1, r24
    f2ba:	09 06       	cpc	r0, r25
    f2bc:	08 95       	ret

0000f2be <__fp_pscB>:
    f2be:	00 24       	eor	r0, r0
    f2c0:	0a 94       	dec	r0
    f2c2:	12 16       	cp	r1, r18
    f2c4:	13 06       	cpc	r1, r19
    f2c6:	14 06       	cpc	r1, r20
    f2c8:	05 06       	cpc	r0, r21
    f2ca:	08 95       	ret

0000f2cc <__fp_round>:
    f2cc:	09 2e       	mov	r0, r25
    f2ce:	03 94       	inc	r0
    f2d0:	00 0c       	add	r0, r0
    f2d2:	11 f4       	brne	.+4      	; 0xf2d8 <__fp_round+0xc>
    f2d4:	88 23       	and	r24, r24
    f2d6:	52 f0       	brmi	.+20     	; 0xf2ec <__fp_round+0x20>
    f2d8:	bb 0f       	add	r27, r27
    f2da:	40 f4       	brcc	.+16     	; 0xf2ec <__fp_round+0x20>
    f2dc:	bf 2b       	or	r27, r31
    f2de:	11 f4       	brne	.+4      	; 0xf2e4 <__fp_round+0x18>
    f2e0:	60 ff       	sbrs	r22, 0
    f2e2:	04 c0       	rjmp	.+8      	; 0xf2ec <__fp_round+0x20>
    f2e4:	6f 5f       	subi	r22, 0xFF	; 255
    f2e6:	7f 4f       	sbci	r23, 0xFF	; 255
    f2e8:	8f 4f       	sbci	r24, 0xFF	; 255
    f2ea:	9f 4f       	sbci	r25, 0xFF	; 255
    f2ec:	08 95       	ret

0000f2ee <__fp_split3>:
    f2ee:	57 fd       	sbrc	r21, 7
    f2f0:	90 58       	subi	r25, 0x80	; 128
    f2f2:	44 0f       	add	r20, r20
    f2f4:	55 1f       	adc	r21, r21
    f2f6:	59 f0       	breq	.+22     	; 0xf30e <__fp_splitA+0x10>
    f2f8:	5f 3f       	cpi	r21, 0xFF	; 255
    f2fa:	71 f0       	breq	.+28     	; 0xf318 <__fp_splitA+0x1a>
    f2fc:	47 95       	ror	r20

0000f2fe <__fp_splitA>:
    f2fe:	88 0f       	add	r24, r24
    f300:	97 fb       	bst	r25, 7
    f302:	99 1f       	adc	r25, r25
    f304:	61 f0       	breq	.+24     	; 0xf31e <__fp_splitA+0x20>
    f306:	9f 3f       	cpi	r25, 0xFF	; 255
    f308:	79 f0       	breq	.+30     	; 0xf328 <__fp_splitA+0x2a>
    f30a:	87 95       	ror	r24
    f30c:	08 95       	ret
    f30e:	12 16       	cp	r1, r18
    f310:	13 06       	cpc	r1, r19
    f312:	14 06       	cpc	r1, r20
    f314:	55 1f       	adc	r21, r21
    f316:	f2 cf       	rjmp	.-28     	; 0xf2fc <__fp_split3+0xe>
    f318:	46 95       	lsr	r20
    f31a:	f1 df       	rcall	.-30     	; 0xf2fe <__fp_splitA>
    f31c:	08 c0       	rjmp	.+16     	; 0xf32e <__fp_splitA+0x30>
    f31e:	16 16       	cp	r1, r22
    f320:	17 06       	cpc	r1, r23
    f322:	18 06       	cpc	r1, r24
    f324:	99 1f       	adc	r25, r25
    f326:	f1 cf       	rjmp	.-30     	; 0xf30a <__fp_splitA+0xc>
    f328:	86 95       	lsr	r24
    f32a:	71 05       	cpc	r23, r1
    f32c:	61 05       	cpc	r22, r1
    f32e:	08 94       	sec
    f330:	08 95       	ret

0000f332 <__fp_trunc>:
    f332:	0e 94 7f 79 	call	0xf2fe	; 0xf2fe <__fp_splitA>
    f336:	a0 f0       	brcs	.+40     	; 0xf360 <__fp_trunc+0x2e>
    f338:	be e7       	ldi	r27, 0x7E	; 126
    f33a:	b9 17       	cp	r27, r25
    f33c:	88 f4       	brcc	.+34     	; 0xf360 <__fp_trunc+0x2e>
    f33e:	bb 27       	eor	r27, r27
    f340:	9f 38       	cpi	r25, 0x8F	; 143
    f342:	60 f4       	brcc	.+24     	; 0xf35c <__fp_trunc+0x2a>
    f344:	16 16       	cp	r1, r22
    f346:	b1 1d       	adc	r27, r1
    f348:	67 2f       	mov	r22, r23
    f34a:	78 2f       	mov	r23, r24
    f34c:	88 27       	eor	r24, r24
    f34e:	98 5f       	subi	r25, 0xF8	; 248
    f350:	f7 cf       	rjmp	.-18     	; 0xf340 <__fp_trunc+0xe>
    f352:	86 95       	lsr	r24
    f354:	77 95       	ror	r23
    f356:	67 95       	ror	r22
    f358:	b1 1d       	adc	r27, r1
    f35a:	93 95       	inc	r25
    f35c:	96 39       	cpi	r25, 0x96	; 150
    f35e:	c8 f3       	brcs	.-14     	; 0xf352 <__fp_trunc+0x20>
    f360:	08 95       	ret

0000f362 <__fp_zero>:
    f362:	e8 94       	clt

0000f364 <__fp_szero>:
    f364:	bb 27       	eor	r27, r27
    f366:	66 27       	eor	r22, r22
    f368:	77 27       	eor	r23, r23
    f36a:	cb 01       	movw	r24, r22
    f36c:	97 f9       	bld	r25, 7
    f36e:	08 95       	ret

0000f370 <__gesf2>:
    f370:	0e 94 02 79 	call	0xf204	; 0xf204 <__fp_cmp>
    f374:	08 f4       	brcc	.+2      	; 0xf378 <__gesf2+0x8>
    f376:	8f ef       	ldi	r24, 0xFF	; 255
    f378:	08 95       	ret

0000f37a <__mulsf3>:
    f37a:	0e 94 d0 79 	call	0xf3a0	; 0xf3a0 <__mulsf3x>
    f37e:	0c 94 66 79 	jmp	0xf2cc	; 0xf2cc <__fp_round>
    f382:	0e 94 58 79 	call	0xf2b0	; 0xf2b0 <__fp_pscA>
    f386:	38 f0       	brcs	.+14     	; 0xf396 <__mulsf3+0x1c>
    f388:	0e 94 5f 79 	call	0xf2be	; 0xf2be <__fp_pscB>
    f38c:	20 f0       	brcs	.+8      	; 0xf396 <__mulsf3+0x1c>
    f38e:	95 23       	and	r25, r21
    f390:	11 f0       	breq	.+4      	; 0xf396 <__mulsf3+0x1c>
    f392:	0c 94 26 79 	jmp	0xf24c	; 0xf24c <__fp_inf>
    f396:	0c 94 55 79 	jmp	0xf2aa	; 0xf2aa <__fp_nan>
    f39a:	11 24       	eor	r1, r1
    f39c:	0c 94 b2 79 	jmp	0xf364	; 0xf364 <__fp_szero>

0000f3a0 <__mulsf3x>:
    f3a0:	0e 94 77 79 	call	0xf2ee	; 0xf2ee <__fp_split3>
    f3a4:	70 f3       	brcs	.-36     	; 0xf382 <__mulsf3+0x8>

0000f3a6 <__mulsf3_pse>:
    f3a6:	95 9f       	mul	r25, r21
    f3a8:	c1 f3       	breq	.-16     	; 0xf39a <__mulsf3+0x20>
    f3aa:	95 0f       	add	r25, r21
    f3ac:	50 e0       	ldi	r21, 0x00	; 0
    f3ae:	55 1f       	adc	r21, r21
    f3b0:	62 9f       	mul	r22, r18
    f3b2:	f0 01       	movw	r30, r0
    f3b4:	72 9f       	mul	r23, r18
    f3b6:	bb 27       	eor	r27, r27
    f3b8:	f0 0d       	add	r31, r0
    f3ba:	b1 1d       	adc	r27, r1
    f3bc:	63 9f       	mul	r22, r19
    f3be:	aa 27       	eor	r26, r26
    f3c0:	f0 0d       	add	r31, r0
    f3c2:	b1 1d       	adc	r27, r1
    f3c4:	aa 1f       	adc	r26, r26
    f3c6:	64 9f       	mul	r22, r20
    f3c8:	66 27       	eor	r22, r22
    f3ca:	b0 0d       	add	r27, r0
    f3cc:	a1 1d       	adc	r26, r1
    f3ce:	66 1f       	adc	r22, r22
    f3d0:	82 9f       	mul	r24, r18
    f3d2:	22 27       	eor	r18, r18
    f3d4:	b0 0d       	add	r27, r0
    f3d6:	a1 1d       	adc	r26, r1
    f3d8:	62 1f       	adc	r22, r18
    f3da:	73 9f       	mul	r23, r19
    f3dc:	b0 0d       	add	r27, r0
    f3de:	a1 1d       	adc	r26, r1
    f3e0:	62 1f       	adc	r22, r18
    f3e2:	83 9f       	mul	r24, r19
    f3e4:	a0 0d       	add	r26, r0
    f3e6:	61 1d       	adc	r22, r1
    f3e8:	22 1f       	adc	r18, r18
    f3ea:	74 9f       	mul	r23, r20
    f3ec:	33 27       	eor	r19, r19
    f3ee:	a0 0d       	add	r26, r0
    f3f0:	61 1d       	adc	r22, r1
    f3f2:	23 1f       	adc	r18, r19
    f3f4:	84 9f       	mul	r24, r20
    f3f6:	60 0d       	add	r22, r0
    f3f8:	21 1d       	adc	r18, r1
    f3fa:	82 2f       	mov	r24, r18
    f3fc:	76 2f       	mov	r23, r22
    f3fe:	6a 2f       	mov	r22, r26
    f400:	11 24       	eor	r1, r1
    f402:	9f 57       	subi	r25, 0x7F	; 127
    f404:	50 40       	sbci	r21, 0x00	; 0
    f406:	9a f0       	brmi	.+38     	; 0xf42e <__mulsf3_pse+0x88>
    f408:	f1 f0       	breq	.+60     	; 0xf446 <__mulsf3_pse+0xa0>
    f40a:	88 23       	and	r24, r24
    f40c:	4a f0       	brmi	.+18     	; 0xf420 <__mulsf3_pse+0x7a>
    f40e:	ee 0f       	add	r30, r30
    f410:	ff 1f       	adc	r31, r31
    f412:	bb 1f       	adc	r27, r27
    f414:	66 1f       	adc	r22, r22
    f416:	77 1f       	adc	r23, r23
    f418:	88 1f       	adc	r24, r24
    f41a:	91 50       	subi	r25, 0x01	; 1
    f41c:	50 40       	sbci	r21, 0x00	; 0
    f41e:	a9 f7       	brne	.-22     	; 0xf40a <__mulsf3_pse+0x64>
    f420:	9e 3f       	cpi	r25, 0xFE	; 254
    f422:	51 05       	cpc	r21, r1
    f424:	80 f0       	brcs	.+32     	; 0xf446 <__mulsf3_pse+0xa0>
    f426:	0c 94 26 79 	jmp	0xf24c	; 0xf24c <__fp_inf>
    f42a:	0c 94 b2 79 	jmp	0xf364	; 0xf364 <__fp_szero>
    f42e:	5f 3f       	cpi	r21, 0xFF	; 255
    f430:	e4 f3       	brlt	.-8      	; 0xf42a <__mulsf3_pse+0x84>
    f432:	98 3e       	cpi	r25, 0xE8	; 232
    f434:	d4 f3       	brlt	.-12     	; 0xf42a <__mulsf3_pse+0x84>
    f436:	86 95       	lsr	r24
    f438:	77 95       	ror	r23
    f43a:	67 95       	ror	r22
    f43c:	b7 95       	ror	r27
    f43e:	f7 95       	ror	r31
    f440:	e7 95       	ror	r30
    f442:	9f 5f       	subi	r25, 0xFF	; 255
    f444:	c1 f7       	brne	.-16     	; 0xf436 <__mulsf3_pse+0x90>
    f446:	fe 2b       	or	r31, r30
    f448:	88 0f       	add	r24, r24
    f44a:	91 1d       	adc	r25, r1
    f44c:	96 95       	lsr	r25
    f44e:	87 95       	ror	r24
    f450:	97 f9       	bld	r25, 7
    f452:	08 95       	ret

0000f454 <__mulsi3>:
    f454:	db 01       	movw	r26, r22
    f456:	8f 93       	push	r24
    f458:	9f 93       	push	r25
    f45a:	0e 94 bb 7a 	call	0xf576	; 0xf576 <__muluhisi3>
    f45e:	bf 91       	pop	r27
    f460:	af 91       	pop	r26
    f462:	a2 9f       	mul	r26, r18
    f464:	80 0d       	add	r24, r0
    f466:	91 1d       	adc	r25, r1
    f468:	a3 9f       	mul	r26, r19
    f46a:	90 0d       	add	r25, r0
    f46c:	b2 9f       	mul	r27, r18
    f46e:	90 0d       	add	r25, r0
    f470:	11 24       	eor	r1, r1
    f472:	08 95       	ret

0000f474 <__udivmodhi4>:
    f474:	aa 1b       	sub	r26, r26
    f476:	bb 1b       	sub	r27, r27
    f478:	51 e1       	ldi	r21, 0x11	; 17
    f47a:	07 c0       	rjmp	.+14     	; 0xf48a <__udivmodhi4_ep>

0000f47c <__udivmodhi4_loop>:
    f47c:	aa 1f       	adc	r26, r26
    f47e:	bb 1f       	adc	r27, r27
    f480:	a6 17       	cp	r26, r22
    f482:	b7 07       	cpc	r27, r23
    f484:	10 f0       	brcs	.+4      	; 0xf48a <__udivmodhi4_ep>
    f486:	a6 1b       	sub	r26, r22
    f488:	b7 0b       	sbc	r27, r23

0000f48a <__udivmodhi4_ep>:
    f48a:	88 1f       	adc	r24, r24
    f48c:	99 1f       	adc	r25, r25
    f48e:	5a 95       	dec	r21
    f490:	a9 f7       	brne	.-22     	; 0xf47c <__udivmodhi4_loop>
    f492:	80 95       	com	r24
    f494:	90 95       	com	r25
    f496:	bc 01       	movw	r22, r24
    f498:	cd 01       	movw	r24, r26
    f49a:	08 95       	ret

0000f49c <__divmodhi4>:
    f49c:	97 fb       	bst	r25, 7
    f49e:	07 2e       	mov	r0, r23
    f4a0:	16 f4       	brtc	.+4      	; 0xf4a6 <__divmodhi4+0xa>
    f4a2:	00 94       	com	r0
    f4a4:	07 d0       	rcall	.+14     	; 0xf4b4 <__divmodhi4_neg1>
    f4a6:	77 fd       	sbrc	r23, 7
    f4a8:	09 d0       	rcall	.+18     	; 0xf4bc <__divmodhi4_neg2>
    f4aa:	0e 94 3a 7a 	call	0xf474	; 0xf474 <__udivmodhi4>
    f4ae:	07 fc       	sbrc	r0, 7
    f4b0:	05 d0       	rcall	.+10     	; 0xf4bc <__divmodhi4_neg2>
    f4b2:	3e f4       	brtc	.+14     	; 0xf4c2 <__divmodhi4_exit>

0000f4b4 <__divmodhi4_neg1>:
    f4b4:	90 95       	com	r25
    f4b6:	81 95       	neg	r24
    f4b8:	9f 4f       	sbci	r25, 0xFF	; 255
    f4ba:	08 95       	ret

0000f4bc <__divmodhi4_neg2>:
    f4bc:	70 95       	com	r23
    f4be:	61 95       	neg	r22
    f4c0:	7f 4f       	sbci	r23, 0xFF	; 255

0000f4c2 <__divmodhi4_exit>:
    f4c2:	08 95       	ret

0000f4c4 <__udivmodsi4>:
    f4c4:	a1 e2       	ldi	r26, 0x21	; 33
    f4c6:	1a 2e       	mov	r1, r26
    f4c8:	aa 1b       	sub	r26, r26
    f4ca:	bb 1b       	sub	r27, r27
    f4cc:	fd 01       	movw	r30, r26
    f4ce:	0d c0       	rjmp	.+26     	; 0xf4ea <__udivmodsi4_ep>

0000f4d0 <__udivmodsi4_loop>:
    f4d0:	aa 1f       	adc	r26, r26
    f4d2:	bb 1f       	adc	r27, r27
    f4d4:	ee 1f       	adc	r30, r30
    f4d6:	ff 1f       	adc	r31, r31
    f4d8:	a2 17       	cp	r26, r18
    f4da:	b3 07       	cpc	r27, r19
    f4dc:	e4 07       	cpc	r30, r20
    f4de:	f5 07       	cpc	r31, r21
    f4e0:	20 f0       	brcs	.+8      	; 0xf4ea <__udivmodsi4_ep>
    f4e2:	a2 1b       	sub	r26, r18
    f4e4:	b3 0b       	sbc	r27, r19
    f4e6:	e4 0b       	sbc	r30, r20
    f4e8:	f5 0b       	sbc	r31, r21

0000f4ea <__udivmodsi4_ep>:
    f4ea:	66 1f       	adc	r22, r22
    f4ec:	77 1f       	adc	r23, r23
    f4ee:	88 1f       	adc	r24, r24
    f4f0:	99 1f       	adc	r25, r25
    f4f2:	1a 94       	dec	r1
    f4f4:	69 f7       	brne	.-38     	; 0xf4d0 <__udivmodsi4_loop>
    f4f6:	60 95       	com	r22
    f4f8:	70 95       	com	r23
    f4fa:	80 95       	com	r24
    f4fc:	90 95       	com	r25
    f4fe:	9b 01       	movw	r18, r22
    f500:	ac 01       	movw	r20, r24
    f502:	bd 01       	movw	r22, r26
    f504:	cf 01       	movw	r24, r30
    f506:	08 95       	ret

0000f508 <__divmodsi4>:
    f508:	05 2e       	mov	r0, r21
    f50a:	97 fb       	bst	r25, 7
    f50c:	1e f4       	brtc	.+6      	; 0xf514 <__divmodsi4+0xc>
    f50e:	00 94       	com	r0
    f510:	0e 94 9b 7a 	call	0xf536	; 0xf536 <__negsi2>
    f514:	57 fd       	sbrc	r21, 7
    f516:	07 d0       	rcall	.+14     	; 0xf526 <__divmodsi4_neg2>
    f518:	0e 94 62 7a 	call	0xf4c4	; 0xf4c4 <__udivmodsi4>
    f51c:	07 fc       	sbrc	r0, 7
    f51e:	03 d0       	rcall	.+6      	; 0xf526 <__divmodsi4_neg2>
    f520:	4e f4       	brtc	.+18     	; 0xf534 <__divmodsi4_exit>
    f522:	0c 94 9b 7a 	jmp	0xf536	; 0xf536 <__negsi2>

0000f526 <__divmodsi4_neg2>:
    f526:	50 95       	com	r21
    f528:	40 95       	com	r20
    f52a:	30 95       	com	r19
    f52c:	21 95       	neg	r18
    f52e:	3f 4f       	sbci	r19, 0xFF	; 255
    f530:	4f 4f       	sbci	r20, 0xFF	; 255
    f532:	5f 4f       	sbci	r21, 0xFF	; 255

0000f534 <__divmodsi4_exit>:
    f534:	08 95       	ret

0000f536 <__negsi2>:
    f536:	90 95       	com	r25
    f538:	80 95       	com	r24
    f53a:	70 95       	com	r23
    f53c:	61 95       	neg	r22
    f53e:	7f 4f       	sbci	r23, 0xFF	; 255
    f540:	8f 4f       	sbci	r24, 0xFF	; 255
    f542:	9f 4f       	sbci	r25, 0xFF	; 255
    f544:	08 95       	ret

0000f546 <__tablejump2__>:
    f546:	ee 0f       	add	r30, r30
    f548:	ff 1f       	adc	r31, r31
    f54a:	00 24       	eor	r0, r0
    f54c:	00 1c       	adc	r0, r0
    f54e:	0b be       	out	0x3b, r0	; 59
    f550:	07 90       	elpm	r0, Z+
    f552:	f6 91       	elpm	r31, Z
    f554:	e0 2d       	mov	r30, r0
    f556:	09 94       	ijmp

0000f558 <__umulhisi3>:
    f558:	a2 9f       	mul	r26, r18
    f55a:	b0 01       	movw	r22, r0
    f55c:	b3 9f       	mul	r27, r19
    f55e:	c0 01       	movw	r24, r0
    f560:	a3 9f       	mul	r26, r19
    f562:	70 0d       	add	r23, r0
    f564:	81 1d       	adc	r24, r1
    f566:	11 24       	eor	r1, r1
    f568:	91 1d       	adc	r25, r1
    f56a:	b2 9f       	mul	r27, r18
    f56c:	70 0d       	add	r23, r0
    f56e:	81 1d       	adc	r24, r1
    f570:	11 24       	eor	r1, r1
    f572:	91 1d       	adc	r25, r1
    f574:	08 95       	ret

0000f576 <__muluhisi3>:
    f576:	0e 94 ac 7a 	call	0xf558	; 0xf558 <__umulhisi3>
    f57a:	a5 9f       	mul	r26, r21
    f57c:	90 0d       	add	r25, r0
    f57e:	b4 9f       	mul	r27, r20
    f580:	90 0d       	add	r25, r0
    f582:	a4 9f       	mul	r26, r20
    f584:	80 0d       	add	r24, r0
    f586:	91 1d       	adc	r25, r1
    f588:	11 24       	eor	r1, r1
    f58a:	08 95       	ret

0000f58c <dtostrf>:
    f58c:	ef 92       	push	r14
    f58e:	0f 93       	push	r16
    f590:	1f 93       	push	r17
    f592:	cf 93       	push	r28
    f594:	df 93       	push	r29
    f596:	e8 01       	movw	r28, r16
    f598:	47 fd       	sbrc	r20, 7
    f59a:	02 c0       	rjmp	.+4      	; 0xf5a0 <dtostrf+0x14>
    f59c:	34 e0       	ldi	r19, 0x04	; 4
    f59e:	01 c0       	rjmp	.+2      	; 0xf5a2 <dtostrf+0x16>
    f5a0:	34 e1       	ldi	r19, 0x14	; 20
    f5a2:	04 2e       	mov	r0, r20
    f5a4:	00 0c       	add	r0, r0
    f5a6:	55 0b       	sbc	r21, r21
    f5a8:	57 ff       	sbrs	r21, 7
    f5aa:	03 c0       	rjmp	.+6      	; 0xf5b2 <dtostrf+0x26>
    f5ac:	51 95       	neg	r21
    f5ae:	41 95       	neg	r20
    f5b0:	51 09       	sbc	r21, r1
    f5b2:	e3 2e       	mov	r14, r19
    f5b4:	02 2f       	mov	r16, r18
    f5b6:	24 2f       	mov	r18, r20
    f5b8:	ae 01       	movw	r20, r28
    f5ba:	0e 94 e7 7e 	call	0xfdce	; 0xfdce <dtoa_prf>
    f5be:	ce 01       	movw	r24, r28
    f5c0:	df 91       	pop	r29
    f5c2:	cf 91       	pop	r28
    f5c4:	1f 91       	pop	r17
    f5c6:	0f 91       	pop	r16
    f5c8:	ef 90       	pop	r14
    f5ca:	08 95       	ret

0000f5cc <malloc>:
    f5cc:	0f 93       	push	r16
    f5ce:	1f 93       	push	r17
    f5d0:	cf 93       	push	r28
    f5d2:	df 93       	push	r29
    f5d4:	82 30       	cpi	r24, 0x02	; 2
    f5d6:	91 05       	cpc	r25, r1
    f5d8:	10 f4       	brcc	.+4      	; 0xf5de <malloc+0x12>
    f5da:	82 e0       	ldi	r24, 0x02	; 2
    f5dc:	90 e0       	ldi	r25, 0x00	; 0
    f5de:	e0 91 c7 4a 	lds	r30, 0x4AC7	; 0x804ac7 <__flp>
    f5e2:	f0 91 c8 4a 	lds	r31, 0x4AC8	; 0x804ac8 <__flp+0x1>
    f5e6:	20 e0       	ldi	r18, 0x00	; 0
    f5e8:	30 e0       	ldi	r19, 0x00	; 0
    f5ea:	a0 e0       	ldi	r26, 0x00	; 0
    f5ec:	b0 e0       	ldi	r27, 0x00	; 0
    f5ee:	30 97       	sbiw	r30, 0x00	; 0
    f5f0:	19 f1       	breq	.+70     	; 0xf638 <malloc+0x6c>
    f5f2:	40 81       	ld	r20, Z
    f5f4:	51 81       	ldd	r21, Z+1	; 0x01
    f5f6:	02 81       	ldd	r16, Z+2	; 0x02
    f5f8:	13 81       	ldd	r17, Z+3	; 0x03
    f5fa:	48 17       	cp	r20, r24
    f5fc:	59 07       	cpc	r21, r25
    f5fe:	c8 f0       	brcs	.+50     	; 0xf632 <malloc+0x66>
    f600:	84 17       	cp	r24, r20
    f602:	95 07       	cpc	r25, r21
    f604:	69 f4       	brne	.+26     	; 0xf620 <malloc+0x54>
    f606:	10 97       	sbiw	r26, 0x00	; 0
    f608:	31 f0       	breq	.+12     	; 0xf616 <malloc+0x4a>
    f60a:	12 96       	adiw	r26, 0x02	; 2
    f60c:	0c 93       	st	X, r16
    f60e:	12 97       	sbiw	r26, 0x02	; 2
    f610:	13 96       	adiw	r26, 0x03	; 3
    f612:	1c 93       	st	X, r17
    f614:	27 c0       	rjmp	.+78     	; 0xf664 <malloc+0x98>
    f616:	00 93 c7 4a 	sts	0x4AC7, r16	; 0x804ac7 <__flp>
    f61a:	10 93 c8 4a 	sts	0x4AC8, r17	; 0x804ac8 <__flp+0x1>
    f61e:	22 c0       	rjmp	.+68     	; 0xf664 <malloc+0x98>
    f620:	21 15       	cp	r18, r1
    f622:	31 05       	cpc	r19, r1
    f624:	19 f0       	breq	.+6      	; 0xf62c <malloc+0x60>
    f626:	42 17       	cp	r20, r18
    f628:	53 07       	cpc	r21, r19
    f62a:	18 f4       	brcc	.+6      	; 0xf632 <malloc+0x66>
    f62c:	9a 01       	movw	r18, r20
    f62e:	bd 01       	movw	r22, r26
    f630:	ef 01       	movw	r28, r30
    f632:	df 01       	movw	r26, r30
    f634:	f8 01       	movw	r30, r16
    f636:	db cf       	rjmp	.-74     	; 0xf5ee <malloc+0x22>
    f638:	21 15       	cp	r18, r1
    f63a:	31 05       	cpc	r19, r1
    f63c:	f9 f0       	breq	.+62     	; 0xf67c <malloc+0xb0>
    f63e:	28 1b       	sub	r18, r24
    f640:	39 0b       	sbc	r19, r25
    f642:	24 30       	cpi	r18, 0x04	; 4
    f644:	31 05       	cpc	r19, r1
    f646:	80 f4       	brcc	.+32     	; 0xf668 <malloc+0x9c>
    f648:	8a 81       	ldd	r24, Y+2	; 0x02
    f64a:	9b 81       	ldd	r25, Y+3	; 0x03
    f64c:	61 15       	cp	r22, r1
    f64e:	71 05       	cpc	r23, r1
    f650:	21 f0       	breq	.+8      	; 0xf65a <malloc+0x8e>
    f652:	fb 01       	movw	r30, r22
    f654:	82 83       	std	Z+2, r24	; 0x02
    f656:	93 83       	std	Z+3, r25	; 0x03
    f658:	04 c0       	rjmp	.+8      	; 0xf662 <malloc+0x96>
    f65a:	80 93 c7 4a 	sts	0x4AC7, r24	; 0x804ac7 <__flp>
    f65e:	90 93 c8 4a 	sts	0x4AC8, r25	; 0x804ac8 <__flp+0x1>
    f662:	fe 01       	movw	r30, r28
    f664:	32 96       	adiw	r30, 0x02	; 2
    f666:	44 c0       	rjmp	.+136    	; 0xf6f0 <malloc+0x124>
    f668:	fe 01       	movw	r30, r28
    f66a:	e2 0f       	add	r30, r18
    f66c:	f3 1f       	adc	r31, r19
    f66e:	81 93       	st	Z+, r24
    f670:	91 93       	st	Z+, r25
    f672:	22 50       	subi	r18, 0x02	; 2
    f674:	31 09       	sbc	r19, r1
    f676:	28 83       	st	Y, r18
    f678:	39 83       	std	Y+1, r19	; 0x01
    f67a:	3a c0       	rjmp	.+116    	; 0xf6f0 <malloc+0x124>
    f67c:	20 91 c5 4a 	lds	r18, 0x4AC5	; 0x804ac5 <__brkval>
    f680:	30 91 c6 4a 	lds	r19, 0x4AC6	; 0x804ac6 <__brkval+0x1>
    f684:	23 2b       	or	r18, r19
    f686:	41 f4       	brne	.+16     	; 0xf698 <malloc+0xcc>
    f688:	20 91 02 40 	lds	r18, 0x4002	; 0x804002 <__malloc_heap_start>
    f68c:	30 91 03 40 	lds	r19, 0x4003	; 0x804003 <__malloc_heap_start+0x1>
    f690:	20 93 c5 4a 	sts	0x4AC5, r18	; 0x804ac5 <__brkval>
    f694:	30 93 c6 4a 	sts	0x4AC6, r19	; 0x804ac6 <__brkval+0x1>
    f698:	20 91 00 40 	lds	r18, 0x4000	; 0x804000 <__DATA_REGION_ORIGIN__>
    f69c:	30 91 01 40 	lds	r19, 0x4001	; 0x804001 <__DATA_REGION_ORIGIN__+0x1>
    f6a0:	21 15       	cp	r18, r1
    f6a2:	31 05       	cpc	r19, r1
    f6a4:	41 f4       	brne	.+16     	; 0xf6b6 <malloc+0xea>
    f6a6:	2d b7       	in	r18, 0x3d	; 61
    f6a8:	3e b7       	in	r19, 0x3e	; 62
    f6aa:	40 91 04 40 	lds	r20, 0x4004	; 0x804004 <__malloc_margin>
    f6ae:	50 91 05 40 	lds	r21, 0x4005	; 0x804005 <__malloc_margin+0x1>
    f6b2:	24 1b       	sub	r18, r20
    f6b4:	35 0b       	sbc	r19, r21
    f6b6:	e0 91 c5 4a 	lds	r30, 0x4AC5	; 0x804ac5 <__brkval>
    f6ba:	f0 91 c6 4a 	lds	r31, 0x4AC6	; 0x804ac6 <__brkval+0x1>
    f6be:	e2 17       	cp	r30, r18
    f6c0:	f3 07       	cpc	r31, r19
    f6c2:	a0 f4       	brcc	.+40     	; 0xf6ec <malloc+0x120>
    f6c4:	2e 1b       	sub	r18, r30
    f6c6:	3f 0b       	sbc	r19, r31
    f6c8:	28 17       	cp	r18, r24
    f6ca:	39 07       	cpc	r19, r25
    f6cc:	78 f0       	brcs	.+30     	; 0xf6ec <malloc+0x120>
    f6ce:	ac 01       	movw	r20, r24
    f6d0:	4e 5f       	subi	r20, 0xFE	; 254
    f6d2:	5f 4f       	sbci	r21, 0xFF	; 255
    f6d4:	24 17       	cp	r18, r20
    f6d6:	35 07       	cpc	r19, r21
    f6d8:	48 f0       	brcs	.+18     	; 0xf6ec <malloc+0x120>
    f6da:	4e 0f       	add	r20, r30
    f6dc:	5f 1f       	adc	r21, r31
    f6de:	40 93 c5 4a 	sts	0x4AC5, r20	; 0x804ac5 <__brkval>
    f6e2:	50 93 c6 4a 	sts	0x4AC6, r21	; 0x804ac6 <__brkval+0x1>
    f6e6:	81 93       	st	Z+, r24
    f6e8:	91 93       	st	Z+, r25
    f6ea:	02 c0       	rjmp	.+4      	; 0xf6f0 <malloc+0x124>
    f6ec:	e0 e0       	ldi	r30, 0x00	; 0
    f6ee:	f0 e0       	ldi	r31, 0x00	; 0
    f6f0:	cf 01       	movw	r24, r30
    f6f2:	df 91       	pop	r29
    f6f4:	cf 91       	pop	r28
    f6f6:	1f 91       	pop	r17
    f6f8:	0f 91       	pop	r16
    f6fa:	08 95       	ret

0000f6fc <free>:
    f6fc:	cf 93       	push	r28
    f6fe:	df 93       	push	r29
    f700:	00 97       	sbiw	r24, 0x00	; 0
    f702:	09 f4       	brne	.+2      	; 0xf706 <free+0xa>
    f704:	81 c0       	rjmp	.+258    	; 0xf808 <free+0x10c>
    f706:	fc 01       	movw	r30, r24
    f708:	32 97       	sbiw	r30, 0x02	; 2
    f70a:	12 82       	std	Z+2, r1	; 0x02
    f70c:	13 82       	std	Z+3, r1	; 0x03
    f70e:	a0 91 c7 4a 	lds	r26, 0x4AC7	; 0x804ac7 <__flp>
    f712:	b0 91 c8 4a 	lds	r27, 0x4AC8	; 0x804ac8 <__flp+0x1>
    f716:	10 97       	sbiw	r26, 0x00	; 0
    f718:	81 f4       	brne	.+32     	; 0xf73a <free+0x3e>
    f71a:	20 81       	ld	r18, Z
    f71c:	31 81       	ldd	r19, Z+1	; 0x01
    f71e:	82 0f       	add	r24, r18
    f720:	93 1f       	adc	r25, r19
    f722:	20 91 c5 4a 	lds	r18, 0x4AC5	; 0x804ac5 <__brkval>
    f726:	30 91 c6 4a 	lds	r19, 0x4AC6	; 0x804ac6 <__brkval+0x1>
    f72a:	28 17       	cp	r18, r24
    f72c:	39 07       	cpc	r19, r25
    f72e:	51 f5       	brne	.+84     	; 0xf784 <free+0x88>
    f730:	e0 93 c5 4a 	sts	0x4AC5, r30	; 0x804ac5 <__brkval>
    f734:	f0 93 c6 4a 	sts	0x4AC6, r31	; 0x804ac6 <__brkval+0x1>
    f738:	67 c0       	rjmp	.+206    	; 0xf808 <free+0x10c>
    f73a:	ed 01       	movw	r28, r26
    f73c:	20 e0       	ldi	r18, 0x00	; 0
    f73e:	30 e0       	ldi	r19, 0x00	; 0
    f740:	ce 17       	cp	r28, r30
    f742:	df 07       	cpc	r29, r31
    f744:	40 f4       	brcc	.+16     	; 0xf756 <free+0x5a>
    f746:	4a 81       	ldd	r20, Y+2	; 0x02
    f748:	5b 81       	ldd	r21, Y+3	; 0x03
    f74a:	9e 01       	movw	r18, r28
    f74c:	41 15       	cp	r20, r1
    f74e:	51 05       	cpc	r21, r1
    f750:	f1 f0       	breq	.+60     	; 0xf78e <free+0x92>
    f752:	ea 01       	movw	r28, r20
    f754:	f5 cf       	rjmp	.-22     	; 0xf740 <free+0x44>
    f756:	c2 83       	std	Z+2, r28	; 0x02
    f758:	d3 83       	std	Z+3, r29	; 0x03
    f75a:	40 81       	ld	r20, Z
    f75c:	51 81       	ldd	r21, Z+1	; 0x01
    f75e:	84 0f       	add	r24, r20
    f760:	95 1f       	adc	r25, r21
    f762:	c8 17       	cp	r28, r24
    f764:	d9 07       	cpc	r29, r25
    f766:	59 f4       	brne	.+22     	; 0xf77e <free+0x82>
    f768:	88 81       	ld	r24, Y
    f76a:	99 81       	ldd	r25, Y+1	; 0x01
    f76c:	84 0f       	add	r24, r20
    f76e:	95 1f       	adc	r25, r21
    f770:	02 96       	adiw	r24, 0x02	; 2
    f772:	80 83       	st	Z, r24
    f774:	91 83       	std	Z+1, r25	; 0x01
    f776:	8a 81       	ldd	r24, Y+2	; 0x02
    f778:	9b 81       	ldd	r25, Y+3	; 0x03
    f77a:	82 83       	std	Z+2, r24	; 0x02
    f77c:	93 83       	std	Z+3, r25	; 0x03
    f77e:	21 15       	cp	r18, r1
    f780:	31 05       	cpc	r19, r1
    f782:	29 f4       	brne	.+10     	; 0xf78e <free+0x92>
    f784:	e0 93 c7 4a 	sts	0x4AC7, r30	; 0x804ac7 <__flp>
    f788:	f0 93 c8 4a 	sts	0x4AC8, r31	; 0x804ac8 <__flp+0x1>
    f78c:	3d c0       	rjmp	.+122    	; 0xf808 <free+0x10c>
    f78e:	e9 01       	movw	r28, r18
    f790:	ea 83       	std	Y+2, r30	; 0x02
    f792:	fb 83       	std	Y+3, r31	; 0x03
    f794:	49 91       	ld	r20, Y+
    f796:	59 91       	ld	r21, Y+
    f798:	c4 0f       	add	r28, r20
    f79a:	d5 1f       	adc	r29, r21
    f79c:	ec 17       	cp	r30, r28
    f79e:	fd 07       	cpc	r31, r29
    f7a0:	61 f4       	brne	.+24     	; 0xf7ba <free+0xbe>
    f7a2:	80 81       	ld	r24, Z
    f7a4:	91 81       	ldd	r25, Z+1	; 0x01
    f7a6:	84 0f       	add	r24, r20
    f7a8:	95 1f       	adc	r25, r21
    f7aa:	02 96       	adiw	r24, 0x02	; 2
    f7ac:	e9 01       	movw	r28, r18
    f7ae:	88 83       	st	Y, r24
    f7b0:	99 83       	std	Y+1, r25	; 0x01
    f7b2:	82 81       	ldd	r24, Z+2	; 0x02
    f7b4:	93 81       	ldd	r25, Z+3	; 0x03
    f7b6:	8a 83       	std	Y+2, r24	; 0x02
    f7b8:	9b 83       	std	Y+3, r25	; 0x03
    f7ba:	e0 e0       	ldi	r30, 0x00	; 0
    f7bc:	f0 e0       	ldi	r31, 0x00	; 0
    f7be:	12 96       	adiw	r26, 0x02	; 2
    f7c0:	8d 91       	ld	r24, X+
    f7c2:	9c 91       	ld	r25, X
    f7c4:	13 97       	sbiw	r26, 0x03	; 3
    f7c6:	00 97       	sbiw	r24, 0x00	; 0
    f7c8:	19 f0       	breq	.+6      	; 0xf7d0 <free+0xd4>
    f7ca:	fd 01       	movw	r30, r26
    f7cc:	dc 01       	movw	r26, r24
    f7ce:	f7 cf       	rjmp	.-18     	; 0xf7be <free+0xc2>
    f7d0:	8d 91       	ld	r24, X+
    f7d2:	9c 91       	ld	r25, X
    f7d4:	11 97       	sbiw	r26, 0x01	; 1
    f7d6:	9d 01       	movw	r18, r26
    f7d8:	2e 5f       	subi	r18, 0xFE	; 254
    f7da:	3f 4f       	sbci	r19, 0xFF	; 255
    f7dc:	82 0f       	add	r24, r18
    f7de:	93 1f       	adc	r25, r19
    f7e0:	20 91 c5 4a 	lds	r18, 0x4AC5	; 0x804ac5 <__brkval>
    f7e4:	30 91 c6 4a 	lds	r19, 0x4AC6	; 0x804ac6 <__brkval+0x1>
    f7e8:	28 17       	cp	r18, r24
    f7ea:	39 07       	cpc	r19, r25
    f7ec:	69 f4       	brne	.+26     	; 0xf808 <free+0x10c>
    f7ee:	30 97       	sbiw	r30, 0x00	; 0
    f7f0:	29 f4       	brne	.+10     	; 0xf7fc <free+0x100>
    f7f2:	10 92 c7 4a 	sts	0x4AC7, r1	; 0x804ac7 <__flp>
    f7f6:	10 92 c8 4a 	sts	0x4AC8, r1	; 0x804ac8 <__flp+0x1>
    f7fa:	02 c0       	rjmp	.+4      	; 0xf800 <free+0x104>
    f7fc:	12 82       	std	Z+2, r1	; 0x02
    f7fe:	13 82       	std	Z+3, r1	; 0x03
    f800:	a0 93 c5 4a 	sts	0x4AC5, r26	; 0x804ac5 <__brkval>
    f804:	b0 93 c6 4a 	sts	0x4AC6, r27	; 0x804ac6 <__brkval+0x1>
    f808:	df 91       	pop	r29
    f80a:	cf 91       	pop	r28
    f80c:	08 95       	ret

0000f80e <atof>:
    f80e:	66 27       	eor	r22, r22
    f810:	77 27       	eor	r23, r23
    f812:	0c 94 58 80 	jmp	0x100b0	; 0x100b0 <strtod>

0000f816 <atoi>:
    f816:	fc 01       	movw	r30, r24
    f818:	88 27       	eor	r24, r24
    f81a:	99 27       	eor	r25, r25
    f81c:	e8 94       	clt
    f81e:	21 91       	ld	r18, Z+
    f820:	20 32       	cpi	r18, 0x20	; 32
    f822:	e9 f3       	breq	.-6      	; 0xf81e <atoi+0x8>
    f824:	29 30       	cpi	r18, 0x09	; 9
    f826:	10 f0       	brcs	.+4      	; 0xf82c <atoi+0x16>
    f828:	2e 30       	cpi	r18, 0x0E	; 14
    f82a:	c8 f3       	brcs	.-14     	; 0xf81e <atoi+0x8>
    f82c:	2b 32       	cpi	r18, 0x2B	; 43
    f82e:	41 f0       	breq	.+16     	; 0xf840 <atoi+0x2a>
    f830:	2d 32       	cpi	r18, 0x2D	; 45
    f832:	39 f4       	brne	.+14     	; 0xf842 <atoi+0x2c>
    f834:	68 94       	set
    f836:	04 c0       	rjmp	.+8      	; 0xf840 <atoi+0x2a>
    f838:	0e 94 b2 7c 	call	0xf964	; 0xf964 <__mulhi_const_10>
    f83c:	82 0f       	add	r24, r18
    f83e:	91 1d       	adc	r25, r1
    f840:	21 91       	ld	r18, Z+
    f842:	20 53       	subi	r18, 0x30	; 48
    f844:	2a 30       	cpi	r18, 0x0A	; 10
    f846:	c0 f3       	brcs	.-16     	; 0xf838 <atoi+0x22>
    f848:	1e f4       	brtc	.+6      	; 0xf850 <atoi+0x3a>
    f84a:	90 95       	com	r25
    f84c:	81 95       	neg	r24
    f84e:	9f 4f       	sbci	r25, 0xFF	; 255
    f850:	08 95       	ret

0000f852 <atol>:
    f852:	1f 93       	push	r17
    f854:	fc 01       	movw	r30, r24
    f856:	99 27       	eor	r25, r25
    f858:	88 27       	eor	r24, r24
    f85a:	bc 01       	movw	r22, r24
    f85c:	e8 94       	clt
    f85e:	11 91       	ld	r17, Z+
    f860:	10 32       	cpi	r17, 0x20	; 32
    f862:	e9 f3       	breq	.-6      	; 0xf85e <atol+0xc>
    f864:	19 30       	cpi	r17, 0x09	; 9
    f866:	10 f0       	brcs	.+4      	; 0xf86c <atol+0x1a>
    f868:	1e 30       	cpi	r17, 0x0E	; 14
    f86a:	c8 f3       	brcs	.-14     	; 0xf85e <atol+0xc>
    f86c:	1b 32       	cpi	r17, 0x2B	; 43
    f86e:	51 f0       	breq	.+20     	; 0xf884 <atol+0x32>
    f870:	1d 32       	cpi	r17, 0x2D	; 45
    f872:	49 f4       	brne	.+18     	; 0xf886 <atol+0x34>
    f874:	68 94       	set
    f876:	06 c0       	rjmp	.+12     	; 0xf884 <atol+0x32>
    f878:	0e 94 9d 7c 	call	0xf93a	; 0xf93a <__mulsi_const_10>
    f87c:	61 0f       	add	r22, r17
    f87e:	71 1d       	adc	r23, r1
    f880:	81 1d       	adc	r24, r1
    f882:	91 1d       	adc	r25, r1
    f884:	11 91       	ld	r17, Z+
    f886:	10 53       	subi	r17, 0x30	; 48
    f888:	1a 30       	cpi	r17, 0x0A	; 10
    f88a:	b0 f3       	brcs	.-20     	; 0xf878 <atol+0x26>
    f88c:	3e f4       	brtc	.+14     	; 0xf89c <atol+0x4a>
    f88e:	90 95       	com	r25
    f890:	80 95       	com	r24
    f892:	70 95       	com	r23
    f894:	61 95       	neg	r22
    f896:	7f 4f       	sbci	r23, 0xFF	; 255
    f898:	8f 4f       	sbci	r24, 0xFF	; 255
    f89a:	9f 4f       	sbci	r25, 0xFF	; 255
    f89c:	1f 91       	pop	r17
    f89e:	08 95       	ret

0000f8a0 <toupper>:
    f8a0:	91 11       	cpse	r25, r1
    f8a2:	08 95       	ret
    f8a4:	81 56       	subi	r24, 0x61	; 97
    f8a6:	8a 51       	subi	r24, 0x1A	; 26
    f8a8:	08 f4       	brcc	.+2      	; 0xf8ac <toupper+0xc>
    f8aa:	80 52       	subi	r24, 0x20	; 32
    f8ac:	85 58       	subi	r24, 0x85	; 133
    f8ae:	08 95       	ret

0000f8b0 <memset>:
    f8b0:	dc 01       	movw	r26, r24
    f8b2:	01 c0       	rjmp	.+2      	; 0xf8b6 <memset+0x6>
    f8b4:	6d 93       	st	X+, r22
    f8b6:	41 50       	subi	r20, 0x01	; 1
    f8b8:	50 40       	sbci	r21, 0x00	; 0
    f8ba:	e0 f7       	brcc	.-8      	; 0xf8b4 <memset+0x4>
    f8bc:	08 95       	ret

0000f8be <strcat>:
    f8be:	fb 01       	movw	r30, r22
    f8c0:	dc 01       	movw	r26, r24
    f8c2:	0d 90       	ld	r0, X+
    f8c4:	00 20       	and	r0, r0
    f8c6:	e9 f7       	brne	.-6      	; 0xf8c2 <strcat+0x4>
    f8c8:	11 97       	sbiw	r26, 0x01	; 1
    f8ca:	01 90       	ld	r0, Z+
    f8cc:	0d 92       	st	X+, r0
    f8ce:	00 20       	and	r0, r0
    f8d0:	e1 f7       	brne	.-8      	; 0xf8ca <strcat+0xc>
    f8d2:	08 95       	ret

0000f8d4 <strchr>:
    f8d4:	fc 01       	movw	r30, r24
    f8d6:	81 91       	ld	r24, Z+
    f8d8:	86 17       	cp	r24, r22
    f8da:	21 f0       	breq	.+8      	; 0xf8e4 <strchr+0x10>
    f8dc:	88 23       	and	r24, r24
    f8de:	d9 f7       	brne	.-10     	; 0xf8d6 <strchr+0x2>
    f8e0:	99 27       	eor	r25, r25
    f8e2:	08 95       	ret
    f8e4:	31 97       	sbiw	r30, 0x01	; 1
    f8e6:	cf 01       	movw	r24, r30
    f8e8:	08 95       	ret

0000f8ea <strcmp>:
    f8ea:	fb 01       	movw	r30, r22
    f8ec:	dc 01       	movw	r26, r24
    f8ee:	8d 91       	ld	r24, X+
    f8f0:	01 90       	ld	r0, Z+
    f8f2:	80 19       	sub	r24, r0
    f8f4:	01 10       	cpse	r0, r1
    f8f6:	d9 f3       	breq	.-10     	; 0xf8ee <strcmp+0x4>
    f8f8:	99 0b       	sbc	r25, r25
    f8fa:	08 95       	ret

0000f8fc <strcpy>:
    f8fc:	fb 01       	movw	r30, r22
    f8fe:	dc 01       	movw	r26, r24
    f900:	01 90       	ld	r0, Z+
    f902:	0d 92       	st	X+, r0
    f904:	00 20       	and	r0, r0
    f906:	e1 f7       	brne	.-8      	; 0xf900 <strcpy+0x4>
    f908:	08 95       	ret

0000f90a <strlen>:
    f90a:	fc 01       	movw	r30, r24
    f90c:	01 90       	ld	r0, Z+
    f90e:	00 20       	and	r0, r0
    f910:	e9 f7       	brne	.-6      	; 0xf90c <strlen+0x2>
    f912:	80 95       	com	r24
    f914:	90 95       	com	r25
    f916:	8e 0f       	add	r24, r30
    f918:	9f 1f       	adc	r25, r31
    f91a:	08 95       	ret

0000f91c <strncpy>:
    f91c:	fb 01       	movw	r30, r22
    f91e:	dc 01       	movw	r26, r24
    f920:	41 50       	subi	r20, 0x01	; 1
    f922:	50 40       	sbci	r21, 0x00	; 0
    f924:	48 f0       	brcs	.+18     	; 0xf938 <strncpy+0x1c>
    f926:	01 90       	ld	r0, Z+
    f928:	0d 92       	st	X+, r0
    f92a:	00 20       	and	r0, r0
    f92c:	c9 f7       	brne	.-14     	; 0xf920 <strncpy+0x4>
    f92e:	01 c0       	rjmp	.+2      	; 0xf932 <strncpy+0x16>
    f930:	1d 92       	st	X+, r1
    f932:	41 50       	subi	r20, 0x01	; 1
    f934:	50 40       	sbci	r21, 0x00	; 0
    f936:	e0 f7       	brcc	.-8      	; 0xf930 <strncpy+0x14>
    f938:	08 95       	ret

0000f93a <__mulsi_const_10>:
    f93a:	59 2f       	mov	r21, r25
    f93c:	48 2f       	mov	r20, r24
    f93e:	37 2f       	mov	r19, r23
    f940:	26 2f       	mov	r18, r22
    f942:	66 0f       	add	r22, r22
    f944:	77 1f       	adc	r23, r23
    f946:	88 1f       	adc	r24, r24
    f948:	99 1f       	adc	r25, r25
    f94a:	66 0f       	add	r22, r22
    f94c:	77 1f       	adc	r23, r23
    f94e:	88 1f       	adc	r24, r24
    f950:	99 1f       	adc	r25, r25
    f952:	62 0f       	add	r22, r18
    f954:	73 1f       	adc	r23, r19
    f956:	84 1f       	adc	r24, r20
    f958:	95 1f       	adc	r25, r21
    f95a:	66 0f       	add	r22, r22
    f95c:	77 1f       	adc	r23, r23
    f95e:	88 1f       	adc	r24, r24
    f960:	99 1f       	adc	r25, r25
    f962:	08 95       	ret

0000f964 <__mulhi_const_10>:
    f964:	7a e0       	ldi	r23, 0x0A	; 10
    f966:	97 9f       	mul	r25, r23
    f968:	90 2d       	mov	r25, r0
    f96a:	87 9f       	mul	r24, r23
    f96c:	80 2d       	mov	r24, r0
    f96e:	91 0d       	add	r25, r1
    f970:	11 24       	eor	r1, r1
    f972:	08 95       	ret

0000f974 <sprintf>:
    f974:	0f 93       	push	r16
    f976:	1f 93       	push	r17
    f978:	cf 93       	push	r28
    f97a:	df 93       	push	r29
    f97c:	cd b7       	in	r28, 0x3d	; 61
    f97e:	de b7       	in	r29, 0x3e	; 62
    f980:	2e 97       	sbiw	r28, 0x0e	; 14
    f982:	cd bf       	out	0x3d, r28	; 61
    f984:	de bf       	out	0x3e, r29	; 62
    f986:	0d 89       	ldd	r16, Y+21	; 0x15
    f988:	1e 89       	ldd	r17, Y+22	; 0x16
    f98a:	86 e0       	ldi	r24, 0x06	; 6
    f98c:	8c 83       	std	Y+4, r24	; 0x04
    f98e:	09 83       	std	Y+1, r16	; 0x01
    f990:	1a 83       	std	Y+2, r17	; 0x02
    f992:	8f ef       	ldi	r24, 0xFF	; 255
    f994:	9f e7       	ldi	r25, 0x7F	; 127
    f996:	8d 83       	std	Y+5, r24	; 0x05
    f998:	9e 83       	std	Y+6, r25	; 0x06
    f99a:	ae 01       	movw	r20, r28
    f99c:	47 5e       	subi	r20, 0xE7	; 231
    f99e:	5f 4f       	sbci	r21, 0xFF	; 255
    f9a0:	6f 89       	ldd	r22, Y+23	; 0x17
    f9a2:	78 8d       	ldd	r23, Y+24	; 0x18
    f9a4:	ce 01       	movw	r24, r28
    f9a6:	01 96       	adiw	r24, 0x01	; 1
    f9a8:	0e 94 e3 7c 	call	0xf9c6	; 0xf9c6 <vfprintf>
    f9ac:	ef 81       	ldd	r30, Y+7	; 0x07
    f9ae:	f8 85       	ldd	r31, Y+8	; 0x08
    f9b0:	e0 0f       	add	r30, r16
    f9b2:	f1 1f       	adc	r31, r17
    f9b4:	10 82       	st	Z, r1
    f9b6:	2e 96       	adiw	r28, 0x0e	; 14
    f9b8:	cd bf       	out	0x3d, r28	; 61
    f9ba:	de bf       	out	0x3e, r29	; 62
    f9bc:	df 91       	pop	r29
    f9be:	cf 91       	pop	r28
    f9c0:	1f 91       	pop	r17
    f9c2:	0f 91       	pop	r16
    f9c4:	08 95       	ret

0000f9c6 <vfprintf>:
    f9c6:	2f 92       	push	r2
    f9c8:	3f 92       	push	r3
    f9ca:	4f 92       	push	r4
    f9cc:	5f 92       	push	r5
    f9ce:	6f 92       	push	r6
    f9d0:	7f 92       	push	r7
    f9d2:	8f 92       	push	r8
    f9d4:	9f 92       	push	r9
    f9d6:	af 92       	push	r10
    f9d8:	bf 92       	push	r11
    f9da:	cf 92       	push	r12
    f9dc:	df 92       	push	r13
    f9de:	ef 92       	push	r14
    f9e0:	ff 92       	push	r15
    f9e2:	0f 93       	push	r16
    f9e4:	1f 93       	push	r17
    f9e6:	cf 93       	push	r28
    f9e8:	df 93       	push	r29
    f9ea:	cd b7       	in	r28, 0x3d	; 61
    f9ec:	de b7       	in	r29, 0x3e	; 62
    f9ee:	2b 97       	sbiw	r28, 0x0b	; 11
    f9f0:	cd bf       	out	0x3d, r28	; 61
    f9f2:	de bf       	out	0x3e, r29	; 62
    f9f4:	6c 01       	movw	r12, r24
    f9f6:	7b 01       	movw	r14, r22
    f9f8:	8a 01       	movw	r16, r20
    f9fa:	fc 01       	movw	r30, r24
    f9fc:	16 82       	std	Z+6, r1	; 0x06
    f9fe:	17 82       	std	Z+7, r1	; 0x07
    fa00:	83 81       	ldd	r24, Z+3	; 0x03
    fa02:	81 ff       	sbrs	r24, 1
    fa04:	cc c1       	rjmp	.+920    	; 0xfd9e <vfprintf+0x3d8>
    fa06:	ce 01       	movw	r24, r28
    fa08:	01 96       	adiw	r24, 0x01	; 1
    fa0a:	3c 01       	movw	r6, r24
    fa0c:	f6 01       	movw	r30, r12
    fa0e:	93 81       	ldd	r25, Z+3	; 0x03
    fa10:	f7 01       	movw	r30, r14
    fa12:	93 fd       	sbrc	r25, 3
    fa14:	85 91       	lpm	r24, Z+
    fa16:	93 ff       	sbrs	r25, 3
    fa18:	81 91       	ld	r24, Z+
    fa1a:	7f 01       	movw	r14, r30
    fa1c:	88 23       	and	r24, r24
    fa1e:	09 f4       	brne	.+2      	; 0xfa22 <vfprintf+0x5c>
    fa20:	ba c1       	rjmp	.+884    	; 0xfd96 <vfprintf+0x3d0>
    fa22:	85 32       	cpi	r24, 0x25	; 37
    fa24:	39 f4       	brne	.+14     	; 0xfa34 <vfprintf+0x6e>
    fa26:	93 fd       	sbrc	r25, 3
    fa28:	85 91       	lpm	r24, Z+
    fa2a:	93 ff       	sbrs	r25, 3
    fa2c:	81 91       	ld	r24, Z+
    fa2e:	7f 01       	movw	r14, r30
    fa30:	85 32       	cpi	r24, 0x25	; 37
    fa32:	29 f4       	brne	.+10     	; 0xfa3e <vfprintf+0x78>
    fa34:	b6 01       	movw	r22, r12
    fa36:	90 e0       	ldi	r25, 0x00	; 0
    fa38:	0e 94 c3 82 	call	0x10586	; 0x10586 <fputc>
    fa3c:	e7 cf       	rjmp	.-50     	; 0xfa0c <vfprintf+0x46>
    fa3e:	91 2c       	mov	r9, r1
    fa40:	21 2c       	mov	r2, r1
    fa42:	31 2c       	mov	r3, r1
    fa44:	ff e1       	ldi	r31, 0x1F	; 31
    fa46:	f3 15       	cp	r31, r3
    fa48:	d8 f0       	brcs	.+54     	; 0xfa80 <vfprintf+0xba>
    fa4a:	8b 32       	cpi	r24, 0x2B	; 43
    fa4c:	79 f0       	breq	.+30     	; 0xfa6c <vfprintf+0xa6>
    fa4e:	38 f4       	brcc	.+14     	; 0xfa5e <vfprintf+0x98>
    fa50:	80 32       	cpi	r24, 0x20	; 32
    fa52:	79 f0       	breq	.+30     	; 0xfa72 <vfprintf+0xac>
    fa54:	83 32       	cpi	r24, 0x23	; 35
    fa56:	a1 f4       	brne	.+40     	; 0xfa80 <vfprintf+0xba>
    fa58:	23 2d       	mov	r18, r3
    fa5a:	20 61       	ori	r18, 0x10	; 16
    fa5c:	1d c0       	rjmp	.+58     	; 0xfa98 <vfprintf+0xd2>
    fa5e:	8d 32       	cpi	r24, 0x2D	; 45
    fa60:	61 f0       	breq	.+24     	; 0xfa7a <vfprintf+0xb4>
    fa62:	80 33       	cpi	r24, 0x30	; 48
    fa64:	69 f4       	brne	.+26     	; 0xfa80 <vfprintf+0xba>
    fa66:	23 2d       	mov	r18, r3
    fa68:	21 60       	ori	r18, 0x01	; 1
    fa6a:	16 c0       	rjmp	.+44     	; 0xfa98 <vfprintf+0xd2>
    fa6c:	83 2d       	mov	r24, r3
    fa6e:	82 60       	ori	r24, 0x02	; 2
    fa70:	38 2e       	mov	r3, r24
    fa72:	e3 2d       	mov	r30, r3
    fa74:	e4 60       	ori	r30, 0x04	; 4
    fa76:	3e 2e       	mov	r3, r30
    fa78:	2a c0       	rjmp	.+84     	; 0xface <vfprintf+0x108>
    fa7a:	f3 2d       	mov	r31, r3
    fa7c:	f8 60       	ori	r31, 0x08	; 8
    fa7e:	1d c0       	rjmp	.+58     	; 0xfaba <vfprintf+0xf4>
    fa80:	37 fc       	sbrc	r3, 7
    fa82:	2d c0       	rjmp	.+90     	; 0xfade <vfprintf+0x118>
    fa84:	20 ed       	ldi	r18, 0xD0	; 208
    fa86:	28 0f       	add	r18, r24
    fa88:	2a 30       	cpi	r18, 0x0A	; 10
    fa8a:	40 f0       	brcs	.+16     	; 0xfa9c <vfprintf+0xd6>
    fa8c:	8e 32       	cpi	r24, 0x2E	; 46
    fa8e:	b9 f4       	brne	.+46     	; 0xfabe <vfprintf+0xf8>
    fa90:	36 fc       	sbrc	r3, 6
    fa92:	81 c1       	rjmp	.+770    	; 0xfd96 <vfprintf+0x3d0>
    fa94:	23 2d       	mov	r18, r3
    fa96:	20 64       	ori	r18, 0x40	; 64
    fa98:	32 2e       	mov	r3, r18
    fa9a:	19 c0       	rjmp	.+50     	; 0xface <vfprintf+0x108>
    fa9c:	36 fe       	sbrs	r3, 6
    fa9e:	06 c0       	rjmp	.+12     	; 0xfaac <vfprintf+0xe6>
    faa0:	8a e0       	ldi	r24, 0x0A	; 10
    faa2:	98 9e       	mul	r9, r24
    faa4:	20 0d       	add	r18, r0
    faa6:	11 24       	eor	r1, r1
    faa8:	92 2e       	mov	r9, r18
    faaa:	11 c0       	rjmp	.+34     	; 0xface <vfprintf+0x108>
    faac:	ea e0       	ldi	r30, 0x0A	; 10
    faae:	2e 9e       	mul	r2, r30
    fab0:	20 0d       	add	r18, r0
    fab2:	11 24       	eor	r1, r1
    fab4:	22 2e       	mov	r2, r18
    fab6:	f3 2d       	mov	r31, r3
    fab8:	f0 62       	ori	r31, 0x20	; 32
    faba:	3f 2e       	mov	r3, r31
    fabc:	08 c0       	rjmp	.+16     	; 0xface <vfprintf+0x108>
    fabe:	8c 36       	cpi	r24, 0x6C	; 108
    fac0:	21 f4       	brne	.+8      	; 0xfaca <vfprintf+0x104>
    fac2:	83 2d       	mov	r24, r3
    fac4:	80 68       	ori	r24, 0x80	; 128
    fac6:	38 2e       	mov	r3, r24
    fac8:	02 c0       	rjmp	.+4      	; 0xface <vfprintf+0x108>
    faca:	88 36       	cpi	r24, 0x68	; 104
    facc:	41 f4       	brne	.+16     	; 0xfade <vfprintf+0x118>
    face:	f7 01       	movw	r30, r14
    fad0:	93 fd       	sbrc	r25, 3
    fad2:	85 91       	lpm	r24, Z+
    fad4:	93 ff       	sbrs	r25, 3
    fad6:	81 91       	ld	r24, Z+
    fad8:	7f 01       	movw	r14, r30
    fada:	81 11       	cpse	r24, r1
    fadc:	b3 cf       	rjmp	.-154    	; 0xfa44 <vfprintf+0x7e>
    fade:	98 2f       	mov	r25, r24
    fae0:	9f 7d       	andi	r25, 0xDF	; 223
    fae2:	95 54       	subi	r25, 0x45	; 69
    fae4:	93 30       	cpi	r25, 0x03	; 3
    fae6:	28 f4       	brcc	.+10     	; 0xfaf2 <vfprintf+0x12c>
    fae8:	0c 5f       	subi	r16, 0xFC	; 252
    faea:	1f 4f       	sbci	r17, 0xFF	; 255
    faec:	9f e3       	ldi	r25, 0x3F	; 63
    faee:	99 83       	std	Y+1, r25	; 0x01
    faf0:	0d c0       	rjmp	.+26     	; 0xfb0c <vfprintf+0x146>
    faf2:	83 36       	cpi	r24, 0x63	; 99
    faf4:	31 f0       	breq	.+12     	; 0xfb02 <vfprintf+0x13c>
    faf6:	83 37       	cpi	r24, 0x73	; 115
    faf8:	71 f0       	breq	.+28     	; 0xfb16 <vfprintf+0x150>
    fafa:	83 35       	cpi	r24, 0x53	; 83
    fafc:	09 f0       	breq	.+2      	; 0xfb00 <vfprintf+0x13a>
    fafe:	59 c0       	rjmp	.+178    	; 0xfbb2 <vfprintf+0x1ec>
    fb00:	21 c0       	rjmp	.+66     	; 0xfb44 <vfprintf+0x17e>
    fb02:	f8 01       	movw	r30, r16
    fb04:	80 81       	ld	r24, Z
    fb06:	89 83       	std	Y+1, r24	; 0x01
    fb08:	0e 5f       	subi	r16, 0xFE	; 254
    fb0a:	1f 4f       	sbci	r17, 0xFF	; 255
    fb0c:	88 24       	eor	r8, r8
    fb0e:	83 94       	inc	r8
    fb10:	91 2c       	mov	r9, r1
    fb12:	53 01       	movw	r10, r6
    fb14:	13 c0       	rjmp	.+38     	; 0xfb3c <vfprintf+0x176>
    fb16:	28 01       	movw	r4, r16
    fb18:	f2 e0       	ldi	r31, 0x02	; 2
    fb1a:	4f 0e       	add	r4, r31
    fb1c:	51 1c       	adc	r5, r1
    fb1e:	f8 01       	movw	r30, r16
    fb20:	a0 80       	ld	r10, Z
    fb22:	b1 80       	ldd	r11, Z+1	; 0x01
    fb24:	36 fe       	sbrs	r3, 6
    fb26:	03 c0       	rjmp	.+6      	; 0xfb2e <vfprintf+0x168>
    fb28:	69 2d       	mov	r22, r9
    fb2a:	70 e0       	ldi	r23, 0x00	; 0
    fb2c:	02 c0       	rjmp	.+4      	; 0xfb32 <vfprintf+0x16c>
    fb2e:	6f ef       	ldi	r22, 0xFF	; 255
    fb30:	7f ef       	ldi	r23, 0xFF	; 255
    fb32:	c5 01       	movw	r24, r10
    fb34:	0e 94 b8 82 	call	0x10570	; 0x10570 <strnlen>
    fb38:	4c 01       	movw	r8, r24
    fb3a:	82 01       	movw	r16, r4
    fb3c:	f3 2d       	mov	r31, r3
    fb3e:	ff 77       	andi	r31, 0x7F	; 127
    fb40:	3f 2e       	mov	r3, r31
    fb42:	16 c0       	rjmp	.+44     	; 0xfb70 <vfprintf+0x1aa>
    fb44:	28 01       	movw	r4, r16
    fb46:	22 e0       	ldi	r18, 0x02	; 2
    fb48:	42 0e       	add	r4, r18
    fb4a:	51 1c       	adc	r5, r1
    fb4c:	f8 01       	movw	r30, r16
    fb4e:	a0 80       	ld	r10, Z
    fb50:	b1 80       	ldd	r11, Z+1	; 0x01
    fb52:	36 fe       	sbrs	r3, 6
    fb54:	03 c0       	rjmp	.+6      	; 0xfb5c <vfprintf+0x196>
    fb56:	69 2d       	mov	r22, r9
    fb58:	70 e0       	ldi	r23, 0x00	; 0
    fb5a:	02 c0       	rjmp	.+4      	; 0xfb60 <vfprintf+0x19a>
    fb5c:	6f ef       	ldi	r22, 0xFF	; 255
    fb5e:	7f ef       	ldi	r23, 0xFF	; 255
    fb60:	c5 01       	movw	r24, r10
    fb62:	0e 94 ad 82 	call	0x1055a	; 0x1055a <strnlen_P>
    fb66:	4c 01       	movw	r8, r24
    fb68:	f3 2d       	mov	r31, r3
    fb6a:	f0 68       	ori	r31, 0x80	; 128
    fb6c:	3f 2e       	mov	r3, r31
    fb6e:	82 01       	movw	r16, r4
    fb70:	33 fc       	sbrc	r3, 3
    fb72:	1b c0       	rjmp	.+54     	; 0xfbaa <vfprintf+0x1e4>
    fb74:	82 2d       	mov	r24, r2
    fb76:	90 e0       	ldi	r25, 0x00	; 0
    fb78:	88 16       	cp	r8, r24
    fb7a:	99 06       	cpc	r9, r25
    fb7c:	b0 f4       	brcc	.+44     	; 0xfbaa <vfprintf+0x1e4>
    fb7e:	b6 01       	movw	r22, r12
    fb80:	80 e2       	ldi	r24, 0x20	; 32
    fb82:	90 e0       	ldi	r25, 0x00	; 0
    fb84:	0e 94 c3 82 	call	0x10586	; 0x10586 <fputc>
    fb88:	2a 94       	dec	r2
    fb8a:	f4 cf       	rjmp	.-24     	; 0xfb74 <vfprintf+0x1ae>
    fb8c:	f5 01       	movw	r30, r10
    fb8e:	37 fc       	sbrc	r3, 7
    fb90:	85 91       	lpm	r24, Z+
    fb92:	37 fe       	sbrs	r3, 7
    fb94:	81 91       	ld	r24, Z+
    fb96:	5f 01       	movw	r10, r30
    fb98:	b6 01       	movw	r22, r12
    fb9a:	90 e0       	ldi	r25, 0x00	; 0
    fb9c:	0e 94 c3 82 	call	0x10586	; 0x10586 <fputc>
    fba0:	21 10       	cpse	r2, r1
    fba2:	2a 94       	dec	r2
    fba4:	21 e0       	ldi	r18, 0x01	; 1
    fba6:	82 1a       	sub	r8, r18
    fba8:	91 08       	sbc	r9, r1
    fbaa:	81 14       	cp	r8, r1
    fbac:	91 04       	cpc	r9, r1
    fbae:	71 f7       	brne	.-36     	; 0xfb8c <vfprintf+0x1c6>
    fbb0:	e8 c0       	rjmp	.+464    	; 0xfd82 <vfprintf+0x3bc>
    fbb2:	84 36       	cpi	r24, 0x64	; 100
    fbb4:	11 f0       	breq	.+4      	; 0xfbba <vfprintf+0x1f4>
    fbb6:	89 36       	cpi	r24, 0x69	; 105
    fbb8:	41 f5       	brne	.+80     	; 0xfc0a <vfprintf+0x244>
    fbba:	f8 01       	movw	r30, r16
    fbbc:	37 fe       	sbrs	r3, 7
    fbbe:	07 c0       	rjmp	.+14     	; 0xfbce <vfprintf+0x208>
    fbc0:	60 81       	ld	r22, Z
    fbc2:	71 81       	ldd	r23, Z+1	; 0x01
    fbc4:	82 81       	ldd	r24, Z+2	; 0x02
    fbc6:	93 81       	ldd	r25, Z+3	; 0x03
    fbc8:	0c 5f       	subi	r16, 0xFC	; 252
    fbca:	1f 4f       	sbci	r17, 0xFF	; 255
    fbcc:	08 c0       	rjmp	.+16     	; 0xfbde <vfprintf+0x218>
    fbce:	60 81       	ld	r22, Z
    fbd0:	71 81       	ldd	r23, Z+1	; 0x01
    fbd2:	07 2e       	mov	r0, r23
    fbd4:	00 0c       	add	r0, r0
    fbd6:	88 0b       	sbc	r24, r24
    fbd8:	99 0b       	sbc	r25, r25
    fbda:	0e 5f       	subi	r16, 0xFE	; 254
    fbdc:	1f 4f       	sbci	r17, 0xFF	; 255
    fbde:	f3 2d       	mov	r31, r3
    fbe0:	ff 76       	andi	r31, 0x6F	; 111
    fbe2:	3f 2e       	mov	r3, r31
    fbe4:	97 ff       	sbrs	r25, 7
    fbe6:	09 c0       	rjmp	.+18     	; 0xfbfa <vfprintf+0x234>
    fbe8:	90 95       	com	r25
    fbea:	80 95       	com	r24
    fbec:	70 95       	com	r23
    fbee:	61 95       	neg	r22
    fbf0:	7f 4f       	sbci	r23, 0xFF	; 255
    fbf2:	8f 4f       	sbci	r24, 0xFF	; 255
    fbf4:	9f 4f       	sbci	r25, 0xFF	; 255
    fbf6:	f0 68       	ori	r31, 0x80	; 128
    fbf8:	3f 2e       	mov	r3, r31
    fbfa:	2a e0       	ldi	r18, 0x0A	; 10
    fbfc:	30 e0       	ldi	r19, 0x00	; 0
    fbfe:	a3 01       	movw	r20, r6
    fc00:	0e 94 ff 82 	call	0x105fe	; 0x105fe <__ultoa_invert>
    fc04:	88 2e       	mov	r8, r24
    fc06:	86 18       	sub	r8, r6
    fc08:	45 c0       	rjmp	.+138    	; 0xfc94 <vfprintf+0x2ce>
    fc0a:	85 37       	cpi	r24, 0x75	; 117
    fc0c:	31 f4       	brne	.+12     	; 0xfc1a <vfprintf+0x254>
    fc0e:	23 2d       	mov	r18, r3
    fc10:	2f 7e       	andi	r18, 0xEF	; 239
    fc12:	b2 2e       	mov	r11, r18
    fc14:	2a e0       	ldi	r18, 0x0A	; 10
    fc16:	30 e0       	ldi	r19, 0x00	; 0
    fc18:	25 c0       	rjmp	.+74     	; 0xfc64 <vfprintf+0x29e>
    fc1a:	93 2d       	mov	r25, r3
    fc1c:	99 7f       	andi	r25, 0xF9	; 249
    fc1e:	b9 2e       	mov	r11, r25
    fc20:	8f 36       	cpi	r24, 0x6F	; 111
    fc22:	c1 f0       	breq	.+48     	; 0xfc54 <vfprintf+0x28e>
    fc24:	18 f4       	brcc	.+6      	; 0xfc2c <vfprintf+0x266>
    fc26:	88 35       	cpi	r24, 0x58	; 88
    fc28:	79 f0       	breq	.+30     	; 0xfc48 <vfprintf+0x282>
    fc2a:	b5 c0       	rjmp	.+362    	; 0xfd96 <vfprintf+0x3d0>
    fc2c:	80 37       	cpi	r24, 0x70	; 112
    fc2e:	19 f0       	breq	.+6      	; 0xfc36 <vfprintf+0x270>
    fc30:	88 37       	cpi	r24, 0x78	; 120
    fc32:	21 f0       	breq	.+8      	; 0xfc3c <vfprintf+0x276>
    fc34:	b0 c0       	rjmp	.+352    	; 0xfd96 <vfprintf+0x3d0>
    fc36:	e9 2f       	mov	r30, r25
    fc38:	e0 61       	ori	r30, 0x10	; 16
    fc3a:	be 2e       	mov	r11, r30
    fc3c:	b4 fe       	sbrs	r11, 4
    fc3e:	0d c0       	rjmp	.+26     	; 0xfc5a <vfprintf+0x294>
    fc40:	fb 2d       	mov	r31, r11
    fc42:	f4 60       	ori	r31, 0x04	; 4
    fc44:	bf 2e       	mov	r11, r31
    fc46:	09 c0       	rjmp	.+18     	; 0xfc5a <vfprintf+0x294>
    fc48:	34 fe       	sbrs	r3, 4
    fc4a:	0a c0       	rjmp	.+20     	; 0xfc60 <vfprintf+0x29a>
    fc4c:	29 2f       	mov	r18, r25
    fc4e:	26 60       	ori	r18, 0x06	; 6
    fc50:	b2 2e       	mov	r11, r18
    fc52:	06 c0       	rjmp	.+12     	; 0xfc60 <vfprintf+0x29a>
    fc54:	28 e0       	ldi	r18, 0x08	; 8
    fc56:	30 e0       	ldi	r19, 0x00	; 0
    fc58:	05 c0       	rjmp	.+10     	; 0xfc64 <vfprintf+0x29e>
    fc5a:	20 e1       	ldi	r18, 0x10	; 16
    fc5c:	30 e0       	ldi	r19, 0x00	; 0
    fc5e:	02 c0       	rjmp	.+4      	; 0xfc64 <vfprintf+0x29e>
    fc60:	20 e1       	ldi	r18, 0x10	; 16
    fc62:	32 e0       	ldi	r19, 0x02	; 2
    fc64:	f8 01       	movw	r30, r16
    fc66:	b7 fe       	sbrs	r11, 7
    fc68:	07 c0       	rjmp	.+14     	; 0xfc78 <vfprintf+0x2b2>
    fc6a:	60 81       	ld	r22, Z
    fc6c:	71 81       	ldd	r23, Z+1	; 0x01
    fc6e:	82 81       	ldd	r24, Z+2	; 0x02
    fc70:	93 81       	ldd	r25, Z+3	; 0x03
    fc72:	0c 5f       	subi	r16, 0xFC	; 252
    fc74:	1f 4f       	sbci	r17, 0xFF	; 255
    fc76:	06 c0       	rjmp	.+12     	; 0xfc84 <vfprintf+0x2be>
    fc78:	60 81       	ld	r22, Z
    fc7a:	71 81       	ldd	r23, Z+1	; 0x01
    fc7c:	80 e0       	ldi	r24, 0x00	; 0
    fc7e:	90 e0       	ldi	r25, 0x00	; 0
    fc80:	0e 5f       	subi	r16, 0xFE	; 254
    fc82:	1f 4f       	sbci	r17, 0xFF	; 255
    fc84:	a3 01       	movw	r20, r6
    fc86:	0e 94 ff 82 	call	0x105fe	; 0x105fe <__ultoa_invert>
    fc8a:	88 2e       	mov	r8, r24
    fc8c:	86 18       	sub	r8, r6
    fc8e:	fb 2d       	mov	r31, r11
    fc90:	ff 77       	andi	r31, 0x7F	; 127
    fc92:	3f 2e       	mov	r3, r31
    fc94:	36 fe       	sbrs	r3, 6
    fc96:	0d c0       	rjmp	.+26     	; 0xfcb2 <vfprintf+0x2ec>
    fc98:	23 2d       	mov	r18, r3
    fc9a:	2e 7f       	andi	r18, 0xFE	; 254
    fc9c:	a2 2e       	mov	r10, r18
    fc9e:	89 14       	cp	r8, r9
    fca0:	58 f4       	brcc	.+22     	; 0xfcb8 <vfprintf+0x2f2>
    fca2:	34 fe       	sbrs	r3, 4
    fca4:	0b c0       	rjmp	.+22     	; 0xfcbc <vfprintf+0x2f6>
    fca6:	32 fc       	sbrc	r3, 2
    fca8:	09 c0       	rjmp	.+18     	; 0xfcbc <vfprintf+0x2f6>
    fcaa:	83 2d       	mov	r24, r3
    fcac:	8e 7e       	andi	r24, 0xEE	; 238
    fcae:	a8 2e       	mov	r10, r24
    fcb0:	05 c0       	rjmp	.+10     	; 0xfcbc <vfprintf+0x2f6>
    fcb2:	b8 2c       	mov	r11, r8
    fcb4:	a3 2c       	mov	r10, r3
    fcb6:	03 c0       	rjmp	.+6      	; 0xfcbe <vfprintf+0x2f8>
    fcb8:	b8 2c       	mov	r11, r8
    fcba:	01 c0       	rjmp	.+2      	; 0xfcbe <vfprintf+0x2f8>
    fcbc:	b9 2c       	mov	r11, r9
    fcbe:	a4 fe       	sbrs	r10, 4
    fcc0:	0f c0       	rjmp	.+30     	; 0xfce0 <vfprintf+0x31a>
    fcc2:	fe 01       	movw	r30, r28
    fcc4:	e8 0d       	add	r30, r8
    fcc6:	f1 1d       	adc	r31, r1
    fcc8:	80 81       	ld	r24, Z
    fcca:	80 33       	cpi	r24, 0x30	; 48
    fccc:	21 f4       	brne	.+8      	; 0xfcd6 <vfprintf+0x310>
    fcce:	9a 2d       	mov	r25, r10
    fcd0:	99 7e       	andi	r25, 0xE9	; 233
    fcd2:	a9 2e       	mov	r10, r25
    fcd4:	09 c0       	rjmp	.+18     	; 0xfce8 <vfprintf+0x322>
    fcd6:	a2 fe       	sbrs	r10, 2
    fcd8:	06 c0       	rjmp	.+12     	; 0xfce6 <vfprintf+0x320>
    fcda:	b3 94       	inc	r11
    fcdc:	b3 94       	inc	r11
    fcde:	04 c0       	rjmp	.+8      	; 0xfce8 <vfprintf+0x322>
    fce0:	8a 2d       	mov	r24, r10
    fce2:	86 78       	andi	r24, 0x86	; 134
    fce4:	09 f0       	breq	.+2      	; 0xfce8 <vfprintf+0x322>
    fce6:	b3 94       	inc	r11
    fce8:	a3 fc       	sbrc	r10, 3
    fcea:	11 c0       	rjmp	.+34     	; 0xfd0e <vfprintf+0x348>
    fcec:	a0 fe       	sbrs	r10, 0
    fcee:	06 c0       	rjmp	.+12     	; 0xfcfc <vfprintf+0x336>
    fcf0:	b2 14       	cp	r11, r2
    fcf2:	88 f4       	brcc	.+34     	; 0xfd16 <vfprintf+0x350>
    fcf4:	28 0c       	add	r2, r8
    fcf6:	92 2c       	mov	r9, r2
    fcf8:	9b 18       	sub	r9, r11
    fcfa:	0e c0       	rjmp	.+28     	; 0xfd18 <vfprintf+0x352>
    fcfc:	b2 14       	cp	r11, r2
    fcfe:	60 f4       	brcc	.+24     	; 0xfd18 <vfprintf+0x352>
    fd00:	b6 01       	movw	r22, r12
    fd02:	80 e2       	ldi	r24, 0x20	; 32
    fd04:	90 e0       	ldi	r25, 0x00	; 0
    fd06:	0e 94 c3 82 	call	0x10586	; 0x10586 <fputc>
    fd0a:	b3 94       	inc	r11
    fd0c:	f7 cf       	rjmp	.-18     	; 0xfcfc <vfprintf+0x336>
    fd0e:	b2 14       	cp	r11, r2
    fd10:	18 f4       	brcc	.+6      	; 0xfd18 <vfprintf+0x352>
    fd12:	2b 18       	sub	r2, r11
    fd14:	02 c0       	rjmp	.+4      	; 0xfd1a <vfprintf+0x354>
    fd16:	98 2c       	mov	r9, r8
    fd18:	21 2c       	mov	r2, r1
    fd1a:	a4 fe       	sbrs	r10, 4
    fd1c:	10 c0       	rjmp	.+32     	; 0xfd3e <vfprintf+0x378>
    fd1e:	b6 01       	movw	r22, r12
    fd20:	80 e3       	ldi	r24, 0x30	; 48
    fd22:	90 e0       	ldi	r25, 0x00	; 0
    fd24:	0e 94 c3 82 	call	0x10586	; 0x10586 <fputc>
    fd28:	a2 fe       	sbrs	r10, 2
    fd2a:	17 c0       	rjmp	.+46     	; 0xfd5a <vfprintf+0x394>
    fd2c:	a1 fc       	sbrc	r10, 1
    fd2e:	03 c0       	rjmp	.+6      	; 0xfd36 <vfprintf+0x370>
    fd30:	88 e7       	ldi	r24, 0x78	; 120
    fd32:	90 e0       	ldi	r25, 0x00	; 0
    fd34:	02 c0       	rjmp	.+4      	; 0xfd3a <vfprintf+0x374>
    fd36:	88 e5       	ldi	r24, 0x58	; 88
    fd38:	90 e0       	ldi	r25, 0x00	; 0
    fd3a:	b6 01       	movw	r22, r12
    fd3c:	0c c0       	rjmp	.+24     	; 0xfd56 <vfprintf+0x390>
    fd3e:	8a 2d       	mov	r24, r10
    fd40:	86 78       	andi	r24, 0x86	; 134
    fd42:	59 f0       	breq	.+22     	; 0xfd5a <vfprintf+0x394>
    fd44:	a1 fe       	sbrs	r10, 1
    fd46:	02 c0       	rjmp	.+4      	; 0xfd4c <vfprintf+0x386>
    fd48:	8b e2       	ldi	r24, 0x2B	; 43
    fd4a:	01 c0       	rjmp	.+2      	; 0xfd4e <vfprintf+0x388>
    fd4c:	80 e2       	ldi	r24, 0x20	; 32
    fd4e:	a7 fc       	sbrc	r10, 7
    fd50:	8d e2       	ldi	r24, 0x2D	; 45
    fd52:	b6 01       	movw	r22, r12
    fd54:	90 e0       	ldi	r25, 0x00	; 0
    fd56:	0e 94 c3 82 	call	0x10586	; 0x10586 <fputc>
    fd5a:	89 14       	cp	r8, r9
    fd5c:	38 f4       	brcc	.+14     	; 0xfd6c <vfprintf+0x3a6>
    fd5e:	b6 01       	movw	r22, r12
    fd60:	80 e3       	ldi	r24, 0x30	; 48
    fd62:	90 e0       	ldi	r25, 0x00	; 0
    fd64:	0e 94 c3 82 	call	0x10586	; 0x10586 <fputc>
    fd68:	9a 94       	dec	r9
    fd6a:	f7 cf       	rjmp	.-18     	; 0xfd5a <vfprintf+0x394>
    fd6c:	8a 94       	dec	r8
    fd6e:	f3 01       	movw	r30, r6
    fd70:	e8 0d       	add	r30, r8
    fd72:	f1 1d       	adc	r31, r1
    fd74:	80 81       	ld	r24, Z
    fd76:	b6 01       	movw	r22, r12
    fd78:	90 e0       	ldi	r25, 0x00	; 0
    fd7a:	0e 94 c3 82 	call	0x10586	; 0x10586 <fputc>
    fd7e:	81 10       	cpse	r8, r1
    fd80:	f5 cf       	rjmp	.-22     	; 0xfd6c <vfprintf+0x3a6>
    fd82:	22 20       	and	r2, r2
    fd84:	09 f4       	brne	.+2      	; 0xfd88 <vfprintf+0x3c2>
    fd86:	42 ce       	rjmp	.-892    	; 0xfa0c <vfprintf+0x46>
    fd88:	b6 01       	movw	r22, r12
    fd8a:	80 e2       	ldi	r24, 0x20	; 32
    fd8c:	90 e0       	ldi	r25, 0x00	; 0
    fd8e:	0e 94 c3 82 	call	0x10586	; 0x10586 <fputc>
    fd92:	2a 94       	dec	r2
    fd94:	f6 cf       	rjmp	.-20     	; 0xfd82 <vfprintf+0x3bc>
    fd96:	f6 01       	movw	r30, r12
    fd98:	86 81       	ldd	r24, Z+6	; 0x06
    fd9a:	97 81       	ldd	r25, Z+7	; 0x07
    fd9c:	02 c0       	rjmp	.+4      	; 0xfda2 <vfprintf+0x3dc>
    fd9e:	8f ef       	ldi	r24, 0xFF	; 255
    fda0:	9f ef       	ldi	r25, 0xFF	; 255
    fda2:	2b 96       	adiw	r28, 0x0b	; 11
    fda4:	cd bf       	out	0x3d, r28	; 61
    fda6:	de bf       	out	0x3e, r29	; 62
    fda8:	df 91       	pop	r29
    fdaa:	cf 91       	pop	r28
    fdac:	1f 91       	pop	r17
    fdae:	0f 91       	pop	r16
    fdb0:	ff 90       	pop	r15
    fdb2:	ef 90       	pop	r14
    fdb4:	df 90       	pop	r13
    fdb6:	cf 90       	pop	r12
    fdb8:	bf 90       	pop	r11
    fdba:	af 90       	pop	r10
    fdbc:	9f 90       	pop	r9
    fdbe:	8f 90       	pop	r8
    fdc0:	7f 90       	pop	r7
    fdc2:	6f 90       	pop	r6
    fdc4:	5f 90       	pop	r5
    fdc6:	4f 90       	pop	r4
    fdc8:	3f 90       	pop	r3
    fdca:	2f 90       	pop	r2
    fdcc:	08 95       	ret

0000fdce <dtoa_prf>:
    fdce:	8f 92       	push	r8
    fdd0:	9f 92       	push	r9
    fdd2:	af 92       	push	r10
    fdd4:	bf 92       	push	r11
    fdd6:	cf 92       	push	r12
    fdd8:	df 92       	push	r13
    fdda:	ef 92       	push	r14
    fddc:	ff 92       	push	r15
    fdde:	0f 93       	push	r16
    fde0:	1f 93       	push	r17
    fde2:	cf 93       	push	r28
    fde4:	df 93       	push	r29
    fde6:	cd b7       	in	r28, 0x3d	; 61
    fde8:	de b7       	in	r29, 0x3e	; 62
    fdea:	29 97       	sbiw	r28, 0x09	; 9
    fdec:	cd bf       	out	0x3d, r28	; 61
    fdee:	de bf       	out	0x3e, r29	; 62
    fdf0:	6a 01       	movw	r12, r20
    fdf2:	12 2f       	mov	r17, r18
    fdf4:	b0 2e       	mov	r11, r16
    fdf6:	2b e3       	ldi	r18, 0x3B	; 59
    fdf8:	20 17       	cp	r18, r16
    fdfa:	20 f0       	brcs	.+8      	; 0xfe04 <dtoa_prf+0x36>
    fdfc:	ff 24       	eor	r15, r15
    fdfe:	f3 94       	inc	r15
    fe00:	f0 0e       	add	r15, r16
    fe02:	02 c0       	rjmp	.+4      	; 0xfe08 <dtoa_prf+0x3a>
    fe04:	2c e3       	ldi	r18, 0x3C	; 60
    fe06:	f2 2e       	mov	r15, r18
    fe08:	0f 2d       	mov	r16, r15
    fe0a:	27 e0       	ldi	r18, 0x07	; 7
    fe0c:	ae 01       	movw	r20, r28
    fe0e:	4f 5f       	subi	r20, 0xFF	; 255
    fe10:	5f 4f       	sbci	r21, 0xFF	; 255
    fe12:	0e 94 b4 81 	call	0x10368	; 0x10368 <__ftoa_engine>
    fe16:	bc 01       	movw	r22, r24
    fe18:	49 81       	ldd	r20, Y+1	; 0x01
    fe1a:	84 2f       	mov	r24, r20
    fe1c:	89 70       	andi	r24, 0x09	; 9
    fe1e:	81 30       	cpi	r24, 0x01	; 1
    fe20:	31 f0       	breq	.+12     	; 0xfe2e <dtoa_prf+0x60>
    fe22:	e1 fc       	sbrc	r14, 1
    fe24:	06 c0       	rjmp	.+12     	; 0xfe32 <dtoa_prf+0x64>
    fe26:	e0 fe       	sbrs	r14, 0
    fe28:	06 c0       	rjmp	.+12     	; 0xfe36 <dtoa_prf+0x68>
    fe2a:	90 e2       	ldi	r25, 0x20	; 32
    fe2c:	05 c0       	rjmp	.+10     	; 0xfe38 <dtoa_prf+0x6a>
    fe2e:	9d e2       	ldi	r25, 0x2D	; 45
    fe30:	03 c0       	rjmp	.+6      	; 0xfe38 <dtoa_prf+0x6a>
    fe32:	9b e2       	ldi	r25, 0x2B	; 43
    fe34:	01 c0       	rjmp	.+2      	; 0xfe38 <dtoa_prf+0x6a>
    fe36:	90 e0       	ldi	r25, 0x00	; 0
    fe38:	5e 2d       	mov	r21, r14
    fe3a:	50 71       	andi	r21, 0x10	; 16
    fe3c:	43 ff       	sbrs	r20, 3
    fe3e:	3c c0       	rjmp	.+120    	; 0xfeb8 <dtoa_prf+0xea>
    fe40:	91 11       	cpse	r25, r1
    fe42:	02 c0       	rjmp	.+4      	; 0xfe48 <dtoa_prf+0x7a>
    fe44:	83 e0       	ldi	r24, 0x03	; 3
    fe46:	01 c0       	rjmp	.+2      	; 0xfe4a <dtoa_prf+0x7c>
    fe48:	84 e0       	ldi	r24, 0x04	; 4
    fe4a:	81 17       	cp	r24, r17
    fe4c:	18 f4       	brcc	.+6      	; 0xfe54 <dtoa_prf+0x86>
    fe4e:	21 2f       	mov	r18, r17
    fe50:	28 1b       	sub	r18, r24
    fe52:	01 c0       	rjmp	.+2      	; 0xfe56 <dtoa_prf+0x88>
    fe54:	20 e0       	ldi	r18, 0x00	; 0
    fe56:	51 11       	cpse	r21, r1
    fe58:	0b c0       	rjmp	.+22     	; 0xfe70 <dtoa_prf+0xa2>
    fe5a:	f6 01       	movw	r30, r12
    fe5c:	82 2f       	mov	r24, r18
    fe5e:	30 e2       	ldi	r19, 0x20	; 32
    fe60:	88 23       	and	r24, r24
    fe62:	19 f0       	breq	.+6      	; 0xfe6a <dtoa_prf+0x9c>
    fe64:	31 93       	st	Z+, r19
    fe66:	81 50       	subi	r24, 0x01	; 1
    fe68:	fb cf       	rjmp	.-10     	; 0xfe60 <dtoa_prf+0x92>
    fe6a:	c2 0e       	add	r12, r18
    fe6c:	d1 1c       	adc	r13, r1
    fe6e:	20 e0       	ldi	r18, 0x00	; 0
    fe70:	99 23       	and	r25, r25
    fe72:	29 f0       	breq	.+10     	; 0xfe7e <dtoa_prf+0xb0>
    fe74:	d6 01       	movw	r26, r12
    fe76:	9c 93       	st	X, r25
    fe78:	f6 01       	movw	r30, r12
    fe7a:	31 96       	adiw	r30, 0x01	; 1
    fe7c:	6f 01       	movw	r12, r30
    fe7e:	c6 01       	movw	r24, r12
    fe80:	03 96       	adiw	r24, 0x03	; 3
    fe82:	e2 fe       	sbrs	r14, 2
    fe84:	0a c0       	rjmp	.+20     	; 0xfe9a <dtoa_prf+0xcc>
    fe86:	3e e4       	ldi	r19, 0x4E	; 78
    fe88:	d6 01       	movw	r26, r12
    fe8a:	3c 93       	st	X, r19
    fe8c:	41 e4       	ldi	r20, 0x41	; 65
    fe8e:	11 96       	adiw	r26, 0x01	; 1
    fe90:	4c 93       	st	X, r20
    fe92:	11 97       	sbiw	r26, 0x01	; 1
    fe94:	12 96       	adiw	r26, 0x02	; 2
    fe96:	3c 93       	st	X, r19
    fe98:	06 c0       	rjmp	.+12     	; 0xfea6 <dtoa_prf+0xd8>
    fe9a:	3e e6       	ldi	r19, 0x6E	; 110
    fe9c:	f6 01       	movw	r30, r12
    fe9e:	30 83       	st	Z, r19
    fea0:	41 e6       	ldi	r20, 0x61	; 97
    fea2:	41 83       	std	Z+1, r20	; 0x01
    fea4:	32 83       	std	Z+2, r19	; 0x02
    fea6:	fc 01       	movw	r30, r24
    fea8:	32 2f       	mov	r19, r18
    feaa:	40 e2       	ldi	r20, 0x20	; 32
    feac:	33 23       	and	r19, r19
    feae:	09 f4       	brne	.+2      	; 0xfeb2 <dtoa_prf+0xe4>
    feb0:	42 c0       	rjmp	.+132    	; 0xff36 <dtoa_prf+0x168>
    feb2:	41 93       	st	Z+, r20
    feb4:	31 50       	subi	r19, 0x01	; 1
    feb6:	fa cf       	rjmp	.-12     	; 0xfeac <dtoa_prf+0xde>
    feb8:	42 ff       	sbrs	r20, 2
    feba:	44 c0       	rjmp	.+136    	; 0xff44 <dtoa_prf+0x176>
    febc:	91 11       	cpse	r25, r1
    febe:	02 c0       	rjmp	.+4      	; 0xfec4 <dtoa_prf+0xf6>
    fec0:	83 e0       	ldi	r24, 0x03	; 3
    fec2:	01 c0       	rjmp	.+2      	; 0xfec6 <dtoa_prf+0xf8>
    fec4:	84 e0       	ldi	r24, 0x04	; 4
    fec6:	81 17       	cp	r24, r17
    fec8:	18 f4       	brcc	.+6      	; 0xfed0 <dtoa_prf+0x102>
    feca:	21 2f       	mov	r18, r17
    fecc:	28 1b       	sub	r18, r24
    fece:	01 c0       	rjmp	.+2      	; 0xfed2 <dtoa_prf+0x104>
    fed0:	20 e0       	ldi	r18, 0x00	; 0
    fed2:	51 11       	cpse	r21, r1
    fed4:	0b c0       	rjmp	.+22     	; 0xfeec <dtoa_prf+0x11e>
    fed6:	f6 01       	movw	r30, r12
    fed8:	82 2f       	mov	r24, r18
    feda:	30 e2       	ldi	r19, 0x20	; 32
    fedc:	88 23       	and	r24, r24
    fede:	19 f0       	breq	.+6      	; 0xfee6 <dtoa_prf+0x118>
    fee0:	31 93       	st	Z+, r19
    fee2:	81 50       	subi	r24, 0x01	; 1
    fee4:	fb cf       	rjmp	.-10     	; 0xfedc <dtoa_prf+0x10e>
    fee6:	c2 0e       	add	r12, r18
    fee8:	d1 1c       	adc	r13, r1
    feea:	20 e0       	ldi	r18, 0x00	; 0
    feec:	99 23       	and	r25, r25
    feee:	29 f0       	breq	.+10     	; 0xfefa <dtoa_prf+0x12c>
    fef0:	d6 01       	movw	r26, r12
    fef2:	9c 93       	st	X, r25
    fef4:	f6 01       	movw	r30, r12
    fef6:	31 96       	adiw	r30, 0x01	; 1
    fef8:	6f 01       	movw	r12, r30
    fefa:	c6 01       	movw	r24, r12
    fefc:	03 96       	adiw	r24, 0x03	; 3
    fefe:	e2 fe       	sbrs	r14, 2
    ff00:	0b c0       	rjmp	.+22     	; 0xff18 <dtoa_prf+0x14a>
    ff02:	39 e4       	ldi	r19, 0x49	; 73
    ff04:	d6 01       	movw	r26, r12
    ff06:	3c 93       	st	X, r19
    ff08:	3e e4       	ldi	r19, 0x4E	; 78
    ff0a:	11 96       	adiw	r26, 0x01	; 1
    ff0c:	3c 93       	st	X, r19
    ff0e:	11 97       	sbiw	r26, 0x01	; 1
    ff10:	36 e4       	ldi	r19, 0x46	; 70
    ff12:	12 96       	adiw	r26, 0x02	; 2
    ff14:	3c 93       	st	X, r19
    ff16:	07 c0       	rjmp	.+14     	; 0xff26 <dtoa_prf+0x158>
    ff18:	39 e6       	ldi	r19, 0x69	; 105
    ff1a:	f6 01       	movw	r30, r12
    ff1c:	30 83       	st	Z, r19
    ff1e:	3e e6       	ldi	r19, 0x6E	; 110
    ff20:	31 83       	std	Z+1, r19	; 0x01
    ff22:	36 e6       	ldi	r19, 0x66	; 102
    ff24:	32 83       	std	Z+2, r19	; 0x02
    ff26:	fc 01       	movw	r30, r24
    ff28:	32 2f       	mov	r19, r18
    ff2a:	40 e2       	ldi	r20, 0x20	; 32
    ff2c:	33 23       	and	r19, r19
    ff2e:	19 f0       	breq	.+6      	; 0xff36 <dtoa_prf+0x168>
    ff30:	41 93       	st	Z+, r20
    ff32:	31 50       	subi	r19, 0x01	; 1
    ff34:	fb cf       	rjmp	.-10     	; 0xff2c <dtoa_prf+0x15e>
    ff36:	fc 01       	movw	r30, r24
    ff38:	e2 0f       	add	r30, r18
    ff3a:	f1 1d       	adc	r31, r1
    ff3c:	10 82       	st	Z, r1
    ff3e:	8e ef       	ldi	r24, 0xFE	; 254
    ff40:	9f ef       	ldi	r25, 0xFF	; 255
    ff42:	a6 c0       	rjmp	.+332    	; 0x10090 <dtoa_prf+0x2c2>
    ff44:	21 e0       	ldi	r18, 0x01	; 1
    ff46:	30 e0       	ldi	r19, 0x00	; 0
    ff48:	91 11       	cpse	r25, r1
    ff4a:	02 c0       	rjmp	.+4      	; 0xff50 <dtoa_prf+0x182>
    ff4c:	20 e0       	ldi	r18, 0x00	; 0
    ff4e:	30 e0       	ldi	r19, 0x00	; 0
    ff50:	16 16       	cp	r1, r22
    ff52:	17 06       	cpc	r1, r23
    ff54:	1c f4       	brge	.+6      	; 0xff5c <dtoa_prf+0x18e>
    ff56:	fb 01       	movw	r30, r22
    ff58:	31 96       	adiw	r30, 0x01	; 1
    ff5a:	02 c0       	rjmp	.+4      	; 0xff60 <dtoa_prf+0x192>
    ff5c:	e1 e0       	ldi	r30, 0x01	; 1
    ff5e:	f0 e0       	ldi	r31, 0x00	; 0
    ff60:	2e 0f       	add	r18, r30
    ff62:	3f 1f       	adc	r19, r31
    ff64:	bb 20       	and	r11, r11
    ff66:	21 f0       	breq	.+8      	; 0xff70 <dtoa_prf+0x1a2>
    ff68:	eb 2d       	mov	r30, r11
    ff6a:	f0 e0       	ldi	r31, 0x00	; 0
    ff6c:	31 96       	adiw	r30, 0x01	; 1
    ff6e:	02 c0       	rjmp	.+4      	; 0xff74 <dtoa_prf+0x1a6>
    ff70:	e0 e0       	ldi	r30, 0x00	; 0
    ff72:	f0 e0       	ldi	r31, 0x00	; 0
    ff74:	2e 0f       	add	r18, r30
    ff76:	3f 1f       	adc	r19, r31
    ff78:	e1 2f       	mov	r30, r17
    ff7a:	f0 e0       	ldi	r31, 0x00	; 0
    ff7c:	2e 17       	cp	r18, r30
    ff7e:	3f 07       	cpc	r19, r31
    ff80:	1c f4       	brge	.+6      	; 0xff88 <dtoa_prf+0x1ba>
    ff82:	12 1b       	sub	r17, r18
    ff84:	21 2f       	mov	r18, r17
    ff86:	01 c0       	rjmp	.+2      	; 0xff8a <dtoa_prf+0x1bc>
    ff88:	20 e0       	ldi	r18, 0x00	; 0
    ff8a:	8e 2d       	mov	r24, r14
    ff8c:	88 71       	andi	r24, 0x18	; 24
    ff8e:	59 f4       	brne	.+22     	; 0xffa6 <dtoa_prf+0x1d8>
    ff90:	f6 01       	movw	r30, r12
    ff92:	82 2f       	mov	r24, r18
    ff94:	30 e2       	ldi	r19, 0x20	; 32
    ff96:	88 23       	and	r24, r24
    ff98:	19 f0       	breq	.+6      	; 0xffa0 <dtoa_prf+0x1d2>
    ff9a:	31 93       	st	Z+, r19
    ff9c:	81 50       	subi	r24, 0x01	; 1
    ff9e:	fb cf       	rjmp	.-10     	; 0xff96 <dtoa_prf+0x1c8>
    ffa0:	c2 0e       	add	r12, r18
    ffa2:	d1 1c       	adc	r13, r1
    ffa4:	20 e0       	ldi	r18, 0x00	; 0
    ffa6:	99 23       	and	r25, r25
    ffa8:	29 f0       	breq	.+10     	; 0xffb4 <dtoa_prf+0x1e6>
    ffaa:	d6 01       	movw	r26, r12
    ffac:	9c 93       	st	X, r25
    ffae:	f6 01       	movw	r30, r12
    ffb0:	31 96       	adiw	r30, 0x01	; 1
    ffb2:	6f 01       	movw	r12, r30
    ffb4:	51 11       	cpse	r21, r1
    ffb6:	0b c0       	rjmp	.+22     	; 0xffce <dtoa_prf+0x200>
    ffb8:	f6 01       	movw	r30, r12
    ffba:	82 2f       	mov	r24, r18
    ffbc:	90 e3       	ldi	r25, 0x30	; 48
    ffbe:	88 23       	and	r24, r24
    ffc0:	19 f0       	breq	.+6      	; 0xffc8 <dtoa_prf+0x1fa>
    ffc2:	91 93       	st	Z+, r25
    ffc4:	81 50       	subi	r24, 0x01	; 1
    ffc6:	fb cf       	rjmp	.-10     	; 0xffbe <dtoa_prf+0x1f0>
    ffc8:	c2 0e       	add	r12, r18
    ffca:	d1 1c       	adc	r13, r1
    ffcc:	20 e0       	ldi	r18, 0x00	; 0
    ffce:	0f 2d       	mov	r16, r15
    ffd0:	06 0f       	add	r16, r22
    ffd2:	9a 81       	ldd	r25, Y+2	; 0x02
    ffd4:	34 2f       	mov	r19, r20
    ffd6:	30 71       	andi	r19, 0x10	; 16
    ffd8:	44 ff       	sbrs	r20, 4
    ffda:	03 c0       	rjmp	.+6      	; 0xffe2 <dtoa_prf+0x214>
    ffdc:	91 33       	cpi	r25, 0x31	; 49
    ffde:	09 f4       	brne	.+2      	; 0xffe2 <dtoa_prf+0x214>
    ffe0:	01 50       	subi	r16, 0x01	; 1
    ffe2:	10 16       	cp	r1, r16
    ffe4:	24 f4       	brge	.+8      	; 0xffee <dtoa_prf+0x220>
    ffe6:	09 30       	cpi	r16, 0x09	; 9
    ffe8:	18 f0       	brcs	.+6      	; 0xfff0 <dtoa_prf+0x222>
    ffea:	08 e0       	ldi	r16, 0x08	; 8
    ffec:	01 c0       	rjmp	.+2      	; 0xfff0 <dtoa_prf+0x222>
    ffee:	01 e0       	ldi	r16, 0x01	; 1
    fff0:	ab 01       	movw	r20, r22
    fff2:	77 ff       	sbrs	r23, 7
    fff4:	02 c0       	rjmp	.+4      	; 0xfffa <dtoa_prf+0x22c>
    fff6:	40 e0       	ldi	r20, 0x00	; 0
    fff8:	50 e0       	ldi	r21, 0x00	; 0
    fffa:	fb 01       	movw	r30, r22
    fffc:	e4 1b       	sub	r30, r20
    fffe:	f5 0b       	sbc	r31, r21
   10000:	a1 e0       	ldi	r26, 0x01	; 1
   10002:	b0 e0       	ldi	r27, 0x00	; 0
   10004:	ac 0f       	add	r26, r28
   10006:	bd 1f       	adc	r27, r29
   10008:	ea 0f       	add	r30, r26
   1000a:	fb 1f       	adc	r31, r27
   1000c:	8e e2       	ldi	r24, 0x2E	; 46
   1000e:	a8 2e       	mov	r10, r24
   10010:	4b 01       	movw	r8, r22
   10012:	80 1a       	sub	r8, r16
   10014:	91 08       	sbc	r9, r1
   10016:	0b 2d       	mov	r16, r11
   10018:	10 e0       	ldi	r17, 0x00	; 0
   1001a:	11 95       	neg	r17
   1001c:	01 95       	neg	r16
   1001e:	11 09       	sbc	r17, r1
   10020:	4f 3f       	cpi	r20, 0xFF	; 255
   10022:	bf ef       	ldi	r27, 0xFF	; 255
   10024:	5b 07       	cpc	r21, r27
   10026:	21 f4       	brne	.+8      	; 0x10030 <dtoa_prf+0x262>
   10028:	d6 01       	movw	r26, r12
   1002a:	ac 92       	st	X, r10
   1002c:	11 96       	adiw	r26, 0x01	; 1
   1002e:	6d 01       	movw	r12, r26
   10030:	64 17       	cp	r22, r20
   10032:	75 07       	cpc	r23, r21
   10034:	2c f0       	brlt	.+10     	; 0x10040 <dtoa_prf+0x272>
   10036:	84 16       	cp	r8, r20
   10038:	95 06       	cpc	r9, r21
   1003a:	14 f4       	brge	.+4      	; 0x10040 <dtoa_prf+0x272>
   1003c:	81 81       	ldd	r24, Z+1	; 0x01
   1003e:	01 c0       	rjmp	.+2      	; 0x10042 <dtoa_prf+0x274>
   10040:	80 e3       	ldi	r24, 0x30	; 48
   10042:	41 50       	subi	r20, 0x01	; 1
   10044:	51 09       	sbc	r21, r1
   10046:	31 96       	adiw	r30, 0x01	; 1
   10048:	d6 01       	movw	r26, r12
   1004a:	11 96       	adiw	r26, 0x01	; 1
   1004c:	7d 01       	movw	r14, r26
   1004e:	40 17       	cp	r20, r16
   10050:	51 07       	cpc	r21, r17
   10052:	24 f0       	brlt	.+8      	; 0x1005c <dtoa_prf+0x28e>
   10054:	d6 01       	movw	r26, r12
   10056:	8c 93       	st	X, r24
   10058:	67 01       	movw	r12, r14
   1005a:	e2 cf       	rjmp	.-60     	; 0x10020 <dtoa_prf+0x252>
   1005c:	64 17       	cp	r22, r20
   1005e:	75 07       	cpc	r23, r21
   10060:	39 f4       	brne	.+14     	; 0x10070 <dtoa_prf+0x2a2>
   10062:	96 33       	cpi	r25, 0x36	; 54
   10064:	20 f4       	brcc	.+8      	; 0x1006e <dtoa_prf+0x2a0>
   10066:	95 33       	cpi	r25, 0x35	; 53
   10068:	19 f4       	brne	.+6      	; 0x10070 <dtoa_prf+0x2a2>
   1006a:	31 11       	cpse	r19, r1
   1006c:	01 c0       	rjmp	.+2      	; 0x10070 <dtoa_prf+0x2a2>
   1006e:	81 e3       	ldi	r24, 0x31	; 49
   10070:	f6 01       	movw	r30, r12
   10072:	80 83       	st	Z, r24
   10074:	f7 01       	movw	r30, r14
   10076:	82 2f       	mov	r24, r18
   10078:	90 e2       	ldi	r25, 0x20	; 32
   1007a:	88 23       	and	r24, r24
   1007c:	19 f0       	breq	.+6      	; 0x10084 <dtoa_prf+0x2b6>
   1007e:	91 93       	st	Z+, r25
   10080:	81 50       	subi	r24, 0x01	; 1
   10082:	fb cf       	rjmp	.-10     	; 0x1007a <dtoa_prf+0x2ac>
   10084:	f7 01       	movw	r30, r14
   10086:	e2 0f       	add	r30, r18
   10088:	f1 1d       	adc	r31, r1
   1008a:	10 82       	st	Z, r1
   1008c:	80 e0       	ldi	r24, 0x00	; 0
   1008e:	90 e0       	ldi	r25, 0x00	; 0
   10090:	29 96       	adiw	r28, 0x09	; 9
   10092:	cd bf       	out	0x3d, r28	; 61
   10094:	de bf       	out	0x3e, r29	; 62
   10096:	df 91       	pop	r29
   10098:	cf 91       	pop	r28
   1009a:	1f 91       	pop	r17
   1009c:	0f 91       	pop	r16
   1009e:	ff 90       	pop	r15
   100a0:	ef 90       	pop	r14
   100a2:	df 90       	pop	r13
   100a4:	cf 90       	pop	r12
   100a6:	bf 90       	pop	r11
   100a8:	af 90       	pop	r10
   100aa:	9f 90       	pop	r9
   100ac:	8f 90       	pop	r8
   100ae:	08 95       	ret

000100b0 <strtod>:
   100b0:	8f 92       	push	r8
   100b2:	9f 92       	push	r9
   100b4:	af 92       	push	r10
   100b6:	bf 92       	push	r11
   100b8:	cf 92       	push	r12
   100ba:	df 92       	push	r13
   100bc:	ef 92       	push	r14
   100be:	ff 92       	push	r15
   100c0:	0f 93       	push	r16
   100c2:	1f 93       	push	r17
   100c4:	cf 93       	push	r28
   100c6:	df 93       	push	r29
   100c8:	ec 01       	movw	r28, r24
   100ca:	6b 01       	movw	r12, r22
   100cc:	61 15       	cp	r22, r1
   100ce:	71 05       	cpc	r23, r1
   100d0:	19 f0       	breq	.+6      	; 0x100d8 <strtod+0x28>
   100d2:	fb 01       	movw	r30, r22
   100d4:	80 83       	st	Z, r24
   100d6:	91 83       	std	Z+1, r25	; 0x01
   100d8:	7e 01       	movw	r14, r28
   100da:	ff ef       	ldi	r31, 0xFF	; 255
   100dc:	ef 1a       	sub	r14, r31
   100de:	ff 0a       	sbc	r15, r31
   100e0:	08 81       	ld	r16, Y
   100e2:	80 2f       	mov	r24, r16
   100e4:	90 e0       	ldi	r25, 0x00	; 0
   100e6:	0e 94 8c 82 	call	0x10518	; 0x10518 <isspace>
   100ea:	89 2b       	or	r24, r25
   100ec:	11 f0       	breq	.+4      	; 0x100f2 <strtod+0x42>
   100ee:	e7 01       	movw	r28, r14
   100f0:	f3 cf       	rjmp	.-26     	; 0x100d8 <strtod+0x28>
   100f2:	0d 32       	cpi	r16, 0x2D	; 45
   100f4:	39 f4       	brne	.+14     	; 0x10104 <strtod+0x54>
   100f6:	7e 01       	movw	r14, r28
   100f8:	82 e0       	ldi	r24, 0x02	; 2
   100fa:	e8 0e       	add	r14, r24
   100fc:	f1 1c       	adc	r15, r1
   100fe:	09 81       	ldd	r16, Y+1	; 0x01
   10100:	11 e0       	ldi	r17, 0x01	; 1
   10102:	08 c0       	rjmp	.+16     	; 0x10114 <strtod+0x64>
   10104:	0b 32       	cpi	r16, 0x2B	; 43
   10106:	29 f4       	brne	.+10     	; 0x10112 <strtod+0x62>
   10108:	7e 01       	movw	r14, r28
   1010a:	92 e0       	ldi	r25, 0x02	; 2
   1010c:	e9 0e       	add	r14, r25
   1010e:	f1 1c       	adc	r15, r1
   10110:	09 81       	ldd	r16, Y+1	; 0x01
   10112:	10 e0       	ldi	r17, 0x00	; 0
   10114:	e7 01       	movw	r28, r14
   10116:	21 97       	sbiw	r28, 0x01	; 1
   10118:	43 e0       	ldi	r20, 0x03	; 3
   1011a:	50 e0       	ldi	r21, 0x00	; 0
   1011c:	6e ea       	ldi	r22, 0xAE	; 174
   1011e:	72 e0       	ldi	r23, 0x02	; 2
   10120:	ce 01       	movw	r24, r28
   10122:	0e 94 95 82 	call	0x1052a	; 0x1052a <strncasecmp_P>
   10126:	89 2b       	or	r24, r25
   10128:	c1 f4       	brne	.+48     	; 0x1015a <strtod+0xaa>
   1012a:	23 96       	adiw	r28, 0x03	; 3
   1012c:	45 e0       	ldi	r20, 0x05	; 5
   1012e:	50 e0       	ldi	r21, 0x00	; 0
   10130:	69 ea       	ldi	r22, 0xA9	; 169
   10132:	72 e0       	ldi	r23, 0x02	; 2
   10134:	ce 01       	movw	r24, r28
   10136:	0e 94 95 82 	call	0x1052a	; 0x1052a <strncasecmp_P>
   1013a:	89 2b       	or	r24, r25
   1013c:	09 f4       	brne	.+2      	; 0x10140 <strtod+0x90>
   1013e:	25 96       	adiw	r28, 0x05	; 5
   10140:	c1 14       	cp	r12, r1
   10142:	d1 04       	cpc	r13, r1
   10144:	19 f0       	breq	.+6      	; 0x1014c <strtod+0x9c>
   10146:	f6 01       	movw	r30, r12
   10148:	c0 83       	st	Z, r28
   1014a:	d1 83       	std	Z+1, r29	; 0x01
   1014c:	11 11       	cpse	r17, r1
   1014e:	f6 c0       	rjmp	.+492    	; 0x1033c <strtod+0x28c>
   10150:	60 e0       	ldi	r22, 0x00	; 0
   10152:	70 e0       	ldi	r23, 0x00	; 0
   10154:	80 e8       	ldi	r24, 0x80	; 128
   10156:	9f e7       	ldi	r25, 0x7F	; 127
   10158:	fa c0       	rjmp	.+500    	; 0x1034e <strtod+0x29e>
   1015a:	43 e0       	ldi	r20, 0x03	; 3
   1015c:	50 e0       	ldi	r21, 0x00	; 0
   1015e:	66 ea       	ldi	r22, 0xA6	; 166
   10160:	72 e0       	ldi	r23, 0x02	; 2
   10162:	ce 01       	movw	r24, r28
   10164:	0e 94 95 82 	call	0x1052a	; 0x1052a <strncasecmp_P>
   10168:	89 2b       	or	r24, r25
   1016a:	59 f4       	brne	.+22     	; 0x10182 <strtod+0xd2>
   1016c:	c1 14       	cp	r12, r1
   1016e:	d1 04       	cpc	r13, r1
   10170:	09 f4       	brne	.+2      	; 0x10174 <strtod+0xc4>
   10172:	e9 c0       	rjmp	.+466    	; 0x10346 <strtod+0x296>
   10174:	f2 e0       	ldi	r31, 0x02	; 2
   10176:	ef 0e       	add	r14, r31
   10178:	f1 1c       	adc	r15, r1
   1017a:	f6 01       	movw	r30, r12
   1017c:	e0 82       	st	Z, r14
   1017e:	f1 82       	std	Z+1, r15	; 0x01
   10180:	e2 c0       	rjmp	.+452    	; 0x10346 <strtod+0x296>
   10182:	20 e0       	ldi	r18, 0x00	; 0
   10184:	30 e0       	ldi	r19, 0x00	; 0
   10186:	a9 01       	movw	r20, r18
   10188:	c0 e0       	ldi	r28, 0x00	; 0
   1018a:	d0 e0       	ldi	r29, 0x00	; 0
   1018c:	f7 01       	movw	r30, r14
   1018e:	60 ed       	ldi	r22, 0xD0	; 208
   10190:	a6 2e       	mov	r10, r22
   10192:	a0 0e       	add	r10, r16
   10194:	89 e0       	ldi	r24, 0x09	; 9
   10196:	8a 15       	cp	r24, r10
   10198:	30 f1       	brcs	.+76     	; 0x101e6 <strtod+0x136>
   1019a:	91 2f       	mov	r25, r17
   1019c:	92 60       	ori	r25, 0x02	; 2
   1019e:	b9 2e       	mov	r11, r25
   101a0:	81 2f       	mov	r24, r17
   101a2:	88 70       	andi	r24, 0x08	; 8
   101a4:	12 ff       	sbrs	r17, 2
   101a6:	04 c0       	rjmp	.+8      	; 0x101b0 <strtod+0x100>
   101a8:	81 11       	cpse	r24, r1
   101aa:	24 c0       	rjmp	.+72     	; 0x101f4 <strtod+0x144>
   101ac:	21 96       	adiw	r28, 0x01	; 1
   101ae:	22 c0       	rjmp	.+68     	; 0x101f4 <strtod+0x144>
   101b0:	81 11       	cpse	r24, r1
   101b2:	21 97       	sbiw	r28, 0x01	; 1
   101b4:	a5 e0       	ldi	r26, 0x05	; 5
   101b6:	b0 e0       	ldi	r27, 0x00	; 0
   101b8:	0e 94 bb 7a 	call	0xf576	; 0xf576 <__muluhisi3>
   101bc:	dc 01       	movw	r26, r24
   101be:	cb 01       	movw	r24, r22
   101c0:	88 0f       	add	r24, r24
   101c2:	99 1f       	adc	r25, r25
   101c4:	aa 1f       	adc	r26, r26
   101c6:	bb 1f       	adc	r27, r27
   101c8:	9c 01       	movw	r18, r24
   101ca:	ad 01       	movw	r20, r26
   101cc:	2a 0d       	add	r18, r10
   101ce:	31 1d       	adc	r19, r1
   101d0:	41 1d       	adc	r20, r1
   101d2:	51 1d       	adc	r21, r1
   101d4:	28 39       	cpi	r18, 0x98	; 152
   101d6:	89 e9       	ldi	r24, 0x99	; 153
   101d8:	38 07       	cpc	r19, r24
   101da:	48 07       	cpc	r20, r24
   101dc:	89 e1       	ldi	r24, 0x19	; 25
   101de:	58 07       	cpc	r21, r24
   101e0:	48 f0       	brcs	.+18     	; 0x101f4 <strtod+0x144>
   101e2:	16 60       	ori	r17, 0x06	; 6
   101e4:	06 c0       	rjmp	.+12     	; 0x101f2 <strtod+0x142>
   101e6:	9e ef       	ldi	r25, 0xFE	; 254
   101e8:	a9 12       	cpse	r10, r25
   101ea:	0a c0       	rjmp	.+20     	; 0x10200 <strtod+0x150>
   101ec:	13 fd       	sbrc	r17, 3
   101ee:	40 c0       	rjmp	.+128    	; 0x10270 <strtod+0x1c0>
   101f0:	18 60       	ori	r17, 0x08	; 8
   101f2:	b1 2e       	mov	r11, r17
   101f4:	8f ef       	ldi	r24, 0xFF	; 255
   101f6:	e8 1a       	sub	r14, r24
   101f8:	f8 0a       	sbc	r15, r24
   101fa:	00 81       	ld	r16, Z
   101fc:	1b 2d       	mov	r17, r11
   101fe:	c6 cf       	rjmp	.-116    	; 0x1018c <strtod+0xdc>
   10200:	80 2f       	mov	r24, r16
   10202:	8f 7d       	andi	r24, 0xDF	; 223
   10204:	85 34       	cpi	r24, 0x45	; 69
   10206:	a1 f5       	brne	.+104    	; 0x10270 <strtod+0x1c0>
   10208:	80 81       	ld	r24, Z
   1020a:	8d 32       	cpi	r24, 0x2D	; 45
   1020c:	11 f4       	brne	.+4      	; 0x10212 <strtod+0x162>
   1020e:	10 61       	ori	r17, 0x10	; 16
   10210:	06 c0       	rjmp	.+12     	; 0x1021e <strtod+0x16e>
   10212:	8b 32       	cpi	r24, 0x2B	; 43
   10214:	21 f0       	breq	.+8      	; 0x1021e <strtod+0x16e>
   10216:	31 96       	adiw	r30, 0x01	; 1
   10218:	61 e0       	ldi	r22, 0x01	; 1
   1021a:	70 e0       	ldi	r23, 0x00	; 0
   1021c:	04 c0       	rjmp	.+8      	; 0x10226 <strtod+0x176>
   1021e:	81 81       	ldd	r24, Z+1	; 0x01
   10220:	32 96       	adiw	r30, 0x02	; 2
   10222:	62 e0       	ldi	r22, 0x02	; 2
   10224:	70 e0       	ldi	r23, 0x00	; 0
   10226:	80 53       	subi	r24, 0x30	; 48
   10228:	8a 30       	cpi	r24, 0x0A	; 10
   1022a:	18 f0       	brcs	.+6      	; 0x10232 <strtod+0x182>
   1022c:	e6 1b       	sub	r30, r22
   1022e:	f7 0b       	sbc	r31, r23
   10230:	1f c0       	rjmp	.+62     	; 0x10270 <strtod+0x1c0>
   10232:	60 e0       	ldi	r22, 0x00	; 0
   10234:	70 e0       	ldi	r23, 0x00	; 0
   10236:	60 38       	cpi	r22, 0x80	; 128
   10238:	9c e0       	ldi	r25, 0x0C	; 12
   1023a:	79 07       	cpc	r23, r25
   1023c:	5c f4       	brge	.+22     	; 0x10254 <strtod+0x1a4>
   1023e:	db 01       	movw	r26, r22
   10240:	aa 0f       	add	r26, r26
   10242:	bb 1f       	adc	r27, r27
   10244:	aa 0f       	add	r26, r26
   10246:	bb 1f       	adc	r27, r27
   10248:	6a 0f       	add	r22, r26
   1024a:	7b 1f       	adc	r23, r27
   1024c:	66 0f       	add	r22, r22
   1024e:	77 1f       	adc	r23, r23
   10250:	68 0f       	add	r22, r24
   10252:	71 1d       	adc	r23, r1
   10254:	31 96       	adiw	r30, 0x01	; 1
   10256:	df 01       	movw	r26, r30
   10258:	11 97       	sbiw	r26, 0x01	; 1
   1025a:	8c 91       	ld	r24, X
   1025c:	80 53       	subi	r24, 0x30	; 48
   1025e:	8a 30       	cpi	r24, 0x0A	; 10
   10260:	50 f3       	brcs	.-44     	; 0x10236 <strtod+0x186>
   10262:	14 ff       	sbrs	r17, 4
   10264:	03 c0       	rjmp	.+6      	; 0x1026c <strtod+0x1bc>
   10266:	71 95       	neg	r23
   10268:	61 95       	neg	r22
   1026a:	71 09       	sbc	r23, r1
   1026c:	c6 0f       	add	r28, r22
   1026e:	d7 1f       	adc	r29, r23
   10270:	11 ff       	sbrs	r17, 1
   10272:	08 c0       	rjmp	.+16     	; 0x10284 <strtod+0x1d4>
   10274:	c1 14       	cp	r12, r1
   10276:	d1 04       	cpc	r13, r1
   10278:	29 f0       	breq	.+10     	; 0x10284 <strtod+0x1d4>
   1027a:	cf 01       	movw	r24, r30
   1027c:	01 97       	sbiw	r24, 0x01	; 1
   1027e:	f6 01       	movw	r30, r12
   10280:	80 83       	st	Z, r24
   10282:	91 83       	std	Z+1, r25	; 0x01
   10284:	ca 01       	movw	r24, r20
   10286:	b9 01       	movw	r22, r18
   10288:	0e 94 c5 78 	call	0xf18a	; 0xf18a <__floatunsisf>
   1028c:	21 2f       	mov	r18, r17
   1028e:	23 70       	andi	r18, 0x03	; 3
   10290:	23 30       	cpi	r18, 0x03	; 3
   10292:	19 f0       	breq	.+6      	; 0x1029a <strtod+0x1ea>
   10294:	4b 01       	movw	r8, r22
   10296:	5c 01       	movw	r10, r24
   10298:	06 c0       	rjmp	.+12     	; 0x102a6 <strtod+0x1f6>
   1029a:	4b 01       	movw	r8, r22
   1029c:	5c 01       	movw	r10, r24
   1029e:	b7 fa       	bst	r11, 7
   102a0:	b0 94       	com	r11
   102a2:	b7 f8       	bld	r11, 7
   102a4:	b0 94       	com	r11
   102a6:	20 e0       	ldi	r18, 0x00	; 0
   102a8:	30 e0       	ldi	r19, 0x00	; 0
   102aa:	a9 01       	movw	r20, r18
   102ac:	c5 01       	movw	r24, r10
   102ae:	b4 01       	movw	r22, r8
   102b0:	0e 94 18 78 	call	0xf030	; 0xf030 <__cmpsf2>
   102b4:	88 23       	and	r24, r24
   102b6:	09 f4       	brne	.+2      	; 0x102ba <strtod+0x20a>
   102b8:	3e c0       	rjmp	.+124    	; 0x10336 <strtod+0x286>
   102ba:	d7 ff       	sbrs	r29, 7
   102bc:	06 c0       	rjmp	.+12     	; 0x102ca <strtod+0x21a>
   102be:	d1 95       	neg	r29
   102c0:	c1 95       	neg	r28
   102c2:	d1 09       	sbc	r29, r1
   102c4:	05 ec       	ldi	r16, 0xC5	; 197
   102c6:	12 e0       	ldi	r17, 0x02	; 2
   102c8:	02 c0       	rjmp	.+4      	; 0x102ce <strtod+0x21e>
   102ca:	0d ed       	ldi	r16, 0xDD	; 221
   102cc:	12 e0       	ldi	r17, 0x02	; 2
   102ce:	68 01       	movw	r12, r16
   102d0:	f8 e1       	ldi	r31, 0x18	; 24
   102d2:	cf 1a       	sub	r12, r31
   102d4:	d1 08       	sbc	r13, r1
   102d6:	90 e2       	ldi	r25, 0x20	; 32
   102d8:	e9 2e       	mov	r14, r25
   102da:	f1 2c       	mov	r15, r1
   102dc:	ce 15       	cp	r28, r14
   102de:	df 05       	cpc	r29, r15
   102e0:	74 f0       	brlt	.+28     	; 0x102fe <strtod+0x24e>
   102e2:	f8 01       	movw	r30, r16
   102e4:	25 91       	lpm	r18, Z+
   102e6:	35 91       	lpm	r19, Z+
   102e8:	45 91       	lpm	r20, Z+
   102ea:	54 91       	lpm	r21, Z
   102ec:	c5 01       	movw	r24, r10
   102ee:	b4 01       	movw	r22, r8
   102f0:	0e 94 bd 79 	call	0xf37a	; 0xf37a <__mulsf3>
   102f4:	4b 01       	movw	r8, r22
   102f6:	5c 01       	movw	r10, r24
   102f8:	ce 19       	sub	r28, r14
   102fa:	df 09       	sbc	r29, r15
   102fc:	ef cf       	rjmp	.-34     	; 0x102dc <strtod+0x22c>
   102fe:	04 50       	subi	r16, 0x04	; 4
   10300:	11 09       	sbc	r17, r1
   10302:	f5 94       	asr	r15
   10304:	e7 94       	ror	r14
   10306:	0c 15       	cp	r16, r12
   10308:	1d 05       	cpc	r17, r13
   1030a:	41 f7       	brne	.-48     	; 0x102dc <strtod+0x22c>
   1030c:	8a 2d       	mov	r24, r10
   1030e:	88 0f       	add	r24, r24
   10310:	8b 2d       	mov	r24, r11
   10312:	88 1f       	adc	r24, r24
   10314:	8f 3f       	cpi	r24, 0xFF	; 255
   10316:	49 f0       	breq	.+18     	; 0x1032a <strtod+0x27a>
   10318:	20 e0       	ldi	r18, 0x00	; 0
   1031a:	30 e0       	ldi	r19, 0x00	; 0
   1031c:	a9 01       	movw	r20, r18
   1031e:	c5 01       	movw	r24, r10
   10320:	b4 01       	movw	r22, r8
   10322:	0e 94 18 78 	call	0xf030	; 0xf030 <__cmpsf2>
   10326:	81 11       	cpse	r24, r1
   10328:	06 c0       	rjmp	.+12     	; 0x10336 <strtod+0x286>
   1032a:	82 e2       	ldi	r24, 0x22	; 34
   1032c:	90 e0       	ldi	r25, 0x00	; 0
   1032e:	80 93 df 4a 	sts	0x4ADF, r24	; 0x804adf <errno>
   10332:	90 93 e0 4a 	sts	0x4AE0, r25	; 0x804ae0 <errno+0x1>
   10336:	c5 01       	movw	r24, r10
   10338:	b4 01       	movw	r22, r8
   1033a:	09 c0       	rjmp	.+18     	; 0x1034e <strtod+0x29e>
   1033c:	60 e0       	ldi	r22, 0x00	; 0
   1033e:	70 e0       	ldi	r23, 0x00	; 0
   10340:	80 e8       	ldi	r24, 0x80	; 128
   10342:	9f ef       	ldi	r25, 0xFF	; 255
   10344:	04 c0       	rjmp	.+8      	; 0x1034e <strtod+0x29e>
   10346:	60 e0       	ldi	r22, 0x00	; 0
   10348:	70 e0       	ldi	r23, 0x00	; 0
   1034a:	80 ec       	ldi	r24, 0xC0	; 192
   1034c:	9f e7       	ldi	r25, 0x7F	; 127
   1034e:	df 91       	pop	r29
   10350:	cf 91       	pop	r28
   10352:	1f 91       	pop	r17
   10354:	0f 91       	pop	r16
   10356:	ff 90       	pop	r15
   10358:	ef 90       	pop	r14
   1035a:	df 90       	pop	r13
   1035c:	cf 90       	pop	r12
   1035e:	bf 90       	pop	r11
   10360:	af 90       	pop	r10
   10362:	9f 90       	pop	r9
   10364:	8f 90       	pop	r8
   10366:	08 95       	ret

00010368 <__ftoa_engine>:
   10368:	28 30       	cpi	r18, 0x08	; 8
   1036a:	08 f0       	brcs	.+2      	; 0x1036e <__ftoa_engine+0x6>
   1036c:	27 e0       	ldi	r18, 0x07	; 7
   1036e:	33 27       	eor	r19, r19
   10370:	da 01       	movw	r26, r20
   10372:	99 0f       	add	r25, r25
   10374:	31 1d       	adc	r19, r1
   10376:	87 fd       	sbrc	r24, 7
   10378:	91 60       	ori	r25, 0x01	; 1
   1037a:	00 96       	adiw	r24, 0x00	; 0
   1037c:	61 05       	cpc	r22, r1
   1037e:	71 05       	cpc	r23, r1
   10380:	39 f4       	brne	.+14     	; 0x10390 <__ftoa_engine+0x28>
   10382:	32 60       	ori	r19, 0x02	; 2
   10384:	2e 5f       	subi	r18, 0xFE	; 254
   10386:	3d 93       	st	X+, r19
   10388:	30 e3       	ldi	r19, 0x30	; 48
   1038a:	2a 95       	dec	r18
   1038c:	e1 f7       	brne	.-8      	; 0x10386 <__ftoa_engine+0x1e>
   1038e:	08 95       	ret
   10390:	9f 3f       	cpi	r25, 0xFF	; 255
   10392:	30 f0       	brcs	.+12     	; 0x103a0 <__ftoa_engine+0x38>
   10394:	80 38       	cpi	r24, 0x80	; 128
   10396:	71 05       	cpc	r23, r1
   10398:	61 05       	cpc	r22, r1
   1039a:	09 f0       	breq	.+2      	; 0x1039e <__ftoa_engine+0x36>
   1039c:	3c 5f       	subi	r19, 0xFC	; 252
   1039e:	3c 5f       	subi	r19, 0xFC	; 252
   103a0:	3d 93       	st	X+, r19
   103a2:	91 30       	cpi	r25, 0x01	; 1
   103a4:	08 f0       	brcs	.+2      	; 0x103a8 <__ftoa_engine+0x40>
   103a6:	80 68       	ori	r24, 0x80	; 128
   103a8:	91 1d       	adc	r25, r1
   103aa:	df 93       	push	r29
   103ac:	cf 93       	push	r28
   103ae:	1f 93       	push	r17
   103b0:	0f 93       	push	r16
   103b2:	ff 92       	push	r15
   103b4:	ef 92       	push	r14
   103b6:	19 2f       	mov	r17, r25
   103b8:	98 7f       	andi	r25, 0xF8	; 248
   103ba:	96 95       	lsr	r25
   103bc:	e9 2f       	mov	r30, r25
   103be:	96 95       	lsr	r25
   103c0:	96 95       	lsr	r25
   103c2:	e9 0f       	add	r30, r25
   103c4:	ff 27       	eor	r31, r31
   103c6:	e5 5c       	subi	r30, 0xC5	; 197
   103c8:	fc 4f       	sbci	r31, 0xFC	; 252
   103ca:	99 27       	eor	r25, r25
   103cc:	33 27       	eor	r19, r19
   103ce:	ee 24       	eor	r14, r14
   103d0:	ff 24       	eor	r15, r15
   103d2:	a7 01       	movw	r20, r14
   103d4:	e7 01       	movw	r28, r14
   103d6:	05 90       	lpm	r0, Z+
   103d8:	08 94       	sec
   103da:	07 94       	ror	r0
   103dc:	28 f4       	brcc	.+10     	; 0x103e8 <__ftoa_engine+0x80>
   103de:	36 0f       	add	r19, r22
   103e0:	e7 1e       	adc	r14, r23
   103e2:	f8 1e       	adc	r15, r24
   103e4:	49 1f       	adc	r20, r25
   103e6:	51 1d       	adc	r21, r1
   103e8:	66 0f       	add	r22, r22
   103ea:	77 1f       	adc	r23, r23
   103ec:	88 1f       	adc	r24, r24
   103ee:	99 1f       	adc	r25, r25
   103f0:	06 94       	lsr	r0
   103f2:	a1 f7       	brne	.-24     	; 0x103dc <__ftoa_engine+0x74>
   103f4:	05 90       	lpm	r0, Z+
   103f6:	07 94       	ror	r0
   103f8:	28 f4       	brcc	.+10     	; 0x10404 <__ftoa_engine+0x9c>
   103fa:	e7 0e       	add	r14, r23
   103fc:	f8 1e       	adc	r15, r24
   103fe:	49 1f       	adc	r20, r25
   10400:	56 1f       	adc	r21, r22
   10402:	c1 1d       	adc	r28, r1
   10404:	77 0f       	add	r23, r23
   10406:	88 1f       	adc	r24, r24
   10408:	99 1f       	adc	r25, r25
   1040a:	66 1f       	adc	r22, r22
   1040c:	06 94       	lsr	r0
   1040e:	a1 f7       	brne	.-24     	; 0x103f8 <__ftoa_engine+0x90>
   10410:	05 90       	lpm	r0, Z+
   10412:	07 94       	ror	r0
   10414:	28 f4       	brcc	.+10     	; 0x10420 <__ftoa_engine+0xb8>
   10416:	f8 0e       	add	r15, r24
   10418:	49 1f       	adc	r20, r25
   1041a:	56 1f       	adc	r21, r22
   1041c:	c7 1f       	adc	r28, r23
   1041e:	d1 1d       	adc	r29, r1
   10420:	88 0f       	add	r24, r24
   10422:	99 1f       	adc	r25, r25
   10424:	66 1f       	adc	r22, r22
   10426:	77 1f       	adc	r23, r23
   10428:	06 94       	lsr	r0
   1042a:	a1 f7       	brne	.-24     	; 0x10414 <__ftoa_engine+0xac>
   1042c:	05 90       	lpm	r0, Z+
   1042e:	07 94       	ror	r0
   10430:	20 f4       	brcc	.+8      	; 0x1043a <__ftoa_engine+0xd2>
   10432:	49 0f       	add	r20, r25
   10434:	56 1f       	adc	r21, r22
   10436:	c7 1f       	adc	r28, r23
   10438:	d8 1f       	adc	r29, r24
   1043a:	99 0f       	add	r25, r25
   1043c:	66 1f       	adc	r22, r22
   1043e:	77 1f       	adc	r23, r23
   10440:	88 1f       	adc	r24, r24
   10442:	06 94       	lsr	r0
   10444:	a9 f7       	brne	.-22     	; 0x10430 <__ftoa_engine+0xc8>
   10446:	84 91       	lpm	r24, Z
   10448:	10 95       	com	r17
   1044a:	17 70       	andi	r17, 0x07	; 7
   1044c:	41 f0       	breq	.+16     	; 0x1045e <__ftoa_engine+0xf6>
   1044e:	d6 95       	lsr	r29
   10450:	c7 95       	ror	r28
   10452:	57 95       	ror	r21
   10454:	47 95       	ror	r20
   10456:	f7 94       	ror	r15
   10458:	e7 94       	ror	r14
   1045a:	1a 95       	dec	r17
   1045c:	c1 f7       	brne	.-16     	; 0x1044e <__ftoa_engine+0xe6>
   1045e:	e1 ee       	ldi	r30, 0xE1	; 225
   10460:	f2 e0       	ldi	r31, 0x02	; 2
   10462:	68 94       	set
   10464:	15 90       	lpm	r1, Z+
   10466:	15 91       	lpm	r17, Z+
   10468:	35 91       	lpm	r19, Z+
   1046a:	65 91       	lpm	r22, Z+
   1046c:	95 91       	lpm	r25, Z+
   1046e:	05 90       	lpm	r0, Z+
   10470:	7f e2       	ldi	r23, 0x2F	; 47
   10472:	73 95       	inc	r23
   10474:	e1 18       	sub	r14, r1
   10476:	f1 0a       	sbc	r15, r17
   10478:	43 0b       	sbc	r20, r19
   1047a:	56 0b       	sbc	r21, r22
   1047c:	c9 0b       	sbc	r28, r25
   1047e:	d0 09       	sbc	r29, r0
   10480:	c0 f7       	brcc	.-16     	; 0x10472 <__ftoa_engine+0x10a>
   10482:	e1 0c       	add	r14, r1
   10484:	f1 1e       	adc	r15, r17
   10486:	43 1f       	adc	r20, r19
   10488:	56 1f       	adc	r21, r22
   1048a:	c9 1f       	adc	r28, r25
   1048c:	d0 1d       	adc	r29, r0
   1048e:	7e f4       	brtc	.+30     	; 0x104ae <__ftoa_engine+0x146>
   10490:	70 33       	cpi	r23, 0x30	; 48
   10492:	11 f4       	brne	.+4      	; 0x10498 <__ftoa_engine+0x130>
   10494:	8a 95       	dec	r24
   10496:	e6 cf       	rjmp	.-52     	; 0x10464 <__ftoa_engine+0xfc>
   10498:	e8 94       	clt
   1049a:	01 50       	subi	r16, 0x01	; 1
   1049c:	30 f0       	brcs	.+12     	; 0x104aa <__ftoa_engine+0x142>
   1049e:	08 0f       	add	r16, r24
   104a0:	0a f4       	brpl	.+2      	; 0x104a4 <__ftoa_engine+0x13c>
   104a2:	00 27       	eor	r16, r16
   104a4:	02 17       	cp	r16, r18
   104a6:	08 f4       	brcc	.+2      	; 0x104aa <__ftoa_engine+0x142>
   104a8:	20 2f       	mov	r18, r16
   104aa:	23 95       	inc	r18
   104ac:	02 2f       	mov	r16, r18
   104ae:	7a 33       	cpi	r23, 0x3A	; 58
   104b0:	28 f0       	brcs	.+10     	; 0x104bc <__ftoa_engine+0x154>
   104b2:	79 e3       	ldi	r23, 0x39	; 57
   104b4:	7d 93       	st	X+, r23
   104b6:	2a 95       	dec	r18
   104b8:	e9 f7       	brne	.-6      	; 0x104b4 <__ftoa_engine+0x14c>
   104ba:	10 c0       	rjmp	.+32     	; 0x104dc <__ftoa_engine+0x174>
   104bc:	7d 93       	st	X+, r23
   104be:	2a 95       	dec	r18
   104c0:	89 f6       	brne	.-94     	; 0x10464 <__ftoa_engine+0xfc>
   104c2:	06 94       	lsr	r0
   104c4:	97 95       	ror	r25
   104c6:	67 95       	ror	r22
   104c8:	37 95       	ror	r19
   104ca:	17 95       	ror	r17
   104cc:	17 94       	ror	r1
   104ce:	e1 18       	sub	r14, r1
   104d0:	f1 0a       	sbc	r15, r17
   104d2:	43 0b       	sbc	r20, r19
   104d4:	56 0b       	sbc	r21, r22
   104d6:	c9 0b       	sbc	r28, r25
   104d8:	d0 09       	sbc	r29, r0
   104da:	98 f0       	brcs	.+38     	; 0x10502 <__ftoa_engine+0x19a>
   104dc:	23 95       	inc	r18
   104de:	7e 91       	ld	r23, -X
   104e0:	73 95       	inc	r23
   104e2:	7a 33       	cpi	r23, 0x3A	; 58
   104e4:	08 f0       	brcs	.+2      	; 0x104e8 <__ftoa_engine+0x180>
   104e6:	70 e3       	ldi	r23, 0x30	; 48
   104e8:	7c 93       	st	X, r23
   104ea:	20 13       	cpse	r18, r16
   104ec:	b8 f7       	brcc	.-18     	; 0x104dc <__ftoa_engine+0x174>
   104ee:	7e 91       	ld	r23, -X
   104f0:	70 61       	ori	r23, 0x10	; 16
   104f2:	7d 93       	st	X+, r23
   104f4:	30 f0       	brcs	.+12     	; 0x10502 <__ftoa_engine+0x19a>
   104f6:	83 95       	inc	r24
   104f8:	71 e3       	ldi	r23, 0x31	; 49
   104fa:	7d 93       	st	X+, r23
   104fc:	70 e3       	ldi	r23, 0x30	; 48
   104fe:	2a 95       	dec	r18
   10500:	e1 f7       	brne	.-8      	; 0x104fa <__ftoa_engine+0x192>
   10502:	11 24       	eor	r1, r1
   10504:	ef 90       	pop	r14
   10506:	ff 90       	pop	r15
   10508:	0f 91       	pop	r16
   1050a:	1f 91       	pop	r17
   1050c:	cf 91       	pop	r28
   1050e:	df 91       	pop	r29
   10510:	99 27       	eor	r25, r25
   10512:	87 fd       	sbrc	r24, 7
   10514:	90 95       	com	r25
   10516:	08 95       	ret

00010518 <isspace>:
   10518:	91 11       	cpse	r25, r1
   1051a:	0c 94 5d 83 	jmp	0x106ba	; 0x106ba <__ctype_isfalse>
   1051e:	80 32       	cpi	r24, 0x20	; 32
   10520:	19 f0       	breq	.+6      	; 0x10528 <isspace+0x10>
   10522:	89 50       	subi	r24, 0x09	; 9
   10524:	85 50       	subi	r24, 0x05	; 5
   10526:	c8 f7       	brcc	.-14     	; 0x1051a <isspace+0x2>
   10528:	08 95       	ret

0001052a <strncasecmp_P>:
   1052a:	fb 01       	movw	r30, r22
   1052c:	dc 01       	movw	r26, r24
   1052e:	41 50       	subi	r20, 0x01	; 1
   10530:	50 40       	sbci	r21, 0x00	; 0
   10532:	88 f0       	brcs	.+34     	; 0x10556 <strncasecmp_P+0x2c>
   10534:	8d 91       	ld	r24, X+
   10536:	81 34       	cpi	r24, 0x41	; 65
   10538:	1c f0       	brlt	.+6      	; 0x10540 <strncasecmp_P+0x16>
   1053a:	8b 35       	cpi	r24, 0x5B	; 91
   1053c:	0c f4       	brge	.+2      	; 0x10540 <strncasecmp_P+0x16>
   1053e:	80 5e       	subi	r24, 0xE0	; 224
   10540:	65 91       	lpm	r22, Z+
   10542:	61 34       	cpi	r22, 0x41	; 65
   10544:	1c f0       	brlt	.+6      	; 0x1054c <strncasecmp_P+0x22>
   10546:	6b 35       	cpi	r22, 0x5B	; 91
   10548:	0c f4       	brge	.+2      	; 0x1054c <strncasecmp_P+0x22>
   1054a:	60 5e       	subi	r22, 0xE0	; 224
   1054c:	86 1b       	sub	r24, r22
   1054e:	61 11       	cpse	r22, r1
   10550:	71 f3       	breq	.-36     	; 0x1052e <strncasecmp_P+0x4>
   10552:	99 0b       	sbc	r25, r25
   10554:	08 95       	ret
   10556:	88 1b       	sub	r24, r24
   10558:	fc cf       	rjmp	.-8      	; 0x10552 <strncasecmp_P+0x28>

0001055a <strnlen_P>:
   1055a:	fc 01       	movw	r30, r24
   1055c:	05 90       	lpm	r0, Z+
   1055e:	61 50       	subi	r22, 0x01	; 1
   10560:	70 40       	sbci	r23, 0x00	; 0
   10562:	01 10       	cpse	r0, r1
   10564:	d8 f7       	brcc	.-10     	; 0x1055c <strnlen_P+0x2>
   10566:	80 95       	com	r24
   10568:	90 95       	com	r25
   1056a:	8e 0f       	add	r24, r30
   1056c:	9f 1f       	adc	r25, r31
   1056e:	08 95       	ret

00010570 <strnlen>:
   10570:	fc 01       	movw	r30, r24
   10572:	61 50       	subi	r22, 0x01	; 1
   10574:	70 40       	sbci	r23, 0x00	; 0
   10576:	01 90       	ld	r0, Z+
   10578:	01 10       	cpse	r0, r1
   1057a:	d8 f7       	brcc	.-10     	; 0x10572 <strnlen+0x2>
   1057c:	80 95       	com	r24
   1057e:	90 95       	com	r25
   10580:	8e 0f       	add	r24, r30
   10582:	9f 1f       	adc	r25, r31
   10584:	08 95       	ret

00010586 <fputc>:
   10586:	0f 93       	push	r16
   10588:	1f 93       	push	r17
   1058a:	cf 93       	push	r28
   1058c:	df 93       	push	r29
   1058e:	fb 01       	movw	r30, r22
   10590:	23 81       	ldd	r18, Z+3	; 0x03
   10592:	21 fd       	sbrc	r18, 1
   10594:	03 c0       	rjmp	.+6      	; 0x1059c <fputc+0x16>
   10596:	8f ef       	ldi	r24, 0xFF	; 255
   10598:	9f ef       	ldi	r25, 0xFF	; 255
   1059a:	2c c0       	rjmp	.+88     	; 0x105f4 <fputc+0x6e>
   1059c:	22 ff       	sbrs	r18, 2
   1059e:	16 c0       	rjmp	.+44     	; 0x105cc <fputc+0x46>
   105a0:	46 81       	ldd	r20, Z+6	; 0x06
   105a2:	57 81       	ldd	r21, Z+7	; 0x07
   105a4:	24 81       	ldd	r18, Z+4	; 0x04
   105a6:	35 81       	ldd	r19, Z+5	; 0x05
   105a8:	42 17       	cp	r20, r18
   105aa:	53 07       	cpc	r21, r19
   105ac:	44 f4       	brge	.+16     	; 0x105be <fputc+0x38>
   105ae:	a0 81       	ld	r26, Z
   105b0:	b1 81       	ldd	r27, Z+1	; 0x01
   105b2:	9d 01       	movw	r18, r26
   105b4:	2f 5f       	subi	r18, 0xFF	; 255
   105b6:	3f 4f       	sbci	r19, 0xFF	; 255
   105b8:	20 83       	st	Z, r18
   105ba:	31 83       	std	Z+1, r19	; 0x01
   105bc:	8c 93       	st	X, r24
   105be:	26 81       	ldd	r18, Z+6	; 0x06
   105c0:	37 81       	ldd	r19, Z+7	; 0x07
   105c2:	2f 5f       	subi	r18, 0xFF	; 255
   105c4:	3f 4f       	sbci	r19, 0xFF	; 255
   105c6:	26 83       	std	Z+6, r18	; 0x06
   105c8:	37 83       	std	Z+7, r19	; 0x07
   105ca:	14 c0       	rjmp	.+40     	; 0x105f4 <fputc+0x6e>
   105cc:	8b 01       	movw	r16, r22
   105ce:	ec 01       	movw	r28, r24
   105d0:	fb 01       	movw	r30, r22
   105d2:	00 84       	ldd	r0, Z+8	; 0x08
   105d4:	f1 85       	ldd	r31, Z+9	; 0x09
   105d6:	e0 2d       	mov	r30, r0
   105d8:	09 95       	icall
   105da:	89 2b       	or	r24, r25
   105dc:	e1 f6       	brne	.-72     	; 0x10596 <fputc+0x10>
   105de:	d8 01       	movw	r26, r16
   105e0:	16 96       	adiw	r26, 0x06	; 6
   105e2:	8d 91       	ld	r24, X+
   105e4:	9c 91       	ld	r25, X
   105e6:	17 97       	sbiw	r26, 0x07	; 7
   105e8:	01 96       	adiw	r24, 0x01	; 1
   105ea:	16 96       	adiw	r26, 0x06	; 6
   105ec:	8d 93       	st	X+, r24
   105ee:	9c 93       	st	X, r25
   105f0:	17 97       	sbiw	r26, 0x07	; 7
   105f2:	ce 01       	movw	r24, r28
   105f4:	df 91       	pop	r29
   105f6:	cf 91       	pop	r28
   105f8:	1f 91       	pop	r17
   105fa:	0f 91       	pop	r16
   105fc:	08 95       	ret

000105fe <__ultoa_invert>:
   105fe:	fa 01       	movw	r30, r20
   10600:	aa 27       	eor	r26, r26
   10602:	28 30       	cpi	r18, 0x08	; 8
   10604:	51 f1       	breq	.+84     	; 0x1065a <__ultoa_invert+0x5c>
   10606:	20 31       	cpi	r18, 0x10	; 16
   10608:	81 f1       	breq	.+96     	; 0x1066a <__ultoa_invert+0x6c>
   1060a:	e8 94       	clt
   1060c:	6f 93       	push	r22
   1060e:	6e 7f       	andi	r22, 0xFE	; 254
   10610:	6e 5f       	subi	r22, 0xFE	; 254
   10612:	7f 4f       	sbci	r23, 0xFF	; 255
   10614:	8f 4f       	sbci	r24, 0xFF	; 255
   10616:	9f 4f       	sbci	r25, 0xFF	; 255
   10618:	af 4f       	sbci	r26, 0xFF	; 255
   1061a:	b1 e0       	ldi	r27, 0x01	; 1
   1061c:	3e d0       	rcall	.+124    	; 0x1069a <__ultoa_invert+0x9c>
   1061e:	b4 e0       	ldi	r27, 0x04	; 4
   10620:	3c d0       	rcall	.+120    	; 0x1069a <__ultoa_invert+0x9c>
   10622:	67 0f       	add	r22, r23
   10624:	78 1f       	adc	r23, r24
   10626:	89 1f       	adc	r24, r25
   10628:	9a 1f       	adc	r25, r26
   1062a:	a1 1d       	adc	r26, r1
   1062c:	68 0f       	add	r22, r24
   1062e:	79 1f       	adc	r23, r25
   10630:	8a 1f       	adc	r24, r26
   10632:	91 1d       	adc	r25, r1
   10634:	a1 1d       	adc	r26, r1
   10636:	6a 0f       	add	r22, r26
   10638:	71 1d       	adc	r23, r1
   1063a:	81 1d       	adc	r24, r1
   1063c:	91 1d       	adc	r25, r1
   1063e:	a1 1d       	adc	r26, r1
   10640:	20 d0       	rcall	.+64     	; 0x10682 <__ultoa_invert+0x84>
   10642:	09 f4       	brne	.+2      	; 0x10646 <__ultoa_invert+0x48>
   10644:	68 94       	set
   10646:	3f 91       	pop	r19
   10648:	2a e0       	ldi	r18, 0x0A	; 10
   1064a:	26 9f       	mul	r18, r22
   1064c:	11 24       	eor	r1, r1
   1064e:	30 19       	sub	r19, r0
   10650:	30 5d       	subi	r19, 0xD0	; 208
   10652:	31 93       	st	Z+, r19
   10654:	de f6       	brtc	.-74     	; 0x1060c <__ultoa_invert+0xe>
   10656:	cf 01       	movw	r24, r30
   10658:	08 95       	ret
   1065a:	46 2f       	mov	r20, r22
   1065c:	47 70       	andi	r20, 0x07	; 7
   1065e:	40 5d       	subi	r20, 0xD0	; 208
   10660:	41 93       	st	Z+, r20
   10662:	b3 e0       	ldi	r27, 0x03	; 3
   10664:	0f d0       	rcall	.+30     	; 0x10684 <__ultoa_invert+0x86>
   10666:	c9 f7       	brne	.-14     	; 0x1065a <__ultoa_invert+0x5c>
   10668:	f6 cf       	rjmp	.-20     	; 0x10656 <__ultoa_invert+0x58>
   1066a:	46 2f       	mov	r20, r22
   1066c:	4f 70       	andi	r20, 0x0F	; 15
   1066e:	40 5d       	subi	r20, 0xD0	; 208
   10670:	4a 33       	cpi	r20, 0x3A	; 58
   10672:	18 f0       	brcs	.+6      	; 0x1067a <__ultoa_invert+0x7c>
   10674:	49 5d       	subi	r20, 0xD9	; 217
   10676:	31 fd       	sbrc	r19, 1
   10678:	40 52       	subi	r20, 0x20	; 32
   1067a:	41 93       	st	Z+, r20
   1067c:	02 d0       	rcall	.+4      	; 0x10682 <__ultoa_invert+0x84>
   1067e:	a9 f7       	brne	.-22     	; 0x1066a <__ultoa_invert+0x6c>
   10680:	ea cf       	rjmp	.-44     	; 0x10656 <__ultoa_invert+0x58>
   10682:	b4 e0       	ldi	r27, 0x04	; 4
   10684:	a6 95       	lsr	r26
   10686:	97 95       	ror	r25
   10688:	87 95       	ror	r24
   1068a:	77 95       	ror	r23
   1068c:	67 95       	ror	r22
   1068e:	ba 95       	dec	r27
   10690:	c9 f7       	brne	.-14     	; 0x10684 <__ultoa_invert+0x86>
   10692:	00 97       	sbiw	r24, 0x00	; 0
   10694:	61 05       	cpc	r22, r1
   10696:	71 05       	cpc	r23, r1
   10698:	08 95       	ret
   1069a:	9b 01       	movw	r18, r22
   1069c:	ac 01       	movw	r20, r24
   1069e:	0a 2e       	mov	r0, r26
   106a0:	06 94       	lsr	r0
   106a2:	57 95       	ror	r21
   106a4:	47 95       	ror	r20
   106a6:	37 95       	ror	r19
   106a8:	27 95       	ror	r18
   106aa:	ba 95       	dec	r27
   106ac:	c9 f7       	brne	.-14     	; 0x106a0 <__ultoa_invert+0xa2>
   106ae:	62 0f       	add	r22, r18
   106b0:	73 1f       	adc	r23, r19
   106b2:	84 1f       	adc	r24, r20
   106b4:	95 1f       	adc	r25, r21
   106b6:	a0 1d       	adc	r26, r0
   106b8:	08 95       	ret

000106ba <__ctype_isfalse>:
   106ba:	99 27       	eor	r25, r25
   106bc:	88 27       	eor	r24, r24

000106be <__ctype_istrue>:
   106be:	08 95       	ret

000106c0 <eeprom_read_byte>:
   106c0:	03 d0       	rcall	.+6      	; 0x106c8 <eeprom_mapen>
   106c2:	80 81       	ld	r24, Z
   106c4:	99 27       	eor	r25, r25
   106c6:	08 95       	ret

000106c8 <eeprom_mapen>:
   106c8:	fc 01       	movw	r30, r24
   106ca:	e0 50       	subi	r30, 0x00	; 0
   106cc:	fc 4e       	sbci	r31, 0xEC	; 236
   106ce:	08 95       	ret

000106d0 <eeprom_read_dword>:
   106d0:	0e 94 64 83 	call	0x106c8	; 0x106c8 <eeprom_mapen>
   106d4:	60 81       	ld	r22, Z
   106d6:	71 81       	ldd	r23, Z+1	; 0x01
   106d8:	82 81       	ldd	r24, Z+2	; 0x02
   106da:	93 81       	ldd	r25, Z+3	; 0x03
   106dc:	08 95       	ret

000106de <eeprom_read_word>:
   106de:	0e 94 64 83 	call	0x106c8	; 0x106c8 <eeprom_mapen>
   106e2:	80 81       	ld	r24, Z
   106e4:	91 81       	ldd	r25, Z+1	; 0x01
   106e6:	08 95       	ret

000106e8 <__divmodqi4>:
   106e8:	87 fb       	bst	r24, 7
   106ea:	08 2e       	mov	r0, r24
   106ec:	06 26       	eor	r0, r22
   106ee:	87 fd       	sbrc	r24, 7
   106f0:	81 95       	neg	r24
   106f2:	67 fd       	sbrc	r22, 7
   106f4:	61 95       	neg	r22
   106f6:	0e 94 89 83 	call	0x10712	; 0x10712 <__udivmodqi4>
   106fa:	0e f4       	brtc	.+2      	; 0x106fe <__divmodqi4_1>
   106fc:	91 95       	neg	r25

000106fe <__divmodqi4_1>:
   106fe:	07 fc       	sbrc	r0, 7
   10700:	81 95       	neg	r24

00010702 <__divmodqi4_exit>:
   10702:	08 95       	ret

00010704 <__xload_1>:
   10704:	57 fd       	sbrc	r21, 7
   10706:	03 c0       	rjmp	.+6      	; 0x1070e <__xload_1+0xa>
   10708:	5b bf       	out	0x3b, r21	; 59
   1070a:	67 91       	elpm	r22, Z+
   1070c:	08 95       	ret
   1070e:	60 81       	ld	r22, Z
   10710:	08 95       	ret

00010712 <__udivmodqi4>:
   10712:	99 1b       	sub	r25, r25
   10714:	79 e0       	ldi	r23, 0x09	; 9
   10716:	04 c0       	rjmp	.+8      	; 0x10720 <__udivmodqi4_ep>

00010718 <__udivmodqi4_loop>:
   10718:	99 1f       	adc	r25, r25
   1071a:	96 17       	cp	r25, r22
   1071c:	08 f0       	brcs	.+2      	; 0x10720 <__udivmodqi4_ep>
   1071e:	96 1b       	sub	r25, r22

00010720 <__udivmodqi4_ep>:
   10720:	88 1f       	adc	r24, r24
   10722:	7a 95       	dec	r23
   10724:	c9 f7       	brne	.-14     	; 0x10718 <__udivmodqi4_loop>
   10726:	80 95       	com	r24
   10728:	08 95       	ret

0001072a <__do_global_dtors>:
   1072a:	12 e0       	ldi	r17, 0x02	; 2
   1072c:	c6 e5       	ldi	r28, 0x56	; 86
   1072e:	d2 e0       	ldi	r29, 0x02	; 2
   10730:	04 c0       	rjmp	.+8      	; 0x1073a <__do_global_dtors+0x10>
   10732:	fe 01       	movw	r30, r28
   10734:	0e 94 a3 7a 	call	0xf546	; 0xf546 <__tablejump2__>
   10738:	21 96       	adiw	r28, 0x01	; 1
   1073a:	c8 35       	cpi	r28, 0x58	; 88
   1073c:	d1 07       	cpc	r29, r17
   1073e:	c9 f7       	brne	.-14     	; 0x10732 <__do_global_dtors+0x8>
   10740:	f8 94       	cli

00010742 <__stop_program>:
   10742:	ff cf       	rjmp	.-2      	; 0x10742 <__stop_program>
